Released ECX*3*92 SEQ #89
Extracted from mail message
**KIDS**:ECX*3.0*92^

**INSTALL NAME**
ECX*3.0*92
"BLD",6671,0)
ECX*3.0*92^DSS EXTRACTS^0^3061102^y
"BLD",6671,4,0)
^9.64PA^727.1^19
"BLD",6671,4,727.1,0)
727.1
"BLD",6671,4,727.1,222)
n^n^f^^^^y^m^n
"BLD",6671,4,727.1,224)

"BLD",6671,4,727.802,0)
727.802
"BLD",6671,4,727.802,2,0)
^9.641^727.802^1
"BLD",6671,4,727.802,2,727.802,0)
ADMISSION EXTRACT  (File-top level)
"BLD",6671,4,727.802,2,727.802,1,0)
^9.6411^79^7
"BLD",6671,4,727.802,2,727.802,1,60,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.802,2,727.802,1,76,0)
ERI
"BLD",6671,4,727.802,2,727.802,1,77,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.802,2,727.802,1,78,0)
ENCOUNTER EC
"BLD",6671,4,727.802,2,727.802,1,79,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.802,2,727.802,1,80,0)
ENCOUNTER MST
"BLD",6671,4,727.802,2,727.802,1,81,0)
RADIATION ENCOUNTER INDICATOR
"BLD",6671,4,727.802,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.802,224)

"BLD",6671,4,727.808,0)
727.808
"BLD",6671,4,727.808,2,0)
^9.641^727.808^1
"BLD",6671,4,727.808,2,727.808,0)
PHYSICAL MOVEMENT EXTRACT  (File-top level)
"BLD",6671,4,727.808,2,727.808,1,0)
^9.6411^32^1
"BLD",6671,4,727.808,2,727.808,1,32,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.808,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.808,224)

"BLD",6671,4,727.809,0)
727.809
"BLD",6671,4,727.809,2,0)
^9.641^727.809^1
"BLD",6671,4,727.809,2,727.809,0)
UNIT DOSE LOCAL EXTRACT  (File-top level)
"BLD",6671,4,727.809,2,727.809,1,0)
^9.6411^76^3
"BLD",6671,4,727.809,2,727.809,1,28,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.809,2,727.809,1,75,0)
ERI
"BLD",6671,4,727.809,2,727.809,1,76,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",6671,4,727.809,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.809,224)

"BLD",6671,4,727.81,0)
727.81
"BLD",6671,4,727.81,2,0)
^9.641^727.81^1
"BLD",6671,4,727.81,2,727.81,0)
PRESCRIPTION EXTRACT  (File-top level)
"BLD",6671,4,727.81,2,727.81,1,0)
^9.6411^91^9
"BLD",6671,4,727.81,2,727.81,1,68,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.81,2,727.81,1,84,0)
ERI
"BLD",6671,4,727.81,2,727.81,1,85,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.81,2,727.81,1,86,0)
ENCOUNTER EC
"BLD",6671,4,727.81,2,727.81,1,87,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.81,2,727.81,1,88,0)
ENCOUNTER MST
"BLD",6671,4,727.81,2,727.81,1,89,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",6671,4,727.81,2,727.81,1,90,0)
RADIATION ENCOUNTER INDICATOR
"BLD",6671,4,727.81,2,727.81,1,91,0)
SERVICE CONNECTED RX
"BLD",6671,4,727.81,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.81,224)

"BLD",6671,4,727.811,0)
727.811
"BLD",6671,4,727.811,2,0)
^9.641^727.811^1
"BLD",6671,4,727.811,2,727.811,0)
SURGERY EXTRACT  (File-top level)
"BLD",6671,4,727.811,2,727.811,1,0)
^9.6411^79^4
"BLD",6671,4,727.811,2,727.811,1,57,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.811,2,727.811,1,77,0)
ERI
"BLD",6671,4,727.811,2,727.811,1,78,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.811,2,727.811,1,79,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.811,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.811,224)

"BLD",6671,4,727.812,0)
727.812
"BLD",6671,4,727.812,2,0)
^9.641^727.812^1
"BLD",6671,4,727.812,2,727.812,0)
MENTAL HEALTH EXTRACT  (File-top level)
"BLD",6671,4,727.812,2,727.812,1,0)
^9.6411^61^2
"BLD",6671,4,727.812,2,727.812,1,45,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.812,2,727.812,1,61,0)
AGENT ORANGE STATUS
"BLD",6671,4,727.812,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.812,224)

"BLD",6671,4,727.813,0)
727.813
"BLD",6671,4,727.813,2,0)
^9.641^727.813^1
"BLD",6671,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",6671,4,727.813,2,727.813,1,0)
^9.6411^38^1
"BLD",6671,4,727.813,2,727.813,1,38,0)
ERI
"BLD",6671,4,727.813,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.813,224)

"BLD",6671,4,727.814,0)
727.814
"BLD",6671,4,727.814,2,0)
^9.641^727.814^1
"BLD",6671,4,727.814,2,727.814,0)
RADIOLOGY EXTRACT  (File-top level)
"BLD",6671,4,727.814,2,727.814,1,0)
^9.6411^43^1
"BLD",6671,4,727.814,2,727.814,1,43,0)
ERI
"BLD",6671,4,727.814,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.814,224)

"BLD",6671,4,727.815,0)
727.815
"BLD",6671,4,727.815,2,0)
^9.641^727.815^1
"BLD",6671,4,727.815,2,727.815,0)
EVENT CAPTURE LOCAL EXTRACT  (File-top level)
"BLD",6671,4,727.815,2,727.815,1,0)
^9.6411^86^7
"BLD",6671,4,727.815,2,727.815,1,83,0)
ERI
"BLD",6671,4,727.815,2,727.815,1,84,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.815,2,727.815,1,85,0)
ENCOUNTER EC
"BLD",6671,4,727.815,2,727.815,1,86,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.815,2,727.815,1,87,0)
ENCOUNTER MST
"BLD",6671,4,727.815,2,727.815,1,88,0)
RADIATION ENCOUNTER INDICATOR
"BLD",6671,4,727.815,2,727.815,1,89,0)
NUTRITION DIAGNOSIS
"BLD",6671,4,727.815,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.815,224)

"BLD",6671,4,727.819,0)
727.819
"BLD",6671,4,727.819,2,0)
^9.641^727.819^1
"BLD",6671,4,727.819,2,727.819,0)
IV DETAIL EXTRACT  (File-top level)
"BLD",6671,4,727.819,2,727.819,1,0)
^9.6411^81^3
"BLD",6671,4,727.819,2,727.819,1,41,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.819,2,727.819,1,80,0)
ERI
"BLD",6671,4,727.819,2,727.819,1,81,0)
ENVIRONMENTAL CONTAMINANTS
"BLD",6671,4,727.819,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.819,224)

"BLD",6671,4,727.825,0)
727.825
"BLD",6671,4,727.825,2,0)
^9.641^727.825^1
"BLD",6671,4,727.825,2,727.825,0)
QUASAR EXTRACT  (File-top level)
"BLD",6671,4,727.825,2,727.825,1,0)
^9.6411^86^8
"BLD",6671,4,727.825,2,727.825,1,69,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.825,2,727.825,1,83,0)
ERI
"BLD",6671,4,727.825,2,727.825,1,84,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.825,2,727.825,1,85,0)
ENCOUNTER EC
"BLD",6671,4,727.825,2,727.825,1,86,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.825,2,727.825,1,87,0)
ENCOUNTER MST
"BLD",6671,4,727.825,2,727.825,1,88,0)
RADIATION ENCOUNTER INDICATOR
"BLD",6671,4,727.825,2,727.825,1,89,0)
NUTRITION DIAGNOSIS
"BLD",6671,4,727.825,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.825,224)

"BLD",6671,4,727.826,0)
727.826
"BLD",6671,4,727.826,2,0)
^9.641^727.826^1
"BLD",6671,4,727.826,2,727.826,0)
PROSTHETICS EXTRACT  (File-top level)
"BLD",6671,4,727.826,2,727.826,1,0)
^9.6411^78^6
"BLD",6671,4,727.826,2,727.826,1,75,0)
ERI
"BLD",6671,4,727.826,2,727.826,1,76,0)
AGENT ORANGE ENC INDICATOR
"BLD",6671,4,727.826,2,727.826,1,77,0)
ENCOUNTER EC
"BLD",6671,4,727.826,2,727.826,1,78,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.826,2,727.826,1,79,0)
ENCOUNTER MST
"BLD",6671,4,727.826,2,727.826,1,80,0)
RADIATION ENCOUNTER INDICATOR
"BLD",6671,4,727.826,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.826,224)

"BLD",6671,4,727.827,0)
727.827
"BLD",6671,4,727.827,2,0)
^9.641^727.827^1
"BLD",6671,4,727.827,2,727.827,0)
CLINIC EXTRACT  (File-top level)
"BLD",6671,4,727.827,2,727.827,1,0)
^9.6411^87^3
"BLD",6671,4,727.827,2,727.827,1,68,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.827,2,727.827,1,86,0)
ERI
"BLD",6671,4,727.827,2,727.827,1,87,0)
ENC HEAD/NECK CA
"BLD",6671,4,727.827,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.827,224)

"BLD",6671,4,727.829,0)
727.829
"BLD",6671,4,727.829,2,0)
^9.641^727.829^1
"BLD",6671,4,727.829,2,727.829,0)
BLOOD BANK EXTRACT  (File-top level)
"BLD",6671,4,727.829,2,727.829,1,0)
^9.6411^22^7
"BLD",6671,4,727.829,2,727.829,1,16,0)
REACTION TYPE
"BLD",6671,4,727.829,2,727.829,1,22,0)
ERI
"BLD",6671,4,727.829,2,727.829,1,23,0)
UNIT MODIFIED
"BLD",6671,4,727.829,2,727.829,1,24,0)
UNIT MODIFICATION
"BLD",6671,4,727.829,2,727.829,1,25,0)
REQUESTING PROVIDER
"BLD",6671,4,727.829,2,727.829,1,26,0)
REQUEST. PROVIDER PERSON CLASS
"BLD",6671,4,727.829,2,727.829,1,27,0)
PRODUCTION DIVISION CODE
"BLD",6671,4,727.829,222)
y^y^p^^^^n^^n
"BLD",6671,4,727.829,224)

"BLD",6671,4,727.832,0)
727.832
"BLD",6671,4,727.832,222)
y^y^f^^^^n
"BLD",6671,4,728,0)
728
"BLD",6671,4,728,2,0)
^9.641^728^1
"BLD",6671,4,728,2,728,0)
DSS EXTRACTS  (File-top level)
"BLD",6671,4,728,2,728,1,0)
^9.6411^72^2
"BLD",6671,4,728,2,728,1,71,0)
LAST DATE NUT
"BLD",6671,4,728,2,728,1,72,0)
NUT STATUS
"BLD",6671,4,728,222)
y^y^p^^^^n^^n
"BLD",6671,4,728,224)

"BLD",6671,4,728.45,0)
728.45
"BLD",6671,4,728.45,222)
y^y^f^^^^n
"BLD",6671,4,728.46,0)
728.46
"BLD",6671,4,728.46,222)
y^y^f^^^^n
"BLD",6671,4,"APDD",727.802,727.802)

"BLD",6671,4,"APDD",727.802,727.802,60)

"BLD",6671,4,"APDD",727.802,727.802,76)

"BLD",6671,4,"APDD",727.802,727.802,77)

"BLD",6671,4,"APDD",727.802,727.802,78)

"BLD",6671,4,"APDD",727.802,727.802,79)

"BLD",6671,4,"APDD",727.802,727.802,80)

"BLD",6671,4,"APDD",727.802,727.802,81)

"BLD",6671,4,"APDD",727.808,727.808)

"BLD",6671,4,"APDD",727.808,727.808,32)

"BLD",6671,4,"APDD",727.809,727.809)

"BLD",6671,4,"APDD",727.809,727.809,28)

"BLD",6671,4,"APDD",727.809,727.809,75)

"BLD",6671,4,"APDD",727.809,727.809,76)

"BLD",6671,4,"APDD",727.81,727.81)

"BLD",6671,4,"APDD",727.81,727.81,68)

"BLD",6671,4,"APDD",727.81,727.81,84)

"BLD",6671,4,"APDD",727.81,727.81,85)

"BLD",6671,4,"APDD",727.81,727.81,86)

"BLD",6671,4,"APDD",727.81,727.81,87)

"BLD",6671,4,"APDD",727.81,727.81,88)

"BLD",6671,4,"APDD",727.81,727.81,89)

"BLD",6671,4,"APDD",727.81,727.81,90)

"BLD",6671,4,"APDD",727.81,727.81,91)

"BLD",6671,4,"APDD",727.811,727.811)

"BLD",6671,4,"APDD",727.811,727.811,57)

"BLD",6671,4,"APDD",727.811,727.811,77)

"BLD",6671,4,"APDD",727.811,727.811,78)

"BLD",6671,4,"APDD",727.811,727.811,79)

"BLD",6671,4,"APDD",727.812,727.812)

"BLD",6671,4,"APDD",727.812,727.812,45)

"BLD",6671,4,"APDD",727.812,727.812,61)

"BLD",6671,4,"APDD",727.813,727.813)

"BLD",6671,4,"APDD",727.813,727.813,38)

"BLD",6671,4,"APDD",727.814,727.814)

"BLD",6671,4,"APDD",727.814,727.814,43)

"BLD",6671,4,"APDD",727.815,727.815)

"BLD",6671,4,"APDD",727.815,727.815,83)

"BLD",6671,4,"APDD",727.815,727.815,84)

"BLD",6671,4,"APDD",727.815,727.815,85)

"BLD",6671,4,"APDD",727.815,727.815,86)

"BLD",6671,4,"APDD",727.815,727.815,87)

"BLD",6671,4,"APDD",727.815,727.815,88)

"BLD",6671,4,"APDD",727.815,727.815,89)

"BLD",6671,4,"APDD",727.819,727.819)

"BLD",6671,4,"APDD",727.819,727.819,41)

"BLD",6671,4,"APDD",727.819,727.819,80)

"BLD",6671,4,"APDD",727.819,727.819,81)

"BLD",6671,4,"APDD",727.825,727.825)

"BLD",6671,4,"APDD",727.825,727.825,69)

"BLD",6671,4,"APDD",727.825,727.825,83)

"BLD",6671,4,"APDD",727.825,727.825,84)

"BLD",6671,4,"APDD",727.825,727.825,85)

"BLD",6671,4,"APDD",727.825,727.825,86)

"BLD",6671,4,"APDD",727.825,727.825,87)

"BLD",6671,4,"APDD",727.825,727.825,88)

"BLD",6671,4,"APDD",727.825,727.825,89)

"BLD",6671,4,"APDD",727.826,727.826)

"BLD",6671,4,"APDD",727.826,727.826,75)

"BLD",6671,4,"APDD",727.826,727.826,76)

"BLD",6671,4,"APDD",727.826,727.826,77)

"BLD",6671,4,"APDD",727.826,727.826,78)

"BLD",6671,4,"APDD",727.826,727.826,79)

"BLD",6671,4,"APDD",727.826,727.826,80)

"BLD",6671,4,"APDD",727.827,727.827)

"BLD",6671,4,"APDD",727.827,727.827,68)

"BLD",6671,4,"APDD",727.827,727.827,86)

"BLD",6671,4,"APDD",727.827,727.827,87)

"BLD",6671,4,"APDD",727.829,727.829)

"BLD",6671,4,"APDD",727.829,727.829,16)

"BLD",6671,4,"APDD",727.829,727.829,22)

"BLD",6671,4,"APDD",727.829,727.829,23)

"BLD",6671,4,"APDD",727.829,727.829,24)

"BLD",6671,4,"APDD",727.829,727.829,25)

"BLD",6671,4,"APDD",727.829,727.829,26)

"BLD",6671,4,"APDD",727.829,727.829,27)

"BLD",6671,4,"APDD",728,728)

"BLD",6671,4,"APDD",728,728,71)

"BLD",6671,4,"APDD",728,728,72)

"BLD",6671,4,"B",727.1,727.1)

"BLD",6671,4,"B",727.802,727.802)

"BLD",6671,4,"B",727.808,727.808)

"BLD",6671,4,"B",727.809,727.809)

"BLD",6671,4,"B",727.81,727.81)

"BLD",6671,4,"B",727.811,727.811)

"BLD",6671,4,"B",727.812,727.812)

"BLD",6671,4,"B",727.813,727.813)

"BLD",6671,4,"B",727.814,727.814)

"BLD",6671,4,"B",727.815,727.815)

"BLD",6671,4,"B",727.819,727.819)

"BLD",6671,4,"B",727.825,727.825)

"BLD",6671,4,"B",727.826,727.826)

"BLD",6671,4,"B",727.827,727.827)

"BLD",6671,4,"B",727.829,727.829)

"BLD",6671,4,"B",727.832,727.832)

"BLD",6671,4,"B",728,728)

"BLD",6671,4,"B",728.45,728.45)

"BLD",6671,4,"B",728.46,728.46)

"BLD",6671,6.3)
30
"BLD",6671,"ABPKG")
n
"BLD",6671,"INID")
^
"BLD",6671,"INIT")
EN^ECX30P92
"BLD",6671,"KRN",0)
^9.67PA^8989.52^19
"BLD",6671,"KRN",.4,0)
.4
"BLD",6671,"KRN",.4,"NM",0)
^9.68A^2^2
"BLD",6671,"KRN",.4,"NM",1,0)
ECX LAB TEST PRINT    FILE #727.2^727.2^0
"BLD",6671,"KRN",.4,"NM",2,0)
ECX LAB TEST HEADER    FILE #727.2^727.2^0
"BLD",6671,"KRN",.4,"NM","B","ECX LAB TEST HEADER    FILE #727.2",2)

"BLD",6671,"KRN",.4,"NM","B","ECX LAB TEST PRINT    FILE #727.2",1)

"BLD",6671,"KRN",.401,0)
.401
"BLD",6671,"KRN",.402,0)
.402
"BLD",6671,"KRN",.403,0)
.403
"BLD",6671,"KRN",.5,0)
.5
"BLD",6671,"KRN",.84,0)
.84
"BLD",6671,"KRN",3.6,0)
3.6
"BLD",6671,"KRN",3.8,0)
3.8
"BLD",6671,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",6671,"KRN",3.8,"NM",1,0)
DSS-NUT^^0
"BLD",6671,"KRN",3.8,"NM","B","DSS-NUT",1)

"BLD",6671,"KRN",9.2,0)
9.2
"BLD",6671,"KRN",9.8,0)
9.8
"BLD",6671,"KRN",9.8,"NM",0)
^9.68A^41^39
"BLD",6671,"KRN",9.8,"NM",1,0)
ECXFEKEY^^0^B48332216
"BLD",6671,"KRN",9.8,"NM",2,0)
ECXUTL6^^0^B12024330
"BLD",6671,"KRN",9.8,"NM",3,0)
ECXNUT^^0^B26867365
"BLD",6671,"KRN",9.8,"NM",4,0)
ECXNUT1^^0^B17707422
"BLD",6671,"KRN",9.8,"NM",5,0)
ECXNUTDE^^0^B4229451
"BLD",6671,"KRN",9.8,"NM",6,0)
ECXNUTPE^^0^B4744677
"BLD",6671,"KRN",9.8,"NM",7,0)
ECXNUTPP^^0^B13036661
"BLD",6671,"KRN",9.8,"NM",8,0)
ECXNUTDP^^0^B12489432
"BLD",6671,"KRN",9.8,"NM",9,0)
ECXTREX^^0^B11364992
"BLD",6671,"KRN",9.8,"NM",10,0)
ECXADM^^0^B34859559
"BLD",6671,"KRN",9.8,"NM",11,0)
ECXUTL3^^0^B60329558
"BLD",6671,"KRN",9.8,"NM",12,0)
ECXSCX2^^0^B8207597
"BLD",6671,"KRN",9.8,"NM",13,0)
ECXSCXN^^0^B53946151
"BLD",6671,"KRN",9.8,"NM",14,0)
ECXQSR^^0^B55551464
"BLD",6671,"KRN",9.8,"NM",15,0)
ECXEC^^0^B37877116
"BLD",6671,"KRN",9.8,"NM",16,0)
ECXPIVDN^^0^B62997730
"BLD",6671,"KRN",9.8,"NM",17,0)
ECXLABN^^0^B27015743
"BLD",6671,"KRN",9.8,"NM",18,0)
ECXLBB^^0^B31084346
"BLD",6671,"KRN",9.8,"NM",19,0)
ECXOPRX^^0^B47824586
"BLD",6671,"KRN",9.8,"NM",20,0)
ECXPRO^^0^B30601078
"BLD",6671,"KRN",9.8,"NM",21,0)
ECXRAD^^0^B31411970
"BLD",6671,"KRN",9.8,"NM",22,0)
ECXSURG^^0^B58013169
"BLD",6671,"KRN",9.8,"NM",23,0)
ECXUD^^0^B47464345
"BLD",6671,"KRN",9.8,"NM",24,0)
ECXMTL^^0^B33423758
"BLD",6671,"KRN",9.8,"NM",26,0)
ECXDEPT^^0^B19340272
"BLD",6671,"KRN",9.8,"NM",27,0)
ECXPHVE^^0^B4185725
"BLD",6671,"KRN",9.8,"NM",28,0)
ECXPHAU^^0^B8648371
"BLD",6671,"KRN",9.8,"NM",30,0)
ECXUTL5^^0^B30147564
"BLD",6671,"KRN",9.8,"NM",31,0)
ECXPHAA^^0^B42962189
"BLD",6671,"KRN",9.8,"NM",32,0)
ECXOPRX1^^0^B7057662
"BLD",6671,"KRN",9.8,"NM",33,0)
ECXPLBB^^0^B18084926
"BLD",6671,"KRN",9.8,"NM",34,0)
ECXLOG^^0^B21884702
"BLD",6671,"KRN",9.8,"NM",35,0)
ECX30P92^^0^B5149361
"BLD",6671,"KRN",9.8,"NM",36,0)
ECXUTL2^^0^B68980292
"BLD",6671,"KRN",9.8,"NM",37,0)
ECXSCX1^^0^B67082358
"BLD",6671,"KRN",9.8,"NM",38,0)
ECXUTL4^^0^B41093966
"BLD",6671,"KRN",9.8,"NM",39,0)
ECX803^^1^
"BLD",6671,"KRN",9.8,"NM",40,0)
ECX8031^^1^
"BLD",6671,"KRN",9.8,"NM",41,0)
ECX8032^^1^
"BLD",6671,"KRN",9.8,"NM","B","ECX30P92",35)

"BLD",6671,"KRN",9.8,"NM","B","ECX803",39)

"BLD",6671,"KRN",9.8,"NM","B","ECX8031",40)

"BLD",6671,"KRN",9.8,"NM","B","ECX8032",41)

"BLD",6671,"KRN",9.8,"NM","B","ECXADM",10)

"BLD",6671,"KRN",9.8,"NM","B","ECXDEPT",26)

"BLD",6671,"KRN",9.8,"NM","B","ECXEC",15)

"BLD",6671,"KRN",9.8,"NM","B","ECXFEKEY",1)

"BLD",6671,"KRN",9.8,"NM","B","ECXLABN",17)

"BLD",6671,"KRN",9.8,"NM","B","ECXLBB",18)

"BLD",6671,"KRN",9.8,"NM","B","ECXLOG",34)

"BLD",6671,"KRN",9.8,"NM","B","ECXMTL",24)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUT",3)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUT1",4)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUTDE",5)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUTDP",8)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUTPE",6)

"BLD",6671,"KRN",9.8,"NM","B","ECXNUTPP",7)

"BLD",6671,"KRN",9.8,"NM","B","ECXOPRX",19)

"BLD",6671,"KRN",9.8,"NM","B","ECXOPRX1",32)

"BLD",6671,"KRN",9.8,"NM","B","ECXPHAA",31)

"BLD",6671,"KRN",9.8,"NM","B","ECXPHAU",28)

"BLD",6671,"KRN",9.8,"NM","B","ECXPHVE",27)

"BLD",6671,"KRN",9.8,"NM","B","ECXPIVDN",16)

"BLD",6671,"KRN",9.8,"NM","B","ECXPLBB",33)

"BLD",6671,"KRN",9.8,"NM","B","ECXPRO",20)

"BLD",6671,"KRN",9.8,"NM","B","ECXQSR",14)

"BLD",6671,"KRN",9.8,"NM","B","ECXRAD",21)

"BLD",6671,"KRN",9.8,"NM","B","ECXSCX1",37)

"BLD",6671,"KRN",9.8,"NM","B","ECXSCX2",12)

"BLD",6671,"KRN",9.8,"NM","B","ECXSCXN",13)

"BLD",6671,"KRN",9.8,"NM","B","ECXSURG",22)

"BLD",6671,"KRN",9.8,"NM","B","ECXTREX",9)

"BLD",6671,"KRN",9.8,"NM","B","ECXUD",23)

"BLD",6671,"KRN",9.8,"NM","B","ECXUTL2",36)

"BLD",6671,"KRN",9.8,"NM","B","ECXUTL3",11)

"BLD",6671,"KRN",9.8,"NM","B","ECXUTL4",38)

"BLD",6671,"KRN",9.8,"NM","B","ECXUTL5",30)

"BLD",6671,"KRN",9.8,"NM","B","ECXUTL6",2)

"BLD",6671,"KRN",19,0)
19
"BLD",6671,"KRN",19,"NM",0)
^9.68A^12^12
"BLD",6671,"KRN",19,"NM",1,0)
ECX MAINTENANCE^^2
"BLD",6671,"KRN",19,"NM",2,0)
ECX NUTRITION WORKSHEETS^^0
"BLD",6671,"KRN",19,"NM",3,0)
ECX NUT PRO EDIT^^0
"BLD",6671,"KRN",19,"NM",4,0)
ECX NUT PRO PRINT^^0
"BLD",6671,"KRN",19,"NM",5,0)
ECX NUT DIV EDIT^^0
"BLD",6671,"KRN",19,"NM",6,0)
ECX NUT DIV PRINT^^0
"BLD",6671,"KRN",19,"NM",7,0)
ECXNUT^^0
"BLD",6671,"KRN",19,"NM",8,0)
ECXMENU^^2
"BLD",6671,"KRN",19,"NM",9,0)
ECX PHA EDIT^^0
"BLD",6671,"KRN",19,"NM",10,0)
ECX PHA VOL EDIT^^0
"BLD",6671,"KRN",19,"NM",11,0)
ECX PHA VOL EDIT LOG^^0
"BLD",6671,"KRN",19,"NM",12,0)
ECX PHA UDP/IVP SOURCE AUDIT^^0
"BLD",6671,"KRN",19,"NM","B","ECX MAINTENANCE",1)

"BLD",6671,"KRN",19,"NM","B","ECX NUT DIV EDIT",5)

"BLD",6671,"KRN",19,"NM","B","ECX NUT DIV PRINT",6)

"BLD",6671,"KRN",19,"NM","B","ECX NUT PRO EDIT",3)

"BLD",6671,"KRN",19,"NM","B","ECX NUT PRO PRINT",4)

"BLD",6671,"KRN",19,"NM","B","ECX NUTRITION WORKSHEETS",2)

"BLD",6671,"KRN",19,"NM","B","ECX PHA EDIT",9)

"BLD",6671,"KRN",19,"NM","B","ECX PHA UDP/IVP SOURCE AUDIT",12)

"BLD",6671,"KRN",19,"NM","B","ECX PHA VOL EDIT",10)

"BLD",6671,"KRN",19,"NM","B","ECX PHA VOL EDIT LOG",11)

"BLD",6671,"KRN",19,"NM","B","ECXMENU",8)

"BLD",6671,"KRN",19,"NM","B","ECXNUT",7)

"BLD",6671,"KRN",19.1,0)
19.1
"BLD",6671,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",6671,"KRN",19.1,"NM",1,0)
ECXPVE^^0
"BLD",6671,"KRN",19.1,"NM","B","ECXPVE",1)

"BLD",6671,"KRN",101,0)
101
"BLD",6671,"KRN",101,"NM",0)
^9.68A^^
"BLD",6671,"KRN",409.61,0)
409.61
"BLD",6671,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",6671,"KRN",771,0)
771
"BLD",6671,"KRN",870,0)
870
"BLD",6671,"KRN",8989.51,0)
8989.51
"BLD",6671,"KRN",8989.52,0)
8989.52
"BLD",6671,"KRN",8994,0)
8994
"BLD",6671,"KRN","B",.4,.4)

"BLD",6671,"KRN","B",.401,.401)

"BLD",6671,"KRN","B",.402,.402)

"BLD",6671,"KRN","B",.403,.403)

"BLD",6671,"KRN","B",.5,.5)

"BLD",6671,"KRN","B",.84,.84)

"BLD",6671,"KRN","B",3.6,3.6)

"BLD",6671,"KRN","B",3.8,3.8)

"BLD",6671,"KRN","B",9.2,9.2)

"BLD",6671,"KRN","B",9.8,9.8)

"BLD",6671,"KRN","B",19,19)

"BLD",6671,"KRN","B",19.1,19.1)

"BLD",6671,"KRN","B",101,101)

"BLD",6671,"KRN","B",409.61,409.61)

"BLD",6671,"KRN","B",771,771)

"BLD",6671,"KRN","B",870,870)

"BLD",6671,"KRN","B",8989.51,8989.51)

"BLD",6671,"KRN","B",8989.52,8989.52)

"BLD",6671,"KRN","B",8994,8994)

"BLD",6671,"QUES",0)
^9.62^^
"BLD",6671,"REQB",0)
^9.611^6^6
"BLD",6671,"REQB",1,0)
ECX*3.0*84^2
"BLD",6671,"REQB",2,0)
FH*5.5*7^2
"BLD",6671,"REQB",3,0)
PSO*7.0*245^2
"BLD",6671,"REQB",4,0)
ECX*3.0*95^2
"BLD",6671,"REQB",5,0)
EC*2.0*72^2
"BLD",6671,"REQB",6,0)
ECX*3.0*96^2
"BLD",6671,"REQB","B","EC*2.0*72",5)

"BLD",6671,"REQB","B","ECX*3.0*84",1)

"BLD",6671,"REQB","B","ECX*3.0*95",4)

"BLD",6671,"REQB","B","ECX*3.0*96",6)

"BLD",6671,"REQB","B","FH*5.5*7",2)

"BLD",6671,"REQB","B","PSO*7.0*245",3)

"DATA",727.1,1,0)
ADMISSIONS^727.802^M^^^^Admission^ADM^ADMS^13^^0
"DATA",727.1,1,1,0)
^^34^34^2980706^^^^
"DATA",727.1,1,1,1,0)
   
"DATA",727.1,1,1,2,0)
Verify against: Gains and Losses Sheet/Bed Status Report
"DATA",727.1,1,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,1,1,4,0)
 
"DATA",727.1,1,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which ADM
"DATA",727.1,1,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,1,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can also
"DATA",727.1,1,1,8,0)
be used.  Copies of these reports are readily available from patient
"DATA",727.1,1,1,9,0)
administration services at most medical centers.
"DATA",727.1,1,1,10,0)
   
"DATA",727.1,1,1,11,0)
The G&L Sheet shows admissions by ward for a specific day.  To verify the
"DATA",727.1,1,1,12,0)
data on the extract audit report, the verifier must accumulate the data
"DATA",727.1,1,1,13,0)
given on the G&L Sheet  either manually or through use of a spreadsheet
"DATA",727.1,1,1,14,0)
application. For example, if the Admission Extract Audit Report covers
"DATA",727.1,1,1,15,0)
the period July 1 to July 15, then accumulate the admission data from the
"DATA",727.1,1,1,16,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated data
"DATA",727.1,1,1,17,0)
for a given ward (e.g.,total number of admissions for Ward A during the
"DATA",727.1,1,1,18,0)
period) should match the figure reported on the extract audit for the same
"DATA",727.1,1,1,19,0)
ward and date range.
"DATA",727.1,1,1,20,0)
 
"DATA",727.1,1,1,21,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,1,1,22,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,1,1,23,0)
interward losses and discharges by ward group.  The Admission (ADM) Extract
"DATA",727.1,1,1,24,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,1,1,25,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,1,1,26,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,1,1,27,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,1,1,28,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,29,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,1,1,30,0)
July 31.  (Again, this can be accomplished manually, or with the aid of a
"DATA",727.1,1,1,31,0)
spreadsheet application.)  The resulting month of July table can then be
"DATA",727.1,1,1,32,0)
compared directly to the ward group totals shown on the extract audit
"DATA",727.1,1,1,33,0)
report generated for the period July 1 to July 31.
"DATA",727.1,1,1,34,0)
 
"DATA",727.1,1,"ROU")
ECXADM
"DATA",727.1,2,0)
CLINIC^727.803^M^^^^Clinic/Inactive^ZZZ^SCX^11^^1
"DATA",727.1,2,"ROU")
ECXSCX
"DATA",727.1,3,0)
CLINIC NOSHOW^727.804^M^^^^Clinic no shows^NOS^SCNS^15^^1
"DATA",727.1,3,"ROU")
ECXSCNS
"DATA",727.1,4,0)
NURSING^727.805^M^^^^Nursing^NUR^NURS^7^^0
"DATA",727.1,4,1,0)
^^21^21^2990805^^^^
"DATA",727.1,4,1,1,0)
  
"DATA",727.1,4,1,2,0)
Verify against: Report 10-1106 Segment 200, Cumulative Daily
"DATA",727.1,4,1,3,0)
                 Patient Classification Data
"DATA",727.1,4,1,4,0)
Menu option:    Patient Category Totals-Midnight Acuity Reports
"DATA",727.1,4,1,5,0)
                [NURAPR-RES-MDPC]
"DATA",727.1,4,1,6,0)
  
"DATA",727.1,4,1,7,0)
The report against which to verify NUR extract audit data is the VistA 
"DATA",727.1,4,1,8,0)
Nursing application's Report 10-1106 Segment 200, Cumulative Daily Patient
"DATA",727.1,4,1,9,0)
Classification Data report.  However, it is possible that the figures shown
"DATA",727.1,4,1,10,0)
on this report may not exactly match those on the Nursing (NUR) Extract
"DATA",727.1,4,1,11,0)
Audit Report.  The reason for this is that the DSS Nursing extract does not
"DATA",727.1,4,1,12,0)
include classification data for any patient discharged or transferred on
"DATA",727.1,4,1,13,0)
the same day, but after the classification took place.  So the figures on
"DATA",727.1,4,1,14,0)
the NUR extract report may occassionally be slightly lower for some Nursing
"DATA",727.1,4,1,15,0)
locations. 
"DATA",727.1,4,1,16,0)
  
"DATA",727.1,4,1,17,0)
It is recommended that the Cumulative Daily Patient Classification Data
"DATA",727.1,4,1,18,0)
report be generated for an entire month for each Nursing Location.  Both
"DATA",727.1,4,1,19,0)
the Cumulative Daily Patient Classification Data and the Nursing (NUR)
"DATA",727.1,4,1,20,0)
Extract Audit Report list classification totals by Nursing Bedsection
"DATA",727.1,4,1,21,0)
within each Nursing Location.
"DATA",727.1,4,"ROU")
ECXNURS
"DATA",727.1,5,0)
DENTAL^727.806^M^^^^Dental^DEN^DENT^9^^0
"DATA",727.1,5,1,0)
^^24^24^2980706^^^^
"DATA",727.1,5,1,1,0)
   
"DATA",727.1,5,1,2,0)
Verify against: Dental Service Treatment Report - Summary Report for Clinic
"DATA",727.1,5,1,3,0)
Menu Option:    Clinic Summary [DENTTREATCLINIC RPT]
"DATA",727.1,5,1,4,0)
 
"DATA",727.1,5,1,5,0)
The Dental Extract Audit Report should be run for each site/division
"DATA",727.1,5,1,6,0)
defined by the VistA DENTAL application site parameters.  It can be
"DATA",727.1,5,1,7,0)
verified against the Dental Service Treatment Report - Summary Report
"DATA",727.1,5,1,8,0)
for Clinic generated for the same site/division and date range.  Use the
"DATA",727.1,5,1,9,0)
first page of the Summary Report for Clinic and add-up (either manually
"DATA",727.1,5,1,10,0)
or through a spreadsheet application) the totals shown for a particular
"DATA",727.1,5,1,11,0)
procedure in each of the inpatient/outpatient dental categories.  This
"DATA",727.1,5,1,12,0)
total (across all dental categories) should match the total for that
"DATA",727.1,5,1,13,0)
procedure shown on the Dental Extract Audit Report.
"DATA",727.1,5,1,14,0)
  
"DATA",727.1,5,1,15,0)
Be sure that the extract audit report and the Dental clinic summary
"DATA",727.1,5,1,16,0)
report being compared are reporting data from the same division and date
"DATA",727.1,5,1,17,0)
range.  Both reports show this information in the report header.
"DATA",727.1,5,1,18,0)
  
"DATA",727.1,5,1,19,0)
The Dental Service Treatment Report - Summary Report for Clinic is
"DATA",727.1,5,1,20,0)
routinely generated by Dental Service administrative staff at most medical
"DATA",727.1,5,1,21,0)
centers, so a copy of the report should be easily obtainable. Please note
"DATA",727.1,5,1,22,0)
that (1) not all dental procedures appear on the extract audit report,
"DATA",727.1,5,1,23,0)
and (2) the Summary Report for Clinic only shows the first 20 characters
"DATA",727.1,5,1,24,0)
of the procedure name.
"DATA",727.1,5,"ROU")
ECXDENT
"DATA",727.1,6,0)
BLOOD BANK^727.829^M^^^^Blood Bank^LBB^LBB^27^200^0
"DATA",727.1,6,"ROU")
ECXLBB
"DATA",727.1,7,0)
PHYSICAL MOVEMENT^727.808^M^^^^Movement^MOV^MOVS^14^^0
"DATA",727.1,7,1,0)
^^67^67^2980706^^^^
"DATA",727.1,7,1,1,0)
 
"DATA",727.1,7,1,2,0)
Verify against: Gains & Losses Sheet/Bed Status Report
"DATA",727.1,7,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,7,1,4,0)
 
"DATA",727.1,7,1,5,0)
The Gains and Losses Sheet is the primary VistA report against which MOV
"DATA",727.1,7,1,6,0)
extract data should be verified.  However, if starting the verification
"DATA",727.1,7,1,7,0)
process at the beginning of the fiscal year, the Bed Status Report can
"DATA",727.1,7,1,8,0)
also be used.  Copies of these reports are readily available from patient
"DATA",727.1,7,1,9,0)
administration services at most medical centers.
"DATA",727.1,7,1,10,0)
  
"DATA",727.1,7,1,11,0)
The G&L Sheet shows interward transfers and discharges by ward for a
"DATA",727.1,7,1,12,0)
specific day.  To verify the data on the extract audit report, the 
"DATA",727.1,7,1,13,0)
verifier must accumulate the data given on the G&L Sheet either 
"DATA",727.1,7,1,14,0)
manually or through use of a spreadsheet application. For example,
"DATA",727.1,7,1,15,0)
if the Movement (MOV) Extract Audit Report covers the period July 1
"DATA",727.1,7,1,16,0)
to July 15, then accumulate the transfer and discharge data from the
"DATA",727.1,7,1,17,0)
G&L Sheet for each day from July 1 through July 15.  The accumulated
"DATA",727.1,7,1,18,0)
data for a given ward (e.g.,total number of transfers out and total
"DATA",727.1,7,1,19,0)
number of discharges for Ward A during the period) should match 
"DATA",727.1,7,1,20,0)
the figures reported on the extract audit for the same ward and
"DATA",727.1,7,1,21,0)
date range.
"DATA",727.1,7,1,22,0)
  
"DATA",727.1,7,1,23,0)
Please note that the Movement (MOV) Extract Audit Report shows a
"DATA",727.1,7,1,24,0)
detailed break-out of both transfers and discharges by movement type.
"DATA",727.1,7,1,25,0)
Individual totals by movement type are listed for each ward, thereby
"DATA",727.1,7,1,26,0)
enabling the user to verify data with much specificity.  If the user
"DATA",727.1,7,1,27,0)
does not care to verify data to this level of detail, then the figure
"DATA",727.1,7,1,28,0)
in the last column of each row should be used.  This figure represents
"DATA",727.1,7,1,29,0)
the total number of transfers or discharges of all types for a given
"DATA",727.1,7,1,30,0)
ward during the date range selected.  The section of the MOV Extract
"DATA",727.1,7,1,31,0)
Audit Report which shows MAS Movement (Transfer) Types is reporting
"DATA",727.1,7,1,32,0)
number of interward transfer losses for each ward.
"DATA",727.1,7,1,33,0)
  
"DATA",727.1,7,1,34,0)
If verification is done through the Bed Status Report, simply use the
"DATA",727.1,7,1,35,0)
"Cumulative Totals" table which displays fiscal year-to-date totals of
"DATA",727.1,7,1,36,0)
interward losses and discharges by ward group.  The Movement (MOV) Extract
"DATA",727.1,7,1,37,0)
Audit also displays totals by ward group.  Some arithmetic manipulation is
"DATA",727.1,7,1,38,0)
needed here in order to compare the figures on the two reports.  For
"DATA",727.1,7,1,39,0)
example, to verify data for the month of July, the user must first develop
"DATA",727.1,7,1,40,0)
a "Cumulative Totals" table for the month of July.  This is done by
"DATA",727.1,7,1,41,0)
subtracting the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,42,0)
June 30 from the figures contained in the "Cumulative Totals" table of
"DATA",727.1,7,1,43,0)
July 31 for the appropriate fiscal year.  (Again, this can be accomplished
"DATA",727.1,7,1,44,0)
manually, or with the aid of a spreadsheet application.)  The resulting
"DATA",727.1,7,1,45,0)
Cumulative Totals table can now be compared to your MOV Extract Audit
"DATA",727.1,7,1,46,0)
Report for the period July 1 to July 31.
"DATA",727.1,7,1,47,0)
  
"DATA",727.1,7,1,48,0)
When verifying the totals for discharge movements, you can directly
"DATA",727.1,7,1,49,0)
compare the total number of discharges shown in the last column for each
"DATA",727.1,7,1,50,0)
ward group on the MOV Extract Audit Report to the total discharges for
"DATA",727.1,7,1,51,0)
that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,52,0)
  
"DATA",727.1,7,1,53,0)
When verifying the total for transfer movements, the method of comparison
"DATA",727.1,7,1,54,0)
will depend on whether your site has NHCU wards.  The presence of NHCU
"DATA",727.1,7,1,55,0)
wards means that there may be ASIH movements which will not be reflected
"DATA",727.1,7,1,56,0)
in the total interward losses shown on the Cumulative Totals table.
"DATA",727.1,7,1,57,0)
  
"DATA",727.1,7,1,58,0)
   (1) If your site does not have NHCU wards, you can directly compare
"DATA",727.1,7,1,59,0)
       the total number of transfers shown in the last column for each
"DATA",727.1,7,1,60,0)
       ward group on the MOV Extract Audit Report to the total interward
"DATA",727.1,7,1,61,0)
       losses for that same ward group on the Cumulative Totals table.
"DATA",727.1,7,1,62,0)
  
"DATA",727.1,7,1,63,0)
   (2) If your site does have NHCU wards, you should directly compare
"DATA",727.1,7,1,64,0)
       the total number of interward transfers (i.e., MAS Movement Type
"DATA",727.1,7,1,65,0)
       is 4) shown in the fourth column for each ward group on the
"DATA",727.1,7,1,66,0)
       MOV Extract Audit Report to the total interward losses for that
"DATA",727.1,7,1,67,0)
       same ward group on the Cumulative Totals table.
"DATA",727.1,7,"ROU")
ECXMOV
"DATA",727.1,8,0)
UNIT DOSE^727.809^M^^^^Unit Dose^UDP^UD^8^^0
"DATA",727.1,8,"ROU")
ECXUD
"DATA",727.1,9,0)
PRESCRIPTION^727.81^M^^^^Prescription^PRE^PRES^2^^0
"DATA",727.1,9,"ROU")
ECXOPRX
"DATA",727.1,10,0)
SURGERY^727.811^M^^^^Surgery^SUR^SURG^5^^0
"DATA",727.1,10,1,0)
^^34^34^2980706^^^^
"DATA",727.1,10,1,1,0)
  
"DATA",727.1,10,1,2,0)
Verify against: Surgical Service Cumulative Report of CPT Codes
"DATA",727.1,10,1,3,0)
Menu option:    Cumulative Report of CPT Codes [SROACCT]
"DATA",727.1,10,1,4,0)
  
"DATA",727.1,10,1,5,0)
The Surgery (SUR) Extract Audit Report may be verified against the Surgical
"DATA",727.1,10,1,6,0)
Service Cumulative Report of CPT Codes found in the VistA Surgery package.
"DATA",727.1,10,1,7,0)
  
"DATA",727.1,10,1,8,0)
It should be noted that the report from the Surgery application package
"DATA",727.1,10,1,9,0)
combines data from all Surgery sites/divisions for its CPT code listing.
"DATA",727.1,10,1,10,0)
The SUR extract audit report, on the other hand, organizes and prints 
"DATA",727.1,10,1,11,0)
procedure data by Surgery site/division.  
"DATA",727.1,10,1,12,0)
  
"DATA",727.1,10,1,13,0)
When generating the Cumulative Report of CPT Codes, generate one report
"DATA",727.1,10,1,14,0)
for O.R. Surgical Procedures and another for Non-O.R. Procedures.  If the
"DATA",727.1,10,1,15,0)
facility has multiple Surgery sites (i.e., the SURGERY SITE PARAMETERS
"DATA",727.1,10,1,16,0)
file (#133) has more than one entry), then for any given procedure the 
"DATA",727.1,10,1,17,0)
total from each divisional extract audit report must be added together
"DATA",727.1,10,1,18,0)
to get the total appearing on the Cumulative Report of CPT Codes.  Be sure
"DATA",727.1,10,1,19,0)
that both the SUR extract audit report and the Cumulative Report of CPT
"DATA",727.1,10,1,20,0)
Codes are generated for the same date range.
"DATA",727.1,10,1,21,0)
 
"DATA",727.1,10,1,22,0)
Also note that adding together the Total O.R. Surgical Procedures and
"DATA",727.1,10,1,23,0)
the Total Non-O.R. Surgical Procedures across all Surgery Divisions
"DATA",727.1,10,1,24,0)
appearing on the SUR Extract Audit Report may not equal the total number
"DATA",727.1,10,1,25,0)
of extract records.  This is because the SUR Extract Audit Report does
"DATA",727.1,10,1,26,0)
not include the "Implant" extract records which normally do not have
"DATA",727.1,10,1,27,0)
CPT codes associated with them.
"DATA",727.1,10,1,28,0)
 
"DATA",727.1,10,1,29,0)
If you able to run a FileMan print (or search), you can find all the
"DATA",727.1,10,1,30,0)
"Implant" records by looking for those records in file #727.811 with
"DATA",727.1,10,1,31,0)
a PRIMARY/SECONDARY/PROSTHETICS field (#16) set to "I".  The total
"DATA",727.1,10,1,32,0)
number of "Implant" records plus the totals from the SUR Extract
"DATA",727.1,10,1,33,0)
Audit Report should now equal the total number of records in the
"DATA",727.1,10,1,34,0)
SUR extract.
"DATA",727.1,10,"ROU")
ECXSURG
"DATA",727.1,11,0)
MENTAL HEALTH^727.812^M^^^^Mental Health^MTL^MTL^24^^0
"DATA",727.1,11,1,0)
^^20^20^3000222^
"DATA",727.1,11,1,1,0)
Verify against: Usage Statistics, Site Report by Date
"DATA",727.1,11,1,2,0)
Menu Option:    Usage Statistics [YSMUSE], Site Report by Date [YSAS 
"DATA",727.1,11,1,3,0)
                MANAGEMENT REPORT]
"DATA",727.1,11,1,4,0)
  
"DATA",727.1,11,1,5,0)
The 'Usage Statistics' report in the MENTAL HEALTH VistA software should be 
"DATA",727.1,11,1,6,0)
used to verify the Psych instrument segment of the DSS MTL Extract Audit
"DATA",727.1,11,1,7,0)
report.  It must be noted that the Usage report is produced based on month 
"DATA",727.1,11,1,8,0)
and year, the days are ignored.
"DATA",727.1,11,1,9,0)
  
"DATA",727.1,11,1,10,0)
The 'Site Report by Date' should be used to verify the ASI segment on the
"DATA",727.1,11,1,11,0)
DSS MTL Extract Audit Report.  It is possible that the figures on the DSS
"DATA",727.1,11,1,12,0)
MTL report may be higher than those on the Site Report.  The reason being
"DATA",727.1,11,1,13,0)
that the MENTAL HEALTH 'Site Report' does not currently display test that
"DATA",727.1,11,1,14,0)
are inactive.  The DSS MTL Extract Audit Report will report both active
"DATA",727.1,11,1,15,0)
and inactive tests performed during a specified date range.
"DATA",727.1,11,1,16,0)
  
"DATA",727.1,11,1,17,0)
Currently, there is no report in the MENTAL HEALTH VistA package to verify
"DATA",727.1,11,1,18,0)
the GAF segment on the DSS MTL Extract Audit Report. However, the general
"DATA",727.1,11,1,19,0)
format seen in the MENTAL HEALTH VistA, Print GAF's by Clinic/Date [YSGAF
"DATA",727.1,11,1,20,0)
PRINT CLINIC] is being followed.
"DATA",727.1,11,"ROU")
ECXMTL
"DATA",727.1,12,0)
LABORATORY^727.813^M^^^^Laboratory^LAB^LAB^1^^0
"DATA",727.1,12,1,0)
64^^138^138^2980713^^^^
"DATA",727.1,12,1,1,0)
 
"DATA",727.1,12,1,2,0)
Verify against: Workload Statistics by Accession Area and Shifts
"DATA",727.1,12,1,3,0)
Menu Option:    Workload statistics by accession area and shift [LRRP8]
"DATA",727.1,12,1,4,0)
 
"DATA",727.1,12,1,5,0)
The VistA LAB report recommended for verification of DSS LAB extract data
"DATA",727.1,12,1,6,0)
is the Workload Statistics by Accession Area and Shifts report.  This report
"DATA",727.1,12,1,7,0)
is only available to those Laboratory services that utilize LMIP codes
"DATA",727.1,12,1,8,0)
for workload reporting.  A copy of this report can be obtained from the
"DATA",727.1,12,1,9,0)
Laboratory Service administrator or LAB ADPAC at most VA medical centers.
"DATA",727.1,12,1,10,0)
  
"DATA",727.1,12,1,11,0)
Confirm that the LAB Workload Statistics by Accession Area and Shifts report
"DATA",727.1,12,1,12,0)
was generated using parameters similar to those outlined here:
"DATA",727.1,12,1,13,0)
  
"DATA",727.1,12,1,14,0)
  
"DATA",727.1,12,1,15,0)
  Workload statistics by accession area and shift
"DATA",727.1,12,1,16,0)
  
"DATA",727.1,12,1,17,0)
  PRINT THE COMMENT PAGES?  NO//
"DATA",727.1,12,1,18,0)
  
"DATA",727.1,12,1,19,0)
  Select WKLD DATA INSTITUTION: ?                
"DATA",727.1,12,1,20,0)
   Answer with WKLD DATA NUMBER, or INSTITUTION        
"DATA",727.1,12,1,21,0)
  Choose from:                                         
"DATA",727.1,12,1,22,0)
     500             ALBANY                            
"DATA",727.1,12,1,23,0)
     11000           ISC REGION 1
"DATA",727.1,12,1,24,0)
     
"DATA",727.1,12,1,25,0)
  Select WKLD DATA INSTITUTION: ALBANY      NY             VAMC      500
"DATA",727.1,12,1,26,0)
  
"DATA",727.1,12,1,27,0)
       Select one of the following:
"DATA",727.1,12,1,28,0)
  
"DATA",727.1,12,1,29,0)
            Y         YES
"DATA",727.1,12,1,30,0)
            N         NO
"DATA",727.1,12,1,31,0)
  
"DATA",727.1,12,1,32,0)
  Do you want to select accession areas (YES or NO) : NO// YES
"DATA",727.1,12,1,33,0)
  Select ACCESSION AREA: CHEMISTRY      
"DATA",727.1,12,1,34,0)
  Select ACCESSION AREA: 
"DATA",727.1,12,1,35,0)
  DATE selection:
"DATA",727.1,12,1,36,0)
  
"DATA",727.1,12,1,37,0)
       Select one of the following:
"DATA",727.1,12,1,38,0)
  
"DATA",727.1,12,1,39,0)
            1         A specific date
"DATA",727.1,12,1,40,0)
            2         A range of dates
"DATA",727.1,12,1,41,0)
  
"DATA",727.1,12,1,42,0)
  Enter response: 2  A range of dates
"DATA",727.1,12,1,43,0)
  Date to START with: TODAY//7 1 97  (JUL 01, 1997)
"DATA",727.1,12,1,44,0)
  Date to END  with: LAST//7 31 97  (JUL 31, 1997)
"DATA",727.1,12,1,45,0)
  
"DATA",727.1,12,1,46,0)
       Select one of the following:
"DATA",727.1,12,1,47,0)
  
"DATA",727.1,12,1,48,0)
            Y         YES
"DATA",727.1,12,1,49,0)
            N         NO
"DATA",727.1,12,1,50,0)
  
"DATA",727.1,12,1,51,0)
  Do you want to select workload codes (YES or NO) : NO// 
"DATA",727.1,12,1,52,0)
  TIME selection:
"DATA",727.1,12,1,53,0)
  
"DATA",727.1,12,1,54,0)
       Select one of the following:
"DATA",727.1,12,1,55,0)
  
"DATA",727.1,12,1,56,0)
            1         A time range
"DATA",727.1,12,1,57,0)
            2         A set of shifts
"DATA",727.1,12,1,58,0)
  
"DATA",727.1,12,1,59,0)
  Enter response: 1  A time range
"DATA",727.1,12,1,60,0)
  Enter TIME RANGE in military format HHMM.SS (0.00 - 2400.00):
"DATA",727.1,12,1,61,0)
  START time: :  (0.00-2400.00): 0
"DATA",727.1,12,1,62,0)
  STOP time: :  (0.00-2400.00): 2400
"DATA",727.1,12,1,63,0)
  REPORT selection:
"DATA",727.1,12,1,64,0)
  
"DATA",727.1,12,1,65,0)
       Select one of the following:
"DATA",727.1,12,1,66,0)
  
"DATA",727.1,12,1,67,0)
            1         Detail report
"DATA",727.1,12,1,68,0)
            2         Summary report
"DATA",727.1,12,1,69,0)
  
"DATA",727.1,12,1,70,0)
  Enter response: 1  Detail report
"DATA",727.1,12,1,71,0)
  DEVICE: HOME// A138
"DATA",727.1,12,1,72,0)
   
"DATA",727.1,12,1,73,0)
  
"DATA",727.1,12,1,74,0)
Remember, if the facility has more than one Institution indentified in 
"DATA",727.1,12,1,75,0)
the WKLD DATA file (#64.1), a report for each must be generated.  If the
"DATA",727.1,12,1,76,0)
same Accession Area and procedures appear on more than one Institution's
"DATA",727.1,12,1,77,0)
workload statistics report, then the count from each for a given procedure
"DATA",727.1,12,1,78,0)
must be added together to compare with the figure on the LAB extract
"DATA",727.1,12,1,79,0)
audit report.
"DATA",727.1,12,1,80,0)
  
"DATA",727.1,12,1,81,0)
The workload statistics report can be many pages, so it is advisable to
"DATA",727.1,12,1,82,0)
limit it to a selected Accession Area for which data is being seen on the 
"DATA",727.1,12,1,83,0)
Laboratory (LAB) Extract Audit Report.  Be sure that the date range for
"DATA",727.1,12,1,84,0)
this workload statistics report is the same as the date range on the 
"DATA",727.1,12,1,85,0)
DSS LAB extract audit report.
"DATA",727.1,12,1,86,0)
   
"DATA",727.1,12,1,87,0)
It is also important to remember that these two reports will never show
"DATA",727.1,12,1,88,0)
a 100% correspondence in the totals reported.  This is because the 
"DATA",727.1,12,1,89,0)
workload statistics report is generated by procedure completion date,
"DATA",727.1,12,1,90,0)
whereas the LAB extract is essentially generated by specimen collection
"DATA",727.1,12,1,91,0)
date.  The LAB extract uses the specimen collection date because the
"DATA",727.1,12,1,92,0)
data extracted and sent to AAC must be correlated with patient encounter
"DATA",727.1,12,1,93,0)
data in order to produce the correct costing analysis.  And the specimen
"DATA",727.1,12,1,94,0)
collection date is always closely related to the encounter date.
"DATA",727.1,12,1,95,0)
 
"DATA",727.1,12,1,96,0)
In order to minimize the discrepancies between the two reports for
"DATA",727.1,12,1,97,0)
verification purposes, generate the reports for the full month.  Use
"DATA",727.1,12,1,98,0)
a start date of the first of the month, and an end date of the last day
"DATA",727.1,12,1,99,0)
of the month for both reports.  Narrowing the date range will cause
"DATA",727.1,12,1,100,0)
more and larger discrepancies to be seen.  However, there will be some
"DATA",727.1,12,1,101,0)
Lab procedures which always display differences in the totals shown
"DATA",727.1,12,1,102,0)
on these reports.  These procedures are those which frequently have
"DATA",727.1,12,1,103,0)
significant lag (i.e., greater than 30 days) between specimen collection
"DATA",727.1,12,1,104,0)
and test completion.
"DATA",727.1,12,1,105,0)
  
"DATA",727.1,12,1,106,0)
In order to be included in a DSS LAB extract, a lab procedure/test
"DATA",727.1,12,1,107,0)
must have an associated WKLD Code which satisfies at least one of the
"DATA",727.1,12,1,108,0)
following criteria:
"DATA",727.1,12,1,109,0)
   
"DATA",727.1,12,1,110,0)
  (1) The last 4 digits (after the decimal point) of the WKLD Code
"DATA",727.1,12,1,111,0)
      are "9999".
"DATA",727.1,12,1,112,0)
  
"DATA",727.1,12,1,113,0)
  (2) The first digit after the decimal of the WKLD Code is "8".
"DATA",727.1,12,1,114,0)
  
"DATA",727.1,12,1,115,0)
  (3) The WKLD Code is billable.  The BILLABLE PROCEDURE field
"DATA",727.1,12,1,116,0)
      (#4) for this WKLD Code entry in the WKLD CODE file (#64)
"DATA",727.1,12,1,117,0)
      is set to "YES".
"DATA",727.1,12,1,118,0)
  
"DATA",727.1,12,1,119,0)
  (4) The WKLD Code is marked as a DSS feeder key.  The DSS Feeder
"DATA",727.1,12,1,120,0)
      Key field (#14) for this WKLD Code entry in the WKLD CODE 
"DATA",727.1,12,1,121,0)
      file (#64) is set to "YES".
"DATA",727.1,12,1,122,0)
  
"DATA",727.1,12,1,123,0)
So there may be many more LMIP codes appearing on the workload statistics
"DATA",727.1,12,1,124,0)
report than on the extract audit report for a given Accession Area.
"DATA",727.1,12,1,125,0)
Verify extract data by comparing totals for each procedure/LMIP code
"DATA",727.1,12,1,126,0)
appearing on the extract audit report with the total for the same 
"DATA",727.1,12,1,127,0)
procedure/LMIP code on the Laboratory workload statistics report.
"DATA",727.1,12,1,128,0)
Also, verify that each procedure/LMIP code which satisfies criteria
"DATA",727.1,12,1,129,0)
(1) or (2) on the workload statistics report also appears on the LAB
"DATA",727.1,12,1,130,0)
extract audit report.
"DATA",727.1,12,1,131,0)
 
"DATA",727.1,12,1,132,0)
Remember, since the LAB extract is based on specimen collection date
"DATA",727.1,12,1,133,0)
rather than test completion (workload) date, it will not be unusual to
"DATA",727.1,12,1,134,0)
see small differences in the totals reported for a given procedure.
"DATA",727.1,12,1,135,0)
Procedures which consistently show a significantly lower total on the
"DATA",727.1,12,1,136,0)
LAB extract audit report than on the workload statistics report are
"DATA",727.1,12,1,137,0)
probably procedures which frequently have a large lag between date
"DATA",727.1,12,1,138,0)
of specimen collection and date of workload reporting.
"DATA",727.1,12,"ROU")
ECXLABN
"DATA",727.1,13,0)
RADIOLOGY^727.814^M^^^^Radiology^RAD^RAD^6^^0
"DATA",727.1,13,1,0)
^^33^33^2980706^^^^
"DATA",727.1,13,1,1,0)
   
"DATA",727.1,13,1,2,0)
Verify against: Procedure/CPT Statistics Report, Inpatient
"DATA",727.1,13,1,3,0)
                Procedure/CPT Statistics Report, Outpatient
"DATA",727.1,13,1,4,0)
Menu Option:    Procedure/CPT Statistics Report [RA CPTSTATS]
"DATA",727.1,13,1,5,0)
 
"DATA",727.1,13,1,6,0)
The Procedure/CPT Statistics Report for Radiology is the primary VistA
"DATA",727.1,13,1,7,0)
report against which RAD extract data should be verified.  The Procedure/CPT
"DATA",727.1,13,1,8,0)
Statistics Report and the DSS Radiology (RAD) Extract Audit print data in
"DATA",727.1,13,1,9,0)
very similar formats, so verification of extract data should be a simple,
"DATA",727.1,13,1,10,0)
one-to-one process.  However, the totals by procedure shown on the RAD 
"DATA",727.1,13,1,11,0)
extract audit report may be lower in some cases.  This is because the
"DATA",727.1,13,1,12,0)
RAD extract data does not include cancelled exams or any other exam
"DATA",727.1,13,1,13,0)
where the EXAM STATUS field (#3) in the RAD/NUC MED PATIENT file (#70) 
"DATA",727.1,13,1,14,0)
has an ORDER field (#3) in the EXAMINATION STATUS file (#72) with a 
"DATA",727.1,13,1,15,0)
value of zero.  Comparing the two reports over a shorter time period will
"DATA",727.1,13,1,16,0)
help to minimize these differences.  (For example, instead of generating
"DATA",727.1,13,1,17,0)
each report for an entire month, use a 1-3 day date range.)
"DATA",727.1,13,1,18,0)
 
"DATA",727.1,13,1,19,0)
When generating each of these reports, the user may select the Radiology
"DATA",727.1,13,1,20,0)
division and the date range of the data to be included.  Both reports list
"DATA",727.1,13,1,21,0)
CPT procedures and the number of occurrences.  The procedures are grouped
"DATA",727.1,13,1,22,0)
by Radiology division and imaging type.  The Procedure/CPT Statistics Report
"DATA",727.1,13,1,23,0)
lists inpatient and outpatient data seperately, while the Radiology (RAD)
"DATA",727.1,13,1,24,0)
Extract Audit Report shows the inpatient and outpatient data side-by-side.
"DATA",727.1,13,1,25,0)
 
"DATA",727.1,13,1,26,0)
The extract audit report shows data for ALL procedures and imaging types
"DATA",727.1,13,1,27,0)
within the division(s) selected.  Therefore, the user should accept the
"DATA",727.1,13,1,28,0)
default answer to the following prompts when requesting the Procedure/CPT
"DATA",727.1,13,1,29,0)
Statistics Report:
"DATA",727.1,13,1,30,0)
 
"DATA",727.1,13,1,31,0)
   Select Imaging Type: All//  
"DATA",727.1,13,1,32,0)
  
"DATA",727.1,13,1,33,0)
   Do you wish to include all Procedures? Yes//
"DATA",727.1,13,"ROU")
ECXRAD
"DATA",727.1,14,0)
EVENT CAPTURE^727.815^M^^^^Event Capture^ECS^EC^3^^0
"DATA",727.1,14,1,0)
^^16^16^2980706^^^^
"DATA",727.1,14,1,1,0)
 
"DATA",727.1,14,1,2,0)
Verify against: DSS Unit Workload Summary Report
"DATA",727.1,14,1,3,0)
Menu Option:    DSS Unit Workload Summary [ECRDSSU]
"DATA",727.1,14,1,4,0)
  
"DATA",727.1,14,1,5,0)
The DSS Unit Workload Summary Report, available in the VistA Event Capture 
"DATA",727.1,14,1,6,0)
application, provides a convenient method of verifying ECS extract data.
"DATA",727.1,14,1,7,0)
  
"DATA",727.1,14,1,8,0)
Both the DSS Unit Workload Summary Report and the Event Capture (ECS)
"DATA",727.1,14,1,9,0)
Extract Audit Report list procedures alphabetically within Category
"DATA",727.1,14,1,10,0)
and DSS Unit for one, many, or all Event Capture Locations.  Of course,
"DATA",727.1,14,1,11,0)
the date range specified for each report must be the same.
"DATA",727.1,14,1,12,0)
  
"DATA",727.1,14,1,13,0)
Verification of extract data is quite straightforward.  The figures
"DATA",727.1,14,1,14,0)
which reflect the total volume of procedures on the extract audit report
"DATA",727.1,14,1,15,0)
can be directly compared to the corresponding figures on the Event
"DATA",727.1,14,1,16,0)
Capture workload summary report.
"DATA",727.1,14,"ROU")
ECXEC
"DATA",727.1,15,0)
IV^727.819^M^^^^IVs (detail)^IVP^IV^19^^0
"DATA",727.1,15,"ROU")
ECXPIVD
"DATA",727.1,16,0)
TREATING SPECIALTY CHANGE^727.817^M^^^^Treating specialty change^TRT^TREAT^17^^0
"DATA",727.1,16,1,0)
^^65^65^2980706^^^^
"DATA",727.1,16,1,1,0)
 
"DATA",727.1,16,1,2,0)
Verify against: Gains & Losses Sheet/Treating Specialty Report
"DATA",727.1,16,1,3,0)
Menu Option:    Gains and Losses (G&L) Sheet [DG G&L SHEET]
"DATA",727.1,16,1,4,0)
 
"DATA",727.1,16,1,5,0)
The Treating Specialty Report included in the printout of the Gains and
"DATA",727.1,16,1,6,0)
Losses Sheet is the primary VistA report against which TRT extract data
"DATA",727.1,16,1,7,0)
can be verified.  Copies of these reports are readily available from
"DATA",727.1,16,1,8,0)
patient administration services at most medical centers.
"DATA",727.1,16,1,9,0)
  
"DATA",727.1,16,1,10,0)
The G&L Treating Specialty Report is generated on a daily basis, and shows
"DATA",727.1,16,1,11,0)
gains and losses to each facility treating specialty during the previous
"DATA",727.1,16,1,12,0)
24-hour period.  The Treating Specialty Change (TRT) Extract Audit
"DATA",727.1,16,1,13,0)
Report shows total losses to the various specialties for a date range
"DATA",727.1,16,1,14,0)
(usually, one month for a given extract).  Therefore, the figures from the
"DATA",727.1,16,1,15,0)
G&L Treating Specialty Report must be tallied (either manually or with
"DATA",727.1,16,1,16,0)
the help of a spreadsheet application) over the same date range in order
"DATA",727.1,16,1,17,0)
to compare totals with the TRT extract audit report.
"DATA",727.1,16,1,18,0)
   
"DATA",727.1,16,1,19,0)
The user should note, that the G&L Treating Specialty Report is based
"DATA",727.1,16,1,20,0)
on facility treating specialties which are entries in the FACILITY TREATING
"DATA",727.1,16,1,21,0)
SPECIALTY file (#45.7).  The TRT extract, however, submits data to the 
"DATA",727.1,16,1,22,0)
Decision Support System (DSS) based on nationally recognized specialties
"DATA",727.1,16,1,23,0)
which are entries in the SPECIALTY file (#42.4).  
"DATA",727.1,16,1,24,0)
   
"DATA",727.1,16,1,25,0)
Therefore, the Treating Specialty Change (TRT) Extract Audit Report
"DATA",727.1,16,1,26,0)
displays both identifiers. The national specialty name (along with its
"DATA",727.1,16,1,27,0)
DSS code in parentheses) and the total number of losses to that specialty
"DATA",727.1,16,1,28,0)
are printed first.  There may be one or more Facility Treating Specialties
"DATA",727.1,16,1,29,0)
associated with a given national specialty.  The names of the associated
"DATA",727.1,16,1,30,0)
facility treating specialties are printed immediately underneath the
"DATA",727.1,16,1,31,0)
specialty name, and slightly indented.  (Only active facility treating
"DATA",727.1,16,1,32,0)
specialties are displayed.)
"DATA",727.1,16,1,33,0)
  
"DATA",727.1,16,1,34,0)
If there is more than one facility treating specialty associated with
"DATA",727.1,16,1,35,0)
the national specialty, then you must add together the losses shown on
"DATA",727.1,16,1,36,0)
the G&L Treating Specialty Report for each of those facility treating
"DATA",727.1,16,1,37,0)
specialties to arrive at the total number of losses shown on the TRT
"DATA",727.1,16,1,38,0)
Extract Audit Report for the specialty.
"DATA",727.1,16,1,39,0)
  
"DATA",727.1,16,1,40,0)
Both reports also show total losses by Service, so verification may be
"DATA",727.1,16,1,41,0)
accomplished with a lower degree of specificity.
"DATA",727.1,16,1,42,0)
  
"DATA",727.1,16,1,43,0)
Important note:
"DATA",727.1,16,1,44,0)
  
"DATA",727.1,16,1,45,0)
The total losses for all specialties seen on the TRT Extract Audit
"DATA",727.1,16,1,46,0)
Report ("Grand Total for all Services") may not reflect the total
"DATA",727.1,16,1,47,0)
number of records contained in the TRT extract.  This is because the
"DATA",727.1,16,1,48,0)
TRT extract includes provider-only changes, as well as true treating 
"DATA",727.1,16,1,49,0)
specialty changes.  In order to compare the TRT Extract Audit Report
"DATA",727.1,16,1,50,0)
to the G&L Treating Specialty Report, these provider-only changes
"DATA",727.1,16,1,51,0)
are being screened out of the total counts on the extract audit
"DATA",727.1,16,1,52,0)
report to the extent possible.  If your facility logs many of these
"DATA",727.1,16,1,53,0)
provider-only changes for its inpatients, you will see a significant
"DATA",727.1,16,1,54,0)
difference in the "Grand Total for all Services" and the total number
"DATA",727.1,16,1,55,0)
of records in the TRT extract.
"DATA",727.1,16,1,56,0)
  
"DATA",727.1,16,1,57,0)
The logic being used to screen out provider-only changes will
"DATA",727.1,16,1,58,0)
not be 100% effective if your facility has more than one active
"DATA",727.1,16,1,59,0)
facility treating specialty associated with a national specialty.
"DATA",727.1,16,1,60,0)
When this is the case, it is not possible to distinguish true
"DATA",727.1,16,1,61,0)
treating specialty changes from provider-only changes with the data
"DATA",727.1,16,1,62,0)
currently available in the extract record.  This will cause the
"DATA",727.1,16,1,63,0)
total losses for the specialty on the TRT Extract Audit Report
"DATA",727.1,16,1,64,0)
to be inflated.
"DATA",727.1,16,1,65,0)
  
"DATA",727.1,16,"ROU")
ECXTRT
"DATA",727.1,17,0)
PAI^727.823^M^^^^PAF^PAS^PAI^20^^0
"DATA",727.1,17,1,0)
^^33^33^2971223^^^^
"DATA",727.1,17,1,1,0)
   
"DATA",727.1,17,1,2,0)
Verify against: Record Status Report
"DATA",727.1,17,1,3,0)
Menu Option:    Record Status Report [DG RUG STATUS]
"DATA",727.1,17,1,4,0)
  
"DATA",727.1,17,1,5,0)
At the present time, there is no feasible method by which to truly
"DATA",727.1,17,1,6,0)
verify data extracted for the DSS PAI Extract.  The PAF (PAS) Extract
"DATA",727.1,17,1,7,0)
Audit Report simply states the total number of patient assessment
"DATA",727.1,17,1,8,0)
records extracted from the PAF file (#45.9) for the date range.  That
"DATA",727.1,17,1,9,0)
total number could be verified by performing a simple VA FileMan
"DATA",727.1,17,1,10,0)
print from file #45.9.  The print template can be set up to display
"DATA",727.1,17,1,11,0)
simply the total number of records within a date range, rather than
"DATA",727.1,17,1,12,0)
showing data within each record.  Sort the records in the PAF file by
"DATA",727.1,17,1,13,0)
the ASSESSMENT DATE field (#2) and specify a start date and end date
"DATA",727.1,17,1,14,0)
which match those used in the PAF (PAS) Extract Audit Report.
"DATA",727.1,17,1,15,0)
  
"DATA",727.1,17,1,16,0)
The Record Status Report, available through VistA's PIMS application,
"DATA",727.1,17,1,17,0)
could also be used for this purpose.  It should be noted, however, that
"DATA",727.1,17,1,18,0)
use of the Record Status Report is not very efficient.  Much more
"DATA",727.1,17,1,19,0)
information is displayed on this report than is needed to verify the
"DATA",727.1,17,1,20,0)
simple total shown on the PAF (PAS) Extract Audit Report.  But if the
"DATA",727.1,17,1,21,0)
Record Status Report is used, please be sure that the following prompts
"DATA",727.1,17,1,22,0)
are answered as indicated below when setting up the report request:
"DATA",727.1,17,1,23,0)
  
"DATA",727.1,17,1,24,0)
   (Record Status Report [DG RUG STATUS])
"DATA",727.1,17,1,25,0)
  
"DATA",727.1,17,1,26,0)
   Select division: ALL// <cr>
"DATA",727.1,17,1,27,0)
   (C)NH, (R)egular PAIs, (B)oth: B// REGULAR PAIS
"DATA",727.1,17,1,28,0)
   Select ward: ALL// <cr>
"DATA",727.1,17,1,29,0)
   Sort by (A)ssessment or (T)ransfer/Admission Date: T// ASSESSMENT
"DATA",727.1,17,1,30,0)
  
"DATA",727.1,17,1,31,0)
Counting the number of records displayed on this report should provide
"DATA",727.1,17,1,32,0)
the same total as shown on the PAF (PAS) Extract Audit Report for the
"DATA",727.1,17,1,33,0)
same date range.
"DATA",727.1,17,"ROU")
ECXPAI
"DATA",727.1,18,0)
LAB RESULTS^727.824^M^^^^Lab Results^LAR^LAB^21^^0
"DATA",727.1,18,"ROU")
ECXLABR
"DATA",727.1,19,0)
QUASAR^727.825^M^1^^^QUASAR^ECQ^QSR^22^^0
"DATA",727.1,19,1,0)
^727.11^49^49^3001018^^^^
"DATA",727.1,19,1,1,0)
 
"DATA",727.1,19,1,2,0)
Verify against: Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,3,0)
                   All Clinicians
"DATA",727.1,19,1,4,0)
                Audiology & Speech Pathology Procedure Statistics for
"DATA",727.1,19,1,5,0)
                   All Other Providers
"DATA",727.1,19,1,6,0)
Menu Option:    Statistics by Procedure [ACKQAS PROC STATS]
"DATA",727.1,19,1,7,0)
  
"DATA",727.1,19,1,8,0)
The Audiology & Speech Pathology Procedure Statistics report, available
"DATA",727.1,19,1,9,0)
in the VistA QUASAR application, provides a convenient method of verifying
"DATA",727.1,19,1,10,0)
ECQ extract data.
"DATA",727.1,19,1,11,0)
   
"DATA",727.1,19,1,12,0)
This QUASAR report must be generated twice.  Generate one report for 'ALL
"DATA",727.1,19,1,13,0)
CLINICIANS', and another for 'ALL OTHER PROVIDERS'.  Be sure that each
"DATA",727.1,19,1,14,0)
report is generated for BOTH Audiology and Speech, and specify a date
"DATA",727.1,19,1,15,0)
range that is the same as the date range specified for the QUASAR (ECQ)
"DATA",727.1,19,1,16,0)
Extract Audit Report.
"DATA",727.1,19,1,17,0)
  
"DATA",727.1,19,1,18,0)
The Audiology & Speech Pathology Procedure Statistics report displays 
"DATA",727.1,19,1,19,0)
procedure data both in detail and summary form.  The summary appears on 
"DATA",727.1,19,1,20,0)
the last page(s) of the printout; the page header contains the word 
"DATA",727.1,19,1,21,0)
"Summary".
"DATA",727.1,19,1,22,0)
  
"DATA",727.1,19,1,23,0)
Procedure data on both the Audiology & Speech Pathology Procedure
"DATA",727.1,19,1,24,0)
Statistics report and the QUASAR (ECQ) Extract Audit Report is grouped
"DATA",727.1,19,1,25,0)
by functional area; i.e., either Audiology or Speech.
"DATA",727.1,19,1,26,0)
  
"DATA",727.1,19,1,27,0)
Verify any procedure volume figure appearing in the QUASAR (ECQ)
"DATA",727.1,19,1,28,0)
Extract Audit Report bycomparing it to the sum of:
"DATA",727.1,19,1,29,0)
  
"DATA",727.1,19,1,30,0)
     the count figure for that procedure on 
"DATA",727.1,19,1,31,0)
     the summary page of the All Clinicians report
"DATA",727.1,19,1,32,0)
  
"DATA",727.1,19,1,33,0)
     plus--
"DATA",727.1,19,1,34,0)
  
"DATA",727.1,19,1,35,0)
     the count figure for the same procedure on the
"DATA",727.1,19,1,36,0)
     summary page of the All Other Providers report.
"DATA",727.1,19,1,37,0)
  
"DATA",727.1,19,1,38,0)
Or verification can be accomplished to a lower degree of specificity
"DATA",727.1,19,1,39,0)
by comparing the total number of all types of procedures for a DSS Unit
"DATA",727.1,19,1,40,0)
(i.e., either Audiology or Speech) with the sum of:
"DATA",727.1,19,1,41,0)
  
"DATA",727.1,19,1,42,0)
     the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,43,0)
     the summary page of the All Clinicians report
"DATA",727.1,19,1,44,0)
  
"DATA",727.1,19,1,45,0)
     plus--
"DATA",727.1,19,1,46,0)
  
"DATA",727.1,19,1,47,0)
     the total figure (for either Audiology or Speech) on
"DATA",727.1,19,1,48,0)
     summary page of the All Other Providers report.
"DATA",727.1,19,1,49,0)
  
"DATA",727.1,19,"ROU")
ECXQSR
"DATA",727.1,20,0)
PROSTHETICS^727.826^M^^^^Prosthetics^PRO^PRO^23^^0
"DATA",727.1,20,1,0)
^^182^182^2990504
"DATA",727.1,20,1,1,0)
 The following PROSTHETICS package options may be used to verify the PRO
"DATA",727.1,20,1,2,0)
 extract audit report.
"DATA",727.1,20,1,3,0)
  
"DATA",727.1,20,1,4,0)
 RMPR NPPD PRT          Print NPPD Worksheets
"DATA",727.1,20,1,5,0)
 RMPR NPPD PRL L        Print NPPD Single Line Detail
"DATA",727.1,20,1,6,0)
   
"DATA",727.1,20,1,7,0)
 Please note, however, that these Prosthetics package options organize
"DATA",727.1,20,1,8,0)
 and display data by the ENTRY DATE field (#.01) of the Prosthetics 
"DATA",727.1,20,1,9,0)
 items in its RECORD OF PROS APPLIANCE/REPAIR file (#660).  The PRO
"DATA",727.1,20,1,10,0)
 extract record does not use the ENTRY DATE.  Instead, it uses the
"DATA",727.1,20,1,11,0)
 DELIVERY DATE (field #10) of the Prosthetic item.  Therefore, the PRO
"DATA",727.1,20,1,12,0)
 extract audit report organizes and displays data by DELIVERY DATE.
"DATA",727.1,20,1,13,0)
  
"DATA",727.1,20,1,14,0)
 Because of this date difference, the user may see many discrepancies 
"DATA",727.1,20,1,15,0)
 between the PRO extract audit report and the PROSTHETICS package NPPD
"DATA",727.1,20,1,16,0)
 reports.  This will be particularly true for large, high cost items 
"DATA",727.1,20,1,17,0)
 which are ordered far in advance of actual delivery date.  The DSS 
"DATA",727.1,20,1,18,0)
 program office has requested that PROSTHETICS provide an NPPD report 
"DATA",727.1,20,1,19,0)
 which is sorted by DELIVERY DATE rather than ENTRY DATE to facilitate 
"DATA",727.1,20,1,20,0)
 this validation process.
"DATA",727.1,20,1,21,0)
  
"DATA",727.1,20,1,22,0)
 A PRO extract audit report can be printed in SUMMARY or in DETAIL.
"DATA",727.1,20,1,23,0)
 The SUMMARY report displays data by NPPD line item, while the DETAIL
"DATA",727.1,20,1,24,0)
 report shows a breakout of data contained in a specific line item. 
"DATA",727.1,20,1,25,0)
 The following shows each NPPD category and the line items it contains:
"DATA",727.1,20,1,26,0)
   
"DATA",727.1,20,1,27,0)
 1.   WHEELCHAIRS AND ACCESSORIES
"DATA",727.1,20,1,28,0)
  
"DATA",727.1,20,1,29,0)
      100 A   MOTORIZED
"DATA",727.1,20,1,30,0)
      100 A1  SCOOTERS
"DATA",727.1,20,1,31,0)
      100 B   MANUAL CUSTOM
"DATA",727.1,20,1,32,0)
      100 C   MANUAL A/O
"DATA",727.1,20,1,33,0)
      100 D   ACCESSORIES
"DATA",727.1,20,1,34,0)
      100 E   CUSHION FOAM
"DATA",727.1,20,1,35,0)
      100 F   CUSHION SPEC
"DATA",727.1,20,1,36,0)
   
"DATA",727.1,20,1,37,0)
 2.   ARTIFICAL LEGS
"DATA",727.1,20,1,38,0)
  
"DATA",727.1,20,1,39,0)
      200 A   LEG IPOP
"DATA",727.1,20,1,40,0)
      200 B   LEG TEM
"DATA",727.1,20,1,41,0)
      200 C   LEG PART FOOT
"DATA",727.1,20,1,42,0)
      200 E   LEG SYMES
"DATA",727.1,20,1,43,0)
      200 F   LEG B/K
"DATA",727.1,20,1,44,0)
      200 G   LEG A/O
"DATA",727.1,20,1,45,0)
      200 H   LEG A/K
"DATA",727.1,20,1,46,0)
  
"DATA",727.1,20,1,47,0)
 3.   ARTIFICAL ARMS AND TERMINAL DEVICES
"DATA",727.1,20,1,48,0)
  
"DATA",727.1,20,1,49,0)
      300 A   ARM B/E
"DATA",727.1,20,1,50,0)
      300 B   ARM, A/E
"DATA",727.1,20,1,51,0)
      300 C   COSMETIC GLOVES
"DATA",727.1,20,1,52,0)
      300 D   ARM, A/O
"DATA",727.1,20,1,53,0)
      300 E   TERMINAL DEVICES
"DATA",727.1,20,1,54,0)
      300 F   EXT. POWERED,ARM
"DATA",727.1,20,1,55,0)
  
"DATA",727.1,20,1,56,0)
 4.   BRACES AND ORTHOTICS
"DATA",727.1,20,1,57,0)
  
"DATA",727.1,20,1,58,0)
      400 A   BRACE ANKLE
"DATA",727.1,20,1,59,0)
      400 B   BRACE LEG AK
"DATA",727.1,20,1,60,0)
      400 C   BRACE, SPINAL
"DATA",727.1,20,1,61,0)
      400 D   BRACE AL/OTH
"DATA",727.1,20,1,62,0)
      400 E   ELAS HOSE, EA
"DATA",727.1,20,1,63,0)
      400 F   BRACES, KNEE
"DATA",727.1,20,1,64,0)
      400 G   CORSET/BELT
"DATA",727.1,20,1,65,0)
  
"DATA",727.1,20,1,66,0)
 5.   SHOES/ORTHOTICS
"DATA",727.1,20,1,67,0)
  
"DATA",727.1,20,1,68,0)
      500 A   ARCH SUPT, EA
"DATA",727.1,20,1,69,0)
      500 B   SHOE INLAY, EA
"DATA",727.1,20,1,70,0)
      500 C   SHOE MOLDED, EA
"DATA",727.1,20,1,71,0)
      500 D   SHOE ORTH OTH
"DATA",727.1,20,1,72,0)
      500 E   INSERTS, SHOE
"DATA",727.1,20,1,73,0)
      500 F   SHOES A/O, EA
"DATA",727.1,20,1,74,0)
  
"DATA",727.1,20,1,75,0)
 6.   NEUROSENSORY AIDS
"DATA",727.1,20,1,76,0)
   
"DATA",727.1,20,1,77,0)
      600 1   EYEGLASSES PR
"DATA",727.1,20,1,78,0)
      600 A   SP OVER 2,500
"DATA",727.1,20,1,79,0)
      600 B   HEARING AIDS
"DATA",727.1,20,1,80,0)
      600 C   AID FOR BLIND
"DATA",727.1,20,1,81,0)
      600 D   CONT LENS, EA.
"DATA",727.1,20,1,82,0)
      600 E   EAR INSERT
"DATA",727.1,20,1,83,0)
  
"DATA",727.1,20,1,84,0)
 7.   RESTORATIONS
"DATA",727.1,20,1,85,0)
  
"DATA",727.1,20,1,86,0)
      700 A   EYE
"DATA",727.1,20,1,87,0)
      700 B   FACIAL
"DATA",727.1,20,1,88,0)
      700 C   BODY, OTHER
"DATA",727.1,20,1,89,0)
  
"DATA",727.1,20,1,90,0)
 8.   OXYGEN AND RESPIRATIORY
"DATA",727.1,20,1,91,0)
  
"DATA",727.1,20,1,92,0)
      800 A   OXYGEN EQP
"DATA",727.1,20,1,93,0)
      800 B   OXYGEN CONCEN
"DATA",727.1,20,1,94,0)
      800 C   OXYGEN GAS
"DATA",727.1,20,1,95,0)
      800 D   OXYGEN, SUPPLIES
"DATA",727.1,20,1,96,0)
      800 E   OXYGEN LIQUID
"DATA",727.1,20,1,97,0)
      800 F   VENTILATOR, A/O
"DATA",727.1,20,1,98,0)
  
"DATA",727.1,20,1,99,0)
 9.   MEDICAL EQUIPMENT, MISC., ALL OTHER NEW
"DATA",727.1,20,1,100,0)
  
"DATA",727.1,20,1,101,0)
      900 A   WALKING AIDS
"DATA",727.1,20,1,102,0)
      900 B   INVALID LIFT
"DATA",727.1,20,1,103,0)
      900 C   BED HOSP STD
"DATA",727.1,20,1,104,0)
      900 D   BED HOSP SPEC
"DATA",727.1,20,1,105,0)
      900 E   MATTRESS STAN
"DATA",727.1,20,1,106,0)
      900 F   MATTRESS SPEC
"DATA",727.1,20,1,107,0)
      900 G   BED, ACCESSORIES
"DATA",727.1,20,1,108,0)
      900 H   ENVIRON CONTR
"DATA",727.1,20,1,109,0)
      900 I   SPEC HOME EQP (SAFETY)
"DATA",727.1,20,1,110,0)
      900 J   TENS UNIT
"DATA",727.1,20,1,111,0)
      900 K   MED EQP AL/OTH
"DATA",727.1,20,1,112,0)
      900 L   EQP RENTAL
"DATA",727.1,20,1,113,0)
      910 A   MED SUP AL/OTH
"DATA",727.1,20,1,114,0)
      920 A   HOME DIAL EQP
"DATA",727.1,20,1,115,0)
      920 B   HOME DIAL SUP
"DATA",727.1,20,1,116,0)
      930 A   MOD VANS
"DATA",727.1,20,1,117,0)
      930 B   ADAPT EQP AL/OTH
"DATA",727.1,20,1,118,0)
      999 A   AL/OTH ITEMS
"DATA",727.1,20,1,119,0)
      999 X   HCPCS NOT GRP
"DATA",727.1,20,1,120,0)
      999 Z   NO HCPCS
"DATA",727.1,20,1,121,0)
  
"DATA",727.1,20,1,122,0)
 10.  REPAIR
"DATA",727.1,20,1,123,0)
  
"DATA",727.1,20,1,124,0)
      R10     WHEELCHAIR
"DATA",727.1,20,1,125,0)
      R20 A   LEG A/K
"DATA",727.1,20,1,126,0)
      R20 B   LEG B/K, PTB
"DATA",727.1,20,1,127,0)
      R20 C   LEG B/K, STD
"DATA",727.1,20,1,128,0)
      R20 D   LEG ALL OTHER
"DATA",727.1,20,1,129,0)
      R30     ART ARM,TOTAL
"DATA",727.1,20,1,130,0)
      R40     BRACE TOTAL
"DATA",727.1,20,1,131,0)
      R50 A   ORTH SHOE ALL
"DATA",727.1,20,1,132,0)
      R50 B   SHOE MOD
"DATA",727.1,20,1,133,0)
      R50 C   A/O ITEM SERV
"DATA",727.1,20,1,134,0)
      R60 A   AID FOR BLIND
"DATA",727.1,20,1,135,0)
      R60 B   EYEGLASS RPR
"DATA",727.1,20,1,136,0)
      R60 C   HEARING AID
"DATA",727.1,20,1,137,0)
      R70     HOME DIAL EQU
"DATA",727.1,20,1,138,0)
      R80 A   INVALID LIFTS
"DATA",727.1,20,1,139,0)
      R80 B   REPAIR TO ECU
"DATA",727.1,20,1,140,0)
      R80 C   MED EQUIP A/O
"DATA",727.1,20,1,141,0)
      R90     ALL OTHER
"DATA",727.1,20,1,142,0)
      R90 A   SHIPPING
"DATA",727.1,20,1,143,0)
      R99 X   HCPCS NOT GRP
"DATA",727.1,20,1,144,0)
      R99 Z   NO HCPCS
"DATA",727.1,20,1,145,0)
   
"DATA",727.1,20,1,146,0)
 Compare a SUMMARY report to the Print NPPD Worksheets report of the
"DATA",727.1,20,1,147,0)
 PROSTHETICS package.  Compare a DETAIL report to the Print NPPD Single
"DATA",727.1,20,1,148,0)
 Line Detail report of the PROSTHETICS package.  In spite of the date
"DATA",727.1,20,1,149,0)
 problem indicated above, the user should usually specify the same date
"DATA",727.1,20,1,150,0)
 range for both the PRO extract audit report and its related NPPD 
"DATA",727.1,20,1,151,0)
 report.  This date range will generally be a one month period which
"DATA",727.1,20,1,152,0)
 covers the first day through the last day of a given month.
"DATA",727.1,20,1,153,0)
   
"DATA",727.1,20,1,154,0)
 However, it may be useful under certain conditions to vary the date 
"DATA",727.1,20,1,155,0)
 range when comparing DETAIL from the PRO extract audit report with an
"DATA",727.1,20,1,156,0)
 NPPD single line report.  For example, if it is known that for some
"DATA",727.1,20,1,157,0)
 complex Prosthetics items (e.g., artificial limbs) the order date 
"DATA",727.1,20,1,158,0)
 normally precedes delivery date by about 90 days, and if you wish to
"DATA",727.1,20,1,159,0)
 verify January PRO extract data, then --
"DATA",727.1,20,1,160,0)
  
"DATA",727.1,20,1,161,0)
 (a) generate a DETAIL display for the appropriate NPPD line item
"DATA",727.1,20,1,162,0)
     category (e.g., 200 A, LEG IPOP) from a PRO extract audit report 
"DATA",727.1,20,1,163,0)
     which covers a date range of January 1 through January 31;
"DATA",727.1,20,1,164,0)
  
"DATA",727.1,20,1,165,0)
 (b) generate an NPPD single line detail report for that same line
"DATA",727.1,20,1,166,0)
     item for a date range of October 1 through October 31.
"DATA",727.1,20,1,167,0)
   
"DATA",727.1,20,1,168,0)
 The NPPD single line report for October may coincide quite well
"DATA",727.1,20,1,169,0)
 with the PRO extract audit report DETAIL for January. 
"DATA",727.1,20,1,170,0)
  
"DATA",727.1,20,1,171,0)
 A further note for sites that are multi-divisional for PROSTHETICS.
"DATA",727.1,20,1,172,0)
 ===================================================================
"DATA",727.1,20,1,173,0)
  
"DATA",727.1,20,1,174,0)
    A multi-divisional Prosthetics site can print NPPD data reports
"DATA",727.1,20,1,175,0)
    for only ONE division at a time.  The PRO extract audit report
"DATA",727.1,20,1,176,0)
    may be printed for a single division or for an entire facility.
"DATA",727.1,20,1,177,0)
  
"DATA",727.1,20,1,178,0)
    To compare the PRO extract audit report with the PROSTHETICS 
"DATA",727.1,20,1,179,0)
    package NPPD report, the user must select the same division for
"DATA",727.1,20,1,180,0)
    both reports.  Or the user may generate a PRO extract audit
"DATA",727.1,20,1,181,0)
    report for the entire facility and compare its data to the sum
"DATA",727.1,20,1,182,0)
    of the data from each of the single division NPPD reports.
"DATA",727.1,20,"ROU")
ECXPRO
"DATA",727.1,21,0)
NUTRITION^727.832^M^^^^Nutrition^NUT^NUT^28^200^0
"DATA",727.1,21,"ROU")
ECXNUT
"DATA",727.1,23,0)
CLINIC^727.827^M^30^30^^Clinic Extract 2001^CLI^SCX^25^^0
"DATA",727.1,23,"ROU")
ECXSCXN
"DATA",727.1,24,0)
BCMA EXTRACT^727.828^M^30^30^^Bar Code Medical Adm^BCM^BCM^26^^1
"DATA",727.1,24,"ROU")
ECXBCM
"FIA",727.1)
EXTRACT DEFINITIONS
"FIA",727.1,0)
^ECX(727.1,
"FIA",727.1,0,0)
727.1
"FIA",727.1,0,1)
n^n^f^^^^y^m^n
"FIA",727.1,0,10)

"FIA",727.1,0,11)

"FIA",727.1,0,"RLRO")

"FIA",727.1,0,"VR")
3.0^ECX
"FIA",727.1,727.1)
0
"FIA",727.1,727.11)
0
"FIA",727.802)
ADMISSION EXTRACT
"FIA",727.802,0)
^ECX(727.802,
"FIA",727.802,0,0)
727.802
"FIA",727.802,0,1)
y^y^p^^^^n^^n
"FIA",727.802,0,10)

"FIA",727.802,0,11)

"FIA",727.802,0,"RLRO")

"FIA",727.802,0,"VR")
3.0^ECX
"FIA",727.802,727.802)
1
"FIA",727.802,727.802,60)

"FIA",727.802,727.802,76)

"FIA",727.802,727.802,77)

"FIA",727.802,727.802,78)

"FIA",727.802,727.802,79)

"FIA",727.802,727.802,80)

"FIA",727.802,727.802,81)

"FIA",727.808)
PHYSICAL MOVEMENT EXTRACT
"FIA",727.808,0)
^ECX(727.808,
"FIA",727.808,0,0)
727.808
"FIA",727.808,0,1)
y^y^p^^^^n^^n
"FIA",727.808,0,10)

"FIA",727.808,0,11)

"FIA",727.808,0,"RLRO")

"FIA",727.808,0,"VR")
3.0^ECX
"FIA",727.808,727.808)
1
"FIA",727.808,727.808,32)

"FIA",727.809)
UNIT DOSE LOCAL EXTRACT
"FIA",727.809,0)
^ECX(727.809,
"FIA",727.809,0,0)
727.809
"FIA",727.809,0,1)
y^y^p^^^^n^^n
"FIA",727.809,0,10)

"FIA",727.809,0,11)

"FIA",727.809,0,"RLRO")

"FIA",727.809,0,"VR")
3.0^ECX
"FIA",727.809,727.809)
1
"FIA",727.809,727.809,28)

"FIA",727.809,727.809,75)

"FIA",727.809,727.809,76)

"FIA",727.81)
PRESCRIPTION EXTRACT
"FIA",727.81,0)
^ECX(727.81,
"FIA",727.81,0,0)
727.81
"FIA",727.81,0,1)
y^y^p^^^^n^^n
"FIA",727.81,0,10)

"FIA",727.81,0,11)

"FIA",727.81,0,"RLRO")

"FIA",727.81,0,"VR")
3.0^ECX
"FIA",727.81,727.81)
1
"FIA",727.81,727.81,68)

"FIA",727.81,727.81,84)

"FIA",727.81,727.81,85)

"FIA",727.81,727.81,86)

"FIA",727.81,727.81,87)

"FIA",727.81,727.81,88)

"FIA",727.81,727.81,89)

"FIA",727.81,727.81,90)

"FIA",727.81,727.81,91)

"FIA",727.811)
SURGERY EXTRACT
"FIA",727.811,0)
^ECX(727.811,
"FIA",727.811,0,0)
727.811
"FIA",727.811,0,1)
y^y^p^^^^n^^n
"FIA",727.811,0,10)

"FIA",727.811,0,11)

"FIA",727.811,0,"RLRO")

"FIA",727.811,0,"VR")
3.0^ECX
"FIA",727.811,727.811)
1
"FIA",727.811,727.811,57)

"FIA",727.811,727.811,77)

"FIA",727.811,727.811,78)

"FIA",727.811,727.811,79)

"FIA",727.812)
MENTAL HEALTH EXTRACT
"FIA",727.812,0)
^ECX(727.812,
"FIA",727.812,0,0)
727.812
"FIA",727.812,0,1)
y^y^p^^^^n^^n
"FIA",727.812,0,10)

"FIA",727.812,0,11)

"FIA",727.812,0,"RLRO")

"FIA",727.812,0,"VR")
3.0^ECX
"FIA",727.812,727.812)
1
"FIA",727.812,727.812,45)

"FIA",727.812,727.812,61)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,38)

"FIA",727.814)
RADIOLOGY EXTRACT
"FIA",727.814,0)
^ECX(727.814,
"FIA",727.814,0,0)
727.814
"FIA",727.814,0,1)
y^y^p^^^^n^^n
"FIA",727.814,0,10)

"FIA",727.814,0,11)

"FIA",727.814,0,"RLRO")

"FIA",727.814,0,"VR")
3.0^ECX
"FIA",727.814,727.814)
1
"FIA",727.814,727.814,43)

"FIA",727.815)
EVENT CAPTURE LOCAL EXTRACT
"FIA",727.815,0)
^ECX(727.815,
"FIA",727.815,0,0)
727.815
"FIA",727.815,0,1)
y^y^p^^^^n^^n
"FIA",727.815,0,10)

"FIA",727.815,0,11)

"FIA",727.815,0,"RLRO")

"FIA",727.815,0,"VR")
3.0^ECX
"FIA",727.815,727.815)
1
"FIA",727.815,727.815,83)

"FIA",727.815,727.815,84)

"FIA",727.815,727.815,85)

"FIA",727.815,727.815,86)

"FIA",727.815,727.815,87)

"FIA",727.815,727.815,88)

"FIA",727.815,727.815,89)

"FIA",727.819)
IV DETAIL EXTRACT
"FIA",727.819,0)
^ECX(727.819,
"FIA",727.819,0,0)
727.819
"FIA",727.819,0,1)
y^y^p^^^^n^^n
"FIA",727.819,0,10)

"FIA",727.819,0,11)

"FIA",727.819,0,"RLRO")

"FIA",727.819,0,"VR")
3.0^ECX
"FIA",727.819,727.819)
1
"FIA",727.819,727.819,41)

"FIA",727.819,727.819,80)

"FIA",727.819,727.819,81)

"FIA",727.825)
QUASAR EXTRACT
"FIA",727.825,0)
^ECX(727.825,
"FIA",727.825,0,0)
727.825
"FIA",727.825,0,1)
y^y^p^^^^n^^n
"FIA",727.825,0,10)

"FIA",727.825,0,11)

"FIA",727.825,0,"RLRO")

"FIA",727.825,0,"VR")
3.0^ECX
"FIA",727.825,727.825)
1
"FIA",727.825,727.825,69)

"FIA",727.825,727.825,83)

"FIA",727.825,727.825,84)

"FIA",727.825,727.825,85)

"FIA",727.825,727.825,86)

"FIA",727.825,727.825,87)

"FIA",727.825,727.825,88)

"FIA",727.825,727.825,89)

"FIA",727.826)
PROSTHETICS EXTRACT
"FIA",727.826,0)
^ECX(727.826,
"FIA",727.826,0,0)
727.826
"FIA",727.826,0,1)
y^y^p^^^^n^^n
"FIA",727.826,0,10)

"FIA",727.826,0,11)

"FIA",727.826,0,"RLRO")

"FIA",727.826,0,"VR")
3.0^ECX
"FIA",727.826,727.826)
1
"FIA",727.826,727.826,75)

"FIA",727.826,727.826,76)

"FIA",727.826,727.826,77)

"FIA",727.826,727.826,78)

"FIA",727.826,727.826,79)

"FIA",727.826,727.826,80)

"FIA",727.827)
CLINIC EXTRACT
"FIA",727.827,0)
^ECX(727.827,
"FIA",727.827,0,0)
727.827
"FIA",727.827,0,1)
y^y^p^^^^n^^n
"FIA",727.827,0,10)

"FIA",727.827,0,11)

"FIA",727.827,0,"RLRO")

"FIA",727.827,0,"VR")
3.0^ECX
"FIA",727.827,727.827)
1
"FIA",727.827,727.827,68)

"FIA",727.827,727.827,86)

"FIA",727.827,727.827,87)

"FIA",727.829)
BLOOD BANK EXTRACT
"FIA",727.829,0)
^ECX(727.829,
"FIA",727.829,0,0)
727.829
"FIA",727.829,0,1)
y^y^p^^^^n^^n
"FIA",727.829,0,10)

"FIA",727.829,0,11)

"FIA",727.829,0,"RLRO")

"FIA",727.829,0,"VR")
3.0^ECX
"FIA",727.829,727.829)
1
"FIA",727.829,727.829,16)

"FIA",727.829,727.829,22)

"FIA",727.829,727.829,23)

"FIA",727.829,727.829,24)

"FIA",727.829,727.829,25)

"FIA",727.829,727.829,26)

"FIA",727.829,727.829,27)

"FIA",727.832)
NUTRITION EXTRACT
"FIA",727.832,0)
^ECX(727.832,
"FIA",727.832,0,0)
727.832
"FIA",727.832,0,1)
y^y^f^^^^n
"FIA",727.832,0,10)

"FIA",727.832,0,11)

"FIA",727.832,0,"RLRO")

"FIA",727.832,0,"VR")
3.0^ECX
"FIA",727.832,727.832)
0
"FIA",728)
DSS EXTRACTS
"FIA",728,0)
^ECX(728,
"FIA",728,0,0)
728P
"FIA",728,0,1)
y^y^p^^^^n^^n
"FIA",728,0,10)

"FIA",728,0,11)

"FIA",728,0,"RLRO")

"FIA",728,0,"VR")
3.0^ECX
"FIA",728,728)
1
"FIA",728,728,71)

"FIA",728,728,72)

"FIA",728.45)
DSS NUTRITION PRODUCT WORKSHEET
"FIA",728.45,0)
^ECX(728.45,
"FIA",728.45,0,0)
728.45S
"FIA",728.45,0,1)
y^y^f^^^^n
"FIA",728.45,0,10)

"FIA",728.45,0,11)

"FIA",728.45,0,"RLRO")

"FIA",728.45,0,"VR")
3.0^ECX
"FIA",728.45,728.45)
0
"FIA",728.45,728.451)
0
"FIA",728.46)
DSS NUTRITION DIVISION WORKSHEET
"FIA",728.46,0)
^ECX(728.46,
"FIA",728.46,0,0)
728.46V
"FIA",728.46,0,1)
y^y^f^^^^n
"FIA",728.46,0,10)

"FIA",728.46,0,11)

"FIA",728.46,0,"RLRO")

"FIA",728.46,0,"VR")
3.0^ECX
"FIA",728.46,728.46)
0
"INIT")
EN^ECX30P92
"KRN",.4,2538,-1)
0^1
"KRN",.4,2538,0)
ECX LAB TEST PRINT^3060612.1113^@^727.2^^@^3061024
"KRN",.4,2538,"DXS",1,9)
S X=$S('$D(D1):"",D1<0:"",1:D1),DIP(1)=$G(X) S X=6,X=$J(DIP(1),X),DIP(2)=$G(X) S X=" ",DIP(3)=$G(X) S X="0",X1=DIP(3) S X2=DIP(2) S X=$TR(X2,X1,X)
"KRN",.4,2538,"DXS",2,"B")
BLOOD
"KRN",.4,2538,"DXS",2,"F")
FECES
"KRN",.4,2538,"DXS",2,"U")
URINE
"KRN",.4,2538,"F",1)
1,X DXS(1,9) W X K DIP;C1;"";Z;"TRANSLATE($J(NUMBER,6)," ","0")"~1,.01;L25;C11~1,1,.01;L25;C39~1,2;L6;C67~
"KRN",.4,2538,"F",2)
1,1,-60,^LAB(60,^^S I(2,0)=D2 S I(1,0)=D1 S I(0,0)=D0 S DIP(1)=$S($D(^ECX(727.2,D0,1,D1,"LOC",D2,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;".01:"~
"KRN",.4,2538,"F",3)
1,1,-60,100,.01;L15;C76~1,1,-60,100,6;L10;C94~1,1,-60,500,1;L10;C107~
"KRN",.4,2538,"H")
[DSS LAB TEST HEADER]
"KRN",.4,2538,"IOM")
132
"KRN",.4,2538,"LAST")

"KRN",.4,2538,"ROU")

"KRN",.4,2538,"ROUOLD")

"KRN",.4,2539,-1)
0^2
"KRN",.4,2539,0)
ECX LAB TEST HEADER^3060612.1013^@^727.2^^@^3060905
"KRN",.4,2539,"DXS")
2
"KRN",.4,2539,"DXS",1,9.2)
 S X="Printed on ",DIP(1)=$G(X),%=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100) S Y=X,X=DIP(1),X=X S X=X
"KRN",.4,2539,"F",1)
"DSS LAB TESTS NAMES DATASHEET";C1~S X="Page ",DIP(1)=$G(X),X=$S($D(DC)#2:DC,1:"") S Y=X,X=DIP(1),X=X S X=X_Y W X K DIP;C95;Z;""Page "_PAGE"~
"KRN",.4,2539,"F",2)
X DXS(1,9.2) S DIP(2)=X,X=Y S Y=X X ^DD("DD") S X=DIP(2)_Y S Y=X D DT K DIP;C1;d;L18;Z;""Printed on "_NOW"~"RESULT";C1;S~"TEST ID";C1~"DSS LAB";C11~
"KRN",.4,2539,"F",3)
"LOCAL LAB";C39~"REPORTING";C92~"LMIP(s)/";C107~"NUMBER";C1~"TEST NAME";C11~"TEST NAME";C39~"SOURCE";C67~"SPECIMEN";C76~"UNITS";C94~
"KRN",.4,2539,"F",4)
"WKLD CODE(s)";C107~S $P(LN,"-",120)="" W LN;C1;Z;"S $P(LN,"-",120)="" W LN"~
"KRN",.4,2539,"H")
@
"KRN",.4,2539,"SUB")
1
"KRN",3.8,366,-1)
0^1
"KRN",3.8,366,0)
DSS-NUT^PU^^^^^
"KRN",3.8,366,2,0)
^^2^2^3060504^
"KRN",3.8,366,2,1,0)
This mail group contains users responsible for DSS extracts. A message is
"KRN",3.8,366,2,2,0)
sent to this group upon completion of package extracts. 
"KRN",3.8,366,3)

"KRN",19,10119,-1)
2^8
"KRN",19,10119,0)
ECXMENU^Package Extracts^^M^11714^ECXMGR^^^^^^513
"KRN",19,10119,10,0)
^19.01IP^25^24
"KRN",19,10119,10,25,0)
13242^NUT^46
"KRN",19,10119,10,25,"^")
ECXNUT
"KRN",19,10119,"U")
PACKAGE EXTRACTS
"KRN",19,10161,-1)
2^1
"KRN",19,10161,0)
ECX MAINTENANCE^Maintenance^^M^11714^^^^^^^513
"KRN",19,10161,10,0)
^19.01IP^25^25
"KRN",19,10161,10,23,0)
13245^21
"KRN",19,10161,10,23,"^")
ECX PHA EDIT
"KRN",19,10161,10,24,0)
13259^20^
"KRN",19,10161,10,24,"^")
ECX NUTRITION WORKSHEETS
"KRN",19,10161,10,25,0)
13246^22
"KRN",19,10161,10,25,"^")
ECX PHA UDP/IVP SOURCE AUDIT
"KRN",19,10161,"U")
MAINTENANCE
"KRN",19,13242,-1)
0^7
"KRN",19,13242,0)
ECXNUT^Nutrition Extract^^A^^^^^^^^DSS EXTRACTS^^1
"KRN",19,13242,1,0)
^^1^1^3060413^
"KRN",19,13242,1,1,0)
This option will execute the Nutrition Extract.
"KRN",19,13242,20)
D BEG^ECXNUT
"KRN",19,13242,"U")
NUTRITION EXTRACT
"KRN",19,13243,-1)
0^11
"KRN",19,13243,0)
ECX PHA VOL EDIT LOG^Pharmacy Volume Edit Log^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13243,1,0)
^19.06^3^3^3060721^^^
"KRN",19,13243,1,1,0)
This option will allow authorized users to view edit changes made to the 
"KRN",19,13243,1,2,0)
Pharmacy extracts (IVP, PRE and UDP) through the Pharmacy Edit Option 
"KRN",19,13243,1,3,0)
[ECX PHA VOL EDIT].
"KRN",19,13243,25)
EN^ECXPHAU
"KRN",19,13243,"U")
PHARMACY VOLUME EDIT LOG
"KRN",19,13244,-1)
0^10
"KRN",19,13244,0)
ECX PHA VOL EDIT^Pharmacy Volume Edit^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13244,1,0)
^19.06^4^4^3061019^^
"KRN",19,13244,1,1,0)
This option will allow authorized users to edit the Pharmacy extracts
"KRN",19,13244,1,2,0)
(IVP, PRE or UDP). Corrections will be allowed to the Quantity field 
"KRN",19,13244,1,3,0)
for the IVP, PRE and UDP extracts. Additionally, correction will be 
"KRN",19,13244,1,4,0)
allowed to the Unit of Issue field for the PRE extract.
"KRN",19,13244,25)
EN^ECXPHVE
"KRN",19,13244,"U")
PHARMACY VOLUME EDIT
"KRN",19,13245,-1)
0^9
"KRN",19,13245,0)
ECX PHA EDIT^Pharmacy Edit and Edit Log^^M^^ECXPVE^^^^^^DSS EXTRACTS
"KRN",19,13245,1,0)
^^3^3^3060830^
"KRN",19,13245,1,1,0)
This option will allow authorized users (i.e. holders of the ECXPVE 
"KRN",19,13245,1,2,0)
key) to edit the Pharmacy extracts (IVP, PRE or UDP). It will also allow
"KRN",19,13245,1,3,0)
the user to view the Pharmacy log with edit changes.
"KRN",19,13245,10,0)
^19.01IP^2^2
"KRN",19,13245,10,1,0)
13244^1
"KRN",19,13245,10,1,"^")
ECX PHA VOL EDIT
"KRN",19,13245,10,2,0)
13243^2
"KRN",19,13245,10,2,"^")
ECX PHA VOL EDIT LOG
"KRN",19,13245,25)

"KRN",19,13245,99)
60481,29153
"KRN",19,13245,"U")
PHARMACY EDIT AND EDIT LOG
"KRN",19,13246,-1)
0^12
"KRN",19,13246,0)
ECX PHA UDP/IVP SOURCE AUDIT^UDP/IVP Source Audit Report^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13246,1,0)
^^2^2^3060628^
"KRN",19,13246,1,1,0)
This menu option allows DSS site teams to periodically check the 
"KRN",19,13246,1,2,0)
availability of UDP & IVP source data to avoid data from being lost.
"KRN",19,13246,25)
EN^ECXPHAA
"KRN",19,13246,"U")
UDP/IVP SOURCE AUDIT REPORT
"KRN",19,13255,-1)
0^3
"KRN",19,13255,0)
ECX NUT PRO EDIT^Enter/Edit Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13255,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13255,1,1,0)
This option allows DSS site teams to assign standardized DSS Product 
"KRN",19,13255,1,2,0)
values to each Diet, Supplemental Feeding, Tube Feeding and Standing 
"KRN",19,13255,1,3,0)
Orders.
"KRN",19,13255,25)
EN^ECXNUTPE
"KRN",19,13255,"U")
ENTER/EDIT NUTRITION PRODUCT W
"KRN",19,13256,-1)
0^4
"KRN",19,13256,0)
ECX NUT PRO PRINT^Print Nutrition Product Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13256,1,0)
^^8^8^3060612^
"KRN",19,13256,1,1,0)
This option allows site teams to assign standardized DSS Product (Feeder 
"KRN",19,13256,1,2,0)
Key) values to each Diet, Supplemental Feeding, Tube Feeding and Standing
"KRN",19,13256,1,3,0)
Order. This worksheet is divided into four categories:
"KRN",19,13256,1,4,0)
 
"KRN",19,13256,1,5,0)
Production Diets
"KRN",19,13256,1,6,0)
Supplemental Feedings
"KRN",19,13256,1,7,0)
Tube Feedings
"KRN",19,13256,1,8,0)
Standing Orders.
"KRN",19,13256,25)
EN^ECXNUTPP
"KRN",19,13256,"U")
PRINT NUTRITION PRODUCT WORKSH
"KRN",19,13257,-1)
0^5
"KRN",19,13257,0)
ECX NUT DIV EDIT^Enter/Edit Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13257,1,0)
^19.06^3^3^3060612^^^^
"KRN",19,13257,1,1,0)
This option allows DSS site teams to assign standardized Division values 
"KRN",19,13257,1,2,0)
of the Institution file (#4) to all locally named Production and Delivery 
"KRN",19,13257,1,3,0)
locations.
"KRN",19,13257,25)
EN^ECXNUTDE
"KRN",19,13257,"U")
ENTER/EDIT NUTRITION DIVISION 
"KRN",19,13258,-1)
0^6
"KRN",19,13258,0)
ECX NUT DIV PRINT^Print Nutrition Division Worksheet^^R^^^^^^^^DSS EXTRACTS
"KRN",19,13258,1,0)
^^3^3^3060612^
"KRN",19,13258,1,1,0)
This option allows DSS site teams to print a listing of all production and
"KRN",19,13258,1,2,0)
delivery location in the nutrition files (#119.71) and (#119.72) and there
"KRN",19,13258,1,3,0)
standardized associated division from the institution file (#4).
"KRN",19,13258,25)
EN^ECXNUTDP
"KRN",19,13258,"U")
PRINT NUTRITION DIVISION WORKS
"KRN",19,13259,-1)
0^2
"KRN",19,13259,0)
ECX NUTRITION WORKSHEETS^Nutrition Worksheets^^M^^^^^^^^DSS EXTRACTS
"KRN",19,13259,10,0)
^19.01IP^4^4
"KRN",19,13259,10,1,0)
13255^3^3
"KRN",19,13259,10,1,"^")
ECX NUT PRO EDIT
"KRN",19,13259,10,2,0)
13256^4^4
"KRN",19,13259,10,2,"^")
ECX NUT PRO PRINT
"KRN",19,13259,10,3,0)
13257^1^1
"KRN",19,13259,10,3,"^")
ECX NUT DIV EDIT
"KRN",19,13259,10,4,0)
13258^2^2
"KRN",19,13259,10,4,"^")
ECX NUT DIV PRINT
"KRN",19,13259,99)
60477,45665
"KRN",19,13259,"U")
NUTRITION WORKSHEETS
"KRN",19.1,543,-1)
0^1
"KRN",19.1,543,0)
ECXPVE^DSS Pharmacy Volume Edit Key
"KRN",19.1,543,1,0)
^19.11^3^3^3060829^
"KRN",19.1,543,1,1,0)
This key will give a DSS user access to the 'Pharmacy Volume Edit and 
"KRN",19.1,543,1,2,0)
Edit Log' option. This key should be allocated to persons eligible to
"KRN",19.1,543,1,3,0)
perform this operation.
"KRN",19.1,543,5,0)
^19.15P
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^3010618^2980112^11714
"PKG",513,22,1,"PAH",1,0)
92^3061102
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
39
"RTN","ECX30P92")
0^35^B5149361^n/a
"RTN","ECX30P92",1,0)
ECX30P92 ; ALB/JRC -  Post Utility for DSS Extracts Patch 92 ; 8/15/06 8:45am
"RTN","ECX30P92",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECX30P92",3,0)
EN ;Main entry point
"RTN","ECX30P92",4,0)
 ;Remove Clinic Extract file (#727.803) and all data
"RTN","ECX30P92",5,0)
 N ECXMSG,DIU
"RTN","ECX30P92",6,0)
 K ECXMSG
"RTN","ECX30P92",7,0)
 S ECXMSG(1)=" "
"RTN","ECX30P92",8,0)
 S ECXMSG(2)="** Removing Clinic Extract File (#727.803) and all data **"
"RTN","ECX30P92",9,0)
 D MES^XPDUTL(.ECXMSG)
"RTN","ECX30P92",10,0)
 S DIU=727.803,DIU(0)="DT"
"RTN","ECX30P92",11,0)
 D EN^DIU2
"RTN","ECX30P92",12,0)
 K ECXMSG
"RTN","ECX30P92",13,0)
 S ECXMSG(1)=" "
"RTN","ECX30P92",14,0)
 S ECXMSG(2)="** Clinic Extract File (#727.803) and all data removed **"
"RTN","ECX30P92",15,0)
 ;
"RTN","ECX30P92",16,0)
 ;Remove dental menus and disable them
"RTN","ECX30P92",17,0)
 ;Init variables
"RTN","ECX30P92",18,0)
 N MENU,PTR,SMENU,SPTR,NUM,DA,DIK
"RTN","ECX30P92",19,0)
 F MENU="ECX SOURCE AUDITS","ECX SAS AUDITS" D
"RTN","ECX30P92",20,0)
 .K ECXMSG
"RTN","ECX30P92",21,0)
 .S ECXMSG(1)=" "
"RTN","ECX30P92",22,0)
 .S ECXMSG(2)=$S(MENU="ECX SOURCE AUDITS":"Removing [ECX DEN SOURCE AUDIT] menu",MENU="ECX SAS AUDITS":"Removing [ECX SAS DENTAL] menu",1:"")
"RTN","ECX30P92",23,0)
 .D MES^XPDUTL(.ECXMSG)
"RTN","ECX30P92",24,0)
 .;Order thru option file and find menu and retrieve IEN
"RTN","ECX30P92",25,0)
 .S PTR="",PTR=$O(^DIC(19,"B",MENU,PTR))
"RTN","ECX30P92",26,0)
 .I 'PTR D BMES^XPDUTL("** "_MENU_" item not found, not updated **") Q
"RTN","ECX30P92",27,0)
 .;resolve submenu to remove
"RTN","ECX30P92",28,0)
 .S SMENU=$S(MENU="ECX SOURCE AUDITS":"ECX DEN SOURCE AUDIT",1:"ECX SAS DENTAL")
"RTN","ECX30P92",29,0)
 .S SPTR="",SPTR=$O(^DIC(19,"B",SMENU,SPTR))
"RTN","ECX30P92",30,0)
 .I 'SPTR D  Q
"RTN","ECX30P92",31,0)
 ..D BMES^XPDUTL("** "_SMENU_" item not found, not updated **")
"RTN","ECX30P92",32,0)
 .;Disable menu option
"RTN","ECX30P92",33,0)
 .D OUT^XPDMENU(SMENU,"MENU OPTION NO LONGER USED")
"RTN","ECX30P92",34,0)
 .D BMES^XPDUTL(SMENU_"   **  Menu option disabled  **")
"RTN","ECX30P92",35,0)
 .;Remove menu option
"RTN","ECX30P92",36,0)
 .S NUM=0,NUM=$O(^DIC(19,PTR,10,"B",SPTR,NUM))
"RTN","ECX30P92",37,0)
 .I 'NUM D  Q
"RTN","ECX30P92",38,0)
 ..D BMES^XPDUTL("** "_SMENU_" item not found, not updated **")
"RTN","ECX30P92",39,0)
 .S DIK="^DIC(19,"_PTR_",10,"
"RTN","ECX30P92",40,0)
 .S DA(1)=PTR,DA=NUM
"RTN","ECX30P92",41,0)
 .D ^DIK
"RTN","ECX30P92",42,0)
 D BMES^XPDUTL("**  Menu updates completed  **")
"RTN","ECX30P92",43,0)
 Q
"RTN","ECX30P92",44,0)
 ;
"RTN","ECX803")
1^39^^B6931902
"RTN","ECX8031")
1^40^^B129367
"RTN","ECX8032")
1^41^^B136042
"RTN","ECXADM")
0^10^B34859559^B30252904
"RTN","ECXADM",1,0)
ECXADM ;ALB/JAP,BIR/DMA,CML,PTD-Admissions Extract ; 11/2/06 8:34am
"RTN","ECXADM",2,0)
 ;;3.0;DSS EXTRACTS;**1,4,11,8,13,24,33,39,46,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXADM",3,0)
BEG ;entry point from option
"RTN","ECXADM",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXADM",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXADM",6,0)
 Q
"RTN","ECXADM",7,0)
 ;
"RTN","ECXADM",8,0)
START ; start package specific extract
"RTN","ECXADM",9,0)
 S QFLG=0
"RTN","ECXADM",10,0)
 S ECED=ECED+.3,ECD=ECSD1
"RTN","ECXADM",11,0)
 F  S ECD=$O(^DGPM("ATT1",ECD)),ECDA=0 Q:('ECD)!(ECD>ECED)  D
"RTN","ECXADM",12,0)
 .F  S ECDA=$O(^DGPM("ATT1",ECD,ECDA)) Q:ECDA=""  D
"RTN","ECXADM",13,0)
 ..I $D(^DGPM(ECDA,0)) D
"RTN","ECXADM",14,0)
 ...S EC=^DGPM(ECDA,0),ECXDFN=$P(EC,U,3) D GET
"RTN","ECXADM",15,0)
 Q
"RTN","ECXADM",16,0)
 ;
"RTN","ECXADM",17,0)
GET ;gather extract data
"RTN","ECXADM",18,0)
 N ADM,W,X,ECXNPRFI,ECXATTPC,ECXPRVPC,ECXEST
"RTN","ECXADM",19,0)
 ;patient demographics
"RTN","ECXADM",20,0)
 S ECXERR=0 D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXADM",21,0)
 Q:ECXERR
"RTN","ECXADM",22,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXADM",23,0)
 S ECXFAC=$P($G(^DIC(42,+$P(EC,U,6),0)),U,11)
"RTN","ECXADM",24,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXADM",25,0)
 ;admission data
"RTN","ECXADM",26,0)
 S ELGA=$P($G(^DIC(8,+$P(EC,U,20),0)),U,9)
"RTN","ECXADM",27,0)
 I ELGA S ELGA=$$ELIG^ECXUTL3(ELGA,ECXSVC)
"RTN","ECXADM",28,0)
 S (ECDRG,ECDIA,ECXSADM)="",ECPTF=+$P(EC,U,16) I ECPTF,$D(^DGPT(ECPTF,"M")) D PTF
"RTN","ECXADM",29,0)
 ;get encounter classification
"RTN","ECXADM",30,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECXHNC)="",ECXVISIT=$P(EC,U,27)
"RTN","ECXADM",31,0)
 I ECXVISIT'="" D
"RTN","ECXADM",32,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXADM",33,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXADM",34,0)
 .S ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXADM",35,0)
 .S ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXADM",36,0)
 ;use movement record date & time
"RTN","ECXADM",37,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,ECD)
"RTN","ECXADM",38,0)
 S ECXA=$P(ADM,U),ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3)
"RTN","ECXADM",39,0)
 S (ECXADMDT,ECXDATE)=$P(ADM,U,4)
"RTN","ECXADM",40,0)
 ;if movement# doesn't match cross-ref ien, then quit
"RTN","ECXADM",41,0)
 Q:ECXMN'=ECDA
"RTN","ECXADM",42,0)
 S ECTM=$$ECXTIME^ECXUTL(ECXDATE)
"RTN","ECXADM",43,0)
 S ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXADM",44,0)
 S W=$P(ADM,U,9)
"RTN","ECXADM",45,0)
 S ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2),ECXDSSD=$P(W,";",3)
"RTN","ECXADM",46,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXADM",47,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXADM",48,0)
 ;
"RTN","ECXADM",49,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXADM",50,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXADM",51,0)
 ;
"RTN","ECXADM",52,0)
 ;- Patient Type
"RTN","ECXADM",53,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(ECXDFN)
"RTN","ECXADM",54,0)
 ;
"RTN","ECXADM",55,0)
 ;- If null encounter number, don't file record
"RTN","ECXADM",56,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXADM",57,0)
 D:ECXENC'="" FILE
"RTN","ECXADM",58,0)
 Q
"RTN","ECXADM",59,0)
 ;
"RTN","ECXADM",60,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXADM",61,0)
 N OK,X
"RTN","ECXADM",62,0)
 K ECXPAT
"RTN","ECXADM",63,0)
 S ECXDATE=$P(ECXDATE,".")
"RTN","ECXADM",64,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;2;3;4;5",.ECXPAT)
"RTN","ECXADM",65,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXADM",66,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXADM",67,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXADM",68,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXADM",69,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXADM",70,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXADM",71,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXADM",72,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXADM",73,0)
 S ECXVNS=ECXPAT("VIETNAM")
"RTN","ECXADM",74,0)
 S ECXPOS=ECXPAT("POS")
"RTN","ECXADM",75,0)
 S ECXMNS=ECXPAT("MEANS")
"RTN","ECXADM",76,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXADM",77,0)
 S ECXRELG=ECXPAT("RELIGION")
"RTN","ECXADM",78,0)
 S ECXEMP=ECXPAT("EMPLOY")
"RTN","ECXADM",79,0)
 S ECXMAR=ECXPAT("MARITAL")
"RTN","ECXADM",80,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXADM",81,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXADM",82,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXADM",83,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXADM",84,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXADM",85,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXADM",86,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXADM",87,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXADM",88,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXADM",89,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXADM",90,0)
 S ECXPHI=ECXPAT("PHI")
"RTN","ECXADM",91,0)
 S ECXHI=+$$INSUR^IBBAPI(ECXDFN,ECXDATE)
"RTN","ECXADM",92,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXADM",93,0)
 ;
"RTN","ECXADM",94,0)
 ;- Agent Orange location
"RTN","ECXADM",95,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXADM",96,0)
 ;
"RTN","ECXADM",97,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXADM",98,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXADM",99,0)
 ; - Race and Ethnicity
"RTN","ECXADM",100,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXADM",101,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXADM",102,0)
 ;
"RTN","ECXADM",103,0)
 ;get primary care data
"RTN","ECXADM",104,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXADM",105,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXADM",106,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXADM",107,0)
 ;get combat veteran data
"RTN","ECXADM",108,0)
 I $$CVEDT^ECXUTL5(ECXDFN,ECD)
"RTN","ECXADM",109,0)
 ;get national patient record flag if exist
"RTN","ECXADM",110,0)
 D NPRF^ECXUTL5
"RTN","ECXADM",111,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXADM",112,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXADM",113,0)
 Q
"RTN","ECXADM",114,0)
 ;
"RTN","ECXADM",115,0)
PTF ; get admitting DRG, diagnosis, source of admission from PTF
"RTN","ECXADM",116,0)
 ;use number for DRG and .01 for diagnosis
"RTN","ECXADM",117,0)
 N EC,EC1,ECX
"RTN","ECXADM",118,0)
 S EC=1 I $D(^DGPT(ECPTF,"M",2,0)) S EC=2
"RTN","ECXADM",119,0)
 S EC1=+$P(^DGPT(ECPTF,"M",EC,0),U,5)
"RTN","ECXADM",120,0)
 S ECDRG=$P($G(^DGPT(ECPTF,"M",EC,"P")),U)
"RTN","ECXADM",121,0)
 S ECDIA=$P($G(^ICD9(EC1,0)),U)
"RTN","ECXADM",122,0)
 S ECX=+$P($G(^DGPT(ECPTF,101)),U),ECXSADM=$P($G(^DIC(45.1,ECX,0)),U,11)
"RTN","ECXADM",123,0)
 Q
"RTN","ECXADM",124,0)
 ;
"RTN","ECXADM",125,0)
FILE ;file the extract record
"RTN","ECXADM",126,0)
 ;node0
"RTN","ECXADM",127,0)
 ;facility^dfn^ssn^name^in/out^day^primary care team^sex^dob^
"RTN","ECXADM",128,0)
 ;religion^employment status^health ins^state^county^zip^
"RTN","ECXADM",129,0)
 ;eligibility^vet^vietnam^agent orange^radiation^pow^
"RTN","ECXADM",130,0)
 ;period of service^means test^marital status^
"RTN","ECXADM",131,0)
 ;ward^treating specialty^attending physician^mov #^DRG^diagnosis^
"RTN","ECXADM",132,0)
 ;time^primary care provider^race^primary ward provider
"RTN","ECXADM",133,0)
 ;node1
"RTN","ECXADM",134,0)
 ;mpi^dss dept^attending npi^pc provider npi^ward provider npi^
"RTN","ECXADM",135,0)
 ;admission elig^mst status^^sharing payor^
"RTN","ECXADM",136,0)
 ;sharing insurance^enrollment location^
"RTN","ECXADM",137,0)
 ;pc prov person class^assoc pc provider^assoc pc prov person class^
"RTN","ECXADM",138,0)
 ;assoc pc prov npi^dom^enrollment cat^enrollment stat^enrollment
"RTN","ECXADM",139,0)
 ;priority^purple heart ind.^obs pat ind^encounter num^agent orange
"RTN","ECXADM",140,0)
 ;loc^production div^pow loc^source of admission^head & neck canc. ind
"RTN","ECXADM",141,0)
 ;^ethnicity^race1^enrollment priority_sub group^user enrollee^patient
"RTN","ECXADM",142,0)
 ;type^combat vet elig^combat vet elig end date^enc cv eligible^
"RTN","ECXADM",143,0)
 ;national patient record flag ECXNPRFI^att phy person class ECXATTPC
"RTN","ECXADM",144,0)
 ;^primary ward provider person class ECXPRVPC^environ contamin ECXEST
"RTN","ECXADM",145,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange indic ECXAO
"RTN","ECXADM",146,0)
 ;^environ contam ECXECE^encoun head/neck ECXHNC^encoun MST ECXMIL^rad
"RTN","ECXADM",147,0)
 ;encoun ECXIR
"RTN","ECXADM",148,0)
 N DA,DIK
"RTN","ECXADM",149,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXADM",150,0)
 S ECODE=EC7_U_EC23_U_ECXFAC_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE_U
"RTN","ECXADM",151,0)
 S ECODE=ECODE_ECPTTM_U_ECXSEX_U_ECXDOB_U_ECXRELG_U
"RTN","ECXADM",152,0)
 S ECODE=ECODE_ECXEMP_U_ECXHI_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U
"RTN","ECXADM",153,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECXVNS_U_ECXAST_U_ECXRST_U_ECXPST_U
"RTN","ECXADM",154,0)
 S ECODE=ECODE_ECXPOS_U_ECXMNS_U_ECXMAR_U
"RTN","ECXADM",155,0)
 S ECODE=ECODE_ECXWRD_U_ECXSPC_U_ECXATT_U_ECDA_U_ECDRG_U_ECDIA_U
"RTN","ECXADM",156,0)
 S ECODE=ECODE_ECTM_U_ECPTPR_U_ECXRACE_U_ECXPRV_U
"RTN","ECXADM",157,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXATNPI_U_ECPTNPI_U_ECXPRNPI_U_ELGA_U
"RTN","ECXADM",158,0)
 S ECODE1=ECODE1_ECXMST_U_U_U_U_ECXENRL_U_ECCLAS_U
"RTN","ECXADM",159,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXADM",160,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXADM",161,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXPLOC_U_ECXSADM_U_ECXHNCI_U_ECXETH_U
"RTN","ECXADM",162,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXADM",163,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXADM",164,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXATTPC_U_ECXPRVPC_U_ECXEST
"RTN","ECXADM",165,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR
"RTN","ECXADM",166,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXADM",167,0)
 S ECRN=ECRN+1
"RTN","ECXADM",168,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXADM",169,0)
 Q
"RTN","ECXADM",170,0)
 ;
"RTN","ECXADM",171,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXADM",172,0)
 S ECHEAD="ADM"
"RTN","ECXADM",173,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXADM",174,0)
 Q
"RTN","ECXADM",175,0)
 ;
"RTN","ECXADM",176,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXADM",177,0)
 ; should be queued with a 1D frequency
"RTN","ECXADM",178,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXADM",179,0)
 ;
"RTN","ECXADM",180,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXADM",181,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXADM",182,0)
 ;
"RTN","ECXDEPT")
0^26^B19340272^B18943322
"RTN","ECXDEPT",1,0)
ECXDEPT ;ALB/GRR - Department lookup for extracts;June 11, 2002 ; 9/26/06 3:39pm
"RTN","ECXDEPT",2,0)
 ;;3.0;DSS EXTRACTS;**46,92**;Dec 22, 1997;Build 30
"RTN","ECXDEPT",3,0)
 ;Only the Division Logic is implemented and used in this release
"RTN","ECXDEPT",4,0)
 ;
"RTN","ECXDEPT",5,0)
 ;Input: X=Division
"RTN","ECXDEPT",6,0)
 ;Output: Y=Department
"RTN","ECXDEPT",7,0)
 ;
"RTN","ECXDEPT",8,0)
DEN(X) ;DENTAL DEPARTMENT LOOKUP
"RTN","ECXDEPT",9,0)
 ;format key (Feeder system_Feeder location_Feeder key)
"RTN","ECXDEPT",10,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",11,0)
 S ECXFS="DEN"
"RTN","ECXDEPT",12,0)
 S ECXFL=X ;feeder location is division
"RTN","ECXDEPT",13,0)
 S ECXFK="" ;always null for dental
"RTN","ECXDEPT",14,0)
 N ECXKEY S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",15,0)
 N Y
"RTN","ECXDEPT",16,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",17,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",18,0)
 Q Y
"RTN","ECXDEPT",19,0)
 ;
"RTN","ECXDEPT",20,0)
IVP(X) ;IVP DEPARTMENT LOOKUP
"RTN","ECXDEPT",21,0)
 ;format key (Feeder system_Feeder location_Feeder key)
"RTN","ECXDEPT",22,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",23,0)
 S ECXFS="IVP" ;feeder system is pharmacy
"RTN","ECXDEPT",24,0)
 S ECXFL="IVP"_X ;feeder location is IVP_division
"RTN","ECXDEPT",25,0)
 S ECXFK="" ;feeder key always null for IVP
"RTN","ECXDEPT",26,0)
 N ECXKEY S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",27,0)
 N Y
"RTN","ECXDEPT",28,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",29,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",30,0)
 Q Y
"RTN","ECXDEPT",31,0)
 ;
"RTN","ECXDEPT",32,0)
RAD(X,X1,X2,X3) ;RAD DEPARTMENT LOOKUP
"RTN","ECXDEPT",33,0)
 ;Input  X=division
"RTN","ECXDEPT",34,0)
 ;       X1=Imaging type
"RTN","ECXDEPT",35,0)
 ;       X2=CPT Code and any modifiers
"RTN","ECXDEPT",36,0)
 ;       X3=Procedure
"RTN","ECXDEPT",37,0)
 ;Output  Y=Department
"RTN","ECXDEPT",38,0)
 ;format key (Feeder system_Feeder location_Feeder key)
"RTN","ECXDEPT",39,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",40,0)
 S ECXFS="RAD" ;feeder system is radiology
"RTN","ECXDEPT",41,0)
 S ECXFL=X_"-"_X1 ;feeder location is division_"-"_imaging type
"RTN","ECXDEPT",42,0)
 I X2=""&(X3=468) S ECXFK=777777 G FORMAT
"RTN","ECXDEPT",43,0)
 I X2=""&(X3]"") S ECXFK=X3 G FORMAT
"RTN","ECXDEPT",44,0)
 S ECXFK=$E(X2,1,5)
"RTN","ECXDEPT",45,0)
 N J F J=8,10,12,14,16 Q:$E(X2,J,J+1)=""  I $E(X2,J,J+1)=26!($E(X2,J,J+1)="TC") S ECXFK=ECXFK_"."_$E(X2,J,J+1) Q  ;look for modifier 26 or TC
"RTN","ECXDEPT",46,0)
FORMAT N ECXKEY S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",47,0)
 N Y
"RTN","ECXDEPT",48,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",49,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",50,0)
 Q Y
"RTN","ECXDEPT",51,0)
 ;
"RTN","ECXDEPT",52,0)
UDP(X) ;UDP DEPARTMENT LOOKUP
"RTN","ECXDEPT",53,0)
 ;format key (Feeder system_Feeder location_Feeder key)
"RTN","ECXDEPT",54,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",55,0)
 S ECXFS="UDP" ;feeder system is pharmacy
"RTN","ECXDEPT",56,0)
 S ECXFL="UDP"_X ;feeder location is UDP_division
"RTN","ECXDEPT",57,0)
 S ECXFK="" ;feeder key always null for UDP
"RTN","ECXDEPT",58,0)
 N ECXKEY S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",59,0)
 N Y
"RTN","ECXDEPT",60,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",61,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",62,0)
 Q Y
"RTN","ECXDEPT",63,0)
 ;
"RTN","ECXDEPT",64,0)
MTL(X,X1,X2) ;MTL DEPARTMENT LOOKUP
"RTN","ECXDEPT",65,0)
 ;X=DIVISION, X1=NAME OF TEST,X2=STATION NUMBER
"RTN","ECXDEPT",66,0)
 ;format key (Feeder System_Feeder location_Feeder key)
"RTN","ECXDEPT",67,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",68,0)
 S ECXFS="MTL" ;feeder system for MTL
"RTN","ECXDEPT",69,0)
 S ECXFK="" ;feeder key always null for MTL
"RTN","ECXDEPT",70,0)
 I X1'="ASI"&(X1'="GAF") S ECXFL=X_"PSOTSTLAB" ;p-@@@ line added
"RTN","ECXDEPT",71,0)
 E  S ECXFL=X_X1
"RTN","ECXDEPT",72,0)
 S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",73,0)
 N Y
"RTN","ECXDEPT",74,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",75,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X2,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",76,0)
 Q Y
"RTN","ECXDEPT",77,0)
 ;
"RTN","ECXDEPT",78,0)
PRE(X,X1,X2) ;PRE DEPARTMENT LOOKUP
"RTN","ECXDEPT",79,0)
 ;Input  X=Division
"RTN","ECXDEPT",80,0)
 ;       X1=Whether mail or not
"RTN","ECXDEPT",81,0)
 ;       X2=STATION NUMBER
"RTN","ECXDEPT",82,0)
 N ECXFS,ECXFL,ECXFK
"RTN","ECXDEPT",83,0)
 S ECXFS="PRE" ;feeder system for PRE
"RTN","ECXDEPT",84,0)
 S ECXFK="" ;feeder key always null for PRE
"RTN","ECXDEPT",85,0)
 I X1=2 S ECXFL="CMOPDSU"_X
"RTN","ECXDEPT",86,0)
 E  S ECXFL="PRE"_X
"RTN","ECXDEPT",87,0)
 S ECXKEY=ECXFS_ECXFL_ECXFK
"RTN","ECXDEPT",88,0)
 N Y
"RTN","ECXDEPT",89,0)
 S Y=$$GETDEPT(ECXKEY)
"RTN","ECXDEPT",90,0)
 I Y="XXXX"!(Y="INAC") D MESBUL(X2,ECXFS,ECXFL,ECXFK,Y)
"RTN","ECXDEPT",91,0)
 Q Y
"RTN","ECXDEPT",92,0)
 ;
"RTN","ECXDEPT",93,0)
GETDEPT(X) ;LOOKUP DEPARTMENT
"RTN","ECXDEPT",94,0)
 ;Input:  X=lookup key
"RTN","ECXDEPT",95,0)
 ;Output  Y=Department
"RTN","ECXDEPT",96,0)
 ;Look for key in AA crossreference
"RTN","ECXDEPT",97,0)
 N Y,ECXIEN S Y="XXXX"
"RTN","ECXDEPT",98,0)
 I $D(^ECX(727.6,"AA",X)) D
"RTN","ECXDEPT",99,0)
 .;Get ien of department
"RTN","ECXDEPT",100,0)
 .S ECXIEN=$O(^ECX(727.6,"AA",X,0))
"RTN","ECXDEPT",101,0)
 .;Get department
"RTN","ECXDEPT",102,0)
 .S Y=$S($P(^ECX(727.6,ECXIEN,0),"^",6)]"":"INAC",1:$P(^ECX(727.6,ECXIEN,0),"^"))
"RTN","ECXDEPT",103,0)
 Q Y
"RTN","ECXDEPT",104,0)
 ;
"RTN","ECXDEPT",105,0)
GETDIV(X) ;GET PRODUCTION DIVISION
"RTN","ECXDEPT",106,0)
 ;Input   X=ien medical center division, file #40.8
"RTN","ECXDEPT",107,0)
 ;Output  Y=division number 3-6 characters
"RTN","ECXDEPT",108,0)
 N Y S Y=""
"RTN","ECXDEPT",109,0)
 Q:X="" Y
"RTN","ECXDEPT",110,0)
 S Y=$$GET1^DIQ(40.8,X,.07,"I") ;Get institution file pointer
"RTN","ECXDEPT",111,0)
 Q $S(Y="":"",1:$$RADDIV(Y)) ;Get station number
"RTN","ECXDEPT",112,0)
 ;
"RTN","ECXDEPT",113,0)
PREDIV(X) ;GET PRODUCTION DIVISION FOR PRE
"RTN","ECXDEPT",114,0)
 ;Input  X=ien Outpatient Site file (#59)
"RTN","ECXDEPT",115,0)
 ;Output Y=division number 3-6 characters
"RTN","ECXDEPT",116,0)
 N Y,IN S Y=""
"RTN","ECXDEPT",117,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXDEPT",118,0)
 Q:X="" Y
"RTN","ECXDEPT",119,0)
 D PSS^PSO59(X,"","ECXDIV")
"RTN","ECXDEPT",120,0)
 S IN=$P($G(^TMP($J,"ECXDIV",X,100)),U,1)  ;Get related inst number
"RTN","ECXDEPT",121,0)
 S Y=$$RADDIV(IN)
"RTN","ECXDEPT",122,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXDEPT",123,0)
 Q Y
"RTN","ECXDEPT",124,0)
 ;
"RTN","ECXDEPT",125,0)
RADDIV(X) ;GET PRODUCTION DIVISION FOR RAD
"RTN","ECXDEPT",126,0)
 ;Input  X=ien of Institution file
"RTN","ECXDEPT",127,0)
 ;Output Y=division number 3-6 characters
"RTN","ECXDEPT",128,0)
 N Y S Y=""
"RTN","ECXDEPT",129,0)
 Q:X="" Y
"RTN","ECXDEPT",130,0)
 S Y=$P($G(^DIC(4,X,99)),"^",1) ;Get station number
"RTN","ECXDEPT",131,0)
 Q Y
"RTN","ECXDEPT",132,0)
 ;
"RTN","ECXDEPT",133,0)
MESBUL(ECXSN,ECXFS,ECXFL,ECXFK,ECXDEPT) ;SEND BULLETIN FOR TABLE LOOKUP ERROR
"RTN","ECXDEPT",134,0)
 ;
"RTN","ECXDEPT",135,0)
 N XMY,XMDUZ,XMDT,XMZ,XMB,XMCHAN,XMSUB
"RTN","ECXDEPT",136,0)
 S XMCHAN=1
"RTN","ECXDEPT",137,0)
 S XMSUB="A DSS Department Error was found for Station Number: "
"RTN","ECXDEPT",138,0)
 S XMDUZ="ECX Department Extract Application"
"RTN","ECXDEPT",139,0)
 S XMB="ECX DSS DEPARTMENT TABLE ERROR"
"RTN","ECXDEPT",140,0)
 S XMB(1)=ECXSN
"RTN","ECXDEPT",141,0)
 S XMB(2)=ECXFS
"RTN","ECXDEPT",142,0)
 S XMB(3)=ECXFL
"RTN","ECXDEPT",143,0)
 S XMB(4)=ECXFK
"RTN","ECXDEPT",144,0)
 S XMB(5)=ECXDEPT
"RTN","ECXDEPT",145,0)
 S XMDT=$$NOW^XLFDT
"RTN","ECXDEPT",146,0)
 D ^XMB
"RTN","ECXDEPT",147,0)
 Q
"RTN","ECXDEPT",148,0)
 ;
"RTN","ECXEC")
0^15^B37877116^B34277990
"RTN","ECXEC",1,0)
ECXEC ;ALB/JAP,BIR/JLP,PTD-DSS Event Capture Extract  [ 02/14/97   2:26 PM ] ; 12/2/04 12:35pm
"RTN","ECXEC",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,24,27,33,39,46,49,71,89,92**;Dec 22, 1997;Build 30
"RTN","ECXEC",3,0)
BEG ;entry point from option
"RTN","ECXEC",4,0)
 I '$D(^ECH) W !,"Event Capture is not initialized",!! Q
"RTN","ECXEC",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXEC",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXEC",7,0)
 Q
"RTN","ECXEC",8,0)
START ;begin EC extract
"RTN","ECXEC",9,0)
 N X,Y,ECDCM,ECXNPRFI
"RTN","ECXEC",10,0)
 S ECED=ECED+.3,ECLL=0
"RTN","ECXEC",11,0)
 K ^TMP("EC",$J)
"RTN","ECXEC",12,0)
 F  S ECLL=$O(^ECH("AC1",ECLL)),ECD=ECSD-.1 Q:'ECLL  D
"RTN","ECXEC",13,0)
 .F  S ECD=$O(^ECH("AC1",ECLL,ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)  D
"RTN","ECXEC",14,0)
 ..F  S ECDA=$O(^ECH("AC1",ECLL,ECD,ECDA)) Q:'ECDA  D UPDATE
"RTN","ECXEC",15,0)
 Q
"RTN","ECXEC",16,0)
 ;
"RTN","ECXEC",17,0)
UPDATE ;sets record and updates counters
"RTN","ECXEC",18,0)
 S ECCH=^ECH(ECDA,0),ECL=$P(ECCH,U,4),ECXDFN=$P(ECCH,U,2)
"RTN","ECXEC",19,0)
 S ECXPDIV=$$RADDIV^ECXDEPT(ECL)  ;Get production division from file 4
"RTN","ECXEC",20,0)
 S ECDT=$P(ECCH,U,3),ECM=$P(ECCH,U,6),ECC=$P(ECCH,U,8)
"RTN","ECXEC",21,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECDT,"1;3;5;")
"RTN","ECXEC",22,0)
 S ECTM=$$ECXTIME^ECXUTL(ECDT),ECP=$P(ECCH,U,9)
"RTN","ECXEC",23,0)
 Q:ECP']""
"RTN","ECXEC",24,0)
 S ECO=$P(ECCH,U,12),ECV=$P(ECCH,U,10),ECDU=$P(ECCH,U,7)
"RTN","ECXEC",25,0)
 S ECXUNIT=$G(^ECD(ECDU,0)),ECCS=+$P(ECXUNIT,U,4),ECDCM=$P(ECXUNIT,U,5)
"RTN","ECXEC",26,0)
 S ECXDSSP="",ECXDSSD=$E(ECDCM,1,10),ECUSTOP=$P(ECXUNIT,U,10),ECUPCE=$P(ECXUNIT,U,14)
"RTN","ECXEC",27,0)
 S ICD9=$P($G(^ECH(ECDA,"P")),U,2) S:ICD9="" ICD9=" "
"RTN","ECXEC",28,0)
 S ECXICD9=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",29,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXEC",30,0)
 S (CNT,I)=0
"RTN","ECXEC",31,0)
 F  S CNT=$O(^ECH(ECDA,"DX",CNT)) Q:'CNT  D  Q:I>3
"RTN","ECXEC",32,0)
 .S ICD9=$P($G(^ECH(ECDA,"DX",CNT,0)),U) D:ICD9'=""
"RTN","ECXEC",33,0)
 ..S I=I+1,@("ECXICD9"_I)=$P($G(^ICD9(ICD9,0)),U)
"RTN","ECXEC",34,0)
 ;derivation of dss identifier depends on whether dss unit is 
"RTN","ECXEC",35,0)
 ;set to send data to pce
"RTN","ECXEC",36,0)
 S ECAC=$P($G(ECCH),U,19)
"RTN","ECXEC",37,0)
 ;if this is a record that 'goes to pce', then get the dss identifier
"RTN","ECXEC",38,0)
 ;from the clinic stop codes
"RTN","ECXEC",39,0)
 S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",40,0)
 I ECUPCE="A"!(ECUPCE="O"&(ECXA="O")) D
"RTN","ECXEC",41,0)
 .D:+ECAC
"RTN","ECXEC",42,0)
 ..S ECAC1=$P($G(^SC(+ECAC,0)),U,7),ECAC2=$P($G(^(0)),U,18)
"RTN","ECXEC",43,0)
 ..I 'ECAC2 S ECAC2S="000"
"RTN","ECXEC",44,0)
 ..I 'ECAC1 S (ECAC1S,ECAC2S)="000" Q
"RTN","ECXEC",45,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECAC1,0)),U,2)
"RTN","ECXEC",46,0)
 ..S ECAC2S=$P($G(^DIC(40.7,+ECAC2,0)),U,2)
"RTN","ECXEC",47,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S=$$RJ^XLFSTR(ECAC2S,3,0)
"RTN","ECXEC",48,0)
 .S:'ECAC (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",49,0)
 ;if this record doesn't go to pce, then get the dss identifier
"RTN","ECXEC",50,0)
 ;from the dss unit
"RTN","ECXEC",51,0)
 I ECUPCE=""!(ECUPCE="N")!(ECUPCE="O"&(ECXA="I")) D
"RTN","ECXEC",52,0)
 .I +ECUSTOP D
"RTN","ECXEC",53,0)
 ..S ECAC1S=$P($G(^DIC(40.7,+ECUSTOP,0)),U,2)
"RTN","ECXEC",54,0)
 ..S ECAC1S=$$RJ^XLFSTR(ECAC1S,3,0),ECAC2S="000"
"RTN","ECXEC",55,0)
 .I 'ECUSTOP D
"RTN","ECXEC",56,0)
 ..S (ECAC1S,ECAC2S)="000"
"RTN","ECXEC",57,0)
 S ECDSS=ECAC1S_ECAC2S
"RTN","ECXEC",58,0)
 I ECXLOGIC>2003 I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXEC",59,0)
 S ECXDIV=""
"RTN","ECXEC",60,0)
 ;
"RTN","ECXEC",61,0)
 ;- Ord Div, Contrct St/End Dates, Contrct Type placeholders for FY2002
"RTN","ECXEC",62,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXEC",63,0)
 ;setup provider(s) as'2'_ien
"RTN","ECXEC",64,0)
 S (ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXEC",65,0)
 S (ECU1,ECU2,ECU3)=""
"RTN","ECXEC",66,0)
 K ECXPRV S ECXPROV=$$GETPRV^ECPRVMUT(ECDA,.ECXPRV) I ECXPROV Q
"RTN","ECXEC",67,0)
 F I=1:1:3 S Y=$O(ECXPRV("")) I Y'="" S @("ECU"_I)=+ECXPRV(Y) K ECXPRV(Y)
"RTN","ECXEC",68,0)
 S:$L(ECU1) ECXPPC1=$$PRVCLASS^ECXUTL(ECU1,ECDT),ECU1A="2"_$P(ECU1,";")
"RTN","ECXEC",69,0)
 S:$L(ECU2) ECXPPC2=$$PRVCLASS^ECXUTL(ECU2,ECDT),ECU2A="2"_$P(ECU2,";")
"RTN","ECXEC",70,0)
 S:$L(ECU3) ECXPPC3=$$PRVCLASS^ECXUTL(ECU3,ECDT),ECU3A="2"_$P(ECU3,";")
"RTN","ECXEC",71,0)
 ;change for version 2 where ECP is a variable pointer and we want to
"RTN","ECXEC",72,0)
 ;expand it category = category or null if stored as 0
"RTN","ECXEC",73,0)
 D:ECP[";"
"RTN","ECXEC",74,0)
 .S ECP=$S(ECP["ICPT":$P(^ICPT(+ECP,0),U)_"01",ECP<90000:$P(^EC(725,+ECP,0),U,2)_"N",1:$P(^EC(725,+ECP,0),U,2)_"L"),ECC=$S(ECC:ECC,1:"")
"RTN","ECXEC",75,0)
 ;pick up EC to PCE data from "P" in File 721
"RTN","ECXEC",76,0)
 S ECPCE=$G(^ECH(ECDA,"P")),ECPCE1=$P(ECPCE,U),ECPCE2=$P(ECPCE,U,2)
"RTN","ECXEC",77,0)
 S ECPCE7=$S($P(ECPCE,U,7)=1:"Y",1:"N")
"RTN","ECXEC",78,0)
 S ECXCMOD=""
"RTN","ECXEC",79,0)
 I $D(^ECH(ECDA,"MOD")) D
"RTN","ECXEC",80,0)
 .S MOD=0,M=""
"RTN","ECXEC",81,0)
 .F  S MOD=$O(^ECH(ECDA,"MOD",MOD)) Q:'MOD  S M=$P(^(MOD,0),U) D
"RTN","ECXEC",82,0)
 ..I M S ECXCMOD=ECXCMOD_M_";"
"RTN","ECXEC",83,0)
 .K MOD,M
"RTN","ECXEC",84,0)
 S:ECP?1.N ECP=$$CPT^ECXUTL3($E(ECP,1,5),"",ECV)
"RTN","ECXEC",85,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPCE1,ECXCMOD,ECV)
"RTN","ECXEC",86,0)
 ;
"RTN","ECXEC",87,0)
 ;- Observation Patient Indicator (YES/NO)
"RTN","ECXEC",88,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXEC",89,0)
 ;
"RTN","ECXEC",90,0)
 ;- CNH status (YES/NO)
"RTN","ECXEC",91,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXEC",92,0)
 ;
"RTN","ECXEC",93,0)
 ;- encounter classification
"RTN","ECXEC",94,0)
 S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)="",ECXVISIT=$P(ECCH,U,21)
"RTN","ECXEC",95,0)
 I ECXVISIT'="" D
"RTN","ECXEC",96,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXEC",97,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXEC",98,0)
 .S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXEC",99,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXEC",100,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXEC",101,0)
 ;
"RTN","ECXEC",102,0)
 ; - Get national patient record flag Indicator if exist
"RTN","ECXEC",103,0)
 D NPRF^ECXUTL5
"RTN","ECXEC",104,0)
 ;
"RTN","ECXEC",105,0)
 ; - If no encounter number don't file record
"RTN","ECXEC",106,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,ECCS)
"RTN","ECXEC",107,0)
 D:ECXENC'="" FILE
"RTN","ECXEC",108,0)
 Q
"RTN","ECXEC",109,0)
 ;
"RTN","ECXEC",110,0)
FILE ;file record in #727.815
"RTN","ECXEC",111,0)
 ;node0
"RTN","ECXEC",112,0)
 ;ecode=inst ECL^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day^
"RTN","ECXEC",113,0)
 ;DSS unit ECDU^category ECC^procedure ECP^volume ECV^
"RTN","ECXEC",114,0)
 ;cost center ECCS^ordering sec ECO^section ECM^
"RTN","ECXEC",115,0)
 ;provider ECU1A^prov per cls ECXPPC1^prov 2 ECU2A^prov#2 per cls ECXPPC2
"RTN","ECXEC",116,0)
 ;^prov 3 ECU3A^prov#3 per cls ECXPPC3^^mov # ECXMN^treat spec ECXTS
"RTN","ECXEC",117,0)
 ;^time ECTM^primary care team ECPTTM^primary care provider ECPTPR
"RTN","ECXEC",118,0)
 ;^pce cpt code (ECXCPT)^primary icd-9 code ECXICD9^secondary icd-9
"RTN","ECXEC",119,0)
 ;ECXICD91^secondary icd-9 ECXICD92^secondary icd-9 ECXICD93^secondary 
"RTN","ECXEC",120,0)
 ;icd-9 ECXICD94^agent orange ECXAST^radiation exposure ECXRST^
"RTN","ECXEC",121,0)
 ;environmental contaminants ECXEST^service connected ECPTPR^sent to pce
"RTN","ECXEC",122,0)
 ;ECPCE7^^dss identifier ECDSS^dss dept
"RTN","ECXEC",123,0)
 ;node1
"RTN","ECXEC",124,0)
 ;mpi ECXMPI^dss dept ECXDSSD^provider npi ECXPRV2^
"RTN","ECXEC",125,0)
 ;provider #2 npi ECU2NPI^provider #3 npi ECU3NPI^^
"RTN","ECXEC",126,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXEC",127,0)
 ;assoc pc prov ECASPR^assoc pc prov person class ECCLAS2^
"RTN","ECXEC",128,0)
 ;assoc pc prov npi ECASNPI^
"RTN","ECXEC",129,0)
 ;divison ECXDIV^mst status ECXMST^dom ECXDOM^date of birth ECXDOB^
"RTN","ECXEC",130,0)
 ;enrollment category ECXCAT^ enrollment status ECXSTAT^enrollment
"RTN","ECXEC",131,0)
 ;priority ECXPRIOR^period of service ECXPOS^purple heart indicator
"RTN","ECXEC",132,0)
 ;ECXPHI^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXEC",133,0)
 ;ao loc ECXAOL^ord div ECXODIV^contr st dt ECXCSDT^
"RTN","ECXEC",134,0)
 ;contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXEC",135,0)
 ;production division ECXPDIV^eligibility ECXELIG^
"RTN","ECXEC",136,0)
 ;head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race1 ECXRAC1
"RTN","ECXEC",137,0)
 ;enrollment location ECXENRL^^enrollment priority
"RTN","ECXEC",138,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient
"RTN","ECXEC",139,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date
"RTN","ECXEC",140,0)
 ;ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag
"RTN","ECXEC",141,0)
 ;ECXNPRFI^emerg response indic(FEMA) ECXERI^agent orange indic ECXAO^
"RTN","ECXEC",142,0)
 ;environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL
"RTN","ECXEC",143,0)
 ;^radiation ECXIR
"RTN","ECXEC",144,0)
 N DA,DIK
"RTN","ECXEC",145,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXEC",146,0)
 S ECODE=EC7_U_EC23_U_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXEC",147,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECDT,ECXYM)_U_ECDU_U_ECC_U
"RTN","ECXEC",148,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECU1A_U_ECXPPC1_U
"RTN","ECXEC",149,0)
 S ECODE=ECODE_ECU2A_U_ECXPPC2_U_ECU3A_U_ECXPPC3_U_U_ECXMN_U
"RTN","ECXEC",150,0)
 S ECODE=ECODE_ECXTS_U_ECTM_U
"RTN","ECXEC",151,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_ECXCPT_U_ECXICD9_U
"RTN","ECXEC",152,0)
 S ECODE=ECODE_ECXICD91_U_ECXICD92_U_ECXICD93_U
"RTN","ECXEC",153,0)
 S ECODE=ECODE_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXEC",154,0)
 S ECODE=ECODE_ECSC_U_ECPCE7_U_U_ECDSS_U_U
"RTN","ECXEC",155,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECU1NPI_U_ECU2NPI_U_ECU3NPI_U_ECCLAS_U
"RTN","ECXEC",156,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDIV_U
"RTN","ECXEC",157,0)
 S ECODE1=ECODE1_ECXMST_U_ECXDOM_U_ECXDOB_U_ECXCAT_U_ECXSTAT_U
"RTN","ECXEC",158,0)
 S ECODE1=ECODE1_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U_ECXOBS_U_ECXENC_U_ECXAOL_U
"RTN","ECXEC",159,0)
 S ECODE1=ECODE1_ECXODIV_U_ECXCSDT_U_ECXCEDT_U_ECXCTYP_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXEC",160,0)
 S ECODE1=ECODE1_ECXELIG_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXEC",161,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL_U
"RTN","ECXEC",162,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXEC",163,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXEC",164,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXEC",165,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXEC",166,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXEC",167,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXEC",168,0)
 Q
"RTN","ECXEC",169,0)
 ;
"RTN","ECXEC",170,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXEC",171,0)
 S ECHEAD="ECS"
"RTN","ECXEC",172,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXEC",173,0)
 Q
"RTN","ECXEC",174,0)
 ;
"RTN","ECXEC",175,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXEC",176,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXFEKEY")
0^1^B48332216^B43028983
"RTN","ECXFEKEY",1,0)
ECXFEKEY ;BIR/DMA,CML-Print Feeder Keys; [ 05/15/96  9:44 AM ] ; 8/15/06 9:10am
"RTN","ECXFEKEY",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,40,84,92**;Dec 22, 1997;Build 30
"RTN","ECXFEKEY",3,0)
EN ;entry point from option
"RTN","ECXFEKEY",4,0)
 W !!,"Print list of Feeder Keys:",!
"RTN","ECXFEKEY",5,0)
 W !,"Select : 1. CLI",!,?9,"2. ECS",!,?9,"3. LAB",!,?9,"4. NUR",!,?9,"5. NUT",!,?9,"6. PHA",!,?9,"7. RAD",!,?9,"8. SUR",! S DIR(0)="L^1:8" D ^DIR Q:$D(DIRUT)
"RTN","ECXFEKEY",6,0)
 S ECY=Y
"RTN","ECXFEKEY",7,0)
 I ECY["2" D
"RTN","ECXFEKEY",8,0)
 .W !!,"The Feeder Key List for the Feeder System ECS can be printed by:",!?5,"(O)ld Feeder Key sort by Category-Procedure",!?5,"(N)ew Feeder Key sort by Procedure-CPT Code"
"RTN","ECXFEKEY",9,0)
 .S DIR(0)="S^O:OLD;N:NEW",DIR("B")="NEW" D ^DIR K DIR Q:$D(DIRUT)  S ECECS=Y
"RTN","ECXFEKEY",10,0)
 S:ECY["3" ECLAB=$$SELLABKE^ECXFEKE1() ;**Prompt to select Lab Feeder key
"RTN","ECXFEKEY",11,0)
 G:($G(ECLAB)=-1) QUIT ;**GOTO Exit point
"RTN","ECXFEKEY",12,0)
 G:$D(DIRUT) QUIT
"RTN","ECXFEKEY",13,0)
 K %ZIS,IOP S %ZIS="QM",%ZIS("B")="" D ^%ZIS
"RTN","ECXFEKEY",14,0)
 I POP W !,"NO DEVICE SELECTED!!" G QUIT
"RTN","ECXFEKEY",15,0)
 I $D(IO("Q")) K IO("Q") D  G QUIT
"RTN","ECXFEKEY",16,0)
 .S ZTRTN="START^ECXFEKEY",ZTDESC="Feeder Key List (DSS)"
"RTN","ECXFEKEY",17,0)
 .S ZTSAVE("ECY")="",ZTSAVE("ECPHA")="",ZTSAVE("ECPHA2")="",ZTSAVE("ECECS")="",ZTSAVE("ECLAB")=""
"RTN","ECXFEKEY",18,0)
 .D ^%ZTLOAD I $D(ZTSK) W !,"Queued Task #: "_ZTSK
"RTN","ECXFEKEY",19,0)
 .D HOME^%ZIS K ZTSK
"RTN","ECXFEKEY",20,0)
 ;
"RTN","ECXFEKEY",21,0)
START ;queued entry point
"RTN","ECXFEKEY",22,0)
 I '$D(DT) S DT=$$HTFM^XLFDT(+$H)
"RTN","ECXFEKEY",23,0)
 K ^TMP($J)
"RTN","ECXFEKEY",24,0)
 F ECLIST=1:1 S EC=$P(ECY,",",ECLIST) Q:EC=""  D:EC=1 CLI D:EC=2 ECS D:EC=3 LAB D:EC=4 NUR D:EC=5 NUT D:EC=6 PHA D:EC=7 RAD D:EC=8 SUR^ECXFEKE1
"RTN","ECXFEKEY",25,0)
 U IO D PRINT^ECXFEKE1
"RTN","ECXFEKEY",26,0)
 Q
"RTN","ECXFEKEY",27,0)
LAB S EC=0
"RTN","ECXFEKEY",28,0)
 ;
"RTN","ECXFEKEY",29,0)
 ;** OLD Feeder Key format
"RTN","ECXFEKEY",30,0)
 I $G(ECLAB)="O" DO
"RTN","ECXFEKEY",31,0)
 .F  S EC=$O(^LAB(60,EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P(^(0),U),^TMP($J,"LAB",EC,EC)=EC1
"RTN","ECXFEKEY",32,0)
 ;
"RTN","ECXFEKEY",33,0)
 ;** NEW Feeder key format (LMIP Code)
"RTN","ECXFEKEY",34,0)
 I $G(ECLAB)="N" DO
"RTN","ECXFEKEY",35,0)
 .N EC2
"RTN","ECXFEKEY",36,0)
 .F  S EC=$O(^LAM(EC)) Q:'EC  DO
"RTN","ECXFEKEY",37,0)
 ..I $D(^LAM(EC,0)) DO
"RTN","ECXFEKEY",38,0)
 ...S EC1=$P(^LAM(EC,0),U,1),EC1=$P(EC1,"~",1)
"RTN","ECXFEKEY",39,0)
 ...S EC2=$P(^LAM(EC,0),U,2)
"RTN","ECXFEKEY",40,0)
 ...I EC2'[".9999",(EC2'[".8") S EC2=EC2\1
"RTN","ECXFEKEY",41,0)
 ...S ^TMP($J,"LAB",+EC2,+EC2)=EC1
"RTN","ECXFEKEY",42,0)
 Q
"RTN","ECXFEKEY",43,0)
ECS ;old ECS feeder key list for pre-FY97 data
"RTN","ECXFEKEY",44,0)
 G:$G(ECECS)="N" ECS2
"RTN","ECXFEKEY",45,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",46,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^(EC,0)) D
"RTN","ECXFEKEY",47,0)
 ..S EC1=$P($P(^(0),U),"-",3,4),EC2=$P(EC1,"-"),EC2=$S(+EC2:EC2,1:"***"),EC4=$S($P($G(^EC(726,+EC2,0)),U)]"":$P(^(0),U),1:"***")
"RTN","ECXFEKEY",48,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",49,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",50,0)
 ..S ^TMP($J,"ECS",EC2_" - "_EC3,EC3)=EC4_" - "_EC5
"RTN","ECXFEKEY",51,0)
 F  S EC=$O(^ECK(EC)) Q:'EC  I $D(^(EC,0)) S EC1=$P($P(^(0),U),"-",3,4),EC2=$E($P($G(^ECP(+EC1,0)),U),1,25),EC3=$E($P($G(^ECP(+$P(EC1,"-",2),0)),U),1,25),^TMP($J,"ECS",EC1,EC1)=EC2_" - "_EC3
"RTN","ECXFEKEY",52,0)
ECQ K EC1,EC2,EC3,EC4,EC5,EC6,EC7,EC8,EC9,EC10 Q
"RTN","ECXFEKEY",53,0)
ECS2 ;new ECS feeder key list for FY97 data
"RTN","ECXFEKEY",54,0)
 ;feeder key is <Procedure> if PCE CPT code is same or null;
"RTN","ECXFEKEY",55,0)
 ;feeder is <Procedure-PCE CPT> otherwise;
"RTN","ECXFEKEY",56,0)
 ;the description column of list shows procedure (EC5) in lowercase and CPT code (EC8) in uppercase;
"RTN","ECXFEKEY",57,0)
 ;but if procedure (EC3) is itself a CPT Code, convert EC5 to uppercase
"RTN","ECXFEKEY",58,0)
 ;concatenation of "A;" and "B;" are for proper sorting - CPT codes 1st, then other procedures
"RTN","ECXFEKEY",59,0)
 S EC=0 I $P($G(^EC(720.1,1,0)),U,2) D  G ECQ
"RTN","ECXFEKEY",60,0)
 .F  S EC=$O(^ECJ(EC)) Q:'EC  I $D(^ECJ(EC,0)) D
"RTN","ECXFEKEY",61,0)
 ..S EC1=$P($P(^ECJ(EC,0),U),"-",3,4)
"RTN","ECXFEKEY",62,0)
 ..S EC3=$P(EC1,"-",2) Q:'+EC3  S EC3=$S(EC3["ICPT":$P($G(^ICPT(+EC3,0)),U),+EC3<90000:$P($G(^EC(725,+EC3,0)),U,2)_"N",1:$P($G(^EC(725,+EC3,0)),U,2)_"L")
"RTN","ECXFEKEY",63,0)
 ..S EC5=$P(EC1,"-",2),EC5=$S(EC5["ICPT":$E($P($G(^ICPT(+EC5,0)),U,2),1,25),EC5["EC":$E($P($G(^EC(725,+EC5,0)),U),1,25),1:"UNKNOWN")
"RTN","ECXFEKEY",64,0)
 ..S EC5=$$LOW(EC5)
"RTN","ECXFEKEY",65,0)
 ..I EC1["ICPT" S EC5=$$UPP(EC5),EC3="A;"_EC3
"RTN","ECXFEKEY",66,0)
 ..S EC6=$P(EC1,"-",2),EC7="",EC8=""
"RTN","ECXFEKEY",67,0)
 ..I EC6["EC(725," D
"RTN","ECXFEKEY",68,0)
 ...S EC6=$S(+EC6>0:$P($G(^EC(725,+EC6,0)),U,5),1:"") S EC7=$S(+EC6>0:$P($G(^ICPT(+EC6,0)),U),1:"")
"RTN","ECXFEKEY",69,0)
 ...S EC8=$S(+EC6>0:$E($P($G(^ICPT(+EC6,0)),U,2),1,25),1:"")
"RTN","ECXFEKEY",70,0)
 ...S EC8=$$UPP(EC8),EC3="B;"_EC3
"RTN","ECXFEKEY",71,0)
 ..S EC9=$S(EC7'="":EC3_"-"_EC7,1:EC3),EC10=$S(EC8'="":EC5_" - "_EC8,1:EC5)
"RTN","ECXFEKEY",72,0)
 ..S ^TMP($J,"ECS",EC9,EC3)=EC10
"RTN","ECXFEKEY",73,0)
 G ECQ
"RTN","ECXFEKEY",74,0)
LOW(X) ;convert string to lowercase
"RTN","ECXFEKEY",75,0)
 F %=2:1:$L(X) I $E(X,%)?1U,$E(X,%-1)?1A S X=$E(X,0,%-1)_$C($A(X,%)+32)_$E(X,%+1,999)
"RTN","ECXFEKEY",76,0)
 Q X
"RTN","ECXFEKEY",77,0)
UPP(X) ;convert string to uppercase
"RTN","ECXFEKEY",78,0)
 F %=1:1:$L(X) S:$E(X,%)?1L X=$E(X,0,%-1)_$C($A(X,%)-32)_$E(X,%+1,999)
"RTN","ECXFEKEY",79,0)
 Q X
"RTN","ECXFEKEY",80,0)
 ;
"RTN","ECXFEKEY",81,0)
PHA ;NEW PHA Feeder Key List sorted by NDF Match
"RTN","ECXFEKEY",82,0)
 N ECPPDU,ECXPHA,ARRAY
"RTN","ECXFEKEY",83,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXFEKEY",84,0)
 K @ARRAY
"RTN","ECXFEKEY",85,0)
 ;Call pharmacy drug file (#50) api dbia 4483 and create ^TMP global
"RTN","ECXFEKEY",86,0)
 D DATA^PSS50(,"??",DT,,,"ECXLIST")
"RTN","ECXFEKEY",87,0)
 S ECXYM=$$ECXYM^ECXUTL(DT)
"RTN","ECXFEKEY",88,0)
 ;$order thru "B" cross reference
"RTN","ECXFEKEY",89,0)
 S ECD="" F  S ECD=$O(@ARRAY@("B",ECD)) Q:ECD=""  D
"RTN","ECXFEKEY",90,0)
 .S EC=0 F  S EC=$O(@ARRAY@("B",ECD,EC)) Q:EC'>0  D
"RTN","ECXFEKEY",91,0)
 ..S ECD=$P(@ARRAY@(EC,.01),U),ECNDC=@ARRAY@(EC,31),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXFEKEY",92,0)
 ..S P1=$P(@ARRAY@(EC,20),U),P3=$P(@ARRAY@(EC,22),U)
"RTN","ECXFEKEY",93,0)
 ..;get the 17 character key
"RTN","ECXFEKEY",94,0)
 ..S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXFEKEY",95,0)
 ..Q:+ECNFC=0
"RTN","ECXFEKEY",96,0)
 ..S ECNFC="A"_ECNFC
"RTN","ECXFEKEY",97,0)
 ..S ECPPDU=@ARRAY@(EC,16),ECPPDU=$FNUMBER(ECPPDU,"P",4)
"RTN","ECXFEKEY",98,0)
 ..S ^TMP($J,"PHA",ECNFC,0)=ECD_U_ECPPDU
"RTN","ECXFEKEY",99,0)
 K @ARRAY
"RTN","ECXFEKEY",100,0)
 Q
"RTN","ECXFEKEY",101,0)
CLI S SC=0 F  S SC=$O(^SC(SC)) Q:'SC  I $D(^(SC,0)) S EC=^(0),ECD=$P(EC,U) I $P(EC,U,3)="C" D  S ^TMP($J,"CLI","A;"_P1_P2_ECLEN_P3_"0",SC)=ECD
"RTN","ECXFEKEY",102,0)
 .S ECSC=$P($G(^DIC(40.7,+$P(EC,U,7),0)),U,2),ECCSC=$P($G(^DIC(40.7,+$P(EC,U,18),0)),U,2)
"RTN","ECXFEKEY",103,0)
 .S ECLEN="NNN" I $D(^SC(SC,"SL")),$P(^("SL"),U,2)'="V" S ECLEN=$S($P(^("SL"),U):$P(^("SL"),U),1:"NNN"),ECLEN=$E("000"_ECLEN,$L(ECLEN)+1,$L(ECLEN)+3)
"RTN","ECXFEKEY",104,0)
 .S (P1,P2)="000",P3="0000" I '$D(^ECX(728.44,SC,0)),ECCSC]"" S ECST=5,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",105,0)
 .I '$D(^ECX(728.44,SC,0)) S ECST=1,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3) Q
"RTN","ECXFEKEY",106,0)
 .S EC=^ECX(728.44,SC,0),ECST=$P(EC,U,6)
"RTN","ECXFEKEY",107,0)
 .I ECST=6 Q
"RTN","ECXFEKEY",108,0)
 .;action code 6 means ignore
"RTN","ECXFEKEY",109,0)
 .I $P(EC,U,4)]"" S ECSC=$P(EC,U,4)
"RTN","ECXFEKEY",110,0)
 .I $P(EC,U,5)]"" S ECCSC=$P(EC,U,5)
"RTN","ECXFEKEY",111,0)
 .I ECST="" S ECST=4,P1=$E("000"_ECSC,$L(ECSC)+1,$L(ECSC)+3),P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4) S:ECCSC P2=$E("000"_ECCSC,$L(ECCSC)+1,$L(ECCSC)+3) Q
"RTN","ECXFEKEY",112,0)
 .I ECST<2 S P1=ECSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",113,0)
 .I ECST=2 S P1=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3) Q
"RTN","ECXFEKEY",114,0)
 .I ECST=3 S P1=ECSC,P11=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P11=$E("000"_P11,$L(P11)+1,$L(P11)+3) Q
"RTN","ECXFEKEY",115,0)
 .I ECST>3,ECST<7 S P1=ECSC,P2=ECCSC,P1=$E("000"_P1,$L(P1)+1,$L(P1)+3),P2=$E("000"_P2,$L(P2)+1,$L(P2)+3) S:ECST=4 P3=$P($G(^ECX(728.441,+$P(^ECX(728.44,SC,0),U,8),0)),U) I P3="" S P3=$E("0000"_SC,$L(SC)+1,$L(SC)+4)
"RTN","ECXFEKEY",116,0)
 K ECLEN Q
"RTN","ECXFEKEY",117,0)
RAD S EC=0 F  S EC=$O(^RAMIS(71,EC)) Q:'EC  I $D(^(EC,0)) S EC1=^(0),ECD=$P(EC1,U),EC2=$P($G(^ICPT(+$P(EC1,U,9),0)),U) S:EC2="" EC2="Unknown" S ^TMP($J,"RAD",EC2,EC)=ECD
"RTN","ECXFEKEY",118,0)
 S ^TMP($J,"RAD",88888,88888)="Portable procedure",^TMP($J,"RAD",99999,99999)="OR procedure"
"RTN","ECXFEKEY",119,0)
 Q
"RTN","ECXFEKEY",120,0)
NUR F EC=1:1:11 S EC1=$P($T(@EC),";",3) F EC2=0:1:5 S ^TMP($J,"NUR",$P(EC1,U)_"-"_EC2,EC2)=$P(EC1,U,2)_" LEVEL "_EC2
"RTN","ECXFEKEY",121,0)
1 ;;PSI^PSYCHIATRIC
"RTN","ECXFEKEY",122,0)
2 ;;SUR^SURGICAL
"RTN","ECXFEKEY",123,0)
3 ;;MED^MEDICAL (EXCLUDE SCI)
"RTN","ECXFEKEY",124,0)
4 ;;SCI^MEDICAL (SCI)
"RTN","ECXFEKEY",125,0)
5 ;;NUR^NURSING HOME CARE UNIT
"RTN","ECXFEKEY",126,0)
6 ;;REC^RECOVERY ROOM
"RTN","ECXFEKEY",127,0)
7 ;;ITN^INTENSIVE CARE
"RTN","ECXFEKEY",128,0)
8 ;;HEM^HEMODIALYSIS
"RTN","ECXFEKEY",129,0)
9 ;;INT^INTERMEDIATE CARE
"RTN","ECXFEKEY",130,0)
10 ;;DOM^DOMICILIARY
"RTN","ECXFEKEY",131,0)
11 ;;ALC^ALCOHOL AND DRUG TREATMENT
"RTN","ECXFEKEY",132,0)
 Q
"RTN","ECXFEKEY",133,0)
NUT ;Feeder keys for Nutrition and Food Service extract
"RTN","ECXFEKEY",134,0)
 N TYP,TIEN,DIET,IN,PRODUCT,KEY,NUMBER,IENS
"RTN","ECXFEKEY",135,0)
 S TYP="" F  S TYP=$O(^ECX(728.45,"B",TYP)) Q:TYP=""  S TIEN=0 F  S TIEN=$O(^ECX(728.45,"B",TYP,TIEN)) Q:'TIEN  S DIET="" F  S DIET=$O(^ECX(728.45,TIEN,1,"B",DIET)) Q:DIET=""  S IN=0 F  S IN=$O(^ECX(728.45,TIEN,1,"B",DIET,IN)) Q:IN'>0  D
"RTN","ECXFEKEY",136,0)
 . S IENS=""_IN_","_TIEN_","_""
"RTN","ECXFEKEY",137,0)
 . S KEY=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXFEKEY",138,0)
 . S ^TMP($J,"ECX",KEY,DIET)=TYP_"  "_$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXFEKEY",139,0)
 Q
"RTN","ECXFEKEY",140,0)
QUIT ;
"RTN","ECXFEKEY",141,0)
 K ECY,ECPHA,ECECS,ECLAB,ECPPDU,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXFEKEY",142,0)
 Q
"RTN","ECXLABN")
0^17^B27015743^B25958397
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; 9/20/04 3:03pm
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80,92**;Dec 22, 1997;Build 30
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2),ECDOCNPI=""
"RTN","ECXLABN",25,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .I EC]"" D GET
"RTN","ECXLABN",27,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",28,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",29,0)
 Q
"RTN","ECXLABN",30,0)
 ;
"RTN","ECXLABN",31,0)
GET ;get data
"RTN","ECXLABN",32,0)
 N X,ECXSTN
"RTN","ECXLABN",33,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",34,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",35,0)
 ;resolve ecloc
"RTN","ECXLABN",36,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",37,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",38,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",39,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",40,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",42,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",43,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",44,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",45,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",46,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",47,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",48,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR)
"RTN","ECXLABN",49,0)
 Q:ECXERR
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",53,0)
 .S ECSN=$P(EC0,U,9),ECXERI="" D
"RTN","ECXLABN",54,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",55,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",56,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",57,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",60,0)
 ;
"RTN","ECXLABN",61,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",62,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",63,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",64,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",65,0)
 ;
"RTN","ECXLABN",66,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",67,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",68,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",71,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",72,0)
 K ECXDIEN
"RTN","ECXLABN",73,0)
 ;
"RTN","ECXLABN",74,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",75,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",79,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",80,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",81,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",82,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",83,0)
 .D FILE
"RTN","ECXLABN",84,0)
 Q
"RTN","ECXLABN",85,0)
 ;
"RTN","ECXLABN",86,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",87,0)
 N X,OK,PT
"RTN","ECXLABN",88,0)
 ;get data
"RTN","ECXLABN",89,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",90,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",91,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXERI=$P(PT,U,4)
"RTN","ECXLABN",92,0)
 ;set data and save for later
"RTN","ECXLABN",93,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",94,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;3",.ECXPAT)
"RTN","ECXLABN",95,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",96,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",97,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXLABN",98,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI_U_ECXERI
"RTN","ECXLABN",99,0)
 ;get date specific data
"RTN","ECXLABN",100,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",101,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",102,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",103,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",104,0)
 Q
"RTN","ECXLABN",105,0)
 ;
"RTN","ECXLABN",106,0)
FILE ;file record
"RTN","ECXLABN",107,0)
 ;node0
"RTN","ECXLABN",108,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",109,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",110,0)
 ;location^provider and file^
"RTN","ECXLABN",111,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",112,0)
 ;primary care provider
"RTN","ECXLABN",113,0)
 ;node1
"RTN","ECXLABN",114,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",115,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",116,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",117,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",118,0)
 ;ECXPDIV^^ordering provider person class^emergency response indicator
"RTN","ECXLABN",119,0)
 ;(FEMA) ECXERI
"RTN","ECXLABN",120,0)
 ;ECDOCPC
"RTN","ECXLABN",121,0)
 N DA,DIK
"RTN","ECXLABN",122,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",123,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",124,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",125,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",126,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",127,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",128,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXLABN",129,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",130,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",131,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",132,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXLABN",133,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",134,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",135,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",136,0)
 Q
"RTN","ECXLABN",137,0)
 ;
"RTN","ECXLABN",138,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",139,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",140,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",141,0)
 Q
"RTN","ECXLABN",142,0)
 ;
"RTN","ECXLABN",143,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",144,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLBB")
0^18^B31084346^B15257792
"RTN","ECXLBB",1,0)
ECXLBB ;DALOI/KML - DSS BLOOD BANK EXTRACT ; 11/2/06 8:36am
"RTN","ECXLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,84,90,92**;Dec 22, 1997;Build 30
"RTN","ECXLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXLBB",4,0)
 ; access to the LAB DATA file (#63) is supported by 
"RTN","ECXLBB",5,0)
 ; controlled subscription to IA 525  (global root ^LR)  
"RTN","ECXLBB",6,0)
 ; access to the BLOOD PRODUCT (#66) is supported by IA 4510
"RTN","ECXLBB",7,0)
BEG ;entry point from option
"RTN","ECXLBB",8,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLBB",9,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLBB",10,0)
 Q
"RTN","ECXLBB",11,0)
 ;
"RTN","ECXLBB",12,0)
START ; Entry point from tasked job
"RTN","ECXLBB",13,0)
 ; begin package specific extract
"RTN","ECXLBB",14,0)
 N ECTRSP,ECADMT,ECTODT,ECENCTR,ECPAT,ECLRDFN,ECXPHY,ECXPHYPC
"RTN","ECXLBB",15,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXINST
"RTN","ECXLBB",16,0)
 ;variables ECFILE,EC23,ECXYM,ECINST,ECSD,ECSD1,ECED passed in 
"RTN","ECXLBB",17,0)
 ; by taskmanager 
"RTN","ECXLBB",18,0)
 ; ECED defined in ^ECXTRAC - it represents the end date of the extract
"RTN","ECXLBB",19,0)
 ; sort process.  TRANSFUSION DATE should be within start and end dates
"RTN","ECXLBB",20,0)
 ; ECED and ECSD were assigned with input provided by the user interface
"RTN","ECXLBB",21,0)
 ; and ECSD1 = ECSD-.1
"RTN","ECXLBB",22,0)
 ; Read through the TRANSFUSION RECORD sub-file (63.017) of 
"RTN","ECXLBB",23,0)
 ; the LAB DATA file (#63)
"RTN","ECXLBB",24,0)
 ;the global nodes containing transfusion record entries are constructed
"RTN","ECXLBB",25,0)
 ; by calculating the TRANSFUSION DATE/TIME (.01)
"RTN","ECXLBB",26,0)
 ; into its reverse date/time representation and then DINUM'd when 
"RTN","ECXLBB",27,0)
 ;filing the record entry 
"RTN","ECXLBB",28,0)
 ; ECD equals the reverse date/time of ECED+.3 and will need to be
"RTN","ECXLBB",29,0)
 ; reset for each DFN.
"RTN","ECXLBB",30,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1 Q  ;quit if tasked and user sends stop request  (QFLG assigned in ECXTRAC)
"RTN","ECXLBB",31,0)
AUDRPT ; entry point for pre-extract audit report
"RTN","ECXLBB",32,0)
 S ECTODT=9999999-ECSD1,ECLRDFN=0
"RTN","ECXLBB",33,0)
 F  S ECLRDFN=$O(^LR(ECLRDFN)) Q:'ECLRDFN  S ECXDFN=$$GETDFN(ECLRDFN),ECERR=$$PAT(ECXDFN) S ECD=9999999-(ECED+.3) F  S ECD=$O(^LR(ECLRDFN,1.6,ECD)) Q:ECERR  Q:'ECD!(ECD>ECTODT)  S EC0=^LR(ECLRDFN,1.6,ECD,0) D
"RTN","ECXLBB",34,0)
 .; ECARRY(1)=TRANSFUSION DATE AND TIME, 
"RTN","ECXLBB",35,0)
 .; ECARRY(3)=COMPONENT, ECARRY(4)=COMPONENT ABBREVIATION
"RTN","ECXLBB",36,0)
 .; ECARRY(5)=UNITS POOLED, ECARRY(6)=TRANSFUSION REACTION, 
"RTN","ECXLBB",37,0)
 .; ECARRY(7)=VOLUME TRANSFUSED, ECARRY(8)=TRANSFUSION REACTION TYPE
"RTN","ECXLBB",38,0)
 .; ECARRY(9)=REQUESTING PROVIDER, ECARRY(10)=REQUEST. PROV. PERSON CLASS
"RTN","ECXLBB",39,0)
 .; ECARRY(11)=UNIT MODIFIED, ECARRY(12)=UNIT MODIFICATION
"RTN","ECXLBB",40,0)
 .; ECARRY(13)=PRODUCTION DIVISION CODE
"RTN","ECXLBB",41,0)
 . S ECARRY(1)=$P(EC0,"^"),EC66=$G(^LAB(66,$P(EC0,"^",2),0))
"RTN","ECXLBB",42,0)
 . S ECARRY(3)=$E($P(EC66,"^"),1,15),ECARRY(4)=$P(EC66,"^",2)
"RTN","ECXLBB",43,0)
 . S ECARRY(5)=$S(+$P(EC0,"^",7)=0:1,1:+$P(EC0,"^",7))
"RTN","ECXLBB",44,0)
 . S ECARRY(6)=$S($P(EC0,"^",8)=1:"Y",1:"N"),ECARRY(7)=$P(EC0,"^",10)
"RTN","ECXLBB",45,0)
 . S ECARRY(8)=$E($P($G(^LAB(65.4,+$P(EC0,"^",11),0)),"^"),1,10)
"RTN","ECXLBB",46,0)
 . S (ECARRY(9),ECARRY(10),ECARRY(13))="" D GETRPRV
"RTN","ECXLBB",47,0)
 . S ECARRY(12)=$$UNITMOD(),ECARRY(11)=$S(ECARRY(12)'="":"Y",1:"N")
"RTN","ECXLBB",48,0)
 . S (ECXPHY,ECXPHYPC)=""
"RTN","ECXLBB",49,0)
 . D GETDATA
"RTN","ECXLBB",50,0)
 . K ECARRY
"RTN","ECXLBB",51,0)
 Q
"RTN","ECXLBB",52,0)
 ;
"RTN","ECXLBB",53,0)
UNITMOD() ; Get modification criteria from fields #.06 and #3 from file #66
"RTN","ECXLBB",54,0)
 N MODARY,MO,EC66A,MODSTR,STR3
"RTN","ECXLBB",55,0)
 S MODARY("DIVIDED")="D",MODARY("POOLED")="P",MODARY("WASHED")="W"
"RTN","ECXLBB",56,0)
 S MODARY("FROZEN")="F",MODARY("LEUKOCYTE POOR")="L"
"RTN","ECXLBB",57,0)
 S MODARY("REJUVENATED")="R",MODARY("DEGLYCEROLIZED")="G"
"RTN","ECXLBB",58,0)
 S MODARY("IRRADIATED")="I",MODARY("SEPARATED")="S"
"RTN","ECXLBB",59,0)
 ;if modification criteria is null determine value from description
"RTN","ECXLBB",60,0)
 S MODSTR=$S($P(EC66,U,6)'="":$P(EC66,U,6),1:$$CHKMOD($P(EC66,"^")))
"RTN","ECXLBB",61,0)
 ;get modification criteria for entries at field #3 in file #66
"RTN","ECXLBB",62,0)
 S MOD=0 F  S MOD=$O(^LAB(66,$P(EC0,"^",2),3,MOD)) Q:'MOD  D
"RTN","ECXLBB",63,0)
 .S EC66A=$G(^LAB(66,MOD,0)) I EC66A="" Q
"RTN","ECXLBB",64,0)
 .S STR3=$S($P(EC66A,U,6)'="":$P(EC66A,U,6),1:$$CHKMOD($P(EC66A,"^")))
"RTN","ECXLBB",65,0)
 .I STR3'="",MODSTR'[STR3 S MODSTR=MODSTR_STR3
"RTN","ECXLBB",66,0)
 Q MODSTR
"RTN","ECXLBB",67,0)
 ;
"RTN","ECXLBB",68,0)
CHKMOD(MD) ;check if modifier is contained in string
"RTN","ECXLBB",69,0)
 N RES,MODX
"RTN","ECXLBB",70,0)
 I MD="" Q ""
"RTN","ECXLBB",71,0)
 S (RES,MODX)="" F  S MODX=$O(MODARY(MODX)) Q:MODX=""  D  I RES'="" Q
"RTN","ECXLBB",72,0)
 .I MD[MODX S RES=MODARY(MODX)
"RTN","ECXLBB",73,0)
 Q RES
"RTN","ECXLBB",74,0)
GETRPRV ; get requesting provider, requesting provider person class and 
"RTN","ECXLBB",75,0)
 ; production division code
"RTN","ECXLBB",76,0)
 ; input: ECD      =INVERTED DATE SUBSCRIPT
"RTN","ECXLBB",77,0)
 ;        ECARRY(1)=TRANSFUSION DATE AND TIME
"RTN","ECXLBB",78,0)
 ; note: Accessioned data in file #68 is stored up to 90 days.
"RTN","ECXLBB",79,0)
 N ECXBNOD,ACC,ACCDT,ACCNODE,PERCLS
"RTN","ECXLBB",80,0)
 I ECARRY(1)="" Q  ;there is no transfusion date
"RTN","ECXLBB",81,0)
 ;get BLOOD BANK record, field #1, in file #63 located on "BB" node
"RTN","ECXLBB",82,0)
 ;since there is a slight time lapse, $O will find the BB record
"RTN","ECXLBB",83,0)
 S ECXBNOD=$O(^LR(ECLRDFN,"BB",ECD)) I ECXBNOD="" Q
"RTN","ECXLBB",84,0)
 S ECXBNOD=^LR(ECLRDFN,"BB",ECXBNOD,0) I ECXBNOD="" Q
"RTN","ECXLBB",85,0)
 ;Compose accession number,originating from field #.06 subfile #63.01
"RTN","ECXLBB",86,0)
 ; ex. ACC=BB 0528 27
"RTN","ECXLBB",87,0)
 S ACC=$P(ECXBNOD,U,6),ACC=$TR($P(ACC," ",2,99)," ")
"RTN","ECXLBB",88,0)
 S ACCDT=$E(ECARRY(1),1,3)_$E(ACC,1,4),NUM=$E(ACC,5,99)
"RTN","ECXLBB",89,0)
 ;Get field #2 from file #68, field #1 from subfile #68.01 which is
"RTN","ECXLBB",90,0)
 ;subfile #68.02. Look at 29=blood bank ien, from 0th node, get fields
"RTN","ECXLBB",91,0)
 ;#6.5 PROVIDER and #26 DIV
"RTN","ECXLBB",92,0)
 I (ACCDT)=""!(NUM="") Q
"RTN","ECXLBB",93,0)
 S ACCNODE=$G(^LRO(68,29,1,ACCDT,1,NUM,0))
"RTN","ECXLBB",94,0)
 S ECARRY(9)=$P(ACCNODE,U,8) I ECARRY(9)'="" D
"RTN","ECXLBB",95,0)
 . S PERCLS=$$GET^XUA4A72(ECARRY(9),ACCDT)
"RTN","ECXLBB",96,0)
 . I +PERCLS>0 S ECARRY(10)=$P(PERCLS,U,7)
"RTN","ECXLBB",97,0)
 . S ECARRY(9)=2_ECARRY(9)
"RTN","ECXLBB",98,0)
 S DIV=$P($G(^LRO(68,29,1,ACCDT,1,NUM,.4)),U)
"RTN","ECXLBB",99,0)
 I DIV'="" S ECARRY(13)=$$RADDIV^ECXDEPT(DIV)
"RTN","ECXLBB",100,0)
 Q
"RTN","ECXLBB",101,0)
 ;
"RTN","ECXLBB",102,0)
GETDATA ; gather rest of extract data that will be recorded in an 
"RTN","ECXLBB",103,0)
 ; entry in file 727.829
"RTN","ECXLBB",104,0)
 S ECTRFDT=$$ECXDOB^ECXUTL(ECARRY(1)),ECTRFTM=$$ECXTIME^ECXUTL(ECARRY(1))
"RTN","ECXLBB",105,0)
 S ECX=$$INP^ECXUTL2(ECXDFN,ECARRY(1)),ECINOUT=$P(ECX,U),ECTRSP=$P(ECX,U,3),ECADMT=$P(ECX,U,4) ; [FLD #5]
"RTN","ECXLBB",106,0)
 ;
"RTN","ECXLBB",107,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLBB",108,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECINOUT,ECTRSP)
"RTN","ECXLBB",109,0)
 ;- If no encounter number don't file record
"RTN","ECXLBB",110,0)
 S ECENCTR=$$ENCNUM^ECXUTL4(ECINOUT,ECPAT("SSN"),ECADMT,ECARRY(1),ECTRSP,ECXOBS,ECHEAD,,) ; [FLD #6]
"RTN","ECXLBB",111,0)
 Q:ECENCTR=""
"RTN","ECXLBB",112,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXLBB",113,0)
 S ECXERI=ECPAT("ERI")
"RTN","ECXLBB",114,0)
 ;
"RTN","ECXLBB",115,0)
 S ECXSTR=$G(EC23)_"^"_ECINST_"^"_ECXDFN_"^"_ECPAT("SSN")_"^"_ECPAT("NAME")_"^"_ECINOUT_"^"_ECENCTR_"^"_ECTRFDT_"^"_ECTRFTM_"^"_ECARRY(3)_"^"_ECARRY(4)_"^"_ECARRY(5)_"^"_ECARRY(7)_"^"_ECARRY(6)_"^"_ECARRY(8)_"^BB"_ECINST_"^^"
"RTN","ECXLBB",116,0)
 I $G(ECXLOGIC)>2005 S ECXSTR=ECXSTR_U_ECXPHY_U_ECXPHYPC
"RTN","ECXLBB",117,0)
 I $G(ECXLOGIC)>2006 D
"RTN","ECXLBB",118,0)
 .S ECXSTR=ECXSTR_U_ECXERI_U_ECARRY(11)_U_ECARRY(12)_U_ECARRY(9)_U_ECARRY(10)_U_ECARRY(13)
"RTN","ECXLBB",119,0)
 I '$D(ECXRPT) D FILE(ECXSTR) Q
"RTN","ECXLBB",120,0)
 S ^TMP("ECXLBB",$J,ECXDFN,ECD)=ECXSTR  ;temporary global array
"RTN","ECXLBB",121,0)
 ;   used in ECXPLBB (pre-extract audit report)
"RTN","ECXLBB",122,0)
 Q
"RTN","ECXLBB",123,0)
 ;
"RTN","ECXLBB",124,0)
GETDFN(ECXLRDFN) ;
"RTN","ECXLBB",125,0)
 ; INPUT - LRDFN
"RTN","ECXLBB",126,0)
 ; OUTPUT - DFN
"RTN","ECXLBB",127,0)
 ; Obtains DFN (Patient ID) from LRDFN (Lab Patient ID).
"RTN","ECXLBB",128,0)
 ; If no valid DFN exists, 0 is returned.
"RTN","ECXLBB",129,0)
 S ECXLRDFN=+$G(ECXLRDFN)
"RTN","ECXLBB",130,0)
 I $P($G(^LR(ECXLRDFN,0)),"^",2)'=2 Q 0
"RTN","ECXLBB",131,0)
 Q +$P(^LR(ECXLRDFN,0),"^",3)
"RTN","ECXLBB",132,0)
 ; 
"RTN","ECXLBB",133,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXLBB",134,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXLBB",135,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXLBB",136,0)
 ;          ECPAT("SSN")
"RTN","ECXLBB",137,0)
 ;          ECPAT("NAME")
"RTN","ECXLBB",138,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXLBB",139,0)
 ;                            1=error condition
"RTN","ECXLBB",140,0)
 N X,OK,ECXERR
"RTN","ECXLBB",141,0)
 ;get data
"RTN","ECXLBB",142,0)
 S ECXERR=0
"RTN","ECXLBB",143,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;3",.ECPAT)
"RTN","ECXLBB",144,0)
 I 'OK S ECXERR=1
"RTN","ECXLBB",145,0)
 Q ECXERR
"RTN","ECXLBB",146,0)
 ;
"RTN","ECXLBB",147,0)
FILE(ECODE) ;
"RTN","ECXLBB",148,0)
 ; Input - ECODE = extract record
"RTN","ECXLBB",149,0)
 ;
"RTN","ECXLBB",150,0)
 ; record the extract record at a global node in file 727.829
"RTN","ECXLBB",151,0)
 ; sequence #^year/month of extract^extract #^facility^patient dfn^SSN^
"RTN","ECXLBB",152,0)
 ; name^i/o pt indicator^encounter #^date of transfusion^time of 
"RTN","ECXLBB",153,0)
 ; transfusion^component^component abbrev^# of units^volume in mm^
"RTN","ECXLBB",154,0)
 ; reaction^reaction type^feeder location^DSS product dept^DSS IP #
"RTN","ECXLBB",155,0)
 ; ordering physician^ordering physician pc^emergency response indicator
"RTN","ECXLBB",156,0)
 ; (FEMA)^unit modified^unit modification^requesting provider^request. 
"RTN","ECXLBB",157,0)
 ; provider person class
"RTN","ECXLBB",158,0)
 ;note:  DSS product dept and DSS IP # are dependent on the release of
"RTN","ECXLBB",159,0)
 ; ECX*3*61
"RTN","ECXLBB",160,0)
 N DA,DIK,EC7
"RTN","ECXLBB",161,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLBB",162,0)
 S ECODE=EC7_"^"_ECODE
"RTN","ECXLBB",163,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,ECRN=ECRN+1
"RTN","ECXLBB",164,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLBB",165,0)
 Q
"RTN","ECXLBB",166,0)
 ;
"RTN","ECXLBB",167,0)
 ;
"RTN","ECXLBB",168,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXLBB",169,0)
 S ECHEAD="LBB"
"RTN","ECXLBB",170,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLBB",171,0)
 Q
"RTN","ECXLBB",172,0)
 ;
"RTN","ECXLBB",173,0)
LOCAL ; to extract nightly for local use not to be transmitted to TSI
"RTN","ECXLBB",174,0)
 ; should be queued with a 1D frequency
"RTN","ECXLBB",175,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXLBB",176,0)
 ;
"RTN","ECXLBB",177,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLBB",178,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXLBB",179,0)
 Q
"RTN","ECXLBB",180,0)
 ;
"RTN","ECXLBB",181,0)
 ;ECXLBB
"RTN","ECXLOG")
0^34^B21884702^B20803539
"RTN","ECXLOG",1,0)
ECXLOG ;ALB/GTS - Extract Log Report for DSS ; 11/2/06 8:38am
"RTN","ECXLOG",2,0)
 ;;3.0;DSS EXTRACTS;**84,95,92**;Dec 22, 1997;Build 30
"RTN","ECXLOG",3,0)
 ;
"RTN","ECXLOG",4,0)
EN ;entry point from option
"RTN","ECXLOG",5,0)
 ;Initialize variables
"RTN","ECXLOG",6,0)
 N DIR,ECSD1,ECED,X,Y
"RTN","ECXLOG",7,0)
 ;Prompt for start date
"RTN","ECXLOG",8,0)
 S DIR(0)="D^::EX"
"RTN","ECXLOG",9,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXLOG",10,0)
 D ^DIR
"RTN","ECXLOG",11,0)
 I $D(DIRUT) Q
"RTN","ECXLOG",12,0)
 S ECSD1=Y
"RTN","ECXLOG",13,0)
 ;Prompt for end date
"RTN","ECXLOG",14,0)
 K DIR,X,Y
"RTN","ECXLOG",15,0)
 S DIR(0)="D^"_ECSD1_":"_DT_":EX"
"RTN","ECXLOG",16,0)
 S DIR("A")="Enter Report Ending Date"
"RTN","ECXLOG",17,0)
 D ^DIR
"RTN","ECXLOG",18,0)
 I $D(DIRUT) Q
"RTN","ECXLOG",19,0)
 S ECED=Y
"RTN","ECXLOG",20,0)
 ;Queue Report
"RTN","ECXLOG",21,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **",!!
"RTN","ECXLOG",22,0)
 N ZTDESC,ZTIO,ZTSAVE,I
"RTN","ECXLOG",23,0)
 S ZTIO=""
"RTN","ECXLOG",24,0)
 S ZTDESC="DSS EXTRACT LOG STATISTICS"
"RTN","ECXLOG",25,0)
 F I="ECSD1","ECED","ECXNUM","ECXPKG","ECXSET","ECXTXDT","ECXPURGE","ECXTRACT","ECXMONTH","ECXUCONF" D
"RTN","ECXLOG",26,0)
 .S ZTSAVE(I)=""
"RTN","ECXLOG",27,0)
 D EN^XUTMDEVQ("EN1^ECXLOG",ZTDESC,.ZTSAVE)
"RTN","ECXLOG",28,0)
 Q
"RTN","ECXLOG",29,0)
 ;
"RTN","ECXLOG",30,0)
EN1 ;Tasked entry point
"RTN","ECXLOG",31,0)
 ;Input : ECSD1  -  FM format report start date
"RTN","ECXLOG",32,0)
 ;        ECED   -  FM format report end date
"RTN","ECXLOG",33,0)
 ;
"RTN","ECXLOG",34,0)
 ;Output : None
"RTN","ECXLOG",35,0)
 ;
"RTN","ECXLOG",36,0)
 ;Declare variables
"RTN","ECXLOG",37,0)
 N LN,PAGENUM,STOP,ECXCT,ECXDACT,ECXNUM,ECXPKG,ECXSET,ECXCOUNT,ECXTXDT
"RTN","ECXLOG",38,0)
 N ECXPURGE,ECXTRACT,ECXUMSG,ECXUSER,ECXMONTH,MSGNUM,COUNT,DIC,ECX0,X
"RTN","ECXLOG",39,0)
 N ECX1,ECXED1,QFLG
"RTN","ECXLOG",40,0)
 S ECXED1=ECED+.9999,ECXCT=ECSD1-.0001,(QFLG,PAGENUM,STOP)=0
"RTN","ECXLOG",41,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXLOG",42,0)
 D GETDATA
"RTN","ECXLOG",43,0)
 I $O(^TMP("ECXDSS",$J,""))="" D  Q
"RTN","ECXLOG",44,0)
 .W !
"RTN","ECXLOG",45,0)
 .W !,"***********************************************"
"RTN","ECXLOG",46,0)
 .W !,"*  NOTHING TO REPORT FOR SELECTED TIME FRAME  *"
"RTN","ECXLOG",47,0)
 .W !,"***********************************************"
"RTN","ECXLOG",48,0)
 .D WAIT
"RTN","ECXLOG",49,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXLOG",50,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXLOG",51,0)
 Q
"RTN","ECXLOG",52,0)
 ;
"RTN","ECXLOG",53,0)
GETDATA ;Get data
"RTN","ECXLOG",54,0)
 F  S ECXCT=$O(^ECX(727,"AE",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXLOG",55,0)
 .S ECXDACT=0
"RTN","ECXLOG",56,0)
 .F  S ECXDACT=$O(^ECX(727,"AE",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXLOG",57,0)
 ..;Get data nodes
"RTN","ECXLOG",58,0)
 ..S ECX0=$G(^ECX(727,ECXDACT,0)),ECX1=$G(^(1))
"RTN","ECXLOG",59,0)
 ..Q:ECX0=""
"RTN","ECXLOG",60,0)
 ..S ECXNUM=$P(ECX0,U,1),ECXPKG=$E($P(ECX0,U,3),1,13),ECXSET=$E($P(ECX0,U,4),2,7)_"-"_$E($P(ECX0,U,5),2,7),ECXCOUNT=$P(ECX0,U,6),ECXTXDT=$G(^ECX(727,ECXDACT,"TR")),ECXPURGE=$G(^ECX(727,ECXDACT,"PURG")),ECXTRACT=$P(ECX0,U,2),ECXUSER=$P(ECX0,U,7)
"RTN","ECXLOG",61,0)
 ..S ECXMONTH=$P($$FMTE^XLFDT($P(ECX0,U,4),"D")," ",1)_" "_$P($$FMTE^XLFDT($P(ECX0,U,4),"D")," ",3)
"RTN","ECXLOG",62,0)
 ..;Resolve external values for ECXUSER
"RTN","ECXLOG",63,0)
 ..K DIC S DIC="^VA(200,",DIC(0)="NZ",X=ECXUSER D ^DIC
"RTN","ECXLOG",64,0)
 ..S ECXUSER=$P($G(Y(0)),U,1)
"RTN","ECXLOG",65,0)
 ..;Count number of UNCONF messages in Message number multiple
"RTN","ECXLOG",66,0)
 ..S (MSGNUM,COUNT)=0 F  S MSGNUM=$O(^ECX(727,ECXDACT,1,MSGNUM)) Q:MSGNUM'>0  D
"RTN","ECXLOG",67,0)
 ...S COUNT=COUNT+1
"RTN","ECXLOG",68,0)
 ..S ECXUMSG=$G(COUNT)
"RTN","ECXLOG",69,0)
 ..;Save for later
"RTN","ECXLOG",70,0)
 ..S ^TMP("ECXDSS",$J,ECXPKG,ECXNUM)=ECXNUM_U_ECXPKG_U_ECXSET_U_ECXCOUNT_U_ECXTXDT_U_ECXPURGE_U_ECXTRACT_U_ECXMONTH_U_ECXUMSG_U_ECXUSER
"RTN","ECXLOG",71,0)
 ..Q
"RTN","ECXLOG",72,0)
 .Q
"RTN","ECXLOG",73,0)
 Q
"RTN","ECXLOG",74,0)
 ;
"RTN","ECXLOG",75,0)
HEADER ;print header
"RTN","ECXLOG",76,0)
 S PAGENUM=$G(PAGENUM)+1
"RTN","ECXLOG",77,0)
 S $P(LN,"-",132)=""
"RTN","ECXLOG",78,0)
 W @IOF
"RTN","ECXLOG",79,0)
 W !,?1,"DSS EXTRACT LOG STATISTICS",?120,"Page: ",PAGENUM
"RTN","ECXLOG",80,0)
 W !!,?1,"EXTRACT NUMBER",?20,"VISTA PACKAGE",?39,"DATA SET DATES",?59,"RECORD COUNT",?75,"DATE TRANSMITTED",?98,"DATE PURGED"
"RTN","ECXLOG",81,0)
 W !,?3,"DATE EXTRACTED",?25,"DATA MONTH",?40,"MSG UNCONF"
"RTN","ECXLOG",82,0)
 W ?60,"REQUESTOR"
"RTN","ECXLOG",83,0)
 W !?1,LN
"RTN","ECXLOG",84,0)
 Q
"RTN","ECXLOG",85,0)
 ;
"RTN","ECXLOG",86,0)
DETAIL ;Print detailed line
"RTN","ECXLOG",87,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXLOG",88,0)
 ;          ECXNUM    -   Extract Number
"RTN","ECXLOG",89,0)
 ;          ECXPKG    -   VistA Package
"RTN","ECXLOG",90,0)
 ;          ECXDATA   -   Data Set
"RTN","ECXLOG",91,0)
 ;          ECXCOUNT  -   Record Count
"RTN","ECXLOG",92,0)
 ;          ECXTXDT   -   Transmission Date
"RTN","ECXLOG",93,0)
 ;          ECXPURGE  -   Extract Purge Date
"RTN","ECXLOG",94,0)
 ;          ECXTRACT  -   Extract Date
"RTN","ECXLOG",95,0)
 ;          ECXMONTH  -   Data Month and Year
"RTN","ECXLOG",96,0)
 ;          ECXUCONF  -   Unconfirmed Messages
"RTN","ECXLOG",97,0)
 ;          ECXUSER   -   Requestor
"RTN","ECXLOG",98,0)
 ;Output  : None
"RTN","ECXLOG",99,0)
 ;
"RTN","ECXLOG",100,0)
 N NODE,PACKAGE,NUMBER
"RTN","ECXLOG",101,0)
 S PACKAGE="" F  S PACKAGE=$O(^TMP("ECXDSS",$J,PACKAGE)) Q:PACKAGE=""!(STOP)  D  Q:STOP
"RTN","ECXLOG",102,0)
 .S NUMBER=0 F  S NUMBER=$O(^TMP("ECXDSS",$J,PACKAGE,NUMBER)) Q:'NUMBER!(STOP)  D  Q:STOP
"RTN","ECXLOG",103,0)
 ..S NODE=^TMP("ECXDSS",$J,PACKAGE,NUMBER)
"RTN","ECXLOG",104,0)
 ..W !!,?1,$P(NODE,U,1),?20,$P(NODE,U,2),?39,$P(NODE,U,3),?59,$P(NODE,U,4),?75,$$FMTE^XLFDT($P(NODE,U,5),"D"),?98,$$FMTE^XLFDT($P(NODE,U,6),"D")
"RTN","ECXLOG",105,0)
 ..W !,?3,$$FMTE^XLFDT($P(NODE,U,7),"D"),?25,$P(NODE,U,8),?40,$P(NODE,U,9),?60,$P(NODE,U,10)
"RTN","ECXLOG",106,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXLOG",107,0)
 ..Q
"RTN","ECXLOG",108,0)
 Q
"RTN","ECXLOG",109,0)
 ;
"RTN","ECXLOG",110,0)
WAIT ;End of page logic
"RTN","ECXLOG",111,0)
 ;Input   ; None
"RTN","ECXLOG",112,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXLOG",113,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXLOG",114,0)
 ;
"RTN","ECXLOG",115,0)
 S STOP=0
"RTN","ECXLOG",116,0)
 ;CRT - Prompt for continue
"RTN","ECXLOG",117,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXLOG",118,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXLOG",119,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXLOG",120,0)
 .S DIR(0)="E"
"RTN","ECXLOG",121,0)
 .D ^DIR
"RTN","ECXLOG",122,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXLOG",123,0)
 ;Background task - check taskman
"RTN","ECXLOG",124,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXLOG",125,0)
 I STOP D
"RTN","ECXLOG",126,0)
 .W !,"*********************************************"
"RTN","ECXLOG",127,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXLOG",128,0)
 .W !,"*********************************************"
"RTN","ECXLOG",129,0)
 Q
"RTN","ECXLOG",130,0)
EXIT ;Kill temp global
"RTN","ECXLOG",131,0)
 K ^TMP("ECXDSS",$J)
"RTN","ECXLOG",132,0)
 Q
"RTN","ECXMTL")
0^24^B33423758^B32017303
"RTN","ECXMTL",1,0)
ECXMTL ;ALB/JAP - DSS Mental Health Extract ; 9/11/06 11:07am
"RTN","ECXMTL",2,0)
 ;;3.0;DSS EXTRACTS;**24,30,33,39,46,49,71,82,84,92**;Dec 22, 1997;Build 30
"RTN","ECXMTL",3,0)
 ;
"RTN","ECXMTL",4,0)
BEG ;entry point from option
"RTN","ECXMTL",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXMTL",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXMTL",7,0)
 Q
"RTN","ECXMTL",8,0)
 ;
"RTN","ECXMTL",9,0)
START ;entry point from tasked job
"RTN","ECXMTL",10,0)
 S QFLG=0
"RTN","ECXMTL",11,0)
 ;get first record #
"RTN","ECXMTL",12,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1)
"RTN","ECXMTL",13,0)
 ;call mh/dss api for extract record creation
"RTN","ECXMTL",14,0)
 ;variables ecfile,ecxym,ecinst,ecsd,eced passed in by taskmanager
"RTN","ECXMTL",15,0)
 S ECXSEQ=EC7,ECXECX=$P(EC23,U,2),ECXERR=0
"RTN","ECXMTL",16,0)
 ;call mh api to create extract records
"RTN","ECXMTL",17,0)
 S X="YSDSS" X ^%ZOSF("TEST") I '$T S QFLG=1 Q
"RTN","ECXMTL",18,0)
 D UPD^YSDSS(ECFILE,.ECXSEQ,ECXYM,ECXECX,ECINST,ECSD,ECED,.ECXERR)
"RTN","ECXMTL",19,0)
 Q:ECXERR
"RTN","ECXMTL",20,0)
 Q:QFLG
"RTN","ECXMTL",21,0)
 ;if no error, continue
"RTN","ECXMTL",22,0)
 D UPDATE
"RTN","ECXMTL",23,0)
 Q
"RTN","ECXMTL",24,0)
 ;
"RTN","ECXMTL",25,0)
UPDATE ;add non-mh data to each record created by mh api
"RTN","ECXMTL",26,0)
 N ECXADT,JJ,ECXNPRFI
"RTN","ECXMTL",27,0)
 S EC7=EC7+1
"RTN","ECXMTL",28,0)
 F JJ=EC7:1:ECXSEQ Q:QFLG  D
"RTN","ECXMTL",29,0)
 .Q:'$D(^ECX(ECFILE,JJ,0))
"RTN","ECXMTL",30,0)
 .S ECXDFN=$P(^ECX(ECFILE,JJ,0),U,5),ECXDATE=$P(^ECX(ECFILE,JJ,0),U,9),ECXPRV=$P(^ECX(ECFILE,JJ,0),U,18)
"RTN","ECXMTL",31,0)
 .S ECXSCNUM=$P(^ECX(ECFILE,JJ,0),U,23),ECXSCNAM=$P(^ECX(ECFILE,JJ,0),U,24)
"RTN","ECXMTL",32,0)
 .D PAT(ECXDFN,ECXDATE)
"RTN","ECXMTL",33,0)
 .S (ECXPRCLS,ECXPRNPI,ECXDIV,ECXPDIV)="" I ECXPRV D PROV(.ECXPRV,ECXDATE)
"RTN","ECXMTL",34,0)
 .S ECXDSSI=""
"RTN","ECXMTL",35,0)
 .I ECXLOGIC>2003 D
"RTN","ECXMTL",36,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXMTL",37,0)
 .;
"RTN","ECXMTL",38,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXMTL",39,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXMTL",40,0)
 .;
"RTN","ECXMTL",41,0)
 .;- set national patient record flag if exist
"RTN","ECXMTL",42,0)
 .D NPRF^ECXUTL5
"RTN","ECXMTL",43,0)
 .;
"RTN","ECXMTL",44,0)
 .;- If no encounter number don't file record
"RTN","ECXMTL",45,0)
 .S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXMTL",46,0)
 .S ECD=ECXDATE,ECXDATE=$$ECXDATE^ECXUTL(ECXDATE,ECXYM)
"RTN","ECXMTL",47,0)
 .;adjust scale name & scale number
"RTN","ECXMTL",48,0)
 .S ECXSCNAM=$E(ECXSCNAM,1,10)
"RTN","ECXMTL",49,0)
 .I ECXSCNUM]"",ECXSCNUM'=+ECXSCNUM S ECXSCNUM=+$E(ECXSCNUM,2,99)
"RTN","ECXMTL",50,0)
 .N ECXDEPT S ECXDEPT="" ;dss department use postponed S ECXDEPT=$$MTL^ECXDEPT(ECXDIV,ECXSCNAM,ECINST) ;p-46 line added
"RTN","ECXMTL",51,0)
 .;Set division to external value if extract is for FY05 or higher
"RTN","ECXMTL",52,0)
 .D FILE
"RTN","ECXMTL",53,0)
 Q
"RTN","ECXMTL",54,0)
 ;
"RTN","ECXMTL",55,0)
PAT(ECXDFN,ECXDATE) ;determine in/outpatient status, demographics, primary care
"RTN","ECXMTL",56,0)
 N OK
"RTN","ECXMTL",57,0)
 S (ECXADT,ECXPNM,ECXSSN,ECXMPI)=""
"RTN","ECXMTL",58,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;3;5;",.ECXPAT)
"RTN","ECXMTL",59,0)
 S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXMTL",60,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXMTL",61,0)
 ;agent orange status
"RTN","ECXMTL",62,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXMTL",63,0)
 ;- Purple Heart Indicator, Period of Service, Agent Orange Location
"RTN","ECXMTL",64,0)
 S ECXPHI=$G(ECXPAT("PHI")),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL")
"RTN","ECXMTL",65,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXMTL",66,0)
 ;Combat Veteran Status
"RTN","ECXMTL",67,0)
 S X3=$$CVEDT^ECXUTL5(ECXDFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXMTL",68,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXMTL",69,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXMTL",70,0)
 ; - Race and Ethnicity
"RTN","ECXMTL",71,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXMTL",72,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXMTL",73,0)
 ;get primary care data
"RTN","ECXMTL",74,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,ECXDATE),ECPTTM=$P(X,U)
"RTN","ECXMTL",75,0)
 S ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXMTL",76,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXMTL",77,0)
 ;get inpatient data
"RTN","ECXMTL",78,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXDOM=$P(X,U,10),ECXTS=$P(X,U,3)
"RTN","ECXMTL",79,0)
 S ECXA=$P(X,U),(ECXADT,ECXADMDT)=$P($P(X,U,4),"."),ECXDCDT=$P($P(X,U,6),".")
"RTN","ECXMTL",80,0)
 S ECXWPRV=$P(X,U,7),ECXATT=$P(X,U,8)
"RTN","ECXMTL",81,0)
 ;Get ward provider and attending phy person classes
"RTN","ECXMTL",82,0)
 S ECXWPRPC=$P(X,U,11),ECXATTPC=$P(X,U,12)
"RTN","ECXMTL",83,0)
 I ECXADMDT S ECXADMDT=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXMTL",84,0)
 I ECXDCDT S ECXDCDT=$$ECXDATE^ECXUTL(ECXDCDT,ECXYM)
"RTN","ECXMTL",85,0)
 Q
"RTN","ECXMTL",86,0)
 ;
"RTN","ECXMTL",87,0)
PROV(ECXPRV,ECXDATE) ;get provider data
"RTN","ECXMTL",88,0)
 N INST,DGIEN,ARR,DIC,DR,DA,DIQ
"RTN","ECXMTL",89,0)
 S ECXPRCLS=$$PRVCLASS^ECXUTL(ECXPRV,ECXDATE)
"RTN","ECXMTL",90,0)
 S ECXPRNPI=""
"RTN","ECXMTL",91,0)
 ;get division identifier using provider
"RTN","ECXMTL",92,0)
 S (ECXDIV,ECXPDIV)=""
"RTN","ECXMTL",93,0)
 S IEN=0 F  D  Q:'IEN  Q:'INST  Q:ECXDIV
"RTN","ECXMTL",94,0)
 .;get pointer to file #4 from provider record
"RTN","ECXMTL",95,0)
 .I '$D(^VA(200,ECXPRV,0)) Q
"RTN","ECXMTL",96,0)
 .S IEN=$O(^VA(200,ECXPRV,2,IEN))
"RTN","ECXMTL",97,0)
 .Q:'IEN
"RTN","ECXMTL",98,0)
 .S DIC="^VA(200,",DR="16",DA=ECXPRV
"RTN","ECXMTL",99,0)
 .S DR(200.02)=".01",DA(200.02)=IEN,DIQ="ARR",DIQ(0)="I"
"RTN","ECXMTL",100,0)
 .D EN^DIQ1
"RTN","ECXMTL",101,0)
 .S INST=$G(ARR(200.02,IEN,.01,"I"))
"RTN","ECXMTL",102,0)
 .Q:'INST
"RTN","ECXMTL",103,0)
 .;get production division
"RTN","ECXMTL",104,0)
 .S ECXPDIV=$$RADDIV^ECXDEPT(INST) ;p-46 line added
"RTN","ECXMTL",105,0)
 .;get medical center division
"RTN","ECXMTL",106,0)
 .S DGIEN=$O(^DG(40.8,"AD",INST,0)) I DGIEN D
"RTN","ECXMTL",107,0)
 ..S ECXDIV=$P($G(^ECX(727.3,DGIEN,0)),U,2)
"RTN","ECXMTL",108,0)
 S ECXPRV="2"_ECXPRV
"RTN","ECXMTL",109,0)
 Q
"RTN","ECXMTL",110,0)
 ;
"RTN","ECXMTL",111,0)
FILE ;file record in #727.812
"RTN","ECXMTL",112,0)
 ;node0
"RTN","ECXMTL",113,0)
 ;facility^dfn^ssn ECXSSN^name ECXPNM^i/o status ECXA^
"RTN","ECXMTL",114,0)
 ;day ECXDATE^division ECXDIV^admit date ECXADMDT^
"RTN","ECXMTL",115,0)
 ;d/c date ECXDCDT^dss id ECXDSSI^pc team ECPTTM^pc provider ECPTPR^
"RTN","ECXMTL",116,0)
 ;pc provider npi ECPTNPI^pc prov person class ECCLAS^
"RTN","ECXMTL",117,0)
 ;provider ECXPRV^provider npi ECXPRNPI^prov person class ECXPRCLS^
"RTN","ECXMTL",118,0)
 ;test name ECXSCNAM(?)^test ien ECXSCNUM(?)^scale number^scale name^
"RTN","ECXMTL",119,0)
 ;test score^scale score^attend phys^ward provider
"RTN","ECXMTL",120,0)
 ;node1
"RTN","ECXMTL",121,0)
 ;mpi^assoc pc provider^assoc pc provider npi^
"RTN","ECXMTL",122,0)
 ;assoc pc prov person class^asi class^asi special^asi encounter date^
"RTN","ECXMTL",123,0)
 ;purple heart ind.^dom prrtp & saartp ind.^enrollment cat^
"RTN","ECXMTL",124,0)
 ;enrollment stat^enrollment prior^period of serv.^obs. pat ind.^
"RTN","ECXMTL",125,0)
 ;encounter num^agent orange loc^dob^production division^dss
"RTN","ECXMTL",126,0)
 ;department ECXDEPT^head & neck canc. indi.^ethnicity^race1^^
"RTN","ECXMTL",127,0)
 ;enrollment prior ECXPRIOR_enrollment subgroup
"RTN","ECXMTL",128,0)
 ;ECXSBGRP^enrollee user ECXUESTA^division ECXDIV^patient type
"RTN","ECXMTL",129,0)
 ;ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXMTL",130,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI
"RTN","ECXMTL",131,0)
 ;attending phy person class ECXATTPC^ward provider person class 
"RTN","ECXMTL",132,0)
 ;ECXWPRPC^^agent orange status ECXAST
"RTN","ECXMTL",133,0)
 N DA,DIK,STR
"RTN","ECXMTL",134,0)
 I $P(^ECX(ECFILE,JJ,0),U,21)="ASI" S $P(^ECX(ECFILE,JJ,1),U,7)=ECXDATE
"RTN","ECXMTL",135,0)
 S $P(^ECX(ECFILE,JJ,0),U,6,9)=ECXSSN_U_ECXPNM_U_ECXA_U_ECXDATE
"RTN","ECXMTL",136,0)
 S STR=$S(ECXLOGIC<2005:ECXDIV,1:"")_U_ECXADMDT_U_ECXDCDT_U_ECXDSSI_U_ECPTTM_U_ECPTPR_U
"RTN","ECXMTL",137,0)
 S STR=STR_ECPTNPI_U_ECCLAS,$P(^ECX(ECFILE,JJ,0),U,10,17)=STR,STR=""
"RTN","ECXMTL",138,0)
 S $P(^ECX(ECFILE,JJ,0),U,18,20)=ECXPRV_U_ECXPRNPI_U_ECXPRCLS
"RTN","ECXMTL",139,0)
 S $P(^ECX(ECFILE,JJ,0),U,23,24)=ECXSCNUM_U_ECXSCNAM
"RTN","ECXMTL",140,0)
 S $P(^ECX(ECFILE,JJ,0),U,27,29)=ECXATT_U_ECXWPRV_U
"RTN","ECXMTL",141,0)
 I '$D(^ECX(ECFILE,JJ,1)) S ^ECX(727.812,JJ,1)="^^^^^"
"RTN","ECXMTL",142,0)
 S $P(^ECX(ECFILE,JJ,1),U,1,4)=ECXMPI_U_ECASPR_U_ECASNPI_U_ECCLAS2
"RTN","ECXMTL",143,0)
 S STR=ECXPHI_U_ECXDOM_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U
"RTN","ECXMTL",144,0)
 S STR=STR_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXDOB_U_ECXPDIV_U_ECXDEPT_U
"RTN","ECXMTL",145,0)
 S STR=STR_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXMTL",146,0)
 I ECXLOGIC>2004 S STR=STR_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXDIV_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXMTL",147,0)
 I ECXLOGIC>2005 S STR=STR_U_ECXATTPC_U_ECXWPRPC
"RTN","ECXMTL",148,0)
 S $P(^ECX(ECFILE,JJ,1),U,8,22)=STR
"RTN","ECXMTL",149,0)
 I ECXLOGIC>2006 S $P(^ECX(ECFILE,JJ,1),U,34)=ECXAST
"RTN","ECXMTL",150,0)
 S DA=JJ,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXMTL",151,0)
 S ECRN=ECRN+1
"RTN","ECXMTL",152,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXMTL",153,0)
 Q
"RTN","ECXMTL",154,0)
 ;
"RTN","ECXMTL",155,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXMTL",156,0)
 S ECHEAD="MTL"
"RTN","ECXMTL",157,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXMTL",158,0)
 Q
"RTN","ECXMTL",159,0)
 ;
"RTN","ECXMTL",160,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXMTL",161,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXMTL",162,0)
 Q
"RTN","ECXNUT")
0^3^B26867365^n/a
"RTN","ECXNUT",1,0)
ECXNUT ;ALB/JRC Nutrition DSS Extract ; 11/2/06 8:40am
"RTN","ECXNUT",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUT",3,0)
BEG ;entry point from option
"RTN","ECXNUT",4,0)
 N EC23,EC7,ECED,ECFILE,ECGRP,ECHEAD,ECINST,ECPACK,ECPIECE,ECRN,ECRTN,ECSD1,ECVER,ECXYM
"RTN","ECXNUT",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXNUT",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXNUT",7,0)
 Q
"RTN","ECXNUT",8,0)
 ;
"RTN","ECXNUT",9,0)
START ; start package specific extract
"RTN","ECXNUT",10,0)
 ;Init variables
"RTN","ECXNUT",11,0)
 N ECSD
"RTN","ECXNUT",12,0)
 S ECED=ECED+.3,ECSD=ECSD1
"RTN","ECXNUT",13,0)
 K ^TMP($J,"FH")
"RTN","ECXNUT",14,0)
 ;
"RTN","ECXNUT",15,0)
 ;Call n&fs api and store in ^TMP($J,"FH" global
"RTN","ECXNUT",16,0)
 D DATA^FHDSSAPI(ECSD,ECED)
"RTN","ECXNUT",17,0)
 ;
"RTN","ECXNUT",18,0)
 ;Get n&fs records from ^TMP($J,"FH" global and file
"RTN","ECXNUT",19,0)
 D GETMEALS^ECXNUT1
"RTN","ECXNUT",20,0)
 ;
"RTN","ECXNUT",21,0)
 ;kill ^tmp global
"RTN","ECXNUT",22,0)
 K ^TMP($J,"FH")
"RTN","ECXNUT",23,0)
 ;
"RTN","ECXNUT",24,0)
 Q
"RTN","ECXNUT",25,0)
 ;
"RTN","ECXNUT",26,0)
GET ;gather extract data
"RTN","ECXNUT",27,0)
 ;Init variables
"RTN","ECXNUT",28,0)
 N ECXORDPC,ECXSSN,ECXPNM,ECXSEX,ECXDOB,ECXMPI,ECXRC1,ECXETH,ECXVET,ECXENRL,ECXELIG,ECXMST,ECXPST,ECXPLOC,ECXPHI,ECXMNS,ECXSTATE,ECXCNTY,ECXZIP,ECXPOS,ECXAST,ECXAOL,ECXRST,ECXEST,ECXTM,ECXDATE,ECXMN,ECXSPC
"RTN","ECXNUT",29,0)
 N ECXADMDT,ECXWRD,ECXFAC,ECXPRV,ECXPRNPI,ECXATT,ECXATNPI,ECXDOM,ECXATTPC,ECXPRVPC,ECXPDIV,ECXCBOC,ECPTPR,ECCLASS,ECPTTM,ECXOBS,ECXHNCI,ECXNPRFI,ECXERI,ECXENC,ECPAT,ECXERR,ADM,W,X,ECXCAT,ECXCVE,ECXPRIOR,ECXPTYPE,ECXSTAT,ECXUESTA,ECXA
"RTN","ECXNUT",30,0)
 ;
"RTN","ECXNUT",31,0)
 ;- Prefix ordering pro with a 2 and get person class
"RTN","ECXNUT",32,0)
 S ECXORDPC=$$PRVCLASS^ECXUTL(+ECXORDPH,DATE)
"RTN","ECXNUT",33,0)
 S ECXORDPH=$S(ECXORDPH:2_ECXORDPH,1:"")
"RTN","ECXNUT",34,0)
 ;
"RTN","ECXNUT",35,0)
 ;set patient file (#2) dfn and get patient demographics
"RTN","ECXNUT",36,0)
 S ECXDFN=$P($G(^TMP($J,"FH","ZN",FHDFN)),U,3)
"RTN","ECXNUT",37,0)
 S ECXERR=0 D PAT(ECXDFN)
"RTN","ECXNUT",38,0)
 Q:ECXERR
"RTN","ECXNUT",39,0)
 ;Set demographic variables
"RTN","ECXNUT",40,0)
 S ECXSSN=ECPAT("SSN"),ECXPNM=ECPAT("NAME"),ECXSEX=ECPAT("SEX"),ECXDOB=ECPAT("DOB"),ECXMPI=ECPAT("MPI"),ECXRC1=ECPAT("RACE1"),ECXETH=ECPAT("ETHNIC"),ECXVET=ECPAT("VET"),ECXENRL=ECPAT("ENROLL LOC"),ECXELIG=ECPAT("ELIG")
"RTN","ECXNUT",41,0)
 S ECXMST=ECPAT("MST STAT"),ECXPST=ECPAT("POW STAT"),ECXPLOC=ECPAT("POW LOC"),ECXPHI=ECPAT("PHI"),ECXMNS=ECPAT("MEANS"),ECXSTATE=ECPAT("STATE"),ECXCNTY=ECPAT("COUNTY"),ECXZIP=ECPAT("ZIP")
"RTN","ECXNUT",42,0)
 S ECXPOS=ECPAT("POS"),ECXAST=ECPAT("AO STAT"),ECXAOL=ECPAT("AOL"),ECXRST=ECPAT("IR STAT"),ECXEST=ECPAT("EC STAT")
"RTN","ECXNUT",43,0)
 ;
"RTN","ECXNUT",44,0)
 ;Get enrollment status
"RTN","ECXNUT",45,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXNUT",46,0)
 ;
"RTN","ECXNUT",47,0)
 S ECXTM=$$ECXTIME^ECXUTL(DATE)
"RTN","ECXNUT",48,0)
 S ECXDATE=DATE
"RTN","ECXNUT",49,0)
 ;
"RTN","ECXNUT",50,0)
 ;- Use movement record date & time
"RTN","ECXNUT",51,0)
 S ADM=$$INP^ECXUTL2(ECXDFN,DATE),ECXA=$P(ADM,U)
"RTN","ECXNUT",52,0)
 S ECXMN=$P(ADM,U,2),ECXSPC=$P(ADM,U,3),ECXADMDT=$P(ADM,U,4)
"RTN","ECXNUT",53,0)
 S W=$P(ADM,U,9),ECXWRD=$P(W,";",1),ECXFAC=$P(W,";",2)
"RTN","ECXNUT",54,0)
 S ECXPRV=$P(ADM,U,7),ECXPRNPI="",ECXATT=$P(ADM,U,8),ECXATNPI=""
"RTN","ECXNUT",55,0)
 S ECXDOM=$P(ADM,U,10),ECXATTPC=$P(ADM,U,12),ECXPRVPC=$P(ADM,U,11)
"RTN","ECXNUT",56,0)
 ;
"RTN","ECXNUT",57,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXFAC)  ;Get production division
"RTN","ECXNUT",58,0)
 S ECXCBOC=$$CBOC^ECXSCX2(+ECXFAC) ;Get cboc facility
"RTN","ECXNUT",59,0)
 ;
"RTN","ECXNUT",60,0)
 ;- Get primary care data
"RTN","ECXNUT",61,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,DATE)
"RTN","ECXNUT",62,0)
 S ECPTPR=$P(X,U,2),ECCLASS=$P(X,U,3),ECPTTM=$P(X,U)
"RTN","ECXNUT",63,0)
 ;
"RTN","ECXNUT",64,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXNUT",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXSPC)
"RTN","ECXNUT",66,0)
 ;
"RTN","ECXNUT",67,0)
 ;- Get head and neck cancer indicator
"RTN","ECXNUT",68,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXNUT",69,0)
 ;
"RTN","ECXNUT",70,0)
 ;- Get national patient record flag indicator
"RTN","ECXNUT",71,0)
 N ECXNPRFI D NPRF^ECXUTL5
"RTN","ECXNUT",72,0)
 ;
"RTN","ECXNUT",73,0)
 ;- National response indicator
"RTN","ECXNUT",74,0)
 S ECXERI=$$EMGRES^DGUTL(ECXDFN)
"RTN","ECXNUT",75,0)
 ;
"RTN","ECXNUT",76,0)
 ;- If null encounter number, don't file record
"RTN","ECXNUT",77,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,DATE,ECXSPC,ECXOBS,ECHEAD,,)
"RTN","ECXNUT",78,0)
 D:ECXENC'="" FILE
"RTN","ECXNUT",79,0)
 Q
"RTN","ECXNUT",80,0)
 ;
"RTN","ECXNUT",81,0)
PAT(ECXDFN) ;get/set patient data
"RTN","ECXNUT",82,0)
 ; INPUT - ECXDFN = patient ien (DFN)
"RTN","ECXNUT",83,0)
 ; OUTPUT - ECPAT array:
"RTN","ECXNUT",84,0)
 ;          ECPAT("SSN")
"RTN","ECXNUT",85,0)
 ;          ECPAT("NAME")
"RTN","ECXNUT",86,0)
 ; returns 0 or 1 in ECXERR - 0=successful
"RTN","ECXNUT",87,0)
 ;                            1=error condition
"RTN","ECXNUT",88,0)
 N X,OK
"RTN","ECXNUT",89,0)
 ;get data
"RTN","ECXNUT",90,0)
 S ECXERR=0
"RTN","ECXNUT",91,0)
 K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,"","1;2;3;5",.ECPAT)
"RTN","ECXNUT",92,0)
 I 'OK S ECXERR=1
"RTN","ECXNUT",93,0)
 Q ECXERR
"RTN","ECXNUT",94,0)
 ;
"RTN","ECXNUT",95,0)
FILE ;file the n&fs extract record
"RTN","ECXNUT",96,0)
 ;node
"RTN","ECXNUT",97,0)
 ;facility^dfn^ssn^name^in/out^day^time^treating specialty^
"RTN","ECXNUT",98,0)
 ;ordering provider^ordering provider person class^primary 
"RTN","ECXNUT",99,0)
 ;care provider^primary person class^primary care team^mpi^dob^sex^
"RTN","ECXNUT",100,0)
 ;race 1^ethnicity^veteran^enrollment status^enrollment location^
"RTN","ECXNUT",101,0)
 ;enrollment category^enrollment priority^eligibility^period of
"RTN","ECXNUT",102,0)
 ;service^agent orange status^agent orange location^radiation status
"RTN","ECXNUT",103,0)
 ;^environmental contaminants^mst status^head & neck cancer indicator
"RTN","ECXNUT",104,0)
 ;pow status^pow location^purple heart indicator^means test^state code
"RTN","ECXNUT",105,0)
 ;^county code^zip+4^observation patient indicator^rrtp,prrtp and
"RTN","ECXNUT",106,0)
 ;saartp indicator^encounter number^patient division^food production
"RTN","ECXNUT",107,0)
 ;division^delivery division^product feeder key^food production
"RTN","ECXNUT",108,0)
 ;facility^delivery location type^delivery feeder location^quantity^
"RTN","ECXNUT",109,0)
 ;cboc^status^user enrollee^patient type^cv status eligibility^
"RTN","ECXNUT",110,0)
 ;national^patient record flag^emergency response indicator^admission
"RTN","ECXNUT",111,0)
 ;date
"RTN","ECXNUT",112,0)
 ;
"RTN","ECXNUT",113,0)
 N DA,DIK,ECODE,ECODE1
"RTN","ECXNUT",114,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXNUT",115,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXNUT",116,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(DATE,ECXYM)_U_ECXTM_U_ECXSPC_U_ECXORDPH_U_ECXORDPC_U
"RTN","ECXNUT",117,0)
 S ECODE=ECODE_ECPTPR_U_ECCLASS_U_ECPTTM_U_ECXMPI_U_ECXDOB_U_ECXSEX_U
"RTN","ECXNUT",118,0)
 S ECODE=ECODE_ECXRC1_U_ECXETH_U_ECXVET_U_ECXSTAT_U_ECXENRL_U_ECXCAT_U
"RTN","ECXNUT",119,0)
 S ECODE=ECODE_ECXPRIOR_U_ECXELIG_U_ECXPOS_U_ECXAST_U_ECXAOL_U_ECXRST
"RTN","ECXNUT",120,0)
 S ECODE=ECODE_U_ECXEST_U_ECXMST_U_ECXHNCI_U_ECXPST_U_ECXPLOC_U_ECXPHI
"RTN","ECXNUT",121,0)
 S ECODE=ECODE_U_ECXMNS_U_ECXSTATE_U_ECXCNTY_U
"RTN","ECXNUT",122,0)
 S ECODE1=ECXZIP_U_ECXOBS_U_ECXDOM_U_ECXENC_U_ECXPDIV_U_ECXFPD_U
"RTN","ECXNUT",123,0)
 S ECODE1=ECODE1_ECXFDD_U_ECXKEY_U_ECXFPF_U_ECXDLT_U_ECXDFL_U_ECXQTY_U
"RTN","ECXNUT",124,0)
 S ECODE1=ECODE1_ECXCBOC_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXNPRFI_U
"RTN","ECXNUT",125,0)
 S ECODE1=ECODE1_ECXERI_U_$S(ECXADMDT:$$ECXDATE^ECXUTL(ECXADMDT,ECXYM),1:"")
"RTN","ECXNUT",126,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXNUT",127,0)
 S ECRN=ECRN+1
"RTN","ECXNUT",128,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXNUT",129,0)
 Q
"RTN","ECXNUT",130,0)
 ;
"RTN","ECXNUT",131,0)
SETUP ;Set required input for ECXTRAC.
"RTN","ECXNUT",132,0)
 S ECHEAD="NUT"
"RTN","ECXNUT",133,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXNUT",134,0)
 Q
"RTN","ECXNUT1")
0^4^B17707422^n/a
"RTN","ECXNUT1",1,0)
ECXNUT1 ;ALB/JRC Nutrition DSS Extract ; 10/27/06 1:53pm
"RTN","ECXNUT1",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUT1",3,0)
 Q
"RTN","ECXNUT1",4,0)
 ;
"RTN","ECXNUT1",5,0)
GETMEALS ;get patient meals 
"RTN","ECXNUT1",6,0)
 ;init variables
"RTN","ECXNUT1",7,0)
 N DATE,FHDFN,ECXADM,NODE,PRODUCT,ECXQTY,ORDER,ECXORDPH,ECXKEY,P,D
"RTN","ECXNUT1",8,0)
 N ECXFPD,ECXFDD,ECXFPF,ECXDLT,ECXDFL,NUMBER,PNODE,SF,TF,TFNODE
"RTN","ECXNUT1",9,0)
 ;S (DATE,FHDFN,NUMBER,ECXQTY)=0,(ECXADM,NODE,ORDER,ECXORDPH)=""
"RTN","ECXNUT1",10,0)
 ;Get inpatient diets
"RTN","ECXNUT1",11,0)
 ;S P="INP",D="PD" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",12,0)
 ;. F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",13,0)
 ;.. F  S ECXADM=$O(^TMP($J,"FH",DATE,FHDFN,ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",14,0)
 ;... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,ECXADM,"INP")) Q:'NODE
"RTN","ECXNUT1",15,0)
 ;... S PRODUCT=$P(NODE,U,13),ECXQTY=1,ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",16,0)
 ;... S ECXORDPH=$$GET1^DIQ(100,+ORDER,1,"I")
"RTN","ECXNUT1",17,0)
 ;... ;Resolve feeder key for nutrition product
"RTN","ECXNUT1",18,0)
 ;... S ECXKEY=$$NUTKEY^ECXUTL6("PD",PRODUCT)
"RTN","ECXNUT1",19,0)
 ;... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",20,0)
 ;... ;Get additional data and file record.
"RTN","ECXNUT1",21,0)
 ;... D GET^ECXNUT
"RTN","ECXNUT1",22,0)
 ;Get inpatient supplemental feedings
"RTN","ECXNUT1",23,0)
 ;S (FHDFN,DATE)=0,(ECXADM,NODE,ORDER,ECXORDPH)=""
"RTN","ECXNUT1",24,0)
 ;S P="INP",D="SF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",25,0)
 ;. F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",26,0)
 ;.. F  S ECXADM=$O(^TMP($J,"FH",DATE,FHDFN,ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",27,0)
 ;... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,ECXADM,"SF")) Q:'NODE
"RTN","ECXNUT1",28,0)
 ;... F SF=5:2:27 S PRODUCT=$P(NODE,U,SF) Q:PRODUCT']""  S ECXQTY=1 D
"RTN","ECXNUT1",29,0)
 ;.... S ORDER=""_$P(NODE,U,7)_","_""
"RTN","ECXNUT1",30,0)
 ;.... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",31,0)
 ;.... ;Resolve external value for product key
"RTN","ECXNUT1",32,0)
 ;.... S ECXKEY=$$NUTKEY^ECXUTL6("SF",PRODUCT)
"RTN","ECXNUT1",33,0)
 ;.... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",34,0)
 ;.... ;Get additional data and file record.
"RTN","ECXNUT1",35,0)
 ;.... D GET^ECXNUT
"RTN","ECXNUT1",36,0)
 ;Get inpatient standing orders
"RTN","ECXNUT1",37,0)
 ;S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",38,0)
 ;S P="INP",D="SO" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",39,0)
 ;. F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",40,0)
 ;.. F  S ECXADM=$O(^TMP($J,"FH",DATE,FHDFN,ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",41,0)
 ;... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,ECXADM,"SO")) Q:'NODE
"RTN","ECXNUT1",42,0)
 ;... S PRODUCT=$P(NODE,U,2),ECXQTY=1
"RTN","ECXNUT1",43,0)
 ;... ;Resolve external value for product key
"RTN","ECXNUT1",44,0)
 ;... S ECXKEY=$$NUTKEY^ECXUTL6("SO",PRODUCT)
"RTN","ECXNUT1",45,0)
 ;... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",46,0)
 ;... ;Get additional data and file record.
"RTN","ECXNUT1",47,0)
 ;... D GET^ECXNUT
"RTN","ECXNUT1",48,0)
 ;Get inpatient tube feedings
"RTN","ECXNUT1",49,0)
 ;S (FHDFN,DATE,P)=0,(ECXADM,NODE,ECXORDPH,PNODE)=""
"RTN","ECXNUT1",50,0)
 ;S P="INP",D="TF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",51,0)
 ;. F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",52,0)
 ;.. F  S ECXADM=$O(^TMP($J,"FH",DATE,FHDFN,ECXADM)) Q:'ECXADM  D
"RTN","ECXNUT1",53,0)
 ;... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,ECXADM,"TF")) Q:'NODE
"RTN","ECXNUT1",54,0)
 ;... S P=$O(^TMP($J,"FH",DATE,FHDFN,ECXADM,"TF",P)) Q:'P  D
"RTN","ECXNUT1",55,0)
 ;.... S PNODE=^TMP($J,"FH",DATE,FHDFN,ECXADM,"TF",P,"P")
"RTN","ECXNUT1",56,0)
 ;.... S PRODUCT=$P(PNODE,U,1),ECXQTY=$P(PNODE,U,4)
"RTN","ECXNUT1",57,0)
 ;.... S ORDER=""_$P(NODE,U,14)_","_""
"RTN","ECXNUT1",58,0)
 ;.... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",59,0)
 ;.... ;Resolve external value for product key
"RTN","ECXNUT1",60,0)
 ;.... S ECXKEY=$$NUTKEY^ECXUTL6("TF",PRODUCT)
"RTN","ECXNUT1",61,0)
 ;.... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",62,0)
 ;.... ;Get additional data and file record.
"RTN","ECXNUT1",63,0)
 ;.... D GET^ECXNUT
"RTN","ECXNUT1",64,0)
 ;Get outpatient recurring meals
"RTN","ECXNUT1",65,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",66,0)
 S P="OP",D="RM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",67,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",68,0)
 .. S NUMBER=0 F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",69,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM")) Q:'NODE
"RTN","ECXNUT1",70,0)
 ... S PRODUCT=$P(NODE,U,2),ECXQTY=1,ORDER=""_$P(NODE,U,12)_","_""
"RTN","ECXNUT1",71,0)
 ... S PRODUCT=$$GET1^DIQ(111,PRODUCT,4,"I")
"RTN","ECXNUT1",72,0)
 ... S ECXORDPH=$$GET1^DIQ(100,ORDER,1,"I")
"RTN","ECXNUT1",73,0)
 ... ;Resolve external value for product key
"RTN","ECXNUT1",74,0)
 ... S ECXKEY=$$NUTKEY^ECXUTL6("PD",PRODUCT)
"RTN","ECXNUT1",75,0)
 ... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",76,0)
 ... ;Get additional data and file record.
"RTN","ECXNUT1",77,0)
 ... D GET^ECXNUT
"RTN","ECXNUT1",78,0)
 ;Get outpatient tube feedings
"RTN","ECXNUT1",79,0)
 S (FHDFN,DATE,NUMBER)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",80,0)
 S P="OP",D="TF" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",81,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN))  Q:'FHDFN  D
"RTN","ECXNUT1",82,0)
 .. F  S NUMBER=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER)) Q:'NUMBER  D
"RTN","ECXNUT1",83,0)
 ... S NODE=$G(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF")) Q:'NODE
"RTN","ECXNUT1",84,0)
 ... S TF=$O(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)) Q:'TF  D
"RTN","ECXNUT1",85,0)
 .... S TFNODE=^TMP($J,"FH",DATE,FHDFN,NUMBER,"RMTF",TF)
"RTN","ECXNUT1",86,0)
 .... S PRODUCT=$P(TFNODE,U,1),ECXQTY=$P(TFNODE,U,4)
"RTN","ECXNUT1",87,0)
 .... ;Resolve external value for product key
"RTN","ECXNUT1",88,0)
 .... S ECXKEY=$$NUTKEY^ECXUTL6("TF",PRODUCT)
"RTN","ECXNUT1",89,0)
 .... I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",90,0)
 .... ;Get additional data and file record.
"RTN","ECXNUT1",91,0)
 .... D GET^ECXNUT
"RTN","ECXNUT1",92,0)
 ;Get outpatient special meals
"RTN","ECXNUT1",93,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",94,0)
 S P="OP",D="SM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",95,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",96,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"SM")) Q:'NODE
"RTN","ECXNUT1",97,0)
 .. S PRODUCT=$P(NODE,U,13),ECXQTY=1,ECXORDPH=$P(NODE,U,5)
"RTN","ECXNUT1",98,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",99,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("SM",PRODUCT)
"RTN","ECXNUT1",100,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",101,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",102,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",103,0)
 ;Get outpatient guest meals
"RTN","ECXNUT1",104,0)
 S (FHDFN,DATE)=0,(ECXADM,NODE,ECXORDPH)=""
"RTN","ECXNUT1",105,0)
 S P="OP",D="GM" F  S DATE=$O(^TMP($J,"FH",DATE)) Q:'DATE  D
"RTN","ECXNUT1",106,0)
 . F  S FHDFN=$O(^TMP($J,"FH",DATE,FHDFN)) Q:'FHDFN  D
"RTN","ECXNUT1",107,0)
 .. S NODE=$G(^TMP($J,"FH",DATE,FHDFN,"GM")) Q:'NODE
"RTN","ECXNUT1",108,0)
 .. S PRODUCT=$P(NODE,U,13),ECXQTY=1
"RTN","ECXNUT1",109,0)
 .. ;Resolve external value for product key
"RTN","ECXNUT1",110,0)
 .. S ECXKEY=$$NUTKEY^ECXUTL6("GM",PRODUCT)
"RTN","ECXNUT1",111,0)
 .. I $$NUTLOC^ECXUTL6(P,D,.ECXFPD,.ECXFDD,.ECXFPF,.ECXDLT,.ECXDFL)
"RTN","ECXNUT1",112,0)
 .. ;Get additional data and file record.
"RTN","ECXNUT1",113,0)
 .. D GET^ECXNUT
"RTN","ECXNUT1",114,0)
 Q
"RTN","ECXNUTDE")
0^5^B4229451^n/a
"RTN","ECXNUTDE",1,0)
ECXNUTDE ;ALB/JRC - Nut Division Worksheet Edit ; 10/17/06 2:01pm
"RTN","ECXNUTDE",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUTDE",3,0)
 ;
"RTN","ECXNUTDE",4,0)
EN ;entry point from menu option
"RTN","ECXNUTDE",5,0)
 ;Declare variables
"RTN","ECXNUTDE",6,0)
 N STOP,DIR,DIRUT,FL,DIC,Y,DIVISION,DSSDIV,DTOUT,DUOUT,FL,DLAYGO
"RTN","ECXNUTDE",7,0)
 S STOP=0
"RTN","ECXNUTDE",8,0)
 F  D  Q:STOP
"RTN","ECXNUTDE",9,0)
 .S DIR(0)="SO^PL:PRODUCTION LOCATION;DL:DELIVERY LOCATION"
"RTN","ECXNUTDE",10,0)
 .S DIR("A")="Select location to edit?"
"RTN","ECXNUTDE",11,0)
 .D ^DIR I $D(DIRUT) S STOP=1 Q
"RTN","ECXNUTDE",12,0)
 .S FL=$S(Y="PL":119.71,Y="DL":119.72,1:"")
"RTN","ECXNUTDE",13,0)
 .F  D  Q:STOP
"RTN","ECXNUTDE",14,0)
 ..;Select division to edit
"RTN","ECXNUTDE",15,0)
 ..S DIC="^ECX(728.46,",DIC(0)="AEQMZL",DLAYGO=728.45
"RTN","ECXNUTDE",16,0)
 ..S DIC("A")="Select "_$S(FL=119.71:"Production",1:"Delivery")_" Location to edit: "
"RTN","ECXNUTDE",17,0)
 ..S DIC("V")="I +Y(0)="_FL
"RTN","ECXNUTDE",18,0)
 ..D ^DIC
"RTN","ECXNUTDE",19,0)
 ..I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTDE",20,0)
 ..S DIVISION=$P(Y,U,2)
"RTN","ECXNUTDE",21,0)
 ..D SCREEN Q:STOP
"RTN","ECXNUTDE",22,0)
 ..D UPDATE Q:STOP
"RTN","ECXNUTDE",23,0)
 Q
"RTN","ECXNUTDE",24,0)
 ;
"RTN","ECXNUTDE",25,0)
SCREEN ;Screen Division Selection
"RTN","ECXNUTDE",26,0)
 N DIV,IEN,INST,CHOICES,CNT,DIR,DIRUT,DUOUT
"RTN","ECXNUTDE",27,0)
 S DIV="",IEN=0
"RTN","ECXNUTDE",28,0)
 S DIV="" F  S DIV=$O(^DG(40.8,"B",DIV)) Q:DIV=""  S IEN=$O(^(DIV,0))  D
"RTN","ECXNUTDE",29,0)
 .S INST=$$GET1^DIQ(40.8,IEN,.07,"I")
"RTN","ECXNUTDE",30,0)
 .;Prepare choices
"RTN","ECXNUTDE",31,0)
 .S CNT=$G(CNT)+1,DIV(CNT)=INST
"RTN","ECXNUTDE",32,0)
 .S CHOICES=$G(CHOICES)_CNT_":"_$$GET1^DIQ(4,INST,.01,"E")_" "_$$RADDIV^ECXDEPT(INST)_";"
"RTN","ECXNUTDE",33,0)
 S DIR(0)="S^"_CHOICES
"RTN","ECXNUTDE",34,0)
 S DIR("A")="Select DSS Assigned Division"
"RTN","ECXNUTDE",35,0)
 D ^DIR
"RTN","ECXNUTDE",36,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXNUTDE",37,0)
 S DSSDIV=DIV(Y)
"RTN","ECXNUTDE",38,0)
 Q
"RTN","ECXNUTDE",39,0)
 ;
"RTN","ECXNUTDE",40,0)
UPDATE ;Update file (#728.46) assigned product field
"RTN","ECXNUTDE",41,0)
 N ECXFDA,ECXERR
"RTN","ECXNUTDE",42,0)
 S ECXFDA(728.46,"?+1,",.01)=DIVISION
"RTN","ECXNUTDE",43,0)
 S ECXFDA(728.46,"?+1,",1)=DSSDIV
"RTN","ECXNUTDE",44,0)
 D UPDATE^DIE("","ECXFDA","","ECXERR")
"RTN","ECXNUTDE",45,0)
 I $D(ECXERR) D
"RTN","ECXNUTDE",46,0)
 .W !!!,"Problem encountered during record update "
"RTN","ECXNUTDE",47,0)
 .W !!,"Contact IRM"_"  Error: "_$G(ECXERR("DIERR",1,"TEXT",1))
"RTN","ECXNUTDE",48,0)
 Q
"RTN","ECXNUTDP")
0^8^B12489432^n/a
"RTN","ECXNUTDP",1,0)
ECXNUTDP ;ALB/JRC - Nut Division Worksheet Print ; 11/2/06 8:41am
"RTN","ECXNUTDP",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUTDP",3,0)
 ;
"RTN","ECXNUTDP",4,0)
EN ;entry point from option
"RTN","ECXNUTDP",5,0)
 ;Queue Report
"RTN","ECXNUTDP",6,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXNUTDP",7,0)
 S ZTIO=""
"RTN","ECXNUTDP",8,0)
 S ZTDESC="Nutrition Division Worksheet for DSS"
"RTN","ECXNUTDP",9,0)
 D EN^XUTMDEVQ("EN1^ECXNUTDP",ZTDESC,.ZTSAVE)
"RTN","ECXNUTDP",10,0)
 Q
"RTN","ECXNUTDP",11,0)
EN1 ;Tasked entry point
"RTN","ECXNUTDP",12,0)
 ;Declare variables
"RTN","ECXNUTDP",13,0)
 N STOP,PAGENUM,LN,LTYPE
"RTN","ECXNUTDP",14,0)
 S (STOP,PAGENUM,LTYPE)=0,LN=""
"RTN","ECXNUTDP",15,0)
 K ^TMP($J)
"RTN","ECXNUTDP",16,0)
 F LTYPE="119.71","119.72" D  I STOP D EXIT Q
"RTN","ECXNUTDP",17,0)
 .D HEADER I STOP D EXIT Q
"RTN","ECXNUTDP",18,0)
 .D GETDATA
"RTN","ECXNUTDP",19,0)
 .I '$D(^TMP($J,"ECX",LTYPE)) D  Q
"RTN","ECXNUTDP",20,0)
 ..W !
"RTN","ECXNUTDP",21,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",22,0)
 ..W !,"*  NOTHING TO REPORT FOR "_$S(LTYPE=119.71:"PRODUCTION LOCATIONS",LTYPE=119.72:"DELIVERY LOCATIONS  ",1:"")_" *"
"RTN","ECXNUTDP",23,0)
 ..W !,"***********************************************"
"RTN","ECXNUTDP",24,0)
 ..D WAIT
"RTN","ECXNUTDP",25,0)
 .D DETAIL I STOP D EXIT Q
"RTN","ECXNUTDP",26,0)
 .D FOOTER I STOP D EXIT Q
"RTN","ECXNUTDP",27,0)
 .D WAIT Q:STOP
"RTN","ECXNUTDP",28,0)
 .K ^TMP($J)
"RTN","ECXNUTDP",29,0)
EXIT K ^TMP("ECXDSS",$J)
"RTN","ECXNUTDP",30,0)
 Q
"RTN","ECXNUTDP",31,0)
GETDATA ;Get data
"RTN","ECXNUTDP",32,0)
 ;Init variables
"RTN","ECXNUTDP",33,0)
 N DIV,IEN,PLIEN,IENS,LOCATION,CNT,PDIV,FILE
"RTN","ECXNUTDP",34,0)
 S (DIV,LOCATION,PDIV)="",(IEN,PLIEN,IENS,CNT)=0
"RTN","ECXNUTDP",35,0)
 S DIV="" F  S DIV=$O(^ECX(728.46,"B",DIV)) Q:DIV=""  D
"RTN","ECXNUTDP",36,0)
 . Q:LTYPE'=$E(DIV,6,11)
"RTN","ECXNUTDP",37,0)
 . S IEN=$O(^ECX(728.46,"B",DIV,0)) Q:'IEN  D
"RTN","ECXNUTDP",38,0)
 .. S PLIEN=$P(DIV,";",1),FILE=$E(DIV,6,11),CNT=$G(CNT)+1
"RTN","ECXNUTDP",39,0)
 .. I FILE'=LTYPE Q
"RTN","ECXNUTDP",40,0)
 .. S IENS=""_PLIEN_","_""
"RTN","ECXNUTDP",41,0)
 .. S LOCATION=$$GET1^DIQ(FILE,""_IENS_","_"",.01,"E")
"RTN","ECXNUTDP",42,0)
 .. S PDIV=$$GET1^DIQ(728.46,IEN,1,"I")
"RTN","ECXNUTDP",43,0)
 .. S PDIV=$$RADDIV^ECXDEPT(PDIV)
"RTN","ECXNUTDP",44,0)
 .. S ^TMP($J,"ECX",FILE)="1"
"RTN","ECXNUTDP",45,0)
 .. S ^TMP($J,"ECX",FILE,PLIEN)=PLIEN_U_LOCATION_U_PDIV
"RTN","ECXNUTDP",46,0)
 Q
"RTN","ECXNUTDP",47,0)
HEADER ;print header
"RTN","ECXNUTDP",48,0)
 N TYPE
"RTN","ECXNUTDP",49,0)
 S PAGENUM=$G(PAGENUM)+1
"RTN","ECXNUTDP",50,0)
 S $P(LN,"=",9)="",TYPE=$S(LTYPE=119.71:"PRODUCTION",LTYPE=119.72:"DELIVERY",1:"")
"RTN","ECXNUTDP",51,0)
 W @IOF
"RTN","ECXNUTDP",52,0)
 W ?1,"RUN DATE: ",$$FMTE^XLFDT(DT,"5H"),?70,"PAGE ",PAGENUM
"RTN","ECXNUTDP",53,0)
 W !,?23,"NUTRITION DIVISION WORKSHEET"
"RTN","ECXNUTDP",54,0)
 W !!,?27,TYPE_" LOCATIONS"
"RTN","ECXNUTDP",55,0)
 W:TYPE="DELIVERY" !!,?2,TYPE
"RTN","ECXNUTDP",56,0)
 W:TYPE="PRODUCTION" !!,?1,TYPE
"RTN","ECXNUTDP",57,0)
 W ?26,TYPE,?50,"ASSIGNED"
"RTN","ECXNUTDP",58,0)
 W !,?1,"LOCATION #",?26,"LOCATIONS",?50,"DIVISION"
"RTN","ECXNUTDP",59,0)
 W !,?1,LN_"===",?26,LN,LN,?47,LN,LN
"RTN","ECXNUTDP",60,0)
 Q
"RTN","ECXNUTDP",61,0)
 ;
"RTN","ECXNUTDP",62,0)
DETAIL ;Print detailed line
"RTN","ECXNUTDP",63,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXNUTDP",64,0)
 ;                    PLIEN    - File 119.71 or 119.72 IEN
"RTN","ECXNUTDP",65,0)
 ;                    LOCATION - File 119.71 or 119.72 NAME
"RTN","ECXNUTDP",66,0)
 ;                    DIVISION - Assigned production division
"RTN","ECXNUTDP",67,0)
 ;Output  : None
"RTN","ECXNUTDP",68,0)
 N FILE,NODE,PIEN
"RTN","ECXNUTDP",69,0)
 S FILE=0 F  S FILE=$O(^TMP($J,"ECX",FILE)) Q:'FILE!STOP  D
"RTN","ECXNUTDP",70,0)
 .S PIEN=0 F  S PIEN=$O(^TMP($J,"ECX",FILE,PIEN)) Q:'PIEN!STOP  D
"RTN","ECXNUTDP",71,0)
 ..S NODE=^TMP($J,"ECX",FILE,PIEN)
"RTN","ECXNUTDP",72,0)
 ..W !?3,$$RJ^XLFSTR($P(NODE,U),U,6),?26,$P(NODE,U,2),?50,$$RJ^XLFSTR($P(NODE,U,3),U,6)
"RTN","ECXNUTDP",73,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXNUTDP",74,0)
 ..Q
"RTN","ECXNUTDP",75,0)
 Q
"RTN","ECXNUTDP",76,0)
 ;
"RTN","ECXNUTDP",77,0)
WAIT ;End of page logic
"RTN","ECXNUTDP",78,0)
 ;Input   ; None
"RTN","ECXNUTDP",79,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXNUTDP",80,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXNUTDP",81,0)
 ;
"RTN","ECXNUTDP",82,0)
 S STOP=0
"RTN","ECXNUTDP",83,0)
 ;CRT - Prompt for continue
"RTN","ECXNUTDP",84,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXNUTDP",85,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXNUTDP",86,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXNUTDP",87,0)
 .S DIR(0)="E"
"RTN","ECXNUTDP",88,0)
 .D ^DIR
"RTN","ECXNUTDP",89,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXNUTDP",90,0)
 ;Background task - check taskman
"RTN","ECXNUTDP",91,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXNUTDP",92,0)
 I STOP D
"RTN","ECXNUTDP",93,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",94,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXNUTDP",95,0)
 .W !,"*********************************************"
"RTN","ECXNUTDP",96,0)
 Q
"RTN","ECXNUTDP",97,0)
FOOTER ;Print footer
"RTN","ECXNUTDP",98,0)
 N DIV,IEN
"RTN","ECXNUTDP",99,0)
 S DIV="",IEN=0
"RTN","ECXNUTDP",100,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",101,0)
 F  S DIV=$O(^DG(40.8,"B",DIV)) Q:DIV=""!STOP  D
"RTN","ECXNUTDP",102,0)
 .F  S IEN=$O(^DG(40.8,"B",DIV,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","ECXNUTDP",103,0)
 ..W !,?3,$$RJ^XLFSTR($$GETDIV^ECXDEPT(IEN),U,8)
"RTN","ECXNUTDP",104,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER,FHEADER
"RTN","ECXNUTDP",105,0)
 Q
"RTN","ECXNUTDP",106,0)
FHEADER ;Footer header
"RTN","ECXNUTDP",107,0)
 W !!!,?1,"INSTITUTION",!,"FILE/DIVISIONS",!,LN,LN
"RTN","ECXNUTDP",108,0)
 Q
"RTN","ECXNUTPE")
0^6^B4744677^n/a
"RTN","ECXNUTPE",1,0)
ECXNUTPE ;ALB/JRC - Nut Product Worksheet Edit ; 10/17/06 2:03pm
"RTN","ECXNUTPE",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUTPE",3,0)
 ;
"RTN","ECXNUTPE",4,0)
EN ;entry point from menu option
"RTN","ECXNUTPE",5,0)
 ;Declare variables
"RTN","ECXNUTPE",6,0)
 N STOP,DIC,DTOUT,DUOUT,Y,DA,SCREEN,CATEGORY,DIET,PRODUCT,CAT,FL,DLAYGO
"RTN","ECXNUTPE",7,0)
 S STOP=0
"RTN","ECXNUTPE",8,0)
 F  D  Q:STOP
"RTN","ECXNUTPE",9,0)
 .;Select diet category
"RTN","ECXNUTPE",10,0)
 .S DIC="^ECX(728.45,",DIC(0)="AEQMZL",DLAYGO=728.45
"RTN","ECXNUTPE",11,0)
 .D ^DIC
"RTN","ECXNUTPE",12,0)
 .I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",13,0)
 .W "  ",Y(0,0)
"RTN","ECXNUTPE",14,0)
 .S SCREEN=$E($P(Y(0,0)," "),1)_$E($P(Y(0,0)," ",2),1)
"RTN","ECXNUTPE",15,0)
 .S CATEGORY=$P(Y,U,2)
"RTN","ECXNUTPE",16,0)
 .S CAT=+Y
"RTN","ECXNUTPE",17,0)
 .S FL=Y(0)
"RTN","ECXNUTPE",18,0)
 .S FL=$S(FL="PD":116.2,FL="SF":118,FL="SO":118.3,FL="TF":118.2,1:"")
"RTN","ECXNUTPE",19,0)
 .F  D  Q:STOP
"RTN","ECXNUTPE",20,0)
 ..;Select category subentry
"RTN","ECXNUTPE",21,0)
 ..S DA(1)=CAT,DIC(0)="AEQMZL"
"RTN","ECXNUTPE",22,0)
 ..S DIC="^ECX(728.45,"_DA(1)_",1,"
"RTN","ECXNUTPE",23,0)
 ..S DIC("V")="I +Y(0)="_FL_""
"RTN","ECXNUTPE",24,0)
 ..D ^DIC
"RTN","ECXNUTPE",25,0)
 ..I ($D(DTOUT))!($D(DUOUT))!(Y<1) S STOP=1 Q
"RTN","ECXNUTPE",26,0)
 ..S DIET=$P(Y,U,2)
"RTN","ECXNUTPE",27,0)
 ..D CHOICES
"RTN","ECXNUTPE",28,0)
 ..Q:STOP
"RTN","ECXNUTPE",29,0)
 ..D UPDATE
"RTN","ECXNUTPE",30,0)
 Q
"RTN","ECXNUTPE",31,0)
 ;
"RTN","ECXNUTPE",32,0)
CHOICES ;Prepare CHOICES variable for DIR call
"RTN","ECXNUTPE",33,0)
 ;      Input - screen  (Required)
"RTN","ECXNUTPE",34,0)
 ;
"RTN","ECXNUTPE",35,0)
 ;      Output - Array of choices
"RTN","ECXNUTPE",36,0)
 ;               1  Regular
"RTN","ECXNUTPE",37,0)
 ;               2  Clear Liqs
"RTN","ECXNUTPE",38,0)
 ;Init variables
"RTN","ECXNUTPE",39,0)
 N CHOICES,OFF,TEXT,DSSCAT,DSSPRO,CNT,DIR,DIRUT,DUOUT,X,Y
"RTN","ECXNUTPE",40,0)
 S CHOICES=""
"RTN","ECXNUTPE",41,0)
 F OFF=1:1 S TEXT=$P($T(PRODUCTS+OFF^ECXNUTPP),";;",2) Q:TEXT="END"  D
"RTN","ECXNUTPE",42,0)
 .S DSSCAT=$P(TEXT,U),DSSPRO=$P(TEXT,U,2)
"RTN","ECXNUTPE",43,0)
 .Q:DSSCAT'=SCREEN
"RTN","ECXNUTPE",44,0)
 .S CNT=$G(CNT)+1
"RTN","ECXNUTPE",45,0)
 .S CHOICES=$G(CHOICES)_CNT_":"_DSSPRO_";"
"RTN","ECXNUTPE",46,0)
 S DIR(0)="S^"_CHOICES
"RTN","ECXNUTPE",47,0)
 S DIR("A")="Select DSS Assigned Product"
"RTN","ECXNUTPE",48,0)
 D ^DIR
"RTN","ECXNUTPE",49,0)
 I $D(DIRUT)!$D(DUOUT) D CHOICES S STOP=1 Q
"RTN","ECXNUTPE",50,0)
 S PRODUCT=Y(0)
"RTN","ECXNUTPE",51,0)
 Q
"RTN","ECXNUTPE",52,0)
 ;
"RTN","ECXNUTPE",53,0)
UPDATE ;Update file (#728.45) assigned product field
"RTN","ECXNUTPE",54,0)
 N ECXFDA,ECXERR
"RTN","ECXNUTPE",55,0)
 S ECXFDA(728.45,"?1,",.01)=CATEGORY
"RTN","ECXNUTPE",56,0)
 S ECXFDA(728.451,"?+2,?1,",.01)=DIET
"RTN","ECXNUTPE",57,0)
 S ECXFDA(728.451,"?+2,?1,",1)=PRODUCT
"RTN","ECXNUTPE",58,0)
 D UPDATE^DIE("","ECXFDA","","ECXERR")
"RTN","ECXNUTPE",59,0)
 I $D(ECXERR) D
"RTN","ECXNUTPE",60,0)
 .W !!!,"Problem encountered during record update "
"RTN","ECXNUTPE",61,0)
 .W !!,"Contact IRM"_"  Error: "_$G(ECXERR("DIERR",1,"TEXT",1))
"RTN","ECXNUTPE",62,0)
 Q
"RTN","ECXNUTPP")
0^7^B13036661^n/a
"RTN","ECXNUTPP",1,0)
ECXNUTPP ;ALB/JRC - Nut Production Worksheet Print ; 11/2/06 8:41am
"RTN","ECXNUTPP",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXNUTPP",3,0)
 ;
"RTN","ECXNUTPP",4,0)
EN ;entry point from option
"RTN","ECXNUTPP",5,0)
 ;Queue Report
"RTN","ECXNUTPP",6,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXNUTPP",7,0)
 S ZTIO=""
"RTN","ECXNUTPP",8,0)
 S ZTDESC="Nutrition Division Worksheet for DSS"
"RTN","ECXNUTPP",9,0)
 D EN^XUTMDEVQ("EN1^ECXNUTPP",ZTDESC,.ZTSAVE)
"RTN","ECXNUTPP",10,0)
 Q
"RTN","ECXNUTPP",11,0)
EN1 ;Tasked entry point
"RTN","ECXNUTPP",12,0)
 ;Declare variables
"RTN","ECXNUTPP",13,0)
 N STOP,PAGE,TDIET,TTDIET,LTYPE,LN
"RTN","ECXNUTPP",14,0)
 S (STOP,PAGE,LTYPE)=0,(TDIET)=""
"RTN","ECXNUTPP",15,0)
 K ^TMP($J)
"RTN","ECXNUTPP",16,0)
 F  S TDIET=$O(^ECX(728.45,"B",TDIET)) Q:TDIET=""!STOP  D
"RTN","ECXNUTPP",17,0)
 .S IEN=0,IEN=$O(^ECX(728.45,"B",TDIET,IEN))
"RTN","ECXNUTPP",18,0)
 .S TTDIET=$$GET1^DIQ(728.45,IEN,.01)
"RTN","ECXNUTPP",19,0)
 .D HEADER I STOP D EXIT Q
"RTN","ECXNUTPP",20,0)
 .D GETDATA I STOP D EXIT Q
"RTN","ECXNUTPP",21,0)
 .I '$O(^TMP($J,"ECX",0)) D  Q
"RTN","ECXNUTPP",22,0)
 ..W !
"RTN","ECXNUTPP",23,0)
 ..W !,"***********************************************************"
"RTN","ECXNUTPP",24,0)
 ..W !,"*  NOTHING TO REPORT FOR "_TTDIET_" CATEGORY",?58,"*"
"RTN","ECXNUTPP",25,0)
 ..W !,"***********************************************************"
"RTN","ECXNUTPP",26,0)
 ..D WAIT
"RTN","ECXNUTPP",27,0)
 .D DETAIL I STOP D EXIT Q
"RTN","ECXNUTPP",28,0)
 .D FOOTER I STOP D EXIT Q
"RTN","ECXNUTPP",29,0)
 .D WAIT I STOP D EXIT Q
"RTN","ECXNUTPP",30,0)
 .K ^TMP($J,"ECX")
"RTN","ECXNUTPP",31,0)
EXIT K ^TMP($J,"ECX")
"RTN","ECXNUTPP",32,0)
 Q
"RTN","ECXNUTPP",33,0)
GETDATA ;Get data
"RTN","ECXNUTPP",34,0)
 ;Init variables
"RTN","ECXNUTPP",35,0)
 N IEN,DIET,EDIET,DIEN,IENS,PRODUCT
"RTN","ECXNUTPP",36,0)
 S (IEN,DIET,EDIET,DIEN,IENS,PRODUCT)=""
"RTN","ECXNUTPP",37,0)
 F  S IEN=$O(^ECX(728.45,"B",TDIET,IEN)) Q:'IEN  F  S DIET=$O(^ECX(728.45,IEN,1,"B",DIET)) Q:DIET=""  F  S DIEN=$O(^ECX(728.45,IEN,1,"B",DIET,DIEN)) Q:'DIEN   D
"RTN","ECXNUTPP",38,0)
 .S IENS=""_DIEN_","_IEN_","_""
"RTN","ECXNUTPP",39,0)
 .S PRODUCT=$$GET1^DIQ(728.451,IENS,1,"E")
"RTN","ECXNUTPP",40,0)
 .S EDIET=$$GET1^DIQ(728.451,IENS,.01,"E")
"RTN","ECXNUTPP",41,0)
 .S ^TMP($J,"ECX",IEN)=""
"RTN","ECXNUTPP",42,0)
 .S ^TMP($J,"ECX",IEN,DIEN)=EDIET_U_PRODUCT
"RTN","ECXNUTPP",43,0)
 Q
"RTN","ECXNUTPP",44,0)
HEADER ;print header
"RTN","ECXNUTPP",45,0)
 S PAGE=$G(PAGE)+1
"RTN","ECXNUTPP",46,0)
 S $P(LN,"=",15)=""
"RTN","ECXNUTPP",47,0)
 W @IOF
"RTN","ECXNUTPP",48,0)
 W ?1,"RUN DATE: ",$$FMTE^XLFDT(DT,"5H"),?70,"PAGE ",PAGE
"RTN","ECXNUTPP",49,0)
 W !,?23,"NUTRITION PRODUCT WORKSHEET"
"RTN","ECXNUTPP",50,0)
 W !!,?27,TTDIET
"RTN","ECXNUTPP",51,0)
 W !!,?1,$P(TTDIET," ",1),?36,"ASSIGNED"
"RTN","ECXNUTPP",52,0)
 W !,?1,$P(TTDIET," ",2),?36,"PRODUCT"
"RTN","ECXNUTPP",53,0)
 W !,?1,LN,?36,LN
"RTN","ECXNUTPP",54,0)
 Q
"RTN","ECXNUTPP",55,0)
 ;
"RTN","ECXNUTPP",56,0)
DETAIL ;Print detailed line
"RTN","ECXNUTPP",57,0)
 ;Input  :  ^TMP("ECXDSS",$J) full global reference
"RTN","ECXNUTPP",58,0)
 ;                    DIET - File 116.2, 118, 118.2, 118.3, NAME
"RTN","ECXNUTPP",59,0)
 ;                    PRODUCT - Assigned DSS product
"RTN","ECXNUTPP",60,0)
 ;Output  : None
"RTN","ECXNUTPP",61,0)
 ;
"RTN","ECXNUTPP",62,0)
 N NUMBER,RECORD,NODE
"RTN","ECXNUTPP",63,0)
 S (NUMBER,RECORD)=0,NODE=""
"RTN","ECXNUTPP",64,0)
 F  S NUMBER=$O(^TMP($J,"ECX",NUMBER)) Q:'NUMBER!STOP  D
"RTN","ECXNUTPP",65,0)
 .F  S RECORD=$O(^TMP($J,"ECX",NUMBER,RECORD)) Q:'RECORD!STOP  D
"RTN","ECXNUTPP",66,0)
 ..S NODE=$G(^TMP($J,"ECX",NUMBER,RECORD))
"RTN","ECXNUTPP",67,0)
 ..W !,?1,$P(NODE,U),?36,$P(NODE,U,2)
"RTN","ECXNUTPP",68,0)
 ..I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXNUTPP",69,0)
 .Q
"RTN","ECXNUTPP",70,0)
 Q
"RTN","ECXNUTPP",71,0)
 ;
"RTN","ECXNUTPP",72,0)
WAIT ;End of page logic
"RTN","ECXNUTPP",73,0)
 ;Input   ; None
"RTN","ECXNUTPP",74,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXNUTPP",75,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXNUTPP",76,0)
 ;
"RTN","ECXNUTPP",77,0)
 S STOP=0
"RTN","ECXNUTPP",78,0)
 ;CRT - Prompt for continue
"RTN","ECXNUTPP",79,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXNUTPP",80,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXNUTPP",81,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXNUTPP",82,0)
 .S DIR(0)="E"
"RTN","ECXNUTPP",83,0)
 .D ^DIR
"RTN","ECXNUTPP",84,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXNUTPP",85,0)
 ;Background task - check taskman
"RTN","ECXNUTPP",86,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXNUTPP",87,0)
 I STOP D
"RTN","ECXNUTPP",88,0)
 .W !,"*********************************************"
"RTN","ECXNUTPP",89,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXNUTPP",90,0)
 .W !,"*********************************************"
"RTN","ECXNUTPP",91,0)
 Q
"RTN","ECXNUTPP",92,0)
 ;
"RTN","ECXNUTPP",93,0)
FOOTER ;Print footer
"RTN","ECXNUTPP",94,0)
 N SCREEN
"RTN","ECXNUTPP",95,0)
 S SCREEN=$E($P(TTDIET," ",1),1,1)_$E($P(TTDIET," ",2),1,1)
"RTN","ECXNUTPP",96,0)
 D FHEADER
"RTN","ECXNUTPP",97,0)
 D DSSPRO
"RTN","ECXNUTPP",98,0)
 Q
"RTN","ECXNUTPP",99,0)
 ;
"RTN","ECXNUTPP",100,0)
FHEADER ;Footer header
"RTN","ECXNUTPP",101,0)
 W !!!,?1,"DSS PRODUCTS",!,?1,LN
"RTN","ECXNUTPP",102,0)
 Q
"RTN","ECXNUTPP",103,0)
 ;
"RTN","ECXNUTPP",104,0)
DSSPRO ;DSS standardized products
"RTN","ECXNUTPP",105,0)
 N OFF,TEXT,DSSCAT,DSSPRO
"RTN","ECXNUTPP",106,0)
 F OFF=1:1 S TEXT=$P($T(PRODUCTS+OFF),";;",2) Q:TEXT="END"!STOP  D
"RTN","ECXNUTPP",107,0)
 .S DSSCAT=$P(TEXT,U),DSSPRO=$P(TEXT,U,2)
"RTN","ECXNUTPP",108,0)
 .Q:DSSCAT'=SCREEN
"RTN","ECXNUTPP",109,0)
 .W !,?1,DSSPRO
"RTN","ECXNUTPP",110,0)
 .I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER,FHEADER
"RTN","ECXNUTPP",111,0)
 Q
"RTN","ECXNUTPP",112,0)
 ;
"RTN","ECXNUTPP",113,0)
PRODUCTS ;Standardized assigned products for nutrition diets
"RTN","ECXNUTPP",114,0)
 ;;PD^REGULAR
"RTN","ECXNUTPP",115,0)
 ;;PD^FULL LIQS
"RTN","ECXNUTPP",116,0)
 ;;PD^CLEAR LIQS
"RTN","ECXNUTPP",117,0)
 ;;PD^PUREE DYSPH
"RTN","ECXNUTPP",118,0)
 ;;SF^SUPP FEED
"RTN","ECXNUTPP",119,0)
 ;;SF^SUPP FEED NC
"RTN","ECXNUTPP",120,0)
 ;;TF^TF LESS 1
"RTN","ECXNUTPP",121,0)
 ;;TF^TF MORE 1
"RTN","ECXNUTPP",122,0)
 ;;TF^TF MIX LESS 1
"RTN","ECXNUTPP",123,0)
 ;;TF^TF MIX MORE 1
"RTN","ECXNUTPP",124,0)
 ;;SO^ST ORDER
"RTN","ECXNUTPP",125,0)
 ;;SO^ST ORDER NC
"RTN","ECXNUTPP",126,0)
 ;;END
"RTN","ECXOPRX")
0^19^B47824586^B71625093
"RTN","ECXOPRX",1,0)
ECXOPRX ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 11/2/06 8:42am
"RTN","ECXOPRX",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,30,33,38,39,46,49,71,81,84,92**;Dec 22, 1997;Build 30
"RTN","ECXOPRX",3,0)
 ;
"RTN","ECXOPRX",4,0)
BEG ;entry point from option
"RTN","ECXOPRX",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXOPRX",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXOPRX",7,0)
 Q
"RTN","ECXOPRX",8,0)
 ;
"RTN","ECXOPRX",9,0)
START ;entry when queued
"RTN","ECXOPRX",10,0)
 N X,DA,DIC,DIQ,DR,ECXNPRFI,ECRXPTST,ECNONVAP,ECRXNUM,ECXSCRX
"RTN","ECXOPRX",11,0)
 S QFLG=0
"RTN","ECXOPRX",12,0)
 I '$D(ECINST) D
"RTN","ECXOPRX",13,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXOPRX",14,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXOPRX",15,0)
 ;before V6
"RTN","ECXOPRX",16,0)
 S ECPROF=6,ECD=$O(^PSRX("AL",0)) I ECD,ECD<ECSD1 G V6
"RTN","ECXOPRX",17,0)
 S ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",18,0)
 F  S ECD=$O(^PSRX("AD",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AD",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AD",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",19,0)
 Q
"RTN","ECXOPRX",20,0)
 ;
"RTN","ECXOPRX",21,0)
V6 ;version 6 or better
"RTN","ECXOPRX",22,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",23,0)
 S ECPROF=2,ECED=ECED+.3,ECREF=1,ECD=ECSD1
"RTN","ECXOPRX",24,0)
 F  S ECD=$O(^PSRX("AL",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AL",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AL",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",25,0)
 Q:QFLG
"RTN","ECXOPRX",26,0)
 S ECREF="P",ECD=ECSD1
"RTN","ECXOPRX",27,0)
 F  S ECD=$O(^PSRX("AM",ECD)),ECRX=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S ECRX=$O(^PSRX("AM",ECD,ECRX)),ECRFL="" Q:'ECRX  F  S ECRFL=$O(^PSRX("AM",ECD,ECRX,ECRFL)) Q:ECRFL=""  D STUFF Q:QFLG
"RTN","ECXOPRX",28,0)
 K ^TMP($J,"ECXP")
"RTN","ECXOPRX",29,0)
 Q
"RTN","ECXOPRX",30,0)
 ;
"RTN","ECXOPRX",31,0)
STUFF ;get data
"RTN","ECXOPRX",32,0)
 N ECXPHA
"RTN","ECXOPRX",33,0)
 S ECDATA=$G(^PSRX(ECRX,0)),ECXPHA=""
"RTN","ECXOPRX",34,0)
 I ECRFL S ECDATA1=$G(^PSRX(ECRX,ECREF,ECRFL,0)) I ECDATA1="" Q
"RTN","ECXOPRX",35,0)
 ;ecref set to 1 in extract+5 and v6+1 and to "P" in v6+2
"RTN","ECXOPRX",36,0)
 ;refill nodes and partial nodes are identical in layout.  Fills
"RTN","ECXOPRX",37,0)
 ;(ie ecrfl=0)& refills (ie ecrfl>0) from "AL" xref, partials from "AM"
"RTN","ECXOPRX",38,0)
 S (ECXDSSD,ECXPROVN,ECXCVE,ECXCVEDT,ECXCVENC,ECRXPTST,ECRXNUM)="",ECXERR=0,ECXDATE=ECD,ECXDFN=$P(ECDATA,U,2),ECDRG=+$P(ECDATA,U,6)
"RTN","ECXOPRX",39,0)
 ;- Get rx patient status & rx number
"RTN","ECXOPRX",40,0)
 S ECRXPTST=$$RXPTST^ECXUTL5($P(ECDATA,U,3)),ECRXNUM=$P(ECDATA,U,1)
"RTN","ECXOPRX",41,0)
 ;- Get provider (either 2_provider or 6_provider depending on version)
"RTN","ECXOPRX",42,0)
 S ECXPROV=$S($P(ECDATA,U,4)'="":ECPROF_$P(ECDATA,U,4),1:""),ECXPROVP=$$PRVCLASS^ECXUTL($P(ECDATA,U,4),ECXDATE)
"RTN","ECXOPRX",43,0)
 ;get classification data
"RTN","ECXOPRX",44,0)
 S ECXCLS=$G(^PSRX(ECRX,"IBQ")),ECXMIL=$P(ECXCLS,U,2),ECXAO=$P(ECXCLS,U,3),ECXIR=$P(ECXCLS,U,4),ECXECE=$P(ECXCLS,U,5),ECXHNC=$P(ECXCLS,U,6)
"RTN","ECXOPRX",45,0)
 F X="ECXMIL","ECXAO","ECXIR","ECXECE","ECXHNC" S @X=$S(@X:"Y",@X=0:"N",1:"")
"RTN","ECXOPRX",46,0)
 ;- Check non-va provider flag and set to 'Y' if exist
"RTN","ECXOPRX",47,0)
 S ECNONVAP=$$NONVAP^ECXUTL5($E(ECXPROV,2,99))
"RTN","ECXOPRX",48,0)
 ;get patient specific data
"RTN","ECXOPRX",49,0)
 D PAT(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXOPRX",50,0)
 I 'ECRFL D
"RTN","ECXOPRX",51,0)
 .S ECMW=$P(ECDATA,U,11),ECQTY=+$P(ECDATA,U,7),ECXDIV=$S($D(^PSRX(ECRX,2)):$P(^(2),U,9),1:1)
"RTN","ECXOPRX",52,0)
 .S ECPRC=+$P(ECDATA,U,17),ECOPAY=$P($G(^PSRX(ECRX,"IB")),U,2)]""
"RTN","ECXOPRX",53,0)
 I ECRFL D
"RTN","ECXOPRX",54,0)
 .S ECMW=$P(ECDATA1,U,2),ECQTY=+$P(ECDATA1,U,4),ECXDIV=$S(+$P(ECDATA1,U,9):$P(ECDATA1,U,9),1:1)
"RTN","ECXOPRX",55,0)
 .S ECPRC=+$P(ECDATA1,U,11),ECOPAY=$P($G(^PSRX(ECRX,1,ECRFL,"IB")),U)]""
"RTN","ECXOPRX",56,0)
 S ECXCOST=$J((ECQTY*ECPRC),1,2),ECDS=$S(ECRFL:$P(ECDATA1,U,10),1:$P(ECDATA,U,8))
"RTN","ECXOPRX",57,0)
 ;call pharmacy drug file (#50) api
"RTN","ECXOPRX",58,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG),ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)["I",ECINV=$S(ECINV:"I",1:""),ECUI=$P(ECXPHA,U,8),ECNDC=$P(ECXPHA,U,3)
"RTN","ECXOPRX",59,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0),P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXOPRX",60,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXOPRX",61,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXOPRX",62,0)
 I ECMW="M" S ECMW=1 I $D(^PSRX("AR",ECD,ECRX)) S ECMW=2
"RTN","ECXOPRX",63,0)
 I ECMW="W" S ECMW=""
"RTN","ECXOPRX",64,0)
 S ECXNEW="" I ECRFL=0 S ECXNEW=1
"RTN","ECXOPRX",65,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS) ;Observation pat indic (YES/NO)
"RTN","ECXOPRX",66,0)
 S ECXORDPH="" ;Ordering physician (null for FY2002)
"RTN","ECXOPRX",67,0)
 ;- Ordering stop code & Ordering date
"RTN","ECXOPRX",68,0)
 S ECXORDST=$P($G(^ECX(728.44,+$P(ECDATA,U,5),0)),U,2),ECXORDDT=$$ECXDATE^ECXUTL(+$P(ECDATA,U,13),ECXYM)
"RTN","ECXOPRX",69,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN) ;CNH status (YES/NO)
"RTN","ECXOPRX",70,0)
 ;- DSS Dept and National Prod Division
"RTN","ECXOPRX",71,0)
 ;S ECXDSSD=$$PRE^ECXDEPT(ECXDIV,ECMW,ECINST) dss department postponed
"RTN","ECXOPRX",72,0)
 N ECXPDIV S ECXPDIV=$$PREDIV^ECXDEPT(ECXDIV)
"RTN","ECXOPRX",73,0)
 ;- Set national patient record flag if exist
"RTN","ECXOPRX",74,0)
 D NPRF^ECXUTL5
"RTN","ECXOPRX",75,0)
 S ECXSCRX=$$SCRX^ECXUTL5(ECRX) ;Service connected rx
"RTN","ECXOPRX",76,0)
 ;- If no encounter number don't file record
"RTN","ECXOPRX",77,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXOPRX",78,0)
 I ECXLOGIC>2003 D
"RTN","ECXOPRX",79,0)
 .I (ECMW=2)!((ECMW=1)&(ECXLOGIC>2006)),ECXSSN'="" D
"RTN","ECXOPRX",80,0)
 ..N TMP S TMP=$$JULDT^ECXUTL4(ECD),ECXENC=$E(ECXSSN,1,9)_TMP_"160",ECXA="O"
"RTN","ECXOPRX",81,0)
 I ECXENC'="" D FILE^ECXOPRX1
"RTN","ECXOPRX",82,0)
 Q
"RTN","ECXOPRX",83,0)
 ;
"RTN","ECXOPRX",84,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;Determine in/outpatient status, movement number, primary care team and provider
"RTN","ECXOPRX",85,0)
 N OK,X,PT
"RTN","ECXOPRX",86,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXOPRX",87,0)
 ;get patient data if saved
"RTN","ECXOPRX",88,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXOPRX",89,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXSSN=$P(PT,U),ECXPNM=$P(PT,U,2),ECXMPI=$P(PT,U,3),ECXSEX=$P(PT,U,4),ECXDOB=$P(PT,U,5)
"RTN","ECXOPRX",90,0)
 .S ECXELIG=$P(PT,U,6),ECXVET=$P(PT,U,7),ECXRACE=$P(PT,U,8),ECXPST=$P(PT,U,9),ECXPLOC=$P(PT,U,10),ECXRST=$P(PT,U,11)
"RTN","ECXOPRX",91,0)
 .S ECXAST=$P(PT,U,12),ECXMST=$P(PT,U,13),ECXSTATE=$P(PT,U,14),ECXCNTY=$P(PT,U,15),ECXZIP=$P(PT,U,16),ECXENRL=$P(PT,U,17)
"RTN","ECXOPRX",92,0)
 .S ECXPHI=$P(PT,U,20),ECXCAT=$P(PT,U,21),ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23)
"RTN","ECXOPRX",93,0)
 .S ECXCNHU=$P(PT,U,24),ECXPOS=$P(PT,U,25),ECXAOL=$P(PT,U,26),ECXHNCI=$P(PT,U,27),ECXETH=$P(PT,U,28),ECXRC1=$P(PT,U,29),ECXMTST=$P(PT,U,30)
"RTN","ECXOPRX",94,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2)
"RTN","ECXOPRX",95,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",96,0)
 ;set patient data
"RTN","ECXOPRX",97,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXOPRX",98,0)
 .K ECXPAT
"RTN","ECXOPRX",99,0)
 .S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD1,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXOPRX",100,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXOPRX",101,0)
 .S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI"),ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXOPRX",102,0)
 .S ECXVET=ECXPAT("VET"),ECXRACE=ECXPAT("RACE"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXOPRX",103,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXOPRX",104,0)
 .S ECXERI=ECXPAT("ERI"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXOPRX",105,0)
 .;- CNH Stat (placeholder),Purp Heart Ind,Per of Svce,AO Loc,MT Stat
"RTN","ECXOPRX",106,0)
 .S ECXCNHU="",ECXPHI=ECXPAT("PHI"),ECXPOS=ECXPAT("POS"),ECXAOL=ECXPAT("AOL"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXOPRX",107,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXOPRX",108,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXOPRX",109,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1") ;Race and Ethnicity
"RTN","ECXOPRX",110,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXSSN_U_ECXPNM_U_ECXMPI_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U
"RTN","ECXOPRX",111,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXPHI_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXCNHU_U_ECXPOS_U_ECXAOL_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXOPRX",112,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST
"RTN","ECXOPRX",113,0)
 ;get inpatient data
"RTN","ECXOPRX",114,0)
 S (ECXA,ECXADMDT,ECXDOM,ECXMN,ECXTS)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE) D
"RTN","ECXOPRX",115,0)
 .S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXOPRX",116,0)
 ;get primary care data
"RTN","ECXOPRX",117,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,".")),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXOPRX",118,0)
 Q
"RTN","ECXOPRX",119,0)
 ;
"RTN","ECXOPRX",120,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXOPRX",121,0)
 S ECHEAD="PRE"
"RTN","ECXOPRX",122,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXOPRX",123,0)
 Q
"RTN","ECXOPRX",124,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXOPRX",125,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXOPRX1")
0^32^B7057662^n/a
"RTN","ECXOPRX1",1,0)
ECXOPRX1 ;ALB/JAP,BIR/DMA,CML,PTD-Prescription Extract for DSS ; 11/2/06 8:43am
"RTN","ECXOPRX1",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXOPRX1",3,0)
 ;
"RTN","ECXOPRX1",4,0)
FILE ;file record
"RTN","ECXOPRX1",5,0)
 ;node0
"RTN","ECXOPRX1",6,0)
 ;inst^dfn^ssn^name^in/out ECXA^day^division^provider^drug category^mail^
"RTN","ECXOPRX1",7,0)
 ;placeholder1^new^placeholder2^qty^cost^placeholder3^mov #^treat spec^placeholder4^unit of issue^dob^elig^vet^copay^
"RTN","ECXOPRX1",8,0)
 ;feeder key^investigational^days supply^primary care team^primary care provider^time^race
"RTN","ECXOPRX1",9,0)
 ;node1
"RTN","ECXOPRX1",10,0)
 ;mpi^dss dept ECXDSSD^sex^zip+4^provider npi^pc provider npi^state^county^pc prov person class^pow status^pow location^
"RTN","ECXOPRX1",11,0)
 ;ir status^ao status^sharing agree. payor^sharing agree. ins.^mst status^enroll loc^assoc pc provider^assoc pc prov person class^
"RTN","ECXOPRX1",12,0)
 ;assoc pc prov npi^dom ECXDOM^purple heart ECXPHI^enrollment category ECXCAT^enrollment status ECXSTST^
"RTN","ECXOPRX1",13,0)
 ;enrollment priority ECXPRIOR^cnhu status ECXCNHU^period of service ECXPOS^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXOPRX1",14,0)
 ;ao loc ECXAOL^ord physician ECXORDPH^ord stop code ECXORDST^ord date ECXORDDT^CNH status ECXCNH^national division ECXPDIV^
"RTN","ECXOPRX1",15,0)
 ;MT Stat ECXMTST^head & neck cancer ind. ECXHNCI^ethnicity ECXETH^race ECXRC1^^enrollment priority ECXPRIOR_
"RTN","ECXOPRX1",16,0)
 ;enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXOPRX1",17,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^rx patient status ECRXPTST^non-va prescriber ECNONVAP^rx # ECRXNUM
"RTN","ECXOPRX1",18,0)
 ;^emergency response indicator(FEMA) ECXERI^agent orange enc ECXAO^environ cont PGE ECXECE^head/neck ECXHNC^enc mst ECXMIL^environ contamin ECXEST^ion radiat ECXIR
"RTN","ECXOPRX1",19,0)
 N DA,DIK
"RTN","ECXOPRX1",20,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXOPRX1",21,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXOPRX1",22,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXDIV_U
"RTN","ECXOPRX1",23,0)
 S ECODE=ECODE_ECXPROV_U_ECCAT_U_ECMW_U_ECXPROVP_U_ECXNEW_U_U_ECQTY_U
"RTN","ECXOPRX1",24,0)
 S ECODE=ECODE_ECXCOST_U_U_ECXMN_U_ECXTS_U_U_ECUI_U_ECXDOB_U
"RTN","ECXOPRX1",25,0)
 S ECODE=ECODE_ECXELIG_U_ECXVET_U_ECOPAY_U_ECNFC_U_ECINV_U_ECDS_U
"RTN","ECXOPRX1",26,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U_$$ECXTIME^ECXUTL(ECXDATE)_U_ECXRACE_U
"RTN","ECXOPRX1",27,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U_ECXPROVN_U_ECPTNPI_U
"RTN","ECXOPRX1",28,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECCLAS_U_ECXPST_U_ECXPLOC_U
"RTN","ECXOPRX1",29,0)
 S ECODE1=ECODE1_ECXRST_U_ECXAST_U_U_U_ECXMST_U_ECXENRL_U
"RTN","ECXOPRX1",30,0)
 S ECODE1=ECODE1_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXPHI_U_ECXCAT_U
"RTN","ECXOPRX1",31,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXPOS_U_ECXOBS_U
"RTN","ECXOPRX1",32,0)
 S ECODE1=ECODE1_ECXENC_U_ECXAOL_U_ECXORDPH_U_ECXORDST_U_ECXORDDT_U
"RTN","ECXOPRX1",33,0)
 S ECODE1=ECODE1_ECXCNH_U_ECXPDIV_U_ECXMTST_U_ECXHNCI_U_ECXETH_U
"RTN","ECXOPRX1",34,0)
 S ECODE1=ECODE1_ECXRC1_U
"RTN","ECXOPRX1",35,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U
"RTN","ECXOPRX1",36,0)
 I ECXLOGIC>2004 S ECODE2=ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI_U_ECRXPTST_U_ECNONVAP
"RTN","ECXOPRX1",37,0)
 I ECXLOGIC>2005 S ECODE2=ECODE2_U_ECRXNUM
"RTN","ECXOPRX1",38,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXEST_U_ECXIR_U_ECXSCRX
"RTN","ECXOPRX1",39,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXOPRX1",40,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXOPRX1",41,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXOPRX1",42,0)
 Q
"RTN","ECXPHAA")
0^31^B42962189^n/a
"RTN","ECXPHAA",1,0)
ECXPHAA ;ALB/JRC Pharmacy DSS Extract UDP/IVP Source Audit Report ; 11/2/06 8:54am
"RTN","ECXPHAA",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXPHAA",3,0)
 ;
"RTN","ECXPHAA",4,0)
EN ;entry point from option
"RTN","ECXPHAA",5,0)
 N SCRNARR,STOP,REPORT,DIVISION,SDATE,EDATE,X,TMP
"RTN","ECXPHAA",6,0)
 S SCRNARR="^TMP($J,""ECXPHAA"")",STOP=0
"RTN","ECXPHAA",7,0)
 K @SCRNARR
"RTN","ECXPHAA",8,0)
 S STOP=0
"RTN","ECXPHAA",9,0)
 ;Select report
"RTN","ECXPHAA",10,0)
 D REPORT  Q:STOP
"RTN","ECXPHAA",11,0)
 ;Select division
"RTN","ECXPHAA",12,0)
 D DIVISION  Q:STOP
"RTN","ECXPHAA",13,0)
 ;Select date range
"RTN","ECXPHAA",14,0)
 D DATES  Q:STOP
"RTN","ECXPHAA",15,0)
 ;Queue Report
"RTN","ECXPHAA",16,0)
 N ZTDESC,ZTIO,ZTSAVE
"RTN","ECXPHAA",17,0)
 F X="REPORT","SDATE","EDATE","STOP" S ZTSAVE(X)=""
"RTN","ECXPHAA",18,0)
 S ZTSAVE("SCRNARR")=""
"RTN","ECXPHAA",19,0)
 S TMP=$$OREF^DILF(SCRNARR)
"RTN","ECXPHAA",20,0)
 S ZTSAVE(TMP)=""
"RTN","ECXPHAA",21,0)
 I $D(@SCRNARR)#2 S ZTSAVE(SCRNARR)=""
"RTN","ECXPHAA",22,0)
 S ZTIO=""
"RTN","ECXPHAA",23,0)
 S ZTDESC="DSS UDP/IVP Source Audit Report"
"RTN","ECXPHAA",24,0)
 D EN^XUTMDEVQ("EN1^ECXPHAA",ZTDESC,.ZTSAVE)
"RTN","ECXPHAA",25,0)
 Q
"RTN","ECXPHAA",26,0)
 ;
"RTN","ECXPHAA",27,0)
EN1 ;Init variables
"RTN","ECXPHAA",28,0)
 N PAGE,LN,SUB
"RTN","ECXPHAA",29,0)
 S SUB="",PAGE=0
"RTN","ECXPHAA",30,0)
 D HEADER I STOP D EXIT Q
"RTN","ECXPHAA",31,0)
 S SUB=$S(REPORT=1:"GETUDATA",REPORT=2:"GETIDATA",1:"")
"RTN","ECXPHAA",32,0)
 D @SUB I STOP D EXIT Q
"RTN","ECXPHAA",33,0)
 I '$O(^TMP($J,"ECXPHAA",0)) D  Q
"RTN","ECXPHAA",34,0)
 .W !
"RTN","ECXPHAA",35,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",36,0)
 .W !,"*  NOTHING TO REPORT FOR PHARMACY "_$S(REPORT=1:"UDP",REPORT=2:"IVP",1:"")_" SOURCE AUDIT REPORT  *"
"RTN","ECXPHAA",37,0)
 .W !,"************************************************************"
"RTN","ECXPHAA",38,0)
 .D WAIT
"RTN","ECXPHAA",39,0)
 .D EXIT
"RTN","ECXPHAA",40,0)
 D DETAIL I STOP D EXIT Q
"RTN","ECXPHAA",41,0)
EXIT K @SCRNARR Q
"RTN","ECXPHAA",42,0)
 ;
"RTN","ECXPHAA",43,0)
REPORT ;Select report
"RTN","ECXPHAA",44,0)
 N DIR,DIRUT,DUOUT
"RTN","ECXPHAA",45,0)
 ;Prepare choices
"RTN","ECXPHAA",46,0)
 S DIR(0)="S^1:UDP;2:IVP"
"RTN","ECXPHAA",47,0)
 S DIR("A")="Select Source Audit Report"
"RTN","ECXPHAA",48,0)
 D ^DIR
"RTN","ECXPHAA",49,0)
 I $D(DIRUT)!$D(DUOUT) S STOP=1 Q
"RTN","ECXPHAA",50,0)
 S REPORT=Y
"RTN","ECXPHAA",51,0)
 Q
"RTN","ECXPHAA",52,0)
 ;
"RTN","ECXPHAA",53,0)
DIVISION ;Prompt for division
"RTN","ECXPHAA",54,0)
 ; Set Divisions into screen array (prompt is one/many/all)
"RTN","ECXPHAA",55,0)
 ;Input  : SCRNARR - Screen array full global reference
"RTN","ECXPHAA",56,0)
 ;Output : 1 = OK     0 = User abort/timeout
"RTN","ECXPHAA",57,0)
 ;         @SCRNARR@("DIVISION") = User pick all divisions ?
"RTN","ECXPHAA",58,0)
 ;           1 = Yes (all)     0 = No
"RTN","ECXPHAA",59,0)
 ;         @SCRNARR@("DIVISION",PtrDiv) = Division name
"RTN","ECXPHAA",60,0)
 ;Note   : @SCRNARR@("DIVISION") is initialized (KILLed) on input
"RTN","ECXPHAA",61,0)
 ;       : @SCRNARR@("DIVISION",PtrDiv) is only set when the user
"RTN","ECXPHAA",62,0)
 ;         picked individual divisions (i.e. didn't pick all)
"RTN","ECXPHAA",63,0)
 ;
"RTN","ECXPHAA",64,0)
 ;Declare variables
"RTN","ECXPHAA",65,0)
 N VAUTD,Y,DIV,FAC
"RTN","ECXPHAA",66,0)
 ;Get division selection
"RTN","ECXPHAA",67,0)
 D DIVISION^VAUTOMA
"RTN","ECXPHAA",68,0)
 I Y<0 S STOP=1 Q
"RTN","ECXPHAA",69,0)
 M @SCRNARR@("DIVISION")=VAUTD
"RTN","ECXPHAA",70,0)
 I VAUTD=0 D
"RTN","ECXPHAA",71,0)
 .S DIV=0 F  S DIV=$O(VAUTD(DIV)) Q:DIV'>0  S FAC=$$GETDIV^ECXDEPT(DIV) S @SCRNARR@("DIVISION",FAC)=""
"RTN","ECXPHAA",72,0)
 Q
"RTN","ECXPHAA",73,0)
 ;
"RTN","ECXPHAA",74,0)
DATES ;Prompt for start date
"RTN","ECXPHAA",75,0)
 N DIR,DIRUT,X,Y
"RTN","ECXPHAA",76,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",77,0)
 S DIR("A")="Enter Report Start Date"
"RTN","ECXPHAA",78,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",79,0)
 D ^DIR
"RTN","ECXPHAA",80,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",81,0)
 S SDATE=Y
"RTN","ECXPHAA",82,0)
 ;Prompt for end date
"RTN","ECXPHAA",83,0)
 K DIR,DIRUT,X,Y
"RTN","ECXPHAA",84,0)
 S DIR(0)="D^:NOW:EX"
"RTN","ECXPHAA",85,0)
 S DIR("A")="Enter Report End Date"
"RTN","ECXPHAA",86,0)
 S DIR("B")=$$FMTE^XLFDT($$NOW^XLFDT,"1D")
"RTN","ECXPHAA",87,0)
 D ^DIR
"RTN","ECXPHAA",88,0)
 I $D(DIRUT) S STOP=1 Q
"RTN","ECXPHAA",89,0)
 S EDATE=Y
"RTN","ECXPHAA",90,0)
 Q
"RTN","ECXPHAA",91,0)
 ;
"RTN","ECXPHAA",92,0)
HEADER ;Print header
"RTN","ECXPHAA",93,0)
 S PAGE=$G(PAGE)+1,$P(LN,"=",80)=""
"RTN","ECXPHAA",94,0)
 W @IOF
"RTN","ECXPHAA",95,0)
 W !,$S(REPORT=1:"UDP",REPORT=2:"IVP",1:"")_" Source Audit Report",?70,"PAGE: "_PAGE
"RTN","ECXPHAA",96,0)
 W !!,"Run Date:   "_$$FMTE^XLFDT(DT)
"RTN","ECXPHAA",97,0)
 W !!,"Start Date: "_$$FMTE^XLFDT(SDATE)
"RTN","ECXPHAA",98,0)
 W !,"End Date:   "_$$FMTE^XLFDT(EDATE)
"RTN","ECXPHAA",99,0)
 W !!,?1,"Division",?24,"Date",?39,"Record Count"
"RTN","ECXPHAA",100,0)
 W !,LN
"RTN","ECXPHAA",101,0)
 Q
"RTN","ECXPHAA",102,0)
 ;
"RTN","ECXPHAA",103,0)
GETIDATA ;Get data from pharmacy IVP intermediate files
"RTN","ECXPHAA",104,0)
 ;Init variables
"RTN","ECXPHAA",105,0)
 N DATE,FILE,DFN,ERROR,ON,DA,ECPAT,EC
"RTN","ECXPHAA",106,0)
 S DATE=SDATE-.1,EDATE=EDATE+.999,FILE=728.113
"RTN","ECXPHAA",107,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>EDATE)  D  Q:STOP
"RTN","ECXPHAA",108,0)
 .S DFN=0 F  S DFN=$O(^ECX(FILE,"A",DATE,DFN)) Q:'DFN  D  Q:STOP
"RTN","ECXPHAA",109,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",110,0)
 ..S ERROR=0 D PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",111,0)
 ..S ON=0 F  S ON=$O(^ECX(FILE,"A",DATE,DFN,ON)) Q:'ON  D  Q:STOP
"RTN","ECXPHAA",112,0)
 ...S DA=0 F  S DA=$O(^ECX(FILE,"A",DATE,DFN,ON,DA)) Q:'DA!(STOP)  D  Q:STOP
"RTN","ECXPHAA",113,0)
 ....I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:STOP
"RTN","ECXPHAA",114,0)
 .....;get inpatient data if exist
"RTN","ECXPHAA",115,0)
 .....N X,STATUS,MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC
"RTN","ECXPHAA",116,0)
 .....N DIC,DIQ,DR,ECXDIC,DA
"RTN","ECXPHAA",117,0)
 .....S (X,STATUS,MOVEMENT,ADMIT,SPECIAL,WARD,DIVISION,CLINIC)=""
"RTN","ECXPHAA",118,0)
 .....S X=$$INP^ECXUTL2(DFN,DATE),STATUS=$P(X,U,1)
"RTN","ECXPHAA",119,0)
 .....I STATUS="I" D  Q:STOP
"RTN","ECXPHAA",120,0)
 ......S WARD=$P(X,U,9),DIVISION=$$GETDIV^ECXDEPT($P(WARD,";",2))
"RTN","ECXPHAA",121,0)
 .....I STATUS="O" D  Q:STOP
"RTN","ECXPHAA",122,0)
 ......;Get division from  outpatient location file 44
"RTN","ECXPHAA",123,0)
 ......S CLINIC=+$P(EC,U,13)
"RTN","ECXPHAA",124,0)
 ......S DIC="^SC(",DIQ(0)="I",DIQ="ECXDIC",DR="3",DA=CLINIC
"RTN","ECXPHAA",125,0)
 ......D EN^DIQ1
"RTN","ECXPHAA",126,0)
 ......S DIVISION=$$RADDIV^ECXDEPT(+$G(ECXDIC(44,CLINIC,3,"I")))
"RTN","ECXPHAA",127,0)
 ......S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN")
"RTN","ECXPHAA",128,0)
 .....;Save in temp global and filter division
"RTN","ECXPHAA",129,0)
 .....I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",130,0)
 .....S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",131,0)
 Q
"RTN","ECXPHAA",132,0)
 ;
"RTN","ECXPHAA",133,0)
GETUDATA ;Get unit dose data from intermediate file 728.904
"RTN","ECXPHAA",134,0)
 ;Init variables
"RTN","ECXPHAA",135,0)
 N DATE,FILE,RECORD,DATA,DFN,ERROR,ON,WARD,DIVISION,X,STATUS,DIC,DIQ,DR,DA,ECPAT,CLINIC,CNT,FACILITY,L
"RTN","ECXPHAA",136,0)
 S DATE=SDATE-.1,EDATE=EDATE+.999,STOP=0
"RTN","ECXPHAA",137,0)
 S FILE=728.904
"RTN","ECXPHAA",138,0)
 F  S DATE=$O(^ECX(FILE,"A",DATE)) Q:'DATE!(DATE>EDATE)  D  Q:STOP
"RTN","ECXPHAA",139,0)
 .S RECORD=0 F  S RECORD=$O(^ECX(FILE,"A",DATE,RECORD)) Q:'RECORD  D  Q:STOP
"RTN","ECXPHAA",140,0)
 ..S DATA=$G(^ECX(FILE,RECORD,0)),DFN=$P(DATA,U,2)
"RTN","ECXPHAA",141,0)
 ..;Filter out test patients or bad records
"RTN","ECXPHAA",142,0)
 ..S ERROR=0 D PAT^ECXNUT(DFN) Q:ERROR
"RTN","ECXPHAA",143,0)
 ..S ON=$P(DATA,U,10),WARD=$P(DATA,U,6)
"RTN","ECXPHAA",144,0)
 ..S DIVISION=$$GETDIV^ECXDEPT($P($G(^DIC(42,+WARD,0)),U,11))
"RTN","ECXPHAA",145,0)
 ..S FACILITY=$P($G(^DIC(42,+WARD,0)),U,11)
"RTN","ECXPHAA",146,0)
 ..S X=$$INP^ECXUTL2(DFN,DATE),STATUS=$P(X,U,1)
"RTN","ECXPHAA",147,0)
 ..I STATUS="O"&(ON) D  Q:STOP
"RTN","ECXPHAA",148,0)
 ...;Get division from  outpatient location from file 44
"RTN","ECXPHAA",149,0)
 ...S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=DFN
"RTN","ECXPHAA",150,0)
 ...S DA(55.06)=+ON D EN^DIQ1
"RTN","ECXPHAA",151,0)
 ...S CLINIC=+$G(ECXDIC(55.06,DFN,130,"I"))
"RTN","ECXPHAA",152,0)
 ...S DIVISION=$$RADDIV^ECXDEPT($G(ECXDIC(44,CLINIC,3,"I")))
"RTN","ECXPHAA",153,0)
 ...S DIVISION=$S(DIVISION'="":DIVISION,1:"UNKNOWN")
"RTN","ECXPHAA",154,0)
 ..;Save in temp global and filter division
"RTN","ECXPHAA",155,0)
 ..I '@SCRNARR@("DIVISION")=1&'($D(@SCRNARR@("DIVISION",DIVISION))) Q
"RTN","ECXPHAA",156,0)
 ..S ^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION)=$G(^TMP($J,"ECXPHAA",$P(DATE,".",1),DIVISION))+1
"RTN","ECXPHAA",157,0)
 Q
"RTN","ECXPHAA",158,0)
 ;
"RTN","ECXPHAA",159,0)
DETAIL ;Print report
"RTN","ECXPHAA",160,0)
 ;Init variables
"RTN","ECXPHAA",161,0)
 N DATE,DIV,CNT
"RTN","ECXPHAA",162,0)
 S (DATE,CNT)=0,DIV=""
"RTN","ECXPHAA",163,0)
 F  S DATE=$O(^TMP($J,"ECXPHAA",DATE)) Q:'DATE!(STOP)  F  S DIV=$O(^TMP($J,"ECXPHAA",DATE,DIV)) Q:DIV=""  S CNT=^(DIV) W !,?1,DIV,?20,$$FMTE^XLFDT(DATE),?45,CNT I $Y>(IOSL-5) D WAIT Q:STOP  D HEADER
"RTN","ECXPHAA",164,0)
 Q
"RTN","ECXPHAA",165,0)
 ;
"RTN","ECXPHAA",166,0)
WAIT ;End of page logic
"RTN","ECXPHAA",167,0)
 ;Input   ; None
"RTN","ECXPHAA",168,0)
 ;Output  ; STOP - Flag indicating if printing should continue
"RTN","ECXPHAA",169,0)
 ;                 1 = Stop     0 = Continue
"RTN","ECXPHAA",170,0)
 ;
"RTN","ECXPHAA",171,0)
 S STOP=0
"RTN","ECXPHAA",172,0)
 ;CRT - Prompt for continue
"RTN","ECXPHAA",173,0)
 I $E(IOST,1,2)="C-"&(IOSL'>24) D  Q
"RTN","ECXPHAA",174,0)
 .F  Q:$Y>(IOSL-3)  W !
"RTN","ECXPHAA",175,0)
 .N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","ECXPHAA",176,0)
 .S DIR(0)="E"
"RTN","ECXPHAA",177,0)
 .D ^DIR
"RTN","ECXPHAA",178,0)
 .S STOP=$S(Y'=1:1,1:0)
"RTN","ECXPHAA",179,0)
 ;Background task - check taskman
"RTN","ECXPHAA",180,0)
 S STOP=$$S^%ZTLOAD()
"RTN","ECXPHAA",181,0)
 I STOP D
"RTN","ECXPHAA",182,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",183,0)
 .W !,"*  PRINTING OF REPORT STOPPED AS REQUESTED  *"
"RTN","ECXPHAA",184,0)
 .W !,"*********************************************"
"RTN","ECXPHAA",185,0)
 Q
"RTN","ECXPHAU")
0^28^B8648371^n/a
"RTN","ECXPHAU",1,0)
ECXPHAU ;ALB/JAM - Print Pharmacy Volume Edit Log (IVP,PRE,UDP) ; 11/2/06 8:54am
"RTN","ECXPHAU",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXPHAU",3,0)
EN ;entry point from option
"RTN","ECXPHAU",4,0)
 ;Init variables and sort array
"RTN","ECXPHAU",5,0)
 N QFLG,SORT,ECXX,ECXNAM,ECSD,ECED
"RTN","ECXPHAU",6,0)
 ;
"RTN","ECXPHAU",7,0)
 S QFLG=0
"RTN","ECXPHAU",8,0)
 W !!,"This option prints a log of the changes made to the Pharmacy"
"RTN","ECXPHAU",9,0)
 W !,"Extracts: PRE, IVP or UDP",!
"RTN","ECXPHAU",10,0)
 ;
"RTN","ECXPHAU",11,0)
 ;Get Extract
"RTN","ECXPHAU",12,0)
 D EXTRT Q:QFLG
"RTN","ECXPHAU",13,0)
 ;Get sort
"RTN","ECXPHAU",14,0)
 D GETSORT Q:QFLG
"RTN","ECXPHAU",15,0)
 W !!,"** REPORT REQUIRES 132 COLUMNS TO PRINT CORRECTLY **"
"RTN","ECXPHAU",16,0)
 D DTRNG Q:QFLG
"RTN","ECXPHAU",17,0)
 D PRINT
"RTN","ECXPHAU",18,0)
 Q
"RTN","ECXPHAU",19,0)
EXTRT ;Prompt for extract to report on
"RTN","ECXPHAU",20,0)
 N DIR,DIRUT
"RTN","ECXPHAU",21,0)
 S DIR(0)="SO^P:PRE;I:IVP;U:UDP"
"RTN","ECXPHAU",22,0)
 S DIR("A")="Which extract log do you need?"
"RTN","ECXPHAU",23,0)
 D ^DIR I $D(DIRUT) S QFLG=1 Q
"RTN","ECXPHAU",24,0)
 S ECXX=Y,ECXNAM=Y(0)
"RTN","ECXPHAU",25,0)
 Q
"RTN","ECXPHAU",26,0)
GETSORT ;Prompt for sorting order for report
"RTN","ECXPHAU",27,0)
 N DIR,X,Y,DIRUT
"RTN","ECXPHAU",28,0)
 S DIR(0)="SO^1:USER NAME;2:DATE CHANGED"
"RTN","ECXPHAU",29,0)
 S DIR("A")="Select sort for Pharmacy Volume Edit Log",DIR("B")=1
"RTN","ECXPHAU",30,0)
 D ^DIR
"RTN","ECXPHAU",31,0)
 I $D(DIRUT) S QFLG=1 Q
"RTN","ECXPHAU",32,0)
 S SORT=Y
"RTN","ECXPHAU",33,0)
 Q
"RTN","ECXPHAU",34,0)
PRINT ;Print report using fileman EN1^DIP for IVP
"RTN","ECXPHAU",35,0)
 N L,DIR,DIC,DIA,FLDS,DHD,BY,FR,TO,DIOBEG,ECXFIL,PG,ECXFLG
"RTN","ECXPHAU",36,0)
 S ECXFIL=$S(ECXX="P":"727.81",ECXX="I":"727.819",1:"727.809"),ECXFLG=0
"RTN","ECXPHAU",37,0)
 S L=0,DIC="^DIA("_ECXFIL_",",DIOBEG="I $E(IOST,1,2)=""C-"" W @IOF"
"RTN","ECXPHAU",38,0)
 S FLDS=".04;L23,.02;C25;L20,.01;C47;L14,D EXTNOI^ECXPHAU;C62;L9,"
"RTN","ECXPHAU",39,0)
 S FLDS=FLDS_"1.1;C74;L15,2;C90;L19,3;C110;L15"
"RTN","ECXPHAU",40,0)
 S DHD="W ?0 D RPTHDR^ECXPHAU"
"RTN","ECXPHAU",41,0)
 I SORT=1 D
"RTN","ECXPHAU",42,0)
 .S BY=".04,.02",FR="A,"_ECSD,TO="Zz,"_ECED
"RTN","ECXPHAU",43,0)
 I SORT=2 D
"RTN","ECXPHAU",44,0)
 .S BY=".02,.04",FR=ECSD_",A",TO=ECED_",Zz"
"RTN","ECXPHAU",45,0)
 D EN1^DIP
"RTN","ECXPHAU",46,0)
 I 'ECXFLG,'$D(^DIA(ECXFIL)) D
"RTN","ECXPHAU",47,0)
 .W !,"NO RECORDS FOUND"
"RTN","ECXPHAU",48,0)
 .I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR
"RTN","ECXPHAU",49,0)
 Q
"RTN","ECXPHAU",50,0)
 ;
"RTN","ECXPHAU",51,0)
EXTNOI ;Extract Number
"RTN","ECXPHAU",52,0)
 I $G(X) W $P($G(^ECX(ECXFIL,+X,0)),"^",3)
"RTN","ECXPHAU",53,0)
 Q
"RTN","ECXPHAU",54,0)
RPTHDR ;report header
"RTN","ECXPHAU",55,0)
 N LN
"RTN","ECXPHAU",56,0)
 S PG=$G(PG)+1,ECXFLG=1
"RTN","ECXPHAU",57,0)
 W "PHARMACY VOLUME EDIT LOG FOR "_ECXNAM,?115,"Page ",PG,!
"RTN","ECXPHAU",58,0)
 W "Printed on ",$$HTE^XLFDT($H)," for ",ECSD," to ",ECED,!
"RTN","ECXPHAU",59,0)
 W "USER NAME",?24,"DATE/TIME CHANGED",?46,"SEQUENCE #",?61
"RTN","ECXPHAU",60,0)
 W "EXTRACT #",?73,"FIELD NAME",?89,"OLD VALUE",?109,"NEW VALUE",!
"RTN","ECXPHAU",61,0)
 S $P(LN,"-",130)="" W LN,!
"RTN","ECXPHAU",62,0)
 Q
"RTN","ECXPHAU",63,0)
DTRNG ;report date range
"RTN","ECXPHAU",64,0)
 N %DT,ECDT,X,Y
"RTN","ECXPHAU",65,0)
DTREP S %DT="AEX",%DT("A")="Starting with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPHAU",66,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPHAU",67,0)
 S ECDT=Y,ECSD=$$FMTE^XLFDT(Y,2)
"RTN","ECXPHAU",68,0)
 S %DT="AEX",%DT("A")="Ending with Date: ",%DT(0)="-NOW" D ^%DT
"RTN","ECXPHAU",69,0)
 I Y<0 S QFLG=1 Q
"RTN","ECXPHAU",70,0)
 I Y<ECDT D  G DTREP
"RTN","ECXPHAU",71,0)
 .W !!,"The ending date cannot be earlier than the starting date.",!
"RTN","ECXPHAU",72,0)
 I $E(Y,1,5)'=$E(ECDT,1,5) D  G DTREP
"RTN","ECXPHAU",73,0)
 .W !!,"Beginning and ending dates must be in the same month and year.",!
"RTN","ECXPHAU",74,0)
 S ECED=$$FMTE^XLFDT(Y,2)
"RTN","ECXPHAU",75,0)
 Q
"RTN","ECXPHVE")
0^27^B4185725^n/a
"RTN","ECXPHVE",1,0)
ECXPHVE ;ALB/JAM - Pharmacy Volume Edit ; 7/10/06 3:00pm
"RTN","ECXPHVE",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXPHVE",3,0)
 ;
"RTN","ECXPHVE",4,0)
EN ;entry point from menu option
"RTN","ECXPHVE",5,0)
 N DIR,DIRUT,ECXX,Y,STOP,ECPIECE
"RTN","ECXPHVE",6,0)
 N $ESTACK,$ETRAP S $ETRAP="D RESET^ECXPHVE"
"RTN","ECXPHVE",7,0)
 S DIR(0)="SO^P:PRE;I:IVP;U:UDP"
"RTN","ECXPHVE",8,0)
 S DIR("A")="Which extract do you need to edit?"
"RTN","ECXPHVE",9,0)
 D ^DIR I $D(DIRUT) Q
"RTN","ECXPHVE",10,0)
 S ECXX=Y(0),ECPIECE=$S(ECXX="PRE":2,ECXX="IVP":19,1:8)
"RTN","ECXPHVE",11,0)
 S STOP=0 I $P($G(^ECX(728,1,7.1)),"^",ECPIECE)]"" D  I STOP Q
"RTN","ECXPHVE",12,0)
 .W !!,ECXX," Extract running, cannot edit. Try later.",!! S STOP=1
"RTN","ECXPHVE",13,0)
 .K DIR S DIR(0)="E" D ^DIR
"RTN","ECXPHVE",14,0)
 S $P(^ECX(728,1,7.1),"^",ECPIECE)="R"
"RTN","ECXPHVE",15,0)
 D EXTEDT
"RTN","ECXPHVE",16,0)
 Q
"RTN","ECXPHVE",17,0)
 ;
"RTN","ECXPHVE",18,0)
EXTEDT ;Edit extracts - PRE, IVP, or UDP
"RTN","ECXPHVE",19,0)
 N DIC,DIE,DA,DR,DTOUT,DUOUT,Y,D
"RTN","ECXPHVE",20,0)
 S DIC(0)="AENMQZ",DIC("S")="I $$CKREC^ECXPHVE($P(^(0),""^"",3))"
"RTN","ECXPHVE",21,0)
 S DIC("A")="Select "_ECXX_" EXTRACT OR SEQUENCE NUMBER: "
"RTN","ECXPHVE",22,0)
 ;PRE extract (file #727.1) edit Quantity (field #16) & Unit of Issue (field #22)
"RTN","ECXPHVE",23,0)
 I ECXX="PRE" D
"RTN","ECXPHVE",24,0)
 .S DIC="^ECX(727.81,",DR="16;22"
"RTN","ECXPHVE",25,0)
 .D TURNON^DIAUTL(727.81,"16;22","y")
"RTN","ECXPHVE",26,0)
 ;IVP extract (file #727.819) edit Quantity (field #10)
"RTN","ECXPHVE",27,0)
 I ECXX="IVP" D
"RTN","ECXPHVE",28,0)
 .S DIC="^ECX(727.819,",DR="10"
"RTN","ECXPHVE",29,0)
 .D TURNON^DIAUTL(727.819,"10","y")
"RTN","ECXPHVE",30,0)
 ;UDP extract (file #727.809) edit Quantity (field #10)
"RTN","ECXPHVE",31,0)
 I ECXX="UDP" D
"RTN","ECXPHVE",32,0)
 .S DIC="^ECX(727.809,",DR="10"
"RTN","ECXPHVE",33,0)
 .D TURNON^DIAUTL(727.809,"10","y")
"RTN","ECXPHVE",34,0)
 F  D  D MIX^DIC1 Q:($D(DTOUT))!($D(DUOUT))!(Y<1)  S DIE=DIC,DA=+Y D ^DIE
"RTN","ECXPHVE",35,0)
 .S D="AC^B"
"RTN","ECXPHVE",36,0)
 .S DIC("W")="W ?30,""  "",$P(^(0),U,2),""  "",?45,$P(^(0),U,3),""  "",?55,$$GET1^DIQ(2,+$P(^(0),U,5),.01,""E"")"
"RTN","ECXPHVE",37,0)
RESET I $G(ECXX)="" Q
"RTN","ECXPHVE",38,0)
 I ECXX="PRE" D TURNON^DIAUTL(727.81,"16;22","e")
"RTN","ECXPHVE",39,0)
 I ECXX="IVP" D TURNON^DIAUTL(727.819,"10","e")
"RTN","ECXPHVE",40,0)
 I ECXX="UDP" D TURNON^DIAUTL(727.809,"10","e")
"RTN","ECXPHVE",41,0)
 I $G(ECPIECE) S $P(^ECX(728,1,7.1),"^",ECPIECE)=""
"RTN","ECXPHVE",42,0)
 Q
"RTN","ECXPHVE",43,0)
CKREC(ECXN) ;Checks if record should be edited.
"RTN","ECXPHVE",44,0)
 I ECXN="" Q 0
"RTN","ECXPHVE",45,0)
 I $G(^ECX(727,ECXN,"PURG"))'="" Q 0
"RTN","ECXPHVE",46,0)
 I $G(^ECX(727,ECXN,"TR"))'="" Q 0
"RTN","ECXPHVE",47,0)
 I $G(^ECX(727,ECXN,"Q"))'="" Q 0
"RTN","ECXPHVE",48,0)
 Q 1
"RTN","ECXPIVDN")
0^16^B62997730^B64318986
"RTN","ECXPIVDN",1,0)
ECXPIVDN ;ALB/JAP,BIR/DMA,CML,PTD-Extract from IV EXTRACT DATA File (#728.113) ; 11/2/06 8:55am
"RTN","ECXPIVDN",2,0)
 ;;3.0;DSS EXTRACTS;**10,11,8,13,24,33,39,46,49,71,84,96,92**;Dec 22, 1997;Build 30
"RTN","ECXPIVDN",3,0)
START ; start package specific extract
"RTN","ECXPIVDN",4,0)
 N DIC,DA,DR,DIQ,DFN,ECXNPRFI,ECXPHA
"RTN","ECXPIVDN",5,0)
 S QFLG=0
"RTN","ECXPIVDN",6,0)
 I '$D(ECINST) D
"RTN","ECXPIVDN",7,0)
 .S ECINST=+$P(^ECX(728,1,0),U) K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPIVDN",8,0)
 .D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPIVDN",9,0)
 S ECED=ECED+.3
"RTN","ECXPIVDN",10,0)
 K ^TMP($J,"A"),^TMP($J,"S")
"RTN","ECXPIVDN",11,0)
 S ECD=ECSD1
"RTN","ECXPIVDN",12,0)
 F  S ECD=$O(^ECX(728.113,"A",ECD)),DFN=0 Q:'ECD  Q:ECD>ECED  Q:QFLG  F  S DFN=$O(^ECX(728.113,"A",ECD,DFN)),ON=0  Q:'DFN  F  S ON=$O(^ECX(728.113,"A",ECD,DFN,ON)),DA=0 Q:'ON  K ^TMP($J,"A"),^TMP($J,"S") S ECVOL=0 D  Q:QFLG
"RTN","ECXPIVDN",13,0)
 .S ECXERR=0 D PAT(DFN,ECD,.ECXERR)
"RTN","ECXPIVDN",14,0)
 .Q:ECXERR
"RTN","ECXPIVDN",15,0)
 .F  S DA=$O(^ECX(728.113,"A",ECD,DFN,ON,DA)) Q:'DA  Q:QFLG  I $D(^ECX(728.113,DA,0)) S EC=^(0) D  Q:QFLG
"RTN","ECXPIVDN",16,0)
 ..S DRG=$P(EC,U,4) I $P(EC,U,8)]"" D
"RTN","ECXPIVDN",17,0)
 ...I '$D(^TMP($J,"A",DRG)) S ^(DRG)=$P(EC,U,7,8),^(DRG,1)=0,^(2)=$P(EC,U,12)
"RTN","ECXPIVDN",18,0)
 ...S ^(1)=^TMP($J,"A",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",19,0)
 ..I $P(EC,U,9) D
"RTN","ECXPIVDN",20,0)
 ...I '$D(^TMP($J,"S",DRG)) S ^(DRG)=$P(EC,U,9)_"^ML",^(DRG,1)=0,^(2)=$P(EC,U,12),ECVOL=$P(EC,U,9)+ECVOL
"RTN","ECXPIVDN",21,0)
 ...S ^(1)=^TMP($J,"S",DRG,1)+$S($P(EC,U,6)=1:1,$P(EC,U,6)=4:0,1:-1)
"RTN","ECXPIVDN",22,0)
 ..S ECTYP=$P(EC,U,11),ECTOTC=0,ECDTTM=$$ECXTIME^ECXUTL($P(EC,U,5))
"RTN","ECXPIVDN",23,0)
 .;looped thru all DAs for this order - now put it together
"RTN","ECXPIVDN",24,0)
 .;leave the next line in case the decision is made to send volume designations
"RTN","ECXPIVDN",25,0)
 .;I ECTYP="H" S ECTYP=ECTYP_$S(ECVOL'>1000:1,ECVOL'>2000:2,1:3)
"RTN","ECXPIVDN",26,0)
 .S ECXDSSI=""
"RTN","ECXPIVDN",27,0)
 .;loop thru tmp global and call pharmacy drug file (#50) api
"RTN","ECXPIVDN",28,0)
 .F SA="S","A" S DRG="" F  S DRG=$O(^TMP($J,SA,DRG)) Q:DRG=""  S ECXPHA="",ECXPHA=$$PHAAPI^ECXUTL5(DRG) I $P(ECXPHA,U)'="" D STUFF Q:QFLG
"RTN","ECXPIVDN",29,0)
 K ^TMP($J),CLIN,DA,DFN,DIC,DIK,DRG,ON,SA,X,Y,P1,P3
"RTN","ECXPIVDN",30,0)
 Q
"RTN","ECXPIVDN",31,0)
STUFF ;get data
"RTN","ECXPIVDN",32,0)
 N ECORDST
"RTN","ECXPIVDN",33,0)
 S ECST=^TMP($J,SA,DRG),ECXCNT=^(DRG,1),ECXCOST=^(2),ECXCOST=ECXCOST*ECXCNT,ECVACL=$P(ECXPHA,U,2),ECORDST=""
"RTN","ECXPIVDN",34,0)
 ;if outpatient get division from iv rm; get dss identifier for clinic
"RTN","ECXPIVDN",35,0)
 I ECXA="O" D
"RTN","ECXPIVDN",36,0)
 .;- Only set ward to .5 if outpatient (but NOT observation patient)
"RTN","ECXPIVDN",37,0)
 .I $G(ECXW)="" S ECXW=.5
"RTN","ECXPIVDN",38,0)
 .I $P(EC,U,15) S ECIVRM=$P(EC,U,15),ECXDIV=$$PSJ59P5^ECXUTL5(ECIVRM)
"RTN","ECXPIVDN",39,0)
 .S CLIN=+$P(EC,U,13),(ECXP1,ECXP2)="000",ECXCL=$G(^ECX(728.44,CLIN,0)) Q:ECXCL=""
"RTN","ECXPIVDN",40,0)
 .S ECSC=$P(ECXCL,U,4),ECCSC=$P(ECXCL,U,5)
"RTN","ECXPIVDN",41,0)
 .I ECSC="" S ECSC=$P(ECXCL,U,2),ECCSC=$P(ECXCL,U,3)
"RTN","ECXPIVDN",42,0)
 .I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXPIVDN",43,0)
 .I ECSC="" S ECSC=$P($G(^SC(ECXCL,0)),U,7),ECCSC=$P($G(^SC(ECXCL,0)),U,18) I ECSC D
"RTN","ECXPIVDN",44,0)
 ..S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC]"" ECXP2=$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXPIVDN",45,0)
 ..S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXPIVDN",46,0)
 .S ECXDSSI=ECXP1_ECXP2
"RTN","ECXPIVDN",47,0)
 .I ECXLOGIC>2003 D
"RTN","ECXPIVDN",48,0)
 ..I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECXDSSI=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXPIVDN",49,0)
 S ECINV=$P(ECXPHA,U,4),ECINV=$S(ECINV["I":"I",1:""),ECST=ECXCNT*ECST_" "_$P(ECST,U,2)
"RTN","ECXPIVDN",50,0)
 S ECNDC=$P(ECXPHA,U,3),ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXPIVDN",51,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6)
"RTN","ECXPIVDN",52,0)
 S X="PSNAPIS" X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXPIVDN",53,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXPIVDN",54,0)
 ;- Ordering provider ("2"_provider)
"RTN","ECXPIVDN",55,0)
 S ECXORDPR=$S(+$P(EC,U,10):"2"_$P(EC,U,10),1:""),ECXOPNPI=""
"RTN","ECXPIVDN",56,0)
 S ECXORDDT=$P(EC,U,16) ;- Ordering date
"RTN","ECXPIVDN",57,0)
 ;- Requesting physician (null for FY2002)
"RTN","ECXPIVDN",58,0)
 S ECXRPHY=""
"RTN","ECXPIVDN",59,0)
 ;- Department and National Prod Division
"RTN","ECXPIVDN",60,0)
 S ECXDSSD="" ;dss department use postponed $$IVP^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",61,0)
 N ECXPDIV S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXPIVDN",62,0)
 ;- Observation patient indicator (yes/no)
"RTN","ECXPIVDN",63,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXDSSI)
"RTN","ECXPIVDN",64,0)
 ; - Ordering Date, Ordering Stop Code
"RTN","ECXPIVDN",65,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXPIVDN",66,0)
 .S ECXORDST=$$DOIVPO^ECXUTL5(DFN,ON)
"RTN","ECXPIVDN",67,0)
 .I ECXOBS="NO" S ECORDST="160"
"RTN","ECXPIVDN",68,0)
 .I ECXOBS="YES" S ECORDST=$P($G(^ECX(727.831,+ECXTS,0)),U,6)
"RTN","ECXPIVDN",69,0)
 ;- If no encounter number don't file record
"RTN","ECXPIVDN",70,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,ECD,ECXTS,ECXOBS,ECHEAD,ECORDST,)
"RTN","ECXPIVDN",71,0)
 ;get BCMA data
"RTN","ECXPIVDN",72,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXPIVDN",73,0)
 ;get ordering provider person class
"RTN","ECXPIVDN",74,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXORDPR,2,999),ECXORDDT)
"RTN","ECXPIVDN",75,0)
 ;set national patient record flag if exist
"RTN","ECXPIVDN",76,0)
 S ECXDFN=DFN D NPRF^ECXUTL5 K ECXDFN
"RTN","ECXPIVDN",77,0)
 D:ECXENC'="" FILE K P1,P3
"RTN","ECXPIVDN",78,0)
 Q
"RTN","ECXPIVDN",79,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get patient demographics, primary care, and inpatient data
"RTN","ECXPIVDN",80,0)
 N X
"RTN","ECXPIVDN",81,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXPIVDN",82,0)
 ;get patient data if saved
"RTN","ECXPIVDN",83,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXPIVDN",84,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXPIVDN",85,0)
 .S ECXDOB=$P(PT,U,4),ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6),ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXPIVDN",86,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12),ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXPIVDN",87,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18),ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXPIVDN",88,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24),ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXPIVDN",89,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2)
"RTN","ECXPIVDN",90,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",91,0)
 ;set patient data
"RTN","ECXPIVDN",92,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXPIVDN",93,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXPIVDN",94,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXPIVDN",95,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXPIVDN",96,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXPIVDN",97,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXPIVDN",98,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL"),ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXPIVDN",99,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS"),ECXEST=ECXPAT("EC STAT")
"RTN","ECXPIVDN",100,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN) ;get CNHU status
"RTN","ECXPIVDN",101,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXPIVDN",102,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXPIVDN",103,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN) ;Head and Neck Cancer Indicator
"RTN","ECXPIVDN",104,0)
 .; - Race and Ethnicity
"RTN","ECXPIVDN",105,0)
 .S ECXETH=ECXPAT("ETHNIC"),ECXRC1=ECXPAT("RACE1")
"RTN","ECXPIVDN",106,0)
 .S ECXERI=ECXPAT("ERI") ;emergency response indicator (FEMA)
"RTN","ECXPIVDN",107,0)
 .;save for later
"RTN","ECXPIVDN",108,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXPIVDN",109,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXPIVDN",110,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST
"RTN","ECXPIVDN",111,0)
 ;get primary care data
"RTN","ECXPIVDN",112,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXPIVDN",113,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXPIVDN",114,0)
 ;get inpatient data
"RTN","ECXPIVDN",115,0)
 S (ECXA,ECXMN,ECXADM,ECXTS,ECXW,ECXDIV)="",X=$$INP^ECXUTL2(ECXDFN,ECXDATE)
"RTN","ECXPIVDN",116,0)
 S ECXA=$P(X,U),ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),W=$P(X,U,9),ECXDOM=$P(X,U,10),ECXW=$P(W,";"),ECXDIV=$P(W,";",2)
"RTN","ECXPIVDN",117,0)
 Q
"RTN","ECXPIVDN",118,0)
FILE ;file record
"RTN","ECXPIVDN",119,0)
 ;node0
"RTN","ECXPIVDN",120,0)
 ;fac^dfn^ssn^name^i/o^day^va class^qty^ward^cost^movement #^treat spec^ndc^investigational^iv dispensing fee^new feeder key^total doses^
"RTN","ECXPIVDN",121,0)
 ;primary care team^primary care provider^ivp time^adm date^adm time^dss identifier
"RTN","ECXPIVDN",122,0)
 ;node1
"RTN","ECXPIVDN",123,0)
 ;mpi^dss dept^pc provider npi^pc prov person class^assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^obs pat ind^enc num^
"RTN","ECXPIVDN",124,0)
 ;ord pr^ordering stop code^ord dt^req phys^nat prod division^means tst^elig^dob^sex^state^county^zip+4^vet^period of svc^pow stat^pow loc^ir stat^ao stat^
"RTN","ECXPIVDN",125,0)
 ;ao loc^purple heart ind.^mst stat^enrollment loc^enrollment cat^enrollment stat^enrollment prior^cnh/sh stat^ord pr npi
"RTN","ECXPIVDN",126,0)
 ;node2
"RTN","ECXPIVDN",127,0)
 ;head & neck cancer ind.^ethnicity^race1^bcma drug dispensed^bcma dose given^bcma unit of administration^bcma ICU flag^
"RTN","ECXPIVDN",128,0)
 ;ordering provider person class^^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig ECXCVE^
"RTN","ECXPIVDN",129,0)
 ;combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) ECXERI^
"RTN","ECXPIVDN",130,0)
 ;environ contamin ECXEST
"RTN","ECXPIVDN",131,0)
 N DA,DIK
"RTN","ECXPIVDN",132,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPIVDN",133,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_DFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPIVDN",134,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECVACL_U_ECXCNT_U_ECXW_U
"RTN","ECXPIVDN",135,0)
 S ECODE=ECODE_ECXCOST_U_ECXMN_U_ECXTS_U_ECNDC_U_ECINV_U_ECTYP_U_ECNFC_U
"RTN","ECXPIVDN",136,0)
 S ECODE=ECODE_ECST_U_ECPTTM_U_ECPTPR_U_ECDTTM_U_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U_$$ECXTIME^ECXUTL(ECXADM)_U_ECXDSSI_U
"RTN","ECXPIVDN",137,0)
 ;if outpat and not observ patient, admit date="" and admit time="000000"
"RTN","ECXPIVDN",138,0)
 I ECXA="O",(ECXOBS="NO") S $P(ECODE,U,24)="",$P(ECODE,U,25)="000000"
"RTN","ECXPIVDN",139,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDPR_U
"RTN","ECXPIVDN",140,0)
 S ECODE1=ECODE1_ECXORDST_U_$$ECXDATE^ECXUTL(ECXORDDT,ECXYM)_U_ECXRPHY_U_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U
"RTN","ECXPIVDN",141,0)
 S ECODE1=ECODE1_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXPIVDN",142,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCAT_U
"RTN","ECXPIVDN",143,0)
 S ECODE1=ECODE1_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXCNHU_U_ECXOPNPI_U
"RTN","ECXPIVDN",144,0)
 S ECODE2=ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXPIVDN",145,0)
 I ECXLOGIC>2003 D
"RTN","ECXPIVDN",146,0)
 .S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXPIVDN",147,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPIVDN",148,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXPIVDN",149,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXPIVDN",150,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXPIVDN",151,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXPIVDN",152,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPIVDN",153,0)
 Q
"RTN","ECXPIVDN",154,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPIVDN",155,0)
 S ECHEAD="IVP"
"RTN","ECXPIVDN",156,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPIVDN",157,0)
 ;variables ecver and ecrtn will be reset in routine ecxtrac if appropriate
"RTN","ECXPIVDN",158,0)
 S ECVER=7
"RTN","ECXPIVDN",159,0)
 Q
"RTN","ECXPIVDN",160,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPIVDN",161,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXPLBB")
0^33^B18084926^B18243786
"RTN","ECXPLBB",1,0)
ECXPLBB ;DALOI/KML - DSS BLOOD BANK PRE-EXTRACT AUDIT REPORT ; 8/14/06 10:10am
"RTN","ECXPLBB",2,0)
 ;;3.0;DSS EXTRACTS;**78,92**;Dec 22, 1997;Build 30
"RTN","ECXPLBB",3,0)
 ;Per VHA Directive 97-033 this routine should not be modified.  Medical Device # BK970021
"RTN","ECXPLBB",4,0)
 ;entry point from option
"RTN","ECXPLBB",5,0)
 D SETUP^ECXLBB I ECFILE="" Q
"RTN","ECXPLBB",6,0)
 N ECXINST
"RTN","ECXPLBB",7,0)
 D DATES
"RTN","ECXPLBB",8,0)
 Q:ECED']""&(ECSD']"")
"RTN","ECXPLBB",9,0)
 N ECXPOP S ECXPOP=0 D QUE Q:ECXPOP
"RTN","ECXPLBB",10,0)
 ;
"RTN","ECXPLBB",11,0)
START ;  entry point from tasked job
"RTN","ECXPLBB",12,0)
 ; get LAB DATA and build temporary global ^TMP("ECXLBB",$J)
"RTN","ECXPLBB",13,0)
 N ECTRSP,ECADMT,ECTODT,ECXRPT,ECOUT,ECXSTR,ECRDT,ECLINE,ECPG,ECQUIT
"RTN","ECXPLBB",14,0)
 N ECD,ECXDFN,ECARRY,EC66,ECERR,ECTRFDT,ECTRFTM,ECX,ECINOUT,ECXJOB
"RTN","ECXPLBB",15,0)
 N ECXLOGIC
"RTN","ECXPLBB",16,0)
 S ECXJOB=$J
"RTN","ECXPLBB",17,0)
 K ^TMP("ECXLBB",ECXJOB)
"RTN","ECXPLBB",18,0)
 U IO
"RTN","ECXPLBB",19,0)
 I $E(IOST,1,2)="C-" W !,"Retrieving records... "
"RTN","ECXPLBB",20,0)
 S ECXRPT=1 D AUDRPT^ECXLBB
"RTN","ECXPLBB",21,0)
OUTPUT ; entry point called by EN tag
"RTN","ECXPLBB",22,0)
 I '$D(^TMP("ECXLBB",ECXJOB)) W !,"There were no records that met the date range criteria" Q
"RTN","ECXPLBB",23,0)
 S (ECPG,ECDATE,ECQUIT,ECXDFN)=0,ECLINE="",$P(ECLINE,"=",80)="="
"RTN","ECXPLBB",24,0)
 S ECSDN=$$FMTE^XLFDT(ECSD,9),ECEDN=$$FMTE^XLFDT(ECED,9),ECRDT=$$FMTE^XLFDT(DT,9)
"RTN","ECXPLBB",25,0)
 W:$E(IOST,1,2)="C-" @IOF D HED
"RTN","ECXPLBB",26,0)
 F  S ECXDFN=$O(^TMP("ECXLBB",ECXJOB,ECXDFN)) Q:'ECXDFN  F  S ECDATE=$O(^TMP("ECXLBB",ECXJOB,ECXDFN,ECDATE))  Q:'ECDATE  Q:ECQUIT  S ECXSTR=^(ECDATE) D PRINT
"RTN","ECXPLBB",27,0)
 D ^ECXKILL
"RTN","ECXPLBB",28,0)
 Q
"RTN","ECXPLBB",29,0)
 ;
"RTN","ECXPLBB",30,0)
PRINT ;
"RTN","ECXPLBB",31,0)
 I $Y+5>IOSL D  Q:ECQUIT
"RTN","ECXPLBB",32,0)
 . I $E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECQUIT=1 Q
"RTN","ECXPLBB",33,0)
 . W @IOF D HED
"RTN","ECXPLBB",34,0)
 W !,$P(ECXSTR,"^",5),?11,$P(ECXSTR,"^",4),?26,$P(ECXSTR,"^",16)
"RTN","ECXPLBB",35,0)
 W ?37,$$FMTE^XLFDT($$HL7TFM^XLFDT($P(ECXSTR,"^",8)),2)
"RTN","ECXPLBB",36,0)
 W ?49,$P(ECXSTR,"^",11),?60,$J(+$P(ECXSTR,"^",12),2)
"RTN","ECXPLBB",37,0)
 Q
"RTN","ECXPLBB",38,0)
 ;
"RTN","ECXPLBB",39,0)
HED ;
"RTN","ECXPLBB",40,0)
 S ECPG=ECPG+1
"RTN","ECXPLBB",41,0)
 W !,"LBB Pre-Extract Audit Report",?72,"Page",$J(ECPG,3)
"RTN","ECXPLBB",42,0)
 W !,ECSDN," - ",ECEDN,?58,"Run Date:",$J(ECRDT,12)
"RTN","ECXPLBB",43,0)
 W !,?37,"Transf",?57,"Number"
"RTN","ECXPLBB",44,0)
 W !,"Name",?14,"SSN",?25,"FDR LOC",?37,"Date",?49,"COMP"
"RTN","ECXPLBB",45,0)
 W ?57,"of Units"
"RTN","ECXPLBB",46,0)
 W !,ECLINE
"RTN","ECXPLBB",47,0)
 Q
"RTN","ECXPLBB",48,0)
DATES ;
"RTN","ECXPLBB",49,0)
 N OUT,CHKFLG
"RTN","ECXPLBB",50,0)
 I '$D(ECNODE) S ECNODE=7
"RTN","ECXPLBB",51,0)
 I '$D(ECHEAD) S ECHEAD=" "
"RTN","ECXPLBB",52,0)
 W @IOF,!,"LBB Pre-Extract Audit Report Information for DSS",!!
"RTN","ECXPLBB",53,0)
 S:'$D(ECINST) ECINST=+$P(^ECX(728,1,0),U)
"RTN","ECXPLBB",54,0)
 S ECXINST=ECINST
"RTN","ECXPLBB",55,0)
 K ECXDIC S DA=ECINST,DIC="^DIC(4,",DIQ(0)="I",DIQ="ECXDIC",DR=".01;99"
"RTN","ECXPLBB",56,0)
 D EN^DIQ1 S ECINST=$G(ECXDIC(4,DA,99,"I")) K DIC,DIQ,DA,DR,ECXDIC
"RTN","ECXPLBB",57,0)
 S ECLDT=$S($D(^ECX(728,1,ECNODE)):$P(^(ECNODE),U,ECPIECE),1:2610624)
"RTN","ECXPLBB",58,0)
 S:ECLDT="" ECLDT=2610624
"RTN","ECXPLBB",59,0)
 S ECOUT=0 F  S (ECED,ECSD)="" D  Q:ECOUT
"RTN","ECXPLBB",60,0)
 . K %DT S %DT="AEX",%DT("A")="Starting with Date: " D ^%DT
"RTN","ECXPLBB",61,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",62,0)
 . S ECSD=Y
"RTN","ECXPLBB",63,0)
 . K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT
"RTN","ECXPLBB",64,0)
 . I Y<0 S ECOUT=1 Q
"RTN","ECXPLBB",65,0)
 . I Y<ECSD W !!,"The ending date cannot be earlier than the starting date.",!,"Please try again.",!! Q
"RTN","ECXPLBB",66,0)
 . I $E(Y,1,5)'=$E(ECSD,1,5) W !!,"Beginning and ending dates must be in the same month and year.",!,"Please try again.",!! Q
"RTN","ECXPLBB",67,0)
 . S ECED=Y
"RTN","ECXPLBB",68,0)
 . I ECLDT'<ECSD W !!,"The Blood Bank information has already been extracted through ",$$FMTE^XLFDT(ECLDT),".",!,"Please enter a new date range.",!! Q
"RTN","ECXPLBB",69,0)
 . S ECOUT=1
"RTN","ECXPLBB",70,0)
 Q
"RTN","ECXPLBB",71,0)
 ;
"RTN","ECXPLBB",72,0)
QUE ;
"RTN","ECXPLBB",73,0)
 K ZTSAVE
"RTN","ECXPLBB",74,0)
 S ECSDN=$$FMTE^XLFDT(ECSD),ECEDN=$$FMTE^XLFDT(ECED),ECSD1=ECSD-.1
"RTN","ECXPLBB",75,0)
 K ZTSAVE
"RTN","ECXPLBB",76,0)
 F X="ECINST","ECED","ECSD","ECSD1","ECEDN","ECSDN" S ZTSAVE(X)=""
"RTN","ECXPLBB",77,0)
 F X="ECPACK","ECPIECE","ECRTN","ECGRP","ECNODE" S ZTSAVE(X)=""
"RTN","ECXPLBB",78,0)
 F X="ECFILE","ECHEAD","ECVER","ECINST","ECXINST" S ZTSAVE(X)=""
"RTN","ECXPLBB",79,0)
 F X="ECXLOGIC","ECXDATES" S ZTSAVE(X)=""
"RTN","ECXPLBB",80,0)
 S ZTDESC=ECPACK_" PRE-EXTRACT AUDIT REPORT: "_ECSDN_" TO "_ECEDN,ZTRTN="START^ECXPLBB",ZTIO=""
"RTN","ECXPLBB",81,0)
 S IOP="Q" W ! S %ZIS="QMP" D ^%ZIS S:POP ECXPOP=1 Q:POP  I $D(IO("Q")) K IO("Q"),ZTIO D ^%ZTLOAD W:$D(ZTSK) !,$C(7),"REQUEST QUEUED",!,"Task #: ",$G(ZTSK) K I,ZTSK,ZTIO,ZTSAVE,ZTRTN D HOME^%ZIS S ECXPOP=1
"RTN","ECXPLBB",82,0)
 Q
"RTN","ECXPLBB",83,0)
 ;
"RTN","ECXPLBB",84,0)
EN(ECXJOB,ECSD,ECED) ; entry point used primarily for testing
"RTN","ECXPLBB",85,0)
 ; input:
"RTN","ECXPLBB",86,0)
 ;        ECXJOB = $J that is assigned to the 2nd subscript of 
"RTN","ECXPLBB",87,0)
 ;                 the temporary global array containing the 
"RTN","ECXPLBB",88,0)
 ;                 extracted data that feeds the pre-extract
"RTN","ECXPLBB",89,0)
 ;                 audit report
"RTN","ECXPLBB",90,0)
 ;        ECSD   = starting date range representing the FM
"RTN","ECXPLBB",91,0)
 ;                 date used to retrieve data from file #63
"RTN","ECXPLBB",92,0)
 ;        ECED   = ending date range representing the FM date
"RTN","ECXPLBB",93,0)
 ;                 used to retrieve data from file #63
"RTN","ECXPLBB",94,0)
 ; syntax  of the call: D EN^ECXPLBB(541571372,3000101,3000131)
"RTN","ECXPLBB",95,0)
 D OUTPUT
"RTN","ECXPLBB",96,0)
 Q
"RTN","ECXPLBB",97,0)
 ;
"RTN","ECXPLBB",98,0)
 ;ECXPLBB
"RTN","ECXPRO")
0^20^B30601078^B26189015
"RTN","ECXPRO",1,0)
ECXPRO ;ALB/GTS - Prosthetics Extract for DSS ; 11/2/06 8:56am
"RTN","ECXPRO",2,0)
 ;;3.0;DSS EXTRACTS;**9,13,15,21,24,33,39,46,71,92**;Dec 22, 1997;Build 30
"RTN","ECXPRO",3,0)
BEG ;entry point from option
"RTN","ECXPRO",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXPRO",5,0)
 D:+ECINST>0 ^ECXTRAC D ^ECXKILL
"RTN","ECXPRO",6,0)
 Q
"RTN","ECXPRO",7,0)
 ;
"RTN","ECXPRO",8,0)
START ;start package specific extract
"RTN","ECXPRO",9,0)
 ;
"RTN","ECXPRO",10,0)
 ; Input
"RTN","ECXPRO",11,0)
 ;  ECSD1   - FM formatted Beginning Date (Set by ECXTRAC)
"RTN","ECXPRO",12,0)
 ;  ECED    - FM formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",13,0)
 ;  ECSDN   - Externally formatted Start Date (Set by ECXTRAC)
"RTN","ECXPRO",14,0)
 ;  ECEDN   - Externally formatted End Date (Set by ECXTRAC)
"RTN","ECXPRO",15,0)
 ;  EC      - IEN from file #727 (Set by ECXTRAC)
"RTN","ECXPRO",16,0)
 ;  ECXYM   - Year and Month of extract (YYYYMM)
"RTN","ECXPRO",17,0)
 ;  ECXINST - IEN for division in file #4
"RTN","ECXPRO",18,0)
 ;  ECINST  - Station number of selected division
"RTN","ECXPRO",19,0)
 ;
"RTN","ECXPRO",20,0)
 N ECXLNE,ECXCT,ECXDACT,ECX0,ECXLB,ECXED1,ECINSTSV,ECXLNSTR,ECXP
"RTN","ECXPRO",21,0)
 N DIC,DR,DA,DIQ,CPTCODE,ECXNPRFI
"RTN","ECXPRO",22,0)
 D ECXBUL^ECXPRO2(.ECXLNE,ECSDN,ECEDN,EC)
"RTN","ECXPRO",23,0)
 S QFLG=0,ECXLNSTR=ECXLNE,ECXED1=ECED+.9999,ECXCT=ECSD1
"RTN","ECXPRO",24,0)
 F  S ECXCT=$O(^RMPR(660,"CT",ECXCT)) Q:(ECXCT>ECXED1)!('ECXCT)!(QFLG=1)  D
"RTN","ECXPRO",25,0)
 .S ECXDACT=0
"RTN","ECXPRO",26,0)
 .F  S ECXDACT=$O(^RMPR(660,"CT",ECXCT,ECXDACT)) Q:('ECXDACT)!(QFLG=1)  D
"RTN","ECXPRO",27,0)
 ..;* initialize variables
"RTN","ECXPRO",28,0)
 ..S (ECXDFN,ECXPNM,ECXSSN,ECXSEX,ECXSTAT,ECXDATE,ECXTYPE,ECXSRCE)=""
"RTN","ECXPRO",29,0)
 ..S (ECXHCPCS,ECXPHCPC,ECXRQST,ECXRCST,ECXFORM,ECXCTAMT,ECXLLC)=""
"RTN","ECXPRO",30,0)
 ..S (ECXLMC,ECXGRPR,ECXBILST,ECXQTY,ECXFELOC,ECXFEKEY,ECXA)=""
"RTN","ECXPRO",31,0)
 ..S (ECPTTM,ECPTPR,ECXAST,ECXRST,ECXEST,ECXELIG,ECXVET,ECXZIP)=""
"RTN","ECXPRO",32,0)
 ..S (ECXDOB,ECXDSSD,ECXICD9,ECXAOL,ECXHNCI,ECXETH,ECXRC1,ECXMST)=""
"RTN","ECXPRO",33,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXPRO",34,0)
 ..Q:'$D(^RMPR(660,ECXDACT,0))
"RTN","ECXPRO",35,0)
 ..S ECX0=^RMPR(660,ECXDACT,0),ECXLB=$G(^RMPR(660,ECXDACT,"LB"))
"RTN","ECXPRO",36,0)
 ..K ECXP S DIC="^RMPR(660,",DR=".02;11",DA=ECXDACT,DIQ(0)="EI"
"RTN","ECXPRO",37,0)
 ..S DIQ="ECXP" D EN^DIQ1
"RTN","ECXPRO",38,0)
 ..S ECXDIV=$$GET1^DIQ(660,ECXDACT,8,"I")
"RTN","ECXPRO",39,0)
 ..S ECXDFN=$G(ECXP(660,ECXDACT,.02,"I"))
"RTN","ECXPRO",40,0)
 ..S ECXFORM=$G(ECXP(660,ECXDACT,11,"E"))_U_$G(ECXP(660,ECXDACT,11,"I"))
"RTN","ECXPRO",41,0)
 ..Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXCT)
"RTN","ECXPRO",42,0)
 ..Q:'$$NTEG^ECXPRO1(ECXDFN,.ECXLNE,ECXDACT,ECX0,ECXLB,ECINST,ECXFORM)
"RTN","ECXPRO",43,0)
 ..D PROSINFO^ECXPRO1(ECXDACT,ECXLB,ECX0,ECXFORM)
"RTN","ECXPRO",44,0)
 ..S CPTCODE=$E(ECXHCPCS,1,5)
"RTN","ECXPRO",45,0)
 ..;
"RTN","ECXPRO",46,0)
 ..;Get production division ;p-46
"RTN","ECXPRO",47,0)
 ..N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXPRO",48,0)
 ..;- Observation patient indicator (YES/NO)
"RTN","ECXPRO",49,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXPRO",50,0)
 ..;
"RTN","ECXPRO",51,0)
 ..;- CNH status (YES/NO)
"RTN","ECXPRO",52,0)
 ..S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXPRO",53,0)
 ..;
"RTN","ECXPRO",54,0)
 ..;get encounter classifications
"RTN","ECXPRO",55,0)
 ..S (ECXAO,ECXECE,ECXHNC,ECXMIL,ECXIR)=""
"RTN","ECXPRO",56,0)
 ..S ECXVISIT=$$GET1^DIQ(660,ECXDACT,8.12,"I") I ECXVISIT'="" D
"RTN","ECXPRO",57,0)
 ...D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXPRO",58,0)
 ...S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXPRO",59,0)
 ...S ECXHNC=$G(ECXVIST("HNC")),ECXMIL=$G(ECXVIST("MST")),ECXIR=$G(ECXVIST("IR"))
"RTN","ECXPRO",60,0)
 ..; - Head and Neck Cancer Indicator
"RTN","ECXPRO",61,0)
 ..S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXPRO",62,0)
 ..;
"RTN","ECXPRO",63,0)
 ..; - set national patient record flag if exist
"RTN","ECXPRO",64,0)
 ..D NPRF^ECXUTL5
"RTN","ECXPRO",65,0)
 ..;
"RTN","ECXPRO",66,0)
 ..;- If no encounter number don't file record
"RTN","ECXPRO",67,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXPRO",68,0)
 ..I ECXFORM["-3" F ECXLAB="LAB","ORD" D
"RTN","ECXPRO",69,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",70,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",71,0)
 ..I ECXFORM'["-3" S ECXLAB="NONL" D
"RTN","ECXPRO",72,0)
 ...D FEEDINFO^ECXPRO2(ECXSRCE,CPTCODE,ECXTYPE,ECXSTAT2,ECXRQST,ECXRCST,ECXLAB)
"RTN","ECXPRO",73,0)
 ...Q:ECXFELOC=""  D FILE
"RTN","ECXPRO",74,0)
 ;* Send the Exception message
"RTN","ECXPRO",75,0)
 I ECXLNSTR<ECXLNE DO
"RTN","ECXPRO",76,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXPRO",77,0)
 .S XMDUZ=.5
"RTN","ECXPRO",78,0)
 .S XMSUB=ECINST_" - Prosthetics DSS Exception Message",XMN=0
"RTN","ECXPRO",79,0)
 .S XMTEXT="^TMP(""ECX-PRO EXC"",$J,"
"RTN","ECXPRO",80,0)
 .D ^XMD
"RTN","ECXPRO",81,0)
 K ^TMP("ECX-PRO EXC",$J),XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ECXPRO",82,0)
 Q
"RTN","ECXPRO",83,0)
 ;
"RTN","ECXPRO",84,0)
FILE ;file extract record
"RTN","ECXPRO",85,0)
 ;node0
"RTN","ECXPRO",86,0)
 ;facility^dfn (ECXDFN)^ssn (ECXSSN)^name (ECXPNM)^in/out (ECXA)^
"RTN","ECXPRO",87,0)
 ;day^feeder location^
"RTN","ECXPRO",88,0)
 ;feeder key^qty^pc team^pc provider^hcpcs^icd9 (ECXICD9)^
"RTN","ECXPRO",89,0)
 ;icd9-1 (ECXICD91)^icd9-2 (ECXICD92)^icd9-3 (ECXICD93)^
"RTN","ECXPRO",90,0)
 ;icd9-4 (ECXICD94)^agent orange^radiation^env contam^eligibility^
"RTN","ECXPRO",91,0)
 ;cost^lab labor cost^lab matl cost^billing status^
"RTN","ECXPRO",92,0)
 ;vet^transacton type^req station^rec station^file#661.1 ien
"RTN","ECXPRO",93,0)
 ;node1
"RTN","ECXPRO",94,0)
 ;zip^dob^sex^amis grouper^pc prov npi^mpi^dss dept ECXDSSD^
"RTN","ECXPRO",95,0)
 ;pc prov person class^race^pow status^pow loc^
"RTN","ECXPRO",96,0)
 ;sharing agree payor^sharing agree ins^mst status^
"RTN","ECXPRO",97,0)
 ;enroll loc^state^county^assoc pc provider^
"RTN","ECXPRO",98,0)
 ;assoc pc prov person class^assoc pc prov npi
"RTN","ECXPRO",99,0)
 ;dom (ECXDOM)^purple heart indicator (ECXPHI)^
"RTN","ECXPRO",100,0)
 ;enrollment Category (ECXCAT)^enrollment status (ECXSTAT)^
"RTN","ECXPRO",101,0)
 ;enrollment priority (ECXPRIOR)^purple heart ind (ECXPHI)^
"RTN","ECXPRO",102,0)
 ;period of serv (ECXPOS)^observ pat ind (ECXOBS)^encounter num (ECXENC)^
"RTN","ECXPRO",103,0)
 ;ao loc (ECXAOL)^CNH status (ECXCNH)^production division ECXPDIV^
"RTN","ECXPRO",104,0)
 ;head & neck canc. ind. (ECXHNCI)^ethnicity (ECXETH)^race1 (ECXRC1)^
"RTN","ECXPRO",105,0)
 ;^enrollment priority (ECXPRIOR)_enrollment sub-
"RTN","ECXPRO",106,0)
 ;group (ECXSBGRP)^user enrollee (ECXUESTA)^patient type ECXPTYPE
"RTN","ECXPRO",107,0)
 ;^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv
"RTN","ECXPRO",108,0)
 ;eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXPRO",109,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator ECXAO
"RTN","ECXPRO",110,0)
 ;^environ contam ECXECE^head/neck cancer ECXHNC^encntr mst ECXMIL^
"RTN","ECXPRO",111,0)
 ;radiation ECXIR
"RTN","ECXPRO",112,0)
 N DA,DIK
"RTN","ECXPRO",113,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXPRO",114,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXPRO",115,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXFELOC_U
"RTN","ECXPRO",116,0)
 S ECODE=ECODE_ECXFEKEY_U_ECXQTY_U_ECPTTM_U_ECPTPR_U_ECXHCPCS_U
"RTN","ECXPRO",117,0)
 S ECODE=ECODE_ECXICD9_U_ECXICD91_U_ECXICD92_U_ECXICD93_U_ECXICD94_U
"RTN","ECXPRO",118,0)
 S ECODE=ECODE_ECXAST_U_ECXRST_U_ECXEST_U_ECXELIG_U_ECXCTAMT_U_ECXLLC_U
"RTN","ECXPRO",119,0)
 S ECODE=ECODE_ECXLMC_U_ECXBILST_U_ECXVET_U_ECXTYPE_U_ECXRQST_U_ECXRCST_U
"RTN","ECXPRO",120,0)
 S ECODE=ECODE_ECXPHCPC_U
"RTN","ECXPRO",121,0)
 S ECODE1=ECXZIP_U_ECXDOB_U_ECXSEX_U_ECXGRPR_U_ECPTNPI_U_ECXMPI_U
"RTN","ECXPRO",122,0)
 S ECODE1=ECODE1_ECXDSSD_U_ECCLAS_U_ECXRACE_U_ECXPST_U_ECXPLOC_U
"RTN","ECXPRO",123,0)
 S ECODE1=ECODE1_U_U_ECXMST_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXPRO",124,0)
 S ECODE1=ECODE1_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U
"RTN","ECXPRO",125,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U
"RTN","ECXPRO",126,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXCNH_U_ECXPDIV_U
"RTN","ECXPRO",127,0)
 S ECODE1=ECODE1_ECXHNCI_U_ECXETH_U_ECXRC1_U
"RTN","ECXPRO",128,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXPRO",129,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR
"RTN","ECXPRO",130,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXPRO",131,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXPRO",132,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXPRO",133,0)
 Q
"RTN","ECXPRO",134,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXPRO",135,0)
 S ECHEAD="PRO"
"RTN","ECXPRO",136,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXPRO",137,0)
 S ECINST=$$PDIV^ECXPUTL
"RTN","ECXPRO",138,0)
 Q
"RTN","ECXPRO",139,0)
 ;
"RTN","ECXPRO",140,0)
 ;**Note: LOCAL and QUE are carry over from protocols set by other
"RTN","ECXPRO",141,0)
 ;        routines.
"RTN","ECXPRO",142,0)
LOCAL ;to extract nightly for local use not to be transmitted to TSI
"RTN","ECXPRO",143,0)
 ;QUEUE with 1D frequency
"RTN","ECXPRO",144,0)
 D SETUP,^ECXTLOCL,^ECXKILL Q
"RTN","ECXPRO",145,0)
 ;
"RTN","ECXPRO",146,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXPRO",147,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXQSR")
0^14^B55551464^B56207579
"RTN","ECXQSR",1,0)
ECXQSR ;ALB/JAP,BIR/PTD-DSS QUASAR Extract ; 11/2/06 8:58am
"RTN","ECXQSR",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,26,24,34,33,35,39,43,46,49,64,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXQSR",3,0)
BEG ;entry point from option
"RTN","ECXQSR",4,0)
 I '$O(^ACK(509850.8,0)) W !,"You must be using the Quality Audiology & Speech Pathology",!,"Audit & Review (QUASAR) software to run this extract.",!! Q
"RTN","ECXQSR",5,0)
 I '$D(^ACK(509850.8,1,"DSS")) W !,"Linkage has not been established between QUASAR and the DSS UNIT file (#724).",!! Q
"RTN","ECXQSR",6,0)
 I '$O(^ACK(509850.6,0)) W !,"There is no data in the A&SP CLINIC VISIT file (#509850.6).",!! Q
"RTN","ECXQSR",7,0)
 D SETUP I ECFILE="" Q
"RTN","ECXQSR",8,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXQSR",9,0)
 Q
"RTN","ECXQSR",10,0)
START ;entry point from tasked job
"RTN","ECXQSR",11,0)
 N ERR,ECXQDT,ECXNPRFI
"RTN","ECXQSR",12,0)
 S QFLG=0,ECED=ECED+.9,ECD=ECSD1,ECXQV=""
"RTN","ECXQSR",13,0)
 D QINST I $D(ERR) Q
"RTN","ECXQSR",14,0)
 S ECL=+^ACK(509850.8,1,0),ECLINK=^ACK(509850.8,1,"DSS")
"RTN","ECXQSR",15,0)
 F  S ECD=$O(^ACK(509850.6,"B",ECD)),ECDA=0 Q:(ECD>ECED)!('ECD)!(QFLG)  D
"RTN","ECXQSR",16,0)
 .I +ECXQV=3,ECD<ECXQDT S ECXQV=2.0
"RTN","ECXQSR",17,0)
 .F  S ECDA=$O(^ACK(509850.6,"B",ECD,ECDA)) Q:'ECDA  D UPDATE Q:QFLG
"RTN","ECXQSR",18,0)
 Q
"RTN","ECXQSR",19,0)
QINST ;Get installed information for QUASAR
"RTN","ECXQSR",20,0)
 N ARR,IENS,QVIEN,INTIEN
"RTN","ECXQSR",21,0)
 S ECXQDT=""
"RTN","ECXQSR",22,0)
 D FILE^DID(509850.6,,"VERSION","ARR","ERR")
"RTN","ECXQSR",23,0)
 S ECXQV=$G(ARR("VERSION")) I +ECXQV=0 S ERR=1 Q
"RTN","ECXQSR",24,0)
 S QVIEN=$$FIND1^DIC(9.4,"","X","QUASAR") I +QVIEN<1 S ERR=1 Q
"RTN","ECXQSR",25,0)
 S IENS=","_QVIEN_","
"RTN","ECXQSR",26,0)
 S INTIEN=$$FIND1^DIC(9.49,IENS,"X",ECXQV) I +INTIEN<1 S ERR=1 Q
"RTN","ECXQSR",27,0)
 S IENS=INTIEN_","_QVIEN,ECXQDT=$$GET1^DIQ(9.49,IENS,2,"I")
"RTN","ECXQSR",28,0)
 Q
"RTN","ECXQSR",29,0)
UPDATE ;create record for each unique CPT code for clinic visit 
"RTN","ECXQSR",30,0)
 N ARY,ECZNODE,CPT,LOC,MOD,STR,VOL,XX,ECTP,ECV
"RTN","ECXQSR",31,0)
 Q:'$D(^ACK(509850.6,ECDA,0))
"RTN","ECXQSR",32,0)
 S ECZNODE=^ACK(509850.6,ECDA,0),EC2NODE=$G(^ACK(509850.6,ECDA,2))
"RTN","ECXQSR",33,0)
 S ECDT=$P(ECZNODE,U),ECDAY=$$ECXDATE^ECXUTL(ECDT,ECXYM)
"RTN","ECXQSR",34,0)
 S ECTIME=$$ECXTIME^ECXUTL(ECDT) S:$P(ECDT,".",2)="" ECTIME="000000"
"RTN","ECXQSR",35,0)
 S ECXDFN=$P(ECZNODE,U,2)
"RTN","ECXQSR",36,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECD,"1;3;5")
"RTN","ECXQSR",37,0)
 S ECHL="",ECXDIV=$P($G(^ACK(509850.6,ECDA,5)),U),ECSTOP=$P(EC2NODE,U)
"RTN","ECXQSR",38,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get Production Division
"RTN","ECXQSR",39,0)
 Q:ECSTOP=""
"RTN","ECXQSR",40,0)
 S (ECHLS,ECHL2S)="000",ECAC=$P($G(ECZNODE),U,6)
"RTN","ECXQSR",41,0)
 I ECAC D
"RTN","ECXQSR",42,0)
 .S ECHL=+$P($G(^SC(ECAC,0)),U,7),ECHL2=+$P($G(^(0)),U,18) I ECHL D
"RTN","ECXQSR",43,0)
 ..S ECHLS=$P($G(^DIC(40.7,+ECHL,0)),U,2),ECHL2S=$P($G(^DIC(40.7,+ECHL2,0)),U,2)
"RTN","ECXQSR",44,0)
 ..S ECHLS=$$RJ^XLFSTR(ECHLS,3,0),ECHL2S=$$RJ^XLFSTR(ECHL2S,3,0)
"RTN","ECXQSR",45,0)
 S ECDSS=ECHLS_ECHL2S
"RTN","ECXQSR",46,0)
 I ECXLOGIC>2003 D
"RTN","ECXQSR",47,0)
 .I "^18^23^24^36^41^65^94^"[("^"_ECXTS_"^") S ECDSS=$$TSMAP^ECXUTL4(ECXTS)
"RTN","ECXQSR",48,0)
 S ECDU=$S(ECSTOP["A":$P(ECLINK,U),ECSTOP["S":$P(ECLINK,U,2),1:"")
"RTN","ECXQSR",49,0)
 Q:'ECDU
"RTN","ECXQSR",50,0)
 S ECDSSU=$G(^ECD(ECDU,0)),ECCS=+$P(ECDSSU,U,4),(ECO,ECM)=+$P(ECDSSU,U,3),ECXDSSD=$E($P(ECDSSU,U,5),1,10)
"RTN","ECXQSR",51,0)
 Q:'$O(^ACK(509850.6,ECDA,3,0))
"RTN","ECXQSR",52,0)
 ;Create local array of procedure codes and # of times each procedure
"RTN","ECXQSR",53,0)
 ; was performed.
"RTN","ECXQSR",54,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXQSR",55,0)
 S (ECDIA,ECXPPC,ECXPRV1,ECXPRV2,ECXPRV3,ECUN1NPI)=""
"RTN","ECXQSR",56,0)
 ;if QUASAR v2
"RTN","ECXQSR",57,0)
 I +ECXQV=2 D
"RTN","ECXQSR",58,0)
 .S ECXPRV1=$P(EC2NODE,U,7),ECXPRV2=$P(EC2NODE,U,3),ECXPRV3=$P(EC2NODE,U,5),ECPN=0
"RTN","ECXQSR",59,0)
 .F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",60,0)
 ..S XX=^ACK(509850.6,ECDA,3,ECPN,0),XX=$P(XX,U),XX=$P($G(^ACK(509850.4,XX,0)),U),ECXCPT=$E($$CPT^ECXUTL3(XX),1,5)
"RTN","ECXQSR",61,0)
 ..I ECXCPT]"" D
"RTN","ECXQSR",62,0)
 ...I '$D(LOC(ECXCPT)) S LOC(ECXCPT)=0_U_ECXPRV1
"RTN","ECXQSR",63,0)
 ...S $P(LOC(ECXCPT),U)=$P(LOC(ECXCPT),U)+1
"RTN","ECXQSR",64,0)
 .S ECIEN=$O(^ACK(509850.6,ECDA,1,0)),ECDIA=$P($G(^ICD9(+$G(^ACK(509850.6,ECDA,1,ECIEN,0)),0)),U)
"RTN","ECXQSR",65,0)
 .F I=1:1:4 S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'+ECIEN  D
"RTN","ECXQSR",66,0)
 ..S @("ECXICD9"_I)=$P($G(^ICD9(+$P(^ACK(509850.6,ECDA,1,ECIEN,0),U),0)),U)
"RTN","ECXQSR",67,0)
 ;if QUASAR v3
"RTN","ECXQSR",68,0)
 I +ECXQV=3 D
"RTN","ECXQSR",69,0)
 .N CPT,DIA,I,J,MOD,MOD1,P,STR,VOL,ECTP,ARY,ECP,ECPN
"RTN","ECXQSR",70,0)
 .S ECXPRV2=$G(^ACK(509850.6,ECDA,2.7,1,0)),ECXPRV3=$G(^ACK(509850.6,ECDA,2.7,2,0))
"RTN","ECXQSR",71,0)
 .S ECPN=0 F  S ECPN=$O(^ACK(509850.6,ECDA,3,ECPN)) Q:'ECPN  D
"RTN","ECXQSR",72,0)
 ..S CPT=^ACK(509850.6,ECDA,3,ECPN,0),ECXCPT=$P(CPT,U),ECTP=+$P(CPT,U,5),ECV=1,ECP=""
"RTN","ECXQSR",73,0)
 ..Q:ECXCPT=""
"RTN","ECXQSR",74,0)
 ..I ECTP D
"RTN","ECXQSR",75,0)
 ...S CPT=$G(^ACK(509850.6,ECDA,7,ECTP,0)),ECP=$P(CPT,U)
"RTN","ECXQSR",76,0)
 ...S ECP=$S(ECP<90000:$P($G(^EC(725,+ECP,0)),U,2)_"N",1:$P($G(^EC(725,+ECP,0)),U,2)_"L")
"RTN","ECXQSR",77,0)
 ...S VOL=+$P(CPT,U,2),ECXPRV1=$P(CPT,U,3)
"RTN","ECXQSR",78,0)
 ..I 'ECTP S VOL=+$P(CPT,U,3),ECXPRV1=$P(CPT,U,4)
"RTN","ECXQSR",79,0)
 ..S ECXCPT=$E($$CPT^ECXUTL3(ECXCPT),1,5),ECXMOD="",MOD=0
"RTN","ECXQSR",80,0)
 ..F  S MOD=$O(^ACK(509850.6,ECDA,3,ECPN,1,MOD)) Q:'MOD  D
"RTN","ECXQSR",81,0)
 ...S MOD1=+^ACK(509850.6,ECDA,3,ECPN,1,MOD,0) D:MOD1
"RTN","ECXQSR",82,0)
 ....S ECXMOD=ECXMOD_MOD1_";"
"RTN","ECXQSR",83,0)
 ..F I=1:1:$L(ECXMOD,";") I $G(ARY(ECXCPT))'[$P(ECXMOD,";",I) D
"RTN","ECXQSR",84,0)
 ...S ARY(ECXCPT)=$G(ARY(ECXCPT))_$P(ECXMOD,";",I)_";"
"RTN","ECXQSR",85,0)
 ..S:VOL ECV=VOL
"RTN","ECXQSR",86,0)
 ..S ECV=ECV+$G(LOC(ECXCPT)),LOC(ECXCPT)=ECV_U_ECXPRV1_U_ECP
"RTN","ECXQSR",87,0)
 .S ECIEN=0 F  S ECIEN=$O(^ACK(509850.6,ECDA,1,ECIEN)) Q:'ECIEN  D
"RTN","ECXQSR",88,0)
 ..S DIA=^ACK(509850.6,ECDA,1,ECIEN,0),P=$P(DIA,U,2),P=$S(P=1:"P",1:"S")
"RTN","ECXQSR",89,0)
 ..S CNT=$G(STR(P))+1,STR(P,CNT)=$P($G(^ICD9(+DIA,0)),U),STR(P)=CNT
"RTN","ECXQSR",90,0)
 .S ECDIA=$G(STR("P",1))
"RTN","ECXQSR",91,0)
 .F I=1:1:4 Q:'$D(STR("P",I+1))  S @("ECXICD9"_I)=STR("P",I)
"RTN","ECXQSR",92,0)
 .S:ECDIA="" ECDIA=$G(STR("S",1)),I=2
"RTN","ECXQSR",93,0)
 .F J=I:1:4 Q:'$D(STR("S",J))  S @("ECXICD9"_J)=STR("S",J)
"RTN","ECXQSR",94,0)
 Q:('$D(LOC))!('$O(^ACK(509850.6,ECDA,1,0)))
"RTN","ECXQSR",95,0)
 ;- Ord Div, Contract St/End Dates, Contract Type placeholders for FY2002
"RTN","ECXQSR",96,0)
 S (ECXODIV,ECXCSDT,ECXCEDT,ECXCTYP)=""
"RTN","ECXQSR",97,0)
 ;set up Provider Person class
"RTN","ECXQSR",98,0)
 S (ECXCPT,ECXPPC1,ECXPPC2,ECXPPC3)=""
"RTN","ECXQSR",99,0)
 S:ECXPRV2'="" ECXPPC2=$$PRVCLASS^ECXUTL(ECXPRV2,ECD)
"RTN","ECXQSR",100,0)
 S:ECXPRV3'="" ECXPPC3=$$PRVCLASS^ECXUTL(ECXPRV3,ECD)
"RTN","ECXQSR",101,0)
 N DA,DIC,DIK,DR,FILEN,DIQ,XVAR,II,DI
"RTN","ECXQSR",102,0)
 F II=2,3 S XVAR="ECXPRV"_II I @XVAR'="" D
"RTN","ECXQSR",103,0)
 .S DA=@XVAR,(DIC,FILEN)=509850.3,DR=".01",DIQ="ECXQSR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXQSR",104,0)
 .S DA=ECXQSR(FILEN,DA,DR,"I"),(DIC,FILEN)=8930.3 D EN^DIQ1 S @XVAR=2_ECXQSR(FILEN,DA,DR,"I") K DA,DIC,DR,DIQ,ECXQSR
"RTN","ECXQSR",105,0)
 ; -Observation Patient Indicator (yes/no)
"RTN","ECXQSR",106,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECDSS)
"RTN","ECXQSR",107,0)
 ; -CNH status (YES/NO)
"RTN","ECXQSR",108,0)
 S ECXCNH=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXQSR",109,0)
 ;get encounter classification
"RTN","ECXQSR",110,0)
 S (ECXAO,ECXECE,ECXIR,ECXMIL,ECHNC)="",ECXVISIT=$P($G(^ACK(509850.6,ECDA,6)),U,3)
"RTN","ECXQSR",111,0)
 I ECXVISIT'="" D
"RTN","ECXQSR",112,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR Q
"RTN","ECXQSR",113,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXECE=$G(ECXVIST("PGE"))
"RTN","ECXQSR",114,0)
 .S ECXIR=$G(ECXVIST("IR")),ECXMIL=$G(ECXVIST("MST")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXQSR",115,0)
 ; -Head and Neck Cancer Indicator
"RTN","ECXQSR",116,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXQSR",117,0)
 ;get enrollment data (category, status and priority)
"RTN","ECXQSR",118,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXQSR",119,0)
 ; -Get national patient record flag Indicator if exist
"RTN","ECXQSR",120,0)
 D NPRF^ECXUTL5
"RTN","ECXQSR",121,0)
 ; -If no encounter number don't file record
"RTN","ECXQSR",122,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECDT,ECXTS,ECXOBS,ECHEAD,ECDSS,)
"RTN","ECXQSR",123,0)
 Q:ECXENC=""
"RTN","ECXQSR",124,0)
 ;Loop through array of unique procedures. Create record in ECODE.
"RTN","ECXQSR",125,0)
 S CPT="" F  S CPT=$O(LOC(CPT)) Q:CPT=""  D
"RTN","ECXQSR",126,0)
 .S ECV=+$P(LOC(CPT),U),ECXCPT=$$CPT^ECXUTL3(CPT,$G(ARY(CPT)),ECV)
"RTN","ECXQSR",127,0)
 .S ECXPRV1=$P(LOC(CPT),U,2)
"RTN","ECXQSR",128,0)
 .S:ECXPRV1'="" ECXPPC1=$$PRVCLASS^ECXUTL(ECXPRV1,ECD),ECXPRV1=2_ECXPRV1
"RTN","ECXQSR",129,0)
 .S ECP=$P(LOC(CPT),U,3) I ECP="" S ECP=$$CPT^ECXUTL3(CPT,"",ECV)
"RTN","ECXQSR",130,0)
 .D FILE
"RTN","ECXQSR",131,0)
 K CPT,LOC
"RTN","ECXQSR",132,0)
 Q
"RTN","ECXQSR",133,0)
FILE ;file record in #727.825
"RTN","ECXQSR",134,0)
 ;node0
"RTN","ECXQSR",135,0)
 ;inst^dfn ECXDFN^ssn ECXSSN^name ECXPNM^i/o status ECXA^day ECDAY^
"RTN","ECXQSR",136,0)
 ;DSS unit ECDU^^category ECPTTM^procedure ECP^volume ECV^cost center^
"RTN","ECXQSR",137,0)
 ;ordering sec ^section^provider ECXPRV1^ECXPPC1^ECXPRV2^ECXPPC2^ECXPRV3^
"RTN","ECXQSR",138,0)
 ;ECXPPC3^mov # ECXMN^treat spec ECXTS^time ECTIME^primary care team 
"RTN","ECXQSR",139,0)
 ;ECPTTM^primary care provider ECPTPR^pce cpt code & modifers ECXCPT^
"RTN","ECXQSR",140,0)
 ;primary icd-9 code ECDIA^secondary icd-9 #1 ECXICD91^secondary icd-9 
"RTN","ECXQSR",141,0)
 ;#2 ECXICD92^secondary icd-9 #3 ECXICD93^secondary icd-9 #4 ECXICD94^
"RTN","ECXQSR",142,0)
 ;agent orange ECXAST^radiation exposure ECRST^environmental
"RTN","ECXQSR",143,0)
 ;contaminants ECEST^service connected ECSC^sent to pce^^dss identifier
"RTN","ECXQSR",144,0)
 ;ECDSS^placeholder
"RTN","ECXQSR",145,0)
 ;node1
"RTN","ECXQSR",146,0)
 ;mpi ECXNPI^dss dept ECXDSSD^provider npi ECUN1NPI^^^pc prov person 
"RTN","ECXQSR",147,0)
 ;class ECPTNPI^assoc pc provider ECASPR^assoc pc prov person class 
"RTN","ECXQSR",148,0)
 ;ECCLAS2^assoc pc provider npi ECASNPI^divison ECXDIV^dom ECXDOM^
"RTN","ECXQSR",149,0)
 ;enrollment category ECXCAT^enrollment status ECXSTAT^enrollment prior 
"RTN","ECXQSR",150,0)
 ;ECXPRIOR^period of service ECXPOS^purple heart ECXPHI^observ pat ind 
"RTN","ECXQSR",151,0)
 ;ECXOBS^encounter num ECXENC^ao loc ECXAOL^ord div ECXODIV^contr st dt 
"RTN","ECXQSR",152,0)
 ;ECXCSDT^contr end dt ECXCEDT^contr typ ECXCTYP^CNH stat ECXCNH^
"RTN","ECXQSR",153,0)
 ;production division ECXPDIV^eligibility ECXELIG^ethnicity ECXETH^
"RTN","ECXQSR",154,0)
 ;race1 ECXRC1^enrollment location ECXENRL^^enrollment priority 
"RTN","ECXQSR",155,0)
 ;ECXPRIOR_enrollment subgroup ECXSBGRP^user enrollee ECXUESTA^patient 
"RTN","ECXQSR",156,0)
 ;type ECXPTYPE^combat vet elig ECXCVE^combat vet elig end date ECXCVEDT^
"RTN","ECXQSR",157,0)
 ;enc cv eligible ECXCVENC^national patient record flag ECXNPRFI^
"RTN","ECXQSR",158,0)
 ;emergency response indicator(FEMA) ECXERI^agent orange indicator 
"RTN","ECXQSR",159,0)
 ;ECXAO^environ contam ECXECE^head/neck ECXHNC^military sexual trauma 
"RTN","ECXQSR",160,0)
 ;ECXMIL^radiation encoun ECXIR^nutrition dx
"RTN","ECXQSR",161,0)
 N DA,DIK
"RTN","ECXQSR",162,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXQSR",163,0)
 S ECODE=EC7_U_EC23_U
"RTN","ECXQSR",164,0)
 S ECODE=ECODE_ECL_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_ECDAY_U_ECDU_U_U
"RTN","ECXQSR",165,0)
 S ECODE=ECODE_ECP_U_ECV_U_ECCS_U_ECO_U_ECM_U_ECXPRV1_U_ECXPPC1_U
"RTN","ECXQSR",166,0)
 S ECODE=ECODE_ECXPRV2_U_ECXPPC2_U_ECXPRV3_U_ECXPPC3_U_U
"RTN","ECXQSR",167,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECTIME_U_ECPTTM_U
"RTN","ECXQSR",168,0)
 S ECODE=ECODE_ECPTPR_U_ECXCPT_U_ECDIA_U_ECXICD91_U_ECXICD92_U
"RTN","ECXQSR",169,0)
 S ECODE=ECODE_ECXICD93_U_ECXICD94_U_ECXAST_U_ECXRST_U_ECXEST_U
"RTN","ECXQSR",170,0)
 S ECODE=ECODE_ECSC_U_"N"_U_U_ECDSS_U_U
"RTN","ECXQSR",171,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECUN1NPI_U_U_U_ECCLAS_U_ECPTNPI_U_ECASPR_U
"RTN","ECXQSR",172,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDIV_U_ECXMST_U_ECXDOM_U
"RTN","ECXQSR",173,0)
 S ECODE1=ECODE1_ECXDOB_U_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXQSR",174,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXODIV_U_ECXCSDT_U_ECXCEDT_U
"RTN","ECXQSR",175,0)
 S ECODE1=ECODE1_ECXCTYP_U_ECXCNH_U_ECXPDIV_U_ECXELIG_U_ECXHNCI_U_ECXETH_U
"RTN","ECXQSR",176,0)
 S ECODE1=ECODE1_ECXRC1
"RTN","ECXQSR",177,0)
 I ECXLOGIC>2003 S ECODE1=ECODE1_U_ECXENRL
"RTN","ECXQSR",178,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U
"RTN","ECXQSR",179,0)
 I ECXLOGIC>2004 S ECODE2=ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXQSR",180,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXECE_U_ECXHNC_U_ECXMIL_U_ECXIR_U
"RTN","ECXQSR",181,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=$G(ECODE2),ECRN=ECRN+1
"RTN","ECXQSR",182,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXQSR",183,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD
"RTN","ECXQSR",184,0)
 Q
"RTN","ECXQSR",185,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXQSR",186,0)
 S ECHEAD="ECQ"
"RTN","ECXQSR",187,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXQSR",188,0)
 Q
"RTN","ECXQSR",189,0)
QUE ;Entry point for the background requeuing handled by ECXTAUTO.
"RTN","ECXQSR",190,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXRAD")
0^21^B31411970^B29447080
"RTN","ECXRAD",1,0)
ECXRAD ;ALB/JAP,BIR/PDW,PTD-Extract for Radiology ; 6/23/06 6:52am
"RTN","ECXRAD",2,0)
 ;;3.0;DSS EXTRACTS;**11,8,13,16,24,33,39,46,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXRAD",3,0)
BEG ;entry point from option
"RTN","ECXRAD",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXRAD",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXRAD",6,0)
 Q
"RTN","ECXRAD",7,0)
 ;
"RTN","ECXRAD",8,0)
START ;start rad extract
"RTN","ECXRAD",9,0)
 S QFLG=0
"RTN","ECXRAD",10,0)
 K ECXDD D FIELD^DID(70.03,14,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXRAD",11,0)
 S ECXDFN="",ECDT=ECSD-.1,ECED1=ECED+.3
"RTN","ECXRAD",12,0)
 F  S ECDT=$O(^RADPT("AR",ECDT)) Q:ECDT>ECED1!(ECDT'>0)  D  Q:QFLG
"RTN","ECXRAD",13,0)
 .S ECXDFN=""
"RTN","ECXRAD",14,0)
 .F  S ECXDFN=$O(^RADPT("AR",ECDT,ECXDFN)) Q:ECXDFN=""  I '$D(^TMP("ECL",$J,ECXDFN)) D GET Q:QFLG
"RTN","ECXRAD",15,0)
 K ^TMP("ECL",$J)
"RTN","ECXRAD",16,0)
 Q
"RTN","ECXRAD",17,0)
 ;
"RTN","ECXRAD",18,0)
GET ;get data
"RTN","ECXRAD",19,0)
 N ECXIEN,X,SUB,TYPE,ECDOCPC,ECXIS,ECXISPC,ECXPRCL,ECXCSC
"RTN","ECXRAD",20,0)
 S ^TMP("ECL",$J,ECXDFN)=""
"RTN","ECXRAD",21,0)
 ;with dfn get all exams within date range
"RTN","ECXRAD",22,0)
 S ECXMDT=ECSD-.1
"RTN","ECXRAD",23,0)
 F  S ECXMDT=$O(^RADPT(ECXDFN,"DT","B",ECXMDT)) Q:((ECXMDT>ECED1)!(ECXMDT=""))  D  Q:QFLG
"RTN","ECXRAD",24,0)
 .S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,"")) Q:ECXMDA=""
"RTN","ECXRAD",25,0)
 .S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",26,0)
 .S ECTM=$$ECXTIME^ECXUTL(ECXMDT) S:ECTM>235959 ECTM=235959
"RTN","ECXRAD",27,0)
 .S ECXDAY=$$ECXDATE^ECXUTL(ECXMDT,ECXYM)
"RTN","ECXRAD",28,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXMDT,"."),"1;3",.ECXPAT)
"RTN","ECXRAD",29,0)
 .Q:'OK
"RTN","ECXRAD",30,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXRAD",31,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXRAD",32,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXRAD",33,0)
 .S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXMDT,"."),ECPROF)
"RTN","ECXRAD",34,0)
 .S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXRAD",35,0)
 .S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXRAD",36,0)
 .S X=$$INP^ECXUTL2(ECXDFN,ECXMDT),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXRAD",37,0)
 .S ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXRAD",38,0)
 .;
"RTN","ECXRAD",39,0)
 .;- Observation patient indicator (YES/NO)
"RTN","ECXRAD",40,0)
 .S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXRAD",41,0)
 .;for dfn & date get exam(s) ien
"RTN","ECXRAD",42,0)
 .S ECXMDA=""
"RTN","ECXRAD",43,0)
 .F  S ECXMDA=$O(^RADPT(ECXDFN,"DT","B",ECXMDT,ECXMDA)) Q:+ECXMDA=0  D
"RTN","ECXRAD",44,0)
 ..S ECXDIV=$P(^RADPT(ECXDFN,"DT",ECXMDA,0),U,3),ECLOC=$P(^(0),U,4),ECTY=$P(^(0),U,2)
"RTN","ECXRAD",45,0)
 ..;
"RTN","ECXRAD",46,0)
 ..;- Ordering stop code (based on imaging location)
"RTN","ECXRAD",47,0)
 ..S ECXORDST=$$GET1^DIQ(40.7,$$GET1^DIQ(79.1,$G(ECLOC),22,"I"),1)
"RTN","ECXRAD",48,0)
 ..;
"RTN","ECXRAD",49,0)
 ..;- Get ordering date using Imaging Order ptr to #75.1 in subfile 70.03
"RTN","ECXRAD",50,0)
 ..S ECXIEN=+$P($G(^RADPT(ECXDFN,"DT",ECXMDA,"P",1,0)),U,11)
"RTN","ECXRAD",51,0)
 ..S ECXORDDT=$$ECXDATE^ECXUTL($P($G(^RAO(75.1,ECXIEN,0)),U,16),ECXYM)
"RTN","ECXRAD",52,0)
 ..;
"RTN","ECXRAD",53,0)
 ..;- If no encounter number don't file record
"RTN","ECXRAD",54,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXMDT,ECXTS,ECXOBS,ECHEAD,ECTY,) Q:ECXENC=""
"RTN","ECXRAD",55,0)
 ..;procedures and modifiers for specific exam (case numbers)
"RTN","ECXRAD",56,0)
 ..;ward/clinic,service,provider,diagnostic code
"RTN","ECXRAD",57,0)
 ..S ECCN=0
"RTN","ECXRAD",58,0)
 ..F  S ECCN=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN)) Q:ECCN'>0  D
"RTN","ECXRAD",59,0)
 ...S ECCA=^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,0)
"RTN","ECXRAD",60,0)
 ...S ECXW=$P(ECCA,U,6),ECXW=$P($G(^DIC(42,+ECXW,44)),U)
"RTN","ECXRAD",61,0)
 ...S:ECXW="" ECXW=$P(ECCA,U,8)
"RTN","ECXRAD",62,0)
 ...S (ECXDSSD,ECXDSSP)=""
"RTN","ECXRAD",63,0)
 ...S ECS=$P(ECCA,U,7),ECDOC=ECPROF_$P(ECCA,U,14),ECDOCNPI="",ECDI=$P(ECCA,U,13),ECDOCPC=$$PRVCLASS^ECXUTL($P(ECCA,U,14),ECDT)
"RTN","ECXRAD",64,0)
 ...S ECPRO=$P(ECCA,U,2),ECSTAT=$P($G(^RA(72,+$P(ECCA,U,3),0)),U,3)
"RTN","ECXRAD",65,0)
 ...;get the primary interpreting staff and the person class DBIA #65
"RTN","ECXRAD",66,0)
 ...S ECXIS=$P(ECCA,U,15),ECXISPC=$$PRVCLASS^ECXUTL(ECXIS,ECDT)
"RTN","ECXRAD",67,0)
 ...;prefix interpreting radiologist with a "2" if not null
"RTN","ECXRAD",68,0)
 ...S ECXIS=$S(ECXIS:"2"_ECXIS,1:"")
"RTN","ECXRAD",69,0)
 ...;get the principal clinic ien DBIA #65
"RTN","ECXRAD",70,0)
 ...S ECXPRCL=$P(ECCA,U,8)
"RTN","ECXRAD",71,0)
 ...;get the clinic stop code from file #44
"RTN","ECXRAD",72,0)
 ...S ECXCSC=$$GET1^DIQ(40.7,$$GET1^DIQ(44,ECXPRCL,8,"I"),1)
"RTN","ECXRAD",73,0)
 ...Q:'ECPRO 
"RTN","ECXRAD",74,0)
 ...Q:+ECSTAT=0
"RTN","ECXRAD",75,0)
 ...;get CPT code & modifiers
"RTN","ECXRAD",76,0)
 ...S ECPT=+$P($G(^RAMIS(71,+ECPRO,0)),U,9),ECXCMOD=""
"RTN","ECXRAD",77,0)
 ...;quit if this is a 'parent' procedure
"RTN","ECXRAD",78,0)
 ...S TYPE=$P($G(^RAMIS(71,+ECPRO,0)),U,6)
"RTN","ECXRAD",79,0)
 ...Q:((ECPT=0)&(TYPE="P"))
"RTN","ECXRAD",80,0)
 ...;if site is using radiology with cpt modifiers then get them
"RTN","ECXRAD",81,0)
 ...K ARR,ERR D FIELD^DID(70.03,135,,"LABEL","ARR","ERR")
"RTN","ECXRAD",82,0)
 ...I $D(ARR("LABEL")) D
"RTN","ECXRAD",83,0)
 ....K ARR,ERR D FIELD^DID(70.03,135,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXRAD",84,0)
 ....Q:$D(ERR("DIERR"))
"RTN","ECXRAD",85,0)
 ....S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";") S ECMOD=0
"RTN","ECXRAD",86,0)
 ....Q:'$D(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB))
"RTN","ECXRAD",87,0)
 ....F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,SUB,ECMOD)) Q:ECMOD'>0  S ECXCMOD=ECXCMOD_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",88,0)
 ...S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXRAD",89,0)
 ...;get procedure radiology modifiers
"RTN","ECXRAD",90,0)
 ...S ECMOD=0,ECMODS=""
"RTN","ECXRAD",91,0)
 ...F  S ECMOD=$O(^RADPT(ECXDFN,"DT",ECXMDA,"P",ECCN,"M",ECMOD)) Q:ECMOD'>0  S ECMODS=ECMODS_$P(^(ECMOD,0),U)_";"
"RTN","ECXRAD",92,0)
 ...S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV) ;p-46
"RTN","ECXRAD",93,0)
 ...D FILE
"RTN","ECXRAD",94,0)
 Q
"RTN","ECXRAD",95,0)
 ;
"RTN","ECXRAD",96,0)
FILE ;file record
"RTN","ECXRAD",97,0)
 ;node0
"RTN","ECXRAD",98,0)
 ;rad div^dfn^ssn^name^in/out (ECXA)^day^cpt code^procedure^img loc^ward^
"RTN","ECXRAD",99,0)
 ;ser^diag code^req physician^modifiers^mov #^treat spec^time^
"RTN","ECXRAD",100,0)
 ;imaging type^primary care team^primary care provider
"RTN","ECXRAD",101,0)
 ;node1
"RTN","ECXRAD",102,0)
 ;mpi^dss dept^req physician npi^pc provider npi^pc prov person class^
"RTN","ECXRAD",103,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^dom^
"RTN","ECXRAD",104,0)
 ;observ pat ind^encounter num^ord stop code^ord date^division^
"RTN","ECXRAD",105,0)
 ;dss product ECXDSSP^requesting provider person class ECDOCPC^interp-
"RTN","ECXRAD",106,0)
 ;reting radiologist ECXIS^interpreting radiologist pc ECXISPC^princi-
"RTN","ECXRAD",107,0)
 ;pal clinic ECXPRCL^clinc stop code ECXCSC^emergency response indicator
"RTN","ECXRAD",108,0)
 ;(FEMA) ECXERI
"RTN","ECXRAD",109,0)
 N DA,DIK
"RTN","ECXRAD",110,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXRAD",111,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXRAD",112,0)
 S ECODE=ECODE_ECXDAY_U_ECXCPT_U_ECPRO_U_ECLOC_U_ECXW_U_ECS_U_ECDI_U
"RTN","ECXRAD",113,0)
 S ECODE=ECODE_ECDOC_U_ECMODS_U_ECXMN_U_ECXTS_U_ECTM_U_ECTY_U_ECPTTM_U
"RTN","ECXRAD",114,0)
 S ECODE=ECODE_ECPTPR_U
"RTN","ECXRAD",115,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXRAD",116,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U_ECXORDST_U
"RTN","ECXRAD",117,0)
 S ECODE1=ECODE1_ECXORDDT_U_ECXPDIV_U
"RTN","ECXRAD",118,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_ECXDSSP_U_ECDOCPC
"RTN","ECXRAD",119,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXIS_U_ECXISPC_U_ECXPRCL_U_ECXCSC
"RTN","ECXRAD",120,0)
 I ECXLOGIC>2006 S ECODE1=ECODE1_U_ECXERI
"RTN","ECXRAD",121,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXRAD",122,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXRAD",123,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXRAD",124,0)
 Q
"RTN","ECXRAD",125,0)
 ;
"RTN","ECXRAD",126,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXRAD",127,0)
 S ECHEAD="RAD"
"RTN","ECXRAD",128,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXRAD",129,0)
 Q
"RTN","ECXSCX1")
0^37^B67082358^B65910787
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ; 8/17/06 7:59am
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31,33,84,92**;Dec 22, 1997;Build 30
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4)
"RTN","ECXSCX1",85,0)
 .I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",86,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",87,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",88,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",89,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",90,0)
 ..S:ECSC ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",91,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",92,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",93,0)
 ..Q:EC=""
"RTN","ECXSCX1",94,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",95,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",96,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",97,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",98,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",99,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",100,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",101,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2)
"RTN","ECXSCX1",102,0)
 ...S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",103,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",104,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",105,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",107,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",108,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",109,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",110,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",111,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",112,0)
 .;set data in ^tmp
"RTN","ECXSCX1",113,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",114,0)
 Q
"RTN","ECXSCX1",115,0)
 ;
"RTN","ECXSCX1",116,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",117,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",118,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",119,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",120,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",121,0)
 N AO,ARRAY,CM,CNT,CPT,DA,DATE,DA,DIQ,ICD,ICD9,IR,LEN,M,MOD,MST,NUM
"RTN","ECXSCX1",122,0)
 N PROV,PROVPC,REC,VAL,VISIT,X,Y,PGE
"RTN","ECXSCX1",123,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",124,0)
 S (ECXVIST("AO"),ECXVIST("IR"),ECXVIST("PGE"),ECXVIST("HNC"))=""
"RTN","ECXSCX1",125,0)
 S (ECXVIST("MST"),ECXVIST("PROV"),ECXVIST("PROV CLASS"))=""
"RTN","ECXSCX1",126,0)
 S (ECXVIST("PROV NPI"),ECXVIST("SOURCE"))=""
"RTN","ECXSCX1",127,0)
 F I="P",1,2,3,4 S ECXVIST("ICD9"_I)=""
"RTN","ECXSCX1",128,0)
 F I=1:1:8 S ECXVIST("CPT"_I)=""
"RTN","ECXSCX1",129,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",130,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",131,0)
 Q:ECXERR
"RTN","ECXSCX1",132,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",133,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",134,0)
 ;get icd9 codes upto 5; else use 799.9
"RTN","ECXSCX1",135,0)
 K ARY S ICD("P")=0,ICD("S")=0,(ARY,REC)=""
"RTN","ECXSCX1",136,0)
 F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:REC=""  D
"RTN","ECXSCX1",137,0)
 .S VAL=^TMP("PXKENC",$J,VISIT,"POV",REC,0) Q:'VAL
"RTN","ECXSCX1",138,0)
 .I $P(VAL,U,12)="P" D
"RTN","ECXSCX1",139,0)
 ..S:'$D(ARY("P",+VAL)) CNT=ICD("P")+1,ICD("P",CNT)=+VAL,ICD("P")=CNT
"RTN","ECXSCX1",140,0)
 ..S ARY("P",+VAL)=""
"RTN","ECXSCX1",141,0)
 .I $P(VAL,U,12)'="P" D
"RTN","ECXSCX1",142,0)
 ..S:'$D(ARY("S",+VAL)) CNT=ICD("S")+1,ICD("S",CNT)=+VAL,ICD("S")=CNT
"RTN","ECXSCX1",143,0)
 ..S ARY("S",+VAL)=""
"RTN","ECXSCX1",144,0)
 S CNT=0,ECXVIST("ICD9P")=$P($G(^ICD9(+$G(ICD("P",1),0),0)),U)
"RTN","ECXSCX1",145,0)
 F I=2:1 Q:'$D(ICD("P",I))  D  Q:CNT>4
"RTN","ECXSCX1",146,0)
 .S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("P",I),0)),U)
"RTN","ECXSCX1",147,0)
 I CNT<4 F I=1:1:8 Q:'$D(ICD("S",I))  D  Q:CNT>4
"RTN","ECXSCX1",148,0)
 .I '$D(ARY("P",ICD("S",I))) D
"RTN","ECXSCX1",149,0)
 ..S CNT=CNT+1,ECXVIST("ICD9"_CNT)=$P($G(^ICD9(ICD("S",I),0)),U)
"RTN","ECXSCX1",150,0)
 S:(ECXVIST("ICD9P")="")&(ECXVIST("ICD91")="") ECXVIST("ICD9P")="799.9"
"RTN","ECXSCX1",151,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",152,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",153,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",154,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",155,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",156,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",157,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",158,0)
 ...S:($P(^(REC,0),U,4)="P") VAL=+^(0)
"RTN","ECXSCX1",159,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",160,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",161,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:('REC)!(VAL)  D
"RTN","ECXSCX1",162,0)
 ...S (PROV,VAL)=+^(REC,0)
"RTN","ECXSCX1",163,0)
 ...S PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",164,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",165,0)
 .I 'VAL D
"RTN","ECXSCX1",166,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:('REC)!(VAL)
"RTN","ECXSCX1",167,0)
 ..S VAL=+^(REC,0),PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",168,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",169,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC
"RTN","ECXSCX1",170,0)
 S ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",171,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",172,0)
 S CNT=1,PROV=$E(PROV,2,99)
"RTN","ECXSCX1",173,0)
 D:$O(^TMP("PXKENC",$J,VISIT,"CPT",0))
"RTN","ECXSCX1",174,0)
 .S REC=0 D:PROV]""
"RTN","ECXSCX1",175,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",176,0)
 ...S CPT="",NODE=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,12))
"RTN","ECXSCX1",177,0)
 ...Q:NODE=""
"RTN","ECXSCX1",178,0)
 ...S NOD1=$S($P(NODE,U,4)=PROV:^TMP("PXKENC",$J,VISIT,"CPT",REC,0),1:"")
"RTN","ECXSCX1",179,0)
 ...Q:$P(NOD1,U)=""
"RTN","ECXSCX1",180,0)
 ...S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",181,0)
 ...S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",182,0)
 ...F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",183,0)
 ....S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",184,0)
 ....S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",185,0)
 ...S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",186,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",187,0)
 ..Q:CNT>8
"RTN","ECXSCX1",188,0)
 .Q:CNT>8  S REC=0
"RTN","ECXSCX1",189,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  D  Q:CNT>8
"RTN","ECXSCX1",190,0)
 ..S CPT="",NOD1=$G(^TMP("PXKENC",$J,VISIT,"CPT",REC,0))
"RTN","ECXSCX1",191,0)
 ..Q:$P(NOD1,U)=""
"RTN","ECXSCX1",192,0)
 ..S Q="00"_+$P(NOD1,U,16),Q=$S(+Q:$E(Q,$L(Q)-1,$L(Q)),1:"01")
"RTN","ECXSCX1",193,0)
 ..S CPT=$P(NOD1,U),M=0,MOD=""
"RTN","ECXSCX1",194,0)
 ..F I=1:1:5 S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  D
"RTN","ECXSCX1",195,0)
 ...S MOD=MOD_$S(MOD'="":";",1:"")
"RTN","ECXSCX1",196,0)
 ...S MOD=MOD_$P(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0),U)
"RTN","ECXSCX1",197,0)
 ..S ECXVIST("CPT"_CNT)=$$CPT^ECXUTL3(CPT,MOD,Q),CNT=CNT+1
"RTN","ECXSCX1",198,0)
 ..K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",199,0)
 ..Q:CNT>8
"RTN","ECXSCX1",200,0)
 S:ECXVIST("CPT1")="" ECXVIST("CPT1")=9919901
"RTN","ECXSCX1",201,0)
 ;ao, ir, mst, pge, hnc
"RTN","ECXSCX1",202,0)
 S (AO,IR,MST,PGE,HNC)=""
"RTN","ECXSCX1",203,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",204,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2)
"RTN","ECXSCX1",205,0)
 .S IR=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",206,0)
 .S PGE=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,4),HNC=$P(^(800),U,6)
"RTN","ECXSCX1",207,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",208,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",209,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",210,0)
 .S ECXVIST("PGE")=$S(PGE=0:"N",PGE=1:"Y",1:"")
"RTN","ECXSCX1",211,0)
 .S ECXVIST("HNC")=$S(HNC=0:"N",HNC=1:"Y",1:"")
"RTN","ECXSCX1",212,0)
 Q
"RTN","ECXSCX2")
0^12^B8207597^B7985175
"RTN","ECXSCX2",1,0)
ECXSCX2 ;ALB/ESD  DSS Clinic Extract Utilities (continued) ; 11/2/06 8:59am
"RTN","ECXSCX2",2,0)
 ;;3.0;DSS EXTRACTS;**39,46,49,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXSCX2",3,0)
 ;
"RTN","ECXSCX2",4,0)
 ;
"RTN","ECXSCX2",5,0)
INTPAT ;initialize patient variables
"RTN","ECXSCX2",6,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCX2",7,0)
 S (ECPTTM,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCX2",8,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE)=""
"RTN","ECXSCX2",9,0)
 S (ECXCNTY,ECXATYP,ECXPVST,ECXMTST,ECXEST,ECXECE,ECXHNC)=""
"RTN","ECXSCX2",10,0)
 Q
"RTN","ECXSCX2",11,0)
 ;
"RTN","ECXSCX2",12,0)
PAT1(ECXDFN,ECXDATE,ECXERR)     ;get patient demographic data
"RTN","ECXSCX2",13,0)
 N ECXPAT,K,OK,X
"RTN","ECXSCX2",14,0)
 S ECXERR=0
"RTN","ECXSCX2",15,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCX2",16,0)
 I 'OK S ECXERR=1 Q
"RTN","ECXSCX2",17,0)
 S ECXSSN=ECXPAT("SSN"),ECXPNM=ECXPAT("NAME"),ECXMPI=ECXPAT("MPI")
"RTN","ECXSCX2",18,0)
 S ECXSEX=ECXPAT("SEX"),ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCX2",19,0)
 S ECXVET=ECXPAT("VET"),ECXSVC=ECXPAT("SC%"),ECXRACE=ECXPAT("RACE")
"RTN","ECXSCX2",20,0)
 S ECXPST=ECXPAT("POW STAT"),ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCX2",21,0)
 S ECXRST=ECXPAT("IR STAT"),ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCX2",22,0)
 S ECXMST=ECXPAT("MST STAT"),ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCX2",23,0)
 S ECXCNTY=ECXPAT("COUNTY"),ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCX2",24,0)
 S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXSCX2",25,0)
 ; changes for 2001
"RTN","ECXSCX2",26,0)
 S ECXPOS=ECXPAT("POS"),ECXPHI=ECXPAT("PHI")
"RTN","ECXSCX2",27,0)
 ;- Agent Orange location
"RTN","ECXSCX2",28,0)
 S ECXAOL=ECXPAT("AOL")
"RTN","ECXSCX2",29,0)
 I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXSCX2",30,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSCX2",31,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSCX2",32,0)
 ; - Race and Ethnicity
"RTN","ECXSCX2",33,0)
 S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXSCX2",34,0)
 S ECXRC1=ECXPAT("RACE1")
"RTN","ECXSCX2",35,0)
 ; - Environmental Contaminants
"RTN","ECXSCX2",36,0)
 S ECXEST=ECXPAT("EC STAT")
"RTN","ECXSCX2",37,0)
 ;get emergency response indicator (FEMA)
"RTN","ECXSCX2",38,0)
 S ECXERI=ECXPAT("ERI")
"RTN","ECXSCX2",39,0)
 Q
"RTN","ECXSCX2",40,0)
 ;
"RTN","ECXSCX2",41,0)
PAT2(ECXDFN,ECXDATE)    ;get date specific patient data
"RTN","ECXSCX2",42,0)
 N K,X
"RTN","ECXSCX2",43,0)
 ;get primary care data
"RTN","ECXSCX2",44,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCX2",45,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXSCX2",46,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXSCX2",47,0)
 ;get inpatient data
"RTN","ECXSCX2",48,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXTS=$P(X,U,3)
"RTN","ECXSCX2",49,0)
 S ECXDOM=$P(X,U,10),ECXADMDT=$P(X,U,4)
"RTN","ECXSCX2",50,0)
 ;- set national patient record flag if exist
"RTN","ECXSCX2",51,0)
 D NPRF^ECXUTL5
"RTN","ECXSCX2",52,0)
 Q
"RTN","ECXSCX2",53,0)
 ;
"RTN","ECXSCX2",54,0)
FILE2(ECXFILE,EC7,ECODE) ;file record
"RTN","ECXSCX2",55,0)
 N DA,DIK,X S X=""
"RTN","ECXSCX2",56,0)
 F  S X=$O(ECODE(X)) Q:X=""  S ^ECX(ECXFILE,EC7,X)=ECODE(X)
"RTN","ECXSCX2",57,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSCX2",58,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCX2",59,0)
 Q
"RTN","ECXSCX2",60,0)
 ;
"RTN","ECXSCX2",61,0)
CBOC(MDIV) ;Determine whether patient's facility was CBOC
"RTN","ECXSCX2",62,0)
 N LOCARR,DIC,DR,DIQ,DA,INST,FTYP
"RTN","ECXSCX2",63,0)
 S DIC=40.8,DA=MDIV,DR=".07",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",64,0)
 S INST=$G(LOCARR(40.8,MDIV,.07,"I")) I INST="" Q ""
"RTN","ECXSCX2",65,0)
 K LOCARR S DIC=4,DA=INST,DR="13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",66,0)
 S FTYP=$G(LOCARR(4,INST,13,"I")) I FTYP="" Q ""
"RTN","ECXSCX2",67,0)
 K LOCARR S DIC=4.1,DA=FTYP,DR=".01",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCX2",68,0)
 Q $S($G(LOCARR(4.1,FTYP,.01,"I"))="CBOC":"Y",1:"")
"RTN","ECXSCXN")
0^13^B53946151^B53183889
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 5/9/05 1:15pm
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31,32,33,39,46,49,52,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP Q:ECFILE=""  D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",6,0)
 Q
"RTN","ECXSCXN",7,0)
 ;
"RTN","ECXSCXN",8,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",9,0)
 N DIC,EXNUM,I,LOCARR,OUT,P1,P2,P3,PROCESS,SOURCE,STOP,STAT,TOSEND
"RTN","ECXSCXN",10,0)
 N TIU,X,Y,ECXNPRFI
"RTN","ECXSCXN",11,0)
 F I=1:1:8 S @("ECXCPT"_I)=""
"RTN","ECXSCXN",12,0)
 F I=1:1:4 S @("ECXICD9"_I)=""
"RTN","ECXSCXN",13,0)
 S (OUT,QFLG,ECRN)=0,(ECXICD9P,ECXOBI)=""
"RTN","ECXSCXN",14,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",15,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",16,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES"
"RTN","ECXSCXN",17,0)
 D ^DIC S TIU=+Y,ECED=ECED+.3,ECXCLIN=0 K DIC,Y
"RTN","ECXSCXN",18,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",19,0)
 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",20,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",21,0)
 .D EN^DIQ1
"RTN","ECXSCXN",22,0)
 .Q:$G(LOCARR(44,ECXCLIN,2,"I"))'="C"
"RTN","ECXSCXN",23,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I"))
"RTN","ECXSCXN",24,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",25,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",26,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",27,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",28,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",29,0)
 D NOSHOW^ECXSCXN1(ECSD1,ECED),ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",30,0)
 ;send missing clinic msg
"RTN","ECXSCXN",31,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",32,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",33,0)
 Q
"RTN","ECXSCXN",34,0)
 ;
"RTN","ECXSCXN",35,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",36,0)
 N CHKOUT,ECD,JJ,K,OUT,PNODE,PP,STAT,STOP,MDIV
"RTN","ECXSCXN",37,0)
 S ECD=ECSD1
"RTN","ECXSCXN",38,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:('ECD!(ECD>ECED))!(QFLG)  S ECXIEN=0 D
"RTN","ECXSCXN",39,0)
 .F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  Q:QFLG
"RTN","ECXSCXN",40,0)
 ..Q:'$D(^SCE(ECXIEN,0))
"RTN","ECXSCXN",41,0)
 ..D INTPAT^ECXSCX2 K LOCARR S DIC=409.68,DA=ECXIEN
"RTN","ECXSCXN",42,0)
 ..S DR=".01;.02;.03;.04;.05;.06;.07;.08;.11;.12;.13",DIQ(0)="I",DIQ="LOCARR"
"RTN","ECXSCXN",43,0)
 ..D EN^DIQ1
"RTN","ECXSCXN",44,0)
 ..S ECXTI=$P($$FMTE^XLFDT(+$G(LOCARR(409.68,ECXIEN,.01,"I")),1),"@",2)
"RTN","ECXSCXN",45,0)
 ..S ECXTI=$E(($TR(ECXTI,":","")_"000000"),1,6)
"RTN","ECXSCXN",46,0)
 ..S:ECXTI="000000" ECXTI="000300" S MDIV=+$G(LOCARR(409.68,ECXIEN,.11,"I"))
"RTN","ECXSCXN",47,0)
 ..S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I"))
"RTN","ECXSCXN",48,0)
 ..S CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I"))
"RTN","ECXSCXN",49,0)
 ..S PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I"))
"RTN","ECXSCXN",50,0)
 ..S STAT=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",51,0)
 ..S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I"))
"RTN","ECXSCXN",52,0)
 ..Q:(ECXDFN=0)!('CHKOUT)
"RTN","ECXSCXN",53,0)
 ..S:STAT="" STAT="ZZ" S STAT=";"_STAT_";"
"RTN","ECXSCXN",54,0)
 ..Q:";3;4;5;6;7;9;10;13;"[STAT
"RTN","ECXSCXN",55,0)
 ..Q:('STOP)!(PROCESS=4)!(+$G(LOCARR(409.68,ECXIEN,.06,"I")))
"RTN","ECXSCXN",56,0)
 ..S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I"))
"RTN","ECXSCXN",57,0)
 ..S ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",58,0)
 ..Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",59,0)
 ..S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I"))
"RTN","ECXSCXN",60,0)
 ..S ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",61,0)
 ..Q:'ECXVISIT
"RTN","ECXSCXN",62,0)
 ..S ECXERR=0
"RTN","ECXSCXN",63,0)
 ..D PAT1^ECXSCX2(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",64,0)
 ..D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",65,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",66,0)
 ..K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",67,0)
 ..S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",68,0)
 ..;get date specific patient data
"RTN","ECXSCXN",69,0)
 ..D PAT2^ECXSCX2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",70,0)
 ..;get national patient record flag if exist
"RTN","ECXSCXN",71,0)
 ..D NPRF^ECXUTL5
"RTN","ECXSCXN",72,0)
 ..;get visit specific data
"RTN","ECXSCXN",73,0)
 ..S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",74,0)
 ..F I=1:1:8 S @("ECXCPT"_I)=$G(ECXVIST("CPT"_I))
"RTN","ECXSCXN",75,0)
 ..S ECXICD9P=$G(ECXVIST("ICD9P"))
"RTN","ECXSCXN",76,0)
 ..F I=1:1:4 S @("ECXICD9"_I)=$G(ECXVIST("ICD9"_I))
"RTN","ECXSCXN",77,0)
 ..S SOURCE=ECXVIST("SOURCE"),ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR")
"RTN","ECXSCXN",78,0)
 ..S ECXMIL=ECXVIST("MST"),ECXPROV=ECXVIST("PROV")
"RTN","ECXSCXN",79,0)
 ..S ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",80,0)
 ..S ECXECE=ECXVIST("PGE"),ECXHNC=ECXVIST("HNC")
"RTN","ECXSCXN",81,0)
 ..K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",82,0)
 ..S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I"))
"RTN","ECXSCXN",83,0)
 ..S:ECXENEL ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",84,0)
 ..S ECXCBOC=$S(MDIV'="":$$CBOC^ECXSCX2(.MDIV),1:"")  ;is cboc facility?
"RTN","ECXSCXN",85,0)
 ..;setup feeder key and file in extract records
"RTN","ECXSCXN",86,0)
 ..S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",87,0)
 ..;xray (105) or lab (108)
"RTN","ECXSCXN",88,0)
 ..I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",89,0)
 ...S ECXKEY=ECXSTOP_"00003000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",90,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE       ;- Don't file rec if no encounter num
"RTN","ECXSCXN",91,0)
 ..;appointments
"RTN","ECXSCXN",92,0)
 ..I PROCESS=1 D  Q     ;get appt length
"RTN","ECXSCXN",93,0)
 ...S (ALEN,JJ,OUT)=0
"RTN","ECXSCXN",94,0)
 ...F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:('JJ)!(OUT)  S K=0 D
"RTN","ECXSCXN",95,0)
 ....F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:('K)!(OUT)  D
"RTN","ECXSCXN",96,0)
 .....S ECXOBI=$G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,"OB")),PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U)
"RTN","ECXSCXN",97,0)
 .....S:PP=ECXDFN OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",98,0)
 .....S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",99,0)
 ....S ECXSTOP=P1
"RTN","ECXSCXN",100,0)
 ....S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)),ECXPVST=$P(PNODE,U,7),ECXATYP=$P(PNODE,U,16)  ;Get purpose of visit & appt type
"RTN","ECXSCXN",101,0)
 ....I TOSEND'=3 D
"RTN","ECXSCXN",102,0)
 .....S ECXKEY=P1_P2_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",103,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",104,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",105,0)
 .....S ECXKEY=P1_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",106,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",107,0)
 ....I TOSEND=3 D
"RTN","ECXSCXN",108,0)
 .....S ECXKEY=P2_"000"_ALEN_P3_"0",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",109,0)
 .....S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",110,0)
 ..I PROCESS=2 D  Q
"RTN","ECXSCXN",111,0)
 ...S ALEN=0
"RTN","ECXSCXN",112,0)
 ...I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",113,0)
 ...S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",114,0)
 ...S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",115,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",116,0)
 ..;dispositions
"RTN","ECXSCXN",117,0)
 ..I PROCESS=3 D  Q
"RTN","ECXSCXN",118,0)
 ...S ECXKEY=ECXSTOP_"47906000000",ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECXKEY)
"RTN","ECXSCXN",119,0)
 ...S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXKEY,) D:ECXENC'="" FILE
"RTN","ECXSCXN",120,0)
 Q
"RTN","ECXSCXN",121,0)
 ;
"RTN","ECXSCXN",122,0)
FILE ;record setup for file #727.827
"RTN","ECXSCXN",123,0)
 N STR
"RTN","ECXSCXN",124,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)  ; Get production division
"RTN","ECXSCXN",125,0)
 S EC7=$O(^ECX(727.827,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",126,0)
 S STR(0)=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSCXN",127,0)
 S STR(0)=STR(0)_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY_U_ECXOBI_U
"RTN","ECXSCXN",128,0)
 S STR(0)=STR(0)_ECXCLIN_U_ECXTS_U_ECXTI_U_ECPTTM_U_ECPTPR_U_ECCLAS_U
"RTN","ECXSCXN",129,0)
 S STR(0)=STR(0)_ECXPROV_U_ECXPROVP_U_ECXCPT1_U_ECXCPT2_U_ECXCPT3_U
"RTN","ECXSCXN",130,0)
 S STR(0)=STR(0)_ECXCPT4_U_ECXCPT5_U
"RTN","ECXSCXN",131,0)
 S STR(1)=ECXCPT6_U_ECXCPT7_U_ECXCPT8_U_ECXICD9P_U_ECXICD91_U_ECXICD92_U
"RTN","ECXSCXN",132,0)
 S STR(1)=STR(1)_ECXICD93_U_ECXICD94_U_ECXDOB_U_ECXELIG_U_ECXVET_U
"RTN","ECXSCXN",133,0)
 S STR(1)=STR(1)_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXIR_U_ECXAST_U
"RTN","ECXSCXN",134,0)
 S STR(1)=STR(1)_ECXAO_U_ECXMPI_U_ECXDSSD_U_ECXSEX_U_ECXZIP_U
"RTN","ECXSCXN",135,0)
 S STR(1)=STR(1)_$G(ECXPCPNP)_U_$G(ECXNPIPR)_U_ECXENEL_U_ECXMST_U
"RTN","ECXSCXN",136,0)
 S STR(1)=STR(1)_ECXMIL_U_U_U_ECXENRL_U_ECXSTATE_U
"RTN","ECXSCXN",137,0)
 S STR(1)=STR(1)_ECXCNTY_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXCAT_U
"RTN","ECXSCXN",138,0)
 S STR(2)=ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPHI_U_ECXPOS_U_ECXOBS_U_ECXENC_U
"RTN","ECXSCXN",139,0)
 S STR(2)=STR(2)_ECXAOL_U_ECXPDIV_U_ECXATYP_U_ECXPVST_U_ECXMTST_U
"RTN","ECXSCXN",140,0)
 S STR(2)=STR(2)_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXSCXN",141,0)
 I ECXLOGIC>2003 S STR(2)=STR(2)_U_ECXCBOC
"RTN","ECXSCXN",142,0)
 I ECXLOGIC>2004 S STR(2)=STR(2)_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXSCXN",143,0)
 I ECXLOGIC>2005 S STR(2)=STR(2)_U_ECXEST_U_ECXECE
"RTN","ECXSCXN",144,0)
 I ECXLOGIC>2006 S STR(2)=STR(2)_U_ECXERI_U_ECXHNC
"RTN","ECXSCXN",145,0)
 D FILE2^ECXSCX2(727.827,EC7,.STR)
"RTN","ECXSCXN",146,0)
 S ECRN=ECRN+1,$P(^ECX(727.827,0),U,3)=EC7
"RTN","ECXSCXN",147,0)
 Q
"RTN","ECXSCXN",148,0)
 ;
"RTN","ECXSCXN",149,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",150,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",151,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",152,0)
 Q
"RTN","ECXSURG")
0^22^B58013169^B54498715
"RTN","ECXSURG",1,0)
ECXSURG ;ALB/JA,BIR/DMA,PTD-Surgery Extract for DSS ; 11/2/06 9:00am
"RTN","ECXSURG",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,25,24,33,39,41,42,46,50,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXSURG",3,0)
BEG ;entry point from option
"RTN","ECXSURG",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSURG",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSURG",6,0)
 Q
"RTN","ECXSURG",7,0)
 ;
"RTN","ECXSURG",8,0)
START ;
"RTN","ECXSURG",9,0)
 S QFLG=0,ECED=ECED+.3,ECD=ECSD1
"RTN","ECXSURG",10,0)
 F  S ECD=$O(^SRF("AC",ECD)),ECD0=0 Q:('ECD)!(ECD>ECED)!(QFLG)  D
"RTN","ECXSURG",11,0)
 .F  S ECD0=$O(^SRF("AC",ECD,ECD0)) Q:'ECD0  D
"RTN","ECXSURG",12,0)
 ..I $D(^SRF(ECD0,0)) S EC=^SRF(ECD0,0),ECXDFN=+$P(EC,U),ECXVISIT=$P(EC,U,15) D STUFF Q:QFLG
"RTN","ECXSURG",13,0)
 Q
"RTN","ECXSURG",14,0)
 ;
"RTN","ECXSURG",15,0)
STUFF ;gather data
"RTN","ECXSURG",16,0)
 N J,X,Y,PP,DATA1,DATA2,DATAOP,ARR,ERR,SUB,MOD,ECXNONL,ECXSTOP,TIMEDIF
"RTN","ECXSURG",17,0)
 N ECPRO,ECXORCT,ECXPTHA,ECXNPRFI,ECXPA,ECXPAPC,ECSRPC,ECATPC,ECSAPC
"RTN","ECXSURG",18,0)
 S ECXDATE=ECD,ECXERR=0,ECXQ=""
"RTN","ECXSURG",19,0)
 Q:'$$PATDEM^ECXUTL2(ECXDFN,ECXDATE,"1;2;3;5;")
"RTN","ECXSURG",20,0)
 I ECXADMDT="" S ECXADD=ECXADMDT
"RTN","ECXSURG",21,0)
 I ECXADMDT'="" S ECXADD=$$ECXDATE^ECXUTL(ECXADMDT,ECXYM)
"RTN","ECXSURG",22,0)
 S EC0=^SRF(ECD0,0)
"RTN","ECXSURG",23,0)
 S DATA1=$S($D(^SRF(ECD0,.1)):^(.1),1:"")
"RTN","ECXSURG",24,0)
 S DATA2=$S($D(^SRF(ECD0,.2)):^(.2),1:"")
"RTN","ECXSURG",25,0)
 S DATAOP=$S($D(^SRF(ECD0,"OP")):^("OP"),1:"")
"RTN","ECXSURG",26,0)
 S ECNO=$G(^SRF(ECD0,"NON"))
"RTN","ECXSURG",27,0)
 ;get data
"RTN","ECXSURG",28,0)
 S ECSR=$P(DATA1,U,4),(ECATNPI,ECSANPI,ECSRNPI)="",ECAT=$P(DATA1,U,13)
"RTN","ECXSURG",29,0)
 ;-Time patient in OR room (Nurse Time)
"RTN","ECXSURG",30,0)
 S ECXTM=$$ECXTIME^ECXUTL($P(DATA2,U,10))
"RTN","ECXSURG",31,0)
 S ECXDIV=$S($D(^SRF(ECD0,8)):^(8),1:ECINST)
"RTN","ECXSURG",32,0)
 N ECXPDIV S ECXPDIV=$$RADDIV^ECXDEPT(ECXDIV)  ;Production Division
"RTN","ECXSURG",33,0)
 S ECSA=$P($G(^SRF(ECD0,.3)),U,4),ECO=$P(EC0,U,2)
"RTN","ECXSURG",34,0)
 ;get principle anesthetist and person class DBIA #103
"RTN","ECXSURG",35,0)
 S ECXPA=$P($G(^SRF(ECD0,.3)),U,1)
"RTN","ECXSURG",36,0)
 S ECXPAPC=$$PRVCLASS^ECXUTL(ECXPA,ECXDATE)
"RTN","ECXSURG",37,0)
 S ECORTY=$P($G(^SRS(+ECO,2)),U),ECO=$P($G(^SRS(+ECO,0)),U)
"RTN","ECXSURG",38,0)
 S ECSS=$P($G(^SRO(137.45,+$P(EC0,U,4),0)),U,2)
"RTN","ECXSURG",39,0)
 S ECSS=$$RJ^XLFSTR($P($G(^DIC(45.3,+ECSS,0)),U),3,0)
"RTN","ECXSURG",40,0)
 S:ECSS="000" ECSS="999"
"RTN","ECXSURG",41,0)
 ;get classification information
"RTN","ECXSURG",42,0)
 S (ECXAO,ECXHNC)="" I ECXVISIT'="" D
"RTN","ECXSURG",43,0)
 .D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) I ECXERR K ECXERR
"RTN","ECXSURG",44,0)
 .S ECXAO=$G(ECXVIST("AO")),ECXHNC=$G(ECXVIST("HNC"))
"RTN","ECXSURG",45,0)
 ; - Head and Neck Cancer Indicator
"RTN","ECXSURG",46,0)
 S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXSURG",47,0)
 ;look for non-OR
"RTN","ECXSURG",48,0)
 S (ECNT,ECNL,ECXDSSD,ECXNONL,ECXSTOP)=""
"RTN","ECXSURG",49,0)
 I $P(ECNO,U)="Y" D
"RTN","ECXSURG",50,0)
 .S ECSR=$P(ECNO,U,6),ECAT=$P(ECNO,U,7)
"RTN","ECXSURG",51,0)
 .S ECXTM=$$ECXTIME^ECXUTL($P(ECNO,U,4))
"RTN","ECXSURG",52,0)
 .S A1=$P(ECNO,U,5),A2=$P(ECNO,U,4),TIME="##" D:(A1&A2) TIME S ECNT=TIME
"RTN","ECXSURG",53,0)
 .S (ECXNONL,ECNL)=+$P(ECNO,U,2),ECNL=$P($G(^ECX(728.44,ECNL,0)),U,9)
"RTN","ECXSURG",54,0)
 .S:ECNL="" ECNL="UNKNOWN"
"RTN","ECXSURG",55,0)
 .;
"RTN","ECXSURG",56,0)
 .;- Get DSS Stop Code to use in encounter number
"RTN","ECXSURG",57,0)
 .S ECXSTOP=$P($G(^ECX(728.44,ECXNONL,0)),U,4)
"RTN","ECXSURG",58,0)
 ;
"RTN","ECXSURG",59,0)
 ;- If surgery cancelled/aborted quit and go to next record
"RTN","ECXSURG",60,0)
 S ECCAN=$P($G(^SRF(ECD0,30)),U)
"RTN","ECXSURG",61,0)
 I +ECCAN S ECCAN=$$CANC^ECXUTL4(ECNL,$P(DATA2,U,10))
"RTN","ECXSURG",62,0)
 ;on hold for ECXDSSD and ECXDSSP I $P($G(^SRF(ECD0,30)),U) Q
"RTN","ECXSURG",63,0)
 ;get service of attending surgeon
"RTN","ECXSURG",64,0)
 S ECATSV=$P($G(^DIC(49,+$G(^VA(200,+ECAT,5)),730)),U)
"RTN","ECXSURG",65,0)
 ;
"RTN","ECXSURG",66,0)
 ;get surgeon, attending and anesthesia super person classes
"RTN","ECXSURG",67,0)
 S ECSRPC=$$PRVCLASS^ECXUTL(ECSR,ECXDATE)
"RTN","ECXSURG",68,0)
 S ECATPC=$$PRVCLASS^ECXUTL(ECAT,ECXDATE)
"RTN","ECXSURG",69,0)
 S ECSAPC=$$PRVCLASS^ECXUTL(ECSA,ECXDATE)
"RTN","ECXSURG",70,0)
 ;
"RTN","ECXSURG",71,0)
 ;add leading 2s for pointer to 200
"RTN","ECXSURG",72,0)
 S:ECAT ECAT="2"_ECAT S:ECSR ECSR="2"_ECSR S:ECSA ECSA="2"_ECSA
"RTN","ECXSURG",73,0)
 ;add leading 2 to principle anesthetist IEN
"RTN","ECXSURG",74,0)
 S:ECXPA ECXPA="2"_ECXPA
"RTN","ECXSURG",75,0)
 ;anesthesia technique
"RTN","ECXSURG",76,0)
 S ECANE="",PP=""
"RTN","ECXSURG",77,0)
 I $D(^SRF(ECD0,6,0)) S ECXJ=0 D
"RTN","ECXSURG",78,0)
 .F  S ECXJ=$O(^SRF(ECD0,6,ECXJ)) Q:('ECXJ)!(ECANE]"")  D
"RTN","ECXSURG",79,0)
 ..S PP=$P($G(^(ECXJ,0)),U,3) S:PP="Y" ECANE=$P(^(0),U,1)
"RTN","ECXSURG",80,0)
 .I ECANE="" S ECXJ=$O(^SRF(ECD0,6,0)) I ECXJ S ECANE=$P(^SRF(ECD0,6,ECXJ,0),U,1)
"RTN","ECXSURG",81,0)
 ;get primary procedure
"RTN","ECXSURG",82,0)
 ;ecode0=p^cpt code^^patient time^operation time^anesthesia time
"RTN","ECXSURG",83,0)
 S ECPT=+$P(DATAOP,U,2),ECXCMOD=""
"RTN","ECXSURG",84,0)
 K ARR,ERR D FIELD^DID(130,28,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",85,0)
 .K ARR,ERR D FIELD^DID(130,28,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",86,0)
 .Q:$D(ERR("DIERR"))
"RTN","ECXSURG",87,0)
 .S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",88,0)
 .F  S MOD=$O(^SRF(ECD0,SUB,MOD)) Q:MOD'>0  D
"RTN","ECXSURG",89,0)
 ..S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",90,0)
 S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",91,0)
 S ECODE0="P"_U_U  ;ECPT_U
"RTN","ECXSURG",92,0)
 F J="10,12","2,3","1,4" D
"RTN","ECXSURG",93,0)
 .N ECNTIME,ECSTIME,ECATIME
"RTN","ECXSURG",94,0)
 .S A2=$P(DATA2,U,$P(J,",")),A1=$P(DATA2,U,$P(J,",",2)),TIME="##"
"RTN","ECXSURG",95,0)
 .I (A1&A2)&(+J=10) D TIME  S ECNTIME=TIME
"RTN","ECXSURG",96,0)
 .I (A1&A2)&(+J=1) D TIME  S ECATIME=TIME
"RTN","ECXSURG",97,0)
 .I (A1&A2)&(+J=2) D
"RTN","ECXSURG",98,0)
 ..;
"RTN","ECXSURG",99,0)
 ..;-Operation Time (Surgeon Time)
"RTN","ECXSURG",100,0)
 ..;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",101,0)
 ..S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",102,0)
 ..S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",103,0)
 ..S TIME=$TR($J(TIMEDIF,4,0)," ")
"RTN","ECXSURG",104,0)
 ..S:TIME<0 TIME="###"
"RTN","ECXSURG",105,0)
 ..S:TIME ECSTIME=TIME
"RTN","ECXSURG",106,0)
 .S ECODE0=ECODE0_U_TIME K TIME
"RTN","ECXSURG",107,0)
 ; -Recovery Room Time
"RTN","ECXSURG",108,0)
 S ECRR=""
"RTN","ECXSURG",109,0)
 I $D(^SRF(ECD0,1.1)) D
"RTN","ECXSURG",110,0)
 .S A1=$P(^(1.1),U,8),A2=$P(^(1.1),U,7),TIME="##" D:(A1&A2) TIME
"RTN","ECXSURG",111,0)
 .S ECRR=TIME K TIME
"RTN","ECXSURG",112,0)
 I ECNL]"" S $P(ECODE0,U,5)=ECNT
"RTN","ECXSURG",113,0)
 ;
"RTN","ECXSURG",114,0)
 ; -OR Clean Time in 15 min increments DBIA #103
"RTN","ECXSURG",115,0)
 S ECXORCT=($$FMDIFF^XLFDT($P($G(DATA2),U,14),$P($G(DATA2),U,13),2)/60)/15
"RTN","ECXSURG",116,0)
 ; -If no OR clean time recorded set it to 2
"RTN","ECXSURG",117,0)
 I ECXORCT'>0 S ECXORCT=2
"RTN","ECXSURG",118,0)
 ;
"RTN","ECXSURG",119,0)
 ; -PT in hold area time in 15 min increments DBIA #103
"RTN","ECXSURG",120,0)
 I $P($G(DATA2),U,10),$P($G(DATA2),U,15) D
"RTN","ECXSURG",121,0)
 .S ECXPTHA=($$FMDIFF^XLFDT($P($G(DATA2),U,10),$P($G(DATA2),U,15),2)/60)/15
"RTN","ECXSURG",122,0)
 .S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",123,0)
 .I CON S ECXPTHA=ECXPTHA/2
"RTN","ECXSURG",124,0)
 .S ECXPTHA=$TR($J(ECXPTHA,3,0)," ")
"RTN","ECXSURG",125,0)
 ; -If hold time is =<0 set it to ""
"RTN","ECXSURG",126,0)
 S:$G(ECXPTHA)'>0 ECXPTHA=""
"RTN","ECXSURG",127,0)
 ;
"RTN","ECXSURG",128,0)
 ;- Observation Patient Indicator (yes/no)
"RTN","ECXSURG",129,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS,ECNL)
"RTN","ECXSURG",130,0)
 ;
"RTN","ECXSURG",131,0)
 ;- set national patient record flag if exist
"RTN","ECXSURG",132,0)
 D NPRF^ECXUTL5
"RTN","ECXSURG",133,0)
 ;
"RTN","ECXSURG",134,0)
 ;- If no encounter number don't file record
"RTN","ECXSURG",135,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,ECXDATE,ECXTS,ECXOBS,ECHEAD,ECXSTOP,ECSS) Q:ECXENC=""
"RTN","ECXSURG",136,0)
 ;
"RTN","ECXSURG",137,0)
 D FILE
"RTN","ECXSURG",138,0)
 ;get secondary procedures
"RTN","ECXSURG",139,0)
 ;ecode0=s^cpt code
"RTN","ECXSURG",140,0)
 S ECXJ=0
"RTN","ECXSURG",141,0)
 F  S ECXJ=$O(^SRF(ECD0,13,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)),$D(^(2)),$P(^(2),U)]"" D
"RTN","ECXSURG",142,0)
 .S ECPT=$P(^SRF(ECD0,13,ECXJ,2),U),ECXCMOD=""
"RTN","ECXSURG",143,0)
 .K ARR,ERR
"RTN","ECXSURG",144,0)
 .D FIELD^DID(130.16,4,,"LABEL","ARR","ERR") I $D(ARR("LABEL")) D
"RTN","ECXSURG",145,0)
 ..K ARR,ERR
"RTN","ECXSURG",146,0)
 ..D FIELD^DID(130.16,4,,"GLOBAL SUBSCRIPT LOCATION","ARR","ERR")
"RTN","ECXSURG",147,0)
 ..Q:$D(ERR("DIERR"))
"RTN","ECXSURG",148,0)
 ..S SUB=$P(ARR("GLOBAL SUBSCRIPT LOCATION"),";"),MOD=0
"RTN","ECXSURG",149,0)
 ..F  S MOD=$O(^SRF(ECD0,13,ECXJ,SUB,MOD)) Q:MOD'>0  S ECXCMOD=ECXCMOD_$P(^(MOD,0),U)_";"
"RTN","ECXSURG",150,0)
 .S ECXCPT=$$CPT^ECXUTL3(ECPT,ECXCMOD)
"RTN","ECXSURG",151,0)
 .S ECODE0="S"_U   ;_ECPT
"RTN","ECXSURG",152,0)
 .D FILE
"RTN","ECXSURG",153,0)
 ;get prostheses
"RTN","ECXSURG",154,0)
 ;ecode0=i^^^^^^prosthesis^old qty field (null)
"RTN","ECXSURG",155,0)
 S ECXJ=0
"RTN","ECXSURG",156,0)
 F  S ECXJ=$O(^SRF(ECD0,1,ECXJ)) Q:'ECXJ  I $D(^(ECXJ,0)) D
"RTN","ECXSURG",157,0)
 .S ECXP=+^SRF(ECD0,1,ECXJ,0),ECXQ=$P($G(^(1)),U,2) S:'ECXQ ECXQ=1
"RTN","ECXSURG",158,0)
 .S ECODE0="I"_U_U_U_U_U_U_ECXP_U_U
"RTN","ECXSURG",159,0)
 .D FILE
"RTN","ECXSURG",160,0)
 Q
"RTN","ECXSURG",161,0)
 ;
"RTN","ECXSURG",162,0)
FILE ;file record
"RTN","ECXSURG",163,0)
 ;node0
"RTN","ECXSURG",164,0)
 ;division^dfn^ssn^name^in/out (ECXA)^day^case #^
"RTN","ECXSURG",165,0)
 ;surg specialty^or room #^
"RTN","ECXSURG",166,0)
 ;surgeon^attending^anesthesia supervisor^anesthesia technique^
"RTN","ECXSURG",167,0)
 ;primary/secondary/prostheses^cpt^^pt time^op time^anes time^
"RTN","ECXSURG",168,0)
 ;prostheses^qty^^
"RTN","ECXSURG",169,0)
 ;movement number^treating specialty^cancel/abort (ECCAN)^time^or type^
"RTN","ECXSURG",170,0)
 ;attending's service^non-or dss id^recovery room time^^
"RTN","ECXSURG",171,0)
 ;primary care team^primary care provider^admission date
"RTN","ECXSURG",172,0)
 ;node1
"RTN","ECXSURG",173,0)
 ;mpi^dss dept ECXDSSD^surgeon npi^attending npi^anes supervisor npi^
"RTN","ECXSURG",174,0)
 ;pc provider npi^pc prov person class^
"RTN","ECXSURG",175,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXSURG",176,0)
 ;cpt&modifiers ECXCPT^dom ECXDOM^enrollment category ECXCAT^
"RTN","ECXSURG",177,0)
 ;enrollment status ECXSTAT^enrollment priority ECXPRIOR^
"RTN","ECXSURG",178,0)
 ;period of service ECXPOS^purple heart indicator ECXPHI^
"RTN","ECXSURG",179,0)
 ;observ pat ind ECXOBS^encounter num ECXENC^ao loc ECXAOL^
"RTN","ECXSURG",180,0)
 ;production division ECXPDIV^head & neck canc ind ECXHNCI^
"RTN","ECXSURG",181,0)
 ;ethnicity ECXETH^race1 ECXRC1^new quantity ECXQ^
"RTN","ECXSURG",182,0)
 ;^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet elig
"RTN","ECXSURG",183,0)
 ;ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible ECXCVENC
"RTN","ECXSURG",184,0)
 ;or clean time ECXORCT^time pt in hold area ECXPTHA^national patient
"RTN","ECXSURG",185,0)
 ;record flag ECXNPRFI^princ anesthetist ECXPA^surgeon per class ECSRPC
"RTN","ECXSURG",186,0)
 ;node2
"RTN","ECXSURG",187,0)
 ;atten surgeon per class ECATPC^anesthesia super person class ECSAPC^
"RTN","ECXSURG",188,0)
 ;princ anesthetist PC ECXPAPC^emergency response indicator(FEMA) ECXERI^
"RTN","ECXSURG",189,0)
 ;agent orange indic ECXAO^head/neck cancer ECXHNC
"RTN","ECXSURG",190,0)
 ;
"RTN","ECXSURG",191,0)
 N DA,DIK,STR
"RTN","ECXSURG",192,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXSURG",193,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXSURG",194,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECD0_U_ECSS_U_ECO_U
"RTN","ECXSURG",195,0)
 S ECODE=ECODE_ECSR_U_ECAT_U_ECSA_U_ECANE_U_ECODE0_U
"RTN","ECXSURG",196,0)
 S STR=ECXMN_U_ECXTS_U_$S(ECCAN'="":ECCAN,1:"")_U_ECXTM_U_ECORTY_U
"RTN","ECXSURG",197,0)
 S STR=STR_ECATSV_U_ECNL_U_ECRR_U_U_ECPTTM_U_ECPTPR_U_ECXADD_U
"RTN","ECXSURG",198,0)
 S $P(ECODE,U,26,38)=STR
"RTN","ECXSURG",199,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECSRNPI_U_ECATNPI_U_ECSANPI_U_ECPTNPI_U
"RTN","ECXSURG",200,0)
 S ECODE1=ECODE1_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXCPT_U_ECXDOM_U
"RTN","ECXSURG",201,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECXPOS_U_ECXPHI_U
"RTN","ECXSURG",202,0)
 S ECODE1=ECODE1_ECXOBS_U_ECXENC_U_ECXAOL_U_ECXPDIV_U_ECXHNCI_U
"RTN","ECXSURG",203,0)
 S ECODE1=ECODE1_ECXETH_U_ECXRC1_U_ECXQ_U
"RTN","ECXSURG",204,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXORCT_U_ECXPTHA_U_ECXNPRFI
"RTN","ECXSURG",205,0)
 I ECXLOGIC>2005 S ECODE1=ECODE1_U_ECXPA_U_ECSRPC_U,ECODE2=ECATPC_U_ECSAPC_U_ECXPAPC
"RTN","ECXSURG",206,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXAO_U_ECXHNC
"RTN","ECXSURG",207,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXSURG",208,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXSURG",209,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSURG",210,0)
 ;
"RTN","ECXSURG",211,0)
TIME ; given date/time get increment
"RTN","ECXSURG",212,0)
 ;A1=later, A2=earlier, TIME=difference
"RTN","ECXSURG",213,0)
 N CON,TIMEDIF
"RTN","ECXSURG",214,0)
 S CON=$P($G(^SRF(ECD0,"CON")),U)
"RTN","ECXSURG",215,0)
 ;
"RTN","ECXSURG",216,0)
 ;-Get time diff (in secs) & set to .5 if < 7.5 minutes (rounds to 1)
"RTN","ECXSURG",217,0)
 S TIMEDIF=$$FMDIFF^XLFDT(A1,A2,2)/900
"RTN","ECXSURG",218,0)
 S TIMEDIF=$S(TIMEDIF>0&(TIMEDIF<.5):.5,1:TIMEDIF)
"RTN","ECXSURG",219,0)
 I 'CON D
"RTN","ECXSURG",220,0)
 .S TIME=$J($TR($J(TIMEDIF,4,0)," "),2,1)
"RTN","ECXSURG",221,0)
 .S:TIME>"99.0" TIME="99.0"
"RTN","ECXSURG",222,0)
 I CON D
"RTN","ECXSURG",223,0)
 .S TIME=$J(($TR($J(TIMEDIF,4,0)," ")/2),2,1)
"RTN","ECXSURG",224,0)
 .S:TIME>"99.5" TIME="99.5"
"RTN","ECXSURG",225,0)
 S:TIME<0 TIME="###"
"RTN","ECXSURG",226,0)
 Q
"RTN","ECXSURG",227,0)
 ;
"RTN","ECXSURG",228,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXSURG",229,0)
 S ECHEAD="SUR"
"RTN","ECXSURG",230,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSURG",231,0)
 Q
"RTN","ECXSURG",232,0)
 ;
"RTN","ECXSURG",233,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXSURG",234,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXTREX")
0^9^B11364992^B11339972
"RTN","ECXTREX",1,0)
ECXTREX ;BPFO/JRP - Queue DSS Fiscal Year Specific Extract;8-AUG-2003 ; 11/2/06 9:02am
"RTN","ECXTREX",2,0)
 ;;3.0;DSS EXTRACTS;**49,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXTREX",3,0)
 ;
"RTN","ECXTREX",4,0)
EN ;Main entry point
"RTN","ECXTREX",5,0)
 W @IOF
"RTN","ECXTREX",6,0)
 N DIC,X,Y,DTOUT,DUOUT
"RTN","ECXTREX",7,0)
 W !,"****************************************************************"
"RTN","ECXTREX",8,0)
 W !,"*                                                              *"
"RTN","ECXTREX",9,0)
 W !,"* This option should be used with caution as it allows for the *"
"RTN","ECXTREX",10,0)
 W !,"* extraction of data using specified fiscal year logic.  This  *"
"RTN","ECXTREX",11,0)
 W !,"* gives the ability to extract fiscal year 200x data using     *"
"RTN","ECXTREX",12,0)
 W !,"* fiscal year 200(x+1) logic and vice versa.  Note that data   *"
"RTN","ECXTREX",13,0)
 W !,"* extracted via this method may or may not be transmittable to *"
"RTN","ECXTREX",14,0)
 W !,"* the DSS production queue at the Austin Automation Center.    *"
"RTN","ECXTREX",15,0)
 W !,"*                                                              *"
"RTN","ECXTREX",16,0)
 W !,"*--------------------------------------------------------------*"
"RTN","ECXTREX",17,0)
 W !,"*                                                              *"
"RTN","ECXTREX",18,0)
 W !,"* Note that this option does not update the last date used for *"
"RTN","ECXTREX",19,0)
 W !,"* the given extraction.  It also does not verify that the time *"
"RTN","ECXTREX",20,0)
 W !,"* frame selected is after the last date used for the extract.  *"
"RTN","ECXTREX",21,0)
 W !,"*                                                              *"
"RTN","ECXTREX",22,0)
 W !,"****************************************************************"
"RTN","ECXTREX",23,0)
 W !!
"RTN","ECXTREX",24,0)
 ;Pick extract to queue
"RTN","ECXTREX",25,0)
 S DIC="^ECX(727.1,"
"RTN","ECXTREX",26,0)
 S DIC(0)="AEQMZ"
"RTN","ECXTREX",27,0)
 S DIC("A")="Select DSS Extract to queue: "
"RTN","ECXTREX",28,0)
 S DIC("S")="I ('$P(^(0),U,12))&($P(^(0),U,8)'="""")&($G(^(7))'[""Inactive"")"
"RTN","ECXTREX",29,0)
 S DIC("W")="W ""("",$P(^(0),U,8),"")"""
"RTN","ECXTREX",30,0)
 D ^DIC
"RTN","ECXTREX",31,0)
 I ($D(DUOUT))!($D(DTOUT))!(Y<1) Q
"RTN","ECXTREX",32,0)
 N ECXRTN,ECXDA
"RTN","ECXTREX",33,0)
 S ECXDA=+Y
"RTN","ECXTREX",34,0)
 ;Get extract specific routine name
"RTN","ECXTREX",35,0)
 S ECXRTN=$G(^ECX(727.1,ECXDA,"ROU"))
"RTN","ECXTREX",36,0)
 I ECXRTN="" D  Q
"RTN","ECXTREX",37,0)
 .W !!,"Selected extract is not correctly defined in the EXTRACT"
"RTN","ECXTREX",38,0)
 .W !,"DEFINITIONS file (#727.1).  The ROUTINE field (#4) does not"
"RTN","ECXTREX",39,0)
 .W !,"have a value in it."
"RTN","ECXTREX",40,0)
 .W !
"RTN","ECXTREX",41,0)
 .D PAUSE
"RTN","ECXTREX",42,0)
 ;Get time frame for extract
"RTN","ECXTREX",43,0)
 N STRTDT,ENDDT,DIR,DIRUT,DIROUT,OUT,ECXDATES
"RTN","ECXTREX",44,0)
 S OUT=0 F  S (STRTDT,ENDDT)="" D  Q:OUT
"RTN","ECXTREX",45,0)
 .;Get start date (must be in past)
"RTN","ECXTREX",46,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",47,0)
 .S $P(DIR(0),"^",2)=":"_DT_":AEXP"
"RTN","ECXTREX",48,0)
 .S DIR("A")="Starting with Date: "
"RTN","ECXTREX",49,0)
 .D ^DIR
"RTN","ECXTREX",50,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)="" S OUT=1 Q
"RTN","ECXTREX",51,0)
 .S STRTDT=Y
"RTN","ECXTREX",52,0)
 .K DIR
"RTN","ECXTREX",53,0)
 .;Get end date (must be in same month; must be in past)
"RTN","ECXTREX",54,0)
 .S DIR(0)="DOA"
"RTN","ECXTREX",55,0)
 .S X=$E(STRTDT,1,5)_"01"
"RTN","ECXTREX",56,0)
 .S X=$$FMADD^XLFDT(X,32)
"RTN","ECXTREX",57,0)
 .S X=$$FMADD^XLFDT(X,-($E(X,6,7)))
"RTN","ECXTREX",58,0)
 .I X>DT S X=DT
"RTN","ECXTREX",59,0)
 .S $P(DIR(0),"^",2)=STRTDT_":"_X_":AEXP"
"RTN","ECXTREX",60,0)
 .S DIR("A")="Ending with Date: "
"RTN","ECXTREX",61,0)
 .S DIR("B")=$$FMTE^XLFDT(X,"5D")
"RTN","ECXTREX",62,0)
 .D ^DIR
"RTN","ECXTREX",63,0)
 .I $D(DIROUT)!$D(DIRUT)!(Y="") S (STRTDT,ENDDT)=""  S OUT=1 Q
"RTN","ECXTREX",64,0)
 .S ENDDT=Y
"RTN","ECXTREX",65,0)
 .S OUT=1
"RTN","ECXTREX",66,0)
 Q:(STRTDT="")!(ENDDT="")
"RTN","ECXTREX",67,0)
 S ECXDATES=STRTDT_"^"_ENDDT_"^1"
"RTN","ECXTREX",68,0)
 ;Get extract logic to use
"RTN","ECXTREX",69,0)
 N ECXLOGIC
"RTN","ECXTREX",70,0)
 K DIR
"RTN","ECXTREX",71,0)
 S DIR("A")="Select fiscal year logic to use for extract"
"RTN","ECXTREX",72,0)
 S DIR(0)="SO^"
"RTN","ECXTREX",73,0)
 F X=2003,2004,2005,2006,2007 D
"RTN","ECXTREX",74,0)
 .S Y=$E(X,5)
"RTN","ECXTREX",75,0)
 .S Y=$S((Y="")!(Y=" "):"",1:"Revision "_Y_" of ")
"RTN","ECXTREX",76,0)
 .S DIR(0)=DIR(0)_X_":"_Y_"Fiscal Year "_$E(X,1,4)_";"
"RTN","ECXTREX",77,0)
 D ^DIR
"RTN","ECXTREX",78,0)
 I $D(DIROUT)!$D(DIRUT) Q
"RTN","ECXTREX",79,0)
 S ECXLOGIC=Y
"RTN","ECXTREX",80,0)
 ;Queue extract
"RTN","ECXTREX",81,0)
 D @("BEG^"_ECXRTN)
"RTN","ECXTREX",82,0)
 Q
"RTN","ECXTREX",83,0)
PAUSE ;pause screen
"RTN","ECXTREX",84,0)
 N DIR,X,Y,DTOUT,DUOUT,DIROUT,DIRUT
"RTN","ECXTREX",85,0)
 S DIR(0)="E"
"RTN","ECXTREX",86,0)
 W !!
"RTN","ECXTREX",87,0)
 D ^DIR
"RTN","ECXTREX",88,0)
 W !!
"RTN","ECXTREX",89,0)
 Q
"RTN","ECXUD")
0^23^B47464345^B44193841
"RTN","ECXUD",1,0)
ECXUD ;ALB/JAP,BIR/DMA,PTD-Extract from UNIT DOSE EXTRACT DATA File (#728.904) ; 8/17/05 10:58am
"RTN","ECXUD",2,0)
 ;;3.0;DSS EXTRACTS;**10,8,24,33,39,46,49,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXUD",3,0)
BEG ;entry point from option
"RTN","ECXUD",4,0)
 I '$O(^ECX(728.904,"A",0)) W !,"There are no unit dose orders to extract",!! R X:5 K X Q
"RTN","ECXUD",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXUD",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXUD",7,0)
 Q
"RTN","ECXUD",8,0)
 ;
"RTN","ECXUD",9,0)
START ;start package specific extract
"RTN","ECXUD",10,0)
 S QFLG=0
"RTN","ECXUD",11,0)
 S ECED=ECED+.3
"RTN","ECXUD",12,0)
 F ECD=ECSD1:0 S ECD=$O(^ECX(728.904,"A",ECD)) Q:'ECD  Q:ECD>ECED  Q:QFLG  D
"RTN","ECXUD",13,0)
 .S ECXJ=0 F  S ECXJ=$O(^ECX(728.904,"A",ECD,ECXJ)) Q:'ECXJ  Q:QFLG  I $D(^ECX(728.904,ECXJ,0)) D
"RTN","ECXUD",14,0)
 ..S DATA=^ECX(728.904,ECXJ,0),^(1)=$P(EC23,U,2),^ECX(728.904,"AC",$P(EC23,U,2),ECXJ)="" D STUFF
"RTN","ECXUD",15,0)
 K ^TMP($J,"ECXP")
"RTN","ECXUD",16,0)
 Q
"RTN","ECXUD",17,0)
 ;
"RTN","ECXUD",18,0)
STUFF ;get data
"RTN","ECXUD",19,0)
 N X,W,OK,P1,P3,PSTAT,PT,ECXPHA,ON,ECDRG
"RTN","ECXUD",20,0)
 S ECXDFN=$P(DATA,U,2),ECDRG=$P(DATA,U,4)
"RTN","ECXUD",21,0)
 ;
"RTN","ECXUD",22,0)
 ;get patient specific data
"RTN","ECXUD",23,0)
 S ECXERR="" D PAT(ECXDFN,ECD,.ECXERR)
"RTN","ECXUD",24,0)
 Q:ECXERR
"RTN","ECXUD",25,0)
 ;
"RTN","ECXUD",26,0)
 S ECXPRO=$P(DATA,U,7),ECXPRO=$E($P(ECXPRO,";",2))_$P(ECXPRO,";")
"RTN","ECXUD",27,0)
 S ECXPRNPI="",W=$P(DATA,U,6)
"RTN","ECXUD",28,0)
 S ECXDIV=$P($G(^DIC(42,+W,0)),U,11),ECXW=$P($G(^DIC(42,+W,44)),U)
"RTN","ECXUD",29,0)
 S ECXUDDT=$$ECXDATE^ECXUTL($P(DATA,U,3),ECXYM)
"RTN","ECXUD",30,0)
 S ECXUDTM=$E($P($P(DATA,U,3),".",2)_"000000",1,6)
"RTN","ECXUD",31,0)
 S ECXQTY=$P(DATA,U,5),ECXCOST=$P(DATA,U,8),ON=$P(DATA,U,10)
"RTN","ECXUD",32,0)
 ;call pharmacy drug file (#50) api via ecxutl5
"RTN","ECXUD",33,0)
 S ECXPHA=$$PHAAPI^ECXUTL5(ECDRG)
"RTN","ECXUD",34,0)
 S ECCAT=$P(ECXPHA,U,2),ECINV=$P(ECXPHA,U,4)
"RTN","ECXUD",35,0)
 S ECINV=$S(ECINV["I":"I",1:"")
"RTN","ECXUD",36,0)
 S ECNDC=$P(ECXPHA,U,3)
"RTN","ECXUD",37,0)
 S ECNFC=$$RJ^XLFSTR($P(ECNDC,"-"),6,0)_$$RJ^XLFSTR($P(ECNDC,"-",2),4,0)_$$RJ^XLFSTR($P(ECNDC,"-",3),2,0),ECNFC=$TR(ECNFC,"*",0)
"RTN","ECXUD",38,0)
 S P1=$P(ECXPHA,U,5),P3=$P(ECXPHA,U,6),X="PSNAPIS"
"RTN","ECXUD",39,0)
 X ^%ZOSF("TEST") I $T S ECNFC=$$DSS^PSNAPIS(P1,P3,ECXYM)_ECNFC
"RTN","ECXUD",40,0)
 I $L(ECNFC)=12 S ECNFC=$$RJ^XLFSTR(P1,4,0)_$$RJ^XLFSTR(P3,3,0)_ECNFC
"RTN","ECXUD",41,0)
 ; - Department and National Production Division
"RTN","ECXUD",42,0)
 ;- Use of DSS Department postponed [S ECXDSSD=$$UDP^ECXDEPT(ECXDIV)]
"RTN","ECXUD",43,0)
 S ECXDSSD=""
"RTN","ECXUD",44,0)
 S ECXPDIV=$$GETDIV^ECXDEPT(ECXDIV)
"RTN","ECXUD",45,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXUD",46,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXUD",47,0)
 ;- Ordering Date, Ordering Stop Code
"RTN","ECXUD",48,0)
 S ECXORDDT=$TR($$FMTE^XLFDT($P(DATA,U,9),"7DF")," /","0")
"RTN","ECXUD",49,0)
 S ECXORDST="" I ECXA="O" D
"RTN","ECXUD",50,0)
 .;Get ordering stop code based on FY 2006 logic for outpatient
"RTN","ECXUD",51,0)
 .S ECXORDST=$$DOUDO^ECXUTL5(ECXDFN,ON)
"RTN","ECXUD",52,0)
 ;Ordering Provider Person Class
"RTN","ECXUD",53,0)
 S ECXOPPC=$$PRVCLASS^ECXUTL($E(ECXPRO,2,999),$P(DATA,U,9))
"RTN","ECXUD",54,0)
 ;BCMA data (place holder)
"RTN","ECXUD",55,0)
 S (ECXBCDD,ECXBCDG,ECXBCUA,ECXBCIF)=""
"RTN","ECXUD",56,0)
 ;- Set national patient record flag if exist
"RTN","ECXUD",57,0)
 D NPRF^ECXUTL5
"RTN","ECXUD",58,0)
 ;- If no encounter number don't file record
"RTN","ECXUD",59,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADM,$P(DATA,U,3),ECXTS,ECXOBS,ECHEAD,,)
"RTN","ECXUD",60,0)
 D:ECXENC'="" FILE
"RTN","ECXUD",61,0)
 Q
"RTN","ECXUD",62,0)
 ;
"RTN","ECXUD",63,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get demographics from patient file
"RTN","ECXUD",64,0)
 ;init variables
"RTN","ECXUD",65,0)
 S (ECXCAT,ECXSTAT,ECXPRIOR,ECXSBGRP)=""
"RTN","ECXUD",66,0)
 ;get patient data if saved
"RTN","ECXUD",67,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXUD",68,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECXPNM=$P(PT,U),ECXSSN=$P(PT,U,2)
"RTN","ECXUD",69,0)
 .S ECXMPI=$P(PT,U,3),ECXDOB=$P(PT,U,4)
"RTN","ECXUD",70,0)
 .S ECXELIG=$P(PT,U,5),ECXSEX=$P(PT,U,6)
"RTN","ECXUD",71,0)
 .S ECXSTATE=$P(PT,U,7),ECXCNTY=$P(PT,U,8),ECXZIP=$P(PT,U,9)
"RTN","ECXUD",72,0)
 .S ECXVET=$P(PT,U,10),ECXPOS=$P(PT,U,11),ECXPST=$P(PT,U,12)
"RTN","ECXUD",73,0)
 .S ECXPLOC=$P(PT,U,13),ECXRST=$P(PT,U,14),ECXAST=$P(PT,U,15)
"RTN","ECXUD",74,0)
 .S ECXAOL=$P(PT,U,16),ECXPHI=$P(PT,U,17),ECXMST=$P(PT,U,18)
"RTN","ECXUD",75,0)
 .S ECXENRL=$P(PT,U,19),ECXCNHU=$P(PT,U,20),ECXCAT=$P(PT,U,21)
"RTN","ECXUD",76,0)
 .S ECXSTAT=$P(PT,U,22),ECXPRIOR=$P(PT,U,23),ECXHNCI=$P(PT,U,24)
"RTN","ECXUD",77,0)
 .S ECXETH=$P(PT,U,25),ECXRC1=$P(PT,U,26),ECXMTST=$P(PT,U,27)
"RTN","ECXUD",78,0)
 .S PT1=$G(^TMP($J,"ECXP",ECXDFN,1)),ECXERI=$P(PT1,U),ECXEST=$P(PT1,U,2)
"RTN","ECXUD",79,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",80,0)
 ;set patient data
"RTN","ECXUD",81,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXUD",82,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;5",.ECXPAT)
"RTN","ECXUD",83,0)
 .I 'OK K ECXPAT S ECXERR=1 Q
"RTN","ECXUD",84,0)
 .S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXUD",85,0)
 .S ECXDOB=ECXPAT("DOB"),ECXELIG=ECXPAT("ELIG"),ECXSEX=ECXPAT("SEX")
"RTN","ECXUD",86,0)
 .S ECXSTATE=ECXPAT("STATE"),ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXUD",87,0)
 .S ECXZIP=ECXPAT("ZIP"),ECXVET=ECXPAT("VET")
"RTN","ECXUD",88,0)
 .S ECXPOS=ECXPAT("POS"),ECXPST=ECXPAT("POW STAT")
"RTN","ECXUD",89,0)
 .S ECXPLOC=ECXPAT("POW LOC"),ECXRST=ECXPAT("IR STAT")
"RTN","ECXUD",90,0)
 .S ECXAST=ECXPAT("AO STAT"),ECXAOL=ECXPAT("AOL")
"RTN","ECXUD",91,0)
 .S ECXPHI=ECXPAT("PHI"),ECXMST=ECXPAT("MST STAT")
"RTN","ECXUD",92,0)
 .S ECXENRL=ECXPAT("ENROLL LOC"),ECXMTST=ECXPAT("MEANS")
"RTN","ECXUD",93,0)
 .;get CNHU status
"RTN","ECXUD",94,0)
 .S ECXCNHU=$$CNHSTAT^ECXUTL4(ECXDFN)
"RTN","ECXUD",95,0)
 .;get enrollment data (category, status and priority)
"RTN","ECXUD",96,0)
 .I $$ENROLLM^ECXUTL2(ECXDFN)
"RTN","ECXUD",97,0)
 .; - Head and Neck Cancer Indicator
"RTN","ECXUD",98,0)
 .S ECXHNCI=$$HNCI^ECXUTL4(ECXDFN)
"RTN","ECXUD",99,0)
 .; - Race and Ethnicity
"RTN","ECXUD",100,0)
 .S ECXETH=ECXPAT("ETHNIC")
"RTN","ECXUD",101,0)
 .S ECXRC1=ECXPAT("RACE1")
"RTN","ECXUD",102,0)
 .;get emergency response indicator (FEMA)
"RTN","ECXUD",103,0)
 .S ECXERI=ECXPAT("ERI")
"RTN","ECXUD",104,0)
 .S ECXEST=ECXPAT("EC STAT")
"RTN","ECXUD",105,0)
 .;save for later
"RTN","ECXUD",106,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECXPNM_U_ECXSSN_U_ECXMPI_U_ECXDOB_U_ECXELIG_U_ECXSEX_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST
"RTN","ECXUD",107,0)
 .S ^TMP($J,"ECXP",ECXDFN)=^TMP($J,"ECXP",ECXDFN)_U_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXENRL_U_ECXCNHU_U_ECXCAT_U_ECXSTAT_U_ECXPRIOR_U_ECXHNCI_U_ECXETH_U_ECXRC1_U_ECXMTST
"RTN","ECXUD",108,0)
 .S ^TMP($J,"ECXP",ECXDFN,1)=ECXERI_U_ECXEST
"RTN","ECXUD",109,0)
 ;
"RTN","ECXUD",110,0)
 ;get inpatient data
"RTN","ECXUD",111,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXMN=$P(X,U,2)
"RTN","ECXUD",112,0)
 S ECXTS=$P(X,U,3),ECXADM=$P(X,U,4),ECXDOM=$P(X,U,10)
"RTN","ECXUD",113,0)
 ;
"RTN","ECXUD",114,0)
 ;get primary care data
"RTN","ECXUD",115,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXUD",116,0)
 S ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXUD",117,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXUD",118,0)
 Q
"RTN","ECXUD",119,0)
 ;
"RTN","ECXUD",120,0)
FILE ;file record
"RTN","ECXUD",121,0)
 ;node0
"RTN","ECXUD",122,0)
 ;facility^dfn^ssn^name^in/out^day^drug category^quantity^ward^
"RTN","ECXUD",123,0)
 ;provider^cost^mov #^treat spec^ndc^new feeder key^investigational^
"RTN","ECXUD",124,0)
 ;udp time^adm date^adm time
"RTN","ECXUD",125,0)
 ;node1
"RTN","ECXUD",126,0)
 ;mpi^dss dept^provider npi^dom^observ pat ind^encounter num^
"RTN","ECXUD",127,0)
 ;prod div code^means tst^elig^dob^sex^state^county^zip+4^vet^
"RTN","ECXUD",128,0)
 ;period of svc^pow stat^pow loc^ir status^ao status^ao loc^
"RTN","ECXUD",129,0)
 ;purple heart ind.^mst status^cnh/sh status^enrollment loc^
"RTN","ECXUD",130,0)
 ;enrollment cat^enrollment status^enrollment priority^pc team^
"RTN","ECXUD",131,0)
 ;pc provider^pc provider npi^pc provider p.class^assoc. pc provider^
"RTN","ECXUD",132,0)
 ;assoc. pc provider npi^assoc. pc provider p.class
"RTN","ECXUD",133,0)
 ;node2
"RTN","ECXUD",134,0)
 ;ordering date^ordering stop code^head & neck cancer ind.^ethnicity^
"RTN","ECXUD",135,0)
 ;race1^bcma drug dispensed^bcma dose given^bcma unit of
"RTN","ECXUD",136,0)
 ;administration^bcma icu flag^ordering provider person class^
"RTN","ECXUD",137,0)
 ;^enrollment priority ECXPRIOR_enrollment subgroup
"RTN","ECXUD",138,0)
 ;ECXSBGRP^user enrollee ECXUESTA^patient type ECXPTYPE^combat vet
"RTN","ECXUD",139,0)
 ;elig ECXCVE^combat vet elig end date ECXCVEDT^enc cv eligible
"RTN","ECXUD",140,0)
 ;ECXCVENC^national patient record flag ECXNPRFI^emerg resp indic(FEMA) 
"RTN","ECXUD",141,0)
 ;ECXERI^environ contamin ECXEST
"RTN","ECXUD",142,0)
 N DA,DIK
"RTN","ECXUD",143,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXUD",144,0)
 S ECODE=EC7_U_EC23_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXUD",145,0)
 S ECODE=ECODE_ECXUDDT_U_ECCAT_U_ECXQTY_U_ECXW_U_ECXPRO_U_ECXCOST_U
"RTN","ECXUD",146,0)
 S ECODE=ECODE_ECXMN_U_ECXTS_U_ECNDC_U_ECNFC_U_ECINV_U_ECXUDTM_U
"RTN","ECXUD",147,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECXADM,ECXYM)_U
"RTN","ECXUD",148,0)
 S ECODE=ECODE_$$ECXTIME^ECXUTL(ECXADM)_U
"RTN","ECXUD",149,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXPRNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXUD",150,0)
 S ECODE1=ECODE1_ECXPDIV_U_ECXMTST_U_ECXELIG_U_ECXDOB_U_ECXSEX_U
"RTN","ECXUD",151,0)
 S ECODE1=ECODE1_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXVET_U_ECXPOS_U
"RTN","ECXUD",152,0)
 S ECODE1=ECODE1_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U
"RTN","ECXUD",153,0)
 S ECODE1=ECODE1_ECXAOL_U_ECXPHI_U_ECXMST_U_ECXCNHU_U_ECXENRL_U
"RTN","ECXUD",154,0)
 S ECODE1=ECODE1_ECXCAT_U_ECXSTAT_U_$S(ECXLOGIC<2005:ECXPRIOR,1:"")_U_ECPTTM_U_ECPTPR_U
"RTN","ECXUD",155,0)
 S ECODE1=ECODE1_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECASNPI_U_ECCLAS2_U
"RTN","ECXUD",156,0)
 S ECODE2=ECXORDDT_U_ECXORDST_U_ECXHNCI_U_ECXETH_U_ECXRC1
"RTN","ECXUD",157,0)
 I ECXLOGIC>2003 S ECODE2=ECODE2_U_ECXBCDD_U_ECXBCDG_U_ECXBCUA_U_ECXBCIF_U_ECXOPPC
"RTN","ECXUD",158,0)
 I ECXLOGIC>2004 S ECODE2=ECODE2_U_U_ECXPRIOR_ECXSBGRP_U_ECXUESTA_U_ECXPTYPE_U_ECXCVE_U_ECXCVEDT_U_ECXCVENC_U_ECXNPRFI
"RTN","ECXUD",159,0)
 I ECXLOGIC>2006 S ECODE2=ECODE2_U_ECXERI_U_ECXEST
"RTN","ECXUD",160,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1
"RTN","ECXUD",161,0)
 S ^ECX(ECFILE,EC7,2)=ECODE2,ECRN=ECRN+1
"RTN","ECXUD",162,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXUD",163,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXUD",164,0)
 Q
"RTN","ECXUD",165,0)
 ;
"RTN","ECXUD",166,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXUD",167,0)
 S ECHEAD="UDP"
"RTN","ECXUD",168,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXUD",169,0)
 Q
"RTN","ECXUD",170,0)
 ;
"RTN","ECXUD",171,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXUD",172,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL
"RTN","ECXUD",173,0)
 Q
"RTN","ECXUTL2")
0^36^B68980292^B68550952
"RTN","ECXUTL2",1,0)
ECXUTL2 ;ALB/JAP - Utilities for DSS Extracts (cont.) ; 11/2/06 9:03am
"RTN","ECXUTL2",2,0)
 ;;3.0;DSS EXTRACTS;**8,13,23,24,33,35,39,46,71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXUTL2",3,0)
 ;
"RTN","ECXUTL2",4,0)
ECXDEF(ECXHEAD,ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER) ;variables specific to extract from file #727.1
"RTN","ECXUTL2",5,0)
 ;   input 
"RTN","ECXUTL2",6,0)
 ;   ECXHEAD = extract header code
"RTN","ECXUTL2",7,0)
 ;   all other formal list parameters passed by reference
"RTN","ECXUTL2",8,0)
 ;   output
"RTN","ECXUTL2",9,0)
 ;   ECXPACK = type field (#7)
"RTN","ECXUTL2",10,0)
 ;   ECXGRP  = group field (#9)
"RTN","ECXUTL2",11,0)
 ;   ECXFILE = file number field (#1)
"RTN","ECXUTL2",12,0)
 ;   ECXRTN  = routine field (#4)
"RTN","ECXUTL2",13,0)
 ;   ECXPIECE= running piece field (#11)
"RTN","ECXUTL2",14,0)
 ;   ECXVER  = dss version
"RTN","ECXUTL2",15,0)
 ;
"RTN","ECXUTL2",16,0)
 N ECXIEN,ECXARR,DIC,DA,DR,DIQ
"RTN","ECXUTL2",17,0)
 S (ECXPACK,ECXGRP,ECXFILE,ECXRTN,ECXPIECE,ECXVER)="",ECXIEN=0
"RTN","ECXUTL2",18,0)
 S ECXIEN=+$O(^ECX(727.1,"C",ECXHEAD,ECXIEN))
"RTN","ECXUTL2",19,0)
 I ECXIEN=0 D  Q
"RTN","ECXUTL2",20,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",21,0)
 .D MES^XPDUTL(" It appears that you may have a problem with File #727.1 --")
"RTN","ECXUTL2",22,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",23,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is not properly defined.")
"RTN","ECXUTL2",24,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",25,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",26,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",27,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",28,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",29,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",30,0)
 .W !!
"RTN","ECXUTL2",31,0)
 S DIC="^ECX(727.1,",DA=ECXIEN,DR=".01;1;4;7;9;11",DIQ="ECXARR"
"RTN","ECXUTL2",32,0)
 D EN^DIQ1
"RTN","ECXUTL2",33,0)
 S ECXPACK=ECXARR(727.1,ECXIEN,7)
"RTN","ECXUTL2",34,0)
 ;if this is an inactive extract type, skip it
"RTN","ECXUTL2",35,0)
 I ECXPACK["Inactive" D  Q
"RTN","ECXUTL2",36,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",37,0)
 .D MES^XPDUTL(" The "_ECHEAD_" Extract is no longer active/valid.")
"RTN","ECXUTL2",38,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",39,0)
 .D MES^XPDUTL(" Contact National VISTA Support for further assistance.")
"RTN","ECXUTL2",40,0)
 .D MES^XPDUTL(" ")
"RTN","ECXUTL2",41,0)
 .I $E(IOST)="C" D
"RTN","ECXUTL2",42,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXUTL2",43,0)
 ..S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECXUTL2",44,0)
 .W !!
"RTN","ECXUTL2",45,0)
 S ECXGRP=ECXARR(727.1,ECXIEN,9)
"RTN","ECXUTL2",46,0)
 S ECXFILE=ECXARR(727.1,ECXIEN,1)
"RTN","ECXUTL2",47,0)
 S ECXRTN="START^"_ECXARR(727.1,ECXIEN,4)
"RTN","ECXUTL2",48,0)
 S ECXPIECE=ECXARR(727.1,ECXIEN,11)
"RTN","ECXUTL2",49,0)
 ;version of dss/tsi in Austin as specified by btso
"RTN","ECXUTL2",50,0)
 S ECXVER=7
"RTN","ECXUTL2",51,0)
 Q
"RTN","ECXUTL2",52,0)
 ;
"RTN","ECXUTL2",53,0)
PATDEM(DFN,DT1,PAR,FLG) ; determine patient information
"RTN","ECXUTL2",54,0)
 ;  DFN   =
"RTN","ECXUTL2",55,0)
 ;  DT    =
"RTN","ECXUTL2",56,0)
 ;  PAR   =
"RTN","ECXUTL2",57,0)
 ;  FLG   =
"RTN","ECXUTL2",58,0)
 N DT2,PAT,OK,X
"RTN","ECXUTL2",59,0)
 D KPATDEM
"RTN","ECXUTL2",60,0)
 S FLG=$G(FLG),PAR=$S($D(PAR):PAR,1:"1;2;3;4;5;"),DT2=$P(DT1,".")
"RTN","ECXUTL2",61,0)
 Q:'$$PAT^ECXUTL3(DFN,DT2,PAR,.PAT) 0
"RTN","ECXUTL2",62,0)
 S ECXMPI=PAT("MPI")
"RTN","ECXUTL2",63,0)
 I PAR["1" D
"RTN","ECXUTL2",64,0)
 .S ECXSSN=PAT("SSN"),ECXPNM=PAT("NAME"),ECXDOB=PAT("DOB")
"RTN","ECXUTL2",65,0)
 .S ECXSEX=PAT("SEX"),ECXREL=PAT("RELIGION"),ECXRACE=PAT("RACE")
"RTN","ECXUTL2",66,0)
 .S ECXMAR=PAT("MARITAL")
"RTN","ECXUTL2",67,0)
 .S ECXETH=PAT("ETHNIC"),ECXRC1=PAT("RACE1")
"RTN","ECXUTL2",68,0)
 I PAR["2" D
"RTN","ECXUTL2",69,0)
 .S ECXCNTY=PAT("COUNTY"),ECXSTATE=PAT("STATE"),ECXZIP=PAT("ZIP")
"RTN","ECXUTL2",70,0)
 I PAR["3" D
"RTN","ECXUTL2",71,0)
 .S ECXPOS=PAT("POS"),ECSC=PAT("SC STAT"),ECXSVC=PAT("SC%")
"RTN","ECXUTL2",72,0)
 .S ECXVET=PAT("VET"),ECXMEAN=PAT("MEANS"),ECXELIG=PAT("ELIG")
"RTN","ECXUTL2",73,0)
 .S ECXENRL=PAT("ENROLL LOC")
"RTN","ECXUTL2",74,0)
 .S ECXERI=PAT("ERI")
"RTN","ECXUTL2",75,0)
 I PAR["4" S ECXEMP=PAT("EMPLOY")
"RTN","ECXUTL2",76,0)
 I PAR["5" D
"RTN","ECXUTL2",77,0)
 .S ECXVIET=PAT("VIETNAM"),ECXAST=PAT("AO STAT"),ECXRST=PAT("IR STAT")
"RTN","ECXUTL2",78,0)
 .S ECXEST=PAT("EC STAT"),ECXPST=PAT("POW STAT"),ECXPLOC=PAT("POW LOC")
"RTN","ECXUTL2",79,0)
 .S ECXPHI=PAT("PHI"),ECXMST=PAT("MST STAT"),ECXAOL=PAT("AOL")
"RTN","ECXUTL2",80,0)
 I PAR["6" D
"RTN","ECXUTL2",81,0)
 .S (ECXPAYOR,ECXSAI)="" D VISN19(DFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXUTL2",82,0)
 I FLG'[3 D
"RTN","ECXUTL2",83,0)
 .S X=$$PRIMARY(DFN,DT2),ECPTTM=$P(X,U),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3)
"RTN","ECXUTL2",84,0)
 .S ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6)
"RTN","ECXUTL2",85,0)
 .S ECASNPI=$P(X,U,7)
"RTN","ECXUTL2",86,0)
 I FLG'[2 D
"RTN","ECXUTL2",87,0)
 .S ECXINP=$$INP^ECXUTL2(DFN,DT1),ECXA=$P(ECXINP,U),ECXMN=$P(ECXINP,U,2)
"RTN","ECXUTL2",88,0)
 .S ECXTS=$P(ECXINP,U,3),ECXDOM=$P(ECXINP,U,10),ECXADMDT=$P(ECXINP,U,4)
"RTN","ECXUTL2",89,0)
 I FLG'[1 S X=$$ENROLLM(DFN)
"RTN","ECXUTL2",90,0)
 Q 1
"RTN","ECXUTL2",91,0)
 ;
"RTN","ECXUTL2",92,0)
KPATDEM ;
"RTN","ECXUTL2",93,0)
 K ECXADMDT,ECAO,ECASNPI,ECASPR,ECCLAS,ECCLAS2,ECENV,ECPTNPI,ECPTPR,ECPTTM
"RTN","ECXUTL2",94,0)
 K ECRE,ECSC,ECXA,ECXAST,ECXCAT,ECXCNTY,ECXEST,ECXENRL,ECXDOB
"RTN","ECXUTL2",95,0)
 K ECXDOM,ECXELIG,ECXINP,ECXMPI,ECXMN,ECXNM,ECXPHI,ECXPLOC,ECXMEAN,ECXMST
"RTN","ECXUTL2",96,0)
 K ECXPAYOR,ECXPNM,ECXPOS,ECXPRIOR,ECXPST,ECXRACE,ECXREL,ECXRST,ECXSAI
"RTN","ECXUTL2",97,0)
 K ECXSEX,ECXSSN,ECXSTAT,ECXSTATE,ECXSVC,ECXTS,ECXVIET,ECXZIP,VA,VAERR
"RTN","ECXUTL2",98,0)
 K ECXSBGRP
"RTN","ECXUTL2",99,0)
 Q
"RTN","ECXUTL2",100,0)
 ;
"RTN","ECXUTL2",101,0)
ENROLLM(DFN,RNDT) ;determines enrollment status, category, priority
"RTN","ECXUTL2",102,0)
 ;and user enrollee status
"RTN","ECXUTL2",103,0)
 ; input
"RTN","ECXUTL2",104,0)
 ;    DFN      = IEN from Patient file (Required)
"RTN","ECXUTL2",105,0)
 ;    RNDT     = Extract Run Date
"RTN","ECXUTL2",106,0)
 ; output
"RTN","ECXUTL2",107,0)
 ;    ECXSTAT  = Enrollment status
"RTN","ECXUTL2",108,0)
 ;    ECXPRIOR = Enrollment priority
"RTN","ECXUTL2",109,0)
 ;    ECXCAT   = Enrollment priority
"RTN","ECXUTL2",110,0)
 ;    ECXSBGRP = Enrollment subgroup
"RTN","ECXUTL2",111,0)
 ;    ECXUESTA = User enrollee
"RTN","ECXUTL2",112,0)
 ;    return value 0 if no data found, 1 if data found
"RTN","ECXUTL2",113,0)
 ;
"RTN","ECXUTL2",114,0)
 N CAT,PRIOR,STAT,X,X1,X2,X3,ENRIEN,ENR,FL,SBGRP
"RTN","ECXUTL2",115,0)
 S (ECXCAT,ECXPRIOR,ECXSTAT,ECXSBGRP,ECXEUSTA)=""
"RTN","ECXUTL2",116,0)
 I $G(DFN)="" Q 0
"RTN","ECXUTL2",117,0)
 ;User enrollee status, if current or future date set to 'U'
"RTN","ECXUTL2",118,0)
 ;DBIA #3989
"RTN","ECXUTL2",119,0)
 S ECXUESTA=$S($$UESTAT^EASUER(DFN):"U",1:"")
"RTN","ECXUTL2",120,0)
 ;Patient type
"RTN","ECXUTL2",121,0)
 S ECXPTYPE=$$TYPE^ECXUTL5(DFN)
"RTN","ECXUTL2",122,0)
 ;Combat Veteran Status DBIA #4156
"RTN","ECXUTL2",123,0)
 S X3=$$CVEDT^ECXUTL5(DFN,$S($G(ECD):ECD,$G(ECXDATE):ECXDATE,1:DT))
"RTN","ECXUTL2",124,0)
 ;enrollment priority DBIA
"RTN","ECXUTL2",125,0)
 S STAT=$$STATUS^DGENA(DFN),PRIOR=$$PRIORITY^DGENA(DFN)
"RTN","ECXUTL2",126,0)
 S CAT=$$CATEGORY^DGENA4(DFN,STAT),SBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",127,0)
 ;find current enrollment when status=2 or 19
"RTN","ECXUTL2",128,0)
 I "^2^19^"[("^"_STAT_"^") S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"") Q 1
"RTN","ECXUTL2",129,0)
 ;find previous enrollment
"RTN","ECXUTL2",130,0)
 S ENRIEN=$$FINDCUR^DGENA(DFN) I ENRIEN="" Q 0
"RTN","ECXUTL2",131,0)
 I $G(RNDT)="" D NOW^%DTC S RNDT=X
"RTN","ECXUTL2",132,0)
 S RNDT=($E(RNDT,1,3)-1)_$E(RNDT,4,7),FL=0
"RTN","ECXUTL2",133,0)
 F  S ENRIEN=$$FINDPRI^DGENA(ENRIEN) Q:'ENRIEN  D  Q:FL
"RTN","ECXUTL2",134,0)
 . S ENR=$$GET^DGENA(ENRIEN,.ENR)
"RTN","ECXUTL2",135,0)
 . I "^2^19^"[("^"_ENR("STATUS")_"^"),ENR("EFFDATE")>RNDT D
"RTN","ECXUTL2",136,0)
 . . S ECXSTAT=ENR("STATUS"),ECXPRIOR=PRIOR,FL=1
"RTN","ECXUTL2",137,0)
 . . S ECXCAT=$$CATEGORY^DGENA4(DFN,ECXSTAT)
"RTN","ECXUTL2",138,0)
 . . S ECXSBGRP=$$ENRSBGRP^DGENA4(DFN)
"RTN","ECXUTL2",139,0)
 . . S ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",140,0)
 I FL Q 1
"RTN","ECXUTL2",141,0)
 ;no enrollment status found =2 or 19
"RTN","ECXUTL2",142,0)
 S ECXSTAT=STAT,ECXPRIOR=PRIOR,ECXCAT=CAT,ECXSBGRP=$S(SBGRP=1:"a",SBGRP=3:"c",SBGRP=5:"e",SBGRP=7:"g",1:"")
"RTN","ECXUTL2",143,0)
 Q 1
"RTN","ECXUTL2",144,0)
 ;
"RTN","ECXUTL2",145,0)
PRIMARY(ECXDFN,ECXDATE,ECXPREFX) ;determine patient's pc team and pc provider
"RTN","ECXUTL2",146,0)
 ; input
"RTN","ECXUTL2",147,0)
 ; ECXDFN    = file #2 ien (required)
"RTN","ECXUTL2",148,0)
 ; ECXDATE   = date of interest (required)
"RTN","ECXUTL2",149,0)
 ; ECXPREFX  = prefix for provider data (optional)
"RTN","ECXUTL2",150,0)
 ;             defaults to "2" if not specified otherwise
"RTN","ECXUTL2",151,0)
 ; output
"RTN","ECXUTL2",152,0)
 ; ECXPRIME  = pc team ien^prefix_pc provider ien^pc provider person class^pc provider npi
"RTN","ECXUTL2",153,0)
 ;             ^prefix_assoc pc provider ien^assoc pc provider person class^assoc pc provider npi
"RTN","ECXUTL2",154,0)
 ;
"RTN","ECXUTL2",155,0)
 N ECPTTM,ECPTPR,ECCLAS,ECPRIME,ECASPR,ECCLAS2
"RTN","ECXUTL2",156,0)
 S:'$D(ECXPREFX) ECXPREFX=2 S:(+ECXPREFX=0) ECXPREFX=2
"RTN","ECXUTL2",157,0)
 ;get pc team data
"RTN","ECXUTL2",158,0)
 S ECPTTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDATE) S:ECPTTM=0 ECPTTM=""
"RTN","ECXUTL2",159,0)
 ;get primary pc provider data
"RTN","ECXUTL2",160,0)
 S ECPTPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",161,0)
 S ECCLAS="" I ECPTPR>0 S ECCLAS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXUTL2",162,0)
 S:ECPTPR=0 ECPTPR="" S:ECPTPR]"" ECPTPR=ECXPREFX_ECPTPR
"RTN","ECXUTL2",163,0)
 S ECPTNPI=""
"RTN","ECXUTL2",164,0)
 ;assoc pc provider call ok if routine scapmca from patch177 is present
"RTN","ECXUTL2",165,0)
 S ECASPR=""
"RTN","ECXUTL2",166,0)
 S X="SCAPMCA" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL2",167,0)
 .S ECASPR=+$$OUTPTAP^SDUTL3(ECXDFN,ECXDATE)
"RTN","ECXUTL2",168,0)
 S ECCLAS2="" I ECASPR>0 S ECCLAS2=$$PRVCLASS^ECXUTL(ECASPR,ECXDATE)
"RTN","ECXUTL2",169,0)
 S:ECASPR=0 ECASPR="" S:ECASPR]"" ECASPR=ECXPREFX_ECASPR
"RTN","ECXUTL2",170,0)
 S ECASNPI=""
"RTN","ECXUTL2",171,0)
 ;assemble
"RTN","ECXUTL2",172,0)
 S ECXPRIME=ECPTTM_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXUTL2",173,0)
 Q ECXPRIME
"RTN","ECXUTL2",174,0)
 ;
"RTN","ECXUTL2",175,0)
INP(ECXDFN,ECXDATE) ; check for inpatient status
"RTN","ECXUTL2",176,0)
 ; input
"RTN","ECXUTL2",177,0)
 ; ECXDFN  = file #2 ien (required)
"RTN","ECXUTL2",178,0)
 ; ECXDATE = date of interest (required)
"RTN","ECXUTL2",179,0)
 ; output
"RTN","ECXUTL2",180,0)
 ; ECXINP  = patient status^movment # (file #405 ien)
"RTN","ECXUTL2",181,0)
 ;       current treat. spec. (file #42.4 ien)^admission date/time^
"RTN","ECXUTL2",182,0)
 ;       current ward (file #42 ien)^discharge date/time^
"RTN","ECXUTL2",183,0)
 ;       ward provider^attending phys.^ward (file #44 ien);facility
"RTN","ECXUTL2",184,0)
 ;       (file #40.8 ien);dss dept^dom
"RTN","ECXUTL2",185,0)
 ;           where patient status = I for inpatient
"RTN","ECXUTL2",186,0)
 ;                                = O for outpatient
"RTN","ECXUTL2",187,0)
 ;
"RTN","ECXUTL2",188,0)
 N DFN,DSSDEPT,ECA,ECADM,ECMN,ECTS,ECWARD,ECDC,ECXINP,ECXPRO
"RTN","ECXUTL2",189,0)
 N ECXATP,ECXDD,ECXDOM,ECXPROF,ECXPWP,ECXWW,FAC,VAIP,WRD,ECXPWPPC
"RTN","ECXUTL2",190,0)
 N ECXATPPC
"RTN","ECXUTL2",191,0)
 D FIELD^DID(405,.19,,"SPECIFIER","ECXDD")
"RTN","ECXUTL2",192,0)
 S ECXPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXUTL2",193,0)
 ;
"RTN","ECXUTL2",194,0)
 ;- Inpat/outpat indicator (ECA) initially set to "O" (outpatient)
"RTN","ECXUTL2",195,0)
 S DFN=ECXDFN,ECA="O"
"RTN","ECXUTL2",196,0)
 S (DSSDEPT,ECMN,ECTS,ECADM,ECWARD,ECDC,ECXATP,ECXPWP,ECXWW,WRD,FAC,ECXPWPPC,ECXATPPC)=""
"RTN","ECXUTL2",197,0)
 S VAIP("D")=ECXDATE D IN5^VADPT
"RTN","ECXUTL2",198,0)
 S ECMN=$G(VAIP(1))
"RTN","ECXUTL2",199,0)
 I ECMN D
"RTN","ECXUTL2",200,0)
 .S ECTS=+$P($G(^DIC(45.7,+VAIP(8),0)),U,2) S:ECTS=0 ECTS=""
"RTN","ECXUTL2",201,0)
 .;
"RTN","ECXUTL2",202,0)
 .;- Get inpat/outpat indicator
"RTN","ECXUTL2",203,0)
 .S ECA=$$INOUTP^ECXUTL4(ECTS)
"RTN","ECXUTL2",204,0)
 .S ECADM=+$G(VAIP(13,1)) S:ECADM=0 ECADM=""
"RTN","ECXUTL2",205,0)
 .S ECWARD=+$G(VAIP(5)) S:ECWARD=0 ECWARD=""
"RTN","ECXUTL2",206,0)
 .I ECWARD D
"RTN","ECXUTL2",207,0)
 ..S WRD=+$P($G(^DIC(42,+ECWARD,44)),U)
"RTN","ECXUTL2",208,0)
 ..S FAC=$P($G(^DIC(42,+ECWARD,0)),U,11)
"RTN","ECXUTL2",209,0)
 ..S DSSDEPT=$P($G(^ECX(727.4,ECWARD,0)),U,2)
"RTN","ECXUTL2",210,0)
 .S ECXWW=WRD_";"_FAC_";"_DSSDEPT,ECDC=+$G(VAIP(17,1)) S:ECDC=0 ECDC=""
"RTN","ECXUTL2",211,0)
 .S ECXPWP=+VAIP(7) S:ECXPWP=0 ECXPWP=""
"RTN","ECXUTL2",212,0)
 .S ECXATP=+VAIP(18) S:ECXATP=0 ECXATP=""
"RTN","ECXUTL2",213,0)
 .S ECXPWPPC=$$PRVCLASS^ECXUTL(ECXPWP,ECADM)
"RTN","ECXUTL2",214,0)
 .S ECXATPPC=$$PRVCLASS^ECXUTL(ECXATP,ECADM)
"RTN","ECXUTL2",215,0)
 .;prefix file #200 iens
"RTN","ECXUTL2",216,0)
 .S:ECXPWP ECXPWP=ECXPROF_ECXPWP S:ECXATP ECXATP=ECXPROF_ECXATP
"RTN","ECXUTL2",217,0)
 S ECXDOM=$P($G(^ECX(727.831,+ECTS,0)),U,2)
"RTN","ECXUTL2",218,0)
 S ECXINP=ECA_U_ECMN_U_ECTS_U_ECADM_U_ECWARD_U_ECDC_U_ECXPWP_U_ECXATP_U_ECXWW_U_ECXDOM_U_ECXPWPPC_U_ECXATPPC
"RTN","ECXUTL2",219,0)
 Q ECXINP
"RTN","ECXUTL2",220,0)
 ;
"RTN","ECXUTL2",221,0)
VISN19(ECXDFN,ECXPAYOR,ECXSAI) ;visn 19 sharing agreement data
"RTN","ECXUTL2",222,0)
 ; input  ECXDFN = patient file ien
"RTN","ECXUTL2",223,0)
 ; output ECXPAYOR, ECXSAI (passed by reference)
"RTN","ECXUTL2",224,0)
 ;
"RTN","ECXUTL2",225,0)
 N JJ,ALIAS,INSUR,DIC,DIQ,DA,DR,ECXARY,ECXERR,ECXDA
"RTN","ECXUTL2",226,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXUTL2",227,0)
 D GETS^DIQ(2,ECXDFN,"1*,","I","ECXARY","ECXERR")
"RTN","ECXUTL2",228,0)
 I $D(ECXERR) Q
"RTN","ECXUTL2",229,0)
 S JJ=0 F  S JJ=$O(ECXARY(2.01,JJ)) Q:JJ=""  D  I ECXPAYOR]"" Q
"RTN","ECXUTL2",230,0)
 . S ALIAS=$G(ECXARY(2.01,JJ,.01,"I"))
"RTN","ECXUTL2",231,0)
 . S ECXPAYOR=$S(ALIAS="SHARING AGREEMENT":"A",ALIAS="TRICARE":"B",ALIAS="CAT C":"C",ALIAS="CATEGORY C":"C",ALIAS="CHAMPVA":"D",ALIAS="CHAMPUS":"E",1:"")
"RTN","ECXUTL2",232,0)
 . W !,$G(CNT)+1
"RTN","ECXUTL2",233,0)
 . W !,"The value of ECXPAYOR is: ",ECXPAYOR
"RTN","ECXUTL2",234,0)
 ;K ECXARY,ECXERR
"RTN","ECXUTL2",235,0)
 I ECXPAYOR]"" D GETS^DIQ(2,ECXDFN,".3121*,","I","ECXARY","ECXERR") D
"RTN","ECXUTL2",236,0)
 . W !,"This is a test"
"RTN","ECXUTL2",237,0)
 . I $D(ECXERR) Q
"RTN","ECXUTL2",238,0)
 . S JJ=0,ECXDA=$O(ECXARY(2.312,JJ)) I ECXDA="" Q
"RTN","ECXUTL2",239,0)
 . S DA=$G(ECXARY(2.312,ECXDA,.01,"I")) I DA="" Q
"RTN","ECXUTL2",240,0)
 . S INSUR=$$GET1^DIQ(36,DA,".01","I","","ECXERR")
"RTN","ECXUTL2",241,0)
 . I '$D(ECXERR) S ECXSAI=$E(ECXARY(2.312,ECXDA,.01,"I"),1,11)
"RTN","ECXUTL2",242,0)
 Q
"RTN","ECXUTL3")
0^11^B60329558^B59140421
"RTN","ECXUTL3",1,0)
ECXUTL3 ;ALB/GTS - Utilities for DSS Extracts ; 11/2/06 9:07am
"RTN","ECXUTL3",2,0)
 ;;3.0;DSS EXTRACTS;**11,24,32,33,35,37,39,42,46,92**;Dec 22,1997;Build 30
"RTN","ECXUTL3",3,0)
 ;
"RTN","ECXUTL3",4,0)
OUTPTTM(ECXDFN,ECXDT) ;* Return PC Team from PCMM files or DPT
"RTN","ECXUTL3",5,0)
 ; Variables -
"RTN","ECXUTL3",6,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",7,0)
 ;            ECXDT  - Relevant Date for Primary Care Team
"RTN","ECXUTL3",8,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",9,0)
 ;
"RTN","ECXUTL3",10,0)
 ; Returned: ECXTM -
"RTN","ECXUTL3",11,0)
 ;            Pointer to team file (#404.51)
"RTN","ECXUTL3",12,0)
 ;            or, if error or none defined, returns 0
"RTN","ECXUTL3",13,0)
 ;
"RTN","ECXUTL3",14,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",15,0)
 N ECXTM
"RTN","ECXUTL3",16,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",17,0)
 I $T(OUTPTTM^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",18,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",19,0)
 I $T(OUTPTTM^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",20,0)
 .S ECXTM=+$$OUTPTTM^SDUTL3(ECXDFN)
"RTN","ECXUTL3",21,0)
 I ECXTM=0 D
"RTN","ECXUTL3",22,0)
 .S ECXTM=+$P($G(^DPT(+ECXDFN,"PC")),U,2)
"RTN","ECXUTL3",23,0)
 Q ECXTM
"RTN","ECXUTL3",24,0)
 ;
"RTN","ECXUTL3",25,0)
OUTPTPR(ECXDFN,ECXDT) ;* Return PC Provider from PCMM files or DPT
"RTN","ECXUTL3",26,0)
 ; Variables -
"RTN","ECXUTL3",27,0)
 ;            ECXDFN - IEN from Patient file (Required)
"RTN","ECXUTL3",28,0)
 ;            ECXDT  - Relevant Date for Primary Care Provider
"RTN","ECXUTL3",29,0)
 ;                      (Defaults to DT)
"RTN","ECXUTL3",30,0)
 ;
"RTN","ECXUTL3",31,0)
 ; Returned: ECXPR -
"RTN","ECXUTL3",32,0)
 ;            Pointer to file #200 
"RTN","ECXUTL3",33,0)
 ;            or, if error or none defined, returns a 0
"RTN","ECXUTL3",34,0)
 ;
"RTN","ECXUTL3",35,0)
 Q:'$G(ECXDFN) 0 ;** Quit if ECXDFN not defined
"RTN","ECXUTL3",36,0)
 N ECXPR
"RTN","ECXUTL3",37,0)
 S:'$D(ECXDT) ECXDT=DT
"RTN","ECXUTL3",38,0)
 I $T(OUTPTPR^SDUTL3)[",SCDATE" D
"RTN","ECXUTL3",39,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN,ECXDT)
"RTN","ECXUTL3",40,0)
 I $T(OUTPTPR^SDUTL3)'[",SCDATE" D
"RTN","ECXUTL3",41,0)
 .S ECXPR=+$$OUTPTPR^SDUTL3(ECXDFN)
"RTN","ECXUTL3",42,0)
 I ECXPR=0 D
"RTN","ECXUTL3",43,0)
 .S ECXPR=+$G(^DPT(+ECXDFN,"PC"))
"RTN","ECXUTL3",44,0)
 Q ECXPR
"RTN","ECXUTL3",45,0)
 ;
"RTN","ECXUTL3",46,0)
PAT(ECXDFN,ECXDATE,ECXDATA,ECXPAT) ;Return basic patient data for extract
"RTN","ECXUTL3",47,0)
 ; Will not return data associated with test patients (SSN begin w 00000)
"RTN","ECXUTL3",48,0)
 ; Variables -
"RTN","ECXUTL3",49,0)
 ;  Input  ECXDFN - Patient internal entry number, DFN file#2; required
"RTN","ECXUTL3",50,0)
 ;         ECXDATE- Date used to get specific data from GETSTAT^DGMSTAPI
"RTN","ECXUTL3",51,0)
 ;                  for MST. If no date, defaults to today's date,
"RTN","ECXUTL3",52,0)
 ;                  standard FM format, optional
"RTN","ECXUTL3",53,0)
 ;         ECXDATA- Code indicating which data to return, optional.
"RTN","ECXUTL3",54,0)
 ;                  If code not specified then returns all. Codes are:
"RTN","ECXUTL3",55,0)
 ;                  1 - DEM^VADPT (demographic data)
"RTN","ECXUTL3",56,0)
 ;                  2 - ADD^VADPT (current address)
"RTN","ECXUTL3",57,0)
 ;                  3 - ELIG^VADPT (eligibility & enrollment location)
"RTN","ECXUTL3",58,0)
 ;                  4 - OPD^VADPT (other patient data)
"RTN","ECXUTL3",59,0)
 ;                  5 - SVC^VADPT & GETSTAT^DGMSTAPI (service & MST inf)
"RTN","ECXUTL3",60,0)
 ;         ECXPAT(- Passed by reference; required
"RTN","ECXUTL3",61,0)
 ;
"RTN","ECXUTL3",62,0)
 ;  Output:
"RTN","ECXUTL3",63,0)
 ;         ECXPAT   0 error or test patient no data in ECXPAT array
"RTN","ECXUTL3",64,0)
 ;                  1 data returned in ECXPAT array
"RTN","ECXUTL3",65,0)
 ;         ECXPAT(  Local array with patient data.
"RTN","ECXUTL3",66,0)
 ;
"RTN","ECXUTL3",67,0)
 N SSN,I,ECXCOD,ECXDAT,DFN,VAPA,VADM,VAEL,VAPD,VASV,STR,ECXAR,DIC,DIQ,RCNUM,RCVAL,COLMETH
"RTN","ECXUTL3",68,0)
 N DA,DR,PELG,MELIG,ZIP,MPI
"RTN","ECXUTL3",69,0)
 I ECXDFN="" Q 0
"RTN","ECXUTL3",70,0)
 S SSN=$$GET1^DIQ(2,ECXDFN,.09,"I"),DFN=ECXDFN,ECXPAT=0
"RTN","ECXUTL3",71,0)
 I $E(SSN,1,5)="00000"!(SSN="") K ECXPAT Q 0  ;test patient
"RTN","ECXUTL3",72,0)
 S STR="NAME;SSN;DOB;SEX;RACE;RELIGION;STATE;COUNTY;ZIP;SC%;MEANS;ELIG;"
"RTN","ECXUTL3",73,0)
 S STR=STR_"EMPLOY;AO STAT;IR STAT;EC STAT;POW STAT;POW LOC;MST STAT;"
"RTN","ECXUTL3",74,0)
 S STR=STR_"ENROLL LOC;MPI;VIETNAM;POS;MARITAL"
"RTN","ECXUTL3",75,0)
 ;initialize return array values
"RTN","ECXUTL3",76,0)
 F I=1:1 S ECXDAT=$P(STR,";",I) Q:ECXDAT=""  S ECXPAT(ECXDAT)=""
"RTN","ECXUTL3",77,0)
 F I=1:1:$L(ECXDATA,";") S ECXDAT=$P(ECXDATA,";",I) I ECXDAT'="" D
"RTN","ECXUTL3",78,0)
 . S ECXCOD(ECXDAT)=""
"RTN","ECXUTL3",79,0)
 ;
"RTN","ECXUTL3",80,0)
 ;- Get ICN if MPI installed
"RTN","ECXUTL3",81,0)
 S X="MPIF001" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",82,0)
 .;
"RTN","ECXUTL3",83,0)
 .;- Get 1st piece (either ICN # or -1 if error)
"RTN","ECXUTL3",84,0)
 . S MPI=+$$GETICN^MPIF001(DFN)
"RTN","ECXUTL3",85,0)
 .;
"RTN","ECXUTL3",86,0)
 .;- If error, set to null
"RTN","ECXUTL3",87,0)
 . S ECXPAT("MPI")=$S(MPI>0:MPI,1:"")
"RTN","ECXUTL3",88,0)
 D  ;get demographic data
"RTN","ECXUTL3",89,0)
 . I ECXDATA'="",'$D(ECXCOD(1)) Q
"RTN","ECXUTL3",90,0)
 . D DEM^VADPT
"RTN","ECXUTL3",91,0)
 . S ECXPAT("NAME")=$E($P(VADM(1),",")_"    ",1,4)
"RTN","ECXUTL3",92,0)
 . S ECXPAT("SSN")=$P(VADM(2),U),ECXPAT("MARITAL")=$P(VADM(10),U)
"RTN","ECXUTL3",93,0)
 . S ECXPAT("DOB")=$$ECXDOB^ECXUTL($P(VADM(3),U))
"RTN","ECXUTL3",94,0)
 . S ECXPAT("SEX")=$P(VADM(5),U),ECXPAT("RELIGION")=$P(VADM(9),U)
"RTN","ECXUTL3",95,0)
 . S DIC=10,DR=2,DA=+VADM(8),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",96,0)
 . S ECXPAT("RACE")=$G(ECXAR(10,DA,DR,"I")),ECXPAT=1
"RTN","ECXUTL3",97,0)
 . ;add new race and ethnicity fields for FY2003
"RTN","ECXUTL3",98,0)
 . S (ECXPAT("ETHNIC"),ECXPAT("RACE1"))=""
"RTN","ECXUTL3",99,0)
 . S X="DGUTL4" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",100,0)
 .. S COLMETH=$$PTR2CODE^DGUTL4($G(VADM(11,1,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",101,0)
 ... S ECXPAT("ETHNIC")=$$PTR2CODE^DGUTL4(+$G(VADM(11,1)),2,4)
"RTN","ECXUTL3",102,0)
 .. S (RCVAL,RCNUM)=""
"RTN","ECXUTL3",103,0)
 .. F  S RCNUM=$O(VADM(12,RCNUM)) Q:RCNUM=""  Q:RCVAL="C"  S COLMETH=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM,1)),3,4) I COLMETH="S" D
"RTN","ECXUTL3",104,0)
 ... S RCVAL=$$PTR2CODE^DGUTL4(+$G(VADM(12,RCNUM)),1,4)
"RTN","ECXUTL3",105,0)
 ... I RCVAL="C" S ECXPAT("RACE1")=RCVAL Q
"RTN","ECXUTL3",106,0)
 ... S ECXPAT("RACE1")=ECXPAT("RACE1")_RCVAL
"RTN","ECXUTL3",107,0)
 D  ;get address information
"RTN","ECXUTL3",108,0)
 . I ECXDATA'="",'$D(ECXCOD(2)) Q
"RTN","ECXUTL3",109,0)
 . D ADD^VADPT
"RTN","ECXUTL3",110,0)
 . S DIC=5,DR=2,DA=+VAPA(5),DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",111,0)
 . S ECXPAT("STATE")=$G(ECXAR(5,DA,DR,"I"))
"RTN","ECXUTL3",112,0)
 . S DIC=5,DA=+VAPA(5),DR=3,DR(5.01)=2,DA(5.01)=+VAPA(7),DIQ="ECXAR"
"RTN","ECXUTL3",113,0)
 . S DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",114,0)
 . S ECXPAT("COUNTY")=$G(ECXAR(5.01,DA(5.01),2,"I"))
"RTN","ECXUTL3",115,0)
 . S ECXPAT("ZIP")=$P(VAPA(11),U,2),ECXPAT=1
"RTN","ECXUTL3",116,0)
 D  ;get eligibility information
"RTN","ECXUTL3",117,0)
 . I ECXDATA'="",'$D(ECXCOD(3)) Q
"RTN","ECXUTL3",118,0)
 . D ELIG^VADPT
"RTN","ECXUTL3",119,0)
 . S PELG=$P(VAEL(1),U),MELIG=$S(PELG="":"",1:$$GET1^DIQ(8,PELG,8,"I"))
"RTN","ECXUTL3",120,0)
 . S ECXPAT("POS")=$P($G(^DIC(21,+VAEL(2),0)),U,3)
"RTN","ECXUTL3",121,0)
 . S ECXPAT("SC STAT")=$S(+VAEL(3):"Y",+VAEL(3)=0:"N",1:"")
"RTN","ECXUTL3",122,0)
 . S ECXPAT("SC%")=$P(VAEL(3),U,2)
"RTN","ECXUTL3",123,0)
 . S ECXPAT("VET")=$S(VAEL(4):"Y",VAEL(4)=0:"N",1:"")
"RTN","ECXUTL3",124,0)
 . S ECXPAT("MEANS")=$P(VAEL(9),U),ECXPAT=1
"RTN","ECXUTL3",125,0)
 . S ECXPAT("ELIG")=$$ELIG(MELIG,ECXPAT("SC%"))
"RTN","ECXUTL3",126,0)
 . ;get enrollment location
"RTN","ECXUTL3",127,0)
 . S DIC=2,DR=27.02,DA=ECXDFN,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",128,0)
 . S ECXDAT=$G(ECXAR(2,ECXDFN,DR,"I")) I ECXDAT K ECXAR D
"RTN","ECXUTL3",129,0)
 . . S DIC=4,DA=ECXDAT,DR=99,DIQ="ECXAR",DIQ(0)="I" D EN^DIQ1
"RTN","ECXUTL3",130,0)
 . . S ECXPAT("ENROLL LOC")=ECXAR(4,ECXDAT,DR,"I")
"RTN","ECXUTL3",131,0)
 . ;get Emergency Response Indicator (FEMA)
"RTN","ECXUTL3",132,0)
 . S ECXPAT("ERI")=$$GET1^DIQ(2,ECXDFN,.181,"I")
"RTN","ECXUTL3",133,0)
 D  ;get other patient information
"RTN","ECXUTL3",134,0)
 . I ECXDATA'="",'$D(ECXCOD(4)) Q
"RTN","ECXUTL3",135,0)
 . D OPD^VADPT
"RTN","ECXUTL3",136,0)
 . S ECXPAT("EMPLOY")=$P(VAPD(7),U),ECXPAT=1
"RTN","ECXUTL3",137,0)
 D  ;get service information
"RTN","ECXUTL3",138,0)
 . I ECXDATA'="",'$D(ECXCOD(5)) Q
"RTN","ECXUTL3",139,0)
 . D SVC^VADPT
"RTN","ECXUTL3",140,0)
 . S ECXPAT("VIETNAM")=$S(VASV(1):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",141,0)
 . S ECXPAT("AO STAT")=$S(VASV(2):"Y",VASV(2)=0:"N",1:"U")
"RTN","ECXUTL3",142,0)
 . S ECXPAT("IR STAT")=$S(VASV(3):"Y",VASV(3)=0:"N",1:"U")
"RTN","ECXUTL3",143,0)
 . S ECXPAT("EC STAT")=$$GET1^DIQ(2,ECXDFN,.322013,"I")
"RTN","ECXUTL3",144,0)
 . S ECXPAT("POW STAT")=$S(VASV(4):"Y",VASV(4)=0:"N",1:"U")
"RTN","ECXUTL3",145,0)
 . S ECXPAT("POW LOC")=$P(VASV(4,3),U),ECXPAT=1
"RTN","ECXUTL3",146,0)
 . S ECXPAT("PHI")=$S(VASV(9)=1:"Y",VASV(9)=0:"N",1:"")
"RTN","ECXUTL3",147,0)
 . ;- Agent Orange Location (K=Korean DMZ,V=Vietnam)
"RTN","ECXUTL3",148,0)
 . S ECXPAT("AOL")=$P($G(VASV(2,5)),U)
"RTN","ECXUTL3",149,0)
 . ;get patient current MST status
"RTN","ECXUTL3",150,0)
 . I ECXDATE'="",ECXDATE'["." S ECXDATE=ECXDATE+.9
"RTN","ECXUTL3",151,0)
 . S X="DGMSTAPI" X ^%ZOSF("TEST") I $T D
"RTN","ECXUTL3",152,0)
 . . S ECXDAT=$$GETSTAT^DGMSTAPI(DFN,ECXDATE)
"RTN","ECXUTL3",153,0)
 . . S ECXPAT("MST STAT")=$S(+ECXDAT>0:$P(ECXDAT,U,2),1:"")
"RTN","ECXUTL3",154,0)
 I 'ECXPAT K ECXPAT Q 0
"RTN","ECXUTL3",155,0)
 Q 1
"RTN","ECXUTL3",156,0)
 ;
"RTN","ECXUTL3",157,0)
ELIG(ECXELIG,ECXSVCP) ;Converts veteran eligibility code to NPCD code
"RTN","ECXUTL3",158,0)
 ; Variables -
"RTN","ECXUTL3",159,0)
 ;  Input  ECXELIG - Pointer to MAS ELIGIBILITY CODE file #8.1
"RTN","ECXUTL3",160,0)
 ;         ECXSVCP - Number value rep. service connected percentage.
"RTN","ECXUTL3",161,0)
 ;
"RTN","ECXUTL3",162,0)
 ;  Output:
"RTN","ECXUTL3",163,0)
 ;         ECXNCPD  NPCD Eligibility Code
"RTN","ECXUTL3",164,0)
 ;
"RTN","ECXUTL3",165,0)
 N TEXT,IEN,SCPER,FND,NPCD,I,ECXBG,ECXEN,ECXNPCD
"RTN","ECXUTL3",166,0)
 I ECXELIG="" Q ""
"RTN","ECXUTL3",167,0)
 F I=1:1 S TEXT=$P($T(ELGTXT+I),";",3,999) Q:TEXT="END"  D  I $D(NPCD) Q
"RTN","ECXUTL3",168,0)
 . S IEN=$P(TEXT,";"),SCPER=$P(TEXT,";",2)
"RTN","ECXUTL3",169,0)
 . I ECXELIG=IEN D
"RTN","ECXUTL3",170,0)
 . . I SCPER="" S NPCD=$P(TEXT,";",3) Q
"RTN","ECXUTL3",171,0)
 . . S ECXBG=$S($E(SCPER)="<":0,$E(SCPER)=">":$P(SCPER,">",2)+1,SCPER["-":+SCPER,1:"")
"RTN","ECXUTL3",172,0)
 . . S ECXEN=$S($E(SCPER)="<":$P(SCPER,"<",2),$E(SCPER)=">":100,SCPER["-":$P(SCPER,"-",2),1:"")
"RTN","ECXUTL3",173,0)
 . . I ECXSVCP'<ECXBG,ECXSVCP'>ECXEN S NPCD=$P(TEXT,";",3)
"RTN","ECXUTL3",174,0)
 S ECXNPCD=$G(NPCD)
"RTN","ECXUTL3",175,0)
 Q ECXNPCD
"RTN","ECXUTL3",176,0)
ELGTXT ;Eligibility codes
"RTN","ECXUTL3",177,0)
 ;;1;>49;10;SC 50-100%
"RTN","ECXUTL3",178,0)
 ;;2;;20;Aid & Attendance
"RTN","ECXUTL3",179,0)
 ;;15;;21;Housebound
"RTN","ECXUTL3",180,0)
 ;;16;;22;Mexican Border War
"RTN","ECXUTL3",181,0)
 ;;17;;23;WWI
"RTN","ECXUTL3",182,0)
 ;;18;;24;POW
"RTN","ECXUTL3",183,0)
 ;;3;40-49;30;SC 40-49%
"RTN","ECXUTL3",184,0)
 ;;3;30-39;31;SC 30-39%
"RTN","ECXUTL3",185,0)
 ;;3;20-29;32;SC 20-29%
"RTN","ECXUTL3",186,0)
 ;;3;10-19;33;SC 10-19%
"RTN","ECXUTL3",187,0)
 ;;3;<10;34;SC less than 10%
"RTN","ECXUTL3",188,0)
 ;;4;;40;NSC - VA Pension
"RTN","ECXUTL3",189,0)
 ;;5;;50;NSC
"RTN","ECXUTL3",190,0)
 ;;21;;60;Catastrophic Disability
"RTN","ECXUTL3",191,0)
 ;;12;;101;CHAMPVA
"RTN","ECXUTL3",192,0)
 ;;13;;102;Collateral of Veteran
"RTN","ECXUTL3",193,0)
 ;;14;;103;Employee
"RTN","ECXUTL3",194,0)
 ;;6;;104;Other Federal Agency
"RTN","ECXUTL3",195,0)
 ;;7;;105;Allied Veteran
"RTN","ECXUTL3",196,0)
 ;;8;;106;Humanitarian Emergency
"RTN","ECXUTL3",197,0)
 ;;9;;107;Sharing Agreement
"RTN","ECXUTL3",198,0)
 ;;10;;108;Reimbursable Insurance
"RTN","ECXUTL3",199,0)
 ;;19;;109;TRICARE/CHAMPUS
"RTN","ECXUTL3",200,0)
 ;;22;;25;Purple Heart Recipient
"RTN","ECXUTL3",201,0)
 ;;END
"RTN","ECXUTL3",202,0)
 ;
"RTN","ECXUTL3",203,0)
CPT(ECXCPT,ECXMOD,ECXQUA) ;Returns a str with CPT code and modifier codes
"RTN","ECXUTL3",204,0)
 ;Return string is composed of a 5 character CPT code 2 character quantity
"RTN","ECXUTL3",205,0)
 ;plus up to 5 modifier codes, 2 characters each.
"RTN","ECXUTL3",206,0)
 ; Variables -
"RTN","ECXUTL3",207,0)
 ;  Input  ECXCPT  - Pointer value to the CPT file (#81)
"RTN","ECXUTL3",208,0)
 ;         ECXMOD - A string with pointer values to the CPT
"RTN","ECXUTL3",209,0)
 ;                   MODIFIER file (#81.3) separated by ";"
"RTN","ECXUTL3",210,0)
 ;         ECXQUA  - Number of time this procedure performed
"RTN","ECXUTL3",211,0)
 ;
"RTN","ECXUTL3",212,0)
 ;  Output:
"RTN","ECXUTL3",213,0)
 ;         CPTMOD  - String of up to 17 characters, 5 character CPT
"RTN","ECXUTL3",214,0)
 ;                   code 2 character qty plus up to 5 2-character
"RTN","ECXUTL3",215,0)
 ;                   code modifiers.
"RTN","ECXUTL3",216,0)
 ;
"RTN","ECXUTL3",217,0)
 N CPT,MOD,I,CPTMOD
"RTN","ECXUTL3",218,0)
 S ECXQUA=$G(ECXQUA,"01"),ECXMOD=$G(ECXMOD)
"RTN","ECXUTL3",219,0)
 S:$L(ECXQUA)'=2 ECXQUA="0"_ECXQUA
"RTN","ECXUTL3",220,0)
 S CPT=$$CPT^ICPTCOD(ECXCPT,"") I +CPT=-1 Q ""
"RTN","ECXUTL3",221,0)
 S CPT=$P(CPT,U,2)_ECXQUA
"RTN","ECXUTL3",222,0)
 F I=1:1:99 I $P(ECXMOD,";",I)'="" D
"RTN","ECXUTL3",223,0)
 . S MOD=$$MOD^ICPTMOD($P(ECXMOD,";",I),"I","")
"RTN","ECXUTL3",224,0)
 . I +MOD>0,$P(MOD,U,2)'="99" S CPT=CPT_$P(MOD,U,2)
"RTN","ECXUTL3",225,0)
 S CPTMOD=$TR($E(CPT,1,17)," ")
"RTN","ECXUTL3",226,0)
 Q CPTMOD
"RTN","ECXUTL3",227,0)
 ;
"RTN","ECXUTL3",228,0)
CPTOUT(ECXCPT) ;output transform for CPT code plus modifiers
"RTN","ECXUTL3",229,0)
 ;input  ECXCPT  - character string of CPT code plus modifiers (required)
"RTN","ECXUTL3",230,0)
 ;
"RTN","ECXUTL3",231,0)
 N J,CPTX,MOD,MODS,MODX,CPTMOD
"RTN","ECXUTL3",232,0)
 Q:$G(ECXCPT)="" ""
"RTN","ECXUTL3",233,0)
 S (CPTMOD,MODX)=""
"RTN","ECXUTL3",234,0)
 S CPTX="("_+$E(ECXCPT,6,7)_") "_$E(ECXCPT,1,5),MODS=$E(ECXCPT,8,17)
"RTN","ECXUTL3",235,0)
 F J=1:2:9 S MOD=$E(MODS,J,J+1) Q:MOD=""  D
"RTN","ECXUTL3",236,0)
 .I J>1 S MODX=MODX_", "_MOD Q
"RTN","ECXUTL3",237,0)
 .S MODX=MODX_"-"_MOD
"RTN","ECXUTL3",238,0)
 S:$L(CPTX)>3 CPTMOD=CPTMOD_CPTX_MODX
"RTN","ECXUTL3",239,0)
 Q CPTMOD
"RTN","ECXUTL4")
0^38^B41093966^B40678058
"RTN","ECXUTL4",1,0)
ECXUTL4 ;ALB/ESD - Utilities for DSS Extracts ; 11/2/06 9:08am
"RTN","ECXUTL4",2,0)
 ;;3.0;DSS EXTRACTS;**39,41,46,49,78,92**;Dec 22,1997;Build 30
"RTN","ECXUTL4",3,0)
 ;
"RTN","ECXUTL4",4,0)
OBSPAT(ECXIO,ECXTS,DSSID) ;
"RTN","ECXUTL4",5,0)
 ; Get observation patient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",6,0)
 ; TRANSLATION file (#727.831) or DSS Identifier
"RTN","ECXUTL4",7,0)
 ;
"RTN","ECXUTL4",8,0)
 ; Input:
"RTN","ECXUTL4",9,0)
 ;   ECXIO  - Inpatient/Outpatient indicator
"RTN","ECXUTL4",10,0)
 ;   ECXTS  - Treating specialty (from file #42.4)
"RTN","ECXUTL4",11,0)
 ;   DSSID  - DSS Identifier
"RTN","ECXUTL4",12,0)
 ;
"RTN","ECXUTL4",13,0)
 ;Output:
"RTN","ECXUTL4",14,0)
 ;   ECXOBS - Observation patient indicator (YES/NO)
"RTN","ECXUTL4",15,0)
 ;
"RTN","ECXUTL4",16,0)
 ;- Check input vars
"RTN","ECXUTL4",17,0)
 S ECXIO=$G(ECXIO),ECXTS=+$G(ECXTS),DSSID=+$G(DSSID)
"RTN","ECXUTL4",18,0)
 S ECXOBS=""
"RTN","ECXUTL4",19,0)
 D
"RTN","ECXUTL4",20,0)
 .;- Look up obs patient indicator if treating spec is in file #727.831
"RTN","ECXUTL4",21,0)
 . I $G(^ECX(727.831,ECXTS,0)) S ECXOBS=$P($G(^ECX(727.831,ECXTS,0)),"^",4)
"RTN","ECXUTL4",22,0)
 . I ECXOBS'="" S ECXOBS=$S(ECXOBS="Y":"YES",1:"NO") Q
"RTN","ECXUTL4",23,0)
 .;
"RTN","ECXUTL4",24,0)
 .;- If outpatient and TS not in file, AND Feeder Key (CLI) or DSS ID
"RTN","ECXUTL4",25,0)
 .;- (MTL,IVP,ECQ,QSR,NOS,SUR) is 290-296, Observation Patient Ind=YES
"RTN","ECXUTL4",26,0)
 . I ECXIO="O",ECXOBS="",DSSID D
"RTN","ECXUTL4",27,0)
 .. I $E(DSSID,1,3)>289&($E(DSSID,1,3)<297) S ECXOBS="YES"
"RTN","ECXUTL4",28,0)
 .. E  S ECXOBS="NO"
"RTN","ECXUTL4",29,0)
 Q $S(ECXOBS'="":ECXOBS,1:"NO")
"RTN","ECXUTL4",30,0)
 ;
"RTN","ECXUTL4",31,0)
INOUTP(ECXTS) ;
"RTN","ECXUTL4",32,0)
 ; Get inpatient/outpatient indicator from DSS TREATING SPECIALTY
"RTN","ECXUTL4",33,0)
 ; TRANSLATION file (#727.831)
"RTN","ECXUTL4",34,0)
 ;
"RTN","ECXUTL4",35,0)
 ; Input:
"RTN","ECXUTL4",36,0)
 ;   ECXTS   - Treating specialty
"RTN","ECXUTL4",37,0)
 ;
"RTN","ECXUTL4",38,0)
 ; Output:
"RTN","ECXUTL4",39,0)
 ;             Inpatient/Outpatient indicator (I/O)
"RTN","ECXUTL4",40,0)
 ;
"RTN","ECXUTL4",41,0)
 S ECXTS=+$G(ECXTS)
"RTN","ECXUTL4",42,0)
 S ECXIO=""
"RTN","ECXUTL4",43,0)
 ;
"RTN","ECXUTL4",44,0)
 ;- Look up inpat/outpat indicator if treating spec is in file
"RTN","ECXUTL4",45,0)
 I $G(^ECX(727.831,ECXTS,0)) S ECXIO=$P($G(^ECX(727.831,ECXTS,0)),"^",5)
"RTN","ECXUTL4",46,0)
 Q $S(ECXIO'="":ECXIO,1:"I")
"RTN","ECXUTL4",47,0)
 ;
"RTN","ECXUTL4",48,0)
ENCNUM(ECXIO,ECXSSN,ECXADT,ECXVDT,ECXTRT,ECXOBS,ECXEXT,ECXSTP,ECXSTP2) ;
"RTN","ECXUTL4",49,0)
 ; Get encounter number
"RTN","ECXUTL4",50,0)
 ;
"RTN","ECXUTL4",51,0)
 ; Input:
"RTN","ECXUTL4",52,0)
 ;   ECXIO   - Inpat/Outpat indicator = I or O
"RTN","ECXUTL4",53,0)
 ;   ECXSSN  - Patient SSN
"RTN","ECXUTL4",54,0)
 ;   ECXADT  - Admit Date
"RTN","ECXUTL4",55,0)
 ;   ECXVDT  - Visit Date
"RTN","ECXUTL4",56,0)
 ;   ECXTRT  - Treating Spec
"RTN","ECXUTL4",57,0)
 ;   ECXOBS  - Observation Pat Indicator
"RTN","ECXUTL4",58,0)
 ;   ECXEXT  - Extract
"RTN","ECXUTL4",59,0)
 ;   ECXSTP  - Stop Code (or stop code related) variable
"RTN","ECXUTL4",60,0)
 ;   ECXSTP2 - Stop Code (or stop code related) addtl variable
"RTN","ECXUTL4",61,0)
 ;             (used for SUR and ECS)
"RTN","ECXUTL4",62,0)
 ;
"RTN","ECXUTL4",63,0)
 ;Output:
"RTN","ECXUTL4",64,0)
 ;             Encounter Number
"RTN","ECXUTL4",65,0)
 ;
"RTN","ECXUTL4",66,0)
 N ENCNUM,ECXDATE,ECXSTCD
"RTN","ECXUTL4",67,0)
 S (ENCNUM,ECXSTCD)=""
"RTN","ECXUTL4",68,0)
 ;
"RTN","ECXUTL4",69,0)
 ;- Check input vars
"RTN","ECXUTL4",70,0)
 S ECXEXT=$G(ECXEXT),ECXIO=$G(ECXIO),ECXOBS=$G(ECXOBS),ECXTRT=+$G(ECXTRT)
"RTN","ECXUTL4",71,0)
 S ECXSTP=+$G(ECXSTP),ECXSTP2=+$G(ECXSTP2)
"RTN","ECXUTL4",72,0)
 S ECXADT=+$G(ECXADT),ECXVDT=+$G(ECXVDT)
"RTN","ECXUTL4",73,0)
 ;
"RTN","ECXUTL4",74,0)
 ;- Don't use pseudo-SSN in encounter number
"RTN","ECXUTL4",75,0)
 S ECXSSN=$E($G(ECXSSN),1,9)
"RTN","ECXUTL4",76,0)
 ;
"RTN","ECXUTL4",77,0)
 D
"RTN","ECXUTL4",78,0)
 . ;- Inpatient
"RTN","ECXUTL4",79,0)
 . I ECXIO="I",ECXADT,ECXSSN'="" D  Q
"RTN","ECXUTL4",80,0)
 .. S ECXDATE=$$ADMITDT(ECXADT)
"RTN","ECXUTL4",81,0)
 .. I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_"I"
"RTN","ECXUTL4",82,0)
 . ;
"RTN","ECXUTL4",83,0)
 . ;- Outpatient branch
"RTN","ECXUTL4",84,0)
 . I ECXIO="O" D
"RTN","ECXUTL4",85,0)
 .. ;- Observation patient (outpatient)
"RTN","ECXUTL4",86,0)
 .. I ECXOBS="YES",ECXSSN'="" D  Q
"RTN","ECXUTL4",87,0)
 ... ;
"RTN","ECXUTL4",88,0)
 ... S ECXDATE=$S(ECXADT:$$JULDT(ECXADT),1:$$JULDT(ECXVDT))
"RTN","ECXUTL4",89,0)
 ... S ECXSTCD=$S(+$P($G(^ECX(727.831,ECXTRT,0)),"^",6):+$P($G(^ECX(727.831,ECXTRT,0)),"^",6),1:+$E(ECXSTP,1,3))
"RTN","ECXUTL4",90,0)
 ... Q:ECXDATE=""!(ECXSTCD="")
"RTN","ECXUTL4",91,0)
 ... S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",92,0)
 .. ;
"RTN","ECXUTL4",93,0)
 .. ;- Outpatient (no observation pat)
"RTN","ECXUTL4",94,0)
 .. I ECXOBS="NO",ECXVDT,ECXSSN'="" D  Q
"RTN","ECXUTL4",95,0)
 ... ;
"RTN","ECXUTL4",96,0)
 ... ;- ADM, MOV, TRT have no outpat encounter number
"RTN","ECXUTL4",97,0)
 ... I ECXEXT="ADM"!(ECXEXT="MOV")!(ECXEXT="TRT") Q
"RTN","ECXUTL4",98,0)
 ... ;
"RTN","ECXUTL4",99,0)
 ... ;- Use 1st 3 chars of DSS ID for NOS and ECQ (feeder key for CLI)
"RTN","ECXUTL4",100,0)
 ... ;- Use observation stop code for IVP
"RTN","ECXUTL4",101,0)
 ... I ECXEXT="CLI"!(ECXEXT="NOS")!(ECXEXT="ECQ")!(ECXEXT="IVP") S ECXSTCD=+$E(ECXSTP,1,3) Q:'ECXSTCD
"RTN","ECXUTL4",102,0)
 ... ;
"RTN","ECXUTL4",103,0)
 ... ;- Use cost center to obtain stop code for ECS
"RTN","ECXUTL4",104,0)
 ... I ECXEXT="ECS" D  Q:'ECXSTCD
"RTN","ECXUTL4",105,0)
 .... S ECXSTCD=$$ECSCOST(ECXSTP2)
"RTN","ECXUTL4",106,0)
 ....;
"RTN","ECXUTL4",107,0)
 ....;- If no cost center, use 1st 3 chars of DSS ID
"RTN","ECXUTL4",108,0)
 .... I ECXSTCD="" S ECXSTCD=+$E(ECXSTP,1,3)
"RTN","ECXUTL4",109,0)
 ... ;
"RTN","ECXUTL4",110,0)
 ... ;- These extracts have predetermined stop code values
"RTN","ECXUTL4",111,0)
 ... I ECXEXT="DEN" S ECXSTCD=180
"RTN","ECXUTL4",112,0)
 ... I ECXEXT="PRE"!(ECXEXT="UDP") S ECXSTCD=160
"RTN","ECXUTL4",113,0)
 ... I ECXEXT="LAB"!(ECXEXT="LAR")!(ECXEXT="LBB") S ECXSTCD=108
"RTN","ECXUTL4",114,0)
 ... I ECXEXT="MTL" S ECXSTCD=538
"RTN","ECXUTL4",115,0)
 ... I ECXEXT="NUR" S ECXSTCD=950
"RTN","ECXUTL4",116,0)
 ... I ECXEXT="PRO" S ECXSTCD=423
"RTN","ECXUTL4",117,0)
 ... I ECXEXT="NUT" S ECXSTCD="NUT"
"RTN","ECXUTL4",118,0)
 ... ;
"RTN","ECXUTL4",119,0)
 ... ;- If Imaging Type fld=2, use 109 otherwise use 105
"RTN","ECXUTL4",120,0)
 ... I ECXEXT="RAD" S ECXSTCD=$S(ECXSTP=2:109,1:105)
"RTN","ECXUTL4",121,0)
 ... ;
"RTN","ECXUTL4",122,0)
 ... ;- Use DSS STOP CODE fld if populated or if SURG SPEC fld=59 use 430
"RTN","ECXUTL4",123,0)
 ... ;- otherwise if null use 429
"RTN","ECXUTL4",124,0)
 ... I ECXEXT="SUR" S ECXSTCD=$S(ECXSTP:ECXSTP,ECXSTP2=59:430,1:429)
"RTN","ECXUTL4",125,0)
 ... ;
"RTN","ECXUTL4",126,0)
 ... ;- Get Julian Date
"RTN","ECXUTL4",127,0)
 ... S ECXDATE=$$JULDT(ECXVDT)
"RTN","ECXUTL4",128,0)
 ... I ECXDATE'="" S ENCNUM=ECXSSN_ECXDATE_ECXSTCD
"RTN","ECXUTL4",129,0)
 Q ENCNUM
"RTN","ECXUTL4",130,0)
 ;
"RTN","ECXUTL4",131,0)
ADMITDT(ECXINDT) ; Returns date in YYMMDD format
"RTN","ECXUTL4",132,0)
 ;
"RTN","ECXUTL4",133,0)
 ; Input:
"RTN","ECXUTL4",134,0)
 ;   ECXINDT - Date (can also include time) in internal FM format
"RTN","ECXUTL4",135,0)
 ;
"RTN","ECXUTL4",136,0)
 ;Output:
"RTN","ECXUTL4",137,0)
 ;             Date in YYMMDD form
"RTN","ECXUTL4",138,0)
 ;
"RTN","ECXUTL4",139,0)
 N ECXDT
"RTN","ECXUTL4",140,0)
 S ECXDT=""
"RTN","ECXUTL4",141,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",142,0)
 ;
"RTN","ECXUTL4",143,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",144,0)
 I 'ECXINDT!($L(ECXINDT)<7) G ADMTDTQ
"RTN","ECXUTL4",145,0)
 ;
"RTN","ECXUTL4",146,0)
 ;- Date in YYMMDD form
"RTN","ECXUTL4",147,0)
 S ECXDT=$TR($$FMTE^XLFDT(ECXINDT,"4DF")," /","0")
"RTN","ECXUTL4",148,0)
ADMTDTQ Q ECXDT
"RTN","ECXUTL4",149,0)
 ;
"RTN","ECXUTL4",150,0)
 ;
"RTN","ECXUTL4",151,0)
JULDT(ECXINDT) ;  Returns Julian Date in MMDDD format
"RTN","ECXUTL4",152,0)
 ;
"RTN","ECXUTL4",153,0)
 ; Input:
"RTN","ECXUTL4",154,0)
 ;   ECINDT  - Date (can also include time) in internal FM format
"RTN","ECXUTL4",155,0)
 ;
"RTN","ECXUTL4",156,0)
 ;Output:
"RTN","ECXUTL4",157,0)
 ;             Julian date in MM_DDD form
"RTN","ECXUTL4",158,0)
 ;
"RTN","ECXUTL4",159,0)
 N ECXDDD,ECXDT,ECXJUL,ECXMM
"RTN","ECXUTL4",160,0)
 S (ECXDDD,ECXMM)=""
"RTN","ECXUTL4",161,0)
 ;
"RTN","ECXUTL4",162,0)
 ;- If no input or full FM date not passed in, quit
"RTN","ECXUTL4",163,0)
 S ECXINDT=+$G(ECXINDT)
"RTN","ECXUTL4",164,0)
 I 'ECXINDT!($L(ECXINDT)<7) G JULDTQ
"RTN","ECXUTL4",165,0)
 ;
"RTN","ECXUTL4",166,0)
 ;- Extract date portion
"RTN","ECXUTL4",167,0)
 S ECXDT=$E(ECXINDT,1,7)
"RTN","ECXUTL4",168,0)
 ;
"RTN","ECXUTL4",169,0)
 ;- Get month (MM)
"RTN","ECXUTL4",170,0)
 S ECXMM=$E(ECXINDT,2,3)
"RTN","ECXUTL4",171,0)
 ;
"RTN","ECXUTL4",172,0)
 ;- Number of day within year (DDD)
"RTN","ECXUTL4",173,0)
 S ECXDDD=$$RJ^XLFSTR($$FMDIFF^XLFDT(ECXDT,$E(ECXDT,1,3)_"0101",1)+1,3,"0")
"RTN","ECXUTL4",174,0)
JULDTQ Q ECXMM_ECXDDD
"RTN","ECXUTL4",175,0)
 ;
"RTN","ECXUTL4",176,0)
CNHSTAT(ECXDFN) ;  Get CNH (Contract Nursing Home) status
"RTN","ECXUTL4",177,0)
 ;
"RTN","ECXUTL4",178,0)
 ; Input:
"RTN","ECXUTL4",179,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",180,0)
 ;
"RTN","ECXUTL4",181,0)
 ;Output:
"RTN","ECXUTL4",182,0)
 ;             CNH status (YES/NO)
"RTN","ECXUTL4",183,0)
 ;
"RTN","ECXUTL4",184,0)
 N ECXCNH
"RTN","ECXUTL4",185,0)
 S ECXDFN=+$G(ECXDFN)
"RTN","ECXUTL4",186,0)
 S ECXCNH=$P($G(^DPT(ECXDFN,"NHC")),U)
"RTN","ECXUTL4",187,0)
 Q $S(ECXCNH="Y":"YES",ECXCNH="N":"NO",1:"")
"RTN","ECXUTL4",188,0)
 ;
"RTN","ECXUTL4",189,0)
CANC(ECXNOR,ECXTMOR) ; Get Surgery Cancelled/Aborted Status
"RTN","ECXUTL4",190,0)
 ;
"RTN","ECXUTL4",191,0)
 ; Function called after determining CANCEL DATE in SURGERY record exists
"RTN","ECXUTL4",192,0)
 ;
"RTN","ECXUTL4",193,0)
 ; Input:
"RTN","ECXUTL4",194,0)
 ;   ECXNOR   - Non-OR DSS ID
"RTN","ECXUTL4",195,0)
 ;   ECXTMOR  - Time Pat in OR
"RTN","ECXUTL4",196,0)
 ;
"RTN","ECXUTL4",197,0)
 ;Output:
"RTN","ECXUTL4",198,0)
 ;              Cancelled/aborted status (C/A)
"RTN","ECXUTL4",199,0)
 ;
"RTN","ECXUTL4",200,0)
 N ECXCANC
"RTN","ECXUTL4",201,0)
 S ECXCANC=""
"RTN","ECXUTL4",202,0)
 S ECXNOR=$G(ECXNOR)
"RTN","ECXUTL4",203,0)
 ;
"RTN","ECXUTL4",204,0)
 ;- If Non-OR DSS ID or Time Pat in OR, ECXCANC = "A" else = "C"
"RTN","ECXUTL4",205,0)
 D
"RTN","ECXUTL4",206,0)
 . I ECXNOR'=""&(ECXNOR'="UNKNOWN") S ECXCANC="A" Q
"RTN","ECXUTL4",207,0)
 . I +$G(ECXTMOR) S ECXCANC="A" Q
"RTN","ECXUTL4",208,0)
 . S ECXCANC="C"
"RTN","ECXUTL4",209,0)
 Q ECXCANC
"RTN","ECXUTL4",210,0)
 ;
"RTN","ECXUTL4",211,0)
ECSCOST(ECXCOST) ;Get ECS extract stop code based on cost center
"RTN","ECXUTL4",212,0)
 ;
"RTN","ECXUTL4",213,0)
 ;
"RTN","ECXUTL4",214,0)
 ; Input:
"RTN","ECXUTL4",215,0)
 ;   ECXCOST  - ECS extract cost center
"RTN","ECXUTL4",216,0)
 ;
"RTN","ECXUTL4",217,0)
 ;Output:
"RTN","ECXUTL4",218,0)
 ;              ECS extract stop code
"RTN","ECXUTL4",219,0)
 ;
"RTN","ECXUTL4",220,0)
 N ECXFND,ECXSTOP,I
"RTN","ECXUTL4",221,0)
 S ECXFND=0
"RTN","ECXUTL4",222,0)
 S ECXSTOP=""
"RTN","ECXUTL4",223,0)
 S ECXCOST=+$G(ECXCOST)
"RTN","ECXUTL4",224,0)
 D
"RTN","ECXUTL4",225,0)
 . I 'ECXCOST Q
"RTN","ECXUTL4",226,0)
 . F I=1:1 Q:ECXFND!($P($T(COST+I),";;",2)="END")  D
"RTN","ECXUTL4",227,0)
 .. I ECXCOST=$P($T(COST+I),";;",2) S ECXSTOP=$P($T(COST+I),";;",3),ECXFND=1
"RTN","ECXUTL4",228,0)
 Q ECXSTOP
"RTN","ECXUTL4",229,0)
 ;
"RTN","ECXUTL4",230,0)
COST ;- ECS Cost Center and stop code
"RTN","ECXUTL4",231,0)
 ;;833100;;652
"RTN","ECXUTL4",232,0)
 ;;833200;;653
"RTN","ECXUTL4",233,0)
 ;;833300;;681
"RTN","ECXUTL4",234,0)
 ;;834100;;651
"RTN","ECXUTL4",235,0)
 ;;834200;;650
"RTN","ECXUTL4",236,0)
 ;;834300;;681
"RTN","ECXUTL4",237,0)
 ;;834400;;654
"RTN","ECXUTL4",238,0)
 ;;834500;;681
"RTN","ECXUTL4",239,0)
 ;;834600;;681
"RTN","ECXUTL4",240,0)
 ;;834700;;681
"RTN","ECXUTL4",241,0)
 ;;834800;;681
"RTN","ECXUTL4",242,0)
 ;;834900;;681
"RTN","ECXUTL4",243,0)
 ;;836100;;654
"RTN","ECXUTL4",244,0)
 ;;836200;;654
"RTN","ECXUTL4",245,0)
 ;;END
"RTN","ECXUTL4",246,0)
 ;
"RTN","ECXUTL4",247,0)
HNCI(ECXDFN) ; Get head & neck cancer indicator
"RTN","ECXUTL4",248,0)
 ;
"RTN","ECXUTL4",249,0)
 ; Input:
"RTN","ECXUTL4",250,0)
 ;   ECXDFN  - Patient DFN
"RTN","ECXUTL4",251,0)
 ;
"RTN","ECXUTL4",252,0)
 ;Output:
"RTN","ECXUTL4",253,0)
 ;             Head/Neck CA DX (Y/N)
"RTN","ECXUTL4",254,0)
 ;
"RTN","ECXUTL4",255,0)
 N ECXHNCI,DGNT
"RTN","ECXUTL4",256,0)
 S ECXHNCI=""
"RTN","ECXUTL4",257,0)
 S ECXDFN=+$G(ECXDFN) I ECXDFN D
"RTN","ECXUTL4",258,0)
 .I $$GETCUR^DGNTAPI(ECXDFN,"DGNT") S ECXHNCI=$P(DGNT("HNC"),U)
"RTN","ECXUTL4",259,0)
 Q ECXHNCI
"RTN","ECXUTL4",260,0)
 ;
"RTN","ECXUTL4",261,0)
TSMAP(ECXTS) ;Determines DSS Identifier for the following observation
"RTN","ECXUTL4",262,0)
 ; treating specialty
"RTN","ECXUTL4",263,0)
 ; Input:
"RTN","ECXUTL4",264,0)
 ;   ECXTS - Observation Treating Specialty
"RTN","ECXUTL4",265,0)
 ;
"RTN","ECXUTL4",266,0)
 ; Output:
"RTN","ECXUTL4",267,0)
 ;   DSS Identifier (Stop Code)
"RTN","ECXUTL4",268,0)
 ;
"RTN","ECXUTL4",269,0)
 N TS,SC,I
"RTN","ECXUTL4",270,0)
 S TS="^18^23^24^36^41^65^94^",SC="^293^295^290^294^296^291^292^"
"RTN","ECXUTL4",271,0)
 F I=1:1:$L(TS) Q:$P(TS,"^",I)=ECXTS
"RTN","ECXUTL4",272,0)
 Q $P(SC,"^",I)_"000"
"RTN","ECXUTL5")
0^30^B30147564^B26003920
"RTN","ECXUTL5",1,0)
ECXUTL5 ;ALB/JRC - Utilities for DSS Extracts ; 8/29/06 7:04am
"RTN","ECXUTL5",2,0)
 ;;3.0;DSS EXTRACTS;**71,84,92**;Dec 22, 1997;Build 30
"RTN","ECXUTL5",3,0)
 ;
"RTN","ECXUTL5",4,0)
REPEAT(CHAR,TIMES) ;REPEAT A STRING
"RTN","ECXUTL5",5,0)
 ;INPUT  : CHAR - Character to repeat
"RTN","ECXUTL5",6,0)
 ;         TIMES - Number of times to repeat CHAR
"RTN","ECXUTL5",7,0)
 ;OUTPUT : s - String of CHAR that is TIMES long
"RTN","ECXUTL5",8,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",9,0)
 ;
"RTN","ECXUTL5",10,0)
 ;CHECK INPUT
"RTN","ECXUTL5",11,0)
 Q:($G(CHAR)="") ""
"RTN","ECXUTL5",12,0)
 Q:((+$G(TIMES))=0) ""
"RTN","ECXUTL5",13,0)
 ;RETURN STRING
"RTN","ECXUTL5",14,0)
 Q $TR($J("",TIMES)," ",CHAR)
"RTN","ECXUTL5",15,0)
INSERT(INSTR,OUTSTR,COLUMN,LENGTH) ;INSERT A STRING INTO ANOTHER
"RTN","ECXUTL5",16,0)
 ;INPUT  : INSTR - String to insert
"RTN","ECXUTL5",17,0)
 ;         OUTSTR - String to insert into
"RTN","ECXUTL5",18,0)
 ;         COLUMN - Where to begin insertion (defaults to end of OUTSTR)
"RTN","ECXUTL5",19,0)
 ;         LENGTH - Number of characters to clear from OUTSTR
"RTN","ECXUTL5",20,0)
 ;                  (defaults to length of INSTR)
"RTN","ECXUTL5",21,0)
 ;OUTPUT : s - INSTR will be placed into OUTSTR starting at COLUMN
"RTN","ECXUTL5",22,0)
 ;             using LENGTH characters
"RTN","ECXUTL5",23,0)
 ;         "" - Error (bad input)
"RTN","ECXUTL5",24,0)
 ;
"RTN","ECXUTL5",25,0)
 ;NOTE : This module is based on $$SETSTR^VALM1
"RTN","ECXUTL5",26,0)
 ;
"RTN","ECXUTL5",27,0)
 ;CHECK INPUT
"RTN","ECXUTL5",28,0)
 Q:('$D(INSTR)) ""
"RTN","ECXUTL5",29,0)
 Q:('$D(OUTSTR)) ""
"RTN","ECXUTL5",30,0)
 S:('$D(COLUMN)) COLUMN=$L(OUTSTR)+1
"RTN","ECXUTL5",31,0)
 S:('$D(LENGTH)) LENGTH=$L(INSTR)
"RTN","ECXUTL5",32,0)
 ;DECLARE VARIABLES
"RTN","ECXUTL5",33,0)
 N FRONT,END
"RTN","ECXUTL5",34,0)
 S FRONT=$E((OUTSTR_$J("",COLUMN-1)),1,(COLUMN-1))
"RTN","ECXUTL5",35,0)
 S END=$E(OUTSTR,(COLUMN+LENGTH),$L(OUTSTR))
"RTN","ECXUTL5",36,0)
 ;INSERT STRING
"RTN","ECXUTL5",37,0)
 Q FRONT_$E((INSTR_$J("",LENGTH)),1,LENGTH)_END
"RTN","ECXUTL5",38,0)
TYPE(DFN) ;Determine patient type DBIA #2511
"RTN","ECXUTL5",39,0)
 ;   input 
"RTN","ECXUTL5",40,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",41,0)
 ;
"RTN","ECXUTL5",42,0)
 ;   output
"RTN","ECXUTL5",43,0)
 ;   ECXPTYPE = patient type external value from fle 391
"RTN","ECXUTL5",44,0)
 ;
"RTN","ECXUTL5",45,0)
 ;          AC = ACTIVE DUTY        MI = MILITARY RETIREE
"RTN","ECXUTL5",46,0)
 ;          AL = ALLIED VETERAN     NO = NON-VETERAN (OTHER)
"RTN","ECXUTL5",47,0)
 ;          CO = COLLATERAL         NS = NSC VETERAN
"RTN","ECXUTL5",48,0)
 ;          EM = EMPLOYEE           SC = SC VETERAN
"RTN","ECXUTL5",49,0)
 ;          IN = INELIGIBLE         TR = TRICARE
"RTN","ECXUTL5",50,0)
 ;          return value 0 if no data found, 1 if data found
"RTN","ECXUTL5",51,0)
 ;
"RTN","ECXUTL5",52,0)
 N TYPE,ECXPTYPE
"RTN","ECXUTL5",53,0)
 ;Check input
"RTN","ECXUTL5",54,0)
 Q:'$D(DFN) ""
"RTN","ECXUTL5",55,0)
 S (TYPE,ECXPTYPE)=""
"RTN","ECXUTL5",56,0)
 S TYPE=$G(^DPT(DFN,"TYPE"))
"RTN","ECXUTL5",57,0)
 I 'TYPE Q ECXPTYPE
"RTN","ECXUTL5",58,0)
 S ECXPTYPE=$P($G(^DG(391,TYPE,0)),U,1)
"RTN","ECXUTL5",59,0)
 S ECXPTYPE=$E(ECXPTYPE,1,2)
"RTN","ECXUTL5",60,0)
 Q ECXPTYPE
"RTN","ECXUTL5",61,0)
CVEDT(DFN,DATE) ;Determine patient CV status DBIA #4156
"RTN","ECXUTL5",62,0)
 ;   input
"RTN","ECXUTL5",63,0)
 ;   DFN = patient ien
"RTN","ECXUTL5",64,0)
 ;
"RTN","ECXUTL5",65,0)
 ;   output
"RTN","ECXUTL5",66,0)
 ;   ECXCVE = combat veteran status eligibility
"RTN","ECXUTL5",67,0)
 ;   ECXCVEDT = combat veteran eligibility end date
"RTN","ECXUTL5",68,0)
 ;   ECXCVENC = combat veteran encounter
"RTN","ECXUTL5",69,0)
 ;Initialize variables
"RTN","ECXUTL5",70,0)
 N CVSTAT
"RTN","ECXUTL5",71,0)
 S (CVSTAT,ECXCVE,ECXCVEDT,ECXCVENC)=""
"RTN","ECXUTL5",72,0)
 ;Check input
"RTN","ECXUTL5",73,0)
 Q:'$D(DFN) 0
"RTN","ECXUTL5",74,0)
 ;Call CV API
"RTN","ECXUTL5",75,0)
 S CVSTAT=$$CVEDT^DGCV(DFN,DATE)
"RTN","ECXUTL5",76,0)
 I CVSTAT<1 Q 0
"RTN","ECXUTL5",77,0)
 ;Veteran been given CV eligibility
"RTN","ECXUTL5",78,0)
 S ECXCVE=$S($P(CVSTAT,U,3)=1:"Y",$P(CVSTAT,U,3)=0:"E",1:"")
"RTN","ECXUTL5",79,0)
 ;Save CV eligibility end date and convert from FM to HL7 format
"RTN","ECXUTL5",80,0)
 S ECXCVEDT=$P(CVSTAT,U,2)
"RTN","ECXUTL5",81,0)
 S ECXCVEDT=$$FMTHL7^XLFDT(ECXCVEDT)
"RTN","ECXUTL5",82,0)
 ;Is the veteran eligible for CV in the date of encounter
"RTN","ECXUTL5",83,0)
 S ECXCVENC=$S($P(CVSTAT,U,3)=1:"Y",1:"")
"RTN","ECXUTL5",84,0)
 Q 1
"RTN","ECXUTL5",85,0)
NPRF ;National patient record flags DBIA #3860
"RTN","ECXUTL5",86,0)
 N ECXARR,FLG
"RTN","ECXUTL5",87,0)
 S ECXNPRFI="",CNT=$$GETACT^DGPFAPI(ECXDFN,"ECXARR"),FLG=""
"RTN","ECXUTL5",88,0)
 I 'CNT Q
"RTN","ECXUTL5",89,0)
 F I=1:1:CNT D  Q:FLG
"RTN","ECXUTL5",90,0)
 .I ECXARR(I,"CATEGORY")["NATIONAL" S ECXNPRFI="Y",FLG=1
"RTN","ECXUTL5",91,0)
 Q
"RTN","ECXUTL5",92,0)
RXPTST(K) ;Rx patient status DBIA #2511
"RTN","ECXUTL5",93,0)
 N ECXDIC,STAT
"RTN","ECXUTL5",94,0)
 S (ECXDIC,STAT)=""
"RTN","ECXUTL5",95,0)
 ;Check input
"RTN","ECXUTL5",96,0)
 Q:'$D(K) STAT
"RTN","ECXUTL5",97,0)
 S DA=K,DIC="^PS(53,",DIQ(0)="I",DIQ="ECXDIC",DR="6"
"RTN","ECXUTL5",98,0)
 D EN^DIQ1
"RTN","ECXUTL5",99,0)
 S STAT=$G(ECXDIC(53,K,6,"I"))
"RTN","ECXUTL5",100,0)
 S STAT=$S(STAT=1:"SC",STAT=2:"AA",STAT=3:"OTH",STAT=4:"INP",STAT=5:"NON",1:"")
"RTN","ECXUTL5",101,0)
 Q STAT
"RTN","ECXUTL5",102,0)
NONVAP(K) ;Non-va prescriber DBIA #10060
"RTN","ECXUTL5",103,0)
 N ECXDIC,NONVAP
"RTN","ECXUTL5",104,0)
 S (ECXDIC,NONVAP)=""
"RTN","ECXUTL5",105,0)
 Q:'$D(K) NONVAP
"RTN","ECXUTL5",106,0)
 S DA=K,DIC="^VA(200,",DIQ(0)="I",DIQ="ECXDIC",DR="53.91"
"RTN","ECXUTL5",107,0)
 D EN^DIQ1
"RTN","ECXUTL5",108,0)
 S NONVAP=$G(ECXDIC(200,K,53.91,"I"))
"RTN","ECXUTL5",109,0)
 I NONVAP S NONVAP="Y"
"RTN","ECXUTL5",110,0)
 Q NONVAP
"RTN","ECXUTL5",111,0)
DOIVPO(K,L) ;Add destination for outpatient ivp orders
"RTN","ECXUTL5",112,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",113,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",114,0)
 ;
"RTN","ECXUTL5",115,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",116,0)
 ;
"RTN","ECXUTL5",117,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",118,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",119,0)
 ;Check input
"RTN","ECXUTL5",120,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",121,0)
 ;Check treating specialty
"RTN","ECXUTL5",122,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",123,0)
 ;Go to pharmacy patient file (#55) and return value of field (#136)
"RTN","ECXUTL5",124,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="100",DR(55.01)="136",DA=K,DA(55.01)=L
"RTN","ECXUTL5",125,0)
 D EN^DIQ1
"RTN","ECXUTL5",126,0)
 S CLINIC=$G(ECXDIC(55.01,L,136,"I"))
"RTN","ECXUTL5",127,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",128,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",129,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",130,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",131,0)
 ;Get stop code external value
"RTN","ECXUTL5",132,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",133,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",134,0)
 Q SCODE
"RTN","ECXUTL5",135,0)
 ;
"RTN","ECXUTL5",136,0)
DOUDO(K,L) ;Add destination for outpatient udp orders
"RTN","ECXUTL5",137,0)
 ;     Input     K - DFN
"RTN","ECXUTL5",138,0)
 ;               L - Order # from Pharmacy Patient File (#55)
"RTN","ECXUTL5",139,0)
 ;
"RTN","ECXUTL5",140,0)
 ;     Output     ordering stop code
"RTN","ECXUTL5",141,0)
 ;
"RTN","ECXUTL5",142,0)
 N ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE,DIC,DIQ,DR,DA
"RTN","ECXUTL5",143,0)
 S (ECXDIC,ECXDICA,ECXDICB,DOIVPO,CLINIC,SCODE)=""
"RTN","ECXUTL5",144,0)
 ;Check treating specialty
"RTN","ECXUTL5",145,0)
 S SCODE=$$TSSC($G(ECXTS)) I SCODE>0 Q SCODE
"RTN","ECXUTL5",146,0)
 ;Check input
"RTN","ECXUTL5",147,0)
 Q:'K!'(L) SCODE
"RTN","ECXUTL5",148,0)
 S DIC=55,DIQ(0)="I",DIQ="ECXDIC",DR="62",DR(55.06)="130",DA=K,DA(55.06)=L
"RTN","ECXUTL5",149,0)
 D EN^DIQ1
"RTN","ECXUTL5",150,0)
 S CLINIC=$G(ECXDIC(55.06,L,130,"I"))
"RTN","ECXUTL5",151,0)
 I 'CLINIC Q SCODE
"RTN","ECXUTL5",152,0)
 ;Get stop code pointer to file 40.7 from file 44
"RTN","ECXUTL5",153,0)
 S DIC="^SC(",DIQ(0)="I",DIQ="ECXDICA",DR="8",DA=CLINIC D EN^DIQ1
"RTN","ECXUTL5",154,0)
 S SCODE=ECXDICA(44,CLINIC,8,"I")
"RTN","ECXUTL5",155,0)
 ;Get stop code external value
"RTN","ECXUTL5",156,0)
 S DIC="^DIC(40.7,",DIQ(0)="E",DIQ="ECXDICB",DR="1",DA=SCODE D EN^DIQ1
"RTN","ECXUTL5",157,0)
 S SCODE=$G(ECXDICB(40.7,SCODE,1,"E"))
"RTN","ECXUTL5",158,0)
 Q SCODE
"RTN","ECXUTL5",159,0)
 ;
"RTN","ECXUTL5",160,0)
PHAAPI(DRUG) ;Call Pharmacy drug file API dbia 4483
"RTN","ECXUTL5",161,0)
 ;   Input: drug file (#50) ien
"RTN","ECXUTL5",162,0)
 ;
"RTN","ECXUTL5",163,0)
 ;   Output: generic name ^ classification ^ ndc ^ dea hand
"RTN","ECXUTL5",164,0)
 ;            ^ ndf file entry # ^ psndf va product entry ^
"RTN","ECXUTL5",165,0)
 ;            price per disp unit ^ dispense unit
"RTN","ECXUTL5",166,0)
 ;
"RTN","ECXUTL5",167,0)
 ;Initialize variables and scratch global
"RTN","ECXUTL5",168,0)
 N NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,UNIT,ARRAY,DATA
"RTN","ECXUTL5",169,0)
 S (NAME,CLASS,NDC,INV,NDF,P1,P3,PPDU,ARRAY,DATA)=""
"RTN","ECXUTL5",170,0)
 S ARRAY="^TMP($J,""ECXLIST"")"
"RTN","ECXUTL5",171,0)
 K @ARRAY
"RTN","ECXUTL5",172,0)
 D DATA^PSS50(DRUG,,,,,"ECXLIST")
"RTN","ECXUTL5",173,0)
 I @ARRAY@(0)'>0 Q "^^^^^^"
"RTN","ECXUTL5",174,0)
 S NAME=@ARRAY@(DRUG,.01),CLASS=@ARRAY@(DRUG,2),NDC=@ARRAY@(DRUG,31)
"RTN","ECXUTL5",175,0)
 S INV=@ARRAY@(DRUG,3),P1=$P(@ARRAY@(DRUG,20),U),P3=$P(@ARRAY@(DRUG,22),U),PPDU=@ARRAY@(DRUG,16),UNIT=@ARRAY@(DRUG,14.5)
"RTN","ECXUTL5",176,0)
 K @ARRAY
"RTN","ECXUTL5",177,0)
 Q NAME_U_CLASS_U_NDC_U_INV_U_P1_U_P3_U_PPDU_U_UNIT
"RTN","ECXUTL5",178,0)
 ;
"RTN","ECXUTL5",179,0)
TSSC(X) ;Check treating specialty (ts) and if ts equals any of the following
"RTN","ECXUTL5",180,0)
 ;18,23,24,36,41,65,94 then assign predefined code and return value
"RTN","ECXUTL5",181,0)
 ;
"RTN","ECXUTL5",182,0)
 ;    Input: treating specialty
"RTN","ECXUTL5",183,0)
 ;    Output: Ordering stop code
"RTN","ECXUTL5",184,0)
 ;
"RTN","ECXUTL5",185,0)
 S CODE=$S(X=18:293,X=23:295,X=24:290,X=36:294,X=41:296,X=65:291,X=94:292,1:"")
"RTN","ECXUTL5",186,0)
 Q CODE
"RTN","ECXUTL5",187,0)
 ;
"RTN","ECXUTL5",188,0)
PSJ59P5(X) ;Get iv room division
"RTN","ECXUTL5",189,0)
 ;   Input  X - iv room ien
"RTN","ECXUTL5",190,0)
 ;
"RTN","ECXUTL5",191,0)
 ;   Output - field .02 division
"RTN","ECXUTL5",192,0)
 ;Init variables
"RTN","ECXUTL5",193,0)
 N DIV S DIV=""
"RTN","ECXUTL5",194,0)
 ;Check input
"RTN","ECXUTL5",195,0)
 I 'X  Q DIV
"RTN","ECXUTL5",196,0)
 D ALL^PSJ59P5(X,,"ECXDIV")
"RTN","ECXUTL5",197,0)
 S DIV=$P($G(^TMP($J,"ECXDIV",1,.02)),U)
"RTN","ECXUTL5",198,0)
 K ^TMP($J,"ECXDIV")
"RTN","ECXUTL5",199,0)
 Q DIV
"RTN","ECXUTL5",200,0)
 ;
"RTN","ECXUTL5",201,0)
SCRX(IEN) ;Service connected prescription
"RTN","ECXUTL5",202,0)
 ;Init variables
"RTN","ECXUTL5",203,0)
 N DIC,DR,DA,ECXDIQ
"RTN","ECXUTL5",204,0)
 ;Check input
"RTN","ECXUTL5",205,0)
 I '$G(IEN) Q ""
"RTN","ECXUTL5",206,0)
 S DIC=52,DR="116",DA=IEN,DIQ="ECXDIQ"
"RTN","ECXUTL5",207,0)
 D DIQ^PSODI(DIC,DIC,DR,DA,DIQ)
"RTN","ECXUTL5",208,0)
 Q $S($G(ECXDIQ(52,DA,116))="YES":"Y",$G(ECXDIQ(52,DA,116))="NO":"N",1:"")
"RTN","ECXUTL6")
0^2^B12024330^n/a
"RTN","ECXUTL6",1,0)
ECXUTL6 ;ALB/JRC - Utilities for DSS Extracts ; 11/2/06 8:30am
"RTN","ECXUTL6",2,0)
 ;;3.0;DSS EXTRACTS;**92**;Dec 22, 1997;Build 30
"RTN","ECXUTL6",3,0)
 ;
"RTN","ECXUTL6",4,0)
NUTKEY(P,D) ;Generate n&fs feeder key
"RTN","ECXUTL6",5,0)
 ;Required variables
"RTN","ECXUTL6",6,0)
 ;      p  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",7,0)
 ;           feedings, or tube feedings.
"RTN","ECXUTL6",8,0)
 ;      d  - diet ien from files 116.2, 116.3, 118, or 118.2
"RTN","ECXUTL6",9,0)
 ;Check input
"RTN","ECXUTL6",10,0)
 I $G(P)=""!'$G(D) Q ""
"RTN","ECXUTL6",11,0)
 ;Init variables
"RTN","ECXUTL6",12,0)
 N PRO,IENS,CODE,DIET
"RTN","ECXUTL6",13,0)
 S (PRO,IENS,CODE,DIET)=0
"RTN","ECXUTL6",14,0)
 S PRO=$O(^ECX(728.45,"B",P,PRO))
"RTN","ECXUTL6",15,0)
 S CODE=D_$S(P="PD":";FH(116.2,",P="SO":";FH(116.3,",P="SF":";FH(118,",P="TF":";FH(118.2,",1:"")
"RTN","ECXUTL6",16,0)
 S DIET=0,DIET=$O(^ECX(728.45,+PRO,1,"B",CODE,DIET))
"RTN","ECXUTL6",17,0)
 S IENS=""_DIET_","_PRO_","_""
"RTN","ECXUTL6",18,0)
 Q $$GET1^DIQ(728.451,IENS,1)
"RTN","ECXUTL6",19,0)
 ;
"RTN","ECXUTL6",20,0)
NUTLOC(P,D,FPD,FDD,FPF,DLT,DFL) ;Define nutrition fields
"RTN","ECXUTL6",21,0)
 ;Required variables
"RTN","ECXUTL6",22,0)
 ;      p  - patient status, inpatient or outpatient
"RTN","ECXUTL6",23,0)
 ;
"RTN","ECXUTL6",24,0)
 ;      d  - diet type production diet, standing orders, supplemental
"RTN","ECXUTL6",25,0)
 ;            feedings, or tube feedings.
"RTN","ECXUTL6",26,0)
 ;    Output: food production division, food delivery division, food
"RTN","ECXUTL6",27,0)
 ;            production facility, food delivery type, delivery feeder
"RTN","ECXUTL6",28,0)
 ;            location
"RTN","ECXUTL6",29,0)
 ;Init variables
"RTN","ECXUTL6",30,0)
 N WARD,TRSVP,OPLOC,MASWARD
"RTN","ECXUTL6",31,0)
 S TRSVP=0,(WARD,ECXDLT,ECXDFL,MASWARD)=""
"RTN","ECXUTL6",32,0)
 S OPLOC=""
"RTN","ECXUTL6",33,0)
 ;Check input
"RTN","ECXUTL6",34,0)
 I $G(P)=""!($G(D)="")!'($G(FHDFN)) Q ""
"RTN","ECXUTL6",35,0)
 ;Get food production facility for inpatient, use 115.1.13 (dietetic
"RTN","ECXUTL6",36,0)
 ;ward) field which points 119.6 (nutrition location), field 3 (tray
"RTN","ECXUTL6",37,0)
 ;service point) or field 4 (cafeteria service point), which points to
"RTN","ECXUTL6",38,0)
 ;119.72 (production facility) field 2.
"RTN","ECXUTL6",39,0)
 I P="INP" D
"RTN","ECXUTL6",40,0)
 .S WARD=$P($G(^FHPT(FHDFN,"A",ECXADM,0)),U,8)
"RTN","ECXUTL6",41,0)
 .S TRSVP=$$GET1^DIQ(119.6,WARD,3,"I")
"RTN","ECXUTL6",42,0)
 .;Get divisions
"RTN","ECXUTL6",43,0)
 .D GETDIV
"RTN","ECXUTL6",44,0)
 .Q
"RTN","ECXUTL6",45,0)
 ;
"RTN","ECXUTL6",46,0)
 ;Get food production facility for outpatient recurring meal, use
"RTN","ECXUTL6",47,0)
 ;115.16.2 (outpatient location) which points to file 119.6 (nutrition
"RTN","ECXUTL6",48,0)
 ;location) field 3 (tray service point) or field 4 (cafeteria service
"RTN","ECXUTL6",49,0)
 ;point), which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",50,0)
 I P["OP",D["RM" D
"RTN","ECXUTL6",51,0)
 .S OPLOC=""_$P(NODE,U,3)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",52,0)
 .D GETDIV
"RTN","ECXUTL6",53,0)
 .Q
"RTN","ECXUTL6",54,0)
 ;
"RTN","ECXUTL6",55,0)
 ;Get food production facility for outpatient tube feeding, use
"RTN","ECXUTL6",56,0)
 ;115.16.2 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",57,0)
 ;which points to 119.72 field 2.
"RTN","ECXUTL6",58,0)
 I P["OP",D["TF" D
"RTN","ECXUTL6",59,0)
 .S OPLOC=""_$P(^TMP($J,"FH",DATE,FHDFN,NUMBER,"RM"),U,3)_","_""
"RTN","ECXUTL6",60,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",61,0)
 .;Get delivery division
"RTN","ECXUTL6",62,0)
 .D GETDIV
"RTN","ECXUTL6",63,0)
 .Q
"RTN","ECXUTL6",64,0)
 ;
"RTN","ECXUTL6",65,0)
 ;Get food production facility for special meals, use 115.17.2
"RTN","ECXUTL6",66,0)
 ;location field 2 which is a pointer to 119.6 (nutrition location)
"RTN","ECXUTL6",67,0)
 ;which points to 119.72 via field 2 (tray service point) which points
"RTN","ECXUTL6",68,0)
 ;to file 119.71 (production facility) field 2.
"RTN","ECXUTL6",69,0)
 I P["OP",D["SM" D
"RTN","ECXUTL6",70,0)
 .S OPLOC=""_$P(NODE,U,3)_","_""
"RTN","ECXUTL6",71,0)
 .S TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",72,0)
 .;Get delivery division
"RTN","ECXUTL6",73,0)
 .D GETDIV
"RTN","ECXUTL6",74,0)
 .Q
"RTN","ECXUTL6",75,0)
 ;
"RTN","ECXUTL6",76,0)
 ;Get food production facility for outpatient guest meals, use
"RTN","ECXUTL6",77,0)
 ;115.18.4 (outpatient location) then use 119.6 nutrition location
"RTN","ECXUTL6",78,0)
 ;which points to 119.72 (production facility) field 2.
"RTN","ECXUTL6",79,0)
 I P["OP",D["GM" D
"RTN","ECXUTL6",80,0)
 .S OPLOC=""_$P(NODE,U,5)_","_"",TRSVP=$$GET1^DIQ(119.6,OPLOC,3,"I")
"RTN","ECXUTL6",81,0)
 .S ECXFPF=$$GET1^DIQ(119.72,""_TRSVP_","_"",2,"I")
"RTN","ECXUTL6",82,0)
 .;Get delivery division
"RTN","ECXUTL6",83,0)
 .D GETDIV
"RTN","ECXUTL6",84,0)
 .Q
"RTN","ECXUTL6",85,0)
 ;
"RTN","ECXUTL6",86,0)
 ;Get delivery location type for patients; with inpatients the type of
"RTN","ECXUTL6",87,0)
 ;service needs to be pulled from the admission node, with outpatients
"RTN","ECXUTL6",88,0)
 ;the type of service needs to be pulled from different nodes and use
"RTN","ECXUTL6",89,0)
 ;field 101 of Nutrition Location file (#119.6). Delivery location
"RTN","ECXUTL6",90,0)
 ;types only set for the following meals:
"RTN","ECXUTL6",91,0)
 ;   Inpatient with a production diet
"RTN","ECXUTL6",92,0)
 ;   Outpatient with a recurring meal
"RTN","ECXUTL6",93,0)
 ;   Outpatient with a special meal
"RTN","ECXUTL6",94,0)
 ;   Outpatient with a guest meal
"RTN","ECXUTL6",95,0)
 ;   all other meals are null
"RTN","ECXUTL6",96,0)
 I P="INP",D="PD" D
"RTN","ECXUTL6",97,0)
 .S ECXDLT=$P($G(NODE),U,8)
"RTN","ECXUTL6",98,0)
 I P="OP",((D="RM")!(D="SM")) D
"RTN","ECXUTL6",99,0)
 .S ECXDLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,3)_","_"",101,"E"),1)
"RTN","ECXUTL6",100,0)
 I P="OP",D="GM" D
"RTN","ECXUTL6",101,0)
 .S ECXDLT=$E($$GET1^DIQ(119.6,""_$P(NODE,U,5)_","_"",101,"E"),1)
"RTN","ECXUTL6",102,0)
 ;
"RTN","ECXUTL6",103,0)
 ;Delivery feeder location
"RTN","ECXUTL6",104,0)
 I ECXDLT="C" S ECXDFL=$P(NODE,U,8) D
"RTN","ECXUTL6",105,0)
 .S ECXDFL=$E($$GET1^DIQ(119.72,ECXDFL,2,"E"),1,10)
"RTN","ECXUTL6",106,0)
 I (ECXDLT["T")!(ECXDLT["D") D
"RTN","ECXUTL6",107,0)
 .S MASWARD=$O(^FH(119.6,$S(WARD:+WARD,+OPLOC:+OPLOC,1:""),"W","B",0))
"RTN","ECXUTL6",108,0)
 .S ECXDFL=$$GET1^DIQ(42,+MASWARD,44,"I")
"RTN","ECXUTL6",109,0)
 Q 1
"RTN","ECXUTL6",110,0)
 ;
"RTN","ECXUTL6",111,0)
GETDIV ;Get divisions and food production facility
"RTN","ECXUTL6",112,0)
 ;Init variables
"RTN","ECXUTL6",113,0)
 N IEN,SIEN
"RTN","ECXUTL6",114,0)
 S (ECXFDD,ECXFPF,ECXFPD)=""
"RTN","ECXUTL6",115,0)
 S IEN=$$GET1^DIQ(119.72,+TRSVP,2,"I")
"RTN","ECXUTL6",116,0)
 Q:'IEN
"RTN","ECXUTL6",117,0)
 ;Get delivery division
"RTN","ECXUTL6",118,0)
 S SIEN=""_+TRSVP_";FH(119.72,"
"RTN","ECXUTL6",119,0)
 S ECXFDD=$O(^ECX(728.46,"B",SIEN,ECXFDD))
"RTN","ECXUTL6",120,0)
 S ECXFDD=""_$$GET1^DIQ(728.46,ECXFDD,1,"I")_","_""
"RTN","ECXUTL6",121,0)
 S ECXFDD=$$GET1^DIQ(4,ECXFDD,99,"E")
"RTN","ECXUTL6",122,0)
 ;Get production division and food production facility
"RTN","ECXUTL6",123,0)
 S IEN=""_IEN_";FH(119.71,"
"RTN","ECXUTL6",124,0)
 S ECXFPF=$O(^ECX(728.46,"B",IEN,ECXFPF))
"RTN","ECXUTL6",125,0)
 S ECXFPD=""_$$GET1^DIQ(728.46,ECXFPF,1,"I")_","_""
"RTN","ECXUTL6",126,0)
 S ECXFPD=$$GET1^DIQ(4,ECXFPD,99,"E")
"RTN","ECXUTL6",127,0)
 S ECXFPF=$E($$GET1^DIQ(728.46,ECXFPF,.01,"E"),1,10)
"RTN","ECXUTL6",128,0)
 Q
"SEC","^DIC",727.832,727.832,0,"AUDIT")
@
"SEC","^DIC",727.832,727.832,0,"DD")
@
"SEC","^DIC",727.832,727.832,0,"DEL")
@
"SEC","^DIC",727.832,727.832,0,"LAYGO")
@
"SEC","^DIC",727.832,727.832,0,"RD")
@
"SEC","^DIC",727.832,727.832,0,"WR")
@
"SEC","^DIC",728.45,728.45,0,"AUDIT")
@
"SEC","^DIC",728.45,728.45,0,"DD")
@
"SEC","^DIC",728.45,728.45,0,"DEL")
@
"SEC","^DIC",728.45,728.45,0,"LAYGO")
@
"SEC","^DIC",728.45,728.45,0,"RD")
@
"SEC","^DIC",728.45,728.45,0,"WR")
@
"SEC","^DIC",728.46,728.46,0,"AUDIT")
@
"SEC","^DIC",728.46,728.46,0,"DD")
@
"SEC","^DIC",728.46,728.46,0,"DEL")
@
"SEC","^DIC",728.46,728.46,0,"LAYGO")
@
"SEC","^DIC",728.46,728.46,0,"RD")
@
"SEC","^DIC",728.46,728.46,0,"WR")
@
"VER")
8.0^22.0
"^DD",727.1,727.1,0)
FIELD^^13^14
"^DD",727.1,727.1,0,"DDA")
N
"^DD",727.1,727.1,0,"DT")
3030710
"^DD",727.1,727.1,0,"IX","AC",727.1,7)

"^DD",727.1,727.1,0,"IX","AF",727.1,1)

"^DD",727.1,727.1,0,"IX","B",727.1,.01)

"^DD",727.1,727.1,0,"IX","C",727.1,8)

"^DD",727.1,727.1,0,"NM","EXTRACT DEFINITIONS")

"^DD",727.1,727.1,0,"VRPK")
ECX
"^DD",727.1,727.1,.01,0)
EXTRACT NAME^RFI^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",727.1,727.1,.01,1,0)
^.1
"^DD",727.1,727.1,.01,1,1,0)
727.1^B
"^DD",727.1,727.1,.01,1,1,1)
S ^ECX(727.1,"B",$E(X,1,30),DA)=""
"^DD",727.1,727.1,.01,1,1,2)
K ^ECX(727.1,"B",$E(X,1,30),DA)
"^DD",727.1,727.1,.01,3)
Answer must be 1-30 characters in length.
"^DD",727.1,727.1,.01,21,0)
^^1^1^2930415^^^^
"^DD",727.1,727.1,.01,21,1,0)
The name of the extract.
"^DD",727.1,727.1,.01,"DT")
2950421
"^DD",727.1,727.1,1,0)
FILE NUMBER^RNJ7,3I^^0;2^K:+X'=X!(X>728)!(X<727)!(X?.E1"."4N.N) X
"^DD",727.1,727.1,1,1,0)
^.1
"^DD",727.1,727.1,1,1,1,0)
727.1^AF
"^DD",727.1,727.1,1,1,1,1)
S ^ECX(727.1,"AF",$E(X,1,30),DA)=""
"^DD",727.1,727.1,1,1,1,2)
K ^ECX(727.1,"AF",$E(X,1,30),DA)
"^DD",727.1,727.1,1,1,1,3)
DO NOT DELETE
"^DD",727.1,727.1,1,1,1,"%D",0)
^^2^2^2930415^^
"^DD",727.1,727.1,1,1,1,"%D",1,0)
This cross reference is essential for determing the frequency and date
"^DD",727.1,727.1,1,1,1,"%D",2,0)
range for package extracts.  Do not delete.
"^DD",727.1,727.1,1,1,1,"DT")
2930129
"^DD",727.1,727.1,1,3)
Type a Number between 727 and 728, 3 Decimal Digits
"^DD",727.1,727.1,1,21,0)
^^1^1^2930129^
"^DD",727.1,727.1,1,21,1,0)
The number of the file into which this extract places data.
"^DD",727.1,727.1,1,23,0)
^^4^4^2930129^
"^DD",727.1,727.1,1,23,1,0)
The AF cross reference on this file is used by the extract routines,
"^DD",727.1,727.1,1,23,2,0)
using the variable ECFILE, to determine the frequency with which the
"^DD",727.1,727.1,1,23,3,0)
extract is run and, from the frequency, the starting and ending days
"^DD",727.1,727.1,1,23,4,0)
for the extract.
"^DD",727.1,727.1,1,"DT")
2940428
"^DD",727.1,727.1,2,0)
FREQUENCY^S^D:DAILY;W:WEEKLY;M:MONTHLY;^0;3^Q
"^DD",727.1,727.1,2,21,0)
^^5^5^2940225^^^^
"^DD",727.1,727.1,2,21,1,0)
This field determines the frequency with which this extract will be
"^DD",727.1,727.1,2,21,2,0)
run.  Daily extracts are run for a single day, T-X, where X is the
"^DD",727.1,727.1,2,21,3,0)
number entered in the DAYS AGO field in this file.  Weekly extracts
"^DD",727.1,727.1,2,21,4,0)
are run for the week ending on T-X.  Monthly extracts are run for
"^DD",727.1,727.1,2,21,5,0)
the previous month.
"^DD",727.1,727.1,2,23,0)
^^2^2^2940225^^^^
"^DD",727.1,727.1,2,23,1,0)
This field is used by the extract routines to determine the starting
"^DD",727.1,727.1,2,23,2,0)
and ending dates for the extract.
"^DD",727.1,727.1,2,"DT")
2940225
"^DD",727.1,727.1,3,0)
DAYS AGO^RNJ2,0^^0;4^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,3,3)
Type a Number between 1 and 30, 0 Decimal Digits
"^DD",727.1,727.1,3,21,0)
^^4^4^2930811^^
"^DD",727.1,727.1,3,21,1,0)
This field is used for daily and weekly extracts to determine how
"^DD",727.1,727.1,3,21,2,0)
many days ago the extract should look for data.  For daily extracts,
"^DD",727.1,727.1,3,21,3,0)
the date would be T-X, for weekly extracts, the date range would
"^DD",727.1,727.1,3,21,4,0)
be from T-X-7 to T-X.
"^DD",727.1,727.1,3,23,0)
^^2^2^2930811^^
"^DD",727.1,727.1,3,23,1,0)
Used by the extract routines to determine the date for a daily extract
"^DD",727.1,727.1,3,23,2,0)
or the date range for a weekly extract.
"^DD",727.1,727.1,3,"DT")
2930129
"^DD",727.1,727.1,4,0)
ROUTINE^FI^^ROU;1^K:$L(X)>8!($L(X)<1)!'(X?1"ECX".UN) X
"^DD",727.1,727.1,4,3)
Answer must be 1-8 characters in length.
"^DD",727.1,727.1,4,21,0)
^^2^2^2930811^^
"^DD",727.1,727.1,4,21,1,0)
The name of the routine which performs this extract.  Data is loaded
"^DD",727.1,727.1,4,21,2,0)
into this field at creation time as should not be edited in the field
"^DD",727.1,727.1,4,23,0)
^^4^4^2930811^^
"^DD",727.1,727.1,4,23,1,0)
Data in this field is used to queue the initial extract.  Once the
"^DD",727.1,727.1,4,23,2,0)
extract manager specifies the frequency, days offset, start date
"^DD",727.1,727.1,4,23,3,0)
(which is not a data element in this file), the extract setup
"^DD",727.1,727.1,4,23,4,0)
calls %ZTLOAD to queue QUE^routine at the proper time.
"^DD",727.1,727.1,4,"DT")
2940324
"^DD",727.1,727.1,5,0)
OFFSET^NJ2,0^^0;5^K:+X'=X!(X>60)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,5,3)
The offset, in days, for the daily local extract
"^DD",727.1,727.1,5,21,0)
^^2^2^2980706^^
"^DD",727.1,727.1,5,21,1,0)
This field is used by the local daily extract to determine how many days
"^DD",727.1,727.1,5,21,2,0)
back to look for data
"^DD",727.1,727.1,5,"DT")
2930827
"^DD",727.1,727.1,6,0)
QUEUED^SI^1:YES;^0;6^Q
"^DD",727.1,727.1,6,21,0)
^^6^6^2990601^^^
"^DD",727.1,727.1,6,21,1,0)
This field is set by the software when the extract is queued to
"^DD",727.1,727.1,6,21,2,0)
run.  Once this field is set, other data elements should be
"^DD",727.1,727.1,6,21,3,0)
changed only with extreme care.  Changing either the frequency or
"^DD",727.1,727.1,6,21,4,0)
the days ago field could result in a date range being missed and
"^DD",727.1,727.1,6,21,5,0)
not extracted for trasmission to TSI.
"^DD",727.1,727.1,6,21,6,0)
 
"^DD",727.1,727.1,6,"DT")
2940324
"^DD",727.1,727.1,7,0)
TYPE^RF^^0;7^K:$L(X)>30!($L(X)<3) X
"^DD",727.1,727.1,7,1,0)
^.1
"^DD",727.1,727.1,7,1,1,0)
727.1^AC
"^DD",727.1,727.1,7,1,1,1)
S ^ECX(727.1,"AC",$E(X,1,30),DA)=""
"^DD",727.1,727.1,7,1,1,2)
K ^ECX(727.1,"AC",$E(X,1,30),DA)
"^DD",727.1,727.1,7,1,1,"DT")
2980706
"^DD",727.1,727.1,7,3)
Answer must be 3-30 characters in length.
"^DD",727.1,727.1,7,21,0)
^^3^3^2970925^
"^DD",727.1,727.1,7,21,1,0)
This is the print name for the extract.  It has an important use in
"^DD",727.1,727.1,7,21,2,0)
supplying a data element to the TYPE field (#2) of the DSS EXTRACT
"^DD",727.1,727.1,7,21,3,0)
LOG file (#727).
"^DD",727.1,727.1,7,23,0)
^^5^5^2970925^
"^DD",727.1,727.1,7,23,1,0)
A free text field; only 1st character is capitalized.  Used as
"^DD",727.1,727.1,7,23,2,0)
print name for the extract.
"^DD",727.1,727.1,7,23,3,0)
 
"^DD",727.1,727.1,7,23,4,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,7,23,5,0)
each extract routine using variable ECPACK.
"^DD",727.1,727.1,7,"DT")
2980706
"^DD",727.1,727.1,8,0)
HEADER CODE^RF^^0;8^K:$L(X)>3!($L(X)<3) X
"^DD",727.1,727.1,8,1,0)
^.1
"^DD",727.1,727.1,8,1,1,0)
727.1^C
"^DD",727.1,727.1,8,1,1,1)
S ^ECX(727.1,"C",$E(X,1,30),DA)=""
"^DD",727.1,727.1,8,1,1,2)
K ^ECX(727.1,"C",$E(X,1,30),DA)
"^DD",727.1,727.1,8,1,1,3)
Do not delete this cross-reference.
"^DD",727.1,727.1,8,1,1,"%D",0)
^^2^2^2970925^
"^DD",727.1,727.1,8,1,1,"%D",1,0)
This cross-reference will be used by all the extract audit report
"^DD",727.1,727.1,8,1,1,"%D",2,0)
routines to obtain defining information on the extract.
"^DD",727.1,727.1,8,1,1,"DT")
2970925
"^DD",727.1,727.1,8,3)
Answer must be 3 characters in length.
"^DD",727.1,727.1,8,21,0)
^^2^2^2970925^^
"^DD",727.1,727.1,8,21,1,0)
The unique 3-letter identifier code for the extract type.  Needed for
"^DD",727.1,727.1,8,21,2,0)
the header record in each extract transmission.
"^DD",727.1,727.1,8,23,0)
^^4^4^2970925^^
"^DD",727.1,727.1,8,23,1,0)
A 3-character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,8,23,2,0)
 
"^DD",727.1,727.1,8,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,8,23,4,0)
each extract routine using variable ECHEAD.
"^DD",727.1,727.1,8,"DT")
2970925
"^DD",727.1,727.1,9,0)
GROUP^RF^^0;9^K:$L(X)>5!($L(X)<2) X
"^DD",727.1,727.1,9,3)
Answer must be 2-5 characters in length.
"^DD",727.1,727.1,9,21,0)
^^1^1^2970925^
"^DD",727.1,727.1,9,21,1,0)
This code identifies the data group to which the extract belongs.
"^DD",727.1,727.1,9,23,0)
^^4^4^2970925^
"^DD",727.1,727.1,9,23,1,0)
A 2-5 character identifying code; each character is an uppercase alpha.
"^DD",727.1,727.1,9,23,2,0)
 
"^DD",727.1,727.1,9,23,3,0)
This data element is also hard-coded into the SETUP code unit of
"^DD",727.1,727.1,9,23,4,0)
each extract routine using variable ECGRP.
"^DD",727.1,727.1,9,"DT")
2970925
"^DD",727.1,727.1,10,0)
AUDIT DESCRIPTION^727.11^^1;0
"^DD",727.1,727.1,11,0)
RUNNING PIECE^RNJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,11,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",727.1,727.1,11,21,0)
^^3^3^2980706^^
"^DD",727.1,727.1,11,21,1,0)
This numeric provides the position of the data element which indicates
"^DD",727.1,727.1,11,21,2,0)
whether an extract of this type is currently running or is queued to
"^DD",727.1,727.1,11,21,3,0)
run.
"^DD",727.1,727.1,11,23,0)
^^2^2^2980706^
"^DD",727.1,727.1,11,23,1,0)
The piece of the ^ECX(728,1,7.1) node indicated in this field will
"^DD",727.1,727.1,11,23,2,0)
contain an "R", if the extract is currently running or queued to run.
"^DD",727.1,727.1,11,"DT")
2980706
"^DD",727.1,727.1,12,0)
MAX. LINES PER MESSAGE^RNJ3,0^^0;11^K:+X'=X!(X>500)!(X<2)!(X?.E1"."1N.N) X
"^DD",727.1,727.1,12,3)
Type a Number between 2 and 500, 0 Decimal Digits
"^DD",727.1,727.1,12,21,0)
^^10^10^2990326^^
"^DD",727.1,727.1,12,21,1,0)
This number is the maximum number of lines per transmission message
"^DD",727.1,727.1,12,21,2,0)
allowed for this extract type.
"^DD",727.1,727.1,12,21,3,0)
  
"^DD",727.1,727.1,12,21,4,0)
A default value of 200 is usually acceptable for most extracts.
"^DD",727.1,727.1,12,21,5,0)
However, for some (e.g., CLI, ADM) lower values are recommended.
"^DD",727.1,727.1,12,21,6,0)
 
"^DD",727.1,727.1,12,21,7,0)
It may be possible in some cases to set a value greater than 200,
"^DD",727.1,727.1,12,21,8,0)
thus reducing the total number of transmission messages needed for
"^DD",727.1,727.1,12,21,9,0)
the extract.  However, if the transmission message becomes larger
"^DD",727.1,727.1,12,21,10,0)
than 32 Kbytes, it will be rejected by AAC.
"^DD",727.1,727.1,12,"DT")
2990327
"^DD",727.1,727.1,13,0)
INACTIVE^S^1:YES;0:NO;^0;12^Q
"^DD",727.1,727.1,13,3)
Enter YES if this extract is inactive
"^DD",727.1,727.1,13,21,0)
^^1^1^3030710^
"^DD",727.1,727.1,13,21,1,0)
Denotes whether or not this extract is considered inactive.
"^DD",727.1,727.1,13,"DT")
3030710
"^DD",727.1,727.11,0)
AUDIT DESCRIPTION SUB-FIELD^^.01^1
"^DD",727.1,727.11,0,"DT")
2971030
"^DD",727.1,727.11,0,"NM","AUDIT DESCRIPTION")

"^DD",727.1,727.11,0,"UP")
727.1
"^DD",727.1,727.11,.01,0)
AUDIT DESCRIPTION^WL^^0;1^Q
"^DD",727.1,727.11,.01,21,0)
^^2^2^2971030^^
"^DD",727.1,727.11,.01,21,1,0)
The information contained here provides user instructions on the 
"^DD",727.1,727.11,.01,21,2,0)
recommended method for verifying the extract audit report.
"^DD",727.1,727.11,.01,"DT")
2971030
"^DD",727.802,727.802,60,0)
PRODUCTION DIVISION CODE^F^^1;24^K:$L(X)>6!($L(X)<3) X
"^DD",727.802,727.802,60,3)
Answer must be 3-6 characters in length.
"^DD",727.802,727.802,60,21,0)
^.001^2^2^3060719^^^^
"^DD",727.802,727.802,60,21,1,0)
Data represents the medical center division the work was performed in.
"^DD",727.802,727.802,60,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.802,727.802,60,23,0)
^^6^6^3060719^
"^DD",727.802,727.802,60,23,1,0)
Data comes from the WARD LOCATION field (#.06) in the PATIENT MOVEMENT
"^DD",727.802,727.802,60,23,2,0)
file (#405). This value is a pointer to the WARD LOCATION file (#42) which
"^DD",727.802,727.802,60,23,3,0)
in turn is used to get the DIVISION field (#.015) in the WARD LOCATION
"^DD",727.802,727.802,60,23,4,0)
file (#42), a pointer to the MEDICAL CENTER DIVISION file (#40.8). This
"^DD",727.802,727.802,60,23,5,0)
value is then used to call the API GETDIV^ECXDEPT to get the STATION
"^DD",727.802,727.802,60,23,6,0)
NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.802,727.802,60,"DT")
3020812
"^DD",727.802,727.802,76,0)
ERI^F^^1;40^K:$L(X)>2!($L(X)<1) X
"^DD",727.802,727.802,76,3)
Answer must be 1-2 characters in length.
"^DD",727.802,727.802,76,21,0)
^.001^2^2^3060731^^^
"^DD",727.802,727.802,76,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.802,727.802,76,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.802,727.802,76,23,0)
^.001^4^4^3060731^^^
"^DD",727.802,727.802,76,23,1,0)
This field length is extracted from the EMERGENCY RESPONSE INDICATOR
"^DD",727.802,727.802,76,23,2,0)
field (#.181) located in the PATIENT file (#2). Values are:
"^DD",727.802,727.802,76,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.802,727.802,76,23,4,0)
    Null
"^DD",727.802,727.802,76,"DT")
3060731
"^DD",727.802,727.802,77,0)
AGENT ORANGE ENC INDICATOR^F^^1;41^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,77,.1)
 
"^DD",727.802,727.802,77,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,77,21,0)
^^5^5^3060719^
"^DD",727.802,727.802,77,21,1,0)
Indicates the appropriate response for agent orange as related to 
"^DD",727.802,727.802,77,21,2,0)
this patient's episode of care:
"^DD",727.802,727.802,77,21,3,0)
  Y = Yes
"^DD",727.802,727.802,77,21,4,0)
  N = No
"^DD",727.802,727.802,77,21,5,0)
  Null
"^DD",727.802,727.802,77,23,0)
^^6^6^3060719^
"^DD",727.802,727.802,77,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,77,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,77,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the agent orange indicator
"^DD",727.802,727.802,77,23,4,0)
stored at the AGENT ORANGE EXPOSURE field (#80002) in the VISIT file
"^DD",727.802,727.802,77,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.802,727.802,77,23,6,0)
"AO".
"^DD",727.802,727.802,77,"DT")
3060621
"^DD",727.802,727.802,78,0)
ENCOUNTER EC^F^^1;42^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,78,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,78,21,0)
^^5^5^3060719^
"^DD",727.802,727.802,78,21,1,0)
Indicates the appropriate response for environmental contaminant as 
"^DD",727.802,727.802,78,21,2,0)
related to this patient's episode of care:
"^DD",727.802,727.802,78,21,3,0)
  Y = Yes
"^DD",727.802,727.802,78,21,4,0)
  N = No
"^DD",727.802,727.802,78,21,5,0)
  Null
"^DD",727.802,727.802,78,23,0)
^^6^6^3060719^
"^DD",727.802,727.802,78,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,78,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,78,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI return the environmental contaminant
"^DD",727.802,727.802,78,23,4,0)
indicator stored at the PERSIAN GULF EXPOSURE field (#80004) in the VISIT
"^DD",727.802,727.802,78,23,5,0)
file (#9000010). The value will be stored in the output array subscripted
"^DD",727.802,727.802,78,23,6,0)
by "PGE".
"^DD",727.802,727.802,78,"DT")
3060621
"^DD",727.802,727.802,79,0)
ENC HEAD/NECK CA^F^^1;43^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,79,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,79,21,0)
^.001^5^5^3060719^^
"^DD",727.802,727.802,79,21,1,0)
Indicates the appropriate response for head/neck cancer as related
"^DD",727.802,727.802,79,21,2,0)
to this patient's episode of care:
"^DD",727.802,727.802,79,21,3,0)
  Y = Yes
"^DD",727.802,727.802,79,21,4,0)
  N = No
"^DD",727.802,727.802,79,21,5,0)
  Null
"^DD",727.802,727.802,79,23,0)
^.001^6^6^3060719^^
"^DD",727.802,727.802,79,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,79,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,79,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the head/neck cancer data
"^DD",727.802,727.802,79,23,4,0)
stored at the HEAD AND/OR NECK CANCER field (#80006) in the VISIT file
"^DD",727.802,727.802,79,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.802,727.802,79,23,6,0)
"HNC".
"^DD",727.802,727.802,79,"DT")
3060623
"^DD",727.802,727.802,80,0)
ENCOUNTER MST^F^^1;44^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,80,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,80,21,0)
^^5^5^3060719^
"^DD",727.802,727.802,80,21,1,0)
Indicates the appropriate response for military sexual trauma as related
"^DD",727.802,727.802,80,21,2,0)
to this patient's episode of care:
"^DD",727.802,727.802,80,21,3,0)
  Y = Yes
"^DD",727.802,727.802,80,21,4,0)
  N = No
"^DD",727.802,727.802,80,21,5,0)
  Null
"^DD",727.802,727.802,80,23,0)
^^6^6^3060719^
"^DD",727.802,727.802,80,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,80,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,80,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the military sexual trauma
"^DD",727.802,727.802,80,23,4,0)
data stored at the MILITARY SEXUAL TRAUMA field (#80005) in the VISIT file
"^DD",727.802,727.802,80,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.802,727.802,80,23,6,0)
"MST".
"^DD",727.802,727.802,80,"DT")
3060623
"^DD",727.802,727.802,81,0)
RADIATION ENCOUNTER INDICATOR^F^^1;45^K:$L(X)>1!($L(X)<1) X
"^DD",727.802,727.802,81,3)
Answer must be 1 character in length.
"^DD",727.802,727.802,81,21,0)
^^5^5^3060719^
"^DD",727.802,727.802,81,21,1,0)
Indicates the appropriate response for ionizing radiation exposure as
"^DD",727.802,727.802,81,21,2,0)
related to this patient's episode of care:
"^DD",727.802,727.802,81,21,3,0)
  Y = Yes
"^DD",727.802,727.802,81,21,4,0)
  N = No
"^DD",727.802,727.802,81,21,5,0)
  Null
"^DD",727.802,727.802,81,23,0)
^^6^6^3060719^
"^DD",727.802,727.802,81,23,1,0)
Using the VISIT FILE ENTRY field (#.27) in the PATIENT MOVEMENT file 
"^DD",727.802,727.802,81,23,2,0)
(#405) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.802,727.802,81,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the ionizing radiation
"^DD",727.802,727.802,81,23,4,0)
exposure indicator stored at the IONIZING RADIATION EXPOSURE field 
"^DD",727.802,727.802,81,23,5,0)
(#80003) in the VISIT file (#9000010). The value will be stored in the
"^DD",727.802,727.802,81,23,6,0)
output array subscripted by "IR".
"^DD",727.802,727.802,81,"DT")
3060623
"^DD",727.808,727.808,32,0)
PRODUCTION DIVISION CODE^F^^1;9^K:$L(X)>6!($L(X)<3) X
"^DD",727.808,727.808,32,3)
Answer must be 3-6 characters in length.
"^DD",727.808,727.808,32,21,0)
^.001^2^2^3060719^^^^
"^DD",727.808,727.808,32,21,1,0)
Data represents the medical center division the work was performed in.
"^DD",727.808,727.808,32,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.808,727.808,32,23,0)
^^7^7^3060719^
"^DD",727.808,727.808,32,23,1,0)
Data comes from the WARD AT DISCHARGE field (#200) in the PATIENT 
"^DD",727.808,727.808,32,23,2,0)
MOVEMENT file (#405). This value is then use to get the NAME field (#.01)
"^DD",727.808,727.808,32,23,3,0)
in the WARD LOCATION file (#42) which in turn is used to get the DIVISION
"^DD",727.808,727.808,32,23,4,0)
field (#.015) in the WARD LOCATION file (#42) which is a pointer to the
"^DD",727.808,727.808,32,23,5,0)
MEDICAL CENTER DIVISION file (#40.8). This value is then used to call the
"^DD",727.808,727.808,32,23,6,0)
API GETDIV^ECXDEPT to get the STATION NUMBER field (#99) from the
"^DD",727.808,727.808,32,23,7,0)
INSTITUTION file (#4).
"^DD",727.808,727.808,32,"DT")
3020812
"^DD",727.809,727.809,28,0)
PRODUCTION DIVISION CODE^F^^1;7^K:$L(X)>6!($L(X)<3) X
"^DD",727.809,727.809,28,3)
Answer must be 3-6 characters in length
"^DD",727.809,727.809,28,21,0)
^.001^2^2^3060719^^^^
"^DD",727.809,727.809,28,21,1,0)
Represents the division where the work took place.  This is the facility 
"^DD",727.809,727.809,28,21,2,0)
number (i.e. 523AA).
"^DD",727.809,727.809,28,23,0)
^^6^6^3060719^
"^DD",727.809,727.809,28,23,1,0)
Data comes from the WARD field (#5) of the UNIT DOSE EXTRACT DATA 
"^DD",727.809,727.809,28,23,2,0)
file (#727.904), which is a pointer to the WARD LOCATION file (#42).
"^DD",727.809,727.809,28,23,3,0)
This value is then used to get the DIVISION field (#.015), a pointer to 
"^DD",727.809,727.809,28,23,4,0)
the MEDICAL CENTER DIVISION file (#40.8), which is then used to call API 
"^DD",727.809,727.809,28,23,5,0)
GETDIV^ECXDEPT to get the STATION NUMBER field (#99) from the INSTITUTION
"^DD",727.809,727.809,28,23,6,0)
file (#4).                                                    
"^DD",727.809,727.809,28,"DT")
3020719
"^DD",727.809,727.809,75,0)
ERI^F^^2;19^K:$L(X)>2!($L(X)<1) X
"^DD",727.809,727.809,75,3)
Answer must be 1-2 characters in length.
"^DD",727.809,727.809,75,21,0)
^.001^2^2^3060731^^^
"^DD",727.809,727.809,75,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.809,727.809,75,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.809,727.809,75,23,0)
^.001^4^4^3060731^^^^
"^DD",727.809,727.809,75,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.809,727.809,75,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.809,727.809,75,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.809,727.809,75,23,4,0)
    Null
"^DD",727.809,727.809,75,"DT")
3060731
"^DD",727.809,727.809,76,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^2;20^Q
"^DD",727.809,727.809,76,21,0)
^.001^2^2^3060626^^
"^DD",727.809,727.809,76,21,1,0)
This field is used to indicate that this patient claim exposure while
"^DD",727.809,727.809,76,21,2,0)
serving in the Persian Gulf or Somalia.
"^DD",727.809,727.809,76,23,0)
^^8^8^3060626^
"^DD",727.809,727.809,76,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.809,727.809,76,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.809,727.809,76,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.809,727.809,76,23,4,0)
PAT^ECXUTL3. The field values are:
"^DD",727.809,727.809,76,23,5,0)
 
"^DD",727.809,727.809,76,23,6,0)
 Y = YES
"^DD",727.809,727.809,76,23,7,0)
 N = NO
"^DD",727.809,727.809,76,23,8,0)
 U = UNKNOWN
"^DD",727.809,727.809,76,"DT")
3060626
"^DD",727.81,727.81,68,0)
PRODUCTION DIVISION CODE^F^^1;35^K:$L(X)>6!($L(X)<3) X
"^DD",727.81,727.81,68,3)
Answer must be 3-6 characters in length.
"^DD",727.81,727.81,68,21,0)
^.001^2^2^3060719^^^
"^DD",727.81,727.81,68,21,1,0)
Represents the division where the work took place.  Contains the facility
"^DD",727.81,727.81,68,21,2,0)
number (i.e. 523AA).
"^DD",727.81,727.81,68,23,0)
^^5^5^3060719^
"^DD",727.81,727.81,68,23,1,0)
Data comes from either the a) DIVISION field (#20) of the PRESCRIPTION
"^DD",727.81,727.81,68,23,2,0)
file (#52) or b) the DIVISION field (#.09) of subfile (#52.2) [PARTIAL 
"^DD",727.81,727.81,68,23,3,0)
DATE field (#60)]. These fields point to the OUTPATIENT SITE file (#59).
"^DD",727.81,727.81,68,23,4,0)
This value is then used to call the api PREDIV^ECXDEPT RADDIV^ECXDEPT to
"^DD",727.81,727.81,68,23,5,0)
get the STATION NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.81,727.81,68,"DT")
3030123
"^DD",727.81,727.81,84,0)
ERI^F^^2;9^K:$L(X)>2!($L(X)<1) X
"^DD",727.81,727.81,84,3)
Answer must be 1-2 characters in length.
"^DD",727.81,727.81,84,21,0)
^.001^2^2^3060731^^
"^DD",727.81,727.81,84,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.81,727.81,84,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.81,727.81,84,23,0)
^.001^4^4^3060731^^
"^DD",727.81,727.81,84,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.81,727.81,84,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.81,727.81,84,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.81,727.81,84,23,4,0)
    Null
"^DD",727.81,727.81,84,"DT")
3060731
"^DD",727.81,727.81,85,0)
AGENT ORANGE ENC INDICATOR^F^^2;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,85,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,85,21,0)
^^5^5^3060719^
"^DD",727.81,727.81,85,21,1,0)
Indicates the appropriate response for agent orange as related to this
"^DD",727.81,727.81,85,21,2,0)
patient's episode of care:
"^DD",727.81,727.81,85,21,3,0)
  Y = Yes
"^DD",727.81,727.81,85,21,4,0)
  N = No
"^DD",727.81,727.81,85,21,5,0)
  Null
"^DD",727.81,727.81,85,23,0)
^^2^2^3060719^
"^DD",727.81,727.81,85,23,1,0)
This value is retrieved from the AGENT ORANGE EXPOSURE field (#118) in
"^DD",727.81,727.81,85,23,2,0)
the PRESCRIPTION (#52) file.
"^DD",727.81,727.81,85,"DT")
3060626
"^DD",727.81,727.81,86,0)
ENCOUNTER EC^F^^2;11^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,86,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,86,21,0)
^.001^5^5^3060626^^^
"^DD",727.81,727.81,86,21,1,0)
Indicate the appropriate response for environmental contaminant as
"^DD",727.81,727.81,86,21,2,0)
related to this patient's episode of care:
"^DD",727.81,727.81,86,21,3,0)
  Y = Yes
"^DD",727.81,727.81,86,21,4,0)
  N = No
"^DD",727.81,727.81,86,21,5,0)
  Null
"^DD",727.81,727.81,86,23,0)
^.001^2^2^3060626^^
"^DD",727.81,727.81,86,23,1,0)
This value will be retrieved from the ENVIRONMENTAL CONTAMINANT field #120
"^DD",727.81,727.81,86,23,2,0)
in the PRESCRIPTION #52 file.
"^DD",727.81,727.81,86,"DT")
3060626
"^DD",727.81,727.81,87,0)
ENC HEAD/NECK CA^F^^2;12^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,87,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,87,21,0)
^^5^5^3060719^
"^DD",727.81,727.81,87,21,1,0)
Indicates the appropriate response for head/neck cancer as related to this
"^DD",727.81,727.81,87,21,2,0)
patient's episode of care:
"^DD",727.81,727.81,87,21,3,0)
  Y = Yes
"^DD",727.81,727.81,87,21,4,0)
  N = No
"^DD",727.81,727.81,87,21,5,0)
  Null
"^DD",727.81,727.81,87,23,0)
^^2^2^3060719^
"^DD",727.81,727.81,87,23,1,0)
This value is retrieved from the HEAD AND/OR NECK CANCER field (#121)
"^DD",727.81,727.81,87,23,2,0)
in the PRESCRIPTION (#52) file.
"^DD",727.81,727.81,87,"DT")
3060626
"^DD",727.81,727.81,88,0)
ENCOUNTER MST^F^^2;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,88,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,88,21,0)
^.001^5^5^3060719^^
"^DD",727.81,727.81,88,21,1,0)
Indicates the appropriate response for military sexual trauma as related
"^DD",727.81,727.81,88,21,2,0)
to this patient's episode of care:
"^DD",727.81,727.81,88,21,3,0)
  Y = Yes
"^DD",727.81,727.81,88,21,4,0)
  N = No
"^DD",727.81,727.81,88,21,5,0)
  Null
"^DD",727.81,727.81,88,23,0)
^.001^2^2^3060719^^
"^DD",727.81,727.81,88,23,1,0)
This value is retrieved from the MILITARY SEXUAL TRAUMA field (#117) in
"^DD",727.81,727.81,88,23,2,0)
the PRESCRIPTION (#52) file.
"^DD",727.81,727.81,88,"DT")
3060626
"^DD",727.81,727.81,89,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^2;14^Q
"^DD",727.81,727.81,89,21,0)
^^2^2^3060719^
"^DD",727.81,727.81,89,21,1,0)
This field is used to indicate that this patient claim exposure while 
"^DD",727.81,727.81,89,21,2,0)
serving in the Persian Gulf or Somalia.
"^DD",727.81,727.81,89,23,0)
^.001^8^8^3060719^^^^
"^DD",727.81,727.81,89,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.81,727.81,89,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.81,727.81,89,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.81,727.81,89,23,4,0)
PAT^ECXUTL3. The field values are:
"^DD",727.81,727.81,89,23,5,0)
 
"^DD",727.81,727.81,89,23,6,0)
 Y = YES
"^DD",727.81,727.81,89,23,7,0)
 N = NO
"^DD",727.81,727.81,89,23,8,0)
 U = UNKNOWN
"^DD",727.81,727.81,89,"DT")
3060621
"^DD",727.81,727.81,90,0)
RADIATION ENCOUNTER INDICATOR^F^^2;15^K:$L(X)>1!($L(X)<1) X
"^DD",727.81,727.81,90,3)
Answer must be 1 character in length.
"^DD",727.81,727.81,90,21,0)
^^6^6^3060829^
"^DD",727.81,727.81,90,21,1,0)
Indicates the appropriate response for ionizing radiation exposure
"^DD",727.81,727.81,90,21,2,0)
encounter as related to this patient's episode of care:
"^DD",727.81,727.81,90,21,3,0)
 
"^DD",727.81,727.81,90,21,4,0)
  Y = Yes
"^DD",727.81,727.81,90,21,5,0)
  N = No
"^DD",727.81,727.81,90,21,6,0)
  Null
"^DD",727.81,727.81,90,23,0)
^.001^2^2^3060829^^^
"^DD",727.81,727.81,90,23,1,0)
This value is retrieved from the IONIZING RADIATION EXPOSURE field (#119)
"^DD",727.81,727.81,90,23,2,0)
in the PRESCRIPTION (#52) file.
"^DD",727.81,727.81,90,"DT")
3060626
"^DD",727.81,727.81,91,0)
SERVICE CONNECTED RX^S^Y:YES;N:NO;^2;16^Q
"^DD",727.81,727.81,91,21,0)
^^2^2^3060712^
"^DD",727.81,727.81,91,21,1,0)
This field will indicate whether this prescription is for a service 
"^DD",727.81,727.81,91,21,2,0)
connected condition.
"^DD",727.81,727.81,91,23,0)
^^7^7^3060712^
"^DD",727.81,727.81,91,23,1,0)
The value is retrieved from the Prescription file (#52), SERVICE 
"^DD",727.81,727.81,91,23,2,0)
CONNECTED field (#116). Possible values:
"^DD",727.81,727.81,91,23,3,0)
 
"^DD",727.81,727.81,91,23,4,0)
'Y' - Yes
"^DD",727.81,727.81,91,23,5,0)
'N' - No
"^DD",727.81,727.81,91,23,6,0)
 
"^DD",727.81,727.81,91,23,7,0)
The value is retrieved via the DIQ^PSODI pharmacy API.
"^DD",727.81,727.81,91,"DT")
3060712
"^DD",727.811,727.811,57,0)
PRODUCTION DIVISION CODE^F^^1;21^K:$L(X)>6!($L(X)<3) X
"^DD",727.811,727.811,57,3)
Answer must be 3-6 characters in length.
"^DD",727.811,727.811,57,21,0)
^.001^2^2^3060713^^^^
"^DD",727.811,727.811,57,21,1,0)
Data represents the medical center division the work was performed in.
"^DD",727.811,727.811,57,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.811,727.811,57,23,0)
^^4^4^3060719^
"^DD",727.811,727.811,57,23,1,0)
Data comes from the DIVISION field (#50) of the SURGERY file (#130) which 
"^DD",727.811,727.811,57,23,2,0)
is a pointer to the INSTITUTION file (#4). This value is then used to call
"^DD",727.811,727.811,57,23,3,0)
the API RADDIV^ECXDEPT to get the STATION NUMBER field (#99) from the
"^DD",727.811,727.811,57,23,4,0)
INSTITUTION file (#4).
"^DD",727.811,727.811,57,"DT")
3020812
"^DD",727.811,727.811,77,0)
ERI^F^^2;4^K:$L(X)>2!($L(X)<1) X
"^DD",727.811,727.811,77,3)
Answer must be 1-2 characters in length.
"^DD",727.811,727.811,77,21,0)
^.001^2^2^3060731^^
"^DD",727.811,727.811,77,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.811,727.811,77,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.811,727.811,77,23,0)
^.001^4^4^3060731^^^
"^DD",727.811,727.811,77,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.811,727.811,77,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.811,727.811,77,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.811,727.811,77,23,4,0)
    Null
"^DD",727.811,727.811,77,"DT")
3060731
"^DD",727.811,727.811,78,0)
AGENT ORANGE ENC INDICATOR^F^^2;5^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,78,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,78,21,0)
^.001^5^5^3060628^^^^
"^DD",727.811,727.811,78,21,1,0)
Indicate the appropriate response for agent orange as related to
"^DD",727.811,727.811,78,21,2,0)
this patient's episode of care:
"^DD",727.811,727.811,78,21,3,0)
  Y = Yes
"^DD",727.811,727.811,78,21,4,0)
  N = No
"^DD",727.811,727.811,78,21,5,0)
  Null
"^DD",727.811,727.811,78,23,0)
^^5^5^3060719^
"^DD",727.811,727.811,78,23,1,0)
Using the VISIT field (#.015) in the SURGERY file (#130) a call is made to
"^DD",727.811,727.811,78,23,2,0)
API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.811,727.811,78,23,3,0)
will return the agent orange indicator stored at the AGENT ORANGE EXPOSURE
"^DD",727.811,727.811,78,23,4,0)
field (#80002) in the VISIT file (#9000010). The value will be stored 
"^DD",727.811,727.811,78,23,5,0)
in the output array subscripted "AO".
"^DD",727.811,727.811,78,"DT")
3060626
"^DD",727.811,727.811,79,0)
ENC HEAD/NECK CA^F^^2;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.811,727.811,79,3)
Answer must be 1 character in length.
"^DD",727.811,727.811,79,21,0)
^^5^5^3060719^
"^DD",727.811,727.811,79,21,1,0)
Indicates the appropriate response for head/neck cancer as related to this
"^DD",727.811,727.811,79,21,2,0)
patient's episode of care:
"^DD",727.811,727.811,79,21,3,0)
  Y = Yes
"^DD",727.811,727.811,79,21,4,0)
  N = No
"^DD",727.811,727.811,79,21,5,0)
  Null
"^DD",727.811,727.811,79,23,0)
^^5^5^3060719^
"^DD",727.811,727.811,79,23,1,0)
Using the VISIT field (#.015) in the SURGERY file (#130) a call is made to
"^DD",727.811,727.811,79,23,2,0)
API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The ENCEVENT^PXAPI
"^DD",727.811,727.811,79,23,3,0)
will return the head/neck cancer data stored at the HEAD AND/OR NECK
"^DD",727.811,727.811,79,23,4,0)
CANCER field (#80006) in the VISIT file (#9000010). The value will be
"^DD",727.811,727.811,79,23,5,0)
stored in the output array subscripted by "HNC".
"^DD",727.811,727.811,79,"DT")
3060628
"^DD",727.812,727.812,45,0)
PRODUCTION DIVISION CODE^F^^1;18^K:$L(X)>6!($L(X)<1) X
"^DD",727.812,727.812,45,3)
Answer must be 1-6 characters in length.
"^DD",727.812,727.812,45,21,0)
^.001^2^2^3060719^^^^
"^DD",727.812,727.812,45,21,1,0)
This is the 3-6 character division where the work took place.  This data
"^DD",727.812,727.812,45,21,2,0)
would correspond to the entries in the Institution (#4) file.
"^DD",727.812,727.812,45,23,0)
^^5^5^3060719^
"^DD",727.812,727.812,45,23,1,0)
Data comes from the DIVISION field (#16), subfile (#200.02), of the NEW
"^DD",727.812,727.812,45,23,2,0)
PERSON file (#200). The DIVISION field (#.01) is a pointer to the 
"^DD",727.812,727.812,45,23,3,0)
INSTITUTION file (#4). This value is then used to call the API
"^DD",727.812,727.812,45,23,4,0)
RADDIV^ECXDEPT to get the STATION NUMBER field (#99) from the INSTITUTION
"^DD",727.812,727.812,45,23,5,0)
file (#4).
"^DD",727.812,727.812,45,"DT")
3020429
"^DD",727.812,727.812,61,0)
AGENT ORANGE STATUS^S^Y:YES;N:NO;U:UNKNOWN;^1;34^Q
"^DD",727.812,727.812,61,21,0)
^.001^2^2^3060719^^^^
"^DD",727.812,727.812,61,21,1,0)
Data is Y if this patient was exposed to agent orange, N if not, or U if
"^DD",727.812,727.812,61,21,2,0)
unknown.
"^DD",727.812,727.812,61,23,0)
^^5^5^3060719^
"^DD",727.812,727.812,61,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.812,727.812,61,23,2,0)
in the MENTAL HEALTH EXTRACT (#727.812), the api $$PAT^ECXUTL3 is called
"^DD",727.812,727.812,61,23,3,0)
to obtain the value for Agent Orange. AGENT ORANGE data is derived from
"^DD",727.812,727.812,61,23,4,0)
the AGENT ORANGE EXPOS. INDICATED? field (#.32102) in the PATIENT file
"^DD",727.812,727.812,61,23,5,0)
(#2).
"^DD",727.812,727.812,61,"DT")
3060707
"^DD",727.813,727.813,38,0)
ERI^F^^1;17^K:$L(X)>2!($L(X)<1) X
"^DD",727.813,727.813,38,3)
Answer must be 1-2 characters in length.
"^DD",727.813,727.813,38,21,0)
^.001^2^2^3060731^^
"^DD",727.813,727.813,38,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.813,727.813,38,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.813,727.813,38,23,0)
^.001^4^4^3060731^^
"^DD",727.813,727.813,38,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.813,727.813,38,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.813,727.813,38,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.813,727.813,38,23,4,0)
    Null
"^DD",727.813,727.813,38,"DT")
3060731
"^DD",727.814,727.814,43,0)
ERI^F^^1;21^K:$L(X)>2!($L(X)<1) X
"^DD",727.814,727.814,43,3)
Answer must be 1-2 characters in length.
"^DD",727.814,727.814,43,21,0)
^.001^2^2^3060731^^
"^DD",727.814,727.814,43,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.814,727.814,43,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.814,727.814,43,23,0)
^.001^4^4^3060731^^^
"^DD",727.814,727.814,43,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.814,727.814,43,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.814,727.814,43,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.814,727.814,43,23,4,0)
    Null
"^DD",727.814,727.814,43,"DT")
3060731
"^DD",727.815,727.815,83,0)
ERI^F^^2;4^K:$L(X)>2!($L(X)<1) X
"^DD",727.815,727.815,83,3)
Answer must be 1-2 characters in length.
"^DD",727.815,727.815,83,21,0)
^.001^2^2^3060731^^
"^DD",727.815,727.815,83,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.815,727.815,83,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.815,727.815,83,23,0)
^.001^4^4^3060731^^^
"^DD",727.815,727.815,83,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.815,727.815,83,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.815,727.815,83,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.815,727.815,83,23,4,0)
    Null
"^DD",727.815,727.815,83,"DT")
3060731
"^DD",727.815,727.815,84,0)
AGENT ORANGE ENC INDICATOR^F^^2;5^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,84,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,84,21,0)
^^5^5^3060719^
"^DD",727.815,727.815,84,21,1,0)
Indicates the appropriate response for agent orange as related to
"^DD",727.815,727.815,84,21,2,0)
this patient's episode of care:
"^DD",727.815,727.815,84,21,3,0)
  Y = Yes
"^DD",727.815,727.815,84,21,4,0)
  N = No
"^DD",727.815,727.815,84,21,5,0)
  Null
"^DD",727.815,727.815,84,23,0)
^^5^5^3060721^
"^DD",727.815,727.815,84,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721)
"^DD",727.815,727.815,84,23,2,0)
a call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI.
"^DD",727.815,727.815,84,23,3,0)
The ENCEVENT^PXAPI returns the agent orange indicator stored at the AGENT
"^DD",727.815,727.815,84,23,4,0)
ORANGE EXPOSURE field (#80002) in the VISIT file (#9000010).
"^DD",727.815,727.815,84,23,5,0)
The value will be stored in the output array subscripted by "AO".
"^DD",727.815,727.815,84,"DT")
3060621
"^DD",727.815,727.815,85,0)
ENCOUNTER EC^F^^2;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,85,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,85,21,0)
^.001^5^5^3060721^^
"^DD",727.815,727.815,85,21,1,0)
Indicates the appropriate response for environmental contaminant as
"^DD",727.815,727.815,85,21,2,0)
related to this patient's episode of care:
"^DD",727.815,727.815,85,21,3,0)
  Y = Yes
"^DD",727.815,727.815,85,21,4,0)
  N = No
"^DD",727.815,727.815,85,21,5,0)
  Null
"^DD",727.815,727.815,85,23,0)
^.001^5^5^3060721^^
"^DD",727.815,727.815,85,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721)
"^DD",727.815,727.815,85,23,2,0)
a call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI.
"^DD",727.815,727.815,85,23,3,0)
The ENCEVENT^PXAPI returns the environmental contaminant indicator stored
"^DD",727.815,727.815,85,23,4,0)
at the PERSIAN GULF EXPOSURE field (#80004) in the VISIT file (#9000010).
"^DD",727.815,727.815,85,23,5,0)
The value will be stored in the output array subscripted by "PGE".
"^DD",727.815,727.815,85,"DT")
3060623
"^DD",727.815,727.815,86,0)
ENC HEAD/NECK CA^F^^2;7^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,86,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,86,21,0)
^^5^5^3060719^
"^DD",727.815,727.815,86,21,1,0)
Indicates the appropriate response for head/neck cancer as related to
"^DD",727.815,727.815,86,21,2,0)
this patient's episode of care:
"^DD",727.815,727.815,86,21,3,0)
  Y = Yes
"^DD",727.815,727.815,86,21,4,0)
  N = No
"^DD",727.815,727.815,86,21,5,0)
  Null
"^DD",727.815,727.815,86,23,0)
^.001^5^5^3060719^^
"^DD",727.815,727.815,86,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721)
"^DD",727.815,727.815,86,23,2,0)
a call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI.
"^DD",727.815,727.815,86,23,3,0)
The ENCEVENT^PXAPI returns the head/neck cancer data stored at the
"^DD",727.815,727.815,86,23,4,0)
HEAD AND/OR NECK CANCER field (#80006) in the VISIT file (#9000010). The
"^DD",727.815,727.815,86,23,5,0)
value will be stored in the output array subscripted by "HNC".
"^DD",727.815,727.815,86,"DT")
3060623
"^DD",727.815,727.815,87,0)
ENCOUNTER MST^F^^2;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,87,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,87,21,0)
^^5^5^3060719^
"^DD",727.815,727.815,87,21,1,0)
Indicates the appropriate response for military sexual trauma as related
"^DD",727.815,727.815,87,21,2,0)
to this patient's episode of care:
"^DD",727.815,727.815,87,21,3,0)
  Y = Yes
"^DD",727.815,727.815,87,21,4,0)
  N = No
"^DD",727.815,727.815,87,21,5,0)
  Null
"^DD",727.815,727.815,87,23,0)
^^5^5^3060719^
"^DD",727.815,727.815,87,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721) a
"^DD",727.815,727.815,87,23,2,0)
call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI. The
"^DD",727.815,727.815,87,23,3,0)
ENCEVENT^PXAPI returns the military sexual trauma data stored at the
"^DD",727.815,727.815,87,23,4,0)
MILITARY SEXUAL TRAUMA field (#80005) in the VISIT file (#9000010). The
"^DD",727.815,727.815,87,23,5,0)
value will be stored in the output array subscripted by "MST".
"^DD",727.815,727.815,87,"DT")
3060623
"^DD",727.815,727.815,88,0)
RADIATION ENCOUNTER INDICATOR^F^^2;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.815,727.815,88,3)
Answer must be 1 character in length.
"^DD",727.815,727.815,88,21,0)
^^5^5^3060719^
"^DD",727.815,727.815,88,21,1,0)
Indicates the appropriate response for radiation exposure as related to
"^DD",727.815,727.815,88,21,2,0)
this patient's episode of care:
"^DD",727.815,727.815,88,21,3,0)
  Y = Yes
"^DD",727.815,727.815,88,21,4,0)
  N = No
"^DD",727.815,727.815,88,21,5,0)
  Null
"^DD",727.815,727.815,88,23,0)
^^6^6^3060719^
"^DD",727.815,727.815,88,23,1,0)
Using the VISIT field (#28) in the EVENT CAPTURE PATIENT file (#721) a
"^DD",727.815,727.815,88,23,2,0)
call is made to API VISIT^ECXSCX1 which in turn calls ENCEVENT^PXAPI.
"^DD",727.815,727.815,88,23,3,0)
The ENCEVENT^PXAPI returns the ionizing radiation exposure indicator
"^DD",727.815,727.815,88,23,4,0)
stored at the IONIZING RADIATION EXPOSURE field (#80003) in the VISIT file
"^DD",727.815,727.815,88,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.815,727.815,88,23,6,0)
"IR". 
"^DD",727.815,727.815,88,"DT")
3060623
"^DD",727.815,727.815,89,0)
NUTRITION DIAGNOSIS^F^^2;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.815,727.815,89,3)
Answer must be 8 characters in length.
"^DD",727.815,727.815,89,"DT")
3060619
"^DD",727.819,727.819,41,0)
PRODUCTION DIVISION CODE^F^^1;15^K:$L(X)>6!($L(X)<3) X
"^DD",727.819,727.819,41,3)
Answer must be 3-6 characters in length
"^DD",727.819,727.819,41,21,0)
^.001^2^2^3060630^^^^
"^DD",727.819,727.819,41,21,1,0)
Represents the division where the work took place.  This is the facility
"^DD",727.819,727.819,41,21,2,0)
number where the work took place.
"^DD",727.819,727.819,41,23,0)
^.001^4^4^3060630^^
"^DD",727.819,727.819,41,23,1,0)
Data comes from the DIVISION field (#.02) of the IV ROOM file (#59.5), 
"^DD",727.819,727.819,41,23,2,0)
which is a pointer to the MEDICAL CENTER DIVISION file (#40.8). This value
"^DD",727.819,727.819,41,23,3,0)
is then used to call the api GETDIV^ECXDEPT to get the STATION NUMBER
"^DD",727.819,727.819,41,23,4,0)
field (#99) from the INSTITUTION file (#4).           
"^DD",727.819,727.819,41,"DT")
3020719
"^DD",727.819,727.819,80,0)
ERI^F^^2;17^K:$L(X)>2!($L(X)<1) X
"^DD",727.819,727.819,80,3)
Answer must be 1-2 characters in length.
"^DD",727.819,727.819,80,21,0)
^.001^2^2^3060731^^
"^DD",727.819,727.819,80,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.819,727.819,80,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.819,727.819,80,23,0)
^.001^4^4^3060731^^^
"^DD",727.819,727.819,80,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.819,727.819,80,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.819,727.819,80,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.819,727.819,80,23,4,0)
    Null
"^DD",727.819,727.819,80,"DT")
3060731
"^DD",727.819,727.819,81,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^2;18^Q
"^DD",727.819,727.819,81,21,0)
^.001^2^2^3060719^^^
"^DD",727.819,727.819,81,21,1,0)
This field is used to indicate that this patient claim exposure while
"^DD",727.819,727.819,81,21,2,0)
serving in the Persian Gulf or Somalia.
"^DD",727.819,727.819,81,23,0)
^.001^8^8^3060719^^
"^DD",727.819,727.819,81,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.819,727.819,81,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.819,727.819,81,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.819,727.819,81,23,4,0)
PAT^ECXUTL3. The field values are:
"^DD",727.819,727.819,81,23,5,0)
 
"^DD",727.819,727.819,81,23,6,0)
 Y = YES
"^DD",727.819,727.819,81,23,7,0)
 N = NO
"^DD",727.819,727.819,81,23,8,0)
 U = UNKNOWN
"^DD",727.819,727.819,81,"DT")
3060626
"^DD",727.825,727.825,69,0)
PRODUCTION DIVISION CODE^F^^1;28^K:$L(X)>6!($L(X)<3) X
"^DD",727.825,727.825,69,3)
Answer must be 3-6 characters in length.
"^DD",727.825,727.825,69,21,0)
^.001^2^2^3060630^^^^
"^DD",727.825,727.825,69,21,1,0)
Data represents the medical center division the work was performed in.
"^DD",727.825,727.825,69,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.825,727.825,69,23,0)
^.001^4^4^3060630^^
"^DD",727.825,727.825,69,23,1,0)
Data comes from the DIVISION field (#60) of the A&SP CLINIC VISIT file
"^DD",727.825,727.825,69,23,2,0)
(#509850.6), which is a pointer to the MEDICAL CENTER DIVISION file
"^DD",727.825,727.825,69,23,3,0)
(#40.8). This value is then used to call the api GETDIV^ECXDEPT to
"^DD",727.825,727.825,69,23,4,0)
get the STATION NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.825,727.825,69,"DT")
3020812
"^DD",727.825,727.825,83,0)
ERI^F^^2;4^K:$L(X)>2!($L(X)<1) X
"^DD",727.825,727.825,83,3)
Answer must be 1-2 characters in length.
"^DD",727.825,727.825,83,21,0)
^.001^2^2^3060731^^
"^DD",727.825,727.825,83,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.825,727.825,83,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.825,727.825,83,23,0)
^.001^4^4^3060731^^^
"^DD",727.825,727.825,83,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.825,727.825,83,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.825,727.825,83,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.825,727.825,83,23,4,0)
    Null
"^DD",727.825,727.825,83,"DT")
3060731
"^DD",727.825,727.825,84,0)
AGENT ORANGE ENC INDICATOR^F^^2;5^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,84,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,84,21,0)
^^5^5^3060719^
"^DD",727.825,727.825,84,21,1,0)
Indicates the appropriate response for agent orange as related to
"^DD",727.825,727.825,84,21,2,0)
this patient's episode of care:
"^DD",727.825,727.825,84,21,3,0)
  Y = Yes
"^DD",727.825,727.825,84,21,4,0)
  N = No
"^DD",727.825,727.825,84,21,5,0)
  Null
"^DD",727.825,727.825,84,23,0)
^^6^6^3060719^
"^DD",727.825,727.825,84,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,84,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,84,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the agent orange indicator
"^DD",727.825,727.825,84,23,4,0)
stored at the AGENT ORANGE EXPOSURE field (#80002) in the VISIT file
"^DD",727.825,727.825,84,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.825,727.825,84,23,6,0)
"AO".
"^DD",727.825,727.825,84,"DT")
3060621
"^DD",727.825,727.825,85,0)
ENCOUNTER EC^F^^2;6^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,85,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,85,21,0)
^^5^5^3060719^
"^DD",727.825,727.825,85,21,1,0)
Indicates the appropriate response for environmental contaminant as
"^DD",727.825,727.825,85,21,2,0)
related to this patient's episode of care:
"^DD",727.825,727.825,85,21,3,0)
  Y = Yes
"^DD",727.825,727.825,85,21,4,0)
  N = No
"^DD",727.825,727.825,85,21,5,0)
  Null
"^DD",727.825,727.825,85,23,0)
^^6^6^3060719^
"^DD",727.825,727.825,85,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,85,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,85,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the environmental
"^DD",727.825,727.825,85,23,4,0)
contaminant indicator stored at the PERSIAN GULF EXPOSURE field (#80004)
"^DD",727.825,727.825,85,23,5,0)
in the VISIT file (#9000010). The value will be stored in the output array
"^DD",727.825,727.825,85,23,6,0)
subscripted by "PGE".
"^DD",727.825,727.825,85,"DT")
3060623
"^DD",727.825,727.825,86,0)
ENC HEAD/NECK CA^F^^2;7^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,86,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,86,21,0)
^^5^5^3060719^
"^DD",727.825,727.825,86,21,1,0)
Indicates the appropriate response for head/neck cancer as related to
"^DD",727.825,727.825,86,21,2,0)
this patient's episode of care:
"^DD",727.825,727.825,86,21,3,0)
  Y = Yes
"^DD",727.825,727.825,86,21,4,0)
  N = No
"^DD",727.825,727.825,86,21,5,0)
  Null
"^DD",727.825,727.825,86,23,0)
^^6^6^3060719^
"^DD",727.825,727.825,86,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,86,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,86,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the head/neck cancer data
"^DD",727.825,727.825,86,23,4,0)
stored at the HEAD AND/OR NECK CANCER field (#80006) in the VISIT file
"^DD",727.825,727.825,86,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.825,727.825,86,23,6,0)
"HNC".
"^DD",727.825,727.825,86,"DT")
3060623
"^DD",727.825,727.825,87,0)
ENCOUNTER MST^F^^2;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,87,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,87,21,0)
^^5^5^3060719^
"^DD",727.825,727.825,87,21,1,0)
Indicates the appropriate response for military sexual trauma as related
"^DD",727.825,727.825,87,21,2,0)
to this patient's episode of care:
"^DD",727.825,727.825,87,21,3,0)
  Y = Yes
"^DD",727.825,727.825,87,21,4,0)
  N = No
"^DD",727.825,727.825,87,21,5,0)
  Null
"^DD",727.825,727.825,87,23,0)
^^6^6^3060719^
"^DD",727.825,727.825,87,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,87,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,87,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the military sexual trauma
"^DD",727.825,727.825,87,23,4,0)
stored at the MILITARY SEXUAL TRAUMA field (#80005) in the VISIT file
"^DD",727.825,727.825,87,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.825,727.825,87,23,6,0)
"MST".
"^DD",727.825,727.825,87,"DT")
3060623
"^DD",727.825,727.825,88,0)
RADIATION ENCOUNTER INDICATOR^F^^2;9^K:$L(X)>1!($L(X)<1) X
"^DD",727.825,727.825,88,3)
Answer must be 1 character in length.
"^DD",727.825,727.825,88,21,0)
^^5^5^3060719^
"^DD",727.825,727.825,88,21,1,0)
Indicates the appropriate response for radiation exposure as related to
"^DD",727.825,727.825,88,21,2,0)
this patient's episode of care:
"^DD",727.825,727.825,88,21,3,0)
  Y = Yes
"^DD",727.825,727.825,88,21,4,0)
  N = No
"^DD",727.825,727.825,88,21,5,0)
  Null
"^DD",727.825,727.825,88,23,0)
^^6^6^3060719^
"^DD",727.825,727.825,88,23,1,0)
Using the PCE VISIT IEN field (#125) in the A&SP CLINIC VISIT file
"^DD",727.825,727.825,88,23,2,0)
(#509850.6) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.825,727.825,88,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the ionizing radiation
"^DD",727.825,727.825,88,23,4,0)
exposure indicator stored at the IONIZING RADIATION EXPOSURE field 
"^DD",727.825,727.825,88,23,5,0)
(#80003) in the VISIT file (#9000010). The value will be stored in the
"^DD",727.825,727.825,88,23,6,0)
output array subscripted by "IR".
"^DD",727.825,727.825,88,"DT")
3060623
"^DD",727.825,727.825,89,0)
NUTRITION DIAGNOSIS^F^^2;10^K:$L(X)>8!($L(X)<8) X
"^DD",727.825,727.825,89,3)
Answer must be 8 characters in length.
"^DD",727.825,727.825,89,"DT")
3060619
"^DD",727.826,727.826,75,0)
ERI^F^^1;43^K:$L(X)>2!($L(X)<1) X
"^DD",727.826,727.826,75,3)
Answer must be 1-2 characters in length.
"^DD",727.826,727.826,75,21,0)
^.001^2^2^3060731^^
"^DD",727.826,727.826,75,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.826,727.826,75,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.826,727.826,75,23,0)
^.001^4^4^3060731^^^
"^DD",727.826,727.826,75,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.826,727.826,75,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.826,727.826,75,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.826,727.826,75,23,4,0)
    Null
"^DD",727.826,727.826,75,"DT")
3060731
"^DD",727.826,727.826,76,0)
AGENT ORANGE ENC INDICATOR^F^^1;44^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,76,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,76,21,0)
^.001^5^5^3060719^^
"^DD",727.826,727.826,76,21,1,0)
Indicates the appropriate response for agent orange as related to
"^DD",727.826,727.826,76,21,2,0)
this patient's episode of care:
"^DD",727.826,727.826,76,21,3,0)
  Y = Yes
"^DD",727.826,727.826,76,21,4,0)
  N = No
"^DD",727.826,727.826,76,21,5,0)
  Null
"^DD",727.826,727.826,76,23,0)
^.001^5^5^3060719^^
"^DD",727.826,727.826,76,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,76,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,76,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the agent orange indicator
"^DD",727.826,727.826,76,23,4,0)
stored at the AGENT ORANGE EXPOSURE field (#80002) in the VISIT file
"^DD",727.826,727.826,76,23,5,0)
(#9000010). The value will be stored in the output array subscripted "AO".
"^DD",727.826,727.826,76,"DT")
3060626
"^DD",727.826,727.826,77,0)
ENCOUNTER EC^F^^1;45^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,77,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,77,21,0)
^^5^5^3060719^
"^DD",727.826,727.826,77,21,1,0)
Indicates the appropriate response for environmental contaminant as
"^DD",727.826,727.826,77,21,2,0)
related to this patient's episode of care:
"^DD",727.826,727.826,77,21,3,0)
  Y = Yes
"^DD",727.826,727.826,77,21,4,0)
  N = No
"^DD",727.826,727.826,77,21,5,0)
  Null
"^DD",727.826,727.826,77,23,0)
^^6^6^3060719^
"^DD",727.826,727.826,77,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,77,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,77,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the environmental contaminant
"^DD",727.826,727.826,77,23,4,0)
indicator stored at the PERSIAN GULF EXPOSUR field (#80004) in the VISIT
"^DD",727.826,727.826,77,23,5,0)
file (#9000010). The value will be stored in the output array subscripted
"^DD",727.826,727.826,77,23,6,0)
"PGE".
"^DD",727.826,727.826,77,"DT")
3060623
"^DD",727.826,727.826,78,0)
ENC HEAD/NECK CA^F^^1;46^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,78,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,78,21,0)
^^5^5^3060719^
"^DD",727.826,727.826,78,21,1,0)
Indicates the appropriate response for head/neck cancer as related to
"^DD",727.826,727.826,78,21,2,0)
this patient's episode of care:
"^DD",727.826,727.826,78,21,3,0)
  Y = Yes
"^DD",727.826,727.826,78,21,4,0)
  N = No
"^DD",727.826,727.826,78,21,5,0)
  Null
"^DD",727.826,727.826,78,23,0)
^^6^6^3060719^
"^DD",727.826,727.826,78,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,78,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,78,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the head/neck cancer data
"^DD",727.826,727.826,78,23,4,0)
stored at the HEAD AND/OR NECK CANCER field (#80006) in the VISIT file
"^DD",727.826,727.826,78,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.826,727.826,78,23,6,0)
"HNC".
"^DD",727.826,727.826,78,"DT")
3060623
"^DD",727.826,727.826,79,0)
ENCOUNTER MST^F^^1;47^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,79,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,79,21,0)
^^5^5^3060719^
"^DD",727.826,727.826,79,21,1,0)
Indicates the appropriate response for military sexual trauma as related
"^DD",727.826,727.826,79,21,2,0)
to this patient's episode of care:
"^DD",727.826,727.826,79,21,3,0)
  Y = Yes
"^DD",727.826,727.826,79,21,4,0)
  N = No
"^DD",727.826,727.826,79,21,5,0)
  Null
"^DD",727.826,727.826,79,23,0)
^^6^6^3060719^
"^DD",727.826,727.826,79,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,79,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,79,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the military sexual trauma
"^DD",727.826,727.826,79,23,4,0)
data stored at the MILITARY SEXUAL TRAUMA field (#80005) in the VISIT file
"^DD",727.826,727.826,79,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.826,727.826,79,23,6,0)
"MST".
"^DD",727.826,727.826,79,"DT")
3060623
"^DD",727.826,727.826,80,0)
RADIATION ENCOUNTER INDICATOR^F^^1;48^K:$L(X)>1!($L(X)<1) X
"^DD",727.826,727.826,80,3)
Answer must be 1 character in length.
"^DD",727.826,727.826,80,21,0)
^^5^5^3060719^
"^DD",727.826,727.826,80,21,1,0)
Indicates the appropriate response for radiation exposure as related to
"^DD",727.826,727.826,80,21,2,0)
this patient's episode of care:
"^DD",727.826,727.826,80,21,3,0)
  Y = Yes
"^DD",727.826,727.826,80,21,4,0)
  N = No
"^DD",727.826,727.826,80,21,5,0)
  Null
"^DD",727.826,727.826,80,23,0)
^^6^6^3060719^
"^DD",727.826,727.826,80,23,1,0)
Using the PCE field (#8.12) in the RECORD OF PROS APPLIANCE/REPAIR file
"^DD",727.826,727.826,80,23,2,0)
(#606) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.826,727.826,80,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the ionizing radiation
"^DD",727.826,727.826,80,23,4,0)
exposure indicator stored at the IONIZING RADIATION EXPOSURE field 
"^DD",727.826,727.826,80,23,5,0)
(#80003) in the VISIT file (#9000010). The value will be stored in the
"^DD",727.826,727.826,80,23,6,0)
output array subscripted by "IR".
"^DD",727.826,727.826,80,"DT")
3060626
"^DD",727.827,727.827,68,0)
PRODUCTION DIVISION CODE^F^^2;8^K:$L(X)>6!($L(X)<3) X
"^DD",727.827,727.827,68,3)
Answer must be 3-6 characters in length.
"^DD",727.827,727.827,68,21,0)
^.001^2^2^3060630^^^^
"^DD",727.827,727.827,68,21,1,0)
Data represents the medical center division the work was performed in.
"^DD",727.827,727.827,68,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.827,727.827,68,23,0)
^^4^4^3060719^
"^DD",727.827,727.827,68,23,1,0)
Data comes from the DIVISION field (#3.5) of the HOSPITAL LOCATION
"^DD",727.827,727.827,68,23,2,0)
file (#44), which is a pointer to the MEDICAL CENTER DIVISION file 
"^DD",727.827,727.827,68,23,3,0)
(#40.8). This value is then used to call the API GETDIV^ECXDEPT to
"^DD",727.827,727.827,68,23,4,0)
get the STATION NUMBER field (#99) from the INSTITUTION file (#4).
"^DD",727.827,727.827,68,"DT")
3020812
"^DD",727.827,727.827,86,0)
ERI^F^^2;26^K:$L(X)>2!($L(X)<1) X
"^DD",727.827,727.827,86,3)
Answer must be 1-2 characters in length.
"^DD",727.827,727.827,86,21,0)
^.001^2^2^3060731^^
"^DD",727.827,727.827,86,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.827,727.827,86,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.827,727.827,86,23,0)
^.001^4^4^3060731^^^
"^DD",727.827,727.827,86,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.827,727.827,86,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.827,727.827,86,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.827,727.827,86,23,4,0)
    Null
"^DD",727.827,727.827,86,"DT")
3060731
"^DD",727.827,727.827,87,0)
ENC HEAD/NECK CA^F^^2;27^K:$L(X)>1!($L(X)<1) X
"^DD",727.827,727.827,87,3)
Answer must be 1 character in length.
"^DD",727.827,727.827,87,21,0)
^^5^5^3060719^
"^DD",727.827,727.827,87,21,1,0)
Indicates the appropriate response for head/neck cancer as related to this
"^DD",727.827,727.827,87,21,2,0)
patient's episode of care:
"^DD",727.827,727.827,87,21,3,0)
  Y = Yes
"^DD",727.827,727.827,87,21,4,0)
  N = No
"^DD",727.827,727.827,87,21,5,0)
  Null
"^DD",727.827,727.827,87,23,0)
^^6^6^3060719^
"^DD",727.827,727.827,87,23,1,0)
Using the VISIT FILE ENTRY field (#.05) in the OUTPATIENT ENCOUNTER file
"^DD",727.827,727.827,87,23,2,0)
(#409.68) a call is made to API VISIT^ECXSCX1 which in turn calls
"^DD",727.827,727.827,87,23,3,0)
ENCEVENT^PXAPI. The ENCEVENT^PXAPI returns the head/neck cancer data
"^DD",727.827,727.827,87,23,4,0)
stored at the HEAD AND/OR NECK CANCER field (#80006) in the VISIT file
"^DD",727.827,727.827,87,23,5,0)
(#9000010). The value will be stored in the output array subscripted by
"^DD",727.827,727.827,87,23,6,0)
"HNC".
"^DD",727.827,727.827,87,"DT")
3060628
"^DD",727.829,727.829,16,0)
REACTION TYPE^F^^0;17^K:$L(X)>10!($L(X)<2) X
"^DD",727.829,727.829,16,3)
Answer must be 2-10 characters in length.
"^DD",727.829,727.829,16,21,0)
^.001^1^1^3060719^^^^
"^DD",727.829,727.829,16,21,1,0)
Type of reaction from transfusion
"^DD",727.829,727.829,16,23,0)
^^3^3^3060719^
"^DD",727.829,727.829,16,23,1,0)
Field (#.11) of the TRANSFUSION RECORDS sub-file (#63.017) of the LAB DATA
"^DD",727.829,727.829,16,23,2,0)
file (#63) which is a pointer to field (#.01) of the BLOOD BANK UTILITY
"^DD",727.829,727.829,16,23,3,0)
file (#65.4).
"^DD",727.829,727.829,16,"DT")
3060524
"^DD",727.829,727.829,22,0)
ERI^F^^0;23^K:$L(X)>2!($L(X)<1) X
"^DD",727.829,727.829,22,3)
Answer must be 1-2 characters in length.
"^DD",727.829,727.829,22,21,0)
^.001^2^2^3060731^^
"^DD",727.829,727.829,22,21,1,0)
This field identifies patients from impacted zip code areas designated by
"^DD",727.829,727.829,22,21,2,0)
the Federal Emergency Management Agency (FEMA).
"^DD",727.829,727.829,22,23,0)
^.001^4^4^3060731^^^
"^DD",727.829,727.829,22,23,1,0)
This field is extracted from the EMERGENCY RESPONSE INDICATOR field
"^DD",727.829,727.829,22,23,2,0)
(#.181) located in the PATIENT file (#2). Values are:
"^DD",727.829,727.829,22,23,3,0)
    "K" = Hurricane Katrina
"^DD",727.829,727.829,22,23,4,0)
    Null
"^DD",727.829,727.829,22,"DT")
3060731
"^DD",727.829,727.829,23,0)
UNIT MODIFIED^S^Y:YES;N:NO;^0;24^Q
"^DD",727.829,727.829,23,3)
Answer must be "Y" or "N".
"^DD",727.829,727.829,23,21,0)
^.001^2^2^3060914^^
"^DD",727.829,727.829,23,21,1,0)
The value for this field is Y or N depending on whether there is a 
"^DD",727.829,727.829,23,21,2,0)
value in the UNIT MODIFICATION field (#24).
"^DD",727.829,727.829,23,23,0)
^.001^4^4^3060914^^
"^DD",727.829,727.829,23,23,1,0)
The value for this field is determined from the UNIT MODIFICATION field
"^DD",727.829,727.829,23,23,2,0)
(#24).
"^DD",727.829,727.829,23,23,3,0)
    If UNIT MODIFICATION has a value then UNIT MODIFIED="Y"
"^DD",727.829,727.829,23,23,4,0)
    If UNIT MODIFICATION has no value then UNIT MODIFIED="N"
"^DD",727.829,727.829,23,"DT")
3060515
"^DD",727.829,727.829,24,0)
UNIT MODIFICATION^F^^0;25^K:$L(X)>6!($L(X)<1) X
"^DD",727.829,727.829,24,3)
Answer must be 1-6 characters in length.
"^DD",727.829,727.829,24,21,0)
^.001^2^2^3060630^^
"^DD",727.829,727.829,24,21,1,0)
This field is used to indicate whether the product(s) will be divided
"^DD",727.829,727.829,24,21,2,0)
units or a pool.
"^DD",727.829,727.829,24,23,0)
^^13^13^3060719^
"^DD",727.829,727.829,24,23,1,0)
This field is a combination of values retrieved from the MODIFICATION
"^DD",727.829,727.829,24,23,2,0)
CRITERIA field (#.06) and MODIFY TO field (#3), subfile (#66.03), taken
"^DD",727.829,727.829,24,23,3,0)
from the BLOOD PRODUCT file (#66). The value has a maximum length of six
"^DD",727.829,727.829,24,23,4,0)
characters and consist of:
"^DD",727.829,727.829,24,23,5,0)
   D = DIVIDED
"^DD",727.829,727.829,24,23,6,0)
   P = POOLED
"^DD",727.829,727.829,24,23,7,0)
   W = WASHED
"^DD",727.829,727.829,24,23,8,0)
   F = FROZEN
"^DD",727.829,727.829,24,23,9,0)
   L = LEUKOCYTE POOR
"^DD",727.829,727.829,24,23,10,0)
   R = REJUVENATED
"^DD",727.829,727.829,24,23,11,0)
   G = DEGLYCEROLIZED
"^DD",727.829,727.829,24,23,12,0)
   I = IRRADIATED
"^DD",727.829,727.829,24,23,13,0)
   S = SEPARATED
"^DD",727.829,727.829,24,"DT")
3060630
"^DD",727.829,727.829,25,0)
REQUESTING PROVIDER^F^^0;26^K:$L(X)>11!($L(X)<1) X
"^DD",727.829,727.829,25,3)
Answer must be 1-11 characters in length.
"^DD",727.829,727.829,25,21,0)
^.001^2^2^3060705^^^^
"^DD",727.829,727.829,25,21,1,0)
This is the provider who requested the testing/type and cross match for 
"^DD",727.829,727.829,25,21,2,0)
the transfusion.
"^DD",727.829,727.829,25,23,0)
^^5^5^3060719^
"^DD",727.829,727.829,25,23,1,0)
Data comes from the PROVIDER field (#6.5) of subfile (#68.02). Subfile 
"^DD",727.829,727.829,25,23,2,0)
(#68.02) is the ACCESSION NUMBER field (#1) in subfile (#68.01). Subfile
"^DD",727.829,727.829,25,23,3,0)
(#68.01) is the DATE field (#2) in the ACCESSION file (#68).
"^DD",727.829,727.829,25,23,4,0)
 
"^DD",727.829,727.829,25,23,5,0)
The value of this field is prefixed with a '2'.
"^DD",727.829,727.829,25,"DT")
3060509
"^DD",727.829,727.829,26,0)
REQUESTING PROVIDER PC^F^^0;27^K:$L(X)>7!($L(X)<7) X
"^DD",727.829,727.829,26,3)
Answer must be 7 characters in length.
"^DD",727.829,727.829,26,21,0)
^.001^3^3^3060829^^
"^DD",727.829,727.829,26,21,1,0)
The field holds the VA Code associated with the active Person Class
"^DD",727.829,727.829,26,21,2,0)
of the Requesting Provider. The VA Code is always exactly 7 characters 
"^DD",727.829,727.829,26,21,3,0)
in length in the form Vnnnnnn where n represents a numeric digit.
"^DD",727.829,727.829,26,23,0)
^.001^5^5^3060829^^
"^DD",727.829,727.829,26,23,1,0)
Data comes from the PROVIDER field (#6.5) of subfile (#68.02). Subfile 
"^DD",727.829,727.829,26,23,2,0)
(#68.02) is the ACCESSION NUMBER field (#1) in subfile (#68.01). Subfile
"^DD",727.829,727.829,26,23,3,0)
(#68.01) is the DATE field (#2) in the ACCESSION file (#68). The Person
"^DD",727.829,727.829,26,23,4,0)
Class is determined by calling the API $$GET^XUA4A71. The Person Class
"^DD",727.829,727.829,26,23,5,0)
must be active.
"^DD",727.829,727.829,26,"DT")
3060829
"^DD",727.829,727.829,27,0)
PRODUCTION DIVISION CODE^F^^0;28^K:$L(X)>6!($L(X)<3) X
"^DD",727.829,727.829,27,3)
Answer must be 3-6 characters in length.
"^DD",727.829,727.829,27,21,0)
^.001^2^2^3060719^^^^
"^DD",727.829,727.829,27,21,1,0)
Data represents the medical center division the work was performed in. 
"^DD",727.829,727.829,27,21,2,0)
This field corresponds to an entry in the INSTITUTION file (#4).
"^DD",727.829,727.829,27,23,0)
^^3^3^3060719^
"^DD",727.829,727.829,27,23,1,0)
Data comes from the DIV field (#26) of subfile (#68.02). Subfile (#68.02)
"^DD",727.829,727.829,27,23,2,0)
is the ACCESSION NUMBER field (#1) in subfile (#68.01). Subfile (#68.01)
"^DD",727.829,727.829,27,23,3,0)
is the DATE field (#2) in the ACCESSION file (#68).
"^DD",727.829,727.829,27,"DT")
3060524
"^DD",727.832,727.832,0)
FIELD^^58^58
"^DD",727.832,727.832,0,"DDA")
N
"^DD",727.832,727.832,0,"DT")
3060705
"^DD",727.832,727.832,0,"IX","AC",727.832,2)

"^DD",727.832,727.832,0,"IX","B",727.832,.01)

"^DD",727.832,727.832,0,"NM","NUTRITION EXTRACT")

"^DD",727.832,727.832,.01,0)
SEQUENCE NUMBER^RNJ9,0^^0;1^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",727.832,727.832,.01,1,0)
^.1
"^DD",727.832,727.832,.01,1,1,0)
727.832^B
"^DD",727.832,727.832,.01,1,1,1)
S ^ECX(727.832,"B",$E(X,1,30),DA)=""
"^DD",727.832,727.832,.01,1,1,2)
K ^ECX(727.832,"B",$E(X,1,30),DA)
"^DD",727.832,727.832,.01,3)
Type a Number between 1 and 999999999, 0 Decimal Digits
"^DD",727.832,727.832,.01,21,0)
^.001^2^2^3060721^^^^
"^DD",727.832,727.832,.01,21,1,0)
The Record Number for this extract entry. Included in the Header for the
"^DD",727.832,727.832,.01,21,2,0)
extract. The file is DINUMed on this field.
"^DD",727.832,727.832,.01,23,0)
^.001^1^1^3060721^^^^
"^DD",727.832,727.832,.01,23,1,0)
The Internal Entry Number (IEN) for this record.  The entry is DINUMed.
"^DD",727.832,727.832,.01,"DT")
3060705
"^DD",727.832,727.832,1,0)
YEAR MONTH^F^^0;2^K:$L(X)>6!($L(X)<6) X
"^DD",727.832,727.832,1,3)
Answer must be 6 characters in length.
"^DD",727.832,727.832,1,21,0)
^.001^2^2^3060721^^^
"^DD",727.832,727.832,1,21,1,0)
A six character numeric string representing the year and the month for
"^DD",727.832,727.832,1,21,2,0)
which this extract was performed.
"^DD",727.832,727.832,1,23,0)
^.001^1^1^3060721^^
"^DD",727.832,727.832,1,23,1,0)
Format is YYYYMM.
"^DD",727.832,727.832,1,"DT")
3060308
"^DD",727.832,727.832,2,0)
EXTRACT NUMBER^RP727'^ECX(727,^0;3^Q
"^DD",727.832,727.832,2,1,0)
^.1
"^DD",727.832,727.832,2,1,1,0)
727.832^AC
"^DD",727.832,727.832,2,1,1,1)
S ^ECX(727.832,"AC",$E(X,1,30),DA)=""
"^DD",727.832,727.832,2,1,1,2)
K ^ECX(727.832,"AC",$E(X,1,30),DA)
"^DD",727.832,727.832,2,1,1,"DT")
3060816
"^DD",727.832,727.832,2,21,0)
^^2^2^3060711^
"^DD",727.832,727.832,2,21,1,0)
The corresponding entry in the DSS EXTRACT LOG file (#727) for this
"^DD",727.832,727.832,2,21,2,0)
extract.
"^DD",727.832,727.832,2,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,2,23,1,0)
A pointer to the DSS EXTRACT LOG file (#727). The primary purpose is to
"^DD",727.832,727.832,2,23,2,0)
pick up the header for the mail message.
"^DD",727.832,727.832,2,"DT")
3060816
"^DD",727.832,727.832,3,0)
FACILITY^RF^^0;4^K:$L(X)>7!($L(X)<1) X
"^DD",727.832,727.832,3,3)
Answer must be 1-7 characters in length.
"^DD",727.832,727.832,3,21,0)
^.001^1^1^3060721^^^
"^DD",727.832,727.832,3,21,1,0)
Identifies the facility for this extract record.
"^DD",727.832,727.832,3,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,3,23,1,0)
An indicator of the division where this event happened. Using the NAME
"^DD",727.832,727.832,3,23,2,0)
field (.01) pointer from the DSS EXTRACTS file (#728), FACILITY is derived
"^DD",727.832,727.832,3,23,3,0)
from the STATION NUMBER field (#99) for that pointer number in the
"^DD",727.832,727.832,3,23,4,0)
INSTITUTION file (#4).
"^DD",727.832,727.832,3,"DT")
3060308
"^DD",727.832,727.832,4,0)
PATIENT NO. - DFN^RP2'^DPT(^0;5^Q
"^DD",727.832,727.832,4,21,0)
^.001^1^1^3060711^^^
"^DD",727.832,727.832,4,21,1,0)
An identifying number for the patient at the local site.
"^DD",727.832,727.832,4,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,4,23,1,0)
Derived from the PATIENT field (#.01) in the NUTRITION PERSON file (#115).
"^DD",727.832,727.832,4,23,2,0)
PATIENT NO. - DFN/IEN is a pointer to the NAME field (.01) of the PATIENT
"^DD",727.832,727.832,4,23,3,0)
file (#2) or a pointer to the NEW PERSON file (#200). This data represents
"^DD",727.832,727.832,4,23,4,0)
the patient DFN or the new person file's IEN.
"^DD",727.832,727.832,4,"DT")
3060308
"^DD",727.832,727.832,5,0)
SSN^F^^0;6^K:$L(X)>10!($L(X)<9) X
"^DD",727.832,727.832,5,3)
Answer must be 9-10 characters in length.
"^DD",727.832,727.832,5,21,0)
^^4^4^3060711^
"^DD",727.832,727.832,5,21,1,0)
The patient's social security number.
"^DD",727.832,727.832,5,21,2,0)
 
"^DD",727.832,727.832,5,21,3,0)
Any patient with an SSN beginning with "00000" is considered a "test
"^DD",727.832,727.832,5,21,4,0)
patient" and will not be included in the extract.
"^DD",727.832,727.832,5,23,0)
^.001^6^6^3060721^^
"^DD",727.832,727.832,5,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.832,727.832,5,23,2,0)
in the NUTRITION EXTRACT file (#727.832), SSN data is derived from the
"^DD",727.832,727.832,5,23,3,0)
SOCIAL SECURITY NUMBER field (.09) in the PATIENT file (#2).
"^DD",727.832,727.832,5,23,4,0)
 
"^DD",727.832,727.832,5,23,5,0)
"Test" patient status is determined in PAT^ECXUTL3.  Any patient with an
"^DD",727.832,727.832,5,23,6,0)
SSN beginning with "00000" will not be included in the extract.
"^DD",727.832,727.832,5,"DT")
3060308
"^DD",727.832,727.832,6,0)
NAME^F^^0;7^K:$L(X)>4!($L(X)<4) X
"^DD",727.832,727.832,6,3)
Answer must be 4 characters in length.
"^DD",727.832,727.832,6,21,0)
^.001^1^1^3060711^^^
"^DD",727.832,727.832,6,21,1,0)
The first four characters of the patient's last name.
"^DD",727.832,727.832,6,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,6,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.832,727.832,6,23,2,0)
in the NUTRITION EXTRACT file (#727.832), NAME data is derived from the
"^DD",727.832,727.832,6,23,3,0)
NAME field (.01) in the PATIENT file (#2). The first four characters of
"^DD",727.832,727.832,6,23,4,0)
the first "," piece are used, padded with trailing spaces if necessary.
"^DD",727.832,727.832,6,"DT")
3060308
"^DD",727.832,727.832,7,0)
IN/OUT PATIENT INDICATOR^F^^0;8^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,7,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,7,21,0)
^.001^2^2^3060711^^^^
"^DD",727.832,727.832,7,21,1,0)
Indicates whether the patient was an inpatient or an outpatient for this
"^DD",727.832,727.832,7,21,2,0)
extract entry.
"^DD",727.832,727.832,7,23,0)
^^6^6^3060721^
"^DD",727.832,727.832,7,23,1,0)
Using the date and patient's DFN a call is made to IN5^VADPT 
"^DD",727.832,727.832,7,23,2,0)
registration's API to determine if the patient was an inpatient on the 
"^DD",727.832,727.832,7,23,3,0)
date the meal was provided.
"^DD",727.832,727.832,7,23,4,0)
 
"^DD",727.832,727.832,7,23,5,0)
"O" = Outpatient 
"^DD",727.832,727.832,7,23,6,0)
"I" = Inpatient
"^DD",727.832,727.832,7,"DT")
3060308
"^DD",727.832,727.832,8,0)
DAY^F^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.832,727.832,8,3)
Answer must be 8 characters in length.
"^DD",727.832,727.832,8,21,0)
^^2^2^3060721^
"^DD",727.832,727.832,8,21,1,0)
This 8-character string represents the date on which the service was
"^DD",727.832,727.832,8,21,2,0)
provided.
"^DD",727.832,727.832,8,23,0)
^.001^4^4^3060721^^
"^DD",727.832,727.832,8,23,1,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.832,727.832,8,23,2,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined,
"^DD",727.832,727.832,8,23,3,0)
then a default is used.  The default date value is the value of the YEAR
"^DD",727.832,727.832,8,23,4,0)
MONTH field (#1) concatenated with "01" for the day (DD) portion. 
"^DD",727.832,727.832,8,"DT")
3060308
"^DD",727.832,727.832,9,0)
TIME^F^^0;10^K:$L(X)>6!($L(X)<6) X
"^DD",727.832,727.832,9,3)
Answer must be 6 characters in length.
"^DD",727.832,727.832,9,21,0)
^^1^1^3060721^
"^DD",727.832,727.832,9,21,1,0)
Time the service was provided (6-digit military time).
"^DD",727.832,727.832,9,23,0)
^.001^2^2^3060721^^
"^DD",727.832,727.832,9,23,1,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.832,727.832,9,23,2,0)
cannot be determined, then "000300" is used as default.
"^DD",727.832,727.832,9,"DT")
3060308
"^DD",727.832,727.832,10,0)
TREATING SPECIALTY^P42.4'^DIC(42.4,^0;11^Q
"^DD",727.832,727.832,10,3)

"^DD",727.832,727.832,10,21,0)
^^2^2^3060721^
"^DD",727.832,727.832,10,21,1,0)
The name of the treating specialty associated with this extract record 
"^DD",727.832,727.832,10,21,2,0)
form the SPECIALTY file (#42.4).
"^DD",727.832,727.832,10,23,0)
^.001^6^6^3060721^^
"^DD",727.832,727.832,10,23,1,0)
This field is initialized to a null, indicating an outpatient status. If a
"^DD",727.832,727.832,10,23,2,0)
call to IN5^VADPT (using the patient IEN and the event date) returns a
"^DD",727.832,727.832,10,23,3,0)
patient movement number (indicating inpatient status), then the value of
"^DD",727.832,727.832,10,23,4,0)
VAIP(8), which is the pointer to the FACILITY TREATING SPECIALTY file
"^DD",727.832,727.832,10,23,5,0)
(#45.7), is used to get the SPECIALTY field (1) which points to the
"^DD",727.832,727.832,10,23,6,0)
SPECIALTY file (#42.4). 
"^DD",727.832,727.832,10,"DT")
3060504
"^DD",727.832,727.832,11,0)
ORDERING PROVIDER^F^^0;12^K:$L(X)>11!($L(X)<2) X
"^DD",727.832,727.832,11,3)
Answer must be 2-11 characters in length.
"^DD",727.832,727.832,11,21,0)
^^2^2^3060721^
"^DD",727.832,727.832,11,21,1,0)
The IEN for the New Person file (#200) for the provider that ordered the
"^DD",727.832,727.832,11,21,2,0)
diet for the patient preceded by a 2.
"^DD",727.832,727.832,11,23,0)
^.001^13^13^3060721^^
"^DD",727.832,727.832,11,23,1,0)
Inpatient diets, inpatient supplemental feedings and inpatient tube 
"^DD",727.832,727.832,11,23,2,0)
feedings use the entry number for the Order file (#100) and use it to
"^DD",727.832,727.832,11,23,3,0)
retrieve CURRENT AGENT/PROVIDER field (#1) which is a pointer to the NEW 
"^DD",727.832,727.832,11,23,4,0)
PERSON file (#200) and prefix it with a '2'.
"^DD",727.832,727.832,11,23,5,0)
 
"^DD",727.832,727.832,11,23,6,0)
inpatient standing orders have no ordering provider.
"^DD",727.832,727.832,11,23,7,0)
 
"^DD",727.832,727.832,11,23,8,0)
Outpatient recurring meals use the entry number for Order file (#100) and 
"^DD",727.832,727.832,11,23,9,0)
use it to retrieve CURRENT AGENT/PROVIDER field (#1) which is a 
"^DD",727.832,727.832,11,23,10,0)
pointer to the NEW PERSON file (#200) and prefix it with a '2'.
"^DD",727.832,727.832,11,23,11,0)
 
"^DD",727.832,727.832,11,23,12,0)
Outpatient tube feedings, outpatient special meals and outpatient guest 
"^DD",727.832,727.832,11,23,13,0)
meals have no ordering provider.
"^DD",727.832,727.832,11,"DT")
3060504
"^DD",727.832,727.832,12,0)
ORDERING PROVIDER PERSON CLASS^F^^0;13^K:$L(X)>7!($L(X)<7) X
"^DD",727.832,727.832,12,3)
Answer must be 7 characters in length.
"^DD",727.832,727.832,12,21,0)
^.001^3^3^3060711^^^^
"^DD",727.832,727.832,12,21,1,0)
VA Code of the Person Class of the patient's Ordering Provider. The VA 
"^DD",727.832,727.832,12,21,2,0)
Code is always of the form "V  + six numeric digits. In DSS this is 
"^DD",727.832,727.832,12,21,3,0)
called Provider Type.
"^DD",727.832,727.832,12,23,0)
^.001^2^2^3060721^^^
"^DD",727.832,727.832,12,23,1,0)
Provider Person Class is derived from the New Person File (#200), field
"^DD",727.832,727.832,12,23,2,0)
(#5) from Person Class file (#8932.1) using GET^XUA4A72 Kernel's API.
"^DD",727.832,727.832,12,"DT")
3060504
"^DD",727.832,727.832,13,0)
PRIMARY CARE PROVIDER^F^^0;14^K:$L(X)>11!($L(X)<2) X
"^DD",727.832,727.832,13,3)
Answer must be 2-11 characters in length.
"^DD",727.832,727.832,13,21,0)
^.001^1^1^3060721^^^
"^DD",727.832,727.832,13,21,1,0)
The primary care provider assigned to this patient.
"^DD",727.832,727.832,13,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,13,23,1,0)
Using the patient's DFN and the date of service a call is made to the 
"^DD",727.832,727.832,13,23,2,0)
OUTPTPR^SDUTL3 API to retrieve the primary care team provider. The API 
"^DD",727.832,727.832,13,23,3,0)
returns the IEN for the NEW PERSON file (#200) and the IEN is prefixed 
"^DD",727.832,727.832,13,23,4,0)
with a '2'.
"^DD",727.832,727.832,13,"DT")
3060504
"^DD",727.832,727.832,14,0)
PRIMARY CARE PRV PERSON CLASS^F^^0;15^K:$L(X)>7!($L(X)<7) X
"^DD",727.832,727.832,14,3)
Answer must be 7 characters in length.
"^DD",727.832,727.832,14,21,0)
^.001^3^3^3060710^^^
"^DD",727.832,727.832,14,21,1,0)
VA Code of the Person Class of the patient s Primary Care Provider. The 
"^DD",727.832,727.832,14,21,2,0)
VA Code is always of the form "V  + six numeric digits. In DSS this is 
"^DD",727.832,727.832,14,21,3,0)
called Provider Type.
"^DD",727.832,727.832,14,23,0)
^^2^2^3060721^
"^DD",727.832,727.832,14,23,1,0)
Provider Person Class is derived from the New Person File (#200), field
"^DD",727.832,727.832,14,23,2,0)
(#5) from Person Class file (#8932.1) using GET^XUA4A72 Kernel's API.
"^DD",727.832,727.832,14,"DT")
3060504
"^DD",727.832,727.832,15,0)
PRIMARY CARE TEAM^F^^0;16^K:$L(X)>4!($L(X)<1) X
"^DD",727.832,727.832,15,3)
Answer must be 1-4 characters in length.
"^DD",727.832,727.832,15,21,0)
^.001^1^1^3060711^^^^
"^DD",727.832,727.832,15,21,1,0)
The primary care team assigned to this patient - TEAM file (#404.51)
"^DD",727.832,727.832,15,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,15,23,1,0)
Using the patient's IEN from file (#2) and the date of encounter a call is
"^DD",727.832,727.832,15,23,2,0)
made to the Scheduling API, OUTPTTM^SDUTL3. The API returns the team's
"^DD",727.832,727.832,15,23,3,0)
internal entry number and name from the TEAM file (#404.51). Only the
"^DD",727.832,727.832,15,23,4,0)
pointer (IEN) to File (#404.51) is transmitted.
"^DD",727.832,727.832,15,"DT")
3060504
"^DD",727.832,727.832,16,0)
MASTER PATIENT INDEX^F^^0;17^K:$L(X)>10!($L(X)<10) X
"^DD",727.832,727.832,16,3)
Answer must be 10 characters in length.
"^DD",727.832,727.832,16,21,0)
^.001^1^1^3060711^^^^
"^DD",727.832,727.832,16,21,1,0)
A national VA system identifier that uniquely identifies a patient.
"^DD",727.832,727.832,16,23,0)
^^2^2^3060721^
"^DD",727.832,727.832,16,23,1,0)
Using the patient'e IEN for the patient file (#2) a call is made to the 
"^DD",727.832,727.832,16,23,2,0)
GETICN^MPIF001 API to retrieve the patient's ICN.
"^DD",727.832,727.832,16,"DT")
3060504
"^DD",727.832,727.832,17,0)
DATE OF BIRTH^F^^0;18^K:$L(X)>8!($L(X)<1) X
"^DD",727.832,727.832,17,3)
Answer must be 1-8 characters in length.
"^DD",727.832,727.832,17,21,0)
^.001^1^1^3060711^^^
"^DD",727.832,727.832,17,21,1,0)
Patient's date of birth.
"^DD",727.832,727.832,17,23,0)
^^6^6^3060721^
"^DD",727.832,727.832,17,23,1,0)
NUTRITION PATIENT file (#115); NAME field (#.01) then to PATIENT file
"^DD",727.832,727.832,17,23,2,0)
(#2); DATE OF BIRTH field (#.03)
"^DD",727.832,727.832,17,23,3,0)
 
"^DD",727.832,727.832,17,23,4,0)
If Date of Birth cannot be determined, then January 1, 1942, is used as
"^DD",727.832,727.832,17,23,5,0)
default.  The data element is always exactly 8 numberic characters in
"^DD",727.832,727.832,17,23,6,0)
length.  Format is YYYYMMDD.
"^DD",727.832,727.832,17,"DT")
3060504
"^DD",727.832,727.832,18,0)
SEX^S^M:MALE;F:FEMALE;^0;19^Q
"^DD",727.832,727.832,18,21,0)
^.001^1^1^3060711^^^
"^DD",727.832,727.832,18,21,1,0)
M for Male; F for Female
"^DD",727.832,727.832,18,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,18,23,1,0)
Data is taken from the SEX field (#.02) of the patient's record in the
"^DD",727.832,727.832,18,23,2,0)
PATIENT file (#2).
"^DD",727.832,727.832,18,"DT")
3060504
"^DD",727.832,727.832,19,0)
RACE 1^F^^0;20^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,19,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,19,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,19,21,1,0)
The patient's PTF Race code(s).
"^DD",727.832,727.832,19,23,0)
^.001^10^10^3060711^^
"^DD",727.832,727.832,19,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.832,727.832,19,23,2,0)
RACE 1 is derived from the PTF VALUE field (#5) of the RACE file (#10)
"^DD",727.832,727.832,19,23,3,0)
pointed to by the RACE INFORMATION field (#.01) of the RACE INFORMATION
"^DD",727.832,727.832,19,23,4,0)
subfile (#2.02) of the PATIENT file (#2).
"^DD",727.832,727.832,19,23,5,0)
 
"^DD",727.832,727.832,19,23,6,0)
Only those RACE INFORMATION values in the RACE INFORMATION subfile (#2.03)
"^DD",727.832,727.832,19,23,7,0)
where the METHOD OF COLLECTION field (#.02) set to 1
"^DD",727.832,727.832,19,23,8,0)
(SELF-IDENTIFICATION), will be include in the RACE 1 field.  If any of the
"^DD",727.832,727.832,19,23,9,0)
RACE INFORMATION values returned is "C" (DECLINED TO ANSWER), that will be
"^DD",727.832,727.832,19,23,10,0)
the only value included in the RACE1 field.
"^DD",727.832,727.832,19,"DT")
3060504
"^DD",727.832,727.832,20,0)
ETHNICITY^F^^0;21^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,20,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,20,21,0)
^^6^6^3060711^
"^DD",727.832,727.832,20,21,1,0)
Indicates the patient s Ethnicity. Possible  values are:
"^DD",727.832,727.832,20,21,2,0)
                                                                      
"^DD",727.832,727.832,20,21,3,0)
D = Declined to Answer
"^DD",727.832,727.832,20,21,4,0)
H = Hispanic or Latino
"^DD",727.832,727.832,20,21,5,0)
N = Not Hispanic or Latino
"^DD",727.832,727.832,20,21,6,0)
U = Unknown by Patient"
"^DD",727.832,727.832,20,23,0)
^^8^8^3060711^
"^DD",727.832,727.832,20,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field
"^DD",727.832,727.832,20,23,2,0)
(#4), ETHNICITY is derived from the PTF VALUE field (#5) of the ETHNICITY
"^DD",727.832,727.832,20,23,3,0)
file (#10.2) pointed to by the ETHNICITY INFORMATION field (#.01) of the
"^DD",727.832,727.832,20,23,4,0)
ETHNICITY INFORMATION subfile (#2.06) of the PATIENT file (#2).
"^DD",727.832,727.832,20,23,5,0)
                                 
"^DD",727.832,727.832,20,23,6,0)
The above will occur only if the METHOD OF COLLECTION field (#.02) of the
"^DD",727.832,727.832,20,23,7,0)
ETHNICITY INFORMATION subfile (#2.06) is set to 1 (SELF-IDENTIFICATION),
"^DD",727.832,727.832,20,23,8,0)
otherwise ETHNICITY with be set to null.
"^DD",727.832,727.832,20,"DT")
3060504
"^DD",727.832,727.832,21,0)
VETERAN^S^N:NO;Y:YES;^0;22^Q
"^DD",727.832,727.832,21,21,0)
^.001^1^1^3060711^^
"^DD",727.832,727.832,21,21,1,0)
Veteran Status  -  'Y' or 'N'
"^DD",727.832,727.832,21,23,0)
^^3^3^3060721^
"^DD",727.832,727.832,21,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.832,727.832,21,23,2,0)
in the NUTRITION EXTRACT file (#727.832), VETERAN data is derived from the
"^DD",727.832,727.832,21,23,3,0)
VETERAN (Y/N)? field (1901) in the PATIENT file (#2).
"^DD",727.832,727.832,21,"DT")
3060504
"^DD",727.832,727.832,22,0)
ENROLLMENT STATUS^F^^0;23^K:$L(X)>2!($L(X)<1) X
"^DD",727.832,727.832,22,3)
Answer must be 1-2 characters in length.
"^DD",727.832,727.832,22,21,0)
^.001^1^1^3060711^^
"^DD",727.832,727.832,22,21,1,0)
Derived from the Patient Enrollment file (#27.11)
"^DD",727.832,727.832,22,23,0)
^^3^3^3060721^
"^DD",727.832,727.832,22,23,1,0)
Using the patient's DFN call the UESTAT^EASUER enrollment status API and 
"^DD",727.832,727.832,22,23,2,0)
check the USER ENROLLEE VALID THROUGH field (#.3617) to determine is the 
"^DD",727.832,727.832,22,23,3,0)
patient enro0llment status is current.
"^DD",727.832,727.832,22,"DT")
3060504
"^DD",727.832,727.832,23,0)
ENROLLMENT LOCATION^F^^0;24^K:$L(X)>7!($L(X)<1) X
"^DD",727.832,727.832,23,3)
Answer must be 1-7 characters in length.
"^DD",727.832,727.832,23,21,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,23,21,1,0)
The facility that the patient chooses to designate as his preferred 
"^DD",727.832,727.832,23,21,2,0)
location for care.
"^DD",727.832,727.832,23,23,0)
^^5^5^3060721^
"^DD",727.832,727.832,23,23,1,0)
The PREFERRED FACILITY field (#27.02) of the PATIENT file (#2) is defined
"^DD",727.832,727.832,23,23,2,0)
as the facility that the patient chooses to designate as his preferred
"^DD",727.832,727.832,23,23,3,0)
location for care.  The PREFERRED FACILITY field (# 27.02) is a pointer to
"^DD",727.832,727.832,23,23,4,0)
the INSTITUTION file (#4).  From file (#4), the value in the STATION
"^DD",727.832,727.832,23,23,5,0)
NUMBER field (#99) is used.
"^DD",727.832,727.832,23,"DT")
3060504
"^DD",727.832,727.832,24,0)
ENROLLMENT CATEGORY^F^^0;25^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,24,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,24,21,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,24,21,1,0)
Patient's enrollment category which is derived from the Patient 
"^DD",727.832,727.832,24,21,2,0)
Enrollment file (#27.11)
"^DD",727.832,727.832,24,23,0)
^^4^4^3060711^
"^DD",727.832,727.832,24,23,1,0)
Using the patient's IEN form the PATIENT file (#2) call STATUS^DGENA 
"^DD",727.832,727.832,24,23,2,0)
Registration's API and retrieve the ENROLLMENT CTAEGORY field (#.02)
"^DD",727.832,727.832,24,23,3,0)
associated with the current enrollment status from the ENROLLMENT 
"^DD",727.832,727.832,24,23,4,0)
STATUS file (#27.15).
"^DD",727.832,727.832,24,"DT")
3060504
"^DD",727.832,727.832,25,0)
ENROLLMENT PRIORITY^F^^0;26^K:$L(X)>2!($L(X)<1) X
"^DD",727.832,727.832,25,3)
Answer must be 1-2 characters in length.
"^DD",727.832,727.832,25,21,0)
^^2^2^3060721^
"^DD",727.832,727.832,25,21,1,0)
ENROLLMENT PRIORITY field contains the enrollment piority group and the 
"^DD",727.832,727.832,25,21,2,0)
enrollment priority subgroup from the Patient Enrollment file (#27.11).
"^DD",727.832,727.832,25,23,0)
^^20^20^3060721^
"^DD",727.832,727.832,25,23,1,0)
ENROLLMENT PRIORITY field contains the enrollment priority group and the 
"^DD",727.832,727.832,25,23,2,0)
enrollment priority subgroup from the Patient Enrollment file (#27.11). 
"^DD",727.832,727.832,25,23,3,0)
 
"^DD",727.832,727.832,25,23,4,0)
ENROLLMENT PRIORITY Groups determined for a patient enrollment include:
"^DD",727.832,727.832,25,23,5,0)
 
"^DD",727.832,727.832,25,23,6,0)
                                '1' FOR GROUP 1 
"^DD",727.832,727.832,25,23,7,0)
                                '2' FOR GROUP 2 
"^DD",727.832,727.832,25,23,8,0)
                                '3' FOR GROUP 3 
"^DD",727.832,727.832,25,23,9,0)
                                '4' FOR GROUP 4 
"^DD",727.832,727.832,25,23,10,0)
                                '5' FOR GROUP 5 
"^DD",727.832,727.832,25,23,11,0)
                                '6' FOR GROUP 6 
"^DD",727.832,727.832,25,23,12,0)
                                '7' FOR GROUP 7 
"^DD",727.832,727.832,25,23,13,0)
                                '8' FOR GROUP 8 
"^DD",727.832,727.832,25,23,14,0)
 
"^DD",727.832,727.832,25,23,15,0)
ENROLLMENT PRIORITY Subgroups determined for a patient enrollment include:
"^DD",727.832,727.832,25,23,16,0)
 
"^DD",727.832,727.832,25,23,17,0)
                                'a' FOR 1 
"^DD",727.832,727.832,25,23,18,0)
                                'c' FOR 3 
"^DD",727.832,727.832,25,23,19,0)
                                'e' FOR 5 
"^DD",727.832,727.832,25,23,20,0)
                                'g' FOR 7   
"^DD",727.832,727.832,25,"DT")
3060504
"^DD",727.832,727.832,26,0)
ELIGIBILITY^F^^0;27^K:$L(X)>3!($L(X)<3) X
"^DD",727.832,727.832,26,3)
Answer must be 3 characters in length.
"^DD",727.832,727.832,26,21,0)
^^2^2^3060721^
"^DD",727.832,727.832,26,21,1,0)
Patient's Primary Eligibility converted to NPCD eligibility code; 
"^DD",727.832,727.832,26,21,2,0)
Eligibility code is based on veteran or non-veteran status.
"^DD",727.832,727.832,26,23,0)
^^11^11^3060721^
"^DD",727.832,727.832,26,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4)
"^DD",727.832,727.832,26,23,2,0)
in the NUTRITION EXTRACT file (#727.832), ELIGIBILITY data is derived from
"^DD",727.832,727.832,26,23,3,0)
the PRIMARY ELIGIBILITY CODE field (.361) in the PATIENT file (#2). 
"^DD",727.832,727.832,26,23,4,0)
PRIMARY ELIGIBILITY CODE is a pointer to the ELIGIBILITY CODE file (#8). 
"^DD",727.832,727.832,26,23,5,0)
The data is derived from the MAS ELIGIBILITY CODE field (8) in the 
"^DD",727.832,727.832,26,23,6,0)
ELIGIBILITY CODE file (#8) which in turn is a pointer to the MAS 
"^DD",727.832,727.832,26,23,7,0)
ELIGIBILITY CODE file (#8.1). 
"^DD",727.832,727.832,26,23,8,0)
 
"^DD",727.832,727.832,26,23,9,0)
The pointer value to file #8.1 is converted by ELIG^ECXUTL3 to the
"^DD",727.832,727.832,26,23,10,0)
corresponding eligibility code used by NPCD.  This code is composed of
"^DD",727.832,727.832,26,23,11,0)
two or three numeric characters.
"^DD",727.832,727.832,26,"DT")
3060504
"^DD",727.832,727.832,27,0)
PERIOD OF SERVICE^F^^0;28^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,27,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,27,21,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,27,21,1,0)
The period of service, which best classifies this patient based on 
"^DD",727.832,727.832,27,21,2,0)
eligibility code.
"^DD",727.832,727.832,27,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,27,23,1,0)
Period of Service is derived from the Period of Service field (#.323) in
"^DD",727.832,727.832,27,23,2,0)
the Patient file (#2).
"^DD",727.832,727.832,27,"DT")
3060504
"^DD",727.832,727.832,28,0)
AGENT ORANGE STATUS^S^N:NO;Y:YES;U:UNKNOWN;^0;29^Q
"^DD",727.832,727.832,28,21,0)
^.001^1^1^3060711^^
"^DD",727.832,727.832,28,21,1,0)
Agent Orange Exposure? Y/N/U
"^DD",727.832,727.832,28,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,28,23,1,0)
PATIENT file (#2); AGENT ORANGE EXPOS. INDICATED? field (#.32102).  The
"^DD",727.832,727.832,28,23,2,0)
status indicator is returned by SVC^VADPT.
"^DD",727.832,727.832,28,"DT")
3060504
"^DD",727.832,727.832,29,0)
AGENT ORANGE LOCATION^F^^0;30^K:$L(X)>2!($L(X)<2) X
"^DD",727.832,727.832,29,3)
Answer must be 2 characters in length.
"^DD",727.832,727.832,29,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,29,21,1,0)
This field contains the Agent Orange exposure location.
"^DD",727.832,727.832,29,23,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,29,23,1,0)
Using the Patient Pointer (DFN), AGENT ORANGE LOCATION is derived from 
"^DD",727.832,727.832,29,23,2,0)
the AGENT ORANGE EXPOSURE LOCATION field (.3213) of the PATIENT FILE (#2).
"^DD",727.832,727.832,29,"DT")
3060504
"^DD",727.832,727.832,30,0)
RADIATION STATUS^S^N:NO;Y:YES;^0;31^Q
"^DD",727.832,727.832,30,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,30,21,1,0)
The patient's Ionizing Radiation status. (Y/N/U)
"^DD",727.832,727.832,30,23,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,30,23,1,0)
PATIENT file (#2); RADIATION EXPOSURE INDICATED? field (#.32103).  The
"^DD",727.832,727.832,30,23,2,0)
status indicator is returned by SVC^VADPT.
"^DD",727.832,727.832,30,"DT")
3060504
"^DD",727.832,727.832,31,0)
ENVIRONMENTAL CONTAMINANTS^S^Y:YES;N:NO;U:UNKNOWN;^0;32^Q
"^DD",727.832,727.832,31,21,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,31,21,1,0)
This field indicates if the patient claims exposure to environmental 
"^DD",727.832,727.832,31,21,2,0)
contaminants while serving in the Persian Gulf or Somalia.
"^DD",727.832,727.832,31,23,0)
^^8^8^3060711^
"^DD",727.832,727.832,31,23,1,0)
This field is derived from the ENVIRONMENTAL CONTAMINANTS field (#.322013)
"^DD",727.832,727.832,31,23,2,0)
in the Patient File (#2) using the patient's DFN. The status indicator is
"^DD",727.832,727.832,31,23,3,0)
returned by SVC^VADPT. The SVC^VADPT called is made from routine
"^DD",727.832,727.832,31,23,4,0)
PAT^ECXUTL3. The field values are: 
"^DD",727.832,727.832,31,23,5,0)
 
"^DD",727.832,727.832,31,23,6,0)
  Y = YES 
"^DD",727.832,727.832,31,23,7,0)
  N = NO 
"^DD",727.832,727.832,31,23,8,0)
  U = UNKNOWN
"^DD",727.832,727.832,31,"DT")
3060504
"^DD",727.832,727.832,32,0)
MST STATUS^S^N:NO;Y:YES;U:UNKNOWN;D:DENIED;^0;33^Q
"^DD",727.832,727.832,32,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,32,21,1,0)
Military sexual trauma? (Y/N/U/D)
"^DD",727.832,727.832,32,23,0)
^^4^4^3060711^
"^DD",727.832,727.832,32,23,1,0)
The MST HISTORY file (#29.11) holds data regarding military sexual trauma
"^DD",727.832,727.832,32,23,2,0)
claims and effective dates.  The patients MST status is stored in the MST
"^DD",727.832,727.832,32,23,3,0)
STATUS field (#3).  A call will be made to $$GETSTAT^DGMSTAPI(DFN,DGDATE)
"^DD",727.832,727.832,32,23,4,0)
using the DFN in the PATIENT NO.  DFN field and the date in the DAY field.
"^DD",727.832,727.832,32,"DT")
3060504
"^DD",727.832,727.832,33,0)
HEAD & NECK CANCER INDICATOR^S^Y:YES;N:NO;^0;34^Q
"^DD",727.832,727.832,33,21,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,33,21,1,0)
Identifies whether treatment is for Head and/or Neck Cancer. Values are 
"^DD",727.832,727.832,33,21,2,0)
"Y  = Yes, the treatment is for Head/Neck Cancer or "N  = No, treatment 
"^DD",727.832,727.832,33,21,3,0)
is not related to Head/Neck cancer.
"^DD",727.832,727.832,33,23,0)
^^3^3^3060711^
"^DD",727.832,727.832,33,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (4),
"^DD",727.832,727.832,33,23,2,0)
a call is made to $$GETCUR^DGNTAPI to retrieve the HEAD/NECK CA DX field
"^DD",727.832,727.832,33,23,3,0)
(#2.01) of the NOSE AND THROAT RADIUM HISTORY file (#28.11).
"^DD",727.832,727.832,33,"DT")
3060504
"^DD",727.832,727.832,34,0)
POW STATUS^S^N:NO;Y:YES;^0;35^Q
"^DD",727.832,727.832,34,21,0)
^.001^1^1^3060711^^^^
"^DD",727.832,727.832,34,21,1,0)
Indicates if patient was confined as a Prisoner of War 
"^DD",727.832,727.832,34,23,0)
^.001^2^2^3060711^^
"^DD",727.832,727.832,34,23,1,0)
PATIENT file (#2); POW STATUS INDICATED? field (#.525).  The status
"^DD",727.832,727.832,34,23,2,0)
indicator is returned by SVC^VADPT.
"^DD",727.832,727.832,34,"DT")
3060504
"^DD",727.832,727.832,35,0)
POW LOCATION^F^^0;36^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,35,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,35,21,0)
^.001^2^2^3060711^^^
"^DD",727.832,727.832,35,21,1,0)
If POW Status is indicated, this is the POW confinement location/period. 
"^DD",727.832,727.832,35,21,2,0)
POW PERIOD file (#22)
"^DD",727.832,727.832,35,23,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,35,23,1,0)
PATIENT file (#2); POW CONFINEMENT LOCATION field (#.526).  This is a
"^DD",727.832,727.832,35,23,2,0)
pointer value to the POW PERIOD file (#22).  The location indicator is
"^DD",727.832,727.832,35,23,3,0)
returned by SVC^VADPT.  
"^DD",727.832,727.832,35,"DT")
3060504
"^DD",727.832,727.832,36,0)
PURPLE HEART INDICATOR^S^Y:YES;N:NO;^0;37^Q
"^DD",727.832,727.832,36,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,36,21,1,0)
Indicates whether or not a patient is a Purple Heart recipient.
"^DD",727.832,727.832,36,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,36,23,1,0)
PATIENT file (#2); CURRENT PH INDICATOR field (#.531).The status indicator
"^DD",727.832,727.832,36,23,2,0)
is returned by SVC^VADPT.
"^DD",727.832,727.832,36,"DT")
3060504
"^DD",727.832,727.832,37,0)
MEANS TEST^S^A:CATEGORY A;B:CATEGORY B;C:CATEGORY C;P:PENDING ADJUDICATION;R:REQUIRES MEANS TEST;N:MEANS TEST NOT REQUIRED;E:EXEMPT;I:INCOMPLETE;L:NO LONGER APPLICABLE;M:NON-EXEMPT;^0;38^Q
"^DD",727.832,727.832,37,21,0)
^.001^12^12^3060721^^
"^DD",727.832,727.832,37,21,1,0)
The current means test category for this patient - MEANS TEST STATUS file 
"^DD",727.832,727.832,37,21,2,0)
(#408.32). Values are:
"^DD",727.832,727.832,37,21,3,0)
                                                                                       'A' FOR CATEGORY A;   
"^DD",727.832,727.832,37,21,4,0)
'B' FOR CATEGORY B; 
"^DD",727.832,727.832,37,21,5,0)
'C' FOR CATEGORY C; 
"^DD",727.832,727.832,37,21,6,0)
'P' FOR PENDING ADJUDICATION; 
"^DD",727.832,727.832,37,21,7,0)
'R' FOR REQUIRES MEANS TEST; 
"^DD",727.832,727.832,37,21,8,0)
'N' FOR MEANS TEST NOT REQUIRED; 
"^DD",727.832,727.832,37,21,9,0)
'E' FOR EXEMPT; 
"^DD",727.832,727.832,37,21,10,0)
'I' FOR INCOMPLETE; 
"^DD",727.832,727.832,37,21,11,0)
'L' FOR NO LONGER APPLICABLE; 
"^DD",727.832,727.832,37,21,12,0)
'M' FOR NON-EXEMPT. 
"^DD",727.832,727.832,37,23,0)
^^6^6^3060721^
"^DD",727.832,727.832,37,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field
"^DD",727.832,727.832,37,23,2,0)
(#4) in the NUTRITION EXTRACT FILE (#727.832), MEANS TEST data is derived
"^DD",727.832,727.832,37,23,3,0)
from the CURRENT MEANS TEST STATUS field (#.14) in the PATIENT file
"^DD",727.832,727.832,37,23,4,0)
(#2).  This field is a pointer to the MEANS TEST STATUS file (#408.32).  
"^DD",727.832,727.832,37,23,5,0)
Using the means test pointer, the data is derived from the CODE field
"^DD",727.832,727.832,37,23,6,0)
(#.02) in the MEANS TEST STATUS file (#408.32).
"^DD",727.832,727.832,37,"DT")
3060504
"^DD",727.832,727.832,38,0)
STATE CODE^F^^0;39^K:$L(X)>2!($L(X)<2) X
"^DD",727.832,727.832,38,3)
Answer must be 2 characters in length.
"^DD",727.832,727.832,38,21,0)
^.001^1^1^3060721^^^
"^DD",727.832,727.832,38,21,1,0)
The state in which the patient resides
"^DD",727.832,727.832,38,23,0)
^.001^5^5^3060721^^
"^DD",727.832,727.832,38,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.832,727.832,38,23,2,0)
in the NUTRITION EXTRACT file (#727.832), data is derived from the STATE
"^DD",727.832,727.832,38,23,3,0)
field (#.115) in the PATIENT file (#2) which points to the STATE file
"^DD",727.832,727.832,38,23,4,0)
(#5).  From the STATE file record, use the two character VA STATE CODE
"^DD",727.832,727.832,38,23,5,0)
field (#2).
"^DD",727.832,727.832,38,"DT")
3060504
"^DD",727.832,727.832,39,0)
COUNTY CODE^F^^0;40^K:$L(X)>3!($L(X)<3) X
"^DD",727.832,727.832,39,3)
Answer must be 3 characters in length.
"^DD",727.832,727.832,39,21,0)
^.001^1^1^3060721^^^
"^DD",727.832,727.832,39,21,1,0)
The county in which the patient resides
"^DD",727.832,727.832,39,23,0)
^^9^9^3060721^
"^DD",727.832,727.832,39,23,1,0)
Using the patient pointer (DFN) stored in the PATIENT NO. - DFN field (#4)
"^DD",727.832,727.832,39,23,2,0)
in the NUTRITION EXTRACT file (#727.832), data is taken from the COUNTY
"^DD",727.832,727.832,39,23,3,0)
field (#.117) in the PATIENT file (#2) which points to a subfile record in
"^DD",727.832,727.832,39,23,4,0)
the COUNTY multiple field (#3) of the STATE file (#5).  A pointer to the
"^DD",727.832,727.832,39,23,5,0)
STATE file (#5) is obtained from the STATE field (#.115) of the file (#2)
"^DD",727.832,727.832,39,23,6,0)
record.
"^DD",727.832,727.832,39,23,7,0)
 
"^DD",727.832,727.832,39,23,8,0)
From the subfile record of field (#3) of file (#5), use the value of
"^DD",727.832,727.832,39,23,9,0)
the VA COUNTY CODE field (#2).
"^DD",727.832,727.832,39,"DT")
3060504
"^DD",727.832,727.832,40,0)
ZIP+4^F^^1;1^K:$L(X)>10!($L(X)<5) X
"^DD",727.832,727.832,40,3)
Answer must be 5-10 characters in length.
"^DD",727.832,727.832,40,21,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,40,21,1,0)
Zip+4 is the zip code for the city in which the patient resides using 
"^DD",727.832,727.832,40,21,2,0)
format nnnnn-nnnn. The 5 character zip code is provided if the zip + 4 is 
"^DD",727.832,727.832,40,21,3,0)
not available.
"^DD",727.832,727.832,40,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,40,23,1,0)
The patient's zip code with optional 4-digit extension as found in the
"^DD",727.832,727.832,40,23,2,0)
ZIP+4 field (#.1112) of the patient's record in the PATIENT file (#2).
"^DD",727.832,727.832,40,"DT")
3060504
"^DD",727.832,727.832,41,0)
OBSERVATION PATIENT INDICATOR^F^^1;2^K:$L(X)>4!($L(X)<1) X
"^DD",727.832,727.832,41,3)
Answer must be 1-4 characters in length.
"^DD",727.832,727.832,41,21,0)
^^2^2^3060711^
"^DD",727.832,727.832,41,21,1,0)
This field is derived from the inpatient/outpatient status, treating
"^DD",727.832,727.832,41,21,2,0)
specialty, and DSS Identifier or feeder key values in the record.
"^DD",727.832,727.832,41,"DT")
3060504
"^DD",727.832,727.832,42,0)
RRTP, PRRTP, SAARTP INDICATOR^F^^1;3^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,42,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,42,21,0)
^^4^4^3060711^
"^DD",727.832,727.832,42,21,1,0)
This field contains the RRTP, PRRTP or SAARTP code the patient is admitted
"^DD",727.832,727.832,42,21,2,0)
to at time of service. DOM is not longer used. It has been changed to 
"^DD",727.832,727.832,42,21,3,0)
Residential Rehabilitation Treatment Program (RRTP) at the time the 
"^DD",727.832,727.832,42,21,4,0)
hospital service is provided.
"^DD",727.832,727.832,42,"DT")
3060504
"^DD",727.832,727.832,43,0)
ENCOUNTER NUMBER^F^^1;4^K:$L(X)>18!($L(X)<1) X
"^DD",727.832,727.832,43,3)
Answer must be 1-18 characters in length.
"^DD",727.832,727.832,43,21,0)
^.001^8^8^3060711^^
"^DD",727.832,727.832,43,21,1,0)
The unique number assigned to each encounter within DSS - Inpatient   
"^DD",727.832,727.832,43,21,2,0)
Build inpatient encounter number in standard DSS fashion   SSN + Current 
"^DD",727.832,727.832,43,21,3,0)
Admit Date (YYMMDD)+ "I  (letter I)  Where SSN is from the SSN field (#5) 
"^DD",727.832,727.832,43,21,4,0)
and Admission Date is from the Admission Date field (#58) 
"^DD",727.832,727.832,43,21,5,0)
 
"^DD",727.832,727.832,43,21,6,0)
Outpatient   Concatenate SSN + Date + "NUT  where SSN is from extract 
"^DD",727.832,727.832,43,21,7,0)
field (#5) Where SSN is from the SSN field (#5) and the Date is the 
"^DD",727.832,727.832,43,21,8,0)
5-character Julian value from the DAY field (#8)
"^DD",727.832,727.832,43,"DT")
3060504
"^DD",727.832,727.832,44,0)
PATIENT DIVISION^F^^1;5^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,44,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,44,21,0)
^.001^1^1^3060711^^^
"^DD",727.832,727.832,44,21,1,0)
Division in which patient's bed is located
"^DD",727.832,727.832,44,23,0)
^^5^5^3060721^
"^DD",727.832,727.832,44,23,1,0)
Using the movement record, identify the ward associated with the record 
"^DD",727.832,727.832,44,23,2,0)
and retrieve the facility associated with the ward which is a pointer to
"^DD",727.832,727.832,44,23,3,0)
the Medical Center Division file (#40.8), then use field (#.07) which is a
"^DD",727.832,727.832,44,23,4,0)
pointer to the Institution file (#4). Use the GETDIV^ECXDEPT API and
"^DD",727.832,727.832,44,23,5,0)
retrieve the value from field (#99).
"^DD",727.832,727.832,44,"DT")
3060504
"^DD",727.832,727.832,45,0)
FOOD PRODUCTION DIVISION^F^^1;6^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,45,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,45,21,0)
^^3^3^3060721^
"^DD",727.832,727.832,45,21,1,0)
Division in which the kitchen is located. Take the value in the PRODUCTION
"^DD",727.832,727.832,45,21,2,0)
LOCATION field located on the DSS Nutrition Division Worksheet and return
"^DD",727.832,727.832,45,21,3,0)
the value of the ASSIGNED DIVISION field (#1).
"^DD",727.832,727.832,45,23,0)
^^3^3^3060721^
"^DD",727.832,727.832,45,23,1,0)
Use DSS NUTRITION DIVISION WORKSHEET file (#728.46) and resolve the FOOD 
"^DD",727.832,727.832,45,23,2,0)
PRODUCTION DIVISION by looking for the name using the "B" cross 
"^DD",727.832,727.832,45,23,3,0)
reference. Return the value for ASSIGNED DIVISION field (#1).
"^DD",727.832,727.832,45,"DT")
3060504
"^DD",727.832,727.832,46,0)
DELIVERY DIVISION^F^^1;7^K:$L(X)>6!($L(X)<1) X
"^DD",727.832,727.832,46,3)
Answer must be 1-6 characters in length.
"^DD",727.832,727.832,46,21,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,46,21,1,0)
Division in which the meal was delivered.  Take the value in the DELIVERY 
"^DD",727.832,727.832,46,21,2,0)
LOCATION field located on the DSS Nutrition Division Worksheet and return 
"^DD",727.832,727.832,46,21,3,0)
the value of the Division that is determined there.
"^DD",727.832,727.832,46,23,0)
^^3^3^3060721^
"^DD",727.832,727.832,46,23,1,0)
Using the delivery location go to the DSS NUTRITION DIVISION WORKSHEET  
"^DD",727.832,727.832,46,23,2,0)
file (#727.46) find the location name and retrieve the designated division
"^DD",727.832,727.832,46,23,3,0)
mapped to the delivery location.
"^DD",727.832,727.832,46,"DT")
3060504
"^DD",727.832,727.832,47,0)
PRODUCT FEEDER KEY^F^^1;8^K:$L(X)>15!($L(X)<1) X
"^DD",727.832,727.832,47,3)
Answer must be 1-15 characters in length.
"^DD",727.832,727.832,47,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,47,21,1,0)
Standardized DSS product assigned by DSS NUTRITION PRODUCT worksheet.
"^DD",727.832,727.832,47,23,0)
^^4^4^3060711^
"^DD",727.832,727.832,47,23,1,0)
The nutrition product is mapped to an assigned product in the DSS
"^DD",727.832,727.832,47,23,2,0)
NUTRITION PRODUCT WORKSHEET FILE (#728.45). Using the nutrition product 
"^DD",727.832,727.832,47,23,3,0)
name do a lookup and retrieve the value for ASSIGNED PRODUT field (#1)  
"^DD",727.832,727.832,47,23,4,0)
of file (#728.45).
"^DD",727.832,727.832,47,"DT")
3060504
"^DD",727.832,727.832,48,0)
FOOD PRODUCTION FACILITY^F^^1;9^K:$L(X)>10!($L(X)<1) X
"^DD",727.832,727.832,48,3)
Answer must be 1-10 characters in length.
"^DD",727.832,727.832,48,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,48,21,1,0)
Kitchen location where product was prepared.  
"^DD",727.832,727.832,48,23,0)
^^14^14^3060721^
"^DD",727.832,727.832,48,23,1,0)
If inpatient = from #115.1.13 (dietetic ward) points to #119.6 (nutrition
"^DD",727.832,727.832,48,23,2,0)
location) which points to #119.72.2 (production facility)
"^DD",727.832,727.832,48,23,3,0)
or
"^DD",727.832,727.832,48,23,4,0)
If outpatient = If #115.16.1 (outpatient recurring meal) is present, then 
"^DD",727.832,727.832,48,23,5,0)
use #115.16.2 (outpatient location) to point to (#119.6) (nutrition
"^DD",727.832,727.832,48,23,6,0)
location) which points to #119.72.2 (production facility)
"^DD",727.832,727.832,48,23,7,0)
or  
"^DD",727.832,727.832,48,23,8,0)
If #115.16.19 (outpatient tube feeding) is present then use #115.17.2 
"^DD",727.832,727.832,48,23,9,0)
(outpatient location) use to point to (#119.6) (nutrition location) which
"^DD",727.832,727.832,48,23,10,0)
points to #119.72.2 (production facility)     
"^DD",727.832,727.832,48,23,11,0)
or 
"^DD",727.832,727.832,48,23,12,0)
If #115.18.5 (outpatient guest meal) is present then use #115.18.4 
"^DD",727.832,727.832,48,23,13,0)
(outpatient location) use to point to (#119.6) (nutrition location) which
"^DD",727.832,727.832,48,23,14,0)
points to #119.72.2 (production facility)
"^DD",727.832,727.832,48,"DT")
3060504
"^DD",727.832,727.832,49,0)
DELIVERY LOCATION TYPE^F^^1;10^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,49,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,49,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,49,21,1,0)
Delivery point for product (Tray, Cafeteria or Dining Room) 
"^DD",727.832,727.832,49,23,0)
^^4^4^3060721^
"^DD",727.832,727.832,49,23,1,0)
Use NUTRITION PATIENT file (#115) ADMISSION field (#1), DIET field (#3), 
"^DD",727.832,727.832,49,23,2,0)
TYPE OF SERVICE field (#7). It is associated with the specific diet that
"^DD",727.832,727.832,49,23,3,0)
was delivered on the date in the DAY field Extract should fill with "T",
"^DD",727.832,727.832,49,23,4,0)
"D", or "C"
"^DD",727.832,727.832,49,"DT")
3060504
"^DD",727.832,727.832,50,0)
DELIVERY FEEDER LOCATION^F^^1;11^K:$L(X)>10!($L(X)<1) X
"^DD",727.832,727.832,50,3)
Answer must be 1-10 characters in length.
"^DD",727.832,727.832,50,21,0)
^^2^2^3060711^
"^DD",727.832,727.832,50,21,1,0)
Patient location where product was delivered  depends on value in 
"^DD",727.832,727.832,50,21,2,0)
delivery location type.
"^DD",727.832,727.832,50,23,0)
^^9^9^3060721^
"^DD",727.832,727.832,50,23,1,0)
IF DELIVERY LOCATION TYPE =  "C", Use #115.1.13 (Dietetic Ward) to point
"^DD",727.832,727.832,50,23,2,0)
to (#119.6) (Nutrition Location) to point to Service Point file (#119.72)
"^DD",727.832,727.832,50,23,3,0)
 
"^DD",727.832,727.832,50,23,4,0)
Otherwise 
"^DD",727.832,727.832,50,23,5,0)
 
"^DD",727.832,727.832,50,23,6,0)
IF DELIVERY LOCATION TYPE = "T" or "D" Use #115.1.13 (dietetic ward)  to
"^DD",727.832,727.832,50,23,7,0)
point to Nutrition Location (#119.6) to point to Associated MAS Ward 
"^DD",727.832,727.832,50,23,8,0)
file (#42.5.001) to point to Ward Location file (#42.44) Location Pointer
"^DD",727.832,727.832,50,23,9,0)
field which points to Hospital Location file (#44).
"^DD",727.832,727.832,50,"DT")
3060504
"^DD",727.832,727.832,51,0)
QUANTITY^F^^1;12^K:$L(X)>4!($L(X)<1) X
"^DD",727.832,727.832,51,3)
Answer must be 1-4 characters in length.
"^DD",727.832,727.832,51,21,0)
^^2^2^3060711^
"^DD",727.832,727.832,51,21,1,0)
Product quantity, If tube feeding, then fill with ml's delivered.  
"^DD",727.832,727.832,51,21,2,0)
Otherwise fill with '1'.
"^DD",727.832,727.832,51,23,0)
^.001^13^13^3060711^^
"^DD",727.832,727.832,51,23,1,0)
If tube feeding, then fill with ml's delivered.  Otherwise fill with '1'.
"^DD",727.832,727.832,51,23,2,0)
 
"^DD",727.832,727.832,51,23,3,0)
Inpatient - if tube feeding #115.1.40 is present, then fill with
"^DD",727.832,727.832,51,23,4,0)
#115.1.40.3. (Product ml/day)...here is an example...
"^DD",727.832,727.832,51,23,5,0)
 
"^DD",727.832,727.832,51,23,6,0)
TF PRODUCT: ENSURE PLUS                 STRENGTH: 1/2
"^DD",727.832,727.832,51,23,7,0)
  QUANTITY: 1000 KCAL per Day              PRODUCT ML'S/DAY: 667  <==
"^DD",727.832,727.832,51,23,8,0)
  WATER ML'S/DAY: 666                         KCALS/DAY: 1001
"^DD",727.832,727.832,51,23,9,0)
 
"^DD",727.832,727.832,51,23,10,0)
Otherwise fill with "1" (one)
"^DD",727.832,727.832,51,23,11,0)
 
"^DD",727.832,727.832,51,23,12,0)
Outpatient - if outpatient tube feeding is present #115.16.19, then fill 
"^DD",727.832,727.832,51,23,13,0)
with #115.16.19.3 (Total ML/Day) otherwise fill with "1" (one)
"^DD",727.832,727.832,51,"DT")
3060504
"^DD",727.832,727.832,52,0)
CBOC STATUS^F^^1;13^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,52,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,52,21,0)
^.001^2^2^3060711^^^^
"^DD",727.832,727.832,52,21,1,0)
Community Based Outpatient Clinic (CBOC) values are "Y" (yes) the patient 
"^DD",727.832,727.832,52,21,2,0)
was seen in a CBOC or Null if the patient was not seen in a CBOC.
"^DD",727.832,727.832,52,23,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,52,23,1,0)
CBOC STATUS INDICATOR field is a pointer to the FACILITY TYPE file
"^DD",727.832,727.832,52,23,2,0)
(#4.1).  CBOC STATUS INDICATOR field is derived from the FACILITY TYPE
"^DD",727.832,727.832,52,23,3,0)
field (#13) of the INSTITUTION file (#4).
"^DD",727.832,727.832,52,"DT")
3060504
"^DD",727.832,727.832,53,0)
USER ENROLLEE^F^^1;14^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,53,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,53,21,0)
^^4^4^3060721^
"^DD",727.832,727.832,53,21,1,0)
User enrollee is determined by checking the Patient Enrollment file 
"^DD",727.832,727.832,53,21,2,0)
(#27.11), when a user has a current or future fiscal year in the VistA
"^DD",727.832,727.832,53,21,3,0)
User Enrollee Status field set value to 'U' and Null if no date or a past
"^DD",727.832,727.832,53,21,4,0)
year's value is contained.
"^DD",727.832,727.832,53,23,0)
^.001^4^4^3060721^^
"^DD",727.832,727.832,53,23,1,0)
Value is determined by the use of an API: I $$UESTAT^EASUER(DFN) S 
"^DD",727.832,727.832,53,23,2,0)
ECXEUESTA='U'.- If a veteran has a User Enrollee status for the current 
"^DD",727.832,727.832,53,23,3,0)
or future fiscal year, field is set to 'U'. If there is a past date or no
"^DD",727.832,727.832,53,23,4,0)
date, send Null.
"^DD",727.832,727.832,53,"DT")
3060504
"^DD",727.832,727.832,54,0)
PATIENT TYPE^F^^1;15^K:$L(X)>2!($L(X)<1) X
"^DD",727.832,727.832,54,3)
Answer must be 1-2 characters in length.
"^DD",727.832,727.832,54,21,0)
^^3^3^3060721^
"^DD",727.832,727.832,54,21,1,0)
PATIENT TYPE refers to the various types of patient which might be seen at
"^DD",727.832,727.832,54,21,2,0)
a VA facility. It is determined by the TYPE field of the PATIENT File (#2)
"^DD",727.832,727.832,54,21,3,0)
which points to the TYPE OF PATIENT entries in File (#391).
"^DD",727.832,727.832,54,23,0)
^.001^17^17^3060721^^
"^DD",727.832,727.832,54,23,1,0)
Refers to the various types of patients which might be seen at a VA 
"^DD",727.832,727.832,54,23,2,0)
facility. It is determined by looking at the TYPE field of the PATIENT 
"^DD",727.832,727.832,54,23,3,0)
file (#2) which points to the TYPE OF PATIENT entries in file (#391). 
"^DD",727.832,727.832,54,23,4,0)
PATIENT TYPE best classifies a patient as one of the following values 
"^DD",727.832,727.832,54,23,5,0)
listed below. The value for PATIENT TYPE shall contain only the first two
"^DD",727.832,727.832,54,23,6,0)
characters:
"^DD",727.832,727.832,54,23,7,0)
 
"^DD",727.832,727.832,54,23,8,0)
AC= ACTIVE DUTY
"^DD",727.832,727.832,54,23,9,0)
AL= ALLIED VETERAN
"^DD",727.832,727.832,54,23,10,0)
CO= COLLATERAL
"^DD",727.832,727.832,54,23,11,0)
EM= EMPLOYEE
"^DD",727.832,727.832,54,23,12,0)
IN= INELIGIBLE
"^DD",727.832,727.832,54,23,13,0)
MI= MILITARY RETIREE
"^DD",727.832,727.832,54,23,14,0)
NO= NON-VETERAN (OTHER)   
"^DD",727.832,727.832,54,23,15,0)
NS= NSC VETERAN   
"^DD",727.832,727.832,54,23,16,0)
SC= SC VETERAN   
"^DD",727.832,727.832,54,23,17,0)
TR= TRICARE  
"^DD",727.832,727.832,54,"DT")
3060504
"^DD",727.832,727.832,55,0)
CV STATUS ELIGIBILITY^F^^1;16^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,55,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,55,21,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,55,21,1,0)
Determined by the use of API $$CVEDT^DGCV (DFN. DATE) that checks the 
"^DD",727.832,727.832,55,21,2,0)
Combat Vet End Date field (#.5295) from the Patient File (#2) to determine
"^DD",727.832,727.832,55,21,3,0)
CV Status.  
"^DD",727.832,727.832,55,23,0)
^^11^11^3060721^
"^DD",727.832,727.832,55,23,1,0)
CV STATUS ELIGIBILITY is determined by the use of  API $$CVEDT^DGCV (DFN. 
"^DD",727.832,727.832,55,23,2,0)
DATE) that checks the Combat Vet End Date field (#.5295) from the Patient
"^DD",727.832,727.832,55,23,3,0)
File (#2) to determine CV Status.  API returns three pieces i.e. 
"^DD",727.832,727.832,55,23,4,0)
1^3010106^0, the first piece is resolved as follows.
"^DD",727.832,727.832,55,23,5,0)
 
"^DD",727.832,727.832,55,23,6,0)
 1 - qualifies as a CV
"^DD",727.832,727.832,55,23,7,0)
 0 - does not qualify as a CV
"^DD",727.832,727.832,55,23,8,0)
-1 - bad DFN or date
"^DD",727.832,727.832,55,23,9,0)
 
"^DD",727.832,727.832,55,23,10,0)
Based on these returns,  the value for this field shall be 'Y' for 'YES', 
"^DD",727.832,727.832,55,23,11,0)
E for 'ELIGIBILITY EXPIRED' or 'NULL' for 'NOT ELIGIBLE'.
"^DD",727.832,727.832,55,"DT")
3060504
"^DD",727.832,727.832,56,0)
NATIONAL PATIENT RECORD FLAG^F^^1;17^K:$L(X)>1!($L(X)<1) X
"^DD",727.832,727.832,56,3)
Answer must be 1 character in length.
"^DD",727.832,727.832,56,21,0)
^^1^1^3060721^
"^DD",727.832,727.832,56,21,1,0)
Does the patient have a national patient record flag?
"^DD",727.832,727.832,56,23,0)
^^8^8^3060721^
"^DD",727.832,727.832,56,23,1,0)
NATIONAL PATIENT RECORD FLAG is located in the PRF National Flag File (#
"^DD",727.832,727.832,56,23,2,0)
26.15).  This file contains a list of the Category 1 (National) Patient
"^DD",727.832,727.832,56,23,3,0)
Record Flags that can be assigned to a patient. Category I flags are
"^DD",727.832,727.832,56,23,4,0)
established at a National level.   
"^DD",727.832,727.832,56,23,5,0)
 
"^DD",727.832,727.832,56,23,6,0)
NATIONAL PATIENT RECORD FLAG is retrieved via an API $$GETACT^DGPFAPI.
"^DD",727.832,727.832,56,23,7,0)
Field value is "Y " if the Category I flag is present and active,
"^DD",727.832,727.832,56,23,8,0)
otherwise it is NULL.
"^DD",727.832,727.832,56,"DT")
3060504
"^DD",727.832,727.832,57,0)
ERI^F^^1;18^K:$L(X)>2!($L(X)<1) X
"^DD",727.832,727.832,57,3)
Answer must be 1-2 characters in length.
"^DD",727.832,727.832,57,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,57,21,1,0)
Does patient have an emergency response indicator?
"^DD",727.832,727.832,57,23,0)
^.001^3^3^3060711^^
"^DD",727.832,727.832,57,23,1,0)
designated by the Federal Emergency Management Agency (FEMA). This field 
"^DD",727.832,727.832,57,23,2,0)
is extracted from the EMERGENCY RESPONSE INDICATOR field (#.181) located 
"^DD",727.832,727.832,57,23,3,0)
in the PATIENT file (#2). Values: K = Hurricane Katrina or Null.
"^DD",727.832,727.832,57,"DT")
3060504
"^DD",727.832,727.832,58,0)
ADMISSION DATE^F^^1;19^K:$L(X)>8!($L(X)<1) X
"^DD",727.832,727.832,58,3)
Answer must be 1-8 characters in length.
"^DD",727.832,727.832,58,21,0)
^^1^1^3060711^
"^DD",727.832,727.832,58,21,1,0)
Date on which the patient's admission occurred.
"^DD",727.832,727.832,58,23,0)
^^2^2^3060711^
"^DD",727.832,727.832,58,23,1,0)
The field is 8 numeric characters in length. Format is YYYYMMDD. It is
"^DD",727.832,727.832,58,23,2,0)
retrieved from the  NUTRITION PERSON file (#115), ADMISSION field (.01).
"^DD",727.832,727.832,58,"DT")
3060504
"^DD",728,728,71,0)
LAST DATE NUT^D^^7;28^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",728,728,71,21,0)
^.001^2^2^3060531^^
"^DD",728,728,71,21,1,0)
This field contains the last date that nutrition data was extracted to the
"^DD",728,728,71,21,2,0)
DSS software.
"^DD",728,728,71,23,0)
^^2^2^3060531^
"^DD",728,728,71,23,1,0)
This date is set by the extract routine. Must not be manipulated via the
"^DD",728,728,71,23,2,0)
VA FileMan.
"^DD",728,728,71,"DT")
3060531
"^DD",728,728,72,0)
NUT STATUS^S^R:RUNNING;^7.1;28^Q
"^DD",728,728,72,21,0)
^.001^1^1^3060531^^
"^DD",728,728,72,21,1,0)
Used to inform the user that the extract is presently running.
"^DD",728,728,72,23,0)
^^2^2^3060531^
"^DD",728,728,72,23,1,0)
This data is set by the extract routine.  It must not be manipulated
"^DD",728,728,72,23,2,0)
via VA FileMan.
"^DD",728,728,72,"DT")
3060531
"^DD",728.45,728.45,0)
FIELD^^1^2
"^DD",728.45,728.45,0,"DDA")
N
"^DD",728.45,728.45,0,"DT")
3060814
"^DD",728.45,728.45,0,"IX","B",728.45,.01)

"^DD",728.45,728.45,0,"NM","DSS NUTRITION PRODUCT WORKSHEET")

"^DD",728.45,728.45,.01,0)
NAME^RSX^PD:PRODUCTION DIET;SF:SUPPLEMENTAL FEEDING;TF:TUBE FEEDING;SO:STANDING ORDER;^0;1^S DIC("S")="I $E($G(^(""I"")))'=""Y"""
"^DD",728.45,728.45,.01,1,0)
^.1
"^DD",728.45,728.45,.01,1,1,0)
728.45^B
"^DD",728.45,728.45,.01,1,1,1)
S ^ECX(728.45,"B",$E(X,1,30),DA)=""
"^DD",728.45,728.45,.01,1,1,2)
K ^ECX(728.45,"B",$E(X,1,30),DA)
"^DD",728.45,728.45,.01,3)

"^DD",728.45,728.45,.01,21,0)
^.001^7^7^3060814^^^^
"^DD",728.45,728.45,.01,21,1,0)
This value identifies the nutrition diet and it can be one of the 
"^DD",728.45,728.45,.01,21,2,0)
following four diets.
"^DD",728.45,728.45,.01,21,3,0)
 
"^DD",728.45,728.45,.01,21,4,0)
Production Diet
"^DD",728.45,728.45,.01,21,5,0)
Supplemental Feeding
"^DD",728.45,728.45,.01,21,6,0)
Tube Feeding
"^DD",728.45,728.45,.01,21,7,0)
Standing Order
"^DD",728.45,728.45,.01,23,0)
^.001^9^9^3060814^^^^
"^DD",728.45,728.45,.01,23,1,0)
A new worksheet has been created entitled Nutrition Product Worksheet. 
"^DD",728.45,728.45,.01,23,2,0)
 
"^DD",728.45,728.45,.01,23,3,0)
This worksheet allows the DSS site teams to assign standardized DSS
"^DD",728.45,728.45,.01,23,4,0)
Product (Feeder Key) values to each diet within each category.
"^DD",728.45,728.45,.01,23,5,0)
 
"^DD",728.45,728.45,.01,23,6,0)
Production Diet
"^DD",728.45,728.45,.01,23,7,0)
Supplemental Feeding
"^DD",728.45,728.45,.01,23,8,0)
Tube Feeding
"^DD",728.45,728.45,.01,23,9,0)
Standing Order
"^DD",728.45,728.45,.01,"DT")
3060814
"^DD",728.45,728.45,1,0)
DIET^728.451V^^1;0
"^DD",728.45,728.451,0)
DIET SUB-FIELD^^1^2
"^DD",728.45,728.451,0,"DT")
3060508
"^DD",728.45,728.451,0,"IX","B",728.451,.01)

"^DD",728.45,728.451,0,"NM","DIET")

"^DD",728.45,728.451,0,"UP")
728.45
"^DD",728.45,728.451,.01,0)
DIET^MVX^^0;1^Q
"^DD",728.45,728.451,.01,1,0)
^.1^^-1
"^DD",728.45,728.451,.01,1,1,0)
728.451^B
"^DD",728.45,728.451,.01,1,1,1)
S ^ECX(728.45,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",728.45,728.451,.01,1,1,2)
K ^ECX(728.45,DA(1),1,"B",$E(X,1,30),DA)
"^DD",728.45,728.451,.01,3)

"^DD",728.45,728.451,.01,21,0)
^.001^1^1^3060808^^
"^DD",728.45,728.451,.01,21,1,0)
This value identifies the specific diet within each category.
"^DD",728.45,728.451,.01,23,0)
^.001^7^7^3060808^^
"^DD",728.45,728.451,.01,23,1,0)
This field is a variable pointer and it points to a different file for 
"^DD",728.45,728.451,.01,23,2,0)
each category.
"^DD",728.45,728.451,.01,23,3,0)
 
"^DD",728.45,728.451,.01,23,4,0)
Production Diets file (#116.2)
"^DD",728.45,728.451,.01,23,5,0)
Supplemental Feedings (#118)
"^DD",728.45,728.451,.01,23,6,0)
Tubefeedings (#118.2) 
"^DD",728.45,728.451,.01,23,7,0)
Standing Orders (#118.3)
"^DD",728.45,728.451,.01,"DT")
3060808
"^DD",728.45,728.451,.01,"V",0)
^.12P^4^4
"^DD",728.45,728.451,.01,"V",1,0)
116.2^Production Diets^1^PD^n^n
"^DD",728.45,728.451,.01,"V",2,0)
118^Supplemental Feedings^2^SF^n^n
"^DD",728.45,728.451,.01,"V",3,0)
118.2^Tubefeedings^3^TF^n^n
"^DD",728.45,728.451,.01,"V",4,0)
118.3^Standing Orders^4^SO^n^n
"^DD",728.45,728.451,1,0)
ASSIGNED PRODUCT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",728.45,728.451,1,1,0)
^.1^^0
"^DD",728.45,728.451,1,3)
Answer must be 1-40 characters in length.
"^DD",728.45,728.451,1,21,0)
^^2^2^3060713^
"^DD",728.45,728.451,1,21,1,0)
This value identifies the DSS standardized product designation for each
"^DD",728.45,728.451,1,21,2,0)
diet item from the different nutrition files for national reporting.
"^DD",728.45,728.451,1,23,0)
^^2^2^3060713^
"^DD",728.45,728.451,1,23,1,0)
The value in this field is the national reporting feeder key 
"^DD",728.45,728.451,1,23,2,0)
designated by DSS to be used by the nutrition extract.
"^DD",728.45,728.451,1,"DT")
3060515
"^DD",728.46,728.46,0)
FIELD^^1^2
"^DD",728.46,728.46,0,"DDA")
N
"^DD",728.46,728.46,0,"DT")
3060509
"^DD",728.46,728.46,0,"IX","B",728.46,.01)

"^DD",728.46,728.46,0,"NM","DSS NUTRITION DIVISION WORKSHEET")

"^DD",728.46,728.46,.01,0)
LOCATION NAME^RV^^0;1^Q
"^DD",728.46,728.46,.01,1,0)
^.1
"^DD",728.46,728.46,.01,1,1,0)
728.46^B
"^DD",728.46,728.46,.01,1,1,1)
S ^ECX(728.46,"B",$E(X,1,30),DA)=""
"^DD",728.46,728.46,.01,1,1,2)
K ^ECX(728.46,"B",$E(X,1,30),DA)
"^DD",728.46,728.46,.01,3)

"^DD",728.46,728.46,.01,21,0)
^.001^2^2^3060713^^^
"^DD",728.46,728.46,.01,21,1,0)
This field allows sites to associate standardized division values to  
"^DD",728.46,728.46,.01,21,2,0)
production and service (delivery) locations for N&FS files.
"^DD",728.46,728.46,.01,23,0)
^.001^3^3^3060713^^^
"^DD",728.46,728.46,.01,23,1,0)
This field points to Production Facility file (#119.71) and Service Point
"^DD",728.46,728.46,.01,23,2,0)
file (#119.72) and it allows DSS site teams to associate standardized
"^DD",728.46,728.46,.01,23,3,0)
division values to the N&FS locations.
"^DD",728.46,728.46,.01,"DT")
3060509
"^DD",728.46,728.46,.01,"V",0)
^.12P^2^2
"^DD",728.46,728.46,.01,"V",1,0)
119.71^PRODUCTION FACILITY^1^PF^n^n
"^DD",728.46,728.46,.01,"V",2,0)
119.72^SERVICE POINT^2^SP^n^n
"^DD",728.46,728.46,1,0)
ASSIGNED DIVISION^P4'^DIC(4,^0;2^Q
"^DD",728.46,728.46,1,21,0)
^.001^2^2^3060509^^^
"^DD",728.46,728.46,1,21,1,0)
This field allows sites to associate standardized division values to 
"^DD",728.46,728.46,1,21,2,0)
production and service (delivery) locations for N&FS files.
"^DD",728.46,728.46,1,23,0)
^.001^2^2^3060509^^^
"^DD",728.46,728.46,1,23,1,0)
This field points to the Institution file (#4) and it allows DSS site 
"^DD",728.46,728.46,1,23,2,0)
teams to associate standardized division values to N&FS locations.
"^DD",728.46,728.46,1,"DT")
3060509
"^DIC",727.1,727.1,0)
EXTRACT DEFINITIONS^1
"^DIC",727.1,727.1,0,"GL")
^ECX(727.1,
"^DIC",727.1,727.1,"%D",0)
^^6^6^2990914^^^^
"^DIC",727.1,727.1,"%D",1,0)
This file provides a mechanism for sites to tailor the running of
"^DIC",727.1,727.1,"%D",2,0)
package extracts by defining the frequency (daily, weekly, or monthly)
"^DIC",727.1,727.1,"%D",3,0)
with which the extracts will run and the number of days in the past
"^DIC",727.1,727.1,"%D",4,0)
for which data will be extracted.  The EXTRACT NAME field (#.01) and
"^DIC",727.1,727.1,"%D",5,0)
the FILE NUMBER field (#1) are national standard entries, exported with
"^DIC",727.1,727.1,"%D",6,0)
the file, and should not be edited locally.
"^DIC",727.1,"B","EXTRACT DEFINITIONS",727.1)

"^DIC",727.832,727.832,0)
NUTRITION EXTRACT^727.832
"^DIC",727.832,727.832,0,"GL")
^ECX(727.832,
"^DIC",727.832,727.832,"%",0)
^1.005^^
"^DIC",727.832,727.832,"%D",0)
^1.001^15^15^3061018^^^
"^DIC",727.832,727.832,"%D",1,0)
This file contains data elements as specified by the Decision Support 
"^DIC",727.832,727.832,"%D",2,0)
System (DSS) Program Office for the Nutrition and Food Service extract
"^DIC",727.832,727.832,"%D",3,0)
from existing VistA files. Entries into this file are made by extracting
"^DIC",727.832,727.832,"%D",4,0)
data from several files. Once approved by the DSS site manager, entries in
"^DIC",727.832,727.832,"%D",5,0)
this file are loaded into an electronic mail message and sent to the
"^DIC",727.832,727.832,"%D",6,0)
commercial vendor. This file is intended to be used for validation
"^DIC",727.832,727.832,"%D",7,0)
purposes only. Entries should be made only by the extract load routine.
"^DIC",727.832,727.832,"%D",8,0)
  
"^DIC",727.832,727.832,"%D",9,0)
Since validation techniques will be determined by the local site, it is 
"^DIC",727.832,727.832,"%D",10,0)
intended that the site add whatever cross references deemed necessary.  
"^DIC",727.832,727.832,"%D",11,0)
However, this file contains one nationally determined cross reference, the
"^DIC",727.832,727.832,"%D",12,0)
"AC" cross reference on the EXTRACT NUMBER field (#2).  This cross
"^DIC",727.832,727.832,"%D",13,0)
reference is used by the DSS Extracts software package as an essential
"^DIC",727.832,727.832,"%D",14,0)
feature for managing and purging data in this file and should not be
"^DIC",727.832,727.832,"%D",15,0)
modified.  This file should NOT be modified directly using VA FileMan.
"^DIC",727.832,"B","NUTRITION EXTRACT",727.832)

"^DIC",728.45,728.45,0)
DSS NUTRITION PRODUCT WORKSHEET^728.45
"^DIC",728.45,728.45,0,"GL")
^ECX(728.45,
"^DIC",728.45,728.45,"%",0)
^1.005^^
"^DIC",728.45,728.45,"%D",0)
^1.001^3^3^3061017^^^^
"^DIC",728.45,728.45,"%D",1,0)
This file contains various data extract information utilized by the DSS 
"^DIC",728.45,728.45,"%D",2,0)
Extracts software. Data in this file should be entered and edited only by
"^DIC",728.45,728.45,"%D",3,0)
using the DSS software and not by direct access via VA FileMan.
"^DIC",728.45,"B","DSS NUTRITION PRODUCT WORKSHEET",728.45)

"^DIC",728.46,728.46,0)
DSS NUTRITION DIVISION WORKSHEET^728.46
"^DIC",728.46,728.46,0,"GL")
^ECX(728.46,
"^DIC",728.46,728.46,"%D",0)
^^3^3^3060509^
"^DIC",728.46,728.46,"%D",1,0)
This file contains various data extract information utilized by the DSS 
"^DIC",728.46,728.46,"%D",2,0)
Extracts software. Data in this file should be entered and edited only by 
"^DIC",728.46,728.46,"%D",3,0)
using the DSS software and not by direct access via VA FileMan.
"^DIC",728.46,"B","DSS NUTRITION DIVISION WORKSHEET",728.46)

"BLD",6671,6)
^89
**END**
**END**
