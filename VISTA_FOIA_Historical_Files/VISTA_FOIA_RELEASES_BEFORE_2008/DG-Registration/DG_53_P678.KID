KIDS Distribution saved on Nov 01, 2005@16:17:12
DG*5.3*678 SD*5.3*459
**KIDS**:DG*5.3*678^SD*5.3*459^

**INSTALL NAME**
DG*5.3*678
"BLD",5938,0)
DG*5.3*678^REGISTRATION^0^3051101^y
"BLD",5938,1,0)
^^1^1^3050928^
"BLD",5938,1,1,0)
HURRICANE KATRINA - EMERGENCY RESPONSE INDICATOR
"BLD",5938,4,0)
^9.64PA^^
"BLD",5938,6)
2^
"BLD",5938,"ABPKG")
n
"BLD",5938,"INIT")
POST^DG53678P
"BLD",5938,"KRN",0)
^9.67PA^8989.52^19
"BLD",5938,"KRN",.4,0)
.4
"BLD",5938,"KRN",.401,0)
.401
"BLD",5938,"KRN",.402,0)
.402
"BLD",5938,"KRN",.403,0)
.403
"BLD",5938,"KRN",.5,0)
.5
"BLD",5938,"KRN",.84,0)
.84
"BLD",5938,"KRN",3.6,0)
3.6
"BLD",5938,"KRN",3.8,0)
3.8
"BLD",5938,"KRN",9.2,0)
9.2
"BLD",5938,"KRN",9.8,0)
9.8
"BLD",5938,"KRN",9.8,"NM",0)
^9.68A^10^8
"BLD",5938,"KRN",9.8,"NM",3,0)
DGPTR0^^0^B24220162
"BLD",5938,"KRN",9.8,"NM",4,0)
DGPTR1^^0^B25729227
"BLD",5938,"KRN",9.8,"NM",5,0)
DG53678A^^0^B70926664
"BLD",5938,"KRN",9.8,"NM",6,0)
DG53678P^^0^B3826330
"BLD",5938,"KRN",9.8,"NM",7,0)
DGPT101^^0^B13150561
"BLD",5938,"KRN",9.8,"NM",8,0)
DGPT101P^^0^B4195091
"BLD",5938,"KRN",9.8,"NM",9,0)
DGPTAEE^^0^B10850349
"BLD",5938,"KRN",9.8,"NM",10,0)
DGPTAEE1^^0^B21418190
"BLD",5938,"KRN",9.8,"NM","B","DG53678A",5)

"BLD",5938,"KRN",9.8,"NM","B","DG53678P",6)

"BLD",5938,"KRN",9.8,"NM","B","DGPT101",7)

"BLD",5938,"KRN",9.8,"NM","B","DGPT101P",8)

"BLD",5938,"KRN",9.8,"NM","B","DGPTAEE",9)

"BLD",5938,"KRN",9.8,"NM","B","DGPTAEE1",10)

"BLD",5938,"KRN",9.8,"NM","B","DGPTR0",3)

"BLD",5938,"KRN",9.8,"NM","B","DGPTR1",4)

"BLD",5938,"KRN",19,0)
19
"BLD",5938,"KRN",19,"NM",0)
^9.68A^^
"BLD",5938,"KRN",19.1,0)
19.1
"BLD",5938,"KRN",101,0)
101
"BLD",5938,"KRN",409.61,0)
409.61
"BLD",5938,"KRN",771,0)
771
"BLD",5938,"KRN",870,0)
870
"BLD",5938,"KRN",8989.51,0)
8989.51
"BLD",5938,"KRN",8989.52,0)
8989.52
"BLD",5938,"KRN",8994,0)
8994
"BLD",5938,"KRN","B",.4,.4)

"BLD",5938,"KRN","B",.401,.401)

"BLD",5938,"KRN","B",.402,.402)

"BLD",5938,"KRN","B",.403,.403)

"BLD",5938,"KRN","B",.5,.5)

"BLD",5938,"KRN","B",.84,.84)

"BLD",5938,"KRN","B",3.6,3.6)

"BLD",5938,"KRN","B",3.8,3.8)

"BLD",5938,"KRN","B",9.2,9.2)

"BLD",5938,"KRN","B",9.8,9.8)

"BLD",5938,"KRN","B",19,19)

"BLD",5938,"KRN","B",19.1,19.1)

"BLD",5938,"KRN","B",101,101)

"BLD",5938,"KRN","B",409.61,409.61)

"BLD",5938,"KRN","B",771,771)

"BLD",5938,"KRN","B",870,870)

"BLD",5938,"KRN","B",8989.51,8989.51)

"BLD",5938,"KRN","B",8989.52,8989.52)

"BLD",5938,"KRN","B",8994,8994)

"BLD",5938,"PRE")
DG53678P
"BLD",5938,"QUES",0)
^9.62^^
"BLD",5938,"REQB",0)
^9.611^1^1
"BLD",5938,"REQB",1,0)
DG*5.3*677^2
"BLD",5938,"REQB","B","DG*5.3*677",1)

"INIT")
POST^DG53678P
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
678^3051101^123456825
"PKG",5,22,1,"PAH",1,1,0)
^^1^1^3051101
"PKG",5,22,1,"PAH",1,1,1,0)
HURRICANE KATRINA - EMERGENCY RESPONSE INDICATOR
"PRE")
DG53678P
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DG53678A")
0^5^B70926664
"RTN","DG53678A",1,0)
DG53678A ;ALB/MRY - Pre/Post-Install ; 9/26/05 3:33pm
"RTN","DG53678A",2,0)
 ;;5.3;Registration;**678**;Aug 13, 1993
"RTN","DG53678A",3,0)
 ;
"RTN","DG53678A",4,0)
POST ;Set up TaskMan to re-queue PTF records in the background
"RTN","DG53678A",5,0)
 N ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK
"RTN","DG53678A",6,0)
 S ZTRTN="SCAN^DG53678A"
"RTN","DG53678A",7,0)
 S ZTDESC="Re-queue PTF records for DG*5.3*678"
"RTN","DG53678A",8,0)
 ;Queue Task to start in 60 seconds
"RTN","DG53678A",9,0)
 S ZTDTH=$$SCH^XLFDT("60S",$$NOW^XLFDT)
"RTN","DG53678A",10,0)
 S ZTIO=""
"RTN","DG53678A",11,0)
 D ^%ZTLOAD
"RTN","DG53678A",12,0)
 D BMES^XPDUTL("*****")
"RTN","DG53678A",13,0)
 D
"RTN","DG53678A",14,0)
 . I $D(ZTSK)[0 D  Q
"RTN","DG53678A",15,0)
 . .D MES^XPDUTL("TaskMan run to requeue PTF records for DG*5.3*678 was not started.")
"RTN","DG53678A",16,0)
 . .D MES^XPDUTL("Re-run Post Install routine POST^DG53678A.")
"RTN","DG53678A",17,0)
 . D MES^XPDUTL("Task "_ZTSK_" started to requeue PTF records.")
"RTN","DG53678A",18,0)
 . I $D(ZTSK("D")) D
"RTN","DG53678A",19,0)
 . . D MES^XPDUTL("Task will start at "_$$HTE^XLFDT(ZTSK("D")))
"RTN","DG53678A",20,0)
 D MES^XPDUTL("*****")
"RTN","DG53678A",21,0)
 Q
"RTN","DG53678A",22,0)
 ;
"RTN","DG53678A",23,0)
SCAN ;Search the PTF records for any messages that would have been
"RTN","DG53678A",24,0)
 ;transmitted to the NPCD after the Katrina ERI date and re-queue
"RTN","DG53678A",25,0)
 ;those messages.
"RTN","DG53678A",26,0)
 ;
"RTN","DG53678A",27,0)
 N DGSTART   ;Job start date/time
"RTN","DG53678A",28,0)
 N DGTOTCNT  ;count of verified transmitted patients
"RTN","DG53678A",29,0)
 N DGPTFCNT  ;count of re-queued PTF records
"RTN","DG53678A",30,0)
 N DGMSG     ;free text message/line count passed to NOTIFY
"RTN","DG53678A",31,0)
 N DGIEN     ;IEN for PTF RELEASE file
"RTN","DG53678A",32,0)
 N DGDTRAN   ;Date Transmitted
"RTN","DG53678A",33,0)
 N DGDTREL   ;Date Released
"RTN","DG53678A",34,0)
 N DGQUIT    ;job control flag
"RTN","DG53678A",35,0)
 N DGERIDT   ;Hurricane Katrine date
"RTN","DG53678A",36,0)
 ;
"RTN","DG53678A",37,0)
 K ^TMP("DG53678A",$J),^TMP("DG53678",$J)
"RTN","DG53678A",38,0)
 S DGERIDT=3050826 ;Hurricane Katrina ERI cutoff date
"RTN","DG53678A",39,0)
 S DGSTART=$$NOW^XLFDT
"RTN","DG53678A",40,0)
 S (DGMSG,DGQUIT,DGTOTCNT)=0
"RTN","DG53678A",41,0)
 S DGPTFCNT="0^0"
"RTN","DG53678A",42,0)
 S ZTREQ="@"  ;delete task when finished
"RTN","DG53678A",43,0)
 L +^DGP(45.83):3 I '$T D  Q
"RTN","DG53678A",44,0)
 . S DGMSG=2
"RTN","DG53678A",45,0)
 . S DGMSG(1)="PTF Transmission Currently Running - Patch Re-queue Job Stopping"
"RTN","DG53678A",46,0)
 . S DGMSG(2)="Re-run Post Install routine POST^DG53678A."
"RTN","DG53678A",47,0)
 . D NOTIFY(DGSTART,DGTOTCNT,DGPTFCNT,.DGMSG)
"RTN","DG53678A",48,0)
 S DGDTRAN=DGERIDT-.00001 ;PTF transmitted date
"RTN","DG53678A",49,0)
 ;Scan thru transmitted PTFs
"RTN","DG53678A",50,0)
 F  S DGDTRAN=$O(^DGP(45.83,"AP",DGDTRAN)) Q:'DGDTRAN  D  Q:DGQUIT
"RTN","DG53678A",51,0)
 . S DGDTREL=0 ;PTF released date
"RTN","DG53678A",52,0)
 . F  S DGDTREL=$O(^DGP(45.83,"AP",DGDTRAN,DGDTREL)) Q:'DGDTREL  D  Q:DGQUIT
"RTN","DG53678A",53,0)
 . . S DGIEN=0 ;PTF ien
"RTN","DG53678A",54,0)
 . . F  S DGIEN=$O(^DGP(45.83,"AP",DGDTRAN,DGDTREL,DGIEN)) Q:'DGIEN  D  Q:DGQUIT
"RTN","DG53678A",55,0)
 . . . ;check PTF record (admit>8/25) that were xmit'ed and re-queue them
"RTN","DG53678A",56,0)
 . . . K DGPTFARR ;one PTF entry in array at atime
"RTN","DG53678A",57,0)
 . . . I ($$GET1^DIQ(45,DGIEN,2,"I")>(DGERIDT-.00001)),$$GETPTF(DGIEN,DGDTREL,.DGPTFARR) D REQPTF(.DGPTFARR,.DGPTFCNT)
"RTN","DG53678A",58,0)
 . . . I $$S^%ZTLOAD D  Q
"RTN","DG53678A",59,0)
 . . . . S DGMSG=2
"RTN","DG53678A",60,0)
 . . . . S DGMSG(1)="Patch DG*5.3*678 PTF Re-queue Task Stopped by User"
"RTN","DG53678A",61,0)
 . . . . S DGMSG(2)="Re-run Post Install routine POST^DG53678A."
"RTN","DG53678A",62,0)
 . . . . S (ZTSTOP,DGQUIT)=1
"RTN","DG53678A",63,0)
 L -^DGP(45.83)
"RTN","DG53678A",64,0)
 D NOTIFY(DGSTART,DGPTFCNT,.DGMSG)
"RTN","DG53678A",65,0)
 Q
"RTN","DG53678A",66,0)
 ;
"RTN","DG53678A",67,0)
GETPTF(DGPTF,DGQDT,DGPT) ;Find PTF records transmitted after the verification
"RTN","DG53678A",68,0)
 ; date.  Build array subscripted by record numbers set equal to the
"RTN","DG53678A",69,0)
 ; PTF record type.
"RTN","DG53678A",70,0)
 ;
"RTN","DG53678A",71,0)
 ;  Input
"RTN","DG53678A",72,0)
 ;    DGPTF   - IEN to PTF file (#45)
"RTN","DG53678A",73,0)
 ;    DGQDT    - Date queued (Released)
"RTN","DG53678A",74,0)
 ;    DGPT    - array node passed by reference
"RTN","DG53678A",75,0)
 ;
"RTN","DG53678A",76,0)
 ;  Output
"RTN","DG53678A",77,0)
 ;    DGPT - array of PTF record types and queue dates (1:PTF,2:CENSUS)
"RTN","DG53678A",78,0)
 ;           subscripted by PTF record # (ex. DGPT(1402)=2^3011212)
"RTN","DG53678A",79,0)
 ;    function result - 0 : no records found
"RTN","DG53678A",80,0)
 ;                      1 : records found
"RTN","DG53678A",81,0)
 ;
"RTN","DG53678A",82,0)
 N DFN    ;IEN to PATIENT file (#2)
"RTN","DG53678A",83,0)
 N DGRTY  ;Record type
"RTN","DG53678A",84,0)
 N DGPT0  ;zero node of patient's PTF record
"RTN","DG53678A",85,0)
 ;
"RTN","DG53678A",86,0)
 ;borrowed from DIC("S") in DREL^DGPTFDEL
"RTN","DG53678A",87,0)
 I $D(^DGPT(DGPTF,0)),$D(^DGPT(DGPTF,70)),+^DGPT(DGPTF,70)>2901000,$D(^DGP(45.83,"C",DGPTF)) D
"RTN","DG53678A",88,0)
 . S DGPT0=^DGPT(DGPTF,0)
"RTN","DG53678A",89,0)
 . S DFN=$P(DGPT0,U)
"RTN","DG53678A",90,0)
 . S DGRTY=$P(DGPT0,U,11)
"RTN","DG53678A",91,0)
 . I ($$EMGRES^DGUTL(DFN)="K"),(DGRTY=1) D  ;PTF records only
"RTN","DG53678A",92,0)
 . . S DGPT(DGPTF)=DGRTY_U_DGQDT
"RTN","DG53678A",93,0)
 . . D DEM^VADPT
"RTN","DG53678A",94,0)
 . . S DGNAM=$S($D(VADM(1)):VADM(1),1:" ")
"RTN","DG53678A",95,0)
 . . S DGSSN=$S($D(VADM(2)):$P($P(VADM(2),"^",2),"-",3),1:" ")
"RTN","DG53678A",96,0)
 . . S ^TMP("DG53678",$J,DGNAM,DGSSN,DGPTF)=""
"RTN","DG53678A",97,0)
 Q ($D(DGPT)>0)
"RTN","DG53678A",98,0)
 ;
"RTN","DG53678A",99,0)
REQPTF(DGPTFT,DGPTFC) ;Re-queue the PTF record for transmission
"RTN","DG53678A",100,0)
 ;  Input
"RTN","DG53678A",101,0)
 ;    DGPTFT - array of PTF record #'s to resend for a patient
"RTN","DG53678A",102,0)
 ;    DGPTFC - count of re-queued PTF records
"RTN","DG53678A",103,0)
 ;
"RTN","DG53678A",104,0)
 ;  Output
"RTN","DG53678A",105,0)
 ;    DGPTFC - count of re-queued PTF records PTF^CENSUS
"RTN","DG53678A",106,0)
 ;             (ex.  DGPTFC=4^1)
"RTN","DG53678A",107,0)
 ;
"RTN","DG53678A",108,0)
 N DGPTF  ;PTF record number
"RTN","DG53678A",109,0)
 N DGRTY  ;PTF record type (1:PTF, 2:CENSUS)
"RTN","DG53678A",110,0)
 N DGDAT  ;Date of queuing for previous transmission
"RTN","DG53678A",111,0)
 ;
"RTN","DG53678A",112,0)
 S DGPTF=0
"RTN","DG53678A",113,0)
 F  S DGPTF=$O(DGPTFT(DGPTF)) Q:'DGPTF  D
"RTN","DG53678A",114,0)
 . S DGRTY=+DGPTFT(DGPTF),DGDAT=$P(DGPTFT(DGPTF),U,2)
"RTN","DG53678A",115,0)
 . I $$UNREL(DGPTF,DGDAT) D RELEASE(DGPTF) D
"RTN","DG53678A",116,0)
 . . S:'$D(^TMP("DG53678",$J,0,DGPTF)) $P(DGPTFC,U,DGRTY)=$P(DGPTFC,U,DGRTY)+1
"RTN","DG53678A",117,0)
 . . S ^TMP("DG53678",$J,0,DGPTF)=""
"RTN","DG53678A",118,0)
 Q
"RTN","DG53678A",119,0)
 ;
"RTN","DG53678A",120,0)
UNREL(DGPTF,DGDT) ;Unrelease the PTF record - borrowed from OK^DGPTFDEL
"RTN","DG53678A",121,0)
 ;
"RTN","DG53678A",122,0)
 ;  Input:
"RTN","DG53678A",123,0)
 ;    DGPTF - PTF record number
"RTN","DG53678A",124,0)
 ;    DGDT  - Date of Previously Queued Transmission
"RTN","DG53678A",125,0)
 ;
"RTN","DG53678A",126,0)
 ;  Output:
"RTN","DG53678A",127,0)
 ;    function result 1:success, 0:failure
"RTN","DG53678A",128,0)
 ;
"RTN","DG53678A",129,0)
 N DA,DIK  ;FileMan variables
"RTN","DG53678A",130,0)
 ;
"RTN","DG53678A",131,0)
 S DA(1)=DGDT
"RTN","DG53678A",132,0)
 I 'DA(1) Q 0
"RTN","DG53678A",133,0)
 S DIK="^DGP(45.83,"_DA(1)_",""P"",",DA=DGPTF D ^DIK
"RTN","DG53678A",134,0)
 Q 1
"RTN","DG53678A",135,0)
 ;
"RTN","DG53678A",136,0)
RELEASE(DGPTF) ;Re-release the PTF record - borrowed from REL^DGPTFREL
"RTN","DG53678A",137,0)
 ;
"RTN","DG53678A",138,0)
 ;  Input:
"RTN","DG53678A",139,0)
 ;    DGPTF - PTF record number
"RTN","DG53678A",140,0)
 ;
"RTN","DG53678A",141,0)
 ;  Output:
"RTN","DG53678A",142,0)
 ;    none
"RTN","DG53678A",143,0)
 ;
"RTN","DG53678A",144,0)
 N DA,DIC,DIE,DINUM,DR,X  ;FileMan variables
"RTN","DG53678A",145,0)
 ;
"RTN","DG53678A",146,0)
 ;if date entry doesn't exist then create new entry and "P" node
"RTN","DG53678A",147,0)
 I '$D(^DGP(45.83,DT,0)) D
"RTN","DG53678A",148,0)
 . S (DINUM,X)=DT,DIC="^DGP(45.83,",DIC(0)="L"
"RTN","DG53678A",149,0)
 . K DD,DO
"RTN","DG53678A",150,0)
 . D FILE^DICN
"RTN","DG53678A",151,0)
 . K DINUM,DIC
"RTN","DG53678A",152,0)
 I '($D(^DGP(45.83,DT,"P",0))#2) S ^DGP(45.83,DT,"P",0)="^45.831PA^0^0"
"RTN","DG53678A",153,0)
 ;if transmission date exists then clear it to allow re-transmission
"RTN","DG53678A",154,0)
 I $P(^DGP(45.83,DT,0),U,2) D
"RTN","DG53678A",155,0)
 . S DA=DT,DIE="^DGP(45.83,",DR="1///@"
"RTN","DG53678A",156,0)
 . D ^DIE
"RTN","DG53678A",157,0)
 . K DA,DIE,DR
"RTN","DG53678A",158,0)
 ;add the PTF record to the queue
"RTN","DG53678A",159,0)
 S (DINUM,X)=DGPTF,DIC(0)="L",DA(1)=DT,DIC="^DGP(45.83,"_DT_",""P"","
"RTN","DG53678A",160,0)
 D FILE^DICN
"RTN","DG53678A",161,0)
 K DA,DIC,DINUM
"RTN","DG53678A",162,0)
 ;update RELEASE DATE and RELEASED BY fields in PTF CLOSE OUT file.
"RTN","DG53678A",163,0)
 S DA=DGPTF,DIE="^DGP(45.84,",DR="4////"_DT_";5////"_DUZ
"RTN","DG53678A",164,0)
 D ^DIE
"RTN","DG53678A",165,0)
 K DA,DIE,DR
"RTN","DG53678A",166,0)
 Q
"RTN","DG53678A",167,0)
 ;
"RTN","DG53678A",168,0)
NOTIFY(DGSTIME,DGPTFNUM,DGMESS) ;send job msg
"RTN","DG53678A",169,0)
 ;
"RTN","DG53678A",170,0)
 ;  Input
"RTN","DG53678A",171,0)
 ;    DGSTIME - job start date/time
"RTN","DG53678A",172,0)
 ;    DGPTFNUM - count of PTF messages re-queued
"RTN","DG53678A",173,0)
 ;    DGMESS - free text message array for task stop or errors passed
"RTN","DG53678A",174,0)
 ;             by reference
"RTN","DG53678A",175,0)
 ;
"RTN","DG53678A",176,0)
 ;  Output
"RTN","DG53678A",177,0)
 ;    none
"RTN","DG53678A",178,0)
 ;
"RTN","DG53678A",179,0)
 N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","DG53678A",180,0)
 N DGSITE,DGETIME,DGTEXT,DGI,DGNAM,DGSSN,DGPTF,LINECT
"RTN","DG53678A",181,0)
 S DGSITE=$$SITE^VASITE
"RTN","DG53678A",182,0)
 S DGETIME=$$NOW^XLFDT
"RTN","DG53678A",183,0)
 S XMDUZ="PTF Re-queue"
"RTN","DG53678A",184,0)
 S XMSUB="Patch DG*5.3*678 Emergency Response - Hurricane Katrina (PTF)"
"RTN","DG53678A",185,0)
 S XMTEXT="^TMP(""DG53678A"",$J,"
"RTN","DG53678A",186,0)
 S XMY(DUZ)=""
"RTN","DG53678A",187,0)
 S XMY("AACVHANPCDERInotification@mail.va.gov")=""
"RTN","DG53678A",188,0)
 S XMY("G.PTT")=""
"RTN","DG53678A",189,0)
 S XMY("YORTY,M ROBERT@FORUM.VA.GOV")=""
"RTN","DG53678A",190,0)
 S ^TMP("DG53678A",$J,1)=""
"RTN","DG53678A",191,0)
 S ^TMP("DG53678A",$J,2)="          Facility Name:  "_$P(DGSITE,U,2)
"RTN","DG53678A",192,0)
 S ^TMP("DG53678A",$J,3)="         Station Number:  "_$P(DGSITE,U,3)
"RTN","DG53678A",193,0)
 S ^TMP("DG53678A",$J,4)=""
"RTN","DG53678A",194,0)
 S ^TMP("DG53678A",$J,5)="  Date/Time job started:  "_$$FMTE^XLFDT(DGSTIME)
"RTN","DG53678A",195,0)
 S ^TMP("DG53678A",$J,6)="  Date/Time job stopped:  "_$$FMTE^XLFDT(DGETIME)
"RTN","DG53678A",196,0)
 S ^TMP("DG53678A",$J,7)=""
"RTN","DG53678A",197,0)
 I $G(DGMESS) D
"RTN","DG53678A",198,0)
 . F DGI=1:1:DGMESS D
"RTN","DG53678A",199,0)
 . . S ^TMP("DG53678A",$J,7+DGI)="*** "_$E($G(DGMESS(DGI)),1,65)
"RTN","DG53678A",200,0)
 I '$G(DGMESS) D
"RTN","DG53678A",201,0)
 . S ^TMP("DG53678A",$J,8)="PTF Message Re-queue Complete"
"RTN","DG53678A",202,0)
 . ;S ^TMP("DG53678A",$J,9)="Total Hurricane Katrina patients in file (#45.83): "_DGTOT
"RTN","DG53678A",203,0)
 . S ^TMP("DG53678A",$J,10)="Total Hurricane Katrina PTF records re-queued: "_$P(DGPTFNUM,U,1)
"RTN","DG53678A",204,0)
 . S ^TMP("DG53678A",$J,11)=""
"RTN","DG53678A",205,0)
 . S ^TMP("DG53678A",$J,12)="  If your site has PTF records that were re-queued, please follow the steps"
"RTN","DG53678A",206,0)
 . S ^TMP("DG53678A",$J,13)="  listed below to retransmit them: Please refer to the PIMS V5.3 ADT"
"RTN","DG53678A",207,0)
 . S ^TMP("DG53678A",$J,14)="  Module User Manual - PTF Menu, for additional information."
"RTN","DG53678A",208,0)
 . S ^TMP("DG53678A",$J,15)=""
"RTN","DG53678A",209,0)
 . S ^TMP("DG53678A",$J,16)="     *   Go to the PTF Menu, then PTF Transmission"
"RTN","DG53678A",210,0)
 . S ^TMP("DG53678A",$J,17)="     *      At the Start Date prompt, type ?. "
"RTN","DG53678A",211,0)
 . S ^TMP("DG53678A",$J,18)="     You should see a list of dates available for re-transmission."
"RTN","DG53678A",212,0)
 . S ^TMP("DG53678A",$J,19)="     *   Enter the first available start date, then enter a through date"
"RTN","DG53678A",213,0)
 . S ^TMP("DG53678A",$J,20)="         for the date ranges available."
"RTN","DG53678A",214,0)
 . S ^TMP("DG53678A",$J,21)="     *      It is recommended that you retransmit these records"
"RTN","DG53678A",215,0)
 . S ^TMP("DG53678A",$J,22)="            within 15 days of the patch installation."
"RTN","DG53678A",216,0)
 . I +DGPTFCNT D
"RTN","DG53678A",217,0)
 . . Q  ;don't list names
"RTN","DG53678A",218,0)
 . . S ^TMP("DG53678A",$J,23)=""
"RTN","DG53678A",219,0)
 . . S ^TMP("DG53678A",$J,24)="List of Transmitted PTF records re-queued with a 'Katrina' indicator."
"RTN","DG53678A",220,0)
 . . S ^TMP("DG53678A",$J,25)="SSN(L4)   PTF#        Patient"
"RTN","DG53678A",221,0)
 . . S ^TMP("DG53678A",$J,26)="-------------------------------------------"
"RTN","DG53678A",222,0)
 . . S LINECT=26
"RTN","DG53678A",223,0)
 . . S DGNAM=0 F  S DGNAM=$O(^TMP("DG53678",$J,DGNAM)) Q:DGNAM=""  D
"RTN","DG53678A",224,0)
 . . . S DGSSN="" F  S DGSSN=$O(^TMP("DG53678",$J,DGNAM,DGSSN)) Q:DGSSN=""  D
"RTN","DG53678A",225,0)
 . . . . S DGPTF="" F  S DGPTF=$O(^TMP("DG53678",$J,DGNAM,DGSSN,DGPTF)) Q:DGPTF=""  D
"RTN","DG53678A",226,0)
 . . . . . S ^TMP("DG53678A",$J,LINECT+1)=DGSSN_"      "_DGPTF_"     "_DGNAM
"RTN","DG53678A",227,0)
 . . . . . S LINECT=LINECT+1
"RTN","DG53678A",228,0)
 D ^XMD
"RTN","DG53678A",229,0)
 K ^TMP("DG53678A",$J),^TMP("DG53678",$J),XMY,VADM Q
"RTN","DG53678P")
0^6^B3826330
"RTN","DG53678P",1,0)
DG53678P ;ALB/MRY - Pre/Post-Install ; 9/26/05 3:33pm
"RTN","DG53678P",2,0)
 ;;5.3;Registration;**678**;Aug 13, 1993
"RTN","DG53678P",3,0)
 ;
"RTN","DG53678P",4,0)
 ;
"RTN","DG53678P",5,0)
ENV ;Main entry point for Environment check point.
"RTN","DG53678P",6,0)
 ;
"RTN","DG53678P",7,0)
 S XPDABORT=""
"RTN","DG53678P",8,0)
 D PROGCHK(.XPDABORT) ;checks programmer variables
"RTN","DG53678P",9,0)
 I XPDABORT="" K XPDABORT
"RTN","DG53678P",10,0)
 Q
"RTN","DG53678P",11,0)
 ;
"RTN","DG53678P",12,0)
 ;
"RTN","DG53678P",13,0)
PRE ;Main entry point for Pre-init items.
"RTN","DG53678P",14,0)
 ;
"RTN","DG53678P",15,0)
 Q
"RTN","DG53678P",16,0)
 ;
"RTN","DG53678P",17,0)
 ;
"RTN","DG53678P",18,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","DG53678P",19,0)
 ;
"RTN","DG53678P",20,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","DG53678P",21,0)
 .D BMES^XPDUTL("*****")
"RTN","DG53678P",22,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","DG53678P",23,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","DG53678P",24,0)
 .D MES^XPDUTL("*****")
"RTN","DG53678P",25,0)
 .S XPDABORT=2
"RTN","DG53678P",26,0)
 Q
"RTN","DG53678P",27,0)
 ;
"RTN","DG53678P",28,0)
POST ;
"RTN","DG53678P",29,0)
 ;Add new code into PTF AUSTIN ERROR CODES (#45.64) file
"RTN","DG53678P",30,0)
 N LINE,X,DGCODE,DIC,DGDESC,DGPOS,Y,DGX,DGY,DGCNT
"RTN","DG53678P",31,0)
 S DGCNT=0
"RTN","DG53678P",32,0)
 D BMES^XPDUTL(">>> Adding new code 125 to file # 45.64")
"RTN","DG53678P",33,0)
 F LINE=1:1 S X=$T(ADD+LINE) S DGCODE=$P(X,";;",2) Q:DGCODE="EXIT"  D
"RTN","DG53678P",34,0)
 .S DIC="^DGP(45.64,",DIC(0)=""
"RTN","DG53678P",35,0)
 .S DGDESC=$P(DGCODE,U,2)
"RTN","DG53678P",36,0)
 .S DGPOS=$P(DGCODE,U,3)
"RTN","DG53678P",37,0)
 .I $L(DGDESC)>70 Q
"RTN","DG53678P",38,0)
 .S DIC("DR")=".02///"_DGDESC_";.03///"_DGPOS
"RTN","DG53678P",39,0)
 .S X=$P(DGCODE,U)
"RTN","DG53678P",40,0)
 .I +$O(^DGP(45.64,"B",X,0)) S DGCNT=1 Q
"RTN","DG53678P",41,0)
 .K DO D FILE^DICN
"RTN","DG53678P",42,0)
 .I Y=-1 Q
"RTN","DG53678P",43,0)
 .S DGX=$P(DGCODE,U),DGY=$P(DGCODE,U,2)
"RTN","DG53678P",44,0)
 .D MES^XPDUTL("  CODE "_DGX_"     "_DGY_"     added.")
"RTN","DG53678P",45,0)
 .S DGCNT=DGCNT+1
"RTN","DG53678P",46,0)
 I DGCNT<1 D
"RTN","DG53678P",47,0)
 .D MES^XPDUTL("Code(s) missing. Compare with patch description.")
"RTN","DG53678P",48,0)
 ;
"RTN","DG53678P",49,0)
 D POST^DG53678A
"RTN","DG53678P",50,0)
 Q
"RTN","DG53678P",51,0)
 ;
"RTN","DG53678P",52,0)
ADD ;new code - descriptions cannot exceed 70 char.
"RTN","DG53678P",53,0)
 ;;125^Invalid Emergency Response Indicator.^24
"RTN","DG53678P",54,0)
 ;;EXIT
"RTN","DGPT101")
0^7^B13150561
"RTN","DGPT101",1,0)
DGPT101 ;ALB/MTC - 101/701 Austin Edit Checks ; 12 NOV 92
"RTN","DGPT101",2,0)
 ;;5.3;Registration;**8,164,180,247,415,678**;Aug 13, 1993
"RTN","DGPT101",3,0)
 ;
"RTN","DGPT101",4,0)
EN ;
"RTN","DGPT101",5,0)
 S (DGPTFEF,DGPTERC)=0
"RTN","DGPT101",6,0)
101 ;-- process 101+701 data
"RTN","DGPT101",7,0)
 N ERROR
"RTN","DGPT101",8,0)
 ;
"RTN","DGPT101",9,0)
PARSE ;Set up record string, Call routine to parse record
"RTN","DGPT101",10,0)
 S DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT101",11,0)
 D SET^DGPT101P
"RTN","DGPT101",12,0)
 D NOW^%DTC S DGPTTY=(17+$E(X,1))_$E(X,2,3)
"RTN","DGPT101",13,0)
701 ;PROCESS 701
"RTN","DGPT101",14,0)
 S DGPTAL7=$O(^TMP("AEDIT",$J,"N701",SEQ)) I DGPTAL7="" S DGPTFEF=1 Q
"RTN","DGPT101",15,0)
 D SET^DGPT701 I DGPTFEF Q
"RTN","DGPT101",16,0)
SET ; Start error piece, flags
"RTN","DGPT101",17,0)
 S DGPTEDFL=0,DGPTSTR=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPT101",18,0)
SSN ; Start edits 
"RTN","DGPT101",19,0)
 I DGPTSSN'?9N!((DGPTPS=" ")&("9"[$E(DGPTSSN))) S DGPTERC=102 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",20,0)
 I " P"'[DGPTPS S DGPTERC=101 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",21,0)
 S DGPTPS=$S(DGPTPS="P":DGPTPS,1:"A")
"RTN","DGPT101",22,0)
PSEU ;
"RTN","DGPT101",23,0)
 I DGPTPS="P" S DGPTERC=0 D PSE^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",24,0)
DTE ;
"RTN","DGPT101",25,0)
 S X=DGPTDTS,%DT="XT" D ^%DT I Y<0 S DGPTERC=103 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",26,0)
 I Y>0 D DD^%DT S DGPTADT=$E(Y,5,6)_"-"_$E(Y,1,3)_"-"_$E(Y,9,12)_" "_$S($P(Y,"@",2)]"":$E($P(Y,"@",2),1,5),1:"00:00")
"RTN","DGPT101",27,0)
 S X1=DGPTNOW,X2=$$FMDT($E(DGPTSTR,15,20)) D ^%DTC I X<0 S DGPTERC=140 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",28,0)
 S DGPTDTS=$$FMDT($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101",29,0)
LN ;
"RTN","DGPT101",30,0)
 I DGPTLN'?1.U." " S DGPTERC=105 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",31,0)
 I DGPTFI'?.U!((DGPTMI'?1U)&(DGPTMI'=" ")) S DGPTERC=106 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",32,0)
SRA ;-- may need to add more edits later
"RTN","DGPT101",33,0)
 D ^DGPT10S1 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",34,0)
SRP ;
"RTN","DGPT101",35,0)
 N I
"RTN","DGPT101",36,0)
 S DGPTERC=0
"RTN","DGPT101",37,0)
 I " 1234"'[DGPTSRP S DGPTERC=109 D ERR G:DGPTEDFL EXIT G POW
"RTN","DGPT101",38,0)
 I "1234"[DGPTSRP S DGPTERC=109 F I=20:1:26 I DGPTSTTY[U_I_U S DGPTERC=0 Q
"RTN","DGPT101",39,0)
 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",40,0)
POW ;
"RTN","DGPT101",41,0)
 I $L(DGPTPOW)'=1!("123456789AB "'[DGPTPOW) S DGPTERC=110 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",42,0)
MAR ;
"RTN","DGPT101",43,0)
 I "MWDUSN"'[DGPTMRS S DGPTERC=111 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",44,0)
GEN ;
"RTN","DGPT101",45,0)
 I "FM"'[DGPTGEN S DGPTERC=112 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",46,0)
 S DGPTGEN1=$S(DGPTGEN="F":1,1:0)
"RTN","DGPT101",47,0)
DOB ;
"RTN","DGPT101",48,0)
 S DGPTERC=0 D DB^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",49,0)
POS ;
"RTN","DGPT101",50,0)
 S DGPTERC=0 D ^DGPT10CB I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",51,0)
EXP ;
"RTN","DGPT101",52,0)
 S DGPTERC=0 D AGO^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",53,0)
 S DGPTERC=0 D IRAD^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",54,0)
HOME ;
"RTN","DGPT101",55,0)
 S DGPTERC=0 D STATE^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",56,0)
 S DGPTERC=0 D CNTY^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",57,0)
 S DGPTERC=0 D ZIP^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",58,0)
MT ;
"RTN","DGPT101",59,0)
 S DGPTERC=0 D MT^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",60,0)
ERI ;
"RTN","DGPT101",61,0)
 S DGPTERC=0 I ("^K^"'[(U_DGPTERI_U))&(DGPTERI'=" ") S DGPTERC=125 D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",62,0)
INCOM ;
"RTN","DGPT101",63,0)
 I DGPTDDS<2911001 G GOOD
"RTN","DGPT101",64,0)
 S DGPTERC=0 D INC^DGPTAE01 I DGPTERC D ERR G:DGPTEDFL EXIT
"RTN","DGPT101",65,0)
GOOD ;
"RTN","DGPT101",66,0)
 W:'$D(ERROR) "."
"RTN","DGPT101",67,0)
 ;
"RTN","DGPT101",68,0)
EXIT ;
"RTN","DGPT101",69,0)
 K DGPTREC,DGPTORBD,DGPTLN,DGPTFI,DGPTMI,DGPTMRS,DGPTSTE,DGPTCTY,DGPTZIP,DGPTINC
"RTN","DGPT101",70,0)
 K DGPTSRA,DGPTTF,DGPTSRP,DGPTPOS1,DGPTEXA,DGPTEXI,DGPTMTC,DGPTDTD,DGPTDSP,DGPTDTY,DGPTDOP,DGPTDVA,DGPTDPD,DGPTDRF,DGPTDAS,DGPTDCP,DGPTDDXE,DGPTDDXO,DGPTDLR,DGPTDLC,DGPTDSC,DGPTDAGE,DGPTDRG,DGPTSTR
"RTN","DGPT101",71,0)
 K DGPT70LG,DGPT70SU,DGPT70DR,DGPT70X4,DGPTDXV1,DGPTDXV2
"RTN","DGPT101",72,0)
 Q
"RTN","DGPT101",73,0)
ERR ;
"RTN","DGPT101",74,0)
 D WRTERR^DGPTAE(DGPTERC,NODE,SEQ)
"RTN","DGPT101",75,0)
 S ERROR=1
"RTN","DGPT101",76,0)
 Q
"RTN","DGPT101",77,0)
FMDT(X) ; change to fm date for y2k
"RTN","DGPT101",78,0)
 N Y
"RTN","DGPT101",79,0)
 D ^%DT
"RTN","DGPT101",80,0)
 Q Y
"RTN","DGPT101P")
0^8^B4195091
"RTN","DGPT101P",1,0)
DGPT101P ;ALB/MTC - Parse 101 record ; 12 NOV 92
"RTN","DGPT101P",2,0)
 ;;5.3;Registration;**164,678**;Aug 13, 1993
"RTN","DGPT101P",3,0)
 ;;
"RTN","DGPT101P",4,0)
SET ; Parse 101 record
"RTN","DGPT101P",5,0)
 ;
"RTN","DGPT101P",6,0)
 S DGPTDTS=$$FMDT^DGPT101($E(DGPTSTR,15,20))_"."_$E(DGPTSTR,21,24)
"RTN","DGPT101P",7,0)
 S DGPTPS=$E(DGPTSTR,5),DGPTSSN=$E(DGPTSTR,6,14),DGPTDTA=$E(DGPTSTR,15,24),DGPTFAC=$E(DGPTSTR,25,30),DGPTLN=$E(DGPTSTR,31,42),DGPTFI=$E(DGPTSTR,43),DGPTMI=$E(DGPTSTR,44)
"RTN","DGPT101P",8,0)
 S DGPTSRA=$E(DGPTSTR,45,46),DGPTTF=$E(DGPTSTR,47,52),DGPTSRP=$E(DGPTSTR,53),DGPTPOW=$E(DGPTSTR,54),DGPTMRS=$E(DGPTSTR,55),DGPTGEN=$E(DGPTSTR,56),DGPTDOB=$E(DGPTSTR,57,64),DGPTPOS1=$E(DGPTSTR,65),DGPTPOS2=$E(DGPTSTR,66),DGPTEXA=$E(DGPTSTR,67)
"RTN","DGPT101P",9,0)
 S DGPTEXI=$E(DGPTSTR,68),DGPTSTE=$E(DGPTSTR,69,70),DGPTCTY=$E(DGPTSTR,71,73),DGPTZIP=$E(DGPTSTR,74,78),DGPTMTC=$E(DGPTSTR,79,80),DGPTBY=$E(DGPTSTR,61,64)
"RTN","DGPT101P",10,0)
 S DGPTINC=$E(DGPTSTR,81,86),DGPTERI=$E(DGPTSTR,96)
"RTN","DGPT101P",11,0)
 Q
"RTN","DGPTAEE")
0^9^B10850349
"RTN","DGPTAEE",1,0)
DGPTAEE ;ALB/MTC - Austin Edit Checks Error Driver ; 23 NOV 92
"RTN","DGPTAEE",2,0)
 ;;5.3;Registration;**64,338,678**;Aug 13, 1993
"RTN","DGPTAEE",3,0)
 ;
"RTN","DGPTAEE",4,0)
EN ;-- entry point for list manager
"RTN","DGPTAEE",5,0)
 D BUILD
"RTN","DGPTAEE",6,0)
 Q
"RTN","DGPTAEE",7,0)
 ;
"RTN","DGPTAEE",8,0)
HDR ;-- header function for Editing List.
"RTN","DGPTAEE",9,0)
 S VALMHDR(1)="Patient : "_$P($G(^DPT(DFN,0)),U)
"RTN","DGPTAEE",10,0)
 S VALMHDR(2)="Admission Date : "_$$FTIME^VALM1($P(^DGPT(PTF,0),U,2))
"RTN","DGPTAEE",11,0)
 S VALMHDR(3)="Discharge Date : "_$$FTIME^VALM1($P(^DGPT(PTF,70),U))
"RTN","DGPTAEE",12,0)
 Q
"RTN","DGPTAEE",13,0)
 ;
"RTN","DGPTAEE",14,0)
BUILD ;-- this fuction will build the display array - similar to Austin's EAL
"RTN","DGPTAEE",15,0)
 ;
"RTN","DGPTAEE",16,0)
 Q:'$D(^TMP("AERROR",$J))!'($D(^TMP("AEDIT",$J)))
"RTN","DGPTAEE",17,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",18,0)
 N NODE,SEQ,DGER,ERSTR,SP,ROU,REC
"RTN","DGPTAEE",19,0)
 S (VALMCNT,SEQ)=0,NODE="",SP=" "
"RTN","DGPTAEE",20,0)
 F  S SEQ=$O(^TMP("AERROR",$J,SEQ)) Q:SEQ=""  S NODE=$O(^(SEQ,0)) I NODE="N101"!(NODE="N401")!(NODE="N501")!(NODE="N601")!(NODE="N701")!(NODE="N702") D
"RTN","DGPTAEE",21,0)
 . S ERSTR=$P($T(@("ER"_$E(NODE,2,4))+1),";;",2) D LOADER
"RTN","DGPTAEE",22,0)
 . S REC=^TMP("AEDIT",$J,NODE,SEQ)
"RTN","DGPTAEE",23,0)
 . S ROU="H"_$E(NODE,2,4)_"^"_$S(NODE="N101"!(NODE="N401")!(NODE="N501"):"DGPTAEE1",1:"DGPTAEE2")_"(REC)" D @ROU
"RTN","DGPTAEE",24,0)
 Q
"RTN","DGPTAEE",25,0)
 ;
"RTN","DGPTAEE",26,0)
EXIT ;-- exit point for list manager
"RTN","DGPTAEE",27,0)
 K ^TMP("AD",$J)
"RTN","DGPTAEE",28,0)
 D CLEAR^VALM1
"RTN","DGPTAEE",29,0)
 Q
"RTN","DGPTAEE",30,0)
 ;
"RTN","DGPTAEE",31,0)
LOADER ;-- This function will load the array DGER
"RTN","DGPTAEE",32,0)
 ;
"RTN","DGPTAEE",33,0)
 N Y,J,X1,X2
"RTN","DGPTAEE",34,0)
 K DGER
"RTN","DGPTAEE",35,0)
 S DGER=""
"RTN","DGPTAEE",36,0)
 S Y="",J=0 F  S J=$O(^TMP("AERROR",$J,SEQ,NODE,J)) Q:'J  S X2=$G(^(J)) D
"RTN","DGPTAEE",37,0)
 . S X1=$O(^DGP(45.64,"B",X2,0)),Y=$G(^DGP(45.64,X1,0))
"RTN","DGPTAEE",38,0)
 . S DGER(J)=Y,DGER=DGER_$P(ERSTR,U,$P(Y,U,3))_","
"RTN","DGPTAEE",39,0)
 S DGER=$E(DGER,1,$L(DGER)-1)
"RTN","DGPTAEE",40,0)
 Q
"RTN","DGPTAEE",41,0)
 ;
"RTN","DGPTAEE",42,0)
WRER ;-- This function will write errors in DGER into ^TMP
"RTN","DGPTAEE",43,0)
 ;
"RTN","DGPTAEE",44,0)
 N I
"RTN","DGPTAEE",45,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)="Error Code(s) : "
"RTN","DGPTAEE",46,0)
 S I="" F  S I=$O(DGER(I)) Q:'I  D
"RTN","DGPTAEE",47,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=$P(DGER(I),U)_" - "_$P(DGER(I),U,2)
"RTN","DGPTAEE",48,0)
 D TRTCHK
"RTN","DGPTAEE",49,0)
 I '$G(DGPTERR) S VALMCNT=VALMCNT+1,$P(^TMP("AD",$J,VALMCNT,0),"=",80)=""
"RTN","DGPTAEE",50,0)
 K DGPTERR
"RTN","DGPTAEE",51,0)
 Q
"RTN","DGPTAEE",52,0)
 ;
"RTN","DGPTAEE",53,0)
 ;-- This data is used to determine where in the output string a '#'
"RTN","DGPTAEE",54,0)
 ;   should be printed. The format of the each datum is:
"RTN","DGPTAEE",55,0)
 ;      <position in transmission string>:<position in display string>
"RTN","DGPTAEE",56,0)
 ;
"RTN","DGPTAEE",57,0)
ER101 ;-- 101 error position string
"RTN","DGPTAEE",58,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:52^7:55^8:62^9:66^10:70^11:73^12:1^13:15^14:20^15:24^16:27^17:34^18:41^19:44^20:52^^^^24:71
"RTN","DGPTAEE",59,0)
 ;
"RTN","DGPTAEE",60,0)
ER501 ;-- 501 error position string
"RTN","DGPTAEE",61,0)
 ;;1:1^2:8^3:18^4:32^5:47^6:56^7:60^8:64^9:69^10:1^11:9^12:17^13:25^14:33^15:1^16:14^17:23^18:27^19:31^20:34^21:37^22:42^23:45:^24:50^
"RTN","DGPTAEE",62,0)
 ;
"RTN","DGPTAEE",63,0)
ER401 ;-- 401 error position string
"RTN","DGPTAEE",64,0)
 ;;1:1^2:8^3:18^4:32^5:48^6:53^7:59^8:64^9:1^10:9^11:17^12:25^13:33^14:42^15:52^
"RTN","DGPTAEE",65,0)
 ;
"RTN","DGPTAEE",66,0)
ER601 ;-- 601 error position string
"RTN","DGPTAEE",67,0)
 ;;1:1^2:10^3:18^4:32^5:47^6:52^7:57^8:1^9:9^10:17^11:25^12:33^
"RTN","DGPTAEE",68,0)
 ;
"RTN","DGPTAEE",69,0)
ER701 ;-- 701 error position string
"RTN","DGPTAEE",70,0)
 ;;1:1^2:8^3:18^4:32^5:46^6:51^7:56^8:62^9:69^10:75^11:1^12:8^13:12^14:16^15:23^16:28^17:39^18:48^19:52^20:55^21:58^22:63^23:66^
"RTN","DGPTAEE",71,0)
 ;
"RTN","DGPTAEE",72,0)
ER702 ;-- 702 error position string
"RTN","DGPTAEE",73,0)
 ;;1:1^2:8^3:18^4:32^5:1^6:9^7:17^8:25^9:33^10:41^11:49^12:57^13:65^
"RTN","DGPTAEE",74,0)
 ;
"RTN","DGPTAEE",75,0)
TRTCHK ;-- Check for treating spec error flag and print error message if flag
"RTN","DGPTAEE",76,0)
 ;-- exists.
"RTN","DGPTAEE",77,0)
 N I,X
"RTN","DGPTAEE",78,0)
 S I=0,I=$O(DGPTSER(I)) G:'I TRTCHKQ
"RTN","DGPTAEE",79,0)
 I $G(DGPTSER(+I))=1 D
"RTN","DGPTAEE",80,0)
 . S X="*** Bed section code is not active for the date/time period listed. ***"
"RTN","DGPTAEE",81,0)
 . S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X,DGPTERR=1
"RTN","DGPTAEE",82,0)
TRTCHKQ K DGPTSER(+I)
"RTN","DGPTAEE",83,0)
 Q
"RTN","DGPTAEE1")
0^10^B21418190
"RTN","DGPTAEE1",1,0)
DGPTAEE1 ;ALB/MTC - Austin Edits EAL Listing Continued ; 14 DEC 92
"RTN","DGPTAEE1",2,0)
 ;;5.3;Registration;**338,565,678**;Aug 13, 1993
"RTN","DGPTAEE1",3,0)
 ;
"RTN","DGPTAEE1",4,0)
H101(REC) ;-- 101 header
"RTN","DGPTAEE1",5,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",6,0)
 N I,X,X1,X2
"RTN","DGPTAEE1",7,0)
 S X="ADM    SSN       ADM-DATE-TIME LAST-NAME     INIT SOU FROM  SOP POW MS SX"
"RTN","DGPTAEE1",8,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",9,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,42)_"   "_$E(REC,43,44)_"   "_$E(REC,45,46)_SP_$E(REC,47,52)_SP_$E(REC,53)_"   "_$E(REC,54)_"   "_$E(REC,55)_"  "_$E(REC,56)
"RTN","DGPTAEE1",10,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",11,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<12 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",12,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",13,0)
 S X="BIRTHDATE    POS AGO ION ST-CNTY  ZIP   MT INCOME MST CV CV-END      ERI"
"RTN","DGPTAEE1",14,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",15,0)
 S X=$E(REC,57,58)_SP_$E(REC,59,60)_SP_$E(REC,61,64)_"   "_$E(REC,65,66)_"    "_$E(REC,67)_"   "_$E(REC,68)_"  "_$E(REC,69,73)_"  "_$E(REC,74,78)_"  "_$E(REC,79,80)_SP_$E(REC,81,86)_"  "_$E(REC,87)_"   "_$E(REC,88)_" "_$E(REC,89,94)
"RTN","DGPTAEE1",16,0)
 S X=X_"    "_$E(REC,95)_"  "_$E(REC,96)
"RTN","DGPTAEE1",17,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",18,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>11 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",19,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",20,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",21,0)
 Q
"RTN","DGPTAEE1",22,0)
 ;
"RTN","DGPTAEE1",23,0)
H401(REC) ;-- 401 header
"RTN","DGPTAEE1",24,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",25,0)
 N X,X1,X2
"RTN","DGPTAEE1",26,0)
 S X="SURG   SSN       ADM-DATE-TIME SURG-DATE-TIME  SPEC CATEG TECH SOP"
"RTN","DGPTAEE1",27,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",28,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_"  "_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_"   "
"RTN","DGPTAEE1",29,0)
 S X=X_$E(REC,41,42)_"  "_$E(REC,43)_"   "_$E(REC,44)_"   "_$E(REC,45)_"   "_$E(REC,46)
"RTN","DGPTAEE1",30,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",31,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<9 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",32,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",33,0)
 S X="------------SURGICAL CODES-------------  PHY SSN   TRNSPLNT"
"RTN","DGPTAEE1",34,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",35,0)
 S X=$E(REC,47,53)_SP_$E(REC,54,60)_SP_$E(REC,61,67)_SP_$E(REC,68,74)_SP_$E(REC,75,81)_"  "_$E(REC,82,90)_"     "_$E(REC,91)
"RTN","DGPTAEE1",36,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",37,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>8 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",38,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",39,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",40,0)
 Q
"RTN","DGPTAEE1",41,0)
 ;
"RTN","DGPTAEE1",42,0)
H501(REC) ;-- 501 header
"RTN","DGPTAEE1",43,0)
 ; INPUT : REC - Node that contains the error
"RTN","DGPTAEE1",44,0)
 N X,X1,X2
"RTN","DGPTAEE1",45,0)
 S X="DIAG   SSN       ADM-DATE-TIME MOVE DATE-TIME CDR CODE SPC LVE PASS SCI"
"RTN","DGPTAEE1",46,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",47,0)
 S X=$E(REC,1,4)_"  "_$E(REC,5,14)_SP_$E(REC,15,16)_SP_$E(REC,17,18)_SP_$E(REC,19,20)_SP_$E(REC,21,24)_SP_$E(REC,31,32)_SP_$E(REC,33,34)_SP_$E(REC,35,36)_SP_$E(REC,37,40)_SP
"RTN","DGPTAEE1",48,0)
 S X=X_"  "_$E(REC,41,46)_"  "_$E(REC,47,48)_"  "_$E(REC,49,51)_"  "_$E(REC,52,54)_"  "_$E(REC,55)
"RTN","DGPTAEE1",49,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",50,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")<10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",51,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",52,0)
 S X="-----------DIAGNOSTIC CODES------------"
"RTN","DGPTAEE1",53,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",54,0)
 S X=$E(REC,56,62)_SP_$E(REC,63,69)_SP_$E(REC,70,76)_SP_$E(REC,77,83)_SP_$E(REC,84,90)
"RTN","DGPTAEE1",55,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",56,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")=10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",57,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",58,0)
 S X="SSN ATTY PHY PHY LOC  CDE BSI LI SI DRUG A4 A5   SC AO IR EC"
"RTN","DGPTAEE1",59,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",60,0)
 S X=$E(REC,91,99)_"    "_$E(REC,100,105)_"    "_$E(REC,106,107)_"  "_$E(REC,108)_"   "_$E(REC,109)_"  "_$E(REC,110)_SP_$E(REC,111,114)_"  "_$E(REC,115)_SP_$E(REC,116,119)_"  "_$E(REC,120)_"  "_$E(REC,121)_"  "_$E(REC,122)_"  "_$E(REC,123)
"RTN","DGPTAEE1",61,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",62,0)
 S X="",$P(X," ",80)=" " F X1=1:1 S I=$P(DGER,",",X1) Q:I=""  I $P(I,":")>10 S X2=+$P(I,":",2),X=$E(X,1,X2-1)_"#"_$E(X,X2+1,80)
"RTN","DGPTAEE1",63,0)
 S VALMCNT=VALMCNT+1,^TMP("AD",$J,VALMCNT,0)=X
"RTN","DGPTAEE1",64,0)
 D WRER^DGPTAEE
"RTN","DGPTAEE1",65,0)
 Q
"RTN","DGPTAEE1",66,0)
 ;
"RTN","DGPTR0")
0^3^B24220162
"RTN","DGPTR0",1,0)
DGPTR0 ;MJK/JS/ADL - PTF TRANSMISSION ; 9/26/05 6:44pm
"RTN","DGPTR0",2,0)
 ;;5.3;Registration;**114,247,338,342,510,524,565,678**;Aug 13, 1993
"RTN","DGPTR0",3,0)
 ;;ADL;Update for CSV Project;;Mar 27, 2003
"RTN","DGPTR0",4,0)
 ; -- setup control data
"RTN","DGPTR0",5,0)
 ; ssn
"RTN","DGPTR0",6,0)
 S X=$P(DG10,U,9),Y=$S($E(X,10)="P":"P",1:" ")_$E(X_"         ",1,9)
"RTN","DGPTR0",7,0)
 ; -- adm d/t
"RTN","DGPTR0",8,0)
 S X=$P($P(DG0,U,2),"."),Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)_$E($P($P(DG0,U,2),".",2)_"0000",1,4)
"RTN","DGPTR0",9,0)
 ; -- facility #
"RTN","DGPTR0",10,0)
 S L=3,X=DG0,Z=3 D ENTER S Y=Y_$E($P(X,U,5)_"   ",1,3)
"RTN","DGPTR0",11,0)
 S DGHEAD=Y,Y="    "_Y D HEAD^DGPTR1
"RTN","DGPTR0",12,0)
 ;
"RTN","DGPTR0",13,0)
101 ; -- setup 101 transation
"RTN","DGPTR0",14,0)
 ; control data and name
"RTN","DGPTR0",15,0)
 ;S Y=$S(T1:"C",1:"N")_"101"_DGHEAD,DGNAM=$P(DG10,U,1) D DGNAM S Y=Y_$E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",16,0)
 S Y=$S(T1:"C",1:"N")_"101"_DGHEAD S Y=Y_$$PTFNMFT($P(DG10,U))
"RTN","DGPTR0",17,0)
 ; source of admission
"RTN","DGPTR0",18,0)
 S Y=Y_$S($D(^DIC(45.1,+DG101,0)):$J($P(^(0),U,1),2),1:"  ")
"RTN","DGPTR0",19,0)
 ; xfring fac and suffix
"RTN","DGPTR0",20,0)
 S L=3,X=DG101,Z=5 D ENTER S Y=Y_$E($P(X,U,6)_"   ",1,3)
"RTN","DGPTR0",21,0)
 ; source of payment
"RTN","DGPTR0",22,0)
 S Y=Y_$S("A0"[$P(DG0,U,5):" ",1:$J($P(DG101,U,3),1))
"RTN","DGPTR0",23,0)
 ;POW Location
"RTN","DGPTR0",24,0)
 S Y=Y_$S($P(DG52,U,5)="N":1,$P(DG52,U,5)'="Y":3,$P(DG52,U,6)>0&($P(DG52,U,6)<7):3+$P(DG52,U,6),$P(DG52,U,6)>6&($P(DG52,U,6)<9):$C($P(DG52,U,6)+58),1:" ")
"RTN","DGPTR0",25,0)
 ;marital status, sex
"RTN","DGPTR0",26,0)
 S Y=Y_$S($D(^DIC(11,+$P(DG10,U,5),0)):$E(^(0),1),1:" ")_$J($P(DG10,U,2),1)
"RTN","DGPTR0",27,0)
 ;  date of birth
"RTN","DGPTR0",28,0)
 S DGDOB=$P(DG10,U,3)\1,Y=Y_$E(DGDOB,4,5)_$E(DGDOB,6,7)_(1700+$E(DGDOB,1,3))
"RTN","DGPTR0",29,0)
 ; period of service
"RTN","DGPTR0",30,0)
 S DGPOS=$S($D(^DIC(21,+$P(DG32,U,3),0)):$P(^(0),U,3),1:"")
"RTN","DGPTR0",31,0)
 I $D(^DGPM(+$O(^DGPM("APTF",J,0)),"ODS")),+^("ODS") S DGPOS=6
"RTN","DGPTR0",32,0)
 ;-- if non vet admitting eligibility make POS 9
"RTN","DGPTR0",33,0)
 S DGPOS=$$CKPOS^DGPTUTL($P($G(^DGPT(PTF,101)),U,8),DGPOS)
"RTN","DGPTR0",34,0)
 S X=DGPOS,Z=1,L=2 D ENTER
"RTN","DGPTR0",35,0)
 ; agent orange
"RTN","DGPTR0",36,0)
 S G=" " S DGAO=$P(DG321,U,2) S:DGPOS=7 G=$S($P(DG321,U)'="Y":1,DGAO="N":2,DGAO="Y":3,1:4) S:(DGAO="Y")&($P(DG321,U,13)="K") G=5
"RTN","DGPTR0",37,0)
 ; rad exposure
"RTN","DGPTR0",38,0)
 S E=" " I "^0^2^4^5^7^8^Z^"[(U_DGPOS_U) S DGNT=$P(DG321,U,12),E=$S($P(DG321,U,3)'="Y":1,DGNT="N":2,DGNT="T":3,DGNT="B":4,1:" ")
"RTN","DGPTR0",39,0)
 S Y=Y_G_E K DGPOS,G,E
"RTN","DGPTR0",40,0)
 ; state code
"RTN","DGPTR0",41,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),0)):^(0),1:""),L=2,Z=3 D ENTER0
"RTN","DGPTR0",42,0)
 ; county code
"RTN","DGPTR0",43,0)
 S X=$S($D(^DIC(5,+$P(DG11,U,5),1,+$P(DG11,U,7),0)):^(0),1:""),L=3,Z=3 D ENTER0
"RTN","DGPTR0",44,0)
 ; zip code
"RTN","DGPTR0",45,0)
 S X=DG11,Z=6,L=5 D ENTER
"RTN","DGPTR0",46,0)
 ; means test
"RTN","DGPTR0",47,0)
 S Y=Y_$S($P(DG70,U,26)="Y":"AS",1:$E($P(DG0,U,10)_"  ",1,2))
"RTN","DGPTR0",48,0)
 ; income
"RTN","DGPTR0",49,0)
 I $L($P(DG101,U,7))>6 S Y=Y_"999999"
"RTN","DGPTR0",50,0)
 E  S X=DG101,Z=7,L=6 D ENTER0
"RTN","DGPTR0",51,0)
 ;MST
"RTN","DGPTR0",52,0)
 S X=$$GETSTAT^DGMSTAPI(+DG0) S Y=Y_$S(X<0:"U",1:$P(X,"^",2))
"RTN","DGPTR0",53,0)
 ;Combat Vet
"RTN","DGPTR0",54,0)
 S X=$$CVEDT^DGCV(+DG0,$P(DG0,"^",2)) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",55,0)
 S X=$P(X,"^",2)_"       " S Y=Y_$E(X,4,5)_$E(X,6,7)_$E(X,2,3)
"RTN","DGPTR0",56,0)
 ;Project 112/SHAD - send null till DG/664 is released
"RTN","DGPTR0",57,0)
 S Y=Y_" " ;S X=$$SHAD^SDCO22(+DG0) S Y=Y_$S((+X)>0:1,1:0)
"RTN","DGPTR0",58,0)
 ;Emergency Response Indicator
"RTN","DGPTR0",59,0)
 S X=$$EMGRES^DGUTL(+DG0) S Y=Y_$S("^K^"[X:X,1:" ")
"RTN","DGPTR0",60,0)
 D FILL^DGPTR2,SAVE
"RTN","DGPTR0",61,0)
 I T1 S Y=$E(Y,1,52)_" "_$E(Y,54,125)
"RTN","DGPTR0",62,0)
 ;
"RTN","DGPTR0",63,0)
P401 ; -- setup 401P transaction
"RTN","DGPTR0",64,0)
 G 401:'$D(^DGPT(J,"401P"))!(T1) S DG41=^("401P"),Y=$S(T1:"C",1:"N")_"401"_DGHEAD_"P"_"           "
"RTN","DGPTR0",65,0)
 S DG41=$S($D(^DGPT(J,"401P")):^("401P"),1:"")
"RTN","DGPTR0",66,0)
 S L=1 F K=1:1:5 S:'$P(DG41,U,K) DG41=$P(DG41,U,1,K-1)_U_$P(DG41,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",67,0)
 F I=1:1:5 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DG41,U,I),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",68,0)
 I $E(Y,40)'=" " D FILL^DGPTR2,SAVE
"RTN","DGPTR0",69,0)
 ;
"RTN","DGPTR0",70,0)
401 ; -- setup 401 transactions
"RTN","DGPTR0",71,0)
 G 501:'$D(^DGPT(J,"S")) K ^UTILITY($J,"S") S I=0
"RTN","DGPTR0",72,0)
SUR S I=$O(^DGPT(J,"S",I)) G 501:'I S DGSUR=^(I,0),DGAUX=$S($D(^DGPT(J,"S",I,300)):^(300),1:"") G SUR:'DGSUR
"RTN","DGPTR0",73,0)
 G SUR:DGSUR<T1!(DGSUR>T2) S DGSUD=+^(0)\1,^UTILITY($J,"S",DGSUD)=$S($D(^UTILITY($J,"S",DGSUD)):^(DGSUD),1:0)+1,F=$S(DGSUD<2871000:0,1:1)
"RTN","DGPTR0",74,0)
 I ^UTILITY($J,"S",DGSUD)>$S(F:3,1:2) D  I Y'=1 S DGERR=1 Q
"RTN","DGPTR0",75,0)
 .W !,"**There are more than ",$S(F:"three",1:"two")," surgeries on the same date**"
"RTN","DGPTR0",76,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="OK to continue?" D ^DIR K DIR
"RTN","DGPTR0",77,0)
 S Y=$S(T1:"C",1:"N")_"40"_^(DGSUD)_DGHEAD_$E(DGSUD,4,5)_$E(DGSUD,6,7)_$E(DGSUD,2,3)_$E($P(+DGSUR,".",2)_"0000",1,4)_$S($D(^DIC(45.3,+$P(DGSUR,U,3),0)):$P(^(0),U,1),1:"  ")
"RTN","DGPTR0",78,0)
 S L=1,X=DGSUR F Z=4:1:7 D ENTER
"RTN","DGPTR0",79,0)
 S L=1 F K=8:1:12 S:'$P(DGSUR,U,K) DGSUR=$P(DGSUR,U,1,K-1)_U_$P(DGSUR,U,K+1,99),K=K-1 S L=L+1 Q:L=5
"RTN","DGPTR0",80,0)
 F K=8:1:12 S DGPTTMP=$$ICDOP^ICDCODE(+$P(DGSUR,U,K),$$GETDATE^ICDGTDRG(J)),Y=Y_$S(+DGPTTMP>0:$J($P($P(DGPTTMP,U,2),".",1),2)_$E($P($P(DGPTTMP,U,2),".",2)_"   ",1,3),1:"     ")_"  "
"RTN","DGPTR0",81,0)
 ;-- att phy
"RTN","DGPTR0",82,0)
 S Y=Y_"         "
"RTN","DGPTR0",83,0)
 ;-- additional ptf question
"RTN","DGPTR0",84,0)
 S Y=Y_$E($P(DGAUX,U)_" ")
"RTN","DGPTR0",85,0)
 K DGAUX
"RTN","DGPTR0",86,0)
 D FILL^DGPTR2,SAVE G SUR
"RTN","DGPTR0",87,0)
501 G 501^DGPTR2
"RTN","DGPTR0",88,0)
 Q
"RTN","DGPTR0",89,0)
ENTER S Y=Y_$J($P(X,U,Z),L)
"RTN","DGPTR0",90,0)
 Q
"RTN","DGPTR0",91,0)
ENTER0 S Y=Y_$S($P(X,U,Z)]"":$E("000000",$L($P(X,U,Z))+1,L)_$P(X,U,Z),1:$J($P(X,U,Z),L))
"RTN","DGPTR0",92,0)
 Q
"RTN","DGPTR0",93,0)
SAVE D START^DGPTR1 S:'DGERR ^XMB(3.9,DGXMZ,2,DGCNT,0)=Y,DGCNT=DGCNT+1
"RTN","DGPTR0",94,0)
 I DGERR'>0 S DGACNT=DGACNT+1,^TMP("AEDIT",$J,$E(Y,1,4),DGACNT)=Y
"RTN","DGPTR0",95,0)
Q Q
"RTN","DGPTR0",96,0)
DGNAM S X=DGNAM I X?.E.P F I=1:1:$L(X) S Z=$E(X,I) Q:Z=","  S:Z?.P&(Z]"") X=$E(X,1,I-1)_$E(X,I+1,$L(X)),I=I-1 Q:X'?.E.P
"RTN","DGPTR0",97,0)
 I X?.E.L D UP^DGHELP
"RTN","DGPTR0",98,0)
 S DGNAM=X
"RTN","DGPTR0",99,0)
 Q
"RTN","DGPTR0",100,0)
 ;
"RTN","DGPTR0",101,0)
PTFNMFT(DG10) ;this function will format the name of the patient for
"RTN","DGPTR0",102,0)
 ; transmission of the 101 record to Austin. In addition, this
"RTN","DGPTR0",103,0)
 ; function will be used by OPC so that the format will be consistent
"RTN","DGPTR0",104,0)
 ; for OPC and PTF.
"RTN","DGPTR0",105,0)
 ;  INPUT :   DG10 - .01 field from the patient record.
"RTN","DGPTR0",106,0)
 ;  OUTPUT:   name in the format proper format.
"RTN","DGPTR0",107,0)
 ;        A = <12 - characters of last name padded with blanks>
"RTN","DGPTR0",108,0)
 ;        B = <1  - first initial of fist name>
"RTN","DGPTR0",109,0)
 ;        C = <1  - first initial of middle name>
"RTN","DGPTR0",110,0)
 ;      returns :ABC <14 - characters>
"RTN","DGPTR0",111,0)
 N X,I
"RTN","DGPTR0",112,0)
 S DGNAM=DG10 D DGNAM
"RTN","DGPTR0",113,0)
 Q $E($P(DGNAM,",",1)_"           ",1,12)_$J($E($P(DGNAM,",",2),1),1)_$J($E($P($P(DGNAM,",",2)," ",2),1),1)
"RTN","DGPTR0",114,0)
 ;
"RTN","DGPTR1")
0^4^B25729227
"RTN","DGPTR1",1,0)
DGPTR1 ;ALB/MTC - PTF VERIFICATION ; 01 MAR 91 @0800
"RTN","DGPTR1",2,0)
 ;;5.3;Registration;**58,247,338,342,423,415,565,678**;Aug 13, 1993
"RTN","DGPTR1",3,0)
START S T=$E(Y,2,3),T=$S(T=40&($E(Y,28)="P"):"P40",1:T),ERR=$P($T(@("T"_T)),";;",2,999),W=$P($T(@(T)),";;",2,999),F=31 D L
"RTN","DGPTR1",4,0)
 I T=70 S ERR=$P($T(T701),";;",2,999),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",5,0)
 D @("D"_T) Q
"RTN","DGPTR1",6,0)
 K DGFILL
"RTN","DGPTR1",7,0)
 Q
"RTN","DGPTR1",8,0)
 ;
"RTN","DGPTR1",9,0)
L F H=1:1 S DGO=$P(W,U,H) Q:'DGO  F Z=1:1:$P(DGO,";",3) S DGL=$P(DGLOGIC,U,+DGO),X=$E(Y,F) D @("ERR:"_DGL) S F=F+1
"RTN","DGPTR1",10,0)
 Q
"RTN","DGPTR1",11,0)
 ;
"RTN","DGPTR1",12,0)
T10 ;;1:NAME^2:SOURCE OF ADM^3:TRANS FAC.^4:SOURCE OF PAY^5:POW^6:MARITAL ST^7:SEX^8:DOB^9:POS^10:VIETNAM^11:ION RADIATION^12:RESIDENCE^13:MEANS TEST^14:INCOME^15:MST^16:COMBAT VET^17:CV END DT^18:PROJ 112/SHAD^19:ERI
"RTN","DGPTR1",13,0)
 ;
"RTN","DGPTR1",14,0)
T70 ;;1:DT OF DISP.^2:DISCH BD SEC^3:TYPE OF DIS^4:OUT TREAT^5:VA AUS^6:PL OF DIS^7:REC FAC^8:ASIH DAYS^9:NOT USED^10:C&P STAT^11:DXLS^12:ONLY DX^13:PHY CDR
"RTN","DGPTR1",15,0)
 ;T701 is part 2 of T70
"RTN","DGPTR1",16,0)
T701 ;;1:PHY SPEC^2:%SC^3:LEGION^4:SUICIDE^5:DRUG^6:AXIS-IV^7:AXIS-V^8:SC^9:EXP^10:MST^11:HNC^12:ETHNICITY^13:RACE^14:COMBAT VET
"RTN","DGPTR1",17,0)
 ;
"RTN","DGPTR1",18,0)
T50 ;;1:DT OF MVMT^2:LOSING BD SEC CDR^3:LOSING BD SEC^4:LEAVE DAYS^5:PASS DAYS^6:SCI^7:DIAG^8:DOCTOR'S SSN^9:PHY CDR^10:PHY SPEC^11:DISCHARGE STAT^^^^^16:LEGION^17:SUICIDE^18:DRUG^19:AXIS-IV^20:AXIS-V^21:SC^22:EXP^23:MST^24:HNC
"RTN","DGPTR1",19,0)
 ;
"RTN","DGPTR1",20,0)
T53 ;;1:DATE OF PHYSICAL MOVEMENT^2:LOSING PHYSICAL CDR^3:LOSING PHYSICAL SPECIALTY^4:TR SPECIALTY CDR^5:TR SPECIALTY^6:LEAVE DAYS^7:PASS DAYS^8:DOCTOR'S SSN (NOT USED)
"RTN","DGPTR1",21,0)
 ;
"RTN","DGPTR1",22,0)
T40 ;;1:DATE OF SURGERY^2:SURG SPEC.^3:CAT CHIEF SURGEON^4:CAT FIRST ASS^5:ANEST. TECH.^6:SOURCE OF PAY^7:OP CODE^8:DOCTOR'S SSN (NOT USED)^^^^^13:TRANSPLANT STATUS
"RTN","DGPTR1",23,0)
 ;
"RTN","DGPTR1",24,0)
TP40 ;;1:OP CODE
"RTN","DGPTR1",25,0)
 ;
"RTN","DGPTR1",26,0)
T60 ;;1:DATE OF PROCEDURE^2:LOSING BD SEC^3:DIALYSIS TYPE^4:NUMBER OF TREATMENTS^5:PROCEDURE CODE
"RTN","DGPTR1",27,0)
 ;
"RTN","DGPTR1",28,0)
LOGIC ;;X'?.N^X'?.A^X'=" "^X'?.N&(X'=" ")^X'?.A&(X'=" ")^0^X'?.N&(X'="X")^X'=" "&(X'="P")^X="E"^X="Y"^X=" "^X'="A"&(X'=" ")^(X'?.A)&(X'?.N)&(X'=" ")^(X'?.N)&('$P(DG0,U,4))^((T1)&(X'=" "))!(('T1)&(X'?.N)&('$P(DG0,U,4)))
"RTN","DGPTR1",29,0)
 ;
"RTN","DGPTR1",30,0)
 ; edit check# ; edit field ; # x check preformed ; display error name #
"RTN","DGPTR1",31,0)
10 ;;6;;12;1^2;1;1;1^5;1;1;1^1;2;1;2^2;2;1;2^4;3;3;3^6;;3;3^4;4;1;4^6;5;1;5^2;6;1;6^2;7;1;7^1;8;8;8^6;;1;9^11;9;1;9^4;10;1;10^4;10;1;11^1;11;5;12^7;11;5;12^2;12;1;13^6;;1;13^1;;6;14^2;;1;15^1;;1;16^4;;6;17^3;;1;18^5;;1;19^3;;29
"RTN","DGPTR1",32,0)
 ;
"RTN","DGPTR1",33,0)
70 ;;1;1;10;1^1;2;2;2^1;3;1;3^4;4;1;4^4;5;1;5^6;;1;6^4;7;3;7^6;;3;7^4;8;3;8^6;9;1;9^1;10;1;10^9;11;1;11^11;11;2;11^6;;3;11^10;11;1;11^6;;1;12^15;;6;13
"RTN","DGPTR1",34,0)
 ;701 is part 2 of 70
"RTN","DGPTR1",35,0)
701 ;;15;;2;1^1;;3;2^4;;1;3^4;;1;4^12;;1;5^4;;3;5^4;;1;6^4;;4;7^4;;1;8^5;;3;9^5;;1;10^5;;1;11^13;12;2;12^13;13;12;13^5;;1;14^3;;17
"RTN","DGPTR1",36,0)
 ;
"RTN","DGPTR1",37,0)
50 ;;1;1;10;1^1;;6;2^1;3;2;3^1;4;3;4^1;5;3;5^6;;1;6^11;7;3;7^6;;32;7^6;;9;8^14;;6;9^14;;2;10^6;;1;11^4;;1;16^4;;1;17^12;;1;18^4;;3;18^4;;1;19^4;;4;20^4;;1;21^5;;3;22^5;;1;23^5;;1;24
"RTN","DGPTR1",38,0)
 ;
"RTN","DGPTR1",39,0)
53 ;;1;;10;1^1;;6;2^1;;2;3^1;;6;4^1;;2;5^1;;3;6^1;;3;7^3;;9;8^3;;54;
"RTN","DGPTR1",40,0)
 ;
"RTN","DGPTR1",41,0)
40 ;;1;1;10;1^1;2;2;2^11;3;1;3^4;4;1;4^6;5;1;5^4;6;1;6^11;7;2;7^6;;3;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^6;;5;7^3;7;2;7^3;;9;8^4;;1;13^3;;34;
"RTN","DGPTR1",42,0)
 ;
"RTN","DGPTR1",43,0)
P40 ;;8;;1;^3;;11;^11;1;2;1^6;;3;1^3;1;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^6;;5;1^3;;2;1^3;;48
"RTN","DGPTR1",44,0)
 ;
"RTN","DGPTR1",45,0)
60 ;;1;1;10;1^1;2;2;2^4;3;1;3^4;4;3;4^11;5;3;5^6;;32;5^3;;44
"RTN","DGPTR1",46,0)
 ;
"RTN","DGPTR1",47,0)
ERR S DGERR=1
"RTN","DGPTR1",48,0)
 W !,T,$S(T["H":" ",1:$E(Y,4)),"  "
"RTN","DGPTR1",49,0)
 W:"45"[$E(T,1) $E(Y,31,32),"-",$E(Y,33,34),"-",$E(Y,35,36),"@",$E(Y,37,40)
"RTN","DGPTR1",50,0)
 W ?25,$P($P(ERR,U,$P(DGO,";",4)),":",2),?40,"COL.",F,"  VALUE: ",$S($E(Y,F)=" ":"BLANK",1:$E(Y,F))
"RTN","DGPTR1",51,0)
 S I=$S('$D(I):1,I>0:I,1:1),^(I)=$S($D(^UTILITY("DG",$J,T_$S(T["H":"",1:$E(Y,4)),I)):^(I),1:U) I $P(DGO,";",2),^(I)'[(U_$P(DGO,";",2)_U) S ^(I)=^(I)_$P(DGO,";",2)_U
"RTN","DGPTR1",52,0)
 Q
"RTN","DGPTR1",53,0)
 ;
"RTN","DGPTR1",54,0)
D10 I $E(Y,66)="Z" S (F,H)=68,W="11;10;1;10" D L
"RTN","DGPTR1",55,0)
 I $P(^DGPT(J,0),"^",4),$P(^(0),"^",10)="U",$D(^DGPT(J,70)),+^(70)>2890700 S F=79,DGO="2;12;1;12" D ERR
"RTN","DGPTR1",56,0)
 Q
"RTN","DGPTR1",57,0)
 ;
"RTN","DGPTR1",58,0)
D40 Q
"RTN","DGPTR1",59,0)
DP40 Q
"RTN","DGPTR1",60,0)
D70 I "467"'[$E(Y,43) S F=44,W="4;4;1;4^1;5;1;5^11;6;1;6" D L
"RTN","DGPTR1",61,0)
 Q
"RTN","DGPTR1",62,0)
D50 I "A0"[$P(DG0,U,5)!("A4"[$P(DG0,U,5))!('$D(^DGPT(J,70))) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",63,0)
 I $D(^DGPT(J,70)),$S(T1:1,1:+^(70)>2871000) S W="11;6;1;6",F=55 D L
"RTN","DGPTR1",64,0)
 I $E(Y,4)=1 S W="9;7;1;7",F=56 D L
"RTN","DGPTR1",65,0)
 I I=1,'T1 S W="1;11;1;11",F=108 D L
"RTN","DGPTR1",66,0)
 Q
"RTN","DGPTR1",67,0)
D53 Q
"RTN","DGPTR1",68,0)
D60 I $E(Y,43) S F=44,W="1;4;3;4" D L
"RTN","DGPTR1",69,0)
 Q
"RTN","DGPTR1",70,0)
HEAD S ERR="1:SSN^2:ADMISSION DATE^3:FACILITY #",W="8;1;1;1^1;1;9;1^1;2;10;2^1;3;3;3^6;;3;3",F=5,DGLOGIC=$P($T(LOGIC),";;",2),T="HEADER"
"RTN","DGPTR1",71,0)
 D L
"RTN","DGPTR1",72,0)
 Q
"RTN","DGPTR1",73,0)
LOG S DGLOGIC=$P($T(LOGIC),";;",2)
"RTN","DGPTR1",74,0)
 Q
"RTN","DGPTR1",75,0)
CEN S T=70,ERR=$P($T(T70),";;",2),W=$P($T(70),";;",2,999),W="13;9;1;9"_$P(W,"13;9;1;9",2,999),F=56 D L
"RTN","DGPTR1",76,0)
 S ERR=$P($T(T701),";;",2),W=$P($T(701),";;",2,999),F=72 D L
"RTN","DGPTR1",77,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
SD*5.3*459
"BLD",5939,0)
SD*5.3*459^SCHEDULING^0^3051101^y
"BLD",5939,1,0)
^^1^1^3051004^
"BLD",5939,1,1,0)
SD*5.3*459 HURRICANE KATRINA (ERI)
"BLD",5939,4,0)
^9.64PA^409.76^1
"BLD",5939,4,409.76,0)
409.76
"BLD",5939,4,409.76,222)
n^n^f^^n^^y^o^n
"BLD",5939,4,409.76,224)
N TMP S TMP=$P(^(0),"^",1) I ",340,3400,"[TMP
"BLD",5939,4,"B",409.76,409.76)

"BLD",5939,"ABPKG")
n
"BLD",5939,"INI")
PRE^SD53459P
"BLD",5939,"INIT")
POST^SD53459P
"BLD",5939,"KRN",0)
^9.67PA^8989.52^19
"BLD",5939,"KRN",.4,0)
.4
"BLD",5939,"KRN",.401,0)
.401
"BLD",5939,"KRN",.402,0)
.402
"BLD",5939,"KRN",.403,0)
.403
"BLD",5939,"KRN",.5,0)
.5
"BLD",5939,"KRN",.84,0)
.84
"BLD",5939,"KRN",3.6,0)
3.6
"BLD",5939,"KRN",3.8,0)
3.8
"BLD",5939,"KRN",9.2,0)
9.2
"BLD",5939,"KRN",9.8,0)
9.8
"BLD",5939,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",5939,"KRN",9.8,"NM",1,0)
SD53459A^^0^B31343591
"BLD",5939,"KRN",9.8,"NM",2,0)
SD53459P^^0^B3586996
"BLD",5939,"KRN",9.8,"NM",3,0)
SCDXMSG1^^0^B73573134
"BLD",5939,"KRN",9.8,"NM",4,0)
SCMSVUT1^^0^B67442969
"BLD",5939,"KRN",9.8,"NM",5,0)
SCMSVZPD^^0^B6520119
"BLD",5939,"KRN",9.8,"NM","B","SCDXMSG1",3)

"BLD",5939,"KRN",9.8,"NM","B","SCMSVUT1",4)

"BLD",5939,"KRN",9.8,"NM","B","SCMSVZPD",5)

"BLD",5939,"KRN",9.8,"NM","B","SD53459A",1)

"BLD",5939,"KRN",9.8,"NM","B","SD53459P",2)

"BLD",5939,"KRN",19,0)
19
"BLD",5939,"KRN",19.1,0)
19.1
"BLD",5939,"KRN",101,0)
101
"BLD",5939,"KRN",409.61,0)
409.61
"BLD",5939,"KRN",771,0)
771
"BLD",5939,"KRN",870,0)
870
"BLD",5939,"KRN",8989.51,0)
8989.51
"BLD",5939,"KRN",8989.52,0)
8989.52
"BLD",5939,"KRN",8994,0)
8994
"BLD",5939,"KRN","B",.4,.4)

"BLD",5939,"KRN","B",.401,.401)

"BLD",5939,"KRN","B",.402,.402)

"BLD",5939,"KRN","B",.403,.403)

"BLD",5939,"KRN","B",.5,.5)

"BLD",5939,"KRN","B",.84,.84)

"BLD",5939,"KRN","B",3.6,3.6)

"BLD",5939,"KRN","B",3.8,3.8)

"BLD",5939,"KRN","B",9.2,9.2)

"BLD",5939,"KRN","B",9.8,9.8)

"BLD",5939,"KRN","B",19,19)

"BLD",5939,"KRN","B",19.1,19.1)

"BLD",5939,"KRN","B",101,101)

"BLD",5939,"KRN","B",409.61,409.61)

"BLD",5939,"KRN","B",771,771)

"BLD",5939,"KRN","B",870,870)

"BLD",5939,"KRN","B",8989.51,8989.51)

"BLD",5939,"KRN","B",8989.52,8989.52)

"BLD",5939,"KRN","B",8994,8994)

"BLD",5939,"PRE")
SD53459P
"BLD",5939,"QUES",0)
^9.62^^
"BLD",5939,"REQB",0)
^9.611^1^1
"BLD",5939,"REQB",1,0)
DG*5.3*677^2
"BLD",5939,"REQB","B","DG*5.3*677",1)

"DATA",409.76,24,0)
400^N
"DATA",409.76,24,1)
Patient class is missing or invalid.
"DATA",409.76,24,2,0)
^^2^2^2970723^^
"DATA",409.76,24,2,1,0)
This value is currently set as a default by the software.  Reflag this entry 
"DATA",409.76,24,2,2,0)
for transmission.
"DATA",409.76,24,"COR")
S RTN=$$REFLG^SCENIA1
"DATA",409.76,192,0)
400^N
"DATA",409.76,192,1)
Patient class is missing or invalid.
"DATA",409.76,192,2,0)
^^2^2^2970723^^
"DATA",409.76,192,2,1,0)
This value is currently set as a default by the software.  Reflag this entry 
"DATA",409.76,192,2,2,0)
for transmission.
"DATA",409.76,192,"COR")
S RTN=$$REFLG^SCENIA1
"DATA",409.76,300,0)
340^N
"DATA",409.76,300,1)
Invalid Emergency Response Indicator.
"DATA",409.76,300,2,0)
^^1^1^3051003
"DATA",409.76,300,2,1,0)
Correct the patient's Emergency Response Indicator code through the Patient Demographics protocol.
"DATA",409.76,300,"CHK")

"DATA",409.76,300,"COR")
S RTN=$$LEDT^SCENIA1
"DATA",409.76,301,0)
3400^V
"DATA",409.76,301,1)
Invalid Emergency Response Indicator.
"DATA",409.76,301,2,0)
^^1^1^3051003
"DATA",409.76,301,2,1,0)
Correct the patient's Emergency Response Indicator code through the Patient Demographics protocol.
"DATA",409.76,301,"CHK")
S RES=$$ERI^SCMSVUT1(DATA)
"DATA",409.76,301,"COR")
S RTN=$$LEDT^SCENIA1
"FIA",409.76)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE
"FIA",409.76,0)
^SD(409.76,
"FIA",409.76,0,0)
409.76I
"FIA",409.76,0,1)
n^n^f^^n^^y^o^n
"FIA",409.76,0,10)

"FIA",409.76,0,11)
N TMP S TMP=$P(^(0),"^",1) I ",340,3400,"[TMP
"FIA",409.76,0,"RLRO")

"FIA",409.76,0,"VR")
5.3^SD
"FIA",409.76,409.76)
0
"FIA",409.76,409.7621)
0
"INI")
PRE^SD53459P
"INIT")
POST^SD53459P
"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
459^3051101^123456825
"PKG",16,22,1,"PAH",1,1,0)
^^1^1^3051101
"PKG",16,22,1,"PAH",1,1,1,0)
SD*5.3*459 HURRICANE KATRINA (ERI)
"PRE")
SD53459P
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","SCDXMSG1")
0^3^B73573134
"RTN","SCDXMSG1",1,0)
SCDXMSG1 ;ALB/JRP - AMB CARE MESSAGE BUILDER UTILS;08-MAY-1996 ; 6/21/05 2:08pm
"RTN","SCDXMSG1",2,0)
 ;;5.3;Scheduling;**44,55,70,77,85,66,143,142,162,172,180,239,245,254,293,325,387,459**;AUG 13, 1993
"RTN","SCDXMSG1",3,0)
 ;
"RTN","SCDXMSG1",4,0)
 ;-- Line tags for building HL7 segment
"RTN","SCDXMSG1",5,0)
BLDEVN S VAFEVN=$$EN^VAFHLEVN(EVNTHL7,ENCNDT,VAFSTR,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",6,0)
 ;SD*5.3*387 replaced EVNTDATE with ENCNDT
"RTN","SCDXMSG1",7,0)
 Q
"RTN","SCDXMSG1",8,0)
BLDPID S VAFPID=$$EN^VAFHLPID(DFN,VAFSTR)
"RTN","SCDXMSG1",9,0)
 D SETMAR^SCMSVUT0(.VAFPID,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",10,0)
 Q
"RTN","SCDXMSG1",11,0)
BLDZPD S VAFZPD=$$EN1^VAFHLZPD(DFN,VAFSTR)
"RTN","SCDXMSG1",12,0)
 S VAFZPD=$$SETPOW^SCMSVUT0(DFN,$G(VAFZPD),HL("Q"),HL("FS"))
"RTN","SCDXMSG1",13,0)
 Q
"RTN","SCDXMSG1",14,0)
BLDPV1 D SETID^SCMSVUT0(ENCPTR,DELPTR)
"RTN","SCDXMSG1",15,0)
 S VAFPV1=$$EN^VAFHLPV1(ENCPTR,DELPTR,VAFSTR,1,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",16,0)
 Q
"RTN","SCDXMSG1",17,0)
BLDDG1 K @VAFARRY
"RTN","SCDXMSG1",18,0)
 D EN^VAFHLDG1(ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",19,0)
 Q
"RTN","SCDXMSG1",20,0)
BLDPR1 K @VAFARRY
"RTN","SCDXMSG1",21,0)
 D SETPRTY^SCMSVUT0(ENCPTR)
"RTN","SCDXMSG1",22,0)
 D EN^VAFHLPR1(ENCPTR,VAFSTR,HL("Q"),HL("FS"),HL("ECH"),VAFARRY)
"RTN","SCDXMSG1",23,0)
 Q
"RTN","SCDXMSG1",24,0)
BLDZEL N ELCOD,ELIGENC,I,VAFMSTDT
"RTN","SCDXMSG1",25,0)
 S VAFMSTDT=ENCDT
"RTN","SCDXMSG1",26,0)
 D EN1^VAFHLZEL(DFN,VAFSTR,1,.VAFZEL)
"RTN","SCDXMSG1",27,0)
 S ELCOD=$P($G(^SCE(ENCPTR,0)),"^",13),ELIGENC=$P($G(^DIC(8,+ELCOD,0)),"^",9)
"RTN","SCDXMSG1",28,0)
 S $P(VAFZEL(1),HL("FS"),3)=ELIGENC
"RTN","SCDXMSG1",29,0)
 Q
"RTN","SCDXMSG1",30,0)
BLDZIR K DGREL,DGINC,DGINR,DGDEP
"RTN","SCDXMSG1",31,0)
 D ALL^DGMTU21(DFN,"V",ENCDT,"R")
"RTN","SCDXMSG1",32,0)
 S VAFZIR=$$EN^VAFHLZIR(+$G(DGINR("V")),VAFSTR,1,ENCPTR)
"RTN","SCDXMSG1",33,0)
 K DGREL,DGINC,DGINR,DGDEP
"RTN","SCDXMSG1",34,0)
 Q
"RTN","SCDXMSG1",35,0)
BLDZCL K @VAFARRY
"RTN","SCDXMSG1",36,0)
 D EN^VAFHLZCL(DFN,ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",37,0)
 Q
"RTN","SCDXMSG1",38,0)
BLDZSC K @VAFARRY
"RTN","SCDXMSG1",39,0)
 D EN^VAFHLZSC(ENCPTR,VAFSTR,HL("Q"),HL("FS"),VAFARRY)
"RTN","SCDXMSG1",40,0)
 Q
"RTN","SCDXMSG1",41,0)
BLDZSP S VAFZSP=$$EN^VAFHLZSP(DFN,1,1)
"RTN","SCDXMSG1",42,0)
 S VAFZSP=$$SETVSI^SCMSVUT0(DFN,$G(VAFZSP),HL("Q"),HL("FS"))
"RTN","SCDXMSG1",43,0)
 Q
"RTN","SCDXMSG1",44,0)
BLDROL K @VAFARRY
"RTN","SCDXMSG1",45,0)
 N SCDXPRV,SCDXPAR,SCDXROL,PTRPRV,NODE,PRVNUM,TMP
"RTN","SCDXMSG1",46,0)
 D GETPRV^SDOE(ENCPTR,"SCDXPRV")
"RTN","SCDXMSG1",47,0)
 S PTRPRV=0
"RTN","SCDXMSG1",48,0)
 F PRVNUM=1:1  S PTRPRV=+$O(SCDXPRV(PTRPRV)) Q:('PTRPRV)  D
"RTN","SCDXMSG1",49,0)
 .K SCDXPAR,SCDXROL
"RTN","SCDXMSG1",50,0)
 .S NODE=SCDXPRV(PTRPRV)
"RTN","SCDXMSG1",51,0)
 .S SCDXPAR("PTR200")=+NODE
"RTN","SCDXMSG1",52,0)
 .S SCDXPAR("INSTID")=$$VID4XMIT^SCDXFU11(XMITPTR)_"-"_(+NODE)_"*"_PRVNUM
"RTN","SCDXMSG1",53,0)
 .S SCDXPAR("ACTION")="CO"
"RTN","SCDXMSG1",54,0)
 .S SCDXPAR("ALTROLE")=($TR($P(NODE,"^",4),"PS","10"))_$E(HL("ECH"),1)_HL("Q")_$E(HL("ECH"),1)_"VA01"
"RTN","SCDXMSG1",55,0)
 .S SCDXPAR("CODEONLY")=0
"RTN","SCDXMSG1",56,0)
 .S SCDXPAR("RDATE")=ENCDT
"RTN","SCDXMSG1",57,0)
 .D OUTPAT^VAFHLROL("SCDXPAR","SCDXROL",VAFSTR,HL("FS"),HL("ECH"),HL("Q"),240)
"RTN","SCDXMSG1",58,0)
 .K SCDXROL("ERROR"),SCDXROL("WARNING")
"RTN","SCDXMSG1",59,0)
 .M @VAFARRY@(PRVNUM)=SCDXROL
"RTN","SCDXMSG1",60,0)
 Q
"RTN","SCDXMSG1",61,0)
BLDPD1 S VAFPD1=$$EN^VAFHLPD1(DFN,VAFSTR)
"RTN","SCDXMSG1",62,0)
 Q
"RTN","SCDXMSG1",63,0)
BLDZEN S VAFZEN=$$EN^VAFHLZEN(DFN,VAFSTR,1,HL("Q"),HL("FS"))
"RTN","SCDXMSG1",64,0)
 Q
"RTN","SCDXMSG1",65,0)
 ;
"RTN","SCDXMSG1",66,0)
 ;-- Line tags for validating HL7 segments
"RTN","SCDXMSG1",67,0)
VLDEVN S ERROR=$$EN^SCMSVEVN(VAFEVN,HL("Q"),HL("FS"),VALERR)
"RTN","SCDXMSG1",68,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",69,0)
 Q
"RTN","SCDXMSG1",70,0)
VLDPID S ERROR=$$EN^SCMSVPID(.VAFPID,HL("Q"),HL("FS"),HL("ECH"),VALERR,ENCDT,EVNTHL7)
"RTN","SCDXMSG1",71,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",72,0)
 Q
"RTN","SCDXMSG1",73,0)
VLDZPD S ERROR=$$EN^SCMSVZPD(.VAFZPD,HL("Q"),HL("FS"),VALERR,ENCDT,NODE)
"RTN","SCDXMSG1",74,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",75,0)
 Q
"RTN","SCDXMSG1",76,0)
VLDPV1 S ERROR=$$EN^SCMSVPV1(VAFPV1,HL("Q"),HL("FS"),VALERR,NODE,EVNTHL7,ENCNDT)
"RTN","SCDXMSG1",77,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",78,0)
 Q
"RTN","SCDXMSG1",79,0)
VLDDG1 S ERROR=$$EN^SCMSVDG1(VAFARRY,HL("Q"),HL("FS"),ENCPTR,VALERR,ENCDT)
"RTN","SCDXMSG1",80,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",81,0)
 Q
"RTN","SCDXMSG1",82,0)
VLDPR1 S ERROR=$$EN^SCMSVPR1(VAFARRY,HL("Q"),HL("FS"),HL("ECH"),VALERR,ENCDT)
"RTN","SCDXMSG1",83,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",84,0)
 Q
"RTN","SCDXMSG1",85,0)
VLDZEL S ERROR=$$EN^SCMSVZEL(.VAFZEL,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",86,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",87,0)
 Q
"RTN","SCDXMSG1",88,0)
VLDZIR S ERROR=$$EN^SCMSVZIR(VAFZIR,HL("Q"),HL("FS"),VALERR)
"RTN","SCDXMSG1",89,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",90,0)
 Q
"RTN","SCDXMSG1",91,0)
VLDZCL S ERROR=$$EN^SCMSVZCL(VAFARRY,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",92,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",93,0)
 Q
"RTN","SCDXMSG1",94,0)
VLDZSC S ERROR=$$EN^SCMSVZSC(VAFARRY,HL("Q"),HL("FS"),VALERR,ENCPTR)
"RTN","SCDXMSG1",95,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",96,0)
 Q
"RTN","SCDXMSG1",97,0)
VLDZSP S ERROR=$$EN^SCMSVZSP(VAFZSP,HL("Q"),HL("FS"),VALERR,DFN)
"RTN","SCDXMSG1",98,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",99,0)
 Q
"RTN","SCDXMSG1",100,0)
VLDROL S ERROR=$$EN^SCMSVROL(VAFARRY,HL("Q"),HL("FS"),HL("ECH"),VALERR)
"RTN","SCDXMSG1",101,0)
 S:(ERROR>0) ERROR=0
"RTN","SCDXMSG1",102,0)
 Q
"RTN","SCDXMSG1",103,0)
VLDPD1 S ERROR=0
"RTN","SCDXMSG1",104,0)
 Q
"RTN","SCDXMSG1",105,0)
VLDZEN S ERROR=0
"RTN","SCDXMSG1",106,0)
 Q
"RTN","SCDXMSG1",107,0)
 ;
"RTN","SCDXMSG1",108,0)
 ;-- Line tags for copying HL7 segments into HL7 message
"RTN","SCDXMSG1",109,0)
CPYEVN N I
"RTN","SCDXMSG1",110,0)
 S @XMITARRY@(CURLINE)=VAFEVN
"RTN","SCDXMSG1",111,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",112,0)
 S I=""
"RTN","SCDXMSG1",113,0)
 F  S I=+$O(VAFEVN(I)) Q:('I)  D
"RTN","SCDXMSG1",114,0)
 .S @XMITARRY@(CURLINE,I)=VAFEVN(I)
"RTN","SCDXMSG1",115,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",116,0)
 Q
"RTN","SCDXMSG1",117,0)
CPYPID N I
"RTN","SCDXMSG1",118,0)
 S @XMITARRY@(CURLINE)=VAFPID
"RTN","SCDXMSG1",119,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",120,0)
 S I=""
"RTN","SCDXMSG1",121,0)
 F  S I=+$O(VAFPID(I)) Q:('I)  D
"RTN","SCDXMSG1",122,0)
 .S @XMITARRY@(CURLINE,I)=VAFPID(I)
"RTN","SCDXMSG1",123,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",124,0)
 Q
"RTN","SCDXMSG1",125,0)
CPYZPD N I
"RTN","SCDXMSG1",126,0)
 S @XMITARRY@(CURLINE)=VAFZPD
"RTN","SCDXMSG1",127,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",128,0)
 S I=""
"RTN","SCDXMSG1",129,0)
 F  S I=+$O(VAFZPD(I)) Q:('I)  D
"RTN","SCDXMSG1",130,0)
 .S @XMITARRY@(CURLINE,I)=VAFZPD(I)
"RTN","SCDXMSG1",131,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",132,0)
 Q
"RTN","SCDXMSG1",133,0)
CPYPV1 N I
"RTN","SCDXMSG1",134,0)
 S @XMITARRY@(CURLINE)=VAFPV1
"RTN","SCDXMSG1",135,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",136,0)
 S I=""
"RTN","SCDXMSG1",137,0)
 F  S I=+$O(VAFPV1(I)) Q:('I)  D
"RTN","SCDXMSG1",138,0)
 .S @XMITARRY@(CURLINE,I)=VAFPV1(I)
"RTN","SCDXMSG1",139,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",140,0)
 Q
"RTN","SCDXMSG1",141,0)
CPYDG1 N I,J,K
"RTN","SCDXMSG1",142,0)
 S I=""
"RTN","SCDXMSG1",143,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",144,0)
 .S J=""
"RTN","SCDXMSG1",145,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",146,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",147,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",148,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",149,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",150,0)
 Q
"RTN","SCDXMSG1",151,0)
CPYPR1 N I,J,K
"RTN","SCDXMSG1",152,0)
 S I=""
"RTN","SCDXMSG1",153,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",154,0)
 .S J=""
"RTN","SCDXMSG1",155,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",156,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",157,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",158,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",159,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",160,0)
 Q
"RTN","SCDXMSG1",161,0)
CPYZEL N I
"RTN","SCDXMSG1",162,0)
 S @XMITARRY@(CURLINE)=VAFZEL(1)
"RTN","SCDXMSG1",163,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",164,0)
 S I=""
"RTN","SCDXMSG1",165,0)
 F  S I=+$O(VAFZEL(1,I)) Q:('I)  D
"RTN","SCDXMSG1",166,0)
 .S @XMITARRY@(CURLINE,I)=VAFZEL(1,I)
"RTN","SCDXMSG1",167,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",168,0)
 Q
"RTN","SCDXMSG1",169,0)
CPYZIR N I
"RTN","SCDXMSG1",170,0)
 S @XMITARRY@(CURLINE)=VAFZIR
"RTN","SCDXMSG1",171,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",172,0)
 N I
"RTN","SCDXMSG1",173,0)
 S I=""
"RTN","SCDXMSG1",174,0)
 F  S I=+$O(VAFZIR(I)) Q:('I)  D
"RTN","SCDXMSG1",175,0)
 .S @XMITARRY@(CURLINE,I)=VAFZIR(I)
"RTN","SCDXMSG1",176,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",177,0)
 Q
"RTN","SCDXMSG1",178,0)
CPYZCL N I,J,K
"RTN","SCDXMSG1",179,0)
 S I=""
"RTN","SCDXMSG1",180,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",181,0)
 .S J=""
"RTN","SCDXMSG1",182,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",183,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",184,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",185,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",186,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",187,0)
 Q
"RTN","SCDXMSG1",188,0)
CPYZSC N I,J,K
"RTN","SCDXMSG1",189,0)
 S I=""
"RTN","SCDXMSG1",190,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",191,0)
 .S J=""
"RTN","SCDXMSG1",192,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",193,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",194,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",195,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",196,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",197,0)
 Q
"RTN","SCDXMSG1",198,0)
CPYZSP N I
"RTN","SCDXMSG1",199,0)
 S @XMITARRY@(CURLINE)=VAFZSP
"RTN","SCDXMSG1",200,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",201,0)
 S I=""
"RTN","SCDXMSG1",202,0)
 F  S I=+$O(VAFZSP(I)) Q:('I)  D
"RTN","SCDXMSG1",203,0)
 .S @XMITARRY@(CURLINE,I)=VAFZSP(I)
"RTN","SCDXMSG1",204,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",205,0)
 Q
"RTN","SCDXMSG1",206,0)
CPYROL N I,J,K
"RTN","SCDXMSG1",207,0)
 S I=""
"RTN","SCDXMSG1",208,0)
 F K=0:1 S I=+$O(@VAFARRY@(I)) Q:('I)  D
"RTN","SCDXMSG1",209,0)
 .S J=""
"RTN","SCDXMSG1",210,0)
 .F  S J=$O(@VAFARRY@(I,J)) Q:(J="")  D
"RTN","SCDXMSG1",211,0)
 ..S:('J) @XMITARRY@(CURLINE+K)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",212,0)
 ..S:(J) @XMITARRY@(CURLINE+K,J)=@VAFARRY@(I,J)
"RTN","SCDXMSG1",213,0)
 ..S LINESADD=LINESADD+1
"RTN","SCDXMSG1",214,0)
 S CURLINE=CURLINE+K-1
"RTN","SCDXMSG1",215,0)
 Q
"RTN","SCDXMSG1",216,0)
CPYPD1 N I
"RTN","SCDXMSG1",217,0)
 S @XMITARRY@(CURLINE)=VAFPD1
"RTN","SCDXMSG1",218,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",219,0)
 S I=""
"RTN","SCDXMSG1",220,0)
 F  S I=+$O(VAFPD1(I)) Q:('I)  D
"RTN","SCDXMSG1",221,0)
 .S @XMITARRY@(CURLINE,I)=VAFPD1(I)
"RTN","SCDXMSG1",222,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",223,0)
 Q
"RTN","SCDXMSG1",224,0)
CPYZEN N I
"RTN","SCDXMSG1",225,0)
 S @XMITARRY@(CURLINE)=VAFZEN
"RTN","SCDXMSG1",226,0)
 S LINESADD=LINESADD+1
"RTN","SCDXMSG1",227,0)
 S I=""
"RTN","SCDXMSG1",228,0)
 F  S I=+$O(VAFZEN(I)) Q:('I)  D
"RTN","SCDXMSG1",229,0)
 .S @XMITARRY@(CURLINE,I)=VAFZEN(I)
"RTN","SCDXMSG1",230,0)
 .S LINESADD=LINESADD+1
"RTN","SCDXMSG1",231,0)
 Q
"RTN","SCDXMSG1",232,0)
 ;
"RTN","SCDXMSG1",233,0)
 ;-- Line tags for deleting HL7 segments
"RTN","SCDXMSG1",234,0)
DELEVN K VAFEVN
"RTN","SCDXMSG1",235,0)
 Q
"RTN","SCDXMSG1",236,0)
DELPID K VAFPID
"RTN","SCDXMSG1",237,0)
 Q
"RTN","SCDXMSG1",238,0)
DELZPD K VAFZPD
"RTN","SCDXMSG1",239,0)
 Q
"RTN","SCDXMSG1",240,0)
DELPV1 K VAFPV1
"RTN","SCDXMSG1",241,0)
 Q
"RTN","SCDXMSG1",242,0)
DELDG1 K @VAFARRY
"RTN","SCDXMSG1",243,0)
 Q
"RTN","SCDXMSG1",244,0)
DELPR1 K @VAFARRY
"RTN","SCDXMSG1",245,0)
 Q
"RTN","SCDXMSG1",246,0)
DELZEL K VAFZEL
"RTN","SCDXMSG1",247,0)
 Q
"RTN","SCDXMSG1",248,0)
DELZIR K VAFZIR
"RTN","SCDXMSG1",249,0)
 Q
"RTN","SCDXMSG1",250,0)
DELZCL K @VAFARRY
"RTN","SCDXMSG1",251,0)
 Q
"RTN","SCDXMSG1",252,0)
DELZSC K @VAFARRY
"RTN","SCDXMSG1",253,0)
 Q
"RTN","SCDXMSG1",254,0)
DELZSP K VAFZSP
"RTN","SCDXMSG1",255,0)
 Q
"RTN","SCDXMSG1",256,0)
DELROL K @VAFARRY
"RTN","SCDXMSG1",257,0)
 Q
"RTN","SCDXMSG1",258,0)
DELPD1 K VAFPD1
"RTN","SCDXMSG1",259,0)
 Q
"RTN","SCDXMSG1",260,0)
DELZEN K VAFZEN
"RTN","SCDXMSG1",261,0)
 Q
"RTN","SCDXMSG1",262,0)
 ;
"RTN","SCDXMSG1",263,0)
 ;
"RTN","SCDXMSG1",264,0)
SEGMENTS(EVNTTYPE,SEGARRY) ;Build list of HL7 segments for a given
"RTN","SCDXMSG1",265,0)
 ; event type
"RTN","SCDXMSG1",266,0)
 ;
"RTN","SCDXMSG1",267,0)
 ;Input  : EVNTTYPE - Event type to build list for
"RTN","SCDXMSG1",268,0)
 ;                    A08 & A23 are the only types currently supported
"RTN","SCDXMSG1",269,0)
 ;                    (Defaults to A08)
"RTN","SCDXMSG1",270,0)
 ;         SEGARRY - Array to place output in (full global reference)
"RTN","SCDXMSG1",271,0)
 ;                   (Defaults to ^TMP("SCDX SEGMENTS",$J))
"RTN","SCDXMSG1",272,0)
 ;Output : None
"RTN","SCDXMSG1",273,0)
 ;           SEGARRY(Seq,Name) = Fields
"RTN","SCDXMSG1",274,0)
 ;             Seq - Sequencing number to order the segments as
"RTN","SCDXMSG1",275,0)
 ;                   they should be placed in the HL7 message
"RTN","SCDXMSG1",276,0)
 ;             Name - Name of HL7 segment
"RTN","SCDXMSG1",277,0)
 ;             Fields - List of fields used by Ambulatory Care
"RTN","SCDXMSG1",278,0)
 ;                      VAFSTR would be set to this value
"RTN","SCDXMSG1",279,0)
 ;       : MSH segment is not included
"RTN","SCDXMSG1",280,0)
 ;
"RTN","SCDXMSG1",281,0)
 ;Check input
"RTN","SCDXMSG1",282,0)
 S EVNTTYPE=$G(EVNTTYPE)
"RTN","SCDXMSG1",283,0)
 S:(EVNTTYPE'="A23") EVNTTYPE="A08"
"RTN","SCDXMSG1",284,0)
 S SEGARRY=$G(SEGARRY)
"RTN","SCDXMSG1",285,0)
 S:(SEGARRY="") SEGARRY="^TMP(""SCDX SEGMENTS"","_$J_")"
"RTN","SCDXMSG1",286,0)
 ;Segments used by A08 & A23
"RTN","SCDXMSG1",287,0)
 S @SEGARRY@(1,"EVN")="1,2"
"RTN","SCDXMSG1",288,0)
 S @SEGARRY@(2,"PID")="1,2,3,4,5,6,7,8,10N,11PC,13,14,16,17,19,22N"
"RTN","SCDXMSG1",289,0)
 S @SEGARRY@(3,"PD1")="3,4"
"RTN","SCDXMSG1",290,0)
 S @SEGARRY@(4,"PV1")="1,2,4,14,19,39,44,50"
"RTN","SCDXMSG1",291,0)
 ;Building list for A23 - add ZPD segment and quit
"RTN","SCDXMSG1",292,0)
 I (EVNTTYPE="A23") D  Q
"RTN","SCDXMSG1",293,0)
 .S @SEGARRY@(5,"ZPD")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,40"
"RTN","SCDXMSG1",294,0)
 S @SEGARRY@(5,"DG1")="1,2,3,4,5,15"
"RTN","SCDXMSG1",295,0)
 S @SEGARRY@(6,"PR1")="1,3,16"
"RTN","SCDXMSG1",296,0)
 S @SEGARRY@(7,"ROL")="1,2,3,4"
"RTN","SCDXMSG1",297,0)
 S @SEGARRY@(8,"ZPD")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,40"
"RTN","SCDXMSG1",298,0)
 S @SEGARRY@(9,"ZEL")="1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,29,37,38"
"RTN","SCDXMSG1",299,0)
 S @SEGARRY@(10,"ZIR")="1,2,3,4,5,6,7,8,9,10,11,12,13"
"RTN","SCDXMSG1",300,0)
 S @SEGARRY@(11,"ZCL")="1,2,3"
"RTN","SCDXMSG1",301,0)
 S @SEGARRY@(12,"ZSC")="1,2,3"
"RTN","SCDXMSG1",302,0)
 S @SEGARRY@(13,"ZSP")="1,2,3,4"
"RTN","SCDXMSG1",303,0)
 S @SEGARRY@(14,"ZEN")="1,2,3,4,5,6,7,8,9,10"
"RTN","SCDXMSG1",304,0)
 Q
"RTN","SCDXMSG1",305,0)
 ;
"RTN","SCDXMSG1",306,0)
UNWIND(XMITARRY,INSRTPNT) ;Remove all data that was put into HL7 message
"RTN","SCDXMSG1",307,0)
 ;
"RTN","SCDXMSG1",308,0)
 ;Input  : XMITARRY - Array containing HL7 message (full global ref)
"RTN","SCDXMSG1",309,0)
 ;                    (Defaults to ^TMP("HLS",$J))
"RTN","SCDXMSG1",310,0)
 ;         INSRTPNT - Where to begin deletion from (Defaults to 1)
"RTN","SCDXMSG1",311,0)
 ;Output : None
"RTN","SCDXMSG1",312,0)
 ;
"RTN","SCDXMSG1",313,0)
 ;Check input
"RTN","SCDXMSG1",314,0)
 S XMITARRY=$G(XMITARRY)
"RTN","SCDXMSG1",315,0)
 S:(XMITARRY="") XMITARRY="^TMP(""HLS"","_$J_")"
"RTN","SCDXMSG1",316,0)
 S INSRTPNT=$G(INSRTPNT)
"RTN","SCDXMSG1",317,0)
 S:(INSRTPNT="") INSRTPNT=1
"RTN","SCDXMSG1",318,0)
 ;Remove insertion point from array
"RTN","SCDXMSG1",319,0)
 K @XMITARRY@(INSRTPNT)
"RTN","SCDXMSG1",320,0)
 ;Remove everything from insertion point to end of array
"RTN","SCDXMSG1",321,0)
 F  S INSRTPNT=$O(@XMITARRY@(INSRTPNT)) Q:(INSRTPNT="")  K @XMITARRY@(INSRTPNT)
"RTN","SCDXMSG1",322,0)
 ;Done
"RTN","SCDXMSG1",323,0)
 Q
"RTN","SCMSVUT1")
0^4^B67442969
"RTN","SCMSVUT1",1,0)
SCMSVUT1 ;ALB/JLU;validation utility routine;06/19/99 ; 4/30/03 11:58am
"RTN","SCMSVUT1",2,0)
 ;;5.3;Scheduling;**66,143,180,239,247,258,296,295,321,341,387,459**;AUG 13,1993
"RTN","SCMSVUT1",3,0)
 ;06/19/99 ACS - Added CPT Modifier API calls to PROCCOD(DATA)
"RTN","SCMSVUT1",4,0)
 ;
"RTN","SCMSVUT1",5,0)
SEGERR(DATA,HLFS) ;
"RTN","SCMSVUT1",6,0)
 ;INPUT DATA - This is a check for the segment errors of null
"RTN","SCMSVUT1",7,0)
 ;      HLFS - The string separator character
"RTN","SCMSVUT1",8,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",9,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",10,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",11,0)
 Q 1
"RTN","SCMSVUT1",12,0)
 ;
"RTN","SCMSVUT1",13,0)
DODA(DATA) ;
"RTN","SCMSVUT1",14,0)
 ;INPUT   DATA - The FM date of death.
"RTN","SCMSVUT1",15,0)
 ;
"RTN","SCMSVUT1",16,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",17,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",18,0)
 N %DT,X,Y
"RTN","SCMSVUT1",19,0)
 S %DT="T",%DT(0)="-NOW",X=DATA
"RTN","SCMSVUT1",20,0)
 D ^%DT
"RTN","SCMSVUT1",21,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",22,0)
 ;
"RTN","SCMSVUT1",23,0)
DODB(DATA,ENCDT) ;
"RTN","SCMSVUT1",24,0)
 ;INPUT   DATA - The FM date of death
"RTN","SCMSVUT1",25,0)
 ;       ENCDT - The FM date of encounter
"RTN","SCMSVUT1",26,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",27,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",28,0)
 N %DT,X,Y
"RTN","SCMSVUT1",29,0)
 S %DT="T",%DT(0)=ENCDT,X=DATA
"RTN","SCMSVUT1",30,0)
 D ^%DT
"RTN","SCMSVUT1",31,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",32,0)
 ;
"RTN","SCMSVUT1",33,0)
DODL(DATA,ENCDT) ;
"RTN","SCMSVUT1",34,0)
 ;INPUT  DATA - The FM date of death
"RTN","SCMSVUT1",35,0)
 ;      ENCDT - The FM date of the encounter
"RTN","SCMSVUT1",36,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",37,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",38,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",39,0)
 I ENCDT<DATA Q 1
"RTN","SCMSVUT1",40,0)
 I ENCDT=DATA Q 1
"RTN","SCMSVUT1",41,0)
 N X1,X2,X
"RTN","SCMSVUT1",42,0)
 S X1=ENCDT,X2=DATA
"RTN","SCMSVUT1",43,0)
 D ^%DTC
"RTN","SCMSVUT1",44,0)
 I X>14 Q 0
"RTN","SCMSVUT1",45,0)
 Q 1
"RTN","SCMSVUT1",46,0)
 ;
"RTN","SCMSVUT1",47,0)
HOME(DATA) ;
"RTN","SCMSVUT1",48,0)
 ;INPUT   DATA - THe homeless indicator to be validated.
"RTN","SCMSVUT1",49,0)
 ;
"RTN","SCMSVUT1",50,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",51,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",52,0)
 Q 1
"RTN","SCMSVUT1",53,0)
 ;
"RTN","SCMSVUT1",54,0)
POW(DATA) ;
"RTN","SCMSVUT1",55,0)
 ;INPUT  DATA - The POW indicatort to be validated.
"RTN","SCMSVUT1",56,0)
 ;
"RTN","SCMSVUT1",57,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",58,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",59,0)
 I DATA'="N",DATA'="U",DATA'="Y" Q 0
"RTN","SCMSVUT1",60,0)
 Q 1
"RTN","SCMSVUT1",61,0)
 ;
"RTN","SCMSVUT1",62,0)
TYPINS(DATA) ;
"RTN","SCMSVUT1",63,0)
 ;INPUT  DATA - Type if insurance indicator to be validated.
"RTN","SCMSVUT1",64,0)
 ;
"RTN","SCMSVUT1",65,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",66,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",67,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",68,0)
 I DATA>-1,(DATA<13) Q 1
"RTN","SCMSVUT1",69,0)
 Q 0
"RTN","SCMSVUT1",70,0)
 ;
"RTN","SCMSVUT1",71,0)
PATCLSS(DATA) ;
"RTN","SCMSVUT1",72,0)
 ;INPUT  DATA - the patient's class
"RTN","SCMSVUT1",73,0)
 ;
"RTN","SCMSVUT1",74,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",75,0)
 I ("^O^I^")'[("^"_DATA_"^") Q 0
"RTN","SCMSVUT1",76,0)
 Q 1
"RTN","SCMSVUT1",77,0)
 ;
"RTN","SCMSVUT1",78,0)
POV(DATA) ;
"RTN","SCMSVUT1",79,0)
 ;INPUT DATA - the purpose of visit.
"RTN","SCMSVUT1",80,0)
 ;
"RTN","SCMSVUT1",81,0)
 N VAR
"RTN","SCMSVUT1",82,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",83,0)
 I $L(DATA)'=4 Q 0
"RTN","SCMSVUT1",84,0)
 I DATA?.A Q 0
"RTN","SCMSVUT1",85,0)
 S VAR=$E(DATA,1,2)
"RTN","SCMSVUT1",86,0)
 I VAR<1!(VAR>4) Q 0
"RTN","SCMSVUT1",87,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",88,0)
 I VAR<1!(VAR>9) Q 0
"RTN","SCMSVUT1",89,0)
 Q 1
"RTN","SCMSVUT1",90,0)
 ;
"RTN","SCMSVUT1",91,0)
COMPGEN(DATA) ;
"RTN","SCMSVUT1",92,0)
 ;INPUT DATA - checking computer generated.
"RTN","SCMSVUT1",93,0)
 ;
"RTN","SCMSVUT1",94,0)
 N VAR
"RTN","SCMSVUT1",95,0)
 S VAR=$E(DATA,3,4)
"RTN","SCMSVUT1",96,0)
 I VAR=10 Q 0
"RTN","SCMSVUT1",97,0)
 Q 1
"RTN","SCMSVUT1",98,0)
 ;
"RTN","SCMSVUT1",99,0)
LOCVIS(DATA) ;
"RTN","SCMSVUT1",100,0)
 ;INPUT DATA - Location of visit
"RTN","SCMSVUT1",101,0)
 ;
"RTN","SCMSVUT1",102,0)
 I DATA'=1,DATA'=6 Q 0
"RTN","SCMSVUT1",103,0)
 Q 1
"RTN","SCMSVUT1",104,0)
 ;
"RTN","SCMSVUT1",105,0)
FACNMBR(DATA) ;
"RTN","SCMSVUT1",106,0)
 ;INPUT DATA - The facility number
"RTN","SCMSVUT1",107,0)
 ;
"RTN","SCMSVUT1",108,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",109,0)
 I DATA'?3N.AN Q 0
"RTN","SCMSVUT1",110,0)
 I '$D(^DIC(4,"D",DATA)) Q 0
"RTN","SCMSVUT1",111,0)
 Q 1
"RTN","SCMSVUT1",112,0)
 ;
"RTN","SCMSVUT1",113,0)
FACACT(DATA,ENCDT,DIV) ;
"RTN","SCMSVUT1",114,0)
 ;INPUT DATA - The active flag of the facility number.
"RTN","SCMSVUT1",115,0)
 ;
"RTN","SCMSVUT1",116,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",117,0)
 I '$D(ENCDT) Q 0
"RTN","SCMSVUT1",118,0)
 I '$D(DIV) Q 0
"RTN","SCMSVUT1",119,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",120,0)
 N SITE
"RTN","SCMSVUT1",121,0)
 I DIV]"" S SITE=$$SITE^VASITE(ENCDT,DIV)
"RTN","SCMSVUT1",122,0)
 I DIV']"" S SITE=$$SITE^VASITE(ENCDT)
"RTN","SCMSVUT1",123,0)
 I DATA'=$P(SITE,U,3) Q 0
"RTN","SCMSVUT1",124,0)
 Q 1
"RTN","SCMSVUT1",125,0)
 ;
"RTN","SCMSVUT1",126,0)
ENCDT(DATA,XMTFLG) ;
"RTN","SCMSVUT1",127,0)
 ;INPUT DATA - The date/time of the encounter
"RTN","SCMSVUT1",128,0)
 ;    XMTFLG - Flag to check $$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",129,0)
 ;
"RTN","SCMSVUT1",130,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",131,0)
 S XMTFLG=$G(XMTFLG,0)
"RTN","SCMSVUT1",132,0)
 N %DT,X,Y
"RTN","SCMSVUT1",133,0)
 S %DT="T"
"RTN","SCMSVUT1",134,0)
 S X=DATA
"RTN","SCMSVUT1",135,0)
 D ^%DT
"RTN","SCMSVUT1",136,0)
 I Y=-1 Q 0
"RTN","SCMSVUT1",137,0)
 I XMTFLG Q 1
"RTN","SCMSVUT1",138,0)
 N VAR
"RTN","SCMSVUT1",139,0)
 S VAR=$$OKTOXMIT^SCDXFU04(DATA)
"RTN","SCMSVUT1",140,0)
 ;I +VAR=1 Q 1
"RTN","SCMSVUT1",141,0)
 I +VAR<4&(VAR'<0) Q 1  ;SD*5.3*247
"RTN","SCMSVUT1",142,0)
 Q 0
"RTN","SCMSVUT1",143,0)
 ;
"RTN","SCMSVUT1",144,0)
UNIQNMBR(DATA) ;
"RTN","SCMSVUT1",145,0)
 ;INPUT DATA - The unique number from PCE for the encounter
"RTN","SCMSVUT1",146,0)
 ;
"RTN","SCMSVUT1",147,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",148,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",149,0)
 I DATA=-1 Q 0
"RTN","SCMSVUT1",150,0)
 I DATA=0 Q 0
"RTN","SCMSVUT1",151,0)
 Q 1
"RTN","SCMSVUT1",152,0)
 ;
"RTN","SCMSVUT1",153,0)
SEGCHK(DATA,HLFS) ;
"RTN","SCMSVUT1",154,0)
 ;INPUT DATA - The segment to be checked.
"RTN","SCMSVUT1",155,0)
 ;      HLFS - The HL7 field separator
"RTN","SCMSVUT1",156,0)
 ;
"RTN","SCMSVUT1",157,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",158,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",159,0)
 I $L(DATA,HLFS)'>2 Q 0
"RTN","SCMSVUT1",160,0)
 Q 1
"RTN","SCMSVUT1",161,0)
 ;
"RTN","SCMSVUT1",162,0)
SEQNBR(DATA,SEQNBR) ;
"RTN","SCMSVUT1",163,0)
 ;INPUT DATA - The sequence number to be checked.
"RTN","SCMSVUT1",164,0)
 ;     SEQNBR - This is the previous seq number to compare to
"RTN","SCMSVUT1",165,0)
 ;
"RTN","SCMSVUT1",166,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",167,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",168,0)
 I +DATA'=+SEQNBR Q 0
"RTN","SCMSVUT1",169,0)
 S SEQNBR=SEQNBR+1
"RTN","SCMSVUT1",170,0)
 Q 1
"RTN","SCMSVUT1",171,0)
 ;
"RTN","SCMSVUT1",172,0)
DCODMTHD(DATA) ;
"RTN","SCMSVUT1",173,0)
 ;INPUT DATA - This is the coding method to be checked.
"RTN","SCMSVUT1",174,0)
 ;
"RTN","SCMSVUT1",175,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",176,0)
 I DATA'="I9" Q 0
"RTN","SCMSVUT1",177,0)
 Q 1
"RTN","SCMSVUT1",178,0)
 ;
"RTN","SCMSVUT1",179,0)
DIAGCOD(DATA,ENCDT) ;
"RTN","SCMSVUT1",180,0)
 ;INPUT DATA - This is the diagnosis code
"RTN","SCMSVUT1",181,0)
 ;     ENCDT - This is the encounter date
"RTN","SCMSVUT1",182,0)
 ;
"RTN","SCMSVUT1",183,0)
 N VAR
"RTN","SCMSVUT1",184,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",185,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",186,0)
 ;
"RTN","SCMSVUT1",187,0)
 ; CSV - change to use API
"RTN","SCMSVUT1",188,0)
 ;S VAR=$O(^ICD9("BA",DATA_" ",""))
"RTN","SCMSVUT1",189,0)
 ;I 'VAR Q 0
"RTN","SCMSVUT1",190,0)
 ;S VAR=$G(^ICD9(VAR,0))
"RTN","SCMSVUT1",191,0)
 ;I VAR']"" Q 0
"RTN","SCMSVUT1",192,0)
 ;this is the inactive flag
"RTN","SCMSVUT1",193,0)
 ;I $P(VAR,U,9)'=1 Q 1
"RTN","SCMSVUT1",194,0)
 ;S VAR=$P(VAR,U,11)
"RTN","SCMSVUT1",195,0)
 ;N %DT,X,Y
"RTN","SCMSVUT1",196,0)
 ;S %DT="ST",%DT(0)=-VAR,X=ENCDT
"RTN","SCMSVUT1",197,0)
 ;D ^%DT
"RTN","SCMSVUT1",198,0)
 ;Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",199,0)
 Q $P($$ICDDX^ICDCODE(DATA,ENCDT),"^",10)
"RTN","SCMSVUT1",200,0)
 ;
"RTN","SCMSVUT1",201,0)
PRIOR(DATA) ;
"RTN","SCMSVUT1",202,0)
 ;INPUT DATA - The priority of the diagnosis found
"RTN","SCMSVUT1",203,0)
 ;
"RTN","SCMSVUT1",204,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",205,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",206,0)
 I DATA=1 Q 1
"RTN","SCMSVUT1",207,0)
 Q 0
"RTN","SCMSVUT1",208,0)
 ;
"RTN","SCMSVUT1",209,0)
ELIGCODM(DATA) ;
"RTN","SCMSVUT1",210,0)
 ;INPUT DATA - The eligibility code
"RTN","SCMSVUT1",211,0)
 ;A CHECK FOR MISSING
"RTN","SCMSVUT1",212,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",213,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",214,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",215,0)
 Q 1
"RTN","SCMSVUT1",216,0)
 ;
"RTN","SCMSVUT1",217,0)
ELIGINCV(DATA) ;
"RTN","SCMSVUT1",218,0)
 ;INPUT DATA - Contains the eligibility code in the first piece and
"RTN","SCMSVUT1",219,0)
 ;the veteran status in the second.
"RTN","SCMSVUT1",220,0)
 ;
"RTN","SCMSVUT1",221,0)
 ;the following quit is to stop this edit check.
"RTN","SCMSVUT1",222,0)
 ;Per Austin 9/97 this is not needed.
"RTN","SCMSVUT1",223,0)
 Q 1
"RTN","SCMSVUT1",224,0)
 N VET,ELIG
"RTN","SCMSVUT1",225,0)
 S VET=$P(DATA,U,2)
"RTN","SCMSVUT1",226,0)
 S ELIG=$P(DATA,U,1)
"RTN","SCMSVUT1",227,0)
 I VET=1&((ELIG<1)!(ELIG>18)) Q 0
"RTN","SCMSVUT1",228,0)
 I VET=1,ELIG>5,ELIG<15 Q 0
"RTN","SCMSVUT1",229,0)
 I VET=0,ELIG<6 Q 0
"RTN","SCMSVUT1",230,0)
 I VET=0,ELIG=11 Q 0
"RTN","SCMSVUT1",231,0)
 I VET=0,ELIG>14,ELIG'=19 Q 0
"RTN","SCMSVUT1",232,0)
 Q 1
"RTN","SCMSVUT1",233,0)
 ;
"RTN","SCMSVUT1",234,0)
ELIGINCS(DATA) ;
"RTN","SCMSVUT1",235,0)
 ;INPUT DATA - Eligibility code
"RTN","SCMSVUT1",236,0)
 ;
"RTN","SCMSVUT1",237,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",238,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",239,0)
 I '$D(^DIC(8.1,DATA,0)) Q 0
"RTN","SCMSVUT1",240,0)
 I +$P(^DIC(8.1,DATA,0),U,7) Q 0
"RTN","SCMSVUT1",241,0)
 Q 1
"RTN","SCMSVUT1",242,0)
 ;
"RTN","SCMSVUT1",243,0)
VETSTAT(DATA) ;
"RTN","SCMSVUT1",244,0)
 ;INPUT DATA - The veteran status indicator
"RTN","SCMSVUT1",245,0)
 ;
"RTN","SCMSVUT1",246,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",247,0)
 I DATA'=0,DATA'=1 Q 0
"RTN","SCMSVUT1",248,0)
 Q 1
"RTN","SCMSVUT1",249,0)
 ;
"RTN","SCMSVUT1",250,0)
VETPOW(DATA,DFN) ;
"RTN","SCMSVUT1",251,0)
 ;INPUT DATA - veteran status to check with POW status.
"RTN","SCMSVUT1",252,0)
 ;       DFN - The DFN of the patient.
"RTN","SCMSVUT1",253,0)
 ;
"RTN","SCMSVUT1",254,0)
 N VAR,POW
"RTN","SCMSVUT1",255,0)
 I DATA=0 Q 1
"RTN","SCMSVUT1",256,0)
 S VAR=$G(^DPT(DFN,.52))
"RTN","SCMSVUT1",257,0)
 S POW=$S(VAR]"":$P(VAR,U,5),1:VAR)
"RTN","SCMSVUT1",258,0)
 I POW="" Q 1
"RTN","SCMSVUT1",259,0)
 I POW="Y"!(POW="N")!(POW="U") Q 1
"RTN","SCMSVUT1",260,0)
 Q 0
"RTN","SCMSVUT1",261,0)
 ;
"RTN","SCMSVUT1",262,0)
NMBRDEP(DATA) ;
"RTN","SCMSVUT1",263,0)
 ;INPUT DATA - the number of dependents
"RTN","SCMSVUT1",264,0)
 ;
"RTN","SCMSVUT1",265,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",266,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",267,0)
 I DATA="XX" Q 1
"RTN","SCMSVUT1",268,0)
 I DATA'?1.2N Q 0
"RTN","SCMSVUT1",269,0)
 I +DATA>99!(+DATA<0) Q 0
"RTN","SCMSVUT1",270,0)
 Q 1
"RTN","SCMSVUT1",271,0)
 ;
"RTN","SCMSVUT1",272,0)
PATINC(DATA) ;
"RTN","SCMSVUT1",273,0)
 ;INPUT DATA - The patient's income
"RTN","SCMSVUT1",274,0)
 ;
"RTN","SCMSVUT1",275,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",276,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",277,0)
 I DATA<0 Q 0
"RTN","SCMSVUT1",278,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",279,0)
 Q 1
"RTN","SCMSVUT1",280,0)
 ;
"RTN","SCMSVUT1",281,0)
MEANSTST(DATA) ;
"RTN","SCMSVUT1",282,0)
 ;INPUT DATA - The means test indicator
"RTN","SCMSVUT1",283,0)
 ;
"RTN","SCMSVUT1",284,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",285,0)
 S DATA=","_DATA_","
"RTN","SCMSVUT1",286,0)
 ; ** SD*296, added 'U' means test indicator to allowed list.
"RTN","SCMSVUT1",287,0)
 I ",AS,AN,N,X,C,G,U,"'[DATA Q 0
"RTN","SCMSVUT1",288,0)
 Q 1
"RTN","SCMSVUT1",289,0)
 ;
"RTN","SCMSVUT1",290,0)
DEPMEANS(DATA) ;
"RTN","SCMSVUT1",291,0)
 ;INPUT DATA - This variable contains the number of dependents in the
"RTN","SCMSVUT1",292,0)
 ;             first peice and the means test indicator in the second.
"RTN","SCMSVUT1",293,0)
 ;
"RTN","SCMSVUT1",294,0)
 N MT,DEP
"RTN","SCMSVUT1",295,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",296,0)
 S DEP=$P(DATA,U,1)
"RTN","SCMSVUT1",297,0)
 S MT=","_$P(DATA,U,2)_","
"RTN","SCMSVUT1",298,0)
 I DEP="XX",(",AS,N,X,U,"'[MT) Q 0
"RTN","SCMSVUT1",299,0)
 Q 1
"RTN","SCMSVUT1",300,0)
 ;
"RTN","SCMSVUT1",301,0)
CLASSQUE(DATA) ;
"RTN","SCMSVUT1",302,0)
 ;INPUT DATA - Classification question value.
"RTN","SCMSVUT1",303,0)
 ;
"RTN","SCMSVUT1",304,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",305,0)
 I DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",306,0)
 Q 1
"RTN","SCMSVUT1",307,0)
 ;
"RTN","SCMSVUT1",308,0)
CLAQUETY(DATA) ;
"RTN","SCMSVUT1",309,0)
 ;INPUT DATA - Outpatient classification type to be checked.
"RTN","SCMSVUT1",310,0)
 ;
"RTN","SCMSVUT1",311,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",312,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",313,0)
 I '$D(^SD(409.41,DATA,0)) Q 0
"RTN","SCMSVUT1",314,0)
 Q 1
"RTN","SCMSVUT1",315,0)
 ;
"RTN","SCMSVUT1",316,0)
CLAVET(DATA,DFN,TYPE,ENCPTR) ; SD*5.3*341 added parameter ENCPTR
"RTN","SCMSVUT1",317,0)
 ;INPUT DATA - Classification question information to compare to VET
"RTN","SCMSVUT1",318,0)
 ;             status
"RTN","SCMSVUT1",319,0)
 ;       DFN - The patient to compare this info to.
"RTN","SCMSVUT1",320,0)
 ;      TYPE - The classification type.
"RTN","SCMSVUT1",321,0)
 ;    ENCPTR - Pointer to Outpatient Encounter
"RTN","SCMSVUT1",322,0)
 ;
"RTN","SCMSVUT1",323,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",324,0)
 I '$D(DFN) Q 0
"RTN","SCMSVUT1",325,0)
 I '$D(TYPE) Q 0  ; SD*5.3*341
"RTN","SCMSVUT1",326,0)
 N VET,SDELG0,SDDT  ; SD*5.3*341 added 2 new variables
"RTN","SCMSVUT1",327,0)
 S ENCPTR=$G(ENCPTR)  ; SD*5.3*341 added this plus next 3 lines
"RTN","SCMSVUT1",328,0)
 S SDDT=+$G(^SCE(ENCPTR,0)) S:'SDDT SDDT=$$DT^XLFDT()
"RTN","SCMSVUT1",329,0)
 S SDELG0=$$EL^SDCO22(DFN,ENCPTR)
"RTN","SCMSVUT1",330,0)
 S VET=$P(SDELG0,U,5)
"RTN","SCMSVUT1",331,0)
 I VET="Y",DATA'=1,DATA'=0,DATA'="" Q 0
"RTN","SCMSVUT1",332,0)
 ;This edit check is per a mail message from austin
"RTN","SCMSVUT1",333,0)
 I TYPE=4,VET'="Y",DATA'="","^A^B^C^D^"'[("^"_($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3))_"^") Q 0
"RTN","SCMSVUT1",334,0)
 I VET'="Y",DATA'="" Q $$SCR^SDCO21(TYPE,DFN,SDDT,ENCPTR)  ; SD*5.3*341
"RTN","SCMSVUT1",335,0)
 Q 1
"RTN","SCMSVUT1",336,0)
 ;
"RTN","SCMSVUT1",337,0)
STPCOD(DATA) ;
"RTN","SCMSVUT1",338,0)
 ;INPUT DATA - stop code data to be checked
"RTN","SCMSVUT1",339,0)
 ;
"RTN","SCMSVUT1",340,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",341,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",342,0)
 I '$D(^DIC(40.7,"C",DATA)) Q 0
"RTN","SCMSVUT1",343,0)
 Q 1
"RTN","SCMSVUT1",344,0)
 ;
"RTN","SCMSVUT1",345,0)
ACTSTP(DATA,ENCDT) ;
"RTN","SCMSVUT1",346,0)
 ;INPUT  DATA - IEN of the stop code to be checked.
"RTN","SCMSVUT1",347,0)
 ;      ENCDT - the encounter date in question
"RTN","SCMSVUT1",348,0)
 ;
"RTN","SCMSVUT1",349,0)
 N STPCOD,%DT,X,Y
"RTN","SCMSVUT1",350,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",351,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",352,0)
 S STPCOD=$G(^DIC(40.7,DATA,0))
"RTN","SCMSVUT1",353,0)
 I STPCOD="" Q 0
"RTN","SCMSVUT1",354,0)
 I '$P(STPCOD,U,3) Q 1
"RTN","SCMSVUT1",355,0)
 S %DT(0)="-"_$P(STPCOD,U,3),%DT="T",X=ENCDT
"RTN","SCMSVUT1",356,0)
 D ^%DT
"RTN","SCMSVUT1",357,0)
 Q $S(Y=-1:0,1:1)
"RTN","SCMSVUT1",358,0)
 ;
"RTN","SCMSVUT1",359,0)
SERCON(DATA) ;
"RTN","SCMSVUT1",360,0)
 ;INPUT DATA - Service connection to be checked, missing or invalid
"RTN","SCMSVUT1",361,0)
 ;
"RTN","SCMSVUT1",362,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",363,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",364,0)
 I DATA'=1,DATA'=0 Q 0
"RTN","SCMSVUT1",365,0)
 Q 1
"RTN","SCMSVUT1",366,0)
 ;
"RTN","SCMSVUT1",367,0)
SCPER(DATA) ;
"RTN","SCMSVUT1",368,0)
 ;INPUT DATA - Service connected % to be tested
"RTN","SCMSVUT1",369,0)
 ;
"RTN","SCMSVUT1",370,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",371,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",372,0)
 I DATA'?.N.1".".N Q 0
"RTN","SCMSVUT1",373,0)
 Q 1
"RTN","SCMSVUT1",374,0)
 ;
"RTN","SCMSVUT1",375,0)
PRDSER(DATA) ;
"RTN","SCMSVUT1",376,0)
 ;INPUT DATA - period of service to be tested.
"RTN","SCMSVUT1",377,0)
 ;
"RTN","SCMSVUT1",378,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",379,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",380,0)
 I '$D(^DIC(21,"D",DATA)) Q 0
"RTN","SCMSVUT1",381,0)
 Q 1
"RTN","SCMSVUT1",382,0)
 ;
"RTN","SCMSVUT1",383,0)
VIETSER1(DATA) ;
"RTN","SCMSVUT1",384,0)
 ;INPUT DATA - Vietnam service to be checked
"RTN","SCMSVUT1",385,0)
 ;
"RTN","SCMSVUT1",386,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",387,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",388,0)
 I DATA'="Y",DATA'="N",DATA'="U" Q 0
"RTN","SCMSVUT1",389,0)
 Q 1
"RTN","SCMSVUT1",390,0)
 ;
"RTN","SCMSVUT1",391,0)
VIETSER2(DATA,DFN) ;
"RTN","SCMSVUT1",392,0)
 ;INPUT DATA - Vietnam service to be checked against vet status
"RTN","SCMSVUT1",393,0)
 ;
"RTN","SCMSVUT1",394,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",395,0)
 N VAR
"RTN","SCMSVUT1",396,0)
 S VAR=$G(^DPT(DFN,"VET"))
"RTN","SCMSVUT1",397,0)
 I DATA="",VAR'="Y" Q 1
"RTN","SCMSVUT1",398,0)
 I (DATA="Y"!(DATA="N")!(DATA="U")),VAR="Y" Q 1
"RTN","SCMSVUT1",399,0)
 Q 0
"RTN","SCMSVUT1",400,0)
 ;
"RTN","SCMSVUT1",401,0)
ACTPRD(DATA) ;
"RTN","SCMSVUT1",402,0)
 ;INPUT DATA - period of serivce indicator to be check to ensure active
"RTN","SCMSVUT1",403,0)
 ;
"RTN","SCMSVUT1",404,0)
 N VAR
"RTN","SCMSVUT1",405,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",406,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",407,0)
 S VAR=+$O(^DIC(21,"D",DATA,0))
"RTN","SCMSVUT1",408,0)
 S VAR=$P($G(^DIC(21,VAR,0)),U,8)
"RTN","SCMSVUT1",409,0)
 I VAR Q 0
"RTN","SCMSVUT1",410,0)
 Q 1
"RTN","SCMSVUT1",411,0)
 ;
"RTN","SCMSVUT1",412,0)
PCODMTHD(DATA) ;
"RTN","SCMSVUT1",413,0)
 ;INPUT DATA - The coding method to be checked.
"RTN","SCMSVUT1",414,0)
 ;
"RTN","SCMSVUT1",415,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",416,0)
 I DATA'="C4" Q 0
"RTN","SCMSVUT1",417,0)
 Q 1
"RTN","SCMSVUT1",418,0)
 ;
"RTN","SCMSVUT1",419,0)
PROCCOD(DATA,ENCDT)    ;
"RTN","SCMSVUT1",420,0)
 ;INPUT DATA - The procedure code to be checked.
"RTN","SCMSVUT1",421,0)
 ;This call makes the assumption that leading zeros are intact in the 
"RTN","SCMSVUT1",422,0)
 ;input.
"RTN","SCMSVUT1",423,0)
 ;
"RTN","SCMSVUT1",424,0)
 N VAR
"RTN","SCMSVUT1",425,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",426,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",427,0)
 ;S VAR=+$O(^ICPT("B",DATA,""))
"RTN","SCMSVUT1",428,0)
 ;I '$D(^ICPT(VAR,0)) Q 0
"RTN","SCMSVUT1",429,0)
 ;
"RTN","SCMSVUT1",430,0)
 ; CSV - pass encounter date to API
"RTN","SCMSVUT1",431,0)
 ;I $$CPT^ICPTCOD(DATA,,1)'>0 Q 0
"RTN","SCMSVUT1",432,0)
 I $$CPT^ICPTCOD(DATA,ENCDT,1)'>0 Q 0
"RTN","SCMSVUT1",433,0)
 Q 1
"RTN","SCMSVUT1",434,0)
 ;
"RTN","SCMSVUT1",435,0)
PROVCLS(DATA) ;
"RTN","SCMSVUT1",436,0)
 ;INPUT DATA - The practitioner class to be checked.
"RTN","SCMSVUT1",437,0)
 ;
"RTN","SCMSVUT1",438,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",439,0)
 I DATA="" Q 0
"RTN","SCMSVUT1",440,0)
 I $$CODE2TXT^XUA4A72(DATA)']"" Q 0
"RTN","SCMSVUT1",441,0)
 Q 1
"RTN","SCMSVUT1",442,0)
 ;
"RTN","SCMSVUT1",443,0)
ERI(DATA) ;
"RTN","SCMSVUT1",444,0)
 ;INPUT  DATA - The Emergency Response indicator to be validated.
"RTN","SCMSVUT1",445,0)
 ;
"RTN","SCMSVUT1",446,0)
 I '$D(DATA) Q 0
"RTN","SCMSVUT1",447,0)
 I DATA="" Q 1
"RTN","SCMSVUT1",448,0)
 I DATA'="K" Q 0
"RTN","SCMSVUT1",449,0)
 Q 1
"RTN","SCMSVUT1",450,0)
 ;
"RTN","SCMSVZPD")
0^5^B6520119
"RTN","SCMSVZPD",1,0)
SCMSVZPD ;ALB/ESD,JLU HL7 ZPD Segment Validation ;05/08/95
"RTN","SCMSVZPD",2,0)
 ;;5.3;Scheduling;**44,66,142,459**;Aug 13, 1993
"RTN","SCMSVZPD",3,0)
 ;
"RTN","SCMSVZPD",4,0)
 ;
"RTN","SCMSVZPD",5,0)
EN(ZPDSEG,HLQ,HLFS,VALERR,ENCDT,NODE) ;
"RTN","SCMSVZPD",6,0)
 ; Entry point to return the HL7 ZPD (Patient Data) validation segment
"RTN","SCMSVZPD",7,0)
 ;
"RTN","SCMSVZPD",8,0)
 ;  Input:  ZPDSEG - ZPD Segment
"RTN","SCMSVZPD",9,0)
 ;             HLQ - HL7 null variable
"RTN","SCMSVZPD",10,0)
 ;            HLFS - HL7 field separator
"RTN","SCMSVZPD",11,0)
 ;          VALERR - Contains the array in which to put the errors
"RTN","SCMSVZPD",12,0)
 ;           ENCDT - The date/time of the encounter being processed
"RTN","SCMSVZPD",13,0)
 ;            NODE - The zero node of the entry from the Outpatient
"RTN","SCMSVZPD",14,0)
 ;                   Encounter file.
"RTN","SCMSVZPD",15,0)
 ;
"RTN","SCMSVZPD",16,0)
 ; Output:  1 if ZPD passed validity check
"RTN","SCMSVZPD",17,0)
 ;          Error message if ZPD failed validity check in form of:
"RTN","SCMSVZPD",18,0)
 ;          -1^"xxx failed validity check" (xxx=element in ZPD segment)
"RTN","SCMSVZPD",19,0)
 ;
"RTN","SCMSVZPD",20,0)
 ;
"RTN","SCMSVZPD",21,0)
 N I,MSG,DATA,X,CNT,SEG,DSS,DFN,SEGLINE,OFFSET
"RTN","SCMSVZPD",22,0)
 S MSG="-1^element in ZPD segment failed validity check",CNT=1,SEG="ZPD"
"RTN","SCMSVZPD",23,0)
 S ZPDSEG=$G(ZPDSEG)
"RTN","SCMSVZPD",24,0)
 D VALIDATE^SCMSVUT0(SEG,ZPDSEG,"0007",VALERR,.CNT)
"RTN","SCMSVZPD",25,0)
 I $D(@VALERR@(SEG)) G ENQ
"RTN","SCMSVZPD",26,0)
 ;
"RTN","SCMSVZPD",27,0)
 ;- Convert HLQ to null
"RTN","SCMSVZPD",28,0)
 S ZPDSEG=$$CONVERT^SCMSVUT0(ZPDSEG,HLFS,HLQ)
"RTN","SCMSVZPD",29,0)
 S I=0
"RTN","SCMSVZPD",30,0)
 F  S I=$O(ZPDSEG(I)) Q:'I  S ZPDSEG(I)=$$CONVERT^SCMSVUT0(ZPDSEG(I),HLFS,HLQ)
"RTN","SCMSVZPD",31,0)
 ;
"RTN","SCMSVZPD",32,0)
 ;Getting the DSS identifier to check for a LAB
"RTN","SCMSVZPD",33,0)
 S DSS=$P(NODE,U,3)
"RTN","SCMSVZPD",34,0)
 S DSS=$G(^DIC(40.7,DSS,0))
"RTN","SCMSVZPD",35,0)
 I DSS]"" S DSS=$P(DSS,U,2)
"RTN","SCMSVZPD",36,0)
 ;
"RTN","SCMSVZPD",37,0)
 ;Get pointer to PATIENT file
"RTN","SCMSVZPD",38,0)
 S DFN=$P(NODE,U,2)
"RTN","SCMSVZPD",39,0)
 ;
"RTN","SCMSVZPD",40,0)
 ;- Validate data elements
"RTN","SCMSVZPD",41,0)
 N NODE
"RTN","SCMSVZPD",42,0)
 S OFFSET=0,NODE=0,SEGLINE=ZPDSEG
"RTN","SCMSVZPD",43,0)
 F I=1,1010,1011,1012,17,18,19,21,41 D
"RTN","SCMSVZPD",44,0)
 . I $L(SEGLINE,HLFS)<($E(I,1,2)-OFFSET) D
"RTN","SCMSVZPD",45,0)
 . . ;Segment wrapped
"RTN","SCMSVZPD",46,0)
 . . S OFFSET=OFFSET+$L(SEGLINE,HLFS)-1
"RTN","SCMSVZPD",47,0)
 . . S NODE=+$O(ZPDSEG(NODE))
"RTN","SCMSVZPD",48,0)
 . . I NODE=0 S SEGLINE="",NODE=+$O(ZPDSEG(NODE),-1) Q
"RTN","SCMSVZPD",49,0)
 . . S SEGLINE=$G(ZPDSEG(NODE))
"RTN","SCMSVZPD",50,0)
 . S DATA=$P(SEGLINE,HLFS,(+$E(I,1,2)-OFFSET))
"RTN","SCMSVZPD",51,0)
 . I I=1011,DSS=108 Q
"RTN","SCMSVZPD",52,0)
 . I I=1012,DSS'=108 Q
"RTN","SCMSVZPD",53,0)
 . I +$E(I,1,2)=10,+DATA S DATA=$$FMDATE^HLFNC(DATA)
"RTN","SCMSVZPD",54,0)
 . D VALIDATE^SCMSVUT0(SEG,DATA,$P($T(@(I)),";",3),VALERR,.CNT)
"RTN","SCMSVZPD",55,0)
 .Q
"RTN","SCMSVZPD",56,0)
 ;
"RTN","SCMSVZPD",57,0)
ENQ Q $S($D(@VALERR@(SEG)):MSG,1:1)
"RTN","SCMSVZPD",58,0)
 ;
"RTN","SCMSVZPD",59,0)
 ;
"RTN","SCMSVZPD",60,0)
ERR ;;Invalid or missing patient ID data for encounter (HL7 ZPD data segment)
"RTN","SCMSVZPD",61,0)
 ;
"RTN","SCMSVZPD",62,0)
 ;
"RTN","SCMSVZPD",63,0)
 ;- ZPD data elements validated
"RTN","SCMSVZPD",64,0)
 ;
"RTN","SCMSVZPD",65,0)
1 ;;0035;HL7 SEGMENT NAME 
"RTN","SCMSVZPD",66,0)
1010 ;;3000;DATE OF DEATH INVALID
"RTN","SCMSVZPD",67,0)
1011 ;;2370;DATE OF DEATH BEFORE ENCOUNTER DATE 
"RTN","SCMSVZPD",68,0)
1012 ;;3030;ENCOUNTER 14 DAYS AFTER THE ENCOUNTER DATE
"RTN","SCMSVZPD",69,0)
17 ;;3100;HOMELESS INDICATOR 
"RTN","SCMSVZPD",70,0)
18 ;;3150;POW STATUS INDICATED? 
"RTN","SCMSVZPD",71,0)
19 ;;3200;TYPE OF INSURANCE 
"RTN","SCMSVZPD",72,0)
21 ;;3250;INVALID/INCONSISTENT POW LOCATION
"RTN","SCMSVZPD",73,0)
41 ;;3400;INVALID EMERGENCY RESPONSE INDICATOR
"RTN","SD53459A")
0^1^B31343591
"RTN","SD53459A",1,0)
SD53459A ;ALB/MRY - Pre/Post-Install; 9/29/05
"RTN","SD53459A",2,0)
 ;;5.3;Scheduling;**459**;Aug 13, 1993
"RTN","SD53459A",3,0)
 ;
"RTN","SD53459A",4,0)
 Q
"RTN","SD53459A",5,0)
 ;
"RTN","SD53459A",6,0)
POST ;Set up TaskMan to re-queue AmbCare records in the background
"RTN","SD53459A",7,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSK
"RTN","SD53459A",8,0)
 S ZTRTN="SCAN^SD53459A"
"RTN","SD53459A",9,0)
 S ZTDESC="Re-queue AmbCare records for SD*5.3*459"
"RTN","SD53459A",10,0)
 ;Queue Task to start in 60 seconds
"RTN","SD53459A",11,0)
 S ZTDTH=$$SCH^XLFDT("60S",$$NOW^XLFDT)
"RTN","SD53459A",12,0)
 S ZTIO=""
"RTN","SD53459A",13,0)
 D ^%ZTLOAD
"RTN","SD53459A",14,0)
 D BMES^XPDUTL("*****")
"RTN","SD53459A",15,0)
 D
"RTN","SD53459A",16,0)
 . I $D(ZTSK)[0 D  Q
"RTN","SD53459A",17,0)
 . . D MES^XPDUTL("TaskMan task to requeue AmbCare records for SD*5.3*459 did not start.")
"RTN","SD53459A",18,0)
 . . D MES^XPDUTL("Re-run post-install routine POST^SD53459A.")
"RTN","SD53459A",19,0)
 . D MES^XPDUTL("Task "_ZTSK_" started to re-queue AmbCare records.")
"RTN","SD53459A",20,0)
 . I $D(ZTSK("D")) D
"RTN","SD53459A",21,0)
 . . D MES^XPDUTL("Task will start at "_$$HTE^XLFDT(ZTSK("D")))
"RTN","SD53459A",22,0)
 D MES^XPDUTL("*****")
"RTN","SD53459A",23,0)
 Q
"RTN","SD53459A",24,0)
 ;
"RTN","SD53459A",25,0)
SCAN ;Scan the TRANSMITTED OUTPATIENT ENCOUNTER file (#409.73) for records
"RTN","SD53459A",26,0)
 ;transmitted after the Katrina hurricanne. Use $$FINDXMIT^SCDXFU01
"RTN","SD53459A",27,0)
 ;to find last corresponding entry in TRANSMITTED OUTPATIENT ENCOUNTER
"RTN","SD53459A",28,0)
 ;file (#409.73).
"RTN","SD53459A",29,0)
 ;
"RTN","SD53459A",30,0)
 N SDTIEN   ;Transmitted Outpatient Encounter file pointer
"RTN","SD53459A",31,0)
 N SDENCPTR ;Outpatient Encounter file pointer
"RTN","SD53459A",32,0)
 N SDREQUE  ;Count of messages re-queued
"RTN","SD53459A",33,0)
 N SDSTART  ;start date/time
"RTN","SD53459A",34,0)
 N SDXMITDT ;Xmit to NPCD counter
"RTN","SD53459A",35,0)
 N SDERIDT  ;Hurricane Katrina date
"RTN","SD53459A",36,0)
 N DFN      ;IEN to PATIENT file (#2)
"RTN","SD53459A",37,0)
 N SDNAM    ;Patient's name
"RTN","SD53459A",38,0)
 N SDSSN    ;Patient's ssn(last 4)
"RTN","SD53459A",39,0)
 ;
"RTN","SD53459A",40,0)
 K ^TMP("SD53459A",$J),^TMP("SD53459",$J)
"RTN","SD53459A",41,0)
 S SDERIDT=3050826
"RTN","SD53459A",42,0)
 S SDSTART=$$NOW^XLFDT
"RTN","SD53459A",43,0)
 S SDREQUE=0
"RTN","SD53459A",44,0)
 S SDXMITDT=SDERIDT-.00001
"RTN","SD53459A",45,0)
 F  S SDXMITDT=$O(^SD(409.73,"AACLST",SDXMITDT)) Q:'SDXMITDT  D
"RTN","SD53459A",46,0)
 . S SDTIEN=0
"RTN","SD53459A",47,0)
 . F  S SDTIEN=$O(^SD(409.73,"AACLST",SDXMITDT,SDTIEN)) Q:'SDTIEN  D
"RTN","SD53459A",48,0)
 . . S SDENCPTR=$P($G(^SD(409.73,SDTIEN,0)),U,2)
"RTN","SD53459A",49,0)
 . . Q:'SDENCPTR
"RTN","SD53459A",50,0)
 . . S DFN=$P($G(^SCE(SDENCPTR,0)),U,2)
"RTN","SD53459A",51,0)
 . . Q:($$EMGRES^DGUTL(DFN)'="K")
"RTN","SD53459A",52,0)
 . . S ^TMP("SD53459",$J,DFN)=SDTIEN ;build last transmitted ien
"RTN","SD53459A",53,0)
 . . D DEM^VADPT
"RTN","SD53459A",54,0)
 . . S SDNAM=$S($D(VADM(1)):VADM(1),1:" ")
"RTN","SD53459A",55,0)
 . . S SDSSN=$S($D(VADM(2)):$P($P(VADM(2),"^",2),"-",3),1:" ")
"RTN","SD53459A",56,0)
 . . S ^TMP("SD53459",$J,0,SDNAM,SDSSN,DFN)=$P($G(^SD(409.73,SDTIEN,0)),U)
"RTN","SD53459A",57,0)
 . . ;locate last transmitted message
"RTN","SD53459A",58,0)
 . . ;S SDTIEN=$$FINDXMIT^SCDXFU01(SDENCPTR)
"RTN","SD53459A",59,0)
 . . ;Q:'SDTIEN
"RTN","SD53459A",60,0)
 ;locate last transmitted message
"RTN","SD53459A",61,0)
 S DFN=0
"RTN","SD53459A",62,0)
 F  S DFN=$O(^TMP("SD53459",$J,DFN)) Q:'DFN  D
"RTN","SD53459A",63,0)
 . S SDTIEN=^TMP("SD53459",$J,DFN)
"RTN","SD53459A",64,0)
 . ;store event information
"RTN","SD53459A",65,0)
 . D STREEVNT^SCDXFU01(SDTIEN,0)
"RTN","SD53459A",66,0)
 . ;set transmission flag to 'YES'
"RTN","SD53459A",67,0)
 . D XMITFLAG^SCDXFU01(SDTIEN)
"RTN","SD53459A",68,0)
 . S SDREQUE=SDREQUE+1
"RTN","SD53459A",69,0)
 ;send completion MailMan message
"RTN","SD53459A",70,0)
 D NOTIFY(SDSTART,SDREQUE)
"RTN","SD53459A",71,0)
 ;delete the task entry
"RTN","SD53459A",72,0)
 S ZTREQ="@"
"RTN","SD53459A",73,0)
 Q
"RTN","SD53459A",74,0)
 ;
"RTN","SD53459A",75,0)
NOTIFY(SDSTIME,SDREQ) ;send job completion msg
"RTN","SD53459A",76,0)
 ;
"RTN","SD53459A",77,0)
 ;  Input
"RTN","SD53459A",78,0)
 ;    SDSTIME - job start date/time
"RTN","SD53459A",79,0)
 ;    SDREQ - count of AmbCare messages re-queued
"RTN","SD53459A",80,0)
 ;
"RTN","SD53459A",81,0)
 ;  Output
"RTN","SD53459A",82,0)
 ;    none
"RTN","SD53459A",83,0)
 ;
"RTN","SD53459A",84,0)
 N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY,XMZ
"RTN","SD53459A",85,0)
 N SDSITE,SDETIME,SDTEXT,LINECT
"RTN","SD53459A",86,0)
 S SDSITE=$$SITE^VASITE
"RTN","SD53459A",87,0)
 S SDETIME=$$NOW^XLFDT
"RTN","SD53459A",88,0)
 S XMDUZ="AmbCare Re-queue"
"RTN","SD53459A",89,0)
 S XMSUB="Patch SD*5.3*459 Hurricane Katrina ERI (ACRP)"
"RTN","SD53459A",90,0)
 S XMTEXT="^TMP(""SD53459A"",$J,"
"RTN","SD53459A",91,0)
 S XMY(DUZ)=""
"RTN","SD53459A",92,0)
 S XMY("AACVHANPCDERInotification@mail.va.gov")=""
"RTN","SD53459A",93,0)
 S XMY("YORTY,M ROBERT@FORUM.VA.GOV")=""
"RTN","SD53459A",94,0)
 S ^TMP("SD53459A",$J,1)=""
"RTN","SD53459A",95,0)
 S ^TMP("SD53459A",$J,2)="          Facility Name:  "_$P(SDSITE,U,2)
"RTN","SD53459A",96,0)
 S ^TMP("SD53459A",$J,3)="         Station Number:  "_$P(SDSITE,U,3)
"RTN","SD53459A",97,0)
 S ^TMP("SD53459A",$J,4)=""
"RTN","SD53459A",98,0)
 S ^TMP("SD53459A",$J,5)="  Date/Time job started:  "_$$FMTE^XLFDT(SDSTIME)
"RTN","SD53459A",99,0)
 S ^TMP("SD53459A",$J,6)="  Date/Time job stopped:  "_$$FMTE^XLFDT(SDETIME)
"RTN","SD53459A",100,0)
 S ^TMP("SD53459A",$J,7)=""
"RTN","SD53459A",101,0)
 S ^TMP("SD53459A",$J,9)="Total AmbCare records re-queued  : "_SDREQ
"RTN","SD53459A",102,0)
 S ^TMP("SD53459A",$J,10)="Please Note: There is no user intervention required with the re-transmission"
"RTN","SD53459A",103,0)
 S ^TMP("SD53459A",$J,11)="of the AmbCare records.  They will be retransmitted via the nightly"
"RTN","SD53459A",104,0)
 S ^TMP("SD53459A",$J,12)="background job that is scheduled at your site."
"RTN","SD53459A",105,0)
 S ^TMP("SD53459A",$J,13)=""
"RTN","SD53459A",106,0)
 S ^TMP("SD53459A",$J,14)="After the re-transmission is complete you may receive a  Late ACRP Related"
"RTN","SD53459A",107,0)
 S ^TMP("SD53459A",$J,15)="Activity  Mailman message,  if encounters occurred after the National"
"RTN","SD53459A",108,0)
 S ^TMP("SD53459A",$J,16)="Patient Care Database was closed for yearly workload credit.  Please"
"RTN","SD53459A",109,0)
 S ^TMP("SD53459A",$J,17)="ignore/delete these messages, the records will still be retransmitted to AAC."
"RTN","SD53459A",110,0)
 I SDREQ D
"RTN","SD53459A",111,0)
 . Q  ;don't list names
"RTN","SD53459A",112,0)
 . S ^TMP("SD53459A",$J,18)=""
"RTN","SD53459A",113,0)
 . S ^TMP("SD53459A",$J,19)="List of Transmitted Outpatient Encounters re-queued with a 'Katrina' indicator."
"RTN","SD53459A",114,0)
 . S ^TMP("SD53459A",$J,20)="          #409.73"
"RTN","SD53459A",115,0)
 . S ^TMP("SD53459A",$J,21)="SSN(L4)   Number          Patient"
"RTN","SD53459A",116,0)
 . S ^TMP("SD53459A",$J,22)="-----------------------------------"
"RTN","SD53459A",117,0)
 . S LINECT=23
"RTN","SD53459A",118,0)
 . S SDNAM="" F  S SDNAM=$O(^TMP("SD53459",$J,0,SDNAM)) Q:SDNAM=""  D
"RTN","SD53459A",119,0)
 . . S SDSSN="" F  S SDSSN=$O(^TMP("SD53459",$J,0,SDNAM,SDSSN)) Q:SDSSN=""  D
"RTN","SD53459A",120,0)
 . . . S DFN="" F  S DFN=$O(^TMP("SD53459",$J,0,SDNAM,SDSSN,DFN)) Q:DFN=""  D
"RTN","SD53459A",121,0)
 . . . . S SDTIEN=$G(^TMP("SD53459",$J,0,SDNAM,SDSSN,DFN))
"RTN","SD53459A",122,0)
 . . . . S ^TMP("SD53459A",$J,LINECT+1)=SDSSN_"      "_SDTIEN_"        "_SDNAM
"RTN","SD53459A",123,0)
 . . . . S LINECT=LINECT+1
"RTN","SD53459A",124,0)
 D ^XMD K ^TMP("SD53459A",$J),^TMP("SD53459",$J),XMY,VADM
"RTN","SD53459A",125,0)
 Q
"RTN","SD53459P")
0^2^B3586996
"RTN","SD53459P",1,0)
SD53459P ;ALB/MRY - Pre/Post-Install; 9/29/05
"RTN","SD53459P",2,0)
 ;;5.3;Scheduling;**459**;Aug 13, 1993
"RTN","SD53459P",3,0)
 ;
"RTN","SD53459P",4,0)
 ;
"RTN","SD53459P",5,0)
ENV ;Main entry point for Environment check point.
"RTN","SD53459P",6,0)
 ;
"RTN","SD53459P",7,0)
 S XPDABORT=""
"RTN","SD53459P",8,0)
 D PROGCHK(.XPDABORT) ;checks programmer variables
"RTN","SD53459P",9,0)
 I XPDABORT="" K XPDABORT
"RTN","SD53459P",10,0)
 Q
"RTN","SD53459P",11,0)
 ;
"RTN","SD53459P",12,0)
 ;
"RTN","SD53459P",13,0)
PRE ;Main entry point for Pre-init items.
"RTN","SD53459P",14,0)
 ;
"RTN","SD53459P",15,0)
 ;Do AmbCare pre-install (copied from SD53142)
"RTN","SD53459P",16,0)
 ;Remove ERROR CODE DESCRIPTION (field #11) as an identifier of the
"RTN","SD53459P",17,0)
 ; TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file (#409.76)
"RTN","SD53459P",18,0)
 ; (this causes problems when installing error codes)
"RTN","SD53459P",19,0)
 I ($D(^DD(409.76,0,"ID",11))) D
"RTN","SD53459P",20,0)
 .N TMP,X
"RTN","SD53459P",21,0)
 .S X(1)=" "
"RTN","SD53459P",22,0)
 .S X(2)="Removing ERROR CODE DESCRIPTION (field #11) as an identifier"
"RTN","SD53459P",23,0)
 .S X(3)="of the TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file"
"RTN","SD53459P",24,0)
 .S X(4)="(#409.76) as it causes problems when installing error codes."
"RTN","SD53459P",25,0)
 .S X(5)=" "
"RTN","SD53459P",26,0)
 .D MES^XPDUTL(.X) K X
"RTN","SD53459P",27,0)
 .K ^DD(409.76,0,"ID",11)
"RTN","SD53459P",28,0)
 .Q:($D(^DD(409.76,0,"ID")))
"RTN","SD53459P",29,0)
 .S TMP=$P(^SD(409.76,0),U,2)
"RTN","SD53459P",30,0)
 .S TMP=$TR(TMP,"I","")
"RTN","SD53459P",31,0)
 .S $P(^SD(409.76,0),U,2)=TMP
"RTN","SD53459P",32,0)
 .Q
"RTN","SD53459P",33,0)
 Q
"RTN","SD53459P",34,0)
 ;
"RTN","SD53459P",35,0)
 ;
"RTN","SD53459P",36,0)
 ;
"RTN","SD53459P",37,0)
PROGCHK(XPDABORT) ;checks for necessary programmer variables
"RTN","SD53459P",38,0)
 ;
"RTN","SD53459P",39,0)
 I '$G(DUZ)!($G(DUZ(0))'="@")!('$G(DT))!($G(U)'="^") DO
"RTN","SD53459P",40,0)
 .D BMES^XPDUTL("*****")
"RTN","SD53459P",41,0)
 .D MES^XPDUTL("Your programming variables are not set up properly.")
"RTN","SD53459P",42,0)
 .D MES^XPDUTL("Installation aborted.")
"RTN","SD53459P",43,0)
 .D MES^XPDUTL("*****")
"RTN","SD53459P",44,0)
 .S XPDABORT=2
"RTN","SD53459P",45,0)
 Q
"RTN","SD53459P",46,0)
 ;
"RTN","SD53459P",47,0)
 ;
"RTN","SD53459P",48,0)
POST ;Main entry point for Post-init items.
"RTN","SD53459P",49,0)
 ;
"RTN","SD53459P",50,0)
 ;Make ERROR CODE DESCRIPTION (field #11) an identifier of the
"RTN","SD53459P",51,0)
 ; TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE file (#409.76)
"RTN","SD53459P",52,0)
 ; (this was removed by the pre init routine)
"RTN","SD53459P",53,0)
 I ('$D(^DD(409.76,0,"ID",11))) D
"RTN","SD53459P",54,0)
 .N TMP
"RTN","SD53459P",55,0)
 .S ^DD(409.76,0,"ID",11)="D EN^DDIOL($P(^(1),U,1))"
"RTN","SD53459P",56,0)
 .S TMP=$P(^SD(409.76,0),U,2)
"RTN","SD53459P",57,0)
 .S TMP=$TR(TMP,"I","")
"RTN","SD53459P",58,0)
 .S $P(^SD(409.76,0),U,2)=TMP_"I"
"RTN","SD53459P",59,0)
 ;
"RTN","SD53459P",60,0)
 ;Re-queue Ambcare records
"RTN","SD53459P",61,0)
 D POST^SD53459A
"RTN","SD53459P",62,0)
 Q
"VER")
8.0^22.0
"^DD",409.76,409.76,0)
FIELD^^41^6
"^DD",409.76,409.76,0,"DDA")
N
"^DD",409.76,409.76,0,"DT")
2970710
"^DD",409.76,409.76,0,"ID",11)
D EN^DDIOL($P(^(1),U,1))
"^DD",409.76,409.76,0,"IX","B",409.76,.01)

"^DD",409.76,409.76,0,"IX","D",409.76,11)

"^DD",409.76,409.76,0,"NM","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE")

"^DD",409.76,409.76,0,"PT",409.75,.02)

"^DD",409.76,409.76,0,"VRPK")
SD
"^DD",409.76,409.76,.01,0)
ERROR CODE^RF^^0;1^K:$L(X)>10!($L(X)<1)!'(X'?1P.E) X
"^DD",409.76,409.76,.01,.1)
Error Code
"^DD",409.76,409.76,.01,1,0)
^.1
"^DD",409.76,409.76,.01,1,1,0)
409.76^B
"^DD",409.76,409.76,.01,1,1,1)
S ^SD(409.76,"B",$E(X,1,30),DA)=""
"^DD",409.76,409.76,.01,1,1,2)
K ^SD(409.76,"B",$E(X,1,30),DA)
"^DD",409.76,409.76,.01,3)
Enter an error code to use (1-10 characters)
"^DD",409.76,409.76,.01,21,0)
^^2^2^2970623^^^
"^DD",409.76,409.76,.01,21,1,0)
Error code denoting why an entry in the Transmitted Outpatient Encounter
"^DD",409.76,409.76,.01,21,2,0)
file could not be transmitted or successfully processed.
"^DD",409.76,409.76,.01,23,0)
^^1^1^2970623^
"^DD",409.76,409.76,.01,23,1,0)
 
"^DD",409.76,409.76,.01,"DT")
2960430
"^DD",409.76,409.76,.02,0)
SOURCE OF ERROR^RS^N:NPCD;V:VISTA;T:HL7 TRANSMISSION;^0;2^Q
"^DD",409.76,409.76,.02,3)
Enter the source of the error.
"^DD",409.76,409.76,.02,21,0)
^^1^1^2970710^
"^DD",409.76,409.76,.02,21,1,0)
This set of codes indicates the source of the error.
"^DD",409.76,409.76,.02,"DT")
2970710
"^DD",409.76,409.76,11,0)
ERROR CODE DESCRIPTION^F^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",409.76,409.76,11,.1)
Error Code Description
"^DD",409.76,409.76,11,1,0)
^.1^^-1
"^DD",409.76,409.76,11,1,2,0)
409.76^D
"^DD",409.76,409.76,11,1,2,1)
S ^SD(409.76,"D",$E(X,1,30),DA)=""
"^DD",409.76,409.76,11,1,2,2)
K ^SD(409.76,"D",$E(X,1,30),DA)
"^DD",409.76,409.76,11,1,2,"%D",0)
^^1^1^2971210^
"^DD",409.76,409.76,11,1,2,"%D",1,0)
This is used to aid in the lookup of error codes.
"^DD",409.76,409.76,11,1,2,"DT")
2971210
"^DD",409.76,409.76,11,3)
Enter a description of the error code (1-80 characters)
"^DD",409.76,409.76,11,21,0)
^^1^1^2960524^^
"^DD",409.76,409.76,11,21,1,0)
Free text description of the error code.
"^DD",409.76,409.76,11,"DT")
2980120
"^DD",409.76,409.76,21,0)
CORRECTIVE ACTION DESCRIPTION^409.7621^^2;0
"^DD",409.76,409.76,21,21,0)
^^3^3^2971022^
"^DD",409.76,409.76,21,21,1,0)
This field describes the actions necessary to correct the error.
"^DD",409.76,409.76,21,21,2,0)
This is the text which would be viewed by a user when using the Incomplete
"^DD",409.76,409.76,21,21,3,0)
Encounter Management Tools.
"^DD",409.76,409.76,31,0)
VALIDATION LOGIC^K^^CHK;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,31,3)
Enter routine entry point to perform error validation
"^DD",409.76,409.76,31,9)
@
"^DD",409.76,409.76,31,21,0)
^^13^13^2971022^
"^DD",409.76,409.76,31,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,31,21,2,0)
 
"^DD",409.76,409.76,31,21,3,0)
This contains the logic that needs to be executed in order to validate the
"^DD",409.76,409.76,31,21,4,0)
data.  If the data does not validate correctly the error code from this
"^DD",409.76,409.76,31,21,5,0)
entry will be used.  The function call contained within this field uses
"^DD",409.76,409.76,31,21,6,0)
the following variables:
"^DD",409.76,409.76,31,21,7,0)
    Input
"^DD",409.76,409.76,31,21,8,0)
       Data - The value being validated.
"^DD",409.76,409.76,31,21,9,0)
 
"^DD",409.76,409.76,31,21,10,0)
    Returns
"^DD",409.76,409.76,31,21,11,0)
       RES - Result of the function call
"^DD",409.76,409.76,31,21,12,0)
              1 if entry passed validation
"^DD",409.76,409.76,31,21,13,0)
              0 if entry does not pass validation
"^DD",409.76,409.76,31,"DT")
2970605
"^DD",409.76,409.76,41,0)
CORRECTION LOGIC^K^^COR;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",409.76,409.76,41,3)
This is the code that will need to be executed to correct this error.
"^DD",409.76,409.76,41,9)
@
"^DD",409.76,409.76,41,21,0)
^^16^16^2971022^
"^DD",409.76,409.76,41,21,1,0)
This field should not be modifed except as directed.
"^DD",409.76,409.76,41,21,2,0)
 
"^DD",409.76,409.76,41,21,3,0)
This contains the logic that needs to be executed in order to allow the
"^DD",409.76,409.76,41,21,4,0)
user to correct the error.  The function call contained within this field
"^DD",409.76,409.76,41,21,5,0)
uses the following variables:
"^DD",409.76,409.76,41,21,6,0)
    Returns
"^DD",409.76,409.76,41,21,7,0)
       RES - Result of the function call
"^DD",409.76,409.76,41,21,8,0)
             0 - if the corrective action was not successful
"^DD",409.76,409.76,41,21,9,0)
             1 - if the corrective action succeeded
"^DD",409.76,409.76,41,21,10,0)
 
"^DD",409.76,409.76,41,21,11,0)
This function call makes the assumption that the ^TMP("SCENI XMT",$J,0)
"^DD",409.76,409.76,41,21,12,0)
global from the Incomplete Encounter Management List Manager tool is
"^DD",409.76,409.76,41,21,13,0)
available to retrieve the pointer from the TRANSMITTED OUTPATIENT
"^DD",409.76,409.76,41,21,14,0)
ENCOUNTER FILE (#409.73) which is used to check the entry and
"^DD",409.76,409.76,41,21,15,0)
retreive the entry from the TRANSMITTED OUTPATIENT ENCOUNTER ERROR FILE
"^DD",409.76,409.76,41,21,16,0)
(#409.75).
"^DD",409.76,409.76,41,"DT")
2970710
"^DD",409.76,409.7621,0)
CORRECTIVE ACTION DESCRIPTION SUB-FIELD^^.01^1
"^DD",409.76,409.7621,0,"DT")
2970710
"^DD",409.76,409.7621,0,"NM","CORRECTIVE ACTION DESCRIPTION")

"^DD",409.76,409.7621,0,"UP")
409.76
"^DD",409.76,409.7621,.01,0)
CORRECTIVE ACTION DESCRIPTION^W^^0;1^Q
"^DD",409.76,409.7621,.01,3)
Enter the corrective action a user will need to take in order to correct this error.
"^DD",409.76,409.7621,.01,21,0)
^^1^1^2971022^^^
"^DD",409.76,409.7621,.01,21,1,0)
This is the corrective action needed to correct this error situation.
"^DD",409.76,409.7621,.01,"DT")
2970710
"^DIC",409.76,409.76,0)
TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE^409.76
"^DIC",409.76,409.76,0,"GL")
^SD(409.76,
"^DIC",409.76,409.76,"%D",0)
^^6^6^2970623^^^^
"^DIC",409.76,409.76,"%D",1,0)
This table file contains a list of all error codes that the National
"^DIC",409.76,409.76,"%D",2,0)
Patient Care Database will report when processing an encounter.
"^DIC",409.76,409.76,"%D",3,0)
 
"^DIC",409.76,409.76,"%D",4,0)
If an entry needs to be added, modified or deleted a patch will be issued
"^DIC",409.76,409.76,"%D",5,0)
instructing the site how to make the change.  Otherwise, this table should
"^DIC",409.76,409.76,"%D",6,0)
not be edited in anyway by the site.  
"^DIC",409.76,"B","TRANSMITTED OUTPATIENT ENCOUNTER ERROR CODE",409.76)

**END**
**END**
