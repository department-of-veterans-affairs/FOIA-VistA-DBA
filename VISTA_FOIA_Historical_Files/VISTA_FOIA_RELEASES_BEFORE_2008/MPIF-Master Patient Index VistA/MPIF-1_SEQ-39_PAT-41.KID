Released MPIF*1*41 SEQ #39
Extracted from mail message
**KIDS**:MPIF*1.0*41^

**INSTALL NAME**
MPIF*1.0*41
"BLD",2218,0)
MPIF*1.0*41^MASTER PATIENT INDEX VISTA^0^3050629^y
"BLD",2218,1,0)
^^3^3^3050621^
"BLD",2218,1,1,0)
CHANGE TO HL7 ADT-A24 AND ADT-A43 MESSAGE PROCESSING
"BLD",2218,1,2,0)
Refer to patch MPIF*1*41 in the FORUM Patch Module for a complete
"BLD",2218,1,3,0)
description.
"BLD",2218,4,0)
^9.64PA^^
"BLD",2218,"ABNS",0)
^9.66A^^
"BLD",2218,"ABPKG")
^^
"BLD",2218,"INIT")
MPIFP41
"BLD",2218,"KRN",0)
^9.67PA^8989.52^19
"BLD",2218,"KRN",.4,0)
.4
"BLD",2218,"KRN",.401,0)
.401
"BLD",2218,"KRN",.402,0)
.402
"BLD",2218,"KRN",.403,0)
.403
"BLD",2218,"KRN",.5,0)
.5
"BLD",2218,"KRN",.84,0)
.84
"BLD",2218,"KRN",3.6,0)
3.6
"BLD",2218,"KRN",3.8,0)
3.8
"BLD",2218,"KRN",9.2,0)
9.2
"BLD",2218,"KRN",9.8,0)
9.8
"BLD",2218,"KRN",9.8,"NM",0)
^9.68A^6^6
"BLD",2218,"KRN",9.8,"NM",1,0)
MPIFA24^^0^B20262010
"BLD",2218,"KRN",9.8,"NM",2,0)
MPIFA43^^0^B25989400
"BLD",2218,"KRN",9.8,"NM",3,0)
MPIFAPI1^^0^B26546765
"BLD",2218,"KRN",9.8,"NM",4,0)
MPIF001^^0^B51371245
"BLD",2218,"KRN",9.8,"NM",5,0)
MPIFA40^^0^B11051193
"BLD",2218,"KRN",9.8,"NM",6,0)
MPIFP41^^0^B8209904
"BLD",2218,"KRN",9.8,"NM","B","MPIF001",4)

"BLD",2218,"KRN",9.8,"NM","B","MPIFA24",1)

"BLD",2218,"KRN",9.8,"NM","B","MPIFA40",5)

"BLD",2218,"KRN",9.8,"NM","B","MPIFA43",2)

"BLD",2218,"KRN",9.8,"NM","B","MPIFAPI1",3)

"BLD",2218,"KRN",9.8,"NM","B","MPIFP41",6)

"BLD",2218,"KRN",19,0)
19
"BLD",2218,"KRN",19.1,0)
19.1
"BLD",2218,"KRN",101,0)
101
"BLD",2218,"KRN",409.61,0)
409.61
"BLD",2218,"KRN",771,0)
771
"BLD",2218,"KRN",870,0)
870
"BLD",2218,"KRN",8989.51,0)
8989.51
"BLD",2218,"KRN",8989.52,0)
8989.52
"BLD",2218,"KRN",8994,0)
8994
"BLD",2218,"KRN","B",.4,.4)

"BLD",2218,"KRN","B",.401,.401)

"BLD",2218,"KRN","B",.402,.402)

"BLD",2218,"KRN","B",.403,.403)

"BLD",2218,"KRN","B",.5,.5)

"BLD",2218,"KRN","B",.84,.84)

"BLD",2218,"KRN","B",3.6,3.6)

"BLD",2218,"KRN","B",3.8,3.8)

"BLD",2218,"KRN","B",9.2,9.2)

"BLD",2218,"KRN","B",9.8,9.8)

"BLD",2218,"KRN","B",19,19)

"BLD",2218,"KRN","B",19.1,19.1)

"BLD",2218,"KRN","B",101,101)

"BLD",2218,"KRN","B",409.61,409.61)

"BLD",2218,"KRN","B",771,771)

"BLD",2218,"KRN","B",870,870)

"BLD",2218,"KRN","B",8989.51,8989.51)

"BLD",2218,"KRN","B",8989.52,8989.52)

"BLD",2218,"KRN","B",8994,8994)

"BLD",2218,"QUES",0)
^9.62^^
"BLD",2218,"REQB",0)
^9.611^4^4
"BLD",2218,"REQB",1,0)
MPIF*1.0*25^2
"BLD",2218,"REQB",2,0)
MPIF*1.0*35^2
"BLD",2218,"REQB",3,0)
MPIF*1.0*37^2
"BLD",2218,"REQB",4,0)
RG*1.0*42^2
"BLD",2218,"REQB","B","MPIF*1.0*25",1)

"BLD",2218,"REQB","B","MPIF*1.0*35",2)

"BLD",2218,"REQB","B","MPIF*1.0*37",3)

"BLD",2218,"REQB","B","RG*1.0*42",4)

"INIT")
MPIFP41
"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
41^3050629
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3050629
"PKG",282,22,1,"PAH",1,1,1,0)
CHANGE TO HL7 ADT-A24 AND ADT-A43 MESSAGE PROCESSING
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*41 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","MPIF001")
0^4^B51371245
"RTN","MPIF001",1,0)
MPIF001 ;ALB/RJS/CMC-UTILITY ROUTINE OF APIS ;JUL 12, 1996
"RTN","MPIF001",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,9,16,18,21,27,33,35,41**;30 Apr 99
"RTN","MPIF001",3,0)
 ;
"RTN","MPIF001",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIF001",5,0)
 ;  ^DPT( - #2070
"RTN","MPIF001",6,0)
 ; ^DPT("AICN" - #2070
"RTN","MPIF001",7,0)
 ; ^DPT("AMPIMIS" - #2070
"RTN","MPIF001",8,0)
 ; EXC^RGHLLOG - #2796
"RTN","MPIF001",9,0)
 ; START^RGHLLOG - #2796
"RTN","MPIF001",10,0)
 ; STOP^RGHLLOG - #2796
"RTN","MPIF001",11,0)
 ;
"RTN","MPIF001",12,0)
GETICN(DFN) ; This function returns the ICN, including checksum for a given
"RTN","MPIF001",13,0)
 ; DFN or -1^error message
"RTN","MPIF001",14,0)
 ; INPUT: DFN - ien in Patient file
"RTN","MPIF001",15,0)
 ;
"RTN","MPIF001",16,0)
 N RETURN,NODE
"RTN","MPIF001",17,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT1
"RTN","MPIF001",18,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT1
"RTN","MPIF001",19,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT1
"RTN","MPIF001",20,0)
 S NODE=^DPT(DFN,"MPI")
"RTN","MPIF001",21,0)
 I $P(NODE,"^",1)'>0 S RETURN="-1^NO ICN" G EXIT1
"RTN","MPIF001",22,0)
 S RETURN=$P(NODE,"^",1)_"V"_$P(NODE,"^",2)
"RTN","MPIF001",23,0)
 I '$D(^DPT("AICN",$P(NODE,"^"),DFN)) S ^DPT("AICN",$P(NODE,"^"),DFN)=""
"RTN","MPIF001",24,0)
 ; ^ set AICN x-ref if missing one
"RTN","MPIF001",25,0)
EXIT1 ;
"RTN","MPIF001",26,0)
 Q RETURN
"RTN","MPIF001",27,0)
 ;
"RTN","MPIF001",28,0)
GETDFN(ICN) ; Returns DFN (ien Patient file) or -1^error message for a given ICN
"RTN","MPIF001",29,0)
 ; ICN - ICN for a given Patient in the Patient file
"RTN","MPIF001",30,0)
 N RETURN,DFN
"RTN","MPIF001",31,0)
 I $G(ICN)'>0 S RETURN="-1^NO ICN" G EXIT2
"RTN","MPIF001",32,0)
 I ICN["V" S ICN=+ICN
"RTN","MPIF001",33,0)
 I '$D(^DPT("AICN",ICN)) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",34,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIF001",35,0)
 I $G(DFN)'>0 S RETURN="-1^BAD ICN CROSS-REFERENCE" G EXIT2
"RTN","MPIF001",36,0)
 I '$D(^DPT(DFN)) K ^DPT("AICN",ICN) S RETURN="-1^ICN NOT IN DATABASE" G EXIT2
"RTN","MPIF001",37,0)
 ;^ **41 - CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIF001",38,0)
 S RETURN=DFN
"RTN","MPIF001",39,0)
EXIT2 ;
"RTN","MPIF001",40,0)
 Q RETURN
"RTN","MPIF001",41,0)
 ;
"RTN","MPIF001",42,0)
ICNLC(DFN) ;This API will return an ICN if one exists or create and return
"RTN","MPIF001",43,0)
 ; a Local ICN and update the appropriate fields if a Local was created
"RTN","MPIF001",44,0)
 ; DFN= Patient IEN
"RTN","MPIF001",45,0)
 ; Returns ICN (local or National including checksum) or -1^error msg
"RTN","MPIF001",46,0)
 N ICN,TMP,CHKSUM,ICNX
"RTN","MPIF001",47,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",48,0)
 D LOCK
"RTN","MPIF001",49,0)
 S ICN=$$GETICN(DFN)
"RTN","MPIF001",50,0)
 I +ICN=-1 D
"RTN","MPIF001",51,0)
 .;no icn create a Local ICN
"RTN","MPIF001",52,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIF001",53,0)
 .S CHKSUM=$P(ICN,"V",2),ICNX=$P(ICN,"V")
"RTN","MPIF001",54,0)
 .S NOLOCK=""
"RTN","MPIF001",55,0)
 .I ICNX="" K NOLOCK S ICN="-1^PROBLEM CREATING LOCAL ICN" Q
"RTN","MPIF001",56,0)
 .S TMP=$$SETICN(DFN,ICNX,CHKSUM)
"RTN","MPIF001",57,0)
 .I +TMP=-1 K NOLOCK Q
"RTN","MPIF001",58,0)
 .S TMP=$$SETLOC(DFN,1)
"RTN","MPIF001",59,0)
 .S TMP=$$CHANGE(DFN,$P($$SITE^VASITE(),"^"))
"RTN","MPIF001",60,0)
 .K NOLOCK
"RTN","MPIF001",61,0)
 D UNLOCK
"RTN","MPIF001",62,0)
 Q ICN
"RTN","MPIF001",63,0)
 ;
"RTN","MPIF001",64,0)
CMOR2(DFN) ; Returns CMOR Site Name or -1^error message
"RTN","MPIF001",65,0)
 ; DFN = Patient IEN
"RTN","MPIF001",66,0)
 I $G(DFN)'>0 Q "-1^No DFN Passed"
"RTN","MPIF001",67,0)
 N NODE
"RTN","MPIF001",68,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",69,0)
 Q:$P(NODE,"^",3)="" "-1^No CMOR"
"RTN","MPIF001",70,0)
 Q $$CMORNAME($P(NODE,"^",3))
"RTN","MPIF001",71,0)
 ;
"RTN","MPIF001",72,0)
CMORNAME(CIEN) ; Returns CMOR site name or -1^error message
"RTN","MPIF001",73,0)
 ; CIEN - ien from Institution file
"RTN","MPIF001",74,0)
 ;
"RTN","MPIF001",75,0)
 Q:CIEN="" "-1^No Institution parameter"
"RTN","MPIF001",76,0)
 N INST
"RTN","MPIF001",77,0)
 S INST=$$NNT^XUAF4(CIEN)
"RTN","MPIF001",78,0)
 Q:INST="" "-1^No Institution for that IEN"
"RTN","MPIF001",79,0)
 Q:$P(INST,"^")="" "-1^No Name for this Institution"
"RTN","MPIF001",80,0)
 Q $P(INST,"^")
"RTN","MPIF001",81,0)
 ;
"RTN","MPIF001",82,0)
GETVCCI(DFN) ; Returns CMOR or -1^error message for a given patient
"RTN","MPIF001",83,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",84,0)
 N RETURN,NODE,PTR,STANUM
"RTN","MPIF001",85,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT3
"RTN","MPIF001",86,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT3
"RTN","MPIF001",87,0)
 I '$D(^DPT(DFN,"MPI")) S RETURN="-1^NO MPI NODE" G EXIT3
"RTN","MPIF001",88,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",89,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",90,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT3
"RTN","MPIF001",91,0)
 S STANUM=$P($$NNT^XUAF4(PTR),"^",2)
"RTN","MPIF001",92,0)
 I STANUM'>0 S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT3
"RTN","MPIF001",93,0)
 S RETURN=STANUM
"RTN","MPIF001",94,0)
EXIT3 ;
"RTN","MPIF001",95,0)
 Q RETURN
"RTN","MPIF001",96,0)
 ;
"RTN","MPIF001",97,0)
CHANGE(DFN,VCCI) ;
"RTN","MPIF001",98,0)
 ; ** This function is only to be used by approved packages **
"RTN","MPIF001",99,0)
 ;
"RTN","MPIF001",100,0)
 ; This function updates the CMOR field in the Patient file
"RTN","MPIF001",101,0)
 ; DFN = ien in Patient file
"RTN","MPIF001",102,0)
 ; VCCI = CMOR ien from the institution file
"RTN","MPIF001",103,0)
 ; returned:  -1^error message - problem
"RTN","MPIF001",104,0)
 ;             1 - successful
"RTN","MPIF001",105,0)
 ; Exception will be generated if Update to File Fails only
"RTN","MPIF001",106,0)
 N RETURN,DIQUIET,DIE,DA,DR,Y,X,DIC
"RTN","MPIF001",107,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",108,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT4
"RTN","MPIF001",109,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT4
"RTN","MPIF001",110,0)
 I $G(VCCI)="" S RETURN="-1^NO CMOR PASSED" G EXIT4
"RTN","MPIF001",111,0)
 N CNT,TIEN S DIQUIET=1,CNT=0
"RTN","MPIF001",112,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",113,0)
 ; moved to here to fix problem with timing
"RTN","MPIF001",114,0)
 I $E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S VCCI=$P($$SITE^VASITE(),"^")
"RTN","MPIF001",115,0)
 ; ^ to be sure site is self for a local icn
"RTN","MPIF001",116,0)
 S VCCI="`"_VCCI
"RTN","MPIF001",117,0)
 ; ^ Have ien stuff added to use ien instead of station number
"RTN","MPIF001",118,0)
REP S DIE="^DPT(",DA=DFN,DR="991.03///^S X=VCCI"
"RTN","MPIF001",119,0)
 D ^DIE
"RTN","MPIF001",120,0)
 S CNT=CNT+1
"RTN","MPIF001",121,0)
 S TIEN=$P($$MPINODE^MPIFAPI(DFN),"^",3)
"RTN","MPIF001",122,0)
 I "`"_TIEN'=VCCI&(CNT<4) G REP
"RTN","MPIF001",123,0)
 I "`"_TIEN'=VCCI&(CNT>3) D
"RTN","MPIF001",124,0)
 .S RETURN="-1^Couldn't Update CMOR"
"RTN","MPIF001",125,0)
 .D START^RGHLLOG(0)
"RTN","MPIF001",126,0)
 .D EXC^RGHLLOG(221,"Unable to update CMOR to "_$$STA^XUAF4(TIEN)_" for patient DFN= "_DFN,DFN)
"RTN","MPIF001",127,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIF001",128,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",129,0)
EXIT4 ;
"RTN","MPIF001",130,0)
 Q RETURN
"RTN","MPIF001",131,0)
 ;
"RTN","MPIF001",132,0)
SETICN(DFN,ICN,CHKSUM) ;
"RTN","MPIF001",133,0)
 ; ** this function is to only be used by approved packages **
"RTN","MPIF001",134,0)
 ;
"RTN","MPIF001",135,0)
 ; This function updates the ICN and ICN Checksum fields in the Patient 
"RTN","MPIF001",136,0)
 ; file for a given patient.
"RTN","MPIF001",137,0)
 ; DFN - ien in the Patient file to be updated
"RTN","MPIF001",138,0)
 ; ICN - ICN (without checksum) to be updated
"RTN","MPIF001",139,0)
 ; CHKSUM - ICN checksum
"RTN","MPIF001",140,0)
 ; return:  -1^error message - problem
"RTN","MPIF001",141,0)
 ;          1 - successful
"RTN","MPIF001",142,0)
 N RETURN,DIQUIET,DIE,DA,DR,RGRSICN,Y,ERR
"RTN","MPIF001",143,0)
 S (RETURN,DIQUIET,RGRSICN)=1
"RTN","MPIF001",144,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT5
"RTN","MPIF001",145,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT5
"RTN","MPIF001",146,0)
 I $G(ICN)="" S RETURN="-1^NO ICN PASSED" G EXIT5
"RTN","MPIF001",147,0)
 I $G(CHKSUM)="" S RETURN="-1^NO CHKSUM PASSED" G EXIT5
"RTN","MPIF001",148,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)'=$E(ICN,1,3) S RETURN="-1^Don't overwrite national with local" G EXIT5
"RTN","MPIF001",149,0)
 ; ^ stop local from overwriting a national ICN
"RTN","MPIF001",150,0)
 I +$$GETICN(DFN)>0 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3),$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE(),"^",3) S RETURN="-1^Don't overwrite local ICN with another Local ICN" G EXIT5
"RTN","MPIF001",151,0)
 ; ^ STOP LOCAL FROM OVERWRITING ANOTHER LOCAL ICN
"RTN","MPIF001",152,0)
 I $D(^DPT("AICN",ICN)) D
"RTN","MPIF001",153,0)
 .Q:DFN=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",154,0)
 .I DFN'=($O(^DPT("AICN",ICN,""))) D
"RTN","MPIF001",155,0)
 ..N DFN2 S DFN2=$O(^DPT("AICN",ICN,""))
"RTN","MPIF001",156,0)
 ..I '$D(TWODFN) D TWODFNS^MPIF002(DFN2,DFN,ICN)
"RTN","MPIF001",157,0)
 .S RETURN="-1^ICN ALREADY IN USE"
"RTN","MPIF001",158,0)
 G:+RETURN=-1 EXIT5
"RTN","MPIF001",159,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",160,0)
 S DIQUIET=1
"RTN","MPIF001",161,0)
 S DIE="^DPT(",DA=DFN,DR="991.01///^S X=ICN;991.02///^S X=CHKSUM"
"RTN","MPIF001",162,0)
 D ^DIE
"RTN","MPIF001",163,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",164,0)
 I +RETURN>0 D
"RTN","MPIF001",165,0)
 .K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",166,0)
 .I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,1)
"RTN","MPIF001",167,0)
 .I $E(ICN,1,3)'=$P($$SITE^VASITE(),"^",3) S ERR=$$SETLOC(DFN,0)
"RTN","MPIF001",168,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",169,0)
EXIT5 ;
"RTN","MPIF001",170,0)
 Q RETURN
"RTN","MPIF001",171,0)
 ;
"RTN","MPIF001",172,0)
SETLOC(DFN,DELFLAG) ;
"RTN","MPIF001",173,0)
 ; ** This function should be only used by approved packages **
"RTN","MPIF001",174,0)
 ;
"RTN","MPIF001",175,0)
 ; This function updates the LOCALLY ASSIGNED ICN field in the Patient
"RTN","MPIF001",176,0)
 ; for the given patient
"RTN","MPIF001",177,0)
 ;DFN - ien from Patient file of patient to be updated
"RTN","MPIF001",178,0)
 ;DELFLAG - 1 is to turn the flag on
"RTN","MPIF001",179,0)
 ;        - 0 is to turn off the flag
"RTN","MPIF001",180,0)
 ;
"RTN","MPIF001",181,0)
 N RETURN,DIQUIET,DIE,DA,DR,VALUE,Y
"RTN","MPIF001",182,0)
 S (RETURN,DIQUIET)=1
"RTN","MPIF001",183,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN PASSED" G EXIT6
"RTN","MPIF001",184,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT6
"RTN","MPIF001",185,0)
 I '$D(NOLOCK) D LOCK
"RTN","MPIF001",186,0)
 S DIQUIET=1,VALUE=$S($G(DELFLAG)=0:"@",1:1)
"RTN","MPIF001",187,0)
 S DIE="^DPT(",DA=DFN,DR="991.04///^S X=VALUE"
"RTN","MPIF001",188,0)
 D ^DIE
"RTN","MPIF001",189,0)
 I +$G(Y)=-1 S RETURN="-1^UNSUCCESSFUL DIE CALL"
"RTN","MPIF001",190,0)
 I +RETURN>0 K ^DPT("AMPIMIS",DFN)
"RTN","MPIF001",191,0)
 I '$D(NOLOCK) D UNLOCK
"RTN","MPIF001",192,0)
EXIT6 ;
"RTN","MPIF001",193,0)
 Q RETURN
"RTN","MPIF001",194,0)
 ;
"RTN","MPIF001",195,0)
IFLOCAL(DFN) ; This function is used to see if a patient has a local ICN
"RTN","MPIF001",196,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",197,0)
 ; returned:  0 = patient does not exist, dfn is not defined or no MPI node OR Patient does not have a local ICN
"RTN","MPIF001",198,0)
 ;            1 = patient has a Local ICN assigned
"RTN","MPIF001",199,0)
 Q:$G(DFN)="" 0
"RTN","MPIF001",200,0)
 Q:$G(^DPT(DFN,0))="" 0
"RTN","MPIF001",201,0)
 Q:'$D(^DPT(DFN,"MPI")) 0
"RTN","MPIF001",202,0)
 Q:$E($$GETICN(DFN),1,3)=$P($$SITE^VASITE,"^",3) 1
"RTN","MPIF001",203,0)
 Q 0
"RTN","MPIF001",204,0)
 ;
"RTN","MPIF001",205,0)
IFVCCI(DFN) ; this function returns 1 if your facility is the CMOR for the given pt
"RTN","MPIF001",206,0)
 ; DFN - ien of patient in Patient file
"RTN","MPIF001",207,0)
 ; returns: 1 = your site in the CMOR for this patient
"RTN","MPIF001",208,0)
 ;          -1 = your site is not the CMOR for this patient
"RTN","MPIF001",209,0)
 ;          0^ERROR MSG
"RTN","MPIF001",210,0)
 N VCCI,SITE
"RTN","MPIF001",211,0)
 I $G(DFN)'>0 Q "0^No DFN Passed"
"RTN","MPIF001",212,0)
 S VCCI=$P($$GETVCCI(DFN),"^",1)
"RTN","MPIF001",213,0)
 S SITE=$P($$SITE^VASITE,"^",3)\1
"RTN","MPIF001",214,0)
 I $P(VCCI,"^",1)=-1 Q -1
"RTN","MPIF001",215,0)
 I VCCI'=SITE Q -1
"RTN","MPIF001",216,0)
 Q 1
"RTN","MPIF001",217,0)
 ;
"RTN","MPIF001",218,0)
HL7CMOR(DFN,SEP) ; This function returns the CMOR station number and institution name for
"RTN","MPIF001",219,0)
 ; the given patient.
"RTN","MPIF001",220,0)
 ; DFN = ien for patient in Patient file
"RTN","MPIF001",221,0)
 ; SEP = delimiter to separate station number and name
"RTN","MPIF001",222,0)
 ; returned:  Station Number <sep> Institution name
"RTN","MPIF001",223,0)
 ;            -1^error message
"RTN","MPIF001",224,0)
 N RETURN,NODE,PTR,STAT
"RTN","MPIF001",225,0)
 I $G(DFN)'>0 S RETURN="-1^NO DFN" G EXIT7
"RTN","MPIF001",226,0)
 I $G(SEP)="" S RETURN="-1^NO FIELD SEPERATOR" G EXIT7
"RTN","MPIF001",227,0)
 I '$D(^DPT(DFN,0)) S RETURN="-1^PATIENT NOT IN DATABASE" G EXIT7
"RTN","MPIF001",228,0)
 I $$MPINODE^MPIFAPI(DFN)<1 S RETURN="-1^NO MPI NODE" G EXIT7
"RTN","MPIF001",229,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIF001",230,0)
 S PTR=$P(NODE,"^",3)
"RTN","MPIF001",231,0)
 I PTR'>0 S RETURN="-1^NO CMOR DEFINED FOR PT" G EXIT7
"RTN","MPIF001",232,0)
 S STAT=$$NNT^XUAF4(PTR)
"RTN","MPIF001",233,0)
 I STAT="" S RETURN="-1^PTS CMOR IS DANGLING PTR" G EXIT7
"RTN","MPIF001",234,0)
 I $P(STAT,"^")="" S RETURN="-1^NO INSTITUTION NAME" G EXIT7
"RTN","MPIF001",235,0)
 S RETURN=$P(STAT,"^",2)_SEP_$P(STAT,"^")
"RTN","MPIF001",236,0)
EXIT7 ;
"RTN","MPIF001",237,0)
 Q RETURN
"RTN","MPIF001",238,0)
 ;
"RTN","MPIF001",239,0)
LOCK ;
"RTN","MPIF001",240,0)
 F  L +^DPT(DFN,"MPI"):10 Q:$T
"RTN","MPIF001",241,0)
 Q
"RTN","MPIF001",242,0)
 ;
"RTN","MPIF001",243,0)
UNLOCK ;
"RTN","MPIF001",244,0)
 L -^DPT(DFN,"MPI")
"RTN","MPIF001",245,0)
 Q
"RTN","MPIFA24")
0^1^B20262010
"RTN","MPIFA24",1,0)
MPIFA24 ;BPOFO/CMC-A24 PROCESSING ROUTINE ;18 Mar 02
"RTN","MPIFA24",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,24,27,31,25,41**;30 Apr 99
"RTN","MPIFA24",3,0)
 ;
"RTN","MPIFA24",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24",7,0)
 ;  ^DPT("AICN" - #2070
"RTN","MPIFA24",8,0)
 ;  DELETETF^VAFCTFU, FILE^VAFCTFU - #2988
"RTN","MPIFA24",9,0)
 ;
"RTN","MPIFA24",10,0)
 ;PROCESS A24 RESULTING FROM A28 ADD TO MPI MESSAGE OR FROM A40 MERGE
"RTN","MPIFA24",11,0)
A24 ;
"RTN","MPIFA24",12,0)
 N MPII,MPIJ,ARRY,SEG,CNT,ERR,SITE,MSG,DFN,IEN,LIST,RARRY
"RTN","MPIFA24",13,0)
 S (CNT,ERR,FIRST)=1
"RTN","MPIFA24",14,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIFA24",15,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIFA24",16,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIFA24",17,0)
 .I SEG="MSH" D MSH(.ARRY,.MSG) Q
"RTN","MPIFA24",18,0)
 .I SEG="EVN" D EVN(.ARRY,.MSG) Q
"RTN","MPIFA24",19,0)
 .I SEG="PID" D PID(.ARRY,.MSG,FIRST) D:FIRST=1  S FIRST=2 Q
"RTN","MPIFA24",20,0)
 ..;preserve the retained ICN values 991.01 and 991.02
"RTN","MPIFA24",21,0)
 .. S RARRY(991.01)=ARRY(991.01),RARRY(991.02)=ARRY(991.02)
"RTN","MPIFA24",22,0)
 .I SEG="PD1" D PD1(.ARRY,.MSG) Q
"RTN","MPIFA24",23,0)
 ;
"RTN","MPIFA24",24,0)
 ;restore the retained ICN values
"RTN","MPIFA24",25,0)
 S ARRY(991.01)=RARRY(991.01),ARRY(991.02)=RARRY(991.02)
"RTN","MPIFA24",26,0)
 ;UPDATE 991.01, 991.02, 991.03
"RTN","MPIFA24",27,0)
 ;**41 first check for DFN, if this DFN location is here
"RTN","MPIFA24",28,0)
 I $G(ARRY("DFN",2))'=""&($G(ARRY("DFNLOC"))=$P($$SITE^VASITE,"^",3)) S DFN=ARRY("DFN",2)
"RTN","MPIFA24",29,0)
 ;**41 if dfn is not passed set DFN from ICN
"RTN","MPIFA24",30,0)
 I $G(DFN)="" D
"RTN","MPIFA24",31,0)
 . I $G(ARRY("ICN",2))'="" S DFN=$$GETDFN^MPIF001(ARRY("ICN",2))
"RTN","MPIFA24",32,0)
 . I $G(ARRY("ICN",2))=""!(+$G(DFN)'>0) D
"RTN","MPIFA24",33,0)
 .. I $G(ARRY("DFN",2))'="" S DFN=ARRY("DFN",2)
"RTN","MPIFA24",34,0)
 .. I $G(ARRY("DFN",2))="" S DFN=ARRY("DFN",1)
"RTN","MPIFA24",35,0)
 S ARRY(991.03)=$$LKUP^XUAF4(ARRY(991.03))
"RTN","MPIFA24",36,0)
 I +$G(DFN)'>0 S ERR="-1^Unknown Identifier(s) ICN#"_$G(ARRY("ICN",2))_" and DFN#"_$G(ARRY("DFN",2))
"RTN","MPIFA24",37,0)
 I +$G(DFN)>0 S ERR=$$UPDATE^MPIFAPI(DFN,"ARRY",0) D
"RTN","MPIFA24",38,0)
 .;remove ALL Treating Facilities except your sites and add the CMOR
"RTN","MPIFA24",39,0)
 .D TFL^VAFCTFU1(.LIST,DFN) I $O(LIST(0)) D
"RTN","MPIFA24",40,0)
 .. N LOC,MPINODE,LOCIEN,CMOR,MPIFX,ERROR
"RTN","MPIFA24",41,0)
 .. S (CMOR,MPIFX)=0 F  S MPIFX=$O(LIST(MPIFX)) Q:'MPIFX  I $P(LIST(MPIFX),"^",5)="VAMC" D
"RTN","MPIFA24",42,0)
 ... ;get MPI node
"RTN","MPIFA24",43,0)
 ... S MPINODE=$$MPINODE^MPIFAPI(DFN),LOC=$P(LIST(MPIFX),"^"),LOCIEN=$$IEN^XUAF4(LOC)
"RTN","MPIFA24",44,0)
 ... I LOC=$P($$SITE^VASITE,"^",3) Q  ;do not delete own site
"RTN","MPIFA24",45,0)
 ... I LOCIEN=$P(MPINODE,"^",3) S CMOR=LOCIEN Q  ;do not delete CMOR site
"RTN","MPIFA24",46,0)
 ... S ERROR=$$DELETETF^VAFCTFU($P(MPINODE,"^",1),LOCIEN)
"RTN","MPIFA24",47,0)
 .. ;add CMOR site to TF list if it did not already exist
"RTN","MPIFA24",48,0)
 .. I CMOR'=0 D FILE^VAFCTFU(DFN,CMOR,1)
"RTN","MPIFA24",49,0)
 .; trigger A31 to MPI incase there have been edits since the ICN was created -- tasked off
"RTN","MPIFA24",50,0)
 .S ZTRTN="TA31^MPIFA31B",ZTDESC="A31 triggered from A24"
"RTN","MPIFA24",51,0)
 .S ZTSAVE("DFN")=DFN,ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFA24",52,0)
 .D ^%ZTLOAD
"RTN","MPIFA24",53,0)
 .K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","MPIFA24",54,0)
 ;
"RTN","MPIFA24",55,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIFA24",56,0)
 S $P(HLA("HLA",1),HL("FS"),7)="ICN="_ARRY("ICN",1)
"RTN","MPIFA24",57,0)
 D LINK^HLUTIL3(ARRY("SITE"),.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIFA24",58,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFRSLT,"",.HL)
"RTN","MPIFA24",59,0)
 K LINK,MPIFRSLT
"RTN","MPIFA24",60,0)
 ;PATCH 25
"RTN","MPIFA24",61,0)
 I ARRY("ICN",1)'=ARRY("ICN",2),ARRY("ICN",2)'="" D
"RTN","MPIFA24",62,0)
 .; ^ checking if this is a result of a "merge" of ICNs from the MPI
"RTN","MPIFA24",63,0)
 .; to trigger if this is station 200 the MERGE for the FHIE Framework
"RTN","MPIFA24",64,0)
 .Q:$P($$SITE^VASITE,"^",3)'=200
"RTN","MPIFA24",65,0)
 .N FHIE S FHIE=$$MERGE^OMGPIDMI(ARRY("ICN",2),ARRY("ICN",1))
"RTN","MPIFA24",66,0)
 .;       ^^ THIS API IS ONLY AVAILABLE ON THE FHIE HOST SYSTEM
"RTN","MPIFA24",67,0)
 .I +FHIE=-1 D START^RGHLLOG(),EXC^RGHLLOG(208,$P(FHIE,"^",2),DFN),STOP^RGHLLOG()
"RTN","MPIFA24",68,0)
 Q
"RTN","MPIFA24",69,0)
 ;
"RTN","MPIFA24",70,0)
MSH(ARY,MSG) ;processing MSH fields
"RTN","MPIFA24",71,0)
 N COMP
"RTN","MPIFA24",72,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",73,0)
 S ARY("SITE")=$$LKUP^XUAF4($P($P(MSG,HL("FS"),4),COMP))
"RTN","MPIFA24",74,0)
 Q
"RTN","MPIFA24",75,0)
 ;
"RTN","MPIFA24",76,0)
EVN(ARY,MSG) ;processing EVN fields
"RTN","MPIFA24",77,0)
 S ARY("EVTR")=$P(MSG,HL("FS"),2) ;not currently used
"RTN","MPIFA24",78,0)
 S ARY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA24",79,0)
 Q
"RTN","MPIFA24",80,0)
 ;
"RTN","MPIFA24",81,0)
PID(ARY,MSG,FIRST) ;processing PID fields
"RTN","MPIFA24",82,0)
 N REP,PID,COMP,SUBCOMP,MPIDFN,MPISSN,ICN
"RTN","MPIFA24",83,0)
 S REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24",84,0)
 S MPISSN="",MPIDFN=""
"RTN","MPIFA24",85,0)
 ;**41 replaced with line below D PIDPROC^MPIFA43(.ICN,.MPISSN,.MPIDFN,.PID)
"RTN","MPIFA24",86,0)
 D PIDP^RGADTP1(.MSG,.ARY,.HL)
"RTN","MPIFA24",87,0)
 I FIRST=1 S ARY(991.01)=+ARY("ICN"),ARY(991.02)=$P(ARY("ICN"),"V",2)
"RTN","MPIFA24",88,0)
 S ARY("ICN",FIRST)=ARY("ICN")
"RTN","MPIFA24",89,0)
 S ARY("SSN",FIRST)=ARY("SSN")
"RTN","MPIFA24",90,0)
 S ARY("DFN",FIRST)=ARY("DFN")
"RTN","MPIFA24",91,0)
 Q
"RTN","MPIFA24",92,0)
 ;
"RTN","MPIFA24",93,0)
PD1(ARY,MSG) ;processing PD1 fields
"RTN","MPIFA24",94,0)
 N COMP
"RTN","MPIFA24",95,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",96,0)
 S ARY(991.03)=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA24",97,0)
 Q
"RTN","MPIFA24",98,0)
 ;
"RTN","MPIFA24",99,0)
PROC ;
"RTN","MPIFA24",100,0)
 N NXT,DFN
"RTN","MPIFA24",101,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24",102,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24",103,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24",104,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24",105,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24",106,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24",107,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24",108,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24",109,0)
 Q
"RTN","MPIFA40")
0^5^B11051193
"RTN","MPIFA40",1,0)
MPIFA40 ;BP/CMC-BUILD A40 MERGE MESSAGE ;25 MARCH 2002
"RTN","MPIFA40",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,41**;30 Apr 99
"RTN","MPIFA40",3,0)
 ;
"RTN","MPIFA40",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA40",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA40",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA40",7,0)
 ;
"RTN","MPIFA40",8,0)
A40(DFN,DFN2) ;BUILD AND SEND A40
"RTN","MPIFA40",9,0)
 N PID,PD1,EVN,PD1,MRG,MPI,RESLT,CNT,ICN1,ICN2
"RTN","MPIFA40",10,0)
 D INIT^HLFNC2("MPIF ADT-A40 SERVER",.HL)
"RTN","MPIFA40",11,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA40",12,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA40",13,0)
 S ERR=""
"RTN","MPIFA40",14,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A40",.ERR)
"RTN","MPIFA40",15,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",16,0)
 D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL,.ERR) ;**41
"RTN","MPIFA40",17,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",18,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA40",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",20,0)
 D BLDMRG(DFN2,"1,7",.MRG,.HL,.ERR)
"RTN","MPIFA40",21,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA40",22,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA40",23,0)
 S HLA("HLS",4)=MRG
"RTN","MPIFA40",24,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA40",25,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA40",26,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA40",27,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA40",28,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA40",29,0)
 S HLL("LINKS",1)="MPIF ADT-A40 CLIENT^"_MPI
"RTN","MPIFA40",30,0)
 D GENERATE^HLMA("MPIF ADT-A40 SERVER","LM",1,.MPIFRSLT,"","") ;**41
"RTN","MPIFA40",31,0)
 S RESLT=$S(+MPIFRSLT:MPIFRSLT,1:$P(MPIFRSLT,"^",3))
"RTN","MPIFA40",32,0)
 S ^XTMP("MPIFA40%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA40 msg to MPI for DFN "_DFN
"RTN","MPIFA40",33,0)
 I +RESLT D
"RTN","MPIFA40",34,0)
 .S ICN1=$$GETICN^MPIF001(DFN),ICN2=$$GETICN^MPIF001(DFN2)
"RTN","MPIFA40",35,0)
 .S ^XTMP("MPIFA40%"_DFN,DFN2,"MPI",0)="A"
"RTN","MPIFA40",36,0)
 .S ^XTMP("MPIFA40%"_DFN,DFN2,"MPI",1)=ICN1_"^"_ICN2_"^"_RESLT
"RTN","MPIFA40",37,0)
 K HLA,HLEID,HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),MPIFRSLT ;**41
"RTN","MPIFA40",38,0)
 Q RESLT
"RTN","MPIFA40",39,0)
 ;
"RTN","MPIFA40",40,0)
RES ;
"RTN","MPIFA40",41,0)
 N NXT
"RTN","MPIFA40",42,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA40",43,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA40",44,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA40",45,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA40",46,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA40",47,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA40",48,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA40",49,0)
 K ^XTMP("MPIFA40%"_DFN)
"RTN","MPIFA40",50,0)
 Q
"RTN","MPIFA40",51,0)
 ;
"RTN","MPIFA40",52,0)
BLDMRG(IEN,FLD,SEG,HL,ERR) ; bld MRG segment ONLY FIELDS 2 AND 8 SUPPORTED
"RTN","MPIFA40",53,0)
 N NODE,MPIZN,MG,X,COMP,SUBCOMP,REP,NAME,ICN,SITE
"RTN","MPIFA40",54,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA40",55,0)
 S MPIZN=$D(^DPT(IEN,0))
"RTN","MPIFA40",56,0)
 I MPIZN="" S ERR="-1^No such DFN entry "_IEN Q
"RTN","MPIFA40",57,0)
 S SEG="MRG"
"RTN","MPIFA40",58,0)
 ;repeat prior ID's including ICN and DFN
"RTN","MPIFA40",59,0)
 S NODE=$$MPINODE^MPIFAPI(IEN)
"RTN","MPIFA40",60,0)
 S ICN=$P(NODE,"^",1)_"V"_$P(NODE,"^",2),SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFA40",61,0)
 S MG(2)=ICN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITE_SUBCOMP_"L"_REP_IEN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_SITE_SUBCOMP_"L" ;**41
"RTN","MPIFA40",62,0)
 ;NAME
"RTN","MPIFA40",63,0)
 S NAME("FILE")=2,NAME("IENS")=IEN,NAME("FIELD")=.01
"RTN","MPIFA40",64,0)
 S MG(8)=$$HLNAME^XLFNAME(.NAME,"",COMP)
"RTN","MPIFA40",65,0)
 S $P(MG(8),COMP,7)="L"
"RTN","MPIFA40",66,0)
 S $P(SEG,HL("FS"),2)=MG(2)
"RTN","MPIFA40",67,0)
 S $P(SEG,HL("FS"),8)=MG(8)
"RTN","MPIFA40",68,0)
 Q
"RTN","MPIFA43")
0^2^B25989400
"RTN","MPIFA43",1,0)
MPIFA43 ;BIR/DLR-Utility for processing an ADT-A43 Un-link ID ;MAR 18, 2002
"RTN","MPIFA43",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,41**;30 Apr 99
"RTN","MPIFA43",3,0)
DBIA ; Supported IA's
"RTN","MPIFA43",4,0)
 ;
"RTN","MPIFA43",5,0)
 ;IA: 2796  - EXC, START, and STOP^RGHLLOG
"RTN","MPIFA43",6,0)
 ;IA: 2988  - $$DELALLTF and $$DELETETF^VAFCTFU
"RTN","MPIFA43",7,0)
 ;IA: 3767  - PIDP^RGADTP1
"RTN","MPIFA43",8,0)
 ;
"RTN","MPIFA43",9,0)
IN ;Entry point for processing ADT-A43 - Move patient information
"RTN","MPIFA43",10,0)
 ;Called from the MPIF ADT-A43 CLIENT protocol processing routine
"RTN","MPIFA43",11,0)
 ;There are no inputs or outputs
"RTN","MPIFA43",12,0)
 ;
"RTN","MPIFA43",13,0)
 N MPIF,STATN,MPIFI,MSG,SG,MPIFARR,PDFN,INST,MFUPT,PDLT,TFIEN,ICNAUTH,MPISITE,MRG
"RTN","MPIFA43",14,0)
 N ICN,HLCOMP,CNT,X,MPIFERR,MPIFX,MPIDFN,MPISSN,ERROR,DFN,NODE,CMOR2,PID,ARRAY
"RTN","MPIFA43",15,0)
 S MPISSN="",MPIDFN="",ICN="",ERROR=""
"RTN","MPIFA43",16,0)
INIT ;Process in the ADT-A43 Move Patient Identifier msg
"RTN","MPIFA43",17,0)
 F MPIFI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPIF(MPIFI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIFA43",18,0)
 D MOVE(.ARRAY,.ERROR)
"RTN","MPIFA43",19,0)
 ;create response message
"RTN","MPIFA43",20,0)
 S CNT=1
"RTN","MPIFA43",21,0)
 S HLA("HLA",1)="MSA"_HL("FS")_$S($G(ERROR)=0:"AA",1:"AE")_HL("FS")_HL("MID")_HL("FS")_$S($G(ERROR)=0:"",1:$P(ERROR,"^",2)) S CNT=CNT+1
"RTN","MPIFA43",22,0)
 D ROUTE
"RTN","MPIFA43",23,0)
 ;Send back the appl. ack (ACK) with the ADT-A43 transaction status
"RTN","MPIFA43",24,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFERR,"",.HLP)
"RTN","MPIFA43",25,0)
 Q
"RTN","MPIFA43",26,0)
PICK ;check routine for segment entry point
"RTN","MPIFA43",27,0)
 I $T(@SG)]"" D @SG
"RTN","MPIFA43",28,0)
 I $T(@SG)="" Q
"RTN","MPIFA43",29,0)
 Q
"RTN","MPIFA43",30,0)
MSH ;;MSH
"RTN","MPIFA43",31,0)
 ;process the MSH segment
"RTN","MPIFA43",32,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIFA43",33,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIFA43",34,0)
 S MPIFARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","MPIFA43",35,0)
 Q
"RTN","MPIFA43",36,0)
EVN ;;EVN
"RTN","MPIFA43",37,0)
 ;process the EVN segment
"RTN","MPIFA43",38,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA43",39,0)
 Q
"RTN","MPIFA43",40,0)
PID ;;PID
"RTN","MPIFA43",41,0)
 ;process the PID segment
"RTN","MPIFA43",42,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP,MPIJ
"RTN","MPIFA43",43,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",44,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",45,0)
 D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","MPIFA43",46,0)
 ;ARRAY("ICN") = NEW ICN  and  ARRAY("DFN") = mismatched record to be corrected
"RTN","MPIFA43",47,0)
 Q
"RTN","MPIFA43",48,0)
PD1 ;processing PD1 fields for new CMOR
"RTN","MPIFA43",49,0)
 N COMP
"RTN","MPIFA43",50,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA43",51,0)
 S ARRAY("CMOR")=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA43",52,0)
 Q
"RTN","MPIFA43",53,0)
MRG ;
"RTN","MPIFA43",54,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP,FID,ID
"RTN","MPIFA43",55,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",56,0)
 N MPIFX,ID,AUTH
"RTN","MPIFA43",57,0)
 S FID=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",58,0)
 F MPIFX=1:1:$L(FID,REP)+1 S ID=$P(FID,REP,MPIFX),PID=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIFA43",59,0)
 . I AUTH="USSSA" S MPISSN=PID
"RTN","MPIFA43",60,0)
 . ;capture the old or mismatched ICN in ARRAY("ICNMISMATCH")
"RTN","MPIFA43",61,0)
 . I AUTH="USVHA" I IDTYP="NI" S (ARRAY("ICNMISMATCH"),ICN)=PID S ARRAY("ICNMISMATCHLOC")=LOC
"RTN","MPIFA43",62,0)
 . I AUTH="USVHA" I IDTYP="PI" S MPIDFN=PID S ARRAY("DFNLOC")=LOC
"RTN","MPIFA43",63,0)
 Q
"RTN","MPIFA43",64,0)
RSP ;response process logic entry point
"RTN","MPIFA43",65,0)
 Q
"RTN","MPIFA43",66,0)
ROUTE ;routing logic entry point
"RTN","MPIFA43",67,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","MPIFA43",68,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="MPIF ADT-A43 CLIENT"_"^"_MPI
"RTN","MPIFA43",69,0)
 .I $P($G(MPI),U)=-1 D
"RTN","MPIFA43",70,0)
 ..N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA43",71,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified ",$G(PDFN))
"RTN","MPIFA43",72,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA43",73,0)
 Q
"RTN","MPIFA43",74,0)
MOVE(ARRAY,ERROR) ;
"RTN","MPIFA43",75,0)
 ;replace ARRAY("ICNMISMATCHED") with ARRAY("ICN")
"RTN","MPIFA43",76,0)
 N MPIARR
"RTN","MPIFA43",77,0)
 S ERROR=0
"RTN","MPIFA43",78,0)
 ;I ARRAY("DFNLOC")="" OLD MESSAGING SO USE ARRAY("ICNMISMATCHLOC")
"RTN","MPIFA43",79,0)
 I $G(ARRAY("DFNLOC"))="" S ARRAY("DFNLOC")=ARRAY("ICNMISMATCHLOC")
"RTN","MPIFA43",80,0)
 I $G(ARRAY("CMOR"))="" S ARRAY("CMOR")=ARRAY("DFNLOC")
"RTN","MPIFA43",81,0)
 ;if assigning authority'= site station# then Quit because this is not the mismatched site so MFN-M05 sent as a result of site removal on MPI will remove it from all sites TF list
"RTN","MPIFA43",82,0)
 I ARRAY("DFNLOC")'=$P($$SITE^VASITE,"^",3) D  Q
"RTN","MPIFA43",83,0)
 .;if assigning authority '= site station# then remove assigning authority from TF list for the given ICN
"RTN","MPIFA43",84,0)
 .N MPISITE S MPISITE=$$IEN^XUAF4(ARRAY("DFNLOC"))
"RTN","MPIFA43",85,0)
 . I ARRAY("DFNLOC")'>0 S ERROR="-1^Unable to remove station#"_ARRAY("DFNLOC")_" from TF list" Q
"RTN","MPIFA43",86,0)
 . I +ARRAY("DFNLOC")>0 S ERROR=$$DELETETF^VAFCTFU(+ARRAY("ICNMISMATCH"),MPISITE)
"RTN","MPIFA43",87,0)
 ;delete all TF's for this mismatched record
"RTN","MPIFA43",88,0)
 S ERROR=$$DELALLTF^VAFCTFU(ARRAY("ICNMISMATCH"))
"RTN","MPIFA43",89,0)
 ;if ARRAY("DFN")="" assume this is old message format and use ARRAY("ICNMISMATCHED") to get the DFN that was mismatched
"RTN","MPIFA43",90,0)
 I $G(ARRAY("DFN"))="" D  Q
"RTN","MPIFA43",91,0)
 . S ARRAY("DFN")=$$GETDFN^MPIF001(ARRAY("ICNMISMATCH")) I +ARRAY("DFN")'>0 S ERROR="-1^Unable to break ICN "_ARRAY("ICNMISMATCH")_" because that ICN is unknown"
"RTN","MPIFA43",92,0)
 . Q:+$G(ERROR)=-1
"RTN","MPIFA43",93,0)
 . S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",94,0)
 . S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",95,0)
 ;if new messaging
"RTN","MPIFA43",96,0)
 I ARRAY("ICN")'="""" D
"RTN","MPIFA43",97,0)
 . ;delete the entry first to prevent the ICN from going into history
"RTN","MPIFA43",98,0)
 . S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",99,0)
 . S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",100,0)
 . ;update the record with the new ICN
"RTN","MPIFA43",101,0)
 . S MPIARR(991.01)=$P(ARRAY("ICN"),"V"),MPIARR(991.02)=$P(ARRAY("ICN"),"V",2),MPIARR(991.03)=$$IEN^XUAF4(ARRAY("CMOR")),MPIARR(991.05)="@",MPIARR(992)=$P(ARRAY("ICNMISMATCH"),"V"),MPIARR(993)=$P($$SITE^VASITE,"^")
"RTN","MPIFA43",102,0)
 ;move the mismatched record from ARRAY("ICNMISMATCH") to ARRAY("ICN")
"RTN","MPIFA43",103,0)
 S ERROR=$$UPDATE^MPIFAPI(ARRAY("DFN"),"MPIARR",1)
"RTN","MPIFA43",104,0)
 ;add LOCAL site to TF, if CMOR is different it will be auto added
"RTN","MPIFA43",105,0)
 D FILE^VAFCTFU(ARRAY("DFN"),+$$SITE^VASITE,1)
"RTN","MPIFA43",106,0)
 Q
"RTN","MPIFAPI1")
0^3^B26546765
"RTN","MPIFAPI1",1,0)
MPIFAPI1 ;CMC/BP-APIS FOR MPI - CONTINUED ;DEC 21, 1998
"RTN","MPIFAPI1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**37,41**;30 Apr 99
"RTN","MPIFAPI1",3,0)
 ;
"RTN","MPIFAPI1",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI1",5,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI1",6,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI1",7,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI1",8,0)
 ;
"RTN","MPIFAPI1",9,0)
UPDATE(DFN,ARR,MPISILNT,REMOVE) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI1",10,0)
 ;**37 UPDATE module moved 3/30/05 from MPIFAPI into MPIFAPI1.
"RTN","MPIFAPI1",11,0)
 ;
"RTN","MPIFAPI1",12,0)
 ;DFN - patient IEN
"RTN","MPIFAPI1",13,0)
 ;ARR - array in the format listed below
"RTN","MPIFAPI1",14,0)
 ; MPI node by passing in ARR(field#)=value
"RTN","MPIFAPI1",15,0)
 ;  **NOTE:  991.04 is only edited based on the edit of 991.01
"RTN","MPIFAPI1",16,0)
 ;           991.03 should be passed with either "@" or IEN in File 4
"RTN","MPIFAPI1",17,0)
 ; MPIFHIS node by passing ARR(992)=old ICN to remove from multiple
"RTN","MPIFAPI1",18,0)
 ; MPICMOR node by passing ARR(993)=old CMOR to remove from multiple
"RTN","MPIFAPI1",19,0)
 ;MPISILNT(optional) - 0 to not suppress exceptions (default)
"RTN","MPIFAPI1",20,0)
 ;                     1 to suppress exceptions
"RTN","MPIFAPI1",21,0)
 ;REMOVE (optional) - 0 default - use FM to delete MPI values
"RTN","MPIFAPI1",22,0)
 ;    1 to delete outside FM the MPI fields -- should only be used to clean up the stub record's mpi data, including history for icn and cmor
"RTN","MPIFAPI1",23,0)
 ;Returns : -1^error message if unable to update fields
"RTN","MPIFAPI1",24,0)
 ;          0 if successfully updated fields
"RTN","MPIFAPI1",25,0)
 ;
"RTN","MPIFAPI1",26,0)
 N MPIRETN,MPIX,VALUE,ICN,SCN,ICN2,DFN2
"RTN","MPIFAPI1",27,0)
 I DFN'>0 Q "-1^DFN passed into UPDATE^MPIFAPI not greater than 0"
"RTN","MPIFAPI1",28,0)
 Q:'$D(^DPT(DFN,0)) "-1^DFN "_DFN_" does not exist"
"RTN","MPIFAPI1",29,0)
 S MPIRETN=0,RGRSICN=""
"RTN","MPIFAPI1",30,0)
 F  L +^DPT("MPI",DFN):10 Q:$T
"RTN","MPIFAPI1",31,0)
 I $D(REMOVE) D CLEAN^MPIF002(DFN,.ARR,.MPIRETN) L -^DPT("MPI",DFN) Q MPIRETN
"RTN","MPIFAPI1",32,0)
 I $D(@ARR@(991.01)) D
"RTN","MPIFAPI1",33,0)
 .I '$D(@ARR@(991.02)) S MPIRETN="-1^ICN "_ICN_", passed without checksum" Q
"RTN","MPIFAPI1",34,0)
 .;quit if local is going to overwrite national
"RTN","MPIFAPI1",35,0)
 .S ICN=+$$GETICN^MPIF001(DFN) I ICN>0 I $E(@ARR@(991.01),1,3)=$P($$SITE^VASITE(),"^",3),$E(ICN,1,3)'=$E(@ARR@(991.01),1,3) S MPIRETN="-1^Overwriting the National ICN, "_ICN_", with a local, "_@ARR@(991.01)_", isn't allowed" Q
"RTN","MPIFAPI1",36,0)
 .; quit if ICN has already been assigned to another patient in your data base
"RTN","MPIFAPI1",37,0)
 .S ICN2=@ARR@(991.01)
"RTN","MPIFAPI1",38,0)
 . S DFN2=$O(^DPT("AICN",ICN2,"")) I DFN2'="",'$D(^DPT(DFN2)) K ^DPT("AICN",ICN2)
"RTN","MPIFAPI1",39,0)
 .;^ **41 CHECK IF THE DFN HOLDING THIS ICN IS RELATED TO BOGUS XREF
"RTN","MPIFAPI1",40,0)
 .I $D(^DPT("AICN",ICN2)),DFN'=$O(^DPT("AICN",ICN2,"")) D
"RTN","MPIFAPI1",41,0)
 ..I DFN'=($O(^DPT("AICN",ICN2,""))) D 
"RTN","MPIFAPI1",42,0)
 ...N DFN2 S DFN2=$O(^DPT("AICN",ICN2,""))
"RTN","MPIFAPI1",43,0)
 ...D TWODFNS^MPIF002(DFN2,DFN,ICN2)
"RTN","MPIFAPI1",44,0)
 ..I $P($$SITE^VASITE(),"^",3)'=200 S MPIRETN="-1^ICN "_ICN2_" is already in use for pt DFN "_DFN ;;**37
"RTN","MPIFAPI1",45,0)
 .Q:+MPIRETN=-1
"RTN","MPIFAPI1",46,0)
 .K FDA S FDA(1,2,DFN_",",991.01)=@ARR@(991.01)
"RTN","MPIFAPI1",47,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ICN (DFN="_DFN_") ICN to "_@ARR@(991.01)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",48,0)
 .I +MPIRETN'=0 Q
"RTN","MPIFAPI1",49,0)
 .K FDA S FDA(1,2,DFN_",",991.02)=@ARR@(991.02)
"RTN","MPIFAPI1",50,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ("_DFN_") ICN Checksum to "_@ARR@(991.02)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",51,0)
 .I +MPIRETN'=0 Q
"RTN","MPIFAPI1",52,0)
 .K FDA S FDA(1,2,DFN_",",991.04)="@"
"RTN","MPIFAPI1",53,0)
 .K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_" LOCALLY ASSIGNED ICN field because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",54,0)
 I MPIRETN=0 I $D(@ARR@(991.03)) D
"RTN","MPIFAPI1",55,0)
 .I @ARR@(991.03)="@" K FDA S FDA(1,2,DFN_",",991.03)="@"
"RTN","MPIFAPI1",56,0)
 .I @ARR@(991.03)'="@" I @ARR@(991.03)>0 I $$STA^XUAF4(@ARR@(991.03))'="" S FDA(1,2,DFN_",",991.03)="`"_@ARR@(991.03)
"RTN","MPIFAPI1",57,0)
 .D FILE^DIE("E","FDA(1)","MPIERR") I $D(MPIERR("DIERR")) D
"RTN","MPIFAPI1",58,0)
 ..S MPIRETN="-1^Unable to update pt's ("_DFN_") CMOR to "_@ARR@(991.03)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI1",59,0)
 ..I +$G(MPISILNT)=0 N RGLOG D START^RGHLLOG(0) D EXC^RGHLLOG(221,"Unable to update CMOR to "_@ARR@(991.03)_" for DFN="_DFN,DFN) D STOP^RGHLLOG(0)
"RTN","MPIFAPI1",60,0)
 I MPIRETN=0 I $D(@ARR@(991.05)) D
"RTN","MPIFAPI1",61,0)
 .I @ARR@(991.05)="@" D
"RTN","MPIFAPI1",62,0)
 ..S SCN=$$SUBNUM^MPIFAPI(DFN),DA=SCN,DIK="^HLS(774," D ^DIK K DIK,DA ;**37
"RTN","MPIFAPI1",63,0)
 ..S $P(^DPT(DFN,"MPI"),"^",5)=""
"RTN","MPIFAPI1",64,0)
 ..K ^DPT("ASCN2",SCN,DFN)
"RTN","MPIFAPI1",65,0)
 .I @ARR@(991.05)'="@" D
"RTN","MPIFAPI1",66,0)
 ..;do edit and return result
"RTN","MPIFAPI1",67,0)
 ..S DIE="^DPT(",DA=DFN,DR="991.05///^S X=@ARR@(991.05)" D ^DIE
"RTN","MPIFAPI1",68,0)
 I MPIRETN=0 I $D(@ARR@(992)) D
"RTN","MPIFAPI1",69,0)
 .;delete old value from history multiple
"RTN","MPIFAPI1",70,0)
 .S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPIFHIS",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPIFHIS",MPIX,0) I $P(VALUE,"^")=@ARR@(992) D
"RTN","MPIFAPI1",71,0)
 ..K ^DPT("AICN",@ARR@(992),DFN),MPIERR,FDA
"RTN","MPIFAPI1",72,0)
 ..S FDA(1,2.0992,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI1",73,0)
 ..I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_")  ICN "_@ARR@(992)_" from ICN HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI1",74,0)
 I MPIRETN=0 I $D(@ARR@(993)) D
"RTN","MPIFAPI1",75,0)
 .;delete old value from history multiple
"RTN","MPIFAPI1",76,0)
 .S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPICMOR",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPICMOR",MPIX,0) I $P(VALUE,"^")=@ARR@(993) D
"RTN","MPIFAPI1",77,0)
 ..K FDA,MPIERR S FDA(1,2.0993,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI1",78,0)
 ..I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_") CMOR "_@ARR@(993)_" from CMOR HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI1",79,0)
 K ^DPT("AMPIMIS",DFN),RGRSICN
"RTN","MPIFAPI1",80,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI1",81,0)
 Q MPIRETN
"RTN","MPIFAPI1",82,0)
 ;
"RTN","MPIFP41")
0^6^B8209904
"RTN","MPIFP41",1,0)
MPIFP41 ;;BIR/CML-MPI VISTA build post-init to search for bad ICN Checksums ;Jun 10, 2005
"RTN","MPIFP41",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**41**;30 Apr 99
"RTN","MPIFP41",3,0)
 ;
"RTN","MPIFP41",4,0)
EN ;
"RTN","MPIFP41",5,0)
 D BMES^XPDUTL("Post-init will look for patients with erroneous ICN Checksum values.")
"RTN","MPIFP41",6,0)
 ;
"RTN","MPIFP41",7,0)
 S QUEDUZ=$S($G(DUZ)="":.5,1:DUZ)
"RTN","MPIFP41",8,0)
 S ZTSAVE("QUEDUZ")="",ZTRTN="QUE^MPIFP41",ZTDESC="MPI/PD - Search for Bad ICN Checksums",ZTIO="",ZTDTH=$$NOW^XLFDT D ^%ZTLOAD
"RTN","MPIFP41",9,0)
 I $D(ZTSK) D BMES^XPDUTL("Job was queued as Task #"_ZTSK_".")
"RTN","MPIFP41",10,0)
 ;
"RTN","MPIFP41",11,0)
QUIT ;
"RTN","MPIFP41",12,0)
 K ZTSK S:$D(ZTQUEUED) ZTREQ="@"
"RTN","MPIFP41",13,0)
 K QUEDUZ,ZTDESC,ZTIO,ZTREQ,ZTRTN,ZTSAVE,ZTDTH
"RTN","MPIFP41",14,0)
 Q
"RTN","MPIFP41",15,0)
 ;
"RTN","MPIFP41",16,0)
QUE ;entry point for background job
"RTN","MPIFP41",17,0)
 N ARR,CHKSUM,DA,DFN,DIFF,DR,ERRCNT,I,ICN,LTH,MPI,NODE,OLDSUM,SITENM,SITENUM,TXTCNT,START,STOP
"RTN","MPIFP41",18,0)
 S (ERRCNT,DFN)=0,START=$$NOW^XLFDT
"RTN","MPIFP41",19,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  S NODE=$G(^DPT(DFN,"MPI")) S ICN=$P(NODE,"^") I ICN D
"RTN","MPIFP41",20,0)
 .S CHKSUM=$$CHECKDG^MPIFSPC(ICN),OLDSUM=$P(NODE,"^",2)
"RTN","MPIFP41",21,0)
 .I +OLDSUM,$L(OLDSUM)'=6 S LTH=($L(OLDSUM)+1) F I=LTH:1:6 S OLDSUM="0"_OLDSUM
"RTN","MPIFP41",22,0)
 .I CHKSUM'=OLDSUM D
"RTN","MPIFP41",23,0)
 ..S ERRCNT=ERRCNT+1,ARR(ICN)=CHKSUM_"^"_OLDSUM
"RTN","MPIFP41",24,0)
 ..S DIE="^DPT(",DA=DFN,DR="991.02///^S X=CHKSUM" D ^DIE K DIE
"RTN","MPIFP41",25,0)
 ;
"RTN","MPIFP41",26,0)
 ;calculate run time
"RTN","MPIFP41",27,0)
 S STOP=$$NOW^XLFDT
"RTN","MPIFP41",28,0)
 S DIFF=($$FMDIFF^XLFDT(STOP,START,2))/3600
"RTN","MPIFP41",29,0)
 ;
"RTN","MPIFP41",30,0)
 ;send results back to MPI
"RTN","MPIFP41",31,0)
 N XMDUZ,XMSUB,SITENM,SITENUM,MPI,XMY,XMTEXT
"RTN","MPIFP41",32,0)
 S SITENM=$P($$SITE^VASITE,"^",2),SITENUM=$P($$SITE^VASITE,"^",3)
"RTN","MPIFP41",33,0)
 S XMDUZ="MPI AUSTIN"
"RTN","MPIFP41",34,0)
 S XMSUB="MPIF*1.0*41 Post Init - "_SITENUM_"/"_SITENM
"RTN","MPIFP41",35,0)
 S XMY("G.MPI POST INIT MONITOR@MPI-AUSTIN.MED.VA.GOV")="",XMTEXT="MPI(1,"
"RTN","MPIFP41",36,0)
 S MPI(1,1)=SITENUM_"/"_SITENM_":   (Run Time = "_$J(DIFF,5,2)_" hrs)"
"RTN","MPIFP41",37,0)
 S MPI(1,2)="Found "_ERRCNT_" patients with bad ICN checksums"_$S(ERRCNT>0:" -- all have been fixed.",1:".")
"RTN","MPIFP41",38,0)
 S MPI(1,3)=""
"RTN","MPIFP41",39,0)
 I ERRCNT>0 S MPI(1,4)="(ICN/GOOD CHECKSUM^CURRENT BAD CHECKSUM)"
"RTN","MPIFP41",40,0)
 S TXTCNT=4
"RTN","MPIFP41",41,0)
 S ICN=0 F  S ICN=$O(ARR(ICN)) Q:'ICN  S TXTCNT=TXTCNT+1,MPI(1,TXTCNT)=ICN_"/"_ARR(ICN)
"RTN","MPIFP41",42,0)
 D ^XMD
"RTN","MPIFP41",43,0)
 ;send e-mail to local user who queued this job
"RTN","MPIFP41",44,0)
 N XMDUZ,XMSUB,MPI,XMY,XMTEXT
"RTN","MPIFP41",45,0)
 S XMDUZ="MPI AUSTIN"
"RTN","MPIFP41",46,0)
 S XMSUB="MPIF*1.0*41 Post Init Complete."
"RTN","MPIFP41",47,0)
 S XMY("`"_QUEDUZ_"@"_^XMB("NETNAME"))="",XMTEXT="MPI(1,"
"RTN","MPIFP41",48,0)
 S MPI(1,1)="Post Init for patch MPIF*1.0*41 has run to completion."
"RTN","MPIFP41",49,0)
 S MPI(1,2)="You should now delete routine ^MPIFP41."
"RTN","MPIFP41",50,0)
 D ^XMD
"RTN","MPIFP41",51,0)
 Q
"VER")
8.0^22.0
"BLD",2218,6)
^SEQ #39
**END**
**END**
