Released ECX*3*31 SEQ #31
Extracted from mail message
**KIDS**:ECX*3.0*31^

**INSTALL NAME**
ECX*3.0*31
"BLD",2646,0)
ECX*3.0*31^DSS EXTRACTS^0^3000309^y
"BLD",2646,4,0)
^9.64PA^727.813^1
"BLD",2646,4,727.813,0)
727.813
"BLD",2646,4,727.813,2,0)
^9.641^727.813^1
"BLD",2646,4,727.813,2,727.813,0)
LABORATORY EXTRACT  (File-top level)
"BLD",2646,4,727.813,2,727.813,1,0)
^9.6411^18^2
"BLD",2646,4,727.813,2,727.813,1,8,0)
DAY
"BLD",2646,4,727.813,2,727.813,1,18,0)
TIME
"BLD",2646,4,727.813,222)
y^y^p^^^^n
"BLD",2646,4,"APDD",727.813,727.813)

"BLD",2646,4,"APDD",727.813,727.813,8)

"BLD",2646,4,"APDD",727.813,727.813,18)

"BLD",2646,4,"B",727.813,727.813)

"BLD",2646,"ABPKG")
n
"BLD",2646,"KRN",0)
^9.67PA^19^17
"BLD",2646,"KRN",.4,0)
.4
"BLD",2646,"KRN",.401,0)
.401
"BLD",2646,"KRN",.402,0)
.402
"BLD",2646,"KRN",.403,0)
.403
"BLD",2646,"KRN",.5,0)
.5
"BLD",2646,"KRN",.84,0)
.84
"BLD",2646,"KRN",3.6,0)
3.6
"BLD",2646,"KRN",3.8,0)
3.8
"BLD",2646,"KRN",9.2,0)
9.2
"BLD",2646,"KRN",9.8,0)
9.8
"BLD",2646,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",2646,"KRN",9.8,"NM",1,0)
ECXSCXN^^0^B68147228
"BLD",2646,"KRN",9.8,"NM",2,0)
ECXSCX1^^0^B72426579
"BLD",2646,"KRN",9.8,"NM",3,0)
ECXKILL^^0^B15505464
"BLD",2646,"KRN",9.8,"NM",4,0)
ECXAPRO3^^0^B14588741
"BLD",2646,"KRN",9.8,"NM",5,0)
ECXLABN^^0^B19635860
"BLD",2646,"KRN",9.8,"NM","B","ECXAPRO3",4)

"BLD",2646,"KRN",9.8,"NM","B","ECXKILL",3)

"BLD",2646,"KRN",9.8,"NM","B","ECXLABN",5)

"BLD",2646,"KRN",9.8,"NM","B","ECXSCX1",2)

"BLD",2646,"KRN",9.8,"NM","B","ECXSCXN",1)

"BLD",2646,"KRN",19,0)
19
"BLD",2646,"KRN",19,"NM",0)
^9.68A^^
"BLD",2646,"KRN",19.1,0)
19.1
"BLD",2646,"KRN",101,0)
101
"BLD",2646,"KRN",409.61,0)
409.61
"BLD",2646,"KRN",771,0)
771
"BLD",2646,"KRN",870,0)
870
"BLD",2646,"KRN",8994,0)
8994
"BLD",2646,"KRN","B",.4,.4)

"BLD",2646,"KRN","B",.401,.401)

"BLD",2646,"KRN","B",.402,.402)

"BLD",2646,"KRN","B",.403,.403)

"BLD",2646,"KRN","B",.5,.5)

"BLD",2646,"KRN","B",.84,.84)

"BLD",2646,"KRN","B",3.6,3.6)

"BLD",2646,"KRN","B",3.8,3.8)

"BLD",2646,"KRN","B",9.2,9.2)

"BLD",2646,"KRN","B",9.8,9.8)

"BLD",2646,"KRN","B",19,19)

"BLD",2646,"KRN","B",19.1,19.1)

"BLD",2646,"KRN","B",101,101)

"BLD",2646,"KRN","B",409.61,409.61)

"BLD",2646,"KRN","B",771,771)

"BLD",2646,"KRN","B",870,870)

"BLD",2646,"KRN","B",8994,8994)

"BLD",2646,"QUES",0)
^9.62^^
"BLD",2646,"REQB",0)
^9.611^1^1
"BLD",2646,"REQB",1,0)
ECX*3.0*30^2
"BLD",2646,"REQB","B","ECX*3.0*30",1)

"FIA",727.813)
LABORATORY EXTRACT
"FIA",727.813,0)
^ECX(727.813,
"FIA",727.813,0,0)
727.813
"FIA",727.813,0,1)
y^y^p^^^^n
"FIA",727.813,0,10)

"FIA",727.813,0,11)

"FIA",727.813,0,"RLRO")

"FIA",727.813,0,"VR")
3.0^ECX
"FIA",727.813,727.813)
1
"FIA",727.813,727.813,8)

"FIA",727.813,727.813,18)

"MBREQ")
0
"PKG",513,-1)
1^1
"PKG",513,0)
DSS EXTRACTS^ECX^Decision Support System. (DSS)
"PKG",513,20,0)
^9.402P^^
"PKG",513,22,0)
^9.49I^1^1
"PKG",513,22,1,0)
3.0^2971222^2980112^11714
"PKG",513,22,1,"PAH",1,0)
31^3000309
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","ECXAPRO3")
0^4^B14588741
"RTN","ECXAPRO3",1,0)
ECXAPRO3 ;ALB/JAP - PRO Extract Audit Report (cont) ; Nov 16, 1998
"RTN","ECXAPRO3",2,0)
 ;;3.0;DSS EXTRACTS;**21,31**;Dec 22, 1997
"RTN","ECXAPRO3",3,0)
 ;
"RTN","ECXAPRO3",4,0)
TEXT ;description of line numbers as in des^rmprn62 plus summary headers
"RTN","ECXAPRO3",5,0)
 ;;100;WHEELCHAIRS AND ACCESSORIES
"RTN","ECXAPRO3",6,0)
 ;;100 A;MOTORIZED
"RTN","ECXAPRO3",7,0)
 ;;100 A1;SCOOTERS
"RTN","ECXAPRO3",8,0)
 ;;100 B;MANUAL CUSTOM
"RTN","ECXAPRO3",9,0)
 ;;100 C;MANUAL A/O
"RTN","ECXAPRO3",10,0)
 ;;100 D;ACCESSORIES
"RTN","ECXAPRO3",11,0)
 ;;100 E;CUSHION FOAM
"RTN","ECXAPRO3",12,0)
 ;;100 F;CUSHION SPEC
"RTN","ECXAPRO3",13,0)
 ;;200;ARTIFICIAL LEGS
"RTN","ECXAPRO3",14,0)
 ;;200 A;LEG IPOP
"RTN","ECXAPRO3",15,0)
 ;;200 B;LEG TEM
"RTN","ECXAPRO3",16,0)
 ;;200 C;LEG PART FOOT
"RTN","ECXAPRO3",17,0)
 ;;200 E;LEG SYMES
"RTN","ECXAPRO3",18,0)
 ;;200 F;LEG B/K
"RTN","ECXAPRO3",19,0)
 ;;200 G;LEG A/O
"RTN","ECXAPRO3",20,0)
 ;;200 H;LEG A/K
"RTN","ECXAPRO3",21,0)
 ;;200 I;LEG COMPONENT
"RTN","ECXAPRO3",22,0)
 ;;300;ARTIFICIAL ARMS AND TERMINAL DEVICES
"RTN","ECXAPRO3",23,0)
 ;;300 A;ARM B/E
"RTN","ECXAPRO3",24,0)
 ;;300 B;ARM, A/E
"RTN","ECXAPRO3",25,0)
 ;;300 C;COSMETIC GLOVES
"RTN","ECXAPRO3",26,0)
 ;;300 D;ARM, A/O
"RTN","ECXAPRO3",27,0)
 ;;300 E;TERMINAL DEVICES
"RTN","ECXAPRO3",28,0)
 ;;300 F;EXT. POWERED,ARM
"RTN","ECXAPRO3",29,0)
 ;;400;BRACES AND ORTHOTICS
"RTN","ECXAPRO3",30,0)
 ;;400 A;BRACE ANKLE
"RTN","ECXAPRO3",31,0)
 ;;400 B;BRACE LEG AK
"RTN","ECXAPRO3",32,0)
 ;;400 C;BRACE, SPINAL
"RTN","ECXAPRO3",33,0)
 ;;400 D;BRACE AL/OTH
"RTN","ECXAPRO3",34,0)
 ;;400 E;ELAS HOSE, EA
"RTN","ECXAPRO3",35,0)
 ;;400 F;BRACES, KNEE
"RTN","ECXAPRO3",36,0)
 ;;400 G;CORSET/BELT
"RTN","ECXAPRO3",37,0)
 ;;500;SHOES/ORTHOTICS
"RTN","ECXAPRO3",38,0)
 ;;500 A;ARCH SUPT, EA
"RTN","ECXAPRO3",39,0)
 ;;500 B;SHOE INLAY, EA
"RTN","ECXAPRO3",40,0)
 ;;500 C;SHOE MOLDED, EA
"RTN","ECXAPRO3",41,0)
 ;;500 D;SHOE ORTH OTH
"RTN","ECXAPRO3",42,0)
 ;;500 E;INSERTS, SHOE
"RTN","ECXAPRO3",43,0)
 ;;500 F;SHOES A/O, EA
"RTN","ECXAPRO3",44,0)
 ;;600;NEUROSENSORY AIDS
"RTN","ECXAPRO3",45,0)
 ;;600 1;EYEGLASSES PR
"RTN","ECXAPRO3",46,0)
 ;;600 A;SP OVER 2,500
"RTN","ECXAPRO3",47,0)
 ;;600 B;HEARING AIDS
"RTN","ECXAPRO3",48,0)
 ;;600 C;AID FOR BLIND
"RTN","ECXAPRO3",49,0)
 ;;600 D;CONT LENS, EA.
"RTN","ECXAPRO3",50,0)
 ;;600 E;EAR INSERT
"RTN","ECXAPRO3",51,0)
 ;;700;RESTORATIONS
"RTN","ECXAPRO3",52,0)
 ;;700 A;EYE
"RTN","ECXAPRO3",53,0)
 ;;700 B;FACIAL
"RTN","ECXAPRO3",54,0)
 ;;700 C;BODY, OTHER
"RTN","ECXAPRO3",55,0)
 ;;800;OXYGEN AND RESPIRATORY
"RTN","ECXAPRO3",56,0)
 ;;800 A;OXYGEN EQP
"RTN","ECXAPRO3",57,0)
 ;;800 B;OXYGEN CONCEN
"RTN","ECXAPRO3",58,0)
 ;;800 C;OXYGEN GAS
"RTN","ECXAPRO3",59,0)
 ;;800 D;OXYGEN, SUPPLIES
"RTN","ECXAPRO3",60,0)
 ;;800 E;OXYGEN LIQUID
"RTN","ECXAPRO3",61,0)
 ;;800 F;VENTILATOR, A/O
"RTN","ECXAPRO3",62,0)
 ;;900;MEDICAL EQUIPMENT
"RTN","ECXAPRO3",63,0)
 ;;900 A;WALKING AIDS
"RTN","ECXAPRO3",64,0)
 ;;900 B;INVALID LIFT
"RTN","ECXAPRO3",65,0)
 ;;900 C;BED HOSP STD
"RTN","ECXAPRO3",66,0)
 ;;900 D;BED HOSP SPEC
"RTN","ECXAPRO3",67,0)
 ;;900 E;MATTRESS STAN
"RTN","ECXAPRO3",68,0)
 ;;900 F;MATTRESS SPEC
"RTN","ECXAPRO3",69,0)
 ;;900 G;BED, ACCESSORIES
"RTN","ECXAPRO3",70,0)
 ;;900 H;ENVIRON CONTR
"RTN","ECXAPRO3",71,0)
 ;;900 I;SPEC HOME EQP (SAFETY)
"RTN","ECXAPRO3",72,0)
 ;;900 J;TENS UNIT
"RTN","ECXAPRO3",73,0)
 ;;900 K;MED EQP AL/OTH
"RTN","ECXAPRO3",74,0)
 ;;900 L;EQP RENTAL
"RTN","ECXAPRO3",75,0)
 ;;910;ALL OTHER SUPPLIES AND EQUIPMENT
"RTN","ECXAPRO3",76,0)
 ;;910 A;MED SUP AL/OTH
"RTN","ECXAPRO3",77,0)
 ;;920;HOME DIALYSIS PROGRAM
"RTN","ECXAPRO3",78,0)
 ;;920 A;HOME DIAL EQP
"RTN","ECXAPRO3",79,0)
 ;;920 B;HOME DIAL SUP
"RTN","ECXAPRO3",80,0)
 ;;930;ADAPTIVE EQUIPMENT
"RTN","ECXAPRO3",81,0)
 ;;930 A;MOD VANS
"RTN","ECXAPRO3",82,0)
 ;;930 B;ADAPT EQP AL/OTH
"RTN","ECXAPRO3",83,0)
 ;;940;HISA
"RTN","ECXAPRO3",84,0)
 ;;940 A;HISA SC
"RTN","ECXAPRO3",85,0)
 ;;940 B;HISA NSC
"RTN","ECXAPRO3",86,0)
 ;;960;SURGICAL IMPLANTS
"RTN","ECXAPRO3",87,0)
 ;;960 A;HEAD & NECK
"RTN","ECXAPRO3",88,0)
 ;;960 B;ABDOMEN
"RTN","ECXAPRO3",89,0)
 ;;960 C;UPPER EXTREMITY
"RTN","ECXAPRO3",90,0)
 ;;960 D;LOWER EXTREMITY
"RTN","ECXAPRO3",91,0)
 ;;960 E;THORACIC
"RTN","ECXAPRO3",92,0)
 ;;999;MISC
"RTN","ECXAPRO3",93,0)
 ;;999 A;AL/OTH ITEMS
"RTN","ECXAPRO3",94,0)
 ;;999 X;HCPCS NOT GRP
"RTN","ECXAPRO3",95,0)
 ;;999 Z;NO HCPCS
"RTN","ECXAPRO3",96,0)
 ;;R07;HEARING AID, LOCAL REPAIRS
"RTN","ECXAPRO3",97,0)
 ;;R10;WHEELCHAIRS AND ACCESSORIES
"RTN","ECXAPRO3",98,0)
 ;;R10 ;WHEELCHAIR
"RTN","ECXAPRO3",99,0)
 ;;R20;ARTIFICIAL LEGS
"RTN","ECXAPRO3",100,0)
 ;;R20 A;LEG A/K
"RTN","ECXAPRO3",101,0)
 ;;R20 B;LEG B/K, PTB
"RTN","ECXAPRO3",102,0)
 ;;R20 C;LEG B/K, STD
"RTN","ECXAPRO3",103,0)
 ;;R20 D;LEG ALL OTHER
"RTN","ECXAPRO3",104,0)
 ;;R30;ARTIFICIAL ARMS AND TERMINAL DEVICES
"RTN","ECXAPRO3",105,0)
 ;;R30 ;ART ARM,TOTAL
"RTN","ECXAPRO3",106,0)
 ;;R40;BRACES AND ORTHOTICS
"RTN","ECXAPRO3",107,0)
 ;;R40 ;BRACE TOTAL
"RTN","ECXAPRO3",108,0)
 ;;R50;SHOES/ORTHOTICS
"RTN","ECXAPRO3",109,0)
 ;;R50 A;ORTH SHOE ALL
"RTN","ECXAPRO3",110,0)
 ;;R50 B;SHOE MOD
"RTN","ECXAPRO3",111,0)
 ;;R50 C;A/O ITEM SERV
"RTN","ECXAPRO3",112,0)
 ;;R60;NEUROSENSORY AIDS
"RTN","ECXAPRO3",113,0)
 ;;R60 A;AID FOR BLIND
"RTN","ECXAPRO3",114,0)
 ;;R60 B;EYEGLASS RPR
"RTN","ECXAPRO3",115,0)
 ;;R60 C;HEARING AID
"RTN","ECXAPRO3",116,0)
 ;;R70;HOME DIALYSIS EQUIPMENT
"RTN","ECXAPRO3",117,0)
 ;;R70 ;HOME DIAL EQU
"RTN","ECXAPRO3",118,0)
 ;;R80;MEDICAL EQUIPMENT
"RTN","ECXAPRO3",119,0)
 ;;R80 A;INVALID LIFTS
"RTN","ECXAPRO3",120,0)
 ;;R80 B;REPAIR TO ECU
"RTN","ECXAPRO3",121,0)
 ;;R80 C;MED EQUIP A/O
"RTN","ECXAPRO3",122,0)
 ;;R90;ALL OTHER
"RTN","ECXAPRO3",123,0)
 ;;R90 ;ALL OTHER
"RTN","ECXAPRO3",124,0)
 ;;R90 A;SHIPPING
"RTN","ECXAPRO3",125,0)
 ;;R91;O2 & RESPIRATORY
"RTN","ECXAPRO3",126,0)
 ;;R91 A;CONCENTRATOR
"RTN","ECXAPRO3",127,0)
 ;;R91 B;VENTILATOR
"RTN","ECXAPRO3",128,0)
 ;;R91 C;EQUIPMENT A/O
"RTN","ECXAPRO3",129,0)
 ;;R91 D;SERVICE VISIT
"RTN","ECXAPRO3",130,0)
 ;;R91 E;COMPRESSED O2
"RTN","ECXAPRO3",131,0)
 ;;R91 F;LIQUID O2
"RTN","ECXAPRO3",132,0)
 ;;R99 X;HCPCS NOT GRP
"RTN","ECXAPRO3",133,0)
 ;;R99 Z;NO HCPCS
"RTN","ECXAPRO3",134,0)
 ;;QUIT
"RTN","ECXKILL")
0^3^B15505464
"RTN","ECXKILL",1,0)
ECXKILL ;BIR/DMA,PTD-Kill Local Variables ; 02/06/97 10:25 [ 03/27/97  12:43 PM ]
"RTN","ECXKILL",2,0)
 ;;3.0;DSS EXTRACTS;**9,8,21,24,31**;Dec 22, 1997
"RTN","ECXKILL",3,0)
 K %,%DT,%Y,%ZIS,A,A1,A2,ABR,B,BY,D,D0,D1,DA,DAT,DATA,DATA1,DATA2,DATA6,DATAOP,DD,DFN,DHDH,DIC,DIE,DIK,DINUM,DIQ
"RTN","ECXKILL",4,0)
 K DIR,DIRUT,DO,DR,DTOUT,DUOUT,EC,EC0,EC1,EC10,EC11,EC16,EC2,EC23,EC2NODE,EC3,EC42,EC50,EC6,EC7,ECA,ECAC,ECACA,ECAD,ECADM,ECALL
"RTN","ECXKILL",5,0)
 K ECANE,ECAO,ECARG,ECAS,ECAT,ECATSV,ECB,ECC,ECCA,ECCAN,ECCAT,ECCH,ECCN,ECCNT,ECCS,ECCSC,ECD,ECD0,ECD1,ECDA,ECDAL,ECDAT
"RTN","ECXKILL",6,0)
 K ECDATA,ECDATA1,ECDATE,ECDEN,ECDEX,ECDF,ECDFN,ECDFN0,ECDI,ECDIA,ECDIF,ECDIV,ECDL,ECDN,ECDNEW,ECDO,ECDOC,ECDR,ECDRG,ECDS,ECDSSU,ECDT,ECDTTM
"RTN","ECXKILL",7,0)
 K ECDU,ECEC0,ECED,ECED1,ECEDN,ECEDNEW,ECF,ECF1,ECFD,ECFDT,ECFILE,ECFK,ECFL,ECFR,ECGRP,ECH,ECHD,ECHEAD,ECI,ECID,ECIEN,ECIFN,ECIN
"RTN","ECXKILL",8,0)
 K ECINST,ECINV,ECIV,ECJ,ECK,ECL,ECL1,ECLAN,ECLAST,ECLDT,ECLINK,ECLIST,ECLL,ECLN,ECLOC,ECLRN,ECLX,ECLY,ECM,ECMAX,ECMIN
"RTN","ECXKILL",9,0)
 K ECXMISS,ECMN,ECMOD,ECMODS,ECMORE,ECMS,ECMSG,ECMSN,ECMT,ECMW,ECMY,ECN,ECNA,ECNDC,ECNDF,ECNFC,ECNL,ECNO,ECNODE,ECNOGO
"RTN","ECXKILL",10,0)
 K ECNT,ECO,ECO0,ECO1,ECO2,ECOB,ECODE,ECODE0,ECODE1,ECOLD,ECONE,ECOPAY,ECOPAYT,ECORTY,ECOS,ECP,ECPACK,ECPCE,ECPCE1,ECPCE2,ECPCE3,ECPCE4,ECPCE5,ECPCE6,ECPCE7,ECPIECE,ECPN,ECPRC,ECPRO
"RTN","ECXKILL",11,0)
 K ECPROF,ECPT,ECPTF,ECPTPR,ECPTTM,ECQ,ECQT,ECQTY,ECRD,ECRE,ECRED,ECREF,ECRFL,ECRN,ECROU,ECRR,ECRS,ECRSD,ECRTN,ECRX,ECS,ECSA,ECSC
"RTN","ECXKILL",12,0)
 K ECSD,ECSD1,ECSDN,ECSN,ECSR,ECSS,ECST,ECSTOP,ECSU,ECT,ECT1,ECTD,ECTD1,ECTEMP,ECTM,ECTNTL,ECTOTAL,ECTREAT,ECTRT,ECTS,ECTY
"RTN","ECXKILL",13,0)
 K ECUD,ECUI,ECUN,ECUN1,ECUNIT,ECURG,ECUT,ECUT2,ECUT3,ECV,ECW,ECWC,ECWD,ECX,ECXB,ECXLNCNT,ECXMDA,ECXMDT,ECXNOW,ECXQUEUE,ECXS,ECXSTART
"RTN","ECXKILL",14,0)
 K ECY,ECYM,ECZ,ECZNODE,ELIG,ENL,FAC,FLDS,FR,I,ID,IOP,J,K,L,LOC,LOS,LRDFN,OPC,P,P1,P11,P2,P3,POP,Q,RD,RESP,QFLG
"RTN","ECXKILL",15,0)
 K SC,SRDA,SRNM,STC,SU,TEN,TES,TIME,TO,TOT,VAERR,VAIP,W,X,X1,X2,XMDUZ,XMER,XMFROM,XMREC,XMRG,XMSER,XMSUB
"RTN","ECXKILL",16,0)
 K XMTEXT,XMY,XMZ,XQMSG,XQSOP,XQSUB,XX,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK,ECSTA,ECCTY,STATE,COUNTY,ECVER
"RTN","ECXKILL",17,0)
 K ECCPT,ECEKG,ECICD,ECPROV,ECREC,ECVAL,ECVIS,NCNTR,PTADT,STOP,ECIVRM,ECOR,ECWK,ECWKLD,LREDT,LRSDT,FD,ECHL,ECARSC
"RTN","ECXKILL",18,0)
 K ECDTST,ECLTST,ECODE2,ECORDT,ECORTM,ECRDDT,ECRDTM,ECRES,ECWCDA,ECXINST,ECX2TME
"RTN","ECXKILL",19,0)
 K ECXATT,ECXATTL,ECXATTN,ECXLOS,ECXLOSA,ECXLOSP,ECXPRV,ECXPRVL,ECXPRVN,ECXTRT,ECXTRTL,ECXTRTN,ECXSPC,ECXSPCL,ECXSPCN
"RTN","ECXKILL",20,0)
 K ECCSC,ECXSC,ECXP1,ECXP2,ECXP3,ECXDSSI,ECXDSSD,ECXYM,ECXDIV,ECXDAY,ECXSSN,ECXDATE,ECXPNM,ECXDFN,ECXA
"RTN","ECXKILL",21,0)
 K ECPTNPI,ECCLAS,ECCLAS2,ECASPR,ECASNPI,ECSRNPI,ECATNPI,ECSANPI,ECXCPT,ECXCMOD
"RTN","ECXKILL",22,0)
 K ECXFAC,ECXMN,ECXTS,ECXENEL,ECXSAI,ECXPAYOR,ECXAST,ECXEST,ECXRST,ECXMST,ECXMIL,ECXPST,ECXPLOC,ECXPOS,ECXSEX,ECXDOB
"RTN","ECXKILL",23,0)
 K ECXRELG,ECXEMP,ECXHI,ECXSTATE,ECXCNTY,ECXZIP,ECXMAR,ECXRACE,ECXVET,ECXVNS,ECXELIG,ECXENRL
"RTN","ECXKILL",24,0)
 K ECXPRNPI,ECXPRCLS,ECXWPRV,ECXW,ECXCNT,ECXCOST,ECXADM,ECXPROV,ECXPROVP,ECXPROVN,ECXBILST
"RTN","ECXKILL",25,0)
 K ECU1A,ECU2A,ECU3A,ECU1NPI,ECU2NPI,ECU3NPI,ECDENNPI,ECXWRD,ECXWTO
"RTN","ECXKILL",26,0)
 K ECXAO,ECXIR,ECXCLIN,ECXICD9,ECXIEN,ECXKEY,ECXMPI,ECXSTOP,ECXSVC
"RTN","ECXKILL",27,0)
 ;
"RTN","ECXKILL",28,0)
AUDIT ;kill audit report variables, close slave printer
"RTN","ECXKILL",29,0)
 K ECX,ECXARRAY,ECXACC,ECXALL,ECXAUD,ECXCODE,ECXD,ECXDEF,ECXDESC,ECXDIV,ECXRCST,ECXRQST
"RTN","ECXKILL",30,0)
 K ECXEND,ECXERR,ECXEXT,ECXHEAD,ECXLOC,ECXPGM,ECXPHCPC,ECXPRIME,ECXPRO,ECXREPT,ECXRUN,ECXSAVE,ECXSTART,ECXSRCE
"RTN","ECXKILL",31,0)
 K ECXCTAMT,ECXFEKEY,ECXFELOC,ECXFORM,ECXGRPR,ECXHCPC,ECXPHCPC,ECXHCPCS,ECXLAB,ECXLLC,ECXLMC,ECXQTY,ECXREQ,ECXSTAT,ECXTYPE
"RTN","ECXKILL",32,0)
 K IO("Q"),POP,DIR,DIC,DIE,DA,DR,DO,DIRUT,DUOUT,DTOUT
"RTN","ECXKILL",33,0)
 K ^TMP($J)
"RTN","ECXKILL",34,0)
 I IO=IO(0),IOST'="C" D ^%ZISC
"RTN","ECXKILL",35,0)
 Q
"RTN","ECXLABN")
0^5^B19635860
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; [ 11/22/96  5:14 PM ]
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 S QFLG=0
"RTN","ECXLABN",10,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD") S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)) K ECXDD
"RTN","ECXLABN",21,0)
 S ECLRN=1
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0)
"RTN","ECXLABN",25,0)
 .S ECDOC=ECPROF_$P(EC1,U,2),ECDOCNPI=""
"RTN","ECXLABN",26,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3)
"RTN","ECXLABN",27,0)
 .I EC]"" D GET
"RTN","ECXLABN",28,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",29,0)
 Q
"RTN","ECXLABN",30,0)
 ;
"RTN","ECXLABN",31,0)
GET ;get data
"RTN","ECXLABN",32,0)
 N X
"RTN","ECXLABN",33,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",34,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",35,0)
 ;resolve ecloc
"RTN","ECXLABN",36,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",37,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",38,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",39,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",40,0)
 .I ECXL2'="DIC(4," S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .I '$D(^DIC(4,ECXL1)) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",42,0)
 .I $D(^DIC(4,ECXL1)) S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2) S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",43,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",44,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",45,0)
 S ECTREAT=$P(EC1,U,10) I ECTREAT S ECTREAT=$P($G(^DIC(45.7,+ECTREAT,0)),U,2)
"RTN","ECXLABN",46,0)
 S (ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA=1,ECXERR=0
"RTN","ECXLABN",47,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",48,0)
 I ECF=2 D PAT(ECIFN,$P(ECD,"."),.ECXERR)
"RTN","ECXLABN",49,0)
 Q:ECXERR
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S ECXMPI=""
"RTN","ECXLABN",53,0)
 .S EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4),ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",54,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",55,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",56,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",57,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",60,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",61,0)
 S ECXDSSD=""
"RTN","ECXLABN",62,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",63,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11) S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",64,0)
 .D FILE
"RTN","ECXLABN",65,0)
 Q
"RTN","ECXLABN",66,0)
 ;
"RTN","ECXLABN",67,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",68,0)
 N X,OK,PT
"RTN","ECXLABN",69,0)
 ;get data
"RTN","ECXLABN",70,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",71,0)
 .S PT=^TMP($J,"ECXP",ECXDFN)
"RTN","ECXLABN",72,0)
 .S ECNA=$P(PT,U,1)
"RTN","ECXLABN",73,0)
 .S ECSN=$P(PT,U,2)
"RTN","ECXLABN",74,0)
 .S ECXMPI=$P(PT,U,3)
"RTN","ECXLABN",75,0)
 ;set data and save for later
"RTN","ECXLABN",76,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",77,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;",.ECXPAT)
"RTN","ECXLABN",78,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",79,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",80,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI
"RTN","ECXLABN",81,0)
 ;get date specific data
"RTN","ECXLABN",82,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U,1),ECMN=$P(X,U,2)
"RTN","ECXLABN",83,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",84,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4),ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",85,0)
 Q
"RTN","ECXLABN",86,0)
 ;
"RTN","ECXLABN",87,0)
FILE ;file record
"RTN","ECXLABN",88,0)
 ;node0
"RTN","ECXLABN",89,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out^day^accession area^abbreviation^test^urgency^treating spec^location^provider and file^
"RTN","ECXLABN",90,0)
 ;movement number^file^time^workload code^primary care team^primary care provider
"RTN","ECXLABN",91,0)
 ;node1
"RTN","ECXLABN",92,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^assoc pc prov^assoc pc prov person class^assoc pc prov npi
"RTN","ECXLABN",93,0)
 N DA,DIK
"RTN","ECXLABN",94,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",95,0)
 S ECODE=EC7_U_EC23
"RTN","ECXLABN",96,0)
 S ECODE=ECODE_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U_ECPTTM_U_ECPTPR
"RTN","ECXLABN",97,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",98,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U_ECCLAS2_U_ECASNPI
"RTN","ECXLABN",99,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",100,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX^DIK K DIK,DA
"RTN","ECXLABN",101,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",102,0)
 Q
"RTN","ECXLABN",103,0)
 ;
"RTN","ECXLABN",104,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",105,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",106,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",107,0)
 Q
"RTN","ECXLABN",108,0)
 ;
"RTN","ECXLABN",109,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",110,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCX1")
0^2^B72426579
"RTN","ECXSCX1",1,0)
ECXSCX1 ;ALB/JAP,BIR/DMA-Clinic Extract Message ; 20 Mar 95 / 11:10 AM [ 12/03/96  1:32 PM ]
"RTN","ECXSCX1",2,0)
 ;;3.0;DSS EXTRACTS;**8,28,24,27,29,30,31**;Dec 22, 1997
"RTN","ECXSCX1",3,0)
EN ;entry point from ecxscx
"RTN","ECXSCX1",4,0)
 N ECX
"RTN","ECXSCX1",5,0)
 ;send missing clinic message
"RTN","ECXSCX1",6,0)
 S ECX=$O(^TMP($J,"ECXS","MISS",0)) D
"RTN","ECXSCX1",7,0)
 .Q:ECX=""
"RTN","ECXSCX1",8,0)
 .S XMSUB="MISSING CLINICS in File #728.44",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",9,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",10,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","MISS",ECX,0)=$P($T(MSG+ECX),";;",2)
"RTN","ECXSCX1",11,0)
 .S XMTEXT="^TMP($J,""ECXS"",""MISS""," D ^XMD
"RTN","ECXSCX1",12,0)
 ;send no division message
"RTN","ECXSCX1",13,0)
 S ECX=$O(^TMP($J,"ECXS","DIV",0)) D
"RTN","ECXSCX1",14,0)
 .Q:ECX=""
"RTN","ECXSCX1",15,0)
 .S XMSUB="CLINICS w/o DIVISION Data",XMDUZ="DSS SYSTEM"
"RTN","ECXSCX1",16,0)
 .K XMY S XMY("G.DSS-"_ECGRP_"@"_^XMB("NETNAME"))=""
"RTN","ECXSCX1",17,0)
 .F ECX=1:1:5 S ^TMP($J,"ECXS","DIV",ECX,0)=$P($T(MSG2+ECX),";;",2)
"RTN","ECXSCX1",18,0)
 .S XMTEXT="^TMP($J,""ECXS"",""DIV""," D ^XMD
"RTN","ECXSCX1",19,0)
 ;cleanup
"RTN","ECXSCX1",20,0)
 K ^TMP($J,"ECXS")
"RTN","ECXSCX1",21,0)
 Q
"RTN","ECXSCX1",22,0)
MSG ;text for missing clinic
"RTN","ECXSCX1",23,0)
 ;;The following clinics have not been entered into the CLINIC AND
"RTN","ECXSCX1",24,0)
 ;;STOP CODES file (#728.44).  If any listed clinic is currently
"RTN","ECXSCX1",25,0)
 ;;active, please use the options 'Create DSS Clinic Stop Code File'
"RTN","ECXSCX1",26,0)
 ;;and 'Enter/Edit DSS Stop Codes for Clinics' to update this file.
"RTN","ECXSCX1",27,0)
 ;;  
"RTN","ECXSCX1",28,0)
 ;
"RTN","ECXSCX1",29,0)
MSG2 ;text for missing division
"RTN","ECXSCX1",30,0)
 ;;The following clinics in the HOSPITAL LOCATION file (#44) have not
"RTN","ECXSCX1",31,0)
 ;;been assigned to a division from the MEDICAL CENTER DIVISION file 
"RTN","ECXSCX1",32,0)
 ;;(#40.8).  CLI extract records associated with these clinics have
"RTN","ECXSCX1",33,0)
 ;;been given a default Division identifier of "1".
"RTN","ECXSCX1",34,0)
 ;;
"RTN","ECXSCX1",35,0)
 ;
"RTN","ECXSCX1",36,0)
MISS ;load ^tmp if clinic missing from #728.44
"RTN","ECXSCX1",37,0)
 N DAT,ID,RD
"RTN","ECXSCX1",38,0)
 S (ID,RD)=""
"RTN","ECXSCX1",39,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",40,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",41,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",42,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",43,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",44,0)
 S ^TMP($J,"ECXS","MISS",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)_ECSC_"/"_ECCSC
"RTN","ECXSCX1",45,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",46,0)
 Q
"RTN","ECXSCX1",47,0)
 ;
"RTN","ECXSCX1",48,0)
NODIV ;load ^tmp if clinic w/o division
"RTN","ECXSCX1",49,0)
 N DAT,ID,RD
"RTN","ECXSCX1",50,0)
 S (ID,RD)=""
"RTN","ECXSCX1",51,0)
 S DAT=$G(^SC(SC,"I")) I DAT]"" S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCX1",52,0)
 ;ignore inactive clinics
"RTN","ECXSCX1",53,0)
 I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCX1",54,0)
 I '$D(^TMP($J,"ECXS","ECXMISS")) S ^TMP($J,"ECXS","ECXMISS")=10
"RTN","ECXSCX1",55,0)
 S ECXMISS=^TMP($J,"ECXS","ECXMISS")
"RTN","ECXSCX1",56,0)
 S ^TMP($J,"ECXS","DIV",ECXMISS,0)=$J(SC,6)_"    "_$$LJ^XLFSTR($P(^SC(SC,0),U),40)
"RTN","ECXSCX1",57,0)
 S ^TMP($J,"ECXS","ECXMISS")=ECXMISS+1
"RTN","ECXSCX1",58,0)
 Q
"RTN","ECXSCX1",59,0)
 ;
"RTN","ECXSCX1",60,0)
FEEDER(ECXSC,ECXSD,ECXP1,ECXP2,ECXP3,ECXSEND,ECXDIV) ;get transmission style and feeder key variables
"RTN","ECXSCX1",61,0)
 ;feeder key = primary stop code_secondary stop code_length of appointment_national clinic code_noshow indicator
"RTN","ECXSCX1",62,0)
 ;   input
"RTN","ECXSCX1",63,0)
 ;   ECXSC = ien of clinic in file #44 (required)
"RTN","ECXSCX1",64,0)
 ;   ECXSD  = start date of extract date range (required)
"RTN","ECXSCX1",65,0)
 ;   ECXP1,ECXP2,ECXP3,ECXSEND passed by reference (required)
"RTN","ECXSCX1",66,0)
 ;   output (passed-by-reference variables)
"RTN","ECXSCX1",67,0)
 ;   ECXP1  = primary stop code
"RTN","ECXSCX1",68,0)
 ;   ECXP2  = secondary stop code
"RTN","ECXSCX1",69,0)
 ;   ECXP3  = field #7 of file #728.44
"RTN","ECXSCX1",70,0)
 ;   ECXSEND = field #5 of file #728.44
"RTN","ECXSCX1",71,0)
 ;   ECXDIV  = field #3.5 of file #44
"RTN","ECXSCX1",72,0)
 N ECSC,ECCSC,ECSD1,ECXNC,ECXMISS,CLIN,SC
"RTN","ECXSCX1",73,0)
 S (ECXP1,ECXP2)="000",ECXP3="0000"
"RTN","ECXSCX1",74,0)
 S ECXSEND=1,ECXDIV=0
"RTN","ECXSCX1",75,0)
 Q:+ECXSC=0
"RTN","ECXSCX1",76,0)
 ;get needed data from ^tmp
"RTN","ECXSCX1",77,0)
 I $D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",78,0)
 .S CLIN=^TMP($J,"ECXS","SC",ECXSC)
"RTN","ECXSCX1",79,0)
 .S ECXP1=$P(CLIN,U),ECXP2=$P(CLIN,U,2),ECXP3=$P(CLIN,U,3),ECXSEND=$P(CLIN,U,4),ECXDIV=$P(CLIN,U,5)
"RTN","ECXSCX1",80,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) S:ECXDIV=0 ECXDIV=1
"RTN","ECXSCX1",81,0)
 ;otherwise, set needed data in ^tmp
"RTN","ECXSCX1",82,0)
 I '$D(^TMP($J,"ECXS","SC",ECXSC)) D
"RTN","ECXSCX1",83,0)
 .;get division or send no division msg
"RTN","ECXSCX1",84,0)
 .S ECXDIV=+$P($G(^TMP($J,"ECXCL",ECXSC)),U,4) I ECXDIV=0 S SC=ECXSC D NODIV S ECXDIV=1
"RTN","ECXSCX1",85,0)
 .;get other data from file #44 if no #727.44 record; send missing clinic msg
"RTN","ECXSCX1",86,0)
 .I '$D(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",87,0)
 ..S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P(^(0),U,18)
"RTN","ECXSCX1",88,0)
 ..S SC=ECXSC,ECSD1=ECXSD D MISS
"RTN","ECXSCX1",89,0)
 ..I ECSC S ECXP1=$P($G(^DIC(40.7,ECSC,0)),U,2),ECXP1=$$RJ^XLFSTR(+ECXP1,3,0)
"RTN","ECXSCX1",90,0)
 .;otherwise get other data from file #728.44
"RTN","ECXSCX1",91,0)
 .S EC=$G(^ECX(728.44,ECXSC,0)) D
"RTN","ECXSCX1",92,0)
 ..Q:EC=""
"RTN","ECXSCX1",93,0)
 ..S ECXSEND=$P(EC,U,6)
"RTN","ECXSCX1",94,0)
 ..Q:ECXSEND=6
"RTN","ECXSCX1",95,0)
 ..S ECSC=+$P(EC,U,4),ECCSC=+$P(EC,U,5)
"RTN","ECXSCX1",96,0)
 ..I 'ECSC S ECSC=+$P(EC,U,2),ECCSC=+$P(EC,U,3)
"RTN","ECXSCX1",97,0)
 ..I ECSC S ECXP1=$$RJ^XLFSTR(ECSC,3,0),ECXP2=$$RJ^XLFSTR(ECCSC,3,0)
"RTN","ECXSCX1",98,0)
 ..;if primary stop not valid, use file #44 record
"RTN","ECXSCX1",99,0)
 ..I 'ECSC S ECSC=+$P($G(^SC(ECXSC,0)),U,7),ECCSC=+$P($G(^(0)),U,18) I ECSC D
"RTN","ECXSCX1",100,0)
 ...S ECXP1=+$P($G(^DIC(40.7,ECSC,0)),U,2) S:ECCSC ECXP2=+$P($G(^DIC(40.7,ECCSC,0)),U,2)
"RTN","ECXSCX1",101,0)
 ...S ECXP1=$$RJ^XLFSTR(ECXP1,3,0),ECXP2=$$RJ^XLFSTR(ECXP2,3,0)
"RTN","ECXSCX1",102,0)
 .;for action code=1, secondary stop code is always "000"
"RTN","ECXSCX1",103,0)
 .I ECXSEND=1 S ECXP2="000"
"RTN","ECXSCX1",104,0)
 .;action code of 2 or 3 should not be used, but continue to follow v2t11 logic
"RTN","ECXSCX1",105,0)
 .I ECXSEND=2 S ECXP1=ECXP2,ECXP2="000"
"RTN","ECXSCX1",106,0)
 .;for action code=4, need to get national clinic code
"RTN","ECXSCX1",107,0)
 .I ECXSEND=4 D
"RTN","ECXSCX1",108,0)
 ..S ECXNC=+$P($G(^ECX(728.44,ECXSC,0)),U,8)
"RTN","ECXSCX1",109,0)
 ..I ECXNC S ECXNC=$P($G(^ECX(728.441,ECXNC,0)),U),ECXP3=$$RJ^XLFSTR(ECXNC,4,0)
"RTN","ECXSCX1",110,0)
 .;set data in ^tmp
"RTN","ECXSCX1",111,0)
 .S ^TMP($J,"ECXS","SC",ECXSC)=ECXP1_U_ECXP2_U_ECXP3_U_ECXSEND
"RTN","ECXSCX1",112,0)
 Q
"RTN","ECXSCX1",113,0)
 ;
"RTN","ECXSCX1",114,0)
CLINII(ECXRECS,ECXED) ;update file #727.818 0-node & file #728 for CLJ
"RTN","ECXSCX1",115,0)
 ;input ECXRECS = total # records created in file #727.818
"RTN","ECXSCX1",116,0)
 ;      ECXED   = end date for extract
"RTN","ECXSCX1",117,0)
 N HEAD,PACK,GROUP,FILE,ROUTINE,PIECE,VERSION,LAST,TOTAL
"RTN","ECXSCX1",118,0)
 S HEAD="CLJ"
"RTN","ECXSCX1",119,0)
 D ECXDEF^ECXUTL2(HEAD,.PACK,.GROUP,.FILE,.ROUTINE,.PIECE,.VERSION)
"RTN","ECXSCX1",120,0)
 S LAST=$O(^ECX(FILE,99999999),-1)
"RTN","ECXSCX1",121,0)
 S TOTAL=$P(^ECX(FILE,0),U,4)+ECXRECS
"RTN","ECXSCX1",122,0)
 S $P(^ECX(FILE,0),U,3,4)=LAST_U_TOTAL
"RTN","ECXSCX1",123,0)
 S $P(^ECX(728,1,7),U,PIECE)=ECXED
"RTN","ECXSCX1",124,0)
 S $P(^ECX(728,1,7.1),U,PIECE)=""
"RTN","ECXSCX1",125,0)
 Q
"RTN","ECXSCX1",126,0)
 ;
"RTN","ECXSCX1",127,0)
VISIT(ECXDFN,ECXVISIT,ECXVIST,ECXERR) ;get visit specific data
"RTN","ECXSCX1",128,0)
 ;input  ECXVISIT  = pointer to file #9000010
"RTN","ECXSCX1",129,0)
 ;       ECXSVC  = sc percentage
"RTN","ECXSCX1",130,0)
 ;output ECXVSIT = data array
"RTN","ECXSCX1",131,0)
 ;       ECXERR  = 1 indicates error; otherwise, 0
"RTN","ECXSCX1",132,0)
 N DIC,DA,DIQ,X,Y,ARRAY,VISIT,REC,VAL,ICD9,DATE,PROV,CPT,MOD,AO,IR,MST
"RTN","ECXSCX1",133,0)
 N CNT,M,NUM,PROVPC,CM,LEN
"RTN","ECXSCX1",134,0)
 S ECXERR=0,VISIT=ECXVISIT
"RTN","ECXSCX1",135,0)
 S ECXVIST("CPT")="",ECXVIST("ICD9")="",ECXVIST("AO")="",ECXVIST("IR")="",ECXVIST("MST")=""
"RTN","ECXSCX1",136,0)
 S ECXVIST("PROV")="",ECXVIST("PROV CLASS")="",ECXVIST("PROV NPI")="",ECXVIST("SOURCE")=""
"RTN","ECXSCX1",137,0)
 D ENCEVENT^PXAPI(VISIT)
"RTN","ECXSCX1",138,0)
 I $O(^TMP("PXKENC",$J,VISIT,""))']"" K ECXVIST S ECXERR=1
"RTN","ECXSCX1",139,0)
 Q:ECXERR
"RTN","ECXSCX1",140,0)
 S DATE=$P($P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,0),U,1),".",1)
"RTN","ECXSCX1",141,0)
 S ECXVIST("SOURCE")=$P($G(^TMP("PXKENC",$J,VISIT,"VST",VISIT,812)),U,3)
"RTN","ECXSCX1",142,0)
 ;get icd9 codes upto 9; else use 799.9
"RTN","ECXSCX1",143,0)
 S ECXVIST("ICD9")=""
"RTN","ECXSCX1",144,0)
 I $O(^TMP("PXKENC",$J,VISIT,"POV",0)) D
"RTN","ECXSCX1",145,0)
 .S (REC,VAL)=0,CNT=1
"RTN","ECXSCX1",146,0)
 .F  S REC=$O(^TMP("PXKENC",$J,VISIT,"POV",REC)) Q:'REC  D  I CNT>9 Q
"RTN","ECXSCX1",147,0)
 ..S VAL=+^TMP("PXKENC",$J,VISIT,"POV",REC,0)
"RTN","ECXSCX1",148,0)
 ..Q:'VAL
"RTN","ECXSCX1",149,0)
 ..K ARRAY S DIC=80,DA=VAL,DR=".01",DIQ(0)="E",DIQ="ARRAY" D EN^DIQ1
"RTN","ECXSCX1",150,0)
 ..S ICD9=ARRAY(80,VAL,.01,"E"),LEN=$L(ICD9),CNT=CNT+1
"RTN","ECXSCX1",151,0)
 ..F L=LEN+1:1:7 S ICD9=ICD9_" "
"RTN","ECXSCX1",152,0)
 ..I $P(^TMP("PXKENC",$J,VISIT,"POV",REC,0),U,12)="P" S ECXVIST("ICD9")=ICD9_ECXVIST("ICD9")
"RTN","ECXSCX1",153,0)
 ..E  S ECXVIST("ICD9")=ECXVIST("ICD9")_ICD9
"RTN","ECXSCX1",154,0)
 I ECXVIST("ICD9")="" S ECXVIST("ICD9")="799.9  "
"RTN","ECXSCX1",155,0)
 I $L(ECXVIST("ICD9"))<63 S LEN=$L(ECXVIST("ICD9")) F L=LEN+1:1:63 S ECXVIST("ICD9")=ECXVIST("ICD9")_" "
"RTN","ECXSCX1",156,0)
 S ECXVIST("ICD9")=$E(ECXVIST("ICD9"),1,63)
"RTN","ECXSCX1",157,0)
 ;get first provider designated as primary
"RTN","ECXSCX1",158,0)
 ;if no primary, then get first physician provider
"RTN","ECXSCX1",159,0)
 ;if no physician, then get first provider
"RTN","ECXSCX1",160,0)
 S (PROV,PROVPC)=""
"RTN","ECXSCX1",161,0)
 I $O(^TMP("PXKENC",$J,VISIT,"PRV",0)) D
"RTN","ECXSCX1",162,0)
 .S (REC,VAL)=0 D
"RTN","ECXSCX1",163,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:'REC  Q:VAL  S:($P(^(REC,0),U,4)="P") VAL=+^(0) D
"RTN","ECXSCX1",164,0)
 ..S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",165,0)
 .I 'VAL S (REC,VAL)=0 D
"RTN","ECXSCX1",166,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",REC)) Q:'REC  Q:VAL  S VAL=+^(REC,0) D
"RTN","ECXSCX1",167,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE) Q:PROVPC=""
"RTN","ECXSCX1",168,0)
 ...S NUM=$E(PROVPC,2,7) S:(NUM<110000)!(NUM>119999) VAL=0,PROVPC=""
"RTN","ECXSCX1",169,0)
 .I 'VAL D
"RTN","ECXSCX1",170,0)
 ..S REC=$O(^TMP("PXKENC",$J,VISIT,"PRV",0)) Q:'REC  Q:VAL  S VAL=+^(REC,0) D
"RTN","ECXSCX1",171,0)
 ...S PROV=VAL,PROVPC=$$PRVCLASS^ECXUTL(PROV,DATE)
"RTN","ECXSCX1",172,0)
 .S:PROV]"" PROV="2"_PROV
"RTN","ECXSCX1",173,0)
 S ECXVIST("PROV")=PROV,ECXVIST("PROV CLASS")=PROVPC,ECXVIST("PROV NPI")=""
"RTN","ECXSCX1",174,0)
 ;get cpt codes upto 8 & modifiers upto 5
"RTN","ECXSCX1",175,0)
 I $O(^TMP("PXKENC",$J,VISIT,"CPT",0)) D
"RTN","ECXSCX1",176,0)
 .S REC="",ECXVIST("CPT")=""
"RTN","ECXSCX1",177,0)
 .;if there's a primary provider, get cpt codes associated with that provider
"RTN","ECXSCX1",178,0)
 .I ECXVIST("PROV")]"" D
"RTN","ECXSCX1",179,0)
 ..S PROV=$E(ECXVIST("PROV"),2,99)
"RTN","ECXSCX1",180,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  S (CPT,MOD)="" D
"RTN","ECXSCX1",181,0)
 ...Q:'$D(^TMP("PXKENC",$J,VISIT,"CPT",REC,12)) 
"RTN","ECXSCX1",182,0)
 ...I $P(^TMP("PXKENC",$J,VISIT,"CPT",REC,12),U,4)=PROV S CPT=+^TMP("PXKENC",$J,VISIT,"CPT",REC,0)
"RTN","ECXSCX1",183,0)
 ...Q:'CPT
"RTN","ECXSCX1",184,0)
 ...S MOD="" I $D(^TMP("PXKENC",$J,VISIT,"CPT",REC,1)) S M=0 D
"RTN","ECXSCX1",185,0)
 ....F  S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  S CM=+^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0) I CM S MOD=MOD_CM_";"
"RTN","ECXSCX1",186,0)
 ...I $L(ECXVIST("CPT"))<120 S CPT=$$CPT^ECXUTL3(CPT,MOD),ECXVIST("CPT")=ECXVIST("CPT")_CPT
"RTN","ECXSCX1",187,0)
 ...K ^TMP("PXKENC",$J,VISIT,"CPT",REC)
"RTN","ECXSCX1",188,0)
 .;get more cpt codes if needed
"RTN","ECXSCX1",189,0)
 .I $L(ECXVIST("CPT"))<120 S REC="" D
"RTN","ECXSCX1",190,0)
 ..F  S REC=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC)) Q:'REC  S (CPT,MOD)="" D
"RTN","ECXSCX1",191,0)
 ...S CPT=+^TMP("PXKENC",$J,VISIT,"CPT",REC,0)
"RTN","ECXSCX1",192,0)
 ...Q:'CPT
"RTN","ECXSCX1",193,0)
 ...S MOD="" I $D(^TMP("PXKENC",$J,VISIT,"CPT",REC,1)) S M=0 D
"RTN","ECXSCX1",194,0)
 ....F  S M=$O(^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M)) Q:'M  S CM=+^TMP("PXKENC",$J,VISIT,"CPT",REC,1,M,0) I CM S MOD=MOD_CM_";"
"RTN","ECXSCX1",195,0)
 ...I $L(ECXVIST("CPT"))<120 S CPT=$$CPT^ECXUTL3(CPT,MOD),ECXVIST("CPT")=ECXVIST("CPT")_CPT
"RTN","ECXSCX1",196,0)
 .I ECXVIST("CPT")="" S ECXVIST("CPT")="99199"
"RTN","ECXSCX1",197,0)
 .S ECXVIST("CPT")=$E(ECXVIST("CPT"),1,120)
"RTN","ECXSCX1",198,0)
 .I $L(ECXVIST("CPT"))<120 S LEN=$L(ECXVIST("CPT")) F L=LEN+1:1:120 S ECXVIST("CPT")=ECXVIST("CPT")_" "
"RTN","ECXSCX1",199,0)
 ;ao, ir, mst
"RTN","ECXSCX1",200,0)
 S (AO,IR,MST)=""
"RTN","ECXSCX1",201,0)
 I $D(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800)) D
"RTN","ECXSCX1",202,0)
 .S AO=$P(^TMP("PXKENC",$J,VISIT,"VST",VISIT,800),U,2),IR=$P(^(800),U,3),MST=$P(^(800),U,5)
"RTN","ECXSCX1",203,0)
 .S ECXVIST("AO")=$S(AO=0:"N",AO=1:"Y",1:"")
"RTN","ECXSCX1",204,0)
 .S ECXVIST("IR")=$S(IR=0:"N",IR=1:"Y",1:"")
"RTN","ECXSCX1",205,0)
 .S ECXVIST("MST")=$S(MST=0:"N",MST=1:"Y",1:"")
"RTN","ECXSCX1",206,0)
 Q
"RTN","ECXSCXN")
0^1^B68147228
"RTN","ECXSCXN",1,0)
ECXSCXN ;ALB/JAP  Clinic Extract ; 05/14/99
"RTN","ECXSCXN",2,0)
 ;;3.0;DSS EXTRACTS;**24,27,29,30,31**;Dec 22, 1997
"RTN","ECXSCXN",3,0)
 ;
"RTN","ECXSCXN",4,0)
BEG ;entry point from option
"RTN","ECXSCXN",5,0)
 D SETUP I ECFILE="" Q
"RTN","ECXSCXN",6,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXSCXN",7,0)
 Q
"RTN","ECXSCXN",8,0)
 ;
"RTN","ECXSCXN",9,0)
START ;entry point from taskmgr
"RTN","ECXSCXN",10,0)
 N DIC,OUT,TIU,LOCARR,PROCESS,STOP,STATUS,P1,P2,P3,TOSEND,SOURCE,EXNUM,X,Y
"RTN","ECXSCXN",11,0)
 S OUT=0,QFLG=0,ECRN=0
"RTN","ECXSCXN",12,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",13,0)
 ;get ien for tiu in file #839.7
"RTN","ECXSCXN",14,0)
 S DIC="^PX(839.7,",DIC(0)="X",X="TEXT INTEGRATION UTILITIES" D ^DIC S TIU=+Y K DIC,Y
"RTN","ECXSCXN",15,0)
 S ECED=ECED+.3
"RTN","ECXSCXN",16,0)
 ;get clinic default appt length, type, division
"RTN","ECXSCXN",17,0)
 S ECXCLIN=0 F  S ECXCLIN=$O(^SC(ECXCLIN)) Q:'ECXCLIN  D
"RTN","ECXSCXN",18,0)
 .K LOCARR S DIC=44,DA=ECXCLIN,DR="2;3.5;1912",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",19,0)
 .I $G(LOCARR(44,ECXCLIN,2,"I"))'="C" Q
"RTN","ECXSCXN",20,0)
 .S ALEN=+$G(LOCARR(44,ECXCLIN,1912,"I")),^TMP($J,"ECXCL",ECXCLIN)=ALEN,ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",21,0)
 .S ^TMP($J,"ECXCL",ECXCLIN)=^TMP($J,"ECXCL",ECXCLIN)_"^"_ALEN_"^"_$G(LOCARR(44,ECXCLIN,2,"I"))_"^"_+$G(LOCARR(44,ECXCLIN,3.5,"I"))
"RTN","ECXSCXN",22,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",23,0)
 .K P1,P2,P3,TOSEND,ECXDIV
"RTN","ECXSCXN",24,0)
 ;get from file #44 any no-shows & get encounters from #409.68
"RTN","ECXSCXN",25,0)
 D NOSHOW(ECSD1,ECED)
"RTN","ECXSCXN",26,0)
 D ENCNTR(ECSD1,ECED)
"RTN","ECXSCXN",27,0)
 ;update for CLJ extract
"RTN","ECXSCXN",28,0)
 D CLINII^ECXSCX1(ECRN,$P(ECED,"."))
"RTN","ECXSCXN",29,0)
 ;send missing clinic msg
"RTN","ECXSCXN",30,0)
 D:$D(^TMP($J,"ECXS")) EN^ECXSCX1
"RTN","ECXSCXN",31,0)
 K ^TMP($J,"ECXS"),^TMP($J,"ECXCL")
"RTN","ECXSCXN",32,0)
 Q
"RTN","ECXSCXN",33,0)
 ;
"RTN","ECXSCXN",34,0)
ENCNTR(ECSD1,ECED) ;search file #409.68 for encounter data
"RTN","ECXSCXN",35,0)
 N OUT,JJ,PP,CHKOUT,PNODE
"RTN","ECXSCXN",36,0)
 S ECD=ECSD1
"RTN","ECXSCXN",37,0)
 F  S ECD=$O(^SCE("B",ECD)) Q:'ECD!(ECD>ECED)  Q:QFLG  S ECXIEN=0 F  S ECXIEN=$O(^SCE("B",ECD,ECXIEN)) Q:'ECXIEN  D  I QFLG Q
"RTN","ECXSCXN",38,0)
 .Q:'$D(^SCE(ECXIEN,0))  D INTPAT
"RTN","ECXSCXN",39,0)
 .K LOCARR S DIC=409.68,DA=ECXIEN,DR=".01;.02;.03;.04;.05;.06;.07;.08;.12;.13",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",40,0)
 .S STOP=+$G(LOCARR(409.68,ECXIEN,.03,"I")),CHKOUT=+$G(LOCARR(409.68,ECXIEN,.07,"I")),PROCESS=+$G(LOCARR(409.68,ECXIEN,.08,"I")),STATUS=$G(LOCARR(409.68,ECXIEN,.12,"I"))
"RTN","ECXSCXN",41,0)
 .S ECXDFN=+$G(LOCARR(409.68,ECXIEN,.02,"I")) I ECXDFN="" Q
"RTN","ECXSCXN",42,0)
 .Q:'CHKOUT
"RTN","ECXSCXN",43,0)
 .S:STATUS="" STATUS="ZZ" S STATUS=";"_STATUS_";"
"RTN","ECXSCXN",44,0)
 .Q:";3;4;5;6;7;9;10;13;"[STATUS
"RTN","ECXSCXN",45,0)
 .Q:'STOP
"RTN","ECXSCXN",46,0)
 .Q:PROCESS=4
"RTN","ECXSCXN",47,0)
 .Q:+$G(LOCARR(409.68,ECXIEN,.06,"I"))
"RTN","ECXSCXN",48,0)
 .S ECXDATE=+$G(LOCARR(409.68,ECXIEN,.01,"I")),ECXCLIN=+$G(LOCARR(409.68,ECXIEN,.04,"I"))
"RTN","ECXSCXN",49,0)
 .Q:$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,3)'="C"
"RTN","ECXSCXN",50,0)
 .S ECXVISIT=+$G(LOCARR(409.68,ECXIEN,.05,"I")),ECXENEL=+$G(LOCARR(409.68,ECXIEN,.13,"I"))
"RTN","ECXSCXN",51,0)
 .Q:'ECXVISIT
"RTN","ECXSCXN",52,0)
 .S ECXERR=0 D PAT1(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",53,0)
 .D FEEDER^ECXSCX1(ECXCLIN,ECSD1,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",54,0)
 .K LOCARR S DIC=40.7,DA=STOP,DR="1",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",55,0)
 .S ECXSTOP=$$RJ^XLFSTR($G(LOCARR(40.7,STOP,1,"I")),3,0)
"RTN","ECXSCXN",56,0)
 .;get date specific patient data
"RTN","ECXSCXN",57,0)
 .D PAT2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",58,0)
 .;get visit specific data
"RTN","ECXSCXN",59,0)
 .S ECXERR=0 D VISIT^ECXSCX1(ECXDFN,ECXVISIT,.ECXVIST,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",60,0)
 .S ECXCPT=ECXVIST("CPT"),ECXICD9=ECXVIST("ICD9"),SOURCE=ECXVIST("SOURCE")
"RTN","ECXSCXN",61,0)
 .S ECXAO=ECXVIST("AO"),ECXIR=ECXVIST("IR"),ECXMIL=ECXVIST("MST")
"RTN","ECXSCXN",62,0)
 .S ECXPROV=ECXVIST("PROV"),ECXPROVP=ECXVIST("PROV CLASS"),ECXPROVN=ECXVIST("PROV NPI")
"RTN","ECXSCXN",63,0)
 .K LOCARR S DIC=8,DA=ECXENEL,DR="8",DIQ(0)="I",DIQ="LOCARR" D EN^DIQ1
"RTN","ECXSCXN",64,0)
 .S ECXENEL=+$G(LOCARR(8,ECXENEL,8,"I")) I ECXENEL S ECXENEL=$$ELIG^ECXUTL3(ECXENEL,ECXSVC)
"RTN","ECXSCXN",65,0)
 .;setup feeder key and file in extract records
"RTN","ECXSCXN",66,0)
 .S (ECXKEY,ECXDSSD)=""
"RTN","ECXSCXN",67,0)
 .;xray (105) or lab (108)
"RTN","ECXSCXN",68,0)
 .I (ECXSTOP=105)!(ECXSTOP=108) D  Q
"RTN","ECXSCXN",69,0)
 ..S ECXKEY=ECXSTOP_"00003000000"
"RTN","ECXSCXN",70,0)
 ..D FILE
"RTN","ECXSCXN",71,0)
 .;appointments
"RTN","ECXSCXN",72,0)
 .I PROCESS=1 D  Q
"RTN","ECXSCXN",73,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",74,0)
 ..;get appt length
"RTN","ECXSCXN",75,0)
 ..S ALEN=0,JJ=0,OUT=0
"RTN","ECXSCXN",76,0)
 ..F  S JJ=$O(^SC(ECXCLIN,"S",ECXDATE,JJ)) Q:'JJ  Q:OUT  S K=0 F  S K=$O(^SC(ECXCLIN,"S",ECXDATE,JJ,K)) Q:'K  Q:OUT  D
"RTN","ECXSCXN",77,0)
 ...S PP=$P($G(^SC(ECXCLIN,"S",ECXDATE,JJ,K,0)),U) I PP=ECXDFN S OUT=1,ALEN=$P(^(0),U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",78,0)
 ..S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",79,0)
 ..S ECXSTOP=P1
"RTN","ECXSCXN",80,0)
 ..I TOSEND'=3 S ECXKEY=P1_P2_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",81,0)
 ..I TOSEND=3 S ECXKEY=P1_"000"_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",82,0)
 ..I TOSEND=3 S ECXKEY=P2_"000"_ALEN_P3_"0" D FILE
"RTN","ECXSCXN",83,0)
 ..;create a record for appended ekg
"RTN","ECXSCXN",84,0)
 ..S PNODE=$G(^DPT(ECXDFN,"S",ECXDATE,0)) I $P(PNODE,U,1)=ECXCLIN,$P(PNODE,U,5) D
"RTN","ECXSCXN",85,0)
 ...S ECXKEY="10700003000000",ECXSTOP="107" D FILE
"RTN","ECXSCXN",86,0)
 .;stop code additions
"RTN","ECXSCXN",87,0)
 .I PROCESS=2 D  Q
"RTN","ECXSCXN",88,0)
 ..Q:TOSEND=6
"RTN","ECXSCXN",89,0)
 ..S ALEN=0
"RTN","ECXSCXN",90,0)
 ..I SOURCE=TIU S ALEN=$P($G(^TMP($J,"ECXCL",ECXCLIN)),U,2)
"RTN","ECXSCXN",91,0)
 ..S:+ALEN=0 ALEN="030" S ECXKEY=P1_P2_ALEN_P3_"0",ECXSTOP=P1
"RTN","ECXSCXN",92,0)
 ..D FILE
"RTN","ECXSCXN",93,0)
 .;dispositions
"RTN","ECXSCXN",94,0)
 .I PROCESS=3 D  Q
"RTN","ECXSCXN",95,0)
 ..S ECXKEY=ECXSTOP_"47906000000"
"RTN","ECXSCXN",96,0)
 ..D FILE
"RTN","ECXSCXN",97,0)
 Q
"RTN","ECXSCXN",98,0)
 ;
"RTN","ECXSCXN",99,0)
INTPAT ;initialize pateint variables
"RTN","ECXSCXN",100,0)
 S (ECXSSN,ECXPNM,ECPTPR,ECCLAS,ECPTNPI,ECASPR,ECCLAS2,ECASNPI,ECXZIP)=""
"RTN","ECXSCXN",101,0)
 S (ECPTTM,ECXPAYOR,ECXSAI,ECXVET,ECXRACE,ECXENRL,ECXMPI,ECXSEX)=""
"RTN","ECXSCXN",102,0)
 S (ECXDOB,ECXELIG,ECXPST,ECXPLOC,ECXRST,ECXAST,ECXMST,ECXSTATE,ECXCNTY)=""
"RTN","ECXSCXN",103,0)
 Q
"RTN","ECXSCXN",104,0)
 ;
"RTN","ECXSCXN",105,0)
PAT1(ECXDFN,ECXDATE,ECXERR) ;get patient demographic data
"RTN","ECXSCXN",106,0)
 N OK,X
"RTN","ECXSCXN",107,0)
 K ECXPAT
"RTN","ECXSCXN",108,0)
 S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECXDATE,"."),"1;2;3;4;5",.ECXPAT)
"RTN","ECXSCXN",109,0)
 I 'OK S ECXERR=1 K ECXPAT Q
"RTN","ECXSCXN",110,0)
 S ECXSSN=ECXPAT("SSN")
"RTN","ECXSCXN",111,0)
 S ECXPNM=ECXPAT("NAME")
"RTN","ECXSCXN",112,0)
 S ECXMPI=ECXPAT("MPI")
"RTN","ECXSCXN",113,0)
 S ECXSEX=ECXPAT("SEX")
"RTN","ECXSCXN",114,0)
 S ECXDOB=ECXPAT("DOB")
"RTN","ECXSCXN",115,0)
 S ECXELIG=ECXPAT("ELIG")
"RTN","ECXSCXN",116,0)
 S ECXVET=ECXPAT("VET")
"RTN","ECXSCXN",117,0)
 S ECXSVC=ECXPAT("SC%")
"RTN","ECXSCXN",118,0)
 S ECXRACE=ECXPAT("RACE")
"RTN","ECXSCXN",119,0)
 S ECXPST=ECXPAT("POW STAT")
"RTN","ECXSCXN",120,0)
 S ECXPLOC=ECXPAT("POW LOC")
"RTN","ECXSCXN",121,0)
 S ECXRST=ECXPAT("IR STAT")
"RTN","ECXSCXN",122,0)
 S ECXAST=ECXPAT("AO STAT")
"RTN","ECXSCXN",123,0)
 S ECXMST=ECXPAT("MST STAT")
"RTN","ECXSCXN",124,0)
 S ECXSTATE=ECXPAT("STATE")
"RTN","ECXSCXN",125,0)
 S ECXCNTY=ECXPAT("COUNTY")
"RTN","ECXSCXN",126,0)
 S ECXZIP=ECXPAT("ZIP")
"RTN","ECXSCXN",127,0)
 S ECXENRL=ECXPAT("ENROLL LOC")
"RTN","ECXSCXN",128,0)
 ;get sharing agreement data
"RTN","ECXSCXN",129,0)
 S (ECXPAYOR,ECXSAI)=""
"RTN","ECXSCXN",130,0)
 D VISN19^ECXUTL2(ECXDFN,.ECXPAYOR,.ECXSAI)
"RTN","ECXSCXN",131,0)
 Q
"RTN","ECXSCXN",132,0)
 ;
"RTN","ECXSCXN",133,0)
PAT2(ECXDFN,ECXDATE) ;get date specific patient data
"RTN","ECXSCXN",134,0)
 N X
"RTN","ECXSCXN",135,0)
 ;get primary care data
"RTN","ECXSCXN",136,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."))
"RTN","ECXSCXN",137,0)
 S ECPTTM=$P(X,U,1)
"RTN","ECXSCXN",138,0)
 S ECPTPR=$P(X,U,2)
"RTN","ECXSCXN",139,0)
 S ECCLAS=$P(X,U,3)
"RTN","ECXSCXN",140,0)
 S ECPTNPI=$P(X,U,4)
"RTN","ECXSCXN",141,0)
 S ECASPR=$P(X,U,5)
"RTN","ECXSCXN",142,0)
 S ECCLAS2=$P(X,U,6)
"RTN","ECXSCXN",143,0)
 S ECASNPI=$P(X,U,7)
"RTN","ECXSCXN",144,0)
 ;get inpatient data
"RTN","ECXSCXN",145,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U,1),ECXTS=$P(X,U,3)
"RTN","ECXSCXN",146,0)
 Q
"RTN","ECXSCXN",147,0)
 ;
"RTN","ECXSCXN",148,0)
NOSHOW(ECXSD,ECXED) ;get noshows from file #44
"RTN","ECXSCXN",149,0)
 ;      ECXSD  = start date
"RTN","ECXSCXN",150,0)
 ;      ECXED  = end date
"RTN","ECXSCXN",151,0)
 N JJ,K,PP,JDATE,NODE,STATUS,CLIN,ALEN,NOSHOW
"RTN","ECXSCXN",152,0)
 S CLIN=0
"RTN","ECXSCXN",153,0)
 F  S CLIN=$O(^TMP($J,"ECXCL",CLIN)) Q:'CLIN  D
"RTN","ECXSCXN",154,0)
 .I $P($G(^TMP($J,"ECXCL",CLIN)),U,3)'="C" Q
"RTN","ECXSCXN",155,0)
 .S (P1,P2,P3)="" D FEEDER^ECXSCX1(CLIN,ECXSD,.P1,.P2,.P3,.TOSEND,.ECXDIV)
"RTN","ECXSCXN",156,0)
 .Q:TOSEND=6
"RTN","ECXSCXN",157,0)
 .;find appts in date range
"RTN","ECXSCXN",158,0)
 .S JDATE=ECXSD
"RTN","ECXSCXN",159,0)
 .F  S JDATE=$O(^SC(CLIN,"S",JDATE)) Q:'JDATE  Q:JDATE>ECXED  D
"RTN","ECXSCXN",160,0)
 ..S ECXDATE=JDATE,JJ=0
"RTN","ECXSCXN",161,0)
 ..;get noshows only - no data in check-in/check-out node
"RTN","ECXSCXN",162,0)
 ..F  S JJ=$O(^SC(CLIN,"S",JDATE,JJ)) Q:'JJ  S K=0 F  S K=$O(^SC(CLIN,"S",JDATE,JJ,K)) Q:'K  D
"RTN","ECXSCXN",163,0)
 ...S PP=$G(^SC(CLIN,"S",JDATE,JJ,K,0)),ECXDFN=$P(PP,U) I ECXDFN="" Q
"RTN","ECXSCXN",164,0)
 ...S NODE=$G(^DPT(ECXDFN,"S",JDATE,0)) I NODE=""!($P(NODE,U)'=CLIN) Q
"RTN","ECXSCXN",165,0)
 ...S STATUS=$P(NODE,U,2),NOSHOW=$S(STATUS="N":"N",STATUS="NA":"N",1:"")
"RTN","ECXSCXN",166,0)
 ...Q:NOSHOW=""  D INTPAT
"RTN","ECXSCXN",167,0)
 ...S ECXERR=0 D PAT1(ECXDFN,ECXDATE,.ECXERR) Q:ECXERR
"RTN","ECXSCXN",168,0)
 ...S ALEN=$P(PP,U,2),ALEN=$$RJ^XLFSTR(ALEN,3,0)
"RTN","ECXSCXN",169,0)
 ...D PAT2(ECXDFN,ECXDATE)
"RTN","ECXSCXN",170,0)
 ...S:+ALEN=0 ALEN=$P($G(^TMP($J,"ECXCL",CLIN)),U,2) S ECXCLIN=CLIN,ECXSTOP=P1
"RTN","ECXSCXN",171,0)
 ...S ECXCPT="99199" F L=6:1:120 S ECXCPT=ECXCPT_" "
"RTN","ECXSCXN",172,0)
 ...S ECXICD9="799.9" F L=6:1:63 S ECXICD9=ECXICD9_" "
"RTN","ECXSCXN",173,0)
 ...S (ECXDSSD,ECXENEL,ECXIR,ECXAO,ECXMIL,ECXPROV,ECXPROVP,ECXPROVN)=""
"RTN","ECXSCXN",174,0)
 ...I TOSEND'=3 S ECXKEY=P1_P2_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",175,0)
 ...I TOSEND=3 S ECXKEY=P1_"000"_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",176,0)
 ...I TOSEND=3 S ECXKEY=P2_"000"_ALEN_P3_NOSHOW D FILE
"RTN","ECXSCXN",177,0)
 ...;create a record for noshow appended ekg
"RTN","ECXSCXN",178,0)
 ...I $P(NODE,U,5) S ECXKEY="1070000300000N",ECXSTOP="107" D FILE
"RTN","ECXSCXN",179,0)
 Q
"RTN","ECXSCXN",180,0)
 ;
"RTN","ECXSCXN",181,0)
FILE ;record setup for files #727.816 & #727.818
"RTN","ECXSCXN",182,0)
 ;file #727.816 record
"RTN","ECXSCXN",183,0)
 ;node0
"RTN","ECXSCXN",184,0)
 ;facility^dfn^ssn^name^in/out status^day^feeder key^treat spec^encounter elig^pc provider^pc provider person class^pc prov npi
"RTN","ECXSCXN",185,0)
 ;assoc pc provider^assoc pc prov person class^assoc pc prov npi^clinic
"RTN","ECXSCXN",186,0)
 ;node1
"RTN","ECXSCXN",187,0)
 ;cpt&modifiers^pc team
"RTN","ECXSCXN",188,0)
 S EC7=$O(^ECX(727.816,999999999),-1),EC7=EC7+1
"RTN","ECXSCXN",189,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCXN",190,0)
 S ECODE=ECODE_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXKEY
"RTN","ECXSCXN",191,0)
 S ECODE=ECODE_U_ECXTS_U_ECXENEL_U_ECPTPR_U_ECCLAS_U_ECPTNPI_U_ECASPR_U_ECCLAS2_U_ECASNPI_U_ECXCLIN
"RTN","ECXSCXN",192,0)
 S ECODE1=ECXCPT_U_ECPTTM
"RTN","ECXSCXN",193,0)
 D FILE2(727.816,EC7,ECODE,ECODE1)
"RTN","ECXSCXN",194,0)
 ;
"RTN","ECXSCXN",195,0)
 ;file #727.818 record
"RTN","ECXSCXN",196,0)
 ;node0
"RTN","ECXSCXN",197,0)
 ;facility^dfn^ssn^name^in/out status^day^primary stop^mpi^sex^dob^elig^vet^race^pow status^pow loc^ir status^ao status^mst status^
"RTN","ECXSCXN",198,0)
 ;state^county^zip^enroll loc^^provider^prov person class^prov npi^sa payor^sa insurance^ir encounter^ao encounter^mst encounter^dss dept
"RTN","ECXSCXN",199,0)
 ;node1
"RTN","ECXSCXN",200,0)
 ;icd9
"RTN","ECXSCXN",201,0)
 ;be sure that stop matches feeder key
"RTN","ECXSCXN",202,0)
 S ECXSTOP=$E(ECXKEY,1,3)
"RTN","ECXSCXN",203,0)
 S ECODE=EC7_U_EC23
"RTN","ECXSCXN",204,0)
 S ECODE=ECODE_U_ECXDIV_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U_$$ECXDATE^ECXUTL(ECXDATE,ECXYM)_U_ECXSTOP_U_ECXMPI
"RTN","ECXSCXN",205,0)
 S ECODE=ECODE_U_ECXSEX_U_ECXDOB_U_ECXELIG_U_ECXVET_U_ECXRACE_U_ECXPST_U_ECXPLOC_U_ECXRST_U_ECXAST_U_ECXMST
"RTN","ECXSCXN",206,0)
 S ECODE=ECODE_U_ECXSTATE_U_ECXCNTY_U_ECXZIP_U_ECXENRL_U_U_ECXPROV_U_ECXPROVP_U_ECXPROVN_U_ECXPAYOR_U_ECXSAI_U_ECXIR_U_ECXAO_U_ECXMIL_U_ECXDSSD
"RTN","ECXSCXN",207,0)
 S ECODE1=ECXICD9
"RTN","ECXSCXN",208,0)
 D FILE2(727.818,EC7,ECODE,ECODE1)
"RTN","ECXSCXN",209,0)
 S ECRN=ECRN+1
"RTN","ECXSCXN",210,0)
 Q
"RTN","ECXSCXN",211,0)
 ;
"RTN","ECXSCXN",212,0)
FILE2(ECXFILE,EC7,ECODE,ECODE1) ;file record
"RTN","ECXSCXN",213,0)
 N DA,DIK
"RTN","ECXSCXN",214,0)
 S ^ECX(ECXFILE,EC7,0)=ECODE,^ECX(ECXFILE,EC7,1)=ECODE1
"RTN","ECXSCXN",215,0)
 S DA=EC7,DIK="^ECX("_ECXFILE_"," D IX^DIK K DIK,DA
"RTN","ECXSCXN",216,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXSCXN",217,0)
 Q
"RTN","ECXSCXN",218,0)
 ;
"RTN","ECXSCXN",219,0)
SETUP ;set required input for ECXTRAC
"RTN","ECXSCXN",220,0)
 S ECHEAD="CLI"
"RTN","ECXSCXN",221,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXSCXN",222,0)
 Q
"VER")
8.0^22.0
"^DD",727.813,727.813,8,0)
DAY^FO^^0;9^K:$L(X)>8!($L(X)<8) X
"^DD",727.813,727.813,8,.1)
Day
"^DD",727.813,727.813,8,2)
S Y(0)=Y S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,2.1)
S Y=$$ECXDATEX^ECXUTL(Y)
"^DD",727.813,727.813,8,3)
Answer must be 8 characters in length.
"^DD",727.813,727.813,8,21,0)
^^2^2^3000309^^^^
"^DD",727.813,727.813,8,21,1,0)
This 8-character numeric string represents the collected date of
"^DD",727.813,727.813,8,21,2,0)
the Laboratory test.
"^DD",727.813,727.813,8,23,0)
^^16^16^3000309^^^^
"^DD",727.813,727.813,8,23,1,0)
Data source --
"^DD",727.813,727.813,8,23,2,0)
 
"^DD",727.813,727.813,8,23,3,0)
For Lab Extract:
"^DD",727.813,727.813,8,23,4,0)
   Data is inserted in this field by Laboratory routine ECXLABN
"^DD",727.813,727.813,8,23,5,0)
   and is derived from WKLD LOG file (#64.03) DATE/TIME COLLECTED 
"^DD",727.813,727.813,8,23,6,0)
   field (#12).
"^DD",727.813,727.813,8,23,7,0)
      The value in field #12 of file #64.03 originated from 
"^DD",727.813,727.813,8,23,8,0)
      routine LRCAPDSS and is derived from WKLD DATA file (#64.1); 
"^DD",727.813,727.813,8,23,9,0)
      sub-file ACCESSION WKLD CODE TIME (#64.1111); INVERSE DATE 
"^DD",727.813,727.813,8,23,10,0)
      COMPLETED field (#21)
"^DD",727.813,727.813,8,23,11,0)
 
"^DD",727.813,727.813,8,23,12,0)
This field is always exactly 8 numeric characters in length.  The format
"^DD",727.813,727.813,8,23,13,0)
is YYYYMMDD; for example, 19970923.  If the date cannot be determined, 
"^DD",727.813,727.813,8,23,14,0)
then a default is used.  The default date value is the value of the 
"^DD",727.813,727.813,8,23,15,0)
YEAR MONTH field (#1) concatenated with "01" for the day (DD) portion.
"^DD",727.813,727.813,8,23,16,0)
Year 2000 compliant per vendor.
"^DD",727.813,727.813,8,"DT")
2970924
"^DD",727.813,727.813,18,0)
TIME^FO^^0;19^K:$L(X)>6!($L(X)<6)!'(X?6N) X
"^DD",727.813,727.813,18,.1)
Time
"^DD",727.813,727.813,18,2)
S Y(0)=Y S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,2.1)
S Y=$$ECXTIMEX^ECXUTL(Y,1)
"^DD",727.813,727.813,18,3)
Answer must be 6 characters in length.
"^DD",727.813,727.813,18,21,0)
^^2^2^3000309^^^^
"^DD",727.813,727.813,18,21,1,0)
A 6-character numeric string that represents the time of day
"^DD",727.813,727.813,18,21,2,0)
at which the Laboratory test was collected.
"^DD",727.813,727.813,18,23,0)
^^13^13^3000309^^^^
"^DD",727.813,727.813,18,23,1,0)
Data source --
"^DD",727.813,727.813,18,23,2,0)
 
"^DD",727.813,727.813,18,23,3,0)
For Lab Extract:
"^DD",727.813,727.813,18,23,4,0)
   Data is inserted in this field by Laboratory routine ECXLABN
"^DD",727.813,727.813,18,23,5,0)
   and is derived from WKLD LOG file (#64.03) DATE/TIME COLLECTED
"^DD",727.813,727.813,18,23,6,0)
   field (#12).
"^DD",727.813,727.813,18,23,7,0)
      The value in field #12 of file #64.03 originated from
"^DD",727.813,727.813,18,23,8,0)
      routine LRCAPDSS and is derived from WKLD DATA file (#64.1);
"^DD",727.813,727.813,18,23,9,0)
      sub-file ACCESSION WKLD CODE TIME (#64.1111); INVERSE DATE
"^DD",727.813,727.813,18,23,10,0)
      COMPLETED field (#21)
"^DD",727.813,727.813,18,23,11,0)
 
"^DD",727.813,727.813,18,23,12,0)
This field is always exactly 6 numeric characters in length; if time
"^DD",727.813,727.813,18,23,13,0)
cannot be determined, then "000300" is used as default.
"^DD",727.813,727.813,18,"DT")
2970924
**END**
**END**
