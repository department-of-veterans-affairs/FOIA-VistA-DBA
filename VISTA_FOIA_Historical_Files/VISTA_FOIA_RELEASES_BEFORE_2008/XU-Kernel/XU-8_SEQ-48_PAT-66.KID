Released XU*8*66 SEQ #48
Extracted from mail message
**KIDS**:XU*8.0*66^

**INSTALL NAME**
XU*8.0*66
"BLD",182,0)
XU*8.0*66^KERNEL^0^2970627^n
"BLD",182,1,0)
^^54^54^2970627^^^^
"BLD",182,1,1,0)
 This patch contains the following fixes and features:
"BLD",182,1,2,0)
 - MUS-0497-71493  A no label error when installing patch XU*8*58 on an
"BLD",182,1,3,0)
  Open M system.
"BLD",182,1,4,0)
 - The National Package install module on FORUM can now track patches.
"BLD",182,1,5,0)
  KIDS will now be able to update the module for patches.
"BLD",182,1,6,0)
 - Corrects a problem with multi-builds. When a multi-build contains more
"BLD",182,1,7,0)
  build names that can fit on one header line, a second header line is
"BLD",182,1,8,0)
  create.  The first build on the second line will begin with a colon, this
"BLD",182,1,9,0)
  will prevent the build from being installed.
"BLD",182,1,10,0)
=============================================================================
"BLD",182,1,11,0)
                    **** INSTALL INSTRUCTIONS ****
"BLD",182,1,12,0)
=============================================================================
"BLD",182,1,13,0)

"BLD",182,1,14,0)
 This patch can be installed with users on the system, but no other users
"BLD",182,1,15,0)
 should be using KIDS while you install this patch.
"BLD",182,1,16,0)
 Since this patch is an update to KIDS, no other patches should be installed
"BLD",182,1,17,0)
 during the installation of this patch.
"BLD",182,1,18,0)
=============================================================================
"BLD",182,1,19,0)
  
"BLD",182,1,20,0)
INSTALLATION:
"BLD",182,1,21,0)
  1.  These routines are usually mapped on systems that allow mapping,
"BLD",182,1,22,0)
      so you will need to disable mapping for the affected routines.
"BLD",182,1,23,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",182,1,24,0)
      option will load the KIDS Distribution onto your system.
"BLD",182,1,25,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",182,1,26,0)
      system. You now need to use KIDS to install the patch in the Transport
"BLD",182,1,27,0)
      global.
"BLD",182,1,28,0)
  4.  Users can remain on the system. This patch can be queued and installed
"BLD",182,1,29,0)
      at any time.  TaskMan can remain running.
"BLD",182,1,30,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",182,1,31,0)
      options:
"BLD",182,1,32,0)
         2  Verify Checksums in Transport Global
"BLD",182,1,33,0)
         3  Print Transport Global
"BLD",182,1,34,0)
         4  Compare Transport Global to Current System
"BLD",182,1,35,0)
         5  Backup a Transport Global
"BLD",182,1,36,0)
         6  Install Package(s)
"BLD",182,1,37,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",182,1,38,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",182,1,39,0)
  7.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",182,1,40,0)
===========================================================================
"BLD",182,1,41,0)
  
"BLD",182,1,42,0)
ROUTINES:
"BLD",182,1,43,0)
   Checksums obtained using CHECK^XTSUMBLD
"BLD",182,1,44,0)
   The second line of the routine now looks like:
"BLD",182,1,45,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"BLD",182,1,46,0)

"BLD",182,1,47,0)
             Before          After           Patch
"BLD",182,1,48,0)
 Routine     Checksum        Checksum        List
"BLD",182,1,49,0)
 ----------------------------------------------------------------------
"BLD",182,1,50,0)
 XPDET       5058369         5059212         15,39,41,44,51,58,66
"BLD",182,1,51,0)
 XPDIL1      8511833         8519937         15,17,39,41,44,66
"BLD",182,1,52,0)
 XPDIST      2343711         2400065         66
"BLD",182,1,53,0)
 XPDT       19247892        19357441         2,10,28,41,44,51,58,66
"BLD",182,1,54,0)
===========================================================================
"BLD",182,4,0)
^9.64PA^^
"BLD",182,"KRN",0)
^9.67PA^19^18
"BLD",182,"KRN",.4,0)
.4
"BLD",182,"KRN",.401,0)
.401
"BLD",182,"KRN",.402,0)
.402
"BLD",182,"KRN",.403,0)
.403
"BLD",182,"KRN",.5,0)
.5
"BLD",182,"KRN",.84,0)
.84
"BLD",182,"KRN",3.6,0)
3.6
"BLD",182,"KRN",3.8,0)
3.8
"BLD",182,"KRN",9.2,0)
9.2
"BLD",182,"KRN",9.8,0)
9.8
"BLD",182,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",182,"KRN",9.8,"NM",1,0)
XPDET^^0^B26484300
"BLD",182,"KRN",9.8,"NM",2,0)
XPDIL1^^0^B22845325
"BLD",182,"KRN",9.8,"NM",3,0)
XPDIST^^0^B4133518
"BLD",182,"KRN",9.8,"NM",4,0)
XPDT^^0^B57787563
"BLD",182,"KRN",9.8,"NM","B","XPDET",1)

"BLD",182,"KRN",9.8,"NM","B","XPDIL1",2)

"BLD",182,"KRN",9.8,"NM","B","XPDIST",3)

"BLD",182,"KRN",9.8,"NM","B","XPDT",4)

"BLD",182,"KRN",19,0)
19
"BLD",182,"KRN",19.1,0)
19.1
"BLD",182,"KRN",101,0)
101
"BLD",182,"KRN",409.61,0)
409.61
"BLD",182,"KRN",771,0)
771
"BLD",182,"KRN",869.2,0)
869.2
"BLD",182,"KRN",870,0)
870
"BLD",182,"KRN",8994,0)
8994
"BLD",182,"KRN","B",.4,.4)

"BLD",182,"KRN","B",.401,.401)

"BLD",182,"KRN","B",.402,.402)

"BLD",182,"KRN","B",.403,.403)

"BLD",182,"KRN","B",.5,.5)

"BLD",182,"KRN","B",.84,.84)

"BLD",182,"KRN","B",3.6,3.6)

"BLD",182,"KRN","B",3.8,3.8)

"BLD",182,"KRN","B",9.2,9.2)

"BLD",182,"KRN","B",9.8,9.8)

"BLD",182,"KRN","B",19,19)

"BLD",182,"KRN","B",19.1,19.1)

"BLD",182,"KRN","B",101,101)

"BLD",182,"KRN","B",409.61,409.61)

"BLD",182,"KRN","B",771,771)

"BLD",182,"KRN","B",869.2,869.2)

"BLD",182,"KRN","B",870,870)

"BLD",182,"KRN","B",8994,8994)

"BLD",182,"QUES",0)
^9.62^^
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
66^2970627
"PKG",283,22,1,"PAH",1,1,0)
^^54^54^2970627
"PKG",283,22,1,"PAH",1,1,1,0)
 This patch contains the following fixes and features:
"PKG",283,22,1,"PAH",1,1,2,0)
 - MUS-0497-71493  A no label error when installing patch XU*8*58 on an
"PKG",283,22,1,"PAH",1,1,3,0)
  Open M system.
"PKG",283,22,1,"PAH",1,1,4,0)
 - The National Package install module on FORUM can now track patches.
"PKG",283,22,1,"PAH",1,1,5,0)
  KIDS will now be able to update the module for patches.
"PKG",283,22,1,"PAH",1,1,6,0)
 - Corrects a problem with multi-builds. When a multi-build contains more
"PKG",283,22,1,"PAH",1,1,7,0)
  build names that can fit on one header line, a second header line is
"PKG",283,22,1,"PAH",1,1,8,0)
  create.  The first build on the second line will begin with a colon, this
"PKG",283,22,1,"PAH",1,1,9,0)
  will prevent the build from being installed.
"PKG",283,22,1,"PAH",1,1,10,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,11,0)
                    **** INSTALL INSTRUCTIONS ****
"PKG",283,22,1,"PAH",1,1,12,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,13,0)

"PKG",283,22,1,"PAH",1,1,14,0)
 This patch can be installed with users on the system, but no other users
"PKG",283,22,1,"PAH",1,1,15,0)
 should be using KIDS while you install this patch.
"PKG",283,22,1,"PAH",1,1,16,0)
 Since this patch is an update to KIDS, no other patches should be installed
"PKG",283,22,1,"PAH",1,1,17,0)
 during the installation of this patch.
"PKG",283,22,1,"PAH",1,1,18,0)
=============================================================================
"PKG",283,22,1,"PAH",1,1,19,0)
  
"PKG",283,22,1,"PAH",1,1,20,0)
INSTALLATION:
"PKG",283,22,1,"PAH",1,1,21,0)
  1.  These routines are usually mapped on systems that allow mapping,
"PKG",283,22,1,"PAH",1,1,22,0)
      so you will need to disable mapping for the affected routines.
"PKG",283,22,1,"PAH",1,1,23,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,24,0)
      option will load the KIDS Distribution onto your system.
"PKG",283,22,1,"PAH",1,1,25,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",283,22,1,"PAH",1,1,26,0)
      system. You now need to use KIDS to install the patch in the Transport
"PKG",283,22,1,"PAH",1,1,27,0)
      global.
"PKG",283,22,1,"PAH",1,1,28,0)
  4.  Users can remain on the system. This patch can be queued and installed
"PKG",283,22,1,"PAH",1,1,29,0)
      at any time.  TaskMan can remain running.
"PKG",283,22,1,"PAH",1,1,30,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",283,22,1,"PAH",1,1,31,0)
      options:
"PKG",283,22,1,"PAH",1,1,32,0)
         2  Verify Checksums in Transport Global
"PKG",283,22,1,"PAH",1,1,33,0)
         3  Print Transport Global
"PKG",283,22,1,"PAH",1,1,34,0)
         4  Compare Transport Global to Current System
"PKG",283,22,1,"PAH",1,1,35,0)
         5  Backup a Transport Global
"PKG",283,22,1,"PAH",1,1,36,0)
         6  Install Package(s)
"PKG",283,22,1,"PAH",1,1,37,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",283,22,1,"PAH",1,1,38,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",283,22,1,"PAH",1,1,39,0)
  7.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",283,22,1,"PAH",1,1,40,0)
===========================================================================
"PKG",283,22,1,"PAH",1,1,41,0)
  
"PKG",283,22,1,"PAH",1,1,42,0)
ROUTINES:
"PKG",283,22,1,"PAH",1,1,43,0)
   Checksums obtained using CHECK^XTSUMBLD
"PKG",283,22,1,"PAH",1,1,44,0)
   The second line of the routine now looks like:
"PKG",283,22,1,"PAH",1,1,45,0)
       ;;8.0;KERNEL;**[patch list]**;Jul 10, 1995
"PKG",283,22,1,"PAH",1,1,46,0)

"PKG",283,22,1,"PAH",1,1,47,0)
             Before          After           Patch
"PKG",283,22,1,"PAH",1,1,48,0)
 Routine     Checksum        Checksum        List
"PKG",283,22,1,"PAH",1,1,49,0)
 ----------------------------------------------------------------------
"PKG",283,22,1,"PAH",1,1,50,0)
 XPDET       5058369         5059212         15,39,41,44,51,58,66
"PKG",283,22,1,"PAH",1,1,51,0)
 XPDIL1      8511833         8519937         15,17,39,41,44,66
"PKG",283,22,1,"PAH",1,1,52,0)
 XPDIST      2343711         2400065         66
"PKG",283,22,1,"PAH",1,1,53,0)
 XPDT       19247892        19357441         2,10,28,41,44,51,58,66
"PKG",283,22,1,"PAH",1,1,54,0)
===========================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","XPDET")
0^1^B26484300
"RTN","XPDET",1,0)
XPDET ;SFISC/RSD - Input tranforms & help for file 9.6 & 9.7 ;06/11/97  14:42
"RTN","XPDET",2,0)
 ;;8.0;KERNEL;**15,39,41,44,51,58,66**;Jul 10, 1995
"RTN","XPDET",3,0)
 Q
"RTN","XPDET",4,0)
INPUTB(X) ;input tranfrom for NAME in BUILD file
"RTN","XPDET",5,0)
 ;X=user input
"RTN","XPDET",6,0)
 ;name must be unique
"RTN","XPDET",7,0)
 I $L(X)>50!($L(X)<3)!$D(^XPD(9.6,"B",X)) K X Q
"RTN","XPDET",8,0)
 I X["*" K:$P(X,"*",2,3)'?1.2N1"."1.2N.1(1"V",1"T").2N1"*"1.6N X Q
"RTN","XPDET",9,0)
 S %=$L(X," ") I %<2 K X Q
"RTN","XPDET",10,0)
 S %=$P(X," ",%) K:%'?1.2N1"."1.2N.1(1"V",1"T").2N X
"RTN","XPDET",11,0)
 Q
"RTN","XPDET",12,0)
INPUTE(X) ;input transform for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",13,0)
 ;X=user input
"RTN","XPDET",14,0)
 N D,DD,DIC,DICR,DIX,DIY,DS,DO,XPDLK,Y
"RTN","XPDET",15,0)
 S XPDLK=$$GR(D1)
"RTN","XPDET",16,0)
 I XPDLK=""!X["*" K X Q
"RTN","XPDET",17,0)
 S DIC(0)="QEMZ",DIC=XPDLK
"RTN","XPDET",18,0)
 S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",19,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",20,0)
 S X=Y(0,0)
"RTN","XPDET",21,0)
 ;check that this doesn't exist already
"RTN","XPDET",22,0)
 I $D(^XPD(9.6,D0,"KRN",D1,"NM","B",X)) K X Q
"RTN","XPDET",23,0)
 ;if fm file, change X to contain file # of template
"RTN","XPDET",24,0)
 I D1<.404 S X=$$TX(X,$P(Y(0),U,$S(D1=.403:8,1:4)))
"RTN","XPDET",25,0)
 Q
"RTN","XPDET",26,0)
GLOBALE(X) ;input transform for GLOBAL multiple .01 field in file 9.6
"RTN","XPDET",27,0)
 I $L(X)>30!($L(X)<2) K X Q
"RTN","XPDET",28,0)
 I X["(",X'[")" K X Q
"RTN","XPDET",29,0)
 ;change ' back to " for subscripts, they were changed in the Pre-Lookup node of the DD, 7.5. This was done to trick FM, which doesn't allow " in .01 fields
"RTN","XPDET",30,0)
 S X=$TR(X,"'","""")
"RTN","XPDET",31,0)
 I '$D(@("^"_X)) K X
"RTN","XPDET",32,0)
 Q
"RTN","XPDET",33,0)
INPUTMB(X) ;input transform for field 10 and 11 in file 9.6
"RTN","XPDET",34,0)
 ;X=user input
"RTN","XPDET",35,0)
 N D,DD,DIC,DICR,DIX,DIY,DS,DO,Y
"RTN","XPDET",36,0)
 ;can't select a global or multi package or itself (D0)
"RTN","XPDET",37,0)
 S DIC(0)="QEMZ",DIC="^XPD(9.6,",DIC("S")="I '$P(^(0),U,3),Y'="_D0
"RTN","XPDET",38,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",39,0)
 S X=Y(0,0)
"RTN","XPDET",40,0)
 Q
"RTN","XPDET",41,0)
LOOKE(X) ;special lookup for ENTRIES in KERNEL FILES multiple
"RTN","XPDET",42,0)
 Q:X'?1.E1"*"
"RTN","XPDET",43,0)
 N %,XPD,XPDI,XPDIC,XPDF,XPDLK,XPDX,Y
"RTN","XPDET",44,0)
 S XPDLK=$$GR(D1),XPDIC=DIC,XPDF=D1
"RTN","XPDET",45,0)
 I XPDLK="" K X Q
"RTN","XPDET",46,0)
 G:$E(X)="-" DEL
"RTN","XPDET",47,0)
 S XPDX=$P(X,"*"),XPDI("IEN")=0
"RTN","XPDET",48,0)
 D LIST^DIC(D1,"","","","*",.XPDI,XPDX,"","I $$SCR^XPDET(Y)")
"RTN","XPDET",49,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",50,0)
 K ^TMP("XPDX",$J)
"RTN","XPDET",51,0)
 ;loop thru list from lister and file using UPDATE^DIE
"RTN","XPDET",52,0)
 F XPDI=1:1 S X=$G(^TMP("DILIST",$J,1,XPDI)) Q:X=""  D
"RTN","XPDET",53,0)
 .S:D1<.404 %=^TMP("DILIST",$J,2,XPDI)_",",X=$$TX(X,$$GET1^DIQ(D1,%,$$TF(D1),"I"))
"RTN","XPDET",54,0)
 .S Y="+"_XPDI_","_D1_","_D0_",",^TMP("XPDX",$J,9.68,Y,.01)=X,^(.03)=0
"RTN","XPDET",55,0)
 I $D(^TMP("XPDX",$J)) D UPDATE^DIE("","^TMP(""XPDX"",$J)","^TMP(""XPD"",$J)")
"RTN","XPDET",56,0)
 ;if in Screenman then call MLOAD to update screen
"RTN","XPDET",57,0)
 I $D(DDS),$D(^TMP("XPD",$J)) D MLOAD^DDSUTL("^TMP(""XPD"",$J)")
"RTN","XPDET",58,0)
 S X=""
"RTN","XPDET",59,0)
 K ^TMP("XPDX",$J),^TMP("XPD",$J)
"RTN","XPDET",60,0)
 Q
"RTN","XPDET",61,0)
DEL ;delete using wild card
"RTN","XPDET",62,0)
 I X'?1"-"1.E1"*" K X Q
"RTN","XPDET",63,0)
 S X=$E(X,2,$L(X)-1),XPDX=X S:$L(X) XPDI("IEN")=0
"RTN","XPDET",64,0)
 D LIST^DIC(9.68,","_D1_","_D0_",","","","*",.XPDI,XPDX)
"RTN","XPDET",65,0)
 I '$G(^TMP("DILIST",$J,0)) K X Q
"RTN","XPDET",66,0)
 N DIK,DA,D2
"RTN","XPDET",67,0)
 S DIK=XPDIC,DA(1)=D1,DA(2)=D0
"RTN","XPDET",68,0)
 F XPDI=1:1 S (DA,D2)=$G(^TMP("DILIST",$J,2,XPDI)) Q:'DA  D
"RTN","XPDET",69,0)
 .D ^DIK
"RTN","XPDET",70,0)
 I $D(DDS) D MDEL^DDSUTL("^TMP(""DILIST"",$J,2)")
"RTN","XPDET",71,0)
 S X=""
"RTN","XPDET",72,0)
 K ^TMP("DILIST",$J)
"RTN","XPDET",73,0)
 Q
"RTN","XPDET",74,0)
HELP ;executable help of ENTRIES in KERNEL FILE multiple
"RTN","XPDET",75,0)
 N D,DIC,DIE,DIX,DIY,DO,DZ,DS,X,Y
"RTN","XPDET",76,0)
 ;file 9.8 is routine file, check that routine exists
"RTN","XPDET",77,0)
 S DIC=$$GR(D1),DIC(0)="M",X="??" Q:DIC=""  S:D1=9.8 DIC("S")="I $T(^@$P(^(0),U))]"""""
"RTN","XPDET",78,0)
 D ^DIC Q
"RTN","XPDET",79,0)
 ;
"RTN","XPDET",80,0)
HELPO ;executable help of INSTALL ORDER in KERNEL FILES multiple
"RTN","XPDET",81,0)
 N Y
"RTN","XPDET",82,0)
 W !,"Numbers in use:  ORDER     FILE#" S Y=0
"RTN","XPDET",83,0)
 F  S Y=$O(^XPD(9.6,D0,"KRN","AC",Y)) Q:'Y  W !,?18,$J(Y,2),?28,$O(^(Y,0))
"RTN","XPDET",84,0)
 W ! Q
"RTN","XPDET",85,0)
 ;
"RTN","XPDET",86,0)
HELPMB ;executable help of fields 10 & 11 in file 9.6
"RTN","XPDET",87,0)
 N D,DIC,DIE,DIX,DIY,DO,DZ,DS,X,Y
"RTN","XPDET",88,0)
 S DIC="^XPD(9.6,",DIC(0)="M",X="??",DIC("S")="I '$P(^(0),U,3),Y'="_D0
"RTN","XPDET",89,0)
 D ^DIC Q
"RTN","XPDET",90,0)
 ;
"RTN","XPDET",91,0)
SCRA(Y) ;screen of ACTION field in ENTRIES multiple in KERNEL FILES multiple, Y=action
"RTN","XPDET",92,0)
 ;Y=0 - send, 1 - delete, 2 - link, 3 - merge, 4 - attach, 5 - disable
"RTN","XPDET",93,0)
 ;all entries can send to site or disable
"RTN","XPDET",94,0)
 Q:Y=5!'Y 1
"RTN","XPDET",95,0)
 ;.5=function file, can't delete, all others can
"RTN","XPDET",96,0)
 I Y=1 Q (D1'=.5)
"RTN","XPDET",97,0)
 ;then rest of code check if it is a Option or Protocal and can have MENU ITEMS
"RTN","XPDET",98,0)
 Q:D1'=19&(D1'=101) 0
"RTN","XPDET",99,0)
 ;all Options and Protocols can be attached
"RTN","XPDET",100,0)
 Q:Y=4 1
"RTN","XPDET",101,0)
 N FGR,X
"RTN","XPDET",102,0)
 S X=$P(^XPD(9.6,D0,"KRN",D1,"NM",D2,0),U),FGR=$$FILE^XPDV(D1)
"RTN","XPDET",103,0)
 Q:X="" 0
"RTN","XPDET",104,0)
 S X=+$O(@FGR@("B",X,0))
"RTN","XPDET",105,0)
 ;if it has ITEMs, node 10 then ok
"RTN","XPDET",106,0)
 I $O(@FGR@(X,10,0)) Q 1
"RTN","XPDET",107,0)
 ;if type is menu,potocol,protocol menu,limited,extended,window suite
"RTN","XPDET",108,0)
 I "MOQLXZ"[$P($G(@FGR@(X,0)),U,4) Q 1
"RTN","XPDET",109,0)
 Q 0
"RTN","XPDET",110,0)
 ;
"RTN","XPDET",111,0)
 ;only Fileman templates need to know what file they are associated with.
"RTN","XPDET",112,0)
 ;this value is also triggered to field .02 in the DD.
"RTN","XPDET",113,0)
TX(X,Y) ;X=template name, Y=file #
"RTN","XPDET",114,0)
 Q X_"    FILE #"_Y
"RTN","XPDET",115,0)
 ;
"RTN","XPDET",116,0)
TF(F) ;F=file, return field of file# for templates
"RTN","XPDET",117,0)
 Q $S(F>.403:"",F<.403:4,1:7)
"RTN","XPDET",118,0)
 ;
"RTN","XPDET",119,0)
GR(X) Q $G(^DIC(X,0,"GL"))
"RTN","XPDET",120,0)
 ;
"RTN","XPDET",121,0)
 ;screens checks that X is not already in the ENTRIES multiple
"RTN","XPDET",122,0)
SCR(Y) ;screen logic for ENTRIES multiple in file 9.6
"RTN","XPDET",123,0)
 N %,X,Z
"RTN","XPDET",124,0)
 S Z=^(0),X=$P(Z,U)
"RTN","XPDET",125,0)
 ;FM files are less than .44
"RTN","XPDET",126,0)
 I XPDF<.44 D  Q:X="" 0
"RTN","XPDET",127,0)
 .S %=$S(XPDF=.403:$P(Z,U,8),1:$P(Z,U,4)),X=X_"    FILE #"_%
"RTN","XPDET",128,0)
 .S:XPDF'=.403&($P(Z,U,8)>2) %=0 S:'% X=""
"RTN","XPDET",129,0)
 ;routine must exist and must be type 'R'
"RTN","XPDET",130,0)
 I XPDF=9.8 Q:$T(^@X)=""!($P(Z,U,2)'="R") 0
"RTN","XPDET",131,0)
 Q '$D(@(XPDIC_"""B"",X)"))
"RTN","XPDET",132,0)
 ;
"RTN","XPDET",133,0)
 ;screen checks that X is not in the exclude list, XPDN(0)
"RTN","XPDET",134,0)
SCR1(Y) ;screen logic for exclude list
"RTN","XPDET",135,0)
 N %,X
"RTN","XPDET",136,0)
 ;if name X is in the exclude list, XPDN(0,X), then fail
"RTN","XPDET",137,0)
 S Y(0)=^(0),X=$P(Y(0),U) Q:$D(XPDN(0,X)) 0
"RTN","XPDET",138,0)
 ;check if X is refered in the namespace by check the subscript
"RTN","XPDET",139,0)
 ;before X, if sub exist and $P(X,sub)="" then it is part of the
"RTN","XPDET",140,0)
 ;namespace, fail and return 0
"RTN","XPDET",141,0)
 S %=$O(XPDN(0,X),-1) I $L(%) Q:$P(X,%)="" 0
"RTN","XPDET",142,0)
 Q $$SCR(.Y)
"RTN","XPDET",143,0)
 ;
"RTN","XPDET",144,0)
 ;screen on PACKAGE LINK field in file 9.6,
"RTN","XPDET",145,0)
PCK(Y) ;check Package File name, Y=ien in package file
"RTN","XPDET",146,0)
 N %,Y,Z
"RTN","XPDET",147,0)
 S Z=^(0)
"RTN","XPDET",148,0)
 ;DA is undef when you are adding a new Build without a version number
"RTN","XPDET",149,0)
 Q:'$D(^XPD(9.6,+$G(DA),0)) 1
"RTN","XPDET",150,0)
 S Y=$L($P(Z,U)),%=$P(^XPD(9.6,DA,0),U),%=$$PKG^XPDUTL(%)
"RTN","XPDET",151,0)
 Q $P(Z,U)=$E(%,1,Y)!($P(Z,U,2)=%)
"RTN","XPDET",152,0)
VOLE(X) ;input transform for VOLUME SET multiple in INSTALL file
"RTN","XPDET",153,0)
 ;X=user input
"RTN","XPDET",154,0)
 N D,DD,DIC,DICR,DIX,DIY,DO,DS,XPD,Y,%
"RTN","XPDET",155,0)
 ;(0;11)=SIGNON/PRODUCTION
"RTN","XPDET",156,0)
 S DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I $P(^(0),U,11)"
"RTN","XPDET",157,0)
 D ^DIC K:Y<0 X Q:'$D(X)
"RTN","XPDET",158,0)
 S X=Y(0,0)
"RTN","XPDET",159,0)
 Q
"RTN","XPDET",160,0)
VOLH ;executable help for VOLUME SET multiple in INSTALL file
"RTN","XPDET",161,0)
 N D,DD,DIC,DIE,DIX,DIY,DO,DS,DZ,X,Y,%
"RTN","XPDET",162,0)
 S X="??",DIC(0)="QEMZ",DIC="^%ZIS(14.5,",DIC("S")="I $P(^(0),U,11)"
"RTN","XPDET",163,0)
 D ^DIC
"RTN","XPDET",164,0)
 Q
"RTN","XPDET",165,0)
ID97 ;identifier for Install file
"RTN","XPDET",166,0)
 N XPDET,XPD,XPD0,XPD1,XPD2,XPD9
"RTN","XPDET",167,0)
 S XPD0=$G(^(0)),XPD1=$G(^(1)),XPD2=$G(^(2)),XPD9=$P(XPD0,U,9),XPD="" Q:XPD9=""
"RTN","XPDET",168,0)
 D
"RTN","XPDET",169,0)
 .;Loaded, get DATE LOADED
"RTN","XPDET",170,0)
 .I 'XPD9 S XPD=$$FMTE^XLFDT($P(XPD0,U,3),2) Q
"RTN","XPDET",171,0)
 .Q:XPD9>3
"RTN","XPDET",172,0)
 .;Started, get INSTALL START TIME
"RTN","XPDET",173,0)
 .I XPD9=2 S XPD=$$FMTE^XLFDT($P(XPD1,U),2) Q
"RTN","XPDET",174,0)
 .;Completed, get INSTALL COMPLETE TIME
"RTN","XPDET",175,0)
 .I XPD9=3 S XPD=$$FMTE^XLFDT($P(XPD1,U,3),2) Q
"RTN","XPDET",176,0)
 .;Queued, get QUEUED TASK NUMBER
"RTN","XPDET",177,0)
 .I XPD9=1 S XPD="#"_$P(XPD0,U,6) Q
"RTN","XPDET",178,0)
 S XPDET(1)="   "_$$EXTERNAL^DILFD(9.7,.02,"",XPD9)_"  "_XPD,XPDET(1,"F")="?0"
"RTN","XPDET",179,0)
 S:XPD2]"" XPDET(2)="=> "_$E(XPD2,1,70),XPDET(2,"F")="!?5"
"RTN","XPDET",180,0)
 D EN^DDIOL(.XPDET)
"RTN","XPDET",181,0)
 Q
"RTN","XPDET",182,0)
 ;not being used right now,
"RTN","XPDET",183,0)
DEL97(Y) ;delete access to file 9.7, 0-can't delete, 1-can
"RTN","XPDET",184,0)
 N %
"RTN","XPDET",185,0)
 S %=$P(^XPD(9.7,Y,0),U,9)
"RTN","XPDET",186,0)
 Q $S(%=3:1,%=2:0,$D(^XPD(9.7,"ASP",Y,1,Y)):1,1:0)
"RTN","XPDIL1")
0^2^B22845325
"RTN","XPDIL1",1,0)
XPDIL1 ;SFISC/RSD - cont. of load Distribution Global ;06/11/97  14:40
"RTN","XPDIL1",2,0)
 ;;8.0;KERNEL;**15,17,39,41,44,66**;Jul 10, 1995
"RTN","XPDIL1",3,0)
 ;
"RTN","XPDIL1",4,0)
PKG(XPDA) ;check Package file
"RTN","XPDIL1",5,0)
 N D,DIC,XPD,XPDCP,XPDNM,XPDNOQUE,XPDPKG,X,Y,%
"RTN","XPDIL1",6,0)
 S XPDNM=$P(XPDT(XPDIT),U,2) W !?3,XPDNM
"RTN","XPDIL1",7,0)
 ;check KIDS version against sites version, skip if package is Kernel
"RTN","XPDIL1",8,0)
 I $$PKG^XPDUTL(XPDNM)'["KERNEL" D  I $D(XPDQUIT) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",9,0)
 .;this is part of a Kernel multi package
"RTN","XPDIL1",10,0)
 .Q:$O(XPDT("NM","KERNEL"))["KERNEL"
"RTN","XPDIL1",11,0)
 .S Y=$G(^XTMP("XPDI",XPDA,"VER"))
"RTN","XPDIL1",12,0)
 .I $$VERSION^XPDUTL("XU")<Y W !!,"BUT I NEED VERSION ",+Y," OF KERNEL!"  S XPDQUIT=1
"RTN","XPDIL1",13,0)
 .I $$VERSION^XPDUTL("VA FILEMAN")<$P(Y,U,2) W !,"BUT I NEED VERSION ",+$P(Y,U,2)," OF VA FILEMAN!" S XPDQUIT=1
"RTN","XPDIL1",14,0)
 ;get national package name
"RTN","XPDIL1",15,0)
 S %=$O(^XTMP("XPDI",XPDA,"PKG",0)),XPDPKG(0)=$G(^(+%,0)),XPDPKG=%
"RTN","XPDIL1",16,0)
 ;XPDPKG=new ien^old ien
"RTN","XPDIL1",17,0)
 I XPDPKG S DIC="^DIC(9.4," D  S XPDPKG=+Y_U_XPDPKG
"RTN","XPDIL1",18,0)
 .S DIC(0)="X",X=$P(XPDPKG(0),U) D ^DIC Q:Y>0
"RTN","XPDIL1",19,0)
 .;if lookup fails try Prefix, C x-ref
"RTN","XPDIL1",20,0)
 .S X=$P(XPDPKG(0),U,2),D="C" D IX^DIC
"RTN","XPDIL1",21,0)
 ;add package to Install file
"RTN","XPDIL1",22,0)
 I XPDPKG>0 S XPD(9.7,XPDA_",",1)=+XPDPKG D FILE^DIE("","XPD")
"RTN","XPDIL1",23,0)
 ;XPDSKPE= does site want to run Environ. Check
"RTN","XPDIL1",24,0)
 I '$G(XPDSKPE) Q:$$ENV(0)=1
"RTN","XPDIL1",25,0)
 ;global package can't have pre or post inits
"RTN","XPDIL1",26,0)
 Q:$D(XPDGP)
"RTN","XPDIL1",27,0)
 ;create pre-init checkpoint
"RTN","XPDIL1",28,0)
 S XPDCP="INI" I '$$NEWCP^XPDUTL("XPD PREINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",29,0)
 S %=$$INRTN("INI")
"RTN","XPDIL1",30,0)
 ;check for routine, use as call back
"RTN","XPDIL1",31,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD PREINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",32,0)
 ;create post-init checkpoint
"RTN","XPDIL1",33,0)
 S XPDCP="INIT" I '$$NEWCP^XPDUTL("XPD POSTINSTALL COMPLETED") D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",34,0)
 S %=$$INRTN("INIT")
"RTN","XPDIL1",35,0)
 I $L(%),'$$NEWCP^XPDUTL("XPD POSTINSTALL STARTED",%) D ABORT^XPDI(XPDA,1) Q
"RTN","XPDIL1",36,0)
 ;create fileman and components check points and file rest of data
"RTN","XPDIL1",37,0)
 D XPCK^XPDIK("FIA"),XPCK^XPDIK("KRN")
"RTN","XPDIL1",38,0)
 Q
"RTN","XPDIL1",39,0)
INST(XPDNM) ;add to Install file
"RTN","XPDIL1",40,0)
 N DIC,DIR,DIRUT,DLAYGO,X,XPD,XPDA,XPDIE,XPDDIQ,Y
"RTN","XPDIL1",41,0)
 ;check if Build was already installed
"RTN","XPDIL1",42,0)
 ;XPD=0 abort install, else XPD=ien in Install file
"RTN","XPDIL1",43,0)
 I $D(^XPD(9.7,"B",XPDNM)) S Y=0 D  Q:$D(XPD) XPD
"RTN","XPDIL1",44,0)
 .W !,"The following Entries already exist in the INSTALL file: ",!
"RTN","XPDIL1",45,0)
 .F  S Y=$O(^XPD(9.7,"B",XPDNM,Y)) Q:'Y  D
"RTN","XPDIL1",46,0)
 ..Q:'$D(^XPD(9.7,Y,0))  S %=^(0)
"RTN","XPDIL1",47,0)
 ..W !,$P(%,U),"   "
"RTN","XPDIL1",48,0)
 ..I $P(%,U,9)<3,$D(^XTMP("XPDI",Y)) W "**Transport Global already exists**",*7 S XPD=0 Q
"RTN","XPDIL1",49,0)
 ..W $$EXTERNAL^DILFD(9.7,.02,"",$P(%,U,9)),!,"was loaded on ",$$FMTE^XLFDT($P($G(^XPD(9.7,Y,1)),U))
"RTN","XPDIL1",50,0)
 .;quit if transport global exist
"RTN","XPDIL1",51,0)
 .Q:$D(XPD)
"RTN","XPDIL1",52,0)
 .S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="NO"
"RTN","XPDIL1",53,0)
 .D ^DIR I $D(DIRUT)!'Y S XPD=0 Q
"RTN","XPDIL1",54,0)
 S DIC="^XPD(9.7,",DIC(0)="XL",DLAYGO=9.7,X=""""_XPDNM_""""
"RTN","XPDIL1",55,0)
 ;add to Install file, must be new
"RTN","XPDIL1",56,0)
 D ^DIC
"RTN","XPDIL1",57,0)
 I Y<0 W !,"Can't add Build ",XPDNM," to Install File" Q 0
"RTN","XPDIL1",58,0)
 ;set starting package to Y, if it is not already defined
"RTN","XPDIL1",59,0)
 S:'XPDST XPDST=+Y
"RTN","XPDIL1",60,0)
 ;XPDT array keeps track of all packages in this distribution
"RTN","XPDIL1",61,0)
 S XPDA=+Y,XPDT(XPDIT)=XPDA_U_XPDNM,(XPDT("DA",XPDA),XPDT("NM",XPDNM))=XPDIT
"RTN","XPDIL1",62,0)
 S %="XPDIE(9.7,"""_XPDA_","")",@%@(.02)=0,@%@(2)=$$NOW^XLFDT,@%@(3)=XPDST,@%@(4)=XPDIT,@%@(5)="",@%@(6)=XPDST("H1")
"RTN","XPDIL1",63,0)
 D FILE^DIE("","XPDIE")
"RTN","XPDIL1",64,0)
 Q XPDA
"RTN","XPDIL1",65,0)
 ;
"RTN","XPDIL1",66,0)
 ;XPDQUIT quit current package install, 1=kill global, 2=leave global
"RTN","XPDIL1",67,0)
 ;XPDQUIT(package) quit package install, 1=kill, 2=leave
"RTN","XPDIL1",68,0)
 ;XPDABORT quit the entire distribution, 1=kill, 2=leave
"RTN","XPDIL1",69,0)
 ;XPDENV 0=loading distribution, 1=installing
"RTN","XPDIL1",70,0)
ENV(XPDENV) ;enviroment check & version check
"RTN","XPDIL1",71,0)
 ;returns 0=ok, 1=rejected kill global, 2=rejected leave global
"RTN","XPDIL1",72,0)
 N %,XPDI,XPDQUIT,XPDABORT
"RTN","XPDIL1",73,0)
 ;check version number, must be greater than existing version
"RTN","XPDIL1",74,0)
 I XPDPKG>0 S %=$$VER^XPDUTL(XPDNM) I %<$G(^DIC(9.4,+XPDPKG,"VERSION")) W !,"You have a Version greater than mine!",! D ABORT^XPDI(XPDA,1) Q 1
"RTN","XPDIL1",75,0)
 S %=$$REQB Q:% %
"RTN","XPDIL1",76,0)
 S %=$G(^XTMP("XPDI",XPDA,"PRE")) D:%]""
"RTN","XPDIL1",77,0)
 .W !,"Will first run the Environment Check Routine, ",%,!
"RTN","XPDIL1",78,0)
 .D SAVE^XPDIJ(%),@("^"_%)
"RTN","XPDIL1",79,0)
 I $G(XPDABORT) D  Q XPDABORT
"RTN","XPDIL1",80,0)
 .;if during load & leave global quit
"RTN","XPDIL1",81,0)
 .I 'XPDENV,XPDABORT=2 Q
"RTN","XPDIL1",82,0)
 .D ABRTALL^XPDI(XPDABORT)
"RTN","XPDIL1",83,0)
 Q:'$D(XPDQUIT) 0
"RTN","XPDIL1",84,0)
 I $G(XPDQUIT) D ABORT^XPDI(XPDA,XPDQUIT)
"RTN","XPDIL1",85,0)
 S XPDI=""
"RTN","XPDIL1",86,0)
 ;don't do if loading & leave global, need to keep XPDT(array)
"RTN","XPDIL1",87,0)
 F  S XPDI=$O(XPDQUIT(XPDI)) Q:XPDI=""  D:'(XPDQUIT(XPDI)=2&'XPDENV)
"RTN","XPDIL1",88,0)
 .S %=$G(XPDT("NM",XPDI)) D:% ABORT^XPDI(+XPDT(%),XPDQUIT(XPDI))
"RTN","XPDIL1",89,0)
 S XPDQUIT=$S($G(XPDQUIT):XPDQUIT,'$O(XPDT(0))!'$D(^XTMP("XPDI",XPDA)):1,1:0)
"RTN","XPDIL1",90,0)
 Q XPDQUIT
"RTN","XPDIL1",91,0)
 ;
"RTN","XPDIL1",92,0)
REQB() ;check for Required Builds
"RTN","XPDIL1",93,0)
 ;returns 0=ok, 1=failed leave global, 2=failed kill global
"RTN","XPDIL1",94,0)
 N XPDACT,XPDBLD,XPDI,XPDQ,XPDQUIT,XPDX,XPDX0,X,Y
"RTN","XPDIL1",95,0)
 S XPDBLD=$O(^XTMP("XPDI",XPDA,"BLD",0)),XPDQUIT=0,XPDI=0
"RTN","XPDIL1",96,0)
 Q:'$D(^XTMP("XPDI",XPDA,"BLD",XPDBLD,"REQB")) 0
"RTN","XPDIL1",97,0)
 F  S XPDI=$O(^XTMP("XPDI",XPDA,"BLD",XPDBLD,"REQB",XPDI)) Q:'XPDI  S XPDX0=^(XPDI,0) D
"RTN","XPDIL1",98,0)
 .S XPDQ=0,XPDX=$P(XPDX0,U),XPDACT=$P(XPDX0,U,2)
"RTN","XPDIL1",99,0)
 .I XPDX["*" S:'$$PATCH^XPDUTL(XPDX) XPDQ=1
"RTN","XPDIL1",100,0)
 .E  S X=$$PKG^XPDUTL(XPDX),Y=$$VER^XPDUTL(XPDX) S:$$VERSION^XPDUTL(X)<Y XPDQ=2
"RTN","XPDIL1",101,0)
 .Q:'XPDQ  S XPDQUIT=$S(XPDACT>XPDQUIT:XPDACT,1:XPDQUIT)
"RTN","XPDIL1",102,0)
 .;XPDACT=0 warning, =1 abort & kill global, =2 abort
"RTN","XPDIL1",103,0)
 .W !!,$S(XPDACT:"**INSTALL ABORTED**",1:"**WARNING**")_$S(XPDQ=1:" Patch ",1:" Package ")_XPDX_" is Required "_$S(XPDACT:"to install",1:"for")_" this package!!",!
"RTN","XPDIL1",104,0)
 Q:'XPDQUIT 0
"RTN","XPDIL1",105,0)
 ;don't do if leave global and loading
"RTN","XPDIL1",106,0)
 D:'(XPDQUIT=2&'XPDENV) ABORT^XPDI(XPDA,XPDQUIT)
"RTN","XPDIL1",107,0)
 Q XPDQUIT
"RTN","XPDIL1",108,0)
 ;
"RTN","XPDIL1",109,0)
 ;return a routine that can be run
"RTN","XPDIL1",110,0)
INRTN(X) N Y
"RTN","XPDIL1",111,0)
 S Y=$G(^XTMP("XPDI",XPDA,X)) Q:Y="" ""
"RTN","XPDIL1",112,0)
 S Y=$S(Y["^":Y,1:"^"_Y)
"RTN","XPDIL1",113,0)
 Q Y
"RTN","XPDIST")
0^3^B4133518
"RTN","XPDIST",1,0)
XPDIST ;SFISC/RSD - site tracking; 6 Mar 95 12:34 ;06/11/97  14:39
"RTN","XPDIST",2,0)
 ;;8.0;KERNEL;**66**;Jul 10, 1995
"RTN","XPDIST",3,0)
 ;Returns ""=failed, XMZ=sent
"RTN","XPDIST",4,0)
 ;D0=ien in file 9.7, Y=address(optional)
"RTN","XPDIST",5,0)
EN(D0,Y) ;send message
"RTN","XPDIST",6,0)
 N %,DIFROM,XPD,XPD0,XPD1,XPDV,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,X,Z
"RTN","XPDIST",7,0)
 ;send to Server on FORUM
"RTN","XPDIST",8,0)
 Q:$G(Y)="" ""
"RTN","XPDIST",9,0)
 S:Y XMY("S.A5CSTS@FORUM.VA.GOV")=""
"RTN","XPDIST",10,0)
 S:$L($P(Y,U,2)) XMY($P(Y,U,2))=""
"RTN","XPDIST",11,0)
 I '$D(^XPD(9.7,$G(D0),0)) D BMES^XPDUTL(" INSTALL file entry missing") Q ""
"RTN","XPDIST",12,0)
 S XPD0=^XPD(9.7,D0,0),XPD1=$G(^(1))
"RTN","XPDIST",13,0)
 I '$P(XPD0,U,2) D BMES^XPDUTL(" No link to PACKAGE file") Q ""
"RTN","XPDIST",14,0)
 S XPD=$P($G(^DIC(9.4,+$P(XPD0,U,2),0)),U),XPDV=$$VER^XPDUTL($P(XPD0,U))
"RTN","XPDIST",15,0)
 I XPD="" D BMES^XPDUTL(" PACKAGE file entry missing") Q ""
"RTN","XPDIST",16,0)
 K ^TMP($J)
"RTN","XPDIST",17,0)
 ;Quit if not VA production primary domain
"RTN","XPDIST",18,0)
 I $G(^XMB("NETNAME"))'[".VA.GOV" D BMES^XPDUTL(" Not a VA primary domain") Q ""
"RTN","XPDIST",19,0)
 X ^%ZOSF("UCI") S %=^%ZOSF("PROD")
"RTN","XPDIST",20,0)
 S:%'["," Y=$P(Y,",")
"RTN","XPDIST",21,0)
 I Y'=% D BMES^XPDUTL(" Not a production UCI") Q ""
"RTN","XPDIST",22,0)
 ;Z=start, Y=completion date/time, X=run time
"RTN","XPDIST",23,0)
 S Z=$P(XPD1,U),Y=$P(XPD1,U,3),X=$$FMDIFF^XLFDT(Y,Z,3),Z=$$FMTE^XLFDT(Z),Y=$$FMTE^XLFDT(Y)
"RTN","XPDIST",24,0)
 ;Message for server
"RTN","XPDIST",25,0)
 S ^TMP($J,1,0)="PACKAGE INSTALL"
"RTN","XPDIST",26,0)
 S ^TMP($J,2,0)="SITE: "_$G(^XMB("NETNAME"))
"RTN","XPDIST",27,0)
 S ^TMP($J,3,0)="PACKAGE: "_XPD
"RTN","XPDIST",28,0)
 S ^TMP($J,4,0)="VERSION: "_XPDV
"RTN","XPDIST",29,0)
 S ^TMP($J,5,0)="Start time: "_Z
"RTN","XPDIST",30,0)
 S ^TMP($J,6,0)="Completion time: "_Y
"RTN","XPDIST",31,0)
 S ^TMP($J,7,0)="Run time: "_X
"RTN","XPDIST",32,0)
 S ^TMP($J,8,0)="DATE: "_DT
"RTN","XPDIST",33,0)
 S ^TMP($J,9,0)="Installed by: "_$P($G(^VA(200,+$P(XPD0,U,11),0)),U)
"RTN","XPDIST",34,0)
 S ^TMP($J,10,0)="Install Name: "_$P(XPD0,U)
"RTN","XPDIST",35,0)
 S XMDUZ=$S($P(XPD0,U,11):+$P(XPD0,U,11),1:.5),XMTEXT="^TMP($J,",XMSUB=$P(XPD0,U)_" INSTALLATION"
"RTN","XPDIST",36,0)
 D ^XMD
"RTN","XPDIST",37,0)
 K ^TMP($J)
"RTN","XPDIST",38,0)
 Q "#"_$G(XMZ)
"RTN","XPDT")
0^4^B57787563
"RTN","XPDT",1,0)
XPDT ;SFISC/RSD - Transport a package; 15 Apr 96 10:15 ;06/27/97  10:08
"RTN","XPDT",2,0)
 ;;8.0;KERNEL;**2,10,28,41,44,51,58,66**;Jul 10, 1995
"RTN","XPDT",3,0)
EN ;build XTMP("XPDT",ien, XPDA=ien,XPDNM=name
"RTN","XPDT",4,0)
 ;XPDT(seq #)=ien^name^1=use current transport global on system
"RTN","XPDT",5,0)
 ;XPDT("DA",ien)=seq #
"RTN","XPDT",6,0)
 ;XPDVER=version number^package name
"RTN","XPDT",7,0)
 ;XPDGP=flag;global^flag;global^...  flag=1 replace global at site
"RTN","XPDT",8,0)
 N DIR,DIRUT,I,POP,XPD,XPDA,XPDERR,XPDGP,XPDGREF,XPDH,XPDH1,XPDHD,XPDI,XPDNM,XPDSEQ,XPDSIZ,XPDSIZA,XPDT,XPDTP,XPDVER,X,Y,Z
"RTN","XPDT",9,0)
 K ^TMP($J,"XPD")
"RTN","XPDT",10,0)
 S XPD="First Package Name: ",DIR(0)="Y",DIR("A")="   Use this Transport Global",DIR("?")="Yes, will use the current Transport Global on your system. No, will create a new one.",XPDT=0
"RTN","XPDT",11,0)
 W !!,"Enter the Package Names to be transported. The order in which",!,"they are entered will be the order in which they are installed.",!!
"RTN","XPDT",12,0)
 F  S XPDA=$$DIC^XPDE("AEMQZ",XPD) Q:'XPDA  D  Q:$D(DIRUT)!$D(XPDERR)
"RTN","XPDT",13,0)
 .S:'XPDT XPD="Another Package Name: "
"RTN","XPDT",14,0)
 .;XPDI=name^1=use current transport global
"RTN","XPDT",15,0)
 .S XPDI=$P(Y(0),U)_"^"
"RTN","XPDT",16,0)
 .I $D(XPDT("DA",XPDA)) W "   ",$P(Y(0),U)," already listed",! Q
"RTN","XPDT",17,0)
 .;if type is Global Package, set DIRUT if there is other packages
"RTN","XPDT",18,0)
 .I $P(Y(0),U,3)=2 W "   GLOBAL PACKAGE" D  Q
"RTN","XPDT",19,0)
 ..;if there is already a package in distribution, abort
"RTN","XPDT",20,0)
 ..I XPDT S DIRUT=1 W !,"A GLOBAL PACKAGE cannot be sent with any other packages" Q
"RTN","XPDT",21,0)
 ..I $D(^XTMP("XPDT",XPDA)) W "  **Cannot have a pre-existing Transport Global**" S DIRUT=1 Q
"RTN","XPDT",22,0)
 ..W !?10,"will transport the following globals:",! S X=0,XPDGP=""
"RTN","XPDT",23,0)
 ..F  S X=$O(^XPD(9.6,XPDA,"GLO",X)) Q:'X  S Z=$G(^(X,0)) I $P(Z,U)]"" S XPDGP=XPDGP_($P(Z,U,2)="y")_";"_$P(Z,U)_"^" W ?12,$P(Z,U),!
"RTN","XPDT",24,0)
 ..;XPDERR is set to quit loop, so no other packages can be added
"RTN","XPDT",25,0)
 ..S XPDERR=1,XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_XPDI,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",26,0)
 .Q:$D(XPDERR)
"RTN","XPDT",27,0)
 .;multi-package
"RTN","XPDT",28,0)
 .I $P(Y(0),U,3)=1 D  Q
"RTN","XPDT",29,0)
 ..W "   (Multi-Package)" S X=0
"RTN","XPDT",30,0)
 ..F  S X=$O(^XPD(9.6,XPDA,10,X)) Q:'X  S Z=$P($G(^(X,0)),U) D:Z]""
"RTN","XPDT",31,0)
 ...N XPDA,X
"RTN","XPDT",32,0)
 ...W !?3,Z S XPDA=$O(^XPD(9.6,"B",Z,0))
"RTN","XPDT",33,0)
 ...I 'XPDA W "  **Can't find definition in Build file**" Q
"RTN","XPDT",34,0)
 ...I $D(XPDT("DA",XPDA)) W "  already listed" Q
"RTN","XPDT",35,0)
 ...S XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_Z_U,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",36,0)
 ...Q:'$D(^XTMP("XPDT",XPDA))  S Y=$G(^(XPDA))
"RTN","XPDT",37,0)
 ...W "   **Transport Global exists**"
"RTN","XPDT",38,0)
 ...;Y=1 if TG is Permanet
"RTN","XPDT",39,0)
 ...I Y S $P(XPDT(XPDT),U,3)=1 Q
"RTN","XPDT",40,0)
 ...D ^DIR S $P(XPDT(XPDT),U,3)=Y
"RTN","XPDT",41,0)
 .S XPDT=XPDT+1,XPDT(XPDT)=XPDA_U_XPDI,XPDT("DA",XPDA)=XPDT
"RTN","XPDT",42,0)
 .I $D(^XTMP("XPDT",XPDA)) W "     **Transport Global exists**" D
"RTN","XPDT",43,0)
 ..;if TG is permanet then quit
"RTN","XPDT",44,0)
 ..I $G(^XTMP("XPDT",XPDA)) S $P(XPDT(XPDT),U,3)=1 Q
"RTN","XPDT",45,0)
 ..;ask if they want to use TG
"RTN","XPDT",46,0)
 ..D ^DIR S $P(XPDT(XPDT),U,3)=Y
"RTN","XPDT",47,0)
 G:'XPDT!$D(DIRUT) QUIT K XPDERR
"RTN","XPDT",48,0)
 W !!,"ORDER   PACKAGE",!
"RTN","XPDT",49,0)
 F XPDT=1:1:XPDT S Y=$P(XPDT(XPDT),U,2) W ?2,XPDT,?7,Y D  W !
"RTN","XPDT",50,0)
 .W:$P(XPDT(XPDT),U,3) "     **will use current Transport Global**"
"RTN","XPDT",51,0)
 S DIR(0)="Y",DIR("A")="OK to continue",DIR("B")="NO",XPDH=""
"RTN","XPDT",52,0)
 W !! D ^DIR G:$D(DIRUT)!'Y QUIT K DIR
"RTN","XPDT",53,0)
 S DIR(0)="SAO^HF:Host File;PM:PackMan",DIR("A")="Transport through (HF)Host File or (PM)PackMan: ",DIR("?")="Enter the method of transport for the package(s)."
"RTN","XPDT",54,0)
 D ^DIR G:$D(DTOUT)!$D(DUOUT) QUIT K DIR
"RTN","XPDT",55,0)
 I Y="" W !,"No Transport Method selected, will only write Transport Global to ^XTMP." S XPDH=""
"RTN","XPDT",56,0)
 ;XPDTP = transports using Packman
"RTN","XPDT",57,0)
 S:Y="PM" XPDTP=1
"RTN","XPDT",58,0)
 I $D(XPDGP),Y'="HF" W !,"**Global Package can only be sent with a Host File, Transport ABORTED**" Q
"RTN","XPDT",59,0)
 I Y="HF" D DEV G:POP QUIT
"RTN","XPDT",60,0)
 I $G(XPDTP),XPDT>1 W !!,"You cannot send multiple Builds through PackMan." G QUIT
"RTN","XPDT",61,0)
 W !!
"RTN","XPDT",62,0)
 F XPDT=1:1:XPDT S XPDA=XPDT(XPDT),XPDNM=$P(XPDA,U,2) D  G:$D(XPDERR) ABORT
"RTN","XPDT",63,0)
 .W !?5,XPDNM,"..." S XPDGREF="^XTMP(""XPDT"","_+XPDA_",""TEMP"")"
"RTN","XPDT",64,0)
 .;if using current transport global, run pre-transp routine and quit
"RTN","XPDT",65,0)
 .I $P(XPDA,U,3) S XPDA=+XPDA D PRET Q
"RTN","XPDT",66,0)
 .;if package file link then set XPDVER=version number^package name
"RTN","XPDT",67,0)
 .S XPDA=+XPDA,XPDVER=$S($P(^XPD(9.6,XPDA,0),U,2):$$VER^XPDUTL(XPDNM)_U_$$PKG^XPDUTL(XPDNM),1:"")
"RTN","XPDT",68,0)
 .K ^XTMP("XPDT",XPDA)
"RTN","XPDT",69,0)
 .;GLOBAL PACKAGE
"RTN","XPDT",70,0)
 .I $D(XPDGP) D  S XPDT=1 Q
"RTN","XPDT",71,0)
 ..;can't send global package in packman message
"RTN","XPDT",72,0)
 ..I $G(XPDTP) S XPDERR=1 Q
"RTN","XPDT",73,0)
 ..;verify global package
"RTN","XPDT",74,0)
 ..I '$$GLOPKG^XPDV(XPDA) S XPDERR=1 Q
"RTN","XPDT",75,0)
 ..;get Environment check and Post Install routines
"RTN","XPDT",76,0)
 ..F Y="PRE","INIT" I $G(^XPD(9.6,XPDA,Y))]"" S X=^(Y) D
"RTN","XPDT",77,0)
 ...S ^XTMP("XPDT",XPDA,Y)=X,X=$P(X,U,$L(X,U)),%=$$LOAD^XPDTA(X,"0^")
"RTN","XPDT",78,0)
 ..D BLD^XPDTC,PRET
"RTN","XPDT",79,0)
 .F X="DD^XPDTC","KRN^XPDTC","QUES^XPDTC","INT^XPDTC","BLD^XPDTC" D @X Q:$D(XPDERR)
"RTN","XPDT",80,0)
 .D:'$D(XPDERR) PRET
"RTN","XPDT",81,0)
 ;XPDTP - call ^XPDTP to build Packman message
"RTN","XPDT",82,0)
 I $G(XPDTP) S XPDA=+XPDT(XPDT) D ^XPDTP G QUIT
"RTN","XPDT",83,0)
 I $L(XPDH) D GO G QUIT
"RTN","XPDT",84,0)
 ;if no device then just create transport global
"RTN","XPDT",85,0)
 W !! F XPDT=1:1:XPDT W "Transport Global ^XTMP(""XPDT"","_+XPDT(XPDT)_") created for ",$P(XPDT(XPDT),U,2),!
"RTN","XPDT",86,0)
 Q
"RTN","XPDT",87,0)
DEV N FIL,DIR,IOP,X,Y,%ZIS W !
"RTN","XPDT",88,0)
 D HOME^%ZIS
"RTN","XPDT",89,0)
 S DIR(0)="F^3:45",DIR("A")="Enter a Host File",DIR("?")="Enter a filename and/or path to output package(s).",POP=0
"RTN","XPDT",90,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S POP=1 Q
"RTN","XPDT",91,0)
 ;if no file, then quit
"RTN","XPDT",92,0)
 Q:Y=""  S FIL=Y
"RTN","XPDT",93,0)
 S DIR(0)="F^3:80",DIR("A")="Header Comment"
"RTN","XPDT",94,0)
 D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDT",95,0)
 S XPDH=Y,%ZIS="",%ZIS("HFSNAME")=FIL,%ZIS("HFSMODE")="W",IOP="HFS",(XPDSIZ,XPDSIZA)=0,XPDSEQ=1
"RTN","XPDT",96,0)
 ;if MSM and HFS file is on device A or B, then get size for floppy disk
"RTN","XPDT",97,0)
 ;XPDSIZ=disk size, XPDSIZA=accummulated size,XPDSEQ=disk sequence number
"RTN","XPDT",98,0)
 I ^%ZOSF("OS")["MSM",FIL?1(1"A",1"B")1":"1.E D  Q:POP
"RTN","XPDT",99,0)
 .S DIR(0)="N^0:5000",DIR("A")="Size of Diskette (1K blocks)",DIR("B")=1400,DIR("?")="Enter the number of 1K blocks which each diskette will hold, 0 means unlimited space"
"RTN","XPDT",100,0)
 .D ^DIR I $D(DIRUT) S POP=1 Q
"RTN","XPDT",101,0)
 .S XPDSIZ=$S(Y:Y*1024,1:0)
"RTN","XPDT",102,0)
 D ^%ZIS I POP W !!,"**Incorrect Host File name**",!,$C(7) Q
"RTN","XPDT",103,0)
 ;write date and comment header
"RTN","XPDT",104,0)
 S XPDHD="KIDS Distribution saved on "_$$HTE^XLFDT($H)
"RTN","XPDT",105,0)
 U IO W $$SUM(XPDHD),!,$$SUM(XPDH),!
"RTN","XPDT",106,0)
 ;U IO(0) is to insure I am writing to the terminal
"RTN","XPDT",107,0)
 U IO(0) Q
"RTN","XPDT",108,0)
 ;
"RTN","XPDT",109,0)
GO S I=1,Y="",XPDH1="**KIDS**:" U IO
"RTN","XPDT",110,0)
 ;Global Package, header is different and there is only 1 package
"RTN","XPDT",111,0)
 I $D(XPDGP) W $$SUM("**KIDS**GLOBALS:"_$P(XPDT(1),U,2)_U_XPDGP),! G GO1
"RTN","XPDT",112,0)
 ;write header that maintains package list, keep less than 255 char
"RTN","XPDT",113,0)
 F  D  W $$SUM(XPDH1_Y),! Q:I=XPDT  S Y="",I=I+1,XPDH1="**KIDS**"
"RTN","XPDT",114,0)
 .F I=I:1 S Y=Y_$P(XPDT(I),U,2)_"^" Q:$L(Y)>200!(I=XPDT)
"RTN","XPDT",115,0)
 ;after the package list write an extra line feed
"RTN","XPDT",116,0)
GO1 W ! S XPDSIZA=XPDSIZA+2
"RTN","XPDT",117,0)
 ;loop thru & write global, don't kill if set to permanent, set in XPDIU
"RTN","XPDT",118,0)
 F XPDT=1:1:XPDT S XPDA=+XPDT(XPDT),XPDNM=$P(XPDT(XPDT),U,2) D GW K:'$G(^XTMP("XPDT",XPDA)) ^(XPDA)
"RTN","XPDT",119,0)
 W "**END**",!
"RTN","XPDT",120,0)
 ;GLOBAL PACKAGE there could only be one package, write globals
"RTN","XPDT",121,0)
 I $D(XPDGP) D GPW W "**END**",!
"RTN","XPDT",122,0)
 ;we're done with device, close it
"RTN","XPDT",123,0)
 W "**END**",! D ^%ZISC
"RTN","XPDT",124,0)
 W !!,"Package Transported Successfully",!
"RTN","XPDT",125,0)
 Q
"RTN","XPDT",126,0)
GW ;global write
"RTN","XPDT",127,0)
 N GR,GCK,GL
"RTN","XPDT",128,0)
 S GCK="^XTMP(""XPDT"","_XPDA,GR=GCK_")",GCK=GCK_",",GL=$L(GCK)
"RTN","XPDT",129,0)
 ;INSTALL NAME line will mark the begining of global for all lines until
"RTN","XPDT",130,0)
 ;the next INSTALL NAME
"RTN","XPDT",131,0)
 W $$SUM("**INSTALL NAME**",1),!,$$SUM(XPDNM),!
"RTN","XPDT",132,0)
 F  Q:$D(DIRUT)  S GR=$Q(@GR) Q:GR=""!($E(GR,1,GL)'=GCK)  W $$SUM($P(GR,GCK,2),1),!,$$SUM(@GR),!
"RTN","XPDT",133,0)
 Q
"RTN","XPDT",134,0)
GPW ;global package write
"RTN","XPDT",135,0)
 N I,G,GR,GCK,GL
"RTN","XPDT",136,0)
 W !
"RTN","XPDT",137,0)
 F I=1:1 S G=$P(XPDGP,U,I) Q:G=""  D
"RTN","XPDT",138,0)
 .S GR="^"_$P(G,";",2),GCK=$S(GR[")":$E(GR,1,$L(GR)-1)_",",1:GR_"("),GL=$L(GCK)
"RTN","XPDT",139,0)
 .;GLOBAL line will mark the begining of global for all lines until
"RTN","XPDT",140,0)
 .;the next GLOBAL
"RTN","XPDT",141,0)
 .W $$SUM("**GLOBAL**",1),!,$$SUM(GR),!
"RTN","XPDT",142,0)
 .F  Q:$D(DIRUT)  S GR=$Q(@GR) Q:GR=""!($E(GR,1,GL)'=GCK)  W $$SUM($P(GR,GCK,2),1),!,$$SUM(@GR),!
"RTN","XPDT",143,0)
 Q
"RTN","XPDT",144,0)
QUIT F XPDT=1:1:XPDT L -^XPD(9.6,+XPDT(XPDT))
"RTN","XPDT",145,0)
 Q
"RTN","XPDT",146,0)
ABORT W !!,"**TRANSPORT ABORTED**",*7
"RTN","XPDT",147,0)
 D QUIT
"RTN","XPDT",148,0)
 F XPDT=1:1:XPDT K ^XTMP("XPDT",+XPDT(XPDT))
"RTN","XPDT",149,0)
 D ^%ZISC
"RTN","XPDT",150,0)
 Q
"RTN","XPDT",151,0)
SUM(X,Z) ;X=string to write, Z 0=don't check size
"RTN","XPDT",152,0)
 S XPDSIZA=XPDSIZA+$L(X)+2
"RTN","XPDT",153,0)
 ;ask for next disk
"RTN","XPDT",154,0)
 ;this code is for MSM system only
"RTN","XPDT",155,0)
 I $G(Z),XPDSIZ,XPDSIZ-XPDSIZA<1024 D
"RTN","XPDT",156,0)
 .;write continue flag at end of this file
"RTN","XPDT",157,0)
 .W "**CONTINUE**",!,"**END**",!
"RTN","XPDT",158,0)
 .;should call %ZIS HFS utilities to close and open file
"RTN","XPDT",159,0)
 .C IO U IO(0)
"RTN","XPDT",160,0)
 .N DIR,G,GR,GCK,GL,I,X,Y
"RTN","XPDT",161,0)
 .W !!,"Diskette #",XPDSEQ," is full."
"RTN","XPDT",162,0)
 .S DIR(0)="E",DIR("A")="Insert the next diskette and Press the return key",DIR("?")="The current diskette is full, insert a new diskette to continue."
"RTN","XPDT",163,0)
 .;$D(DIRUT)=the user aborted the distribution
"RTN","XPDT",164,0)
 .D ^DIR I $D(DIRUT) D ABORT Q
"RTN","XPDT",165,0)
 .W ! S XPDSEQ=XPDSEQ+1,XPDSIZA=0
"RTN","XPDT",166,0)
 .;MSM specific code to open HFS
"RTN","XPDT",167,0)
 .O @(""""_IO_""":"_IOPAR) U IO
"RTN","XPDT",168,0)
 .W $$SUM("Continuation #"_XPDSEQ_" of "_XPDHD),!,$$SUM(XPDH),!,$$SUM("**SEQ**:"_XPDSEQ),!!
"RTN","XPDT",169,0)
 .S XPDSIZA=XPDSIZA+2
"RTN","XPDT",170,0)
 Q X
"RTN","XPDT",171,0)
 ;
"RTN","XPDT",172,0)
PRET ;Pre-Transport Routine
"RTN","XPDT",173,0)
 N Y S Y=$G(^XPD(9.6,XPDA,"PRET")) Q:Y=""
"RTN","XPDT",174,0)
 I '$$RTN^XPDV(Y) W !!,"Pre-Transportation Routine DOESN'T EXIST!!",*7 Q
"RTN","XPDT",175,0)
 S Y=$S(Y["^":Y,1:"^"_Y) W !,"Running Pre-Transportation Routine ",Y
"RTN","XPDT",176,0)
 D @Y Q
"VER")
8.0^21.0
**END**
**END**
