KIDS Distribution saved on Mar 07, 2005@11:23:18
XU*8*325
**KIDS**:XU*8.0*325^

**INSTALL NAME**
XU*8.0*325
"BLD",4850,0)
XU*8.0*325^KERNEL^0^3050307^y
"BLD",4850,4,0)
^9.64PA^^0
"BLD",4850,"KRN",0)
^9.67PA^8989.52^19
"BLD",4850,"KRN",.4,0)
.4
"BLD",4850,"KRN",.401,0)
.401
"BLD",4850,"KRN",.402,0)
.402
"BLD",4850,"KRN",.403,0)
.403
"BLD",4850,"KRN",.5,0)
.5
"BLD",4850,"KRN",.84,0)
.84
"BLD",4850,"KRN",3.6,0)
3.6
"BLD",4850,"KRN",3.8,0)
3.8
"BLD",4850,"KRN",9.2,0)
9.2
"BLD",4850,"KRN",9.8,0)
9.8
"BLD",4850,"KRN",9.8,"NM",0)
^9.68A^3^2
"BLD",4850,"KRN",9.8,"NM",2,0)
XUPSQRY^^0^B35986409
"BLD",4850,"KRN",9.8,"NM",3,0)
XUPSUTL1^^0^B7798985
"BLD",4850,"KRN",9.8,"NM","B","XUPSQRY",2)

"BLD",4850,"KRN",9.8,"NM","B","XUPSUTL1",3)

"BLD",4850,"KRN",19,0)
19
"BLD",4850,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",4850,"KRN",19,"NM",1,0)
XUPS VISTALINK^^0
"BLD",4850,"KRN",19,"NM","B","XUPS VISTALINK",1)

"BLD",4850,"KRN",19.1,0)
19.1
"BLD",4850,"KRN",101,0)
101
"BLD",4850,"KRN",101,"NM",0)
^9.68A^^0
"BLD",4850,"KRN",409.61,0)
409.61
"BLD",4850,"KRN",771,0)
771
"BLD",4850,"KRN",771,"NM",0)
^9.68A^^0
"BLD",4850,"KRN",870,0)
870
"BLD",4850,"KRN",870,"NM",0)
^9.68A^^0
"BLD",4850,"KRN",8989.51,0)
8989.51
"BLD",4850,"KRN",8989.52,0)
8989.52
"BLD",4850,"KRN",8994,0)
8994
"BLD",4850,"KRN",8994,"NM",0)
^9.68A^2^1
"BLD",4850,"KRN",8994,"NM",2,0)
XUPS PERSONQUERY^^0
"BLD",4850,"KRN",8994,"NM","B","XUPS PERSONQUERY",2)

"BLD",4850,"KRN","B",.4,.4)

"BLD",4850,"KRN","B",.401,.401)

"BLD",4850,"KRN","B",.402,.402)

"BLD",4850,"KRN","B",.403,.403)

"BLD",4850,"KRN","B",.5,.5)

"BLD",4850,"KRN","B",.84,.84)

"BLD",4850,"KRN","B",3.6,3.6)

"BLD",4850,"KRN","B",3.8,3.8)

"BLD",4850,"KRN","B",9.2,9.2)

"BLD",4850,"KRN","B",9.8,9.8)

"BLD",4850,"KRN","B",19,19)

"BLD",4850,"KRN","B",19.1,19.1)

"BLD",4850,"KRN","B",101,101)

"BLD",4850,"KRN","B",409.61,409.61)

"BLD",4850,"KRN","B",771,771)

"BLD",4850,"KRN","B",870,870)

"BLD",4850,"KRN","B",8989.51,8989.51)

"BLD",4850,"KRN","B",8989.52,8989.52)

"BLD",4850,"KRN","B",8994,8994)

"BLD",4850,"QUES",0)
^9.62^^
"BLD",4850,"REQB",0)
^9.611^^0
"KRN",19,12789,-1)
0^1
"KRN",19,12789,0)
XUPS VISTALINK^XUPS VISTALINK^^B^^^^^^^^
"KRN",19,12789,99)
59396,36115
"KRN",19,12789,99.1)
59396,46750
"KRN",19,12789,"RPC",0)
^19.05P^2^1
"KRN",19,12789,"RPC",2,0)
XUPS PERSONQUERY
"KRN",19,12789,"U")
XUPS VISTALINK
"KRN",8994,1846,-1)
0^2
"KRN",8994,1846,0)
XUPS PERSONQUERY^EN1^XUPSQRY^4^P^0^^1^1
"KRN",8994,1846,2,0)
^8994.02A^7^7
"KRN",8994,1846,2,1,0)
XUPSLNAM^1^25^1^1
"KRN",8994,1846,2,1,1,0)
^^1^1^3041103^
"KRN",8994,1846,2,1,1,1,0)
Required if lookup by name.
"KRN",8994,1846,2,2,0)
XUPSFNAM^1^15^0^2
"KRN",8994,1846,2,3,0)
XUPSSSN^1^9^0^3
"KRN",8994,1846,2,4,0)
XUPSPROV^1^1^0^4
"KRN",8994,1846,2,5,0)
XUPSSTN^1^6^0^5
"KRN",8994,1846,2,6,0)
XUPSMNM^1^3^0^6
"KRN",8994,1846,2,7,0)
XUPSDATE^1^8^0^7
"KRN",8994,1846,2,8,0)
XUPSVPID^1^^1^1
"KRN",8994,1846,2,8,1,0)
^8994.021^1^1^3041103^^^
"KRN",8994,1846,2,8,1,1,0)
Required if lookup by VPID.
"KRN",8994,1846,2,"B","XUPSDATE",7)

"KRN",8994,1846,2,"B","XUPSFNAM",2)

"KRN",8994,1846,2,"B","XUPSLNAM",1)

"KRN",8994,1846,2,"B","XUPSMNM",6)

"KRN",8994,1846,2,"B","XUPSPROV",4)

"KRN",8994,1846,2,"B","XUPSSSN",3)

"KRN",8994,1846,2,"B","XUPSSTN",5)

"KRN",8994,1846,2,"B","XUPSVPID",8)

"KRN",8994,1846,2,"PARAMSEQ",1,1)

"KRN",8994,1846,2,"PARAMSEQ",1,8)

"KRN",8994,1846,2,"PARAMSEQ",2,1)

"KRN",8994,1846,2,"PARAMSEQ",2,2)

"KRN",8994,1846,2,"PARAMSEQ",3,2)

"KRN",8994,1846,2,"PARAMSEQ",3,3)

"KRN",8994,1846,2,"PARAMSEQ",4,3)

"KRN",8994,1846,2,"PARAMSEQ",4,4)

"KRN",8994,1846,2,"PARAMSEQ",5,4)

"KRN",8994,1846,2,"PARAMSEQ",5,5)

"KRN",8994,1846,2,"PARAMSEQ",6,5)

"KRN",8994,1846,2,"PARAMSEQ",6,6)

"KRN",8994,1846,2,"PARAMSEQ",7,6)

"KRN",8994,1846,2,"PARAMSEQ",7,7)

"KRN",8994,1846,2,"PARAMSEQ",8,7)

"KRN",8994,1846,3,0)
^8994.03^9^9^3041103^^
"KRN",8994,1846,3,1,0)
Output data stored in a global array:
"KRN",8994,1846,3,2,0)
   ^TMP($J,"XUPSQRY",1)= -1 if found, 0 if not found
"KRN",8994,1846,3,3,0)
   ^TMP($J,"XUPSQRY",n,0)= VPID^IEN^Last Name^First Name^
"KRN",8994,1846,3,4,0)
                           Middle Name^SSN^DOB^SEX
"KRN",8994,1846,3,5,0)
   ^TMP($J,"XUPSQRY",n,0)= Provider Type
"KRN",8994,1846,3,6,0)
   ^TMP($J,"XUPSQRY",n,0)= Provider Classification
"KRN",8994,1846,3,7,0)
   ^TMP($J,"XUPSQRY",n,0)= Provider Area of Specialization
"KRN",8994,1846,3,8,0)
   ^TMP($J,"XUPSQRY",n,0)= VA CODE^X12 CODE^Specialty Code^
"KRN",8994,1846,3,9,0)
                           end-of-record character "|"
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",163,-1)
1^1
"PKG",163,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",163,22,0)
^9.49I^1^1
"PKG",163,22,1,0)
8.0^2950703^2951019^1039
"PKG",163,22,1,"PAH",1,0)
325^3050307^11713
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XUPSQRY")
0^2^B35986409
"RTN","XUPSQRY",1,0)
XUPSQRY ;EDS/GRR - Query New Person file ;4/9/04  10:40
"RTN","XUPSQRY",2,0)
 ;;8.0;KERNEL;**325**; Jul 10, 1995
"RTN","XUPSQRY",3,0)
 ;;Input Parameter:
"RTN","XUPSQRY",4,0)
 ;;   XUPSVPID - VPID of the user (Required for lookup by VPID)
"RTN","XUPSQRY",5,0)
 ;;   XUPSLNAM - Part or all of the last name to use for basis
"RTN","XUPSQRY",6,0)
 ;;              of query (Required for lookup by name)
"RTN","XUPSQRY",7,0)
 ;;   XUPSFNAM - Part or all of the first name to use for basis
"RTN","XUPSQRY",8,0)
 ;;              of query filter (optional, can be null)
"RTN","XUPSQRY",9,0)
 ;;   XUPSSSN  - Social Security Number (null or full 9 digits) to
"RTN","XUPSQRY",10,0)
 ;;              use as additional filter for query
"RTN","XUPSQRY",11,0)
 ;;   XUPSPROV - If value set to "P", screen for only providers
"RTN","XUPSQRY",12,0)
 ;;              (only persons with active person class)
"RTN","XUPSQRY",13,0)
 ;;   XUPSSTN  - Filter persons based on station number entered
"RTN","XUPSQRY",14,0)
 ;;              (optional, can be null)
"RTN","XUPSQRY",15,0)
 ;;   XUPSMNM  - Maximum Number of entries to return
"RTN","XUPSQRY",16,0)
 ;;              (Number between 1 and 50.  Null defaults to 50)
"RTN","XUPSQRY",17,0)
 ;;   XUPSDATE - Date to be used to determine whether person has
"RTN","XUPSQRY",18,0)
 ;;              active person class.  If null, current date is used.
"RTN","XUPSQRY",19,0)
 ;;
"RTN","XUPSQRY",20,0)
 ;;Output:
"RTN","XUPSQRY",21,0)
 ;;   RESULT - Name of global array were output data is stored
"RTN","XUPSQRY",22,0)
 ;;            ^TMP($J,"XUPSQRY",1) - 1 if found, 0 if not found
"RTN","XUPSQRY",23,0)
 ;;            ^TMP($J,"XUPSQRY",n,0) - VPID^IEN^Last Name~First Name~
"RTN","XUPSQRY",24,0)
 ;;                                      Middle Name^SSN^DOB^SEX^
"RTN","XUPSQRY",25,0)
 ;;            ^TMP($J,"XUPSQRY",n,1) - Provider Type^
"RTN","XUPSQRY",26,0)
 ;;            ^TMP($J,"XUPSQRY",n,2) - Provider Classification^
"RTN","XUPSQRY",27,0)
 ;;            ^TMP($J,"XUPSQRY",n,3) - Provider Area of Specialization^
"RTN","XUPSQRY",28,0)
 ;;            ^TMP($J,"XUPSQRY",n,4) - VA CODE^X12 CODE^Specialty Code^
"RTN","XUPSQRY",29,0)
 ;;                                      end-of-record character "|"
"RTN","XUPSQRY",30,0)
 ;;
"RTN","XUPSQRY",31,0)
EN1(RESULT,XUPSVPID,XUPSLNAM,XUPSFNAM,XUPSSSN,XUPSPROV,XUPSSTN,XUPSMNM,XUPSDATE) ;
"RTN","XUPSQRY",32,0)
 N %,XUPSNDAT
"RTN","XUPSQRY",33,0)
 K ^TMP($J,"XUPSQRY")
"RTN","XUPSQRY",34,0)
 K RESULT
"RTN","XUPSQRY",35,0)
 S RESULT=$NA(^TMP($J,"XUPSQRY")) ;set variable to name of global array where output data will be stored 
"RTN","XUPSQRY",36,0)
 S ^TMP($J,"XUPSQRY",1)=0 ;initialize to not found
"RTN","XUPSQRY",37,0)
 I $G(XUPSLNAM)="",($G(XUPSVPID)="") Q  ;last name parameter empty, and is required
"RTN","XUPSQRY",38,0)
 S XUPSFNAM=$G(XUPSFNAM)  ;Set to null if missing
"RTN","XUPSQRY",39,0)
 S XUPSSSN=$G(XUPSSSN)  ;Set to null if missing
"RTN","XUPSQRY",40,0)
 S XUPSPROV=$G(XUPSPROV)  ;Set to null if missing
"RTN","XUPSQRY",41,0)
 S XUPSSTN=$G(XUPSSTN)  ;Set to null if missing
"RTN","XUPSQRY",42,0)
 I $G(XUPSDATE)="" S XUPSDATE="" ;set to null if missing
"RTN","XUPSQRY",43,0)
 D NOW^%DTC S XUPSNDAT=%\1 ;set date to today and truncate time
"RTN","XUPSQRY",44,0)
 S XUPSDATE=$S(XUPSDATE="":XUPSNDAT,1:$$FMDATE^HLFNC(XUPSDATE)) ;change date from hl7 format to fileman format
"RTN","XUPSQRY",45,0)
 N XUPSCNT,XUPSNAME,XUPSIEN,XUPSDOB,XUPSSEX,XUPSPC,XUPSX12,XUPSPASS ;initialize new set of variables
"RTN","XUPSQRY",46,0)
 S:$G(XUPSMNM)="" XUPSMNM=50 ;set to default
"RTN","XUPSQRY",47,0)
 S XUPSCNT=0 ;Initialize variable
"RTN","XUPSQRY",48,0)
 ;
"RTN","XUPSQRY",49,0)
 ;Lookup by VPID
"RTN","XUPSQRY",50,0)
 I $G(XUPSVPID)'="" D  Q
"RTN","XUPSQRY",51,0)
 .S XUPSIEN=$$IEN^XUPS(XUPSVPID)
"RTN","XUPSQRY",52,0)
 .I +XUPSIEN>0 D
"RTN","XUPSQRY",53,0)
 ..D FILTER
"RTN","XUPSQRY",54,0)
 ..Q:XUPSPASS=0
"RTN","XUPSQRY",55,0)
 ..S XUPSCNT=XUPSCNT+1
"RTN","XUPSQRY",56,0)
 ..D FOUND(XUPSCNT,XUPSIEN,XUPSDATE) ;set array with person data
"RTN","XUPSQRY",57,0)
 ;
"RTN","XUPSQRY",58,0)
 S XUPSIEN=0,XUPSNAME=XUPSLNAM ;initialize variables
"RTN","XUPSQRY",59,0)
 ;;
"RTN","XUPSQRY",60,0)
 ;;Loop through the Name index, quit if name is null or beginning portion of name not equal parameter passed or maximum number of entries reached
"RTN","XUPSQRY",61,0)
 ;;
"RTN","XUPSQRY",62,0)
 F  S XUPSNAME=$O(^VA(200,"B",XUPSNAME)) Q:XUPSNAME=""!($E(XUPSNAME,1,$L(XUPSLNAM))'[XUPSLNAM)!(XUPSCNT+1>XUPSMNM)  S XUPSIEN=0 F  S XUPSIEN=$O(^VA(200,"B",XUPSNAME,XUPSIEN)) Q:XUPSIEN=""  D
"RTN","XUPSQRY",63,0)
 .D FILTER
"RTN","XUPSQRY",64,0)
 .Q:XUPSPASS=0
"RTN","XUPSQRY",65,0)
 .S XUPSCNT=XUPSCNT+1
"RTN","XUPSQRY",66,0)
 .D FOUND(XUPSCNT,XUPSIEN,XUPSDATE) ;set array with person data
"RTN","XUPSQRY",67,0)
 Q
"RTN","XUPSQRY",68,0)
FILTER ;
"RTN","XUPSQRY",69,0)
 S XUPSPASS=1 ;initialize found flag to found
"RTN","XUPSQRY",70,0)
 I '$$ACTIVE^XUSER(XUPSIEN),($O(^VA(200,XUPSIEN,8910,0))>0) S XUPSPASS=0 Q  ;skip visitors
"RTN","XUPSQRY",71,0)
 I XUPSFNAM]"" S XUPSPASS=$$NMATCH^XUPSUTL1(XUPSIEN,XUPSFNAM) ;check if matches name filter
"RTN","XUPSQRY",72,0)
 Q:'XUPSPASS  ;failed to match
"RTN","XUPSQRY",73,0)
 I XUPSSSN]"",($P($G(^VA(200,XUPSIEN,1)),"^",9)'=XUPSSSN) S XUPSPASS=0 Q  ;check ssn filter
"RTN","XUPSQRY",74,0)
 I XUPSSTN]"" S XUPSPASS=$$STNMAT^XUPSUTL1(XUPSIEN,XUPSSTN) ;check station number
"RTN","XUPSQRY",75,0)
 Q:'XUPSPASS  ;failed match
"RTN","XUPSQRY",76,0)
 I XUPSPROV]"",($$GET^XUA4A72(XUPSIEN,XUPSDATE)<0) S XUPSPASS=0 Q  ;check if active person class
"RTN","XUPSQRY",77,0)
 Q
"RTN","XUPSQRY",78,0)
FOUND(XUPSCNT,XUPSIEN,XUPSDATE) ;format output array
"RTN","XUPSQRY",79,0)
 N XUPSNAME,XUPSSSN,XUPSVPID,XUPSSEX,XUPSDOB,I,Y
"RTN","XUPSQRY",80,0)
 S Y=$P(^VA(200,XUPSIEN,0),"^",1) ;get full name
"RTN","XUPSQRY",81,0)
 S XUPSNAME=$$HLNAME^HLFNC(Y,"~|\/") ;format name into last name~first name~middle name
"RTN","XUPSQRY",82,0)
 I $L(XUPSNAME,"~")<3 S $P(XUPSNAME,"~",3)="" ;make sure formatted name has all 3 pieces
"RTN","XUPSQRY",83,0)
 S Y=$G(^VA(200,XUPSIEN,1)) ;get ssn,dob,sex
"RTN","XUPSQRY",84,0)
 S XUPSSSN=$P(Y,"^",9) ;ssn
"RTN","XUPSQRY",85,0)
 S XUPSVPID=$P($G(^VA(200,XUPSIEN,"VPID")),"^",1)
"RTN","XUPSQRY",86,0)
 S XUPSSEX=$P(Y,"^",2) ;sex
"RTN","XUPSQRY",87,0)
 S XUPSDOB=$P(Y,"^",3) ;dob fileman format
"RTN","XUPSQRY",88,0)
 I XUPSDOB]"" S XUPSDOB=$$HLDATE^HLFNC(XUPSDOB,"DT") ;format dob to correct hl7 format yyyymmdd
"RTN","XUPSQRY",89,0)
 S ^TMP($J,"XUPSQRY",1)=1 ;set to indicate match found
"RTN","XUPSQRY",90,0)
 S ^TMP($J,"XUPSQRY",XUPSCNT,0)=XUPSVPID_"^"_XUPSIEN_"^"_XUPSNAME_"^"_XUPSSSN_"^"_XUPSDOB_"^"_XUPSSEX_"^"
"RTN","XUPSQRY",91,0)
 S XUPSPC=$$GET^XUA4A72(XUPSIEN,XUPSDATE) ;get active person class data
"RTN","XUPSQRY",92,0)
 S:XUPSPC<0 XUPSPC="" ;no active person class
"RTN","XUPSQRY",93,0)
 F I=1:1:3 S ^TMP($J,"XUPSQRY",XUPSCNT,I)=$P(XUPSPC,"^",(1+I))_"^" ;put provider type, provider class, and are of specialization in output array
"RTN","XUPSQRY",94,0)
 S XUPSX12=$S(XUPSPC="":"",1:$P(^USC(8932.1,+XUPSPC,0),"^",7)) ;get x12 code which is not returned by api
"RTN","XUPSQRY",95,0)
 S ^TMP($J,"XUPSQRY",XUPSCNT,4)=$P(XUPSPC,"^",7)_"^"_XUPSX12_"^"_$P(XUPSPC,"^",8)_"^|" ;put va code, x12 code, specialty code, and end-of-record character in output array
"RTN","XUPSQRY",96,0)
 Q
"RTN","XUPSUTL1")
0^3^B7798985
"RTN","XUPSUTL1",1,0)
XUPSUTL1 ;EDS/GRR - Person Service Utility Routine ;4/9/04  10:08
"RTN","XUPSUTL1",2,0)
 ;;8.0;KERNEL;**325**; Jul 10, 1995
"RTN","XUPSUTL1",3,0)
 ;;
"RTN","XUPSUTL1",4,0)
NMATCH(XUPSIEN,XUPSFNAM) ;
"RTN","XUPSUTL1",5,0)
 ;;Match on First Name
"RTN","XUPSUTL1",6,0)
 ;;Input Parameters:
"RTN","XUPSUTL1",7,0)
 ;;      XUPSIEN - Internal Entry Number of New Person entry
"RTN","XUPSUTL1",8,0)
 ;;     XUPSFNAM - Part or all of Person first name
"RTN","XUPSUTL1",9,0)
 ;;Output:
"RTN","XUPSUTL1",10,0)
 ;;      XUPSOUT - 1 if name matched, 0 if name did not match
"RTN","XUPSUTL1",11,0)
 N XUPSA,XUPSHFN,XUPSFN,XUPSNFN,XUPSOUT ;establish new variables
"RTN","XUPSUTL1",12,0)
 S XUPSFN=$P($G(^VA(200,XUPSIEN,0)),"^",1) ;get full name
"RTN","XUPSUTL1",13,0)
 S XUPSHFN=$$HLNAME^HLFNC(XUPSFN,"~|\/") ;change to HL7 format (last name~first name~middle name)
"RTN","XUPSUTL1",14,0)
 S XUPSNFN=$P(XUPSHFN,"~",2) ;get first name
"RTN","XUPSUTL1",15,0)
 S XUPSOUT=$S($E(XUPSNFN,1,$L(XUPSFNAM))[XUPSFNAM:1,1:0) ; match first name to first name passed
"RTN","XUPSUTL1",16,0)
 Q XUPSOUT  ;return 1 if name matched, 0 if no match
"RTN","XUPSUTL1",17,0)
 ;
"RTN","XUPSUTL1",18,0)
STNMAT(XUPSIEN,XUPSSTN) ;
"RTN","XUPSUTL1",19,0)
 ;;Station Number matching
"RTN","XUPSUTL1",20,0)
 ;;Input Parameters:
"RTN","XUPSUTL1",21,0)
 ;;     XUPSIEN - Internal Entry Number of New Person entry
"RTN","XUPSUTL1",22,0)
 ;;     XUPSSTN - 3-6 character station number to use as screen
"RTN","XUPSUTL1",23,0)
 ;;               (i.e. 603 or 528A4)
"RTN","XUPSUTL1",24,0)
 ;;Output:
"RTN","XUPSUTL1",25,0)
 ;;       XUPSOUT - 1 if station matched, 0 if no station match
"RTN","XUPSUTL1",26,0)
 N XUPSOUT,XUPSDIV,%,A,VASITE,XUPSNDT ;establish new variables
"RTN","XUPSUTL1",27,0)
 S XUPSDIV=0,XUPSOUT=0 ;initialize new variables
"RTN","XUPSUTL1",28,0)
 D NOW^%DTC S XUPSNDT=%\1 ;get current date
"RTN","XUPSUTL1",29,0)
 I '$O(^VA(200,XUPSIEN,2,0)) S A=$$ALL^VASITE(XUPSNDT) G STNQ:'$D(VASITE(XUPSSTN)) S XUPSOUT=1 G STNQ ;if user has no division assigned, get default division and check for match
"RTN","XUPSUTL1",30,0)
 F  S XUPSDIV=$O(^VA(200,XUPSIEN,2,XUPSDIV)) Q:XUPSDIV'>0  I $P($G(^DIC(4,XUPSDIV,99)),"^",1)=XUPSSTN S XUPSOUT=1 Q  ;loop through all divisions assigned and check for match
"RTN","XUPSUTL1",31,0)
STNQ Q XUPSOUT  ;return 1 if match, o if no match
"RTN","XUPSUTL1",32,0)
 ;
"VER")
8.0^22.0
**END**
**END**
