Released IB*2*367 SEQ #336
Extracted from mail message
**KIDS**:IB*2.0*367^

**INSTALL NAME**
IB*2.0*367
"BLD",7197,0)
IB*2.0*367^INTEGRATED BILLING^0^3070607^y
"BLD",7197,1,0)
^^4^4^3070501^
"BLD",7197,1,1,0)
This patch adds and modifies Stop Codes to the IB CLINIC STOP CODE
"BLD",7197,1,2,0)
BILLABLE TYPES (#352.5) file, fixes a SUBSCRIPT error in the
"BLD",7197,1,3,0)
Electronic Error Report and fixes problems in billing where the RX
"BLD",7197,1,4,0)
COPAY status is incorrectly flipping from NON-EXEMPT to EXEMPT.
"BLD",7197,4,0)
^9.64PA^^
"BLD",7197,6.3)
11
"BLD",7197,"INI")
EN^IB20P367
"BLD",7197,"INID")
^^n
"BLD",7197,"KRN",0)
^9.67PA^8989.52^19
"BLD",7197,"KRN",.4,0)
.4
"BLD",7197,"KRN",.401,0)
.401
"BLD",7197,"KRN",.402,0)
.402
"BLD",7197,"KRN",.403,0)
.403
"BLD",7197,"KRN",.5,0)
.5
"BLD",7197,"KRN",.84,0)
.84
"BLD",7197,"KRN",3.6,0)
3.6
"BLD",7197,"KRN",3.8,0)
3.8
"BLD",7197,"KRN",9.2,0)
9.2
"BLD",7197,"KRN",9.8,0)
9.8
"BLD",7197,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",7197,"KRN",9.8,"NM",1,0)
IB20P367^^0^B15710350
"BLD",7197,"KRN",9.8,"NM",2,0)
IBCERP2^^0^B56071324
"BLD",7197,"KRN",9.8,"NM",3,0)
IBARXEU1^^0^B17664186
"BLD",7197,"KRN",9.8,"NM","B","IB20P367",1)

"BLD",7197,"KRN",9.8,"NM","B","IBARXEU1",3)

"BLD",7197,"KRN",9.8,"NM","B","IBCERP2",2)

"BLD",7197,"KRN",19,0)
19
"BLD",7197,"KRN",19.1,0)
19.1
"BLD",7197,"KRN",101,0)
101
"BLD",7197,"KRN",409.61,0)
409.61
"BLD",7197,"KRN",771,0)
771
"BLD",7197,"KRN",870,0)
870
"BLD",7197,"KRN",8989.51,0)
8989.51
"BLD",7197,"KRN",8989.52,0)
8989.52
"BLD",7197,"KRN",8994,0)
8994
"BLD",7197,"KRN","B",.4,.4)

"BLD",7197,"KRN","B",.401,.401)

"BLD",7197,"KRN","B",.402,.402)

"BLD",7197,"KRN","B",.403,.403)

"BLD",7197,"KRN","B",.5,.5)

"BLD",7197,"KRN","B",.84,.84)

"BLD",7197,"KRN","B",3.6,3.6)

"BLD",7197,"KRN","B",3.8,3.8)

"BLD",7197,"KRN","B",9.2,9.2)

"BLD",7197,"KRN","B",9.8,9.8)

"BLD",7197,"KRN","B",19,19)

"BLD",7197,"KRN","B",19.1,19.1)

"BLD",7197,"KRN","B",101,101)

"BLD",7197,"KRN","B",409.61,409.61)

"BLD",7197,"KRN","B",771,771)

"BLD",7197,"KRN","B",870,870)

"BLD",7197,"KRN","B",8989.51,8989.51)

"BLD",7197,"KRN","B",8989.52,8989.52)

"BLD",7197,"KRN","B",8994,8994)

"BLD",7197,"QUES",0)
^9.62^^
"BLD",7197,"REQB",0)
^9.611^2^2
"BLD",7197,"REQB",1,0)
IB*2.0*137^1
"BLD",7197,"REQB",2,0)
IB*2.0*275^1
"BLD",7197,"REQB","B","IB*2.0*137",1)

"BLD",7197,"REQB","B","IB*2.0*275",2)

"INI")
EN^IB20P367
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
367^3070607
"PKG",200,22,1,"PAH",1,1,0)
^^4^4^3070607
"PKG",200,22,1,"PAH",1,1,1,0)
This patch adds and modifies Stop Codes to the IB CLINIC STOP CODE
"PKG",200,22,1,"PAH",1,1,2,0)
BILLABLE TYPES (#352.5) file, fixes a SUBSCRIPT error in the
"PKG",200,22,1,"PAH",1,1,3,0)
Electronic Error Report and fixes problems in billing where the RX
"PKG",200,22,1,"PAH",1,1,4,0)
COPAY status is incorrectly flipping from NON-EXEMPT to EXEMPT.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","IB20P367")
0^1^B15710350^n/a
"RTN","IB20P367",1,0)
IB20P367 ;DAY/RRA - DSS CLINIC STOP CODES IB*2.0*367 PRE-INIT ; 3/13/07 12:55pm
"RTN","IB20P367",2,0)
 ;;2.0;INTEGRATED BILLING;**367**;21-MAR-94;Build 11
"RTN","IB20P367",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IB20P367",4,0)
 ;
"RTN","IB20P367",5,0)
EN ;
"RTN","IB20P367",6,0)
 N IBEFFDT,U
"RTN","IB20P367",7,0)
 S U="^",IBEFFDT=3041001 ;effective date OCT 1st, 2004 
"RTN","IB20P367",8,0)
 D START,ADD(IBEFFDT),UPDATE(IBEFFDT),FINISH
"RTN","IB20P367",9,0)
 Q
"RTN","IB20P367",10,0)
 ;
"RTN","IB20P367",11,0)
START D BMES^XPDUTL("DSS Clinic Stop Codes, Post-Install Starting")
"RTN","IB20P367",12,0)
 Q
"RTN","IB20P367",13,0)
 ;
"RTN","IB20P367",14,0)
FINISH D BMES^XPDUTL("DSS Clinic Stop Codes, Post-Install Complete")
"RTN","IB20P367",15,0)
 Q
"RTN","IB20P367",16,0)
 ;
"RTN","IB20P367",17,0)
 ;
"RTN","IB20P367",18,0)
ADD(IBEFFDT) ;
"RTN","IB20P367",19,0)
 ;add a new code
"RTN","IB20P367",20,0)
 N Y,IBC,IBT,IBX,IBY,IBCODE,IBTYPE,IBDES,IBOVER
"RTN","IB20P367",21,0)
 D BMES^XPDUTL(" Adding new codes to file 352.5")
"RTN","IB20P367",22,0)
 S IBC=0
"RTN","IB20P367",23,0)
 F IBX=1:1 S IBT=$P($T(NCODE+IBX),";",3) Q:'$L(IBT)  D
"RTN","IB20P367",24,0)
 . S IBCODE=+$P(IBT,U)
"RTN","IB20P367",25,0)
 . S IBY=$S(IBCODE=130:3070308,IBCODE=131:3070308,IBCODE=352:3070308,1:IBEFFDT)
"RTN","IB20P367",26,0)
 . I $D(^IBE(352.5,"AEFFDT",IBCODE,-IBY)) D  Q
"RTN","IB20P367",27,0)
 . . D BMES^XPDUTL(" Duplication of stop code "_IBCODE)
"RTN","IB20P367",28,0)
 . S IBTYPE=$P(IBT,U,2)
"RTN","IB20P367",29,0)
 . S IBDES=$E($P(IBT,U,3),1,30)
"RTN","IB20P367",30,0)
 . S IBOVER=$P(IBT,U,4)
"RTN","IB20P367",31,0)
 . S Y=+$$ADD3525(IBCODE,IBY,IBTYPE,IBDES,IBOVER) S:Y>0 IBC=IBC+1
"RTN","IB20P367",32,0)
 D BMES^XPDUTL("     "_IBC_$S(IBC<2:" entry",1:" entries")_" added to 352.5")
"RTN","IB20P367",33,0)
 Q
"RTN","IB20P367",34,0)
 ;
"RTN","IB20P367",35,0)
UPDATE(IBEFFDT) ;
"RTN","IB20P367",36,0)
 ;update an old code
"RTN","IB20P367",37,0)
 N Y,IB1,IBC,IBT,IBX,IBCODE,IBMSG,IBTYPE,IBDES,IBOVER,IBLSTDT
"RTN","IB20P367",38,0)
 S (IBC,IBMSG(1),IBMSG(2),IBMSG(3))=0
"RTN","IB20P367",39,0)
 F IBX=1:1 S IBT=$P($T(OCODE+IBX),";",3) Q:'$L(IBT)  D
"RTN","IB20P367",40,0)
 . S IBCODE=+$P(IBT,U)
"RTN","IB20P367",41,0)
 . S IBY=$S(IBCODE=528:3070308,IBCODE=681:3070308,1:IBEFFDT)
"RTN","IB20P367",42,0)
 . I $D(^IBE(352.5,"AEFFDT",IBCODE,-IBY)) D  Q 
"RTN","IB20P367",43,0)
 . . D BMES^XPDUTL(" Duplication of stop code "_IBCODE)
"RTN","IB20P367",44,0)
 . S IBLSTDT=$O(^IBE(352.5,"AEFFDT",IBCODE,-9999999))
"RTN","IB20P367",45,0)
 . I +IBLSTDT=0 D  Q
"RTN","IB20P367",46,0)
 . . D BMES^XPDUTL(" Code "_IBCODE_" not found in file 352.5")
"RTN","IB20P367",47,0)
 . S IB1=$O(^IBE(352.5,"AEFFDT",IBCODE,IBLSTDT,0))
"RTN","IB20P367",48,0)
 . S IB1=$G(^IBE(352.5,IB1,0))
"RTN","IB20P367",49,0)
 . S IBTYPE=$S($P(IBT,U,2):$P(IBT,U,2),1:$P(IB1,U,3))
"RTN","IB20P367",50,0)
 . S IBDES=$S($P(IBT,U,3)'="":$E($P(IBT,U,3),1,30),1:$P(IB1,U,4))
"RTN","IB20P367",51,0)
 . S IBOVER=$S($P(IBT,U,4)'="":$P(IBT,U,4),1:$P(IB1,U,5))
"RTN","IB20P367",52,0)
 . I $P(IBT,U,2) D
"RTN","IB20P367",53,0)
 . . I 'IBMSG(1) D BMES^XPDUTL(" Updating billable type in file 352.5") S IBMSG(1)=1
"RTN","IB20P367",54,0)
 . I $P(IBT,U,3)'="" D
"RTN","IB20P367",55,0)
 . . I 'IBMSG(2),$P(IBT,U,3)'="" D BMES^XPDUTL(" Updating description in file 352.5") S IBMSG(2)=1
"RTN","IB20P367",56,0)
 . I '$P(IBT,U,2),$P(IBT,U,3)="" D
"RTN","IB20P367",57,0)
 . . I 'IBMSG(3) D BMES^XPDUTL(" Updating effective date in file 352.5") S IBMSG(3)=1
"RTN","IB20P367",58,0)
 . S Y=+$$ADD3525(IBCODE,IBY,IBTYPE,IBDES,IBOVER) S:Y>0 IBC=IBC+1
"RTN","IB20P367",59,0)
 D BMES^XPDUTL("     "_IBC_$S(IBC<2:" update",1:" updates")_" added to file 352.5")
"RTN","IB20P367",60,0)
 Q
"RTN","IB20P367",61,0)
 ;
"RTN","IB20P367",62,0)
ADD3525(IBCODE,IBEFFDT,IBTYPE,IBDES,IBOVER) ;
"RTN","IB20P367",63,0)
 ;add a new entry
"RTN","IB20P367",64,0)
 D BMES^XPDUTL("   "_IBCODE_"  "_IBDES)
"RTN","IB20P367",65,0)
 N IBIENS,IBFDA,IBER,IBRET
"RTN","IB20P367",66,0)
 S IBRET=""
"RTN","IB20P367",67,0)
 S IBIENS="+1,"
"RTN","IB20P367",68,0)
 S IBFDA(352.5,IBIENS,.01)=IBCODE
"RTN","IB20P367",69,0)
 S IBFDA(352.5,IBIENS,.02)=IBEFFDT
"RTN","IB20P367",70,0)
 S IBFDA(352.5,IBIENS,.03)=IBTYPE
"RTN","IB20P367",71,0)
 S IBFDA(352.5,IBIENS,.04)=IBDES
"RTN","IB20P367",72,0)
 S:IBOVER IBFDA(352.5,IBIENS,.05)=1
"RTN","IB20P367",73,0)
 D UPDATE^DIE("","IBFDA","IBRET","IBER")
"RTN","IB20P367",74,0)
 I $D(IBER) D BMES^XPDUTL(IBER("DIERR",1,"TEXT",1))
"RTN","IB20P367",75,0)
 Q $G(IBRET(1))
"RTN","IB20P367",76,0)
 ;
"RTN","IB20P367",77,0)
 ;new non-billable type data
"RTN","IB20P367",78,0)
NCODE ;;code^billable type^description^override flag
"RTN","IB20P367",79,0)
 ;;130^2^EMERGENCY DEPT
"RTN","IB20P367",80,0)
 ;;131^1^URGENT CARE UNIT
"RTN","IB20P367",81,0)
 ;;222^0^PM&RS CWT/SE FACE TO FACE^1
"RTN","IB20P367",82,0)
 ;;223^0^PM&RS CWT/SE NON FACE TO FACE^1
"RTN","IB20P367",83,0)
 ;;228^0^PM&RS CWT/TWE NON FACE TO FACE^1
"RTN","IB20P367",84,0)
 ;;336^0^MED PRE-PROC EVAL^1
"RTN","IB20P367",85,0)
 ;;352^2^GRECC CLINICAL DEMO
"RTN","IB20P367",86,0)
 ;;568^0^MH CWT/SE FACE TO FACE^1
"RTN","IB20P367",87,0)
 ;;569^0^MH CWT/SE NON FACE TO FACE^1
"RTN","IB20P367",88,0)
 ;;570^0^MH CWT/TWE NON FACE TO FACE^1
"RTN","IB20P367",89,0)
 ;;643^0^SND-OUT PROC - RADIOLOGY^1
"RTN","IB20P367",90,0)
 ;;658^0^STATE HOME ADULT DAY HC^1
"RTN","IB20P367",91,0)
 ;
"RTN","IB20P367",92,0)
 ; ;codes update
"RTN","IB20P367",93,0)
OCODE ;;code^billable type^description^override flag
"RTN","IB20P367",94,0)
 ;;528^^TELEPHONE HCMI
"RTN","IB20P367",95,0)
 ;;681^^VA-PAID HCBC PROVIDERS
"RTN","IB20P367",96,0)
 ;
"RTN","IBARXEU1")
0^3^B17664186^B13926560
"RTN","IBARXEU1",1,0)
IBARXEU1 ;AAS/ALB - RX EXEMPTION UTILITY ROUTINE (CONT.) ; 3/27/07 3:10pm
"RTN","IBARXEU1",2,0)
 ;;2.0;INTEGRATED BILLING;**26,112,74,275,367**;21-MAR-94;Build 11
"RTN","IBARXEU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBARXEU1",4,0)
 ;
"RTN","IBARXEU1",5,0)
STATUS(DFN,IBDT) ; -- Determine medication copayment exemption status
"RTN","IBARXEU1",6,0)
 ; -- requests data from MAS
"RTN","IBARXEU1",7,0)
 ;
"RTN","IBARXEU1",8,0)
 ;    returns :        = exemption reason (pointer to 354.2) ^ date
"RTN","IBARXEU1",9,0)
 ;
"RTN","IBARXEU1",10,0)
 N X,Y
"RTN","IBARXEU1",11,0)
 I $G(IBDT)="" S IBDT=DT
"RTN","IBARXEU1",12,0)
 S X=$$AUTOST(DFN,IBDT)
"RTN","IBARXEU1",13,0)
 I X'="" G STATUSQ
"RTN","IBARXEU1",14,0)
 S X=$$INCST(DFN,IBDT)
"RTN","IBARXEU1",15,0)
STATUSQ Q X
"RTN","IBARXEU1",16,0)
 ;
"RTN","IBARXEU1",17,0)
AUTOST(DFN,IBDT) ; -- Determine automatically exempt patients.
"RTN","IBARXEU1",18,0)
 ;    input :     dfn  =  patient file pointer
"RTN","IBARXEU1",19,0)
 ;               ibdt  =  internal form of effective date
"RTN","IBARXEU1",20,0)
 ;
"RTN","IBARXEU1",21,0)
 ;    returns :        =  exemption reason (pointer to 354.2) ^ date
"RTN","IBARXEU1",22,0)
 ;                        null if no autostatus
"RTN","IBARXEU1",23,0)
 ;
"RTN","IBARXEU1",24,0)
 N IBEXREA,IBEXMT,I
"RTN","IBARXEU1",25,0)
 S (IBEXREA,IBEXMT)=""
"RTN","IBARXEU1",26,0)
 I $G(IBDT)="" S IBDT=DT
"RTN","IBARXEU1",27,0)
 ;
"RTN","IBARXEU1",28,0)
 ; -- ask mas if in receipt of pension/a&a/hb, etc.
"RTN","IBARXEU1",29,0)
 ;    the automatic determinations
"RTN","IBARXEU1",30,0)
 ;    returns:
"RTN","IBARXEU1",31,0)
 ; sc>50% ^ rec a&a ^ rec hb ^ rec pen ^ n/a ^ non-vet ^ ^ POW ^ Unempl. 
"RTN","IBARXEU1",32,0)
 ;   1         1        1         1                1        1      1
"RTN","IBARXEU1",33,0)
 ;    pieces =1 if true
"RTN","IBARXEU1",34,0)
 S IBEXMT=$$AUTOINFO^DGMTCOU1(DFN) I IBEXMT="" G AUTOSTQ
"RTN","IBARXEU1",35,0)
 I IBEXMT[1 F I=1,2,3,4,6,8,9 I $P(IBEXMT,"^",I)=1 S IBEXREA=I*10 Q  ;lookup code is piece position time 10
"RTN","IBARXEU1",36,0)
 ;
"RTN","IBARXEU1",37,0)
AUTOSTQ I IBEXREA="" Q IBEXREA
"RTN","IBARXEU1",38,0)
 Q $O(^IBE(354.2,"ACODE",+IBEXREA,0))_"^"_IBDT
"RTN","IBARXEU1",39,0)
 ;
"RTN","IBARXEU1",40,0)
 ;
"RTN","IBARXEU1",41,0)
INCST(DFN,IBDT) ; -- return medication copayment exemption reason/date
"RTN","IBARXEU1",42,0)
 ; -- ask mas for income data
"RTN","IBARXEU1",43,0)
 ;
"RTN","IBARXEU1",44,0)
 ;    returns :  = exemption reason (pointer to 354.2) ^ date
"RTN","IBARXEU1",45,0)
 ;
"RTN","IBARXEU1",46,0)
 N IBDATA,X,DGMT,CLN,CONV
"RTN","IBARXEU1",47,0)
 S IBDATA=$G(^DGMT(408.31,+$$LST^DGMTCOU1(DFN,IBDT,3),0)) ;get any test
"RTN","IBARXEU1",48,0)
 I $$PLUS^IBARXEU0(+IBDATA)<IBDT S X=$O(^IBE(354.2,"ACODE",210,0))_"^"_IBDT G INCSTQ ; means test too old -no data
"RTN","IBARXEU1",49,0)
 I $P(IBDATA,U,23)=2 D  G:CONV INCSTQ ;skip Edb conv. tests
"RTN","IBARXEU1",50,0)
 .;Loop through the MT comments, Check for EDB converted test
"RTN","IBARXEU1",51,0)
 .;No comments to check
"RTN","IBARXEU1",52,0)
 .S (CLN,CONV)=0,DGMT=$$LST^DGMTCOU1(DFN,IBDT,3)
"RTN","IBARXEU1",53,0)
 .F  S CLN=$O(^DGMT(408.31,+DGMT,"C",CLN)) Q:'CLN!(CONV)  D
"RTN","IBARXEU1",54,0)
 ..;If most recent test is a converted test use current info from IBA(354
"RTN","IBARXEU1",55,0)
 ..I $G(^DGMT(408.31,+DGMT,"C",CLN,0))["Z06 MT via Edb" S CONV=1,X=$P($G(^IBA(354,DFN,0)),"^",5)_"^"_$P($G(^IBA(354,DFN,0)),"^",3)
"RTN","IBARXEU1",56,0)
 ;
"RTN","IBARXEU1",57,0)
 I $$NETW^IBARXEU1 S X=$$MTCOMP^IBARXEU5($$INCDT(IBDATA),IBDATA)
"RTN","IBARXEU1",58,0)
 I '$$NETW^IBARXEU1 S X=$$INCDT(IBDATA),X=$P(X,"^",3)_"^"_$P(X,"^",2)
"RTN","IBARXEU1",59,0)
INCSTQ Q X
"RTN","IBARXEU1",60,0)
 ;
"RTN","IBARXEU1",61,0)
INCDT(IBDATA) ; -- calcualtes copay exemption status based on income
"RTN","IBARXEU1",62,0)
 ; and net worth
"RTN","IBARXEU1",63,0)
 ;    input  := zeroth node from 408.31
"RTN","IBARXEU1",64,0)
 ;    output := 1 = exempt    ^date of test^ exemption reason 
"RTN","IBARXEU1",65,0)
 ;              2 = non-exempt^...
"RTN","IBARXEU1",66,0)
 ;              3 = pending adjudication (if active)^...
"RTN","IBARXEU1",67,0)
 ;
"RTN","IBARXEU1",68,0)
 N X,IBDT,IBINCOM,IBEXREA,IBDEPEN,IBNETW,IBTABLE,IBLEVEL,IBTHRES
"RTN","IBARXEU1",69,0)
 I '$D(DFN) N DFN S DFN=$P(IBDATA,"^",2)
"RTN","IBARXEU1",70,0)
 S IBEXREA=""
"RTN","IBARXEU1",71,0)
 ;
"RTN","IBARXEU1",72,0)
 ; -- if test incomplete, no longer required, no longer applicable, or
"RTN","IBARXEU1",73,0)
 ;    required set to no income data 
"RTN","IBARXEU1",74,0)
 ;    autoexempt test should be done first before getting to here
"RTN","IBARXEU1",75,0)
 S X=$P(IBDATA,"^",3) I X=1!(X=3)!(X=10)!(X=9)!($P(IBDATA,"^",14)) S IBEXREA=$S($P(IBDATA,"^",14):110,1:210) G NO
"RTN","IBARXEU1",76,0)
 ;
"RTN","IBARXEU1",77,0)
 S IBDT=+IBDATA
"RTN","IBARXEU1",78,0)
 S IBINCOM=$P(IBDATA,"^",4)-$P(IBDATA,"^",15) I IBINCOM<0 S IBINCOM=0
"RTN","IBARXEU1",79,0)
 S IBDEPEN=$P(IBDATA,"^",18),IBNETW=$P(IBDATA,"^",5)
"RTN","IBARXEU1",80,0)
 ;
"RTN","IBARXEU1",81,0)
 ; -- get A&A income level
"RTN","IBARXEU1",82,0)
 ;S IBLEVEL=$$THRES(IBDT,2,IBDEPEN)
"RTN","IBARXEU1",83,0)
 S IBLEVEL=$$THRES(IBDT,$S($E(IBDT,1,5)'<29612:1,1:2),IBDEPEN)
"RTN","IBARXEU1",84,0)
 I $P(IBLEVEL,"^",3) S IBPRIOR=$P(IBLEVEL,"^",3)
"RTN","IBARXEU1",85,0)
 ;
"RTN","IBARXEU1",86,0)
 S IBEXREA=120 ; low income
"RTN","IBARXEU1",87,0)
 I IBINCOM>+IBLEVEL S IBEXREA=110 G NO ;high income not exempt
"RTN","IBARXEU1",88,0)
 ;
"RTN","IBARXEU1",89,0)
 I '$$NETW G NO
"RTN","IBARXEU1",90,0)
 ;
"RTN","IBARXEU1",91,0)
 ; -- get networth threshold amount
"RTN","IBARXEU1",92,0)
 S IBTHRES=+$$THRES(IBDT,4,0)
"RTN","IBARXEU1",93,0)
 ; -- low income check for net worth
"RTN","IBARXEU1",94,0)
 S IBEXREA=$S((IBINCOM+IBNETW)>IBTHRES:130,1:120)
"RTN","IBARXEU1",95,0)
 ;
"RTN","IBARXEU1",96,0)
NO ; -- not enough information
"RTN","IBARXEU1",97,0)
 I IBEXREA="" S IBEXREA=210
"RTN","IBARXEU1",98,0)
 ;
"RTN","IBARXEU1",99,0)
 I $$NETW S Y=$S(IBEXREA=110:2,IBEXREA=120:1,IBEXREA=130:3,1:2)
"RTN","IBARXEU1",100,0)
 I '$$NETW S Y=$S(IBEXREA=120:1,1:2)
"RTN","IBARXEU1",101,0)
 ;
"RTN","IBARXEU1",102,0)
INCDTQ Q Y_"^"_+IBDATA_"^"_$O(^IBE(354.2,"ACODE",+IBEXREA,0))
"RTN","IBARXEU1",103,0)
 ;
"RTN","IBARXEU1",104,0)
THRES(DATE,TYPE,DEPEND) ; -- return threshold amount 
"RTN","IBARXEU1",105,0)
 ;
"RTN","IBARXEU1",106,0)
 ; -- if date is less than 12/1/92 will use 12/1 92 rates
"RTN","IBARXEU1",107,0)
 ;     date =: fileman format of effective date
"RTN","IBARXEU1",108,0)
 ;     type =: 2= pension plus A&A   1992 thru 1995
"RTN","IBARXEU1",109,0)
 ;     type =: 1= basic pension 1996 to present
"RTN","IBARXEU1",110,0)
 ;     depend =: number of dependents
"RTN","IBARXEU1",111,0)
 ;
"RTN","IBARXEU1",112,0)
 ; -- returns rate^effective date^prior year
"RTN","IBARXEU1",113,0)
 ;
"RTN","IBARXEU1",114,0)
 I DATE<2921201 S DATE=2921201 ; use threshold rates from 12/1/92
"RTN","IBARXEU1",115,0)
 N IBTABLE,IBLEVEL,IBPRIOR
"RTN","IBARXEU1",116,0)
 S IBLEVEL=""
"RTN","IBARXEU1",117,0)
 ; -- get entry to determine income amounts
"RTN","IBARXEU1",118,0)
 S IBTABLE=$G(^IBE(354.3,+$O(^(+$O(^IBE(354.3,"AIVDT",TYPE,-(DATE+.000001))),0)),0))
"RTN","IBARXEU1",119,0)
 G:IBTABLE="" THRESQ
"RTN","IBARXEU1",120,0)
 I TYPE=4 S DEPEND=0
"RTN","IBARXEU1",121,0)
 ;
"RTN","IBARXEU1",122,0)
 ; --see if rate is for prior year
"RTN","IBARXEU1",123,0)
 S IBPRIOR="" I $$PLUS^IBARXEU0(+IBTABLE)<DATE S IBPRIOR=+IBTABLE
"RTN","IBARXEU1",124,0)
 ;
"RTN","IBARXEU1",125,0)
 ; -- rates begin in piece 3 for veteran alone, piece 4 for 1 dependent..
"RTN","IBARXEU1",126,0)
 S IBLEVEL=$S(DEPEND<9:$P(IBTABLE,"^",DEPEND+3),1:"")
"RTN","IBARXEU1",127,0)
 I IBLEVEL="" S IBLEVEL=$P(IBTABLE,"^",4)+((DEPEND-1)*$P(IBTABLE,"^",12))
"RTN","IBARXEU1",128,0)
THRESQ Q IBLEVEL_"^"_+IBTABLE_"^"_IBPRIOR
"RTN","IBARXEU1",129,0)
 ;
"RTN","IBARXEU1",130,0)
NETW() ; -- use networth in determining copay exemptions - specs keep changing
"RTN","IBARXEU1",131,0)
 ;    returns 1 if should use networth in exemption determination
"RTN","IBARXEU1",132,0)
 ;    returns 0 if should not use networth in exemption
"RTN","IBARXEU1",133,0)
 Q 0
"RTN","IBCERP2")
0^2^B56071324^B54760400
"RTN","IBCERP2",1,0)
IBCERP2 ;ALB/CXW - ELECTRONIC ERROR REPORT ; 3/13/07 1:14pm
"RTN","IBCERP2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,367**;21-MAR-94;Build 11
"RTN","IBCERP2",3,0)
 Q
"RTN","IBCERP2",4,0)
BEG ; Report of electronic error
"RTN","IBCERP2",5,0)
 N DIR,DIRUT,DIROUT,DTOUT,DUOUT,DIC,%DT,IBZ
"RTN","IBCERP2",6,0)
 N IB0,IBBDD,IBEDT,IBST1,IBST2,IBST3,IBST4,IBERR,IBTYE,Y
"RTN","IBCERP2",7,0)
 S IB0="No ERROR CODE as sort level when error messages are not displayed"
"RTN","IBCERP2",8,0)
 S DIR("A")="DO YOU WANT TO INCLUDE THE ERROR MESSAGES? ",DIR(0)="YA",DIR("B")="YES"
"RTN","IBCERP2",9,0)
 S DIR("?")="YES indicates to display the error record with messages, or NO indicates to display the error record without messages."
"RTN","IBCERP2",10,0)
 D ^DIR K DIR
"RTN","IBCERP2",11,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",12,0)
 S IBERR=+Y
"RTN","IBCERP2",13,0)
BDT S %DT="AEPX",%DT("A")="Begin TRANSMIT DATE: "
"RTN","IBCERP2",14,0)
 D ^%DT K %DT G BEGQ:Y<0
"RTN","IBCERP2",15,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",16,0)
 S IBBDD=Y
"RTN","IBCERP2",17,0)
EDT S %DT="EX" R !,"End TRANSMIT DATE: ",X:DTIME
"RTN","IBCERP2",18,0)
 S:X=" " X=IBBDD G BEGQ:(X="")!(X["^") D ^%DT K %DT G EDT:Y<0
"RTN","IBCERP2",19,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",20,0)
 S IBEDT=Y
"RTN","IBCERP2",21,0)
 I Y<IBBDD W *7," ??",!,"END DATE must follow BEGIN DATE." G BDT
"RTN","IBCERP2",22,0)
 S DIR(0)="SBM^E:EDI;M:MRA;B:EDI/MRA",DIR("A")="BILL TRANSMISSION TYPE"
"RTN","IBCERP2",23,0)
 S DIR("?")="Select the code to indicate the transmission type: EDI, MRA or both of EDI/MAR."
"RTN","IBCERP2",24,0)
 D ^DIR K DIR
"RTN","IBCERP2",25,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",26,0)
 S IBTYE=Y
"RTN","IBCERP2",27,0)
 S DIC="^VA(200,",DIC(0)="AMEQ",DIC("A")="Select AUTHORIZING BILLER: ALL// " D ^DIC
"RTN","IBCERP2",28,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",29,0)
 I Y<0 W "ALL" G EN0
"RTN","IBCERP2",30,0)
 S ^TMP($J,"IBBIL",+Y)=""
"RTN","IBCERP2",31,0)
 S DIC("A")="Select Another AUTHORIZING BILLER: "
"RTN","IBCERP2",32,0)
 F  D  Q:Y<0
"RTN","IBCERP2",33,0)
 . D ^DIC
"RTN","IBCERP2",34,0)
 . I $D(DTOUT)!($D(DUOUT)) Q
"RTN","IBCERP2",35,0)
 . Q:Y<0
"RTN","IBCERP2",36,0)
 . S ^TMP($J,"IBBIL",+Y)=""
"RTN","IBCERP2",37,0)
 I $D(DTOUT)!($D(DUOUT)) G BEGQ
"RTN","IBCERP2",38,0)
EN0 K DIC
"RTN","IBCERP2",39,0)
 S (IBZ,DIR(0))="SBM^A:AUTHORIZING BILLER;B:BILLED AMOUNT;E:EPISODE OF CARE;P:PATIENT NAME;S:PATIENT SSN;Y:PAYER NAME;C:ERROR CODE",DIR("A")="PRIMARY SORT BY"
"RTN","IBCERP2",40,0)
 S DIR("?")="Enter a code to indicate how the messages should be organized within the first sort level"
"RTN","IBCERP2",41,0)
 D ^DIR K DIR
"RTN","IBCERP2",42,0)
 I $D(DTOUT)!($D(DUOUT)) G BEGQ
"RTN","IBCERP2",43,0)
 I 'IBERR,Y="C" W !,IB0 G EN0
"RTN","IBCERP2",44,0)
 S IBST1=Y,IBST3=Y(0)
"RTN","IBCERP2",45,0)
ST2 S DIR(0)=IBZ,DIR("A")="SECONDARY SORT BY"
"RTN","IBCERP2",46,0)
 S DIR("?")="Enter a code to indicate how the messages should be organized within the second sort level"
"RTN","IBCERP2",47,0)
 D ^DIR K DIR
"RTN","IBCERP2",48,0)
 I $D(DTOUT)!($D(DUOUT)) G BEGQ
"RTN","IBCERP2",49,0)
 I 'IBERR,Y="C" W !,IB0 G ST2
"RTN","IBCERP2",50,0)
 S IBST2=Y,IBST4=Y(0)
"RTN","IBCERP2",51,0)
 I IBST1=IBST2 W !,"SECONDARY SORT must be different from PRIMARY SORT." G ST2
"RTN","IBCERP2",52,0)
 ;
"RTN","IBCERP2",53,0)
 N %ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCERP2",54,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCERP2",55,0)
 I $D(IO("Q")) K IO("Q") D  G BEGQ
"RTN","IBCERP2",56,0)
 . S ZTRTN="EN^IBCERP2"
"RTN","IBCERP2",57,0)
 . S ZTSAVE("IBST*")="",ZTSAVE("IBERR")="",ZTSAVE("IBTYE")=""
"RTN","IBCERP2",58,0)
 . S ZTSAVE("IBBDD")="",ZTSAVE("IBEDT")=""
"RTN","IBCERP2",59,0)
 . S ZTSAVE("^TMP($J,""IBSORT"",")=""
"RTN","IBCERP2",60,0)
 . S ZTDESC="IB - Electronic Error Report"
"RTN","IBCERP2",61,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCERP2",62,0)
 U IO
"RTN","IBCERP2",63,0)
EN ; Queued job entrypoint
"RTN","IBCERP2",64,0)
 N IBSTOP,IBIFN,IBPAGE,IBLINE,IB,IB1,IBMRA,IBNAM,IBTOL,IBPAY,IBSSN,IBUER,IBDPT,IBCOD,IBDDT,IBSO1,IBSO2,IBEPO,IB399
"RTN","IBCERP2",65,0)
 W:$E(IOST,1,2)["C-" @IOF ;Only initial form feed for print to screen
"RTN","IBCERP2",66,0)
 S IBDDT=IBBDD-1 F  S IBDDT=$O(^DGCR(399,"ALEX",IBDDT)) Q:'IBDDT!(IBDDT<IBBDD)!(IBDDT>IBEDT)  S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"ALEX",IBDDT,IBIFN)) Q:'IBIFN  D
"RTN","IBCERP2",67,0)
 . ;episode of care by event dt for op, adm dt for in
"RTN","IBCERP2",68,0)
 . S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCERP2",69,0)
 . S IBEPO=$P(IB399,U,5)
"RTN","IBCERP2",70,0)
 . S IBEPO=$S(IBEPO<3:"I",1:"O")
"RTN","IBCERP2",71,0)
 . I IBEPO="I" D  ;inpatient with adm date
"RTN","IBCERP2",72,0)
 .. S IBEPO=$P(IB399,U,2),IBEPO=$S($D(^DPT(IBEPO,.105)):$P(^DGPM(^DPT(IBEPO,.105),0),U),1:$P(IB399,U,3))
"RTN","IBCERP2",73,0)
 . I IBEPO="O" S IBEPO=$P(IB399,U,3)
"RTN","IBCERP2",74,0)
 . S IBUER=$P($G(^DGCR(399,IBIFN,"S")),U,11)
"RTN","IBCERP2",75,0)
 . I $O(^TMP($J,"IBBIL",""))'="",'$D(^TMP($J,"IBBIL",+IBUER)) Q
"RTN","IBCERP2",76,0)
 . S IBDPT=$G(^DPT(+$P($G(^DGCR(399,IBIFN,0)),U,2),0))
"RTN","IBCERP2",77,0)
 . S IBUER=$S(IBUER="":"UNKNOWN",1:$P($G(^VA(200,IBUER,0)),U))
"RTN","IBCERP2",78,0)
 . S IBTOL=-$P($G(^DGCR(399,IBIFN,"U1")),U)
"RTN","IBCERP2",79,0)
 . S IBNAM=$E($P(IBDPT,U),1,26)
"RTN","IBCERP2",80,0)
 . S IBSSN=$E($P(IBDPT,U,9),1,9)
"RTN","IBCERP2",81,0)
 . S IBPAY=$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCERP2",82,0)
 . S IBPAY=$S(+IBPAY:$P($G(^DIC(36,+IBPAY,0)),U,1),$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)):"MEDICARE (WNR)",1:"PAYER NAME NOT FOUND")
"RTN","IBCERP2",83,0)
 . S IB=0 F  S IB=$O(^IBM(361,"B",IBIFN,IB)) Q:'IB  D
"RTN","IBCERP2",84,0)
 .. S IB1=$G(^IBM(361,IB,0))
"RTN","IBCERP2",85,0)
 .. Q:$P(IB1,U,3)'="R"  ;only display record with error message
"RTN","IBCERP2",86,0)
 .. S IBMRA=$$MCRWNR^IBEFUNC(+$$POLICY^IBCEF(IBIFN,1,$P(IB1,U,7)))
"RTN","IBCERP2",87,0)
 .. I IBTYE="M",'IBMRA Q
"RTN","IBCERP2",88,0)
 .. I IBTYE="E",IBMRA Q
"RTN","IBCERP2",89,0)
 .. S IBCOD=0
"RTN","IBCERP2",90,0)
 .. S IBSO1=0 F  S IBSO1=$O(^IBM(361,IB,1,IBSO1)) Q:'IBSO1  S IBSO2=$G(^IBM(361,IB,1,IBSO1,0)) I IBSO2["Error" S IBCOD=IBSO2 Q
"RTN","IBCERP2",91,0)
 .. S IBSO1=$S(IBST1="B":IBTOL,IBST1="A":IBUER,IBST1="E":IBEPO,IBST1="P":IBNAM,IBST1="S":IBSSN,IBST1="Y":IBPAY,1:IBCOD)
"RTN","IBCERP2",92,0)
 .. S IBSO2=$S(IBST2="B":IBTOL,IBST2="A":IBUER,IBST2="E":IBEPO,IBST2="P":IBNAM,IBST2="S":IBSSN,IBST2="Y":IBPAY,1:IBCOD)
"RTN","IBCERP2",93,0)
 .. S ^TMP($J,"IBSORT",IBSO1,IBSO2,IB)=IBIFN_U_IBTOL_U_IBUER_U_IBSSN_U_IBNAM_U_$S(IBPAY=0:"",1:IBPAY)_U_IBCOD_U_$S($P(IB1,U,4):"PAYER",1:"NONE PAYER")_U_IBDDT_U_$P(IB1,U,2)_U_IBEPO
"RTN","IBCERP2",94,0)
 ;
"RTN","IBCERP2",95,0)
LIST ;display
"RTN","IBCERP2",96,0)
 N IBFLG,IBPAT,IBFST,IBSEC,IBWNR,IBUER,IBWR
"RTN","IBCERP2",97,0)
 S (IBFLG,IBSO2,IBSTOP,IBPAGE,IBWNR,IBWR)=0
"RTN","IBCERP2",98,0)
 I '$D(^TMP($J,"IBSORT")) D  G BEGQ
"RTN","IBCERP2",99,0)
 . D HDR1
"RTN","IBCERP2",100,0)
 . W !,"No entries found for this report"
"RTN","IBCERP2",101,0)
 S IBFST="" F  S IBFST=$O(^TMP($J,"IBSORT",IBFST)) Q:IBFST=""!IBSTOP  D
"RTN","IBCERP2",102,0)
 . I 'IBFLG D HDR1 Q:IBSTOP  S IBFLG=1
"RTN","IBCERP2",103,0)
 . I (IBST1="A")!(IBST1="P") S IBSO1=0,IBFLG=0
"RTN","IBCERP2",104,0)
 . S IBSEC="" F  S IBSEC=$O(^TMP($J,"IBSORT",IBFST,IBSEC)) Q:IBSEC=""!IBSTOP  S IB1=0 F  S IB1=$O(^TMP($J,"IBSORT",IBFST,IBSEC,IB1)) Q:'IB1!IBSTOP  S IB=^TMP($J,"IBSORT",IBFST,IBSEC,IB1) D
"RTN","IBCERP2",105,0)
 .. I (IBST1="A")!(IBST1="P") S IBSO1=IBSO1+1
"RTN","IBCERP2",106,0)
 .. I $P(IB,U,6)["WNR" S IBWNR=IBWNR+1
"RTN","IBCERP2",107,0)
 .. E  S IBWR=IBWR+1
"RTN","IBCERP2",108,0)
 .. S IBSO2=IBSO2+1
"RTN","IBCERP2",109,0)
 .. I IBST1="E"!(IBST2="E") W "EPISODE OF CARE: "_$$DAT1^IBOUTL($P(IB,U,11)),!
"RTN","IBCERP2",110,0)
 .. W:IBST2="A" "AUTHORIZING BILLER: "_$P(IB,U,3),!
"RTN","IBCERP2",111,0)
 .. W $$BN1^PRCAFN(+IB),?13,$P(IB,U,4),?25,$E($P(IB,U,6),1,20),?50,$$DAT1^IBOUTL($P(IB,U,10)),?61,$$DAT1^IBOUTL($P(IB,U,9)),?71,$J(-$P(IB,U,2),0,2),!
"RTN","IBCERP2",112,0)
 .. I IBST1'="P",'IBERR W "PATIENT: "_$P(IB,U,5),!!
"RTN","IBCERP2",113,0)
 .. I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",114,0)
 .. Q:'IBERR  ;no display error msg
"RTN","IBCERP2",115,0)
 .. S IB0=0 F  S IB0=$O(^IBM(361,IB1,1,IB0)) Q:'IB0!IBSTOP  D
"RTN","IBCERP2",116,0)
 ... N IBX,IBY S IBX=$G(^IBM(361,IB1,1,IB0,0))
"RTN","IBCERP2",117,0)
 ... F IBY=1:80:$L(IBX) D  Q:IBSTOP
"RTN","IBCERP2",118,0)
 .... I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",119,0)
 .... W $E(IBX,IBY,IBY+79),!
"RTN","IBCERP2",120,0)
 .. Q:IBSTOP
"RTN","IBCERP2",121,0)
 .. W !
"RTN","IBCERP2",122,0)
 .. S IBCOD=0
"RTN","IBCERP2",123,0)
 .. S IBX=0 F  S IBX=$O(^IBM(361.1,"B",+IB,IBX)) Q:'IBX!IBCOD  D
"RTN","IBCERP2",124,0)
 ... S IBY=$P($G(^IBM(361.1,IBX,0)),U,15)
"RTN","IBCERP2",125,0)
 ... S IBY=$S(IBY=1:"P",IBY=2:"S",1:"T")
"RTN","IBCERP2",126,0)
 ... I $P($G(^IBM(361,IB1,0)),7)=IBY S IBCOD=IBX
"RTN","IBCERP2",127,0)
 .. I IBCOD,$P($G(^IBM(361.1,IBCOD,0)),U,13)=2 D  Q:IBSTOP  ;denied msg
"RTN","IBCERP2",128,0)
 ... S IB0=0
"RTN","IBCERP2",129,0)
 ... F  S IB0=$O(^IBM(361.1,IBCOD,"ERR",IB0)) Q:'IB0!IBSTOP  D
"RTN","IBCERP2",130,0)
 .... W ?11,$G(^IBM(361.1,1,IBCOD,"ERR",IB0,0)),!
"RTN","IBCERP2",131,0)
 .... I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",132,0)
 . Q:IBSTOP
"RTN","IBCERP2",133,0)
 . I (IBST1="A")!(IBST1="P") D  Q:IBSTOP
"RTN","IBCERP2",134,0)
 .. I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",135,0)
 .. W:'IBERR ! W "SUBTOTAL # OF BILLS FOR "_IBFST_"= ",IBSO1,!!
"RTN","IBCERP2",136,0)
 G:IBSTOP BEGQ
"RTN","IBCERP2",137,0)
 I IBTYE="M"!(IBTYE="B") D  G:IBSTOP BEGQ
"RTN","IBCERP2",138,0)
 . I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",139,0)
 . W !,"TOTAL # OF MEDICARE (WNR) BILLS = ",IBWNR
"RTN","IBCERP2",140,0)
 I IBTYE="E"!(IBTYE="B") D  G:IBSTOP BEGQ
"RTN","IBCERP2",141,0)
 . I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCERP2",142,0)
 . W !,"TOTAL # OF EDI BILLS = ",IBWR
"RTN","IBCERP2",143,0)
 I ($Y+5)>IOSL D HDR1 G:IBSTOP BEGQ
"RTN","IBCERP2",144,0)
 W !,"GRAND TOTAL # OF BILLS = ",IBSO2
"RTN","IBCERP2",145,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCERP2",146,0)
BEGQ K ^TMP($J,"IBSORT"),^TMP($J,"IBBIL")
"RTN","IBCERP2",147,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCERP2",148,0)
 I '$D(ZTQUEUED) W ! D ^%ZISC
"RTN","IBCERP2",149,0)
 Q
"RTN","IBCERP2",150,0)
HDR1 ;
"RTN","IBCERP2",151,0)
 N DIR,Y
"RTN","IBCERP2",152,0)
 I IBPAGE D  Q:IBSTOP
"RTN","IBCERP2",153,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) Q:IBSTOP
"RTN","IBCERP2",154,0)
 . W @IOF
"RTN","IBCERP2",155,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCERP2",156,0)
 W !,?25,"ELECTRONIC ERROR REPORT",?72,"PAGE: ",IBPAGE,!,?25,"RUN DATE: ",$$HTE^XLFDT($H,"2")
"RTN","IBCERP2",157,0)
 W !,?25,"DATE TRANSMITTED: ",$$DAT1^IBOUTL(IBBDD)_" - "_$$DAT1^IBOUTL(IBEDT)
"RTN","IBCERP2",158,0)
 W !,?25,"BILL TRANSMISSION TYPE: ",$S(IBTYE="E":"EDI",IBTYE="M":"MRA",1:"EDI/MRA")
"RTN","IBCERP2",159,0)
 W !,?25,"SORT BY: "_IBST3_", "_IBST4
"RTN","IBCERP2",160,0)
 I (IBST1="A")!(IBST1="P") W !,$S(IBST1="A":"AUTHORIZING BILLER: ",1:"PATIENT NAME: "),$G(IBFST)
"RTN","IBCERP2",161,0)
 W !,?61,"DATE OF"
"RTN","IBCERP2",162,0)
 W !,?51,"DATE OF",?62,"LAST",?71,"BILLED"
"RTN","IBCERP2",163,0)
 W !,"BILL NUMBER",?13,"SSN",?25,"PAYER NAME",?50,"REJECTION",?61,"TRANSMIT",?71,"AMOUNT"
"RTN","IBCERP2",164,0)
 W !,$TR($J("",80)," ","-"),!
"RTN","IBCERP2",165,0)
 Q
"RTN","IBCERP2",166,0)
 ;
"VER")
8.0^22.0
"BLD",7197,6)
^336
**END**
**END**
