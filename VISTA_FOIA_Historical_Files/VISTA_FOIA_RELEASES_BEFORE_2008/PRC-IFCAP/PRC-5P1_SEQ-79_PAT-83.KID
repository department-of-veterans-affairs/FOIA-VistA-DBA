EMERGENCY Released PRC*5.1*83 SEQ #79
Extracted from mail message
**KIDS**:PRC*5.1*83^

**INSTALL NAME**
PRC*5.1*83
"BLD",4619,0)
PRC*5.1*83^IFCAP^0^3060130^y
"BLD",4619,1,0)
^^6^6^3051227^
"BLD",4619,1,1,0)
This patch will enhance the Integrated Funds Distribution, Control Point 
"BLD",4619,1,2,0)
Activity, Accounting, and Procurement (IFCAP) package to capture 
"BLD",4619,1,3,0)
Purchase Order (PO) Activity and Generic Inventory Package (GIP) module
"BLD",4619,1,4,0)
data so the data can be rolled up at the Veterans Integrated Services
"BLD",4619,1,5,0)
Network (VISN) and national levels for analysis by the Prosthetic and
"BLD",4619,1,6,0)
Clinical Logistics Office (PCLO).
"BLD",4619,4,0)
^9.64PA^446.7^1
"BLD",4619,4,446.7,0)
446.7
"BLD",4619,4,446.7,222)
y^y^f^^^^n
"BLD",4619,4,"B",446.7,446.7)

"BLD",4619,"INID")
^y^
"BLD",4619,"INIT")
INIT^PRC5183P
"BLD",4619,"KRN",0)
^9.67PA^8989.52^19
"BLD",4619,"KRN",.4,0)
.4
"BLD",4619,"KRN",.401,0)
.401
"BLD",4619,"KRN",.402,0)
.402
"BLD",4619,"KRN",.403,0)
.403
"BLD",4619,"KRN",.5,0)
.5
"BLD",4619,"KRN",.84,0)
.84
"BLD",4619,"KRN",3.6,0)
3.6
"BLD",4619,"KRN",3.8,0)
3.8
"BLD",4619,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",4619,"KRN",3.8,"NM",1,0)
PRCPLO CLRS NOTIFICATIONS^^0
"BLD",4619,"KRN",3.8,"NM","B","PRCPLO CLRS NOTIFICATIONS",1)

"BLD",4619,"KRN",9.2,0)
9.2
"BLD",4619,"KRN",9.8,0)
9.8
"BLD",4619,"KRN",9.8,"NM",0)
^9.68A^18^17
"BLD",4619,"KRN",9.8,"NM",1,0)
PRCHLO^^0^B6164457
"BLD",4619,"KRN",9.8,"NM",2,0)
PRCHLO1^^0^B28575897
"BLD",4619,"KRN",9.8,"NM",3,0)
PRCHLO2^^0^B59193374
"BLD",4619,"KRN",9.8,"NM",4,0)
PRCHLO3^^0^B56712862
"BLD",4619,"KRN",9.8,"NM",5,0)
PRCPLO^^0^B62666305
"BLD",4619,"KRN",9.8,"NM",6,0)
PRCPLO1^^0^B52725276
"BLD",4619,"KRN",9.8,"NM",7,0)
PRCPLO2^^0^B29302908
"BLD",4619,"KRN",9.8,"NM",8,0)
PRCPLO3^^0^B12210109
"BLD",4619,"KRN",9.8,"NM",9,0)
PRCHLO4^^0^B83540702
"BLD",4619,"KRN",9.8,"NM",10,0)
PRCPRSOH^^0^B20391419
"BLD",4619,"KRN",9.8,"NM",11,0)
PRCPUSEL^^0^B26828500
"BLD",4619,"KRN",9.8,"NM",12,0)
PRCPLO4^^0^B15950699
"BLD",4619,"KRN",9.8,"NM",13,0)
PRCHLO5^^0^B93753886
"BLD",4619,"KRN",9.8,"NM",14,0)
PRCHLO1A^^0^B66700839
"BLD",4619,"KRN",9.8,"NM",15,0)
PRCHLO2A^^0^B22564489
"BLD",4619,"KRN",9.8,"NM",17,0)
PRCPLO2A^^0^B19078579
"BLD",4619,"KRN",9.8,"NM",18,0)
PRCHLO4A^^0^B45155553
"BLD",4619,"KRN",9.8,"NM","B","PRCHLO",1)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO1",2)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO1A",14)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO2",3)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO2A",15)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO3",4)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO4",9)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO4A",18)

"BLD",4619,"KRN",9.8,"NM","B","PRCHLO5",13)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO",5)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO1",6)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO2",7)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO2A",17)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO3",8)

"BLD",4619,"KRN",9.8,"NM","B","PRCPLO4",12)

"BLD",4619,"KRN",9.8,"NM","B","PRCPRSOH",10)

"BLD",4619,"KRN",9.8,"NM","B","PRCPUSEL",11)

"BLD",4619,"KRN",19,0)
19
"BLD",4619,"KRN",19,"NM",0)
^9.68A^5^5
"BLD",4619,"KRN",19,"NM",1,0)
PRCHUSER COORDINATOR^^2
"BLD",4619,"KRN",19,"NM",2,0)
PRCPLO CLO GIP OPTION^^0
"BLD",4619,"KRN",19,"NM",3,0)
PRCPLO CLO MENU^^0
"BLD",4619,"KRN",19,"NM",4,0)
PRCPLO CLO SYSTEM PARAM^^0
"BLD",4619,"KRN",19,"NM",5,0)
PRCHLO CLO PROCUREMENT^^0
"BLD",4619,"KRN",19,"NM","B","PRCHLO CLO PROCUREMENT",5)

"BLD",4619,"KRN",19,"NM","B","PRCHUSER COORDINATOR",1)

"BLD",4619,"KRN",19,"NM","B","PRCPLO CLO GIP OPTION",2)

"BLD",4619,"KRN",19,"NM","B","PRCPLO CLO MENU",3)

"BLD",4619,"KRN",19,"NM","B","PRCPLO CLO SYSTEM PARAM",4)

"BLD",4619,"KRN",19.1,0)
19.1
"BLD",4619,"KRN",101,0)
101
"BLD",4619,"KRN",409.61,0)
409.61
"BLD",4619,"KRN",771,0)
771
"BLD",4619,"KRN",870,0)
870
"BLD",4619,"KRN",8989.51,0)
8989.51
"BLD",4619,"KRN",8989.51,"NM",0)
^9.68A^4^4
"BLD",4619,"KRN",8989.51,"NM",1,0)
PRCPLO GREATER THAN RANGE^^0
"BLD",4619,"KRN",8989.51,"NM",2,0)
PRCPLO INACTIVITY RANGE^^0
"BLD",4619,"KRN",8989.51,"NM",3,0)
PRCPLO REPORT RANGE^^0
"BLD",4619,"KRN",8989.51,"NM",4,0)
PRCPLO EXTRACT DIRECTORY^^0
"BLD",4619,"KRN",8989.51,"NM","B","PRCPLO EXTRACT DIRECTORY",4)

"BLD",4619,"KRN",8989.51,"NM","B","PRCPLO GREATER THAN RANGE",1)

"BLD",4619,"KRN",8989.51,"NM","B","PRCPLO INACTIVITY RANGE",2)

"BLD",4619,"KRN",8989.51,"NM","B","PRCPLO REPORT RANGE",3)

"BLD",4619,"KRN",8989.52,0)
8989.52
"BLD",4619,"KRN",8994,0)
8994
"BLD",4619,"KRN","B",.4,.4)

"BLD",4619,"KRN","B",.401,.401)

"BLD",4619,"KRN","B",.402,.402)

"BLD",4619,"KRN","B",.403,.403)

"BLD",4619,"KRN","B",.5,.5)

"BLD",4619,"KRN","B",.84,.84)

"BLD",4619,"KRN","B",3.6,3.6)

"BLD",4619,"KRN","B",3.8,3.8)

"BLD",4619,"KRN","B",9.2,9.2)

"BLD",4619,"KRN","B",9.8,9.8)

"BLD",4619,"KRN","B",19,19)

"BLD",4619,"KRN","B",19.1,19.1)

"BLD",4619,"KRN","B",101,101)

"BLD",4619,"KRN","B",409.61,409.61)

"BLD",4619,"KRN","B",771,771)

"BLD",4619,"KRN","B",870,870)

"BLD",4619,"KRN","B",8989.51,8989.51)

"BLD",4619,"KRN","B",8989.52,8989.52)

"BLD",4619,"KRN","B",8994,8994)

"BLD",4619,"QUES",0)
^9.62^^
"BLD",4619,"REQB",0)
^9.611^^
"FIA",446.7)
CLRS REPORT STORAGE
"FIA",446.7,0)
^PRCP(446.7,
"FIA",446.7,0,0)
446.7
"FIA",446.7,0,1)
y^y^f^^^^n
"FIA",446.7,0,10)

"FIA",446.7,0,11)

"FIA",446.7,0,"RLRO")

"FIA",446.7,0,"VR")
5.1^PRC
"FIA",446.7,446.7)
0
"INIT")
INIT^PRC5183P
"KRN",3.8,320,-1)
0^1
"KRN",3.8,320,0)
PRCPLO CLRS NOTIFICATIONS^PU^n^^^^
"KRN",3.8,320,2,0)
^3.801^4^4^3051219^^^^
"KRN",3.8,320,2,1,0)
This mail group will be used to alert staff of status updates and 
"KRN",3.8,320,2,2,0)
exceptions concerning processes related to the Clinical Logistics Report 
"KRN",3.8,320,2,3,0)
Server.  The mail group will be exported with PRC*5.1*83 and the site 
"KRN",3.8,320,2,4,0)
will determine the members as advised by the Clinical Logistics Office.
"KRN",3.8,320,3)

"KRN",3.8,320,6,0)
^3.812^^0
"KRN",19,10347,-1)
2^1
"KRN",19,10347,0)
PRCHUSER COORDINATOR^IFCAP Application Coordinator Menu^^M^68^^^^^^^455
"KRN",19,10347,10,0)
^19.01IP^16^16
"KRN",19,10347,10,16,0)
12151
"KRN",19,10347,10,16,"^")
PRCPLO CLO MENU
"KRN",19,10347,"U")
IFCAP APPLICATION COORDINATOR 
"KRN",19,12148,-1)
0^2
"KRN",19,12148,0)
PRCPLO CLO GIP OPTION^CLO GIP Reports (CLRS)^^R^^^^^^^^IFCAP
"KRN",19,12148,1,0)
^^8^8^3051227^
"KRN",19,12148,1,1,0)
This is the option used by the Clinical Logistics Office to gather GIP 
"KRN",19,12148,1,2,0)
information.  It runs the Stock Status Report and Days of Stock on Hand 
"KRN",19,12148,1,3,0)
Report for every combination of station and active inventory point 
"KRN",19,12148,1,4,0)
present within a system and creates extracts in the CLRS REPORT STORAGE 
"KRN",19,12148,1,5,0)
file (#446.7).  These extracts are "*" delimited files and encompass data 
"KRN",19,12148,1,6,0)
extracted from the first day of the previous month to the last day of the 
"KRN",19,12148,1,7,0)
previous month.  The extracts are stored in the CLRS REPORT STORAGE 
"KRN",19,12148,1,8,0)
file (#446.7) until the FTP transmission on the 15th of the month.
"KRN",19,12148,25)
ENT^PRCPLO3
"KRN",19,12148,"U")
CLO GIP REPORTS (CLRS)
"KRN",19,12149,-1)
0^4
"KRN",19,12149,0)
PRCPLO CLO SYSTEM PARAM^CLO System Parameters (CLRS)^^R^^XUPROG^^^^^^IFCAP
"KRN",19,12149,1,0)
^^6^6^3051227^
"KRN",19,12149,1,1,0)
This option presents the user with the current value for the system 
"KRN",19,12149,1,2,0)
parameters associated with PRC*5.1*83 (CLRS) and prompts the user
"KRN",19,12149,1,3,0)
to enter new values if needed.  Entries are screened for validity and any
"KRN",19,12149,1,4,0)
setting errors are returned to the user. This option is only intended to
"KRN",19,12149,1,5,0)
be used by IRM staff and access to it is restricted to those who have the
"KRN",19,12149,1,6,0)
XUPROG security key.
"KRN",19,12149,25)
ENT^PRCPLO4
"KRN",19,12149,"U")
CLO SYSTEM PARAMETERS (CLRS)
"KRN",19,12150,-1)
0^5
"KRN",19,12150,0)
PRCHLO CLO PROCUREMENT^CLO Procurement Reports (CLRS)^^R^^^^^^^^IFCAP
"KRN",19,12150,1,0)
^^4^4^3051227^
"KRN",19,12150,1,1,0)
This option runs the procurement extracts associated with PRC*5.1*83 
"KRN",19,12150,1,2,0)
(CLRS) and will be scheduled to run on the 15th of every calendar month.  
"KRN",19,12150,1,3,0)
As part of  this option run, the flat files for both the PO Activity and
"KRN",19,12150,1,4,0)
GIP extracts are created for FTP transmission.
"KRN",19,12150,25)
ENT^PRCHLO5
"KRN",19,12150,"U")
CLO PROCUREMENT REPORTS (CLRS)
"KRN",19,12151,-1)
0^3
"KRN",19,12151,0)
PRCPLO CLO MENU^Clinical Logistics Office Menu^^M^^^^^^^^IFCAP
"KRN",19,12151,1,0)
^^2^2^3051227^
"KRN",19,12151,1,1,0)
This option is the Menu for all Clinical Logistics Office options attached
"KRN",19,12151,1,2,0)
to the PRCHUSER COORDINATOR menu.
"KRN",19,12151,10,0)
^19.01IP^3^3
"KRN",19,12151,10,1,0)
12148
"KRN",19,12151,10,1,"^")
PRCPLO CLO GIP OPTION
"KRN",19,12151,10,2,0)
12149
"KRN",19,12151,10,2,"^")
PRCPLO CLO SYSTEM PARAM
"KRN",19,12151,10,3,0)
12150
"KRN",19,12151,10,3,"^")
PRCHLO CLO PROCUREMENT
"KRN",19,12151,99)
60254,43866
"KRN",19,12151,"U")
CLINICAL LOGISTICS OFFICE MENU
"KRN",8989.51,4764,-1)
0^3
"KRN",8989.51,4764,0)
PRCPLO REPORT RANGE^PRCPLO REPORT RANGE^0^^^0
"KRN",8989.51,4764,1)
N^0:999^Enter a number of days to be used for the PRCPLO REPORT RANGE.
"KRN",8989.51,4764,4,0)
^8989.514^1^1
"KRN",8989.51,4764,4,1,0)
PRCPLO
"KRN",8989.51,4764,4,"B","PRCPLO",1)

"KRN",8989.51,4764,20,0)
^8989.512^2^2^3051110^^^^
"KRN",8989.51,4764,20,1,0)
This parameter will be used to indicate the date range for the Day of 
"KRN",8989.51,4764,20,2,0)
Stock on Hand report associated with PRC*5.1*83 (CLRS).
"KRN",8989.51,4764,30,0)
^8989.513I^2^1
"KRN",8989.51,4764,30,2,0)
180^4.2
"KRN",8989.51,4765,-1)
0^2
"KRN",8989.51,4765,0)
PRCPLO INACTIVITY RANGE^PRCPLO INACTIVITY RANGE^0^^^0
"KRN",8989.51,4765,1)
N^0:999^Enter a number of days to be used as the PRCPLO INACTIVITY RANGE.
"KRN",8989.51,4765,4,0)
^8989.514^1^1
"KRN",8989.51,4765,4,1,0)
PRCPLO
"KRN",8989.51,4765,4,"B","PRCPLO",1)

"KRN",8989.51,4765,20,0)
^8989.512^2^2^3051110^^^^
"KRN",8989.51,4765,20,1,0)
This parameter will be used to indicate the number of days to be used for 
"KRN",8989.51,4765,20,2,0)
the inactive range for the Stock Status Report by PRC*5.1*83 (CLRS).
"KRN",8989.51,4765,30,0)
^8989.513I^1^1
"KRN",8989.51,4765,30,1,0)
90^4.2
"KRN",8989.51,4766,-1)
0^1
"KRN",8989.51,4766,0)
PRCPLO GREATER THAN RANGE^PRCPLO GREATER THAN RANGE^0^^^0
"KRN",8989.51,4766,1)
N^0:999^Enter number of days to be used as the PRCPLO GREATER THAN RANGE.
"KRN",8989.51,4766,4,0)
^8989.514^1^1
"KRN",8989.51,4766,4,1,0)
PRCPLO
"KRN",8989.51,4766,4,"B","PRCPLO",1)

"KRN",8989.51,4766,20,0)
^8989.512^4^4^3051129^^^^
"KRN",8989.51,4766,20,1,0)
This parameter will be used to indicate the number of days to be used in 
"KRN",8989.51,4766,20,2,0)
connection with the Stock on Hand Report when that report evaluates stock 
"KRN",8989.51,4766,20,3,0)
levels retained greater than a certain given period.  This parameter is 
"KRN",8989.51,4766,20,4,0)
associated with PRC*5.1*83 (CLRS).
"KRN",8989.51,4766,30,0)
^8989.513I^1^1
"KRN",8989.51,4766,30,1,0)
90^4.2
"KRN",8989.51,4767,-1)
0^4
"KRN",8989.51,4767,0)
PRCPLO EXTRACT DIRECTORY^PRCPLO EXTRACT DIRECTORY^0^^^0
"KRN",8989.51,4767,1)
F^$L(X)<245^Enter the directory to be used as the PRCPLO EXTRACT DIRECTORY.
"KRN",8989.51,4767,4,0)
^8989.514^1^1
"KRN",8989.51,4767,4,1,0)
PRCPLO
"KRN",8989.51,4767,4,"B","PRCPLO",1)

"KRN",8989.51,4767,20,0)
^8989.512^3^3^3051129^^
"KRN",8989.51,4767,20,1,0)
This parameter will be used to indicate the destination directory for 
"KRN",8989.51,4767,20,2,0)
extracts taken in connection with PRC*5.1*83 (CLRS).  These directories 
"KRN",8989.51,4767,20,3,0)
would be at the VMS, Windows, Linux, or other operating system level.
"KRN",8989.51,4767,30,0)
^8989.513I^^0
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
83^3060130
"PKG",455,22,1,"PAH",1,1,0)
^^6^6^3060130
"PKG",455,22,1,"PAH",1,1,1,0)
This patch will enhance the Integrated Funds Distribution, Control Point 
"PKG",455,22,1,"PAH",1,1,2,0)
Activity, Accounting, and Procurement (IFCAP) package to capture 
"PKG",455,22,1,"PAH",1,1,3,0)
Purchase Order (PO) Activity and Generic Inventory Package (GIP) module
"PKG",455,22,1,"PAH",1,1,4,0)
data so the data can be rolled up at the Veterans Integrated Services
"PKG",455,22,1,"PAH",1,1,5,0)
Network (VISN) and national levels for analysis by the Prosthetic and
"PKG",455,22,1,"PAH",1,1,6,0)
Clinical Logistics Office (PCLO).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","PRC5183P")
0^^B4318344
"RTN","PRC5183P",1,0)
PRC5183P ;WOIFO/DAP-POST INSTALL TO PRC*5.1*83;10/12/05
"RTN","PRC5183P",2,0)
V ;;5.1;IFCAP;**83**;Oct 20,2000
"RTN","PRC5183P",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified
"RTN","PRC5183P",4,0)
 Q
"RTN","PRC5183P",5,0)
 ;
"RTN","PRC5183P",6,0)
INIT ;Entry point for routine that makes three calls out to EN^XPAR and sets
"RTN","PRC5183P",7,0)
 ;three system level parameters to their desired initial values using 
"RTN","PRC5183P",8,0)
 ;methods detailed in IA #2263
"RTN","PRC5183P",9,0)
 ;
"RTN","PRC5183P",10,0)
 N PRCPER,PRCPER1,PRCPER2,ERRFLG
"RTN","PRC5183P",11,0)
 S ERRFLG=0
"RTN","PRC5183P",12,0)
 ;
"RTN","PRC5183P",13,0)
 D EN^XPAR("SYS","PRCPLO REPORT RANGE",1,180,.PRCPER)
"RTN","PRC5183P",14,0)
 I PRCPER=0 D BMES^XPDUTL("PRCPLO REPORT RANGE successfully set to 180.")
"RTN","PRC5183P",15,0)
 I PRCPER'=0 S ERRFLG=1 D BMES^XPDUTL("Error while trying to edit the PRCPLO REPORT RANGE:") D MES^XPDUTL($P(PRCPER,"^",2))
"RTN","PRC5183P",16,0)
 ;
"RTN","PRC5183P",17,0)
 D EN^XPAR("SYS","PRCPLO INACTIVITY RANGE",1,90,.PRCPER1)
"RTN","PRC5183P",18,0)
 I PRCPER1=0 D MES^XPDUTL("PRCPLO INACTIVITY RANGE successfully set to 90.")
"RTN","PRC5183P",19,0)
 I PRCPER1'=0 S ERRFLG=1 D MES^XPDUTL("Error while trying to edit the PRCPLO INACTIVITY RANGE:") D MES^XPDUTL($P(PRCPER1,"^",2))
"RTN","PRC5183P",20,0)
 ;
"RTN","PRC5183P",21,0)
 D EN^XPAR("SYS","PRCPLO GREATER THAN RANGE",1,90,.PRCPER2)
"RTN","PRC5183P",22,0)
 I PRCPER2=0 D MES^XPDUTL("PRCPLO GREATER THAN RANGE successfully set to 90.")
"RTN","PRC5183P",23,0)
 I PRCPER2'=0 S ERRFLG=1 D MES^XPDUTL("Error while trying to edit the PRCPLO GREATER THAN RANGE:") D MES^XPDUTL($P(PRCPER2,"^",2))
"RTN","PRC5183P",24,0)
 ;
"RTN","PRC5183P",25,0)
 ;
"RTN","PRC5183P",26,0)
 I ERRFLG=0 D MES^XPDUTL("POST-INSTALL COMPLETED SUCCESSFULLY!")
"RTN","PRC5183P",27,0)
 I ERRFLG=1 D MES^XPDUTL("POST-INSTALL COMPLETED WITH ERRORS!!!")
"RTN","PRC5183P",28,0)
 ;
"RTN","PRC5183P",29,0)
 Q
"RTN","PRCHLO")
0^1^B6164457
"RTN","PRCHLO",1,0)
PRCHLO ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 12/14/05 9:24am
"RTN","PRCHLO",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO",3,0)
 ; Per VHA Directive 10-93-142, this routine should not be modified
"RTN","PRCHLO",4,0)
 ; 
"RTN","PRCHLO",5,0)
 ; PRCHLO* routines are used to build the extract files from
"RTN","PRCHLO",6,0)
 ; file 442 for the clinical logistics report server.
"RTN","PRCHLO",7,0)
 ; PRCHLO thru PRCHLO5 perform the following:
"RTN","PRCHLO",8,0)
 ; 1. Initialize environment
"RTN","PRCHLO",9,0)
 ; 2. Get parameters for the month being run
"RTN","PRCHLO",10,0)
 ; 3. Pull data from file 442 for month being run
"RTN","PRCHLO",11,0)
 ; 4. Create multiple "^" delimited flat files for report server
"RTN","PRCHLO",12,0)
 ; 5. At the completion of extracts FTP files to report server
"RTN","PRCHLO",13,0)
 ; 6. Clean up / remove any temp files
"RTN","PRCHLO",14,0)
 ; 7. logout
"RTN","PRCHLO",15,0)
 ; CALC is the programmer entry point used to test the extract
"RTN","PRCHLO",16,0)
 ; options for the first iteration of coding
"RTN","PRCHLO",17,0)
 ;
"RTN","PRCHLO",18,0)
 Q
"RTN","PRCHLO",19,0)
INIT ; Initialize environment
"RTN","PRCHLO",20,0)
 ;
"RTN","PRCHLO",21,0)
 ; 
"RTN","PRCHLO",22,0)
 ; Get todays date
"RTN","PRCHLO",23,0)
 N %
"RTN","PRCHLO",24,0)
 S %=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",25,0)
 ; Always start from the 1st of the month to the end of month
"RTN","PRCHLO",26,0)
 ; and at least 45 days prior to todays date
"RTN","PRCHLO",27,0)
 ;
"RTN","PRCHLO",28,0)
 ; The CALC entry point is used for testing from programmer mode
"RTN","PRCHLO",29,0)
 ; and allows the programmer to pass a specific date
"RTN","PRCHLO",30,0)
 ; in the variable %=FM date format
"RTN","PRCHLO",31,0)
 ;
"RTN","PRCHLO",32,0)
CALC ;test entry point, set %I to FM date
"RTN","PRCHLO",33,0)
 ;
"RTN","PRCHLO",34,0)
 N CLO1,CLO2,CLO2B,CLO2E,CLO3,CLOBGN,CLOEND,POND1,POND2,CLO1A
"RTN","PRCHLO",35,0)
 S CLO1=$E(%,1,3)
"RTN","PRCHLO",36,0)
 S CLO2=$E(%,4,5)
"RTN","PRCHLO",37,0)
 I +CLO2>2  D
"RTN","PRCHLO",38,0)
 . S CLO2B=CLO2-2
"RTN","PRCHLO",39,0)
 . I $L(CLO2B)<2 S CLO2B=0_CLO2B
"RTN","PRCHLO",40,0)
 . S CLO2E=CLO2-1
"RTN","PRCHLO",41,0)
 . I $L(CLO2E)<2 S CLO2E=0_CLO2E
"RTN","PRCHLO",42,0)
 . S CLOBGN=+(CLO1_(CLO2B)_"00")
"RTN","PRCHLO",43,0)
 . S CLOEND=+(CLO1_(CLO2E)_"01")
"RTN","PRCHLO",44,0)
 . Q
"RTN","PRCHLO",45,0)
 ; check for January run, and Feb run
"RTN","PRCHLO",46,0)
 I +CLO2=1  D
"RTN","PRCHLO",47,0)
 . S CLO1=CLO1-1
"RTN","PRCHLO",48,0)
 . S CLOBGN=+(CLO1_11_"00")  ; Start date is Nov 1st
"RTN","PRCHLO",49,0)
 . S CLOEND=+(CLO1_12_"01")  ; End date is   Dec 1st
"RTN","PRCHLO",50,0)
 . Q
"RTN","PRCHLO",51,0)
 I +CLO2=2  D
"RTN","PRCHLO",52,0)
 . S CLO1A=CLO1-1  ; Need to get Dec, previous year
"RTN","PRCHLO",53,0)
 . S CLOBGN=+(CLO1A_12_"00")  ; Start date is Dec 1st
"RTN","PRCHLO",54,0)
 . S CLOEND=+(CLO1_"01"_"01")  ; End date is  Jan 1st
"RTN","PRCHLO",55,0)
 . Q
"RTN","PRCHLO",56,0)
 ; Q
"RTN","PRCHLO",57,0)
 D GPARM
"RTN","PRCHLO",58,0)
 ; Make sure ^TMP($J) is set with data, otherwise return error
"RTN","PRCHLO",59,0)
 N CKTP
"RTN","PRCHLO",60,0)
 S CKTP=$O(^TMP($J,0))
"RTN","PRCHLO",61,0)
 I CKTP=""  D
"RTN","PRCHLO",62,0)
 . S CLRSERR=1  ; error flag indicates no data in ^TMP($J)
"RTN","PRCHLO",63,0)
 . Q
"RTN","PRCHLO",64,0)
 Q
"RTN","PRCHLO",65,0)
 ;
"RTN","PRCHLO",66,0)
GPARM ; Get parameters for monthly extract
"RTN","PRCHLO",67,0)
 ;
"RTN","PRCHLO",68,0)
 ; need to set monthyear for data file
"RTN","PRCHLO",69,0)
 ;
"RTN","PRCHLO",70,0)
 N MNTHYR,FMDT1,MYRVAL
"RTN","PRCHLO",71,0)
 S FMDT1=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",72,0)
 S MYRVAL=$$FMTE^XLFDT(FMDT1)
"RTN","PRCHLO",73,0)
 S MNTHYR=$P(MYRVAL," ",1)_","_$P(MYRVAL," ",3)
"RTN","PRCHLO",74,0)
 ;
"RTN","PRCHLO",75,0)
 ; $O through the "AB" x-ref based on CLOBGN and CLOEND
"RTN","PRCHLO",76,0)
 ;
"RTN","PRCHLO",77,0)
 S CLO1=CLOBGN,CLO2="",CLO3=""
"RTN","PRCHLO",78,0)
 F  S CLO1=$O(^PRC(442,"AB",CLO1)) Q:CLO1=""  D
"RTN","PRCHLO",79,0)
 . F  S CLO2=$O(^PRC(442,"AB",CLO1,CLO2)) Q:CLO2=""  D
"RTN","PRCHLO",80,0)
 . . Q:CLO1>(CLOEND-1)
"RTN","PRCHLO",81,0)
 . . D GKEY
"RTN","PRCHLO",82,0)
 . . Q
"RTN","PRCHLO",83,0)
 . Q
"RTN","PRCHLO",84,0)
 Q
"RTN","PRCHLO",85,0)
EXTR ; Extract the data, create files
"RTN","PRCHLO",86,0)
 ;
"RTN","PRCHLO",87,0)
GKEY ; get key for all tables
"RTN","PRCHLO",88,0)
 N POID,POND0,POND1,POCRDAT
"RTN","PRCHLO",89,0)
 S POND0=$G(^PRC(442,CLO2,0))
"RTN","PRCHLO",90,0)
 S POND1=$G(^PRC(442,CLO2,1))
"RTN","PRCHLO",91,0)
 S POID=CLO2
"RTN","PRCHLO",92,0)
 S POCRDAT=CLO1  ; PO Date from x-ref value
"RTN","PRCHLO",93,0)
 D GPOMAST^PRCHLO1  ;
"RTN","PRCHLO",94,0)
 Q
"RTN","PRCHLO1")
0^2^B28575897
"RTN","PRCHLO1",1,0)
PRCHLO1 ;WOIFO/RLL-EXTRACT ROUTINE (cont.)CLO REPORT SERVER ; 12/19/05 10:56am
"RTN","PRCHLO1",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO1",4,0)
 ; Continuation of PRCHLO1. This program builds the extracts for
"RTN","PRCHLO1",5,0)
 ; the Master PO Table and the associated multiples
"RTN","PRCHLO1",6,0)
POMAST ; PoMaster Table
"RTN","PRCHLO1",7,0)
 Q
"RTN","PRCHLO1",8,0)
PODISCW ; Write PO Discount table data
"RTN","PRCHLO1",9,0)
 N GPOID,GPOND
"RTN","PRCHLO1",10,0)
 S GPOID=0,GPOND=""
"RTN","PRCHLO1",11,0)
 F  S GPOID=$O(^TMP($J,"PODISC",GPOID)) Q:GPOID=""  D
"RTN","PRCHLO1",12,0)
 . F  S GPOND=$O(^TMP($J,"PODISC",GPOID,GPOND)) Q:GPOND=""  D
"RTN","PRCHLO1",13,0)
 . . W $G(^TMP($J,"PODISC",GPOID,GPOND))
"RTN","PRCHLO1",14,0)
 . . W !
"RTN","PRCHLO1",15,0)
 . . Q
"RTN","PRCHLO1",16,0)
 . Q
"RTN","PRCHLO1",17,0)
 Q
"RTN","PRCHLO1",18,0)
GPOMAST ; get PO Master record
"RTN","PRCHLO1",19,0)
 S U="^"
"RTN","PRCHLO1",20,0)
 N N0,N1,N7,N12,N16,N23,PONUMB,STNUMB,PODAT,PPOKEY
"RTN","PRCHLO1",21,0)
 N PAPAB,PAPAB1,AGAPO,AGAPO1,PCHDR,PCHDR1,PCUSR,PCUSR1
"RTN","PRCHLO1",22,0)
 N VL6,VL7,VL8,VL9,VL10,VL11,VL12,VL13,VL14,VL15,VL16,VL17,VL18
"RTN","PRCHLO1",23,0)
 N VL19,VL20,VL21,VL22,VL23,VL24,VL25,VL26,VL27,VL28,VL29,VL30,VL31
"RTN","PRCHLO1",24,0)
 N VL32,VL33,VL34,VL35,VL36,VL37,VL38,VL39,VL40,VL41
"RTN","PRCHLO1",25,0)
 N GN0,GN0A,GN0B,GN1,GN1A,GN2,VN,VN1,VN2
"RTN","PRCHLO1",26,0)
 N VL6E,VL6E1,VL6E2,VL7E,VL7E1,VL7E2,VL8E,VL8E1,VL8E2,VL10E,VL10E1
"RTN","PRCHLO1",27,0)
 N VL10E2,VL21E,VL21E1,VL21E2,VL25E,VL25E1,VL25E2,VL35E,VL35E1,VL35E2
"RTN","PRCHLO1",28,0)
 N VL16E,VL16E1,VL16E2,VL18E,VL18E1,VL18E2,VL33E,VL33E1,VL33E2
"RTN","PRCHLO1",29,0)
 N VL34E,VL34E1,VL34E2,PC2237V,PC2237V1,EXDT,EXDT1,EXDT2
"RTN","PRCHLO1",30,0)
 S N0=$G(^PRC(442,POID,0))
"RTN","PRCHLO1",31,0)
 S N1=$G(^PRC(442,POID,1))
"RTN","PRCHLO1",32,0)
 S N7=$G(^PRC(442,POID,7))
"RTN","PRCHLO1",33,0)
 S N12=$G(^PRC(442,POID,12))
"RTN","PRCHLO1",34,0)
 S N16=$G(^PRC(442,POID,16))
"RTN","PRCHLO1",35,0)
 S N23=$G(^PRC(442,POID,23))
"RTN","PRCHLO1",36,0)
 S PONUMB=$P(N0,U,1),STNUMB=$P(PONUMB,"-",1)
"RTN","PRCHLO1",37,0)
 S EXDT=$P(N1,U,15)
"RTN","PRCHLO1",38,0)
 I EXDT="" S EXDT=POCRDAT  ; if PO Date "" use x-ref date value for PO
"RTN","PRCHLO1",39,0)
 S EXDT1=$P(EXDT,".",1)
"RTN","PRCHLO1",40,0)
 S EXDT2=$$FMTE^XLFDT(EXDT1)
"RTN","PRCHLO1",41,0)
 S PODAT=EXDT2  ; needed for key
"RTN","PRCHLO1",42,0)
 S PPOKEY=POID_U_PONUMB_U_PODAT_U_MNTHYR_U_STNUMB
"RTN","PRCHLO1",43,0)
 ;
"RTN","PRCHLO1",44,0)
 ; The 1st 5 values in PPOKEY above are included in each record
"RTN","PRCHLO1",45,0)
 ;
"RTN","PRCHLO1",46,0)
 S VL6E=$P(N0,U,12),VL6E1=$G(^PRCS(410,+VL6E,0)),VL6E2=$P(VL6E1,U,1)
"RTN","PRCHLO1",47,0)
 S VL6=VL6E2  ; Prim2237
"RTN","PRCHLO1",48,0)
 S VL7E=$P(N0,U,2),VL7E1=$G(^PRCD(442.5,+VL7E,0)),VL7E2=$P(VL7E1,U,1)
"RTN","PRCHLO1",49,0)
 S VL7=VL7E2  ; meth.of proc
"RTN","PRCHLO1",50,0)
 S VL8E=$P(N1,U,19),VL8E1=$G(^PRC(443.8,+VL8E,0)),VL8E2=$P(VL8E1,U,2)
"RTN","PRCHLO1",51,0)
 S VL8=VL8E2  ; locProcRsnCode
"RTN","PRCHLO1",52,0)
 S VL9=$P(N1,U,18)  ; exp/non-exp
"RTN","PRCHLO1",53,0)
 S VL10E=$P(N7,U,1),VL10E1=$G(^PRCD(442.3,+VL10E,0))
"RTN","PRCHLO1",54,0)
 S VL10E2=$P(VL10E1,U,1)
"RTN","PRCHLO1",55,0)
 S VL10=VL10E2  ; Supply status
"RTN","PRCHLO1",56,0)
 S VL11=$P(N7,U,2)  ; Sup Stat Order
"RTN","PRCHLO1",57,0)
 S VL12=$P(N7,U,4)  ;Fis Stat Order
"RTN","PRCHLO1",58,0)
 S VL13=$P(N0,U,3)  ;FCP
"RTN","PRCHLO1",59,0)
 S VL14=$P(N0,U,4)  ;Appropriation
"RTN","PRCHLO1",60,0)
 S VL15=$P(N0,U,5)  ;CostCenter
"RTN","PRCHLO1",61,0)
 S VL16E=$P(N0,U,6),VL16E1=$G(^PRCD(420.2,+VL16E,0))
"RTN","PRCHLO1",62,0)
 S VL16E2=$P(VL16E1,U,1)
"RTN","PRCHLO1",63,0)
 S VL16=VL16E2  ;SubAcct1
"RTN","PRCHLO1",64,0)
 S VL17=$P(N0,U,7)  ;SubAmt1
"RTN","PRCHLO1",65,0)
 S VL18E=$P(N0,U,8),VL18E1=$G(^PRCD(420.2,+VL18E,0))
"RTN","PRCHLO1",66,0)
 S VL18E2=$P(VL18E1,U,1)
"RTN","PRCHLO1",67,0)
 S VL18=VL18E2  ;SubAcct2
"RTN","PRCHLO1",68,0)
 S VL19=$P(N0,U,9)  ;SubAmt2
"RTN","PRCHLO1",69,0)
 ; set Node 0 of ^TMP
"RTN","PRCHLO1",70,0)
 S GN0=PPOKEY_U_VL6_U_VL7_U_VL8_U_VL9_U_VL10_U
"RTN","PRCHLO1",71,0)
 S GN0A=GN0_VL11_U_VL12_U_VL13_U_VL14_U_VL15_U
"RTN","PRCHLO1",72,0)
 S GN0B=GN0A_VL16_U_VL17_U_VL18_U_VL19_U
"RTN","PRCHLO1",73,0)
 S ^TMP($J,"POMAST",POID,0)=GN0B  ; build and set node 0
"RTN","PRCHLO1",74,0)
 ; begin Node 1
"RTN","PRCHLO1",75,0)
 ; look up Vendor
"RTN","PRCHLO1",76,0)
 S VN=$P(N1,U,1),VN1=$G(^PRC(440,+VN,0)),VN2=$P(VN1,U,1)
"RTN","PRCHLO1",77,0)
 S VL20=VN2
"RTN","PRCHLO1",78,0)
 ; S VL20=$P(N1,U,1)  ; Vendor
"RTN","PRCHLO1",79,0)
 S VL21E=$P(N1,U,2),VL21E1=$G(^DIC(49,+VL21E,0))
"RTN","PRCHLO1",80,0)
 S VL21E2=$P(VL21E1,U,1)
"RTN","PRCHLO1",81,0)
 S VL21=VL21E2  ; Req. Service
"RTN","PRCHLO1",82,0)
 S VL22=$P(N1,U,6)  ; Fob Point
"RTN","PRCHLO1",83,0)
 ; get ext. date
"RTN","PRCHLO1",84,0)
 S EXDT=$P(N0,U,20),EXDT1=$P(EXDT,".",1)
"RTN","PRCHLO1",85,0)
 S EXDT2=$$FMTE^XLFDT(EXDT1)
"RTN","PRCHLO1",86,0)
 S VL23=EXDT2  ; Org. Del. Date
"RTN","PRCHLO1",87,0)
 S VL24=$P(N0,U,11)  ; Est. Cost
"RTN","PRCHLO1",88,0)
 S VL25E=$P(N1,U,7),VL25E1=$G(^PRCD(420.8,+VL25E,0))
"RTN","PRCHLO1",89,0)
 S VL25E2=$P(VL25E1,U,2)
"RTN","PRCHLO1",90,0)
 S VL25=VL25E2  ; Source Code
"RTN","PRCHLO1",91,0)
 S VL26=$P(N0,U,13)  ; Est Shipping
"RTN","PRCHLO1",92,0)
 S VL27=$P(N0,U,18)  ; Shp Ln Itm #
"RTN","PRCHLO1",93,0)
 S VL28=$P(N0,U,14)  ; Ln Itm Cnt
"RTN","PRCHLO1",94,0)
 S PAPAB=$P(N1,U,10),PAPAB1=$G(^VA(200,+PAPAB,0))
"RTN","PRCHLO1",95,0)
 S VL29=$P(PAPAB1,U,1)  ; PaPpmAuthBuyer
"RTN","PRCHLO1",96,0)
 S AGAPO=$P(N12,U,4),AGAPO1=$G(^VA(200,+AGAPO,0))
"RTN","PRCHLO1",97,0)
 S VL30=$P(AGAPO1,U,1)  ; Agt Assgnd PO
"RTN","PRCHLO1",98,0)
 ; get external date
"RTN","PRCHLO1",99,0)
 S EXDT=$P(N12,U,5),EXDT1=$P(EXDT,".",1)
"RTN","PRCHLO1",100,0)
 S EXDT2=$$FMTE^XLFDT(EXDT1)
"RTN","PRCHLO1",101,0)
 S VL31=EXDT2  ; DatePoAssigned
"RTN","PRCHLO1",102,0)
 S VL32=$P(N16,U,0)  ;remarks
"RTN","PRCHLO1",103,0)
 S VL33E=$P(N23,U,3),VL33E1=$G(^PRC(442,+VL33E,0))
"RTN","PRCHLO1",104,0)
 S VL33E2=$P(VL33E1,U,1)
"RTN","PRCHLO1",105,0)
 S VL33=VL33E2  ; OldPoRec
"RTN","PRCHLO1",106,0)
 S VL34E=$P(N23,U,4),VL34E1=$G(^PRC(442,+VL34E,0))
"RTN","PRCHLO1",107,0)
 S VL34E2=$P(VL34E1,U,1)
"RTN","PRCHLO1",108,0)
 S VL34=$P(N23,U,4)  ; New PoRec
"RTN","PRCHLO1",109,0)
 S GN1=VL20_U_VL21_U_VL22_U_VL23_U_VL24_U_VL25_U_VL26_U_VL27_U
"RTN","PRCHLO1",110,0)
 S GN1A=GN1_VL28_U_VL29_U_VL30_U_VL31_U_VL32_U_VL33_U_VL34_U
"RTN","PRCHLO1",111,0)
 S ^TMP($J,"POMAST",POID,1)=GN1A
"RTN","PRCHLO1",112,0)
 ;
"RTN","PRCHLO1",113,0)
 ; build node 2
"RTN","PRCHLO1",114,0)
 S VL35E=$P(N23,U,14),VL35E1=$G(^PRC(440,+VL35E,0))
"RTN","PRCHLO1",115,0)
 S VL35E2=$P(VL35E1,U,1)
"RTN","PRCHLO1",116,0)
 S VL35=VL35E2  ; PcDo Vendor
"RTN","PRCHLO1",117,0)
 S PCUSR=$P(N23,U,17),PCUSR1=$G(^VA(200,+PCUSR,0))
"RTN","PRCHLO1",118,0)
 S VL36=$P(PCUSR1,U,1)  ; Pur Crd User
"RTN","PRCHLO1",119,0)
 S VL37=$P(N23,U,21)  ; Pur Cost
"RTN","PRCHLO1",120,0)
 S PCHDR=$P(N23,U,22),PCHDR1=$G(^VA(200,+PCHDR,0))
"RTN","PRCHLO1",121,0)
 S VL38=$P(PCHDR1,U,1)  ; Pur Card Hldr
"RTN","PRCHLO1",122,0)
 ; get ext. value for 2237
"RTN","PRCHLO1",123,0)
 S PC2237V=$P(N23,U,23),PC2237V1=$G(^PRCS(410,+PC2237V,0))
"RTN","PRCHLO1",124,0)
 S VL39=$P(PC2237V1,U,1)  ; Pcdo2237
"RTN","PRCHLO1",125,0)
 S VL40=$P(N0,U,15)  ; Total Amount
"RTN","PRCHLO1",126,0)
 S VL41=$P(N0,U,16)  ; Net amount
"RTN","PRCHLO1",127,0)
 ;
"RTN","PRCHLO1",128,0)
 S GN2=VL35_U_VL36_U_VL37_U_VL38_U_VL39_U_VL40_U_VL41
"RTN","PRCHLO1",129,0)
 S ^TMP($J,"POMAST",POID,2)=GN2
"RTN","PRCHLO1",130,0)
 ;
"RTN","PRCHLO1",131,0)
 D PODISC^PRCHLO1A
"RTN","PRCHLO1",132,0)
 D POBOC^PRCHLO1A
"RTN","PRCHLO1",133,0)
 D POCMTS^PRCHLO1A
"RTN","PRCHLO1",134,0)
 D PORMKS^PRCHLO1A
"RTN","PRCHLO1",135,0)
 D PO2237^PRCHLO1A
"RTN","PRCHLO1",136,0)
 D POAMT^PRCHLO1A
"RTN","PRCHLO1",137,0)
 D POAMMD^PRCHLO1A
"RTN","PRCHLO1",138,0)
 D POPPTER^PRCHLO2A
"RTN","PRCHLO1",139,0)
 D POPART^PRCHLO2A
"RTN","PRCHLO1",140,0)
 D POOBL^PRCHLO2A
"RTN","PRCHLO1",141,0)
 D POPMET^PRCHLO2A
"RTN","PRCHLO1",142,0)
 D GPOITEM^PRCHLO2
"RTN","PRCHLO1",143,0)
 Q
"RTN","PRCHLO1",144,0)
PODISCH ; PO Discount Header File
"RTN","PRCHLO1",145,0)
 ; Header file for PO Discount Multiple
"RTN","PRCHLO1",146,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO1",147,0)
 W "DiscountIdNum^DiscountItem^PercentDollarAmount^"
"RTN","PRCHLO1",148,0)
 W "DiscountAmount^ItemCount^Contract^LineItem",!
"RTN","PRCHLO1",149,0)
 Q
"RTN","PRCHLO1A")
0^14^B66700839
"RTN","PRCHLO1A",1,0)
PRCHLO1A ;WOIFO/RLL-EXTRACT ROUTINE (cont.)CLO REPORT SERVER ; 12/19/05 11:17am
"RTN","PRCHLO1A",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO1A",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO1A",4,0)
 ; Continuation of PRCHLO1. This program builds the extracts for
"RTN","PRCHLO1A",5,0)
 ; the Master PO Table and the associated multiples
"RTN","PRCHLO1A",6,0)
POMAST ; PoMaster Table
"RTN","PRCHLO1A",7,0)
 Q
"RTN","PRCHLO1A",8,0)
PODISCW ; Write PO Discount table data
"RTN","PRCHLO1A",9,0)
 N GPOID,GPOND
"RTN","PRCHLO1A",10,0)
 S GPOID=0,GPOND=""
"RTN","PRCHLO1A",11,0)
 F  S GPOID=$O(^TMP($J,"PODISC",GPOID)) Q:GPOID=""  D
"RTN","PRCHLO1A",12,0)
 . F  S GPOND=$O(^TMP($J,"PODISC",GPOID,GPOND)) Q:GPOND=""  D
"RTN","PRCHLO1A",13,0)
 . . W $G(^TMP($J,"PODISC",GPOID,GPOND))
"RTN","PRCHLO1A",14,0)
 . . W !
"RTN","PRCHLO1A",15,0)
 . . Q
"RTN","PRCHLO1A",16,0)
 . Q
"RTN","PRCHLO1A",17,0)
 W !
"RTN","PRCHLO1A",18,0)
 Q
"RTN","PRCHLO1A",19,0)
PODISC ;
"RTN","PRCHLO1A",20,0)
 ;PoDiscount Table 442.03A (multiple)
"RTN","PRCHLO1A",21,0)
 ; ^PRC(442,POID,3,0)=^442.03A
"RTN","PRCHLO1A",22,0)
 N CKDS,PPO,PPOVAL,CKDS1,V1,V2,V3,V4,V5,V6
"RTN","PRCHLO1A",23,0)
 S CKDS=$G(^PRC(442,POID,3,0)),PPO=0
"RTN","PRCHLO1A",24,0)
 S CKDS1=$P(CKDS,U,3)
"RTN","PRCHLO1A",25,0)
 I +CKDS1>0  D  ; Contains at least one discount, create rec.
"RTN","PRCHLO1A",26,0)
 . D LPPODIS
"RTN","PRCHLO1A",27,0)
 . Q
"RTN","PRCHLO1A",28,0)
 Q
"RTN","PRCHLO1A",29,0)
PO2237 ; 2237RefNum Table
"RTN","PRCHLO1A",30,0)
 N CK2237,PPO,PPOVAL,CK2237A,PPV4E1,PPV4E2
"RTN","PRCHLO1A",31,0)
 S CK2237=$G(^PRC(442,POID,13,0)),PPO=0
"RTN","PRCHLO1A",32,0)
 S CK2237A=$P(CK2237,U,3)
"RTN","PRCHLO1A",33,0)
 I +CK2237A>0  D  ; Contains at least one 2237#, create rec
"RTN","PRCHLO1A",34,0)
 . D LP2237
"RTN","PRCHLO1A",35,0)
 Q
"RTN","PRCHLO1A",36,0)
POBOC ; PoBoc Table
"RTN","PRCHLO1A",37,0)
 N CKBS,PPO,PPOVAL,PPOVAL1,CKBS1
"RTN","PRCHLO1A",38,0)
 S CKBS=$G(^PRC(442,POID,22,0)),PPO=0
"RTN","PRCHLO1A",39,0)
 S CKBS1=$P(CKBS,U,3)
"RTN","PRCHLO1A",40,0)
 I +CKBS1>0  D  ; Contains at lease one BOC, create rec.
"RTN","PRCHLO1A",41,0)
 . D LPPOBC
"RTN","PRCHLO1A",42,0)
 Q
"RTN","PRCHLO1A",43,0)
POAMT ; PO Amount table (multiple)
"RTN","PRCHLO1A",44,0)
 N POAMT,POAMT1,POAMT2,POAMT3,POAMT4,V1,V2,V3
"RTN","PRCHLO1A",45,0)
 N V1E,V1E1,V1E2,V2E,V2E1,V2E2,VE,VE1,VE2
"RTN","PRCHLO1A",46,0)
 S POAMT=$G(^PRC(442,POID,9,0))
"RTN","PRCHLO1A",47,0)
 S POAMT1=$P(POAMT,U,3)
"RTN","PRCHLO1A",48,0)
 I +POAMT1>0  D
"RTN","PRCHLO1A",49,0)
 . S POAMT2=0
"RTN","PRCHLO1A",50,0)
 . F  S POAMT2=$O(^PRC(442,POID,9,POAMT2)) Q:POAMT2=""  D
"RTN","PRCHLO1A",51,0)
 . . Q:+POAMT2<0
"RTN","PRCHLO1A",52,0)
 . . S POAMT3=$G(^PRC(442,POID,9,POAMT2,0))
"RTN","PRCHLO1A",53,0)
 . . Q:POAMT3=""
"RTN","PRCHLO1A",54,0)
 . . ; For V1-V3, Get the node, $P the data, pad with "^" delimiters
"RTN","PRCHLO1A",55,0)
 . . ; get external value for TypeCode
"RTN","PRCHLO1A",56,0)
 . . S VE=$P(POAMT3,U,2)
"RTN","PRCHLO1A",57,0)
 . . I VE'="" S VE1=$G(^PRCD(420.6,+VE,0)),VE2=$P(VE1,U,1)
"RTN","PRCHLO1A",58,0)
 . . I VE="" S VE2=""
"RTN","PRCHLO1A",59,0)
 . . ; get external value for CompStatus Business
"RTN","PRCHLO1A",60,0)
 . . S V1E=$P(POAMT3,U,4)
"RTN","PRCHLO1A",61,0)
 . . I V1E'="" S V1E1=$G(^PRCD(420.6,+V1E,0)),V1E2=$P(V1E1,U,1)
"RTN","PRCHLO1A",62,0)
 . . I V1E="" S V1E2=""
"RTN","PRCHLO1A",63,0)
 . . ;
"RTN","PRCHLO1A",64,0)
 . . S V1=$P(POAMT3,U,1)_U_VE2_U_V1E2_U
"RTN","PRCHLO1A",65,0)
 . . ; Get external value for PrefProgram
"RTN","PRCHLO1A",66,0)
 . . S V2E=$P(POAMT3,U,5)
"RTN","PRCHLO1A",67,0)
 . . I V2E'="" S V2E1=$G(^PRCD(420.6,+V2E,0)),V2E2=$P(V2E1,U,1)
"RTN","PRCHLO1A",68,0)
 . . I V2E="" S V2E2=""
"RTN","PRCHLO1A",69,0)
 . . S V2=V2E2_U_$P(POAMT3,U,3),V3=V1_V2
"RTN","PRCHLO1A",70,0)
 . . S POAMT4=PPOKEY_U_POAMT2_U_V3
"RTN","PRCHLO1A",71,0)
 . . I +POAMT2>0 S ^TMP($J,"POAMT",POID,POAMT2,0)=POAMT4
"RTN","PRCHLO1A",72,0)
 . . D PAMBCD  ; Po Amount Breakout code
"RTN","PRCHLO1A",73,0)
 . . Q
"RTN","PRCHLO1A",74,0)
 . Q
"RTN","PRCHLO1A",75,0)
 Q
"RTN","PRCHLO1A",76,0)
PAMBCD ; PO Amount Breakout code
"RTN","PRCHLO1A",77,0)
 N PAMBC,PAMBC1,PAMBC2,PAMBC3,PAMBC4,VBCE,VBCE1,VBCE2
"RTN","PRCHLO1A",78,0)
 S PAMBC=0,PAMBC1=0,PAMBC2=0,PAMBC3=0
"RTN","PRCHLO1A",79,0)
 S PAMBC=$G(^PRC(442,POID,9,POAMT2,1,0))
"RTN","PRCHLO1A",80,0)
 S PAMBC1=$P(PAMBC,U,3)
"RTN","PRCHLO1A",81,0)
 I +PAMBC1>0  D
"RTN","PRCHLO1A",82,0)
 . F  S PAMBC2=$O(^PRC(442,POID,9,POAMT2,1,PAMBC2)) Q:PAMBC2=""  D
"RTN","PRCHLO1A",83,0)
 . . Q:+PAMBC2<0
"RTN","PRCHLO1A",84,0)
 . . S PAMBC3=$G(^PRC(442,POID,9,POAMT2,1,PAMBC2,0))
"RTN","PRCHLO1A",85,0)
 . . ;
"RTN","PRCHLO1A",86,0)
 . . ; get external value for breakout code
"RTN","PRCHLO1A",87,0)
 . . S VBCE=$P(PAMBC3,U,1)
"RTN","PRCHLO1A",88,0)
 . . I VBCE'="" S VBCE1=$G(^PRCD(420.6,+VBCE,0)),VBCE2=$P(VBCE1,U,1)
"RTN","PRCHLO1A",89,0)
 . . I VBCE="" S VBCE2=""
"RTN","PRCHLO1A",90,0)
 . . S PAMBC4=PPOKEY_U_POAMT2_U_PAMBC2_U_VBCE2
"RTN","PRCHLO1A",91,0)
 . . I +PAMBC2>0 S ^TMP($J,"POBKCOD",POID,POAMT2,PAMBC2,0)=PAMBC4
"RTN","PRCHLO1A",92,0)
 . . Q
"RTN","PRCHLO1A",93,0)
 . Q
"RTN","PRCHLO1A",94,0)
 Q
"RTN","PRCHLO1A",95,0)
POAMMD ; PO Amendment Table (multiple)
"RTN","PRCHLO1A",96,0)
 N POAMD,POAMD1,POAMD2,POAMD3,POAMD3A,POAMD4,V1,V2,V3,V2E,V2E1,V2E2
"RTN","PRCHLO1A",97,0)
 N V3E,V3E1,V3E2,V1E,V1E1,V1E2
"RTN","PRCHLO1A",98,0)
 S POAMD=$G(^PRC(442,POID,6,0))
"RTN","PRCHLO1A",99,0)
 S POAMD1=$P(POAMD,U,3)
"RTN","PRCHLO1A",100,0)
 I +POAMD1>1  D
"RTN","PRCHLO1A",101,0)
 . S POAMD2=0
"RTN","PRCHLO1A",102,0)
 . F  S POAMD2=$O(^PRC(442,POID,6,POAMD2)) Q:POAMD2=""  D
"RTN","PRCHLO1A",103,0)
 . . Q:+POAMD<0
"RTN","PRCHLO1A",104,0)
 . . S POAMD3=$G(^PRC(442,POID,6,POAMD2,0))
"RTN","PRCHLO1A",105,0)
 . . S POAMD3A=$G(^PRC(442,POID,6,POAMD2,1))
"RTN","PRCHLO1A",106,0)
 . . ; V1-V3, $Get the data, $P the values, pad with "^" delimiters
"RTN","PRCHLO1A",107,0)
 . . ; get external date for EffectiveDate
"RTN","PRCHLO1A",108,0)
 . . S V1E=$P(POAMD3,U,2),V1E1=$P(V1E,".",1)
"RTN","PRCHLO1A",109,0)
 . . I V1E'="" S V1E2=$$FMTE^XLFDT(V1E1)
"RTN","PRCHLO1A",110,0)
 . . I V1E="" S V1E2=""
"RTN","PRCHLO1A",111,0)
 . . S V1=$P(POAMD3,U,1)_U_V1E2_U_$P(POAMD3,U,3)_U
"RTN","PRCHLO1A",112,0)
 . . ; get external value for pAPPMaUthorizedBuyer
"RTN","PRCHLO1A",113,0)
 . . S V2E=$P(POAMD3A,U,1)
"RTN","PRCHLO1A",114,0)
 . . I V2E'="" S V2E1=$G(^VA(200,+V2E,0)),V2E2=$P(V2E1,U,1)
"RTN","PRCHLO1A",115,0)
 . . I V2E="" S V2E2=""
"RTN","PRCHLO1A",116,0)
 . . ; get external value for AmendmentAdjustment
"RTN","PRCHLO1A",117,0)
 . . S V3E=$P(POAMD3A,U,4)
"RTN","PRCHLO1A",118,0)
 . . I V3E'="" S V3E1=$G(^PRCD(442.3,+V3E,0)),V3E2=$P(V3E1,U,1)
"RTN","PRCHLO1A",119,0)
 . . I V3E="" S V3E2=""
"RTN","PRCHLO1A",120,0)
 . . S V2=V2E2_U_V3E2,V3=V1_V2
"RTN","PRCHLO1A",121,0)
 . . S POAMD4=PPOKEY_U_POAMD2_U_V3
"RTN","PRCHLO1A",122,0)
 . . I +POAMD2>0 S ^TMP($J,"POAMMD",POID,POAMD2,0)=POAMD4
"RTN","PRCHLO1A",123,0)
 . . D POAMCH  ; Check for Amendment Changes
"RTN","PRCHLO1A",124,0)
 . . D POAMDS  ; Check for Amendment Description
"RTN","PRCHLO1A",125,0)
 . . Q
"RTN","PRCHLO1A",126,0)
 . Q
"RTN","PRCHLO1A",127,0)
 Q
"RTN","PRCHLO1A",128,0)
POAMCH ; PO Amendment Changes Table (mulitple)
"RTN","PRCHLO1A",129,0)
 N POAMC,POAMC1,POAMC2,POAMC3,POAMC4,POAMC5,POAMC6
"RTN","PRCHLO1A",130,0)
 S POAMC=$G(^PRC(442,POID,6,POAMD2,3,0))
"RTN","PRCHLO1A",131,0)
 S POAMC1=$P(POAMC,U,3)
"RTN","PRCHLO1A",132,0)
 I +POAMC1>1  D
"RTN","PRCHLO1A",133,0)
 . S POAMC2=0
"RTN","PRCHLO1A",134,0)
 . F  S POAMC2=$O(^PRC(442,POID,6,POAMD2,3,POAMC2)) Q:POAMC2=""  D
"RTN","PRCHLO1A",135,0)
 . . S POAMC3=$G(^PRC(442,POID,6,POAMD2,3,POAMC2,0))
"RTN","PRCHLO1A",136,0)
 . . S POAMC4=$P(POAMC3,U,1),POAMC5=$P(POAMC3,U,2)
"RTN","PRCHLO1A",137,0)
 . . S POAMC6=PPOKEY_U_POAMD2_U_POAMC2_U_POAMC4_U_POAMC5
"RTN","PRCHLO1A",138,0)
 . . I +POAMC2>0 S ^TMP($J,"POAMMDCH",POID,POAMD2,POAMC2,0)=POAMC6
"RTN","PRCHLO1A",139,0)
 . . Q
"RTN","PRCHLO1A",140,0)
 . Q
"RTN","PRCHLO1A",141,0)
 Q
"RTN","PRCHLO1A",142,0)
POAMDS ; PO Amendment Description Table
"RTN","PRCHLO1A",143,0)
 N POADD,POADD1,POADD2,POADD3,POADD4
"RTN","PRCHLO1A",144,0)
 S POADD=$G(^PRC(442,POID,6,POAMD2,2,0))
"RTN","PRCHLO1A",145,0)
 I $D(POADD)  D
"RTN","PRCHLO1A",146,0)
 . S POADD1=0
"RTN","PRCHLO1A",147,0)
 . F  S POADD1=$O(^PRC(442,POID,6,POAMD2,2,POADD1)) Q:POADD1=""  D
"RTN","PRCHLO1A",148,0)
 . . S POADD2=$G(^PRC(442,POID,6,POAMD2,2,POADD1,0))  ;  mult
"RTN","PRCHLO1A",149,0)
 . . S POADD3=PPOKEY_U_POAMD2_U_POADD1_U_POADD2
"RTN","PRCHLO1A",150,0)
 . . Q:+POADD1>1  ; Get the 1st "1"
"RTN","PRCHLO1A",151,0)
 . . I +POAMD2>0 S ^TMP($J,"POAMMDDES",POID,POAMD2,POADD1,0)=POADD3
"RTN","PRCHLO1A",152,0)
 . . Q
"RTN","PRCHLO1A",153,0)
 . Q
"RTN","PRCHLO1A",154,0)
 Q
"RTN","PRCHLO1A",155,0)
POCMTS ; PocommentsTable
"RTN","PRCHLO1A",156,0)
 N POCMTS,POCMTS1
"RTN","PRCHLO1A",157,0)
 S POCMTS=$G(^PRC(442,POID,4,1,0))  ; 1st line
"RTN","PRCHLO1A",158,0)
 S POCMTS1=$E(POCMTS,1,175)  ; Get the 1st 175 Chars
"RTN","PRCHLO1A",159,0)
 ; Get the 1st 175 Char of 1st comment only
"RTN","PRCHLO1A",160,0)
 I POCMTS'="" S ^TMP($J,"POCOMMENTS",POID)=PPOKEY_U_1_U_POCMTS1
"RTN","PRCHLO1A",161,0)
 Q
"RTN","PRCHLO1A",162,0)
PORMKS ; PoRemarks Table
"RTN","PRCHLO1A",163,0)
 N PORMKS,PORMKS1
"RTN","PRCHLO1A",164,0)
 S PORMKS=$G(^PRC(442,POID,16,1,0))  ; 1st Line, 1st Comment
"RTN","PRCHLO1A",165,0)
 S PORMKS1=$E(PORMKS,1,175)  ; Get the 1st 175 Chars
"RTN","PRCHLO1A",166,0)
 ; gET 1st 175 Characters of 1st remark
"RTN","PRCHLO1A",167,0)
 I PORMKS'="" S ^TMP($J,"POREMARKS",POID)=PPOKEY_U_1_U_PORMKS1
"RTN","PRCHLO1A",168,0)
 Q
"RTN","PRCHLO1A",169,0)
LPPODIS ; Loop on PO Discount
"RTN","PRCHLO1A",170,0)
 I CKDS1>0  D
"RTN","PRCHLO1A",171,0)
 . F  S PPO=$O(^PRC(442,POID,3,PPO)) Q:PPO=""  D
"RTN","PRCHLO1A",172,0)
 . . S PPOVAL=$G(^PRC(442,POID,3,PPO,0))
"RTN","PRCHLO1A",173,0)
 . . S V1=$P(PPOVAL,U,1)_U_$P(PPOVAL,U,2)_U  ; disc itm & %$tot
"RTN","PRCHLO1A",174,0)
 . . S V2=$P(PPOVAL,U,3)_U_$P(PPOVAL,U,4)_U  ; DiscAmt & ItmCt
"RTN","PRCHLO1A",175,0)
 . . S V3=$P(PPOVAL,U,5)_U_$P(PPOVAL,U,6)  ; contract & lineItem
"RTN","PRCHLO1A",176,0)
 . . S V4=V1_V2_V3  ; all data
"RTN","PRCHLO1A",177,0)
 . . S PPOVAL1=PPOKEY_U_PPO_U_V4
"RTN","PRCHLO1A",178,0)
 . . S ^TMP($J,"PODISC",POID,PPO)=PPOVAL1
"RTN","PRCHLO1A",179,0)
 . . Q
"RTN","PRCHLO1A",180,0)
 . Q
"RTN","PRCHLO1A",181,0)
 Q
"RTN","PRCHLO1A",182,0)
LPPOBC ; Loop PoBoc Table
"RTN","PRCHLO1A",183,0)
 F  S PPO=$O(^PRC(442,POID,22,PPO)) Q:PPO=""  D
"RTN","PRCHLO1A",184,0)
 . Q:PPO="B"  ; don't want B index
"RTN","PRCHLO1A",185,0)
 . S PPOVAL=$G(^PRC(442,POID,22,PPO,0))
"RTN","PRCHLO1A",186,0)
 . S PPOVAL1=$P(PPOVAL,U,1)_U_$P(PPOVAL,U,2)
"RTN","PRCHLO1A",187,0)
 . S PPOVAL2=PPOKEY_U_PPO_U_PPOVAL1
"RTN","PRCHLO1A",188,0)
 . S ^TMP($J,"POBOC",POID,PPO)=PPOVAL2
"RTN","PRCHLO1A",189,0)
 . Q
"RTN","PRCHLO1A",190,0)
 Q
"RTN","PRCHLO1A",191,0)
LP2237 ; Loop 2237
"RTN","PRCHLO1A",192,0)
 N PPOVAL,PPV1,PPV2,PPV3,PPV4,PPV5,PPV6,PPV7,PPVALL,POKEY,PPOVAL2
"RTN","PRCHLO1A",193,0)
 N PPV1E,PPV1E1,PPV2E,PPV2E1,PPV4E1,PPV4E2,PPV7E,PPV7E1,PPV7E2
"RTN","PRCHLO1A",194,0)
 N PPV3E,PPV3E1
"RTN","PRCHLO1A",195,0)
 F  S PPO=$O(^PRC(442,POID,13,PPO)) Q:PPO=""  D
"RTN","PRCHLO1A",196,0)
 . S PPOVAL=$G(^PRC(442,POID,13,PPO,0))
"RTN","PRCHLO1A",197,0)
 . S PPV1=$P(PPOVAL,U,1),PPV2=$P(PPOVAL,U,2),PPV3=$P(PPOVAL,U,4)
"RTN","PRCHLO1A",198,0)
 . ; external value for 2237 PPV1
"RTN","PRCHLO1A",199,0)
 . I PPV1'="" S PPV1E=$G(^PRCS(410,+PPV1,0)),PPV1E1=$P(PPV1E,U,1)
"RTN","PRCHLO1A",200,0)
 . I PPV1="" S PPV1E1=""
"RTN","PRCHLO1A",201,0)
 . ; exeternal value for AccountableOfficer PPV2
"RTN","PRCHLO1A",202,0)
 . I PPV2'="" S PPV2E=$G(^VA(200,+PPV2,0)),PPV2E1=$P(PPV2E,U,1)
"RTN","PRCHLO1A",203,0)
 . I PPV2="" S PPV2E1=""
"RTN","PRCHLO1A",204,0)
 . ; ext. date value for Date Signed
"RTN","PRCHLO1A",205,0)
 . I PPV3'="" S PPV3E=$P(PPV3,".",1),PPV3E1=$$FMTE^XLFDT(PPV3E)
"RTN","PRCHLO1A",206,0)
 . I PPV3="" S PPV3E1=""
"RTN","PRCHLO1A",207,0)
 . S PPV4=$P(PPOVAL,U,5),PPV5=$P(PPOVAL,U,9),PPV6=$P(PPOVAL,U,10)
"RTN","PRCHLO1A",208,0)
 . ; external for Purchasing agent PPV4
"RTN","PRCHLO1A",209,0)
 . ;
"RTN","PRCHLO1A",210,0)
 . I PPV4'="" S PPV4E1=$G(^VA(200,+PPV4,0)),PPV4E2=$P(PPV4E1,U,1)
"RTN","PRCHLO1A",211,0)
 . I PPV4="" S PPV4E2=""
"RTN","PRCHLO1A",212,0)
 . ; get external value for InvDistPoint
"RTN","PRCHLO1A",213,0)
 . S PPV7E=$P(PPOVAL,U,11)
"RTN","PRCHLO1A",214,0)
 . I PPV7E'="" S PPV7E1=$G(^PRCP(445,+PPV7E,0)),PPV7E2=$P(PPV7E1,U,1)
"RTN","PRCHLO1A",215,0)
 . I PPV7E="" S PPV7E2=""
"RTN","PRCHLO1A",216,0)
 . S PPV7=PPV7E2
"RTN","PRCHLO1A",217,0)
 . S PPVALL=PPV1E1_U_PPV2E1_U_PPV3E1_U_PPV4E2_U_PPV5_U_PPV6_U_PPV7
"RTN","PRCHLO1A",218,0)
 . ;
"RTN","PRCHLO1A",219,0)
 . S PPOVAL2=PPOKEY_U_PPO_U_PPVALL
"RTN","PRCHLO1A",220,0)
 . S ^TMP($J,"PO2237",POID,PPO)=PPOVAL2
"RTN","PRCHLO1A",221,0)
 . Q
"RTN","PRCHLO1A",222,0)
 Q
"RTN","PRCHLO1A",223,0)
PODISCH ; PO Discount Header File
"RTN","PRCHLO1A",224,0)
 ; Header file for PO Discount Multiple
"RTN","PRCHLO1A",225,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO1A",226,0)
 W "DiscountIdNum^DiscountItem^PercentDollarAmount^"
"RTN","PRCHLO1A",227,0)
 W "DiscountAmount^ItemCount^Contract^LineItem",!
"RTN","PRCHLO1A",228,0)
 Q
"RTN","PRCHLO2")
0^3^B59193374
"RTN","PRCHLO2",1,0)
PRCHLO2 ;WOIFO/RLL/DAP-EXTRACT ROUTINE (cont.)CLO REPORT SERVER ; 12/19/05 11:19am
"RTN","PRCHLO2",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO2",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO2",4,0)
 ; Continuation of PRCHLO1. This program includes the extract
"RTN","PRCHLO2",5,0)
 ; logic for each of the 19 identified tables.
"RTN","PRCHLO2",6,0)
 ;
"RTN","PRCHLO2",7,0)
POITEM ; PoItem Table
"RTN","PRCHLO2",8,0)
 ;
"RTN","PRCHLO2",9,0)
 Q
"RTN","PRCHLO2",10,0)
 ;
"RTN","PRCHLO2",11,0)
POITEMH ; PoItem Table Header
"RTN","PRCHLO2",12,0)
 ;
"RTN","PRCHLO2",13,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO2",14,0)
 W "LineItemIdNum^LineItemNumber^ItemMasterFileNumber^"
"RTN","PRCHLO2",15,0)
 W "ItemMasterDescription^NIFNumber^"
"RTN","PRCHLO2",16,0)
 ;
"RTN","PRCHLO2",17,0)
 W "Quantity^UnitOfPurchase^PackagingMultiple^ItemDeliveryPoints^"
"RTN","PRCHLO2",18,0)
 W "BOC^ContractBOA^ActualUnitCost^EstUnitCost^FedSupplyClass^"
"RTN","PRCHLO2",19,0)
 W "VendorStockNumber^NationalDrugCode^SKU^NSN^"
"RTN","PRCHLO2",20,0)
 W "UnitConversionFactor^TotalCost^DiscountedAmount^"
"RTN","PRCHLO2",21,0)
 W "Z410ItemNumber^LotNumber^SerialNumber"
"RTN","PRCHLO2",22,0)
 Q
"RTN","PRCHLO2",23,0)
POITEMW ; Write PO Item Data
"RTN","PRCHLO2",24,0)
 ;
"RTN","PRCHLO2",25,0)
 N GPOID,GPOND
"RTN","PRCHLO2",26,0)
 S GPOID=0,GPOND=""
"RTN","PRCHLO2",27,0)
 F  S GPOID=$O(^TMP($J,"POITEM",GPOID)) Q:GPOID=""  D
"RTN","PRCHLO2",28,0)
 . F  S GPOND=$O(^TMP($J,"POITEM",GPOID,GPOND)) Q:GPOND=""  D
"RTN","PRCHLO2",29,0)
 . . W !,$G(^TMP($J,"POITEM",GPOID,GPOND,0))
"RTN","PRCHLO2",30,0)
 . . Q
"RTN","PRCHLO2",31,0)
 . Q
"RTN","PRCHLO2",32,0)
 Q
"RTN","PRCHLO2",33,0)
POITLNH ; Write PO Line Inventory Point Header
"RTN","PRCHLO2",34,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO2",35,0)
 W "LineItemIdNum^LineInvPtIdNum^LineInvPt^LineQty^LineDelivery^"
"RTN","PRCHLO2",36,0)
 W "QtyReceivedToDate",!
"RTN","PRCHLO2",37,0)
 Q
"RTN","PRCHLO2",38,0)
POITLNW ; Write PO Line Inventory Point Data
"RTN","PRCHLO2",39,0)
 N PITL,PITL1,PITL2
"RTN","PRCHLO2",40,0)
 S PITL=0,PITL1=0,PITL2=0
"RTN","PRCHLO2",41,0)
 F  S PITL=$O(^TMP($J,"POITEMLNINVPT",PITL)) Q:PITL=""  D
"RTN","PRCHLO2",42,0)
 . F  S PITL1=$O(^TMP($J,"POITEMLNINVPT",PITL,PITL1)) Q:PITL1=""  D
"RTN","PRCHLO2",43,0)
 . . W $G(^TMP($J,"POITEMLNINVPT",PITL,PITL1,1,0)),!
"RTN","PRCHLO2",44,0)
 . . Q
"RTN","PRCHLO2",45,0)
 . Q
"RTN","PRCHLO2",46,0)
 Q
"RTN","PRCHLO2",47,0)
GPOITEM ; Get PO Item record
"RTN","PRCHLO2",48,0)
 S U="^"
"RTN","PRCHLO2",49,0)
 N N0,N2,N4,PONUMB,STNUMB,PR2237,PODAT,CKIT,CKIT1,ITMID
"RTN","PRCHLO2",50,0)
 N POI1A,POI1B,POI1C,POIA,POIA1,POIA2,PO16E,PO16E1,PO16E2
"RTN","PRCHLO2",51,0)
 N PO17E,PO17E1,PO17E2,POIAF,POIA2A,IMID
"RTN","PRCHLO2",52,0)
 S CKIT=$G(^PRC(442,POID,2,0)),ITMID=0
"RTN","PRCHLO2",53,0)
 S CKIT1=$P(CKIT,U,3)
"RTN","PRCHLO2",54,0)
 I +CKIT1>0  D
"RTN","PRCHLO2",55,0)
 . S ITMID=0
"RTN","PRCHLO2",56,0)
 . F  S ITMID=$O(^PRC(442,POID,2,ITMID)) Q:ITMID=""  D
"RTN","PRCHLO2",57,0)
 . . I +ITMID>0  D  ; Got an item
"RTN","PRCHLO2",58,0)
 . . . S N0=$G(^PRC(442,POID,2,ITMID,0))
"RTN","PRCHLO2",59,0)
 . . . S N2=$G(^PRC(442,POID,2,ITMID,2))
"RTN","PRCHLO2",60,0)
 . . . S N4=$G(^PRC(442,POID,2,ITMID,4))
"RTN","PRCHLO2",61,0)
 . . . D LPPOITM   ; Loop on item
"RTN","PRCHLO2",62,0)
 . . . Q
"RTN","PRCHLO2",63,0)
 . . Q
"RTN","PRCHLO2",64,0)
 . Q
"RTN","PRCHLO2",65,0)
 Q
"RTN","PRCHLO2",66,0)
DITMD ; Set PO Item Description Data
"RTN","PRCHLO2",67,0)
 N ITMD,ITMD1,ITMD2,ITMD3
"RTN","PRCHLO2",68,0)
 ; get 1st 50 characters from 1st desc.
"RTN","PRCHLO2",69,0)
 S ITMD=$G(^PRC(442,POID,2,ITMID,1,1,0))
"RTN","PRCHLO2",70,0)
 Q:ITMD=""  ; make sure a description exists for the PO
"RTN","PRCHLO2",71,0)
 S ITMD1=$P(ITMD,U,1)
"RTN","PRCHLO2",72,0)
 S ITMD2=$E(ITMD1,1,175)
"RTN","PRCHLO2",73,0)
 S ITMD3=PPOKEY_U_ITMID_U_1_U_ITMD2
"RTN","PRCHLO2",74,0)
 S ^TMP($J,"POITEMDESC",POID,ITMID,0)=ITMD3
"RTN","PRCHLO2",75,0)
 Q
"RTN","PRCHLO2",76,0)
POLIDT ; PO line item date received
"RTN","PRCHLO2",77,0)
 N LIDT1,LIDT2,LIDT3,LIDT4,LIDT5,V1,V2,V3,V4,LDT1E,LDT1E1,LDT1E2
"RTN","PRCHLO2",78,0)
 S LIDT1=$G(^PRC(442,POID,2,ITMID,3,0))
"RTN","PRCHLO2",79,0)
 S LIDT2=$P(LIDT1,U,3)
"RTN","PRCHLO2",80,0)
 I +LIDT2>0  D
"RTN","PRCHLO2",81,0)
 . S LIDT3=0
"RTN","PRCHLO2",82,0)
 . F  S LIDT3=$O(^PRC(442,POID,2,ITMID,3,LIDT3)) Q:LIDT3=""  D
"RTN","PRCHLO2",83,0)
 . . Q:+LIDT3<0  ; quit at the x-ref
"RTN","PRCHLO2",84,0)
 . . S LIDT4=$G(^PRC(442,POID,2,ITMID,3,LIDT3,0))
"RTN","PRCHLO2",85,0)
 . . ; V1-V4 Get the data,$P the values, pad with "^" delimiters
"RTN","PRCHLO2",86,0)
 . . ; get external value for date received
"RTN","PRCHLO2",87,0)
 . . S LDT1E=$P(LIDT4,U,1)
"RTN","PRCHLO2",88,0)
 . . I LDT1E'="" S LDT1E1=$P(LDT1E,".",1),LDT1E2=$$FMTE^XLFDT(LDT1E1)
"RTN","PRCHLO2",89,0)
 . . I LDT1E="" S LDT1E2=""
"RTN","PRCHLO2",90,0)
 . . S V1=LDT1E2_U_$P(LIDT4,U,2)_U_$P(LIDT4,U,3)_U
"RTN","PRCHLO2",91,0)
 . . S V2=$P(LIDT4,U,4)_U_$P(LIDT4,U,5)_U
"RTN","PRCHLO2",92,0)
 . . S V3=$P(LIDT4,U,7)_U_$P(LIDT4,U,8),V4=V1_V2_V3
"RTN","PRCHLO2",93,0)
 . . S LIDT5=PPOKEY_U_ITMID_U_LIDT3_U_V4
"RTN","PRCHLO2",94,0)
 . . I +(LIDT3)>0 S ^TMP($J,"POITEMDATEREC",POID,ITMID,LIDT3,0)=LIDT5
"RTN","PRCHLO2",95,0)
 . . Q
"RTN","PRCHLO2",96,0)
 . Q
"RTN","PRCHLO2",97,0)
 Q
"RTN","PRCHLO2",98,0)
POLIINV ; PO line item Inventory Point multiple
"RTN","PRCHLO2",99,0)
 N POLIV,POLIV1,POLIV2,POLIV3,POLIV4,V1,V2,V3,POLE1,POLE2,POLE3
"RTN","PRCHLO2",100,0)
 S POLIV=$G(^PRC(442,POID,2,ITMID,5,0))
"RTN","PRCHLO2",101,0)
 S POLIV1=$P(POLIV,U,3)
"RTN","PRCHLO2",102,0)
 I +POLIV1>0  D
"RTN","PRCHLO2",103,0)
 . S POLIV2=0
"RTN","PRCHLO2",104,0)
 . S POLIV2=$O(^PRC(442,POID,2,ITMID,5,POLIV2)) Q:POLIV2=""  D
"RTN","PRCHLO2",105,0)
 . . Q:+POLIV2<0  ; quit at the x-ref ELSE Get data, $P values
"RTN","PRCHLO2",106,0)
 . . S POLIV3=$G(^PRC(442,POID,2,ITMID,5,POLIV2,0))  ;Get data values
"RTN","PRCHLO2",107,0)
 . . S POLE1=$P(POLIV3,U,1)
"RTN","PRCHLO2",108,0)
 . . I POLE1'="" S POLE2=$G(^PRCP(445,+POLE1,0)),POLE3=$P(POLE2,U,1)
"RTN","PRCHLO2",109,0)
 . . I POLE1="" S POLE3=""
"RTN","PRCHLO2",110,0)
 . . S V1=POLE3_U_$P(POLIV3,U,2)_U_$P(POLIV3,U,3)_U
"RTN","PRCHLO2",111,0)
 . . S V2=$P(POLIV3,U,4),V3=V1_V2
"RTN","PRCHLO2",112,0)
 . . S POLIV4=PPOKEY_U_ITMID_U_POLIV2_U_V3
"RTN","PRCHLO2",113,0)
 . . I +POLIV2>0 S ^TMP($J,"POITEMLNINVPT",POID,ITMID,POLIV2,0)=POLIV4
"RTN","PRCHLO2",114,0)
 . . Q
"RTN","PRCHLO2",115,0)
 . Q
"RTN","PRCHLO2",116,0)
 Q
"RTN","PRCHLO2",117,0)
LPPOITM ; Loop on PO Item
"RTN","PRCHLO2",118,0)
 ; Initialize with PPOKEY
"RTN","PRCHLO2",119,0)
 S ^TMP($J,"POITEM",POID,ITMID,0)=PPOKEY_U_ITMID
"RTN","PRCHLO2",120,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,7)=$P(N0,U,1)  ; LineItem#
"RTN","PRCHLO2",121,0)
 ;
"RTN","PRCHLO2",122,0)
 ;
"RTN","PRCHLO2",123,0)
 ; get value for ItemMast.Description
"RTN","PRCHLO2",124,0)
 S POIA=$P(N0,U,5)
"RTN","PRCHLO2",125,0)
 I POIA'="" S POIA1=$G(^PRC(441,+POIA,0)),POIA2=$P(POIA1,U,2),IMID=$P(POIA1,U,1),POIA2A=$P(POIA1,U,1)
"RTN","PRCHLO2",126,0)
 I POIA="" S POIA2="",IMID=""
"RTN","PRCHLO2",127,0)
 ;
"RTN","PRCHLO2",128,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,8)=IMID  ; ItemMast.ID#
"RTN","PRCHLO2",129,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,9)=POIA2  ; ItemMast.Decription
"RTN","PRCHLO2",130,0)
 I POIA2="" S POIAF=""
"RTN","PRCHLO2",131,0)
 I POIA2'="" S POIAF=$P(^PRC(441,POIA2A,0),U,15)
"RTN","PRCHLO2",132,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,10)=POIAF  ; NIF #
"RTN","PRCHLO2",133,0)
 ;
"RTN","PRCHLO2",134,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,11)=$P(N0,U,2)  ; Quantity
"RTN","PRCHLO2",135,0)
 ; Get external value of Unit of Purchase
"RTN","PRCHLO2",136,0)
 S POI1A=$P(N0,U,3)
"RTN","PRCHLO2",137,0)
 I POI1A'="" S POI1B=$G(^PRCD(420.5,+POI1A,0)),POI1C=$P(POI1B,U,1)
"RTN","PRCHLO2",138,0)
 I POI1A="" S POI1C=""
"RTN","PRCHLO2",139,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,12)=POI1C  ;UnitOfPurchase
"RTN","PRCHLO2",140,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,13)=$P(N0,U,12)  ; PkgMult
"RTN","PRCHLO2",141,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,14)=$P(N0,U,8)  ; ItmDelPoints
"RTN","PRCHLO2",142,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,15)=$P(N0,U,4)  ; BOC
"RTN","PRCHLO2",143,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,16)=$P(N2,U,2)  ; Contract Boa
"RTN","PRCHLO2",144,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,17)=$P(N0,U,9)  ; Act Unit Cost
"RTN","PRCHLO2",145,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,18)=$P(N0,U,7)  ; Est Unit Cost
"RTN","PRCHLO2",146,0)
 ; get external value for Fed Supply Classification
"RTN","PRCHLO2",147,0)
 S PO17E=$P(N2,U,3)
"RTN","PRCHLO2",148,0)
 I PO17E'="" S PO17E1=$G(^PRC(441.2,+PO17E,0)),PO17E2=$P(PO17E1,U,1)
"RTN","PRCHLO2",149,0)
 I PO17E="" S PO17E2=""
"RTN","PRCHLO2",150,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,19)=PO17E2  ;FedSupClass
"RTN","PRCHLO2",151,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,20)=$P(N0,U,6)  ;VenStkNum
"RTN","PRCHLO2",152,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,21)=$P(N0,U,15)  ;NatDrugCode
"RTN","PRCHLO2",153,0)
 ; get external value for SKU
"RTN","PRCHLO2",154,0)
 S PO16E=$P(N0,U,16)
"RTN","PRCHLO2",155,0)
 I PO16E'="" S PO16E1=$G(^PRCD(420.5,+PO16E,0)),PO16E2=$P(PO16E1,U,1)
"RTN","PRCHLO2",156,0)
 I PO16E="" S PO16E2=""
"RTN","PRCHLO2",157,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,22)=PO16E2  ;SKU
"RTN","PRCHLO2",158,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,23)=$P(N0,U,13)  ;NSN
"RTN","PRCHLO2",159,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,24)=$P(N0,U,17)  ;UnitConFactor
"RTN","PRCHLO2",160,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,25)=$P(N2,U,1)  ;TotalCost
"RTN","PRCHLO2",161,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,26)=$P(N2,U,6)  ;DiscItmAmt
"RTN","PRCHLO2",162,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,27)=$P(N2,U,13)  ;Z410ItmNum
"RTN","PRCHLO2",163,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,28)=$P(N4,U,17)  ;LotNum
"RTN","PRCHLO2",164,0)
 S $P(^TMP($J,"POITEM",POID,ITMID,0),U,29)=$P(N4,U,18)  ;SerialNum
"RTN","PRCHLO2",165,0)
 D DITMD  ; get 1st Item Description from multiple
"RTN","PRCHLO2",166,0)
 D POLIDT  ; get Item Date received Data from multiple
"RTN","PRCHLO2",167,0)
 D POLIINV
"RTN","PRCHLO2",168,0)
 Q
"RTN","PRCHLO2",169,0)
 ;
"RTN","PRCHLO2",170,0)
POITDRCH ; PO Item Date Received Header
"RTN","PRCHLO2",171,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO2",172,0)
 W "LineItemIdNum^DateRecIdNum^DateReceived^QtyReceived^Amount^"
"RTN","PRCHLO2",173,0)
 W "PartialNumber^DiscountedAmount^AdjustedQuantityRec^AdjustedAmt",!
"RTN","PRCHLO2",174,0)
 Q
"RTN","PRCHLO2",175,0)
POITDRCW ; PO Item Date Received Data
"RTN","PRCHLO2",176,0)
 N PIDRC,PIDRC1,PIDRC2,PIDRC3,PIDRC4
"RTN","PRCHLO2",177,0)
 S PIDRC=0,PIDRC1=0,PIDRC2=0,PIDRC3=0
"RTN","PRCHLO2",178,0)
 F  S PIDRC=$O(^TMP($J,"POITEMDATEREC",PIDRC)) Q:PIDRC=""  D
"RTN","PRCHLO2",179,0)
 . F  S PIDRC1=$O(^TMP($J,"POITEMDATEREC",PIDRC,PIDRC1)) Q:PIDRC1=""  D
"RTN","PRCHLO2",180,0)
 . . F  S PIDRC2=$O(^TMP($J,"POITEMDATEREC",PIDRC,PIDRC1,PIDRC2)) Q:PIDRC2=""  D
"RTN","PRCHLO2",181,0)
 . . . ;
"RTN","PRCHLO2",182,0)
 . . . W $G(^TMP($J,"POITEMDATEREC",PIDRC,PIDRC1,PIDRC2,0)),!
"RTN","PRCHLO2",183,0)
 . . Q
"RTN","PRCHLO2",184,0)
 . . Q
"RTN","PRCHLO2",185,0)
 . Q
"RTN","PRCHLO2",186,0)
 Q
"RTN","PRCHLO2",187,0)
POITDSH ; PO Item Description Header
"RTN","PRCHLO2",188,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO2",189,0)
 W "LineItemIdNum^LineItemDescIdNum^Description",!
"RTN","PRCHLO2",190,0)
 Q
"RTN","PRCHLO2",191,0)
POITDSW ; PO Item Description Write Data
"RTN","PRCHLO2",192,0)
 N PDES,PDES1,PDES2,PDES3
"RTN","PRCHLO2",193,0)
 S PDES=0,PDES1=0
"RTN","PRCHLO2",194,0)
 F  S PDES=$O(^TMP($J,"POITEMDESC",PDES)) Q:PDES=""  D
"RTN","PRCHLO2",195,0)
 . F  S PDES1=$O(^TMP($J,"POITEMDESC",PDES,PDES1)) Q:PDES1=""  D
"RTN","PRCHLO2",196,0)
 . . W $G(^TMP($J,"POITEMDESC",PDES,PDES1,0)),!
"RTN","PRCHLO2",197,0)
 . . Q
"RTN","PRCHLO2",198,0)
 . Q
"RTN","PRCHLO2",199,0)
 Q
"RTN","PRCHLO2A")
0^15^B22564489
"RTN","PRCHLO2A",1,0)
PRCHLO2A ;WOIFO/RLL/DAP-EXTRACT ROUTINE (cont.)CLO REPORT SERVER ; 11/3/05 8:22am
"RTN","PRCHLO2A",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO2A",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO2A",4,0)
 ; Continuation of PRCHLO2. This program includes the extract
"RTN","PRCHLO2A",5,0)
 ; logic for each of the identified tables.
"RTN","PRCHLO2A",6,0)
 ;
"RTN","PRCHLO2A",7,0)
 Q
"RTN","PRCHLO2A",8,0)
 ;
"RTN","PRCHLO2A",9,0)
POOBL ; PO Obligation data
"RTN","PRCHLO2A",10,0)
 ;PoObligationData Table 442.09 (multiple)
"RTN","PRCHLO2A",11,0)
 ; ^PRC(442,POID,10,0)=^442.09
"RTN","PRCHLO2A",12,0)
 ;
"RTN","PRCHLO2A",13,0)
 N CKOB,PPO,PPOVAL,CKOB1,PP1,PP2,PP3,PP4,PP5,PP5E1,PP5E2,PP1A,PPALL
"RTN","PRCHLO2A",14,0)
 N PP2E1,PP2E2
"RTN","PRCHLO2A",15,0)
 S CKOB=$G(^PRC(442,POID,10,0)),PPO=0
"RTN","PRCHLO2A",16,0)
 ;
"RTN","PRCHLO2A",17,0)
 S CKOB1=$P(CKOB,U,3)
"RTN","PRCHLO2A",18,0)
 ;
"RTN","PRCHLO2A",19,0)
 I +CKOB1>0  D  ; Contains at least one Obligation, create rec.
"RTN","PRCHLO2A",20,0)
 . ;
"RTN","PRCHLO2A",21,0)
 . D LPPOOB
"RTN","PRCHLO2A",22,0)
 . Q
"RTN","PRCHLO2A",23,0)
 Q
"RTN","PRCHLO2A",24,0)
POPART ; PO Partial
"RTN","PRCHLO2A",25,0)
 ;
"RTN","PRCHLO2A",26,0)
 N CKPT,PPO,CKPT1,CKPT2
"RTN","PRCHLO2A",27,0)
 S CKPT=$G(^PRC(442,POID,11,0)),PPO=0
"RTN","PRCHLO2A",28,0)
 S CKPT2=$P(CKPT,U,3)
"RTN","PRCHLO2A",29,0)
 I +CKPT2>0  D  ; Contains at least one PARTIAL, create rec
"RTN","PRCHLO2A",30,0)
 . D LPPART
"RTN","PRCHLO2A",31,0)
 Q
"RTN","PRCHLO2A",32,0)
POPMET ; PoPurchaseMethod Table
"RTN","PRCHLO2A",33,0)
 N CKPM,PPO,PPOVAL,CKPM1,PPOVAL1E,PPOVAL2E
"RTN","PRCHLO2A",34,0)
 S CKPM=$G(^PRC(442,POID,14,0)),PPO=0
"RTN","PRCHLO2A",35,0)
 S CKPM1=$P(CKPM,U,3)
"RTN","PRCHLO2A",36,0)
 I +CKPM1>0  D  ; Contains at lease one Purchase Method, create rec.
"RTN","PRCHLO2A",37,0)
 . D LPPM
"RTN","PRCHLO2A",38,0)
 Q
"RTN","PRCHLO2A",39,0)
POPPTER ; PopromptpaymentTermsTable
"RTN","PRCHLO2A",40,0)
 N POPPT,POPPT1,PPO,PPOVAL,PPOVAL1
"RTN","PRCHLO2A",41,0)
 S POPPT=$G(^PRC(442,POID,5,0))
"RTN","PRCHLO2A",42,0)
 S POPPT1=$P(POPPT,U,3)
"RTN","PRCHLO2A",43,0)
 I +POPPT1>0  D  ;Contains at least one PromptPayment Term, create rec
"RTN","PRCHLO2A",44,0)
 . D LPPOPTR
"RTN","PRCHLO2A",45,0)
 Q
"RTN","PRCHLO2A",46,0)
 ;
"RTN","PRCHLO2A",47,0)
 Q
"RTN","PRCHLO2A",48,0)
LPPOPTR ; Loop on Prompt Payment Terms
"RTN","PRCHLO2A",49,0)
 S PPO=0
"RTN","PRCHLO2A",50,0)
 F  S PPO=$O(^PRC(442,POID,5,PPO)) Q:PPO=""  D
"RTN","PRCHLO2A",51,0)
 . S PPOVAL=$G(^PRC(442,POID,5,PPO,0))
"RTN","PRCHLO2A",52,0)
 . S PP1=$P(PPOVAL,U,1),PP2=$P(PPOVAL,U,2),PP3=$P(PPOVAL,U,3)
"RTN","PRCHLO2A",53,0)
 . S PP4=$P(PPOVAL,U,4)
"RTN","PRCHLO2A",54,0)
 . S PPOVAL1=PP1_U_PP2_U_PP3_U_PP4
"RTN","PRCHLO2A",55,0)
 . ; add key to data
"RTN","PRCHLO2A",56,0)
 . I PPOVAL'="" S ^TMP($J,"POPROMPT",POID,PPO,0)=PPOKEY_U_PPO_U_PPOVAL1
"RTN","PRCHLO2A",57,0)
 . Q
"RTN","PRCHLO2A",58,0)
 Q
"RTN","PRCHLO2A",59,0)
LPPOOB ; Loop on PO Obligation
"RTN","PRCHLO2A",60,0)
 I CKOB1>0  D
"RTN","PRCHLO2A",61,0)
 . S PPO=0
"RTN","PRCHLO2A",62,0)
 . F  S PPO=$O(^PRC(442,POID,10,PPO)) Q:PPO=""  D
"RTN","PRCHLO2A",63,0)
 . . S PPOVAL=$G(^PRC(442,POID,10,PPO,0))
"RTN","PRCHLO2A",64,0)
 . . S PP1=$P(PPOVAL,U,1),PP2=$P(PPOVAL,U,2),PP3=$P(PPOVAL,U,3)
"RTN","PRCHLO2A",65,0)
 . . ; get external for PP2, Obligated by
"RTN","PRCHLO2A",66,0)
 . . I PP2'="" S PP2E1=$G(^VA(200,+PP2,0)),PP2E2=$P(PP2E1,U,1)
"RTN","PRCHLO2A",67,0)
 . . I PP2="" S PP2E2=""
"RTN","PRCHLO2A",68,0)
 . . S PP4=$P(PPOVAL,U,10),PP5=$P(PPOVAL,U,11)
"RTN","PRCHLO2A",69,0)
 . . I PP5'="" S PP5E1=$G(^PRCS(410,+PP5,0)),PP5E2=$P(PP5E1,U,1)
"RTN","PRCHLO2A",70,0)
 . . I PP5="" S PP5E2=""
"RTN","PRCHLO2A",71,0)
 . . I PP1'="" S PP1A=$P(PP1,".",5),PP1=$P(PP1A,"@",1)
"RTN","PRCHLO2A",72,0)
 . . S PPALL=PP1_U_PP2E2_U_PP3_U_PP4_U_PP5E2
"RTN","PRCHLO2A",73,0)
 . . ;
"RTN","PRCHLO2A",74,0)
 . . ;
"RTN","PRCHLO2A",75,0)
 . . ;
"RTN","PRCHLO2A",76,0)
 . . S ^TMP($J,"POOBLG",POID,PPO)=PPOKEY_U_PPO_U_PPALL
"RTN","PRCHLO2A",77,0)
 . . Q
"RTN","PRCHLO2A",78,0)
 . Q
"RTN","PRCHLO2A",79,0)
 Q
"RTN","PRCHLO2A",80,0)
LPPM ; Loop PoPoPurchaseMethod Table
"RTN","PRCHLO2A",81,0)
 F  S PPO=$O(^PRC(442,POID,14,PPO)) Q:PPO=""  D
"RTN","PRCHLO2A",82,0)
 . Q:PPO="B"  ; don't want B index
"RTN","PRCHLO2A",83,0)
 . S PPOVAL=$G(^PRC(442,POID,14,PPO,0))
"RTN","PRCHLO2A",84,0)
 . ;
"RTN","PRCHLO2A",85,0)
 . S PPOVAL1=$P(PPOVAL,U,1)
"RTN","PRCHLO2A",86,0)
 . ; Get external value of PPOVAL1
"RTN","PRCHLO2A",87,0)
 . I PPOVAL1'="" S PPOVAL1E=$G(^PRC(442.4,+PPOVAL1,0)),PPOVAL2E=$P(PPOVAL1E,U,3)
"RTN","PRCHLO2A",88,0)
 . I PPOVAL1="" S PPOVAL2E=""
"RTN","PRCHLO2A",89,0)
 . S PPOVAL2=PPOKEY_U_PPO_U_PPOVAL2E
"RTN","PRCHLO2A",90,0)
 . S ^TMP($J,"POPMETH",POID,PPO)=PPOVAL2
"RTN","PRCHLO2A",91,0)
 . Q
"RTN","PRCHLO2A",92,0)
 Q
"RTN","PRCHLO2A",93,0)
 ;
"RTN","PRCHLO2A",94,0)
LPPART ; Loop on Partial
"RTN","PRCHLO2A",95,0)
 N PPOVAL,PPV1,PPV2,PPV3,PPV4,PPV5,PPV6,PPV7,PPVALL,POKEY,PPOVAL2
"RTN","PRCHLO2A",96,0)
 N PPOVAL1,PPV8,PPV9,PPV10,PPV11,PPV12,PPV13,PPVALL1
"RTN","PRCHLO2A",97,0)
 N PPV3E1,PPV3E2,PPV5E1,PPV5E2,PPV1E,PPV1E1,PPV2E,PPV2E1
"RTN","PRCHLO2A",98,0)
 F  S PPO=$O(^PRC(442,POID,11,PPO)) Q:PPO=""  D
"RTN","PRCHLO2A",99,0)
 . S PPOVAL=$G(^PRC(442,POID,11,PPO,0))
"RTN","PRCHLO2A",100,0)
 . S PPOVAL1=$G(^PRC(442,POID,11,PPO,1))
"RTN","PRCHLO2A",101,0)
 . S PPV1=$P(PPOVAL,U,1),PPV2=$P(PPOVAL1,U,8),PPV3=$P(PPOVAL,U,2)
"RTN","PRCHLO2A",102,0)
 . ; get external date value for Date
"RTN","PRCHLO2A",103,0)
 . I PPV1'="" S PPV1E=$P(PPV1,".",1),PPV1E1=$$FMTE^XLFDT(PPV1E)
"RTN","PRCHLO2A",104,0)
 . I PPV1="" S PPV1E1=""
"RTN","PRCHLO2A",105,0)
 . ; get external date value for Scheduled delivery date
"RTN","PRCHLO2A",106,0)
 . I PPV2'="" S PPV2E=$P(PPV2,".",1),PPV2E1=$$FMTE^XLFDT(PPV2E)
"RTN","PRCHLO2A",107,0)
 . I PPV2="" S PPV2E1=""
"RTN","PRCHLO2A",108,0)
 . ; get external value for PPV3
"RTN","PRCHLO2A",109,0)
 . I PPV3'="" S PPV3E1=$G(^PRCD(420.2,+PPV3,0)),PPV3E2=$P(PPV3E1,U,1)
"RTN","PRCHLO2A",110,0)
 . I PPV3="" S PPV3E2=""
"RTN","PRCHLO2A",111,0)
 . S PPV4=$P(PPOVAL,U,3),PPV5=$P(PPOVAL,U,4),PPV6=$P(PPOVAL,U,5)
"RTN","PRCHLO2A",112,0)
 . ; get external value for PPV5
"RTN","PRCHLO2A",113,0)
 . I PPV5'="" S PPV5E1=$G(^PRCD(420.2,+PPV5,0)),PPV5E2=$P(PPV5E1,U,1)
"RTN","PRCHLO2A",114,0)
 . I PPV5="" S PPV5E2=""
"RTN","PRCHLO2A",115,0)
 . S PPV7=$P(PPOVAL,U,9),PPV8=$P(PPOVAL,U,10),PPV9=$P(PPOVAL,U,12)
"RTN","PRCHLO2A",116,0)
 . S PPV10=$P(PPOVAL,U,13),PPV11=$P(PPOVAL,U,14),PPV12=$P(PPOVAL1,U,16)
"RTN","PRCHLO2A",117,0)
 . S PPV13=$P(PPOVAL,U,21)
"RTN","PRCHLO2A",118,0)
 . S PPVALL=PPV1E1_U_PPV2E1_U_PPV3E2_U_PPV4_U_PPV5E2_U_PPV6_U_PPV7
"RTN","PRCHLO2A",119,0)
 . S PPVALL1=PPVALL_U_PPV8_U_PPV9_U_PPV10_U_PPV11_U_PPV12_U_PPV13
"RTN","PRCHLO2A",120,0)
 . ;
"RTN","PRCHLO2A",121,0)
 . S PPOVAL2=PPOKEY_U_PPO_U_PPVALL1
"RTN","PRCHLO2A",122,0)
 . S ^TMP($J,"POPART",POID,PPO)=PPOVAL2
"RTN","PRCHLO2A",123,0)
 . Q
"RTN","PRCHLO2A",124,0)
 Q
"RTN","PRCHLO3")
0^4^B56712862
"RTN","PRCHLO3",1,0)
PRCHLO3 ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 12/19/05 10:25am
"RTN","PRCHLO3",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO3",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO3",4,0)
 ; Continuation of PRCHLO2
"RTN","PRCHLO3",5,0)
 ;
"RTN","PRCHLO3",6,0)
 ; PRCHLO3 routines are used to Write out the Header and data
"RTN","PRCHLO3",7,0)
 ; associated with each of the 19 tables created for the Clinical
"RTN","PRCHLO3",8,0)
 ; logistics Report Server. The files are built from the extracts
"RTN","PRCHLO3",9,0)
 ; located in the ^TMP($J) global.
"RTN","PRCHLO3",10,0)
 ;
"RTN","PRCHLO3",11,0)
 Q
"RTN","PRCHLO3",12,0)
POMASTH ; Po Master Table Header file
"RTN","PRCHLO3",13,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^Primary2237"
"RTN","PRCHLO3",14,0)
 W "^MethodOfProcessing^LocalProcReasonCode^ExpendableNonExpendable"
"RTN","PRCHLO3",15,0)
 W "^SupplyStatus^SupplyStatusOrder^FiscalStatusOrder^FCP"
"RTN","PRCHLO3",16,0)
 W "^Appropriation^CostCenter^SubAccount1^SubAmount1^SubAccount2"
"RTN","PRCHLO3",17,0)
 W "^SubAmount2^Vendor^RequestingService^FobPoint"
"RTN","PRCHLO3",18,0)
 W "^OriginalDeliveryDate^EstCost^SourceCode^EstShipping"
"RTN","PRCHLO3",19,0)
 W "^ShippingLineItemNum^LineItemCount^PaPpmAuthBuyer"
"RTN","PRCHLO3",20,0)
 W "^AgentAssignedPo^DatePoAssigned^Remarks^OldPoRecord^NewPoRecord"
"RTN","PRCHLO3",21,0)
 W "^PcdoVendor^PurchaseCardUser^PurchaseCost^PurchaseCardHolder"
"RTN","PRCHLO3",22,0)
 W "^Pcdo2237^TotalAmount^NetAmount",!
"RTN","PRCHLO3",23,0)
 Q
"RTN","PRCHLO3",24,0)
POMASTW ; Write PO Master table data
"RTN","PRCHLO3",25,0)
 N GPOID,GPOND
"RTN","PRCHLO3",26,0)
 S GPOID=0,GPOND=""
"RTN","PRCHLO3",27,0)
 F  S GPOID=$O(^TMP($J,"POMAST",GPOID)) Q:GPOID=""  D
"RTN","PRCHLO3",28,0)
 . ;  W !  ; new line for each PO
"RTN","PRCHLO3",29,0)
 . F  S GPOND=$O(^TMP($J,"POMAST",GPOID,GPOND)) Q:GPOND=""  D
"RTN","PRCHLO3",30,0)
 . . W $G(^TMP($J,"POMAST",GPOID,GPOND))
"RTN","PRCHLO3",31,0)
 . . Q
"RTN","PRCHLO3",32,0)
 . W !  ; new line for each PO
"RTN","PRCHLO3",33,0)
 . Q
"RTN","PRCHLO3",34,0)
 Q
"RTN","PRCHLO3",35,0)
 ;
"RTN","PRCHLO3",36,0)
POOBHD ; PO Obligation Header
"RTN","PRCHLO3",37,0)
 ;
"RTN","PRCHLO3",38,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",39,0)
 W "ObDataIdNum^Tdateref^ObligatedBy^TransactionAmount^"
"RTN","PRCHLO3",40,0)
 W "AmendmentNumber^Z1358Adjustment",!
"RTN","PRCHLO3",41,0)
 Q
"RTN","PRCHLO3",42,0)
 ;
"RTN","PRCHLO3",43,0)
POOBW ; Write PO Obligation data
"RTN","PRCHLO3",44,0)
 N POOBID,POOBID1
"RTN","PRCHLO3",45,0)
 S POOBID=0,POOBID1=0
"RTN","PRCHLO3",46,0)
 F  S POOBID=$O(^TMP($J,"POOBLG",POOBID)) Q:POOBID=""  D
"RTN","PRCHLO3",47,0)
 . F  S POOBID1=$O(^TMP($J,"POOBLG",POOBID,POOBID1)) Q:POOBID1=""  D
"RTN","PRCHLO3",48,0)
 . . W $G(^TMP($J,"POOBLG",POOBID,POOBID1)),!
"RTN","PRCHLO3",49,0)
 . . Q
"RTN","PRCHLO3",50,0)
 . Q
"RTN","PRCHLO3",51,0)
 Q
"RTN","PRCHLO3",52,0)
POPMEH ; Purchase Order Purchase Method Header
"RTN","PRCHLO3",53,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",54,0)
 W "PurchaseMethodIdNum^PurchaseMethod",!
"RTN","PRCHLO3",55,0)
 Q
"RTN","PRCHLO3",56,0)
POPMEW ; Write Purchase Order Purchase Method Data
"RTN","PRCHLO3",57,0)
 N POMT1,POMT2
"RTN","PRCHLO3",58,0)
 S POMT1=0,POMT2=0
"RTN","PRCHLO3",59,0)
 F  S POMT1=$O(^TMP($J,"POPMETH",POMT1)) Q:POMT1=""  D
"RTN","PRCHLO3",60,0)
 . F  S POMT2=$O(^TMP($J,"POPMETH",POMT1,POMT2)) Q:POMT2=""  D
"RTN","PRCHLO3",61,0)
 . . W $G(^TMP($J,"POPMETH",POMT1,POMT2)),!
"RTN","PRCHLO3",62,0)
 . .Q
"RTN","PRCHLO3",63,0)
 . Q
"RTN","PRCHLO3",64,0)
 Q
"RTN","PRCHLO3",65,0)
 ;
"RTN","PRCHLO3",66,0)
POPART ; PO Partial Header
"RTN","PRCHLO3",67,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",68,0)
 W "PartialIdNum^Date^ScheduledDeliveryDate^SubAccount1^Subamount1^"
"RTN","PRCHLO3",69,0)
 W "SubAccount2^SubAmount2^Final^Overage^TotalAmount^"
"RTN","PRCHLO3",70,0)
 W "DiscountPercentDays^Linecount^OriginalPartial^"
"RTN","PRCHLO3",71,0)
 W "AdjustmentAmendmentNumber",!
"RTN","PRCHLO3",72,0)
 Q
"RTN","PRCHLO3",73,0)
POPARTW ; PO Partial Data Write
"RTN","PRCHLO3",74,0)
 N POPR1,POPR2
"RTN","PRCHLO3",75,0)
 S POPR1=0,POPR2=0
"RTN","PRCHLO3",76,0)
 F  S POPR1=$O(^TMP($J,"POPART",POPR1)) Q:POPR1=""  D
"RTN","PRCHLO3",77,0)
 . F  S POPR2=$O(^TMP($J,"POPART",POPR1,POPR2)) Q:POPR2=""  D
"RTN","PRCHLO3",78,0)
 . . W $G(^TMP($J,"POPART",POPR1,POPR2)),!
"RTN","PRCHLO3",79,0)
 . . Q
"RTN","PRCHLO3",80,0)
 . Q
"RTN","PRCHLO3",81,0)
 Q
"RTN","PRCHLO3",82,0)
 ;
"RTN","PRCHLO3",83,0)
PO2237H ; Po 2237 Header
"RTN","PRCHLO3",84,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",85,0)
 W "Z2237IdNum^Z2237RefNum^AccountableOfficer^DateSigned^"
"RTN","PRCHLO3",86,0)
 W "PurchasingAgent^TypeOfRequest^SourceOfRequest^InvDistPoint",!
"RTN","PRCHLO3",87,0)
 Q
"RTN","PRCHLO3",88,0)
 ;
"RTN","PRCHLO3",89,0)
PO2237W ; PO 2237 Write Data
"RTN","PRCHLO3",90,0)
 N PO37A,PO37B
"RTN","PRCHLO3",91,0)
 S PO37A=0,PO37B=0
"RTN","PRCHLO3",92,0)
 F  S PO37A=$O(^TMP($J,"PO2237",PO37A)) Q:PO37A=""  D
"RTN","PRCHLO3",93,0)
 . F  S PO37B=$O(^TMP($J,"PO2237",PO37A,PO37B)) Q:PO37B=""  D
"RTN","PRCHLO3",94,0)
 . . W $G(^TMP($J,"PO2237",PO37A,PO37B)),!
"RTN","PRCHLO3",95,0)
 . . Q
"RTN","PRCHLO3",96,0)
 . Q
"RTN","PRCHLO3",97,0)
 Q
"RTN","PRCHLO3",98,0)
POBOCH ; PO BOC Header
"RTN","PRCHLO3",99,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",100,0)
 W "BocIdNum^Subaccount^SubAmount",!
"RTN","PRCHLO3",101,0)
 Q
"RTN","PRCHLO3",102,0)
POBOCW ; PO BOC Write Data
"RTN","PRCHLO3",103,0)
 N POBOC,POBOC1
"RTN","PRCHLO3",104,0)
 S POBOC=0,POBOC1=0
"RTN","PRCHLO3",105,0)
 F  S POBOC=$O(^TMP($J,"POBOC",POBOC)) Q:POBOC=""  D
"RTN","PRCHLO3",106,0)
 . F  S POBOC1=$O(^TMP($J,"POBOC",POBOC,POBOC1)) Q:POBOC1=""  D
"RTN","PRCHLO3",107,0)
 . . W $G(^TMP($J,"POBOC",POBOC,POBOC1)),!
"RTN","PRCHLO3",108,0)
 . . Q
"RTN","PRCHLO3",109,0)
 . Q
"RTN","PRCHLO3",110,0)
 Q
"RTN","PRCHLO3",111,0)
POCMTSH ;PO Comments Header
"RTN","PRCHLO3",112,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",113,0)
 W "CommentsIdNum^Comments",!
"RTN","PRCHLO3",114,0)
 Q
"RTN","PRCHLO3",115,0)
POCMTSW ; PO Comments Write Data
"RTN","PRCHLO3",116,0)
 N POCMT,POCMT1
"RTN","PRCHLO3",117,0)
 S POCMT=0,POCMT1=0
"RTN","PRCHLO3",118,0)
 F  S POCMT=$O(^TMP($J,"POCOMMENTS",POCMT)) Q:POCMT=""  D
"RTN","PRCHLO3",119,0)
 . W $G(^TMP($J,"POCOMMENTS",POCMT)),!
"RTN","PRCHLO3",120,0)
 . Q
"RTN","PRCHLO3",121,0)
 Q
"RTN","PRCHLO3",122,0)
PORMKH ; PO Remarks Header
"RTN","PRCHLO3",123,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",124,0)
 W "RemarksIdNum^Remarks",!
"RTN","PRCHLO3",125,0)
 Q
"RTN","PRCHLO3",126,0)
PORMKW ; PO Remarks Write Data
"RTN","PRCHLO3",127,0)
 N PORMK
"RTN","PRCHLO3",128,0)
 S PORMK=0
"RTN","PRCHLO3",129,0)
 F  S PORMK=$O(^TMP($J,"POREMARKS",PORMK)) Q:PORMK=""  D
"RTN","PRCHLO3",130,0)
 . W $G(^TMP($J,"POREMARKS",PORMK)),!
"RTN","PRCHLO3",131,0)
 . Q
"RTN","PRCHLO3",132,0)
 Q
"RTN","PRCHLO3",133,0)
POPPTH ; Prompt Payment Terms Header
"RTN","PRCHLO3",134,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",135,0)
 W "PaymentTermsIdNum^PromptPaymentPercent^DaysTerm^Contract^Astr",!
"RTN","PRCHLO3",136,0)
 Q
"RTN","PRCHLO3",137,0)
POPPTW ; Prompt Payment Terms Write Data
"RTN","PRCHLO3",138,0)
 N POPPT,POPPT1
"RTN","PRCHLO3",139,0)
 S POPPT=0,POPPT1=0
"RTN","PRCHLO3",140,0)
 F  S POPPT=$O(^TMP($J,"POPROMPT",POPPT)) Q:POPPT=""  D
"RTN","PRCHLO3",141,0)
 . F  S POPPT1=$O(^TMP($J,"POPROMPT",POPPT,POPPT1)) Q:POPPT1=""  D
"RTN","PRCHLO3",142,0)
 . . W $G(^TMP($J,"POPROMPT",POPPT,POPPT1,0)),!
"RTN","PRCHLO3",143,0)
 . . Q
"RTN","PRCHLO3",144,0)
 . Q
"RTN","PRCHLO3",145,0)
 Q
"RTN","PRCHLO3",146,0)
POAMTH ; PO Amount Header
"RTN","PRCHLO3",147,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",148,0)
 W "AmountIdNum^Amount^TypeCode^CompStatusBusiness^PrefProgram^"
"RTN","PRCHLO3",149,0)
 W "Contract",!
"RTN","PRCHLO3",150,0)
 Q
"RTN","PRCHLO3",151,0)
POAMTW ; PO Amount Write Data
"RTN","PRCHLO3",152,0)
 N POAMT,POAMT1,POAMT2
"RTN","PRCHLO3",153,0)
 S POAMT=0,POAMT1=0
"RTN","PRCHLO3",154,0)
 F  S POAMT=$O(^TMP($J,"POAMT",POAMT)) Q:POAMT=""  D
"RTN","PRCHLO3",155,0)
 . F  S POAMT1=$O(^TMP($J,"POAMT",POAMT,POAMT1)) Q:POAMT1=""  D
"RTN","PRCHLO3",156,0)
 . . W $G(^TMP($J,"POAMT",POAMT,POAMT1,0)),!
"RTN","PRCHLO3",157,0)
 . . Q
"RTN","PRCHLO3",158,0)
 . Q
"RTN","PRCHLO3",159,0)
 Q
"RTN","PRCHLO3",160,0)
PAMTBKH ; PO Amount Breakout Code Header
"RTN","PRCHLO3",161,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",162,0)
 W "AmountIdNum^AmountBrkCodeIdNum^BreakoutCode",!
"RTN","PRCHLO3",163,0)
 Q
"RTN","PRCHLO3",164,0)
POAMDH ; PO Amendment Header
"RTN","PRCHLO3",165,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",166,0)
 W "AmendmentIdNum^Amendment^EffectiveChange^AmountChanged^"
"RTN","PRCHLO3",167,0)
 W "PappmAuthBuyer^AmendmentAdjStatus",!
"RTN","PRCHLO3",168,0)
 Q
"RTN","PRCHLO3",169,0)
POAMDW ; PO Amendment Write Data
"RTN","PRCHLO3",170,0)
 N POAMD,POAMD1,POAMD2
"RTN","PRCHLO3",171,0)
 S POAMD=0,POAMD1=0
"RTN","PRCHLO3",172,0)
 F  S POAMD=$O(^TMP($J,"POAMMD",POAMD)) Q:POAMD=""  D
"RTN","PRCHLO3",173,0)
 . F  S POAMD1=$O(^TMP($J,"POAMMD",POAMD,POAMD1)) Q:POAMD1=""  D
"RTN","PRCHLO3",174,0)
 . . W $G(^TMP($J,"POAMMD",POAMD,POAMD1,0)),!
"RTN","PRCHLO3",175,0)
 . . Q
"RTN","PRCHLO3",176,0)
 . Q
"RTN","PRCHLO3",177,0)
 Q
"RTN","PRCHLO3",178,0)
 ;
"RTN","PRCHLO3",179,0)
POAMDCH ; PO Amendment Changes Header
"RTN","PRCHLO3",180,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",181,0)
 W "AmendmentIdNum^AmendmentChangeIdNum^Changes^AmendmentType",!
"RTN","PRCHLO3",182,0)
 Q
"RTN","PRCHLO3",183,0)
POAMDCW ; PO Amendment Changes Write Data
"RTN","PRCHLO3",184,0)
 N PAMDC,PAMDC1,PAMDC2,PAMDC3,PAMDC4
"RTN","PRCHLO3",185,0)
 S PAMDC=0,PAMDC1=0,PAMDC2=0,PAMDC3=0
"RTN","PRCHLO3",186,0)
 F  S PAMDC=$O(^TMP($J,"POAMMDCH",PAMDC)) Q:PAMDC=""  D
"RTN","PRCHLO3",187,0)
 . F  S PAMDC1=$O(^TMP($J,"POAMMDCH",PAMDC,PAMDC1)) Q:PAMDC1=""  D
"RTN","PRCHLO3",188,0)
 . . F  S PAMDC2=$O(^TMP($J,"POAMMDCH",PAMDC,PAMDC1,PAMDC2)) Q:PAMDC2=""  D
"RTN","PRCHLO3",189,0)
 . . . W $G(^TMP($J,"POAMMDCH",PAMDC,PAMDC1,PAMDC2,0)),!
"RTN","PRCHLO3",190,0)
 . . . Q
"RTN","PRCHLO3",191,0)
 . . Q
"RTN","PRCHLO3",192,0)
 . Q
"RTN","PRCHLO3",193,0)
 Q
"RTN","PRCHLO3",194,0)
PAMDDH ; PO Amendment Description Header
"RTN","PRCHLO3",195,0)
 W "PoIdNum^PurchaseOrderNum^PoDate^MonthYrRun^StationNum^"
"RTN","PRCHLO3",196,0)
 W "AmendmentIdNum^AmendmentDescIdNum^Description",!
"RTN","PRCHLO3",197,0)
 Q
"RTN","PRCHLO3",198,0)
 ;
"RTN","PRCHLO3",199,0)
PAMDDW ; PO Amendment Description Write Data
"RTN","PRCHLO3",200,0)
 N PAMD,PAMD1,PAMD2,PAMD3
"RTN","PRCHLO3",201,0)
 S PAMD=0,PAMD1=0,PAMD2=0
"RTN","PRCHLO3",202,0)
 F  S PAMD=$O(^TMP($J,"POAMMDDES",PAMD)) Q:PAMD=""  D
"RTN","PRCHLO3",203,0)
 . F  S PAMD1=$O(^TMP($J,"POAMMDDES",PAMD,PAMD1)) Q:PAMD1=""  D
"RTN","PRCHLO3",204,0)
 . . F  S PAMD2=$O(^TMP($J,"POAMMDDES",PAMD,PAMD1,PAMD2)) Q:PAMD2=""  D
"RTN","PRCHLO3",205,0)
 . . . W $G(^TMP($J,"POAMMDDES",PAMD,PAMD1,PAMD2,0)),!
"RTN","PRCHLO3",206,0)
 . . . Q
"RTN","PRCHLO3",207,0)
 . . Q
"RTN","PRCHLO3",208,0)
 . Q
"RTN","PRCHLO3",209,0)
 Q
"RTN","PRCHLO3",210,0)
PAMTBKW ; Write Breakout Code data
"RTN","PRCHLO3",211,0)
 N BCD,BCD1,BCD2,BCD3
"RTN","PRCHLO3",212,0)
 S BCD=0,BCD1=0,BCD2=0
"RTN","PRCHLO3",213,0)
 F  S BCD=$O(^TMP($J,"POBKCOD",BCD)) Q:BCD=""  D
"RTN","PRCHLO3",214,0)
 . F  S BCD1=$O(^TMP($J,"POBKCOD",BCD,BCD1)) Q:BCD1=""  D
"RTN","PRCHLO3",215,0)
 . . F  S BCD2=$O(^TMP($J,"POBKCOD",BCD,BCD1,BCD2)) Q:BCD2=""  D
"RTN","PRCHLO3",216,0)
 . . . ;
"RTN","PRCHLO3",217,0)
 . . . W $G(^TMP($J,"POBKCOD",BCD,BCD1,BCD2,0)),!
"RTN","PRCHLO3",218,0)
 . . Q
"RTN","PRCHLO3",219,0)
 . Q
"RTN","PRCHLO3",220,0)
 Q
"RTN","PRCHLO4")
0^9^B83540702
"RTN","PRCHLO4",1,0)
PRCHLO4 ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 12/21/05 8:20am
"RTN","PRCHLO4",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO4",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO4",4,0)
 ; Continuation of PRCHLO3
"RTN","PRCHLO4",5,0)
 ;
"RTN","PRCHLO4",6,0)
 ; PRCHLO3 routines are used to Write out the Header and data
"RTN","PRCHLO4",7,0)
 ; associated with each of the 19 tables created for the Clinical
"RTN","PRCHLO4",8,0)
 ; logistics Report Server. The files are built from the extracts
"RTN","PRCHLO4",9,0)
 ; located in the ^TMP($J) global.
"RTN","PRCHLO4",10,0)
 ;
"RTN","PRCHLO4",11,0)
 Q
"RTN","PRCHLO4",12,0)
GETDIR ; Get directory from System parameter for CLRS
"RTN","PRCHLO4",13,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",14,0)
 ;
"RTN","PRCHLO4",15,0)
 Q
"RTN","PRCHLO4",16,0)
CLRSFIL ; Create output files for CLRS
"RTN","PRCHLO4",17,0)
 N FILEDIR
"RTN","PRCHLO4",18,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",19,0)
 ; GET station id
"RTN","PRCHLO4",20,0)
 N STID
"RTN","PRCHLO4",21,0)
 ; S STID=$G(^DD("SITE",1)) Old call
"RTN","PRCHLO4",22,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",23,0)
TSTFIL ; Test entry point
"RTN","PRCHLO4",24,0)
 ;
"RTN","PRCHLO4",25,0)
 D POMASTF  ; Po Master Data
"RTN","PRCHLO4",26,0)
 D POOBF  ; Po Obligation Data
"RTN","PRCHLO4",27,0)
 D POMETHF  ; PO Method of Purchase Data
"RTN","PRCHLO4",28,0)
 D PODISCF  ; PO Discount Data
"RTN","PRCHLO4",29,0)
 D POITMF  ; Po Item Data
"RTN","PRCHLO4",30,0)
 D POITIVF  ; PO Item Inventory Point Data
"RTN","PRCHLO4",31,0)
 D POITDRF  ; PO Item Desc Data
"RTN","PRCHLO4",32,0)
 D PODSCF  ; PO Description
"RTN","PRCHLO4",33,0)
 D POPRTF  ; PO Partial Data
"RTN","PRCHLO4",34,0)
 D PO2237F  ; PO 2237 data
"RTN","PRCHLO4",35,0)
 D POBOCF  ; PO BOC Data
"RTN","PRCHLO4",36,0)
 D POCOMF  ; PO Comments data
"RTN","PRCHLO4",37,0)
 D POREMF  ; PO Remarks data
"RTN","PRCHLO4",38,0)
 D POPPTF  ; PO Prompt Payment Terms data
"RTN","PRCHLO4",39,0)
 D POAMTF  ; PO Amount data
"RTN","PRCHLO4",40,0)
 D POAMDF  ; PO Amemndment Data
"RTN","PRCHLO4",41,0)
 D POAMDCF  ; PO Amendment Changes Data
"RTN","PRCHLO4",42,0)
 D POAMDDF  ; PO Amendment Description Data
"RTN","PRCHLO4",43,0)
 D POAMBKF  ; PO Amount Breakout Code Data
"RTN","PRCHLO4",44,0)
GIPBL1 ; GIP REPORTS
"RTN","PRCHLO4",45,0)
 D BLDGP1^PRCPLO3
"RTN","PRCHLO4",46,0)
 D BLDGP2^PRCPLO3
"RTN","PRCHLO4",47,0)
 Q
"RTN","PRCHLO4",48,0)
POMASTF ; Save PO Master table data to a file to FTP to report Server
"RTN","PRCHLO4",49,0)
 ; build file name
"RTN","PRCHLO4",50,0)
 N OUTFIL1
"RTN","PRCHLO4",51,0)
 S OUTFIL1="IFCP"_STID_"F1.TXT"
"RTN","PRCHLO4",52,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL1,"W")  ; Open the file
"RTN","PRCHLO4",53,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",54,0)
 D POMASTH^PRCHLO3   ; Write the Header to the file
"RTN","PRCHLO4",55,0)
 D POMASTW^PRCHLO3   ; Write the data to the file
"RTN","PRCHLO4",56,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",57,0)
 Q
"RTN","PRCHLO4",58,0)
POOBF ; Create flat file for PO OBLIGATION DATA
"RTN","PRCHLO4",59,0)
 N OUTFIL2
"RTN","PRCHLO4",60,0)
 S OUTFIL2="IFCP"_STID_"F2.TXT"
"RTN","PRCHLO4",61,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL2,"W")  ; Open the file
"RTN","PRCHLO4",62,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",63,0)
 D POOBHD^PRCHLO3
"RTN","PRCHLO4",64,0)
 D POOBW^PRCHLO3
"RTN","PRCHLO4",65,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",66,0)
 Q
"RTN","PRCHLO4",67,0)
POMETHF ; Create flat for for Purchase Order Method
"RTN","PRCHLO4",68,0)
 N OUTFIL3
"RTN","PRCHLO4",69,0)
 S OUTFIL3="IFCP"_STID_"F3.TXT"
"RTN","PRCHLO4",70,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL3,"W")  ; Open the file
"RTN","PRCHLO4",71,0)
 D USE^%ZISUTL("FILE1")  ; Use the file as the output device
"RTN","PRCHLO4",72,0)
 D POPMEH^PRCHLO3
"RTN","PRCHLO4",73,0)
 D POPMEW^PRCHLO3
"RTN","PRCHLO4",74,0)
 D CLOSE^%ZISH("FILE1")  ; Close the file
"RTN","PRCHLO4",75,0)
 Q
"RTN","PRCHLO4",76,0)
PODISCF ; Create flat file for Purchase Order Discount
"RTN","PRCHLO4",77,0)
 N OUTFIL4
"RTN","PRCHLO4",78,0)
 S OUTFIL4="IFCP"_STID_"F4.TXT"
"RTN","PRCHLO4",79,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL4,"W")  ; Open the file
"RTN","PRCHLO4",80,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",81,0)
 D PODISCH^PRCHLO1
"RTN","PRCHLO4",82,0)
 D PODISCW^PRCHLO1
"RTN","PRCHLO4",83,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",84,0)
 Q
"RTN","PRCHLO4",85,0)
POITMF ; Create flat file for PO Item data
"RTN","PRCHLO4",86,0)
 N OUTFIL5
"RTN","PRCHLO4",87,0)
 S OUTFIL5="IFCP"_STID_"F5.TXT"
"RTN","PRCHLO4",88,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL5,"W")  ; Open the file
"RTN","PRCHLO4",89,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",90,0)
 D POITEMH^PRCHLO2
"RTN","PRCHLO4",91,0)
 D POITEMW^PRCHLO2
"RTN","PRCHLO4",92,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",93,0)
 Q
"RTN","PRCHLO4",94,0)
POITIVF ; Create flat file for PO Item inv. point data
"RTN","PRCHLO4",95,0)
 N OUTFIL6
"RTN","PRCHLO4",96,0)
 S OUTFIL6="IFCP"_STID_"F6.TXT"
"RTN","PRCHLO4",97,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL6,"W")  ; Open the file
"RTN","PRCHLO4",98,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",99,0)
 D POITLNH^PRCHLO2
"RTN","PRCHLO4",100,0)
 D POITLNW^PRCHLO2
"RTN","PRCHLO4",101,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",102,0)
 Q
"RTN","PRCHLO4",103,0)
POITDRF ; Create flat file for PO Item date received
"RTN","PRCHLO4",104,0)
 N OUTFIL7
"RTN","PRCHLO4",105,0)
 S OUTFIL7="IFCP"_STID_"F7.TXT"
"RTN","PRCHLO4",106,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL7,"W")  ; Open the file
"RTN","PRCHLO4",107,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",108,0)
 D POITDRCH^PRCHLO2
"RTN","PRCHLO4",109,0)
 D POITDRCW^PRCHLO2
"RTN","PRCHLO4",110,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",111,0)
 Q
"RTN","PRCHLO4",112,0)
PODSCF ; Create flat file for PO item description
"RTN","PRCHLO4",113,0)
 N OUTFIL8
"RTN","PRCHLO4",114,0)
 S OUTFIL8="IFCP"_STID_"F8.TXT"
"RTN","PRCHLO4",115,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL8,"W")  ; Open the file
"RTN","PRCHLO4",116,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",117,0)
 D POITDSH^PRCHLO2
"RTN","PRCHLO4",118,0)
 D POITDSW^PRCHLO2
"RTN","PRCHLO4",119,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",120,0)
 Q
"RTN","PRCHLO4",121,0)
POPRTF ; Create flat file for PO Partial data
"RTN","PRCHLO4",122,0)
 N OUTFIL9
"RTN","PRCHLO4",123,0)
 S OUTFIL9="IFCP"_STID_"F9.TXT"
"RTN","PRCHLO4",124,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL9,"W")  ; Open the file
"RTN","PRCHLO4",125,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",126,0)
 D POPART^PRCHLO3
"RTN","PRCHLO4",127,0)
 D POPARTW^PRCHLO3
"RTN","PRCHLO4",128,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",129,0)
 Q
"RTN","PRCHLO4",130,0)
PO2237F ; Create flat file for 2237 data
"RTN","PRCHLO4",131,0)
 N OUTFIL10
"RTN","PRCHLO4",132,0)
 S OUTFIL10="IFCP"_STID_"F10.TXT"
"RTN","PRCHLO4",133,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL10,"W")  ; Open the file
"RTN","PRCHLO4",134,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",135,0)
 D PO2237H^PRCHLO3
"RTN","PRCHLO4",136,0)
 D PO2237W^PRCHLO3
"RTN","PRCHLO4",137,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",138,0)
 Q
"RTN","PRCHLO4",139,0)
POBOCF ; Create flat file for PO BOC data
"RTN","PRCHLO4",140,0)
 N OUTFIL11
"RTN","PRCHLO4",141,0)
 S OUTFIL11="IFCP"_STID_"F11.TXT"
"RTN","PRCHLO4",142,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL11,"W")
"RTN","PRCHLO4",143,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",144,0)
 D POBOCH^PRCHLO3
"RTN","PRCHLO4",145,0)
 D POBOCW^PRCHLO3
"RTN","PRCHLO4",146,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",147,0)
 Q
"RTN","PRCHLO4",148,0)
POCOMF ; Create flat file for PO Comments
"RTN","PRCHLO4",149,0)
 N OUTFIL12
"RTN","PRCHLO4",150,0)
 S OUTFIL12="IFCP"_STID_"F12.TXT"
"RTN","PRCHLO4",151,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL12,"W")
"RTN","PRCHLO4",152,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",153,0)
 D POCMTSH^PRCHLO3
"RTN","PRCHLO4",154,0)
 D POCMTSW^PRCHLO3
"RTN","PRCHLO4",155,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",156,0)
 Q
"RTN","PRCHLO4",157,0)
POREMF ; Create flat file for PO Remarks
"RTN","PRCHLO4",158,0)
 N OUTFIL13
"RTN","PRCHLO4",159,0)
 S OUTFIL13="IFCP"_STID_"F13.TXT"
"RTN","PRCHLO4",160,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL13,"W")
"RTN","PRCHLO4",161,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",162,0)
 D PORMKH^PRCHLO3
"RTN","PRCHLO4",163,0)
 D PORMKW^PRCHLO3
"RTN","PRCHLO4",164,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",165,0)
 Q
"RTN","PRCHLO4",166,0)
POPPTF ; Create flat file for PO Prompt payment terms data
"RTN","PRCHLO4",167,0)
 N OUTFIL14
"RTN","PRCHLO4",168,0)
 S OUTFIL14="IFCP"_STID_"F14.TXT"
"RTN","PRCHLO4",169,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL14,"W")
"RTN","PRCHLO4",170,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",171,0)
 D POPPTH^PRCHLO3
"RTN","PRCHLO4",172,0)
 D POPPTW^PRCHLO3
"RTN","PRCHLO4",173,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",174,0)
 Q
"RTN","PRCHLO4",175,0)
POAMTF ; Create flat file for PO Amount data
"RTN","PRCHLO4",176,0)
 N OUTFIL15
"RTN","PRCHLO4",177,0)
 S OUTFIL15="IFCP"_STID_"F15.TXT"
"RTN","PRCHLO4",178,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL15,"W")
"RTN","PRCHLO4",179,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",180,0)
 D POAMTH^PRCHLO3
"RTN","PRCHLO4",181,0)
 D POAMTW^PRCHLO3
"RTN","PRCHLO4",182,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",183,0)
 Q
"RTN","PRCHLO4",184,0)
POAMDF ; Create flat file for PO Amendment data
"RTN","PRCHLO4",185,0)
 N OUTFIL16
"RTN","PRCHLO4",186,0)
 S OUTFIL16="IFCP"_STID_"F16.TXT"
"RTN","PRCHLO4",187,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL16,"W")
"RTN","PRCHLO4",188,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",189,0)
 D POAMDH^PRCHLO3
"RTN","PRCHLO4",190,0)
 D POAMDW^PRCHLO3
"RTN","PRCHLO4",191,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",192,0)
 Q
"RTN","PRCHLO4",193,0)
POAMDCF ; Create flat file for PO Amendment changes
"RTN","PRCHLO4",194,0)
 N OUTFIL17
"RTN","PRCHLO4",195,0)
 S OUTFIL17="IFCP"_STID_"F17.TXT"
"RTN","PRCHLO4",196,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL17,"W")
"RTN","PRCHLO4",197,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",198,0)
 D POAMDCH^PRCHLO3
"RTN","PRCHLO4",199,0)
 D POAMDCW^PRCHLO3
"RTN","PRCHLO4",200,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",201,0)
 Q
"RTN","PRCHLO4",202,0)
POAMDDF ; Create flat file for PO Amendment Desc data
"RTN","PRCHLO4",203,0)
 N OUTFIL18
"RTN","PRCHLO4",204,0)
 S OUTFIL18="IFCP"_STID_"F18.TXT"
"RTN","PRCHLO4",205,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL18,"W")
"RTN","PRCHLO4",206,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",207,0)
 D PAMDDH^PRCHLO3
"RTN","PRCHLO4",208,0)
 D PAMDDW^PRCHLO3
"RTN","PRCHLO4",209,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",210,0)
 Q
"RTN","PRCHLO4",211,0)
POAMBKF ; Create flat file for PO amount breakout code
"RTN","PRCHLO4",212,0)
 N OUTFIL19
"RTN","PRCHLO4",213,0)
 S OUTFIL19="IFCP"_STID_"F19.TXT"
"RTN","PRCHLO4",214,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFIL19,"W")
"RTN","PRCHLO4",215,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",216,0)
 D PAMTBKH^PRCHLO3
"RTN","PRCHLO4",217,0)
 D PAMTBKW^PRCHLO3
"RTN","PRCHLO4",218,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",219,0)
 Q
"RTN","PRCHLO4",220,0)
TSTF ; Test directory for file creation
"RTN","PRCHLO4",221,0)
 N FILEDIR,TFILE,OUTFILT,POP,STID
"RTN","PRCHLO4",222,0)
 ; POP is returned by OPEN^%ZISH if file cannot be created.
"RTN","PRCHLO4",223,0)
 S POP=""
"RTN","PRCHLO4",224,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",225,0)
 S OUTFILT="CLRSREADME"_STID_".TXT"
"RTN","PRCHLO4",226,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",227,0)
 D OPEN^%ZISH("TFILE",FILEDIR,OUTFILT,"W")
"RTN","PRCHLO4",228,0)
 I POP  D
"RTN","PRCHLO4",229,0)
 . S CLRSERR=2
"RTN","PRCHLO4",230,0)
 . Q
"RTN","PRCHLO4",231,0)
 I CLRSERR'=2  D
"RTN","PRCHLO4",232,0)
 . D USE^%ZISUTL("TFILE")
"RTN","PRCHLO4",233,0)
 . W !,"$ ! This directory is used to store PO activity"
"RTN","PRCHLO4",234,0)
 . W !,"$ ! extracts and GIP Extracts which are transmitted"
"RTN","PRCHLO4",235,0)
 . W !,"$ ! to the Clinical Logistics Report Server on a monthly"
"RTN","PRCHLO4",236,0)
 . W !,"$ ! basis. There are 21 extract files IFCPXXXF1 through"
"RTN","PRCHLO4",237,0)
 . W !,"$ ! IFCPXXXF19, IFCPXXXG1 and IFCPXXXG2. In addition, there"
"RTN","PRCHLO4",238,0)
 . W !,"$ ! are 2 working files used for the FTP Transfer:"
"RTN","PRCHLO4",239,0)
 . W !,"$ ! CLRSxxx.DAT and CLRS1xxx.COM. CLRSREADMExxx.TXT is also present"
"RTN","PRCHLO4",240,0)
 . W !,"$ EXIT"
"RTN","PRCHLO4",241,0)
 . D CLOSE^%ZISH("TFILE")
"RTN","PRCHLO4",242,0)
 . Q
"RTN","PRCHLO4",243,0)
 Q
"RTN","PRCHLO4",244,0)
 ;
"RTN","PRCHLO4",245,0)
CRTCOM ; Create .DAT file to transfer file(s)
"RTN","PRCHLO4",246,0)
 N FILEDIR,POP,STID,OUTFLL1
"RTN","PRCHLO4",247,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",248,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4",249,0)
 ; S FILEDIR="$1$DGA2:[ANONYMOUS.CLRS]"  ;set dir for outpt files.
"RTN","PRCHLO4",250,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",251,0)
 S OUTFLL1="CLRS"_STID_"FTP.DAT"
"RTN","PRCHLO4",252,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4",253,0)
 I POP  D
"RTN","PRCHLO4",254,0)
 . S CLRSERR=3
"RTN","PRCHLO4",255,0)
 . Q
"RTN","PRCHLO4",256,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4",257,0)
 . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",258,0)
 . W "clrsadmin",!  ; Enter user name for Report Server Login
"RTN","PRCHLO4",259,0)
 . W "1025clrs",!  ;pw=1025clrs Enter P/W for Report Server Login
"RTN","PRCHLO4",260,0)
 . ; W "SET DEFAULT /LOCAL $1$DGA2:[ANONYMOUS.CLRS]",!
"RTN","PRCHLO4",261,0)
 . W "SET DEFAULT /LOCAL "_FILEDIR,!
"RTN","PRCHLO4",262,0)
 . W "PUT IFCP"_STID_"*.*;*",!  ; new code to issue PUT command
"RTN","PRCHLO4",263,0)
 . W "EXIT",!  ; Exit FTP
"RTN","PRCHLO4",264,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",265,0)
 . Q
"RTN","PRCHLO4",266,0)
 Q
"RTN","PRCHLO4",267,0)
CRTCOM1 ; Run CLRSFTP1.COM as com file for exception handling
"RTN","PRCHLO4",268,0)
 ;
"RTN","PRCHLO4",269,0)
 N FILEDIR,STID,OUTFLL2
"RTN","PRCHLO4",270,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",271,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",272,0)
 S OUTFLL2="CLRS"_STID_"FTP1.COM"
"RTN","PRCHLO4",273,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4",274,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4",275,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4",276,0)
 ; W "$ SET DEFAULT $1$DGA2:[ANONYMOUS.CLRS]",!
"RTN","PRCHLO4",277,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4",278,0)
 W "$ FTP 10.128.102.204 /INPUT="_FILEDIR_"CLRS"_STID_"FTP.DAT",!
"RTN","PRCHLO4",279,0)
 ; force error W "$ FTP 10.128.102.999 /INPUT="_FILEDIR_"CLRS"_STID_"FTP.DAT",!
"RTN","PRCHLO4",280,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4",281,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4",282,0)
 Q
"RTN","PRCHLO4",283,0)
FTPCOM ; Issue the FTP command after CLRS1.TXT file is built
"RTN","PRCHLO4",284,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4",285,0)
 ; $ZF(-1) call
"RTN","PRCHLO4",286,0)
 ; ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4",287,0)
 ; See IFCAP technical manual
"RTN","PRCHLO4",288,0)
 ;
"RTN","PRCHLO4",289,0)
 ; commented out for testing
"RTN","PRCHLO4",290,0)
 ; add hook to mailman messaging for ftp, check variable PV
"RTN","PRCHLO4",291,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4",292,0)
 ;
"RTN","PRCHLO4",293,0)
 ;
"RTN","PRCHLO4",294,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4",295,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4",296,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"FTP1.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"FTP1.LOG"")"
"RTN","PRCHLO4",297,0)
 X XPV1  ; Run the .COM file to transfer files
"RTN","PRCHLO4",298,0)
 ;
"RTN","PRCHLO4",299,0)
 ; Error flag logic
"RTN","PRCHLO4",300,0)
 I PV=-1  D  ; This error is generated if failure during xfer occurs
"RTN","PRCHLO4",301,0)
 . S CLRSERR=1
"RTN","PRCHLO4",302,0)
 . Q
"RTN","PRCHLO4",303,0)
 Q
"RTN","PRCHLO4A")
0^18^B45155553
"RTN","PRCHLO4A",1,0)
PRCHLO4A ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 12/26/05 10:59pm
"RTN","PRCHLO4A",2,0)
V ;;5.1;IFCAP;**83**;; Oct 20, 2000
"RTN","PRCHLO4A",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO4A",4,0)
 ; Continuation of PRCHLO4
"RTN","PRCHLO4A",5,0)
 ;
"RTN","PRCHLO4A",6,0)
 ; PRCHLO4A routines are used to Write out the Header and data
"RTN","PRCHLO4A",7,0)
 ;
"RTN","PRCHLO4A",8,0)
 Q
"RTN","PRCHLO4A",9,0)
GETDIR ; Get directory from PRCPLO EXTRACT DIRECTORY system parameter for CLRS
"RTN","PRCHLO4A",10,0)
 N FILEDIR,STID
"RTN","PRCHLO4A",11,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",12,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",13,0)
 ;
"RTN","PRCHLO4A",14,0)
 Q
"RTN","PRCHLO4A",15,0)
 ;
"RTN","PRCHLO4A",16,0)
CRTWIN ; Create CLRSxxxWFTP.TXT  file to transfer file(s)
"RTN","PRCHLO4A",17,0)
 N FILEDIR,POP,STID,OUTFLL1
"RTN","PRCHLO4A",18,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",19,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4A",20,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",21,0)
 S OUTFLL1="CLRS"_STID_"WFTP.TXT"
"RTN","PRCHLO4A",22,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",23,0)
 I POP  D
"RTN","PRCHLO4A",24,0)
 . S CLRSERR=3
"RTN","PRCHLO4A",25,0)
 . Q
"RTN","PRCHLO4A",26,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",27,0)
 . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",28,0)
 . W "open 10.128.102.204",!   ; Connect to the Report Server
"RTN","PRCHLO4A",29,0)
 . W "clrsadmin",!  ; Enter user name for Report Server Login
"RTN","PRCHLO4A",30,0)
 . W "1025clrs",!  ;pw=1025clrs Enter P/W for Report Server Login
"RTN","PRCHLO4A",31,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F1.TXT",!
"RTN","PRCHLO4A",32,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F2.TXT",!
"RTN","PRCHLO4A",33,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F3.TXT",!
"RTN","PRCHLO4A",34,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F4.TXT",!
"RTN","PRCHLO4A",35,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F5.TXT",!
"RTN","PRCHLO4A",36,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F6.TXT",!
"RTN","PRCHLO4A",37,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F7.TXT",!
"RTN","PRCHLO4A",38,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F8.TXT",!
"RTN","PRCHLO4A",39,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F9.TXT",!
"RTN","PRCHLO4A",40,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F10.TXT",!
"RTN","PRCHLO4A",41,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F11.TXT",!
"RTN","PRCHLO4A",42,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F12.TXT",!
"RTN","PRCHLO4A",43,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F13.TXT",!
"RTN","PRCHLO4A",44,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F14.TXT",!
"RTN","PRCHLO4A",45,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F15.TXT",!
"RTN","PRCHLO4A",46,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F16.TXT",!
"RTN","PRCHLO4A",47,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F17.TXT",!
"RTN","PRCHLO4A",48,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F18.TXT",!
"RTN","PRCHLO4A",49,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"F19.TXT",!
"RTN","PRCHLO4A",50,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"G1.TXT",!
"RTN","PRCHLO4A",51,0)
 . W "PUT "_FILEDIR_"IFCP"_STID_"G2.TXT",!
"RTN","PRCHLO4A",52,0)
 . W "PUT "_FILEDIR_"CLRS"_STID_"FTP1.LOG",!
"RTN","PRCHLO4A",53,0)
 . W "bye",!  ; Exit FTP
"RTN","PRCHLO4A",54,0)
 . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",55,0)
 . Q
"RTN","PRCHLO4A",56,0)
 Q
"RTN","PRCHLO4A",57,0)
CKRPTSV ; Check for availability of report server
"RTN","PRCHLO4A",58,0)
 ; Several steps need to be performed
"RTN","PRCHLO4A",59,0)
 ; 1. Set up script to perform PING
"RTN","PRCHLO4A",60,0)
 ; 2. Capture log file during PING
"RTN","PRCHLO4A",61,0)
 ; 3. Read logfile into working global
"RTN","PRCHLO4A",62,0)
 ; 4. Determine Success/Failure of PING to server
"RTN","PRCHLO4A",63,0)
 ; 5. If successful, continue processing (CLRSERR=0)
"RTN","PRCHLO4A",64,0)
 ; 6. If problem occurs, S CLRSERR=3 and generate message
"RTN","PRCHLO4A",65,0)
 ;
"RTN","PRCHLO4A",66,0)
 I CKOS["VMS" D VMSPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",67,0)
 I CKOS["NT" D WINPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",68,0)
 Q
"RTN","PRCHLO4A",69,0)
VMSPING ; need to PING report server to make sure it is available
"RTN","PRCHLO4A",70,0)
 ;
"RTN","PRCHLO4A",71,0)
 ; 1. Create .COM file to execute
"RTN","PRCHLO4A",72,0)
 N FILEDIR,STID,OUTFLL2
"RTN","PRCHLO4A",73,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",74,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",75,0)
 S OUTFLL2="CLRS"_STID_"PING.COM"
"RTN","PRCHLO4A",76,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4A",77,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",78,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4A",79,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4A",80,0)
 W "$ TCPIP",!
"RTN","PRCHLO4A",81,0)
 W "PING 10.128.102.204",!
"RTN","PRCHLO4A",82,0)
 W "EXIT",!
"RTN","PRCHLO4A",83,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4A",84,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",85,0)
 ;
"RTN","PRCHLO4A",86,0)
 ;
"RTN","PRCHLO4A",87,0)
 ; 2. Execute .COM file, create logfile
"RTN","PRCHLO4A",88,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"PING.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",89,0)
 X XPV1  ; Run the .com file
"RTN","PRCHLO4A",90,0)
 ;Q
"RTN","PRCHLO4A",91,0)
 ; 3. Read Logfile into working global
"RTN","PRCHLO4A",92,0)
 N FNAME,XLOG
"RTN","PRCHLO4A",93,0)
 ; S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",94,0)
 ; S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",95,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",96,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("CLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",97,0)
 ; Check global for %SYSTEM or 0 packets received
"RTN","PRCHLO4A",98,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",99,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",100,0)
 F  S PNG=$O(^TMP("CLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",101,0)
 . S PNG1=$G(^TMP("CLRSLOG",$J,PNG))
"RTN","PRCHLO4A",102,0)
 . I PNG1["0 packets received" S CLRSERR=3
"RTN","PRCHLO4A",103,0)
 . I PNG1["%SYSTEM" S CLRSERR=3
"RTN","PRCHLO4A",104,0)
 . Q
"RTN","PRCHLO4A",105,0)
 Q
"RTN","PRCHLO4A",106,0)
WINPING ; PING report server to make sure it is available
"RTN","PRCHLO4A",107,0)
 N PV,XPV1,FILEDIR,STID,XLOG
"RTN","PRCHLO4A",108,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",109,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",110,0)
 S XPV1="S PV=$ZF(-1,""PING 10.128.102.204>"_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",111,0)
 X XPV1
"RTN","PRCHLO4A",112,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",113,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("CLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",114,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",115,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",116,0)
 F  S PNG=$O(^TMP("CLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",117,0)
 . S PNG1=$G(^TMP("CLRSLOG",$J,PNG))
"RTN","PRCHLO4A",118,0)
 . I PNG1["Received = 0" S CLRSERR=3
"RTN","PRCHLO4A",119,0)
 . Q
"RTN","PRCHLO4A",120,0)
 Q
"RTN","PRCHLO4A",121,0)
 ;
"RTN","PRCHLO4A",122,0)
LOG2FILE ; Set logfile to global, add to mail message
"RTN","PRCHLO4A",123,0)
 ;
"RTN","PRCHLO4A",124,0)
 ;
"RTN","PRCHLO4A",125,0)
 N FILEDIR,STID,FNAME,XLOG
"RTN","PRCHLO4A",126,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",127,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",128,0)
 S FNAME="CLRS"_STID_"FTP1.LOG"
"RTN","PRCHLO4A",129,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCHLOG",$J,1)),3)
"RTN","PRCHLO4A",130,0)
 ; Log file is in the global ^TMP("PRCHLOG", lets put it in
"RTN","PRCHLO4A",131,0)
 ; the message beginning at PRCPMSG(11)
"RTN","PRCHLO4A",132,0)
 ;
"RTN","PRCHLO4A",133,0)
 N LG1,LG2,LG3,LG4,LGCNT
"RTN","PRCHLO4A",134,0)
 S LG1=0,LG2=0,LG3=0,LG4=0,LGCNT=11
"RTN","PRCHLO4A",135,0)
 F  S LG1=$O(^TMP("PRCHLOG",$J,LG1)) Q:LG1=""  D
"RTN","PRCHLO4A",136,0)
 . S LG3=$G(^TMP("PRCHLOG",$J,LG1))
"RTN","PRCHLO4A",137,0)
 . S PRCPMSG(LGCNT)=LG3
"RTN","PRCHLO4A",138,0)
 . S LGCNT=LGCNT+1
"RTN","PRCHLO4A",139,0)
 . Q
"RTN","PRCHLO4A",140,0)
 D MAILFTP^PRCHLO5
"RTN","PRCHLO4A",141,0)
 Q
"RTN","PRCHLO4A",142,0)
FTPCOM ; Issue the FTP command after CLRSxxxWFTP.TXT file is built
"RTN","PRCHLO4A",143,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4A",144,0)
 ; $ZF(-1) call
"RTN","PRCHLO4A",145,0)
 ;
"RTN","PRCHLO4A",146,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4A",147,0)
 ;
"RTN","PRCHLO4A",148,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",149,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",150,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4A",151,0)
 ; See IFCAP Technical Manual
"RTN","PRCHLO4A",152,0)
 S XPV1="S PV=$ZF(-1,""ftp -s:"_FILEDIR_"CLRS"_STID_"WFTP.TXT>"_FILEDIR_"CLRS"_STID_"FTP1.LOG"")"
"RTN","PRCHLO4A",153,0)
 X XPV1  ; FTP the files
"RTN","PRCHLO4A",154,0)
 ;
"RTN","PRCHLO4A",155,0)
 ; error flag logic
"RTN","PRCHLO4A",156,0)
 I PV=-1  D  ; Note, this error is logged on system error during xfer
"RTN","PRCHLO4A",157,0)
 . S CLRSERR=1
"RTN","PRCHLO4A",158,0)
 . Q
"RTN","PRCHLO4A",159,0)
 Q
"RTN","PRCHLO4A",160,0)
DELWIN ; Delete windows files
"RTN","PRCHLO4A",161,0)
 ;
"RTN","PRCHLO4A",162,0)
 ;
"RTN","PRCHLO4A",163,0)
 I CKOS["NT"  D
"RTN","PRCHLO4A",164,0)
 . N PV,PV1,XPV,XPV1
"RTN","PRCHLO4A",165,0)
 . Q:CLRSERR'=0
"RTN","PRCHLO4A",166,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F1.TXT"")" X XPV
"RTN","PRCHLO4A",167,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F2.TXT"")" X XPV
"RTN","PRCHLO4A",168,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F3.TXT"")" X XPV
"RTN","PRCHLO4A",169,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F4.TXT"")" X XPV
"RTN","PRCHLO4A",170,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F5.TXT"")" X XPV
"RTN","PRCHLO4A",171,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F6.TXT"")" X XPV
"RTN","PRCHLO4A",172,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F7.TXT"")" X XPV
"RTN","PRCHLO4A",173,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F8.TXT"")" X XPV
"RTN","PRCHLO4A",174,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F9.TXT"")" X XPV
"RTN","PRCHLO4A",175,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F10.TXT"")" X XPV
"RTN","PRCHLO4A",176,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F11.TXT"")" X XPV
"RTN","PRCHLO4A",177,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F12.TXT"")" X XPV
"RTN","PRCHLO4A",178,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F13.TXT"")" X XPV
"RTN","PRCHLO4A",179,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F14.TXT"")" X XPV
"RTN","PRCHLO4A",180,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F15.TXT"")" X XPV
"RTN","PRCHLO4A",181,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F16.TXT"")" X XPV
"RTN","PRCHLO4A",182,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F17.TXT"")" X XPV
"RTN","PRCHLO4A",183,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F18.TXT"")" X XPV
"RTN","PRCHLO4A",184,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"F19.TXT"")" X XPV
"RTN","PRCHLO4A",185,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"G1.TXT"")" X XPV
"RTN","PRCHLO4A",186,0)
 . S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_"G2.TXT"")" X XPV
"RTN","PRCHLO4A",187,0)
 . Q
"RTN","PRCHLO4A",188,0)
 Q
"RTN","PRCHLO5")
0^13^B93753886
"RTN","PRCHLO5",1,0)
PRCHLO5 ;WOIFO/DAP/RLL-manual run for procurement reports  ; 12/22/05 12:04pm
"RTN","PRCHLO5",2,0)
V ;;5.1;IFCAP;**83**;Oct 20,2000
"RTN","PRCHLO5",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO5",4,0)
 ;
"RTN","PRCHLO5",5,0)
ENT ;This routine tasks out the execution of the procurement extract 
"RTN","PRCHLO5",6,0)
 ;reports associated with PRC*5.1*83 (CLRS).
"RTN","PRCHLO5",7,0)
 ;
"RTN","PRCHLO5",8,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,PRCHPRO,ZTSK,ZTREQ,PRCPMSG
"RTN","PRCHLO5",9,0)
 S ZTRTN="RUNEXT^PRCHLO5"
"RTN","PRCHLO5",10,0)
 S ZTDESC="PRCPLO CLO Procurement Reports CLRS"
"RTN","PRCHLO5",11,0)
 S ZTDTH=$H
"RTN","PRCHLO5",12,0)
 S ZTREQ="@"
"RTN","PRCHLO5",13,0)
 S ZTIO=""
"RTN","PRCHLO5",14,0)
 D ^%ZTLOAD
"RTN","PRCHLO5",15,0)
 S PRCHPRO=ZTSK
"RTN","PRCHLO5",16,0)
 ;Calls mail group message generation and screen display with success
"RTN","PRCHLO5",17,0)
 ;or exception notification
"RTN","PRCHLO5",18,0)
 I $D(PRCHPRO)[0 S PRCPMSG(1)="A task could not be created for the CLO Procurement Reports - please contact IRM." W ! D EN^DDIOL(PRCPMSG(1)) D MAIL Q
"RTN","PRCHLO5",19,0)
 ; 
"RTN","PRCHLO5",20,0)
 S PRCPMSG(1)="Task # "_PRCHPRO_" entered for Procurement Reports."
"RTN","PRCHLO5",21,0)
 W !
"RTN","PRCHLO5",22,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCHLO5",23,0)
 D MAIL
"RTN","PRCHLO5",24,0)
 ;
"RTN","PRCHLO5",25,0)
 Q
"RTN","PRCHLO5",26,0)
PRCPCMP ; Notification of completion of building Procurement Report Data
"RTN","PRCHLO5",27,0)
 N PRCPMSG
"RTN","PRCHLO5",28,0)
 S PRCPMSG(1)="PO Procurement Data extract complete."
"RTN","PRCHLO5",29,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCHLO5",30,0)
 D MAIL^PRCHLO5
"RTN","PRCHLO5",31,0)
 Q
"RTN","PRCHLO5",32,0)
 ;
"RTN","PRCHLO5",33,0)
MAIL ;Builds mail messages to a defined mail group to notify users of the
"RTN","PRCHLO5",34,0)
 ;success or failure of the TaskMan scheduling for the CLO Procurement
"RTN","PRCHLO5",35,0)
 ;Reports
"RTN","PRCHLO5",36,0)
 ;
"RTN","PRCHLO5",37,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ
"RTN","PRCHLO5",38,0)
 S XMSUB="CLO Procurement Report Status for "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",39,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO5",40,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO5",41,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO5",42,0)
 ;
"RTN","PRCHLO5",43,0)
 D ^XMD
"RTN","PRCHLO5",44,0)
 Q
"RTN","PRCHLO5",45,0)
 ;
"RTN","PRCHLO5",46,0)
MAILFTP ; Builds mail messages to a defined mail group to notify users of
"RTN","PRCHLO5",47,0)
 ; the success or failue of issues pertaining to FTP Transfer and
"RTN","PRCHLO5",48,0)
 ; file permissions/protections associated with VMS Directories
"RTN","PRCHLO5",49,0)
 ;
"RTN","PRCHLO5",50,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ
"RTN","PRCHLO5",51,0)
 S XMSUB="CLO Environment Check & Data Transfer for OS / FTP , "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",52,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCHLO5",53,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCHLO5",54,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCHLO5",55,0)
 D ^XMD
"RTN","PRCHLO5",56,0)
 Q
"RTN","PRCHLO5",57,0)
RUNEXT ; Run extract reports for PO Activity
"RTN","PRCHLO5",58,0)
 N CLRSERR,CLRSTST1  ; error flag for exception handling,tst entry pt.
"RTN","PRCHLO5",59,0)
 ; CLRSERR will be set for the following conditions:
"RTN","PRCHLO5",60,0)
 ; 0 - Success, status message for completion is sent.
"RTN","PRCHLO5",61,0)
 ; 1 - Error creating ^TMP($J) data (i.e. disk full)
"RTN","PRCHLO5",62,0)
 ; 2 - Error creating Files(i.e. directory patch, VMS Space, etc.)
"RTN","PRCHLO5",63,0)
 ; 3 - Error creating .Com file for FTP transfer, permissions issue
"RTN","PRCHLO5",64,0)
 ; 4 - Error with FTP Transfer,ntwk/permissions, Report Server issue
"RTN","PRCHLO5",65,0)
 ; 5 - Error with file deletion/cleanup prior to processing
"RTN","PRCHLO5",66,0)
 ; 6 - Error, lock is present. Process already running
"RTN","PRCHLO5",67,0)
 S CLRSERR=0
"RTN","PRCHLO5",68,0)
TSTMSG ; This entry point is used to test the messaging framework
"RTN","PRCHLO5",69,0)
 ;  S SLRSTST1=1
"RTN","PRCHLO5",70,0)
 S CLRSERR=0
"RTN","PRCHLO5",71,0)
 ; Check for O/S version
"RTN","PRCHLO5",72,0)
 N CKOS
"RTN","PRCHLO5",73,0)
 S CKOS=$$OS^%ZOSV()
"RTN","PRCHLO5",74,0)
 ; use lock to prevent mult. runs
"RTN","PRCHLO5",75,0)
 L +^PRCP(446.7,"STATUS"):3 I $T=0 S CLRSERR=6
"RTN","PRCHLO5",76,0)
 I CLRSERR=0 D DELRUN^PRCHLO5
"RTN","PRCHLO5",77,0)
 I CLRSERR=5  D
"RTN","PRCHLO5",78,0)
 . N PRCPMSG
"RTN","PRCHLO5",79,0)
 . S PRCPMSG(1)="Error with file deletion/cleanup prior to processing. Please contact IRM."
"RTN","PRCHLO5",80,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",81,0)
 . S PRCPMSG(3)="This error indicates the CLRS EXTRACT DIRECTORY has not"
"RTN","PRCHLO5",82,0)
 . S PRCPMSG(4)="been properly set up during the installation of this patch."
"RTN","PRCHLO5",83,0)
 . S PRCPMSG(5)=" "
"RTN","PRCHLO5",84,0)
 . S PRCPMSG(6)="(Please refer to the pre installation instructions for PRC*5.1*83)"
"RTN","PRCHLO5",85,0)
 . S PRCPMSG(7)=" "
"RTN","PRCHLO5",86,0)
 . S PRCPMSG(8)="A valid directory must be set up with the"
"RTN","PRCHLO5",87,0)
 . S PRCPMSG(9)="proper read/write/execute/delete privileges."
"RTN","PRCHLO5",88,0)
 . S PRCPMSG(10)=" "
"RTN","PRCHLO5",89,0)
 . S PRCPMSG(11)="In addition, the directory name which you create"
"RTN","PRCHLO5",90,0)
 . S PRCPMSG(12)="must be added as the CLRS EXTRACT DIRECTORY"
"RTN","PRCHLO5",91,0)
 . S PRCPMSG(13)="through the CLO System Parameters Option."
"RTN","PRCHLO5",92,0)
 . S PRCPMSG(14)="If the field is blank, you will generate this error."
"RTN","PRCHLO5",93,0)
 . S PRCPMSG(15)=" "
"RTN","PRCHLO5",94,0)
 . S PRCPMSG(16)="Please confirm all steps have been performed"
"RTN","PRCHLO5",95,0)
 . S PRCPMSG(17)="according to the pre installation instructions for patch PRC*5.1*83."
"RTN","PRCHLO5",96,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",97,0)
 . Q
"RTN","PRCHLO5",98,0)
 ; Begin to build files
"RTN","PRCHLO5",99,0)
 I CLRSERR=0 D INIT^PRCHLO
"RTN","PRCHLO5",100,0)
 I CLRSERR=0 D PRCPCMP^PRCHLO5  ; PO activity Extract logic completed
"RTN","PRCHLO5",101,0)
 I $D(CLRSTST1)  D  ; test point to generate message 1
"RTN","PRCHLO5",102,0)
 . Q:CLRSTST1'=1
"RTN","PRCHLO5",103,0)
 . S CLRSERR=1
"RTN","PRCHLO5",104,0)
 . Q
"RTN","PRCHLO5",105,0)
 I CLRSERR=1  D
"RTN","PRCHLO5",106,0)
 . N PRCPMSG  ; error building ^TMP($J)
"RTN","PRCHLO5",107,0)
 . S PRCPMSG(1)="Error, No Data for PO Activity Files, contact IRM"
"RTN","PRCHLO5",108,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",109,0)
 . Q
"RTN","PRCHLO5",110,0)
CRFILE ; Create .txt file to confirm write priveldges to directory
"RTN","PRCHLO5",111,0)
 I CLRSERR=0 D TSTF^PRCHLO4  ; will return CLRSERR=2 on error
"RTN","PRCHLO5",112,0)
 I CLRSERR=0 D CLRSFIL^PRCHLO4
"RTN","PRCHLO5",113,0)
 I CLRSERR=2  D
"RTN","PRCHLO5",114,0)
 . N PRCPMSG
"RTN","PRCHLO5",115,0)
 . S PRCPMSG(1)="Error, Problem with FTP File Creation, contact IRM"
"RTN","PRCHLO5",116,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",117,0)
 . Q
"RTN","PRCHLO5",118,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",119,0)
 . N PRCPMSG
"RTN","PRCHLO5",120,0)
 . S PRCPMSG(1)="Built PO Activity Extracts and GIP Extracts for transfer"
"RTN","PRCHLO5",121,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",122,0)
 . Q
"RTN","PRCHLO5",123,0)
 I CKOS["VMS"  D
"RTN","PRCHLO5",124,0)
 . I CLRSERR=0 D CRTCOM^PRCHLO4
"RTN","PRCHLO5",125,0)
 . Q
"RTN","PRCHLO5",126,0)
 I CKOS["NT"  D
"RTN","PRCHLO5",127,0)
 . I CLRSERR=0 D CRTWIN^PRCHLO4A
"RTN","PRCHLO5",128,0)
 . Q
"RTN","PRCHLO5",129,0)
 I CLRSERR=6  D
"RTN","PRCHLO5",130,0)
 . N PRCPMSG
"RTN","PRCHLO5",131,0)
 . S PRCPMSG(1)="Error encountered when attempting to run CLO PO"
"RTN","PRCHLO5",132,0)
 . S PRCPMSG(2)="activity reports due to other CLRS extracts in"
"RTN","PRCHLO5",133,0)
 . S PRCPMSG(3)="progress. Please try again later."
"RTN","PRCHLO5",134,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",135,0)
 . Q
"RTN","PRCHLO5",136,0)
 I $D(CLRSTST1)  D  ; test point to generate message 3
"RTN","PRCHLO5",137,0)
 . Q:CLRSTST1'=3
"RTN","PRCHLO5",138,0)
 . S CLRSERR=3
"RTN","PRCHLO5",139,0)
 . Q
"RTN","PRCHLO5",140,0)
 I CLRSERR=0 D CKRPTSV^PRCHLO4A  ;ping report server for availability
"RTN","PRCHLO5",141,0)
 I CLRSERR=3  D
"RTN","PRCHLO5",142,0)
 . N PRCPMSG
"RTN","PRCHLO5",143,0)
 . S PRCPMSG(1)="Error, problem creating SETUP file for FTP Transfer, contact IRM."
"RTN","PRCHLO5",144,0)
 . S PRCPMSG(2)="The Report Server may be unavailable for processing."
"RTN","PRCHLO5",145,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",146,0)
 . Q
"RTN","PRCHLO5",147,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",148,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",149,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",150,0)
 . S PRCPMSG(1)="Final FTP Setup complete, beginning FTP Transfer"
"RTN","PRCHLO5",151,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",152,0)
 . S PRCPMSG(3)="The file transfer to the report server has been initiated."
"RTN","PRCHLO5",153,0)
 . S PRCPMSG(4)="You will be receiving a notification that the FTP"
"RTN","PRCHLO5",154,0)
 . S PRCPMSG(5)="process has completed. The notification message"
"RTN","PRCHLO5",155,0)
 . S PRCPMSG(6)="should be received within the hour.  If you do not"
"RTN","PRCHLO5",156,0)
 . S PRCPMSG(7)="receive the FTP process has completed message,"
"RTN","PRCHLO5",157,0)
 . S PRCPMSG(8)="please contact IRM. IRM can confirm the process"
"RTN","PRCHLO5",158,0)
 . S PRCPMSG(9)="is still running by performing the following"
"RTN","PRCHLO5",159,0)
 . S PRCPMSG(10)="command:"
"RTN","PRCHLO5",160,0)
 . S PRCPMSG(11)=" "
"RTN","PRCHLO5",161,0)
 . S PRCPMSG(12)="At the MUMPS Programmer prompt, type D ^%SS"
"RTN","PRCHLO5",162,0)
 . S PRCPMSG(13)=" "
"RTN","PRCHLO5",163,0)
 . S PRCPMSG(14)="See if there are any PRCHLO* routines running."
"RTN","PRCHLO5",164,0)
 . S PRCPMSG(15)=" "
"RTN","PRCHLO5",165,0)
 . S PRCPMSG(16)="If these routines are present, the process is still"
"RTN","PRCHLO5",166,0)
 . S PRCPMSG(17)="running. If you waited one hour, and did not get the"
"RTN","PRCHLO5",167,0)
 . S PRCPMSG(18)="FTP process has completed message, a problem"
"RTN","PRCHLO5",168,0)
 . S PRCPMSG(19)="was encountered. Further troubleshooting can be"
"RTN","PRCHLO5",169,0)
 . S PRCPMSG(20)="performed by examining the LOGFILE CLRSxxxFTP1.LOG"
"RTN","PRCHLO5",170,0)
 . S PRCPMSG(21)="where xxx is your station ID#. The logfile is"
"RTN","PRCHLO5",171,0)
 . S PRCPMSG(22)="located in the following directory: "_FILEDIR
"RTN","PRCHLO5",172,0)
 . S PRCPMSG(23)=" "
"RTN","PRCHLO5",173,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",174,0)
 . Q
"RTN","PRCHLO5",175,0)
 I CKOS["VMS"  D
"RTN","PRCHLO5",176,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",177,0)
 . . D CRTCOM1^PRCHLO4
"RTN","PRCHLO5",178,0)
 . . D FTPCOM^PRCHLO4
"RTN","PRCHLO5",179,0)
 . . Q
"RTN","PRCHLO5",180,0)
 . Q
"RTN","PRCHLO5",181,0)
 I CKOS["NT"  D
"RTN","PRCHLO5",182,0)
 . I CLRSERR=0  D
"RTN","PRCHLO5",183,0)
 . . D CRTWIN^PRCHLO4A
"RTN","PRCHLO5",184,0)
 . . D FTPCOM^PRCHLO4A
"RTN","PRCHLO5",185,0)
 . . Q
"RTN","PRCHLO5",186,0)
 . Q
"RTN","PRCHLO5",187,0)
 ; release the lock
"RTN","PRCHLO5",188,0)
 L -^PRCP(446.7,"STATUS")
"RTN","PRCHLO5",189,0)
 I CLRSERR=4  D
"RTN","PRCHLO5",190,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",191,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",192,0)
 . S PRCPMSG(1)="An Error occurred during the FTP Transfer "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",193,0)
 . S PRCPMSG(2)="Contact IRM to perform troubleshooting steps"
"RTN","PRCHLO5",194,0)
 . S PRCPMSG(3)="by examining the logfile CLRSxxxFTP1.LOG where"
"RTN","PRCHLO5",195,0)
 . S PRCPMSG(4)="xxx is your station number. The logfile is located"
"RTN","PRCHLO5",196,0)
 . S PRCPMSG(5)="the FTP directory "_FILEDIR
"RTN","PRCHLO5",197,0)
 . S PRCPMSG(6)=" "
"RTN","PRCHLO5",198,0)
 . D MAILFTP^PRCHLO5
"RTN","PRCHLO5",199,0)
 . Q
"RTN","PRCHLO5",200,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",201,0)
 . N PRCPMSG,FILEDIR
"RTN","PRCHLO5",202,0)
 . S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",203,0)
 . S PRCPMSG(1)="The FTP Transfer process completed, "_$$HTE^XLFDT($H)
"RTN","PRCHLO5",204,0)
 . S PRCPMSG(2)=" "
"RTN","PRCHLO5",205,0)
 . S PRCPMSG(3)="The Clinical Logistics 0ffice should examine the Report Server"
"RTN","PRCHLO5",206,0)
 . S PRCPMSG(4)="FTP directory for your files. If the files from your"
"RTN","PRCHLO5",207,0)
 . S PRCPMSG(5)="station are not found, IRM can provide additional"
"RTN","PRCHLO5",208,0)
 . S PRCPMSG(6)="troubleshooting steps by examining the LOGFILE"
"RTN","PRCHLO5",209,0)
 . S PRCPMSG(7)="CLRSxxxFTP1.LOG where xxx is your station number."
"RTN","PRCHLO5",210,0)
 . S PRCPMSG(8)="The logfile is located in the directory: "_FILEDIR
"RTN","PRCHLO5",211,0)
 . S PRCPMSG(9)=" "
"RTN","PRCHLO5",212,0)
 . S PRCPMSG(10)="The contents of the logfile are listed below:"
"RTN","PRCHLO5",213,0)
 . D LOG2FILE^PRCHLO4A
"RTN","PRCHLO5",214,0)
 . Q
"RTN","PRCHLO5",215,0)
 ; CLEAN UP
"RTN","PRCHLO5",216,0)
 K ^TMP($J)
"RTN","PRCHLO5",217,0)
 K ^TMP("PRCHLOG",$J)
"RTN","PRCHLO5",218,0)
 Q
"RTN","PRCHLO5",219,0)
DELRUN ; delete previous run at the beginning of the program
"RTN","PRCHLO5",220,0)
 ;
"RTN","PRCHLO5",221,0)
 N FILCK,FILDEL,TFILE1,TFILE2,OUTFL1,OUTFL2,POP,STID
"RTN","PRCHLO5",222,0)
 ; create, delete, then create files to clean up and confirm
"RTN","PRCHLO5",223,0)
 ; write / delete privileges to directory
"RTN","PRCHLO5",224,0)
 S POP=""
"RTN","PRCHLO5",225,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO5",226,0)
 S OUTFL1="CLRS"_STID_"TST.TXT"
"RTN","PRCHLO5",227,0)
 S OUTFL2="IFCP"_STID_"TST.TXT"
"RTN","PRCHLO5",228,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO5",229,0)
 I FILEDIR=""  D
"RTN","PRCHLO5",230,0)
 . S CLRSERR=5
"RTN","PRCHLO5",231,0)
 . Q
"RTN","PRCHLO5",232,0)
 I FILEDIR=" "  D
"RTN","PRCHLO5",233,0)
 . S CLRSERR=5
"RTN","PRCHLO5",234,0)
 . Q
"RTN","PRCHLO5",235,0)
 I CLRSERR=0 D OPEN^%ZISH("TFILE1",FILEDIR,OUTFL1,"W")
"RTN","PRCHLO5",236,0)
 I POP  D
"RTN","PRCHLO5",237,0)
 . S CLRSERR=5
"RTN","PRCHLO5",238,0)
 . Q
"RTN","PRCHLO5",239,0)
 I CLRSERR=0  D
"RTN","PRCHLO5",240,0)
 . D USE^%ZISUTL("TFILE1")
"RTN","PRCHLO5",241,0)
 . W !,"$ ! This is a test file to confirm write/delete access"
"RTN","PRCHLO5",242,0)
 . W !,"$ ! once file access is confirmed, file is deleted"
"RTN","PRCHLO5",243,0)
 . W !,"$ EXIT"
"RTN","PRCHLO5",244,0)
 . D CLOSE^%ZISH("TFILE1")
"RTN","PRCHLO5",245,0)
 . D OPEN^%ZISH("TFILE2",FILEDIR,OUTFL2,"W")
"RTN","PRCHLO5",246,0)
 . D USE^%ZISUTL("TFILE2")
"RTN","PRCHLO5",247,0)
 . W !,"$ ! This is a test file to confirm write/delete access"
"RTN","PRCHLO5",248,0)
 . W !,"$ ! once file access is confirmed, file is deleted"
"RTN","PRCHLO5",249,0)
 . W !,"$ EXIT"
"RTN","PRCHLO5",250,0)
 . D CLOSE^%ZISH("TFILE2")
"RTN","PRCHLO5",251,0)
 . Q
"RTN","PRCHLO5",252,0)
 ;
"RTN","PRCHLO5",253,0)
DELWIN ; DELETE windows files, need to handle 1 file at a time
"RTN","PRCHLO5",254,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO5",255,0)
 ; See IFCAP technical manual.
"RTN","PRCHLO5",256,0)
 I CKOS["NT" D DELWIN^PRCHLO4A
"RTN","PRCHLO5",257,0)
DELFILS ; Delete the files / clean-up before processing
"RTN","PRCHLO5",258,0)
 ;
"RTN","PRCHLO5",259,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO5",260,0)
 ; See IFCAP technical manual
"RTN","PRCHLO5",261,0)
 I CKOS["VMS"  D  ;O/S IS VMS
"RTN","PRCHLO5",262,0)
 . Q:CLRSERR'="0"
"RTN","PRCHLO5",263,0)
 . N PV,PV1,XPV,XPV1
"RTN","PRCHLO5",264,0)
 . S XPV="S PV=$ZF(-1,""DELETE "_FILEDIR_"*"_STID_"*.*;*"")"
"RTN","PRCHLO5",265,0)
 . X XPV
"RTN","PRCHLO5",266,0)
 . Q
"RTN","PRCHLO5",267,0)
 Q
"RTN","PRCPLO")
0^5^B62666305
"RTN","PRCPLO",1,0)
PRCPLO ;WOIFO/RLL-days of stock on hand report ; 1/27/06 10:02am
"RTN","PRCPLO",2,0)
 ;;5.1;IFCAP;**83**;Oct 20, 2000
"RTN","PRCPLO",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO",4,0)
 ; Note: This routine was copied from PRCPRSOH
"RTN","PRCPLO",5,0)
 ;
"RTN","PRCPLO",6,0)
 Q
"RTN","PRCPLO",7,0)
ENT ; Entry Point to run Program
"RTN","PRCPLO",8,0)
 L +^PRCP(446.7,"STATUS"):3 I $T=0 S PRCPMSG(1)="Error encountered when attempting to run CLO GIP Reports due to other CLRS extracts in progress, please try again later." D MAIL^PRCPLO3 Q
"RTN","PRCPLO",9,0)
 D PRCPRINV  ; Run the logic from PRCPRSOH, get params
"RTN","PRCPLO",10,0)
 D BLDFIL  ; Build the output data
"RTN","PRCPLO",11,0)
 D GETVAL  ; Set the ^DIE Entries in 446.7
"RTN","PRCPLO",12,0)
 L -^PRCP(446.7,"STATUS")
"RTN","PRCPLO",13,0)
 ;
"RTN","PRCPLO",14,0)
 K ^TMP($J,"PRCPSOH") ;kill off tmp data
"RTN","PRCPLO",15,0)
 K ^TMP($J,"PRCPLO")  ;kill off tmp data
"RTN","PRCPLO",16,0)
 Q
"RTN","PRCPLO",17,0)
 ;
"RTN","PRCPLO",18,0)
 ;
"RTN","PRCPLO",19,0)
PRCPRINV ; run INV Point
"RTN","PRCPLO",20,0)
 N CLRSFLAG
"RTN","PRCPLO",21,0)
 S CLRSFLAG="SOH"
"RTN","PRCPLO",22,0)
 ; D ^PRCPUSEL Q:'$G(PRCP("I"))
"RTN","PRCPLO",23,0)
 D GETIPT^PRCPLO1
"RTN","PRCPLO",24,0)
 Q
"RTN","PRCPLO",25,0)
EN1 ; Added return from PRCPLO1
"RTN","PRCPLO",26,0)
 ; Q
"RTN","PRCPLO",27,0)
 N DATEEND,DATEENDD,DATESTRD,DATESTRT,DAYSLEFT,DIR,GROUPALL,PRCPDAYS,PRCPEND,PRCPSTRT,PRCPTYPE,TOTALDAY,X,X1,X2,Y,MNT,TODAY
"RTN","PRCPLO",28,0)
 ;
"RTN","PRCPLO",29,0)
 ; K X S X(1)="The Days Of Stock On Hand Report will print a list of items which have stock on hand less than or greater than a specified number of days."
"RTN","PRCPLO",30,0)
 ; D DISPLAY^PRCPUX2(40,79,.X)
"RTN","PRCPLO",31,0)
 ; K X S X(1)="Select the date range which should be used for calculating the daily usage. *** Select by month & year only. ***" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO",32,0)
 ; D MONTHSEL^PRCPURS2 I '$G(DATEEND) Q
"RTN","PRCPLO",33,0)
 ; *83 The following was edited to always enter the LAST DAY
"RTN","PRCPLO",34,0)
 ; of the previous month as the end date. End date for Oct 31, 2005
"RTN","PRCPLO",35,0)
 ; in FM 3051031, can also use 3051100 equivelent for date sort
"RTN","PRCPLO",36,0)
 ; this way, you do not have to handle months w/ 28, 29, 30 or 31 days
"RTN","PRCPLO",37,0)
 D NOW^%DTC S TODAY=X,Y=$E(X,1,3),MNT=$E(X,4,5)
"RTN","PRCPLO",38,0)
 S MNT=+(MNT)
"RTN","PRCPLO",39,0)
 S MNT=MNT-1
"RTN","PRCPLO",40,0)
 I MNT=0 S MNT=12,Y=Y-1
"RTN","PRCPLO",41,0)
 I $L(MNT)=1 S MNT=0_MNT
"RTN","PRCPLO",42,0)
 ;
"RTN","PRCPLO",43,0)
 ; *83 Added day logic to handle month/leap year, etc.
"RTN","PRCPLO",44,0)
 N DAYS,CKF
"RTN","PRCPLO",45,0)
 S DAYS=$P("31^28^31^30^31^30^31^31^30^31^30^31",U,+(MNT))
"RTN","PRCPLO",46,0)
 S DATEEND=Y_MNT_DAYS
"RTN","PRCPLO",47,0)
 I DAYS=28  D
"RTN","PRCPLO",48,0)
 . S CKF=(17+$E(DATEEND))_$E(DATEEND,2,3)
"RTN","PRCPLO",49,0)
 . S DAYS=$S(CKF#400=0:29,(CKF#4=0&(CKF#100'=0)):29,1:28)
"RTN","PRCPLO",50,0)
 . S DATEEND=Y_MNT_DAYS
"RTN","PRCPLO",51,0)
 . Q
"RTN","PRCPLO",52,0)
 ; S DATEEND=Y_MNT_"00"
"RTN","PRCPLO",53,0)
 ; *83 The following was edited to always enter a 90 day previous
"RTN","PRCPLO",54,0)
 ; to current date of report run (check param file, could change)
"RTN","PRCPLO",55,0)
 ; for the DATESTRT. Once DATEEND and DATESTRT are determined, we
"RTN","PRCPLO",56,0)
 ; can use the existing code to set the other variables
"RTN","PRCPLO",57,0)
 S X1=TODAY
"RTN","PRCPLO",58,0)
 ; *83 Report range supplied by site parameter and defaulted to 180
"RTN","PRCPLO",59,0)
 S X2=$$GET^XPAR("SYS","PRCPLO REPORT RANGE",1,"Q")
"RTN","PRCPLO",60,0)
 I X2="" S X2=180
"RTN","PRCPLO",61,0)
 S X2=(X2*-1)
"RTN","PRCPLO",62,0)
 D C^%DTC S DATESTRT=$E(X,1,5)_"01"
"RTN","PRCPLO",63,0)
 ; DATEEND and DATESTRT are set above, pass them to existing
"RTN","PRCPLO",64,0)
 ; logic below to set remaining variables
"RTN","PRCPLO",65,0)
 S X1=DATEEND,X2=DATESTRT D ^%DTC S TOTALDAY=X+1
"RTN","PRCPLO",66,0)
 S Y=DATEEND D DD^%DT S DATEENDD=Y,Y=DATESTRT D DD^%DT S DATESTRD=Y
"RTN","PRCPLO",67,0)
 ; W !?5,"-- TOTAL NUMBER OF DAYS: ",TOTALDAY
"RTN","PRCPLO",68,0)
 ;  select greater or less
"RTN","PRCPLO",69,0)
 ; K X S X(1)="Select the type of report: less than a specified number of days or greater than a specified number of days." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO",70,0)
 ; S DIR(0)="S^1:LESS;2:GREATER",DIR("A")="Print items with GREATER or LESS than 'X' days stock on hand",DIR("B")="LESS"
"RTN","PRCPLO",71,0)
 ; D ^DIR S PRCPTYPE=+Y I 'PRCPTYPE Q
"RTN","PRCPLO",72,0)
 ;*83 Set PRCPTYPE=2 (always GREATER)
"RTN","PRCPLO",73,0)
 S PRCPTYPE=2
"RTN","PRCPLO",74,0)
 ;
"RTN","PRCPLO",75,0)
 ;  select days
"RTN","PRCPLO",76,0)
 ; K X S X(1)="Select the number of days which the current stock on hand should be "_$S(PRCPTYPE=1:"LESS than",1:"GREATER than")_"." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO",77,0)
 ; S DIR(0)="N^1:365",DIR("A")="Print items with stock on hand "_$S(PRCP; TYPE=1:"less than",1:"greater than")_" DAYS",DIR("B")=30
"RTN","PRCPLO",78,0)
 ; D ^DIR S PRCPDAYS=+Y I 'PRCPDAYS Q
"RTN","PRCPLO",79,0)
 ;
"RTN","PRCPLO",80,0)
 ;*83 PRCPDAYS is set based on value of CLRS GREATER THAN RANGE parameter
"RTN","PRCPLO",81,0)
 ;if no value is presented in the parameter, it will default to 90
"RTN","PRCPLO",82,0)
 ;
"RTN","PRCPLO",83,0)
 S PRCPDAYS=$$GET^XPAR("SYS","PRCPLO GREATER THAN RANGE",1,"Q")
"RTN","PRCPLO",84,0)
 I PRCPDAYS="" S PRCPDAYS=90
"RTN","PRCPLO",85,0)
 ;
"RTN","PRCPLO",86,0)
 ; W " DATESTRT ",DATESTRT," DATEEND ",DATEEND," PRCPDAYS ",PRCPDAYS,!
"RTN","PRCPLO",87,0)
 ; W " DATEENDD ",DATEENDD," DATESTRD ",DATESTRD,!
"RTN","PRCPLO",88,0)
 ;
"RTN","PRCPLO",89,0)
 ;  whse sort
"RTN","PRCPLO",90,0)
 ; I PRCP("DPTYPE")="W" D  I '$D(PRCPSTRT) Q
"RTN","PRCPLO",91,0)
 ; . K X S X(1)="Select the range of NSNs to display" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO",92,0)
 ; . D NSNSEL^PRCPURS0
"RTN","PRCPLO",93,0)
 ;
"RTN","PRCPLO",94,0)
 ;*83 Return PRCPSTRT="" and PRCPEND=""
"RTN","PRCPLO",95,0)
 I PRCP("DPTYPE")="W" D
"RTN","PRCPLO",96,0)
 . S PRCPSTRT="",PRCPEND=""
"RTN","PRCPLO",97,0)
 ;  prim/seco sort
"RTN","PRCPLO",98,0)
 ; I PRCP("DPTYPE")'="W" D  I '$G(GROUPALL),'$O(^TMP($J,"PRCPURS1","YES",0)) W !,"*** NO GROUP CATEGORIES SELECTED !" Q
"RTN","PRCPLO",99,0)
 ; . K X S X(1)="Select the Group Categories to display" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO",100,0)
 ; . D GROUPSEL^PRCPURS1(PRCP("I"))
"RTN","PRCPLO",101,0)
 ;
"RTN","PRCPLO",102,0)
 ;*83 RETURN GROUPALL=1 to select all groups
"RTN","PRCPLO",103,0)
 I PRCP("DPTYPE")'="W" D
"RTN","PRCPLO",104,0)
 .   S GROUPALL=1
"RTN","PRCPLO",105,0)
 . ; finished adding variables
"RTN","PRCPLO",106,0)
 ;
"RTN","PRCPLO",107,0)
 ; S %ZIS="Q" D ^%ZIS Q:POP  I $D(IO("Q")) D  Q
"RTN","PRCPLO",108,0)
 ; . S ZTDESC="Days of Stock On Hand Report",ZTRTN="DQ^PRCPRSOH"
"RTN","PRCPLO",109,0)
 ; . S ZTSAVE("^TMP($J,""PRCPURS1"",")=""
"RTN","PRCPLO",110,0)
 ; . S ZTSAVE("DATE*")="",ZTSAVE("GROUP*")="",ZTSAVE("PRCP*")="",ZTSAVE("TOTALDAY")="",ZTSAVE("ZTREQ")="@"
"RTN","PRCPLO",111,0)
 ; . D ^%ZTLOAD
"RTN","PRCPLO",112,0)
 ; W !!,"<*> please wait <*>"
"RTN","PRCPLO",113,0)
DQ ;  queue starts here
"RTN","PRCPLO",114,0)
 N AVERAGE,DATE,GROUP,GROUPNM,ITEMDA,ITEMDATA,NSN,ONHAND,TOTAL,X,Y
"RTN","PRCPLO",115,0)
 K ^TMP($J,"PRCPRSOH")
"RTN","PRCPLO",116,0)
 S ITEMDA=0 F  S ITEMDA=$O(^PRCP(445,PRCP("I"),1,ITEMDA)) Q:'ITEMDA  S ITEMDATA=$G(^(ITEMDA,0)) I ITEMDATA'="" D
"RTN","PRCPLO",117,0)
 .   I $$REUSABLE^PRCPU441(ITEMDA) Q
"RTN","PRCPLO",118,0)
 .   ;  calculate total usage between dates
"RTN","PRCPLO",119,0)
 .   S DATE=$E(DATESTRT,1,5)-.01,TOTAL=0 F  S DATE=$O(^PRCP(445,PRCP("I"),1,ITEMDA,2,DATE)) Q:'DATE!(DATE>$E(DATEEND,1,5))  S TOTAL=TOTAL+$P($G(^(DATE,0)),"^",2)
"RTN","PRCPLO",120,0)
 .   S AVERAGE=$J(TOTAL/TOTALDAY,0,2),ONHAND=$P(ITEMDATA,"^",7)+$P(ITEMDATA,"^",19)
"RTN","PRCPLO",121,0)
 .   S DAYSLEFT=$S('AVERAGE&(ONHAND):9999999,'AVERAGE:0,1:ONHAND/AVERAGE\1)
"RTN","PRCPLO",122,0)
 .   I PRCPTYPE=1,DAYSLEFT'<PRCPDAYS Q
"RTN","PRCPLO",123,0)
 .   I PRCPTYPE=2,DAYSLEFT'>PRCPDAYS Q
"RTN","PRCPLO",124,0)
 .   ;  sort for whse
"RTN","PRCPLO",125,0)
 .   I PRCP("DPTYPE")="W" D  Q
"RTN","PRCPLO",126,0)
 .   .   S NSN=$$NSN^PRCPUX1(ITEMDA) S:NSN="" NSN=" "
"RTN","PRCPLO",127,0)
 .   .   I $E(NSN,1,$L(PRCPSTRT))'=PRCPSTRT,$E(NSN,1,$L(PRCPEND))'=PRCPEND I NSN']PRCPSTRT!(PRCPEND']NSN) Q
"RTN","PRCPLO",128,0)
 .   .   ; S ^TMP($J,"PRCPRSOH",NSN,ITEMDA)=TOTAL_"^"_AVERAGE_"^"_ONHAND_"^"_$P(DAYSLEFT,".")_"^"_$P(ITEMDATA,"^",27)
"RTN","PRCPLO",129,0)
 .   .   N ITMCHK
"RTN","PRCPLO",130,0)
 .   .   S ITMCHK=0,ITMCHK=$O(^PRCP(445,PRCP("I"),1,ITMCHK))
"RTN","PRCPLO",131,0)
 .   .   Q:ITMCHK=""!(+(ITMCHK)<1)
"RTN","PRCPLO",132,0)
 .   .   Q:+(ITMCHK)<1  ; made it to x-ref
"RTN","PRCPLO",133,0)
 .   .   D BLDTMP
"RTN","PRCPLO",134,0)
 .   ;  sort for primary and secondary
"RTN","PRCPLO",135,0)
 .   S GROUP=+$P(ITEMDATA,"^",21)
"RTN","PRCPLO",136,0)
 .   I 'GROUP,'$G(GROUPALL) Q
"RTN","PRCPLO",137,0)
 .   I $G(GROUPALL),$D(^TMP($J,"PRCPURS1","NO",GROUP)) Q
"RTN","PRCPLO",138,0)
 .   I '$G(GROUPALL),'$D(^TMP($J,"PRCPURS1","YES",GROUP)) Q
"RTN","PRCPLO",139,0)
 .   S GROUPNM=$$GROUPNM^PRCPEGRP(GROUP)
"RTN","PRCPLO",140,0)
 .   I GROUPNM'="" S GROUPNM=$E(GROUPNM,1,20)_" (#"_GROUP_")"
"RTN","PRCPLO",141,0)
 .   S:GROUPNM="" GROUPNM=" "
"RTN","PRCPLO",142,0)
 .   ;*83,  Create TMP structure for Report
"RTN","PRCPLO",143,0)
 .   N ITMCHK
"RTN","PRCPLO",144,0)
 .   S ITMCHK=0,ITMCHK=$O(^PRCP(445,PRCP("I"),1,ITMCHK))
"RTN","PRCPLO",145,0)
 .   ;
"RTN","PRCPLO",146,0)
 .   Q:ITMCHK=""!(+(ITMCHK)<1)
"RTN","PRCPLO",147,0)
 .   Q:ITMCHK<1  ; made it to x-ref
"RTN","PRCPLO",148,0)
 .   D BLDTMP
"RTN","PRCPLO",149,0)
 .   Q
"RTN","PRCPLO",150,0)
 Q
"RTN","PRCPLO",151,0)
 ;
"RTN","PRCPLO",152,0)
BLDTMP ;*83 Build ^TMP Structure for Report Server
"RTN","PRCPLO",153,0)
 ;
"RTN","PRCPLO",154,0)
 N INVTYPE,ITEMDESC,CSTCTR,INDAT,NUMLNIT,DATRN,DATRN1,INVPTID
"RTN","PRCPLO",155,0)
 N CSTC1,CSTC2,CSTC3,CSCE1,CSCE2,V4TR,V4TR1
"RTN","PRCPLO",156,0)
 ;
"RTN","PRCPLO",157,0)
 S DATRN=$$FMTE^XLFDT(+DATEEND)
"RTN","PRCPLO",158,0)
 S DATRN1=$P(DATRN," ",1)_","_$P(DATRN," ",3)
"RTN","PRCPLO",159,0)
 S ITEMDESC=$E($$DESCR^PRCPUX1(PRCP("I"),ITEMDA),1,15)  ; item Desc
"RTN","PRCPLO",160,0)
 I ITEMDESC="" S ITEMDESC="No Item Desc"
"RTN","PRCPLO",161,0)
 Q:ITEMDA=""!(+(ITEMDA)<1)
"RTN","PRCPLO",162,0)
 ;
"RTN","PRCPLO",163,0)
 S NUMLNIT=1  ; set to 1 for each line item.
"RTN","PRCPLO",164,0)
 S INVTYPE=PRCP("DPTYPE")
"RTN","PRCPLO",165,0)
 I INVTYPE="" S INVTYPE="No Inv Type"
"RTN","PRCPLO",166,0)
 S INDAT=$G(PRCP("PAR"))
"RTN","PRCPLO",167,0)
 S INVPTID=PRCP("I")  ; inv point id #
"RTN","PRCPLO",168,0)
 ; Cost Center logic
"RTN","PRCPLO",169,0)
 ; Get ^PRCP(445,INVPTID,0) 7th piece (int. Cost Center #)
"RTN","PRCPLO",170,0)
 ; Get ^PRCD(420.1,IntCstCtr,0) 1st piece (external format)
"RTN","PRCPLO",171,0)
 S CSTC1=$G(^PRCP(445,INVPTID,0)),CSTC2=$P(CSTC1,"^",7),CSTC3=$P(CSTC1,"^",3)
"RTN","PRCPLO",172,0)
 S V4TR=$P(CSTC1,"^",1),V4TR1=$P(V4TR,"-",2,99)  ; *83 look up name
"RTN","PRCPLO",173,0)
 S V4TR1=$TR(V4TR1,"*","|")  ; $TR name to replace "*"'s with "|"'s
"RTN","PRCPLO",174,0)
 I CSTC2'="" S CSCE1=$G(^PRCD(420.1,CSTC2,0)),CSCE2=$P(CSCE1,"^",1)
"RTN","PRCPLO",175,0)
 I CSTC2="" S CSCE2="No Cost Center"
"RTN","PRCPLO",176,0)
 ; *83, Set 5th Node from ITEMDESC to ITEMDA
"RTN","PRCPLO",177,0)
 S ^TMP($J,"PRCPLO",V3,INVPTID,ITEMDA)=V3_"*"_DATRN1_"*"_INVPTID_"*"_V4TR1_"*"_NUMLNIT_"*"_$P(ITEMDATA,"^",27)_"*"_CSCE2_"*"_INVTYPE
"RTN","PRCPLO",178,0)
 Q
"RTN","PRCPLO",179,0)
BLDFIL ; Build output file
"RTN","PRCPLO",180,0)
 N IN1,IN2,IN3,IN4,IN5,OLPV,NWPV,INDDAT,TOTDOL,LNDOL,CSTCTR,LNCT,PRCPDX,INPTVAL,POINT,STID,DTTM,INVVTYP,INVPTLN
"RTN","PRCPLO",181,0)
 S IN1=0,IN2=0,IN3=0,IN4=0,IN5="INVPT",INDDAT=0,OLPV=0,NWPV=0,LNCT=0,CSTCTR=0,TOTDOL=0,LNDOL=0,INVPTLN=0
"RTN","PRCPLO",182,0)
 F  S IN1=$O(^TMP($J,"PRCPLO",IN1)) Q:IN1=""  D
"RTN","PRCPLO",183,0)
 . F  S IN2=$O(^TMP($J,"PRCPLO",IN1,IN2)) Q:IN2=""  D
"RTN","PRCPLO",184,0)
 . . I IN5'="INVPT"  D  ; init for first time through
"RTN","PRCPLO",185,0)
 . . . S INVPTLN=+$P($G(^PRCP(445,+INPTVAL,1,0)),"^",4)
"RTN","PRCPLO",186,0)
 . . . S PRCPDX=STID_"*"_DTTM_"*"_INPTVAL_"*"_POINT_"*"_INVVTYP_"*"_TOTDOL_"*"_IN4_"*"_INVPTLN_"*"_CSTCTR
"RTN","PRCPLO",187,0)
 . . . ; set up new ^TMP($J NODE to store totals for ^DIE set
"RTN","PRCPLO",188,0)
 . . . S ^TMP($J,"PRCPSOH",+(STID_INPTVAL))=PRCPDX
"RTN","PRCPLO",189,0)
 . . . S IN4=0  ; reset to 0, begin counting Line items for INVPT
"RTN","PRCPLO",190,0)
 . . . S TOTDOL=0
"RTN","PRCPLO",191,0)
 . . . S LNDOL=0
"RTN","PRCPLO",192,0)
 . . . S PRCPDX=""
"RTN","PRCPLO",193,0)
 . . . S CSTCTR=""
"RTN","PRCPLO",194,0)
 . . F  S IN3=$O(^TMP($J,"PRCPLO",IN1,IN2,IN3)) Q:IN3=""  D
"RTN","PRCPLO",195,0)
 . . . S INDDAT=$G(^TMP($J,"PRCPLO",IN1,IN2,IN3))
"RTN","PRCPLO",196,0)
 . . . S STID=$P(INDDAT,"*",1)
"RTN","PRCPLO",197,0)
 . . . S DTTM=$P(INDDAT,"*",2)
"RTN","PRCPLO",198,0)
 . . . S POINT=$P(INDDAT,"*",4)
"RTN","PRCPLO",199,0)
 . . . S INPTVAL=$P(INDDAT,"*",3)  ; Inv Point ID# for DIE Set
"RTN","PRCPLO",200,0)
 . . . S CSTCTR=$P(INDDAT,"*",7)
"RTN","PRCPLO",201,0)
 . . . S LNDOL=$P(INDDAT,"*",6)
"RTN","PRCPLO",202,0)
 . . . S INVVTYP=$P(INDDAT,"*",8)
"RTN","PRCPLO",203,0)
 . . . S TOTDOL=TOTDOL+LNDOL
"RTN","PRCPLO",204,0)
 . . . S IN4=IN4+1  ; Count # of line items in Inv Pt
"RTN","PRCPLO",205,0)
 . . . S IN5=IN2  ; Invt. Point
"RTN","PRCPLO",206,0)
 . . . Q
"RTN","PRCPLO",207,0)
 . . Q
"RTN","PRCPLO",208,0)
 . Q
"RTN","PRCPLO",209,0)
 Q
"RTN","PRCPLO",210,0)
GETVAL ; Get values from ^TMP($J,"PRCPSOH"
"RTN","PRCPLO",211,0)
 N LP1,SOHIEN,PRCPDX
"RTN","PRCPLO",212,0)
 S LP1=0
"RTN","PRCPLO",213,0)
 F  S LP1=$O(^TMP($J,"PRCPSOH",LP1)) Q:LP1=""  D
"RTN","PRCPLO",214,0)
 . S PRCPDX=$G(^TMP($J,"PRCPSOH",LP1))
"RTN","PRCPLO",215,0)
 . S SOHIEN=+LP1
"RTN","PRCPLO",216,0)
 . D SETREC
"RTN","PRCPLO",217,0)
 . Q
"RTN","PRCPLO",218,0)
 Q
"RTN","PRCPLO",219,0)
SETREC ; Set record using DIE in 446.7
"RTN","PRCPLO",220,0)
 ;
"RTN","PRCPLO",221,0)
 S DIC="^PRCP(446.7,",DIC(0)="L",DLAYGO=446.7,X=SOHIEN D ^DIC K DIC,DLAYGO
"RTN","PRCPLO",222,0)
 ; Send mail message if exception occurs during FileMan set
"RTN","PRCPLO",223,0)
 I Y=-1 N PRCPMSG S PRCPMSG(1)="Error saving to File #446.7 - please contact IRM." D MAIL^PRCPLO3 Q
"RTN","PRCPLO",224,0)
 S PRCPDA=Y+0
"RTN","PRCPLO",225,0)
 S DIE="^PRCP(446.7,",DA=PRCPDA,DR="1///"_PRCPDX D ^DIE K DIE,DR,DA,PRCPDA,PRCPDX
"RTN","PRCPLO",226,0)
 Q
"RTN","PRCPLO1")
0^6^B52725276
"RTN","PRCPLO1",1,0)
PRCPLO1 ;WOIFO/RLL/DAP-utilities: setup inventory variables     ; 1/24/06 9:56am
"RTN","PRCPLO1",2,0)
V ;;5.1;IFCAP;**83**;Oct 20, 2000
"RTN","PRCPLO1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO1",4,0)
 ; Copied from routine PRCPUSEL
"RTN","PRCPLO1",5,0)
PRCPUSEL ; Old routine label (to resolve goto below for xindex)
"RTN","PRCPLO1",6,0)
 Q
"RTN","PRCPLO1",7,0)
 ;
"RTN","PRCPLO1",8,0)
 ;  enter distribution point--input variables:
"RTN","PRCPLO1",9,0)
 ;  prcp("dptype")=distribution point type code [W,P,S]
"RTN","PRCPLO1",10,0)
 ;
"RTN","PRCPLO1",11,0)
 ;  returns the following variables:
"RTN","PRCPLO1",12,0)
 ;  prcp("in")=name of inv pt (no station #),
"RTN","PRCPLO1",13,0)
 ;  prcp("inv")=keep perpetual inventory flag
"RTN","PRCPLO1",14,0)
 ;  prcp("his")=keep detailed history flag,
"RTN","PRCPLO1",15,0)
 ;  prcp("i")=da of inv pt
"RTN","PRCPLO1",16,0)
 ;
"RTN","PRCPLO1",17,0)
DOIT ; ADDED label here
"RTN","PRCPLO1",18,0)
 N D,IORVOFF,IORVON,PRCHAUTH  ; needed to New for xindex
"RTN","PRCPLO1",19,0)
 D DOIT1
"RTN","PRCPLO1",20,0)
 Q
"RTN","PRCPLO1",21,0)
GETIPT ; $O through PRCP(^445,"B", get Station ID, Inactive?, IPID#
"RTN","PRCPLO1",22,0)
 ; 
"RTN","PRCPLO1",23,0)
 N V1,V2,V3,V4,V5,DATA1,DATA2
"RTN","PRCPLO1",24,0)
 S V1=0,V2=0
"RTN","PRCPLO1",25,0)
 F  S V1=$O(^PRCP(445,"B",V1)) Q:V1=""  D
"RTN","PRCPLO1",26,0)
 . F  S V2=$O(^PRCP(445,"B",V1,V2)) Q:V2=""  D
"RTN","PRCPLO1",27,0)
 . . Q:V1["***INACTIVE"
"RTN","PRCPLO1",28,0)
 . . ;S V1=$TR(V1,"*","&")  ; needed due to using "*" as delimiter
"RTN","PRCPLO1",29,0)
 . . S V3=$P(V1,"-",1)
"RTN","PRCPLO1",30,0)
 . . S V4=$P(V1,"-",2,99)
"RTN","PRCPLO1",31,0)
 . . ; W !," Station ID#=",V3
"RTN","PRCPLO1",32,0)
 . . ; W !," Inventory Point =",V4
"RTN","PRCPLO1",33,0)
 . . ; W !," Inventory Point ID# =",V2
"RTN","PRCPLO1",34,0)
 . . S DATA1=$G(^PRCP(445,+(V2),0))  ; DATA for Inv Point
"RTN","PRCPLO1",35,0)
 . . S PRCP("DPTYPE")=$P(DATA1,"^",3)  ; Prim, Second, or warehouse
"RTN","PRCPLO1",36,0)
 . . S PRCP("PAR")=DATA1  ; Data for Inv point set in array
"RTN","PRCPLO1",37,0)
 . . S PRCP("HIS")=$P(DATA1,"^",6)  ;
"RTN","PRCPLO1",38,0)
 . . S PRCP("I")=V2  ; Inv Point ID#
"RTN","PRCPLO1",39,0)
 . . S PRCP("INV")=$P(DATA1,"^",2)  ; External Name, Inv Point
"RTN","PRCPLO1",40,0)
 . . ; W !,"DATA 1 IS ",DATA1
"RTN","PRCPLO1",41,0)
 . . ;
"RTN","PRCPLO1",42,0)
 . . S DATA2=$G(^PRC(411,+(V3),0))  ; Data for Station ID#
"RTN","PRCPLO1",43,0)
 . . S PRC("PARAM")=DATA2  ; parameters for Station ID
"RTN","PRCPLO1",44,0)
 . . S PRC("SITE")=V3  ; station id#
"RTN","PRCPLO1",45,0)
 . . S PRC("MDIV")=""  ; multi division , add lookup/check here
"RTN","PRCPLO1",46,0)
 . . S PRC("PER")=""  ; normally DUZ, may not be needed
"RTN","PRCPLO1",47,0)
 . . S PRC("FY")="06"
"RTN","PRCPLO1",48,0)
 . . S PRC("QTR")="01"  ; add lookup/check here
"RTN","PRCPLO1",49,0)
 . . ; W !," PRC(PARAM) IS ",PRC("PARAM")
"RTN","PRCPLO1",50,0)
 . . ; THE WRITE STATEMENTS ABOVE WILL BE REPLACED WITH
"RTN","PRCPLO1",51,0)
 . . ; THE SETTING OF PRCP() AND PRC() VALUES
"RTN","PRCPLO1",52,0)
 . . ; *83 add code here from Days of Stock on hand logic
"RTN","PRCPLO1",53,0)
 . . ; if Item Inventory does not contain any items for
"RTN","PRCPLO1",54,0)
 . . ; an inventory point, quit here. Get next Inv. point
"RTN","PRCPLO1",55,0)
 . . ; N ITMDAK
"RTN","PRCPLO1",56,0)
 . . ; S ITMDAK=$G(^PRCP(445,+PRCP("I"),1,0))  ;at least 1 item?
"RTN","PRCPLO1",57,0)
 . . ; Q:'ITMDAK  ; quit if no item exists, go to next Inv. Pt.
"RTN","PRCPLO1",58,0)
 . . I CLRSFLAG="SS" D EN1^PRCPLO2  ; Do stock status report
"RTN","PRCPLO1",59,0)
 . . I CLRSFLAG="SOH" D EN1^PRCPLO  ; Do days of stock on hand rpt.
"RTN","PRCPLO1",60,0)
 . . Q
"RTN","PRCPLO1",61,0)
 . Q
"RTN","PRCPLO1",62,0)
 Q
"RTN","PRCPLO1",63,0)
 ;
"RTN","PRCPLO1",64,0)
 ;
"RTN","PRCPLO1",65,0)
DOIT1 ; ADDED label here
"RTN","PRCPLO1",66,0)
 N %,C,DISYS,I,J,PRCF,PRCPFLAG,X,Y
"RTN","PRCPLO1",67,0)
 I +$G(DUZ)<1 W !,"YOU ARE NOT SETUP AS A USER!" K PRC,PRCP Q
"RTN","PRCPLO1",68,0)
 ;
"RTN","PRCPLO1",69,0)
 S %=0 F I="FY","PARAM","PER","QTR","SITE" I '+$G(PRC(I)) S %=1 Q
"RTN","PRCPLO1",70,0)
 ; I % S PRCF("X")="S" D ^PRCFSITE I '+$G(PRC("SITE")) K PRC,PRCP Q
"RTN","PRCPLO1",71,0)
 ;
"RTN","PRCPLO1",72,0)
DOSITE ; Set up PRC array from PRCFSITE
"RTN","PRCPLO1",73,0)
 S PRC("MDIV")=""  ; multi division (need to check for this)
"RTN","PRCPLO1",74,0)
 S PRC("FY")="06"  ; NEED TO make this calculation
"RTN","PRCPLO1",75,0)
 S PRC("PARAM")=$G(^PRC(411,V2,0))  ; get params for inv pt
"RTN","PRCPLO1",76,0)
 S PRC("PER")=DUZ  ; may not be needed
"RTN","PRCPLO1",77,0)
 S PRC("QTR")="01"  ; NEED TO make this calcuation
"RTN","PRCPLO1",78,0)
 S PRC("SITE")=V2
"RTN","PRCPLO1",79,0)
 Q
"RTN","PRCPLO1",80,0)
 ;
"RTN","PRCPLO1",81,0)
DOSITEP ; Set up PRCP array from DISPLAY^PRCPLO1
"RTN","PRCPLO1",82,0)
 S %=0 F I="DPTYPE","HIS","I","IN","INV" I '$D(PRCP(I)) S %=1 Q
"RTN","PRCPLO1",83,0)
 ; I '% D DISPLAY Q
"RTN","PRCPLO1",84,0)
 ;
"RTN","PRCPLO1",85,0)
 D PARAM(+V2)
"RTN","PRCPLO1",86,0)
 Q
"RTN","PRCPLO1",87,0)
 ;  allow adding new whse if not one for station
"RTN","PRCPLO1",88,0)
 I $G(PRCP("DPTYPE"))="W" D  Q:$G(PRCPFLAG)
"RTN","PRCPLO1",89,0)
 .   K PRCPFLAG
"RTN","PRCPLO1",90,0)
 .   S %=0 F  S %=$O(^PRCP(445,"AC","W",%)) Q:'%  I $P($P($G(^PRCP(445,%,0)),"^"),"-")=PRC("SITE") S PRCPFLAG=1 Q
"RTN","PRCPLO1",91,0)
 .   I $G(PRCPFLAG) K PRCPFLAG Q
"RTN","PRCPLO1",92,0)
 .   S PRCP("I")=$$INVPT^PRCPUINV(PRC("SITE"),"W",1,1,"")
"RTN","PRCPLO1",93,0)
 .   I 'PRCP("I") S PRCPFLAG=1 K PRC,PRCP
"RTN","PRCPLO1",94,0)
 ;
"RTN","PRCPLO1",95,0)
 S %=$S($D(PRCP("DPTYPE")):PRCP("DPTYPE"),1:"^")
"RTN","PRCPLO1",96,0)
 S (I,J)=0
"RTN","PRCPLO1",97,0)
 F  S I=$O(^PRCP(445,"AD",DUZ,I)) Q:'I  I $D(^PRCP(445,I,0)) D  I J>1 Q
"RTN","PRCPLO1",98,0)
 .   S:%="^"!(%[$P(^PRCP(445,I,0),"^",3)) Y(0)=^(0),J=J+1,Y=I
"RTN","PRCPLO1",99,0)
 I J=1 D  Q:$G(PRCPFLAG)  S PRC("SITE")=+Y(0) D V1 Q
"RTN","PRCPLO1",100,0)
 .   I '$D(^PRC(411,+Y(0),0)) D  K PRC,PRCP S PRCPFLAG=1
"RTN","PRCPLO1",101,0)
 .   .   W !,"ERROR - SITE PARAMETERS IN FILE 411 FOR SITE "
"RTN","PRCPLO1",102,0)
 .   .   W +Y(0)," ARE MISSING."
"RTN","PRCPLO1",103,0)
 I $G(PRCHAUTH) Q:'$G(PRCP("I"))  D  G V1
"RTN","PRCPLO1",104,0)
 .   S Y=PRCP("I")_"^"_$P($G(^PRCP(445,PRCP("I"),0)),U)
"RTN","PRCPLO1",105,0)
 ;
"RTN","PRCPLO1",106,0)
 S DIC="^PRCP(445,",DIC(0)="AEQMOZ"
"RTN","PRCPLO1",107,0)
 S DIC("S")="I +^(0)=PRC(""SITE""),$P(^(0),U,2)=""Y"",$D(^PRCP(445,+Y,4,DUZ,0))"
"RTN","PRCPLO1",108,0)
 I $D(PRCP("DPTYPE")) S DIC("S")=DIC("S")_",PRCP(""DPTYPE"")[$P(^PRCP(445,+Y,0),U,3)"
"RTN","PRCPLO1",109,0)
 S DIC("A")="Select "_$S('$D(PRCP("DPTYPE")):"",PRCP("DPTYPE")="W":"Supply Warehouse ",PRCP("DPTYPE")="P":"Primary ",PRCP("DPTYPE")="S":"Secondary ",1:"")_"Inventory Point: "
"RTN","PRCPLO1",110,0)
 S D="C",PRCPPRIV=1
"RTN","PRCPLO1",111,0)
 D IX^DIC
"RTN","PRCPLO1",112,0)
 K PRCPPRIV,DIC
"RTN","PRCPLO1",113,0)
 I Y<0 K PRC,PRCP Q
"RTN","PRCPLO1",114,0)
 ;
"RTN","PRCPLO1",115,0)
V1 ;  internal program jump
"RTN","PRCPLO1",116,0)
 D PARAM(+Y)
"RTN","PRCPLO1",117,0)
 ;
"RTN","PRCPLO1",118,0)
DISPLAY ;  display top of page header
"RTN","PRCPLO1",119,0)
 I '$G(PRCP("I")) G PRCPUSEL
"RTN","PRCPLO1",120,0)
 S %=0 F I="RV1","RV0","XY" I '$D(PRCP(I)) S %=1 Q
"RTN","PRCPLO1",121,0)
 I % D TERM
"RTN","PRCPLO1",122,0)
 ;
"RTN","PRCPLO1",123,0)
 S %="",$P(%," ",81)=""
"RTN","PRCPLO1",124,0)
 S X="I N V E N T O R Y  version "_$P($T(PRCPUSEL+1),";",3)
"RTN","PRCPLO1",125,0)
 S Y=80-$L(X)\2
"RTN","PRCPLO1",126,0)
 S X=$E(%,1,Y)_X_%
"RTN","PRCPLO1",127,0)
 W @IOF,PRCP("RV1"),$E(X,1,40)
"RTN","PRCPLO1",128,0)
 X PRCP("XY")
"RTN","PRCPLO1",129,0)
 W $E(X,41,80),PRCP("RV0")
"RTN","PRCPLO1",130,0)
 S PRCP("PAR")=^PRCP(445,PRCP("I"),0)
"RTN","PRCPLO1",131,0)
 S X=$S(+$G(PRC("SITE")):"("_PRC("SITE")_") ",1:"")
"RTN","PRCPLO1",132,0)
 S X=X_$S(PRCP("DPTYPE")="W":"Warehouse ",PRCP("DPTYPE")="P":"Primary ",PRCP("DPTYPE")="S":"Secondary ",1:"")
"RTN","PRCPLO1",133,0)
 S X=X_"Inventory Point: "_PRCP("IN")
"RTN","PRCPLO1",134,0)
 W !,X,?(80-$L($P($G(PRC("PER")),"^",2))),$P($G(PRC("PER")),"^",2)
"RTN","PRCPLO1",135,0)
 I PRCP("DPTYPE")="P" S Y=$P(PRCP("PAR"),"^",12) I Y,Y'>DT D
"RTN","PRCPLO1",136,0)
 .   D DD^%DT
"RTN","PRCPLO1",137,0)
 .   W !,?6,"--> NEXT REQUEST FOR WAREHOUSE ISSUES IS DUE IN SUPPLY ON ",Y,"."
"RTN","PRCPLO1",138,0)
 I $P(PRCP("PAR"),"^",9)="Y" D
"RTN","PRCPLO1",139,0)
 .   W !?6,"--> THERE ARE ITEMS AT OR BELOW THE EMERGENCY STOCK LEVEL."
"RTN","PRCPLO1",140,0)
 I $E($P(PRCP("PAR"),"^",14),1,5)'=$E(DT,1,5) D
"RTN","PRCPLO1",141,0)
 .   W !?6,"--> USAGE/DISTRIBUTION TOTALS NEEDS TO BE PURGED."
"RTN","PRCPLO1",142,0)
 I $E($P(PRCP("PAR"),"^",17),1,5)'=$E(DT,1,5) D
"RTN","PRCPLO1",143,0)
 .   W !?6,"--> RECEIPTS HISTORY BY ITEM NEEDS TO BE PURGED."
"RTN","PRCPLO1",144,0)
 I PRCP("DPTYPE")'="S",$E($P(PRCP("PAR"),"^",19),1,5)'=$E(DT,1,5) D
"RTN","PRCPLO1",145,0)
 .   W !?6,"--> DISTRIBUTION HISTORY NEEDS TO BE PURGED."
"RTN","PRCPLO1",146,0)
 I $E($P(PRCP("PAR"),"^",18),1,5)'=$E(DT,1,5) D
"RTN","PRCPLO1",147,0)
 .   W !?6,"--> TRANSACTION REGISTER NEEDS TO BE PURGED."
"RTN","PRCPLO1",148,0)
 I $P(PRCP("PAR"),"^",6)="Y",$E($P(PRCP("PAR"),"^",22),1,5)'=$E(DT,1,5) D
"RTN","PRCPLO1",149,0)
 .   W !?6,"--> OPENING MONTHLY INVENTORY BALANCES NEED TO BE SET."
"RTN","PRCPLO1",150,0)
 I PRCP("DPTYPE")="S",$P($G(^PRCP(445,PRCP("I"),5)),"^",1)]"" D SSMSG
"RTN","PRCPLO1",151,0)
 I $O(^PRCP(447.1,"C",+PRCP("PAR"),PRCP("I"),"")) D
"RTN","PRCPLO1",152,0)
 .   W !?6,"--> THERE ARE UNPROCESSED SUPPLY STATION TRANSACTIONS."
"RTN","PRCPLO1",153,0)
 ;
"RTN","PRCPLO1",154,0)
 W !,PRCP("RV1"),$E(%,1,40) X PRCP("XY") W $E(%,41,80),PRCP("RV0")
"RTN","PRCPLO1",155,0)
 Q
"RTN","PRCPLO1",156,0)
 ;
"RTN","PRCPLO1",157,0)
 ;
"RTN","PRCPLO1",158,0)
NOMENU ;  user did not select a valid inventory point, do not allow access
"RTN","PRCPLO1",159,0)
 ;  to the menu (called from option file)
"RTN","PRCPLO1",160,0)
 N X
"RTN","PRCPLO1",161,0)
 S X(1)="YOU MUST SELECT A VALID INVENTORY POINT BEFORE ACCESSING THIS MENU" D DISPLAY^PRCPUX2(1,79,.X)
"RTN","PRCPLO1",162,0)
 Q
"RTN","PRCPLO1",163,0)
 ;
"RTN","PRCPLO1",164,0)
 ;
"RTN","PRCPLO1",165,0)
PARAM(INVPT)       ;  set up parameters for inventory point
"RTN","PRCPLO1",166,0)
 K PRCP
"RTN","PRCPLO1",167,0)
 N DATA,PRCPEX
"RTN","PRCPLO1",168,0)
 S DATA=$G(^PRCP(445,INVPT,0)) I DATA="" Q
"RTN","PRCPLO1",169,0)
 ; *83 new code, need to $TR PRCP("IN", convert "*" to "|"
"RTN","PRCPLO1",170,0)
 ;S PRCP("I")=INVPT,PRCP("INV")=(DATA,"^",2),PRCP("HIS")=$P(DATA,"^",6),PRCP("DPTYPE")=$P(DATA,"^",3)
"RTN","PRCPLO1",171,0)
 ;S PRCPEX=$P($P(DATA,"^"),"-",2,99)
"RTN","PRCPLO1",172,0)
 ;S PRCPEX=$TR(PRCPEX,"*","&")  ; Change "*" to "|"
"RTN","PRCPLO1",173,0)
 ;S PRCP("IN")=PRCPEX
"RTN","PRCPLO1",174,0)
 ; *83 (old code below)
"RTN","PRCPLO1",175,0)
 S PRCP("I")=INVPT,PRCP("IN")=$P($P(DATA,"^"),"-",2,99),PRCP("INV")=$P(DATA,"^",2),PRCP("HIS")=$P(DATA,"^",6),PRCP("DPTYPE")=$P(DATA,"^",3)
"RTN","PRCPLO1",176,0)
 ; D TERM  ;commented out for CLRS
"RTN","PRCPLO1",177,0)
 Q
"RTN","PRCPLO1",178,0)
 ;
"RTN","PRCPLO1",179,0)
 ;
"RTN","PRCPLO1",180,0)
TERM ;  get terminal attributes
"RTN","PRCPLO1",181,0)
 N X
"RTN","PRCPLO1",182,0)
 I '$D(IOF)!('$G(IOST(0))) S IOP="HOME" D ^%ZIS K IOP
"RTN","PRCPLO1",183,0)
 S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","PRCPLO1",184,0)
 S PRCP("RV1")=$G(IORVON),PRCP("RV0")=$G(IORVOFF)
"RTN","PRCPLO1",185,0)
 S PRCP("XY")="N DX,DY S (DX,DY)=0 "_$G(^%ZOSF("XY"))
"RTN","PRCPLO1",186,0)
 Q
"RTN","PRCPLO1",187,0)
 ;
"RTN","PRCPLO1",188,0)
SSMSG ; check supply station secondaries, give message of qty mismatch
"RTN","PRCPLO1",189,0)
 N GIPCNT,INVPT,ITEM,PRCPFLAG,SSCNT
"RTN","PRCPLO1",190,0)
 S INVPT=PRCP("I")
"RTN","PRCPLO1",191,0)
 S ITEM=0
"RTN","PRCPLO1",192,0)
 F  S ITEM=$O(^PRCP(445,INVPT,1,ITEM)) Q:'+ITEM  D  I $D(PRCPFLAG) Q
"RTN","PRCPLO1",193,0)
 .  I $P($G(^PRCP(445,INVPT,1,ITEM,0)),"^",9)<1 Q  ; not a SS item
"RTN","PRCPLO1",194,0)
 .  S GIPCNT=$P($G(^PRCP(445,INVPT,1,ITEM,0)),"^",7)
"RTN","PRCPLO1",195,0)
 .  S SSCNT=$P($G(^PRCP(445,INVPT,1,ITEM,9)),"^",1)
"RTN","PRCPLO1",196,0)
 .  I 'GIPCNT,'SSCNT Q
"RTN","PRCPLO1",197,0)
 .  I GIPCNT=SSCNT Q
"RTN","PRCPLO1",198,0)
 .  W !,?6,"--> QUANTITY DISCREPANCIES EXIST WITH THE SUPPLY STATION."
"RTN","PRCPLO1",199,0)
 . S PRCPFLAG=1
"RTN","PRCPLO2")
0^7^B29302908
"RTN","PRCPLO2",1,0)
PRCPLO2 ;WISC/RFJ/dh/DWA/DAP-stock status report (option, whse) ;3.13.98
"RTN","PRCPLO2",2,0)
 ;;5.1;IFCAP;**83**;Oct 20, 2000
"RTN","PRCPLO2",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO2",4,0)
 ;Copied from routine ^PRCPRSSR and modified for PRC*5.1*83 (CLRS)
"RTN","PRCPLO2",5,0)
 ;
"RTN","PRCPLO2",6,0)
ENT ;This report will be called from option PRCPLO CLO GIP OPTION with fixed
"RTN","PRCPLO2",7,0)
 ;input parameters and run for all stations and active inventory points
"RTN","PRCPLO2",8,0)
 ;on a given VistA system.
"RTN","PRCPLO2",9,0)
 ;D ^PRCPUSEL Q:'$D(PRCP("I"))
"RTN","PRCPLO2",10,0)
 L +^PRCP(446.7,"STATUS"):3 I $T=0 S PRCPMSG(1)="Error encountered when attempting to run CLO GIP Reports due to other",PRCPMSG(2)="CLRS extracts in progress, please try again later." D MAIL^PRCPLO3 Q
"RTN","PRCPLO2",11,0)
 K ^PRCP(446.7)
"RTN","PRCPLO2",12,0)
 S ^PRCP(446.7,0)="CLRS REPORT STORAGE^446.7^^"
"RTN","PRCPLO2",13,0)
 N CLRSFLAG
"RTN","PRCPLO2",14,0)
 S CLRSFLAG="SS" D GETIPT^PRCPLO1
"RTN","PRCPLO2",15,0)
 ;*83 This call links the Stock on Hand Report in a series of two
"RTN","PRCPLO2",16,0)
 ;consecutive report runs to be executed on the 1st of each month.
"RTN","PRCPLO2",17,0)
 L -^PRCP(446.7,"STATUS")
"RTN","PRCPLO2",18,0)
 D ENT^PRCPLO
"RTN","PRCPLO2",19,0)
 N PRCPMSG S PRCPMSG(1)="CLO GIP Reports completed on "_$$HTE^XLFDT($H) D MAIL^PRCPLO3
"RTN","PRCPLO2",20,0)
 Q
"RTN","PRCPLO2",21,0)
 ;
"RTN","PRCPLO2",22,0)
EN1 ;*83 Call coming in from PRCPLO1 with station number and inventory point
"RTN","PRCPLO2",23,0)
 ;
"RTN","PRCPLO2",24,0)
 N %,%DT,%H,%I,DATEINAC,DATESTRT,TODAY,X,X1,X2,Y,MNT,INARNG
"RTN","PRCPLO2",25,0)
 ;K X S X(1)="The Stock Status Report will print a summary of all issues, receipts, and adjustments with the opening and closing balances by account codes."
"RTN","PRCPLO2",26,0)
 ;S X(2)="It will calculate the turnover rate, inactive item percent, long supply percent, and non-issuable percent."
"RTN","PRCPLO2",27,0)
 ;D DISPLAY^PRCPUX2(40,79,.X)
"RTN","PRCPLO2",28,0)
 ;K X S X(1)="Enter the date (month-year) for the Stock Status Report." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO2",29,0)
 ;*83 The following was edited to always enter the previous month as the start date
"RTN","PRCPLO2",30,0)
 D NOW^%DTC S TODAY=X,Y=$E(X,1,3),MNT=$E(X,4,5)
"RTN","PRCPLO2",31,0)
 S MNT=MNT-1
"RTN","PRCPLO2",32,0)
 I MNT=0 S MNT=12,Y=Y-1
"RTN","PRCPLO2",33,0)
 I $L(MNT)=1 S MNT=0_MNT
"RTN","PRCPLO2",34,0)
 S DATESTRT=Y_MNT_"00"
"RTN","PRCPLO2",35,0)
 ;S %DT(0)=-Y D DD^%DT S %DT="AEP",%DT("B")=Y,%DT("A")="Print Stock Status for MONTH and YEAR: " D ^%DT K %DT I Y<1 Q
"RTN","PRCPLO2",36,0)
 ;S DATESTRT=$E(Y,1,5)_"00"
"RTN","PRCPLO2",37,0)
 ;K X S X(1)="The inactive item percent is calculated for items which have not had activity (receipts or issues) after a specified cutoff date." D DISPLAY^PRCPUX2(40,79,.X)
"RTN","PRCPLO2",38,0)
 ;K X S X(1)="Enter the Inactivity cutoff date." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPLO2",39,0)
 ;*83 The following was edited to always enter a 90 day previous to 
"RTN","PRCPLO2",40,0)
 ;current date default inactivity range if no other is indicated via the
"RTN","PRCPLO2",41,0)
 ;PRCPLO INACTIVITY RANGE parameter
"RTN","PRCPLO2",42,0)
 S INARNG=$$GET^XPAR("SYS","PRCPLO INACTIVITY RANGE",1,"Q")
"RTN","PRCPLO2",43,0)
 I INARNG="" S INARNG=90
"RTN","PRCPLO2",44,0)
 S X1=TODAY,X2=(INARNG*-1) D C^%DTC S DATEINAC=$E(X,1,5)_"00"
"RTN","PRCPLO2",45,0)
 S DT=TODAY
"RTN","PRCPLO2",46,0)
 ;D DD^%DT
"RTN","PRCPLO2",47,0)
 ;S %DT(0)=-($E(TODAY,1,5)_"00"),%DT="AEP",%DT("B")=Y,%DT("A")="Enter Inactivity Cutoff MONTH and YEAR: " D ^%DT K %DT I Y<1 Q
"RTN","PRCPLO2",48,0)
 ;S DATEINAC=$E(Y,1,5)_"00"
"RTN","PRCPLO2",49,0)
 ;W ! S %ZIS="Q" D ^%ZIS Q:POP  I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q"),ZTSK Q
"RTN","PRCPLO2",50,0)
 ;.   S ZTDESC="Stock Status Report",ZTRTN="DQ^PRCPRSSR"
"RTN","PRCPLO2",51,0)
 ;.   S ZTSAVE("PRCP*")="",ZTSAVE("DATE*")="",ZTSAVE("ZTREQ")="@"
"RTN","PRCPLO2",52,0)
 ;W !!,"<*> please wait <*>"
"RTN","PRCPLO2",53,0)
 ;*83 Build report with station and inventory point passed in from PRCPLO1 call
"RTN","PRCPLO2",54,0)
DQ ;  queue starts here
"RTN","PRCPLO2",55,0)
 N ACCT,ADJ,ADJN,AVERAGE,D,DA,DATE,DATELONG,DUEIN,DUEOUT,INACT,INACTN,INVVAL,ISS,ISSN,ITEMDA,LONG,LONGN,NONISS,NONISSN,ONHAND,OPEN,QTY,REC,RECN,TOTAL,TOTDAYS,TRANSNO,TYPE,VALUE
"RTN","PRCPLO2",56,0)
 ;*83 Added newing of variables
"RTN","PRCPLO2",57,0)
 N STA,INV,TOTOPEN,TOTREC,TOTISS,TOTADJ,TOTCLOS,RECNM,TOTN,DATRN,TOTINA,TOTIS1,TOTAD1,TOTIND,TOTLNG,TOTLND,DAYS,DATRN1
"RTN","PRCPLO2",58,0)
 ;
"RTN","PRCPLO2",59,0)
 K OPEN
"RTN","PRCPLO2",60,0)
 S ITEMDA=0 F  S ITEMDA=$O(^PRCP(445.1,PRCP("I"),1,ITEMDA)) Q:'ITEMDA  S X=$$GETOPEN^PRCPUBAL(PRCP("I"),ITEMDA,$E(DATESTRT,1,5)) I X'="" D
"RTN","PRCPLO2",61,0)
 .   S ACCT=$$ACCT1^PRCPUX1($$FSC^PRCPUX1(ITEMDA))
"RTN","PRCPLO2",62,0)
 .   S $P(OPEN(ACCT),"^")=$P($G(OPEN(ACCT)),"^")+$P(X,"^",2)+$P(X,"^",3)
"RTN","PRCPLO2",63,0)
 .   S $P(OPEN(ACCT),"^",2)=$P($G(OPEN(ACCT)),"^",2)+$P(X,"^",8)
"RTN","PRCPLO2",64,0)
 S DATE=DATESTRT F  S DATE=$O(^PRCP(445.2,"AX",PRCP("I"),DATE)) Q:$E(DATE,1,5)'=$E(DATESTRT,1,5)  S TYPE="" F  S TYPE=$O(^PRCP(445.2,"AX",PRCP("I"),DATE,TYPE)) Q:TYPE=""  D
"RTN","PRCPLO2",65,0)
 .   S DA=0 F  S DA=$O(^PRCP(445.2,"AX",PRCP("I"),DATE,TYPE,DA)) Q:'DA  D
"RTN","PRCPLO2",66,0)
 .   .   S D=$G(^PRCP(445.2,DA,0)) I '$P(D,"^",5) Q
"RTN","PRCPLO2",67,0)
 .   .   ;  non-issuable
"RTN","PRCPLO2",68,0)
 .   .   Q:$P(D,"^",11)="N"  ;count if not flagged as non-issueable
"RTN","PRCPLO2",69,0)
 .   .   S ACCT=$$ACCT1^PRCPUX1($$FSC^PRCPUX1($P(D,"^",5)))
"RTN","PRCPLO2",70,0)
 .   .   S TRANSNO=$P(D,"^",19)
"RTN","PRCPLO2",71,0)
 .   .   S INVVAL=$P(D,"^",7)*$P(D,"^",8) I $P(D,"^",22)'="" S INVVAL=$P(D,"^",22)
"RTN","PRCPLO2",72,0)
 .   .   ;  set transno temporary for primary and secondary to
"RTN","PRCPLO2",73,0)
 .   .   ;  indicate type of transaction
"RTN","PRCPLO2",74,0)
 .   .   I PRCP("DPTYPE")'="W" D
"RTN","PRCPLO2",75,0)
 .   .   .   I TYPE="R"!(TYPE="C")!(TYPE="E") S TRANSNO="--1" Q  ;issue
"RTN","PRCPLO2",76,0)
 .   .   .   I TYPE="RC" S TRANSNO=1 Q  ;receipt
"RTN","PRCPLO2",77,0)
 .   .   .   S TRANSNO="" ;adjustment
"RTN","PRCPLO2",78,0)
 .   .   ;  other adjustments
"RTN","PRCPLO2",79,0)
 .   .   I PRCP("DPTYPE")="W",$P(TRANSNO,"-",2)="" S ADJ(ACCT)=$G(ADJ(ACCT))+INVVAL,ADJN(ACCT)=$G(ADJN(ACCT))+1 Q
"RTN","PRCPLO2",80,0)
 .   .   I TRANSNO="" S ADJ(ACCT)=$G(ADJ(ACCT))+INVVAL,ADJN(ACCT)=$G(ADJN(ACCT))+1
"RTN","PRCPLO2",81,0)
 .   .   E  D
"RTN","PRCPLO2",82,0)
 .   .   .   ;  purchase order
"RTN","PRCPLO2",83,0)
 .   .   .   I $P(TRANSNO,"-",3)="" S REC(ACCT)=$G(REC(ACCT))+INVVAL,RECN(ACCT)=$G(RECN(ACCT))+1 Q
"RTN","PRCPLO2",84,0)
 .   .   .   ;  issue
"RTN","PRCPLO2",85,0)
 .   .   .   S ISS(ACCT)=$G(ISS(ACCT))+INVVAL,ISSN(ACCT)=$G(ISSN(ACCT))+1
"RTN","PRCPLO2",86,0)
 ;  calculate inactive, long supply, set non-issuable
"RTN","PRCPLO2",87,0)
 S X1=$E(DT,1,5)_"01",X2=-89 D C^%DTC S DATELONG=$E(X,1,5),X1=DT,X2=$E(X,1,5)_"00" D ^%DTC S TOTDAYS=X
"RTN","PRCPLO2",88,0)
 S ITEMDA=0 F  S ITEMDA=$O(^PRCP(445,PRCP("I"),1,ITEMDA)) Q:'ITEMDA  S D=$G(^(ITEMDA,0)) I D'="" D
"RTN","PRCPLO2",89,0)
 .   S ACCT=$$ACCT1^PRCPUX1($$FSC^PRCPUX1(ITEMDA))
"RTN","PRCPLO2",90,0)
 .   ;  value
"RTN","PRCPLO2",91,0)
 .   S VALUE(ACCT)=$G(VALUE(ACCT))+$P(D,"^",27)
"RTN","PRCPLO2",92,0)
 .   S DUEIN(ACCT)=$G(DUEIN(ACCT))+($$GETIN^PRCPUDUE(PRCP("I"),ITEMDA)*$P(D,"^",22))
"RTN","PRCPLO2",93,0)
 .   S DUEOUT(ACCT)=$G(DUEOUT(ACCT))+($$GETOUT^PRCPUDUE(PRCP("I"),ITEMDA)*$P(D,"^",22))
"RTN","PRCPLO2",94,0)
 .   ;  non-issuable
"RTN","PRCPLO2",95,0)
 .   I $P(D,"^",19) S NONISS(ACCT)=$G(NONISS(ACCT))+($J($P(D,"^",19)*$P(D,"^",22),0,2)),NONISSN(ACCT)=$G(NONISSN(ACCT))+1
"RTN","PRCPLO2",96,0)
 .   ;  inactive
"RTN","PRCPLO2",97,0)
 .   ;  if reusable, quit
"RTN","PRCPLO2",98,0)
 .   I $$REUSABLE^PRCPU441(ITEMDA) Q
"RTN","PRCPLO2",99,0)
 .   S QTY=$P(D,"^",7)+$P(D,"^",19)
"RTN","PRCPLO2",100,0)
 .   I QTY,'$O(^PRCP(445,PRCP("I"),1,ITEMDA,2,$E(DATEINAC,1,5)-.01)),'$O(^PRCP(445,PRCP("I"),1,ITEMDA,3,DATEINAC)) S INACT(ACCT)=$G(INACT(ACCT))+$P(D,"^",27),INACTN(ACCT)=$G(INACTN(ACCT))+1
"RTN","PRCPLO2",101,0)
 .   ;  long supply
"RTN","PRCPLO2",102,0)
 .   S DATE=DATELONG-.01,TOTAL=0 F  S DATE=$O(^PRCP(445,PRCP("I"),1,ITEMDA,2,DATE)) Q:'DATE  S TOTAL=TOTAL+$P($G(^(DATE,0)),"^",2)
"RTN","PRCPLO2",103,0)
 .   S AVERAGE=$J(TOTAL/TOTDAYS,0,2),TOTAL=$S('AVERAGE&(QTY):9999999,'AVERAGE:0,1:QTY/AVERAGE\1)
"RTN","PRCPLO2",104,0)
 .   I TOTAL>270 S LONG(ACCT)=$G(LONG(ACCT))+$P(D,"^",27),LONGN(ACCT)=$G(LONGN(ACCT))+1
"RTN","PRCPLO2",105,0)
 ;
"RTN","PRCPLO2",106,0)
 D ENT^PRCPLO2A
"RTN","PRCPLO2",107,0)
 ;
"RTN","PRCPLO2",108,0)
 Q
"RTN","PRCPLO2A")
0^17^B19078579
"RTN","PRCPLO2A",1,0)
PRCPLO2A ;WOIFO/DAP-stock status report (cont) ; 1/26/06 12:00pm
"RTN","PRCPLO2A",2,0)
V ;;5.1;IFCAP;**83**;Oct 20, 2000
"RTN","PRCPLO2A",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO2A",4,0)
 ;
"RTN","PRCPLO2A",5,0)
ENT ;*83 Building ^TMP with total result data, totalling logic pulled from PRCPRSS0
"RTN","PRCPLO2A",6,0)
 N PRCPIN,PRCPIN1,PRCPIN2,PRCPIN3,TOTVAL
"RTN","PRCPLO2A",7,0)
 S U="^",STA=PRC("SITE"),INV=PRCP("I")
"RTN","PRCPLO2A",8,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,1)=STA ;Station #
"RTN","PRCPLO2A",9,0)
 S DATRN=$$FMTE^XLFDT(DATESTRT)
"RTN","PRCPLO2A",10,0)
 S DATRN1=$P(DATRN," ",1)_","_$P(DATRN," ",2)
"RTN","PRCPLO2A",11,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,2)=DATRN1 ;Date Range
"RTN","PRCPLO2A",12,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,3)=INARNG ;Inactivity Range
"RTN","PRCPLO2A",13,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,4)=INV ;Inventory Point #
"RTN","PRCPLO2A",14,0)
 ;*83 Retrieve external inventory point name and primary/secondary/
"RTN","PRCPLO2A",15,0)
 ;warehouse indicator
"RTN","PRCPLO2A",16,0)
 S PRCPIN=$G(^PRCP(445,INV,0))
"RTN","PRCPLO2A",17,0)
 I PRCPIN'="" S PRCPIN1=$P(PRCPIN,"^",1),PRCPIN2=$P(PRCPIN1,"-",2,99)
"RTN","PRCPLO2A",18,0)
 I PRCPIN'="" S PRCPIN3=$P(PRCPIN,"^",3)
"RTN","PRCPLO2A",19,0)
 I PRCPIN="" S PRCPIN2="",PRCPIN3=""
"RTN","PRCPLO2A",20,0)
 S PRCPIN2=$TR(PRCPIN2,"*","|")  ; Needed due to "*" delimiter
"RTN","PRCPLO2A",21,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,5)=PRCPIN2 ;Inventory Point Name
"RTN","PRCPLO2A",22,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,6)=PRCPIN3 ;P/S/W Indicator
"RTN","PRCPLO2A",23,0)
 S TOTOPEN=0 F ACCT=1,2,3,6,8 S %=$P($G(OPEN(ACCT)),U,2),TOTOPEN=TOTOPEN+%
"RTN","PRCPLO2A",24,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,7)=TOTOPEN ;Open Balance Total $
"RTN","PRCPLO2A",25,0)
 S TOTREC=0 F ACCT=1,2,3,6,8 S %=$G(REC(ACCT)),OPEN(ACCT)=$G(OPEN(ACCT))+%,TOTREC=TOTREC+%
"RTN","PRCPLO2A",26,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,8)=TOTREC ;Receipts Total $
"RTN","PRCPLO2A",27,0)
 S TOTISS=0 F ACCT=1,2,3,6,8 S %=$G(ISS(ACCT)),OPEN(ACCT)=$G(OPEN(ACCT))+%,TOTISS=TOTISS+%
"RTN","PRCPLO2A",28,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,9)=TOTISS ;Issues Total $
"RTN","PRCPLO2A",29,0)
 S TOTADJ=0 F ACCT=1,2,3,6,8 S %=$G(ADJ(ACCT)),OPEN(ACCT)=$G(OPEN(ACCT))+%,TOTADJ=TOTADJ+%
"RTN","PRCPLO2A",30,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,10)=TOTADJ ;Adjustments Total $
"RTN","PRCPLO2A",31,0)
 S TOTCLOS=0 F ACCT=1,2,3,6,8 S %=$G(OPEN(ACCT)),TOTCLOS=TOTCLOS+%
"RTN","PRCPLO2A",32,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,11)=TOTCLOS ;Closing Balance Total $
"RTN","PRCPLO2A",33,0)
 S RECNM=0 F ACCT=1,2,3,6,8 S %=$G(RECN(ACCT)),RECNM=RECNM+%,TOTN(ACCT)=%
"RTN","PRCPLO2A",34,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,12)=RECNM ;# Receipts
"RTN","PRCPLO2A",35,0)
 S TOTIS1=0 F ACCT=1,2,3,6,8 S %=$G(ISSN(ACCT)),TOTIS1=TOTIS1+%,TOTN(ACCT)=$G(TOTN(ACCT))+%
"RTN","PRCPLO2A",36,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,13)=TOTIS1 ;# Issues
"RTN","PRCPLO2A",37,0)
 S TOTAD1=0 F ACCT=1,2,3,6,8 S %=$G(ADJN(ACCT)),TOTAD1=TOTAD1+%,TOTN(ACCT)=$G(TOTN(ACCT))+%
"RTN","PRCPLO2A",38,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,14)=TOTAD1 ;# Adjustments
"RTN","PRCPLO2A",39,0)
 ;*83 Turnover computation logic also pulled from PRCPRSS0
"RTN","PRCPLO2A",40,0)
 S DAYS=$P("31^28^31^30^31^30^31^31^30^31^30^31",U,+$E(DATESTRT,4,5))
"RTN","PRCPLO2A",41,0)
 I DAYS=28 S %=(17+$E(DATESTRT))_$E(DATESTRT,2,3),DAYS=$S(%#400=0:29,(%#4=0&(%#100'=0)):29,1:28)
"RTN","PRCPLO2A",42,0)
 F ACCT=1,2,3,6,8 S %=($G(ISS(ACCT))*365)/DAYS,%=$S('$G(OPEN(ACCT)):0,1:-%/OPEN(ACCT))
"RTN","PRCPLO2A",43,0)
 ;*83 Adjusted presentation logic to remove padding
"RTN","PRCPLO2A",44,0)
 ;
"RTN","PRCPLO2A",45,0)
 I $P(%,".",2) S %=$P(%,".",1)_"."_$E($P(%,".",2),1,2)
"RTN","PRCPLO2A",46,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,15)=% ;Turnover
"RTN","PRCPLO2A",47,0)
 ;
"RTN","PRCPLO2A",48,0)
 S TOTVAL=0,%=0
"RTN","PRCPLO2A",49,0)
 F ACCT=1,2,3,6,8 I '$D(VALUE(ACCT)) S VALUE(ACCT)=0
"RTN","PRCPLO2A",50,0)
 F ACCT=1,2,3,6,8 S %=$G(VALUE(ACCT)),TOTVAL=TOTVAL+%
"RTN","PRCPLO2A",51,0)
 ;
"RTN","PRCPLO2A",52,0)
 S TOTINA=0 F ACCT=1,2,3,6,8 S %=$G(INACTN(ACCT)),TOTINA=TOTINA+%
"RTN","PRCPLO2A",53,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,16)=TOTINA ;# Inactive
"RTN","PRCPLO2A",54,0)
 S TOTIND=0 F ACCT=1,2,3,6,8 S %=$G(INACT(ACCT)),TOTIND=TOTIND+%
"RTN","PRCPLO2A",55,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,17)=TOTIND ;Inactive Total $
"RTN","PRCPLO2A",56,0)
 F ACCT=1,2,3,6,8 S %=$G(VALUE(ACCT)),%=$S('%:0,1:$G(INACT(ACCT))/%)
"RTN","PRCPLO2A",57,0)
 S %=$S('TOTVAL:0,1:TOTIND/TOTVAL)
"RTN","PRCPLO2A",58,0)
 ;*83 Adjusted presentation logic to remove padding
"RTN","PRCPLO2A",59,0)
 ;
"RTN","PRCPLO2A",60,0)
 I $P(%,".",2) S %=$P(%,".",1)_"."_$E($P(%,".",2),1,2)
"RTN","PRCPLO2A",61,0)
 I %="" S %=0
"RTN","PRCPLO2A",62,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,18)=% ;Inactive %
"RTN","PRCPLO2A",63,0)
 S TOTLNG=0 F ACCT=1,2,3,6,8 S %=$G(LONGN(ACCT)),TOTLNG=TOTLNG+%
"RTN","PRCPLO2A",64,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,19)=TOTLNG ;# Long Supply
"RTN","PRCPLO2A",65,0)
 S TOTLND=0 F ACCT=1,2,3,6,8 S %=$G(LONG(ACCT)),TOTLND=TOTLND+%
"RTN","PRCPLO2A",66,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,20)=TOTLND ;Long Supply Total $
"RTN","PRCPLO2A",67,0)
 F ACCT=1,2,3,6,8 S %=$G(VALUE(ACCT)),%=$S('%:0,1:$G(LONG(ACCT))/%)
"RTN","PRCPLO2A",68,0)
 S %=$S('TOTVAL:0,1:TOTLND/TOTVAL)
"RTN","PRCPLO2A",69,0)
 ;*83 Adjusted presentation logic to remove padding
"RTN","PRCPLO2A",70,0)
 I $P(%,".",2) S %=$P(%,".",1)_"."_$E($P(%,".",2),1,2)
"RTN","PRCPLO2A",71,0)
 I %="" S %=0
"RTN","PRCPLO2A",72,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,21)=% ;Long Supply %
"RTN","PRCPLO2A",73,0)
 ; *83 Added Total Number of InvPt Items
"RTN","PRCPLO2A",74,0)
 N INVPTLN
"RTN","PRCPLO2A",75,0)
 S INVPTLN=+$P($G(^PRCP(445,+INV,1,0)),"^",4)
"RTN","PRCPLO2A",76,0)
 S $P(^TMP($J,"PRCPRSSR",STA,INV),U,22)=INVPTLN  ;tot # line items
"RTN","PRCPLO2A",77,0)
 N SSRIEN
"RTN","PRCPLO2A",78,0)
 S SSRIEN=STA_INV
"RTN","PRCPLO2A",79,0)
 S DIC="^PRCP(446.7,",DIC(0)="L",DLAYGO=446.7,X=SSRIEN D ^DIC K DIC,DLAYGO
"RTN","PRCPLO2A",80,0)
 ;*83 Sends mail message to mail group indicating success or failure of the extract.
"RTN","PRCPLO2A",81,0)
 I Y=-1 N PRCPMSG S PRCPMSG(1)="Error saving to File #446.7 for Stock Status Report - please contact IRM." D MAIL^PRCPLO3 Q
"RTN","PRCPLO2A",82,0)
 S PRCPDA=Y+0
"RTN","PRCPLO2A",83,0)
 S PRCPDX=$TR(^TMP($J,"PRCPRSSR",STA,INV),"^","*")
"RTN","PRCPLO2A",84,0)
 S DIE="^PRCP(446.7,",DA=PRCPDA,DR="2///"_PRCPDX D ^DIE K DIE,DR,DA,PRCPDA,PRCPDX
"RTN","PRCPLO2A",85,0)
 ;
"RTN","PRCPLO2A",86,0)
 Q
"RTN","PRCPLO3")
0^8^B12210109
"RTN","PRCPLO3",1,0)
PRCPLO3 ;WOIFO/DAP/RLL-manual run option for GIP reports ; 1/26/06 12:11pm
"RTN","PRCPLO3",2,0)
V ;;5.1;IFCAP;**83**;Oct 20,2000
"RTN","PRCPLO3",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO3",4,0)
 ;
"RTN","PRCPLO3",5,0)
ENT ;This section of the routine executes calls to the separate CLRS GIP
"RTN","PRCPLO3",6,0)
 ;extract routines.
"RTN","PRCPLO3",7,0)
 ;
"RTN","PRCPLO3",8,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,PRCPSSR,ZTSK,ZTREQ,PRCPMSG
"RTN","PRCPLO3",9,0)
 S ZTRTN="ENT^PRCPLO2"
"RTN","PRCPLO3",10,0)
 S ZTDESC="PRCPLO CLO GIP Reports CLRS"
"RTN","PRCPLO3",11,0)
 S ZTDTH=$H
"RTN","PRCPLO3",12,0)
 S ZTREQ="@"
"RTN","PRCPLO3",13,0)
 S ZTIO=""
"RTN","PRCPLO3",14,0)
 D ^%ZTLOAD
"RTN","PRCPLO3",15,0)
 S PRCPSSR=ZTSK
"RTN","PRCPLO3",16,0)
 ; Calls mail group message generation and screen display with success
"RTN","PRCPLO3",17,0)
 ; or exception notification
"RTN","PRCPLO3",18,0)
 I $D(PRCPSSR)[0 S PRCPMSG(1)="A task could not be created for the CLO GIP Reports - please contact IRM." D MAIL W ! D EN^DDIOL(PRCPMSG(1)) Q
"RTN","PRCPLO3",19,0)
 ;
"RTN","PRCPLO3",20,0)
 S PRCPMSG(1)="Task # "_PRCPSSR_" entered for the CLO GIP Reports."
"RTN","PRCPLO3",21,0)
 W !
"RTN","PRCPLO3",22,0)
 D EN^DDIOL(PRCPMSG(1))
"RTN","PRCPLO3",23,0)
 D MAIL
"RTN","PRCPLO3",24,0)
 ;
"RTN","PRCPLO3",25,0)
 Q
"RTN","PRCPLO3",26,0)
 ;
"RTN","PRCPLO3",27,0)
MAIL ; Builds mail messages to a defined mail group to notify users of the 
"RTN","PRCPLO3",28,0)
 ; success or failure of the TaskMan scheduling for the CLO GIP Reports.
"RTN","PRCPLO3",29,0)
 ;
"RTN","PRCPLO3",30,0)
 N XMDUZ,XMMG,XMSUB,XMTEXT,XMY,XMZ
"RTN","PRCPLO3",31,0)
 S XMSUB="CLO GIP Report Status for "_$$HTE^XLFDT($H)
"RTN","PRCPLO3",32,0)
 S XMDUZ="Clinical Logistics Report Server"
"RTN","PRCPLO3",33,0)
 S XMTEXT="PRCPMSG("
"RTN","PRCPLO3",34,0)
 S XMY("G.PRCPLO CLRS NOTIFICATIONS")=""
"RTN","PRCPLO3",35,0)
 ;
"RTN","PRCPLO3",36,0)
 D ^XMD
"RTN","PRCPLO3",37,0)
 Q
"RTN","PRCPLO3",38,0)
 ; 
"RTN","PRCPLO3",39,0)
BLDGP2 ; Build the DAYS of stock on hand file
"RTN","PRCPLO3",40,0)
 N FILEDIR,STID,FILG2
"RTN","PRCPLO3",41,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCPLO3",42,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCPLO3",43,0)
 S FILG2="IFCP"_STID_"G2.TXT"
"RTN","PRCPLO3",44,0)
 D OPEN^%ZISH("FILE1",FILEDIR,FILG2,"W")
"RTN","PRCPLO3",45,0)
 ; D OPEN^%ZISH("FILE1",FILEDIR,"CLRSG2.TXT","W")
"RTN","PRCPLO3",46,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCPLO3",47,0)
 D GETGIPH1
"RTN","PRCPLO3",48,0)
 D GETGIPF
"RTN","PRCPLO3",49,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCPLO3",50,0)
 Q
"RTN","PRCPLO3",51,0)
BLDGP1 ; BUILD THE stock status file
"RTN","PRCPLO3",52,0)
 N FILEDIR,STID,FILG1
"RTN","PRCPLO3",53,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCPLO3",54,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCPLO3",55,0)
 S FILG1="IFCP"_STID_"G1.TXT"
"RTN","PRCPLO3",56,0)
 D OPEN^%ZISH("FILE1",FILEDIR,FILG1,"W")
"RTN","PRCPLO3",57,0)
 ; D OPEN^%ZISH("FILE1",FILEDIR,"CLRSG1.DAT","W")
"RTN","PRCPLO3",58,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCPLO3",59,0)
 D GETGIPH2
"RTN","PRCPLO3",60,0)
 D GETGIPSF
"RTN","PRCPLO3",61,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCPLO3",62,0)
 Q
"RTN","PRCPLO3",63,0)
GETGIPSF ; Get the GIP stock status data from file 446.7
"RTN","PRCPLO3",64,0)
 N GT1,GT2,GT3,GT4
"RTN","PRCPLO3",65,0)
 S GT1="",GT2="",GT3=""
"RTN","PRCPLO3",66,0)
 F  S GT1=$O(^PRCP(446.7,GT1)) Q:GT1=""  D
"RTN","PRCPLO3",67,0)
 . S GT2=$G(^PRCP(446.7,GT1,2))
"RTN","PRCPLO3",68,0)
 . I $P(GT2,"*",2)'="" W GT2,!
"RTN","PRCPLO3",69,0)
 . Q
"RTN","PRCPLO3",70,0)
 Q
"RTN","PRCPLO3",71,0)
GETGIPH1 ; Header for stock on hand report
"RTN","PRCPLO3",72,0)
 ;
"RTN","PRCPLO3",73,0)
 W "StationNum"_"*"_"DateRange"_"*"_"InvIdNum"_"*"
"RTN","PRCPLO3",74,0)
 W "InventoryPoint"_"*"_"InventoryType"_"*"_"TotalDollars"_"*"
"RTN","PRCPLO3",75,0)
 W "NumOfLineItemsSoh"_"*"_"NumOfLineItemsInv"_"*"_"CostCenter",!
"RTN","PRCPLO3",76,0)
 Q
"RTN","PRCPLO3",77,0)
GETGIPH2 ; Header for Stock Status Report
"RTN","PRCPLO3",78,0)
 W "StationNum"_"*"_"DateRange"_"*"_"NumDays"_"*"
"RTN","PRCPLO3",79,0)
 W "InvIdNum"_"*"_"InventoryPoint"_"*"_"InventoryType"_"*"_"OpenBalTotal"_"*"_"ReceiptsTot"_"*"
"RTN","PRCPLO3",80,0)
 W "IssuesTotal"_"*"_"AdjTotal"_"*"_"ClosingBalTot"_"*"
"RTN","PRCPLO3",81,0)
 W "ReceiptsTot#"_"*"_"IssuesTotal#"_"*"_"AdjTotal#"_"*"
"RTN","PRCPLO3",82,0)
 W "TurnoverTotal"_"*"_"InactiveItmTotal#"_"*"_"InactiveItemTotal$"
"RTN","PRCPLO3",83,0)
 W "*"_"InactiveItemsPct"_"*"_"LongSupplyTotal#"_"*"_"LongSupplyTotal$"
"RTN","PRCPLO3",84,0)
 W "*"_"LongSupplyPct"_"*"_"NumOfLineItemsInv",!
"RTN","PRCPLO3",85,0)
 Q
"RTN","PRCPLO3",86,0)
GETGIPF ; Get the GIP days of stock on hand data from File 446.7
"RTN","PRCPLO3",87,0)
 ;
"RTN","PRCPLO3",88,0)
 N GP1,GP2,GP3
"RTN","PRCPLO3",89,0)
 S GP1=0,GP2=0,GP3=0
"RTN","PRCPLO3",90,0)
 F  S GP1=$O(^PRCP(446.7,GP1)) Q:GP1=""  D
"RTN","PRCPLO3",91,0)
 . S GP2=$G(^PRCP(446.7,GP1,1))
"RTN","PRCPLO3",92,0)
 . I $P(GP2,"*",1)'="" W GP2,!
"RTN","PRCPLO3",93,0)
 . Q
"RTN","PRCPLO3",94,0)
 Q
"RTN","PRCPLO4")
0^12^B15950699
"RTN","PRCPLO4",1,0)
PRCPLO4 ;WOIFO/DAP- Option to allow users to reset CLRS related parameters
"RTN","PRCPLO4",2,0)
V ;;5.1;IFCAP;**83**;Oct 20,2000
"RTN","PRCPLO4",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPLO4",4,0)
 ;
"RTN","PRCPLO4",5,0)
ENT ;This allows users to enter new values for the parameters associated 
"RTN","PRCPLO4",6,0)
 ;with PRC*5.1*83 (CLRS) by prompting them for a new value for each 
"RTN","PRCPLO4",7,0)
 ;parameter after presenting the current value.  Values are screened 
"RTN","PRCPLO4",8,0)
 ;for validity and errors in setting the parameters are returned to 
"RTN","PRCPLO4",9,0)
 ;the screen. IA #2263 can be referenced for further information on the
"RTN","PRCPLO4",10,0)
 ;^XPAR calls utilized here.
"RTN","PRCPLO4",11,0)
 ;  
"RTN","PRCPLO4",12,0)
 N PRCP1,PRCP2,PRCP3,PRCP4,PRCPV,PRCPX,PRCPY,PRCPZ,ERR
"RTN","PRCPLO4",13,0)
 D PRR
"RTN","PRCPLO4",14,0)
 D PGR
"RTN","PRCPLO4",15,0)
 D PIR
"RTN","PRCPLO4",16,0)
 D PED
"RTN","PRCPLO4",17,0)
 Q
"RTN","PRCPLO4",18,0)
 ;
"RTN","PRCPLO4",19,0)
PRR ;Provide current value of and then prompt to modify the PRCPLO REPORT RANGE parameter
"RTN","PRCPLO4",20,0)
 ;
"RTN","PRCPLO4",21,0)
 S ERR=0
"RTN","PRCPLO4",22,0)
 W ! D EN^DDIOL("Stock on Hand Report Range: "_$$GET^XPAR("SYS","PRCPLO REPORT RANGE",1,"Q")_"//")
"RTN","PRCPLO4",23,0)
 R PRCP1:60
"RTN","PRCPLO4",24,0)
 I PRCP1="^" Q
"RTN","PRCPLO4",25,0)
 I PRCP1="" Q
"RTN","PRCPLO4",26,0)
 I PRCP1'?1N.N S ERR=1
"RTN","PRCPLO4",27,0)
 I PRCP1>999 S ERR=1
"RTN","PRCPLO4",28,0)
 I PRCP1<0 S ERR=1
"RTN","PRCPLO4",29,0)
 I ERR=1 W ! D EN^DDIOL("Please enter a number between 0-999 with no decimal digits.") Q
"RTN","PRCPLO4",30,0)
 D EN^XPAR("SYS","PRCPLO REPORT RANGE",1,PRCP1,.PRCPX)
"RTN","PRCPLO4",31,0)
 I PRCPX=0 W ! D EN^DDIOL("Stock on Hand Report Range successfully set to "_PRCP1)
"RTN","PRCPLO4",32,0)
 I PRCPX'=0 W ! D EN^DDIOL("Error while trying to edit the Stock on Hand Report Range:") W ! D EN^DDIOL($P(PRCPX,"^",2))
"RTN","PRCPLO4",33,0)
 Q
"RTN","PRCPLO4",34,0)
 ;
"RTN","PRCPLO4",35,0)
PIR ;Provide current value of and then prompt to modify the PRCPLO INACTIVITY RANGE parameter
"RTN","PRCPLO4",36,0)
 ;
"RTN","PRCPLO4",37,0)
 S ERR=0
"RTN","PRCPLO4",38,0)
 W ! D EN^DDIOL("Stock Status Report Inactivity Range: "_$$GET^XPAR("SYS","PRCPLO INACTIVITY RANGE",1,"Q")_"//")
"RTN","PRCPLO4",39,0)
 R PRCP2:60
"RTN","PRCPLO4",40,0)
 I PRCP2="^" Q
"RTN","PRCPLO4",41,0)
 I PRCP2="" Q
"RTN","PRCPLO4",42,0)
 I PRCP2'?1N.N S ERR=1
"RTN","PRCPLO4",43,0)
 I PRCP2>999 S ERR=1
"RTN","PRCPLO4",44,0)
 I PRCP2<0 S ERR=1
"RTN","PRCPLO4",45,0)
 I ERR=1 W ! D EN^DDIOL("Please enter a number between 0-999 with no decimal digits.") Q
"RTN","PRCPLO4",46,0)
 D EN^XPAR("SYS","PRCPLO INACTIVITY RANGE",1,PRCP2,.PRCPY)
"RTN","PRCPLO4",47,0)
 I PRCPY=0 W ! D EN^DDIOL("Stock Status Report Inactivity Range successfully set to "_PRCP2)
"RTN","PRCPLO4",48,0)
 I PRCPY'=0 W ! D EN^DDIOL("Error while trying to edit the Stock Status Report Inactivity Range:") W ! D EN^DDIOL($P(PRCPY,"^",2))
"RTN","PRCPLO4",49,0)
 Q
"RTN","PRCPLO4",50,0)
 ;
"RTN","PRCPLO4",51,0)
PGR ;Provide current value of and then prompt to modify the PRCPLO GREATER THAN RANGE parameter
"RTN","PRCPLO4",52,0)
 ;
"RTN","PRCPLO4",53,0)
 S ERR=0
"RTN","PRCPLO4",54,0)
 W ! D EN^DDIOL("Stock on Hand Report Greater Than Range: "_$$GET^XPAR("SYS","PRCPLO GREATER THAN RANGE",1,"Q")_"//")
"RTN","PRCPLO4",55,0)
 R PRCP3:60
"RTN","PRCPLO4",56,0)
 I PRCP3="^" Q
"RTN","PRCPLO4",57,0)
 I PRCP3="" Q
"RTN","PRCPLO4",58,0)
 I PRCP3'?1N.N S ERR=1
"RTN","PRCPLO4",59,0)
 I PRCP3>999 S ERR=1
"RTN","PRCPLO4",60,0)
 I PRCP3<0 S ERR=1
"RTN","PRCPLO4",61,0)
 I ERR=1 W ! D EN^DDIOL("Please enter a number between 0-999 with no decimal digits.") Q
"RTN","PRCPLO4",62,0)
 D EN^XPAR("SYS","PRCPLO GREATER THAN RANGE",1,PRCP3,.PRCPZ)
"RTN","PRCPLO4",63,0)
 I PRCPZ=0 W ! D EN^DDIOL("Stock on Hand Report Greater Than Range successfully set to "_PRCP3)
"RTN","PRCPLO4",64,0)
 I PRCPZ'=0 W ! D EN^DDIOL("Error while trying to edit the Stock on Hand Report Greater Than Range:") W ! D EN^DDIOL($P(PRCPZ,"^",2))
"RTN","PRCPLO4",65,0)
 ;
"RTN","PRCPLO4",66,0)
 Q
"RTN","PRCPLO4",67,0)
 ;
"RTN","PRCPLO4",68,0)
PED ;Provide current value of and then prompt to modify the PRCPLO EXTRACT DIRECTORY parameter
"RTN","PRCPLO4",69,0)
 ;
"RTN","PRCPLO4",70,0)
 S ERR=0
"RTN","PRCPLO4",71,0)
 W ! D EN^DDIOL("CLRS Extract Directory: "_$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")_"//")
"RTN","PRCPLO4",72,0)
 R PRCP4:60
"RTN","PRCPLO4",73,0)
 I PRCP4="^" Q
"RTN","PRCPLO4",74,0)
 I PRCP4="" Q
"RTN","PRCPLO4",75,0)
 I PRCP4="??" S ERR=1
"RTN","PRCPLO4",76,0)
 I $L(PRCP4)>245 S ERR=1
"RTN","PRCPLO4",77,0)
 I ERR=1 W ! D EN^DDIOL("Please enter a free text string between 1-245 characters.") Q
"RTN","PRCPLO4",78,0)
 D EN^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,PRCP4,.PRCPV)
"RTN","PRCPLO4",79,0)
 I PRCPV=0 W ! D EN^DDIOL("CLRS Extract Directory successfully set to "_PRCP4)
"RTN","PRCPLO4",80,0)
 I PRCPV'=0 W ! D EN^DDIOL("Error while trying to edit the CLRS Extract Directory:") W ! D EN^DDIOL($P(PRCPV,"^",2))
"RTN","PRCPLO4",81,0)
 ;
"RTN","PRCPLO4",82,0)
 Q
"RTN","PRCPRSOH")
0^10^B20391419
"RTN","PRCPRSOH",1,0)
PRCPRSOH ;WISC/RFJ/DAP-days of stock on hand report ;22 Oct 92
"RTN","PRCPRSOH",2,0)
 ;;5.1;IFCAP;**84,83**;Oct 20, 2000
"RTN","PRCPRSOH",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPRSOH",4,0)
 ;
"RTN","PRCPRSOH",5,0)
 ;*83 Routine PRCPLO associated with PRC*5.1*83 is a modified copy of
"RTN","PRCPRSOH",6,0)
 ;this routine and any changes made to this routine should also be
"RTN","PRCPRSOH",7,0)
 ;considered for that routine as well.
"RTN","PRCPRSOH",8,0)
 ;
"RTN","PRCPRSOH",9,0)
 D ^PRCPUSEL Q:'$G(PRCP("I"))
"RTN","PRCPRSOH",10,0)
 N DATEEND,DATEENDD,DATESTRD,DATESTRT,DAYSLEFT,DIR,GROUPALL,PRCPDAYS,PRCPEND,PRCPSTRT,PRCPTYPE,TOTALDAY,X,X1,X2,Y
"RTN","PRCPRSOH",11,0)
 K X S X(1)="The Days Of Stock On Hand Report will print a list of items which have stock on hand less than or greater than a specified number of days."
"RTN","PRCPRSOH",12,0)
 D DISPLAY^PRCPUX2(40,79,.X)
"RTN","PRCPRSOH",13,0)
 K X S X(1)="Select the date range which should be used for calculating the daily usage. *** Select by month & year only. ***" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPRSOH",14,0)
 D MONTHSEL^PRCPURS2 I '$G(DATEEND) Q
"RTN","PRCPRSOH",15,0)
 S X1=DATEEND,X2=DATESTRT D ^%DTC S TOTALDAY=X+1
"RTN","PRCPRSOH",16,0)
 S Y=DATEEND D DD^%DT S DATEENDD=Y,Y=DATESTRT D DD^%DT S DATESTRD=Y
"RTN","PRCPRSOH",17,0)
 W !?5,"-- TOTAL NUMBER OF DAYS: ",TOTALDAY
"RTN","PRCPRSOH",18,0)
 ;  select greater or less
"RTN","PRCPRSOH",19,0)
 K X S X(1)="Select the type of report: less than a specified number of days or greater than a specified number of days." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPRSOH",20,0)
 S DIR(0)="S^1:LESS;2:GREATER",DIR("A")="Print items with GREATER or LESS than 'X' days stock on hand",DIR("B")="LESS"
"RTN","PRCPRSOH",21,0)
 D ^DIR S PRCPTYPE=+Y I 'PRCPTYPE Q
"RTN","PRCPRSOH",22,0)
 ;  select days
"RTN","PRCPRSOH",23,0)
 K X S X(1)="Select the number of days which the current stock on hand should be "_$S(PRCPTYPE=1:"LESS than",1:"GREATER than")_"." D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPRSOH",24,0)
 S DIR(0)="N^1:365",DIR("A")="Print items with stock on hand "_$S(PRCPTYPE=1:"less than",1:"greater than")_" DAYS",DIR("B")=30
"RTN","PRCPRSOH",25,0)
 D ^DIR S PRCPDAYS=+Y I 'PRCPDAYS Q
"RTN","PRCPRSOH",26,0)
 ;  whse sort
"RTN","PRCPRSOH",27,0)
 I PRCP("DPTYPE")="W" D  I '$D(PRCPSTRT) Q
"RTN","PRCPRSOH",28,0)
 .   K X S X(1)="Select the range of NSNs to display" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPRSOH",29,0)
 .   D NSNSEL^PRCPURS0
"RTN","PRCPRSOH",30,0)
 ;  prim/seco sort
"RTN","PRCPRSOH",31,0)
 I PRCP("DPTYPE")'="W" D  I '$G(GROUPALL),'$O(^TMP($J,"PRCPURS1","YES",0)) W !,"*** NO GROUP CATEGORIES SELECTED !" Q
"RTN","PRCPRSOH",32,0)
 .   K X S X(1)="Select the Group Categories to display" D DISPLAY^PRCPUX2(2,40,.X)
"RTN","PRCPRSOH",33,0)
 .   D GROUPSEL^PRCPURS1(PRCP("I"))
"RTN","PRCPRSOH",34,0)
 ;
"RTN","PRCPRSOH",35,0)
 S %ZIS="Q" D ^%ZIS Q:POP  I $D(IO("Q")) D  Q
"RTN","PRCPRSOH",36,0)
 .   S ZTDESC="Days of Stock On Hand Report",ZTRTN="DQ^PRCPRSOH"
"RTN","PRCPRSOH",37,0)
 .   S ZTSAVE("^TMP($J,""PRCPURS1"",")=""
"RTN","PRCPRSOH",38,0)
 .   S ZTSAVE("DATE*")="",ZTSAVE("GROUP*")="",ZTSAVE("PRCP*")="",ZTSAVE("TOTALDAY")="",ZTSAVE("ZTREQ")="@"
"RTN","PRCPRSOH",39,0)
 .   D ^%ZTLOAD
"RTN","PRCPRSOH",40,0)
 W !!,"<*> please wait <*>"
"RTN","PRCPRSOH",41,0)
DQ ;  queue starts here
"RTN","PRCPRSOH",42,0)
 N AVERAGE,DATE,GROUP,GROUPNM,ITEMDA,ITEMDATA,NSN,ONHAND,TOTAL,X,Y
"RTN","PRCPRSOH",43,0)
 K ^TMP($J,"PRCPRSOH")
"RTN","PRCPRSOH",44,0)
 S ITEMDA=0 F  S ITEMDA=$O(^PRCP(445,PRCP("I"),1,ITEMDA)) Q:'ITEMDA  S ITEMDATA=$G(^(ITEMDA,0)) I ITEMDATA'="" D
"RTN","PRCPRSOH",45,0)
 .   I $$REUSABLE^PRCPU441(ITEMDA) Q
"RTN","PRCPRSOH",46,0)
 .   ;  calculate total usage between dates
"RTN","PRCPRSOH",47,0)
 .   S DATE=$E(DATESTRT,1,5)-.01,TOTAL=0 F  S DATE=$O(^PRCP(445,PRCP("I"),1,ITEMDA,2,DATE)) Q:'DATE!(DATE>$E(DATEEND,1,5))  S TOTAL=TOTAL+$P($G(^(DATE,0)),"^",2)
"RTN","PRCPRSOH",48,0)
 .   S AVERAGE=$J(TOTAL/TOTALDAY,0,2),ONHAND=$P(ITEMDATA,"^",7)+$P(ITEMDATA,"^",19)
"RTN","PRCPRSOH",49,0)
 .   S DAYSLEFT=$S('AVERAGE&(ONHAND):9999999,'AVERAGE:0,1:ONHAND/AVERAGE\1)
"RTN","PRCPRSOH",50,0)
 .   I PRCPTYPE=1,DAYSLEFT'<PRCPDAYS Q
"RTN","PRCPRSOH",51,0)
 .   I PRCPTYPE=2,DAYSLEFT'>PRCPDAYS Q
"RTN","PRCPRSOH",52,0)
 .   ;  sort for whse
"RTN","PRCPRSOH",53,0)
 .   I PRCP("DPTYPE")="W" D  Q
"RTN","PRCPRSOH",54,0)
 .   .   S NSN=$$NSN^PRCPUX1(ITEMDA) S:NSN="" NSN=" "
"RTN","PRCPRSOH",55,0)
 .   .   I $E(NSN,1,$L(PRCPSTRT))'=PRCPSTRT,$E(NSN,1,$L(PRCPEND))'=PRCPEND I NSN']PRCPSTRT!(PRCPEND']NSN) Q
"RTN","PRCPRSOH",56,0)
 .   .   S ^TMP($J,"PRCPRSOH",NSN,ITEMDA)=TOTAL_"^"_AVERAGE_"^"_ONHAND_"^"_$P(DAYSLEFT,".")_"^"_$P(ITEMDATA,"^",27)
"RTN","PRCPRSOH",57,0)
 .   ;  sort for primary and secondary
"RTN","PRCPRSOH",58,0)
 .   S GROUP=+$P(ITEMDATA,"^",21)
"RTN","PRCPRSOH",59,0)
 .   I 'GROUP,'$G(GROUPALL) Q
"RTN","PRCPRSOH",60,0)
 .   I $G(GROUPALL),$D(^TMP($J,"PRCPURS1","NO",GROUP)) Q
"RTN","PRCPRSOH",61,0)
 .   I '$G(GROUPALL),'$D(^TMP($J,"PRCPURS1","YES",GROUP)) Q
"RTN","PRCPRSOH",62,0)
 .   S GROUPNM=$$GROUPNM^PRCPEGRP(GROUP)
"RTN","PRCPRSOH",63,0)
 .   I GROUPNM'="" S GROUPNM=$E(GROUPNM,1,20)_" (#"_GROUP_")"
"RTN","PRCPRSOH",64,0)
 .   S:GROUPNM="" GROUPNM=" "
"RTN","PRCPRSOH",65,0)
 .   S ^TMP($J,"PRCPRSOH",GROUPNM,$E($$DESCR^PRCPUX1(PRCP("I"),ITEMDA),1,15),ITEMDA)=TOTAL_"^"_AVERAGE_"^"_ONHAND_"^"_$P(DAYSLEFT,".")_"^"_$P(ITEMDATA,"^",27)
"RTN","PRCPRSOH",66,0)
 ;
"RTN","PRCPRSOH",67,0)
 D PRINT^PRCPRSO1
"RTN","PRCPRSOH",68,0)
 K ^TMP($J,"PRCPURS1"),^TMP($J,"PRCPRSOH")
"RTN","PRCPRSOH",69,0)
 D ^%ZISC
"RTN","PRCPRSOH",70,0)
 Q
"RTN","PRCPUSEL")
0^11^B26828500
"RTN","PRCPUSEL",1,0)
PRCPUSEL ;WISC/RFJ/DAP-utilities: setup inventory variables ;14 Feb 91
"RTN","PRCPUSEL",2,0)
V ;;5.1;IFCAP;**1,83**;Oct 20, 2000
"RTN","PRCPUSEL",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCPUSEL",4,0)
 ;  enter distribution point--input variables:
"RTN","PRCPUSEL",5,0)
 ;  prcp("dptype")=distribution point type code [W,P,S]
"RTN","PRCPUSEL",6,0)
 ;  returns the following variables:
"RTN","PRCPUSEL",7,0)
 ;  prcp("in")=name of inv pt (no station #),
"RTN","PRCPUSEL",8,0)
 ;  prcp("inv")=keep perpetual inventory flag
"RTN","PRCPUSEL",9,0)
 ;  prcp("his")=keep detailed history flag,
"RTN","PRCPUSEL",10,0)
 ;  prcp("i")=da of inv pt
"RTN","PRCPUSEL",11,0)
 ;
"RTN","PRCPUSEL",12,0)
 ;*83 Routine PRCPLO1 associated with PRC*5.1*83 is a modified copy of
"RTN","PRCPUSEL",13,0)
 ;this routine and any changes made to this routine should also be
"RTN","PRCPUSEL",14,0)
 ;considered for that routine as well.
"RTN","PRCPUSEL",15,0)
 ;
"RTN","PRCPUSEL",16,0)
 N %,C,DISYS,I,J,PRCF,PRCPFLAG,X,Y
"RTN","PRCPUSEL",17,0)
 I +$G(DUZ)<1 W !,"YOU ARE NOT SETUP AS A USER!" K PRC,PRCP Q
"RTN","PRCPUSEL",18,0)
 ;
"RTN","PRCPUSEL",19,0)
 S %=0 F I="FY","PARAM","PER","QTR","SITE" I '+$G(PRC(I)) S %=1 Q
"RTN","PRCPUSEL",20,0)
 I % S PRCF("X")="S" D ^PRCFSITE I '+$G(PRC("SITE")) K PRC,PRCP Q
"RTN","PRCPUSEL",21,0)
 ;
"RTN","PRCPUSEL",22,0)
 S %=0 F I="DPTYPE","HIS","I","IN","INV" I '$D(PRCP(I)) S %=1 Q
"RTN","PRCPUSEL",23,0)
 I '% D DISPLAY Q
"RTN","PRCPUSEL",24,0)
 ;
"RTN","PRCPUSEL",25,0)
 ;  allow adding new whse if not one for station
"RTN","PRCPUSEL",26,0)
 I $G(PRCP("DPTYPE"))="W" D  Q:$G(PRCPFLAG)
"RTN","PRCPUSEL",27,0)
 .   K PRCPFLAG
"RTN","PRCPUSEL",28,0)
 .   S %=0 F  S %=$O(^PRCP(445,"AC","W",%)) Q:'%  I $P($P($G(^PRCP(445,%,0)),"^"),"-")=PRC("SITE") S PRCPFLAG=1 Q
"RTN","PRCPUSEL",29,0)
 .   I $G(PRCPFLAG) K PRCPFLAG Q
"RTN","PRCPUSEL",30,0)
 .   S PRCP("I")=$$INVPT^PRCPUINV(PRC("SITE"),"W",1,1,"")
"RTN","PRCPUSEL",31,0)
 .   I 'PRCP("I") S PRCPFLAG=1 K PRC,PRCP
"RTN","PRCPUSEL",32,0)
 ;
"RTN","PRCPUSEL",33,0)
 S %=$S($D(PRCP("DPTYPE")):PRCP("DPTYPE"),1:"^")
"RTN","PRCPUSEL",34,0)
 S (I,J)=0
"RTN","PRCPUSEL",35,0)
 F  S I=$O(^PRCP(445,"AD",DUZ,I)) Q:'I  I $D(^PRCP(445,I,0)) D  I J>1 Q
"RTN","PRCPUSEL",36,0)
 .   S:%="^"!(%[$P(^PRCP(445,I,0),"^",3)) Y(0)=^(0),J=J+1,Y=I
"RTN","PRCPUSEL",37,0)
 I J=1 D  Q:$G(PRCPFLAG)  S PRC("SITE")=+Y(0) D V1 Q
"RTN","PRCPUSEL",38,0)
 .   I '$D(^PRC(411,+Y(0),0)) D  K PRC,PRCP S PRCPFLAG=1
"RTN","PRCPUSEL",39,0)
 .   .   W !,"ERROR - SITE PARAMETERS IN FILE 411 FOR SITE "
"RTN","PRCPUSEL",40,0)
 .   .   W +Y(0)," ARE MISSING."
"RTN","PRCPUSEL",41,0)
 I $G(PRCHAUTH) Q:'$G(PRCP("I"))  D  G V1
"RTN","PRCPUSEL",42,0)
 .   S Y=PRCP("I")_"^"_$P($G(^PRCP(445,PRCP("I"),0)),U)
"RTN","PRCPUSEL",43,0)
 ;
"RTN","PRCPUSEL",44,0)
 S DIC="^PRCP(445,",DIC(0)="AEQMOZ"
"RTN","PRCPUSEL",45,0)
 S DIC("S")="I +^(0)=PRC(""SITE""),$P(^(0),U,2)=""Y"",$D(^PRCP(445,+Y,4,DUZ,0))"
"RTN","PRCPUSEL",46,0)
 I $D(PRCP("DPTYPE")) S DIC("S")=DIC("S")_",PRCP(""DPTYPE"")[$P(^PRCP(445,+Y,0),U,3)"
"RTN","PRCPUSEL",47,0)
 S DIC("A")="Select "_$S('$D(PRCP("DPTYPE")):"",PRCP("DPTYPE")="W":"Supply Warehouse ",PRCP("DPTYPE")="P":"Primary ",PRCP("DPTYPE")="S":"Secondary ",1:"")_"Inventory Point: "
"RTN","PRCPUSEL",48,0)
 S D="C",PRCPPRIV=1
"RTN","PRCPUSEL",49,0)
 D IX^DIC
"RTN","PRCPUSEL",50,0)
 K PRCPPRIV,DIC
"RTN","PRCPUSEL",51,0)
 I Y<0 K PRC,PRCP Q
"RTN","PRCPUSEL",52,0)
 ;
"RTN","PRCPUSEL",53,0)
V1 ;  internal program jump
"RTN","PRCPUSEL",54,0)
 D PARAM(+Y)
"RTN","PRCPUSEL",55,0)
 ;
"RTN","PRCPUSEL",56,0)
DISPLAY ;  display top of page header
"RTN","PRCPUSEL",57,0)
 I '$G(PRCP("I")) G PRCPUSEL
"RTN","PRCPUSEL",58,0)
 S %=0 F I="RV1","RV0","XY" I '$D(PRCP(I)) S %=1 Q
"RTN","PRCPUSEL",59,0)
 I % D TERM
"RTN","PRCPUSEL",60,0)
 ;
"RTN","PRCPUSEL",61,0)
 S %="",$P(%," ",81)=""
"RTN","PRCPUSEL",62,0)
 S X="I N V E N T O R Y  version "_$P($T(PRCPUSEL+1),";",3)
"RTN","PRCPUSEL",63,0)
 S Y=80-$L(X)\2
"RTN","PRCPUSEL",64,0)
 S X=$E(%,1,Y)_X_%
"RTN","PRCPUSEL",65,0)
 W @IOF,PRCP("RV1"),$E(X,1,40)
"RTN","PRCPUSEL",66,0)
 X PRCP("XY")
"RTN","PRCPUSEL",67,0)
 W $E(X,41,80),PRCP("RV0")
"RTN","PRCPUSEL",68,0)
 S PRCP("PAR")=^PRCP(445,PRCP("I"),0)
"RTN","PRCPUSEL",69,0)
 S X=$S(+$G(PRC("SITE")):"("_PRC("SITE")_") ",1:"")
"RTN","PRCPUSEL",70,0)
 S X=X_$S(PRCP("DPTYPE")="W":"Warehouse ",PRCP("DPTYPE")="P":"Primary ",PRCP("DPTYPE")="S":"Secondary ",1:"")
"RTN","PRCPUSEL",71,0)
 S X=X_"Inventory Point: "_PRCP("IN")
"RTN","PRCPUSEL",72,0)
 W !,X,?(80-$L($P($G(PRC("PER")),"^",2))),$P($G(PRC("PER")),"^",2)
"RTN","PRCPUSEL",73,0)
 I PRCP("DPTYPE")="P" S Y=$P(PRCP("PAR"),"^",12) I Y,Y'>DT D
"RTN","PRCPUSEL",74,0)
 .   D DD^%DT
"RTN","PRCPUSEL",75,0)
 .   W !,?6,"--> NEXT REQUEST FOR WAREHOUSE ISSUES IS DUE IN SUPPLY ON ",Y,"."
"RTN","PRCPUSEL",76,0)
 I $P(PRCP("PAR"),"^",9)="Y" D
"RTN","PRCPUSEL",77,0)
 .   W !?6,"--> THERE ARE ITEMS AT OR BELOW THE EMERGENCY STOCK LEVEL."
"RTN","PRCPUSEL",78,0)
 I $E($P(PRCP("PAR"),"^",14),1,5)'=$E(DT,1,5) D
"RTN","PRCPUSEL",79,0)
 .   W !?6,"--> USAGE/DISTRIBUTION TOTALS NEEDS TO BE PURGED."
"RTN","PRCPUSEL",80,0)
 I $E($P(PRCP("PAR"),"^",17),1,5)'=$E(DT,1,5) D
"RTN","PRCPUSEL",81,0)
 .   W !?6,"--> RECEIPTS HISTORY BY ITEM NEEDS TO BE PURGED."
"RTN","PRCPUSEL",82,0)
 I PRCP("DPTYPE")'="S",$E($P(PRCP("PAR"),"^",19),1,5)'=$E(DT,1,5) D
"RTN","PRCPUSEL",83,0)
 .   W !?6,"--> DISTRIBUTION HISTORY NEEDS TO BE PURGED."
"RTN","PRCPUSEL",84,0)
 I $E($P(PRCP("PAR"),"^",18),1,5)'=$E(DT,1,5) D
"RTN","PRCPUSEL",85,0)
 .   W !?6,"--> TRANSACTION REGISTER NEEDS TO BE PURGED."
"RTN","PRCPUSEL",86,0)
 I $P(PRCP("PAR"),"^",6)="Y",$E($P(PRCP("PAR"),"^",22),1,5)'=$E(DT,1,5) D
"RTN","PRCPUSEL",87,0)
 .   W !?6,"--> OPENING MONTHLY INVENTORY BALANCES NEED TO BE SET."
"RTN","PRCPUSEL",88,0)
 I PRCP("DPTYPE")="S",$P($G(^PRCP(445,PRCP("I"),5)),"^",1)]"" D SSMSG
"RTN","PRCPUSEL",89,0)
 I $O(^PRCP(447.1,"C",+PRCP("PAR"),PRCP("I"),"")) D
"RTN","PRCPUSEL",90,0)
 .   W !?6,"--> THERE ARE UNPROCESSED SUPPLY STATION TRANSACTIONS."
"RTN","PRCPUSEL",91,0)
 ;
"RTN","PRCPUSEL",92,0)
 W !,PRCP("RV1"),$E(%,1,40) X PRCP("XY") W $E(%,41,80),PRCP("RV0")
"RTN","PRCPUSEL",93,0)
 Q
"RTN","PRCPUSEL",94,0)
 ;
"RTN","PRCPUSEL",95,0)
 ;
"RTN","PRCPUSEL",96,0)
NOMENU ;  user did not select a valid inventory point, do not allow access
"RTN","PRCPUSEL",97,0)
 ;  to the menu (called from option file)
"RTN","PRCPUSEL",98,0)
 N X
"RTN","PRCPUSEL",99,0)
 S X(1)="YOU MUST SELECT A VALID INVENTORY POINT BEFORE ACCESSING THIS MENU" D DISPLAY^PRCPUX2(1,79,.X)
"RTN","PRCPUSEL",100,0)
 Q
"RTN","PRCPUSEL",101,0)
 ;
"RTN","PRCPUSEL",102,0)
 ;
"RTN","PRCPUSEL",103,0)
PARAM(INVPT)       ;  set up parameters for inventory point
"RTN","PRCPUSEL",104,0)
 K PRCP
"RTN","PRCPUSEL",105,0)
 N DATA
"RTN","PRCPUSEL",106,0)
 S DATA=$G(^PRCP(445,INVPT,0)) I DATA="" Q
"RTN","PRCPUSEL",107,0)
 S PRCP("I")=INVPT,PRCP("IN")=$P($P(DATA,"^"),"-",2,99),PRCP("INV")=$P(DATA,"^",2),PRCP("HIS")=$P(DATA,"^",6),PRCP("DPTYPE")=$P(DATA,"^",3)
"RTN","PRCPUSEL",108,0)
 D TERM
"RTN","PRCPUSEL",109,0)
 Q
"RTN","PRCPUSEL",110,0)
 ;
"RTN","PRCPUSEL",111,0)
 ;
"RTN","PRCPUSEL",112,0)
TERM ;  get terminal attributes
"RTN","PRCPUSEL",113,0)
 N X
"RTN","PRCPUSEL",114,0)
 I '$D(IOF)!('$G(IOST(0))) S IOP="HOME" D ^%ZIS K IOP
"RTN","PRCPUSEL",115,0)
 S X="IORVON;IORVOFF" D ENDR^%ZISS
"RTN","PRCPUSEL",116,0)
 S PRCP("RV1")=$G(IORVON),PRCP("RV0")=$G(IORVOFF)
"RTN","PRCPUSEL",117,0)
 S PRCP("XY")="N DX,DY S (DX,DY)=0 "_$G(^%ZOSF("XY"))
"RTN","PRCPUSEL",118,0)
 Q
"RTN","PRCPUSEL",119,0)
 ;
"RTN","PRCPUSEL",120,0)
SSMSG ; check supply station secondaries, give message of qty mismatch
"RTN","PRCPUSEL",121,0)
 N GIPCNT,INVPT,ITEM,PRCPFLAG,SSCNT
"RTN","PRCPUSEL",122,0)
 S INVPT=PRCP("I")
"RTN","PRCPUSEL",123,0)
 S ITEM=0
"RTN","PRCPUSEL",124,0)
 F  S ITEM=$O(^PRCP(445,INVPT,1,ITEM)) Q:'+ITEM  D  I $D(PRCPFLAG) Q
"RTN","PRCPUSEL",125,0)
 .  I $P($G(^PRCP(445,INVPT,1,ITEM,0)),"^",9)<1 Q  ; not a SS item
"RTN","PRCPUSEL",126,0)
 .  S GIPCNT=$P($G(^PRCP(445,INVPT,1,ITEM,0)),"^",7)
"RTN","PRCPUSEL",127,0)
 .  S SSCNT=$P($G(^PRCP(445,INVPT,1,ITEM,9)),"^",1)
"RTN","PRCPUSEL",128,0)
 .  I 'GIPCNT,'SSCNT Q
"RTN","PRCPUSEL",129,0)
 .  I GIPCNT=SSCNT Q
"RTN","PRCPUSEL",130,0)
 .  W !,?6,"--> QUANTITY DISCREPANCIES EXIST WITH THE SUPPLY STATION."
"RTN","PRCPUSEL",131,0)
 . S PRCPFLAG=1
"SEC","^DIC",446.7,446.7,0,"AUDIT")
@
"SEC","^DIC",446.7,446.7,0,"DD")
@
"SEC","^DIC",446.7,446.7,0,"DEL")
@
"SEC","^DIC",446.7,446.7,0,"LAYGO")
@
"SEC","^DIC",446.7,446.7,0,"RD")
@
"SEC","^DIC",446.7,446.7,0,"WR")
@
"VER")
8.0^22.0
"^DD",446.7,446.7,0)
FIELD^^2^3
"^DD",446.7,446.7,0,"DDA")
N
"^DD",446.7,446.7,0,"DT")
3051012
"^DD",446.7,446.7,0,"IX","B",446.7,.01)

"^DD",446.7,446.7,0,"NM","CLRS REPORT STORAGE")

"^DD",446.7,446.7,.01,0)
STATION/INVENTORY POINT/RANGE^NJ8,0^^0;1^K:+X'=X!(X>99999999)!(X<1)!(X?.E1"."1N.N) X
"^DD",446.7,446.7,.01,.1)

"^DD",446.7,446.7,.01,1,0)
^.1
"^DD",446.7,446.7,.01,1,1,0)
446.7^B
"^DD",446.7,446.7,.01,1,1,1)
S ^PRCP(446.7,"B",$E(X,1,30),DA)=""
"^DD",446.7,446.7,.01,1,1,2)
K ^PRCP(446.7,"B",$E(X,1,30),DA)
"^DD",446.7,446.7,.01,3)
Type a Number between 1 and 99999999, 0 Decimal Digits
"^DD",446.7,446.7,.01,21,0)
^^3^3^3051013^
"^DD",446.7,446.7,.01,21,1,0)
This is a number representing a combination of the station number 
"^DD",446.7,446.7,.01,21,2,0)
concatenated with the inventory point and an associated range for the 
"^DD",446.7,446.7,.01,21,3,0)
CLRS report being stored.
"^DD",446.7,446.7,.01,"DT")
3051013
"^DD",446.7,446.7,1,0)
SOH REPORT DATA^F^^1;1^K:$L(X)>245!($L(X)<1) X
"^DD",446.7,446.7,1,3)
Answer must be 1-245 characters in length.
"^DD",446.7,446.7,1,21,0)
^^4^4^3051128^
"^DD",446.7,446.7,1,21,1,0)
This field will house the CLRS report data for the Stock on Hand report 
"^DD",446.7,446.7,1,21,2,0)
associated with PRC*5.1*83 (CLRS). The data presents as follows, with 
"^DD",446.7,446.7,1,21,3,0)
each field in brackets: <Station#>*<Date Range>*<Inventory Point>*
"^DD",446.7,446.7,1,21,4,0)
<Inventory Point Type>*<Total $ Value>*<# of Line Items>*<Cost Center>
"^DD",446.7,446.7,1,"DT")
3051010
"^DD",446.7,446.7,2,0)
SSR REPORT DATA^F^^2;1^K:$L(X)>245!($L(X)<1) X
"^DD",446.7,446.7,2,3)
Answer must be 1-245 characters in length.
"^DD",446.7,446.7,2,21,0)
^^8^8^3051128^
"^DD",446.7,446.7,2,21,1,0)
This field will house the CLRS report data for the Stock Status Report 
"^DD",446.7,446.7,2,21,2,0)
associated with PRC*5.1*83 (CLRS).  The data reports as follows, with 
"^DD",446.7,446.7,2,21,3,0)
each field in brackets: <Station #>*<Date Range>*<Inactivity 
"^DD",446.7,446.7,2,21,4,0)
Range>*<Inventory Point>*<Inventory Point Type>*<Open Balance Total
"^DD",446.7,446.7,2,21,5,0)
$>*<Receipts Total $>*<Issues Total $>*<Adjustments Total  $>*<Closing
"^DD",446.7,446.7,2,21,6,0)
Balance Total $>*<# Receipts>*<# Issues>*<# Adjustments>*<Turnover
"^DD",446.7,446.7,2,21,7,0)
Total>*<# Inactive Items>*<Inactive Items Total $>*<% Inactive Items>*<#
"^DD",446.7,446.7,2,21,8,0)
Long Supply>*<Long Supply Total $>*<% Long Supply>
"^DD",446.7,446.7,2,"DT")
3051010
"^DIC",446.7,446.7,0)
CLRS REPORT STORAGE^446.7
"^DIC",446.7,446.7,0,"GL")
^PRCP(446.7,
"^DIC",446.7,446.7,"%D",0)
^^2^2^3051013^
"^DIC",446.7,446.7,"%D",1,0)
This file will house report data for the Days of Stock on Hand 
"^DIC",446.7,446.7,"%D",2,0)
and Stock Status reports associated with PRC*5.1*83 (CLRS). 
"^DIC",446.7,"B","CLRS REPORT STORAGE",446.7)

"BLD",4619,6)
^79
**END**
**END**
