Released EAS*1*26 SEQ #32
Extracted from mail message
**KIDS**:EAS*1.0*26^

**INSTALL NAME**
EAS*1.0*26
"BLD",4811,0)
EAS*1.0*26^ENROLLMENT APPLICATION SYSTEM^0^3030618^y
"BLD",4811,4,0)
^9.64PA^^
"BLD",4811,"INID")
n^n^n
"BLD",4811,"INIT")
EN^EAS126
"BLD",4811,"KRN",0)
^9.67PA^8989.52^19
"BLD",4811,"KRN",.4,0)
.4
"BLD",4811,"KRN",.401,0)
.401
"BLD",4811,"KRN",.402,0)
.402
"BLD",4811,"KRN",.403,0)
.403
"BLD",4811,"KRN",.5,0)
.5
"BLD",4811,"KRN",.84,0)
.84
"BLD",4811,"KRN",3.6,0)
3.6
"BLD",4811,"KRN",3.8,0)
3.8
"BLD",4811,"KRN",9.2,0)
9.2
"BLD",4811,"KRN",9.8,0)
9.8
"BLD",4811,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",4811,"KRN",9.8,"NM",1,0)
EAS126^^0^B47374823
"BLD",4811,"KRN",9.8,"NM",2,0)
EASXDR1^^0^B71161768
"BLD",4811,"KRN",9.8,"NM","B","EAS126",1)

"BLD",4811,"KRN",9.8,"NM","B","EASXDR1",2)

"BLD",4811,"KRN",19,0)
19
"BLD",4811,"KRN",19.1,0)
19.1
"BLD",4811,"KRN",101,0)
101
"BLD",4811,"KRN",409.61,0)
409.61
"BLD",4811,"KRN",771,0)
771
"BLD",4811,"KRN",870,0)
870
"BLD",4811,"KRN",8989.51,0)
8989.51
"BLD",4811,"KRN",8989.52,0)
8989.52
"BLD",4811,"KRN",8994,0)
8994
"BLD",4811,"KRN","B",.4,.4)

"BLD",4811,"KRN","B",.401,.401)

"BLD",4811,"KRN","B",.402,.402)

"BLD",4811,"KRN","B",.403,.403)

"BLD",4811,"KRN","B",.5,.5)

"BLD",4811,"KRN","B",.84,.84)

"BLD",4811,"KRN","B",3.6,3.6)

"BLD",4811,"KRN","B",3.8,3.8)

"BLD",4811,"KRN","B",9.2,9.2)

"BLD",4811,"KRN","B",9.8,9.8)

"BLD",4811,"KRN","B",19,19)

"BLD",4811,"KRN","B",19.1,19.1)

"BLD",4811,"KRN","B",101,101)

"BLD",4811,"KRN","B",409.61,409.61)

"BLD",4811,"KRN","B",771,771)

"BLD",4811,"KRN","B",870,870)

"BLD",4811,"KRN","B",8989.51,8989.51)

"BLD",4811,"KRN","B",8989.52,8989.52)

"BLD",4811,"KRN","B",8994,8994)

"BLD",4811,"QUES",0)
^9.62^^
"BLD",4811,"REQB",0)
^9.611^1^1
"BLD",4811,"REQB",1,0)
EAS*1.0*10^2
"BLD",4811,"REQB","B","EAS*1.0*10",1)

"INIT")
EN^EAS126
"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
26^3030618
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","EAS126")
0^1^B47374823
"RTN","EAS126",1,0)
EAS126 ;ALB/PHH - EAS*1*26 POST-INSTALL ;05-27-2003
"RTN","EAS126",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**26**;MAR 15,2001
"RTN","EAS126",3,0)
 Q
"RTN","EAS126",4,0)
EN ; Entry point for post-install
"RTN","EAS126",5,0)
 D FIXOPT,START
"RTN","EAS126",6,0)
 Q
"RTN","EAS126",7,0)
RESET ; Reset the data for the cleanup process
"RTN","EAS126",8,0)
 K ^XTMP($$NAMESPC)
"RTN","EAS126",9,0)
 Q
"RTN","EAS126",10,0)
TEST ; Simulate Live Run
"RTN","EAS126",11,0)
 N MODE
"RTN","EAS126",12,0)
 S MODE=0
"RTN","EAS126",13,0)
START ; Start Processor
"RTN","EAS126",14,0)
 N NAMESPC,QTIME
"RTN","EAS126",15,0)
 S NAMESPC=$$NAMESPC
"RTN","EAS126",16,0)
 Q:$$RUNCHK(NAMESPC)   ; Quit if already running or has run to completion
"RTN","EAS126",17,0)
 Q:$$QTIME(.QTIME)
"RTN","EAS126",18,0)
 S:$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) MODE=^XTMP(NAMESPC,"CONFIG","RUN MODE")
"RTN","EAS126",19,0)
 S:'$D(^XTMP(NAMESPC,"CONFIG","RUN MODE")) ^XTMP(NAMESPC,"CONFIG","RUN MODE")=$S($G(MODE)=0:0,1:1)
"RTN","EAS126",20,0)
 S ^XTMP(NAMESPC,"CONFIG","USER")=$S($G(DUZ)'="":DUZ,1:"UNKNOWN")
"RTN","EAS126",21,0)
 S:'$$QUEUE(QTIME) ^XTMP(NAMESPC,"CONFIG","RUNNING")=""
"RTN","EAS126",22,0)
 Q
"RTN","EAS126",23,0)
NAMESPC() ; API returns the name space for this patch
"RTN","EAS126",24,0)
 Q "EAS26"
"RTN","EAS126",25,0)
RUNCHK(NAMESPC) ; Check to see if clean up is already running
"RTN","EAS126",26,0)
 Q:NAMESPC="" 1                   ; Name Space must be defined
"RTN","EAS126",27,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","RUNNING")) 1
"RTN","EAS126",28,0)
 Q:$D(^XTMP(NAMESPC,"CONFIG","COMPLETE")) 1
"RTN","EAS126",29,0)
 Q 0
"RTN","EAS126",30,0)
QTIME(WHEN) ; Get the run time for queuing
"RTN","EAS126",31,0)
 N %,%H,%I,X
"RTN","EAS126",32,0)
 D NOW^%DTC
"RTN","EAS126",33,0)
 S WHEN=$P(%,".")_"."_$E($P(%,".",2),1,4)
"RTN","EAS126",34,0)
 Q 0
"RTN","EAS126",35,0)
QUEUE(ZTDTH) ; Queue the process
"RTN","EAS126",36,0)
 N NAMESPC,QUEERR,ZTDESC,ZTRTN,ZTSK
"RTN","EAS126",37,0)
 S NAMESPC=$$NAMESPC
"RTN","EAS126",38,0)
 S QUEERR=0
"RTN","EAS126",39,0)
 S ZTRTN="CLEAN^EAS1"_$P(NAMESPC,"EAS",2)
"RTN","EAS126",40,0)
 S ZTDESC=NAMESPC_" - Patient Merge Cleanup Process"
"RTN","EAS126",41,0)
 S ZTIO=""
"RTN","EAS126",42,0)
 D ^%ZTLOAD
"RTN","EAS126",43,0)
 K ^XTMP(NAMESPC,"CONFIG","ZTSK")
"RTN","EAS126",44,0)
 I '$D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Unable to queue post-install process.",QUEERR=1
"RTN","EAS126",45,0)
 I $D(ZTSK) S ^XTMP(NAMESPC,"CONFIG","ZTSK")="Post-install queued. Task ID: "_$G(ZTSK)
"RTN","EAS126",46,0)
 D HOME^%ZIS
"RTN","EAS126",47,0)
 Q QUEERR
"RTN","EAS126",48,0)
CLEAN ; Actual cleanup process
"RTN","EAS126",49,0)
 N NAMESPC,MODE,USER,TASKID,%,%H,%I,X,X1,X2,CHKCNT,TMSWT,TOTPR12,DGPR12
"RTN","EAS126",50,0)
 S NAMESPC=$$NAMESPC
"RTN","EAS126",51,0)
 K ^XTMP(NAMESPC,"CONFIG","ABORT TIME")
"RTN","EAS126",52,0)
 S MODE=$G(^XTMP(NAMESPC,"CONFIG","RUN MODE"),0)
"RTN","EAS126",53,0)
 S USER=$G(^XTMP(NAMESPC,"CONFIG","USER"),"UNKNOWN")
"RTN","EAS126",54,0)
 S TASKID=$G(^XTMP(NAMESPC,"CONFIG","ZTSK"),"UNKNOWN")
"RTN","EAS126",55,0)
 ;
"RTN","EAS126",56,0)
 I '$D(^XTMP(NAMESPC,0)) D
"RTN","EAS126",57,0)
 .K ^XTMP(NAMESPC)
"RTN","EAS126",58,0)
 .S ^XTMP(NAMESPC,"CONFIG","DGPR12")=0
"RTN","EAS126",59,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=0
"RTN","EAS126",60,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=0
"RTN","EAS126",61,0)
 .S ^XTMP(NAMESPC,"CONFIG","RUN MODE")=MODE
"RTN","EAS126",62,0)
 .S ^XTMP(NAMESPC,"CONFIG","USER")=USER
"RTN","EAS126",63,0)
 .S ^XTMP(NAMESPC,"CONFIG","ZTSK")=TASKID
"RTN","EAS126",64,0)
 .D NOW^%DTC
"RTN","EAS126",65,0)
 .S ^XTMP(NAMESPC,"CONFIG","START TIME")=%
"RTN","EAS126",66,0)
 .S X1=$$DT^XLFDT,X2=90
"RTN","EAS126",67,0)
 .D C^%DTC
"RTN","EAS126",68,0)
 .S ^XTMP(NAMESPC,0)=X_U_$$DT^XLFDT_U_NAMESPC_" - PATIENT MERGE CLEANUP"
"RTN","EAS126",69,0)
 ;
"RTN","EAS126",70,0)
 S CHKCNT=250,(ZTSTOP,TMSWT)=0,TOTPR12=+$P($G(^DGPR(408.12,0)),"^",4)
"RTN","EAS126",71,0)
 S DGPR12=$G(^XTMP(NAMESPC,"CONFIG","DGPR12"))
"RTN","EAS126",72,0)
 F  S DGPR12=$O(^DGPR(408.12,DGPR12)) Q:'DGPR12!(TMSWT)  D
"RTN","EAS126",73,0)
 .D PROC(DGPR12)
"RTN","EAS126",74,0)
 .S ^XTMP(NAMESPC,"CONFIG","TOTPR")=$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))+1
"RTN","EAS126",75,0)
 .S ^XTMP(NAMESPC,"CONFIG","DGPR12")=DGPR12
"RTN","EAS126",76,0)
 .I TOTPR12 D
"RTN","EAS126",77,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))/TOTPR12
"RTN","EAS126",78,0)
 ..S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=+$P((^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")*100),".")
"RTN","EAS126",79,0)
 .I +$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))#CHKCNT=0 D
"RTN","EAS126",80,0)
 ..S TMSWT=$$STOPIT()
"RTN","EAS126",81,0)
 ..I TMSWT D
"RTN","EAS126",82,0)
 ...S ZTSTOP=1
"RTN","EAS126",83,0)
 ...N %,%H,%I,X
"RTN","EAS126",84,0)
 ...D NOW^%DTC
"RTN","EAS126",85,0)
 ...S ^XTMP(NAMESPC,"CONFIG","ABORT TIME")=%
"RTN","EAS126",86,0)
 ...D ABORTMSG
"RTN","EAS126",87,0)
 ;
"RTN","EAS126",88,0)
 I 'DGPR12,'TMSWT D
"RTN","EAS126",89,0)
 .N %,%H,%I,X
"RTN","EAS126",90,0)
 .D NOW^%DTC
"RTN","EAS126",91,0)
 .S ^XTMP(NAMESPC,"CONFIG","COMPLETE")=%
"RTN","EAS126",92,0)
 .S ^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE")=100
"RTN","EAS126",93,0)
 .D DONEMSG
"RTN","EAS126",94,0)
 ;
"RTN","EAS126",95,0)
 K ^XTMP(NAMESPC,"CONFIG","RUNNING")
"RTN","EAS126",96,0)
 Q
"RTN","EAS126",97,0)
PROC(DGPR12) ; Process the DGPR12
"RTN","EAS126",98,0)
 N NAMESPC,NODE0,DFN,PERSON,DATA,DIE,DA,DR,X
"RTN","EAS126",99,0)
 S NAMESPC=$$NAMESPC()
"RTN","EAS126",100,0)
 S NODE0=$G(^DGPR(408.12,DGPR12,0))
"RTN","EAS126",101,0)
 Q:NODE0=""
"RTN","EAS126",102,0)
 S DFN=$P(NODE0,"^")
"RTN","EAS126",103,0)
 Q:DFN=""
"RTN","EAS126",104,0)
 S PERSON=$P(NODE0,"^",3)
"RTN","EAS126",105,0)
 I PERSON'="",PERSON["DPT",DFN=$P(PERSON,";"),'$D(^DGPR(408.12,"C",PERSON,DGPR12)) D
"RTN","EAS126",106,0)
 .S DATA(.03)=$$GET1^DIQ(408.12,DGPR12_",",.01,"I")_";DPT("
"RTN","EAS126",107,0)
 .S DIE="^DGPR(408.12,",DA=DGPR12,DR=".03////^S X=DATA(.03)"
"RTN","EAS126",108,0)
 .D:MODE ^DIE
"RTN","EAS126",109,0)
 .S ^XTMP(NAMESPC,"CONFIG","ANOMALY")=$G(^XTMP(NAMESPC,"CONFIG","ANOMALY"))+1
"RTN","EAS126",110,0)
 .S ^XTMP(NAMESPC,"DATA",DGPR12)=""
"RTN","EAS126",111,0)
 Q
"RTN","EAS126",112,0)
STOPIT() ; Checks if user requested task to stop
"RTN","EAS126",113,0)
 N X,STOPIT
"RTN","EAS126",114,0)
 S STOPIT=0
"RTN","EAS126",115,0)
 S X=$$S^%ZTLOAD
"RTN","EAS126",116,0)
 I X D  ;
"RTN","EAS126",117,0)
 .S STOPIT=1
"RTN","EAS126",118,0)
 .I $G(ZTSK) S ZTSTOP=1
"RTN","EAS126",119,0)
 Q STOPIT
"RTN","EAS126",120,0)
ABORTMSG ; Send the user aborted message:
"RTN","EAS126",121,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","EAS126",122,0)
 S NAMESPC=$$NAMESPC
"RTN","EAS126",123,0)
 S NAMESPCN=$P(NAMESPC,"EAS",2)
"RTN","EAS126",124,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","EAS126",125,0)
 S XMSUB="EAS*1.0*"_NAMESPCN_": PATIENT MERGE CLEANUP - PROCESS STOPPED BY USER"
"RTN","EAS126",126,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","EAS126",127,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","EAS126",128,0)
 S TMP(NAMESPCN,3)=""
"RTN","EAS126",129,0)
 S TMP(NAMESPCN,4)="The cleanup process was aborted prematurely.  Here is the current status:"
"RTN","EAS126",130,0)
 S TMP(NAMESPCN,5)=""
"RTN","EAS126",131,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","EAS126",132,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","ABORT TIME")),"P")
"RTN","EAS126",133,0)
 S TMP(NAMESPCN,8)=""
"RTN","EAS126",134,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","EAS126",135,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","EAS126",136,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","ANOMALY"))
"RTN","EAS126",137,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: "_+$G(^XTMP(NAMESPC,"CONFIG","PERCENT COMPLETE"))_"%"
"RTN","EAS126",138,0)
 S TMP(NAMESPCN,13)=""
"RTN","EAS126",139,0)
 S TMP(NAMESPCN,14)=""
"RTN","EAS126",140,0)
 D ^XMD
"RTN","EAS126",141,0)
 Q
"RTN","EAS126",142,0)
DONEMSG ; Send the user done message:
"RTN","EAS126",143,0)
 N NAMESPC,NAMESPCN,TMP,XMY,XMDUZ,XMTEXT,XMSUB
"RTN","EAS126",144,0)
 S NAMESPC=$$NAMESPC
"RTN","EAS126",145,0)
 S NAMESPCN=$P(NAMESPC,"EAS",2)
"RTN","EAS126",146,0)
 S XMY(DUZ)="",XMDUZ="DG PACKAGE",XMTEXT="TMP("_NAMESPCN_","
"RTN","EAS126",147,0)
 S XMSUB="EAS*1.0*"_NAMESPCN_": PATIENT MERGE CLEANUP - SUMMARY REPORT"
"RTN","EAS126",148,0)
 S TMP(NAMESPCN,1)="CLEANUP PROCESSING"
"RTN","EAS126",149,0)
 S TMP(NAMESPCN,2)="------------------"
"RTN","EAS126",150,0)
 S TMP(NAMESPCN,3)=""
"RTN","EAS126",151,0)
 S TMP(NAMESPCN,4)="The cleanup has run to completion.  Here are the results:"
"RTN","EAS126",152,0)
 S TMP(NAMESPCN,5)=""
"RTN","EAS126",153,0)
 S TMP(NAMESPCN,6)="  Start Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","START TIME")),"P")
"RTN","EAS126",154,0)
 S TMP(NAMESPCN,7)="    End Date/Time: "_$$FMTE^XLFDT(+$G(^XTMP(NAMESPC,"CONFIG","COMPLETE")),"P")
"RTN","EAS126",155,0)
 S TMP(NAMESPCN,8)=""
"RTN","EAS126",156,0)
 S TMP(NAMESPCN,9)="Current Counts: "
"RTN","EAS126",157,0)
 S TMP(NAMESPCN,10)="       Total Patient Records Processed: "_+$G(^XTMP(NAMESPC,"CONFIG","TOTPR"))
"RTN","EAS126",158,0)
 S TMP(NAMESPCN,11)="             Total Anomalies Corrected: "_+$G(^XTMP(NAMESPC,"CONFIG","ANOMALY"))
"RTN","EAS126",159,0)
 S TMP(NAMESPCN,12)="                  Percentage Completed: 100%"
"RTN","EAS126",160,0)
 S TMP(NAMESPCN,13)=""
"RTN","EAS126",161,0)
 S TMP(NAMESPCN,14)=""
"RTN","EAS126",162,0)
 D ^XMD
"RTN","EAS126",163,0)
 Q
"RTN","EAS126",164,0)
FIXOPT ; Fix 'EAS MT 30 DAY LETTER PRINT' option
"RTN","EAS126",165,0)
 N OPTNAME,OPTIEN,DIE,DA,DR,X
"RTN","EAS126",166,0)
 S OPTNAME="EAS MT 30 DAY LETTER PRINT"
"RTN","EAS126",167,0)
 Q:'$D(^DIC(19,"B",OPTNAME))
"RTN","EAS126",168,0)
 S OPTIEN=0
"RTN","EAS126",169,0)
 F  S OPTIEN=$O(^DIC(19,"B",OPTNAME,OPTIEN)) Q:'OPTIEN  D
"RTN","EAS126",170,0)
 .S DIE="^DIC(19,",DA=OPTIEN,DR="25///^S X=""@"""
"RTN","EAS126",171,0)
 .D ^DIE
"RTN","EAS126",172,0)
 Q
"RTN","EASXDR1")
0^2^B71161768
"RTN","EASXDR1",1,0)
EASXDR1 ;ALB/BRM/PHH - CHECK RELATIONS DURING XDR PATIENT MERGE; ; 5/30/03 12:29pm
"RTN","EASXDR1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**10,26**;Mar 15, 2001
"RTN","EASXDR1",3,0)
 ;
"RTN","EASXDR1",4,0)
CHKRELAT(DFNFR,DFNTO,SILENT) ;can the relations on these 2 records be merged?
"RTN","EASXDR1",5,0)
 ;
"RTN","EASXDR1",6,0)
 ;INPUT:
"RTN","EASXDR1",7,0)
 ;       DFNFR : the patient file ien of the merge from record
"RTN","EASXDR1",8,0)
 ;       DFNTO : the patient file ien of the merge to record
"RTN","EASXDR1",9,0)
 ;       SILENT: (optional) used to prevent screen writes and user
"RTN","EASXDR1",10,0)
 ;               interaction during the merge process
"RTN","EASXDR1",11,0)
 ;
"RTN","EASXDR1",12,0)
 ; Note: DFNFR and DFNTO can both be the same if this process is
"RTN","EASXDR1",13,0)
 ;       to clean-up patient relation file entries within the same 
"RTN","EASXDR1",14,0)
 ;       patient
"RTN","EASXDR1",15,0)
 ;
"RTN","EASXDR1",16,0)
 Q:'$G(DFNFR) "0^From DFN not passed"
"RTN","EASXDR1",17,0)
 Q:'$G(DFNTO) "0^To DFN not passed"
"RTN","EASXDR1",18,0)
 Q:'$D(^DGPR(408.12,"B",DFNFR)) "0^This patient did not have any relation entries that needed to be merged."
"RTN","EASXDR1",19,0)
 Q:'$D(^DGPR(408.12,"B",DFNTO)) "0^This patient did not have any relation entries that needed to be merged."
"RTN","EASXDR1",20,0)
 N ARYNAM2,REL,RELAT,NOMRGMSG,REASON,ARYNAM,X,ERR,NAMFIL
"RTN","EASXDR1",21,0)
 N ERROR,DIC,FRDATA,MRGFRIEN,MRGTOIEN,MSG,NAME,RELPNTR
"RTN","EASXDR1",22,0)
 N ACTOK,RELATE,EFFDT,SUBIEN,UPDMSG,MRGARY,MRGROOT,OK,IEN12TO
"RTN","EASXDR1",23,0)
 N ACTIVFR,ACTIVTO,SUBIENFR,SUBIENTO,ERRNUM,NAMIEN,IEN12FR
"RTN","EASXDR1",24,0)
 S MRGROOT="^TMP($J,""EASXDR1"",""B"")"
"RTN","EASXDR1",25,0)
 K ^TMP($J,"EASXDR1"),^TMP($J,"EASXDR")
"RTN","EASXDR1",26,0)
 S ^XTMP("EASXDR1",0)=$$FMADD^XLFDT($$NOW^XLFDT(),45)_U_$$NOW^XLFDT()_U_"EASXDR1 - DUPLICATE PATIENT RELATION MERGE"
"RTN","EASXDR1",27,0)
 ; find 408.12 entries for FROM and TO records
"RTN","EASXDR1",28,0)
 F X="IEN12FR","IEN12TO" D
"RTN","EASXDR1",29,0)
 .S REL="DFN"_$E(X,6,7),@X=""
"RTN","EASXDR1",30,0)
 .S ARYNAM="^TMP($J,""EASXDR1"","""_$E(X,6,7)_""")"
"RTN","EASXDR1",31,0)
 .S ARYNAM2="^TMP($J,""EASXDR1"",""B"","""_$E(X,6,7)_""")"
"RTN","EASXDR1",32,0)
 .F  S @X=$O(^DGPR(408.12,"B",@REL,@X)) Q:'@X  D
"RTN","EASXDR1",33,0)
 ..I '$D(^DGPR(408.12,@X)) S @ARYNAM@(@X)=(@REL)_"^NO 408.12 RECORD" Q
"RTN","EASXDR1",34,0)
 ..M @ARYNAM@((@X))=^DGPR(408.12,@X)
"RTN","EASXDR1",35,0)
 ..S RELPNTR=$P($G(@ARYNAM@(@X,0)),"^",3)
"RTN","EASXDR1",36,0)
 ..S NAMIEN=$P(RELPNTR,";")_",",NAMFIL=$P(RELPNTR,";",2)
"RTN","EASXDR1",37,0)
 ..I NAMFIL="DPT(" S NAMFIL=2
"RTN","EASXDR1",38,0)
 ..E  S NAMFIL=$TR($P(NAMFIL,"(",2),",")
"RTN","EASXDR1",39,0)
 ..K NAME
"RTN","EASXDR1",40,0)
 ..I NAMIEN,NAMFIL S NAME=$$GET1^DIQ(NAMFIL,NAMIEN,.01)
"RTN","EASXDR1",41,0)
 ..S @ARYNAM@(@X,"NAME")=$G(NAME)
"RTN","EASXDR1",42,0)
 ..S RELAT=$P($G(^DGPR(408.12,@X,0)),"^",2)
"RTN","EASXDR1",43,0)
 ..S @ARYNAM2@(RELAT,@X)=""
"RTN","EASXDR1",44,0)
 ; merge duplicate records (if they exist)
"RTN","EASXDR1",45,0)
 S RELATE="",OK=0,ERRNUM=0
"RTN","EASXDR1",46,0)
 F  S RELATE=$O(@MRGROOT@("TO",RELATE)) Q:'RELATE  D
"RTN","EASXDR1",47,0)
 .S MRGTOIEN=""
"RTN","EASXDR1",48,0)
 .F  S MRGTOIEN=$O(@MRGROOT@("TO",RELATE,MRGTOIEN)) Q:'MRGTOIEN  D LOOP
"RTN","EASXDR1",49,0)
 Q +$G(OK)
"RTN","EASXDR1",50,0)
LOOP ;
"RTN","EASXDR1",51,0)
 M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",52,0)
 S MRGFRIEN=""
"RTN","EASXDR1",53,0)
 F  S MRGFRIEN=$O(@MRGROOT@("FR",RELATE,MRGFRIEN)) Q:'MRGFRIEN  D
"RTN","EASXDR1",54,0)
 .Q:MRGFRIEN=MRGTOIEN  ;do not update if FROM and TO iens are the same
"RTN","EASXDR1",55,0)
 .K ERROR
"RTN","EASXDR1",56,0)
 .I RELATE'=1 D  Q:$D(ERROR)
"RTN","EASXDR1",57,0)
 ..I '$$MRGOTHR(MRGFRIEN,MRGTOIEN) S ERROR(MRGFRIEN)="DEPENDENT NAMES DO NOT MATCH" K @MRGROOT@("FR",RELATE,MRGTOIEN) Q
"RTN","EASXDR1",58,0)
 ..I '$$SSNMATCH(MRGFRIEN,MRGTOIEN) D  Q:$D(ERROR)
"RTN","EASXDR1",59,0)
 ...Q:$P($G(^DGPR(408.12,MRGFRIEN,0)),"^",2)'=$P($G(^DGPR(408.12,MRGTOIEN,0)),"^",2)
"RTN","EASXDR1",60,0)
 ...S ERROR(MRGFRIEN)="DEPENDENT SSNS DO NOT MATCH"
"RTN","EASXDR1",61,0)
 ...D:'$G(SILENT) FAILED(MRGFRIEN,MRGTOIEN,$G(ERROR(MRGFRIEN)))
"RTN","EASXDR1",62,0)
 ...K @MRGROOT@("FR",RELATE,MRGTOIEN)
"RTN","EASXDR1",63,0)
 .M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",64,0)
 .S EFFDT=""
"RTN","EASXDR1",65,0)
 .F  S EFFDT=$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT)) Q:'EFFDT  D
"RTN","EASXDR1",66,0)
 ..I $D(^DGPR(408.12,MRGTOIEN,"E","B",EFFDT)) D  Q
"RTN","EASXDR1",67,0)
 ...S ACTOK=$$CHKACT()
"RTN","EASXDR1",68,0)
 ..S SUBIEN=+$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",69,0)
 ..Q:('SUBIEN)!('$D(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIEN)))
"RTN","EASXDR1",70,0)
 ..S FRDATA=$G(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIEN,0))
"RTN","EASXDR1",71,0)
 ..S UPDMSG=$$UPDATE(MRGTOIEN,FRDATA,MRGFRIEN)
"RTN","EASXDR1",72,0)
 ..I 'UPDMSG D  Q
"RTN","EASXDR1",73,0)
 ...S ERROR(MRGFRIEN,SUBIEN)=$P(UPDMSG,"^",2),ERRNUM=ERRNUM+1
"RTN","EASXDR1",74,0)
 ...Q:$P(UPDMSG,"^",2)="The entry does not exist."
"RTN","EASXDR1",75,0)
 ...S ^XTMP("EASXDR1","DATA",DFNFR,"ERROR - NOT MERGED",MRGFRIEN,SUBIEN)=$P(UPDMSG,"^",2)
"RTN","EASXDR1",76,0)
 .I '$D(ERROR),$$REMOVE(MRGFRIEN,MRGTOIEN) D  ;
"RTN","EASXDR1",77,0)
 ..S OK=OK+1
"RTN","EASXDR1",78,0)
 ..D:'$G(SILENT) SUCCESS(MRGFRIEN,MRGTOIEN)
"RTN","EASXDR1",79,0)
 ..K @MRGROOT@("FR",RELATE,MRGFRIEN)
"RTN","EASXDR1",80,0)
 ..K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",81,0)
 ..I $D(@MRGROOT@("TO",RELATE,MRGFRIEN)) K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",82,0)
 ..K ^TMP($J,"EASXDR")
"RTN","EASXDR1",83,0)
 ..M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",84,0)
 ..M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",85,0)
 Q
"RTN","EASXDR1",86,0)
CHKACT() ; ensure both records contain the same active flag for eff. date
"RTN","EASXDR1",87,0)
 N OK
"RTN","EASXDR1",88,0)
 S OK=1
"RTN","EASXDR1",89,0)
 S SUBIENFR=+$O(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",90,0)
 S SUBIENTO=+$O(^TMP($J,"EASXDR","MRGTO",MRGTOIEN,"E","B",EFFDT,""))
"RTN","EASXDR1",91,0)
 S ACTIVFR=$P($G(^TMP($J,"EASXDR","MRGFR",MRGFRIEN,"E",SUBIENFR,0)),"^",2)
"RTN","EASXDR1",92,0)
 S ACTIVTO=$P($G(^TMP($J,"EASXDR","MRGTO",MRGTOIEN,"E",SUBIENTO,0)),"^",2)
"RTN","EASXDR1",93,0)
 I ACTIVFR'=ACTIVTO D  Q OK
"RTN","EASXDR1",94,0)
 .S OK=0
"RTN","EASXDR1",95,0)
 .S ERROR(MRGFRIEN,SUBIENFR)="'Active' flag does not match for effective date: "_$$FMTE^XLFDT(EFFDT),ERRNUM=ERRNUM+1
"RTN","EASXDR1",96,0)
 .S ^XTMP("EASXDR1","DATA",DFNFR,408.12,"ERROR - NOT MERGED",MRGFRIEN,SUBIENFR)=ERROR(MRGFRIEN,SUBIENFR)
"RTN","EASXDR1",97,0)
 .D:'$G(SILENT) FAILED(MRGFRIEN,MRGTOIEN,$G(ERROR(MRGFRIEN,SUBIENFR)))
"RTN","EASXDR1",98,0)
 .I '$D(ERROR) S OK=1
"RTN","EASXDR1",99,0)
 Q OK
"RTN","EASXDR1",100,0)
UPDATE(MRGTOIEN,FRDATA,MRGFRIEN) ;
"RTN","EASXDR1",101,0)
 Q:('MRGTOIEN)!(FRDATA="") "0^RECORD NOT UPDATED - BAD INPUT DATA"
"RTN","EASXDR1",102,0)
 N DIERR,IENS,FDA,MSGROOT,IENROOT,NAMEFR,NAMETO
"RTN","EASXDR1",103,0)
 S IENS="+1,"_MRGTOIEN_","
"RTN","EASXDR1",104,0)
 S FDA(408.1275,IENS,.01)=$P(FRDATA,"^")
"RTN","EASXDR1",105,0)
 S FDA(408.1275,IENS,.02)=$P(FRDATA,"^",2)
"RTN","EASXDR1",106,0)
 S FDA(408.1275,IENS,.03)=$P(FRDATA,"^",3)
"RTN","EASXDR1",107,0)
 S FDA(408.1275,IENS,.04)=$P(FRDATA,"^",4)
"RTN","EASXDR1",108,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",109,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",110,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",111,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",112,0)
 D UPDATE^DIE("","FDA","IENROOT","MSGROOT")
"RTN","EASXDR1",113,0)
 I '$D(DIERR) D  Q "1^UPDATED "_$G(IENROOT)
"RTN","EASXDR1",114,0)
 .K @MRGROOT@("FR",RELATE,MRGFRIEN)
"RTN","EASXDR1",115,0)
 .K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",116,0)
 .I $D(@MRGROOT@("TO",RELATE,MRGFRIEN)) K @MRGROOT@("TO",RELATE,MRGFRIEN)
"RTN","EASXDR1",117,0)
 .K ^TMP($J,"EASXDR")
"RTN","EASXDR1",118,0)
 .M ^TMP($J,"EASXDR","MRGFR",MRGFRIEN)=^DGPR(408.12,MRGFRIEN)
"RTN","EASXDR1",119,0)
 .M ^TMP($J,"EASXDR","MRGTO",MRGTOIEN)=^DGPR(408.12,MRGTOIEN)
"RTN","EASXDR1",120,0)
 Q "0^"_$G(MSGROOT("DIERR",1,"TEXT",1))
"RTN","EASXDR1",121,0)
DEL(ROOT,IEN) ;delete entries
"RTN","EASXDR1",122,0)
 Q:'IEN "1^INVALID INPUT PARAMETER"
"RTN","EASXDR1",123,0)
 N DA,DIK,MSG,X,Y,FILE
"RTN","EASXDR1",124,0)
 S FILE=$TR($P(ROOT,"(",2),",")
"RTN","EASXDR1",125,0)
 S MSG="1^DELETE ERROR "_ROOT_IEN  ;default to error condition
"RTN","EASXDR1",126,0)
 M ^XTMP("EASXDR1","DATA",DFNFR,FILE,IEN)=@(ROOT_IEN_")")
"RTN","EASXDR1",127,0)
 S DA=IEN,DIK=ROOT D ^DIK,IX^DIK S MSG="0^RECORD DELETED"
"RTN","EASXDR1",128,0)
 Q MSG
"RTN","EASXDR1",129,0)
MRGOTHR(MRGFRIEN,MRGTOIEN) ;
"RTN","EASXDR1",130,0)
 Q:('MRGFRIEN)!('MRGTOIEN) 0
"RTN","EASXDR1",131,0)
 N NAMEFR,NAMETO
"RTN","EASXDR1",132,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",133,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",134,0)
 I NAMEFR=NAMETO Q 1  ;ok to proceed with dependent merge
"RTN","EASXDR1",135,0)
 Q 0  ;different dependent - do not merge entries.
"RTN","EASXDR1",136,0)
SUCCESS(MRGFRIEN,MRGTOIEN) ;display message when merge is successful
"RTN","EASXDR1",137,0)
 Q:('$D(MRGFRIEN))!('$D(MRGTOIEN))
"RTN","EASXDR1",138,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",MRGFRIEN,"NAME"))
"RTN","EASXDR1",139,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",140,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",MRGTOIEN,"NAME"))
"RTN","EASXDR1",141,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",142,0)
 W !!?2,MRGFRIEN," ",NAMEFR," was merged into ",MRGTOIEN," ",NAMETO
"RTN","EASXDR1",143,0)
 Q
"RTN","EASXDR1",144,0)
FAILED(MRGFRIEN,MRGTOIEN,MSG) ;display message when merge fails
"RTN","EASXDR1",145,0)
 Q:('$D(MRGFRIEN))!('$D(MRGTOIEN))!('$D(MSG))
"RTN","EASXDR1",146,0)
 N EFFDT1
"RTN","EASXDR1",147,0)
 S NAMEFR=$G(^TMP($J,"EASXDR1","FR",+MRGFRIEN,"NAME"))
"RTN","EASXDR1",148,0)
 I NAMEFR="" S NAMEFR=$$GET1^DIQ(408.12,MRGFRIEN_",",.03,"E")
"RTN","EASXDR1",149,0)
 S NAMETO=$G(^TMP($J,"EASXDR1","TO",+MRGTOIEN,"NAME"))
"RTN","EASXDR1",150,0)
 I NAMETO="" S NAMEFR=$$GET1^DIQ(408.12,MRGTOIEN_",",.03,"E")
"RTN","EASXDR1",151,0)
 W !!?2,MRGFRIEN," ",NAMEFR," could not be merged into ",MRGTOIEN," ",NAMETO,"."
"RTN","EASXDR1",152,0)
 W !?2,"Reason: ",$G(MSG)
"RTN","EASXDR1",153,0)
 S EFFDT1=$G(EFFDT)
"RTN","EASXDR1",154,0)
 I MSG["'Active' flag does not match" D
"RTN","EASXDR1",155,0)
 .D CHGACT^EASXDR(MRGFRIEN,MRGTOIEN,$G(EFFDT))
"RTN","EASXDR1",156,0)
 .S EFFDT=EFFDT1
"RTN","EASXDR1",157,0)
 .K ^TMP($J,"EASXDR1","FR",RELATE,MRGTOIEN)
"RTN","EASXDR1",158,0)
 Q
"RTN","EASXDR1",159,0)
REMOVE(MRGFRIEN,MRGTOIEN) ;delete and/or repoint "old" entries
"RTN","EASXDR1",160,0)
 Q:('MRGFRIEN) "0^RECORD NOT DELETED - BAD INPUT DATA"
"RTN","EASXDR1",161,0)
 I '$D(MRGTOIEN) N MRGTOIEN S MRGTOIEN="***DELETE***"
"RTN","EASXDR1",162,0)
 I '$D(DFNFR) N DFNFR S DFNFR="DELETE"  ;from DFN is not present
"RTN","EASXDR1",163,0)
 N VARPNT,MSG22,MSG21,ERROR,IEN40821,IEN40822,IEN40812,IEN40813
"RTN","EASXDR1",164,0)
 N MSG12,MSG13,VARPNT2
"RTN","EASXDR1",165,0)
 S IEN40812=MRGFRIEN
"RTN","EASXDR1",166,0)
 S IEN40821=""
"RTN","EASXDR1",167,0)
 S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN)=$S(MRGTOIEN:"RECORD MERGED INTO 408.12 IEN # "_MRGTOIEN,1:"RECORD DELETED")
"RTN","EASXDR1",168,0)
 F  S IEN40821=$O(^DGMT(408.21,"C",IEN40812,IEN40821)) Q:'IEN40821!($G(ERROR))  D
"RTN","EASXDR1",169,0)
 .S IEN40822=""
"RTN","EASXDR1",170,0)
 .F  S IEN40822=$O(^DGMT(408.22,"AIND",IEN40821,IEN40822)) Q:'IEN40822!($G(ERROR))  D
"RTN","EASXDR1",171,0)
 ..S MSG22=$$DEL("^DGMT(408.22,",IEN40822)
"RTN","EASXDR1",172,0)
 ..I MSG22 S ERROR="1^"_IEN40822_"^"_$P(MSG22,"^",2)_"^408.22 DELETE" Q
"RTN","EASXDR1",173,0)
 ..I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.22",IEN40822)=""
"RTN","EASXDR1",174,0)
 .Q:$G(ERROR)
"RTN","EASXDR1",175,0)
 .S MSG21=$$DEL("^DGMT(408.21,",IEN40821)
"RTN","EASXDR1",176,0)
 .I MSG21 S ERROR="1^"_IEN40821_"^"_$P(MSG21,"^",2)_"^408.21 DELETE" Q
"RTN","EASXDR1",177,0)
 .I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.21",IEN40821)=""
"RTN","EASXDR1",178,0)
 Q:$G(ERROR) "0^"_$P(ERROR,"^",2,4)
"RTN","EASXDR1",179,0)
 S VARPNT=$P($G(^DGPR(408.12,IEN40812,0)),"^",3)
"RTN","EASXDR1",180,0)
 S IEN40813="" S:VARPNT["DGPR" IEN40813=$P(VARPNT,";")
"RTN","EASXDR1",181,0)
 S MSG12=$$DEL("^DGPR(408.12,",IEN40812)
"RTN","EASXDR1",182,0)
 I MSG12 Q "0^"_IEN40812_"^"_$P(MSG12,"^",2)_"^408.12 DELETE"
"RTN","EASXDR1",183,0)
 Q:'IEN40813 "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",184,0)
 S VARPNT2=""
"RTN","EASXDR1",185,0)
 ;ensure that the new record is not pointing to the same relation
"RTN","EASXDR1",186,0)
 S:MRGTOIEN VARPNT2=$P($G(^DGPR(408.12,MRGTOIEN,0)),"^",3)
"RTN","EASXDR1",187,0)
 Q:VARPNT=VARPNT2 "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",188,0)
 S MSG13=$$DEL("^DGPR(408.13,",IEN40813)
"RTN","EASXDR1",189,0)
 I DFNFR="DELETE" S ^XTMP("EASXDR1","DATA",DFNFR,408.12,MRGFRIEN,"SEE 408.13",IEN40813)=""
"RTN","EASXDR1",190,0)
 Q:MSG13 "0^"_$P(MSG13,"^",2)
"RTN","EASXDR1",191,0)
 Q "1^"_MRGFRIEN_" DELETED"
"RTN","EASXDR1",192,0)
SSNMATCH(FRIEN,TOIEN) ;
"RTN","EASXDR1",193,0)
 N SSNFR,SSNTO
"RTN","EASXDR1",194,0)
 D FINDSSN^EASXDR(FRIEN,.SSNFR),FINDSSN^EASXDR(TOIEN,.SSNTO)
"RTN","EASXDR1",195,0)
 Q:SSNFR=SSNTO 1  ;SSNs match
"RTN","EASXDR1",196,0)
 Q:(SSNFR="UNKNOWN")!(SSNFR="") 1  ;use SSN of the 'merge to' record
"RTN","EASXDR1",197,0)
 Q 0
"VER")
8.0^22
**END**
**END**
