Saved by %RS from [SCR,FSC] on  7-APR-1994 10:54:32.17
IB* AND DGCR* ROUTINES (1207)
DGCRAMS
DGCRAMS	;ALB/RJS - BRIDGE ROUTINE FOR IBCAMS ; 20-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;called by AR
	D ^IBCAMS
	Q

DGCRNS
DGCRNS	;ALB/AAS - IS INSURANCE ACTIVE ; 22-JULY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;Input   -  DFN       = patient
	;        -  DGCRINDT  = (optional) date to check ins active for or today if not defined
	;        -  DGCROUTP  = (optional) 1 if want active insurance returned in DGCRDD(insurance company)=node in patient file
	;        -            = 2 if want all ins returned
	;
	;Output  -  DGCRINS   = 1 if has active ins., 0 if no active ins.
	;        -  DGCRDD()  = internal node in patient file of valid ins.
	;        -  DGCRDDI() = internal node in patient file of invalid ins.
	;
%	N J,X S DGCRINS=0 K DGCRDD,DGCRDDI
	S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I $D(^DPT(DFN,.312,J,0)) S X=^(0) D CHK
	Q
	;
CHK	;
	;Input   -  DGCRI  = entry in insurance multiple
	;
	S Z=$S($D(DGCRINDT):DGCRINDT,1:DT),Z1=$S($D(DGCROUTP):DGCROUTP,1:0)
	G:'$D(^DIC(36,+X,0)) CHKQ S X1=^(0) ;insurance company entry doesn't exist
	I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
	I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
	G:$P(X1,"^",5) CHKQ ;insurance company inactive
	G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
	S DGCRINS=1 I Z1 S DGCRDD(+X)=X
CHKQ	S:Z1=2&('$D(DGCRDD(+X))) DGCRDDI(+X)=X
	K X,X1,Z,Z1 Q
	;
DD	;  - called from input transform and x-refs for field 101,102,103
	;  - input requires da=internal entry number in 399
	;  - outputs dgcrdd(ins co.) array
	N DFN S DFN=$P(^DGCR(399,DA,0),"^",2),DGCROUTP=1,DGCRINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
	D %
DDQ	K DGCROUTP,DGCRINDT Q
	;
	;
DISP	;  -Display all insurance company information
	;  -input DFN
	;
	Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
	S DGCROUTP=2 D DGCRNS
	;
	D HDR
	I '$D(DGCRDD),'$D(DGCRDDI) W !,"No Insurance Information" G DISPQ
	;
	S X="" F  S X=$O(DGCRDD(X)) Q:X=""  S IBINS=DGCRDD(X) D D1 ;active insurance
	S X="" F  S X=$O(DGCRDDI(X)) Q:X=""  S IBINS=DGCRDDI(X) D D1 ;inactive ins
	;
DISPQ	K DGCRDD,DGCRDDI,DGCRX
	Q
	;
HDR	W !?4,"Insurance Co.",?22,"Policy #",?40,"Group",?52,"Holder",?60,"Effective",?70,"Expires" S X="",$P(X,"=",IOM-4)="" W !?4,X
	Q
	;
	;
D1	N X Q:'$D(IBINS)
	W !?4,$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")
	W ?22,$E($P(IBINS,"^",2),1,16),?40,$E($S($P(IBINS,"^",15)'="":$P(IBINS,"^",15),1:$P(IBINS,"^",3)),1,10)
	S X=$P(IBINS,"^",6) W ?52,$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
	W ?60,$$DAT1^IBOUTL($P(IBINS,"^",8)),?70,$$DAT1^IBOUTL($P(IBINS,"^",4))
	Q

DGCRP3
DGCRP3	;ALB/RJS - BRIDGE ROUTINE TO IBCF13 FROM A/R TO IB ; 20-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;Entry point for Ar to print 2nd and 3rd notice bills
	;Device handling to be done by calling routine
	;Requires Input: - PRCASV("ARREC") = internal number of bill
	;                - PRCASV("NOTICE") = number of notice
	;Outputs:        - DGCRAR("ERR") = error message
	;                - DGCRAR("OKAY") = 1 normal finish, 0 not finished
	;
REPRNT	;
	D REPRNT^IBCF13
	S DGCRAR("OKAY")=IBAR("OKAY")
	I $D(IBAR("ERR")) S DGCRAR("ERR")=IBAR("ERR")
	K IBAR
	Q

IB20IN
IB20IN	;ALB/CPM - IB V2.0 INITIALIZATION ROUTINE ; 01-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Perform one-time installation items
	I +$G(^DD(350,0,"VR"))<2 D
	.D SC7H ;   delete IB SCREEN7H input template
	.D AVC ;    delete 'AVC' x-ref
	.D AVP ;    delete 'AVP' x-ref
	.D OBSLT ;  delete obsolete list template
	.D BCP ;    delete obsolete print template
	.D OBSPRO ; delete obsolete protocols
	.D EDOPT ;  change name of option IB UB-82 MENU
	;
	; Run at every installation
	D DEL ;     delete file #350.8 and data
	D CHGPRO ;  delete IBACM1 MENU protocol
	D DD ;      delete field decriptions and cross references
	;
	Q
	;
	;
SC7H	W !!,">>> Removing IB SCREEN7H input template..."
	S IBX=0 F  S IBX=$O(^DIE("B","IB SCREEN7H",IBX)) Q:IBX<1  S DA=IBX,DIE="^DIE(",DR=".01////@" D ^DIE
	K IBX
	Q
	;
AVC	W !!,">>> Removing 'AVC' cross-reference on REVENUE CODE field... "
	S DA=0
	F  S DA=$O(^DD(399.042,.01,1,DA)) Q:DA<1  I $G(^(DA,0))="399.042^AVC^MUMPS" S DIK="^DD(399.042,.01,1,",DA(2)=399.042,DA(1)=.01 W "." D ^DIK W "." K DIK
	K DA
	Q
	;
AVP	W !!,">>> Removing 'AVP' cross-reference on PROCEDURES field..."
	S DA=0
	F  S DA=$O(^DD(399.0304,.01,1,DA)) Q:DA<1  I $G(^(DA,0))="399.0304^AVP^MUMPS" S DIK="^DD(399.0304,.01,1,",DA(2)=399.0304,DA(1)=.01 W "." D ^DIK W "." K DIK
	K DA
	Q
	;
DEL	W !!,">>> Deleting IB ERROR file (350.8) with data."
	W !,"    It will be restored."
	S DIU(0)="D",DIU="^IBE(350.8," D EN^DIU2 K DIU Q
	Q
	;
CHGPRO	; Delete the 'IBACM1 MENU' protocol (to be added later by IBONIT)
	S DIC="^ORD(101,",DIC(0)="FN",X="IBACM1 MENU" D ^DIC K DIC S DA=+Y
	I DA>0 W !!,">>> Deleting protocol 'IBACM1 MENU'...",!?4,"It will be restored." S DIK="^ORD(101," D ^DIK
	K DA,DIK,X,Y
	Q
	;
OBSLT	; Delete the obsolete List Template 'IB BILLABLE EVENT'
	S DA=$O(^SD(409.61,"B","IB BILLABLE EVENT",0))
	I DA W !!,">>> Deleting Obsolete List Template 'IB BILLABLE EVENT'..." S DIK="^SD(409.61," D ^DIK
	K DA,DIK
	Q
	;
BCP	; Delete obsolete print template 'IB BILLING CYCLE PRINT'
	S DA=$O(^DIPT("B","IB BILLING CYCLE PRINT",0))
	I DA W !!,">>> Deleting Obsolete Print Template 'IB BILLING CYCLE PRINT'..." S DIK="^DIPT(" D ^DIK
	K DA,DIK
	Q
	;
OBSPRO	; Delete obsolete protocols.
	W !!,">>> Deleting obsolete protocols..."
	F IBI=1:1 S IBN=$P($T(OBSP+IBI),";;",2) Q:IBN=""  D
	.W !?5,"deleting protocol '",IBN,"'... "
	.S DIC="^ORD(101,",DIC(0)="FN",X=IBN D ^DIC K DIC S DA=+Y
	.I DA<0 W "not found." Q
	.S DIK="^ORD(101," D ^DIK W "done."
	K DA,DIK,IBI,IBN,X,Y
	Q
	;
EDOPT	; Change name of option IB UB-82 MENU to IB THIRD PARTY BILLING MENU
	S DA=$O(^DIC(19,"B","IB UB-82 MENU",0))
	I DA W !!,">>> Changing the option 'IB UB-82 MENU' to 'IB THIRD PARTY BILLING MENU'..." S DIE="^DIC(19,",DR=".01///IB THIRD PARTY BILLING MENU" D ^DIE
	K DIE,DA,DR
	Q
	;
DD	; Delete field descriptions and cross references
	K ^DD(399,.01,21),^DD(399,2,21),^DD(399,205,21),^DD(399,213,23),^DD(399,303,21)
	;
	S IB=0 F  S IB=$O(^DD(399.1,.11,1,IB)) Q:IB<1  S DIK="^DD(399.1,.11,1,",DA(2)=399.1,DA(1)=.11,DA=IB D ^DIK K DIK
	S IB=0 F  S IB=$O(^DD(399.1,.13,1,IB)) Q:IB<1  S DIK="^DD(399.1,.13,1,",DA(2)=399.1,DA(1)=.13,DA=IB D ^DIK K DIK
	S IB=0 F  S IB=$O(^DD(399.2,.01,1,IB)) Q:IB<1  S DIK="^DD(399.2,.01,1,",DA(2)=399.2,DA(1)=.01,DA=IB D ^DIK K DIK
	;
	S IB=0 F  S IB=$O(^DD(399.042,.02,1,IB)) Q:IB<1  S DIK="^DD(399.042,.02,1,",DA(2)=399.042,DA(1)=.02,DA=IB D ^DIK K DIK
	S IB=0 F  S IB=$O(^DD(399.042,.03,1,IB)) Q:IB<1  S DIK="^DD(399.042,.03,1,",DA(2)=399.042,DA(1)=.03,DA=IB D ^DIK K DIK
	;
	K ^DGCR(399.1,"OCC"),^DGCR(399.1,"DIS"),^DGCR(399.2,"D")
	;
	S DIK="^DD(399,101,1,",DA(2)=399,DA(1)=101,DA=3 D ^DIK
	;
	K IB,DA,DIK
	Q
	;
OBSP	; Obsolete protocols to be deleted
	;;IBACM ENTRY SELECT
	;;IBACM MENU
	;;IBACM BLANK 1
	;;IBACM BLANK 10
	;;IBACM BLANK 11
	;;IBACM BLANK 12
	;;IBACM BLANK 2
	;;IBACM BLANK 3
	;;IBACM BLANK 4
	;;IBACM BLANK 5
	;;IBACM BLANK 6
	;;IBACM BLANK 7
	;;IBACM BLANK 8
	;;IBACM BLANK 9
	;

IB20PRE
IB20PRE	;ALB/CPM - IB V2.0 PRE-INITIALIZATION ROUTINE ; 01-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	D NOW^%DTC S IBBDT=$H,DT=X,Y=% W !!,"Initialization Started: " D DT^DIQ W !!
	;
USER	I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,'$D(DUZ(0)):1,DUZ(0)'="@":1,1:0) W !!?3,"The variable DUZ must be set to an active user code and the variable",!?3,"DUZ(0) must equal '@' to initialize.",! K DIFQ G NO
	;
MAS	I $D(DIFQ),$G(^DG(43,1,"VERSION"))<5.3 K DIFQ W !!,?3,"PIMS Version 5.3 must be installed first!" G NO
	;
PRC	I $D(DIFQ),+$G(^DD(430,0,"VR"))'>3.5 K DIFQ W !!,"Accounts Receivable v3.7 must be installed first!" G NO
	;
ABP	;check to see if they want the auto biller parameters set by post init
	I +$G(^DD(350,0,"VR"))<2 D ABPT S DIR(0)="YO",DIR("?")="^D ABPT^IB20PRE" D ^DIR K DIR,DIRUT I Y=1 S IBAUTOBP=1
	;
	; - see if the global IBT has been installed, with correct protections.
	S ^IBT(1)=0 ;     check write protection
	S IBCHK=^IBT(1) ; check read protection
	K ^IBT(1) ;       check delete protection
	;
	;
NO	I '$D(DIFQ) W !,"INITIALIZATION ABORTED" K IBBDT
	K DIR,DIRUT,DUOUT,ERR,IBCHK
	Q
	;
ABPT	;
	F IBI=3:1 S IBX=$P($T(ABPT+IBI),";;",2,999) Q:IBX=""  W !,IBX
	Q
	;;The auto biller parameters can be set automatically during the post-init
	;;by answering the following question affirmatively.  If the auto biller
	;;parameters are set-up by the post-init then the Earliest Auto Bill
	;;Date of the current inpatient admissions will be set as they are
	;;loaded into the Claims Tracking module by one of the queued conversion
	;;routines.  The result will be that the auto biller will be able to
	;;process these inpatient admissions and possibly create bills for them
	;;when it runs.  If these parameters are not set and the auto biller
	;;will be running at your site for inpatient admissions then the
	;;Earliest Auto Bill Date of each current inpatient admission will
	;;have to be set manually after the conversion is done.
	;; 
	;;The parameters will be set up with the following values:
	;; 
	;;    Auto Biller Frequency: 7 days - the auto biller will not run
	;;                                    until 7 days after this install 
	;;    Automate Billing:      1 Yes  - the Earliest Auto bill date will
	;;                                    be set during the conversion
	;;    Billing Cycle:          left blank, billing cycle will be one
	;;                                    month
	;;    Days Delay:            2 days - number of days after the billing
	;;                                    cycle is completed that the bill
	;;                                    will be created
	;; 
	;;If these settings for the parameters are not what your site requires
	;;then you may change them after the installation is complete but
	;;before the conversions begin to run - there is a 15 minute window.
	;;These parameters can also be changed at any time after the
	;;installation and conversion are complete (option IB AUTO BILLER PARAMS).
	;; 
	;

IB20PT
IB20PT	;ALB/CPM - IB V2.0 POST-INITIALIZATION ROUTINE ; 05-AUG-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Perform one-time post init items
	;
	I +$G(^DD(350,0,"VR"))<2 D
	.D HOME^%ZIS
	.D ^IB20PT5 ;  variety of one-time items
	.D ^IB20PT3 ;  table pointer resolution
	;
	; Run at every installation
	;
	D ^IBONIT ;    install protocols
	D ^IB20PT4 ;   install list templates
	D ^IB20PT2 ;   install imp/exp utility package entry
	D ^IB20PT7 ;   add new rate types and revenue codes
	D ^IB20PT71 ;  remove options from menus
	D ^IB20PT8 ;   install routines from other packages
	;
	; Do this as the very last thing in the install
	;
	I +$G(^DD(350,0,"VR"))<2 D
	.D HOME^%ZIS
	.D ^IB20PT1 ;  insurance file post-init conversion
	;
	; Installation has completed - display final messages
	;
	D NOW^%DTC S IBEDT=$H
	W !!,">>> Initialization Complete at " S Y=% D DT^DIQ
	I $D(IBBDT) D
	.S IBDAY=+IBEDT-(+IBBDT)*86400 ;additional seconds of over midnight
	.S X=IBDAY+$P(IBEDT,",",2)-$P(IBBDT,",",2)
	.W !,"    Elapse time for initialization was: ",X\3600," Hours,  ",X\60-(X\3600*60)," Minutes,  ",X#60," Seconds"
	D MSG
	K IBBDT,IBEDT,IBDAY,X,I
	Q
	;
	;
MSG	W !!!,$TR($J("",79)," ","*")
	W !!,"The installation of Integrated Billing Version 2.0 has completed."
	;
	W !!,"Please remember to re-compile all templates, by typing D ALL^IBEFUTL1"
	W !,"in programmer mode, on all of your systems."
	;
	W !!,"Please be sure that the Means Test nightly billing compilation (option"
	W !,"IB MT NIGHT COMP) is scheduled to run.  If it is not, it should be"
	W !,"scheduled to run early each morning (after the G&L Recalculation)."
	W !,"Be sure that it is not scheduled twice!!"
	;
	W !!,"The Integrated Billing DGCR* routines have been converted to the IB*"
	W !,"namespace.  The following DGCR* routines are still required on your system:"
	W !!?8,"DGCRNS     DGCRAMS   DGCRP3"
	W !!,"These routines were exported with this version."
	W !!!,"The following DGCR* routines are now obsolete and may be deleted from"
	W !,"your system:",!
	F I=1:1 S X=$P($T(RTN+I),";;",2,99) Q:X=""  W !,X
	;
	W !!!,"The following IB* routines are now obsolete and may be deleted from"
	W !,"your system:",!!,"IBACKIN   IBEP      IBEHCFA   IBEHCF1   IBOHCTP   IBOHCP"
	W !!,$TR($J("",79)," ","*")
	Q
	;
RTN	;Obsolete routines
	;;DGCRA     DGCRA0    DGCRA1    DGCRA2    DGCRA3    DGCRA31   DGCRA32   DGCRAMS1
	;;DGCRAMS2  DGCRB     DGCRB1    DGCRB2    DGCRBB    DGCRBB1   DGCRBB2   DGCRBR
	;;DGCRBULL  DGCRC     DGCRCC    DGCRCC1   DGCRCC2   DGCRCPT   DGCRMENU  DGCRNQ
	;;DGCRNQ1   DGCROBL   DGCROMBL  DGCRONS1  DGCRONS2  DGCRONSC  DGCROPV   DGCROPV1
	;;DGCROPV2  DGCRORT   DGCRORT1  DGCROST   DGCROST1  DGCROTR   DGCROTR1  DGCROTR2
	;;DGCROTR3  DGCROTR4  DGCRP     DGCRP0    DGCRP1    DGCRP2    DGCRP4    DGCRPAR
	;;DGCRPAR1  DGCRSC1   DGCRSC2   DGCRSC3   DGCRSC4   DGCRSC4A  DGCRSC4B  DGCRSC4C
	;;DGCRSC5   DGCRSC6   DGCRSC61  DGCRSC7   DGCRSC8   DGCRSC8H  DGCRSCE   DGCRSCE1
	;;DGCRSCH   DGCRSCH1  DGCRSCP   DGCRSCU   DGCRSCV   DGCRST    DGCRST1   DGCRST2
	;;DGCRST3   DGCRST4   DGCRST5   DGCRTN    DGCRTP    DGCRU     DGCRU1    DGCRU2
	;;DGCRU3    DGCRU4    DGCRU5    DGCRU6    DGCRU61   DGCRU62   DGCRU63   DGCRU7
	;;DGCRU71   DGCRVA    DGCRVA0   DGCRVA1   DGCRXX    DGCRXX1   DGCRXX10  DGCRXX11
	;;DGCRXX12  DGCRXX13  DGCRXX14  DGCRXX15  DGCRXX16  DGCRXX17  DGCRXX18  DGCRXX19
	;;DGCRXX2   DGCRXX3   DGCRXX4   DGCRXX5   DGCRXX6   DGCRXX7   DGCRXX8   DGCRXX9   

IB20PT1
IB20PT1	;ALB/AAS/NLR - Insurance post init stuff ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$O(^IBA(355.3,0)) D  ; -- one time updates (ins policy alerady exists
	.D MAIL ;      add new mail group
	.D SITE ;      update site paramters
	.D DEL ;       delete obsolete field in patient file ins. multiple
	.;D PAT ;      x-ref patient file by ins. co., add hip pointer
	.D INS ;       delete data, them dd for ins. address multiple in 36
	.;D 399 ;      add ae x-ref to file 399
	.;D INPT ;     load current inpatients into claims tracking
	.D ^IB20PT6 ;  que off patient file, bill/claims file, CT updates
	;
	Q
	;
DEL	; -- delete insurance address field from insurance type multiple
	N DA,DIK,DIU,DIC
	Q:'$D(^DD(2.312,5,0))
	S DA=5,DA(1)=2.312,DIK="^DD("_DA(1)_"," D ^DIK
	W !!,"<<< Deleting Obsolete field *INSURANCE ADDRESS from Patient File Data Dictionary"
DELQ	K DA,DIK,DIU
	Q
	;
INS	; -- delete address subfile
	;    first delete the data
	N DIC,DIE,DA,DR,DIK,DIU
	Q:'$D(^DD(36.02,0))
	W !!,"<<< Deleting Obsolete *ADDRESS data from Insurance Company Entries"
	W !!,"    I'll write a dot for each 100 entries"
	S IBD0=0
	F  S IBD0=$O(^DIC(36,IBD0)) Q:'IBD0  S IBD1=0 F  S IBD1=$O(^DIC(36,IBD0,2,IBD1)) Q:'IBD1  D  K ^DIC(36,IBD0,2)
	.S DIK="^DIC(36,"_IBD0_",2,",DA=IBD1,DA(1)=IBD0
	.D ^DIK
	.K DA,DIC,DIK
	.S IBCNT=$G(IBCNT)+1
	.W:'(IBCNT#100) "."
	.Q
	;
	; -- Now delete the dd
	S DIU=36.02,DIU(0)="S" D EN^DIU2
	W !!,"<<< Deleting Obsolete subfile *ADDRESS from Insurance Company File Data Dictionary"
INSQ	K DIU
	Q
	;
PAT	; -- create AB x-ref on patient file for all insurance co. pointers
	W !!,"<<< Cross-referencing patient file by Insurance company and",!,"    Updating Health Insurance Policy Pointers"
	W !!,"    I'll write a dot for each 100 entries"
	D NOW^%DTC W !,"    Start time: " S Y=% D DT^DIQ
	N DFN,IBI,IBCPOL,IBCDFND,DA,DR,DIE,DIC,IBCNT,IBCNTP,IBCNTPP
	S (IBCNT,IBCNTP,IBCNTPP,DFN)=0
	F  S DFN=$O(^DPT(DFN)) Q:'DFN  S IBCNT=IBCNT+1,IBI=0 F  S IBI=$O(^DPT(DFN,.312,IBI)) Q:'IBI  D
	.W:'(IBCNTPP#100) "."
	.S IBCDFND=$G(^DPT(DFN,.312,IBI,0))
	.S ^DPT("AB",+IBCDFND,DFN,IBI)=""
	.S ^DPT(DFN,.312,"B",+IBCDFND,IBI)=""
	.Q:$P(IBCDFND,U,18)
	.S IBCPOL=$$CHIP^IBCNSU(IBCDFND)
	.Q:'IBCPOL
	.S IBCNTPP=IBCNTPP+1
	.S DA=IBI,DA(1)=DFN,DIE="^DPT("_DFN_",.312,"
	.S DR="1.09////1;.18////"_IBCPOL
	.D ^DIE K DA,DR,DIE,DIC
	.Q
	W !!,"<<< Health Insurance Policy information updated"
	W !,"    there were ",IBCNTPP," Policies for ",IBCNT," Patients were updated"
	W !,"    causing ",IBCNTP," Health Insurance Policies to be added"
	D NOW^%DTC W !,"    Finish Time: " S Y=% D DT^DIQ
	Q
	;
399	; -- create new AE x-ref of file 399
	N IBCIFN,IBCNT
	W !!,"<<< Cross-referencing Bill/Claims file by Primary Insurer"
	W !!,"    I'll write a dot for each 100 entries"
	S IBCIFN=0,IBCNT=0
	F  S IBCIFN=$O(^DGCR(399,IBCIFN)) Q:'IBCIFN  D
	.I +$G(^DGCR(399,IBCIFN,"M")),$P($G(^(0)),"^",2) S ^DGCR(399,"AE",$P(^(0),"^",2),+^("M"),IBCIFN)=""
	.S IBCNT=$G(IBCNT)+1 W:'(IBCNT#100) "."
	Q
	;
INPT	; -- load current inpatients into claims tracking
	W !!,"<<< Loading current inpatients into Claims Tracking"
	N WARD,DGPMDA,IBCNT,IB20
	S WARD="",DGPDMA=0,IBCNT=0,IB20=1
	F  S WARD=$O(^DGPM("CN",WARD)) Q:WARD=""  S DGPMDA=0 F  S DGPMDA=$O(^DGPM("CN",WARD,DGPMDA)) Q:'DGPMDA  D
	.S DGPMP=""
	.S DGPMA=$G(^DGPM(DGPMDA,0))
	.S DFN=$P(DGPMA,"^",3)
	.D INP^VADPT
	.K IBNEW D INP^IBTRKR
	.I $G(IBNEW) S IBCNT=IBCNT+1 W !,"    Patient ",$P(^DPT(DFN,0),U)," added to the Claims tracking module"
	;
	W !!,"<<< ",IBCNT," Patients added to the Claims Tracking Module"
	Q
	;
MAIL	; -- add new mail group
	;Q:$D(^XMB(3.8,"B","IB NEW INSURANCE"))
	S DLAYGO=3.8,DIC="^XMB(3.8,",DIC(0)="LX",DIC("DR")="4////PU;5////"_DUZ,X="IB NEW INSURANCE" D ^DIC K DIC I +Y>0 S IBCNMAIL=+Y
	S ^XMB(3.8,+Y,2,0)="^^1^1^2900625^"
	S ^XMB(3.8,+Y,2,1,0)="This mail group will receive notification whenever a new insurance policy is added."
	W !!,"<<< Mail Group 'IB NEW INSURANCE' ",$S($P(Y,"^",3):"added...",1:"updated...")
	W !!,"    Remember to add Members to this group"
	Q
	;
SITE	; -- setup ib site parameters
	N DIE,DA,DR,DIC,DD,DO S DR=""
	W !!,"<<< Updating new site parameters automatically!"
	;
	; -- if no entry add one
	I '$D(^IBE(350.9,1,0)) S (X,DINUM)=1,DIC="^IBE(350.9,",DIC(0)="L" K DD,DO D FILE^DICN K DIC S DR=".03///1;.02////^S X=+$$SITE^VASITE;.08///2;.09///IB ERROR;",DA=1,DIE="^IBE(350.9," D ^DIE K DR,DA,DIE,DIC
	;
	S DA=1,DIE="^IBE(350.9,"
	S DR="4.01////1;4.04////"_$G(IBCNMAIL)_";6.01///^S X=DT;6.02////1;6.02////1;6.03////1;6.04////1;6.05////1;6.06////1;6.07///^S X=DT;6.08////1;6.09////5;6.13////1;6.14////5;6.18////1;6.19////1"
	D ^DIE K DIE,DA,DR,DIC,DD,DO W !
	Q

IB20PT2
IB20PT2	;ALB/CJM - CREATE FILE ENTRIES NEEDED BY THE ENCOUNTER FORM UTILITIES ;AUG 20,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; - make an entry in the PACKAGE file for the import/export utility
	D MAKEPKG
	;
	; - make two required entries in the ENCOUNTER FORM file (#357)
	D MAKEFORM
	Q
	;
	;
MAKEPKG	; if the package entry for the import/export utility does not 
	; already exist this will create one
	;
	N NAME,PKG
	S NAME="IB ENCOUNTER FORM IMP/EXP"
	Q:$O(^DIC(9.4,"B",NAME,0))
	;
	W !!,">>> Creating a PACKAGE (#9.4) file entry for the Encounter Form",!?4,"Import/Export Utility... "
	;
	K DIC,DD,D0,DINUM S DIC="^DIC(9.4,",DIC(0)="",X=NAME
	D FILE^DICN K DIC,DIE,DA S PKG=+Y
	I PKG<0 W "Unable to create entry -- please call your supporting ISC." Q
	;
	;hard code the record
	;
	S ^DIC(9.4,PKG,0)="IB ENCOUNTER FORM IMP/EXP^IBDE^The import/export utilities for encounter forms."
	S ^DIC(9.4,PKG,4,0)="^9.44PA^10^10"
	S ^DIC(9.4,PKG,4,1,0)="358"
	S ^DIC(9.4,PKG,4,1,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,2,0)="358.1"
	S ^DIC(9.4,PKG,4,2,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,3,0)="358.2"
	S ^DIC(9.4,PKG,4,3,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,4,0)="358.3"
	S ^DIC(9.4,PKG,4,4,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,5,0)="358.4"
	S ^DIC(9.4,PKG,4,5,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,6,0)="358.5"
	S ^DIC(9.4,PKG,4,6,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,7,0)="358.6"
	S ^DIC(9.4,PKG,4,7,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,8,0)="358.7"
	S ^DIC(9.4,PKG,4,8,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,9,0)="358.8"
	S ^DIC(9.4,PKG,4,9,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,4,10,0)="358.91"
	S ^DIC(9.4,PKG,4,10,222)="y^n^^n^^^y^o^n"
	S ^DIC(9.4,PKG,5)="ALBANY"
	S ^DIC(9.4,PKG,11)="358^358.1"
	S ^DIC(9.4,PKG,22,0)="^9.49I^1^1"
	S ^DIC(9.4,PKG,22,1,0)="2.0^2930818^2930820"
	S ^DIC(9.4,PKG,"VERSION")="2.0"
	;
	;now index the package entry
	;
	K DIK,DA S DIK="^DIC(9.4,",DA=PKG D IX1^DIK K DIK,DA
	W "done."
	Q
MAKEFORM	;creates two required tool kit forms - GARBAGE, and TOOL KIT
	;
	N NAME,NODE
	S NAME="TOOL KIT",NODE="TOOL KIT^^Contains all of the tool kit blocks.^0^^^1^^132^80^4"
	D FORM
	S NAME="GARBAGE",NODE="GARBAGE^^Used as temporary storage for blocks while they are being edited.^0^^^1^^132^200^5"
	D FORM
	Q
	;
FORM	;create the form - NAME and NODE should be defined
	N FORM
	;if the form already exists, don't create another
	Q:$O(^IBE(357,"B",NAME,0))
	W !!,">>> Creating an entry in the ENCOUNTER FORM file (#357) required by the",!?4,"Encounter Form Utilities... "
	K DIC,DD,DO,DINUM S DIC="^IBE(357,",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE S FORM=+Y
	I FORM<0 W "Unable to create entry -- please call your supporting ISC." Q
	;
	;copy old 0 node into the new form
	S ^IBE(357,FORM,0)=NODE
	;
	;now index it
	K DIK,DA S DA=FORM,DIK="^IBE(357," D IX1^DIK K DIK,DA
	W "done"
	Q

IB20PT3
IB20PT3	;ALB/CPM - IB V2.0 POST INIT, RESOLVE TABLE POINTERS ; 02-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Control for table pointer resolution.
	D NEWAT^IB20PT31 ;  Add new Action Types into file #350.1
	D NEWAC^IB20PT31 ;  Add new Action Charges into file #350.2
	D ATSE ;            Resolve ptrs to #49 from #350.1
	D ATAC^IB20PT31 ;   Resolve ptrs to #350.1 from #350.2
	D ^IB20PT32 ;       Resolve ptrs to #350.1 from #350.1
	Q
	;
	;
ATSE	; Resolve pointers to file #49 from file #350.1
	W !!,">>> Updating pointers to file #49 from file #350.1... "
	S IBSERV=$P($G(^IBE(350.9,1,1)),"^",14)
	I 'IBSERV W !!,"You must define MAS as a service in your IB Site Parameter file before you",!,"can update the IB Action Type file!  Please perform this action after",!,"installing this software." G ATSEQ
	;
	; - update both service and AR category
	F IBI=1:1 S IBX=$P($T(DATA+IBI),";;",2,99) Q:IBX=""  D
	.S IBATYP=$O(^IBE(350.1,"B",$P(IBX,"^"),0)) Q:'IBATYP
	.;S IBARTYP=$O(^PRCA(430.2,"B",$P(IBX,"^",3),0)) Q:'IBARTYP
	.;S $P(^IBE(350.1,IBATYP,0),"^",3)=IBARTYP
	.S DIE="^IBE(350.1,",DA=IBATYP,DR=".04////"_IBSERV D ^DIE K DIC,DIE,DA,DR W "."
	;
	; - update service only
	F IBI=1:1 S IBX=$P($T(EVT+IBI),";;",2,99) Q:IBX=""  D
	.S IBATYP=$O(^IBE(350.1,"B",IBX,0)) Q:'IBATYP
	.S DIE="^IBE(350.1,",DA=IBATYP,DR=".04////"_IBSERV D ^DIE K DIC,DIE,DA,DR W "."
	;
ATSEQ	K IBI,IBX,IBATYP,IBARTYP,IBSERV
	Q
	;
	;
DATA	;Action Type (#350.1)^  <null>   ^AR Category (#430.2)
	;;DG CHAMPVA PER DIEM NEW
	;;DG CHAMPVA PER DIEM CANCEL
	;;DG CHAMPVA PER DIEM UPDATE
	;
	; - others that may need to be updated
	;
	;;DG FEE SERVICE (INPT) CANCEL^  ^NURSING HOME CARE(NSC)
	;;DG FEE SERVICE (INPT) NEW^     ^NURSING HOME CARE(NSC)
	;;DG FEE SERVICE (INPT) UPDATE^  ^NURSING HOME CARE(NSC)
	;;DG NHCU COPAY NEW^             ^NURSING HOME CARE(NSC)
	;;DG NHCU COPAY CANCEL^          ^NURSING HOME CARE(NSC)
	;;DG NHCU COPAY UPDATE^          ^NURSING HOME CARE(NSC)
	;;DG NHCU PER DIEM CANCEL^       ^NURSING HOME CARE PER DIEM
	;;DG NHCU PER DIEM NEW^          ^NURSING HOME CARE PER DIEM
	;;DG NHCU PER DIEM UPDATE^       ^NURSING HOME CARE PER DIEM
	;;DG INPT COPAY (ALC) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (ALC) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (ALC) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (BLI) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (BLI) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (BLI) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (INT) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (INT) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (INT) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (MED) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (MED) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (MED) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (NEU) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (NEU) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (NEU) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (PSY) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (PSY) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (PSY) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (REH) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (REH) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (REH) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SPI) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SPI) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SPI) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SUR) NEW^       ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SUR) CANCEL^    ^HOSPITAL CARE (NSC)
	;;DG INPT COPAY (SUR) UPDATE^    ^HOSPITAL CARE (NSC)
	;;DG INPT PER DIEM CANCEL^      ^HOSPITAL CARE PER DIEM
	;;DG INPT PER DIEM NEW^         ^HOSPITAL CARE PER DIEM
	;;DG INPT PER DIEM UPDATE^      ^HOSPITAL CARE PER DIEM
	;;DG FEE SERVICE (OPT) CANCEL^  ^OUTPATIENT CARE(NSC)
	;;DG FEE SERVICE (OPT) NEW^     ^OUTPATIENT CARE(NSC)
	;;DG FEE SERVICE (OPT) UPDATE^  ^OUTPATIENT CARE(NSC)
	;;DG OPT COPAY CANCEL^          ^OUTPATIENT CARE(NSC)
	;;DG OPT COPAY NEW^             ^OUTPATIENT CARE(NSC)
	;;DG OPT COPAY UPDATE^          ^OUTPATIENT CARE(NSC)
	;
	;
EVT	;Event Action Type (#350.1)
	;;CHAMPVA SUBSISTENCE LIMIT
	;
	; - others that may need to be updated
	;
	;;MEDICARE DEDUCTIBLE
	;;HOSPITAL ADMISSION
	;;NHCU ADMISSION
	;

IB20PT31
IB20PT31	;ALB/CPM - IB V2.0 POST INIT, RESOLVE TABLE POINTERS ; 02-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
NEWAT	; Add new IB Action Types into file #350.1
	W !!,">>> Adding new IB Action Types into file #350.1..."
	F IBI=1:1 S IBCR=$P($T(NAT+IBI),";;",2) Q:IBCR="QUIT"  D
	.S X=$P(IBCR,"^")
	.I $O(^IBE(350.1,"B",X,0)) W !," >> '",X,"' is already on file..." Q
	.K DD,DO S DIC="^IBE(350.1,",DIC(0)="" D FILE^DICN Q:Y<0
	.S ^(0)=^IBE(350.1,+Y,0)_"^"_$P(IBCR,"^",2,11) S DIK=DIC,DA=+Y D IX1^DIK
	.W !," >> '",$P(IBCR,"^"),"' has been filed..."
	K DA,DIC,DIE,DR,IBI,IBCR,X,Y
	Q
	;
NAT	; Action Types to add into file #350.1
	;;CHAMPVA SUBSISTENCE LIMIT^CVA LIM^^^82^^^CHAMPVA LIMIT
	;;DG CHAMPVA PER DIEM NEW^CVA PD^^^1^^^CHAMPVA SUBSISTENCE^^^6
	;;DG CHAMPVA PER DIEM CANCEL^CAN CPD^^^2
	;;DG CHAMPVA PER DIEM UPDATE^UPD CPD^^^3
	;;QUIT
	;
NEWAC	; Add new IB Action Charges into file #350.2
	W !!,">>> Adding new IB Action Charges into file #350.2..."
	F IBI=1:1 S IBCR=$P($T(NAC+IBI),";;",2) Q:IBCR="QUIT"  D
	.S X=$P(IBCR,"^"),IBF=$O(^IBE(350.2,"B",X,0))
	.I IBF S IBT=0 D  Q:IBT
	..S IBG=0 F  S IBG=$O(^IBE(350.2,"B",X,IBG)) Q:'IBG  D  Q:IBT
	...I $P($G(^IBE(350.2,IBG,0)),"^",2)=$P(IBCR,"^",2) S IBT=1 W !," >> '",X,"' for ",$$DAT1^IBOUTL($P(IBCR,"^",2))," is already on file..." Q
	.;
	.K DD,DO S DIC="^IBE(350.2,",DIC(0)="" D FILE^DICN Q:Y<0
	.S DIE=DIC,DA=+Y,DR=".02////"_$P(IBCR,"^",2)_";.04////"_$P(IBCR,"^",4) D ^DIE
	.W !," >> '",$P(IBCR,"^"),"' has been filed..."
	K DA,DIC,DIE,DR,IBF,IBG,IBI,IBCR,IBT,X,Y
	Q
	;
NAC	; Action Charges to add into file #350.2
	;;CHAMPVA SUBSISTENCE LIMIT^2911001^^25
	;;CHAMPVA PER DIEM^2911001^^8.95
	;;CHAMPVA PER DIEM^2921001^^9.30
	;;QUIT
	;
ATAC	; Resolve pointers to #350.1 from #350.2
	W !!,">>> Updating pointers to file #350.1 from file #350.2 ... "
	F IBI=1:1 S IBX=$P($T(CHG+IBI),";;",2,99) Q:IBX=""  D
	.S IBATYP=$O(^IBE(350.1,"B",$P(IBX,"^",2),0))
	.S IBJ=0 F  S IBJ=$O(^IBE(350.2,"B",$P(IBX,"^"),IBJ)) Q:'IBJ  D
	..S DIE="^IBE(350.2,",DA=IBJ,DR=".03////"_IBATYP
	..D ^DIE K DA,DR,DIE W "."
	K DA,DR,DIE,IBATYP,IBI,IBJ,IBX
	Q
	;
	;
CHG	;Action Charge (#350.2)^Action Type (#350.1)
	;;CHAMPVA SUBSISTENCE LIMIT^CHAMPVA SUBSISTENCE LIMIT
	;;CHAMPVA PER DIEM^DG CHAMPVA PER DIEM NEW
	;
	; - others that may need to be updated
	;
	;;RX1^PSO NSC RX COPAY NEW
	;;RX2^PSO SC RX COPAY NEW
	;;RX3^PSO NSC RX COPAY CANCEL
	;;RX4^PSO NSC RX COPAY UPDATE
	;;RX5^PSO SC RX COPAY CANCEL
	;;RX6^PSO SC RX COPAY UPDATE
	;;MEDICARE 1^IB OPT MEDICARE RATE 1
	;;MEDICARE 2^IB OPT MEDICARE RATE 2
	;;MEDICARE 3^IB OPT MEDICARE RATE 3
	;;MEDICARE 4^IB OPT MEDICARE RATE 4
	;;MEDICARE 5^IB OPT MEDICARE RATE 5
	;;MEDICARE 6^IB OPT MEDICARE RATE 6
	;;MEDICARE 7^IB OPT MEDICARE RATE 7
	;;MEDICARE 8^IB OPT MEDICARE RATE 8
	;;MEDICARE 9^IB OPT MEDICARE RATE 9
	;;INPT PER DIEM^DG INPT PER DIEM NEW
	;;NHCU PER DIEM^DG NHCU PER DIEM NEW
	;;MEDICARE DEDUCTIBLE^MEDICARE DEDUCTIBLE
	;
	;
ATUT	; Resolve pointers to #350.1 from #399.1
	W !!,">>> Updating pointers to file #350.1 from file #399.1 ... "
	F IBI=1:1 S IBX=$P($T(UTL+IBI),";;",2,99) Q:IBX=""  D
	.S IBUTL=$O(^DGCR(399.1,"B",$P(IBX,"^"),0))
	.S IBCP=$O(^IBE(350.1,"B",$P(IBX,"^",2),0))
	.S IBPD=$O(^IBE(350.1,"B",$P(IBX,"^",3),0))
	.S DIE="^DGCR(399.1,",DA=IBUTL,DR=".14////"_IBCP_";.15////"_IBPD
	.D ^DIE K DA,DR,DIE W "."
	;
	; - repoint outpatient copay pointer
	S DA=$O(^DGCR(399.1,"B","OUTPATIENT VISIT",0))
	S IBCP=$O(^IBE(350.1,"B","DG OPT COPAY NEW",0))
	I DA,IBCP S DIE="^DGCR(399.1,",DR=".14////"_IBCP D ^DIE W "."
	K DA,DR,DIE,IBI,IBX,IBUTL,IBCP,IBPD
	Q
	;
UTL	;Utility (#399.1)^Copay Action (#350.1)^Per Diem Action (#350.1)
	;;ALCOHOL AND DRUG TREATMENT^DG INPT COPAY (ALC) NEW^DG INPT PER DIEM NEW
	;;BLIND REHABILITATION^DG INPT COPAY (BLI) NEW^DG INPT PER DIEM NEW
	;;GENERAL MEDICAL CARE^DG INPT COPAY (MED) NEW^DG INPT PER DIEM NEW
	;;INTERMEDIATE CARE^DG INPT COPAY (INT) NEW^DG INPT PER DIEM NEW
	;;NEUROLOGY^DG INPT COPAY (NEU) NEW^DG INPT PER DIEM NEW
	;;NURSING HOME CARE^DG NHCU COPAY NEW^DG NHCU PER DIEM NEW
	;;PSYCHIATRIC CARE^DG INPT COPAY (PSY) NEW^DG INPT PER DIEM NEW
	;;REHABILITATION MEDICINE^DG INPT COPAY (REH) NEW^DG INPT PER DIEM NEW
	;;SPINAL CORD INJURY CARE^DG INPT COPAY (SPI) NEW^DG INPT PER DIEM NEW
	;;SURGICAL CARE^DG INPT COPAY (SUR) NEW^DG INPT PER DIEM NEW
	;

IB20PT32
IB20PT32	;ALB/CPM - IB V2.0 POST INIT, RESOLVE TABLE POINTERS ; 02-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ATAT	; Resolve pointers to file #350.1 from file #350.1
	W !!,">>> Updating pointers to file #350.1 from file #350.1... "
	F IBI=1:1 S IBX=$P($T(ACT+IBI),";;",2,99) Q:IBX=""  D
	.S IBNEW=$O(^IBE(350.1,"B",$P(IBX,"^"),0))
	.S IBCAN=$O(^IBE(350.1,"B",$P(IBX,"^",2),0))
	.S IBUPD=$O(^IBE(350.1,"B",$P(IBX,"^",3),0))
	.F IBJ=IBNEW,IBCAN,IBUPD D
	..S DIE="^IBE(350.1,",DA=IBJ
	..S DR=".06////"_IBCAN_";.07////"_IBUPD_";.09////"_IBNEW
	..D ^DIE K DA,DR,DIE W "."
	;
	; - update only new action type
	F IBI=1:1 S IBX=$P($T(ACT1+IBI),";;",2,99) Q:IBX=""  D
	.S IBJ=$O(^IBE(350.1,"B",IBX,0)) Q:'IBJ
	.S DIE="^IBE(350.1,",DA=IBJ,DR=".09////"_IBJ
	.D ^DIE K DA,DR,DIE W "."
	;
	K IBI,IBX,IBNEW,IBCAN,IBUPD,IBJ
	Q
	;
	;
ACT	;New Action (#350.1)^Cancel Action (#350.1)^Update Action (#350.1)
	;;DG CHAMPVA PER DIEM NEW^DG CHAMPVA PER DIEM CANCEL^DG CHAMPVA PER DIEM UPDATE
	;
	; - others that may need to be updated
	;
	;;DG FEE SERVICE (INPT) NEW^DG FEE SERVICE (INPT) CANCEL^DG FEE SERVICE (INPT) UPDATE
	;;DG NHCU COPAY NEW^DG NHCU COPAY CANCEL^DG NHCU COPAY UPDATE
	;;DG NHCU PER DIEM NEW^DG NHCU PER DIEM CANCEL^DG NHCU PER DIEM UPDATE
	;;DG INPT COPAY (ALC) NEW^DG INPT COPAY (ALC) CANCEL^DG INPT COPAY (ALC) UPDATE
	;;DG INPT COPAY (BLI) NEW^DG INPT COPAY (BLI) CANCEL^DG INPT COPAY (BLI) UPDATE
	;;DG INPT COPAY (INT) NEW^DG INPT COPAY (INT) CANCEL^DG INPT COPAY (INT) UPDATE
	;;DG INPT COPAY (MED) NEW^DG INPT COPAY (MED) CANCEL^DG INPT COPAY (MED) UPDATE
	;;DG INPT COPAY (NEU) NEW^DG INPT COPAY (NEU) CANCEL^DG INPT COPAY (NEU) UPDATE
	;;DG INPT COPAY (PSY) NEW^DG INPT COPAY (PSY) CANCEL^DG INPT COPAY (PSY) UPDATE
	;;DG INPT COPAY (REH) NEW^DG INPT COPAY (REH) CANCEL^DG INPT COPAY (REH) UPDATE
	;;DG INPT COPAY (SPI) NEW^DG INPT COPAY (SPI) CANCEL^DG INPT COPAY (SPI) UPDATE
	;;DG INPT COPAY (SUR) NEW^DG INPT COPAY (SUR) CANCEL^DG INPT COPAY (SUR) UPDATE
	;;DG INPT PER DIEM NEW^DG INPT PER DIEM CANCEL^DG INPT PER DIEM UPDATE
	;;DG FEE SERVICE (OPT) NEW^DG FEE SERVICE (OPT) CANCEL^DG FEE SERVICE (OPT) UPDATE
	;;DG OPT COPAY NEW^DG OPT COPAY CANCEL^DG OPT COPAY UPDATE
	;
	;
ACT1	;New Action (#350.1)
	;;CHAMPVA SUBSISTENCE LIMIT
	;
	; - others that may need to be updated
	;
	;;MEDICARE DEDUCTIBLE
	;;HOSPITAL ADMISSION
	;;NHCU ADMISSION
	;;IB OPT MEDICARE RATE 1
	;;IB OPT MEDICARE RATE 2
	;;IB OPT MEDICARE RATE 3
	;;IB OPT MEDICARE RATE 4
	;;IB OPT MEDICARE RATE 5
	;;IB OPT MEDICARE RATE 6
	;;IB OPT MEDICARE RATE 7
	;;IB OPT MEDICARE RATE 8
	;;IB OPT MEDICARE RATE 9

IB20PT4
IB20PT4	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !!,">>> Installing List Templates...",!
	W !,"'IB CHARGES' List Template..."
	S DA=$O(^SD(409.61,"B","IB CHARGES",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IB CHARGES" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IB CHARGES^1^1^80^5^14^1^1^Charge^IBACM1 MENU^Charges^1^32"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBACM"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^7^7"
	.S ^SD(409.61,VALM,"COL",1,0)="CHARGE^71^9^Charge"
	.S ^SD(409.61,VALM,"COL",2,0)="FDATE^4^9^Bill From"
	.S ^SD(409.61,VALM,"COL",3,0)="ENTRY^25^23^Charge Type"
	.S ^SD(409.61,VALM,"COL",4,0)="STATUS^57^12^Status"
	.S ^SD(409.61,VALM,"COL",5,0)="CHG#^1^3"
	.S ^SD(409.61,VALM,"COL",6,0)="BILL#^49^6^Bill #"
	.S ^SD(409.61,VALM,"COL",7,0)="TDATE^15^8^Bill To"
	.S ^SD(409.61,VALM,"FNL")="D FNL^IBECEA"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBECEA"
	.S ^SD(409.61,VALM,"HLP")="S X=""?"" D DISP^XQORM1 W !!"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBECEA"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IB EVENTS' List Template..."
	S DA=$O(^SD(409.61,"B","IB EVENTS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IB EVENTS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IB EVENTS^1^^80^5^14^1^1^Event^IBACME EVENT MENU^Update Events^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBACME"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^5^5"
	.S ^SD(409.61,VALM,"COL",1,0)="TYPE^4^18^Event Type"
	.S ^SD(409.61,VALM,"COL",2,0)="WARD^24^20^Ward"
	.S ^SD(409.61,VALM,"COL",3,0)="EDATE^48^10^Event Date"
	.S ^SD(409.61,VALM,"COL",4,0)="STATUS^60^7^Status"
	.S ^SD(409.61,VALM,"COL",5,0)="LCALC^69^10^Last Calc"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBECEA5"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBECEA5"
	.S ^SD(409.61,VALM,"HLP")="S X=""?"" D DISP^XQORM1 W !!"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBECEA5"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS ANNUAL BENEFITS' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS ANNUAL BENEFITS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS ANNUAL BENEFITS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS ANNUAL BENEFITS^1^^98^5^18^1^1^Annual Benefits^IBCNSA ANNUAL BENEFITS^Annual Benefits Editor^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSA"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^^0"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSA K IBL"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSA(""Annual Benefits"")"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSA"
	.S ^SD(409.61,VALM,"INIT")="S IBL=1 D INIT^IBCNSA"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS BENEFITS USED BY DATE' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS BENEFITS USED BY DATE",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS BENEFITS USED BY DATE" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS BENEFITS USED BY DATE^1^^98^5^18^1^1^Benefits Used by Date^IBCNSD BENEFITS USED BY DATE^Benefits Used By Date Editor^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSD"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSA(""Benefits Used"")"
	.S ^SD(409.61,VALM,"HLP")=""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT41

IB20PT41
IB20PT41	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBCNS EXPANDED POLICY' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS EXPANDED POLICY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS EXPANDED POLICY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS EXPANDED POLICY^1^^80^5^18^1^1^Policy^IBCNSP POLICY MENU^Patient Policy Information^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSVP"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^^0"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSP"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSP"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSP"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSP"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS INSURANCE COMPANY' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS INSURANCE COMPANY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS INSURANCE COMPANY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS INSURANCE COMPANY^1^^90^5^17^1^1^Insurance Company^IBCNSC INSURANCE CO^Insurance Company Editor^"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSC"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSC"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSC"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSC"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSC"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS INSURANCE MANAGEMENT' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS INSURANCE MANAGEMENT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS INSURANCE MANAGEMENT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS INSURANCE MANAGEMENT^1^1^160^5^17^1^1^Policy^IBCNSM  INSURANCE MANAGEMENT^Insurance Management Option^4^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBNSM"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^14^14"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="NAME^5^15^Insurance Co.^^1"
	.S ^SD(409.61,VALM,"COL",3,0)="POLICY^134^15^Subscriber ID^^0"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^39^11^Group^^0"
	.S ^SD(409.61,VALM,"COL",5,0)="HOLDER^52^8^Holder"
	.S ^SD(409.61,VALM,"COL",6,0)="EFFDT^61^9^Effect."
	.S ^SD(409.61,VALM,"COL",7,0)="EXPIRE^72^9^Expires"
	.S ^SD(409.61,VALM,"COL",8,0)="TYPE^81^8^Type"
	.S ^SD(409.61,VALM,"COL",9,0)="VERIFIED BY^91^12^Verified By"
	.S ^SD(409.61,VALM,"COL",10,0)="VERIFIED ON^105^9^Date Ver."
	.S ^SD(409.61,VALM,"COL",11,0)="PRECERT^116^5^Pre"
	.S ^SD(409.61,VALM,"COL",12,0)="UR^122^5^UR"
	.S ^SD(409.61,VALM,"COL",13,0)="COB^128^4^COB"
	.S ^SD(409.61,VALM,"COL",14,0)="TYPEPOL^22^15^Type of Policy"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,3)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",0,4)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,2)=""
	.S ^SD(409.61,VALM,"FNL")="D FNL^IBCNSM"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSM"
	.S ^SD(409.61,VALM,"HLP")=""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSM"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS PATIENT INSURANCE' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS PATIENT INSURANCE",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS PATIENT INSURANCE" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS PATIENT INSURANCE^1^^160^5^17^1^1^Policy^IBCNSM PATIENT INSURANCE^Patient Insurance Management^4^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBNSM"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^14^14"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4^^^0"
	.S ^SD(409.61,VALM,"COL",2,0)="NAME^5^15^Insurance Co.^^1"
	.S ^SD(409.61,VALM,"COL",3,0)="POLICY^134^15^Subscriber ID"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^39^11^Group"
	.S ^SD(409.61,VALM,"COL",5,0)="HOLDER^52^8^Holder"
	.S ^SD(409.61,VALM,"COL",6,0)="EFFDT^61^9^Effect."
	.S ^SD(409.61,VALM,"COL",7,0)="EXPIRE^72^9^Expires"
	.S ^SD(409.61,VALM,"COL",8,0)="TYPE^81^8^Type"
	.S ^SD(409.61,VALM,"COL",9,0)="VERIFIED BY^91^12^Verified By"
	.S ^SD(409.61,VALM,"COL",10,0)="VERIFIED ON^105^9^Date Ver."
	.S ^SD(409.61,VALM,"COL",11,0)="PRECERT^116^5^Pre"
	.S ^SD(409.61,VALM,"COL",12,0)="UR^122^5^UR"
	.S ^SD(409.61,VALM,"COL",13,0)="COB^128^4^COB"
	.S ^SD(409.61,VALM,"COL",14,0)="TYPEPOL^22^15^Type of Policy"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,1)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,2)=""
	.S ^SD(409.61,VALM,"FNL")="D FNL^IBCNSM4"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSM4"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSM4"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT42

IB20PT42
IB20PT42	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBCNS VIEW AN BEN' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS VIEW AN BEN",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS VIEW AN BEN" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS VIEW AN BEN^1^^98^5^18^1^1^Annual Benefits^IBCNSV ANNUAL BENEFITS^Annual Benefits Editor^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSA"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSA"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSA(""Annual Benefits"")"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSA"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSA"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS VIEW BEN USED' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS VIEW BEN USED",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS VIEW BEN USED" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS VIEW BEN USED^1^^98^5^18^1^1^Benefits Used by Date^IBCNSV BENEFITS USED BY DATE^Benefits Used By Date Editor^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSD"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSA(""Benefits Used"")"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS VIEW EXP POL' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS VIEW EXP POL",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS VIEW EXP POL" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS VIEW EXP POL^1^^80^5^18^1^1^Policy^IBCNSV POLICY MENU^Patient Policy Information^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSVP"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSP"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSP"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSP"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSP"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS VIEW INS CO' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS VIEW INS CO",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS VIEW INS CO" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS VIEW INS CO^1^^90^5^17^1^1^Insurance Company^IBCNSV INSURANCE CO^Insurance Company Editor"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBCNSC"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBCNSC"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSC"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBCNSC"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSC"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBCNS VIEW PAT INS' List Template..."
	S DA=$O(^SD(409.61,"B","IBCNS VIEW PAT INS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBCNS VIEW PAT INS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBCNS VIEW PAT INS^1^^150^5^17^1^1^Policy^IBCNSV PATIENT INSURANCE^Patient Insurance Management^4^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBNSM"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^14^14"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4^^^0"
	.S ^SD(409.61,VALM,"COL",2,0)="NAME^5^15^Insurance Co.^^1"
	.S ^SD(409.61,VALM,"COL",3,0)="POLICY^134^15^Subscriber ID"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^39^11^Group"
	.S ^SD(409.61,VALM,"COL",5,0)="HOLDER^52^8^Holder"
	.S ^SD(409.61,VALM,"COL",6,0)="EFFDT^61^9^Effect."
	.S ^SD(409.61,VALM,"COL",7,0)="EXPIRE^72^9^Expires"
	.S ^SD(409.61,VALM,"COL",8,0)="TYPE^81^8^Type"
	.S ^SD(409.61,VALM,"COL",9,0)="VERIFIED BY^91^12^Verified By"
	.S ^SD(409.61,VALM,"COL",10,0)="VERIFIED ON^105^9^Date Ver."
	.S ^SD(409.61,VALM,"COL",11,0)="PRECERT^116^5^Pre"
	.S ^SD(409.61,VALM,"COL",12,0)="UR^122^5^UR"
	.S ^SD(409.61,VALM,"COL",13,0)="COB^128^4^COB"
	.S ^SD(409.61,VALM,"COL",14,0)="TYPEPOL^22^15^Type of Policy"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,1)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,2)=""
	.S ^SD(409.61,VALM,"FNL")="D FNL^IBCNSM4"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBCNSM4"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBCNSM4"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT43

IB20PT43
IB20PT43	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBDE IMP/EXP FORMS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE IMP/EXP FORMS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE IMP/EXP FORMS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE IMP/EXP FORMS^1^1^123^7^16^1^1^FORM FOR IMP/EXP^IBDE IMP/EXP MENU FOR FORMS^Import/Export Work Space^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""IMP/EXP WS"",""FORMS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDE"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDE"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDE"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDE IMP/EXP TK BLOCKS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE IMP/EXP TK BLOCKS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE IMP/EXP TK BLOCKS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE IMP/EXP TK BLOCKS^1^1^123^7^16^1^1^BLOCK FOR IMP/EXP^IBDE IMP/EXP MENU FOR BLOCKS^Import/Export Work Space^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""IMP/EXP WS"",""BLOCKS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDE3"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDE3"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDE3"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDE TEXT DISPLAY' List Template..."
	S DA=$O(^SD(409.61,"B","IBDE TEXT DISPLAY",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDE TEXT DISPLAY" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDE TEXT DISPLAY^2^1^132^4^20^1^1^TEXT^^TEXT DISPLAY^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D TEXT^IBDE1"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF CLINIC FORM LIST' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF CLINIC FORM LIST",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF CLINIC FORM LIST" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF CLINIC FORM LIST^1^^123^5^14^1^1^FORM^IBDF CLINIC'S FORMS MENU^LIST OF FORMS FOR CLINIC^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME^"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^USE & BRIEF DESCRIPTION^H"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"EXP")=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF6"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF6"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF6"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT44

IB20PT44
IB20PT44	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBDF DISPLAY FORM FOR EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF DISPLAY FORM FOR EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF DISPLAY FORM FOR EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF DISPLAY FORM FOR EDIT^1^^200^4^18^1^1^FORM^IBDF MENU FOR EDITING DISPLAYED FORM^EDIT ENCOUNTER FORM^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM LEFT SIDE^5^79^123456789 123456789 123456789 123456789 123456789 123456789 123456789 12345678"
	.S ^SD(409.61,VALM,"COL",3,0)="FORM RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF5"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF5"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF5"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF DISPLAY GROUPS FOR EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF DISPLAY GROUPS FOR EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF DISPLAY GROUPS FOR EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF DISPLAY GROUPS FOR EDIT^1^^80^4^18^1^1^SELECTION LIST PRINT GROUP^IBDF EDIT SELECTION LIST MENU^Edit Selection List^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""GROUPS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^4^4"
	.S ^SD(409.61,VALM,"COL",1,0)="PRINT ORDER^8^6^ORDER^R^0"
	.S ^SD(409.61,VALM,"COL",2,0)="HEADER^20^40^HEADER^"
	.S ^SD(409.61,VALM,"COL",3,0)="CONTAINS^65^8^CONTAINS"
	.S ^SD(409.61,VALM,"COL",4,0)="ID^1^2^^R^1"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,1)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,4)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF3"
	.S ^SD(409.61,VALM,"HDR")="D LMGRPHDR^IBDF3"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF3"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EDIT GROUP'S SELECTIONS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EDIT GROUP'S SELECTIONS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EDIT GROUP'S SELECTIONS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EDIT GROUP'S SELECTIONS^1^1^150^4^20^1^1^SELECTION^IBDF EDIT GROUP'S SELECTIONS MENU^Edit Group's Selections^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""SELECTIONS"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="SELECTION^16^80^****************   SELECTIONS   ****************"
	.S ^SD(409.61,VALM,"COL",3,0)="ORDER^8^6^ORDER"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF4"
	.S ^SD(409.61,VALM,"HDR")="D LMGRPHDR^IBDF4"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF4"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF EDIT TOOL KIT BLOCKS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF EDIT TOOL KIT BLOCKS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF EDIT TOOL KIT BLOCKS" D FILE^DICN S VALM=+Y
	G ^IB20PT45

IB20PT45
IB20PT45	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF EDIT TOOL KIT BLOCKS^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^4^4"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^43^80^BRIEF DESCRIPTION"
	.S ^SD(409.61,VALM,"COL",4,0)="TK ORDER^38^4^TK#"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF7"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDF7"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF7"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF FORM BLOCK EDIT' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF FORM BLOCK EDIT",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF FORM BLOCK EDIT" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF FORM BLOCK EDIT^1^^200^4^18^1^1^FORM BLOCK^IBDF EDIT FORM BLOCK MENU^EDITING A FORM BLOCK^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM BLOCK"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL",3,0)="BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF9"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF9"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF9"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF TOOL KIT BLOCK LIST' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF TOOL KIT BLOCK LIST",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF TOOL KIT BLOCK LIST" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF TOOL KIT BLOCK LIST^1^^160^4^20^1^1^TOOL KIT BLOCK^IBDF MENU FOR ADDING TOOL KIT BLOCK^LIST OF TOOL KIT BLOCKS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK NAME^6^30^BLOCK NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^37^80^BRIEF DESCRIPTION"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF7"
	.S ^SD(409.61,VALM,"HDR")=""
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBDF7"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF7"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBDF TOOL KIT FORMS' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF TOOL KIT FORMS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF TOOL KIT FORMS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF TOOL KIT FORMS^1^^123^5^20^1^1^FORM^IBDF TOOL KIT FORMS MENU^LIST OF TOOL KIT FORMS^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""FORM LIST"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ID^1^3^^R^1"
	.S ^SD(409.61,VALM,"COL",2,0)="FORM NAME^6^30^FORM NAME"
	.S ^SD(409.61,VALM,"COL",3,0)="BRIEF DESCRIPTION^38^80^BRIEF DESCRIPTION^H"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D ONEXIT^IBDF12"
	.S ^SD(409.61,VALM,"HDR")=""
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D ONENTRY^IBDF12"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT46

IB20PT46
IB20PT46	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBDF VIEW TOOL KIT BLOCK' List Template..."
	S DA=$O(^SD(409.61,"B","IBDF VIEW TOOL KIT BLOCK",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBDF VIEW TOOL KIT BLOCK" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBDF VIEW TOOL KIT BLOCK^2^^200^5^20^1^1^TOOL KIT BLOCK^^VIEW TOOL KIT BLOCK^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IB"",$J,""TOOL KIT BLOCK"")"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^3^3"
	.S ^SD(409.61,VALM,"COL",1,0)="ROW^1^3^^^1"
	.S ^SD(409.61,VALM,"COL",2,0)="BLOCK LEFT SIDE^5^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL",3,0)="BLOCK RIGHT SIDE^85^80^123456789 123456789 123456789 123456789 123456789 123456789 123456789 123456789"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,1)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBDF8"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBDF8"
	.S ^SD(409.61,VALM,"HLP")="W """""
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBDF8"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT APPEAL/DENIAL EDITOR' List Template..."
	S DA=$O(^SD(409.61,"B","IBT APPEAL/DENIAL EDITOR",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT APPEAL/DENIAL EDITOR" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT APPEAL/DENIAL EDITOR^1^^180^5^17^1^1^Appeal/Denial^IBTRD  MENU^Appeal and Denial Tracking^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRD"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^13^13"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="INS CO^5^15^Ins. Co."
	.S ^SD(409.61,VALM,"COL",3,0)="POLICY^22^10^Group^^1"
	.S ^SD(409.61,VALM,"COL",4,0)="DATE^35^8^Date"
	.S ^SD(409.61,VALM,"COL",5,0)="ACTION^45^11^Action"
	.S ^SD(409.61,VALM,"COL",6,0)="EVENT^56^8^Visit"
	.S ^SD(409.61,VALM,"COL",7,0)="EV DATE^65^15^Visit Date"
	.S ^SD(409.61,VALM,"COL",8,0)="ROI^81^10^ROI"
	.S ^SD(409.61,VALM,"COL",9,0)="DAYS^92^5^Days"
	.S ^SD(409.61,VALM,"COL",10,0)="CONTACT^98^17^Contact"
	.S ^SD(409.61,VALM,"COL",11,0)="PHONE^116^15^Phone"
	.S ^SD(409.61,VALM,"COL",12,0)="REF NO^132^15^Reference No"
	.S ^SD(409.61,VALM,"COL",13,0)="TYPE^149^20^Type"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,3)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRD"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRD"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT APPEAL/DENIAL INS EDITOR' List Template..."
	S DA=$O(^SD(409.61,"B","IBT APPEAL/DENIAL INS EDITOR",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT APPEAL/DENIAL INS EDITOR" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT APPEAL/DENIAL INS EDITOR^1^^180^5^17^1^1^Appeal/Denial^IBTRD  MENU^Appeal and Denial Tracking^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRD"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^14^13"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="PATIENT^5^15^Patient"
	.S ^SD(409.61,VALM,"COL",3,0)="ID^25^5^Pt ID^^1"
	.S ^SD(409.61,VALM,"COL",5,0)="DATE^35^8^Date"
	.S ^SD(409.61,VALM,"COL",6,0)="ACTION^45^11^Action"
	.S ^SD(409.61,VALM,"COL",7,0)="EVENT^56^8^Visit"
	.S ^SD(409.61,VALM,"COL",8,0)="EV DATE^65^15^Visit Date"
	.S ^SD(409.61,VALM,"COL",9,0)="ROI^81^10^ROI"
	.S ^SD(409.61,VALM,"COL",10,0)="DAYS^92^5^Days"
	.S ^SD(409.61,VALM,"COL",11,0)="CONTACT^98^17^Contact"
	.S ^SD(409.61,VALM,"COL",12,0)="PHONE^116^15^Phone"
	.S ^SD(409.61,VALM,"COL",13,0)="REF NO^132^15^Reference No"
	.S ^SD(409.61,VALM,"COL",14,0)="TYPE^149^20^Type"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,3)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRD"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRD"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT47

IB20PT47
IB20PT47	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBT CLAIMS TRACKING EDITOR' List Template..."
	S DA=$O(^SD(409.61,"B","IBT CLAIMS TRACKING EDITOR",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT CLAIMS TRACKING EDITOR" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT CLAIMS TRACKING EDITOR^1^^138^5^16^1^1^Visit^IBTRE  MENU^Claims Tracking Editor^2^999^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRE"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^14^14"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="TYPE^5^8^Type"
	.S ^SD(409.61,VALM,"COL",3,0)="DATE^23^16^Date^^1"
	.S ^SD(409.61,VALM,"COL",4,0)="INSUR^40^5^Ins."
	.S ^SD(409.61,VALM,"COL",5,0)="UR^46^5^UR"
	.S ^SD(409.61,VALM,"COL",6,0)="BILLABLE^66^5^Bill"
	.S ^SD(409.61,VALM,"COL",7,0)="SPECIAL^125^11^Spec. Bill"
	.S ^SD(409.61,VALM,"COL",8,0)="DIAGNOSIS^81^8^Diag."
	.S ^SD(409.61,VALM,"COL",9,0)="PRECERT^90^12^Auth. No."
	.S ^SD(409.61,VALM,"COL",10,0)="DAYS^104^10^Days Apprv"
	.S ^SD(409.61,VALM,"COL",11,0)="INITIAL^116^7^Bill No."
	.S ^SD(409.61,VALM,"COL",12,0)="URGENT^15^7^Urgent"
	.S ^SD(409.61,VALM,"COL",13,0)="ROI^52^12^ROI"
	.S ^SD(409.61,VALM,"COL",14,0)="WARD^72^8^Ward"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,3)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRE"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRE"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRE"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRE"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT COMMUNICATIONS EDITOR' List Template..."
	S DA=$O(^SD(409.61,"B","IBT COMMUNICATIONS EDITOR",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT COMMUNICATIONS EDITOR" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT COMMUNICATIONS EDITOR^1^^132^5^17^1^1^Review^IBTRC  MENU^Insurance Reviews/Contacts^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRC"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^11^11"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="DATE^5^17^Date"
	.S ^SD(409.61,VALM,"COL",3,0)="INS CO^16^18^Ins. Co.^^1"
	.S ^SD(409.61,VALM,"COL",4,0)="GROUP^140^11^Group No."
	.S ^SD(409.61,VALM,"COL",5,0)="ACTION^55^9^Action"
	.S ^SD(409.61,VALM,"COL",6,0)="PRE-CERT^65^10^Auth. No."
	.S ^SD(409.61,VALM,"COL",7,0)="DAYS^76^5^Days"
	.S ^SD(409.61,VALM,"COL",8,0)="CONTACT^81^20^Person Contacted"
	.S ^SD(409.61,VALM,"COL",9,0)="PHONE^103^14^Phone"
	.S ^SD(409.61,VALM,"COL",10,0)="REF NO^119^12^Call Ref. No"
	.S ^SD(409.61,VALM,"COL",11,0)="TYPE^36^17^Type Contact"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,3)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRC"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRC"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRC"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRC"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT EDIT PENDING REVIEW' List Template..."
	S DA=$O(^SD(409.61,"B","IBT EDIT PENDING REVIEW",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT EDIT PENDING REVIEW" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT EDIT PENDING REVIEW^1^^150^4^17^1^1^Review^IBTRPR  MENU^Pending Reviews^3^90^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRPR"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^13^12"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",3,0)="TYPE^5^6^Type"
	.S ^SD(409.61,VALM,"COL",4,0)="DATE^73^8^Due Date"
	.S ^SD(409.61,VALM,"COL",5,0)="PATIENT^14^15^Patient"
	.S ^SD(409.61,VALM,"COL",6,0)="ID^31^5^Pt ID^^1"
	.S ^SD(409.61,VALM,"COL",7,0)="REVIEW^51^8^Review^^0"
	.S ^SD(409.61,VALM,"COL",8,0)="STATUS^81^10^Status"
	.S ^SD(409.61,VALM,"COL",9,0)="NEXT^60^11^Next Action"
	.S ^SD(409.61,VALM,"COL",10,0)="EVENT^90^10^Visit Type"
	.S ^SD(409.61,VALM,"COL",11,0)="EV DATE^106^17^Visit Date"
	.S ^SD(409.61,VALM,"COL",12,0)="WARD^39^10^Ward"
	.S ^SD(409.61,VALM,"COL",13,0)="ASSIGNED TO^125^25^Assigned To"
	.S ^SD(409.61,VALM,"COL","AIDENT",0,7)=""
	.S ^SD(409.61,VALM,"COL","AIDENT",1,6)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRPR"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRPR"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRPR"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRPR"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	G ^IB20PT48

IB20PT48
IB20PT48	;ALB/CPM - List Template Exporter ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	W !,"'IBT EXPAND/EDIT COMMUNICATIONS' List Template..."
	S DA=$O(^SD(409.61,"B","IBT EXPAND/EDIT COMMUNICATIONS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT EXPAND/EDIT COMMUNICATIONS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT EXPAND/EDIT COMMUNICATIONS^1^^80^5^18^1^1^Communication^IBTRCD  MENU^Expanded Insurance Reviews^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRCD"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRCD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRCD"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRCD"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRCD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT EXPAND/EDIT DENIALS' List Template..."
	S DA=$O(^SD(409.61,"B","IBT EXPAND/EDIT DENIALS",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT EXPAND/EDIT DENIALS" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT EXPAND/EDIT DENIALS^1^^80^5^18^1^1^Appeal/Denial^IBTRDD  MENU^Expanded Appeals/Denials^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRDD"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRDD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRDD"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRDD"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRDD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT EXPAND/EDIT REVIEW' List Template..."
	S DA=$O(^SD(409.61,"B","IBT EXPAND/EDIT REVIEW",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT EXPAND/EDIT REVIEW" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT EXPAND/EDIT REVIEW^1^^80^5^18^1^1^Review^IBTRVD  MENU^Expanded Hospital Reviews^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRVD"",$J)"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRVD"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRVD"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRVD"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRVD"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT EXPAND/EDIT TRACKING' List Template..."
	S DA=$O(^SD(409.61,"B","IBT EXPAND/EDIT TRACKING",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT EXPAND/EDIT TRACKING" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT EXPAND/EDIT TRACKING^1^^80^5^18^1^1^Episode^IBTRED  MENU^Expanded Claims Tracking Entry^1^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRED"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621"
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRED"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRED"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRED"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRED"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	W !,"'IBT REVIEW EDITOR' List Template..."
	S DA=$O(^SD(409.61,"B","IBT REVIEW EDITOR",0)),DIK="^SD(409.61," D ^DIK:DA
	K DO,DD S DIC(0)="L",DIC="^SD(409.61,",X="IBT REVIEW EDITOR" D FILE^DICN S VALM=+Y
	I VALM>0 D
	.S ^SD(409.61,VALM,0)="IBT REVIEW EDITOR^1^^132^5^17^1^1^Review^IBTRV  MENU^Hospital Reviews^2^^1"
	.S ^SD(409.61,VALM,1)="^VALM HIDDEN ACTIONS"
	.S ^SD(409.61,VALM,"ARRAY")=" ^TMP(""IBTRV"",$J)"
	.S ^SD(409.61,VALM,"COL",0)="^409.621^10^10"
	.S ^SD(409.61,VALM,"COL",1,0)="NUMBER^1^4"
	.S ^SD(409.61,VALM,"COL",2,0)="RV DATE^5^11^Review Date"
	.S ^SD(409.61,VALM,"COL",3,0)="TYPE^20^9^Type^^1"
	.S ^SD(409.61,VALM,"COL",4,0)="STATUS^41^8^Status"
	.S ^SD(409.61,VALM,"COL",5,0)="SPEC^52^11^Specialty"
	.S ^SD(409.61,VALM,"COL",6,0)="DAY^64^3^Day"
	.S ^SD(409.61,VALM,"COL",7,0)="NEXT^69^11^Next Review"
	.S ^SD(409.61,VALM,"COL",8,0)="WARD^31^7^Ward"
	.S ^SD(409.61,VALM,"COL",9,0)="BED^90^10^Room-bed"
	.S ^SD(409.61,VALM,"COL",10,0)="RV REASON^104^24^Reason for Review"
	.S ^SD(409.61,VALM,"COL","AIDENT",1,3)=""
	.S ^SD(409.61,VALM,"FNL")="D EXIT^IBTRV"
	.S ^SD(409.61,VALM,"HDR")="D HDR^IBTRV"
	.S ^SD(409.61,VALM,"HLP")="D HELP^IBTRV"
	.S ^SD(409.61,VALM,"INIT")="D INIT^IBTRV"
	.S DA=VALM,DIK="^SD(409.61," D IX1^DIK K DA,DIK
	.W "Filed."
	;
	K DIC,DIK,VALM,X,DA Q

IB20PT5
IB20PT5	;ALB/CPM - IB V2.0 POST-INIT ONE-TIME ITEMS ; 03-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Perform various one-time post-init items
	D ACHG ;       kill any dangling nodes in the IB ACTION TYPE file
	D DEF ;        enter the default billing form, if necessary
	D STAT ;       populate the IB ACTION STATUS (#350.21) file
	D BASC ;       update the BASC start date to 10/1/99
	D PSO ;        update eligibility logic for PSO SC RX COPAY NEW (#350.1)
	D CRES ;       update the cancellation reason MT CHARGE EDITED (#350.3)
	D CCMG ;       update the central collection mailgroup
	D FT ;         update form type file
	D ABP ;        set auto biller parameters
	D ^IB20PT51 ;  keep going...
	Q
	;
	;
ACHG	; Clean up any IB ACTION CHARGE (#350.2) nodes left hanging.
	W !!,">>> Cleaning up dangling nodes in the IB ACTION CHARGE (#350.2) file..."
	S I=0 F  S I=$O(^IBE(350.2,I)) Q:'I  I '$D(^(I,0)) K ^IBE(350.2,I)
	Q
	;
DEF	; Enter default billing form type.
	W !!,">>> Initializing the DEFAULT FORM TYPE, if necessary..."
	I '$P($G(^IBE(350.9,1,1)),U,26) S DA=1,DIE="^IBE(350.9,",DR="1.26////1" D ^DIE K DA,DIE,DR
	Q
	;
BASC	; Update the BASC start date to 10/1/99.
	W !!,">>> Updating the BASC start date to 10/1/99..."
	S $P(^IBE(350.9,1,1),"^",24)=2991001
	Q
	;
STAT	; Set new entries into the IB ACTION STATUS (#350.21) file.
	W !!,">>> Populating the IB ACTION (#350.21) file... "
	K ^IBE(350.21)
	S ^IBE(350.21,0)="IB ACTION STATUS^350.21^99^12"
	S ^IBE(350.21,1,0)="INCOMPLETE^INCOMPLETE^INC^0^0^0"
	S ^IBE(350.21,2,0)="COMPLETE^PENDING A/R^PEND^0^0^0"
	S ^IBE(350.21,3,0)="BILLED^BILLED^BILL^1^0^0"
	S ^IBE(350.21,4,0)="UPDATED^UPDATED^UPD^1^0^0"
	S ^IBE(350.21,8,0)="ON HOLD^ON HOLD (INS)^INS^0^0^1"
	S ^IBE(350.21,9,0)="ERROR ENCOUNTERED^ERROR^ERR^0^1^0"
	S ^IBE(350.21,10,0)="CANCELLED^CANCELLED^CANC^1^1^0"
	S ^IBE(350.21,11,0)="CO-PAY EXEMPTION CANCELLATION^CANCELLED (EXEMPTED)^EXEMPTED^1^1^0"
	S ^IBE(350.21,20,0)="HOLD - RATE^ON HOLD (RATE)^RATE^0^0^1"
	S ^IBE(350.21,99,0)="CONVERTED RECORD^CONVERTED RECORD^CONV^0^0^0"
	S DIK="^IBE(350.21," D IXALL^DIK K DIK
	Q
	;
CCMG	; Update the central collection mailgroup in file #350.9
	W !!,">>> Updating the central collection mailgroup to G.MCCR DATA@FORUM.VA.GOV ..."
	S IBX="G.MCCR DATA@FORUM.VA.GOV"
	S DA=1,DIE="^IBE(350.9,",DR="4.05///^S X=IBX" D ^DIE K DA,DR,DIE,IBX
	Q
	;
CRES	; Update the cancellation reason MT CHARGE EDITED in file #350.3
	W !!,">>> Updating the cancellation reason MT CHARGE EDITED in file #350.3 ..."
	S DA=$O(^IBE(350.3,"B","MT CHARGE EDITED",0))
	I DA S DIE="^IBE(350.3,",DR=".03////2" D ^DIE K DIE,DR,DA
	Q
	;
FT	; Update called routine for form type HCFA 1500
	W !!,">>> Updating the Form Types in #353..."
	S IBFT="HCFA 1500" S IBFTI=$O(^IBE(353,"B",IBFT,0)) I +IBFTI S DIE="^IBE(353,",DA=IBFTI,DR="1.01////EN^IBCF2" D ^DIE K DIE,DR,DA
	;K DD,DO S DIC="^IBE(353,",DIC(0)="L",X="UB-92",DIC("DR")="1.01////EN^IBCF3" D FILE^DICN K DIC,X
	K IBFT,IBFTI
	Q
	;
PSO	; Update the eligibility logic for PSO SC RX COPAY NEW
	W !!,">>> Updating the Eligibility logic for SC veterans for Pharmacy copay..."
	S IBNEWSC=$P($T(NEWCODE),";;",2,99)
	S IBX="PSO SC RX COPAY NEW",IBDA=+$O(^IBE(350.1,"B",IBX,0))
	S ^IBE(350.1,IBDA,40)=IBNEWSC
	K IBDA,IBNEWSC,IBX
	Q
	;
NEWCODE	;;S X=0,X1="",X2="" G:'$D(VAEL) 1^IBAERR I VAEL(4),+VAEL(3),'IBDOM S X=$S($P(VAEL(3),"^",2)<50:2,1:0) I X S:$$RXEXMT^IBARXEU0(DFN,DT) X=0 I X S X2=$P(^IBE(350.1,DA,0),"^",4) D COST^IBAUTL
	;
	;
ABP	; Set auto biller parameters.
	Q:'$G(IBAUTOBP)
	W !!,">>> Initializing the AUTO BILLER PARAMETERS ..."
	S DA=1,DIE="^IBE(350.9,",DR="7.01////7;7.02////"_DT D ^DIE K DA,DIE,DR
	S DA=1,DIE="^IBE(356.6,",DR=".04////1;.06////2" D ^DIE K DA,DIE,DR
	Q

IB20PT51
IB20PT51	;ALB/CPM - MORE IB V2.0 POST-INIT ONE-TIME ITEMS ; 28-JAN-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Perform more one-time post-init items
	D UBFM ;     add UB-92 form type to the Form Type (#353) file
	D RXFT ;     add Addendum form type to the Form Type (#353) file
	D FLAG ;     flag telephone stop codes as non-billable
	D HOLD ;     check all charges 'on hold' in file #350
	Q
	;
	;
UBFM	; Add UB-92 form type to the Form Type (#353) file.
	Q:$O(^IBE(353,"B","UB-92",0))
	W !!,">>> Adding UB-92 form type to the Form Type (#353) file."
	S DINUM=0 F Y=3:1:1000 I '$D(^IBE(353,Y,0))!($P($G(^IBE(353,Y,0)),U,1)="UB-92") S DINUM=Y Q
	I 'DINUM W !!,"****  ERROR: Could not add UB-92 claim form to file 353!  ****" G UBFMQ
	S DIC="^IBE(353,",DIC(0)="LX",X="UB-92" D ^DIC
	I '$P(Y,U,3) W !!,"**** ERROR: UB-92 Claim Form already defined!  Check Routine. ****" G UBFMQ
	I +Y>0 S DA=+Y,DIE=DIC,DR="1.01///^S X=""EN^IBCF3""" D ^DIE
UBFMQ	K DIC,DIE,DA,Y,X,DR,DINUM
	Q
	;
RXFT	; Add Addendum form type to the Form Type (#353) file.
	W !!,">>> Adding Addendum form type to the Form Type (#353) file."
	S DINUM=0 F Y=3:1:1000 I '$D(^IBE(353,Y,0))!($P($G(^IBE(353,Y,0)),U,1)="BILL ADDENDUM") S DINUM=Y Q
	I 'DINUM W !!,"****  ERROR: Could not add BILL ADDENDUM claim form to file 353!  ****" G RXFTE
	S DIC="^IBE(353,",DIC(0)="LX",X="BILL ADDENDUM" D ^DIC
	I '$P(Y,U,3) W !!,"**** ERROR: BILL ADDENDUM Claim Form already defined!  Check Routine. ****" G RXFTE
	I +Y>0 S DA=+Y,DIE=DIC,DR="1.01///^S X=""EN^IBCF4""" D ^DIE
RXFTE	K DIC,DIE,DA,Y,X,DR,DINUM
	Q
	;
FLAG	; Flag Telephone Stop Codes as non-billable for Means Test Billing
	W !!,">>> Flagging Telephone stop codes as non-billable for Means Test Billing..."
	F IBI=1:1 S IBS=$P($T(STOPS+IBI),";;",2) Q:IBS="QUIT"  D
	.S X=$O(^DIC(40.7,"B",IBS,0))
	.I 'X W !?4,"Unable to flag the stop code '",IBS,"' (not on file)..." Q
	.K DD,DO S DIC="^IBE(352.3,",DIC(0)="" D FILE^DICN Q:Y<0
	.S DIE=DIC,DA=+Y,DR=".02////2940201;.03////1" D ^DIE
	.W !?4,"Flagged stop code '",IBS,"' as non-billable..."
	K DA,DIC,DIE,DR,IBI,IBS,X,Y
	Q
	;
STOPS	; Stop codes to flag
	;;TELEPHONE TRIAGE
	;;TELEPHONE/MEDICINE
	;;TELEPHONE/SURGERY
	;;TELEPHONE/SPECIAL PSYCHIATRY
	;;TELEPHONE/GENERAL PSYCHIATRY
	;;TELEPHONE/PTSD
	;;TELEPHONE/ALCOHOL DEPENDENCE
	;;TELEPHONE/DRUG DEPENDENCE
	;;TELEPHONE/SUBSTANCE ABUSE
	;;TELEPHONE/ANCILLARY
	;;TELEPHONE/REHAB AND SUPPORT
	;;TELEPHONE/DIAGNOSTIC
	;;TELEPHONE/PROSTHETICS/ORTHOTIC
	;;TELEPHONE/DENTAL
	;;TELEPHONE/DIALYSIS
	;;QUIT
	;
	;
HOLD	; Check all charges in file #350 that are on hold.
	;
	W !!,">>> Examining all charges 'on hold' in File #350..."
	;
	S (IBCNTR,IBCNTU)=0
	;
	; - run through all held charges
	S DFN=0 F  S DFN=$O(^IB("AH",DFN)) Q:'DFN  D
	.S IBN=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D
	..;
	..; - get the action and parent
	..S IBND=$G(^IB(IBN,0)),IBPAR=+$P(IBND,"^",9)
	..;
	..; - if the parent is itself, and there's no entry in
	..; - ^ib("apdt",ibpar then re-index entry
	..I IBN=IBPAR,'$D(^IB("APDT",IBN)) S DA=IBN,DIK="^IB(" D IX1^DIK S IBCNTR=IBCNTR+1
	..;
	..; - determine the transaction type of the last transaction
	..S IBL=$$LAST^IBECEAU(IBPAR)
	..S IBTRTY=$P($G(^IBE(350.1,+$P($G(^IB(IBL,0)),"^",3),0)),"^",5)
	..;
	..; - if the transaction was a cancel-type transaction, update
	..; - the status of the held charge to cancelled.
	..Q:IBTRTY'=2
	..S DA=IBN,DIE="^IB(",DR=".05////10" D ^DIE
	..S IBCNTU=IBCNTU+1
	..;
	..; - show signs of life
	..W:'(IBCNTU#10) "."
	;
	;
	W !," >> ",$S(IBCNTU:IBCNTU,1:"No")," held charge",$S(IBCNTU=1:" was",1:"s were")," updated to cancelled."
	W !," >> ",$S(IBCNTR:IBCNTR,1:"No")," held charge",$S(IBCNTR=1:" was",1:"s were")," re-indexed."
	;
	K DA,DIK,DIE,DR,DFN,IBCNTR,IBCNTU,IBN,IBND,IBPAR,IBL,IBTRTY
	Q

IB20PT6
IB20PT6	;ALB/AAS - Insurance post init stuff ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	S IBFORCE=1
	I '$O(^IBA(355.3,0)) D  ; -- one time updates (ins policy alerady exists
	.D PAT ;            x-ref patient file by ins. co., add hip pointer
	.D 399^IB20PT61 ;   add ae x-ref to file 399
	.D INPT ;           load current inpatients into claims tracking
	;
	K IBFORCE
	Q
	;
PAT	; -- create AB x-ref on patient file for all insurance co. pointers
	W !!!,"<<< Patient file insurance conversion"
	W !,"    Cross-reference patient file by Insurance company and",!,"    Update Health Insurance Policy Pointers"
	S ZTRTN="PATDQ^IB20PT6",ZTDESC="IB - v2 PATIENT FILE POST INIT UPDATE",ZTIO="" S:$G(IBFORCE) ZTDTH=$$15
	W ! D ^%ZTLOAD I '$D(ZTSK) D  Q:'IBOK
	.D MANUAL^IB20PT61
	.I 'IBOK,$P($G(^IBE(350.9,1,3)),"^",18)="" W !!,"You must run the v2.0 post init routine IB20PT6 before allowing users to",!,"edit insurance information"
	I $D(ZTSK) W !,"    Patient file update queued as task ",ZTSK K ZTSK Q
	;
PATDQ	D NOW^%DTC S IBSPDT=%
	I '$D(ZTQUEUED) D
	.W !!,"    I'll write a dot for each 100 entries"
	.W !,"    Start time: " S Y=IBSPDT D DT^DIQ
	N DFN,IBI,IBCPOL,IBCDFND,DA,DR,DIE,DIC,IBCNT,IBCNTP,IBCNTPP,IBCNTI
	S (IBCNT,IBCNTP,IBCNTPP,IBCNTI,DFN)=0
	F  S DFN=$O(^DPT(DFN)) Q:'DFN  S IBCNT=IBCNT+1,IBI=0 S:$O(^DPT(DFN,.312,IBI)) IBCNTI=IBCNTI+1 F  S IBI=$O(^DPT(DFN,.312,IBI)) Q:'IBI  D
	.I '$D(ZTQUEUED) W:'(IBCNTPP#100) "."
	.S IBCDFND=$G(^DPT(DFN,.312,IBI,0))
	.S ^DPT("AB",+IBCDFND,DFN,IBI)=""
	.S ^DPT(DFN,.312,"B",+IBCDFND,IBI)=""
	.Q:$P(IBCDFND,U,18)
	.S IBCPOL=$$CHIP^IBCNSU(IBCDFND)
	.Q:'IBCPOL
	.Q:+IBCDFND'=+$G(^IBA(355.3,+IBCPOL,0))  ; patient ins. and policy must have same ins. company file.
	.S IBCNTPP=IBCNTPP+1
	.S DA=IBI,DA(1)=DFN,DIE="^DPT("_DFN_",.312,"
	.S DR="1.09////1;.18////"_IBCPOL
	.D ^DIE K DA,DR,DIE,DIC
	.Q
	S $P(^IBE(350.9,1,3),"^",18)=DT
	D NOW^%DTC S IBEPDT=%
	D BULL1^IB20PT61
	I '$D(ZTQUEUED) D
	.W !!,"<<< Health Insurance Policy information updated"
	.W !,"    there were ",IBCNTPP," Policies for ",IBCNT," Patients were updated"
	.W !,"    causing ",IBCNTP," Health Insurance Policies to be added"
	.W !,"    Finish Time: " S Y=IBEPDT D DT^DIQ
	Q
	;
	;
INPT	; -- load current inpatients into claims tracking
	W !!!,"<<< Load current inpatients into Claims Tracking"
	S ZTRTN="INPTDQ^IB20PT6",ZTDESC="IB - v2 CLAIMS TRACKING POST INIT UPDATE",ZTIO="" S:$G(IBFORCE) ZTDTH=$$15
	W ! D ^%ZTLOAD I '$D(ZTSK) D  Q:'IBOK
	.D MANUAL^IB20PT61
	.I 'IBOK,$P($G(^IBE(350.9,1,3)),"^",20)="" W !!,"You must run the v2.0 post init routine IB20PT6 to automatically add",!,"Current inpatient into Claims Tracking."
	I $D(ZTSK) W !,"    Claims Tracking update queued as task ",ZTSK K ZTSK Q
	;
INPTDQ	D NOW^%DTC S IBSTDT=%
	N WARD,DGPMDA,IBCNT,IB20
	S WARD="",DGPDMA=0,IBCNT=0,IB20=1
	F  S WARD=$O(^DGPM("CN",WARD)) Q:WARD=""  S DGPMDA=0 F  S DGPMDA=$O(^DGPM("CN",WARD,DGPMDA)) Q:'DGPMDA  D
	.S DGPMP=""
	.S DGPMA=$G(^DGPM(DGPMDA,0)) Q:DGPMA=""
	.S DFN=$P(DGPMA,"^",3) Q:'DFN
	.D INP^VADPT
	.K IBNEW D INP^IBTRKR
	.I $G(IBNEW) S IBCNT=IBCNT+1 I '$D(ZTQUEUED) W !,"    Patient ",$P(^DPT(DFN,0),U)," added to the Claims tracking module"
	;
	I '$D(ZTQUEUED) W !!,"<<< ",IBCNT," Patients added to the Claims Tracking Module"
	D NOW^%DTC S IBETDT=%
	D BULL3^IB20PT61
	S $P(^IBE(350.9,1,3),"^",20)=DT
	Q
	;
15()	; -- Add 15 minutes to now and return in $h format
	Q $P($H,",")_","_($P($H,",",2)+(15*60))

IB20PT61
IB20PT61	;ALB/AAS - Insurance post init stuff ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
399	; -- create new AE x-ref of file 399
	W !!!,"<<< Bill/Claims file Conversion."
	W !,"    Cross-reference Bill/Claims file by Primary Insurer"
	S ZTRTN="DQ399^IB20PT61",ZTDESC="IB - v2 BILL/CLAIMS FILE POST INIT UPDATE",ZTIO="" S:$G(IBFORCE) ZTDTH=$$15^IB20PT6
	W ! D ^%ZTLOAD I '$D(ZTSK) D  Q:'IBOK
	.D MANUAL
	.I 'IBOK,$P($G(^IBE(350.9,1,3)),"^",19)="" W !!,"You must run the v2.0 post init routine IB20PT6 before allowing users to",!,"print or modify Bill/Claims entries."
	I $D(ZTSK) W !,"    Bill/Claims file update queued as task ",ZTSK K ZTSK Q
	;
	N IBCNT,IBCNTD
DQ399	D ^IB20PT62,BULL2 ;transfer/convert bill claims file
	Q
	;
BULL1	; -- finish bulletin for patient file conversion
	S XMSUB="IB v2 PATIENT File Conversion Complete"
	S IBT(1)=" The Integrated Billing Version 2.0 conversion of the patient file"
	S IBT(2)=" completed.",IBT(2.5)=""
	S IBT(3)="   Started on: "_$$DAT1^IBOUTL(IBSPDT,"2P")
	S IBT(4)=" Completed on: "_$$DAT1^IBOUTL(IBEPDT,"2P")
	S IBT(5)=""
	S IBT(6)=" Total Patients Checked: "_$G(IBCNT)
	S IBT(7)=" Total Patients with Insurance Entries: "_$G(IBCNTI)
	S IBT(8)=" Total number of insurance policies: "_$G(IBCNTPP)
	S IBT(9)=" Total number of Group Plans created: "_$G(IBCNTP)
	D SEND^IBTRKR31
	K IBT,XMSUB
	Q
	;
BULL2	; -- finish bulletin for bill/claims conversion
	S XMSUB="IB v2 BILL/CLAIMS File Conversion Complete"
	S IBT(1)=" The Integrated Billing Version 2.0 conversion of the BILL/CLAIMS file"
	S IBT(2)=" completed."
	S IBT(2.1)=""
	S IBT(3)="   Started on: "_$$DAT1^IBOUTL(IBSCDT,"2P")
	S IBT(4)=" Completed on: "_$$DAT1^IBOUTL(IBECDT,"2P")
	S IBT(5)=""
	S IBT(6)=" Total Entries in Bill/Claims file: "_$G(IBCNT)
	S IBT(7)=" Total Bill/Claims Diagnosis Entries Created: "_$G(IBCNTD)
	D SEND^IBTRKR31
	K IBT,XMSUB
	Q
	;
BULL3	; -- finish bulletin for loading current inpatients
	S XMSUB="IB v2 Claims Tracking Update Complete"
	S IBT(1)=" The Integrated Billing Version 2.0 initial loading of current inpatients"
	S IBT(2)=" into the claims tracking module has completed.",IBT(2.5)=""
	S IBT(2.6)="  "_IBCNT_" Patients added to the Claims Tracking Module"
	S IBT(2.7)=""
	S IBT(3)="   Started on: "_$$DAT1^IBOUTL(IBSTDT,"2P")
	S IBT(4)=" Completed on: "_$$DAT1^IBOUTL(IBETDT,"2P")
	D SEND^IBTRKR31
	K IBT,XMSUB
	Q
	;
MANUAL	; -- ask if want to run manually
	N DIR,DIRUT,DUOUT,X,Y
	S IBOK=1
	W !!,"You did not select to QUEUE this portion of the IB v2 conversion",!
	S DIR(0)="Y",DIR("A")="OKAY TO RUN NOW"
	S DIR("?")="Enter 'YES' if you want to run this now directly on this device or 'NO' if you do not wish to run this part of the conversion now."
	D ^DIR
	S IBOK=+$G(Y)
	Q

IB20PT62
IB20PT62	;ALB/AAS - Insurance post init stuff ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	W:'$D(ZTQUEUED) !!,"    I'll write a dot for each 100 entries"
	;
	N IBTRNSF S IBTRNSF=0 I $O(^IBA(362.2,0)) S IBTRNSF=1 D DQ362
	;
DQ399	D NOW^%DTC S IBSCDT=%
	N IBCIFN
	W:'$D(ZTQUEUED) !!,"    Updating Bill/Claims file"
	S (IBCIFN,IBCNT,IBCNTD)=0
	F  S IBCIFN=$O(^DGCR(399,IBCIFN)) Q:'IBCIFN  D
	.I +$G(^DGCR(399,IBCIFN,"M")),$P($G(^(0)),"^",2) S ^DGCR(399,"AE",$P(^(0),"^",2),+^("M"),IBCIFN)=""
	.I +$P($G(^DGCR(399,IBCIFN,0)),U,13)=3 S ^DGCR(399,"AST",3,IBCIFN)=""
	.I '$G(IBTRNSF),$D(^DGCR(399,IBCIFN,"C")) D MVDX
	.I +$P($G(^DGCR(399,IBCIFN,0)),U,19)>1 D DXCPTCV
	.S IBCNT=$G(IBCNT)+1 I '$D(ZTQUEUED) W:'(IBCNT#100) "."
	S $P(^IBE(350.9,1,3),"^",19)=DT
	D NOW^%DTC S IBECDT=%
	I '$D(ZTQUEUED) W !,"    Completed!"
	Q
	;
DQ362	;transfer entries from 362.2 to 362.3
	N IBDIFN,IBD,IBCIFN,IBDX,IBP,IBDA,IBCNT
	I '$D(ZTQUEUED) W !!,"    Moving diagnosis to new file"
	S IBCNT=0,IBDIFN=0 F  S IBDIFN=$O(^IBA(362.2,IBDIFN)) Q:'IBDIFN  D
	.S IBD=$G(^IBA(362.2,IBDIFN,0))
	.S IBCIFN=+IBD,IBDX=+$P(IBD,U,2),IBP=$P(IBD,U,3)
	.I +IBCIFN,+IBDX D SETDX
	.S IBCNT=IBCNT+1 I '$D(ZTQUEUED),'(IBCNT#100) W "."
	S DIU="^IBA(362.2,",DIU(0)="D" D EN^DIU2 K DIU
	I '$D(ZTQUEUED) W " Completed!"
	Q
	;
DXCPTCV	;transfer/convert associated dx (399,304,7->399,304,10)
	N IBCP,IBDX,IBDXP
	L +^DGCR(399,IBCIFN)
	S IBCP=0 F  S IBCP=$O(^DGCR(399,IBCIFN,"CP",IBCP)) Q:'IBCP  D
	. S IBDX=+$P($G(^DGCR(399,IBCIFN,"CP",IBCP,0)),U,8) Q:'IBDX
	. S IBDXP=$O(^IBA(362.3,"AIFN"_IBCIFN,IBDX,0)) Q:'IBDXP
	. S $P(^DGCR(399,IBCIFN,"CP",IBCP,0),U,11)=IBDXP
	L -^DGCR(399,IBCIFN)
	Q
	;
MVDX	; -- move procedures from file 399 fields 64-68 to new file 362.2
	;
	N IBC,IBDA,IBDX,IBP
	S IBC=$G(^DGCR(399,IBCIFN,"C"))
	F IBP=14:1:18 S IBDX=$P(IBC,"^",IBP) I IBDX D SETDX
	Q
	;
SETDX	Q:$D(^IBA(362.3,"AIFN"_IBCIFN,IBDX))  ; same diag for a bill not allowed
	L +^IBA(362.3,0):10 Q:'$T
	S IBDA=$P($G(^IBA(362.3,0)),"^",3)+1
	L -^IBA(362.3,0)
	F IBDA=IBDA:1 I '$D(^IBA(362.3,IBDA,0)) L +^IBA(362.3,IBDA) Q
	S ^IBA(362.3,IBDA,0)=IBDX_"^"_IBCIFN_"^"_IBP
	S ^IBA(362.3,"B",IBDX,IBDA)=""
	S ^IBA(362.3,"AIFN"_IBCIFN,IBDX,IBDA)=""
	I +IBP S ^IBA(362.3,"AO",IBCIFN,IBP,IBDA)=""
	L -^IBA(362.3,IBDA)
	L +^IBA(362.3,0):10
	S $P(^IBA(362.3,0),"^",4)=$P(^IBA(362.3,0),"^",3)+1
	S $P(^IBA(362.3,0),"^",3)=IBDA
	L -^IBA(362.3,0)
	S IBCNTD=$G(IBCNTD)+1
	Q

IB20PT7
IB20PT7	;ALB/ARH - ADD NEW ENTRIES TO TABLE FILES ; 12/20/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	D DS ;     Add new discharge statuses for bills
	D RT ;     Add new Rate Types to file #399.3 for CHAMPVA
	D RVC ;    Add new revenue codes to file #399.2
	D OSC ;    Adding new Occurrence Span Codes
	D VC ;     Adding new Value Codes
	Q
	;
	;
DS	; Add new discharge statuses for bills
	W !!,">>> Adding new discharge status for bills..."
	F IBI=1:1 S IBX=$P($T(DSF+IBI),";;",2,999) Q:IBX=""  D
	. S IBJ=0 F  S IBJ=$O(^DGCR(399.1,IBJ)) Q:'IBJ  S IBY=$G(^DGCR(399.1,IBJ,0)) I $P(IBX,U,1)=$P(IBY,U,1),$P(IBX,U,2)=$P(IBY,U,2),$P(IBY,U,6) S IBY=1 Q
	. Q:IBY  K DA,DO S DIC="^DGCR(399.1,",DIC(0)="L",X=$P(IBX,U,1) D FILE^DICN K DA,DO Q:Y<0!('$P(Y,U,3))
	. S DA=+Y,DIE=DIC,DR=".02////"_$P(IBX,U,2)_";.13////1" D ^DIE
	K DIC,DIE,DA,DR,Y
	Q
	;
RT	; Add new Rate Types to file #399.3 for CHAMPVA
	W !!,">>> Adding new entries to the Rate Type File - CHAMPVA ..."
	F IBI=1:1 S IBX=$P($T(RTF+IBI),";;",2,999) Q:IBX=""  D
	. S IBY=$E($P(IBX,U,1),1,30) Q:$D(^DGCR(399.3,"B",IBY))
	. K DD,DO S DIC="^DGCR(399.3,",DIC(0)="L",X=IBY D FILE^DICN K DA,DO Q:Y<0
	. S DA=+Y,DIE=DIC,DR=".02////"_$P(IBX,U,2)_";.03////"_$P(IBX,U,3)_";.04////"_$P(IBX,U,4)_";.05////"_$P(IBX,U,5)_";.06////"_$P(IBX,U,6)_";.07////"_$P(IBX,U,7)_";.08////"_$P(IBX,U,8)_";.09////"_$P(IBX,U,9) D ^DIE
	K DIC,DIE,DA,DR,Y
	Q
	;
RVC	; Add new revenue codes to file #399.2
	W !!,">>> Adding new revenue codes..."
	F IBI=1:1 S IBX=$P($T(RVCF+IBI),";;",2,999) Q:IBX=""  D
	. S IBY=$P(IBX,U,1),IBZ=$G(^DGCR(399.2,+IBY,0)) Q:(+IBY'=+IBZ)!($P(IBZ,U,2)'="*RESERVED")
	. S DA=+IBY,DIE="^DGCR(399.2,",DR="1////"_$P(IBX,U,2)_";3////"_$P(IBX,U,4) D ^DIE
	K DIC,DIE,DA,DR,Y
	Q
	;
OSC	; Adding new Occurrence Span Codes
	W !!,">>> Adding Occurrence Span Codes..."
	F IBI=1:1 S IBX=$P($T(OSCF+IBI),";;",2,999) Q:IBX=""  D
	. S IBJ=0 F  S IBJ=$O(^DGCR(399.1,IBJ)) Q:'IBJ  S IBY=$G(^DGCR(399.1,IBJ,0)) I $P(IBX,U,1)=$P(IBY,U,1),$P(IBX,U,2)=$P(IBY,U,2),$P(IBY,U,10) S IBY=1 Q
	. Q:IBY  K DA,DO S DIC="^DGCR(399.1,",DIC(0)="L",X=$P(IBX,U,1) D FILE^DICN K DA,DO Q:Y<0!('$P(Y,U,3))
	. S DA=+Y,DIE=DIC,DR=".02////"_$P(IBX,U,2)_";.11////1;.17////1" D ^DIE
	K DIC,DIE,DA,DR,Y
	Q
	;
VC	; Adding new Value Codes
	W !!,">>> Adding Value Codes..."
	F IBI=1:1 S IBX=$P($T(VCF+IBI),";;",2,999) Q:IBX=""  D
	. S IBJ=0 F  S IBJ=$O(^DGCR(399.1,IBJ)) Q:'IBJ  S IBY=$G(^DGCR(399.1,IBJ,0)) I $P(IBX,U,1)=$P(IBY,U,1),$P(IBX,U,2)=$P(IBY,U,2),$P(IBY,U,11) S IBY=1 Q
	. Q:IBY  K DA,DO S DIC="^DGCR(399.1,",DIC(0)="L",X=$P(IBX,U,1) D FILE^DICN K DA,DO Q:Y<0!('$P(Y,U,3))
	. S DA=+Y,DIE=DIC,DR=".02////"_$P(IBX,U,2)_";.18////1;.19////"_$P(IBX,U,3) D ^DIE
	K DIC,DIE,DA,DR,Y
	Q
	;
	;
DSF	; - new discharge status, 399.1
	;;DISCHARGED TO HOME UNDER CARE OF A HOME IV PROVIDER^08
	;
	;
RTF	; - new rate type entries
	;;CHAMPVA REIMB. INS.^REIMBURSABLE INS.^1^REIM INS^1^^i^1^1
	;;CHAMPVA^CHAMPVA^1^CHAMPVA^1^^i^1^1
	;
	;
RVCF	; - new revenue codes
	;;294^MED EQUIP/SUPPLIES/DRUGS^^SUPPLIES/DRUGS FOR DME EFFECTIVENESS HOME-HEALTH AGENCY ONLY
	;;404^PET SCAN^^POSITRON EMMISSION TOMOGROPHY
	;;547^AMBUL/PHARMACY^^PHARMACY
	;;548^AMBUL/TELEPHONIC EKG^^TELEPHONE TRANSMISSION EKG
	;;636^DRUGS/DETAIL CODE^^DRUGS REQUIRING DETAILED CODING
	;;761^TREATMENT RM^^TREATMENT ROOM
	;;762^OBSERVATION RM^^OBSERVATION ROOM
	;;882^HOME DIALYSIS AID VISIT^^HOME DIALYSIS AID VISIT
	;;947^CMPLX MED EQUIP-ANC^^COMPLEX MEDICAL EQUIPMENT - ANCILLARY
	;
	;
OSCF	; - add occurrence span codes
	;;QUALIFYING STAY DATES FOR SNF USE ONLY^70
	;;PRIOR STAY DATES^71
	;;FIRST/LAST VISIT^72
	;;BENEFIT ELIGIBILITY PERIOD^73
	;;NONCOVERED LEVEL OF CARE^74
	;;SNF LEVEL OF CARE^75
	;;PATIENT LIABILITY^76
	;;PROVIDER LIABILITY PERIOD^77
	;;SNF PRIOR STAY DATES^78
	;;PAYER CODE^79
	;;PRO/UR APPROVED STAY DATES^M0
	;
	;
VCF	; - add value codes
	;;INPATIENT PROFESSIONAL COMPONENT CHARGES, COMBINED BILLED^04
	;;NO FAULT, INCLUDING AUTO/OTHER^14^1
	;;WORKER'S COMPENSATION^15
	;;ACCIDENT HOUR^45
	;

IB20PT71
IB20PT71	;ALB/CPM - REMOVE OPTIONS FROM MENUS ; 11-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	D DEL ;    Delete 'IB UB-82 TEST PATTERN PRINT' from output menu
	D NEWF ;   Delete 'New Features of Integrated Billing' from menus
	D NEWCR ;  Add new cancellation reasons into file #350.3
	Q
	;
	;
DEL	; Delete 'IB UB-82 TEST PATTERN PRINT' from 'IB OUTPUT PATIENT REPORT MENU'
	S Y=$O(^DIC(19,"B","IB OUTPUT PATIENT REPORT MENU",0)) Q:Y=""
	S X=$O(^DIC(19,"B","IB UB-82 TEST PATTERN PRINT",0)) Q:X=""
	S X=$O(^DIC(19,+Y,10,"B",X,0)) Q:'X
	S DA(1)=+Y,DA=+X,DIK="^DIC(19,"_+Y_",10," D ^DIK K DA,DIK
	W !!,">>> Deleted IB UB-82 TEST PATTERN PRINT from IB OUTPUT PATIENT REPORT MENU..."
	Q
	;
NEWF	; Delete 'New Features of Integrated Billing' from menus
	S IBX=$O(^DIC(19,"B","IB NEW FEATURES 1.5",0)) I 'IBX G NEWFQ
	S IBN=0 F  S IBN=$O(^DIC(19,"AD",IBX,IBN)) Q:'IBN  D
	.S IBNAME=$G(^DIC(19,IBN,0)) Q:IBNAME=""
	.S IBY=0 F  S IBY=$O(^DIC(19,"AD",IBX,IBN,IBY)) Q:'IBY  D
	..S DA(1)=IBN,DA=IBY,DIK="^DIC(19,"_IBN_",10," D ^DIK K DA,DIK
	..W !!,">>> Deleted 'IB NEW FEATURES 1.5' from '",$P(IBNAME,"^"),"'"
NEWFQ	K DA,DIK,IBN,IBNAME,IBX,IBY
	Q
	;
NEWCR	; Add new cancellation reasons into file #350.3
	W !!,">>> Adding new cancellation reasons into file #350.3..."
	F IBI=1:1 S IBCR=$P($T(CRES+IBI),";;",2) Q:IBCR="QUIT"  D
	.S X=$P(IBCR,"^")
	.I $O(^IBE(350.3,"B",X,0)) W !," >> '",X,"' is already on file..." Q
	.K DD,DO S DIC="^IBE(350.3,",DIC(0)="" D FILE^DICN Q:Y<0
	.S DIE=DIC,DA=+Y,DR=".02////"_$P(IBCR,"^",2)_";.03////"_$P(IBCR,"^",3) D ^DIE
	.W !," >> '",$P(IBCR,"^"),"' has been filed..."
	K DA,DIC,DIE,DR,IBI,IBCR,X,Y
	Q
	;
	;
CRES	; Cancellation Reasons to add into file #350.3
	;;MT CATEGORY CHANGED FROM C^NOT C^2
	;;COMP & PENSION VISIT RECORDED^CNP VST^2
	;;CHAMPVA ADMISSION DELETED^CVA DEL^2
	;;RECD INPATIENT CARE^INP CARE^2
	;;CHECK OUT DELETED^CO DEL^2
	;;CLASSIFICATION CHANGED^CLS CHNG^2
	;;RESEARCH VISIT/ADMISSION^RES VST^2
	;;SERVICE CONNECTED VISIT/ADM^SER CONN^2
	;;HARDSHIP GRANTED^HRDSHP^2
	;;ADJUDICATED AS CATEGORY A^ADJ A^2
	;;TREATED AT OTHER FACILITY^OTH FAC^2
	;;AGENT ORANGE RELATED VISIT^AO VST^2
	;;IONIZING RAD RELATED VISIT^IO VST^2
	;;ENV CONTAMINANT RELATED VISIT^EC VST^2
	;;CLASS II DENTAL VISIT^DENTL^2
	;;QUIT

IB20PT8
IB20PT8	;ALB/MJK/CPM - CONDITIONALLY EXPORT ROUTINES ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
EXPORT	; Conditionally installs other package routines
	N DIE,DIF,X,XCN,XCNP,IBTO,IBFR,IBI,IBX
	W !!,">>> Loading routines of other packages, if appropriate..."
	F IBI=1:1 S IBX=$T(ROU+IBI) Q:$P(IBX,";",3)="$END"  D
	.S IBTO=$P(IBX,";",3),IBFR=$P(IBX,";",4) D LOAD(IBTO) D
	..S X=$G(^UTILITY("IBLOAD",$J,2,0)) X $P(IBX,";",5)
	..I $T D INSTALL(IBTO,IBFR)
	K ^UTILITY("IBLOAD",$J)
EXPORTQ	Q
	;
LOAD(IBTO)	; -- load current routine
	K ^UTILITY("IBLOAD",$J)
	S X=IBTO X ^%ZOSF("TEST")
	I $T S XCNP=0,DIF="^UTILITY(""IBLOAD"",$J," X ^%ZOSF("LOAD")
	Q
	;
INSTALL(IBTO,IBFR)	; -- install routine
	K ^UTILITY("IBLOAD",$J)
	W !," >> Installing ",IBTO," routine from ",IBFR," routine...  "
	S X=IBFR,XCNP=0,DIF="^UTILITY(""IBLOAD"",$J," X ^%ZOSF("LOAD")
	S X=IBTO,XCN=3,DIE="^UTILITY(""IBLOAD"",$J," X ^%ZOSF("SAVE")
	K ^UTILITY("IBLOAD",$J)
	W IBTO," filed."
	Q
	;
ROU	; -- routines to export
	;;DGBLRV;IB20PT81;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPTF;IB20PT82;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPTTS;IB20PT83;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPTTS1;IB20PT84;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPTTS3;IB20PT85;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPTUTL;IB20PT86;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGRPDB;IB20PT87;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DG3PR0;IB20PT88;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DG3PR1;IB20PT89;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DG3PR2;IB20PT8A;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;DGPMVBUR;IB20PT8B;I $S(X="":1,1:X["5.3"),X'["*26",X'[",26"
	;;FBUINS;IB20PT8C;I +$G(^DD(161.4,0,"VR"))=3,X'["*5",X'[",5"
	;;$END
	;
	;    piece 3 --> routine to replace
	;      "   4 --> post-init routine holding new verion
	;      "   5 --> 'ok to replace' IF test
	;                  - X will be defined to be the 2nd line of
	;                    current version
	;

IB20PT81
IB20PT81	;ALB/CPM - EXPORT ROUTINE 'DGBLRV' ; 24-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGBLRV	;ALB/BOK - PATIENT ADMISSION FORM/BILL REVIEW ; 18 SEP 86  11:00
	;;5.3;Registration;**26**;Aug 13, 1993
	;
	D LO^DGUTL K ^UTILITY($J)
START	S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G QUIT:Y'>0 S DFN=+Y I '$D(^DGPM("ATID1",DFN)) W !,"No admissions on file, will check scheduled admissions",! G SCHAD
	S DIC("S")="I $P(^(0),U,2)=1" D EN^DGPMUTL K DIC I Y'>0 W !,"Since an admission was not chosen, scheduled admissions for this patient will be checked",! G SCHAD
	S DGPMDA=+Y G IO
SCHAD	I '$D(^DGS(41.1,"B",DFN)) W !,"No scheduled admissions on file" G QUIT
	S DGPMDA=0
IO	K DIS(0) S DGPGM="RET^DGBLRV",DGVAR="DFN^DGPMDA" W !!,"This report requires 132 column output",! D ZIS^DGUTQ G QUIT:POP U IO S X=132 X ^%ZOSF("RM")
RET	S:'$D(DGPMDA) DGPMDA=0 K DGADT,DGADX,DGINAD,DGSDT,DGSDX,I S DGINFO=^DPT(DFN,0) D PID^VADPT6
	I DGPMDA S DGI=$S($D(^DGPM(DGPMDA,0)):^(0),1:"") Q:DGI']""  S Y=$P(DGI,"^",1) D D^DIQ S DGADT=Y,DGADX=$P(DGI,"^",10),DGWD=$P(DGI,"^",6) G INS
	S DGI=$O(^DGS(41.1,"B",DFN,0)),DGI=^DGS(41.1,DGI,0),DGSDT=$P(DGI,U,2) S Y=DGSDT D D^DIQ S DGSDT=Y,DGSDX=$P(DGI,U,4),DGWD=$P(DGI,U,8)
	;
INS	; -- new insurance logic
	N DGIBINS,DGIBDT
	S DGIBDT=$S($D(DGPMDA):+$G(^DGPM(DGPMDA,0)),$G(DGSDT):DGSDT,1:DT)
	D ALL^IBCNS1(DFN,"DGIBINS",2,DGIBDT)
	S P=1
	I $G(DGIBINS(0)) F I=0:0 S I=$O(DGIBINS(I)) Q:'I  D
	.S DGINS=$G(DGIBINS(I,0)) I $P(DGINS,U,4)>DT!($P(DGINS,U,4)="") K DGINAD D:DGI ADDR S I(P)=+DGINS_U_$P(DGINS,U,2)_U_$P(DGINS,U,3)_U_$P(DGINS,U,5)_U_$S($D(DGINAD):DGINAD,1:"NO ADDRESS ON FILE"),P=P+1
	;
PRT	K DIC S DIC(0)="M",X="DGBILLREVIEW",DIC="^DIC(47," D ^DIC G QUIT:Y'>0 S DGY=+Y I '$D(DIS(0)) I $$FIRST^DGUTL G Q
	S P=0 F DGLN=0:0 S DGLN=$O(^DIC(47,+DGY,1,DGLN)) Q:'DGLN  S J=^(DGLN,0),X1="" W ! F K=1:1 W $E($P(J,"{}",K),$S(K=1:1,X1']"":1,1:$L(X)+1),999) S X1=$P(J,"{",K+1),P=$S(DGLN<9:1,DGLN<14:2,1:3) Q:X1']""  D CKLN
Q	W ! Q:$D(DIS(0))  I '$D(DGOPT) D CLOSE^DGUTQ
QUIT	D ENDREP^DGUTL I '$D(DGPMA) K DFN,DGPMDA
	K DGADT,DGADX,DGI,DGIMULT,DGINAD,DGINFO,DGINS,DGLN,DGPGM,DGSDT,DGSDX,DGVAR,DGWD,DGY,DIC,I,J,K,P,X,X1,L,VA,Y,POP Q
	Q
	;
CKLN	S L=$S(DGLN>9&(DGLN<14):(DGLN-5),DGLN>14&(DGLN<19):(DGLN-10),1:DGLN)_K D @L Q
ADDR	S DGIMULT=$S($D(^DIC(36,+DGINS,.11)):^(.11),1:"") Q:DGIMULT=""
	S DGINAD=$S($P(DGIMULT,U,1)]"":$P(DGIMULT,U,1)_", ",1:"")_$S($P(DGIMULT,U,2)]"":$P(DGIMULT,U,2)_", ",1:"")_$S($P(DGIMULT,U,3)]"":$P(DGIMULT,U,3)_", ",1:"")_$S($P(DGIMULT,U,4)]"":$P(DGIMULT,U,4)_", ",1:"")
	S DGINAD=DGINAD_$S('$D(^DIC(5,+$P(DGIMULT,U,5),0)):"",$P(^(0),U,1)]"":$P(^(0),U,1)_", ",1:"")_$S($L($P(DGIMULT,U,6))>5:$E($P(DGIMULT,U,6),1,5)_"-"_$E($P(DGIMULT,U,6),6,9),1:$P(DGIMULT,U,6)) Q
21	S Y=DT D DT^DIQ Q
31	W $P(DGINFO,U,1) Q
32	W VA("PID") Q
51	W $S('$D(I(P)):"",$D(^DIC(36,+I(P),0)):$P(^(0),U),1:"") Q
61	W $S($D(I(P)):$P(I(P),U,5),1:"") Q
71	W $S('$D(I(P)):"",$D(^DIC(36,$P(I(P),"^",K),.13)):$P(^(.13),"^",1),1:"") Q
72	W $S($D(I(P)):$P(I(P),U,2),1:"") Q
73	W $S($D(I(P)):$P(I(P),U,3),1:"") Q
81	W $S('$D(I(P)):"",$D(^DIC(36,$P(I(P),"^",1),.13)):$P(^(.13),"^",3),1:"") Q
82	W $S('$D(I(P)):"",$D(^DIC(36,$P(I(P),"^",1),.13)):$P(^(.13),"^",2),1:"") Q
201	W $S($D(DGADX):DGADX,$D(DGSDX):DGSDX,1:"") Q
202	S X=$S(DGWD:DGWD,1:"-") W $S($D(^DIC(42,X,0)):$P(^(0),U,1),1:"") Q
211	W $S($D(DGSDT):DGSDT,1:"") Q
212	W $S($D(DGADT):DGADT,1:"") Q
	;
EN1	S DIC="^DGPM(",BY="@.01",L=0,FLDS="[DGPMBLRV]",DHD="@"
	S DIS(0)="S DFN=$P(^DGPM(D0,0),U,3) I $P(^(0),""^"",2)=1,$D(^DPT(DFN,""VET"")),($P(^(""VET""),""^"",1)=""Y""),$O(^DPT(DFN,.312,0))"
	D EN1^DIP,QUIT K BY,DHD,DIC,DIS,FLDS,I Q
	;
CK	;check logic to see if 3rd party review is asked
	;***if this logic is altered, also change line EN1+1 in DIS(0)***
	I $S('$O(^DPT(DFN,.312,0)):1,'$D(^DPT(DFN,"VET")):1,^("VET")'="Y":1,1:0) Q
ASK	;print TPR?
	W !,"PRINT THIRD PARTY REVIEW" S %=$S($D(DGDEF):DGDEF,1:2) D YN^DICN
	I %=2!(%<0) Q
	I '% W !!,"CHOOSE FROM",!?4,"YES - If you wish to print Third Party Review Sheet",!?4,"NO  - If you don't want to print Third Party Review Sheet",! G ASK
	Q:$D(DGNOQ)  ;quit if from 10/10 w/out registration
	K DGPTPR S DGPGM="RET^DGBLRV",DGVAR="DFN"_$S($D(DGPMDA):"^DGPMDA",1:"") K DIS D ZIS^DGUTQ I 'POP U IO D RET^DGBLRV
	K DGPGM,DGVAR Q

IB20PT82
IB20PT82	;ALB/CPM - EXPORT ROUTINE 'DGPTF' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPTF	;ALB/JDS/AS - PTF LOAD/EDIT DRIVER ; 12/13/89 @8
	;;5.3;Registration;**26**;Aug 13, 1993
	;
	D LO^DGUTL
	I $D(^DISV(DUZ,"^DPT(")),$D(^("^DGPT(")) S A=+^("^DGPT("),B=+^("^DPT(") I $D(^DGPT(A,0)),$D(^DPT(B,0)) S:(+^DGPT(A,0)'=B&$D(^DGPT("B",B))) ^DISV(DUZ,"^DGPT(")=""
ASK	W !! K DIC S DIC="^DGPT(",DIC(0)="EQMZA",DGPR=0,DIC("S")="I '$P(^DGPT(+Y,0),U,6)!($P(^(0),U,6)=1),$P(^(0),U,11)=1"
	D ^DIC G Q1:Y'>0 S PTF=+Y,DGREL=$S($D(^XUSEC("DG PTFREL",DUZ)):1,1:0)
	I '$D(^DGPT(PTF,"M",0))#2 S ^(0)="^45.02^^"
	K DIC S DFN=+Y(0),DGADM=+$P(Y(0),U,2),^DISV(DUZ,"^DPT(")=DFN,DGST=+$P(Y(0),U,6)
	N DGPMCA,DGPMAN D PM^DGPTUTL
	D:DGST=0 MT^DGPTUTL,INCOME^DGPTUTL1
	I DGST I 'DGREL!($D(DGQWK))!(DGST>1) W:$X>60 "   ???--Already ",$S(DGST=1:"Closed",DGST=2:"Released",1:"Transmitted") G ASK
	;
EN1	;
	K DGPTFE S DGPTFE=$P(^DGPT(PTF,0),"^",4)
	I 'DGPTFE,'DGST G UP:$P(DGPMAN,"^",16)'=PTF D:'$P(^DGPT(PTF,0),"^",5) SUF D LE^DGPTTS,DC
	I $D(DGQWK) D ^DGPTFQWK,Q1 S DGQWK=1 G DGPTF
	;
GETD	;
	K A
	I $P(^DGPT(PTF,0),U,11)=1 D CEN^DGPTC1
	F I=0,.521,.11,.52,.321,.32,57,.3 S A(I)="" S:$D(^DPT(DFN,I))&('DGST) A(I)=^(I) I DGST S:$D(^DGP(45.84,PTF,$S('I:10,1:I))) A(I)=^($S('I:10,1:I))
	K B F I=0,101,70 S B(I)="" S:$D(^DGPT(PTF,I)) B(I)=^(I)
	S DGDD=+B(70),DGFC=+$P(B(0),U,3)
	S Y=DGDD D FMT^DGPTUTL
	S Y=DGADM D D^DGPTUTL S DGAD=Y,HEAD="Name: "_$P(A(0),U,1)_"  SSN: "_$P(A(0),U,9)_" Dt of Adm: "_DGAD
	S DGN=$S(DGST!DGPR:1,1:0)
	I DGPR S (DGST,DGPTFE)=1 G FAC^DGPTF1
	I DGPTFE,'DGST K DR S DIE="^DGPT(",DA=PTF,DR="2" D ^DIE K DR G Q:$D(Y) S DGADM=$P(^DGPT(PTF,0),U,2),^DISV(DUZ,"PTFAD",DFN)=DGADM,Y=DGADM D D^DGPTUTL S HEAD=$P(HEAD,DGAD,1)_Y
	G ^DGPTF1
	;
Q	I '$P(^DGPT(PTF,0),"^",4),'$P(^(0),U,6) W !,"  Updating TRANSFER DRGs" S DGADM=$P(^DGPT(PTF,0),U,2) D SUDO1^DGPTSUDO
	D Q1
	I $D(DGADPR)!($D(DGPTOUT)) K DGPTOUT Q
	G DGPTF
	;
Q1	; -- housekeeping
	I $D(IOM) S X=IOM X ^%ZOSF("RM")
	D KVAR^DGPTUTL1,KVAR^DGPTC1
	Q
	;
SUF	I $D(^DIC(42,+$P(DGPMAN,U,6),0)) S X=$P(^(0),U,3),X=$S(X="":"",X="D":"BU",X="NH":"9AA",1:"") Q:X=""  S $P(^DGPT(PTF,0),U,5)=X
	Q
ORDER	; -- order mvt ; I1 := #mvts+1 ; M() := mvt array
	N DGRT S DGRT=$S(I1<25:"MT",1:"^UTILITY(""DGPTMT"",$J)") K @DGRT
	F I=0:0 S I=$O(M(I)) Q:'I  S NU=+$P(M(I),U,10),NU=$S('NU:9999999+I,1:NU),NU=$S($D(@DGRT@(NU)):NU+(I*.1),1:NU) S @DGRT@(NU,I)=M(I)
	S K=0 F I=0:0 S I=$O(@DGRT@(I)) Q:'I  S K=K+1,J=$O(@DGRT@(I,0)) S M(K)=@DGRT@(I,J)
	K @DGRT Q
	;
ADM	S DFN=+^DGPT(DA,0),%=$O(^("M","AM",0)) I %<X&(%>0) K X W !,"Not after first movement"
	Q:'$D(X)  I $D(^DGPT("AAD",DFN,X))&($P(^DGPT(DA,0),U,2)'=X) K X W !,"There is already a PTF entry at that time"
	Q
	;
WR	Q:'$D(^(0))  S DGNODE=^(0),DGADM=$P(DGNODE,U,2) W "  Admitted: ",$E(DGADM,4,5)_"-"_$E(DGADM,6,7)_"-",$E(DGADM,2,3)," "
	F DGZ=6,4 S %=";"_$S($D(^DD(45,DGZ,0)):$P(^(0),U,3),1:"") W $P($P(%,";"_$P(DGNODE,U,DGZ)_":",2),";",1)_" "
	K DGNODE,DGZ Q
	;
DC	S DGPDN=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):^(0),1:"")
	S DGDC=+DGPDN,DG72=$S($D(^DG(405.2,+$P(DGPDN,"^",18),0)):$P(^(0),"^",8),1:0),DGTY=$S(DGDC:1,1:"")
	I DGDC F I=0:0 S I=$O(^DGPM("APMV",DFN,DGPMCA,I)) Q:I'>0  I $D(^DGPM(+$O(^(I,0)),0)),$P(^(0),"^",2)=2 S J=U_$P(^(0),"^",18)_U,DGTY=$S("^43^44^13^45^"[J:4,"^1^"[J:2,"^2^3^"[J:3,1:1) Q
	S X=$S($D(^DGPT(PTF,70)):^(70),1:"")
	S DR="70///"_$S(DGDC:"/"_DGDC,'X:"",1:"@")_$S(DG72:";72////"_DG72,1:"")_";72.1///"_$S(DGTY:"/"_DGTY,'$P(X,"^",14):"",1:"@"),DIE="^DGPT(",DA=PTF D ^DIE
	I DGDC>DT,$P(DGPDN,"^",18)=42 W:'$D(ZTQUEUED) !,"Discharge 'While ASIH' is in the future."
	K DG72,DGTY,DGPDN Q
	;
UP	S DIE="^DGPT(",DR="4///F",DA=PTF D ^DIE W !,"Pointer from Patient file is incorrect. Record changed to Fee Basis",! S DGPTFE=1 G GETD

IB20PT83
IB20PT83	;ALB/CPM - EXPORT ROUTINE 'DGPTTS' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPTTS	;ALB/AS - UPDATE FACILITY TREATING SPECIALTY/501 MOVEMENTS IN PTF ; 1/30/90 @12
	;;5.3;Registration;**26**;Aug 13, 1993
	;needs to be done - OERR link
	;
EV	;entry point from event driver
	D EV^DGPTTS0
	Q
	;
DEL	;facility treating specialty has been deleted from ^DGPM
	S DGPTFP=^UTILITY("DGPM",$J,6,DGMV,"PTFP")
	G DEL1:'$D(^DGPT(PTF,"M",+$P(DGPTFP,"^",2),0))
	K DA S DGREC=^(0),DGEX=$S($D(^(300)):^(300),1:""),DA=$P(DGPTFP,"^",2),DA(1)=PTF,DIK="^DGPT("_DA(1)_",""M""," D ^DIK K DA
	S DGMSG="" F X=5:1:15 S:X'=10 DGMSG=DGMSG_$S($D(^ICD9(+$P(DGREC,U,X),0)):$P(^(0),U,1)_", ",1:"")
	G DEL1:DGMSG']"" S ^UTILITY($J,"DEL",$P(DGPTFP,"^",2))=DGMSG
	;-- save expanded codes 
	S DG1=""
	I DGEX]"" F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DG1,U,X)=$P(DGEX,U,X)
	S:DG1]"" ^UTILITY($J,300,$P(DGPTFP,U,2))=DG1
	K DGI
	S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
	S DGMSG1="501 Movement Deletion" D MSG^DGPTMSG1
	;
DEL1	S X=^DPT(DFN,0),DGMSG="A transfer between treating specialties for "_$P(X,U,1)_" ("_$P(X,U,9)_") on "_$E(+DGMVP,4,5)_"/"_$E(+DGMVP,6,7)_"/"_$E(+DGMVP,2,3)_" was deleted by "_$P(^VA(200,+DUZ,0),U)_".  Please verify PTF #"_PTF_"."
	S DGMSG1="Facility Treating Specialty Deletion" D MSG^DGPTMSG1
	;
	S DR="" I $P(DGPTFP,"^",3)=1 S DGREC=^DGPT(PTF,"M",1,0) F X=5:1:15 I X'=10 S:$P(DGREC,U,X) DR=DR_X_"///@;"
	I DR]"" S DA(1)=PTF,DIE="^DGPT("_DA(1)_",""M"",",DA=1 D ^DIE
	;-- clean up expanded code data
	S DR="" I $P(DGPTFP,U,3)=1,$D(^DGPT(PTF,"M",1,300)) S DGREC=^(300) F X=2:1:7 S:$P(DGREC,U,X) DR=DR_"300.0"_X_"///@;"
	I DR]"" S DA=1,DA(1)=PTF D ^DIE
	K DGPTFP,DGREC,DA,DR,DIE,Y,X,DGEX Q
	;
LE	;entry point for PTF record update
	W:'$D(ZTQUEUED) !,"Updating PTF Record #",PTF,"..." K ^UTILITY($J,"T")
	S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,0)),DGDT=$S($D(^DGPM(+$P(DGPMAN,"^",17),0)):+^(0),1:"")
	D NOTS:'DGPREV
	I DGPREV S:DGDT T(DGDT)="" D ^DGPTTS1,VARS^DGPTSUDO
	K DGDR,L,MN,DIE,DIC,DIS,D,J,ADM,%DT,DR,I1,LL,NOW,T,TRN,ZTSK,L1,L2,T1,T2,TD,TDD,I,PTN,NTR,DA,NX,NXX,PR,DGTNX,DGTEMP,DGTPR,LOL,LOP,Z,Y,A,B,C,DGAD,DGDEL,X1,X2,^UTILITY($J,"T"),DGTR,DGREC,DGDT1,DGTLOS
	F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) D BS^DGPTFM6 S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///"_DGMOVM D ^DIE
	D EN^DGPTTS3 W:'$D(ZTQUEUED) "completed."
Q	K DGDT,DA,DGP0,DGMSG,DGPREV,DGREC,DGMOVM,DIC,DIE,DR,V,X,Y Q
	;
NTR	S DGMSG="A Transfer on "_$E(+DGMVA,4,5)_"/"_$E(+DGMVA,6,7)_"/"_$E(+DGMVA,2,3)_" was entered before the latest transfer.  Please verify PTF #"_PTF_"."
	S DGMSG1="New Facility Treating Specialty" D MSG^DGPTMSG1
	Q
	;
NOTS	;
	S DIE="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=1,DR="2///@" D ^DIE
	F DA=0:0 S DA=$O(^DGPT(PTF,"P",DA)) Q:DA'>0  I $D(^DGPT(PTF,"P",DA,0)) S DIE="^DGPT("_PTF_",""P"",",DA(1)=PTF,DR="1///@" D ^DIE
	Q
	;
DGDT	; -- get first ts before dc date
	N X S X=$P(9999999.999999-DGDT,".")
	F DGPREV=0:0 S DGPREV=+$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:$P(DGPREV,".")'=X
	Q
	;
CA	; -- determine CA info
	S DGPMCA=$S($P(DGPMP,"^",14):$P(DGPMP,"^",14),1:$P(DGPMA,"^",14))
	S DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:""),DGMVT=$S($P(DGPMP,"^",2):$P(DGPMP,"^",2),1:$P(DGPMA,"^",2)),PTF=$P(DGPMAN,"^",16),DGADM=+DGPMAN
	Q

IB20PT84
IB20PT84	;ALB/CPM - EXPORT ROUTINE 'DGPTTS1' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPTTS1	;ALB/AS - FACILITY TREATING SPECIALTY AND 501 MOVEMENTS, cont. ; 11/28/89 @12
	;;5.3;Registration;**26**;Aug 13, 1993
	;
	;build DGA array w/patient's last treat spec of the day as of 11:59 pm
	;
LOOP	;
	S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV))
	F DGNEXT=DGNEXT:0 Q:($P(DGPREV,".")'=$P(DGNEXT,"."))!('DGNEXT)  S DGNEXT=$O(^DGPM("ATS",DFN,DGPMCA,DGNEXT))
	S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),DGA(9999999.999999-$E(DGPREV,1,14))=$S($D(^DIC(45.7,+X,0)):$P(^(0),"^",2),1:0)_"^"_$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,X,0)) I DGNEXT>0 S DGPREV=DGNEXT G LOOP
	S DGPREV=0,X=$S($D(^DIC(42,+$P(DGPMAN,"^",6),0)):$P(^(0),"^",3),1:0) I "^NH^D^"[(U_X_U) D ASIH^DGPTTS2
	;
LOOP1	; -- compare specs between mvts ; sort out xfr if spec did't change
	S DGSAVE=DGPREV
	S DGPREV=$O(DGA(DGPREV)),DGNEXT=$O(DGA(DGPREV)),X=+DGA(DGPREV) I DGNEXT S Y=+DGA(DGNEXT) I (X=Y)!((X=70)&(Y=71))!((X=71)&(Y=70)) K DGA(DGNEXT) S DGPREV=DGSAVE I $O(DGA(DGPREV))>0 G LOOP1
	;
	; -- is mvt during adm
	I DGPREV<+DGPMAN!($P(DGPREV,".")'<$S(DGDT:$P(+DGDT,"."),1:9999999)) S (DG1,DG2)=+$P(DGA(DGPREV),"^",2) D DEL:$S('$D(^DGPM(DG1,"PTF")):0,1:$P(^("PTF"),"^",2)]"") G LOOPQ
	;
	; build ^UTILITY for mvts whose spec changed
	I X=70!(X=71) S X2=DGPREV,X1=$S(DGNEXT]"":DGNEXT,DGDT]"":DGDT,1:DT) D ^%DTC S $P(DGA(DGPREV),"^",1)=$S(X>45:71,1:70)
	S X=$S($D(^DGPM($P(DGA(DGPREV),"^",2),"PTF")):^("PTF"),1:""),^UTILITY($J,"T",DGPREV)=$P(DGA(DGPREV),"^",2)_"^"_+DGA(DGPREV)_"^"_$P(X,"^",2)_"^"_$P(X,"^",3)_"^"_$S($D(^DGPM($P(DGA(DGPREV),"^",2),0)):$P(^(0),"^",8),1:"")
LOOPQ	I $O(DGA(DGPREV)) G LOOP1
	;
	; look for mvts in ^DGPM that have a PTF mvt # entry
	; but not in ^UTILITY.  If any are found, delete from ^DGPT.
	F DGPREV=0:0 S DGPREV=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV)) Q:DGPREV'>0  S X=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,0)),(DG1,DG2)=$O(^DGPM("ATS",DFN,DGPMCA,DGPREV,+X,0)) I $D(^DGPM(+DG1,"PTF")),$P(^("PTF"),"^",2)]"" D DEL
	;
	K Y S Y=+$O(^DGPM("APHY",DGPMCA,0)) I $D(^DGPM(Y,0)) S Y(0)=^(0),Y("PTF")=$S($D(^("PTF")):^("PTF"),1:"")
	I $D(Y)>10 S T("ADM")=Y_"^"_$S($D(^DIC(45.7,+$P(Y(0),"^",9),0)):$P(^(0),"^",2),1:"")_"^^"_$P(Y("PTF"),"^",3)_"^"_$P(Y(0),"^",8) K Y
	;
	S DGDEL=$O(^UTILITY($J,"T",0))
	I DGDEL S T(DGDEL)=^(DGDEL),DG1=$P(T(DGDEL),"^",3) I DG1 S T(DGDEL)=$P(T(DGDEL),U,1,2),DGREC=$S($D(^DGPT(PTF,"M",DG1,0)):^(0),1:"") D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA S ^UTILITY($J,"T",DGDEL)=$P(T(DGDEL),U,1,2)
	K DGA K:$D(T(+DGDT)) T(DGDT)
	S DGAD=+DGPMAN F I=0:0 S I=$O(^UTILITY($J,"T",I)) Q:I'>0  S DGAD=I
	S DGREC1=$S($D(^DGPT(PTF,"M",1,0)):^(0),1:""),DGREC=$S($D(^UTILITY($J,"T",DGAD)):^(DGAD),$D(T("ADM")):T("ADM"),1:"") I DGREC,$D(^DGPM(+DGREC,0)) S $P(^("PTF"),"^",3)=1
	S DGREC=$P(DGREC,U,2)
	I DGDT W:'DGREC&'$D(ZTQUEUED) !,"No Treating Specialty Transfers",! S I1=1,DIE="^DGPT(",DA=PTF,DR="71///"_DGREC D ^DIE:DGREC S PR=DGAD,NX=DGDT D LOL^DGPTTS2 I $P(DGREC1,U,3,4)'=(LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP,I1=1 D TD5^DGPTTS2 K DR
	I 'DGDT S PR=DGAD,NX=DT,I1=1 D LOL^DGPTTS2 I $P(DGREC1,U,2,4)'=(DGREC_U_LOL_U_LOP) S DR="3///"_LOL_";4///"_LOP_$S(DGREC:";2///"_DGREC,1:"") D TD5^DGPTTS2
	K DGSAVE,DR,DGREC1 D ^DGPTTS2 Q
DEL	Q:$D(^UTILITY($J,"T",(9999999.999999-$E(DGPREV,1,14))))
	S DG1=$P(^DGPM(DG1,"PTF"),"^",2),DGREC=$S($D(^DGPT(PTF,"M",+DG1,0)):^(0),1:"") Q:DGREC']""  D MSG K DA S DIK="^DGPT("_PTF_",""M"",",DA(1)=PTF,DA=DG1 D ^DIK K DA
	S DA=DG2,DR="52///@;53///@",DIE="^DGPM(" D ^DIE Q
MSG	S DGMSG="" F X=5:1:15 S:X'=10 DGMSG=DGMSG_$S($D(^ICD9(+$P(DGREC,U,X),0)):$P(^(0),U,1)_", ",1:"")
	Q:DGMSG']""  S ^UTILITY($J,"DEL",DG1)=DGMSG
	;-- save expanded codes 
	S DGMSG1=""
	I $D(^DGPT(PTF,"M",+DG1,300)) S DGEX=^(300) F X=2:1:7 S:$P(DGEX,U,X)]"" $P(DGMSG1,U,X)=$P(DGEX,U,X)
	S:DGMSG1]"" ^UTILITY($J,300,DG1)=DGMSG1
	K DGMSG1
	S Y=$P(DGREC,U,10) X ^DD("DD") S DGMSG="501 movement of "_$P(^DPT(DFN,0),U,1)_" of "_Y_" losing specialty "_$P(^DIC(42.4,$P(DGREC,U,2),0),U,1)_" was deleted by "_$P(^VA(200,DUZ,0),U,1)_" it contained diag "_$E(DGMSG,1,120)
	S:'$D(DGPMAN) DGPMAN=^DGPM(DGPMCA,0) D MSG^DGPTMSG1
	K DGEX Q

IB20PT85
IB20PT85	;ALB/CPM - EXPORT ROUTINE 'DGPTTS3' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPTTS3	;ALB/MJK - Physical Mvt ; MAY 04, 1990
	;;5.3;Registration;**26**;Aug 13, 1993
	;
EN	; -- entry used to update PTF rec
	;  input: PTF := PTF#
	;         DFN := pt#
	;      DGPMCA := adm mvt #
	;        DGDT := d/c date
	;
	S DGPTIFN=PTF
	D FDT^DGPTUTL G ENQ:$S(DGDT:DGDT,1:DT)<Y
	W:'$D(ZTQUEUED) !,"Now updating ward CDR information..."
	S (DGBEG,DGSTART,DGLAST)=Y-.0000001
	S X=Y I $E(X,6,7)="00" S X1=X,X2=-1 D C^%DTC
	S DGPFYDT=$P(X,".")_".2359" ; last date/time in previous FY
	D KILL
	N DGRT S DGRT="^DGPM(""APCA"",DFN,DGPMCA)"
	;
	; -- build ward table
	S DGDATA="",DGADM0=$S($D(^DGPM(DGPMCA,0)):^(0),1:"")
	I DGADM0,DGADM0'>DGSTART S DGT=DGPFYDT D ^DGINPW I +DG1 S $P(DGXFR0,U,4)=+DG1 D TABLE
	I DGADM0,DGADM0>DGSTART S $P(DGXFR0,U,4)=$P(DGADM0,U,6),DGBEG=+DGADM0 D TABLE
	F DGXDT=DGSTART:0 S DGXDT=$O(@DGRT@(DGXDT)) Q:'DGXDT  F DGMVT=0:0 S DGMVT=$O(@DGRT@(DGXDT,DGMVT)) Q:'DGMVT  I $D(^DGPM(DGMVT,0)) S X=^(0) I $P(X,U,2)=2 S DGXFR0=$P(X,U,18)_"^^^"_$P(X,U,6) D TABLE
	G ENQ:DGDATA=""
	S DGEND=$S(DGDT:DGDT,1:DT) D DAYS S DGXDT=($S(DGDT:DGDT,1:"")),$P(DGDATA,U,3,4)=LEAVE_U_PASS,$P(DGDATA,U,7)=1 D CREATE
	;
ENQ	I $D(DGSACNT),DGSACNT>25 D FLCHK
	S L=DGPTIFN
	K DGRT,DGADM0,DG1,DGDATA,DGMDT,DGPTIFN,DGXFR0,DGXDT,DGM,X,DGM0,LEAVE,PASS,DGBEG,DGEND,DGSTART,DGWD,DGCDR,DGSP,DGADM0,DGPFYDT,DGT,DGA1,DGSAFTF,DGSACNT,DGWI,DGI
	Q
	;
TABLE	; -- setup 535 node data
	;  DGDATA := 1:ward cdr ^ 2:ward specialty  ^ 3:leave days ^ 4:pass days ^ ^ 6:ward ^ ^ ^ ^ 10:mvt date/time
	;
	S DGWD=+$P(DGXFR0,U,4)
	G TABLEQ:'$D(^DIC(42,DGWD,0)) S DGSP=+$P(^(0),U,12)
	G TABLEQ:'$D(^DIC(42.4,DGSP,0)) S DGCDR=$P(^(0),U,6)
	; -- create CDR mvt if ward cdr changes
	I DGDATA]"",+DGDATA'=DGCDR S DGEND=DGXDT D DAYS S $P(DGDATA,U,3,4)=LEAVE_U_PASS D CREATE S DGDATA=DGCDR_"^"_DGSP_"^^^^"_DGWD,DGLAST=DGBEG,DGBEG=DGEND
	I DGDATA="",DGCDR]"" S DGDATA=DGCDR_"^"_DGSP_"^^^^"_DGWD
TABLEQ	Q
	;
CREATE	; -- create CDR mvt
	L ^DGPT(DGPTIFN,535) S Y=^DGPT(DGPTIFN,535,0),I=$P(Y,U,3)
L	S I=I+1 G L:$D(^DGPT(DGPTIFN,535,I))
	S $P(^DGPT(DGPTIFN,535,0),U,3,4)=I_U_($P(Y,U,4)+1)
	S X=DGDATA,^DGPT(DGPTIFN,535,I,0)=I_U_$P(X,U,2)_U_$P(X,U,3)_U_$P(X,U,4)_"^^"_$P(X,U,6)_"^"_$P(X,U,7)_"^^^"_DGXDT L
	K DA S DA=I,DA(1)=DGPTIFN,DIK="^DGPT("_DGPTIFN_",535," D IX1^DIK
CREATEQ	S DGSACNT=I
	K DA,I,DIK Q
	;
KILL	; -- clean out ward mvts
	F DGWI=0:0 S DGWI=$O(^DGPT(DGPTIFN,535,DGWI)) Q:'DGWI  S:$P(^(DGWI,0),U,17)="n" DGSAFTF(DGWI)=^(0) K DA S DA(1)=DGPTIFN,DA=DGWI,DIK="^DGPT("_DGPTIFN_",535," D ^DIK K DA
	S:'$D(^DGPT(DGPTIFN,535,0)) ^(0)="^45.0535^"
	K DIK,DGWI,DA Q
	;
T	; -- test tag
	S DIC(0)="AEMQZ",DIC=45,DIC("S")="I $P(^(0),U,11)=1" D ^DIC K DIC Q:Y<0
PTF	S PTF=+Y,DGDT=$S($D(^DGPT(L,70)):+^(70),1:0),DFN=+Y(0) D PM^DGPTUTL,EN:DGPMCA
	Q
	;
DAYS	; -- calc leave and pass days from DGBEG to DGEND
	; -- if last 501 date is after last 535 date then
	;    calc from last 535 mvt d/t to last 501 mvt d/t
	;
	;      535          501    501        535
	;       |------------|------|----------|
	;        <<<<<<<<<<< total >>>>>>>>>>
	;        <<<<<<< diff >>>>>>+<< pass >>
	;
	S (PASS,LEAVE,DGDIFP,DGDIFL)=0 D MVT
	I DGMDT>DGBEG S DGE=DGEND,DGEND=DGMDT D DAYS0 S DGDIFL=LEAVE,DGDIFP=PASS,DGEND=DGE
	; -- calc from last 535 mvt d/t to new 535 mvt d/t
	S (PASS,LEAVE)=0 D DAYS0
	; -- substract 'diff' from 'total'
	S PASS=PASS-DGDIFP,LEAVE=LEAVE-DGDIFL
	K DGDIFL,DGDIFP,DGE Q
	;
DAYS0	;
	N DGMVT
	F DGMVTDT=(DGBEG-.0000001):0 S DGMVTDT=$O(@DGRT@(DGMVTDT)) Q:'DGMVTDT  F DGMVT=0:0 S DGMVT=$O(@DGRT@(DGMVTDT,DGMVT)) Q:'DGMVT  I $D(^DGPM(DGMVT,0)),$P(^(0),U,2)=2 S C=$P(^(0),U,18) I C=1!(C=2)!(C=3) D NEXT,DAYS1
	K DGMVTDT Q
	;
DAYS1	S I=DGMVTDT,X2=$S(I<DGBEG:DGBEG,1:I),X1=$S(Y>DGBEG&(Y'>DGEND):Y,Y>DGEND!('Y):DGEND,1:X2)
	I X1>X2 D ^%DTC S:C=1 PASS=PASS+X S:C=2 LEAVE=LEAVE+X
	K C,X,Y,X1,X2,I
	Q
	;
NEXT	; -- find next x-ref date
	N DGMVT
	F Y=DGMVTDT:0 S Y=$O(@DGRT@(Y)) Q:'Y  F DGMVT=0:0 S DGMVT=$O(@DGRT@(Y,DGMVT)) Q:'DGMVT  I $D(^DGPM(DGMVT,0)),$P(^(0),U,2)=2 G NEXTQ
NEXTQ	Q
	;
MVT	; -- find last 501 mvt d/t since the last 535 mvt d/t
	;    and before the new 535 mvt d/t
	S DGMDT=""
	F M=DGLAST:0 S M=$O(^DGPT(DGPTIFN,"M","AM",M)) Q:'M!(M>DGEND)  S DGMDT=M
	K M Q
	;
FLCHK	; -- check if more than 25 535s, then re-set x-mit flags
	I '$D(DGSACNT) G FLQ
	I DGSACNT<25 G FLQ
	S DGF1=0
	F DGWI=0:0 S DGWI=$O(DGSAFTF(DGWI)) Q:'DGWI!('$D(^DGPT(DGPTIFN,535,+DGWI,0)))  F DGI=1,2,10,16 S:$P(^(0),U,DGI)'=$P(DGSAFTF(DGWI),U,DGI) DGF1=1
	I 'DGF1,'DGWI F DGWI=0:0 S DGWI=$O(DGSAFTF(DGWI)) Q:'DGWI  S DA=DGWI,DA(1)=DGPTIFN,DIE="^DGPT("_DGPTIFN_",535,",DR="17///n" D ^DIE
FLQ	K DGI,DGF1,DGWI,DGSAFTF,DGSACNT,DR,DA,DIE
	Q
	;

IB20PT86
IB20PT86	;ALB/CPM - EXPORT ROUTINE 'DGPTUTL' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPTUTL	;ALB/AS - PTF UTILITY ROUTINE ; 12/13/89@8
	;;5.3;Registration;**26**;Aug 13, 1993
D	I $L(Y)'<7 S %=$E(Y,4,5)*3,Y=$E("JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC",%-2,%)_" "_$S($E(Y,6,7):$J(+$E(Y,6,7),2)_",",1:"")_($E(Y,1,3)+1700)_$S(Y[".":" "_$E(Y_0,9,10)_":"_$E(Y_"000",11,12),1:"") Q
	S Y="" Q
PM	;sets variables from ^DGPM global
	S DGPMCA=$O(^DGPM("APTF",PTF,0)),DGPMAN=$S($D(^DGPM(+DGPMCA,0)):^(0),1:"") Q
MT	;Determine and store Means Test Indicator
	S DGZEC=$S($D(^DPT(DFN,.36)):$P(^(.36),U,1),1:""),DGZEC=$S($D(^DIC(8,+DGZEC,0)):^(0),1:"") I $P(DGZEC,U,5)="N" S DGX="N" G DIE
	I DGADM<2860701 S DGX="X" G DIE
	I $D(^DGPT(PTF,101)),$D(^DIC(45.1,+^(101),0)),$P(^(0),"^",4) S DGX="X" G DIE
	I $P(^DG(43,1,0),U,21),DGADM]"",$D(^DIC(42,+$P(DGPMAN,U,6),0)),$P(^(0),U,3)="D" S DGX="X" G DIE
	S DGT=$P($G(^DGPT(PTF,70)),"."),DGZ1=$$LST^DGMTU(DFN,DGT) G AS:'DGZ1
	S DGX=$S('$D(DGZ1):"U",1:$P(DGZ1,U,4)),DGX=$S(DGX="A":"AN","BN"[DGX:DGX,"CP"[DGX:"C",1:"U") G DIE:DGX'="N"
AS	S DGZ=$S($D(^DPT(DFN,.321)):^(.321),1:0) I $P(DGZ,U,2)="Y"!($P(DGZ,U,3)="Y") S DGX="AS" G DIE
	I $P(DGZEC,U,5)="Y",$P(DGZEC,U,4)<4,"^2^15^"'[(U_$P(DGZEC,U,9)_U) S DGX="AS" G DIE
	I DGZEC]"" S DGX="AN" G DIE
	S DGX="U" I '$D(DGLN) W !,"===> this patient has a blank Eligibility Code"
DIE	I '$D(DGBGJ) S DA=PTF,DR="10///"_DGX_$S('$P(^DGPT(PTF,0),U,3):";3///`"_$P($$SITE^VASITE,U),1:""),DIE="^DGPT(" D ^DIE K DGZEC,DGZ,DGZ1,DG1,DGX,DR,DGT,DA,DIE Q
	I DGX'=$P(^DGPT(PTF,0),"^",10) S DA=PTF,DR="10///"_DGX,DIE="^DGPT(" D ^DIE
	K DGZEC,DGZ,DGZ1,DG1,DGX,DGT,DR,DA,DIE Q
	;
RTY	; -- set rec type variables
	;  input:      Y := rec type #
	; output:  DGRTY := rec type #
	;         DGRTY0 := name of type (in future, may expand to 0th node)
	;
	I Y=1 S DGRTY=1,DGRTY0="PTF"
	I Y=2 S DGRTY=2,DGRTY0="CENSUS"
	Q
	;
HANG	;
	R DGPTHANG:4 K DGPTHANG Q
	;
CEN	; -- find current active census ; return ifn and 0th node
	S DGCN=$O(^DG(45.86,"AC",1,0)),DGCN0=$S($D(^DG(45.86,+DGCN,0)):^(0),1:"")
	Q
	;
FMT	; -- determime PTF record format
	;
	S Z=$S(Y:Y,1:DT)
	S DGPTFMT=1 D FDT
	I Z>Y S DGPTFMT=2
	K Z
	Q
	;
FDT	; -- set new format date for testing
	S Y=2901000 Q
	;
UPDT	; -- update PTF record w/PTF and DFN defined
	I '$D(^DGPT(PTF,0)) W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," does not exist." G UPDTQ
	S X=^(0)
	I $P(X,U,11)>1 W:'$D(ZTQUEUED) !!,*7,">>> Record #",PTF," is not a PTF record." G UPDTQ
	S DGPTFE=$P(X,U,4),(DGADM,AD)=+$P(X,U,2),DGST=$D(^DGP(45.84,PTF))>0
	I DGST W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," is closed out. No updating allowed." G UPDTQ
	I DGPTFE W:'$D(ZTQUEUED) !!,*7,">>> PTF record #",PTF," is a fee PTF record. No updating is possible." G UPDTQ
	N DGPMCA,DGPMAN D PM
	I DGPMCA D:'$P(^DGPT(PTF,0),U,5) SUF^DGPTF D LE^DGPTTS,DC^DGPTF
	;
UPDTQ	K AGE,D0,D1,DA,DGADM,DGLAST,DGP,DGTY,DIC,DIE,DR,DIV,DIU,DISYS,DIK,DIKLM,DIG,DIH,DI,DIW,DIWL,DIWR,DIWT,DN,DOB,DQ,DG,DRG,SEX,TY,L,P1,DIS2,DGPTFE,DGST,DGX,DFN1,DFN2,PR,I1,TDD,AD
	Q
	;
EXPL	; -- explode string A(input) to DGA(output)
	N J,L S DGA=$E(A,2,999)
	I DGA["-" S X=DGA,DGA="" F J=1:1 S L=$P(X,",",J) Q:'L  D EXPL1:L["-" S:L]"" DGA=DGA_L_"," Q:$P(X,",",J+1,999)=""
	Q
	;
EXPL1	; -- explode string 'L' of form "1-12" ; input and output is 'L'
	N I,X
	I $P(L,"-")'?1N.N!($P(L,"-",2,999)'?1N.N) S L="" G EXPL1Q
	I +L>$P(L,"-",2) S L="" G EXPL1Q
	I +L=+$P(L,"-",2) S L=+L G EXPL1Q
	S X="" F I=+L:1:+$P(L,"-",2) Q:($L(X)+$L(I)+1)>240  S X=X_I_","
	S L=$E(X,1,$L(X)-1)
EXPL1Q	Q

IB20PT87
IB20PT87	;ALB/CPM - EXPORT ROUTINE 'DGRPDB' ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGRPDB	;ALB/AAS - VIEW ONLY SCREEN TO DETERMINE BILLING ELIGIBILITY ; 20 DEC 90 1:30 pm
	;;5.3;Registration;**26**;Aug 13, 1993
	;
%	S:'$D(DGQUIT) DGQUIT=0
	G:DGQUIT END S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC G:+Y<1 END S DFN=+Y D EN
	G %
	;
EN	;entry with DFN defined.
	Q:'$D(DFN)  D HOME^%ZIS,2^VADPT,HDR
	D MT,AOIR,ELIG,DIS
	S C=$S($D(^DPT(DFN,.312,0)):$P(^(0),"^",4),1:0),C=C+6
	D:($Y>(IOSL-C)) PAUSE,HDR:'DGQUIT Q:DGQUIT  D INS,PAUSE
	Q
	;
ELIG	;eligibility code(s)
	W !!," Primary Elig. Code: ",$P(VAEL(1),"^",2),"  --  ",$S(VAEL(8)']"":"NOT VERIFIED",1:$P(VAEL(8),"^",2))
	I VAEL(8)]"" S Y=$S($D(^DPT(DFN,.361)):$P(^(.361),"^",2),1:"") W "  " D DT^DIQ
	W !,"Other Elig. Code(s): " I $D(VAEL(1))>9 S I1=0 F I=0:0 S I=$O(VAEL(1,I)) Q:'I  S I1=I1+1 W:I1>1 !?21 W $P(VAEL(1,I),"^",2)
	E  W "NO ADDITIONAL ELIGIBILITIES IDENTIFIED"
	Q
	;
DIS	;rated disabilities
	;
	;  This is called from the FEE and MCCR package!!!
	;
	;  Input:  DFN as IEN of PATIENT file
	;          VAEL array (if no passed, it is set) of eligibility info
	;
	I '$D(VAEL) D ELIG^VADPT S DGKVAR=1
	W:'+VAEL(3) !!,"  Service Connected: NO" W:+VAEL(3) !!,"         SC Percent: ",$P(VAEL(3),"^",2)_"%"
	W !," Rated Disabilities: " I 'VAEL(4),$S('$D(^DG(391,+VAEL(6),0)):1,$P(^(0),"^",2):0,1:1) W "NOT A VETERAN" G DISQ
	S I3=0 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  S I1=^(I,0),I2=$S($D(^DIC(31,+I1,0)):$P(^(0),"^",1)_" ("_+$P(I1,"^",2)_"%-"_$S($P(I1,"^",3):"SC",$P(I1,"^",3)']"":"not specified",1:"NSC")_")",1:""),I3=I3+1 W:I3>1 !?21 W I2
	W:'I3 "NONE STATED"
DISQ	I $D(DGKVAR) D KVAR^VADPT K DGKVAR
	K I,I1,I2,I3
	Q
	;
INS	;insurance information
	;
	;  This is called form the FEE package!!!
	;
	;  Input:  DFN as IEN of PATIENT file
	;
	Q:'$D(DFN)
	W !!,"    Health Insurance: " S Z=$S($D(^DPT(DFN,.31)):$P(^(.31),"^",11),1:"") W $S(Z="Y":"YES",Z="N":"NO",Z="U":"UNKNOWN",1:"NOT ANSWERED")
	D DISP^IBCNSP2
INSQ	K I,I1,DGX,Z
	Q
	;
IN	W !?3,$S($D(^DIC(36,+$P(DGX,"^",1),0)):$E($P(^(0),"^",1),1,25),1:"UNKNOWN"),?30,$S($P(DGX,"^",2)]"":$P(DGX,"^",2),1:"UNKNOWN"),?52,$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"UNKNOWN")
	W ?71,$S($P(DGX,"^",6)="v":"APPLICANT",$P(DGX,"^",6)="s":"SPOUSE",$P(DGX,"^",6)="o":"OTHER",1:"UNKNOWN")
	Q
	;
AOIR	;Agent Orange/ionizing radiation
	S DGX=$S($D(^DPT(DFN,.321)):^(.321),1:"")
	F I=2,3 S X=$P(DGX,"^",I) W:I=2 !,"           A/O Exp.: " W:I=3 "ION Rad.: " W $S(X="Y":"YES",X="N":"NO",X="U":"UNKNOWN",1:"NOT ANSWERED"),"   "
	S X=$G(^DPT(DFN,.38)),X1=$P(X,"^",1) W "Medicaid Elig: ",$S(X1="":"NOT ANSWERED",'X1:"NO",1:"YES") I ($X+15)'>IOM W " - " S Y=$P(X,"^",2) D D^DIQ W $P(Y,"@")
	Q
	;
PAUSE	F J=1:1 Q:($Y>(IOSL-3))  W !
	S DGX1="" I $E(IOST,1,2)["C-" N DIR S DIR(0)="E" D ^DIR S DGQUIT='Y
	Q
	;
HDR	;Screen Header
	W @IOF I $P(VAEL(6),"^",2)]"" S DGTYPE=$P(VAEL(6),"^",2)
	W $P(VADM(1),"^",1),?32,VA("PID"),?47,$P(VADM(3),"^",2) S X=$S($D(DGTYPE):$P(DGTYPE,"^",1),1:"PATIENT TYPE UNKNOWN"),X1=79-$L(X) W ?X1,X
	S X="",$P(X,"=",80)="" W !,X Q
	Q
	;
MT	I '$O(^DGMT(408.31,"AD",1,DFN,0)) W !,"  Means Test Status:  NOT IN MEANS TEST FILE" Q
	D DIS^DGMTU(DFN)
	Q
	;
END	D KVAR^VADPT
	K A,C,I,I1,I2,I3,J,DIC,DIR,DFN,DGA1,DGMT,DGMTL,DGMTLA,DGX,DGX1,DGT,DGTYPE,DGQUIT,DGMTLL,X,X1,VAROOT,VA,Y,Z
	Q

IB20PT88
IB20PT88	;ALB/CPM - EXPORT ROUTINE 'DG3PR0' ; 24-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DG3PR0	;ALB/JDS - 10-10I ;01 JAN 1987
	;;5.3;Registration;**26**;Aug 13, 1993
START	K ^UTILITY($J) S (N(1),N(0),DG(1),DG(0))="" D ALL^IBCNS1(DFN,"DGIBINS") F I=0:0 S I=$O(DGIBINS(I)) Q:'I  S L=DGIBINS(I,0),M=$P(L,U,6),M=$S(M']"":0,1:M),^UTILITY($J,M,I)=L
	F I="v",0,"s","o" I $D(^UTILITY($J,I)) S DG(0)=^($O(^(I,0))),N(0)=I Q
	F I="v",0,"s","o" I $D(^UTILITY($J,I)) S L=$S(N(0)=I:$O(^($O(^(I,0)))),1:$O(^(I,0))) I L>0 S DG(1)=^UTILITY($J,I,L),N(1)=I Q
	;K ^UTILITY($J)
PRINT	;
	G:$$FIRST^DGUTL Q
	I '$D(DGNOW) N DGNOW D NOW^%DTC,YX^%DTC S DGNOW=Y
	W "Printed: ",DGNOW
	S DIC(0)="LM",X="DG1010I",DIC="^DIC(47," D ^DIC G Q:Y'>0 S DGY=+Y
	F I=0,.21,.22,.25,.311 S D(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
	S Y=$P(D(.22),U,5) D ZIPOUT^VAFADDR S X=$P(D(.311),U,6,7)_U_Y D AD2 S D(.311)=$P(D(.311),U,1)_U_$P(D(.311),U,9)_U_$P(D(.311),U,3)_" "_$P(D(.311),U,4)_" "_$P(D(.311),U,5)_U_X
	S Y=$P(D(.22),U,6) D ZIPOUT^VAFADDR S X=$P(D(.25),U,5,6)_U_Y D AD2 S D(.25)=$P(D(.25),U,1)_U_$P(D(.25),U,8)_U_$P(D(.25),U,2)_" "_$P(D(.25),U,3)_" "_$P(D(.25),U,4)_U_X
	F I=0,1 D SET
	S (L,DGL)=0 F I=0:0 S I=$O(^DIC(47,+DGY,1,I)) Q:'I!(DGL=I)  S J=^(I,0),X="" W ! F K=1:1 W $E($P(J,"{}",K),$S(K=1:1,X']"":1,1:$L(X)-1),999) S X=$P(J,"{",K+1) Q:X']""  S L=L+1 D SE W:X']"" "  "
Q	D ENDREP^DGUTL K A,B,D,DG,DGL,DGY,DIC,E,I,J,K,L,M,N,X,X1,X2,Y,DGIBINS,^UTILITY($J)
	Q
SET	S A=DG(I),A=$S($D(^DIC(36,+A,0)):^(0),1:""),B=$G(^DIC(36,+DG(I),.11)),Y=$P(B,U,6) D ZIPOUT^VAFADDR S X=$P(B,U,4,5)_U_Y D AD2
	S X(I)=$P(A,U,1)_U_$P($G(^DIC(36,+DG(I),.13)),U,1)_U_$P(B,U,1)_U_X_U_$P(DG(I),U,2)_U_$P(DG(I),U,3)_U,Y=$P(DG(I),U,8) X ^DD("DD") S X(I)=X(I)_Y_U,Y=$P(DG(I),U,7) X ^DD("DD") S X(I)=X(I)_Y
	S N=$S(N(I)="s":$P(DG(I),U,17)_U_"SPOUSE",(N(I)=0!(N(I)="v")):$P(D(0),U,1)_U_"SAME",1:$P(DG(I),U,17)_U)
	S E=$S(N(I)=0!(N(I)="v"):D(.311),N(I)="s":D(.25),1:"^^^^")
	S X=$P(DG(I),U,12,14) D AD2 S X1(I)=N_U_E,X2(I)=$P(DG(I),U,9,11)_U_X
	Q
AD2	S X=$P(X,U,1)_$S($P(X,U,1)]"":", ",1:"")_$S($D(^DIC(5,+$P(X,U,2),0)):$P(^(0),U,1),1:"")_" "_$P(X,U,3) Q
SE	I L>2&(L<11) S X=$P(X(L\21),U,L-$S(L>20:20,1:2)) W X Q
	I L>10&(L<17) S X=$P(X1(L\21),U,L-10) W X Q
	I L>16&(L<21) S X=$P(X2(L\21),U,L-16) W X Q
	I L>20&(L<29) S X=$P(X(L\21),U,L-20) W X Q
	I L>28&(L<35) S X=$P(X1(L\21),U,L-28) W X Q
	I L>34 S X=$P(X2(L\21),U,L-34) W X Q
	S X=$P(D(0),U,$S(L=1:1,1:9)) W X Q
	Q

IB20PT89
IB20PT89	;ALB/CPM - EXPORT ROUTINE 'DG3PR1' ; 24-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DG3PR1	;ALB/JDS/MIR - 3rd PARTY REIMBURSEMENT SORT/PRINT ; 3 MAY 90@8P
	;;5.3;Registration;**26**;Aug 13, 1993
SORT	S (DGFL,DGTIME)=1 F DGI=DGFR:0 S DGI=$O(^DGPM(DGBY,DGI)) Q:'DGI!(DGI>DGTO)!'DGFL  F DGJ=0:0 S DGJ=$O(^DGPM(DGBY,DGI,DGJ)) Q:'DGJ  D PRINT Q:'DGFL
	D Q^DG3PR Q
PRINT	;OUTPUT
	Q:'$D(^DGPM(+DGJ,0))  I DGBY[3 S DGDC=^(0),DGCA=$P(DGDC,"^",14),DGAD=$S($D(^DGPM(+DGCA,0)):^(0),1:"")
	I DGBY[1 S DGAD=^(0),DGCA=DGJ,DGDC=$S($D(^DGPM(+$P(DGAD,"^",17),0)):^(0),1:"")
	S DFN=$P(DGAD,"^",3) I $S('DFN:1,'$D(^DPT(DFN,0)):1,'$O(^DPT(DFN,.312,0)):1,'$D(^DPT(DFN,"VET")):1,$P(^("VET"),"^",1)'="Y":1,1:0) Q
	I 'DGTIME,($E(IOST,1)="C") S DIR(0)="E" D ^DIR S DGFL=Y Q:'DGFL
	S DGTIME=0 W @IOF,!,"THIRD PARTY REIMBURSEMENT",?49,"PRINTED:  " D NOW^%DTC S Y=% X ^DD("DD") W Y S DGNOW=Y
	W !!,$P(^DPT(DFN,0),"^",1),?39,"EMPLOYMENT STATUS:  " S DGX=$S($D(^DPT(DFN,.311)):^(.311),1:""),X1=$P(DGX,"^",15)
	W $S(X1=1:"EMPLOYED FULL TIME",X1=2:"EMPLOYED PART TIME",X1=3:"NOT EMPLOYED",X1=4:"SELF EMPLOYED",X1=5:"RETIRED",X1=6:"ACTIVE MILITARY DUTY",1:"UNKNOWN")
	D PID^VADPT6 W !,"(PT ID:  ",VA("PID"),")",?48,"EMPLOYER:  ",$P(DGX,"^",1) S X=$S($D(^DPT(DFN,.11)):^(.11),1:"") W !,$P(X,"^",1),?46,"OCCUPATION:  ",$P(^DPT(DFN,0),"^",7)
	I $P(X,"^",2)]"" W !,$P(X,"^",2) I $P(X,"^",3)]"" W !,$P(X,"^",3)
	I $P(X,"^",4)]"" W !,$P(X,"^",4),", ",$S($D(^DIC(5,+$P(X,"^",5),0)):$P(^(0),"^",1),1:""),"  "
	S Y=$P(X,U,12) D ZIPOUT^VAFADDR W Y
	D ^DG3PR2
	Q

IB20PT8A
IB20PT8A	;ALB/CPM - EXPORT ROUTINE 'DG3PR2' ; 24-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DG3PR2	;ALB/MIR - CONTINUATION OF THE THIRD PARTY REIMBURSEMENT ; NOV 21 90@8
	;;5.3;Registration;**26**;Aug 13, 1993
	S DGINS=0 W !!,"INSURANCE TYPE",?24,"INSURANCE #",?45,"GROUP #",?63,"EXPIRES   HOLDER",!,"--------- ----",?24,"--------- -",?45,"----- -",?63,"-------   ------"
	D ALL^IBCNS1(DFN,"DGIBINS") F I=0:0 S I=$O(DGIBINS(I)) Q:'I  S J=DGIBINS(I,0) S X=$G(^DIC(36,+J,0)) W !,$S($P(X,"^",2)="N":"*",1:""),$E($P(X,"^",1),1,22),?24,$P(J,"^",2),?45,$P(J,"^",3) S DGINS=$S($P(X,"^",2)="N":1,1:0) D INS2
	I DGINS W !?22,"* - Insurer may not reimburse!"
	K DGINS,DGIBINS
	S Y=+DGAD X ^DD("DD") W !!,"Admitted: ",Y,?40,"Discharged: " S Y=+DGDC I Y X ^DD("DD") W Y
	I $P(DGAD,"^",18)=9 W !,"Transferred in From ",$S($D(^DIC(4,+$P(DGAD,"^",5),0)):$P(^(0),"^",1),1:"")
	S DGPTF=$P(DGAD,"^",16) I 'DGPTF!('$D(^DGPT(+DGPTF,0))) W !,"No PTF Record Exists" Q
	I '$D(^DGP(45.84,DGPTF)) W !,"PTF Record not closed",!
	K ^UTILITY("DG") F I=0:0 S I=$O(^DGPT(DGPTF,"M",I)) Q:'I  S J=^(I,0) S:$P(J,"^",2) ^UTILITY("DG",$J,"M",+$P(J,"^",10))=J
	F I=0:0 S I=$O(^DGPT(DGPTF,"S",I)) Q:'I  D HEAD:$Y>(IOSL-5) Q:'DGFL  S J=^DGPT(DGPTF,"S",I,0),^UTILITY("DG",$J,"S",+J)=J
	Q:'DGFL  I $O(^UTILITY("DG",$J,"M",0)) W !!,"DATE",?22,"LOS BEDSECTION",?39,"LOS",?45,"DIAGNOSES",!,"----",?22,"---------------",?39,"----  ---------"
	S DGPR=DGAD F I=0:0 S I=$O(^UTILITY("DG",$J,"M",I)) Q:'I  S J=^(I) D HEAD:$Y>(IOSL-5) Q:'DGFL  S Y=I X ^DD("DD") D LOL W !,Y,?22,$E($S($D(^DIC(42.4,+$P(J,"^",2),0)):$P(^(0),"^",1),1:""),1,16),?39,$J(DGLOL,4) D DIAG S DGPR=I
	Q:'DGFL  S DGPMIFN=DGCA D ^DGPMLOS W !?39,"----  ----------",!?26,"TOTAL LOS:",?39,$J(+$P(X,"^",5),4),?45,$S($D(^ICD9(+$S($D(^DGPT(DGPTF,70)):$P(^(70),"^",10),1:""),0)):"DXLS: "_$P(^(0),"^",1)_" ("_$P(^(0),"^",3)_")",1:"")
	Q:'$O(^UTILITY("DG",$J,"S",0))  D HEAD:$Y>(IOSL-10) Q:'DGFL  W !!,"SURGERY DATE",?22,"SPECIALTY",?45,"OP CODES",!,"------------",?22,"----------",?44,"--------"
	F I=0:0 S I=$O(^UTILITY("DG",$J,"S",I)) Q:'I  S J=^(I),Y=I X ^DD("DD") W !,Y,?22,$E($S($D(^DIC(45.3,+$P(J,"^",3),0)):$P(^(0),"^",2),1:""),1,16) D OP
	Q
DIAG	S M=0 F K=5:1:15 I K'=10 S L=$P(J,"^",K) I L W:M ! W ?45,$S($D(^ICD9(+L,0)):$P(^(0),"^",1)_" ("_$P(^(0),"^",3)_")",1:"") S M=1
	Q
OP	S M=0 F K=8:1:12 S L=$P(J,"^",K) I L W:M ! W ?45,$S($D(^ICD0(+L,0)):$P(^(0),"^",1)_" ("_$P(^(0),"^",4)_")",1:"") S M=1
	Q
LOL	S X1=I,X2=DGPR D DTC S DGLOL=X
	F K=DGPR+.0000005:0 S K=$O(^DGPM("APCA",DFN,DGCA,K)) Q:'K!(K>I)  S C=$O(^(+K,0)) I $D(^DGPM(+C,0)),"^2^3^13^43^44^45^"[("^"_$P(^(0),"^",18)_"^") S X1=$O(^DGPM("APCA",DFN,DGCA,K)),X1=$S('X1:I,X1>I:I,1:X1),X2=K D DTC S DGLOL=DGLOL-X
	Q
HEAD	N I,J,K,L,M,Y I $E(IOST,1)="C" S DIR(0)="E" D ^DIR S DGFL=Y I 'DGFL Q
	W @IOF,!,"THIRD PARTY REIMBURSEMENT",?49,"PRINTED:  ",DGNOW
	W !,"("_$P(^DPT(DFN,0),"^",1)_")",!
	Q
INS2	;insurance data continued
	I $P(X,"^",2)="N" S DGINS=1
	S X=$P(J,"^",4) W:X]"" ?63,$E(X,4,5),"/",$E(X,6,7),"/",$E(X,2,3) S X=$P(J,"^",6) W ?73,$S(X="v":"VETERAN",X="s":"SPOUSE",X="o":"OTHER",1:"UNKNOWN")
	Q
DTC	N I,J,K,L,M,Y D ^%DTC Q

IB20PT8B
IB20PT8B	;ALB/CPM - EXPORT ROUTINE 'DGPMVBUR' ; 24-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DGPMVBUR	;ALB/MIR - UR ADMISSION BULLETIN FOR MCCR ; 13 JUL 91
	;;5.3;Registration;**26**;Aug 13, 1993
	;
UR	;UR bulletin
	K DGPMUR
	D INS I '$D(DGPMUR(10)) D URQ Q
	S DGPMX=$O(^XMB(3.8,"B","DGPM UR ADMISSION",0)) I '$O(^XMB(3.8,+DGPMX,1,0)) K DGPMX D URQ Q  ; if no mailgroup members, quit
	S XMSUB="UR ADMISSION BULLETIN",XMTEXT="DGPMUR(",DGPMBLN=0
	F I=0:0 S I=$O(^XMB(3.8,+DGPMX,1,I)) Q:'I  I $D(^(I,0)) S XMY(+^(0))=""
	D PID^VADPT6 S DGPMBL="Admission for  : "_$P(^DPT(DFN,0),"^",1)_"   "_VA("PID") D SETLN
	S Y=+DGPMA X ^DD("DD") S DGPMBL="Date/Time      : "_Y D SETLN
	S DGPMBL="Type of Admit  : "_$S($D(^DG(405.1,+$P(DGPMA,"^",4),0)):$P(^(0),"^",1),1:"") D SETLN
	S DGPMBL=" " D SETLN
	S DGPMBL="Ward Location  : "_$S($D(^DIC(42,+$P(DGPMA,"^",6),0)):$P(^(0),"^",1),1:"UNKNOWN") D SETLN
	S DGPMBL="Room-Bed       : "_$S($D(^DG(405.4,+$P(DGPMA,"^",7),0)):$P(^(0),"^",1),1:"UNKNOWN") D SETLN
	S DGPMBL="Admitting DX   : "_$P(DGPMA,"^",10) D SETLN
	S DGPMBL=" " D SETLN
	S DGPMBLN=DGPMLAST D DIS ;SC disabilities
	D ^XMD
URQ	K DGPMBL,DGPMBLN,DGPMLAST,DGPMUR,DGTMP,XMY,XMSUB,XMTEXT
	K %,%Y,DGPMOB,DGPMOW,DGPMX,I,X,X1,X2,Y,DGIBINS
	Q
	;
INS	;get insurance effective at time of admission, start at DGPMBLN=10
	S DGPMBLN=9
	K DGIBINS
	D ALL^IBCNS1(DFN,"DGIBINS") F I=0:0 S I=$O(DGIBINS(I)) Q:'I  S X=DGIBINS(I,0) D ACT
	I $D(DGPMUR(10)) S DGPMLAST=DGPMBLN
	Q
	;
ACT	;is insurance active?  If so, set in DGPMBLN array
	I $P(X,"^",4)<+DGPMA,$P(X,"^",4) Q  ;insurance expired before admission
	I $P(X,"^",8)>+DGPMA Q  ;insurance effective after admission
	Q:'$D(^DIC(36,+X,0))  S X1=^(0),X2=$S($D(^(.13)):^(.13),1:"") ;get insurance company information
	I $P(X1,"^",5)!($P(X1,"^",2)="N") Q  ;insurance company is inactive or doesn't reimburse
	S DGPMBL="Insurance Co.  : "_$P(X1,"^",1) D SETLN
	S DGTMP=$S(($P(X,"^",15)]""):$P(X,"^",15),1:$P(X,"^",3))
	I DGTMP]"" S DGPMBL="Group          : "_DGTMP D SETLN
	S DGPMBL="Policy Holder  : "_$P(X,"^",17) D SETLN
	S DGPMBL="Subscriber ID  : "_$P(X,"^",2) D SETLN
	S DGPMBL="Ins. Co Phone# : "_$S($P(X2,"^",2)]"":$P(X2,"^",2),$P(X2,"^",1)]"":$P(X2,"^",1),1:"UNKNOWN") D SETLN
	S DGPMBL=" " D SETLN
	Q
DIS	;rated disabilities
	I $S('$D(^DPT(DFN,.3)):1,$P(^(.3),"^",1)'="Y":1,1:"") Q  ;not service connected...
	I $S('$D(^DPT(DFN,"VET")):1,$P(^("VET"),"^",1)'="Y":1,1:0),$S('$D(^DG(391,+$S($D(^DPT(DFN,"TYPE")):^("TYPE"),1:""),0)):1,$P(^(0),"^",2):0,1:1) Q
	;X=0 node, X1=already one SC disability?
	S X1=0 F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  I $D(^(I,0)) S X=^(0) I $P(X,"^",3)&$D(^DIC(31,+X,0)) S DGPMBL=$S('X1:"SC Disabilities: ",1:"                 ")_$P(^(0),"^",1)_" ("_+$P(X,"^",2)_"%)" S X1=1 D SETLN
	Q
SETLN	; -- set line in xmtext array
	S DGPMBLN=DGPMBLN+1
	S DGPMUR(DGPMBLN)=DGPMBL
	Q

IB20PT8C
IB20PT8C	;ALB/CPM - EXPORT ROUTINE 'FBUINS' ; 04-MAR-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
FBUINS	;AISC/DMK-ADD INSURANCE INFORMATION ;07JULY92
	;;3.0;FEE BASIS;**5**;NOV 26, 1993
	Q:$E(IOST,1,2)'="C-"
	Q:'$G(DFN)
	N FBOUT
INS	S DIR("A")="Want to add NEW insurance data",DIR("B")="No",DIR("?")="Answer 'Yes' if you want to add a new insurance company for this patient."
	S DIR("?",1)="You are not allowed to edit current insurance information.",DIR("?",2)="However, you will be given the opportunity to send a bulletin to MCCR",DIR("?",3)="if insurance information is incorrect."
	S DIR(0)="Y" D ^DIR K DIR Q:$D(DIRUT)
	D:Y FEE^IBCNSP2
	S DIR("A")="Are there any discrepancies with insurance data on file",DIR("?")="A 'Yes' answer will send a bulletin to MCCR",DIR(0)="Y",DIR("B")="No" D ^DIR K DIR Q:$D(DIRUT)!('Y)  D
	.N VADM D DEM^VADPT S XMB(1)=VADM(1),XMB(2)=VA("PID")
	.S DIR("A")="Enter description of change",DIR(0)="F^3:70" D ^DIR K DIR Q:$D(DIRUT)  S XMB(3)=Y
	.S XMB="FB INSURANCE CHANGE",XMDUZ=$S($G(DUZ):DUZ,1:.5) D ^XMB
	K DIC,DIE,FBX,VA,XMB,XMDUZ,Y
	Q

IBACVA
IBACVA	;ALB/CPM - PROCESS CHAMPVA PATIENT MOVEMENTS ; 27-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PROC	; Process patient movements for CHAMPVA inpatients.
	;
	; - quit if the software is not fully installed
	I '$$ON^IBACVA2() G PROCQ
	;
	; - send bulletin for CHAMPVA admissions
	I DGPMP="",$P(DGPMA,"^",2)=1 D ADM^IBACVA2 G PROCQ
	;
	; - determine if admission has been billed
	S IBCVAPM=$P($S(DGPMA:DGPMA,1:DGPMP),"^",14)
	S IBCVA=$P(+$G(^DGPM(IBCVAPM,0)),".")
	S IBBILLED=$$PREV^IBACVA1(DFN,IBCVA,IBCVAPM)
	;
	; - if admission was deleted, cancel the charge (if billed)
	I DGPMA="",$P(DGPMP,"^",2)=1 G:'IBBILLED PROCQ D  G PROCQ
	.S IBCRES=$O(^IBE(350.3,"B","CHAMPVA ADMISSION DELETED",0))
	.S:'IBCRES IBCRES=24
	.D CANCH^IBECEAU4(IBBILLED,IBCRES,0,1)
	;
	; - if delete a discharge -> bulletin
	I DGPMA="",$P(DGPMP,"^",2)=3 D WARN^IBACVA2 G PROCQ
	;
	; - if edit a discharge, change date -> bulletin
	I DGPMA,DGPMP,$P(DGPMA,"^",2)=3,$P(+DGPMA,".")'=$P(+DGPMP,".") D WARN^IBACVA2(+DGPMP,+DGPMA) G PROCQ
	;
	; - if discharged, bill the subsistence charge
	I DGPMP="",$P(DGPMA,"^",2)=3,'IBBILLED D
	.S IBSL=IBCVAPM,IBBDT=$$FMTH^XLFDT(IBCVA,1),IBEDT=$$FMTH^XLFDT(+DGPMA\1,1)
	.D BILL^IBACVA1
	;
PROCQ	K IBY,IBFAC,IBSITE,IBSERV,IBSL,IBCHGT,IBBILLED,IBBDT,IBEDT,IBD,IBDT
	K IBCHG,IBFR,IBTO,IBATYP,IBLIM,IBN,IBUNIT,IBCVA,IBBILLED,IBCVAPM
	K %H,VA,VAIP,VAERR,X
	Q

IBACVA1
IBACVA1	;ALB/CPM - BILL CHAMPVA SUBSISTENCE CHARGE ; 29-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BILL	; Create the CHAMPVA inpatient subsistence charge.
	S IBY=1 I '$$CHECK^IBECEAU(0) D ERRMSG^IBACVA2(1) G BILLQ
	S (IBCHGT,IBBILLED)=0
	;
	; - loop through each day of the admission, or until limit reached.
	F IBD=IBBDT:1:IBEDT S %H=IBD D YMD^%DTC S IBDT=X D  Q:IBY<0!(IBBILLED)
	.I IBBDT'=IBEDT S VAIP("D")=IBDT_.2359 D IN5^VADPT Q:'VAIP(10)  ; on leave
	.D LIM(IBDT) Q:IBY<0  ; can't find maximum limit
	.D PD(IBDT) Q:IBY<0  ; can't find daily per diem
	.S:'IBCHGT IBFR=IBDT ; set 'from date' on 1st pass
	.S IBCHGT=IBCHGT+IBCHG,IBTO=IBDT ; build cumulative charge/set 'to date'
	.I IBCHGT'<IBLIM S IBCHGT=IBLIM,IBBILLED=1 ; quit if max limit reached
	;
	; - quit if there is no error, no charge to bill.
	I IBY=1,'IBCHGT W:$G(IBJOB)=4 !!,"There are no charges to be billed for this admission!" G BILLQ
	;
	; - send error message if error occurs.
	I $G(IBJOB)'=4,IBY<0 D ERRMSG^IBACVA2(1) G BILLQ
	;
	; - display message and get confirmation for Cancel/Edit/Add.
	I $G(IBJOB)=4 D  G:IBY<0 BILLQ
	.W !!,"The following billing parameters have been calculated:"
	.W !!,"    Bill From: ",$$DAT1^IBOUTL(IBFR)
	.W !,"      Bill To: ",$$DAT1^IBOUTL(IBTO)
	.W !,"       Charge: $",IBCHGT,!
	.D PROC^IBECEAU4("add")
	;
	; - bill the charge
	W !,"Billing the CHAMPVA inpatient subsistence charge..."
	S IBUNIT=1,IBDESC="CHAMPVA SUBSISTENCE",IBCHG=IBCHGT,IBSL="405:"_IBSL
	D ADD^IBECEAU3 W "completed."
	;
	; - need to pass to AR when I get an AR Category...
	; - AND, set IBCOMMIT=1 for C/E/A
	;
BILLQ	Q
	;
LIM(DATE)	; Find the CHAMPVA subsistence limit on DATE.
	;  Input:    DATE  --  The date on which to determine the limit
	;  Output:  IBLIM  --  The maximum subsistence charge for an episode
	N X S IBLIM=0
	S X=$O(^IBE(350.1,"E","CHAMPVA LIMIT",0)) I 'X S IBY="-1^IB083" G LIMQ
	S X=$O(^IBE(350.2,"AIVDT",+X,-(DATE+.1))),X=$O(^(+X,0))
	S IBLIM=$P($G(^IBE(350.2,+X,0)),"^",4) I 'IBLIM S IBY="-1^IB084"
LIMQ	Q
	;
PD(IBDT)	; Find the CHAMPVA per diem charge on IBDT.
	;  Input:    IBDT  --  The date on which to determine the per diem
	;  Output:  IBCHG  --  The CHAMPVA per diem charge on IBDT
	;          IBATYP  --  CHAMPVA Action Type
	S IBATYP=$O(^IBE(350.1,"E","CHAMPVA SUBSISTENCE",0)),IBCHG=0
	I 'IBATYP S IBY="-1^IB008" G PDQ
	D COST^IBAUTL2 I 'IBCHG S IBY="-1^IB029"
PDQ	Q
	;
PREV(DFN,DATE,LINK)	; Billed an admission the CHAMPVA subsistence charge?
	;  Input:     DFN  --  Pointer to patient in file #2
	;            DATE  --  Event (admission) date
	;            LINK  --  Pointer to mvmt in file #405
	;  Output:      0  --  Admission has not been billed, or
	;              >0  --  ien of billed charge in file #350
	I '$G(DFN)!'$G(DATE)!'$G(LINK) G PREVQ
	N IBN,IBND,IBP
	S IBP=0 F  S IBP=$O(^IB("ACVA",DFN,DATE,IBP)) Q:'IBP  S IBN=$$LAST^IBECEAU(IBP),IBND=$G(^IB(IBN,0)) I $P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",5)'=2,$P(IBND,"^",4)=("405:"_LINK),"^3^4^"[("^"_+$P(IBND,"^",5)_"^") S Y=IBN Q
PREVQ	Q +$G(Y)

IBACVA2
IBACVA2	;ALB/CPM - BULLETINS FOR CHAMPVA BILLING ; 29-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ERRMSG(IBIND)	; Process CHAMPVA Error Messages.
	;  Input:    IBIND  --  1=>billing 0=>cancelling
	K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - ERROR ENCOUNTERED"
	S IBT(1)="An error occurred while "_$S($G(IBIND):"billing",1:"cancelling")_" the CHAMPVA inpatient subsistence charge"
	S IBT(2)=$S($G(IBIND):"to",1:"for")_" the following patient:"
	S IBT(3)=" " S IBC=3
	S IBDUZ=DUZ D PAT^IBAERR1
	S Y=+DGPMA D DD^%DT
	S IBC=IBC+1,IBT(IBC)="Disc Date: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="The following error was encountered:"
	S IBC=IBC+1,IBT(IBC)=" "
	D ERR^IBAERR1
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Please review the circumstances surrounding this error and use the"
	S IBC=IBC+1,IBT(IBC)="Cancel/Edit/Add Patient Charges' option to bill or cancel any necessary"
	S IBC=IBC+1,IBT(IBC)="charges."
	D SEND
	Q
	;
ADM	; Send a bulletin when CHAMPVA patients are admitted.
	K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - CHAMPVA PATIENT"
	S IBT(1)="The following CHAMPVA patient has been admitted:"
	S IBT(2)=" ",IBC=2
	S IBDUZ=DUZ D PAT^IBAERR1
	S Y=+DGPMA D DD^%DT
	S IBC=IBC+1,IBT(IBC)=" Adm Date: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="This patient will be automatically billed the CHAMPVA inpatient"
	S IBC=IBC+1,IBT(IBC)="subsistence charge when discharged."
	D SEND
	Q
	;
WARN(IBB,IBE)	; Send bulletins when discharges are edited or deleted.
	;  Input:    IBB  --  Discharge date before edit
	;            IBE  --  Discharge date after edit
	K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - DISCHARGE CHANGED"
	S IBT(1)="A discharge was "_$S($G(IBB):"edited",1:"deleted")_" for the following CHAMPVA patient:"
	S IBT(2)=" " S IBC=2
	S IBDUZ=DUZ D PAT^IBAERR1
	S IBC=IBC+1,IBT(IBC)=" "
	I $G(IBB) D
	.S Y=IBB D DD^%DT S IBC=IBC+1,IBT(IBC)="Prev Discharge Date: "_Y
	.S Y=IBE D DD^%DT S IBC=IBC+1,IBT(IBC)=" New Discharge Date: "_Y
	.S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Please review the circumstances surrounding these movement changes,"
	S IBC=IBC+1,IBT(IBC)="and use the 'Cancel/Edit/Add Patient Charges' option to bill or cancel"
	S IBC=IBC+1,IBT(IBC)="any necessary charges."
	D SEND
	Q
	;
SEND	; Send bulletin to recipients of the Means Test billing mailgroup.
	D MAIL^IBAERR1
	K IBC,IBT,IBPT,XMSUB,XMY,XMTEXT,XMDUZ
	Q
	;
ON()	; Is the CHAMPVA billing module fully installed?
	N X S X=+$O(^IBE(350.1,"E","CHAMPVA SUBSISTENCE",0))
	Q +$P($G(^IBE(350.1,X,0)),"^",3)

IBAERR
IBAERR	;ALB/AAS - INTEGRATED BILLING ERROR PROCESSING ROUTINE ; 14-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
%	;  -error processor
	;
	; Quit if the Means Test Nightly Compilation or Discharge job called
	; routine IBR directly.
	Q:$G(IBJOB)=1!($G(IBJOB)=2)
	;
	; If Means Test charge, divert control to routine IBAERR1.
	I $D(IBNOS),$P($G(^IB(+IBNOS,0)),"^",16) S IBY=Y G ^IBAERR1
	;
	; -- If copay exemption divert control to routine IBAERR2
	I $D(IBEXERR) G ^IBAERR2
	;
	I $D(ZTQUEUED) D BULL G END
	G:+Y>0 END
	S X2=$P(Y,"^",2) F K=1:1 S X=$P(X2,";",K) Q:X=""  S X1=$O(^IBE(350.8,"AC",X,0)) I $D(^IBE(350.8,+X1,0)) S X3="E"_$P(^(0),"^",5) D @X3
	I $P(Y,"^",3)]"" W !,$P(Y,"^",3)
END	K VA,VADM,VAERR
	Q
	;
E1	W !,$P(^IBE(350.8,+X1,0),"^",2)
	Q
	;
E2	;
	Q
E3	; -- Send no service bulletin
	K XMY,IBTXT
	S XMSUB="INTEGRATED BILLING BACKGROUND ERROR",XMDUZ="INTEGRATED BILLING PACKAGE"
	S IBTXT(1)="Processing of Pharmacy co-pay entries in Integrated Billing has"
	S IBTXT(2)="Stopped.",IBTXT(3)=" "
	S IBTXT(4)="The Pharmacy Service Pointer does not match any entries in the "
	S IBTXT(5)="IB ACTION TYPE file."
	S IBTXT(6)=" "
	S IBTXT(7)="Immediate action required."
	S IBTXT(8)="Check the IB SERVICE/SECTION in the PHARMACY SITE file."
	S IBTXT(9)="It must match the SERVICE field for pharmacy action types in the "
	S IBTXT(10)="IB ACTION TYPE file.  (internal entry number 1 is checked)"
	D SEND
	Q
	;
BULL	;  -send error bulletin to group when error occurs in background
	;
	K XMY,IBTXT
	S XMSUB="INTEGRATED BILLING BACKGROUND ERROR",XMDUZ="INTEGRATED BILLING PACKAGE"
	S IBTXT(1)="Processing of entries in Integrated Billing has"
	S IBTXT(2)="been suspended "_$S('$D(IBTAG):"while passing to AR the following",IBTAG=2:"while processing new/renew Rxs: ",IBTAG=3:"while canceling: ",1:"while updating:"),IBTXT(3)=" ",IBC=3
	I $D(IBSAVX)!($D(IBSAVXU)),'$D(IBNOS) D SAVX
	I $D(IBNOS) F IBI=1:1 S IBNOS1=$P(IBNOS,"^",IBI) Q:'IBNOS1  I $D(^IB(IBNOS1,0)) S IBNOD=^(0) D BD
	S IBC=IBC+1,IBTXT(IBC)=""
	S IBC=IBC+1,IBTXT(IBC)="You should determine if these co-payments have been passed to"
	S IBC=IBC+1,IBTXT(IBC)="Accounts Receivable."
	S IBC=IBC+1,IBTXT(IBC)="The following error(s) was encountered:",IBC=IBC+1,IBTXT(IBC)=""
	D ERRTXT
	S IBC=IBC+1,IBTXT(IBC)=""
	I $D(IBWHER) S IBC=IBC+1,IBTXT(IBC)=$P($T(IBWHER+IBWHER),";;",2,99)
	;
SEND	S XMTEXT="IBTXT(",XMY(DUZ)=""
	;
	S IBGRP=$S($D(^IBE(350.9,1,0)):$P(^(0),"^",9),1:"") F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
	D ^XMD K XMSUB,XMY,XMDUZ,XMTEXT,IBTXT,IBC,IBNOD,IBNOS1,IBI
	Q
	;
ERRTXT	S X2=$P(Y,"^",2) F K=1:1 S X=$P(X2,";",K) Q:X=""  S X1=$O(^IBE(350.8,"AC",X,0)),IBC=IBC+1,IBTXT(IBC)="    "_$S($D(^IBE(350.8,+X1,0)):$P(^(0),"^",2),1:"Unknown Error")
	I $P(Y,"^",3)]"" S IBC=IBC+1,IBTXT(IBC)="    "_$P(Y,"^",3)
	Q
	;
BD	I IBI=1 S DFN=$P(IBNOD,"^",2),IBATYPN=$S($D(^IBE(350.1,$P(IBNOD,"^",3),0)):$P(^(0),"^"),1:"") D DEM
	S IBC=IBC+1,IBTXT(IBC)="   "_$E($P(IBNOD,"^")_"           ",1,14)_$E($P(IBNOD,"^",8)_"                      ",1,24)_$E($P(IBNOD,"^",11)_"            ",1,12)_"  $"_$P(IBNOD,"^",7)
	Q
DEM	N X,Y D DEM^VADPT
	S IBC=IBC+1,IBTXT(IBC)=" Patient: "_VADM(1)_"   Pt. Id: "_VA("PID")_"  Type: "_IBATYPN
	Q
	;
SAVX	S IBAX=$S($D(IBSAVXU):IBSAVXU,$D(IBSAVX):IBSAVX,1:"") Q:IBAX=""
	S IBATYPN=$S('$P(IBAX,"^",3):"",$D(^IBE(350.1,$P(IBAX,"^",3),0)):$P(^(0),"^",1),1:""),DFN=$P(IBAX,"^",2) D DEM
	S IBC=IBC+1,IBTXT(IBC)=" Service: "_$S($D(^DIC(49,+IBAX,0)):$P(^(0),"^"),1:"")
	S IBC=IBC+1,IBTXT(IBC)="    User: "_$S($D(^VA(200,+$P(IBAX,"^",4),0)):$P(^(0),"^"),$D(^VA(200,+DUZ,0)):$P(^(0),"^"),1:"")
	S IB="" F  S IB=$O(IBSAVX(IB)) Q:IB=""  D
	.K IBARXN I +$P(IBSAVX(IB),"^",1)=52 S IBARXN="Rx# "_$P($G(^PSRX(+$P($P(IBSAVX(IB),"^"),":",2),0)),"^") I $P($P(IBSAVX(IB),"^"),";",2)'="" S IBARXN=IBARXN_"/Refill# "_$P($P($P(IBSAVX(IB),"^"),";",2),":",2)
	.S IBC=IBC+1,IBTXT(IBC)="   Entry: "_$S($D(IBARXN):IBARXN,1:$P(IBSAVX(IB),"^",1)) K IBARXN
	S IB="" F  S IB=$O(IBSAVXU(IB)) Q:IB=""  S IBC=IBC+1,IBTXT(IBC)="  Ref No: "_$S($D(^IB(+IB,0)):$P(^(0),"^"),1:"")
	Q
	;
1	S Y="-1^IB001" Q  ;patient eligibility data not calculated
	Q
IBWHER	;
	;;Error occurred before Integrated Billing entry created, Reprint labels or       recancel after correcting error.
	;;Error occurred after Integrated Billing entry created but Accounts Receivable   not updated.
	;;Error occurred during posting to Accounts Receivable.  Check to see if amount  passed!
	;;Error occurred after successful passing of charges to AR, IB entry may not be   properly updated.
	;;Error occurred during eligibility determination for Co-pay.

IBAERR1
IBAERR1	;ALB/CPM - INTEGRATED BILLING ERROR PROCESSING ROUTINE (CON'T) ; 03-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; This routine will be used to send mail messages when errors
	; have occurred during the processing of Means Test/Category C
	; charges.
	;  Input:  IBJOB = 1  Nightly Compilation job
	;                  2  Discharge job
	;                  4  Add/Edit/Cancel Charges
	;                  5  Appointment Event Driver
	;                  7  Means Test Event Driver
	;                  8  OPT Billing Update
	;          DFN {opt}, IBDUZ, IBY, IBWHER
	;
	N IBSTART K IBT
	I $D(DFN)#2 S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$S($D(IBPT)#2:$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" -",1:"CATEGORY C BILLING")_" ERROR ENCOUNTERED"
	S IBT(1)="An error has been encountered while processing Means Test/Category C charges"
	S IBT(2)="during the "_$S(IBJOB=1:"Nightly Compilation job",IBJOB=2:"Discharge job",IBJOB=4:"Cancel/Edit/Add Option",IBJOB=5:"Check Out job",IBJOB=7:"Means Testing",1:"OPT Billing Update")_" for the following patient:"
	S IBT(3)=" ",IBC=3
	D PAT
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="The Means Test/Category C billing history for this patient must be reviewed."
	S IBC=IBC+1,IBT(IBC)="The following error was encountered:"
	S IBC=IBC+1,IBT(IBC)=" "
	S:IBJOB=4 IBSTART=IBC D ERR
	S IBC=IBC+1,IBT(IBC)=" "
	S IBM=$P($T(TEXT+IBWHER^IBAMTEL),";;",2,99),IBC=IBC+1
	S:$L(IBM)<80 IBT(IBC)=IBM
	I $L(IBM)>79 S IBB=$E(IBM,1,79),IBT(IBC)=$P(IBB," ",1,$L(IBB," ")-1),IBC=IBC+1,IBT(IBC)=$P(IBM," ",$L(IBB," "),999)
	I IBJOB=4 F IBI=IBSTART:1:IBC W !,IBT(IBI)
	D MAIL K IBT,IBM,IBB,IBC,IBPT,XMSUB,XMY,XMTEXT,XMDUZ
	Q
	;
PAT	; Set up patient demographic and user data for message.
	S IBC=IBC+1,IBT(IBC)="  Patient: "_$S($D(IBPT)#2:$P(IBPT,"^")_"          Pt. ID: "_$P(IBPT,"^",2),1:"Not Defined")
	S IBC=IBC+1,IBT(IBC)="     User: "_$P($G(^VA(200,+IBDUZ,0)),"^")
	Q
	;
ERR	; Set up error message text.
	S X2=$P(IBY,"^",2) F K=1:1 S X=$P(X2,";",K) Q:X=""  D
	. S X1=$O(^IBE(350.8,"AC",X,0)),IBC=IBC+1
	. S IBT(IBC)=" "_$S($D(^IBE(350.8,+X1,0)):$P(^(0),"^",2),X]"":X,1:"Unknown Error")
	I $P(IBY,"^",3)]"" S IBC=IBC+1,IBT(IBC)=" "_$P(IBY,"^",3)
	K X,X1,X2 Q
	;
MAIL	; Transmit.
	N IBI,IBGRP S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY
	;S IBGRP=$P($G(^IBE(350.9,1,0)),"^",11)
	;F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
	S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),"^",11),0)),"^")
	I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
	D ^XMD
	Q

IBAERR2
IBAERR2	;ALB/AAS - RX COPAY EXEMPTION ERROR PROCESSOR ; 15-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- medication copayment exemtpion errors
	Q:'$G(IBEXERR)!('$G(IBWHER))!('$G(IBJOB))
	;
	N IBP,IBALERT
	S IBP=$$PT^IBEFUNC(DFN)
	I $$ALERT^IBAUTL7 S IBALERT=IBEXERR+10 D SEND^IBAERR3 G BQ
	D BULL
BQ	Q
	;
BULL	; -- send bulletin
	;
	S XMSUB="Medication Copayment Exemption Error"
	S IBT(1)="The following Medication Copayment Exemption error occured"
	S IBT(2)="during the "_$P($T(JOB+(IBJOB-10)),";;",2)
	S IBT(3)=$P($T(WHERE+(IBWHER-10)),";;",2)
	S IBT(4)=""
	;
	S IBT(5)="       Patient: "_$E($P(IBP,"^")_"               ",1,25)_"  PT. ID: "_$P(IBP,"^",2)
	I '$D(IBEVTP) N IBEVTP S IBEVTP=$$LST^IBARXEU0(DFN,DT)
	S IBT(6)="Current Status: "_$E($$TEXT^IBARXEU0($P(IBEVTP,"^",4))_"    ",1,10)_" - "_$P($G(^IBE(354.2,+$P(IBEVTP,"^",5),0)),"^")
	S IBT(7)=""
	S IBT(8)="    by: "_$P($G(^VA(200,DUZ,0)),"^")
	S Y=DT D D^DIQ S IBT(9)="    on: "_$P(Y,"@")
	S IBT(10)=""
	S IBT(11)="The following error occured:"
	S IBT(12)=$P($T(ERR+IBEXERR),";;",2)
	S IBT(13)=""
	S IBT(14)="Use option Manually Change Copay Exemption (Hardships)"
	S IBT(15)="to verify exemption status."
	D SEND
BULLQ	Q
	;
SEND	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMN=0
	S XMY(DUZ)=""
	S IBGRP=$P(^IBE(350.9,1,0),"^",9)
	F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
	D ^XMD
	K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB,XMZ
	Q
	;
JOB	;;
	;;Medication Copayment Installation/Conversion Process
	;;Automated Exemption Link to Income Tests
	;;Manual Update/Hardship exemption option
	;;Automated Exemption Creation during Copay Billing
	;;Print/Verify Medication Copayment Exemption Option
	;;Automated Exemption Link to Patient Eligibility data
	;;
WHERE	;;
	;;while attempting to add a patient to the Billing Patient File.
	;;while attempting to add a Billing Exemption.
	;;from the automated exemption link to the Income tests.
	;;while updating the current exemption status.
	;;while inactivating an exemption record.
	;;while looping thorough entries.
	;;while processing in Accounts Receivable.
	;;
ERR	;;
	;;Entry locked by another user.
	;;Failed to add patient to Billing Patient file.
	;;Date in incorrect format.
	;;Failed to add exemption record to Billing Exemptions file.
	;;Failed while updating exemption record.
	;;Failed while updating current exemption status
	;;Failed while inactivating old exemption status
	;;Failed to add exemption.  User not defined
	;;Failed to add Patient to Billing Patient file, entry locked.
	;;Failed during processing of decrease adjustment or refund.

IBAERR3
IBAERR3	;ALB/AAS - RX COPAY EXEMPTION ALERT PROCESSOR ; 15-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- medication copayment exemption errors
	;
SEND	; -- use kernel alerts
	N X,Y,IBA,IBP,XQA,XQAID,XQAKILL,XQAMSG,XQAROU,XQAOPT,XQADATA,DIC,DA,DR,DIE,DLAYGO
	S:'$D(IBALERT) IBALERT=$G(IBEXERR)+10 G:'IBALERT SENDQ
	S IBP=$$PT^IBEFUNC(DFN)
	S IBA=$G(^IBE(354.5,IBALERT,0)) G:IBA="" SENDQ
	S X=$P($G(^IBE(354.5,IBALERT,3)),"^",1) I X="D" G SENDQ
	S X=+IBALERT,DIC(0)="L",DIC="^IBA(354.4,",DLAYGO=354.4 K DD,DO D FILE^DICN S IBDA=+Y
	S XQAID=$P(IBA,"^",2)_IBDA,XQAKILL=0
	S XQAMSG=$P(IBP,"^")_" ("_$P(IBP,"^",3)_") - "_$P(IBA,"^",3)
	I $P(IBA,"^",5)="R" S XQAROU=$S($P(IBA,"^",6)'="":$P(IBA,"^",6,7),1:$P(IBA,"^",7))
	;
	S XQADATA=$G(IBALERT)_";"_$G(DFN)_";"_$G(IBEXDA)_";"_$G(IBJOB)_";"_$G(IBWHER)_";"_$G(DUZ)_";"_$G(DT)_";"_$G(IBDA)
	;
	S DA=IBDA,DIE="^IBA(354.4,",DR=".02///NOW" D ^DIE K DIC,DIE,DA,DR
	;
	I $G(IBEXDA) S DA=IBEXDA,DIE="^IBA(354.1,",DR=".09////^S X=IBDA" D ^DIE K DIC,DIE,DA,DR
	;
	D TOWHO
	;
	D SETUP^XQALERT
	;
SENDQ	I $G(IBEXERR) S IBEXERR="" ; clear error flag
	Q
	;
TOWHO	; -- set xqa array to deliver to
	N I,J
	S I="" F  S I=$O(^IBE(354.5,+IBALERT,200,I)) Q:'I  S J=+^(I,0),XQA(J)=""
	S I="" F  S I=$O(^IBE(354.5,+IBALERT,2,I)) Q:'I  S J=+^(I,0),XQA("G."_$P($G(^XMB(3.8,+J,0)),"^"))=""
	I '$D(XQA) S J=+$P($G(^IBE(350.9,1,0)),"^",$S($G(IBALERT)<10:13,1:9)),XQA("G."_$P($G(^XMB(3.8,+J,0)),"^"))=""
	;S XQA(DUZ)=""
TOWHOQ	Q
	;
1	; -- process info only alerts
	Q:$G(XQADATA)=""  K XQAKILL
	N DFN,IBP,IBCLEAR,DIR,DIRUT,DUOUT S IBCLEAR="YES"
	D WRITE,CLEAR,UP
	K IBCLEAR Q
	;
11	; -- process action alerts
	Q:$G(XQADATA)=""  K XQAKILL
	N DFN,IBP,IBCLEAR,DIR,DIRUT,DUOUT S IBCLEAR="YES"
	D WRITE,PROC,CLEAR,UP
	Q
	;
PROC	; -- process alert
	; -- run ^ibarxex to see if okay
	N IBDFN,DIR,X,Y W !!
	S DIR("?")="Enter YES to run the Manual Update option for this patient or NO if everything appear in order or enter '^' to exit and save this alert for later processing."
	S DIR(0)="Y",DIR("A")="Run Manual Update Option",DIR("B")="YES" D ^DIR
	I $D(DIRUT)!(Y=0) S IBCLEAR="NO" G PROCQ
	S IBDFN=DFN D EN^IBARXEX S DFN=IBDFN
PROCQ	Q
	;
CLEAR	; -- clear entry in 354.4 and alert in 354.1
	Q:$D(DIRUT)
	N DIR,X,Y W !!
	S DIR("?")="Enter YES to clear this alert for all users or NO to clear this alert for the current user or '^' to exit and save this alert for later processing."
	S DIR(0)="Y",DIR("A")="Clear alert for all users ('^' to save alert)",DIR("B")=IBCLEAR D ^DIR
	I $D(DIRUT) G CLEARQ
	; -- xqakill=0 clear for all, =1 clear for current user only
	S XQAKILL='Y
	W !
CLEARQ	Q
	;
WRITE	; -- write out long message
	;    xqadata = alert type;dfn;exemption;ibjob;ibwhere;duz;dt;alert entry
	S DFN=$P(XQADATA,";",2),IBP=$$PT^IBEFUNC(DFN)
	W !!,"Patient: ",$P(IBP,"^"),?40,$P(IBP,"^",2)
	D DISP^IBARXEU(DFN,DT,3,0)
	W:+XQADATA<11 !!,$P($T(MSG+(+XQADATA)),";;",2)
	W:+XQADATA>10 !!,"The error that occured was: ",$P($T(ERR+(+XQADATA-10)^IBAERR2),";;",2),!,"Processed"
	W " by ",$P($G(^VA(200,+$P(XQADATA,";",6),0)),"^")," on ",$$DAT1^IBOUTL($P(XQADATA,";",7)),"."
	;
	; -- this only handles ibjobs>10 (exemption)
	I $P(XQADATA,";",4)>10 W !,"This occured during the ",$P($T(JOB+($P(XQADATA,";",4)-10)^IBAERR2),";;",2)
	W:$P(XQADATA,";",5)>10 !,$P($T(WHERE+($P(XQADATA,";",5)-10)^IBAERR2),";;",2)
	;
WRITEQ	Q
	;
UP	; -- update error file with user
	Q:'$D(XQAKILL)
	N DA,DIC,DIE,DR,X,Y
	G:'$P(XQADATA,";",8) UPQ
	S DA=$P(XQADATA,";",8) S X=$G(^IBA(354.4,DA,0)) G:X=""!($P(X,"^",3)'="") UPQ
	S DIE="^IBA(354.4,",DR=".03////"_DUZ_";.04///NOW" D ^DIE
	;
	G:$P($G(^IBA(354.1,+$P(XQADATA,";",3),0)),"^",9)="" UPQ
	K DIC,DIE,DA,DR,X,Y
	S DA=$P(XQADATA,";",3),DIE="^IBA(354.1,",DR=".09///@" D ^DIE
UPQ	Q
	;
MSG	;;
	;;Patient has been given a Hardship Exemption
	;;Patient's Hardship Exemption has been removed
	;;Patient's Exemption based on Income has expired
	;;
	Q
	;
PURGE	; -- purge entries in 354.4, clear pointer in 354.1, delete alert
	;    purge cleared entries older than 30 days, all over 60 days
	;
	; -- called by IBAMTC (nightly means test job)
	;    not user interactive (friendly)
	;
	Q:'$O(^IBA(354.4,"AC",0))
	S X1=DT,X2=-30 D C^%DTC S IB30=X
	S X1=DT,X2=-60 D C^%DTC S IB60=X
	S IBDT=""
	W:'$D(ZTQUEUED) !!,"Purging Alerts..."
	F  S IBDT=$O(^IBA(354.4,"AC",IBDT)) Q:'IBDT!(IBDT>IB30)  S IBDA=0 F  S IBDA=$O(^IBA(354.4,"AC",IBDT,IBDA)) Q:'IBDA  D
	.;
	.S X=$G(^IBA(354.4,IBDA,0))
	.I '$P(X,"^",3),(IBDT>IB60) Q
	.;
	.S XQAID=$P(^IBE(354.5,+1,0),"^",2)_IBDA
	.S X=$O(^IBA(354.1,"ALERT",IBDA,0)) I X S DA=X,DR=".09///@",DIE="^IBA(354.1," D ^DIE K DA,DR,DIE
	.;
	.S IBALERT=+$G(^IBA(354.4,+IBDA,0))
	.D TOWHO S XQAKILL=0 D DELETEA^XQALERT
	.;
	.S DA=IBDA,DIK="^IBA(354.4," D ^DIK K DA,DIK
	.Q
	K IB30,IB60,IBDA,XQA,XQAID,XQAKILL,X,X1,X2

IBAFIL
IBAFIL	;ALB/AAS - INTEGRATED BILLING, PASS OFF TO BE FILED ; 25-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$G(DFN) S Y="-1^IB002" Q  ; Invalid patient pointer
	I '$G(IBSEQNO) S Y="-1^IB017" Q  ; Sequence number is missing
	I '$G(IBDUZ) S Y="-1^IB007" Q  ; Invalid user ID
	I '$D(^IBE(350.9,1,0)) D ^IBR Q  ; no site parameters - file in foreground
	;
	I '$P(^IBE(350.9,1,0),"^",3) N Y D ^IBR Q  ; file in foreground
	;
	F IBNOW=IBNOW:.000001 L +^IB("APOST",IBNOW):0 I $T,'$D(^IB("APOST",IBNOW)) Q
	S ^IB("APOST",IBNOW,DFN,IBSEQNO,IBDUZ)=IBNOS
	L -^IB("APOST",IBNOW)
	;
	;  - if filer not started, start it.
	I $P(^IBE(350.9,1,0),"^",4)="",'$P(^(0),"^",10) D ZTSK^IBEF Q
	;
	;check to see if not running, wait 2 seconds, test again
	;before restarting (time to deque)
	D EN^IBECK I IBFLAG[3 H 2 D EN^IBECK I IBFLAG[3 D S1^IBEFUTL
	K IBFLAG
	Q
	;
REPASS	;  -called from IB INCOMPLETE print template
	D NOW^%DTC S IBNOW=%
	S DFN=$P(^IB(D0,0),"^",2),IBATYP=$P(^(0),"^",3),IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5),IBDUZ=DUZ,IBNOS=D0
	D IBAFIL
	K IBN,IBNOW,DFN,IBDUZ,IBSEQNO,IBATYP
	Q

IBAMTBU
IBAMTBU	;ALB/CPM - MEANS TEST BILLING BULLETINS ; 09-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PM	; Send bulletin when patient movements for a Category C patient
	; have been edited, deleted, or retro-actively added.
	;        Input:  IBJOB = 3 (Edited, deleted movements)
	;                      = 6 (Retro-actively added movements)
	;                DFN, DUZ, DGPMA, DGPMP
	;
	; - quit if a bulletin is not needed
	Q:'$$APM^IBAMTD2
	;
	; - generate the bulletin
	K IBT
	S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - MOVEMENT CHANGE"
	S IBMTYP=$S(DGPMP="":$P(DGPMA,"^",2),1:$P(DGPMP,"^",2))
	I IBJOB=3 S IBT(1)="A"_$S(IBMTYP=1:"n admission",IBMTYP=2:" transfer",IBMTYP=3:" discharge",IBMTYP=6:" treating specialty",1:" lodger movement")_" has been "_$S(DGPMA]"":"edited",1:"deleted")
	I IBJOB=6 S IBT(1)="A "_$S($P(DGPMA,"^",2)=6:"treating specialty",1:"transfer")_" has been retro-actively added"
	S IBT(1)=IBT(1)_" for the following patient:" S IBT(2)=" ",IBC=2
	S IBDUZ=DUZ D PAT^IBAERR1
	S Y=$S(DGPMA:+DGPMA,1:+DGPMP) D DD^%DT
	S IBC=IBC+1,IBT(IBC)=$S(IBMTYP=1:" Adm",IBMTYP=2:"Trnf",IBMTYP=3:"Disc",IBMTYP=6:"Spec",1:"Lodg")_" Date: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	;
	; - display before/after critical values and instructions
	D DISP^IBAMTBU1
	;
	; - deliver message
	D SEND
	Q
	;
CTPT	; Send bulletin for the discharge of a Continuous Patient.
	;  Input: DGPMA, DFN, DUZ, IBASIH, TRAN
	S IBPT=$$PT^IBEFUNC(DFN),Y=+DGPMA D D^DIQ K IBT
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - CONTINUOUS PATIENT"
	S IBT(1)="The following continuous patient was discharged on  "_Y
	S IBT(2)=" ",IBC=2
	S IBDUZ=DUZ D PAT^IBAERR1
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Discharge Type: "_$S($P($G(^DG(405.1,+$P(DGPMA,"^",4),0)),"^")]"":$P(^(0),"^"),1:"TYPE UNKNOWN")
	I TRAN S IBC=IBC+1,IBT(IBC)="Transferred To: "_$S($P($G(^DIC(4,+$P(DGPMA,"^",5),0)),"^")]"":$P(^(0),"^"),1:"FACILITY UNKNOWN")
	S IBC=IBC+1,IBT(IBC)=" "
	; - message for ASIH or non-transfers
	I 'TRAN!(IBASIH) D  G SEND
	. S IBC=IBC+1 I IBASIH S IBT(IBC)="Please note that, since this patient went out on ASIH,"
	. E  S IBT(IBC)="Since the patient was not transferred to another facility,"
	. S IBT(IBC)=IBT(IBC)_" the patient's"
	. S IBC=IBC+1,IBT(IBC)="discharge date was entered into the Continuous Patient file, 'unflagging'"
	. S IBC=IBC+1,IBT(IBC)="the patient as continuous.  The patient will now be charged the Category"
	. S IBC=IBC+1,IBT(IBC)="C copayment (Medicare Deductible) for any future episodes of Hospital or"
	. S IBC=IBC+1,IBT(IBC)="Nursing Home care, if s/he is Category C at that time."
	. Q:IBASIH
	. S IBC=IBC+1,IBT(IBC)=" "
	. S IBC=IBC+1,IBT(IBC)="If the patient was in fact transferred, then the Discharge Date must be"
	. S IBC=IBC+1,IBT(IBC)="deleted from the Continuous Patient file."
	;
	; - message for transferred patients
	S IBC=IBC+1,IBT(IBC)="Please note that, since the patient was transferred to another facility,"
	S IBC=IBC+1,IBT(IBC)="the patient's discharge date was not entered into the Continuous Patient"
	S IBC=IBC+1,IBT(IBC)="file.  If the patient does not receive continuous care while outside of"
	S IBC=IBC+1,IBT(IBC)="your facility, you must manually enter the date on which the patient's"
	S IBC=IBC+1,IBT(IBC)="care was discontinued into the Continuous Patient file."
	;
SEND	; - send message and quit.
	D MAIL^IBAERR1
	K IBVAL,IBT,IBMTYP,IBC,IBI,IBPT,XMSUB,XMY,XMTEXT,XMDUZ
	Q

IBAMTBU1
IBAMTBU1	;ALB/CPM - MEANS TEST BILLING BULLETINS (CON'T.) ; 09-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
OE	; Send bulletin when a Category C veteran, admitted for Observation
	; and Examination, is discharged, but has previously been billed
	; copayment and per diem charges.
	;   Input: DGPMA, DFN, DUZ
	;
	K IBT
	S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - O&E DISCHARGE"
	S IBT(1)="The following patient, admitted for Observation & Examination,"
	S IBT(2)="has been discharged:"
	S IBT(3)=" ",IBC=3
	S IBDUZ=DUZ D PAT^IBAERR1
	S IBC=IBC+1,IBT(IBC)=" "
	S Y=$P(DGPMA,"^") D DD^%DT
	S IBC=IBC+1,IBT(IBC)="Disc Date: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="This patient has already been charged Category C co-payment and per diem"
	S IBC=IBC+1,IBT(IBC)="charges.  The Integrated Billing 'event' action has automatically been"
	S IBC=IBC+1,IBT(IBC)="closed.  All Means Test charges for this admission must be manually"
	S IBC=IBC+1,IBT(IBC)="cancelled, and the patient's billing clock must be manually adjusted."
	G SEND^IBAMTBU ; deliver message and quit.
	;
	;
DISP	; Build before/after values, instructions for movement bulletins.
	I $D(IBVAL(1)) D
	.S IBC=IBC+1,IBT(IBC)="*** The Facility Treating Specialty was changed ***"
	.S IBC=IBC+1,IBT(IBC)=" Old Value: "_$S(IBVAL(1):$P($G(^DIC(45.7,+IBVAL(1),0)),"^"),1:" No value")
	.I $P(IBVAL(1),"^",2) S IBC=IBC+1,IBT(IBC)=$J("",12)_"(Billable Bedsection: "_$S($D(^DGCR(399.1,+$P(IBVAL(1),"^",2),0)):$P(^(0),"^"),1:"Unknown")_")"
	.S IBC=IBC+1,IBT(IBC)=" New Value: "_$S($P(IBVAL(1),"^",3):$P($G(^DIC(45.7,+$P(IBVAL(1),"^",3),0)),"^"),1:" No value")
	.I $P(IBVAL(1),"^",4) S IBC=IBC+1,IBT(IBC)=$J("",12)_"(Billable Bedsection: "_$S($D(^DGCR(399.1,+$P(IBVAL(1),"^",4),0)):$P(^(0),"^"),1:"Unknown")_")"
	.S IBC=IBC+1,IBT(IBC)=" "
	I $D(IBVAL(2)) D
	.S IBC=IBC+1,IBT(IBC)="*** The "_$S(IBMTYP=6:"Treating Specialty",1:"Movement")_" Date was changed ***"
	.S IBC=IBC+1,IBT(IBC)=" Old Value: "_$S(IBVAL(2):$$DAT2^IBOUTL(+IBVAL(2)),1:" No Value")
	.S IBC=IBC+1,IBT(IBC)=" New Value: "_$S($P(IBVAL(2),"^",2):$$DAT2^IBOUTL($P(IBVAL(2),"^",2)),1:" No Value")
	.S IBC=IBC+1,IBT(IBC)=" "
	;
	; - set up instructions
	S IBC=IBC+1,IBT(IBC)="Means Test charges have been billed for this episode of care."
	I IBMTYP=3,DGPMA="" S IBC=IBC+1,IBT(IBC)="Please review these charges and use the Cancel/Edit/Add Patient Charges option",IBC=IBC+1,IBT(IBC)="to re-open the event record, if necessary, so that billing may resume." Q
	S IBC=IBC+1,IBT(IBC)="Please review these charges and"_$S(IBMTYP=1&(DGPMA=""):"",1:" edit or")_" cancel any charges if necessary."
	Q

IBAMTBU2
IBAMTBU2	;ALB/CPM - MEANS TEST BILLING BULLETINS (CON'T.) ; 15-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
MT	; Generate the 'change in Means Test' bulletin.
	W:'DGMTINF !!,"Patient's Category C billing status has changed..."
	K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - MEANS TEST CHANGE"
	S IBT(1)="A Means Test has been "_$S(DGMTP="":"added",DGMTA="":"deleted",1:"edited")_" for the following patient:"
	S IBT(2)=" ",IBC=2,IBDUZ=DUZ D PAT^IBAERR1 S IBC=IBC+1,IBT(IBC)=" "
	S Y=+IBMT D DD^%DT S IBC=IBC+1,IBT(IBC)="Test Date: "_Y
	S IBC=IBC+1,IBT(IBC)="   Status: "_$P($$MTS^DGMTU(DFN,+$P(IBMT,"^",3)),"^")
	I "^2^6^"[("^"_+$P(IBMT,"^",3)_"^") S IBT(IBC)=IBT(IBC)_$J("",$S($P(IBMT,"^",3)=2:11,1:21))_"Agrees to Pay Deductible? "_$S($P(IBMT,"^",11):"YES",$P(IBMT,"^",11)=0:"NO",1:"UNANSWERED")
	I $P(IBMT,"^",3)=3 D ELIG^VADPT I VAEL(3) S DIC="^DPT(",DR=.3012,DA=DFN,DIQ="IBDIQ",DIQ(0)="E" D EN^DIQ1 S IBDIQ=$G(IBDIQ(2,DFN,.3012,"E")),IBT(IBC)=IBT(IBC)_$J("",13)_"SC Award Date: "_$S(IBDIQ]"":IBDIQ,1:"Unknown")
	S Y=+$P(IBMT,"^",7) I Y D DD^%DT S IBC=IBC+1,IBT(IBC)="Completed: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="This patient is no"_$S(IBCATCA:"w",1:" longer")_" billable as a Category C patient."
	D @$S(IBCATCP:"LCHG",1:"LEP") ; build bulletin for charges or episodes
	D MAIL^IBAERR1 ; send bulletin
	W:'DGMTINF "bulletin has been generated."
	Q
	;
LCHG	; List charges in bulletin.
	N C,IBD,IBIL,IBN,IBND,X,Y
	S IBC=IBC+1,IBT(IBC)=$S($G(IBCANCEL):"Please note that the following charge(s) were automatically cancelled:",1:"The following charges have been billed since "_$$DAT1^IBOUTL($S(+$P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT))_":")
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="   Bill From  Bill To   Charge Type             Bill #  Status        Charge"
	S IBC=IBC+1,IBT(IBC)=$TR($J("",79)," ","=")
	;
	; - build detail lines
	S IBD="" F  S IBD=$O(IBARR(IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(IBARR(IBD,IBN)) Q:'IBN  D
	.S IBND=$G(^IB(IBN,0)),IBIL=$P(IBND,"^",11)
	.S IBC=IBC+1,IBT(IBC)="   "_$$DAT1^IBOUTL(+$P(IBND,"^",14))_"   "_$$DAT1^IBOUTL(+$P(IBND,"^",15))_"  "
	.S X=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^") S:$E(X,1,2)="DG" X=$E(X,4,99)
	.S IBT(IBC)=IBT(IBC)_X_$J("",24-$L(X))_$S(IBIL]"":$P(IBIL,"-",2)_"  ",1:$J("",8))
	.S Y=$P(IBND,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ
	.S IBT(IBC)=IBT(IBC)_Y_$J("",15-$L(Y))_"$"_$P(IBND,"^",7)
	;
	I '$G(IBCANCEL) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Please review these charges and cancel those that should not be billed."
	Q
	;
LEP	; List episodes of care in bulletin.
	N IBD,IBN,IBX,X
	S IBC=IBC+1,IBT(IBC)="The following episodes of care have occurred since "_$$DAT1^IBOUTL($S(+$P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT))_":"
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Episode Date/Time      Type of Care   Ward/Clinic/Disposition/Appt Type"
	S IBC=IBC+1,IBT(IBC)=$TR($J("",79)," ","=")
	;
	; - build detail lines
	S IBD=0 F  S IBD=$O(IBARR(IBD)) Q:'IBD  S IBN="" F  S IBN=$O(IBARR(IBD,IBN)) Q:IBN=""  D
	.S IBX=IBARR(IBD,IBN),X=$$DAT2^IBOUTL(IBD)
	.S IBC=IBC+1,IBT(IBC)=X_$J("",23-$L(X))
	.D @$S(IBN["SC":"SC",1:IBN) S IBT(IBC)=IBT(IBC)_X
	;
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Please review these episodes and add charges for those that should be billed."
	Q
	;
SC	; Build string for Stop Codes.
	S X="STOP CODE      "_$E($P($G(^DIC(40.7,+IBX,0)),"^"),1,20)_" ("_$$FLD5^IBOVOP1(+$P(IBX,"^",2))_")"
	Q
	;
APP	; Build string for Scheduled Appointments.
	S X="APPOINTMENT    "_$E($P($G(^SC(+IBX,0)),"^"),1,20)_" ("_$$FLD5^IBOVOP1(+$P(IBX,"^",2))_")"
	Q
	;
R	; Build string for Registrations.
	S X="REGISTRATION   "_$P($G(^DIC(37,+IBX,0)),"^")
	Q
	;
ADM	; Build string for Admissions.
	S X="ADMISSION      "_$P($G(^DIC(42,+IBX,0)),"^")
	Q

IBAMTC
IBAMTC	;ALB/CPM - MEANS TEST NIGHTLY COMPILATION JOB ; 09-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
INIT	; Entry point - initialize variables and parameters
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBAMTC-1" D T0^%ZOSV ;start rt clock
	;
	D NIGHTLY^IBTRKR ; claims tracking nightly update
	;
	D ^IBCD ; automated biller
	;
	D NOW^%DTC S IBAFY=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1),DT=X,U="^"
	S (IBERRN,IBWHER,IBJOB,IBY,Y)=1,IBCNT=0 K ^TMP($J,"IBAMTC")
	D SITE^IBAUTL I Y<1 S IBY=Y D ERR G CLEAN
	D SERV^IBAUTL2 I IBY<1 D ERR G CLEAN
	;
	; Compile Category C co-pay and per diem charges for all inpatients
	S (IBWARD,DFN)="" F  S IBWARD=$O(^DPT("CN",IBWARD)) Q:IBWARD=""  F  S DFN=$O(^DPT("CN",IBWARD,DFN)) Q:'DFN  S IBA=^(DFN),IBY=1 D PROC
	;
	; Clean up expired Category C billing clocks
CLEAN	S %H=+$H-1 D YMD^%DTC S IBDT=X,(IBN,DFN)=0,IBWHER=23
	F  S DFN=$O(^IBE(351,"ACT",DFN)) Q:'DFN  D
	. F  S IBN=$O(^IBE(351,"ACT",DFN,IBN)) Q:'IBN  D
	..  S IBY=1,X1=IBDT,(X2,IBCLDT)=+$P($G(^IBE(351,+IBN,0)),"^",3) D ^%DTC
	..  I X>364 S IBCLDA=IBN D CLOCKCL^IBAUTL3,ERR:IBY<1
	;
	; Close out incomplete events where the patient has been discharged,
	; pass the related charges if they appear correct, and send a bulletin
	; - also, send bulletins on old incomplete charges where there is no
	; incomplete event
	D MAIN^IBAMTC2
	;
	;D ^IBAMTC1
	;
	; Send bulletin reporting job completion
	D BULL^IBAMTC1
	;
	; -- purge alerts
	D PURGE^IBAERR3
	;
	; Monitor special inpatient billing cases
	D BGJ^IBAMTI
	;
	; Kill variables and quit.
	D KILL1
	;
	I $D(ZTQUEUED),$G(ZTSK) D KILL^%ZTLOAD
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTC" D T1^%ZOSV ;stop rt clock
	;
	Q
	;
	;
PROC	; Process all currently admitted patients.
	D ORIG ; find "original" admission date
	Q:$$BILST^DGMTUB(DFN)<IBADMDT  ; patient was last Cat C before admission
	Q:IBADMDT\1=DT  ; patient was admitted today - process tomorrow
	Q:$$OE^IBAUTL5(IBA)  ; admitted for Observation & Examination
	Q:$O(^IBE(351.2,"AC",IBA,0))  ; skip special inpatient admissions
	; - gather event information
	D EVFIND^IBAUTL3 I 'IBEVDA D BSEC Q:'IBBS  ; wasn't billable yesterday
	S X=IBADMDT D H^%DTC S IBBDT=%H D:'IBEVDA LAST^IBAUTL5
	I IBEVDA,IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H
	S IBEDT=+$H-1
	; - gather clock information
	S IBWHER=24 D CLOCK^IBAUTL3 I IBY<1 D ERR G PROCQ
	I IBCLDA S X=IBCLDT D H^%DTC S IBCLCT=IBBDT-%H
	; - build charges for inpatient days
	D ^IBAUTL4 I IBY<1 D ERR G PROCQ
	; - pass per diem if over 30 days old, or both per diem and the copay
	; - if 4 days from patient's statement date; update event, clock
	S IBWHER=22
	I $G(IBCHPDA),$P($G(^IB(+IBCHPDA,0)),"^",6)>30!($$STD^IBAUTL5(DFN)) S IBNOS=IBCHPDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
	I $G(IBCHCDA),$$STD^IBAUTL5(DFN) S IBNOS=IBCHCDA D FILER^IBAUTL5 I IBY<1 D ERR G PROCQ
	I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVUPD^IBAUTL3
	I IBCLDA D CLUPD^IBAUTL3
PROCQ	D KILL Q
	;
BSEC	; Determine patient's bedsection for the previous day.
	S X1=DT,X2=-1 D C^%DTC
	S VAIP("D")=X_.2359 D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) Q
	;
ERR	; Error processing.  Input:  IBY, IBWHER, IBCNT
	S IBDUZ=DUZ,IBCNT=IBCNT+1 D ^IBAERR1 K IBDUZ Q
	;S ^TMP($J,"IBAMTC","E",IBERRN)=$P(IBY,"^",2)_"^"_$S($D(DFN):DFN,1:"")_"^"_IBWHER,IBERRN=IBERRN+1 Q
	;
ORIG	; Find first admission date, considering ASIH movements
	;  Input:  IBA    Output:  IBADMDT
	N X,Y,Z S Z=IBA
	F  S X=$G(^DGPM(Z,0)),Y=$P(X,"^",21) Q:Y=""  S Z=+$P($G(^DGPM(Y,0)),"^",14)
	S IBADMDT=+X Q
	;
KILL1	; Kill all IB variables.
	K VAERR,VAIP,IBA,IBADMDT,IBAFY,IBATYP,IBBDT,IBBS,IBCHARG,IBCHG,IBCNT,IBCUR,IBDESC,IBDISDT,IBDT,IBDUZ,IBFAC,IBI,IBIL,IBJOB,IBLC,IBMAX
	K IBN,IBNOS,IBSAVBS,IBSEQNO,IBSERV,IBSITE,IBSL,IBTRAN,IBX,IBY,IBWHER,IBWARD,IBEDT,IBCHCTY,IBCHPDE,IBERRN,IBASIH,IBRTED
KILL	; Kill all IB variables needed to build charges.
	K IBCLCT,IBCLDA,IBCLDT,IBCLDAY,IBCLDOL,IBCHPDA,IBCHCDA,IBCHG,IBCHFR,IBCHTO,IBCHTOTL,IBBS,IBNH
	K IBEVDA,IBEVDT,IBEVCLD,IBEVCAL,IBEVNEW,IBEVOLD,IBMED,IBTOTL,IBDESC,IBIL,IBTRAN,IBATYP,IBDATE
	Q

IBAMTC1
IBAMTC1	;ALB/CPM - MEANS TEST NIGHTLY COMPILATION REPORT ; 14-NOV-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	I '$D(IOF)!('$D(IOM))!('$D(IOSL)) Q
	;
	; Initialize control variables.
	S %H=+$H-1 D YMD^%DTC S Y=X D DD^%DT S IBYEST=Y
	D NOW^%DTC S Y=% D DD^%DT S IBNOW=Y
	S IBPAG=0,IBLINE="",$P(IBLINE,"-",IOM)=""
	; - print all reports.
	D ERROR,INPT
	; - kill variables and quit.
	K ^TMP($J,"IBAMTC"),IBCHK,IBI,IBID,IBRPT,IBNOW,IBYEST,IBPAG,IBLINE Q
	;
	;
ERROR	; Print the Error Report.
	S IBRPT="Error Report" D HDR
	I '$D(^TMP($J,"IBAMTC","E")) W !!,"No errors encountered during this compilation." Q
	;
	S IBI="" F  S IBI=$O(^TMP($J,"IBAMTC","E",IBI)) Q:'IBI  S IBID=^(IBI) D
	. I $Y>(IOSL-5) D HDR
	. S IBDA=$O(^IBE(350.8,"AC",$S($P(IBID,"^")]"":$P(IBID,"^"),1:0),0))
	. W !!,"Error: ",$S($D(^IBE(350.8,+IBDA,0)):$P(^(0),"^",2),$P(IBID,"^")]"":$P(IBID,"^"),1:"Unknown Error")
	. W !,"Patient: ",$S($D(^DPT(+$P(IBID,"^",2),0)):$P(^(0),"^"),1:"No patient involved")
	. I $P(IBID,"^",3) W !,$P($T(TEXT+$P(IBID,"^",3)^IBAMTEL),";;",2,99)
	Q
	;
INPT	; Print the Inpatient Report.
	S IBRPT="Inpatient Billing Report" D HDR
	I '$D(^TMP($J,"IBAMTC","I")) W !!,"No Inpatient charges billed or updated during this compilation." Q
	;
	S (DFN,IBI)="" F  S DFN=$O(^TMP($J,"IBAMTC","I",DFN)) Q:'DFN  D
	. S IBCHK=1 F  S IBI=$O(^TMP($J,"IBAMTC","I",DFN,IBI)) Q:'IBI  D
	..  I $Y>(IOSL-2) D HDR
	..  S IBID=$G(^IB(+IBI,0)) W !
	..  I IBCHK W $E($P($G(^DPT(+$P(IBID,"^",2),0)),"^"),1,24),?27,$E($P($G(^DPT(+$P(IBID,"^",2),0)),"^",9),6,9) S IBCHK=0
	..  W ?35,$S($D(^IBE(350.1,+$P(IBID,"^",3),0)):$P($P(^(0),"^")," ",2,99),1:"Unknown")
	..  W ?66,$$DAT1^IBOUTL($P(IBID,"^",14)),?80,$$DAT1^IBOUTL($P(IBID,"^",15))
	..  W ?92,$J($P(IBID,"^",6),3)
	..  W ?100,$S($P(IBID,"^",5)=10:$J("($"_$P(IBID,"^",7)_")",10),1:$J("$"_$P(IBID,"^",7),8))
	..  W ?114,$P("INCOMPLETE^PENDING AR^BILLED^UPDATED^^^^ON HOLD^ERROR ENCOUNTERED^CANCELLED","^",$P(IBID,"^",5))
	Q
	;
HDR	S IBPAG=IBPAG+1
	W @IOF,"Means Test/Category C Charge Compilation through ",IBYEST,?(IOM-31),IBNOW,"   Page: ",IBPAG
	W !,IBRPT
	I $E(IBRPT)="E" W !,IBLINE Q
	W !,"PATIENT",?28,"SSN",?35,"CHARGE DESCRIPTION",?66,"BILL FROM     BILL TO     UNITS    TOT CHG      STATUS",!,IBLINE,!
	Q
	;
	;
BULL	; Send the Nightly Compilation Job Completion bulletin.
	S XMSUB="MEANS TEST NIGHTLY COMPILATION JOB COMPLETION"
	S %H=+$H-1 D YMD^%DTC S Y=X D DD^%DT S IBYEST=Y
	K IBT S IBDUZ=DUZ
	S IBT(1)="The Means Test Nightly Compilation Job has compiled charges for patients"
	S IBT(2)="through "_IBYEST_"."
	S IBT(3)=" "
	D NOW^%DTC S IBDATE=%,IBT(4)="The job was completed on "_$P($$DAT2^IBOUTL(IBDATE),"@")_" at "_$P($$DAT2^IBOUTL(IBDATE),"@",2)_"."
	S IBT(5)=" "
	S IBT(6)="There "_$S(IBCNT=1:"was ",1:"were ")_$S(IBCNT:IBCNT,1:"no")_" error"_$S(IBCNT=1:"",1:"s")_" encountered."
	I IBCNT S IBT(7)="(Separate bulletin"_$E("s",IBCNT>1)_$S(IBCNT=1:" has",1:" have")_" been sent.)"
	D MAIL^IBAERR1 ; find recipients and send bulletin
	K IBDATE,IBDUZ,IBT,IBYEST,XMDUZ,XMSUB,XMTEXT,XMY
	Q

IBAMTC2
IBAMTC2	;ALB/CJM - INTEGRATED BILLING, CLEANUP OF UNCLOSED EVENTS, UNPASSED CHARGES ; 04-APRIL-1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
MAIN	;
	N IBAGE,IBFREQ,IBCHG,DFN,IBN,IBND,IBSL,IBDISC,DIE,DR,DA,IBQUIT,IBPASS,IBOLD,IBDATE,IBDUZ S IBDUZ=$G(DUZ)
	D NOW^%DTC S IBDATE=X
	S IBAGE=44,IBFREQ=15 ; age of unpassed charges to report, frequency
	; loop through all incomplete entries in file 350
	S IBN="" F  S IBN=$O(^IB("AC",1,IBN)) Q:'IBN  S IBND=$G(^IB(IBN,0)) D
	.Q:($P(IBND,"^",5)'=1)!($P(IBND,"^",16)']"")
	.I $P(IBND,"^",16)=IBN D
	..D EVENT
	.E  D CHARGE
	Q
EVENT	; closes events if the patient was discharged
	S (IBPASS,IBQUIT)=0
	D DISC I IBDISC D CLOSE D:'IBQUIT FNDCHGS,PASS:IBCHG,BULLET1^IBAMTC3
	Q
DISC	; gets the discharge date
	S IBDISC="",IBSL=$P(IBND,"^",4)
	I $P(IBSL,":")=405 S IBDISC=$P(IBSL,":",2) S:IBDISC]"" IBDISC=$P($G(^DGPM(IBDISC,0)),"^",17)
	S:IBDISC IBDISC=($P($G(^DGPM(IBDISC,0)),"^")\1)
	Q
CLOSE	;
	S IBQUIT=1
	L +^IB(IBN):3 I $T D
	.S IBQUIT=0
	.S DIE="^IB(",DA=IBN,DR=".05////2"
	.D ^DIE L -^IB(IBN)
	Q
FNDCHGS	;
	N I S IBCHG="" F I=1:1 S IBCHG=$O(^IB("ACT",IBN,IBCHG)) Q:'IBCHG  S IBCHG(I)=IBCHG
	S IBCHG=(I-1)
	Q
PASS	; pass the charges if they appear correct, complete, and can be locked
	S IBPASS=0
	N IBI,IBNOS,IBADMIT S DFN=$P(IBND,"^",2),IBADMIT=($P(IBND,"^",17)\1)
	Q:$$OE^IBAUTL5($P(IBSL,":",2))
	I IBDISC=$P(IBND,"^",17) Q:$P(IBND,"^",18)'=IBDISC
	E  S X1=$P(IBND,"^",18),X2=1 D C^%DTC Q:X'=IBDISC
	S IBPASS=1 F IBI=1:1:IBCHG L +^IB(IBCHG(IBI)):1 S IBPASS=$T Q:'IBPASS  I ($P($G(^IB(IBCHG(IBI),0)),"^",15)>IBDISC)!($P($G(^IB(IBCHG(IBI),0)),"^",14)<IBADMIT) S IBPASS=0 Q
	I IBPASS N IBN F IBI=1:1:IBCHG S IBNOS=IBCHG(IBI),IBY=1 D FILER^IBAUTL5 D:IBY<1 ^IBAERR1
	F IBI=1:1:IBCHG L -^IB(IBCHG(IBI))
	Q
	;
CHARGE	; if the charge is old send a bulletin
	N IBWHEN S IBWHEN=$P($G(^IB(IBN,1)),"^",2)
	S X2=IBWHEN,X1=IBDATE D ^%DTC
	S IBOLD=(+$FN(X,"T")) I IBOLD>IBAGE,X#IBFREQ=0 D BULLET2^IBAMTC3
	Q

IBAMTC3
IBAMTC3	;ALB/CJM - BULLETINS FOR UNCLOSED EVENTS,UNPASSED CHARGES ; 21-APRIL-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
BULLET1	N IBT,IBC,XMSUB,XMY,XMDUZ,XMTEXT
	S IBC=1,IBDUZ=$G(DUZ)
	D HDR1,PAT1,CHRG1,MAIL^IBAERR1
	Q
BULLET2	N IBT,IBC,XMSUB,XMY,XMDUZ,XMTEXT
	S IBC=1,IBDUZ=$G(DUZ)
	D HDR2,PAT2,CHRG2,MAIL^IBAERR1
	Q
MAIL	; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! CALL MAIL^IBAERR1
	; F I=1:1:(IBC-1) W IBT(I),!
	; Q
HDR1	;
	S XMSUB="REQUIRED VERIFICATION OF CATEGORY C CHARGES"
	S IBT(IBC)="Please verify the Category C charges for the following inpatient admission:",IBC=IBC+1
	Q
HDR2	;
	S XMSUB="CATEGORY C CHARGES NOT YET PASSED TO ACCOUNTS RECEIVABLE"
	S IBT(IBC)="The following charge is "_IBOLD_" days old and has not been passed to Accounts ",IBT(IBC+1)="Receivable. Action is required to edit, cancel, or pass the charge.",IBC=IBC+2
	Q
CHRG2	;
	N I,IBTYPE,IBFROM,IBTO,IBAMOUNT
	D CHGDATA
	S IBT(IBC)="Type        :       "_IBTYPE,IBC=IBC+1
	S IBT(IBC)="From        :       "_IBFROM,IBC=IBC+1
	S IBT(IBC)="To          :       "_IBTO,IBC=IBC+1
	S IBT(IBC)="Amount      :       "_IBAMOUNT,IBC=IBC+1
	Q
CHRG1	;
	N I,IBTYPE,IBFROM,IBTO,IBAMOUNT
	I 'IBPASS&(IBCHG) D
	.S IBT(IBC)=" ",IBT(IBC+1)="These charges have not been passed to Accounts Receivable.",IBT(IBC+2)="Action is required to edit, cancel, or pass the charges.",IBT(IBC+3)=" ",IBC=IBC+4
	.S IBT(IBC)=$$PR("Type",30)_$$PR("From",16)_$$PR("To",16)_$$PR("Amount",15),IBC=IBC+1
	.F I=1:1:IBCHG S IBND=$G(^IB(IBCHG(I),0)) D CHGDATA D
	..S IBT(IBC)=$$PR(IBTYPE,30)_$$PR(IBFROM,16)_$$PR(IBTO,16)_$$PR(IBAMOUNT,15),IBC=IBC+1
	Q
CHGDATA	;
	S Y=$P(IBND,"^",14) D:Y DD^%DT S IBFROM=Y
	S Y=$P(IBND,"^",15) D:Y DD^%DT S IBTO=Y
	S IBTYPE=$P(IBND,"^",3) S:IBTYPE IBTYPE=$P($G(^IBE(350.1,IBTYPE,0)),"^",1)
	S IBAMOUNT="$"_+$P(IBND,"^",7)
	Q
PAT1	; patient demographic data, admission and discharge date
	N VAERR,VADM,DFN,IBNAME,IBID,IBADMIT,VA
	S IBT(IBC)=" ",IBC=IBC+1
	S DFN=+$P(IBND,"^",2) D DEM^VADPT I VAERR K VADM
	S IBNAME=$G(VADM(1)),IBID=$G(VA("PID"))
	S Y=$P(IBND,"^",17) D DD^%DT S IBADMIT=Y
	S Y=IBDISC D DD^%DT S IBDISC=Y
	S IBT(IBC)="Patient Name:       "_IBNAME,IBC=IBC+1
	S IBT(IBC)="Patient Id  :       "_IBID,IBC=IBC+1
	S IBT(IBC)="Admitted    :       "_IBADMIT,IBC=IBC+1
	S IBT(IBC)="Discharged  :       "_IBDISC,IBC=IBC+1
	Q
PAT2	; patient demographic data, admission and discharge date
	N VAERR,VADM,DFN,IBNAME,IBID,IBADMIT,IBPARENT,IBDISC,VA
	S IBT(IBC)=" ",IBC=IBC+1,(IBADMIT,IBDISC)=""
	S DFN=+$P(IBND,"^",2) D DEM^VADPT I VAERR K VADM
	S IBNAME=$G(VADM(1)),IBID=$G(VA("PID"))
	S IBPARENT=$P(IBND,"^",16) I $G(IBPARENT) D
	.N IBND S IBND=$G(^IB(IBPARENT,0))
	.S Y=$P(IBND,"^",17) D DD^%DT S IBADMIT=Y
	.D DISC^IBAMTC2 I IBDISC S Y=IBDISC D DD^%DT S IBDISC=Y
	S IBT(IBC)="Patient Name:       "_IBNAME,IBC=IBC+1
	S IBT(IBC)="Patient Id  :       "_IBID,IBC=IBC+1
	S IBT(IBC)="Admitted    :       "_IBADMIT,IBC=IBC+1
	S IBT(IBC)="Discharged  :       "_IBDISC,IBC=IBC+1
	Q
PR(STR,LEN)	; pad right
	N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
	Q STR_$G(B)

IBAMTD
IBAMTD	;ALB/CPM - MOVEMENT EVENT DRIVER INTERFACE ; 21-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	I $G(DGPMA)="",$G(DGPMP)="" Q
	;
EN	; Process events from the Movement Event Driver.
	;
	;S XRTL=$ZU(0),XRTN="IBAMTD-1" D T0^%ZOSV ;start rt clock
	;
	; -- add admissions to claims tracking
	D INP^IBTRKR
	;
	; - process billing for CHAMPVA patients
	I $$CVA^IBAUTL5(DFN) D PROC^IBACVA G END
	;
	; - unflag continuous patients
	S IBASIH=$$ASIH^IBAUTL5(DGPMA)
	I DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)),$O(^IBE(351.1,"B",DFN,0)),$D(^IBE(351.1,+$O(^(0)),0)),'$P(^(0),"^",2) D UNFLAG^IBAMTD1
	;
	; - update case record on discharge for special inpatient episodes
	S IBA=$P($S(DGPMA="":DGPMP,1:DGPMA),"^",14)
	I $O(^IBE(351.2,"AC",IBA,0)),DGPMP="",($P(DGPMA,"^",2)=3!(IBASIH)) D DIS^IBAMTI(IBA) G END
	;
	; - quit if patient was last Category C before admission date
	S IBLC=$$BILST^DGMTUB(DFN) G:'IBLC END I DGPMA="",$P(DGPMP,"^",2)=1,IBLC<$P(+DGPMP,".") G END
	D ORIG^IBAMTC I IBLC<$P(IBADMDT,".") G END
	;
	; - if editing or deleting a movement, send bulletin
	I DGPMP]"" S IBJOB=3 D ^IBAMTBU G END
	;
	; - add a case record for admission of special (ao/ir/ec) inpatients
	I $P(DGPMA,"^",2)=1 D  G END
	.N IBCLSF D CL^SDCO21(DFN,IBADMDT,"",.IBCLSF)
	.S IBCLSF=$O(IBCLSF(0)) I IBCLSF D ADM^IBAMTI(DFN,IBA,IBCLSF)
	;
	; - if adding a retro-active transfer or spec. transfer, send bulletin
	I ($P(DGPMA,"^",2)=2!($P(DGPMA,"^",2)=6)),+DGPMA<DT S IBJOB=6 D ^IBAMTBU
	;
	; - process discharges and ASIH movements only
	I $P(DGPMA,"^",2)'=3,'IBASIH G END
	;
	W !,"Billing Category C charges...."
	S (IBY,Y)=1,IBEVOLD=0,IBJOB=2,IBWHER=1,IBDISDT=+DGPMA\1,IBAFY=$S($E(DT,4,5)<10:$E(DT,2,3),1:$E(DT,2,3)+1)
	D SITE^IBAUTL I Y<1 S IBY=Y G END1
	D SERV^IBAUTL2 G:IBY<1 END1
	S IBWHER=24 D CLOCK^IBAUTL3 G:IBY<1 END1
	;
	; - handle the variations on the basis of the event record
	D EVFIND^IBAUTL3 ; sets IBEVDA to IEN of event record, or to 0 if none
	S IBWHER=25 D @$S(IBEVDA:"EVT",1:"NOEVT")
	;
	; - kill variables and close
END1	I IBY<1 S IBDUZ=DUZ D ^IBAERR1 K IBDUZ
	W "completed."
END	D KILL1^IBAMTC
	;
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTD" D T1^%ZOSV ;stop rt clock
	;
	Q
	;
EVT	; Billable admission event on record.
	I $$OE^IBAUTL5(IBA) S IBDT=IBDISDT D OE^IBAMTBU1,CLOSE1 G EVTQ
	I IBEVCAL'<IBDISDT S IBY="-1^IB033" G EVTQ
	I IBEVCAL S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=%H I X=IBDISDT S IBDT=IBEVCAL D PASS^IBAUTL5,CLOSE1:IBY>0 G EVTQ
	I 'IBEVCAL S X=IBEVDT D H^%DTC S IBBDT=%H
	S X=IBDISDT D H^%DTC S IBEDT=%H-1
	I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
	D ^IBAUTL4,CLOSE:IBY>0
EVTQ	Q
	;
NOEVT	; No billable event on record since admission date.
	I $$OE^IBAUTL5(IBA) W " patient not billed (adm. for O&E)... " G NOEVTQ ; admitted for Observation & Examination
	S (IBCUR,VAIP("D"))=+$G(^DGPM(IBA,0)) D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8))
	I 'IBASIH,'IBBS G NOEVTQ ; not in billable bedsection
	I 'IBASIH,IBCUR\1=IBDISDT S IBDT=IBDISDT D:IBBS ^IBAMTD1 G NOEVTQ
	S X=IBADMDT\1 D H^%DTC S IBBDT=%H
	I IBASIH S VAIP("D")=IBADMDT,IBSAVBS=IBBS D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)) I 'IBBS S X=IBCUR D H^%DTC S IBBDT=%H I IBCUR\1=IBDISDT S IBDT=IBDISDT,IBBS=IBSAVBS D:IBBS ^IBAMTD1 G NOEVTQ
	D LAST^IBAUTL5
	S X=IBDISDT D H^%DTC S IBEDT=%H-1
	I IBCLDA S %H=IBBDT D YMD^%DTC S IBDT=X D COUNT
	D ^IBAUTL4,CLOSE:IBY>0
NOEVTQ	Q
	;
COUNT	; Find number of days on clock.    Input:  IBDT
	S X1=IBDT,X2=IBCLDT D ^%DTC S IBCLCT=X Q
	;
CLOSE	; Close out charges, events; update clocks (at discharge: tag CLOSE1)
	I $G(IBCHPDA) S IBNOS=IBCHPDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
	I $G(IBCHCDA) S IBNOS=IBCHCDA D FILER^IBAUTL5 G:IBY<1 CLOSEQ
	I IBCLDA D CLUPD^IBAUTL3
CLOSE1	I IBEVDA,$D(IBDT) S IBEVCLD=IBDT D EVCLOSE^IBAUTL3
CLOSEQ	Q

IBAMTD1
IBAMTD1	;ALB/CPM - MOVEMENT EVENT DRIVER INTERFACE (CON'T) ; 21-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Create charges for one-day admissions
	;  Input:  DFN, DGPMA, IBDT, IBBS, IBCLDA
	;          IBCLCT/IBCLDAY/IBCLDOL/IBCLDT (if IBCLDA'=0)
	;
	; - quit if patient is not Cat C at discharge
	G:'$$BIL^DGMTUB(DFN,+DGPMA) END
	; - handle clock
	I $D(IBCLDT),IBCLDT>IBDT S IBY="-1^IB034" G END
	I IBCLDA D COUNT^IBAMTD S IBCLCT=IBCLCT+1 I IBCLCT>365 S IBWHER=2 D CLOCKCL^IBAUTL3 G:IBY<1 END S IBCLDA=0
	I 'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 G:IBY<1 END S IBCLCT=1,(IBCLDAY,IBCLDOL)=0
	; - build event
	S IBNH=$P($G(^DGCR(399.1,IBBS,0)),"^")["NURSING",IBSL="405:"_$P(DGPMA,"^",14),IBEVDT=IBDT,IBWHER=6
	D EVADD^IBAUTL3 G:IBY<1 END
	S IBCLDAY=IBCLDAY+1
	; - cancel any OPT charges
	D OPT(DFN,IBDT)
	; - process per diem
	G:IBDT<$$DIEM^IBAUTL5 COPAY
	S IBX="P",IBWHER=8 D TYPE^IBAUTL2 G:IBY<1 END
	S IBWHER=13 D CHADD^IBAUTL2 G:IBY<1 END
	S IBNOS=IBN,IBWHER=26 D FILER^IBAUTL5 G:IBY<1 END
COPAY	; - process co-payment
	G:IBCLDAY>360 LAST
	I IBCLDAY>1,IBCLDAY#90=1 S IBCLDOL=0
	S IBMAX=IBMED I IBCLDAY>90,'IBNH S IBMAX=IBMAX/2
	G:IBCLDOL'<IBMAX LAST
	S IBWHER=14 D COPAY^IBAUTL2 G:IBY<1 END
	S IBCHARG=IBMAX-IBCLDOL I IBCHG<IBCHARG S IBCHARG=IBCHG
	S IBCHG=IBCHARG S:IBCHG<0 IBCHG=0
	S IBCLDOL=IBCLDOL+IBCHG
	S IBWHER=18 D CHADD^IBAUTL2 G:IBY<1 END
	S IBNOS=IBN,IBWHER=27 D FILER^IBAUTL5 G:IBY<1 END
LAST	; - close event, update billing clock
	S IBWHER=23,IBEVCLD=IBDT D EVCLOSE^IBAUTL3,CLUPD^IBAUTL3,CLOCKCL^IBAUTL3:IBCLCT>364
END	Q
	;
	;
UNFLAG	; Unflag continuous patient, if not transferring from the facility.
	N TRAN S TRAN=$P(DGPMA,"^",18)=10
	I 'TRAN!(IBASIH) W !,"Unflagging patient as continuous since 7/1/86..." D
	. D NOW^%DTC S DIE="^IBE(351.1,",DA=+$O(^IBE(351.1,"B",DFN,0))
	. S DR=".02////"_$P(+DGPMA,".")_";.05////"_DUZ_";.06////"_% D ^DIE K DIE,DA,DR
	. W "completed."
	; - send bulletin to Category C Billing mailgroup, if patient did not die.
	I $P($G(^DG(405.1,+$P(DGPMA,"^",4),0)),"^")'["DEATH" D CTPT^IBAMTBU
	Q
	;
OPT(DFN,IBDATE)	; Cancel any OPT charges on days billed for inpatient care.
	;  Input:    DFN  --  Pointer to patient in file #2
	;         IBDATE  --  Date to check for OPT charges
	N IBN,IBCRES,IBDUZ S IBDUZ=DUZ
	S IBN=$$BFO^IBECEAU(DFN,IBDATE) I 'IBN G OPTQ
	S IBCRES=$O(^IBE(350.3,"B","RECD INPATIENT CARE",0))
	S:'IBCRES IBCRES=25
	D CANCH^IBECEAU4(IBN,IBCRES)
OPTQ	Q

IBAMTD2
IBAMTD2	;ALB/CPM - MOVEMENT BULLETIN PROCESSING ; 03-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
APM()	; Analyze patient movement to see if Means Test charges were effected.
	;  Input:     DFN  --  Pointer to patient in file #2
	;           DGPMP  --  Oth node in file #405 prior to change
	;           DGPMA  --  Oth node in file #405 after the change
	;  Output:      0  --  No effect on Means Test charges (no bulletin)
	;               1  --  Means Test charges were effected (send bulletin)
	;
	N IBADM,IBCHG,IBMVTA,IBMVTP,IBMTYP,IBPM,IBY
	S IBMTYP=$P(DGPMA,"^",2) S:'IBMTYP IBMTYP=$P(DGPMP,"^",2)
	I IBMTYP=4!(IBMTYP=5) S IBY=0 G APMQ
	S IBY=$$CHG(DFN) G:'IBY APMQ
	;
	; - process admissions
	I IBMTYP=1 D:DGPMA]"" SET,CHK G APMQ
	;
	; - process specialty transfers
	I IBMTYP=6 D  G APMQ
	.Q:IBJOB=6!(DGPMA="")  D SET,CHK
	;
	; - process discharges and transfers
	I IBMTYP=2!(IBMTYP=3) D:DGPMA]""  G APMQ
	.I $P(+DGPMA,".")=$P(+DGPMP,".") S IBY=0 Q
	.S IBVAL(2)=+DGPMP_"^"_+DGPMA
	;
APMQ	Q IBY
	;
	;
CHG(DFN)	; Were any Means Test Charges Billed for this Admission?
	;  Input:     DFN  --  Pointer to patient in file #2
	;  Output:      1  --  Charges have been billed for the admission
	;               0  --  Charges have not been billed for the admission
	;
	N IBD,IBN,IBND,IBCHG,IBNL,IBLAST,IBQ,IBX,PM
	S (IBX,IBQ)="",PM=$P(DGPMP,"^",14) S:'PM PM=+$P(DGPMA,"^",14)
	F  S IBX=$O(^IB("AFDT",DFN,IBX)) Q:'IBX!IBQ  S IBD=0 F  S IBD=$O(^IB("AFDT",DFN,IBX,IBD)) Q:'IBD  S IBND=$G(^IB(IBD,0)) I $P(IBND,"^",8)["ADMISSION",$P(IBND,"^",4)[("405:"_PM) S IBQ=1 Q
	I $G(IBD) S IBN=IBD F  S IBN=$O(^IB("AF",IBD,IBN)) Q:'IBN  S IBLAST=$$LAST^IBECEAU(+$P($G(^IB(IBN,0)),"^",9)),IBNL=$G(^IB(+IBLAST,0)) I $P($G(^IBE(350.1,+$P(IBNL,"^",3),0)),"^",5)'=2,"^1^2^3^4^8^"[("^"_$P(IBNL,"^",5)_"^") S IBCHG=1 Q
	Q +$G(IBCHG)
	;
SET	; Set Before/Afters for the mvmt date and treating specialty
	N X S IBMVTP=+DGPMP,IBMVTA=+DGPMA
	I IBMTYP=6 S IBFTSP=$P(DGPMP,"^",9),IBFTSA=$P(DGPMA,"^",9)
	I IBMTYP=1 S X=+$O(^UTILITY("DGPM",$J,6,0)),IBFTSP=$P($G(^(X,"P")),"^",9),IBFTSA=$P($G(^("A")),"^",9)
	S IBFTSPBS=$$SECT^IBAUTL5(IBFTSP),IBFTSABS=$$SECT^IBAUTL5(IBFTSA)
	Q
	;
CHK	; Check for changes in the movement date or treating specialty.
	I $P(IBMVTP,".")=$P(IBMVTA,"."),(IBFTSP=IBFTSA!(IBFTSPBS=IBFTSABS)) S IBY=0 Q
	I IBFTSPBS'=IBFTSABS S IBVAL(1)=IBFTSP_"^"_IBFTSPBS_"^"_IBFTSA_"^"_IBFTSABS
	I $P(IBMVTP,".")'=$P(IBMVTA,".") S IBVAL(2)=IBMVTP_"^"_IBMVTA
	Q

IBAMTED
IBAMTED	;ALB/CPM - MEANS TEST EVENT DRIVER INTERFACE ; 21-FEB-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; -- do medication copayment exemption processing
	D ^IBAMTED1
	;
	; Quit if supported variables are unavailable.
	Q:'$D(DFN)!('$D(DGMTA))!('$D(DGMTP))!('$D(DUZ))!('$D(DGMTINF))
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBAMTED-1" D T0^%ZOSV ;start rt clock
	;
	; -- quit if copay exemption test
	I $P(DGMTA,"^",19)=2!($P(DGMTP,"^",19)=2) G END
	;
	; Quit if test is a Category change resulting from a deleted test.
	I DGMTA]"",DGMTP]"",+DGMTA'=+DGMTP G END
	;
	; Quit if the most current Means Test was not altered.
	S IBMT=$S(DGMTA="":DGMTP,1:DGMTA)
	S X=$$LST^DGMTU(DFN) I X,$P(X,"^",2)>+IBMT G END
	;
	; Quit if an added or deleted test is a Required test.
	I (DGMTA=""!(DGMTP="")),$P(IBMT,"^",3)=1 G END
	;
	; Determine the billable status before and after the transaction.
	D NOW^%DTC S IBCATCA=$$BIL^DGMTUB(DFN,%)
	S IBCATCP=$S(DGMTP="":$$ADD,DGMTA="":$$CK^DGMTUB(DGMTP),1:$$EDIT)
	;
	; Generate a bulletin if the patient's billing status has changed.
	I (IBCATCP&('IBCATCA))!('IBCATCP&(IBCATCA)) D
	.S IBEFDT=$S($P(IBMT,"^",7):+$P(IBMT,"^",7),1:+IBMT)
	.I IBCATCP,'IBCATCA,'$$CHG^IBAMTEDU(IBEFDT) Q  ; hasn't been billed since going c->a
	.I 'IBCATCP,IBCATCA,'$$EP^IBAMTEDU(IBEFDT) Q  ; hasn't been treated since going a->c
	.D MT^IBAMTBU2 ; create bulletin
	;
END	K IBARR,IBCANCEL,IBCATCA,IBCATCP,IBDIQ,IBDUZ,IBEFDT,IBMT,IBI,IBC,IBPT,IBT
	K DIC,DIQ,DR,DA,VA,VAERR,VAEL,X,X1,X2,XMDUZ,XMTEXT,XMY,XMSUB
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBAMTED" D T1^%ZOSV ;stop rt clock
	Q
	;
	;
ADD()	; Determine the billable status before adding a Means Test.
	S X1=$S($P(DGMTA,"^",3)=3:+DGMTA,1:+$P(DGMTA,"^",7)\1),X2=-1 D C^%DTC
	Q $$BIL^DGMTUB(DFN,X)
	;
	;
EDIT()	; Determine the billable status before editing a Means Test.
	I $P(DGMTP,"^",3)'=1 Q $$CK^DGMTUB(DGMTP)
	S X1=+DGMTP,X2=-1 D C^%DTC Q $$BIL^DGMTUB(DFN,X)

IBAMTED1
IBAMTED1	;ALB/AAS - MEANS TEST EVENT DRIVER - EXEMPTION PROCESSING ; 18-DEC-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	N IBAD,IBADDE,IBADD,IBDT,IBEXREA,IBAUTO,IBAX,IBAX1,IBOLDAUT,IBWHER,IBEXERR,IBJOB,IBON
	N IBAFY,IBATYP,IBBDT,IBCANDT,IBCHRG,IBCODA,IBCODP,IBCRES,IBDEPEN,IBFAC,IBIL,IBL,IBAST,IBLDT,IBN,IBND,IBNN,IBNOW,IBPARNT,IBPARNT1,IBSEQNO,IBSITE,IBUNIT
	N DA,DR,DIC,DIE,I,J,X,Y,X1
	;
	S IBON=$$ON^IBARXEU0 I IBON<1 G ENQ
	S IBJOB=12,IBWHER=13
	;
	; -- quit if nothing different (except completion date)
	Q:'$D(DGMTA)!('$D(DGMTP))
	I $P(DGMTA,"^",1,5)=$P(DGMTP,"^",1,5),$P(DGMTA,"^",10,20)=$P(DGMTP,"^",10,20) Q
	;
	; -- quit if invoked from ib=>mt=>ib
	Q:$D(IBEVT)
	;
	; -- quit if before start date
	I +DGMTA G ENQ:+$$PLUS^IBARXEU0(+DGMTA)<$$STDATE^IBARXEU
	I +DGMTP G ENQ:+$$PLUS^IBARXEU0(+DGMTP)<$$STDATE^IBARXEU
	;
	;
	I '$D(ZTQUEUED),$D(IBTALK) W !,"Determining Medication Co-Payment Exemption"
	;
	; -- if no patient add patient
	I '+$G(^IBA(354,DFN,0)) D ADDP^IBAUTL6 I $G(IBEXERR) G ENQ
	;
	D AUTO I IBAUTO'="" G ENQ
	;
	; -- not auto exempt any more see if is more current auto status
	S X=$$LSTAC^IBARXEU0(DFN) I $L(+X)=2,$P(X,"^",2)>+DGMTA S IBOLDAUT=$P(X,"^",2)
	; -- if mean test is required or no longer required
	;    or copay test is incomplete or no longer applicable
	;    add exemption of no income data
	S X=$P(DGMTA,"^",3) I X=1!(X=3)!(X=10)!(X=9)!($P(DGMTA,"^",14)) D AEX G ENQ
	;
	I "^ADD^DEL^EDT^ADJ^STA^CAT^COM^"[DGMTACT D @DGMTACT
	;
ENQ	; -- exit copay exemption creation
	I $G(IBEXERR) D ^IBAERR
	I $D(IBADDE),$D(IBTALK) W !!,"Medication Copayment Exemption Status Updated: ",$P(^IBE(354.2,+IBADDE,0),"^"),"   ",$$DAT1^IBOUTL($P(IBADDE,"^",2))
	Q
	;
ADD	; -- adding a new test
	I DGMTACT="ADD" D AEX
	;
ADDQ	Q
	;
AEX	; -- add exemption logic
	;    DO NOT USER FOR AUTOMATICS
	;
	S IBEXREA=""
	;
	; -- if means test required, no longer required,
	;    or copay test incomplete or no longer applicable
	;    set up no income data exemption if not automatic.
	;
	S X=$P(DGMTA,"^",3) I X=1!(X=3)!(X=10)!(X=9)!($P(DGMTA,"^",14)) S IBEXREA=$O(^IBE(354.2,"ACODE",210,0))
	;
	;
	I $$NETW^IBARXEU1,'IBEXREA S IBEXREA=+$$MTCOMP^IBARXEU5($$INCDT^IBARXEU1(DGMTA),DGMTA)
	I '$$NETW^IBARXEU1,'IBEXREA S IBEXREA=+$P($$INCDT^IBARXEU1(DGMTA),"^",3)
	;
	; -- make sure more recent exemption than current test date is inactivetd
	D MOSTR^IBARXEU5(+DGMTA,+IBEXREA)
	D ADDEX^IBAUTL6(+IBEXREA,+DGMTA,1,1,$G(IBOLDAUT))
	Q
	;
EDT	; -- editing an old means test
	;    if data different attempt to add new test
	I DGMTA=DGMTP G EDITQ
	D AEX
EDITQ	Q
	;
DEL	; -- means test deleted
	;    find exemption for date and inactivate
	;    update current exemption status
	;
	N IBFORCE
	Q:'$D(^IBA(354.1,"AIVDT",1,DFN,-DGMTP))
	S IBFORCE=+DGMTP ; force inactivate entries for deleted date
	;
	S IBEXREA=$$STATUS^IBARXEU1(DFN,+DGMTP),IBSTAT=$P($G(^IBE(354.2,+IBEXREA,0)),"^",4)
	;
	; -- cancel prior exemption with a no data exemption if last date older than 1 year
	I $$PLUS^IBARXEU0($P(IBEXREA,"^",2))<DT D ADDEX^IBAUTL6(+$O(^IBE(354.2,"ACODE",210,0)),+DGMTP) G DELQ
	;
	; -- add correct exemption and update current status
	D ADDEX^IBAUTL6(+IBEXREA,+$P(IBEXREA,"^",2))
DELQ	Q
	;
COM	; -- complete a required means test
CAT	; -- category change
STA	; -- status change
ADJ	; -- means test adjudication
	;
	S IBAX1=$$CODE(DGMTP),IBAX=$$CODE(DGMTA)
	;
	I $$NETW^IBARXEU1,IBAX1="P",IBAX'="P" D  G ADJQ ;treat as an adjudication
	.I $P(DGMTA,"^",19)=1 S IBEXREA=$S(IBAX="C":140,IBAX="A":150,1:"") ; means test codes
	.I $P(DGMTA,"^",19)=2 S IBEXREA=$S(IBAX="N":140,IBAX="E":150,1:"") ; copay exemption test
	.S IBEXREA=$O(^IBE(354.2,"ACODE",+IBEXREA,0))
	.Q:'$G(IBEXREA)
	.D ADDEX^IBAUTL6(IBEXREA,+DGMTA,1,1)
	.Q
	;
	I $P(DGMTA,"^",19)=1,IBAX1="C",IBAX="A" D ADDEX^IBAUTL6($O(^IBE(354.2,"ACODE",2010,0)),+DGMTA) G ADJQ ;is a means test hardship
	;
	I $P(DGMTA,"^",19)=2,IBAX1="N",IBAX="E" D ADDEX^IBAUTL6($O(^IBE(354.2,"ACODE",2010,0)),+DGMTA) G ADJQ ;is income test hardship
	;
	D AEX
	;
ADJQ	Q
	;
CODE(TEST)	; -- return means test category
	I '$G(TEST) S TEST=""
	Q $P($G(^DG(408.32,+$P(TEST,"^",3),0)),"^",2)
	;
AUTO	; -- if auto status patient
	;       add auto exemption if needed
	S IBDT=$S(+DGMTA:+DGMTA,+DGMTP:+DGMTP,1:"")
	S IBAUTO=$$AUTOST^IBARXEU1(DFN,IBDT) I IBAUTO'="" D  G AUTOQ
	.S X=$$RXST^IBARXEU(DFN,IBDT)
	.I X=""!($$PLUS^IBARXEU0($P(X,"^",5))<DT) S IBAD=1 D ADDEX^IBAUTL6(+IBAUTO,DT) Q  ; add exemption if none or old
	.I $P(X,"^",3)'=$P($G(^IBE(354.2,+IBAUTO,0)),"^",5) S IBAD=1 D ADDEX^IBAUTL6(+IBAUTO,IBDT) Q  ; if computes different add new exemption
	;
AUTOQ	Q

IBAMTEDU
IBAMTEDU	;ALB/CPM - MEANS TEST BULLETIN UTILITIES ; 15-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CHG(IBDAT)	; Any charges billed on or after IBDAT?
	;  Input:  IBDAT  --  Date on or after which charges have been billed
	; Output:    0    --  No charges billed
	;            1    --  Charges were billed; IBARR contains array
	;                      of those charges
	N IBFND,IBD,IBN,IBX,IBJOB,IBWHER K IBARR
	;
	; - if the effective date of the test is today, cancel today's charges.
	I $P(IBDAT,".")=DT D CANC G CHGQ
	;
	; - find all charges which may need to be cancelled.
	S IBX="" F  S IBX=$O(^IB("AFDT",DFN,IBX)) Q:'IBX  S IBD=0 F  S IBD=$O(^IB("AFDT",DFN,IBX,IBD)) Q:'IBD  D
	.I $P($G(^IB(IBD,0)),"^",8)'["ADMISSION" D:-IBX'<IBDAT CHK(IBD) Q
	.S IBN=0 F  S IBN=$O(^IB("AF",IBD,IBN)) Q:'IBN  D CHK(IBN)
CHGQ	Q +$G(IBFND)
	;
CHK(IBN)	; Place charge into the array.
	;  Input:  IBN   --  Charge to check
	N IBND,IBNDL,IBLAST
	S IBND=$G(^IB(IBN,0)) I $P(IBND,"^",15)<IBDAT G CHKQ
	S IBLAST=$$LAST^IBECEAU(+$P(IBND,"^",9)),IBNDL=$G(^IB(+IBLAST,0))
	I $P($G(^IBE(350.1,+$P(IBNDL,"^",3),0)),"^",5)'=2,"^1^2^3^4^8^20^"[("^"_$P(IBNDL,"^",5)_"^") S IBARR(+$P(IBNDL,"^",14),IBLAST)="",IBFND=1
CHKQ	Q
	;
CANC	; Cancel any charges for the patient for today.
	N IBD,IBN,IBCRES,IBFAC,IBSITE,IBSERV,IBDUZ
	Q:'$$CHECK^IBECEAU
	S IBCRES=+$O(^IBE(350.3,"B","MT CATEGORY CHANGED FROM C",0))
	S:'IBCRES IBCRES=22 S IBJOB=7,IBWHER=30,IBDUZ=DUZ
	S IBD=0 F  S IBD=$O(^IB("AFDT",DFN,-DT,IBD)) Q:'IBD  D
	.I $P($G(^IB(IBD,0)),"^",8)'["ADMISSION" D CANCH^IBECEAU4(IBD,IBCRES,1) Q
	.S IBN=0 F  S IBN=$O(^IB("AF",IBD,IBN)) Q:'IBN  D CANCH^IBECEAU4(IBN,IBCRES,1)
	Q
	;
	;
EP(IBDAT)	; Any billable episodes of care since IBDAT?
	;  Input:  IBDAT  --  Date on or after which patient received care
	; Output:    0    --  No billable episodes found
	;            1    --  Billable episodes were found; IBARR contains an
	;                      array of those episodes
	;
	N IBD,IBAD,IBNOW,IBEP,IBDT,IBI,IBPM,VA,VAIP,VAERR
	;
	; - quit if the effective date of the test is today
	I $P(IBDAT,".")=DT G EPQ
	;
	; - find scheduled visits on or after IBDAT
	D NOW^%DTC S IBNOW=% K IBARR
	S IBD=IBDAT F  S IBD=$O(^DPT(DFN,"S",IBD)) Q:'IBD!(IBD>IBNOW)  S IBAD=$G(^(IBD,0)) D
	.Q:$P(IBAD,"^",2)]""  ; visit cancelled
	.Q:$$IGN^IBEFUNC(+$P(IBAD,"^",16),IBD)  ; non-billable appt type
	.Q:$P($G(^SC(+IBAD,0)),"^",17)="Y"  ; non-count clinic
	.Q:$$ENCL^IBAMTS2($P(IBAD,"^",20))[1  ; claimed exposure
	.S IBARR(IBD,"APP")=+IBAD_"^"_$P(IBAD,"^",16),IBEP=1
	;
	; - find stops on or after IBDAT
	S IBD=IBDAT F  S IBD=$O(^SDV("ADT",DFN,IBD)) Q:'IBD!(IBD>DT)  S IBDT=^(IBD),IBI=0 F  S IBI=$O(^SDV(IBDT,"CS",IBI)) Q:'IBI  S IBAD=$G(^(IBI,0)) D
	.Q:$$IGN^IBEFUNC(+$P(IBAD,"^",5),IBD)  ; non-billable appt type
	.Q:$P($G(^SC(+($P(IBAD,"^",3)),0)),"^",17)="Y"  ; non-count clinic
	.Q:$$ENCL^IBAMTS2($P(IBAD,"^",8))[1  ; claimed exposure
	.S IBARR(IBD,"SC"_IBI)=+IBAD_"^"_$P(IBAD,"^",5),IBEP=1
	;
	; - find registrations on or after IBDAT
	S IBD=0 F  S IBD=$O(^DPT(DFN,"DIS",IBD)) Q:'IBD  S IBDT=9999999-IBD Q:IBDT<IBDAT  S IBAD=$G(^(IBD,0)) D
	.Q:$P(IBAD,"^",2)=2  ; application w/o exam
	.Q:$$ENCL^IBAMTS2($P(IBAD,"^",18))[1  ; claimed exposure
	.S IBARR(IBDT,"R")=$P(IBAD,"^",7),IBEP=1
	;
	; - find admissions since IBDAT
	S VAIP("D")=IBDAT D IN5^VADPT I VAIP(13) S IBPM=$G(^DGPM(+VAIP(13),0)),IBARR(+IBPM,"ADM")=$P(IBPM,"^",6),IBEP=1
	S IBD="" F  S IBD=$O(^DGPM("ATID1",DFN,IBD)) Q:'IBD!(9999999.999999-IBD<IBDAT)  S IBPM=$G(^DGPM(+$O(^(IBD,0)),0)),IBARR(+IBPM,"ADM")=$P(IBPM,"^",6),IBEP=1
	;
EPQ	Q +$G(IBEP)

IBAMTEL
IBAMTEL	;ALB/CPM - MEANS TEST BILLING ERROR LOCATIONS ; 14-NOV-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; This routine contains the various points at which errors may
	; be trapped while calculating Means Test/Category C charges
	; for Hospital and Nursing Home admissions.  This routine will
	; be utilized by both the Nightly Compilation job (IBAMTC) and
	; the Movement Event Driver interface (IBAMTD).
	;
TEXT	;
	;;The error was encountered while initializing billing parameters.
	;;The error was encountered while closing out charges for billing cycles over 365 days in length.
	;;The error was encountered while passing charges and closing the billing cycle for patients who are no longer Category C.
	;;The error was encountered while passing charges and closing the billing cycle for patients who are on leave.
	;;The error was encountered while passing charges and closing events as a result of an ASIH movement (to DOM).
	;;The error was encountered while adding a billable event (New Admission).
	;;The error was encountered while adding a new billing cycle.
	;;The error was encountered while determining the action type for the per diem charge.
	;;The error was encountered while passing charges and closing events as a result of an ASIH movement (to HOSP/NHCU).
	;;The error was encountered while adding a billable event (ASIH Movement).
	;;The error was encountered while passing a per diem charge as a result of a skipped day.
	;;The error was encountered while passing a per diem charge as a result of a new Fiscal Year.
	;;The error was encountered while adding a new per diem charge.
	;;The error was encountered while determining the daily rate for the copayment.
	;;The error was encountered while passing a copayment charge as a result of a specialty change.
	;;The error was encountered while passing a copayment charge as a result of a skipped day.
	;;The error was encountered while passing a copayment charge as a result of a new Fiscal Year.
	;;The error was encountered while adding a new copayment charge.
	;;The error was encountered while passing a copayment charge as a result of reaching the Medicare Deductible ceiling.
	;;The error was encountered while passing outstanding per diem charges on the last day of the billing cycle.
	;;The error was encountered while passing outstanding copayment charges on the last day of the billing cycle.
	;;The error was encountered while passing charges 4 days from the patient's statement date.
	;;The error was encountered while closing out billing cycles over 365 days in length.
	;;The error was encountered while retrieving billing cycle information.
	;;The error was encountered while passing charges for patients who are discharged.
	;;The error was encountered while passing a per diem charge for a single-day admission.
	;;The error was encountered while passing a copayment charge for a single-day admission.
	;;The error was encountered while posting charges to Accounts Receivable.
	;;The error was encountered after successfully posting charges to Accounts Receivable.
	;;The error was encountered while cancelling a charge during Means Testing.

IBAMTI
IBAMTI	;ALB/CPM - SPECIAL INPATIENT BILLING CASES ; 11-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADM(DFN,IBPM,IBCL)	; Create a new case record upon admission
	;  Input:     DFN  --  Pointer to the patient in file #2
	;            IBPM  --  Pointer to the adm movement in file #405
	;            IBCL  --  Patient class [1-ao|2-ir|4-ec]
	I '$G(DFN)!'$G(IBPM)!'$G(IBCL) G ADMQ
	N DA,DIC,DIE,DR,IBC,X,Y S:IBCL=4 IBCL=3
	K DD,DO S DIC="^IBE(351.2,",DIC(0)="",X=DFN D FILE^DICN S IBC=+Y
	S DR=".02////"_IBPM_";.03////"_IBCL_";.05////1;2.01////"_DUZ_";2.02///NOW;2.03////"_DUZ_";2.04///NOW"
	S DA=IBC,DIE=DIC D ^DIE
	D BULL(1,IBCL) ; send admission bulletin
ADMQ	Q
	;
DIS(IBPM)	; Update the case record upon discharge
	;  Input:    IBPM  --  Pointer to the adm movement in file #405
	N DA,DIE,DR,IBC
	S IBC=$O(^IBE(351.2,"AC",+$G(IBPM),0)) I 'IBC G DISQ
	S DR=".05////2;.06////"_DT_";2.03////"_DUZ_";2.04///NOW"
	S DA=IBC,DIE="^IBE(351.2," D ^DIE
	D BULL(2,+$P($G(^IBE(351.2,IBC,0)),"^",3)) ; send discharge bulletin
DISQ	Q
	;
BGJ	; Perform nightly background monitoring of all case records.
	N IBC,IBCD,IBNUM
	S IBC=0 F  S IBC=$O(^IBE(351.2,IBC)) Q:'IBC  S IBCD=$G(^(IBC,0)) D
	.Q:$P(IBCD,"^",8)  ; case has been dispositioned
	.Q:$P(IBCD,"^",5)=1  ; patient still admitted
	.I '$P(IBCD,"^",6) S $P(^IBE(351.2,IBC,0),"^",6)=DT Q  ; no disch date
	.S IBNUM=$$FMDIFF^XLFDT(DT,$P(IBCD,"^",6))
	.Q:IBNUM<45  ; still time to disposition the case
	.D NOTICE(IBNUM,+IBCD,+$P(IBCD,"^",2),+$P(IBCD,"^",3)) ; send reminder to disposition
	Q
	;
BULL(IBEV,IBCL)	; Send a bulletin at admission and discharge.
	;  Input:    IBEV  --  Event [1:admission|2:discharge]
	;            IBCL  --  Patient class [1-ao|2-ir|4-ec]
	K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB=$E($P(IBPT,"^"),1,14)_"  "_$P(IBPT,"^",3)_" - "_$$UCCL(IBCL)_$S($G(IBEV)=1:" ADM",1:" DISCH")
	S IBT(1)="The following Category C "_$$LCCL(IBCL)_" patient was just "_$S($G(IBEV)=1:"admitted:",1:"discharged:")
	S IBT(2)=" " S IBC=2
	S IBDUZ=DUZ D PAT^IBAERR1
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)=$S($G(IBEV)=1:"Please note that a special inpatient case record has been created for",1:"Please note that you have 45 days to determine if this episode of care")
	S IBC=IBC+1,IBT(IBC)=$S($G(IBEV)=1:"this admission.",1:"should be billed.")
	I IBEV=2 D
	.I '$$BIL^DGMTUB(DFN,DT) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Note: This patient, who was Category C at admission, is no longer Category C."
	.I $$BFO^IBECEAU(DFN,+$G(^DGPM(IBPM,0))\1) S IBC=IBC+1,IBT(IBC)=" ",IBC=IBC+1,IBT(IBC)="Note: This patient was billed the outpatient copayment at admission."
	D SEND^IBACVA2
	Q
	;
NOTICE(IBNUM,DFN,IBPM,IBCL)	; Notice to disposition billing case
	;  Input:   IBNUM  --  Number of days since discharge
	;             DFN  --  Pointer to the patient in file #2
	;            IBPM  --  Pointer to the admission in file #405
	;            IBCL  --  Patient class [1-ao|2-ir|4-ec]
	;
	Q:IBNUM#15  ; send notice every 15 days only
	N IBC K IBT S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB="NOTICE TO DISPOSITION SPECIAL INPATIENT BILLING CASE"
	S IBT(1)="The case record for the following Category C "_$$LCCL(IBCL)_" patient"
	S IBT(2)="is now "_IBNUM_" days old and should be dispositioned:"
	S IBT(3)=" " S IBC=3
	S IBDUZ=DUZ D PAT^IBAERR1
	S Y=+$G(^DGPM(+$G(IBPM),0)) D DD^%DT
	S IBC=IBC+1,IBT(IBC)=" Adm Date: "_Y
	S Y=+$G(^DGPM(+$P($G(^DGPM(+$G(IBPM),0)),"^",17),0)) D DD^%DT
	S IBC=IBC+1,IBT(IBC)="Disc Date: "_Y
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Please determine if this episode of care should be billed, and use"
	S IBC=IBC+1,IBT(IBC)="the Cancel/Edit/Add Patient Charges option to add charges, or the"
	S IBC=IBC+1,IBT(IBC)="Disposition Special Inpatient Billing Cases option to enter the reason"
	S IBC=IBC+1,IBT(IBC)="for not billing."
	D SEND^IBACVA2
	Q
	;
UCCL(X)	; Return the upper case classification description.
	;  Input:       X  --  Patient class [1-ao|2-ir|4-ec]
	Q $S('$G(X):"SPECIAL",X=1:"AGENT ORANGE",X=2:"IONIZING RADIATION",X=3:"ENV CONTAMINANT",1:"SPECIAL")
	;
LCCL(X)	; Return the lower case classification description.
	;  Input:       X  --  Patient class [1-ao|2-ir|4-ec]
	Q $S('$G(X):"Special",X=1:"Agent Orange",X=2:"Ionizing Radiation",X=3:"Env Contaminant",1:"Special")

IBAMTI1
IBAMTI1	;ALB/CPM - SPECIAL INPATIENT BILLING CASES (CON'T.) ; 11-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DISP	; Manually disposition a case record.
	W !!,"This option is used to disposition case records for special (AO/IR/EC)"
	W !,"inpatient episodes of care which are not to be billed.  After identifying"
	W !,"the case, please enter the reason (up to 80 characters) for non-billing."
	;
	; - main processing loop
	S IBQ=0 F  W ! D SEL Q:IBQ
	K IBQ
	Q
	;
SEL	; Select an inpatient billing case and enter the reason for non-billing.
	S DIC="^IBE(351.2,",DIC(0)="QEAMZ",DIC("A")="Select PATIENT: "
	D ^DIC S IBC=+Y I Y<0 S IBQ=1 G SELQ
	I $P(Y(0),"^",5)=1 W !!,"You must wait until this patient has been discharged to disposition the case." G SELQ
	I $P(Y(0),"^",4) S IBBILLED=1 W !!,"Please note that it appears as if this case has been billed."
	I $P(Y(0),"^",8) W !!,"Please note that this case has already been dispositioned."
	;
	; - display case record
	W ! D DSPL(IBC)
	;
	; - allow user update of record
	S IBHC=$P(Y(0),"^",7),IBHR=$G(^IBE(351.2,IBC,1))
	S DIE="^IBE(351.2,",DA=IBC,DR=$S($G(IBBILLED):".07;",1:"")_1 D ^DIE
	;
	S IBNC=$P(^IBE(351.2,IBC,0),"^",7),IBNR=$G(^IBE(351.2,IBC,1))
	I IBHC=IBNC,IBHR=IBNR W !!,"No changes made to the case record!" G SELQ
	I IBNR]"" W !!,"This case record will be dispositioned."
	S DR="2.03////"_DUZ_";2.04///NOW"
	I IBNR]"" S DR=".07////1;.08////1;"_DR
	S DIE="^IBE(351.2,",DA=IBC D ^DIE
SELQ	K DA,DIC,DIE,DR,IBC,IBHC,IBHR,IBNC,IBNR,IBBILLED
	Q
	;
CEA(IBPM,IBEVT)	; Automatically disposition the case from Cancel/Edit/Add.
	;  Input:     IBPM  --  Pointer to the adm movement in file #405
	;            IBEVT  --  Pointer to the billing event record in file #350
	I '$G(IBEVT) G CEAQ
	N DA,DIE,DR,IBC
	S IBC=$O(^IBE(351.2,"AC",+$G(IBPM),0)) I IBC D UPD(0)
CEAQ	Q
	;
CHK(IBC,IBEVT)	; Review the case after adding a charge from Cancel/Edit/Add.
	;  Input:      IBC  --  Pointer to the case in file #351.2
	;            IBEVT  --  Pointer to the billing event record in file #350
	I '$G(IBC)!'$G(IBEVT) G CHKQ
	N DA,DIE,DR,IBCD,IBCD1
	S IBCD=$G(^IBE(351.2,IBC,0)),IBCD1=$G(^(1))
	I $P(IBCD,"^",7)!'$P(IBCD,"^",8)!(IBCD1]"") D UPD(1)
CHKQ	Q
	;
UPD(IND)	; Disposition the case record.
	;  Input:      IND  --  0 = dispositioning  |  1 = reviewing
	;         variables --  IBC => ptr to case record
	;                       IBEVT => ptr to event record in #350
	W !,"Dispositioning the special inpatient billing case record"
	W:$G(IND) " (as billable)" W "..."
	K ^IBE(351.2,IBC,1)
	S DR=".04////"_IBEVT_";.07////0;.08////1;2.03////"_DUZ_";2.04///NOW"
	S DIE="^IBE(351.2,",DA=IBC D ^DIE W "  done."
	Q
	;
DSPL(IBC)	; Display a case record.
	;  Input:      IBC  --  Pointer to the case record in file #351.2
	I '$G(IBC) G DSPLQ
	N DFN,IBCD,IBC1,IBC2,IBATYP,IBPT,IBDIS,IBCL,IBEVT,IBN,IBND,Y
	S IBCD=$G(^IBE(351.2,IBC,0)),IBC1=$G(^(1)),IBC2=$G(^(2))
	S DFN=+IBCD,IBPT=$$PT^IBEFUNC(DFN),IBCL=$P(IBCD,"^",3)
	W !,$$DASH(),!?1,"Pt. Name: ",$E($P(IBPT,"^"),1,17),"  (",$P(IBPT,"^",3),")"
	W ?39,"Care related to ",$S(IBCL=1:"AO",IBCL=2:"IR",1:"EC"),": ",$S($P(IBCD,"^",7):"YES",$P(IBCD,"^",7)=0:"NO",1:"UNANSWERED")
	W !?5,"Type: ",$$UCCL^IBAMTI(IBCL),?39,"Case Dispositioned: ",$S($P(IBCD,"^",8):"YES",1:"NO")
	W !?1,"Adm Date: ",$$DAT1^IBOUTL(+$G(^DGPM(+$P(IBCD,"^",2),0)),1),?41,"Date Last Edited: ",$$DAT1^IBOUTL(+$P(IBC2,"^",4),1)
	S IBDIS=+$G(^DGPM(+$P($G(^DGPM(+$P(IBCD,"^",2),0)),"^",17),0))
	W !,"Disc Date: ",$S(IBDIS:$$DAT1^IBOUTL(IBDIS,1),1:"Still Admitted"),?43,"Last Edited By: ",$E($P($G(^VA(200,+$P(IBC2,"^",3),0)),"^"),1,20),!,$$DASH()
	;
	S IBEVT=+$P(IBCD,"^",4)
	I $O(^IB("AF",IBEVT,IBEVT)) W !?1,"Charges Billed:" D
	.S IBN=0 F  S IBN=$O(^IB("AF",IBEVT,IBN)) Q:'IBN  I IBN'=IBEVT D
	..S IBND=$G(^IB(IBN,0))
	..S IBATYP=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")
	..S:$E(IBATYP,1,2)="DG" IBATYP=$E(IBATYP,4,99)
	..W !?5,IBATYP,?35,$$DAT1^IBOUTL($P(IBND,"^",14)),?46,$$DAT1^IBOUTL($P(IBND,"^",15))
	..W ?57,"$",$P(IBND,"^",7),?64,$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2)
	.W !,$$DASH()
	;
	I IBC1]"" W !?1,"Reason for Non-Billing:",!,IBC1,!,$$DASH(),!
DSPLQ	Q
	;
DASH()	; Return a dashed line.
	Q $TR($J("",80)," ","-")

IBAMTI2
IBAMTI2	;ALB/CPM - LIST SPECIAL INPATIENT BILLING CASES ; 11-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
LIST	; List all inpatient billing cases.
	;
	I '$O(^IBE(351.2,0)) W !!,"There are no special inpatient billing cases on file!" G LISTQ
	;
	W !!,"This report will print out all special inpatient billing cases.",!
	;
	S %ZIS="QM" D ^%ZIS G:POP LISTQ
	I $D(IO("Q")) D  G LISTQ
	.S ZTRTN="DQ^IBAMTI2",ZTDESC="LIST ALL SPECIAL INPATIENT BILLING CASES"
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	;
	U IO
	;
DQ	; Tasked entry point.
	;
	S (IBPAG,IBQ)=0 D HDR
	S IBC=0 F  S IBC=$O(^IBE(351.2,IBC)) Q:'IBC  D  Q:IBQ
	.I $Y>(IOSL-12) D PAUSE^IBEMTF2 Q:IBQ  D HDR
	.D DSPL^IBAMTI1(IBC) W !
	;
	; - end-of-report pause
	D:'IBQ PAUSE^IBEMTF2
	;
LISTQ	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K IBC,IBQ,IBPAG
	Q
	;
HDR	; Generate a report header.
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !?20,"LIST ALL SPECIAL INPATIENT BILLING CASES"
	W !?64,"Page: ",IBPAG,!?60,"Run Date: ",$$DAT1^IBOUTL(DT)
	Q

IBAMTS
IBAMTS	;ALB/CPM - APPOINTMENT EVENT DRIVER INTERFACE ; 20-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Main interface entry point.
	;
	S IBJOB=5,IBWHER="",IBDUZ=DUZ,IBY=1
	I '$$BILST^DGMTUB(DFN) G ENQ ; never Category C
	I '$$CHECK^IBECEAU(0) D ^IBAERR1 G ENQ ; can't set vital parameters
	;
	; - process all parent outpatient encounters
	S IBORG=0 F  S IBORG=$O(^TMP("SDEVT",$J,SDHDL,IBORG)) Q:'IBORG  D
	.S IBOE=0 F  S IBOE=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE)) Q:'IBOE  S IBEVT=$G(^(IBOE,0,"AFTER")),IBEV0=$G(^("BEFORE")) D
	..S IBDT=$S(IBEVT:+IBEVT,1:+IBEV0),IBDAT=$P(IBDT,".")
	..S IBAPTY=$S(IBEVT:$P(IBEVT,"^",10),1:$P(IBEV0,"^",10))
	..S IBBILLED=$$BFO^IBECEAU(DFN,IBDAT),IBY=1
	..;
	..; - if C&P encounter, cancel charges for the day and quit
	..I IBAPTY=1 D:IBBILLED  Q
	...S IBCRES=+$O(^IBE(350.3,"B","COMP & PENSION VISIT RECORDED",0))
	...S:'IBCRES IBCRES=23 S IBWHER=""
	...D CANCH^IBECEAU4(IBBILLED,IBCRES,0)
	..;
	..; - quit if there are any C&P encounters on the visit date
	..Q:$$CNP^IBECEAU(DFN,IBDAT)
	..;
	..; - don't process child events
	..I IBEVT]"" Q:$P(IBEVT,"^",6)
	..I IBEVT="",IBEV0]"" Q:$P(IBEV0,"^",6)
	..;
	..; - get statuses
	..S IBAST=+$P(IBEVT,"^",12),IBBST=+$P(IBEV0,"^",12)
	..;
	..; - do either NEW or UPDATED processing
	..I IBAST=2,IBBST'=2 D NEW^IBAMTS1 Q
	..D UPD^IBAMTS2
	;
ENQ	K IBJOB,IBWHER,IBORG,IBOE,IBEVT,IBEV0,IBAST,IBBST,IBDUZ,IBY
	K IBDT,IBDAT,IBAPTY,IBBILLED,IBSERV,IBSITE,IBFAC,IBCRES,IBRTED
	Q
	;
BULL	; Send bulletin when classified patients are billed stops which
	; are exempt from the classification process.
	N IBT,IBC,IBPT,IBDUZ S IBPT=$$PT^IBEFUNC(DFN)
	S XMSUB="CHARGE FOR STOP CODE EXEMPT FROM CLASSIFICATION"
	S IBT(1)="The following patient, who has claimed exposure to "_$$CLTY
	S IBT(2)="was billed the Means Test outpatient copay for a stop code which is"
	S IBT(3)="exempt from classification:"
	S IBT(4)=" " S IBC=4
	S IBDUZ=DUZ D PAT^IBAERR1
	S Y=IBDAT D DD^%DT
	S IBC=IBC+1,IBT(IBC)="Stop Date: "_Y
	S IBC=IBC+1,IBT(IBC)="Stop Code: "_$P($G(^DIC(40.7,+$P(IBEVT,"^",3),0)),"^")
	S IBC=IBC+1,IBT(IBC)=" "
	S IBC=IBC+1,IBT(IBC)="Please check this patient's medical record to determine if the care provided"
	S IBC=IBC+1,IBT(IBC)="was related to the claimed exposure, and, if related, cancel the charge."
	D MAIL^IBAERR1
	K X,Y,XMSUB,XMY,XMTEXT,XMDUZ
	Q
	;
CLTY()	; Return the classification type
	N X,Y D CL^SDCO21(DFN,IBDAT,"",.X) S Y=""
	I $D(X(1)) S Y="Agent Orange" G CLTYQ
	I $D(X(2)) S Y="Ionizing Radiation" G CLTYQ
	I $D(X(4)) S Y="Environmental Contaminants"
CLTYQ	Q Y_","

IBAMTS1
IBAMTS1	;ALB/CPM - PROCESS NEW OUTPATIENT ENCOUNTERS ; 22-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
NEW	; Appointment fully processed - prepare a new charge.
	;
	I IBBILLED G NEWQ ; patient has already been billed on this date
	;
	; - for registrations, get disposition, and use log-out date/time
	I IBORG=3 D  G:'IBDISP NEWQ
	.S IBDISP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",7)
	.Q:'IBDISP
	.S IBTEMP=+$P($G(^TMP("SDEVT",$J,SDHDL,IBORG,"DIS",0,"AFTER")),"^",6)
	.S:IBTEMP IBDT=IBTEMP,IBDAT=$P(IBDT,".")
	;
	I '$$BIL^DGMTUB(DFN,IBDT) G NEWQ ; patient is not Category C
	;
	; - perform batch of edits
	I '$$CHKS G NEWQ
	;
	; - quit if AO/IR/EC exposure is indicated
	D CLSF(0,.IBCLSF)
	I +IBCLSF!($P(IBCLSF,"^",2))!($P(IBCLSF,"^",4)) G NEWQ
	;
	S IBSL="409.68:"_IBOE
	;
BLD	; - build the charge. May also enter from IBAMTS2 (requires IBSL)
	S IBX="O" D TYPE^IBAUTL2 G:IBY<0 NEWQ
	S IBUNIT=1,(IBFR,IBTO)=IBDAT,IBEVDA="*"
	D ADD^IBECEAU3 G:IBY<0 NEWQ
	;
	; - if stop is exempt from classification, but patient isn't, send msg
	I IBORG=2,$$CLPT(DFN,IBDAT),$$EX^SDCOU2(+$P(IBEVT,"^",3),IBDAT) D BULL^IBAMTS
	;
	; - if the opt billing rate is over a year old, place the charge on hold
	I $$OLDRATE(IBRTED,IBFR) D  G CLOCK
	.S DIE="^IB(",DA=IBN,DR=".05////20" D ^DIE K DIE,DA,DR
	;
	; - drop the charge into the background filer
	D IBFLR G:IBY<0 NEWQ
	;
	; - if there is no active billing clock, add one
CLOCK	I '$D(^IBE(351,"ACT",DFN)) S IBCLDT=IBDAT D CLADD^IBAUTL3
	;
NEWQ	I IBY<0 D ^IBAERR1
	K IBDISP,IBCLSF,IBCLDA,IBMED,IBCLDT,IBN,IBBS,IBTEMP
	K IBUNIT,IBFR,IBTO,IBSL,IBEVDA,IBX,IBDESC,IBATYP,IBCHG
	Q
	;
CHKS()	; Perform a batch of edits to determine whether to bill.
	;  Input variables required:   IBEVT  --  encounter
	;                             IBAPTY  --  appt type
	;                              IBDAT  --  appt date
	;                               IBDT  --  appt date/time
	;                              IBORG  --  originating process
	;                             IBDISP  --  disposition (if registration)
	N Y S Y=0
	;
	; - non-count clinic
	I $P($G(^SC(+$P(IBEVT,"^",4),0)),"^",17)="Y" G CHKSQ
	;
	; - non-billable appointment type
	I $$IGN^IBEFUNC(IBAPTY,IBDAT) G CHKSQ
	;
	; - non-billable disposition/stop code/clinic
	I IBORG=1!(IBORG=2),$$NBCL^IBEFUNC(+$P(IBEVT,"^",4),IBDT) G CHKSQ
	I IBORG=2,$$NBCSC^IBEFUNC(+$P(IBEVT,"^",3),IBDT) G CHKSQ
	I IBORG=3,$$NBDIS^IBEFUNC(IBDISP,IBDT) G CHKSQ
	;
	; - ignore if checked out late and pt was an inpatient at midnight
	I DT>IBDAT,$$INPT(DFN,IBDAT_".2359") G CHKSQ
	;
	S Y=1
CHKSQ	Q Y
	;
IBFLR	; Drop the charge into the IB Background filer.
	N IBSEQNO,IBNOS,IBNOW,IBTOTL,IBSERV,IBWHER,IBFAC,IBSITE,IBAFY,IBARTYP,IBIL,IBTRAN
	D NOW^%DTC S IBNOW=%,IBNOS=IBN
	S IBSEQNO=$P($G(^IBE(350.1,+IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023"
	I IBY>0 D ^IBAFIL
	Q
	;
CLPT(DFN,VDATE)	; Should the patient be asked the classification questions?
	;  Input:     DFN  --  Pointer to the patient in file #2
	;           VDATE  --  Visit date
	N X D CL^SDCO21(DFN,VDATE,"",.X)
	Q $D(X)>0
	;
INPT(DFN,VAINDT)	; Was the patient an inpatient at VAINDT?
	;  Input:     DFN  --  Pointer to the patient in file #2
	;          VAINDT  --  Date/time to check for inpatient status
	; Output:       1 - inpatient | 0 - not an inpatient
	N VADMVT D ADM^VADPT2
	Q VADMVT>0
	;
CLSF(IBUPD,Y)	; Examine classification questions.
	;  Input:   IBUPD  --  0 if event just checked out
	;                      1 if event is being updated
	;               Y  --  array to place output
	;  Output:  indicators returned as  ao^ir^sc^ec  [1|yes, 0|no]
	;             if IBUPD=0, Y is returned as a single string
	;             if IBUPD=1, Y("BEFORE"),Y("AFTER") are defined.
	N X,ZA,ZB S:'$G(IBUPD) Y="" S:$G(IBUPD) (Y("BEFORE"),Y("AFTER"))=""
	S X=0 F  S X=$O(^TMP("SDEVT",$J,SDHDL,IBORG,"SDOE",IBOE,"CL",X)) Q:'X  S ZB=$G(^(X,0,"BEFORE")),ZA=$G(^("AFTER")) D
	.I '$G(IBUPD) S:ZA $P(Y,"^",+ZA)=+$P(ZA,"^",3) Q
	.S $P(Y("BEFORE"),"^",+ZB)=+$P(ZB,"^",3),$P(Y("AFTER"),"^",+ZA)=+$P(ZA,"^",3)
	Q
	;
OLDRATE(IBRTED,IBFR)	; See if the copay rate effective date is too old.
	;  Input:   IBRTED  --  Charge Effective Date
	;             IBFR  --  Visit Date
	;  Output:       1  --  Effective Date is too old
	;                0  --  Not
	N IBNUM,IBYR
	S IBNUM=$$FMDIFF^XLFDT(IBFR,IBRTED),IBYR=$E(IBFR,1,3)
	Q IBYR#4&(IBNUM>364)!(IBYR#4=0&(IBNUM>365))

IBAMTS2
IBAMTS2	;ALB/CPM - PROCESS UPDATED OUTPATIENT ENCOUNTERS ; 25-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
UPD	; Perform encounter update actions.
	;
	; - was check out deleted?
	I IBAST'=2,IBBST=2 S IBCRES=$S(IBAST=8:5,1:1)
	;
	; - see if checked out appt classifications were changed
	I IBAST=2,IBBST=2 D CLSF^IBAMTS1(1,.IBCLSF) S IBACT=$$CLUPD() G:'IBACT UPDQ D  I IBACT'=1 G UPDQ
	.I IBACT=1 S IBCRES=2 Q
	.I IBACT=2 N IBCLSF D NEW^IBAMTS1
	;
	; - cancel charge if there is a cancellation reason, and the billed
	; - charge was for the appointment that is no longer billable
	I '$G(IBCRES) G UPDQ
	I '$$LINK(IBOE,$S(IBEVT:IBEVT,1:IBEV0),IBBILLED) G UPDQ
	D CANC G:IBY<0 UPDQ
	;
	; - look for other billable visits if Category C
	I '$$BIL^DGMTUB(DFN,IBDT) G UPDQ
	S IBBILLED=0,IBD=IBDAT-.1
	F  S IBD=$O(^SCE("ADFN",DFN,IBD)) Q:'IBD!($P(IBD,".")'=IBDAT)  D  Q:IBBILLED
	.S IBOEN=0 F  S IBOEN=$O(^SCE("ADFN",DFN,IBD,IBOEN)) Q:'IBOEN  D  Q:IBBILLED
	..;
	..Q:IBOEN=IBOE  ; skip encounter that was just cancelled
	..S IBEVT=$G(^SCE(IBOEN,0)) Q:'IBEVT  ; no zeroth node
	..Q:$P(IBEVT,"^",12)'=2  ; not checked out
	..I $P(IBEVT,"^",10)=1 S IBBILLED=1 Q  ; C&P exam -- stop looking
	..Q:$P(IBEVT,"^",6)  ; skip child events
	..;
	..; - perform batch edit
	..S IBORG=+$P(IBEVT,"^",8),IBAPTY=+$P(IBEVT,"^",10)
	..I IBORG=3 S IBDISP=+$P($G(^DPT(DFN,"DIS",+$P(IBEVT,"^",9),0)),"^",7) Q:'IBDISP
	..Q:'$$CHKS^IBAMTS1
	..;
	..; - check classifications
	..S IBCLSF=$$ENCL(IBOEN)
	..I +IBCLSF!($P(IBCLSF,"^",2))!($P(IBCLSF,"^",4)) Q  ; care was related to ao/ir/ec
	..S IBSL="409.68:"_IBOEN ; set softlink
	..;
	..; - ready to bill another encounter
	..D BLD^IBAMTS1 S IBBILLED=1
	;
	;
UPDQ	K IBCLSF,IBACT,IBC,IBOEN,IBEVT
	Q
	;
CRES	; List of cancellation reasons
	;;CHECK OUT DELETED
	;;CLASSIFICATION CHANGED
	;;MT OP APPT NO-SHOW
	;;MT OP APPT CANCELLED
	;;RECD INPATIENT CARE
	;
LINK(IBOE,IBEVT,IBN)	; Was the billed charge for the current appointment?
	;  Input:     IBOE  --  Pointer to outpatient encounter in file #409.68
	;            IBEVT  --  Zeroth node of encounter in file #409.68
	;              IBN  --  Pointer to charge in file #350
	;  Output:       0  --  Charge was not for current appointment
	;                1  --  Charge was for current appointment
	I '$G(IBOE)!'$G(IBEVT)!'$G(IBN) G LINKQ
	N IBSL,Y S IBSL=$P($G(^IB(IBN,0)),"^",4)
	I +IBSL=44 S Y=$P(IBSL,";",1,2)=("44:"_$P(IBEVT,"^",4)_";S:"_+IBEVT) G LINKQ
	I +IBSL=409.68 S Y=IBSL=("409.68:"_IBOE)
LINKQ	Q +$G(Y)
	;
CLUPD()	; Examine changes in the classification.
	;  Output:    0  --  no changes
	;             1  --  changes require charges to be cancelled
	;             2  --  changes require appt to be billed
	;             3  --  [ec] cancel charge, create deferred charge
	;             4  --  [ec] pass deferred charge, disposition case
	N I,Y S Y=0
	I IBCLSF("BEFORE")=IBCLSF("AFTER") G CLUPDQ
	F I=1,2,4 I '$P(IBCLSF("BEFORE"),"^",I),$P(IBCLSF("AFTER"),"^",I) S Y=$S(I=4:3,1:1) G CLUPDQ
	F I=1,2,4 I $P(IBCLSF("BEFORE"),"^",I),'$P(IBCLSF("AFTER"),"^",I) S Y=$S(I=4:4,1:2) Q
CLUPDQ	Q Y
	;
CANC	; Determine cancellation reason and cancel charge
	;  Input variables:   IBCRES  --  Code for reason to be determined
	;                   IBBILLED  --  Charge to be cancelled
	S IBCRES=$P($T(CRES+IBCRES),";;",2),IBCRES=+$O(^IBE(350.3,"B",IBCRES,0))
	D CANCH^IBECEAU4(IBBILLED,IBCRES)
	Q
	;
ENCL(IBOE)	; Return classification results for an encounter.
	;  Input:    IBOE  --  Pointer to outpatient encounter in file #409.68
	;  Output:   ao^ir^sc^ec, where, for each piece,
	;                      1 - care was related to condition, and
	;                      0 (or null) - care not related to condition
	N CL,CLD,X,Y S Y=""
	S CL=0 F  S CL=$O(^SDD(409.42,"OE",+$G(IBOE),CL)) Q:'CL  S CLD=$G(^SDD(409.42,CL,0)) I CLD S $P(Y,"^",+CLD)=+$P(CLD,"^",3)
	Q Y

IBAPDX
IBAPDX	;ALB/CPM - EXTRACT MEANS TEST BILLING DATA FOR PDX ; 09-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EXTR(TRAN,DFN,ARR)	; PDX Entry Point for the data extraction.
	; Input:   TRAN --  Pointer to transaction in file #394.61
	;          DFN  --  Pointer to the patient in file #2
	;          ARR  --  Root for the output extract array
	; Output:    0  --  Extraction was successful, or
	;        -1^err --  if an error was encountered during the extract.
	;
	; NOTES : If TRAN is passed
	;           The patient pointer of the transaction will be used
	;           Encryption will be based on the transaction
	;         If DFN is passed
	;           Encryption will be based on the site parameter
	;       : Pointer to transaction takes presidence over DFN ... if
	;         TRAN>0 the DFN will be based on the transaction
	;
	S TRAN=+$G(TRAN)
	S DFN=+$G(DFN)
	Q:(('TRAN)&('DFN)) "-1^Did not pass pointer to transaction or patient"
	I (TRAN) Q:('$D(^VAT(394.61,TRAN))) "-1^Did not pass valid pointer to VAQ - TRANSACTION file"
	I (TRAN) S DFN=+$P($G(^VAT(394.61,TRAN,0)),"^",3) Q:('DFN) "-1^Transaction did not contain pointer to PATIENT file"
	Q:('$D(^DPT(DFN))) "-1^Did not pass valid pointer to PATIENT file"
	;
	N C,ERR,KEY1,KEY2,IBARR,IBATYP,IBCRYP,IBD,IBDF,IBEFDT,IBENC,IBI,IBID,IBN,IBND,IBREF,IBSEQ,STRING,Y,IBENCPT,IBSNDR,IBSTR S ERR=0
	I $G(ARR)="" S ERR="-1^Did not pass root for the output array." G EXTRQ
	;
	; - set variables for encryption
	D ENCR^IBAPDX0 G:ERR<0 EXTRQ
	;
	; - get Continuous Patient data
	S IBSTR=$G(^IBE(351.1,+$O(^IBE(351.1,"B",DFN,0)),0)) I 'IBSTR S @ARR@("VALUE",351.1,.01,0)="",@ARR@("ID",351.1,.01,0)="" G CLOCK
	S (IBENC,STRING)=$P($$PT^IBEFUNC(+IBSTR),"^") X:$$NCRPFLD^VAQUTL2(2,.01) IBCRYP
	S (IBID,@ARR@("VALUE",351.1,.01,0),@ARR@("ID",351.1,.01,0))=IBENC
	S (IBENC,STRING)=$$DAT1^IBOUTL($P(IBSTR,"^",2)) X:$$NCRPFLD^VAQUTL2(351.1,.02) IBCRYP
	S @ARR@("VALUE",351.1,.02,0)=IBENC,@ARR@("ID",351.1,.02,0)=IBID
	;
CLOCK	; - get active billing clock data
	S IBSTR=$G(^IBE(351,+$O(^IBE(351,"ACT",DFN,0)),0)) I 'IBSTR S @ARR@("VALUE",351,.01,0)="",@ARR@("ID",351,.01,0)="" G EXTRQ
	I '$D(IBID) S (IBENC,STRING)=$P($$PT^IBEFUNC(+$P(IBSTR,"^",2)),"^") X:$$NCRPFLD^VAQUTL2(2,.01) IBCRYP S IBID=IBENC
	S IBEFDT=$P(IBSTR,"^",3),(IBENC,STRING)=+IBSTR X:$$NCRPFLD^VAQUTL2(351,.01) IBCRYP
	S (IBREF,@ARR@("VALUE",351,.01,0))=IBENC,@ARR@("ID",351,.01,0)=IBID
	S (IBENC,STRING)=$$DAT1^IBOUTL(IBEFDT) X:$$NCRPFLD^VAQUTL2(351,.03) IBCRYP
	S @ARR@("VALUE",351,.03,0)=IBENC,@ARR@("ID",351,.03,0)=IBREF
	F IBI=5:1:9 D
	.S (IBENC,STRING)=+$P(IBSTR,"^",IBI) X:$$NCRPFLD^VAQUTL2(351,".0"_IBI) IBCRYP
	.S @ARR@("VALUE",351,".0"_IBI,0)=IBENC,@ARR@("ID",351,".0"_IBI,0)=IBREF
	;
	; - get all charges billed within the active clock period
	S IBD="" F  S IBD=$O(^IB("AFDT",DFN,IBD)) Q:'IBD  D
	.S IBDF=0 F  S IBDF=$O(^IB("AFDT",DFN,IBD,IBDF)) Q:'IBDF  D
	..S IBN=0 F  S IBN=$O(^IB("AF",IBDF,IBN)) Q:'IBN  D
	...S IBND=$G(^IB(IBN,0)) Q:'IBND
	...Q:$P(IBND,"^",8)["ADMISSION"
	...I $P(IBND,"^",15)'<IBEFDT S IBARR(+$P(IBND,"^",14),IBN)=""
	;
	; - set all billed charges into the extract array
	I '$D(IBARR) S @ARR@("VALUE",350,.01,0)="",@ARR@("ID",350,.01,0)="" G EXTRQ
	D CHG^IBAPDX0
	;
EXTRQ	Q ERR

IBAPDX0
IBAPDX0	;ALB/CPM - EXTRACT MEANS TEST BILLING DATA FOR PDX (CON'T) ; 05-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ENCR	; Set variables for encryption.
	;DETERMINE IF ENCRYPTION IS ON - SAVE POINTER TO ENCRYPTION METHOD
	S:('TRAN) IBENCPT=$$NCRYPTON^VAQUTL2(1)
	S:(TRAN) IBENCPT=$$TRANENC^VAQUTL3(TRAN,2)
	;SET UP EXECUTABLE CALL TO ENCRYPT
	S:(IBENCPT) IBCRYP=$$ENCMTHD^VAQUTL2(IBENCPT,0)
	S:('IBENCPT) IBCRYP=""
	S:(IBCRYP'="") IBCRYP=("S IBENC="_IBCRYP)
	S:(IBCRYP="") IBCRYP="S IBENC=STRING"
	;DETERMINE PRIMARY KEY
	I (TRAN) S IBSNDR=$$SENDER^VAQCON2(TRAN) I ($P(IBSNDR,"^",1)="-1") S ERR="-1^Could not determine encryption keys" G ENCRQ
	S:(TRAN) IBSNDR=$P(IBSNDR,"^",1)
	S:(TRAN) KEY1=$$NAMEKEY^VAQUTL3(IBSNDR,1)
	S:('TRAN) KEY1=$$DUZKEY^VAQUTL3($G(DUZ),1)
	;DETERMINE SECONDARY KEY
	S:(TRAN) KEY2=$$NAMEKEY^VAQUTL3(IBSNDR,0)
	S:('TRAN) KEY2=$$DUZKEY^VAQUTL3($G(DUZ),0)
	I (IBENCPT) I ((KEY1="")!(KEY2="")) S ERR="-1^Could not determine encryption keys"
ENCRQ	Q
	;
CHG	; Build the array of Means Test charges.
	S (IBD,IBSEQ)=0 F  S IBD=$O(IBARR(IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(IBARR(IBD,IBN)) Q:'IBN  D
	.S IBND=$G(^IB(IBN,0)) Q:'IBND
	.S (IBENC,STRING)=+IBND X:$$NCRPFLD^VAQUTL2(350,.01) IBCRYP
	.S (IBREF,@ARR@("VALUE",350,.01,IBSEQ))=IBENC,@ARR@("ID",350,.01,IBSEQ)=IBID
	.S IBATYP=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^") S:$E(IBATYP,1,2)="DG" IBATYP=$E(IBATYP,4,99)
	.S (IBENC,STRING)=IBATYP X:$$NCRPFLD^VAQUTL2(350,.03) IBCRYP
	.S @ARR@("VALUE",350,.03,IBSEQ)=IBENC,@ARR@("ID",350,.03,IBSEQ)=IBREF
	.S Y=$P(IBND,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ
	.S (IBENC,STRING)=Y X:$$NCRPFLD^VAQUTL2(350,.05) IBCRYP
	.S @ARR@("VALUE",350,.05,IBSEQ)=IBENC,@ARR@("ID",350,.05,IBSEQ)=IBREF
	.S (IBENC,STRING)=+$P(IBND,"^",7) X:$$NCRPFLD^VAQUTL2(350,.07) IBCRYP
	.S @ARR@("VALUE",350,.07,IBSEQ)=IBENC,@ARR@("ID",350,.07,IBSEQ)=IBREF
	.F IBI=14,15 D
	..S (IBENC,STRING)=$$DAT1^IBOUTL(+$P(IBND,"^",IBI)) X:$$NCRPFLD^VAQUTL2(350,"."_IBI) IBCRYP
	..S @ARR@("VALUE",350,"."_IBI,IBSEQ)=IBENC,@ARR@("ID",350,"."_IBI,IBSEQ)=IBREF
	.S IBSEQ=IBSEQ+1
	Q

IBAPDX1
IBAPDX1	;ALB/CPM - BUILD DISPLAY SET FOR EXTRACTED PDX BILLING DATA ; 09-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DISP(IN,SPTR,OUT,OFF)	; PDX Entry Point to build output array from extract.
	; Input:    IN  --  Root for the input extract array
	;          OUT  --  Root for the output display array
	;          OFF  --  Offset to begin line-numbering
	;         SPTR  --  Pointer to extracted segment in file #394.71
	; Output:  NUM  --  Number of lines in the output display array, or
	;        -1^err --  if an error was encountered.
	;
	N NUM,IBCT,IBCTR,IBDOL,IBDT,IBFR,IBHDR,IBI,IBST,IBTO,X
	I $G(IN)="" S NUM="-1^Did not pass root for the input extract array." G DISPQ
	I $G(OUT)="" S NUM="-1^Did not pass root for the output display array." G DISPQ
	I '$D(OFF) S NUM="-1^Did not pass the offset line number." G DISPQ
	I '$G(SPTR) S NUM="-1^Did not pass the extraction segment pointer." G DISPQ
	;
	; - build display header
	S IBTTL=$P($G(^VAT(394.71,+SPTR,0)),"^"),IBCTR="< "_$S(IBTTL]"":IBTTL,1:"Segment Description Missing")_" >"
	S @OUT@("DISPLAY",+OFF,0)=$$CENTER^VAQDIS20($TR($J("",79)," ","-"),IBCTR)
	S @OUT@("DISPLAY",+OFF+1,0)=""
	S @OUT@("DISPLAY",+OFF+2,0)=$J("",24)_"MEANS TEST BILLING INFORMATION"
	S @OUT@("DISPLAY",+OFF+3,0)=""
	;
	; - build continuous patient display
	I @IN@("VALUE",351.1,.01,0)="" S NUM=4 G CLOCK
	S IBDT=@IN@("VALUE",351.1,.02,0)
	I IBDT="" S @OUT@("DISPLAY",+OFF+4,0)="       ** This patient has been continuously hospitalized since 7/1/86 **",@OUT@("DISPLAY",+OFF+5,0)="",NUM=6 G CLOCK
	S @OUT@("DISPLAY",+OFF+4,0)="This patient was a continuous patient up through "_IBDT_" (No longer continuous)",@OUT@("DISPLAY",+OFF+5,0)="",NUM=6
	;
CLOCK	; - build active billing clock data display
	I @IN@("VALUE",351,.01,0)="" S @OUT@("DISPLAY",+OFF+NUM,0)="         --- This patient has no current Means Test Billing activity ---",NUM=NUM+1 G DISPQ
	S @OUT@("DISPLAY",+OFF+NUM,0)="Means Test Active Billing Clock Information:",NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)=$TR($J("",80)," ","-"),NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="  Clock Start Date: "_@IN@("VALUE",351,.03,0)_$J("",14)_"Inpatient Days: "_@IN@("VALUE",351,.09,0),NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="",NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="  Medicare Deductible Co-payments:",NUM=NUM+1
	S IBDOL=@IN@("VALUE",351,.05,0)
	S @OUT@("DISPLAY",+OFF+NUM,0)=$J("",15)_"1st 90 days: $"_IBDOL_$J("",13+(3-$L(IBDOL)))_"3rd 90 days: $"_@IN@("VALUE",351,.07,0),NUM=NUM+1
	S IBDOL=@IN@("VALUE",351,.06,0)
	S @OUT@("DISPLAY",+OFF+NUM,0)=$J("",15)_"2nd 90 days: $"_IBDOL_$J("",13+(3-$L(IBDOL)))_"4th 90 days: $"_@IN@("VALUE",351,.08,0),NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)=$TR($J("",80)," ","-"),NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="",NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="",NUM=NUM+1
	;
	; - build list of charges billed in active billing clock period
	I @IN@("VALUE",350,.01,0)="" S @OUT@("DISPLAY",+OFF+NUM,0)="  --- There were no charges billed during this active billing clock period ---",NUM=NUM+1 G DISPQ
	S @OUT@("DISPLAY",+OFF+NUM,0)="Charges Billed in this Active Billing Clock Period:",NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)=$TR($J("",80)," ","-"),NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)="   Bill From  Bill To   Charge Type"_$J("",15)_"Status"_$J("",13)_"Charge",NUM=NUM+1
	S @OUT@("DISPLAY",+OFF+NUM,0)=$TR($J("",80)," ","-"),NUM=NUM+1
	;
	F IBI=0:1 Q:'$D(@IN@("VALUE",350,.01,IBI))  D
	.S IBFR=@IN@("VALUE",350,.14,IBI),IBTO=@IN@("VALUE",350,.15,IBI)
	.S IBCT=@IN@("VALUE",350,.03,IBI),IBST=@IN@("VALUE",350,.05,IBI)
	.S X="   "_$S(IBFR]"":IBFR,1:$J("",8))_"   "_$S(IBTO]"":IBTO,1:$J("",8))_"  "
	.S X=X_IBCT_$J("",(26-$L(IBCT)))_IBST_$J("",(19-$L(IBST)))
	.S X=X_$S(IBCT["CANCEL":"($",1:" $")_@IN@("VALUE",350,.07,IBI)_$S(IBCT["CANCEL":")",1:"")
	.S @OUT@("DISPLAY",+OFF+NUM,0)=X,NUM=NUM+1
	;
DISPQ	Q NUM

IBAREP
IBAREP	;ALB/AAS - INTEGRATED BILLING - REPOST IB ACTION TO FILER ; 1-APR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBAREP" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBAREP-1" D T0^%ZOSV ;start rt clock
	;
	S DIC="^IB(",DIC(0)="AEQMN" D ^DIC G:Y<1 END S IBN=+Y
	D CHK G %
	;
CHK	S IBND=$S($D(^IB(IBN,0)):^(0),1:"") I 'IBND W !,"ZEROTH NODE MISSING" D CANT Q
	I $P(IBND,"^",12) W !,"Transaction number already assigned" D CANT Q
	I $P(IBND,"^",5)>2&($P(IBND,"^",5)'=9) W !,"Status indicates it's complete" D CANT Q
	S DIR(0)="Y",DIR("A")="Are You SURE: ",DIR("B")="NO" D ^DIR K DIR I 'Y D CANT Q
	D POST
	Q
	;
POST	;
	S IBND=^IB(IBN,0),DFN=$P(IBND,"^",2),IBATYP=$P(IBND,"^",3)
	S IBSEQNO=$S('IBATYP:"",$D(^IBE(350.1,IBATYP,0)):$P(^(0),"^",5),1:"")
	D NOW^%DTC S IBNOW=%
	S IBDUZ=DUZ
	S IBNOS=IBN
	I DFN,IBSEQNO,DUZ,IBNOS D ^IBAFIL W !,"Attempting to Repass!",!! Q
	E  W !,"Not enough data to repost"
	Q
	;
CANT	W !,"Nothing Passed!",!! Q
END	K %,%I,DFN,DIC,X,Y,I,IBN,IBNOS,IBSEQNO,IBATYP,IBNOD,IBDUZ,IBAFY,IBARTYP,IBFAC,IBIL,IBND,IBNOW,IBSERV,IBSITE,IBTOTL,IBTRAN,IBWHER,DUOUT,DFN,IBHDT,IBOERR
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBAREP" D T1^%ZOSV ;stop rt clock
	Q

IBARX
IBARX	;ALB/AAS - INTEGRATED BILLING, PHARMACY COPAY INTERFACE ; 14-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
XTYPE	; - tag XTYPE - returns array of billable action types for service
	;  - see IBARXDOC for documentation
	;
X1	K Y D INSTAL I '$T S Y=-1 Q
	N I,J,X1,X2,DA,DFN S Y=1,IBSAVX=X,IBTAG=1,IBWHER=5
	;
	D CHKX^IBAUTL G:+Y<1 XTYPEQ
	;
	I '$D(^IBE(350.1,"ANEW",IBSERV,1,1)) D  S Y=-1 G XTYPEQ
	.I '$D(ZTQUEUED) W !!,*7,"WARNING: Pharmacy Copay not working,",!,"         Check IB SERVICE/SECTION in Pharmacy Site File.",!!
	.D E3^IBAERR
	;
	N X D ELIG^VADPT,INP^VADPT,DOM S Y=1
	F I=0:0 S I=$O(^IBE(350.1,"ANEW",IBSERV,1,I)) Q:'I  I $D(^IBE(350.1,I,40)) S DA=I X ^IBE(350.1,DA,40) S Y(DA,X)=I_"^"_X1_"^"_X2
	;
XTYPEQ	K X1,X2,IBSERV,VAEL,VA,VAERR,IBDOM,VAIN,IBSAVX,IBTAG,IBWHER
	Q
	;
DOM	S IBDOM=0 I $D(VAIN(4)),$D(^DIC(42,+VAIN(4),0)),$P(^(0),"^",3)="D" S IBDOM=1
	Q
NEW	;  - process new/renew/refill rx for charges
	;  - see IBARXDOC for documentation
	;
N1	K Y,IBSAVX D INSTAL I '$T S Y=-1 Q
	N I,J,X1,X2,DA,DFN
	S IBWHER=1,IBSAVX=X,Y=1,IBTAG=2 D CHKX^IBAUTL I +Y<1 G NEWQ
	I $D(X)<11 S Y="-1^IB010" G NEWQ
	S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
	D ARPARM^IBAUTL I +Y<1 G NEWQ
	;
	; -- check rx exemption incase refill is exempt
	; -- if exempt set amount to each rx and total to zero
	;    1= exempt, 0= non-exmept, -1=copay off (manilla)
	I +$$RXEXMT^IBARXEU0(DFN,DT)'=0 D  S Y="1^0" G NEWQ
	.S IBJ=""
	.F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S Y(IBJ)="^0^"
	.Q
	;
	S IBTOTL=0
	D BILLNO^IBAUTL I +Y<1 G NEWQ
	;
	S IBTOTL=0,IBJ="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G NEWQ
	F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D RX^IBARX1
	I +Y<1 G NEWQ
	D ^IBAFIL
	S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ)
	S:+Y>0 Y="1^"_IBTOTL S X=IBSAVX
	;
NEWQ	D:+Y<1 ^IBAERR
	D END
	Q
	;
INSTAL	I $S($D(^IBE(350.9,1,0)):1,$D(^IB(0)):1,1:0)
	Q
	;
CANCEL	;  - cancel charges for a rx
	;  - see IBARXDOC for documentation
	;
C1	K Y,IBSAVX N I,J,X1,X2,DA,DFN
	S IBWHER=1,IBSAVX=X,Y=1,IBTAG=3 D CHKX^IBAUTL I +Y<1 G CANQ
	I $D(X)<11 S Y="-1^IB010" G CANQ
	S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVX(J)=X(J)
	D ARPARM^IBAUTL I +Y<1 G CANQ
	;
	S IBJ="",IBTOTL=0
	F  S IBJ=$O(IBSAVX(IBJ)) Q:IBJ=""  S IBX=IBSAVX(IBJ) D CANRX^IBARX1 I +IBY(IBJ)'<1 D ^IBAFIL I +Y<1 S IBY(IBJ)=Y
	I +Y<1 S IBT="",IBY=Y,IBM="" F  S IBM=$O(IBY(IBM)) Q:IBM=""  I +IBY(IBM)<1 S Y=IBY(IBM) D ^IBAERR S Y(IBM)=IBY(IBM),Y=IBY
CANQ	D:+Y<1 ^IBAERR:('$D(IBT))
	S X=IBSAVX
	D END
	Q
	;
UPDATE	;  - will cancel current open charge and create updated entry
	;  - see IBARXDOC for documentation
	;
U1	K Y,IBSAVX N I,J,X1,X2,DA,DFN
	S IBWHER=1,IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
	S IBSAVXU=IBSAVX
	I $D(X)<11 S Y="-1^IB010" G UPDQ
	S J="" F  S J=$O(X(J)) Q:J=""  S IBSAVXU(J)=X(J),X(J)=$P(X(J),"^",3,4)
	;
	D CANCEL
U2	K X
	S X=IBSAVXU S J="" F  S J=$O(IBSAVXU(J)) Q:J=""  S X(J)=$P(IBSAVXU(J),"^",1,3)
	S IBSAVX=X,Y=1,IBTAG=4 D CHKX^IBAUTL I +Y<1 G UPDQ
	D ARPARM^IBAUTL I +Y<1 G UPDQ
	;
	; -- check rx exemption incase refill is exempt
	; -- if exempt set amount to each rx and total to zero
	I +$$RXEXMT^IBARXEU0(DFN,DT)'=0 D  S Y="1^0" G UPDQ
	.S IBJ=""
	.F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S Y(IBJ)="^0^"
	.Q
	;
	S IBATYP=$P(^IBE(350.1,+IBATYP,0),"^",7) I '$D(^IBE(350.1,+IBATYP,0)) S Y="-1^IB008" G UPDQ ;update type action
	;
	D BILLNO^IBAUTL G:+Y<1 UPDQ
	S IBTOTL=0,IBNOS="",IBSEQNO=$P(^IBE(350.1,IBATYP,0),"^",5) I 'IBSEQNO S Y="-1^IB023" G UPDQ
	S IBJ="" F  S IBJ=$O(IBSAVXU(IBJ)) Q:IBJ=""  S IBX=IBSAVXU(IBJ) D UCHPAR,RX^IBARX1:'$D(IBSAVY(IBJ))
	D ^IBAFIL
	S IBJ="" F  S IBJ=$O(IBSAVY(IBJ)) Q:IBJ=""  S Y(IBJ)=IBSAVY(IBJ) S:+Y(IBJ)<1 Y=Y(IBJ)
	S:+Y>0 Y="1^"_IBTOTL S X=IBSAVXU
	;
UPDQ	D:+Y<1 ^IBAERR
	K IBSAVXU
END	K %,%H,%I,K,X1,X2,X3,IBSERV,IBATYP,IBAFY,IBDUZ,IBNOW,IBSAVX,IBTOTL,IBX,IBT,IBCHRG,IBDESC,IBFAC,IBIL,IBN,IBNOS,IBSEQNO,IBSITE,IBTAG,IBTRAN,IBCRES,IBJ,IBLAST,IBND,IBY,IBPARNT,IBUNIT,IBJ,IBARTYP,IBI,IBSAVY,IBWHER
	Q
UCHPAR	; Check that IB action and its parent exist.
	S IBPARNT=$P(IBX,"^",3)
	I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB021" G UCHPARQ
	S IBPARNT=$P(^IB(+IBPARNT,0),"^",9)
	I '$D(^IB(+IBPARNT,0)) S IBSAVY(IBJ)="-1^IB027"
UCHPARQ	Q

IBARX1
IBARX1	;ALB/AAS - INTEGRATED BILING, PHARMACY COPAY INTERFACE (CONT.) ; 21-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;  - process 1 rx entry and accumulate totals
	;
RX	I $P(IBX,"^")'?1.N1":"1.N.ANP S Y="-1^IB012" G RXQ
	I $P(IBX,"^",2)<1 S Y="-1^IB013" G RXQ
	;
	D BDESC
	;
	S DA=IBATYP D COST^IBAUTL S IBCHRG=$P(IBX,"^",2)*X1,IBTOTL=IBTOTL+IBCHRG
	S IBWHER=2
	D ADD^IBAUTL
	I +Y<1 G RXQ
	S IBPARNT=$S($D(IBPARNT):IBPARNT,1:IBN)
	S $P(^IB(IBN,1),"^",1)=IBDUZ,$P(^IB(IBN,0),"^",2,13)=DFN_"^"_IBATYP_"^"_$P(IBX,"^")_"^2^"_$P(IBX,"^",2)_"^"_IBCHRG_"^"_IBDESC_"^"_IBPARNT_"^^"_IBIL_"^"_IBTRAN_"^"_IBFAC
	K IBPARNT,^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
	D INDEX
	S IBSAVY(IBJ)=IBN_"^"_IBCHRG_"^"_IBIL
	S:'$D(IBNOS) IBNOS="" S IBNOS=IBN_"^"_IBNOS
RXQ	Q
	;
CANRX	;  - ibx = ibn for parent entry
	;  - ibn = new cancellation entry
	S IBY(IBJ)=1
	I '$D(^IBE(350.3,+$P(IBX,"^",2),0)) S (Y,IBY(IBJ))="-1^IB020" G CANRXQ
	I '$D(^IB(+IBX,0)) S (Y,IBY(IBJ))="-1^IB021" G CANRXQ
	S IBND=^IB(+IBX,0)
	S IBCRES=$P(IBX,"^",2)
	;  -find most recent entry for parent ibx
	;  -if status isn't an update or new, error already cancelled?
	D LAST I IBLAST'=IBPARNT,$D(^IB(IBLAST,0)),$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2 S (Y,IBY(IBJ))="-1^IB026^ Ref. No: "_+^IB(+IBLAST,0) G CANRXQ ;already cancelled
	;
	S IBPARNT=$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S (Y,IBY(IBJ))="-1^IB027" G CANRXQ
	S IBATYP=$P(^IBE(350.1,$P(IBND,"^",3),0),"^",6) ;cancellation action type for parent
	I '$D(^IBE(350.1,+IBATYP,0)) S (Y,IBY(IBJ))="-1^IB022" G CANRXQ
	S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO S (Y,IBY(IBJ))="-1^IB023" G CANRXQ
	S IBIL=$P(IBND,"^",11) I IBIL="" S (Y,IBY(IBJ))="-1^IB024" G CANRXQ
	S IBUNIT=$S($D(^IB(+IBLAST,0)):$P(^(0),"^",6),1:$P(IBND,"^",6)) I IBUNIT<1 S (Y,IBY(IBJ))="-1^IB025" G CANRXQ
	S DA=IBATYP D COST^IBAUTL S IBCHRG=IBUNIT*X1,IBTOTL=IBTOTL+IBCHRG
	S IBWHER=2
	D ADD^IBAUTL I +Y<1 S IBY(IBJ)=Y G CANRXQ
	S $P(^IB(IBN,1),"^",1)=IBDUZ,$P(^IB(IBN,0),"^",2,13)=DFN_"^"_IBATYP_"^"_$P(IBND,"^",4)_"^2^"_IBUNIT_"^"_IBCHRG_"^"_$P(IBND,"^",8)_"^"_IBPARNT_"^"_IBCRES_"^"_IBIL_"^^"_IBFAC
	K ^IB("AC",1,IBN) ;S ^IB("AC",2,IBN)=""
	D INDEX
	S Y(IBJ)=IBN_"^"_IBCHRG_"^"_IBIL
	S IBNOS=IBN
CANRXQ	Q
	;
BDESC	;  -return brief description
	N X,Y S IBDESC="",X=$P(IBX,"^")
	I $D(^IBE(350.1,IBATYP,20)) X ^(20) S IBDESC=X
	Q
LAST	;find last entry
	S IBLAST=""
	S IBPARNT=$P(^IB(+IBX,0),"^",9) I 'IBPARNT S IBPARNT=+IBX
	S IBLDT=$O(^IB("APDT",IBPARNT,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBPARNT,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
	I IBLAST="" S IBLAST=IBPARNT
	Q
	;
INDEX	;cross-reference entry
	N X,Y
	S DA=IBN,DIK="^IB(" D IX^DIK
	K DIK Q
	;
SERV(Y)	; -- Service check for Pharmacy
	;    called by the screen in the input transform for the IB SERVICE/SECTION
	;    field of the PHARMACY SITE file.
	;    input = Y internal entry number in service section file
	;    output = 1 if okay to use (service matches) or 0 if not okay
	;
	; -- screen logic for field 1003 in file 59.9 should be 
	;    S DIC("S")="I $$SERV^IBARX1(+Y)"
	;
	Q $S('$G(Y):0,1:$D(^IBE(350.1,"ANEW",Y,1,1))&$D(^IBE(350.1,"ANEW",Y,1,2)))

IBARXDOC
IBARXDOC	;ALB/AAS - INTEGRATED BILLING, PHARMACY COPAY INTERFACE DOCUMENTATION ; 14-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
XTYPE	; - tag XTYPE - returns array of billable action types for service
	;       input x=service^dfn
	;      output y= 1 if successful, -1^error code in not successful
	;             y(action type,n) = action type^unit cost^service
	;
	;              action type is internal number in file 350.1
	;              n=0 not billable, n=1 billable, n=2 additional data needed
	;
	;
NEW	;
	;  - process new/renew/refill rx for charges
	;  - input  x=service^dfn^action type^user duz
	;  -        x(n)=softlink^units
	;
	;  - output y= 1^sum of total charges of y(n)'s if success, or -1^error code if error
	;           y(n)=IBnumber^total charge this entry^AR bill number
	;
	;
CANCEL	;  - cancel charges for a rx
	;  - input  x   = service^dfn^^user duz
	;           x(n)=IBnumber^Cancellation reason
	;
	;  - output y   = 1 if sucess, -1^error code if error
	;           y(n)= IBnumber^total charge^AR bill number
	;   if y  =  -1^error code then one or more
	;      y(n)'s will =-1^error code
	;
	;
UPDATE	;  - will cancel current open charge and create updated entry
	;  - input x    = service^dfn^action type^user duz
	;          x(n) = softlink^units^IBnumber of parent to cancel^cancellation reason
	;
	;  - output y    = 1 if success, -1^error code if err
	;  -        y(n) = IBnumber^total charge^AR bill number

IBARXEB
IBARXEB	;ALB/AAS - RX COPAY EXEMPTION BULLETIN PROCESSOR ; 15-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	N IBP,IBALERT
	Q:IBEVTP=""  ; no prior exemption
	Q:IBEVTP=IBEVTA
	S IBCODA=$$ACODE^IBARXEU0(IBEVTA),IBCODP=$$ACODE^IBARXEU0(IBEVTP)
	Q:$L(IBCODA)=2  ;  -went to automatic exemption
	;
	K IBT
	I IBCODA=2010 D  ; -went to hardship
	.S IBALERT=1
	.S IBT(9)="Patient has been given a Hardship Exemption."
	.Q
	I IBCODP=2010 D  ; -went from hardship
	.S IBALERT=2
	.S IBT(9)="Patient's Hardship exemption has been removed."
	.Q
	I IBCODA=210,$L(IBCODP)=3,$P(IBEVTP,"^",4)=1 D  ; -went to no income data from exempt income
	.S IBALERT=3
	.S IBT(9)="Patient's exemption based on Income has expired."
	.Q
	;
	Q:'$D(IBT)  ; no alert needed
	;
	S IBP=$$PT^IBEFUNC(DFN)
	I $$ALERT^IBAUTL7 D SEND^IBAERR3 G BQ
	D BULL
BQ	K IBEXERR Q
	;
ALERT	; -- use kernel alerts
	;
ALERTQ	Q
	;
BULL	; -- send bulletin
	;
	S XMSUB="Medication Copayment Exemption Status Change"
	S IBT(1)="The following Patient's Medication Copayment Exemption Status has changed:"
	S IBT(2)="    Patient: "_$E($P(IBP,"^")_"               ",1,25)_"  PT. ID: "_$P(IBP,"^",2)
	S IBT(3)=""
	S IBT(4)=" Old Status: "_$E($$TEXT^IBARXEU0($P(IBEVTP,"^",4))_"    ",1,10)_" - "_$P($G(^IBE(354.2,+$P(IBEVTP,"^",5),0)),"^")_"  Dated "_$$DAT1^IBOUTL(+IBEVTP)
	S IBT(5)=" New Status: "_$E($$TEXT^IBARXEU0($P(IBEVTA,"^",4))_"    ",1,10)_" - "_$P($G(^IBE(354.2,+$P(IBEVTA,"^",5),0)),"^")_"  Dated "_$$DAT1^IBOUTL(+IBEVTA)
	S IBT(6)="" I $D(IBARCAN) S IBT(6)="Past charges were canceled in AR."
	S IBT(7)=""
	S IBT(8)=""
	S IBT(10)="    by: "_$P($G(^VA(200,+$P(IBEVTA,"^",7),0)),"^")_"/"_$S($P(IBEVTA,"^",6)=1:"(System)",1:"(Manual)")
	S Y=$P(IBEVTA,"^",8) D D^DIQ S IBT(11)="    on: "_$P(Y,"@")_" @ "_$P(Y,"@",2)
	S IBT(12)="Option: " I $D(XQY0) S IBT(12)=IBT(12)_$P($G(XQY0),"^",2)
	I $D(ZTQUEUED),$P($G(XQY0),"^",2)="" S IBT(12)=IBT(12)_"Queued Job - "_$G(ZTDESC)
	D SEND
BULLQ	Q
	;
SEND	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMN=0
	;S XMY(DUZ)="" ;don't send to user, is annoying to pharmacy.
	S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,0)),"^",13),0)),"^")
	I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
	;S IBGRP=$P(^IBE(350.9,1,0),"^",9)
	;F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
	D ^XMD
	K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
	Q

IBARXEC
IBARXEC	;ALB/AAS -RX CO-PAY INCOME EXEMPTION CONVERSION ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	Q:'$D(^IBE(350.9,1,0))
	;
EN	; -- Entry Point to run conversion from start date of exemption to 
	;    today
	;
USER	I $S('($D(DUZ)#2):1,'$D(^VA(200,+DUZ,0)):1,'$D(DUZ(0)):1,DUZ(0)'="@":1,1:0) W !!?3,"The variable DUZ must be set to an active user code and the variable",!?3,"DUZ(0) must equal '@' to run the conversion.",! G END
	;
	S IBDT=$$STDATE^IBARXEU,IBEDT=DT
	S IBCONVER=1,IBQUIT=0
	;
	; -- make sure variable set
	D DT^DICRW,HOME^%ZIS W @IOF,?15,"IB Medication Copayment Exemption Conversion",!!!
	I $P($G(^IBE(350.9,1,3)),"^",3)="" D HELP^IBARXEC0
	G:IBQUIT END
	;
	; -- make sure environment is set
	I '$D(^IBA(354,0)) W !,"You must first install patch IB*1.5*9!" G END
	S X="PRCAX" X ^%ZOSF("TEST") I '$T W !,"You must first install patch PRCA*3.7*8!" G END
	S X="DGMTCOU1" X ^%ZOSF("TEST") I '$T W !,"You must first install MAS patch DG*5.2*??!" G END
	I $D(^DGMT(408.31,"AID",1))'=10 W !,"You must re-run the Post-Init to the DGYGINIT routines, missing cross-referece" G END
	;
REFUND	; -- make sure AR set up for refunds
	D  I IBQUIT G END
	.I '$D(^DIC(49,"D","04")) S IBQUIT=1
	.I '$D(^DIC(49,"B","FISCAL")) S IBQUIT=1
	.I IBQUIT W !,"In order to do refunds a service of 'FISCAL' with a mail symbol of 04 must ",!,"be defined",!
	.Q
	;
	; -- make sure not already done
	K IBDONE
	S Y=$P($G(^IBE(350.9,1,3)),"^",14) I Y S IBDONE=1 W !!,"Conversion already finished on " D DT^DIQ W !!,"Reprinting the Report...",! G DEV
	;
	; -- check if running alread running
	I $D(IBCONVER) S IBARXJOB=+$P($G(^IBE(350.9,1,3)),"^",3) D
	.;
	.S IBARXJOB=IBARXJOB+1
	.I IBARXJOB=1 D NOW^%DTC S $P(^IBE(350.9,1,3),"^",13)=% Q  ; -- first time to run conversion
	.;
	.W !,*7,"WARNING: Conversion May Already be Running!",!,"Check your system status if you are unsure.",!!
	.D RESTART^IBARXEC0
	.S DIR(0)="Y",DIR("A")="Are You Sure you Want to Restart",DIR("B")="NO"
	.D ^DIR K DIR I 'Y!($D(DIRUT)) K IBARXJOB Q
	.Q
	;
	I '$D(IBARXJOB) G END
	S $P(^IBE(350.9,1,3),"^",3)=IBARXJOB
	;
DEV	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBARXEC3",ZTSAVE("IB*")="",ZTDESC="IB Medication Copayment Exemption Conversion" D ^%ZTLOAD D HOME^%ZIS G END
	;
	G DQ^IBARXEC3
	;
END	K ^TMP("IBCONV",$J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K DIC,DIE,DA,DR,D0,DGT,DIR,DIRUT,ERR,I,J,LINE,XMZ
	K IBAFY,IBARXJOB,IBCANDT,IBCBCNT,IBCEAMT,IBCECNT,IBCONVER,IBDONE,IBEAMT,IBECNT,IBEFAC,IBL,IBLAST,IBLDT,IBNAMT,IBNCNT,IBND,IBNECNT,IBNOW,IBPARDT,IBPARNT,IBPARNT1,IBQUIT,IBJOB,IBWHER,IBEXERR
	K IBDT,IBEDT,IBJ,IBSITE,IBSTAT,IBTBCNT,IBTCBCNT,IBTCEAMT,IBTCECNT,IBTEAMT,IBTECNT,IBTNAMT,IBTNCNT,IBTNECNT,IBADD,IBADDE,IBDATA,IBDEPEN,IBERR,IBEXREA,IBFAC
	D ^%ZISC
	Q

IBARXEC0
IBARXEC0	;ALB/AAS - RX COPAY EXEMPTION CONVERSION HELP ; 07-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
RESTART	; -- help for restarting the conversion
	S DIR(0)="Y",DIR("A")="Show help on Restarting",DIR("B")="NO"
	D ^DIR K DIR
	I $D(DIRUT) S IBQUIT=1 Q
	Q:Y<1
	;
	W !!
	F I=1:1 S LINE=$P($T(TEXT1+I),";",3) Q:LINE=""!(IBQUIT)  W !,LINE I ($Y+5)>IOSL D PAUSE^IBOUTL Q:IBQUIT  W @IOF
	W !! Q
	;
	;
	Q
	;
HELP	S DIR(0)="Y",DIR("A")="Do you want to see the help",DIR("B")="NO"
	D ^DIR K DIR
	I $D(DIRUT) S IBQUIT=1 Q
	Q:Y<1
	;
	W !!
	F I=1:1 S LINE=$P($T(TEXT+I),";",3) Q:LINE=""!(IBQUIT)  W !,LINE I ($Y+5)>IOSL D PAUSE^IBOUTL Q:IBQUIT  W @IOF
	W !! Q
	;
TEXT	;;  ;
	;;This routine is the Medication Copayment Exemption
	;;Conversion.  It should be started immediately after bringing
	;;your system up after the installation of the Medication
	;;Copayment Exemption Patch.  It will not run unless all parts
	;;of the installation have been completed.
	;;  ; 
	;;Running of this conversion will set up the correct exemption
	;;status for all patients who have received a pharmacy copay
	;;charge since Oct. 30, 1992.  For all patients determined to
	;;be exempt it will cancel the charges in Integrated Billing
	;;and then adjust the patient account to remove the copay
	;;charges plus any administrative and interest charges that
	;;may have accumulated on the canceled charges.
	;;  ;
	;;In order for this conversion to work correctly you must have
	;;AR version 3.7 installed correctly to do refunds.  This
	;;includes setting up an entry in the SERVICE/SECTION file
	;;with the name of 'FISCAL' and a mail symbol of '04'.  One
	;;entry in file 411 must be identified as the primary
	;;station. A Common Numbering series for refunds for the
	;;Primary Station, for 'FISCAL' service must be set up.
	;;Make sure that there are sufficient bill numbers available,
	;;you may generate 1000 to 5000 refunds during this conversion
	;;depending on the size of your facility.
	;;  ;
	;;This conversion may run for a significant period of time.
	;;It can be run with the users on a live system but should
	;;not be run at peak business hours.  It can be
	;;restarted at any time.  It will pick up after the patient it
	;;last processed.  If you do not queue the conversion,
	;;pressing '^' return will pause the conversion after it finishes
	;;the current patient and display the conversion's current
	;;progress.
	;;  ;
	;;After the conversion has completed, there will be a mail
	;;message sent to the pharmacy copay mail group, the
	;;user who started the conversion, and the Albany ISC telling
	;;them the final statistics on the conversion.
	;;  ;
	;;There are two reports that will need to be printed after the
	;;conversion has completed.  One in Accounts Receivable and one
	;;in Integrated Billing.  You should reconcile these reports.
	;;For each patient listed on either report there should be a
	;;matching patient and equal dollar amount shown.  The only 
	;;exception will be if interest and/or admin charges have been
	;;removed in AR they will not show on the IB report.
	;;
	;;
TEXT1	;;
	;;This is the current status of the Medication Copayment Exemption
	;;Conversion.  It may be restarted at any time.  If a second
	;;conversion is started the running conversion will stop at the
	;;conclusion of a patient.  This may affect the total counts
	;;kept for quick reports by losing the count of the patient 
	;;being processed.
	;;  ;
	;;If you are unsure stop now and do a system status.  The conversion
	;;routines are all named IBARXEC*.  If your system is live, you may
	;;see an intermittent conversion on the fly of a patient who has
	;;not been converted.
	;;

IBARXEC1
IBARXEC1	;ALB/AAS - RX CO-PAY EXEMPTION REPORT GENERATOR ; 04-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
START	; -- entry point for running conversion report from option
	D HOME^%ZIS W @IOF,?15,"Medication Copayment Charges Retroactively Canceled",!!
	;
	I '$P(^IBE(350.9,1,3),"^",14) W !!,"This report cannot be run until the conversion has completed." G END
	;
BDT	;  -get beginning date
	S (IBBDT,IBEDT)=""
	S Y=$$STDATE^IBARXEU D D^DIQ S %DT("B")=Y
	S %DT="AEPX",%DT("A")="Start with DATE: " D ^%DT K %DT G END:Y<0 S IBBDT=Y
	K %DT W !
	;
EDT	;  -get ending date
	S Y=$P($P(^IBE(350.9,1,3),"^",14),".") D D^DIQ S %DT("B")=Y
	S %DT="APEX",%DT("A")="Go to DATE: " D ^%DT G END:Y<0 S IBEDT=Y I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G BDT
	K %DT W !
	;
	S DIR("A")="Print Conversion Quick Status Report with listing",DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR G:$D(DIRUT) END S IBQUIC=Y
	;
DEV	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="REPORT^IBARXEC1",ZTSAVE("IB*")="",ZTDESC="IB Medication Copayment Exemption Conversion Report" D ^%ZTLOAD K ZTSK D HOME^%ZIS G END
	;
REPORT	; -- run report for conversion
	I $D(IBCONVER) D
	.D QUIC
	.Q:IO'=IO(0)
	.I '$D(ZTQUEUED) W !!,"Please wait while I compile the report by patient...."
	.W !!,"This report can be re-run by re-running the conversion",!,"or using the option provided."
	.S IBBDT=$$STDATE^IBARXEU
	.S IBEDT=$P(^IBE(350.9,1,3),"^",14)
	.Q
	;
	U IO
	Q:'$P(^IBE(350.9,1,3),"^",14)
	;
	S IBQUIT=0
	I $G(IBQUIC)=1 D QUIC
	D BUILD^IBARXEC4
	D PRINT^IBARXEC5
	;
END	K ^TMP("IBCONV",$J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K N,N1,O,O1,X,X1,X2,Y,DFN,IBAMT,IBBCNT,IBBDT,IBDT,IBEDT,IBJ,IBN,IBNAM,IBOK,IBP,IBPAG,IBCNT,IBPDAT,IBPCNT,IBQUIC,IBTAMT,IBTCNT,IBX
	D END^IBARXEC
	Q
	;
QUIC	; -- quick summary
	I '$D(IOF) D HOME^%ZIS
	N IBX,X,X1,X2,X3,Y
	S IBX=$G(^IBE(350.9,1,3)),X3=10
	;
	W @IOF,?20,"Medication Copayment Exemption Conversion Status"
	I '$P(IBX,"^",3),'$P(IBX,"^",13) W !!,"Conversion has not been started" Q
	I $P(IBX,"^",3)>1 W !!,"The conversion has been started ",$P(IBX,"^",3)," times"
	I $P(IBX,"^",13) W !!,"Conversion was started on:   " S Y=$P(IBX,"^",13) D DT^DIQ
	I $P(IBX,"^",14) W !,"The conversion completed on: " S Y=$P(IBX,"^",14) D DT^DIQ,ELAP W !,Y
	W !!,"                 Last Patient DFN Checked  ==  ",$J(+$P(IBX,"^",4),10)
	W !!,"  1.                Total Patients Checked  ==  " S X=+$P(IBX,"^",5),X2=0 D COMMA^%DTC W X
	W !,"                           Exempt Patients  ==  " S X=+$P(IBX,"^",6),X2=0 D COMMA^%DTC W X
	W !,"                       Non-Exempt Patients  ==  " S X=+$P(IBX,"^",7),X2=0 D COMMA^%DTC W X
	W !!,"  2.  Total Number of Rx Charges checked    ==  " S X=+$P(IBX,"^",16),X2=0 D COMMA^%DTC W X
	W !,"                     Dollar Amount Checked  ==  " S X=+$P(IBX,"^",9),X2="0$" D COMMA^%DTC W X
	W !,"          No. of Exempt Rx Charges Checked  ==  " S X=+$P(IBX,"^",8),X2=0 D COMMA^%DTC W X
	W !,"                      Exempt Dollar amount  ==  " S X=+$P(IBX,"^",10),X2="0$" D COMMA^%DTC W X
	W !,"      No. of Non-Exempt Rx Charges Checked  ==  " S X=+$P(IBX,"^",15),X2=0 D COMMA^%DTC W X
	W !,"                  Non-exempt Dollar amount  ==  " S X=+$P(IBX,"^",11),X2="0$" D COMMA^%DTC W X
	W !!,"  3.    Total Rx Charges Actually canceled  ==  " S X=+$P(IBX,"^",17),X2=0 D COMMA^%DTC W X
	W !,"                  Amount Actually canceled  ==  " S X=+$P(IBX,"^",12),X2="0$" D COMMA^%DTC W X
QUICQ	Q
	;
ELAP	; -- calcualate elaplse running time
	N X,IBBDT,IBEDT,IBDAY
	S X=$P(IBX,"^",13) D H^%DTC S IBBDT=%H_","_%T
	S X=$P(IBX,"^",14) D H^%DTC S IBEDT=%H_","_%T
	S IBDAY=+IBEDT-(+IBBDT)*86400 S X=IBDAY+$P(IBEDT,",",2)-$P(IBBDT,",",2) S Y="Elapsed time for Conversion was: "_(X\3600)_" Hours,  "_(X\60-(X\3600*60))_" Minutes,  "_(X#60)_" Seconds"
	Q

IBARXEC2
IBARXEC2	;ALB/AAS - SEND CONVERSION COMPLETION BULLETIN ; 13-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	N IBX,X
%	S IBX=$G(^IBE(350.9,1,3)) Q:'$P(IBX,"^",14)
	;
	S XMSUB="Medication Copayment Exemption Conversion Complete"
	S IBT(1)="The Medication Copayment Exemption Conversion has Completed at "_$P($$SITE^VASITE,"^",2,3)
	I $D(^%ZOSF("UCI")) X ^("UCI") S IBT(1)=IBT(1)_" ("_Y_")"
	S IBT(2)=""
	S Y=$P(IBX,"^",13) D D^DIQ
	S IBT(3)="Conversion started on:    "_Y
	S Y=$P(IBX,"^",14) D D^DIQ
	S IBT(4)="Conversion finished on:   "_Y
	S IBT(5)="Conversion was started "_$P(IBX,"^",3)_" time"_$S($P(IBX,"^",3)>1:"s.",1:".")
	D ELAP^IBARXEC1
	S IBT(6)=" "
	S IBT(7)=Y
	S IBT(8)=" "
	S X3=10
	S X=$P(IBX,"^",5),X2=0 D COMMA^%DTC
	S IBT(9)="   1.              Total Patients Checked  ==  "_X
	S X=$P(IBX,"^",6),X2=0 D COMMA^%DTC
	S IBT(10)="                          Exempt Patients  ==  "_X
	S X=$P(IBX,"^",7),X2=0 D COMMA^%DTC
	S IBT(11)="                      Non-Exempt Patients  ==  "_X
	S IBT(12)=" "
	S X=$P(IBX,"^",16),X2=0 D COMMA^%DTC
	S IBT(13)="   2.  Total Number of Rx Charges Checked  ==  "_X
	S X=$P(IBX,"^",9),X2="0$" D COMMA^%DTC
	S IBT(14)="                    Dollar Amount Checked  ==  "_X
	S X=$P(IBX,"^",8),X2=0 D COMMA^%DTC
	S IBT(15)="         No. of Exempt Rx Charges Checked  ==  "_X
	S X=$P(IBX,"^",10),X2="0$" D COMMA^%DTC
	S IBT(16)="                     Exempt Dollar Amount  ==  "_X
	S X=$P(IBX,"^",15),X2=0 D COMMA^%DTC
	S IBT(17)="     No. of Non-Exempt Rx Charges Checked  ==  "_X
	S X=$P(IBX,"^",11),X2="0$" D COMMA^%DTC
	S IBT(18)="                 Non-Exempt Dollar Amount  ==  "_X
	S IBT(19)=" "
	S X=$P(IBX,"^",17),X2=0 D COMMA^%DTC
	S IBT(20)="   3.  Total Rx Charges Actually Canceled  ==  "_X
	S X=$P(IBX,"^",12),X2="0$" D COMMA^%DTC
	S IBT(21)="                 Amount Actually Canceled  ==  "_X
	;
SEND	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMN=0
	S X="G.IB COPAY CONVERSION@ISC-ALBANY.VA.GOV" D INST^XMA21
	S XMY(DUZ)=""
	S IBGRP=$P(^IBE(350.9,1,0),"^",9)
	F IBI=0:0 S IBI=$O(^XMB(3.8,+IBGRP,1,"B",IBI)) Q:'IBI  S XMY(IBI)=""
	D ^XMD
	K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY
	Q

IBARXEC3
IBARXEC3	;ALB/AAS -RX CO-PAY INCOME EXEMPTION CONVERSION ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DQ	; -- run background sweep
	;
	U IO
	S IBJOB=11
	I $G(IBDONE)=1 G REPORT
	S (IBTCNT,IBTECNT,IBTNCNT,IBTAMT,IBTEAMT,IBTNAMT,IBTCECNT,IBTCEAMT,IBTNECNT,IBTBCNT,IBTCBCNT,IBQUIT)=0
	I IBARXJOB>1 S X=^IBE(350.9,1,3) D GET ; -- set variables to previous amounts
	;
	; -- Don't allow multiple conversion to run
	D CHK G:IBQUIT DQEND
	;
	; -- Start with last patient processed
	S DFN=+$P(^IBE(350.9,1,3),"^",4)
	;
	S IBDT=$S(IBDT<$$STDATE^IBARXEU:$$STDATE^IBARXEU,1:IBDT)
	F  S DFN=$O(^IB("APTDT",DFN)) Q:'DFN  D CHK Q:IBQUIT  I $O(^IB("APTDT",DFN,(IBDT-.01)))'>IBEDT D PAT I '$D(ZTQUEUED),'(IBTCNT#10) D READ W "."
	I DFN="" S IBDONE=1 D 
	.; --set done flag once completed
	.D NOW^%DTC S $P(^IBE(350.9,1,3),"^",14)=%
	.;
	.D ^IBARXEC2 ;send mail message if done
	.Q
	;
REPORT	; -- start the report process here
	D:$G(IBDONE)=1 REPORT^IBARXEC1
DQEND	D END^IBARXEC ;conversion all done
	Q
	;
PAT	; -- process one patient
	;
	K ^TMP($J,"IBARRY") D KVAR^VADPT
	S (IBCNT,IBECNT,IBCECNT,IBNCNT,IBAMT,IBEAMT,IBCEAMT,IBNAMT,IBNECNT,IBBCNT,IBCBCNT)=0
	S IBCNT=1 ;one patient checked
	S IBSTAT=$$RXEXMT^IBARXEU0(DFN,DT) ;get current status
	S:IBSTAT IBECNT=1 S:'IBSTAT IBNCNT=1 ; current status count
	;
	; -- must check each charge even if patient is exempt
	D CANCEL^IBARXECA(DFN,IBDT,IBEDT) ;cancel IB charges for patient from beg to end
	D COUNTS
	D CANDT^IBARXEU4 ;see if converted on the fly
	D ARCAN^IBARXEU4(DFN,IBSTAT,$P(IBCANDT,"^"),$P(IBCANDT,"^",2))
	;
PATQ	Q
	;
	;
COUNTS	; -- update the counts  -  Variables by:
	;
	;      Patient    Totals       Represents
	;      -------    ------       ----------
	;  5   ibcnt      ibtcnt   = : total patient count checked
	;  6   ibecnt     ibtecnt  = : total exempt patients
	;  7   ibncnt     ibtncnt  = : total non-exempt patients
	;  8   ibcecnt    ibtcecnt = : total count of exempt charges (rx's)
	;  9   ibamt      ibtamt   = : total dollar amount checked
	; 10   ibeamt     ibteamt  = : total exempt dollar amount
	; 11   ibnamt     ibtnamt  = : total non-exempt dollar amount
	; 12   ibceamt    ibtceamt = : total cancelled charges amount
	; 15   ibnecnt    ibtnecnt = : total non-exempt count
	; 16   ibbcnt     ibtbcnt  = : total bills checked
	; 17   ibcbcnt    ibtcbcnt = : total number of cancelled bills
	;
	S IBTCNT=IBTCNT+IBCNT
	S IBTECNT=IBTECNT+IBECNT
	S IBTNCNT=IBTNCNT+IBNCNT
	S IBTCECNT=IBTCECNT+IBCECNT
	S IBTAMT=IBTAMT+IBAMT
	S IBTEAMT=IBTEAMT+IBEAMT
	S IBTNAMT=IBTNAMT+IBNAMT
	S IBTCEAMT=IBTCEAMT+IBCEAMT
	S IBTNECNT=IBTNECNT+IBNECNT
	S IBTBCNT=IBTBCNT+IBBCNT
	S IBTCBCNT=IBTCBCNT+IBCBCNT
	Q:'$D(IBCONVER)
	;
	; -- set run paramters for conversion
	S $P(^IBE(350.9,1,3),"^",4,12)=DFN_U_IBTCNT_U_IBTECNT_U_IBTNCNT_U_IBTCECNT_U_IBTAMT_U_IBTEAMT_U_IBTNAMT_U_IBTCEAMT,$P(^(3),"^",15,17)=IBTNECNT_U_IBTBCNT_U_IBTCBCNT
	Q
	;
CHK	; -- Don't allow multiple conversion to run
	I IBARXJOB'=$P(^IBE(350.9,1,3),"^",3)  W !!,"The Integrated Billing Check of Pharmacy Copay Exemption due to Income",!,"was terminated.  Appears to be already running!" S IBQUIT=1
	Q
	;
READ	; -- pause, check for an excape
	N X,IBSHOW F  R X:1 Q:'$T  I X["^" D:'$D(IBSHOW) QUIC^IBARXEC1 S IBSHOW=""
	Q
	;
GET	; -- set initialization variable if restarting
	S IBTCNT=$P(X,"^",5)
	S IBTECNT=$P(X,"^",6)
	S IBTNCNT=$P(X,"^",7)
	S IBTCECNT=$P(X,"^",8)
	S IBTAMT=$P(X,"^",9)
	S IBTEAMT=$P(X,"^",10)
	S IBTNAMT=$P(X,"^",11)
	S IBTCEAMT=$P(X,"^",12)
	S IBTNECNT=$P(X,"^",15)
	S IBTBCNT=$P(X,"^",16)
	S IBTCBCNT=$P(X,"^",17)
	Q

IBARXEC4
IBARXEC4	;ALB/AAS - RX COPAY EXEMPTION CONVERSION REPORT BUILD ; 14-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
BUILD	; -- Build report
	;
	S (IBOK,IBN)=0
	F  S IBN=$O(^IB("AC",11,IBN)) Q:'IBN  D CHK,SET:IBOK
	Q
	;
CHK	; -- is entry in date range
	S IBOK=0
	S X=$G(^IB(IBN,0)),X1=$G(^IB(IBN,1))
	I X=""!(X1="") G CHK Q
	I (IBBDT-.00001)<$P(X1,"^",2),(IBEDT+.9)>$P(X1,"^",2) S IBOK=1
CHKQ	Q
	;
SET	; -- set entry in ^tmp
	S DFN=$P(X,"^",2)
	S IBP=$$PT^IBEFUNC(DFN) ; name^bid^pid
	S ^TMP("IBCONV",$J,$P(IBP,"^"),DFN,IBN)=IBP
	Q

IBARXEC5
IBARXEC5	;ALB/AAS - RX COPAY EXEMPTION CONVERSION REPORT PRINT ; 14-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
PRINT	; -- Print report
	S IBPAG=0,IBQUIT=0 D NOW^%DTC S Y=% D D^DIQ S IBPDAT=Y
	K IBBCNT
	D HDR
	I '$D(^TMP("IBCONV",$J)) W !,"No Charges Canceled due to Income Exemption in date range." Q
	S IBNAM="",(IBPCNT,IBTAMT,IBTCNT)=0
	F  S IBNAM=$O(^TMP("IBCONV",$J,IBNAM)) Q:IBNAM=""!(IBQUIT)  D
	.S DFN=0 F  S DFN=$O(^TMP("IBCONV",$J,IBNAM,DFN)) Q:'DFN!(IBQUIT)  S IBPCNT=IBPCNT+1 D
	..S (IBBCNT,IBAMT,IBN)=0 F  S IBN=$O(^TMP("IBCONV",$J,IBNAM,DFN,IBN)) D:IBN="" SUB Q:'IBN!(IBQUIT)  S X2=^(IBN) D ONE
	;
	D:'IBQUIT SUM
	K ^TMP("IBCONV",$J)
	Q
	;
ONE	; -- print one line
	I ($Y+5)>IOSL D PAUSE^IBOUTL,HDR:'IBQUIT
	W ! I 'IBBCNT W $E(IBNAM,1,20),?22,$P(X2,"^",2) S ERR="" D ERR I ERR]"" W ?36,ERR,!
	;
	S N=$G(^IB(IBN,0)),N1=$G(^(1)) ; new copay nodes
	S O=$G(^IB(+$P(N,"^",9),0)),O1=$G(^(1)) ; original copay nodes
	S IBBCNT=IBBCNT+1,IBAMT=IBAMT+$P(N,"^",7),IBTAMT=IBTAMT+$P(N,"^",7),IBTCNT=IBTCNT+1
	;
	W ?36,$$DAT1^IBOUTL($P(O1,"^",2))
	;
	S Y=+$P($P($P(O,"^",4),";",2),":",2)
	W $J($P($P(O,"^",8),"-"),9),$S(+Y:"/"_Y,1:"")
	W ?57,$$DAT1^IBOUTL($P(N1,"^",2)),?68,+N,?81,$P(N,"^",11),?97,"$",$P(N,"^",7)
	Q
	;
HDR	; -- print header
	I $D(IBCONVER)!($G(IBQUIC))!(IBPAG)!($E(IOST,1,2)="C-") W @IOF
	S IBPAG=IBPAG+1
	W "Rx Copay Income Exemption Report",?(IOM-35)
	W $P(IBPDAT,"@")," ",$P(IBPDAT,"@",2),"  Page ",IBPAG
	W !,"Charges Canceled ",$S(IBBDT=IBEDT:"on "_$$DAT1^IBOUTL(IBBDT),1:"from "_$$DAT1^IBOUTL(IBBDT)_" to "_$$DAT1^IBOUTL(IBEDT))
	W !,"                                                         Cancel     Cancel       Original"
	W !,"Name                     Pt. ID      Rx Date  Rx/Refill  Date       IB Number    Bill No.      Amount"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
SUB	; -- write sub totals
	W !,?85,"--------------"
	W !,?85,"Count  =  ",$J(IBBCNT,4)
	W !,?85,"Amount = $",$J(IBAMT,4),!
	Q
	;
SUM	; -- print final summary
	W !!?40,"======================================="
	W !?40,"    Total Patient Count =  ",$J(IBPCNT,7)
	W !?40,"    Total Rx Count      =  ",$J(IBTCNT,7)
	W !?40,"    Total Dollar amount = $",$J(IBTAMT,7)
	Q
	;
ERR	; -- see if any errors
	N DJ S DJ=""
	F  S DJ=$O(^TMP("IB-ERROR",DJ)) Q:DJ=""  S ERR=$G(^TMP("IB-ERROR",DJ,DFN)) Q:ERR]""
	Q

IBARXECA
IBARXECA	;ALB/AAS -RX CO-PAY INCOME EXEMPTION CANCEL OLD BILLS ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- count variables
	;      Patient    Totals       Represents
	;      -------    ------       ----------
	;  5   ibcnt      ibtcnt   = : total patient count checked
	;  6   ibecnt     ibtecnt  = : total exempt patients
	;  7   ibncnt     ibtncnt  = : total non-exempt patients
	;  8   ibcecnt    ibtcecnt = : total count of exempt charges (rx's)
	;  9   ibamt      ibtamt   = : total dollar amount checked
	; 10   ibeamt     ibteamt  = : total exempt dollar amount
	; 11   ibnamt     ibtnamt  = : total non-exempt dollar amount
	; 12   ibceamt    ibtceamt = : total cancelled charges amount
	; 15   ibnecnt    ibtnecnt = : total non-exempt count
	; 16   ibbcnt     ibtbcnt  = : total bills checked
	; 17   ibcbcnt    ibtcbcnt = : total number of cancelled bills
	;
CANCEL(DFN,IBDT,IBEDT)	; -- cancel all charges for a patient for a date range
	;  do not pass to ar as its done, call all at once later.
	;
	D ARPARM^IBAUTL
	S IBBDT=IBDT-.00001
	F  S IBBDT=$O(^IB("APTDT",DFN,IBBDT)) Q:'IBBDT!((IBEDT+.9)<IBBDT)  S IBN=0 F  S IBN=$O(^IB("APTDT",DFN,IBBDT,IBN)) Q:'IBN  D BILL
	;
	Q
	;
BILL	; -- process cancelling one bill
	S X=$G(^IB(IBN,0)) Q:X=""
	Q:+$P(X,"^",4)'=52  ;quit if not pharmacy co-pay
	; find parent
	S IBPARNT=$P(X,"^",9) Q:$D(^TMP($J,"IBARRY",DFN,IBPARNT))  ;don't keep checking  modifications to charge already checked
	;
	S ^TMP($J,"IBARRY",DFN,IBPARNT)=""
	S IBPARDT=$P($G(^IB(IBPARNT,1)),"^",2) ; get date of parent charge
	I $S(IBPARDT="":1,IBPARDT<IBDT:1,IBPARDT>IBEDT:1,1:0) ; ignore charges started before or after date range
	;
	; -- get exemption status on date of charge
	;    (NOT NECESSARY, conversion will use only current exemption
	;S IBSTAT=$$RXEXMT^IBARXEU0(DFN,IBPARDT)
	;
	; -- get must recent ibaction
	S IBPARNT1=IBPARNT F  S IBPARNT1=$P($G(^IB(IBPARNT,0)),"^",9) Q:IBPARNT1=IBPARNT  S IBPARNT=IBPARNT1 ;gets parent of parents, makes sure old bug where parents get lost isn't a problem
	D LAST
	;
	; -- add charge amounts to corrct variable
	S IBND=$G(^IB(IBLAST,0)),IBBCNT=IBBCNT+1,IBAMT=IBAMT+$P(IBND,"^",7)
	S:IBSTAT IBCECNT=IBCECNT+1,IBEAMT=IBEAMT+$P(IBND,"^",7)
	S:'IBSTAT IBNECNT=IBNECNT+1,IBNAMT=IBNAMT+$P(IBND,"^",7)
	;
	Q:'IBSTAT  ;quit if non-exempt
	Q:$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2  ;quit if already cancelled
	;
	; -- add cancellation charge for amount
	S IBCEAMT=IBCEAMT+$P(IBND,"^",7),IBCBCNT=IBCBCNT+1 ;counts of amount of actual cancellations
	S IBCRES=$O(^IBE(350.3,"B","RX COPAY INCOME EXEMPTION",0)) ; get cancellation reason
	;
	D CANRX^IBARXEU3
	Q
	;
END	;K VARIABLES
	Q
	;
LAST	; -- find most recent (the last) entry for a parent action
	S IBLAST=""
	S IBLDT=$O(^IB("APDT",IBPARNT,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBPARNT,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
	I IBLAST="" S IBLAST=IBPARNT
	Q

IBARXEI
IBARXEI	;ALB/AAS - RX COPAY EXEMPTION INQUIRY ; 21-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(IOF) D HOME^%ZIS
	;
PAT	I $G(IBQUIT) G END
	D END
	S (IBPAG,IBQUIT)=0 D NOW^%DTC S Y=% D D^DIQ S IBPDAT=Y
	;
	S DIC("W")="N IBX S IBX=$G(^IBA(354,+Y,0)) W ?32,"" "",$P($G(^DPT(+IBX,0)),U,9),?46,"" "",$$TEXT^IBARXEU0($P(IBX,U,4)),?59,"" "",$P($G(^IBE(354.2,+$P(IBX,U,5),0)),U)"
	W ! S DIC="^DPT(",DIC("S")="I $D(^IBA(354,+Y,0))",DIC(0)="AEQM",DIC("A")="Select BILLING PATIENT: " D ^DIC K DIC
	G:Y<1 END
	S DFN=+Y,IBP=$$PT^IBEFUNC(DFN),IBPBN=$G(^IBA(354,DFN,0))
	;
TYP	; -- inquire is active or all
	S DIR("?")="Enter 1 or B to see a brief inquiry of all Active Exemptions or enter 2 or F to see a full inquiry of the entire exemption history"
	S DIR(0)="SAOM^1:BRIEF;2:FULL",DIR("A")="(B)rief or (Full) Inquiry: ",DIR("B")="Brief"
	D ^DIR K DIR G:$D(DIRUT)!($G(Y)<1) END S IBFULL=Y
	;
DEV	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) K IO("Q") S ZTRTN="DQ^IBARXEI",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB INQUIRE TO PATIENT EXEMPTION" D ^%ZTLOAD,HOME^%ZIS K ZTSK D END G PAT
	U IO
	;
DQ	;
	K ^TMP($J)
	D @IBFULL
	I 'IBQUIT,IO=IO(0) D PAUSE^IBOUTL
	I '$D(ZTQUEUED) D END G PAT
	G END
	Q
	;
1	; -- brief view active exemptions
	D DISP^IBARXEX,STAT^IBARXEX
	Q
	;
2	; -- full view all exemptions
	D HDR
	S IBT=""
	;
	; -- build list in inverse effective date, inverse date/time added
	F  S IBT=$O(^IBA(354.1,"APIDT",DFN,IBT)) Q:'IBT  S IBIDT="" F  S IBIDT=$O(^IBA(354.1,"APIDT",DFN,IBT,IBIDT)) Q:'IBIDT  S IBDA="" F  S IBDA=$O(^IBA(354.1,"APIDT",DFN,IBT,IBIDT,IBDA)) Q:'IBDA!(IBQUIT)  D SET
	;
	; -- print list
	S IBIDT="" F  S IBIDT=$O(^TMP($J,DFN,IBIDT)) Q:'IBIDT!(IBQUIT)  S IBA="" F  S IBA=$O(^TMP($J,DFN,IBIDT,IBA)) Q:'IBA!(IBQUIT)  S IBDA="" F  S IBDA=$O(^TMP($J,DFN,IBIDT,IBA,IBDA)) Q:'IBDA!(IBQUIT)  S IBND=^(IBDA) D FULL
	;
	Q
	;
END	K ^TMP($J) S ZTREQ="@" I $D(ZTQUEUED) Q
	D ^%ZISC
	K C,X,Y,DFN,DIC,DIR,DIRUT,ZTSK,ZTREQ,IBCNT,IBDA,IBDT,IBFULL,IBIDT,IBJ,IBND,IBP,IBPAG,IBPBN,IBPDAT,IBQUIT,IBSTAT,IBSTATR,IBT
	Q
	;
HDR	; -- print header for full inquiry
	I IBPAG!($E(IOST,1,2)="C-") W @IOF
	S IBPAG=IBPAG+1
	W "Billing Exemption Inquiry",?(IOM-35),$P(IBPDAT,"@")," ",$P(IBPDAT,"@",2),"  Page ",IBPAG
	W !,$E($P(IBP,"^"),1,20),"   ",$P(IBP,"^",3),?27,"Currently: ",$$TEXT^IBARXEU0($P(IBPBN,"^",4))_"-"_$P($G(^IBE(354.2,+$P(IBPBN,"^",5),0)),"^"),?65," ",$$DAT1^IBOUTL($P(IBPBN,"^",3))
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
FULL	; -- print full inquiry for one exemption
	I $Y>(IOSL-8) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	I $G(IBND)="" W !,"Error, Missing Record - ",IBDA Q
	S Y=+IBND D D^DIQ
	W !,$S($P(IBND,"^",10):"**",1:"  "),"Effective Date: ",Y
	W ?36,"      Type: ",$P($P($P(^DD(354.1,.03,0),"^",3),$P(IBND,"^",3)_":",2),";",1)
	W !,"          Status: ",$P($P($P(^DD(354.1,.04,0),"^",3),$P(IBND,"^",4)_":",2),";",1)
	W ?36,"    Reason: ",$P($G(^IBE(354.2,+$P(IBND,"^",5),0)),"^")
	W !,"          Active: ",$S($P(IBND,"^",10):"YES, ACTIVE",1:"NO, INACTIVE")
	W ?36,"      User: ",$P($G(^VA(200,+$P(IBND,"^",7),0)),"^")
	W !,"       How Added: ",$P($P($P(^DD(354.1,.06,0),"^",3),$P(IBND,"^",6)_":",2),";",1)
	W ?36,"When Added: " S Y=$P(IBND,"^",8) D DT^DIQ
	I $P(IBND,"^",13)'="" W !,"Charges Canceled: " S Y=$P(IBND,"^",13) D DT^DIQ W ?36,"        To: " S Y=$P(IBND,"^",14) D DT^DIQ
	I $P(IBND,"^",15)'="" W !," Prior Threshold: " S Y=$P(IBND,"^",15) D DT^DIQ
	I $G(DUZ(0))="@" W !,"     Patient DFN: ",$P(IBND,"^",2),?36,"Ex. Number: ",IBDA
	W !
	Q
	;
SET	; -- built tmp array ==> ^tmp($j, dfn, -eff date, -date/time added, da)
	N X
	S X=$G(^IBA(354.1,+IBDA,0)) Q:X=""
	S ^TMP($J,DFN,IBIDT,-$P(X,"^",8),IBDA)=X
	Q

IBARXEP
IBARXEP	;ALB/AAS - RX COPAY EXEMPTION PRINT BILLING PATIENTS ; 20-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- print list of patient by status
	K IBCNTE,BY
	I '$D(IOF) D HOME^%ZIS
	W @IOF,?20,"Print Patient Medication Copayment Exemptions",!!!
	;
	S DIR("?")="Answer YES if you only want to print a statistical summary or answer NO if you want a list of patients plus the statistical summary."
	S DIR(0)="Y",DIR("A")="Print Summary Only",DIR("B")="YES" D ^DIR K DIR
	I $D(DIRUT) G END
	S IBSUM=Y
	I 'IBSUM W !!,"You will need a 132 column printer for this report!",!
	W !! D BY G END:$G(BY)=""
	S DIC="^IBA(354,",L=0,FR="?,?,?",TO="?,?,?"
	S FLDS=$S(IBSUM:"[IB BILLING PATIENT SUMMARY]",1:"[IB BILLING PATIENT]")
	S DHD="Patient Medication Copayment Exemption "_$S(IBSUM:"Statistics",1:"Report")
	S DIOEND="D SUMMARY^IBARXEP"
	;
	; -- exclude deceased patients
	I 'IBSUM S DIS(0)="I '+$G(^DPT(+D0,.35))"
	;
	D EN1^DIP
END	K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,IBCNTE,IBCNT,IBSUM,DUOUT,DIRUT
	Q
	;
	;
CNT	; -- set counts into ^tmp for summary report
	N X,Y S X=$G(^IBA(354,D0,0)) Q:X=""
	S Y=$P($G(^IBE(354.2,+$P(X,"^",5),0)),"^") Q:Y=""
	S X=$P(X,"^",4) Q:X=""
	S:'$D(IBCNTE(X,Y)) IBCNTE(X,Y)=0 S IBCNTE(X,Y)=IBCNTE(X,Y)+1
	Q
	;
BY	; -- sort by exemption reason or by exemption status
	S DIR(0)="SMA^.04:EXEMPTION STATUS;.05:EXEMPTION REASON",DIR("A")="SORT BY: ",DIR("B")="EXEMPTION STATUS"
	S DIR("?")="Sort by either Exemption Status (.04) or Exemption Reason (.05)"
	D ^DIR K DIR I $D(DIRUT) Q
	S BY=$S(Y=.05:"[IB BILLING PATIENT BY REASON]",Y=.04:"[IB BILLING PATIENT BY STATUS]",1:"")
	Q
	;
SUMMARY	; -- print summary page
	N X,Y
	W:'IBSUM !!,"===================================================="
	S (X,Y)="",IBCNT(0)=0,IBCNT(1)=0
	F  S X=$O(IBCNTE(X)) Q:X=""  S IBCNT=0 F  S Y=$O(IBCNTE(X,Y)) Q:Y=""  D
	.;sub counts
	.S IBCNT(X)=IBCNT(X)+IBCNTE(X,Y)
	.S IBCNT=IBCNT+1
	.;print line
	.W:IBCNT=1 !,$S(X:"Exempt",1:"Non-Exempt")," Status:"
	.W !?5,Y,?40,"= ",IBCNTE(X,Y)
	W !
	W:$D(IBCNTE(1)) !,"Total Exempt Patients",?40,"= ",IBCNT(1)
	W:$D(IBCNTE(0)) !,"Total Non-Exempt Patients",?40,"= ",IBCNT(0)
	;
	I IBSUM W !!!,"Statistics DO include counts from deceased patients."
	I 'IBSUM W !!!,"Statistics and report DO NOT include deceased patients."
	Q
	;
NOINC	; -- print list of patient with no income data with address
	;
	K IBCNTE,BY
	I '$D(IOF) D HOME^%ZIS
	W @IOF,?10,"Print Patients with NO INCOME DATA Medication Copayment Exemptions",!!!
	;
	S IBSUM=0
	S DIC="^IBA(354,",L=0,FR="?,?,?",TO="?,?,?"
	S BY="[IB BILLING PAT W/INCOME]"
	S FLDS="[IB BILLING PAT W/INCOME]"
	S DHD="Patient with a NO INCOME DATA Medication Copayment Exemption Report"
	;S DIOEND="D SUMMARY^IBARXEP"
	;
	; -- exclude deceased patients
	S DIS(0)="I '+$G(^DPT(+D0,.35))"
	;
	D EN1^DIP
NOINCQ	K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,IBCNTE,IBCNT,IBSUM,DUOUT,DIRUT
	Q
	;
EXADD	; -- print list of EXEMPT patients with address
	;
	K IBCNTE,BY
	I '$D(IOF) D HOME^%ZIS
	W @IOF,?10,"Print List of Exempt Patients with Addresses",!!!
	;
	S IBSUM=0
	S DIC="^IBA(354,",L=0,FR="?,?,?",TO="?,?,?"
	S BY="[IB EXEMPT PATIENTS]"
	S FLDS="[IB PATIENT ADDRESSES]"
	S DHD="List of Exempt Patients with Addresses"
	;
	; -- exclude deceased patients
	S DIS(0)="I '+$G(^DPT(+D0,.35))"
	;
	D EN1^DIP
EXADDQ	K DIC,L,FLDS,DIOEND,FR,TO,BY,DHD,X,Y,IBCNTE,IBCNT,IBSUM,DUOUT,DIRUT
	Q

IBARXEPE
IBARXEPE	;ALB/AAS - EDIT EXEMPTION LETTER - 28-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	;
EDIT	; -- Edit form letter
	I '$D(IOF) D HOME^%ZIS
	W @IOF,"Edit Exemption Patient Notification Letter",!!!
	S IBQUIT=0
	S DIC("B")="IB NOW EXEMPT",DIC(0)="AEQMNL",DIC="^IBE(354.6," D ^DIC K DIC S (IBLET,DA)=+Y G:DA<1 EDQ
	S DR=""
	I $P($G(^IBE(354.6,DA,0)),"^",4)="" S DR=".04////15;"
	S DIE="^IBE(354.6,",DR=DR_"2;1;.04" D ^DIE
	;
	W !!
TEST	S DIR(0)="Y",DIR("A")="Test Print Letter",DIR("B")="YES" D ^DIR K DIR
	I Y'=1 G EDQ
	W !
	S DIC="^DPT(",DIC(0)="AEQM",DIC("S")="I $P($G(^IBA(354,+Y,0)),U,4)",DIC("A")="Select Exempt BILLING PATIENT: "
	D ^DIC K DIC I +Y<1 G EDQ
	S DFN=+Y,IBDATA=$$PT^IBEFUNC(DFN),IBNAM=$P(IBDATA,"^")
	S %ZIS="QM" D ^%ZIS G:POP EDQ
	I $D(IO("Q")) K IO("Q") S ZTRTN="ED1^IBARXEPE",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="Test Print Exemption Letter" D ^%ZTLOAD K ZTSK D HOME^%ZIS G EDQ
	U IO
	; 
ED1	S IBALIN=$P($G(^IBE(354.6,IBLET,0)),"^",4)
	I IBALIN<10!(IBALIN>25) S IBALIN=15
	D ONE^IBARXEPL
	;
EDQ	D END^IBARXEPL
	Q

IBARXEPL
IBARXEPL	;ALB/AAS - PRINT EXEMPTION LETTER - 28-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	I '$D(IOF) D HOME^%ZIS
	W @IOF,"Print Exemption letters to patients"
	K ^TMP("IBEX LIST",$J)
	S (IBTEMP,IBADDT,IBOK,IBQUIT)=""
	;
	; -- find template
	S IBTEMP=$O(^DIBT("B","IB EXEMPTION LETTER",0))
	;
	; -- use old template or build new one
	W !!!
	;
	I IBTEMP D  G:IBQUIT END
	.S DIR(0)="Y",DIR("A")="Delete Results of Previous Search",DIR("B")="NO"
	.S DIR("?")="Enter 'Yes' if you would like to delete the results of a previous search, Enter 'No' if you want to keep the results (i.e. you may be reprinting letters from the same list)."
	.D ^DIR K DIR I $D(DIRUT) S IBQUIT=1
	.I Y=1 D DELT S IBTEMP=0
	.Q
	;
	I 'IBTEMP D  G:IBQUIT END D:IBADD ADDT
	.S DIR(0)="Y",DIR("A")="Store results of Search in Template",DIR("B")="YES"
	.S DIR("?")="Enter 'Yes' if you would like the results of the search stored in a Sort Template named IB EXEMPTION LETTER.  Enter 'No' if you do not want the template created."
	.S DIR("?",1)="Creating the search template will allow you to",DIR("?",2)="print other lists from the patients you sent the letters to."
	.S DIR("?",3)=" "
	.D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
	.S IBADD=Y
	.Q
	;
	D PRINT
	;
	;
END	Q:$D(ZTQUEUED)
	D ^%ZISC
	D KVAR^VADPT
	K C,J,X,Y,D0,DIC,DA,DR,DIE,DFN,DLAYGO,DIR,DIRUT,IB,IBADD,IBADDT,IBTEMP,IBOK,IBLET,IBCNT,IBCNTL,IBQUIT,IBNAM,IBDATA,IBJ,IBX,TAB,POP,IBALIN,DIOEND
	K ^TMP("IBEX LIST",$J)
	Q
	;
ADDT	; -- create new template in ^dibt
	K DD,DO
	S DIC="^DIBT(",DIC(0)="L",X="IB EXEMPTION LETTER",DIC("DR")="2///NOW;4///354;7///NOW"
	D FILE^DICN S IBTEMP=+Y I +Y S IBADDT=1 W !!,"<<< Search Template IB EXEMPTION LETTER created!",!
	Q
	;
DELT	; -- delete search template
	Q:$P($G(^DIBT(+IBTEMP,0)),"^",1)'="IB EXEMPTION LETTER"
	S DIK="^DIBT(",DA=IBTEMP D ^DIK K DIK,DA
	W !!,"<<< Search Template IB EXEMPTION LETTER deleted!",!
	S IBTEMP=""
	Q
	;
SCR	; -- don't send letters to deceased patients, non-vets
	;    called by print template IB DO NOT USE
	S IBOK=0 N IBX
	I +$G(^DPT(D0,.35)) G SCRQ ; deceased
	I $P($G(^DPT(D0,"VET")),"^")="N" G SCRQ ; patient non-vet
	S IBX=$P($G(^IBE(354.2,+$P($G(^IBA(354,D0,0)),"^",5),0)),"^",5)
	I IBX=60 G SCRQ ;exemption is non-vet
	I IBX=10 G SCRQ ;sc>50
	S IBOK=1
SCRQ	Q
	;
PRINT	; -- run through list of letters to PRINT
	S X="IB NOW EXEMPT",DIC(0)="XZ",DIC="^IBE(354.6," D ^DIC S IBLET=+Y
	Q:IBLET<1
	;
	S DIC="^IBA(354,",L=0,FLDS="[IB DO NOT USE]",BY="[IB EXEMPT PATIENTS]",(FR,TO)="?,?,?",DHD="@@"
	S DIOEND="D LET^IBARXEPL"
	D EN1^DIP
	Q
	;
LET	; -- called by dioend, prints list from tmp array
	S IBALIN=$P($G(^IBE(354.6,IBLET,0)),"^",4)
	I IBALIN<10!(IBALIN>25) S IBALIN=15
	S IBNAM="" F  S IBNAM=$O(^TMP("IBEX LIST",$J,IBNAM)) Q:IBNAM=""!(IBQUIT)  S DFN=0 F  S DFN=$O(^TMP("IBEX LIST",$J,IBNAM,DFN)) Q:'DFN!(IBQUIT)  S IBDATA=^(DFN) D ONE
	D FINAL,END
	Q
	;
ONE	; -- print one letter
	S TAB=5
	I '$D(IOF) D HOME^%ZIS
	S IBCNTL=$G(IBCNTL)+1 I $E(IOST,1,2)="C-" W @IOF
	S IB=0
	;
	; -- print header
	S IBCNT=0
	F I=1:1:6 S IB=$O(^IBE(354.6,IBLET,2,IB)) Q:'IB  S X=$G(^(IB,0)) W !?(IOM-$L(X)+1/2),X S IBCNT=IBCNT+1
	W ! S Y=DT D DT^DIQ S IBCNT=IBCNT+1
	F IBCNT=IBCNT:1:6 W ! S IBCNT=IBCNT+1
	W !?(IOM-28),"In Reply Refer To:" S IBCNT=IBCNT+1
	W !?(IOM-28),$P(IBDATA,"^",2) S IBCNT=IBCNT+1
	W ! S IBCNT=IBCNT+1
	S IBX=$$RXST^IBARXEU(DFN,DT) I $P(IBX,"^",3)=120 S Y=$$PLUS^IBARXEU0($P(IBX,"^",5)) W ?(IOM-28),"Renewal Date: " D DT^DIQ
	;
	; -- print pt. name and address
	F IBCNT=IBCNT:1:(IBALIN-1) W !
	W !?TAB,$P(IBNAM,",",2)," ",$P(IBNAM,",") D ADD^VADPT S IBCNT=IBCNT+1
	W !?TAB,VAPA(1) S IBCNT=IBCNT+1
	I VAPA(2)'="" W !?TAB,VAPA(2) I VAPA(3)'="" W ", ",VAPA(3) S IBCNT=IBCNT+1
	W !?TAB,VAPA(4),", ",$P($G(^DIC(5,+VAPA(5),0)),"^",2),"  ",VAPA(6) S IBCNT=IBCNT+1
	I $E(IOST,1,2)="C-" D PAUSE^IBOUTL Q:IBQUIT
	;
	; -- print main body
	W !! S IBCNT=IBCNT+2
	S IB=0 F  S IB=$O(^IBE(354.6,IBLET,1,IB)) Q:IB=""  S X=$G(^(IB,0)) W !,X S IBCNT=IBCNT+1
	I $E(IOST,1,2)="C-" D PAUSE^IBOUTL Q:IBQUIT
	W:$E(IOST,1,2)'="C-" @IOF
	Q
	;
FINAL	; -- Print last page
	W @IOF,!!!,?20,"EXEMPTION LETTERS PRINTING COMPLETED"
	W !!,?20,$G(IBCNTL)," LETTERS PRINTED"
	Q

IBARXEPV
IBARXEPV	;ALB/AAS - RX COPAY EXEMPTION VERIFY STATUS ; 21-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- print/verify patients whose current exemption does not match
	;    what is currently computed.
	I '$D(DT) D DT^DICRW
	S IBQUIT=0
	I '$D(IOF) D HOME^%ZIS
	W @IOF,"Verify Medication Copayment Exemption Status"
	W !! D DATE^IBOUTL
	I 'IBBDT!('IBEDT)!(IBEDT<IBBDT) G END
	;
	; -- update patient status
	W !
	S DIR("?")="Answer 'YES' if you want to automatically update patient status to the computed status, or 'NO' to print a report of discrepancies."
	S DIR(0)="Y",DIR("A")="Update Patient Status",DIR("B")="NO" D ^DIR K DIR S IBUP=+Y
	I $D(DIRUT) G END
	W !
	;
DEV	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBARXEPV",ZTSAVE("IB*")="",ZTDESC="IB Verify Medication Copayment exemption" D ^%ZTLOAD K ZTSK,IO("Q") D HOME^%ZIS G END
	I '$D(ZTQUEUED) W !,"HMMMM, LET ME THINK ABOUT THIS FOR A MINUTE"
	U IO
	;
DQ	; -- entry point from task man to start comparison
	S (IBPCNT,IBPAG)=0,IBOK=1 D NOW^%DTC S Y=% D D^DIQ S IBPDAT=$P(Y,"@")_" "_$E($P(Y,"@",2),1,5)
	K ^TMP($J,"IBUNVER")
	;
	; -- look through inverse date x-ref
	S IBDT=IBBDT-.00001
	F  S IBDT=$O(^IBA(354.1,"B",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.9))  S IBDA=0 F   S IBDA=$O(^IBA(354.1,"B",IBDT,IBDA)) Q:'IBDA  D CHK I 'IBOK D UP:IBUP,SET
	D REPORT,PAUSE^IBOUTL:'IBQUIT
	G END
	;
END	K ^TMP($J,"IBUNVER")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K DFN,DIR,DIRUT,DIC,DIE,DA,DR,X,Y
	K IBBDT,IBDA,IBDATA,IBDEPEN,IBDFN,IBDT,IBEDT,IBER,IBERR,IBEXREA,IBEXREAN,IBEXREAO,IBJ,IBMESS,IBNAM,IBOK,IBP,IBPAG,IBPCNT,IBPDAT,IBQUIT,IBUP
	Q
	;
REPORT	; -- print report
	D HDR S IBDCNT=0
	I '$D(^TMP($J,"IBUNVER")) W !,"No discrepancies found in ",IBPCNT," exemptions checked." G REPORTQ
	;
	S IBNAM=""
	F  S IBNAM=$O(^TMP($J,"IBUNVER",IBNAM)) Q:IBNAM=""!(IBQUIT)  S IBDFN="" F  S IBDFN=$O(^TMP($J,"IBUNVER",IBNAM,IBDFN)) Q:IBDFN=""!(IBQUIT)  S IBER=^(IBDFN) D LINE
	;
	W !!,"There were ",IBDCNT," discrepancies found in ",IBPCNT," exemptions checked."
	;
REPORTQ	Q
	;
LINE	; -- write each line
	S DFN=+IBDFN,IBDCNT=IBDCNT+1
	I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	W !,$E(IBNAM,1,20),?22,$P(IBER,"^",8)
	S X=$P(IBER,"^",5) W ?39,$S(X=3:"Exemption incorrect",X=1!(X=2)!(X=5):"Not Current Status",X=4:"Name Missing",1:"Hmmmm")
	W ?61,$$DAT1^IBOUTL($P(IBER,"^",2))_" "_$E($P($G(^IBE(354.2,+IBER,0)),"^"),1,15)
	W ?88,$$DAT1^IBOUTL($P(IBER,"^",4))_" "_$E($P($G(^IBE(354.2,+$P(IBER,"^",3),0)),"^"),1,15)
	W ?115,$P(IBER,"^",6)
	Q
	;
CHK	; -- check if current status = computed status
	S IBOK=1,IBMESS="Nothing Updated",IBERR=""
	S X=$G(^IBA(354.1,+IBDA,0)) G CHKQ:'$P(X,"^",10) ;not active skip
	S DFN=$P(X,"^",2)
	S Y=$G(^IBA(354,DFN,0)) I +X<$P(Y,"^",3) G CHKQ ;not current exemption
	S IBPCNT=IBPCNT+1
	I '+Y S IBOK=0,IBERR=4
	S IBEXREAO=$P(X,"^",5)_"^"_+X ;current exemption
	I $P($G(^IBE(354.2,+IBEXREAO,0)),"^",5)=2010 G CHKQ ; hardships don't report
	I +X>$P(Y,"^",3) S IBOK=0,IBERR=1 ;most current exemption not in 354
	I $P(X,"^",5)'=$P(Y,"^",5) S IBOK=0,IBERR=2 ;Current exemption not in 354
	I $P(X,"^",4)'=$P(Y,"^",4) S IBOK=0,IBERR=5 ;current status in exemption not in 354
	S IBEXREAN=$$STATUS^IBARXEU1(DFN,DT)
	I +IBEXREAO'=+IBEXREAN S IBOK=0,IBERR=3
CHKQ	Q
	;
UP	; -- update current exemption status
	Q:IBOK
	S IBJOB=15,IBWHER=16
	I IBERR=4 D  G UPQ
	.S DIE="^IBA(354,",DA=DFN,DR=".01////"_DFN D ^DIE
	.K DIE,DA,DR,DIC
	.S IBMESS="Name Corrected"
UP1	N IBOLDAUT S IBOLDAUT=""
	;
	; -- if currently not auto exempt make sure not more recent autoexempt
	I $L($P($G(^IBE(354.2,+IBEXREAN,0)),"^",5))>2 D OLDAUT^IBARXEX1(IBEXREAN)
	S IBFORCE=$P(IBEXREAN,"^",2)
	D MOSTR^IBARXEU5($P(IBEXREAN,"^",2),+IBEXREAN)
	D ADDEX^IBAUTL6(+IBEXREAN,$P(IBEXREAN,"^",2),1,1,IBOLDAUT)
	S IBMESS="Updated"
UPQ	K IBFORCE Q
	;
SET	; -- set ^tmp node if not okay
	Q:IBOK
	S IBP=$$PT^IBEFUNC(DFN)
	S IBDFN=DFN
	I $D(^TMP($J,"IBUNVER",$P(IBP,"^"),DFN)) S IBDFN=DFN_"-"_IBPCNT
	S ^TMP($J,"IBUNVER",$P(IBP,"^"),IBDFN)=IBEXREAO_"^"_IBEXREAN_"^"_IBERR_"^"_IBMESS_"^"_IBP
	Q
	;
HDR	; -- print header
	I IBPAG!($E(IOST,1,2)="C-") W @IOF
	S IBPAG=IBPAG+1
	W !,"Medication Copayment Exemption Problem Report",?(IOM-31),IBPDAT," Page ",IBPAG
	W !,"Patient",?22,"PT. ID",?39,"Error",?61,"Current Exemption",?88,"Computed Exemption",?115,"Action"
	W !,$TR($J(" ",IOM)," ","-")
	Q

IBARXET
IBARXET	;ALB/AAS - RX COPAY EXEMPTION THRESHOLD ENTER/LIST ; 20-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADD	; -- add/edit new thresholds
	S IBTH=""
	S DIC="^IBE(354.3,",DIC(0)="AEQLMN",DLAYGO=354.3,DIC("DR")="" D ^DIC G ADDQ:Y<1
	S DA=+Y,DIE="^IBE(354.3,",DR="[IB ENTER THRESHOLD]" D ^DIE
	I $D(DA) S IBX=$G(^IBE(354.3,DA,0)),$P(IBX,"^",2)=2 D
	.I $P(IBX,"^",3)'="",$P(IBX,"^",4)'="",$P(IBX,"^",12)'="" Q
	.S DIK="^IBE(354.3," D ^DIK
	.W !!,"Entry Deleted, not enough information."
	.K DA,DIK
	.Q
	;
	D:$D(DA)#2 PRIOR
	W ! G ADD
ADDQ	K DLAYGO,DIC,DIE,DA,DR,X,Y,IBDA,IBTH,IBX
	Q
	;
PRINT	; -- print threshold list
	I '$D(IOF) D HOME^%ZIS
	W @IOF,?15,"Print Medication Copayment Income Thresholds",!!!
	W !!,"You will need a 132 column printer for this report!",!
	S DIC="^IBE(354.3,",L=0,FLDS="[IB PRINT THRESHOLD]",BY="[IB PRINT THRESHOLD]",FR="?,?",TO="?,?"
	S DHD="Medication Copayment Income Thresholds"
	D EN1^DIP
PRINTQ	K L,FLDS,BY,FR,TO,DHD,DIC
	Q
	;
PRIOR	; -- check to see if prior year thresholds used
	S IBPR=$G(^IBE(354.3,+DA,0)) I IBPR="" G PRIORQ
	I $P(IBPR,"^",2)'=2 G PRIORQ
	S IBPRDT=$O(^IBE(354.3,"AIVDT",2,-($P(IBPR,"^")))) ;threshold prior to the one entered
	I IBPRDT<0 S IBPRDT=-IBPRDT ; minus a negative to make positive
	G:IBPRDT="" PRIORQ I '$D(^IBA(354.1,"APRIOR",IBPRDT)) G PRIORQ
	;
	; -- is exemptions based on prior thresholds
	K ^TMP($J)
	W !!,"There are Medication Copayment Exemptions based on prior thresholds",!
	S DIR("?")="There are exemptions that were based on the threshold values over a year old.  You can ignore this, print a list of patients with old exemptions, or automatically update while printing the same list"
	S DIR(0)="S^1:IGNORE;2:PRINT;3:UPDATE AND PRINT",DIR("A")="Select ACTION",DIR("B")="IGNORE" D ^DIR K DIR I $D(DIRUT)!(Y<2)!(Y>3) G PRIORQ
	S IBACT=Y
	;
	S %ZIS="QM" D ^%ZIS G:POP PRIORQ
	I $D(IO("Q")) K IO("Q") S ZTRTN="DQ^IBARXET",ZTDESC="IB PRIOR YEAR THRESHOLD PRINT"_$S(IBACT=3:" AND UPDATE",1:""),ZTSAVE("IB*")="" D ^%ZTLOAD K ZTSK D ^%ZISC G PRIORQ
	U IO
	;
DQ	; -- entry point from tasking
	S (IBQUIT,IBPAG)=0 D NOW^%DTC S Y=% D D^DIQ S IBPDAT=Y
	D HDR
	S IBEX=""
	F  S IBEX=$O(^IBA(354.1,"APRIOR",IBPRDT,IBEX)) Q:IBEX=""  D SET
	;
	S IBNAM=""
	F  S IBNAM=$O(^TMP($J,"IBPRIOR",IBNAM)) Q:IBNAM=""  S DFN="" F  S DFN=$O(^TMP($J,"IBPRIOR",IBNAM,DFN)) Q:DFN=""  S IBP=^(DFN) D ONE
	;
PRIORQ	I $D(ZTQUEUED) S ZTREQ="@" Q
	K X,Y,DFN,DIR,DIRUT,IBACT,IBPR,IBPRDT,IBQUIT,IBPAG,IBPDAT,IBPRIOR,IBEX,IBNAM,IBND,IBP,IBEXREA
	Q
	;
HDR	; -- print prior threshold header
	I IBPAG!($E(IOST,1,2)="C-") W @IOF
	S IBPAG=IBPAG+1
	W "Exemptions Based on Prior Year Thresholds Report",?(IOM-35),$P(IBPDAT,"@")," @ ",$P(IBPDAT,"@",2)," Page ",IBPAG
	W !,"Patient",?22,"PT. ID",?36,"Exemption Date",?52,"Status" W:IBACT=3 ?65,"Action"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
SET	; -- set up sortable array by patient
	S IBND=$G(^IBA(354.1,IBEX,0)) Q:IBND=""
	S DFN=$P(IBND,"^",2),IBP=$$PT^IBEFUNC(DFN)
	S ^TMP($J,"IBPRIOR",$P(IBP,"^"),DFN)=IBEX_"^"_IBP
	Q
	;
ONE	; -- print line for one patient
	S IBEX=+IBP,IBP=$P(IBP,"^",2,5)
	I $Y>(IOSL-5) D HDR
	S IBND=$G(^IBA(354.1,IBEX,0)) G ONEQ:IBND=""
	S Y=+IBND D D^DIQ
	W !,$E(IBNAM,1,20),?22,$P(IBP,"^",2),?36,Y,?52,$$TEXT^IBARXEU0($P(IBND,"^",4))
	;
	; -- compute exempt, add if different, else delete prior
	G:IBACT'=3 ONEQ
	S IBEXREA=$$STATUS^IBARXEU1(DFN,+IBND)
	I +IBEXREA'=$P(IBND,"^",5) D ADDEX^IBAUTL6(IBEXREA,+IBND,1,1) W ?65,"Exemption updated"
	I +IBEXREA=$P(IBND,"^",5) S DA=IBEX,DIE="^IBA(354.1,",DR=".15///@" D ^DIE W ?65,"No Change"
	K DIE,DA,DR,DIC
ONEQ	Q

IBARXEU
IBARXEU	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
RXST(DFN,IBDT)	; -- Check rx income exemption status of patient
	;
	;  input = :  dfn  = patient file pointer
	;             ibdt = date to check for (optional) default is today
	;
	;  returns :  -1 if no data   ^text^reason code^reason text^date of test
	;              0 if non exempt
	;              1 if exempt
	;
	N X,Y,IBX,IBON
	;
	S IBON=$$ON^IBARXEU0 I IBON<1 Q IBON
	;
	S IBX=""
	I '$G(IBDT) S IBDT=DT
	I IBDT>DT S IBDT=DT ; no future dates
	;
	; -- date before legislations
	I IBDT<$$STDATE S IBX="0^NON-EXEMPT^^Date is Prior to Legislation^" G RXSTQ ; nobody exempt prior to legislation
	;
	; -- if no data on patient quit
	S X=$G(^IBA(354,DFN,0)) I X=""!('$D(^IBA(354.1,"AP",DFN))) S IBX="-1^UNKNOWN^^Medication Copayment Exemption status never determined" G RXSTQ ; no data return -1
	;
	; -- use current status if ibdt not less than current test and
	;    not greater than current test date +365
	I IBDT'<$P(X,"^",3),IBDT'>$$PLUS^IBARXEU0($P(X,U,3)) S IBX=$$IBX^IBARXEU0(DFN,IBDT) G RXSTQ
	;
	; -- if ibdt not less than current date but greater than
	;    current test +365 is into future
	I IBDT'<$P(X,"^",3),IBDT>$$PLUS^IBARXEU0($P(X,U,3)) D
	.S Y=$$LST^IBARXEU0(DFN,IBDT)
	.S IBX=+$P(X,"^",4)_"^"_"Previously "_$$TEXT^IBARXEU0($P(X,"^",4))_"^"_$$ACODE^IBARXEU0(Y)_"^"_"Requires new exemption. Previously "_$$REASON^IBARXEU0(Y)_"^"_+Y
	;
	; -- if ibdt less than current date need old exemption data
	I IBDT<$P(X,"^",3) D  G RXSTQ
	.;
	.; -- find status of prior test
	.S Y=$$LST^IBARXEU0(DFN,IBDT)
	.;
	.; -- no previous data
	.I Y="" D  Q
	..S IBX="-1^UNKNOWN^^No data for date requested."
	..Q
	.;
	.; --if old exemption is current for copay date
	.I IBDT'>$$PLUS^IBARXEU0(+Y) D  Q
	..S X=$G(^IBE(354.2,+$P(Y,"^",5),0)) ; exemption reason node
	..S IBX=+$P(X,"^",4)_"^"_$$TEXT^IBARXEU0($P(X,"^",4))_"^"_$$ACODE^IBARXEU0(Y)_"^"_$$REASON^IBARXEU0(Y)_"^"_+Y
	..Q
	.;
	.; -- if ibdt is greater than old exemption + 365
	.;    report previous
	.I IBDT>$$PLUS^IBARXEU0(+Y) D  Q
	..S X=$G(^IBE(354.2,+$P(Y,"^",5),0)) ;exemption reason node
	..S IBX=+$P(X,"^",4)_"^"_"Previously "_$$TEXT^IBARXEU0($P(X,"^",4))_"^"_$$ACODE^IBARXEU0(Y)_"^"_"Requires new exemption. Previously "_$$REASON^IBARXEU0(Y)_"^"_+Y
	..Q
	.Q
	;
RXSTQ	Q IBX
	;
DISP(DFN,IBDT,NO,NULL)	; -- formats text to display 
	; -- input =  dfn
	;             ibdt = date to check for
	;             no   = number of lines to print (1, 2, or 3)
	;             null = if zero print unknown, if non-zero quit
	;
	I '$G(IBDT) S IBDT=DT
	I '$D(NULL) S NULL=1
	I IBDT>DT S IBDT=DT ; no future dates
	I '$G(NO) S NO=3
	S X=$$RXST(DFN,IBDT)
	S IBON=$$ON^IBARXEU0 I IBON<1 S X=IBON
	I X<0&(NULL) G DISPQ
	W !,"Medication Copayment Exemption Status: ",$P(X,"^",2) G:NO<2 DISPQ
	W !,$P(X,"^",4) G:NO<3 DISPQ
	I $P(X,"^",5) W !,"Test date: " S Y=$P(X,"^",5) D DT^DIQ
DISPQ	Q
	;
STDATE()	;  -- legislative start date for income exemption
	Q 2921030
	;
	;
ACTIVE(IBZ)	; -- SCREEN for active field of billing exemptions file
	;    only one entry per effective date can be active
	;
	N IBX,IBY,T
	S T=0
	S IBZ=$S(IBZ=1:IBZ,$E(IBZ)="A":1,1:0)
	I 'IBZ S T=1 G ACTIVEQ
	S IBX=$G(^IBA(354.1,DA,0))
	S IBY=$O(^IBA(354.1,"AIVDT",+$P(IBX,"^",3),+$P(IBX,"^",2),-$P(IBX,"^"),0))
	I 'IBY!(IBY=DA) S T=1
	W:$D(IBTALK) !!,"Another entry is already Active, You must inactivate it first",!!
ACTIVEQ	Q T

IBARXEU0
IBARXEU0	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
RXEXMT(DFN,IBDT)	; -- Check income exemption status of patient
	; -- Warning, this function may cause new entries to be created
	;    when no data exists of new entry for current caledar year exists.
	;
	;  input = :  dfn  = patient file pointer
	;             ibdt = date to check for
	;  returns :
	;              0 if not exempt
	;              1 if exempt^text^reason code^reason^date of test
	;
	;*** START RT CLOCK
	;S XRTN="ADD EXEMPTION",XRTL=$ZU(0) D T0^%ZOSV
	;
	N X,Y,IBON,IBX,IBJOB,IBEXERR,IBWHER,DA,DR,DIC,DIE
	;
	S IBON=$$ON I IBON<1 Q IBON
	;
	S IBX="",IBJOB=14,IBEXERR=""
	I '$G(IBDT) S IBDT=DT
	I IBDT>DT S IBDT=DT ; no future dates
	;
	; -- date before legislation
	I IBDT<$$STDATE^IBARXEU S IBX="0^NON-EXEMPT^^Date is prior to legislation^" G RXEXMTQ
	;
	S X=$G(^IBA(354,DFN,0))
	;
	; -- if current patient, current request, get data and quit
	I IBDT'<$P(X,"^",3),IBDT'>$$PLUS($P(X,"^",3)),$P(X,"^",4)'="" S IBX=$$IBX(DFN,IBDT) G RXEXMTQ
	;
	; -- if no patient add one
	I '+X D ADDP^IBAUTL6 S X=$G(^IBA(354,DFN,0)) G:$G(IBEXERR) RXEXMTQ D AEX(DFN,IBDT) S IBX=$$IBX(DFN,IBDT) G RXEXMTQ
	;
	; -- if current exemption older than 365 days add new one
	I IBDT'<$P(X,"^",3),IBDT>$$PLUS($P(X,"^",3)) D AEX(DFN,IBDT) S IBX=$$IBX(DFN,IBDT) G RXEXMTQ
	;
	; -- if ibdt less than current date need old exemption data
	I IBDT<$P(X,"^",3) D
	.;
	.;find status of prior year
	.S Y=$G(^IBA(354.1,+$O(^(+$O(^IBA(354.1,"AIVDT",1,DFN,-(IBDT+.0001))),0)),0))
	.; -- no data
	.I Y="" D AEX(DFN,IBDT)
	.;
	.; -- old data too old need to insert exemption
	.I IBDT>$$PLUS(+Y) D AEX(DFN,IBDT)
	.;
	.; -- if old exemption is current for this copay date
	.S IBX=$$IBXOLD(DFN,IBDT)
	.Q
	;
	;*** STOP RT CLOCK
RXEXMTQ	;I $D(XRT0),$D(XRTN) D T1^%ZOSV
	;
	Q IBX
	;
	;
AEX(DFN,IBDT)	; -- add exemption
	; set exemption effective date to means test dates
	;
	N X
	S X=$$STATUS^IBARXEU1(DFN,IBDT)
	D ADDEX^IBAUTL6(+X,$P(X,"^",2))
	Q
	;
IBX(DFN,IBDT)	; -- format output from current status
	N X,Y
	S X=$G(^IBA(354,DFN,0)),Y=$$LST(DFN,IBDT)
	Q +$P(X,"^",4)_"^"_$$TEXT(+$P(X,"^",4))_"^"_$$ACODE(Y)_"^"_$$REASON(Y)_"^"_+Y
	;
IBXOLD(DFN,IBDT)	; -- format output from old exemption
	N X,Y
	S Y=$$LST(DFN,IBDT)
	S X=$G(^IBE(354.2,+$P(Y,"^",5),0)) ; exemption reason node
	Q +$P(X,"^",4)_"^"_$$TEXT(+$P(X,"^",4))_"^"_$$ACODE(Y)_"^"_$$REASON(Y)_"^"_+Y
	;
	;
ON()	; -- is copay exemption testing on
	;    output 1 = exemption testing is active
	;           0 = exemption testing is inactive (everybody non-exempt)
	;          -1 = copay is off (everybody exempt)
	Q 1
	;Q "0^NON-EXEMPT^0^Medication Copay Exemption Testing turned off^"_DT
	;Q "-1^EXEMPT^0^Medication Copayment has been turned off^"_DT
	;
PLUS(X1)	; -- computes plus 1 year (into future)
	; if x1=2920930 + 1 year = +10000 = 2930930
	Q X1+10000
	;
MINUS(X1)	; -- computes minus 1 year (into past)
	Q X1-10000
	;
ACODE(Y)	; -- return lookup code of reason, input zeroth node of exemption
	Q $P($G(^IBE(354.2,+$P($G(Y),"^",5),0)),"^",5)
	;
REASON(Y)	; -- return reason description, input zeroth node of exemption
	Q $P($G(^IBE(354.2,+$P($G(Y),"^",5),0)),"^",2)
	;
TEXT(X)	; -- convert 0 or 1 to text
	Q $S(X=1:"EXEMPT",X=0:"NON-EXEMPT",1:"UNKNOWN")
	;
LST(DFN,IBDT)	; -- returns last exemption entry before date x
	;
	; -- returns zeroth node of last test before date
	;
	I '$G(IBDT) S IBDT=DT
	Q $G(^IBA(354.1,+$O(^(+$O(^IBA(354.1,"AIVDT",1,DFN,-(IBDT+.00001))),0)),0))
	;
LSTAC(DFN)	; -- computes last reason code and date for a patient
	; -- returns exemption reason ^ exemption date
	N X1
	S X1=$G(^IBA(354.1,+$O(^(+$O(^IBA(354.1,"AIVDT",1,DFN,-(DT+.00001))),0)),0))
	Q $P($G(^IBE(354.2,+$P(X1,"^",5),0)),"^",5)_"^"_+X1

IBARXEU1
IBARXEU1	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE (CONT.) ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
STATUS(DFN,IBDT)	; -- Determine medication copayment exemption status
	; -- requests data from MAS
	;
	;    returns :        = exemption reason (pointer to 354.2) ^ date
	;
	N X,Y
	I $G(IBDT)="" S IBDT=DT
	S X=$$AUTOST(DFN,IBDT)
	I X'="" G STATUSQ
	S X=$$INCST(DFN,IBDT)
STATUSQ	Q X
	;
AUTOST(DFN,IBDT)	; -- Determine automatically exempt patients.
	;    input :     dfn  =  patient file pointer
	;               ibdt  =  internal form of effective date
	;
	;    returns :        =  exemption reason (pointer to 354.2) ^ date
	;                        null if no autostatus
	;
	N IBEXREA,IBEXMT,I
	S (IBEXREA,IBEXMT)=""
	I $G(IBDT)="" S IBDT=DT
	;
	; -- ask mas if in receipt of pension/a&a/hb, etc.
	;    the automatic determinations
	;    returns:
	;        := sc>50% ^ rec a&a ^ rec hb ^ rec pen ^ n/a ^ non-vet
	;            1         1        1         1                1
	;    pieces =1 if true
	;
	S IBEXMT=$$AUTOINFO^DGMTCOU1(DFN) I IBEXMT="" G AUTOSTQ
	I IBEXMT[1 F I=1,2,3,4,6 I $P(IBEXMT,"^",I)=1 S IBEXREA=I*10 Q  ;lookup code is piece position time 10
	;
AUTOSTQ	I IBEXREA="" Q IBEXREA
	Q $O(^IBE(354.2,"ACODE",+IBEXREA,0))_"^"_IBDT
	;
	;
INCST(DFN,IBDT)	; -- return medication copayment exemption reason/date
	; -- ask mas for income data
	;
	;    returns :  = exemption reason (pointer to 354.2) ^ date
	;
	N IBDATA,X
	S IBDATA=$G(^DGMT(408.31,+$$LST^DGMTCOU1(DFN,IBDT,3),0)) ;get any test
	I $$PLUS^IBARXEU0(+IBDATA)<IBDT S X=$O(^IBE(354.2,"ACODE",210,0))_"^"_IBDT G INCSTQ ; means test too old -no data
	I $$NETW^IBARXEU1 S X=$$MTCOMP^IBARXEU5($$INCDT(IBDATA),IBDATA)
	I '$$NETW^IBARXEU1 S X=$$INCDT(IBDATA),X=$P(X,"^",3)_"^"_$P(X,"^",2)
INCSTQ	Q X
	;
INCDT(IBDATA)	; -- calcualtes copay exemption status based on income
	; and net worth
	;    input  := zeroth node from 408.31
	;    output := 1 = exempt    ^date of test^ exemption reason 
	;              2 = non-exempt^...
	;              3 = pending adjudication (if active)^...
	;
	N X,IBDT,IBINCOM,IBEXREA,IBDEPEN,IBNETW,IBTABLE,IBLEVEL,IBTHRES
	I '$D(DFN) N DFN S DFN=$P(IBDATA,"^",2)
	S IBEXREA=""
	;
	; -- if test incomplete, no longer required, no longer applicable, or
	;    required set to no income data 
	;    autoexempt test should be done first before getting to here
	S X=$P(IBDATA,"^",3) I X=1!(X=3)!(X=10)!(X=9)!($P(IBDATA,"^",14)) S IBEXREA=210 G NO
	;
	S IBDT=+IBDATA
	S IBINCOM=$P(IBDATA,"^",4)-$P(IBDATA,"^",15) I IBINCOM<0 S IBINCOM=0
	S IBDEPEN=$P(IBDATA,"^",18),IBNETW=$P(IBDATA,"^",5)
	;
	; -- get A&A income level
	S IBLEVEL=$$THRES(IBDT,2,IBDEPEN)
	I $P(IBLEVEL,"^",3) S IBPRIOR=$P(IBLEVEL,"^",3)
	;
	S IBEXREA=120 ; low income
	I IBINCOM>+IBLEVEL S IBEXREA=110 G NO ;high income not exempt
	;
	I '$$NETW G NO
	;
	; -- get networth threshold amount
	S IBTHRES=+$$THRES(IBDT,4,0)
	; -- low income check for net worth
	S IBEXREA=$S((IBINCOM+IBNETW)>IBTHRES:130,1:120)
	;
NO	; -- not enough information
	I IBEXREA="" S IBEXREA=210
	;
	I $$NETW S Y=$S(IBEXREA=110:2,IBEXREA=120:1,IBEXREA=130:3,1:2)
	I '$$NETW S Y=$S(IBEXREA=120:1,1:2)
	;
INCDTQ	Q Y_"^"_+IBDATA_"^"_$O(^IBE(354.2,"ACODE",+IBEXREA,0))
	;
THRES(DATE,TYPE,DEPEND)	; -- return threshold amount 
	;
	; -- if date is less than 12/1/92 will use 12/1 92 rates
	;     date =: fileman format of effective date
	;     type =: 2= pension plus A&A
	;     depend =: number of dependents
	;
	; -- returns rate^effective date^prior year
	;
	I DATE<2921201 S DATE=2921201 ; use threshold rates from 12/1/92
	N IBTABLE,IBLEVEL,IBPRIOR
	S IBLEVEL=""
	; -- get entry to determine income amounts
	S IBTABLE=$G(^IBE(354.3,+$O(^(+$O(^IBE(354.3,"AIVDT",TYPE,-(DATE+.000001))),0)),0))
	G:IBTABLE="" THRESQ
	I TYPE=4 S DEPEND=0
	;
	; --see if rate is for prior year
	S IBPRIOR="" I $$PLUS^IBARXEU0(+IBTABLE)<DT S IBPRIOR=+IBTABLE
	;
	; -- rates begin in piece 3 for veteran alone, piece 4 for 1 dependent..
	S IBLEVEL=$S(DEPEND<9:$P(IBTABLE,"^",DEPEND+3),1:"")
	I IBLEVEL="" S IBLEVEL=$P(IBTABLE,"^",4)+((DEPEND-1)*$P(IBTABLE,"^",12))
THRESQ	Q IBLEVEL_"^"_+IBTABLE_"^"_IBPRIOR
	;
NETW()	; -- use networth in determining copay exemptions - specs keep changing
	;    returns 1 if should use networth in exemption determination
	;    returns 0 if should not use networth in exemption
	Q 0

IBARXEU3
IBARXEU3	;ALB/AAS - RX COPAY EXEMPTION PROCESS AR CANCELS ; 8-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CANCEL	; -- cancel old ib and ar logic if going from non-exempt to exempt
	;    based on updated income testing.
	; -- called whenever adding an exemption
	;    requires event driver variables.
	;
	Q:'IBSTAT  ; non-exempt patient
	N IBDT,IBEDT,IBCODA,IBCODP,IBSITE,IBAFY,IBATYP,IBCANDT,IBCHRG,IBCRES,IBERR,IBFAC,IBIL,IBL,IBLAST,IBLDT,IBN,IBND,IBNN,IBNOW,IBPARNT,IBPARNT1,IBSEQNO,IBUNIT,LST
	;
	; -- if new code is income < pension (120) and no prior code or 
	;               prior code was no income data cancel charges
	;
	S IBCODP=$$ACODE^IBARXEU0(IBEVTP),IBCODA=$$ACODE^IBARXEU0(IBEVTA)
	I '$$NETW^IBARXEU1 G:IBCODA'=120 CANCELQ I $S(IBCODP="":0,IBCODP=210:0,1:1) G CANCELQ
	I $$NETW^IBARXEU1,$S(IBCODA=120:$S(IBCODP="":0,IBCODP=210:0,1:1),IBCODA=150:$S(IBCODP=130:0,1:1),1:1) G CANCELQ
	;
	; -- set begin and end dates
	S IBDT=+IBEVTP
	I IBDT<$$STDATE^IBARXEU S IBDT=$$STDATE^IBARXEU
	; -- if new exemption is most current, set begin date to dt, else set to exemption date
	S IBEDT=$S(+$$LST^IBARXEU0(DFN,DT)=+IBEVTA:DT,1:+IBEVTA)
	;
	; -- see if exemption prior to one being canceled same
	S LST=$$LST^IBARXEU0(DFN,+IBEVTP-.01)
	I +LST,$P(IBEVTP,"^",5)=$P(LST,"^",5) S IBDT=+LST
	D CANDT^IBARXEU4
	;
	; -- See if patient has any bills
	S X=$O(^IB("APTDT",DFN,(IBDT-.01))) I 'X!(X>(IBEDT+.9)) G CANCELQ
	;
	; -- cancel bills in IB
	D ARPARM^IBAUTL
	S IBBDT=$P(IBCANDT,"^")-.0001
	F  S IBBDT=$O(^IB("APTDT",DFN,IBBDT)) Q:'IBBDT!((IBEDT+.9)<IBBDT)  S IBN=0 F  S IBN=$O(^IB("APTDT",DFN,IBBDT,IBN)) Q:'IBN  D BILL
	;
	; -- cancel bills in AR
	Q:$P(IBCANDT,"^",2)<$P(IBCANDT,"^")  D ARCAN^IBARXEU4(DFN,IBSTAT,$P(IBCANDT,"^"),$P(IBCANDT,"^",2))
	;
CANCELQ	Q
	;
BILL	; -- process cancelling one bill
	S X=$G(^IB(IBN,0)) Q:X=""
	Q:+$P(X,"^",4)'=52  ;quit if not pharmacy co-pay
	;
	; -- find parent
	S IBPARNT=$P(X,"^",9)
	;
	S IBPARDT=$P($G(^IB(IBPARNT,1)),"^",2) ; get date of parent charge
	I $S(IBPARDT="":1,IBPARDT<IBDT:1,IBPARDT>(IBEDT+.9):1,1:0) Q  ; ignore charges started before or after date range
	;
	; -- get must recent ibaction
	S IBPARNT1=IBPARNT F  S IBPARNT1=$P($G(^IB(IBPARNT,0)),"^",9) Q:IBPARNT1=IBPARNT  S IBPARNT=IBPARNT1 ;gets parent of parents
	D LAST
	;
	Q:$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2  ;quit if already cancelled
	;
	S IBCRES=$O(^IBE(350.3,"B","RX COPAY INCOME EXEMPTION",0)) ; get cancellation reason
	;
	D CANRX
	Q
	;
CANRX	; -- do acutal cancellation without calling ar
	;    input :  iblast := last entry for parnt
	;             ibparnt := parent charge
	;             ibnd    := ^(0) node of iblast
	;
	;    returns: ibnn    := entry number of new node
	;
	N IBN
	S IBNN="" ;return new node in ibnn
	I $D(^IB(IBLAST,0)),$P(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0),"^",5)=2 G CANRXQ ;already cancelled
	S IBND=$G(^IB(+IBLAST,0)),IBDUZ=DUZ
	;
	S IBATYP=$P(^IBE(350.1,+$P($G(^IB(IBPARNT,0)),"^",3),0),"^",6) ;cancellation action type for parent
	I '$D(^IBE(350.1,+IBATYP,0)) G CANRXQ
	S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO G CANRXQ
	S IBIL=$P($G(^IB(IBPARNT,0)),"^",11)
	S IBUNIT=$S($P(IBND,"^",6):$P(IBND,"^",6),$D(^IB(IBPARNT,0)):$P(^(0),"^",6),1:0) I IBUNIT<1 G CANRXQ
	S DA=IBATYP D COST^IBAUTL S IBCHRG=IBUNIT*X1
	;
	D ADD^IBAUTL I +Y<1 G CANRXQ
	S $P(^IB(IBN,1),"^",1)=IBDUZ,$P(^IB(IBN,0),"^",2,13)=DFN_"^"_IBATYP_"^"_$P(IBND,"^",4)_"^11^"_IBUNIT_"^"_IBCHRG_"^"_$P(IBND,"^",8)_"^"_IBPARNT_"^"_IBCRES_"^"_IBIL_"^^"_IBFAC
	K ^IB("AC",1,IBN)
	S DA=IBN,DIK="^IB(" D IX^DIK
	S IBNN=IBN
	;
	; -- update parent to cancelled
	;    note: parent status=10, cancellation due to exemption reason only
	;          on charge cancelled so reports work right.
	S DIE="^IB(",DA=IBPARNT,DR=".05////10;.1////"_IBCRES D ^DIE K DIE,DA,DR
CANRXQ	Q
	;
LAST	; -- find most recent (the last) entry for a parent action
	S IBLAST=""
	S IBLDT=$O(^IB("APDT",IBPARNT,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBPARNT,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
	I IBLAST="" S IBLAST=IBPARNT
	Q

IBARXEU4
IBARXEU4	;ALB/AAS - RX COPAY EXEMPTION CHECK IF PREVIOUSLY CANCELED ; 12-JAN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CANDT	; -- set beginning and ending dates
	;    input     dfn     =: patient internal number
	;              ibedt   =: end date to cancel
	;              ibdt    =: beging date to cancel
	;
	;    output    ibcandt =: begin date^end date to cancel
	;
	N X
	;S IBCANDT=IBDT_"^"_IBEDT
	;
	; -- get last end date
	S X=+$O(^IBA(354.1,"ACAN",DFN,"")) S:X<0 X=-X D:'X CONV ;never previously cancelled
	I X,X>IBDT S IBDT=X
	;
	; -- only cancel back 1 year from today, or eff. legislation max
	I IBDT<$$MINUS^IBARXEU0(DT) S IBDT=$$MINUS^IBARXEU0(DT)
	I IBDT<$$STDATE^IBARXEU S IBDT=$$STDATE^IBARXEU
	S IBCANDT=IBDT_"^"_IBEDT
CANDTQ	Q
	;
CONV	; -- see if conversion done
	N X
	S X=$G(^IBE(350.9,1,3)) G:$P(X,"^",14) CONVQ ; conversion complete
	I $P(X,"^",3),DFN<$P(X,"^",4) G CONVQ ; patient already converted
	;
	; -- need to convert patient on the fly
	S IBDT=$$STDATE^IBARXEU
CONVQ	Q
	;
ARCAN(DFN,IBSTAT,IBDT,IBEDT)	; -- process cancellation with ar logic here
	;
	;   Input =:     dfn      patient internal entry number
	;             ibstat      patient status from $$rxexmt or $$rxst
	;               ibdt      beginning date to cancel
	;              ibedt      ending date to cancel
	;
	Q:'+IBSTAT  ; non-exempt patient
	;
	S:IBEDT>DT IBEDT=DT S:IBDT<$$STDATE^IBARXEU IBDT=$$STDATE^IBARXEU
	;
	; -- set begin and ending date, check x-ref
	S X=+$O(^IBA(354.1,"ACAN",DFN,"")) S:X<0 X=-X
	I X,X>IBDT S IBDT=X
	;
	; -- end date must be after begin date
	I IBDT>IBEDT G ARCANQ
	;
	; -- set begin and ending dates in last entry created
	D UPCAN
	;
	N IBWHER
	S ERR=0,IBWHER=17
	D EN1^PRCAX(DFN,IBDT,IBEDT,.ERR)
	I ERR]"",+ERR'=ERR S ^TMP("IB-ERROR",$J,DFN)=ERR,IBEXERR=10 S:'$D(IBJOB) IBJOB=11 D ^IBAERR K IBEXERR
ARCANQ	Q
	;
UPCAN	; -- update canceled date fields
	N X2
	S DIE="^IBA(354.1,",DR=".13////"_$P(IBCANDT,"^")_";.14////"_$P(IBCANDT,"^",2)
	S DA=$O(^($O(^IBA(354.1,"AIVDT",1,DFN,"")),0))
	S X2=$G(^IBA(354.1,DA,0))
	I $P(X2,"^",2)'=DFN!($P(X2,"^",14)) G UPCANQ
	D ^DIE
	K DIC,DIE,DA,DR,X
UPCANQ	Q

IBARXEU5
IBARXEU5	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE (CONT.) ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DIFF	; -- supported call for mas
	; -- compare current exemption reason and date with what currently
	;    computes from the patient record.  Automatically update if needed.
	;    input:  dfn  = patient to update
	;            Ibdt = date of change (optional, default is dt)
	;    output: none
	;
	N I,J,X,Y,IBADDE,IBEXDA,IBMESS,IBDT,IBX,IBEXREAN,IBEXREAO,IBFORCE,IBOLDAUT,IBJOB,IBWHER
	S IBJOB=16,IBWHER=14
	G:'$G(DFN) DIFFQ
	I $G(IBDT)'?7N S IBDT=DT
	;
	; -- if not already in file, wait until an rx is issued
	I '$G(^IBA(354,DFN,0)) G DIFFQ
	;
	; -- compute old exemption reason, exemption date
	S IBX=$G(^IBA(354,DFN,0)),IBEXREAO=$P(IBX,"^",5)_"^"_$P(IBX,"^",3)
	I $P($G(^IBE(354.2,+IBEXREAO,0)),"^",5)=2010 G DIFFQ ; is hardship don't update
	; -- compute new exemption reason
	S IBEXREAN=$$STATUS^IBARXEU1(DFN,IBDT)
	;
	; -- quit if not current exemption
	I $$PLUS^IBARXEU0($P(IBEXREAN,"^",2))<DT G DIFFQ
	;
	; -- quit if same exemption reason
	I +IBEXREAN=+IBEXREAO G DIFFQ
	;
	; -- not same so update
	D UP1^IBARXEPV
	;I $L($P($G(^IBE(354.2,+IBEXREAN,0)),"^",5))>2 D OLDAUT^IBARXEX1(IBEXREAN)
	;S IBFORCE=$P(IBEXREAN,"^",2)
	;D MOSTR($P(IBEXREAN,"^",2),+IBEXREAN)
	;D ADDEX^IBAUTL6(+IBEXREAN,$P(IBEXREAN,"^",2),1,1,IBOLDAUT)
	;
DIFFQ	Q
	;
MTCOMP(STATUS,IBDATA)	; -- compare income determination with current mt status
	;
	I '$$NETW^IBARXEU1 G MTCOMP ; don't use net worth in computation
	;
	N IBEXREA,CODE S IBEXREA=""
	;
	; -- incomplete and required tests are no data
	;I CODE="I"!(CODE="R") S IBEXREA=210 G MTDONE
	S X=$P(IBDATA,"^",3) I X=1!(X=3)!(X=9)!(X=10)!($P(IBDATA,"^",14)) S IBEXREA=210 G MTDONE
	;
	; -- quit if not pending adjuducation
	I +STATUS'=3 G MTCOMPQ
	;
	S CODE=$$CODE^IBAMTED1(IBDATA)
	;
	; -- see if mt or income test was adjudicated
	;    if not sent to ajudication is non-exempt
	;    if made exempt or cat a is hardship
	I $P(IBDATA,"^",10)="",$P(IBDATA,"^",19)=1 S IBEXREA=$S(CODE="P":130,CODE="C":110,CODE="A":2010,1:"") ; means test logic
	;
	I $P(IBDATA,"^",10)="",$P(IBDATA,"^",19)=2 S IBEXREA=$S(CODE="P":130,CODE="N":110,CODE="E":2010,1:"") ; income test logic
	;
	; -- if adjudicated cat a set to exempt if cat c set to non-exempt
	I 'IBEXREA,$P(IBDATA,"^",19)=1 S IBEXREA=$S($$CODE^IBAMTED1(IBDATA)="A":150,$$CODE^IBAMTED1(IBDATA)="C":140,1:"") ; means test logic
	;
	I 'IBEXREA,$P(IBDATA,"^",19)=2 S IBEXREA=$S($$CODE^IBAMTED1(IBDATA)="E":150,$$CODE^IBAMTED1(IBDATA)="N":140,1:"") ; income test logic
	;
MTDONE	I IBEXREA S $P(STATUS,"^",3)=$O(^IBE(354.2,"ACODE",+IBEXREA,0))
	;
MTCOMPQ	Q $P(STATUS,"^",3)_"^"_$P(STATUS,"^",2)
	;
MOSTR(X1,IBEXREA)	; -- if status date is most recent but last exemption date
	;            is later, inactivate last exemption
	;
	; -- input X1 = date of most recent status (+dgmta from event driver)
	;          IBEXREA= point to 354.2 for new exemption
	;
	; -- will define IBOLDAUT if not already defined
	;
	Q:+$G(X1)'?7N
	Q:$G(IBOLDAUT)?7N
	Q:$L($P($G(^IBE(354.2,+IBEXREA,0)),"^",5))'=3  ; only for income exemptions
	N X
	S X=$$LSTAC^IBARXEU0(DFN) ; x =most recent exemption reason ^ date
	Q:+X1'<$P(X,"^",2)  ;test date is less than most recent exemption date
	;
	; -- get last test date
	S Y=$G(^DGMT(408.31,+$$LST^DGMTCOU1(DFN,DT,3),0))
	;
	; -- if most recent test date is this test inactivate exemption
	I +X1=+Y S IBOLDAUT=$P(X,"^",2)
	Q
	;
REGAUTO	; -- will automatically update in background autoexempt
	;    called from registration
	;
	S ZTREQ="@" ; always called as task, delete task
	G:'$G(DFN) REGQ
	N I,J,X,Y,IBEXREA,IBNSTAT,IBFORCE,IBOLDAUT,IBJOB
	S IBJOB=16
	S IBEXREA=$P($G(^IBA(354,DFN,0)),"^",5)
	I $P($G(^IBE(354.2,+IBEXREA,0)),"^",5)=2010 G REGQ ; don't overwrite hardships
	S IBNSTAT=$$STATUS^IBARXEU1(DFN,DT)
	I IBEXREA=+IBNSTAT G REGQ ; computes to same as on file
	;
	; -- not same must force new entry
	L +^IBA(354,DFN)
	D OLDAUT^IBARXEX1(IBNSTAT)
	S IBFORCE=$P(IBNSTAT,"^",2)
	D ADDEX^IBAUTL6(+IBNSTAT,$P(IBNSTAT,"^",2),1,1,$G(IBOLDAUT))
	L -^IBA(354,DFN)
REGQ	Q

IBARXEVT
IBARXEVT	;ALB/AAS - IB EXEMPTION EVENT DRIVER ; 12-DEC-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- Invokes items on the IB EXEMPTION EVENT protocol menu
	;    Input  =:  dfn      = patient file ien
	;               ibaction = what is happening, add, chg, del
	;               ibevt    = status^status text^reason code^date (from rxst^ibarxeu)
	;               ibevtp   = exemption record zeroth node prior to change
	;               ibevta   = exemption record zeroth node after change
	;
	K DTOUT,DIROUT
	;S X=$O(^ORD(101,"B","IB EXEMPTION EVENTS",0))_";ORD(101," D EN1^XQOR:X
	S X="IB EXEMPTION EVENTS",DIC=101 D EN1^XQOR
	K X,DIC
	Q
	;
BEFORE	; -- get prior exemption for date
	;    input  =:  dfn    = patient file ien
	;               ibdt   = date of exemption
	;
	;    output =:  ibevtp = zeroth node of exemtpion before action
	;
	N IBLDT
	; -- if forcing a more recent effective date to inactive set
	;    before to what is being canceled
	S IBLDT=$S($G(IBOLDAUT)?7N:IBOLDAUT,$G(IBFORCE)?7N:IBFORCE,1:IBDT)
	S IBEVTP=$$LST^IBARXEU0(DFN,IBLDT) ;I IBDT'=+IBEVTP K IBEVTP
	Q
	;
AFTER	; -- get exemption after change
	;    input  =:  dfn    = patient file ien
	;               ibdt   = date of exemption
	;
	;    output =:  ibevta = zeroth node of exemtpion after action
	;
	S IBEVTA=$$LST^IBARXEU0(DFN,IBDT) ;I IBDT'=+IBEVTA K IBEVTA
	Q

IBARXEX
IBARXEX	;ALB/AAS - RX COPAY INCOME EXEMPTION ROUTINE - MANUAL UPDATE OPTION ; 16-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	D HOME^%ZIS
PAT	W @IOF,"Medication Copayment Exemption Update Option",!!
	S DIC("W")="N IBX S IBX=$G(^IBA(354,+Y,0)) W ?32,"" "",$P($G(^DPT(+IBX,0)),U,9),?46,"" "",$$TEXT^IBARXEU0($P(IBX,U,4)),?59,"" "",$P($G(^IBE(354.2,+$P(IBX,U,5),0)),U)"
	S DIC="^DPT(",DIC("S")="I $D(^IBA(354,+Y,0))",DIC(0)="AEQM",DIC("A")="Select BILLING PATIENT: " D ^DIC G:+Y<1 END S DFN=+Y K DIC I $P(Y,"^",3) S IBNEW=""
	;
EN	; -- entry point from alert processing , dfn defined
	S IBQUIT=0,IBTALK=1,IBJOB=13
	D DISP
	D STAT
	I $D(IBNEW)!(IBSTATR'=$P(IBPBN,"^",5))!($P(IBSTAT,"^",4)'=$P(IBPBN,"^",4)) D AUTO^IBARXEX1 G PATQ ;ask if autoupdate
	I $P(IBSTAT,"^",4)=$P(IBPBN,"^",4) D MANUAL^IBARXEX1 ; ask if want to change
PATQ	I 'IBQUIT D:$D(IBCHANGE) DISP,STAT,PAUSE^IBOUTL
	;
	D END
	G PAT
	;
DISP	; -- single screen display of Pharmacy co-pay income exemption status
	S IBP=$$PT^IBEFUNC(DFN),IBPBN=$G(^IBA(354,DFN,0))
	D HDR
	S IBCNT=0
	;
	S IBDT=-(DT+.000001)
	F  S IBDT=$O(^IBA(354.1,"AIVDT",1,DFN,IBDT)) Q:'IBDT  S IBDA=0 F  S IBDA=$O(^IBA(354.1,"AIVDT",1,DFN,IBDT,IBDA)) Q:'IBDA  D SHOWONE S IBCNT=IBCNT+1
	I 'IBCNT W !,"None"
	Q
	;
SHOWONE	; -- write display line for one entry
	S X=$G(^IBA(354.1,IBDA,0)) Q:X=""
	W !,$$DAT1^IBOUTL(+X),?12,$S($P(X,"^",3)=1:"RX COPAY",1:"")
	W ?22,$$TEXT^IBARXEU0($P(X,"^",4))
	W ?34,$E($P($G(^IBE(354.2,+$P(X,"^",5),0)),"^"),1,22)
	W ?56,$S($P(X,"^",6)=1:"SYSTEM",$G(^VA(200,+$P(X,"^",7),0))]"":$E($P(^(0),U),1,14),1:"Unknown"),"/ ",$$DAT1^IBOUTL($P(X,"^",8))
	Q
	;
STAT	; -- show current status
	S IBSTATR=+$$STATUS^IBARXEU1(DFN,DT)
	S IBSTAT=$G(^IBE(354.2,+IBSTATR,0))
	;
	W !!,"Medication Copayment Exemption Status Currently computes to: ",$$TEXT^IBARXEU0($P(IBSTAT,"^",4))
	W !,$P(IBSTAT,"^",2),!!
	Q
	;
SELCY	; -- select calendar year to work with
	;
	W !!
	S Y=+$$LST^IBARXEU0(DFN) I Y?7N D D^DIQ S DIR("B")=Y
	S DIR("?")="Enter the effective date you wish to add a new exemption record for.  If the exemption is computed from income data then the effective date will be the date of the income test.  It cannot be in the future."
	S DIR(0)="DO^"_$$STDATE^IBARXEU_":"_DT,DIR("A")="Select Effective Date" D ^DIR K DIR
	I $D(DIRUT)!(Y'?7N) S IBQUIT=1 G SELCYQ
	S IBDT=Y
	I '$D(^IBA(354.1,"APIDT",DFN,1,-IBDT))&(IBDT'=DT) K IBDT W !!?4,$C(7),"The DATE selected must be the date of an exemption or today!",!?4,"This is the same date as the date of a Means Test or Copay Test.",! G SELCY
SELCYQ	Q
	;
	;
HDR	W @IOF,"Medication Copayment Income Exemption Status"
	W !,$E($P(IBP,"^"),1,20),"   ",$P(IBP,"^",3),?27," Currently: ",$$TEXT^IBARXEU0($P(IBPBN,"^",4))_"-"_$P($G(^IBE(354.2,+$P(IBPBN,"^",5),0)),"^"),?65," ",$$DAT1^IBOUTL($P(IBPBN,"^",3))
	W !!,"EFFECTIVE   TYPE      STATUS      REASON                ADDED BY/ON"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
END	K C,I,J,DA,DIC,DIE,DR,DFN,IBACTIVE,IBADDE,IBALERT,IBCHANGE,IBCNT,IBCODA,IBCODP,IBEXDA,IBDA,IBDT,IBEXREA,IBJ,IBJOB,IBNEW,IBP,IBPBN,DIRUT,IBQUIT,IBSTAT,IBSTATR,IBTALK,IBWHER,X,X1,XCNP,XMZ,Y
	Q

IBARXEX1
IBARXEX1	;ALB/AAS - RX COPAY INCOME EXEMPTION ROUTINE - MANUAL UPDATE OPTION, CONT. ; 16-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
AUTO	; -- auto update of exemption reason file and billing pat file.
	; -- if computes to pending but status is adjudicated quit
	N IBOLDAUT,IBFORCE
	I $$NETW^IBARXEU1,$P(IBSTAT,"^",5)=130 S X=$$LST^IBARXEU0(DFN,DT),Y=$P($G(^IBE(354.2,$P(X,"^",5),0)),"^",5) I Y=140!(Y=150) Q
	;
	; -- ask if sure
	S DIR(0)="Y",DIR("A")="Update Patient Billing Status",DIR("B")="NO" D ^DIR K DIR I $D(DIRUT)!(Y<1) S IBQUIT=1 G AUTOQ
	D SELCY^IBARXEX G:IBQUIT AUTOQ
	;
	L +^IBA(354,DFN):5 I '$T W !,"Another User accessing Record, Try Again Later." G AUTOQ
	S IBCHANGE=1
	;
	S (IBEVT,X)=$$STATUS^IBARXEU1(DFN,IBDT)
	;
	; -- not currently autoexempt, see if most recent is auto
	S IBOLDAUT=""
	I $L($P(^IBE(354.2,+IBEVT,0),"^",5))>2 D OLDAUT(IBEVT)
	;
	; -- first inactivate all entries for day
	S IBFORCE=$P(X,"^",2)
	;
	; -- for income, inactivate most recent
	D MOSTR^IBARXEU5($P(X,"^",2),+X)
	D ADDEX^IBAUTL6(+X,$P(X,"^",2),1,1,$G(IBOLDAUT))
	L -^IBA(354,DFN)
	;W !!,"Entry Updated!"
AUTOQ	K IBFORCE D PAUSE^IBOUTL
	Q
	;
OLDAUT(X1)	; -- not currently autoexempt, most current is auto exempt delete
	;    inactivate autoexempt
	N X
	S X=$$LSTAC^IBARXEU0(DFN) I $L(+X)'=3,$P(X,"^",2)'<$P(X1,"^",2) S IBOLDAUT=$P(X,"^",2)
	Q
	;
MANUAL	; -- allow user to do manual change
	S DIR(0)="Y",DIR("A")="Do you wish to manually assign a Hardship Copay Exemption",DIR("B")="NO" D ^DIR K DIR I $D(DIRUT)!(Y<1) S IBQUIT=1 G MANUALQ
	;
	D SELCY^IBARXEX G:IBQUIT MANUALQ
	S IBEXREA=$O(^IBE(354.2,"ACODE",2010,0)) ;only hardships
	S IBCODA=2010
	;
	; -- if current exemption is exempt can't give hardship
	S X=$$LST^IBARXEU0(DFN,IBDT)
	I +X'<(DT-100000),$P(X,"^",4) K IBEXREA W !!,"You can only give a hardship to a Non-Exempt patient",!,*7 G MANUALQ
	;
	L +^IBA(354,DFN):5 I '$T W !,"Another User accessing record, Try Again Later." G MANUALQ
	S IBCHANGE=1
	S DIR(0)="Y",DIR("A")="Are You Sure" D ^DIR K DIR G:$D(DIRUT)!(Y<1) MANUALQ
	;
	; -- get electronic signature code
	D SIG^XUSESIG
	I X1=""!(X'=X1) W !,"Not your electronic signature" G MANUALQ
	S IBASIG=X1
	;
	; -- add new exemption
	D ADDEX^IBAUTL6(IBEXREA,IBDT,2,1)
	L -^IBA(354,DFN)
	;
MANUALQ	D PAUSE^IBOUTL
	Q

IBAUTL
IBAUTL	;ALB/AAS - INTEGRATED BILLING APPLICATION UTILITIES ; 14-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
COST	;  - find charges for transaction type, when only one
	N IBD,IBN,IB K X1
	S IBD=-(DT+.9) F  S IBD=$O(^IBE(350.2,"AIVDT",DA,IBD)) Q:'IBD  S IBN=0 F  S IBN=$O(^IBE(350.2,"AIVDT",DA,IBD,IBN)) Q:'IBN  S IB=$G(^IBE(350.2,IBN,0)) I IB]"",'$P(IB,"^",5)!($P(IB,"^",5)>DT) S X1=$P(IB,"^",4) G COSTQ
COSTQ	S X1=+$G(X1)
	Q
	;
FY	I $D(X) S IBAFY=$S($E(X,4,5)<10:$E(X,2,3),1:($E(X,2,3)+1))
	Q
	;
PTL	;  - parent trace logic
	;  - input in x resulting from field from file 350
	;  - output in y=1 if found, -1^error message if not found
	;  -           y(0) = zeroth node of top level
	;  -           y(1) = zeroth node of second level
	;  -           y(n) = zeroth node of nth level
	;
	K Y
	S Y=1 I '+X!'($D(^DIC(+X,0,"GL"))) S Y="-1^IB004" G PTLQ
	S IBAGL=^DIC(+X,0,"GL")
	I '$D(@(IBAGL_$P($P(X,";",1),":",2)_",0)")) S Y="-1^IB005" G PTLQ
	S Y(0)=^(0)
	;
	F IBJJ=2:1 S IBII=$P(X,";",IBJJ) Q:IBII=""  D PTL1
PTLQ	K IBAGL,IBII,IBJJ,IBMIN
	Q
	;
PTL1	;  - find y(n) of sublevels
	S IBMIN=$P(IBII,":") I IBMIN="" S Y="-1^IB006" Q
	I '$D(^(IBMIN,$P(IBII,":",2),0)) S Y="-1^IB006" Q
	;I '$D(^(+IBII,$P(IBII,":",2),0)) S Y="-1^IB006" Q
	S Y(IBJJ-1)=^(0)
	Q
	;
CHKX	;  - check input x
	;  -  piece 1 = service and exists
	;  -  peice 2 = patient and exists
	;  -  piece 3 = action type
	;  -  piece 4 = user duz
	S DFN=$P(X,"^",2),IBSERV=+IBSAVX
	I $S('DFN:1,'$D(^DPT(DFN,0)):1,1:0) S Y="-1^IB002" G CHKXQ ;patient pointer bad
	I $S('IBSERV:1,'$D(^DIC(49,IBSERV,0)):1,1:0) S Y="-1^IB003" G CHKXQ ;service pointer bad
	I IBTAG=1 G CHKXQ
	S IBDUZ=$P(IBSAVX,"^",4) I $S('IBDUZ:1,'$D(^VA(200,IBDUZ,0)):1,1:0) S Y="-1^IB007" G CHKXQ
	I IBTAG=3 G CHKXQ
	S IBATYP=$P(IBSAVX,"^",3) I $S('IBATYP:1,'$D(^IBE(350.1,IBATYP,0)):1,1:0) S Y="-1^IB008"
CHKXQ	Q
	;
SITE	;  - calculate site from site parameters
	;  -  output ibsite = station number
	;  =         ibfac  = pointer to institution file
	I '$D(^IBE(350.9,1,0)) S Y="-1^IB016" Q
	S IBFAC=$P(^IBE(350.9,1,0),"^",2),IBSITE=$S('$D(^DIC(4,IBFAC,99)):"",1:+^(99)) I IBSITE<1 S Y="-1^IB009"
	Q
	;
ADD	;  - add new entry to ^ib
	;
	N %DT
	L +^IB(0):10 I '$T S Y="-1^IB014" G ADDQ
	S X=$P($S($D(^IB(0)):^(0),1:"^^-1"),"^",3)+1 L -^IB(0) I 'X S Y="-1^IB015" G ADDQ
	K DD,DO,DIC,DR S DIC="^IB(",DIC(0)="L",DLAYGO=350
	F X=X:1 L:$D(IBN1) -^IB(IBN1) I X>0,'$D(^IB(X)) S IBN1=X L +^IB(IBN1):1 I $T,'$D(^IB(X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
	S IBN=+Y,DIE="^IB(",DA=IBN,DR=".02////"_$S($D(DFN):DFN,1:"")_";.03////"_$S($D(IBATYP):IBATYP,1:"")_";.05////1;12///NOW" D ^DIE K DA,DR,DIE
	L -^IB(IBN1)
	S Y=$S('$D(Y):1,1:"-1^IB028")
	;
ADDQ	K DO,DD,DINUM,DIC,IBN1 Q
	;
ARPARM	N X S X=DT
	D SITE,FY,NOW^%DTC S IBNOW=%
	Q
BILLNO	;  -get open bill number
	I '$G(IBTOTL),+$G(^PS(59.7,1,49.99))'<6 S (IBIL,IBTRAN)="" G BILLQ
	S IBARTYP=$S($D(^IBE(350.1,+IBATYP,0)):$P(^(0),"^",3),1:"")
	S X=IBSITE_"^"_IBSERV_"^"_IBARTYP_"^"_DFN_";DPT("_"^"_IBAFY_"^"_$S($D(IBTOTL):IBTOTL,1:0)_"^"_$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:0)_"^"_$P(IBNOW,".",1) D ^PRCASER I +Y<1 G BILLQ
	S IBIL=$P(Y,"^",2),IBTRAN=$P(Y,"^",3) I IBIL="" S Y="-1^IB011" G BILLQ
	S IBTRAN=$S(IBTRAN>0:IBTRAN,1:"")
BILLQ	Q

IBAUTL1
IBAUTL1	;ALB/AAS - IB UTILITY ROUTINE FOR MEDICARE RATES ; 30-AUG-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
RATE	;  - Calculates the Medicare rate for a CPT code.
	;  - Input  X = visit date ^ division ^ ifn of cpt code
	;  - Output Y = charge
	;
	S IBX=X N X S X=IBX
	S IBRG=$O(^IBE(350.4,"AIVDT",+$P(X,"^",3),-($P(X,"^")+1))) I IBRG S IBRG=$O(^(+IBRG,0)) ;determine current ib action type for code
	I $S('IBRG:1,'$D(^IBE(350.4,+IBRG,0)):1,'$P(^(0),"^",3):1,1:0) S Y=-1 G RATEQ
	S IBRG=+$P(^IBE(350.4,IBRG,0),"^",3)
	S DA=$O(^IBE(350.2,"AIVDT",IBRG,-($P(X,"^")+1))) I DA S DA=$O(^(+DA,0)) ; determine current ib action charge for rate group
	I $S('DA:1,'$D(^IBE(350.2,DA,10)):1,1:0) S Y=-1 G RATEQ
	X ^IBE(350.2,DA,10)
RATEQ	K IBRG,IBX
	Q
	;
VAR	;  -Called by entries in 350.2 to get variables
	;  -input x=visit date^division ifn
	;        da=internal number from 350.2
	;  -output y=wage%^non-wage%^locality multiplier
	;
	S IBLOC=$O(^IBE(350.5,"AIVDT",+$P(X,"^",2),-($P(X,"^")+1))) I IBLOC S IBLOC=$O(^(+IBLOC,0))
	I $S('IBLOC:1,'$D(^IBE(350.5,+IBLOC,0)):1,'$P(^(0),"^",7):1,1:0) S Y=-1 G VARQ
	S Y=$P(^IBE(350.5,IBLOC,0),"^",5,7)
VARQ	K IBLOC,IBWAG Q
	;
TEST	S DA=14,X=DT_"^1^10141" D RATE ;X ^IBE(350.2,DA,10) W X," ",Y

IBAUTL2
IBAUTL2	;ALB/CPM - MEANS TEST BILLING UTILITIES ; 30-AUG-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CHFIND	; Find open charge for a billable event
	;  Input:  IBEVDA, IBX (C=copay/P=per diem)
	;  Output: IBCH*DA=0/ien of charge      also IBCH* if IBCH*DA>0
	N J,X S J=0
	F  S J=$O(^IB("ACT",IBEVDA,J)) Q:'J  S X=$G(^IB(J,0)) I X]"",(($P(X,"^",8)["CO-PAY"&(IBX="C"))!($P(X,"^",8)["PER DIEM"&(IBX="P"))) Q:$P(X,"^",5)=1
	S:J IBCHTOTL=$P(X,"^",7),IBCHFR=$P(X,"^",14),IBCHTO=$P(X,"^",15)
	S @("IBCH"_IBX_"DA")=+J Q
	;
CHADD	; Add a new IB Action in #350
	D ADD^IBAUTL I Y<1 S IBY=Y G CHADDQ
	S $P(^IB(IBN,0),"^",2,16)=DFN_"^"_IBATYP_"^"_IBSL_"^1^1^"_IBCHG_"^"_IBDESC_"^"_IBN_"^^^^"_IBFAC_"^"_IBDT_"^"_IBDT_"^"_IBEVDA
	D NOW^%DTC S $P(^IB(IBN,1),"^")=DUZ,$P(^(1),"^",3,4)=DUZ_"^"_%
	S DIK="^IB(",DA=IBN D IX1^DIK K DIK,DA
	;I $G(IBJOB)=1 S ^TMP($J,"IBAMTC","I",DFN,IBN)=""
CHADDQ	Q
	;
CHUPD	; Update an IB Action charge
	;  Input:  IBCHTOTL, IBCHFR, IBDT, IBX(P/C), IBN, IBCHG, DUZ
	N TOT,UNIT S UNIT=1
	I IBX="P" S X1=IBDT,X2=IBCHFR D ^%DTC S UNIT=X+1,TOT=UNIT*IBCHG
	I IBX="C" S TOT=IBCHTOTL+IBCHG
	D NOW^%DTC S $P(^IB(IBN,0),"^",6,7)=UNIT_"^"_TOT,$P(^(0),"^",15)=IBDT,$P(^(1),"^",3,4)=DUZ_"^"_%
	S DIK="^IB(",DA=IBN D IX1^DIK K DIK,DA
	;I $G(IBJOB)=1 S ^TMP($J,"IBAMTC","I",+$G(DFN),IBN)=""
	Q
	;
SERV	; Find the service pointer for MAS.
	S IBSERV=$P($G(^IBE(350.9,1,1)),"^",14) I '$D(^DIC(49,+IBSERV,0)) S IBY="-1^IB003"
	Q
	;
TYPE	; Find the IB action type and rate for per diem and OPT co-payment charges.
	;  Input:   IBDT, IBBS (if IBX=P), IBX (O=opt copay/P=per diem)
	;  Output:  IBATYP, IBCHG, IBDESC, IBRTED
	N J S IBCHG=0,IBDESC=""
	I IBX="O" S IBBS=+$O(^DGCR(399.1,"B","OUTPATIENT VISIT",0)) D COPAY
	I IBX="P" S IBATYP=+$P($G(^DGCR(399.1,IBBS,0)),"^",8) I IBATYP D COST X:$D(^IBE(350.1,IBATYP,20)) ^(20)
	I 'IBATYP S IBY="-1^IB008" G TYPEQ
	I 'IBCHG S IBY="-1^IB029"
TYPEQ	Q
	;
COST	; - find per diem charge.   Input:  IBATYP, IBDT   Output:  IBCHG
	N X S X=$O(^IBE(350.2,"AIVDT",IBATYP,-(IBDT+.1))),X=$O(^(+X,0)) I $D(^IBE(350.2,+X,0)) S X=$P(^(0),"^",4)
	S IBCHG=+X Q
	;
COPAY	; Find the Inpatient/NHCU daily copay rate and IB action type
	;  Input: IBBS, IBDT   Output:  IBATYP, IBCHG, IBDESC, IBRTED
	N CHK,DA,J,R,X,Y
	S (CHK,IBATYP,IBCHG)=0,J=-(IBDT+.1),(DA,IBDESC,R)=""
	S IBATYP=$P($G(^DGCR(399.1,IBBS,0)),"^",7) I 'IBATYP S IBY="-1^IB008" G COPAYQ
	I $D(^IBE(350.1,+IBATYP,20)) X ^(20)
	F  S J=$O(^DGCR(399.5,"AIVDT",IBBS,J)) Q:'J  D  Q:CHK
	. F  S R=$O(^DGCR(399.5,"AIVDT",IBBS,J,R)) Q:'R  D  Q:CHK
	..  F  S DA=$O(^DGCR(399.5,"AIVDT",IBBS,J,R,DA)) Q:'DA  D  Q:CHK
	...   S Y=$G(^DGCR(399.5,+DA,0))
	...   I $P(Y,"^",5),$P(Y,"^",6)["c" S IBCHG=+$P(Y,"^",4),IBRTED=-J,CHK=1
	I 'IBCHG S IBY="-1^IB030"
COPAYQ	Q

IBAUTL3
IBAUTL3	;ALB/CPM - MEANS TEST BILLING UTILITIES (CON'T.) ; 05-SEP-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DED	; Find Medicare deductible rate on the billing clock date.
	;  Input:   IBSERV, IBCLDT    Output:  IBMED - Medicare deductible
	N X S IBMED=0
	S X=$O(^IBE(350.1,"ANEW",IBSERV,81,0)) I 'X S IBY="-1^IB031" G DEDQ
	S X=$O(^IBE(350.2,"AIVDT",+X,-(IBCLDT+.1))),X=$O(^(+X,0))
	S IBMED=$P($G(^IBE(350.2,+X,0)),"^",4) I 'IBMED S IBY="-1^IB032"
DEDQ	Q
	;
EVADD	; Add a new billable event in File #350.
	;  Input:  IBSITE, DFN, IBSL, IBEVDT, IBSERV, IBNH    Output:  IBEVDA
	D ADD^IBAUTL I Y<1 S IBY=Y G EVADDQ
	N IBATYP,IBDESC
	S IBEVDA=IBN
	S IBATYP=$O(^IBE(350.1,"ANEW",IBSERV,$S(IBNH:92,1:91),0)) I 'IBATYP S IBY="-1^IB008" G EVADDQ
	S IBDESC=$P($G(^IBE(350.1,+IBATYP,0)),"^")
	S $P(^IB(IBN,0),"^",3,17)=IBATYP_"^"_IBSL_"^1^^^"_IBDESC_"^^^^^"_IBFAC_"^^^"_IBN_"^"_IBEVDT
	D NOW^%DTC S $P(^IB(IBN,1),"^")=DUZ,$P(^(1),"^",3,4)=DUZ_"^"_%
	S DIK="^IB(",DA=IBN D IX1^DIK
EVADDQ	K DIK,DA Q
	;
EVFIND	; Find most recent active (incomplete - still being billed)
	; inpatient/NHCU event since original admission.
	;  Input:  DFN, IBADMDT     Output:  IBEVDT, IBEVDA, IBEVCAL
	N IBD,J S IBD=IBADMDT\1,(IBEVDA,IBEVCAL,IBEVDT)=0,J=-DT
	F  S J=$O(^IB("AFDT",DFN,J)) Q:'J!(-J<IBD)!(IBEVDT)  F  S IBEVDA=$O(^IB("AFDT",DFN,J,IBEVDA)) Q:'IBEVDA  I $P($G(^IB(IBEVDA,0)),"^",5)=1 S IBEVDT=-J,IBEVCAL=$P(^(0),"^",18) Q
	Q
	;
EVCLOS1	; Set Last Calc date to yesterday before closing event.  Input: IBDT
	S X1=IBDT,X2=-1 D C^%DTC S IBEVCLD=X
EVCLOSE	; Close event record.  Input: IBEVDA, IBEVCLD
	N IBDR S IBDR=".05////2;"
EVUPD	; Update event record.  Input: IBEVDA, IBEVCLD
	S DR=".18////"_IBEVCLD_";13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW"
	I $D(IBDR) S DR=IBDR_DR
	S DIE="^IB(",DA=IBEVDA D ^DIE K DIE,DA,DR Q
	;
CLADD	; Add a new billing clock in File #351.
	;  Input:  IBSITE, DFN, IBCLDT, IBSERV    Output: IBCLDA, IBMED
	L +^IBE(351,0):10 E  S IBY="-1^IB014" G CLADDQ
	S X=$P($S($D(^IBE(351,0)):^(0),1:"^^-1"),"^",3)+1 I 'X S IBY="-1^IB015" G CLADDQ
	K DD,DO,DIC,DR S DIC="^IBE(351,",DIC(0)="L",DLAYGO=351
	F X=X:1 I X>0,'$D(^IBE(351,X)) L +^IBE(351,X):1 I $T,'$D(^IBE(351,X)) S DINUM=X,X=+IBSITE_X D FILE^DICN I +Y>0 Q
	S (DA,IBCLDA)=+Y,DIE="^IBE(351,",DR=".02////"_DFN_";.03////"_IBCLDT_";.04////1;11////"_$S($D(DUZ):DUZ,1:.5)_";12///NOW;13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW"
	D ^DIE K DA,DR,DIE L -^IBE(351,IBCLDA)
	S IBY=$S('$D(Y):1,1:"-1^IB028") D:IBY>0 DED
CLADDQ	L -^IBE(351,0) K DO,DD,DINUM,DIC Q
	;
CLOCK	; Determine if the patient has an active billing clock.
	;  Input:  IBSERV    Output:  IBCLDA, IBCLDT, IBCLDAY, IBCLDOL
	S IBCLDA=+$O(^IBE(351,"ACT",DFN,0))
	D:IBCLDA CLDATA,DED Q
	;
CLDATA	; Return data from the current billing clock.
	N X S X=$G(^IBE(351,+IBCLDA,0)),IBCLDT=$P(X,"^",3),IBCLDAY=$P(X,"^",9)
	S IBCLDOL=$P(X,"^",$S(IBCLDAY<91:5,IBCLDAY<181:6,IBCLDAY<271:7,1:8)) Q
	;
CLOCKCL	; Close out the current billing clock.
	;  Input:   DFN, IBCLDA, IBCLDT; IBCLDOL, IBCLDAY {opt}
	;  Output:  IBCLDA=0
	N IBCLENDT,K S K=$$BILST^DGMTUB(DFN)
	S X1=IBCLDT,X2=364 D C^%DTC S IBCLENDT=X
	I K S:K<IBCLENDT IBCLENDT=K
	I $D(IBCLDOL),$D(IBCLDAY) D CLUPD
	S DA=IBCLDA,DIE="^IBE(351,",DR=".04////2;.1////"_IBCLENDT_";13////"_$S($D(DUZ):DUZ,1:.5)_";14///NOW"
	D ^DIE K DA,DR,DIE S IBY=$S('$D(Y):1,1:"-1^IB028"),IBCLDA=0 Q
	;
CLUPD	; - update billing clock.  Input:  IBCLDA, IBCLDOL, IBCLDAY
	D NOW^%DTC
	S $P(^IBE(351,IBCLDA,0),"^",$S(IBCLDAY<91:5,IBCLDAY<181:6,IBCLDAY<271:7,1:8))=IBCLDOL,$P(^(0),"^",9)=IBCLDAY,$P(^(1),"^",3,4)=$S($D(DUZ):DUZ,1:.5)_"^"_%
	S DIK="^IBE(351,",DA=IBCLDA D IX1^DIK K DIK,DA Q

IBAUTL4
IBAUTL4	;ALB/CPM - MEANS TEST BILLING UTILITIES (CON'T.) ; 10-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Calculate inpatient co-pay, per diem charges for a date range
	;  Input:  DFN, IBBDT, IBEDT, IBCLDA, IBEVDA, IBY, IBAFY
	;          IBCLCT/IBCLDAY/IBCLDOL (if IBCLDA'=0)
	F IBDATE=IBBDT:1:IBEDT S %H=IBDATE D YMD^%DTC S IBDT=X D CALC Q:IBY<1
	Q
	;
CALC	; Find charges for one day
	S (IBEVNEW,IBEVOLD)=0
	; - increment clock
	I IBCLDA S IBCLCT=IBCLCT+1 I IBCLCT>365 S IBWHER=2 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBY>0 G:IBY<1 CALCQ
	; - Cat C?
	I '$$BIL^DGMTUB(DFN,IBDT+.2359) G:'IBCLDA CALCQ S IBWHER=3 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBY>0 G CALCQ
	; - on leave?
	S VAIP("D")=IBDT_.2359 D IN5^VADPT S IBBS=$$SECT^IBAUTL5(+VAIP(8)),IBSL="405:"_VAIP(1)
	I 'VAIP(10) D  G CALCQ
	. I IBBS,'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 S (IBCLDAY,IBCLDOL)=0,IBCLCT=1
	. Q:'IBCLDA  S IBWHER=4 D PASS^IBAUTL5:IBEVDA,CLOCKCL^IBAUTL3:IBCLCT'<365&(IBY>0)
	; - check billing status
	I 'IBBS S IBWHER=5 D:IBEVDA PASS^IBAUTL5,EVCLOS1^IBAUTL3:IBY>0 D  G CALCQ
	. S IBEVDA=0 Q:'IBCLDA!(IBY<1)  D:IBCLCT'<365 CLOCKCL^IBAUTL3
	S IBNH=$P($G(^DGCR(399.1,IBBS,0)),"^")["NURSING"
	I 'IBEVDA S IBEVDT=+VAIP(3)\1,IBWHER=6 D EVADD^IBAUTL3 G:IBY<1 CALCQ
	; - will bill today--got a clock?
	I 'IBCLDA S IBCLDT=IBDT,IBWHER=7 D CLADD^IBAUTL3 G:IBY<1 CALCQ S (IBCLDAY,IBCLDOL)=0,IBCLCT=1
	; - cancel any OPT charges
	D OPT^IBAMTD1(DFN,IBDT)
	; - update clock, $$ if starting another 90-day period of care
	I IBCLDAY,'(IBCLDAY#90) D CLUPD^IBAUTL3 S:IBCLDAY'=360 IBCLDOL=0
	S IBCLDAY=IBCLDAY+1
	; - process per diem
	G:IBDT<$$DIEM^IBAUTL5 COPAY ; date is prior to per diem billing date
	S IBX="P",IBWHER=8 D TYPE^IBAUTL2 G:IBY<1 CALCQ
	D CHFIND^IBAUTL2 S IBNOS=IBCHPDA,IBCHPDE=$P($G(^IB(+IBCHPDA,0)),"^",8),IBWHER=9
	; - update or pass to A/R an incomplete per diem charge
	I IBCHPDA D  G:IBY<1 CALCQ
	. I (IBCHPDE["INPT"&(IBNH))!(IBCHPDE["NHC"&('IBNH)) D  Q
	..  D FILER^IBAUTL5,EVCLOS1^IBAUTL3:IBY>0 Q:IBY<1
	..  S IBEVDT=+VAIP(3)\1,IBEVOLD=IBEVDA,IBWHER=10
	..  D EVADD^IBAUTL3 Q:IBY<1  S IBCHPDA=0,IBEVNEW=IBEVDA
	. S X1=IBDT,X2=IBCHTO D ^%DTC I X'=1 S IBWHER=11 D FILER^IBAUTL5 S IBCHPDA=0 Q
	. S IBN=IBCHPDA D CHUPD^IBAUTL2
	I 'IBCHPDA S IBWHER=13 D CHADD^IBAUTL2 G:IBY<0 CALCQ S IBCHPDA=IBN
COPAY	; - process co-payment
	G:IBCLDAY>360!($$CONT^IBAUTL5(DFN)>IBDT) LAST ; last 5 days are grace days, or pt is continuous
	S IBMAX=IBMED I IBCLDAY>90,'IBNH S IBMAX=IBMAX/2
	G:IBCLDOL'<IBMAX LAST
	S IBWHER=14 D COPAY^IBAUTL2 G:IBY<1 CALCQ
	S IBCHARG=IBMAX-IBCLDOL I IBCHG<IBCHARG S IBCHARG=IBCHG
	S IBCHG=IBCHARG S:IBCHG<0 IBCHG=0
	S IBCLDOL=IBCLDOL+IBCHG
	S:IBEVOLD IBEVDA=IBEVOLD S IBX="C" D CHFIND^IBAUTL2
	S IBNOS=IBCHCDA,IBCHCTY=$P($G(^IB(+IBCHCDA,0)),"^",3) S:IBEVNEW IBEVDA=IBEVNEW
	; - update or pass to A/R an incomplete copay charge
	I IBCHCDA D  G:IBY<1 CALCQ
	. I IBCHCTY'=IBATYP S IBWHER=15 D FILER^IBAUTL5 S IBCHCDA=0 Q
	. S X1=IBDT,X2=IBCHTO D ^%DTC I X'=1 S IBWHER=16 D FILER^IBAUTL5 S IBCHCDA=0 Q
	. S IBN=IBCHCDA D CHUPD^IBAUTL2
	I 'IBCHCDA S IBWHER=18 D CHADD^IBAUTL2 G:IBY<1 CALCQ S IBCHCDA=IBN
	I IBCHCDA,IBCLDOL'<IBMAX S IBEVOLD=0,IBNOS=IBCHCDA,IBWHER=19 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHCDA=0
LAST	; - handle last day of billing clock
	G:IBCLCT<365 CALCQ
	I $G(IBCHPDA) S IBNOS=IBCHPDA,IBWHER=20 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHPDA=0
	I $G(IBCHCDA) S IBNOS=IBCHCDA,IBWHER=21 D FILER^IBAUTL5 G:IBY<1 CALCQ S IBCHCDA=0
	D CLOCKCL^IBAUTL3
CALCQ	W:$G(IBJOB)=2 "." Q

IBAUTL5
IBAUTL5	;ALB/CPM - MEANS TEST BILLING UTILITIES (CON'T.) ; 02-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PASS	; Find unbilled charges for an event and pass to Accounts Receivable.
	;  Input:  IBEVDA, IBY    Output:  IBCHCDA, IBCHPDA are reset to 0.
	N IBNOS,IBACTN
	S IBACTN=0 F  S IBACTN=$O(^IB("AF",IBEVDA,IBACTN)) Q:'IBACTN!(IBY<1)  I IBACTN'=IBEVDA,$P($G(^IB(IBACTN,0)),"^",5)=1 S IBNOS=IBACTN D FILER
	S (IBCHCDA,IBCHPDA)=0 Q
	;
FILER	; Pass charge to Accounts Receivable.   Input:  IBNOS
	; - first, get a bill number and build a complete charge..
	N IBATYP,IBNOW D NOW^%DTC S IBNOW=%
	;S IBTOTL=0,IBATYP=$P($G(^IB(IBNOS,0)),"^",3)
	;D BILLNO^IBAUTL K IBARTYP I Y<1 S IBY=Y G FILERQ
	;S DIE="^IB(",DA=IBNOS,DR=".05////2;.11////"_IBIL_";.12////"_IBTRAN
	;D ^DIE K DIE,DR,DA I $D(Y) S IBY="-1^IB020" G FILERQ
	; - and then pass the charge to A/R.
	S IBSEQNO=1,IBDUZ=DUZ D ^IBR K IBSEQNO,IBDUZ,IBARTYP,IBN
	I Y<1 S IBY=Y,IBWHER=IBWHER+25 G FILERQ
	;I $G(IBJOB)=1,IBNOS S ^TMP($J,"IBAMTC","I",+$G(DFN),IBNOS)=""
FILERQ	Q
	;
LAST	; Find Last Billed date, if one exists, for pts. w/o billable events
	;  Input:  DFN, IBADMDT    Output:  IBBDT (if past event exists)
	N IBD,IBDATE,IBTEMP,J,DA S IBD=IBADMDT\1,J=-9999999,(IBDATE,DA)=0
	F  S J=$O(^IB("AFDT",DFN,J)) Q:'J!(-J<IBD)  D
	. F  S DA=$O(^IB("AFDT",DFN,J,DA)) Q:'DA  D
	..  I $P($G(^IB(DA,0)),"^",8)["ADMISSION" S IBTEMP=$P(^(0),"^",18) D
	...   I 'IBDATE S IBDATE=IBTEMP Q
	...   I IBTEMP>IBDATE S IBDATE=IBTEMP
	I IBDATE S X=IBDATE D H^%DTC S IBBDT=%H+1
	Q
	;
DIEM()	; Find the earliest date for which the per diem charge may be billed.
	Q $S($P($G(^IBE(350.9,1,0)),"^",12):$P(^(0),"^",12),1:9999999)
	;
SECT(FTS)	; Find the billable bedsection.
	;  Input:     Facility Treating Specialty (IEN from file #45.7)
	;  Returned:  Billable bedsection from file 399.1 (MCCR UTILITY), or
	;             0 if the specialty does not have a corresp. bedsection
	S FTS=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+FTS,0)),"^",2),0)),"^",5)
	Q $S(FTS]"":+$O(^DGCR(399.1,"B",FTS,0)),1:0)
	;
CONT(DFN)	; Find continuous patient discharge date.
	;  Input:  DFN  Returned:        0 - not continuous
	;                          9999999 - still continuous, or
	;                          actual discharge date from continuous stay
	N X S X=0
	I $O(^IBE(351.1,"B",DFN,0)) S X=$P($G(^IBE(351.1,+$O(^(0)),0)),"^",2) S:'X X=9999999
	Q X
	;
STD(DFN)	; Is the patient's A/R Statement date 4 days from now?
	;  Input:  DFN    Returned:  Statement date in 4 days? (1 - yes, 0 - no)
	S X1=DT,X2=4 D C^%DTC
	Q $$PST^PRCAFN(DFN_";DPT(")=+$E(X,6,7)
	;
OE(DGPMDA)	; Was the patient admitted for Observation & Examination?
	;  Input:     DGPMDA - pointer to 0th node of pt mvt (adm) in file #405
	;  Returned:  O&E Admission? (1 - yes, 0 - no)
	N AR,SOA,DGPM0
	S DGPM0=$G(^DGPM(+DGPMDA,0))
	S AR=+$P(DGPM0,"^",12),SOA=+$G(^DGPT(+$P(DGPM0,"^",16),101))
	Q $D(^DIC(43.4,"D",17.45,AR))!($D(^DIC(45.1,"B","1T",SOA)))
	;
ASIH(PM)	; Is patient movement an ASIH movement?
	;  Input:     PM - 0th node of patient movement in file #405
	;  Returned:  ASIH Movement? (1 - yes, 0 - no)
	Q "^13^14^40^41^42^43^44^45^46^47^"[("^"_$P($G(PM),"^",18)_"^")
	;
CVA(DFN)	; Is CHAMPVA the patient's Primary Eligibility?
	;  Input:  DFN    Returned:  Prim Elig = CHAMPVA? (1 - yes, 0 - no)
	Q $P($G(^DIC(8,+$G(^DPT(+$G(DFN),.36)),0)),"^",9)=12

IBAUTL6
IBAUTL6	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE (CONT.) ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADDP	; -- Add patient to file 354
	; -- Input    : dfn    =  entry in patient file
	;    returns  : ibadd  =  0 if not added, 1 if added
	;
	I '$D(DT) D DT^DICRW
	S IBWHER=11,IBEXERR=""
	S IBADD=0
	I $S('$D(DFN):1,'$D(^IBA(354)):1,$D(^IBA(354,DFN)):1,1:0) G ADDPQ
	K DO,DD,DIC,DR,DA,DIE S DIC="^IBA(354,",DIC(0)="L",DLAYGO=354
	L +^IBA(354,DFN):15 I $T,'$D(^IBA(354,DFN)) S (DINUM,X)=DFN D FILE^DICN I +Y>0 S IBADD=1
	I IBADD'=1 S IBEXERR=9
	L -^IBA(354,DFN)
	;
ADDPQ	K DO,DD,DIC,DR,DIE,DA,IBX
	Q
	;
ADDEX(IBEXREA,IBDT,IBHOW,IBTYPE,IBOLDAUT)	; -- add entry to 354.1 and update
	;  -- this will become the active entry for this effective date
	;     other entries for this effective date should be cancelled
	;     prior to making this call
	;
	;  -- input      dfn  =  pt ien (required)
	;            ibexrea  =  pointer to exemption reason file (required)
	;               ibdt  =  internal form of effective date (required)
	;              ibhow  =  1=system added, 2=user override (optional) default =1
	;             ibtype  =  type of exemption (optional)  default =1 (copay)
	;           iboldaut  = date (optional)  if defined is the date of a previous exemption status (automatic) that needs to be inactivated
	;
	;  -- returns  ibadde = ibexrea^ibdt or null if not added
	;              iberr  = error if occurs else null
	;
	L +^IBA(354,DFN):30 I '$T S IBEXERR=1 W:$D(IBTALK)&('$D(ZTQUEUED)) !,"ENTRY LOCKED" G ADDEXQ
A1	I '$D(^IBA(354,DFN,0)) D ADDP G ADDEXQ:$G(IBEXERR)
	;
	N IBDGMTA,IBDGMTP,IBDGMTF
	I $D(DGMTA) S IBDGMTA=$G(DGMTA),IBDGMTP=$G(DGMTP),IBDGMTF=$G(DGMTINF)
	N X,X1,X2,Y,IBCNT,DGMTA,DGMTP,DGMTINF
	I $D(IBDGMTA) S DGMTA=$G(IBDGMTA),DGMTP=$G(IBDGMTP),DGMTINF=$G(IBDGMTF)
	S IBWHER=12,IBEXERR="",IBADDE=""
	;
	;  - one last quick check
	I IBDT'?7N S IBEXERR=3 G ADDEXQ
	I $G(^VA(200,+DUZ,0))="" S IBEXERR=8 G ADDEXQ
	;
	D BEFORE^IBARXEVT ;get prior exemption
	;
	N IBSTAT,IBEXDA
	S IBSTAT=$P($G(^IBE(354.2,+IBEXREA,0)),"^",4)
	S IBHOW=$S('$D(IBHOW):1,IBHOW="":1,IBHOW>2:1,IBHOW<1:1,1:IBHOW)
	S IBTYPE=$S('$D(IBTYPE):1,IBTYPE="":1,1:IBTYPE)
	;I '$D(IBACTION) S IBACTION="ADD"
	;
	; -- inactivate a current autoexempt of no longer autoexempt
	I $G(IBOLDAUT)?7N D INACT^IBAUTL7(IBOLDAUT) ;I '$D(ZTQUEUED),$D(IBTALK) W !,"Inactivating current non-income based exemption for patient"
	;
	; -- if forcing a new entry to correct problems
	I $G(IBFORCE)?7N D INACT^IBAUTL7(IBFORCE)
	;
	; -- check for duplicate entry
	I $G(IBOLDAUT)'?7N,$G(IBFORCE)'?7N,$$DUPL() W:'$D(ZTQUEUED)&($D(IBTALK)) !,"Exemption Attempting to Add is a duplicate, nothing added!",! G ADDEXQ
	;
	; -- inactivate previous active entries
	D INACT^IBAUTL7(IBDT) I $G(IBEXERR) G ADDEXQ
	;
	; -- if no income data from conversion set date = start date
	I $D(IBCONVER),$P($G(^IBE(354.2,+IBEXREA,0)),"^",5)=210 S IBDT=$$STDATE^IBARXEU
	;
	; -- add entry
	S DIC="^IBA(354.1,",DIC(0)="L",X=IBDT K DO,DD D FILE^DICN
	S (IBEXDA,DA)=+Y I Y<1 W:'$D(ZTQUEUED)&($D(IBTALK)) !,"Can't add entry to exemption file" S IBEXERR=4 G ADDEXQ
	;
	; -- edit new entry
	S DIE="^IBA(354.1,",DR="[IB NEW EXEMPTION]" ; use compiled template
	;
	;DR=".02////"_DFN_";.03////"_IBTYPE_";.04////"_IBSTAT_";.05////"_IBEXREA_";.06////"_IBHOW_";.07////"_DUZ_";.08///NOW;.1////1;.11////"_$G(IBASIG)
	;
	D ^DIE K DIC,DIE,DA,DR
	I $D(Y) S IBEXERR=5 G ADDEXQ
	S IBADDE=IBEXREA_"^"_IBDT
	;
	; --if effective date is in last 365 days make current
	I IBDT>$$MINUS^IBARXEU0(DT) D CURREX^IBAUTL7(IBSTAT,IBDT) I $G(IBEXERR) G ADDEXQ
	;
	I '$D(ZTQUEUED),$G(IBADDE),$D(IBTALK) W !!,"Medication Copayment Exemption Status Updated: ",$P(^IBE(354.2,+IBADDE,0),"^"),"   ",$$DAT1^IBOUTL($P(IBADDE,"^",2))
	; -- setup and call event driver
	I '$D(IBCONVER) D  ;if not from conversion do following
	.D AFTER^IBARXEVT
	.S IBEVT=$$RXST^IBARXEU(DFN,$S(IBDT<$$STDATE^IBARXEU:$$STDATE^IBARXEU,1:IBDT))
	.D ^IBARXEVT
	.I IBSTAT D CANCEL^IBARXEU3 ;exempt patient cancel old charges
	.D ^IBARXEB ; process bulletins and alerts
	;
ADDEXQ	;
	L -^IBA(354,DFN)
	I $G(IBEXERR) D ^IBAERR
	K DO,DD,DIC,DIE,DA,DR,IBEVT,IBEVTP,IBEVTA,IBASIG
	Q
	;
DUPL()	; -- see if entry is a duplicate
	N X,Y
	S X=0
	S Y=$$LST^IBARXEU0(DFN,IBDT)
	I IBDT=+Y,+IBEXREA=+$P(Y,"^",5),IBTYPE=$P(Y,"^",3) S X=1
	Q X

IBAUTL7
IBAUTL7	;AAS/ALB - RX EXEMPTION UTILITY ROUTINE (CONT.) ; 2-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CURREX(IBSTAT,IBDT)	;update current status if current year
	;  input :    dfn  =  patient file pointer
	;            ibdt  =  internal form of effective date
	;          ibstat  =  status = 1 if exempt, 0 if not exempt
	;
	N X,Y,DIC,DIE,DR,DA
	I $S('$D(DFN):1,'$D(IBSTAT):1,IBSTAT=0:0,IBSTAT=1:0,1:1) G CURREXQ
	;
	; -- make sure ibdt > old current date
	S X=+$P($G(^IBA(354,DFN,0)),"^",3)
	I '$G(IBFORCE),$G(IBOLDAUT)'?7N,X>IBDT G CURREXQ ;only if most recent (I took this out for awhile but don't know why, its needed to keep from updating old over new)
	;
	; -- not greater than today
	;I IBDT>DT G CURREXQ
	;
	S DIE="^IBA(354,",DA=DFN,DR="[IB CURRENT STATUS]" D ^DIE ; set status in billing patient file
	I $D(Y) S IBEXERR=6,IBWHER=14
	;DR=".04////"_IBSTAT_";.03////"_IBDT_";.05////"_IBEXREA
	;
CURREXQ	Q
	;
INACT(IBDT)	; -- must inactivate active exemptions before creating new exemption
	;    should only be called from addex so event driver logic works
	;
	N IBX,X,Y,DA,DR,DIE,DIC
	S IBX=0 F  S IBX=$O(^IBA(354.1,"AIVDT",1,DFN,-IBDT,IBX)) Q:'IBX  D
	.S DA=IBX
	.I $P($G(^IBA(354.1,DA,0)),"^",10)'=1 Q
	.I '$D(ZTQUEUED),$D(IBTALK) W:IBTALK<2 !,"Deleting Active flag from current entry" S IBTALK=IBTALK+1
	.S DA=IBX,DIE="^IBA(354.1,",DR="[IB INACTIVATE EXEMPTION]" D ^DIE K DIC,DIE,DA,DR
	.I $D(Y) S IBEXERR=7,IBWHER=15
	.;S IBACTION="CHG"
	.Q
INACTQ	Q
	;
DUPL()	; -- see if entry is a duplicate
	N X,Y
	S X=0
	S Y=$$LST^IBARXEU0(DFN,IBDT)
	I IBDT=+Y,+IBEXREA=+$P(Y,"^",5),IBTYPE=$P(Y,"^",3) S X=1
	Q X
	;
	;
ALERT()	; -- use alerts or bulletins
	;    returns 1 = use alerts
	;            0 = use bulletins
	;
	Q $P($G(^IBE(350.9,1,0)),"^",14)

IBCA
IBCA	;ALB/MRL - ADD NEW BILLING RECORD  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRA
	;
	D Q1 S IBCABRT=0,IOP="HOME" D ^%ZIS K IOP I $S('$D(DFN):1,'$D(^DPT(DFN,0)):1,1:0) S IBCABRT=1 G NREC
	I $S('$D(^IBE(350.9,1,1)):1,'$P(^(1),U,14):1,1:0) S IBCABRT=4 G NREC
	S PRCASV("SER")=$P(^IBE(350.9,1,1),U,14)
	S PRCASV("SITE")=+$P($$SITE^VASITE,"^",3) I PRCASV("SITE")<1 S IBCABRT=5 G NREC
	S IBNWBL="",IBQUIT=0 I '$D(DUZ(0)) S IBCABRT=2 G NREC
	I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) S DLAYGO=399
	;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO")) F I=1:1 I DUZ(0)[$E(^("LAYGO"),I) Q:I'>$L(^("LAYGO"))  S IBCABRT=3 G NREC
	;
CHKID	D DEM^VADPT S DGDIR0="399,.04^399,.05^399,.06^399,155^399,151^399,152",DGDIRA="LOCATION OF CARE^BILL CLASSIFICATION^TIMEFRAME OF BILL^IS THIS A SENSITIVE RECORD?^STATEMENT COVERS FROM^STATEMENT COVERS TO"
	S DGDIRB="1^^^NO"
	F IBI=1:1:4 S:$P(DGDIRB,"^",IBI)]"" DIR("B")=$P(DGDIRB,"^",IBI) S DIR(0)=$P(DGDIR0,"^",IBI),DIR("A")="   BILLING "_$P(DGDIRA,"^",IBI) D READ G:IBQUIT NREC K DIR
	S DIC="^DGCR(399.3,",DIC(0)="AEQMZ",DIC("A")="   BILLING RATE TYPE:  ",DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC G NREC:Y'>0 S IBIDS(.07)=+Y,IBIDS(.11)=$P(^DGCR(399.3,+Y,0),"^",7)
	I $G(IBIDS(.11))="i" W ! D DISP^IBCNS W !
	;
OP	G IP:IBIDS(.05)'>2 S %DT="EAX",%DT(0)="-NOW",%DT("A")="   BILLING OUTPATIENT EVENT DATE:  " D ^%DT I Y'>0 G NREC
	;S X=Y D APPT^IBCU3
	S X=$$APPT^IBCU3(Y,DFN,1)
	S IBIDS(.03)=+Y X ^DD("DD") S DIR("B")=Y G CEOC
	;
IP	D DISPAD^IBCA0 G:'$D(IBIDS(.03)) NREC I $D(IBDSDT) K:'IBDSDT IBDSDT S:$D(IBDSDT) IBDSDT=$P(IBDSDT,".")
	S Y=$P(IBIDS(.03),".") X ^DD("DD") S DIR("B")=Y
	;
CEOC	W ! S X=$P(IBIDS(.03),".") D EN3^IBCA3 W ! S IBQUIT=0 ;show other bills this date
	I +$G(IBIDS(.08)),+$P($G(^DGPT(+IBIDS(.08),70)),"^",2),$G(^DIC(42.4,+$P(^(70),"^",2),0))'="",$P(^(0),"^",5)="" W !!,"Discharge bedsection of this PTF record is NOT billable!",!!!
	S IBI=5,DIR(0)="399,151",DIR("A")="   BILLING STATEMENT COVERS FROM" D READ G:IBQUIT NREC S DGX=IBIDS(151) D LASTDAY X ^DD("DD") S DIR("B")=Y
	S IBI=6,DIR(0)="399,152",DIR("A")="   BILLING STATEMENT COVERS TO" D READ G:IBQUIT NREC
	K %DT,DIR G ^IBCA1:'$O(^DGCR(399,"C",DFN,0)) S X=9999999-IBIDS(.03)
	F I=0:0 S I=$O(^DGCR(399,"APDT",DFN,I)) Q:'I  I $O(^DGCR(399,"APDT",DFN,I,0))=X,$D(^DGCR(399,+I,0)),$S('$D(^DGCR(399,I,"S")):1,$P(^("S"),"^",16)=1:0,1:1) S IBIDS(.17)=$P(^(0),"^",17) Q
	I $D(IBIDS(.17)) G CHKINQ
	I '$D(IBIDS(.17)),IBIDS(.05)<3 G CHKINQ
CEOC1	D CEOC1^IBCA0 Q:'$D(IBIDS)
CHKINQ	G ^IBCA1
	;
READ	D ^DIR I X?1"^"1.ANP W !?6,*7,"Sorry '^' not allowed!" G READ
	I $D(DIRUT) S IBQUIT=1 Q
	S IBIDS($P($P(DGDIR0,"^",IBI),",",2))=Y
	Q
	;
NREC	S IBYN=0 D SET W !?6,*7,"<",$S('IBCABRT:"ABORTED",$P(IBCABRT(1),U,IBCABRT)]"":$P(IBCABRT(1),U,IBCABRT),1:"ABORTED"),", NO BILLING RECORD CREATED>" K IBIFN
Q1	K IBIDS,IB
Q	K %,%DT,D,IBCABRT,IBNWBL,IBQUIT,IBYN,DIRUT,DTOUT,DIROUT,DUOUT,PRCASV,X1,X2,IBI,IBJ,IBX,DGX,IBDSDT,IBDFN,IBID0,IBSET,IBI,DGDIRB,DGDIR0,DGDIRA,DIR,DIC,DLAYGO,I,X,Y Q
	Q
SET	S IBCABRT(1)="PATIENT INFORMATION LACKING^FILEMAN ACCESS UNDEFINED^NO LAYGO ACCESS TO BILLING FILE^MAS SERVICE PARAMETER UNKNOWN^FACILITY UNDEFINED^UNABLE TO CREATE ACCOUNTS RECEIVABLE ENTRY" Q
	;
LASTDAY	;find last day of last month
	;  -set x to default last date, don't cross fy's or cy's
	S X1=DT,X2=-($E(DT,6,7)) D C^%DTC S Y=X
	K Y
	I $D(IBDSDT) D  G:$D(Y) LDQ
	. I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross fy's
	. I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:IBDSDT<Y Y=IBDSDT Q  ;don't cross cy's
	. S Y=IBDSDT
	;
	I DGX>X S Y=DT Q  ;billing for this month
	;
	I $E(DGX,4,5)<10 S Y=$E(DGX,1,3)_"0930" S:X<Y Y=X G LDQ ; end of month, don't cross fy's
	I $E(DGX,4,5)>9 S Y=$E(DGX,1,3)_"1231" S:X<Y Y=X G LDQ ; end of month, don't cross cy's
	I '$D(Y) S Y=X
LDQ	Q

IBCA0
IBCA0	;ALB/AAS - ADD NEW BILLING RECORD-CONT.  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRA0
	;
	;moved from IBA (4.5) to split routine
	;
CEOC1	W !!,"ARE YOU BILLING FOR A CONTINUING EPISODE OF CARE" S %=2 D YN^DICN G CHKINQ:%=2,NREC^IBCA:%=-1
	I '% W !!?4,"YES - If this bill is for continuing care which has already been partially",!?9,"billed for on another bill.",!?4,"NO  - If this is the initial bill for an episode of care." G CEOC1
	W ! D EN4^IBCA3 I '$D(IBIDS(.17)) G CEOC1
CHKINQ	Q
	;
IP	W !!?4,"ARE YOU BILLING FOR AN UNDISPLAYED EPISODE OF CARE" S %=2 D YN^DICN
	I '% W !!?4,"YES - If this bill is for an episode of care at a Non-VA facility",!?4,"      for which no PTF record exists.",!?4,"NO - If for VA care or you just made a mistake." G IP
	W ! S DGPERCNT=% I DGPERCNT=1 S IBIDS(162)=$O(^DGCR(399.1,"B","STILL PATIENT",0))
IP1	Q:DGPERCNT'=1  S %DT="AEXP",%DT(0)=IBX,%DT("A")="       NON-VA DISCHARGE DATE: " D ^%DT K %DT Q:X=""  I Y<1!(Y>DT) W !!,"Enter a DISCHARGE DATE after the admission date and not greater than today!",! G IP1
	S IBIDS(.16)=Y,IBIDS(162)=$O(^DGCR(399.1,"B",$E("DISCHARGED TO HOME OR SELF CARE",1,30),0))
	Q
DISPAD	;display admissions
	K IBIDS(.03),IBIDS(.08),IBI,IBJ,IBDSDT S (IBI,IBJ)="",IBCNT=0
	F I=0:0 S IBI=$O(^DGPM("ATID1",DFN,IBI)) Q:IBI=""  S IBCNT=IBCNT+1,IBI1=9999999.9999999-IBI,IBI(IBCNT)=IBI1,IBI(IBI1\1)=IBI1
	F J=0:0 S IBJ=$O(^DGPT("AFEE",DFN,IBJ)) Q:IBJ=""  S IBCNT=IBCNT+1,IBJ(IBCNT)=IBJ,IBJ(IBJ)=IBJ
	I 'IBCNT W !!,"Patient has no admissions on file."
	;
	W !?4,$S($O(IBI(0))="":"THERE ARE NO INPATIENT EVENT (ADMISSION) DATES.",1:"Select INPATIENT EVENT (ADMISSION) DATE:")
	F I=1:2 Q:'$D(IBI(I))  S Y=IBI(I) X ^DD("DD") W !?8,I_"   ",Y I $D(IBI(I+1)) S Y=IBI(I+1) X ^DD("DD") W ?40,I+1,"   ",Y
	S J=$O(IBJ(0)) I J]"" W !?4,"OR",!?4,"Select NON-VA INPATIENT EVENT (ADMISSION) DATE:" F J=J:2 Q:'$D(IBJ(J))  S Y=IBJ(J) X ^DD("DD") W !?8,J_"   ",Y I $D(IBJ(J+1)) S Y=IBJ(J+1) X ^DD("DD") W ?40,J+1,"   ",Y
	W !!?4,$S(IBCNT:"CHOOSE 1-"_IBCNT_" or ",1:""),"Enter DATE:  " R IBX:DTIME G:IBX="^"!(IBX="")!('$T) ENDDIS
	I IBX'?.N!(IBX<1)!(IBX>IBCNT) S X=IBX,%DT="EXP",%DT(0)="-NOW" D ^%DT S IBX=Y I Y<1 D HELPAD G DISPAD
	I IBX?7N.N D IP I DGPERCNT=1 S IBIDS(.03)=IBX,IBDSDT=$S($D(IBIDS(.16)):IBIDS(.16),1:""),IBIDS(160)=99,IBIDS(159)=2,IBIDS(158)=2 G ENDDIS
	I $D(IBI(IBX)) S IBIDS(.03)=IBI(IBX),IBIDS(.08)=$O(^DGPM("ATID1",DFN,9999999.9999999-IBI(IBX),0))
	I $D(IBIDS(.08)),$D(^DGPM(IBIDS(.08),0)) S IBIDS(.08)=$P(^(0),"^",16) S:$P(^(0),"^",17)]"" IBDSDT=+^DGPM($P(^(0),"^",17),0) D NOPTF G:'$D(IBIDS(.08)) DISPAD G ENDDIS
	I $D(IBJ(IBX)) S IBIDS(.03)=IBJ(IBX),IBIDS(.08)=$O(^DGPT("AFEE",DFN,IBJ(IBX),0)) S:$D(^DGPT(IBIDS(.08),70)) IBDSDT=+^(70) D NOPTF G:'$D(IBIDS(.08)) DISPAD G ENDDIS
	D HELPAD G DISPAD
	;
ENDDIS	I $G(IBIDS(.08)) D
	.N PTF Q:'$D(^DGPT(IBIDS(.08),"M"))
	.S PTF=IBIDS(.08) D SC1^IBCSC6
	.W !?4,"PTF record indicates ",IBSCM," of ",IBM," movements are for Service Connected Care."
	.I IBSCM,IBSCM=IBM W !?4,*7,"Warning, PTF record indicates all movements are for Service Connected Care.",*7
	;
	K IBCNT,IBI,IBJ,DGPERCNT,IBX,%,%DT Q
	;
NOPTF	I $S(IBIDS(.08)="":1,'$D(^DGPT(IBIDS(.08),0)):1,1:0) K IBIDS(.08) W !!?4,*7,"PTF Record for this Admission is Missing",! Q
	Q
HELPAD	W !!?4,"Enter a number from 1 to ",IBCNT," to select the EVENT DATE.  Inpatient",!?4,"admission dates are admissions for this VA Facility.  Non-VA admissions",!?4,"are for Fee Basis admissions with associated PTF records."
	W !!?4,"Or you may enter a DATE in the past for which there is a Non-VA Admission",!?4,"without an associated PTF record",!
	Q

IBCA1
IBCA1	;ALB/MRL - DISPLAY UTILITIES  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRA1
	;
	Q:'$D(VADM)  S X="",$P(X,"=",81)="" W @IOF,!,VADM(1)_" ("_$P(VADM(2),"^",2)_")",?64,"DOB: ",$P(VADM(3),"^",2),!,X
	W !,"Rate Type",?13,":  ",$S($D(^DGCR(399.3,+IBIDS(.07),0)):$P(^(0),"^",1),1:"UNSPECIFIED-REQUIRED") S IBBT=IBIDS(.04)_IBIDS(.05)_IBIDS(.06)
	W !,"Event Date",?13,":  " S Y=IBIDS(.03) X:Y ^DD("DD") W $S($L(Y):Y,1:"UNSPECIFIED"),!,"Sensitive",?13,":  ",$S(IBIDS(155):"YES",IBIDS(155)=0:"NO",1:"NOT SPECIFIED")
	W !,"Responsible",?13,":  ",$S(IBIDS(.11)="p":"PATIENT",IBIDS(.11)="i":"INSURANCE CARRIER",1:"OTHER [INSTITUTION]") I "^i^o^"[("^"_IBIDS(.11)_"^") W "  (Specify ",$S(IBIDS(.11)="i":"CARRIER",1:"INSTITUTION")," on SCREEN 3)"
	W !!,"Bill Type",?13,":  ",IBBT F I=1:1:3 W !,"  o "_I_$S(I=1:"st",I=2:"nd",1:"rd")_" Digit",?13,":  " D TYPE
	W !!,"Bill From",?13,":  " S Y=IBIDS(151) X ^DD("DD") W Y,!,"Bill To",?13,":  " S Y=IBIDS(152) X ^DD("DD") W Y
	W ! I $E(IBBT,2)<3,$D(IBIDS(.08)) W !,"PTF Number",?13,":  ",IBIDS(.08)
	I $D(IBIDS(.17)) W !,"Initial Bill#",?13,":  ",$S($D(^DGCR(399,+IBIDS(.17),0)):$P(^(0),"^"),1:"Bill no longer exists")
	I $D(IBIDS(.15)) W !,"Copied Bill#",?13,":  ",$S($D(^DGCR(399,+IBIDS(.15),0)):$P(^(0),"^"),1:"Bill no longer exists")
	W ! D T
	I $D(IBCAN),IBCAN=2 Q
ASK	S IBYN=0 W !!,"IS THE ABOVE INFORMATION CORRECT AS SHOWN" S %=1 D YN^DICN G ^IBCA:%=2,^IBCA2:%=1 I % D Q^IBCA2 G NREC^IBCA
	W !!?4,"YES - If this information is correct as shown and you wish to file the bill.",!?4,"NO  - If you wish to change this information prior to filing."
	W !?4,"'^' - Enter the up-arrow character to DELETE this Bill at this time." G ASK
TYPE	S X3=$E(IBBT,I),X4=".0"_(I+3) W X3," - " I '$D(^DD(399,X4,0)) W "ZEROTH NODE UNSPECIFIED-CONTACT YOUR SYSTEMS MANAGER!"
	E  W $P($P($P(^DD(399,X4,0),"^",3),X3_":",2),";",1)
	K X3,X4 Q
T	;
	W !,"Please verify the above information for the bill you just entered.  Once this"
	W !,"information is accepted it will no longer be editable and you will be required"
	W !,"to CANCEL THE BILL if changes to this information are necessary."
	Q

IBCA2
IBCA2	;ALB/MRL - ADD NEW BILL  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRA2
	;
	W !,"Passing bill to Accounts Receivable Module..." D SETUP^PRCASVC3
	I $S($P(PRCASV("ARREC"),U)=-1:1,$P(PRCASV("ARBIL"),U)=-1:1,1:0) W *7,"  ",$P(PRCASV("ARREC"),"^",2),!,$$ETXT^IBEFUNC($P(PRCASV("ARBIL"),"^",2)) D Q G NREC^IBCA
	S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2),IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
	W !,"Billing Record #",IBIDS(.01)," being established for '",VADM(1),"'..." S IBIDS(.02)=DFN
	;D SC^IBCU3 ;calculate if SC veteran
	S IBIDS(.18)=$$SC^IBCU3(DFN) ; calculate if SC veteran
	D SPEC^IBCU4 ;calculate discharge bedsection
	S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
	S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
	S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 W !,"Cross-referencing new billing entry..." S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
	S IBYN=1 W !!,*7,"Billing Record #",$P(^DGCR(399,+IBIFN,0),"^",1)," established for '",VADM(1),"'..."
	K DGPTUPDT D ^IBCU6
Q	K %,%DT,IBI,IBJ,IBDSDT,IBX,IB,IBA,IBNWBL,IBBT,IBIDS,I,J,VADM,X,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL Q
	;
XREF	F IBI1=0:0 S IBI1=$O(^DD(399,IBI,1,IBI1)) Q:'IBI1  I $D(^DD(399,IBI,1,IBI1,1)) S DA=IBIFN,X=IBIDS(IBI) X ^DD(399,IBI,1,IBI1,1)
	Q
	;
WHERE	;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;112^M^12;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
	;
WHEREOLD	;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.11^0^11;.17^0^17;.16^0^16;.18^0^18;104^M^4;105^M^5;106^M^6;107^M^7;108^M^8;109^M^9;121^M1^1;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;
	Q

IBCA3
IBCA3	;ALB/AAS - MCCR SINGLE LINE DISPLAY OF BILL ; 12/22/89
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRA3
	;
EN1	;entry for one bill, must pass IBIFN
	K DGSELNO D HDR,ONE
	G END
	;
EN2	;Find all bills for a patient must pass dfn
	S IBQUIT=0 D UTIL S:'$D(IBPAUS) IBPAUS=5
	I 'IBCNT W !,"No Bills On File for this Patient!" G EN2Q
	K DGSELNO D HDR S (IBDT,IBIFN)="",IBCNT=0
	F K=0:0 S IBDT=$O(^UTILITY($J,IBDT)) Q:IBDT=""!(IBQUIT)  F J=0:0 S IBIFN=$O(^UTILITY($J,IBDT,IBIFN)) Q:IBIFN=""!(IBQUIT)  S IBCNT=IBCNT+1 D ONE,PAUSE:'(IBCNT#IBPAUS)
EN2Q	D END Q
	;
EN3	;Find all bills for a patient on one episode date.  must pass dfn, episode date in x
	S IBQUIT=0 D UTIL,UTIL1
	I 'IBCNT W !,"No Other Bills for this Episode Date on File!" G EN3Q
	K DGSELNO S IBIFN="",IBCNT=0,IBDT=-(X+.99),IBDT1=X
	F K=0:0 S IBDT=$O(^UTILITY($J,IBDT)) Q:IBDT=""!(IBQUIT)!(IBDT>-IBDT1)  F J=0:0 S IBIFN=$O(^UTILITY($J,IBDT,IBIFN)) Q:IBIFN=""!(IBQUIT)  S IBCNT=IBCNT+1 D HDR:IBCNT=1,ONE,PAUSE:'(IBCNT#5)
	F K=0:0 S K=$O(^UTILITY($J,"IB",K)) Q:'K!(IBQUIT)  S IBCNT=IBCNT+1 D HDR1:IBCNT=1,ONE1,PAUSE:'(IBCNT#5)
	I 'IBCNT W !,"No Other Bills for this Episode Date on File!" G EN3Q
EN3Q	D END Q
EN4	;Find all bills beginning a CEOC and allow selection by number, pass dfn
	K ^UTILITY($J) S (DGSELNO,IBQUIT)=0 D UTIL
	I 'IBCNT W !,"No Other Bills for this Episode Date on File!" G EN4Q
	S (IBDT,IBIFN)="",IBCNT=0,IBPAUS=5
	F K=0:0 S IBDT=$O(^UTILITY($J,IBDT)) Q:'IBDT!(IBQUIT)  D 41
	D:'IBQUIT PAUSE:'$D(IBIDS(.17))
EN4Q	K DIC,DGSELNO D END Q
	;
41	F J=0:0 S IBIFN=$O(^UTILITY($J,IBDT,IBIFN)) Q:'IBIFN!(IBQUIT)  D SCRN ;S IBCNT=IBCNT+1 D ONE,PAUSE:'(IBCNT#IBPAUS)
	Q
SCRN	S A=$P(^DGCR(399,IBIFN,0),"^",17)
	I A=IBIFN S DGSELNO=DGSELNO+1,^UTILITY($J,"IBSEL",DGSELNO)=IBIFN,^UTILITY($J,"IBSEL",$P(^DGCR(399,A,0),"^"))=IBIFN D HDR:DGSELNO=1,ONE,PAUSE:'(DGSELNO#IBPAUS)
	Q
	;
ONE	D GVAR^IBCBB W !
	S DGTAB="?0" I $D(DGSELNO) W ?3,DGSELNO S DGTAB="?8" ;write selection numbers here
	W @DGTAB,IBBNO,"  ",$S(IBCL=1:"Inpat. ",IBCL=3:"Outpt. ",IBCL=2:"HE Inpt",1:"HE Opt."),"  ",$S(IBWHO="p":"Patnt",IBWHO="i":"Insur",1:"Other"),"  "
	F I=IBEVDT,IBFDT,IBTDT W $E(I,4,5)_"/"_$E(I,6,7)_"/"_$E(I,2,3),"  "
	W $S(IBST=1:"Enterd",IBST=2:"Revwed",IBST=3:"Auth. ",IBST=4:"Printd",1:"Cancel"),"  "
	W IBTF," ",$S(IBTF=1:"Ad - Ds",IBTF=2:"Int FC ",IBTF=3:"Int CC ",IBTF=4:"Int LC ",IBTF=5:"Late Ch",IBTF=6:"Adjust ",1:"Replace")
	Q
	;
ONE1	; Display IB Actions.  Input: K, X
	N C,D,I,Y S D=$G(^IB(K,0))
	W !,$P($P(D,"^",11),"-",2),?8,$S($P($G(^IBE(350.1,+$P(D,"^",3),0)),"^")["OPT":"Outpt.",1:"Inpat."),"  Patnt  "
	F I=X,$P(D,"^",14),$P(D,"^",15) W $$DAT1^IBOUTL(I),"  "
	S C=$P(^DD(350,.05,0),"^",2),Y=$P(D,"^",5) D Y^DIQ W $E(Y,1,7),"  ",$E($$ACTNM^IBOUTL($P(D,"^",3)),1,18)
	Q
	;
HDR	S DGTAB=$S($D(DGSELNO):"!?8",1:"!") W @DGTAB,"Bill #  Classif  Payer  Event DT  From Dat  To Date   Status  Timeframe"
	S DGTAB=$S($D(DGSELNO):"!?8",1:"!") W @DGTAB,"------  -------  -----  --------  --------  --------  ------  ----------"
	Q
	;
HDR1	; Write header to dislay IB Actions.
	W !,"Bill #  Classf  Payer  Event DT  From Dat  To Date   Status   IB Action Type"
	W !,"------  ------  -----  --------  --------  --------  -------  --------------"
	Q
	;
PAUSE	I '$D(DGSELNO),$E(IOST,1,2)["C-" R !!,"Enter ""^"" to quit display, return to continue",IBX1:DTIME S IBQUIT=$S(IBX1["^":1,'$T:1,1:0) Q
ASK	I '$D(DGSELNO),DGSELNO<1 Q
	W !!,"CHOOSE 1" W:DGSELNO>1 "-",DGSELNO W " or ENTER BILL NUMBER: " R IBX:DTIME I IBX="^"!('$T) S IBQUIT=1 Q
	Q:IBX=""
	I $D(^UTILITY($J,"IBSEL",IBX)) S Y=^(IBX) I $D(^DGCR(399,Y,0)) S Y(0)=^(0) W "  ",$P(Y(0),"^") S IBIDS(.17)=$P(Y(0),"^",17),IBQUIT=1 Q
	;
HELPSEL	W !!,"Enter 1-",DGSELNO," to select that entry or enter the Bill Number" G ASK
	Q
	;
UTIL	S IBIFN1="",IBCNT=0 K ^UTILITY($J)
	F J=0:0 S IBIFN1=$O(^DGCR(399,"C",DFN,IBIFN1)) Q:IBIFN1=""  S IBCNT=IBCNT+1,IBEVDT=$P(^DGCR(399,IBIFN1,0),"^",3),^UTILITY($J,-IBEVDT,IBIFN1)=""
	Q
	;
UTIL1	; Get IB charges for a patient for a single event date.  Input: DFN, X
	N Y,Y1
	S Y=0 F  S Y=$O(^IB("AFDT",DFN,-X,Y)) Q:'Y  S Y1=0 F  S Y1=$O(^IB("AF",Y,Y1)) Q:'Y1  I $D(^IB(Y1,0)),$P(^(0),"^",8)'["ADMISSION" S IBCNT=IBCNT+1,^UTILITY($J,"IB",Y1)=""
	Q
	;
END	D END^IBCBB1
	K A,DGTAB,IBIFN1,IBPAUS,IBQUIT,IBX1,IBDT,IBDT1,IBCNT,^UTILITY($J)
	Q

IBCAMS
IBCAMS	;ALB/AAS - DETERMINE AMIS SEGMENT FOR REIMBURSABLE INS BILLS ; 10-SEP-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRAMS
	;
AMIS	;  - calculate AMIS segment for insurance bills.
	;    249 = NSC - outpatient
	;    292 = SC  - inpatient
	;    293 = SC  - outpatient
	;    297 = NSC - inpatient
	;  - input
	;       x = internal number of entry in 399
	;
	;  - output
	;       y = amis segment number or -1 if can't determine
	;
%	S Y=-1
	I '$D(^DGCR(399,+X,0)) G AMISQ
	S IBX=^DGCR(399,+X,0)
	N DFN
	;
	;  - make sure is RI bill
	;S R=$P(IBX,"^",7),R=$S('$D(^DGCR(399.3,+R,0)):0,1:$P(^(0),"^",6)) G:'R AMISQ S R=$S('$D(^PRCA(430.2,+R,0)):0,1:$P(^(0),"^",7)) G:R'=21 AMISQ
	G:+$$CAT^PRCAFN(X)'=21 AMISQ
	;
	S IBI=$P(IBX,"^",5),IBI=$S('IBI:0,IBI>2:2,IBI<3:1,1:0) G:'IBI AMISQ ; 0=err, 1=inpatient, 2=outpatient
	;
	N X
	S IBSC=$P(IBX,"^",18),DFN=$P(IBX,"^",2) I IBSC="" D ELIG^VADPT S IBSC=+VAEL(3)
	;
	;  - compute amis segment
	S:+IBSC Y=$S(IBI=1:292,IBI=2:293,1:-1) ;sc amis segments
	S:'IBSC Y=$S(IBI=1:297,IBI=2:249,1:-1) ;nsc amis segments
	;
AMISQ	K IBSC,IBX,IBI,VAEL,VAERR
	Q

IBCB
IBCB	;ALB/MRL - BILLING BEGINNING POINT/SELECT BILL OR PATIENT  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRB
	;
EN	;
	D HOME^%ZIS Q:'$D(IBAC)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCB" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBCB-"_$G(IBAC) D T0^%ZOSV ;start rt clock
	;
	S:'$D(IBV) IBV=1 L  K ^UTILITY($J),DFN,IBIFN,DIC S DIC(0)="EQMZ" R !!,"Enter BILL NUMBER or PATIENT NAME: ",IBX:DTIME I IBX["^"!(IBX="") S IBAC1=0 Q
	S IBAC1=1
	I IBX?1A4N!(IBX?2.A)!(IBX?2.A1",".AP)!(IBX?1A1P.AP) S DIC="^DPT(",X=IBX D ^DIC G EN:Y'>0 S DFN=+Y D HINQ S X=$S('$D(^DGCR(399,"C",DFN)):1,'$D(^DGCR(399,"AOP",DFN)):2,1:0)
	I $D(DFN),X,IBAC<4 W !!,"No ",$S(X=1:"",1:"OPEN "),"billing records on file for this patient." D ASK I '$D(IBIFN) G EN
	I $D(DFN) D DATE:'$D(IBIFN),ASK:'$D(IBIFN) D ST:$D(IBIFN) G EN
	S DIC("S")=$S(IBAC'=4:"I $P(^(0),""^"",13)<3",1:"I $P(^(""S""),""^"",17)="""""),DIC="^DGCR(399,",X=IBX
	D ^DIC G:Y'>0 EN S IBIFN=+Y,DFN=$P(Y(0),"^",2) D HINQ,ST G EN
	G EN
HINQ	I $S('$D(^DPT(DFN,.361)):1,$P(^(.361),"^",1)'="V":1,1:0) W !?17,"*** ELIGIBILITY NOT VERIFIED ***" D HINQ1
MT	;I $D(DFN) D ^DGMT1 K DGMTLL
	I $D(DFN) D DIS^DGMTU(DFN)
	Q
HINQ1	I $P($G(^IBE(350.9,1,1)),"^",16) S X="DVBHQZ4" X ^%ZOSF("TEST") K X I $T W ! D EN^DVBHQZ4 Q
	;I $P($G(^IBE(350.9,1,1)),"^",16) F X="DVBHQZ4","DGHINQZ4" X ^%ZOSF("TEST") I $T S DGROUT=X K X W ! D @("EN^"_DGROUT) K DGROUT Q
	K Y Q
ASK	I IBAC'=1 K IBIFN Q
	W !!,"DO YOU WANT TO ESTABLISH A NEW BILLING RECORD FOR '",$P(^DPT(DFN,0),"^",1),"'" S %=2 D YN^DICN
	I '% W !!?4,"YES - To establish a new billing record in the billing file.",!?4,"NO  - To discontinue this process immediately." G ASK
	I %'=1 K IBIFN Q
	K DA,Y,DINUM,IBIFN S (IBNEW,IBYN)=1 D ^IBCA Q
DATE	I $D(^DGCR(399,"C",DFN)) S DA="" F I=1:1 S DA=$O(^DGCR(399,"APDT",DFN,DA)) Q:DA=""  D DATE1
	I IBAC=4,'$D(^UTILITY($J,"IB")) W !,"No ",$S($D(^DGCR(399,"C",DFN)):"UNCANCELLED ",1:""),"billing records on file for this patient." Q
	S CT=0,CT1=1,IBT="" F J=1:1 S IBT=$O(^UTILITY($J,"IB",IBT)) Q:IBT=""  F J1=0:0 S J1=$O(^UTILITY($J,"IB",IBT,J1)) Q:J1=""  S X=J1 D SET
CT	W ! S G="",CT2=$S(CT<(CT1+4):CT,1:(CT1+4)) F K=CT1:1:CT2 I $D(^UTILITY($J,"UB",K)) D WRLINE
	S X="" D WDATE Q:X["^"  I '$D(IB),$D(^UTILITY($J,"UB",K+1)) S CT1=K+1 G CT
	K CT,CT1,CT2,K,^UTILITY($J,"UB") Q
WRLINE	W !?2,K,?6 S IBDATA=^UTILITY($J,"UB",K),Y=+IBDATA X ^DD("DD") W Y,?25,$P(^DGCR(399,+$P(IBDATA,"^",2),0),"^",1),?34,$P(IBDATA,"^",3),?49,$P(IBDATA,"^",4),?71,$P(IBDATA,"^",5)
	Q
DATE1	S IBT=$O(^DGCR(399,"APDT",DFN,DA,0)) I $D(^DGCR(399,+DA,0)),$S(IBAC<3:$P(^(0),U,13)<3,IBAC=3:$P(^(0),U,13)<3,'$D(^("S")):0,$P(^("S"),"^",17)]"":0,1:1) S ^UTILITY($J,"IB",IBT,DA)=""
	Q
WDATE	Q:'CT  W !! W:K<CT "PRESS <RETURN> TO CONTINUE, OR",! W "CHOOSE 1",$S(CT=1:"",1:"-"_K),": " R X:DTIME Q:X["^"!(X="")  I X["?" W !!,"Select one of the above or <RETURN> to establish a new billing record." G WDATE
	I $S('$D(^UTILITY($J,"UB",+X)):1,+X>K:1,+X<1:1,'(X?.N):1,1:0) W !!,"NOT A VALID CHOICE!!",*7 G WDATE
	S IBIFN=$P(^UTILITY($J,"UB",X),"^",2),IB=1 Q
SET	I $S(IBV:1,$P(^DGCR(399,+X,0),"^",13):1,1:0) S CT=CT+1 D SET2
	Q
SET2	S IBND0=^DGCR(399,+X,0)
	S ^UTILITY($J,"UB",CT)=9999999-IBT_"^"_+X_"^"_$S($D(^DGCR(399.3,+$P(IBND0,"^",7),0)):$P(^(0),"^",4)_$S($P(IBND0,"^",5)<3:"-Inpt",1:"-Opt"),1:"")_"^"_$P($P($P(^DD(399,.13,0),"^",3),$P(IBND0,"^",13)_":",2),";",1)
	I +$P(IBND0,"^",19)'=$P($G(^IBE(350.9,1,1)),U,26) S ^UTILITY($J,"UB",CT)=^UTILITY($J,"UB",CT)_"^"_$E($P($G(^IBE(353,+$P(IBND0,"^",19),0)),"^",1),1,9)
	Q
ST	L ^DGCR(399,IBIFN):5 I '$T W !,"No further processing of this record permitted at this time.",!,"Record locked by another user.  Try again later." Q
	S ^DISV(DUZ,"^DGCR(399,")=IBIFN
	D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 Q
	G ST2:IBAC'=1
ST1	K ^UTILITY($J) D ^IBCSCU,^IBCSC1 G Q:'$T
ST2	D ^IBCB1 Q
Q	;
	K IBIFN,IBV,IBAC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCB" D T1^%ZOSV ;stop rt clock
	Q
	;
EDI	S IBAC=1,IBV=0 D EN G Q:'IBAC1,EDI
REV	;S IBAC=2,IBV=0 D EN G Q:'IBAC1,REV
AUT	S IBAC=3,IBV=0 D EN G Q:'IBAC1,AUT
GEN	S IBAC=4,IBV=1 D EN G Q:'IBAC1,GEN
	Q

IBCB1
IBCB1	;ALB/AAS - Process bill after enter/edited ; 2-NOV-89
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRB1
	;
	;IBQUIT = Flag to stop processing
	;IBVIEW = Flag showing Bill has been viewed
	;IBDISP = Flag showing Bill entering display been viewed.
	;
	K ^UTILITY($J) I $D(IBAC),IBAC>1 G @IBAC
1	;complete bill
	D END,EDITS^IBCB2 G:IBQUIT END
	;
2	;review bill
	;I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) W !!,"You do not hold the Review Key.",! G END
	;I '$P($G(^IBE(350.9,1,1)),"^",11),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",2) W !!,"Entering user can not review bill.",! G END
	;D EDITS^IBCB2 G:IBQUIT END
REV	;W !!,"WANT TO ",$S($P(^DGCR(399,IBIFN,"S"),"^",6)]"":"RE-",1:""),"REVIEW BILL AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
	;I '% W !?4,"YES - To set the status to Reviewed",!?4,"No - To take no action" G REV
	;
	;S (DIC,DIE)=399,DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE D:$D(IBX3) DISAP^IBCBULL
	;
3	;authorize bill
	I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) W !!,"You do not hold the Authorize Key.",! G END
	;I '$P(^DGCR(399,IBIFN,"S"),"^",6) W:IBAC>2 !!,"Not Yet Reviewed.",! G END
	;I '$P($G(^IBE(350.9,1,1)),"^",3),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",8) W !!,"Reviewing user can not authorize.",! G END
	I '$P($G(^IBE(350.9,1,1)),"^",23),DUZ=$P(^DGCR(399,IBIFN,"S"),"^",2) W !!,"Entering user can not authorize.",! G END
	I $P(^DGCR(399,IBIFN,"S"),"^",9) W !,"Already Approved, Can't change" G END
	D EDITS^IBCB2 G:IBQUIT END
AUTH	W !!,"WANT TO AUTHORIZE BILL AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
	I '% W !?4,"YES - To set the status to Complete",!?4,"No - To take no action" G AUTH
	S (DIC,DIE)=399,IBYY="@90",DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY D:$D(IBX3) DISAP^IBCBULL
	I '$P(^DGCR(399,IBIFN,"S"),"^",9) G END
	W !,"Passing completed Bill to Accounts Receivable.  Bill is no longer editable."
	I $P(^DGCR(399,IBIFN,"S"),"^",9) D GVAR^IBCBB,ARRAY^IBCBB1,^PRCASVC6 D REL^PRCASVC:PRCASV("OKAY") I 'PRCASV("OKAY") D FXERR1^IBCB2 G END
	W !,"Completed Bill Successfully sent to Accounts Receivable."
	;
4	;generate/print bill
	G:('$D(IBIFN)) END
	I '$P(^DGCR(399,IBIFN,"S"),"^",9) W !!,*7,"Not Authorized, Can Not Print!" G END
	D DISP^IBCB2
	S:'$D(IBQUIT) IBQUIT=0
	D:'$D(IBVIEW) VIEW^IBCB2 G:IBQUIT END
	S IBPNT=$P(^DGCR(399,IBIFN,"S"),"^",12)
GEN	W !!,"WANT TO ",$S(IBPNT]"":"RE-",1:""),"PRINT BILL AT THIS TIME" S %=2 D YN^DICN G:%=-1!(%=2) END
	I '% W !?4,"YES - to print the bill now",!?4,"NO - To take no action" G GEN
	I 'IBPNT D EN1^IBCF G END
RPNT	R !!,"(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal: C// ",IBPNT:DTIME S:IBPNT="" IBPNT="C" G:IBPNT["^" END
	S IBPNT=$E(IBPNT,1) I "23oOcC"'[IBPNT W !?5,"Enter 'O' to reprint the original bill or",!?5,"Enter 'C' to reprint the bill as a duplicate copy or",!?5,"Enter '2' or '3' to print 2nd or 3rd follow-up notices." S IBPNT=1 G RPNT
	W "  (",$S("cC"[IBPNT:"COPY","oO"[IBPNT:"ORIGINAL",IBPNT=2:"2nd NOTICE",IBPNT=3:"3rd NOTICE",1:""),")"
	S IBPNT=$S("oO"[IBPNT:1,"cC"[IBPNT:0,1:IBPNT)
	D EN1^IBCF
	;
END	K IBER D END^IBCBB1 K IBQUIT,IBVIEW,IBDISP,IBST,IB,PRCAERCD,PRCAERR,PRCASVC,PRCAT,DGRA2,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,PRCAORA,IBX3,DGBILLBS,DGII,DGVISCNT,DGFIL,DGTE
	K %DT,DIC,DIE,I,J,X,Y,Y1,Y2,IBER,IBDFN,IBDSDT,IBJ,IBNDI1,IBZZ,VA,IBMA,IBXDT,DI,PRCAPAYR,DGBS,DGCNT,DGDA,DGPAG,DGREVC,DGRV,DGTEXT,DGTOTPAG,IBOPV,DGLCNT,DGTEXT1,DGRSPAC,DGSM,IBPNT,DGINPT,DGLL,IBCPTN
	K IBOPV1,IBOPV2,IBCHG,DGBIL1,DGU,DDH,IBA1,IBINS,IBPROC,PRCARI K:'$D(PRCASV("NOTICE")) PRCASV
	Q

IBCB2
IBCB2	;ALB/AAS - Process bill after enter/edited ; 13-DEC-89
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRB2
	;
	;IBQUIT = Flag to stop processing
	;IBVIEW = Flag showing Bill has been viewed
	;IBDISP = Flag showing Bill entering display been viewed.
	;
VIEW	;View screens; if status allows editing , allow editing
	S IBVIEW=1,IBV=$S($D(IBV):IBV,1:1),%=2 W !,"WANT TO ",$S('IBV:"EDIT",1:"REVIEW")," SCREENS" D YN^DICN S:%=-1 IBQUIT=1 Q:%=-1!(%=2)
	I '% W !?4,"YES - to ",$S('IBV:"EDIT",1:"REVIEW")," the screens",!?4,"NO - To take no action" G VIEW
	Q:%'=1
VIEW1	S IBVIEW=1 D ^IBCSCU,^IBCSC1
	Q
DISP	S IB("S")=$S($D(^DGCR(399,IBIFN,"S")):^("S"),1:"")
	W ! D DISP^IBCNQ W !
	S IBDISP=1 Q
	Q
EDITS	S IBQUIT=0 I '$D(IBER)!('$D(PRCASV)) D EN^IBCBB
	I IBER]"" D FXERR I IBER]"" W !,"Can't Continue" S IBQUIT=1 Q
	I $D(PRCASV),'($D(PRCASV("OKAY"))) D ^PRCASVC6 I 'PRCASV("OKAY") D FXERR1 I 'PRCASV("OKAY") W !,"Can't Continue" S IBQUIT=1 Q
	D:'$D(IBDISP) DISP
	D:'$D(IBVIEW) VIEW
	Q
FXERR	S Y2="" F I=1:1 S X=$P(IBER,";",I) Q:X=""  I $D(^IBE(350.8,$O(^IBE(350.8,"AC",X,0)),0)) S Y=^(0),Y1=$P(Y,"^",5),Y2=Y2_Y1 I Y1<5 W !?5,$P(Y,"^",2)
	Q:Y2'["3"  W !!,"Do you wish to ",$S(IBAC<4:"edit",1:"review")," Inconsistencies now" S %=2 D YN^DICN Q:%=-1!(%=2)
	I '% W !!?4,"YES - To edit inconsistent fields",!?4,"NO - To discontinue this process." G FXERR
	D VIEW1
	D EN^IBCBB G:IBER]"" FXERR
	Q
FXERR1	S Y2="",J=0 F I=0:0 S J=$O(PRCAE(J)) Q:J=""  S X=PRCAE(J) I $D(^IBE(350.8,$O(^IBE(350.8,"AC",X,0)),0)) S Y=^(0),Y1=$P(Y,"^",5),Y2=Y2_Y1 I Y1<5 W !?5,$P(Y,"^",2)
	Q:Y2'["3"  W !!,"Do you wish to edit Inconsistencies now" S %=2 D YN^DICN Q:%=-1!(%=2)
	I '% W !!?4,"YES - To edit inconsistent fields",!?4,"NO - To discontinue this process." G FXERR1
	D VIEW1
	D GVAR^IBCBB,ARRAY^IBCBB1,^PRCASVC6 G:'PRCASV("OKAY") FXERR1
	Q
NOPTF	S IBAC1=1 I $D(^DGCR(399,IBIFN,0)),$P(^(0),"^",8),'$D(^DGPT($P(^(0),"^",8),0)) S IBAC1=0
	Q
NOPTF1	W !!,*7,"PTF Record for this Bill was DELETED!",!,"Further processing not allowed.  Cancel and re-enter." Q

IBCBB
IBCBB	;ALB/AAS - EDIT CHECK ROUTINE TO BE INVOKED BEFORE ALL BILL APPROVAL ACTIONS ; 2-NOV-89
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRBB
	;
	;IBNDn = IBND(n) = ^ib(399,n)
	;RETURNS:
	;IBER=fields with errors seperated by semi-colons
	;PRCASV("OKAY")=1 if iber="" and $D(prcasv("array")) compete
	;
GVAR	;set up variablesfor mccr
	Q:'$D(IBIFN)  F I=0,"M","U","U1","S" S @("IBND"_I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	S IBBNO=$P(IBND0,"^"),DFN=$P(IBND0,"^",2),IBEVDT=$P(IBND0,"^",3)
	S IBLOC=$P(IBND0,"^",4),IBCL=$P(IBND0,"^",5),IBTF=$P(IBND0,"^",6)
	S IBAT=$P(IBND0,"^",7),IBWHO=$P(IBND0,"^",11),IBST=$P(IBND0,"^",13),IBFT=$P(IBND0,"^",19)
	S IBFDT=$P(IBNDU,"^",1),IBTDT=$P(IBNDU,"^",2)
	S IBTC=$P(IBNDU1,"^",1),IBFY=$P(IBNDU1,"^",9),IBFYC=$P(IBNDU1,"^",10)
	S IBEU=$P(IBNDS,"^",2),IBRU=$P(IBNDS,"^",5),IBAU=$P(IBNDS,"^",8)
	Q
	;
EN	;Entry to check for errors
	S IBER="" D GVAR Q:'$D(IBND0)
	;
	;Bill number in correct format
	;I IBBNO'?6N&(IBBNO'?5N1U) S IBER="IB044;"
	;
	;patient in patient file
	I DFN="" S IBER=IBER_"IB057;"
	I DFN]"",'$D(^DPT(DFN)) S IBER=IBER_"IB057;"
	;
	;Event date in correct format
	I IBEVDT="" S IBER=IBER_"IB049;"
	I IBEVDT]"",IBEVDT'?7N&(IBEVDT'?7N1".".N) S IBER=IBER_"IB049;"
	;
	;location of care
	I IBLOC=""!($L(IBLOC)>1)!("127"'[IBLOC) S IBER=IBER_"IB055;"
	;
	;Bill classification
	I IBCL=""!($L(IBCL)>1)!("1234"'[IBCL) S IBER=IBER_"IB043;"
	;
	;Timeframe of Bill
	I IBTF=""!($L(IBTF)>1)!("01234567"'[IBTF) S IBER=IBER_"IB063;"
	;May want to check timeframe versus other bills for this episode (later)
	;
	;Rate Type
	I IBAT="" S IBER=IBER_"IB059;"
	I IBAT]"",'$D(^DGCR(399.3,IBAT,0)) S IBER=IBER_"IB059;"
	I IBAT]"",$D(^DGCR(399.3,IBAT,0)),'$P(^(0),"^",6) S IBER=IBER_"IB059;",IBAT=""
	;I IBAT]"",$D(^DGCR(399.3,IBAT,0)) S IBARTP=$P(^PRCA(430.2,$P(^DGCR(399.3,IBAT,0),"^",6),0),"^",6)
	I IBAT]"",$P($G(^DGCR(399.3,IBAT,0)),"^",6) S IBARTP=$P($$CATN^PRCAFN($P(^DGCR(399.3,IBAT,0),"^",6)),"^",3)
	;Check that AR catagory expects same debtor as defined in who's respon.
	I $D(IBARTP),IBWHO="i"&(IBARTP'="T")!(IBWHO="p"&("PC"'[IBARTP))!(IBWHO="o"&(IBARTP'="N")) S IBER=IBER_"IB058;"
	;
	;Who's Responsible
	I IBWHO=""!($L(IBWHO)>1)!("iop"'[IBWHO) S IBER=IBER_"IB065;"
	I IBWHO="i",'+IBNDM S IBER=IBER_"IB054;"
	I IBWHO="o",'+$P(IBNDM,"^",11) S IBER=IBER_"IB053;"
	;
	G ^IBCBB1

IBCBB1
IBCBB1	;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ; 2-NOV-89
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRBB1
	;
%	;Bill Status
	I IBST=""!($L(IBST)>1)!("012347"'[IBST) S IBER=IBER_"IB045;"
	I IBST=0 S IBER="IB045;"
	;
	;Statement Covers From
	I IBFDT="" S IBER=IBER_"IB061;"
	I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
	S IBFFY=$S($E(IBFDT,4,5)<10:$E(IBFDT,2,3),1:$E(IBFDT,2,3)+1)
	;
	;Statement Covers To
	I IBTDT="" S IBER=IBER_"IB062;"
	I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
	S IBTFY=$S($E(IBTDT,4,5)<10:$E(IBTDT,2,3),1:$E(IBTDT,2,3)+1)
	;
	;Statement crosses fiscal years
	I IBTFY'=IBFFY S IBER=IBER_"IB047;"
	;
	;Statement crosses calendar years
	I $E(IBTDT,1,3)'=$E(IBFDT,1,3) S IBER=IBER_"IB046;"
	;
	;Total Charges
	I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
	;
	;Fiscal Year 1
	I IBFY=""!($L(IBFY)'=2)!(IBFY<80)!(IBFY>($S($E(DT,4,5)<10:$E(DT,2,3),1:$E(DT,2,3)+1))) S IBER=IBER_"IB050;"
	;
	;FY 1 Charges
	I +IBFYC'>0!(+IBFYC'=IBFYC) S IBER=IBER_"IB051;"
	;
	;FY 1 Charges minus offset greater than 0
	I +IBFYC-$P(IBNDU1,"^",2)'>0 S IBER=IBER_"IB052;"
	;
	;Check provider link for current user, enterer, reviewer and Authorizor
	I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
	I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
	I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
	I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
	;
	;Bill exists and not already new bill
	;I $S('$D(^PRCA(430,IBIFN,0)):1,$P($P(^PRCA(430,IBIFN,0),"^"),"-",2)'=IBBNO:1,1:0) S IBER=IBER_"IB056;"
	;I $P($$BN^PRCAFN(IBIFN),"-",2)'=IBBNO S IBER=IBER_"IB056;"
	;I IBER="",$P(^PRCA(430,IBIFN,0),"^",8)=$O(^PRCA(430.3,"AC",104,"")) S IBER=IBER_"IB040;"
	I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
	;
	;asc on bill and more than one visit, ub's only
	I IBFT'=2,IBWHO="i",$D(^DGCR(399,"ASC2",IBIFN)),$O(^($O(^DGCR(399,IBIFN,"OP",0)))) S IBER=IBER_"IB042;"
	;
	;edit checks for HCFA 1500 forms
	I IBFT=2 D ^IBCBB2
	;
	;Other things that could be added:  Revenue Code - calculating charges
	;           Diagnosis Coding, if Cat C - check for other co-payments
	;
	D ARRAY:IBER=""
	;
END	;Don't kill IBifn, IBer, dfn
	K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBNDS,IBND0,IBNDU,IBNDM,IBNDU1,IBFFY,IBTFY,IBFT
	I $D(IBER),IBER="" W !,"No Errors found"
	Q
	;
ARRAY	;Build PRCASV(array)
	K PRCASV
	S X=IBIFN D ^IBCAMS S:Y>0 PRCASV("AMIS")=Y
	S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
	S PRCASV("APR")=DUZ
	S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
	I IBWHO="i" S PRCASV("DEBTOR")=+IBNDM_";DIC(36,"
	S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
	S PRCASV("CARE")=IBLOC_IBCL
	S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
PLUS	I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
	I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
	Q:'$D(^DGCR(399,IBIFN,"I1"))  S IBNDI1=^("I1")
	S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
	S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
	S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
	S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
	Q

IBCBB2
IBCBB2	;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (HCFA 1500); 04/14/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRBB2
	;
	N IBI,IBJ,IBN,IBY,IBDX,IBDXL,IBCPT,IBCPTL I '$D(IBER) S IBER=""
	;
	;HCFA 1500: visit CPT must be defined and associated with a revenue code
	;I '$D(^DGCR(399,IBIFN,"CP","AVP"))!'$D(^DGCR(399,IBIFN,"RC","AVC")) S IBER=IBER_"IB070;"
	;
	;HCFA 1500: ICD-9 diagnosis, at least 1 required
	;S IBDX=$G(^DGCR(399,IBIFN,"C")) F I=14:1:17 I $P(IBDX,"^",I)'="" S IBDXL($P(IBDX,"^",I))=""
	;I '$D(IBDXL) S IBER=IBER_"IB071;"
	;
	;
	;HCFA 1500: ICD-9 diagnosis, at least 1 required
	D SET^IBCSC4D(IBIFN,.IBDX) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
	;
	;HCFA 1500: each CPT procedure must be associated with a dx,
	S (IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
	. Q:$P(IBCPT,"^",1)'["ICPT("
	. S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
	I +IBN S IBER=IBER_"IB072;"
	;
	;HCFA 1500: the dx's associated with procedures must be defined diagnosis for the bill
	S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
	S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1
	I +IBN S IBER=IBER_"IB073;"
	;
	Q

IBCBR
IBCBR	;ALB/AAS - ADD/EDIT BILLING RATES FILE; 3 MAY 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRBR
	;
	;ask date, bed section, revenue code, amount, the file.
	;     reask revenue code until null
	;     reask bed section untill null - then revenue code
	;     reask date until null .....
ADD	W ! S %DT="AEX",%DT("A")="Select BILLING RATE EFFECTIVE DATE: " D ^%DT G:Y<1 END1 S IBEFDT=+Y
	F I=0:0 D BS G:IBBS<1 ADD
	Q
BS	W ! S DIC("S")="I $P(^(0),U,5)",DIC="^DGCR(399.1,",DIC(0)="AEQM",DIC("A")="   Select BILLING BEDSECTION: " D ^DIC K DIC S IBBS=+Y Q:IBBS<1
	F J=0:0 D REV Q:IBREV<1
	Q
REV	W ! S DIC("S")="I $P(^(0),U,3)",DIC="^DGCR(399.2,",DIC(0)="AEQM",DIC("A")="      Select REVENUE CODE: " D ^DIC K DIC S IBREV=+Y Q:IBREV<1
	I $D(^DGCR(399.5,"AIVDT",IBBS,-IBEFDT,IBREV)) S DIC(0)="EMQF",X=IBEFDT,DIC="^DGCR(399.5,",DIC("S")="I $P(^(0),U,2)=IBBS,$P(^(0),U,3)=IBREV" D ^DIC K DIC D NEW:+Y<1 Q:Y<1  S DA=+Y D EDIT Q
	W !,"Filing New Entry!" D FILE,EDIT
	Q
FILE	S:'$D(DIC(0)) DIC(0)="L" S DIC="^DGCR(399.5,",X=IBEFDT,DIC("DR")=".02////"_IBBS_";.03////"_IBREV K DD,DO D FILE^DICN S DA=+Y
	Q
	;
NEW	;ask to add new entry from fast
	S Y=IBEFDT X ^DD("DD") W !?3,"ARE YOU ADDING '",Y,"' AS A NEW BILLING RATES" D YN^DICN Q:%=-1!(%=2)
	I '% W !!?3,"Enter 'YES' to add this as a new BILLING RATES",!?3,"or Enter 'NO' to not add a new entry",! G NEW
	S DIC(0)="EQL" D FILE Q
	Q
	;
EN1	;edit file entry, do lookup, then edit.
	W ! S DIC("A")="Select BEDSECTION: ",DIC="^DGCR(399.1,",DIC(0)="AEQMN",DIC("S")="I $P(^(0),U,5)" D ^DIC K DIC G:Y<1 END S IBBS=+Y D BR G EN1
	Q
BR	W ! S DIC("DR")=".02///"_IBBS,DIC("S")="I $P(^(0),U,2)=IBBS",DIC="^DGCR(399.5,",DIC(0)="AEQL" D ^DIC K DIC Q:Y<1  S DA=+Y D EDIT G BR
	;
EDIT	S (DIC,DIE)="^DGCR(399.5,",DR=".01:99" D ^DIE
	Q
	;
END1	D ENR^IBEMTO K IBRUN ; bill MT OPT charges awaiting the new copay rate
END	K I,J,X,Y,%DT,DA,DIC,DIE,DR,IBBS,IBREV,IBEFDT
	Q
	;
REDO	;re-index the aivdt x-ref in billing rates file.
	K ^DGCR(399.5,"AIVDT")
	S IBJ=0 F IBI=0:0 S IBJ=$O(^DGCR(399.5,IBJ)) Q:'IBJ  I $D(^DGCR(399.5,IBJ,0)) S X=^(0) I $P(X,"^",2)]"",$P(X,"^",3)]"" S ^DGCR(399.5,"AIVDT",$P(X,"^",2),-($P(X,"^")),$P(X,"^",3),IBJ)=""

IBCBULL
IBCBULL	;ALB/MJB - MCCR MAILMAN BULLETINS  ;14 JUN 88 15:33
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRBULL
	; both bulletins are sent to: billing supervisor, person cancelling/disapproving, and respective mail group, if defined
	; disapproval bulletin is also sent to person who entered the bill
	;
BULL	S IBFTN=$P($G(^DGCR(399,+$G(IBIFN),0)),U,19),IBFTN=$$FTN^IBCU3(IBFTN)
	K XMY S XMSUB=$S($D(IBCAN):"MAS "_IBFTN_" BILL CANCELLATION BULLETIN",1:"MAS "_IBFTN_" BILL DISAPPROVAL BULLETIN"),XMDUZ=DUZ
	S IBEPAR(1)=$G(^IBE(350.9,1,1)),IB(0)=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"")
	S DFN=$P(IB(0),U,2) D PID^VADPT6 S IBBNO=$P(IB(0),U,1),IBNAME=$P(^DPT(DFN,0),U),Y=$P(IB(0),U,3) X ^DD("DD") S IBDT=Y
	S IBTEXT(1,0)="The following "_IBFTN_" bill has been "_$S($D(IBCAN):"cancelled: ",1:"disapproved: "),IBTEXT(2,0)="",IBTEXT(3,0)="Bill Number: "_IBBNO,IBTEXT(4,0)=""
	S IBTEXT(5,0)="Patient Name: "_IBNAME_"         PT ID: "_VA("PID"),IBTEXT(6,0)="",IBTEXT(7,0)="Event Date: "_IBDT
	S:$D(IBCAN) IBTEXT(8,0)="",IBTEXT(9,0)="Reason for cancellation: "_$P(^DGCR(399,IBIFN,"S"),"^",19)
	S:$D(IBCAN) IBTEXT(10,0)="",IBTEXT(11,0)="Status when cancelled: "_$S('$D(IBSTAT):"",1:$P($P($P(^DD(399,.13,0),"^",3),IBSTAT_":",2),";",1))
	S:$D(IBTEXT(11,0)) Y=$P(IB("S"),"^",10),IBTEXT(11,0)=IBTEXT(11,0)_"  -  "_$S('Y:"Not passed to AR",1:"Passed to AR on ") I Y D D^DIQ S IBTEXT(11,0)=IBTEXT(11,0)_Y
	S:'$D(IBCAN) IBTEXT(8,0)="" F I=1:1 Q:'$D(IBD(I))  S J=8+I Q:J'<14  S IBTEXT(J,0)="Reason for disapproval: "_IBD(I)
	I '$D(IBCAN),$D(J)#2,J'<14 S IBTEXT(J,0)="",IBTEXT((J+1),0)="Other reasons too numerous to mention..."
	;
	S XMTEXT="IBTEXT(",XMY(DUZ)="",XMY(DUZ,1)="",XMY($P(IBEPAR(1),"^",8))="" S:'$D(IBCAN) XMY($P(^DGCR(399,IBIFN,"S"),"^",2))=""
	;
	;I $D(IBCAN),IBEPAR(1)]"",$P(IBEPAR(1),U,7)]"" S IBM="" F I=1:1 S IBM=$O(^XMB(3.8,$P(IBEPAR(1),U,7),1,"B",IBM)) Q:IBM=""  S:'$D(XMY(IBM)) XMY(IBM)=""
	I $D(IBCAN) S IBGRP=$P($G(^XMB(3.8,+$P($G(IBEPAR(1)),"^",7),0)),"^") I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
	;
	;I '$D(IBCAN),IBEPAR(1)]"",$P(IBEPAR(1),U,9)]"" S IBM="" F I=1:1 S IBM=$O(^XMB(3.8,$P(IBEPAR(1),U,9),1,"B",IBM)) Q:IBM=""  S:'$D(XMY(IBM)) XMY(IBM)=""
	I '$D(IBCAN) S IBGRP=$P($G(^XMB(3.8,+$P($G(IBEPAR(1)),"^",9),0)),"^") I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
	;
	D ^XMD K XMSUB,XMY,XMDUZ,XMTEXT,IB,IBTEXT,IBNAME,IBGRP,IBBNO,IBD,IBDT,IBM,IBFTN,VA("BID"),VA("PID"),I,Y,DIC Q
	Q
DISAP	Q:$P(^DGCR(399,IBIFN,"S"),"^",6)!('$D(IBX3))  S X3=IBX3
	I X3=3 S IBD=0 F I=1:1 S IBD=$O(^DGCR(399,IBIFN,"D1",IBD)) Q:IBD'?1N.N  S IBD(I)=^DGCR(399,IBIFN,"D1",IBD,0),IBD(I)=$S($D(^DGCR(399.4,IBD(I),0)):$P(^(0),"^",1),1:"")
	I X3=6 S IBD=0 F I=1:1 S IBD=$O(^DGCR(399,IBIFN,"D2",IBD)) Q:IBD'?1N.N  S IBD(I)=^DGCR(399,IBIFN,"D2",IBD,0),IBD(I)=$S($D(^DGCR(399.4,IBD(I),0)):$P(^(0),"^",1),1:"")
	D BULL K IBD,IBX3,X3,I Q
	Q
SET	S X1=$S($D(^DGCR(399,+IBIFN,"S")):^("S"),1:""),IB("U1")=$S($D(^DGCR(399,IBIFN,"U1")):^("U1"),1:"") Q:X1']""
	;IBCBULL

IBCC
IBCC	;ALB/MJB - CANCEL UB-82 THIRD PARTY BILL  ;14 JUN 88  10:12
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRC
	;
	;I '$D(IBCAN) W !!,?3,"***** BILLS MAY ONLY BE CANCELLED THROUGH 'CANCEL BILL' OPTION!! *****",!,?5,"***** PLEASE SEE YOUR SUPERVISOR IF YOU REQUIRE ASSISTANCE!! *****" Q
	I '$D(IBCAN) S IBCAN=1
ASK	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
	;
	D Q S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
NOPTF	S IBIFN=+Y I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
	F I=0,"S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"." G 1
	S IBSTAT=$P(IB(0),"^",13)
CHK	W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBCCCC=0 G NO
	S IBCCCC=0 W !!,"LAST CHANCE TO CHANGE YOUR MIND..." S DIE("NO^")="",DIE="^DGCR(399,",DA=IBIFN,DR="16;S:'X Y=0;19;S IBCCCC=1;" D ^DIE K DIE,DR
NO	I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 G ASK:IBCAN<2,Q
	W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN)
	F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,$P(IB("U1"),"^",1)]"":$P(IB("U1"),"^",1),1:0),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
	S PRCASV("COMMENT")=$S('$D(^IBE(350.9,1,2)):"BILL CANCELLED IN MAS",$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
	;
	; Cancel the Accounts Receivable record if the A/R status is equal to
	;   104  -  NEW BILL
	;   201  -  BILL INCOMPLETE
	;   220  -  RETURNED FROM AR (NEW)
	; Otherwise, the A/R record should be amended.
	D @($S(("^104^201^220^")[("^"_+$$STA^PRCAFN(IBIFN)_"^"):"CANCEL",1:"AMEND")_"^PRCASVC1") G ASK:IBCAN<2,Q
	;
HELP	W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
	Q
1	I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
	G ASK
Q1	K:IBCAN=1 IBQUIT K IBCAN
Q	K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBCCCC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
	Q
	;IBCC

IBCCC
IBCCC	;ALB/AAS - CANCEL AND CLONE A BILL ;25-JAN-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRCC
	;
	;STEP 1 - cancel bill
	;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancel)
	;STEP 2 - build array of IBIDS call screen that asks ok
	;STEP 3 - pass stub entry to ar
	;STEP 4 - store stub data in MCCR then x-ref
	;STEP 5 - get remainder of data to move and store in MCCR then x-ref
	;STEP 6 - go to screens, come out to IBB1 
EN	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCCC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBCCC-1" D T0^%ZOSV ;start rt clock
	;
STEP1	S IBCAN=2,IBQUIT=0,IBAC=6,IBU="UNSPECIFIED" D ASK^IBCC
	G:IBQUIT END1
	I 'IBCCCC!('$D(IBIFN)) G STEP1
EN1	;
STEP1P5	I '$D(IBIFN) S IBCAN=2,IBQUIT=0,IBAC=6 W !,"Copy Previously Cancelled Bill.",!! S DIC="^DGCR(399,",DIC("S")="I $P(^(0),U,13)=7",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " D ^DIC G:Y<1 END S IBIFN=+Y
	;
	S IBIDS(.15)=IBIFN K IBIFN
STEP2	S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
	F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
	F I=16:1:19 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
	F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
	D HOME^%ZIS
	S DFN=IBIDS(.02) D DEM^VADPT,^IBCA1
ASK	S IBYN=0 W !!,"IS THE ABOVE INFORMATION CORRECT AS SHOWN" S %=1 D YN^DICN G END:%=2,STEP3:%=1 I % G END
	W !!?4,"YES - If this information is correct as shown and you wish to file the bill.",!?4,"NO  - If you wish to change this information prior to filing."
	W !?4,"'^' - Enter the up-arrow character to DELETE this Bill at this time." G ASK
	;
STEP3	;
	S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
	S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL=""
	W !,"Passing bill to Accounts Receivable Module..." D SETUP^PRCASVC3 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) W *7,"  ",$P(PRCASV("ARREC"),"^",2),$P(PRCASV("ARBIL"),"^",2) G END
	S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2),IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
	W !,"Billing Record #",IBIDS(.01)," being established for '",VADM(1),"'..." S IBIDS(.02)=DFN
	G ^IBCCC1 ;go to step4
	Q
END	W !!,"No Billing Record Set up.  You must manually enter the bill."
END1	K %,%DT,IBCAN,IBAC,IBND0,IBNDU,IBYN,IBCCCC,IBIFN,IB,IBA,IBNWBL,IBBT,IBIDS,IBU,I,J,VA,VADM,X,X1,X2,X3,X4,Y,D G STEP1:'IBQUIT
	K IBQUIT
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCCC" D T1^%ZOSV ;stop rt clock
	Q

IBCCC1
IBCCC1	;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRCC1
	;
	;STEP 1 - cancell bill
	;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancell)
	;STEP 2 - build array of IBIDS call screen that asks ok
	;STEP 3 - pass stub entry to ar
	;STEP 4 - store stub data in MCCR then x-ref
	;STEP 5 - get remainder of data to move and store in MCCR then x-ref
	;STEP 6 - go to screens, come out to IBB1 or something like that
	;
STEP4	S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
	S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
	S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 W !,"Cross-referencing new billing entry..." D INDEX^IBCCC2
	S IBYN=1 W !!,*7,"Billing Record #",$P(^DGCR(399,+IBIFN,0),"^",1)," established for '",VADM(1),"'..."
END	K %,%DT,IB,IBA,IBNWBL,IBBT,IBIDS,I,J,VADM,X,X1,X2,X3,X4,Y
	;
	G ^IBCCC2 ;go to step 5
	;
	;
XREF	F IBI1=0:0 S IBI1=$O(^DD(399,IBI,1,IBI1)) Q:'IBI1  I $D(^DD(399,IBI,1,IBI1,1)) S DA=IBIFN,X=IBIDS(IBI) I X]"" X ^DD(399,IBI,1,IBI1,1)
	Q
	;
WHERE	;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;104^M^4;105^M^5;106^M^6;107^M^7;108^M^8;109^M^9;121^M1^1;151^U^1;152^U^2;155^U^5;101^M^1;

IBCCC2
IBCCC2	;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRCC2
	;
	;STEP 5 - get remainder of data to move and store in MCCR then x-ref
	;STEP 6 - go to screens, come out to IBB1 or something like that
	;
STEP5	S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
	;
	;move pure data nodes
	F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
	;
	;move top level data node.
	F I="U","U1","U2","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
	;
	;move multiple level data
	F I="CC","OC","OP","RC","CP","CV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
	;
	D INDEX
	;
	D ^IBCCC3 ; copy table files (362.3)
	;
	D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto biller files/fields
	;
STEP6	S IBV=0,IBAC=1 D ^IBCSCU,^IBCSC1 G END:'$T D ^IBCB1
END	K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST
	K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBIFN,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
	K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
	G ^IBCCC
	;
	;
U	F J=3,4,7,10,11,13:1:17 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
	Q
U1	F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
	Q
U2	F J=1,2,3 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
	Q
UF2	F J=1 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
	Q
UF3	F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
	Q
UF31	F J=1,2 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
	Q
C	F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
	I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
	Q
M	F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
	Q
CC	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
OP	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
	Q
OC	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
	Q
CV	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
	Q
RC	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
	Q
CP	S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
	S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0) F K=1:1:7,9:1:14 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
CP1	S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
	S:'$D(^DGCR(399,IBIFN,"CP",0)) ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI"
	I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
	I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
	I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
	Q
	;
FILE	S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," K DD,DO Q:X=""  D FILE^DICN Q:+Y<1  S DA=+Y
	S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
	K DIC,DIE,DR,DA,Y,DGPROCDT
	Q
	;
INDEX	;index entire file (set logic)
	S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
	Q

IBCCC3
IBCCC3	;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;copy entries from table files:
	;passed in: IBIFN=new bill, IBIFN1=old bill
	;
	I '$D(^DGCR(399,+$G(IBIFN),0))!'$D(^DGCR(399,+$G(IBIFN1),0)) Q
	N IBXR,X,Y,IBX
	;
DX	;copy diagnosis' (362.3)
	N IBDX,IBDIFN
	;copy diagnosis from old bill
	I $D(^IBA(362.3,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
	. S IBDX=0 F  S IBDX=$O(^IBA(362.3,IBXR,IBDX)) Q:'IBDX  D
	.. S IBDIFN=0 F  S IBDIFN=$O(^IBA(362.3,IBXR,IBDX,IBDIFN)) Q:'IBDIFN  D
	... S IBX=$G(^IBA(362.3,IBDIFN,0)) I 'IBX!($P(IBX,U,2)'=IBIFN1) Q
	... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBX K DA,DO D FILE^DICN
	... S DIE=DIC,DA=+Y,DR=".02////"_IBIFN_";.03////"_$P(IBX,U,3) D ^DIE K DIC,DIE,DA,DO,DR
	K DIE,DIC,DA,DO,DR,X,Y
	;
PRDX	;repoint procedure's associated diagnosis (2,304,10-13 -> 362.3)
	N IBCPT,IBDIFN1,IBLN,IBI
	S IBCPT=0 F  S IBCPT=$O(^DGCR(399,+IBIFN,"CP",IBCPT)) Q:'IBCPT  D
	. S IBLN=$G(^DGCR(399,+IBIFN,"CP",IBCPT,0)) F IBI=11:1:14 S IBDIFN1=$P(IBLN,U,IBI) I +IBDIFN1 D
	.. S IBDX=+$G(^IBA(362.3,+IBDIFN1,0)) Q:'IBDX
	.. S IBDIFN=$O(^IBA(362.3,"AIFN"_IBIFN,IBDX,0)) Q:'IBDIFN
	.. S $P(^DGCR(399,+IBIFN,"CP",IBCPT,0),U,IBI)=IBDIFN
	;
RX	;copy rx refills (362.4)
	N IBRX,IBRIFN
	;copy rx refills from old bill
	I $D(^IBA(362.4,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
	. S IBRX=0 F  S IBRX=$O(^IBA(362.4,IBXR,IBRX)) Q:IBRX=""  D
	.. S IBRIFN=0 F  S IBRIFN=$O(^IBA(362.4,IBXR,IBRX,IBRIFN)) Q:'IBRIFN  D
	... S IBX=$G(^IBA(362.4,IBRIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
	... S DIC="^IBA(362.4,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
	... S DR=".02////"_IBIFN_";.03////"_$P(IBX,U,3)_";.04////"_$P(IBX,U,4)_";.05////"_$P(IBX,U,5)_";.06////"_$P(IBX,U,6)_";.07////"_$P(IBX,U,7)_";.08////"_$P(IBX,U,8)
	... S DIE=DIC,DA=+Y D ^DIE K DIC,DIE,DA,DO,DR
	K DIE,DIC,DA,DO,DR,X,Y
	;
PROS	;copy prosthetics (362.5)
	N IBPR,IBPIFN
	;copy rx refills from old bill
	I $D(^IBA(362.5,"AIFN"_IBIFN1)) S IBXR="AIFN"_IBIFN1 D
	. S IBPR=0 F  S IBPR=$O(^IBA(362.5,IBXR,IBPR)) Q:IBPR=""  D
	.. S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.5,IBXR,IBPR,IBPIFN)) Q:'IBPIFN  D
	... S IBX=$G(^IBA(362.5,IBPIFN,0)) I IBX=""!($P(IBX,U,2)'=IBIFN1) Q
	... S DIC="^IBA(362.5,",DIC(0)="L",X=$P(IBX,U,1) K DA,DO D FILE^DICN K DA,DO Q:Y'>0
	... S DR=".02////"_IBIFN_";.03////"_$P(IBX,U,3)_";.04////"_$P(IBX,U,4)
	... S DIE=DIC,DA=+Y D ^DIE K DIC,DIE,DA,DO,DR
	K DIE,DIC,DA,DO,DR,X,Y
	Q

IBCCPT
IBCCPT	;ALB/LDB/AAS - MCCR OUTPATIENT VISITS LISTING CONT. ; 29 MAY 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRCPT
	;
	K DIR
EN	D:$D(DIR) HLP W @IOF S DGU=0 K DGCPT,^UTILITY($J) D VST
	D CHDR,WRNO
	S (DGCNT,DGCNT1)=0 F  S DGCNT=$O(^UTILITY($J,"CPT-CNT",DGCNT)) Q:'DGCNT  S DGNOD=^(DGCNT),DGCPT=+DGNOD,DGDAT=$P(DGNOD,"^",2),DGBIL=$P(DGNOD,"^",3),DGASC=$P(DGNOD,"^",4),DGDIV=$P(DGNOD,"^",5),DGCNT1=DGCNT1+1 D CPRT I DGU="^" S DGCNT=DGCNT-1 Q
	I DGU'="^" F Y=$Y:1:IOSL-6 W !
OK1	K Y Q:'$D(^UTILITY($J,"CPT-CNT"))!($D(DIR))
	;OKS DIR(0)="LAO^1:"_DGCNT_"^Q:DGU=""^""",DIR("?")="^D EN^IBCCPT",DIR("A")="SELECT CPT CODE(S) TO INCLUDE IN THIS BILL: "
OK	S DIR(0)="LAO^1:"_DGCNT1_"^K:X[""."" X",DIR("?")="^D EN^IBCCPT",DIR("A")="SELECT CPT CODE(S) TO INCLUDE IN THIS BILL: "
	D ^DIR I 'Y D Q1^IBCOPV1 Q
	S IBFT=+$P(^DGCR(399,IBIFN,0),"^",19)
OK2	W !,"YOU HAVE SELECTED CPT CODE(S) NUMBERED-",$E(Y,1,$L(Y)-1),!,"IS THIS CORRECT" S %=1 D YN^DICN I %=-1 S IBOUT=1 D Q^IBCOPV1 Q
	I +Y,'% W !,"Respond 'Y'es to include these codes in the bill.",!,"Respond 'N'o to reselect." G OK2
	I +Y,%=2 G OK
	;
FILE	S DGCPT1=Y,(DGCNT,DGCNT2)=0
	S DIE="^DGCR(399,",DA=IBIFN,DR=".09///4" D ^DIE K DR,DA,DIE
	S:'$D(^DGCR(399,IBIFN,"CP",0)) ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI"
	F I9=1:1 S I1=$P(DGCPT1,",",I9) Q:'I1  I $D(^UTILITY($J,"CPT-CNT",I1)) S DGNOD=^(I1) D FILE1
	D Q1^IBCOPV1 Q
	;
FILE1	;  file procedures, if BASC, only for 1 visit date
	K DGNOADD S (X,DINUM)=$P(DGNOD,"^",2) D VFILE1^IBCOPV1 K DINUM,X
	I $D(DGNOADD) W !?10,"Can't add Amb. Surg. ",$P(^ICPT(+DGNOD,0),"^")," without visit date!" Q  ;don't add cpt for date that can't go on bill
	I IBFT'=2,+$P(DGNOD,"^",4),$$TOMANY($P(DGNOD,"^",2)) W !?10,"Can't add Billable Amb. Surg. ",$P(^ICPT(+DGNOD,0),"^")," when more than one visit date!",*7 Q
	W !?4,"Adding CPT Procedure: ",$P(^ICPT(+DGNOD,0),"^")
	S DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP"",",DIC(0)="L",X=+DGNOD_";ICPT(" K DD,DO D FILE^DICN S DA=+Y
	S DR="1///"_$P(DGNOD,"^",2)_$S('$P(DGNOD,"^",4):"",1:";5////"_$P(DGNOD,"^",5))
	S:IBFT=2 DR=DR_";8;9;D DISP1^IBCSC4D("_IBIFN_");10;S:X="""" Y=""@99"";11;S:X="""" Y=""@99"";12;S:X="""" Y=""@99"";13;@99"
	S DIE=DIC D ^DIE
	L ^DGCR(399,IBIFN):1
	K DIE,DIC,DR,DA
	Q
CPRT	D:$Y+6>IOSL SCR Q:DGU="^"
	I $D(^ICPT(DGCPT,0)) W !,DGCNT,")",?5,$P(^(0),"^"),?13,$S(DGASC:"YES",1:""),?20,$E($P(^(0),"^",2),1,28),?50 S Y=DGDAT D DT^DIQ I DGBIL W ?64,"  *ON THIS BILL*"
	Q
CHDR	W @IOF,!,?15,"<<CURRENT PROCEDURAL TERMINOLOGY CODES>>",!!,?10,"LISTING FROM VISIT DATES WITH ASSOCIATED CPT CODES",!,?22,"IN SCHEDULING VISITS FILE",!
	S L="",$P(L,"=",80)="" W !,L,!,"NO.",?5,"CODE",?13,"BASC",?20,"SHORT NAME",?50,"PROCEDURE DATE",!,L,! K L Q
VST	S DGCNT=0 I $O(^DGCR(399,IBIFN,"OP",0)) F V=0:0 S V=$O(^DGCR(399,IBIFN,"OP",V)) Q:'V  S (IBOPV1,IBOPV2)=V D ASC
	Q:$O(^DGCR(399,IBIFN,"OP",0))
	S IBOPV1=$P(^DGCR(399,IBIFN,"U"),"^"),IBOPV2=$P(^("U"),"^",2)
	D ASC
	Q
WRNO	W:'$O(^UTILITY($J,"CPT-CNT",0)) !,"NO CPT CODES IN SCHEDULING VISITS FILE FOR THE ",$S($O(^DGCR(399,IBIFN,"OP",0)):"VISIT DATES ON THIS BILL",1:"PERIOD THAT THIS STATEMENT COVERS")
	Q
SCR	Q:DGU="^"  I $E(IOST,1,2)["C-",$Y+6>IOSL F Y=$Y:1:IOSL-5 W !
	I  R !,"Press return to continue or ""^"" to exit display ",DGU:DTIME D:DGU'="^" CHDR
	Q
HLP	W !!,"Enter a number between 1 and ",DGCNT1," or a range of numbers separated with commas",!,"or dashes, e.g., 1,3,5 or 2-4,8"
	W !,"The number(s) must appear as a selectable number in the sequential list." R H:5 K H Q
CPT	S DA(1)=IBIFN,IBCCPTZ=$P(^DGCR(399,DA(1),0),U,9),IBCCPTX=$S($D(^DGCR(399,DA(1),"C"))&IBCCPTZ:1,1:0)
	K DIK,DGTE,I1 Q
	;
ASC	;  -find ambulatory procedures, flag if billable
	;  -  ^utility($j,cpt-cnt,count)=code^date^already on bill^is BASC^divis
	;
	F I=IBOPV1:0 S I=$O(^SDV("C",DFN,I)) Q:'I!(I>(IBOPV2+.99))  I $D(^SDV(I,0)) S DGDIV=$P(^(0),"^",3) D
	.F I1=0:0 S I1=$O(^SDV(I,"CS",I1)) Q:'I1  I $D(^(I1,0)) S DGNOD=^(0) I $D(^("PR")),$$DSP^IBEFUNC($P(DGNOD,"^",5),I) S DGCPTS=^SDV(I,"CS",I1,"PR"),I7=$P(I,".") I DGCPTS'="" D
	..S:'$D(^UTILITY($J,"CPT",I,0)) ^(0)="Y"
	..F I2=1:1:5 S DGCPT=$P(DGCPTS,"^",I2) I DGCPT'="" S DGCNT=DGCNT+1 S ^UTILITY($J,"CPT-CNT",DGCNT)=DGCPT_"^"_I7_"^"_$S($D(^DGCR(399,IBIFN,"CP","B",DGCPT_";ICPT(")):1,1:"")_"^"_$S(+$$CPTCHG^IBEFUNC1(DGCPT,DGDIV,I7):1,1:0)_"^"_DGDIV
	Q
TOMANY(DATE)	;  - returns 1 if more than 1 visit date on bill (for basc)
	G TOMANYQ:'$D(DATE)
	S DGVCNT=+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4)
	I DGVCNT>1!(DGVCNT=1&('$D(^DGCR(399,IBIFN,"OP",DATE)))) K DGVCNT Q 1
TOMANYQ	Q 0

IBCD
IBCD	;ALB/ARH - AUTOMATED BILLER ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;This routine is the begining of the auto biller.  No variables are required on entry.  It is be called by the
	;IB nightly job routine IBAMTC.  It first checks to see if it should run based on the auto biller frequency
	;site parameter.  It then gathers the Claims Tracking events with an EABD into a temporary file by patient,
	;event type, and episode date.  This temporary file ("IBACAB") is then used to sort the events into groups
	;that should be added to individual bills based on the individual event type billing cycle parameters.  This
	;second temporary file is then used to create the actual bills in IBCD1-2.
	;
EN	;begin process of finding and creating bills
	;determine if auto biller should run, check site parameters (350.9,7.01-7.02)
	S IBPAR7=$G(^IBE(350.9,1,7)) G:'$P(IBPAR7,U,1) EXIT
	I +IBPAR7,+$P(IBPAR7,U,2),$$FMADD^XLFDT(+$P(IBPAR7,U,2),+IBPAR7)>DT G EXIT
	S IBAUTO=1
	;
	;begin search for events to bill, create array of events by patient
	;^TMP("IBCAB",$J, PATIENT, EVENT TYPE, EPISODE DATE, EVENT IFN)=""
	;adds all events in Claims Tracking that have an EABD not after today
	S IBDFN=0 F  S IBDFN=$O(^IBT(356,"ATOBIL",IBDFN)) Q:'IBDFN  D
	. S IBTYP=0 F  S IBTYP=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP)) Q:'IBTYP  D
	.. S IBEABD=0 F  S IBEABD=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD)) Q:'IBEABD!(IBEABD>DT)  D
	... S IBTRN=0 F  S IBTRN=$O(^IBT(356,"ATOBIL",IBDFN,IBTYP,IBEABD,IBTRN)) Q:'IBTRN  D
	.... S IBX=$$EVBILL^IBCU81(IBTRN) I 'IBX!(IBX>DT) D TEABD(IBTRN,+IBX) D:$P(IBX,U,2)'="" TERR(IBTRN,0,$P(IBX,U,2)) Q
	.... S IBX=$$EVNTCHK^IBCU82(IBTRN) I +IBX D TEABD(IBTRN,0) D TERR(IBTRN,0,$P(IBX,U,2)) Q
	.... S IBTRND=$G(^IBT(356,IBTRN,0))
	.... S ^TMP("IBCAB",$J,IBDFN,IBTYP,+$P(IBTRND,U,6),IBTRN)=""
	K IBDFN,IBTYP,IBEABD,IBTRN,IBTRND,IBX
	;
	I $D(^TMP("IBCAB",$J)) D ^IBCD1 ; consolidate events into bills, create bills
	D ^IBCDC ; set comments into file
	S DIE="^IBE(350.9,",DA=1,DR="7.02////"_DT D ^DIE ;reset last date auto biller run
	K ^TMP("IBCAB",$J),^TMP("IBEABD",$J),^TMP("IBCE",$J),^TMP("IBILL",$J)
	F IBX=1:1:10 K ^TMP(("IBC"_IBX),$J)
EXIT	K IBX,IBPAR7,DIE,DA,DR,IBAUTO,IBBS,IBSC,IBT
	Q
	;
TEABD(TRN,IBDT)	;array contains the list of claims tracking events that need EABD updated, and the new date
	S IBDT=+$G(IBDT),^TMP("IBEABD",$J,TRN,+IBDT)=""
	Q
TERR(TRN,IFN,ER)	;array contains events or bills that need entries created in the comments file, and the comment
	N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
	S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
	Q
TBILL(TRN,IFN)	;array contains list of events and bills to be inserted into 356.399
	I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
	S ^TMP("IBILL",$J,TRN,IFN)=""
	Q

IBCD1
IBCD1	;ALB/ARH - AUTOMATED BILLER ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
SETB	;set up bills  (sort by event date required by types where multiple events can be on one bill)
	S IBDFN=0 F  S IBDFN=$O(^TMP("IBCAB",$J,IBDFN)) Q:'IBDFN  D
	. S IBTYP=0 F  S IBTYP=$O(^TMP("IBCAB",$J,IBDFN,IBTYP)) Q:'IBTYP  S IBS="IBC"_IBTYP D
	.. S IBEVDT=0 F  S IBEVDT=$O(^TMP("IBCAB",$J,IBDFN,IBTYP,IBEVDT)) Q:'IBEVDT  D
	... S IBTRN=0 F  S IBTRN=$O(^TMP("IBCAB",$J,IBDFN,IBTYP,IBEVDT,IBTRN)) Q:'IBTRN  D
	.... S IBX=$P($G(^IBE(356.6,+IBTYP,0)),U,1)
	.... I IBX="INPATIENT ADMISSION" D INP^IBCD5 Q
	.... I IBX="PRESCRIPTION REFILL" D RXRF Q
	.... I IBX="OUTPATIENT VISIT" D OUTP Q
	.... D TEABD(IBTRN,0),TERR(IBTRN,0,"Event type can not be auto billed.")
	K IBDFN,IBTYP,IBEVDT,IBTRN,IBS,IBX,IBSTDT,IBTF
	D ^IBCD2
	Q
	;
OUTP	;Outpatient Bills   (IBTRN,IBTYP,IBDFN,IBEVDT)
	;get statement from and to dates, based on event date and billing cycle of event type then try to match event to an existing bill cycle, check that event is not already billed and that BC+DD is greater than current date
	;^TMP("IBC2",$J, PATIENT , START DT ^ TO DT , EVENT IFN)= TIMEFRAME
	S IBSTDT=(IBEVDT\1)_"^"_$$BCDT^IBCU8(IBEVDT,IBTYP)
	S IBX=0 F  S IBX=$O(^TMP(IBS,$J,IBDFN,IBX)) Q:IBX=""!(+IBSTDT<+IBX)  I +IBSTDT'>$P(IBX,U,2) S IBSTDT=IBX Q
	S IBX=$$DUPCHK^IBCU41(IBEVDT,0,0,IBDFN,0) I +IBX D TEABD(IBTRN,0),TERR(IBTRN,0,$P(IBX,U,2)) G OUTPQ
	S IBX=$$EABD^IBCU81(IBTYP,$P(IBSTDT,U,2)) I +IBX>DT D TEABD(IBTRN,+IBX) G OUTPQ
	S ^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)=1
OUTPQ	K IBSTDT,IBX
	Q
RXRF	;RX Refill (Outpatient) Bills   (IBTRN,IBTYP,IBDFN,IBEVDT)
	;get statement from and to dates, based on event date and billing cycle of event type then try to match event to an existing bill cycle, check that event is not already billed and that BC+DD is greater than current date
	;^TMP("IBC4",$J, PATIENT , START DT ^ TO DT , EVENT IFN)= TIMEFRAME
	S IBRXRF=$$RXRF^IBCU81(IBTRN) I IBRXRF="" D TEABD(IBTRN,0),TERR(IBTRN,0,"Can not find rx refill in Pharmacy.") G RXRFQ
	S IBSTDT=($P(IBRXRF,U,2)\1)_"^"_$$BCDT^IBCU8(+$P(IBRXRF,U,2),IBTYP)
	S IBX=0 F  S IBX=$O(^TMP(IBS,$J,IBDFN,IBX)) Q:IBX=""!(+IBSTDT<+IBX)  I +IBSTDT'>$P(IBX,U,2) S IBSTDT=IBX Q
	S IBX=$$RXDUP^IBCU3($P(IBRXRF,U,1),+$P(IBRXRF,U,2),0,0,IBDFN,0) I +IBX D TEABD(IBTRN,0),TERR(IBTRN,0,$P(IBX,U,2)) G RXRFQ
	S IBX=$$EABD^IBCU81(IBTYP,$P(IBSTDT,U,2)) I +IBX>DT D TEABD(IBTRN,+IBX) G RXRFQ
	S ^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)=1
RXRFQ	K IBSTDT,IBX,IBRXRF
	Q
	;
TEABD(TRN,IBDT)	;array contains the list of claims tracking events that need EABD updated, and the new date
	S IBDT=+$G(IBDT),^TMP("IBEABD",$J,TRN,+IBDT)=""
	Q
TERR(TRN,IFN,ER)	;array contains events or bills that need entries created in the comments file, and the comment
	N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
	S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
	Q
TBILL(TRN,IFN)	;array contains list of events and bills to be inserted into 356.399
	I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
	S ^TMP("IBILL",$J,TRN,IFN)=""
	Q

IBCD2
IBCD2	;ALB/ARH - AUTOMATED BILLER (CREATE - SETUP/GATHER DATA FIELDS) ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
FIND	;
	S IBX=$$CHKSYS^IBCD4 I 'IBX D TERR(0,0,$P(IBX,U,2)) G EXIT
	S IBS="IBC0" F  S IBS=$O(^TMP(IBS)) Q:IBS=""  S IBX=$E(IBS,4,99) Q:$E(IBS,1,3)'="IBC"!'+IBX  D
	. S IBDFN=0 F  S IBDFN=$O(^TMP(IBS,$J,IBDFN)) Q:'IBDFN  D
	.. S IBSTDT="" F  S IBSTDT=$O(^TMP(IBS,$J,IBDFN,IBSTDT)) Q:IBSTDT=""  D  I $D(IBCT)>9 D CREATE
	... K IBCT S IBTRN=0 F  S IBTRN=$O(^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)) Q:'IBTRN  S IBCT(IBTRN)="",IBTF=^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)
EXIT	K IBS,IBDFN,IBSTDT,IBCT,IBTRN,IBTF,IBX,X,DFN
	Q
	;
CREATE	;set up a bill,  required: IBCT(IBTRN),IBDFN,IBSTDT
	Q:$D(IBCT)<9  K IB
	S IBSP=$G(^IBE(350.9,1,1)),IBDIV=$P(IBSP,U,25),IBTRN=+$O(IBCT(0))
	S IBTRND=$G(^IBT(356,IBTRN,0)) I 'IBTRND D TERR(+IBTRN,0,"Claims Tracking Record not found or not complete.") G QUIT
	S IBTYPE=$P(IBTRND,U,18) S IBX=$$CHK I 'IBX D TERR(+IBTRN,0,$P(IBX,U,2)) G QUIT
	;
	S IBX=$$ARSET I 'IBX D TERR(IBTRN,0,$P(IBX,U,2)) G QUIT
	S IBIFN=+IBX,IB(.01)=$P(IBX,U,2),IB(.17)=$P(IBX,U,3),IB(.2)=1
	S (IB(.02),DFN)=IBDFN,IB(.06)=IBTF
	S IB(.07)=$O(^DGCR(399.3,"B","REIMBURSABLE INS.",0)) I 'IB(.07) S IB(.07)=8
	S IBX=$O(^IBT(356.2,"ATRTP",IBTRN,1,"")) I +IBX S IB(163)=$P($G(^IBT(356.2,IBX,0)),U,28) ;pre-cert #
	;
	S IBX=$P($G(^IBE(356.6,+IBTYPE,0)),U,1)
	I IBX="INPATIENT ADMISSION" D INPT^IBCD5 G CONT
	I IBX="PRESCRIPTION REFILL" D RXRF G CONT
	I IBX="OUTPATIENT VISIT" D OUTPT G CONT
	G QUIT
	;
CONT	S IBX=$$BDT^IBCU3(IBDFN,IB(.03)) S IB(.17)=$S(+IBX:IBX,1:IBIFN) ; continuing episode of care
	;Note if a primary bill is found for an outpatient bill then it allows them to choose the bill during bill creation,  .17 is not editable on the screens
	S IB(.18)=$$SC^IBCU3(IBDFN) ; SC at time of care
	;
	D ^IBCD3 ; create bill
	;
	S IBTRN=0 F  S IBTRN=$O(IBCT(IBTRN)) Q:'IBTRN  D
	. D TERR(IBTRN,IBIFN,"") ; bill created
	. D TEABD(IBTRN,0) ; remove eabd
	. D TBILL(IBTRN,IBIFN) ; set index for bill and event (356.399)
	;
QUIT	K X,Y,IBX,IBY,IBSP,IBDIV,IBTRN,IBTRND,IBTYPE,IB
	Q
	;
OUTPT	S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1) ;division outpatient only or hospital
	S IB(.05)=3,IB(.06)=1,IB(.09)=4
	;event dt is date of first visit, stmt from is first visit dt, stmt to is last visit dt on bill
	S (IB(.03),IB(151))=9999999,IB(152)=""
	S IBTRNX=0 F  S IBTRNX=$O(IBCT(IBTRNX)) Q:'IBTRNX  S IBX=$P($G(^IBT(356,IBTRNX,0)),U,6)\1 D
	. S IB(43,+IBX)="" S:IB(152)<IBX IB(152)=IBX F IBI=.03,151 I IB(IBI)>IBX S IB(IBI)=IBX
	K IBI,IBX,IBTRNX
	Q
RXRF	S IB(.04)=$S(+$P($G(^DG(40.8,+IBDIV,0)),U,3):7,1:1) ;division outpatient only or hospital
	S IB(.05)=3,IB(.06)=1
	;event dt is date of first visit, stmt from is first visit dt, stmt to is last visit dt on bill
	S (IB(.03),IB(151))=9999999,IB(152)=""
	S IBTRNX=0 F  S IBTRNX=$O(IBCT(IBTRNX)) Q:'IBTRNX  S IBRX=$G(^IBT(356,IBTRNX,0)) D
	. S IBX=$$RXRF^IBCD4(+$P(IBRX,U,8),+$P(IBRX,U,10)),IB(362.4,+$P(IBRX,U,8),+$P(IBRX,U,10))=IBX,IBX=$P(IBX,U,4)
	. S:IB(152)<IBX IB(152)=IBX F IBI=.03,151 I IB(IBI)>IBX S IB(IBI)=IBX
	K IBI,IBX,IBTRNX,IBRX
	Q
	;
ARSET()	; set up entry for new bill in AR returns IFN, bill number
	;otherwise "0^error meaasge"
	N X S X="0^Can not set up bill in AR."
	S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),U,14),PRCASV("SITE")=+$P($$SITE^VASITE,U,3)
	D SETUP^PRCASVC3
	I $P(PRCASV("ARBIL"),U)=-1 S X="0^"_$P(PRCASV("ARBIL"),U,2)_" - "_$$ETXT^IBEFUNC($P(PRCASV("ARBIL"),U,2)) G ARSETQ
	I $P(PRCASV("ARREC"),U)=-1 S X="0^"_$P(PRCASV("ARREC"),U,2)_" - "_$$ETXT^IBEFUNC($P(PRCASV("ARREC"),U,2)) G ARSETQ
	S X=PRCASV("ARREC")_U_$P(PRCASV("ARBIL"),"-",2)
ARSETQ	K PRCASV
	Q X
	;
CHK()	;other checks
	N X S X=1 I $G(^DPT(+$G(IBDFN),0))="" S X="0^Patient information lacking."
	Q X
	;
TEABD(TRN,IBDT)	;
	S IBDT=+$G(IBDT),^TMP("IBEABD",$J,+TRN,+IBDT)=""
	Q
TERR(TRN,IFN,ER)	;
	N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
	S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
	Q
TBILL(TRN,IFN)	;
	I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
	S ^TMP("IBILL",$J,TRN,IFN)=""
	Q

IBCD3
IBCD3	;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - CREATE BILL ENTRY)  ; 9/5/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
	N IBI,IBX,IBY,I,X,IBAC K IBDR S IBAC=1
	S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IB(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1) I $D(IB(I))=1 S $P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IB(I)
	F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
	S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1
	S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK ; set cross-references
	;
RX	; file rx refills, add default CPT and Dx if defined
	I $D(IB(362.4))>2 D  G END
	. S IBRX=0 F  S IBRX=$O(IB(362.4,IBRX)) Q:'IBRX  S IBY=0 F  S IBY=$O(IB(362.4,IBRX,IBY)) Q:'IBY  D
	.. S IBX=IB(362.4,IBRX,IBY) Q:IBX=""
	.. S DIC="^IBA(362.4,",DIC(0)="L",X=$P(IBX,U,1) K DD,DO D FILE^DICN K DA,DINUM,DO,DD
	.. I Y>0 S DIE=DIC,DA=+Y,DR=".02////"_IBIFN_";.03////"_$P(IBX,U,4)_";.04////"_$P(IBX,U,2)_";.05////"_+IBRX_";.06////"_$P(IBX,U,3)_";.07////"_$P(IBX,U,5)_";.08////"_$P(IBX,U,6) D ^DIE K DIE,DIC,DA,DR
	. ;
	. D DEFAULT^IBCSC5C(IBIFN)
	;
OUTPT	;file outpatient visit dates and find/store outpatient procedures and diagnosis
	I IB(.05)>2 D  G END
	. I $D(IB(43))>2 D
	.. S ^DGCR(399,IBIFN,"OP",0)="^399.043DA^" S IBX=0 F  S IBX=$O(IB(43,IBX)) Q:'IBX  D
	... S DIC="^DGCR(399,"_IBIFN_",""OP"",",DIC(0)="L",DA(1)=IBIFN,(DINUM,X)=IBX K DD,DO D FILE^DICN K DIC,DA,DINUM,DO,DD
	. ;
	. D VST^IBCCPT I $D(^UTILITY($J,"CPT-CNT")) D
	.. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
	.. S IBY=0 F  S IBY=$O(^UTILITY($J,"CPT-CNT",IBY)) Q:'IBY  S IBX=^(IBY) D
	... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBX_";ICPT(" K DD,DO D FILE^DICN
	... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_$P(IBX,U,2)_$S(+$P(IBX,U,4):";5////"_$P(IBX,U,5),1:"") D ^DIE K DIE,DIC,DA,DINUM,DO,DD
	. K DGCNT,V,IBOPV1,IBOPV2,I,DGDIV,I1,DGNOD,DGCPTS,I7,I2,DGCPT,^UTILITY($J,"CPT-CNT")
	. ;
	. D OPTDX^IBCSC4D(DFN,IB(151),IB(152),.IBDX) I +IBDX D  K IBDX
	.. S IBY=0 F  S IBY=$O(IBDX(IBY)) Q:IBY=""  S IBX=IBDX(IBY) D
	... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBX K DD,DO D FILE^DICN
	... I Y>0 S DIE=DIC,DA=+Y,DR=".02////"_IBIFN D ^DIE K DIE,DIC,DA,DINUM,DO,DD
	;
	;store inpatient diagnosis and procedures
INPT	I IB(.05)<3 D  G END
	. I $G(^TMP("IBDX",$J))=IB(.08) D  K ^TMP("IBDX",$J)
	.. S (IBI,IBX)=0 F  S IBX=$O(^TMP("IBDX",$J,IBX)) Q:'IBX  S IBI=IBI+1 D
	... S DIC="^IBA(362.3,",DIC(0)="L",X=+IBX K DD,DO D FILE^DICN
	... I Y>0 S DIE=DIC,DA=+Y,DR=".02////"_IBIFN_";.03////"_IBI D ^DIE K DIE,DIC,DA,DINUM,DO,DD
	. ;
	. D IPRC^IBCD4(+IB(.08),IB(151),IB(152)) I $D(^TMP("IBIPRC",$J)) D  K ^TMP("IBIPRC",$J)
	.. S ^DGCR(399,IBIFN,"CP",0)="^399.0304AVI^"
	.. S IBX=0 F  S IBX=$O(^TMP("IBIPRC",$J,IBX)) Q:'IBX  D
	... S IBY=^TMP("IBIPRC",$J,IBX) F IBI=1:1 S IBZ=$P(IBY,U,IBI) Q:'IBZ  D
	.... S DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="L",DA(1)=IBIFN,X=+IBZ_";ICD0(" K DD,DO D FILE^DICN
	.... I Y>0 S DIE=DIC,DA=+Y,DR="1////"_IBX D ^DIE K DIE,DIC,DA,DINUM,DO,DD
	;
END	S IBX="1^Billing Record #"_$P(^DGCR(399,+IBIFN,0),"^",1)_" established for "_$P($G(^DPT(IBDFN,0)),U,1)
	;
	S IBAUTO=1,DGPTUPDT="" D ^IBCU6 ; auto calculate/store revenue codes
	;
Q	K %,%DT,IBDR,X1,X2,X3,X4,Y,DGDIRA,DGDIRB,DGDIR0,DIR,DGRVRCAL,DIC,DA,DINUM,DGPTUPDT,DGXRF1,IBCHK,IBINDT
	Q
	;
WHERE	;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.17^0^17;.16^0^16;.18^0^18;.19^0^19;.2^0^20;112^M^12;151^U^1;152^U^2;155^U^5;101^M^1;158^U^8;159^U^9;160^U^10;161^U^11;162^U^12;

IBCD4
IBCD4	;ALB/ARH - AUTOMATED BILLER (ADD NEW BILL - GATHER DX AND PROCEDURES)  ; 9/5/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
IDX(PTF,DT1,DT2)	;find all 501 movement Diagnosis' for PTF record, check for billable bedsection and SC treatement
	;results: IBT = number of billable movements within date range
	;         ^TMP("IBDX",$J)= PTF IFN, ^TMP("IBDX",$J,DX)="",IBMSG(X)=" error message "
	;where DX = file 45, fields 45.02: 5-9
	N IBMDT,IBDA,IBI,IBX,IBY,IBZ K IBMSG,IBT,^TMP("IBDX",$J) I '$D(^DGPT(+$G(PTF),"M")) G IDXE
	;get next movement after begin date: each movement entry contains data for the previous date range
	S (DT1,IBX)=+$G(DT1)\1 I +$P($G(^DGPT(+PTF,0)),U,2)\1'=DT1 D  ;use all moves on admit date
	. S IBX=$O(^DGPT(+PTF,"M","AM",IBX-.00001)) S:(IBX\1)=DT1 IBX=IBX+.0001 S DT1=$S(+IBX:+IBX,1:+DT1) ;skip first move on begin date
	;get next movement after end date, use all moves on end date
	S DT2=$S(+$G(DT2):DT2\1-.00001,1:DT),IBX=$O(^DGPT(+PTF,"M","AM",DT2)),DT2=$S('IBX:DT+.99,(IBX\1)=DT2:DT2+.6,1:IBX)
	S ^TMP("IBDX",$J)=+PTF
	S (IBT,IBBS,IBSC,IBDA)=0,IBCNT=1 F  S IBDA=$O(^DGPT(+PTF,"M",IBDA)) Q:'IBDA  D
	. S IBX=$G(^DGPT(+PTF,"M",IBDA,0)) Q:IBX=""  S IBMDT=+$P(IBX,U,10) S:'IBMDT IBMDT=DT I IBMDT<DT1!(IBMDT>DT2) Q
	. S IBT=IBT+1 I $P(IBX,U,18)=1 S IBSC=IBSC+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBMDT)_" movement related to an SC condition.",IBCNT=IBCNT+1 Q
	. I $P($G(^DIC(42.4,+$P(IBX,U,2),0)),U,5)="" S IBBS=IBBS+1,IBMSG(IBCNT)=$$FMTE^XLFDT(IBMDT)_" movement is for a non-billable bedsection.",IBCNT=IBCNT+1 Q
	. S IBZ="" F IBI=5:1:9 S IBY=$P(IBX,U,IBI) I +IBY S ^TMP("IBDX",$J,IBY)=""
	I +IBSC S IBMSG(IBCNT)="PTF record indicates "_+IBSC_" of "_IBT_" movements are for Service Connected Care.",IBCNT=IBCNT+1
	I +IBBS S IBMSG(IBCNT)="PTF record indicates "_+IBBS_" of "_IBT_" movements are for a non-billable bedsection.",IBCNT=IBCNT+1
	S IBT=IBT-IBSC-IBBS I 'IBT S IBMSG(IBCNT)="0 movements are billable."
IDXE	Q
	;
IPRC(PTF,DT1,DT2)	;find 401 and 601 procedures for a PTF record
	;results: ^TMP("IBIPRC",$J,PROC DATE)=PROC1^ ... ^PROC5
	;where PROC DATE = (45.01,45.01,.01) and (45,45.05,.01) and PROC = (45,45.01,8-12) and (45,45.05,4-8)
	N IBX,IBY,IBZ,IBI K ^TMP("IBIPRC",$J) I '$D(^DGPT(+$G(PTF),0)) G IPRCE
	S DT1=$S(+$G(DT1):+DT1,1:0),DT2=$S(+$G(DT2):+DT2,1:9999999),^TMP("IBIPRC",$J)=+PTF
	S IBX=0 F  S IBX=$O(^DGPT(+PTF,"S",IBX)) Q:'IBX  S IBY=$G(^DGPT(+PTF,"S",IBX,0)) I +IBY'<DT1,+IBY'>DT2 D
	. S IBZ="" F IBI=8:1:12 I +$P(IBY,U,IBI) S IBZ=IBZ_+$P(IBY,U,IBI)_U
	. I +IBZ S ^TMP("IBIPRC",$J,+IBY)=$G(^TMP("IBIPRC",$J,+IBY))_IBZ
	S IBX=0 F  S IBX=$O(^DGPT(+PTF,"P",IBX)) Q:'IBX  S IBY=$G(^DGPT(+PTF,"P",IBX,0)) I +IBY'<DT1,+IBY'>DT2 D
	. S IBZ="" F IBI=5:1:9 I +$P(IBY,U,IBI) S IBZ=IBZ_+$P(IBY,U,IBI)_U
	. I +IBZ S ^TMP("IBIPRC",$J,+IBY)=$G(^TMP("IBIPRC",$J,+IBY))_IBZ
IPRCE	Q
	;
RXRF(PIFN,RIFN,IBDT)	; returns data on refill on date for rx (RX # ^ DRUG ^ DAYS SUPPLY ^ REFILL DATE ^ QTY ^ NDC #)
	N X,Y,PLN S X="",PLN=$G(^PSRX(+$G(PIFN),0)) I PLN'="" D
	. S RIFN=$G(RIFN) S:'RIFN RIFN=$O(^PSRX(+$G(PIFN),1,"B",+$G(IBDT),0)) S RLN=$G(^PSRX(+$G(PIFN),1,+RIFN,0)) Q:RLN=""
	. S X=$P(PLN,U,1)_"^"_$P(PLN,U,6)_"^"_$P(PLN,U,8)_"^"_$P(RLN,U,1)_"^"_$P(RLN,U,4)_"^"_$P($G(^PSDRUG(+$P(PLN,U,6),2)),U,4)
	Q X
	;
CHK()	;other checks
	N X S X=1 I $G(^DPT(+$G(IBDFN),0))="" S X="0^Patient information lacking."
	Q X
	;
CHKSYS()	;various checks to determine if bill can be created, returns true if passes   XXXXXX
	;if fails then returns "0^error message"
	;requires nothing
	N X,Y,I S X=1
	I '$P($G(^IBE(350.9,1,1)),U,14) S X="0^MAS SERVICE PARAMETER UNKNOWN" G CHKSYSE
	I +$P($$SITE^VASITE,U,3)<1 S X="0^ACILITY UNDEFINED" G CHKSYSE
	;G:$D(IBB) CHKSYSE
	;I '$D(DUZ(0)) S X="0^FILEMAN ACCESS UNDEFINED" G CHKSYSE
	;I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(399,0,"LAYGO"))  S DLAYGO=399
CHKSYSE	Q X
	;
GVARS(IFN)	;get data on bill IFN
	N I S X=1 I '$G(^DGCR(399,+$G(IFN),0)) S X=0 G GVARSE
	F I=0,"M" S IB(I)=$G(^DGCR(399,+IFN,I))
	S DGINPAR=$P($G(^DIC(36,+IB("M"),0)),U,6,10)
GVARSE	Q X

IBCD5
IBCD5	;ALB/ARH - AUTOMATED BILLER (INPT DT RANGE) ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
	;continuation of IBCD1
INP	;Inpatient Admissions   (IBTRN,IBTYP,IBDFN,IBEVDT)
	;get statement from and to dates based on previous non-final bills or event date and billing cycle, check that range is within admit-discharge, not previously billed, and BC + DD is not greater than current date, PTF status
	;^TMP("IBC1",$J, PATIENT , START DT ^ TO DT , EVENT IFN)= TIMEFRAME
	;
	S IBX=$P($G(^IBT(356,IBTRN,0)),U,5),IBAD=$$AD^IBCU64(IBX),IBDIS=+$P(IBAD,U,2)\1 I 'IBAD!('$P(IBAD,U,4))  D  G INPQ
	. I 'IBAD D TERR(IBTRN,0,"Patient Admission Movement Data not found.")
	. D TERR(IBTRN,0,"Admission movement missing PTF number.")
	;
	S IBX=$G(^DGPT(+$P(IBAD,U,4),0)) I 'IBX D TERR(IBTRN,0,"PTF record for Admission movement was not found.") G INPQ
	I '$P(IBX,U,6)!(+$P(IBPAR7,U,3)>+$P(IBX,U,6)) G INPQ ; check PTF status, PTF record must be at least closed or status entered by site before and auto bill can be created
	;
	; find latest bill dates for record, if a final bill or a non riemb. ins bill exit
	S IBLBDT=$$BILLED^IBCU3($P(IBAD,U,4)) I +IBLBDT,('$P(IBLBDT,U,2)!($P(IBLBDT,U,3)'=8)) D  G INPQ
	. S IBX=$P($G(^DGCR(399,+IBLBDT,0)),U,1)
	. I '$P(IBLBDT,U,2) D TBILL(IBTRN,+IBLBDT),TERR(IBTRN,0,"Event already has a final bill ("_IBX_").")
	. I $P(IBLBDT,U,3)'=8 S IBX=$P($G(^DGCR(399.3,+$P(IBLBDT,U,3),0)),U,1) D TERR(IBTRN,0,"May not be Reimbursable Ins.: A "_IBX_" bill already exists for this event.")
	;
	; begin calculation of bill dates, begin date based on end of last bill, otherwise event date (admission dt)
	S IBSTDT=$P(IBLBDT,U,2)\1,IBTF=3 I +IBSTDT S IBSTDT=$$FMADD^XLFDT(+IBSTDT,1)
	I 'IBSTDT S IBSTDT=IBEVDT\1,IBTF=2
	S $P(IBSTDT,U,2)=$$BCDT^IBCU8(+IBSTDT,IBTYP) ; end date based on pre^defined length of bill cycle
	;
	; force date range to within admit-discharge dates
	S:+IBSTDT<+IBAD $P(IBSTDT,U,1)=+IBAD\1 I +IBDIS,$P(IBSTDT,U,2)>+IBDIS S $P(IBSTDT,U,2)=+IBDIS
	I $P(IBSTDT,U,2)=IBDIS S IBTF=4 I +IBSTDT=(+IBAD\1) S IBTF=1
	;
	S IBX=$$DUPCHKI^IBCU64(+IBSTDT,$P(IBSTDT,U,2),$P(IBAD,U,4),0,0) I +IBX D TEABD(IBTRN,0),TERR(IBTRN,0,$P(IBX,U,2)) G INPQ
	S IBX=$$EABD^IBCU81(IBTYP,$P(IBSTDT,U,2)) I +IBX>DT D TEABD(IBTRN,+IBX) G INPQ
	S ^TMP(IBS,$J,IBDFN,IBSTDT,IBTRN)=IBTF
INPQ	K IBSTDT,IBAD,IBLBDT,IBDIS,IBX,IBTF
	Q
	;
INPT	;
	N PTF S IBADMT=$P(IBTRND,U,5),IBAD=$$AD^IBCU64(IBADMT),IB(.03)=+IBAD,IB(.05)=1
	;check ptf movements for service connected care, see enddis^ibca0
	S IB(.08)=$P(IBAD,U,4),PTF=IB(.08)
	S IB(.04)=1,IBX=$P($G(^DIC(45.7,+$P(IBAD,U,5),0)),U,2) I $P($G(^DIC(42.4,+IBX,0)),U,3)="NH" S IB(.04)=2 ; treating specialty NHCU
	S IBDISDT=$P(IBAD,U,2) ; discharge date
	S IB(151)=+IBSTDT,IB(152)=$P(IBSTDT,U,2)
	S IBIDS(.08)=IB(.08) D SPEC^IBCU4 S IB(161)=$G(IBIDS(161)) K IBIDS ; discharge bedsection
	I +IBDISDT,'IB(161) D TERR(IBTRN,IBIFN,"Non-Billable Discharge Bedsection.")
	S IB(165)=$$LOS^IBCU64(IB(151),IB(152),IB(.06),IBADMT) I IB(165)'>0 D TERR(IBTRN,IBIFN,"No billable Days.")
	S IB(.09)=9 D IDX^IBCD4(+IB(.08),+IB(151),+IB(152)) I $D(IBMSG)>2 D
	. S IBX=0 F  S IBX=$O(IBMSG(IBX)) Q:'IBX  D TERR(IBTRN,IBIFN,IBMSG(IBX))
INPTE	K IBADMT,IBADMTD,IBDISDT,IBLBDT,IBSCM,IBM,IBAD,IBX
	Q
	;
TEABD(TRN,IBDT)	;array contains the list of claims tracking events that need EABD updated, and the new date
	S IBDT=+$G(IBDT),^TMP("IBEABD",$J,TRN,+IBDT)=""
	Q
TERR(TRN,IFN,ER)	;array contains events or bills that need entries created in the comments file, and the comment
	N X S TRN=+$G(TRN),IFN=+$G(IFN),X=+$G(^TMP("IBCE",$J,DT,TRN,IFN))+1
	S ^TMP("IBCE",$J,DT,TRN,IFN,X)=$G(ER),^TMP("IBCE",$J,DT,TRN,IFN)=X
	Q
TBILL(TRN,IFN)	;array contains list of events and bills to be inserted into 356.399
	I '$D(^IBT(356,+$G(TRN),0))!('$D(^DGCR(399,+$G(IFN),0))) Q
	S ^TMP("IBILL",$J,TRN,IFN)=""
	Q

IBCDC
IBCDC	;ALB/ARH - AUTOMATED BILLER (CLEAN-UP) ; 9/5/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	I $D(^TMP("IBEABD",$J)) D SEABD
	I $D(^TMP("IBCE",$J)) D SETCOMM^IBCDE
	I $D(^TMP("IBILL",$J)) D SCTB
	Q
	;
SEABD	;reset EABD on events
	;^TMP("IBEABD",$J,IBTRN,IBDT(=new date))
	I $D(^TMP("IBEABD",$J)) S IBTRN=0 F  S IBTRN=$O(^TMP("IBEABD",$J,IBTRN)) Q:'IBTRN  D
	. S IBEABD=$O(^TMP("IBEABD",$J,IBTRN,"")) D EABD(IBTRN,IBEABD)
	K IBTRN,IBEABD
	Q
	;
EABD(DA,EABD)	; set EABD (356,.17) of claims tracking entry DA to the value in EABD
	N X,Y,DIE,DR,DTOUT Q:'$D(^IBT(356,+$G(DA),0))  I '$G(EABD) S EABD="@"
	S DIE="^IBT(356,",DR=".17////"_EABD D ^DIE
	Q
	;
SCTB	;set Claims Tracking/Bill file (356,.17) entries  (causes .17 set)
	;^TMP("IBILL",$J,IBTRN,IBIFN)
	I $D(^TMP("IBILL",$J)) S IBTRN=0 F  S IBTRN=$O(^TMP("IBILL",$J,IBTRN)) Q:'IBTRN  D
	. S IBIFN=0 F  S IBIFN=$O(^TMP("IBILL",$J,IBTRN,IBIFN)) Q:'IBIFN  D CTB(IBTRN,IBIFN)
	K IBTRN,IBIFN
	Q
	;
CTB(TRN,IFN)	; set Claims Tracking/Bill file (356.399) entries which also sets (356,.17)
	N X,Y,DIE,DR,DTOUT I '$G(TRN)!'$G(IFN) Q
	I '$D(^IBT(356.399,"ACB",TRN,IFN)) S DIC="^IBT(356.399,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=TRN K DD,DO D FILE^DICN
	K X,Y,DIC
	Q
	;
BSTAT(IFN)	; updates certain files/fields based on the status of the bill passed in
	;SHOULD BE CALLED BY ANY ROUTINE THAT CAUSES A BILLS STATUS TO CHANGE TO CANCELED OR PRINTED
	;if bill status is canceled: deletes bill comments (362.1) and deletes the initial bill number from (356,.11)
	;if bill is printed: deletes bills comments (362.1)
	;NOTE THAT ENTRIES IN 356.399 ARE NOT DELETED IF BILL IS CANCELLED, just the initial bill number in 356
	N X,Y,IBI,IBX,IBY,TRN,STAT S IFN=+$G(IFN),STAT=$G(^DGCR(399,IFN,0)),STAT=+$P(STAT,U,13) I STAT<4 G BSTATQ
	I STAT=7 S IBX=$$FBILL(IFN) I +IBX F IBI=1:1 S TRN=$P(IBX,U,IBI) Q:'TRN  D  ;modifiy claims tracking entry
	. I $P($G(^IBT(356,TRN,0)),U,11)=IFN S DIE="^IBT(356,",DA=TRN,DR=".11///@" D ^DIE K DIE,DA,DR ;delete initial bill #
	I STAT>3 S IBX=$$FINDB^IBCDE(IFN) I +IBX F IBI=1:1 S IBY=$P(IBX,U,IBI) Q:'IBY  D
	. S DIK="^IBA(362.1,",DA=+IBY D ^DIK K DIK,DA ; delete comment entries for bill
BSTATQ	Q
	;
COPYB(IFN,IFN1)	;function for copy a bill, adds comment to comment file (362.1) for bill and event
	;and adds an entry to the event/bill file (356.399)  (IFN is old bill, IFN1 new bill)  nothing returned
	N X,Y,IBX1,IBX,IBY,COMM,IBI S IFN=+$G(IFN),IBX=$G(^DGCR(399,IFN,0)) I IBX="" G COPYBE
	S COMM="Copied from bill "_$P(IBX,U,1) S IBX=$$FBILL(IFN) I 'IBX G COPYBE
	F IBI=1:1 S IBY=$P(IBX,U,IBI) Q:'IBY  D CTB(IBY,IFN1) S IBX1=$$COMM1^IBCDE(IBY,IFN1) I +IBX1 D COMM2^IBCDE(IBX1,COMM)
COPYBE	Q
	;
FBILL(IFN)	;returns all events associated with a bill (356.399), string of event IFN's separated by "^"
	N X,Y S X="",IFN=+$G(IFN) I '$D(^DGCR(399,IFN,0)) G FBILLE
	S Y=0 F  S Y=$O(^IBT(356.399,"C",IFN,Y)) Q:'Y  S X=X_+$G(^IBT(356.399,Y,0))_U
FBILLE	Q X

IBCDE
IBCDE	;ALB/ARH - AUTOMATED BILLER ERRORS ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
SETCOMM	;sets errors/comments into file (362.1) based on array passed in
	;^TMP("IBCE",$J,IBDT,IBTRN,IBIFN,x)=error message  (IBTRN OR IBIFN may be 0)
	;if an entry already exists for event/bill its comments are deleted and replaced with what is passed in, if any
	;
	Q:'$D(^TMP("IBCE",$J))
	S IBDT=0 F  S IBDT=$O(^TMP("IBCE",$J,IBDT)) Q:'IBDT  D
	. S IBTRN="" F  S IBTRN=$O(^TMP("IBCE",$J,IBDT,IBTRN)) Q:IBTRN=""  D
	.. S IBIFN="" F  S IBIFN=$O(^TMP("IBCE",$J,IBDT,IBTRN,IBIFN)) Q:IBIFN=""  D
	... S IBDA=$$COMM1(IBTRN,IBIFN) Q:IBDA'>0  D COMM2(IBDA,"",1)
	... S IBX=0 F  S IBX=$O(^TMP("IBCE",$J,IBDT,IBTRN,IBIFN,IBX)) Q:'IBX  D
	.... D COMM2(IBDA,^(IBX))
	K IBDT,IBTRN,IBIFN,IBDA,IBX,X,Y
	Q
	;
COMM1(TRN,IFN)	;returns the comment entry number for event and bill, updates comment date and bill IFN
	;if an entry does not exits one is created,  does not add any comments
	N IBDA,X,Y S IBDA=0,TRN=$G(TRN),IFN=$G(IFN) I '$D(^IBT(356,+TRN,0))!(+IFN&('$D(^DGCR(399,+IFN,0)))) G COMM1E
	S IBDA=$$FIND(TRN,IFN) I 'IBDA D  G:IBDA<0 COMM1E ; create new comment entry
	. S IBDA=$P(^IBA(362.1,0),U,3)+1 F  Q:'$D(^IBA(362.1,IBDA))  S IBDA=IBDA+1
	. S DIC="^IBA(362.1,",X=IBDA,DIC(0)="L",DIC("DR")=".02////"_$S(+TRN:TRN,1:"") K DD,DO D FILE^DICN K DD,DO,DIC S IBDA=+Y,DR=";.05////"_DT
	; edit existing comment entry, add date (DT) and bill number
	S DIE="^IBA(362.1,",DA=IBDA,DR=".03////"_$S(+IFN:IFN,1:"")_$G(DR) D ^DIE K DIE,DA,DR,DIC
COMM1E	Q IBDA
	;
COMM2(IFNC,COMM,DEL)	;adds/deletes comments form a comment file entry, nothing returned
	;if DEL is passed as true any comments existing for the entry are deleted
	;if COMM contains text it is added as a comment to the entry
	N X,Y,IBDA1 S IBDA1=0 I '$D(^IBA(362.1,+$G(IFNC),0)) G COMM2E
	I +$G(DEL),$D(^IBA(362.1,+IFNC,11)) S DIE="^IBA(362.1,",DA=+IFNC,DR="11///@" D ^DIE K DIE,DIC,DR,DA
	I $G(COMM)'="" D  S ^IBA(362.1,+IFNC,11,IBDA1,0)=COMM
	. S IBDA1=+$P($G(^IBA(362.1,+IFNC,11,0)),U,3)+1 F  Q:'$D(^IBA(362.1,+IFNC,11,IBDA1))  S IBDA1=IBDA1+1
	I IBDA1>0 S ^IBA(362.1,+IFNC,11,0)="^^"_IBDA1_"^"_IBDA1_"^"_DT_"^"
COMM2E	Q
	;
FIND(TRN,IFN)	;find an entry in the comments file, returns IFN of comment entry
	;returns comment entry that may not match with bill number if either the bill number passed in or comment entry bill number is null  (a comment entry may be initially created with no bill number)
	;given that a comment entry is found for the event (TRN) then returns comment IFN based on following restrictions, otherwise returns 0
	;1) if an exact match between bill number passed in and comment entry bill number is found (including null) then the IFN of that comment entry is returned
	;2) if not 1) and no bill number passed in then returns the IFN of the last comment entry found, if any
	;3) if not 1) and a bill number is passed in then returns the IFN of thelast comment entry found that does not have an associated bill number, if any
	N X,X1,Y S (X,Y)=0,TRN=+$G(TRN),IFN=+$G(IFN)
	F  S Y=$O(^IBA(362.1,"C",TRN,Y)) Q:'Y  S X1=+$P($G(^IBA(362.1,Y,0)),U,3) S:('X1)!('IFN) X=Y I X1=IFN S X=Y Q
	Q X
	;
FINDB(IFN)	;search for any entries for a particular bill, returns string of comment file entry numbers separated by "^"
	N X,Y S X="",TRN=+$G(TRN),IFN=+$G(IFN)
	S Y=0 F  S Y=$O(^IBA(362.1,"D",IFN,Y)) Q:'Y  S X=Y_"^"_X
	Q X
	;
PRINT	;print error/comments file (362.1), OPTION
	W !!,"Report requires 132 columns."
	S IBDATES=$$FMDATES^IBCU2 I IBDATES="" G PE
	S DHD="AUTOMATED BILLER ERRORS/COMMENTS FOR "_$$FMTE^XLFDT($P(IBDATES,U,1))_" - "_$$FMTE^XLFDT($P(IBDATES,U,2))
	S (FLDS,BY)="[IB AB COMMENTS]",FR=$P(IBDATES,U,1)_",,?,",TO=$P(IBDATES,U,2)_",,?,",L=0,DIC="^IBA(362.1,"
	D EN1^DIP
PE	K X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIOEND,DIC,L,FLDS,BY,DHD,FR,TO,IBDATES
	Q
	;
EDIT	;edit auto bill parameters, OPTION
	S DIE="^IBE(350.9,",DA=1,DR="7.01;7.03" D ^DIE I $D(Y) G EDITQ
E2	W ! S DIC="^IBE(356.6,",DIC(0)="AEQ" D ^DIC G EDITQ:Y<0
	S DIE="^IBE(356.6,",DA=+Y,DR=".04;.05;.06" D ^DIE
	G E2
EDITQ	K DIE,DA,DR,X,Y
	Q
DELDT	;deletes entries from file (362.1) based on date and if they have a bill, OPTION
	S IBDT=$$FMADD^XLFDT(DT,-3),DIR("B")=$$FMTE^XLFDT(IBDT),DIR("?")="Enter a date before "_DIR("B")_"."
	S DIR("?",1)="All entries in the Auto Biller Comments file not associated with a bill entered on or before this date will be deleted."
	S DIR(0)="DOA^2880101:"_IBDT_":EX",DIR("A")="End Date for Delete: "
	D ^DIR K DIR G:'Y DELDTQ S IBDT=+Y
	;
	S IBCE=0 F  S IBCE=$O(^IBA(362.1,IBCE)) Q:'IBCE  S X=$G(^IBA(362.1,IBCE,0)) I $P(X,U,5)'>IBDT,'$P(X,U,3) D
	. S DIK="^IBA(362.1,",DA=IBCE D ^DIK W "."
DELDTQ	K IBCE,DIK,DIC,DA,X,Y
	Q

IBCF
IBCF	;ALB/RLW - task HCFA 1500 ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN1	; call appropriate print routine for the claim form type to be printed
	;S IBFT=+$P($G(^DGCR(399,IBIFN,0)),U,19)
	;I IBFT=2 D ^IBCF2 G END
	;D ^IBCF1
	S IBFT=$$FT^IBCU3(IBIFN),IBFT=$$FTN^IBCU3(IBFT)
	I IBFT["UB-82" D ^IBCF1 G END
	I IBFT["UB-92" D ^IBCF3 G END
	D ^IBCF2 D EN3
END	K IBFT
	Q
	;
EN2	; send to default A/R device
	S ZTDTH=$H,IBIFN=PRCASV("ARREC"),IBPNT=PRCASV("NOTICE")
	D FORM S (IBFORM1,ZTDESC)="FOLLOW-UP AR FORM "_$P($G(^IBE(353,+IBFT,0)),"^")
	D QUEUE
	Q
	;
EN3	;queue an Rx Addendum for a bill, IBIFN must be defined
	Q:'$D(^DGCR(399,+$G(IBIFN),0))  I '$D(^IBA(362.4,"AIFN"_+IBIFN)),'$D(^IBA(362.5,"AIFN"_+IBIFN)) Q
	N IBFT S IBFT=$$FNT^IBCU3("BILL ADDENDUM") Q:'IBFT  S (IBFORM1,ZTDESC)="BILL ADDENDUM FOR "_$P(^DGCR(399,+IBIFN,0),U,1)
	S ZTSAVE("IB*")="",ZTDTH=$H
	S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",2),ZTRTN=$G(^IBE(353,IBFT,1)) Q:(ZTIO="")!(ZTRTN="")
	D ^%ZTLOAD
	Q
	;
EN4	;queue bills, IBIFN must be defined
	S ZTDTH=$H,IBPNT=1 Q:'$D(^DGCR(399,+$G(IBIFN),0))
	D FORM I $P($G(^IBE(353,+IBFT,0)),U,2)="" Q
	S (IBFORM1,ZTDESC)=$P($G(^IBE(353,+IBFT,0)),"^")_" BILL "_$P(^DGCR(399,+IBIFN,0),U,1)
	S ZTSAVE("IB*")="",ZTSAVE("IB*")=""
	S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",2),ZTRTN=$G(^IBE(353,IBFT,1))
	I (ZTIO="")!(ZTRTN="") S IBAR("ERR")="BILL FORM TYPE NOT COMPLETE FOR"_IBFORM1 Q
	D ^%ZTLOAD I '$D(ZTSK) S IBAR("ERR")="QUEUEING OF "_IBFORM1_" FAILED",IBAR("OKAY")=0 W IBAR("ERR") Q
	S IBAR("OKAY")=1
	Q
FORM	;
	;S IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
	S IBFT=$$FT^IBCU3(IBIFN)
	Q
QUEUE	;
	S ZTSAVE("IB*")="",ZTSAVE("IB*")=""
	S ZTIO=$P($G(^IBE(353,IBFT,0)),"^",3),ZTRTN=$G(^IBE(353,IBFT,1))
	I (ZTIO="")!(ZTRTN="") S IBAR("ERR")="BILL FORM TYPE NOT COMPLETE FOR"_IBFORM1 Q
	D ^%ZTLOAD I '$D(ZTSK) S IBAR("ERR")="QUEUEING OF "_IBFORM1_" FAILED",IBAR("OKAY")=0 W IBAR("ERR") Q
	S IBAR("OKAY")=1
	Q
	;
DISP	;print list of all authorized bills
	N IBIFN,IBC,Y S IBIFN=0,IBC=0,Y="" W !
	F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN  S IBX=$G(^DGCR(399,IBIFN,0)) I IBX'="" D  Q:Y="^"
	. W !,$P(IBX,U,1),?10,$E($P($G(^DPT(+$P(IBX,U,2),0)),U,1),1,20),?32,$$DATE^IBCFP(+$P(IBX,U,3)),?42,$S(+$P(IBX,U,5)<3:"INPT",1:"OUTPT")
	. W ?49,$P($G(^DGCR(399.3,+$P(IBX,U,7),0)),U,4),?59,$E($$EXSET^IBEFUNC(+$P(IBX,U,13),399,.13),1,7),?68,$E($$FTN^IBCU3($$FT^IBCU3(IBIFN)),1,11)
	. S IBC=IBC+1 I '(IBC#10) R !,"Press RETURN to continue or '^' to exit: ",Y:DTIME
	Q

IBCF1
IBCF1	;ALB/MJB/AAS - PRINT UB-82 BILL  ;10 JUN 88 14:42
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP
	;
ZIS	Q:'$D(IBAC)  S:'$D(IBPNT) IBPNT=0
	;S DGPGM="ENP^IBCF1",DGVAR="DFN^IBCIFN^IBC^IBEPAR^IBCDPT^IBCU^IBPNT" D ZIS^DGUTQ I POP G Q
	;
DEV	S %ZIS="Q",%ZIS("A")="Output Device: "
	S %ZIS("B")=$P($G(^IBE(353,+$P($G(^DGCR(399,IBIFN,0)),"^",19),0)),"^",2)
	D ^%ZIS G:POP Q
	I $D(IO("Q")) S ZTRTN="ENP^IBCF1",ZTDESC="PRINT BILL",ZTSAVE("IB*")="",ZTSAVE("DG*")="",ZTSAVE("DFN")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G Q
	;
	U IO D ENP
Q	S IBKILL=1 D Q5^IBCVA
	D:'$D(ZTQUEUED) ^%ZISC
	K IBKILL Q
	;
Q1	K DFN,IBIFN Q
ENP	Q:'$D(DFN)  D SET D:$D(IBIFN) ALL^IBCVA0 D EN1^IBCVA0,EN4^IBCVA1,EN5^IBCVA1,^IBCF12
EN2	W @IOF I IB("I1")]"",$P(IB("I1"),U,1)]"",$P($G(^DIC(36,$P(IB("I1"),U,1),0)),U,3)=1 W "##SR"
	W ?24,$S(IBPNT=1:"",IBPNT=0:"*** COPY OF ORIGINAL BILL ***",IBPNT=2:"*** SECOND NOTICE ***",IBPNT=3:"*** THIRD NOTICE ***",1:"")
	;
1	F I=1,2 W !,$S(IBEPAR(2)]"":$P(IBEPAR(2),U,I),1:"")
	W ?24,$P(IB("U1"),U,4),?57,IBBNO,?74,IBBT
2	I IBEPAR(2)]"" W !,$P(IBEPAR(2),U,3) S IBOPST=$P(IBEPAR(2),U,4),IBOPST=$P(^DIC(5,IBOPST,0),"^",2) W ?$X+2,IBOPST,?$X+2,$P(IBEPAR(2),U,5)
3	W !,$S(IBEPAR(2)]"":$P(IBEPAR(2),U,6),1:"")
	S X=$P(IBEPAR(1),"^",6) W ?24,$S($P(IB("U"),U,14)]"":$P(IB("U"),U,14),1:X),?38,$P(IBEPAR(1),U,5),?50,$P(IBEPAR(1),"^",21),?71,$P(IB("U1"),U,5)
4	W !!,VADM(1),?33,$S(IB("M")']"":"",$P(IB("M"),U,10)]"":$P(IB("M"),U,10),1:"")
5	W !!,$E($P(VADM(3),U),4,7)_$E($P(VADM(3),U),2,3),?8,$P(VADM(5),U),?10 S Y=$P(IBDPT(0),U,5) W $S(Y=1:"D",Y=2:"M",Y=4:"W",Y=5:"X",Y=6:"S",1:"U")
	W:$D(IBIP) ?14,$S($P(IBIP,U,2)'="":$E($P(IBIP,U,2),4,7)_$E($P(IBIP,U,2),2,3),1:$E(IBDT,4,7)_$E(IBDT,2,3)),?21,$S($E($P($P(IBIP,U,2),".",2),1,2)'="":$E($P($P(IBIP,U,2),".",2),1,2),1:"99")
	W:$D(IBIP) ?24,$S($P(IBIP,U,5)'="":$P(IBIP,U,5),1:9),?27,$S($P(IBIP,U,4)'="":$P(IBIP,U,4),1:9),?29,$S($P(IBIP,U,3)'="":$P(IBIP,U,3),1:"99")
	I $D(IBIP) W ?32,$S($P(IBIP,U,6)']"":"99",1:$E($P($P(IBIP,U,6),".",2),1,2)) S X=$P(IBIP,U,7) W ?36,$S($D(^DGCR(399.1,+X,0)):$P(^(0),"^",2),1:"")
	I '$D(IBIP) W ?14,$E(IBDT,4,7)_$E(IBDT,2,3),?21,"99"
	W ?40,$E($P(IB("U"),"^"),4,7)_$E($P(IB("U"),"^"),2,3),?48,$E($P(IB("U"),"^",2),4,7)_$E($P(IB("U"),"^",2),2,3),?70,$P(IB("U1"),U,6),!!
6	I $D(IBO(1)) W IBO(1),?3,$E(IBOCD(1),4,7)_$E(IBOCD(1),2,3) I $D(IBO(2)) W ?11,IBO(2),?14,$E(IBOCD(2),4,7)_$E(IBOCD(2),2,3) I $D(IBO(3)) W ?22,IBO(3),?25,$E(IBOCD(3),4,7)_$E(IBOCD(3),2,3)
	I $D(IBO(4)) W ?35,IBO(4),?38,$E(IBOCD(4),4,7)_$E(IBOCD(4),2,3) I $D(IBO(5)) W ?46,IBO(5),?49,$E(IBOCD(5),4,7)_$E(IBOCD(5),2,3)
	D 7^IBCF10 I DGPAG<DGTOTPAG S DGPAG=DGPAG+1 G EN2
	Q
SET	;Set Variables
	D 2^VADPT F I=0,.11,.121,.25,.311,.36 S IBDPT(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
	F I=0,"C","I1","I2","I3","M","M1","S","U","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	F I=0,1,2 S IBEPAR(I)=$G(^IBE(350.9,1,I))
	S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
	S IBU="UNSPECIFIED" Q
	;IBCF1

IBCF10
IBCF10	;ALB/MJB - PRINT UB-82 BILL (CONT.)  ;13 JUN 88 12:39
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP0
	;
	Q
7	W ! I IB("M")]"",$P(IB("M"),"^",4)]"" S IBMA=IB("M"),IBPST=$S($P(IBMA,U,8)']"":"",$D(^DIC(5,+$P(IBMA,U,8),0)):$P(^(0),U,2),1:"")
	I $D(IBMA),IBMA'="" W $P(IBMA,"^",4),! W:$P(IBMA,"^",5)]"" $P(IBMA,"^",5) W:$D(IBCC(1)) ?30,IBCC(1) W:$D(IBCC(2)) ?33,IBCC(2) W:$D(IBCC(3)) ?36,IBCC(3) W:$D(IBCC(4)) ?39,IBCC(4) W:$D(IBCC(5)) ?42,IBCC(5)
	W:$P(IB("U1"),U,7)]"" ?61,$P(IB("U1"),U,7) I $D(IBMA) W:$P(IBMA,"^",6)]"" !,$P(IBMA,"^",6) W:$P(IB("M1"),"^",1)]"" !,$P(IB("M1"),"^",1) W !,$P(IBMA,"^",7),?$X+2,IBPST,?$X+2,$P(IBMA,"^",9)
8	F I=1:1 Q:$Y>15  W !
	D NWREVC
	I DGPAG'=DGTOTPAG W "  (page ",DGPAG," of ",DGTOTPAG,")"
	F I=1:1 Q:$Y>29  W !
	K IB01 D Q1^IBCVA,Q4^IBCVA,EN3^IBCVA0
9	F I=1:1 Q:$Y>39  W !
	;PAYER
	W ! I '$D(^DGCR(399,IBIFN,"AIC")),$P(IB(0),"^",7),$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^")["ESRD" W "MEDICARE ESRD"
	I '$D(^DGCR(399,IBIFN,"AIC")) W ?24,$S($P(IB("U"),U,5)=0:"Y",1:"R"),?27,$S($P(IB("U"),U,6)["N":"N",$P(IB("U"),U,6)["n":"N",$P(IB("U"),U,6)=0:"N",1:"Y") D Q3^IBCVA,EN2^IBCVA0 G 11
	I $D(IBDD) F I=1:1 S IBIN=$O(IBDD(I)) Q:'$D(IBDD(I,0))  S X=$P($G(^DIC(36,($P(IBDD(I,0),U,1)),0)),U,1),M=$P(IB("U"),U,6) W !,$E(X,1,23),?24,$S($P(IB("U"),U,5)=0:"Y",1:"R"),?27,$S(M["N":"N",M["n":"N",M=0:"N",1:"Y")
10	F I=1:1 Q:$Y>44  W !
	;INSURED
	I $D(IBDD) F I=1:1 S IBIN=$O(IBDD(I)) Q:'$D(IBDD(I,0))  W !,$P(IBDD(I,0),U,17),?23,$E(IBISEX(I),1),?26,IBIRN(I),?29,$P(IBDD(I,0),U,2),?46,$E($P(IBDD(I,0),U,15),1,14),?61,$P(IBDD(I,0),U,3)
	D Q3^IBCVA,EN2^IBCVA0
11	I '$D(^DGCR(399,IBIFN,"AIC")),$P(IB(0),"^",7),$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^")["ESRD" X "F I=1:1 Q:$Y>44  W !" W !,VADM(1),?23,$P(VADM(5),"^"),?26,"01",?29,$P(VADM(2),"^")
	F I=1:1 Q:$Y>49  W !
	;EMPLOYMENT INFO
	S IBROI="" I $D(^DGCR(399,IBIFN,"I1")) S IBROI=$P(^("I1"),U,6)
	I IBROI="s" W "S" I $D(^DPT(DFN,.25)) S IBSPEM=^(.25) W " 9",?4,$P(IBSPEM,U),?42,$P(IBSPEM,U,5),?$X+2,$S($P(IBSPEM,U,6)'="":$P(^DIC(5,$P(IBSPEM,U,6),0),U,2),1:""),?$X+2,$P(IBSPEM,U,7) K IBSPEM
	I IBROI="v" W "P" I $D(IBEMPD),IBEMPD]"" W ?2,$S('$D(IBEC):9,IBEC:IBEC,1:9),?4,$P(IBEMPD,U),?42,$P(IBEMPD,U,2),?$X+2,$S($P(IBEMPD,U,7)'="":$P(^DIC(5,$P(IBEMPD,U,7),0),U,2),1:""),?$X+2,$P(IBEMPD,U,8)
	K IBROI
	D Q2^IBCVA,EN4^IBCVA1,EN5^IBCVA1
12	F I=1:1 Q:$Y>52  W !
	;I IB("C")]"" W:$P(IB("C"),U,14)'="" $P(^ICD9($P(IB("C"),U,14),0),U,3) K X2 S X=$P(IB("C"),U,14) D ICW W ?44,X S X2=44 F I=15:1:18 Q:'$D(IBDIN(I))  S X=IBDIN(I) D ICW W ?X2,X
	N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) I $D(IBINDXX)>2 D
	. S I=$O(IBINDXX(0)) Q:'I  W $P($G(^ICD9(+IBINDXX(I),0)),U,3)
	. S X2=37,I=0 F  S I=$O(IBINDXX(I)) Q:'I  S X=IBINDXX(I) D ICW W ?X2,X
	D 13^IBCF11 Q
ICW	S X=$S($D(^ICD9(+X,0)):$P(^(0),"^",1),1:"") S:$D(X2) X2=X2+7 Q
	Q
NWREVC	;print for mult bedsections/rev codes
	F I=0:0 S DGCNT=$O(^UTILITY($J,"IB-RC",DGCNT)) Q:'DGCNT!(DGCNT>(DGPAG*23))  S DGTEXT=^(DGCNT) D NWREVC1
	S DGCNT=DGCNT-1
	Q
NWREVC1	;
	I DGTEXT="" W ! Q
	I $P(DGTEXT,"^",5,99)]"" X $P(DGTEXT,"^",5,99) Q
	I $P(DGTEXT,"^")]"" W !,$P(DGTEXT,"^") Q
	I $P(DGTEXT,"^",4)="C" W ! S:$L($P(DGTEXT,"^",3)) DGTEXT1=$P(DGTEXT,"^",2) W:$L(DGTEXT1) +$E(DGTEXT1,4,5)_"/"_+$E(DGTEXT1,6,7)_"/"_$E(DGTEXT1,2,3) D ADDCOD Q
	I $P(DGTEXT,"^",2),$D(^DGCR(399,IBIFN,"RC",$P(DGTEXT,"^",2),0)) S DGREVC=^(0) D NWREVC2 Q
	Q
NWREVC2	W !,$E($P(^DGCR(399.2,+DGREVC,0),"^",2),1,22),?22,$J($P(DGREVC,"^",2),7,2),?31,$P(^(0),"^"),?35,$J($P(DGREVC,"^",3),3),?39,$J($P(DGREVC,"^",4),9,2)
	Q
ADDCOD	;Additional Procedures Print
	I $P(DGTEXT,"^",3),$D(@(U_$P($P(DGTEXT,"^",3),";",2)_$P($P(DGTEXT,"^",3),";")_",0)")) S IBCPT=@(U_$P($P(DGTEXT,"^",3),";",2)_$P($P(DGTEXT,"^",3),";")_",0)") W ?11,$P(IBCPT,"^")
	Q
	;IBCF10

IBCF11
IBCF11	;ALB/MJB - PRINT UB-82 BILL (CONT.)  ;25 JAN 89 12:54
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP1
	;
	Q
13	;I $D(IBIP),$D(IBPR) W !!,$S($P(IB(0),"^",9)]"":$P(IB(0),"^",9),1:9)
	W !!,$P(IB(0),"^",9)
	;I '$D(IBCPT),'$D(IBICD),'$D(IBHC) G 14
	;G:$D(IBCPT) CPT G:$D(IBICD) ICD G:$D(IBHC) HCFA
CPT	;W !!,"4"
	;S I=0 F Z=1:1 S I=$O(IBCPT(I)) Q:'I  S X=$S($D(IB("C")):$E($P(IB("C"),U,(I+10)),4,7),1:"") S IBCPTN=$P(^ICPT(IBCPT(I),0),"^") W:Z=1 ?3,$P(^(0),"^",2),?43,IBCPTN,?49,X W:Z=2 ?54,IBCPTN,?60,X W:Z=3 ?65,IBCPTN,?71,X
	;G 14
ICD	;W !!,"9"
	;F I=4:1:6 I $D(IBICD(I)) S X=$E($P(IB("C"),U,(I+7)),4,5)_$E($P(IB("C"),U,(I+7)),6,7),Y=$S($D(^ICD0(IBICD(I),0)):^(0),1:"") W:I=4 ?3,$P(^ICD0(IBICD(I),0),U,4),?43,$P(Y,U,1),?49,X W:I=5 ?54,$P(Y,U,1),?60,X W:I=6 ?65,$P(Y,U,1),?71,X
	;G 14
HCFA	;W !!,"5"
	;F I=7:1:9 I $D(IBHC(I)) S X=$E($P(IB("C"),U,(I+4)),4,5)_$E($P(IB("C"),U,(I+4)),6,7) W:I=7 ?3,$P(^ICPT(IBHC(I),0),"^",2),?43,IBHCN(I),?49,X W:I=8 ?54,IBHCN(I),?60,X W:I=9 ?65,IBHCN(I),?71,X
	D PROC
14	F I=1:1 Q:$Y>55  W !
	W ! W:$P(IB("U"),U,13)]"" ?22,$P(IB("U"),U,13) W ?33,$S($P(IB("U1"),U,13)="":"Dept. Veterans Affairs",1:$P(IB("U1"),U,13)),?56,$P(IB("U1"),U,14)
	S IBRATY=$P(^DGCR(399,IBIFN,0),U,7),IBRATY=$P(^DGCR(399.3,IBRATY,0),U,2)
15	W !!,"Patient ID: ",$P(VADM(2),"^"),!,"Bill Type: ",$S(IBRATY]"":IBRATY,1:"UNSPECIFIED")
	I $D(IBEPAR(1)),$P(IBEPAR(1),U,4)'="" W !,$P(IBEPAR(1),U,4)
	I IB("U1")]"",$P(IB("U1"),"^",8)]"" W !,"**",$P(IB("U1"),"^",8),"**"
16	F I=1:1 Q:$Y>61  W !
	I $D(IBEPAR(1)),$P(IBEPAR(1),U,1)'="" W ?46,$P(IBEPAR(1),U,1) W:$P(IBEPAR(1),U,2)'="" !,?46,$P(IBEPAR(1),U,2)
	S IBXDT=$S(IBPNT:DT,$P(IB("S"),U,12)]"":$P(IB("S"),U,12),1:DT) W ?69,$E(IBXDT,4,5)_"-"_$E(IBXDT,6,7)_"-"_$E(IBXDT,2,3)
	W ! S (DIC,DIE)=399,IBYY=$S($P(^DGCR(399,IBIFN,"S"),"^",12)="":"@92",1:"@94"),DA=IBIFN,DR="[IB STATUS]" D ^DIE K DIC,DIE,IBYY
	D BSTAT^IBCDC(IBIFN) ; remove from auto biller list
	K IBXDT,IBMA
	Q
	;
PROC	;  -print first 3-5 procedure codes
	S TAB=43
	S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J!(I>3)  S X=$G(@(U_$P($P(IBPROC(J),"^"),";",2)_+IBPROC(J)_",0)")),Y=$E($P(IBPROC(J),"^",2),4,7) D
	.I I=1 W ?3,$S(IBPROC(J)["ICD":$E($P(X,"^",4),1,30),1:$E($P(X,"^",2),1,30))
	.W ?(TAB+(I-1*11)),$P(X,"^"),?(TAB+6+(I-1*11)),Y
	Q
	;IBCF11

IBCF12
IBCF12	;ALB/AAS - PRINT BILL CONT. ;24 MAY 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP2
	;
	;Build ^Utility array of data to print in Block 20
	;   Print Medicare statment on bottom 4 of 23 lines
	;   Starting from top print the following, starting and finishing on
	;     same page.
	;   Print Revenue codes and subtotal
	;   Print Additional CPT/ICD codes
	;   Print offset and totals
	;   Print Opt visit dates
	;
	;^Utility(...)=free text^pointer to rev or date of additional code^additional code variable pointer^"c" if additional code^executable code
	;             =null ;blank line
%	;
	K ^UTILITY($J) S DGLCNT=0,DGSM=1 D SM^IBCU I 'DGSM D
	.;  -dgsm=1 print medicare statement
	.;  -dgsm=2 print NSC statement
	.;  -dgsm=3 print both statements
	.S DGRNODE=$G(^DGCR(399.3,$P(^DGCR(399,IBIFN,0),"^",7),0))
	.I $P(^DGCR(399,IBIFN,0),"^",11)="i",$P(DGRNODE,"^",8) S DGSM=1
	.I $P(DGRNODE,"^",9) S DGSM=DGSM+2
	.Q
	D ^IBCF14:DGSM
	D REVCOD
	D TOTAL
	D ADDCOD:$O(^DGCR(399,IBIFN,"CP",0))
	D OPVIS:$O(^DGCR(399,IBIFN,"OP",0))
	I DGLCNT<18 D FILL
	S DGCNT=0,DGPAG=1,DGTOTPAG=DGLCNT/23 S:$P(DGTOTPAG,".",2) DGTOTPAG=DGTOTPAG\1+1
	Q
	;
REVCOD	;I $D(IBIP) S X=IBLS_" DAY"_$S(IBLS>1:"S ",1:" ")_$S(IBBS'=IBU:IBBS,1:"INPATIENT CARE") D SET
	I $D(IBIP) S X=IBLS_" DAY"_$S(IBLS>1:"S ",1:" ")_"INPATIENT CARE" D SET
	S X="" D SET
	S DGBS=""
	F I=0:0 S DGBS=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS)) Q:'DGBS  I $D(^DGCR(399.1,DGBS,0)) S X=$P(^DGCR(399.1,DGBS,0),"^") D SET,RCODE
	;
	; -loop thru all REV CODES and print those with no bedsection
	S DGCNT=0,DGDA=0 F I=0:0 S DGDA=$O(^DGCR(399,IBIFN,"RC",DGDA)) Q:'DGDA  I $D(^(DGDA,0)),'$P(^(0),U,5) S X="^"_DGDA D SET
	S X="^^^^W !,""SUBTOTAL"",?39,$S(IB(""U1"")']"""":"""",$P(IB(""U1""),U,1)]"""":$J($P(IB(""U1""),U,1),9,2),1:$J(0,9,2))" D SET
	Q
	;
RCODE	;Find revenue codes sorted by bedsection
	S DGRV=0 F J=0:0 S DGRV=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS,DGRV)) Q:'DGRV  S DGDA=0 F K=0:0 S DGDA=$O(^DGCR(399,IBIFN,"RC","ABS",DGBS,DGRV,DGDA)) Q:'DGDA  S X="^"_DGDA D SET I $P(^DGCR(399,IBIFN,"RC",DGDA,0),"^",6) D
	.S X="          Procedure:    "_$P($G(^ICPT($P(^DGCR(399,IBIFN,"RC",DGDA,0),"^",6),0)),"^")
	.D SET
	Q
ADDCOD	;Find additional codes
	Q:'$D(IBPROC)#2  Q:IBPROC<4
	D RSPACE
	I DGRSPAC<(IBPROC-2) D FILL
	S X="" D SET
	S X="ADDITIONAL PROCEDURE CODES:" D SET
	S J="" F I=1:1 S J=$O(IBPROC(J)) Q:'J  I I>3 S X="^"_$P(IBPROC(J),"^",2)_"^"_$P(IBPROC(J),"^")_"^C" D SET
	Q
	;
TOTAL	;Find offsets and Totals
	D RSPACE
	I DGRSPAC<$S($P(IB("U1"),"^",2):4,1:2) D FILL
	S X="" D SET
	I $P(IB("U1"),"^",2) S X="^^^^W !,""LESS "",$P(IB(""U1""),""^"",3),?39,$J($P(IB(""U1""),""^"",2),9,2)" D SET S X="" D SET
	S X="^^^^W !,""TOTAL"",?31,$S(+$P(IBEPAR(1),""^"",10):""001"",1:""""),?39,$J($P(IB(""U1""),""^"")-$P(IB(""U1""),""^"",2),9,2)" D SET
	Q
	;
OPVIS	;Find outpatient Visit dates
	D RSPACE
	S DGCNT=0 F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S DGCNT=DGCNT+1
	S DGCNT=DGCNT/3 I $P(DGCNT,".",2)]"" S DGCNT=DGCNT\1+1
	I DGRSPAC<(DGCNT+1) D FILL
	S X="" D SET
	S X="OP VISIT DATE(S) BILLED              "
	S IB01=0 F IB02=1:1 S IB01=$O(^DGCR(399,IBIFN,"OP",IB01)) Q:'IB01  S Y=IB01 X ^DD("DD") S X=X_Y_$S($O(^DGCR(399,IBIFN,"OP",IB01)):", ",1:"") I '(IB02#3) D SET S X="                                     "
	I (IB02-1)#3 D SET
	K IB01,IB02
	Q
	;
SET	S DGLCNT=DGLCNT+1
	I DGLCNT<24,DGSM,DGLCNT+$S(DGSM=1:5,DGSM=2:2,1:8)>23 S DGLCNT=24
	G:$D(^UTILITY($J,"IB-RC",DGLCNT)) SET
	S ^UTILITY($J,"IB-RC",DGLCNT)=X Q
	Q
	;
RSPACE	;Find remaining blank lines
	S DGRSPAC=$S(DGLCNT<24:$S(DGSM=1:18,DGSM=2:21,DGSM=3:15,1:23)-DGLCNT,DGLCNT<47:46-DGLCNT,DGLCNT<70:69-DGLCNT,DGLCNT<93:92-DGLCNT,DGLCNT<116:115,1:138)
	Q
FILL	;fill space with blank lines so all will fit on page
	F I=0:0 Q:($S(DGSM=1&(DGLCNT=18):1,DGSM=2&(DGLCNT=21):1,DGSM=3&(DGLCNT=15):1,1:0))!('(DGLCNT#23))  S X="" D SET
	Q

IBCF13
IBCF13	;ALB/AAS - PRINT UB-82 FROM A ; 8/2/90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP3
	;
	;Entry point for AR to print 2nd and 3rd Notice UB-82's
	;Device handling to be done by calling routine
	;Requires input  - PRCASV("ARREC") = internal number of bill
	;                - PRCASV("NOTICE")= number of notice
	;ouputs          - IBAR("ERR")    = error message
	;                - IBAR("OKAY")   = 1 normal finish, 0 not finished
	;
REPRNT	N I,J,DFN ;AR variables that need newing
	K IBAR("ERR")
	S IBAR("OKAY")=0 I '$D(PRCASV("ARREC"))!('$D(PRCASV("NOTICE"))) S IBAR("ERR")="MISSING INPUT VARIABLES" Q
	S IBIFN=PRCASV("ARREC"),IB0=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"") I IB0="" S IBAR("ERR")="BILL NON-EXISTANT" Q
	S DGSTAT=$P(IB0,"^",13) I $S(DGSTAT=3:0,DGSTAT=4:0,1:1) S IBAR("ERR")=$S(DGSTAT=7:"BILL CANCELLED",1:"BILL STATUS INAPPROPRIATE") Q
	; S DFN=$P(IB0,"^",2),IBPNT=PRCASV("NOTICE"),IBAC=4 D ENP^IBCF1
	; replaced above line with following 2 lines 4/28/92 RLW
	;S DFN=$P(IB0,"^",2),IBAC=4 I $P(^DGCR(399,IBIFN,0),"^",19)>1 D EN2^IBCF G REPRNTQ
	S DFN=$P(IB0,"^",2),IBAC=4 I $$FT^IBCU3(IBIFN)>1 D EN2^IBCF G REPRNTQ
	S IBPNT=PRCASV("NOTICE") D ENP^IBCF1
	S IBAR("OKAY")=1
REPRNTQ	K DFN,I,J
	K M,X,X2,Y,Z,VADM,VAERR,DR,DA,D1,DGBS,DGCNT,IB,IBBILL,IBBNO,IBBT,IBC,IBCPT,IBEPAR,IBDPT,IBDT,IBF,IBIP,IBLS,IBO,IBPNT,DGSTAT,IBAC,IBIFN,IB0
	K IBPTF,IBRATY,IBREV,IBREVC,IBST,IBTF,IBU,IBUTL,DGDA,DGLCNT,DGPAG,DGPT,DGRVC,DGRV,DGTOTPAG,DGTEXT,DGTEXT1,IBDI,IBDIN,IBBS,IBCC,IBPT,DGREVC,DGRSPAC,DGSM
	Q
	;
PRINT	;Entry for A/R to create option to print bills.
	S IBVIEW=1 D KILL^IBCMENU,GEN^IBCB,KILL^IBCMENU
	Q

IBCF14
IBCF14	;ALB/AAS - PRINT BILL CONT. (PRINT STATEMENTS) ; 5-FEB-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRP4
	;
%	;Add statements to bottom of first page of UB-82.
	Q:'DGSM
	S DGNUMLIN=$S(DGSM=1:5,DGSM=2:2,DGSM=3:8)
	I DGSM=1!(DGSM=3) D
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="For your information, even though the patient may be otherwise eligible",DGNUMLIN=DGNUMLIN-1
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="for Medicare, no payment may be made under Medicare to any Federal provider",DGNUMLIN=DGNUMLIN-1
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="of medical care or services and may not be used as a reason for non-payment.",DGNUMLIN=DGNUMLIN-1
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="Please make your check payable to the Department of Veterans Affairs and",DGNUMLIN=DGNUMLIN-1
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="send to the address listed above.",DGNUMLIN=DGNUMLIN-1
	.I DGSM=3 S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="",DGNUMLIN=DGNUMLIN-1
	.Q
	I DGSM>1 D
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="The undersigned certifies that treatment rendered is not for a",DGNUMLIN=DGNUMLIN-1
	.S ^UTILITY($J,"IB-RC",24-DGNUMLIN)="service connected disablility.",DGNUMLIN=DGNUMLIN-1
	.Q
	Q

IBCF1TP
IBCF1TP	;ALB/MJB - UB-82 TEST PATTERN PRINT  ;23 SEP 88 13:42
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRTP
	;
ZIS	;
	;***
	;S XRTL=$ZU(0),XRTN="IBCF1TP-1" D T0^%ZOSV ;start rt clock
	;
	S %ZIS="QM" D ^%ZIS G:POP Q
	I $D(IO("Q")) K IO("Q") S ZTRTN="ENP^IBCF1TP",ZTDESC="IB - TEST UB-82 PRINT" D ^%ZTLOAD K ZTSK D HOME^%ZIS G Q
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF1TP" D T1^%ZOSV ;stop rt clock
	;
	D ENP
Q	I $D(ZTQUEUED) S ZTREQ="@"
	K DGPGM,DGVAR,POP
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF1TP" D T1^%ZOSV ;stop rt clock
	Q
ENP	;
	;***
	;S XRTL=$ZU(0),XRTN="IBCF1TP-2" D T0^%ZOSV ;start rt clock
	;
	W @IOF,?24,"*** UB-82 TEST PATTERN ***",!,"AGENT CASHIER",!,"AGENT CASHIER STREET",?24," F. L. 2",?57,"BILL NUMBER",?74,"XXX"
	W !,"CITY STATE  ZIP",!,"PHONE #",?24,"BC/BS #",?38,"FED TAX #",?71,"F. L. 9"
	W !!,"PATIENT NAME",?33,"PATIENT ADDRESS",!!,"PT DOB",?8,"X",?10,"X",?14,"ADM DT",?21,"HR",?25,"X",?28,"X",?30,"AH",?33,"DH",?36,"XX",?40,"FROM",?48,"TO",?70,"F. L. 27",!!
	W "OC",?3,"DATE" W ?11,"OC",?14,"DATE" W ?22,"OC",?25,"DATE",?35,"OC",?38,"DATE",?46,"OC",?49,"DATE"
	W !,"MAILING ADDRESS NAME",!,"STREET ADDRESS 1",?30,"CC",?33,"CC",?36,"CC",?39,"CC",?42,"CC",?61,"F. L. 45"
	W !,"STREET ADDRESS 2",!,"STREET ADDRESS 3"
	W !,"CITY",?$X+2,"STATE",?$X+2,"ZIP"
8	W !!!!,"000 DAYS MEDICAL CARE",!
	F I=1:1:3 W !,"REV CODE ",I,?24,"000.00",?31,"000",?35,"00",?39,"  0000.00"
	W !!,"SUBTOTAL",?39," 00000.00"
	F I=1:1 Q:$Y=30  W !
	W !!,"TOTAL",?39," 00000.00"
	F I=1:1 Q:$Y=40  W !
	F I=1:1:3 W !,"PAYER ",I,?24,"X",?27,"X"
	F I=1:1 Q:$Y=45  W !
	F I=1:1:3 W !,"INSURED NAME ",I,?23,"X",?26,"XX",?29,"POLICY # ",I,?46,"GROUP NAME ",I,?61,"GROUP # ",I
	F I=1:1 Q:$Y=50  W !
	W "X",?2,"X",?4,"EMPLOYER NAME",?42,"CITY  STATE  ZIP"
	F I=1:1 Q:$Y=53  W !
	W "PRINCIPAL DIAGNOSIS",?44,"CODE" F I=51,58,65,72 W ?I,"CODE"
	W !!,"X",?3,"PRINCIPAL PROCEDURE",?44,"CODE",?51,"DATE",?57,"CODE",?63,"DATE",?68,"CODE",?74,"DATE"
	F I=1:1 Q:$Y=56  W !
	W !?22,"TX. AUTH.",?33,"Dept. Veterans Affairs",?56,"F. L. 93"
	W !!,"Patient ID: ","XXXXXXXXX",!,"Bill Type: ","XXXX XXXXXXX",!,"UB-82 TEST PATTERN",!,"**TEST PATTERN**"
16	F I=1:1 Q:$Y=62  W !
	W ?46,"UB-82 SIGNER NAME",!,?46,"UB-82 SIGNER TITLE",?69,"DATE"
	K I
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF1TP" D T1^%ZOSV ;stop rt clock
	Q
	;IBCF1TP

IBCF2
IBCF2	;ALB/ARH - HCFA 1500 19-90 DATA (gather demographics) ; 12-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DEV	; IBIFN required
	S %ZIS="Q",%ZIS("A")="Output Device: "
	S %ZIS("B")=$P($G(^IBE(353,+$P($G(^DGCR(399,IBIFN,0)),"^",19),0)),"^",2)
	D ^%ZIS G:POP Q
	I $D(IO("Q")) S ZTRTN="EN^IBCF2",ZTDESC="PRINT HCFA1500",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G Q
	U IO D EN
Q	I '$D(ZTQUEUED) D ^%ZISC
	Q
	;
EN	;begin gathering data for printing of HCFA 1500
	;IBIFN must be defined
	K IBFLD
	S IB(0)=$G(^DGCR(399,IBIFN,0)) Q:IB(0)=""
	S DFN=+$P(IB(0),U,2) Q:'$D(^DPT(DFN,0))  D ARRAY
	S IBJ=1 S:'$D(IBPNT) IBPNT=0 S IBFLD(0,1)=$S(IBPNT=1:"",IBPNT=0:"*** COPY OF ORIGINAL BILL ***",IBPNT=2:"*** SECOND NOTICE ***",IBPNT=3:"*** THIRD NOTICE ***",1:""),IBJ=IBJ+1
MAIL	F IBI="M","M1" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
	S IBFLD(0,IBJ)=$P(IB("M"),U,4),IBJ=IBJ+1
	F IBI=$P(IB("M"),U,5),$P(IB("M"),U,6),$P(IB("M1"),U,1) I IBI'="" S IBFLD(0,IBJ)=IBI S IBJ=IBJ+1
	S IBFLD(0,IBJ)=$P(IB("M"),U,7)_", "_$$STATE(+$P(IB("M"),U,8))_" "_$P(IB("M"),U,9)
	;
PAT	D DEM^VADPT
	S IBFLD("1A")=$P(VADM(2),U,2) ; ssn
	S IBFLD(2)=VADM(1) ; patient name
	S IBFLD("3D")=$$DATE(+VADM(3)) ; date of birth
	S IBFLD("3X")=$P(VADM(5),U,1) ; sex (m/f)
	S IBFLD("8M")=$S("146"[+VADM(10):"S","25"[+VADM(10):"M",1:"O") ;marital status
	K VADM,VA
	S X=+$P($G(^DPT(DFN,.311)),U,15),IBFLD("8E")=$S(",1,2,4,6,"[X:"E",1:"") ;employed?
	S IBSPE=+$P($G(^DPT(DFN,.25)),U,15),IBSPE=$S(",1,2,4,6,"[IBSPE:"E",1:"") ; spouse employed?
	;
PATADD	D ADD^VADPT
	S IBFLD(5,1)=VAPA(1)_" "_VAPA(2)_" "_VAPA(3) ;patient's street address
	S IBFLD(5,2)=VAPA(4),IBFLD(5,3)=$P(VAPA(11),U,2) ;patient's city, zip
	S IBFLD("5S")=$$STATE(+VAPA(5)) ; patient's state
	S IBFLD("5T")=VAPA(8) ; patients phone number
	K VAPA
	;
NEXT	D ^IBCF21 ; gather remaining data
	;
PRINT	D ^IBCF2P ; print
	;
END	;set print status
	S (DIC,DIE)=399,DA=IBIFN,DR="[IB STATUS]",IBYY=$S($P($G(^DGCR(399,IBIFN,"S")),U,12)="":"@92",1:"@94") D ^DIE K DIC,DIE,IBYY,DA,DR
	D BSTAT^IBCDC(IBIFN) ; remove from AB list
	;
	K DFN,IB,IBI,IBJ,IBX,IBY,IBSPE,IBFLD,IBDXI,X,Y,VAERR
	Q
	;
ARRAY	;
	F IBI=1:1:6 S IBFLD(0,IBI)=""
	F IBI=1:1:16,18:1:21,23:1:26,31:1:33 S IBFLD(IBI)=""
	F IBI=10,16,18 F IBJ="A","B" S IBFLD(IBI_IBJ)=""
	F IBI="10BS","10C","11AX","11B","11C","11D","1A","3D","3X","5S","5T","8E","8M","9A","9BD","9BX","9C","9D" S IBFLD(IBI)=""
	Q
	;
DATE(X)	; returns date in form format
	Q ($E(X,4,5)_" "_$E(X,6,7)_" "_$E(X,2,3))
	;
STATE(X)	; returns 2 letter abbreviation for state pointer
	Q $P($G(^DIC(5,+X,0)),U,2)

IBCF21
IBCF21	;ALB/ARH - HCFA 1500 19-90 DATA (gather insurance, cc) ; 12-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
	; requires IBIFN
INS	F IBI=1,2 S IB("I"_IBI)=$G(^DGCR(399,IBIFN,("I"_IBI)))
	F IBI="I1","I2" I IB(IBI)'="" S IBX=+$P(IB(IBI),U,16),IBY="IBR"_IBI,@IBY=IBX I IBX'=1,IBX'=2 D  S @IBY=IBX ;pt's rel to insured
	. I $P(IB(IBI),U,6)="v" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=1 Q  ;vet is the patient
	. I $P(IB(IBI),U,6)="s" D:'$D(VAEL) ELIG^VADPT I +VAEL(4) S IBX=2 Q  ;vet is pt, so vets spouse is pt's spouse
	. I 'IBX S IBX=9 ; else relationship of insured to patient unknown
	K VAEL
INS1	G INS2:IB("I1")=""!('$D(^DIC(36,+IB("I1"),0)))
	F IBI=$P(IB("I1"),U,2),$P(IB("I1"),U,3) I IBI'="" S IBFLD("1A")=IBI Q  ;policy number
	S IBFLD(4)=$S(IBRI1=1:"SAME",1:$P(IB("I1"),U,17)) ; insureds name
	S IBFLD(6)=$S('$P(IB("I1"),U,16):IBRI1,1:+$P(IB("I1"),U,16)) ; patient relationship to insured
	I IBRI1=1!(IBRI1=2) S IBFLD(7)="SAME" ; insured's address
	;
	I $P(IB("I1"),U,2)'="" S IBFLD(11)=$P(IB("I1"),U,3) ; group number
	I +IBRI1=1,IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;employer
	I +IBRI1=2 D
	. I IBFLD("3X")'="" S X="MFM",IBFLD("11AX")=$E(X,$F(X,IBFLD("3X")))
	. I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("11B")=VAOA(9) K VAOA ;spouses employer
	S IBFLD("11C")=$P(IB("I1"),U,15)
	;
INS2	G COND:IB("I2")=""!('$D(^DIC(36,+IB("I2"),0))) ; secondary insurance
	S IBFLD("11D")=1
	S IBFLD(9)=$P(IB("I2"),U,17) I IBFLD(9)'="",IBFLD(9)=$P(IB("I1"),U,17) S IBFLD(9)="SAME" ;secondary insureds nam
	F IBI=$P(IB("I2"),U,2),$P(IB("I2"),U,3) I IBI'="" S IBFLD("9A")=IBI Q  ;policy number
	I +IBRI2=1 D
	. S IBFLD("9BD")=IBFLD("3D"),IBFLD("9BX")=IBFLD("3X")
	. I IBFLD("8E")="E" S VAOA("A")=5 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;employer
	I +IBRI2=2 D
	. I IBFLD("3X")'="" S X="MFM",IBFLD("9BX")=$E(X,$F(X,IBFLD("3X")))
	. I IBSPE="E" S VAOA("A")=6 D OAD^VADPT S IBFLD("9C")=VAOA(9) K VAOA ;spouses employer
	I IBFLD("9A")=$P(IB("I2"),U,3) S IBFLD("9D")=$P(IB("I2"),U,15) ;group name
	I IBFLD("9D")="" S IBFLD("9D")=$P($G(^DIC(36,+IB("I2"),0)),U) ;company name
	;
COND	;condition related to employment, auto accident (place), other accident
	S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CC",IBI)) Q:'IBI  I $G(^(IBI,0))="02" S IBFLD("10A")=1
	S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"OC",IBI)) Q:'IBI  S X=$G(^(IBI,0)) I +X D
	. S Y=$G(^DGCR(399.1,+X,0)) Q:Y=""
	. I $P(Y,U,9)=1 S IBFLD("10A")=1
	. I $P(Y,U,9)=2 S IBFLD("10B")=1 S X=$$STATE^IBCF2($P(X,U,3)) I X'="" S IBFLD("10BS")=X
	. I $P(Y,U,9)=3 S IBFLD("10C")=1
	. I $P(Y,U,1)="ONSET OF SYMPTOMS/ILLNESS" S IBFLD(15)=$$DATE^IBCF22($P(X,U,2)) ; see DATES+1^IBCF22
	;
	K IBRI1,IBRI2
	D ^IBCF22
	Q

IBCF22
IBCF22	;ALB/ARH - HCFA 1500 19-90 DATA (gather other data) ; 12-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; requires DFN, IBIFN, IB(0)
	F IBI="C","U","U1","UF2" S IB(IBI)=$G(^DGCR(399,IBIFN,IBI))
	S IBFLD(12)="PUBLIC LAW 99-272/SECTION 1729 TITLE 38"
	S IBFLD(13)="PUBLIC LAW 99-272"
DATES	S IBFLD(14)=$$DATE($P(IB(0),U,3))
	I $G(IBFLD(15))="",IBIFN'=$P(IB(0),U,17) S IBFLD(15)=$$DATE($P($G(^DGCR(399,+$P(IB(0),U,17),0)),U,3))
	S IBFLD("16A")=$$DATE($P(IB("U"),U,16)),IBFLD("16B")=$$DATE($P(IB("U"),U,17))
	I $P(IB(0),U,5)<3 S IBFLD("18A")=$$DATE($P(IB("U"),U,1)),IBFLD("18B")=$$DATE($P(IB("U"),U,2))
	I $P(IB(0),U,5)>2 S VAINDT=$P(IB(0),U,3) D INP^VADPT I +VAIN(1) D
	. S IBFLD("18A")=$$DATE(VAIN(7)),IBFLD("18B")=$$DATE(+$G(^DGPM(+$P($G(^DGPM(+VAIN(1),0)),U,17),0)))
	K VAINDT,VAIN
	S IBFLD(19)="THE UNDERSIGNED CERTIFIES TREATMENT IS NOT FOR A SERVICE-CONNECTED CONDITION"
	S IBFLD(20)=0
	;
DX	;S X=14 F IBI="21A","21B","21C","21D" S IBFLD(IBI)=$P($G(^ICD9(+$P(IB("C"),U,X),0)),U,1),X=X+1
	;F IBI="21A","21B","21C","21D" S IBFLD(IBI)=""
	;N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) S X=0,Y="21@" D
	;. F  S X=$O(IBINDXX(X)) Q:'X  S Y=$O(IBFLD(Y)) Q:+Y'=21  S IBFLD(Y)=$P($G(^ICD9(+IBINDXX(X),0)),U,1)
	;
	N IBDXX,IBPOX D SET^IBCSC4D(IBIFN,.IBDXX,.IBPOX) S X=0
	F IBI=1:1:4 S IBFLD(21,IBI)="" I IBI'>$P(IBPOX,U,2) S X=$O(IBPOX(X)),IBFLD(21,IBI)=$P($G(^ICD9(+IBPOX(X),0)),U,1),IBDXI(+$G(IBDXX(+IBPOX(X))))=IBI
	;
	S IBFLD(23)=$P(IB("U"),U,13)
	;
	D ^IBCF23 ; block 24
	;
	S IBFLD(25)=$P($G(^IBE(350.9,1,1)),U,5)
	S IBFLD(26)=$P(IB(0),U,1)
	S IBFLD(28)=+IB("U1")-$P(IB("U1"),U,2)
LAST3	S IBFLD(31)=$G(^DGCR(399,IBIFN,"UF2")) ;assuming there are 3 available lines
	S X=+$P($G(^IBE(350.9,1,0)),U,2),Y=$G(^DIC(4,X,0)),IBI=1 I Y'="" D
	. S IBFLD(32,1)=$P(Y,U,1),IBX=+$P(Y,U,2),Y=$G(^DIC(4,X,1))
	. S IBFLD(32,2)=$P(Y,U,1) I $P(Y,U,2)'="" S IBFLD(32,2)=IBFLD(32,2)_", "_$P(Y,U,2)
	. S IBFLD(32,3)=$P(Y,U,3),IBFLD(32,"X")=$$STATE^IBCF2(IBX)_" "_$P(Y,U,4)
	S X=$G(^IBE(350.9,1,2))
	S IBFLD(33,1)=$P(X,U,1),IBFLD(33,2)=$P(X,U,2)
	S IBFLD(33,3)=$P(X,U,3),IBFLD(33,"X")=$$STATE^IBCF2($P(X,U,4))_" "_$P(X,U,5)
	S IBFLD(33,4)=$P(X,U,6)
	;
END	Q
	;
DATE(X)	; returns date in form format
	Q ($E(X,4,5)_" "_$E(X,6,7)_" "_$E(X,2,3))

IBCF23
IBCF23	;ALB/ARH - HCFA 1500 19-90 DATA (block 24, procs and charges) ; 12-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;requires IBIFN, IB(0), IB("U"), IB("U1"), returns number of line items in IBFLD(24)
	;revenue code array: IBRC("procedure^division^basc flag^bedsection^rev code^charge")=units
	;procedure array:    IBCP(initial print order)=proc date^procedure^division^basc flag^dx^pos^tos^charge
	;procedure array:    IBSS("procedure^division^basc flag^dx^pos^tos^charge")=lowest inital print order
	;print order array:  IBPO(final print order, initial print order)=""
	;print array:        IBFLD(24,I)=begin date^end date^pos^tos^procedure^dx^charge^units
	;
	;NOTE (12/1/93): DX IS NO LONGER STORED IN THE 7TH PIESE SO IT IS NO LONGER BEING USED FOR MATCHING THE CPT'S
	;THIS MEANS THAT CPT'S MAY BE MATCHED EVEN IF THEY HAVE DIFFERENT ASSOC DX'S
	;ALSO NOTICE THAT THE DX IN THE IBFLD ARRAY SHOULD REFER TO THE EXTERNAL REFERENCE NUMBER OF EACH OF THE 4 POSSIBLE ASSOCIATED DX'S
	;AND THAT THE DX IN THE OTHER ARRAYS STILL APPLIES TO THE OLD DX, PIECE 7
	;
	;THIS PROCEDURE NEEDS TO BE UPDATED FOR THE NEW CPT DX'S
	;
RVC	; charges array
	S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"RC",IBI)) Q:'IBI  S IBLN=^(IBI,0) D
	. S IBSS="" F IBJ=6,7,0,5,1,2 S IBSS=IBSS_$P(IBLN,U,IBJ)_"^"
	. I +IBSS S $P(IBSS,U,1)=$P(IBSS,U,1)_";ICPT("
	. S $P(IBSS,U,3)=$S($D(^DGCR(399,"ASC1",+$P(IBLN,U,6),IBIFN,IBI)):1,1:"")
	. S IBRC(IBSS)=+$G(IBRC(IBSS))+$P(IBLN,U,3)
	;
PRC	; procedure array with charge
	S IBI=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:'IBI  S IBLN=^(IBI,0) D
	. S IBPO=$S(+$P(IBLN,U,4):$P(IBLN,U,4),1:IBI+1000),IBSS="",IBPDT=$P(IBLN,U,2)
	. F IBJ=1,6,5,0,9,10 S IBSS=IBSS_$P(IBLN,U,IBJ)_"^"
	. F IBJ=11:1:14 I $P(IBLN,U,IBJ) S $P(IBSS,U,4)=$P(IBSS,U,4)_$S(IBJ>11:",",1:"")_$G(IBDXI(+$P(IBLN,U,IBJ)))
	. ; charges - find charge associated with procedure, if any (match proc,div,basc)
	. S IBCHARG="",IBRV=$P(IBSS,U,1,3),IBRV=$O(IBRC(IBRV)) I $P(IBRV,U,1,3)=$P(IBSS,U,1,3),+IBRC(IBRV) D
	.. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
	. ; charges - find charge associated with procedure, if any (match proc,div)
	. I IBCHARG="" S IBRV=$P(IBSS,U,1,2),IBRV=$O(IBRC(IBRV)) I $P(IBRV,U,1,2)=$P(IBSS,U,1,2),+IBRC(IBRV) D
	.. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
	. S IBSS=IBSS_IBCHARG,IBCP(IBPO)=IBPDT_"^"_IBSS
	;
	;add charges not associated with a procedure to the first procedure with no charge
	S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  I '$P(IBCP(IBPO),U,8) D
	. S IBCHARG="",IBRV="^^^" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I +IBRC(IBRV) D  Q
	.. S IBCHARG=$P(IBRV,U,6),IBRC(IBRV)=IBRC(IBRV)-1
	. I +IBCHARG S IBCP(IBPO)=IBCP(IBPO)_IBCHARG
	;
PO	; print order array w/ charges
	;attempt to combine multiple entries of same procedure onto on line item via print order
	;if both have print orders defined then they should not be combined onto one line item
	;"procedure^division^basc^dx^pos^tos^charge" must all be the same
	S IBPO="" F  S IBPO=$O(IBCP(IBPO)) Q:'IBPO  S IBCP=IBCP(IBPO),IBSS=$P(IBCP,U,2,999) D
	. I $D(IBSS(IBSS)) S IBPO1=IBSS(IBSS),IBPO(IBPO1,IBPO)="" Q
	. S IBSS(IBSS)=IBPO,IBPO(IBPO,IBPO)=""
	;
PRTARR	;print procedure array
	S IBREV="",IBPO1="",IBI=0 F  S IBPO1=$O(IBPO(IBPO1)) Q:IBPO1=""  D  I +IBUNIT D B24
	. S IBDT1=99999999,IBDT2="",IBUNIT=0,IBCHARG=""
	. S IBPO2="" F  S IBPO2=$O(IBPO(IBPO1,IBPO2)) Q:IBPO2=""  D
	.. S IBUNIT=IBUNIT+1,IBSS=IBCP(IBPO2),IBCHARG=$P(IBSS,U,8)
	.. S:IBDT1>+IBSS IBDT1=+IBSS S:IBDT2<+IBSS IBDT2=+IBSS
	;
	;print any charges not associated with a procedure (ie. not enough procedures or procedure not in "CP" level)
	S IBRV="" F  S IBRV=$O(IBRC(IBRV)) Q:IBRV=""  I +IBRC(IBRV) D  D B24
	. S IBUNIT=+IBRC(IBRV),IBCHARG=$P(IBRV,U,6),IBDT1=+IB("U"),IBDT2=$P(IB("U"),U,2),IBREV=$P(IBRV,U,5)
	. S IBSS="^"_$S(+IBRV:$P(IBRV,U,1),1:$P($G(^DGCR(399.1,+$P(IBRV,U,4),0)),U,1))
	;
OFFSET	;add offset to print array
	I +$P(IB("U1"),U,2) D
	. S IBI=IBI+1,$P(IBFLD(24,IBI),U,5)=$P(IB("U1"),U,3),$P(IBFLD(24,IBI),U,7)=-$P(IB("U1"),U,2)
	;
	S IBFLD(24)=IBI ;count of line items
	;
	K IBRC,IBCP,IBSS,IBPO,IBPO1,IBPO2,IBLN,IBRV,IBPDT,IBDT1,IBDT2,IBCHARG,IBUNIT,IBREV
	Q
	;
B24	; set individual enrties in print array, external format
	N IBX S IBI=IBI+1,IBPROC=$P(IBSS,U,2)
	S IBFLD(24,IBI)=$$DATE(IBDT1)_"^"_$S(IBDT1=IBDT2:"",1:$$DATE(IBDT2))
	S IBFLD(24,IBI)=IBFLD(24,IBI)_"^"_$P($G(^IBE(353.1,+$P(IBSS,U,6),0)),U,1)_"^"_$P($G(^IBE(353.2,+$P(IBSS,U,7),0)),U,1)
	I +IBPROC S IBFLD(24,IBI)=IBFLD(24,IBI)_"^"_$P($G(@("^"_$P(IBPROC,";",2)_+IBPROC_",0)")),U,1)
	I 'IBPROC S IBFLD(24,IBI)=IBFLD(24,IBI)_"^"_IBPROC,IBFLD(24,IBI_"A")=$P($G(^DGCR(399.2,+IBREV,0)),U,2)
	S IBFLD(24,IBI)=IBFLD(24,IBI)_"^"_$P(IBSS,U,5)_"^"_IBCHARG_"^"_IBUNIT
	K IBPROC
	Q
DATE(X)	;
	Q ($E(X,4,5)_" "_$E(X,6,7)_" "_$E(X,2,3))

IBCF2P
IBCF2P	;ALB/ARH - PRINT HCFA 1500 12-90 FORM ; 17-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PRINT	; print the form, IBFLD required
	S IBADDM=+$P($G(^IBE(350.9,1,1)),U,27),IBPAGE=1
	F IBI=1:1:6 W !,?IBADDM,$G(IBFLD(0,IBI)) ;mailing address
LINE8	; insured's ID number
	W !!,?49,$E(IBFLD("1A"),1,28)
LINE10	; patient name, DOB, sex; insured's name ("SAME" if patient)
	W !!,$E(IBFLD(2),1,28),?30,IBFLD("3D"),?($S(IBFLD("3X")="M":41,1:46)),"X",?49,$E(IBFLD(4),1,28)
LINE12	; patient's address (street); pt. rel to ins.; insured's address
	W !!,$E(IBFLD(5,1),1,28),?($S(+IBFLD(6)=1:32,+IBFLD(6)=2:37,+IBFLD(6)=3:41,1:46)),"X",?49,$E(IBFLD(7),1,28)
LINE14	; patient addr city, state code, marital status; insured's city, state
	W !!,$E(IBFLD(5,2),1,24),?25,IBFLD("5S"),?($S(IBFLD("8M")="S":34,IBFLD("8M")="M":40,1:46)),"X",?49
LINE16	; patient zip code, phone; patient employment status; insured's zip code, phone
	W !!,$E(IBFLD(5,3),1,12),?14,IBFLD("5T"),?34,$S(IBFLD("8E")="E":"X",1:""),?49
LINE18	; other insured's name; insured's policy group
	W !!,$E(IBFLD(9),1,28),?49,$E(IBFLD(11),1,28)
LINE20	; other insured's policy number; condition related to employment?; insured's date of birth and sex
	W !!,$E(IBFLD("9A"),1,28),?($S(+IBFLD("10A"):34,1:40)),"X",?53,?($S(IBFLD("11AX")="M":67,1:74)),"X"
LINE22	; other insured's DOB, sex; patient auto accident & place; insured's employer
	W !!,?1,IBFLD("9BD") I IBFLD("9BX")'="" W ?($S(IBFLD("9BX")="M":17,1:23)),"X"
	W ?($S(+IBFLD("10B"):34,1:40)),"X",?44,IBFLD("10BS"),?49,$E(IBFLD("11B"),1,28)
LINE24	; other insured's employer; patient other accident; insured's insurance plan name
	W !!,$E(IBFLD("9C"),1,28),?($S(+IBFLD("10C"):34,1:40)),"X",?49,$E(IBFLD("11C"),1,28)
LINE26	; other insured's plan name; is there another benefit plan
	W !!,$E(IBFLD("9D"),1,28),?($S(+IBFLD("11D"):51,1:56)),"X"
LINE29	; patient's signature; insured's signature (use PL 99-272, SECTION 1729 TITLE 38)
	W !!!,?3,IBFLD(12),?56,IBFLD(13)
LINE32	; date of current illness; date of similar illness; dates unable to work
	W !!!,?1,IBFLD(14),?36,IBFLD(15),?53,IBFLD("16A"),?67,IBFLD("16B")
LINE34	; name of referring physician; ID# referring physician; hospitalization dates related to services
	W !!,?53,IBFLD("18A"),?67,IBFLD("18B")
LINE35	; "not for SC" note line 1
	W !,?14,$E(IBFLD(19),1,31)_"-"
LINE36	; "not for SC" note line 2; outside lab (now defaults to "no" in IBEHCFA)
	W !,$E(IBFLD(19),32,999),?56,"X"
LINE38	; diagnosis codes 1 and 2; field 22 (MEDICAID) left blank
	W !!,?2,IBFLD(21,1),?30,IBFLD(21,3)
LINE40	; diagnosis codes 3 and 4; field 23 (prior authorization #)
	W !!,?2,IBFLD(21,2),?30,IBFLD(21,4),?49,IBFLD(23)
LINE44	;lines 44,46,48,50,52,54 all the same
	W !! S IBI=+$P(IBFLD(24),U,2) F IBJ=1:1:6 S IBI=IBI+1 D
	. W ! I $D(IBFLD(24,IBI_"A")) W ?25,$E(IBFLD(24,IBI_"A"),1,15)
	. W ! I $D(IBFLD(24,IBI)) D  S IBFLD(24)=IBFLD(24)-1
	.. W $P(IBFLD(24,IBI),U,1),?9,$P(IBFLD(24,IBI),U,2),?18,$P(IBFLD(24,IBI),U,3),?21,$P(IBFLD(24,IBI),U,4),?25,$E($P(IBFLD(24,IBI),U,5),1,15)
	.. W ?41,$P(IBFLD(24,IBI),U,6),?47,$S(+$P(IBFLD(24,IBI),U,7):$J($P(IBFLD(24,IBI),U,7),10,2),1:""),?57,$J($P(IBFLD(24,IBI),U,8),3)
	S $P(IBFLD(24),U,2)=IBI
	;
LINE56	W !!,IBFLD(25),?18,"X",?22,IBFLD(26),?49,$J(IBFLD(28),10,2),?62,?71
LINE58	W !!,?22,$E(IBFLD(32,1),1,26),?49,$E(IBFLD(33,1),1,26)
LINE69	W !,$E(IBFLD(31),1,21),?22,$E(IBFLD(32,2),1,26),?49,$E(IBFLD(33,2),1,26)
LINE60	W !,$E(IBFLD(31),22,42)
	W ?22,$E(IBFLD(32,3),1,(26-2-$L(IBFLD(32,"X")))) I IBFLD(32,"X")'="" W ", "_IBFLD(32,"X")
	W ?49,$E(IBFLD(33,3),1,(26-2-$L(IBFLD(33,"X")))) I IBFLD(33,"X")'="" W ", "_IBFLD(33,"X")
LINE61	W !,$E(IBFLD(31),43,63),?49,IBFLD(33,4)
	;
	I +IBFLD(24)>0 D  G LINE38 ;multiple pages
	. S IBPAGE=IBPAGE+1
	. W @IOF,!,?IBADDM,"PAGE ",IBPAGE,!!!!!!!,?49,IBFLD("1A"),!!,IBFLD(2)
	. F IBI=1:1:26 W !
	;
END	K IBADDM,IBPAGE
	Q

IBCF2TP
IBCF2TP	;ALB/RLW - HCFA 1500 12-90 TEST PATTERN ; 1-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
ZIS	;
	;***
	;S XRTL=$ZU(0),XRTN="IBCF2TP-1" D T0^%ZOSV ;start rt clock
	;S DGPGM="PRINT^IBCF2TP",DGVAR="^" D ZIS^DGUTQ I POP G Q
	S %ZIS="QM" D ^%ZIS G:POP Q
	I $D(IO("Q")) K IO("Q") S ZTRTN="PRINT^IBCF2TP",ZTDESC="IB - TEST HCFA 1500 PRINT" D ^%ZTLOAD K ZTSK D HOME^%ZIS G Q
	U IO
	D PRINT
Q	K DGPGM,DGVAR,POP,IBADDM
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
	Q
PRINT	; print test pattern
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBCF2TP-2" D T0^%ZOSV ;start rt clock
	N X S X=""
CARRIER	;
	S IBADDM=+$P($G(^IBE(350.9,1,1)),U,27)
	W:$E(IOST,1,2)["C-" @IOF W !,?IBADDM,"INSURANCE CARRIER NAME",!?IBADDM,"CARRIER ADDRESS LINE 1",!?IBADDM,"CARRIER ADDRESS LINE 2",!?IBADDM,"CARRIER ADDRESS LINE 3",!?IBADDM,"CARRIER CITY, STATE ZIP"
LINE2	W !!!,X,?7,X,?14,X,?23,X,?30,X,?38,X,?44,X,?49,"SUBSCRIBER ID#"
LINE4	W !!,"PATIENT NAME",?30,"MM DD YY",?41,X,?46,X,?49,"INSURED'S NAME"
LINE6	W !!,"PATIENT ADDRESS STREET",?32,X,?37,X,?41,X,?46,X,?49,"INSURED'S ADDRESS STREET"
LINE8	W !!,"PATIENT ADDRESS CITY",?25,"ST",?34,X,?40,X,?46,X,?49,"INSURED'S ADDRESS CITY",?73,"ST"
LINE10	W !!,"PT ZIP CODE",?14,"999",?18,"999-9999",?34,X,?40,X,?46,X,?49,"INS ZIP CODE",?64,"999",?68,"999-9999"
LINE12	W !!,"OTHER INSURED'S NAME",?49,"INSURED'S POLICY GROUP"
LINE14	W !!,"OTHER POLICY NUMBER",?34,X,?40,X,?53,"MM DD YY",?67,X,?74,X
LINE16	W !!,?1,"MM DD YY",?17,X,?23,X,?34,X,?40,X,?44,"ST",?49,"INSURED'S EMPLOYER"
LINE18	W !!,"OTHER'S EMPLOYER",?34,X,?40,X,?49,"INSURANCE PLAN NAME"
LINE20	W !!,"OTHER'S INSURANCE PLAN",?51,X,?56,X
LINE26	W !!!!!!,?1,"MM DD YY",?36,"MM DD YY",?53,"MM DD YY",?67,"MM DD YY"
LINE28	W !!,"REFERRING PHYSICIAN",?27,"PHYSICIAN ID",?53,"MM DD YY",?67,"MM DD YY"
LINE30	W !!,?51,X,?56,X,?61,"9999.99",?70,"9999.99"
LINE32	W !!,?2,"X99.99",?29,"X99.99"
LINE34	W !!,?2,"X99.99",?29,"X99.99"
LINE38	;lines 38,40,42,44,46,48 all the same
	W !!
	F I=1:1:6 W !!,"MM DD YY",?9,"MM DD YY",?18,X,?21,X,?25,"CPT",?32,"MODIF",?41,"DIAG",?50,"9999.99",?58,X,?61,X,?64,X,?67,X,?70,"BC/BS#"
LINE50	W !!,"FEDERAL TAX ID",?18,X,?22,"PAT ACCT#",?37,X,?42,X,?52,"9999.99",?62,"9999.99",?71,"9999.99"
LINE52	W !!,?22,"VAMC",?49,"AGENT CASHIER  (999) 999-9999"
LINE53	W !,?22,"STREET ADDRESS",?49,"STREET ADDRESS"
LINE54	W !,?22,"CITY, STATE ZIP",?49,"CITY, STATE ZIP"
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCF2TP" D T1^%ZOSV ;stop rt clock
	Q

IBCF3
IBCF3	;ALB/BGA -UB92 HCFA-1450 (gather demographics) ;19-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DEV	S %ZIS="Q",%ZIS("A")="Output Device: "
	S %ZIS("B")=$$BILLDEV^IBCU3(IBIFN)
	D ^%ZIS G:POP Q
	I $D(IO("Q")) S ZTRTN="EN^IBCF3",ZTDESC="PRINT UB-92 BILL",ZTSAVE("IB*")="",ZTSAVE("DG*")="",ZTSAVE("DFN")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G Q
	;
	U IO D EN
Q	Q:$D(ZTQUEUED)  D ^%ZISC
	Q
	;
EN	;This routine gathers demographics for printing of ub92 form.
	;Fields 1 to 21 are addressed in this routine.
	;IBIFN must be defined...
	;
	I '$D(IBPNT) S IBPNT=0
	;find out if a manual signature is required
	S IBCBILL=$G(^DGCR(399,+IBIFN,0)) I IBCBILL="" G EXIT
	S IBCU2=$G(^DGCR(399,+IBIFN,"U2")),IBCUF3=$G(^DGCR(399,+IBIFN,"UF3")),IBCUF31=$G(^DGCR(399,+IBIFN,"UF31"))
	S IBCINSN=$P($G(^DGCR(399,+IBIFN,"I1")),U,1),IBCINSN=$G(^DIC(36,+IBCINSN,0))
	S IBFL(0,"SR")=$S(+$P(IBCINSN,U,3):"##SR",1:"") ; signature required on bill
	S IBFL(0,"ZBILL")=$S(IBPNT=1:"",IBPNT=0:"*** COPY OF ORIGINAL BILL ***",IBPNT=2:"*** SECOND NOTICE ***",IBPNT=3:"*** THIRD NOTICE ***",1:"")
	;provider name and address ^ibe(350.9,1,2)
	S IBX=$G(^IBE(350.9,1,2)) ;site parameter file
	S IBFL(1,"PROVL1")=$P(IBX,U,1),IBFL(1,"PROVL2")=$P(IBX,U,2)
	S IBFL(1,"PROVL3")=$P(IBX,U,3)_"  "_$P($G(^DIC(5,+$P(IBX,U,4),0)),U,2)_"  "_$P(IBX,U,5)
	S IBX=$P(IBCUF3,U,1) D SPLIT^IBCF3(2,2,30,IBX) ; set IBFL(2)
	S IBFL(1,"PROVL4")=$P(IBX,U,6)
	S IBFL(3)=$P(IBCBILL,U,1)
	S IBFL(4)=$P(IBCBILL,U,4)_$P(IBCBILL,U,5)_$P(IBCBILL,U,6)
	;site paramater
	S IBSIGN=$G(^IBE(350.9,1,1)) S IBFL(5)=$P(IBSIGN,U,5)
	;statement covers period
	S IBSTATE=$G(^DGCR(399,+IBIFN,"U"))
	S IBFL(6,"FROM")=$$DATE(+$P(IBSTATE,U,1)),IBFL(6,"TO")=$$DATE(+$P(IBSTATE,U,2))
	S IBFL(7)=$P(IBCU2,U,2),IBFL(8)=$P(IBCU2,U,3)
	S IBX=$P(IBCUF3,U,2) D SPLIT^IBCF3(11,2,13,IBX) ; set IBFL(11)
PAT	; patient info
	S IBPMAILN=$G(^DGCR(399,+IBIFN,"M")),IBFL(13)=$P(IBPMAILN,U,10)
	S DFN=$P(IBCBILL,U,2) D DEM^VADPT
	S IBFL(12)=VADM(1),IBFL(15)=$P(VADM(5),U,1) I IBFL(15)="" S IBFL(15)="U"
	S IBFL(14)="00000000" I +VADM(3) S IBFL(14)=$$DATEY(+VADM(3))
	;S IBFL(14)=$S(+VADM(3):VADM(3),1:"0000000"),IBFL(14)=$$DATE(IBFL(14))
	S IBX=$P(VADM(10),U,1)
	S IBFL(16)=$S(IBX=1:"D",IBX=2:"M",IBX=4:"W",IBX=5:"X",IBX=6:"S",1:"U")
	;test to see if inpatient with a ptf#, if so use admission date
	S IBX=0,IBINPAT=0 I $P(IBCBILL,U,5)<3 S IBINPAT=1 I +$P(IBCBILL,U,8) S IBX=$P($G(^DGPT(+$P(IBCBILL,U,8),0)),U,2)
	I 'IBX S IBX=$P(IBCBILL,U,3)
	S IBFL(17)=$$DATE(IBX),IBFL(18)=$$TIME(IBX) I IBFL(18)="" S IBFL(18)=99
	;
19	; type of admission if outpatient leave blank
	S IBFL(19)="" I +IBINPAT S IBFL(19)=$S(+$P(IBSTATE,U,8):$P(IBSTATE,U,8),1:9)
20	; source of admission
	S IBFL(20)="" I +IBINPAT S IBFL(20)=$S(+$P(IBSTATE,U,9):$P(IBSTATE,U,9),1:9)
21	; discharge hour: ptf (45,70), non-va (399,16), 99
	S IBFL(21)="" I +IBINPAT S IBX=+$G(^DGPT(+$P(IBCBILL,U,8),70)) D
	. S IBX=$S(+IBX:IBX,1:$P(IBCBILL,U,16)) S IBFL(21)=$$TIME(IBX) I IBFL(21)="" S IBFL(21)=99
22	;
	D ^IBCF31,^IBCF32,^IBCF33,^IBCF3P
	;
	;set print status
	S (DIC,DIE)=399,DA=IBIFN,DR="[IB STATUS]",IBYY=$S($P($G(^DGCR(399,IBIFN,"S")),U,12)="":"@92",1:"@94") D ^DIE K DIC,DIE,IBYY,DA,DR
	D BSTAT^IBCDC(IBIFN) ; remove from AB list
	;
EXIT	K IBX,IBY,IBI,IBJ,IBCINSN,IBCBILL,IBSIGN,IBINPAT,IBSTATE,IBPMAILN,IBMAIL1,IBCBCOMM,IBCU2,IBCUF3,IBCUF31,IB,VADM,VA,VAERR,IBPG,IBFL,X,Y,^TMP($J)
	Q
	;
DATE(X)	;returns date in form format MMDDYY
	Q ($E($G(X),4,5)_""_$E($G(X),6,7)_""_$E($G(X),2,3))
	;
DATEY(X)	;returns date in form format MMDDYYYY
	Q ($E($G(X),4,5)_""_$E($G(X),6,7)_""_(17+$E($G(X)))_$E($G(X),2,3))
	;
TIME(X)	;returns hour stripped from date
	S X=$E($P($G(X),".",2),1,2) I X'="" S:+X=24 X="00" S X=X_"0"
	Q $E(X,1,2)
	;
SPLIT(FLN,LINES,MAXCH,STRG)	;sets the string broken into lines that will fit in the FL block, in IBFL(FLN,x)=strg  where max x=LINES
	;specific for the multi line fields where the first line is 1 char less that the rest and is optional
	;assumes that the first line length is 1-MAXCH and should be used last
	N CNT,IBX S CNT=1,STRG=$G(STRG),MAXCH=+$G(MAXCH) I '$G(FLN)!'$G(LINES) W "NO SOMETHING" Q
	I $L(STRG)'>((LINES-1)*MAXCH) S IBFL(FLN,CNT)="",CNT=CNT+1 Q:CNT>LINES
	I CNT=1 S IBFL(FLN,CNT)=$E(STRG,1,(MAXCH-1)),STRG=$E(STRG,MAXCH,999),CNT=CNT+1 Q:CNT>LINES
	F  S IBFL(FLN,CNT)=$E(STRG,1,MAXCH),STRG=$E(STRG,(MAXCH+1),999),CNT=CNT+1 Q:CNT>LINES
	Q

IBCF31
IBCF31	;ALB/BGA -UB92 HCFA-1450 (GATHER CODES) ;25-AUG-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	;This routine requires prior execution of ibcf3.
	;Field locators 22-62 are addressed here.
	;
	S IBMAIL1=$G(^DGCR(399,IBIFN,"M1"))
	;
22	;patient status
	S IBFL(22)="" I +IBINPAT,$P(IBSTATE,U,12) S IBX=$P(IBSTATE,U,12),IBFL(22)=$P($G(^DGCR(399.1,+IBX,0)),U,2)
23	;medical/health record number ssn
	S IBFL(23)=$P(VADM(2),U,2)
	;
24	;condition codes 24-30
	S (IBI,IBX)=0 F  S IBX=$O(^DGCR(399,+IBIFN,"CC",IBX)) Q:'IBX  S IBI=IBI+1,IBFL(24,IBI)=$G(^(IBX,0))
	S IBFL(24)=IBI_U_0
	;
	S IBX=$P(IBCUF3,U,3) D SPLIT^IBCF3(31,2,6,IBX) ; set IBFL(31)
32	;occurrence codes/span and dates 32-35 ,36
	;S (IBI,IBJ,IBX)=0 F  S IBX=$O(^DGCR(399,+IBIFN,"OC",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBC=$G(^DGCR(399.1,+IBY,0)) I IBC'="" D
	;. I +$P(IBC,U,10) S IBJ=IBJ+1,IBFL(36,IBJ)=$P(IBC,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))_U_$$DATE^IBCF3($P(IBY,U,4)) Q
	;. S IBI=IBI+1,IBFL(32,IBI)=$P(IBC,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))
	;S IBFL(32)=IBI_U_0
	;S IBFL(36)=IBJ_U_0
	D 32^IBCF32
	;
	F IBI=1:1:3 S IBFL(37,IBI)=$P(IBCUF3,U,(IBI+3))
	;
38	;responsible party with name and address
	S IBFL(38,1)="" I $P(IBPMAILN,U,4)'="" S IBJ=0 D
	. F IBI=4,5,6 I $P(IBPMAILN,U,IBI)'="" S IBJ=IBJ+1,IBFL(38,IBJ)=$P(IBPMAILN,U,IBI)
	. S IBX=$P(IBMAIL1,U,1) I IBX'="" S IBJ=IBJ+1,IBFL(38,IBJ)=IBX
	. S IBJ=IBJ+1,IBFL(38,IBJ)=$P(IBPMAILN,U,7)_", "_$$STATE(+$P(IBPMAILN,U,8))_" "_$P(IBPMAILN,U,9)
	;
	;
39	;value codes, 39-41
	S (IBI,IBX)=0 F  S IBX=$O(^DGCR(399,+IBIFN,"CV",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBJ=$G(^DGCR(399.1,+IBY,0)) I IBJ'="" D
	. S IBI=IBI+1,IBFL(39,IBI)=$P(IBJ,U,2)_U_$P(IBY,U,2)_U_$P(IBJ,U,12)
	S IBFL(39)=IBI_U_0
	;
	S IBFL(57)=$P(IBCUF31,U,1),IBX=$P(IBCUF3,U,7) D SPLIT^IBCF3(56,5,14,IBX) ; set IBFL(56)
	;
50	F IBI=1:1:3 F IBJ=50:1:53,58:1:66 S IBFL(IBJ,IBI)=""
	I '$D(^DGCR(399,IBIFN,"AIC")) D  G 80
	. S IBFL(52,1)=$S(+$P(IBSTATE,U,5):"R",1:"Y") ; roi
	. S IBFL(53,1)=$S("Nn0"[$P(IBSTATE,U,6)&($P(IBSTATE,U,6)'=""):"N",1:"Y") ; assign of benifits
	. S IBFL(63,1)=$P(IBSTATE,U,13) ; tx auth cd
	. I $P($G(^DGCR(399.3,+$P(IBCBILL,U,7),0)),U,1)["MEDICARE ESRD" D
	.. S IBFL(50,1)="MEDICARE ESRD",IBFL(51,1)=$P(IBSIGN,U,21),IBFL(58,1)=VADM(1),IBFL(59,1)="01",IBFL(60,1)=$P(VADM(2),U,2)
	;
INS	;list the primary, secondary .. insurance companies
	F IBI=1:1:3 S IBJ="I"_IBI S IBX=$G(^DGCR(399,IBIFN,IBJ)) I IBX'="" D
	. S IBY=$G(^DIC(36,+IBX,0)) Q:IBY=""
	. S IBFL(50,IBI)=$P(IBY,U,1) ; payer
	. S IBFL(51,IBI)=$P(IBMAIL1,U,(IBI+1)) ; provider #
	. S IBFL(52,IBI)=$S(+$P(IBSTATE,U,5):"R",1:"Y") ; roi
	. S IBFL(53,IBI)=$S("Nn0"[$P(IBSTATE,U,6)&($P(IBSTATE,U,6)'=""):"N",1:"Y") ;assign of benifits
	. S IBFL(58,IBI)=$P(IBX,U,17) ; insureds name
	. S IBFL(59,IBI)=$P(IBX,U,16) ; pt. rel to insured
	. S IBFL(60,IBI)=$P(IBX,U,2) ; insurance number
	. S IBFL(61,IBI)=$P(IBX,U,15) ; insurance group name
	. S IBFL(62,IBI)=$P(IBX,U,3) ; insurance group number
	. S IBFL(63,IBI)="" I IBI=1 S IBFL(63,IBI)=$P(IBSTATE,U,13) ; tx auth cd
	. I $P(IBX,U,6)="v" D
	.. D OPD^VADPT S IBFL(64,IBI)=$P(VAPD(7),U,1) K VAPD I ",3,9,"[+IBFL(64,IBI) Q
	.. S VAOA("A")=5 D OAD^VADPT S IBFL(65,IBI)=VAOA(9),IBFL(66,IBI)=VAOA(4)_$S(VAOA(4)'="":", ",1:"")_$P(VAOA(5),U,2) K VAOA
	. I $P(IBX,U,6)="s" D
	.. S IBFL(64,IBI)=$P($G(^DPT(DFN,.25)),U,15) I ",3,9,"[+IBFL(64,IBI) Q
	.. S VAOA("A")=6 D OAD^VADPT S IBFL(65,IBI)=VAOA(9),IBFL(66,IBI)=VAOA(4)_$S(VAOA(4)'="":", ",1:"")_$P(VAOA(5),U,2)
	. I 'IBFL(64,IBI) S IBFL(64,IBI)=9
	;
80	;procedure field locator 80
	K IBPROC
	D PROC^IBCVA1 S IBFL(80)=IBPROC_U_0_U_1,IBFL(80,1)=""
	I +IBPROC S (IBI,IBX)=0 F  S IBX=$O(IBPROC(IBX)) Q:'IBX  D
	. I $P(IBPROC(IBX),U,1)["ICPT(" S IBY=$P($G(^ICPT(+IBPROC(IBX),0)),U,1)
	. I $P(IBPROC(IBX),U,1)["ICD0(" S IBY=$P($G(^ICD0(+IBPROC(IBX),0)),U,1)
	. S IBI=IBI+1,IBFL(80,IBI)=IBY_U_$$DATE^IBCF3($P(IBPROC(IBX),U,2))
	K IBPROC,I,J
	;
	Q
	;
STATE(X)	;returns 2 letter abbreviation for state pointer
	Q $P($G(^DIC(5,+$G(X),0)),U,2)

IBCF32
IBCF32	;ALB/BGA -UB92 HCFA-1450 (GATHER CODES) ;25-AUG-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;This routine requires prior execution of ibcf3.
	;
DX	;set diagnosis codes fl 67-71
	;S IBX=$G(^DGCR(399,+IBIFN,"C"))
	;S IBI=0 F IBJ=14:1:18 S IBFL(67+IBI)=$P($G(^ICD9(+$P(IBX,U,IBJ),0)),U,1),IBI=IBI+1
	N IBINDXX D SET^IBCSC4D(IBIFN,"",.IBINDXX) S IBX=0 F IBI=1:1:9 S IBX=$O(IBINDXX(IBX)) Q:'IBX  S IBFL(66+IBI)=$P($G(^ICD9(+IBINDXX(IBX),0)),U,1)
	;
76	;fl 76 admitting diagnoses (if a ICD dx not entered get old position of dx)
	S IBCBCOMM=$G(^DGCR(399,+IBIFN,"U1"))
	S IBX=$P(IBCU2,U,1) S IBFL(76)=$S(+IBX:$P($G(^ICD9(+IBX,0)),U,1),1:$P(IBCBCOMM,U,5))
	;
78	S IBX=$P(IBCUF31,U,2) D SPLIT^IBCF3(78,2,3,IBX) ; set IBFL(78)
	;fl 79 procedure coding method used
	S IBFL(79)=$P(IBCBILL,U,9)
	;
82	;fl 82 attending physician id
	S IBFL(82)=$P(IBCBCOMM,U,13) I IBFL(82)="" S IBFL(82)="Dept. Veterans Affairs"
	;fl 83 other physician id
	S IBFL(83)=$P(IBCBCOMM,U,14)
	;
84	;fl 84 remarks
	S IBFL(84,1)="Patient ID: "_$P(VADM(2),U,2)
	S IBX=$P($G(^DGCR(399.3,+$P(IBCBILL,U,7),0)),U,2),IBFL(84,2)="Bill Type: "_$S(IBX'="":IBX,1:"UNSPECIFIED")
	S IBFL(84,3)=$P(IBSIGN,U,4)
	S IBFL(84,4)=$P(IBCBCOMM,U,8)
	;
85	;fl 85 provider representative signature
	S IBFL(85,1)=$P(IBSIGN,U,1)
	S IBFL(85,2)=$P(IBSIGN,U,2)
86	;date bill submitted
	S IBX=$P($G(^DGCR(399,+IBIFN,"S")),U,12),IBX=$S(+IBPNT:DT,+IBX:IBX,1:DT),IBFL(86)=$$DATE^IBCF3(IBX)
	Q
	;
	;ADD OCCURRENCE CODES AND SPANS TO PRINT ARRAY
32	;the following rules apply to printing occurrence codes and spans (see FL 32 in UB-92 manual)
	; - fields 32a-36a are used before 32b-36b
	; - if all occ code fields are used (32a&b -35a&b) then occ span fields (36a&b) may be used, w/ thru date blank
	; - if all occ span fields are used (36a&b) the occ code fields 34&35 may be used, w/ code&from date in 34 and code&thru date in 35
	;
	K IB32,IB36 S IBPG=0 F IBI=32:1:36 K IBFL(IBI) S IBFL(IBI)="0^0"
	;occurrence codes/span and dates 32-35 ,36
	;load codes and spans into two flat arrays
	S (IBI,IBJ,IBX)=0
	F  S IBX=$O(^DGCR(399,+IBIFN,"OC",IBX)) Q:'IBX  S IBY=$G(^(IBX,0)),IBZ=$G(^DGCR(399.1,+IBY,0)) I +$P(IBZ,U,4) D
	. I +$P(IBZ,U,10) S IBJ=IBJ+1,IB36(IBJ)=$P(IBZ,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))_U_$$DATE^IBCF3($P(IBY,U,4)) Q
	. S IBI=IBI+1,IB32(IBI)=$P(IBZ,U,2)_U_$$DATE^IBCF3($P(IBY,U,2))
	S IB32=IBI_U_0
	S IB36=IBJ_U_0
	;
OCC	;
	S IBPG=IBPG+1
	S IBI=+$G(IBFL(32))+1
	I +IB32 F IBI=IBI,IBI+1 S IBX=+$P(IB32,U,2) F IBJ=32,33,34,35 S IBX=$O(IB32(IBX)) Q:'IBX  D
	. S IBFL(IBJ,IBI)=IB32(IBX)
	. S $P(IBFL(IBJ),U,1)=+IBFL(IBJ)+1
	. S $P(IB32,U,1)=+IB32-1
	. S $P(IB32,U,2)=IBX
	;
	S IBX=+$P(IB36,U,2),IBI=+$G(IBFL(36))+1
	I +IB36 F IBI=IBI,IBI+1 S IBX=$O(IB36(IBX)) Q:'IBX  D
	. S IBFL(36,IBI)=IB36(IBX)
	. S $P(IBFL(36),U,1)=+IBFL(36)+1
	. S $P(IB36,U,1)=+IB36-1
	. S $P(IB36,U,2)=IBX
	;
	I 'IB32,'IB36 G END
	;
	; add occ codes from 32 to occ span in 36
	S IBI=+IBFL(36)+1 F IBI=IBI,IBI+1 I +IB32>0,'IB36,IBI'>(IBPG*2) D
	. S IBX=+$P(IB32,U,2),IBX=$O(IB32(IBX)) Q:'IBX
	. S IBY=IB32(IBX)
	. S $P(IB32,U,1)=+IB32-1
	. S $P(IB32,U,2)=IBX
	. S IBX=+IBFL(36)+1
	. S IBFL(36,IBX)=IBY
	. S $P(IBFL(36),U,1)=+IBFL(36)+1
	;
	; add occ span from 36 to occ code in 32
	S IBI=+IBFL(34)+1 F IBI=IBI,IBI+1 I +IB36>0,'IB32,IBI'>(IBPG*2) D
	. S IBX=+$P(IB36,U,2),IBX=$O(IB36(IBX)) Q:'IBX
	. S IBY=IB36(IBX)
	. S $P(IB36,U,1)=+IB36-1
	. S $P(IB36,U,2)=IBX
	. S IBX=+IBFL(34)+1
	. S IBFL(34,IBX)=$P(IBY,U,1)_U_$P(IBY,U,2),$P(IBFL(34),U,1)=+IBFL(34)+1
	. S IBFL(35,IBX)=$P(IBY,U,1)_U_$P(IBY,U,3),$P(IBFL(35),U,1)=IBX
	G OCC
END	;
	K IB32,IB36
	Q

IBCF33
IBCF33	;ALB/ARH - UB92 HCFA-1450 (GATHER CODES) ;25-AUG-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;IBIFN,IBCBILL,IBSTATE required
	;find statements to print on bill
	S IBSTATE=$G(^DGCR(399,IBIFN,"U")),IBCBCOMM=$G(^DGCR(399,IBIFN,"U1")),IBCBILL=$G(^DGCR(399,IBIFN,0)),IBINPAT=$S($P(IBCBILL,U,5)<3:1,1:0),IBCOL=1
	D ^IBCF34
	;
	I +IBINPAT S IBX=$P(IBSTATE,U,15),IBZ=+IBX_" DAY"_$S(IBX'=1:"S",1:"")_" INPATIENT CARE",IBCOL=0 D SET2 S IBZ="" D SET2
	;
RV	;rev codes sorted by bedsection
	S IBBSN=0,IBBS=0 F  S IBBS=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS)) Q:'IBBS  D
	. S IBRV=0 F  S IBRV=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS,IBRV)) Q:'IBRV  D
	.. S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC","ABS",IBBS,IBRV,IBDA)) Q:'IBDA  D
	... S IBX=$G(^DGCR(399,IBIFN,"RC",IBDA,0))
	... S IBZ=$P($G(^DGCR(399.1,+$P(IBX,U,5),0)),U,1) D:IBZ'=IBBSN SET2 S IBBSN=IBZ,IBZ=IBX D SET1
	;
	;loop through all rev codes, print those with no bedsection
	S IBDA=0 F  S IBDA=$O(^DGCR(399,IBIFN,"RC",IBDA)) Q:'IBDA  S IBZ=$G(^(IBDA,0)) I +IBZ,$P(IBZ,U,5)="" D SET1
	;
TOTAL	;add totals (print subtotal only if there is an offset)
	I +$P(IBCBCOMM,U,2) S IBZ="",$P(IBZ,U,2)="SUBTOTAL",$P(IBZ,U,4)=+$P(IBCBCOMM,U,1) D SET1
	;
	S IBX=$S(+$P(IBCBCOMM,U,2):4,1:2) D SPACE
	S IBZ="" D SET2
	I +$P(IBCBCOMM,U,2) S IBZ="",$P(IBZ,U,2)="LESS "_$P(IBCBCOMM,U,3),$P(IBZ,U,4)=+$P(IBCBCOMM,U,2) D SET1 S IBZ="" D SET2
	;
	S IBZ="001",$P(IBZ,U,2)="TOTAL",$P(IBZ,U,4)=+($P(IBCBCOMM,U,1)-$P(IBCBCOMM,U,2)) D SET1
	;
	;
CPT	;add addtional procedures
	G:$G(IBFL(80))'>6 OPV S IBX=+IBFL(80)-4 D SPACE
	S IBZ="" D SET2
	S IBZ="ADDITIONAL PROCEDURE CODES:" D SET2
	S IBI=6 F  S IBI=$O(IBFL(80,IBI)) Q:'IBI  D
	. S IBX=$P(IBFL(80,IBI),U,2),IBZ=$E(IBX,1,2)_"/"_$E(IBX,3,4)_"/"_$E(IBX,5,6)_$J(" ",5)_$P(IBFL(80,IBI),U,1) D SET2
	;
OPV	;add outpatient visit dates
	G:'$O(^DGCR(399,IBIFN,"OP",0)) CONT S (IBX,IBY)=0 F  S IBX=$O(^DGCR(399,IBIFN,"OP",IBX)) Q:'IBX  S IBY=IBY+1
	S IBX=IBY/3,IBX=IBX\1+$S(+$P(IBX,".",2):1,1:0)+1 D SPACE
	S IBZ="" D SET2 S IBZ="OP VISIT DATE(S) BILLED:"_$J(" ",34-24)
	S (IBI,IBJ)=0 F  S IBI=$O(^DGCR(399,IBIFN,"OP",IBI)) Q:'IBI  D
	. S Y=$G(^DGCR(399,IBIFN,"OP",IBI,0)) X ^DD("DD") S IBZ=IBZ_Y_$S($O(^DGCR(399,IBIFN,"OP",IBI)):", ",1:"")
	. S IBJ=IBJ+1 I IBJ>2 D SET2 S IBZ=$J(" ",34),IBJ=0
	I $L(IBZ)>34 D SET2
	;
CONT	D ^IBCF331
	;
	; fill in rest of page
END	D FILLPG S $P(^TMP($J,"IBC-RC"),U,2)=0 S IBPG=+$G(^TMP($J,"IBC-RC")),IBX=IBPG/23,IBPG=IBX\1+$S(+$P(IBX,".",2):1,1:0)
	K IBZ,IBBSN,IBBS,IBRV,IBDA,IBLN,IBCOL,IBLINES,IBARRAY
	Q
	;
SPACE	;checks to see if X can fit on page, if not starts new page
	Q:'IBX  N IBLN,IBY S IBLN=+$G(^TMP($J,"IBC-RC")),IBY=IBLN#23 S:IBY=0&(IBLN'=0) IBY=23 I IBX>(IBLINES-IBY) D FILLPG
	Q
	;
FILLPG	;fill reast of page with blank lines
	N IBI,IBLN,IBZ S IBFILL=1 F IBI=1:1:23 S IBLN=+$G(^TMP($J,"IBC-RC")) Q:'(IBLN#23)  S IBZ="" D SET2 Q:IBFILL=2
	K IBFILL Q
	;
SET1	; add rev codes to array: rev cd ^ rev cd st abbrev. ^ CPT CODE ^ unit charge ^ units ^ total
	;formats for output into specific column blocks 42-48 
	N IBX,IBY,IBLN D NEXTLN S IBY=""
	;set up rev cd item with approprite output values, non-rev cd entries should already be in external form
	I +IBZ S IBX=$G(^DGCR(399.2,+IBZ,0)) Q:IBX=""  S IBY=$P(IBX,U,1)_U_$P(IBX,U,2)_U_$P($G(^ICPT(+$P(IBZ,U,6),0)),U,1)_U_$P(IBZ,U,2)_U_$P(IBZ,U,3)_U_$P(IBZ,U,4)
	I IBY="" S IBY=$P(IBZ,U,1)_U_$P(IBZ,U,2)_U_U_U_$P(IBZ,U,3)_U_$P(IBZ,U,4)
	S IBLN=+$G(^TMP($J,"IBC-RC"))+1,^TMP($J,"IBC-RC",IBLN)=1_U_IBY,^TMP($J,"IBC-RC")=IBLN I '(IBLN#23) S IBLINES=23
	Q
	;
SET2	;set free text into block 42 array
	N IBLN D NEXTLN S IBCOL=$S('IBCOL:2,1:3)
	S IBLN=+$G(^TMP($J,"IBC-RC"))+1 I IBLN#23=1,$G(IBFILL) S IBFILL=2 Q
	S ^TMP($J,"IBC-RC",IBLN)=IBCOL_U_IBZ,^TMP($J,"IBC-RC")=IBLN I '(IBLN#23) S IBLINES=23
	Q
	;
NEXTLN	;checks counter for next line, resets if necessary,
	;ie. if the line # indicated by the next line # var. has already been used then this increments the next line # var.
	S IBLN=+$G(^TMP($J,"IBC-RC"))+1 I $D(^TMP($J,"IBC-RC",IBLN)) S ^TMP($J,"IBC-RC")=IBLN S:'(IBLN#23) IBLINES=23 G NEXTLN
	Q

IBCF331
IBCF331	;ALB/ARH - UB92 HCFA-1450 (GATHER CODES CONT) ;25-AUG-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
DX	;additional dx codes (ie more than 9 on bill)
	D SET^IBCSC4D(IBIFN,"",.IBARRAY) G:$P(IBARRAY,U,2)'>9 RX
	S IBX=+$P(IBARRAY,U,2)-9+2 D SPACE
	S IBZ="" D SET2
	S IBZ="ADDITIONAL DIAGNOSIS CODES:" D SET2
	S (IBI,IBX)=0 F IBI=1:1 S IBX=$O(IBARRAY(IBX)) Q:IBX=""  I IBI>9 D
	. S IBY=+IBARRAY(IBX),IBY=$G(^ICD9(IBY,0)) Q:IBY=""
	. S IBZ=$P(IBY,U,1)_$J(" ",(10-$L($P(IBY,U,1))))_$P(IBY,U,3) D SET2
	;
RX	;add rx refills
	D SET^IBCSC5A(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) PD
	S IBX=+$P(IBARRAY,U,2)+2 D SPACE
	S IBZ="" D SET2
	S IBZ="PRESCRIPTION REFILLS:" D SET2
	S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  S IBLN=IBARRAY(IBX,IBY) D
	. S IBZ=IBX_$J(" ",(20-$L(IBX)))_$$FMTE^XLFDT(IBY)_"  "_$P($G(^PSDRUG(+$P(IBLN,U,2),0)),U,1) D SET2
	. S IBZ="",IBZ=$S(+$P(IBLN,U,4):"QTY: "_$P(IBLN,U,4)_" ",1:"")_$S(+$P(IBLN,U,3):"for "_$P(IBLN,U,3)_" days supply ",1:"") I IBZ'="" S IBZ=$J(" ",34)_IBZ D SET2
	. S IBZ="",IBZ=$S($P(IBLN,U,5)'="":"NDC #: "_$P(IBLN,U,5),1:"") I IBZ'="" S IBZ=$J(" ",34)_IBZ D SET2
	;
PD	;add prosthetic items
	D SET^IBCSC5B(IBIFN,.IBARRAY) G:'$P(IBARRAY,U,2) END
	S IBX=+$P(IBARRAY,U,2)+2 D SPACE
	S IBZ="" D SET2
	S IBZ="PROSTHETIC ITEMS:" D SET2
	S IBX=0 F  S IBX=$O(IBARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(IBARRAY(IBX,IBY)) Q:'IBY  D
	. S IBZ=$$FMTE^XLFDT(IBX)_"  "_$P($$PIN^IBCSC5B(IBY),U,2) D SET2
	;
END	Q
	;
SET2	D SET2^IBCF33 Q
SPACE	D SPACE^IBCF33 Q

IBCF34
IBCF34	;ALB/BGA -UB92 HCFA-1450 (set text print) ;13-SEPT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EN	;This routine sets the array which will store the message that will
	;be displayed on the front page of the bill.
	;
	N IBSM,IBE,IBX,IBI,IBCNT S (IBCNT,IBSM)=0,IBE=24,IBLINES=23
	S IBX=$G(^DGCR(399.3,+$P(IBCBILL,U,7),0))
	I $P(IBCBILL,U,11)="i",$P(IBX,U,8) S IBSM=1,IBCNT=5
	I $P(IBX,U,9) S IBSM=IBSM+2,IBCNT=IBCNT+2
	Q:'IBSM  S:IBSM=3 IBCNT=IBCNT+1,IBLINES=23-IBCNT
%	;Add statements to bottom of first page of UB-92.
	I IBSM=1!(IBSM=3) D
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^For your information, even though the patient may be otherwise eligible",IBCNT=IBCNT-1
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^for Medicare, no payment may be made under Medicare to any Federal provider",IBCNT=IBCNT-1
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^of medical care or services and may not be used as a reason for non-payment.",IBCNT=IBCNT-1
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^Please make your check payable to the Department of Veterans Affairs and",IBCNT=IBCNT-1
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^send to the address listed above.",IBCNT=IBCNT-1
	I IBSM=3 S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^",IBCNT=IBCNT-1
	I IBSM>1 D
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^The undersigned certifies that treatment rendered is not for a",IBCNT=IBCNT-1
	. S ^TMP($J,"IBC-RC",(IBE-IBCNT))="2^service connected disability.",IBCNT=IBCNT-1
	Q

IBCF3P
IBCF3P	;ALB/BGA -UB92 HCFA-1450 (print data ) ;7-SEPT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EN	;This routine prints out the bill from the data gathered in
	;routines IBCF3,IBCF31, and IBCF32
	S IBPGS=1
	;
0	W IBFL(0,"SR"),?34,IBFL(0,"ZBILL")
1	W !,$E(IBFL(1,"PROVL1"),1,25),?26,IBFL(2,1)
	W !,$E(IBFL(1,"PROVL2"),1,25),?26,IBFL(2,2),?57,$E(IBFL(3),1,20),?77,IBFL(4)
	W !,$E(IBFL(1,"PROVL3"),1,25),?68,IBFL(11,1)
	W !,$E(IBFL(1,"PROVL4"),1,25),?26,$E(IBFL(5),1,10),?37,IBFL(6,"FROM"),?44,IBFL(6,"TO"),?51,IBFL(7),?55,IBFL(8),?67,IBFL(11,2)
	W !
	W !,$E(IBFL(12),1,30),?31,$E(IBFL(13),1,49)
	W !,?75,IBFL(31,1)
	W !,IBFL(14),?9,IBFL(15),?12,IBFL(16),?14,IBFL(17),?21,IBFL(18),?25,IBFL(19),?28,IBFL(20),?30,IBFL(21),?33,IBFL(22),?36,$E(IBFL(23),1,17)
CC	;
	I +IBFL(24) S IBC=54,IBX=$P(IBFL(24),U,2) F IBI=1:1:7 S IBX=$O(IBFL(24,IBX)) Q:'IBX  D
	. W ?IBC,IBFL(24,IBX) S IBC=IBC+3 S $P(IBFL(24),U,1)=$P(IBFL(24),U,1)-1,$P(IBFL(24),U,2)=IBX
	W ?74,IBFL(31,2)
	W !,?57,IBFL(37,1)
	;W !
OC	;
	F IBJ=2,3 S IBC=0 W ! D
	. F IBI=32,33,34,35 S IBX=+IBFL(IBI) D  S IBC=IBC+10
	.. Q:+IBX'>0  S IBX=$P(IBFL(IBI),U,2)+1,IBY=$G(IBFL(IBI,+IBX)) W ?IBC,$P(IBY,U,1),?(IBC+3),$P(IBY,U,2)
	.. S $P(IBFL(IBI),U,1)=+IBFL(IBI)-1,$P(IBFL(IBI),U,2)=+IBX
	. S IBI=36,IBX=+IBFL(IBI) I +IBX>0 D
	.. S IBX=$P(IBFL(IBI),U,2)+1,IBY=$G(IBFL(IBI,+IBX)) W ?40,$P(IBY,U,1),?43,$P(IBY,U,2),?50,$P(IBY,U,3)
	.. S $P(IBFL(IBI),U,1)=+IBFL(IBI)-1,$P(IBFL(IBI),U,2)=+IBX
	. W ?57,$G(IBFL(37,IBJ))
	;
	;
38	;responsible party name/address and value codes
	S IB38C1=+$P(IBSIGN,U,31),IB38C2=42-IB38C1
	F IBI=1:1:5 W !,?IB38C1,$E($G(IBFL(38,IBI)),1,IB38C2) I IBI>1,+IBFL(39) D
	. S IBX=$P(IBFL(39),U,2) F IBJ=1:1:3 S IBX=$O(IBFL(39,IBX)) Q:'IBX  D
	.. S IBC=(30+(13*IBJ)) W ?IBC,$P(IBFL(39,IBX),U,1),?(IBC+2),$S(+$P(IBFL(39,IBX),U,3):$J($P(IBFL(39,IBX),U,2),10,2),1:$J($P(IBFL(39,IBX),U,2),8))
	.. S $P(IBFL(39),U,1)=$P(IBFL(39),U,1)-1,$P(IBFL(39),U,2)=IBX
	W ! K IB38C1,IB38C2
	;
42	;Rev Codes
	S IBX=$G(^TMP($J,"IBC-RC")) I +IBX S IBX=$P(IBX,U,2) F IBI=1:1:23 S IBX=$O(^TMP($J,"IBC-RC",IBX)) Q:'IBX  D
	. S $P(^TMP($J,"IBC-RC"),U,1)=+$P(^TMP($J,"IBC-RC"),U,1)-1,$P(^TMP($J,"IBC-RC"),U,2)=IBX
	. S IBY=^TMP($J,"IBC-RC",IBX) I +IBY>1 W !,?($S(+IBY=3:5,1:0)),$E($P(IBY,U,2),1,76) Q
	. W !,$P(IBY,U,2),?5,$E($P(IBY,U,3),1,24),?30,$P(IBY,U,4)
	. I +$P(IBY,U,5) W:$P(IBY,U,4)'="" "/"_$J($P(IBY,U,5),0,2) I $P(IBY,U,4)="" W $J($P(IBY,U,5),7,2)
	. W ?48,$P(IBY,U,6) I $P(IBY,U,7)'="" W ?53,$J($P(IBY,U,7),11,2)
	;
	;Payer
	W !,?67,IBFL(56,1)
50	F IBI=1:1:3 D
	. W !,$E($G(IBFL(50,IBI)),1,25),?26,$E($G(IBFL(51,IBI)),1,13),?40,$G(IBFL(52,IBI)),?43,$G(IBFL(53,IBI)),?66,IBFL(56,(IBI+1))
	W !,?1,IBFL(57),?56,IBFL(56,5)
58	W ! F IBI=1:1:3 D
	. W !,$E($G(IBFL(58,IBI)),1,25),?26,$G(IBFL(59,IBI)),?29,$E($G(IBFL(60,IBI)),1,19),?49,$E($G(IBFL(61,IBI)),1,14),?64,$E($G(IBFL(62,IBI)),1,16)
63	W ! F IBI=1:1:3 D
	. W !,$E($G(IBFL(63,IBI)),1,18),?19,$G(IBFL(64,IBI)),?21,$E($G(IBFL(65,IBI)),1,24),?46,$E($G(IBFL(66,IBI)),1,34)
	;
67	;field locators 67-71 and 76,78
	W !,?78,IBFL(78,1)
	W ! S IBC=0 F IBI=1:1:9 W ?IBC,$G(IBFL(66+IBI)) S IBC=IBC+7
	W ?64,$E($G(IBFL(76)),1,6),?77,IBFL(78,2)
	W !
79	;field locators 80-83
	W !,IBFL(79) S IBC=3 F IBI=1:1:3 W ?IBC,$P($G(IBFL(80,IBI)),U,1),?(IBC+8),$P($G(IBFL(80,IBI)),U,2) S IBC=IBC+15
	W ?50,$E($G(IBFL(82)),1,30)
	W !!
	S IBC=3 F IBI=4:1:6 W ?IBC,$P($G(IBFL(80,IBI)),U,1),?(IBC+8),$P($G(IBFL(80,IBI)),U,2) S IBC=IBC+15
	W ?50,$E($G(IBFL(83)),1,30)
84	;remarks field locator 84
	W !,?7,$E(IBFL(84,1),1,27),?35,"(PAGE ",IBPGS," OF ",IBPG,")" S IBI=1 F  S IBI=$O(IBFL(84,IBI)) Q:'IBI  W !,$E($G(IBFL(84,IBI)),1,48)
	W ?50,$E($G(IBFL(85,1)),1,22),?74,$G(IBFL(86)),!,?50,$E($G(IBFL(85,2)),1,22)
	I IBPGS<IBPG S IBPGS=IBPGS+1 W @IOF G 0
	K IBPGS,IBC
	Q

IBCF3TP
IBCF3TP	;ALB/BGA - TEST PATTERN UB92 FORM ; 12-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;This program performs a test print function. The results of this
	;test will align the fields of the IB routines to the field locators
	;on form UB92.
	;
	;
ZIS	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="ENP^IBCF3TP",ZTSAVE("IBCF31")="",ZTDESC="PRINT TEST BILL" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G END
	U IO
ENP	;
	W "##SR",?34,"*** UB-92 TEST PATTERN ***"
	W !,"AGENT CASHIER"
	W !,"AGENT CASHIER STREET",?57,"BN XXX ",?77,"XXX"
	W !,"CITY  STATE  ZIP"
5	W !,"PHONE #",?26,"TAX# XXXX",?37,"5/1/93",?44,"5/4/93"
	W !
	W !,"PATIENT NAME",?31,"PT SHORT ADDRESS"
	W !
	W !,"DOB",?9,"X",?12,"X",?14,"DATE",?21,"HR",?25,"X",?28,"X",?30,"DR",?33,"ST",?36,"000-00-0000" S IBI=54 F IBJ=1:1:7 W ?IBI,"CC" S IBI=IBI+3
	W !!
11	S IBI=0 F IBJ=1:1:5 W ?IBI,"OC",?(IBI+3),"DATE" S IBI=IBI+10
	W !!,"RESPONSIBLE PARTY'S NAME"
	W !,"STREET ADDRESS 1",!,"STREET ADDRESS 2",!,"STREET ADDRESS 3",!,"CITY  STATE  ZIP"
	W !
19	W !,"CD1",?5,"REV CODE description",?48,"xx",?57,"xxxx.xx"
	W !,"CD2",?5,"REV CODE description",?48,"xx",?57,"xxxx.xx"
	W !,"CD3",?5,"REV CODE description",?48,"xx",?57,"xxxx.xx"
	W !,?5,"Subtotal",?57,"xxxx.xx"
	W !!,?5,"Total",?57,"xxxx.xx"
	W !!!!!!!!!
32	W !,"For your information, even though the patient may be otherwise eligible"
	W !,"for Medicare, no payment may be made under Medicare to any Federal provider"
	W !,"of medical care or services and may not be used as a reason for non-payment."
	W !,"Please make your check payable to the Department of Veterans Affairs and"
	W !,"send to the address listed above."
	W !
	W !,"The undersigned certifies that treatment rendered is not for a"
	W !,"service connected disability."
	W !
43	W !,"Name of Payer 1",?26,"Provider #",?40,"x",?43,"x"
	W !,"Name of Payer 2",?26,"Provider #",?40,"x",?43,"x"
	W !,"Name of Payer 3",?26,"Provider #",?40,"x",?43,"x"
	W !!
48	W !,"Insured's Name 1",?26,"x",?29,"Insurance #",?49,"Group Name",?64,"Group #"
	W !,"Insured's Name 2",?26,"x",?29,"Insurance #",?49,"Group Name",?64,"Group #"
	W !,"Insured's Name 3",?26,"x",?29,"Insurance #",?49,"Group Name",?64,"Group #"
	W !
	W !,"Treatment Auth. Cd",?19,"x",?21,"Employer Name",?47,"Employer Location"
	W !,?19,"x",?21,"Employer Name",?47,"Employer Location"
	W !,?19,"x",?21,"Employer Name",?47,"Employer Location"
	W !
56	W !,"PDX" S IBI=7 F IBJ=1:1:8 W ?IBI,"Dx Cd" S IBI=IBI+7
	W ?64,"ADMT DX",!!
	S IBI=3 F IBJ=1:1:3 W ?IBI,"P-code",?(IBI+8),"mmddyy" S IBI=IBI+15
	W ?52,"Attending Phys. ID#",!!
	S IBI=3 F IBJ=1:1:3 W ?IBI,"P-code",?(IBI+8),"mmddyy" S IBI=IBI+15
	W ?52,"Other Phys. ID#"
61	W !,?7,"Patient ID#: xxx-xx-xxxx"
	W !,"Bill Type: xxx xxxxxx"
	W !,"UB 92 TEST PATTERN",?52,"Provider Representative DATE"
	W !,"*** comment ***"
	K IBI,IBJ
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
END	Q

IBCF4
IBCF4	;ALB/ARH - PRINT BILL ADDENDUM ; 12-JAN-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PRXA	;get bill number then print rx refill addendums for bills
	;S DIR("??")="^D RXDISP^IBCF4",DIR("?")="Enter the bill number of a bill with prescription refills or prosthetic items",DIR("A")="Select BILL NUMBER",DIR(0)="FO^0:15" D ^DIR K DIR I Y=""!$D(DIRUT) G EXIT
	;S IBIFN=$O(^DGCR(399,"B",Y,0)) I 'IBIFN  W "  ??" G PRXA
	;I '$D(^IBA(362.4,"AIFN"_+IBIFN)) W "  bill has no Rx Refills..." G PRXA
	S DIC("S")="I $D(^IBA(362.4,""AIFN""_+Y))!($D(^IBA(362.5,""AIFN""_+Y)))"
	S DIC="^DGCR(399,",DIC(0)="AEMQ" D ^DIC K DIC G:+Y'>0 EXIT S IBBILL=$P(Y,U,2),IBIFN=+Y
DEV	;get the device
	W !!,"Report requires 132 columns."
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="EN^IBCF4",ZTDESC="BILL ADDENDUM FOR "_IBBILL,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q"),ZTSK G EXIT
	U IO D EN
	;
EXIT	;clean up and quit
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IBQUIT,IBIFN,IBBILL,X,Y,DTOUT,DUOUT,DIRUT,DIROUT D ^%ZISC
	Q
	;
EN	;ENTRY POINT IF QUEUED, print all rx refills for a bill
	S IBY=$G(^DGCR(399,+IBIFN,0)) Q:IBY=""  S IBXREF="AIFN"_IBIFN
	S (IBQUIT,IBPGN,IBRX)=0,IBHDR="BILL ADDENDUM FOR "_$P($G(^DPT(+$P(IBY,U,2),0)),U,1)_" - "_$P(IBY,U,1) D HDR
RX	I '$D(^IBA(362.4,IBXREF)) G PROS
	W !!,"PRESCRIPTION REFILLS:",!
	S IBRX=0 F  S IBRX=$O(^IBA(362.4,IBXREF,IBRX)) Q:IBRX=""!IBQUIT  S IBRIFN=0 F  S IBRIFN=$O(^IBA(362.4,IBXREF,IBRX,IBRIFN)) Q:'IBRIFN!IBQUIT  D
	. S IBY=$G(^IBA(362.4,IBRIFN,0)) Q:IBY=""
	. W !,$P(IBY,U,1),?13,$$FMTE^XLFDT(+$P(IBY,U,3)),?28,$P($G(^PSDRUG(+$P(IBY,U,4),0)),U,1)
	. I $P(IBY,U,6)'="" W ?70,"QTY: ",$P(IBY,U,7)
	. I $P(IBY,U,7)'="" W ?80,"DAYS SUPPLY: ",$P(IBY,U,6)
	. I $P(IBY,U,8)'="" W ?100,"NDC #: ",$P(IBY,U,8)
	. S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR
	;
PROS	I '$D(^IBA(362.5,IBXREF)) G END
	W !!!,"PROSTHETIC ITEMS:",!
	S IBPI=0 F  S IBPI=$O(^IBA(362.5,IBXREF,IBPI)) Q:IBPI=""!IBQUIT  S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.5,IBXREF,IBPI,IBPIFN)) Q:'IBPIFN!IBQUIT  D
	. S IBY=$G(^IBA(362.5,IBPIFN,0)) Q:IBY=""
	. W !,$$FMTE^XLFDT(+$P(IBY,U,1)),?15,$P($$PIN^IBCSC5B(+$P(IBY,U,3)),U,2)
	. S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR
	D:'IBQUIT PAUSE
END	K IBX,IBY,IBPGN,IBRX,IBHDR,IBRIFN,IBLN,IBCDT,IBI,IBXREF,IBPI,IBPIFN
	Q
	;
	;
HDR	;print the report header
	S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=5
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
	W IBHDR W:IOM<85 ! W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
	;W !,"RX #",?13,"REFILL DATE",?28,"DRUG",?70,"DAYS SUPPLY",?83,"QTY",?90,"NDC #",!
	F IBI=1:1:IOM W "-"
	W !
	Q
	;
PAUSE	;pause at end of screen if beeing displayed on a terminal
	Q:$E(IOST,1,2)'["C-"
	S DIR(0)="E" D ^DIR K DIR
	I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
	Q
	;
STOP()	;determine if user has requested the queued report to stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
	Q +$G(ZTSTOP)
	;
RXDISP	;displays all rx refills bills
	;N IBX,IBY,IBZ,IBC,X,Y S Y=1,IBC=0,IBX="AIFN"
	;F  S IBX=$O(^IBA(362.4,IBX)) Q:IBX=""  S IBY=$E(IBX,5,999),IBZ=$G(^DGCR(399,+IBY,0)) I IBZ'="" D  Q:'Y
	;. W !,$P(IBZ,U,1),?10,$E($P($G(^DPT(+$P(IBZ,U,2),0)),U,1),1,20),?32,$$DATE(+$P(IBZ,U,3)),?42,$S(+$P(IBZ,U,5)<3:"INPT",1:"OUTPT")
	;. W ?49,$P($G(^DGCR(399.3,+$P(IBZ,U,7),0)),U,4),?59,$E($$EXSET^IBEFUNC(+$P(IBZ,U,13),399,.13),1,7),?68,$E($P($G(^IBE(353,+$P(IBZ,U,19),0)),U,1),1,11)
	;. S IBC=IBC+1 I '(IBC#10) S DIR(0)="E" D ^DIR K DIR
	;Q
	;
DATE(X)	Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
	;
BILLAD(IFN)	;returns true if bill has either rx refills or prosthetics so addendum should print
	N IBX S IBX=0,IFN=+$G(IFN) S:+$O(^IBA(362.4,"AIFN"_IFN,0)) IBX=1 S:+$O(^IBA(362.5,"AIFN"_IFN,0)) IBX=IBX+2
	Q IBX

IBCFP
IBCFP	;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ; 6-DEC-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
	S IBPAR1=$G(^IBE(350.9,1,1))
	S IBFT=$G(^IBE(353,+$P(IBPAR1,U,26),0)) I $P(IBFT,U,2)="" W !,"Default printer in billing not defined for the "_$P(IBFT,U,1)_", none will print!",!
	I +$P(IBPAR1,U,22),$P($G(^IBE(353,+$$FNT^IBCU3("HCFA 1500"),0)),U,2)="" W !,"Default printer in billing not defined for the HCFA 1500, none will print!",!
	I '$D(^DGCR(399,"AST")) W !,"There are no Authorized but not Printed bills to print!" G END
	;
	S IBS="",IBZ="Z:ZIP;I:INSURANCE COMPANY NAME;P:PATIENT NAME;"
ORDER	S DIR("?")="This option prints all bills with a Status of Authorized in the order requested.  The printed bills may be sorted by: Zip Code, Insurance Company Name, and Patient name."
1	S DIR("A")="First Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I $D(DIRUT) G END
	S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) S IBX=$P($P(IBZ,Y_":",2),";",1)
	;
	S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_".  Press return if the order already entered is sufficient.",DIR("?",2)=""
2	S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR I Y'="",$D(DIRUT) G END
	S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0) G:Y="" BEG S IBY=$P($P(IBZ,Y_":",2),";",1)
	;
	S DIR("?",1)="Enter the field that the bills should be sorted on within "_IBX_" and "_IBY_".  Press return if the order already entered is sufficient."
3	S DIR("A")="Then Sort Bills By",DIR(0)="SOB^"_IBZ D ^DIR K DIR I Y'="",$D(DIRUT) G END
	S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
	;
BEG	S DIR("A")="Begin printing bills",DIR("?")="Enter 'Y'es to begin printing of all authorized bills."
	W ! S DIR(0)="YBO",DIR("??")="^D DISP^IBCF" D ^DIR K DIR I 'Y W "... bills not printed!" G END
	;
	S ZTRTN="QTASK^IBCFP",ZTDESC="BATCH PRINT AUTHORIZED THIRD PARTY BILLS",ZTIO="",ZTSAVE("IBS")="" D ^%ZTLOAD
	I $D(ZTSK) W !," ... queued"
	;
END	K DIR,IBX,IBY,IBZ,IBS,IBPAR1,IBFT,Y,X,DIRUT ; end of interactive part
	Q
	;
QTASK	; first part, sorts authorized bills in to order requested by bill form type then queues off one job for each form type to print the bills
	;
SORT	;sort authorized bills by form type and requested sort order (notice that bill addendums only print for HCFA 1500's)
	S (IBQ,IBIFN)=0 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN!IBQ  D  I $$STOP S IBQ=1 Q
	. S IBFT=$$FT^IBCU3(IBIFN)
	. S IBX=$G(^DGCR(399,IBIFN,0)),IBPAT=$P($G(^DPT(+$P(IBX,U,2),0)),U,1) Q:$P(IBX,U,13)'=3
	. S IBX=$G(^DGCR(399,IBIFN,"M")),IBZIP=$P(IBX,U,9),IBINS=$P($G(^DIC(36,+IBX,0)),U,1)
	. S IBX=IBZIP_U_IBINS_U_IBPAT,IBS1=$P(IBX,U,$E(IBS,1))_" ",IBS2=$P(IBX,U,$E(IBS,2))_" ",IBS3=$P(IBX,U,$E(IBS,3))_" "
	. S ^TMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)="" Q:$$FTN^IBCU3(IBFT)'["HCFA 1500"
	. S IBFT=$$FNT^IBCU3("BILL ADDENDUM") I +IBFT S ^TMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
	K IBIFN,IBFT,IBX,IBY,IBPAT,IBZIP,IBINS,IBS1,IBS2,IBS3,IBS
	;
QUEUE	; starts a queued job for each form type that an authorized bill was found for
	; first checks that a device has been defined for the form type
	I 'IBQ S IBX="IBCFP" F  S IBX=$O(^TMP(IBX)) Q:(IBX'?1"IBCFP"1N)  Q:($O(^TMP(IBX,0))'=$J)  S IBFT=$E(IBX,6) D
	. S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2) Q:ZTIO=""  S IBFTP=IBX,IBJ=$J
	. S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")="",ZTSAVE("^TMP(IBFTP,IBJ,")=""
	. S ZTDESC="BATCH PRINTING "_$$FTN^IBCU3(+IBFT),ZTRTN="QBILL^IBCFP" D ^%ZTLOAD
	K IBX,IBY,IBFTP,IBJ ; end of first queued part
	Q
	;
	;
QBILL	; second queued part, this will print all authorized bills for a specific form type
	; pass in IBFTP="IBCFP"_(form type) and "^TMP(IBFTP,$J)" sorted array of bills
	S (IBQ,IBS1)=0 F  S IBS1=$O(^TMP(IBFTP,IBJ,IBS1)) Q:IBS1=""!IBQ  D
	. S IBS2=0 F  S IBS2=$O(^TMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""!IBQ  D
	.. S IBS3=0 F  S IBS3=$O(^TMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""!IBQ  D
	... S IBBN=0 F  S IBBN=$O(^TMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBBN)) Q:IBBN=""  D  I $$STOP S IBQ=1 Q
	.... D ROUT(IBFT,1,IBBN)
	K ^TMP(IBFTP,IBJ),IBJ,IBFT,IBFTP,IBL,IBIFN,IBBN,IBPNT,IBQ ; end of last queued part
	Q
	;
ROUT(IBFT,IBPNT,IBIFN)	; sub procedure so can protect variables with new
	N IBBN,IBS1,IBS2,IBS3,IBQ,IBFTP,IBJ
	I IBFT=1 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2) D ENP^IBCF1 W @IOF G RE
	I IBFT=2 D EN^IBCF2 W @IOF G RE
	I $$FTN^IBCU3(+IBFT)="UB-92" D EN^IBCF3 W @IOF G RE
	I $$FTN^IBCU3(+IBFT)="BILL ADDENDUM" I +$$BILLAD^IBCF4(IBIFN) D EN^IBCF4 W @IOF G RE
RE	Q
	;
DATE(X)	Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
	;
STOP()	;determine if user has requested the queued report to stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
	Q +$G(ZTSTOP)

IBCMENU
IBCMENU	;ALB/MRL,MJB - UB-82 BILLING MENU  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRMENU
	;
	D DT^DICRW S DIK="^DOPT(""IBCMENU"","
	G:$D(^DOPT("IBCMENU",16)) A S ^DOPT("IBCMENU",0)="Billing Option^1N^" F I=1:1 S X=$T(@I) Q:X=""  S ^DOPT("IBCMENU",I,0)=$P(X,";;",2,99)
	D IXALL^DIK
A	W ! S DIC="^DOPT(""IBCMENU"",",DIC(0)="QEAM" D ^DIC Q:Y'>0  D @+Y G A
1	;;ACTIVATE/INACTIVATE REVENUE CODES
	W ! S DIC="^DGCR(399.2,",DIC(0)="AEQM" D ^DIC G KILL:Y'>0 S DA=+Y,DIE=DIC,DR="[IB ACTIVATE]" D ^DIE K DR G 1
	;
2	;;AUTHORIZE BILL GENERATION
	D KILL S IBAC=3 D AUT^IBCB,KILL Q
	;
3	;;BILL STATUS REPORT
	D ^IBOSTUS,KILL
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
4	;;CANCEL BILL
	D KILL S IBCAN=1 D ^IBCC,KILL Q
	;
5	;;ENTER/EDIT BILLING INFORMATION
	D KILL S IBAC=1 D EDI^IBCB,KILL Q
	;
6	;;PRINT BILL
	D KILL S IBAC=4 D GEN^IBCB,KILL
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
7	;;INPATIENTS WITH INSURANCE (NSC)
	D KILL S IBINPT=1 D INP^IBCONSC,KILL Q
	;
8	;;MAS BILLING LOG
	D ^IBOMBL,KILL Q
	;
9	;;OUTPATIENTS WITH INSURANCE (NSC)
	D KILL S IBOPT=1 D EN^IBCONSC,KILL Q
	;
10	;;PARAMETER ENTRY/EDIT
	D ^IBEPAR,KILL Q
	;
11	;;PATIENT BILLING INQUIRY
	D ^IBCNQ,KILL Q
	;
12	;;REOPEN BILLING RECORD
	W !,"NOT AVAILABLE",! Q  ;D ^IBCREO,KILL Q
	;
13	;;REPORT OF RATE TYPE TOTALS
	D ^IBORT,KILL
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
14	;;REVIEW BILL
	D KILL S IBAC=2 D REV^IBCB,KILL Q
	;
15	;;UPDATE RATE TYPE FILE
	W ! S DIC="^DGCR(399.3,",DIC(0)="AEQMZL" D ^DIC G KILL:Y'>0 S DA=+Y,DIE=DIC,DR="[IB RATE EDIT]" D ^DIE
	D KILL Q
16	;;CLONE A BILL (COPY AND CANCEL)
	D KILL,^IBCCC,KILL Q
	;
KILL	S IBKILL=1 D Q5^IBCVA K IBADI,IB00,DGCT1,IBPAR,IB,IBEDIT,IBK,IBPRNT,IBN,IBNEW,IBTAG,IBAUT,IBCAN,IBZ,IBZ,IBOUT,IBKILL,IBAC,IBDPT,IBDG,DGS,IBCCC,IBCCCC,IBIFN,DFN
	K IB1,IBA,IBA2,IBAC1,IBAD,IBADD1,IBDATA,IBU,IBUN,IBV1,IBVI,IBVO,IBW,IBWW,DGDRS1,IBX1,IBX2,X3,IBX3,DIC,G,%H,J1,X,X1,X2,XZ,Y,Z0,PRCASV,IBPNT,IBIFN2
	K IBYN,IBUB,IBU1,IBOPT,IBDR,IBABRT,IB6,IB7,IB8,IB9,IBCT,IBDIA,IBDX,IBDXC,IBHCN,IBNC,IBOPC,IBP,IBSP,IBUC,IBWE,IBWO,DGMTLL,DGPCM,DGPT,F,VAERR,VA,IBQUIT,PRCAPAYR,PTF,DGPTUPDT Q
	K IBEPAR
	;IBCMENU

IBCNADD
IBCNADD	;ALB/AAS - ADDRESS RETRIEVAL ENGINE FOR FILE 399 ; 29-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADD(DA)	; -- Retrive correct billing address for a bill
	;    assumes that new policy field points to valid ins. policy
	N X,Y,I,J,IB01,IB02,IBTYP,DFN,IBCNS,IBCDFN,IBCNT,IBAGAIN
	S IB02=""
	S DFN=$P($G(^DGCR(399,DA,0)),"^",2)
	S IBCNS=+$G(^DGCR(399,DA,"M")) G:'IBCNS MAINQ
	S IBCDFN=$P($G(^DGCR(399,DA,"M")),"^",12) I IBCDFN S IBCNS=+$G(^DPT(+DFN,.312,+IBCDFN,0))
	I '$D(^DIC(36,+IBCNS,0)) G MAINQ
	;
	; -- if send bill to employer and state is filled in use this
	I +$G(^DPT(DFN,.312,+IBCDFN,2)),+$P(^(2),"^",6) S IB02=$P(^(2),"^",2,99) G MAINQ
	;
MAIN	; -- determine address for company for type bill
	;
	; -- get main address
	S IB02=$S($D(^DIC(36,+IBCNS,.11)):^(.11),1:"")
	S IBCNT=$G(IBCNT)+1
	;
	; -- if process the same co. more than once you are in an infinate loop
	I $D(IBCNT(IBCNS)) G MAINQ ;already processed this company  use main add
	S IBCNT(IBCNS)=""
	;
	; -- type of bill
	;     inpatient<3, outpatient>2
	S IBTYP=$P(^DGCR(399,DA,0),"^",5)
	S IBTYP=$S(IBTYP<3:"I",1:"O")
	D @IBTYP I $D(IBAGAIN) K IBAGAIN G MAIN
	;
	; -- return address
MAINQ	Q IB02
	;
I	; -- see if there is an inpatient address
	; -- use if state is there
	I $P($G(^DIC(36,+IBCNS,.12)),"^",5) S IB02=$P($G(^(.12)),"^",1,6)
	;
	; -- if other company processes claims start again
	I $P($G(^DIC(36,+IBCNS,.12)),"^",7) S IBCNS=$P($G(^DIC(36,+IBCNS,.12)),"^",7) S IBAGAIN=1
	Q
	;
O	; -- see if there is an outpatient address
	; -- use if state is there
	I $P($G(^DIC(36,+IBCNS,.16)),"^",5) S IB02=$P($G(^(.16)),"^",1,6)
	;
	; -- if other company processes claims start again
	I $P($G(^DIC(36,+IBCNS,.16)),"^",7) S IBCNS=$P($G(^DIC(36,+IBCNS,.16)),"^",7) S IBAGAIN=1
	Q

IBCNQ
IBCNQ	;ALB/MJB - MCCR PATIENT BILLING INQUIRY  ;13 JUN 88 13:52
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRNQ
	;
	D HOME^%ZIS
ASKPAT	S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or PATIENT NAME: " W !! D ^DIC G:X=""!(X["^") Q
	;
	S IBIFN=+Y,IBQUIT=0,IBAC=7
VIEW	;
	;***
	;S XRTL=$ZU(0),XRTN="IBCNQ-2" D T0^%ZOSV ;start rt clock
	F I=0,"S","U","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
	S DFN=$P(IB(0),"^",2),IBSTAT=$P(IB(0),"^",13),IBBNO=$$BN^PRCAFN(IBIFN),IBPAGE=0 S:IBBNO=-1 IBBNO=$S($D(IBIL):IBIL,1:$P(IB(0),"^"))
	;
	D NOW^%DTC S Y=$E(%,1,12) D D^DIQ S IBNOW=Y,IBPT=$$PT^IBEFUNC(DFN) D HDR1
	;
	S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
	W !,"Bill Status",?15,": ",$S(IBSTAT=1:"ENTERED/NOT REVIEWED",IBSTAT=2:"REVIEWED",IBSTAT=3:"AUTHORIZED",IBSTAT=4:"PRINTED",IBSTAT=7:"CANCELLED",1:IBUN)," - RECORD IS ",$S(IBSTAT<3:"",1:"UN"),"EDITABLE"
	W !,"Rate Type",?15,": ",$S($P(IB(0),"^",7)="":IBUN,'$D(^DGCR(399.3,$P(IB(0),"^",7),0)):IBUN,1:$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^"))
	W:+$P(^IBE(350.9,1,1),"^",22) !,"Form Type",?15,": ",$S($P($G(^IBE(353,+$P(IB(0),"^",19),0)),"^")]"":$P(^(0),"^"),1:IBUN)
	W:IBSTAT=7 !,"Reason Canceled",?15,": ",$S($P(IB("S"),"^",19)]"":$P(IB("S"),"^",19),1:IBUN)
	I $P(IB(0),"^",5)<3 S Y=$P(IB(0),"^",3) D D^DIQ W !!,"Admission Date : ",Y
	E  D OPDATE
	W !!,"Charges",?15,": " S X=$P(IB("U1"),U,1),X2="2$" D:X]"" COMMA^%DTC W $S(X]"":X,1:IBUN)
	I $P(IB("U1"),U,2)]"" W !,"LESS Offset",?15,": " S X=$P(IB("U1"),U,2),X2="2$" D COMMA^%DTC W X,"   [",$P(IB("U1"),U,3),"]",!,"Bill Total",?15,": " S X=($P(IB("U1"),U,1)-$P(IB("U1"),U,2)),X2="2$" D COMMA^%DTC W X
	S X=$$TPR^PRCAFN(IBIFN) I X>0 S X2="2$" D COMMA^%DTC W !,"Amount Paid",?15,": ",X
	S X=$$STA^PRCAFN(IBIFN) I X>0 W !,"AR Status",?15,": ",$P(X,"^",2)
	I $P(IB("U"),U)]"" S Y=$P(IB("U"),U) D D^DIQ W !!,"Statement From",?15,": ",Y S Y=$P(IB("U"),"^",2) D D^DIQ W !,"Statement To",?15,": ",Y,!
	I $P(IB("U"),U)']"" W !!,"Statement From",?15,": ",IBUN,!,"Statement To",?15,": ",IBUN,!
	D DISP I IBQUIT Q:IBAC[8  G Q
	I IBSTAT<5 D NOPTF^IBCB2 I 'IBAC1 D:$Y>(IOSL-6) HDR Q:IBQUIT&(IBAC[8)  G Q:IBQUIT D NOPTF1^IBCB2
	D PAUSE,^IBOLK1:$G(IBFULL)&('IBQUIT) Q:IBAC[8  ; Called from Outpatient Visit Date Inquiry
	G Q:IBQUIT,ASKPAT
	;
DISP	; The variable IBAC must be defined as input to this sub-routine.
	S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
	I IB("S")']"" W !,"Past actions of this billing record unspecified." G DISPQ
	S IBX="Entered^^^First Reviewed^^^Last Reviewed^^^Authorized^^^^Last Printed^^^Cancelled"
	F I=1,4,7,10,14,17 I $P(IB("S"),U,I)]"" D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  D DISP1
	I $D(^DGCR(399,IBIFN,"R","AC",1)) S IB=0 F I=0:0 S IB=$O(^DGCR(399,IBIFN,"R","AC",1,IB)) Q:'IB  D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  W !,"Returned to AR : " D RETN
DISPQ	Q
	;
DISP1	W !,$P(IBX,U,I) S Y=$P(IB("S"),U,I) D D^DIQ W ?15,": ",Y,?28," by " S IBN=$P(IB("S"),U,(I+1)) W $S(IBN']"":IBUK,$D(^VA(200,IBN,0)):$P(^(0),U,1),1:IBUK)
	Q
	;
Q	K DFN,IB,IBAC,IBBNO,IBN,IBNOW,IBPAGE,IBPT,IBU,IBQUIT,IBUK,IBUN,IBX,IBSTAT,IBAC1,IBIFN,IBOPD,DIC,X,X2,Y
	Q
	;
RETN	I $D(^DGCR(399,IBIFN,"R",IB,0)) S IBN=^(0),Y=$P($P(IBN,"^"),".") D D^DIQ W Y,?28," by " S IBN=$P(IBN,"^",2) I IBN]"",$D(^VA(200,IBN,0)) W $P(^VA(200,IBN,0),"^")
	Q
	;
HDR	D PAUSE Q:IBQUIT
HDR1	S L="",$P(L,"=",80)="",IBPAGE=IBPAGE+1
	W:$E(IOST,1,2)["C-"!(IBPAGE>1) @IOF
	W $E($P(IBPT,"^"),1,20),"   ",$P(IBPT,"^",2),?38,IBBNO,?51,IBNOW,?72,"PAGE: ",IBPAGE,!,L
	K L Q
	;
OPDATE	; List Outpatient Visit Dates.
	Q:'$O(^DGCR(399,IBIFN,"OP",0))
	W !!,"OP Visit Dates :" S IBOPD=0
	F I=1:1 S IBOPD=$O(^DGCR(399,IBIFN,"OP",IBOPD)) Q:'IBOPD  D
	. W:'((I-1)#4)&(I>1) !
	. S Y=IBOPD D D^DIQ W ?($S(I#4:I#4,1:4)*14+3),Y
	Q
	;
PAUSE	Q:$E(IOST,1,2)'="C-"
	F I=$Y:1:(IOSL-3) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q

IBCNQ1
IBCNQ1	;ALB/CPM - OUTPATIENT VISIT DATE INQUIRY ; 31-JUL-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRNQ1
	;
	D HOME^%ZIS
ASKPAT	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCNQ1" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBCNQ1-1" D T0^%ZOSV ;start rt clock
	D END S DIC="^DPT(",DIC(0)="AEMQZ" W ! D ^DIC K DIC G:+Y<1 END
	S DFN=+Y I '$O(^DGCR(399,"AOPV",DFN,"")) W !!,"This patient has no bills with OP visits.  Please enter another patient." G ASKPAT
	;
	S IBQUIT=0,IBAC=78
ASKDAT	S DIR("A")="Select OP Visit Date",DIR(0)="DO^::EX^K:'$D(^DGCR(399,""AOPV"",DFN,Y)) X"
	S DIR("?",1)="Please enter a valid Outpatient Visit date for this patient.",DIR("?")="Enter '??' to list valid dates and bill numbers.",DIR("??")="^D HELP^IBCNQ1"
	D ^DIR K DIR G:Y<1 END
	S X=$O(^DGCR(399,"AOPV",DFN,Y,0)) I '$O(^DGCR(399,"AOPV",DFN,Y,X)) S IBIFN=X
	I '$D(IBIFN) D LIST K IBARR G END:IBQUIT
	I $D(IBIFN) D VIEW^IBCNQ ; Display bill record
	G ASKPAT:'IBQUIT
	;
END	K DFN,IBQUIT,DGI,DGX,DGY,IBS,IBNUM,IBAC,IB,IBBNO,IBN,IBU,IBUK,IBUN,IBX,IBSTAT,IBAC1,IBIFN,IBOPD,IBNOW,IBPAGE,IBPT,J,X,X2,Y
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCNQ1" D T1^%ZOSV ;stop rt clock
	Q
	;
LIST	; If multiple bills for an OP visit date, list them.
	W !!?5,"Select one of the following bills for this visit date:"
	;
	S DGI=0
	F J=1:1 S DGI=$O(^DGCR(399,"AOPV",DFN,Y,DGI)) Q:'DGI  S IBARR(J)=DGI W !?12,J D DISP,ASKNUM:'(J#5) G:IBQUIT!($D(IBIFN)) LQ
	I '((J-1)#5) W !!?5,"End of list.",!
ASKNUM	W !?5,"Select 1-"_$S(J#5:J-1,1:J)_", or type '^' to quit: " R DGX:DTIME S:'$T!(DGX["^") IBQUIT=1 Q:IBQUIT!(DGX="")  I +DGX<1!(+DGX>$S(J#5:J-1,1:J)) W !!?5,*7,"Enter a NUMBER from 1 to "_$S(J#5:J-1,1:J)_".",! G ASKNUM
	I $D(IBARR(DGX)) S IBIFN=IBARR(DGX)
LQ	Q
	;
HELP	; List all OP visit dates and bill numbers for patient.
	W !!?5,"Enter one of the following OP visit dates: ",!
	S (DGY,Y)="",J=0 F  S Y=$O(^DGCR(399,"AOPV",DFN,Y)) Q:'Y!(DGY["^")  S DGX="" F  S DGX=$O(^DGCR(399,"AOPV",DFN,Y,DGX)) Q:'DGX  S J=J+1 D:'(J#20) PAUSE Q:DGY["^"  W !?5,$E(Y,4,5)_"-"_$E(Y,6,7)_"-"_$E(Y,2,3) S DGI=DGX D DISP
	Q
	;
PAUSE	W !!?5,"Enter '^' to stop or <CR> to continue: " R DGY:DTIME S:'$T DGY="^"
	W:DGY'["^" ! Q
	;
DISP	; Write the bill number, rate type, and bill status.
	Q:'$D(^DGCR(399,DGI,0))  S IBS=$P(^(0),"^",13) W ?20,$P(^(0),"^"),?30,$P($G(^DGCR(399.3,+$P(^(0),"^",7),0)),"^")
	W ?55,$S(IBS=1:"ENTERED/NOT REVIEWED",IBS=2:"REVIEWED",IBS=3:"AUTHORIZED",IBS=4:"PRINTED",IBS=7:"CANCELLED",IBS=0:"CLOSED",1:"")
	Q

IBCNS
IBCNS	;ALB/AAS - IS INSURANCE ACTIVE ; 22-JULY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRNS
	;
	;Input   -  DFN       = patient
	;        -  IBINDT  = (optional) date to check ins active for or today if not defined
	;        -  IBOUTP  = (optional) 1 if want active insurance returned in IBDD(insurance company)=node in patient file
	;        -            = 2 if want all ins returned
	;
	;Output  -  IBINS   = 1 if has active ins., 0 if no active ins.
	;        -  IBDD()  = internal node in patient file of valid ins.
	;        -  IBDDI() = internal node in patient file of invalid ins.
	;
%	N J,X S IBINS=0 K IBDD,IBDDI
	S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I $D(^DPT(DFN,.312,J,0)) S X=^(0) D CHK
	Q
	;
CHK	;
	;Input   -  IBI  = entry in insurance multiple
	;
	S Z=$S($D(IBINDT):IBINDT,1:DT),Z1=$S($D(IBOUTP):IBOUTP,1:0)
	G:'$D(^DIC(36,+X,0)) CHKQ S X1=^(0) ;insurance company entry doesn't exist
	I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
	I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
	G:$P(X1,"^",5) CHKQ ;insurance company inactive
	G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
	S IBINS=1 I Z1 D
	.S IBDD(+X)=X
	.Q:'$P(IBDD(+X),"^",18)
	.S Y=$G(^IBA(355.3,+$P(IBDD(+X),"^",18),0))
	.I $P(Y,"^",4)'="" S $P(IBDD(+X),"^",3)=$P(Y,"^",4) ; move group number
	.I $P(Y,"^",3)'="" S $P(IBDD(+X),"^",15)=$P(Y,"^",3) ; move group name
CHKQ	I Z1=2&('$D(IBDD(+X))) D
	.S IBDDI(+X)=X
	.Q:'$P(IBDDI(+X),"^",18)
	.S Y=$G(^IBA(355.3,+$P(IBDDI(+X),"^",18),0))
	.I $P(Y,"^",4)'="" S $P(IBDDI(+X),"^",3)=$P(Y,"^",4) ; move group number
	.I $P(Y,"^",3)'="" S $P(IBDDI(+X),"^",15)=$P(Y,"^",3) ; move group name
	K X,X1,Z,Z1,Y Q
	;
DD	;  - called from input transform and x-refs for field 101,102,103
	;  - input requires da=internal entry number in 399
	;  - outputs IBdd(ins co.) array
	N DFN S DFN=$P(^DGCR(399,DA,0),"^",2),IBOUTP=1,IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
	D %
DDQ	K IBOUTP,IBINDT Q
	;
	;
DISP	;  -Display all insurance company information
	;  -input DFN
	;
	Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
	N X,IBINS,IBX
	D ALL^IBCNS1(DFN,"IBINS")
	;
	D HDR
	I '$D(IBINS) W !,"    No Insurance Information" G DISPQ
	;
	S X=0 F  S X=$O(IBINS(X)) Q:'X  S IBINS=IBINS(X,0) D D1 ; display
	;
DISPQ	Q
	;
OLDISP	;  -Display all insurance company information
	;  -input DFN
	;
	Q:'$D(DFN)  D:'$D(IOF) HOME^%ZIS
	;
	S IBOUTP=2 D IBCNS
	;
	D HDR
	I '$D(IBDD),'$D(IBDDI) W !,"    No Insurance Information" G DISPQ
	;
	S X="" F  S X=$O(IBDD(X)) Q:X=""  S IBINS=IBDD(X) D D1 ;active insurance
	S X="" F  S X=$O(IBDDI(X)) Q:X=""  S IBINS=IBDDI(X) D D1 ;inactive ins
	;
OLDISPQ	K IBDD,IBDDI,IBX
	Q
	;
HDR	; -- print standard header
	D HDR1("=",IOM-4)
	Q
	;
HDR1(CHAR,LENG)	; -- print header, specify character
	W !?4,"Insurance Co.",?22,"Subscriber ID",?40,"Group",?52,"Holder",?60,"Effective",?70,"Expires" I $G(CHAR)'="",LENG S X="",$P(X,CHAR,LENG)="" W !?4,X
	Q
	;
	;
D1	N X Q:'$D(IBINS)
	W !?4,$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")
	W ?22,$E($P(IBINS,"^",2),1,16)
	;W ?40,$E($S($P(IBINS,"^",15)'="":$P(IBINS,"^",15),1:$P(IBINS,"^",3)),1,10)
	W ?40,$E($$GRP($P(IBINS,"^",18)),1,10)
	S X=$P(IBINS,"^",6) W ?52,$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
	W ?60,$$DAT1^IBOUTL($P(IBINS,"^",8)),?70,$$DAT1^IBOUTL($P(IBINS,"^",4))
	Q
	;
GRP(IBCPOL)	; -- return group name/group policy
	;     input:   IBCPOL = pointer to entry in 355.3
	;    output:   group name or group number, if both group NUMBER
	;              if neither 'Individual PLAN'
	;
	N X,Y S X=""
	S X=$G(^IBA(355.3,+$G(IBCPOL),0))
	S Y=$S($P(X,"^",4)'="":$P(X,"^",4),1:$P(X,"^",3))
	I $P(X,"^",10) S Y="Ind. Plan "_Y
GRPQ	Q Y

IBCNS1
IBCNS1	;ALB/AAS - INSURANCE MANAGEMENT SUPPORTED FUNCTIONS ; 22-JULY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
INSURED(DFN,IBINDT)	; -- Is patient insured
	; --Input  DFN     = patient
	;          IBINDT  = (optional) date insured (default = today)
	; -- Output        = 0 - not insured
	;                  = 1 - insured
	;
	N J,X,IBINS S IBINS=0,J=0
	I '$G(IBINDT) S IBINDT=DT
	F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) S IBINS=$$CHK(X,IBINDT) Q:IBINS
INSQ	Q IBINS
	;
PRE(DFN,IBINDT)	; -- is pre-certification required for patient
	N X,Y,J,IBPRE
	S IBPRE=0,J=0
	S:'$G(IBINDT) IBINDT=DT
	F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) I $$CHK(X,IBINDT),$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",6) S IBPRE=1 Q
PREQ	Q IBPRE
	;
UR(DFN,IBINDT)	; -- is ur required for patient
	N X,Y,J,IBPRE
	S IBUR=0,J=0
	S:'$G(IBINDT) IBINDT=DT
	F  S J=$O(^DPT(DFN,.312,J)) Q:'J  S X=$G(^(J,0)) I $$CHK(X,IBINDT),$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",5) S IBUR=1 Q
URQ	Q IBUR
	;
CHK(X,Z,Y)	; -- check one entry for active
	; --  Input   X    = Zeroth node of entry in insurance multiple (2.312)
	;             Z    = date to check
	;             Y    = 2 if want will not reimburse
	; --  Output  1    = Insurance Active
	;             0    = Inactive
	;
	N Z1,X1 S Z1=0
	I $$INDEM(X) G CHKQ ; is and indemnity policy or company
	S X1=$G(^DIC(36,+X,0)) G:X1="" CHKQ ;insurance company entry doesn't exist
	I $P(X,"^",8) G:Z<$P(X,"^",8) CHKQ ;effective date later than care
	I $P(X,"^",4) G:Z>$P(X,"^",4) CHKQ ;care after expiration date
	G:$P(X1,"^",5) CHKQ ;insurance company inactive
	I $G(Y)'=2 G:$P(X1,"^",2)="N" CHKQ ;insurance company will not reimburse
	S Z1=1
CHKQ	Q Z1
	;
ACTIVE(IBCIFN)	; -- is this company active for this patient for this date
	; -- called from input transform and x-refs for fields 101,102,103
	; -- input
	N ACTIVE,DFN,IBINDT
	S DFN=$P(^DGCR(399,DA,0),"^",2),IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
	;
ACTIVEQ	Q ACTIVE
	;
DD	;  - called from input transform and x-refs for field 101,102,103
	;  - input requires da=internal entry number in 399
	;  - outputs IBdd(ins co.) array
	N DFN S DFN=$P(^DGCR(399,DA,0),"^",2),IBINDT=$S(+$G(^DGCR(399,DA,"U")):+$G(^("U")),1:DT)
	D ALLACT
DDQ	K IBINDT Q
	;
	;
ALLACT	; -- return active insurance zeroth nodes in ibdd(ins co,entry in mult)
	N X,X1
	S (X1,IBDD)=0
	F  S X1=$O(^DPT(DFN,.312,X1)) Q:'X1  S X=$G(^(X,0)) I $$CHK(X,IBINDT) S IBDD(+X,X1)=X
	;
ALLACTQ	Q
	;
HDR	W !?4,"Insurance Co.",?22,"Policy #",?40,"Group",?52,"Holder",?60,"Effective",?70,"Expires" S X="",$P(X,"=",IOM-4)="" W !?4,X
	Q
	;
	;
D1	N X Q:'$D(IBINS)
	W !?4,$S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")
	W ?22,$E($P(IBINS,"^",2),1,16)
	W ?40,$E($$GRP^IBCNS($P(IBINS,"^",18)),1,10)
	S X=$P(IBINS,"^",6) W ?52,$S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")
	W ?60,$$DAT1^IBOUTL($P(IBINS,"^",8)),?70,$$DAT1^IBOUTL($P(IBINS,"^",4))
	Q
	;
ALL(DFN,VAR,ACT,ADT)	; -- find all insurance data on a patient
	;
	; -- input DFN  = patient
	;          VAR  = variable to output in format of abc
	;                 or abc(dfn)
	;                 or ^tmp($j,"Insurance")
	;          ACT  = 1 if only active ins. desired
	;               = 2 if active and will not reimburse desired (medicare)
	;          ADT  = if ACT=1, then ADT is the internal date to check
	;                 active for, default = dt
	;
	; -- output var(0)   =: number of entries insurance multiple
	;           var(x,0) =: ^dpt(dfn,.312,x,0)
	;           var(x,1) =: ^dpt(dfn,.312,x,1)
	;           var(x,2) =: ^dpt(dfn,.312,x,2)
	;
	N X
	S X=0 I $G(ACT),$E($G(ADT),1,7)'?7N S ADT=DT
	F  S X=$O(^DPT(DFN,.312,X)) Q:'X  D
	.I $G(ACT),'$$CHK(^DPT(DFN,.312,X,0),ADT,$G(ACT)) Q
	.S @VAR@(0)=$G(@VAR@(0))+1
	.S @VAR@(X,0)=$$ZND(DFN,X)
	.S @VAR@(X,1)=$G(^DPT(DFN,.312,X,1))
	.S @VAR@(X,2)=$G(^DPT(DFN,.312,X,2))
	.S @VAR@(X,355.3)=$G(^IBA(355.3,+$P($G(^DPT(DFN,.312,X,0)),"^",18),0))
ALLQ	Q
	;
ZND(DFN,NODE)	; -- set group number and group name back into zeroth node of ins. type
	N X,Y S (X,Y)=""
	I '$G(DFN)!('$G(NODE)) G ZNDQ
	S X=$G(^DPT(+DFN,.312,+NODE,0))
	S Y=$G(^IBA(355.3,+$P(X,"^",18),0)) I Y="" G ZNDQ
	S $P(X,"^",3)=$P(Y,"^",4) ; move group number
	S $P(X,"^",15)=$P(Y,"^",3) ; move group name
	;
ZNDQ	Q X
	;
INDEM(X)	; -- is this and indemnity plan
	; -- input zeroth node if insurance type field
	N IBINDEM,IBCTP
	S IBINDEM=1
	I $P($G(^DIC(36,+X,0)),"^",13)=15 G INDEMQ ; company is indemnity co.
	S IBCTP=$P($G(^IBA(355.3,+$P(X,"^",18),0)),"^",9)
	I IBCTP,$P($G(^IBE(355.1,+IBCTP,0)),"^",3)=9 G INDEMQ ; plan is and indemnity plan
	S IBINDEM=0
INDEMQ	Q IBINDEM

IBCNS2
IBCNS2	;ALB/AAS - INSURANCE POLICY CALLS FROM FILE 399 DD ; 22-JULY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	Q
DD(IBX,IBDA,LEVEL)	;  - called from input transform for field 111,112,113
	; -- input   ibx = x from input transform
	;           ibda = internal entry in 399
	;          level = 1=primary, 2=secondary, 3=tertiary
	; -- output  returns x=internal entry in 2.3121 (ins. Mult.) if valid
	;   
	N DFN,ACTIVE,INSDT
	D VAR
	S X=$$SEL(IBX,DFN,INSDT,ACTIVE)
	I +X<1 K X
DDQ	Q
	;
VAR	S DFN=$P(^DGCR(399,IBDA,0),"^",2),ACTIVE=1,INSDT=$S(+$G(^DGCR(399,IBDA,"U")):+$G(^("U")),1:DT)
	Q
	;
SEL(IBX,DFN,INSDT,ACTIVE)	; -- Select insurance policy
	; -- Input    IBX  = x from input transform
	;             DFN  = patient
	;           INSDT  = (optional) Active date of ins. (default = dt)
	;          ACTIVE  = (optional) 1 if want active (default)
	;                  = 2 if want all ins returned
	;
	; -- Output      =  pointer to 36 ^ pointer to 2.3121 ^ pointer to 355.3
	;
	N I,J,Y,DA,DE,DQ,DR,DIC,DIE,DIR,DIV,IBSEL,IBDD,IBD
	S IBSEL=1,Y=""
	I '$G(ACTIVE) S ACTIVE=1
	S:'$G(INSDT) INSDT=DT
	I '$G(DFN) G SELQ
	D BLD
	;
	; -- call DIC to choose from list
	S X=IBX
	S DIC="^DPT("_DFN_",.312,",DIC(0)="EQMN"
	S DIC("S")="I $D(IBDD(+Y))" ; add not other selection
	S DIC("W")="W $P(^DIC(36,+^(0),0),U)_""  Group: ""_$$GRP^IBCNS($P(^DPT(DFN,.312,+Y,0),U,18))"
	D ^DIC
SELQ	Q +Y
	;
BLD	K IBD,IBDD
	S (IBDD,IBCDFN)=0 F  S IBCDFN=$O(^DPT(DFN,.312,IBCDFN)) Q:'IBCDFN  I $D(^DPT(DFN,.312,IBCDFN,0)) D CHK(IBCDFN,ACTIVE,INSDT)
	Q
	;
CHK(IBCDFN,ACTIVE,INSDT)	; -- see if active
	N X,X1
	S X=$G(^DPT(DFN,.312,IBCDFN,0))
	S IBDD(IBCDFN)=+X_"^"_IBCDFN_"^"_$P(X,"^",18)
	I ACTIVE=2 G CHKQ
	S X1=$G(^DIC(36,+X,0)) I X1="" G CQ ;ins co entry doesn't exist
	I $P(X,"^",8) G:INSDT<$P(X,"^",8) CQ ;effective date later than care
	I $P(X,"^",4) G:INSDT>$P(X,"^",4) CQ ;care after expiration date
	G:$P(X1,"^",5) CQ ;                  ;ins company inactive
	G:$P(X1,"^",2)="N" CQ ;              ;ins company will not reimburse
	G CHKQ
CQ	K IBDD(IBCDFN)
CHKQ	S:$D(IBDD(IBCDFN)) IBDD=IBDD+1,IBD(IBDD)=IBCDFN
	Q
	;
	;
DDHELP(IBDA,LEVEL)	; -- Executable help
	; -- write out list to choose from
	N DFN,ACTIVE,INSDT,I,IBINS
	D VAR,BLD
	;
	I $G(IBDD)=0 W !,"No Insurance Policies to Select From" G DDHQ
	;
	I '$D(IOM) D HOME^%ZIS
	W ! D HDR^IBCNS
	S I=0 F  S I=$O(IBD(I)) Q:'I  D
	.S IBINS=$G(^DPT(DFN,.312,$G(IBD(I)),0))
	.D D1^IBCNS
DDHQ	Q
	;
TRANS(IBDA,Y)	; -- output transform
	N DFN,ACTIVE,INSDT
	D VAR
	S Y=$P($G(^DIC(36,+$P($G(^DPT(DFN,.312,+$G(Y),0)),U),0)),U)
	Q Y
	;
INSCO(IBDA,IBCDFN)	; -- return pointer value of 36 from pt. file
	N DFN,ACTIVE,INSDT
	D VAR
	S Y=+$G(^DPT(DFN,.312,IBCDFN,0))
	Q Y_$S(Y>0:"^"_$P($G(^DIC(36,+Y,0)),"^"),1:"")
	;
IX(DA,XREF)	; -- create i1, aic xrefs for fields 112, 113, 114
	;
	S ^DGCR(399,DA,XREF)=$$ZND^IBCNS1($P($G(^DGCR(399,DA,0)),"^",2),X)
	S ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))=""
	Q
	;
KIX(DA,XREF)	; -- kill logic for above xref
	K ^DGCR(399,DA,XREF)
	K ^DGCR(399,DA,"AIC",+$G(^DPT($P($G(^DGCR(399,DA,0)),"^",2),.312,+X,0)))
	Q

IBCNSA
IBCNSA	;ALB/NLR - ANNUAL BENEFITS EDIT ; 21-MAY-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; -- main entry point for IBCNS ANNUAL BENEFITS
	K VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),DIC,%DT,IBCNS,IBCPOL,IBYR
	S IBCHANGE="OKAY"
	D EN^VALM("IBCNS ANNUAL BENEFITS")
	Q
	;
HDR(SCR)	; -- joint header logic
	S Y=$E($E($P($G(^DIC(36,$P($G(^IBA(355.3,+IBCPOL,0)),U),0)),U),1,20)_" Ins. Co                    ",1,30)
	I $G(IBPAT) S Y=Y_"Patient: "_$E($P(^DPT(DFN,0),"^"),1,20)
	S VALMHDR(1)=SCR_" for: "_Y
	S VALMHDR(2)=$S($G(IBPAT):"           Policy: "_$E(IBCGN_"                             ",1,30)_" Ben Yr: "_IBYE,1:"             Policy: "_$E(IBCGN_"                             ",1,30)_" Ben Yr: "_IBYE)
	Q
	;
INIT	; -- init variables and list array
	K VALMQUIT,IBCAB,IBPAT
	S VALMCNT=0,VALMBG=1
	I $G(IBYR)'?7N K IBYR
	I '$G(IBCPOL) D GETPOL Q:$D(VALMQUIT)
	I '$G(IBYR) D GETYR Q:$D(VALMQUIT)
	I '$D(IBCAB) S IBCAB=$$AB^IBCNSU(IBCPOL,IBYR)
	S IBCABD=$G(^IBA(355.4,IBCAB,0))
	S IBCABC=$G(^IBA(355.3,$P(IBCABD,U,2),0))
	S IBCGN=$$GRP^IBCNS(IBCPOL)
	K ^TMP("IBCNSA",$J)
	D BLD
	Q
BLD	; -- List builder
	S VALMCNT=47
	F I=1:1:56 D BLANK(.I)
	D EN^IBCNSA0,EN^IBCNSA1
	Q
	;
GETPOL	;
	I '$G(IBCNS) D INSCO^IBCNSC I '$G(IBCNS) S VALMQUIT="" G GETPOLQ
	I '$G(IBCPOL) S IBCPOL=$$LK^IBCNSM31(IBCNS) ;D  G:$D(VALMQUIT) GETPOLQ
	;.S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U)=IBCNS"
	;.D ^DIC K DIC
	;.S IBCPOL=+Y
	I $G(IBCPOL)<1 S VALMQUIT=""
GETPOLQ	Q
	;
GETYR	;
	I '$G(IBCPOL) D GETPOL I $G(IBCPOL)<1 S VALMQUIT="" G GETYRQ
	I '$G(IBYR) D GY1 G:$D(VALMQUIT) GETYRQ
GETYRQ	Q
	;
GY1	N %DT
	S IBCNT=0
	S IBDT="" F  S IBDT=$O(^IBA(355.4,"APY",IBCPOL,IBDT)) Q:'IBDT  S IBDA=0 F  S IBDA=$O(^IBA(355.4,"APY",IBCPOL,IBDT,IBDA)) Q:'IBDA  D
	.S IBCNT=IBCNT+1
	.W:IBCNT=1 !!,"Current benefit years on file:"
	.W !?4,IBCNT,". ",?8,$$DAT1^IBOUTL(+$G(^IBA(355.4,IBDA,0)),2)
	.Q
	I 'IBCNT W !,"No Benefit Years Entered."
	;
	; -- get default date of most recent entry, change to positive value
	;
	S X=+$O(^IBA(355.4,"APY",IBCPOL,"")) I X S:X<0 X=-X S:X>0 DIC("B")=$$DAT1^IBOUTL(X)
	S DIC="^IBA(355.4,",DIC(0)=$S($G(IBL):"AELQN",1:"AEQN"),DIC("A")="BENEFIT YEAR BEGINNING ON: "
	S DIC("S")="I $P(^(0),U,2)=IBCPOL"
	S DIC("W")=""
	S DIC("DR")=".02////"_IBCPOL
	S:$G(IBL) DLAYGO=355.4
	D ^DIC K DIC
	I +Y S IBYR=$P(Y,"^",2),IBCAB=+Y
	;
	I $G(IBYR)<1 S VALMQUIT=""
	Q
	;
GETYR2	; -- get policy year from 355.4 from bu
	I '$G(IBCPOL) D GETPOL I $G(IBCPOL)<1 S VALMQUIT="" G GETYR2Q
	I '$G(IBYR) D  G:$D(VALMQUIT) GETYR2Q
	.N DIC,X,Y
	.; -- get default date of most recent entry, change to positive value
	.S IBEXP1="No Benefit Years Entered.  You Must First Enter a Benefit Year for This Policy"
	.S IBEXP2="No Benefit Years Entered Under Annual Benefits, Hence No Benefits Used to View."
	.S X=+$O(^IBA(355.4,"APY",IBCPOL,"")) I 'X W !,$S('$G(IBVIEW):IBEXP1,1:IBEXP2) S VALMQUIT="" D PAUSE^VALM1 Q
	.S:X<0 X=-X S:X>0 DIC("B")=$$FMTE^XLFDT(X,1)
	.S DIC=355.4,DIC(0)="AEQN",DIC("A")="Select BENEFIT YEAR BEGINNING ON: "
	.S DIC("S")="I $P(^(0),U,2)=IBCPOL"
	.D ^DIC K DIC
	.S IBYR=""
	.I +Y S IBYR=$P(Y,"^",2)
	I $G(IBYR)<1 S VALMQUIT=""
GETYR2Q	Q
	;
EXIT	;
	K VALMQUIT,IBCHANGE,IBCAB,IBCABC,IBCABD,IBYR,IBCABD1,IBCABD2,IBCABD3,IBCABD4,IBCABD5
	D CLEAN^VALM10
	Q
BLANK(LINE)	; -- Build blank line
	D SET^VALM10(.LINE,$J("",80))
	Q
	;
HELP	; -- Help Code
	S X="?" D DISP^XQORM1 W !!
	Q

IBCNSA0
IBCNSA0	;ALB/NLR - ANNUAL BENEFITS EDIT - CONTINUED ; 21-MAY-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; -- entry to do actions
	D POL,USERINF,ADDCOM,HOSPICE
	Q
	;
POL	; -- Policy information region
	S IBCABD=$G(^IBA(355.4,IBCAB,0))
	S IBCABC=$G(^IBA(355.3,+$P(IBCABD,U,2),0))
	N OFFSET,START
	S START=1,OFFSET=20
	D SET^IBCNSP(START,OFFSET+6," Policy Information ",IORVON,IORVOFF)
	S Y=+IBCABD D D^DIQ
	S IBYE=Y
	;D SET^IBCNSP(START+1,OFFSET+16,"Year: "_IBYE)
	;D SET^IBCNSP(START+2,OFFSET+14,"Group: "_IBCGN)
	D SET^IBCNSP(START+1,OFFSET+3,"Max. Out of Pocket: $"_$J($P(IBCABD,U,5),7))
	D SET^IBCNSP(START+2,OFFSET-1,"Ambulance Coverage (%): "_$J($P(IBCABD,U,6),8)_"%")
	Q
	; 
HOSPICE	;
	S IBCABD4=$G(^IBA(355.4,+IBCAB,4))
	S START=29,OFFSET=43
	D SET^IBCNSP(START,OFFSET+7," Hospice ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+2,"Annual Deductible: $"_$J($P(IBCABD4,U,1),7))
	D SET^IBCNSP(START+2,OFFSET-2,"Inpatient Annual Max.: $"_$J($P(IBCABD4,U,2),7))
	D SET^IBCNSP(START+3,OFFSET+6,"Lifetime Max.: $"_$J($P(IBCABD4,U,3),7))
	D SET^IBCNSP(START+4,OFFSET+1,"Room and Board (%): "_$J($P(IBCABD4,U,4),8)_"%")
	D SET^IBCNSP(START+5,OFFSET-4,"Other Inpt. Charges (%): "_$J($P(IBCABD4,U,5),8)_"%")
	Q
USERINF	;
	S IBCABD1=$G(^IBA(355.4,+IBCAB,1))
	S IBDUZ=$P(IBCABD1,U,2)
	S START=43,OFFSET=3
	D SET^IBCNSP(START,OFFSET+1," User Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+8,"Entered By: "_$P($G(^VA(200,+IBDUZ,0)),U))
	D SET^IBCNSP(START+2,OFFSET+8,"Entered On: "_$$DAT1^IBOUTL($P(IBCABD1,U)))
	S IBDUZ=$P(IBCABD1,U,6)
	D SET^IBCNSP(START+3,OFFSET+3,"Last Updated By: "_$P($G(^VA(200,+IBDUZ,0)),U))
	D SET^IBCNSP(START+4,OFFSET+3,"Last Updated On: "_$$DAT1^IBOUTL($P(IBCABD1,U,5)))
	Q
ADDCOM	;
	;S START=12,OFFSET=4
	;D SET^IBCNSP(START,OFFSET+4," Comments ",IORVON,IORVOFF)
	;D SET^IBCNSP(START+1,OFFSET+2,""_$P(IBCABD1,U,8))
	Q

IBCNSA1
IBCNSA1	;ALB/NLR - ANNUAL BENEFITS EDIT1 ; 27-MAY-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBCNSA
	;
EN	; -- entry point from ibcnsa
	D OUTP,INP,MEN,HOME,REHAB,IV
	Q
	;
MEN	;
	S START=23,OFFSET=42
	D SET^IBCNSP(START,OFFSET+1," Mental Health Outpatient ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+2,"MH Opt. Max Days/Year: "_$J($P(IBCABD2,U,14),8))
	D SET^IBCNSP(START+2,OFFSET+3,"MH Lifetime Opt. Max: $"_$J($P(IBCABD2,U,5),7))
	D SET^IBCNSP(START+3,OFFSET+5,"MH Annual Opt. Max: $"_$J($P(IBCABD2,U,6),7))
	D SET^IBCNSP(START+4,OFFSET+1,"Mental Health Opt. (%): "_$J($P(IBCABD2,U,11),8)_"%")
	;D SET^IBCNSP(START+5,OFFSET+1,"Adult Day Health Care?: "_$J($$YN^IBCNSM($P(IBCABD2,U,17)),8))
	;
	S START=23,OFFSET=2
	D SET^IBCNSP(START,OFFSET+2," Mental Health Inpatient ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"MH Inpt. Max Days/Year: "_$J($P(IBCABD5,U,14),8))
	D SET^IBCNSP(START+2,OFFSET+1,"MH Lifetime Inpt. Max: $"_$J($P(IBCABD5,U,5),7))
	D SET^IBCNSP(START+3,OFFSET+3,"MH Annual Inpt. Max: $"_$J($P(IBCABD5,U,6),7))
	D SET^IBCNSP(START+4,OFFSET-1,"Mental Health Inpt. (%): "_$J($P(IBCABD5,U,11),8)_"%")
	Q
	;
OUTP	;
	;
	N OFFSET,START
	S IBCABD2=$G(^IBA(355.4,IBCAB,2))
	S START=15,OFFSET=3
	D SET^IBCNSP(START,OFFSET+31," Outpatient ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+4,"Annual Deductible: $"_$J($P(IBCABD2,U,1),7))
	D SET^IBCNSP(START+2,OFFSET+1,"Per Visit Deductible: $"_$J($P(IBCABD2,U,2),7))
	D SET^IBCNSP(START+3,OFFSET+9,"Lifetime Max: $"_$J($P(IBCABD2,U,3),7))
	D SET^IBCNSP(START+4,OFFSET+11,"Annual Max: $"_$J($P(IBCABD2,U,4),7))
	D SET^IBCNSP(START+5,OFFSET+12,"Visit (%): "_$J($P(IBCABD2,U,9),8)_"%")
	D SET^IBCNSP(START+6,OFFSET+2,"Max Visits Per Year: "_$J($P(IBCABD2,U,15),8))
	S OFFSET=46
	D SET^IBCNSP(START+1,OFFSET+7,"Surgery (%): "_$J($P(IBCABD2,U,13),8)_"%")
	D SET^IBCNSP(START+2,OFFSET+5,"Emergency (%): "_$J($P(IBCABD2,U,10),8)_"%")
	D SET^IBCNSP(START+3,OFFSET+2,"Prescription (%): "_$J($P(IBCABD2,U,12),8)_"%")
	D SET^IBCNSP(START+4,OFFSET-4,"Adult Day Health Care?: "_$J($$YN^IBCNSM($P(IBCABD2,U,17)),8))
	D SET^IBCNSP(START+5,OFFSET+2,"Dental Cov. Type: "_$J($$EXPAND^IBTRE(355.4,2.07,$P(IBCABD2,U,7)),6))
	G:'$P(IBCABD2,U,7) OPTQ
	N IBX
	S IBX=$S($P($G(IBCABD2),U,7)=1:"           Dental Cov.: $",$P($G(IBCABD2),U,7)=2:"       Dental Cov. (%): ",1:"Dental Coverage $ or %: ")_$J($P(IBCABD2,U,8),$S($P($G(IBCABD2),U,7)=1:7,1:8))_$S($P($G(IBCABD2),U,7)=2:"%",1:"")
	D SET^IBCNSP(START+6,OFFSET-4,IBX)
OPTQ	Q
INP	;
	S IBCABD5=$G(^IBA(355.4,IBCAB,5))
	S START=8,OFFSET=3
	D SET^IBCNSP(START,OFFSET+32," Inpatient ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+4,"Annual Deductible: $"_$J($P(IBCABD5,U),7))
	D SET^IBCNSP(START+2,OFFSET,"Per Admis. Deductible: $"_$J($P(IBCABD5,U,2),7))
	D SET^IBCNSP(START+3,OFFSET+3,"Inpt. Lifetime Max: $"_$J($P(IBCABD5,U,3),7))
	D SET^IBCNSP(START+4,OFFSET+5,"Inpt. Annual Max: $"_$J($P(IBCABD5,U,4),7))
	D SET^IBCNSP(START+5,OFFSET+5,"Room & Board (%): "_$J($P(IBCABD5,U,9),8)_"%")
	S OFFSET=41
	D SET^IBCNSP(START+1,OFFSET,"Drug/Alcohol Lifet. Max: $"_$J($P(IBCABD5,U,7),7))
	D SET^IBCNSP(START+2,OFFSET,"Drug/Alcohol Annual Max: $"_$J($P(IBCABD5,U,8),7))
	D SET^IBCNSP(START+3,OFFSET+7,"Nursing Home (%): "_$J($P(IBCABD5,U,10),8)_"%")
	D SET^IBCNSP(START+4,OFFSET,"Other Inpt. Charges (%): "_$J($P(IBCABD5,U,12),8)_"%")
	Q
	;
HOME	;
	;
	S IBCABD3=$G(^IBA(355.4,IBCAB,3))
	S START=29,OFFSET=3
	D SET^IBCNSP(START,OFFSET+1," Home Health Care ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+8,"Care Level: "_$J($$EXPAND^IBTRE(355.4,3.01,$P(IBCABD3,U)),6))
	D SET^IBCNSP(START+2,OFFSET+3,"Visits Per Year: "_$J($P(IBCABD3,U,2),8))
	D SET^IBCNSP(START+3,OFFSET,"Max. Days Per Year: "_$J($P(IBCABD3,U,3),8))
	D SET^IBCNSP(START+4,OFFSET,"Med. Equipment (%): "_$J($P(IBCABD3,U,4),8)_"%")
	D SET^IBCNSP(START+5,OFFSET+2,"Visit Definition: "_$P(IBCABD3,U,5))
	Q
	;
REHAB	;
	;
	S START=37,OFFSET=1
	D SET^IBCNSP(START,OFFSET+4,"      Rehabilitation ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"        OT Visits/Yr: "_$J($P(IBCABD3,U,6),8))
	D SET^IBCNSP(START+2,OFFSET,"        PT Visits/Yr: "_$J($P(IBCABD3,U,7),8))
	D SET^IBCNSP(START+3,OFFSET,"        ST Visits/Yr: "_$J($P(IBCABD3,U,8),8))
	D SET^IBCNSP(START+4,OFFSET,"Med Cnslg. Visits/Yr: "_$J($P(IBCABD3,U,9),8))
	Q
	;
IV	;
	;
	S START=37,OFFSET=43
	D SET^IBCNSP(START,OFFSET+1," IV Management ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET-1,"    IV Infusion Opt?: "_$J($$YN^IBCNSM($P(IBCABD4,U,6)),8))
	D SET^IBCNSP(START+2,OFFSET-1,"   IV Infusion Inpt?: "_$J($$YN^IBCNSM($P(IBCABD4,U,7)),8))
	D SET^IBCNSP(START+3,OFFSET-1," IV Antibiotics Opt?: "_$J($$YN^IBCNSM($P(IBCABD4,U,8)),8))
	D SET^IBCNSP(START+4,OFFSET-1,"IV Antibiotics Inpt?: "_$J($$YN^IBCNSM($P(IBCABD4,U,9)),8))
	Q
EXIT	Q

IBCNSA2
IBCNSA2	;ALB/NLR - ANNUAL BENEFITS EDIT, DIE CALLS ; 28-MAY-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ED(IBT)	;
	D FULL^VALM1 W !!
	D SAVEAB
	L +^IBA(355.4,+IBCAB):5 I '$T D LOCKED^IBTRCD1 G EDQ
	S DIE="^IBA(355.4,",DA=IBCAB
	S DR=IBT
	D ^DIE K DIE,DIC,DA,DR
	D COMP
	I IBDIF=1 D EDUP
	D EXIT
	L -^IBA(355.4,+IBCAB)
EDQ	Q
	;
SAVEAB	;
	K ^TMP($J,"IBAB")
	S ^TMP($J,"IBAB",355.4,IBCAB,0)=$G(^IBA(355.4,IBCAB,0))
	S ^TMP($J,"IBAB",355.4,IBCAB,1)=$G(^IBA(355.4,IBCAB,1))
	S ^TMP($J,"IBAB",355.4,IBCAB,2)=$G(^IBA(355.4,IBCAB,2))
	S ^TMP($J,"IBAB",355.4,IBCAB,3)=$G(^IBA(355.4,IBCAB,3))
	S ^TMP($J,"IBAB",355.4,IBCAB,4)=$G(^IBA(355.4,IBCAB,4))
	S ^TMP($J,"IBAB",355.4,IBCAB,5)=$G(^IBA(355.4,IBCAB,5))
	Q
COMP	;
	S IBDIF=0
	I $G(^IBA(355.4,IBCAB,0))'=^TMP($J,"IBAB",355.4,IBCAB,0) S IBDIF=1 Q
	I $G(^IBA(355.4,IBCAB,1))'=^TMP($J,"IBAB",355.4,IBCAB,1) S IBDIF=1 Q
	I $G(^IBA(355.4,IBCAB,2))'=^TMP($J,"IBAB",355.4,IBCAB,2) S IBDIF=1 Q
	I $G(^IBA(355.4,IBCAB,3))'=^TMP($J,"IBAB",355.4,IBCAB,3) S IBDIF=1 Q
	I $G(^IBA(355.4,IBCAB,4))'=^TMP($J,"IBAB",355.4,IBCAB,4) S IBDIF=1 Q
	I $G(^IBA(355.4,IBCAB,5))'=^TMP($J,"IBAB",355.4,IBCAB,5) S IBDIF=1 Q
	Q
EDUP	;  -- enter date and user if editing has taken place
	S DIE="^IBA(355.4,",DA=IBCAB
	S DR="1.05///NOW;1.06////"_DUZ
	D ^DIE K DIE,DIC,DA,DR
	Q
CY	;
	D FULL^VALM1 W !!
	S IBYR1=IBYR K IBYR D INIT^IBCNSA
	I $D(VALMQUIT) S IBYR=IBYR1 K VALMQUIT D EXITRP
	I IBYR=IBYR1 D
	.K IBYR1,VALMQUIT D EXITRP
	E  D EXIT
	Q
	;
	;
EXIT	D HDR^IBCNSA("Annual Benefits"),BLD^IBCNSA
EXITRP	K VALMQUIT S VALMBCK="R"
	Q
	;
DATECHK	; -- called from input transform from annual benefits (355.4,.01)
	;    make sure benefit years do not overlap
	;    kills x if not okay
	;
	Q:'$D(X)
	N BEFORE,AFTER,MINUS,PLUS,ZZ
	S MINUS=X-10000
	S PLUS=X+10000
	I '$G(IBCPOL) S IBCPOL=$P($G(^IBA(355.4,$G(DA),0)),"^",2)
	Q:'IBCPOL
	;
	; -- find most recent entry
	S ZZ=-$O(^IBA(355.4,"APY",IBCPOL,""))
	I 'ZZ Q  ;if not prior entires quit.
	;
	; -- if x>most recent entry
	I X>ZZ K:X<(ZZ+10000) X Q
	;
	Q:'$D(X)
	;
	; -- find policy date prior to (before or less than) x
	S BEFORE=-$O(^IBA(355.4,"APY",+IBCPOL,-X))
	S AFTER=-$O(^IBA(355.4,"APY",+IBCPOL,-PLUS))
	;
	I 'BEFORE D  Q
	.I AFTER=X Q
	.I AFTER,AFTER>X K X
	.Q
	;
	; -- if it exists,not exactly one year,if within one year of prior year
	I BEFORE D  Q
	.I BEFORE=MINUS Q
	.I BEFORE>MINUS K X Q
	.I X=AFTER Q
	.I AFTER>X K X
	.Q 
	;
	Q

IBCNSBL
IBCNSBL	;ALB/AAS - NEW INSURANCE POLICY BULLETIN ; 29-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	N IBP,START,END,X,Y,I,J,VAIN,VAINDT,VA,DA,DR,DIE,DIC,INPT,OPT,DGPM,IBINS,IBX,IBTADD
	;  
	Q:'$D(IBEVTA)!('$D(IBEVT1))!('$D(IBCDFN))
	;
	S IBP=$$PT^IBEFUNC(DFN),(OPT,INPT)=0
	;
	; -- set starting date = latest of jan 1 of prior year, or effective date,
	S START=$E(DT,1,3)-1,START=START_"0101"
	I $P(IBEVTA,"^",8),$P(IBEVTA,"^",8)>START S START=$P(IBEVTA,"^",8)
	;
	S END=DT+.9
	;
	S X=$O(^DPT(DFN,"S",START)) I X,(X'>(END+.24)) S OPT=1
	S X=$O(^DGPM("APTT1",DFN,START)) I X,(X'>(END+.24)) S INPT=1
	I $G(^DPT(DFN,.1))'="" D  S INPT=1
	.;
	.;see if current admission is in claims tracking
	.S VAINDT=DT+.24 D INP^VADPT
	.N IBMVAD,IBTRKR,IBRANDOM,DGPMA
	.S IBMVAD=+VAIN(1),DGPMA=$G(^DGPM(+IBMVAD,0))
	.I DFN=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBMVAD,0)),0)),"^",2) Q  ; quit if already in claims tracking
	.S IBTRKR=$G(^IBE(350.9,1,6))
	.I $P(IBTRKR,"^",2)=2 D ADM^IBTUTL(IBMVAD,$E(+DGPMA,1,12),0,$P(DGPMA,"^",27)) S IBTADD=1
	.I $P(IBTRKR,"^",2)=1,$$INSURED^IBCNS1(DFN,+DGPMA) D ADM^IBTUTL(IBMVAD,$E(+DGPMA,1,12),0,$P(DGPMA,"^",27)) S IBTADD=1
	.Q
	;
	S VAINDT=START+.24 D INP^VADPT I $G(VAIN(1)) S INPT=1
	I 'OPT,'INPT G BQ
	;
	D BULL^IBCNSBL1
BQ	Q

IBCNSBL1
IBCNSBL1	;ALB/AAS - NEW INSURANCE POLICY BULLETIN ; 29-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BULL	; -- send bulletin
	;
	S XMSUB="New Insurance Policy For "_$E($P(IBP,"^"),1,20)_"   Pt. Id: "_$P(IBP,"^",2)
	S IBT(1)=" A new insurance policy has been added for:"
	S IBT(2)=" Patient: "_$E($P(IBP,"^")_"               ",1,25)_"  PT. ID: "_$P(IBP,"^",2)
	S IBT(3)=""
	S IBT(4)=" New Policy: "
	S IBCNT=4 D HDR,NPOL
	S IBCNT=IBCNT+1,IBT(IBCNT)=""
	S IBCNT=IBCNT+1,IBT(IBCNT)=" Previous Policy(s): "
	D HDR,OPOL
	S IBCNT=IBCNT+1,IBT(IBCNT)=""
	S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Inpt. Care: "
	D INPT
	S IBCNT=IBCNT+1,IBT(IBCNT)=""
	S IBCNT=IBCNT+1,IBT(IBCNT)=" Possible billable Opt. Care: "
	D OPT
	S IBCNT=IBCNT+1,IBT(IBCNT)=""
	S IBCNT=IBCNT+1,IBT(IBCNT)=" Added by: "_$P($G(^VA(200,+$P(IBEVT1,"^",2),0)),"^")
	S IBCNT=IBCNT+1,IBT(IBCNT)="       on: "_$$DAT1^IBOUTL(+IBEVT1,"2P")
	S IBCNT=IBCNT+1,IBT(IBCNT)="   Option: "
	I $D(XQY0) S IBT(IBCNT)=IBT(IBCNT)_$P($G(XQY0),"^",2)
	I $D(ZTQUEUED),$P($G(XQY0),"^",2)="" S IBT(IBCNT)=IBT(IBCNT)_"Queued Job - "_$G(ZTDESC)
	D SEND
BULLQ	Q
	;
NPOL	; -- set up new policy
	S IBCNT=IBCNT+1
	S IBT(IBCNT)=$$D1(IBEVTA)
	Q
	;
OPOL	; -- set up old policies
	N J,X,IBPCNT
	S J=0 F  S J=$O(^DPT(DFN,.312,J)) Q:'J  I J'=IBCDFN S X=$G(^DPT(DFN,.312,J,0)) S IBCNT=IBCNT+1,IBT(IBCNT)=$$D1(X) S IBPCNT=$G(IBPCNT)+1
	I $G(IBPCNT)<1 S IBCNT=IBCNT+1,IBT(IBCNT)="    No Previous Policies On file!"
	Q
	;
SEND	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMN=0
	S IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,4)),"^",4),0)),"^")
	I IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
	D ^XMD
	K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
	Q
	;
HDR	; -- print standard header
	D HDR1("=",76)
	Q
	;
HDR1(CHAR,LENG)	; -- print header, specify character
	S IBCNT=IBCNT+1
	S IBT(IBCNT)="    Insurance Co.     Subscriber ID     Group       Holder  Effective Expires"
	S IBCNT=IBCNT+1,X="",$P(X,CHAR,LENG)=""
	S IBT(IBCNT)=X
	Q
	;
	;
D1(IBINS)	N X,IBX
	S IBX="" I '$G(IBINS) G DQ
	S IBX="    "_$E($S($D(^DIC(36,+IBINS,0)):$E($P(^(0),"^",1),1,16),1:"UNKNOWN")_"                 ",1,16)_"  "
	S IBX=IBX_$E($P(IBINS,"^",2)_"                ",1,16)_"  "
	S IBX=IBX_$E($$GRP^IBCNS($P(IBINS,"^",18))_"          ",1,10)_"  "
	S X=$P(IBINS,"^",6) S IBX=IBX_$E($S(X="v":"SELF",X="s":"SPOUSE",1:"OTHER")_"      ",1,8)
	S IBX=IBX_$E($$DAT1^IBOUTL($P(IBINS,"^",8))_"          ",1,10)_$$DAT1^IBOUTL($P(IBINS,"^",4))
DQ	Q IBX
	;
OPT	; -- list opt treatment (sched appoints only)
	N CNT S CNT=0
	S OPT=START
	F  S OPT=$O(^DPT(DFN,"S",OPT)) Q:'OPT!(OPT>END)  D
	.S IBCNT=IBCNT+1
	.Q:$P(^DPT(DFN,"S",OPT,0),"^",2)]""  ; can't be canceled, inpatient, etc
	.S IBT(IBCNT)="   Outpatient Visit on "_$$DAT1^IBOUTL(OPT,"2P")_" to "_$P($G(^SC(+$G(^DPT(DFN,"S",OPT,0)),0)),"^")
	.S CNT=CNT+1
	I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Scheduled appointments found."
	Q
	;
INPT	; -- list inpt. treatment (admissions only)
	N CNT S CNT=0
	I $G(^DPT(DFN,.1))]"" S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Currently an Inpatient on "_$G(^DPT(DFN,.1))
	I $G(IBTADD) S IBCNT=IBCNT+1,IBT(IBCNT)="    Entry Added to Claims Tracking for Current Admission."
	I $G(VAIN(1)) S CNT=CNT+1,IBCNT=IBCNT+1,IBT(IBCNT)="    Previously an inpatient on ward "_$P(VAIN(4),"^",2)_" on "_$$DAT1^IBOUTL($P(START,"."))
	S INPT=START F  S INPT=$O(^DGPM("APTT1",DFN,INPT)) Q:'INPT!(INPT>END)  S DGPM=0 F  S DGPM=$O(^DGPM("APTT1",DFN,INPT,DGPM)) Q:'DGPM  D
	.Q:'$G(^DGPM(DGPM,0))
	.S IBCNT=IBCNT+1
	.S IBT(IBCNT)="    Inpatient Admission on "_$$DAT1^IBOUTL(+^DGPM(DGPM,0),"2P")
	.S CNT=CNT+1
	I 'CNT S IBCNT=IBCNT+1,IBT(IBCNT)="    No Admissions found."
	Q

IBCNSC
IBCNSC	;ALB/NLR - INSURANCE COMPANY EDIT ; 12-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; -- main entry point for IBCNS INSURANCE COMPANY, IBCNS VIEW INS CO
	K VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),IBCNS
	S IBCHANGE="OKAY"
	I '$G(IBVIEW) D EN^VALM("IBCNS INSURANCE COMPANY") G ENQ
	D EN^VALM("IBCNS VIEW INS CO")
ENQ	Q
	;
HDR	; -- header code
	S VALMHDR(1)="Insurance Company Information for: "_$E($P(^DIC(36,IBCNS,0),"^"),1,30)
	S VALMHDR(2)="Type of Company: "_$E($P($G(^IBE(355.2,+$P($G(^DIC(36,+IBCNS,0)),"^",13),0)),"^"),1,20)_"                     Currently "_$S(+($P($G(^DIC(36,+IBCNS,0)),"^",5)):"Inactive",1:"Active")
	Q
	;
INIT	; -- init variables and list array
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	I '$D(IBCNS) D INSCO Q:$D(VALMQUIT)
	D BLD,HDR
	Q
BLD	; -- list builder
	K ^TMP("IBCNSC",$J)
	D KILL^VALM10()
	F I=1:1:65 D BLANK(.I)
	S VALMCNT=61
	D PARAM^IBCNSC01,MAIN^IBCNSC01,CLAIMS1^IBCNSC0,CLAIMS2^IBCNSC0,PRESCR^IBCNSC1,APPEALS,INQUIRY,REMARKS^IBCNSC01,SYN^IBCNSC01
	S VALMCNT=61+$G(IBLCNT)
	Q
	;
APPEALS	;
	N OFFSET,START,IBCNS14,IBADD
	S IBCNS14=$$ADDRESS^IBCNSC0(IBCNS,.14,7)
	S START=40,OFFSET=2
	D SET^IBCNSP(START,OFFSET+25," Appeals Office Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS14,"^",7),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS14,"^",1))
	D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS14,"^",2))
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS14,"^",3)) S IBADD=1
	D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS14,"^",4),1,15)_$S($P(IBCNS14,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS14,"^",5),0)),"^",2)_" "_$E($P(IBCNS14,"^",6),1,5))
	D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS14,"^",8))
	D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS14,"^",9))
	Q
	;
INQUIRY	;
	;
	N OFFSET,START,IBCNS15,IBADD
	S IBCNS15=$$ADDRESS^IBCNSC0(IBCNS,.15,8)
	S START=47,OFFSET=2
	D SET^IBCNSP(START,OFFSET+25," Inquiry Office Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS15,"^",7),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS15,"^"))
	D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS15,"^",2))
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS15,"^",3)) S IBADD=1
	D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS15,"^",4),1,15)_$S($P(IBCNS15,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS15,"^",5),0)),"^",2)_" "_$E($P(IBCNS15,"^",6),1,5))
	D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS15,"^",8))
	D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS15,"^",9))
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K VALMQUIT,IBCNS,IBCHANGE
	D CLEAN^VALM10
	Q
	;
INSCO	; -- select insurance company
	I '$D(IBCNS) D  G:$D(VALMQUIT) INSCOQ
	.S DIC="^DIC(36,",DIC(0)="AEQMZ"
	.I '$G(IBVIEW) S DLAYGO=36,DIC(0)=DIC(0)_"L"
	.D ^DIC K DIC
	.S IBCNS=+Y
	I $G(IBCNS)<1 K IBCNS S VALMQUIT="" G INSCOQ
INSCOQ	;
	K DIC
	Q
	;
BLANK(LINE)	; -- Build blank line
	D SET^VALM10(.LINE,$J("",80))
	Q
CC	; -- change insurance company
	S IBCNS1=IBCNS D INSCO
	Q

IBCNSC0
IBCNSC0	;ALB/NLR - INSURANCE COMPANY EDIT -  ; 12-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CLAIMS1	; display Inpatient Claims information
	N OFFSET,START,IBCNS12,IBADD
	S START=21,OFFSET=2
	D SET^IBCNSP(START,OFFSET+20," Inpatient Claims Office Information ",IORVON,IORVOFF)
	S IBCNS12=$$ADDRESS(IBCNS,.12,5)
	D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS12,"^",7),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS12,"^",1))
	D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS12,"^",2))
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS12,"^",3)) S IBADD=1
	D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS12,"^",4),1,15)_$S($P(IBCNS12,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS12,"^",5),0)),"^",2)_" "_$E($P(IBCNS12,"^",6),1,5))
	D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS12,"^",8))
	D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS12,"^",9))
	Q
	;
R1Q	Q
CLAIMS2	; display Outpatient Claims information
	;
	N OFFSET,START,IBCNS16,IBADD
	S START=27,OFFSET=2
	D SET^IBCNSP(START,OFFSET+20," Outpatient Claims Office Information ",IORVON,IORVOFF)
	S IBCNS16=$$ADDRESS(IBCNS,.16,6)
	D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS16,"^",7),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS16,"^",1))
	D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS16,"^",2))
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS16,"^",3)) S IBADD=1
	D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS16,"^",4),1,15)_$S($P(IBCNS16,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS16,"^",5),0)),"^",2)_" "_$E($P(IBCNS16,"^",6),1,5))
	D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS16,"^",8))
	D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS16,"^",9))
	Q
	;
ADDRESS(INS,NODE,PH)	; -- generic find address
	;
	N IBX,INSSAVE,IBPH,IBFX,IBCNT,IBA
	S IBX="" ;S IBPH="",IBFX="",IBA=""
	;
REDO	; gather insurance carrier's main address information 
	S IBX=$G(^DIC(36,+INS,.11)),IBPH=$P($G(^DIC(36,+INS,.13)),"^",1),IBFX=$P(IBX,"^",9)
	;S IBCNT=$G(IBCNT)+1
	;
	; -- if process the same co. more than once you are in an infinite loop
	;I $D(IBCNT(IBCNS)) G ADDREQ
	;S IBCNT(IBCNS)=""
	;
	; -- gather address information from specific office (Claims, Appeals, Inquiry)
	;
	I $P($G(^DIC(36,+INS,+NODE)),"^",5) S IBX=$G(^DIC(36,+INS,+NODE)),IBPH=$P($G(^DIC(36,+INS,.13)),"^",PH),IBFX=$P($G(IBX),"^",9)
	I $P($G(^DIC(36,+INS,+NODE)),"^",7) S INSSAVE=INS,INS=$P($G(^DIC(36,+INS,+NODE)),"^",7) I INSSAVE'=INS G REDO
	;
ADDRESQ	; concatenate company name, address, phone and fax 
	S $P(IBA,"^",1,6)=$P($G(IBX),"^",1,6)
	S $P(IBA,"^",7)=INS
	S $P(IBA,"^",8)=IBPH
	S $P(IBA,"^",9)=IBFX
ADDREQ	Q IBA

IBCNSC01
IBCNSC01	;ALB/NLR - INSURANCE COMPANY EDIT -  ; 21-OCT-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PARAM	; -- Insurance company parameters region
	N OFFSET,START,IBCNS0,IBCNS03,IBCNS06,IBCNS08,IBCNS13
	S IBCNS0=$G(^DIC(36,+IBCNS,0))
	S IBCNS03=$P(IBCNS0,"^",3),IBCNS06=$P(IBCNS0,"^",6),IBCNS08=$P(IBCNS0,"^",8)
	S IBCNS13=$G(^DIC(36,+IBCNS,.13))
	S START=1,OFFSET=2
	D SET^IBCNSP(START,OFFSET+25," Billing Parameters ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET," Signature Required?: "_$S(+IBCNS03:"YES",1:"NO"))
	D SET^IBCNSP(START+2,OFFSET,"          Reimburse?: "_$E($$EXPAND^IBTRE(36,1,$P(IBCNS0,"^",2)),1,21))
	D SET^IBCNSP(START+3,OFFSET,"   Mult. Bedsections: "_$S(+IBCNS06:"YES",1:"NO"))
	D SET^IBCNSP(START+4,OFFSET,"    Diff. Rev. Codes: "_$P(IBCNS0,"^",7))
	D SET^IBCNSP(START+5,OFFSET,"      One Opt. Visit: "_$S(+IBCNS08:"YES",1:"NO"))
	D SET^IBCNSP(START+6,OFFSET," Amb. Sur. Rev. Code: "_$P(IBCNS0,"^",9))
	D SET^IBCNSP(START+7,OFFSET," Rx Refill Rev. Code: "_$P(IBCNS0,"^",15))
	D SET^IBCNSP(START+8,OFFSET,"   Filing Time Frame: "_$P(IBCNS0,"^",12))
	N START,OFFSET
	S START=2,OFFSET=45
	D SET^IBCNSP(START,OFFSET,"  Attending Phys. ID: "_$E($P(IBCNS0,"^",10),1,22))
	D SET^IBCNSP(START+1,OFFSET,"  Hosp. Provider No.: "_$E($P(IBCNS0,"^",11),1,15))
	D SET^IBCNSP(START+2,OFFSET,"   Primary Form Type: "_$$EXPAND^IBTRE(36,.14,$P(IBCNS0,"^",14)))
	D SET^IBCNSP(START+3,OFFSET+7,"Billing Phone: "_$P(IBCNS13,"^",2))
	D SET^IBCNSP(START+4,OFFSET+2,"Verification Phone: "_$P(IBCNS13,"^",4))
	D SET^IBCNSP(START+5,OFFSET+2,"Precert Comp. Name: "_$P($G(^DIC(36,+$P(IBCNS13,"^",9),0)),"^",1))
	D SET^IBCNSP(START+6,OFFSET+7,"Precert Phone: "_$$PHONE(IBCNS13))
	Q
	;
PHONE(IBCNS13)	; -- Compute precert company phone
	N IBX,IBSAVE,IBCNT S IBX=""
	I '$P(IBCNS13,"^",9) S IBX=$P(IBCNS13,"^",3) G PHONEQ
REDOX	S IBSAVE=+$P(IBCNS13,"^",9)
	S IBCNT=$G(IBCNT)+1
	; -- if you process the same co. more than once you are in an infinite loop
	I $D(IBCNT(IBCNS)) G PHONEQ
	S IBCNT(IBCNS)=""
	S IBCNS13=$G(^DIC(36,+$P(IBCNS13,"^",9),.13))
	S IBX=$P(IBCNS13,"^") S:$L($P(IBCNS13,"^",3)) IBX=$P(IBCNS13,"^",3)
	; -- if process the same co. more than once you are in an infinite loop
	I $P(IBCNS13,"^",9),$P(IBCNS13,"^",9)'=IBSAVE G REDOX
PHONEQ	Q IBX
	;
MAIN	; -- Insurance company main address
	N OFFSET,START,IBCNS11,IBADD
	S IBCNS11=$G(^DIC(36,+IBCNS,.11))
	S IBCNS13=$G(^DIC(36,+IBCNS,.13))
	S START=14,OFFSET=25
	D SET^IBCNSP(START,OFFSET," Main Mailing Address ",IORVON,IORVOFF)
	N OFFSET S OFFSET=2
	D SET^IBCNSP(START+1,OFFSET,"       Street: "_$P(IBCNS11,"^",1)) S IBADD=1
	D SET^IBCNSP(START+2,OFFSET,"     Street 2: "_$P(IBCNS11,"^",2)) S IBADD=2
	D SET^IBCNSP(START+3,OFFSET,"     Street 3: "_$P(IBCNS11,"^",3)) S IBADD=3
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"   City/State: "_$E($P(IBCNS11,"^",4),1,15)_$S($P(IBCNS11,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS11,"^",5),0)),"^",2)_" "_$E($P(IBCNS11,"^",6),1,5))
	D SET^IBCNSP(START+2,OFFSET,"        Phone: "_$P(IBCNS13,"^",1))
	D SET^IBCNSP(START+3,OFFSET,"          Fax: "_$P(IBCNS11,"^",9))
	Q
	;
REMARKS	;
	;
	N OFFSET,START,IBCNS0
	S START=53,OFFSET=2
	;
	D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
	S (IBLCNT,IBI)=0 F  S IBI=$O(^DIC(36,+IBCNS,11,IBI)) Q:IBI<1  D
	.S IBLCNT=IBLCNT+1
	.D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^DIC(36,+IBCNS,11,IBI,0)),1,80))
	;. S VALMCNT=VALMCNT+1
	;
	;S IBCNS0=$G(^DIC(36,+IBCNS,0))
	;D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
	;D SET^IBCNSP(START+1,OFFSET,"  "_$P(IBCNS0,"^",12))
	Q
	;
SYN	;
	N OFFSET,START,IBSN,SYN
	S START=57+$G(IBLCNT),OFFSET=2
	;F I=START:1:START+8 D BLANK^IBCNSC(.I)
	D SET^IBCNSP(START,OFFSET," Synonyms ",IORVON,IORVOFF)
	S SYN="" F I=1:1:8 S SYN=$O(^DIC(36,+IBCNS,10,"B",SYN)) Q:SYN=""  D SET^IBCNSP(START+I,OFFSET,$S(I>7:"  ...edit to see more...",1:"  "_SYN)) S IBLCNT=IBLCNT+1
	;S IBSN=0 F I=1:1:8 S IBSN=+$O(^DIC(36,+IBCNS,10,IBSN)) Q:'IBSN  S SYN=^DIC(36,+IBCNS,10,IBSN,0) D SET^IBCNSP(START+I,OFFSET,$S(I>7:"  ...edit to see more...",1:"  "_SYN))
	Q

IBCNSC1
IBCNSC1	;ALB/NLR - IBCNS INSURANCE COMPANY ; 23-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSC
	;
AI	; -- (In)Activate Company
	D FULL^VALM1 W !!
	I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
	D ^IBCNSC2
	G EXIT
CC	; -- Change Insurance Company
	D FULL^VALM1 W !!
	S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
	I $D(VALMQUIT) S IBCNS=IBCNS1 K VALMQUIT
	D:IBCNS'=IBCNS1
	K IBCNS1,VALMQUIT
	G EXIT
EA	; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
	D FULL^VALM1 W !!
	D MAIN
	;
	; -- was company deleted
	I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
	;
EXIT	;
	D HDR^IBCNSC,BLD^IBCNSC
	S VALMBCK="R"
	Q
MAIN	; -- Call edit template
	L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
	N DIE S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE I $D(Y) S IB("^")=1
	L -^DIC(36,+IBCNS)
MAINQ	Q
	;
SORRY	; -- can't inactivate, don't have key
	W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
	Q
PRESCR	;
	N OFFSET,START,IBCNS18,IBADD
	S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
	S START=34,OFFSET=2
	D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
	D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
	N OFFSET S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
	D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
	D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
	D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
	Q

IBCNSC2
IBCNSC2	;ALB/NLR - INACTIVATE AND REPOINT INS STUFF ; 20-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
MAIN	; -- main flow control
	;
	N IBQUIT,DFN
	S IBQUIT=0
	D START D:'IBQUIT AP I ('IBQUIT),(+IBV=1) D RPTASK^IBCNSC3
	G EXIT
	;
START	; -- activate or inactivate insurance co. if necessary
	;
	S IBV=$P(^DIC(36,IBCNS,0),U,5),IBV1=IBV,IBN=$P(^DIC(36,IBCNS,0),U)
	S IBA="ACTIVE",IBB="ACTIVATE",IBVER=0 I IBV S IBA="IN"_IBA
	I 'IBV S IBB="IN"_IBB
	S DIR("B")="No"
	S DIR(0)="YO",DIR("A")=""_IBN_" IS CURRENTLY "_IBA_".  DO YOU WISH TO "_IBB_" IT"
	S DIR("?",1)="Company should be INACTIVE if it is no longer"
	S DIR("?",2)="active in your area.  This will disallow users"
	S DIR("?")="from selecting this insurance company entry."
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G R1Q
	I 'IBV,Y D VERIFY^IBCNSC3 G:IBQUIT R1Q S IBVER=1
	I 'IBVER,IBV,Y S IBV=0
	;
RESET	; -- change global if ins. co. activated or inactivated 
	;
	S:IBV1'=IBV $P(^DIC(36,IBCNS,0),U,5)=IBV
	;
	;
UPDATE	; -- update patient file
	;
	;I +IBV=0 S IBQUIT=1 G R1Q
	S DFN=0,IBC=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN!(IBC>20)  S IBC=IBC+1
	W !!,"THERE "_$S(IBC=0:"ARE NO PATIENTS",IBC=1:"IS ONE PATIENT",IBC>20:"ARE MORE THAN 20 PATIENTS",1:"ARE "_IBC_" PATIENTS")_" COVERED BY THIS "_$S(+IBV=0:"(ACTIVE)",+IBV=1:"(INACTIVE)")_" INSURANCE COMPANY...." I 'IBC D PAUSE^VALM1 S IBQUIT=1
	;
R1Q	Q
	;
AP	; -- ask if user wishes to print patients with inactivated insurance
	;
	S DIR(0)="YO",DIR("A")="DO YOU WISH TO PRINT "_$S(IBC=1:"THE NAME OF THIS PATIENT",1:"A LIST OF ALL OF THE PATIENTS"),DIR("B")="No"
	W !
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G R2Q
	G:'Y R2Q
	W !!,"*** You will need a 132 column printer for this report. ***",!
	;
DEV	; -- ask for device
	;
	S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 G R2Q
	I $D(IO("Q")) K IO("Q") S ZTRTN="PRINT^IBCNSC2",ZTSAVE("IB*")="",ZTDESC="PATIENTS WITH INACTIVATED INSURANCE" D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
	U IO
	;
PRINT	; -- print list of patients covered by inactivated insurance company
	;
	D BUILD^IBCNSC3
	D HDR^IBCNSC3
	S IBNA="" F  S IBNA=$O(^TMP($J,"IBCNSC2",IBNA)) Q:IBNA=""!(IBQUIT)  S DFN=0 F  S DFN=$O(^TMP($J,"IBCNSC2",IBNA,DFN)) Q:'DFN!(IBQUIT)  S IBD=0 F  S IBD=$O(^TMP($J,"IBCNSC2",IBNA,DFN,IBD)) Q:'IBD!(IBQUIT)  D
	.S IBST=^TMP($J,"IBCNSC2",IBNA,DFN,IBD)
	.I $Y>(IOSL-5) D PAUSE^IBOUTL D HDR^IBCNSC3
	.W !,?1,$E(IBNA,1,28),?31,$P(IBST,"^",1),?52,$$DAT1^IBOUTL($P(IBST,"^",2)),?63,$$DAT1^IBOUTL($P(IBST,"^",3)),?74,$P(IBST,"^",4),?95,$$EXPAND^IBTRE(2.312,6,$P(IBST,"^",5)),?106,$E($P(IBST,"^",6),1,24)
	I $E(IOST,1,2)["C-",('($G(IBV))) D PAUSE^VALM1
	;
R2Q	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
	;
EXIT	; -- kill variables -- IBCNS used by IBCNSC so don't want to kill here
	;
	K ^TMP($J,"IBCNSC2")
	K DIRUT,IBA,IBB,IBC,IBD,IBIND,IBNA,IBNO,IBPAG,IBR,IBST,IBV,IBVER,IBV1,IBCO,IBEF,IBEX,IBN,IBQUIT,X,Y
	Q

IBCNSC3
IBCNSC3	;ALB/NLR - INACTIVATE AND REPOINT INS STUFF1 ; 20-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
RPTASK	; -- ask if user wishes to repoint patients to active insurance company
	;
	N IBR
	S DIR(0)="YO",DIR("A")="DO YOU WISH TO REPOINT "_$S(IBC=1:"THIS PATIENT",1:"THESE PATIENTS")_" TO ANOTHER INSURANCE COMPANY",DIR("B")="No"
	W !
	D ^DIR K DIR G:'Y!$D(DIRUT) R3Q
	W !
	S DIC="^DIC(36,",DIC(0)="QEAZ",DIC("A")="REPOINT "_$S(IBC=1:"THIS PATIENT",1:"THESE PATIENTS")_" TO WHICH (ACTIVE) INSURANCE COMPANY: ",DIC("S")="I +$P(^(0),U,5)=0" D ^DIC K DIC G:$D(DIRUT) R3Q
	Q:+Y<1
	S IBR=+Y D SAVE
	;
REPOINT	; -- get parameters for call to DIE
	;
	S DFN=0 F  S DFN=$O(^DPT("AB",IBCNS,DFN)) Q:'DFN!('IBR)  D RPT1
	Q
RPT1	;
	S IBD=0 F  S IBD=$O(^DPT("AB",IBCNS,DFN,IBD)) Q:'IBD  D CALLDIE D RPT2
	Q
RPT2	;
	S IBN=0 F  S IBN=$O(^IBA(355.3,"B",IBCNS,IBN)) Q:'IBN  S DA=IBN D CALLDIE1
	;
R3Q	Q
	;
VERIFY	; -- allow user to change mind about inactivating company
	;
	W !
	S DIR("B")="No",DIR(0)="YO",DIR("A")="ARE YOU REALLY SURE YOU WISH TO INACTIVATE "_IBN
	S DIR("?",1)="You are about to change "_IBN_" to inactive."
	S DIR("?",2)="This means you will no longer be able to bill "
	S DIR("?")=""_IBN_" for its patients' charges."
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1
	S:Y IBV=1
	Q
	;
HDR	; -- print header
	;
	W:$E(IOST,1,2)["C-"!($G(IBPAG)) @IOF
	S IBPAG=$G(IBPAG)+1
	W !,?1,"PATIENTS WITH "_$S(+IBV=0:"ACTIVE",+IBV=1:"INACTIVATED")_" INSURANCE, "_$P(^DIC(36,IBCNS,0),U),?69,"PAGE ",IBPAG,?77,$$DAT1^IBOUTL(DT)
	W !?1,"PATIENT",?31,"PATIENT ID",?52,"EFF DATE",?63,"EXP DATE",?74,"SUBSCR ID",?95,"WHOSE INS",?106,"EMPLOYER",!
	W $TR($J(" ",IOM)," ","-")
	Q
	;
BUILD	; -- set list of patients in ^tmp array
	;
	K ^TMP($J,"IBCNSC2")
	S DFN=0
	F  S DFN=$O(^DPT("AB",IBCNS,DFN)),X=$$PT^IBEFUNC(DFN),IBNA=$P(X,U,1),IBNO=$P(X,U,2) S:IBNA="" IBNA="<Pt. "_DFN_" Name Missing>" Q:'DFN  S IBD=0 F  S IBD=$O(^DPT("AB",IBCNS,DFN,IBD)) Q:'IBD  D
	.S IBIND=$G(^DPT(DFN,.312,IBD,0))
	.;S IBIND2=$G(^DPT(DFN,.312,IBD,2))
	.I IBCNS'=$P(+IBIND,U) Q  ;bad x-ref,maybe later take action
	.D SET
	Q
	;
CALLDIE	; -- get name of active insurance co., repoint patients to same 
	;
	;S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBD,DR=".01////"_$G(IBR) D ^DIE K DIE
	S DIE="^DPT(DFN,.312,",DA(1)=DFN,DA=IBD,DR=".01///`"_$G(IBR) D ^DIE K DIE
	Q
CALLDIE1	; -- stuff .01 field of 355.3 with newly-assigned ins. co.
	;
	;S DIE="^IBA(355.3,",DA=IBN,DR=".01////"_$G(IBR) D ^DIE K DIE
	S DIE="^IBA(355.3,",DA=IBN,DR=".01///`"_$G(IBR) D ^DIE K DIE
	Q
	;
SET	; -- store data to be printed in temp array
	;
	; ^tmp($j,"ibcnsc2",patient name,dfn,ien of policy) =
	;    patient id^effective date^expiration date^subscriber id^whose insurance^employer
	;
	S IBWI=$P(IBIND,"^",6)
	S VAOA("A")=$S(IBWI="v":5,IBWI="s":6,1:5)
	D OAD^VADPT
	S EMPLOYER=VAOA(9)
	S ^TMP($J,"IBCNSC2",IBNA,DFN,IBD)=IBNO_"^"_$P(IBIND,"^",8)_U_$P(IBIND,"^",4)_"^"_$P(IBIND,"^",2)_"^"_IBWI_"^"_EMPLOYER
	Q
	;
SAVE	; -- save off field repointed too
	N DA,DR,DIC,DIE
	Q:'$G(IBR)
	S DA=IBCNS,DR=".16////"_IBR,DIE="^DIC(36," D ^DIE
	Q

IBCNSD
IBCNSD	;ALB/NLR - BENEFITS USED BY DATE EDIT ; 9-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; -- main entry point for IBCNS BENEFITS USED BY DATE
	K VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),DIC,%DT,IBYR
	S IBCHANGE="OKAY"
	D EN^VALM("IBCNS BENEFITS USED BY DATE")
ENQ	Q
	;
INIT	;
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	I '$G(IBCDFN) S IBCDFN=$P($G(IBPPOL),"^",4)
	I $G(IBYR)'?7N K IBYR
	I '$G(IBCPOL) D GETPOL^IBCNSA Q:$D(VALMQUIT)
	I '$G(IBYR) D GETYR2^IBCNSA Q:$D(VALMQUIT)
	S IBCBU=$$BU^IBCNSU1(DFN,IBCPOL,IBYR,IBCDFN,"")
	I '$G(IBCBU) S VALMQUIT="" Q
	S IBCBUD=$G(^IBA(355.5,+IBCBU,0))
	S IBCGN=$$GRP^IBCNS(IBCPOL)
	S IBPAT=1
	K ^TMP("IBCNSD",$J)
	D BLD
	Q
BLD	;
	S VALMCNT=28
	F I=1:1:30 D BLANK(.I)
	S IBCBUD=$G(^IBA(355.5,+IBCBU,0))
	S IBCBUD1=$G(^IBA(355.5,+IBCBU,1))
	D POL,OPT,INPT,USERINF,ADDCOM
	Q
POL	; --Policy information region
	N START,OFFSET
	S START=1,OFFSET=3
	D SET^IBCNSP(START,OFFSET+5," Policy Information ",IORVON,IORVOFF)
	;D SET^IBCNSP(START+1,OFFSET+12," Group: "_IBCGN)
	;D SET^IBCNSP(START+2,OFFSET+10," Patient: "_$P($G(^DPT($P(IBCBUD,U,2),0)),U,1))
	S Y=$P(IBCBUD,U,3)
	D D^DIQ
	S IBYE=Y
	;D SET^IBCNSP(START+3,OFFSET+13," Year: "_IBYE)
	D SET^IBCNSP(START+1,OFFSET+8," Deduct. Met?: "_$$YN^IBCNSM($P(IBCBUD,U,4)))
	;D SET^IBCNSP(START+1,OFFSET+5," Deduct. Met?: "_$S($P($G(IBCBUD),U,8)=1:"YES",$P($G(IBCBUD),U,4)=0:"NO",1:""))
	D SET^IBCNSP(START+2,OFFSET+4," Amt. of Ded. Met: "_$P(IBCBUD,U,5))
	D SET^IBCNSP(START+3,OFFSET+4," Pre-exist. Cond.: "_$P(IBCBUD,U,15))
	D SET^IBCNSP(START+4,OFFSET+1," Coord. of Ben. Data: "_$P(IBCBUD,U,16))
	Q
USERINF	;
	S IBDUZ=$P(IBCBUD1,U,2)
	N START,OFFSET
	S START=15,OFFSET=2
	D SET^IBCNSP(START,OFFSET+3," User Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+6,"Entered By: "_$P($G(^VA(200,+IBDUZ,0)),U))
	D SET^IBCNSP(START+2,OFFSET+6,"Entered On: "_$$DAT1^IBOUTL($P(IBCBUD1,U,1)))
	S IBDUZ=$P(IBCBUD1,U,6)
	D SET^IBCNSP(START+3,OFFSET+1,"Last Updated By: "_$P($G(^VA(200,+IBDUZ,0)),U))
	D SET^IBCNSP(START+4,OFFSET+1,"Last Updated On: "_$$DAT1^IBOUTL($P(IBCBUD1,U,5)))
	Q
	;
CONTACT	; -- Insurance Contact Information
	Q
	;
OPT	;
	N START,OFFSET
	S START=1,OFFSET=42
	D SET^IBCNSP(START,OFFSET+7," Outpatient Deductibles ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+13,"Deduct. Met?: "_$S($P($G(IBCBUD),U,8)=1:"YES",$P($G(IBCBUD),U,8)=0:"NO",1:""))
	D SET^IBCNSP(START+2,OFFSET+9,"Amt. of Ded. Met: "_$P(IBCBUD,U,9))
	D SET^IBCNSP(START+3,OFFSET+6,"MH Ded. (Opt.) Met?: "_$S($P($G(IBCBUD),U,13)=1:"YES",$P($G(IBCBUD),U,13)=0:"NO",1:""))
	D SET^IBCNSP(START+4,OFFSET+6,"Amt. of MH Ded. Met: "_$P(IBCBUD,U,14))
	D SET^IBCNSP(START+5,OFFSET+4,"Amt. Lifet. Max. Used: "_$P(IBCBUD,U,10))
	D SET^IBCNSP(START+6,OFFSET+1,"Amt. MH Lifet. Max. Used: "_$P(IBCBUD,U,20))
	Q
INPT	;
	N START,OFFSET
	S START=8,OFFSET=5
	D SET^IBCNSP(START,OFFSET+3," Inpatient Deductibles ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+7,"Deduct. Met?: "_$S($P($G(IBCBUD),U,6)=1:"YES",$P($G(IBCBUD),U,6)=0:"NO",1:""))
	D SET^IBCNSP(START+2,OFFSET+3,"Amt. of Ded. Met: "_$P(IBCBUD,U,7))
	D SET^IBCNSP(START+3,OFFSET-1,"MH Ded. (Inpt.) Met?: "_$S($P($G(IBCBUD),U,11)=1:"YES",$P($G(IBCBUD),U,11)=0:"NO",1:""))
	D SET^IBCNSP(START+4,OFFSET,"Amt. of MH Ded. Met: "_$P(IBCBUD,U,12))
	D SET^IBCNSP(START+5,OFFSET-1,"Amt. Lifet. Max Used: "_$P(IBCBUD,U,19))
	D SET^IBCNSP(START+6,OFFSET-4,"Amt. MH Lifet. Max Used: "_$P(IBCBUD,U,18))
	Q
ADDCOM	;
	N START,OFFSET
	S START=22,OFFSET=7
	D SET^IBCNSP(START,OFFSET," Comments ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET+3,""_$P(IBCBUD1,U,8))
	Q
	;
EXIT	;
	;
	K VALMQUIT,IBCHANGE,IBCAB,IBCABC,IBCABD,IBYR,IBCBU,IBCBUD,IBCBUD1,IBCGN
	D CLEAN^VALM10
	Q
BLANK(LINE)	;
	D SET^VALM10(.LINE,$J("",80))
	Q

IBCNSD1
IBCNSD1	;ALB/NLR - BU EDIT TEMPLATES ; 10-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ED(IBE)	;
	D SAVEBU
	S DIE="^IBA(355.5,",DA=IBCBU
	S DR=IBE
	L +^IBA(355.5,+IBCBU):5 I '$T D LOCKED^IBTRCD1 G EDQ
	D ^DIE K DIE
	D COMP
	I IBDIF=1 D EDUP
EDQ	L -^IBA(355.5,+IBCBU)
	D EXIT
	Q
	;
SAVEBU	;
	K ^TMP($J,"IBBU")
	S ^TMP($J,"IBBU",355.5,IBCBU,0)=$G(^IBA(355.5,IBCBU,0))
	S ^TMP($J,"IBBU",355.5,IBCBU,1)=$G(^IBA(355.5,IBCBU,1))
	Q
COMP	;
	S IBDIF=0
	I $G(^IBA(355.5,DA,0))'=^TMP($J,"IBBU",355.5,DA,0) S IBDIF=1 Q
	I $G(^IBA(355.5,DA,1))'=^TMP($J,"IBBU",355.5,DA,1) S IBDIF=1 Q
	Q
EDUP	; -- enter date and user if editing has taken place
	S DIE="^IBA(355.5,",DA=IBCBU
	S DR="1.05///NOW;1.06////"_DUZ
	D ^DIE K DIE
	Q
CY	;
	S IBYR1=IBYR K IBYR D INIT^IBCNSD
	I $D(VALMQUIT) S IBYR=IBYR1 K VALMQUIT D EXITRP
	I IBYR=IBYR1 D
	.K IBYR1,VALMQUIT D EXITRP
	E  D EXIT
	Q
	;
EXIT	I $G(IBDIF) D HDR^IBCNSA("Benefits Used"),BLD^IBCNSD
EXITRP	S VALMBCK="R"
	Q

IBCNSEH
IBCNSEH	;ALB/AAS - EXTENDED HELP FOR INSURANCE MANAGEMENT - 28-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
INS	; -- Help for Insurance Type
	Q:'$G(IBCNSEH)
	W !!,"The way we store and think about patient insurance information has been"
	W !,"dramatically changed.  We are separating out information that is specific"
	W !,"to an insurance company, specific to the patient, specific to the group plan,"
	W !,"specific to the annual benefits available, and the annual benefits aready"
	W !,"used."
	W !!,"To start, you must select the insurance company for the patient's policy.",!
	Q
PAT	; -- Help for entering patient specific information
	Q:'$G(IBCNSEH)
	W !!,"Now you may enter the patient specific policy information."
	W !,"Most of these fields will be familiar to experienced users.  The field"
	W !,"'SUBSCRIBER ID' used to be called 'INSURANCE NUMBER' and "
	W !,"has been modified to allow entering just 'SS' to retrieve"
	W !,"the patients SSN.  This field is the identifier for the policy or patient"
	W !,"that the carrier uses.  See the new help.",!
	Q
POL	; -- Help for policy specific information
	Q:'$G(IBCNSEH)
	W !!,"You can now edit information specific to the Group PLAN.  Remember, updating"
	W !,"PLAN information will affect all patients with this plan, not just"
	W !,"the current patient.",!
	Q
	;
SEL	; -- help for selecting a new HIP
	Q:'$G(IBCNSEH)
	W !!,"Each Insurance policy entry for a patient must be associated with a"
	W !,"Group Insurance Plan for the Insurance company you just selected."
	W !,"You will be given a choice of selecting previously entered Group Plans or"
	W !,"you may enter a new one.  If you enter a new Group Insurance Plan you"
	W !,"must enter whether or not this is a group or individual plan.",!
	Q
AB	;
	Q:'$G(IBCNSEH)
	Q
BU	;
	Q:'$G(IBCNSEH)
	Q

IBCNSEVT
IBCNSEVT	;ALB/AAS - NEW INSURANCE POLICY EVENT DRIVER ; 12-DEC-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- Invokes items on the IB NEW INSURANCE EVENT protocol menu
	;    Input  =:  dfn      = patient file ien
	;               ibevta   = insurnace type zeroth node of new policy
	;                          contains effective/expiration dates
	;               ibevt1   = insurance type 1 nde of new policy
	;                          contains date added and by whom
	;               ibcdfn   = internal number of policy as in ^dpt(dfn,.312,ibcdfn,0))
	;
	N DTOUT,DIROUT
	;S X=$O(^ORD(101,"B","IBCN NEW INSURANCE EVENTS",0))_";ORD(101," D EN1^XQOR:X
	S X="IBCN NEW INSURANCE EVENTS",DIC=101 D EN1^XQOR
	K X,DIC
	Q
	;
	;
AFTER	; -- get exemption after change
	;    input  =:  dfn    = patient file ien
	;
	S IBEVTA=$G(^DPT(DFN,.312,IBCDFN,0))
	S IBEVT1=$G(^DPT(DFN,.312,IBCDFN,1))
	Q

IBCNSM
IBCNSM	;ALB/AAS - INSURANCE MANAGEMENT, LIST MANAGER INIT ROUTINE ; 21-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- main entry point
EN	;
	D DT^DICRW
	K XQORS,VALMEVL
	D EN^VALM("IBCNS INSURANCE MANAGEMENT")
ENQ	K DFN
	Q
	;
	;
INIT	; -- set up inital variables
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
	;K I,X,SDBEG,SDEND,SDB,XQORNOD,SDFN,SDCLN,DA,DR,DIE,DNM,DQ
	S DIR(0)="350.9,4.02",DIR("A")="Select Patient Name or Insurance Co."
	D ^DIR K DIR I $D(DIRUT) S VALMQUIT="" G INITQ
	S IBY=Y
	I IBY["DPT(" S IBTYP="P",DFN=+IBY D BLD
	I IBY["DIC(" S IBTYP="I",IBCNS=+IBY D EN^VALM("IBCNS INSURANCE COMPANY") S VALMQUIT=""
	;
INITQ	Q
	;
	;
PAT	; -- select patient you are working with
	S DIC(0)="AEQMN",DIC="^DPT(" D ^DIC I +Y<1 S VALMQUIT="" Q
	S DFN=+Y
	Q
	;
	;
BLD	; -- build list of bills
	K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
	N I,J,K,IBHOLD,IBGRP,IBINS,IBCNT,IBCDFND,IBCPOLD
	S (IBN,IBCNT,VALMCNT)=0,IBFILE=2
	;
	; -- find all ins. co data
	K IBINS S IBINS=0
	D ALL^IBCNS1(DFN,"IBINS")
	I $G(IBINS(0)) S K=0 F  S K=$O(IBINS(K)) Q:'K  D
	.; -- add to list
	.W "."
	.S IBCNT=IBCNT+1
	.S IBCDFND=$G(IBINS(K,0))
	.S IBCDFND1=$G(IBINS(K,1))
	.S IBCPOLD=$G(^IBA(355.3,+$P($G(IBINS(K,0)),"^",18),0))
	.S X=""
	.S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	.I $D(^DIC(36,+IBCDFND,0)) S X=$$SETFLD^VALM1($P(^(0),"^"),X,"NAME")
	.S X=$$SETFLD^VALM1($E($P(IBCDFND,"^",2),1,14),X,"POLICY")
	.S IBHOLD=$P(IBCDFND,"^",6),X=$$SETFLD^VALM1($S(IBHOLD="v":"SELF",IBHOLD="s":"SPOUSE",IBHOLD="o":"OTHER",1:"UNKNOWN"),X,"HOLDER")
	.S X=$$SETFLD^VALM1($E($$GRP^IBCNS($P(IBCDFND,"^",18)),1,10),X,"GROUP")
	.S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND,"^",8)),X,"EFFDT")
	.S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND,"^",4)),X,"EXPIRE")
	.S X=$$SETFLD^VALM1($E($P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),U),1,8),X,"TYPE")
	.S X=$$SETFLD^VALM1($$EXPAND^IBTRE(355.1,.03,$P($G(^IBE(355.1,+$P($G(^IBA(355.3,+$P(IBCDFND,"^",18),0)),"^",9),0)),"^",3)),X,"TYPEPOL")
	.S X=$$SETFLD^VALM1($E($P($G(^VA(200,+$P(IBCDFND1,"^",4),0)),U),1,15),X,"VERIFIED BY")
	.S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBCDFND1,"^",3)),X,"VERIFIED ON")
	.S X=$$SETFLD^VALM1($$YN($P(IBCPOLD,"^",6)),X,"PRECERT")
	.S X=$$SETFLD^VALM1($$YN($P(IBCPOLD,"^",5)),X,"UR")
	.S X=$$SETFLD^VALM1($$YN($P(IBCDFND,"^",20)),X,"COB")
	.K IBHOLD,IBGRP
	.D SET(X)
BLDQ	;
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1,^TMP("IBNSM",$J,VALMCNT,0)=X
	S ^TMP("IBNSM",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBNSMDX",$J,IBCNT)=VALMCNT_"^"_IBFILE_"^"_DFN_"^"_K_"^"_IBCDFND
	Q
	;
HDR	; -- screen header for initial screen
	D PID^VADPT
	S VALMHDR(1)="Insurance Management for Patient: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
	S VALMHDR(2)=" "
	Q
	;
FNL	; -- exit and clean up
	K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
	K IBFASTXT
	D CLEAN^VALM10
	Q
	;
YN(X,Y)	; -- convert 1 or 0 to yes/no/unknown
	Q $S($G(X)="":$S($G(Y):"",1:"UNK"),X=0:"NO",X=1:"YES",1:"")
	;
CP	; -- change patient
	N VALMQUIT
	D FULL^VALM1
	S IBDFN=DFN D PAT
	I $D(VALMQUIT) S DFN=IBDFN
	D HDR,BLD
	S VALMBCK="R"
CPQ	K IBDFN
	Q
	;
PCI	S VALMBCK="R" Q
	;
FASTEXIT	;just sets a flag signaling system should be exited
	S VALMBCK="Q"
	D FULL^VALM1
	K DIR S DIR(0)="Y",DIR("A")="Exit option entirely",DIR("B")="NO" D ^DIR
	I $D(DIRUT)!(Y) S IBFASTXT=1
	K DIR
	Q

IBCNSM1
IBCNSM1	;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ; 22-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSM
	;
VP	; -- View Patient Policy Info
	D FULL^VALM1
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D  ;W !,"Entry ",X,"Selected" D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.D EN^VALM("IBCNS EXPANDED POLICY")
	.Q
	I '$G(IBFASTXT) D BLD^IBCNSM
	S VALMBCK="R" Q
	;
AB	; -- Edit Annual Benefits
	D FULL^VALM1
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	.D FULL^VALM1
	.D EN^VALM("IBCNS ANNUAL BENEFITS")
	.Q
	S VALMBCK="R" Q
	;
UP	; -- Print new, not verified insurance
	;
	N I,J,IBXX,IBCNS,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) W !,IBXX,! H 2 Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	.S INSCO=^DIC(36,IBCNS,0)
	.W !!,$P(INSCO,"^"),!! H 2
	.W !!,$P(IBPPOL,"^",4),!! H 2
	.Q
	D FULL^VALM1
	W !!,"REPORT OF NEW NOT VERIFIED INSURANCE",!! H 2
	S VALMBCK="R" Q
	;
PC	; -- Print Patient Insurance info
	;N IBLINE,IBCY,IBWP
	N IBWP
	;
PCWP	; -- Print Insurance Coverage, Worksheet
	;
	N I,J,IBXX,IBLINE,IBCY,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.S IBCPOL=$P(IBPPOL,"^",22)
	.S IBLINE=$S($G(IBWP):1,1:0)
	.S IBCY=$S($G(IBWP):0,1:1)
	.D WPPC^IBCNSM5
	.Q
	S VALMBCK="R" Q
	;
WP	; -- Print Worksheet
	N IBWP
	S IBWP=1
	D PCWP
	S VALMBCK="R" Q
	;
DP	; -- Delete insurance policy
	D FULL^VALM1
	I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY^IBTRE1 G DPQ
	N I,J,IBXX,DIR,DIRUT,IBBCNT,BLD,IBCOVP,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.; do some error checking here
	.I $$DELP^IBCNSU(DFN,$P(IBPPOL,"^",5)) D  Q
	..W !,"You can't delete this policy, there are bills associated with it."
	..W ! S J=0 F  S J=$O(^DGCR(399,"AE",DFN,$P(IBPPOL,"^",5),J)) Q:'J  I $P(^DGCR(399,J,"S"),"^",17)="" W $P(^DGCR(399,J,0),"^")_"   " S IBBCNT=$G(IBBCNT)+1 W:'(IBBCNT#8) !
	..K IBBCNT
	..Q
	.;
	.S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete policy #"_IBXX
	.D ^DIR K DIR I Y'=1 W !,"Policy #",IBXX," not Deleted!" Q
	.S IBCDFN=$P(IBPPOL,"^",4)
	.D DP1
	.Q
DPQ	D COVERED^IBCNSM31(DFN,$G(IBCOVP))
	D PAUSE^VALM1,BLD^IBCNSM:$G(BLD)
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	N DA,DIC,DIK
	;
	; -- if individual policy, and is right patient, delete HIP
	S BLD=1
	S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18),IBCPOLD=$G(^IBA(355.3,+IBCPOL,0))
	I '$P(IBCPOLD,"^",2),DFN=$P(IBCPOLD,"^",10) S DA=IBCPOL,DIK="^IBA(355.3," D ^DIK K DA,DIC,DIK
	;
	; -- delete entry in patient file
	S DA=IBCDFN,DA(1)=DFN,DIK="^DPT("_DFN_",.312," D ^DIK
	W:$G(IBXX) !,"Entry ",$G(IBXX)," Deleted"
	Q

IBCNSM2
IBCNSM2	;ALB/AAS - INSURANCE MANAGEMENT - EDIT ROUTINE ; 22-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	S U="^"
	;
BU	; -- Enter Edit benefits already used
	D FULL^VALM1
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	.D EN^VALM("IBCNS BENEFITS USED BY DATE")
	.Q
	S VALMBCK="R" Q
	;
EP	; -- Enter Edit Patient Insurance Policy Information
	;
	S VALMBCK="R" Q
	;
EI	;  -- Enter Edit Insurance Company Information
	; -- if coming from benefit screen
	;    ibcns=insurance co number
	D FULL^VALM1
	I $G(IBCNS)>0 D EN^VALM("IBCNS INSURANCE COMPANY") G EIQ
	;
	; -- if coming from list of policies, allow selection
	N I,J,IBXX,IBCNS,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S I=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.S IBCNS=$P(I,"^",5)
	.D EN^VALM("IBCNS INSURANCE COMPANY")
EIQ	S VALMBCK="R" Q
	;
VC	; -- Verify Insurance Coverage
	D FULL^VALM1
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""  D VFY
	;
EXIT	; -- Kill variables, refresh screen
	;
	D BLD^IBCNSM
	K I,J,IBXX,DA,DR,IBDUZZ
	S VALMBCK="R" Q
	;
VFY	; -- Display most recent verification
	;
	N DA,DR,IBDUZ
	D FULL^VALM1
	S IBCH=$P(IBPPOL,U,1)
	S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
	I 'IBDUZ D REVASK Q
	W !!," "_IBCH_" LAST VERIFIED BY "_$P($G(^VA(200,+IBDUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3))_". . ."
	I $P($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3),".")=DT W !,"COVERAGE VERIFIED TODAY, "_$$DAT1^IBOUTL(DT) H 3
	E  D REVASK
	Q
	;
REVASK	; -- Determine whether user wishes to re-verify
	;
	N Y
	W:'IBDUZ !
	S DIR("B")="No",DIR(0)="YO",DIR("A")=$S('IBDUZ:" "_IBCH_" NEVER PREVIOUSLY VERIFIED.  DO YOU WISH TO VERIFY COVERAGE",1:"ARE YOU RE-VERIFYING COVERAGE TODAY")
	D ^DIR K DIR Q:$D(DIRUT)
	I Y D REVFY
	Q
	;
REVFY	; -- Re-verify
	;
	S DA(1)=DFN,DA=$P(IBPPOL,U,4),DIE="^DPT(DFN,.312,",DR="1.03////"_DT_";1.04////"_DUZ D ^DIE K DIE
	S IBDUZ=$P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,4)
	W !," "_IBCH_" VERIFIED BY "_$P($G(^VA(200,+IBDUZ,0)),U)_" ON "_$$DAT1^IBOUTL($P($G(^DPT(DFN,.312,$P(IBPPOL,U,4),1)),U,3)) D PAUSE^VALM1
	Q

IBCNSM3
IBCNSM3	;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ; 28-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSM
	;
AD	; -- Add new insurance policy
	N X,Y,DO,DD,DA,DR,DIC,DIE,DIK,DIR,DIRUT,IBCNSP,IBCPOL,IBQUIT,IBOK,IBCDFN,IBAD,IBGRP,IBADPOL,IBCOVP
	S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1),IBQUIT=0,IBADPOL=1
	D FULL^VALM1
	S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
	I '$D(^DPT(DFN,.312,0)) S ^DPT(DFN,.312,0)="^2.312PAI^^"
	;
	D INS^IBCNSEH
	; -- Select insurance company
	;    If one already exists for same co. ask are you sure you are
	;    adding a new one
	S DIR(0)="350.9,4.06"
	S DIR("A")="Select INSURANCE COMPANY",DIR("??")="^D ADH^IBCNSM3"
	S DIR("?")="Select the Insurance Company for the policy you are entering"
	D ^DIR K DIR S IBCNSP=+Y I Y<1 G ADQ
	I $P($G(^DIC(36,+IBCNSP,0)),"^",2)="N" W !,"This company does not reimburse.  "
	I $P($G(^DIC(36,+IBCNSP,0)),"^",5) W !,*7,"Warning: Inactive Company" H 3 K IBCNSP G ADQ
	I $$DUPCO^IBCNSOK1(DFN,IBCNSP,"",1) H 3
	;
	; -- see if can use existing policy
	D SEL^IBCNSEH
	S IBCPOL=$$LK^IBCNSM31(IBCNSP) I IBCPOL>0 D OK G:IBQUIT ADQ S:'IBOK IBCPOL=-1
	I IBCPOL<1 S IBCPOL=$$NEW(IBCNSP)
	I IBCPOL<1 G ADQ
	;
	; -- file new patient policy
	S DIC("DR")=".18////"_IBCPOL_";1.09////1;1.05///NOW;1.06////"_DUZ
	K DD,DO S DA(1)=DFN,DIC="^DPT("_DFN_",.312,",DIC(0)="L",X=IBCNSP D FILE^DICN K DIC S IBCDFN=+Y,IBNEW=1 I +Y<1 G ADQ
	;
	; -- Edit patient policy data
	D PAT^IBCNSEH,PATPOL(IBCDFN)
	;
	; -- edit PLAN data if hold key
	I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) G ADQ
	I '$G(IBQUIT) D POL^IBCNSEH,EDPOL(IBCDFN)
	I '$G(IBNEW) D AI^IBCNSP1
	G ADQ
	;
ADQ	D COVERED^IBCNSM31(DFN,IBCOVP)
	I $G(IBNEW),$G(IBCDFN)>0 D AFTER^IBCNSEVT,^IBCNSEVT
	I $G(IBCPOL)>0 D BLD^IBCNSM
	S VALMBCK="R"
	Q
	;
PATPOL(IBCDFN)	; -- edit patient specific policy info
	I '$G(IBCDFN) G PATPOLQ
	D SAVEPT^IBCNSP3(DFN,IBCDFN)
	;
	; -- give warning if expired or inactive co.
	I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)'>DT W !,"WARNING:  This appears to be an expired policy!",!
	I $P(^DIC(36,+$P(^DPT(DFN,.312,IBCDFN,0),"^"),0),"^",5) W !,*7,"WARNING:  This insurance company is INACTIVE!",!
	;
	N IBAD,IBDIF,DA,DR,DIC,DIE
	S DIE="^DPT("_DFN_",.312,",DA(1)=DFN,DA=IBCDFN
	S DR="S IBAD="""";8;@333;3;D FUTURE^IBCNSM31;6;S IBAD=X;I IBAD'=""v"" S Y=""@10"";17///^S X=""`""_DFN;16///^S X=""01"";S Y=""@20"";@10;17;16//^S X=$S(IBAD=""s"":""02"",1:"""");@20;1;I $G(IBREG) S Y=""@99"";.2;@99"
	I $G(IBREG),$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) S DR=".01//;"_DR
	L +^DPT(DFN,.312,+IBCDFN):5 I '$T D LOCKED^IBTRCD1 G PATPOLQ
	D ^DIE I $D(Y)!($D(DTOUT)) S IBQUIT=1
	I '$D(DA) S IBQUIT=1 G PATPOLQ
	K IBFUTUR
	D COMPPT^IBCNSP3(DFN,IBCDFN)
	I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN)
	L -^DPT(DFN,.312,+IBCDFN)
	;
	D FUTURE^IBCNSM31 K Y,IBFUTUR
PATPOLQ	Q
	;
EDPOL(IBCDFN)	; -- Edit GROUP PLAN specific info
	I '$G(IBCDFN) G EDPOLQ
	N DA,DR,DIE,DIC,IBAD,IBCPOL,IBDIF
	S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
	L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G EDPOLQ
	I IBCPOL D
	.D SAVE^IBCNSP3(IBCPOL)
	.S DIE="^IBA(355.3,",DA=IBCPOL
	.S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;.03;.04;@55;.09;.05;.06;.07;.08//YES;"
	.I $D(IBREG),'$G(IBNEWP) S DR="S IBAD=$P($G(^IBA(355.3,DA,0)),U,2),Y=$S(IBAD=0:""@55"",IBAD="""":""@1"",1:""@25"");@1;.02;@25;D 3^IBCNSM31;D 4^IBCNSM31;@55;.09;.05;.06;.07;.08//YES;"
	.D ^DIE
	.D COMP^IBCNSP3(IBCPOL)
	.I IBDIF D UPDATE^IBCNSP3(IBCPOL),UPDATPT^IBCNSP3(DFN,IBCDFN) I $$DUPPOL^IBCNSOK1(IBCPOL,1)
	L -^IBA(355.3,+IBCPOL)
EDPOLQ	Q
	;
NEW(IBCNSC)	; -- ask if add new policy, if yes file (addh^ibcnsu)
	N IBCPOL,DIR,Y,X,IBGRP
	S IBCPOL=-1
	S DIR(0)="Y",DIR("B")="NO",DIR("A")="ARE YOU ADDING "_$P(^DIC(36,+IBCNSC,0),"^")_" AS A NEW GROUP INSURANCE PLAN"
	S DIR("?")="If this is a group plan that has not been previously entered an you wish to add it answer 'YES'.  If you do not wish to add a new group plan enter 'NO'."
	D ^DIR K DIR
	I Y<1!($D(DIRUT)) G NEWQ
	;
	; -- is group policy
	S DIR("?")="Answer 'YES' if this is a group insurance plan, that is, more than one patient may have a policy covered by this plan.  Answer 'NO' if this is an individual insurance plan."
	S DIR(0)="355.3,.02",DIR("A")="IS THIS A GROUP PLAN" D ^DIR K DIR S IBGRP=Y
	I $D(DIRUT) G NEWQ
	;
	; -- file new policy in policy file
	S IBCPOL=$$ADDH^IBCNSU(IBCNSC,IBGRP)
NEWQ	Q IBCPOL
	;
OK	; -- ask okay
	S IBQUIT=0,DIR(0)="Y",DIR("A")="       ...OK",DIR("B")="YES" D ^DIR K DIR
	I $D(DIRUT) S IBQUIT=1
	S IBOK=Y
	Q
	;
ADH	; -- show existing policies for help
	N DIR,DA,%A
	W !!,"The patient currently has the following Insurance Policies"
	D DISP^IBCNS
	Q

IBCNSM31
IBCNSM31	;ALB/AAS - INSURANCE MANAGEMENT - OUTPUTS ; 28-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSM
	;
EA	; -- Edit all insurance policy data
	N IBDIF,I,J,IBXX,IBCDFN,IBTRC,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D  ;W !,"Entry ",X,"Selected" D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.S IBCDFN=$P($G(IBPPOL),"^",4) I 'IBCDFN W !!,"Can't identify the policy!" Q
	.; -- edit patient data
	.N IBQUIT S IBQUIT=0
	.S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1) D PAT^IBCNSEH
	.D PATPOL^IBCNSM3(IBCDFN)
	.; -- edit policy data
	.D:'$G(IBQUIT) POL^IBCNSEH,EDPOL^IBCNSM3(IBCDFN)
	.W ! D AI^IBCNSP1 D:$G(IBTRC) AIP^IBCNSP02(IBTRC)
	.Q
	;
EAQ	D BLD^IBCNSM
	S VALMBCK="R"
	Q
	;
LK(IBCNS)	; -- screened look up to policy file
	;      input:   IBCNS = pointer to insurance company file (36)
	;
	N DIC,IBX
	S IBCPOL=""
	I $G(IBCNS)="" G LKQ
	;
	; -- first see if any plans for this company
	S IBX=$O(^IBA(355.3,"B",+IBCNS,0)) I 'IBX G LKQ
	;
	; -- see if only one policy
	;I '$O(^IBA(355.3,"B",+IBCNS,IBX) D  G LKQ
	;
	; -- is more than one plan to choose from, let fileman do it.
	S DIC("A")="Select GROUP INSURANCE PLAN: "
	;
	S DIC="^IBA(355.3,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U)=IBCNS,($P(^(0),U,2)=1!($P(^(0),U,10)=$G(DFN)))"
	;
	D ^DIC K DIC I +Y>0 S IBCPOL=+Y
	;
LKQ	Q IBCPOL
	;
FUTURE	; -- if expiration date in future give warning
	I $G(IBFUTUR) K IBFUTUR Q
	I $P(^DPT(DFN,.312,IBCDFN,0),"^",4),$P(^(0),"^",4)>DT W !!,*7,"WARNING:  The expiration date for this policy is in the future!",!,"          Normally this is a past date or left blank or a past date",! S Y="@333"
	S IBFUTUR=1
	Q
	;
COVERED(DFN,IBCOVP)	; -- update covered by insurance in background
	; -- input ibcovp = the covered by insurance field prior to editing
	;                   (add/edit/delete) of the 2.312 insurance type mult.
	;
	Q:$G(DFN)<1
	N X,Y,I,IBCOV,IBNCOV,DA,DR,DIE,DIC,IBINS,IBINSD
	S (IBCOV,IBNCOV)=$P($G(^DPT(DFN,.31)),"^",11)
	D ALL^IBCNS1(DFN,"IBINS",2,DT) S IBINSD=+$G(IBINS(0))
	;
	; -- initial value ="" or Unknown
	I $G(IBCOVP)=""!($G(IBCOVP)="U") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"U",IBINSD:"Y",1:"N")
	;
	; -- initial value = YES or NO (treat the same)
	I $G(IBCOVP)="Y"!($G(IBCOVP)="N") S IBNCOV=$S('$O(^DPT(DFN,.312,0)):"N",IBINSD:"Y",1:"N")
	;
	;
	I IBCOV'=IBNCOV D
	.S DIE="^DPT(",DR=".3192////"_IBNCOV,DA=DFN D ^DIE
	.I '$D(ZTQUEUED) W !!,"COVERED BY HEALTH INSURANCE changed to '"_$S(IBNCOV="Y":"YES",IBNCOV="N":"NO",1:"UNKNOWN"),"'.",!
	.H 3
	.Q
	Q
	;
3	; -- display group name as uneditable
	;    called by die, expects da = entry in 355.3
	N X
	S X=$P($G(^IBA(355.3,DA,0)),"^",3)
	W !,"GROUP NAME: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
	Q
	;
4	; -- display group number as uneditable
	;    called by die, expects da = entry in 355.3
	N X
	S X=$P($G(^IBA(355.3,DA,0)),"^",4)
	W !,"GROUP NUMBER: ",X,$S(X'="":"// ",1:""),"  (No Editing)"
	Q

IBCNSM4
IBCNSM4	;ALB/AAS - INSURANCE MANAGEMENT, LIST MANAGER INIT ROUTINE ; 21-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- main entry point
EN	;
	D DT^DICRW
	K XQORS,VALMEVL,DFN,IBFASTXT
	I '$G(IBVIEW) D EN^VALM("IBCNS PATIENT INSURANCE")
	I $G(IBVIEW) D EN^VALM("IBCNS VIEW PAT INS")
ENQ	K DFN,IBFASTXT,IBEXP1,IBEXP2,IBCDFN,IBFILE,IBI,IBLCNT,IBN,IBCGN,IBCNT,IBDA,IBDIF,IBPPOL,IBDUZ,IBCPOL,IBCDFND1,IBCDFN,IBCNS,IBYE
	Q
	;
	;
INIT	; -- set up inital variables
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
	D:'$D(DFN) PAT G:$D(VALMQUIT) INITQ
	D BLD^IBCNSM
	;
INITQ	Q
	;
	;
PAT	; -- select patient you are working with
	S DIC(0)="AEQMN",DIC="^DPT(" D ^DIC I +Y<1 S VALMQUIT="" Q
	S DFN=+Y
	Q
	;
HDR	; -- screen header for initial screen
	D PID^VADPT
	S VALMHDR(1)="Insurance Management for Patient: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
	S VALMHDR(2)=" "
	Q
	;
FNL	; -- exit and clean up
	K ^TMP("IBNSM",$J),^TMP("IBNSMDX",$J)
	K IBFASTXT
	D CLEAN^VALM10
	Q

IBCNSM5
IBCNSM5	;ALB/NLR - INSURANCE MANAGEMENT WORKSHEET ; 23-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSM
	;
WPPC	; -- print insurance management worksheet, insurance coverage
	;
	N IBCAB,IBPIB1,IBPAG,IBQUIT,IBW
	S IBPIB1=1,IBW=1
	D GETEN1 I ('($G(IBW)))!(IBYR<(DT-10000)&($G(IBLINE)))!($D(DIRUT)) G WPPCQ
	D DEV
	I $G(IBQUIT) G WPPCQ
DQ	;
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1)
	D PR
	D:IBCY GETEN2
	D:IBYR&IBCY PR
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
WPPCQ	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K IBCPOL,IBYR,IBPIB1,IBW
	Q 
PR	; -- set variables needed for file navigation, print insurance worksheet or coverage
	;
	D SETVAR
	D PRINT
PRQ	Q
	;
GETEN1	; -- find IEN of most recent policy
	;
	;N IBCDFND,IBCDFND1,IBCDFND2
	;I $G(IBYR)="" S IBYR=DT
	I '$G(IBCPOL) S IBCPOL=$P($G(^IBA(355.4,$G(DA),0)),"^",2)
	I 'IBCPOL G GETEN1Q
	S IBYR=$O(^IBA(355.4,"APY",IBCPOL,-(DT+.0001))) I IBYR S:IBYR<0 IBYR=-IBYR
	I ('IBYR),'IBLINE D ASK I ($D(DIRUT))!('($G(IBW))) G GETEN1Q
	I $G(IBLINE)&(('IBYR)!(IBYR<(DT-10000))) S IBYR=DT
	S IBCAB="" S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,IBCAB))
	;W !!,"DATE OF PREVIOUS ENTRY IS "_$$DAT1^IBOUTL(IBYR),!! H 3
	;I IBYR<(DT-10000),IBLINE S IBYR=DT
	;I IBYR<(DT-10000),IBLINE W !!,"MOST RECENT ENTRY IS "_$$DAT1^IBOUTL(IBYR)_".  ENTRY CANNOT BE MORE THAN A YEAR OLD.",!!,"YOU MAY PRINT ENTRY UNDER 'PC'.",!! H 4
GETEN1Q	Q
	;
SETVAR	; -- set variables needed for file navigation
	;
	S IBCDFND=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),0)),IBCNS=+IBCDFND
	S IBCDFND1=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),1))
	S IBCDFND2=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),2))
	S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11))
	S IBCDFNDB=$G(^DIC(36,+IBCDFND,.13))
	S IBCPOL=+$P(IBCDFND,"^",18),IBCNS=+IBCDFND,IBCDFN=$P(IBPPOL,"^",4)
	S IBCPOLD=$G(^IBA(355.3,+$P(IBCDFND,"^",18),0))
	S FILE="^DPT("_DFN_",.312,"
	S IBCBU=$O(^IBA(355.5,"APPY",DFN,IBCPOL,-IBYR,IBCDFN,0))
	S IBCBUD=$G(^IBA(355.5,+IBCBU,0))
	S IBCBUD1=$G(^IBA(355.5,+IBCBU,1))
	S IBCGN=$$GRP^IBCNS(IBCPOL)
	S IBPAT=1
	S IBCABD=$G(^IBA(355.4,+IBCAB,0))
	S IBCABD2=$G(^IBA(355.4,+IBCAB,2))
	S IBCABD3=$G(^IBA(355.4,+IBCAB,3))
	S IBCABD4=$G(^IBA(355.4,+IBCAB,4))
	S IBCABD5=$G(^IBA(355.4,+IBCAB,5))
	Q
	;
DEV	; -- ask for device
	;
	W !!,"*** You will need a 132 column printer for this report. ***",!
	S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 G R1Q
	I $D(IO("Q")) K IO("Q") S IBQUIT=1,ZTRTN="DQ^IBCNSM5",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="INSURANCE MANAGEMENT WORKSHEET" D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
	I $E(IOST,1,2)="C-" D FULL^VALM1
	U IO
R1Q	Q
	;
PRINT	; -- print insurance management worksheet/insurance coverage
	;
	D PID^VADPT
	D HDR
	D BL1^IBCNSM6,BL2^IBCNSM7,BL3^IBCNSM8,BL4^IBCNSM8,BL5^IBCNSM9,BL6^IBCNSM9,BL7^IBCNSM9
	Q
	;
HDR	; -- print header
	;
	I $E(IOST,1,2)["C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	W:$E(IOST,1,2)["C-"!($G(IBPAG)) @IOF
	S IBPAG=$G(IBPAG)+1
	W !,$S($G(IBLINE):"INSURANCE MANAGEMENT WORKSHEET",1:"INSURANCE COVERAGE FOR "_$S($G(IBPIB1):"CURRENT ENTRY",1:"NEXT-MOST-CURRENT ENTRY")),?(IOM-30),IBHDT,"  PAGE ",IBPAG
	W !,$TR($J(" ",IOM)," ","_")
	D DEM^VADPT
	W !!,VADM(1),?34,"PT ID:  "_VA("PID"),?79,"DOB:  "_$P(VADM(3),"^",2)
	W !,$E($P($G(^DIC(36,+IBCDFND,0)),"^"),1,28),?31," GROUP #:  ",$$DOL^IBCNSM6(355.3,.04,$P(IBCPOLD,"^",4),$G(IBLINE))
	W ?74,"For YEAR:  "_$S($G(IBCAB):$$DAT1^IBOUTL(IBYR),1:"______________")
	W !?30,"Ins. Type:  ",$$DOL^IBCNSM6(355.1,.01,$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"),$G(IBLINE))
	Q
	;
GETEN2	; -- get IEN of next-to-most-recent entry (Print Coverage)
	;
	S IBYR=$O(^IBA(355.4,"APY",IBCPOL,-IBYR)) I 'IBYR G PR1Q
	S:IBYR<0 IBYR=-IBYR
	S IBCAB="" S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,IBCAB))
	S IBPIB1=0
PR1Q	Q
	;
ASK	; -- if Print Coverage and no benefit years for selected policy, ask if user wants worksheet 
	;
	W !
	S DIR(0)="YO",DIR("A")="No Benefit Years on File.  Do you want to fill out a worksheet",DIR("B")="No"
	W !
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 G ASKQ
	I Y S IBW=1,IBLINE=1,IBCY=0 G ASKQ
	S IBW=0 D PAUSE^VALM1
ASKQ	;
	Q

IBCNSM6
IBCNSM6	;ALB/NLR - INSURANCE MANAGEMENT WORKSHEET, AN BEN ; 30-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BL1	; --print subscriber's employer info, policy info, insurance co.
	;
	W !,$TR($J(" ",IOM)," ","=")
	W !?66-($L("* PLAN *")\2),"* PLAN *"
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?6,"1.",?33-($L("** INSURANCE COMPANY **")\2),"** INSURANCE COMPANY **"
	D VLINE^IBCNSM7
	W ?72,"2.",?99-($L("** PLAN INFO, UR **")\2),"** PLAN INFO, UR **"
	W !?3,$J("Company:",23),?28,$E($$DOL(36,.01,$P($G(^DIC(36,+IBCDFND,0)),"^"),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Require UR?:",23),?108,$$DOL(355.3,.05,$$YN^IBCNSM($P(IBCPOLD,"^",5),1),IBLINE)
	W !?3,$J("Street:",23),?28,$E($$DOL(36,.111,$P($G(IBCDFNDA),"^"),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Require Pre-cert?:",23),?108,$$DOL(355.3,.06,$$YN^IBCNSM($P(IBCPOLD,"^",6),1),IBLINE)
	W !?3,$J("Street 2:",23),?28,$E($$DOL(36,.112,$P($G(IBCDFNDA),"^",2),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Benefits Assignable?:",23),?108,$$DOL(355.3,.08,$$YN^IBCNSM($P(IBCPOLD,"^",8),1),IBLINE)
	W !?3,$J("City:",23),?28,$E($$DOL(36,.114,$P(IBCDFNDA,"^",4),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Effective Date:",23),?108,$$DOL(FILE,8,$$DAT1^IBOUTL($P(IBCDFND,"^",8)),IBLINE)
	W !?3,$J("State:",23),?28,$E($$DOL(36,.115,$P(IBCDFNDA,"^",5),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Expiration Date:",23),?108,$$DOL(FILE,3,$$DAT1^IBOUTL($P(IBCDFND,"^",4)),IBLINE)
	W !,?3,$J("Phone:",23),?28,$$DOL(36,.131,$P(IBCDFNDB,"^",1),IBLINE) D VLINE^IBCNSM7
	W ?83,$J("Whose Insurance:",23),?108,$$EXPAND^IBTRE(2.312,6,$$DOL(FILE,6,$P($G(IBCDFND),"^",6),IBLINE))
	W !?3,$J("Precert Phone:",23),?28,$$DOL(36,.133,$$PHONE^IBCNSC01(IBCDFNDB),IBLINE) D VLINE^IBCNSM7
	W ?83,$J("Subscriber ID:",23),?108,$$DOL(FILE,1,$P($G(IBCDFND),"^",2),IBLINE)
	W !?3,$J("Verification Phone:",23),?28,$$DOL(36,.134,$P(IBCDFNDB,"^",4),IBLINE) D VLINE^IBCNSM7
	W ?83,$J("Insured's Name:",23),?108,$E($$DOL(FILE,17,$P($G(IBCDFND),"^",17),IBLINE),1,23)
	W !,?3,$J("Filing Time Frame:",23),?28,$$DOL(36,.12,$P($G(^DIC(36,+IBCDFND,0)),"^",12),IBLINE) D VLINE^IBCNSM7
	Q
	;
	;
DOL(FILE,FIELD,VALUE,LINE)	; -- data or line
	; -- expand data if it exists or else print a blank line
	;    if $g(line) print a line for worksheet
	N X
	;S:VALUE'="" LINE=0 S X=""
	I VALUE="" S X=$S(LINE:"_______________________",1:"") G DOLQ
	;I VALUE=""!(LINE) G DOLQ
	S X=$$EXPAND^IBTRE(FILE,FIELD,VALUE)
DOLQ	Q X

IBCNSM7
IBCNSM7	;ALB/NLR - INSURANCE MANAGEMENT WORKSHEET3 ; 9-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; -- print comments
	;
	;W !,$TR($J(" ",IOM)," ","-")
	;W !?3,"COMMENTS",!?6,$P($G(IBCBUD1),U,8)
	;W !!!!
	;Q
	;
R1Q	;
	Q
	;
BL2	; -- print inpatient & outpatient info, annual benefits
	;
	W !,$TR($J(" ",IOM)," ","=")
	W !?66-($L("* ANNUAL BENEFITS *")\2),"* ANNUAL BENEFITS *"
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?6,"3.",?33-($L("** INPATIENT ANNUAL BENEFITS **")\2),"** INPATIENT ANNUAL BENEFITS **"
	D VLINE W ?72,"4.",?99-($L("** OUTPATIENT ANNUAL BENEFITS **")\2),"** OUTPATIENT ANNUAL BENEFITS **"
	W !?3,$J("Annual Ded ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.01,$P($G(IBCABD5),"^"),IBLINE),10) D VLINE
	W ?83,$J("Annual Ded ($):",23),?108,$J($$DOL^IBCNSM6(355.4,2.01,$P($G(IBCABD2),"^"),IBLINE),10)
	W !?3,$J("Per Admis Ded ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.02,$P($G(IBCABD5),"^",2),IBLINE),10) D VLINE
	W ?83,$J("Per Visit Ded ($):",23),?108,$J($$DOL^IBCNSM6(355.4,2.02,$P($G(IBCABD2),"^",2),IBLINE),10)
	W !?3,$J("Inpt Lifet Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.03,$P($G(IBCABD5),"^",3),IBLINE),10) D VLINE
	W ?83,$J("Lifet Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,2.03,$P($G(IBCABD2),"^",3),IBLINE),10)
	W !?3,$J("Inpt Annual Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.04,$P($G(IBCABD5),"^",4),IBLINE),10),?60 D VLINE
	W ?83,$J("Annual Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,2.04,$P($G(IBCABD2),"^",4),IBLINE),10)
	W !?3,$J("Room & Board (%):",23),?28,$J($$DOL^IBCNSM6(355.4,5.09,$P($G(IBCABD5),"^",9),IBLINE),10),?60 D VLINE
	W ?83,$J("Visit (%):",23),?108,$J($$DOL^IBCNSM6(355.4,2.09,$P($G(IBCABD2),"^",9),IBLINE),10)
	W !?3,$J("Drug/Alc Lifet Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.07,$P($G(IBCABD5),"^",7),IBLINE),10) D VLINE
	W ?83,$J("Max Visits/Yr:",23),?108,$J($$DOL^IBCNSM6(355.4,2.15,$P($G(IBCABD2),"^",15),IBLINE),10)
	W !?3,$J("Drug/Alc An Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.08,$P($G(IBCABD5),"^",8),IBLINE),10) D VLINE
	W ?83,$J("Surgery (%):",23),?108,$J($$DOL^IBCNSM6(355.4,2.13,$P($G(IBCABD2),"^",13),IBLINE),10)
	W !?3,$J("Nursing Home (%):",23),?28,$J($$DOL^IBCNSM6(355.4,5.1,$P($G(IBCABD5),"^",10),IBLINE),10) D VLINE
	W ?83,$J("Emergency (%):",23),?108,$J($$DOL^IBCNSM6(355.4,2.10,$P($G(IBCABD2),"^",10),IBLINE),10)
	W !?3,$J("Other Inpt Charges (%):",23),?28,$J($$DOL^IBCNSM6(355.4,5.12,$P($G(IBCABD5),"^",12),IBLINE),10) D VLINE
	W ?83,$J("Prescription (%):",23),?108,$J($$DOL^IBCNSM6(355.4,2.12,$P($G(IBCABD2),"^",12),IBLINE),10)
	W ! D VLINE W ?83,$J("Adult Day Health Care?:",23),?108,$J($$DOL^IBCNSM6(355.4,2.17,$P($G(IBCABD2),"^",17),IBLINE),10)
	W ! D VLINE W ?67,$J("Dnt Cov Type (NONE/PER VIS $ / % AMT):",39)
	I $P($G(IBCABD2),"^",7)="" W ?108,$J($$DOL^IBCNSM6(355.4,2.07,$P($G(IBCABD2),"^",7),IBLINE),10) G DEN
	W ?(117-($L($$DOL^IBCNSM6(355.4,2.07,$P($G(IBCABD2),"^",7),IBLINE))\2)),$$DOL^IBCNSM6(355.4,2.07,$P($G(IBCABD2),"^",7),IBLINE)
	;
DEN	I $P(IBCABD2,"^",7)=0!('($G(IBLINE))&($P(IBCABD2,"^",7)="")) G IOQ
	N IBX
	S IBX=$S($P($G(IBCABD2),U,7)=1:"Dental Cov ($):",$P($G(IBCABD2),U,7)=2:"Dental Cov (%):",1:"Dental Cov $ Or %:")
	W ! D VLINE W ?$S($P($G(IBCABD2),U,7)=1!2:83,1:80),$J(IBX,23),?108,$J($$DOL^IBCNSM6(355.4,2.08,$P($G(IBCABD2),"^",8),IBLINE),10)
IOQ	Q
VLINE	; create a vertical line between blocks
	W ?66,"|"
	Q

IBCNSM8
IBCNSM8	;ALB/NLR - INSURANCE MANAGEMENT WORKHSEET5 ; 9-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BL3	; -- print mental health info, annual benefits
	;
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?6,"5.",?33-($L("** MENTAL HEALTH INPATIENT **")\2),"** MENTAL HEALTH INPATIENT **" D VLINE^IBCNSM7
	W ?72,"6.",?99-($L("** MENTAL HEALTH OUTPATIENT **")\2),"** MENTAL HEALTH OUTPATIENT **"
	W !?3,$J("MH Inpt Max Days/Year:",23),?28,$J($$DOL^IBCNSM6(355.4,5.14,$P($G(IBCABD5),"^",14),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("MH Opt Max Days/Year:",23),?108,$J($$DOL^IBCNSM6(355.4,2.14,$P($G(IBCABD2),"^",14),IBLINE),10)
	W !?3,$J("MH Lifet Inpt Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.05,$P($G(IBCABD5),"^",5),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("MH Lifet Opt Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,2.05,$P($G(IBCABD2),"^",5),IBLINE),10)
	W !?3,$J("MH Annual Inpt Max ($):",23),?28,$J($$DOL^IBCNSM6(355.4,5.06,$P($G(IBCABD5),"^",6),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("MH Annual Opt Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,5.06,$P($G(IBCABD5),"^",6),IBLINE),10)
	W !?3,$J("MH Inpt (%):",23),?28,$J($$DOL^IBCNSM6(355.4,5.11,$P($G(IBCABD5),"^",11),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("MH Opt (%):",23),?108,$J($$DOL^IBCNSM6(355.4,2.11,$P($G(IBCABD2),"^",11),IBLINE),10)
	;W !?83,$J("Max Visits/Yr:",23),?108,$J($$DOL^IBCNSM6(355.4,2.16,$P($G(IBCABD2),"^",16),IBLINE),10)
	;W !?83,$J("Adult Day Health Care?:",23),?108,$J($$DOL^IBCNSM6(355.4,2.17,$P($G(IBCABD2),"^",17),IBLINE),10)
	Q
	;
BL4	; -- print home health care & hospice info, annual benefits
	;
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?6,"7.",?33-($L("** HOME HEALTH CARE **")\2),"** HOME HEALTH CARE **"
	D VLINE^IBCNSM7 W ?72,"8.",?99-($L("** HOSPICE **")\2),"** HOSPICE **"
	W !?3,$J("Care Level:",23)
	I $P($G(IBCABD3),"^")="" W ?28,$J($$DOL^IBCNSM6(355.4,3.01,$P($G(IBCABD3),"^"),IBLINE),10) G ANDED
	W ?(37-($L($$DOL^IBCNSM6(355.4,3.01,$P($G(IBCABD3),"^"),IBLINE))\2)),$$DOL^IBCNSM6(355.4,3.01,$P($G(IBCABD3),"^"),IBLINE)
	;
ANDED	D VLINE^IBCNSM7 W ?83,$J("Annual Ded ($):",23),?108,$J($$DOL^IBCNSM6(355.4,4.01,$P($G(IBCABD4),"^"),IBLINE),10)
	W !?3,$J("Visits/Year:",23),?28,$J($$DOL^IBCNSM6(355.4,3.02,$P($G(IBCABD3),"^",2),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("Inpt Annual Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,4.02,$P($G(IBCABD4),"^",2),IBLINE),10)
	W !?3,$J("Max Days/Year:",23),?28,$J($$DOL^IBCNSM6(355.4,3.03,$P($G(IBCABD3),"^",3),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("Inpt Lifet Max ($):",23),?108,$J($$DOL^IBCNSM6(355.4,4.03,$P($G(IBCABD4),"^",3),IBLINE),10)
	W !?3,$J("Med Equipment (%):",23),?28,$J($$DOL^IBCNSM6(355.4,3.04,$P($G(IBCABD3),"^",4),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("Room & Board (%):",23),?108,$J($$DOL^IBCNSM6(355.4,4.04,$P($G(IBCABD4),"^",4),IBLINE),10)
	S IBLE=$$DOL^IBCNSM6(355.4,3.05,$P($G(IBCABD3),"^",5),IBLINE)
	W !?3,$J("Visit Definition:",23),?28,$$DOL^IBCNSM6(355.4,3.05,$P($G(IBCABD3),"^",5),IBLINE) D VLINE^IBCNSM7
	;W $S("?"_37-($L(IBLE))\2:$L(IBLE)'>19,1:?28)_","_"that's right"
	W ?83,$J("Other Inpt Charges (%):",23),?108,$J($$DOL^IBCNSM6(355.4,4.05,$P($G(IBCABD4),"^",5),IBLINE),10)
	Q

IBCNSM9
IBCNSM9	;ALB/NLR - INSURANCE MANAGEMENT WORKSHEET7 ; 15-NOV-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BL5	; -- print rehab & iv mgmt info
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?6,"9.",?33-($L("** REHABILITATION **")\2),"** REHABILITATION **" D VLINE^IBCNSM7
	W ?71,"10.",?99-($L("** IV MANAGEMENT **")\2),"** IV MANAGEMENT **"
	W !?3,$J("OT Visits/Yr:",23),?28,$J($$DOL^IBCNSM6(355.4,3.06,$P($G(IBCABD3),"^",6),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("IV Infusion Opt?:",23),?108,$J($$DOL^IBCNSM6(355.4,4.06,$P($G(IBCABD4),"^",6),IBLINE),10)
	W !?3,$J("PT Visits/Yr:",23),?28,$J($$DOL^IBCNSM6(355.4,3.07,$P($G(IBCABD3),"^",7),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("IV Infusion Inpt?:",23),?108,$J($$DOL^IBCNSM6(355.4,4.07,$P($G(IBCABD4),"^",7),IBLINE),10)
	W !?3,$J("ST Visits/Yr:",23),?28,$J($$DOL^IBCNSM6(355.4,3.08,$P($G(IBCABD3),"^",8),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("IV Antibiotics Opt?:",23),?108,$J($$DOL^IBCNSM6(355.4,4.08,$P($G(IBCABD4),"^",8),IBLINE),10)
	W !?3,$J("Med Cnslg Visits/Yr:",23),?28,$J($$DOL^IBCNSM6(355.4,3.09,$P($G(IBCABD3),"^",9),IBLINE),10) D VLINE^IBCNSM7
	W ?83,$J("IV Antibiotics Inpt?:",23),?108,$J($$DOL^IBCNSM6(355.4,4.09,$P($G(IBCABD4),"^",9),IBLINE),10)
	W !?5,$TR($J(" ",IOM-12)," ","-")
	Q
BL6	; -- print rider info
	;
	D HDR^IBCNSM5
	W !?5,$TR($J(" ",IOM-12)," ","-")
	D GETRDRS
	Q
GETRDRS	; -- get personal riders
	N IBPR,IBPRD,I,J
	S I=0
	I '$G(IBCDFN)!('$G(DFN)) G DISPRQ
	W !?5,"11.",?33-($L("** CURRENT PERSONAL RIDERS **")\2),"** CURRENT PERSONAL RIDERS **" D VLINE^IBCNSM7
	F  S I=$O(^IBA(355.7,"APP",DFN,IBCDFN,I)) Q:'I  S J=$O(^(I,0)),IBPR=$G(^IBA(355.7,+J,0)) D
	.S IBPRD=$$EXPAND^IBTRE(355.7,.01,+IBPR)
	.W !?9,IBPRD D VLINE^IBCNSM7
	I 'IBLINE,('$D(IBPRD)) W !?9,"None Indicated" D VLINE^IBCNSM7
	I IBLINE,('$D(IBPRD)) W !!?10,$TR($J(" ",(IOM-20))," ","_") W !!?10,$TR($J(" ",(IOM-20))," ","_") W !!?10,$TR($J(" ",(IOM-20))," ","_")
DISPRQ	Q
BL7	; -- print benefits used
	;
	; -- policy and opt deductibles
	;
	W !,$TR($J(" ",IOM)," ","=")
	W !?66-($L("* BENEFITS USED *")\2),"* BENEFITS USED *"
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?5,"12.",?33-($L("** POLICY **")\2),"** POLICY **" D VLINE^IBCNSM7
	W ?71,"13.",?99-($L("** OPT DEDUCTIBLES **")\2),"** OPT DEDUCTIBLES **"
	W !?3,$J("Ded Met?:",23),?28,$E($$DOL^IBCNSM6(355.5,.04,$$YN^IBCNSM($P($G(IBCBUD),"^",4),1),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Ded Met?:",23),?108,$E($$DOL^IBCNSM6(355.5,.08,$$YN^IBCNSM($P($G(IBCBUD),"^",8),1),IBLINE),1,22)
	W !?3,$J("Amt of Ded Met ($):",23),?28,$E($$DOL^IBCNSM6(355.5,.05,$P($G(IBCBUD),"^",5),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Amt of Ded Met ($):",23),?108,$E($$DOL^IBCNSM6(355.5,.09,$P($G(IBCBUD),"^",9),IBLINE),1,22)
	W !?3,$J("Pre-exist Cond:",23),?28,$E($$DOL^IBCNSM6(355.5,.15,$P($G(IBCBUD),"^",15),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("MH Ded (Opt) Met?:",23),?108,$E($$DOL^IBCNSM6(355.5,.13,$$YN^IBCNSM($P($G(IBCBUD),"^",13),1),IBLINE),1,22)
	W !?3,$J("Coord of Ben Data:",23),?28,$E($$DOL^IBCNSM6(355.5,.16,$P($G(IBCBUD),"^",16),IBLINE),1,22) D VLINE^IBCNSM7
	W ?83,$J("Amt of MH Ded Met ($):",23),?108,$E($$DOL^IBCNSM6(355.5,.14,$P($G(IBCBUD),"^",14),IBLINE),1,22)
	W ! D VLINE^IBCNSM7 W ?83,$J("Amt Lifet Max Used ($):",23),?108,$E($$DOL^IBCNSM6(355.5,.1,$P($G(IBCBUD),"^",10),IBLINE),1,22)
	;
	; inpt deductibles
	; 
	W !?5,$TR($J(" ",IOM-12)," ","-")
	W !?5,"14.",?33-($L("** INPT DEDUCTIBLES **")\2),"** INPT DEDUCTIBLES **" D VLINE^IBCNSM7
	W !?3,$J("Ded Met?:",23),?28,$E($$DOL^IBCNSM6(355.5,.11,$$YN^IBCNSM($P($G(IBCBUD),"^",6),1),IBLINE),1,22) D VLINE^IBCNSM7
	W !?3,$J("Amt of Ded Met ($):",23),?28,$$DOL^IBCNSM6(355.5,.07,$P($G(IBCBUD),"^",7),IBLINE) D VLINE^IBCNSM7
	W !?3,$J("MH Ded (Inpt) Met?:",23),?28,$E($$DOL^IBCNSM6(355.5,.11,$$YN^IBCNSM($P($G(IBCBUD),"^",11),1),IBLINE),1,22) D VLINE^IBCNSM7
	W !?3,$J("Amt of MH Ded Met ($):",23),?28,$E($$DOL^IBCNSM6(355.5,.12,$P($G(IBCBUD),"^",12),IBLINE),1,22) D VLINE^IBCNSM7
	W !?3,$J("Amt Lifet Max Used ($):",23),?28,$E($$DOL^IBCNSM6(355.5,.18,$P($G(IBCBUD),"^",18),IBLINE),1,22) D VLINE^IBCNSM7
	W !,$TR($J(" ",IOM)," ","=")
	Q
	;

IBCNSOK
IBCNSOK	;ALB/AAS - Patient Insurance consistency checker ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	K ^TMP("IBCNS-ERR",$J)
	;
	W !!,"Check Patient file Insurance Type Group Plan consistency"
	W !!,"I'm going to check the Insurance company for each patient policy with the",!,"Insurance company in the associated Group Plan file."
	W !!,"This will take a while, please queue this job to a device.  I'll print",!,"a report when I'm done.",!!
	;
UP	S IBUPDAT=0
	S DIR(0)="Y",DIR("A")="Update any Inconsistencies",DIR("B")="NO"
	S DIR("?")="Enter YES if you want any inconsistencies updated, enter NO if you just want the report."
	D ^DIR K DIR
	S IBUPDAT=+Y I $D(DIRUT) G END
	;
DEV	W !! S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) K IO("Q") D  G END
	.S ZTRTN="DQ^IBCNSOK",ZTDESC="IB - v2 PATIENT FILE DOUBLE CHECK",ZTIO="",ZTSAVE("IB*")=""
	.W ! D ^%ZTLOAD D HOME^%ZIS
	.I $D(ZTSK) W !,"    Patient file update queued as task ",ZTSK K ZTSK Q
	;
	D DQ G END
	Q
	;
END	K ^TMP("IBCNS-ERR",$J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K %ZIS,DIRUT,I,J,X,Y,DA,DR,DIC,DIE,DIR,IBCPOL,IBCOPOL2,IBCDFND,NODE,IBI,IBCNTI,IBCNTP,IBCNTPP,IBUPDT,IBCDFN
	Q
	;
DQ	; -- entry point from task man
	U IO
	S IBQUIT=0
	D NOW^%DTC S IBSPDT=%
	I '$D(ZTQUEUED) D
	.W !!,"    I'll write a dot for each 100 entries"
	.W:IBUPDAT !,"    and a + for each entry updated"
	.W !,"    Start time: " S Y=IBSPDT D DT^DIQ
	N DFN,IBI,IBCPOL,IBCDFND,DA,DR,DIE,DIC,IBCNT,IBCNTP,IBCNTPP,IBCNTI,IBCDFN
	S (IBCNT,IBCNTP,IBCNTPP,IBCNTI,DFN)=0
	;
	F  S DFN=$O(^DPT(DFN)) Q:'DFN  S IBCNT=IBCNT+1,IBCDFN=0 S:$O(^DPT(DFN,.312,IBCDFN)) IBCNTI=IBCNTI+1 F  S IBCDFN=$O(^DPT(DFN,.312,IBCDFN)) Q:'IBCDFN  D
	.I '$D(ZTQUEUED) W:'(IBCNTPP#100) "."
	.S IBCNTPP=IBCNTPP+1
	.S IBCDFND=$G(^DPT(DFN,.312,IBCDFN,0))
	.I IBCDFND="",$D(^DPT(DFN,.312,IBCDFN)) D ERR3
	.;
	.S IBCPOL=+$G(^IBA(355.3,+$P(IBCDFND,"^",18),0))
	.I '$P(IBCDFND,"^",18) D ERR1 Q  ; no group plan field
	.I +IBCPOL'=+IBCDFND D ERR2 Q  ;   ins. companies don't match
	.Q
	;
	D REPORT G END
	Q
	;
ERR1	; -- no group plan pointer
	S NODE="IBCNS-ERR1" D FIX
	Q
	;
ERR2	; -- wrong insurance pointer
	S NODE="IBCNS-ERR2" D FIX
	Q
	;
ERR3	; -- dangle insurance node left
	S NODE="IBCNS-ERR3" D SET
	I IBUPDAT K ^DPT(DFN,.312,IBCDFN) W:'$D(ZTQUEUED) "+"
	Q
	;
FIX	; -- reset pointer correctly
	S IBCPOL2=IBCPOL
	;
	S IBCPOL=$$CHIP^IBCNSU(IBCDFND)
	Q:'IBCPOL
	Q:+IBCDFND'=+$G(^IBA(355.3,+IBCPOL,0))  ; patient ins. and policy must have same ins. company file.
	S DA=IBCDFN,DA(1)=DFN,DIE="^DPT("_DFN_",.312,"
	S DR="1.09////1;.18////"_IBCPOL
	D:IBUPDAT ^DIE K DA,DR,DIE,DIC W:'$D(ZTQUEUED) "+"
SET	S ^TMP("IBCNS-ERR",$J,$P(^DPT(DFN,0),"^"),DFN,IBCDFN)=IBCPOL2_"^"_IBCPOL_"^"_NODE
	Q
	;
REPORT	; -- Okay now tell us about the errors
	D NOW^%DTC S IBHDT=$$FMTE^XLFDT(%),IBPAG=0
	D HDR
	S NAME="",NODE="IBCNS-ERR"
	I '$D(^TMP(NODE,$J)) W !!,"No Errors Found!" Q
	F  S NAME=$O(^TMP(NODE,$J,NAME)) Q:NAME=""  D
	.S DFN=0 F  S DFN=$O(^TMP(NODE,$J,NAME,DFN)) Q:'DFN  D
	..S IBCDFN=0 F  S IBCDFN=$O(^TMP(NODE,$J,NAME,DFN,IBCDFN)) Q:'IBCDFN  S IBDATA=^(IBCDFN) D ONE
	Q
	;
ONE	; -- print one line
	D PID^VADPT
	W !,$E($P($G(^DPT(DFN,0)),"^"),1,16)_" ("_DFN_")"
	W ?25,VA("PID")
	S IBCDFND=$G(^DPT(DFN,.312,IBCDFN,0))
	W ?39,$E($P($G(^DIC(36,+IBCDFND,0)),"^"),1,25)
	S IBCPOLD=$G(^IBA(355.3,+IBDATA,0))
	I +IBCPOLD W ?68,$E($P(IBCPOLD,"^",4)_"("_$P($G(^DIC(36,+IBCPOLD,0)),"^"),1,33)_")"
	S IBCPOLD=$G(^IBA(355.3,$P(IBDATA,"^",2),0))
	I +IBCPOLD W ?105,$E($P(IBCPOLD,"^",4)_"("_$P($G(^DIC(36,+IBCPOLD,0)),"^"),1,20)_")"
	W ?127,$S($G(IBUPDAT):"YES",1:"NO")
	W !?5,"Error: ",$S($P(IBDATA,"^",3)="IBCNS-ERR1":"Policy is missing group Plan",$P(IBDATA,"^",3)="IBCNS-ERR3":"Dangling insurance node detected",1:"Group Plan is with different insurance company")
	Q
	;
HDR	; -- Print header
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Patients with Incorrect Group Plans",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"PATIENT",?25,"PATIENT ID",?39,"INSURANCE CO.",?68,"OLD PLAN",?105,"NEW PLAN",?127,"UPDATED"
	W !,$TR($J(" ",IOM)," ","-")
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stoped at user request" Q
	Q

IBCNSOK1
IBCNSOK1	;ALB/AAS - Insurance consisitency stuff ; 2/22/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DUPCO(DFN,IBCNS,IBCDFN,IBTALK)	; -- is this a duplicate company for this patient
	; -- make this call after selecting a company
	; -- input    DFN = patient file pointer (required)
	;           IBCNS = new insurance company selected
	;          IBCDFN = if added to patient ins type mult is required as enter number in multiple
	;          IBTALK = (optional) if defined and true will write messages to current device if not queued
	;  -- output      = $p1 - 0 if no other entry 1 if possible dup.
	;                   $p2 - 1 if another active entry for same company
	;                   $p3 - 1 if same co, same subscriber
	;                   $p4 - 1 if same co, same dates
	;                   $p5 - 1 if same co, same plan
	;                   $p6 - 1 if spouse insurer but not listed
	;                   $p7 - 1 if spouse insurer but no employer
	N IBI,IBJ,IBX,IBY,I,J,X,Y,Z,IBDUP,IBACT,IBCDFND
	S (I,IBDUP)=0
	I '$O(^DPT(DFN,.312,0)) G DUPCOQ ; no policies on file, don't bother
	;
	; -- use b x-ref
	F  S I=$O(^DPT(DFN,.312,"B",IBCNS,I)) Q:'I  S IBX=$G(^DPT(DFN,.312,I,0)) I $S('$G(IBCDFN):1,I=$G(IBCDFN):0,1:1) D
	.S IBDUP=1
	.S IBACT=$$CHK^IBCNS1(IBX,DT,2) I IBACT S $P(IBDUP,"^",2)=1 ; another active entry
	.I '$G(IBCDFN) Q  ;quit if not stored in dpt
	.I 'IBACT Q
	.;
	.S IBCDFND=$G(^DPT(DFN,.312,+IBCDFN,0)) I IBCDFND=""!(IBCDFND=+IBCDFND) Q
	.I $P(IBX,"^",6)=$P(IBCDFND,"^",6) S $P(IBDUP,"^",3)=1 ; same whose ins.
	.I $P(IBX,"^",4)="",$P(IBCDFND,"^",4)="" S $P(IBDUP,"^",4)=1 ; no expiration date
	.I $P(IBX,"^",8)="",$P(IBCDFND,"^",8)="" S $P(IBDUP,"^",4)=1 ; no effective date
	.; need to figure out overlapping date logic.  not simple
	.I $P(IBX,"^",18)=$P(IBCDFND,"^",18) S $P(IBDUP,"^",5)=1 ; same plan
	.I $P(IBCDFND,"^",6)="s" I $P(^DPT(DFN,0),"^",5)=6!($P(^DPT(DFN,0),"^",5)=7) S $P(IBDUP,"^",6)=1 ; marital status inconsistent
	.I $P(IBCDFND,"^",6)="s",$P($G(^DPT(DFN,.25)),"^")="" S $P(IBDUP,"^",7)=1
	I 'IBDUP G DUPCOQ
	I IBDUP,$G(IBTALK),'$D(ZTQUEUED) D
	.W !!,*7,"Warning:  Insurance Company selected already on file for this patient."
	.I $P(IBDUP,"^",2) W !,"          The previous entry is active."
	.I $P(IBDUP,"^",3) W !,"          The WHOSE INSURANCE are the same."
	.I $P(IBDUP,"^",4) W !,"          The Effective and Expiration dates may cover overlapping dates."
	.I $P(IBDUP,"^",5) W !,"          The Group Plans are the same."
	.I $P(IBDUP,"^",6) W !,"          WHOSE INSURANCE is Spouse, patient marital Status Inconsistent."
	.I $P(IBDUP,"^",7) W !,"          WHOSE INSURANCE is Spouse but no Employer listed."
	.Q
	;
DUPCOQ	Q IBDUP
	;
DUPPOL(IBCPOL,IBTALK)	; -- is this a duplicate policy for this company
	N I,J,X,Y,Z,IBDUP,IBCNS
	S (I,IBDUP)=0,J=$G(^IBA(355.3,IBCPOL,0)),IBCNS=+J
	F  S I=$O(^IBA(355.3,"B",IBCNS,I)) Q:'I  I I'=IBCPOL S X=$G(^IBA(355.3,I,0)) D
	.Q:'$P(X,"^",2)  ;skip individual policies
	.I $P(J,"^",3)'="",$P(J,"^",3)=$P(X,"^",3) S $P(IBDUP,"^")=1
	.I $P(J,"^",4)'="",$P(J,"^",4)=$P(X,"^",4) S $P(IBDUP,"^",2)=1
	I IBDUP,$G(IBTALK),'$D(ZTQUEUED) D
	.I $P(IBDUP,"^",1) W !!,"Warning:  There is another policy with the same Group Name."
	.I $P(IBDUP,"^",2) W !!,"Warning:  There is another policy with the same Group Number."
	;
DUPPOLQ	Q IBDUP

IBCNSP
IBCNSP	;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY ; 05-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
%	;
EN	; -- main entry point for IBCNS EXPANDED POLICY
	K VALMQUIT,IBPPOL
	S IBTOP="IBCNSP"
	D EN^VALM("IBCNS EXPANDED POLICY")
	Q
	;
HDR	; -- header code
	S VALMHDR(1)="Expanded Policy Information for: "_$E($P(^DPT(DFN,0),"^"),1,20)
	S VALMHDR(2)=$E($P($G(^DIC(36,+$P(IBPPOL,"^",5),0)),"^"),1,20)_" Insurance Company"
	Q
	;
INIT	; -- init variables and list array
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	I '$D(IBPPOL) D PPOL Q:$D(VALMQUIT)
	K ^TMP("IBCNSVP",$J)
	D BLD,HDR
	Q
	;
BLD	; -- list builder
	K ^TMP("IBCNSVP",$J),^TMP("IBCNSVPDX",$J)
	D KILL^VALM10()
	F I=1:1:35 D BLANK(.I)
	S VALMCNT=35
	N IBCDFND,IBCDFND1,IBCDFND2
	S IBCDFND=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),0)),IBCNS=+IBCDFND
	S IBCDFND1=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),1))
	S IBCDFND2=$G(^DPT(DFN,.312,$P(IBPPOL,"^",4),2))
	S IBCPOL=+$P(IBCDFND,"^",18),IBCNS=+IBCDFND,IBCDFN=$P(IBPPOL,"^",4)
	S IBCPOLD=$G(^IBA(355.3,+$P(IBCDFND,"^",18),0))
	S IBCPOLD1=$G(^IBA(355.3,+$P(IBCDFND,"^",18),1))
	D POLICY^IBCNSP0,INS^IBCNSP0,CONTACT^IBCNSP0,EFFECT,UR,COMMENT,EMP,^IBCNSP01
	Q
	;
COMMENT	; -- Comment region
	N START,OFFSET
	S START=30,OFFSET=2
	D SET(START,OFFSET," Comment -- Patient Policy ",IORVON,IORVOFF)
	D SET(START+1,OFFSET,$S($P(IBCDFND1,"^",8)="":"None",1:$P(IBCDFND1,"^",8)))
	D SET(START+3,OFFSET," Comment -- Group Plan ",IORVON,IORVOFF)
	S (IBLCNT,IBI)=0 F  S IBI=$O(^IBA(355.3,+IBCPOL,11,IBI)) Q:IBI<1  D
	.S IBLCNT=IBLCNT+1
	.D SET(START+3+IBLCNT,OFFSET,"  "_$E($G(^IBA(355.3,+IBCPOL,11,IBI,0)),1,80))
	S IBLCNT=IBLCNT+1 D SET(START+3+IBLCNT,OFFSET,"  ")
	Q
	;
EFFECT	; -- Effective date region
	N START,OFFSET
	S START=9,OFFSET=45
	D SET(START,OFFSET," Effective Dates ",IORVON,IORVOFF)
	D SET(START+1,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",8)))
	D SET(START+2,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",4)))
	Q
	;
UR	; -- UR of insurance region
	N START,OFFSET
	S START=9,OFFSET=2
	D SET(START,OFFSET," Utilization Review Info ",IORVON,IORVOFF)
	D SET(START+1,OFFSET,"         Require UR: "_$$EXPAND^IBTRE(355.3,.05,$P(IBCPOLD,"^",5)))
	D SET(START+2,OFFSET,"   Require Pre-Cert: "_$$EXPAND^IBTRE(355.3,.06,$P(IBCPOLD,"^",6)))
	D SET(START+3,OFFSET,"   Exclude Pre-Cond: "_$$EXPAND^IBTRE(355.3,.07,$P(IBCPOLD,"^",7)))
	D SET(START+4,OFFSET,"Benefits Assignable: "_$$EXPAND^IBTRE(355.3,.08,$P(IBCPOLD,"^",8)))
	Q
EMP	; -- Insurance Employer Region
	N OFFSET,START,IBADD
	S START=15,OFFSET=40
	D SET(START,OFFSET," Subscriber's Employer Information ",IORVON,IORVOFF)
	D SET(START+1,OFFSET,"Claims to Employer: "_$S(+IBCDFND2:"Yes, Send to Employer",1:"No, Send to Insurance Company"))
	;I +IBCDFND2 W !!,"If ROI applies, make sure current consent is signed.",!! D PAUSE^VALM1
	;
	D SET(START+2,OFFSET,"           Company: "_$P(IBCDFND2,"^",9))
	D SET(START+3,OFFSET,"            Street: "_$P(IBCDFND2,"^",2)) S IBADD=1
	I $P(IBCDFND2,"^",3)'="" D SET(START+4,OFFSET,"          Street 2: "_$P(IBCDFND2,"^",3)) S IBADD=2
	I $P(IBCDFND2,"^",4)'="" D SET(START+5,OFFSET,"          Street 3: "_$P(IBCDFND2,"^",4)) S IBADD=3
	D SET(START+3+IBADD,OFFSET,"        City/State: "_$E($P(IBCDFND2,"^",5),1,15)_$S($P(IBCDFND2,"^",5)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFND2,"^",6),0)),"^",2)_" "_$E($P(IBCDFND2,"^",7),1,5))
	D SET(START+4+IBADD,OFFSET,"             Phone: "_$P(IBCDFND2,"^",8))
	;
EMPQ	Q
	; 
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K IBPPOL,VALMQUIT,IBCNS,IBCPOL,IBCPOLD,IBCPOLD1,IBCDFND,IBCDFND1,IBCDFND2
	D CLEAN^VALM10,CLEAR^VALM1
	Q
	;
EXPND	; -- expand code
	Q
	;
PPOL	; -- select patient, select policy
	I '$D(DFN) D  G:$D(VALMQUIT) PPOLQ
	.S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC
	.S DFN=+Y
	I $G(DFN)<1 S VALMQUIT="" G PPOLQ
	;
	I '$O(^DPT(DFN,.312,0)) W !!,"Patient doesn't have Insurance" K DFN G PPOL
	;
	S DIC="^DPT("_DFN_",.312,",DIC(0)="AEQMN",DIC("A")="Select Patient Policy: "
	D ^DIC I +Y<1 S VALMQUIT=""
	G:$D(VALMQUIT) PPOLQ
	S IBPPOL="^2^"_DFN_"^"_+Y_"^"_$G(^DPT(DFN,.312,+Y,0))
PPOLQ	K DIC Q
	;
BLANK(LINE)	; -- Build blank line
	D SET^VALM10(.LINE,$J("",80))
	Q
	;
SET(LINE,COL,TEXT,ON,OFF)	; -- set display info in array
	I '$D(@VALMAR@(LINE,0)) D BLANK(.LINE) S VALMCNT=$G(VALMCNT)+1
	D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
	D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
	W:'(LINE#5) "."
	Q

IBCNSP0
IBCNSP0	;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY  ; 05-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
CONTACT	; -- Insurance Contact Information
	N OFFSET,START
	S START=22,OFFSET=42
	N IBTRC,IBTRCD,IBTCOD
	S IBTCOD=$O(^IBE(356.11,"ACODE",85,0))
	;
	S IBTRC=0,IBTRCD=""
	F  S IBTRC=$O(^IBT(356.2,"D",DFN,IBTRC)) Q:'IBTRC  D
	.Q:$P($G(^IBT(356.2,+IBTRC,1)),"^",5)'=IBCDFN  ; must be same policy
	.Q:$P($G(^IBT(356.2,+IBTRC,0)),"^",4)'=IBTCOD  ; must be ins. ver. type
	.S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	.;S IBLCNT=IBLCNT+1
	.;D SET(START
	;
	D SET(START,OFFSET," Insurance Contact (last) ",IORVON,IORVOFF)
	D SET(START+1,OFFSET," Person Contacted: "_$$EXPAND^IBTRE(356.2,.06,$P(IBTRCD,"^",6)))
	D SET(START+2,OFFSET,"Method of Contact: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
	D SET(START+3,OFFSET,"  Contact's Phone: "_$$EXPAND^IBTRE(356.2,.07,$P(IBTRCD,"^",7)))
	D SET(START+4,OFFSET,"    Call Ref. No.: "_$$EXPAND^IBTRE(356.2,.09,$P(IBTRCD,"^",9)))
	D SET(START+4,OFFSET,"     Contact Date: "_$$EXPAND^IBTRE(356.2,.01,$P(IBTRCD,"^")))
	Q
	;
POLICY	; -- Policy Region
	; -- if pointer to policy file exists get data from policy file
	N OFFSET,START,IBP
	S START=1,OFFSET=2
	D SET(START,OFFSET," Plan Information ",IORVON,IORVOFF)
	D SET(START+1,OFFSET,"   Is Group Plan: "_$S($P(IBCPOLD,"^",2)=1:"YES",1:"NO"))
	D SET(START+2,OFFSET,"      Group Name: "_$P(IBCPOLD,"^",3))
	D SET(START+3,OFFSET,"    Group Number: "_$P(IBCPOLD,"^",4))
	D SET(START+4,OFFSET,"    Type of Plan: "_$P($G(^IBE(355.1,+$P(IBCPOLD,"^",9),0)),"^"))
	; -- in case pointer is missing
	I '$G(^IBA(355.3,+$P(IBCDFND,"^",18),0)) D
	.D SET(START+1,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
	.D SET(START+2,OFFSET,"      Group Name: "_$P(IBCDFND,"^",15))
	.D SET(START+3,OFFSET,"    Group Number: "_$P(IBCDFND,"^",3))
	.Q
	Q
	;
INS	; -- Insurance Co. Region
	N OFFSET,START,IBADD,IBCDFNDA
	S START=1,OFFSET=45
	D SET(START,OFFSET," Insurance Company ",IORVON,IORVOFF)
	D SET(START+1,OFFSET,"   Company: "_$P($G(^DIC(36,+IBCDFND,0)),"^"))
	S IBCDFNDA=$G(^DIC(36,+IBCDFND,.11))
	G:IBCDFNDA="" INSQ
	D SET(START+2,OFFSET,"    Street: "_$P(IBCDFNDA,"^")) S IBADD=1
	I $P(IBCDFNDA,"^",2)'="" D SET(START+3,OFFSET,"  Street 2: "_$P(IBCDFNDA,"^",2)) S IBADD=2
	I $P(IBCDFNDA,"^",3)'="" D SET(START+4,OFFSET,"  Street 3: "_$P(IBCDFNDA,"^",3)) S IBADD=3
	D SET(START+2+IBADD,OFFSET,"City/State: "_$E($P(IBCDFNDA,"^",4),1,15)_$S($P(IBCDFNDA,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCDFNDA,"^",5),0)),"^",2)_" "_$E($P(IBCDFNDA,"^",6),1,5))
	;
INSQ	Q
	;
BLANK(LINE)	; -- Build blank line
	D SET^VALM10(.LINE,$J("",80))
	Q
	;
SET(LINE,COL,TEXT,ON,OFF)	; -- set display info in array
	D:'$D(@VALMAR@(LINE,0)) BLANK(.LINE)
	D SET^VALM10(.LINE,$$SETSTR^VALM1(.TEXT,@VALMAR@(LINE,0),.COL,$L(TEXT)))
	D:$G(ON)]""!($G(OFF)]"") CNTRL^VALM10(.LINE,.COL,$L(TEXT),$G(ON),$G(OFF))
	W:'(LINE#5) "."
	Q

IBCNSP01
IBCNSP01	;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY  ; 05-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
%	D SUBSC,VER,RIDER
	Q
	;
SUBSC	; -- subscriber region
	N OFFSET,START
	S START=15,OFFSET=2
	D SET^IBCNSP(START,OFFSET," Subscriber Information ",IORVON,IORVOFF)
	S Y=$P(IBCDFND,"^",6),C=$P(^DD(2.312,6,0),"^",2) D Y^DIQ
	D SET^IBCNSP(START+1,OFFSET," Whose Insurance: "_Y)
	D SET^IBCNSP(START+2,OFFSET," Subscriber Name: "_$P(IBCDFND,"^",17))
	S Y=$P(IBCDFND,"^",16),C=$P(^DD(2.312,16,0),"^",2) D Y^DIQ
	D SET^IBCNSP(START+3,OFFSET,"    Relationship: "_Y)
	D SET^IBCNSP(START+4,OFFSET,"Insurance Number: "_$P(IBCDFND,"^",2))
	S Y=$P(IBCDFND,"^",20),C=$P(^DD(2.312,.2,0),"^",2) D Y^DIQ
	D SET^IBCNSP(START+5,OFFSET,"Coord.  Benefits: "_Y)
	Q
	;
VER	; -- Entered/Verfied Region
	N OFFSET,START
	S START=22,OFFSET=2
	D SET^IBCNSP(START,OFFSET," User Information ",IORVON,IORVOFF)
	I IBCDFND1="" D SET^IBCNSP(START+1,OFFSET,"No User Information") G VERQ
	D SET^IBCNSP(START+1,OFFSET,"      Entered By: "_$E($P($G(^VA(200,+$P(IBCDFND1,"^",2),0)),"^",1),1,20))
	D SET^IBCNSP(START+2,OFFSET,"      Entered On: "_$$DAT1^IBOUTL(+IBCDFND1))
	D SET^IBCNSP(START+3,OFFSET,"Last Verified By: "_$E($P($G(^VA(200,+$P(IBCDFND1,"^",4),0)),"^",1),1,20))
	D SET^IBCNSP(START+4,OFFSET,"Last Verified On: "_$$DAT1^IBOUTL(+$P(IBCDFND1,"^",3)))
	D SET^IBCNSP(START+5,OFFSET," Last Updated By: "_$E($P($G(^VA(200,+$P(IBCDFND1,"^",6),0)),"^",1),1,20))
	D SET^IBCNSP(START+6,OFFSET," Last Updated On: "_$$DAT1^IBOUTL(+$P(IBCDFND1,"^",5)))
VERQ	Q
	;
RIDER	; -- Personal policy riders
	N OFFSET,START,IBI,IBL
	S START=34+$G(IBLCNT),OFFSET=2
	D SET^IBCNSP(START,OFFSET," Personal Riders ",IORVON,IORVOFF)
	S IBI="" F  S IBI=$O(^IBA(355.7,"APP",DFN,IBCDFN,IBI)) Q:'IBI  S IBPR=$O(^(IBI,0)),IBPRD=+$G(^IBA(355.7,IBPR,0)) D
	.S IBL=$G(IBL)+1
	.D SET^IBCNSP(START+IBL,OFFSET,"   Rider #"_IBL_": "_$$EXPAND^IBTRE(355.7,.01,IBPRD))
	Q
	;
AI	; -- Add ins. verification entry
	;    called from ai^ibcnsp1
	;N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,VA,VAIN,VAERR,IBQUIT,IBXIFN,IBTRN,DUOUT,IBX,IBQUIT,DTOUT
	;Q:'$G(DFN)
	;Q:'$G(IBCDFN)  S IBQUIT=0
	;
	; -- see if current inpatient
	D INP^VADPT I +VAIN(1) D
	.S IBTRN=$O(^IBT(356,"AD",+VAIN(1),0))
	;
	S IBXIFN=$O(^IBE(356.11,"ACODE",85,0))
	;
	; -- if not tracking id allow selecting
	I '$G(IBTRN) D  G:IBQUIT AIQ
	.W !,"You can now enter a contact and relate it to a Claims Tracking Admission entry."
	.S DIC("A")="Select RELATED ADMISSION DATE: "
	.S DIC="^IBT(356,",DIC(0)="AEQ",D="ADFN"_DFN,DIC("S")="I $P(^(0),U,5)"
	.D IX^DIC K DA,DR,DIC,DIE I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 Q
	.I +Y>1 S IBTRN=+Y
	;
	I '$G(IBTRN) W !!,"Warning: This contact is not associated with any care in Claims Tracking.",!,"You may only edit or view this contact using this action.",!
	;
	; -- select date
	S IBOK=0,IBI=0 F  S IBI=$O(^IBT(356.2,"D",DFN,IBI)) Q:'IBI  I $P($G(^IBT(356.2,+IBI,0)),"^",4)=IBXIFN,$P($G(^(1)),"^",5)=IBCDFN S IBOK=1
	I IBOK D  G:IBQUIT AIQ
	.S DIC="^IBT(356.2,",DIC("A")="Select Contact Date: "
	.S X="??",DIC(0)="EQ",DIC("S")="I $P($G(^(1)),U,5)=IBCDFN,$P(^(0),U,4)=IBXIFN" ;,DLAYGO=356.2
	.S D="ADFN"_DFN
	.D IX^DIC K DIC,DR,DA,DIE,D I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1
	;
	S DIC="^IBT(356.2,",DIC("A")="Select Contact Date: ",DIC("B")="TODAY"
	S DIC("DR")=".02////"_$G(IBTRN)_";.04////"_IBXIFN_";.05////"_DFN_";.19////1;1.01///NOW;1.02////"_DUZ_";1.05////"_IBCDFN
	S DIC(0)="AEQL",DIC("S")="I $P(^(0),U,5)=DFN,$P($G(^(1)),U,5)=IBCDFN,$P(^(0),U,4)=IBXIFN",DLAYGO=356.2
	D ^DIC K DIC
	I $D(DTOUT)!($D(DUOUT))!(+Y<1) G AIQ
	S IBTRC=+Y
	I $G(IBTRC),$G(IBTRN),'$P(^IBT(356.2,+IBTRC,0),"^",2) S DA=IBTRC,DIE="^IBT(356.2,",DR=".02////"_$G(IBTRN) D ^DIE
	;
	; -- edit ins ver type
	D EDIT^IBTRCD1("[IBT INS VERIFICATION]",1)
AIQ	Q

IBCNSP02
IBCNSP02	;ALB/AAS - INSURANCE MANAGEMENT - EXPANDED POLICY  ; 05-MAR-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
AI	; -- Add ins. verification entry
	;    called from ai^ibcnsp1
	N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,VA,VAIN,VAERR,IBQUIT,IBXIFN,IBTRN,DUOUT,IBX,IBQUIT,DTOUT,IBA
	Q:'$G(DFN)
	Q:'$G(IBCDFN)  S IBQUIT=0
	;
	; -- see if current inpatient
	;D INP^VADPT I +VAIN(1) D
	S IBA=+$G(^DPT(DFN,.105)) I +IBA S IBTRN=$O(^IBT(356,"AD",+IBA,0))
	;
	S IBXIFN=$O(^IBE(356.11,"ACODE",85,0))
	;
	; -- if not tracking id allow selecting
	I '$G(IBTRN) D  G:IBQUIT AIQ
	.W !,"You can now enter a contact and relate it to a Claims Tracking Admission entry."
	.S DIC("A")="Select RELATED ADMISSION DATE: "
	.S DIC="^IBT(356,",DIC(0)="AEQ",D="ADFN"_DFN,DIC("S")="I $P(^(0),U,5),$P(^(0),U,2)=DFN,$P(^(0),U,20)"
	.D IX^DIC K DA,DR,DIC,DIE I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1 Q
	.I +Y>1 S IBTRN=+Y
	;
	;I '$G(IBTRN) W !!,"Warning: This contact is not associated with any care in Claims Tracking.",!,"You may only edit or view this contact using this action.",!
	;
	; -- select date
	S IBOK=0,IBI=0 F  S IBI=$O(^IBT(356.2,"D",DFN,IBI)) Q:'IBI  I $P($G(^IBT(356.2,+IBI,0)),"^",4)=IBXIFN,$P($G(^(1)),"^",5)=IBCDFN S IBOK=1
	I IBOK D  G:IBQUIT AIQ
	.S DIC="^IBT(356.2,",DIC("A")="Select Contact Date: "
	.S X="??",DIC(0)="EQ",DIC("S")="I $P(^(0),U,5)=DFN,$P($G(^(1)),U,5)=IBCDFN,$P(^(0),U,4)=IBXIFN" ;,DLAYGO=356.2
	.S D="ADFN"_DFN
	.D IX^DIC K DIC,DR,DA,DIE,D I $D(DUOUT)!($D(DTOUT)) S IBQUIT=1
	;
	S DIC="^IBT(356.2,",DIC("A")="Select Contact Date: ",DIC("B")="TODAY"
	S DIC("DR")=".02////"_$G(IBTRN)_";.04////"_IBXIFN_";.05////"_DFN_";.19////1;1.01///NOW;1.02////"_DUZ_";1.05////"_IBCDFN
	S DIC(0)="AEQL",DIC("S")="I $P(^(0),U,5)=DFN,$P($G(^(1)),U,5)=IBCDFN,$P(^(0),U,4)=IBXIFN",DLAYGO=356.2
	D ^DIC K DIC
	I $D(DTOUT)!($D(DUOUT))!(+Y<1) G AIQ
	S IBTRC=+Y I '$G(IBTRN),$P(^IBT(356.2,+IBTRC,0),"^",2) S IBTRN=$P(^(0),"^",2)
	;
	I '$G(IBTRN) W !!,"Warning: This contact is not associated with any care in Claims Tracking.",!,"You may only edit or view this contact using this action.",! K IBTRN
	;
	I $G(IBTRC),$G(IBTRN),'$P(^IBT(356.2,+IBTRC,0),"^",2) S DA=IBTRC,DIE="^IBT(356.2,",DR=".02////"_$G(IBTRN) D ^DIE
	;
	; -- edit ins ver type
	D EDIT^IBTRCD1("[IBT INS VERIFICATION]",1)
AIQ	Q
	;
AIP(IBTRC)	; -- ask if want to print a worksheet
	N DIR,DIRUT,DTOUT,DUOUT,IBW,IBCTHDR
	I '$D(IBTRN) N IBTRN S IBTRN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",2)
	I '$D(DFN) N DFN S DFN=$P($G(^IBT(356,+$G(IBTRN),0)),"^",2)
	Q:'$G(DFN)!('$G(IBTRN))
	W ! S DIR(0)="SOBA^C:CT SUMMARY;W:WORKSHEET;B:BOTH;N:NONE"
	S DIR("A")="Print [C]T Summary  [W]ork Sheet (UR)  [N]one  [B]oth: "
	S DIR("B")="NONE"
	S DIR("?")="You may choose print a UR work sheet, a summary from claims tracking (of this episode), both or nothing."
	D ^DIR K DIR
	S IBW=Y I "CWB"'[Y!($D(DIRUT)) G AIPQ
	S %ZIS="QM" D ^%ZIS G:POP AIPQ
	I $D(IO("Q")) S ZTRTN="AIPDQ^IBCNSP02",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Print UR from Ins review" D ^%ZTLOAD D HOME^%ZIS G AIPQ
	U IO
AIPDQ	; entry point from taskman
	I IBW="C"!(IBW="B") S IBCTHDR="Claims Tracking Summary" D ONE^IBTOBI W @IOF
	I IBW="W"!(IBW="B") D DQ^IBTRC4
	;
END	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,%ZIS,VA,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,DIRUT,DUOUT,IBCNT,IBI,IBJ,IBNAR,IBTNOD,IBTRCD1,IBTRTP,IBDA
	D KVAR^VADPT
AIPQ	Q

IBCNSP1
IBCNSP1	;ALB/AAS - INSURANCE MANAGEMENT - policy actions ; 22-OCT-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBCNSP
	;
EA	; -- Edit all
	N IBCDFN,IBTRC,IBTRN
	D FULL^VALM1 W !!
	S IBCDFN=$P($G(IBPPOL),"^",4) I 'IBCDFN W !!,"Can't identify the policy!" G EAQ
	S IBCNSEH=1 D PAT^IBCNSEH
	;
	D PATPOL^IBCNSM3(IBCDFN)
	;
	; -- edit policy data
	D POL^IBCNSEH
	D EDPOL^IBCNSM3(IBCDFN)
	;
	W !! D AI
	;
EAQ	D:$G(IBTRC) AIP^IBCNSP02(IBTRC)
	D BLD^IBCNSP
	S VALMBCK="R"
	Q
	;
AB	; -- Annual Benefits
	I '$D(IBCPOL),$D(IBPPOL) S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	I '$G(IBCPOL) W !!,"Can't identify the policy!" S VALMBCK="" G ABQ
	D FULL^VALM1 W !!
	D EN^VALM("IBCNS ANNUAL BENEFITS")
	S VALMBCK="R"
ABQ	Q
	;
BU	; -- Benefits Used
	I '$D(IBCPOL),$D(IBPPOL) S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	I '$G(IBCPOL) W !!,"Can't identify the policy!" S VALMBCK="" G BUQ
	D FULL^VALM1 W !!
	D EN^VALM("IBCNS BENEFITS USED BY DATE")
	S VALMBCK="R"
BUQ	Q
	;
PI	; -- edit policy information
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIC,DIE
	S IBCDFN=$P($G(IBPPOL),"^",4)
	;
	S IBCPOL=$P($G(^DPT(DFN,.312,IBCDFN,0)),"^",18)
	I IBCPOL="" S IBCPOL=$$CHIP^IBCNSU($G(^DPT(DFN,.312,IBCDFN,0))) I IBCPOL D  ;Stuff in file
	.S DIE="^DPT("_DFN_",.312,",DR=".18////"_IBCPOL
	.S DA=IBCDFN,DA(1)=DFN
	.D ^DIE
	.K DA,DR,DIE,DIC
	.Q
	;
	; -- Edit the policy specific info
	D SAVE^IBCNSP3(IBCPOL)
	L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G PIQ
	S DIE="^IBA(355.3,",DR=".02;.03;.04;.09",DA=IBCPOL
	D ^DIE K DIC,DIE,DA,DR
	D COMP^IBCNSP3(IBCPOL)
	I IBDIF D UPDATE^IBCNSP3(IBCPOL),UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP
	L -^IBA(355.3,+IBCPOL)
PIQ	S VALMBCK="R"
	Q
	;
IT	; -- edit insurance type info
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIC,DIE
	D SAVE^IBCNSP3(IBCPOL)
	L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G ITQ
	S DA=IBCPOL,DIE="^IBA(355.3,",DR=".05;.06;.07;.08"
	D ^DIE K DIC,DIE,DA,DR
	D COMP^IBCNSP3(IBCPOL)
	I IBDIF D UPDATE^IBCNSP3(IBCPOL),UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP
	L -^IBA(355.3,+IBCPOL)
ITQ	S VALMBCK="R" Q
	;
ED	; -- Edit effective dates
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIE,DIC
	D SAVEPT^IBCNSP3(DFN,IBCDFN)
	L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G EDQ
	D VARS^IBCNSP3
	S DR="8;3"
	D ^DIE K DIC,DIE,DA,DR
	D COMPPT^IBCNSP3(DFN,IBCDFN) I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP
	L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
EDQ	S VALMBCK="R" Q
	;
VC	; -- Verify Coverage
	D FULL^VALM1 W !!
	D VFY^IBCNSM2
	D BLD^IBCNSP
	S VALMBCK="R" Q
	;
SU	; -- Subscriber Update
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIC,DIE
	D SAVEPT^IBCNSP3(DFN,IBCDFN)
	D VARS^IBCNSP3
	L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G SUQ
	S DR="6;S IBAD=X;I IBAD'=""v"" S Y=""@10"";17///^S X=""`""_DFN;16///^S X=""01"";S Y=""@20"";@10;17;16//^S X=$S(IBAD=""s"":""02"",1:"""");@20;1;.2;"
	D ^DIE K DIC,DIE,DA,DR
	D COMPPT^IBCNSP3(DFN,IBCDFN)
	I IBDIF D UPDATPT^IBCNSP3(DFN,IBCDFN),BLD^IBCNSP
	L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
SUQ	S VALMBCK="R" Q
	;
IC	; -- Insurance Contact Information
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIC,DIE,IBTRC,DIR,DUOUT,DTOUT,DIRUT,IBTRN
	D AI
	D:$G(IBTRC) AIP^IBCNSP02(IBTRC),BLD^IBCNSP
	S VALMBCK="R" Q
	Q
AI	; -- Add ins. verification entry
	N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,VA,VAIN,VAERR,IBQUIT,IBXIFN,IBTRN,DUOUT,IBX,IBQUIT,DTOUT
	Q:'$G(DFN)
	Q:'$G(IBCDFN)  S IBQUIT=0
	D AI^IBCNSP02
	Q

IBCNSP2
IBCNSP2	;ALB/AAS - PATIENT INSURANCE INTERFACE FOR REGISTRATION ; 21-JUNE-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
REG	; --Edit Patient insurance from registration, fee and mccr, allow new entries
	;   only edit policy if new policy
	;   call event driver if adding a new policy
	;
	; -- Input  DFN  = patient
	;
	N DIC,DIE,DE,DQ,DIR,DA,DR,DIC,DIV,X,Y,I,J,L,D,DIH,DIY,IBSEL,IBDD,IBD,IBNEW,IBNEWP,IBDT,IBQUIT,IBCNS,IBCDFN,IBCNSEH,IBCNP,IBCPOL,IBOK,VALMQUIT,IBCNT,IBEVT1,IBEVTA,VAERR,IBCOVP
	S IBCNP=1
	I '$D(DFN) D  G:$D(VALMQUIT) REGQ
	.S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC
	.S DFN=+Y
	I $G(DFN)<1 S IBQUIT=1,VALMQUIT="" G REGQ
	;
	; -- of covered by ins but none currently active so indicate
	S IBCOV=$P($G(^DPT(DFN,.31)),"^",11)
	I IBCOV="Y",'$$INSURED^IBCNS1(DFN) W !!,"Covered By Health Insurance indicates 'YES' but none currently Active.",!,"Please Review!",!!
	;
	; -- ask if covered by insuracnce
	S DIE="^DPT(",DR=".3192",DA=DFN D ^DIE K DIC,DIE,DA,DR
	S IBCOVP=$P($G(^DPT(DFN,.31)),"^",11)
	I $D(Y)!($D(DTOUT)) S IBQUIT=1 G REGQ
	I $P($G(^DPT(DFN,.31)),"^",11)'="Y",'$$INSURED^IBCNS1(DFN) S IBQUIT=1 G REGQ
	;
R1	S (IBNEW,IBNEWP,IBQUIT)=0
	S DIC="^DPT("_DFN_",.312,",DIC(0)="AEQLM",DIC("A")="Select INSURANCE COMPANY: "
	S DIC("W")="N IBD S IBD=$G(^DPT(DFN,.312,+Y,0)) W ""  Group: ""_$$GRP^IBCNS($P(IBD,U,18))_""  Whose: ""_$$EXPAND^IBTRE(2.312,6,$P(IBD,U,6))"
	I IBCNP=1 S X=$P($G(^DIC(36,+$G(^DPT(DFN,.312,+$P($G(^DPT(DFN,.312,0)),"^",3),0)),0)),"^") I X'="" S DIC("B")=X
	S DA(1)=DFN
	I $G(^DPT(DFN,.312,0))="" S ^DPT(DFN,.312,0)="^2.312PAI^^"
	D ^DIC K DIC I +Y<1 S IBQUIT=1,VALMQUIT="" G REGQ
	S IBCDFN=+Y,IBCNS=$P(Y,"^",2)
	I $P(Y,"^",3) S IBNEW=1 I $$DUPCO^IBCNSOK1(DFN,IBCNS,IBCDFN,1)
	S IBCNSEH=$P($G(^IBE(350.9,1,4)),"^",1)
	S IBCNP=IBCNP+1
	I 'IBNEW,$P($G(^DPT(DFN,.312,+IBCDFN,0)),"^",18)="" D  G REGQ
	.I '$P($G(^IBE(350.9,1,3)),"^",18) W !,"Insurance conversion not complete, NO EDITING ALLOWED",!! S IBQUIT=1 H 3 Q
	.I $P($G(^IBE(350.9,1,3)),"^",18) W !,"INVALID ENTRY, DELETE AND RE-ENTER, NO EDITING ALLOWED",!! S IBQUIT=1 H 3 Q
	;
	I $G(IBFEE),'$G(IBNEW) G REGQ ; fee users can add but not edit existing  info
	I $G(IBNEW) D  G:$G(IBQUIT) REGQ
	.D SEL^IBCNSEH
	.S IBCPOL=$$LK^IBCNSM31(IBCNS)
	.I IBCPOL>0 D OK^IBCNSM3 Q:IBQUIT  S:'IBOK IBCPOL=-1
	.I IBCPOL<1 S IBCPOL=$$NEW^IBCNSM3(IBCNS) S:IBCPOL<1 IBQUIT=1 Q:IBQUIT  S IBNEWP=1
	.S DR=".18////"_IBCPOL_";1.09////1;1.05///NOW;1.06////"_DUZ
	.S DA=IBCDFN,DA(1)=DFN,DIE="^DPT("_DFN_",.312," D ^DIE
	.K DIE,DA,DR,DIC
	;
	; -- edit patient ins. data
	S IBREG=1 G:$G(IBQUIT) REGQ
	D PAT^IBCNSEH,PATPOL^IBCNSM3(IBCDFN)
	;
	; -- edit policy specific data if new or have key
	I $G(IBNEWP)!($D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ))) D:'$G(IBQUIT) POL^IBCNSEH,EDPOL^IBCNSM3(IBCDFN)
	K IBREG S IBQUIT=0
	;
REGQ	; -- exit logic and checks
	; -- if no policy pointer delete
	I $G(IBNEW),$G(IBCDFN),$P($G(^DPT(DFN,.312,+IBCDFN,0)),"^",18)="" D
	.D DP1^IBCNSM1 W !,"<DELETED>  GROUP INSURANCE PLAN REQUIRED BUT NOT ENTERED" K IBNEW
	;
	; -- if new call event drive
	I $G(IBNEW),$G(IBCDFN)>1,$P($G(^DPT(DFN,.312,+$G(IBCDFN),0)),"^",18) D
	.K IBNEW
	.D AFTER^IBCNSEVT,^IBCNSEVT
	;
	K IBCNS,IBCDFN,IBNEW,IBNEWP
	I '$G(IBQUIT) W ! G R1
	D COVERED^IBCNSM31(DFN,$G(IBCOVP))
	K IBQUIT
	Q
	;
FEE	; -- fee entry point to add patient insurance.
	N IBFEE S IBFEE=1 D REG
	Q
	;
MCCR	; -- called from screen 3 of the edit bill option in mccr
	N DLAYGO,DIC,DIE,DE,DQ,DIR,DA,DR,DIC,DIV,X,Y,I,J,L,D,DIH,DIY,IBSEL,IBDD,IBD,IBNEW,IBNEWP,IBDT,IBQUIT,IBCNS,IBCDFN,IBCNSEH,IBCNP,IBCPOL,IBOK,VALMQUIT
	;
	S IBCNP=1
	S DIE="^DGCR(399,",DA=IBIFN,DR="[IB SCREEN3]" D ^DIE K DIC,DIE,DA,DR
	;
	I $G(IBADI)=1 D R1 S IBCNRTN=1 K IBADI G MCCR
	K IBCNRTN
	Q
	;
DISP	; -- Display Patient insurance policy information for registrations
	Q:'$D(DFN)
	D DISP^IBCNS
DISPQ	Q

IBCNSP3
IBCNSP3	;ALB/AAS - INSURANCE MANAGEMENT EDIT ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBCNSM4
	;
SAVEPT(DFN,DA)	; -- Save the global before editing
	K ^TMP($J,"IBCNSPT")
	S ^TMP($J,"IBCNSPT",2.312,DFN,DA,0)=$G(^DPT(DFN,.312,DA,0))
	S ^TMP($J,"IBCNSPT",2.312,DFN,DA,1)=$G(^DPT(DFN,.312,DA,1))
	S ^TMP($J,"IBCNSPT",2.312,DFN,DA,2)=$G(^DPT(DFN,.312,DA,2))
	Q
	;
COMPPT(DFN,DA)	; -- Compare before editing with globals
	S IBDIF=0
	I $G(^DPT(DFN,.312,DA,0))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,DA,0)) S IBDIF=1 G COMPPTQ
	I $G(^DPT(DFN,.312,DA,1))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,DA,1)) S IBDIF=1 G COMPPTQ
	I $G(^DPT(DFN,.312,DA,2))'=$G(^TMP($J,"IBCNSPT",2.312,DFN,DA,2)) S IBDIF=1 G COMPPTQ
	;
COMPPTQ	I IBDIF D:'$D(IBCOVP) COVERED^IBCNSM31(DFN,$P($G(^DPT(DFN,.31)),"^",11))
	Q
	;
UPDATPT(DFN,DA)	; -- enter date and user if editing has taken place
	N DR,DIE,DIC
	S DIE="^DPT("_DFN_",.312,",DA(1)=DFN
	S DR="1.05///NOW;1.06////"_DUZ
	D ^DIE
	Q
	;
EM	; -- Employer for claims update
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIC,DIE
	D SAVEPT(DFN,IBCDFN)
	D VARS
	L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G EMQ
	S DR="2.01;S:'$P($G(^DPT(DFN,.312,+$G(DA),2)),U) Y=""@999"";W !!,""*** If ROI applies, make sure current consent is signed! ***"",!;2.015;2.02;2.03;2.04;2.05;2.06;2.07;2.08;2.09;@999"
	D ^DIE K DIE,DR
	I '$P($G(^DPT(DFN,.312,+$G(DA),2)),U) D VARS S DR="2.015///@;2.02///@;2.03///@;2.04///@;2.05///@;2.06///@;2.07///@;2.08///@" D ^DIE
	D COMPPT(DFN,IBCDFN)
	I IBDIF D UPDATPT(DFN,IBCDFN),BLD^IBCNSP
	L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
EMQ	S VALMBCK="R" Q
	;
AC	; -- Add Comment
	D FULL^VALM1 W !!
	N IBDIF,DA,DR,DIE,DIC,X,Y
	D SAVEPT(DFN,IBCDFN)
	W !!,"You may now enter a brief comment about this patient's policy"
	D VARS
	L +^DPT(DFN,.312,+$P($G(IBPPOL),"^",4)):5 I '$T D LOCKED^IBTRCD1 G ACQ
	S DR="1.08" D ^DIE
	D COMPPT(DFN,IBCDFN) I IBDIF D UPDATPT(DFN,IBCDFN)
	L -^DPT(DFN,.312,+$P($G(IBPPOL),"^",4))
	W !!,"You may now enter comments about this Group Plan that pertains to all Patients"
	L +^IBA(355.3,+IBCPOL):5 I '$T D LOCKED^IBTRCD1 G ACQ
	S DIE="^IBA(355.3,",DA=IBCPOL,DR="11" D ^DIE
	D BLD^IBCNSP
	L -^IBA(355.3,+IBCPOL)
ACQ	S VALMBCK="R" Q
	;
BLS(X,Y)	; -- blank a section of lines
	N I
	F I=X:1:Y D BLANK^IBCNSP(.I)
	Q
	;
VARS	; -- set vars for call to die for .312 node
	S DA(1)=DFN,DA=$P(IBPPOL,"^",4)
	S DIE="^DPT("_DA(1)_",.312,"
	Q
	;
SAVE(IBCPOL)	; -- Save the global before editing
	K ^TMP($J,"IBCNSP")
	S ^TMP($J,"IBCNSP",355.3,IBCPOL,0)=$G(^IBA(355.3,IBCPOL,0))
	S ^TMP($J,"IBCNSP",355.3,IBCPOL,1)=$G(^IBA(355.3,IBCPOL,1))
	Q
	;
COMP(IBCPOL)	; -- Compare before editing with globals
	S IBDIF=0
	I $G(^IBA(355.3,IBCPOL,0))'=$G(^TMP($J,"IBCNSP",355.3,IBCPOL,0)) S IBDIF=1 Q
	I $G(^IBA(355.3,IBCPOL,1))'=$G(^TMP($J,"IBCNSP",355.3,IBCPOL,1)) S IBDIF=1 Q
	Q
	;
UPDATE(IBCPOL)	; -- Update last edited by
	N DA,DIC,DIE,DR
	S DIE="^IBA(355.3,",DA=IBCPOL,DR="1.05///NOW;1.06////"_DUZ
	D ^DIE
	Q
	;
RIDERS	; -- add/edit personal riders
	;
	D FULL^VALM1
	N IBDIF,DA,DR,DIE,DIC,X,Y,IBCDFN,IBPRD,IBPRY
	S IBCDFN=$P(IBPPOL,"^",4)
	W ! D DISPR W !
	;
R1	S DIC="^IBA(355.7,",DIC(0)="AEQML",DLAYGO=355.7
	S DIC("DR")=".02////"_DFN_";.03////"_IBCDFN
	S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,3)=IBCDFN"
	I $D(IBPRD) S DIC("B")=IBPRD
	D ^DIC K DIC,IBPRD
	I +Y<1 G RIDERQ
	S IBPRY=+Y
	L +^IBA(355.7,IBPRY):5 I '$T D LOCKED^IBTRCD1 G RIDERQ
	S DIE="^IBA(355.7,",DA=+Y,DR=".01"
	D ^DIE K DA,DR,DIE,DIC
	L -^IBA(355.7,IBPRY)
	W ! G R1
RIDERQ	S VALMBCK="R"
	Q
	;
RD	; -- Add riders/ for multiple policies
	D FULL^VALM1
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXX,0))))
	.Q:IBPPOL=""
	.D RIDERS
	.Q
	D BLD^IBCNSM
	S VALMBCK="R"
	Q
	;
DISPR	; -- Display riders
	N IBPR,I,J
	S I=0
	I '$G(IBCDFN)!('$G(DFN)) G DISPRQ
	W !,"Current Personal Riders: "
	F  S I=$O(^IBA(355.7,"APP",DFN,IBCDFN,I)) Q:'I  S J=$O(^(I,0)),IBPR=$G(^IBA(355.7,+J,0)) D
	.S IBPRD=$$EXPAND^IBTRE(355.7,.01,+IBPR)
	.W !?5,IBPRD
	I '$D(IBPRD) W !?5,"None Indicated"
DISPRQ	Q

IBCNSU
IBCNSU	;ALB/AAS - INSURANCE UTILITY ROUTINE ; 19-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
AB(IBCPOL,IBYR,IBASK)	; -- Return entry in Annual Benefits file
	;  Input:  IBCPOL  = pointer to health insurance policy file
	;          IBYR    = fileman internal date, Default = dt
	;          IBASK   = 1 if want to ask okay to add new entry
	;
	; Output:  IBCAB   = pointer to Annual Benefits file if added, else null
	;
	N DIR,IBCAB
	S IBCAB=""
	I $G(IBCPOL)="" G ABQ
	I $G(IBYR)="" S IBYR=DT
	;S IBYR=$E(IBYR,1,3)_"0000"
	;
	; -- try to find entry for policy for year
	S IBCAB=$O(^IBA(355.4,"APY",IBCPOL,-IBYR,0))
	;
	; -- if no match add new entry
	I 'IBCAB D
	.I $G(IBASK) S DIR(0)="Y",DIR("A")="Are you adding a new Annual Benefits YEAR",DIR("B")="YES" D ^DIR I $D(DIRUT)!(Y<1) S VALMQUIT="" Q
	.S IBCAB=$$ADDB(IBCPOL,IBYR)
	.Q
ABQ	Q IBCAB
	;
ADDB(IBCPOL,IBYR)	; -- add entries to Annual Benefits file
	;  Input:  IBCPOL  = pointer to health insurance policy file
	;          IBYR    = fileman internal date, Default = dt
	;
	; Output:  IBCAB   = pointer to Annual Benefits file if added, else null
	;
	N %DT,IBN1,IBCAB,DIC,DIE,DR,DA,DLAYGO,DO,DD
	S IBCAB=""
	I $G(IBCPOL)="" G ADDBQ
	I $G(IBYR)="" S IBYR=DT
	K DD,DO,DIC,DR S DIC="^IBA(355.4,",DIC(0)="L",DLAYGO=355.4
	;
	;S X=$E(IBYR,1,3)_"0000"
	S X=IBYR D FILE^DICN I +Y<0 G ADDBQ
	S (IBCAB,DA)=+Y,DIE="^IBA(355.4,",DR=".02////"_IBCPOL
	D ^DIE K DIC,DIE,DA,DR
ADDBQ	Q IBCAB
	;
CHIP(IBCDFND)	; -- convert node with no hip pointer to one with hip pointer
	;   Input:  IBCDFND  = zeroth node of insurance type multiple
	;                    = ^dpt(dfn,.312,ibcdfn,0)
	;
	;  Output:  IBCPOL   = pointer to policy file
	;
	N IBCNS,IBGRP,IBGRNA,IBGRNU
	S IBCNS=+IBCDFND,IBGRNA=$P(IBCDFND,"^",15),IBGRNU=$P(IBCDFND,"^",3),IBGRP=0
	I IBGRNA'=""!(IBGRNU'="") S IBGRP=1
	S IBCPOL=$$HIP(IBCNS,IBGRP,IBGRNA,IBGRNU)
CHIPQ	Q IBCPOL
	;
HIP(IBCNS,IBGRP,IBGRNA,IBGRNU)	; -- find internal entry number in policy file
	;  Input:  IBCNS  = pointer to ins co file
	;          IBGRP  = 1 if group policy, 0 if not
	;          IBGRNA = group name
	;          IBGRNU = group number
	;
	; Output:  IBCPOL = pointer to policy file
	;
	N %DT
	S IBCPOL=""
	I $G(^DIC(36,+$G(IBCNS),0))="" G HIPQ
	S IBGRP=+$G(IBGRP) ; if undefine, is not a group policy
	I 'IBGRP S IBCPOL=$$ADDH(IBCNS,IBGRP) G HIPQ
	;
	S:$G(IBGRNU)="" IBGRNU="IB ZZZZZ"
	I IBGRNU'="IB ZZZZZ" S IBCPOL=$O(^IBA(355.3,"AGNU",IBCNS,IBGRNU,0))
	I IBCPOL,$P($G(^IBA(355.3,+IBCPOL,0)),"^",3)=IBGRNA G HIPQ ; match both
	;
	S:$G(IBGRNA)="" IBGRNA="IB ZZZZZ"
	S IBCPOL=$O(^IBA(355.3,"AGNA",IBCNS,IBGRNA,0))
	I IBCPOL,$P($G(^IBA(355.3,+IBCPOL,0)),"^",4)=IBGRNU G HIPQ ; match both
	;
	I 'IBCPOL S IBCPOL=$$ADDH(IBCNS,IBGRP) D
	.I IBGRNA="",IBGRNU="" Q
	.S:IBGRNA="IB ZZZZZ" IBGRNA="" S:IBGRNU="IB ZZZZZ" IBGRNU=""
	.S DA=IBCPOL,DIE="^IBA(355.3,",DR=".03////"_$$STRIP(IBGRNA,";")_";.04////"_$$STRIP(IBGRNU,";")
	.D ^DIE K DA,DR,DIC,DIE
HIPQ	Q IBCPOL
	;
ADDH(IBCNS,IBGRP)	; -- add entries to health insurance policy file (355.3)
	;     Input:  IBCNS  = pointer to ins co file
	;             IBGRP  = 1 if group policy, 0 if no
	;
	;    Output:  IBCPOL = pointer to policy file, if added else null
	;
	N %DT,IBN1,IBCAB,DIC,DIE,DR,DA,DLAYGO,DO,DD
	S IBCPOL=""
	I $G(IBCNS)="" G ADDBQ
	K DD,DO,DIC,DR S DIC="^IBA(355.3,",DIC(0)="L",DLAYGO=355.3
	;
	S X=IBCNS D FILE^DICN I +Y<0 G ADDHQ
	S (DA,IBCPOL)=+Y,DIE="^IBA(355.3,",DR=".02////"_+$G(IBGRP)
	I IBGRP=0,$G(DFN) S DR=DR_";.1////"_DFN
	D ^DIE K DA,DR,DIE,DIC
	I $G(IBCNTP)'="" S IBCNTP=IBCNTP+1
ADDHQ	Q IBCPOL
	;
DELP(DFN,INS)	; -- can an insurance policy be deleted
	; -- called by ^dd(2.312,0,"del",.01) and by ibcnsm
	; -- input  dfn: ien of patient in file 2.
	;           ins: ien of ins. co in file 36
	;
	; -- output      1 if no deletion allowed
	;                 0 if deletion allowed
	N I,X,Y S X=0
	;
	; -- do not delete if any uncancelled bills
	S J=0 F  S J=$O(^DGCR(399,"AE",DFN,INS,J)) Q:'J  I $P(^DGCR(399,J,"S"),"^",17)="" S X=1 Q
DELPQ	Q X
	;
STRIP(X,X1)	; -- strip characters from string
	;    input:  x  = string
	;            x1 = character to strip (default is ";"
	N I,X2
	S X2="" S:$G(X1)="" X1=";"
	S X1=$E(X1)
	F I=1:1 S X2=X2_$P(X,X1,I) Q:($P(X,X1,I+1,999)'[X1)
	Q X2

IBCNSU1
IBCNSU1	;ALB/AAS - INSURANCE UTILITY ROUTINE ; 19-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
RCHK(X)	; -- Input transform for different revenue codes in file 36
	;    Returns 1 if passes, 0 if not pass input transform
	;
	N I,Y,RC,NO S Y=0
	I $G(X)="" G RCHKQ
	F I=1:1 S RC=$P(X,",",I) Q:RC=""  I $S(RC?3N:0,RC?5N:0,1:1) S NO=1 Q
	I '$G(NO) S Y=1
RCHKQ	Q Y
	;
BU(DFN,IBCPOL,IBYR,IBCDFN,IBASK)	; -- Return entry in Benefits Used file
	;     Input:  IBCDFN  = pointer to patient file policy (2.312)
	;             DFN     = patient pointer        
	;             IBCPOL  = pointer to health insurance policy file
	;             IBYR    = fileman internal date, year will be calendar
	;                       year of the internal date, Default = dt
	;             IBASK   = 1 if want to ask okay to add new entry
	;
	;    Output:  IBCBU   = pointer to Benefits Used file if added,
	;                       else null
	;
	N DIR,IBCBU
	S IBCBU=""
	I $G(IBCPOL)="" G BUQ
	I $G(IBYR)="" S IBYR=DT
	;
	;if no match display message
	I '$O(^IBA(355.4,"APY",IBCPOL,-IBYR,0)) W !!,"You cannot add a new Benefits Used BENEFIT YEAR",!! G BUQ
	;
	; -- try to find entry for policy for year
	S IBCBU=$O(^IBA(355.5,"APPY",DFN,IBCPOL,-IBYR,IBCDFN,0))
	;
	; -- if no match add new entry
	I 'IBCBU D
	.I $G(IBASK) S DIR(0)="Y",DIR("A")="Are you adding a new Benefits Used YEAR",DIR("B")="YES" D ^DIR I $D(DIRUT)!(Y<1) S VALMQUIT="" Q
	.S IBCBU=$$ADDBU(DFN,IBCPOL,IBYR,IBCDFN)
	.Q
	;
BUQ	Q IBCBU
	;
ADDBU(DFN,IBCPOL,IBYR,IBCDFN)	; -- add entries to Benefits Used file
	;     Input:  DFN     = pointer to patient file
	;             IBCDFN  = point to patient policy (2.312)
	;             IBCPOL  = pointer to health insurance policy file
	;             IBYR    = fileman internal date, year will be calendar
	;                       year of the internal date, Default = dt
	;
	;    Output:  IBCBU   = pointer to Benefits Used file if added,
	;                       else null
	;
	N %DT,IBN1,IBCBU,DIC,DIE,DR,DA,DLAYGO,DO,DD
	S IBCBU=""
	I $G(IBCDFN)="" G ADDBUQ
	I $G(IBCPOL)="" G ADDBUQ
	I $G(IBYR)="" S IBYR=DT
	K DD,DO,DIC,DR S DIC="^IBA(355.5,",DIC(0)="L",DLAYGO=355.5
	;
	;S IBYR=$E(IBYR,1,3)_"0000"
	S X=IBCPOL D FILE^DICN I +Y<0 G ADDBUQ
	S (IBCBU,DA)=+Y,DIE="^IBA(355.5,",DR=".02////"_DFN_";.03////"_IBYR_";.17////"_IBCDFN_";1.01///NOW;1.02////"_DUZ
	D ^DIE K DIC,DIE,DA,DR
ADDBUQ	Q IBCBU

IBCNSV
IBCNSV	;ALB/AAS - INS. MGMT, INVOKE LIST TEMPLATE ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
NXT(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N VALMY,I,J,IBXXV
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1 W !!
	I $D(VALMY) S IBXXV=0 F  S IBXXV=$O(VALMY(IBXXV)) Q:'IBXXV  D
	.S IBPPOL=$G(^TMP("IBNSMDX",$J,$O(^TMP("IBNSM",$J,"IDX",IBXXV,0))))
	.Q:IBPPOL=""
	.S IBCNS=$P(IBPPOL,"^",5),IBCPOL=$P(IBPPOL,"^",22)
	.D EN^VALM(IBTMPNM)
	.Q
	D BLD^IBCNSM
	S VALMBCK="R"
	Q

IBCOC
IBCOC	;ALB/AAS - INACTIVE INS. COMPANIES WITH PATIENTS ; 04-NOV-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	; -- fileman print in inactive ins. companies
	W !!,"Print List of Inactive Insurance Companies still listed as Insuring Patients"
	W !!,"You will need a 132 column printer for this report!",!!
	S DIC="^DIC(36,",FLDS="[IB INACTIVE INS CO]",BY="[IB INACTIVE INS CO]",FR="?,?",TO="?,?"
	S DIS(0)="I $D(^DPT(""AB"",D0))"
	D EN1^DIP
	W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K D,I,J,X,Y,IBCNT,DIC,FLDS,BY,TO,FR,DIS
	Q
	;
CNT(D0)	; -- count number of entries
	N X,Y S X=0
	G:'$G(D0) CNTQ
	S Y=0 F  S Y=$O(^DPT("AB",D0,Y)) Q:'Y  S X=X+1
CNTQ	Q X

IBCOC1
IBCOC1	;ALB/NLR - NEW, NOT VERIFIED INS. ENTRIES ; 24-NOV-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	; -- fileman print of new, not verified insurance entries
	;
	W !!,"Print List of New, Not Verified Insurance Entries"
	W !!,"You will need a 132 column printer for this report!",!!
	;
	S DIC="^DPT(",FLDS="[IBNOTVER]",BY="[IBNOTVER1]"
	D ASK G:$G(IBQ)=1 END
	S DHD="REPORT OF NEW, NOT VERIFIED INSURANCE ENTRIES FROM: "_FR(1)_" TO: "_TO(1)
	D EN1^DIP
	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
END	K DIC,FLDS,BY,FR,TO,IBQ,DHD
	Q
ASK	;
	N IBBDT,IBEDT
	D DATE^IBOUTL
	I (IBBDT<1)!(IBEDT<1) S IBQ=1
	S FR=",,"_IBBDT_",?",TO=",,"_IBEDT_",?"
	S FR(1)=$$DAT1^IBOUTL(IBBDT),TO(1)=$$DAT1^IBOUTL(IBEDT)
	Q

IBCONS1
IBCONS1	;ALB/AAS - NSC PATIENTS W/ INS BACKGROUND PRINTS ; 7 JUN 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRONS1
	;
EN	; Inpatient Discharge entry to que background once weekly
	S IBINPT=2,IBSUB="AMV3" G QUEUE
	;
EN1	; Inpatient Admission entry to que background once weekly
	S IBINPT=1,IBSUB="AMV1" G QUEUE
	;
EN2	; Outpatient entry to que background once weekly
	S IBINPT=0,IBSUB=""
	;
QUEUE	; Set up the background job to run for the previous week
	;   o  For All Divisions
	;   o  For Insured veterans with unbilled episodes of care
	;   o  With the output sorted by Terminal Digit
	;
	K ^TMP($J)
	S X="T",%DT="" D ^%DT S IBEND=+Y
	S X="T-7",%DT="" D ^%DT S IBBEG=+Y K %DT
	S (VAUTD,IBSORT,IBTERM,IBRNB)=1
	U IO G BEGIN^IBCONSC
	;
	;
LOOP25	; Print all NSC w/Insurance reports.
	S IBQUIT=0,IBFL=1,IBDV=""
	F  S IBDV=$O(^TMP($J,IBDV)) Q:IBDV=""  D LOOP3 Q:IBQUIT
	D:'IBQUIT PAUSE
	;
Q	K %,%DT,B,I,J,K,L,M,X,X1,X2,Y,DFN,IBCNT,IBIFN,IBBILL,IBDATE,IBFLAG,IBI,IBDT,IBPAGE,IBL,IBHD,IBBEG1
	K IBBEG,IBEND,IBINPT,IBFLAG,IBNAME,IBAPPT,IBDC,IBDAT,IBDFN,POP,^TMP($J)
	;I '$D(ZTQUEUED) D ^%ZISC
	Q
	;
	;
LOOP3	; Loop through billed, unbilled, or both types of episodes of care.
	F IBBILL=$S(IBSORT<3:IBSORT,1:1):1:$S(IBSORT<3:IBSORT,1:2) S IBNAME="",IBPAGE=0 K IBFLAG D HEAD Q:IBQUIT  D LOOP31 Q:IBQUIT
	Q
	;
LOOP31	; Loop through each name or terminal digit (and associated DFN).
	F  S IBNAME=$O(^TMP($J,IBDV,IBBILL,IBNAME)) D  Q:IBNAME=""!(IBQUIT)
	. I IBNAME="",'$D(IBFLAG) W !!,"No matches found.",!
	. Q:IBNAME=""
	. S DFN=0 F  S DFN=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN)) Q:'DFN  D LOOP4 Q:IBQUIT  W !
	Q
	;
LOOP4	; Loop through each episode of care for a patient.
	S IBDAT="" F I=0:0 S IBDAT=$O(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT)) Q:IBDAT=""!(IBQUIT)  D PRINT I $Y>$S($D(IOSL):(IOSL-6),1:6) W ! D HEAD Q:IBQUIT
	Q
	;
PRINT	; Print each detail line.
	I '$G(IBRNB),$D(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2)) Q  ; if reason not billable, and don't print if not billable quit
	S IBFLAG=1 D PID^VADPT6
	W !,VA("BID"),?6,$E($P(^DPT(DFN,0),"^"),1,20),?28,VA("PID"),?42,$E($P($G(^DIC(8,+$G(^(.36)),0)),"^",6),1,16) K VA,VAERR
	S Y=IBDAT X ^DD("DD") W ?60,Y
	;
	; -- print insurance, use ibcns1 calls
	S X=$$INSP(DFN,IBDAT) W ?82,X
	;
	;S IBCNT=0 F II=0:0 S II=$O(^DPT(DFN,.312,II)) Q:'II  S IBCNT=IBCNT+1,X=+^(II,0) D
	;. I $D(^DIC(36,X,0)) W:IBCNT=2!(IBCNT=3) ", " W:IBCNT<4 $E($P(^(0),"^"),1,14) W:IBCNT=4 " " W:IBCNT>3 "*"
	;
	; -- print reason not billable
	I $G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,2))]"" W ?115,$E(^(2),1,16)
	;
	S X=$G(^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT,1))
	I X]"" W !?10,$P(X,"^") I $P(X,"^",2)]"" W " with " F IBDC=2:1 Q:$P(X,"^",IBDC)=""  W $P(X,"^",IBDC),", "
	S X=^TMP($J,IBDV,IBBILL,IBNAME,DFN,IBDAT) Q:'$L(X)  F K=1:1 S IBIFN=$P(X,"^",K) Q:IBIFN=""  D PRINT1
	Q
	;
PRINT1	; If an episode of care has been billed, display billing information.
	D GVAR^IBCBB
	W !?10,$P(^DGCR(399,IBIFN,0),"^"),?20,$P($G(^DGCR(399.3,+IBAT,0)),"^",4),"-",$S(IBCL<3:"INPT",IBCL>2:"OUTP",1:"")
	W ?37,"From: ",$E(IBFDT,4,5)_"/"_$E(IBFDT,6,7)_"/"_$E(IBFDT,2,3)
	W ?55,"To: ",$E(IBTDT,4,5)_"/"_$E(IBTDT,6,7)_"/"_$E(IBTDT,2,3)
	W ?78,"Debtor: "
	I IBWHO="i",$D(^DIC(36,+IBNDM,0)) W $P(^(0),"^")
	I IBWHO="o",$D(^DIC(4,+$P(IBNDM,"^",11),0)) W $P(^(0),"^")
	I IBWHO="p" W $P(^DPT(DFN,0),"^")
	D END^IBCBB1 Q
	;
HEAD	; Print header; don't pause on first pass through.
	I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 Q
	D:'IBFL PAUSE Q:IBQUIT  S IBFL=0
	S IBPAGE=IBPAGE+1
	; -- ibformfd = skip only intial form feed, need ffs for each div.
	I $E(IOST,1,2)["C-"!(IBPAGE>1)!($G(IBFORMFD)) W @IOF
	S IBFORMFD=1
	W IBHD,!,$S(IBBILL=2:"PREVIOUSLY ",1:"UN"),"BILLED PATIENTS for Division ",$P($G(^DG(40.8,IBDV,0)),"^"),?80,"Printed: ",IBDATE,?118,"Page: ",IBPAGE
	W !,"PT ID PATIENT",?28,"SSN",?42,"ELIGIBILITY",?60,"DATE OF ",$S(IBINPT=2:"DISCHARGE",1:"CARE"),?82,"INSURANCE COMPANIES"
	W:IBRNB ?115,"NOT BILLABLE"
	W !,IBL
	Q
	;
INSP(DFN,IBDAT)	; -- print ins. company on report logic
	N X,IBDD,IBDDINS,IBCNT
	S IBCNT=0,IBDDINS=""
	I '$G(DFN)!('$G(IBDAT)) G INSPQ
	S IBDD="" D ALL^IBCNS1(DFN,"IBDD",1,IBDAT)
	S X=0 F  S X=$O(IBDD(X)) Q:'X!(IBCNT>2)  D
	.S IBCNT=IBCNT+1
	.I IBCNT>1 S IBDDINS=IBDDINS_","
	.S IBDDINS=IBDDINS_$E($P($G(^DIC(36,+$G(IBDD(X,0)),0)),"^"),1,10)
	S IBDDINS=$E(IBDDINS,1,30)
	I $G(IBDD(0))>3 S IBDDINS=IBDDINS_"*"
INSPQ	Q IBDDINS
	;
PAUSE	Q:$E(IOST,1,2)'="C-"
	F J=$Y:1:(IOSL-5) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q

IBCONS2
IBCONS2	;ALB/CPM - NSC W/INSURANCE OUTPUT (CON'T) ; 31-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRONS2
	;
LOOP1	; Compilation for both Inpatient Admisssion and Discharge reports.
	N DA,IBADM
	D DIV
	F I=(IBBEG-.0001):0 S I=$O(^DGPM(IBSUB,I)) Q:'I!(I>(IBEND+.99))  D
	. S DFN=0 F  S DFN=$O(^DGPM(IBSUB,I,DFN)) Q:'DFN  S DA=+$O(^(DFN,0)) D  D:PTF PTF I '$G(IBSC),$G(IBDV) D PROC K IBADMVT
	..  S:IBINPT=2 DA=+$P($G(^DGPM(DA,0)),"^",14),IBADM=+$G(^DGPM(DA,0))
	..  S PTF=$P($G(^DGPM(DA,0)),"^",16)
	..  S IBADMVT=DA
	..  S IBDV=+$P($G(^DIC(42,+$P($G(^DGPM(DA,0)),"^",6),0)),"^",11)
	Q
	;
	;
LOOP2	; Compilation for the Outpatient report.
	D DIV
DIS	F I=IBBEG-.0001:0 S I=$O(^DPT("ADIS",I)) Q:'I!(I>(IBEND+.99))  D
	. F DFN=0:0 S DFN=$O(^DPT("ADIS",I,DFN)) Q:'DFN  S J=$O(^(DFN,0)) D
	..  S IBOE="" I $D(^DPT(DFN,"DIS",J,0)) S IBOE=$P($G(^DPT(DFN,"DIS",J,0)),"^",18)
	..  I $D(^DPT(DFN,"DIS",J,0)),$P(^(0),U,2)<2 S IBSTOP="Registration: "_$P($G(^DIC(37,+$P(^(0),U,7),0)),"^"),IBDV=$P(^DPT(DFN,"DIS",J,0),"^",4) D PROC
	;
ADD	F I=IBBEG-.0001:0 S I=$O(^SDV(I)) Q:'I!(I>(IBEND+.99))  S X=$G(^(I,0)) D
	. K IBOE
	. S DFN=$P(X,"^",2),IBDV=$P(X,"^",3) Q:'$D(^DPT(+DFN,0))
	. F N=0:0 S N=$O(^SDV(I,"CS",N)) Q:'N  I $$RPT^IBEFUNC(+$P($G(^(N,0)),"^",5),I) D  D PROC Q
	..S IBOE=$G(IBOE)_$P($G(^SDV(I,"CS",N,0)),"^",8)_"^"
	..N X S X=0
	..S IBSTOP="Add/Edit Stop Code^"
	..F  S X=$O(^SDV(I,"CS","B",X)) Q:'X  S IBSTOP=IBSTOP_$P($G(^DIC(40.7,+X,0)),"^",2)_"^"
	;
CLIN	F IBDC=0:0 S IBDC=$O(^SC("AC","C",IBDC)) Q:'IBDC  I $D(^SC(IBDC,0)),$P(^(0),"^",17)="N" F I=IBBEG-.0001:0 S I=$O(^SC(IBDC,"S",I)) Q:'I!(I>(IBEND+.99))  F IBDFN=0:0 S IBDFN=$O(^SC(IBDC,"S",I,1,IBDFN)) Q:IBDFN<1  D CLIN1
	Q
	;
CLIN1	I $D(^SC(IBDC,"S",I,1,IBDFN,0)) S IBAPPT=^(0),DFN=+IBAPPT I $P(IBAPPT,"^",9)'="C",$D(^DPT(DFN,"S",I,0)),$P(^(0),"^",2)']"",$$RPT^IBEFUNC(+$P(^(0),"^",16),I) S IBOE=$P(^DPT(DFN,"S",I,0),"^",20),IBDV=$P(^SC(IBDC,0),"^",15) D STOPS,PROC
	Q
	;
STOPS	;  -finds stops
	N X
	S X=$G(^DPT(DFN,"S",I,0)) S IBSTOP="Clinic: "_$P(^SC(IBDC,0),"^")_"^"
	I X'="" S IBSTOP=IBSTOP_$S(+$P(X,"^",3):"LAB^",1:"")_$S(+$P(X,"^",4):"X-RAY^",1:"")_$S(+$P(X,"^",5):"EKG^",1:"")
	Q
	;
PROC	;  -process each episode of care
	I VAUTD'=1 Q:'$D(VAUTD(+IBDV))
	I VAUTD=1 Q:'+IBDV
	D PTCHK Q:'IBFLAG  ;  -is patient a vet and have ins data
	D INS Q:'IBFLAG  ;    -is insurance valid for date of care
	K IBRMARK
	D TRACK^IBCONS3 ;     -find tracking entry get reason not billable
	D BILL,SET ;          -on billed or unbilled list
	Q
	;
INS	;S IBINDT=I D ^IBCNS S IBFLAG=$S('$D(IBINS):0,1:IBINS)
	S IBFLAG=$$INSURED^IBCNS1(DFN,I)
	Q
	;
PTCHK	S IBFLAG=0 I $D(^DPT(+DFN,.312)),$G(^("VET"))="Y" S IBFLAG=1
	Q
	;
SET	N TERMD,DPT0,SSN S DPT0=$G(^DPT(+DFN,0)),SSN=$P(DPT0,"^",9)
	S TERMD=$S(IBTERM:$E(SSN,8,9)_$E(SSN,6,7)_$E(SSN,4,5)_$E(SSN,1,3),1:0)
	S ^TMP($J,IBDV,$S(B]"":2,1:1),$S(IBTERM:+TERMD,1:$P(DPT0,"^")),DFN,I)=B I $D(IBSTOP),'$D(^(I,1)) S ^(1)=IBSTOP
	I $G(IBRMARK)'="" S ^TMP($J,IBDV,$S(B]"":2,1:1),$S(IBTERM:+TERMD,1:$P(DPT0,"^")),DFN,I,2)=$G(IBRMARK)
	K IBSTOP,IBRMARK
	Q
	;
BILL	;  Add to billed list if is insurance bill, not canceled
	;     if opt, date is in list, if inpt, admission date = event date
	;
	S B="",I1=$S(IBINPT=2:IBADM,IBINPT:I,1:I\1)
	I IBINPT,$D(^DGCR(399,"C",DFN)) F M=0:0 S M=$O(^DGCR(399,"C",DFN,M)) Q:'M  I $D(^DGCR(399,M,0)),$P(^(0),"^",13)<7,$P($P(^(0),"^",3),".")=$P(I1,"."),$P(^(0),"^",11)="i" S B=B_M_"^" Q:$L(B)>200
	I 'IBINPT,$D(^DGCR(399,"AOPV",DFN,I1)) F M=0:0 S M=$O(^DGCR(399,"AOPV",DFN,I1,M)) Q:'M  I $P(^DGCR(399,M,0),"^",13)<7,$P(^(0),"^",11)="i" S B=B_M_"^" Q:$L(B)>200
	Q
	;
PTF	;  if all movements are for sc condition then not billable
	;
	S IBSC="" Q:'$D(^DGPT(+PTF))
	S IBMOV=0 F  S IBMOV=$O(^DGPT(PTF,"M",IBMOV)) Q:'IBMOV  S IBSC=$P($G(^(IBMOV,0)),"^",18) I IBSC=2!(IBSC="") Q
	S IBSC=$S(IBSC=2!(IBSC=""):0,1:1)
	Q
DIV	;adds the requested divisions to the report
	N IBDIV
	I VAUTD'=1 D
	.S IBDIV="" F  S IBDIV=$O(VAUTD(IBDIV)) Q:'IBDIV  S ^TMP($J,IBDIV)=""
	I VAUTD=1 D
	.S IBDIV="" F  S IBDIV=$O(^DG(40.8,IBDIV)) Q:IBDIV']""!(+IBDIV'=IBDIV)  I $P($G(^DG(40.8,IBDIV,0)),"^",1)]"" S ^TMP($J,IBDIV)=""
	Q

IBCONS3
IBCONS3	;ALB/AAS - NSC W/INSURANCE OUTPUT, TRACKING INTEFACE ; 21-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
TRACK	; -- Claims tracking interface for patients with insurance reports.
	;
	I $D(ZTQUEUED),$$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1
	;
	N IBTRN
	S IBRMARK=""
	; -- if there get reason not billable
	I IBINPT D  ;look for inpatient tracking records
	.Q:'$G(IBADMVT)
	.S IBTRN=$O(^IBT(356,"AD",+IBADMVT,0))
	.Q:'$G(IBTRN)
	.S IBRMARK=$$RMARK(IBTRN)
	.Q
	;
	I 'IBINPT D  ;look for outpatient tracking records
	.I $G(IBOE) S IBTRN=$O(^IBT(356,"ASCE",+IBOE,0))
	.I '$G(IBOE) D
	..S IBETYP=+$O(^IBE(356.6,"B","OUTPATIENT VISIT",0))
	..S X=$O(^IBT(356,"APTY",DFN,IBETYP,($P(I,".")-.0000001))) S:$P(X,".")=$P(I,".") IBTRN=$O(^(X,0))
	.Q:'$G(IBTRN)
	.S IBRMARK=$$RMARK(IBTRN)
	.Q
	;
	; -- if not in ct and parameter set to add, add to ct.
	I '$G(IBTRN),$P(IBTRKR,"^",23) D ADD
	;
TRACKQ	Q
	;
ADD	; -- if not there see if should add
	;    if inpatient, not before ct start date, inpt tracking on
	I IBINPT,I'<+IBTRKR,$P(IBTRKR,"^",2) D
	.;
	.Q:'$G(IBADMVT)
	.N I,J,X,Y,DA,DR,DIE,DIC,IBETYP,IBADMDT,IBTRN
	.S IBADMDT=$P(^DGPM(IBADMVT,0),"^")
	.S IBETYP=+$O(^IBE(356.6,"B","INPATIENT ADMISSION",0))
	.S IBTRN=$O(^IBT(356,"ASCH",+$$SCH^IBTRKR2(IBADMVT),0))
	.D:'IBTRN ADDT^IBTUTL
	.I IBTRN<1 Q
	.S DA=IBTRN,DIE="^IBT(356,"
	.L +^IBT(356,+IBTRN):10 I '$T Q
	.S DR=$$ADMDR^IBTUTL(IBADMDT,IBETYP,IBADMVT,0)
	.D ^DIE
	.L -^IBT(356,+IBTRN)
	.Q
	;
	; -- if outpatient, not before ct start date, opt tracking on
	I 'IBINPT,I'<+IBTRKR,$P(IBTRKR,"^",3),I'>$$FMDIFF^XLFDT(DT,-2) D
	.;
	.N IBTDT S IBTDT=I
	.N I,J,X,Y,DA,DR,DIC,DIE,IBETYP,IBTRN
	.S IBETYP=+$O(^IBE(356.6,"B","OUTPATIENT VISIT",0))
	.;
	.; -- if encounter add encounter
	.I +$G(IBOE) D  Q
	..S X=$P($G(^SCE(+IBOE,0)),"^",6) I X,X'=+IBOE Q
	..D OPT^IBTUTL1(DFN,IBETYP,IBTDT,+IBOE) Q
	.;
	.S IBTDT=$P(IBTDT,".")
	.; -- must not be before encounter is created
	.Q:IBTDT>($$FMDIFF^XLFDT(DT,-2))
	.;
	.; -- see if already entry for same day.
	.S X=$O(^IBT(356,"APTY",DFN,IBETYP,(IBTDT-.0000001))) I $P(X,".")=IBTDT Q
	.D ADDT^IBTUTL
	.S DA=IBTRN,DIE="^IBT(356,"
	.I IBTRN<1 Q
	.L +^IBT(356,+IBTRN):10 I '$T Q
	.S DR=".02////"_$G(DFN)_";.06////"_IBTDT_";.18////"_IBETYP_";.2////1;.24////1;1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
	.D ^DIE
	.L -^IBT(356,+IBTRN)
	.Q
ADDQ	Q
	;
RMARK(IBTRN)	; -- returns external reason not billable
	Q $P($G(^IBE(356.8,+$P($G(^IBT(356,+$G(IBTRN),0)),"^",19),0)),"^")

IBCONSC
IBCONSC	;ALB/MJB,SGD,AAS,RLW - NSC W/INSURANCE OUTPUT  ;06 JUN 88 13:51
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
INP	; Entry point for Inpatient Admission report
	S IBINPT=1,IBSUB="AMV1" G EN1
	;
INPDIS	; Entry point for Inpatient Discharge report
	S IBINPT=2,IBSUB="AMV3" G EN1
	;
EN	; Entry point for Outpatient report
	S IBINPT=0,IBSUB=""
EN1	;
	;***
	;S XRTL=$ZU(0),XRTN="IBCONSC-1" D T0^%ZOSV ;start rt clock
	I '$D(DT) D DT^DICRW
	K ^TMP($J)
	;
DATE	; Issue prompts for Begin and End dates
	S %DT="AEPX",%DT("A")="Start with DATE: " D ^%DT G Q:Y<0 S IBBEG=Y
DATE1	S %DT="EPX" R !,"Go to DATE: ",X:DTIME S:X=" " X=IBBEG G Q:(X="")!(X["^")
	D ^%DT G DATE1:Y<0 S IBEND=Y I Y<IBBEG W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
	;I IBBEG>DT W " ??" G DATE1
	;
ASKDIV	; Issue prompt for Division
	D PSDR^IBODIV G:Y<0 Q
	;
SORT	; Select Billed, Unbilled, or All episodes for insured patients
	S DIR(0)="S^1:UNBILLED;2:BILLED;3:ALL",DIR("A")="PRINT LISTING",DIR("B")="UNBILLED",DIR("?")="Select whether you would like to print just the Unbilled list or the Billed list or ALL"
	D ^DIR S IBSORT=Y K DIR
	G:$D(DIRUT) Q
	;
RNB	; -- ask if should print those flagged with Reason not billable
	W !
	S DIR(0)="Y",DIR("A")="Print entries already flagged as not billable",DIR("B")="NO"
	S DIR("?")="Answer 'YES' if you want episodes already flagged as not billable printed on the report along with the reason.  Answer 'NO' if you do not want to see those already flagged."
	D ^DIR S IBRNB=Y K DIR ; ibrnb=1 means print on list with reason, =0 means don't print
	G:$D(DIRUT) Q
	;
TERM	; Sort by Patient Name or Terminal Digit?
	R !!,"Sort by (P)atient Name or (T)erminal Digit: P// ",X:DTIME G:X="^"!('$T) Q S:X="" X="P" S X=$E(X)
	I "PTpt"'[X D  G TERM
	. W !!?5,"Enter: '<CR>'  -  To sort the output by patient name."
	. W !?14,"'T'   -  To sort the output by Terminal Digit."
	. W !?23,"The output will be sorted by the 8th and 9th digits,"
	. W !?23,"and then the 6th and 7th digits of the patient's SSN."
	. W !?14,"'^'   -  To quit this option.",!
	W $S("Pp"[X:"   PATIENT NAME",1:"   TERMINAL DIGIT") S IBTERM="Tt"[X
	;
DEV	; -- ask device
	W !!,*7,"*** Margin width of this output is 132 ***"
	W !,"*** This output should be queued ***"
	S %ZIS="QM" D ^%ZIS G:POP Q
	I $D(IO("Q")) K IO("Q") D  G Q
	.S ZTRTN="BEGIN^IBCONSC",ZTSAVE("IB*")="",ZTSAVE("VAUTD")="",ZTSAVE("VAUTD(")=""
	.S ZTDESC="IB - Patients with Insurance and "_$S('IBINPT:"Outpatient ",IBINPT=1:"Admissions",1:"Discharges")
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	;
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCONSC" D T1^%ZOSV ;stop rt clock
	;
	;
BEGIN	; Background job main entry point.  Set up the report header.
	;***
	;S XRTL=$ZU(0),XRTN="IBCONSC-2" D T0^%ZOSV ;start rt clock
	S B="",IBL="",$P(IBL,"=",IOM)="",Y=IBBEG X ^DD("DD")
	S IBHD="*Veterans with Reimbursable Insurance and "_$S('IBINPT:"OUTPATIENT Appointments",1:"INPATIENT "_$S(IBINPT=2:"Discharges",1:"Admissions"))_" for the "
	S IBHD=IBHD_$S(IBBEG'=IBEND:"period covering ",1:"")_Y
	I IBBEG<IBEND S Y=IBEND X ^DD("DD") S IBHD=IBHD_" through "_Y
	K %DT S X="N",%DT="T" D ^%DT X ^DD("DD") S IBDATE=Y K %DT
	S IBTRKR=$G(^IBE(350.9,1,6)),IBQUIT=0
	;
	; Compile data for the report
	D @($S(IBINPT:"LOOP1",1:"LOOP2")_"^IBCONS2")
	G:IBQUIT Q
	;
	; Print the report
	S X=132 X ^%ZOSF("RM") D LOOP25^IBCONS1
	;
Q	; Clean up variables and close the output device.
	W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K %,%DT,B,I,I1,II,J,K,L,M,N,X,X1,X2,Y,C,DFN,IBCNT,IBIFN,IBBILL,IBSORT,IBFORMFD
	K IBFLAG,IBI,IBDT,IBPAGE,IBL,IBHD,IBBEG1,IBBEG,IBEND,IBSTOP
	K IBTRKR,IBOE,IBRNB,IBADMVT,IBETYP,IBRMARK,IBQUIT
	K IBINPT,IBPGM,IBVAR,IBFLAG,IBNAME,IBAPPT,IBDC,IBDAT,IBDFN,IBTERM,IBQUIT
	K POP,^TMP($J),IBDV,IBSUB,VAUTD,IBINDT,IBINS,IBDATE,IBFL,PTF,IBSC,IBMOV
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCONSC" D T1^%ZOSV ;stop rt clock
	Q

IBCOPV
IBCOPV	;ALB/LDB - ROUTINE TO LIST PATIENT VISITS ;30 APR 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROPV
	;
	S IBCOPV=^DGCR(399,IBIFN,"U"),IBCOPV1=$P(IBCOPV,"^"),IBCOPV2=$P(IBCOPV,"^",2) Q:'(IBCOPV1+IBCOPV2)
	S (DGCNT,DGU)=0 K DGCPT,^UTILITY($J),DGNOD F DGFIL=2,409.5 D CHK
	K ^UTILITY($J,"CPT",0),DGCOD F I1=9999999-(IBCOPV2+1):0 S I1=$O(^DPT(DFN,"DIS",I1)) Q:'I1!(I1>(9999999-(IBCOPV1)))  I $D(^(I1,0)),$P(^(0),"^",2)<2 S DGFIL=2.101,DGNOD=^(0),I=9999999-I1 D SET
	D CNT,CNT399 K DIR
	I 'DGCNT D NOVT^IBCOPV1 Q
	D PRT^IBCOPV1 Q
CHK	;Entry point for ^IBCCPT
	F I=IBCOPV1:0 S I=$S(DGFIL=2:$O(^DPT(DFN,"S",I)),1:$O(^SDV("C",DFN,I))) Q:'I!(I>(IBCOPV2+.9999))  I $S($D(^DPT(DFN,"S",I,0))&(DGFIL=2):1,DGFIL=409.5:1,1:0) D:DGFIL=2 PAT D:DGFIL=409.5 ADD D:$D(DGNOD) SET K DGNOD
	Q
ADD	K ^UTILITY($J,"CPT",0),DGNOD
	F I1=0:0 S I1=$O(^SDV(I,"CS",I1)) Q:'I1  I $D(^(I1,0)) S DGNOD=^(0) I $D(^("PR")) S DGCPT=^("PR"),I7=$P(I,".") S:DGCPT]"" ^UTILITY($J,"CPT",0)="Y" S:'$D(^UTILITY($J,"CPT",I7)) ^(I7)="" S ^(I7)=^(I7)_"^"_DGCPT
	I $O(^UTILITY($J,"CPT",0)) S ^UTILITY($J,"CPT1",I7)=^UTILITY($J,"CPT",I7) D PROD^IBCOPV2 Q
TYP	Q:'$D(DGNOD)  K DGNO I DGFIL'=2.101,"749"'[$P(DGNOD,"^",$S(DGFIL=2:16,1:5)) S DGNO=1 Q
	S:DGFIL=409.5&($P(DGNOD,"^",4)) DGTYP=$P(DGNOD,"^",4)
	K DGTYP I DGFIL=2 F Z=0:0 S Z=$O(^SC(+DGNOD,"S",I,1,Z)) Q:'Z  I $D(^(Z,0)),+^(0)=DFN,$P(DGNOD,"^",16)=9 S DGTYP=$P(^(0),"^",10)
	I $D(DGTYP),DGTYP,$D(^DIC(8,DGTYP,0)),"^6^7^9^12^"[("^"_$P(^(0),"^",9)_"^") S DGNO=1 Q
	S:'$D(DGTYP) DGTYP=""
	I DGTYP S DGTYP=$E($P($G(^DIC(8,DGTYP,0)),"^"),1,3)
	S:DGTYP="" DGTYP=$P(DGNOD,"^",$S(DGFIL=2:16,DGFIL=409.5:5,1:"")) S:DGTYP&(DGTYP<9) DGTYP=$P(^SD(409.1,DGTYP,0),"^") S DGTYP=$E(DGTYP,1,3)
	Q
SET	S DGDT=$P(I,"."),DGDT1=$P(I,".",2) D TYP,ELIG^IBCOPV2 Q:$D(DGNO)!('$D(DGNOD))  S:'$D(DGNO) ^UTILITY($J,"OPV",DGDT,DGDT1,DGFIL)=DGTYP_"^"_DGMT_"^"_$S($D(^UTILITY($J,"CPT",0))&(DGFIL=409.5):^UTILITY($J,"CPT",0),1:"")
	S $P(^UTILITY($J,"OPV",DGDT,DGDT1,DGFIL),"^",6)=$S(DGCOD]"":DGCOD,1:"")
	Q:'$D(^DGCR(399,"AOPV",DFN,DGDT))
BIL	S DGBIL=0 F DGBIL1=1:1 S DGBIL=$O(^DGCR(399,"AOPV",DFN,I,DGBIL)) Q:'DGBIL  I $D(^DGCR(399,DGBIL,0)) D BIL1
	Q
BIL1	F B=1,7 S DGBIL(B)=$P(^DGCR(399,DGBIL,0),"^",B) I DGBIL(B)]"" S:B=7&$D(^DGCR(399.3,DGBIL(B),0)) DGBIL(B)=$P(^(0),"^",4) D BIL2
	Q
BIL2	S $P(^UTILITY($J,"OPV","AP",DGCNT),"^",$S((DGBIL1+B)=2:4,(DGBIL1+B)=8:5,(DGBIL1+B)<8:(DGBIL1+DGBIL1+2),1:(DGBIL1+DGBIL1+3)))=DGBIL(B)
	Q
CNT	F I=0:0 S I=$O(^UTILITY($J,"OPV",I)) Q:'I  S DGCNT=DGCNT+1,^UTILITY($J,"OPV","AP",DGCNT)=I D CHG^IBCOPV2,BIL
	Q
CNT399	S DGCNT1=0 F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S DGCNT1=DGCNT1+1
	Q
PAT	I $P(^DPT(DFN,"S",I,0),"^",2)']"" S DGNOD=^(0)
	Q

IBCOPV1
IBCOPV1	;ALB/LDB - CPT LISTING IN MCCR ;30 APR 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROPV1
	;
PRT	;
	N IBQUIT,IBNUM,IBDATE,Z1 S IBQUIT=0
	;D:$D(DIR) HLP
	D HDR1,HDR F I=0:0 S I=$O(^UTILITY($J,"OPV","AP",I)) Q:'I  S IBNUM=I-1 W ! D SCR Q:IBQUIT  S IBNUM=I W ?1,I_")",?5 S (Y,I1)=+^UTILITY($J,"OPV","AP",I) D DT^DIQ S IBDATE=Y K Y D VT Q:IBQUIT
	;W:DGCNT>30 !!,"THERE ARE MORE THAN TEN VISITS DURING THE PERIOD THAT THIS STATEMENT COVERS."
	F C=$Y:1:(IOSL-6) W !
	D:'IBQUIT PICK
	G Q2
	;Q:$D(DIR)
PICK	K Y S DIR("A")="Select visits to include in this bill (1-"_IBNUM_"): "
OK	S DIR(0)="LAO^1:"_IBNUM_"^K:X[""."" X" D ^DIR
	I $D(DTOUT)!$D(DUOUT) S IBQUIT=1 Q
	Q:X=""
	I $P($$OPV1^IBCU41(IBIFN,1,($L(Y,",")-1)),U,2)'="" G OK
	;I (DGCNT1+($L(Y,",")-1))>30 W !,"Maximum of 30 visits allowed per bill!",!,"The visits already on the bill along with those selected total more than 30." G OK
	;I $D(^DIC(36,+^DGCR(399,IBIFN,"M"),0)),$P(^(0),"^",8),+$P(Y,",",2)>0!(DGCNT1&(+$E(Y)>0)) W !,*7,"THIS INSURANCE COMPANY WILL ONLY ACCEPT ONE VISIT PER BILL.",! G OK
OK1	I +Y W !,"YOU HAVE SELECTED VISIT(S) NUMBERED- ",$E(Y,1,$L(Y)-1),!,"IS THIS CORRECT" S %=1 D YN^DICN I %=-1 S IBOUT=1 G Q2
	I +Y,'% W !,"Enter 'Y'es to include these visits.",!,"Enter 'N'o to reselect." G OK1
	I +Y,%=2 G OK
	G:'Y Q1
	S IBVT=Y
	F I=1:1 S:$P(IBVT,",",I) DGAP=$P(IBVT,",",I) Q:$P(IBVT,",",I)']""  D VFILE
	D Q2 Q
VFILE	S (DINUM,X)=+^UTILITY($J,"OPV","AP",DGAP)
VFILE1	S DA(1)=IBIFN,DIC(0)="L",DIC="^DGCR(399,"_DA(1)_",""OP"","
	S:'$D(^DGCR(399,DA(1),"OP",0)) ^(0)="^399.043DA^"
	I $D(^DGCR(399,DA(1),"OP",DINUM)) G VFILEQ
	I '$$OPV1^IBCU41(IBIFN,1)!('$$OPV2^IBCU41(DINUM,IBIFN,1)) D  S DGNOADD=1 G VFILEQ
	. W !,?10,"Can't add OP Visit Date of ",$$DAT2^IBOUTL(X)
	S Y=$$DUPCHK^IBCU41(DINUM,IBIFN,1)
	;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$O(^DGCR(399,DA(1),"OP",0)),$D(^DGCR(399,"ASC2",DA(1))) W !?4,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" S DGNOADD=1 G VFILEQ
	W !?4,"Adding OP Visit Date of ",$$DAT2^IBOUTL(X)
	K DD,DO D FILE^DICN L ^DGCR(399,IBIFN):1
VFILEQ	Q
Q2	S IBQUIT=1 K DIR,DIRUT G Q
Q1	S:$D(DUOUT)!$D(DTOUT) IBOUT=1 K DIR,DIRUT
Q	K DA,DGBIL,DGCNT,DGCNT2,DGCOD,DGCT1,IBCD,DGCPT,DGCPT1,IBOPV,IBCOPV1,IBOPV2,IBOPV3,IBOPV4,DGCNT1,DGCNT2,DGDT,DGDT,DGDT1,DGFIL,DGMT,DGMT1,DGNO,DGNOD,DGTYP,DGTYPE,DIC,DIE,DINUM,DR,L,V,X,Y,IBCHG1,IBCHG2,IBRVCE,IBVDT
	K DGTE,I9,DGLP,DGCPT0,DGCPT2,DGCPT3,I7,P,IBVT,DGAP,Z,I4,DGASC,DGCPTS,DGBIL1,DGDIV,DGDAT,DGNOADD,IBFT Q
	;
HDR1	W @IOF,?25,"<<<OUTPATIENT VISITS>>>",!! S X="",$P(X,"=",80)="" W X Q
HDR	W !,"NO.",?6,"VISIT DATE",?19,"ELIG/MT",?28,"CPT",?33,"CHARGE",?40,"BILL# - TYPE",?60,"STOP CODE"
	W !,"===",?6,"==========",?19,"=======",?28,"===",?33,"======",?40,"============",?60,"========="
	Q
VT	S I2="" F Z1=1:1 S I2=$O(^UTILITY($J,"OPV",I1,I2)) Q:I2=""!IBQUIT  S I3="" F I4=1:1 S I3=$O(^UTILITY($J,"OPV",I1,I2,I3)) Q:I3=""  S IBOPV3=^UTILITY($J,"OPV",I1,I2,I3) D VT1 Q:IBQUIT
	Q
VT1	D SCR Q:IBQUIT  I (Z1>1)!(I4>1) W:$X>1 ! W ?5,$G(IBDATE)
	W ?19,$P(IBOPV3,"^") W:$P(IBOPV3,"^",2)]"" "/"_$P(IBOPV3,"^",2) W:$P(IBOPV3,"^",3)]"" ?29,"Y" D CHG
	I (Z1=1)&(I4=1) F P=4:2 Q:$P(^UTILITY($J,"OPV","AP",I),"^",P)=""  W:P>4 ! W ?40,$J($P(^UTILITY($J,"OPV","AP",I),"^",P),7),"-",$P(^UTILITY($J,"OPV","AP",I),"^",P+1)
	Q:$P(^UTILITY($J,"OPV",I1,I2,I3),"^",6)']""  W ?60,$E($P(^UTILITY($J,"OPV",I1,I2,I3),"^",6),1,20)
	Q
SCR	Q:IBQUIT  I $E(IOST,1,2)["C-",$Y+6>IOSL F Y=$Y:1:IOSL-5 W !
	I  W !,"Press return to continue, ""^"" to exit display, or " D PICK I 'IBQUIT W @IOF D HDR1,HDR W !
	Q
HLP	;W !!,"Enter a number between 1 and ",DGCNT," or a list or range separated with commas",!,"or dashes, e.g., 1,3,5 or 2-4,8"
	;W !,"The number(s) must correspond to a visit." R H:5 K H
	Q
CHG	W:(Z1=1)&(I4=1) ?31,$J($P(^UTILITY($J,"OPV","AP",I),"^",2),8) Q
NOVT	I 'DGCNT D HDR1 W !!,"NO OUTPATIENT VISITS FOUND DURING THE PERIOD COVERED BY THIS STATEMENT" D Q Q

IBCOPV2
IBCOPV2	;ALB/LDB - ROUTINE TO LIST PATIENT VISITS ;30 APR 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROPV2
	;
ELIG	Q:$D(DGNO)  S DGCOD=$S(DGFIL=2:$P(^SC(+DGNOD,0),"^",7),DGFIL=409.5:+DGNOD,DGFIL=2.101:"ADMITTING/SCREENING",1:"") I $D(^DIC(40.7,+DGCOD,0)) S:+DGCOD DGCOD=$P(^DIC(40.7,+DGCOD,0),"^")
	I +DGNOD,DGFIL=409.5,$P(^DIC(40.7,+DGNOD,0),"^",2)>899&($P(^DIC(40.7,+DGNOD,0),"^",2)<999) S DGCOD=$P(DGNOD,"^",3) S:$D(^SC(+DGCOD,0)) DGCOD=$P(^(0),"^",7) S:$D(^DIC(40.7,+DGCOD,0)) DGCOD=$P(^(0),"^")
	I (DGTYP="")!(DGTYP=9) S DGTYP=$S($D(^DPT(DFN,.36)):^(.36),1:"") S:DGTYP DGTYP=$E(^DIC(8,+DGTYP,0),1,3)
	I DGTYP'="NSC" S DGMT="" Q
MT	;S (DGMT,DGMT1)=0 I $D(^DG(41.3,DFN)) F DGMT1=9999999-(I+1):0 S DGMT1=$O(^DG(41.3,DFN,2,DGMT1)) Q:'DGMT1  I $P($P(^(DGMT1,0),"^",7),".")'>I S DGMT=$P(^(0),"^",2) Q
	;S:'DGMT1 DGMT="A"
	S DGMT=$P($$LST^DGMTU(DFN,$P(I,".",1)),"^",4)
	Q
CHG	S (DGREV,DGBR)=0,DGACTDT=-DGDT,DGBSI=$O(^DGCR(399.1,"B","OUTPATIENT VISIT",0)) Q:'DGBSI  K IBCHG
	S IBIDS(.11)=$P(^DGCR(399,IBIFN,0),"^",11) D CAT^IBCU61
	F DGJJ=0:0 S DGACTDT=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT)) Q:'DGACTDT!($D(IBCHG))  F DGLL=0:0 S DGREV=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT,DGREV)) Q:'DGREV!($D(IBCHG))  D 1
	Q
1	F DGKK=0:0 S DGBR=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT,DGREV,DGBR)) Q:'DGBR!($D(IBCHG))  D CHKREV
	Q
CHKREV	S DGBRN=^DGCR(399.5,DGBR,0)
	Q:'$P(DGBRN,"^",5)!('$P(DGBRN,"^",4))!($P(DGBRN,"^",7))!($P(DGBRN,"^",6)'[IBIDS(.11))
	S IBCHG="$"_$P($P(DGBRN,"^",4),".")_"."_$E($P($P(DGBRN,"^",4),".",2)_"00",1,2),$P(^UTILITY($J,"OPV","AP",DGCNT),"^",2)=IBCHG
	Q
PROD	F P=2:1 S DGCPT2=$P(^UTILITY($J,"CPT1",I7),"^",P) Q:DGCPT2=""  D PROD3,PROD1:$D(^DGCR(399,IBIFN,"CP","B",DGCPT2_";ICPT("))
	Q
PROD1	F DGCPT0=0:0 S DGCPT0=$O(^DGCR(399,IBIFN,"CP","B",DGCPT2_";ICPT(",DGCPT0)) Q:'DGCPT0  D PROD2
	Q
PROD2	S $P(^UTILITY($J,"CPT1",I7),"^",P)=$S(^UTILITY($J,"CPT1",I7)'[(DGCPT2_"~"_DGCPT0):(DGCPT2_"~"_DGCPT0),1:$P(^UTILITY($J,"CPT",I7),"^",P))
	Q
PROD3	I $P(^DGCR(399,IBIFN,0),"^",9)=4 F I8=1:1:3 I $D(^DGCR(399,IBIFN,"C")),$P(^("C"),"^",I8)=$P(^UTILITY($J,"CPT1",I7),"^",P) S $P(^UTILITY($J,"CPT1",I7),"^",P)=$P(^UTILITY($J,"CPT1",I7),"^",P)_"~0"
	Q

IBCORC
IBCORC	;ALB/CPM - RANK INSURANCE CARRIERS ; 30-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	; Entry point to generate ranking of insurance carriers by amount billed
	;
	W !!?6,"This report will generate a list of insurance carriers ranked by"
	W !?6,"the total amount billed.  If you are running this report in your"
	W !?6,"Production account, you will have the opportunity to transmit"
	W !?6,"this report to the MCCR Program Office in VACO."
	W !!?6,"You must select a date range in which bills to be used in the"
	W !?6,"totals will be selected.  If you are planning to submit a report"
	W !?6,"to the MCCR Program Office, you should select an entire fiscal"
	W !?6,"year (i.e., 10/1/92 - 9/30/93) and rank the top 30 carriers."
	;
START	W ! S DIR(0)="DA^2860101:NOW:EX",DIR("A")="Enter Start Date on Bill Search: ",DIR("?")="^D HLPD1^IBCORC"
	D ^DIR K DIR S IBABEG=+Y G:'Y ENQ
	;
END	W ! S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="Enter End Date on Bill Search: ",DIR("B")=$$DAT2^IBOUTL(DT),DIR("?")="^D HLPD2^IBCORC"
	D ^DIR K DIR S IBAEND=+Y G:'Y ENQ
	;
NUM	W ! S DIR("A")="Enter number of insurance carriers to rank: ",DIR(0)="NA^1:1000:0",DIR("B")=30,DIR("?")="^D HLPN^IBCORC"
	D ^DIR K DIR S IBNR=+Y G:'Y ENQ
	;
	; Allow report transmittal if running in Production.
	S IBFLG=0 G:'$$PROD DEVICE
	;
	W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Would you like this report sent to the MCCR Program Office",DIR("?")="^D HLPCO^IBCORC"
	D ^DIR K DIR S IBFLG=+Y I $D(DIRUT)!($D(DUOUT)) G ENQ
	;
DEVICE	; Select device for queueing/printing report
	S %ZIS="QM" D ^%ZIS G:POP ENQ
	I $D(IO("Q")) D  G ENQ
	.S ZTRTN="DQ^IBCORC1",ZTDESC="RANK INSURANCE CARRIERS"
	.F I="IBABEG","IBAEND","IBFLG","IBNR" S ZTSAVE(I)=""
	.D ^%ZTLOAD K IO("Q")
	.W !!,$S($D(ZTSK):"This job has been queued as task #"_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK
	U IO
	D DQ^IBCORC1
	;
ENQ	; Cleanup
	K I,IBABEG,IBAEND,IBFLG,IBNR
	Q
	;
	;
PROD()	; Is this the production account?     Output:  1 - YES,  0 - NO
	N X S X=$G(^XMB("NETNAME"))
	Q $L(X,".")=3!($L(X,".")=4&(X[".MED."))
	;
HLPD1	; Help for Start date.
	W !!,"This report uses the date the bill was first printed to determine if the"
	W !,"bill should be included in the accumulative total."
	W !!,"Please enter the lower date range for the first printed date, which"
	W !,"should be a past date on or after 10/1/86, or '^' to exit."
	Q
	;
HLPD2	; Help for End date.
	W !!,"This report uses the date the bill was first printed to determine if the"
	W !,"bill should be included in the accumulative total."
	W !!,"Please enter the upper date range for the first printed date, which"
	W !,"should be a past date on or after ",$$DAT1^IBOUTL(IBABEG),", or '^' to exit."
	Q
	;
HLPN	; Help for number of carriers to rank.
	W !!,"This report will rank any number of insurance carriers (from 1 to 1000)"
	W !,"for the total amount billed within a date range."
	W !!,"Please enter a number between 1 and 1000, or '^' to exit."
	Q
HLPCO	; Help for sending report to Central Office.
	W !!,"After the new fiscal year begins, this report should be generated for the"
	W !,"previous fiscal year and transmitted to the MCCR Program Office.  The data"
	W !,"will be compiled nationally to determine which insurance carriers are the"
	W !,"largest customers of VA.  The compiled data will assist the Program Office"
	W !,"in planning for future electronic billing systems."
	W !!,"Even if you are planning to transmit a report to the Program Office, you"
	W !,"should run this report once without transmitting to check the results."
	W !,"You may then re-run the report and transmit it centrally."
	Q

IBCORC1
IBCORC1	;ALB/CPM - RANK INSURANCE CARRIERS (COMPILE/PRINT) ; 30-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DQ	; Tasked entry point to generate and print the rankings.
	;
	; - look at all insurance bills within date range and accumulate $$
	D ENQ1 S IBDT=$$START(IBABEG,-1)
	F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>IBAEND)  D
	.S IBN=0 F  S IBN=$O(^DGCR(399,"AP",IBDT,IBN)) Q:'IBN  D EVAL
	;
	; - invert the list by carrier to rank by amount billed
	S IBINS=0 F  S IBINS=$O(^TMP("IBORIC",$J,"IC",IBINS)) Q:'IBINS  S ^TMP("IBORIC",$J,"AMT",-$G(^(IBINS)),IBINS)=""
	;
	; - print out the ranking list
	S IBAMT="",(IBQ,IBCNT,IBPAG,IBTAMT)=0 D HDR
	F  S IBAMT=$O(^TMP("IBORIC",$J,"AMT",IBAMT)) Q:IBAMT=""!(IBQ)!(IBCNT>IBNR)  D
	.S IBINS=0 F  S IBINS=$O(^TMP("IBORIC",$J,"AMT",IBAMT,IBINS)) Q:'IBINS!(IBQ)!(IBCNT>IBNR)  D
	..S IBCNT=IBCNT+1 Q:IBCNT>IBNR
	..S IBAMTP=-IBAMT,IBTAMT=IBTAMT+IBAMTP
	..S IBINS0=$G(^DIC(36,IBINS,0)),IBINSA=$G(^(.11))
	..I $Y>(IOSL-8) D PAUSE Q:IBQ  D HDR
	..W !!,$J(IBCNT,4),".",?20,$S($P(IBINS0,"^")]"":$P(IBINS0,"^"),1:"CARRIER UNKNOWN")
	..S X=IBAMTP,X2="2$",X3=15 D COMMA^%DTC W ?55,X
	..D INSDIS(IBINSA)
	G:IBQ ENQ
	;
	; - print a total
	I $Y>(IOSL-4) D PAUSE G:IBQ ENQ D HDR
	W !!,"Total Amount Billed to all Ranked Carriers:" S X=IBTAMT,X2="2$",X3=15 D COMMA^%DTC W ?55,X
	D PAUSE
	I IBFLG W !!,"Sending the report in a bulletin to the MCCR Program Office... " D BULL^IBCORC2 W "done."
	;
ENQ	K ^TMP("IBORIC",$J,"IC"),^TMP("IBORIC",$J,"AMT")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K DIR,DIRUT,DUOUT,DTOUT,DIROUT,IBAMT,IBAMTP,IBI,IBINS0,IBINSA
	K IBQ,IBPAG,IBNR,IBCNT,IBDT,IBND,IBINS,IBN,IBTAMT,X,X1,X2,X3,Y
ENQ1	Q
	;
EVAL	; Accumulate amount billed for the carrier if the bill type is correct.
	F IBI=0,"M","S" S IBND(IBI)=$G(^DGCR(399,IBN,IBI))
	I IBND(0)="" G EVALQ ; no zeroth node
	I $P(IBND(0),"^",11)'="i" G EVALQ ; insurer not responsible
	S IBINS=+IBND("M") I 'IBINS G EVALQ ; no carrier associated with bill
	I $P(IBND("S"),"^",16) G EVALQ ; bill has been cancelled
	S IBAMT=+$$ORI^PRCAFN(IBN) I IBAMT'>0 G EVALQ ; no bill amount
	S ^(IBINS)=$G(^TMP("IBORIC",$J,"IC",IBINS))+IBAMT
EVALQ	Q
	;
PAUSE	; Pause for screen output.
	Q:$E(IOST,1,2)'="C-"
	N IBI,DIR,DIRUT,DIROUT,DUOUT,DTOUT
	F IBI=$Y:1:(IOSL-3) W !
	S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
	Q
	;
HDR	; Display report header.
	N X,Y
	S X="Ranking Of The Top "_IBNR_" Insurance Carriers By Total Amount Billed"
	S Y=$$SITE^VASITE
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
	S IBPAG=IBPAG+1
	W ?(80-$L(X)\2),X,!
	W !,"  Facility: ",$P(Y,"^",2)," (",$P(Y,"^",3),")",?58,"Run Date: ",$$DAT1^IBOUTL(DT)
	W !,"Date Range: ",$$DAT1^IBOUTL(IBABEG)," thru ",$$DAT1^IBOUTL(IBAEND),?62,"Page: ",IBPAG
	W !!,$$DASH,!?2,"Rank",?20,"Insurance Carrier",?55,"Total Amt Billed",!,$$DASH
	Q
	;
DASH()	; Write dashed line.
	Q $TR($J("",79)," ","=")
	;
INSDIS(X)	; Display Insurance Company name and address.
	;  Input:  X   --   .11 node of ins company entry in file #36
	W:$P(X,"^")]"" !?20,$P(X,"^")
	W:$P(X,"^",2)]"" !?20,$P(X,"^",2)
	W:$P(X,"^",3)]"" !?20,$P(X,"^",3)
	W:$P(X,"^")]""!($P(X,"^",2)]"")!($P(X,"^",3)]"") !?20
	W $P(X,"^",4) W:$P(X,"^",4)]""&($P(X,"^",5)]"") ", "
	W $P($G(^DIC(5,+$P(X,"^",5),0)),"^")
	W:$P(X,"^",6)]""&($P(X,"^",4)]""!($P(X,"^",5)]"")) "   "
	W $P(X,"^",6)
	Q
	;
START(X1,X2)	; Return the Start Date for the search, less one day.
	N X,%H D C^%DTC
	Q X

IBCORC2
IBCORC2	;ALB/CPM - RANK INSURANCE CARRIERS (BULLETIN) ; 30-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
BULL	; Generate a bulletin containing the report.
	S XMSUB="RANKING INSURANCE CARRIERS"
	S XMDUZ="INTEGRATED BILLING PACKAGE"
	S XMTEXT="IBT("
	S XMY($P($G(^IBE(350.9,1,4)),"^",5))=""
	S XMY(DUZ)=""
	;
	; - set up report header
	S X="Ranking Of The Top "_IBNR_" Insurance Carriers By Total Amount Billed"
	S IBT(1)=$J("",80-$L(X)\2)_X
	S IBT(2)=" "
	S X=$$SITE^VASITE,X=$E($P(X,"^",2)_" ("_$P(X,"^",3)_")"_$J("",46),1,46)
	S IBT(3)="  Facility: "_X_"Run Date: "_$$DAT1^IBOUTL(DT)
	S IBT(4)="Date Range: "_$$DAT1^IBOUTL(IBABEG)_" thru "_$$DAT1^IBOUTL(IBAEND)_$J("",28)_"Page: 1  of  1"
	S IBT(5)=" "
	S IBT(6)=$$DASH^IBCORC1
	S IBT(7)="  Rank"_$J("",14)_"Insurance Carrier"_$J("",18)_"Total Amt Billed"
	S IBT(8)=$$DASH^IBCORC1
	S IBT(9)=" ",IBC=9
	;
	; - set up report body
	S (IBTAMT,IBCNT)=0,IBAMT=""
	F  S IBAMT=$O(^TMP("IBORIC",$J,"AMT",IBAMT)) Q:IBAMT=""!(IBCNT>IBNR)  D
	.S IBINS=0 F  S IBINS=$O(^TMP("IBORIC",$J,"AMT",IBAMT,IBINS)) Q:'IBINS!(IBCNT>IBNR)  D
	..S IBCNT=IBCNT+1 Q:IBCNT>IBNR
	..S IBAMTP=-IBAMT,IBTAMT=IBTAMT+IBAMTP
	..S IBINS0=$G(^DIC(36,IBINS,0)),IBINSA=$G(^(.11))
	..S IBC=IBC+1,IBT(IBC)=" "
	..S X=IBAMTP,X2="2$",X3=15 D COMMA^%DTC
	..S IBC=IBC+1,IBT(IBC)=$J(IBCNT,4)_"."_$J("",15)_$E($S($P(IBINS0,"^")]"":$P(IBINS0,"^"),1:"CARRIER UNKNOWN")_$J("",34),1,34)_X
	..D INSBULL(IBINSA)
	;
	; - set up totals
	S IBC=IBC+1,IBT(IBC)=" "
	S X=IBTAMT,X2="2$",X3=15 D COMMA^%DTC
	S IBC=IBC+1,IBT(IBC)="Total Amount Billed to all Ranked Carriers:"_$J("",11)_X
	;
	; - deliver and quit
	D ^XMD
	K IBAMT,IBAMTP,IBCNT,IBINS0,IBINSA,IBC,IBT,IBTAMT,X,XMSUB,XMDUZ,XMY,XMTEXT,Y
	Q
	;
INSBULL(X)	; Display Insurance Company name and address for bulletin.
	;  Input:  X   --   .11 node of ins company entry in file #36
	S:$P(X,"^")]"" IBC=IBC+1,IBT(IBC)=$J("",20)_$P(X,"^")
	S:$P(X,"^",2)]"" IBC=IBC+1,IBT(IBC)=$J("",20)_$P(X,"^",2)
	S:$P(X,"^",3)]"" IBC=IBC+1,IBT(IBC)=$J("",20)_$P(X,"^",3)
	S IBC=IBC+1,IBT(IBC)=$J("",20)_$P(X,"^",4)
	S:$P(X,"^",4)]""&($P(X,"^",5)]"") IBT(IBC)=IBT(IBC)_", "
	S IBT(IBC)=IBT(IBC)_$P($G(^DIC(5,+$P(X,"^",5),0)),"^")
	S:$P(X,"^",6)]""&($P(X,"^",4)]""!($P(X,"^",5)]"")) IBT(IBC)=IBT(IBC)_"   "
	S IBT(IBC)=IBT(IBC)_$P(X,"^",6)
	Q

IBCRTN
IBCRTN	;ALB/AAS - EDIT BILLS RETURNED FROM AR (NEW) ; 23-MAY-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRTN
	;
EN1	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN1^IBCRTN" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="EN1^IBCRTN-1" D T0^%ZOSV ;start rt clock
	;
	D END S IBAC=5,IBV=0 D LOOK G:'$D(IBIFN) END D EDIT,SEND:$D(IBIFN),PRINT:$D(IBIFN) L  G EN1
	Q
	;
EN2	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN2^IBCRTN" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="EN2^IBCRTN-1" D T0^%ZOSV ;start rt clock
	;
	D END S IBAC=6,IBV=1 D LOOK G END:'$D(IBIFN) D RTN,SEND:$D(IBIFN),PRINT:$D(IBIFN) L  G EN2
	Q
	;
LOOK	S DIC="^DGCR(399,",DIC(0)="AEQMZ",DIC("S")="I $S($P(^(0),U,13)=7:0,+$$RETN^PRCAFN(Y):1,1:0)" D ^DIC K DIC Q:+Y<1
	S IBIFN=+Y,DFN=$P(Y(0),"^",2)
	L ^DGCR(399,IBIFN):1 I '$T W !,"Already being edited by another user" K IBIFN,DFN Q
	I '$P(^DGCR(399,IBIFN,"S"),"^",9)!('$D(^XUSEC("IB EDIT",DUZ))) Q
	;
FILE	K DD,DO I '$D(^DGCR(399,IBIFN,"R",0)) S ^(0)="^399.046^"
	S DIC(0)="MN",DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""R"",",DIE=DIC,DIC("DR")=".02////"_DUZ S X="NOW",%DT="T" D ^%DT S X=Y D FILE^DICN G:Y<1 END S DGIFN=+Y
	Q
	;
EDIT	N DGIFN G RTN:IBAC=6 D ^IBCSCU,^IBCSC1 I '$T K IBIFN Q
	;
RTN	I '$D(^XUSEC("IB AUTHORIZE",DUZ))!('$D(IBIFN)) K IBIFN Q
	D EDITS^IBCB2 I IBQUIT K IBIFN Q
RTN1	W !!,"WANT TO RETURN BILL TO A/R AT THIS TIME" S %=2 D YN^DICN Q:%=1  I %=-1!(%=2) K IBIFN Q
	I '% W !?4,"YES - To set the status to Returned",!?4,"No - To take no action" G RTN1
	Q
	;
	;store sending data at this point
SEND	S DA(1)=IBIFN,DA=DGIFN,(DIC,DIE)="^DGCR(399,"_DA(1)_",""R"",",DR=".03;.04" D ^DIE
	I '$P(^DGCR(399,IBIFN,"R",DGIFN,0),"^",4) K IBIFN Q
	;
	W !,"Passing completed Bill to Accounts Receivable.  Bill is no longer editable."
	I $P(^DGCR(399,IBIFN,"S"),"^",9) D GVAR^IBCBB,ARRAY^IBCBB1,^PRCASVC6 D REL^PRCASVC:PRCASV("OKAY") I 'PRCASV("OKAY") D FXERR1^IBCB2 K IBIFN Q
	W !,"Completed Bill Successfully sent to Accounts Receivable."
	Q
	;
PRINT	I $D(IBIFN) S IBVIEW=1 D 4^IBCB1 Q
	Q
	;
END	L  K IBNDS,IBDISP,IBER,IBNDI1,IBV,DGIFN,IBVIEW,IBIFN,DFN,IBAC,PRCASV D KILL^IBCMENU
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBCRTN" D T1^%ZOSV ;stop rt clock
	Q

IBCSC1
IBCSC1	;ALB/MJB - MCCR SCREEN 1 (DEMOGRAPHICS) ;27 MAY 88 10:13
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC1
	;
BEN	S IBSR=1,IBSR1="",IBV1=$S($D(^XUSEC("DG ELIGIBILITY",DUZ)):"0000000",1:1011000)
	S:IBV IBV1="1111111"
	S IB(0)=$S($D(^DGCR(399,IBIFN,0)):^(0),1:"")
	D:'$D(IBWW) ^IBCSCU D ALL^IBCVA0,H^IBCSCU
	;
1	S Z=1,IBW=1 X IBWW W " DOB    : ",$P(VADM(3),"^",2)
	;
2	S (I1,Z1)="",Z=2,IBW=1 X IBWW W " Alias  : " F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:I=""  S I1=1 W:$X>40 !?13 S Z1=36,Z=$E($P(^(I,0),"^",1),1,29) W Z,"/"
	W:'I1 "NO ALIAS ON FILE"
	;
3	S Z=3,IBW=1 X IBWW W " Sex    : ",$S($P(VADM(5),U,2)]"":$P(VADM(5),U,2),1:IBU),?48,"Marital: ",$S($D(^DIC(11,+$P(^DPT(DFN,0),U,5),0)):$E($P(^(0),U,1),1,28),1:IBU)
	;
4	S Z=4,IBW=1 X IBWW W " Veteran: ",$S('$D(VAEL(4)):IBU,+VAEL(4):"YES",1:"NO"),?44,"Eligibility: ",$S((VAEL(1)]""):$E($P(^DIC(8,(+VAEL(1)),0),"^",6),1,22),1:IBU)
	F I=.11,.121 S IB(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
	K IBA S IBAD=.11,(IBA1,IBA2)=1 D A^IBCSCU I $P(IB(.121),"^",9)="Y" S IBAD=.121,IBA1=1,IBA2=2 D A^IBCSCU
	;
5	W ! S Z=5,IBW=1 X IBWW W " Address: ",$S($D(IBA(1)):IBA(1),1:"NONE ON FILE"),?46,"Temporary: ",$S($D(IBA(2)):IBA(2),1:"NO TEMPORARY ADDRESS")
	S I=2 F I1=0:0 S I=$O(IBA(I)) Q:I=""  W:I#2!($X>50) !?13 W:'(I#2) ?57 W IBA(I)
	;
6	W ! S Z=6,IBW=1 X IBWW W " Pt Short ",!,"    Address: ",$S('$D(^DGCR(399,IBIFN,"M")):IBU,$P(^("M"),U,10)]"":$P(^("M"),U,10),1:IBU)
	;
7	W ! S Z=7,IBW=1 X IBWW W " SC Care: " S X=$P(IB(0),"^",18) W $S(X="":"UNSPECIFIED",X:"YES",1:"NO") I X W "  (Enter '7' to list disabilites)"
	G ^IBCSCP
	Q
	;IBCSC1

IBCSC2
IBCSC2	;ALB/MJB/AAS - MCCR SCREEN 2 (EMPLOYMENT) ;27 MAY 88 10:15
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC2
	;
EN	D ^IBCSCU S IBSR=2,IBSR1="" F I=0,.311,.25 S IB(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
	D H^IBCSCU
	S IBV1="00" I $S('$D(^DIC(11,+$P(^DPT(DFN,0),U,5),0)):1,$P(^(0),U,1)="MARRIED":0,$P(^(0),U,1)="SEPARATED":0,1:1) S IBV1="01"
	S:IBV IBV1="11"
	;
	S IBAD=.311,IBA1=3,IBA2=1 D:$P(IB(.311),"^",1)]"" A^IBCSCU S IBAD=.25,(IBA1,IBA2)=2 D:$P(IB(.25),"^",1)]"" A^IBCSCU
	S Z=1,IBW=1 X IBWW W " Employer: " W $S($P(IB(.311),"^",1)]"":$E($P(IB(.311),"^",1),1,23),1:IBU),?40 S IBW=0,Z=2 X IBWW W " Spouse's: ",$S($P(IB(.25),"^",1)]"":$P(IB(.25),"^",1),1:IBU)
	S I=0 F J=0:0 S I=$O(IBA(I)) Q:'I  S Z=IBA(I) S:(I#2) Z="              "_Z W:(I#2)!($X>50) ! W:(I#2) Z I '(I#2) W ?54,Z
	W:$P(IB(.311),"^",1)]"" !?7,"Phone: ",$S($P(IB(.311),"^",9)]"":$P(IB(.311),"^",9),1:IBU)
	W:$P(IB(.311),"^",1)']"" ! W:$P(IB(.25),"^",1)]"" ?47,"Phone: ",$S($P(IB(.25),"^",8)]"":$P(IB(.25),"^",8),1:IBU) W:$P(IB(.311),"^",1)]"" !?2,"Occupation: ",$S($P(IB(0),"^",7)]"":$P(IB(0),"^",7),1:IBU)
	S X=$P(IB(.311),"^",15),X=$S(X']"":IBU,X=1:"EMPLOYED FULL TIME",X=2:"EMPLOYED PART TIME",X=3:"NOT EMPLOYED",X=4:"SELF EMPLOYED",X=5:"RETIRED",X=6:"ACTIVE MILITARY DUTY",1:IBU) W !?6,"Status: ",X
	;
REV	G ^IBCSCP
	;IBCSC2

IBCSC3
IBCSC3	;ALB/MJB - MCCR SCREEN 3 (PAYER/MAILING ADDRESS)  ;27 MAY 88 10:15
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC3
	;
EN	I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
	D ^IBCSCU S IBSR=3,IBSR1="",IBV1="000" I IBV S IBV1="111"
	D H^IBCSCU,3^IBCVA0
	F I=0,"M","M1","U" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):(^(I)),1:"")
	S IBOUTP=2,IBINDT=$S(+$G(IB("U")):+IB("U"),1:DT)
	S Z=1,IBW=1 X IBWW W " Rate Type  : ",$S($P(IB(0),U,7)']"":IBU,$D(^DGCR(399.3,$P(IB(0),U,7),0)):$P(^(0),U),1:IBUN)
	I +$P($G(^IBE(350.9,1,1)),U,22) W ?45,"Form Type: ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
	W !?4,"Payer      : ",$S($P(IB(0),U,11)']"":IBU,$P(IB(0),U,11)="p":"PATIENT",$P(IB(0),U,11)="i":"INSURER",1:"OTHER")
	I $P(IB(0),U,11)']"" G MAIL
	I $P(IB(0),U,11)="p" G MAIL
	I $P(IB(0),U,11)="o" W !?4,"Inst. Name : ",$S($P(IB("M"),U,11)']"":IBU,$D(^DIC(4,$P(IB("M"),U,11),0)):$P(^(0),U,1),1:"UNKNOWN INSTITUTION") G MAIL
	I $P(IB(0),U,11)="i" I $D(IBDD)>1,$D(^DGCR(399,IBIFN,"AIC")) G SHW
	D UP G LST:$D(IBDD)>1 W !?4,"Insurance : NO REIMBURSABLE INSURANCE INFORMATION ON FILE",!?17,"[Add Insurance Information by entering '1' at the prompt below]" G MAIL
	;W !?4,"Insurance Carrier",?40,"Whose",?66,"Relationship" S X="",$P(X,"=",81)="" W !,X
LST	W ! D HDR^IBCNS
	S IBX="" F  S IBX=$O(IBDD(IBX)) Q:IBX=""  S IBINS=$G(IBDD(IBX,0)) D D1^IBCNS
	;I $D(IBDDI)>1 W !,"Not currently Selectable:" S IBX="" F  S IBX=$O(IBDDI(IBX)) Q:IBX=""  S IBINS=IBDDI(IBX) D D1^IBCNS
	G MAIL
LST1	W !?4,$S($D(^DIC(36,+IBDD(IBX,0),0)):$E($P(^(0),"^",1),1,20),1:"UNKNOWN") S X=$P(IBDD(IBX,0),"^",6) W ?26,$S(X="v":"VETERAN",X="s":"SPOUSE",1:"OTHER") S X=$P(IBDD(IBX,0),"^",16)
	S X=$S(+X=1:"PATIENT",+X=2:"SPOUSE",+X=3:"CHILD",+X=8:"EMPLOYEE",+X=11:"ORGAN DONOR",+X=18:"PARENT",+X=15:"PLANTIFF",1:"UNKNOWN")
	I X="UNKNOWN" S X1=$S($D(IBDD(IBX,0)):$P(IBDD(IBX,0),"^",6),1:""),X=$S(X1="v":"PATIENT",X1="s":"SPOUSE",1:X)
	W ?37,X,?49 S Y=$P(IBDD(IBX,0),"^",8) X ^DD("DD") W Y,?64 S Y=$P(IBDD(IBX,0),"^",4) X ^DD("DD") W Y
	Q
SHW	I $D(IBDD) S I="" F  S I=$O(IBDD(I)) Q:'I  D SHW1
MAIL	S IB("M")=$S($D(^DGCR(399,IBIFN,"M")):^("M"),1:""),IB("M1")=$S($D(^DGCR(399,IBIFN,"M1")):^("M1"),1:""),IB(0)=^DGCR(399,IBIFN,0)
	S Z=2,IBW=1 W ! X IBWW W " Primary Provider #  : ",$P(IB("M1"),U,2),!?4,"Secondary Provider #: ",$P(IB("M1"),U,3),?45,"Tertiary Provider#: ",$P(IB("M1"),U,4)
	S Z=3,IBW=1 W ! X IBWW
	W ?4,"Mailing Address : " S X="" I IB("M")]"" F I=4:1:9 Q:X]""  S X=$P(IB("M"),"^",I)
	I X']"" W !?4,"NO MAILING ADDRESS HAS BEEN SPECIFIED!",!?4,"Send Bill to PAYER listed above." G ^IBCSCP
	S X=IB("M") W !,?4,$S($P(X,"^",4)]"":$P(X,"^",4),1:"'MAIL TO' PERSON/PLACE UNSPECIFIED"),!?4,$S($P(X,"^",5)]"":$P(X,"^",5),1:"STREET ADDRESS UNSPECIFIED") W:$P(X,"^",6)]"" ", ",$P(X,"^",6) W ! W:$P(IB("M1"),"^",1)]"" ?4,$P(IB("M1"),"^",1),", "
	W ?4,$S($P(X,"^",7)]"":$P(X,"^",7),1:"CITY UNSPECIFIED"),", ",$S($D(^DIC(5,+$P(X,"^",8),0)):$P(^(0),"^",2),1:"STATE UNSPECIFIED"),"  ",$S($P(X,"^",9)]"":$P(X,"^",9),1:"ZIP UNSPECIFIED")
	K IBADI,IBDD,IBOUTP,IBINDT,I,X,X1
	G ^IBCSCP
SHW1	W !?4,"Insurance ",I,": " S X=IBDD(I,0),Z=$S($D(^DIC(36,+X,0)):$P(^(0),"^",1),1:IBU) W $E(Z,1,25) W ?45,"Policy #: ",$S($P(X,"^",2)]"":$P(X,"^",2),1:IBU)
	W !?4,"Group #",?15,": ",$S($P(X,"^",3)]"":$P(X,"^",3),1:IBU),?45,"Group Name: ",$S($P(X,"^",15)]"":$P(X,"^",15),1:IBU)
	W !?4,"Whose",?15,": ",$S($P(X,"^",6)="v":"VETERAN",$P(X,"^",6)="s":"SPOUSE",1:"OTHER")
	W ?45,"Sex of Insured: ",$S($D(IBISEX(I)):IBISEX(I),1:IBU),!?4,"Insured",?15,": ",$P(X,"^",17),?45,"Rel. to Insured: ",IBIR(I),!
	Q
	;
UP	K IBDD D ALL^IBCNS1(DFN,"IBDD",1,IBINDT)
	Q
	;IBCSC3

IBCSC4
IBCSC4	;ALB/MJB - MCCR SCREEN 4 (INPT. EOC)  ;27 MAY 88 10:17
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC4
	;
EN	I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC5
	I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7
	I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
	L ^DGCR(399,IBIFN):1
	D ^IBCSCU S IBSR=4,IBSR1="",IBV1="00000000",IBUC="UNSPECIFIED CODE"
	S:IBV IBV1="11111111"
	D H^IBCSCU F I=1:1:4 S Y="Q"_I_"^IBCVA" D @Y
	D INP
	S IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
	D:DGPT(0)]"" DX^IBCSC4A D OCC^IBCVA1
	I '$P(DGPT(0),U,6) W !?26,$S('DGPT(0):"No PTF record for this ADMISSION",1:"PTF record status: OPEN")
	S Z=1 X IBWW W " Admission  : " S Y=$S($P(DGPT(0),U,2)]"":$P(DGPT(0),U,2),1:$P(IBIP,U,2)) X ^DD("DD") W Y,?49,"Accident Hour: ",$S($P(IB("U"),U,10)'="":$P(IB("U"),U,10),1:IBU)
	W !?4,"Source     : " S I=$P(^DD(399,159,0),U,3),I=$P($P(I,";",($P(IB("U"),U,9))),":",2) W I
	W ?58,"Type: ",$S($P(IB("U"),U,8)=3:"ELECTIVE",$P(IB("U"),U,8)=1:"EMERGENCY",$P(IB("U"),U,8)=2:"URGENT",1:IBU)
	S Z=2 X IBWW
	W " Discharge  : " S Y=$S($P(IBIP,U,6)>0:$P(IBIP,U,6),1:"") X ^DD("DD") W $S(Y]"":Y,1:IBU)
	W !?4,"Status     : ",$S($P(IB("U"),U,12)]""&($D(^DGCR(399.1,(+$P(IB("U"),"^",12)),0))):$P(^(0),"^",1),1:IBU)
	N IBPOARR D SET^IBCSC4D(IBIFN,"",.IBPOARR)
	S Z=3,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX(0) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),1:IBUN)
	F I=1:1:4 S Y=$$DX(+Y) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
	I +Y S Y=$$DX(+Y) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
	;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
	S Z=4,IBW=1,DGPCM=$P(IB(0),U,9) X IBWW W " Cod. Method: ",$S(DGPCM="":IBUN,DGPCM=9:"ICD-9-CM",DGPCM=4:"CPT-4",1:"HCPCS")
	D:$D(IBPROC) WRT^IBCSC5
	;I DGPCM="" W !?4,"Pro. Code  : ",IBUN G OCC
	;I $D(IBCPT),DGPCM=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(IB("C"),U,(I+10)) D DT^DIQ
	;I DGPCM=4 W:'$D(IBCPT) !?4,"Pro. Code  : ",IBUN G OCC
	;I $D(IBICD),DGPCM=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$S($D(^ICD0(IBICD(I),0)):$E($P(^(0),U,4),1,20)_" - "_$P(^(0),U,1),1:IBUC),?55,"Date: " S Y=$P(IB("C"),U,(I+7)) D DT^DIQ
	;I DGPCM=9 W:'$D(IBICD) !?4,"Pro. Code  : ",IBUN G OCC
	;I $D(IBHC),DGPCM=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(IB("C"),U,(I+4)) D DT^DIQ
	;I DGPCM=5 W:'$D(IBHC) !?4,"Pro. Code  : ",IBUN
OCC	;I $O(^DGCR(399,IBIFN,"CP",0)) S I=0 F I1=1:1 S I=$O(^DGCR(399,IBIFN,"CP",I)) D:I1>9 MORE Q:'I  W !,?17 S Y=$P(^(I,0),"^",2) D:+Y D^DIQ D OCC1
	S Z=$S($P(IB(0),U,5)<3:5,1:6)
	S IBW=1 X IBWW W " Pros. Items: " S Y=$$PD^IBCSC5 I 'Y W IBUN
	S Z=$S($P(IB(0),U,5)<3:6,1:7) X IBWW
	W " Occ. Code  : " F I=1:1:5 I $D(IBO(I)) W:I>1 !?4,"Occ. Code  : ",$E(IBOCN(I),1,27) W:I=1 $E(IBOCN(I),1,27) S Y=IBOCD(I) X ^DD("DD") W ?55,Y S Y=IBOCD2(I) I +Y X ^DD("DD") W " - ",Y
	I '$D(IBO) W IBUN
	I $D(IBO)=1,IBO="" W IBUN
	S Z=$S($P(IB(0),U,5)<3:7,1:8) X IBWW
	W " Cond. Code : " F I=1:1:5 I $D(IBCC(I)) W:I>1 !?4,"Cond. Code : ",IBCCN(I) W:I=1 IBCCN(I)
	I '$D(IBCC) W IBUN
	I $D(IBCC)=1,IBCC="" W IBUN
	S Z=$S($P(IB(0),U,5)<3:8,1:9)
	X IBWW W " Value Code : " D VC^IBCVA1 I +IBVC S J=1,I=0 F  S I=$O(IBVC(I)) Q:'I  W:J>1 !,?3," Value Code : " W ?17,$E($P(IBVC(I),U,2),1,40),?58,$P(IBVC(I),U,3) S J=J+1
	W:'IBVC IBUN K IBVC
	D Q^IBCSC4B G ^IBCSCP
	Q
OCC1	W $P(^DGCR(399,IBIFN,"CP",I,0),"^",3)_" - "_$P(@(U_$P($P(^(0),"^"),";",2)_$P($P(^(0),"^"),";")_",0)"),"^"),?55,"Date: ",Y
	Q
	;IBIP= PTF ptr (399,.08) ^ PTF admiss dt (45,2) or Event dt (399,.03)^ accident hour (399,160) 
	; ^ source of addmis (399,159) ^ typ of addmiss (399,158)
	; ^ PTF disch dt (45,70) or Non-VA disch dt (399,.16) ^ disch status (399,162)
	; ^ dxls (45,79) ^ disch bedsection (399,161)
INP	F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	S IBPTF=$P(IB(0),U,8) F I=0,70 S DGPT(I)=$S(IBPTF="":"",$D(^DGPT(IBPTF,I)):^(I),1:"")
	F I="C","U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	S IBIP=IBPTF_"^"_$S($P(DGPT(0),"^",2)]"":$P(DGPT(0),"^",2),1:$P(IB(0),"^",3))_"^"_$P(IB("U"),"^",10)_"^"_$P(IB("U"),"^",9)_"^"_$P(IB("U"),"^",8)_"^"_$S(+DGPT(70)>0:+DGPT(70),1:$P(IB(0),"^",16))_"^"
	S IBIP=IBIP_$P(IB("U"),"^",12)_"^"_$S($D(DGPT(70)):$P(DGPT(70),"^",10),1:"")_"^"_$P(IB("U"),"^",11)
	Q
	;IBCSC4
SET	;S ^DD(399.0304,0,"ID","WRITE")="N X S X=^(0) W ""   "",$E($P($G(@(U_$P($P(X,U),"";"",2)_+X_"",0)"")),U,$S($P(X,U,1)[""CPT"":2,1:4)),1,30)"
DX(ORDER)	;
	N IBX,IBY S IBX="" I $D(IBPOARR)>2 S ORDER=$O(IBPOARR(ORDER)) I +ORDER  S IBY=$G(^ICD9(+IBPOARR(ORDER),0)) I IBY'="" S IBX=ORDER_"^"_IBY
	Q IBX

IBCSC4A
IBCSC4A	;ALB/MJB - MCCR PTF SCREEN  ;24 FEB 89 9:49
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC4A
	;
DX	Q:'$D(^DGPT(+IBPTF,0))  S (IBDXC,IBOPC)=0,IBNC="NO DX CODES ENTERED FOR THIS DATE" K ^UTILITY($J,"IBDX")
	F I=0:0 S I=$O(^DGPT(IBPTF,"M","AM",I)) Q:I'>0  S X=$O(^DGPT(IBPTF,"M","AM",I,0)),IBDX((9999999-$P(I,".",1)),X)=""
	I '$D(^DGPT(IBPTF,"M","AM")) S IBDX(9999999-DT,1)=""
	S IBDIA=0 F I=1:1:26 S IBDIA=$O(IBDX(IBDIA)) Q:IBDIA=""  S X=$O(IBDX(IBDIA,0)),M=$S($D(^DGPT(IBPTF,"M",X,0)):^(0),1:"") I M]"" S IBCT=0 F J=5:1:9 S:$P(M,U,J)]"" IBCT=IBCT+1,^UTILITY($J,"IBDX",I,IBCT)=$P(M,U,J) D:J=5 T
	S IBDIA="" F I=1:1:13 S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) Q:IBDIA=""  D ODD S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) D:IBDIA]"" EVEN D SETD^IBCSC4C Q:IBDIA']""
	;
PRO	S IBNC="NO PRO CODES ENTERED FOR THIS DATE",IBOPC=0 K ^UTILITY($J,"IB")
	F I=0:0 S I=$O(^DGPT(IBPTF,"S",I)) Q:I'>0  S J=$S($D(^DGPT(IBPTF,"S",I,0)):^(0),1:"") I J]"" S X=+J,X=$S(X[".":9999999-X,1:(9999999_"."_I)-X),IBOP(X)=$P(J,U)_U_$P(J,U,8,12)
	F I=0:0 S I=$O(^DGPT(IBPTF,"P",I)) Q:I'>0  S J=$S($D(^DGPT(IBPTF,"P",I,0)):^(0),1:"") I J]"" S X=+J,X=$S(X[".":9999999-X,1:(9999999_"."_I)-X),IBSP(X)=$P(J,U)_U_$P(J,U,5,9)
	S IBP=0 F I=1:1:26 S IBP=$O(IBOP(IBP)) Q:IBP=""  S M=IBOP(IBP),IBCT=0 F J=2:1:6 Q:IBCT=3  S:$P(M,U,J)]"" IBCT=IBCT+1,^UTILITY($J,"IB",I,IBCT)=$P(M,U,J) D:J=2 TP
	I I<26 S IBP="" F I=I:1:26 S IBP=$O(IBSP(IBP)) Q:IBP=""  S M=IBSP(IBP),IBCT=0 F J=2:1:6 Q:IBCT=3  S:$P(M,U,J)]"" IBCT=IBCT+1 D:$P(M,U,J)]"" T1 D:J=2 T2
	S IBP="" F I=1:1:13 S IBP=$O(^UTILITY($J,"IB",IBP)) Q:IBP=""  D ODDP S IBP=$O(^UTILITY($J,"IB",IBP)) D:IBP]"" EVENP D SETP^IBCSC4C Q:IBP=""
	Q
	;
T	I IBCT>0 S IBDXC=IBDXC+1,^UTILITY($J,"IBDX",I,IBCT)=^UTILITY($J,"IBDX",I,IBCT)_U_$P($P(M,U,10),".",1)_U_$C(64+IBDXC)_U_$P(M,U,2)_"^"_$S(X'=1:"",'$D(^DGPT(IBPTF,70)):"",1:"D/C")_"^"_$$SC(M) Q
	S ^UTILITY($J,"IBDX",I,1)=IBNC_U_$P($P(M,U,10),".",1)_"^^"_$P(^DGPT(IBPTF,"M",X,0),U,2)_"^^"_$$SC(M) Q
	;
ODD	S X=^UTILITY($J,"IBDX",IBDIA,1),IBWO(0)=$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4,6),IBWO(1)=$P(X,U,1) F M=2:1:5 S IBWO(M)=$S($D(^UTILITY($J,"IBDX",IBDIA,M)):^(M),1:"")
	Q
	;
EVEN	S X=^UTILITY($J,"IBDX",IBDIA,1),IBWE(0)=$P(X,U,3)_U_$P(X,U,2)_U_$P(X,U,4,6),IBWE(1)=$P(X,U,1) F M=2:1:5 S IBWE(M)=$S($D(^UTILITY($J,"IBDX",IBDIA,M)):^(M),1:"")
	I $P(IBWE(0),U,1)']"" F M=1:1:5 S IBWE(M)=""
	Q
	;
TP	I IBCT>0 S IBOPC=IBOPC+1,^UTILITY($J,"IB",I,IBCT)=^UTILITY($J,"IB",I,IBCT)_U_$P(+M,".",1)_U_$C(64+IBOPC) Q
	S ^UTILITY($J,"IB",I,1)=IBNC_U_$P(+M,".",1) Q
T1	S ^UTILITY($J,"IB",I,IBCT)=$P(M,U,J) Q
T2	I IBCT>0 S IBOPC=IBOPC+1,^UTILITY($J,"IB",I,IBCT)=^UTILITY($J,"IB",I,IBCT)_U_$P($P(M,U,1),".",1)_U_$C(64+IBOPC)_U_"*" Q
	S ^UTILITY($J,"IB",I,1)=IBNC_U_$P($P(M,U,1),".",1)_"^^*" Q
	;
ODDP	S X=^UTILITY($J,"IB",IBP,1),IBWO(0)=$P(X,U,3)_U_$P(X,U,2)_U_$S($P(X,U,4)="*":"*",1:""),IBWO(1)=$P(X,U,1) F M=2:1:5 S IBWO(M)=$S($D(^UTILITY($J,"IB",IBP,M)):^(M),1:"")
	Q
	;
EVENP	S X=^UTILITY($J,"IB",IBP,1),IBWE(0)=$P(X,U,3)_U_$P(X,U,2)_U_$S($P(X,U,4)="*":"*",1:""),IBWE(1)=$P(X,U,1) F M=2:1:5 S IBWE(M)=$S($D(^UTILITY($J,"IB",IBP,M)):^(M),1:"")
	Q
	;
NUL	F I=1:1:13 S $P(^DGCR(399,IBIFN,"C"),U,I)=""
	Q
	;
P	S M=($A($E(X,1))-64),S=$E(X,2),IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") I IB5]"" Q:$P(^UTILITY($J,"IB",M,1),U,3)=$E(X,1)
	F J=M:1:26 Q:'$D(^UTILITY($J,"IB",J))  I $P(^UTILITY($J,"IB",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
	S:'$D(IBA) M=0 K IBA Q
D	S M=($A($E(X,1))-64),S=$E(X,2),IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") I IB4]"" Q:$P(^UTILITY($J,"IBDX",M,1),U,3)=$E(X,1)
	F J=M:1:26 Q:'$D(^UTILITY($J,"IBDX",J))  I $P(^UTILITY($J,"IBDX",J,1),U,3)=$E(X,1) S M=J,IBA=1 Q
	S:'$D(IBA) M=0 K IBA Q
	;
SC(M)	;  - check SC flag of movement
	;    input movement node
	;    output flag as to whether sc or not
	I '$D(M) Q ""
	I M="" Q ""
	Q $S($P(M,"^",18)=1:"<SC>",1:"<NSC>")

IBCSC4B
IBCSC4B	;ALB/MJB - MCCR PTF SCREEN (CONT.)  ;24 FEB 89  9:52
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC4B
	;
DX	Q:$S(IBPTF="":1,'$D(^DGPT(IBPTF,0)):1,1:0)  S IBUC="UNSPECIFIED CODE",IBNC="NO DX CODES ENTERED FOR THIS DATE",IBDXC=0,X="DIAGNOSIS SCREEN" K IBWE,IBWO
	W @IOF,?(40-($L(X)\2)),X,! F I=1:1:79 W "="
	S IBDIA="" I '$D(^UTILITY($J,"IBDX")) W !!," * No DIAGNOSIS CODES in PTF record for this episode of care." D SELD^IBCSC4C G Q
	F I=1:1:13 S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) Q:IBDIA=""  D ODD^IBCSC4A S IBDIA=$O(^UTILITY($J,"IBDX",IBDIA)) D:IBDIA]"" EVEN^IBCSC4A D WR D:$Y+6>IOSL ASK Q:IBDIA=""
	S IBDIA="" ; D SELD^IBCSC4C
	G Q
	;
WR	I '$D(IBWE(0)) F B=0:1:5 S IBWE(B)=""
	W !!,"Move: " S Y=$P(IBWO(0),U,2) X ^DD("DD") W $S($P(IBWO(0),U,4)]"":$P(IBWO(0),U,4)_" ",1:""),Y," " W:$P(IBWO(0),"^",3)]"" $E($P(^DIC(42.4,$P(IBWO(0),U,3),0),U),1,12) W " ",$P(IBWO(0),"^",5)
	I IBDIA]"",IBWE(0)]"" W ?43,"Move: " S Y=$P(IBWE(0),U,2) X ^DD("DD") W $S($P(IBWE(0),U,4)]"":$P(IBWE(0),U,4)_" ",1:""),Y," " W:$P(IBWE(0),"^",3)]"" $E($P(^DIC(42.4,$P(IBWE(0),U,3),0),U),1,12) W " ",$P(IBWE(0),"^",5)
	S IBAO=$P(IBWO(0),U,1) I IBAO']"" W:'$D(IBDXY) !,"* ",IBNC S IBDXY=1 F K=1:1:5 S IBWO(K)="" I IBDIA]"" W:K>1 ! D WE Q:IBWO(K)']""&(IBWE(K)']"")
	I IBAO]"" F K=1:1:5 Q:IBWO(K)']""&(IBWE(K)']"")  S X=$S($D(^ICD9((+IBWO(K)),0)):^(0),1:"") W:IBWO(K)]"" !,IBAO,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,3),1,24),1:IBUC) W:IBWO(K)']"" !,"" D:IBDIA]"" WE
	Q
WE	S IBAE=$P(IBWE(0),U,1) I IBAE']"",'$D(IBDXX),IBWE(0)]"" W ?43,"* ",IBNC S (IBWE(1),IBWE(2),IBWE(3),IBWE(4),IBWE(5))="",IBDXX=1
	I IBAE]"",IBWE(K)]"" S X=$S($D(^ICD9((+IBWE(K)),0)):^(0),1:"") W ?43,IBAE,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,3),1,24),1:IBUC)
	Q
ASK	W !!,"<RETURN> to see more ",$S($D(IBP):"procedure",1:"diagnosis")," codes or '^' to QUIT: " R A:DTIME I '$T!(A["^") S:$D(IBDIA) IBDIA="" S:$D(IBP) IBP="" Q
	I A["?" W !!?4,"Enter <RETURN> to view more ",$S($D(IBP):"operation/procedure",1:"movement dates and diagnosis")," codes",!?4,"or '^' to stop the display." G ASK
	S A=$S($D(IBP):"OPERATION/PROCEDURE",1:"DIAGNOSIS")_" SCREEN (CONT.)" W !,@IOF,?(40-($L(A)\2)),A,! F S=1:1:79 W "="
	Q
PRO	Q:'$D(IBPTF)  S IBUC="UNSPECIFIED CODE",IBNC="NO PRO CODES ENTERED FOR THIS DATE",IBOPC=0,X="OPERATION/PROCEDURE SCREEN",IBNOR="Non-O/R Procedure Date: ",IBSD="Surgery Date: "
	K IBWE,IBWO
	W @IOF,?(40-($L(X)\2)),X,! S X="",$P(X,"=",1,79)="" W X
	S IBP="" I '$D(^UTILITY($J,"IB")) W !!," * No PROCEDURE CODES in PTF record for this episode of care." G Q
	F I=1:1:13 S IBP=$O(^UTILITY($J,"IB",IBP)) Q:IBP=""  D ODDP^IBCSC4A S IBP=$O(^UTILITY($J,"IB",IBP)) D:IBP]"" EVENP^IBCSC4A D WRP D:$Y+6>IOSL ASK Q:IBP=""
	S IBP=""
Q	K IB3,IB4,IB5,IB6,IB7,IB8,IB9,IBAE,IBAO,IBCT,IBDIA,IBDP,IBDX,IBDXC,IBDXX,IBDXY,IBI,IBNC,IBNOR,IBP,IBPY,IBOP,IBOPC,IBOPX,IBOPY,IBPP,IBPX,IBSD,IBSP,IBWE,IBWO
	K %DT,A,B,DIC,F,I,J,K,M,S,X,Y Q
WRP	I '$D(IBWE(0)) F B=0:1:5 S IBWE(B)=""
	W !!,$S($P(IBWO(0),U,3)["*":IBNOR,1:IBSD) S Y=$P(IBWO(0),U,2) X ^DD("DD") W Y I IBP]"" W ?43,$S($P(IBWE(0),U,3)["*":IBNOR,1:IBSD) S Y=$P(IBWE(0),U,2) X ^DD("DD") W Y
	S IBAO=$P(IBWO(0),U,1) I IBAO']"" W:'$D(IBOPY) !,"* ",IBNC S IBOPY=1 F K=1:1:5 S IBWO(K)="" I IBP]"" W:K>1 ! D WEP
	I IBAO]"" F K=1:1:5 Q:IBWO(K)']""&(IBWE(K)']"")  S X=$S($D(^ICD0((+IBWO(K)),0)):^(0),1:"") W:IBWO(K)]"" !,IBAO,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,4),1,24),1:IBUC) W:IBWO(K)']"" !,"" D:IBP]"" WEP
	Q
WEP	S IBAE=$P(IBWE(0),U,1) I IBAE']"",'$D(IBOPX) W ?43,"* ",IBNC S (IBWE(1),IBWE(2),IBWE(3),IBWE(4),IBWE(5))="",IBOPX=1
	I IBAE]"",IBWE(K)]"" S X=$S($D(^ICD0((+IBWE(K)),0)):^(0),1:"") W ?43,IBAE,K," - ",$S(X]"":$J($P(X,U,1),6)_"  "_$E($P(X,U,4),1,24),1:IBUC)
	Q

IBCSC4C
IBCSC4C	;ALB/MJB - MCCR PTF SCREEN (CONT.)  ;24 FEB 9:43
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC4C
	;
SETP	S:IBP'>2 IB9=0 D S
	F F=1:1:3 Q:IB9=3  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWO(F)_U_$S($P(IBWO(F),U,2)']"":$P(IBWO(0),U,2),1:"")
	I '$D(IB7(3)) F F=1:1:3 Q:IB9=3  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB9=IB9+1,IB7(IB9)=IBWE(F)_U_$S($P(IBWE(F),U,2)']"":$P(IBWE(0),U,2),1:"")
	Q:"^^"[$P(IB("C"),U,4,6)!($P(IB("C"),U,4)]"")!($P(IB("C"),U,5)]"")!($P(IB("C"),U,6)]"")
	F F=1:1:3 I $D(IB7(F)),$P(^DGCR(399,IBIFN,"C"),U,(F+3))']"" S $P(^DGCR(399,IBIFN,"C"),U,(F+3))=$P(IB7(F),U,1),$P(^("C"),U,(F+10))=$P(IB7(F),U,2)
	S:$P(^DGCR(399,IBIFN,0),U,9)="" $P(^DGCR(399,IBIFN,0),U,9)=9
	Q
SETD	S:IBDIA'>2 IB8=0 D S
	F F=1:1:5 Q:IB8=5  I $D(IBWO(F)),IBWO(F)]"",$P(IBWO(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWO(F),U,1)
	I '$D(IB6(5)) F F=1:1:5 Q:IB8=5  I $D(IBWE(F)),IBWE(F)]"",$P(IBWE(F),U,1)'=IBNC S IB8=IB8+1,IB6(IB8)=$P(IBWE(F),U,1)
	Q:"^^^^"[$P(IB("C"),U,14,18)!($P(IB("C"),U,14)]"")!($P(IB("C"),U,15)]"")!($P(IB("C"),U,16)]"")!($P(IB("C"),U,17)]"")!($P(IB("C"),U,18)]"")
	F F=1:1:5 I $D(IB6(F)) S $P(^DGCR(399,IBIFN,"C"),U,(F+13))=IB6(F)
	Q
SELP	D S F I=1:1 W ! Q:$Y+10>IOSL
	F I=1:1:3 W !,"ICD PROCEDURE CODE (",I,"): " S IBPX=$S($P(IB("C"),U,(I+3))]"":$P(IB("C"),U,(I+3)),1:"") W:IBPX]"" $S($D(^ICD0($P(IBPX,U,1),0)):$J($P(^(0),U,1),6),1:IBUC)_"// " R X:DTIME Q:'$T!(X["^")  D CHP D:$D(IB3) PD D S
	Q
PD	S %DT("A")="      PROCEDURE DATE ("_I_"): ",%DT="AEX" D ^%DT I Y>0 S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=+Y,IB("C")=^DGCR(399,IBIFN,"C") K IB3
	Q
SELD	D S F I=1:1 W ! Q:$Y+10>IOSL
	F I=1:1:5 W !,"DIAGNOSIS CODE (",I,"): " S IBPY=$S($P(IB("C"),U,(I+13))]"":$P(IB("C"),U,(I+13)),1:"") W:IBPY]"" $S($D(^ICD9($P(IBPY,U,1),0)):$J($P(^(0),U,1),6)_"// ",1:IBUC) R X:DTIME Q:'$T!(X["^")!((X="")&(IBPY=""))  D CHD,S
	Q
CHP	I X="?" D 3^IBCSCH1 S I=I-1 Q
	I X="",$P(IB("C"),U,(I+3))]"" Q
	I X["@" W "   ...Deleted" S IB7(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="",$P(IB("C"),U,(I+10))="",IBPX=1 Q
	I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+3))="",$P(^("C"),U,(I+10))="" Q
	I X?1A1N D P^IBCSC4A S IB5=$S($D(^UTILITY($J,"IB",M,S)):^(S),1:"") S:IB5]"" $P(^DGCR(399,IBIFN,"C"),U,(I+3))=$P(IB5,U,1) D:IB5]"" DT Q:IB5]""  W *7,"  ??" S I=I-1 Q
	I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
	S:X["?" X="??" S IBI=I,DIC="^ICD0(" D DIC I Y'>0 S I=IBI-1 Q
	S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+3))=X D PD
	Q
CHD	I X="?" D 3^IBCSCH1 S I=I-1 Q
	I X="",$P(IB("C"),U,(I+13))]"" Q
	I X["@" W "   ...Deleted" S IB6(I)="",$P(^DGCR(399,IBIFN,"C"),U,(I+13))="",$P(IB("C"),U,(I+13))="",IBPY=1 Q
	I X="" S $P(^DGCR(399,IBIFN,"C"),U,(I+13))="" Q
	I X?1A1N D D^IBCSC4A S IB4=$S($D(^UTILITY($J,"IBDX",M,S)):^(S),1:"") S:IB4]"" $P(^DGCR(399,IBIFN,"C"),U,(I+13))=$P(IB4,U,1),IB3=1 Q:IB4]""  W *7,"  ??" S I=I-1 Q
	I $P(^IBE(350.9,1,1),U,15)'=1 D PAR Q
	S:X["?" X="??" S IBI=I,DIC="^ICD9(" D DIC I Y'>0 S I=IBI-1 Q
	S X=+Y,$P(^DGCR(399,IBIFN,"C"),U,(I+13))=X
	Q
DT	S $P(^DGCR(399,IBIFN,"C"),U,(I+10))=$S($P(IB5,U,2)]"":$P(IB5,U,2),1:$P(^UTILITY($J,"IB",M,1),U,2)) Q
PAR	W:X'["?" "  ??" W !?7,"You may only choose codes found in PTF record!" D 3^IBCSCH1 S I=I-1 Q
DIC	S DIC(0)="EMQ",DIC("S")="I $S($P(^(0),U,9):0,$P(^(0),U,10)']"""":1,$P(^(0),U,10)=$S($D(^DPT(DFN,0)):$P(^(0),U,2),1:""M""):1,1:0)" D ^DIC Q
S	S:'$D(^DGCR(399,IBIFN,"C")) ^DGCR(399,IBIFN,"C")="" S IB("C")=^DGCR(399,IBIFN,"C")

IBCSC4D
IBCSC4D	;ALB/ARH - ADD/ENTER DIAGNOSIS  ; 11/9/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EN	;add/edit diagnosis for a bill, IBIFN required
	S IBX=$G(^DGCR(399,+IBIFN,0)) D SET(IBIFN,.IBDXA,"")
	I $P(IBX,U,5)<3 D PTFASK^IBCSC4E I $D(IBLIST) D PTFADD^IBCSC4E(IBIFN,IBLIST)
	I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
	I +$P($G(IBOEDX),U,2) D NEWDX^IBCSC4E(+IBOEDX) I $D(IBLIST) D ADDNEW^IBCSC4E(IBIFN,IBLIST,.IBOEDX)
	S IBDIFN=0 D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
E1	S IBDX=$$ASKDX I +IBDX>0 S IBDIFN=+$G(IBDXA(+IBDX)) S:'IBDIFN IBDIFN=$$ADD(+IBDX,IBIFN) I +IBDIFN>0 D EDIT(+IBDIFN) D SET(IBIFN,.IBDXA,.IBPOA) G E1
	;
EXIT	K IBDIFN,IBDXA,IBPOA,IBDX,IBX,IBOEDX,IBLIST
	Q
	;
ASKDX()	;
	N X,Y
	;S DIR("A")="Select ICD DIAGNOSIS",DIR(0)="362.3,.01O" D ^DIR K DIR
AD	S DIR("??")="^D HELP^IBCSC4D",DIR("?",1)="Enter a diagnosis for this bill.  Duplicates are not allowed.",DIR("?")="Only active diagnosis, no duplicates for a bill, and bill must not be authorized or cancelled."
	S DIR(0)="PO^80:EAMQ" D ^DIR K DIR I Y>0,'$D(IBDXA(+Y)),+$P($G(^ICD9(+Y,0)),U,9) W " ... dx inactive." G AD
	Q Y
	;
ADD(DX,IFN)	;
	S DIC="^IBA(362.3,",DIC(0)="AQL",DIC("DR")=".02////"_IFN,X=DX K DA,DO D FILE^DICN K DA,DO,DIC,X
	Q Y
	;
EDIT(DIFN)	;
	S DIDEL=362.3,DIE="^IBA(362.3,",DR=".01;.03",DA=DIFN D ^DIE K DIE,DR,DA,DIC,DIDEL
	Q
	;
SET(IFN,DXARR,POARR)	;setup arrays of all dx's for bill, array names should be passed by reference
	;returns: DXARR(DX)=DX IFN, POARR(ORDER)=DX ^ PRINT ORDER,  (DXARR,POARR)=IFN ^ dx count
	;if a dx does not have a print order then PRINT ORDER=(999+count of dx) so will be in order of entry if no print order
	N CNT,IBX,IBY,IBZ,DIFN,IBC,ARR K DXARR,POARR S IBC="AIFN"_$G(IFN)
	S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.3,IBC,IBX)) Q:'IBX  D
	. S DIFN=$O(^IBA(362.3,IBC,IBX,0)),IBY=$G(^IBA(362.3,DIFN,0)) Q:'IBY
	. S CNT=CNT+1,IBZ=+$P(IBY,U,3) I 'IBZ S IBZ=999+CNT
	. S DXARR(+IBY)=DIFN,ARR(IBZ)=+IBY_"^"_$P(IBY,U,3)
	S (IBX,IBY)=0 F  S IBY=$O(ARR(IBY)) Q:'IBY  S IBX=IBX+1,POARR(IBX)=ARR(IBY)
	S (DXARR,POARR)=$G(IFN)_"^"_CNT
	Q
	;
DISP(POARR)	;screen display of existing dx's for a bill,
	;input should be print order array returned by SET^IBCSC4D: POARR(PRINT ORDER)=DX, passed by reference
	N IBX,IBY,IBZ
	W !!,?5,"-----------------  Existing Diagnoses for Bill  -----------------",!
	S IBX=0 F  S IBX=$O(POARR(IBX)) Q:'IBX  S IBZ=POARR(IBX),IBY=$G(^ICD9(+IBZ,0)) D
	. W !,?12,$P(IBY,U,1),?26,$P(IBY,U,3),?60,$S($P(IBZ,U,2)<1000:"("_$P(IBZ,U,2)_")",1:"")
	W !
	Q
	;
DISP1(IFN)	;
	I +$G(IFN) N POARR D SET(IFN,"",.POARR),DISP(.POARR)
	Q
HELP	;called for help from dx enter to display existing dx's
	Q:'$G(IBIFN)  N IBX
	D SET(IBIFN,.IBDXA,"") S IBX=$G(^DGCR(399,+IBIFN,0)) I IBX="" Q
	I $P(IBX,U,5)>2 S DFN=$P(IBX,U,2),IBX=$G(^DGCR(399,+IBIFN,"U")) D OPTDX(DFN,$P(IBX,U,1),$P(IBX,U,2),.IBOEDX,.IBDXA),DISPOE(.IBOEDX,.IBDXA)
	D SET(IBIFN,.IBDXA,.IBPOA) D:+IBDXA DISP(.IBPOA)
	Q
	;
ADD1(IFN)	;does not work, but it should replace ask add, and edit
	;S DIC="^IBA(362.3,",DIC(0)="EMAQ",D="AIFN"_$G(IFN) D IX^DIC K DA,DO,DIC,D
	Q
	;
OPTDX(DFN,DT1,DT2,ARRAY,IBDXA)	;
	N IBDT,IBOE,IBDX,IBCNT,IBCNT1,ARR K ARRAY S (IBCNT,IBCNT1)=0,DT1=$G(DT1)-.0001,DT2=$S(+$G(DT2):DT2,1:9999999)+.7999
	S IBDT=DT1 F  S IBDT=$O(^SCE("ADFN",DFN,IBDT)) Q:'IBDT!(IBDT>DT2)  D
	. S IBOE=0 F  S IBOE=$O(^SCE("ADFN",DFN,IBDT,IBOE)) Q:'IBOE  D
	.. S IBDX=0 F  S IBDX=$O(^SDD(409.43,"AO",IBOE,IBDX)) Q:'IBDX  D
	... I '$D(ARR(IBDX)) S IBCNT=IBCNT+1,ARRAY(IBCNT)=IBDX,ARR(IBDX)="" I '$D(IBDXA(IBDX)) S IBCNT1=IBCNT1+1
	S ARRAY=IBCNT_"^"_IBCNT1
	Q
	;
DISPOE(OEARR,EXARR)	;
	N IBCNT,IBDX,IBX  W @IOF,!,"============================= DIAGNOSIS SCREEN ==============================",!
	S IBCNT=0 F  S IBCNT=$O(OEARR(IBCNT)) Q:'IBCNT  S IBDX=$G(^ICD9(+OEARR(IBCNT),0)) D
	. S IBX="" I $D(EXARR(+OEARR(IBCNT))) S IBX="*"
	. W !,$J(IBCNT,2),")",?11,IBX,?12,$P(IBDX,U,1),?26,$P(IBDX,U,3)
	Q

IBCSC4E
IBCSC4E	;ALB/ARH - ADD/ENTER PTF/OE DIAGNOSIS  ; 3/2/94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
	;
PTFASK	;
	D PTF Q:$G(IBPTFDX)'>0  N X,Y K IBLIST W !
PTFASK1	S DIR("A")="SELECT DIAGNOSIS FROM THE PTF RECORD TO INCLUDE ON THE BILL"
	S DIR("?",1)="Enter the alphanumeric preceding the diagnosis you want added to the bill.",DIR("?",2)=""
	S DIR("?",3)="To enter more than one separate them by a comma or within a movement use a range separated by a dash.",DIR("?")="The print order for each diagnosis will be determined by the order in this list."
	S DIR(0)="FO^^D ITPTF^IBCSC4E" D ^DIR K DIR Q:$D(DIRUT)!(Y="")
	;
	S X=Y D ITPTF S IBLIST=X,DIR("A",1)="YOU HAVE SELECTED "_X_" TO BE ADDED TO THE BILL",DIR("A")="IS THIS CORRECT",DIR("B")="YES"
	S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST Q
	I 'Y G PTFASK1
	Q
	;
PTF	;
	Q:'$D(^UTILITY($J,"IBDX"))  N IBX,IBY,IBZ,IBORD K IBPTFDX S IBORD="",IBPTFDX=0
	S IBX=0 F  S IBX=$O(^UTILITY($J,"IBDX",IBX)) Q:'IBX  S IBY=0 F  S IBY=$O(^UTILITY($J,"IBDX",IBX,IBY)) Q:'IBY  D
	. S IBZ=^UTILITY($J,"IBDX",IBX,IBY) I IBY=1 S IBORD=$P(IBZ,U,3)
	. I IBORD'="" S IBPTFDX(IBORD)=IBY I '$D(^IBA(362.3,"AIFN"_+$G(IBIFN),+IBZ)) S IBPTFDX=IBPTFDX+1
	Q
	;
ITPTF	;
	N IBI,IB1,IB2,IBJ,IBX,IBY,IBZ,IBA
	S IBA="",IBX=X
	F IBI=1:1 S IBY=$P(IBX,",",IBI) Q:IBY=""  D  Q:'$D(X)  S X=IBA
	. I IBY["-" S IBZ=$P(IBY,"-",1),IB2=$P(IBY,"-",2) D  Q:'$D(X)
	.. I $E(IBZ,1)'=$E(IB2,1) K X Q
	.. S IBY="",IB1=$E(IBZ,2,999),IB2=$E(IB2,2,999),IBZ=$E(IBZ,1) I +IB2'>+IB1 K X Q
	.. F IBJ=IB1:1:IB2 S IBY=IBY_IBZ_IBJ_"-" I IBJ>$G(IBPTFDX(IBZ)) Q
	. F IBJ=1:1 S IB1=$P(IBY,"-",IBJ) Q:IB1=""  S IB2=$E(IB1,1),IB3=$E(IB1,2,99) D  Q:'$D(X)
	.. I IB2=""!'IB3 K X Q
	.. I '$D(IBPTFDX(IB2)) K X Q
	.. I IB3>+$G(IBPTFDX(IB2)) K X Q
	.. S IBA=IBA_IB2_IB3_","
	Q
	;
PTFADD(IBIFN,LIST)	;
	Q:'$D(^UTILITY($J,"IBDX"))!($G(LIST)="")!('$G(IBIFN))  N IBX,IBY,IBI,IBCD,IB1,IB2
	F IBI=1:1 S IBCD=$P(LIST,",",IBI) Q:IBCD=""  D
	. S IB1=$E(IBCD,1),IB2=$E(IBCD,2,999) Q:IB1=""!'IB2
	. S IBX=0 F  S IBX=$O(^UTILITY($J,"IBDX",IBX)) Q:'IBX  D
	.. I $P($G(^UTILITY($J,"IBDX",IBX,1)),U,3)=IB1 S IBDX=$P($G(^UTILITY($J,"IBDX",IBX,IB2)),U,1) I '$D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) I $$ADD^IBCSC4D(IBDX,IBIFN) W "."
	Q
	;
NEWDX(IBX)	;
	Q:'$G(IBX)  N X,Y K IBLIST W !
NEWDX1	S DIR("?",1)="Enter the number preceding the Diagnosis you want added to the bill.",DIR("?",2)="Multiple entries may be added separated by commas or ranges separated by a dash."
	S DIR("?")="The diagnosis will be added to the bill with a print order corresponding to its position in this list."
	S DIR("A")="SELECT NEW DIAGNOSES TO ADD THE BILL"
	S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWDXE
	S IBLIST=Y
	;
	S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
	S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWDXE
	I 'Y G NEWDX1
NEWDXE	Q
	;
ADDNEW(IBIFN,LIST,IBOEA)	;
	Q:'LIST  N IBI,IBX,IBDX,IBDT,IBQ,IBY,IBPIFN,IBZ
	F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBOEA(IBX)) D
	. S IBDX=+IBOEA(IBX) I $D(^IBA(362.3,"AIFN"_IBIFN,IBDX)) Q
	. I $$ADD^IBCSC4D(IBDX,IBIFN) W "."
	Q

IBCSC5
IBCSC5	;ALB/MJB - MCCR SCREEN 5 (OPT. EOC)  ;27 MAY 88 10:15
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC5
	;
EN	I $P(^DGCR(399,IBIFN,0),"^",5)'>2 G ^IBCSC4
	I $D(IBASKCOD) K IBASKCOD D CODMUL^IBCU7
	I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
	L ^DGCR(399,IBIFN):1
	D ^IBCSCU S IBSR=5,IBSR1="",IBV1="100000000" F I="U",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"") S:IBV IBV1="111111111"
	D H^IBCSCU
	S IBPTF=$P(IB(0),U,8),IBBT=$P(IB(0),"^",4)_$P(IB(0),"^",5)_$P(IB(0),"^",6)
	D EN4^IBCVA1
	S Z=1,IBW=1 X IBWW W " Event Date : " S Y=$P(IB(0),U,3) D DT^DIQ
	;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S('$D(^DGCR(399,IBIFN,"C")):IBU,$P(^DGCR(399,IBIFN,"C"),U,10)'="":$P(^DGCR(399,IBIFN,"C"),U,10),1:IBU)
	N IBPOARR D SET^IBCSC4D(IBIFN,"",.IBPOARR)
	S Z=2,IBW=1 X IBWW W " Prin. Diag.: " S Y=$$DX^IBCSC4(0) W $S(Y'="":$P(Y,U,4)_" - "_$P(Y,U,2),$P(IB(0),U,19)=2:IBU,1:IBUN)
	F I=1:1:4 S Y=$$DX^IBCSC4(+Y) Q:Y=""  W !?4,"Other Diag.: ",$P(Y,U,4)_" - "_$P(Y,U,2)
	I +Y S Y=$$DX^IBCSC4(+Y) I +Y W !?4,"***There are more diagnoses associated with this bill.***"
	;S Z=2,IBW=1 X IBWW W " Prin. Diag.: ",$S($D(^ICD9(+$P(IB("C"),U,14),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),$P(IB(0),U,19)=2:IBU,1:IBUN)
	;F I=15:1:18 I $P(IB("C"),U,I)]"" W !?4,"Other Diag.: ",$S($D(^ICD9($P(IB("C"),U,I),0)):$P(^(0),U,3)_" - "_$P(^(0),U,1),1:IBU)
OP	S Z=3,IBW=1 X IBWW W " OP Visits  : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?17 W Y_", "
	S:$D(^DGCR(399,"OP")) DGOPV=1 I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
	S Z=4,IBW=1 X IBWW W " Cod. Method: ",$S($P(IB(0),U,9)="":IBUN,$P(IB(0),U,9)=9:"ICD-9-CM",$P(IB(0),U,9)=4:"CPT-4",1:"HCPCS")
	D WRT:$D(IBPROC)
	;I $D(IBCPT),$P(IB(0),U,9)=4 F I=1:1:3 I $D(IBCPT(I)) W !?4,"CPT Code   : ",$P(^ICPT(IBCPT(I),0),U,2)," - ",$P(^(0),U),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+10) D DT^DIQ
	;I $D(IBICD),$P(IB(0),U,9)=9 F I=4:1:6 I $D(IBICD(I)) W !?4,"ICD Code   : ",$E($P(^ICD0(IBICD(I),0),U,4),1,20)," - ",$P(^(0),"^"),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+7) D DT^DIQ G:'$D(IBICD(I+1)) OCC
	;I $D(IBHC),$P(IB(0),U,9)=5 F I=7:1:9 I $D(IBHC(I)) W !?4,"HCFA Code  : ",$P(^ICPT(IBHC(I),0),U,2)," - ",IBHCN(I),?55,"Date: " S Y=$P(^DGCR(399,IBIFN,"C"),U,I+4) D DT^DIQ G:'$D(IBHC(I+1)) OCC
	S Z=5,IBW=1 X IBWW W " Rx. Refills: " S Y=$$RX I 'Y W IBUN
OCC	G OCC^IBCSC4
	W !?4,"Opt. Code  : ",IBUN
	G OCC^IBCSC4
	Q
MORE	W !?4,*7,"***There are more procedures associated with this bill.***" S I=0 Q
WRT	;  -write out procedures codes on screen
	S J=0 F I=1:1 S J=$O(IBPROC(J)) Q:'J  S X=$G(@(U_$P($P(IBPROC(J),"^"),";",2)_+IBPROC(J)_",0)")) D  I I>9 D MORE Q
	.W:IBPROC(J)["ICD" !?4,"ICD Code   : ",$E($P(X,"^",4),1,28)_" - "_$P(X,"^")
	.W:IBPROC(J)["CPT" !?4,"CPT Code   : ",$P(X,"^",2)_" - "_$P(X,"^")
	.I $P(IB(0),U,19)=2 S Y=+$P(IBPROC(J),U,11) S:+Y Y=+$G(^IBA(362.3,+Y,0)) W ?58,$P($G(^ICD9(Y,0)),U,1) S Y=$P(IBPROC(J),U,2) D D^DIQ W ?67,Y Q
	.S Y=$P(IBPROC(J),"^",2) D D^DIQ W ?58,"Date: ",Y
	Q
PD()	;prints prosthetic device in external form, retuns 0 if there are nonE
	N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.5,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
	. S IBY=0 F  S IBY=$O(^IBA(362.5,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.5,IBY,0)) I IBZ'="" D  Q:X>5
	.. S X=X+1 I X>5 W !,?17,"*** There are more Pros. Items associated with this bill.***" Q
	.. ;S IBN=$G(^RMPR(661,+$P(IBZ,U,3),0)) W:X'=1 ! W ?17,$E($$PIN^IBCSC5B(+IBN),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
	.. S IBN=$$PIN^IBCSC5B(+$P(IBZ,U,3)) W:X'=1 ! W ?17,$E($P(IBN,U,2),1,35)," - ",$P(IBN,U,1),?65,$$FMTE^XLFDT(+IBZ)
	Q X
	;
RX()	;prints RX REFILLS in external form, returns 0 if there are nonE
	N IBX,IBY,IBZ,IBN,X S X=0 S IBX=0 F  S IBX=$O(^IBA(362.4,"AIFN"_IBIFN,IBX)) Q:'IBX  D  Q:X>5
	. S IBY=0 F  S IBY=$O(^IBA(362.4,"AIFN"_IBIFN,IBX,IBY)) Q:'IBY  S IBZ=$G(^IBA(362.4,IBY,0)) I IBZ'="" D  Q:X>5
	.. S X=X+1 I X>5 W !,?17,"*** There are more RX. Refills associated with this bill.***" Q
	.. S IBN=$G(^PSDRUG(+$P(IBZ,U,4),0)) W:X'=1 ! W ?17,$P(IBN,U,1),?65,$$FMTE^XLFDT(+$P(IBZ,U,3))
	Q X
	;
	;IBCSC5

IBCSC5A
IBCSC5A	;ALB/ARH - ADD/ENTER PRESCRIPTION REFILLS ; 12/27/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EN	;add/edit prescription refills for a bill, IBIFN required
	S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3),IBRXNEW=0
	D SET(IBIFN,.IBRXA,"") S IBRXOLD=+$P(IBRXA,U,2)
	D RXDISP^IBCSC5C(DFN,IBDT1,IBDT2,.IBPR,.IBPRO,.IBRXA) I +$P($G(IBPRO),U,2) D NEWRX^IBCSC5C(+IBPRO) I +$G(IBLIST) D ADDNEW^IBCSC5C(IBIFN,IBLIST,.IBPR,.IBPRO) S DGRVRCAL=1,IBRXNEW=1
	S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
E1	S IBPIFN=0,IBRX=$$ASKRX(.IBRXAP,.IBPRO) G:IBRX="" EXIT S IBDT=$P(IBRX,U,2),IBRX=$P(IBRX,U,1),DGRVRCAL=1
	I 'IBDT S IBDT=$O(IBRXA(IBRX,0)) S:'IBDT IBDT=$O(IBPR(IBRX,0)) S IBDT=$$ASKDT(IBDT1,IBDT2,IBDT) G:'IBDT E1
	I +$$RXDUP^IBCU3(IBRX,IBDT,IBIFN,1),'$D(IBRXA(IBRX,IBDT)) G E1
	I '$D(IBPR(IBRX,IBDT)) W !,"This rx refill does not exist in Pharmacy for this patient!",!
	S IBPIFN=$G(IBRXA(IBRX,IBDT)),IBDRG=$P(IBPIFN,U,2)
	I 'IBPIFN S IBX=$G(IBPR(IBRX,IBDT)),IBPIFN=$$ADD(IBRX,IBIFN,IBDT,$P(IBX,U,3),$P(IBX,U,1),$P(IBX,U,4,6)) S:+IBPIFN IBRXNEW=1 W:+IBPIFN "  ... ADDED" I 'IBPIFN W " ??" G E1
	D EDIT(+IBPIFN) S IBRXAP=+$G(IBPRO) D SET(IBIFN,.IBRXA,.IBRXAP) G E1
	;
EXIT	I 'IBRXOLD,+IBRXNEW D DEFAULT^IBCSC5C(IBIFN)
	K IBPIFN,IBRX,IBDRG,IBX,IBDT1,IBDT2,IBRXA,IBPR,IBDT,IBRXNEW,IBRXOLD,IBLIST,IBPRO,IBRXAP
	Q
	;
ASKRX(IBRXAP,IBPRO)	;
	N X,Y,IBY,IBX W ! S IBX=""
	I +$G(IBIFN) S DIR("?")="The prescription number for the refill",DIR("??")="^D HELP^IBCSC5A("_IBIFN_")"
	S DIR("A")="Select RX REFILL",DIR(0)="FO^1:11^K:X'?.UN X" D ^DIR I $D(DIRUT)!(Y'?.AN) S Y="" K DIR,DIRUT G ARX1E
	S IBX=Y I $D(IBRXAP)<10,$D(IBPRO)<10 G ARX1E
	;
	S IBY=$G(IBRXAP(IBX)) S:IBY="" IBY=$G(IBPRO(IBX)) I IBY="" G ARX1E
	W ! S DIR(0)="YO",DIR("A")="ADD/EDIT RX REFILL "_$P(IBY,U,1)_" FOR "_$$FMTE^XLFDT($P(IBY,U,2))_" CORRECT",DIR("B")="YES"
	D ^DIR K DIR I Y=1,'$D(DIRUT) S IBX=IBY
ARX1E	Q IBX
	;
ASKDT(IBDT1,IBDT2,IBDT)	;
	S DIR("A")="Select RX REFILL DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX",DIR("B")=$$FMTE^XLFDT(IBDT) D ^DIR K DIR,DTOUT,DIRUT
	Q $S(Y?7N:Y,1:0)
	;
ADD(RX,IFN,IBDT,DRUG,PIFN,OTHER)	;
	N IBX S IBX=0 S DRUG=$$DRUG($G(DRUG)) G:'DRUG ADDE
	S DIC="^IBA(362.4,",DIC(0)="AQL",X=RX K DA,DO D FILE^DICN K DA,DO,X
	I Y>0 S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBDT_";.04////"_DRUG_";.05////"_+PIFN_";.06////"_$P(OTHER,U,1)_";.07////"_$P(OTHER,U,2)_";.08////"_$P(OTHER,U,3) D ^DIE K DIE,DIC,DA,DR
ADDE	Q IBX
	;
EDIT(PIFN)	;
	S DIDEL=362.4,DIE="^IBA(362.4,",DR=".01;.03;.04;.06;.07;.08",DA=PIFN D ^DIE K DIE,DR,DA,DIC,DIDEL
	Q
	;
SET(IFN,RXARR,RXARRP)	;setup array of all rx refills for bill, array name should be passed by reference
	;returns: RXARR(RX #, REFILL DT)=RX IFN (362.4) ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC #,    RXARR=BILL IFN ^ RX count
	N CNT,IBX,IBY,IBZ,PIFN,IBC,IBCNT S IBCNT=+$G(RXARRP),IBC="AIFN"_$G(IFN) K RXARR,RXARRP
	S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.4,IBC,IBX)) Q:IBX=""  S PIFN=0 F  S PIFN=$O(^IBA(362.4,IBC,IBX,PIFN)) Q:'PIFN  D
	. S IBY=$G(^IBA(362.4,PIFN,0)) Q:IBY=""  S CNT=CNT+1,RXARR($P(IBY,U,1),+$P(IBY,U,3))=PIFN_U_$P(IBY,U,4)_U_$P(IBY,U,6,8)
	S RXARR=$G(IFN)_"^"_CNT
	S IBX=0 F  S IBX=$O(RXARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(RXARR(IBX,IBY)) Q:'IBY  S IBCNT=IBCNT+1,RXARRP(IBCNT)=IBX_"^"_IBY
	Q
	;
DISP(RXARR,RXARRP)	;screen display of existing refills for a bill,
	;input should be print order array returned by SET^IBCSC5A: RXARR(RX,DT)=RX IFN (362.4) ^ DRUG, passed by reference
	N IBX,IBY,IBZ
	W !!,?5,"-----------------  Existing Rx Refills for Bill  -----------------",!
	S IBI=0 F  S IBI=$O(RXARRP(IBI)) Q:IBI=""  S IBX=$P(RXARRP(IBI),U,1),IBY=$P(RXARRP(IBI),U,2) I $D(RXARR(IBX,IBY)) D
	. S IBZ=$P($G(^PSDRUG(+$P(RXARR(IBX,IBY),U,2),0)),U,1)
	. W !,$J(IBI,2),")",?7,IBX,?20,$E(IBZ,1,38),?60,$$FMTE^XLFDT(IBY)
	W !
	Q
	;
HELP(IFN)	;called for help from rx enter to display existing rx, displays rx' from 52 and 399
	I +$G(IFN) N IBX,IBRXA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBRXA,""),RXDISP^IBCSC5C($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),.IBPR,.IBPRO,.IBRXA) S IBRXAP=+IBPRO D SET(IFN,.IBRXA,.IBRXAP),DISP(.IBRXA,.IBRXAP)
	Q
	;
BILL(IBIFN)	; display all existing prescription refills (52) for a patient and date range
	; (call is a short cut to calling rxdisp if have bill number)
	N IBX,IBY S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
	S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
	Q IBY
	;
DRUG(IBD)	; get drug
	N X,Y S IBD=+$G(IBD) I '$D(^PSDRUG(IBD,0)) S IBD=0,DIC="^PSDRUG(",DIC(0)="AEQ" D ^DIC K DIC I +Y>0 S IBD=+Y
	Q IBD

IBCSC5B
IBCSC5B	;ALB/ARH - ADD/ENTER PROSTHETIC ITEMS ; 12/28/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EN	;add/edit prosthetic items for a bill, IBIFN required
	S IBX=$$BILL(IBIFN) Q:'IBIFN  S DFN=+IBX,IBDT1=$P(IBX,U,2),IBDT2=$P(IBX,U,3)
	D SET(IBIFN,.IBPDA),PIDISP(DFN,IBDT1,IBDT2,.IBPDE,.IBPDA),DISP(.IBPDA)
E1	S IBPIFN=0,IBDT=$$ASKDT(IBDT1,IBDT2) G:'IBDT EXIT
	S IBPD=$O(IBPDA(IBDT,0)) S:'IBPD IBPD=$O(IBPDE(IBDT,0)) S IBPD=$$ASKPD(IBPD) G:'IBPD E1
	S IBPIFN=$G(IBPDA(IBDT,+IBPD)) I 'IBPIFN S IBPIFN=$$ADD(IBDT,IBIFN,+IBPD,+$G(IBPDE(IBDT,+IBPD))) I 'IBPIFN W " ??" G E1
	I '$D(IBPDE(IBDT,+IBPD)) W !,"This prosthetic item does not exist in this patients prosthetics record.",!
	D EDIT(+IBPIFN) D SET(IBIFN,.IBPDA) W ! G E1
	;
EXIT	K IBPIFN,IBX,IBDT1,IBDT2,IBPDA,IBPDE,IBPD,IBDT
	Q
	;
ASKDT(IBDT1,IBDT2,IBDT)	;
	I +$G(IBIFN) S DIR("?")="Enter the date the item was dilivered to the patient",DIR("??")="^D HELP^IBCSC5B("_IBIFN_")"
	S DIR("A")="Select ITEM DELIVERY DATE",DIR(0)="DO^"_IBDT1_":"_IBDT2_":EX" D ^DIR K DIR,DTOUT,DIRUT
	Q $S(Y?7N:Y,1:0)
	;
ASKPD(PD)	;
	N X,Y
	S DIR("A")="Select PROSTHETIC ITEM",DIR(0)="660,4O" S:+$G(PD) DIR("B")=+$G(^RMPR(661,+$G(PD),0)) D ^DIR S:$D(DIRUT)!(Y'>0) Y="" K DIR,DIRUT
	Q Y
	;
ADD(IBDT,IFN,IBPD,PIFN)	;
	N IBX S IBX=0,DIC="^IBA(362.5,",DIC(0)="AQL",X=IBDT K DA,DO D FILE^DICN K DA,DO,X
	I Y>0 S DIE=DIC,(IBX,DA)=+Y,DR=".02////"_IFN_";.03////"_IBPD_";.04////"_PIFN D ^DIE K DIE,DIC,DA,DR W "... ADDED"
	Q IBX
	;
EDIT(PIFN)	;
	S DIDEL=362.5,DIE="^IBA(362.5,",DR=".01;.03",DA=PIFN D ^DIE K DIE,DR,DA,DIC,DIDEL
	Q
	;
SET(IFN,PDARR)	;setup array of all prosthetic devices for bill, array name should be passed by reference
	;returns: PDARR(PD DELIV DATE, PD ITEM (661 ptr))=PD IFN (362.5 ptr),  PDARR=BILL IFN ^ PD count
	N CNT,IBX,IBY,PIFN,IBC K PDARR S IBC="AIFN"_$G(IFN)
	S (CNT,IBX)=0 F  S IBX=$O(^IBA(362.5,IBC,IBX)) Q:'IBX  S PIFN=0 F  S PIFN=$O(^IBA(362.5,IBC,IBX,PIFN)) Q:'PIFN  D
	. S IBY=$G(^IBA(362.5,PIFN,0)) Q:IBY=""  S CNT=CNT+1,PDARR(+IBY,$P(IBY,U,3))=PIFN
	S PDARR=$G(IFN)_"^"_CNT
	Q
	;
DISP(PDARR)	;screen display of existing prosthetic devices for a bill,
	;input should be array returned by SET^IBCSC5B: PDARR(PD DT, PD ITEM)=PD IFN (362.5), pass by reference
	N IBX,IBY,IBZ
	W !!,?5,"-----------------  Existing Prosthetic Items for Bill  -----------------",!
	S IBX=0 F  S IBX=$O(PDARR(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(PDARR(IBX,IBY)) Q:'IBY  D
	. S IBZ=$$PIN(IBY) W !,$$DATE(IBX),?12,$P(IBZ,U,1),?20,$P(IBZ,U,2)
	W !
	Q
	;
HELP(IFN)	;called for help from prosthetics enter to display existing devices, displays devices from 660 and 399
	I +$G(IFN) N IBX,IBPDA S IBX=$$BILL(IFN) I +IBX D SET(IFN,.IBPDA),PIDISP($P(IBX,U,1),$P(IBX,U,2),$P(IBX,U,3),"",.IBPDA),DISP(.IBPDA)
	Q
	;
PIDISP(DFN,DT1,DT2,ARRAY,PDARR)	; display all prosthetic items (660) for a patient and date range
	;PDARR (as defined by SET^IBCSC5B) passed by ref. only to check if pros. item is on the bill, not necessary, not changed
	;returns ARRAY(PD DEL DATE (660,10), PD ITEM (660,4=661 ptr))=RECORD (660 ptr), should pass by ref. if desired
	N PIFN,IBX,IBY,PNAME,DDT,PI K ARRAY S DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
	S PIFN=0 F  S PIFN=$O(^RMPR(660,"C",DFN,PIFN)) Q:'PIFN  D
	. S IBX=$G(^RMPR(660,PIFN,0)),DDT=+$P(IBX,U,12)\1 I (DDT<DT1)!(DDT>DT2) Q
	. S ARRAY(DDT,+$P(IBX,U,6))=PIFN
	;
	W @IOF,?33,"PROSTHETICS SCREEN",!,"================================================================================",!
	S DDT=0 F  S DDT=$O(ARRAY(DDT)) Q:'DDT  S PI=0 F  S PI=$O(ARRAY(DDT,PI)) Q:'PI  D
	. S PIFN=ARRAY(DDT,PI),PNAME=$$PIN(PI),IBY=$G(^RMPR(660,PIFN,"AM")),IBX=$G(^RMPR(660,PIFN,0))
	. W !,$S($D(PDARR(+DDT,PI)):"*",1:"")
	. W ?2,$$DATE(DDT),?12,$P(PNAME,U,1),?20,$E($P(PNAME,U,2),1,30),?55,$E($$EXSET^IBEFUNC($P(IBX,U,14),660,12),1,4),?62,$$EXSET^IBEFUNC($P(IBY,U,3),660,62),?70,$J(+$P(IBX,U,16),9,2)
	Q
	;
PIN(PITEM)	;given the pros item IFN (661 ptr) returns name for printing (661,.01^441,.05)
	N IBX,IBY S IBY="" I +$G(PITEM) S IBX=+$G(^RMPR(661,+PITEM,0)) I +IBX S IBY=IBX_U_$$DESCR^PRCPUX1(0,+IBX)
	Q IBY
	;
BILL(IBIFN)	; display all existing prescription refills (52) for a patient and date range
	; (call is a short cut to calling rxdisp if have bill number)
	N IBX,IBY S IBX=$G(^DGCR(399,+$G(IBIFN),0)),IBY=$P(IBX,U,2)
	S IBX=$G(^DGCR(399,+IBIFN,"U")),$P(IBY,U,2)=+IBX,$P(IBY,U,3)=+$P(IBX,U,2)
	Q IBY
	;
DATE(X)	;
	Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)

IBCSC5C
IBCSC5C	;ALB/ARH - ADD/EDIT RX REFILLS (CONTINUED)  ; 3/4/94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
DEFAULT(IFN)	; add default DX and CPT to a Rx bill
	N IBX,IBPAR1,IBDX,IBCPT,IBDT,IBBIL S IBPAR1=$G(^IBE(350.9,1,1)),IBDX=$P(IBPAR1,U,29),IBCPT=$P(IBPAR1,U,30) I 'IBDX,'IBCPT Q
	S IBBIL=$G(^DGCR(399,+$G(IFN),0)) Q:IBBIL=""
	S IBX=$O(^IBA(362.4,"C",IFN,0)) Q:'IBX  S IBDT=$P($G(^IBA(362.4,+IBX,0)),U,3) Q:'IBDT
	I +IBDX,'$D(^IBA(362.3,"AIFN"_IFN,+IBDX)) S DIC="^IBA(362.3,",DIC(0)="L",DIC("DR")=".02////"_IFN,X=IBDX K DD,DO D FILE^DICN K DIC,DA,DR,DD,DO
	I +IBCPT,'$D(^DGCR(399,IFN,"CP","B",IBCPT_";ICPT(")) D
	. I $P(IBBIL,U,9)="" S DIE="^DGCR(399,",DA=IFN,DR=".09////4" D ^DIE K DIE,DIC,DA,DR
	. I '$D(^DGCR(399,IFN,"CP",0)) S ^DGCR(399,IFN,"CP",0)="^399.0304AVI^"
	. S DIC="^DGCR(399,"_IFN_",""CP"",",DIC(0)="L",DA(1)=IFN,X=IBCPT_";ICPT(",DIC("DR")="1////"_IBDT K DD,DO D FILE^DICN K DIC,DA,DD,DO,DR
	Q
	;
RXDISP(DFN,DT1,DT2,ARRAY,POARR,RXARR)	; display all re refills for a patient and date range
	;RXARR (as defined by SET^IBCSC5A) passed by ref. only to check if rx-refill is on the bill, not necessary not changed
	;returns: ARRAY(RX #, REFILL DT) = RX IFN (52) ^ REFILL IFN ^ DRUG ^ DAYS SUPPLY ^ QTY ^ NDC, pass by reference if desired
	;         POARR(CNT)=RX # ^ REFILL DT
	N PIFN,RIFN,IBX,IBY,DTE,DTR,RX,IBCNT K ARRAY,POARR S POARR=0
	S IBCNT=0,DT1=$G(DT1)-.0001,DT2=$G(DT2) S:'DT2 DT2=9999999 Q:'$G(DFN)
	;^PS(55,DFN,"P","A",EXPIRATION DATE, RX) is the best xref available for finding patient refills in a date range
	S DTE=DT1 F  S DTE=$O(^PS(55,DFN,"P","A",DTE)) Q:'DTE  D
	. S PIFN=0 F  S PIFN=$O(^PS(55,DFN,"P","A",DTE,PIFN)) Q:'PIFN  D
	.. S DTR=DT1 F  S DTR=$O(^PSRX(PIFN,1,"B",DTR)) Q:'DTR!(DTR>DT2)  D
	... S RIFN=0 F  S RIFN=$O(^PSRX(PIFN,1,"B",DTR,RIFN)) Q:'RIFN  D
	.... S IBX=$G(^PSRX(PIFN,0)),IBY=$G(^PSRX(PIFN,1,RIFN,0)) Q:IBY=""
	.... S ARRAY($P(IBX,U,1),+IBY)=PIFN_U_RIFN_U_$P(IBX,U,6)_U_$P(IBX,U,8)_U_$P(IBY,U,4)_U_$P($G(^PSDRUG(+$P(IBX,U,6),2)),U,4)
	S IBX="" F  S IBX=$O(ARRAY(IBX)) Q:IBX=""  S IBY=0 F  S IBY=$O(ARRAY(IBX,IBY)) Q:'IBY  D
	. S IBCNT=IBCNT+1,POARR(IBCNT)=$P(IBX,U,1)_"^"_+IBY,POARR=IBCNT
	;
	W @IOF,?32,"PRESCRIPTION REFILLS",!,"==============================================================================",!
	S IBX=+POARR,IBCNT=0 F  S IBCNT=$O(POARR(IBCNT)) Q:IBCNT=""  S RX=$P(POARR(IBCNT),U,1),DTR=$P(POARR(IBCNT),U,2) I RX'="",DTR'="" D
	. S IBY="" I $D(RXARR(RX,+DTR)) S IBX=IBX-1,IBY="*"
	. W !,$J(IBCNT,2),")",?5,IBY,?7,RX,?20,$P($G(^PSDRUG(+$P(ARRAY(RX,DTR),U,3),0)),U,1),?60,$$FMTE^XLFDT(+DTR)
	S $P(POARR,U,2)=IBX
	Q
	;
NEWRX(IBX)	;
	Q:'$G(IBX)  N X,Y K IBLIST W !
NEWRX1	S DIR("?")="Enter the number preceding the RX Refills you want added to the bill."
	S DIR("A")="SELECT NEW RX REFILLS TO ADD THE THE BILL"
	S DIR(0)="LO^1:"_+IBX D ^DIR K DIR G:'Y!$D(DIRUT) NEWRXE
	S IBLIST=Y
	;
	S DIR("A")="YOU HAVE SELECTED "_IBLIST_" TO BE ADDED TO THE BILL IS THIS CORRECT",DIR("B")="YES"
	S DIR(0)="YO" D ^DIR K DIR I $D(DIRUT) K IBLIST G NEWRXE
	I 'Y G NEWRX1
NEWRXE	Q
	;
ADDNEW(IBIFN,LIST,IBPR,IBPRO)	;
	Q:'LIST  N IBI,IBX,IBRX,IBDT,IBQ,IBY,IBPIFN,IBZ
	F IBI=1:1 S IBX=$P(LIST,",",IBI) Q:'IBX  I $D(IBPRO(IBX)) D
	. S IBRX=$P(IBPRO(IBX),U,1),IBDT=$P(IBPRO(IBX),U,2) Q:IBRX=""
	. S IBQ=0,IBY=$G(IBPR(IBRX,+IBDT)) Q:'IBY
	. S IBPIFN=0 F  S IBPIFN=$O(^IBA(362.4,"AIFN"_IBIFN,IBRX,IBPIFN)) Q:'IBPIFN  I $P($G(^IBA(362.4,IBPIFN,0)),U,3)=IBDT S IBQ=1 Q
	. I 'IBQ S IBZ=$G(IBPR(IBRX,IBDT)) I $$ADD^IBCSC5A(IBRX,IBIFN,IBDT,$P(IBZ,U,3),$P(IBZ,U,1),$P(IBZ,U,4,6)) W "."
	Q

IBCSC6
IBCSC6	;ALB/MJB - MCCR SCREEN 6 (INPT. BILLING INFO)  ;27 MAY 88 10:19
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC6
	;
EN	I $P(^DGCR(399,IBIFN,0),"^",5)>2 G EN^IBCSC7
	I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
	D ^IBCSCU S IBSR=6,IBSR1="",IBV1="00000" S:IBV IBV1="11111" F I="U","U1",0,"U2" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	D H^IBCSCU
	S IBBT=$P(IB(0),U,4)_$P(IB(0),U,5)_$P(IB(0),U,6)
	D 4^IBCVA1,5^IBCVA1
	;
1	S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT):IBU,IBBT="":IBU,1:IBBT)
	W ?46,"Timeframe: ",$S($D(IBTF):IBTF,1:"") K IBTF
	;W !?4,"Provider # : ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
	W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
	W ?30,"Non-Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
	;
ROI	S Z=2,IBW=1 X IBWW
	W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
	W ?45,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
	I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
	S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
	W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
	;
3	S Z=3,IBW=1 X IBWW D FROMTO
	;
BED	S Z=4,IBW=1 X IBWW
	W " Bedsection  : ",$S(IB("U")="":IBU,$P(IB("U"),U,11)'="":$P(^DGCR(399.1,$P(IB("U"),U,11),0),U,1),1:IBU)
	;S IBI=1,D1=0,IBLS=$S($D(DGNEWLOS):0,IB("U")="":0,$P(IB("U"),U,15)'="":$P(IB("U"),U,15),1:0) K DGNEWLOS
	;I 'IBLS S D0=DFN,(D1,DGPMIFN)=$O(^DGPM("AMV1",$P(IBIP,U,2),DFN,0)),X2=$P(IB("U"),"^"),X1=$P(IB("U"),"^",2) D ^%DTC S IBLS(1)=X
	;I 'IBLS K X D:DGPMIFN ^DGPMLOS S IBLS=$S($D(X):$P(X,U,5),1:IBLS(1)),IBLS=$S(IBLS(1)<IBLS:IBLS(1),1:IBLS) S:'IBLS IBLS=1 S (DA,Y)=IBIFN,DIE="^DGCR(399,",DR="165///"_IBLS D ^DIE K DR
	W !?4,"LOS         : ",IBLS
	;
	I $P($G(^DPT(DFN,.3)),"^")="Y" D SC I IBSCM>0 W !?4,"PTF record indicates ",IBSCM," of ",IBM," movements are for Service Connected Care."
REV	S Z=5,IBW=1 X IBWW W " Rev. Code   : " F I=1:1:10 Q:'$D(IBREVC(I))  D REV^IBCSC61
	I $D(IBREVC(11)) W !,?4,"Too many Revenue Codes to display, enter '5' to list"
BILL	D OFFSET^IBCSC61
	W !?4,"FY 1        : ",$S($P(IB("U1"),U,9)]"":$P(IB("U1"),U,9),1:IBU),?40,"Charges: " S X=$P(IB("U1"),"^",10),X2="2$" D COMMA^%DTC W X
	I $P(IB("U1"),U,11)]"" W !?4,"FY 2        : ",$P(IB("U1"),U,11) S X=+$P(IB("U1"),U,12),X2="2$" D COMMA^%DTC W ?40,"Charges: ",X
	G ^IBCSCP
	Q
	;
FROMTO	;  - Print From and To dates of bill
	W " Bill From   : " S Y=$P(IB("U"),"^") D D^DIQ W $S($L(Y):Y,1:IBU)
	W ?48,"Bill To: " S Y=$P(IB("U"),"^",2) D D^DIQ W $S($L(Y):Y,1:IBU)
	Q
	;
SC	;  -if patient is sc, are movements for sc care
	S PTF=$P(IB(0),"^",8)
	;
SC1	;
	;  -input ptf
	;
	;  -output IBm   = number of movements
	;          IBscm = number of SC movements
	S (IBM,IBSCM,M)=0
	I $S('PTF:1,'$D(^DGPT(PTF,0)):1,1:0) Q
	F  S M=$O(^DGPT(PTF,"M",M)) Q:'M  S IBM=IBM+1 I $P($G(^DGPT(PTF,"M",M,0)),"^",18)=1 S IBSCM=IBSCM+1
	Q
	;
	;IBCSC6

IBCSC61
IBCSC61	;ALB/MJB - MCCR SCREEN UTILITY  ;20 JUN 88 10:58
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO IBCSC61
	;
REV	I I>1 W !?4,"Rev. Code",?16,": "
	S DGRCD=$S($D(^DGCR(399.2,+IBREVC(I),0)):^(0),1:""),DGRCD=$P(DGRCD,"^",1)_"-"_$E($P(DGRCD,"^",2),1,17)
	I $P(IBREVC(I),"^",6) S DGRCD=DGRCD_" ("_$P($G(^ICPT(+$P(IBREVC(I),"^",6),0)),"^")_")"
	S X=$S($P(IBREVC(I),"^",4)]"":$P(IBREVC(I),"^",4),1:IBU) I X'=IBU S X2="2$" D COMMA^%DTC
	W DGRCD,?40,"Charges: ",X I $P(IBREVC(I),"^",5)]"",$D(^DGCR(399.1,$P(IBREVC(I),"^",5),0)) W ?62,$E($P(^DGCR(399.1,$P(IBREVC(I),"^",5),0),"^"),1,16)
	Q
	;
CHARGE	S IBCH=0 F I=1:1 Q:'$D(IBREVC(I))  S IBCH=IBCH+($P(IBREVC(I),U,4))
	I IB("U1")]"" S X=$P(IB("U1"),"^",1),X1=$P(IB("U1"),"^",2),IBCH=X-X1
	Q
	;
OFFSET	S IBOFFC="" W !?4,"OFFSET",?16,": " S X=$S(IB("U1")']"":0,1:+$P(IB("U1"),U,2)),X2="2$" S:X IBOFFC=$P(IB("U1"),U,3) D COMMA^%DTC
	W X,"  [",$S($L(IBOFFC):IBOFFC,'$P(X,"$",2):"NO OFFSET RECORDED",1:"OFFSET DESCRIPTION UNSPECIFIED"),"]"
	D CHARGE W !?4,"BILL TOTAL",?16,": " S X=$S('$D(IBCH):0,1:+IBCH),X2="2$" D COMMA^%DTC W X
	K IBOFFC
	Q
	;IBCSC61

IBCSC7
IBCSC7	;ALB/MJB - MCCR SCREEN 7 (INPT. BILLING INFO)  ;27 MAY 88 10:19
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC7
	;
	I $P(^DGCR(399,IBIFN,0),"^",5)'>2 G ^IBCSC8
	I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
EN	D ^IBCSCU S IBSR=7,IBSR1="",IBV1="00000" S:IBV IBV1="11111" F I="U","U1",0,"U2" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	D H^IBCSCU
	D 4^IBCVA1,5^IBCVA1
	S IBBT=$P(IB(0),U,4)_$P(IB(0),U,5)_$P(IB(0),U,6)
	S Z=1,IBW=1 X IBWW W " Bill Type   : ",$S('$D(IBBT):IBU,IBBT="":IBU,1:IBBT)
	W ?46,"Timeframe: ",$S($D(IBTF):IBTF,1:"") K IBTF
	;W !?4,"Provider # : ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
	W !?4,"Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,2)'="":$P(IB("U2"),U,2),1:IBU)
	W ?30,"Non-Covered Days: ",$S(IB("U2")="":IBU,$P(IB("U2"),U,3)'="":$P(IB("U2"),U,3),1:IBU)
ROI	S Z=2,IBW=1 X IBWW
	W " Sensitive?  : ",$S(IB("U")="":IBU,$P(IB("U"),U,5)="":IBU,$P(IB("U"),U,5)=1:"YES",1:"NO")
	W ?45,"Assignment: ",$S(IB("U")="":IBU,$P(IB("U"),U,6)="":IBU,$P(IB("U"),U,6)["n":"NO",$P(IB("U"),U,6)["N":"NO",$P(IB("U"),U,6)=0:"NO",1:"YES")
	I $P(IB("U"),U,5)=1 W !?4,"R.O.I. Form : ",$S($P(IB("U"),U,7)=1:"COMPLETED",$P(IB("U"),U,7)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
	S IBOA="01^02^03^04^05^06^" F I=1:1:5 Q:'$D(IBOCN(I))  I IBOA[IBOCN(I)_"^" S IBOX=1
	W:$D(IBOX) !,?4,"Pow of Atty : ",$S($P(IB("U"),U,3)=1:"COMPLETED",$P(IB("U"),U,3)=0:"NOT COMPLETED",1:"STATUS UNKNOWN")
	;
	S Z=3,IBW=1 X IBWW D FROMTO^IBCSC6
	;
OP	S Z=4,IBW=1 X IBWW W " OP Visits   : " F I=0:0 S I=$O(^DGCR(399,IBIFN,"OP",I)) Q:'I  S Y=I X ^DD("DD") W:$X>67 !?18 W Y_", "
	I '$O(^DGCR(399,IBIFN,"OP",0)) W IBU
	;
	G REV^IBCSC6
	;
	;IBCSC7

IBCSC8
IBCSC8	;ALB/MJB - MCCR SCREEN 8 (UB-82 BILL SPECIFIC INFO)  ;27 MAY 88 10:20
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSC8
	;
EN	S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ; hcfa 1500
	I IBCUBFT=3 K IBCUBFT G ^IBCSC82 ; ub-92
	;I $P(^DGCR(399,IBIFN,0),"^",19)=2 G ^IBCSC8H ;hcfa 1500
	D ^IBCSCU S IBSR=8,IBSR1="",IBV1="00000000" S:IBV IBV1="11111111" F I="U","U1",0 S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	D H^IBCSCU
	S Z=1,IBW=1 X IBWW W " Bill Remark    : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
	S IBX="^^^2^9^27^45" F I=4:1:7 S Z=(I-2),IBW=1 X IBWW W " Form Locator ",$P(IBX,U,I),$S($E($P(IBX,U,I),2)="":" : ",1:": "),$S($P(IB("U1"),U,I)]"":$P(IB("U1"),U,I),1:IBUN)
	S IBX=91 F I=13,14 S Z=(I-7),IBW=1,IBX=IBX+1 X IBWW W " Form Locator ",IBX,": ",$S($P(IB("U1"),U,I)]"":$P(IB("U1"),U,I),1:IBUN)
	S Z=8,IBW=1 X IBWW W " Tx Auth. Code  : ",$S($P(IB("U"),U,13)]"":$P(IB("U"),U,13),1:IBUN)
	G ^IBCSCP
Q	Q
	;IBCSC8

IBCSC82
IBCSC82	;ALB/MJB - MCCR SCREEN 8 (UB-92 BILL SPECIFIC INFO)  ;27 MAY 88 10:20
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	S IBCUBFT=$$FT^IBCU3(IBIFN) I IBCUBFT=2 K IBCUBFT G ^IBCSC8H ;hcfa 1500
	;
	D ^IBCSCU S IBSR=8,IBSR1=2,IBV1="00000" S:IBV IBV1="11111" F I="U","U1",0,"UF3","UF31","U2" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	D H^IBCSCU
	S Z=1,IBW=1 X IBWW W " Bill Remark     : ",$S($P(IB("U1"),U,8)]"":$P(IB("U1"),U,8),1:IBUN)
	W !,?3," Tx Auth. Code   : ",$S($P(IB("U"),U,13)]"":$P(IB("U"),U,13),1:IBUN)
	W !,?3," Admitting Dx    : " S IBX=$P(IB("U2"),U,1),IBX=$G(^ICD9(+IBX,0)) W $S(IBX'="":$P(IBX,U,1)_" - "_$P(IBX,U,3),1:IBUN)
	S Z=2,IBW=1 X IBWW W " Attending Phy.  : ",$S($P(IB("U1"),U,13)]"":$P(IB("U1"),U,13),1:IBUN)
	W !,?3," Other Physician : ",$S($P(IB("U1"),U,14)]"":$P(IB("U1"),U,14),1:IBUN)
	S Z=3,IBW=1 X IBWW W " Form Locator 2  : ",$S($P(IB("UF3"),U,1)]"":$P(IB("UF3"),U,1),1:IBUN)
	W !,?3," Form Locator 11 : ",$S($P(IB("UF3"),U,2)]"":$P(IB("UF3"),U,2),1:IBUN)
	S Z=4,IBW=1 X IBWW W " Form Locator 31 : ",$S($P(IB("UF3"),U,3)]"":$P(IB("UF3"),U,3),1:IBUN)
	S IBX=0 I $P(IB("UF3"),U,4)'="" W !,?3," Form Locator 37A: ",$P(IB("UF3"),U,4) S IBX=1
	I $P(IB("UF3"),U,5)'="" W !,?3," Form Locator 37B: ",$P(IB("UF3"),U,5) S IBX=1
	I $P(IB("UF3"),U,6)'="" W !,?3," Form Locator 37C: ",$P(IB("UF3"),U,6) S IBX=1
	I 'IBX W !,?3," Form Locator 37 : ",IBUN
	S Z=5,IBW=1 X IBWW W " Form Locator 56 : ",$S($P(IB("UF3"),U,7)]"":$P(IB("UF3"),U,7),1:IBUN)
	W !,?3," Form Locator 57 : ",$S($P(IB("UF31"),U,1)]"":$P(IB("UF31"),U,1),1:IBUN)
	W !,?3," Form Locator 78 : ",$S($P(IB("UF31"),U,2)]"":$P(IB("UF31"),U,2),1:IBUN)
	G ^IBCSCP
Q	Q
	;IBCSC8

IBCSC8H
IBCSC8H	;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) HCFA 1500 ; 4/21/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;HCFA 1500 screen 8
	;
	;MAP TO DGCRSC8H
	;
EN	D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="000" S:IBV IBV1="111" F I="U","U1","UF2",0 S IB(I)=$G(^DGCR(399,IBIFN,I))
	D H^IBCSCU
	S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
	W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
	S Z=2,IBW=1 X IBWW W " Block 31           : ",$S($P(IB("UF2"),U,1)]"":$P(IB("UF2"),U,1),1:IBUN)
	S Z=3,IBW=1 X IBWW W " Tx Auth. Code      : ",$S($P(IB("U"),U,13)]"":$P(IB("U"),U,13),1:IBUN)
	G ^IBCSCP
Q	Q
	;IBCSC8H

IBCSCE
IBCSCE	;ALB/MRL,MJB - MCCR SCREEN EDITS  ;07 JUN 88 14:35
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCE
	; always do procedures last because they are edited upon return to screen routine
	I IBDR20["54," S IBDR20=$P(IBDR20,"54,",1)_$P(IBDR20,"54,",2)_"54,"
	I IBDR20["44," S IBDR20=$P(IBDR20,"44,",1)_$P(IBDR20,"44,",2)_"44,"
LOOP	N IBDRLP,IBDRL S IBDRLP=IBDR20 F IBDRL=1:1 S IBDR20=$P(IBDRLP,",",IBDRL) Q:IBDR20=""  D EDIT
	Q
EDIT	I (IBDR20["31") D MCCR^IBCNSP2 G ENQ
	I (IBDR20["43")!(IBDR20["52") D:+$G(IBPTF) DX^IBCSC4B D ^IBCSC4D G ENQ
	I (IBDR20["74")!(IBDR20["53") K DR N I D ^IBCOPV S (DA,Y)=IBIFN G TMPL
	I (IBDR20["54"),$P($G(^IBE(350.9,1,1)),"^",17) K DR N I D ^IBCCPT G TMPL ; S DR(2,399.0304)=".01;1"
	I (IBDR20["55") D ^IBCSC5A G ENQ
	I (IBDR20["45")!(IBDR20["56") D ^IBCSC5B G ENQ
	;S Y="" I "8"[IBSR,$P(^DGCR(399,IBIFN,0),"^",19)=2 S Y="H"
	;S DR="[IB SCREEN"_IBSR_Y_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
TMPL	S DR="[IB SCREEN"_IBSR_IBSR1_"]",(DA,Y)=IBIFN,DIE="^DGCR(399,"
	D ^DIE K DIE,DR
ENQ	K DIE,DR,IBDR1,IBDR20,DGDRD,DGDRS,DGDRS1,DA Q
	;
	; W I "^11^12^13^15^14^21^22^23^"[("^"_J_"^") G W1
	; I "^44^"[("^"_J_"^") S DR(2,399.0304)=".01;1;I $D(IBIP),X<$P(IBIP,""^"",2)!($P(IBIP,""^"",6)&(X>$P(IBIP,""^"",6))) K X"
	; I "^64^"[("^"_J_"^") S DR(2,399.042)=".01:.03;"
	; I $T(@J) S DGDRD=$P($T(@J),";;",2) D S S K=(J*10) I $T(@K) S DGDRD=$P($T(@K),";;",2) D S
	; D ^IBCSCE1:("^31^")[("^"_J_"^") Q
	; W1 I @DGDRS["^2^DPT(^^D SET^IBCSCE;" D ^IBCSCE1 Q
	; S DGDRD="^2^DPT(^^D SET^IBCSCE;" D S,^IBCSCE1 Q
	; S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
	; S DGCT=DGCT+1,DGDRS="DR(1,399,"_DGCT_")",@DGDRS=DGDRD Q
	; Q
16	;;110;
17	;;.18;
31	;;.07;S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:313);@313;^2^DPT(^^D SET^IBCSCE;D UPDT^IBCSCE;@312;
310	;;101;102;103;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;
32	;;104;105;106;121;107;108;109
41	;;160;159;158;
42	;;162;
43	;;I IBPTF S Y="@943";64;65;66;67;68;S Y="@43";@943;D DX^IBCSC4B;@43;
44	;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;D PRO^IBCSC4B;S IBASKCOD=1
45	;;41;
46	;;40;
51	;;.03;
999	;;64;65;66;67;68;
52	;;64;S:X="" Y="@99";65;S:X="" Y="@99";66;S:X="" Y="@99";67;S:X="" Y="@99";68;@99;
53	;;;;same as 74
54	;;S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBASKCOD=1
55	;;41;
56	;;40;
61	;;.06;164;
62	;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@62";153;@62;
63	;;151;152;
64	;;161;165;
65	;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@65";210;@65;
71	;;.06;164;
72	;;155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@72";153;@72;
73	;;151;152;
74	;;S:$D(IBOUT) Y="@999";43;@999;K IBOUT;
75	;;D RCD^IBCU1;42;202;S:'X Y=201;203;201;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@75";210;@75;
81	;;208;
82	;;204;
83	;;205;
84	;;206;
85	;;207;
86	;;163;
	; AD S X=$S($D(^DPT(DA,.11)):^(.11),1:""),IBPHO=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(IBADD)):^(IBADD),1:""),^(IBADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_IBPHO_U_$P(Y,U,10) K IBADD,IBPHO Q
	; SET S I(0,0)=D0,Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),X=$P(Y(1),"^",2),D(0)=X,X=$S(D(0)>0:D(0),1:"") Q
	;called by screen 3 (input template)
UPDT	F IBDD=0:0 S IBDD=$O(^DPT(DFN,.312,IBDD)) Q:IBDD'>0  S IBI1=^DPT(DFN,.312,IBDD,0) I $D(^DIC(36,+IBI1,0)),$P(^(0),"^",2)'="N" S IBDD(+IBI1)=IBI1
	F IBAIC=0:0 S IBAIC=$O(^DGCR(399,IBIFN,"AIC",IBAIC)) Q:IBAIC'>0  I $D(IBDD(IBAIC)) F IBI1="I1","I2","I3" I $D(^DGCR(399,IBIFN,IBI1)),+^(IBI1)=IBAIC,^(IBI1)'=IBDD(IBAIC) S ^DGCR(399,IBIFN,IBI1)=IBDD(IBAIC)
	K IBAIC,IBDD,IBI1 Q
	;IBCSCE

IBCSCE1
IBCSCE1	;ALB/MRL,MJB - MCCR SCREEN EDITS  ;07 JUN 88 14:35
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCE1
	;
	S:'$D(DR(2,2)) DR(2,2)="" S:'$D(DGDRS1) DGDRS1="DR(2,2)" S:'$D(IB1) IB1=0 S:'$D(DGCT1) DGCT1=0 S DGDRD=$P($T(@J),";;",2) D S S K=(J*10) I $T(@K) S DGDRD=$P($T(@K),";;",2) D S
	I +J=31 S DR(3,2.312)=".01;1;2;15;8;3;6;S IBADI=X;17//^S X=$S(IBADI=""v"":$P(VADM(1),""^"",1),1:"""");16//^S X=$S(IBADI=""v"":""01"",1:"""");"
	Q
S	I $L(@DGDRS1)+$L(DGDRD)<241 S @DGDRS1=@DGDRS1_DGDRD Q
	S DGCT1=DGCT1+1,DGDRS1="DR(2,2,"_DGCT1_")",@DGDRS1=DGDRD Q
	Q
11	;;.03;
12	;;1;
13	;;.02;.05;
14	;;1901;.361;
15	;;.111;S:X="" Y=.114;.112;S:X="" Y=.114;.113:.117;.131;.12105;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,*7,"But I need a Start Date for this Temporary Address." S Y=.12105;
150	;;.1218;.1211;I X']"" W !?4,*7,"But I need at least one line of a Temporary address." S Y=.12105;.1212;S:X']"" Y=.1214;.1213;.1214;.1215;.1216;.1219;@15;K DIE("NO^");
21	;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3119;@41;
22	;;.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.258;@42;
31	;;.3121;
AD	S X=$S($D(^DPT(DA,.11)):^(.11),1:""),IBPHO=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(IBADD)):^(IBADD),1:""),^(IBADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_IBPHO_U_$P(Y,U,10) K IBADD,IBPHO Q
SET	S I(0,0)=D0,Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),X=$P(Y(1),"^",2),D(0)=X,X=$S(D(0)>0:D(0),1:"") Q
	;IBCSCE1

IBCSCH
IBCSCH	;ALB/MJB - MCCR HELP ROUTINE  ;03 JUN 88 15:25
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCH
	;
	S IBH="" D ^IBCSCU,H^IBCSCU K IBH W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
	W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
	W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those",!,"enclosed in arrows ""<>"" are not."
M	G:$D(IBPAR) M1 S Z="DATA GROUPS ON SCREEN "_+IBSR W !! X IBWW D @(IBSR1_IBSR) D W D S W ! F I=$Y:1:20 W !
	S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR R X:DTIME Q
M1	S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
	S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN" R X:DTIME Q
1	S X="DOB^Alias Name^Sex, Marital Status^Veteran Status, Eligibility^Address, Temporary Address^Patient Short Billing Address^SC at Time of Care" Q
2	S X="Patient Employer Name, Address^Spouse Employer Name, Address" Q
3	S X="Payer Information^Provider Numbers^Mailing Address" Q
4	S X="Admission Information^Discharge Information^Diagnosis Code(s)^Coding Method, Inpt. Pro. Code(s)^Occurrence Code(s)^Condition Code(s)^Value Code(s)" Q
5	S X="Event Date^Outpatient Diagnosis^Outpatient Visits^Coding Method, Opt. Pro. Code(s)^Occurrence Code(s)^Condtion Code(s)" Q
6	S X="Bill/Rate Type, Covered and Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Bedsection, Length of Stay^Revenue Code(s), Offset, Total" Q
7	S X="Bill/Rate Type, Covered and Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Outpatient Visits^Revenue Code(s), Offset, Total" Q
8	S X="Bill Remark^Form Locator 2^Form Locator 9^Form Locator 27^Form Locator 45^Form Locator 92^Form Locator 93^Tx Auth. Code" Q
28	S X="Bill Remark, Tx Auth. Code, Admitting Diagnosis^Attending Physician Id., Other Physician Id.^Form Locator 2 and 11^Form Locator 31 and 377^Form Locator 56, 57, and 78" Q
H8	S X="Period Unable to Work^Block 31^Tx/Prior Auth. Code" Q
PAR	S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
S	W !! S Z="AVAILABLE SCREENS" X IBWW
	S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific"
	S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
	Q
W	F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
	W:'(I-1)#2 ! Q
	;IBCSCH

IBCSCH1
IBCSCH1	;ALB/MRL - BILLING HELPS (CONTINUED)  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCH1
	;
1	W !!,"DO YOU WISH TO ADD/EDIT INSURANCE COMPANY DATA FOR THIS PATIENT" S %=2 D YN^DICN S IBADI=$S(%=1!(%=-1):%,1:0)
	I '% W !!?4,"YES - And I'll prompt you so that you may add insurance data to the PATIENT",!?9,"file for this patient.",!?4,"NO  - To bypass this editing of the PATIENT file." G 1
	Q
	;
2	W !!,"If you updated insurance information for any policy which is already specified",!,"as either a PRIMARY, SECONDARY or TERIARY for this billing episode, you will"
	W !,"need to press the <RETURN> key through the following prompts in order to insure",!,"that these new values are properly stored.  If you fail to do so, i.e.,"
	W !,"enter an up-arrow, the new values will not be stored as part of this billing",!,"record." Q
3	I '$D(IBIFN),$D(DA) S IBIFN=DA
	W:$P(^DGCR(399,IBIFN,0),"^",5)<3 !!?4," - Enter the alphanumeric designation of your choice from",!?7,"the display (e.g. 'A1') to input one of the codes shown",!?7,"above into this billing record."
	I $P(^IBE(350.9,1,1),U,15)'=1 G 4
	S DGCODMET=$P(^DGCR(399,IBIFN,0),"^",9),DGCODMET=$S(DGCODMET=9:"ICD",DGCODMET="":"",1:"CPT")
	W !!?4," - Enter the name or code number of an ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODE",!?7,"not displayed above to input a ",$S($D(IBPY):"DIAGNOSIS",1:"PROCEDURE")," code"
	I $P(^DGCR(399,IBIFN,0),"^",5)>2 W "." G 4
	W " not found",!?7,"in the PTF record into this billing record, or '??' for ",!?7,"a list of all ",$S($D(IBPY):"ICD DIAGNOSIS ",1:DGCODMET_" PROCEDURE "),"CODES."
4	W !!?4," - Enter <RETURN> to accept the default ",$S($D(IBPY):"DIAGNOSIS ",1:"PROCEDURE "),"code, or",!?7,"'^' to abort.",!!
	K DGCODMET Q

IBCSCP
IBCSCP	;ALB/MRL - BILLING SCREEN PROCESSOR  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCP
	;
	D Q1 W !
	S IBCSCPP=$S($L(IBV1)>1:"1-"_$L(IBV1),1:1)
	F I=$Y:1:20 W !
	W "<RET> to ",$S(+IBSR<8:"CONTINUE",1:"QUIT") W:'IBV ", ",IBCSCPP," to EDIT," W " '^N' for screen N, or '^' to QUIT: " R IBSCNN:DTIME G Q:'$T I IBSCNN="" S X1=2 G NOMO
	G AN:IBSCNN?1"^"1N.N,Q:IBSCNN?1"^".E I IBSCNN'?1N.E D ^IBCSCH S X=IBSR,X1=2 G NOMO2
	I IBSCNN?1N1"-"1N S IBDR20=IBSCNN,IBSCNN="" F I=+IBDR20:1:$P(IBDR20,"-",2) S IBSCNN=IBSCNN_I_","
	S IBDR20="" F J=1:1 S I=$P(IBSCNN,",",J) Q:I=""!($L(I)>3)  I I<10 S:I'["-"&(IBDR20'[I_",") IBDR20=IBDR20_I_"," I I["-" S I1=$P(I,"-",1),I2=$P(I,"-",2) F I3=I1:1:I2 S IBDR20=IBDR20_I3_"," I I3>10 Q
	S DGDR1="" F J=1:1 S I=$P(IBDR20,",",J) Q:I=""  I '$E(IBV1,I) S DGDR1=DGDR1_(I+(IBSR*10))_","
	I DGDR1']"" D ^IBCSCH S X=IBSR,X1=2 G NOMO2
	S IBDR20=DGDR1 D ^IBCSCE S X=IBSR,X1=2 G NOMO2
Q	K IBSR,IBVV,VADM,IBVI,IBVO
Q1	K %DT,C,DGA,DGA1,DGA2,DGAD,DGCC,IBSCNN,IBCSCPP,IBDR20,DGDR1,DGST,DGAAC,DGRCD,IBCPTX
	K IBA,IBCPT,IBREVC,IBYN,IBZZ,IBABRT,IB,IBDD,IBIDS,IBIR,IBIRN,IBISEX,IBIUTL,IBU,IBUN,IBW,IBWW,DGPT,IBICD,IBHC,IBCC,IBDI,IBDIN,IBDPT
	K DIC,DIWF,DIWL,I,I1,I2,I3,J,X,X1,X2,X3,Y,Z,Z1,Z2 Q
	Q
NOMO	S I=IBSR,J=1 I +IBSR=8 S X=IBSR G NOMO2
NOMO1	S I=I+1,J=+$E(IBVV,I),X=I G NOMO2:+X=8 I J G NOMO1
NOMO2	S:+IBSR=8&(IBSCNN="") X1=3 S X=$P($T(@(IBSR1_X)),";;",X1) G @X
	Q
	;
AN	S X=+$E(IBSCNN,2,99),X1=$P($T(@X),";;",2) I X1]"",'$E(IBVV,X) S IBSR1="",X1=2 G NOMO2
	S Z="INVALID SCREEN NUMBER...VALID SCREENS ARE " F I=1:1:8 I '$E(IBVV,I) S Z=Z_I_$S(I<8:",",1:".")
	W !,*7 D W H 1 S X=IBSR,X1=2 G NOMO2
W	;I IOST="C-QUME",$L(IBVI)'=2 W Z
	W IBVI,Z,IBVO
	Q
1	;;^IBCSC1;;^IBCSC2
2	;;^IBCSC2;;^IBCSC3
3	;;^IBCSC3;;^IBCSC4
4	;;^IBCSC4;;^IBCSC5
5	;;^IBCSC5;;^IBCSC6
6	;;^IBCSC6;;^IBCSC7
7	;;^IBCSC7;;^IBCSC8
8	;;^IBCSC8;;Q^IBCSCP
28	;;^IBCSC82;;Q^IBCSCP
H8	;;^IBCSC8H;;Q^IBCSCP
PAR	;;^IBCPAR;;^IBCPAR
	;IBCSCP

IBCSCU
IBCSCU	;ALB/MJB - MCCR SCREEN UTILITY ROUTINE  ;27 MAY 88 11:09
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRSCU
	;
	S IBW=1,IBU="UNSPECIFIED",IBUN=IBU_" [NOT REQUIRED]",IBV=$S($D(IBV):IBV,1:1) D HOME^%ZIS
	;S IBWW1="X ""F Z2=1:1:(Z1-$L(Z)) S Z=Z_"""" """""" W Z Q"
	S (IBVO,IBVI)="" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M
	;
	I $D(IOST(0)) S X="IOINHI;IOINLOW;IOINORM" D ENDR^%ZISS
	I $L(IOINHI),$L(IOINLOW) S IBVI=IOINHI,IBVO=$S(IOINORM]"":IOINORM,1:IBINLOW)
	D KILL^%ZISS
	;I $D(^%ZIS(2,IOST(0),7)) S I=^(7) I $L($P(I,"^",1)),$L($P(I,"^",2)) S IBVI=$P(I,"^",1),IBVO=$S($P(I,"^",3)]"":$P(I,"^",3),1:$P(I,"^",2))
	;
M	;I $L(IBVI_IBVO)>4 S X=80 X ^%ZOSF("RM")
	S IBWW="W:IBW ! S Z=$S(IBV:""<""_Z_"">"",$E(IBV1,Z):""<""_Z_"">"",1:""[""_Z_""]"") W:$E(Z)=""["" IBVI,Z,IBVO W:$E(Z)'=""["" Z Q"
	;S IBWW="W:IBW ! S Z=$S(IOST=""C-QUME""&($L(IBVI)'=2):Z,IBV:""<""_Z_"">"",$E(IBV1,Z):""<""_Z_"">"",1:""[""_Z_""]"") W:$E(Z)=""["" @IBVI,Z,@IBVO W:$E(Z)'=""["" Z Q"
	I $D(IBPAR) S IBV=0,IBVV="00000" Q
	S IBBNO=$P(^DGCR(399,IBIFN,0),"^",1)
	S IBVV=$S($P(^DGCR(399,IBIFN,0),"^",5)>2:"00010100",1:"00001010"),X="63266556"
	Q
H	;Screen Header
	S L="",$P(L,"=",80)=""
	I $D(IBH) S X="HELP SCREEN" W @IOF,!?(40-($L(X)\2)),IBVI,X,IBVO,!,L G HQ
	S X=$P("DEMOGRAPHIC^EMPLOYMENT^PAYER^EVENT - INPATIENT^EVENT - OUTPATIENT^BILLING - GENERAL^BILLING - GENERAL^BILLING - SPECIFIC","^",IBSR)_" INFORMATION",X1="SCREEN <"_+IBSR_">"
	S DGINPT=$S(($P(^DGCR(399,IBIFN,0),"^",5)<3):"Inpatient",1:"Outpatient")
	W @IOF,!,VADM(1),"   ",$P(VADM(2),"^",2),"   BILL#: ",IBBNO_" - "_DGINPT,?(79-$L(X1)),X1
	W !,L
	W !?(40-($L(X)\2)),IBVI,X,IBVO
HQ	K L,DGINPT Q
	;
A	;Format Address(es)
	N Y F I=IBA1:1:IBA1+2 I $P(IB(IBAD),U,I)]"" S IBA(IBA2)=$P(IB(IBAD),U,I),IBA2=IBA2+2
	I IBA2=1 S IBA(1)="STREET ADDRESS UNKNOWN",IBA2=IBA2+2
	S J=$S($D(^DIC(5,+$P(IB(IBAD),U,IBA1+4),0)):$P(^(0),U,2),1:""),J(1)=$P(IB(IBAD),U,IBA1+3),J(2)=$P(IB(IBAD),U,IBA1+11),IBA(IBA2)=$S(J(1)]""&(J]""):J(1)_", "_J,J(1)]"":J(1),J]"":J,1:"CITY/STATE UNKNOWN")
	S Y=$S(IBAD=.11!(IBAD=.121):$P(IB(IBAD),U,IBA1+11),IBAD=.25:$P($G(^DPT(+$G(DFN),.22)),U,6),IBAD=.311:$P($G(^DPT(+$G(DFN),.22)),U,5),1:"") D ZIPOUT^VAFADDR
	S IBA(IBA2)=IBA(IBA2)_" "_Y F I=0:0 S I=$O(IBA(I)) Q:I=""  S IBA(I)=$E(IBA(I),1,25)
	K IBA1,I,J Q

IBCU
IBCU	;ALB/MRL - BILLING UTILITY ROUTINE  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU
	;
ARSTAT	;find status of bill in file 430.3 (ar) return status number
	S IBARST=$$STA^PRCAFN(IBIFN)
	Q
	;
ARCAT	;Trigger logic to set who's responsible in 399.3 from AR Category
	S X=$P($$CATN^PRCAFN($P(^DGCR(399.3,DA,0),"^",6)),"^",3)
	S:X'="" X=$S("PC"[X:"p",X="N":"o",X="T":"i",1:"")
	Q
	;
PTF	;Screen for appropriate PTF records
	K IBDD1 S DFN=+$P(^DGCR(399,+DA,0),"^",2) Q:'$D(^DPT(+DFN,0))  S IB05=$P(^(0),"^",1),IB03=$P(^DGCR(399,+DA,0),"^",3)
	S IB01="",IB02=0 F IB02=0:0 S IB01=$O(^DD(45,0,"ID",IB01)) Q:'IB01  S IB02=IB02+1,IBDD(IB02)=^(IB01)
	F IB01=0:0 S IB01=$O(^DGPT("B",+DFN,IB01)) Q:'IB01  I $D(^DGPT(+IB01,0)) S IB04=$P(^(0),"^",2),Y=+IB01 I $P(IB03,".",1)=$P(IB04,".",1) S IBDD1(+Y)="" I $S('$D(X):0,X["?":1,1:0) D PTFW
	G PTFQ:X'["?" I '$O(IBDD1(0)) W !,"Patient has no ACTIVE PTF RECORDS for this event date.",!,"A 'PTF NUMBER' is required for inpatient billing records."
	E  W !!,"Select the appropriate billing record from the above listing by number."
PTFQ	W ! K IB01,IB02,IB03,IB04,IB05,IBDD Q
PTFW	W !,Y,?15,IB05 F IB02=0:0 S IB02=$O(IBDD(IB02)) Q:'IB02  X IBDD(IB02)
	Q
	;
AGE	;Input Transform for Condition Code 17
	I X=18 G SEX
	I X=17 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I VADM(4)<100 W !!,"This patient is only ",VADM(4)," years old!!",!! K IBC Q
	I $D(IBC) S X=IBC
	Q
	;
SEX	;Input Transform for Condition Code 18
	I X=18 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I $E(VADM(5))="M" W !!,"This patient is a MALE!! Condition code 18 applies only to FEMALES!!",!! K IBC,X
	I $D(IBC) S X=IBC
	Q
	;
REV	;Input Transform for Revenue Code
	I X=-1 W !!,"Choose only ACTIVE Revenue Codes!!",!! S D="AC" ;S X="" S X=$O(^DGCR(399.2,"AC",X)) Q:X=""  W !,$P(^DGCR(399.2,X,0),"^",1),?30,$P(^(0),"^",2) K X Q
	I '$D(IBC) I $D(^DGCR(399.2,X,0)) I '$P(^DGCR(399.2,X,0),"^",3) W !!,"Only ACTIVE Revenue Codes may be selected!!",!! K X Q
	Q
	;
YN	S X=$E(X),X=$S(X=1:X,X=0:X,X="Y":1,X="y":1,X="n":0,X="N":0,1:2) I X'=2 W "  (",$S(X:"YES",1:"NO"),")" Q
	W !?4,"NOT A VALID CHOICE!",*7 K X Q
	Q
	;
DIS	;Determine Billing Discharge status from PTF
	;Called from triggers on fields .08 and 161
	N A
	I '$D(^DGCR(399,DA,0)) S X="" G DISQ
	S X=$P(^DGCR(399,DA,0),"^",6) I X=2!(X=3) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
	S X=$P(^DGCR(399,DA,0),"^",8) I $S(X="":1,'$D(^DGPT(X)):1,1:0) S X="" G DISQ
	I '+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
	S A=$P($G(^DGCR(399,DA,"U")),"^",2) I A,(A+.24)<+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
	S X=+$P($G(^DGPT(X,70)),"^",3)
	I X=1 S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO HOME OR SELF CARE",1,30),0)) G DISQ
	I X=4 S X=$O(^DGCR(399.1,"B",$E("LEFT AGAINST MEDICAL ADVICE",1,30),0)) G DISQ
	I X=6!(X=7) S X=$O(^DGCR(399.1,"B","EXPIRED",0)) G DISQ
	I X=5!(X=2) S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO ANOTHER SHORT-TERM GENERAL HOSPITAL",1,30),0)) G DISQ
	S X=""
DISQ	Q
	;
INST	;Ask Institutution address info
	S DIC("DR")="1.01;1.02;1.03;.02;1.04" I $D(^XUSEC("IB SUPERVISOR",DUZ)) S DLAYGO=4
	Q
	;
SM	;Flag for printing medicare statment on UB-82
	;DGSM=0 means figure out which statement, DGSM=1 means no statements
	S DGSM=0 Q
	;IBCU

IBCU1
IBCU1	;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED)  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU1
	;
	;procedure doesn't appear to be used (6/4/93), if it is used, what for??
	;where would multiple provider numbers comde from?  ARH
	;BCH    ;Blue Cross/Shield Help
	W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
	I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
	W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
	;
RCD	;Revenue Code Display
	Q:'$D(^DGCR(399,IBIFN,"RC"))
	W @IOF,!,"Revenue Code Listing"
	S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
	I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
	Q
DISRC	W !?4,DGIFN,?8,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,20),?35,"Units = ",$P(Z,"^",3),?46 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X I $P(Z,"^",5),$D(^DGCR(399.1,$P(Z,"^",5),0)) W ?59,$E($P(^(0),"^"),1,20)
	Q
	;
ORDNXT(IFN)	;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
	;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
	;used for the default print order so that dx's can be printed in order of entry without any input by the user,
	;3 is added to allow spaces for additions, changes, moves
	N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
	Q X
	;
ORDDUP(ORD,DIFN)	;returns true if print order ORD is already defined for a bill (not same entry)
	N IBX,IBY S IBY=0
	I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
	Q IBY
	;
DXDUP(DX,DIFN,IFN)	;returns true if DX is already defined for a bill (not same entry)
	;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
	N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
	I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
	Q IBY
	;
DXBSTAT(DIFN,IFN)	;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
	N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
	S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
	Q IBY

IBCU2
IBCU2	;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED)  ;01 JUN 88 12:00
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU2
	;
TC	D TCL F DGJ=0:0 S DGJ=$O(^DD(399,201,1,DGJ)) Q:'DGJ  I $D(^DD(399,201,1,DGJ,DGXRF)) S DA=DGI(1),X=DGTCX1 X ^(DGXRF)
	S DA=DGI,DA(1)=DGI(1),X=DGTCX,$P(^DGCR(399,DA(1),"U1"),"^",12)="" K DGI,DGJ,DGXRF,DGTCX,DGTCX1,DGTCX2 Q
TCL	S (DGTCX,DGTCX2)=0 F DGTCX1=0:0 S DGTCX1=$O(^DGCR(399,DA(1),"RC",DGTCX1)) Q:'DGTCX1  I $D(^DGCR(399,DA(1),"RC",DGTCX1,0)),DGTCX1'=DA S DGTCX=DGTCX+$P(^(0),"^",4)
	I DGXRF=1 S DGTCX1=DGTCX+X
	E  S DGTCX1=DGTCX
	S $P(^DGCR(399,DA(1),"U1"),"^",1)=DGTCX1,$P(^("U1"),"^",10)=DGTCX1,DGI=DA,DGI(1)=DA(1),DGTCX=X Q
	;
TC1	F DGJ1=0:0 S DGJ1=$O(^DD(399.042,.04,1,DGJ1)) Q:'DGJ1  I $D(^DD(399.042,.04,1,DGJ1,DGXRF1)) S X=DGTCX11 X ^(DGXRF1)
	S X=DGTCX11 K DGJ1,DGXRF11,DGTCX11 Q
	;
FY	S DGTCX1=$S($D(^DGCR(399,DA,"U1")):^("U1"),1:0) I +X>+DGTCX1 W !?4,*7,"Exceeds 'Total Charges' for this bill." K X Q
	I $P(DGTCX1,"^",11)="" W !?4,*7,"Bill doesn't cross fiscal years...edit revenue codes/from-to dates if",!?4,"appropriate." K X Q
	Q
21	;set logic for CHARGES subfield x-ref (399.042;.02)
	I $P(^DGCR(399,DA(1),"RC",DA,0),"^",3)="" S $P(^DGCR(399,DA(1),"RC",DA,0),"^",3)=$S($P(^DGCR(399,DA(1),0),"^",5)<3:$P(^("U"),"^",15),$D(^DGCR(399,DA(1),"OP",0)):$P(^(0),"^",4),1:1)
	S Z=X,Z1=$P(^DGCR(399,DA(1),"RC",DA,0),"^",3) S DGTCX11=Z*Z1,$P(^(0),"^",4)=DGTCX11,DGXRF1=1 D TC1
	Q
	;
22	;kill logic for CHARGES subfield x-ref (399.042;.02)
	S Z=X,Z1=$P(^DGCR(399,DA(1),"RC",DA,0),"^",3) S DGTCX11=Z*Z1,$P(^(0),"^",4)=DGTCX11,DGXRF1=2 D TC1
	Q
	;
31	;set logic for UNITS OF SERVICE subfield x-ref (399.042;.03)
	S Z=X,Z1=$P(^DGCR(399,DA(1),"RC",DA,0),"^",2) S DGTCX11=Z*Z1,$P(^(0),"^",4)=DGTCX11,DGXRF1=1 D TC1
	Q
	;
32	;kill logic for UNITS OF SERVICE subfield x-ref (399.042;.03)
	S Z=X,Z1=$P(^DGCR(399,DA(1),"RC",DA,0),"^",2) S DGTCX11=Z*Z1,$P(^(0),"^",4)=DGTCX11,DGXRF1=2 D TC1
	Q
	;
FMDATES()	; ask for date range
	N %DT,X,Y,DT1,DT2  S DT1=""
	S %DT="AEX",%DT("A")="START WITH DATE ENTERED: " D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FMDQ
	S (%DT(0),DT2)=$P(Y,".",1) I DT2'>DT S %DT("B")="TODAY"
	S %DT="AEX",%DT("A")="GO TO DATE ENTERED: " D ^%DT K %DT I Y<0!($P(Y,".",1)'?7N) G FMDQ
	S DT1=DT2_"^"_$P(Y,".",1)
FMDQ	Q DT1

IBCU3
IBCU3	;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED)  ;12-FEB-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU3
SC(DFN)	; returns 1 if service connection indicated, 0 otherwise (based on VAEL(3))
	N X,Y S (X,Y)=0 I '$G(DFN) G SCE
	I '$D(VAEL(3)) D ELIG^VADPT S Y=1
	S X=+VAEL(3) I Y K VAEL,VAERR
SCE	Q X
	;
APPT(DATE,DFN,DISP)	;Check date to see if patient has Sched. Appt., add/edit or Registration
	;input:   DATE - required, date to check for appointments
	;         DFN  - required, patient to check for appointments on date
	;         DISP - if true then error message will be printed before exit, if any
	;returns: 1 - if a scheduled visit date was found
	;         2 - if unscheduled/add/edit visit found
	;         3 - disposition found
	;         "0^error message" if no valid visit date found
	;
	N Y,X,X1,X2 S DATE=$P(DATE,".",1),Y="0^* Patient has no Visits for this date..."
	I 'DATE!'$D(^DPT(DFN,0)) S Y="0^Unable to check for appointments on this date!" G APPTE
	S X=DATE,X1=DATE+.9 F  S X=$O(^DPT(DFN,"S",X)) Q:'X!(X>X1)  I $P(^(X,0),"^",2)="" S Y=1
	I $D(^SDV("ADT",DFN,DATE)) S Y=2 G APPTE ; unscheduled appointments
	I $D(^DPT(DFN,"DIS"))>9 S X=(9999999-(DATE+.000001)\1),X1=X+.9 F  S X=$O(^DPT(DFN,"DIS",X)) Q:'X!(X>X1)  S X2=^(X,0) I $P(X2,".",1)=DATE,$P(X2,U,2)<2 S Y=3
APPTE	I +$G(DISP),'Y W !,?10,*7,$P(Y,U,2)
	Q Y
	;
BDT(DFN,DATE)	; returns primary bill defined for an event date, "" if none
	N X,Y S X="" I '$O(^DGCR(399,"C",+$G(DFN),0))!'$G(DATE) G BDTE
	S Y="",DATE=9999999-DATE F  S Y=$O(^DGCR(399,"APDT",+DFN,Y)) Q:'Y  D
	. I $O(^DGCR(399,"APDT",+DFN,Y,0))=DATE,'$P($G(^DGCR(399,Y,"S")),U,16) S X=$P($G(^DGCR(399,Y,0)),U,17) Q
BDTE	Q X
	;
BILLED(PTF)	;returns bill "IFN^^rate group" if PTF record is already associated with an uncancelled final bill
	;returns "bill IFN ^ bill date (stm to) ^ bill rate group" if inpatients interim with no final bill, 0 otherwise
	N IFN,Y,X S Y=0 I '$D(^DGCR(399,"APTF",+$G(PTF))) G BILLEDQ
	S IFN=0 F  S IFN=$O(^DGCR(399,"APTF",PTF,IFN)) Q:'IFN  D  I +Y,'$P(Y,U,2) Q
	. S X=$G(^DGCR(399,IFN,0)) I $P(X,U,13)=7 Q  ; bill cancelled
	. S Y=IFN_"^^"_$P(X,U,7) I $P(X,U,6)=2!($P(X,U,6)=3) S Y=IFN_"^"_$P($G(^DGCR(399,IFN,"U")),U,2)_"^"_$P(X,U,7)
BILLEDQ	Q Y
	;
FTN(FT)	;returns name of the form type passed in, "" if not defined
	N X S X=$P($G(^IBE(353,+$G(FT),0)),U,1)
	Q X
	;
FT(IFN)	;return a bills form type, based on current (399,.19), default (350.9,1.26), and ins co (36,.14) form types
	N X,Y,FTC,FTN,FTD,FTI,INS S X="",IFN=+$G(IFN),Y=$G(^DGCR(399,IFN,0)),FTC=$P(Y,U,19)
	I +FTC,$E($$FTN(FTC),1,3)'="UB-" S X=FTC G FTQ ; not a UB bill, don't change
	; otherwise use the ins co default, then site's default, then current, then UB-82
	S INS=+$G(^DGCR(399,IFN,"M")),FTD=$P($G(^IBE(350.9,1,1)),U,26),FTI=$P($G(^DIC(36,+INS,0)),U,14)
	I 'FTC S X=$S(+FTI:FTI,+FTD:FTD,1:1) G FTQ
	I $E($$FTN(FTI),1,2)="UB" S X=FTI
	I 'X,$E($$FTN(FTD),1,2)="UB" S X=FTD
	I 'X S X=FTC I 'X S X=1
FTQ	Q X
	;
FNT(FTN)	;returns the ifn of the form type name passed in, must be exact match, 0 if none found
	N X,Y S X=0 I $G(FTN)'="" S X=$O(^IBE(353,"B",FTN,0))
	Q X
	;
BILLDEV(IFN,PRT)	;returns the default device for a bill's form type, if PRT is passed as true then returns the AR follow up device, otherwise the billing device
	N X,Y S X=0 I $D(^DGCR(399,+$G(IFN),0)) S PRT=$S(+$G(PRT):3,1:2),Y=$$FT(IFN),X=$P($G(^IBE(353,+Y,0)),U,PRT)
	Q X
	;
RXDUP(RX,DATE,IFN,DISP,DFN,RTG)	;returns bill ifn if rx # exists on another bill
	;input:  rx # - required, rx # to check for
	;        date - required, date of refill
	;ifn, dfn, rtg are optional - if not passed then not used to specify rx
	;(if ifn not passed then returns true if on any bill same or dfn and rtgetc.)
	;if ifn passed the dfn and rtg do not need to be
	N X,LN,RIFN,BIFN,RLN,BLN S (RIFN,X)=0,DATE=$G(DATE),RX=$G(RX),IFN=$G(IFN) I RX=""!('DATE) G RXDUPE
	S LN=$G(^DGCR(399,+IFN,0)),DFN=$S(+$G(DFN):DFN,1:+$P(LN,U,2)),RTG=$S(+$G(RTG):RTG,1:+$P(LN,U,7))
	F  S RIFN=$O(^IBA(362.4,"B",RX,RIFN)) Q:'RIFN  S RLN=$G(^IBA(362.4,+RIFN,0)) I +DATE=+$P(RLN,U,3) D  Q:+X
	. S BIFN=+$P(RLN,U,2),BLN=$G(^DGCR(399,BIFN,0)) Q:(BLN="")!(BIFN=+$G(IFN))
	. I $P(BLN,U,13)=7 Q  ; bill cancelled
	. I +DFN,$P(BLN,U,2)'=DFN Q  ; different patient
	. I +RTG,+RTG'=$P(BLN,U,7) Q  ; different rate group
	. S X=BIFN_"^A "_$P($G(^DGCR(399.3,+$P(BLN,U,7),0)),U,1)_" bill ("_$P(BLN,U,1)_") exists for Rx # "_RX_" and refill date "_$$DAT1^IBOUTL(DATE)_"."
RXDUPE	I +$G(DISP),+X W !,?10,$P(X,U,2)
	Q X

IBCU4
IBCU4	;ALB/AAS - BILLING UTILITY ROUTINE (CONTINUED)  ;12-FEB-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU4
	;
DDAT	;Input transform for Statement Covers From field
	I '$D(DA) G TO
	S IB00=+$P(^DGCR(399,+DA,0),"^",3) I +X<$P(IB00,".",1) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X G DDAT4
	I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X G DDAT4
	D PROCDT
	I DGPRDTB,X>DGPRDTB K X W !?4,"Can't be greater than date of specified Procedures!",*7 G DDAT4
	G DDAT4
DDAT1	;Input transform for Satement covers to
	I '$D(DA) G FROM
	S IB00=$S($D(^DGCR(399,+DA,"U")):$P(^("U"),"^",1),1:"") I 'IB00 W !?4,"'Start Date' must be specified first!",*7 K X G DDAT4
	I +X<IB00 W !?4,"Cannot preceed the 'Start Date'!",*7 K X G DDAT4
	I $S($E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 G DDAT4
	I $E(IB00,1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 G DDAT4
	D PROCDT
	I DGPRDTE,X<DGPRDTE K X W !?4,"Can't be less than date of specified Procedures!",*7 G DDAT4
	G DDAT4
	;
	;DDAT2   ;Input transform for OP VISITS DATE(S) field  REPLACED WITH IBCU41 6/15/93
	;S IB00=$G(^DGCR(399,IBIFN,"U")) I $P(IB00,"^",1)']"" W !?4,*7,"No 'Start Date' on file...can't enter OP visit dates..." K X G DDAT4
	;I $P(IB00,"^",2)']"" W !?4,*7,"No 'End Date' on file...can't enter OP visit dates..." K X G DDAT4
	;I X<$P(IB00,"^",1) W !?4,*7,"Can't enter a visit date prior to 'Start Date'..." K X G DDAT4
	;I X>$P(IB00,"^",2) W !?4,*7,"Can't enter a visit date later than 'End Date'..." K X G DDAT4
	;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$D(^DGCR(399,"ASC2",IBIFN)),$O(^DGCR(399,IBIFN,"OP",0)) W !?4,*7,"Only 1 visit date allowed on bills with Amb. Surg. Codes!" K X G DDAT4
	;D APPT^IBCU3,DUPCHK^IBCU3
	G DDAT4
	;
DDAT3	; - x-ref call for to and from dates, REPLACED BY TRIGGERS ON .08, 151, 152 ON 10/18/93
	;if inpatient bill return DGNEWLOS to cause recalc of los in IBSC6
	G DDAT4:'$D(X)
	I $D(^DGCR(399,DA,0)),$P(^(0),"^",5)<3 S DGNEWLOS=1
	S IB00=$S($D(^DGCR(399,+DA,"U")):^("U"),1:"") I IB00']"" K X G DDAT4
	S IB02=$S(+$E(IB00,4,5)<10:$E(IB00,2,3),1:$E(IB00,2,3)+1),IB01=$E(IB00,1)_IB02_"0930",$P(^DGCR(399,DA,"U1"),"^",9)=IB02 ;,$P(^DGCR(399,DA,"U1"),"^",11)=$S($P(IB00,"^",2)>IB01:IB02+1,1:"")
	;I $P(^DGCR(399,DA,"U1"),"^",11)="" S $P(^("U1"),"^",12)=""
	;
DDAT4	K IB00,IB01,IB02,IB03,DGX,DGNOAP,DGJ,DGPROC,DGPRDT,DGPRDTE,DGPRDTB Q
	;
	;
TO	;151 pseudo input x-form
	I +X_.9<IBIDS(.03) W !?4,"Cannot precede the 'EVENT DATE'!",*7 K X Q
	I +X>(DT_".2359") W !?4,"Cannot bill for future treatment!",*7 K X
	Q
FROM	;152 pseudo input x-form
	I '$D(IBIDS(151)) W !?4,"'Start Date' must be specified first!",*7 K X Q
	I +X<IBIDS(151) W !?4,"Cannot preceed the 'Start Date'!",*7 K X Q
	I $S($E(IBIDS(151),4,5)<10:$E(IBIDS(151),2,3),1:$E(IBIDS(151),2,3)+1)'=$S($E(X,4,5)<10:$E(X,2,3),1:$E(X,2,3)+1) K X W !?4,"Must be in same fiscal year!",*7 Q
	I $E(IBIDS(151),1,3)'=$E(X,1,3) K X W !?4,"Must be in same calendar year!",*7 Q
	Q
	;
SPEC	;  - calculate discharge specialty
	;  - input  IBids(.08) = ptf record number
	;  - output IBids(161) = pointer to billing specialty in 399.1
	K IBIDS(161)
	Q:$S('$D(IBIDS(.08)):1,'$D(^DGPT(+IBIDS(.08),70)):1,'$P(^(70),"^",2):1,'$D(^DIC(42.4,+$P(^(70),"^",2),0)):1,1:0)  S IBIDS(161)=$P(^DGPT(IBIDS(.08),70),"^",2)
	S IBIDS(161)=$P($G(^DIC(42.4,+IBIDS(161),0)),"^",5) I IBIDS(161)="" K IBIDS(161) Q
	S IBIDS(161)=$O(^DGCR(399.1,"B",IBIDS(161),0))
	I '$D(^DGCR(399.1,+IBIDS(161),0)) K IBIDS(161)
	Q
	;
PROCDT	;  - find first and last dates of procedures
	;    can't set from and to date inside of this range
	S (DGPRDT,DGPROC,DGPRDTE,DGPRDTB)=0
	F  S DGPROC=$O(^DGCR(399,+DA,"CP",DGPROC)) Q:'DGPROC  S DGPRDT=$P($G(^DGCR(399,+DA,"CP",DGPROC,0)),"^",2) D
	. I DGPRDTB=0!(DGPRDTB>DGPRDT) S DGPRDTB=DGPRDT
	. I DGPRDTE=0!(DGPRDTE<DGPRDT) S DGPRDTE=DGPRDT
	. Q
	Q

IBCU41
IBCU41	;ALB/ARH - THIRD PARTY BILLING UTILITIES (OP VISIT DATES) ; 6-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
OPV(DATE,IFN)	;input transform for outpatient visit dates (399,43,.01)
	;input:  DATE - to add
	;        IFN  - bill to add to
	;returns: 1 - if OK to add
	;         0 - if not
	N X,Y S X=1
	I '$$OPV2(DATE,IFN,1) S X=0
	I '$$OPV1(IFN,1) S X=0
	S Y=$$APPT^IBCU3(DATE,$P($G(^DGCR(399,IFN,0)),U,2),1)
	S Y=$$DUPCHK(DATE,IFN,1)
	Q X
	;
OPV1(IFN,DISP,CNT)	;edit checks for adding visit dates, if any of these fail then no visit date should be added to the bill
	;these are the types of checks that if they fail a message should be displayed to the user
	;does not check date passed in against existing dates, assumes new visit date
	;input:  IFN  - required, internal file number of bill to check
	;        DISP - if true then error messager will be printed, if any
	;        CNT  - number of visit dates user wants to add to bill
	;returns: "1^warning message" - if OK to add more visit dates to the bill
	;         "0^error message" - if no more visit dates should added to the bill
	;
	N X,Y S Y=1 S:$G(CNT)="" CNT=1 S:$G(UN)="" UN=$G(^DGCR(399,+IFN,"U"))
	I '$P(UN,U,1) S Y="0^No 'Statement From' date on file ... Can't enter OP visit dates ..." G OPV1E
	I '$P(UN,U,2) S Y="0^No 'Statement To' date on file ... Can't enter OP visit dates ..." G OPV1E
	G:'$O(^DGCR(399,IFN,"OP",0))&(CNT<2) OPV1E
	I $P($G(^DGCR(399,IFN,"OP",0)),U,4)+CNT>30 S Y="0^Maximum of 30 visit dates allowed per bill!" G OPV1E
	I +$P($G(^DGCR(399,+IFN,0)),U,19)'=2,$D(^DGCR(399,IFN,"CP","ASC")) S Y="0^Only one visit date allowed on bills with Billable Amb. Surg. Codes!" G OPV1E
	;warnings:
	I +Y,+$P($G(^DIC(36,+$G(^DGCR(399,IFN,"M")),0)),U,8) S Y="1^This insurance Company will only accept one visit per bill!" G OPV1E
OPV1E	I +$G(DISP),$P(Y,U,2)'="" W !,?10,$P(Y,U,2)
	Q Y
	;
OPV2(DATE,IFN,DISP,UN)	;edit checks for adding visit dates, if any if these fail then the given date should not be added to the bill
	;these are the types of checks that determine if a particular visit date should be presented to the user for possible addition to the bill
	;does not check date passed in against existing dates, assumes new visit date
	;also being used for Procedure Date (399,304,1) input transform
	;input:  DATE - required, date to check for addition to the bill
	;        IFN  - required, internal file number of bill to check
	;        DISP - if true then error messager will be printed, if any
	;        UN   - the "U" node of the bill, pass if alrady defined in a var
	;returns: "1^warning message" - if date is OK to add to the bill
	;         "0^error message" - if date should not be added to the bill
	;
	N X,Y S Y=1,DATE=$P(DATE,".",1) S:$G(UN)="" UN=$G(^DGCR(399,+IFN,"U"))
	I DATE<+UN S Y="0^Can't enter a visit date prior to the 'Statement From' date ..." G OPV2E
	I DATE>+$P(UN,U,2) S Y="0^Can't enter a visit date later than the 'Statement To' date ..." G OPV2E
OPV2E	I +$G(DISP),$P(Y,U,2)'="" W !,?10,$P(Y,U,2)
	Q Y
	;
DUPCHK(DATE,IFN,DISP,DFN,RTG)	;Check for duplicate billing of opt visit - checks for given visit date on other
	;bills with the same rate type and that have not been cancelled (if not IFN then use DFN and RTG)
	;input:   DATE - visit date to check
	;         IFN - internal file number of bill date is being added to
	;         DISP - true if error message should be printed before exit, if any
	;         DFN - patient'S IFN (required only if IFN is not passed)
	;         RTG - rate group to check for (""), if no rate group (0 passed and/or no IFN) then any bill found for
	;               visit date will cause error message
	;returns: 0 - if another bill was not found with this visit date, patient, and rate type
	;         (dup IFN)_"^error message" - if duplicate date found, same rate group, IFN of other bill w/visit date
	;(initially set up to check for same rate group because MT billing was done on the UB-82 so it was valid to have multiple bills with different rate groups for the same episode)
	N IFN2,Y,X S Y=0,DATE=$P(+$G(DATE),".",1),IFN=+$G(IFN),X=$G(^DGCR(399,IFN,0))
	S DFN=$S(+$G(DFN):$G(DFN),1:$P(X,U,2)),RTG=$S($G(RTG)'="":RTG,1:$P(X,U,7)) G:'DFN DUPCHKE
	I '$D(^DGCR(399,"AOPV",DFN,DATE)) G DUPCHKE
	S IFN2=0 F  S IFN2=$O(^DGCR(399,"AOPV",DFN,DATE,IFN2)) Q:'IFN2  I IFN2'=IFN D  Q:+Y
	. S X=$G(^DGCR(399,IFN2,0)) I $P(X,U,13)=7 Q  ; bill for date cancelled
	. I +RTG,RTG'=$P(X,U,7) Q  ; different rate group
	. S Y=IFN2_"^A "_$P($G(^DGCR(399.3,+$P(X,U,7),0)),U,1)_" bill ("_$P(X,U,1)_") exists for visit date ("_$$DAT1^IBOUTL(DATE)_")."
DUPCHKE	I +$G(DISP),+Y W !,?10,$P(Y,U,2)
	Q Y

IBCU5
IBCU5	;ALB/AAS - MCCR MAILING ADDRESS UTILITY ROUTINE ; 26-FEB-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU5
	;
EN	;Entry from X-REF from who's responsible
	;doesn't set primary insurance field, must be second trigger.
	S X=$P(^DGCR(399,DA,0),"^",11)
	I X="p" D MAILP G ENQ
	I X="o" S DGTAG=$S('$D(^DGCR(399,DA,"M")):"MAILP",'$P(^("M"),"^",11):"MAILP",'$D(^DIC(4,$P(^("M"),"^",11),0)):"MAILP",1:"MAILIN") D @DGTAG G ENQ
	I X="i",$D(^DGCR(399,DA,"M")),+^("M"),$D(^("I1")) D MAILA G ENQ
ENQ	K DGTAG Q
	;
EN1	;Now Trigger of primary insurance policy from who's responsible
	;if only one active policy
	;; old Trigger of primary insurer from who's responsible
	;Only should be called if primary insurer is null (condition of trigger)
	;return ifn of insurer in X
	;
	I $S('$D(IBAC):1,IBAC=6:1,1:0) Q
	;
	S IBINDT=$S($G(IBIDS(151)):IBIDS(151),$P($G(^DGCR(399,DA,"U")),"^"):$P($G(^DGCR(399,DA,"U")),"^"),1:DT)
	D ALL^IBCNS1(DFN,"IBDD",1,IBINDT)
	I $G(IBDD(0))=1 S X=+$O(IBDD(0)) G EN1Q
	;
	;S IBOUTP=1,IBINDT=$S($G(IBIDS(151)):IBIDS(151),$P($G(^DGCR(399,DA,"U")),"^"):$P($G(^DGCR(399,DA,"U")),"^"),1:DT)
	;D ^IBCNS I IBINS S X=IBDD($O(IBDD(0))) S:$O(IBDD(+X)) X="" S X=$S($D(^DIC(36,+X,0)):+X,1:"") G EN1Q
	S X=""
EN1Q	K IBDD,IBINS,IBIN Q
	;
MAILA	;Store Mailing Address for Primary Insurance Carrier (and if not copying  bill or bill not authorized,
	; insert Attending Physican Id [36,.1] into Form Locator 92 [399,213]
	;
	S DA=$S('$D(DA):IBIFN,DA']"":IBIFN,1:DA),IB01=+$G(^DGCR(399,DA,"M"))
	G MAILQ:'$D(^DIC(36,+IB01,0))
	;S IB02=$S($D(^DIC(36,+IB01,.11)):^(.11),1:"")
	;
	S IB02=$$ADD^IBCNADD(DA)
	;
	S $P(^DGCR(399,DA,"M"),"^",4,9)=$E($P($G(^DIC(36,+IB01,0)),"^",1),1,30)_"^"_$P(IB02,"^",1)_"^"_$P(IB02,"^",2)_"^"_$P(IB02,"^",4)_"^"_$P(IB02,"^",5)_"^"_$P(IB02,"^",6)
	;
	; -- if send bill to employer, piece 7 = name
	I $P(IB02,"^",7)'="",+$P(IB02,"^",7)'=$P(IBO2,"^",7) S $P(^DGCR(399,DA,"M"),"^",4)=$P(IB02,"^",7)
	;
	S $P(^DGCR(399,DA,"M1"),U,1)=$P(IB02,U,3)
	I '$D(IBCAN)!($G(IBAC)<3) S $P(^DGCR(399,DA,"U1"),U,13)=$P($G(^DIC(36,+IB01,0)),U,10)
MAILQ	K IB01,IB02,IB03 Q
	;
MAILIN	;Store Mailing Address for Institution
	S DA=$S('$D(DA):IBIFN,DA']"":IBIFN,1:DA),X=$P(^DGCR(399,DA,"M"),"^",11) G:X']"" MAILINQ G:'$D(^DIC(4,X,0)) MAILINQ
	S IB01=^DIC(4,X,0),IB02=$S($D(^(1)):^(1),1:"")
	S $P(^DGCR(399,IBIFN,"M"),"^",4,9)=$P(IB01,U,1)_"^"_$P(IB02,U,1)_"^"_$P(IB02,U,2)_"^"_$P(IB02,U,3)_"^"_$P(IB01,U,2)_"^"_$P(IB02,U,4)
	S $P(^DGCR(399,IBIFN,"M1"),"^",1)=""
MAILINQ	K IB01,IB02,IB03 Q
	;
MAILP	;Store Patient Mailing address
	S DA=$S('$D(DA):IBIFN,DA']"":IBIFN,1:DA)
	N DFN S DFN=$P(^DGCR(399,DA,0),"^",2),VAPA("P")="" D DEM^VADPT,ADD^VADPT
	S DGNAM=$P(VADM(1),",",2)_" "_$P(VADM(1),",",1)
	S DGNAM=$S($E(VADM(5))'="F":"MR.",'$D(^DIC(11,+$P(^DPT(DFN,0),"^",5),0)):"MS.","DMW"[$E(^DIC(11,$P(^DPT(DFN,0),"^",5),0)):"MRS.",1:"MS.")_DGNAM
	S $P(^DGCR(399,DA,"M"),"^",4,9)=DGNAM_"^"_VAPA(1)_"^"_VAPA(2)_"^"_VAPA(4)_"^"_+VAPA(5)_"^"_$P(VAPA(11),U,1)
	S $P(^DGCR(399,DA,"M1"),"^",1)=VAPA(3)
MAILPQ	K VAPA,DGNAM Q
	;
INSUR	;
	Q
DEL	S $P(^DGCR(399,DA,"M"),"^",4,9)="^^^^^",$P(^("M1"),"^",1)=""
	Q

IBCU6
IBCU6	;ALB/AAS - UTILITY ROUTINE TO SET BEDSECTIONS/REVENUE CODES FROM PTF DATA ; 25 MAY 90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU6
	;
%	;setup variables - needs IBifn
	Q:'$D(^DGCR(399,IBIFN,0))  N IBQUIT S IBQUIT=0 K ^UTILITY($J) D GVAR^IBCU61 Q:IBQUIT
	I '$D(DFN) S DFN=$P(^DGCR(399,IBIFN,0),"^",2)
	I IBIDS(.05)<3 S PTF=$P(^DGCR(399,IBIFN,0),"^",8) Q:PTF']""  Q:'$D(^DGPT(PTF,0))  I '$P(^DGPT(PTF,0),"^",6),'$P(^(0),"^",4),'$D(DGPTUPDT) D UPDT^DGPTUTL S DGPTUPDT=""
	S DGADM=IBIDS(.03),DGPMCA=$O(^DGPM("AMV1",DGADM,DFN,0)) ;find corresponding admission
	D:$O(^DGCR(399,IBIFN,"RC",0)) ALL^IBCU61
	;
OPT	;I IBIDS(.05)>2 S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT G END:DGVISCNT<1 D  G END:IBQUIT,3
	;.I $D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63
	;.;I $D(^UTILITY($J,"IB-ASC")) S IBQUIT=1
	I IBIDS(.05)>2 D  G END:(DGVISCNT<1)!IBQUIT,3
	. S DGBILLBS="OUTPATIENT VISIT",DGVISCNT=$S($D(^DGCR(399,IBIFN,"OP",0)):$P(^(0),U,4),1:""),^UTILITY($J,"IB-BS",DGBILLBS)=DGVISCNT ; visit
	. I DGVISCNT>0,$D(^DGCR(399,IBIFN,"CP","ASC",1)) D ^IBCU63 ; basc
	. D SET^IBCSC5A(IBIFN,.IBX) S IBCNT=+$P(IBX,U,2) K IBX I +IBCNT D RX^IBCU63 ; rx refills
	;
1	;build array of movement dates, billable bedsections
	S DGMOVE=0 F DGII=0:0 S DGMOVE=$O(^DGPT(PTF,"M",DGMOVE)) Q:'DGMOVE  D SETU
	;
2	;build array of billable bedsections = los in bedsection
	;start with statement covers from date, end with statement covers to date
	S (DGMVDT,DGMVDTP)=$S($D(IBIDS(151)):IBIDS(151),1:IBIDS(.03)),(DGBS,DGBS1)=""
	S DGMVDT=DGMVDT-.01 F DGII=0:0 S DGMVDT=$O(^UTILITY($J,"IB-PTF",DGMVDT)) Q:'DGMVDT!(DGMVDTP\1>IBIDS(152))  D SETU1 S DGMVDTP=DGMVDT
	;
3	;find revenue codes and set up in file.
	S DGBS=0 I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
	F DGII=0:0 S DGBS=$O(^UTILITY($J,"IB-BS",DGBS)) Q:DGBS']""!(IBQUIT)  S DGBSLOS=^(DGBS),DGBSI=$O(^DGCR(399.1,"B",DGBS,0)) I DGBSI,$D(^DGCR(399.1,DGBSI,0)) D SETREV^IBCU62
	G END
	;
SETU	;utility array of all movements by date, billing bedsection
	;non-billable bs's must be added to array so their days will not be added to a billable bs
	S X=^DGPT(PTF,"M",DGMOVE,0)
	S DGBILLBS=$P($G(^DIC(42.4,+$P(X,U,2),0)),U,5) I DGBILLBS="" S DGBILLBS="UNKNOWN"
	;S DGBILLBS=$S('$P(X,U,2):"UNKNOWN",$D(^DIC(42.4,$P(X,U,2),0)):$P(^(0),U,5),1:"UNKNOWN") Q:DGBILLBS=""
	S ^UTILITY($J,"IB-PTF",$S($P(X,U,10)]"":$P(X,U,10),1:DT),DGBILLBS)=($P(X,U,3)+$P(X,U,4))_"^"_$P(X,U,18)
	Q
	;
SETU1	;determine los - set utility=los
	S DGBS=$O(^UTILITY($J,"IB-PTF",DGMVDT,0)) Q:DGBS="UNKNOWN"  S:DGBS1="" DGBS1=DGBS
	S DGEDT=$S(DGMVDT<IBIDS(152):DGMVDT,1:IBIDS(152)),DGBDT=$S(IBIDS(151)>DGMVDTP:IBIDS(151),1:DGMVDTP)
	S IBTF=$S(IBIDS(152)<(DGMVDT\1):IBIDS(.06),1:1)
	S X=$$LOS^IBCU64(DGBDT,DGEDT,IBTF,DGPMCA) Q:'X
	I $D(DGINPAR),$P(DGINPAR,"^")=0,(DGBS1'=DGBS) Q  ;only one bedsection allowed by ins co
	I IBIDS(.11)="c",(DGBS1'=DGBS) Q
	I $P(^UTILITY($J,"IB-PTF",DGMVDT,DGBS),U,2)=1 Q  ;treatment for sc condition
	S ^UTILITY($J,"IB-BS",DGBS)=+$G(^UTILITY($J,"IB-BS",DGBS))+X
	Q
END	I IBIDS(.11)="c" S IBIDS(.11)="p"
	K ^UTILITY($J),DGMOVE,DGMVDT,DGMVDTP,DGBS,DGBSLOS,DGBSI,DGBILLBS,DGBR,DGREC,DGII,DGJJ,DGKK,DGREVHDR,DGAMNT,DGREV,DGBS1,X,X1,X2,Y,Z,DGINPAR,DR,DIK,DGVISCNT,DGBRN,DGFUNC,DGACTDT,DGRVRCAL,DA,IBIDS,DGREV00
	K DGLL,DGFND,IBND0,IBNDU,DGPMCA,DGADM,DGEDT,DGBDT,DGMVTP,DGMVT,DGDC,DGNEXT,DGX,DGIFN,IBTF,IBCNT,IBCHK
	Q

IBCU61
IBCU61	;ALB/AAS - DELETE ENTRIES IN REVENUE CODE MULT. ; 4-MAY-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU61
	;
ALL	;delete all revenue codes that may have been set up automatically
	;ie = $d(^IB(399.5,"d",code ifn))
	K DA S DA(1)=IBIFN,DA=0 I '$G(IBAUTO) W !,"Removing old Revenue Codes."
	F DGII=0:0 S DA=$O(^DGCR(399,IBIFN,"RC",DA)) Q:DA<1  S X=$G(^DGCR(399,IBIFN,"RC",DA,0)) D
	. ;remove revenue codes pre-defined for automatic use AND revenue codes for BASC charges (are automatically created)
	. I $D(^DGCR(399.5,"D",+$P(X,"^")))!($D(^DGCR(399,"ASC1",+$P(X,U,6),IBIFN)))!(+$P(X,U,8)) W:'$G(IBAUTO) "." D DEL
	Q
DEL	S DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK L ^DGCR(399,IBIFN):1
	Q
	;
GVAR	;I $D(PTF),PTF]"",$D(^DGPT(PTF,0)),'$P(^DGPT(PTF,0),"^",6),$D(DGPTUPDT) D UPDT^DGPTUTL S DGPTUPDT="" ;if open, update ptf record
	S IBND0=$S('$D(^DGCR(399,IBIFN,0)):"",1:^(0))
	S IBNDU=$S('$D(^DGCR(399,IBIFN,"U")):"",1:^("U"))
	I '$D(IBIDS(.03)) S IBIDS(.03)=$P(IBND0,"^",3)
	I '$D(IBIDS(.05)) S IBIDS(.05)=$P(IBND0,"^",5)
	I '$D(IBIDS(.06)) S IBIDS(.06)=$P(IBND0,"^",6)
	I '$D(IBIDS(.11)) S IBIDS(.11)=$P(IBND0,"^",11)
	I '$D(IBIDS(.19)) S IBIDS(.19)=$P(IBND0,"^",19)
	I '$D(IBIDS(151)) S IBIDS(151)=$S(+IBNDU:+IBNDU,1:IBIDS(.03))
	I '$D(IBIDS(152)) S IBIDS(152)=$S(+$P(IBNDU,"^",2):$P(IBNDU,"^",2),1:IBIDS(.03))
	I '$D(IBIDS(101)),IBIDS(.11)="i",$D(^DGCR(399,IBIFN,"M")),+^("M"),$D(^DIC(36,+^("M"),0)) S IBIDS(101)=+^DGCR(399,IBIFN,"M")
	I IBIDS(.11)="i",'$D(IBIDS(101)) S IBQUIT=1 Q
	;I IBIDS(.11)="i" S DGINPAR=$S('$D(^DIC(36,+IBIDS(101),0)):"",1:$P(^(0),"^",6,10))
	I IBIDS(.11)="i" S DGINPAR=$S('$D(^DIC(36,+IBIDS(101),0)):"",1:$P(^(0),"^",6,15))
	;
CAT	;check patient bills to see if cat c. set IBids(.11)="C"
	;I IBIDS(.11)="p",$P(^PRCA(430.2,$P(^DGCR(399.3,$P(^DGCR(399,IBIFN,0),"^",7),0),"^",6),0),"^",6)="C" S IBIDS(.11)="c"
	I IBIDS(.11)="p",$P($$CATN^PRCAFN(+$P(^DGCR(399.3,+$P(^DGCR(399,IBIFN,0),"^",7),0),"^",6)),"^",3)="C" S IBIDS(.11)="c"
	Q

IBCU62
IBCU62	;ALB/AAS - UTILITY ROUTINE TO SET BEDSECTION/REVENUE CODES FROM PTF DATA ; 29-OCT-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU62
	;
SETREV	;find current active revenue codes for bedsection
	S (DGREV,DGBR)=0,DGACTDT=-(IBIDS(151)+.01) K DGFND
	F  S DGACTDT=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT)) Q:'DGACTDT!($D(DGFND))  D
	. F  S DGREV=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT,DGREV)) Q:'DGREV  D
	.. F  S DGBR=$O(^DGCR(399.5,"AIVDT",DGBSI,DGACTDT,DGREV,DGBR)) Q:'DGBR  D CHKREV,STORREV:IBCHK
	Q
CHKREV	;check if billing rate (dgbr) is active, and use with payer.
	S IBCHK=0
	S DGBRN=^DGCR(399.5,DGBR,0) I '$P(DGBRN,"^",5) Q  ;quit if inactive
	I IBIDS(.11)="i",$P(DGINPAR,"^",2)="",+$P(DGBRN,"^",7) Q  ;quit if non-standard rate
	I IBIDS(.11)'="i",+$P(DGBRN,"^",7) Q  ;non-standard rates only for ins.
	S DGREV00="00"_DGREV I IBIDS(.11)="i",$P(DGINPAR,"^",2)]"",$P(DGINPAR,"^",2)'[$E(DGREV00,$L(DGREV00)-2,$L(DGREV00)) Q  ;quit if revenue code not in exception list 
	I $P(DGBRN,U,6)[IBIDS(.11) S:'$D(DGFND) DGFND="" S IBCHK=1 Q
	Q
STORREV	;store revenue code in revenue code file
	S X=$P(^DGCR(399.5,DGBR,0),"^",3),DGAMNT=$P(^(0),"^",4),DA(1)=IBIFN,DIC(0)="L",DIC="^DGCR(399,IBIFN,""RC"",",DGFUNC="Adding"
	I $D(^DGCR(399,IBIFN,"RC","ABS",X,DGBSI)) S DA=$O(^DGCR(399,IBIFN,"RC","ABS",X,DGBSI,0)),DGFUNC="Editing" G EDITREV
	D FILE,WRT
	Q
	;
FILE	;manually file entry, index with ix1^dik to use compiled x-ref
	I '$D(DGREVHDR) D REVHDR
	I IBIDS(.11)="c",IBIDS(.05)<3 S DGBSLOS=1
	L ^DGCR(399,IBIFN):1
	S DA=$P(^DGCR(399,IBIFN,"RC",0),"^",3)
	F DGLL=0:0 S DA=DA+1 Q:'$D(^DGCR(399,IBIFN,"RC",DA,0))
	;S ^DGCR(399,IBIFN,"RC",DA,0)=X_"^"_DGAMNT_"^"_DGBSLOS_"^^"_DGBSI_$S($D(DGPROC)&($D(DGDIV)):"^"_DGPROC_"^"_DGDIV,1:"")
	S ^DGCR(399,IBIFN,"RC",DA,0)=X_"^"_DGAMNT_"^"_DGBSLOS_"^^"_DGBSI_"^"_$G(DGPROC)_"^"_$G(DGDIV)_"^"_1
	S ^DGCR(399,IBIFN,"RC",0)=$P(^DGCR(399,IBIFN,"RC",0),"^",1,2)_"^"_DA_"^"_($P(^DGCR(399,IBIFN,"RC",0),"^",4)+1)
	S DIK="^DGCR(399,"_DA(1)_",""RC""," D IX1^DIK L ^DGCR(399,IBIFN):1
	Q
	;
EDITREV	;edit revenue code data.
	I '$D(DGREVHDR) D REVHDR
	I IBIDS(.11)="c",IBIDS(.05)<3 S DGBSLOS=1
	S DIE=DIC,DA(1)=IBIFN,DR=".02///"_DGAMNT_";.03///"_DGBSLOS_";.05///"_DGBS D ^DIE
	;
WRT	;S Z="00"_$P(^DGCR(399.5,DGBR,0),"^",3) W:'$G(IBAUTO) !,DGFUNC,?12,$E(Z,($L(Z)-2),$L(Z)),?24,DGBSLOS,?31,"$",$J(DGAMNT,8,2),?44,DGBS
	S Z="00"_$P(^DGCR(399.5,DGBR,0),"^",3) W:'$G(IBAUTO) !,DGFUNC,?12,$E(Z,($L(Z)-2),$L(Z)),?24,DGBSLOS,?31,"$",$J(DGAMNT,8,2),?44,DGBS,?65,$P($G(^ICPT(+$G(DGPROC),0)),U,1)
	Q
REVHDR	S DGREVHDR=1 W:'$G(IBAUTO) !,"Updating Revenue Codes",!?10,"REV. CODE",?22,"UNITS",?31,"CHARGE",?44,"BEDSECTION" I $D(DGPROC) W:'$G(IBAUTO) ?65,"PROCEDURE"

IBCU63
IBCU63	;ALB/AAS - BILLING UTILITY TO SET AMB SURG REV CODES ; 20-NOV-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU63
%	; BASC
	Q:IBIDS(.11)'="i"
	K ^UTILITY($J,"IB-ASC")
	S DGRVCOD=$S($P($G(DGINPAR),"^",4):$P(DGINPAR,"^",4),$P($G(^IBE(350.9,1,1)),"^",18):$P(^(1),"^",18),1:"") Q:DGRVCOD=""
	;
BLD	S DGASC=0 F  S DGASC=$O(^DGCR(399,IBIFN,"CP","ASC",1,DGASC)) Q:'DGASC  S DGPROC=$G(^DGCR(399,IBIFN,"CP",DGASC,0)) I DGPROC D
	.S DGDIV=$P(DGPROC,"^",6),DGDAT=$P(DGPROC,"^",2)
	.Q:'DGDIV
	.Q:DGDAT+.9<$$STDATE
	.S:'$D(^UTILITY($J,"IB-ASC",+DGPROC,+DGDAT,+DGDIV)) ^(+DGDIV)=0
	.S ^(+DGDIV)=^UTILITY($J,"IB-ASC",+DGPROC,+DGDAT,+DGDIV)+1
	;
STORREV	;build revenue codes in bill
	I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
	S DGPROC=0 F  S DGPROC=$O(^UTILITY($J,"IB-ASC",DGPROC)) Q:'DGPROC  S DGDAT=0 F  S DGDAT=$O(^UTILITY($J,"IB-ASC",DGPROC,DGDAT)) Q:'DGDAT  S DGDIV=0 F  S DGDIV=$O(^UTILITY($J,"IB-ASC",DGPROC,DGDAT,DGDIV)) Q:'DGDIV  S DGBSLOS=^(DGDIV) D
	.S X=DGDAT_"^"_DGDIV_"^"_DGPROC D ^IBAUTL1 S DGAMNT=Y Q:Y<1
	.S X=DGRVCOD,DGBSI=$O(^DGCR(399.1,"B",DGBILLBS,0))
	.D FILE
	.Q
	K DGDAT,DGPROC,DGDIV,DGRVCOD,DGASC
	Q
	;
FILE	;
	S DA(1)=IBIFN
	D FILE^IBCU62
	W:'$G(IBAUTO) !,"Adding",?12,$E(00_DGRVCOD,($L(DGRVCOD)-1),($L(DGRVCOD)+1)),?24,DGBSLOS,?31,"$",$J(DGAMNT,8,2),?44,DGBILLBS,?65,$P($G(^ICPT(+$G(DGPROC),0)),"^")
	Q
	;
STDATE()	;  -start date for basc billing
	Q $S($P($G(^IBE(350.9,1,1)),"^",24):$P(^(1),"^",24),1:9999999)
	;
RX	;add rx refill charges (adds default rx cpt for hcfa 1500)
	;tries to use ins rx rev code, then site rx rev code finally standard revcode all with $20
	I '$D(^DGCR(399,IBIFN,"RC",0)) S ^DGCR(399,IBIFN,"RC",0)="^399.042PA"
	S DGBSLOS=IBCNT
	S DGBS="PRESCRIPTION",DGBSI=$O(^DGCR(399.1,"B",DGBS,0)) Q:'DGBSI
	I $$FT^IBCU3(IBIFN)=2 S DGPROC=$P($G(^IBE(350.9,1,1)),"^",30),DGDIV=""
	S DGRVCOD=$P($G(DGINPAR),"^",10) ; ins rev cd
	I DGRVCOD="" S DGRVCOD=$P($G(^IBE(350.9,1,1)),"^",28) ; site rev cd
	I DGRVCOD="" D SETREV^IBCU62 G END ; standard rev cd
	S DGAMNT=20,X=DGRVCOD
	D FILE
END	K DGPROC,DGDIV,DGRVCOD
	Q
	;MAP TO DGCRU61
	;
ALL	;delete all revenue codes that may have been set up automatically
	;ie = $d(^IB(399.5,"d",code ifn))
	K DA S DA(1)=IBIFN,DA=0 I '$G(IBAUTO) W !,"Removing old Revenue Codes."
	F DGII=0:0 S DA=$O(^DGCR(399,IBIFN,"RC",DA)) Q:DA<1  S X=$G(^DGCR(399,IBIFN,"RC",DA,0)) D
	. ;remove revenue codes pre-defined for automatic use AND revenue codes for BASC charges (are automatically created)
	. W:'$G(IBAUTO) "." D DEL
	Q
DEL	S DIK="^DGCR(399,"_DA(1)_",""RC""," D ^DIK L ^DGCR(399,IBIFN):1
	Q

IBCU64
IBCU64	;ALB/ARH - AUTOMATED BILLER (INPT CONT) ; 8/6/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
LOS1(IFN)	; returns length of stay for a  bill's date range
	N X,Y,DFN,DGADM,DGPMCA S (X,DGPMCA)=0,Y=$G(^DGCR(399,+$G(IFN),0)) G:Y="" LOS1Q I $P(Y,U,8)'="" D
	. ; find patient movement, based on admit date and DFN from PTF
	. S DFN=+$P(Y,U,2),DGADM=$P($G(^DGPT(+$P(Y,U,8),0)),U,2) I 'DGADM Q
	. S DGADM=$O(^DGPM("AMV1",+$P(DGADM,"."))),DGPMCA=$O(^DGPM("AMV1",+DGADM,+DFN,0))
	S X=$G(^DGCR(399,+IFN,"U"))
	S X=$$LOS($P(X,U,1),$P(X,U,2),$P(Y,U,6),DGPMCA)
LOS1Q	Q X
	;
AD(DGPMCA)	; returns inpatient admit and discharge date, DFN, PTF, Facility Treating Specialty, if one/both don't exist "0^0"
	N X,Y S X="0^0" I '$G(DGPMCA) G ADQ
	S Y=$G(^DGPM(+DGPMCA,0)) ; get patient movement data
	S X=+Y_"^"_+$G(^DGPM(+$P(Y,U,17),0))_"^"_$P(Y,U,3)_"^"_$P(Y,U,16)_"^"_$P(Y,U,9)
ADQ	Q X
	;
LOS(DGBDT,DGEDT,BTF,DGPMCA)	; calculate the inpatient length of stay for a given time period
	;parameters are input variables into DGUTL2, which calculates days absent or on pass
	;if the pat movment IFN is not available then can't check of absence or pass days
	;LOS: discharge date is not added except for inpt interim first and continuous where discharge date is added,
	;    absent or pass days not added,
	;    admission and discharge on same day has LOS=1, discharge date=admission date+1 also has an LOS=1
	N X,IBX,IBY,DGREC,IBDISDT,DGMVTP,DGADM,DFN,DGA S IBX=0 I '$G(DGBDT)!'$G(DGEDT) G LOSQ
	I DGBDT=DGEDT!($G(BTF)=2)!($G(BTF)=3) S DGEDT=$$FMADD^XLFDT(DGEDT,1) ; inclusive if interim continuous or first
	S IBX=$$FMDIFF^XLFDT(DGEDT,DGBDT,1) ; difference between begin and end date
	I +$G(DGPMCA) S IBY=$$AD(DGPMCA) I +IBY S DGADM=+IBY\1,IBDISDT=$P(IBY,U,2)\1,DFN=$P(IBY,U,3) D
	. ; maximum date range is the admit thru discharge range
	. S:DGBDT<DGADM DGBDT=DGADM I +IBDISDT&(DGEDT>IBDISDT) S DGEDT=IBDISDT
	. S IBX=$$FMDIFF^XLFDT(DGEDT,DGBDT,1) I (DGBDT\1)=(DGEDT\1) S IBX=1
	. D PLASIH^DGUTL2 S IBX=IBX-DGREC ; subtract days absent or on pass
LOSQ	Q $S(IBX>0:IBX,1:0)
	;
DUPCHKI(DT1,DT2,PTF,RTG,DISP,IFN)	;Check for duplicate billing of inpt admission - checks for overlapping date range on other
	;bills with the same rate type and that have not been cancelled
	;input:   DT1 - beginning of date range to check
	;         DT2 - ending of date range to check
	;         PTF - ptr to PTF record
	;         DISP - true if error message should be printed before exit, if any
	;         RTG - rate group to check for, if no rate group (0 passed and/or no IFN) then any bill found for
	;          visit date will cause error message
	;         IFN - existing bill to check against, if passed will use variables from this bill if they are not passed in
	;returns: 0 - if another bill was not found for this admission with this date range, patient, and rate type
	;         (dup IFN)_"^error message" - if duplicate date found, same rate group then IFN of bill
	N IFN2,Y,X,X1 S Y=0,(X,X1)="",IFN=+$G(IFN) I +IFN S X=$G(^DGCR(399,IFN,0)),X1=$G(^DGCR(399,IFN,"U"))
	S RTG=$S($G(RTG)'="":+RTG,1:+$P(X,U,7)),PTF=$S(+$G(PTF):+PTF,1:+$P(X,U,8)) G:'PTF DCIQ
	S DT1=$S(+$G(DT1):+DT1,1:$P(X1,U,1)),DT2=$S(+$G(DT2):+DT2,1:$P(X1,U,2)) G:'DT1!'DT2 DCIQ
	S DT1=DT1\1,DT2=DT2\1 I (DT1>DT2)!('$D(^DGCR(399,"APTF",PTF))) G DCIQ
	S IFN2=0 F  S IFN2=$O(^DGCR(399,"APTF",PTF,IFN2)) Q:'IFN2  I IFN'=IFN2 D  Q:+Y
	. S X1=$G(^DGCR(399,IFN2,0)) I $P(X1,U,13)=7 Q  ; bill cancelled
	. I +RTG,$P(X1,U,7)'=RTG Q  ; different rate group
	. S X=$G(^DGCR(399,IFN2,"U")) I (DT2<+X)!(DT1>+$P(X,U,2)) Q
	. S Y=IFN2_"^A "_$P($G(^DGCR(399.3,+$P(X1,U,7),0)),U,1)_" bill ("_$P(X1,U,1)_") exists overlapping this date range."
DCIQ	I +$G(DISP),+Y W !,?10,$P(Y,U,2)
	Q Y
	;
ADM(DFN,IBDT)	; -- send back adm dt for dfn on vaindt (or now) if any, 0 otherwise
	;returns adm if patient was admitted at any time during IBDT or before dischrge date and time
	N IBNDT,IBINPT,IBADM,IBADT1,IBADT2,IBDIS,IBNOW,%,X,Y D NOW^%DTC S IBNOW=%
	S IBINPT=0,IBDT=$G(IBDT) G:'$D(^DPT(+$G(DFN),0)) ADME I 'IBDT S IBDT=IBNOW
	S IBNDT=9999999.999999-((IBDT\1)+.99999),IBADT2=IBNOW
	F  S IBNDT=$O(^DGPM("ATID1",DFN,IBNDT)) Q:'IBNDT  D  Q:+IBINPT
	. S IBADM=+$O(^DGPM("ATID1",DFN,IBNDT,0)),IBADT1=$G(^DGPM(+IBADM,0)) Q:IBADT1=""
	. S IBDIS=$P(IBADT1,U,17) I +IBDIS S IBADT2=+$G(^DGPM(+IBDIS,0))
	. I $P(IBADT2,".",2)="" S $P(IBADT2,".",2)=999999
	. I (+IBADT1\1)'>(IBDT\1),(IBADT2'<IBDT!((+IBADT1\1)=(+IBDT\1))) S IBINPT=+IBADT1
ADME	Q IBINPT

IBCU7
IBCU7	;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ; 29-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU7
	;
CHKX	;  -interception of input x from Additional Procedure input
	G:X=" " CHKXQ
	I $P(^DGCR(399,DA(1),0),"^",5)<3,'$P($G(^IBE(350.9,1,1)),"^",15),X'?1A1N K X G CHKXQ
	G:'$D(^UTILITY($J,"IB")) CHKXQ
	S M=($A($E(X,1))-64),S=+$E(X,2) Q:'$G(^UTILITY($J,"IB",M,S))  S X="`"_+^(S)
	I $D(DGPROCDT),DGPROCDT'=$P($G(^UTILITY($J,"IB",M,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) W !!,"Procedure Date: " S Y=DGPROCDT X ^DD("DD") W Y,!
CHKXQ	Q
	;
CODMUL	;Date oriented entry of procedure 
DELASK	I $D(IBZ20),IBZ20,IBZ20'=$P(^DGCR(399,IBIFN,0),U,9) S %=2 W !,"SINCE THE PROCEDURE CODING METHOD HAS BEEN CHANGED, DO YOU WANT TO DELETE ALL",!,"PROCEDURE CODES IN THIS BILL"
	I  D YN^DICN Q:%=-1  D:%=1 DELADD I %Y?1."?" W !!,"If you answer 'Yes', all procedure codes will be DELETED from this bill.",! G DELASK
	K %,%Y,DA,IBZ20,DIK ;W !,"Procedure Entry:"
	S:'$D(^DGCR(399,IBIFN,"CP",0)) ^DGCR(399,IBIFN,"CP",0)="^399.0304IAV^"
	;
CODDT	I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
	I $P($G(^DGCR(399,IBIFN,0)),"^",5)<3 S IBZTYPE=1 I $P($G(^UTILITY($J,"IB",1,1)),"^",2) S DGPROCDT=$P(^(1),"^",2) D ASKCOD
	R !,"Select PROCEDURE DATE: ",X:DTIME G:'$T!("^"[X) CODQ D:X["?" CODHLP
	I X=" ",$D(DGPROCDT),DGPROCDT?7N S Y=DGPROCDT D D^DIQ W "   (",Y,")" D ASKCOD,ADDCPT^IBCU71:$D(DGCPT) G CODDT
	I X=" ",+$P($G(^DGCR(399,IBIFN,"OP",0)),"^",4) S (DGPROCDT,Y)=$O(^DGCR(399,IBIFN,"OP",0)) D D^DIQ W "   (",Y,")" D ASKCOD,ADDCPT^IBCU71:$D(DGCPT) G CODDT
	S %DT="EXP" D ^%DT G:Y<1 CODDT G:'$$OPV2^IBCU41(Y,IBIFN,1) CODDT S:'$G(IBZTYPE) X=$$OPV^IBCU41(Y,IBIFN) S DGPROCDT=Y D ASKCOD,ADDCPT^IBCU71:$D(DGCPT) G CODDT
	G CODDT
	Q
	;
ASKCOD	K DGCPT S DGCPT=0,DGCPTUP=$P($G(^IBE(350.9,1,1)),"^",19),DGADDVST=0,IBFT=$P($G(^DGCR(399,IBIFN,0)),"^",19)
	F  S DIC("A")="   Select PROCEDURE: ",DIC="^DGCR(399,"_IBIFN_",""CP"",",DIC(0)="AEQMNL",DIC("S")="I '$D(DIV(""S""))&($P(^(0),U,2)=DGPROCDT)",DIC("DR")="1///^S X=DGPROCDT",DA(1)=IBIFN D ^DIC Q:Y<1  D
	.I Y["ICD0",$P(^ICD0(+$P(Y,"^",2),0),"^",11),$P(^(0),"^",11)<DT W !,*7,"Warning:  Procedure code is currently inactive",!
	. I Y["ICPT",$P(^ICPT(+$P(Y,"^",2),0),"^",4) W !,*7,"Warning:  Procedure code is currently inactive",!
	.S DGCPTNEW=$P(Y,"^",3),DGADDVST=$S($P(Y,"^",3):1,$D(DGADDVST):DGADDVST,1:0)
	.S DIE=DIC,DR=".01;3",DA=+Y D ^DIE Q:'$D(DA)
	. I IBFT=2 S DR="8;9;D DISP1^IBCSC4D("_IBIFN_");10;S:X="""" Y=""@99"";11;S:X="""" Y=""@99"";12;S:X="""" Y=""@99"";13;@99" D ^DIE
	.;  -if billable get division, if amb proc get associated clinic, build  dgcpt(assoc clinic,cpt) array
	.Q:$P(^DGCR(399,IBIFN,0),"^",5)<3  ;only outpatient bills
	.S DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0)) I 'DGCPTNEW,$P(DGPROC,"^",7)="" S DGCPTNEW=2
	.;I DGPROC["ICPT",IBFT=2 D DISPDX^IBCU71 S DR="7;" D ^DIE
	.Q:'$$SCREEN^IBCU71(DGPROCDT,+DGPROC)
	.S DR="" I $$CPTBSTAT^IBEFUNC1(+DGPROC,DGPROCDT) S DR="5//"_$P($G(^DG(40.8,+$P($G(^IBE(350.9,1,1)),"^",25),0)),"^")_";" D
	..;I $P(^DGCR(399,IBIFN,0),"^",19)'=2,$$TOMANY^IBCCPT(DGPROCDT) W !?4,"This bill has more than 1 visit date and you are adding a Billable Amb. Surg." S DGNOADD=1
	.S:DGCPTUP DR=DR_"6;" D ^DIE
	.I DGCPTUP,DGCPTNEW S DGCPT=DGCPT+1,DGPROC=$G(^DGCR(399,IBIFN,"CP",+DA,0)) I $P(DGPROC,"^",7) S DGCPT($P(DGPROC,"^",7),+DGPROC,DGCPT)=""
	.;I DGADDVST,'$D(DGNOADD),'$D(^DGCR(399,IBIFN,"OP",DGPROCDT)) S (X,DINUM)=DGPROCDT K DGNOADD D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
	.I DGADDVST S (X,DINUM)=DGPROCDT D VFILE1^IBCOPV1 K DINUM,X,DGNOADD,DGADDVST
	.Q
	Q
CODQ	K %DT,DGPROC,DIC,DIE,DR,DGPROCDT
	K IBFT,DGNOADD,DGADDVST,DGCPT,DGCPTUP,IBZTYPE,DGCPTNEW Q
	;
DELADD	S DA(1)=IBIFN,DIK="^DGCR(399,"_DA(1)_",""CP""," F DA=0:0 S DA=$O(^DGCR(399,DA(1),"CP",DA)) Q:'DA  D ^DIK
	Q
	;
DTMES	;Message if procedure date not in date range
	Q:'$D(IBIFN)  Q:'$D(^DGCR(399,IBIFN,"U"))  S DGNODUU=^("U")
	G:X'<$P(DGNODUU,"^")&(X'>$P(DGNODUU,"^",2)) DTMESQ
	W *7,!!?3,"Date must be within STATEMENT COVERS FROM and STATEMENT COVERS TO period."
	S Y=$P(DGNODUU,"^") X ^DD("DD")
	W !?3,"Enter a date between ",Y," and " S Y=$P(DGNODUU,"^",2) X ^DD("DD") W Y,!
	K X,Y
DTMESQ	K DGNODUU Q
	;
CODHLP	;Display Additional Procedure codes
	I '$O(^DGCR(399,IBIFN,"CP",0)) W !!?5,"No Codes Entered!",! Q
	F I=0:0 S I=$O(^DGCR(399,IBIFN,"CP",I)) Q:'I  S Y=$G(^(I,0)) S Z=$G(@(U_$P($P(Y,"^"),";",2)_$P($P(Y,"^"),";")_",0)")) W !?17,$E($P(Z,"^",$S($P(Y,"^")["ICD":4,1:2)),1,28),?47,"- ",$P(Z,"^"),?57,"Date: " S Y=$P(Y,"^",2) D DT^DIQ
	K Z Q
	;
DICV	I $D(IBIFN),$D(^DGCR(399,IBIFN,0)),$P(^(0),U,9) S DIC("V")=$S($P(^(0),U,9)=9:"I +Y(0)=80.1",$P(^(0),U,9)=4!($P(^(0),U,9)=5):"I +Y(0)=81",1:"")
	Q

IBCU71
IBCU71	;ALB/AAS - INTERCEPT SCREEN INPUT OF PROCEDURE CODES ; 29-OCT-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRU71
	;
ADDCPT	;  - store cpt codes in scheduling visits file
	Q:$D(DGCPT)'>9
	N DA,DIC,DR,DIE
	S DIR(0)="Y",DIR("A")="OK to add CPT codes to Scheduling Visits file",DIR("B")="Y" D ^DIR K DIR Q:'Y!$D(DIRUT)
	K SDCPT
	S SDATE=DGPROCDT,SDIV=+$$SITE^VASITE,SDC=900,SDCTYPE="C",SDMSG="B"
	W !!,"Adding Procedures to Scheduling Visits file."
	S CNT=0 S I=0 F  S I=$O(DGCPT(I)) Q:'I  S J=0 F K=1:1 S J=$O(DGCPT(I,J)) Q:'J  F L=0:0 S L=$O(DGCPT(I,J,L)) Q:'L  S:K>5 K=1 S:K=1 CNT=CNT+1,SDCPT(CNT)="900^"_I_"^" S SDCPT(CNT)=SDCPT(CNT)_J_"^" W "."
	I $D(SDCPT) D EN3^SDACS W "..Done.",!
	K SDCPT,SDATE,SDIV,DGCPT,SDC,SDCTYPE,SDMSG
	Q
	;
DISPDX	;  - display diagnosis codes available for associated dx (HCFA 1500)  NO LONGER USED?
	N I,J,X,IBDX,IBDXL
	F I=1:1:4 S IBDX=$P($G(^DGCR(399,IBIFN,"C")),"^",(I+13)),X=$G(^ICD9(+IBDX,0)) I X'="" S IBDXL(I)=IBDX_"^"_X
	I '$D(IBDXL) W !!,"Bill has no ICD DIAGNOSIS." Q
	W !!,?24,"<<<ASSOCIATED ICD-9 DIAGNOSIS>>>",!!
	F I=1,2 W ! S X=0 F J=0,2 I $D(IBDXL(I+J)) S IBDX=IBDXL(I+J) D  S X=40
	. W ?X,"    ",$P(IBDX,"^",2),?(X+13),$E($P(IBDX,"^",4),1,28)
	W !
	Q
	;
SCREEN(X,Y)	; -- screen logic for active procs or surgeries
	; -- input x = date to check
	;          y = procedure
	;
	; -- output 0 if not active for billing or amb proc on date
	;           1 if either active
	;
	I '$D(X)!('$D(Y)) Q 0
	I $D(^SD(409.72,+$O(^(+$O(^SD(409.72,"AIVDT",Y,(9999998-$P(X,".")))),0)),0)),$P(^(0),U,5) Q 1
	I $D(^IBE(350.4,+$O(^(+$O(^IBE(350.4,"AIVDT",Y,-($P(X,".")))),0)),0)),$P(^(0),U,4) Q 1
	Q 0

IBCU8
IBCU8	;ALB/ARH - THIRD PARTY BILLING UTILITIES (AUTOMATED BILLER) ;02 JUL 93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BCDT(DATE,TYPE)	;returns end date of bill cycle for beginning DATE and TYPE
	;result is the billing date range, inclusive and within FY & CY
	N X,Y,IBBC S X="" S DATE=$E($G(DATE),1,7) I DATE'?7N G BCDTE
	S IBBC=$G(^IBE(356.6,+$G(TYPE),0))
	; I '$P(IBBC,U,4) G BCDTE
	S IBBC=$P(IBBC,U,5),X=DATE,Y=IBBC-1
	I IBBC="" S Y=$E(DATE,4,5),X=$E(DATE,1,3)+(Y\12)_$S(Y>11:"01",Y>8:Y+1,1:"0"_(Y+1))_"01",Y=-1
	S X=$$FMADD^XLFDT(X,Y) S Y=$$FYCY(DATE) F I=2,4 I X>$P(Y,U,I) S X=$P(Y,U,I)
BCDTE	Q X
	;
MBC(DATE,TYPE)	;returns maximum date range possible for bill cycle of DATE and TYPE
	;result is the billing date range, inclusive
	N X,Y,I,IBBC S X="" S DATE=$E($G(DATE),1,7) I DATE'?7N G MBCE
	S IBBC=$G(^IBE(356.6,+$G(TYPE),0))
	; I '$P(IBBC,U,4) G MBCE
	S IBBC=$P(IBBC,U,5)
	I IBBC'="" S Y=IBBC-1,X=$$FMADD^XLFDT(DATE,-Y)_"^"_$$FMADD^XLFDT(DATE,Y) G MBCE
	S Y=$E(DATE,4,5),X=$E(DATE,1,3)+(Y\12)_$S(Y>11:"01",Y>8:Y+1,1:"0"_(Y+1))_"01",Y=-1
	S X=$E(DATE,1,5)_"01^"_$$FMADD^XLFDT(X,Y)
MBCE	;check dates against bill range rules
	I +X S Y=$$STRGCHK(+X,$P(X,U,2)) I 'Y D  ;reset dates for CY and FY
	. I '$P(Y,U,3) S X="" Q
	. S Y=$$FYCY(DATE)
	. F I=1,3 I $P(Y,U,I)>$P(X,U,1) S $P(X,U,1)=$P(Y,U,I)
	. F I=2,4 I $P(Y,U,I)<$P(X,U,2) S $P(X,U,2)=$P(Y,U,I)
	Q X
	;
FYCY(DATE)	;returns calandar and fiscal years for particular date
	N X,Y,Y2 S X="" S DATE=$G(DATE)\1 I DATE'?7N G FYCYE
	S (Y,Y2)=$E(DATE,1,3) I $E(DATE,4,5)>9 S Y2=Y+1
	S X=Y_"0101^"_Y_"1231^"_(Y2-1)_"1001^"_Y2_"0930"
FYCYE	Q X
	;
STRGCHK(DT1,DT2)	;genaric edit checks for STATEMENT FROM and TO dates, returns true if dates passes
	N X S X=1 S DT1=$G(DT1)\1,DT2=$G(DT2)\1 I DT1'?7N!(DT2'?7N) G STRGCHKE
	I DT1>(DT+.2359) S X="0^Can not bill for future treatment" G STRGCHKE
	I DT1>DT2 S X="0^End date can not preceed start date" G STRGCHKE
	I $E(DT1,2,3)'=$E(DT2,2,3) S X="0^Must be in the same calandar year^"_$E(DT1,1,3)_"1231" G STRGCHKE
	I $E(DT1,4,5)<10,$E(DT2,4,5)>9 S X="0^Must be in the same fiscal year^"_$E(DT1,1,3)_"0930"
STRGCHKE	Q X
	;
CMPLT(IBTRN)	;returns true if event is ready to be billed  NOT FINISHED
	N X
	N X,IBTRND S X=1 I '$G(IBTRN) G CMPLTE
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	I +$P(IBTRND,U,31)>2 S X="0^Release of information not obtained" G CMPLTE
CMPLTE	Q X
	;
BILLED(IBTRN)	;returns bill IFN if Claims Tracking event is already associated with an uncancelled bill
	;for inpatients interim with no final bill, returns last bill^last bill date, 0 otherwise
	;based on most recent STATEMENT TO date
	N X,Y,IBIFN S X=0 I +$G(IBTRN) S IBIFN="" F  S IBIFN=$O(^IBT(356.399,"ACB",IBTRN,IBIFN)) Q:'IBIFN  D  I +X,$P(X,U,2)="" Q
	. S Y=$G(^DGCR(399,+IBIFN,0)) I $P(Y,U,13)'=7 S X=IBIFN I $P(Y,U,4)<3,($P(Y,U,6)=2!($P(Y,U,6)=3)) S X=IBIFN_U_$P($G(^DGCR(399,+IBIFN,"U")),U,2)
	Q X

IBCU81
IBCU81	;ALB/ARH - THIRD PARTY BILLING UTILITIES (AUTOMATED BILLER) ;02 JUL 93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EABD(IBETYP,IBTDT)	; -- compute earliest auto bill date: date entered plus days delay for event type
	;the difference betwieen this and EABD^IBTUTL is that the autobill of the event type may be turned off
	;and this procedure will still return a date
	; -- input   IBETYPE = pointer to type of entry file
	;            IBTDT   = episode date, if not passed in uses DT
	;
	N X,X1,X2,Y,IBETYPD S Y="" I '$G(IBETYP) G EABDQ
	S IBETYPD=$G(^IBE(356.6,+IBETYP,0)) I '$G(IBTDT) S IBTDT=DT
	S X2=+$P(IBETYPD,"^",6) ;set earliest autobill date to entered date plus days delay
	S X1=IBTDT D C^%DTC S Y=X\1
EABDQ	Q Y
	;
EVBILL(IBTRN)	;check if event is billable, return EABD if it is, the difference between this and BILL^IBTUTL is that
	;this procedure will return a date if the auto biller is turned off for this event type
	;returns "^error message" if it is not billable
	N X,Y,Z,E,IBTRND S (X,Y,E)="" S IBTRND=$G(^IBT(356,+$G(IBTRN),0)) I IBTRND="" G BILLQ
	;
	; -- billed and bill not cancelled and not inpt interim first or continuous
	S Z=$$BILLED^IBCU8(IBTRN),Y=$P(Z,U,2) I +Z,'Y S E="^Event already billed on "_$P($G(^DGCR(399,+Z,0)),U,1)_"." G BILLQ
	;
	; -- special type (not riem. ins), not billable, inactive
	I +$P(IBTRND,U,12) S E="^Bill may not be Reimbursable Insurance, possibly "_$$EXSET^IBEFUNC(+$P(IBTRND,U,12),356,.12)_"." G BILLQ
	I +$P(IBTRND,U,19) S E="^Event has a Reason Not Billable: "_$P($G(^IBE(356.8,+$P(IBTRND,U,19),0)),U,1)_"." G BILLQ
	I '$P(IBTRND,U,20) S E="^Event is Inactive." G BILLQ
	I 'Y S Y=+$G(^IBT(356,+$G(IBTRN),1)) I 'Y S Y=DT
	S X=$$EABD(+$P(IBTRND,U,18),Y)
BILLQ	Q X_E
	;
RXRF(IBTRN)	; returns rx # and refill date for given claims tracking rx entry
	N IBX,IBY,IBZ,X S X="" S IBX=$G(^IBT(356,+$G(IBTRN),0)) I IBX'="" S IBY=$P($G(^PSRX(+$P(IBX,U,8),0)),U,1) I IBY'="" S IBZ=+$G(^PSRX(+$P(IBX,U,8),1,+$P(IBX,U,10),0)) I +IBZ S X=IBY_"^"_IBZ
	Q X

IBCU82
IBCU82	;ALB/ARH - THIRD PARTY BILLING UTILITIES (AUTOMATED BILLER) ;02 JUL 93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
EVNTCHK(IBTRN)	;special checks to determine if event should be auto billed
	;checks for INS, non-veteran patient, possible workers comp and tort feasor, admitted for sc cond., outp dental stop, optv while inpt
	;(assumes that Claims Tracking does the SC check for Outpatients)
	;input: IBTRN - claims tracking event
	;       DISP - if true then any error message will be displayed on exit.
	;output: returns "1^error message" if one of the checks failed, 0 otherwise
	;
	N X,IBX,IBY,IBZ,IBTRND,DFN,IBEVDT,VAEL,VADMVT,VAINDT S X=0,IBTRND=$G(^IBT(356,+$G(IBTRN),0)) G:IBTRND="" EVNTCQ
	I +$P(IBTRND,U,18)=1,'+$P(IBTRND,U,5) S X="1^Claims Tracking event does not have an associated Inpatient Admission." G EVNTCQ
	I +$P(IBTRND,U,18)=2,'+$P(IBTRND,U,4) S X="1^Claims Tracking event does not have an associated Outpatient Visit." G EVNTCQ
	I +$P(IBTRND,U,18)=4,'+$P(IBTRND,U,8) S X="1^Claims Tracking event does not have an associated prescription in Pharmacy." G EVNTCQ
	I +$P(IBTRND,U,18)=4,'+$P(IBTRND,U,10) S X="1^Claims Tracking event does not have an associated prescription refill in Pharmacy." G EVNTCQ
	;
	S DFN=+$P(IBTRND,U,2),IBEVDT=$P(IBTRND,U,6) I '$$INSURED^IBCNS1(DFN,IBEVDT) S X="1^Patient not insured for event date." G EVNTCQ
	D ELIG^VADPT S X=0 I 'VAEL(4) S X="1^Patient is not a veteran." G EVNTCQ
	;
	;check the last disposition before the episode to see if maybe workers comp or tort feasor
	S IBX=9999999-(IBEVDT\1+1),IBX=$O(^DPT(+DFN,"DIS",IBX)) I +IBX S IBY=$$DT(IBX),IBX=$G(^DPT(DFN,"DIS",IBX,2)) D  G:+X EVNTCQ
	. I $P(IBX,U,1)'="N" S X="1^Need may be related to occupation, check "_IBY_" disposition." Q
	. I $P(IBX,U,4)'="N" S X="1^Need may be related to an accident, check "_IBY_" disposition." Q
	;
	I +$P(IBTRND,U,5) S IBX=$G(^DGPM(+$P(IBTRND,U,5),0)) D  G EVNTCQ ; inpatient specific
	. I IBX="" S X="1^Inpatient admission movement not found." Q
	. I +$P(IBX,U,11) S X="1^Admitted for an SC condition." Q
	;
	I +$P(IBTRND,U,4) S IBX=$G(^SCE(+$P(IBTRND,U,4),0)) D  G EVNTCQ ; outpatient specific
	. I IBX="" S X="1^Outpatient Encounter not found." Q
	. ; dental is generally billed differently
	. I $P($G(^DIC(40.7,+$P(IBX,U,3),0)),U,1)["DENTAL" S X="1^Outpatient visit contains a dental stop code." Q
	. ;outpatient visit was a disposition:  application without exam is not billable
	. I $P(IBX,U,8)=3 S IBY=$G(^DPT(DFN,"DIS",+$P(IBX,U,9),0)) D  Q:+X
	.. I $P(IBY,U,2)=2 S X="1^Disposition was Application Without Exam." Q
	.. I $P($G(^DIC(37,+$P(IBY,U,7),0)),U,1)="CANCEL WITHOUT EXAM" S X="1^Disposition was Cancel Without Exam." Q
	. ;can not bill twice for same day so ignore outpatient visits if patient was an inpatient at end of day (this means that outpatient visits on the date of discharge will be billed)
	. I $$ADM^IBCU64(DFN,IBEVDT) S X="1^Not Billable: Patient was an inpatient on this visit date."
	;
	I +$P(IBTRND,U,8) S IBX=$G(^PSRX(+$P(IBTRND,U,8),0)) D  G EVNTCQ ; rx refills
	. I IBX="" S X="1^Prescription not found in Pharmacy." Q
	. S IBY=$G(^PSRX(+$P(IBTRND,U,8),1,+$P(IBTRND,U,10),0)) I IBY="" S X="1^Prescription refill not found in Pharmacy." Q
	. S IBZ=$$DBLCHK^IBTRKR31(IBTRN) I 'IBZ S X="1^Can not auto bill this refill, check Claims Tracking." Q
EVNTCQ	Q X
	;
DT(X)	;convert disposition type date/time to external format (9999999-date)
	N Y S Y=0 I +X S Y=9999999-X X ^DD("DD")
	Q Y

IBCVA
IBCVA	;ALB/MJB - SET MCCR VARIABLES  ;09 JUN 15:40
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRVA
	;
EN	S IBKILL=1 D Q5 K IBKILL
EN1	D:$D(IBIFN) ALL^IBCVA0 Q
Q5	K IBBS,IBCH,IBLS,IBOX,IBPTF,IBRATY,IBREVC,IBREV,IBTOT Q:'$D(IBKILL)
Q4	K C,D,IBC,IBCC,IBCCN,IBCPT,IBDI,IBDIN,IBHC,IBICD,IBIP,IBNO,IBO,IBOC,IBOCD,IBOCN,IBOCD2,IBPR,IBPRD,IBPRDT,IBPRN Q:'$D(IBKILL)
Q3	K IB3X,IBDD,IBDD1,IBIMA,IBIN,IBINDT,IBINT,IBIR,IBIRN,IBISEX,IBIT,IBITY,IBIUTL,IBMAIL,IBOUTP,IBPIN,IBPST,IBXX,IBXXX,IBIDS Q:'$D(IBKILL)
Q2	K IBEC,IBEMPD,IBSEST Q:'$D(IBKILL)
Q1	K IBA,IBAD,IBADD,IBADD1,IBDR,IBI1,IBICD,IBHC,IBCC,IBCCN,IBID,IBID0,IBO,IBOCD,IBOC,IBPTF,IBSITE,IBMAR,IBT1,IBTADD,IBTST,PRCASV,VAEL Q:'$D(IBKILL)
Q0	K IB0,IB99,IBADD,IBBNO,IBBT,IBDA,IBDPT,IBD,IBDT,IBG,IBI,IBL,IBM,IBOA,IBOP,IBPS,IBQ,IBSCR,IBSR,IBSR1,IBSITE,IBST,IBT,IBX,IBZ,IBX,IBCUBFT
	K %,D0,D1,DA,DIC,DIE,DIV,DR,I,J,M,POP,VADM,VAEL,X,Y,Z,IBKILL Q:'$D(IBKILL)
Q	K DFN,IBIFN,DIC Q
	;
123	D Q1,Q2,Q3
	Q
	;
1234	D Q1,Q2,Q3,Q4
	Q
	;
	;IBCVA

IBCVA0
IBCVA0	;ALB/MJB - SET MCCR VARIABLES CONT.  ;04 AUG 88 03:02
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRVA0
	;
	Q
ALL	I $D(DFN) S IBDPT=^DPT(DFN,0) D ADDR I IBADD1]"",$L(IBADD1)'>47 S DIE="^DGCR(399,",(DA,Y)=+IBIFN,DR="110///"_IBADD1 D ^DIE K DIE,DR,DA
	;I $D(^DPT(DFN,.11)) S IBST=$P(^(.11),U,5),IBST=$S(IBST'="":$P(^DIC(5,IBST,0),U,2),1:"")
	S IBBNO=$P(IB(0),"^"),IBDT=$P(IB(0),"^",3)
	D 2^VADPT
	;I $P(IB(0),U,5)<3 S Y=0 F I=1:1 S Y=$O(^DGPM("APTT1",DFN,Y)) Q:'Y  S:$E(Y,1,7)=IBDT IBDA=Y
	Q
1	;Demographic variables set
	D Q1^IBCVA
EN1	Q:'$D(DFN)  S IBMAR=$S($P(IBDPT,U,5)'="":$P(IBDPT,U,5),1:"U") I IBMAR'="U" S IBMAR=$S(IBMAR=6:"S",IBMAR=2:"M",IBMAR=1:"D",IBMAR=4:"W",IBMAR=5:"X",1:"U")
	I $D(^DPT(DFN,.121)) S IBTADD=^DPT(DFN,.121),IBTST=$P(IBTADD,U,5),IBTST=$S(IBTST'="":$P(^DIC(5,IBTST,0),U,2),1:"") I $P(IBTADD,U)="" S IBT1="NO TEMPORARY ADDRESS"
	Q
2	;Employment variables set
	D Q1^IBCVA,Q2^IBCVA
EN2	S:'$D(^DPT(DFN,.311)) IBEMPD="" I $D(^DPT(DFN,.311)) I ^DPT(DFN,.311)'="" S IBEMPD=$P(^(.311),U)_"^"_$P(^(.311),U,6)_"^"_$S($P(^(.311),U,7)'="":$P(^(.311),U,7),1:"")_"^"_$P($G(^DPT(DFN,.22)),U,5)_"^"_$P(IB(0),U,9)_"^"_$P(IB(0),U,8)
	I $D(IBEMPD) S:IBEMPD'="" IBEC=$P(^DPT(DFN,.311),"^",15)
	I $D(^DPT(DFN,.25)) S:$P(^DPT(DFN,.25),U,6)'="" IBSEST=$P(^(.25),U,6),IBSEST=$P(^DIC(5,IBSEST,0),U,2)
	Q
3	;Insurance variables set
EN3	D 123^IBCVA
EN31	; -IBdd(i) = value of ins node in dpt
	I '$D(^DGCR(399,IBIFN,"AIC")) S IBINDT=$S(+$G(IB("U")):+IB("U"),+$G(^DGCR(399,IBIFN,"U")):+$G(^("U")),1:DT) D ALL^IBCNS1(DFN,"IBDD",1,IBINDT) S I="" F  S I=$O(IBDD(I)) Q:'I  D INS
	I $D(^DGCR(399,IBIFN,"AIC")) S IBIN="I" F I=1:1:3 S IBIN=$O(^DGCR(399,IBIFN,IBIN)) Q:IBIN'?1"I".N  S IBDD(I,0)=^DGCR(399,IBIFN,IBIN) D INS
	Q
INS	I '$D(^DGCR(399,IBIFN,"AIC")) S IBISEX(I)=$P(IBDD(I,0),U,6) S:IBISEX(I)="v" IBISEX(I)=$P(^DPT(DFN,0),U,2),IBISEX(I)=$S(IBISEX(I)="M":"MALE",1:"FEMALE")
	I $D(^DGCR(399,IBIFN,"AIC")) S IBISEX(I)=$P(IBDD(I,0),U,6) S:IBISEX(I)="v" IBISEX(I)=$P(^DPT(DFN,0),U,2),IBISEX(I)=$S(IBISEX(I)="M":"MALE",1:"FEMALE")
	S:IBISEX(I)="s" IBISEX(I)=$S($P(VADM(5),U,2)="MALE":"FEMALE",$P(VADM(5),U,2)="FEMALE":"MALE",1:"UNSPECIFIED")
	S:IBISEX(I)="o" IBISEX(I)="UNSPECIFIED"
	S IBIRN(I)=$P(IBDD(I,0),U,16),IBIR(I)=$S(IBIRN(I)="01":"PATIENT",IBIRN(I)="02":"SPOUSE",IBIRN(I)="03":"CHILD",IBIRN(I)="08":"EMPLOYEE",IBIRN(I)="11":"ORGAN DONOR",IBIRN(I)="18":"PARENT",IBIRN(I)=15:"PLANTIFF",1:"UNKNOWN")
	I IBIR(I)="UNKNOWN" S IBIR(I)=$S('$D(IBDD(I,0)):"UNKNOWN",$P(IBDD(I,0),U,6)="v":"PATIENT",$P(IBDD(I,0),U,6)="s":"SPOUSE",1:"UNKNOWN")
	;S IBIUTL(I)=IBDD(I,0)_"^"_IBISEX(I)_"^"_IBIRN(I)
	Q
ADDR	;SET ADDRESS
	S IBADD1="" I $D(^DGCR(399,IBIFN,"M")),$P(^("M"),"^",10)]"" Q
	S X=$S($D(^DPT(DFN,.11)):^(.11),1:"") F I=1:1:4 I $P(X,"^",I)]"" S IBADD1=IBADD1_$P(X,"^",I)_","
	I $D(^DIC(5,+$P(X,"^",5),0)) S IBADD1=IBADD1_$P(^(0),"^",2),IBST=$P(^(0),"^",2)
	S:$P(X,"^",12)]"" IBADD1=IBADD1_" "_$P(X,"^",12) Q
	;IBCVA0

IBCVA1
IBCVA1	;ALB/MJB - SET MCCR VARIABLES CONT.  ;09 JUN 88 14:49
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;MAP TO DGCRVA1
	;
	Q
4	;Event variables set
	D 1234^IBCVA
	Q:'$D(IBBT)
EN4	I $E(IBBT,2)>2 G OCC
INP	D INP^IBCSC4
	;NOTE (12/1/93): IBDI AND IBDIN ARRAYS WERE NOT UPDATED WITH NEW DX LOCATIONS BECAUSE THEY DO NOT SEEM TO BE USED ANYWHERE
OCC	I $D(^DGCR(399,IBIFN,"C")) F I=14:1:18 S IBDI(I)=$P(^DGCR(399,IBIFN,"C"),"^",I) Q:IBDI(I)=""  S IBDIN(I)=IBDI(I),IBDI(I)=$P(^ICD9(IBDI(I),0),"^",3)
	K IBO S:'$D(^DGCR(399,IBIFN,"OC")) IBO="" G:$D(IBO) COND S IBNO=$P(^DGCR(399,IBIFN,"OC",0),"^",3),IBOC=0
	S C=0 F I=0:1 S IBOC=$O(^DGCR(399,IBIFN,"OC",I)) Q:IBOC'?1N.N!(C=5)  I $D(^DGCR(399,IBIFN,"OC",I)) S C=C+1 D SOCC
	;
COND	S IBCC=0,D=0 F I=0:0 S IBCC=$O(^DGCR(399,IBIFN,"CC",IBCC)) Q:IBCC=""!(D=5)  I $D(^DGCR(399,IBIFN,"CC",IBCC,0)) S D=D+1,IBCC(D)=$P(^DGCR(399,IBIFN,"CC",IBCC,0),"^",1) D CONDN
	;
	D PROC
	;
	;Q:'$D(^DGCR(399,IBIFN,"C"))  F I=0,"C" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
	;I $P(IB(0),"^",9)=4 F I=1:1:3 S:$P(IB("C"),"^",I)'="" IBCPT(I)=$P(IB("C"),"^",I)
	;I $P(IB(0),"^",9)=9 F I=4:1:6 S:$P(IB("C"),"^",I)'="" IBICD(I)=$P(IB("C"),"^",I)
	;I $P(IB(0),"^",9)=5 F I=7:1:9 S:$P(IB("C"),"^",I)]"" IBHC(I)=$P(IB("C"),"^",I),IBHCN(I)=$S($D(^ICPT(IBHC(I),0)):$P(^(0),"^",1),1:"")
	Q
	;
5	;Billing variables set
	D 123^IBCVA
EN5	I '$D(IBIP) G REVC
	S IBLS=$S($P(IB("U"),U,15)]"":$P(IB("U"),U,15),1:0),IBBS=$S($P(IB("U"),U,11)]"":$P(IB("U"),U,11),1:IBU) I IBBS'=IBU S IBBS=$P(^DGCR(399.1,IBBS,0),"^",1)
REVC	S IBREV=0 F I=1:1 S IBREV=$O(^DGCR(399,IBIFN,"RC",IBREV)) Q:IBREV'?1.N  S IBREVC(I)=^DGCR(399,IBIFN,"RC",IBREV,0)
	S IBTF=$P(IB(0),U,6),IBTF=$S(IBTF=1:"ADMIT THRU DISCHARGE",IBTF=2:"FIRST CLAIM",IBTF=3:"CONTINUING CLAIM",IBTF=4:"LAST CLAIM",IBTF=5:"LATE CHARGE(S)",IBTF=6:"ADJUSTMENT",IBTF=7:"REPLACEMENT",IBTF=0:"ZERO CLAIM",1:"")
	Q
SOCC	S IBO(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",1),IBO(C)=$P(^DGCR(399.1,IBO(C),0),"^",2)
	S IBOCN(C)=$P(^(0),"^",1),IBOCD(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",2),IBOCD2(C)=$P(^DGCR(399,IBIFN,"OC",IBOC,0),"^",4) Q
	Q
	;
CONDN	S IBCCN(D)=$S(IBCC(D)="02":"CONDITION IS EMPLOYMENT RELATED",IBCC(D)="03":"PATIENT COVERED BY INSURANCE NOT REFLECTED HERE",IBCC(D)="05":"LIEN HAS BEEN FILED",1:"")
	I IBCCN(D)="" S IBCCN(D)=$S(IBCC(D)="06":"ESRD PATIENT IN 1ST YEAR OF ENTITLEMENT",IBCC(D)=17:"PATIENT IS OVER 100 YRS. OLD",1:"MAIDEN NAME RETAINED")
	Q
	;
PROC	;  -build array of procedures in IBPROC
	K IBPROC S IBPROC=0
	I '$D(IB("C")) S IB("C")=$G(^DGCR(399,IBIFN,"C"))
	S:'$D(IB(0)) IB(0)=$G(^DGCR(399,IBIFN,0)) S J=$P($G(IB(0)),"^",9)
	I IB("C")'="" F I=1:1:9 I $P(IB("C"),"^",I)'="" S IBPROC(I)=$P(IB("C"),"^",I)_";"_$S(I<4:"ICPT(",I<7:"ICD0(",1:"ICPT(")_"^"_$P(IB("C"),"^",$S(I#3:10+(I#3),1:13)),IBPROC=IBPROC+1
	I $D(^DGCR(399,IBIFN,"CP")) S X=0 F I=100:1 S X=$O(^DGCR(399,IBIFN,"CP",X)) Q:'X  S X1=$G(^(X,0)) Q:'X1  D
	. S IBPROC($S($P(X1,"^",4):$P(X1,"^",4),1:I))=X1,IBPROC=IBPROC+1
PROCQ	Q
	;
VC	;returns a bills value codes, IBIFN must be defined: IBVC=count,IBVC(VIFN)=CODE ^ NAME ^ VALUE ^ $$?
	N IBY,IBX,IBZ S IBVC=0 Q:'$D(^DGCR(399,IBIFN,"CV"))
	S IBX=0 F  S IBX=$O(^DGCR(399,IBIFN,"CV",IBX)) Q:'IBX  S IBY=$G(^DGCR(399,IBIFN,"CV",IBX,0)) I +IBY D
	. S IBVC=IBVC+1,IBZ=$G(^DGCR(399.1,+IBY,0)) Q:IBZ=""
	. S IBVC(+IBY)=$P(IBZ,U,2)_U_$P(IBZ,U,1)_U_$S(+$P(IBZ,U,12):$J($P(IBY,U,2),0,2),1:$P(IBY,U,2))_U_$P(IBZ,U,12)
	Q
	;IBCVA1

IBDE
IBDE	;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY ;AUG 12,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
MAIN	;
	N FORMLIST,BLKLIST,FORMCNT,BLKCNT,IBTKBLK,SCREEN
	S SCREEN="F" ;a flag that indicates wheter user is looking at the block screen(=B) or the form screen(=F)
	S IBTKBLK=0 ;if 1 overrides check preventing deletion of tk blocks
	K XQORS,VALMEVL
	D EN^VALM("IBDE IMP/EXP FORMS")
	Q
HDR	;
	S VALMHDR(1)="LIST OF FORMS READY FOR IMPORT OR EXPORT"
	S VALMHDR(3)="(** there are "_$S($O(^IBE(358.1,"D",0)):"also",1:"no")_" tool kit blocks in the work space **)"
	Q
ONENTRY	;
	S FORMLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""FORMS"")"
	S BLKLIST="^TMP(""IBDF"",$J,""IMP/EXP WS"",""BLOCKS"")"
	D IDXBLKS^IBDE3,IDXFORMS
	Q
ONEXIT	;
	K ^TMP("IBDF",$J,"IMP/EXP WS"),VALMY,VALMBCK,X,Y,I,DA,D0
	Q
	;
IDXFORMS	;build an array of forms used by IBCLINIC for the list processor
	N FORM,NODE
	K @FORMLIST
	S (FORM,VALMCNT)=0 F  S FORM=$O(^IBE(358,FORM)) Q:'FORM  D
	.I $D(^IBE(358,FORM,0)) D
	..S VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$$DISPLAY(FORM,VALMCNT),@FORMLIST@("IDX",VALMCNT,VALMCNT)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S FORMCNT=VALMCNT
	Q
	;
DISPLAY(FORM,ID)	;
	N NODE,RET
	S RET=$J(ID,3)_"  "
	S NODE=$G(^IBE(358,FORM,0))
	S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",3)
	Q RET

IBDE1
IBDE1	;ALB/CJM - ENCOUNTER FORM - (IMP/EXP UTILITY ACTIONS) ;AUG 12,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ADD	;adds a form to the work space
	N OLDFORM,NEWFORM
	D FULL^VALM1
	S VALMBCK="R"
	S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
	S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,358,"",1)
	I NEWFORM K DIE,DR,DA S DIE="^IBE(358,",DA=NEWFORM,DR="1;" D ^DIE K DIE,DR,DA
	D IDXFORMS^IBDE
	Q
	;
DELETE	;deletes a form from the work space
	N PICK,FORM
	D EN^VALM2($G(XQORNOD(0)))
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM DELETE^IBDFU2C(FORM,358,1)
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
EDIT	;allows the export notes of a form to be edited
	N PICK,FORM
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
	.K DIE,DR,DA S DIE="^IBE(358,",DR="1;",DA=FORM D ^DIE K DIE,DA,DR
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
IMPORT	;allows the user to pick a form, then import it
	N PICK,FORM,NAME,NEWFORM
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D:FORM
	.S NAME=$$NEWNAME^IBDFU2C($P($G(^IBE(358,FORM,0)),"^"))
	.Q:NAME=""
	.S NEWFORM=$$COPYFORM^IBDFU2C(FORM,358,357,NAME)
	.K DIE,DR,DA S DIE="^IBE(357,",DR=".07T;.04////1;",DA=NEWFORM D ^DIE K DIE,DA,DR
	.D:$G(NEWFORM) DELETE^IBDFU2C(FORM,358,0)
	S VALMBCK="R"
	D IDXFORMS^IBDE
	Q
VIEW	;allows the export notes of a form to be edited
	N PICK,FORM,IBARY,IBHDRRTN
	D EN^VALM2($G(XQORNOD(0)),"S")
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S FORM=+$G(@VALMAR@("IDX",PICK,PICK)) D
	.S IBHDRRTN="D VIEWHDR^IBDE1"
	.S IBARY="^IBE(358,"_FORM_",1)"
	.D EN^VALM("IBDE TEXT DISPLAY")
	S VALMBCK="R"
	Q
VIEWHDR	;
	S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358,FORM,0)),"^")_" Form"
	Q
TEXT	;entry code for the IBDF TEXT DISPLAY list template
	S:$D(IBARY) VALMAR=IBARY
	X:$D(IBHDRRTN) IBHDRRTN
	I $G(IBARY)'="" S VALMCNT=$P($G(@IBARY@(0)),"^",4)
	I '$G(VALMCNT) S VALMCNT=10
	Q
	;
INITS	;executes inits to bring stuff into the imp/exp files
	N QUIT,RTN
	S QUIT=0
	S VALMBCK="R"
	I $G(DUZ(0))'="@" W !,"This action requires programmer access!" D PAUSE^IBDFU5 Q
	D FULL^VALM1
	I BLKCNT!FORMCNT D
	.K DIR S DIR(0)="Y"
	.W !,"The work space must be cleared before the INITS are run. Is that okey?"
	.D ^DIR K DIR
	.I $D(DIRUT)!(Y=0) S QUIT=1
	.D:'QUIT DLTALL^IBDE2
	;
	;ask for the init rtn
	F  Q:QUIT  D
	.S DIR(0)="FA^5:8",DIR("B")=$S($L($T(^IBDEINIT)):"IBDEINIT",1:"")
	.S DIR("?",1)="In order for you to import forms from another site the other site must have",DIR("?")="prepared and sent you inits created using the import/export facility."
	.S DIR("A",1)="What is the name of the init routine that contains the forms that you want to",DIR("A")="import? "
	.D ^DIR K DIR
	.I $D(DIRUT) S QUIT=1 Q
	.I '$L($T(^@Y)) W !!,"That routine does not exist!",! Q
	.S RTN=Y
	.S QUIT=$$MSG^IBDE1B
	.I 'QUIT D @("^"_RTN),IDXFORMS^IBDE,IDXBLKS^IBDE3 S VALMCNT=$S(SCREEN="F":FORMCNT,1:BLKCNT)
	.S QUIT=1
	I SCREEN="F" D HDR^IBDE
	I SCREEN="B" D HDR^IBDE3
	Q
DIFROM	;
	N QUIT S QUIT=0
	S VALMBCK=""
	I $G(DUZ(0))'="@" W !!,"Using the DIFROM action requires PROGRAMMER ACCESS!",! D PAUSE^IBDFU5 Q
	I 'BLKCNT,'FORMCNT D  Q
	.W !!,"There is nothing in the work space to export!"
	.D PAUSE^IBDFU5
	D FULL^VALM1
	S QUIT=$$MSG^IBDE1A
	I 'QUIT D ^DIFROM W !,"DONE",!,"************************"
	S VALMBCK="R"
	Q
BLOCKS	;
	S SCREEN="B"
	D EN^VALM("IBDE IMP/EXP TK BLOCKS")
	S VALMBCK="R",VALMCNT=FORMCNT,SCREEN="F"
	Q

IBDE1A
IBDE1A	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
MSG()	;QUIT is an output
	N COUNT,LINE,QUIT
	S (QUIT,COUNT)=0
	W @IOF
	F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
	.S COUNT=COUNT+1
	.W !,LINE
	.I $Y>(IOSL-5) W !! D PAUSE
	I 'QUIT W !! D PAUSE
	Q QUIT
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	W:'QUIT @IOF
	Q
	;
LINES	;;===================================================================
	;;You must enter these parameters to the prompts generated by DIFROM:
	;;===================================================================
	;;     
	;;  
	;;Enter the Name of the Package (2-4 characters): IBDE
	;;I am going to create a routine called 'IBDEINIT'.
	;;but 'IBDEINIT' is ALREADY ON FILE!
	;;Is that OK? YES
	;;Would you like to include Data Dictionaries? YES// YES
	;;Would you like to see the package definition? NO// NO
	;;Do you want to accept the current definition? NO// YES
	;;    
	;;===================================================================
	;;{now DIFROM lists the files.....}
	;;===================================================================
	;;  
	;;Now you must enter the information that goes on the second line
	;;of the INIT routines.
	;;  
	;;Select VERSION: 2.0// 
	;;DATE DISTRIBUTED: AUG 3,1993// TODAY
	;;Would you like to include OPTIONS?       YES// NO
	;;Would you like to include BULLETINS?     YES// NO
	;;Would you like to include SECURITY KEYS? YES// NO
	;;Would you like to include FUNCTIONS?     YES// NO
	;;Would you like to include HELP FRAMES?   YES// NO
	;;Would you like security codes sent along: NO// NO
	;;Would you like this sent via the network: NO// NO
	;;Maximum Routine Size    (2000 - 9999) : 4000// 4000
	;;  
	;;===================================================================
	;;            OKAY, READY TO RUN DIFROM!
	;;===================================================================

IBDE1B
IBDE1B	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING INITS ;AUG 16, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
MSG()	;QUIT is returned
	N COUNT,LINE,QUIT
	S (QUIT,COUNT)=0
	W @IOF
	F  S LINE=$P($T(LINES+COUNT),";;",2) Q:QUIT!(LINE="")  D
	.S COUNT=COUNT+1
	.W !,LINE
	.I $Y>(IOSL-5) W !! D PAUSE
	I 'QUIT W !! D PAUSE
	Q QUIT
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	W:'QUIT @IOF
	Q
	;
LINES	;;***********************************************************************
	;; 
	;;  First the files contained in the inits will be listed.
	;;  THEN ....
	;;  You must enter these parameters to the prompts generated by INITS:
	;;  
	;;***********************************************************************
	;;   
	;;  
	;;SHALL I WRITE OVER FILE SECURITY CODES? NO// NO
	;;ARE YOU SURE EVERYTHING'S OK? NO// YES
	;;  
	;; 
	;;***********************************************************************
	;;  
	;;  Now to execute the inits!
	;;  
	;;***********************************************************************

IBDE2
IBDE2	; ALB/ISC - DELETES IMP/EXP FILE CONTENTS ;AUG 13, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
DLTALL	N FILE,NODE,COUNT
	S COUNT=0
	F  S FILE=$P($T(FILES+COUNT),";;",2) Q:FILE=""  D
	.S COUNT=COUNT+1
	.S NODE=$G(@FILE@(0))
	.S $P(NODE,"^",3)=0,$P(NODE,"^",4)=0
	.K @FILE
	.S @FILE@(0)=NODE
	S VALMBCK="R",VALMCNT=0,BLKCNT=0,FORMCNT=0
	K ^TMP("IBDF",$J,"IMP/EXP WS")
	I $G(SCREEN)="F" D HDR^IBDE
	I $G(SCREEN)="B" D HDR^IBDE3
	Q
	;
FILES	;;^IBE(358)
	;;^IBE(358.1)
	;;^IBE(358.2)
	;;^IBE(358.3)
	;;^IBE(358.4)
	;;^IBE(358.5)
	;;^IBE(358.6)
	;;^IBE(358.7)
	;;^IBE(358.8)
	;;^IBE(358.91)

IBDE3
IBDE3	;ALB/CJM - ENCOUNTER FORM - IMP/EXP UTILITY -DISPLAYS TOOL KIT BLOCKS ;AUG 12,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
HDR	;
	S VALMHDR(1)="LIST OF TOOL KIT BLOCKS READY FOR IMPORT OR EXPORT"
	S VALMHDR(3)="(** there are "_$S($O(^IBE(358,0)):"also",1:"no")_" forms in the work space **)"
	Q
ONENTRY	;
	N LINE
	S VALMCNT=$G(BLKCNT)
	I $D(BLKLIST) S LINE=0 F  S LINE=$O(@BLKLIST@(LINE)) Q:'LINE  D FLDCTRL^VALM10(LINE)
	Q
ONEXIT	;
	Q
	;
IDXBLKS	;build an array of forms used by IBCLINIC for the list processor
	N BLOCK,NODE,ORDER
	K @BLKLIST
	S (VALMCNT,ORDER)=0 F  S ORDER=$O(^IBE(358.1,"D",ORDER)) Q:'ORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(358.1,"D",ORDER,BLOCK)) Q:'BLOCK  D
	.I $D(^IBE(358.1,BLOCK,0)) D
	..S VALMCNT=VALMCNT+1,@BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S BLKCNT=VALMCNT
	Q
	;
DISPLAY(BLOCK,ID)	;
	N NODE,RET
	S RET=$J(ID,3)_"  "
	S NODE=$G(^IBE(358.1,BLOCK,0))
	S RET=RET_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$P(NODE,"^",13)
	Q RET
	;
ADD	;adds a block to the work space
	N OLDBLOCK,NEWBLOCK
	D FULL^VALM1
	S VALMBCK="R"
	S OLDBLOCK=$$SELECT Q:'OLDBLOCK
	S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,"",357.1,358.1,"","",1)
	I NEWBLOCK K DIE,DR,DA S DIE="^IBE(358.1,",DA=NEWBLOCK,DR="1;" D ^DIE K DIE,DR,DA
	D IDXBLKS
	Q
	;
DELETE	;deletes a block from the work space
	N PICK,FORM,IBTKBLK
	S IBTKBLK=1 ;can't delete tk blocks unless IBTKBLK
	D EN^VALM2($G(XQORNOD(0)))
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) I BLOCK,$$RUSURE^IBDFU5($P($G(^IBE(358.1,BLOCK,0)),"^")) D DLTBLK^IBDFU3(BLOCK,"",358.1)
	S VALMBCK="R"
	D IDXBLKS
	Q
EDIT	;allows the export notes of a block to be edited
	N PICK,BLOCK
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
	.K DIE,DR,DA S DIE="^IBE(358.1,",DR="1;",DA=BLOCK D ^DIE K DIE,DA,DR
	S VALMBCK="R"
	D IDXBLKS
	Q
IMPORT	;allows the user to pick a block from the imp/exp files, then import it
	N PICK,BLOCK,NEWBLOCK,IBTKBLK,NAME
	S IBTKBLK=1
	D EN^VALM2($G(XQORNOD(0)))
	D FULL^VALM1
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D:BLOCK
	.S NAME=$$NEWNAME($P($G(^IBE(358.1,BLOCK,0)),"^"))
	.Q:NAME=""
	.S NEWBLOCK=$$COPYBLK^IBDFU2(BLOCK,$$TKFORM^IBDFU2C,358.1,357.1,"","",$$TKORDER^IBDF13,NAME)
	.D:$G(NEWBLOCK) DLTBLK^IBDFU3(BLOCK,"",358.1)
	S VALMBCK="R"
	D IDXBLKS
	Q
VIEW	;allows the export notes of a form to be edited
	N PICK,BLOCK,IBARY,IBHDRRTN
	D EN^VALM2($G(XQORNOD(0)),"S")
	S PICK="" F  S PICK=$O(VALMY(PICK)) Q:'PICK  S BLOCK=+$G(@VALMAR@("IDX",PICK,PICK)) D
	.S IBHDRRTN="D VIEWHDR^IBDE3"
	.S IBARY="^IBE(358.1,"_BLOCK_",1)"
	.D EN^VALM("IBDE TEXT DISPLAY")
	S VALMBCK="R"
	Q
VIEWHDR	;
	S VALMHDR(1)="Export Notes For "_$P($G(^IBE(358.1,BLOCK,0)),"^")_" Block"
	Q
SELECT()	;allows the user to select a form, then a block from it
	N IBFORM,IBBLK
	S (IBFORM,IBBLK)=""
	K DIR S DIR(0)="S^1:TOOL KIT BLOCK;2:BLOCK FROM A TOOL KIT FORM;3:BLOCK FROM A FORM NOT IN THE TOOL KIT"
	S DIR("A")="What type of block do you want to export?"
	D ^DIR K DIR
	Q:(Y=-1)!($D(DIRUT)) ""
	I Y=1 D
	.S IBFORM=$$TKFORM^IBDFU2C
	E  S IBFORM=$$SLCTFORM^IBDFU4($S(Y=2:1,1:0))
	I IBFORM D
	.W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
	.S IBBLK=$$SLCTBLK^IBDFU8(IBFORM)
	Q IBBLK
	;
NEWNAME(OLDNAME)	;asks the user to select uniqued tool kit block name
	;returns "" if unsuccessfull, else the blk name
	;shows OLDNAME as the default if defined
	;
	N NAME,FOUND,TKBLK,ORDER S NAME=""
	K DIR S DIR(0)="357.1,.01A",DIR("A")="New Tool Kit Block Name: ",DIR("?")="Enter a unique name for the tool kit block up to 30 characters"
	S DIR("B")="" I $G(OLDNAME)'="" S DIR("B")=OLDNAME
	F  D  Q:'FOUND
	.S FOUND=0
	.D ^DIR I $D(DIRUT) S Y="" Q
	.S ORDER=0 F  S ORDER=$O(^IBE(357.1,"D",ORDER)) Q:ORDER=""  S TKBLK=$O(^IBE(357.1,"D",ORDER,0)) Q:'TKBLK   I $P($G(^IBE(357.1,TKBLK,0)),"^")=Y W !,"There is already a tool kit block with that name! The name should be unique." S FOUND=1 Q
	S:'FOUND NAME=Y
	K DIR
	Q NAME

IBDEHELP
IBDEHELP	; ALB/ISC - ENCOUNTER FORM UTILITIES - INSTRUCTIONS FOR EXECUTING DIFROM ;AUG 16, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
HELP	;
	N LINE,IBARY,IBHDRRTN,CNT
	S IBHDRRTN="D HDR^IBDEHELP"
	S CNT=0
	S IBARY="^TMP(""IBDF"",$J,""IMP/EXP HELP"")"
	K @IBARY
	F  S LINE=$P($T(LINES+CNT),";;",2) Q:LINE=""  D
	.S CNT=CNT+1
	.S @IBARY@(CNT,0)=LINE
	S $P(@IBARY@(0),"^",4)=CNT
	D EN^VALM("IBDE TEXT DISPLAY")
	K @IBARY
	S VALMBCK="R"
	Q
HDR	;
	S VALMHDR(1)="HELP for the IMPORT/EXPORT UTILITY"
	Q
	;
LINES	;;The initial install of the Encounter Form Utilities at your site
	;;included a tool kit of forms and blocks. The ONLY SAFE METHOD for
	;;transferring additional forms and blocks between sites is through this
	;;IMPORT/EXPORT UTILITY.
	;;  
	;;The IMPORT/EXPORT UTILITY includes a set of files that are nearly
	;;identical to the files used by the ENCOUNTER FORM UTILTIES to contain
	;;the form descriptions. These import/export files constitute a WORK
	;;SPACE in which forms and blocks can be safely exported (to other sites)
	;;and imported (from other sites to your own).
	;;  
	;;You should have a PACKAGE entry for the IMPORT/EXPORT UTILITY already
	;;set up. The files listed should be in the range 358 to 358.91.
	;;The package entry is named IB ENCOUNTER FORM IMP/EXP, and the prefix
	;;is IBDE. The package entry is necessary to accomplish EXPORT.
	;;  
	;;  
	;;TO IMPORT:
	;;  
	;;  1) The other site must have prepared a set of inits, using this
	;;     utility, that contain the forms and tool kit blocks they want to
	;;     transfer.
	;;  
	;;  2) The work space MUST NOT ALREADY CONTAIN any forms or blocks that
	;;     you want to keep. First decide what you want to do with anything
	;;     that is already in the workspace. The work space will be cleared
	;;     before the inits are executed, so anything there will be lost.
	;;  
	;;  3) You must execute the inits, using this this utility, by choosing
	;;     the action RUN INITS. The init should normally be named IBDEINIT.
	;;  
	;;  4) The work space should now contain forms and tool kit blocks. You
	;;     can choose which ones you want, then choose the action IMPORT
	;;     ENTRY to actually make the form or block available for use. The
	;;     forms can not be viewed while in the work space, but you can view
	;;     the IMPORT/EXP NOTES.
	;;  
	;;TO EXPORT:
	;;  
	;;   0) Only users with PROGRAMMER ACCESS can export.
	;;  
	;;   1) First clear the work space of anything you do not want to export.
	;;  
	;;   2) Then add any forms or blocks to the work space that you do want
	;;      to export.
	;;  
	;;   3) Add EXPORT/IMPORT NOTES to each entry you add to the work space.
	;;      You must accuratly describe the form for the site that you are
	;;      exporting it to. They will be able to view the notes, but they
	;;      will not be able to view the form itself until they import it.
	;;  
	;;   4) Then, through the DIFROM action that is part of this utility,
	;;      create the inits that will be sent to the other site.
	;;  
	;;   5) Send the inits to the other site.

IBDEI001
IBDEI001	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358,0,"GL")
	;;=^IBE(358,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM",358)
	;;=
	;;^DIC(358,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358,"%D",1,0)
	;;= 
	;;^DIC(358,"%D",2,0)
	;;=This file is nearly identical to file #357. It is used by the Import/Export
	;;^DIC(358,"%D",3,0)
	;;=Utility as a temporary staging area for data from that file that is being
	;;^DIC(358,"%D",4,0)
	;;=imported or exported.
	;;^DD(358,0)
	;;=FIELD^^1^9
	;;^DD(358,0,"DDA")
	;;=N
	;;^DD(358,0,"DT")
	;;=2931201
	;;^DD(358,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(358,0,"IX","B",358,.01)
	;;=
	;;^DD(358,0,"IX","C",358,.07)
	;;=
	;;^DD(358,0,"NM","IMP/EXP ENCOUNTER FORM")
	;;=
	;;^DD(358,0,"PT",358.1,.02)
	;;=
	;;^DD(358,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358,.01,1,0)
	;;=^.1
	;;^DD(358,.01,1,1,0)
	;;=358^B
	;;^DD(358,.01,1,1,1)
	;;=S ^IBE(358,"B",$E(X,1,30),DA)=""
	;;^DD(358,.01,1,1,2)
	;;=K ^IBE(358,"B",$E(X,1,30),DA)
	;;^DD(358,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358,.01,21,1,0)
	;;= 
	;;^DD(358,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(358,.01,"DEL",1,0)
	;;=I 1 W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(358,.01,"DT")
	;;=2930225
	;;^DD(358,.03,0)
	;;=BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
	;;^DD(358,.03,.1)
	;;=BRIEF DESRIPTION OF FORM'S USE & CONTENT
	;;^DD(358,.03,3)
	;;=Enter a brief description of the intended use of the form or its contents.
	;;^DD(358,.03,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.03,21,1,0)
	;;= 
	;;^DD(358,.03,21,2,0)
	;;=A brief description of the contents of the form and its intended use. This
	;;^DD(358,.03,21,3,0)
	;;=description will be displayed to the user.
	;;^DD(358,.03,"DT")
	;;=2930420
	;;^DD(358,.04,0)
	;;=TYPE OF USE^RS^1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
	;;^DD(358,.04,3)
	;;=How will the form be used?
	;;^DD(358,.04,"DT")
	;;=2930802
	;;^DD(358,.05,0)
	;;=COMPILED?^S^0:NO;1:YES;^0;5^Q
	;;^DD(358,.05,"DT")
	;;=2931201
	;;^DD(358,.07,0)
	;;=TOOL KIT^RS^0:NO;1:YES;^0;7^Q
	;;^DD(358,.07,1,0)
	;;=^.1
	;;^DD(358,.07,1,1,0)
	;;=358^C
	;;^DD(358,.07,1,1,1)
	;;=S ^IBE(358,"C",$E(X,1,30),DA)=""
	;;^DD(358,.07,1,1,2)
	;;=K ^IBE(358,"C",$E(X,1,30),DA)
	;;^DD(358,.07,1,1,"%D",0)
	;;=^^1^1^2930624^
	;;^DD(358,.07,1,1,"%D",1,0)
	;;=Used to find all of the tool kit forms.
	;;^DD(358,.07,1,1,"DT")
	;;=2930624
	;;^DD(358,.07,3)
	;;=Is this form part of the tool kit?
	;;^DD(358,.07,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.07,21,1,0)
	;;= 
	;;^DD(358,.07,21,2,0)
	;;=This field, if set to YES, means that the form can not be deleted and can
	;;^DD(358,.07,21,3,0)
	;;=not be added to a clinic setup.
	;;^DD(358,.07,"DT")
	;;=2930624
	;;^DD(358,.09,0)
	;;=RIGHT MARGIN^RNJ3,0^^0;9^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.09,.1)
	;;=FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
	;;^DD(358,.09,3)
	;;=How many columns (characters) wide should the form be?
	;;^DD(358,.09,21,0)
	;;=^^2^2^2930607^
	;;^DD(358,.09,21,1,0)
	;;= 
	;;^DD(358,.09,21,2,0)
	;;=The number of characters wide the form is.
	;;^DD(358,.09,"DT")
	;;=2930420
	;;^DD(358,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.1,.1)
	;;=FORM'S PAGE LENGTH (IN LINES)
	;;^DD(358,.1,3)
	;;=How many lines should the form have?
	;;^DD(358,.1,21,0)
	;;=^^2^2^2921213^
	;;^DD(358,.1,21,1,0)
	;;= 
	;;^DD(358,.1,21,2,0)
	;;=This is the number of usable lines on the page.
	;;^DD(358,.1,"DT")
	;;=2930420
	;;^DD(358,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X

IBDEI002
IBDEI002	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(358,.11,21,0)
	;;=^^1^1^2930602^
	;;^DD(358,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(358,.11,"DT")
	;;=2930602
	;;^DD(358,1,0)
	;;=EXPORT NOTES^358.01^^1;0
	;;^DD(358,1,21,0)
	;;=^^3^3^2930806^
	;;^DD(358,1,21,1,0)
	;;=Used to describe the form to other sites. The form can not be displayed
	;;^DD(358,1,21,2,0)
	;;=until after it is imported. Maybe if they knew more about it they wouldn't
	;;^DD(358,1,21,3,0)
	;;=want to import it! They will be able to read the EXPORT NOTES before importing it.
	;;^DD(358.01,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.01,0,"DT")
	;;=2930806
	;;^DD(358.01,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.01,0,"UP")
	;;=358
	;;^DD(358.01,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.01,.01,3)
	;;=What should other sites know about this form before importing it? The other site will not be able to display it until after they import it.
	;;^DD(358.01,.01,"DT")
	;;=2930806

IBDEI003
IBDEI003	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358)
	;;=^IBE(358,
	;;^UTILITY(U,$J,358,0)
	;;=IMP/EXP ENCOUNTER FORM^358I^7^6
	;;^UTILITY(U,$J,358,1,0)
	;;=BUFFALO'S GENERAL MEDICINE^^SOAP, orders, insurance information (NO allergy info)^1^0^^1^^132^80^1
	;;^UTILITY(U,$J,358,2,0)
	;;=BUFFALO'S OUTPATIENT SURGERY^^doctors notes, CPT codes, insurance information (NO allergy info)^1^0^^1^^132^80^2
	;;^UTILITY(U,$J,358,3,0)
	;;=W/DX,CPT,NOTES,VISIT TYPE^^Dx codes, CPT codes, progress notes (unstructured),allergies, visit type^1^0^^1^^132^80^1
	;;^UTILITY(U,$J,358,5,0)
	;;=W/DX,CPT,VISIT TYPE^^Dx codes, CPT codes, allergies, type of visit^1^0^^1^^132^80^1
	;;^UTILITY(U,$J,358,6,0)
	;;=W/PROBLEMS,CPT,VISIT TYPE^^Problems List, CPT codes, allergies, type of visit^1^0^^1^^132^80^1
	;;^UTILITY(U,$J,358,7,0)
	;;=W/DX,CPT,SOAP^^Dx codes, CPT codes, SOAP, allergies, full demographics^1^0^^1^^132^80^1

IBDEI004
IBDEI004	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.1,0,"GL")
	;;=^IBE(358.1,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM BLOCK",358.1)
	;;=
	;;^DIC(358.1,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.1,"%D",1,0)
	;;= 
	;;^DIC(358.1,"%D",2,0)
	;;=This file is nearly identical to file #357.1. It is used by the
	;;^DIC(358.1,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.1,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.1,0)
	;;=FIELD^^1^12
	;;^DD(358.1,0,"DT")
	;;=2930806
	;;^DD(358.1,0,"ID",.02)
	;;=W ""
	;;^DD(358.1,0,"IX","B",358.1,.01)
	;;=
	;;^DD(358.1,0,"IX","C",358.1,.02)
	;;=
	;;^DD(358.1,0,"IX","D",358.1,.14)
	;;=
	;;^DD(358.1,0,"NM","IMP/EXP ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(358.1,0,"PT",358.2,.02)
	;;=
	;;^DD(358.1,0,"PT",358.5,.02)
	;;=
	;;^DD(358.1,0,"PT",358.7,.06)
	;;=
	;;^DD(358.1,0,"PT",358.8,.02)
	;;=
	;;^DD(358.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.1,.01,1,0)
	;;=^.1
	;;^DD(358.1,.01,1,1,0)
	;;=358.1^B
	;;^DD(358.1,.01,1,1,1)
	;;=S ^IBE(358.1,"B",$E(X,1,30),DA)=""
	;;^DD(358.1,.01,1,1,2)
	;;=K ^IBE(358.1,"B",$E(X,1,30),DA)
	;;^DD(358.1,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.1,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.01,21,1,0)
	;;= 
	;;^DD(358.1,.01,21,2,0)
	;;=The name of the block.
	;;^DD(358.1,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.1,.02,0)
	;;=FORM^RP358'^IBE(358,^0;2^Q
	;;^DD(358.1,.02,1,0)
	;;=^.1
	;;^DD(358.1,.02,1,1,0)
	;;=358.1^C
	;;^DD(358.1,.02,1,1,1)
	;;=S ^IBE(358.1,"C",$E(X,1,30),DA)=""
	;;^DD(358.1,.02,1,1,2)
	;;=K ^IBE(358.1,"C",$E(X,1,30),DA)
	;;^DD(358.1,.02,1,1,"%D",0)
	;;=^^1^1^2921116^
	;;^DD(358.1,.02,1,1,"%D",1,0)
	;;=Used to find all the blocks belonging to a particular form.
	;;^DD(358.1,.02,1,1,"DT")
	;;=2921116
	;;^DD(358.1,.02,3)
	;;=What form should this block appear on?
	;;^DD(358.1,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.1,.02,21,1,0)
	;;= 
	;;^DD(358.1,.02,21,2,0)
	;;=The form the block appears on.
	;;^DD(358.1,.02,"DT")
	;;=2930802
	;;^DD(358.1,.04,0)
	;;=BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.04,.1)
	;;=WHAT ROW SHOULD THE BLOCK START IN?
	;;^DD(358.1,.04,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.04,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.04,3)
	;;=What line should this block begin on?
	;;^DD(358.1,.04,21,0)
	;;=^^1^1^2930715^^^
	;;^DD(358.1,.04,21,1,0)
	;;=The row  on the encounter form that the block starts on.
	;;^DD(358.1,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.1,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.04,23,3,0)
	;;=it is convenient to work with displacements fromt the top left-hand
	;;^DD(358.1,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.04,"DT")
	;;=2930715
	;;^DD(358.1,.05,0)
	;;=BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.05,.1)
	;;=WHAT COLUMN SHOULD THE BLOCK START IN?
	;;^DD(358.1,.05,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.05,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.05,3)
	;;=What column should this block begin on?
	;;^DD(358.1,.05,21,0)
	;;=^^1^1^2930715^^
	;;^DD(358.1,.05,21,1,0)
	;;=The column on the encounter form that the block starts on.
	;;^DD(358.1,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation

IBDEI005
IBDEI005	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.1,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.1,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.05,"DT")
	;;=2930715
	;;^DD(358.1,.06,0)
	;;=WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.06,.1)
	;;=HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
	;;^DD(358.1,.06,3)
	;;=How many characters wide should this block be?
	;;^DD(358.1,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.06,21,1,0)
	;;= 
	;;^DD(358.1,.06,21,2,0)
	;;=The width of the block, measured in the number of characters across.
	;;^DD(358.1,.06,"DT")
	;;=2930415
	;;^DD(358.1,.07,0)
	;;=HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.07,.1)
	;;=HOW MANY LINES HIGH SHOULD THE BLOCK BE?
	;;^DD(358.1,.07,3)
	;;=How many lines high should this block be?
	;;^DD(358.1,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.07,21,1,0)
	;;= 
	;;^DD(358.1,.07,21,2,0)
	;;=The height of the block, measured by the number of lines it takes up.
	;;^DD(358.1,.07,"DT")
	;;=2930415
	;;^DD(358.1,.1,0)
	;;=OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
	;;^DD(358.1,.1,.1)
	;;=OUTLINE TYPE (SOLID/INVISIBLE)
	;;^DD(358.1,.1,3)
	;;=Enter '1' if the block should have a box around it, '2' if not.
	;;^DD(358.1,.1,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.1,21,1,0)
	;;= 
	;;^DD(358.1,.1,21,2,0)
	;;=How the block is outlined on the form.
	;;^DD(358.1,.1,"DT")
	;;=2930415
	;;^DD(358.1,.11,0)
	;;=BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
	;;^DD(358.1,.11,.1)
	;;=WHAT HEADER WOULD SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
	;;^DD(358.1,.11,3)
	;;=What text should appear at the top of the block?
	;;^DD(358.1,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.11,21,1,0)
	;;= 
	;;^DD(358.1,.11,21,2,0)
	;;=The text appearing at the top of the block.
	;;^DD(358.1,.11,"DT")
	;;=2930415
	;;^DD(358.1,.12,0)
	;;=HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.1,.12,.1)
	;;=HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.1,.12,3)
	;;=B=bold, U=underline, C=center. You can enter any combination of {B,U,C}.
	;;^DD(358.1,.12,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.12,21,1,0)
	;;= 
	;;^DD(358.1,.12,21,2,0)
	;;=A description of the block's contents and use.
	;;^DD(358.1,.12,"DT")
	;;=2930616
	;;^DD(358.1,.13,0)
	;;=BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
	;;^DD(358.1,.13,.1)
	;;=ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
	;;^DD(358.1,.13,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(358.1,.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.13,21,1,0)
	;;= 
	;;^DD(358.1,.13,21,2,0)
	;;=A brief description of the contents or use of the block.
	;;^DD(358.1,.13,"DT")
	;;=2930415
	;;^DD(358.1,.14,0)
	;;=TOOL KIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.1,.14,1,0)
	;;=^.1
	;;^DD(358.1,.14,1,1,0)
	;;=358.1^D
	;;^DD(358.1,.14,1,1,1)
	;;=S ^IBE(358.1,"D",$E(X,1,30),DA)=""
	;;^DD(358.1,.14,1,1,2)
	;;=K ^IBE(358.1,"D",$E(X,1,30),DA)
	;;^DD(358.1,.14,1,1,"%D",0)
	;;=^^2^2^2930108^
	;;^DD(358.1,.14,1,1,"%D",1,0)
	;;=This index is used to locate all the 'tool box' blocs that can be used 
	;;^DD(358.1,.14,1,1,"%D",2,0)
	;;=as templates to create a new block to be added to a form.
	;;^DD(358.1,.14,1,1,"DT")
	;;=2930108
	;;^DD(358.1,.14,3)
	;;=Enter a numeric value >0 if this block is part of the tool kit. The number will determine its listed order.

IBDEI006
IBDEI006	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.1,.14,21,0)
	;;=^^4^4^2930607^
	;;^DD(358.1,.14,21,1,0)
	;;= 
	;;^DD(358.1,.14,21,2,0)
	;;=A value greater than 0 means that the block belongs to the tool kit. The
	;;^DD(358.1,.14,21,3,0)
	;;=value also determines the order that the block will be listed to the
	;;^DD(358.1,.14,21,4,0)
	;;=screen that displays the tool kit blocks.
	;;^DD(358.1,.14,"DT")
	;;=2930309
	;;^DD(358.1,1,0)
	;;=EXPORT NOTES^358.11^^1;0
	;;^DD(358.1,1,21,0)
	;;=^^2^2^2930806^
	;;^DD(358.1,1,21,1,0)
	;;=Should be give other sites information that will enable them to decide
	;;^DD(358.1,1,21,2,0)
	;;=whether or not they want to import the block. Only applies to tool kit blocks.
	;;^DD(358.11,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.11,0,"DT")
	;;=2930806
	;;^DD(358.11,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.11,0,"UP")
	;;=358.1
	;;^DD(358.11,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.11,.01,3)
	;;=What should other sites know about this tool kit block before importing it?
	;;^DD(358.11,.01,"DT")
	;;=2930806

IBDEI007
IBDEI007	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1)
	;;=^IBE(358.1,
	;;^UTILITY(U,$J,358.1,0)
	;;=IMP/EXP ENCOUNTER FORM BLOCK^358.1I^89^78
	;;^UTILITY(U,$J,358.1,1,0)
	;;=PROGRESS NOTES (SOAP)^1^^23^0^132^30^^^2^^^Patient progess notes in SOAP format.
	;;^UTILITY(U,$J,358.1,2,0)
	;;=BUFFALO'S PROVIDER ORDERS^1^^54^0^132^21^^^2^^^FOR ENTERING ORDERS
	;;^UTILITY(U,$J,358.1,3,0)
	;;=PAGE 1 HEADER^1^^0^0^132^1^^^2^^^CLINIC & APPT DATE^
	;;^UTILITY(U,$J,358.1,4,0)
	;;=SIGNATURE^1^^75^0^132^5^^^2^^^SPACE FOR SIGNATURE & CLINIC^
	;;^UTILITY(U,$J,358.1,5,0)
	;;=VITALS^1^^19^0^132^4^^^2^^^FOR RECORDING VITALS^
	;;^UTILITY(U,$J,358.1,6,0)
	;;=BUFFALO'S DEMOGRAPHICS^1^^2^0^132^17^^^2^^^PATIENT DEMOGRAPHICS^
	;;^UTILITY(U,$J,358.1,7,0)
	;;=BUFFALO'S DOCTORS NOTES^2^^20^0^132^26^^^2^^^Dx,PROCDURE NOTES,FINDINGS, PLAN, ETC.
	;;^UTILITY(U,$J,358.1,8,0)
	;;=PAGE 1 HEADER^2^^0^0^132^1^^^2^^^CLINIC & APPT DATE^
	;;^UTILITY(U,$J,358.1,9,0)
	;;=SIGNATURE^2^^75^0^132^5^^^2^^^SPACE FOR SIGNATURE & CLINIC^
	;;^UTILITY(U,$J,358.1,10,0)
	;;=BUFFALO'S CPT CODES^2^^47^0^132^28^^^2^**CPT CHECKLIST**^C^CPT SELECTION LIST^
	;;^UTILITY(U,$J,358.1,11,0)
	;;=BUFFALO'S DEMOGRAPHICS^2^^2^0^132^17^^^2^^^PATIENT DEMOGRAPHICS^
	;;^UTILITY(U,$J,358.1,12,0)
	;;=APPOINTMENT^3^^0^93^38^3^^^2^^UC^Contains the clinic & date/time of appointment.
	;;^UTILITY(U,$J,358.1,13,0)
	;;=ALLERGIES^3^^26^0^50^9^^^1^******  PATIENT ALLERGIES  ******^UC^Displays the patient's allergies and has space for allergies to be written in.
	;;^UTILITY(U,$J,358.1,14,0)
	;;=SUPPLEMENTAL DEMOGRAPHICS^3^^9^0^49^17^^^2^^BUC^Contains address, insurance, employment and marital data.
	;;^UTILITY(U,$J,358.1,15,0)
	;;=VITAL SIGNS^3^^5^51^79^4^^^2^Vital Signs:^^For writting in the patient's vital signs.^
	;;^UTILITY(U,$J,358.1,16,0)
	;;=PROGRESS NOTES (UNSTRUCTURED)^3^^52^0^100^28^^^2^^BUC^Data fields (w/o data) - for writting progress notes (Not in SOAP format)^
	;;^UTILITY(U,$J,358.1,17,0)
	;;=DIAGNOSIS CODES^3^^9^52^80^26^^^1^PLEASE CHECK OFF DIAGNOSIS TREATED THIS VISIT^UC^This block contains a list of ICD-9 diagnosis codes to select from.^
	;;^UTILITY(U,$J,358.1,18,0)
	;;=CPT CODES^3^^35^0^129^16^^^1^PLEASE CHECK PROCEDURES PERFORMED THIS VISIT^CU^Contains a list of CPT codes that can be selected.^
	;;^UTILITY(U,$J,358.1,19,0)
	;;=BASIC DEMOGRAPHICS^3^^0^0^50^26^^^1^^BUC^Contains patient name,dob,sex,pid,SC conditions^
	;;^UTILITY(U,$J,358.1,20,0)
	;;=HIDDEN SC TREATMENT QUESTIONS^3^^77^0^46^2^^^2^^UC^Data fields - questions on SC of treatment - displayed only if applicable^
	;;^UTILITY(U,$J,358.1,21,0)
	;;=TYPE OF VISIT - 1994 CODES^3^^53^89^43^21^^^1^^^Selection list - visit types with their CPT codes^
	;;^UTILITY(U,$J,358.1,31,0)
	;;=APPOINTMENT^5^^0^94^38^3^^^2^^UC^Contains the clinic & date/time of appointment.
	;;^UTILITY(U,$J,358.1,32,0)
	;;=ALLERGIES^5^^17^0^50^9^^^1^******  PATIENT ALLERGIES  ******^UC^Displays the patient's allergies and has space for allergies to be written in.
	;;^UTILITY(U,$J,358.1,33,0)
	;;=DIAGNOSIS CODES^5^^26^0^132^13^^^1^PLEASE CHECK OFF DIAGNOSIS TREATED THIS VISIT^UC^This block contains a list of ICD-9 diagnosis codes to select from.^
	;;^UTILITY(U,$J,358.1,34,0)
	;;=INSURANCE INFORMATION^5^^11^0^50^5^^^2^^BUC^insurance indicator, insurance policies^
	;;^UTILITY(U,$J,358.1,35,0)
	;;=VITAL SIGNS^5^^10^54^30^16^^^1^Vital Signs:^^For writting in the patient's vital signs.^
	;;^UTILITY(U,$J,358.1,36,0)
	;;=SIGNATURE^5^^75^59^45^5^^^2^^^space for signature, prints clinic name^
	;;^UTILITY(U,$J,358.1,36,1)
	;;=

IBDEI008
IBDEI008	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1,37,0)
	;;=CPT CODES^5^^39^0^132^37^^^1^PLEASE CHECK PROCEDURES PERFORMED THIS VISIT^CU^Contains a list of CPT codes that can be selected.^
	;;^UTILITY(U,$J,358.1,38,0)
	;;=BASIC DEMOGRAPHICS^5^^0^0^50^17^^^1^^BUC^Contains patient name,dob,sex,pid,SC conditions^
	;;^UTILITY(U,$J,358.1,39,0)
	;;=HIDDEN SC TREATMENT QUESTIONS^5^^77^0^46^2^^^2^^UC^Data fields - questions on SC of treatment - displayed only if applicable^
	;;^UTILITY(U,$J,358.1,40,0)
	;;=TYPE OF VISIT - 1994 CODES^5^^5^89^43^21^^^1^^^Selection list - visit types with their CPT codes^
	;;^UTILITY(U,$J,358.1,41,0)
	;;=APPOINTMENT^6^^2^93^38^3^^^2^^UC^Contains the clinic & date/time of appointment.
	;;^UTILITY(U,$J,358.1,42,0)
	;;=ALLERGIES^6^^17^0^50^9^^^1^******  PATIENT ALLERGIES  ******^UC^Displays the patient's allergies and has space for allergies to be written in.
	;;^UTILITY(U,$J,358.1,43,0)
	;;=INSURANCE INFORMATION^6^^11^0^50^5^^^2^^BUC^insurance indicator, insurance policies^
	;;^UTILITY(U,$J,358.1,44,0)
	;;=CPT CODES^6^^59^0^132^17^^^1^PLEASE CHECK PROCEDURES PERFORMED THIS VISIT^CU^Contains a list of CPT codes that can be selected.^
	;;^UTILITY(U,$J,358.1,45,0)
	;;=VITAL SIGNS^6^^6^50^82^6^^^1^VITAL SIGNS:^^Data fields (w/o data) - to write in vital signs^
	;;^UTILITY(U,$J,358.1,46,0)
	;;=ACTIVE PROBLEMS^6^^12^50^82^14^^^1^ACTIVE PROBLEM LIST^UC^Data fields- patient's active problems^
	;;^UTILITY(U,$J,358.1,47,0)
	;;=OTHER NEW PROBLEMS^6^^26^0^132^10^^^1^OTHER PROBLEMS^UC^Data Fields (w/o data) for adding problems not on the Clinic Common Prob. List^
	;;^UTILITY(U,$J,358.1,48,0)
	;;=CLINIC COMMON PROBLEM LIST^6^^36^0^87^23^^^1^CLINIC COMMON PROBLEM LIST^CU^Selection list - clinic's common problems^
	;;^UTILITY(U,$J,358.1,49,0)
	;;=BASIC DEMOGRAPHICS^6^^0^0^50^17^^^1^^BUC^Contains patient name,dob,sex,pid,SC conditions^
	;;^UTILITY(U,$J,358.1,50,0)
	;;=SIGNATURE^6^^78^49^41^2^^^2^^^space for signature, prints clinic name^
	;;^UTILITY(U,$J,358.1,50,1)
	;;=
	;;^UTILITY(U,$J,358.1,51,0)
	;;=HIDDEN SC TREATMENT QUESTIONS^6^^77^0^46^2^^^2^^UC^Data fields - questions on SC of treatment - displayed only if applicable^
	;;^UTILITY(U,$J,358.1,52,0)
	;;=TYPE OF VISIT - 1994 CODES^6^^37^89^43^21^^^1^^^Selection list - visit types with their CPT codes^
	;;^UTILITY(U,$J,358.1,53,0)
	;;=ACTIVE PROBLEMS^^^62^0^74^14^^^1^ACTIVE PROBLEM LIST^UC^Data fields- patient's active problems^1
	;;^UTILITY(U,$J,358.1,54,0)
	;;=ALLERGIES^^^37^50^50^9^^^1^******  PATIENT ALLERGIES  ******^UC^Data fields - allergies^1
	;;^UTILITY(U,$J,358.1,55,0)
	;;=APPOINTMENT^^^32^39^38^3^^^2^^UC^Data fields - clinic & appt. date/time^1
	;;^UTILITY(U,$J,358.1,56,0)
	;;=APPOINTMENT STATUS^^^0^0^34^6^^^1^^^Data Fields - for recording appointment status^1
	;;^UTILITY(U,$J,358.1,57,0)
	;;=BASIC DEMOGRAPHICS^^^40^0^47^11^^^1^^BUC^Data fields - contains patient name,dob,sex,pid,SC conditions^1
	;;^UTILITY(U,$J,358.1,58,0)
	;;=BUFFALO'S CPT CODES^^^221^0^132^12^^^1^**CPT CHECKLIST**^C^Selection list - CPT codes^1
	;;^UTILITY(U,$J,358.1,59,0)
	;;=BUFFALO'S DEMOGRAPHICS^^^191^0^132^17^^^2^^^Data fields - name,PID,address,SC conditions,insurance^1
	;;^UTILITY(U,$J,358.1,60,0)
	;;=BUFFALO'S DOCTORS NOTES^^^233^0^132^20^^^2^^^Data fields (w/o data) - for entering Dx,procedures,notes,findings,plan,etc.^1
	;;^UTILITY(U,$J,358.1,61,0)
	;;=BUFFALO'S PROVIDER ORDERS^^^200^0^132^21^^^2^^^Data fields (w/o data) - space to indicate orders^1
	;;^UTILITY(U,$J,358.1,62,0)
	;;=CLINIC COMMON PROBLEM LIST^^^51^0^74^11^^^1^CLINIC COMMON PROBLEM LIST^CU^Selection list - clinic's common problems^1

IBDEI009
IBDEI009	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1,63,0)
	;;=CPT CODES^^^29^0^132^10^^^1^PLEASE CHECK OFF PROCEDURES PERFORMED THIS VISIT^CU^Selection list - CPT codes^1
	;;^UTILITY(U,$J,358.1,64,0)
	;;=DIAGNOSIS CODES^^^11^44^132^10^^^1^PLEASE CHECK OFF DIAGNOSIS TREATED THIS VISIT^UC^Selection list - ICD-9 dx codes^1
	;;^UTILITY(U,$J,358.1,65,0)
	;;=EMBOSSED CARD BLOCK^^^170^0^57^20^^^1^PLACE PATIENT CARD HERE^UC^Empty block - to imprint embossed card - sized for printing 132 col, 8 lpi^1
	;;^UTILITY(U,$J,358.1,66,0)
	;;=FUTURE APPOINTMENTS - SAME DAY^^^0^0^50^7^^^1^TODAY'S LATTER APPOINTMENTS^UC^Data fields - appointments for latter in the same day^1
	;;^UTILITY(U,$J,358.1,67,0)
	;;=FUTURE APPTS - ALL^^^0^0^50^9^^^1^FUTURE APPOINTMENTS^UC^Data fields - list of patient's future appointments^1
	;;^UTILITY(U,$J,358.1,68,0)
	;;=FUTURE APPTS - SAME CLINIC^^^0^0^50^7^^^1^CLINIC'S FUTURE APPOINTMENTS^UC^Data fields - future appointments for the same clinic^1
	;;^UTILITY(U,$J,358.1,69,0)
	;;=HIDDEN SC TREATMENT QUESTIONS^^^170^60^46^2^^^2^^UC^Data fields - questions on SC of treatment - displayed only if applicable^1
	;;^UTILITY(U,$J,358.1,70,0)
	;;=OTHER NEW PROBLEMS^^^76^0^75^12^^^1^OTHER PROBLEMS^UC^Data Fields (w/o data) for adding problems not on the Clinic Common Prob. List^1
	;;^UTILITY(U,$J,358.1,71,0)
	;;=PHYSICIAN'S ORDERS^^^138^0^132^12^^^2^Physician's Orders:^^Data fields (w/o data) - for the doctor to indicate tests,consults,disposition^1
	;;^UTILITY(U,$J,358.1,73,0)
	;;=PROGRESS NOTES (UNSTRUCTURED)^^^151^0^132^11^^^2^^BUC^Data fields (w/o data) - for writting progress notes (Not in SOAP format)^1
	;;^UTILITY(U,$J,358.1,74,0)
	;;=SIGNATURE^^^75^0^132^5^^^2^^^space for signature, prints clinic name^1
	;;^UTILITY(U,$J,358.1,75,0)
	;;=SUPPLEMENTAL DEMOGRAPHICS^^^120^0^50^17^^^1^^BUC^Data fields - contains address, insurance, employment and marital data.^1
	;;^UTILITY(U,$J,358.1,76,0)
	;;=TYPE OF VISIT - 1994 CODES^^^0^0^43^21^^^1^^^Selection list - visit types with their CPT codes^1
	;;^UTILITY(U,$J,358.1,78,0)
	;;=VITAL SIGNS^^^0^0^132^4^^^1^Vital Signs:^^Data fields (w/o data) - to write in vital signs^1
	;;^UTILITY(U,$J,358.1,79,0)
	;;=YES/NO QUESTIONS^^^23^0^80^6^^^1^PLEASE ANSWER THESE QUESTIONS^UC^Selection list - for any yes/no questions^1
	;;^UTILITY(U,$J,358.1,80,0)
	;;=APPOINTMENT^7^^0^93^38^3^^^2^^UC^Contains the clinic & date/time of appointment.
	;;^UTILITY(U,$J,358.1,81,0)
	;;=ALLERGIES^7^^26^0^50^9^^^1^******  PATIENT ALLERGIES  ******^UC^Displays the patient's allergies and has space for allergies to be written in.
	;;^UTILITY(U,$J,358.1,82,0)
	;;=SUPPLEMENTAL DEMOGRAPHICS^7^^9^0^49^17^^^2^^BUC^Contains address, insurance, employment and marital data.
	;;^UTILITY(U,$J,358.1,83,0)
	;;=VITAL SIGNS^7^^5^51^79^4^^^2^Vital Signs:^^For writting in the patient's vital signs.^
	;;^UTILITY(U,$J,358.1,84,0)
	;;=BASIC DEMOGRAPHICS^7^^0^0^50^26^^^1^^BUC^Contains patient name,dob,sex,pid,SC conditions^
	;;^UTILITY(U,$J,358.1,85,0)
	;;=HIDDEN SC TREATMENT QUESTIONS^7^^78^0^46^2^^^2^^UC^Data fields - questions on SC of treatment - displayed only if applicable^
	;;^UTILITY(U,$J,358.1,86,0)
	;;=DIAGNOSIS CODES^7^^11^52^80^24^^^2^PLEASE CHECK OFF DIAGNOSIS TREATED THIS VISIT^UC^This block contains a list of ICD-9 diagnosis codes to select from.^
	;;^UTILITY(U,$J,358.1,87,0)
	;;=CPT CODES^7^^36^0^132^11^^^2^PLEASE CHECK PROCEDURES PERFORMED THIS VISIT^CU^Contains a list of CPT codes that can be selected.^
	;;^UTILITY(U,$J,358.1,88,0)
	;;=PROGRESS NOTES (SOAP)^7^^48^0^132^32^^^2^Progress Notes:   (  ) Attached  (  ) See Chart^^Patient progess notes in SOAP format.^

IBDEI00A
IBDEI00A	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.1,89,0)
	;;=PROGRESS NOTES (SOAP)^^^90^0^132^31^^^2^Progress Notes:   (  ) Attached  (  ) See Chart^^Data Fields (w/o data) - for writing progress notes in SOAP format^1

IBDEI00B
IBDEI00B	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.2,0,"GL")
	;;=^IBE(358.2,
	;;^DIC("B","IMP/EXP SELECTION LIST",358.2)
	;;=
	;;^DIC(358.2,"%D",0)
	;;=^^10^10^2940217^
	;;^DIC(358.2,"%D",1,0)
	;;= 
	;;^DIC(358.2,"%D",2,0)
	;;= 
	;;^DIC(358.2,"%D",3,0)
	;;= 
	;;^DIC(358.2,"%D",4,0)
	;;= 
	;;^DIC(358.2,"%D",5,0)
	;;= 
	;;^DIC(358.2,"%D",6,0)
	;;= 
	;;^DIC(358.2,"%D",7,0)
	;;= 
	;;^DIC(358.2,"%D",8,0)
	;;=This file is nearly identical to file #357.2 . It is used by the
	;;^DIC(358.2,"%D",9,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.2,"%D",10,0)
	;;=that is being imported or exported.
	;;^DD(358.2,0)
	;;=FIELD^^2^12
	;;^DD(358.2,0,"ID",.02)
	;;=W ""
	;;^DD(358.2,0,"ID",.11)
	;;=W ""
	;;^DD(358.2,0,"IX","B",358.2,.01)
	;;=
	;;^DD(358.2,0,"IX","C",358.2,.02)
	;;=
	;;^DD(358.2,0,"NM","IMP/EXP SELECTION LIST")
	;;=
	;;^DD(358.2,0,"PT",358.3,.03)
	;;=
	;;^DD(358.2,0,"PT",358.4,.03)
	;;=
	;;^DD(358.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.2,.01,1,0)
	;;=^.1
	;;^DD(358.2,.01,1,1,0)
	;;=358.2^B
	;;^DD(358.2,.01,1,1,1)
	;;=S ^IBE(358.2,"B",$E(X,1,30),DA)=""
	;;^DD(358.2,.01,1,1,2)
	;;=K ^IBE(358.2,"B",$E(X,1,30),DA)
	;;^DD(358.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.01,21,1,0)
	;;= 
	;;^DD(358.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(358.2,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.2,.01,"DT")
	;;=2921119
	;;^DD(358.2,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.2,.02,1,0)
	;;=^.1
	;;^DD(358.2,.02,1,1,0)
	;;=358.2^C
	;;^DD(358.2,.02,1,1,1)
	;;=S ^IBE(358.2,"C",$E(X,1,30),DA)=""
	;;^DD(358.2,.02,1,1,2)
	;;=K ^IBE(358.2,"C",$E(X,1,30),DA)
	;;^DD(358.2,.02,1,1,"DT")
	;;=2921207
	;;^DD(358.2,.02,3)
	;;=Enter the block that the selection list should appear in.
	;;^DD(358.2,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.02,21,1,0)
	;;=The block that the list appears on. The position of the selection list is
	;;^DD(358.2,.02,21,2,0)
	;;=relative to the block.
	;;^DD(358.2,.02,"DT")
	;;=2921207
	;;^DD(358.2,.05,0)
	;;=COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
	;;^DD(358.2,.05,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
	;;^DD(358.2,.05,3)
	;;=This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
	;;^DD(358.2,.05,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.05,21,1,0)
	;;= 
	;;^DD(358.2,.05,21,2,0)
	;;=The text that appears at the top of each column (NOT subcolumn).
	;;^DD(358.2,.05,"DT")
	;;=2930415
	;;^DD(358.2,.06,0)
	;;=COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.2,.06,.1)
	;;=HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.2,.06,3)
	;;=B=bold,U=underline,C=center. You can enter any combination of {B,U,C}.
	;;^DD(358.2,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.06,21,1,0)
	;;= 
	;;^DD(358.2,.06,21,2,0)
	;;=The column header can be give characteristics, such as centered and bold.
	;;^DD(358.2,.06,"DT")
	;;=2930616
	;;^DD(358.2,.07,0)
	;;=SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
	;;^DD(358.2,.07,.1)
	;;=HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
	;;^DD(358.2,.07,3)
	;;=How should the subcolumns be separated?
	;;^DD(358.2,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.07,21,1,0)
	;;= 
	;;^DD(358.2,.07,21,2,0)
	;;=What characters are used to separate the subcolumns.
	;;^DD(358.2,.07,"DT")
	;;=2930415

IBDEI00C
IBDEI00C	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.2,.08,0)
	;;=EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.2,.08,.1)
	;;=NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
	;;^DD(358.2,.08,3)
	;;=How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
	;;^DD(358.2,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.2,.08,21,1,0)
	;;= 
	;;^DD(358.2,.08,21,2,0)
	;;=Each entry on the list prints on only one line. However, if you want
	;;^DD(358.2,.08,21,3,0)
	;;=extra space to appear below each entry on the list then this field should
	;;^DD(358.2,.08,21,4,0)
	;;=be set to the number of blank lines desired.
	;;^DD(358.2,.08,"DT")
	;;=2930427
	;;^DD(358.2,.09,0)
	;;=GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.2,.09,.1)
	;;=HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.2,.09,3)
	;;=B=bold, C=center,U=underline. You can enter any combination of {B,C,U}
	;;^DD(358.2,.09,21,0)
	;;=^^1^1^2930401^^^
	;;^DD(358.2,.09,21,1,0)
	;;=This field determines the appearance of the group headers.
	;;^DD(358.2,.09,"DT")
	;;=2930616
	;;^DD(358.2,.11,0)
	;;=SELECTION ROUTINE^R*P358.6'^IBE(358.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.2,.11,3)
	;;=Enter the package interface used to obtain this list.
	;;^DD(358.2,.11,12)
	;;=Allows only available selection routines.
	;;^DD(358.2,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	;;^DD(358.2,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.11,21,1,0)
	;;= 
	;;^DD(358.2,.11,21,2,0)
	;;=This identifies the Package Interface that is used to fill the list.
	;;^DD(358.2,.11,"DT")
	;;=2930115
	;;^DD(358.2,.12,0)
	;;=UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
	;;^DD(358.2,.12,.1)
	;;=SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
	;;^DD(358.2,.12,3)
	;;=Should the items on the list be underlined?
	;;^DD(358.2,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.12,21,1,0)
	;;= 
	;;^DD(358.2,.12,21,2,0)
	;;=Answer yes if each entry on the list should be underlined.
	;;^DD(358.2,.12,"DT")
	;;=2930414
	;;^DD(358.2,.13,0)
	;;=NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.2,.13,.1)
	;;=HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
	;;^DD(358.2,.13,3)
	;;=
	;;^DD(358.2,.13,4)
	;;=D HELP5^IBDFU5
	;;^DD(358.2,.13,21,0)
	;;=^^6^6^2930527^
	;;^DD(358.2,.13,21,1,0)
	;;= 
	;;^DD(358.2,.13,21,2,0)
	;;=A selection list may be displayed in an area several columns wide. The
	;;^DD(358.2,.13,21,3,0)
	;;=starting position and height of each column may be specified. However, it
	;;^DD(358.2,.13,21,4,0)
	;;=is not necessary because defaults values will be used. The defaults used
	;;^DD(358.2,.13,21,6,0)
	;;=and that the entire block should be filled.
	;;^DD(358.2,.13,"DT")
	;;=2930802
	;;^DD(358.2,1,0)
	;;=LIST COLUMN^358.21I^^1;0
	;;^DD(358.2,1,21,0)
	;;=^^2^2^2930802^^^^
	;;^DD(358.2,1,21,1,0)
	;;=A column is a rectangular area that has the necessary width to display a
	;;^DD(358.2,1,21,2,0)
	;;=single item on the list.
	;;^DD(358.2,1,"DT")
	;;=2930802
	;;^DD(358.2,2,0)
	;;=SUBCOLUMN NUMBER^358.22I^^2;0
	;;^DD(358.2,2,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.2,2,21,1,0)
	;;= 
	;;^DD(358.2,2,21,2,0)
	;;=A subcolumn contains one field of the entry on the list. The subcolumn
	;;^DD(358.2,2,21,3,0)
	;;=order is the order, from left to right, that the subcolumns will appear
	;;^DD(358.2,2,21,4,0)
	;;=in.
	;;^DD(358.2,2,"DT")
	;;=2930413

IBDEI00D
IBDEI00D	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.21,0)
	;;=LIST COLUMN SUB-FIELD^^.04^4
	;;^DD(358.21,0,"ID","WRITE")
	;;=W "  COLUMN #",$P($G(^(0)),U)
	;;^DD(358.21,0,"IX","B",358.21,.01)
	;;=
	;;^DD(358.21,0,"NM","LIST COLUMN")
	;;=
	;;^DD(358.21,0,"UP")
	;;=358.2
	;;^DD(358.21,.01,0)
	;;=LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.01,1,0)
	;;=^.1
	;;^DD(358.21,.01,1,1,0)
	;;=358.21^B
	;;^DD(358.21,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.21,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.21,.01,3)
	;;=You can specify the position and height of up to 4 columns. Defaults will be used where needed.
	;;^DD(358.21,.01,21,0)
	;;=^^2^2^2930722^^
	;;^DD(358.21,.01,21,1,0)
	;;=The order that the columns will be filled. Column 1 will first be filled
	;;^DD(358.21,.01,21,2,0)
	;;=with items, then column 2, etc.
	;;^DD(358.21,.01,"DT")
	;;=2930802
	;;^DD(358.21,.02,0)
	;;=LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.02,.1)
	;;=WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,3)
	;;=What row should the column begin in?
	;;^DD(358.21,.02,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(358.21,.02,21,1,0)
	;;=The row, relative to the block, that the column should begin in. This is
	;;^DD(358.21,.02,21,2,0)
	;;=optional, since default values can be used.
	;;^DD(358.21,.02,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.21,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.02,"DT")
	;;=2930802
	;;^DD(358.21,.03,0)
	;;=LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.03,.1)
	;;=WHAT LIST COLUMN SHOULD THE COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,3)
	;;=At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
	;;^DD(358.21,.03,21,0)
	;;=^^3^3^2930715^^
	;;^DD(358.21,.03,21,1,0)
	;;= 
	;;^DD(358.21,.03,21,2,0)
	;;=The column (# of characters to the right) that the column should begin in,
	;;^DD(358.21,.03,21,3,0)
	;;=relative to the block. It is optional, since a default value can be used.
	;;^DD(358.21,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.21,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.03,"DT")
	;;=2930802
	;;^DD(358.21,.04,0)
	;;=LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.04,.1)
	;;=HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
	;;^DD(358.21,.04,3)
	;;=How many lines should the column cover?
	;;^DD(358.21,.04,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.21,.04,21,1,0)
	;;= 
	;;^DD(358.21,.04,21,2,0)
	;;=The number of lines the column should occupy. This is optional - if not

IBDEI00E
IBDEI00E	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.21,.04,21,3,0)
	;;=supplied the column will extend to the bottom of the block.
	;;^DD(358.21,.04,"DT")
	;;=2930802
	;;^DD(358.22,0)
	;;=SUBCOLUMN NUMBER SUB-FIELD^^.07^7
	;;^DD(358.22,0,"ID","WRITE")
	;;=D ID1^IBDFU5
	;;^DD(358.22,0,"IX","B",358.22,.01)
	;;=
	;;^DD(358.22,0,"NM","SUBCOLUMN NUMBER")
	;;=
	;;^DD(358.22,0,"UP")
	;;=358.2
	;;^DD(358.22,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.2,DA(1),2,"B",X))) X
	;;^DD(358.22,.01,.1)
	;;=Number of the subcolumn, subcolumns being numbered 1-6, left-to-right
	;;^DD(358.22,.01,1,0)
	;;=^.1
	;;^DD(358.22,.01,1,1,0)
	;;=358.22^B
	;;^DD(358.22,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.22,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.22,.01,3)
	;;=The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 6 subcolumns, numbered 1-6.
	;;^DD(358.22,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.01,21,1,0)
	;;= 
	;;^DD(358.22,.01,21,2,0)
	;;=The order that the subcolumn will appear on the form.
	;;^DD(358.22,.01,"DT")
	;;=2930413
	;;^DD(358.22,.02,0)
	;;=SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.22,.02,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
	;;^DD(358.22,.02,3)
	;;=What text should appear at the top of the subcolumn?
	;;^DD(358.22,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.02,21,1,0)
	;;= 
	;;^DD(358.22,.02,21,2,0)
	;;=The text that will appear at the top of the subcolumn.
	;;^DD(358.22,.02,"DT")
	;;=2930414
	;;^DD(358.22,.03,0)
	;;=SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.22,.03,.1)
	;;=HOW WIDE SHOULD THE SUBCOLUMN BE?
	;;^DD(358.22,.03,3)
	;;=How wide should the subcolumn be?
	;;^DD(358.22,.03,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.22,.03,21,1,0)
	;;= 
	;;^DD(358.22,.03,21,2,0)
	;;=The width of the subcolumn. If the subcolumn contains a MARKING AREA then
	;;^DD(358.22,.03,21,3,0)
	;;=the width of the MARKING AREA overrides what ever this is.
	;;^DD(358.22,.03,"DT")
	;;=2930414
	;;^DD(358.22,.04,0)
	;;=TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
	;;^DD(358.22,.04,.1)
	;;=SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
	;;^DD(358.22,.04,3)
	;;=Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
	;;^DD(358.22,.04,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.04,21,1,0)
	;;= 
	;;^DD(358.22,.04,21,2,0)
	;;=The subcolumn can contain either text, derived from what is returned by
	;;^DD(358.22,.04,21,3,0)
	;;=the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
	;;^DD(358.22,.04,21,4,0)
	;;=to select an entry on the list.
	;;^DD(358.22,.04,"DT")
	;;=2930428
	;;^DD(358.22,.05,0)
	;;=SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,(2*X)-1)="")!((X=1)&'$P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,17)) X
	;;^DD(358.22,.05,.1)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,3)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,4)
	;;=D HELP2^IBDFU5
	;;^DD(358.22,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.22,.05,21,1,0)
	;;= 
	;;^DD(358.22,.05,21,2,0)
	;;=The Package Interface returns a record, which is composed of fields. This
	;;^DD(358.22,.05,21,3,0)
	;;=identifies which field goes in the subcolumn.
	;;^DD(358.22,.05,"DT")
	;;=2930810
	;;^DD(358.22,.06,0)
	;;=MARKING AREA^P358.91'^IBE(358.91,^0;6^Q
	;;^DD(358.22,.06,.1)
	;;=TYPE OF MARKING AREA

IBDEI00F
IBDEI00F	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.22,.06,3)
	;;=What type of marking area should appear in the subcolumn?
	;;^DD(358.22,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.06,21,1,0)
	;;= 
	;;^DD(358.22,.06,21,2,0)
	;;=This identifies which MARKING AREA should go in the subcolumn.
	;;^DD(358.22,.06,"DT")
	;;=2930414
	;;^DD(358.22,.07,0)
	;;=ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
	;;^DD(358.22,.07,.1)
	;;=ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
	;;^DD(358.22,.07,3)
	;;=Is it okey to edit the text appearing in this subcolumn?
	;;^DD(358.22,.07,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.07,21,1,0)
	;;= 
	;;^DD(358.22,.07,21,2,0)
	;;=This determines whether or not the user, when selecting items to appear on
	;;^DD(358.22,.07,21,3,0)
	;;=the list, will be able to edit the text appearing in the subcolum. This is
	;;^DD(358.22,.07,21,4,0)
	;;=ignored if the subcolumn contains a MARKING AREA.
	;;^DD(358.22,.07,"DT")
	;;=2930428

IBDEI00G
IBDEI00G	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2)
	;;=^IBE(358.2,
	;;^UTILITY(U,$J,358.2,0)
	;;=IMP/EXP SELECTION LIST^358.2I^25^22
	;;^UTILITY(U,$J,358.2,1,0)
	;;=BUFFALO'S CPT CODES^10^^^^^1^1^^^1^0
	;;^UTILITY(U,$J,358.2,1,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,1,2,1,0)
	;;=1^^^2^^2
	;;^UTILITY(U,$J,358.2,1,2,2,0)
	;;=2^^5^1^1^^0
	;;^UTILITY(U,$J,358.2,1,2,3,0)
	;;=3^^33^1^2^^1
	;;^UTILITY(U,$J,358.2,2,0)
	;;=DIAGNOSIS CODES^17^^^^^3^^UC^^21^1
	;;^UTILITY(U,$J,358.2,2,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,2,2,1,0)
	;;=1^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,2,2,2,0)
	;;=2^DIAGNOSIS^27^1^2^^1
	;;^UTILITY(U,$J,358.2,2,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,3,0)
	;;=CPT CODES^18^^^^^3^^CU^^1^1
	;;^UTILITY(U,$J,358.2,3,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,3,2,1,0)
	;;=1^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,3,2,2,0)
	;;=2^PROCEDURE^32^1^2^^1
	;;^UTILITY(U,$J,358.2,3,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,4,0)
	;;=TYPE OF VISIT^21^^^^^3^^CU^^1^1
	;;^UTILITY(U,$J,358.2,4,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,4,2,1,0)
	;;=1^VISIT (mark one only)^32^1^2^^1
	;;^UTILITY(U,$J,358.2,4,2,2,0)
	;;=2^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,4,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,7,0)
	;;=DIAGNOSIS CODES^33^^^^^3^0^UC^^21^1
	;;^UTILITY(U,$J,358.2,7,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,7,2,1,0)
	;;=1^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,7,2,2,0)
	;;=2^DIAGNOSIS^31^1^2^^1
	;;^UTILITY(U,$J,358.2,7,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,8,0)
	;;=CPT CODES^37^^^^^3^0^CU^^1^1
	;;^UTILITY(U,$J,358.2,8,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,8,2,1,0)
	;;=1^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,8,2,2,0)
	;;=2^PROCEDURE^33^1^2^^1
	;;^UTILITY(U,$J,358.2,8,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,9,0)
	;;=TYPE OF VISIT^40^^^^^3^^CU^^1^1
	;;^UTILITY(U,$J,358.2,9,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,9,2,1,0)
	;;=1^VISIT (mark one only)^32^1^2^^1
	;;^UTILITY(U,$J,358.2,9,2,2,0)
	;;=2^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,9,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,10,0)
	;;=CPT CODES^44^^^^^3^0^CU^^1^1
	;;^UTILITY(U,$J,358.2,10,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,10,2,1,0)
	;;=1^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,10,2,2,0)
	;;=2^PROCEDURE^33^1^2^^1
	;;^UTILITY(U,$J,358.2,10,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,11,0)
	;;=ACTIVE PROBLEMS^46^^^^^3^0^CU^^27^1^1
	;;^UTILITY(U,$J,358.2,11,1,0)
	;;=^357.21I^1^1
	;;^UTILITY(U,$J,358.2,11,1,1,0)
	;;=1^3^0^5
	;;^UTILITY(U,$J,358.2,11,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,11,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,11,2,2,0)
	;;=2^RESOLVED^11^1^1^^0
	;;^UTILITY(U,$J,358.2,11,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^48^1^1^^0
	;;^UTILITY(U,$J,358.2,11,2,4,0)
	;;=4^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,11,2,5,0)
	;;=5^S/C^3^1^1^^0
	;;^UTILITY(U,$J,358.2,12,0)
	;;=OTHER NEW PROBLEMS^47^^^^^3^1^CU^^27^1
	;;^UTILITY(U,$J,358.2,12,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,12,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,12,2,2,0)
	;;=2^ A   I^^2^^4
	;;^UTILITY(U,$J,358.2,12,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^96^1^1^^0
	;;^UTILITY(U,$J,358.2,12,2,4,0)
	;;=4^ONS/RES^13^1^1^^0
	;;^UTILITY(U,$J,358.2,12,2,5,0)
	;;=5^S/C^^2^^5
	;;^UTILITY(U,$J,358.2,13,0)
	;;=CLINC COMMON PROBLEM LIST^48^^^^^3^0^CU^^29^1
	;;^UTILITY(U,$J,358.2,13,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,13,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,13,2,2,0)
	;;=2^ A   I^^2^^4
	;;^UTILITY(U,$J,358.2,13,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^57^1^2^^1
	;;^UTILITY(U,$J,358.2,13,2,4,0)
	;;=4^CODE^7^1^3^^0
	;;^UTILITY(U,$J,358.2,13,2,5,0)
	;;=5^S/C^^2^^5

IBDEI00H
IBDEI00H	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,14,0)
	;;=TYPE OF VISIT^52^^^^^3^^CU^^1^1
	;;^UTILITY(U,$J,358.2,14,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,14,2,1,0)
	;;=1^VISIT (mark one only)^32^1^2^^1
	;;^UTILITY(U,$J,358.2,14,2,2,0)
	;;=2^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,14,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,15,0)
	;;=ACTIVE PROBLEMS^53^^^^^3^0^CU^^27^0^1
	;;^UTILITY(U,$J,358.2,15,1,0)
	;;=^357.21I^1^1
	;;^UTILITY(U,$J,358.2,15,1,1,0)
	;;=1^3^0^5
	;;^UTILITY(U,$J,358.2,15,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,15,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,15,2,2,0)
	;;=2^RESOLVED^11^1^1^^0
	;;^UTILITY(U,$J,358.2,15,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^40^1^1^^0
	;;^UTILITY(U,$J,358.2,15,2,4,0)
	;;=4^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,15,2,5,0)
	;;=5^S/C^3^1^1^^0
	;;^UTILITY(U,$J,358.2,16,0)
	;;=BUFFALO'S CPT CODES^58^^^^^1^1^^^1^0
	;;^UTILITY(U,$J,358.2,16,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,16,2,1,0)
	;;=1^^^2^^2
	;;^UTILITY(U,$J,358.2,16,2,2,0)
	;;=2^^5^1^1^^0
	;;^UTILITY(U,$J,358.2,16,2,3,0)
	;;=3^^33^1^2^^1
	;;^UTILITY(U,$J,358.2,17,0)
	;;=CLINC COMMON PROBLEM LIST^62^^^^^3^0^CU^^29^1
	;;^UTILITY(U,$J,358.2,17,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,17,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,17,2,2,0)
	;;=2^ A   I^^2^^4
	;;^UTILITY(U,$J,358.2,17,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^44^1^2^^1
	;;^UTILITY(U,$J,358.2,17,2,4,0)
	;;=4^CODE^7^1^3^^0
	;;^UTILITY(U,$J,358.2,17,2,5,0)
	;;=5^S/C^^2^^5
	;;^UTILITY(U,$J,358.2,18,0)
	;;=CPT CODES^63^^^^^3^0^CU^^1^1
	;;^UTILITY(U,$J,358.2,18,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,18,2,1,0)
	;;=1^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,18,2,2,0)
	;;=2^PROCEDURE^33^1^2^^1
	;;^UTILITY(U,$J,358.2,18,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,19,0)
	;;=DIAGNOSIS CODES^64^^^^^3^0^UC^^21^1
	;;^UTILITY(U,$J,358.2,19,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,19,2,1,0)
	;;=1^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,19,2,2,0)
	;;=2^DIAGNOSIS^31^1^2^^1
	;;^UTILITY(U,$J,358.2,19,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,20,0)
	;;=OTHER NEW PROBLEMS^70^^^^^3^1^CU^^27^1
	;;^UTILITY(U,$J,358.2,20,2,0)
	;;=^357.22I^5^5
	;;^UTILITY(U,$J,358.2,20,2,1,0)
	;;=1^ P   S^^2^^3
	;;^UTILITY(U,$J,358.2,20,2,2,0)
	;;=2^ A   I^^2^^4
	;;^UTILITY(U,$J,358.2,20,2,3,0)
	;;=3^PROBLEM NARRATIVE/NOTES^44^1^1^^0
	;;^UTILITY(U,$J,358.2,20,2,4,0)
	;;=4^ONS/RES^8^1^1^^0
	;;^UTILITY(U,$J,358.2,20,2,5,0)
	;;=5^S/C^^2^^5
	;;^UTILITY(U,$J,358.2,21,0)
	;;=TYPE OF VISIT^76^^^^^3^^CU^^1^1
	;;^UTILITY(U,$J,358.2,21,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,21,2,1,0)
	;;=1^VISIT (mark one only)^32^1^2^^1
	;;^UTILITY(U,$J,358.2,21,2,2,0)
	;;=2^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,21,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,23,0)
	;;=YES/NO QUESTIONS^79^^^^^2^0^CUB^^27^0
	;;^UTILITY(U,$J,358.2,23,1,0)
	;;=^357.21^1^1
	;;^UTILITY(U,$J,358.2,23,1,1,0)
	;;=1^2
	;;^UTILITY(U,$J,358.2,23,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,23,2,1,0)
	;;=1^^60^1^1^^1
	;;^UTILITY(U,$J,358.2,23,2,2,0)
	;;=2^^^2^^6
	;;^UTILITY(U,$J,358.2,23,2,3,0)
	;;=3^^^2^^7
	;;^UTILITY(U,$J,358.2,24,0)
	;;=DIAGNOSIS CODES^86^^^  ^^3^0^CU^^21^1
	;;^UTILITY(U,$J,358.2,24,1,0)
	;;=^357.21I^1^1
	;;^UTILITY(U,$J,358.2,24,1,1,0)
	;;=1^1
	;;^UTILITY(U,$J,358.2,24,2,0)
	;;=^357.22I^3^3
	;;^UTILITY(U,$J,358.2,24,2,1,0)
	;;=1^CODE^7^1^1^^0
	;;^UTILITY(U,$J,358.2,24,2,2,0)
	;;=2^DIAGNOSIS^27^1^2^^1
	;;^UTILITY(U,$J,358.2,24,2,3,0)
	;;=3^x^^2^^1
	;;^UTILITY(U,$J,358.2,25,0)
	;;=CPT CODES^87^^^  ^^3^0^CU^^1^1
	;;^UTILITY(U,$J,358.2,25,1,0)
	;;=^357.21I^1^1
	;;^UTILITY(U,$J,358.2,25,1,1,0)
	;;=1^1
	;;^UTILITY(U,$J,358.2,25,2,0)
	;;=^357.22I^3^3

IBDEI00I
IBDEI00I	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.2,25,2,1,0)
	;;=1^CODE^5^1^1^^0
	;;^UTILITY(U,$J,358.2,25,2,2,0)
	;;=2^PROCEDURE^33^1^2^^1
	;;^UTILITY(U,$J,358.2,25,2,3,0)
	;;=3^x^^2^^1

IBDEI00J
IBDEI00J	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.3,0,"GL")
	;;=^IBE(358.3,
	;;^DIC("B","IMP/EXP SELECTION",358.3)
	;;=
	;;^DIC(358.3,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.3,"%D",1,0)
	;;= 
	;;^DIC(358.3,"%D",2,0)
	;;=This file is nearly identical to file #357.3. It is used by the
	;;^DIC(358.3,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.3,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.3,0)
	;;=FIELD^^1^5
	;;^DD(358.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"IX","APO",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","APO1",358.3,.04)
	;;=
	;;^DD(358.3,0,"IX","APO2",358.3,.05)
	;;=
	;;^DD(358.3,0,"IX","B",358.3,.01)
	;;=
	;;^DD(358.3,0,"IX","C",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","D",358.3,.04)
	;;=
	;;^DD(358.3,0,"NM","IMP/EXP SELECTION")
	;;=
	;;^DD(358.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.3,.01,1,0)
	;;=^.1
	;;^DD(358.3,.01,1,1,0)
	;;=358.3^B
	;;^DD(358.3,.01,1,1,1)
	;;=S ^IBE(358.3,"B",$E(X,1,30),DA)=""
	;;^DD(358.3,.01,1,1,2)
	;;=K ^IBE(358.3,"B",$E(X,1,30),DA)
	;;^DD(358.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(358.3,.01,21,1,0)
	;;= 
	;;^DD(358.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(358.3,.01,"DT")
	;;=2921119
	;;^DD(358.3,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.3,.03,1,0)
	;;=^.1
	;;^DD(358.3,.03,1,1,0)
	;;=358.3^C
	;;^DD(358.3,.03,1,1,1)
	;;=S ^IBE(358.3,"C",$E(X,1,30),DA)=""
	;;^DD(358.3,.03,1,1,2)
	;;=K ^IBE(358.3,"C",$E(X,1,30),DA)
	;;^DD(358.3,.03,1,1,"DT")
	;;=2921127
	;;^DD(358.3,.03,1,2,0)
	;;=358.3^APO^MUMPS
	;;^DD(358.3,.03,1,2,1)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,4) S ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
	;;^DD(358.3,.03,1,2,2)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,4) K ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
	;;^DD(358.3,.03,1,2,"DT")
	;;=2921222
	;;^DD(358.3,.03,21,0)
	;;=^^2^2^2921215^
	;;^DD(358.3,.03,21,1,0)
	;;= 
	;;^DD(358.3,.03,21,2,0)
	;;=Identifies the selection list that this selection belongs on.
	;;^DD(358.3,.03,"DT")
	;;=2921222
	;;^DD(358.3,.04,0)
	;;=SELECTION GROUP^RP358.4^IBE(358.4,^0;4^Q
	;;^DD(358.3,.04,1,0)
	;;=^.1
	;;^DD(358.3,.04,1,1,0)
	;;=358.3^D
	;;^DD(358.3,.04,1,1,1)
	;;=S ^IBE(358.3,"D",$E(X,1,30),DA)=""
	;;^DD(358.3,.04,1,1,2)
	;;=K ^IBE(358.3,"D",$E(X,1,30),DA)
	;;^DD(358.3,.04,1,1,"DT")
	;;=2921221
	;;^DD(358.3,.04,1,2,0)
	;;=358.3^APO1^MUMPS
	;;^DD(358.3,.04,1,2,1)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,3) S ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
	;;^DD(358.3,.04,1,2,2)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,3) K ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
	;;^DD(358.3,.04,1,2,"DT")
	;;=2921222
	;;^DD(358.3,.04,3)
	;;=Entries on a list are grouped under group headers - under which header should this entry appear?
	;;^DD(358.3,.04,21,0)
	;;=^^3^3^2930607^
	;;^DD(358.3,.04,21,1,0)
	;;= 
	;;^DD(358.3,.04,21,2,0)
	;;=The SELECTION GROUP that the selection belongs to.The selection will
	;;^DD(358.3,.04,21,3,0)
	;;=appear under the group header on the form.
	;;^DD(358.3,.04,"DT")
	;;=2921222
	;;^DD(358.3,.05,0)
	;;=PRINT ORDER WITHIN GROUP^RNJ6,2^^0;5^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X

IBDEI00K
IBDEI00K	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.3,.05,1,0)
	;;=^.1
	;;^DD(358.3,.05,1,1,0)
	;;=358.3^APO2^MUMPS
	;;^DD(358.3,.05,1,1,1)
	;;=I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) S ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
	;;^DD(358.3,.05,1,1,2)
	;;=I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) K ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
	;;^DD(358.3,.05,1,1,"DT")
	;;=2921222
	;;^DD(358.3,.05,3)
	;;=Type a Number between 0 and 999.99, 2 Decimal Digits
	;;^DD(358.3,.05,21,0)
	;;=^^2^2^2921229^^^^
	;;^DD(358.3,.05,21,1,0)
	;;=Determines the order that this selection entry will appear in under the
	;;^DD(358.3,.05,21,2,0)
	;;=header for the selection group.
	;;^DD(358.3,.05,"DT")
	;;=2921229
	;;^DD(358.3,1,0)
	;;=SUBCOLUMN VALUE^358.31IA^^1;0
	;;^DD(358.3,1,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.3,1,21,1,0)
	;;= 
	;;^DD(358.3,1,21,2,0)
	;;=The selection can be composed of multiple fields. Each field occupies its
	;;^DD(358.3,1,21,3,0)
	;;=own subcolumn on the form.
	;;^DD(358.31,0)
	;;=SUBCOLUMN VALUE SUB-FIELD^^.02^2
	;;^DD(358.31,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.31,0,"IX","B",358.31,.01)
	;;=
	;;^DD(358.31,0,"NM","SUBCOLUMN VALUE")
	;;=
	;;^DD(358.31,0,"UP")
	;;=358.3
	;;^DD(358.31,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.3,DA(1),1,"B",X))) X
	;;^DD(358.31,.01,1,0)
	;;=^.1
	;;^DD(358.31,.01,1,1,0)
	;;=358.31^B
	;;^DD(358.31,.01,1,1,1)
	;;=S ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.31,.01,1,1,2)
	;;=K ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.31,.01,3)
	;;=Which subcolumn is the value for?
	;;^DD(358.31,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.01,21,1,0)
	;;= 
	;;^DD(358.31,.01,21,2,0)
	;;=The order that the subcolumn should appear on the form.
	;;^DD(358.31,.01,"DT")
	;;=2930402
	;;^DD(358.31,.02,0)
	;;=SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.31,.02,3)
	;;=What value should go in the subcolumn?
	;;^DD(358.31,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.02,21,1,0)
	;;= 
	;;^DD(358.31,.02,21,2,0)
	;;=The text that should appear in the subcolumn.
	;;^DD(358.31,.02,"DT")
	;;=2930401

IBDEI00L
IBDEI00L	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3)
	;;=^IBE(358.3,
	;;^UTILITY(U,$J,358.3,0)
	;;=IMP/EXP SELECTION^358.3I^60^60
	;;^UTILITY(U,$J,358.3,1,0)
	;;=99201^^4^7^1
	;;^UTILITY(U,$J,358.3,1,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,1,1,1,0)
	;;=1^Brief Visit         (1-15 Min)
	;;^UTILITY(U,$J,358.3,1,1,2,0)
	;;=2^99201
	;;^UTILITY(U,$J,358.3,2,0)
	;;=99202^^4^7^2
	;;^UTILITY(U,$J,358.3,2,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,2,1,1,0)
	;;=1^Limited Exam        (16-25 Min)
	;;^UTILITY(U,$J,358.3,2,1,2,0)
	;;=2^99202
	;;^UTILITY(U,$J,358.3,3,0)
	;;=99203^^4^7^3
	;;^UTILITY(U,$J,358.3,3,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,3,1,1,0)
	;;=1^Intermediate Exam   (26-35 Min)
	;;^UTILITY(U,$J,358.3,3,1,2,0)
	;;=2^99203
	;;^UTILITY(U,$J,358.3,4,0)
	;;=99204^^4^7^4
	;;^UTILITY(U,$J,358.3,4,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,4,1,1,0)
	;;=1^Extended Exam       (36-50 Min)
	;;^UTILITY(U,$J,358.3,4,1,2,0)
	;;=2^99204
	;;^UTILITY(U,$J,358.3,5,0)
	;;=99205^^4^7^5
	;;^UTILITY(U,$J,358.3,5,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,5,1,1,0)
	;;=1^Comprehensive Exam  (51-60+ Min)
	;;^UTILITY(U,$J,358.3,5,1,2,0)
	;;=2^99205
	;;^UTILITY(U,$J,358.3,6,0)
	;;=99211^^4^8^1
	;;^UTILITY(U,$J,358.3,6,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,6,1,1,0)
	;;=1^Brief Exam          (1-5 Min)
	;;^UTILITY(U,$J,358.3,6,1,2,0)
	;;=2^99211
	;;^UTILITY(U,$J,358.3,7,0)
	;;=99212^^4^8^2
	;;^UTILITY(U,$J,358.3,7,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,7,1,1,0)
	;;=1^Limited Exam        (6-10 Min)
	;;^UTILITY(U,$J,358.3,7,1,2,0)
	;;=2^99212
	;;^UTILITY(U,$J,358.3,8,0)
	;;=99213^^4^8^3
	;;^UTILITY(U,$J,358.3,8,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,8,1,1,0)
	;;=1^Intermediate Exam   (11-19 Min)
	;;^UTILITY(U,$J,358.3,8,1,2,0)
	;;=2^99213
	;;^UTILITY(U,$J,358.3,9,0)
	;;=99214^^4^8^4
	;;^UTILITY(U,$J,358.3,9,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,9,1,1,0)
	;;=1^Extended Exam       (20-30 Min)
	;;^UTILITY(U,$J,358.3,9,1,2,0)
	;;=2^99214
	;;^UTILITY(U,$J,358.3,10,0)
	;;=99215^^4^8^5
	;;^UTILITY(U,$J,358.3,10,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,10,1,1,0)
	;;=1^Comprehensive Exam  (31-40+ Min)
	;;^UTILITY(U,$J,358.3,10,1,2,0)
	;;=2^99215
	;;^UTILITY(U,$J,358.3,11,0)
	;;=99241^^4^9^1
	;;^UTILITY(U,$J,358.3,11,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,11,1,1,0)
	;;=1^Brief Visit         (1-20 Min)
	;;^UTILITY(U,$J,358.3,11,1,2,0)
	;;=2^99241
	;;^UTILITY(U,$J,358.3,12,0)
	;;=99242^^4^9^2
	;;^UTILITY(U,$J,358.3,12,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,12,1,1,0)
	;;=1^Limited Visit       (21-35 Min)
	;;^UTILITY(U,$J,358.3,12,1,2,0)
	;;=2^99242
	;;^UTILITY(U,$J,358.3,13,0)
	;;=99243^^4^9^3
	;;^UTILITY(U,$J,358.3,13,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,13,1,1,0)
	;;=1^Intermediate Visit  (35-50 Min)
	;;^UTILITY(U,$J,358.3,13,1,2,0)
	;;=2^99243
	;;^UTILITY(U,$J,358.3,14,0)
	;;=99244^^4^9^4
	;;^UTILITY(U,$J,358.3,14,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,14,1,1,0)
	;;=1^Extended Visit      (51-60 Min)
	;;^UTILITY(U,$J,358.3,14,1,2,0)
	;;=2^99244
	;;^UTILITY(U,$J,358.3,15,0)
	;;=99245^^4^9^5
	;;^UTILITY(U,$J,358.3,15,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,15,1,1,0)
	;;=1^Comprehensive Visit (71-80+ Min)
	;;^UTILITY(U,$J,358.3,15,1,2,0)
	;;=2^99245
	;;^UTILITY(U,$J,358.3,16,0)
	;;=99201^^9^18^1
	;;^UTILITY(U,$J,358.3,16,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,16,1,1,0)
	;;=1^Brief Visit         (1-15 Min)
	;;^UTILITY(U,$J,358.3,16,1,2,0)
	;;=2^99201
	;;^UTILITY(U,$J,358.3,17,0)
	;;=99202^^9^18^2
	;;^UTILITY(U,$J,358.3,17,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,17,1,1,0)
	;;=1^Limited Exam        (16-25 Min)

IBDEI00M
IBDEI00M	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,17,1,2,0)
	;;=2^99202
	;;^UTILITY(U,$J,358.3,18,0)
	;;=99203^^9^18^3
	;;^UTILITY(U,$J,358.3,18,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,18,1,1,0)
	;;=1^Intermediate Exam   (26-35 Min)
	;;^UTILITY(U,$J,358.3,18,1,2,0)
	;;=2^99203
	;;^UTILITY(U,$J,358.3,19,0)
	;;=99204^^9^18^4
	;;^UTILITY(U,$J,358.3,19,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,19,1,1,0)
	;;=1^Extended Exam       (36-50 Min)
	;;^UTILITY(U,$J,358.3,19,1,2,0)
	;;=2^99204
	;;^UTILITY(U,$J,358.3,20,0)
	;;=99205^^9^18^5
	;;^UTILITY(U,$J,358.3,20,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,20,1,1,0)
	;;=1^Comprehensive Exam  (51-60+ Min)
	;;^UTILITY(U,$J,358.3,20,1,2,0)
	;;=2^99205
	;;^UTILITY(U,$J,358.3,21,0)
	;;=99211^^9^19^1
	;;^UTILITY(U,$J,358.3,21,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,21,1,1,0)
	;;=1^Brief Exam          (1-5 Min)
	;;^UTILITY(U,$J,358.3,21,1,2,0)
	;;=2^99211
	;;^UTILITY(U,$J,358.3,22,0)
	;;=99212^^9^19^2
	;;^UTILITY(U,$J,358.3,22,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,22,1,1,0)
	;;=1^Limited Exam        (6-10 Min)
	;;^UTILITY(U,$J,358.3,22,1,2,0)
	;;=2^99212
	;;^UTILITY(U,$J,358.3,23,0)
	;;=99213^^9^19^3
	;;^UTILITY(U,$J,358.3,23,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,23,1,1,0)
	;;=1^Intermediate Exam   (11-19 Min)
	;;^UTILITY(U,$J,358.3,23,1,2,0)
	;;=2^99213
	;;^UTILITY(U,$J,358.3,24,0)
	;;=99214^^9^19^4
	;;^UTILITY(U,$J,358.3,24,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,24,1,1,0)
	;;=1^Extended Exam       (20-30 Min)
	;;^UTILITY(U,$J,358.3,24,1,2,0)
	;;=2^99214
	;;^UTILITY(U,$J,358.3,25,0)
	;;=99215^^9^19^5
	;;^UTILITY(U,$J,358.3,25,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,25,1,1,0)
	;;=1^Comprehensive Exam  (31-40+ Min)
	;;^UTILITY(U,$J,358.3,25,1,2,0)
	;;=2^99215
	;;^UTILITY(U,$J,358.3,26,0)
	;;=99241^^9^20^1
	;;^UTILITY(U,$J,358.3,26,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,26,1,1,0)
	;;=1^Brief Visit         (1-20 Min)
	;;^UTILITY(U,$J,358.3,26,1,2,0)
	;;=2^99241
	;;^UTILITY(U,$J,358.3,27,0)
	;;=99242^^9^20^2
	;;^UTILITY(U,$J,358.3,27,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,27,1,1,0)
	;;=1^Limited Visit       (21-35 Min)
	;;^UTILITY(U,$J,358.3,27,1,2,0)
	;;=2^99242
	;;^UTILITY(U,$J,358.3,28,0)
	;;=99243^^9^20^3
	;;^UTILITY(U,$J,358.3,28,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,28,1,1,0)
	;;=1^Intermediate Visit  (35-50 Min)
	;;^UTILITY(U,$J,358.3,28,1,2,0)
	;;=2^99243
	;;^UTILITY(U,$J,358.3,29,0)
	;;=99244^^9^20^4
	;;^UTILITY(U,$J,358.3,29,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,29,1,1,0)
	;;=1^Extended Visit      (51-60 Min)
	;;^UTILITY(U,$J,358.3,29,1,2,0)
	;;=2^99244
	;;^UTILITY(U,$J,358.3,30,0)
	;;=99245^^9^20^5
	;;^UTILITY(U,$J,358.3,30,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,30,1,1,0)
	;;=1^Comprehensive Visit (71-80+ Min)
	;;^UTILITY(U,$J,358.3,30,1,2,0)
	;;=2^99245
	;;^UTILITY(U,$J,358.3,31,0)
	;;=99201^^14^24^1
	;;^UTILITY(U,$J,358.3,31,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,31,1,1,0)
	;;=1^Brief Visit         (1-15 Min)
	;;^UTILITY(U,$J,358.3,31,1,2,0)
	;;=2^99201
	;;^UTILITY(U,$J,358.3,32,0)
	;;=99202^^14^24^2
	;;^UTILITY(U,$J,358.3,32,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,32,1,1,0)
	;;=1^Limited Exam        (16-25 Min)
	;;^UTILITY(U,$J,358.3,32,1,2,0)
	;;=2^99202
	;;^UTILITY(U,$J,358.3,33,0)
	;;=99203^^14^24^3
	;;^UTILITY(U,$J,358.3,33,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,33,1,1,0)
	;;=1^Intermediate Exam   (26-35 Min)
	;;^UTILITY(U,$J,358.3,33,1,2,0)
	;;=2^99203
	;;^UTILITY(U,$J,358.3,34,0)
	;;=99204^^14^24^4
	;;^UTILITY(U,$J,358.3,34,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,34,1,1,0)
	;;=1^Extended Exam       (36-50 Min)

IBDEI00N
IBDEI00N	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,34,1,2,0)
	;;=2^99204
	;;^UTILITY(U,$J,358.3,35,0)
	;;=99205^^14^24^5
	;;^UTILITY(U,$J,358.3,35,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,35,1,1,0)
	;;=1^Comprehensive Exam  (51-60+ Min)
	;;^UTILITY(U,$J,358.3,35,1,2,0)
	;;=2^99205
	;;^UTILITY(U,$J,358.3,36,0)
	;;=99211^^14^25^1
	;;^UTILITY(U,$J,358.3,36,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,36,1,1,0)
	;;=1^Brief Exam          (1-5 Min)
	;;^UTILITY(U,$J,358.3,36,1,2,0)
	;;=2^99211
	;;^UTILITY(U,$J,358.3,37,0)
	;;=99212^^14^25^2
	;;^UTILITY(U,$J,358.3,37,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,37,1,1,0)
	;;=1^Limited Exam        (6-10 Min)
	;;^UTILITY(U,$J,358.3,37,1,2,0)
	;;=2^99212
	;;^UTILITY(U,$J,358.3,38,0)
	;;=99213^^14^25^3
	;;^UTILITY(U,$J,358.3,38,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,38,1,1,0)
	;;=1^Intermediate Exam   (11-19 Min)
	;;^UTILITY(U,$J,358.3,38,1,2,0)
	;;=2^99213
	;;^UTILITY(U,$J,358.3,39,0)
	;;=99214^^14^25^4
	;;^UTILITY(U,$J,358.3,39,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,39,1,1,0)
	;;=1^Extended Exam       (20-30 Min)
	;;^UTILITY(U,$J,358.3,39,1,2,0)
	;;=2^99214
	;;^UTILITY(U,$J,358.3,40,0)
	;;=99215^^14^25^5
	;;^UTILITY(U,$J,358.3,40,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,40,1,1,0)
	;;=1^Comprehensive Exam  (31-40+ Min)
	;;^UTILITY(U,$J,358.3,40,1,2,0)
	;;=2^99215
	;;^UTILITY(U,$J,358.3,41,0)
	;;=99241^^14^26^1
	;;^UTILITY(U,$J,358.3,41,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,41,1,1,0)
	;;=1^Brief Visit         (1-20 Min)
	;;^UTILITY(U,$J,358.3,41,1,2,0)
	;;=2^99241
	;;^UTILITY(U,$J,358.3,42,0)
	;;=99242^^14^26^2
	;;^UTILITY(U,$J,358.3,42,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,42,1,1,0)
	;;=1^Limited Visit       (21-35 Min)
	;;^UTILITY(U,$J,358.3,42,1,2,0)
	;;=2^99242
	;;^UTILITY(U,$J,358.3,43,0)
	;;=99243^^14^26^3
	;;^UTILITY(U,$J,358.3,43,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,43,1,1,0)
	;;=1^Intermediate Visit  (35-50 Min)
	;;^UTILITY(U,$J,358.3,43,1,2,0)
	;;=2^99243
	;;^UTILITY(U,$J,358.3,44,0)
	;;=99244^^14^26^4
	;;^UTILITY(U,$J,358.3,44,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,44,1,1,0)
	;;=1^Extended Visit      (51-60 Min)
	;;^UTILITY(U,$J,358.3,44,1,2,0)
	;;=2^99244
	;;^UTILITY(U,$J,358.3,45,0)
	;;=99245^^14^26^5
	;;^UTILITY(U,$J,358.3,45,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,45,1,1,0)
	;;=1^Comprehensive Visit (71-80+ Min)
	;;^UTILITY(U,$J,358.3,45,1,2,0)
	;;=2^99245
	;;^UTILITY(U,$J,358.3,46,0)
	;;=99201^^21^31^1
	;;^UTILITY(U,$J,358.3,46,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,46,1,1,0)
	;;=1^Brief Visit         (1-15 Min)
	;;^UTILITY(U,$J,358.3,46,1,2,0)
	;;=2^99201
	;;^UTILITY(U,$J,358.3,47,0)
	;;=99202^^21^31^2
	;;^UTILITY(U,$J,358.3,47,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,47,1,1,0)
	;;=1^Limited Exam        (16-25 Min)
	;;^UTILITY(U,$J,358.3,47,1,2,0)
	;;=2^99202
	;;^UTILITY(U,$J,358.3,48,0)
	;;=99203^^21^31^3
	;;^UTILITY(U,$J,358.3,48,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,48,1,1,0)
	;;=1^Intermediate Exam   (26-35 Min)
	;;^UTILITY(U,$J,358.3,48,1,2,0)
	;;=2^99203
	;;^UTILITY(U,$J,358.3,49,0)
	;;=99204^^21^31^4
	;;^UTILITY(U,$J,358.3,49,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,49,1,1,0)
	;;=1^Extended Exam       (36-50 Min)
	;;^UTILITY(U,$J,358.3,49,1,2,0)
	;;=2^99204
	;;^UTILITY(U,$J,358.3,50,0)
	;;=99205^^21^31^5
	;;^UTILITY(U,$J,358.3,50,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,50,1,1,0)
	;;=1^Comprehensive Exam  (51-60+ Min)
	;;^UTILITY(U,$J,358.3,50,1,2,0)
	;;=2^99205
	;;^UTILITY(U,$J,358.3,51,0)
	;;=99211^^21^32^1
	;;^UTILITY(U,$J,358.3,51,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,51,1,1,0)
	;;=1^Brief Exam          (1-5 Min)

IBDEI00O
IBDEI00O	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.3,51,1,2,0)
	;;=2^99211
	;;^UTILITY(U,$J,358.3,52,0)
	;;=99212^^21^32^2
	;;^UTILITY(U,$J,358.3,52,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,52,1,1,0)
	;;=1^Limited Exam        (6-10 Min)
	;;^UTILITY(U,$J,358.3,52,1,2,0)
	;;=2^99212
	;;^UTILITY(U,$J,358.3,53,0)
	;;=99213^^21^32^3
	;;^UTILITY(U,$J,358.3,53,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,53,1,1,0)
	;;=1^Intermediate Exam   (11-19 Min)
	;;^UTILITY(U,$J,358.3,53,1,2,0)
	;;=2^99213
	;;^UTILITY(U,$J,358.3,54,0)
	;;=99214^^21^32^4
	;;^UTILITY(U,$J,358.3,54,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,54,1,1,0)
	;;=1^Extended Exam       (20-30 Min)
	;;^UTILITY(U,$J,358.3,54,1,2,0)
	;;=2^99214
	;;^UTILITY(U,$J,358.3,55,0)
	;;=99215^^21^32^5
	;;^UTILITY(U,$J,358.3,55,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,55,1,1,0)
	;;=1^Comprehensive Exam  (31-40+ Min)
	;;^UTILITY(U,$J,358.3,55,1,2,0)
	;;=2^99215
	;;^UTILITY(U,$J,358.3,56,0)
	;;=99241^^21^33^1
	;;^UTILITY(U,$J,358.3,56,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,56,1,1,0)
	;;=1^Brief Visit         (1-20 Min)
	;;^UTILITY(U,$J,358.3,56,1,2,0)
	;;=2^99241
	;;^UTILITY(U,$J,358.3,57,0)
	;;=99242^^21^33^2
	;;^UTILITY(U,$J,358.3,57,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,57,1,1,0)
	;;=1^Limited Visit       (21-35 Min)
	;;^UTILITY(U,$J,358.3,57,1,2,0)
	;;=2^99242
	;;^UTILITY(U,$J,358.3,58,0)
	;;=99243^^21^33^3
	;;^UTILITY(U,$J,358.3,58,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,58,1,1,0)
	;;=1^Intermediate Visit  (35-50 Min)
	;;^UTILITY(U,$J,358.3,58,1,2,0)
	;;=2^99243
	;;^UTILITY(U,$J,358.3,59,0)
	;;=99244^^21^33^4
	;;^UTILITY(U,$J,358.3,59,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,59,1,1,0)
	;;=1^Extended Visit      (51-60 Min)
	;;^UTILITY(U,$J,358.3,59,1,2,0)
	;;=2^99244
	;;^UTILITY(U,$J,358.3,60,0)
	;;=99245^^21^33^5
	;;^UTILITY(U,$J,358.3,60,1,0)
	;;=^357.31AI^2^2
	;;^UTILITY(U,$J,358.3,60,1,1,0)
	;;=1^Comprehensive Visit (71-80+ Min)
	;;^UTILITY(U,$J,358.3,60,1,2,0)
	;;=2^99245

IBDEI00P
IBDEI00P	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.4,0,"GL")
	;;=^IBE(358.4,
	;;^DIC("B","IMP/EXP SELECTION GROUP",358.4)
	;;=
	;;^DIC(358.4,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.4,"%D",1,0)
	;;= 
	;;^DIC(358.4,"%D",2,0)
	;;=This file is nearly identical to file #357.4. It is used by the
	;;^DIC(358.4,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.4,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.4,0)
	;;=FIELD^^.03^3
	;;^DD(358.4,0,"DDA")
	;;=N
	;;^DD(358.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.4,0,"IX","APO",358.4,.02)
	;;=
	;;^DD(358.4,0,"IX","APO1",358.4,.03)
	;;=
	;;^DD(358.4,0,"IX","B",358.4,.01)
	;;=
	;;^DD(358.4,0,"IX","D",358.4,.03)
	;;=
	;;^DD(358.4,0,"NM","IMP/EXP SELECTION GROUP")
	;;=
	;;^DD(358.4,0,"PT",358.3,.04)
	;;=
	;;^DD(358.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.4,.01,1,0)
	;;=^.1
	;;^DD(358.4,.01,1,1,0)
	;;=358.4^B
	;;^DD(358.4,.01,1,1,1)
	;;=S ^IBE(358.4,"B",$E(X,1,30),DA)=""
	;;^DD(358.4,.01,1,1,2)
	;;=K ^IBE(358.4,"B",$E(X,1,30),DA)
	;;^DD(358.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(358.4,.01,21,0)
	;;=^^2^2^2930604^^^^
	;;^DD(358.4,.01,21,1,0)
	;;= 
	;;^DD(358.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(358.4,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.4,.01,"DT")
	;;=2930604
	;;^DD(358.4,.02,0)
	;;=PRINT ORDER^RNJ5,2^^0;2^K:+X'=X!(X>99.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.4,.02,1,0)
	;;=^.1
	;;^DD(358.4,.02,1,1,0)
	;;=358.4^APO^MUMPS
	;;^DD(358.4,.02,1,1,1)
	;;=I $P(^IBE(358.4,DA,0),U,3) S ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)=""
	;;^DD(358.4,.02,1,1,2)
	;;=I $P(^IBE(358.4,DA,0),U,3) K ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)
	;;^DD(358.4,.02,1,1,"DT")
	;;=2921222
	;;^DD(358.4,.02,3)
	;;=Type a Number between 0 and 99.99, 2 Decimal Digits
	;;^DD(358.4,.02,21,0)
	;;=^^5^5^2921222^^^^
	;;^DD(358.4,.02,21,1,0)
	;;= 
	;;^DD(358.4,.02,21,2,0)
	;;=This will define the order that a group of selections will appear in as
	;;^DD(358.4,.02,21,3,0)
	;;=compared to the other groups of selections.
	;;^DD(358.4,.02,21,4,0)
	;;=A group header "BLANK" will be created by default with order number 0.
	;;^DD(358.4,.02,"DT")
	;;=2921222
	;;^DD(358.4,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.4,.03,1,0)
	;;=^.1
	;;^DD(358.4,.03,1,1,0)
	;;=358.4^D
	;;^DD(358.4,.03,1,1,1)
	;;=S ^IBE(358.4,"D",$E(X,1,30),DA)=""
	;;^DD(358.4,.03,1,1,2)
	;;=K ^IBE(358.4,"D",$E(X,1,30),DA)
	;;^DD(358.4,.03,1,1,"%D",0)
	;;=^^1^1^2921218^
	;;^DD(358.4,.03,1,1,"%D",1,0)
	;;=Used to find all the groups belonging to a selection list.
	;;^DD(358.4,.03,1,1,"DT")
	;;=2921218
	;;^DD(358.4,.03,1,2,0)
	;;=358.4^APO1^MUMPS
	;;^DD(358.4,.03,1,2,1)
	;;=I $P(^IBE(358.4,DA,0),U,2)]"" S ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)=""
	;;^DD(358.4,.03,1,2,2)
	;;=I $P(^IBE(358.4,DA,0),U,2)]"" K ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)
	;;^DD(358.4,.03,1,2,"DT")
	;;=2921222
	;;^DD(358.4,.03,3)
	;;=This identifies the selection list that contains this group.
	;;^DD(358.4,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.4,.03,21,1,0)
	;;= 
	;;^DD(358.4,.03,21,2,0)
	;;=The Selection List this group belongs to.
	;;^DD(358.4,.03,"DT")
	;;=2921222

IBDEI00Q
IBDEI00Q	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.4)
	;;=^IBE(358.4,
	;;^UTILITY(U,$J,358.4,0)
	;;=IMP/EXP SELECTION GROUP^358.4I^41^34
	;;^UTILITY(U,$J,358.4,1,0)
	;;=OTHER^99.99^1
	;;^UTILITY(U,$J,358.4,2,0)
	;;=BLANK^0^1
	;;^UTILITY(U,$J,358.4,3,0)
	;;=OTHER^99.99^2
	;;^UTILITY(U,$J,358.4,4,0)
	;;=BLANK^0^2
	;;^UTILITY(U,$J,358.4,5,0)
	;;=OTHER^99.99^3
	;;^UTILITY(U,$J,358.4,6,0)
	;;=BLANK^0^3
	;;^UTILITY(U,$J,358.4,7,0)
	;;=NEW PATIENT^1^4
	;;^UTILITY(U,$J,358.4,8,0)
	;;=ESTABLISHED PATIENT^2^4
	;;^UTILITY(U,$J,358.4,9,0)
	;;=CONSULTATIONS^3^4
	;;^UTILITY(U,$J,358.4,14,0)
	;;=OTHER^99.99^7
	;;^UTILITY(U,$J,358.4,15,0)
	;;=BLANK^0^7
	;;^UTILITY(U,$J,358.4,16,0)
	;;=OTHER^99.99^8
	;;^UTILITY(U,$J,358.4,17,0)
	;;=BLANK^0^8
	;;^UTILITY(U,$J,358.4,18,0)
	;;=NEW PATIENT^1^9
	;;^UTILITY(U,$J,358.4,19,0)
	;;=ESTABLISHED PATIENT^2^9
	;;^UTILITY(U,$J,358.4,20,0)
	;;=CONSULTATIONS^3^9
	;;^UTILITY(U,$J,358.4,21,0)
	;;=OTHER^99.99^10
	;;^UTILITY(U,$J,358.4,22,0)
	;;=BLANK^0^10
	;;^UTILITY(U,$J,358.4,23,0)
	;;=BLANK^0^13
	;;^UTILITY(U,$J,358.4,24,0)
	;;=NEW PATIENT^1^14
	;;^UTILITY(U,$J,358.4,25,0)
	;;=ESTABLISHED PATIENT^2^14
	;;^UTILITY(U,$J,358.4,26,0)
	;;=CONSULTATIONS^3^14
	;;^UTILITY(U,$J,358.4,27,0)
	;;=BLANK^0^16
	;;^UTILITY(U,$J,358.4,28,0)
	;;=OTHER^99.9^16
	;;^UTILITY(U,$J,358.4,29,0)
	;;=BLANK^0^18
	;;^UTILITY(U,$J,358.4,30,0)
	;;=BLANK^0^19
	;;^UTILITY(U,$J,358.4,31,0)
	;;=NEW PATIENT^1^21
	;;^UTILITY(U,$J,358.4,32,0)
	;;=ESTABLISHED PATIENT^2^21
	;;^UTILITY(U,$J,358.4,33,0)
	;;=CONSULTATIONS^3^21
	;;^UTILITY(U,$J,358.4,37,0)
	;;=BLANK^0^23
	;;^UTILITY(U,$J,358.4,38,0)
	;;=OTHER^99.99^24
	;;^UTILITY(U,$J,358.4,39,0)
	;;=BLANK^0^24
	;;^UTILITY(U,$J,358.4,40,0)
	;;=OTHER^99.99^25
	;;^UTILITY(U,$J,358.4,41,0)
	;;=BLANK^0^25

IBDEI00R
IBDEI00R	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.5,0,"GL")
	;;=^IBE(358.5,
	;;^DIC("B","IMP/EXP DATA FIELD",358.5)
	;;=
	;;^DIC(358.5,"%D",0)
	;;=^^6^6^2940217^
	;;^DIC(358.5,"%D",1,0)
	;;= 
	;;^DIC(358.5,"%D",2,0)
	;;= 
	;;^DIC(358.5,"%D",3,0)
	;;= 
	;;^DIC(358.5,"%D",4,0)
	;;=This file is nearly identical to file #357.5. It is used by the
	;;^DIC(358.5,"%D",5,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.5,"%D",6,0)
	;;=that is being imported or exported.
	;;^DD(358.5,0)
	;;=FIELD^^2^13
	;;^DD(358.5,0,"ID",.02)
	;;=W ""
	;;^DD(358.5,0,"ID",.03)
	;;=W ""
	;;^DD(358.5,0,"IX","B",358.5,.01)
	;;=
	;;^DD(358.5,0,"IX","C",358.5,.02)
	;;=
	;;^DD(358.5,0,"NM","IMP/EXP DATA FIELD")
	;;=
	;;^DD(358.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.5,.01,1,0)
	;;=^.1
	;;^DD(358.5,.01,1,1,0)
	;;=358.5^B
	;;^DD(358.5,.01,1,1,1)
	;;=S ^IBE(358.5,"B",$E(X,1,30),DA)=""
	;;^DD(358.5,.01,1,1,2)
	;;=K ^IBE(358.5,"B",$E(X,1,30),DA)
	;;^DD(358.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(358.5,.01,21,1,0)
	;;= 
	;;^DD(358.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(358.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(358.5,.01,"DT")
	;;=2930419
	;;^DD(358.5,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.5,.02,1,0)
	;;=^.1
	;;^DD(358.5,.02,1,1,0)
	;;=358.5^C
	;;^DD(358.5,.02,1,1,1)
	;;=S ^IBE(358.5,"C",$E(X,1,30),DA)=""
	;;^DD(358.5,.02,1,1,2)
	;;=K ^IBE(358.5,"C",$E(X,1,30),DA)
	;;^DD(358.5,.02,1,1,"DT")
	;;=2921118
	;;^DD(358.5,.02,3)
	;;=What block should this data field appear in?
	;;^DD(358.5,.02,21,0)
	;;=^^2^2^2930310^
	;;^DD(358.5,.02,21,1,0)
	;;= 
	;;^DD(358.5,.02,21,2,0)
	;;=The particular block the data field should appear in.
	;;^DD(358.5,.02,"DT")
	;;=2921118
	;;^DD(358.5,.03,0)
	;;=TYPE OF DATA^*P358.6'^IBE(358.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.5,.03,3)
	;;=What data should be displayed in this field?
	;;^DD(358.5,.03,12)
	;;=Allows only available output routines
	;;^DD(358.5,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	;;^DD(358.5,.03,21,0)
	;;=^^5^5^2930409^^
	;;^DD(358.5,.03,21,1,0)
	;;= 
	;;^DD(358.5,.03,21,2,0)
	;;=The particular interface that should be invoked to obtain the data for
	;;^DD(358.5,.03,21,3,0)
	;;=display. Some of the interfaces don't actually return data, but are
	;;^DD(358.5,.03,21,4,0)
	;;=instead 'dummy' interfaces for the purpose of printing things like blank
	;;^DD(358.5,.03,"DT")
	;;=2930309
	;;^DD(358.5,.04,0)
	;;=LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
	;;^DD(358.5,.04,.1)
	;;=IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
	;;^DD(358.5,.04,3)
	;;=
	;;^DD(358.5,.04,4)
	;;=W "Enter YES if this is the last item that should print, else enter NO."
	;;^DD(358.5,.04,21,0)
	;;=^^4^4^2930408^^^^
	;;^DD(358.5,.04,21,1,0)
	;;= 
	;;^DD(358.5,.04,21,2,0)
	;;=This field is used to indicate which item on a list is the last to be
	;;^DD(358.5,.04,21,3,0)
	;;=printed to the form. The remaining items can be printed to a separate
	;;^DD(358.5,.04,21,4,0)
	;;=piece of paper.
	;;^DD(358.5,.04,"DT")
	;;=2930413
	;;^DD(358.5,.05,0)
	;;=NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.05,.1)
	;;=WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
	;;^DD(358.5,.05,3)
	;;=The data is a list of items. Which item on the list should be displayed?
	;;^DD(358.5,.05,21,0)
	;;=^^1^1^2930607^
	;;^DD(358.5,.05,21,1,0)
	;;=For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.

IBDEI00S
IBDEI00S	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.5,.05,"DT")
	;;=2930413
	;;^DD(358.5,.06,0)
	;;=TEXT LABEL^FO^^0;6^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.5,.06,.1)
	;;=WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
	;;^DD(358.5,.06,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.5,.06,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.06,3)
	;;=You can optionally begin the text with a label of your choice.
	;;^DD(358.5,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.06,21,1,0)
	;;= 
	;;^DD(358.5,.06,21,2,0)
	;;=The label that should precede the text.
	;;^DD(358.5,.06,"DT")
	;;=2930617
	;;^DD(358.5,.07,0)
	;;=TEXT LABEL APPEARANCE^FX^^0;7^K:$L(X)>2!($L(X)<1)!("BU"'[$E(X,1))!("UB"'[$E(X,2)) X
	;;^DD(358.5,.07,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U}
	;;^DD(358.5,.07,3)
	;;=B=bold,U=underline. You can enter BU to make the label bold and underlined.
	;;^DD(358.5,.07,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.5,.07,21,1,0)
	;;= 
	;;^DD(358.5,.07,21,2,0)
	;;=The label can have characteristics, such as being underlined or
	;;^DD(358.5,.07,21,3,0)
	;;=emboldened.
	;;^DD(358.5,.07,"DT")
	;;=2930414
	;;^DD(358.5,.1,0)
	;;=TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.1,2)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.1,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.1,3)
	;;=What block column should the text start at?
	;;^DD(358.5,.1,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.5,.1,21,1,0)
	;;=This field determines what column the text should begin in.
	;;^DD(358.5,.1,21,2,0)
	;;=Applies only if the Package Interface returns a word-processing field.
	;;^DD(358.5,.1,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.1,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.1,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.1,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.1,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.1,"DT")
	;;=2930617
	;;^DD(358.5,.11,0)
	;;=TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.11,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,3)
	;;=What block row should the text begin in?
	;;^DD(358.5,.11,21,0)
	;;=^^4^4^2930715^^
	;;^DD(358.5,.11,21,1,0)
	;;= 
	;;^DD(358.5,.11,21,2,0)
	;;=Determines which line on the form, relative to the block, the text area
	;;^DD(358.5,.11,21,3,0)
	;;=should begin at. Only applies if the package interface returns a
	;;^DD(358.5,.11,21,4,0)
	;;=word-processing field.
	;;^DD(358.5,.11,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.11,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.11,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.11,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.11,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.11,"DT")
	;;=2930617
	;;^DD(358.5,.12,0)
	;;=NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.12,.1)
	;;=HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
	;;^DD(358.5,.12,3)
	;;=How many lines of the form should be allocated for the text?
	;;^DD(358.5,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.12,21,1,0)
	;;= 
	;;^DD(358.5,.12,21,2,0)
	;;=The number of lines on the form that should be allocated for the text.
	;;^DD(358.5,.12,"DT")
	;;=2930414
	;;^DD(358.5,.13,0)
	;;=SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q

IBDEI00T
IBDEI00T	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.5,.13,.1)
	;;=HOW SHOULD THE TEXT LINES BE SPACED?
	;;^DD(358.5,.13,3)
	;;=How do you want the text lines to be spaced?
	;;^DD(358.5,.13,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.13,21,1,0)
	;;= 
	;;^DD(358.5,.13,21,2,0)
	;;=Determines the spacing between lines of text.
	;;^DD(358.5,.13,"DT")
	;;=2930414
	;;^DD(358.5,.14,0)
	;;=WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.14,.1)
	;;=HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
	;;^DD(358.5,.14,3)
	;;=How many columns wide do you want the text?
	;;^DD(358.5,.14,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.14,21,1,0)
	;;= 
	;;^DD(358.5,.14,21,2,0)
	;;=Determines how many characters across should be allocated to the text.
	;;^DD(358.5,.14,"DT")
	;;=2930414
	;;^DD(358.5,2,0)
	;;=SUBFIELD^358.52I^^2;0
	;;^DD(358.5,2,21,0)
	;;=^^2^2^2930730^^^^
	;;^DD(358.5,2,21,1,0)
	;;=A data field can be composed of multiple subfields. Each subfield can have
	;;^DD(358.5,2,21,2,0)
	;;=a label and data.
	;;^DD(358.5,2,"DT")
	;;=2930323
	;;^DD(358.52,0)
	;;=SUBFIELD SUB-FIELD^^.09^8
	;;^DD(358.52,0,"IX","B",358.52,.01)
	;;=
	;;^DD(358.52,0,"NM","SUBFIELD")
	;;=
	;;^DD(358.52,0,"UP")
	;;=358.5
	;;^DD(358.52,.01,0)
	;;=SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.52,.01,1,0)
	;;=^.1
	;;^DD(358.52,.01,1,1,0)
	;;=358.52^B
	;;^DD(358.52,.01,1,1,1)
	;;=S ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.52,.01,1,1,2)
	;;=K ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.52,.01,3)
	;;=What should the subfield be named? The label will print unless it is made invisible.
	;;^DD(358.52,.01,4)
	;;=
	;;^DD(358.52,.01,21,0)
	;;=^^3^3^2930730^^
	;;^DD(358.52,.01,21,1,0)
	;;= 
	;;^DD(358.52,.01,21,2,0)
	;;=The name of the subfield. The label prints to the form unless it is made
	;;^DD(358.52,.01,21,3,0)
	;;=invisible.
	;;^DD(358.52,.01,"DT")
	;;=2930730
	;;^DD(358.52,.03,0)
	;;=SUBCOLUMN LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBI"'[$E(X,1))!("UBI"'[$E(X,2))!("UBI"'[$E(X,3)) X
	;;^DD(358.52,.03,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,I}
	;;^DD(358.52,.03,3)
	;;=B=bold,U=underline,I=invisible You can enter any combination of {B,U,I}. The label will not print if it is made invisible.
	;;^DD(358.52,.03,4)
	;;=
	;;^DD(358.52,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.52,.03,21,1,0)
	;;= 
	;;^DD(358.52,.03,21,2,0)
	;;=The label can have characterisics, such as being underlined.
	;;^DD(358.52,.03,"DT")
	;;=2930616
	;;^DD(358.52,.04,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.04,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,3)
	;;=What block column should the label start in?
	;;^DD(358.52,.04,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.04,21,1,0)
	;;= 
	;;^DD(358.52,.04,21,2,0)
	;;=The column, relative to the block, that the label should start at.
	;;^DD(358.52,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.04,"DT")
	;;=2930617
	;;^DD(358.52,.05,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.05,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.05,2.1)
	;;=S:Y=+Y Y=Y+1

IBDEI00U
IBDEI00U	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.05,3)
	;;=What block row should the label start in?
	;;^DD(358.52,.05,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.05,21,1,0)
	;;= 
	;;^DD(358.52,.05,21,2,0)
	;;=The row the label should be printed on.
	;;^DD(358.52,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.05,"DT")
	;;=2930617
	;;^DD(358.52,.06,0)
	;;=STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.06,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,3)
	;;=What block row should the data begin in?
	;;^DD(358.52,.06,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.06,21,1,0)
	;;= 
	;;^DD(358.52,.06,21,2,0)
	;;=The row, relative to the block, that the data should print on.
	;;^DD(358.52,.06,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.52,.06,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.06,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.06,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.06,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.06,"DT")
	;;=2930617
	;;^DD(358.52,.07,0)
	;;=STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.07,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,3)
	;;=What block column should the data begin in?
	;;^DD(358.52,.07,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.07,21,1,0)
	;;= 
	;;^DD(358.52,.07,21,2,0)
	;;=The column, relative to the block, that the data should print on.
	;;^DD(358.52,.07,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.07,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.07,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.07,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.07,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.07,"DT")
	;;=2930617
	;;^DD(358.52,.08,0)
	;;=LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.52,.08,3)
	;;=How much space on the line should be allocated for the information to be displayed?
	;;^DD(358.52,.08,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.52,.08,21,1,0)
	;;= 
	;;^DD(358.52,.08,21,2,0)
	;;=The amount of space, in terms of characters, that should be allocated
	;;^DD(358.52,.08,21,3,0)
	;;=to the data.
	;;^DD(358.52,.08,"DT")
	;;=2930322
	;;^DD(358.52,.09,0)
	;;=DATA^NJ1,0X^^0;9^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.5,DA(1),0)),U,3),2)),U,(2*X)-1)="") X
	;;^DD(358.52,.09,.1)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,3)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,4)
	;;=D HELP1^IBDFU5
	;;^DD(358.52,.09,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.52,.09,21,1,0)
	;;= 
	;;^DD(358.52,.09,21,2,0)
	;;=The package interface returns a record that may be composed of multiple
	;;^DD(358.52,.09,21,3,0)
	;;=fields. This identifies which of those fields should appear in this

IBDEI00V
IBDEI00V	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.09,21,4,0)
	;;=subfield.
	;;^DD(358.52,.09,"DT")
	;;=2930526

IBDEI00W
IBDEI00W	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5)
	;;=^IBE(358.5,
	;;^UTILITY(U,$J,358.5,0)
	;;=IMP/EXP DATA FIELD^358.5I^338^293
	;;^UTILITY(U,$J,358.5,1,0)
	;;=Subjective:^1^2^^^Subjective:^^^^0^0^10^2^132
	;;^UTILITY(U,$J,358.5,2,0)
	;;=OBJECTIVE^1^2^^^Objective:^^^^0^8^10^2^132
	;;^UTILITY(U,$J,358.5,3,0)
	;;=ASSESSMENT/DIAGNOSIS^1^2^^^Assessment/Diagnosis:^^^^0^18^8^2^132
	;;^UTILITY(U,$J,358.5,4,0)
	;;=PLAN^1^2^^^Plan:^^^^0^26^4^2^132
	;;^UTILITY(U,$J,358.5,5,0)
	;;=HEADER^2^3
	;;^UTILITY(U,$J,358.5,5,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,5,2,1,0)
	;;=**DOCTORS ORDERS**^^^50^0
	;;^UTILITY(U,$J,358.5,5,2,2,0)
	;;=Nurs. Sig^^^118^0
	;;^UTILITY(U,$J,358.5,6,0)
	;;=DOCTORS ORDERS^2^2^^^^^^^0^2^18^2^110
	;;^UTILITY(U,$J,358.5,7,0)
	;;=NURSE'S SIGNATURE^2^2^^^^^^^118^2^18^2^13
	;;^UTILITY(U,$J,358.5,8,0)
	;;=APPT DATE^3^4
	;;^UTILITY(U,$J,358.5,8,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,8,2,1,0)
	;;=Appt Date:^^^60^0^0^71^12^2
	;;^UTILITY(U,$J,358.5,9,0)
	;;=PAGE NUMBER^3^3
	;;^UTILITY(U,$J,358.5,9,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,9,2,1,0)
	;;=PAGE: 1^^^110^0
	;;^UTILITY(U,$J,358.5,10,0)
	;;=CLINIC^3^5
	;;^UTILITY(U,$J,358.5,10,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,10,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,11,0)
	;;=SIGNATURE^4^3
	;;^UTILITY(U,$J,358.5,11,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,11,2,1,0)
	;;=Signature of Provider^^^60^4^3^60^40^1
	;;^UTILITY(U,$J,358.5,12,0)
	;;=CLINIC^4^5
	;;^UTILITY(U,$J,358.5,12,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,12,2,1,0)
	;;=Clinic:^^^0^4^4^8^30^1
	;;^UTILITY(U,$J,358.5,13,0)
	;;=VITALS^5^2^^^BP ________ Wt ________ Pulse ________^^^^0^0^4^2^132
	;;^UTILITY(U,$J,358.5,14,0)
	;;=PATEINT NAME^6^6
	;;^UTILITY(U,$J,358.5,14,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,14,2,1,0)
	;;=NAME^^I^^^0^0^30^1
	;;^UTILITY(U,$J,358.5,15,0)
	;;=PID^6^7
	;;^UTILITY(U,$J,358.5,15,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,15,2,1,0)
	;;=PID^^I^^^1^0^15^1
	;;^UTILITY(U,$J,358.5,16,0)
	;;=ELIGIBILITY^6^8
	;;^UTILITY(U,$J,358.5,16,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,16,2,1,0)
	;;=Elig:^^^0^2^2^6^30^1
	;;^UTILITY(U,$J,358.5,17,0)
	;;=ADDRESS LINE 1^6^9^0^1
	;;^UTILITY(U,$J,358.5,17,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,17,2,1,0)
	;;=LINE1^^I^^^0^39^45^1
	;;^UTILITY(U,$J,358.5,18,0)
	;;=ADDRESS LINE 2^6^9^0^2
	;;^UTILITY(U,$J,358.5,18,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,18,2,1,0)
	;;=LINE2^^I^^^1^39^45^1
	;;^UTILITY(U,$J,358.5,19,0)
	;;=DATE^6^10
	;;^UTILITY(U,$J,358.5,19,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,19,2,1,0)
	;;=Date Printed:^^^90^1^1^104^12^1
	;;^UTILITY(U,$J,358.5,20,0)
	;;=CHECK IF SC^6^3
	;;^UTILITY(U,$J,358.5,20,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,20,2,1,0)
	;;=*** NOTE:  IF THE PATIENT'S TREATMENT WAS FOR ANY CONDITION RELATED TO THE FOLLOWING SERVICE-CONNECTED^^^7^4
	;;^UTILITY(U,$J,358.5,20,2,2,0)
	;;=DISABILITIES, CHECK BELOW TO THE LEFT OF THE LISTED CONDITON(S). ***^^^11^5
	;;^UTILITY(U,$J,358.5,21,0)
	;;=SC DISABILITY 1^6^11^0^1
	;;^UTILITY(U,$J,358.5,21,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,21,2,1,0)
	;;=Disabilities:^^^8^7
	;;^UTILITY(U,$J,358.5,21,2,2,0)
	;;=(__)^^^0^8^8^5^45^1
	;;^UTILITY(U,$J,358.5,21,2,3,0)
	;;=% - SERVICE CONNECTED^^I^^^8^51^24^5
	;;^UTILITY(U,$J,358.5,22,0)
	;;=SC DISABILITY 2^6^11^0^2
	;;^UTILITY(U,$J,358.5,22,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,22,2,1,0)
	;;=(__)^^^0^9^9^5^45^1
	;;^UTILITY(U,$J,358.5,22,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^9^51^24^5
	;;^UTILITY(U,$J,358.5,23,0)
	;;=SC DISABILITY 3^6^11^1^3
	;;^UTILITY(U,$J,358.5,23,2,0)
	;;=^357.52I^2^2

IBDEI00X
IBDEI00X	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,23,2,1,0)
	;;=(__)^^^0^10^10^5^45^1
	;;^UTILITY(U,$J,358.5,23,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^10^51^24^5
	;;^UTILITY(U,$J,358.5,24,0)
	;;=INSURED?^6^12
	;;^UTILITY(U,$J,358.5,24,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,24,2,1,0)
	;;=Health Insurance:^^^3^12^12^21^7^1
	;;^UTILITY(U,$J,358.5,25,0)
	;;=INSURANCE 1^6^13^0^1
	;;^UTILITY(U,$J,358.5,25,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,25,2,1,0)
	;;=Insurance^^U^3^13^14^3^30^1
	;;^UTILITY(U,$J,358.5,25,2,2,0)
	;;=Policy #^^U^35^13^14^35^20^3
	;;^UTILITY(U,$J,358.5,25,2,3,0)
	;;=Group #^^U^58^13^14^58^17^4
	;;^UTILITY(U,$J,358.5,25,2,4,0)
	;;=Holder^^U^77^13^14^77^9^7
	;;^UTILITY(U,$J,358.5,26,0)
	;;=INSURANCE 2^6^13^0^2
	;;^UTILITY(U,$J,358.5,26,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,26,2,1,0)
	;;=COMPANY^^I^^^15^3^30^1
	;;^UTILITY(U,$J,358.5,26,2,2,0)
	;;=POLICY #^^I^^^15^35^20^3
	;;^UTILITY(U,$J,358.5,26,2,3,0)
	;;=GROUP #^^I^^^15^58^17^4
	;;^UTILITY(U,$J,358.5,26,2,4,0)
	;;=HOLDER^^I^^^15^77^9^7
	;;^UTILITY(U,$J,358.5,27,0)
	;;=INSURANCE 3^6^13^1^3
	;;^UTILITY(U,$J,358.5,27,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,27,2,1,0)
	;;=COMPANY^^I^^^16^3^30^1
	;;^UTILITY(U,$J,358.5,27,2,2,0)
	;;=POLICY #^^I^^^16^35^20^3
	;;^UTILITY(U,$J,358.5,27,2,3,0)
	;;=GROUP #^^I^^^16^58^17^4
	;;^UTILITY(U,$J,358.5,27,2,4,0)
	;;=HOLDER^^I^^^16^77^9^7
	;;^UTILITY(U,$J,358.5,28,0)
	;;=FACILITY^6^14
	;;^UTILITY(U,$J,358.5,28,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,28,2,1,0)
	;;=FACILITY:^^^90^0^0^100^30^1
	;;^UTILITY(U,$J,358.5,29,0)
	;;=ADDRESS LINE 3^6^9^1^3
	;;^UTILITY(U,$J,358.5,29,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,29,2,1,0)
	;;=LINE 3^^I^^^2^39^45^1
	;;^UTILITY(U,$J,358.5,30,0)
	;;=PROCEDURE NOTE^7^2^^^Procedure Note:^^^^0^0^4^2^132
	;;^UTILITY(U,$J,358.5,31,0)
	;;=Preop Dx:^7^2^^^Preop Dx:^^^^0^4^2^2^132
	;;^UTILITY(U,$J,358.5,32,0)
	;;=POSTOP DX^7^2^^^Postop Dx:^^^^0^6^2^2^132
	;;^UTILITY(U,$J,358.5,33,0)
	;;=PROCEDURE^7^2^^^Procedure:^^^^0^8^2^2^132
	;;^UTILITY(U,$J,358.5,34,0)
	;;=ANESTHESIA^7^2^^^Anesthesia:^^^^0^10^2^2^132
	;;^UTILITY(U,$J,358.5,35,0)
	;;=SURGEON^7^2^^^Surgeon:^^^^0^12^2^2^132
	;;^UTILITY(U,$J,358.5,36,0)
	;;=ATTENDING^7^2^^^Attending:^^^^0^14^2^2^132
	;;^UTILITY(U,$J,358.5,37,0)
	;;=FINDINGS^7^2^^^Findings:^^^^0^16^2^2^132
	;;^UTILITY(U,$J,358.5,38,0)
	;;=PLAN^7^2^^^Plan:^^^^0^18^8^2^132
	;;^UTILITY(U,$J,358.5,39,0)
	;;=APPT DATE^8^4
	;;^UTILITY(U,$J,358.5,39,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,39,2,1,0)
	;;=Appt Date:^^^60^0^0^71^12^2
	;;^UTILITY(U,$J,358.5,40,0)
	;;=PAGE NUMBER^8^3
	;;^UTILITY(U,$J,358.5,40,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,40,2,1,0)
	;;=PAGE: 1^^^110^0
	;;^UTILITY(U,$J,358.5,41,0)
	;;=CLINIC^8^5
	;;^UTILITY(U,$J,358.5,41,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,41,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,42,0)
	;;=SIGNATURE^9^3
	;;^UTILITY(U,$J,358.5,42,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,42,2,1,0)
	;;=Signature of Provider^^^60^4^3^60^40^1
	;;^UTILITY(U,$J,358.5,43,0)
	;;=CLINIC^9^5
	;;^UTILITY(U,$J,358.5,43,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,43,2,1,0)
	;;=Clinic:^^^0^4^4^8^30^1
	;;^UTILITY(U,$J,358.5,44,0)
	;;=PATEINT NAME^11^6
	;;^UTILITY(U,$J,358.5,44,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,44,2,1,0)
	;;=NAME^^I^^^0^0^30^1
	;;^UTILITY(U,$J,358.5,45,0)
	;;=PID^11^7
	;;^UTILITY(U,$J,358.5,45,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,45,2,1,0)
	;;=PID^^I^^^1^0^15^1
	;;^UTILITY(U,$J,358.5,46,0)
	;;=ELIGIBILITY^11^8
	;;^UTILITY(U,$J,358.5,46,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,46,2,1,0)
	;;=Elig:^^^0^2^2^6^30^1

IBDEI00Y
IBDEI00Y	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,47,0)
	;;=ADDRESS LINE 1^11^9^0^1
	;;^UTILITY(U,$J,358.5,47,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,47,2,1,0)
	;;=LINE1^^I^^^0^39^45^1
	;;^UTILITY(U,$J,358.5,48,0)
	;;=ADDRESS LINE 2^11^9^0^2
	;;^UTILITY(U,$J,358.5,48,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,48,2,1,0)
	;;=LINE2^^I^^^1^39^45^1
	;;^UTILITY(U,$J,358.5,49,0)
	;;=DATE^11^10
	;;^UTILITY(U,$J,358.5,49,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,49,2,1,0)
	;;=Date Printed:^^^90^1^1^104^12^1
	;;^UTILITY(U,$J,358.5,50,0)
	;;=CHECK IF SC^11^3
	;;^UTILITY(U,$J,358.5,50,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,50,2,1,0)
	;;=*** NOTE:  IF THE PATIENT'S TREATMENT WAS FOR ANY CONDITION RELATED TO THE FOLLOWING SERVICE-CONNECTED^^^7^4
	;;^UTILITY(U,$J,358.5,50,2,2,0)
	;;=DISABILITIES, CHECK BELOW TO THE LEFT OF THE LISTED CONDITON(S). ***^^^11^5
	;;^UTILITY(U,$J,358.5,51,0)
	;;=SC DISABILITY 1^11^11^0^1
	;;^UTILITY(U,$J,358.5,51,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,51,2,1,0)
	;;=Disabilities:^^^8^7
	;;^UTILITY(U,$J,358.5,51,2,2,0)
	;;=(__)^^^0^8^8^5^45^1
	;;^UTILITY(U,$J,358.5,51,2,3,0)
	;;=% - SERVICE CONNECTED^^I^^^8^51^24^5
	;;^UTILITY(U,$J,358.5,52,0)
	;;=SC DISABILITY 2^11^11^0^2
	;;^UTILITY(U,$J,358.5,52,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,52,2,1,0)
	;;=(__)^^^0^9^9^5^45^1
	;;^UTILITY(U,$J,358.5,52,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^9^51^24^5
	;;^UTILITY(U,$J,358.5,53,0)
	;;=SC DISABILITY 3^11^11^1^3
	;;^UTILITY(U,$J,358.5,53,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,53,2,1,0)
	;;=(__)^^^0^10^10^5^45^1
	;;^UTILITY(U,$J,358.5,53,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^10^51^24^5
	;;^UTILITY(U,$J,358.5,54,0)
	;;=INSURED?^11^12
	;;^UTILITY(U,$J,358.5,54,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,54,2,1,0)
	;;=Health Insurance:^^^3^12^12^21^7^1
	;;^UTILITY(U,$J,358.5,55,0)
	;;=INSURANCE 1^11^13^0^1
	;;^UTILITY(U,$J,358.5,55,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,55,2,1,0)
	;;=Insurance^^U^3^13^14^3^30^1
	;;^UTILITY(U,$J,358.5,55,2,2,0)
	;;=Policy #^^U^35^13^14^35^20^3
	;;^UTILITY(U,$J,358.5,55,2,3,0)
	;;=Group #^^U^58^13^14^58^17^4
	;;^UTILITY(U,$J,358.5,55,2,4,0)
	;;=Holder^^U^77^13^14^77^9^7
	;;^UTILITY(U,$J,358.5,56,0)
	;;=INSURANCE 2^11^13^0^2
	;;^UTILITY(U,$J,358.5,56,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,56,2,1,0)
	;;=COMPANY^^I^^^15^3^30^1
	;;^UTILITY(U,$J,358.5,56,2,2,0)
	;;=POLICY #^^I^^^15^35^20^3
	;;^UTILITY(U,$J,358.5,56,2,3,0)
	;;=GROUP #^^I^^^15^58^17^4
	;;^UTILITY(U,$J,358.5,56,2,4,0)
	;;=HOLDER^^I^^^15^77^9^7
	;;^UTILITY(U,$J,358.5,57,0)
	;;=INSURANCE 3^11^13^1^3
	;;^UTILITY(U,$J,358.5,57,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,57,2,1,0)
	;;=COMPANY^^I^^^16^3^30^1
	;;^UTILITY(U,$J,358.5,57,2,2,0)
	;;=POLICY #^^I^^^16^35^20^3
	;;^UTILITY(U,$J,358.5,57,2,3,0)
	;;=GROUP #^^I^^^16^58^17^4
	;;^UTILITY(U,$J,358.5,57,2,4,0)
	;;=HOLDER^^I^^^16^77^9^7
	;;^UTILITY(U,$J,358.5,58,0)
	;;=FACILITY^11^14
	;;^UTILITY(U,$J,358.5,58,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,58,2,1,0)
	;;=FACILITY:^^^90^0^0^100^30^1
	;;^UTILITY(U,$J,358.5,59,0)
	;;=ADDRESS LINE 3^11^9^1^3
	;;^UTILITY(U,$J,358.5,59,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,59,2,1,0)
	;;=LINE 3^^I^^^2^39^45^1
	;;^UTILITY(U,$J,358.5,60,0)
	;;=CLINIC^12^5
	;;^UTILITY(U,$J,358.5,60,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,60,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,61,0)
	;;=APPT. DT/TIME^12^4
	;;^UTILITY(U,$J,358.5,61,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,61,2,1,0)
	;;=Appt. DT/Time:^^^0^2^2^15^23^1
	;;^UTILITY(U,$J,358.5,62,0)
	;;=OTHER ALLERGIES^13^3
	;;^UTILITY(U,$J,358.5,62,2,0)
	;;=^357.52I^1^1

IBDEI00Z
IBDEI00Z	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,62,2,1,0)
	;;=Other:^^^1^7
	;;^UTILITY(U,$J,358.5,63,0)
	;;=ALLERGY 1^13^15^0^1
	;;^UTILITY(U,$J,358.5,63,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,63,2,1,0)
	;;=ALLERGY^^I^^^3^1^30^1
	;;^UTILITY(U,$J,358.5,63,2,2,0)
	;;=TYPE^^U^32^2^3^32^5^2
	;;^UTILITY(U,$J,358.5,63,2,3,0)
	;;=VER^^U^45^2^3^45^3^4
	;;^UTILITY(U,$J,358.5,63,2,4,0)
	;;=TRUE^^U^39^2^3^40^3^5
	;;^UTILITY(U,$J,358.5,64,0)
	;;=ALLERGY 2^13^15^0^2
	;;^UTILITY(U,$J,358.5,64,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,64,2,1,0)
	;;=ALLERGY^^I^^^4^1^30^1
	;;^UTILITY(U,$J,358.5,64,2,2,0)
	;;=TYPE^^I^^^4^32^5^2
	;;^UTILITY(U,$J,358.5,64,2,3,0)
	;;=TRUE^^I^^^4^40^3^5
	;;^UTILITY(U,$J,358.5,64,2,4,0)
	;;=VER^^I^^^4^45^3^4
	;;^UTILITY(U,$J,358.5,65,0)
	;;=ALLERGY 3^13^15^0^3
	;;^UTILITY(U,$J,358.5,65,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,65,2,1,0)
	;;=ALLERGY^^I^^^5^1^30^1
	;;^UTILITY(U,$J,358.5,65,2,2,0)
	;;=TYPE^^I^^^5^32^5^2
	;;^UTILITY(U,$J,358.5,65,2,3,0)
	;;=TRUE^^I^^^5^40^3^5
	;;^UTILITY(U,$J,358.5,65,2,4,0)
	;;=VER^^I^^^5^45^3^4
	;;^UTILITY(U,$J,358.5,66,0)
	;;=ALLERGY 4^13^15^1^4
	;;^UTILITY(U,$J,358.5,66,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,66,2,1,0)
	;;=ALLERGY^^I^^^6^1^30^1
	;;^UTILITY(U,$J,358.5,66,2,2,0)
	;;=TYPE^^I^^^6^32^5^2
	;;^UTILITY(U,$J,358.5,66,2,3,0)
	;;=TRUE^^I^^^6^40^3^5
	;;^UTILITY(U,$J,358.5,66,2,4,0)
	;;=VER^^I^^^6^45^3^4
	;;^UTILITY(U,$J,358.5,67,0)
	;;=ADDRESS LINE 1^14^9^^1
	;;^UTILITY(U,$J,358.5,67,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,67,2,1,0)
	;;=Address:^^U^1^1^2^1^45^1
	;;^UTILITY(U,$J,358.5,68,0)
	;;=TELEPHONE^14^16
	;;^UTILITY(U,$J,358.5,68,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,68,2,1,0)
	;;=Telephone:^^^15^1^1^26^20^1
	;;^UTILITY(U,$J,358.5,69,0)
	;;=ADDRESS LINE 2^14^9^^2
	;;^UTILITY(U,$J,358.5,69,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,69,2,1,0)
	;;=ADDRESS LINE 2^^I^^^3^1^45^1
	;;^UTILITY(U,$J,358.5,70,0)
	;;=ADDRESS LINE 3^14^9^^3
	;;^UTILITY(U,$J,358.5,70,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,70,2,1,0)
	;;=ADDRESS LINE 3^^I^^^4^1^45^1
	;;^UTILITY(U,$J,358.5,71,0)
	;;=ADDRESS LINE 4^14^9^1^4
	;;^UTILITY(U,$J,358.5,71,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,71,2,1,0)
	;;=ADDRESS LINE 4^^I^^^5^1^45^1
	;;^UTILITY(U,$J,358.5,72,0)
	;;=INSURED?^14^12
	;;^UTILITY(U,$J,358.5,72,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,72,2,1,0)
	;;=Insurance:^^U^1^6^6^12^7^1
	;;^UTILITY(U,$J,358.5,73,0)
	;;=INSURANCE 1^14^13^0^1
	;;^UTILITY(U,$J,358.5,73,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,73,2,1,0)
	;;=COMPANY^^I^^^7^1^28^1
	;;^UTILITY(U,$J,358.5,73,2,2,0)
	;;=Policy Number:^^U^30^6^7^30^19^3
	;;^UTILITY(U,$J,358.5,74,0)
	;;=INSURANCE 2^14^13^0^2
	;;^UTILITY(U,$J,358.5,74,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,74,2,1,0)
	;;=COMPANY^^I^^^8^1^28^1
	;;^UTILITY(U,$J,358.5,74,2,2,0)
	;;=POLICY #^^I^^^8^30^19^3
	;;^UTILITY(U,$J,358.5,75,0)
	;;=INSURANCE 3^14^13^0^3
	;;^UTILITY(U,$J,358.5,75,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,75,2,1,0)
	;;=COMPANY^^I^^^9^1^28^1
	;;^UTILITY(U,$J,358.5,75,2,2,0)
	;;=POLICY #^^I^^^9^30^19^3
	;;^UTILITY(U,$J,358.5,76,0)
	;;=INSURANCE 4^14^13^1^4
	;;^UTILITY(U,$J,358.5,76,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,76,2,1,0)
	;;=COMPANY^^I^^^10^1^28^1
	;;^UTILITY(U,$J,358.5,76,2,2,0)
	;;=POLICY #^^I^^^10^30^19^3
	;;^UTILITY(U,$J,358.5,77,0)
	;;=MARITAL STATUS^14^17
	;;^UTILITY(U,$J,358.5,77,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,77,2,1,0)
	;;=Marital Status:^^^1^11^11^17^15^1
	;;^UTILITY(U,$J,358.5,78,0)
	;;=EMPLOYER^14^18
	;;^UTILITY(U,$J,358.5,78,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,78,2,1,0)
	;;=Employer:^^U^1^12^13^4^45^1

IBDEI010
IBDEI010	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,79,0)
	;;=EMPLOYMENT STATUS^14^19
	;;^UTILITY(U,$J,358.5,79,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,79,2,1,0)
	;;=Status:^^^20^12^12^28^20^1
	;;^UTILITY(U,$J,358.5,80,0)
	;;=SPOUSE'S EMPLOYER^14^20
	;;^UTILITY(U,$J,358.5,80,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,80,2,1,0)
	;;=Spouse's Employer:^^U^1^14^15^4^45^1
	;;^UTILITY(U,$J,358.5,81,0)
	;;=VITALS^15^3
	;;^UTILITY(U,$J,358.5,81,2,0)
	;;=^357.52I^6^5
	;;^UTILITY(U,$J,358.5,81,2,1,0)
	;;=WT:^^^15^1^1^19^14^1
	;;^UTILITY(U,$J,358.5,81,2,2,0)
	;;=BP:^^^37^1^1^41^14^1
	;;^UTILITY(U,$J,358.5,81,2,3,0)
	;;=T:^^^59^1^1^62^14^1
	;;^UTILITY(U,$J,358.5,81,2,4,0)
	;;=P:^^^15^3^3^19^14^1
	;;^UTILITY(U,$J,358.5,81,2,6,0)
	;;=INITIALS/TIME:^^^38^3^3^54^20^1
	;;^UTILITY(U,$J,358.5,82,0)
	;;=PROGRESS NOTES^16^2^^^Progress Notes:   (  ) Attached  (  ) See Chart^^^^0^0^24^2^87
	;;^UTILITY(U,$J,358.5,83,0)
	;;=SIGNATURE^16^3
	;;^UTILITY(U,$J,358.5,83,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,83,2,1,0)
	;;=Provider Signature^^^64^27^26^54^45^1
	;;^UTILITY(U,$J,358.5,84,0)
	;;=PATIENT NAME^19^6
	;;^UTILITY(U,$J,358.5,84,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,84,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,85,0)
	;;=PATIENT DOB^19^22
	;;^UTILITY(U,$J,358.5,85,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,85,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,86,0)
	;;=PID^19^7
	;;^UTILITY(U,$J,358.5,86,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,86,2,1,0)
	;;=PID:^^^19^2^2^24^15^1
	;;^UTILITY(U,$J,358.5,87,0)
	;;=SC CONDITION 1^19^11^^1
	;;^UTILITY(U,$J,358.5,87,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,87,2,1,0)
	;;=SC Conditions:^^U^1^4^5^1^40^1
	;;^UTILITY(U,$J,358.5,87,2,2,0)
	;;=%^^I^^^5^42^4^3
	;;^UTILITY(U,$J,358.5,88,0)
	;;=SC CONDITION 2^19^11^^2
	;;^UTILITY(U,$J,358.5,88,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,88,2,1,0)
	;;=CONDITION^^I^^^6^1^40^1
	;;^UTILITY(U,$J,358.5,88,2,2,0)
	;;=%^^I^^^6^42^4^3
	;;^UTILITY(U,$J,358.5,89,0)
	;;=SC CONDITION 3^19^11^^3
	;;^UTILITY(U,$J,358.5,89,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,89,2,1,0)
	;;=CONDITION^^I^^^7^1^40^1
	;;^UTILITY(U,$J,358.5,89,2,2,0)
	;;=%^^I^^^7^42^4^3
	;;^UTILITY(U,$J,358.5,90,0)
	;;=SC CONDITION 4^19^11^1^4
	;;^UTILITY(U,$J,358.5,90,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,90,2,1,0)
	;;=CONDITION^^I^^^8^1^40^1
	;;^UTILITY(U,$J,358.5,90,2,2,0)
	;;=%^^I^^^8^42^4^3
	;;^UTILITY(U,$J,358.5,91,0)
	;;=SEX^19^23
	;;^UTILITY(U,$J,358.5,91,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,91,2,1,0)
	;;=Sex:^^^40^2^2^45^1^2
	;;^UTILITY(U,$J,358.5,92,0)
	;;=ELIGIBILITY^19^8
	;;^UTILITY(U,$J,358.5,92,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,92,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,93,0)
	;;=MEANS TEST CATEGORY^19^24
	;;^UTILITY(U,$J,358.5,93,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,93,2,1,0)
	;;=Means Test Cat:^^^29^4^4^45^1^3
	;;^UTILITY(U,$J,358.5,94,0)
	;;=SERVICE HISTORY DATA^19^25
	;;^UTILITY(U,$J,358.5,94,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,94,2,1,0)
	;;=AO:^^^1^9^9^5^3^2
	;;^UTILITY(U,$J,358.5,94,2,2,0)
	;;=IR:^^^9^9^9^13^3^3
	;;^UTILITY(U,$J,358.5,94,2,3,0)
	;;=POW:^^^17^9^9^22^3^4
	;;^UTILITY(U,$J,358.5,94,2,4,0)
	;;=EC:^^^26^9^9^30^3^6
	;;^UTILITY(U,$J,358.5,95,0)
	;;=SC %^19^8
	;;^UTILITY(U,$J,358.5,95,2,0)
	;;=^357.52I^3^2
	;;^UTILITY(U,$J,358.5,95,2,2,0)
	;;=SC%:^^^17^4^4^22^3^7
	;;^UTILITY(U,$J,358.5,95,2,3,0)
	;;=%^^^25^4
	;;^UTILITY(U,$J,358.5,96,0)
	;;=SC TREATMENT QUESTIONS^20^26
	;;^UTILITY(U,$J,358.5,96,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,96,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1

IBDEI011
IBDEI011	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,96,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,137,0)
	;;=CLINIC^31^5
	;;^UTILITY(U,$J,358.5,137,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,137,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,138,0)
	;;=APPT. DT/TIME^31^4
	;;^UTILITY(U,$J,358.5,138,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,138,2,1,0)
	;;=Appt. DT/Time:^^^0^2^2^15^23^1
	;;^UTILITY(U,$J,358.5,139,0)
	;;=OTHER ALLERGIES^32^3
	;;^UTILITY(U,$J,358.5,139,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,139,2,1,0)
	;;=Other:^^^1^7
	;;^UTILITY(U,$J,358.5,140,0)
	;;=ALLERGY 1^32^15^0^1
	;;^UTILITY(U,$J,358.5,140,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,140,2,1,0)
	;;=ALLERGY^^I^^^3^1^30^1
	;;^UTILITY(U,$J,358.5,140,2,2,0)
	;;=TYPE^^U^32^2^3^32^5^2
	;;^UTILITY(U,$J,358.5,140,2,3,0)
	;;=VER^^U^45^2^3^45^3^4
	;;^UTILITY(U,$J,358.5,140,2,4,0)
	;;=TRUE^^U^39^2^3^40^3^5
	;;^UTILITY(U,$J,358.5,141,0)
	;;=ALLERGY 2^32^15^0^2
	;;^UTILITY(U,$J,358.5,141,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,141,2,1,0)
	;;=ALLERGY^^I^^^4^1^30^1
	;;^UTILITY(U,$J,358.5,141,2,2,0)
	;;=TYPE^^I^^^4^32^5^2
	;;^UTILITY(U,$J,358.5,141,2,3,0)
	;;=TRUE^^I^^^4^40^3^5
	;;^UTILITY(U,$J,358.5,141,2,4,0)
	;;=VER^^I^^^4^45^3^4
	;;^UTILITY(U,$J,358.5,142,0)
	;;=ALLERGY 3^32^15^0^3
	;;^UTILITY(U,$J,358.5,142,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,142,2,1,0)
	;;=ALLERGY^^I^^^5^1^30^1
	;;^UTILITY(U,$J,358.5,142,2,2,0)
	;;=TYPE^^I^^^5^32^5^2
	;;^UTILITY(U,$J,358.5,142,2,3,0)
	;;=TRUE^^I^^^5^40^3^5
	;;^UTILITY(U,$J,358.5,142,2,4,0)
	;;=VER^^I^^^5^45^3^4
	;;^UTILITY(U,$J,358.5,143,0)
	;;=ALLERGY 4^32^15^1^4
	;;^UTILITY(U,$J,358.5,143,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,143,2,1,0)
	;;=ALLERGY^^I^^^6^1^30^1
	;;^UTILITY(U,$J,358.5,143,2,2,0)
	;;=TYPE^^I^^^6^32^5^2
	;;^UTILITY(U,$J,358.5,143,2,3,0)
	;;=TRUE^^I^^^6^40^3^5
	;;^UTILITY(U,$J,358.5,143,2,4,0)
	;;=VER^^I^^^6^45^3^4
	;;^UTILITY(U,$J,358.5,144,0)
	;;=INSURED?^34^12
	;;^UTILITY(U,$J,358.5,144,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,144,2,1,0)
	;;=Insurance:^^U^1^0^0^12^7^1
	;;^UTILITY(U,$J,358.5,145,0)
	;;=INSURANCE 1^34^13^0^1
	;;^UTILITY(U,$J,358.5,145,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,145,2,1,0)
	;;=COMPANY^^I^^^1^1^28^1
	;;^UTILITY(U,$J,358.5,145,2,2,0)
	;;=Policy Number:^^U^30^0^1^30^19^3
	;;^UTILITY(U,$J,358.5,146,0)
	;;=INSURANCE 2^34^13^0^2
	;;^UTILITY(U,$J,358.5,146,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,146,2,1,0)
	;;=COMPANY^^I^^^2^1^28^1
	;;^UTILITY(U,$J,358.5,146,2,2,0)
	;;=POLICY #^^I^^^2^30^19^3
	;;^UTILITY(U,$J,358.5,147,0)
	;;=INSURANCE 3^34^13^0^3
	;;^UTILITY(U,$J,358.5,147,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,147,2,1,0)
	;;=COMPANY^^I^^^3^1^28^1
	;;^UTILITY(U,$J,358.5,147,2,2,0)
	;;=POLICY #^^I^^^3^30^19^3
	;;^UTILITY(U,$J,358.5,148,0)
	;;=INSURANCE 4^34^13^1^4
	;;^UTILITY(U,$J,358.5,148,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,148,2,1,0)
	;;=COMPANY^^I^^^4^1^28^1
	;;^UTILITY(U,$J,358.5,148,2,2,0)
	;;=POLICY #^^I^^^4^30^19^3
	;;^UTILITY(U,$J,358.5,149,0)
	;;=VITALS^35^3
	;;^UTILITY(U,$J,358.5,149,2,0)
	;;=^357.52I^6^5
	;;^UTILITY(U,$J,358.5,149,2,1,0)
	;;=Weight:^^^1^3^3^11^14^1
	;;^UTILITY(U,$J,358.5,149,2,2,0)
	;;=BP:^^^1^5^5^11^14^1
	;;^UTILITY(U,$J,358.5,149,2,3,0)
	;;=Temp:^^^1^7^7^11^14^1
	;;^UTILITY(U,$J,358.5,149,2,4,0)
	;;=Pulse:^^^1^9^9^11^14^1
	;;^UTILITY(U,$J,358.5,149,2,6,0)
	;;=INITIALS/TIME:^^^5^12^14^2^26^
	;;^UTILITY(U,$J,358.5,150,0)
	;;=SIGNATURE^36^3
	;;^UTILITY(U,$J,358.5,150,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,150,2,1,0)
	;;=Signature of Provider^^^12^4^3^0^45^1
	;;^UTILITY(U,$J,358.5,151,0)
	;;=PATIENT NAME^38^6

IBDEI012
IBDEI012	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,151,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,151,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,152,0)
	;;=PATIENT DOB^38^22
	;;^UTILITY(U,$J,358.5,152,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,152,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,153,0)
	;;=PID^38^7
	;;^UTILITY(U,$J,358.5,153,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,153,2,1,0)
	;;=PID:^^^19^2^2^24^15^1
	;;^UTILITY(U,$J,358.5,154,0)
	;;=SC CONDITION 1^38^11^^1
	;;^UTILITY(U,$J,358.5,154,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,154,2,1,0)
	;;=SC Conditions:^^U^1^4^5^1^40^1
	;;^UTILITY(U,$J,358.5,154,2,2,0)
	;;=%^^I^^^5^42^4^3
	;;^UTILITY(U,$J,358.5,155,0)
	;;=SC CONDITION 2^38^11^^2
	;;^UTILITY(U,$J,358.5,155,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,155,2,1,0)
	;;=CONDITION^^I^^^6^1^40^1
	;;^UTILITY(U,$J,358.5,155,2,2,0)
	;;=%^^I^^^6^42^4^3
	;;^UTILITY(U,$J,358.5,156,0)
	;;=SC CONDITION 3^38^11^^3
	;;^UTILITY(U,$J,358.5,156,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,156,2,1,0)
	;;=CONDITION^^I^^^7^1^40^1
	;;^UTILITY(U,$J,358.5,156,2,2,0)
	;;=%^^I^^^7^42^4^3
	;;^UTILITY(U,$J,358.5,157,0)
	;;=SC CONDITION 4^38^11^1^4
	;;^UTILITY(U,$J,358.5,157,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,157,2,1,0)
	;;=CONDITION^^I^^^8^1^40^1
	;;^UTILITY(U,$J,358.5,157,2,2,0)
	;;=%^^I^^^8^42^4^3
	;;^UTILITY(U,$J,358.5,158,0)
	;;=SEX^38^23
	;;^UTILITY(U,$J,358.5,158,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,158,2,1,0)
	;;=Sex:^^^40^2^2^45^1^2
	;;^UTILITY(U,$J,358.5,159,0)
	;;=ELIGIBILITY^38^8
	;;^UTILITY(U,$J,358.5,159,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,159,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,160,0)
	;;=MEANS TEST CATEGORY^38^24
	;;^UTILITY(U,$J,358.5,160,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,160,2,1,0)
	;;=Means Test Cat:^^^29^4^4^45^1^3
	;;^UTILITY(U,$J,358.5,161,0)
	;;=SERVICE HISTORY DATA^38^25
	;;^UTILITY(U,$J,358.5,161,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,161,2,1,0)
	;;=AO:^^^1^9^9^5^3^2
	;;^UTILITY(U,$J,358.5,161,2,2,0)
	;;=IR:^^^9^9^9^13^3^3
	;;^UTILITY(U,$J,358.5,161,2,3,0)
	;;=POW:^^^17^9^9^22^3^4
	;;^UTILITY(U,$J,358.5,161,2,4,0)
	;;=EC:^^^26^9^9^30^3^6
	;;^UTILITY(U,$J,358.5,162,0)
	;;=SC %^38^8
	;;^UTILITY(U,$J,358.5,162,2,0)
	;;=^357.52I^3^2
	;;^UTILITY(U,$J,358.5,162,2,2,0)
	;;=SC%:^^^17^4^4^22^3^7
	;;^UTILITY(U,$J,358.5,162,2,3,0)
	;;=%^^^25^4
	;;^UTILITY(U,$J,358.5,163,0)
	;;=SC TREATMENT QUESTIONS^39^26
	;;^UTILITY(U,$J,358.5,163,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,163,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1
	;;^UTILITY(U,$J,358.5,163,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,164,0)
	;;=CLINIC^41^5
	;;^UTILITY(U,$J,358.5,164,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,164,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,165,0)
	;;=APPT. DT/TIME^41^4
	;;^UTILITY(U,$J,358.5,165,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,165,2,1,0)
	;;=Appt. DT/Time:^^^0^2^2^15^23^1
	;;^UTILITY(U,$J,358.5,166,0)
	;;=OTHER ALLERGIES^42^3
	;;^UTILITY(U,$J,358.5,166,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,166,2,1,0)
	;;=Other:^^^1^7
	;;^UTILITY(U,$J,358.5,167,0)
	;;=ALLERGY 1^42^15^0^1
	;;^UTILITY(U,$J,358.5,167,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,167,2,1,0)
	;;=ALLERGY^^I^^^3^1^30^1
	;;^UTILITY(U,$J,358.5,167,2,2,0)
	;;=TYPE^^U^32^2^3^32^5^2
	;;^UTILITY(U,$J,358.5,167,2,3,0)
	;;=VER^^U^45^2^3^45^3^4
	;;^UTILITY(U,$J,358.5,167,2,4,0)
	;;=TRUE^^U^39^2^3^40^3^5
	;;^UTILITY(U,$J,358.5,168,0)
	;;=ALLERGY 2^42^15^0^2
	;;^UTILITY(U,$J,358.5,168,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,168,2,1,0)
	;;=ALLERGY^^I^^^4^1^30^1

IBDEI013
IBDEI013	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,168,2,2,0)
	;;=TYPE^^I^^^4^32^5^2
	;;^UTILITY(U,$J,358.5,168,2,3,0)
	;;=TRUE^^I^^^4^40^3^5
	;;^UTILITY(U,$J,358.5,168,2,4,0)
	;;=VER^^I^^^4^45^3^4
	;;^UTILITY(U,$J,358.5,169,0)
	;;=ALLERGY 3^42^15^0^3
	;;^UTILITY(U,$J,358.5,169,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,169,2,1,0)
	;;=ALLERGY^^I^^^5^1^30^1
	;;^UTILITY(U,$J,358.5,169,2,2,0)
	;;=TYPE^^I^^^5^32^5^2
	;;^UTILITY(U,$J,358.5,169,2,3,0)
	;;=TRUE^^I^^^5^40^3^5
	;;^UTILITY(U,$J,358.5,169,2,4,0)
	;;=VER^^I^^^5^45^3^4
	;;^UTILITY(U,$J,358.5,170,0)
	;;=ALLERGY 4^42^15^1^4
	;;^UTILITY(U,$J,358.5,170,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,170,2,1,0)
	;;=ALLERGY^^I^^^6^1^30^1
	;;^UTILITY(U,$J,358.5,170,2,2,0)
	;;=TYPE^^I^^^6^32^5^2
	;;^UTILITY(U,$J,358.5,170,2,3,0)
	;;=TRUE^^I^^^6^40^3^5
	;;^UTILITY(U,$J,358.5,170,2,4,0)
	;;=VER^^I^^^6^45^3^4
	;;^UTILITY(U,$J,358.5,171,0)
	;;=INSURED?^43^12
	;;^UTILITY(U,$J,358.5,171,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,171,2,1,0)
	;;=Insurance:^^U^1^0^0^12^7^1
	;;^UTILITY(U,$J,358.5,172,0)
	;;=INSURANCE 1^43^13^0^1
	;;^UTILITY(U,$J,358.5,172,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,172,2,1,0)
	;;=COMPANY^^I^^^1^1^28^1
	;;^UTILITY(U,$J,358.5,172,2,2,0)
	;;=Policy Number:^^U^30^0^1^30^19^3
	;;^UTILITY(U,$J,358.5,173,0)
	;;=INSURANCE 2^43^13^0^2
	;;^UTILITY(U,$J,358.5,173,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,173,2,1,0)
	;;=COMPANY^^I^^^2^1^28^1
	;;^UTILITY(U,$J,358.5,173,2,2,0)
	;;=POLICY #^^I^^^2^30^19^3
	;;^UTILITY(U,$J,358.5,174,0)
	;;=INSURANCE 3^43^13^0^3
	;;^UTILITY(U,$J,358.5,174,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,174,2,1,0)
	;;=COMPANY^^I^^^3^1^28^1
	;;^UTILITY(U,$J,358.5,174,2,2,0)
	;;=POLICY #^^I^^^3^30^19^3
	;;^UTILITY(U,$J,358.5,175,0)
	;;=INSURANCE 4^43^13^1^4
	;;^UTILITY(U,$J,358.5,175,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,175,2,1,0)
	;;=COMPANY^^I^^^4^1^28^1
	;;^UTILITY(U,$J,358.5,175,2,2,0)
	;;=POLICY #^^I^^^4^30^19^3
	;;^UTILITY(U,$J,358.5,176,0)
	;;=VITALS^45^3
	;;^UTILITY(U,$J,358.5,176,2,0)
	;;=^357.52I^6^5
	;;^UTILITY(U,$J,358.5,176,2,1,0)
	;;=WT:^^^55^2^2^58^14^1
	;;^UTILITY(U,$J,358.5,176,2,2,0)
	;;=BP:^^^1^2^2^4^14^1
	;;^UTILITY(U,$J,358.5,176,2,3,0)
	;;=T:^^^37^2^2^40^14^1
	;;^UTILITY(U,$J,358.5,176,2,4,0)
	;;=P:^^^19^2^2^21^14^1
	;;^UTILITY(U,$J,358.5,176,2,6,0)
	;;=INITIALS/TIME:^^^1^4^4^16^35^
	;;^UTILITY(U,$J,358.5,177,0)
	;;=Comments:^46^2^^^Comments:^^^^1^8^4^2^80
	;;^UTILITY(U,$J,358.5,178,0)
	;;=PROBLEM 1^46^28^0^1
	;;^UTILITY(U,$J,358.5,178,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,178,2,1,0)
	;;=PROBLEM TEXT^^I^^^4^21^48^1
	;;^UTILITY(U,$J,358.5,178,2,2,0)
	;;=ICD-9^^I^^^4^70^7^2
	;;^UTILITY(U,$J,358.5,178,2,3,0)
	;;=SC?^^I^^^4^79^1^5
	;;^UTILITY(U,$J,358.5,179,0)
	;;=PROBLEM 2^46^28^0^2
	;;^UTILITY(U,$J,358.5,179,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,179,2,1,0)
	;;=PROBLEM TEXT^^I^^^5^21^48^1
	;;^UTILITY(U,$J,358.5,179,2,2,0)
	;;=ICD-9^^I^^^5^70^7^2
	;;^UTILITY(U,$J,358.5,179,2,3,0)
	;;=SC?^^I^^^5^79^1^5
	;;^UTILITY(U,$J,358.5,180,0)
	;;=PROBLEM 3^46^28^0^3
	;;^UTILITY(U,$J,358.5,180,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,180,2,1,0)
	;;=PROBLEM TEXT^^I^^^6^21^48^1
	;;^UTILITY(U,$J,358.5,180,2,2,0)
	;;=ICD-9 CODE^^I^^^6^70^7^2
	;;^UTILITY(U,$J,358.5,180,2,3,0)
	;;=PR^^I^^^6^79^1^5
	;;^UTILITY(U,$J,358.5,181,0)
	;;=PROBLEM 4^46^28^1^4
	;;^UTILITY(U,$J,358.5,181,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,181,2,1,0)
	;;=PROBLEM TEXT^^I^^^7^21^48^1
	;;^UTILITY(U,$J,358.5,181,2,2,0)
	;;=ICD-9 CODE^^I^^^7^70^7^2
	;;^UTILITY(U,$J,358.5,181,2,3,0)
	;;=SC?^^I^^^7^79^1^5
	;;^UTILITY(U,$J,358.5,182,0)
	;;=PATIENT NAME^49^6

IBDEI014
IBDEI014	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,182,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,182,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,183,0)
	;;=PATIENT DOB^49^22
	;;^UTILITY(U,$J,358.5,183,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,183,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,184,0)
	;;=PID^49^7
	;;^UTILITY(U,$J,358.5,184,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,184,2,1,0)
	;;=PID:^^^19^2^2^24^15^1
	;;^UTILITY(U,$J,358.5,185,0)
	;;=SC CONDITION 1^49^11^^1
	;;^UTILITY(U,$J,358.5,185,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,185,2,1,0)
	;;=SC Conditions:^^U^1^4^5^1^40^1
	;;^UTILITY(U,$J,358.5,185,2,2,0)
	;;=%^^I^^^5^42^4^3
	;;^UTILITY(U,$J,358.5,186,0)
	;;=SC CONDITION 2^49^11^^2
	;;^UTILITY(U,$J,358.5,186,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,186,2,1,0)
	;;=CONDITION^^I^^^6^1^40^1
	;;^UTILITY(U,$J,358.5,186,2,2,0)
	;;=%^^I^^^6^42^4^3
	;;^UTILITY(U,$J,358.5,187,0)
	;;=SC CONDITION 3^49^11^^3
	;;^UTILITY(U,$J,358.5,187,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,187,2,1,0)
	;;=CONDITION^^I^^^7^1^40^1
	;;^UTILITY(U,$J,358.5,187,2,2,0)
	;;=%^^I^^^7^42^4^3
	;;^UTILITY(U,$J,358.5,188,0)
	;;=SC CONDITION 4^49^11^1^4
	;;^UTILITY(U,$J,358.5,188,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,188,2,1,0)
	;;=CONDITION^^I^^^8^1^40^1
	;;^UTILITY(U,$J,358.5,188,2,2,0)
	;;=%^^I^^^8^42^4^3
	;;^UTILITY(U,$J,358.5,189,0)
	;;=SEX^49^23
	;;^UTILITY(U,$J,358.5,189,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,189,2,1,0)
	;;=Sex:^^^40^2^2^45^1^2
	;;^UTILITY(U,$J,358.5,190,0)
	;;=ELIGIBILITY^49^8
	;;^UTILITY(U,$J,358.5,190,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,190,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,191,0)
	;;=MEANS TEST CATEGORY^49^24
	;;^UTILITY(U,$J,358.5,191,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,191,2,1,0)
	;;=Means Test Cat:^^^29^4^4^45^1^3
	;;^UTILITY(U,$J,358.5,192,0)
	;;=SERVICE HISTORY DATA^49^25
	;;^UTILITY(U,$J,358.5,192,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,192,2,1,0)
	;;=AO:^^^1^9^9^5^3^2
	;;^UTILITY(U,$J,358.5,192,2,2,0)
	;;=IR:^^^9^9^9^13^3^3
	;;^UTILITY(U,$J,358.5,192,2,3,0)
	;;=POW:^^^17^9^9^22^3^4
	;;^UTILITY(U,$J,358.5,192,2,4,0)
	;;=EC:^^^26^9^9^30^3^6
	;;^UTILITY(U,$J,358.5,193,0)
	;;=SC %^49^8
	;;^UTILITY(U,$J,358.5,193,2,0)
	;;=^357.52I^3^2
	;;^UTILITY(U,$J,358.5,193,2,2,0)
	;;=SC%:^^^17^4^4^22^3^7
	;;^UTILITY(U,$J,358.5,193,2,3,0)
	;;=%^^^25^4
	;;^UTILITY(U,$J,358.5,194,0)
	;;=SIGNATURE^50^3
	;;^UTILITY(U,$J,358.5,194,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,194,2,1,0)
	;;=Signature of Provider^^^11^1^0^1^40^1
	;;^UTILITY(U,$J,358.5,195,0)
	;;=SC TREATMENT QUESTIONS^51^26
	;;^UTILITY(U,$J,358.5,195,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,195,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1
	;;^UTILITY(U,$J,358.5,195,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,196,0)
	;;=Comments:^53^2^^^Comments:^^^^1^8^4^2^72
	;;^UTILITY(U,$J,358.5,197,0)
	;;=PROBLEM 1^53^28^0^1
	;;^UTILITY(U,$J,358.5,197,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,197,2,1,0)
	;;=PROBLEM TEXT^^I^^^4^21^40^1
	;;^UTILITY(U,$J,358.5,197,2,2,0)
	;;=ICD-9^^I^^^4^62^7^2
	;;^UTILITY(U,$J,358.5,197,2,3,0)
	;;=SC?^^I^^^4^71^1^5
	;;^UTILITY(U,$J,358.5,198,0)
	;;=PROBLEM 2^53^28^0^2
	;;^UTILITY(U,$J,358.5,198,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,198,2,1,0)
	;;=PROBLEM TEXT^^I^^^5^21^40^1
	;;^UTILITY(U,$J,358.5,198,2,2,0)
	;;=ICD-9^^I^^^5^62^7^2
	;;^UTILITY(U,$J,358.5,198,2,3,0)
	;;=SC?^^I^^^5^71^1^5
	;;^UTILITY(U,$J,358.5,199,0)
	;;=PROBLEM 3^53^28^0^3
	;;^UTILITY(U,$J,358.5,199,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,199,2,1,0)
	;;=PROBLEM TEXT^^I^^^6^21^40^1

IBDEI015
IBDEI015	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,199,2,2,0)
	;;=ICD-9 CODE^^I^^^6^62^7^2
	;;^UTILITY(U,$J,358.5,199,2,3,0)
	;;=SC?^^I^^^6^71^1^5
	;;^UTILITY(U,$J,358.5,200,0)
	;;=PROBLEM 4^53^28^1^4
	;;^UTILITY(U,$J,358.5,200,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,200,2,1,0)
	;;=PROBLEM TEXT^^I^^^7^21^40^1
	;;^UTILITY(U,$J,358.5,200,2,2,0)
	;;=ICD-9 CODE^^I^^^7^62^7^2
	;;^UTILITY(U,$J,358.5,200,2,3,0)
	;;=SC?^^I^^^7^71^1^5
	;;^UTILITY(U,$J,358.5,201,0)
	;;=OTHER ALLERGIES^54^3
	;;^UTILITY(U,$J,358.5,201,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,201,2,1,0)
	;;=Other:^^^1^7
	;;^UTILITY(U,$J,358.5,202,0)
	;;=ALLERGY 1^54^15^0^1
	;;^UTILITY(U,$J,358.5,202,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,202,2,1,0)
	;;=ALLERGY^^I^^^3^1^30^1
	;;^UTILITY(U,$J,358.5,202,2,2,0)
	;;=TYPE^^U^32^2^3^32^5^2
	;;^UTILITY(U,$J,358.5,202,2,3,0)
	;;=VER^^U^45^2^3^45^3^4
	;;^UTILITY(U,$J,358.5,202,2,4,0)
	;;=TRUE^^U^39^2^3^40^3^5
	;;^UTILITY(U,$J,358.5,203,0)
	;;=ALLERGY 2^54^15^0^2
	;;^UTILITY(U,$J,358.5,203,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,203,2,1,0)
	;;=ALLERGY^^I^^^4^1^30^1
	;;^UTILITY(U,$J,358.5,203,2,2,0)
	;;=TYPE^^I^^^4^32^5^2
	;;^UTILITY(U,$J,358.5,203,2,3,0)
	;;=TRUE^^I^^^4^40^3^5
	;;^UTILITY(U,$J,358.5,203,2,4,0)
	;;=VER^^I^^^4^45^3^4
	;;^UTILITY(U,$J,358.5,204,0)
	;;=ALLERGY 3^54^15^0^3
	;;^UTILITY(U,$J,358.5,204,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,204,2,1,0)
	;;=ALLERGY^^I^^^5^1^30^1
	;;^UTILITY(U,$J,358.5,204,2,2,0)
	;;=TYPE^^I^^^5^32^5^2
	;;^UTILITY(U,$J,358.5,204,2,3,0)
	;;=TRUE^^I^^^5^40^3^5
	;;^UTILITY(U,$J,358.5,204,2,4,0)
	;;=VER^^I^^^5^45^3^4
	;;^UTILITY(U,$J,358.5,205,0)
	;;=ALLERGY 4^54^15^1^4
	;;^UTILITY(U,$J,358.5,205,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,205,2,1,0)
	;;=ALLERGY^^I^^^6^1^30^1
	;;^UTILITY(U,$J,358.5,205,2,2,0)
	;;=TYPE^^I^^^6^32^5^2
	;;^UTILITY(U,$J,358.5,205,2,3,0)
	;;=TRUE^^I^^^6^40^3^5
	;;^UTILITY(U,$J,358.5,205,2,4,0)
	;;=VER^^I^^^6^45^3^4
	;;^UTILITY(U,$J,358.5,206,0)
	;;=CLINIC^55^5
	;;^UTILITY(U,$J,358.5,206,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,206,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,207,0)
	;;=APPT. DT/TIME^55^4
	;;^UTILITY(U,$J,358.5,207,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,207,2,1,0)
	;;=Appt. DT/Time:^^^0^2^2^15^23^1
	;;^UTILITY(U,$J,358.5,208,0)
	;;=CANCELLED?^56^3
	;;^UTILITY(U,$J,358.5,208,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,208,2,1,0)
	;;=Cancelled^^^1^2^2^13^20^1
	;;^UTILITY(U,$J,358.5,209,0)
	;;=NO-SHOW?^56^3
	;;^UTILITY(U,$J,358.5,209,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,209,2,1,0)
	;;=No-Show^^^1^3^3^13^20^1
	;;^UTILITY(U,$J,358.5,210,0)
	;;=CHECKED-OUT?^56^3
	;;^UTILITY(U,$J,358.5,210,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,210,2,1,0)
	;;=Checked-Out^^^1^4^4^13^20^1
	;;^UTILITY(U,$J,358.5,211,0)
	;;=RESCHEDULED?^56^3
	;;^UTILITY(U,$J,358.5,211,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,211,2,1,0)
	;;=Rescheduled^^^1^1^1^13^20^1
	;;^UTILITY(U,$J,358.5,212,0)
	;;=PATIENT NAME^57^6
	;;^UTILITY(U,$J,358.5,212,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,212,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,213,0)
	;;=PATIENT DOB^57^22
	;;^UTILITY(U,$J,358.5,213,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,213,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,214,0)
	;;=PID^57^7
	;;^UTILITY(U,$J,358.5,214,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,214,2,1,0)
	;;=PID:^^^19^2^2^24^15^1
	;;^UTILITY(U,$J,358.5,215,0)
	;;=SC CONDITION 1^57^11^^1
	;;^UTILITY(U,$J,358.5,215,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,215,2,1,0)
	;;=SC Conditions:^^U^1^4^5^1^40^1
	;;^UTILITY(U,$J,358.5,215,2,2,0)
	;;=%^^I^^^5^42^4^3

IBDEI016
IBDEI016	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,216,0)
	;;=SC CONDITION 2^57^11^^2
	;;^UTILITY(U,$J,358.5,216,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,216,2,1,0)
	;;=CONDITION^^I^^^6^1^40^1
	;;^UTILITY(U,$J,358.5,216,2,2,0)
	;;=%^^I^^^6^42^4^3
	;;^UTILITY(U,$J,358.5,217,0)
	;;=SC CONDITION 3^57^11^^3
	;;^UTILITY(U,$J,358.5,217,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,217,2,1,0)
	;;=CONDITION^^I^^^7^1^40^1
	;;^UTILITY(U,$J,358.5,217,2,2,0)
	;;=%^^I^^^7^42^4^3
	;;^UTILITY(U,$J,358.5,218,0)
	;;=SC CONDITION 4^57^11^1^4
	;;^UTILITY(U,$J,358.5,218,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,218,2,1,0)
	;;=CONDITION^^I^^^8^1^40^1
	;;^UTILITY(U,$J,358.5,218,2,2,0)
	;;=%^^I^^^8^42^4^3
	;;^UTILITY(U,$J,358.5,219,0)
	;;=SEX^57^23
	;;^UTILITY(U,$J,358.5,219,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,219,2,1,0)
	;;=Sex:^^^40^2^2^45^1^2
	;;^UTILITY(U,$J,358.5,220,0)
	;;=ELIGIBILITY^57^8
	;;^UTILITY(U,$J,358.5,220,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,220,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,221,0)
	;;=MEANS TEST CATEGORY^57^24
	;;^UTILITY(U,$J,358.5,221,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,221,2,1,0)
	;;=Means Test Cat:^^^29^4^4^45^1^3
	;;^UTILITY(U,$J,358.5,222,0)
	;;=SERVICE HISTORY DATA^57^25
	;;^UTILITY(U,$J,358.5,222,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,222,2,1,0)
	;;=AO:^^^1^9^9^5^3^2
	;;^UTILITY(U,$J,358.5,222,2,2,0)
	;;=IR:^^^9^9^9^13^3^3
	;;^UTILITY(U,$J,358.5,222,2,3,0)
	;;=POW:^^^17^9^9^22^3^4
	;;^UTILITY(U,$J,358.5,222,2,4,0)
	;;=EC:^^^26^9^9^30^3^6
	;;^UTILITY(U,$J,358.5,223,0)
	;;=SC %^57^8
	;;^UTILITY(U,$J,358.5,223,2,0)
	;;=^357.52I^3^2
	;;^UTILITY(U,$J,358.5,223,2,2,0)
	;;=SC%:^^^17^4^4^22^3^7
	;;^UTILITY(U,$J,358.5,223,2,3,0)
	;;=%^^^25^4
	;;^UTILITY(U,$J,358.5,224,0)
	;;=PATEINT NAME^59^6
	;;^UTILITY(U,$J,358.5,224,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,224,2,1,0)
	;;=NAME^^I^^^0^0^30^1
	;;^UTILITY(U,$J,358.5,225,0)
	;;=PID^59^7
	;;^UTILITY(U,$J,358.5,225,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,225,2,1,0)
	;;=PID^^I^^^1^0^15^1
	;;^UTILITY(U,$J,358.5,226,0)
	;;=ELIGIBILITY^59^8
	;;^UTILITY(U,$J,358.5,226,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,226,2,1,0)
	;;=Elig:^^^0^2^2^6^30^1
	;;^UTILITY(U,$J,358.5,227,0)
	;;=ADDRESS LINE 1^59^9^0^1
	;;^UTILITY(U,$J,358.5,227,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,227,2,1,0)
	;;=LINE1^^I^^^0^39^45^1
	;;^UTILITY(U,$J,358.5,228,0)
	;;=ADDRESS LINE 2^59^9^0^2
	;;^UTILITY(U,$J,358.5,228,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,228,2,1,0)
	;;=LINE2^^I^^^1^39^45^1
	;;^UTILITY(U,$J,358.5,229,0)
	;;=DATE^59^10
	;;^UTILITY(U,$J,358.5,229,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,229,2,1,0)
	;;=Date Printed:^^^92^1^1^106^12^1
	;;^UTILITY(U,$J,358.5,230,0)
	;;=CHECK IF SC^59^3
	;;^UTILITY(U,$J,358.5,230,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,230,2,1,0)
	;;=*** NOTE:  IF THE PATIENT'S TREATMENT WAS FOR ANY CONDITION RELATED TO THE FOLLOWING SERVICE-CONNECTED^^^7^4
	;;^UTILITY(U,$J,358.5,230,2,2,0)
	;;=DISABILITIES, CHECK BELOW TO THE LEFT OF THE LISTED CONDITON(S). ***^^^11^5
	;;^UTILITY(U,$J,358.5,231,0)
	;;=SC DISABILITY 1^59^11^0^1
	;;^UTILITY(U,$J,358.5,231,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,231,2,1,0)
	;;=Disabilities:^^^8^7
	;;^UTILITY(U,$J,358.5,231,2,2,0)
	;;=(__)^^^0^8^8^5^45^1
	;;^UTILITY(U,$J,358.5,231,2,3,0)
	;;=% - SERVICE CONNECTED^^I^^^8^51^24^5
	;;^UTILITY(U,$J,358.5,232,0)
	;;=SC DISABILITY 2^59^11^0^2
	;;^UTILITY(U,$J,358.5,232,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,232,2,1,0)
	;;=(__)^^^0^9^9^5^45^1
	;;^UTILITY(U,$J,358.5,232,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^9^51^24^5

IBDEI017
IBDEI017	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,233,0)
	;;=SC DISABILITY 3^59^11^1^3
	;;^UTILITY(U,$J,358.5,233,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,233,2,1,0)
	;;=(__)^^^0^10^10^5^45^1
	;;^UTILITY(U,$J,358.5,233,2,2,0)
	;;=% - SERVICE CONNECTED^^I^^^10^51^24^5
	;;^UTILITY(U,$J,358.5,234,0)
	;;=INSURED?^59^12
	;;^UTILITY(U,$J,358.5,234,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,234,2,1,0)
	;;=Health Insurance:^^^3^12^12^21^7^1
	;;^UTILITY(U,$J,358.5,235,0)
	;;=INSURANCE 1^59^13^0^1
	;;^UTILITY(U,$J,358.5,235,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,235,2,1,0)
	;;=Insurance^^U^3^13^14^3^30^1
	;;^UTILITY(U,$J,358.5,235,2,2,0)
	;;=Policy #^^U^35^13^14^35^20^3
	;;^UTILITY(U,$J,358.5,235,2,3,0)
	;;=Group #^^U^58^13^14^58^17^4
	;;^UTILITY(U,$J,358.5,235,2,4,0)
	;;=Holder^^U^77^13^14^77^9^7
	;;^UTILITY(U,$J,358.5,236,0)
	;;=INSURANCE 2^59^13^0^2
	;;^UTILITY(U,$J,358.5,236,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,236,2,1,0)
	;;=COMPANY^^I^^^15^3^30^1
	;;^UTILITY(U,$J,358.5,236,2,2,0)
	;;=POLICY #^^I^^^15^35^20^3
	;;^UTILITY(U,$J,358.5,236,2,3,0)
	;;=GROUP #^^I^^^15^58^17^4
	;;^UTILITY(U,$J,358.5,236,2,4,0)
	;;=HOLDER^^I^^^15^77^9^7
	;;^UTILITY(U,$J,358.5,237,0)
	;;=INSURANCE 3^59^13^1^3
	;;^UTILITY(U,$J,358.5,237,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,237,2,1,0)
	;;=COMPANY^^I^^^16^3^30^1
	;;^UTILITY(U,$J,358.5,237,2,2,0)
	;;=POLICY #^^I^^^16^35^20^3
	;;^UTILITY(U,$J,358.5,237,2,3,0)
	;;=GROUP #^^I^^^16^58^17^4
	;;^UTILITY(U,$J,358.5,237,2,4,0)
	;;=HOLDER^^I^^^16^77^9^7
	;;^UTILITY(U,$J,358.5,238,0)
	;;=FACILITY^59^14
	;;^UTILITY(U,$J,358.5,238,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,238,2,1,0)
	;;=FACILITY:^^^92^0^0^102^30^1
	;;^UTILITY(U,$J,358.5,239,0)
	;;=ADDRESS LINE 3^59^9^1^3
	;;^UTILITY(U,$J,358.5,239,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,239,2,1,0)
	;;=LINE 3^^I^^^2^39^45^1
	;;^UTILITY(U,$J,358.5,240,0)
	;;=PROCEDURE NOTE^60^2^^^Procedure Note:^^^^0^0^4^2^132
	;;^UTILITY(U,$J,358.5,241,0)
	;;=Preop Dx:^60^2^^^Preop Dx:^^^^0^4^2^2^132
	;;^UTILITY(U,$J,358.5,242,0)
	;;=POSTOP DX^60^2^^^Postop Dx:^^^^0^6^2^2^132
	;;^UTILITY(U,$J,358.5,243,0)
	;;=PROCEDURE^60^2^^^Procedure:^^^^0^8^2^2^132
	;;^UTILITY(U,$J,358.5,244,0)
	;;=ANESTHESIA^60^2^^^Anesthesia:^^^^0^10^2^2^132
	;;^UTILITY(U,$J,358.5,245,0)
	;;=SURGEON^60^2^^^Surgeon:^^^^0^12^2^2^132
	;;^UTILITY(U,$J,358.5,246,0)
	;;=ATTENDING^60^2^^^Attending:^^^^0^14^2^2^132
	;;^UTILITY(U,$J,358.5,247,0)
	;;=FINDINGS^60^2^^^Findings:^^^^0^16^4^2^132
	;;^UTILITY(U,$J,358.5,248,0)
	;;=HEADER^61^3
	;;^UTILITY(U,$J,358.5,248,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,248,2,1,0)
	;;=**DOCTORS ORDERS**^^^50^0
	;;^UTILITY(U,$J,358.5,248,2,2,0)
	;;=Nurs. Sig^^^118^0
	;;^UTILITY(U,$J,358.5,249,0)
	;;=DOCTORS ORDERS^61^2^^^^^^^0^2^18^2^110
	;;^UTILITY(U,$J,358.5,250,0)
	;;=NURSE'S SIGNATURE^61^2^^^^^^^118^2^18^2^13
	;;^UTILITY(U,$J,358.5,251,0)
	;;=APPOINTMENT #1^66^30^0^1
	;;^UTILITY(U,$J,358.5,251,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,251,2,1,0)
	;;=CLINIC^^I^^^2^1^30^4
	;;^UTILITY(U,$J,358.5,251,2,2,0)
	;;=DATE@TIME^^I^^^2^32^17^3
	;;^UTILITY(U,$J,358.5,252,0)
	;;=APPOINTMENT #2^66^30^0^2
	;;^UTILITY(U,$J,358.5,252,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,252,2,1,0)
	;;=CLINIC^^I^^^3^1^30^4
	;;^UTILITY(U,$J,358.5,252,2,2,0)
	;;=DATE@TIME^^I^^^3^32^17^3
	;;^UTILITY(U,$J,358.5,253,0)
	;;=APPOINTMENT #3^66^30^0^3
	;;^UTILITY(U,$J,358.5,253,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,253,2,1,0)
	;;=CLINIC^^I^^^4^1^30^4
	;;^UTILITY(U,$J,358.5,253,2,2,0)
	;;=DATE@TIME^^I^^^4^32^17^3
	;;^UTILITY(U,$J,358.5,254,0)
	;;=APPOINTMENT #4^66^30^1^4

IBDEI018
IBDEI018	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,254,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,254,2,1,0)
	;;=CLINIC^^I^^^5^1^30^4
	;;^UTILITY(U,$J,358.5,254,2,2,0)
	;;=DATE@TIME^^I^^^5^32^17^3
	;;^UTILITY(U,$J,358.5,255,0)
	;;=APPOINTMENT #1^67^31^0^1
	;;^UTILITY(U,$J,358.5,255,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,255,2,1,0)
	;;=CLINIC^^I^^^2^1^30^4
	;;^UTILITY(U,$J,358.5,255,2,2,0)
	;;=DATE@TIME^^I^^^2^32^17^3
	;;^UTILITY(U,$J,358.5,256,0)
	;;=APPOINTMENT #2^67^31^0^2
	;;^UTILITY(U,$J,358.5,256,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,256,2,1,0)
	;;=CLINIC^^I^^^3^1^30^4
	;;^UTILITY(U,$J,358.5,256,2,2,0)
	;;=DATE@TIME^^I^^^3^32^17^3
	;;^UTILITY(U,$J,358.5,257,0)
	;;=APPOINTMENT #3^67^31^0^3
	;;^UTILITY(U,$J,358.5,257,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,257,2,1,0)
	;;=CLINIC^^I^^^4^1^30^4
	;;^UTILITY(U,$J,358.5,257,2,2,0)
	;;=DATE@TIME^^I^^^4^32^17^3
	;;^UTILITY(U,$J,358.5,258,0)
	;;=APPOINTMENT #4^67^31^0^4
	;;^UTILITY(U,$J,358.5,258,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,258,2,1,0)
	;;=CLINIC^^I^^^5^1^30^4
	;;^UTILITY(U,$J,358.5,258,2,2,0)
	;;=DATE@TIME^^I^^^5^32^17^3
	;;^UTILITY(U,$J,358.5,259,0)
	;;=APPOINTMENT #5^67^31^0^5
	;;^UTILITY(U,$J,358.5,259,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,259,2,1,0)
	;;=CLINIC^^I^^^6^1^30^4
	;;^UTILITY(U,$J,358.5,259,2,2,0)
	;;=DATE@TIME^^I^^^6^32^17^3
	;;^UTILITY(U,$J,358.5,260,0)
	;;=APPOINTMENT #6^67^31^1^6
	;;^UTILITY(U,$J,358.5,260,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,260,2,1,0)
	;;=CLINIC^^I^^^7^1^30^4
	;;^UTILITY(U,$J,358.5,260,2,2,0)
	;;=DATE@TIME^^I^^^7^32^17^3
	;;^UTILITY(U,$J,358.5,261,0)
	;;=APPOINTMENT #1^68^32^0^1
	;;^UTILITY(U,$J,358.5,261,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,261,2,1,0)
	;;=CLINIC^^I^^^2^1^30^4
	;;^UTILITY(U,$J,358.5,261,2,2,0)
	;;=DATE@TIME^^I^^^2^32^17^3
	;;^UTILITY(U,$J,358.5,262,0)
	;;=APPOINTMENT #2^68^32^0^2
	;;^UTILITY(U,$J,358.5,262,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,262,2,1,0)
	;;=CLINIC^^I^^^3^1^30^4
	;;^UTILITY(U,$J,358.5,262,2,2,0)
	;;=DATE@TIME^^I^^^3^32^17^3
	;;^UTILITY(U,$J,358.5,263,0)
	;;=APPOINTMENT #3^68^32^0^3
	;;^UTILITY(U,$J,358.5,263,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,263,2,1,0)
	;;=CLINIC^^I^^^4^1^30^4
	;;^UTILITY(U,$J,358.5,263,2,2,0)
	;;=DATE@TIME^^I^^^4^32^17^3
	;;^UTILITY(U,$J,358.5,264,0)
	;;=APPOINTMENT #4^68^32^1^4
	;;^UTILITY(U,$J,358.5,264,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,264,2,1,0)
	;;=CLINIC^^I^^^5^1^30^4
	;;^UTILITY(U,$J,358.5,264,2,2,0)
	;;=DATE@TIME^^I^^^5^32^17^3
	;;^UTILITY(U,$J,358.5,265,0)
	;;=SC TREATMENT QUESTIONS^69^26
	;;^UTILITY(U,$J,358.5,265,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,265,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1
	;;^UTILITY(U,$J,358.5,265,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,266,0)
	;;=ORDERS^71^3
	;;^UTILITY(U,$J,358.5,266,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,266,2,1,0)
	;;=EKG (  )^^^3^1
	;;^UTILITY(U,$J,358.5,266,2,2,0)
	;;=X-Ray (  )^^^12^1^1^23^109^1
	;;^UTILITY(U,$J,358.5,266,2,3,0)
	;;=LAB (  )^^^3^3^3^12^60^1
	;;^UTILITY(U,$J,358.5,266,2,4,0)
	;;=,^^^73^3^3^75^57^1
	;;^UTILITY(U,$J,358.5,267,0)
	;;=CONSULTS^71^3
	;;^UTILITY(U,$J,358.5,267,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,267,2,1,0)
	;;=Consults (  )^^^3^5^5^17^55^1
	;;^UTILITY(U,$J,358.5,267,2,2,0)
	;;=,^^^73^5^5^75^57^1
	;;^UTILITY(U,$J,358.5,268,0)
	;;=DISPOSITION^71^3
	;;^UTILITY(U,$J,358.5,268,2,0)
	;;=^357.52I^3^3
	;;^UTILITY(U,$J,358.5,268,2,1,0)
	;;=Return Visit (  )^^^3^7^7^21^25^1
	;;^UTILITY(U,$J,358.5,268,2,2,0)
	;;=Discharge (  )^^^48^7
	;;^UTILITY(U,$J,358.5,268,2,3,0)
	;;=Scheduled Admission (  )^^^67^7^7^92^40^1

IBDEI019
IBDEI019	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,269,0)
	;;=COMMENTS^71^2^^^^^^^0^8^4^2^132
	;;^UTILITY(U,$J,358.5,275,0)
	;;=PROGRESS NOTES^73^2^^^Progress Notes:   (  ) Attached  (  ) See Chart^^^^0^0^9^2^132
	;;^UTILITY(U,$J,358.5,276,0)
	;;=SIGNATURE^73^3
	;;^UTILITY(U,$J,358.5,276,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,276,2,1,0)
	;;=Provider Signature:^^^30^9^10^50^50^1
	;;^UTILITY(U,$J,358.5,277,0)
	;;=SIGNATURE^74^3
	;;^UTILITY(U,$J,358.5,277,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,277,2,1,0)
	;;=Signature of Provider^^^60^4^3^60^40^1
	;;^UTILITY(U,$J,358.5,278,0)
	;;=CLINIC^74^5
	;;^UTILITY(U,$J,358.5,278,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,278,2,1,0)
	;;=Clinic:^^^0^3^3^8^30^1
	;;^UTILITY(U,$J,358.5,279,0)
	;;=ADDRESS LINE 1^75^9^^1
	;;^UTILITY(U,$J,358.5,279,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,279,2,1,0)
	;;=Address:^^U^1^1^2^1^45^1
	;;^UTILITY(U,$J,358.5,280,0)
	;;=TELEPHONE^75^16
	;;^UTILITY(U,$J,358.5,280,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,280,2,1,0)
	;;=Telephone:^^^15^1^1^26^20^1
	;;^UTILITY(U,$J,358.5,281,0)
	;;=ADDRESS LINE 2^75^9^^2
	;;^UTILITY(U,$J,358.5,281,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,281,2,1,0)
	;;=ADDRESS LINE 2^^I^^^3^1^45^1
	;;^UTILITY(U,$J,358.5,282,0)
	;;=ADDRESS LINE 3^75^9^^3
	;;^UTILITY(U,$J,358.5,282,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,282,2,1,0)
	;;=ADDRESS LINE 3^^I^^^4^1^45^1
	;;^UTILITY(U,$J,358.5,283,0)
	;;=ADDRESS LINE 4^75^9^1^4
	;;^UTILITY(U,$J,358.5,283,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,283,2,1,0)
	;;=ADDRESS LINE 4^^I^^^5^1^45^1
	;;^UTILITY(U,$J,358.5,284,0)
	;;=INSURED?^75^12
	;;^UTILITY(U,$J,358.5,284,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,284,2,1,0)
	;;=Insurance:^^U^1^6^6^12^7^1
	;;^UTILITY(U,$J,358.5,285,0)
	;;=INSURANCE 1^75^13^0^1
	;;^UTILITY(U,$J,358.5,285,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,285,2,1,0)
	;;=COMPANY^^I^^^7^1^28^1
	;;^UTILITY(U,$J,358.5,285,2,2,0)
	;;=Policy Number:^^U^30^6^7^30^19^3
	;;^UTILITY(U,$J,358.5,286,0)
	;;=INSURANCE 2^75^13^0^2
	;;^UTILITY(U,$J,358.5,286,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,286,2,1,0)
	;;=COMPANY^^I^^^8^1^28^1
	;;^UTILITY(U,$J,358.5,286,2,2,0)
	;;=POLICY #^^I^^^8^30^19^3
	;;^UTILITY(U,$J,358.5,287,0)
	;;=INSURANCE 3^75^13^0^3
	;;^UTILITY(U,$J,358.5,287,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,287,2,1,0)
	;;=COMPANY^^I^^^9^1^28^1
	;;^UTILITY(U,$J,358.5,287,2,2,0)
	;;=POLICY #^^I^^^9^30^19^3
	;;^UTILITY(U,$J,358.5,288,0)
	;;=INSURANCE 4^75^13^1^4
	;;^UTILITY(U,$J,358.5,288,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,288,2,1,0)
	;;=COMPANY^^I^^^10^1^28^1
	;;^UTILITY(U,$J,358.5,288,2,2,0)
	;;=POLICY #^^I^^^10^30^19^3
	;;^UTILITY(U,$J,358.5,289,0)
	;;=MARITAL STATUS^75^17
	;;^UTILITY(U,$J,358.5,289,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,289,2,1,0)
	;;=Marital Status:^^^1^11^11^17^15^1
	;;^UTILITY(U,$J,358.5,290,0)
	;;=EMPLOYER^75^18
	;;^UTILITY(U,$J,358.5,290,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,290,2,1,0)
	;;=Employer:^^U^1^12^13^4^45^1
	;;^UTILITY(U,$J,358.5,291,0)
	;;=EMPLOYMENT STATUS^75^19
	;;^UTILITY(U,$J,358.5,291,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,291,2,1,0)
	;;=Status:^^^20^12^12^28^20^1
	;;^UTILITY(U,$J,358.5,292,0)
	;;=SPOUSE'S EMPLOYER^75^20
	;;^UTILITY(U,$J,358.5,292,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,292,2,1,0)
	;;=Spouse's Employer:^^U^1^14^15^4^45^1
	;;^UTILITY(U,$J,358.5,293,0)
	;;=VITALS^78^3
	;;^UTILITY(U,$J,358.5,293,2,0)
	;;=^357.52I^6^5
	;;^UTILITY(U,$J,358.5,293,2,1,0)
	;;=WT:^^^5^2^2^9^14^1
	;;^UTILITY(U,$J,358.5,293,2,2,0)
	;;=BP:^^^24^2^2^28^14^1
	;;^UTILITY(U,$J,358.5,293,2,3,0)
	;;=T:^^^43^2^2^46^14^1

IBDEI01A
IBDEI01A	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,293,2,4,0)
	;;=P:^^^61^2^2^63^14^1
	;;^UTILITY(U,$J,358.5,293,2,6,0)
	;;=INITIALS/TIME:^^^79^2^2^94^35^1
	;;^UTILITY(U,$J,358.5,294,0)
	;;=CLINIC^80^5
	;;^UTILITY(U,$J,358.5,294,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,294,2,1,0)
	;;=Clinic:^^^0^0^0^8^30^1
	;;^UTILITY(U,$J,358.5,295,0)
	;;=APPT. DT/TIME^80^4
	;;^UTILITY(U,$J,358.5,295,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,295,2,1,0)
	;;=Appt. DT/Time:^^^0^2^2^15^23^1
	;;^UTILITY(U,$J,358.5,296,0)
	;;=OTHER ALLERGIES^81^3
	;;^UTILITY(U,$J,358.5,296,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,296,2,1,0)
	;;=Other:^^^1^7
	;;^UTILITY(U,$J,358.5,297,0)
	;;=ALLERGY 1^81^15^0^1
	;;^UTILITY(U,$J,358.5,297,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,297,2,1,0)
	;;=ALLERGY^^I^^^3^1^30^1
	;;^UTILITY(U,$J,358.5,297,2,2,0)
	;;=TYPE^^U^32^2^3^32^5^2
	;;^UTILITY(U,$J,358.5,297,2,3,0)
	;;=VER^^U^45^2^3^45^3^4
	;;^UTILITY(U,$J,358.5,297,2,4,0)
	;;=TRUE^^U^39^2^3^40^3^5
	;;^UTILITY(U,$J,358.5,298,0)
	;;=ALLERGY 2^81^15^0^2
	;;^UTILITY(U,$J,358.5,298,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,298,2,1,0)
	;;=ALLERGY^^I^^^4^1^30^1
	;;^UTILITY(U,$J,358.5,298,2,2,0)
	;;=TYPE^^I^^^4^32^5^2
	;;^UTILITY(U,$J,358.5,298,2,3,0)
	;;=TRUE^^I^^^4^40^3^5
	;;^UTILITY(U,$J,358.5,298,2,4,0)
	;;=VER^^I^^^4^45^3^4
	;;^UTILITY(U,$J,358.5,299,0)
	;;=ALLERGY 3^81^15^0^3
	;;^UTILITY(U,$J,358.5,299,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,299,2,1,0)
	;;=ALLERGY^^I^^^5^1^30^1
	;;^UTILITY(U,$J,358.5,299,2,2,0)
	;;=TYPE^^I^^^5^32^5^2
	;;^UTILITY(U,$J,358.5,299,2,3,0)
	;;=TRUE^^I^^^5^40^3^5
	;;^UTILITY(U,$J,358.5,299,2,4,0)
	;;=VER^^I^^^5^45^3^4
	;;^UTILITY(U,$J,358.5,300,0)
	;;=ALLERGY 4^81^15^1^4
	;;^UTILITY(U,$J,358.5,300,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,300,2,1,0)
	;;=ALLERGY^^I^^^6^1^30^1
	;;^UTILITY(U,$J,358.5,300,2,2,0)
	;;=TYPE^^I^^^6^32^5^2
	;;^UTILITY(U,$J,358.5,300,2,3,0)
	;;=TRUE^^I^^^6^40^3^5
	;;^UTILITY(U,$J,358.5,300,2,4,0)
	;;=VER^^I^^^6^45^3^4
	;;^UTILITY(U,$J,358.5,301,0)
	;;=ADDRESS LINE 1^82^9^^1
	;;^UTILITY(U,$J,358.5,301,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,301,2,1,0)
	;;=Address:^^U^1^1^2^1^45^1
	;;^UTILITY(U,$J,358.5,302,0)
	;;=TELEPHONE^82^16
	;;^UTILITY(U,$J,358.5,302,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,302,2,1,0)
	;;=Telephone:^^^15^1^1^26^20^1
	;;^UTILITY(U,$J,358.5,303,0)
	;;=ADDRESS LINE 2^82^9^^2
	;;^UTILITY(U,$J,358.5,303,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,303,2,1,0)
	;;=ADDRESS LINE 2^^I^^^3^1^45^1
	;;^UTILITY(U,$J,358.5,304,0)
	;;=ADDRESS LINE 3^82^9^^3
	;;^UTILITY(U,$J,358.5,304,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,304,2,1,0)
	;;=ADDRESS LINE 3^^I^^^4^1^45^1
	;;^UTILITY(U,$J,358.5,305,0)
	;;=ADDRESS LINE 4^82^9^1^4
	;;^UTILITY(U,$J,358.5,305,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,305,2,1,0)
	;;=ADDRESS LINE 4^^I^^^5^1^45^1
	;;^UTILITY(U,$J,358.5,306,0)
	;;=INSURED?^82^12
	;;^UTILITY(U,$J,358.5,306,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,306,2,1,0)
	;;=Insurance:^^U^1^6^6^12^7^1
	;;^UTILITY(U,$J,358.5,307,0)
	;;=INSURANCE 1^82^13^0^1
	;;^UTILITY(U,$J,358.5,307,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,307,2,1,0)
	;;=COMPANY^^I^^^7^1^28^1
	;;^UTILITY(U,$J,358.5,307,2,2,0)
	;;=Policy Number:^^U^30^6^7^30^19^3
	;;^UTILITY(U,$J,358.5,308,0)
	;;=INSURANCE 2^82^13^0^2
	;;^UTILITY(U,$J,358.5,308,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,308,2,1,0)
	;;=COMPANY^^I^^^8^1^28^1
	;;^UTILITY(U,$J,358.5,308,2,2,0)
	;;=POLICY #^^I^^^8^30^19^3
	;;^UTILITY(U,$J,358.5,309,0)
	;;=INSURANCE 3^82^13^0^3
	;;^UTILITY(U,$J,358.5,309,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,309,2,1,0)
	;;=COMPANY^^I^^^9^1^28^1

IBDEI01B
IBDEI01B	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,309,2,2,0)
	;;=POLICY #^^I^^^9^30^19^3
	;;^UTILITY(U,$J,358.5,310,0)
	;;=INSURANCE 4^82^13^1^4
	;;^UTILITY(U,$J,358.5,310,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,310,2,1,0)
	;;=COMPANY^^I^^^10^1^28^1
	;;^UTILITY(U,$J,358.5,310,2,2,0)
	;;=POLICY #^^I^^^10^30^19^3
	;;^UTILITY(U,$J,358.5,311,0)
	;;=MARITAL STATUS^82^17
	;;^UTILITY(U,$J,358.5,311,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,311,2,1,0)
	;;=Marital Status:^^^1^11^11^17^15^1
	;;^UTILITY(U,$J,358.5,312,0)
	;;=EMPLOYER^82^18
	;;^UTILITY(U,$J,358.5,312,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,312,2,1,0)
	;;=Employer:^^U^1^12^13^4^45^1
	;;^UTILITY(U,$J,358.5,313,0)
	;;=EMPLOYMENT STATUS^82^19
	;;^UTILITY(U,$J,358.5,313,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,313,2,1,0)
	;;=Status:^^^20^12^12^28^20^1
	;;^UTILITY(U,$J,358.5,314,0)
	;;=SPOUSE'S EMPLOYER^82^20
	;;^UTILITY(U,$J,358.5,314,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,314,2,1,0)
	;;=Spouse's Employer:^^U^1^14^15^4^45^1
	;;^UTILITY(U,$J,358.5,315,0)
	;;=VITALS^83^3
	;;^UTILITY(U,$J,358.5,315,2,0)
	;;=^357.52I^6^5
	;;^UTILITY(U,$J,358.5,315,2,1,0)
	;;=WT:^^^15^1^1^19^14^1
	;;^UTILITY(U,$J,358.5,315,2,2,0)
	;;=BP:^^^37^1^1^41^14^1
	;;^UTILITY(U,$J,358.5,315,2,3,0)
	;;=T:^^^59^1^1^62^14^1
	;;^UTILITY(U,$J,358.5,315,2,4,0)
	;;=P:^^^15^3^3^19^14^1
	;;^UTILITY(U,$J,358.5,315,2,6,0)
	;;=INITIALS/TIME:^^^38^3^3^54^20^1
	;;^UTILITY(U,$J,358.5,316,0)
	;;=PATIENT NAME^84^6
	;;^UTILITY(U,$J,358.5,316,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,316,2,1,0)
	;;=Patient Name:^^^1^1^1^15^30^1
	;;^UTILITY(U,$J,358.5,317,0)
	;;=PATIENT DOB^84^22
	;;^UTILITY(U,$J,358.5,317,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,317,2,1,0)
	;;=DOB:^^^1^2^2^6^12^1
	;;^UTILITY(U,$J,358.5,318,0)
	;;=PID^84^7
	;;^UTILITY(U,$J,358.5,318,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,318,2,1,0)
	;;=PID:^^^19^2^2^24^15^1
	;;^UTILITY(U,$J,358.5,319,0)
	;;=SC CONDITION 1^84^11^^1
	;;^UTILITY(U,$J,358.5,319,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,319,2,1,0)
	;;=SC Conditions:^^U^1^4^5^1^40^1
	;;^UTILITY(U,$J,358.5,319,2,2,0)
	;;=%^^I^^^5^42^4^3
	;;^UTILITY(U,$J,358.5,320,0)
	;;=SC CONDITION 2^84^11^^2
	;;^UTILITY(U,$J,358.5,320,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,320,2,1,0)
	;;=CONDITION^^I^^^6^1^40^1
	;;^UTILITY(U,$J,358.5,320,2,2,0)
	;;=%^^I^^^6^42^4^3
	;;^UTILITY(U,$J,358.5,321,0)
	;;=SC CONDITION 3^84^11^^3
	;;^UTILITY(U,$J,358.5,321,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,321,2,1,0)
	;;=CONDITION^^I^^^7^1^40^1
	;;^UTILITY(U,$J,358.5,321,2,2,0)
	;;=%^^I^^^7^42^4^3
	;;^UTILITY(U,$J,358.5,322,0)
	;;=SC CONDITION 4^84^11^1^4
	;;^UTILITY(U,$J,358.5,322,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,322,2,1,0)
	;;=CONDITION^^I^^^8^1^40^1
	;;^UTILITY(U,$J,358.5,322,2,2,0)
	;;=%^^I^^^8^42^4^3
	;;^UTILITY(U,$J,358.5,323,0)
	;;=SEX^84^23
	;;^UTILITY(U,$J,358.5,323,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,323,2,1,0)
	;;=Sex:^^^40^2^2^45^1^2
	;;^UTILITY(U,$J,358.5,324,0)
	;;=ELIGIBILITY^84^8
	;;^UTILITY(U,$J,358.5,324,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,324,2,1,0)
	;;=Eligibility:^^^1^3^3^14^30^1
	;;^UTILITY(U,$J,358.5,325,0)
	;;=MEANS TEST CATEGORY^84^24
	;;^UTILITY(U,$J,358.5,325,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,325,2,1,0)
	;;=Means Test Cat:^^^29^4^4^45^1^3
	;;^UTILITY(U,$J,358.5,326,0)
	;;=SERVICE HISTORY DATA^84^25
	;;^UTILITY(U,$J,358.5,326,2,0)
	;;=^357.52I^4^4
	;;^UTILITY(U,$J,358.5,326,2,1,0)
	;;=AO:^^^1^9^9^5^3^2
	;;^UTILITY(U,$J,358.5,326,2,2,0)
	;;=IR:^^^9^9^9^13^3^3
	;;^UTILITY(U,$J,358.5,326,2,3,0)
	;;=POW:^^^17^9^9^22^3^4
	;;^UTILITY(U,$J,358.5,326,2,4,0)
	;;=EC:^^^26^9^9^30^3^6

IBDEI01C
IBDEI01C	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.5,327,0)
	;;=SC %^84^8
	;;^UTILITY(U,$J,358.5,327,2,0)
	;;=^357.52I^3^2
	;;^UTILITY(U,$J,358.5,327,2,2,0)
	;;=SC%:^^^17^4^4^22^3^7
	;;^UTILITY(U,$J,358.5,327,2,3,0)
	;;=%^^^25^4
	;;^UTILITY(U,$J,358.5,328,0)
	;;=SC TREATMENT QUESTIONS^85^26
	;;^UTILITY(U,$J,358.5,328,2,0)
	;;=^357.52I^2^2
	;;^UTILITY(U,$J,358.5,328,2,1,0)
	;;=SERVICE CONNECTED?^^I^^^0^0^46^1
	;;^UTILITY(U,$J,358.5,328,2,2,0)
	;;=AO,IR OR EC?^^I^^^1^0^43^5
	;;^UTILITY(U,$J,358.5,329,0)
	;;=Subjective:^88^2^^^Subjective:^^^^0^1^8^2^132
	;;^UTILITY(U,$J,358.5,330,0)
	;;=OBJECTIVE^88^2^^^Objective:^^^^0^9^8^2^132
	;;^UTILITY(U,$J,358.5,331,0)
	;;=ASSESSMENT/DIAGNOSIS^88^2^^^Assessment/Diagnosis:^^^^0^17^8^2^132
	;;^UTILITY(U,$J,358.5,332,0)
	;;=PLAN^88^2^^^Plan:^^^^0^25^4^2^132
	;;^UTILITY(U,$J,358.5,333,0)
	;;=SIGNATURE^88^3
	;;^UTILITY(U,$J,358.5,333,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,333,2,1,0)
	;;=Provider Signature^^^79^31^30^59^60^1
	;;^UTILITY(U,$J,358.5,334,0)
	;;=Subjective:^89^2^^^Subjective:^^^^0^1^8^2^132
	;;^UTILITY(U,$J,358.5,335,0)
	;;=OBJECTIVE^89^2^^^Objective:^^^^0^9^8^2^132
	;;^UTILITY(U,$J,358.5,336,0)
	;;=ASSESSMENT/DIAGNOSIS^89^2^^^Assessment/Diagnosis:^^^^0^17^8^2^132
	;;^UTILITY(U,$J,358.5,337,0)
	;;=PLAN^89^2^^^Plan:^^^^0^25^4^2^132
	;;^UTILITY(U,$J,358.5,338,0)
	;;=SIGNATURE^89^3
	;;^UTILITY(U,$J,358.5,338,2,0)
	;;=^357.52I^1^1
	;;^UTILITY(U,$J,358.5,338,2,1,0)
	;;=Provider Signature:^^^40^29^30^59^60^1

IBDEI01D
IBDEI01D	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"GL")
	;;=^IBE(358.6,
	;;^DIC("B","IMP/EXP PACKAGE INTERFACE",358.6)
	;;=
	;;^DIC(358.6,"%D",0)
	;;=^^18^18^2940217^
	;;^DIC(358.6,"%D",1,0)
	;;=This file is nearly identical to file #357.6. It is used by the
	;;^DIC(358.6,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.6,"%D",3,0)
	;;=that is being imported or exported.
	;;^DIC(358.6,"%D",4,0)
	;;= 
	;;^DIC(358.6,"%D",5,0)
	;;=This file contains a description of all of the interfaces with other packages.
	;;^DIC(358.6,"%D",6,0)
	;;=The form will invoke the proper interface routines by doing a lookup on
	;;^DIC(358.6,"%D",7,0)
	;;=this file and then invoking the routine by indirection. The INPUT VARIABLE
	;;^DIC(358.6,"%D",8,0)
	;;=fields are for documentation purposes and to verify that the proper
	;;^DIC(358.6,"%D",9,0)
	;;=variables are defined. Data will be exchanged between the encounter form
	;;^DIC(358.6,"%D",10,0)
	;;=utilities and other packages by putting the data in a predefined location.
	;;^DIC(358.6,"%D",11,0)
	;;=The first part of the subscript is always be ^TMP("IB",$J,"INTERFACES".
	;;^DIC(358.6,"%D",12,0)
	;;=For output routines, but not selection routines, the fourth subscript is
	;;^DIC(358.6,"%D",13,0)
	;;=be the patient DFN. The next subscript is the name of the Package
	;;^DIC(358.6,"%D",14,0)
	;;=Interface. For single valued data and record valued data there is no
	;;^DIC(358.6,"%D",15,0)
	;;=additional subscript. For interfaces returning a list there is one
	;;^DIC(358.6,"%D",16,0)
	;;=additional subscript level, the number of the item on the list. For
	;;^DIC(358.6,"%D",17,0)
	;;=word processing type data the data will be in FM word-processing format,
	;;^DIC(358.6,"%D",18,0)
	;;=i.e., the final subscripts will be ...1,0),...2,0),...3,0), etc.
	;;^DD(358.6,0)
	;;=FIELD^^8.07^41
	;;^DD(358.6,0,"DT")
	;;=2931203
	;;^DD(358.6,0,"ID","WRITE")
	;;=W "Package=",$P($G(^(0)),"^",4)
	;;^DD(358.6,0,"IX","B",358.6,.01)
	;;=
	;;^DD(358.6,0,"IX","C",358.6,.04)
	;;=
	;;^DD(358.6,0,"IX","D",358.6,3)
	;;=
	;;^DD(358.6,0,"IX","E",358.6,.01)
	;;=
	;;^DD(358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")
	;;=
	;;^DD(358.6,0,"PT",358.2,.11)
	;;=
	;;^DD(358.6,0,"PT",358.5,.03)
	;;=
	;;^DD(358.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.6,.01,1,0)
	;;=^.1
	;;^DD(358.6,.01,1,1,0)
	;;=358.6^B
	;;^DD(358.6,.01,1,1,1)
	;;=S ^IBE(358.6,"B",$E(X,1,30),DA)=""
	;;^DD(358.6,.01,1,1,2)
	;;=K ^IBE(358.6,"B",$E(X,1,30),DA)
	;;^DD(358.6,.01,1,2,0)
	;;=358.6^E^MUMPS
	;;^DD(358.6,.01,1,2,1)
	;;=S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(358.6,.01,1,2,2)
	;;=K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(358.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(358.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the name space of the package that is responsible for the data.
	;;^DD(358.6,.01,21,0)
	;;=^^3^3^2930727^^
	;;^DD(358.6,.01,21,1,0)
	;;= 
	;;^DD(358.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(358.6,.01,21,3,0)
	;;=should be preceded with the name space of the package.
	;;^DD(358.6,.01,"DT")
	;;=2930409
	;;^DD(358.6,.02,0)
	;;=ENTRY POINT^RF^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(358.6,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.6,.02,21,1,0)
	;;= 
	;;^DD(358.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.

IBDEI01E
IBDEI01E	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.02,"DT")
	;;=2921125
	;;^DD(358.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.03,3)
	;;=What routine does this package interface use?
	;;^DD(358.6,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.6,.03,21,1,0)
	;;= 
	;;^DD(358.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(358.6,.03,"DT")
	;;=2921125
	;;^DD(358.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
	;;^DD(358.6,.04,1,0)
	;;=^.1
	;;^DD(358.6,.04,1,1,0)
	;;=358.6^C
	;;^DD(358.6,.04,1,1,1)
	;;=S ^IBE(358.6,"C",$E(X,1,30),DA)=""
	;;^DD(358.6,.04,1,1,2)
	;;=K ^IBE(358.6,"C",$E(X,1,30),DA)
	;;^DD(358.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(358.6,.04,3)
	;;=For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
	;;^DD(358.6,.04,21,0)
	;;=^^1^1^2930726^^^^
	;;^DD(358.6,.04,21,1,0)
	;;=This is a free text pointer to the package file.
	;;^DD(358.6,.04,"DT")
	;;=2930726
	;;^DD(358.6,.05,0)
	;;=PATIENT VARIABLE DATA^S^0:NO;1:YES;^0;5^Q
	;;^DD(358.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(358.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(358.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(358.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(358.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(358.6,.05,21,3,0)
	;;=patient.
	;;^DD(358.6,.05,"DT")
	;;=2930726
	;;^DD(358.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT ROUTINE;2:OUTPUT ROUTINE;3:SELECTION ROUTINE;4:PRINT REPORT;^0;6^Q
	;;^DD(358.6,.06,3)
	;;=Is this package interface for displaying data to the form, for inputing data, or for creating a list that will appear on the form?
	;;^DD(358.6,.06,21,0)
	;;=^^8^8^2930518^^^^
	;;^DD(358.6,.06,21,1,0)
	;;= 
	;;^DD(358.6,.06,21,2,0)
	;;=Enter 1 for INPUT ROUTINE if the routine accepts data input from the user
	;;^DD(358.6,.06,21,3,0)
	;;=and transmits the data to the appropriate package. Enter 2 for OUTPUT
	;;^DD(358.6,.06,21,4,0)
	;;=ROUTINE if the routine gets data from another package. Enter 3 for
	;;^DD(358.6,.06,21,6,0)
	;;=table belonging to a foreign package If the ACTION TYPE is SELECTION ROUTINE then
	;;^DD(358.6,.06,21,7,0)
	;;=the data type must be record and the first piece must be the ID passed
	;;^DD(358.6,.06,21,8,0)
	;;=by the other package.
	;;^DD(358.6,.06,"DT")
	;;=2930518
	;;^DD(358.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(358.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(358.6,.07,3)
	;;=What format will the data be in?
	;;^DD(358.6,.07,21,0)
	;;=^^8^8^2930527^
	;;^DD(358.6,.07,21,1,0)
	;;=This should only be defined for interfaces that transfer data. It is the
	;;^DD(358.6,.07,21,2,0)
	;;=type of format the data should be in.
	;;^DD(358.6,.07,21,3,0)
	;;= 
	;;^DD(358.6,.07,21,4,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(358.6,.07,21,6,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(358.6,.07,21,7,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(358.6,.07,21,8,0)
	;;=If the ACTION TYPE is SELECTION ROUTINE then the data type must be record.
	;;^DD(358.6,.07,"DT")
	;;=2930726
	;;^DD(358.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?

IBDEI01F
IBDEI01F	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.6,.08,21,1,0)
	;;= 
	;;^DD(358.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(358.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(358.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(358.6,.08,"DT")
	;;=2930507
	;;^DD(358.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(358.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(358.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,.09,21,1,0)
	;;= 
	;;^DD(358.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(358.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(358.6,.09,"DT")
	;;=2921213
	;;^DD(358.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
	;;^DD(358.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(358.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(358.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(358.6,.1,21,1,0)
	;;= 
	;;^DD(358.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(358.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(358.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(358.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(358.6,.1,21,7,0)
	;;=the same way.
	;;^DD(358.6,.1,"DT")
	;;=2930616
	;;^DD(358.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(358.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(358.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(358.6,.11,"DT")
	;;=2930617
	;;^DD(358.6,.12,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(358.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOL KIT?
	;;^DD(358.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the tool kit, enter NO otherwise.
	;;^DD(358.6,.12,"DT")
	;;=2930811
	;;^DD(358.6,1,0)
	;;=DESCRIPTION^358.61^^1;0
	;;^DD(358.6,1,21,0)
	;;=^^1^1^2930210^^^
	;;^DD(358.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(358.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.01,21,1,0)
	;;= 
	;;^DD(358.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(358.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(358.6,2.01,"DT")
	;;=2930726
	;;^DD(358.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(358.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.02,21,1,0)
	;;= 
	;;^DD(358.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(358.6,2.02,21,3,0)
	;;=interface.
	;;^DD(358.6,2.02,"DT")
	;;=2930726
	;;^DD(358.6,2.03,0)
	;;=PIECE 2 DESCRIPTIVE NAME^F^^2;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.03,.1)
	;;=WHAT IS THE SECOND PIECE OF DATA RETURNED BY THE INTERFACE?

IBDEI01G
IBDEI01G	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,2.03,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.03,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.03,21,1,0)
	;;= 
	;;^DD(358.6,2.03,21,2,0)
	;;=A descriptive name of the second field of the record returned by the
	;;^DD(358.6,2.03,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.03,"DT")
	;;=2930726
	;;^DD(358.6,2.04,0)
	;;=WHAT IS ITS MAXIMUM LENGTH?^NJ3,0^^2;4^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.04,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.04,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.04,21,1,0)
	;;= 
	;;^DD(358.6,2.04,21,2,0)
	;;=The maximum length of the second field of the record returned by the
	;;^DD(358.6,2.04,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.04,"DT")
	;;=2930726
	;;^DD(358.6,2.05,0)
	;;=PIECE 3 DESCRIPTIVE NAME^F^^2;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.05,.1)
	;;=WHAT IS THE THIRD PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.05,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.05,21,1,0)
	;;= 
	;;^DD(358.6,2.05,21,2,0)
	;;=A descriptive name of the third field of the record returned by the
	;;^DD(358.6,2.05,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.05,"DT")
	;;=2930726
	;;^DD(358.6,2.06,0)
	;;=PIECE 3 MAXIMUM LENGTH^NJ3,0^^2;6^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.06,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.06,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.06,21,1,0)
	;;= 
	;;^DD(358.6,2.06,21,2,0)
	;;=The maximum length of the 3rd field returned by the interface routine.
	;;^DD(358.6,2.06,"DT")
	;;=2930726
	;;^DD(358.6,2.07,0)
	;;=PIECE 4 DESCRIPTIVE NAME^F^^2;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.07,.1)
	;;=WHAT IS THE FOURTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.07,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.07,21,1,0)
	;;= 
	;;^DD(358.6,2.07,21,2,0)
	;;=A descriptive name of the 4th field returned by the interface routine.
	;;^DD(358.6,2.07,"DT")
	;;=2930726
	;;^DD(358.6,2.08,0)
	;;=PIECE 4 MAXIMUM LENGTH^NJ3,0^^2;8^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.08,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.08,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(358.6,2.08,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.08,21,1,0)
	;;= 
	;;^DD(358.6,2.08,21,2,0)
	;;=The maximum length of the 4th field returned by the interface routine.
	;;^DD(358.6,2.08,"DT")
	;;=2930726
	;;^DD(358.6,2.09,0)
	;;=PIECE 5 DESCRIPTIVE NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.09,.1)
	;;=WHAT IS THE FIFTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.09,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.09,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.09,21,1,0)
	;;= 
	;;^DD(358.6,2.09,21,2,0)
	;;=A descriptive name of the 5th field returned by the interface routine.
	;;^DD(358.6,2.09,"DT")
	;;=2930726
	;;^DD(358.6,2.1,0)
	;;=PIECE 5 MAXIMUM LENGTH^NJ3,0^^2;10^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.1,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.1,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.1,21,1,0)
	;;= 
	;;^DD(358.6,2.1,21,2,0)
	;;=The maximum length of the 5th field returned by the interface routine.
	;;^DD(358.6,2.1,"DT")
	;;=2930726
	;;^DD(358.6,2.11,0)
	;;=PIECE 6 DESCRIPTIVE NAME^F^^2;11^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.11,.1)
	;;=WHAT IS THE SIXTH PIECE OF DATA RETURNED BY THE INTERFACE?

IBDEI01H
IBDEI01H	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,2.11,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.11,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.11,21,1,0)
	;;= 
	;;^DD(358.6,2.11,21,2,0)
	;;=A descriptive name fo the 6th field returned by the interface routine.
	;;^DD(358.6,2.11,"DT")
	;;=2930726
	;;^DD(358.6,2.12,0)
	;;=PIECE 6 MAXIMUM LENGTH^NJ3,0^^2;12^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.12,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.12,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.12,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.12,21,1,0)
	;;= 
	;;^DD(358.6,2.12,21,2,0)
	;;=The maximum length of the 6th field returned by the interface routine.
	;;^DD(358.6,2.12,"DT")
	;;=2930726
	;;^DD(358.6,2.13,0)
	;;=PIECE 7 DESCRIPTIVE NAME^F^^2;13^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.13,.1)
	;;=WHAT IS THE SEVENTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.13,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.13,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.13,21,1,0)
	;;= 
	;;^DD(358.6,2.13,21,2,0)
	;;=A descriptive name for the 7th field returned by the package interface
	;;^DD(358.6,2.13,21,3,0)
	;;=routine.
	;;^DD(358.6,2.13,"DT")
	;;=2930726
	;;^DD(358.6,2.14,0)
	;;=PIECE 7 MAXIMUM LENGTH^NJ3,0^^2;14^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.14,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.14,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.14,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.14,21,1,0)
	;;= 
	;;^DD(358.6,2.14,21,2,0)
	;;=The maximum length of the 7th field returned by the interface routine.
	;;^DD(358.6,2.14,"DT")
	;;=2930726
	;;^DD(358.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(358.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(358.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if is a pointer.
	;;^DD(358.6,2.17,21,0)
	;;=^^3^3^2930811^^^^
	;;^DD(358.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, the the value can
	;;^DD(358.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.
	;;^DD(358.6,2.17,21,3,0)
	;;=The first piece is reserved for the unique id of the selection.
	;;^DD(358.6,2.17,"DT")
	;;=2930810
	;;^DD(358.6,2.18,0)
	;;=ARE SELECTIONS EXPORTABLE?^S^0:NO;1:YES;^2;18^Q
	;;^DD(358.6,2.18,"DT")
	;;=2931203
	;;^DD(358.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(358.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(358.6,3,1,0)
	;;=^.1
	;;^DD(358.6,3,1,1,0)
	;;=358.6^D^KWIC
	;;^DD(358.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(358.6,"D",I,DA)=""
	;;^DD(358.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(358.6,"D",I,DA)
	;;^DD(358.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(358.6,3,1,1,"%D",1,0)
	;;= 
	;;^DD(358.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(358.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(358.6,3,1,1,"DT")
	;;=2930309
	;;^DD(358.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(358.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(358.6,3,21,0)
	;;=^^4^4^2930726^^^
	;;^DD(358.6,3,21,1,0)
	;;= 
	;;^DD(358.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to

IBDEI01I
IBDEI01I	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,3,21,3,0)
	;;=assist the user in located the package interface he needs to display a
	;;^DD(358.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(358.6,3,"DT")
	;;=2930726
	;;^DD(358.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,4.01,9)
	;;=@
	;;^DD(358.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,4.01,21,1,0)
	;;= 
	;;^DD(358.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(358.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(358.6,4.01,"DT")
	;;=2930521
	;;^DD(358.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,5.01,9)
	;;=@
	;;^DD(358.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,5.01,21,1,0)
	;;= 
	;;^DD(358.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(358.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(358.6,5.01,"DT")
	;;=2930518
	;;^DD(358.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^358.66^^6;0
	;;^DD(358.6,6,21,0)
	;;=^^11^11^2930608^^
	;;^DD(358.6,6,21,1,0)
	;;= 
	;;^DD(358.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(358.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(358.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(358.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(358.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(358.6,6,21,8,0)
	;;=it:
	;;^DD(358.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(358.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(358.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(358.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^358.67^^7;0
	;;^DD(358.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.6,7,21,1,0)
	;;= 
	;;^DD(358.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(358.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(358.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(358.6,8.01,0)
	;;=PIECE 1 NODE^F^^8;1^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.01,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.01,"DT")
	;;=2931203
	;;^DD(358.6,8.02,0)
	;;=PIECE 2 NODE^F^^8;2^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.02,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.02,"DT")
	;;=2931203
	;;^DD(358.6,8.03,0)
	;;=PIECE 3 NODE^F^^8;3^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.03,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.03,"DT")
	;;=2931203
	;;^DD(358.6,8.04,0)
	;;=PIECE 4 NODE^F^^8;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.04,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.04,"DT")
	;;=2931203
	;;^DD(358.6,8.05,0)
	;;=PIECE 5 NODE^F^^8;5^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.05,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.05,"DT")
	;;=2931203
	;;^DD(358.6,8.06,0)
	;;=PIECE 6 NODE^F^^8;6^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.06,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.06,"DT")
	;;=2931203
	;;^DD(358.6,8.07,0)
	;;=PIECE 7 NODE^F^^8;7^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.07,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.07,"DT")
	;;=2931203
	;;^DD(358.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1

IBDEI01J
IBDEI01J	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(358.61,0,"UP")
	;;=358.6
	;;^DD(358.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(358.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(358.61,.01,"DT")
	;;=2930210
	;;^DD(358.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.66,0,"IX","B",358.66,.01)
	;;=
	;;^DD(358.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(358.66,0,"UP")
	;;=358.6
	;;^DD(358.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.66,.01,1,0)
	;;=^.1
	;;^DD(358.66,.01,1,1,0)
	;;=358.66^B
	;;^DD(358.66,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(358.66,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(358.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(358.66,.01,21,0)
	;;=^^3^3^2930608^
	;;^DD(358.66,.01,21,1,0)
	;;= 
	;;^DD(358.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(358.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(358.66,.01,"DT")
	;;=2930608
	;;^DD(358.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.67,0,"IX","B",358.67,.01)
	;;=
	;;^DD(358.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(358.67,0,"UP")
	;;=358.6
	;;^DD(358.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.67,.01,1,0)
	;;=^.1
	;;^DD(358.67,.01,1,1,0)
	;;=358.67^B
	;;^DD(358.67,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(358.67,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(358.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(358.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.67,.01,21,1,0)
	;;= 
	;;^DD(358.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(358.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(358.67,.01,21,4,0)
	;;=defined.
	;;^DD(358.67,.01,"DT")
	;;=2930521

IBDEI01K
IBDEI01K	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6)
	;;=^IBE(358.6,
	;;^UTILITY(U,$J,358.6,0)
	;;=IMP/EXP PACKAGE INTERFACE^358.6IO^32^32
	;;^UTILITY(U,$J,358.6,1,0)
	;;=DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^MAS^^3^2^^1^^^1
	;;^UTILITY(U,$J,358.6,1,1,0)
	;;=^^2^2^2930726^^^
	;;^UTILITY(U,$J,358.6,1,1,1,0)
	;;=Allows for the selection of CPT codes from the CPT file. The user can 
	;;^UTILITY(U,$J,358.6,1,1,2,0)
	;;=limit his selections by choosing a major CPT category if he wishes.
	;;^UTILITY(U,$J,358.6,1,2)
	;;=CODE^5^SHORT NAME^28^DESCRIPTION^161^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,1,3)
	;;=SELECT CPT CODES
	;;^UTILITY(U,$J,358.6,2,0)
	;;=IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^INTEGRATED BILLING^0^2^5^^1^^^1^^
	;;^UTILITY(U,$J,358.6,2,1,0)
	;;=^^2^2^2930408^^
	;;^UTILITY(U,$J,358.6,2,1,1,0)
	;;=No data is returned by this interface - it's purpose is to print blank
	;;^UTILITY(U,$J,358.6,2,1,2,0)
	;;=lines to the form for data entry.
	;;^UTILITY(U,$J,358.6,2,2)
	;;=^0
	;;^UTILITY(U,$J,358.6,2,3)
	;;=UTILITY BLANKS LINES
	;;^UTILITY(U,$J,358.6,3,0)
	;;=IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^INTEGRATED BILLING^0^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,3,1,0)
	;;=^^2^2^2930210^^
	;;^UTILITY(U,$J,358.6,3,1,1,0)
	;;=This interface returns no data. Its purpose is to print labels without
	;;^UTILITY(U,$J,358.6,3,1,2,0)
	;;=data to the form.
	;;^UTILITY(U,$J,358.6,3,2)
	;;=Underscore Only^0
	;;^UTILITY(U,$J,358.6,3,3)
	;;=UTILITY BLANKS LABELS
	;;^UTILITY(U,$J,358.6,4,0)
	;;=SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,4,1,0)
	;;=^^2^2^2930602^^^
	;;^UTILITY(U,$J,358.6,4,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,4,1,2,0)
	;;=Returns the date/time of the appointment.
	;;^UTILITY(U,$J,358.6,4,2)
	;;=APPT. DATE/TIME^18^APPT. DATE (MMM DD,YYYY)^12^APPT. TIME (HH:MM)^5
	;;^UTILITY(U,$J,358.6,4,3)
	;;=APPOINTMENT DATE TIME SCHEDULING
	;;^UTILITY(U,$J,358.6,4,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,4,7,1,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,4,7,2,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,4,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,5,0)
	;;=SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,5,1,0)
	;;=^^2^2^2930616^^
	;;^UTILITY(U,$J,358.6,5,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,5,1,2,0)
	;;=Outputs the name of the clinic.
	;;^UTILITY(U,$J,358.6,5,2)
	;;=CLINIC NAME^30
	;;^UTILITY(U,$J,358.6,5,3)
	;;=CLINIC SCHEDULING
	;;^UTILITY(U,$J,358.6,5,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,5,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,6,0)
	;;=DPT PATIENT'S NAME^VADPT^IBDFN^PATIENT FILE^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,6,1,0)
	;;=^^2^2^2930212^^^^
	;;^UTILITY(U,$J,358.6,6,1,1,0)
	;;= 
	;;^UTILITY(U,$J,358.6,6,1,2,0)
	;;=Patient's Name
	;;^UTILITY(U,$J,358.6,6,2)
	;;=Patient's Name^30
	;;^UTILITY(U,$J,358.6,6,3)
	;;=PATIENT NAME MAS
	;;^UTILITY(U,$J,358.6,6,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,6,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,7,0)
	;;=DPT PATIENT'S PID^VADPT^IBDFN^PATIENT FILE^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,7,1,0)
	;;=^^1^1^2931015^^
	;;^UTILITY(U,$J,358.6,7,1,1,0)
	;;=Used to display the patient identifier.
	;;^UTILITY(U,$J,358.6,7,2)
	;;=PATIENT IDENTIFIER^15
	;;^UTILITY(U,$J,358.6,7,3)
	;;=PATIENT PID MAS
	;;^UTILITY(U,$J,358.6,7,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,7,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,8,0)
	;;=DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,8,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,358.6,8,1,1,0)
	;;=Returns patient eligibility data. Data returned is:
	;;^UTILITY(U,$J,358.6,8,1,2,0)
	;;=   eligibility code in external form

IBDEI01L
IBDEI01L	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,8,1,3,0)
	;;=   period of service
	;;^UTILITY(U,$J,358.6,8,1,4,0)
	;;=   service connected? YES/NO
	;;^UTILITY(U,$J,358.6,8,1,5,0)
	;;=   veteran? YES/NO
	;;^UTILITY(U,$J,358.6,8,1,6,0)
	;;=   eligible for care? YES/NO
	;;^UTILITY(U,$J,358.6,8,1,7,0)
	;;=   type of patient
	;;^UTILITY(U,$J,358.6,8,1,8,0)
	;;=   SC%
	;;^UTILITY(U,$J,358.6,8,2)
	;;=ELIGIBILTY CODE/EXTERNAL FORM^30^PERIOD OF SERVICE^25^SERVICE CONNECTED?^3^VETERAN?^3^ELIGIBLE FOR CARE?^3^TYPE OF PATIENT^20^SC %^3
	;;^UTILITY(U,$J,358.6,8,3)
	;;=ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
	;;^UTILITY(U,$J,358.6,8,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,8,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,9,0)
	;;=DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^PATIENT FILE^1^2^3^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,9,1,0)
	;;=^^1^1^2930128^
	;;^UTILITY(U,$J,358.6,9,1,1,0)
	;;=Outputs the patient's address, up to 4 lines of 45 characters each.
	;;^UTILITY(U,$J,358.6,9,2)
	;;=ADDRESS LINE^45
	;;^UTILITY(U,$J,358.6,9,3)
	;;=PATIENT ADDRESS MAS
	;;^UTILITY(U,$J,358.6,9,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,9,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,10,0)
	;;=IB CURRENT DATE^NOW^IBDFN2^INTEGRATED BILLING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,358.6,10,1,0)
	;;=^^1^1^2930528^^
	;;^UTILITY(U,$J,358.6,10,1,1,0)
	;;=Prints the current date in MMM DD,YYYY format.
	;;^UTILITY(U,$J,358.6,10,2)
	;;=CURRENT DATE (MMM DD, YYYY)^12
	;;^UTILITY(U,$J,358.6,10,3)
	;;=TODAY CURRENT DATE DAY
	;;^UTILITY(U,$J,358.6,11,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^PATIENT FILE^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,11,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,358.6,11,1,1,0)
	;;=Used to output a list of the patients service connected conditons, along with
	;;^UTILITY(U,$J,358.6,11,1,2,0)
	;;=the percentage ratings. Data returned:
	;;^UTILITY(U,$J,358.6,11,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,358.6,11,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,358.6,11,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,358.6,11,1,6,0)
	;;=  disabilty percentage with the label "%SC"
	;;^UTILITY(U,$J,358.6,11,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"
	;;^UTILITY(U,$J,358.6,11,2)
	;;=Disability Name^45^Disability % (number only)^3^Disability % (label=%)^4^Disabilty % (label=%SC)^6^Dis.%_"% - SERVICE CONNECTED"^24
	;;^UTILITY(U,$J,358.6,11,3)
	;;=CONDITIONS PATIENT MAS PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,358.6,11,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,11,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,12,0)
	;;=DPT IS PATIENT INSURED?^INSURED^IBDFN6^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,12,1,0)
	;;=^^2^2^2931130^^^^
	;;^UTILITY(U,$J,358.6,12,1,1,0)
	;;=Prints 'YES','NO', or 'UNKNOWN' based on the field COVERED BY INSURANCE?
	;;^UTILITY(U,$J,358.6,12,1,2,0)
	;;=from the patient file.
	;;^UTILITY(U,$J,358.6,12,2)
	;;=Covered by Ins?^7
	;;^UTILITY(U,$J,358.6,12,3)
	;;=PATIENT INSURANCE MAS
	;;^UTILITY(U,$J,358.6,12,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,12,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,13,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^PATIENT FILE^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,13,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,358.6,13,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,358.6,13,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).
	;;^UTILITY(U,$J,358.6,13,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,13,1,4,0)
	;;=    insurance company

IBDEI01M
IBDEI01M	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,13,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,358.6,13,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,358.6,13,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,358.6,13,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,358.6,13,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,358.6,13,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,358.6,13,2)
	;;=INSURANCE COMPANY^30^EXPIRATION DATE^12^POLICY NUMBER^20^GROUP NUMBER^17^GROUP NAME^20^NAME OF INSURED^30^HOLDER'S RELATIONSHIP^9
	;;^UTILITY(U,$J,358.6,13,3)
	;;=PATIENT INSURANCE MAS PIMS
	;;^UTILITY(U,$J,358.6,13,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,358.6,13,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,358.6,13,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,358.6,13,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,13,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,14,0)
	;;=SD INSTITUTION NAME^INST^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,358.6,14,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,358.6,14,1,1,0)
	;;=Obtains the name of the institution of the clinic of the appointment.
	;;^UTILITY(U,$J,358.6,14,2)
	;;=INSTITUTION NAME^30
	;;^UTILITY(U,$J,358.6,14,3)
	;;=FACILITY INSTITUTION PIMS MAS SCHEDULING
	;;^UTILITY(U,$J,358.6,14,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,14,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,358.6,15,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^ALLERGY^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,15,1,0)
	;;=^^7^7^2931015^^
	;;^UTILITY(U,$J,358.6,15,1,1,0)
	;;=Used to disply a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,358.6,15,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,358.6,15,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,358.6,15,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,358.6,15,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,358.6,15,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,358.6,15,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,358.6,15,2)
	;;=ALLERGY NAME^30^TYPE OF ALLERGEN^5^TYPE (F=FOOD,D=DRUG,O=OTHER)^1^VERIFIED? (YES/NO)^3^TRUE ALLERGY? (YES/NO)^3
	;;^UTILITY(U,$J,358.6,15,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,358.6,15,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,15,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,16,0)
	;;=DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,16,1,0)
	;;=^^1^1^2930217^^
	;;^UTILITY(U,$J,358.6,16,1,1,0)
	;;=Used to display the patient's telephone number.
	;;^UTILITY(U,$J,358.6,16,2)
	;;=TELEPHONE NUMBER^20
	;;^UTILITY(U,$J,358.6,16,3)
	;;=PATIENT TELEPHONE MAS
	;;^UTILITY(U,$J,358.6,16,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,16,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,17,0)
	;;=DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,17,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,17,1,1,0)
	;;=For displaying the patient's marital status.
	;;^UTILITY(U,$J,358.6,17,2)
	;;=MARITAL STATUS^15
	;;^UTILITY(U,$J,358.6,17,3)
	;;=PATIENT MARITAL STATUS MAS
	;;^UTILITY(U,$J,358.6,17,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,17,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,18,0)
	;;=DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,18,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,18,1,1,0)
	;;=For displaying the patient's employer.
	;;^UTILITY(U,$J,358.6,18,2)
	;;=employer name^45
	;;^UTILITY(U,$J,358.6,18,3)
	;;=PATIENT EMPLOYER MAS
	;;^UTILITY(U,$J,358.6,18,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,18,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,19,0)
	;;=DPT PATIENT'S EMPLOYMENT STATUS^EMPLMNT^IBDFN^PATIENT FILE^1^2^1^^1^^^1^^

IBDEI01N
IBDEI01N	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,19,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,19,1,1,0)
	;;=For displaying the employment status of the patient.
	;;^UTILITY(U,$J,358.6,19,2)
	;;=EMPLOYMENT STATUS^20
	;;^UTILITY(U,$J,358.6,19,3)
	;;=PATIENT EMPLOYER EMPLOYMENT MAS
	;;^UTILITY(U,$J,358.6,19,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,19,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,20,0)
	;;=DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,358.6,20,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,358.6,20,1,1,0)
	;;=For displaying the spouse's employer.
	;;^UTILITY(U,$J,358.6,20,2)
	;;=employer name^45
	;;^UTILITY(U,$J,358.6,20,3)
	;;=PATIENT SPOUSE EMPLOYER MAS
	;;^UTILITY(U,$J,358.6,20,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,20,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,21,0)
	;;=DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^MAS^^3^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,21,1,0)
	;;=^^3^3^2930126^
	;;^UTILITY(U,$J,358.6,21,1,1,0)
	;;=Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis file.
	;;^UTILITY(U,$J,358.6,21,1,2,0)
	;;=Allows the user to select from a particular Major Diagnosis Category if
	;;^UTILITY(U,$J,358.6,21,1,3,0)
	;;=desired. Allows only active codes to be selected.
	;;^UTILITY(U,$J,358.6,21,2)
	;;=CODE^7^DIAGNOSIS^30^DESCRIPTION^200^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,21,3)
	;;=SELECT ICD-9 CODES DX DIAGNOSIS
	;;^UTILITY(U,$J,358.6,22,0)
	;;=DPT PATIENT'S DOB/AGE^VADPT^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,22,1,0)
	;;=^^2^2^2930726^^
	;;^UTILITY(U,$J,358.6,22,1,1,0)
	;;=Patient's DOB in MMM DD, YYYY format
	;;^UTILITY(U,$J,358.6,22,1,2,0)
	;;=Patient's age in years.
	;;^UTILITY(U,$J,358.6,22,2)
	;;=Patient's DOB^12^Patient's Age^3
	;;^UTILITY(U,$J,358.6,22,3)
	;;=PATIENT DOB AGE MAS PIMS
	;;^UTILITY(U,$J,358.6,22,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,22,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,23,0)
	;;=DPT PATIENT'S SEX^VADPT^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,23,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,358.6,23,1,1,0)
	;;=Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
	;;^UTILITY(U,$J,358.6,23,2)
	;;=Patient's Sex^6^Patient's Sex (Code)^1
	;;^UTILITY(U,$J,358.6,23,3)
	;;=PATIENT SEX MAS
	;;^UTILITY(U,$J,358.6,23,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,23,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,24,0)
	;;=DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^MAS^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,24,1,0)
	;;=^^5^5^2931015^^^
	;;^UTILITY(U,$J,358.6,24,1,1,0)
	;;=Returns the patient's current means test category and the date of the most
	;;^UTILITY(U,$J,358.6,24,1,2,0)
	;;=recent means test. Data returned:
	;;^UTILITY(U,$J,358.6,24,1,3,0)
	;;=  means test category
	;;^UTILITY(U,$J,358.6,24,1,4,0)
	;;=  means test code
	;;^UTILITY(U,$J,358.6,24,1,5,0)
	;;=  date of last means test
	;;^UTILITY(U,$J,358.6,24,2)
	;;=MEANS TEST CATEGORY^20^DATE OF LAST MEANS TEST^12^MEANS TEST CODE^1
	;;^UTILITY(U,$J,358.6,24,3)
	;;=MEANS TEST CATEGORY PATIENT MAS
	;;^UTILITY(U,$J,358.6,24,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,24,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,25,0)
	;;=DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^PATIENT FILE^1^2^2^0^1^^^1^^
	;;^UTILITY(U,$J,358.6,25,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,358.6,25,1,1,0)
	;;=For displaying service history data. Data returned:
	;;^UTILITY(U,$J,358.6,25,1,2,0)
	;;=  Vietnam service? YES/NO
	;;^UTILITY(U,$J,358.6,25,1,3,0)
	;;=  Agent Orange exposure? YES/NO
	;;^UTILITY(U,$J,358.6,25,1,4,0)
	;;=  radiation exposure? YES/NO
	;;^UTILITY(U,$J,358.6,25,1,5,0)
	;;=  combat service? YES/NO

IBDEI01O
IBDEI01O	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,25,1,6,0)
	;;=  POW? YES/NO
	;;^UTILITY(U,$J,358.6,25,1,7,0)
	;;=  environmental contaminants exposure? YES/NO
	;;^UTILITY(U,$J,358.6,25,2)
	;;=VIETNAM SERVICE?^3^AGENT ORANGE EXPOSURE?^3^RADIATION EXPOSURE?^3^POW?^3^COMBAT SERVICE?^3^ENVIRONMENTAL CONTAMINANTS?^3
	;;^UTILITY(U,$J,358.6,25,3)
	;;=PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
	;;^UTILITY(U,$J,358.6,25,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,25,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,26,0)
	;;=DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^PATIENT FILE^1^2^2^0^1^^^1
	;;^UTILITY(U,$J,358.6,26,1,0)
	;;=^^8^8^2931018^^^^
	;;^UTILITY(U,$J,358.6,26,1,1,0)
	;;=Prints questions concerning whether treatment was related to service.
	;;^UTILITY(U,$J,358.6,26,1,2,0)
	;;=Each question is printed only if it applies to the patient. Questions are:
	;;^UTILITY(U,$J,358.6,26,1,3,0)
	;;= 
	;;^UTILITY(U,$J,358.6,26,1,4,0)
	;;=Was treatment for a SC condition? __ YES __ NO
	;;^UTILITY(U,$J,358.6,26,1,5,0)
	;;=Was treatment related to exposure to Agent Orange? __ YES __ NO
	;;^UTILITY(U,$J,358.6,26,1,6,0)
	;;=Was treatment related to exposure to Ionization Radiation? __ YES __ NO
	;;^UTILITY(U,$J,358.6,26,1,7,0)
	;;=Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
	;;^UTILITY(U,$J,358.6,26,1,8,0)
	;;=Was treatment related to: AO __ IR __ EC __
	;;^UTILITY(U,$J,358.6,26,2)
	;;=RELATED TO SC CONDITION?^46^RELATED TO AO?^63^RELATED TO IR?^71^RELATED TO EC?^77^RELATED TO AO,IR, OR EC?^43
	;;^UTILITY(U,$J,358.6,26,3)
	;;=PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
	;;^UTILITY(U,$J,358.6,26,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,26,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,26,8)
	;;=^^^1^1
	;;^UTILITY(U,$J,358.6,27,0)
	;;=IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^INTEGRATED BILLING^^3^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,27,1,0)
	;;=^^2^2^2930414^^^^
	;;^UTILITY(U,$J,358.6,27,1,1,0)
	;;=No data is returned, so this interface allows the user to create a
	;;^UTILITY(U,$J,358.6,27,1,2,0)
	;;=selection list with what ever text he desires.
	;;^UTILITY(U,$J,358.6,27,2)
	;;=Enter Anything!^0^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,358.6,27,3)
	;;=UTILITY SELECT NULL BLANKS
	;;^UTILITY(U,$J,358.6,28,0)
	;;=GMP PATIENT ACTIVE PROBLEMS^ACTIVE^GMPLENFM^PROBLEM LIST^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,358.6,28,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,358.6,28,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,358.6,28,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,358.6,28,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,358.6,28,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,358.6,28,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,358.6,28,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,358.6,28,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,358.6,28,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,358.6,28,2)
	;;=PROBLEM TEXT^210^CORRESPONDNG ICD-9 Dx CODE^7^DATE OF ONSET (MM/DD/YY)^8^SC INDICATOR (SC/NSC/"")^3^SC INDICATOR (Y/N/"")^1^SPECIAL EXPOSURE (A/I/P/"")^1^SPECIAL EXPOSURE (FULL TEXT)^12^^^
	;;^UTILITY(U,$J,358.6,28,3)
	;;=ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,358.6,28,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,358.6,28,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,29,0)
	;;=GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^^
	;;^UTILITY(U,$J,358.6,29,1,0)
	;;=^^2^2^2931025^

IBDEI01P
IBDEI01P	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.6,29,1,1,0)
	;;=Allows the user to select common problemslems from the term file of the
	;;^UTILITY(U,$J,358.6,29,1,2,0)
	;;=Problem List package.
	;;^UTILITY(U,$J,358.6,29,2)
	;;=POINTER TO CLINICAL TERM FILE^9^PROBLEM TEXT^210^CORRESPNDNG ICD-9 Dx CODE^7^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,358.6,29,3)
	;;=PROBLEMS SELECT LIST
	;;^UTILITY(U,$J,358.6,30,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,358.6,30,1,0)
	;;=^^8^8^2931105^^^
	;;^UTILITY(U,$J,358.6,30,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,358.6,30,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,358.6,30,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,30,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,30,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,30,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,30,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,30,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,30,2)
	;;=DATE (MMM DD,YYYY)^11^TIME (HH:MM)^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,358.6,30,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,30,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,30,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,30,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,31,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,358.6,31,1,0)
	;;=^^8^8^2931105^
	;;^UTILITY(U,$J,358.6,31,1,1,0)
	;;=Returns a list of all future appointments for the same day, all clinics.
	;;^UTILITY(U,$J,358.6,31,1,2,0)
	;;=Includes:
	;;^UTILITY(U,$J,358.6,31,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,31,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,31,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,31,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,31,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,31,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,31,2)
	;;=DATE (MMM DD,YYYY)^11^TIME^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,358.6,31,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,31,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,358.6,31,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,31,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,32,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,358.6,32,1,0)
	;;=^^8^8^2931105^
	;;^UTILITY(U,$J,358.6,32,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,358.6,32,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,358.6,32,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,358.6,32,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,358.6,32,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,358.6,32,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,358.6,32,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,358.6,32,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,358.6,32,2)
	;;=DATE (MMM DD,YYYY)^11^TIME^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,358.6,32,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,358.6,32,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,358.6,32,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,358.6,32,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,358.6,32,7,3,0)
	;;=IBCLINIC

IBDEI01Q
IBDEI01Q	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.7,0,"GL")
	;;=^IBE(358.7,
	;;^DIC("B","IMP/EXP FORM LINE",358.7)
	;;=
	;;^DIC(358.7,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.7,"%D",1,0)
	;;=This file is nearly identical to file #357.7. It is used by the
	;;^DIC(358.7,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.7,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.7,0)
	;;=FIELD^^.06^6
	;;^DD(358.7,0,"DDA")
	;;=N
	;;^DD(358.7,0,"DT")
	;;=2930802
	;;^DD(358.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(358.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(358.7,0,"ID",.06)
	;;=W ""
	;;^DD(358.7,0,"IX","B",358.7,.01)
	;;=
	;;^DD(358.7,0,"IX","C",358.7,.06)
	;;=
	;;^DD(358.7,0,"NM","IMP/EXP FORM LINE")
	;;=
	;;^DD(358.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.7,.01,1,0)
	;;=^.1
	;;^DD(358.7,.01,1,1,0)
	;;=358.7^B
	;;^DD(358.7,.01,1,1,1)
	;;=S ^IBE(358.7,"B",$E(X,1,30),DA)=""
	;;^DD(358.7,.01,1,1,2)
	;;=K ^IBE(358.7,"B",$E(X,1,30),DA)
	;;^DD(358.7,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.7,.01,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.7,.01,21,1,0)
	;;= 
	;;^DD(358.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(358.7,.01,21,3,0)
	;;=them to be identifies, such as V(1,1), meaning a vertical line starting at
	;;^DD(358.7,.01,21,4,0)
	;;=coordinates (1,1).
	;;^DD(358.7,.02,0)
	;;=LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,3)
	;;=Enter the block column the line should begin at.
	;;^DD(358.7,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.02,21,1,0)
	;;= 
	;;^DD(358.7,.02,21,2,0)
	;;=The column, relative to the block, that the line should begin at.
	;;^DD(358.7,.02,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.02,"DT")
	;;=2930715
	;;^DD(358.7,.03,0)
	;;=LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,3)
	;;=Enter the block row the line should begin at.
	;;^DD(358.7,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.03,21,1,0)
	;;= 
	;;^DD(358.7,.03,21,2,0)
	;;=The row, relative to the block, that the line should begin at.
	;;^DD(358.7,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.03,"DT")
	;;=2930715
	;;^DD(358.7,.04,0)
	;;=ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
	;;^DD(358.7,.04,.1)
	;;=ORIENTATION (HORIZONTAL/VERTICAL)
	;;^DD(358.7,.04,3)
	;;=Should the line be horizontal or vertical?
	;;^DD(358.7,.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.7,.04,21,1,0)
	;;= 
	;;^DD(358.7,.04,21,2,0)
	;;=The direction the line goes in.

IBDEI01R
IBDEI01R	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.7,.04,"DT")
	;;=2930415
	;;^DD(358.7,.05,0)
	;;=LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.7,.05,3)
	;;=How long should the line be?
	;;^DD(358.7,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.7,.05,21,1,0)
	;;= 
	;;^DD(358.7,.05,21,2,0)
	;;=The length of the line. For horizontal lines the length is in terms of
	;;^DD(358.7,.05,21,3,0)
	;;=characters. For vertical lines it is in terms of rows.
	;;^DD(358.7,.05,"DT")
	;;=2930319
	;;^DD(358.7,.06,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;6^Q
	;;^DD(358.7,.06,1,0)
	;;=^.1
	;;^DD(358.7,.06,1,1,0)
	;;=358.7^C
	;;^DD(358.7,.06,1,1,1)
	;;=S ^IBE(358.7,"C",$E(X,1,30),DA)=""
	;;^DD(358.7,.06,1,1,2)
	;;=K ^IBE(358.7,"C",$E(X,1,30),DA)
	;;^DD(358.7,.06,1,1,"%D",0)
	;;=^^2^2^2930319^
	;;^DD(358.7,.06,1,1,"%D",1,0)
	;;= 
	;;^DD(358.7,.06,1,1,"%D",2,0)
	;;=This cross-reference is used to find all lines belonging to a block.
	;;^DD(358.7,.06,1,1,"DT")
	;;=2930319
	;;^DD(358.7,.06,3)
	;;=What block should the line appear in?
	;;^DD(358.7,.06,4)
	;;=W "DOES THIS WORK",!
	;;^DD(358.7,.06,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.7,.06,21,1,0)
	;;= 
	;;^DD(358.7,.06,21,2,0)
	;;=The block the line appears in.
	;;^DD(358.7,.06,"DT")
	;;=2930802

IBDEI01S
IBDEI01S	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.7)
	;;=^IBE(358.7,
	;;^UTILITY(U,$J,358.7,0)
	;;=IMP/EXP FORM LINE^358.7I^2^2
	;;^UTILITY(U,$J,358.7,1,0)
	;;=H(0,0)^0^0^H^132^3
	;;^UTILITY(U,$J,358.7,2,0)
	;;=H(0,0)^0^0^H^132^8

IBDEI01T
IBDEI01T	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.8,0,"GL")
	;;=^IBE(358.8,
	;;^DIC("B","IMP/EXP TEXT AREA",358.8)
	;;=
	;;^DIC(358.8,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.8,"%D",1,0)
	;;=This file is nearly identical to file #357.8. It is used by the
	;;^DIC(358.8,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.8,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.8,0)
	;;=FIELD^^1^7
	;;^DD(358.8,0,"DDA")
	;;=N
	;;^DD(358.8,0,"DT")
	;;=2930802
	;;^DD(358.8,0,"IX","B",358.8,.01)
	;;=
	;;^DD(358.8,0,"IX","C",358.8,.02)
	;;=
	;;^DD(358.8,0,"NM","IMP/EXP TEXT AREA")
	;;=
	;;^DD(358.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.8,.01,1,0)
	;;=^.1
	;;^DD(358.8,.01,1,1,0)
	;;=358.8^B
	;;^DD(358.8,.01,1,1,1)
	;;=S ^IBE(358.8,"B",$E(X,1,30),DA)=""
	;;^DD(358.8,.01,1,1,2)
	;;=K ^IBE(358.8,"B",$E(X,1,30),DA)
	;;^DD(358.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.01,21,1,0)
	;;= 
	;;^DD(358.8,.01,21,2,0)
	;;=The name of the text area.
	;;^DD(358.8,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.8,.02,1,0)
	;;=^.1
	;;^DD(358.8,.02,1,1,0)
	;;=358.8^C
	;;^DD(358.8,.02,1,1,1)
	;;=S ^IBE(358.8,"C",$E(X,1,30),DA)=""
	;;^DD(358.8,.02,1,1,2)
	;;=K ^IBE(358.8,"C",$E(X,1,30),DA)
	;;^DD(358.8,.02,1,1,"%D",0)
	;;=^^3^3^2930326^
	;;^DD(358.8,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(358.8,.02,1,1,"%D",2,0)
	;;=Used to find all of the text areas that should appear on a particular
	;;^DD(358.8,.02,1,1,"%D",3,0)
	;;=block.
	;;^DD(358.8,.02,1,1,"DT")
	;;=2930326
	;;^DD(358.8,.02,3)
	;;=What block do you want the text to appear in?
	;;^DD(358.8,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.8,.02,21,1,0)
	;;= 
	;;^DD(358.8,.02,21,2,0)
	;;=The block the text area is displayed in.
	;;^DD(358.8,.02,"DT")
	;;=2930802
	;;^DD(358.8,.03,0)
	;;=TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,3)
	;;=What block column should the text begin in?
	;;^DD(358.8,.03,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.03,21,1,0)
	;;= 
	;;^DD(358.8,.03,21,2,0)
	;;=The starting position of the text area, relative to the block.
	;;^DD(358.8,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.8,.03,"DT")
	;;=2930715
	;;^DD(358.8,.04,0)
	;;=TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.04,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,3)
	;;=What block row should the text begin in?
	;;^DD(358.8,.04,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.04,21,1,0)
	;;= 
	;;^DD(358.8,.04,21,2,0)
	;;=The starting row of the text area, relative to the block.
	;;^DD(358.8,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.

IBDEI01U
IBDEI01U	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.8,.04,"DT")
	;;=2930715
	;;^DD(358.8,.05,0)
	;;=TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.05,3)
	;;=How many columns should be allocated on the block for the text?
	;;^DD(358.8,.05,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.05,21,1,0)
	;;= 
	;;^DD(358.8,.05,21,2,0)
	;;=The width of the text area, measured in characters.
	;;^DD(358.8,.05,"DT")
	;;=2930326
	;;^DD(358.8,.06,0)
	;;=TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.06,3)
	;;=How many lines on the block should be allocated for the text?
	;;^DD(358.8,.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.06,21,1,0)
	;;= 
	;;^DD(358.8,.06,21,2,0)
	;;=The height of the text area, measured in lines.
	;;^DD(358.8,.06,"DT")
	;;=2930326
	;;^DD(358.8,1,0)
	;;=TEXT^358.81^^1;0
	;;^DD(358.8,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,1,21,1,0)
	;;= 
	;;^DD(358.8,1,21,2,0)
	;;=The text that should appear within the text area.
	;;^DD(358.81,0)
	;;=TEXT SUB-FIELD^^.01^1
	;;^DD(358.81,0,"NM","TEXT")
	;;=
	;;^DD(358.81,0,"UP")
	;;=358.8
	;;^DD(358.81,.01,0)
	;;=TEXT^WL^^0;1^Q
	;;^DD(358.81,.01,3)
	;;=Enter the text that you want to appear in the block.
	;;^DD(358.81,.01,"DT")
	;;=2930326

IBDEI01V
IBDEI01V	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.8)
	;;=^IBE(358.8,
	;;^UTILITY(U,$J,358.8,0)
	;;=IMP/EXP TEXT AREA^358.8^0^0

IBDEI01W
IBDEI01W	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.91,0,"GL")
	;;=^IBE(358.91,
	;;^DIC("B","IMP/EXP MARKING AREA",358.91)
	;;=
	;;^DIC(358.91,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.91,"%D",1,0)
	;;= 
	;;^DIC(358.91,"%D",2,0)
	;;=This file is nearly identical to file #357.91. It is used by the
	;;^DIC(358.91,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.91,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.91,0)
	;;=FIELD^^.02^2
	;;^DD(358.91,0,"IX","B",358.91,.01)
	;;=
	;;^DD(358.91,0,"NM","IMP/EXP MARKING AREA")
	;;=
	;;^DD(358.91,0,"PT",358.22,.06)
	;;=
	;;^DD(358.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(358.91,.01,1,0)
	;;=^.1
	;;^DD(358.91,.01,1,1,0)
	;;=358.91^B
	;;^DD(358.91,.01,1,1,1)
	;;=S ^IBE(358.91,"B",$E(X,1,30),DA)=""
	;;^DD(358.91,.01,1,1,2)
	;;=K ^IBE(358.91,"B",$E(X,1,30),DA)
	;;^DD(358.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(358.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(358.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.
	;;^DD(358.91,.02,0)
	;;=DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.91,.02,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.91,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.91,.02,21,1,0)
	;;= 
	;;^DD(358.91,.02,21,2,0)
	;;=The text that should be displayed in the MARKING AREA.
	;;^DD(358.91,.02,"DT")
	;;=2921207

IBDEI01X
IBDEI01X	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,358.91)
	;;=^IBE(358.91,
	;;^UTILITY(U,$J,358.91,0)
	;;=IMP/EXP MARKING AREA^358.91^7^7
	;;^UTILITY(U,$J,358.91,1,0)
	;;=TWO SPACES^  
	;;^UTILITY(U,$J,358.91,2,0)
	;;=__^__^1^
	;;^UTILITY(U,$J,358.91,3,0)
	;;=(P) (S)^(P) (S)^1^
	;;^UTILITY(U,$J,358.91,4,0)
	;;=(A) (I)^(A) (I)^1
	;;^UTILITY(U,$J,358.91,5,0)
	;;=(Y)^(Y)^1^
	;;^UTILITY(U,$J,358.91,6,0)
	;;=__ yes^__ yes^1^
	;;^UTILITY(U,$J,358.91,7,0)
	;;=__ no^__ no^1^

IBDEI01Y
IBDEI01Y	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OR",227,0)
	;;=227^IBDE^^ALL SERVICES
	;;^UTILITY(U,$J,"PKG",227,0)
	;;=IB ENCOUNTER FORM IMP/EXP^IBDE^The import/export utilities for encounter forms.
	;;^UTILITY(U,$J,"PKG",227,4,0)
	;;=^9.44PA^10^10
	;;^UTILITY(U,$J,"PKG",227,4,1,0)
	;;=358
	;;^UTILITY(U,$J,"PKG",227,4,1,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,2,0)
	;;=358.1
	;;^UTILITY(U,$J,"PKG",227,4,2,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,3,0)
	;;=358.2
	;;^UTILITY(U,$J,"PKG",227,4,3,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,4,0)
	;;=358.3
	;;^UTILITY(U,$J,"PKG",227,4,4,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,5,0)
	;;=358.4
	;;^UTILITY(U,$J,"PKG",227,4,5,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,6,0)
	;;=358.5
	;;^UTILITY(U,$J,"PKG",227,4,6,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,7,0)
	;;=358.6
	;;^UTILITY(U,$J,"PKG",227,4,7,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,8,0)
	;;=358.7
	;;^UTILITY(U,$J,"PKG",227,4,8,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,9,0)
	;;=358.8
	;;^UTILITY(U,$J,"PKG",227,4,9,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,10,0)
	;;=358.91
	;;^UTILITY(U,$J,"PKG",227,4,10,222)
	;;=y^n^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",227,4,"B",358,1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.1,2)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.2,3)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.3,4)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.4,5)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.5,6)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.6,7)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.7,8)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.8,9)
	;;=
	;;^UTILITY(U,$J,"PKG",227,4,"B",358.91,10)
	;;=
	;;^UTILITY(U,$J,"PKG",227,5)
	;;=ALBANY
	;;^UTILITY(U,$J,"PKG",227,11)
	;;=358^358.1
	;;^UTILITY(U,$J,"PKG",227,22,0)
	;;=^9.49I^5^5
	;;^UTILITY(U,$J,"PKG",227,22,1,0)
	;;=2.0^2940320^2930820
	;;^UTILITY(U,$J,"PKG",227,22,2,0)
	;;=2.0T2^2931001
	;;^UTILITY(U,$J,"PKG",227,22,3,0)
	;;=2.0T3^2940203^2940209
	;;^UTILITY(U,$J,"PKG",227,22,4,0)
	;;=2.0V3^2940215
	;;^UTILITY(U,$J,"PKG",227,22,5,0)
	;;=2.0V4^2940309
	;;^UTILITY(U,$J,"PKG",227,22,"B","2.0",1)
	;;=
	;;^UTILITY(U,$J,"PKG",227,22,"B","2.0T2",2)
	;;=
	;;^UTILITY(U,$J,"PKG",227,22,"B","2.0T3",3)
	;;=
	;;^UTILITY(U,$J,"PKG",227,22,"B","2.0V3",4)
	;;=
	;;^UTILITY(U,$J,"PKG",227,22,"B","2.0V4",5)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358.01)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.1)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.11)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.2)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.21)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.22)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.3)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.31)
	;;=
	;;^UTILITY(U,$J,"SBF",358.4,358.4)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.5)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.52)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.6)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.61)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.66)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.67)
	;;=
	;;^UTILITY(U,$J,"SBF",358.7,358.7)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.8)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.81)
	;;=
	;;^UTILITY(U,$J,"SBF",358.91,358.91)
	;;=

IBDEINI1
IBDEINI1	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; LOADS AND INDEXES DD'S
	;
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DFR,DTN,DIX,DZ D DT^DICRW S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
ASK	I %=1,$D(DIFQ(0)) W !,"SHALL I WRITE OVER FILE SECURITY CODES" S %=2 D YN^DICN S DSEC=%=1 I %<1 K DIFQ Q
	Q:'$D(DIFQ)  S %=2 W !!,"ARE YOU SURE EVERYTHING'S OK" D YN^DICN I %-1 K DIFQ Q
	I $D(DIFKEP) F DIDIU=0:0 S DIDIU=$O(DIFKEP(DIDIU)) Q:DIDIU'>0  S DIU=DIDIU,DIU(0)=DIFKEP(DIDIU) D EN^DIU2
	D DT^DICRW K ^UTILITY(U,$J),^UTILITY("DIK",$J) D WAIT^DICD
	S DN="^IBDEI" F R=1:1:70 D @(DN_$$B36(R)) W "."
	F  S D=$O(^UTILITY(U,$J,"SBF","")) Q:D'>0  K:'DIFQ(D) ^(D) S D=$O(^(D,"")) I D>0  K ^(D) D IX
DATA	W "." S (D,DDF(1),DDT(0))=$O(^UTILITY(U,$J,0)) Q:D'>0
	I DIFQR(D) S DTO=0,DMRG=1,DTO(0)=^(D),Z=^(D)_"0)",D0=^(D,0),@Z=D0,DFR(1)="^UTILITY(U,$J,DDF(1),D0,",DKP=DIFQR(D)'=2 F D0=0:0 S D0=$O(^UTILITY(U,$J,DDF(1),D0)) S:D0="" D0=-1 Q:'$D(^(D0,0))  S Z=^(0) D I^DITR
	K ^UTILITY(U,$J,DDF(1)),DDF,DDT,DTO,DFR,DFN,DTN G DATA
	;
W	S Y=$P($T(@X),";",2) W !,"NOTE: This package also contains "_Y_"S",! Q:'$D(DIFQ(0))
	S %=1 W ?6,"SHALL I WRITE OVER EXISTING "_Y_"S OF THE SAME NAME" D YN^DICN I '% W !?6,"Answer YES to replace the current "_Y_"S with the incoming ones." G W
	S:%=2 DIFQ(X)=0 K:%<0 DIFQ
	Q
	;
OPT	;OPTION
RTN	;ROUTINE DOCUMENTATION NOTE
FUN	;FUNCTION
BUL	;BULLETIN
KEY	;SECURITY KEY
HEL	;HELP FRAME
DIP	;PRINT TEMPLATE
DIE	;INPUT TEMPLATE
DIB	;SORT TEMPLATE
DIS	;SCREEN TEMPLATE
	;
SBF	;FILE AND SUB FILE NUMBERS
IX	W "." S DIK="A" F %=0:0 S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
	S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK
	I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," G IXALL^DIK
	Q
B36(X)	Q $$N(X\(36*36)#36+1)_$$N(X\36#36+1)_$$N(X#36+1)
N(%)	Q $E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)
MSG	;
	I $P(^XMB(3.9,XMZ,0),U,7)'="X" Q
	S X=$S($D(^XMB(3.9,XMZ,2,XCN,0)):^(0),1:"") Q:X=""
M0	D M1 Q:$P(X,"$END MESSAGE")=""  D SAVE,NT G M0
NT	S XCN=$O(^XMB(3.9,XMZ,2,XCN)) Q:XCN'?1.N  S X=^(XCN,0) Q
SAVE	D NT Q:$E(X)="$"  S Y=X D NT Q:$E(X)="$"
	I $A(X)=126 S A0=X D NT S X=A0_$E(X,2,999) K A0
	S:% @Y=$E(X,2,999) G SAVE
	Q
M1	S Y=$E(X,2,4),%=0 I Y="DDD" S D=+$P(X,"(#",2),%=DIFQ(D) Q:D  S:$P(X,"(#",2)["FILE SECURITY" %=DSEC Q
	Q:Y="END"
	I Y="DTA" S %=DIFQR(D) Q
	I (Y="OR ")!(Y="PKG") S %=1 Q
	I $T(@Y)]"" S %=1 Q
	Q

IBDEINI2
IBDEINI2	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("DIFROM",$J),DIC S DIDUZ=0 S:$D(DUZ)#2 DIDUZ=DUZ S DUZ=.5
	I $D(^DIC(9.2,0))#2,^(0)?1"HEL".E S (DIC,DLAYGO)=9.2,N="HEL",DIC(0)="LX" G ADD
	Q
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R'>0  S X=$P(^(R,0),U,1) W "." K DA D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ^UTILITY("DIFROM",$J,N,X)=+Y K ^DIC(9.2,+Y,1),^(2),^(3),^(10) S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y D %XY^%RCR
	S DIK=DIC
HELP	S R=$O(^UTILITY("DIFROM",$J,N,R)) Q:R=""  W !,"'"_R_"' Help Frame filed." S DA=^(R)
	F X=0:0 S X=$O(^DIC(9.2,DA,2,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$P(I,U,2) S:Y]"" Y=$O(^DIC(9.2,"B",Y,0)) S ^(0)=$P(^DIC(9.2,DA,2,X,0),U,1)_U_$S(Y>0:Y,1:"")_U_$P(^(0),U,3,99)
	S I=0 F X=0:0 S X=$O(^DIC(9.2,DA,10,X)) Q:'X  I $D(^(X,0)) S Y=$P(^(0),U),Y=$S(Y]"":$O(^MAG("B",Y,0)),1:0) S:Y $P(^DIC(9.2,DA,10,X,0),U)=Y,I=I+1,%=X I 'Y K ^DIC(9.2,DA,10,X,0)
	I I S $P(^DIC(9.2,DA,10,0),U,3,4)=%_U_I
IX	D IX1^DIK G HELP
	;
U	I $D(DIRUT) S DIFQ=1
	W ! Q
REP	S DIR(0)="Y",DIR("A")="Shall I change the NAME of the file to "_DIF
	S DIR("??")="^D REP^DIFROMH1",DIR("B")="NO" D ^DIR G U:$D(DIRUT)
	I Y S DIE=1,DIFQ=0,DA=N,DR=".01////"_DIF D ^DIE Q
	S DIR("A")="Shall I replace your file with mine"
	S DIR("??")="^D AG^DIFROMH1" D ^DIR G U:$D(DIRUT)!'Y
	S DIU(0)="E",DIR("A")="Do you want to keep the Data"
	S DIR("??")="^D CHG^DIFROMH1" D ^DIR G U:$D(DIRUT)
	S:'Y DIU(0)=DIU(0)_"D"
	S DIR("A")="Do you want to keep the Templates"
	S DIR("??")="^D TEMP^DIFROMH1" D ^DIR G U:$D(DIRUT) S:'Y DIU(0)=DIU(0)_"T"
	S DIFQ(N)=1,DIFKEP(N)=DIU(0) W !?15," (",DIF,") " Q

IBDEINI3
IBDEINI3	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("DIFROM",$J) S DIC(0)="LX",(DIC,DLAYGO)=3.6,N="BUL" D ADD:$D(^XMB(3.6,0))
	S X=0 F R=0:0 S X=$O(^UTILITY("DIFROM",$J,N,X)) Q:X=""  W !,"'",X,"' BULLETIN FILED -- Remember to add mail groups for new bulletins."
	I $D(^DIC(9.4,0))#2,^(0)?1"PACK".E S N="PKG",(DIC,DLAYGO)=9.4 D ADD
	G NP:'$D(DA) S %=+$O(^DIC(9.4,DA,22,"B",DIFROM,0)) I $D(^DIC(9.4,DA,22,%,0)) S $P(^(0),U,3)=DT
	I $D(^DIC(9.4,DA,0))#2 S %=$P(^(0),U,4) I %]"" S %=$O(^DIC(9.2,"B",%,0)) S:%]"" $P(^DIC(9.4,DA,0),U,4)=%
OR	I $D(^ORD(100.99))&$O(^UTILITY(U,$J,"OR","")) D EN^IBDEINI4
NP	K DIC,^UTILITY("DIFROM",$J) S DIC(0)="LX" I $D(^DIC(19,0))#2,^(0)?1"OPTION".E S (DIC,DLAYGO)=19,N="OPT" D ADD,OP
	I $D(^DIC(19.1,0))#2,($P(^(0),U)?1"SECUR".E)!($P(^(0),U)="KEY") S (DIC,DLAYGO)=19.1,N="KEY" D ADD K ^UTILITY("DIFROM",$J)
	I $D(^DIC(9.8,0))#2,^(0)?1"ROUTINE^".E S (DIC,DLAYGO)=9.8,N="RTN" D ADD
	S DIC=.5,DLAYGO=0,N="FUN" D ADD
	S DIC("S")="I $P(^(0),U,4)=DIFL" F N="DIPT","DIBT","DIE" S DIC=U_N_"(" D ADD
	K DIC("S") S N="DIST(.404,",DIC=U_N,DLAYGO=.404 D ADD
	S DIC("S")="I $P(^(0),U,8)=DIFL",N="DIST(.403,",DIC=U_N,DLAYGO=.403 D ADD
	K ^UTILITY(U,$J),DIC,DLAYGO F DIFR="DIE","DIPT" D DIEZ
	K ^UTILITY("DIFROM",$J) Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS) D OS^DII
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S DIFR1=""
DZ1	S DIFR1=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1)) Q:DIFR1=""
	F DIFR2=0:0 S DIFR2=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1,DIFR2)) Q:'DIFR2  S Y=DIFR2 I $D(@(U_DIFR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIFR,3)_"Z")
	G DZ1
	;
OP	S R=$O(^UTILITY("DIFROM",$J,N,R)) I R="" K ^UTILITY("DIFROM",$J) G Q
	W !,"'"_R_"' Option Filed" S DA=+^UTILITY("DIFROM",$J,N,R) G:$P(^(R),U,2,3)="XUCORE^"!($P(^(R),U,2,3)="XUCOMMAND^") OP
	I $D(^DIC(19,DA,220)) S %=$P(^(220),U) S:%]"" %=$O(^XMB(3.6,"B",%,0)) S $P(^DIC(19,DA,220),U)=%,%=$P(^(220),U,3) S:%]"" %=$O(^XMB(3.8,"B",%,0)) S $P(^DIC(19,DA,220),U,3)=%
	S %=$P(^DIC(19,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^DIC(19,DA,0),U,12)=%,%=$P(^(0),U,7),(DZ,DIX)=0
	D:$D(^DIC(19,DA,10,"B")) KAD(DA) S:%]"" %=$O(^DIC(9.2,"B",%,0)) S $P(^DIC(19,DA,0),U,7)=%,%=$P(^(0),U,4),%="MOQXL"[% K ^(10,"B"),^("C")
	F X=0:0 S X=$O(^DIC(19,DA,10,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$S($D(^(U)):^(U),1:"") K ^DIC(19,DA,10,X) I Y]"",% S D=$O(^DIC(19,"B",Y,0)) I D S ^DIC(19,DA,10,X,0)=D_U_$P(I,U,2,9),DZ=DZ+1,DIX=X
	S:% ^DIC(19,DA,10,0)="^19.01PI^"_DIX_U_DZ D IX1^DIK G OP
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),DIFL=$S(N="DIST(.403,":$P(^(0),U,8),N="DIST(.404,":$P(^(0),U,2),1:$P(^(0),U,4)) W "." K DA D ^DIC I Y>0,'$D(DIFQ($E(N,1,3)))!$P(Y,U,3) S Y=Y_U D A
Q	Q
A	I N="BUL" K % S %(0)=$G(@(DIC_"+Y,2,0)")) F %=0:0 S %=$O(@(DIC_"+Y,2,%)")) Q:'%  S %(%)=$G(^(%,0))
	K:N'="KEY"&(N'="OPT") @(DIC_"+Y)") S ^UTILITY("DIFROM",$J,N,X)=Y S:$E(N,1,2)="DI" ^(X,+Y)="" S:N="PKG" DIFROM(0)=+Y Q:$P(Y,U,2,3)="XUCORE^"!($P(Y,U,2,3)="XUCOMMAND^")
	I N="BUL",%(0)]"" S @(DIC_"+Y,2,0)")=%(0) F %=0:0 S %=$O(%(%)) Q:'%  S @(DIC_"+Y,2,%,0)")=%(%)
	I $E(N,1,2)="DI",('DIFL)!('$D(^DD(+DIFL))) W !,"**WARNING--"_$S(N="DIE":"INPUT",N="DIPT":"PRINT",N="DIBT":"SORT",1:"FORM or BLOCK")_" template "_$P(Y,U,2)_" has been installed,",!,"but associated file "_DIFL_" not on your system!"
	I N="OPT" S:$P(^DIC(19,+Y,0),U,6)]"" DIOPT=$P(^(0),U,6) I $O(^UTILITY(U,$J,N,R,1,0)) K ^DIC(19,+Y,1)
	I N="DIST(.403," D BLK
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y,DIK=DIC D %XY^%RCR
	D IX1^DIK:N'="OPT" I N="OPT",$D(DIOPT) S:$P(^DIC(19,DA,0),U,6)="" $P(^(0),U,6)=DIOPT K DIOPT
	Q
BLK	F J=0:0 S J=$O(^UTILITY(U,$J,N,R,40,J)) Q:'J  I $D(^(J,0)) S %=$P(^(0),U,2) S:%]"" %=$O(^DIST(.404,"B",%,0)) S:% $P(^UTILITY(U,$J,N,R,40,J,0),U,2)=% D B1
	K A0,A1,A2,J,L Q
B1	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,40,L)) Q:'L  S A0=$G(^(L,0)),%=$P(A0,U) I %]"" S %=$O(^DIST(.404,"B",%,0)) I % S $P(A0,U)=%,^UTILITY(U,$J,N,R,40,J,"BLK",%,0)=A0
	S A0=$G(^UTILITY(U,$J,N,R,40,J,40,0)) Q:A0=""  K ^UTILITY(U,$J,N,R,40,J,40) S (A1,A2)=0
	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L)) Q:'L  S ^UTILITY(U,$J,N,R,40,J,40,L,0)=^(L,0),A1=L,A2=A2+1
	S $P(A0,U,3,4)=A1_U_A2,^UTILITY(U,$J,N,R,40,J,40,0)=A0 K ^UTILITY(U,$J,N,R,40,J,"BLK")
	Q
KAD(D0)	N D1,X
	S X=0 F  S X=$O(^DIC(19,D0,10,"B",X)) Q:X'>0  S D1=0 F  S D1=$O(^DIC(19,D0,10,"B",X,D1)) Q:D1'>0  K ^DIC(19,"AD",X,D0,D1)
	Q

IBDEINI4
IBDEINI4	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
EN	S DA(1)=1,DIK="^ORD(100.99,1,5," I $D(^ORD(100.99,1,5,DA)) D ^DIK
	S %X="^UTILITY(U,$J,""OR"","_$O(^UTILITY(U,$J,"OR",""))_",",%Y=DIK_DA_","
	S:'$D(^ORD(100.99,1,5,0)) ^(0)="^100.995P^^" S $P(^(0),U,3,4)=DA_U_($P(^(0),U,4)+1)
	D %XY^%RCR S $P(^ORD(100.99,1,5,DA,0),U)=DA,%=$P(^(0),U,4)
	I %]"" S %=$O(^ORD(100.98,"B",%,0)) I %>0 S $P(^ORD(100.99,1,5,DA,0),U,4)=%
	D OR
	S DA(1)=1 D IX1^DIK
	Q
OR	S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,1,N)) Q:'N  S X=$P(^(N,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,0)=% S X=N,I=I+1,(R,J)=0,Y="" D OR1
	S:I $P(^ORD(100.99,1,5,DA,1,0),U,3,4)=X_U_I S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,5,N)) Q:'N  S X=$P(^(N,0),U,3) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% $P(^ORD(100.99,1,5,DA,5,N,0),U,3)=% S X=N,I=I+1
	S:I $P(^ORD(100.99,1,5,DA,5,0),U,3,4)=X_U_I K N,R,X,Y,I,J
	Q
OR1	N X F  S R=$O(^ORD(100.99,1,5,DA,1,N,1,R)) Q:'R  S X=$P(^(R,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,1,R,0)=% S Y=R,J=J+1
	S:J $P(^ORD(100.99,1,5,DA,1,N,1,0),U,3,4)=Y_U_J
	Q
ADDP	N I,J,N,R,DA,DLAYGO S %=""
	S DIC="^ORD(101,",DIC(0)="LX",DLAYGO=101 D FILE^DICN K DIC Q:Y=-1  S %=+Y Q

IBDEINI5
IBDEINI5	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	K ^UTILITY("DIF",$J) S DIFRDIFI=1 F I=1:1:20 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;IB ENCOUNTER FORM IMP/EXP^IBDE
	;;358I;IMP/EXP ENCOUNTER FORM;^IBE(358,;0;y;n;;n;;;y;o;n
	;;
	;;358.1I;IMP/EXP ENCOUNTER FORM BLOCK;^IBE(358.1,;0;y;n;;n;;;y;o;n
	;;
	;;358.2I;IMP/EXP SELECTION LIST;^IBE(358.2,;0;y;n;;n;;;y;o;n
	;;
	;;358.3I;IMP/EXP SELECTION;^IBE(358.3,;0;y;n;;n;;;y;o;n
	;;
	;;358.4I;IMP/EXP SELECTION GROUP;^IBE(358.4,;0;y;n;;n;;;y;o;n
	;;
	;;358.5I;IMP/EXP DATA FIELD;^IBE(358.5,;0;y;n;;n;;;y;o;n
	;;
	;;358.6IO;IMP/EXP PACKAGE INTERFACE;^IBE(358.6,;0;y;n;;n;;;y;o;n
	;;
	;;358.7I;IMP/EXP FORM LINE;^IBE(358.7,;0;y;n;;n;;;y;o;n
	;;
	;;358.8;IMP/EXP TEXT AREA;^IBE(358.8,;0;y;n;;n;;;y;o;n
	;;
	;;358.91;IMP/EXP MARKING AREA;^IBE(358.91,;0;y;n;;n;;;y;o;n
	;;

IBDEINIS
IBDEINIS	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
PAC(PKG,VER)	; called from package init (DIFROM7 created this routine)
	; PKG = $T(IXF) of the INIT routine.
	; VER is an array that is contained in DIFROM from the INIT routine
	;
	N %,%I,%H,DATE,DIFROM,NOW,PACKAGE,RUN,SERVER,SITE,START,X,XMDUZ,XMSUB,XMTEXT,XMY,Y K ^TMP("IBDEINIS",$J)
	;
	; Site tracking updates only occur if run in a VA production primary domain
	; account.
	I $G(^XMB("NETNAME"))'[".VA.GOV" Q
	Q:'$D(^%ZOSF("UCI"))  Q:'$D(^%ZOSF("PROD"))
	X ^%ZOSF("UCI") I Y'=^%ZOSF("PROD") Q
	;
	S SERVER="S.A5CSTS@FORUM.VA.GOV"
	S PACKAGE=$P($P(PKG,";",3),U)
	S SITE=$G(^XMB("NETNAME"))
	S START=$P($G(^DIC(9.4,VER(0),"PRE")),U,2) I '$L(START) S START="Unknown"
	D  ; check if ok to use kernel functions
	.S X="XLFDT" X ^%ZOSF("TEST") I $T D  Q
	..S NOW=$$HTFM^XLFDT($H)
	..S RUN="Unknown" I START S RUN=$$FMDIFF^XLFDT(NOW,START,3)
	..S START=$$FMTE^XLFDT(START)
	..S DATE=NOW\1
	..S NOW=$$FMTE^XLFDT(NOW)
	.D NOW^%DTC S NOW=%,DATE=X
	.S RUN="" ; don't bother to compute
	.S Y=START D DD^%DT S START=Y
	.S Y=NOW D DD^%DT S NOW=Y
	;
	; Message for server
	S ^TMP("IBDEINIS",$J,1,0)="PACKAGE INSTALL"
	S ^TMP("IBDEINIS",$J,2,0)="SITE: "_SITE
	S ^TMP("IBDEINIS",$J,3,0)="PACKAGE: "_PACKAGE
	S ^TMP("IBDEINIS",$J,4,0)="VERSION: "_VER
	S ^TMP("IBDEINIS",$J,5,0)="Start time: "_START
	S ^TMP("IBDEINIS",$J,6,0)="Completion time: "_NOW
	S ^TMP("IBDEINIS",$J,7,0)="Run time: "_RUN
	S ^TMP("IBDEINIS",$J,8,0)="DATE: "_DATE
	;
	; Data is sent to server on FORUM - S.A5CSTS
	S XMY(SERVER)="",XMDUZ=.5,XMTEXT="^TMP(""IBDEINIS"",$J,",XMSUB=PACKAGE_" VERSION "_VER_" INSTALLATION"
	D ^XMD
	K ^TMP("IBDEINIS",$J)
	Q

IBDEINIT
IBDEINIT	; ; 18-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	K DIF,DIFQ,DIFQR,DIFQN,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DIFROM,DFR,DTN,DIX,DZ,DIRUT,DTOUT,DUOUT
	S U="^",DIFQ=0,DIFROM="2.0" W !,"This version (#2.0) of 'IBDEINIT' was created on 18-MAR-1994"
	W !?9,"(at ALBANY ISC VAX DEVELOPMENT, by VA FileMan V.20.0)",!
	I $D(^DD("VERSION")),^("VERSION")'<20 G GO
	W !,"FIRST, I'LL FRESHEN UP YOUR VA FILEMAN...." D N^DINIT
	I ^DD("VERSION")<20 W !,"BUT I NEED VERSION 20 OF THE VA FILEMAN!" G Q
GO	;
EN	; ENTER HERE TO BYPASS THE PRE-INIT PROGRAM
	S DIFQ=0 K DIRUT,DTOUT,DUOUT
	F DIFRIR=1:1:1 S DIFRRTN="^IBDEINI"_$E("5",DIFRIR) D @DIFRRTN
	W:1 !,"I AM GOING TO SET UP THE FOLLOWING FILES:" F I=1:2:20 S DIF(I)=^UTILITY("DIF",$J,I) D 1 G Q:DIFQ!$D(DIRUT) K DIF(I)
	S DIFROM="2.0" D PKG:'$D(DIFROM(0)),^IBDEINI1 G Q:'$D(DIFQ) S DIK(0)="AB"
	F DIF=1:2:20 S %=^UTILITY("DIF",$J,DIF),DIK=$P(%,";",5),N=$P(%,";",3),D=$P(%,";",4)_U_N D D K DIFQ(N)
	K DIFQR D ^IBDEINI2,^IBDEINI3
	L  S DUZ=DIDUZ W:1 !,$C(7),"OK, I'M DONE.",!,"NO"_$P("TE THAT FILE",U,DSEC)_" SECURITY-CODE PROTECTION HAS BEEN MADE"
	I DIFROM F DIF=1:2:20 S %=^UTILITY("DIF",$J,DIF),N=+$P(%,";",3) I N,$P(%,";",8)="y" S ^DD(N,0,"VR")=DIFROM
	I DIFROM(0)>0 F %="PRE","INI","INIT" S:$D(DIFROM(%)) $P(^DIC(9.4,DIFROM(0),%),U,2)=DIFROM(%)
	I $G(DIFQN) S $P(^(0),U,3,4)=$P(DIFQN,U,2)_U_($P(^DIC(0),U,4)+DIFQN) K DIFQN
	I DIFROM,$D(^%ZTSK) S X="IBDEINIS" X ^%ZOSF("TEST") D:$T PAC^IBDEINIS($T(IXF),.DIFROM)
	S:DIFROM(0)>0 ^DIC(9.4,DIFROM(0),"VERSION")=DIFROM G Q^DIFROM0
D	S:$D(^DIC(+N,0))[0 ^(0)=D S X=$D(@(DIK_"0)")),^(0)=D_U_$S(X#2:$P(^(0),U,3,9),1:U)
	S DIFQR=DIFQR(+N) I ^DD("VERSION")>17.5,$D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") D EN^DIKZ
	I DIFQR D IXALL^DIK:$O(@(DIK_"0)")) W "."
	Q
R	G REP^IBDEINI2
	;
1	S N=+$P(DIF(I),";",3),DIF=$P(DIF(I),";",4),S=$P(DIF(I),";",5)
	W !!?3,N,?13,DIF,$P("  (Partial Definition)",U,$P(DIF(I),";",6)),$P("  (including data)",U,$P(DIF(I),";",13)="y") S Z=$S($D(^DIC(N,0))#2:^(0),1:"")
	I Z="" S DIFQ(N)=1,DIFQN=$G(DIFQN)+1_U_N G S
	I $L($P(Z,DIF)) W $C(7),!,"*BUT YOU ALREADY HAVE '",$P(Z,U),"' AS FILE #",N,"!" D R Q:DIFQ  G S:$D(DIFKEP(N)),1
	S DIFQ(N)=$P(DIF(I),";",7)'="n"
	I $L(Z) W $C(7),!,"Note:  You already have the '",$P(Z,U),"' File." S DIFQ(0)=1
	S %=$E(^UTILITY("DIF",$J,I+1),4,245) I %]"" X % S DIFQ(N)=$T W:'$T !,"Screen on this Data Dictionary did not pass--DD will not be installed!" G S
	I $L(Z),$P(DIF(I),";",10)="y" S DIR("A")="Shall I write over the existing Data Definition",DIR("??")="^D DD^DIFROMH1",DIR("B")="YES",DIR(0)="Y" D ^DIR S DIFQ(N)=Y
S	S DIFQR(N)=0 Q:$P(DIF(I),";",13)'="y"!$D(DIRUT)
	I $P(DIF(I),";",15)="y",$O(@(S_"0)"))>0 S DIF=$P(DIF(I),";",14)="o",DIR("A")="Want my data "_$P("merged with^to overwrite",U,DIF+1)_" yours",DIR("??")="^D DTA^DIFROMH1",DIR(0)="Y" D ^DIR S DIFQR(N)=$S('Y:Y,1:Y+DIF) Q
	S %=$P(DIF(I),";",14)="o" W !,$C(7),"I will ",$P("MERGE^OVERWRITE",U,%+1)," your data with mine." S DIFQR(N)=%+1
	Q
Q	W $C(7),!!,"NO UPDATING HAS OCCURRED!" G Q^DIFROM0
	;
PKG	S X=$P($T(IXF),";",3),DIC="^DIC(9.4,",DIC(0)="",DIC("S")="I $P(^(0),U,2)="""_$P(X,U,2)_"""",X=$P(X,U) D ^DIC S DIFROM(0)=+Y K DIC
	Q
	;
IXF	;;IB ENCOUNTER FORM IMP/EXP^IBDE;10865
ERX	W $C(7),!!,"This INIT was built as a Network Mail Message and can ONLY be installed",!,"within the Mail system!!" G Q

IBDF10
IBDF10	;ALB/CJM - ENCOUNTER FORM - (shift block contents) ;APRIL 22,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
SHIFT(TYPE)	;shifts contents of blocks - prompts user for what to shift (unless TYPE is defined), and how much to shift
	;assumes IBBLK is defined
	N AMOUNT,WAY,QUIT,TOP,BOTTOM,LEFT,RIGHT,HT,WIDTH,MAX
	S QUIT=0,VALMBCK="R"
	I '$D(TYPE) N TYPE D TYPE
	I $D(TYPE),"EDSLT"[TYPE S HT=IBBLK("H"),WIDTH=IBBLK("W")
	I $G(TYPE)="B" S HT=IBFORMHT,WIDTH=IBFORMW
	D:'QUIT DIRECTN
	D:'QUIT RANGE(HT,WIDTH)
	S:'QUIT MAX=$S(WAY="U":$S(BOTTOM:BOTTOM,1:HT),WAY="D":HT-TOP-1,WAY="L":$S(RIGHT:RIGHT,1:WIDTH),1:WIDTH-LEFT-1)
	D:'QUIT AMOUNT(MAX)
	D:'QUIT @TYPE
	Q
TYPE	;asks user for what should be shifted
	D TYPEHELP
	K DIR S DIR(0)="SB^E:Everything;D:Data Fields;S:Selection Lists;L:Lines;T:Text Areas",DIR("A")="What should be shifted?",DIR("B")="Everything"
	S DIR("?")="^D TYPEHELP^IBDF10"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TYPE=Y
	Q
TYPEHELP	;help for TYPE
	W !!,"You can choose what should be shifted. Select one of the following:",!," [E]verything, [D]ata fields, [S]election lists, [L]ines, [T]ext areas",!
	Q
DIRECTN	;asks user for direction of shift - returns WAY
	S DIR(0)="SB^U:UP;D:DOWN;L:LEFT;R:RIGHT",DIR("A")="Shift UP, DOWN, LEFT, or RIGHT?",DIR("B")="DOWN",DIR("?")="Which direction should the shift be in?"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S WAY=Y
	Q
AMOUNT(MAX)	;now ask user how far to shift - returns AMOUNT
	;MAX is the maxium shift allowed
	S DIR(0)="N^0:"_MAX_":0"
	S DIR("A")="Shift how far "_$S(WAY="U":"up in rows",WAY="D":"down in rows",WAY="R":"to the right in columns",1:"to the left in columns")_"?"
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S AMOUNT=Y
	Q
RANGE(HT,WIDTH)	;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
	N I
	K DIR
	;get TOP
	S DIR("A")="What is the top-most row to shift?"
	S DIR(0)="N^1:"_HT_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TOP=Y
	;now get BOTTOM
	S DIR("A")="What is the bottom-most row to shift? (optional)",DIR("?",1)="Enter the lowest row that the shift should effect.",DIR("?")="Enter nothing to shift everything below the top-most row that you specified."
	K DIR("B")
	S DIR(0)="NO^"_TOP_":"_HT_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S BOTTOM=Y
	;get LEFT
	S DIR("A")="What is the left-most column to shift?"
	S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S LEFT=Y
	;now get RIGHT
	S DIR("A")="What is the right-most column to shift? (optional)"
	S DIR("?",1)="Enter the right-most column that the shift should effect.",DIR("?")="Enter nothing to shift everything to the right of the left-most column that you specified."
	K DIR("B")
	S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S RIGHT=Y
	;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
	;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
	S TOP=TOP-1,LEFT=LEFT-1
	S:BOTTOM>0 BOTTOM=BOTTOM-1
	S:RIGHT>0 RIGHT=RIGHT-1
	Q
E	;shift everything
	D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
D	;shift data fields
	D FLDS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
S	;shift selection lists
	D LSTS^IBDF10B(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
T	;shift text areas
	D TXT^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
L	;shift lines
	D LINES^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q
B	;shift blocks
	D BLOCKS^IBDF10A(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)
	Q

IBDF10A
IBDF10A	;ALB/CJM - ENCOUNTER FORM - (shifting data fields,lines,text areas,blocks);3/29/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
FLDS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT by AMOUNT
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,IBX,IBY,FLD,PIECE,POS,VERT
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:'FLD  D
	.S PIECE=$S(VERT:11,1:10)
	.S NODE=$G(^IBE(357.5,FLD,0)) Q:NODE=""
	.S IBX=$P(NODE,"^",10),IBY=$P(NODE,"^",11),POS=$P(NODE,"^",PIECE) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.5,FLD,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	.S SUB=0 F  S SUB=$O(^IBE(357.5,FLD,2,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.5,FLD,2,SUB,0)) Q:NODE=""
	..S PIECE=$S(VERT:5,1:4) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",4),IBY=$P(NODE,"^",5) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	..S PIECE=$S(VERT:6,1:7) S POS=$P(NODE,"^",PIECE),IBX=$P(NODE,"^",7),IBY=$P(NODE,"^",6) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.5,FLD,2,SUB,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	Q
LINES(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the lines in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,LINE,PIECE,VERT,IBX,IBY
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S LINE="" F  S LINE=$O(^IBE(357.7,"C",IBBLK,LINE)) Q:'LINE  D
	.S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
	.S PIECE=$S(VERT:3,1:2)
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",3),IBX=$P(NODE,"^",2) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.7,LINE,0),"^",PIECE)=$S((POS+AMOUNT<0):0,1:POS+AMOUNT)
	Q
TXT(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the text areas in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,TXT,PIECE,VERT,IBX,IBY
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S TXT="" F  S TXT=$O(^IBE(357.8,"C",IBBLK,TXT)) Q:'TXT  D
	.S NODE=$G(^IBE(357.8,TXT,0)) Q:NODE=""
	.S PIECE=$S(VERT:4,1:3)
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",3) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.8,TXT,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	Q
	;
INRANGE(X,Y,TOP,BOTTOM,LEFT,RIGHT)	;
	;determines if (X,Y) is in the rectangle defined by TOP,BOTTOM,LEFT,RIGHT - returns 1 if yes,0 if no
	I X'=+X Q 0
	I Y'=+Y Q 0
	I (X'<LEFT),((RIGHT="")!(X'>RIGHT)),(Y'<TOP),((BOTTOM="")!(Y'>BOTTOM)) Q 1
	Q 0
BLOCKS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts blocks whose top left-hand corner is within the rectangular region defined by TOP,BOTTOM,LEFT,RIGHT
	N SUB,NODE,POS,BLOCK,PIECE,VERT,IBX,IBY
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",IBFORM,BLOCK)) Q:'BLOCK  D
	.S NODE=$G(^IBE(357.1,BLOCK,0)) Q:NODE=""
	.S PIECE=$S(VERT:4,1:5)
	.S POS=$P(NODE,"^",PIECE),IBY=$P(NODE,"^",4),IBX=$P(NODE,"^",5) I $$INRANGE(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.1,BLOCK,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	Q

IBDF10B
IBDF10B	;ALB/CJM - ENCOUNTER FORM - (shifting selection lists);3/29/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
LSTS(WAY,AMOUNT,TOP,BOTTOM,LEFT,RIGHT)	;shifts all of the selection lists in IBBLK falling within the range START->END by AMOUNT - if END="" range extends all the way out
	;NOTE- shift does not occur if column positions are not defined, i.e., if defaults are used
	;WAY="D" for down, "U" for up, "L" for left, "R" for right
	N SUB,NODE,POS,LIST,PIECE,VERT,IBX,IBY,COL
	S VERT=$S("UD"[WAY:1,1:0)
	;shifts to the left or up are negative
	S:"UL"[WAY AMOUNT=AMOUNT*(-1)
	;must make sure there is at least one column defined with the row and column specified
	S LIST="" F  S LIST=$O(^IBE(357.2,"C",IBBLK,LIST)) Q:'LIST  D
	.S COL=$O(^IBE(357.2,LIST,1,"B","")) I COL S SUB=$O(^IBE(357.2,LIST,1,"B",COL,0))
	.S:'$G(SUB) SUB=$$ADDCOL(LIST) ;if there is no column then one must be added, otherwise positioning works through defaults
	.Q:'SUB
	.S NODE=$G(^IBE(357.2,LIST,1,SUB,0))
	.I "DU"[WAY S POS=$P(NODE,"^",2) I POS="" S POS=$S(IBBLK("BOX")=1:1,1:0),POS=POS+$S(IBBLK("HDR")="":0,1:2) S $P(^IBE(357.2,LIST,1,SUB,0),"^",2)=POS
	.I "RL"[WAY S POS=$P(NODE,"^",3) I POS="" S POS=0,$P(^IBE(357.2,LIST,1,SUB,0),"^",3)=POS
	.;now loop through all of the columns, shifting the position of each
	.S SUB=0 F  S SUB=$O(^IBE(357.2,LIST,1,SUB)) Q:'SUB  D
	..S NODE=$G(^IBE(357.2,LIST,1,SUB,0)) Q:NODE=""
	..S PIECE=$S(VERT:2,1:3),POS=$P(NODE,"^",PIECE),IBY=+$P(NODE,"^",2),IBX=+$P(NODE,"^",3) I POS=+POS,$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) S $P(^IBE(357.2,LIST,1,SUB,0),"^",PIECE)=$S(POS+AMOUNT<0:0,1:POS+AMOUNT)
	Q
ADDCOL(LIST)	;adds a column to the selection list, which has none
	S ^IBE(357.2,LIST,1,0)="^357.21I^1^1",^(1,0)="1^^^"
	K DIK,DA S DIK="^IBE(357.2,"_LIST_",1,",DA(1)=LIST,DA=1 D IX1^DIK K DIK,DA
	Q 1

IBDF11
IBDF11	;ALB/CJM - ENCOUNTER FORM - (print manager setup) ;April 20,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
CLNCSUP	;edit clinic setup for print manager
	N CLINIC
	K DIR S DIR(0)="409.95,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH CLINIC?"
	D ^DIR K DIR
	Q:$D(DIRUT)!(+Y<0)
	S CLINIC=+Y
	K DA S DA=$O(^SD(409.95,"B",CLINIC,"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=CLINIC
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	K DIE,DR S DIE=409.95
	S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
	Q
DIVSUP	;edit division setup for print manager
	N DIVISION
	W !!,"You can now select reports that should be printed for the entire division",!
	K DIR S DIR(0)="409.96,.01",DIR("A")="EDIT REPORTS TO PRINT FOR WHICH DIVISION?"
	D ^DIR K DIR
	Q:$D(DIRUT)!(+Y<0)
	S DIVISION=+Y
	K DA S DA=$O(^SD(409.96,"B",DIVISION,"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.96,",DIC(0)="",X=DIVISION
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	K DIE,DR S DIE=409.96
	S DR="[IBDF PRINT MANAGER]" D ^DIE K DIE,DR,DA
	Q
EDITRPRT(HLTHSMRY)	;edit package interface,type=report
	;HLTHSMRY=1 if report type is health summary, 0 otherwise
	N REPORT,IBDELETE,IBNEW
	S HLTHSMRY=+$G(HLTHSMRY)
	W !!,"You can now edit the "_$S(HLTHSMRY:"Health Summaries",1:"reports")_" available through the print manager.",!
	D:'HLTHSMRY INFO^IBDF11A
	K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)=4,"_$S(HLTHSMRY:"$P($G(^(0)),U,10)",1:"'$P($G(^(0)),U,10)")
	S DIC("A")="Select a "_$S(HLTHSMRY:"Health Summary",1:"report")_" defined to the print manager: "
	D ^DIC K DIC
	Q:+Y<0
	S REPORT=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=REPORT
	K DIE,DR S DIE=357.6,DR=$S(HLTHSMRY:"[IBDF EDIT AVAILABLE HLTH SMRY]",1:"[IBDF EDIT AVAILABLE REPORT]"),DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.6,",DA=REPORT D ^DIK K DIK,DA
	Q
CLNCSUP2	;entry point to be called by an action protocol
	D FULL^VALM1
	D CLNCSUP
	S VALMBCK="R"
	Q
DIVSUP2	;entry point to be called by an action protocol
	D FULL^VALM1
	D DIVSUP
	S VALMBCK="R"
	Q

IBDF11A
IBDF11A	;ALB/CJM - ENCOUNTER FORM - (print manager setup - INFORMATION) ;April 20,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
INFO	;N I,LINE,DIR
	F I=0:1 S LINE=$P($T(TEXT+I),";;",2) Q:LINE=""  W !,LINE I $Y>(IOSL-4) S DIR(0)="E" D ^DIR W @IOF Q:'Y
	Q
TEXT	;;Care must be taken when defining reports to the Print Manager. Please
	;;follow these rules:
	;; 
	;;  1) Entry points must involve no user interaction.
	;;  2) The device must not be changed or closed.
	;;  3) Local variables should be the same on exit as on entry.
	;; 
	;;THESE VARIABLES ARE AVAILABLE:
	;;  
	;;  DFN = ien of patient in the PATIENT file
	;;  IBCLINIC = ien of clinic in the HOSPTIAL LOCATION file
	;;  IBAPPT   = appointment date/time in FM format
	;;  
	;;FEATURES OF INTEREST, IN THE ORDER PERFORMED BY THE PRINT MANAGER:
	;;  
	;;  AVAILABLE?: The Print Manager will not print the report unless
	;;  this is set to YES.
	;; 
	;;  REQUIRED VARIABLES: You can define a list of variables that should
	;;  be defined. The Print Manager won't call the entry point unless
	;;  they are defined.
	;; 
	;;  PROTECTED VARIABLES: You can define a list of variables (without 
	;;  subscripts) that should be NEWed.
	;; 
	;;  ENTRY ACTION: Mumps code that should be Xecuted before calling
	;;  the entry point.
	;; 
	;;  EXIT ACTION: Mumps code that should be Xecuted after calling
	;;  the  entry point.
	;; 
	;;EXAMPLE: Supposing the entry point kills DFN. You could do this:
	;;  
	;;   REQUIRED VARIABLE: DFN
	;;   PROTECTED VARIABLE: IBDFN
	;;   ENTRY ACTION: S IBDFN=DFN
	;;   EXIT ACTION: S DFN=IBDFN
	;;  
	;;

IBDF12
IBDF12	;ALB/CJM - ENCOUNTER FORM - ENTRY FOR EDITING TOOL KIT FORMS ;JUN 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;*** NOTE:
	;IBTKFORM=1 while editing a tk form
	;IBTKBLK=0 while editing blocks on a tk form - because they are not tk blocks 
FORMLIST	;
	N FORMLIST,IBTKFORM,IBTKBLK,IBLISTPR
	S IBTKFORM=1,IBTKBLK=0
	N IBFASTXT ;set to 1 for fast exit from system
	S IBFASTXT=0
	S IBLISTPR=1 ;so that all routines know that they are being invoked within the list processor
	K XQORS,VALMEVL
	S IBCLINIC=""
	D EN^VALM("IBDF TOOL KIT FORMS")
	Q
ONENTRY	;
	S FORMLIST="^TMP(""IB"",$J,""FORM LIST"")"
	D IDXFORMS
	Q
ONEXIT	;
	D KILL^%ZISS
	K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,FORMIDX,VALMBCK,X,Y,I,DA,D0
	Q
	;
IDXFORMS	;build an array of forms used by IBCLINIC for the list processor
	N FORM,NODE,ID
	K @FORMLIST
	S (VALMCNT,ID)=0
	S FORM=0 F  S FORM=$O(^IBE(357,"C",1,FORM)) Q:'FORM  S NODE=$G(^IBE(357,FORM,0)) I +$P(NODE,"^",7),$P(NODE,"^")'="TOOL KIT",$P(NODE,"^")'="GARBAGE" D ENTRY
	Q
ENTRY	;adds an entry to the array
	S ID=ID+1,VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$J(ID,3)_"  "_$$PADRIGHT^IBDFU($P(NODE,"^",1),30)_"  "_$E($P(NODE,"^",3),1,80)
	S @FORMLIST@("IDX",VALMCNT,ID)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)="",@FORMLIST@("IDX",VALMCNT,ID)=FORM_"^"
	Q
HDR	;
	S VALMHDR(1)="TOOL KIT FORMS"
	Q
DELFORM	;allows user to select a form, then deletes it
	N SEL,FORM
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY("")),FORM=""
	I SEL S FORM=+$G(@VALMAR@("IDX",2*SEL,SEL))
	I FORM D DELETE^IBDFU2C(FORM,357,1)
	S VALMBCK="R"
	D IDXFORMS
	Q

IBDF13
IBDF13	;ALB/CJM - ENCOUNTER FORM - EDITING TOOLKIT BLKS ; 24-JUN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
LIST	;displays list of tool kit blocks, then allows editng
	N IBFORM,IBTKFORM,IBTKBLK,IBFASTXT,IBCOMP,IBCRT,IBRASTER,IBLISTPR,IBGRPHCS,FORMIDX,IBFORMW,IBFORMHT,IBPAGES,IBPGHT,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBBLK,BLKLIST,BLKIDX,D0,DA
	S (IBTKFORM,IBFASTXT,IBRASTER,IBGRPHCS,IBCOMP,IBBLK)=0,(IBLISTPR,IBCRT,IBTKBLK)=1
	S IBFORMHT=3000,IBFORMW=500,IBPGHT=1000
	D NOGRPHCS^IBDFU5
	K XQORS,VALMEVL
	S IBFORM=$$TKFORM^IBDFU2C
	D EN^VALM("IBDF EDIT TOOL KIT BLOCKS") ;list processor displays list of tool kit blocks
	Q
	;
SELECT()	;allows the user to select from the displayed list of TK blocks
	N CHOICE,IBBLK
	S IBBLK=""
	D EN^VALM2($G(XQORNOD(0)),"S")
	S CHOICE=$O(VALMY("")) S:CHOICE IBBLK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
	Q IBBLK
EDITBLK	;allows user to select a blk, then displays it for edit
	;allows user to discard or save changes to the block
	;
	;If IBBLK and IBBLK2 are used to point to two copies of the block, one in the workspace and the other on the form
	;the copy on the form is not edited, the copy in the workspace is
	N IBBLK,IBBLK2,IBTKODR,IBJUNK,IFSAVE,IBMEMARY
	S VALMBCK="R"
	S IBBLK2=""
	S IBBLK=$$SELECT
	I IBBLK D
	.S (IBBLK2,IBTKODR,IBJUNK)=""
	.D COPYBLK^IBDF5B(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
	D:IBBLK2 EN^VALM("IBDF FORM BLOCK EDIT")
	I IBBLK,IBBLK2 D
	.S IFSAVE=$$ASKSAVE^IBDF5B
	.I IFSAVE D SAVECOPY^IBDF5B(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
	.I 'IFSAVE D DLTCOPY^IBDF5B(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
	D:'$G(IBFASTXT) IDXBLKS^IBDF7
	Q
DLTBLOCK	;allows user to select a blk, then deletes it
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$SELECT
	I IBBLK Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))  D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1),IDXBLKS^IBDF7
	Q
CHGORDER	;allows user to select a blk, then change it's order in the tool kit
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$SELECT
	I IBBLK K DIE,DA S DIE=357.1,DA=IBBLK,DR=".14R" D ^DIE K DIE,DA,DR,DIC
	D IDXBLKS^IBDF7
	Q
NEWBLK	;creates a new tool kit block
	N IBBLK
	S VALMBCK="R"
	S IBBLK=$$CREATE^IBDF5C()
	D:IBBLK IDXBLKS^IBDF7
	Q
COPYBLK	;allows the user to select a block to copy
	N IBBLK,CHOICE,NEWBLK
	S VALMBCK="R"
	D FULL^VALM1
	K DIR S DIR(0)="SO^1:ON THE LIST OF TOOL KIT BLOCKS;2:ON A TOOL KIT FORM;3:ON A FORM NOT IN THE TOOL KIT"
	S DIR("A")="WHERE IS THE BLOCK THAT YOU WANT COPIED?"
	D ^DIR K DIR
	Q:(Y=-1)!$D(DIRUT)
	S CHOICE=Y,IBBLK=""
	D:CHOICE=1 REFRESH^VALM,RESET^VALM4:VALMCC
	S:CHOICE=1 IBBLK=$$SELECT
	S:CHOICE=2 IBBLK=$$SELECT2(1)
	S:CHOICE=3 IBBLK=$$SELECT2(0)
	I IBBLK S NEWBLK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,0,0,$$TKORDER()) I NEWBLK D
	.K DIE,DA S DIE=357.1,DA=NEWBLK,DR=".01;.13R;.14R" D ^DIE
	.I '$G(DA) D DLTCNTNT^IBDFU3(NEWBLK,357.1)
	.K DIE,DA,DR,DIC
	.D IDXBLKS^IBDF7
	S VALMBCK="R"
	Q
TKORDER()	;returns an unused number for the list of toolkit blocks
	N NUMBER
	F NUMBER=1:1:10000 Q:'$D(^IBE(357.1,"D",NUMBER))
	Q NUMBER
SELECT2(TK)	;allows the user to select a form, then a block from it
	;TK=0 if form is not to be chosen from the TK
	;TK=1 if the form is to be chosen from the TK
	;TK="" means ask the user whether or not the form is in the TK
	N IBFORM,IBBLK
	S IBBLK=""
	S IBFORM=$$SLCTFORM^IBDFU4($G(TK))
	I IBFORM D
	.W !!,"NOW CHOOSE THE BLOCK TO COPY!",!
	.S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
	Q IBBLK

IBDF14
IBDF14	;ALB/CJM - ENCOUNTER FORM (reports on clinic setup);JUL 20,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
SETUPS	;prints for each clinic setup the forms/reports defined to it through the print manager
	N CLINICS,CLINIC,SETUP,NODE,COND,INTRFACE,PAGE,QUIT,CRT,BOT,NOW,X,Y,FORM,REPORT,NAME
	S QUIT=0,PAGE=1
	D DEVICE G:QUIT EXIT
	S CRT=0,BOT=6
	S:$E(IOST,1,2)="C-" CRT=1,BOT=2
	W:CRT @IOF
	D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
	S CLINICS="^TMP($J,""CLINICS"")"
	K @CLINICS
	D HEADER
	D CLINICS
	S NAME="" F  S NAME=$O(@CLINICS@(NAME)) Q:NAME=""  S NODE=$G(@CLINICS@(NAME)),CLINIC=+NODE,SETUP=$P(NODE,"^",2) D  Q:QUIT
	.Q:'SETUP
	.W !,"CLINIC: ",NAME
	.D FORMS Q:QUIT
	.D REPORTS Q:QUIT
	.D EXCLUDES Q:QUIT
	.W !
	I CRT,'QUIT D PAUSE
	K @CLINICS
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC,KILL^%ZISS
	Q
CLINICS	;get a list of the clinics with setups defined
	;get the list of clinics with setups defined
	S CLINIC="" F  S CLINIC=$O(^SD(409.95,"B",CLINIC)) Q:'CLINIC  S SETUP=$O(^SD(409.95,"B",CLINIC,"")),NAME=$P($G(^SC(CLINIC,0)),"^") S:(SETUP&(NAME]"")) @CLINICS@(NAME)=CLINIC_"^"_SETUP
	Q
FORMS	;prints the clinic's encounter forms to the report
	S NODE=$G(^SD(409.95,SETUP,0))
	I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	S FORM=$P(NODE,"^",2) I FORM W !,?5,"BASIC DEFAULT FORM:  ..........................",$P($G(^IBE(357,FORM,0)),"^")
	S FORM=$P(NODE,"^",5) I FORM W !,?5,"FORM WITH NO PRE-PRINTED PATIENT DATA:  .......",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	S FORM=$P(NODE,"^",3) I FORM W !,?5,"SUPPLEMENTAL FORM - PATIENT WITH PRIOR VISITS: ",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	S FORM=$P(NODE,"^",4) I FORM W !,?5,"SUPPLEMENTAL FORM - FIRST TIME PATIENT:  ......",$P($G(^IBE(357,FORM,0)),"^")
	I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	S FORM=$P(NODE,"^",6) I FORM W !,?5,"SUPPLEMENTAL FORM - ALL PATIENTS:  ............",$P($G(^IBE(357,FORM,0)),"^")
	S FORM=$P(NODE,"^",7) I FORM W !,?5,"RESERVED FOR FUTURE USE:  .....................",$P($G(^IBE(357,FORM,0)),"^")
	Q
REPORTS	;prints the clinic's reports to the report
	Q:'$O(^SD(409.95,SETUP,1,0))
	I ($Y>(IOSL-(BOT+2))) D HEADER Q:QUIT
	W !!,?5,"REPORTS",?50,"PRINT CONDITION",!,?5,"=======",?50,"==============="
	S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,1,REPORT)) Q:'REPORT  D
	.I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	.S NODE=$G(^SD(409.95,SETUP,1,REPORT,0))
	.S INTRFACE=$P(NODE,"^"),COND=$P(NODE,"^",2)
	.I INTRFACE,COND S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^"),COND=$P($G(^IBE(357.92,COND,0)),"^") W:INTRFACE]"" !,?5,INTRFACE,?50,COND
	Q
EXCLUDES	;prints the division reports excluded from clinic to the report
	Q:'$O(^SD(409.95,SETUP,2,0))
	I ($Y>(IOSL-(BOT+2))) D HEADER Q:QUIT
	W !!,?5,"EXCLUDED REPORTS",!,?5,"================"
	S REPORT=0 F  S REPORT=$O(^SD(409.95,SETUP,2,REPORT)) Q:'REPORT  D
	.I ($Y>(IOSL-BOT)) D HEADER Q:QUIT
	.S NODE=$G(^SD(409.95,SETUP,2,REPORT,0))
	.S INTRFACE=$P(NODE,"^")
	.I INTRFACE S INTRFACE=$P($G(^IBE(357.6,INTRFACE,0)),"^") W:INTRFACE]"" !,?5,INTRFACE
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	S %ZIS="MQ" D ^%ZIS I POP S QUIT=1 Q
	I $D(IO("Q")) S ZTRTN="SETUPS^IBDF14",ZTDESC="REPORT OF ENCOUNTER FORMS USED BY CLINICS" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S QUIT=1 Q
	U IO
	Q
HEADER	; writes the report header
	I CRT,$Y>1,PAGE>1 D  Q:QUIT
	. F  Q:$Y>(IOSL-BOT)  W !
	.D PAUSE
	I PAGE>1 W @IOF
	W !,"CLINIC SETUP REPORT",?55,NOW,"   PAGE ",PAGE,!
	S PAGE=PAGE+1
	Q
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	Q

IBDF15
IBDF15	;ALB/CJM - ENCOUNTER FORM (reports on form use);JUL 20,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
FORMUSE	;prints for each encounter form the clinics using it
	N FORM,CLINICS,CLINIC,NODE,PAGE,QUIT,CRT,BOT,NOW,X,Y,NAME
	S QUIT=0,PAGE=1
	D DEVICE G:QUIT EXIT
	S CRT=0,BOT=6
	S:$E(IOST,1,2)="C-" CRT=1,BOT=2
	W:CRT @IOF
	D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
	S CLINICS="^TMP($J,""CLINICS"")"
	K @CLINICS
	D HEADER
	S NAME="" F  S NAME=$O(^IBE(357,"B",NAME)) Q:NAME=""  S FORM=$O(^IBE(357,"B",NAME,0)) Q:'FORM  D  Q:QUIT
	.S NODE=$G(^IBE(357,FORM,0))
	.Q:$P(NODE,"^",7)  ;exclude toolkit forms from the report
	.I $Y>(IOSL-BOT) D HEADER Q:QUIT
	.W !,"ENCOUNTER FORM: ",NAME,!
	.D CLINICS^IBDFU4(FORM,CLINICS)
	.D LIST Q:QUIT
	I CRT,'QUIT D PAUSE
	K @CLINICS
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC,KILL^%ZISS
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	S %ZIS="MQ" D ^%ZIS I POP S QUIT=1 Q
	I $D(IO("Q")) S ZTRTN="FORMUSE^IBDF15",ZTDESC="REPORT OF ENCOUNTER FORMS USED BY CLINICS" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S QUIT=1 Q
	U IO
	Q
HEADER	; writes the report header
	I CRT,$Y>1,PAGE>1 D  Q:QUIT
	. F  Q:$Y>(IOSL-BOT)  W !
	.D PAUSE
	I PAGE>1 W @IOF
	W !,"LIST OF ENCOUNTER FORMS AND THEIR USE BY CLINICS",?55,NOW,"   PAGE ",PAGE,!
	S PAGE=PAGE+1
	Q
PAUSE	;
	K DIR S DIR(0)="E" D ^DIR K DIR S QUIT=$S(+Y:0,1:1)
	Q
LIST	;lists the clinics using FORM
	N CLINIC,COUNT,DIR
	I $Y>(IOSL-BOT) D HEADER
	W !,?5,"CLINICS:"
	I '@CLINICS@(0) W ?15,"** NONE **",!
	S CLINIC=0
	F  S CLINIC=$O(@CLINICS@(CLINIC)) Q:CLINIC=""  D
	.I $Y>(IOSL-BOT) D HEADER Q:QUIT
	.W ?15,CLINIC,!
	Q

IBDF16
IBDF16	;ALB/CJM - ENCOUNTER FORM - (edit Package Interfaces, Marking Areas) ;Jul 23,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EDIT	;allows the user to create/edit/delete Package Interaces of type 
	;OUTPUT or SELECTION
	;does not allow Package Interfaces that are part of the tool kit
	N IBTYPE S IBTYPE=""
	W @IOF
	D WARNING,PAUSE^IBDFU5
	W @IOF
	D TYPE
	D:IBTYPE INTRFACE
	Q
TYPE	;asks the user what type of interface he wants to edit
	W !!,"OUTPUT routines are used to obtain data from other packages that will be",!,"displayed to DATA FIELDS."
	W !!,"SELECTION routines are used to obtain data from other packages that will be",!,"displayed to SELECTION LISTS."
	K DIR S DIR(0)="S^1:OUTPUT;2:SELECTION;"
	S DIR("A")="SELECT THE TYPE OF PACKAGE INTERFACE TO EDIT"
	S DIR("B")=1
	D ^DIR K DIR
	Q:$D(DIRUT)
	Q:'Y
	S IBTYPE=Y+1
	Q
INTRFACE	;edit package interface
	;IBTYPE=3 if type=selection routine
	;IBTYPE=2 if type=output routine
	N REPORT,IBDELETE,IBNEW,INTRFACE,IBACTION
	I $G(IBTYPE)'=2,$G(IBTYPE)'=3 Q
	S IBDELETE=1
	K DIC S DIC=357.6,DIC(0)="AELMQ",DIC("S")="I $P($G(^(0)),U,6)="_IBTYPE_",'$P($G(^(0)),U,12)"
	S D="E^D^B"
	S DIC("A")="Select a PACKAGE INTERFACE: "
	D MIX^DIC1 K DIC,D,DA
	Q:+Y<0
	S INTRFACE=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=INTRFACE
	K DIE,DR S DIE=357.6,DR="[IBDF EDIT OUTPUT/SELECTION RTN]",DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.6,",DA=INTRFACE D ^DIK K DIK,DA
	Q
LOOKUP	;additional help for the USER LOOKUP field
	W !!,"You can enter a list of words with which to index this interface. You will",!,"then be able to look up this interface by entering any word on the list."
	W !,"Each word should be at least 3 characters long, and words must be separated",!,"by a space.",!
	Q
WARNING	;warns the user to lookup in the technical doc how to write Package Interfaces
	W !!,"You can write your own Package Interfaces to obtain data not available"
	W !,"through the Tool Kit.  Before you do so, however, please consult the technical",!,"documentation for the guidelines that must be followed.  In particular, you"
	W !,"must know where the data should be placed and what format must be used.",!
	Q
MARKING	;allows the user to create/edit/delete marking areas not in the tool kit
	N MARK
	W @IOF,!!!!!
	W "You can create your own MARKING AREAS to supplement those that come with the",!,"tool kit. Marking areas are the areas on a selection list that the user",!,"marks to indicate selections from the list.",!!!!!
	D PAUSE^IBDFU5
	W @IOF
	K DIC S DIC=357.91,DIC(0)="AELMQ",DIC("S")="I '$P($G(^(0)),U,3)"
	;S DIC("A")="Select "_$S(IBTYPE=2:"an output routine",3:"a selection routine")_": "
	D ^DIC K DIC,D,DA
	Q:+Y<0
	S MARK=+Y,IBNEW=$P(Y,"^",3)
	S IBDELETE=$S(IBNEW:1,1:0)
	S DA=MARK
	K DIE,DR S DIE=357.91,DR="[IBDF EDIT MARKING AREA]",DIE("NO^")="BACKOUTOK"
	D ^DIE K DIE,DR,DA
	I IBDELETE K DA S DIK="^IBE(357.91,",DA=MARK D ^DIK K DIK,DA
	I IBNEW,'IBDELETE W !!,"New marking area created!"
	Q

IBDF17
IBDF17	;A;B/CJM - ENCOUNTER FORM - COPY A CPT CHECK-OFF SHEET INTO A FORM ;24SEP93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;Allows the user to choose a form to copy to, and a CPT check-off sheet
	;to copy from, then creates a new block and copies the CPT codes to it
	;
	N FORM,LIST,BLOCK,SHEET
	W !!,"Select the encounter form you want to copy CPT codes to!",!
	S FORM=$$SLCTFORM^IBDFU4(0)
	Q:'FORM
	D FIND(FORM,.BLOCK,.LIST)
	I 'BLOCK W !,"There is no selection list for CPT codes to copy to!" D PAUSE^IBDFU5 Q
	;
	S SHEET=$$SLCTSHT
	Q:'SHEET
	;
	;must delete the compiled version of the block, since it will be changed
	K ^IBE(357.1,BLOCK,"S"),^("V")
	;
	D COPY(SHEET,LIST)
	Q
	;
COPY(SHEET,LIST)	;copies the CPT codes/headers from the sheet to the list
	;
	N HDR,TYPE,NODE
	;
	;find the subcolumns in LIST to write to
	D SUBCOLS(.LIST) I 'LIST("CODESC")!'LIST("TEXTSC") W !,"The CPT selection list does not contain a subcolumn for the CPT code or text!" D PAUSE^IBDFU5 Q
	;
	S HDR="" F  S HDR=$O(^IBE(350.71,"G",SHEET,HDR)) Q:'HDR  S NODE=$G(^IBE(350.71,HDR,0)),TYPE=$P(NODE,"^",3)  D:TYPE="S" COPYGRP(HDR,.NODE,.LIST)
	Q
	;
COPYGRP(HDR,NODE,LIST)	;copies the header contained in NODE to the selection list (LIST)
	;
	N HEADER,ORDER,GROUP,PROC
	S HEADER=$P(NODE,"^") Q:HEADER=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
	;
	;copy the group
	K DIC,DD,D0,DINUM S DIC="^IBE(357.4,",X=HEADER,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S GROUP=$S(+Y<0:"",1:+Y)
	Q:'GROUP
	S ^IBE(357.4,GROUP,0)=HEADER_"^"_ORDER_"^"_LIST
	K DIK,DA S DIK="^IBE(357.4,",DA=GROUP
	D IX1^DIK K DIK,DA
	;
	;now find all the group's procedures and copy them
	S PROC=0 F  S PROC=$O(^IBE(350.71,"S",HDR,PROC)) Q:'PROC  D:PROC'=HDR COPYPROC(PROC,.LIST,GROUP)
	;
	W "." ;just to let the use know it's doing something
	Q
	;
COPYPROC(PROC,LIST,GROUP)	;copies the procedure contained to the selection list and group
	;
	N NODE,TEXT,ORDER,CODE,SLCTN
	S NODE=$G(^IBE(350.71,PROC,0))
	;
	;find the CPT code
	S CODE=$P(NODE,"^",6)
	Q:'CODE
	S CODE=$P($G(^SD(409.71,CODE,0)),"^")
	Q:'CODE
	S CODE=$P($G(^ICPT(CODE,0)),"^")
	Q:'CODE
	;
	;find the text and order for the proc on the sheet
	S TEXT=$P(NODE,"^") Q:TEXT=""  S ORDER=$P(NODE,"^",2) Q:'ORDER
	;
	;create the selection
	K DIC,DD,D0,DINUM S DIC="^IBE(357.3,",X=CODE,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S SLCTN=$S(+Y<0:"",1:+Y)
	Q:'SLCTN
	;
	;fill in the 0 node
	S ^IBE(357.3,SLCTN,0)=CODE_"^^"_LIST_"^"_GROUP_"^"_ORDER_"^"
	;
	;fill in the SUBCOLUM VALUE multiple with the subcolumn values
	S ^IBE(357.3,SLCTN,1,0)="^357.31IA^2^2"
	S ^IBE(357.3,SLCTN,1,2,0)=LIST("TEXTSC")_"^"_TEXT
	S ^IBE(357.3,SLCTN,1,1,0)=LIST("CODESC")_"^"_CODE
	K DIK,DA S DIK="^IBE(357.3,",DA=SLCTN
	D IX1^DIK K DIK,DA
	Q
	;
SUBCOLS(LIST)	;finds the column containing the CPT code and the text description
	;LIST is passed by reference
	S (LIST("CODESC"),LIST("TEXTSC"))=""
	;
	N SC,PIECE,NODE S SC=0
	;
	;piece 1 of the data returned by the package interface is the code,piece 2 is the description
	F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) S:PIECE=1 LIST("CODESC")=$P(NODE,"^") S:PIECE=2 LIST("TEXTSC")=$P(NODE,"^") Q:LIST("CODESC")&LIST("TEXTSC")
	Q
	;
SLCTSHT()	;allows the user to select a CPT check-off sheet
	K DIC S DIC=350.7,DIC(0)="AEMQ" D ^DIC K DIC
	I $D(DINUM)!$D(DUOUT)!(Y<0) Q ""
	Q +Y
FIND(FORM,BLK,LIST)	;finds the block & list for CPT codes
	N INTRFACE,BLOCKS,I
	S (BLK,LIST,BLOCKS,I)=0
	;
	;find the package interface for selecting CPT codes
	S INTRFACE=$O(^IBE(357.6,"B","DG SELECT CPT PROCEDURE CODES",0))
	Q:'INTRFACE
	;
	;find all of the blocks with CPT lists
	S BLK="" F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D
	.S LIST="" F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S BLOCKS=BLOCKS+1,I=I+1,BLOCKS(I)=BLK_"^"_LIST
	;
	;if count of blocks <2 there is no need to ask the user to choose
	I BLOCKS<2 S BLK=+$P($G(BLOCKS(1)),"^"),LIST=$P($G(BLOCKS(1)),"^",2) Q
	;
	;if count>1 the user must choose the block from the array BLOCKS
	S (BLK,LIST)=0
	S I=$$CHOOSE(.BLOCKS)
	S BLK=+$G(BLOCKS(+I)),LIST=+$P($G(BLOCKS(+I)),"^",2)
	Q
	;
CHOOSE(BLOCKS)	;ask the user to choose
	;BLOCKS is an array passed by reference
	;
	N I
ASK	W ! S I=0 F  S I=$O(BLOCKS(I)) Q:'I  W !,I,"  ",$P($G(^IBE(357.1,+BLOCKS(I),0)),"^")
	W !!,"Select a block to put the CPT codes: (1-",BLOCKS,"): "
	R I:DTIME
	Q:'$T 0
	Q:'$G(I) 0
	I '$D(BLOCKS(I)) G ASK
	Q I

IBDF18
IBDF18	;A;B/CJM - ENCOUNTER FORM - utilities for Problem List ;15OCT93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
GETFORM()	;allows the user to select an encounter form
	;returns <the form ien, or 0 if none selected>^<form name>
	N FORM,LIST,QUIT,ANS
	S (LIST,QUIT)=0 F  D  Q:QUIT
	.S FORM=$$SLCTFORM^IBDFU4(0)
	.I 'FORM S QUIT=1 Q
	.D FIND(FORM,0,.LIST,0)
	.I LIST S QUIT=1 Q
	.W !,"The form you selected doesn't contain a Clinic Common Problem List!",!,"Do you want to select another form? "
	.R ANS:DTIME
	.S:'$T!(ANS="")!(ANS["^")!(ANS["N")!(ANS["n") QUIT=1,FORM=0
	Q FORM_"^"_$P($G(^IBE(357,FORM,0)),"^")
	;
	;
COPYFORM(FORM,ARY)	;creates a list of problem groups and problems found in FORM on the list of clinic common problems
	;returns the length of the returned list
	;FORM is the ien of an encounter form
	;@ARY is the array where the list should be placed
	;each problem will have the format 'problem ien^problem text'
	;each group will have the format '^header text to display (could be null)'
	;following each group will be the problems on it
	;
	;the ruturned list will look like this:
	;@ARY@(1)=^group header
	;@ARY@(2)=problem ien^problem text
	;@ARY@(3)=problem ien^problem text
	;
	;
	;@ARY@(k)=^next group header
	;@ARY@(k+1)=problem ien^problem text
	;....
	;
	Q:'$G(FORM) 0
	Q:'$L($G(ARY)) 0
	N BLOCK,LIST,INTRFACE,COUNT
	S (BLOCK,LIST,INTRFACE,COUNT)=0
	F  D FIND(FORM,.BLOCK,.LIST,.INTRFACE) Q:'LIST  D COPYLIST(LIST,ARY,.COUNT)
	Q COUNT
	;
COPYLIST(LIST,ARY,COUNT)	;copies the entries from LIST to @ARY, starting subscript at COUNT+1
	;
	N SLCTN,SUBCOL,TEXT,IEN,NODE,TSUBCOL,NOTREAL,NODE,GROUP,ORDER,HDR
	;
	D SUBCOL(LIST,.TSUBCOL) ;find the subcolumn containing the text
	;don't bother returning list of problems if there is no subcolumn containing the problem text
	Q:'$G(TSUBCOL)
	;
	S GROUP=0 F  S GROUP=$O(^IBE(357.3,"APO",LIST,GROUP)) Q:'GROUP  D
	.S HDR=$P($G(^IBE(357.4,GROUP,0)),"^") I HDR="BLANK" S HDR=""
	.S COUNT=COUNT+1,@ARY@(COUNT)="^"_HDR
	.S ORDER="" F  S ORDER=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER)) Q:ORDER=""  S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,ORDER,SLCTN)) Q:'SLCTN  D
	..S NODE=$G(^IBE(357.3,SLCTN,0)),IEN=$P(NODE,"^"),NOTREAL=$P(NODE,"^",2)
	..Q:'IEN!(NOTREAL)
	..S SUBCOL=$O(^IBE(357.3,SLCTN,1,"B",TSUBCOL,0)) Q:'SUBCOL  S NODE=$G(^IBE(357.3,SLCTN,1,SUBCOL,0)) S:$P(NODE,"^")=TSUBCOL TEXT=$P(NODE,"^",2) I $L(TEXT) S COUNT=COUNT+1,@ARY@(COUNT)=IEN_"^"_TEXT Q
	Q
	;
	;
SUBCOL(LIST,TSUBCOL)	;finds the subcolumn containing the text
	;TSUBCOL should be passed by reference - used to return the subcolumn
	;LIST is the selection list to search
	S TSUBCOL=""
	;
	N SC,PIECE,NODE S SC=0
	;
	;refering to the data returned by the package interface, piece 2 is the description
	F  S SC=$O(^IBE(357.2,LIST,2,SC)) Q:'SC  S NODE=$G(^IBE(357.2,LIST,2,SC,0)),PIECE=$P(NODE,"^",5) I PIECE=2 S TSUBCOL=$P(NODE,"^") Q
	Q
	;
FIND(FORM,BLK,LIST,INTRFACE)	;finds the block & list containing the Clinic Common Problem List
	N INTRFACE,QUIT
	S BLK=+$G(BLK),LIST=+$G(LIST),INTRFACE=+$G(INTRFACE)
	;
	;if not already found,find the package interface for selecting PROBLEMS
	I 'INTRFACE S INTRFACE=$O(^IBE(357.6,"B","GMP SELECT CLINIC COMMON PROBL",0))
	I 'INTRFACE S (BLK,LIST)=0 QUIT
	;
	I BLK D
	.F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE Q
	I BLK,LIST QUIT
	S QUIT=0
	F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  D  Q:QUIT
	.S LIST=0 F  S LIST=$O(^IBE(357.2,"C",BLK,LIST)) Q:'LIST  I $P($G(^IBE(357.2,LIST,0)),"^",11)=INTRFACE S QUIT=1 Q
	I 'BLK!('LIST) S (BLK,LIST)=0
	Q

IBDF19
IBDF19	;ALB/CJM - ENCOUNTER FORM (compile forms,delete garbage);NOV 22,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
GARBAGE	;delete unused blocks (belonging to GARBAGE form)
	N IBJUNK,BLK,CR,FORM
	;
	;first delete unused workcopy blocks
	;find the form=GARBAGE, used as a work area
	S IBJUNK=+$O(^IBE(357,"B","GARBAGE",""))
	;clean up blocks not being used
	S BLK=0 F  S BLK=$O(^IBE(357.1,"C",IBJUNK,BLK)) Q:'BLK  L +^IBE(357.1,BLK):1 I $T D DLTBLK^IBDFU3(BLK,IBJUNK,357.1) L -^IBE(357.1,BLK)
	W !,"Blocks not belonging to any form have been deleted"
	;
	;delete cross-references for compilied forms if the forms have been deleted
	F CR="AT","AC","AG","AU" S FORM=0 F  S FORM=$O(^IBE(357,CR,FORM)) Q:'FORM  I '$D(^IBE(357,FORM)) K ^IBE(357,CR,FORM)
	W !,"Extraneous cross-references on non-existant forms have been deleted"
	Q
	;
	;
COMPILE(IBFORM)	;compiles FORM
	;
	;lock the form while compiling
	Q:'$$LOCKFORM^IBDFU7(IBFORM)
	;compile it only if not already compiled - it could have been compiled by another process while the form was being locked
	I '$P(^IBE(357,IBFORM,0),"^",5) D
	.N IBARY,IBUNDRLN,IBGARY,IBCTRLS,IBCRT,IBRASTER,IBGRPHCS,IBLISTPR,IBCOMP,IBFORMW,IBFORMHT,DFN,IBCLINIC,IBAPPT
	.S (IBRASTER,IBGRPHCS,IBFIRST)=1
	.S (IBCRT,IBLISTPR,IBCOMP,IBAPPT,IBCLINIC,DFN)=0
	.D PAGE^IBDFU1(IBFORM,.IBFORMW,.IBFORMHT)
	.S IBARY="^IBE(357,""AT"",IBFORM)"
	.S IBCTRLS="^IBE(357,""AC"",IBFORM)"
	.S IBUNDRLN="^IBE(357,""AU"",IBFORM)"
	.S IBGARY="^IBE(357,""AG"",IBFORM)"
	.K @IBARY,@IBCTRLS,@IBUNDRLN,@IBGARY,^TMP("IB",$J,"INTERFACES")
	.S $P(^IBE(357,IBFORM,0),"^",5)=0
	.;
	.D DRWBLKS^IBDF2A
	.S $P(^IBE(357,IBFORM,0),"^",5)=1
	.K ^TMP("IB",$J,"INTERFACES"),X,Y,I
	D FREEFORM^IBDFU7(IBFORM)
	Q
	;
ASKCMPL(IBFORM)	;ask if the form should be compiled or uncompiled
	Q:'$G(IBFORM)
	I $P($G(^IBE(357,IBFORM,0)),"^",5) D  Q
	.W !,"The form is currently compiled. Should it be recompiled?"
	.K DIR S DIR(0)="Y",DIR("B")="YES"
	.D ^DIR
	.Q:$D(DUOUT)
	.I Y=1 S $P(^IBE(357,IBFORM,0),"^",5)=0
	E  S $P(^IBE(357,IBFORM,0),"^",5)=0
	Q
CMPLACTN	;action for compiling a form listed on the screen
	N SEL,IBFORM
	S IBFORM=0
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY(""))
	I SEL S IBFORM=+$G(@VALMAR@("IDX",2*SEL,SEL))
	I IBFORM D ASKCMPL(IBFORM)
	S VALMBCK="R"
	Q

IBDF1A
IBDF1A	;ALB/CJM - ENCOUNTER FORM (prints for a single patient);NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
MAIN(IBCOMP)	;prints encounter forms, either with patient data for a patient 
	;with no appointment (in which case it uses time of printing as the appointment time) or without patient data (only if a form is defined for the clinic for such use)
	;$G(IBCOMP) if the form should be printed with data, 0 if a blank form for use without patient data should be printed
	N IBF,FORMS,NODE,IBPM
	;FORMS = list of forms in form^form^... format
	;IBI is a counter used to parse FORMS
	;IBPM=1 if forms defined in print manager should be printed
	;
	S IBCOMP=+$G(IBCOMP)
	K ^TMP("IB",$J),^TMP("IBDF",$J)
	S (IBPM,IBQUIT)=0,DFN=""
	D CLINIC G:IBQUIT EXIT
	I IBCOMP D  G:IBQUIT EXIT
	.D PATIENT Q:IBQUIT
	.D NOW
	.D WHCHFORM
	I 'IBCOMP D FORM G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
QUEUED	F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D FORM^IBDF2A
APPT	;print everything for single appt
	;input - DFN,IBAPPT,IBCLINIC
	I IBCOMP,IBPM D PRNTOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@"
	E  D ^%ZISC
	K IBQUIT,IBCOMP,IBRASTER,IBFORM,IBCLINIC,DFN,IBAPPT,X,Y,I,^TMP("IB",$J),^TMP("IBDF",$J)
	Q
FORM	;gets the type of form to print from the clinic setup - sets FORMS
	N SETUP
	S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) I 'SETUP D ERROR S IBQUIT=1 Q
	S SETUP=$G(^SD(409.95,SETUP,0)) I SETUP="" D ERROR S IBQUIT=1 Q
	S FORMS=$P(SETUP,"^",5) I 'FORMS D ERROR S IBQUIT=1 Q
	Q
ERROR	;prints a message
	W !!,"There is no encounter form defined for this clinic that should print",!,"without patient data!",!
	Q
ERROR2	;prints a message
	W !!,"There are no forms defined to print for this clinic!",!
	Q
PATIENT	;gets the patient to print the form for
	S DIR(0)="P^2:EM",DIR("A")="PATIENT NAME" D ^DIR K DIR I $D(DIRUT)!(+Y<1) S IBQUIT=1 Q
	S DFN=+Y
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	W !,*7,"** Encounter Forms require a page size of 80 lines and 132 columns. **"
	K %IS,%ZIS,IOP S %ZIS="MQ0" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="QUEUED^IBDF1A",(ZTSAVE("IB*"),ZTSAVE("DFN"),ZTSAVE("FORMS"))="",ZTDESC="ENCOUNTER FORM" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
CLINIC	;asks the user for the clinic
	K DIR S DIR(0)="409.95,.01O",DIR("A")="PRINT AN ENCOUNTER FORM FOR WHICH CLINIC? " D ^DIR K DIR I $D(DTOUT)!$D(DUOUT)!(+Y<0) S IBQUIT=1 Q
	S IBCLINIC=+Y
	Q
NOW	;sets IBAPPT to NOW
	N %,%H,%I,X
	D NOW^%DTC
	S IBAPPT=%
	Q
WHCHFORM	;
	I 'IBCLINIC D ASKFORM Q
	K DIR S DIR(0)="S^1:SELECT ANY FORM;2:USE CLINIC SETUP;",DIR("A")="Do you want to Select a form or Use the form(s) defined by the clinic setup?" D ^DIR K DIR I $D(DIRUT)!(+Y<0) S IBQUIT=1 Q
	S IBPM=0,FORMS=""
	I Y=1 D  Q:IBQUIT
	.D ASKFORM
	E  I Y=2 S FORMS=$$FORMS^IBDF1B2(IBCLINIC,DFN,IBAPPT),IBPM=1
	I '$P(FORMS,"^"),IBPM,'$$IFOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT"),'$$IFOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT") D ERROR2 S IBQUIT=1 Q
	Q
ASKFORM	;asks to select single form
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Enter form to print: "
	D ^DIC K DIC I ($D(DTOUT)!$D(DUOUT)!(+Y<0)) S IBQUIT=1 Q
	S FORMS=+Y
	Q

IBDF1B
IBDF1B	;ALB/CJM - ENCOUNTER FORM (printing forms for appointments); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;IBSRT=1 for sort by clinic/patient name
	;IBSRT=2 for sort by terminal digits
	;IBSRT=3 for sort by clinic/terminal digits
	;
	;SELECTBY="P" if user wants to select appts by patient
	;SELECTBY="C" if user wants to select appts by division/clinic
	;
	;IBDT=date for appointments
	;IBREPRNT'="" if this is a reprint of a previous job - then it's either equal to clinic name or 1st 4 terminal digits
	;IBSTRTDV is the division to start from in the case of a reprint
	;IBADDONS=1 if user wants to do add-ons only, 0 otherwise
	;
EN	;
	N IBREPRNT,SELECTBY,IBDT,IBSRT,IBADDONS,IBSTRTDV,QUIT
	S (IBSTRTDV,IBREPRNT)="",(QUIT,IBADDONS)=0
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	D HOME^%ZIS
	D
	.D SELECTBY Q:QUIT  S:SELECTBY="P" IBSRT=1 ;if selecting by patient then sort by clinic/patient rather than by terminal digits
	.D:SELECTBY="C" SORTBY^IBDF1BA Q:QUIT
	.D APPTDATE Q:QUIT
	.;now allow user to makes selections, whether by patient or clinic
	.D @SELECTBY
	.;
	.;if nothing selected exit
	.Q:'$D(^TMP("IBDF",$J))
	.;
	.;since selecting by entire clinics, may want to do add-ons only or restart the job
	.I SELECTBY="C" D  Q:QUIT
	..D ADDONS Q:QUIT
	..D REPRINT Q:QUIT
	;
	;
	;if nothing selected exit
END	G:('$D(^TMP("IBDF",$J)))!QUIT EXIT
	 W !,*7,"** Encounter Forms require a page size of 80 lines and 132 columns. **"
	K %IS,%ZIS,IOP S %ZIS="QM0",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="^IBDF1B1",ZTDESC="IBDF Encounter Forms",ZTSAVE("^TMP(""IBDF"",$J,")="",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G EXIT
	U IO
	D ^IBDF1B1
EXIT	;
	K ^TMP("IBDF",$J),^TMP("IB",$J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K DTOUT,DUOUT,DIRUT,DIROUT,X,Y,D0,DA
	D ^%ZISC
	Q
	;
REPRINT	;for prior job that partially completed?
	;IBSTRTDV is the division to restart from
	;IBREPRNT is the clinic or first 4 of terminal digits to restart from
	S DIR(0)="Y",DIR("A")="IS THIS A REPRINT OF A PREVIOUS RUN"
	S DIR("B")="NO",DIR("?")="ANSWER YES IF SOME OF THE FORMS WERE ALREADY PRINTED BY A PREVIOUS JOB THAT DID NOT SUCCESSFULLY COMPLETE"
	D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
	I Y D  I IBREPRNT="" S QUIT=1 Q
	.I IBSRT=2 D  ;sorting by division/terminal digit
	..;ask which division to restart from
	..S IBSTRTDV=$$STARTDIV^IBDF1BA I IBSTRTDV="" S IBREPRNT="" Q
	..;ask which terminal digit to restart from
	..D TERMSTRT^IBDF1BA Q:IBREPRNT=""
	.I (IBSRT=1)!(IBSRT=3) D CLNCSTRT^IBDF1BA ;sorting by division/clinic, ask which clinic to restart from
	Q
ADDONS	;add-ons only?
	S DIR(0)="Y",DIR("A")="WANT TO PRINT ADD-ONS ONLY"
	S DIR("B")="NO",DIR("?")="ANSWER YES TO ONLY PRINT ADD-ONS"
	D ^DIR K DIR I $D(DIRUT)!(Y=-1) S QUIT=1 Q
	S IBADDONS=Y
	Q
SELECTBY	;select by patient or clinic?
	W !,"Do you want to print forms for a particular patient or for entire clinics?",!
	K DIR S DIR("B")="Clinic",DIR(0)="SO^P:Patient;C:Clinic",DIR("A")="Select Appointment by"
	D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S SELECTBY=Y
	Q
	;
P	;print by patient - get patient then appointment(s) for date
	N IBTMP,IBNM,DFN
	;IBNM=patient name, IBTMP=array to store patient's appts
	F  K DIC S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC Q:Y<0  S DFN=+Y,IBNM=$P(Y,"^",2) D SEARCH^IBDF1BA,DISP^IBDF1BA
	Q
	;
C	;print all appointments for a clinic - find division then clinic, print all/some clinics for all/some divisions
	D ASK2^IBODIV G:$D(VAUTD)<11&(VAUTD=0) ENDC
	S DIC("S")="I $P(^SC(+Y,0),U,3)=""C"",$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD($O(^DG(40.8,0)))):1,1:0)"
	W !!,"If you want to print forms for all clinics in the divisions you have",!,"chosen (for those clinics with forms defined) then select ALL."
	W !!,"Otherwise, select the particular clinics you want.",!
	S DIC="^SC(",VAUTVB="VAUTC",VAUTNI=2,VAUTSTR="clinic" D FIRST^VAUTOMA K DIC G:$D(VAUTC)<11&(VAUTC=0) ENDC
	I VAUTC,VAUTD S ^TMP("IBDF",$J,"D","ALL")=""
	I VAUTC,'VAUTD S IBDIV="" F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  S ^TMP("IBDF",$J,"D",IBDIV)=""
	I 'VAUTC S IBCLN="" F  S IBCLN=$O(VAUTC(IBCLN)) Q:IBCLN=""  S ^TMP("IBDF",$J,"C",IBCLN)=""
ENDC	K VAUTNI,VAUTD,VAUTC,VAUTVB,VAUTSTR,IBDIV,IBCLN,DIC
	Q
	;
APPTDATE	;print forms for appointments on what date?
	K DIR S DIR(0)="D^::AEX",DIR("B")="TODAY",DIR("A")="Appointment Date to Print Forms For"
	S DIR("?",1)="Only Clinics and Patients with Appointments on this Date will be allowed."
	S DIR("?")="Nothing will print for Appointments in Clinics/Divisions with no forms defined."
	D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBDT=Y
	Q

IBDF1B1
IBDF1B1	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - print encounter forms for selected appts); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	N IBCRT,IBRASTER,IBGRPHCS,IBLISTPR,IBCOMP,IBLC,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,IBQUIT
	;
	K DA,D0,X,Y,I
	S (IBRASTER,IBGRPHCS,IBCRT,IBLISTPR,IBQUIT)=0,IBCOMP=1
	D DEVTYPE^IBDFUA(.IBRASTER,.IBGRPHCS,.IBCRT)
	D:$D(^TMP("IBDF",$J,"D")) ENDV^IBDF1B1B D:$D(^TMP("IBDF",$J,"C")) ENCL^IBDF1B1A
	D ENPT
	D KPRNTVAR^IBDFUA
	K ^TMP("IBDF",$J),^TMP("IB",$J),DA,D0,X,Y,I,IBI
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
ENPT	;print encounter forms for each appt
	;input ^TMP(  - contains appointment data:
	;if IBSRT=1 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,patient name,dfn,appt)=""
	;if IBSRT=2 format is^TMP("IBDF",$J,"P",division name,terminal digits,dfn,appt)=clinic ien
	;if IBSRT=3 format is ^TMP("IBDF",$J,"P",division name,clinic name,clinic ien,terminal digits,dfn,appt)=""
	N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBDIV
	;IBCLINIC=ien of clinic
	;IBSTRTDV is the division to start from in the case of a reprint
	;IBREPRNT is the clinic or terminal digits (1st 4) to start from in case of a reprint
	;
	S IBDIV="" F  S IBDIV=$O(^TMP("IBDF",$J,"P",IBDIV)) Q:IBQUIT!(IBDIV="")  D:(IBDIV=" ")!(IBSTRTDV']IBDIV)
	.I IBSRT=2 W !,"DIVISION: ",IBDIV,@IOF
	.D:IBSRT=1 SORT1
	.D:IBSRT=2 SORT2
	.D:IBSRT=3 SORT3
	D:'IBQUIT TRLR
	Q
	;
SORT1	;case of sort by div/clinic/patient
	S CLNCNAME="" F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
	.;check if report was restarted, start is after this clinic
	.I (IBDIV=IBSTRTDV)!((IBDIV=" ")&(IBSTRTDV'="")),((CLNCNAME']IBREPRNT)&(CLNCNAME'=IBREPRNT)) Q
	.D HDRPG(CLNCNAME,IBDIV)
	.;D PRNTOTHR^IBDF1B5(IBCLINIC,"ONCE FOR CLINIC")
	.S PNAME="" F  S PNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME)) Q:PNAME=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT
	Q
SORT2	;case of sort by div/terminal digit
	S TDIGIT="" F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT)) Q:TDIGIT=""!IBQUIT  D
	.;check if report was restarted, start is after this terminal digit
	.I (IBDIV=IBSTRTDV)!((IBDIV=" ")&(IBSTRTDV'="")),((TDIGIT']IBREPRNT)&($E(TDIGIT,1,4)'=IBREPRNT)) Q
	.S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'+IBAPPT!IBQUIT  S IBCLINIC=$G(^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,IBAPPT)) Q:'IBCLINIC!IBQUIT  D APPT
	Q
SORT3	;case of sort by div/clinic/terminal digits
	S CLNCNAME="" F  S CLNCNAME=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME)) Q:CLNCNAME=""!IBQUIT  S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC)) Q:'IBCLINIC!IBQUIT  D
	.;check if report was restarted, start is after this clinic
	.I (IBDIV=IBSTRTDV)!((IBDIV=" ")&(IBSTRTDV'="")),((CLNCNAME']IBREPRNT)&(CLNCNAME'=IBREPRNT)) Q
	.D HDRPG(CLNCNAME,IBDIV)
	.;D PRNTOTHR^IBDF1B5(IBCLINIC,"ONCE FOR CLINIC")
	.S TDIGIT="" F  S TDIGIT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT)) Q:TDIGIT=""!IBQUIT  S DFN="" F  S DFN=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN)) Q:'DFN!IBQUIT  D
	..S IBAPPT="" F  S IBAPPT=$O(^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,IBAPPT)) Q:'(+IBAPPT)!IBQUIT  D APPT
	Q
	;
APPT	;print everything for single appt
	;input - DFN,IBAPPT,IBCLINIC
	I $$S^%ZTLOAD S (ZTSTOP,IBQUIT)=1 W !,"TASK STOPPED AT USER'S REQUEST" Q
	D PRNTFRMS^IBDF1B2
	D PRNTOTHR^IBDF1B5(IBCLINIC,"FOR EVERY APPOINTMENT")
	D:$$EARLIEST(DFN,IBAPPT) PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY FOR EARLIEST APPOINTMENT")
	D:$$MULTIPLE^IBDF1B1A(DFN,IBAPPT) PRNTOTHR^IBDF1B5(IBCLINIC,"ONLY IF MULTIPLE APPOINTMENTS")
	I $D(^DPT(DFN,"S",IBAPPT,0)) S $P(^DPT(DFN,"S",IBAPPT,0),"^",21)=1 S:IBADDONS $P(^DPT(DFN,"S",IBAPPT,0),"^",22)=1
	Q
	;
HDRPG(CLINIC,IBDIV)	;print a header page for clinic
	N LN
	S LN="BEGINNING TO PRINT ENCOUNTER FORMS FOR "_CLINIC_$S(IBDIV'=" ":" IN "_IBDIV,1:"")
	I $Y W @IOF
	W !!!!!,?((IOM-$L(LN))\2),LN
	W @IOF
	Q
TRLR	;prints a trailer page
	N LN
	S LN="PRINTING OF ENCOUNTER FORMS IS COMPLETE"
	W !!!!!,?((IOM-$L(LN))\2),LN
	W @IOF
	Q
EARLIEST(DFN,APPT)	;determines if APPT is the earliest appt on the list for DFN
	I '$D(^TMP("IBDF",$J,"APPT LSIT",DFN)) D GETLIST^IBDF1B1A(DFN,IBDT)
	I APPT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,""))
	Q $T

IBDF1B1A
IBDF1B1A	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ENCL	;for every clinic choosen find patient appointments on DATE
	N DFN,CLNCNAME,IBCLINIC,PNAME,TDIGIT,IBAPPT,IBAPTYP,IBX,Y,IBDIV
	S IBCLINIC="" F  S IBCLINIC=$O(^TMP("IBDF",$J,"C",IBCLINIC)) Q:'IBCLINIC  D
	.;
	.;
	.;get the clinic's division
	.S IBDIV=$P($$DIVISION^IBDF1B5(IBCLINIC),"^",2) S:IBDIV="" IBDIV=" "
	.
	.;setup defined for clinic or division? - otherwise there is nothing to print
	.Q:'($D(^SD(409.95,"B",IBCLINIC))!$D(^SD(409.96,"B",+IBDIV)))
	.;
	.;if restart, sorting is by division/clinic, and clinic is in the starting division, make sure the clinic does not precede the starting clinic
	.I IBDIV=IBSTRTDV,((IBSRT=1)!(IBSRT=3)) S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") I CLNCNAME'=IBREPRNT,CLNCNAME']IBREPRNT Q
	.;
	.;find the appts
	.S IBAPPT=IBDT F  S IBAPPT=$O(^SC(IBCLINIC,"S",IBAPPT)) Q:$E(IBAPPT,1,7)'=IBDT  D
	..S IBX=0 F  S IBX=$O(^SC(IBCLINIC,"S",IBAPPT,1,IBX)) Q:IBX=""  D
	...S DFN=+$G(^SC(IBCLINIC,"S",IBAPPT,1,IBX,0)),PNAME=$P($$PT^IBEFUNC(DFN),"^") Q:PNAME=""
	...;check the appt status - may be cancelled
	...S IBAPTYP=$G(^DPT(DFN,"S",IBAPPT,0)) Q:"NT,I,"'[($P(IBAPTYP,"^",2)_",")
	...;
	...;if only printing add-ons don't print if already printed
	...I IBADDONS,IBREPRNT="" Q:$$PRINTED(DFN,IBAPPT)
	...I IBADDONS,IBREPRNT'="" Q:'$$ADDON(DFN,IBAPPT)
	...;
	...;case of sort by clinic,patient
	...I IBSRT=1 S CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,PNAME,DFN,+IBAPPT)=""
	...;
	...;case of sort by terminal digit
	...I IBSRT=2 D
	....S TDIGIT=$$TDG(DFN)
	....;
	....;if this is a restart and clinic is in the starting division, make sure the terminal digits (1st 4) do not precede the restart position
	....I IBDIV=IBSTRTDV,$E(TDIGIT,1,4)'=IBREPRNT,TDIGIT']IBREPRNT Q
	....;
	....S ^TMP("IBDF",$J,"P",IBDIV,TDIGIT,DFN,+IBAPPT)=IBCLINIC
	...;
	...;case of sort by clinic/terminal digits
	...I IBSRT=3 S TDIGIT=$$TDG(DFN),CLNCNAME=$P($G(^SC(IBCLINIC,0)),"^") Q:CLNCNAME=""  S ^TMP("IBDF",$J,"P",IBDIV,CLNCNAME,IBCLINIC,TDIGIT,DFN,+IBAPPT)=""
	...;
	;
	;don't need the list of clinics anymore
	K ^TMP("IBDF",$J,"C")
	Q
	;
TDG(DFN)	;reformat patient's SSN into terminal digit order, then turns it into a cannonic number
	; returns either 0 or ssn in terminal digit order
	N X,Y,I,SSN
	S SSN=$P($G(^DPT(DFN,0)),"^",9)
	S Y="" F I=1:1 S X=$E(SSN,I) Q:X=""  I X?1N S Y=Y_X
	S Y=$S(Y'?9N:0,1:$E(Y,8,9)_$E(Y,6,7)_$E(Y,4,5)_$E(Y,1,3))
	Q +Y
	;
PRINTED(DFN,IBAPPT)	;returns 1 if the print manager already printed forms for this appt, 0 otherwise
	Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",21)
ADDON(DFN,IBAPPT)	;returns 1 if the print manager already printed forms for this appt as an add-on, 0 otherwise
	Q +$P($G(^DPT(DFN,"S",IBAPPT,0)),"^",22)
	;
GETLIST(DFN,IBDT)	;creates a list of the patient's 1st 2 appts on IBDT
	Q:'DFN!'IBDT
	N APPT,NODE,TO,CNT
	S TO=IBDT+.999999,CNT=0
	S ^TMP("IBDF",$J,"APPT LIST",DFN)=""
	S APPT=IBDT-.0001 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:'APPT!(APPT>TO)!(CNT>1)  D
	.S NODE=$G(^DPT(DFN,"S",APPT,0))
	.Q:"NT,I"'[($P(NODE,"^",2)_",")
	.S ^TMP("IBDF",$J,"APPT LIST",DFN,APPT)="",CNT=CNT+1
	Q
MULTIPLE(DFN,APPT)	;determines if patient=DFN has multiple appts on the list and APPT is the earliest
	N APT
	I '$D(^TMP("IBDF",$J,"APPT LSIT",DFN)) D GETLIST^IBDF1B1A(DFN,IBDT)
	S APT=$O(^TMP("IBDF",$J,"APPT LIST",DFN,""))
	Q:APT'=APPT 0
	I $O(^TMP("IBDF",$J,"APPT LIST",DFN,APT))
	Q $T
	;
DIVHAS(IBDIV)	;returns >0 if the division has anything to print, 0 otherwise
	Q:'$G(IBDIV) 0
	Q $L($O(^SD(409.96,"A",IBDIV,"")))
	;
CLNCHAS(CLINIC)	;returns>0 if the clinic has something to print
	N NODE,SETUP,I,FOUND
	S SETUP=$O(^SD(409.95,"B",CLINIC,0)) Q:'SETUP 0
	S NODE=$G(^SD(409.95,SETUP,0))
	S FOUND=0 F I=2,3,4,6 I $P(NODE,"^",I) S FOUND=1 Q
	Q:FOUND 1
	Q $L($O(^SD(409.95,"A",CLINIC,"")))

IBDF1B1B
IBDF1B1B	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B continued - user options for printing- continuation of IBDF1B1); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ENDV	;entire divisions were choosen, find all clinics (with encounter forms defined)
	N IBCLN,IBDIV,NODE,DIVISION,ALL
	;
	;if ^TMP("IBDF",$J,"D","ALL") exists then all divisions were chosen
	S ALL=$S($D(^TMP("IBDF",$J,"D","ALL")):1,1:0)
	;
	;user did not select ALL, so make a list of the divisions he did choose
	I 'ALL S IBDIV=0 F  S IBDIV=$O(^TMP("IBDF",$J,"D",IBDIV)) Q:'IBDIV  S DIVISION(IBDIV)=""
	;
	;loop through all the clinics finding ones in selected divisions
	S IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
	.S NODE=$G(^SC(IBCLN,0))
	.;
	.;make sure it's in one of the selected divisions
	.S IBDIV=$P(NODE,"^",15)
	.I IBDIV,'ALL Q:'$D(DIVISION(IBDIV))
	.;
	.;check that location is a clinic
	.Q:$P(NODE,"^",3)'="C"
	.;
	.;if it's a restart make sure the IBDIV does not precede the starting division
	.I IBSTRTDV]" ",IBDIV S DIVISION=$P($G(^DG(40.8,IBDIV,0)),"^") I DIVISION'=IBSTRTDV,DIVISION']IBSTRTDV Q
	.;
	.;don't put it on the list if there is nothing to print
	.I '$$DIVHAS^IBDF1B1A(IBDIV),'$$CLNCHAS^IBDF1B1A(IBCLN) Q
	.;
	.;it passed all the tests, put it on the list
	.S ^TMP("IBDF",$J,"C",IBCLN)=""
	;
	;don't need list of divisions anymore
	K ^TMP("IBDF",$J,"D")
	Q

IBDF1B2
IBDF1B2	;ALB/CJM - ENCOUNTER FORM PRINT (IBDF1B1 continued - user options for printing); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRNTFRMS	;print encounter form(s) for an appointment
	N FORMS,IBFORM,IBF
	;FORMS - list of forms to print for patient
	;IBF - a counter used to parse FORMS
	S FORMS=$$FORMS(IBCLINIC,DFN,IBAPPT)
	F IBF=1:1 S IBFORM=$P(FORMS,"^",IBF) Q:'IBFORM  D DRWFORM^IBDF2A
	Q
	;
FORMS(CLINIC,DFN,IBAPPT)	;returns a list of forms that should be printed for this patient in this clinic and this appt.
	N FORMS,SETUP,TYPE
	S FORMS=""
	S SETUP=$O(^SD(409.95,"B",+CLINIC,0)),SETUP=$G(^SD(409.95,+SETUP,0))
	S:$P(SETUP,"^",2) FORMS=$P(SETUP,"^",2)_"^"
	S:$P(SETUP,"^",6) FORMS=FORMS_$P(SETUP,"^",6)_"^"
	I $P(SETUP,"^",3)!$P(SETUP,"^",4) D
	.D TYPE
	.I TYPE="NEW",$P(SETUP,"^",4) S FORMS=FORMS_$P(SETUP,"^",4)_"^"
	.I TYPE="OLD",$P(SETUP,"^",3) S FORMS=FORMS_$P(SETUP,"^",3)_"^"
	Q FORMS
TYPE	;determine if patient is NEW or OLD at clinic - quick and dirty
	N APPT,NODE
	S TYPE="NEW"
	S APPT=DT-10000 F  S APPT=$O(^DPT(DFN,"S",APPT)) Q:('APPT)!(APPT'<IBAPPT)  S NODE=$G(^DPT(DFN,"S",APPT,0)) I +NODE=CLINIC,(($P(NODE,"^",2)="I")!($P(NODE,"^",2)="NT")!($P(NODE,"^",2)="")) S TYPE="OLD" Q
	Q

IBDF1B3
IBDF1B3	;ALB/CJM - ENCOUNTER FORM - (lists data that did not fit on the encounter form);4/28/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
OVERFLOW	;
	;loops through ^TMP("IBDF",$J,"OVERFLOW"), printing in list form all the data that did not fit
	;
	N BLOCK,FIELD,TYPE,ITEM,RTN,PAGE,IFARY
	Q:'$D(^TMP("IBDF",$J,"OVERFLOW"))
	S IFARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	S PAGE=1
	D HDR
	S BLOCK="" F  S BLOCK=$O(^TMP("IBDF",$J,"OVERFLOW",BLOCK)) Q:'BLOCK  D
	.D BLOCKBRK
	.S FIELD="" F  S FIELD=$O(^TMP("IBDF",$J,"OVERFLOW",BLOCK,FIELD)) Q:'FIELD  D
	..S TYPE="" F  S TYPE=$O(^TMP("IBDF",$J,"OVERFLOW",BLOCK,FIELD,TYPE)) Q:TYPE=""  D FIELD
	D FOOTER
	K ^TMP("IBDF",$J,"OVERFLOW")
	Q
HDR	;writes header to top of page
	N HDR
	S HDR="ADDITIONAL ENCOUNTER FORM DATA"
	W !,?((IOM-$L(HDR))/2),HDR,?(IOM-10),"PAGE: ",PAGE,!
	W !,"CLINIC:   ",$P($G(^SC(IBCLINIC,0)),"^")
	W !,"PATIENT:  " I $G(DFN) W $P($G(^DPT(DFN,0)),"^")
	W !,"FORM:     ",$P($G(^IBE(357,IBFORM,0)),"^"),!
	S PAGE=PAGE+1
	Q
BLOCKBRK	;writes a line to the report with the block name
	I $Y>(IOSL-3) W @IOF D HDR
	W !!,"BLOCK:  ",$P($G(^IBE(357.1,BLOCK,0)),"^")
	Q
FOOTER	;
	N FTR S FTR="END OF REPORT"
	W !!!,?((IOM-$L(FTR))\2),FTR,@IOF
	Q
FIELD	;displays the field (if list, displays all, if record, displays subfields)
	 N LASTITEM,RTN,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,VALUE,FLDNAME,RTN,LIST
	;
	Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;gets the field description
	D ORTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
	W !
	I RTN("DATATYPE")=5 D TXTPRINT Q  ;wordprocessing fields treated differently
	;now do other than wordprocessing
	S LIST=$S((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4):1,1:0)
	I LIST,TYPE="CURRENT" S ITEM=$G(^TMP("IBDF",$J,"OVERFLOW",BLOCK,FIELD,TYPE))
	I TYPE="NEXT",LIST D
	.I $Y>(IOSL-5) W @IOF D HDR
	.S ITEM=1 W !,?5,"**** LIST OF ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)," ****" F  D LISTVAL D  Q:'ITEM
	..I VALUE'="" D SUBFLDS W !
	I TYPE="CURRENT" D
	.W !,?5,"**** ",$E(RTN("NAME"),$F(RTN("NAME")," "),40)_$S(LIST:" (#"_ITEM_")",1:"")_" ****"
	.I 'LIST D SNGLVAL
	.I LIST D LISTVAL
	.D SUBFLDS
	Q
SUBFLDS	;process each subfield
	N LAST,PVALUE
	S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
	F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
	.I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
	.S PVALUE=$P($G(VALUE),"^",PIECE)
	.;don't use the label appearing on the encounter form - it might be 'context sensitive' - use description form package interface file
	.S LABEL=$P($G(^IBE(357.6,RTN,2)),"^",((2*PIECE)-1))
	.I $Y>(IOSL-3) W @IOF D HDR
	.W !,?5,LABEL_": ",PVALUE
	Q
SNGLVAL	;output - VALUE
	S VALUE=$G(@IFARY@(RTN("NAME")))
	Q
LISTVAL	;input - ITEM=prior item processes, output - VALUE,ITEM=current item processed
	S VALUE=$S(ITEM:$G(@IFARY@(RTN("NAME"),ITEM)),1:"")
	;increment ITEM to next item
	S ITEM=$O(@IFARY@(RTN("NAME"),ITEM))
	Q
TXTPRINT	;for printing a word-processing field
	N LINE,X,DIWL,DIWR,DIWF,LABEL
	S LINE=0,DIWR=IOM-10,DIWL=0,DIWF=""
	K ^UTILITY($J,"W",1)
	F  S LINE=$O(@IFARY@(RTN("NAME"),LINE)) Q:'LINE  S X=$G(@IFARY@(RTN("NAME"),LINE,0)) I X'="" D ^DIWP
	S LABEL=$E(RTN("NAME"),$F(RTN("NAME")," "),40)
	I $Y>(IOSL-5) W @IOF D HDR
	W !,?5,LABEL_": "
	S X=0 F  S X=$O(^UTILITY($J,"W",0,X)) Q:'X  D
	.I $Y>(IOSL-3) W @IOF D HDR
	.W !,?10,$G(^UTILITY($J,"W",0,X,0))
	K ^UTILITY($J,"W",1)
	Q

IBDF1B5
IBDF1B5	;ALB/CJM - ENCOUNTER FORM - (prints reports defined by print manager); 5/15/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
PRNTOTHR(CLINIC,PTYPE)	;prints reports defined for CLINIC for print condition=PTYPE
	N RTN,DIVISION,TYPE
	S TYPE=$O(^IBE(357.92,"B",PTYPE,"")) Q:'TYPE  ;get ien of PTYPE
	S DIVISION=+$$DIVISION(CLINIC)
	;
	;print all the reports defined for the entire division,unless excluded for the clinic
	I DIVISION S RTN="" F  S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  I (PTYPE'="FOR EVERY APPOINTMENT")!'$D(^SD(409.95,"AE",CLINIC,RTN)) D PRINT
	;
	;print all the reports defined for the clinic
	S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  D PRINT
	Q
PRINT	;fetches the package interface record,prints the report
	D PRTNDSCR^IBDFU1B(.RTN) ;get the interface description
	Q:RTN("ACTION")'=4  ;quit if the interface isn't the type that prints a report
	;health summaries always use the same rtn to print
	I RTN("HSMRY?")=1 Q:'RTN("HSMRY")  S RTN("RTN")="PRNTSMRY^IBDFN5("_RTN("HSMRY")_")"
	Q:$$DORTN^IBDFU1B(.RTN)
	Q
DIVISION(CLINIC)	;returns the clinic's division - format is IEN^division's name
	N DIV,NAME
	Q:'$G(CLINIC) ""
	S DIV=+$P($G(^SC(CLINIC,0)),"^",15)
	I DIV S NAME=$P($G(^DG(40.8,DIV,0)),"^")
	I $L($G(NAME)) S DIV=DIV_"^"_NAME
	E  S DIV=""
	Q DIV
IFOTHR(CLINIC,TYPE)	;returns a 1 if there are reports defined for CLINIC for print condition=TYPE,0 if otherwise
	N RTN,DIVISION,COUNT
	S COUNT=0
	S TYPE=$O(^IBE(357.92,"B",TYPE,"")) Q:'TYPE 0 ;get ien of TYPE
	S DIVISION=+$$DIVISION(CLINIC)
	;counts all the reports defined for the entire division
	I DIVISION S RTN="" F  S RTN=$O(^SD(409.96,"A",DIVISION,TYPE,RTN)) Q:'RTN  S:'$D(^SD(409.95,"AE",CLINIC,RTN)) COUNT=COUNT+1 Q:COUNT
	;counts all the reports defined for the clinic
	S RTN="" F  S RTN=$O(^SD(409.95,"A",CLINIC,TYPE,RTN)) Q:'RTN  S COUNT=COUNT=COUNT+1 Q:COUNT
	Q COUNT

IBDF1BA
IBDF1BA	;ALB/CJM - ENCOUNTER FORM (user options for printing - continuation of IBDF1B); 3/1/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
TERMSTRT	;get terminal digit to restart from - OUTPUT=IBREPRNT
	S IBREPRNT="",DIR(0)="F^4:5",DIR("A")="ENTER THE LAST 4 DIGITS OF THE SSN TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST FOUR DIGITS OF THE SSN OF THE LAST PATIENT FOR WHOM FORMS WERE PRINTED"
	F  D ^DIR Q:$D(DIRUT)!(Y=-1)  D  Q:IBREPRNT'=""
	.I Y'?4N W !,*7,"MUST BE 4 NUMBERS!" Q
	.S IBREPRNT=Y,IBREPRNT=$E(IBREPRNT,3,4)_$E(IBREPRNT,1,2)
	K DIR
	Q
CLNCSTRT	;get clinic and division to restart from,OUTPUT=IBREPRNT (name of clinic) and IBSTRTDV (division to restart from)
	;
	N NODE
	S IBREPRNT=""
	S DIR(0)="409.95,.01",DIR("A")="ENTER CLINIC TO BEGIN REPRINT FROM",DIR("?")="ENTER THE LAST CLINIC FOR WHICH ANY FORMS WERE PRINTED"
	D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
	S NODE=$G(^SC(+Y,0))
	S IBREPRNT=$P(NODE,"^")
	S IBSTRTDV=+$P(NODE,"^",15) I IBSTRTDV S IBSTRTDV=$P($G(^DG(40.8,IBSTRTDV,0)),"^")
	Q
	;
SEARCH	;get the appointment data on a patient, put in IBTMP array, indexed by appointment
	;screens out any appts in clinics with nothing defined to print
	N IBX,IBLN,CLINIC,APPT
	S (VASD("F"),VASD("T"))=IBDT,VASD("W")=129 D SDA^VADPT Q:(VAERR!'$D(^UTILITY("VASD",$J)))
	S IBX="" F  S IBX=$O(^UTILITY("VASD",$J,IBX)) Q:IBX=""  D
	. S IBLN=^UTILITY("VASD",$J,IBX,"I"),APPT=+$P(IBLN,"^"),CLINIC=$P(IBLN,"^",2)
	.Q:'APPT!'CLINIC
	.Q:'($D(^SD(409.95,"B",CLINIC))!$D(^SD(409.96,"B",+$$DIVISION^IBDF1B5(CLINIC))))
	.;^UTILITY("VASD",$J,IBX,"E")=(EXTERNAL FORMAT) appt date time^clinic name^status^appt type
	.S IBTMP(APPT)=DFN_"^"_CLINIC_"^"_IBNM_"^"_^UTILITY("VASD",$J,IBX,"E")
	K VASD,VAERR,^UTILITY("VASD",$J)
	Q
	;
DISP	;display patients/clinics appointments found and get users choice
	;sort type is by clinic,patient
	N CLNCIEN,CLNCNAME
	I '$D(IBTMP) W !!,?5,"No Active Appointments for ",IBNM," on",!,"this date in any clinic or division that has forms or reports defined to print",! G ENDDISP
	I '$D(IBTMP) W !!,?10,"No Active Appointments in a Clinic with an Encounter Form",!,?10,"for ",IBNM," on this date.",! G ENDDISP
	W !!,"Appointments for ",IBNM,!
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  S IBLN=IBTMP(IBX) W !,$J(IBI,3),"  ",$E($P(IBLN,"^",5),1,20),?25,"   " F IBJ=4,6,7 W "  ",$P(IBLN,"^",IBJ)
	S DIR(0)="LO^1:"_(IBI-1),DIR("A")="    Select Appointments" D ^DIR K DIR G:$D(DIRUT) ENDDISP
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  I Y[(IBI_",") D
	.S CLNCIEN=$P(IBTMP(IBX),"^",2),CLNCNAME=$P(IBTMP(IBX),"^",5)
	.;list format - ^TMP("IBDF",$J,"P"," ",division name(but set it to " " because for selecting single appts sort by division not needed),clinic name,clinic ien,patient name,dfn,appt)=""
	.S ^TMP("IBDF",$J,"P"," ",CLNCNAME,CLNCIEN,IBNM,DFN,IBX)=""
	.;also keep an index by ...,"APPT LIST",DFN,APPT)
	.S ^TMP("IBDF",$J,"APPT LIST",DFN,IBX)=""
ENDDISP	K IBTMP,IBX,IBI,IBJ,IBLN,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,^UTILITLY("VASD",$J)
	Q
	;
STARTDIV()	;asks what division to restart the job from and returns division name, or "" if user declines
	N IBDIV
	K DIC S DIC="^DG(40.8,",DIC(0)="AEQMN",DIC("A")="SELECT THE DIVISION TO START THE REPRINT FROM:"
	S IBDIV=$O(^DG(40.8,0)) S:IBDIV DIC("B")=$P($G(^DG(40.8,IBDIV,0)),"^")
	D ^DIC K DIC
	I (+Y<0)!$D(DTOUT)!$D(DUOUT) Q ""
	Q $P(Y,"^",2)
SORTBY	;sort by clinic/patient, clinic/terminal digit, or terminal digit?
	K DIR S DIR(0)="S^1:Division/Clinic/Patient Name;2:Division/Terminal Digits;3:Division/Clinic/Terminal Digits"
	S DIR("?")="Enter '1' for sorting by Division/Clinic/Patient Name or '2' to sort by Division/Terminal Digits or '3' to sort by Division/Clinic/Terminal Digits."
	S DIR("A")="How should the output be SORTED?",DIR("B")="1" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	I Y'=1,Y'=2,Y'=3 S QUIT=1 Q
	S IBSRT=Y
	Q

IBDF1C
IBDF1C	;ALB/CJM - ENCOUNTER FORM (print sample form);FEB 11,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
PRINT	;
	N IBQUIT,IBCOMP,IBFORM,MARGIN,PAGELEN
	S (IBQUIT,IBCOMP)=0
	D FULL^VALM1
	S VALMBCK="R"
	D FORM G:IBQUIT EXIT
	D DEVICE G:IBQUIT EXIT
QUEUED	; entry point if queued
	D FORM^IBDF2A
EXIT	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	D:$G(IBLISTPR) RESET
	Q
	;
RESET	;reset screen parms needed by list processor
	S X="IORVON;IORVOFF;IOIL;IOSTBM;IOSC;IORC;IOEDEOP;IOINHI;IOINORM;IOUON;IOUOFF;IOBON;IOBOFF;IOSGR0" D ENDR^%ZISS K X
	Q
	;
DEVICE	;
	I $D(ZTQUEUED) Q
	W !,*7,"** This Encounter Form requires "_MARGIN_" columns and a page length of "_PAGELEN_" lines. **"
	K %IS,%ZIS,IOP S %ZIS="MQ0" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="QUEUED^IBDF1C",ZTIO=ION,ZTSAVE("IB*")="",ZTDESC="ENCOUNTER FORM" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBQUIT=1 Q
	U IO
	Q
FORM	;returns IBFORM,MARGIN,PAGELEN
	S IBFORM=0
	;if the user used the '=' syntax then assume he wants to choose from the list
	I $P($G(XQORNOD(0)),"^",4)["=" D
	.D EN^VALM2(XQORNOD(0),"S")
	.S Y=$O(VALMY("")),IBFORM="",VALMBCK="R"
	.I Y S Y=$G(@VALMAR@("IDX",2*Y,Y)),IBFORM=+Y
	.S:IBFORM Y(0)=$G(^IBE(357,IBFORM,0))
	E  D
	.K DIR S DIR(0)="YA",DIR("A")="Do you want to print a form from the tool kit? "
	.D ^DIR K DIR Q:(Y=-1)!($D(DIRUT))
	.K DIC S DIC("S")=$S(Y:"I $P(^(0),U,7)",1:"I '$P(^(0),U,7)"),DIC=357,DIC(0)="AEQZ",DIC("A")="Select any FORM by name: "
	.D ^DIC K DIC Q:$D(DIRUT)!(Y<0)
	.S IBFORM=+Y
	I 'IBFORM S IBQUIT=1 Q
	S MARGIN=$P($G(Y(0)),"^",9),PAGELEN=$P($G(Y(0)),"^",10)
	Q

IBDF2A
IBDF2A	;ALB/CJM - ENCOUNTER FORM (builds form and prints it);NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
FORM	;for printing the encounter form
	;input varibles - IBFORM,IBCOMP
	;
	N IBCRT,IBRASTER,IBGRPHCS,IBLISTPR,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC
	I '$D(IBCOMP) N IBCOMP S IBCOMP=0
	;
	S (IBRASTER,IBGRPHCS,IBCRT,IBLISTPR)=0
	D DEVTYPE^IBDFUA(.IBRASTER,.IBGRPHCS,.IBCRT)
	D DRWFORM
EXIT	;
	;
	D KPRNTVAR^IBDFUA ;kills the screen and graphics parameters
	K X,Y,I
	Q
DRWFORM	;
	N RTNLIST,IBFORMW,IBFORMHT,TK,CMPLD,NODE,TEXT,IBCTRLS,IBARY,IBFIRST,IBGARY,IBUNDRLN
	S IBFIRST=1
	S NODE=$G(^IBE(357,IBFORM,0)) Q:NODE=""
	S IBFORMW=$P(NODE,"^",9),IBFORMHT=$P(NODE,"^",10),TK=$P(NODE,"^",7),CMPLD=$P(NODE,"^",5)
	S X=0 X $G(^%ZOSF("RM")) K X ;sets device to no wrapping
	S (DX,DY)=0 X $G(^%ZOSF("XY")) K DX,DY ;make sure $X,$Y=0
	;
	S IBARY="^TMP(""IBDF"",$J,""FORM"")"
	K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM"),^("OVERFLOW")
	;for forms other than toolkit, always use compiled version
	I 'TK D
	.I 'CMPLD D COMPILE^IBDF19(IBFORM)
	.S IBUNDRLN=$S(IBCRT:"IBUNDRLN",1:"^IBE(357,""AU"",IBFORM)")
	.S IBCTRLS="^IBE(357,""AC"",IBFORM)"
	.S IBGARY="^IBE(357,""AG"",IBFORM)"
	.S TEXT="^IBE(357,""AT"",IBFORM)"
	.N IBROW
	.S IBROW="" F  S IBROW=$O(@TEXT@(IBROW)) Q:IBROW=""  S @IBARY@(IBROW)=$G(@TEXT@(IBROW))
	.I 'IBGRPHCS D
	..N IBCOL,IBCMPILE,IBBLK S IBCMPILE=0,IBBLK("Y")=0,IBBLK("X")=0
	..S IBROW="" F  S IBROW=$O(@IBGARY@(IBROW)) Q:IBROW=""  S IBCOL="" F  S IBCOL=$O(@IBGARY@(IBROW,IBCOL)) Q:IBCOL=""  D DRWSTR^IBDFU(IBROW,IBCOL,$G(@IBGARY@(IBROW,IBCOL)),"G")
	..S IBGARY="IBGARY"
	.D:IBCOMP DRWFLDS(1)
	E  D
	.S IBCTRLS="^TMP(""IBDF"",$J,""FORM"",""CTRL"")"
	.S IBUNDRLN="^TMP(""IBDF"",$J,""FORM"",""UNDRLN"")"
	.S IBGARY="^TMP(""IBDF"",$J,""FORM"",""GRPHC"")"
	.D DRWBLKS
	D LNPRINT^IBDF2F(IBARY,IBUNDRLN,IBCTRLS,IBGARY)
	D:IBCOMP OVERFLOW^IBDF1B3
	K ^TMP("IB",$J,"INTERFACES"),^TMP("IBDF",$J,"FORM")
	S X=IOM X $G(^%ZOSF("RM")) K X ;sets device to wrap
	Q
	;
DRWBLKS	;draws all the form's blocks
	N IBBLK,RTNLIST
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  I '$$BLKDESCR^IBDFU1B(.IBBLK) D DRWBLOCK(.IBBLK)
	Q
	;
DRWFLDS(IBCOMP)	;draws the form's data fields only
	;IBCOMP means fill in with data
	;IBFIRST=0 means just fill in the data
	;
	N IBBLK,RTNLIST,IBFLD,IBFIRST,IBCMPILE
	I IBLISTPR N IBWARN S IBWARN=0
	S (IBCMPILE,IBFIRST)=0
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	.S IBFLD="" F  S IBFLD=$O(^IBE(357.5,"C",IBBLK,IBFLD)) Q:'IBFLD  D DATAFLD^IBDF2B(IBFLD)
	Q
	;
DRWBLOCK(IBBLK,IBCMPILE,WRITE)	;IBBLK should be passed by reference, is an array containing the block description
	N IBFIELD,IBLIST,IBLINE,IBTEXT,IBWRTCNT,IBFIRST
	;
	S IBFIRST=1
	S IBCMPILE=$G(IBCMPILE),IBCMPILE("WRITE")=$G(WRITE)
	I 'IBCMPILE,('$D(^IBE(357.1,IBBLK,"S"))!'$D(^IBE(357.1,IBBLK,"V"))) S IBCMPILE=1,IBCMPILE("WRITE")=1
	I IBCMPILE S (IBWRTCNT("S"),IBWRTCNT("V"))=0 D UNCMPILE(IBBLK)
	I 'IBCMPILE D WCMP
	I IBCMPILE D  Q:'IBCMPILE("WRITE")
	.S IBLIST="" F  S IBLIST=$O(^IBE(357.2,"C",IBBLK,IBLIST)) Q:'IBLIST  D PRINTLST^IBDF2D(IBLIST)
	.S ^IBE(357.1,IBBLK,"S",0)="^357.11A^"_IBWRTCNT("S")_"^"_IBWRTCNT("S")
	.S ^IBE(357.1,IBBLK,"V",0)="^357.12A^"_IBWRTCNT("V")_"^"_IBWRTCNT("V")
	;
	;now write the uncompiled part of the block
	S IBCMPILE=0
	I IBLISTPR N IBWARN S IBWARN=0 ;flag set to 1 if a warning is already displayed - don't want to display multiple warnings, users find it aggravating
	N HDROS S HDROS=0 ;header offset - block header is offset if a box is drawn around it
	I (IBBLK("X")'=+IBBLK("X"))!(IBBLK("Y")'=+IBBLK("Y")) Q  ;location not known
	I IBBLK("BOX")=1 S HDROS=1 D DRWBOX^IBDFU(0,0,IBBLK("W"),IBBLK("H"))
	D HEADER^IBDFU(IBBLK("HDR"),IBBLK("HDISP"),HDROS,HDROS,IBBLK("W")-(2*HDROS))
	S IBLINE="" F  S IBLINE=$O(^IBE(357.7,"C",IBBLK,IBLINE)) Q:'IBLINE  D PRNTLINE^IBDF2E(IBLINE)
	S IBTEXT="" F  S IBTEXT=$O(^IBE(357.8,"C",IBBLK,IBTEXT)) Q:'IBTEXT  D PRNTTEXT^IBDF2E(IBTEXT)
	S IBFIELD="" F  S IBFIELD=$O(^IBE(357.5,"C",IBBLK,IBFIELD)) Q:'IBFIELD  D DATAFLD^IBDF2B(IBFIELD)
	Q
WCMP	;write the compiled version
	N SUB,NODE
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"S",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"S",SUB,0)) D DRWSTR^IBDFU(+$P(NODE,"^"),+$P(NODE,"^",2),$P(NODE,"^",5,200),$P(NODE,"^",3),$P(NODE,"^",4)) D
	S SUB=0 F  S SUB=$O(^IBE(357.1,IBBLK,"V",SUB)) Q:'SUB  S NODE=$G(^IBE(357.1,IBBLK,"V",SUB,0)) D DRWVLINE^IBDFU(+$P(NODE,"^"),+$P(NODE,"^",2),+$P(NODE,"^",3),$P(NODE,"^",4))
	Q
UNCMPILE(BLOCK)	;delete the compiled version
	K ^IBE(357.1,BLOCK,"V"),^IBE(357.1,BLOCK,"S")
	Q

IBDF2B
IBDF2B	;ALB/CJM - ENCOUNTER FORM - (prints data field);12/15/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
DATAFLD(FIELD)	;for printing data fields to the encounter form
	;IBCOMP means to complete the form with data
	;RTNLIST is used to keep a list of package interface routines called - it should not be newed
	;IBFIRST=0 means just fill in the data
	;
	N LASTITEM,RTN,MAXX,MAXY,LABEL,XLAB,YLAB,XIO,YIO,WIO,HIO,BLK,ITEM,PIECE,SPACING,DISPLAY,LAST,VALUE,IFARY,FLDNAME
	;LAST - the last subfield read
	S IFARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	Q:'$$FLDDESCR^IBDFU1A(FIELD)  ;get the 0 node of the field description
	Q:BLK='IBBLK  ;check that the field really belongs to correct block
	D ORTNDSCR^IBDFU1B(.RTN) ;get the rtn used by the field
	;if this is not the first time this form is being printed, and the data does not change, quit
	I 'IBFIRST,'RTN("CHANGES") Q
	I $G(IBLISTPR) D RANGE
	I IBCOMP!('RTN("CHANGES")) D RTN
	I RTN("DATATYPE")=5 D TXTPRINT^IBDF2B1 Q  ;wordprocessing fields treated differently
	;now do other than wordprocessing
	;process each subfield
	S LAST=$$SFLDDSCR^IBDFU1A(FIELD,0) Q:'LAST
	F  D  S LAST=$$SFLDDSCR^IBDFU1A(FIELD,LAST) Q:'LAST
	.;print labels unless it's a batch job and the form has already been computed
	.I IBFIRST,(LABEL'=""),DISPLAY'["I" D
	..D DRWSTR^IBDFU(YLAB,XLAB,LABEL,DISPLAY)
	..I IBLISTPR,((XLAB+($L(LABEL)-1))>MAXX)!(YLAB>MAXY) D WARNING
	.D PRNTDATA
	Q
RANGE	;sets MAXX and MAXY to the maximum values allowed for the X,Y coordinates
	N BOX
	S BOX=$S(IBBLK("BOX")'=2:1,1:0)
	S MAXY=IBBLK("H")-(1+BOX)
	S MAXX=IBBLK("W")-(1+BOX)
	Q
PRNTDATA	;displays the correct data to the subfield
	N PVALUE,NODE
	I RTN("DATATYPE")=1!(RTN("DATATYPE")=3) S PIECE=1
	Q:'PIECE
	S NODE=$P(RTN("NODES"),"^",PIECE)
	S PVALUE=$P($S(NODE'="":$G(VALUE(NODE)),1:$G(VALUE)),"^",PIECE)
	I WIO,PVALUE="" D
	.;print the underscore only if the data is not variable
	.I IBLISTPR S PVALUE=$S(IBCOMP&RTN("CHANGES"):$J("",WIO),1:$$HLINE^IBDFU(WIO)) Q
	.I 'RTN("CHANGES") S PVALUE=$$HLINE^IBDFU(WIO)
	I PVALUE'="" D
	.I ('IBLISTPR),($L(PVALUE)>WIO),RTN("FULL") D OVERFLOW("CURRENT")
	.I 'IBLISTPR,((RTN("DATATYPE")=3)!(RTN("DATATYPE")=4)),LASTITEM,$O(@IFARY@(RTN("NAME"),ITEM)),RTN("FULL") D OVERFLOW("NEXT")
	.D DRWSTR^IBDFU(YIO,XIO,$$PADRIGHT^IBDFU(PVALUE,WIO))
	.I IBLISTPR,((XIO+WIO-1)>MAXX)!(YIO>MAXY) D WARNING
	Q
RTN	;calls the rtn specified by the pkg interface if ok
	Q:RTN("ACTION")'=2
	Q:RTN("NAME")=""
	;quit if its not the first time this form has been printed and the data is not changeable
	Q:(('IBFIRST)&('RTN("CHANGES")))
	;
	N NODE S NODE=""
	;call the interface routine if it has not already been called
	I '$D(RTNLIST(RTN("RTN"))) Q:'$$DORTN^IBDFU1B(.RTN)
	;
	;keep a list of rtns called because some routines return multiple data elements
	S:'IBLISTPR RTNLIST(RTN("RTN"))=""
	;
	;now fetch the value, unless it's wordprocessing field
	I (RTN("DATATYPE")=1)!(RTN("DATATYPE")=2) S VALUE=$G(@IFARY@(RTN("NAME"))) F  S NODE=$O(@IFARY@(RTN("NAME"),NODE)) Q:NODE=""  S VALUE(NODE)=$G(@IFARY@(RTN("NAME"),NODE)) Q
	I (RTN("DATATYPE")=3)!(RTN("DATATYPE")=4),ITEM S VALUE=$G(@IFARY@(RTN("NAME"),ITEM)) F  S NODE=$O(@IFARY@(RTN("NAME"),ITEM,NODE)) Q:NODE=""  S VALUE(NODE)=$G(@IFARY@(RTN("NAME"),ITEM,NODE))
	Q
	;
ADDLINES	;if there are unused lines writes blank lines to the form
	;LNSUSED is the number of lines used already,HIO is the total number of lines allowed
	N I,LSPACING,NUMLEFT
	Q:HIO'>0
	I LNSUSED'<HIO Q
	S LSPACING=1
	I (SPACING=2)!(SPACING=3) S LSPACING=2
	S NUMLEFT=HIO-LNSUSED
	S NUMLEFT=NUMLEFT\LSPACING
	I IBLISTPR D
	.I ((XIO+WIO-1)>MAXX)!((YIO+(NUMLEFT*LSPACING)-1)>MAXY) D WARNING
	F I=1:1:NUMLEFT D DRWSTR^IBDFU(YIO+LNSUSED+(I*LSPACING)-1,XIO,$$HLINE^IBDFU(WIO))
	Q
WARNING	; prints a warning that data field prints outside of block - meant only for display while editing a form description
	Q:IBWARN
	W !,"Data Field="_FLDNAME_" in Block="_IBBLK("NAME")_" is printing",!,"outside of the block!"
	D PAUSE^IBDFU5
	S IBWARN=1
	Q
OVERFLOW(TYPE)	;keeps track of data that does not fit on the form
	;TYPE=="CURRENT" if other than a WP field will not fit
	;    ="NEXT" if the data is from a list and the last item indicator is set
	S ^TMP("IBDF",$J,"OVERFLOW",IBBLK,FIELD,TYPE)=$G(ITEM)
	Q

IBDF2B1
IBDF2B1	;ALB/CJM - ENCOUNTER FORM - (continuation of IBDF2B);12/15/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
TXTPRINT	;for printing a word-processing field
	;
	;if the this is not the first time this form is being printed and the data doesn't change then don't print it!
	Q:(('IBFIRST)&('RTN("CHANGES")))
	;
	N LINE,LNSUSED,SPACE,QUIT S LNSUSED=0 ;LNSUSED keeps track of number of available lines for text are used already
	S SPACE=$S(SPACING=2:2,1:1)
	I 'HIO!('WIO)!(XIO'=+XIO)!(YIO'=+YIO) Q
	I LABEL'="",(('IBCOMP)!($G(@IFARY@(RTN("NAME"),1,0))="")) D
	.D DRWSTR^IBDFU(YIO+SPACE-1,XIO,LABEL,DISPLAY)
	.D DRWSTR^IBDFU(YIO+SPACE-1,XIO+$L(LABEL)," "_$$HLINE^IBDFU(WIO-($L(LABEL)+1)))
	.S LNSUSED=SPACE
	I IBCOMP,($G(@IFARY@(RTN("NAME"),1,0))'="") D
	.D FORMAT^IBDFU6("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),RTN(""NAME""))",WIO,LABEL)
	.S (LNSUSED,LINE,QUIT)=0 F  S LINE=$O(^UTILITY($J,"W",1,LINE)) D  Q:QUIT
	..I 'LINE!(LNSUSED+SPACE>HIO) S QUIT=1 D:(LINE&('IBLISTPR)&RTN("FULL")) OVERFLOW^IBDF2B("CURRENT") Q
	..D DRWSTR^IBDFU(YIO+LNSUSED+(SPACE-1),XIO,$$PADRIGHT^IBDFU($G(^UTILITY($J,"W",1,LINE,0)),WIO))
	..S LNSUSED=LNSUSED+SPACE
	D ADDLINES^IBDF2B
	K ^UTILITY($J,"W",1)
	Q

IBDF2D
IBDF2D	;ALB/CJM - ENCOUNTER FORM - WRITE SELECTION LIST ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;prints a selection list
PRINTLST(LIST)	;writes the selection list to the print array
	;LIST - pointer to a selection list
	;
	N GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,QUIT,COL,CWIDTH,CUTLEFT,CUTRIGHT,EWIDTH,EOFFSET
	;CWIDTH=the width of the entries, including end "|"
	;EWIDTH= the width of entries, not including end "|"
	;EOFFSET=1 if entries end with "|", 0 otherwise
	;
	S (GROUPODR,SLCTNODR,GROUP,SLCTN,PRRGROUP,COL,QUIT,CUTLEFT,CUTRIGHT)=""
	Q:$$LSTDESCR^IBDFU1(.LIST)
	Q:LIST("BLK")'=IBBLK
	I 'LIST("NUMCOL") S LIST("NUMCOL")=8
	D SCDESCR^IBDFU1(.LIST,.CWIDTH,.EWIDTH,.EOFFSET)
	D GETCOL^IBDF2D1(.COL) I 'COL D  G EXIT
	.I IBLISTPR D
	..I $O(^IBE(357.3,"C",LIST,"")) W !!,"There are entries that do not fit on the LIST="_LIST("NAME"),!,"in  BLOCK="_IBBLK("NAME")_"! Column width="_CWIDTH,!,"Make more room to display all of the entries!",!
	..E  W !!,"The LIST="_LIST("NAME")_" in BLOCK="_IBBLK("NAME")_" requires at least "_CWIDTH_" columns",!,"in order to display!",!
	..D PAUSE^IBDFU5
	D DRWCOL^IBDF2D1(.COL)
	F  D  Q:QUIT
	.S PRRGROUP=GROUP
	.D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I 'SLCTN S QUIT=1 Q
	.I COL("ROWSLEFT")<1 D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	.D DISPLAY(SLCTN,.COL)
	S SLCTN="",QUIT=0 F  Q:'COL  D
	.F  Q:(COL("ROWSLEFT")<1)  D DISPLAY(SLCTN,.COL)
	.D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	I IBLISTPR,GROUP D NEXT(.GROUP,.GROUPODR,.SLCTNODR,.SLCTN) I SLCTN W !,"There are entries that do not fit on the ",LIST("NAME")," list!",!,"Column width="_CWIDTH,!,"Make more room to display all of the entries!",! D PAUSE^IBDFU5
EXIT	;
	Q
	;
NEXT(GROUP,GROUPODR,SLCTNODR,SLCTN)	;finds the next selction to be printed
	;** PARAMETERS - must be passed by reference **
	N QUIT S QUIT=0
	S GROUP=$G(GROUP),SLCTN=$G(SLCTN),GROUPODR=$G(GROUPODR),SLCTNODR=$G(SLCTNODR)
	F  Q:QUIT  D
	.I 'GROUP!(SLCTNODR="") D NXTGROUP(.GROUP,.GROUPODR) S (SLCTNODR,SLCTN)="" S:'GROUP QUIT=1 Q:QUIT  I COL D  Q:QUIT
	..I COL("ROWSLEFT")<1 D GETCOL^IBDF2D1(.COL) S:'COL QUIT=1 Q:QUIT  D DRWCOL^IBDF2D1(.COL)
	..D GROUPHDR(GROUP,.COL)
	.I SLCTNODR="" S SLCTNODR=$O(^IBE(357.3,"APO",LIST,GROUP,"")) I SLCTNODR="" Q
	.S SLCTN=$O(^IBE(357.3,"APO",LIST,GROUP,SLCTNODR,SLCTN)) S:SLCTN QUIT=1 S:'SLCTN SLCTNODR=$O(^IBE(357.3,"APO",LIST,GROUP,SLCTNODR))
	Q
NXTGROUP(GROUP,GROUPODR)	;
	;** PARAMETERS - must be passed by reference **
	;
	N QUIT S QUIT=0
	F  Q:QUIT  D
	.I (GROUPODR="")!('GROUP) S GROUPODR=$O(^IBE(357.4,"APO",LIST,GROUPODR)),GROUP="" I GROUPODR="" S QUIT=1 Q
	.S GROUP=$O(^IBE(357.4,"APO",LIST,GROUPODR,GROUP)) S:GROUP QUIT=1
	Q
	;
GROUPHDR(GROUP,COL)	;writes the group header to the list
	N HDR,WIDTH,OPTIONS,OFFSET,ULFLAG
	S ULFLAG=0
	S HDR=$P($G(^IBE(357.4,GROUP,0)),"^",1)
	Q:(HDR="BLANK")!(HDR="")
	S OPTIONS="",OFFSET=0,WIDTH=CWIDTH-(2*$L(LIST("ENDS")))
	S OFFSET=$L(LIST("ENDS"))
	S HDR=$E(HDR,1,WIDTH)
	I HDR'=" " D
	.I LIST("DGHDR")["B" S OPTIONS=OPTIONS_"B"
	.I LIST("DGHDR")["C" S OFFSET=OFFSET+((WIDTH-$L(HDR))\2)
	I LIST("ULSLCTNS"),($L(HDR)<WIDTH) D
	.N J S J=$S(LIST("ENDS")["|":1,1:0)
	.S ULFLAG=1
	.D DRWSTR^IBDFU($$Y,($$X)+J,"","U",CWIDTH-(2*J))
	I 'ULFLAG,((HDR'=" ")&(LIST("DGHDR")["U"))!LIST("ULSLCTNS") S OPTIONS=OPTIONS_"U"
	D DRWSTR^IBDFU($$Y,($$X)+OFFSET,HDR,OPTIONS)
	D DECREASE(.COL)
	Q
	;
DECREASE(COL)	;
	S COL("ROWSLEFT")=COL("ROWSLEFT")-1
	S COL("NEXTROW")=COL("NEXTROW")+1
	Q
X()	;
	Q COL("X")
Y()	;
	Q COL("NEXTROW")+COL("Y")
	;
DISPLAY(SLCTN,COL)	;writes the selection to the list
	N J,K,DA,ENTRY,VALUE,TYPE,UNDRLINE
	S UNDRLINE=$S(LIST("ULSLCTNS"):"U",1:"")
	F K=1:1:(+LIST("BTWN")+1) D  Q:COL("ROWSLEFT")<1
	.S ENTRY=""
	.F J=1:1:6 S TYPE=LIST("SCTYPE",J) D:TYPE'=""
	..S VALUE=""
	..I TYPE=1,K'>1,SLCTN S DA=$O(^IBE(357.3,SLCTN,1,"B",J,"")) S:DA VALUE=$P($G(^IBE(357.3,SLCTN,1,DA,0)),"^",2)
	..S:TYPE=2 VALUE=$S(K'>1:LIST("SCSYMBOL",J),1:$J("",LIST("SCW",J)))
	..S:TYPE=1 VALUE=$$PADRIGHT^IBDFU(VALUE,LIST("SCW",J))
	..S:ENTRY'="" ENTRY=ENTRY_LIST("SEP")
	..S ENTRY=ENTRY_VALUE
	.S ENTRY=$J("",$L(LIST("ENDS"))-EOFFSET)_ENTRY
	.D DRWSTR^IBDFU($$Y,($$X)+EOFFSET,ENTRY,$S(K'=(+LIST("BTWN")+1):"",1:UNDRLINE),EWIDTH)
	.D DECREASE(.COL)
	Q

IBDF2D1
IBDF2D1	;ALB/CJM - ENCOUNTER FORM - PRINT SELECTION LIST (cont'd) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
GETCOL(COL)	;finds next column
	;COL - array where output data stored,SHOULD BE PASSED BY REFERENCE
	;COL=last column number processed
	;COL("Y")=columns starting row relative to block
	;COL("X")=column's starting column relative to block
	;COL("H")=column's height, i.e., maximum # of selections
	;
	N BOX S BOX=$S(IBBLK("BOX")=2:0,1:1)
	S (CUTLEFT,CUTRIGHT)=0
	S COL=$G(COL)+1
	I COL=1 S COL("H")=+LIST("H",1),COL("X")=+LIST("X",1),COL("Y")=+LIST("Y",1)
	I COL>LIST("NUMCOL") S COL=0 Q
	I $G(LIST("Y",COL))'=+$G(LIST("Y",COL)) D
	.I COL=1 S COL("Y")=$S(IBBLK("HDR")="":BOX,1:2+BOX)
	.I COL'=1 Q  ;leave value from prior col
	E  S COL("Y")=$G(LIST("Y",COL))
	I $G(LIST("X",COL))'=+$G(LIST("X",COL)) D
	.I COL=1 S COL("X")=0 Q
	.S COL("X")=COL("X")+CWIDTH
	E  S COL("X")=$G(LIST("X",COL))
	I $G(LIST("H",COL))'=+$G(LIST("H",COL)) D
	.I COL=1 S COL("H")=IBBLK("H")
	.I COL'=1 Q  ;leave value from prior col
	E  S COL("H")=$G(LIST("H",COL))
	I BOX,LIST("SEP")'["|",COL("X")=0 S COL("X")=1
	I LIST("SEP")["|",BOX D
	.I COL("X")=0 S CUTLEFT=1
	.I COL("X")+CWIDTH=IBBLK("W") S CUTRIGHT=1
	I (COL("X")+CWIDTH-(CUTLEFT+CUTRIGHT))>IBBLK("W") S COL=0 Q
	I (COL("Y")+COL("H"))>(IBBLK("H")-(2*BOX)) S COL("H")=(IBBLK("H")-(COL("Y")+BOX))
	S COL("ROWSLEFT")=COL("H"),COL("NEXTROW")=0
	Q
	;
DRWCOL(COL)	;draws one column of the selection list except for its contents and rows
	N I,OP,SCHDR,FLAG,LINE
	S LINE=$S(LIST("SEP")["|":1,1:0)
	S SCHDR=0 ;this is a flag = 1 if any of the subcolumns have headers
	D:('CUTLEFT)&(LINE) DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D,COL("H"),"|")
	D:('CUTRIGHT)&(LINE) DRWVLINE^IBDFU($$Y^IBDF2D,$$X^IBDF2D+(CWIDTH-1),COL("H"),"|")
	I LIST("HDR")'="",(COL("ROWSLEFT")>0) D HEADER^IBDFU(LIST("HDR"),LIST("DHDR"),$$Y^IBDF2D,($$X^IBDF2D)+EOFFSET,EWIDTH) D DECREASE^IBDF2D(.COL)
	I COL("ROWSLEFT")>0 S FLAG=0 D
	.I LIST("ULSLCTNS"),LIST("CHDR")'="" D DRWSTR^IBDFU($$Y^IBDF2D,($$X^IBDF2D)+EOFFSET,LIST("CHDR"),"U",EWIDTH) S FLAG=1
	.I 'LIST("ULSLCTNS") D
	..F I=1:1:6 I LIST("SCTYPE",I)'="",LIST("SCHDR",I)'="" D DRWSTR^IBDFU($$Y^IBDF2D,(($$X^IBDF2D)+LIST("SCOS",I)),LIST("SCHDR",I),"U") S FLAG=1
	.D:FLAG DECREASE^IBDF2D(.COL)
	Q

IBDF2E
IBDF2E	;ALB/CJM - ENCOUNTER FORM (prints a lines and text areas to the form);MAR 18,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
PRNTLINE(LINE)	;prints a line ptd to by LINE
	N NODE,XPOS,YPOS,LEN,TYPE
	S NODE=$G(^IBE(357.7,LINE,0)) Q:NODE=""
	Q:$P(NODE,"^",6)'=IBBLK
	S XPOS=+$P(NODE,"^",2),YPOS=+$P(NODE,"^",3),TYPE=$P(NODE,"^",4),LEN=+$P(NODE,"^",5)
	I TYPE="H" D DRWSTR^IBDFU(YPOS,XPOS,"","U",LEN)
	I TYPE="V" D DRWVLINE^IBDFU(YPOS,XPOS,LEN,"|")
	Q
PRNTTEXT(TEXT)	;prints a line ptd to by LINE
	N NODE,XPOS,YPOS,W,HT,LINE
	S NODE=$G(^IBE(357.8,TEXT,0)) Q:NODE=""
	Q:$P(NODE,"^",2)'=IBBLK
	S XPOS=+$P(NODE,"^",3),YPOS=+$P(NODE,"^",4),W=+$P(NODE,"^",5),HT=+$P(NODE,"^",6)
	S LINE=0 F  S LINE=$O(^IBE(357.8,TEXT,1,LINE)) Q:'LINE!(LINE>HT)  S NODE=$G(^(LINE,0)) D DRWSTR^IBDFU(YPOS+LINE-1,XPOS,$E(NODE,1,W))
	Q

IBDF2F
IBDF2F	;ALB/CJM - ENCOUNTER FORM - PRINT FORM(sends to printer) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
LNPRINT(ARY,IBUNDRLN,IBCTRLS,IBGARY)	;the parms are arrays that should be passed by reference, holding the text,underlining,ctrl chars, and graphics
	;the arrays are printed
	;
	N CURY,CURX,NXTTXT,NXTX,LINE,NXTUL,PERPAGE,STRING,STARTY
	;
	S PERPAGE=$P($G(^IBE(357,IBFORM,0)),"^",10)
	S NXTUL=$O(@IBUNDRLN@("")),NXTTXT=$O(@ARY@(""))
	S STARTY=""
	S:NXTTXT'="" LINE=$G(@ARY@(NXTTXT))
	I ('PERPAGE)!(PERPAGE>IOSL) S PERPAGE=IOSL
	I $Y W @IOF
	I IBRASTER S (DX,DY)=0 X IOXY K DX,DY
	F CURY=0:1 D  I NXTUL'>0,NXTTXT'>0 Q
	.I (CURY>0)&('(CURY#PERPAGE)) D
	..I ((NXTTXT'="")!(NXTUL'="")) D:IBGRPHCS PGRPHCS(.STARTY,CURY) W @IOF
	.E  I (CURY#PERPAGE) W !
	.I CURY=NXTTXT D
	..S CURX=0,NXTX=0 F  S NXTX=$O(@IBCTRLS@(NXTTXT,NXTX)) Q:'NXTX  D
	...W $E(LINE,+CURX,NXTX),$$CTRLS^IBDFU($G(@IBCTRLS@(NXTTXT,NXTX)))
	...S CURX=NXTX+1
	..S STRING=$E(LINE,CURX,240) W:STRING'="" STRING
	..S NXTTXT=$O(@ARY@(NXTTXT)) S:NXTTXT LINE=$G(@ARY@(NXTTXT))
	.D:CURY=NXTUL UNDRLINE
	;
	D:IBGRPHCS PGRPHCS(STARTY,0)
	W @IOF
	Q
	;
UNDRLINE	;
	Q:IBCRT
	N UL
	S UL=$G(@IBUNDRLN@(NXTUL)) W:UL'="" $C(13),UL
	S NXTUL=$O(@IBUNDRLN@(NXTUL))
	Q
PGRPHCS(STARTY,LASTY)	;print graphics - only for raster devices
	N DX,DY,GRPHCS,LINE
	W IOG1
	S (DX,DY)=0 X IOXY
	S LINE=STARTY F  S LINE=$O(@IBGARY@(LINE)) Q:(LINE="")!($G(LASTY)&(LINE>LASTY))  S DX="" F  S DX=$O(@IBGARY@(LINE,DX)) Q:DX=""  S GRPHCS=$G(@IBGARY@(LINE,DX)),GRPHCS=$$GRPHCS^IBDFU(GRPHCS) I GRPHCS'="" S DY=LINE#PERPAGE X IOXY W GRPHCS
	S STARTY=LASTY
	W IOG0
	Q

IBDF3
IBDF3	;ALB/CJM - ENCOUNTER FORM - EDIT SELECTION LIST ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EDITLIST	;expects IBBLK to be defined
	N GRPIDX,IBLIST,SAVELINE
	S SAVELINE=VALMBG,VALMBCK="R"
	D SELECT
	I IBLIST D
	.K @VALMAR ;kill the list processor array containing the block - it'll be rebuilt anyway - trying to keep memory use under partitiion size
	.D EN^VALM("IBDF DISPLAY GROUPS FOR EDIT")
	.I '$G(IBFASTXT) D
	..D IDXBLOCK^IBDFU4(BLKIDX)
	..S VALMBCK="R",VALMBG=SAVELINE
	.I $G(IBFASTXT) D IDXBLOCK^IBDFU4(BLKIDX,0,1)
	Q
ONENTRY	;
	S GRPIDX="^TMP(""IB"",$J,""GROUPS"")"
	D IDXGRP
	Q
ONEXIT	;
	K @GRPIDX
	Q
SELECT	;
	S IBLIST=""
	Q:'$G(IBBLK)
	K DIC S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
	D IX^DIC K DIC
	S:+Y>0 IBLIST=+Y
	Q
ADDBLANK()	;
	N GRP
	S GRP="" F  S GRP=$O(^IBE(357.4,"D",IBLIST,GRP)) Q:'GRP  Q:$P(^IBE(357.4,GRP,0),"^")="BLANK"
	I 'GRP D
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",DIC(0)="",X="BLANK",DIC(0)=""
	.D FILE^DICN K DIC
	.S GRP=$S(+Y<0:"",1:+Y)
	I GRP K DA,DIE S DA=GRP,DIE="^IBE(357.4,",DR=".02////0;.03////"_IBLIST D ^DIE K DIE,DA,DR
	Q GRP
IDXGRP	;build an index of groups in print order for list processor
	N GRP,GRPODR
	K @GRPIDX
	S VALMCNT=0
	S GRPODR="" F  S GRPODR=$O(^IBE(357.4,"APO",IBLIST,GRPODR)) Q:GRPODR=""  D
	.S GRP="" F  S GRP=$O(^IBE(357.4,"APO",IBLIST,GRPODR,GRP)) Q:'GRP  D
	..S VALMCNT=VALMCNT+1
	..S @GRPIDX@(VALMCNT,0)=$$DISPLAY(GRP,VALMCNT),@GRPIDX@("IDX",VALMCNT,VALMCNT)=GRP
	..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
LMGRPHDR	;sets the screen hdr
	S VALMHDR(1)="PRINT GROUPS CURRENTLY DEFINED FOR '"_$$LISTNAME_"' SELECTION LIST"
	Q
DISPLAY(GRP,ROW)	;
	N NODE0,NAME
	S NODE0=$G(^IBE(357.4,GRP,0)),NAME=$P(NODE0,"^",1)
	S:NAME="BLANK" NAME="BLANK (Not Displayed)"
	Q $$PADRIGHT^IBDFU(ROW,6)_$J($P(NODE0,"^",2),6)_$J("",7)_$$PADRIGHT^IBDFU(NAME,40)_$J($$SLCTNCNT(GRP),6)_" selection(s)"
SLCTNCNT(GRP)	;
	N CNT,SLCTN
	S CNT=0,SLCTN=""
	F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  S CNT=CNT+1
	Q CNT
LISTNAME()	;
	Q $P($G(^IBE(357.2,IBLIST,0)),"^",1)
ADDGRP	;
	N NAME,QUIT,GRP
	S QUIT=0
	F  D  Q:QUIT
	.K DIR S DIR(0)="357.4,.01O",DIR("B")="" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	.S NAME=Y
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=NAME,DIC(0)=""
	.D FILE^DICN K DIC,DIE,DA
	.I +Y<0 W !,"Unable to create a new record!" D PAUSE^VALM1 S QUIT=1 Q
	.I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02;.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
	.W !,"Now Another!",!
	D IDXGRP
	S VALMBCK="R"
	Q
	;
ADDEMPTY	;adds a blank group - a place holder that takes up space on the form
	;
	N ORDER,QUIT,GRP
	S QUIT=0
	F  D  Q:QUIT
	.K DIR S DIR(0)="357.4,.02O",DIR("B")="" D ^DIR K DIR I (Y="")!$D(DIRUT) S QUIT=1 Q
	.S ORDER=Y
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.4,",X=" ",DIC(0)=""
	.D FILE^DICN K DIC,DIE,DA
	.I +Y<0 W !,"Unable to create a new group record!" D PAUSE^VALM1 S QUIT=1 Q
	.I +Y>0 K DA S DA=+Y,DIE="^IBE(357.4,",DIE("NO^")="Any value",DR=".02////"_ORDER_";.03////"_IBLIST D ^DIE K DIC,DIE,DR,DA
	.W !,"Now Another!",!
	D IDXGRP
	S VALMBCK="R"
	Q
EDTSLCTN	;
	N SEL,GRP S SEL=""
	I $G(VALMCNT) D
	.D EN^VALM2($G(XQORNOD(0)),"OS")
	.S SEL=$O(VALMY(""))
	I SEL="" D
	.S GRP=$$ADDBLANK Q:'GRP
	E  S GRP=$G(@VALMAR@("IDX",SEL,SEL))
	D:GRP SLCTNS^IBDF4(GRP),IDXGRP
	S VALMBCK="R"
	Q
EDITGRP	;
	N SEL,GRP
	S VALMBCK="R"
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S GRP=$G(@VALMAR@("IDX",SEL,SEL))
	.D:GRP
	..K DIE,DA S DIE=357.4,DA=GRP,DR=".01;.02" D ^DIE
	..I '$D(DA) D DELSLCTN
	..K DIE,DA,DR,DIC
	D IDXGRP
	S VALMBCK="R"
	Q
DELSLCTN	;deletes a group's selections
	N SLCTN
	S SLCTN="",DIK="^IBE(357.3,"
	F  S SLCTN=$O(^IBE(357.3,"D",GRP,SLCTN)) Q:'SLCTN  I $P($G(^IBE(357.3,SLCTN,0)),"^",4)=GRP K DA S DA=SLCTN D ^DIK
	K DIK,DA
	Q
DELGRP	;delete a group and all of its selections
	N SEL,GRP
	S VALMBCK="R"
	D EN^VALM2($G(XQORNOD(0)))
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S GRP=$G(@VALMAR@("IDX",SEL,SEL))
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.4,GRP,0)),"^"))
	.I GRP D DELSLCTN K DA S DIK="^IBE(357.4,",DA=GRP D ^DIK K DIK
	D IDXGRP
	S VALMBCK="R"
	Q

IBDF4
IBDF4	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
SLCTNS(IBGRP)	;IBGRP is a ptr to a selection group
	Q:'$G(IBGRP)
	N SLCTNIDX,LIST,RTN
	S LIST=$P($G(^IBE(357.4,IBGRP,0)),"^",3) Q:'LIST!(LIST'=IBLIST)
	S SLCTNIDX="^TMP(""IB"",$J,""SELECTIONS"")"
	Q:$$LSTDESCR^IBDFU1(.LIST)
	S RTN=LIST("RTN")
	D ORTNDSCR^IBDFU1B(.RTN),RTNDSCR2^IBDFU1B(.RTN)
	D EN^VALM("IBDF EDIT GROUP'S SELECTIONS") ;call the list manager
	Q
ONENTRY	;entry code for list manager
	D IDXSLCTN
	Q
ONEXIT	;exit code for the list manager
	K @SLCTNIDX
	Q
	;
IDXSLCTN	;build an array of selections in print order for the list processor
	N SLCTN,ODR
	K @SLCTNIDX
	S ODR="",VALMCNT=0
	F  S ODR=$O(^IBE(357.3,"APO",LIST,IBGRP,ODR)) Q:ODR=""  D
	.S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"APO",LIST,IBGRP,ODR,SLCTN)) Q:'SLCTN  D
	..S VALMCNT=VALMCNT+1
	..S @SLCTNIDX@(VALMCNT,0)=$$DISPLAY(SLCTN,VALMCNT),@SLCTNIDX@("IDX",VALMCNT,VALMCNT)=SLCTN
	..D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
LMGRPHDR	;header for the screen
	S VALMHDR(1)="SELECTIONS CURRENTLY DEFINED FOR '"_$$GRPNAME_"' PRINT GROUP"
	Q
GRPNAME()	;the name of the selection group
	Q $P($G(^IBE(357.4,IBGRP,0)),"^",1)
	;
DISPLAY(SLCTN,COUNT)	;returns a line to display to the list containing a selection - SLCTN is a ptr to the selectin, COUNT is the number of the selection on the list
	N SC,SCDA,VAL,RET,W,NODE,ORDER
	;W - an array cotaining the widths of the subcolumns that contain text
	S VAL=""
	S RET=$$PADRIGHT^IBDFU(COUNT,6)
	S NODE=$G(^IBE(357.3,SLCTN,0))
	S ORDER=$P(NODE,"^",5),RET=RET_$J(ORDER,6,2)
	S SC="" F SC=1:1:6 S SCDA=$O(^IBE(357.3,SLCTN,1,"B",SC,"")) D
	.I LIST("SCTYPE",SC)=1 S W(SC)=LIST("SCW",SC)
	.S:$G(W(SC)) VAL=$$PADRIGHT^IBDFU($S(SCDA:$P($G(^IBE(357.3,SLCTN,1,SCDA,0)),"^",2),1:""),W(SC))
	.S:VAL'="" RET=RET_" | "_VAL
	.S VAL=""
	Q RET
ADDSLCTN	;allows the user to add a selection to the selection group
	N QUIT,VAL,IFNAME,ARY,SUB
	;@ARY is the global where the package interface puts the data
	;IFNAME - the name of the entry in the package interface file
	;
	S VALMBCK="R"
	D FULL^VALM1
	I (RTN("ACTION")'=3)!(RTN("DATATYPE")'=2) D NOGOOD G ADDEXIT
	S IFNAME=RTN("NAME")
	I IFNAME="" D NOGOOD G ADDEXIT
	S ARY="^TMP(""IB"",$J,""INTERFACES"",IFNAME)"
	K @ARY
	S QUIT=0 F  D  Q:QUIT  W !,"Now for another!"
	.I '$$DORTN^IBDFU1B(.RTN) S QUIT=1 D NOGOOD Q
	.I '$D(@ARY) S QUIT=1 Q
	.S VAL=$G(@ARY)
	.D ADDREC(VAL,.QUIT) ;edits and adds the selection
ADDEXIT	;
	D IDXSLCTN
	Q
ADDREC(VAL,QUIT)	;allows the user to number the selection, edit the editable subcolumns, then adds the record - sets QUIT=1 if user quits
	N ORDER,SUB,PIECE,COUNT,SLCTN,NODE
	K DIR S DIR(0)="357.3,.05" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S ORDER=+Y
	F SUB=1:1:6 D  Q:QUIT
	.I LIST("SCTYPE",SUB)=1 S PIECE=LIST("SCPIECE",SUB) I PIECE,LIST("SCW",SUB) D
	..S VAL(SUB)=$P(VAL,"^",PIECE)
	..Q:'LIST("SCEDITABLE",SUB)
	..W !!,"Subcolumn Header: "_LIST("SCHDR",SUB) K DIR S DIR(0)="FO^0:"_LIST("SCW",SUB),DIR("A")="Edit Subcolumn "_SUB,DIR("B")=VAL(SUB)
	..D ^DIR K DIR S:$D(DTOUT)!$D(DUOUT) QUIT=1 Q:QUIT  S VAL(SUB)=Y I PIECE=1,X="" S QUIT=1
	Q:QUIT
	;we have all the data needed to add the selection - so add it
	S NODE=$S($P(VAL,"^")'="":$P(VAL,"^"),1:ORDER)_"^^"_LIST_"^"_IBGRP_"^"_ORDER
	K DIC,DD,DO,DINUM S DIC="^IBE(357.3,",X=$P(NODE,"^",1),DIC(0)="FL"
	D FILE^DICN K DIC,DIE,DA
	S SLCTN=$S(+Y<0:"",1:+Y)
	I 'SLCTN W !,"Unable to create a new selection record!" D PAUSE^VALM1 S QUIT=1 Q
	S ^IBE(357.3,SLCTN,0)=NODE
	;add the subcolumn value multiple
	S COUNT=0 F SUB=1:1:6 I $G(VAL(SUB))'="" S COUNT=COUNT+1,^IBE(357.3,SLCTN,1,COUNT,0)=SUB_"^"_VAL(SUB)
	S ^IBE(357.3,SLCTN,1,0)="^357.31AI^"_COUNT_"^"_COUNT
	K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
	Q
NOGOOD	;
	W !,"The package interface routine for selection is not properly defined" D PAUSE^VALM1
	Q

IBDF4A
IBDF4A	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(editing group's selections - continued from IBDF4) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EDIT	;allows editing of an existing selection
	N SEL,SUB,SLCTN,SC
	D EN^VALM2($G(XQORNOD(0)),"S")
	K DIE,DA
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.;first allow the user to edit the order of the selection
	.K DIE,DA S DIE=357.3,(SLCTN,DA)=$G(@VALMAR@("IDX",SEL,SEL)),DR=".05;S CONT=1" S CONT=0 D ^DIE
	.;now allow the user to edit editable subcolumns - CONT=0 means the user up-arrowed out, so stop
	.I CONT S SUB=0 F  S SUB=$O(^IBE(357.3,SLCTN,1,SUB)) Q:'SUB  D
	..S SC=+$G(^IBE(357.3,SLCTN,1,SUB,0)) I LIST("SCTYPE",SC)=1,LIST("SCEDITABLE",SC) S DIE="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SUB,DR=".02;S CONT=1",CONT=0 W !!,"Editing Subcolumn "_SC_": Header="_LIST("SCHDR",SC) D ^DIE I 'CONT Q
	K DIE,DA,DR
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
EDITEXIT	;
	Q
DELETE	;allows the user to select selections to delete
	N SEL
	D EN^VALM2($G(XQORNOD(0)))
	K DA
	S SEL="" F  S SEL=$O(VALMY(SEL)) Q:'SEL  D
	.S DIK="^IBE(357.3,",DA=$G(@VALMAR@("IDX",SEL,SEL))
	.Q:'$$RUSURE^IBDFU5("Selection #"_SEL)
	.D ^DIK
	.D KILL^VALM10(SEL)
	K DIK,DA
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q
ADDBLANK	;allows the user to add a dummy selection to the selection group
	;i.e., a place holder that will not actually print a selection
	;
	N QUIT,ORDER,SLCTN,NODE
	S QUIT=0 F  D  Q:QUIT  W !,"Now for another!"
	.K DIR S DIR(0)="357.3,.05O" D ^DIR K DIR I (Y="")!$D(DIRUT) S QUIT=1 Q
	.S ORDER=+Y
	.;we have all the data needed to add the selection - so add it
	.S NODE=ORDER_"^"_1_"^"_LIST_"^"_IBGRP_"^"_ORDER
	.K DIC,DD,DO,DINUM S DIC="^IBE(357.3,",X=ORDER,DIC(0)="FL"
	.D FILE^DICN K DIC,DIE,DA
	.S SLCTN=$S(+Y<0:"",1:+Y)
	.I 'SLCTN W !,"Unable to create the place holder!" D PAUSE^VALM1 S QUIT=1 Q
	.S ^IBE(357.3,SLCTN,0)=NODE
	.K DA S DA=SLCTN,DIK="^IBE(357.3," D IX^DIK K DIK,DA
	;
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q

IBDF5
IBDF5	;ALB/CJM - ENCOUNTER FORM (edit a form);NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;displays the form for editing using the list processor
	;
	;these variables should always be defined while editing a form
	;IBFORM - the form
	;FORMIDX - the name of the array containing the form
	;IBFORMHT,IBFORMW - form ht and width
INIT	;
	S FORMIDX="^TMP(""IB"",$J,""FORM"")"
	D IDXFORM^IBDF5A(0)
	Q
EXIT	;
	K @FORMIDX
	Q
HDR	;the screen header, a ruler
	S VALMHDR(1)=$$PADRIGHT^IBDFU("",4) ;VALMHDR(2)=VALMHDR(2)_0
	F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
	Q
DELETE	 ;allows user to select a block for deletion
	N IBBLK,SAVELINE,TOP,BOT
	S VALMBCK="R",SAVELINE=$G(VALMBG)
	S VALMBG=SAVELINE
	D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL)
	Q:'IBBLK
	Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.1,IBBLK,0)),"^"))
	D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
	D DLTBLK^IBDFU3(IBBLK,IBFORM,357.1)
	S VALMBCK="R"
	D IDXFORM^IBDF5A(0,TOP,BOT)
	Q
	;
MOVE	;allows the user to select a block and move it
	N IBBLK,NODE0,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,BOT1,TOP2,BOT2
	S VALMBCK="R"
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
	I IBBLK D
	.S NODE0=$G(^IBE(357.1,IBBLK,0))
	.S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
	.S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
	.;I IBFORMHT'>BLKHT,STARTROW=0 W !,"The block is as tall as the form - it CANNOT be moved up or down!" D PAUSE^IBDFU5
	.I STARTROW!(IBFORMHT>BLKHT) K DIR S DIR(0)="NA^1:"_(IBFORMHT-BLKHT+1)_":0",DIR("A")="Move the TOP MARGIN of the block to which row?: ",DIR("B")=STARTROW+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTROW=X-1
	.;I IBFORMW'>BLKWIDTH,STARTCOL=0 W !,"The block is as wide as the form - it CANNOT be moved sideways!",! D PAUSE^IBDFU5
	.I STARTCOL!(IBFORMW>BLKWIDTH) K DIR S DIR(0)="NA^1:"_(IBFORMW-BLKWIDTH+1)_":0",DIR("A")="Move the LEFT MARGIN of the block to which column?: ",DIR("B")=STARTCOL+1 D ^DIR K DIR Q:$D(DIRUT)  S STARTCOL=X-1
	.K DIE,DA S DIE=357.1,DA=IBBLK,DR=".04////^S X=STARTROW;.05////^S X=STARTCOL" D ^DIE K DIE,DA
	.S VALMBCK="R"
	.D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	.D IDXFORM^IBDF5A(0,TOP1,BOT1)
	.S VALMBG=STARTROW-7 S:VALMBG<1 VALMBG=1
	.;D REFRESH^VALM
	Q
RESIZE	;allows user to select a block & re-size it
	N IBBLK,BLKWIDTH,BLKHT,STARTCOL,STARTROW,TOP1,TOP2,BOT1,BOT2
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,5)
	I IBBLK D
	.;D RESET^VALM4:VALMCC
	.D NOWSIZE S TOP1=STARTROW,BOT1=(TOP1+BLKHT)-1
	.;D REFRESH^VALM
	.D NEWSIZE
	.D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2) S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2) S BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	.D IDXFORM^IBDF5A(0,TOP1,BOT1)
	S VALMBCK="R"
	Q
NOWSIZE	;what size is the block, and where does it start? returns BLKWIDTH,BLKHT,STARTROW,STARTCOL
	N NODE0
	S NODE0=$G(^IBE(357.1,IBBLK,0))
	S BLKWIDTH=+$P(NODE0,"^",6),BLKHT=+$P(NODE0,"^",7),STARTCOL=+$P(NODE0,"^",5),STARTROW=+$P(NODE0,"^",4)
	Q
NEWSIZE	;allows user to change the size of a block
	K DIR S DIR(0)="NA^"_(STARTROW+1)_":"_(IBFORMHT)_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=(STARTROW+BLKHT) D ^DIR K DIR Q:$D(DIRUT)  S BLKHT=(X-STARTROW)
	K DIR S DIR(0)="NA^"_(STARTCOL+1)_":"_IBFORMW_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=(STARTCOL+BLKWIDTH) D ^DIR K DIR Q:$D(DIRUT)  S BLKWIDTH=(X-STARTCOL)
	K DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=BLKWIDTH;.07////^S X=BLKHT" D ^DIE K DIE
	D UNCMPILE^IBDF2A(IBBLK)
	Q
SHIFT	;allows the user to shift a group of blocks within a rectangular region on the form
	S VALMBCK="R"
	D SHIFT^IBDF10("B")
	D IDXFORM^IBDF5A(0)
	Q

IBDF5A
IBDF5A	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
IDXFORM(COMPILE,IBTOPLN,IBBOTLN)	;creates an array for the list processor
	;containing the image of the form - or just rebuilds a portion of the
	;array - if IBTOPLN,IBBOTLN defined they specify a range within which to
	;update the array - otherwise, create it from scratch
	;If COMPILE=1 compile blocks
	;other input varibles - IBFORM,IBCOMP
	;
	N IBBLK,IBARY,NODE,BLKTOP
	W !,"... BUILDING THE FORM ..."
	S $P(^IBE(357,IBFORM,0),"^",5)=0
	S VALMSG="[Editing "_$P($G(^IBE(357,IBFORM,0)),"^")_"]  ?? for more actions"
	S IBARY=FORMIDX
	S COMPILE=+$G(COMPILE)
	I ('$D(IBTOPLN))!('$D(IBBOTLN)) D
	.K @IBARY D KILL^VALM10()
	.S NODE=$G(^IBE(357,IBFORM,0))
	.S IBPGHT=$P(NODE,"^",10),IBPAGES=$P(NODE,"^",11),IBFORMW=$P(NODE,"^",9)
	.S:'IBPAGES IBPAGES=1
	.S IBFORMHT=IBPAGES*IBPGHT,VALMCNT=IBFORMHT+1
	.W "."
	.D BLNKFORM(0,IBFORMHT-1,IBFORMW)
	.S I="",$P(I,"~",IBFORMW+1)="~"
	.S @IBARY@(IBFORMHT+1,0)="    "_I
	.W "."
	E  D
	.F LN=IBTOPLN+1:1:IBBOTLN+1 D KILL^VALM10(LN)
	.D BLNKFORM(IBTOPLN,IBBOTLN,IBFORMW) W "."
	.I IBTOPLN'>IBFORMHT,IBBOTLN>(IBFORMHT-1) S I="",$P(I,"~",IBFORMW+1)="~",@IBARY@(IBFORMHT+1,0)="    "_I
	S IBBLK="" F  S IBBLK=$O(^IBE(357.1,"C",IBFORM,IBBLK)) Q:'IBBLK  D
	.I $D(IBTOPLN),$D(IBBOTLN) Q:'$$BETWEEN(IBBLK,IBTOPLN,IBBOTLN,.BLKTOP)
	.I '($D(IBTOPLN)&$D(IBBOTLN)) S BLKTOP=$P($G(^IBE(357.1,IBBLK,0)),"^",4) Q:BLKTOP=""
	.Q:$$BLKDESCR^IBDFU1B(.IBBLK)  D DRWBLOCK^IBDF2A(.IBBLK,COMPILE,COMPILE) W "."
	Q
BETWEEN(BLOCK,TOP1,BOT1,BLKTOP)	;determines if the block=BLOCK falls between TOP1 and BOT!, also returns BLKTOP
	N TOP2,BOT2 S (TOP2,BOT2)=""
	D TOPNBOT^IBDFU5(BLOCK,.TOP2,.BOT2) S BLKTOP=TOP2
	I ((TOP2>BOT1)&(BOT2>BOT1))!((TOP2<TOP1)&(BOT2<TOP1)) Q 0
	Q 1
BLNKFORM(TOP,BOT,W)	;
	;creates an array of lines the length of the form with nothing but
	;line numbers on the left
	N I
	F I=TOP+1:1:BOT+1 S @IBARY@(I,0)=$S(((I>1)&(I#$S($G(IBPGHT):IBPGHT,1:1000)=1)):"NP >",1:$J((I)#1000,3,0)_" ")_$J("",W)_":" D CNTRL^VALM10(I,4,1,IORVON,IORVOFF)
	Q

IBDF5B
IBDF5B	;ALB/CJM - ENCOUNTER FORM (edit a form - CONTINUED);JUL 27,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
EDITBLK	;allows the user to edit everything about the block
	;allows user to discard or save changes to the block
	;
	;If IBBLK and IBBLK2 are used to point to two copies of the block, one in the workspace and the other on the form
	;the copy on the form is not edited, the copy in the workspace is
	; 
	N IBBLK,SAVELINE,BLKIDX,TOP1,TOP2,BOT1,BOT2,IBBLK2,IBTKODR,IBJUNK,IFSAVE,IBMEMARY
	S SAVELINE=VALMBG
	D FULL^VALM1
	S IBBLK=$$SLCTBLK^IBDFU8(IBFORM,IOSL,"HEADER") ;select the block
	I IBBLK D
	.S (IBBLK2,IBTKODR,IBJUNK)=""
	.D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" Q  ;sets IBBLK to the work copy, IBBLK2 to the copy actually on the form
	.D TOPNBOT^IBDFU5(IBBLK,.TOP1,.BOT1)
	.D EN^VALM("IBDF FORM BLOCK EDIT") ;call list processor
	.I IBBLK,IBBLK2 D
	..S IFSAVE=$$ASKSAVE
	..I IFSAVE D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR) S IBBLK=IBBLK2,IBBLK2=""
	..I 'IFSAVE D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2=""
	.I '$G(IBFASTXT) D
	..S VALMBG=SAVELINE
	..D TOPNBOT^IBDFU5(IBBLK,.TOP2,.BOT2)
	..S TOP1=$S(TOP1<TOP2:TOP1,1:TOP2),BOT1=$S(BOT1>BOT2:BOT1,1:BOT2)
	..D IDXFORM^IBDF5A(0,TOP1,BOT1)
	S VALMBCK="R"
	Q
DLTCOPY(WORKCOPY)	;deletes the block=WORKCOPY and unlocks it
	L -^IBE(357.1,WORKCOPY)
	D DLTBLK^IBDFU3(WORKCOPY,IBJUNK,357.1)
	S WORKCOPY=""
	Q
SAVECOPY(WORKCOPY,FORMCOPY,IBTKODR)	;deletes the block=FORMCOPY,adds WORKCOPY to IBFORM
	;NOTE: upon completion WORKCOPY="",FORMCOPY points to what WORKCOPY initially did
	Q:('FORMCOPY)!('WORKCOPY)  ;something wrong!
	I IBTKODR D
	.S $P(^IBE(357.1,WORKCOPY,0),"^",14)=IBTKODR
	.S DIK="^IBE(357.1,",DA=WORKCOPY,DIK(1)=.14 D EN1^DIK
	S $P(^IBE(357.1,WORKCOPY,0),"^",2)=IBFORM
	K ^IBE(357.1,"C",IBJUNK,WORKCOPY)
	S DIK="^IBE(357.1,",DA=WORKCOPY,DIK(1)=.02 D EN1^DIK
	K DIK,DA
	L -^IBE(357.1,WORKCOPY)
	D DLTBLK^IBDFU3(FORMCOPY,IBFORM,357.1)
	S FORMCOPY=WORKCOPY,WORKCOPY=""
	Q
COPYBLK(IBBLK,FORMCOPY,WORKCOPY,IBTKODR,IBJUNK)	;copys the IBBLK to the WORKCOPY, then puts sets FORMCOPY=IBBLK
	;IBJUNK set to the form=GARBAGE, IBTKODR set to the original value of the field TOOL KIT ORDER
	N NODE,NAME,BLK
	S WORKCOPY="",FORMCOPY=IBBLK
	Q:'IBBLK  ;no block to copy!
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S NAME=$P(NODE,"^"),IBTKODR=$P(NODE,"^",14)
	Q:NAME=""
	;find the form=GARBAGE, used as a work area
	S IBJUNK=+$O(^IBE(357,"B","GARBAGE",""))
	;copy the block to the work area, where editing will occur
	S IBTKODR=$P($G(^IBE(357.1,IBBLK,0)),"^",14) ;save the tool kit order
	S WORKCOPY=$$COPYBLK^IBDFU2(IBBLK,IBJUNK,357.1,357.1,"","",0) ;mark the working copy as not being in the tk
	I 'WORKCOPY W !,"Unable to edit the block!" D PAUSE^IBDFU5 Q
	;lock the block
	L +^IBE(357.1,WORKCOPY):1
	Q
ASKSAVE()	;asks the user if changes to the block should be saved
	;returns 1 for yes, 0 for no
	K DIR S DIR(0)="Y",DIR("A")="Save changes to the block",DIR("B")="YES"
	D ^DIR K DIR
	Q:$D(DIRUT) 0
	Q Y
DECIDE	;allows user to either save or discard changes to the block being edited
	N WHAT
	S WHAT=$$DOWHAT
	I WHAT="S" D SAVECOPY(.IBBLK,.IBBLK2,IBTKODR),COPYBLK(IBBLK2,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) S VALMBCK="" I 'IBBLK S IBBLK=IBBLK2,IBBLK2="" S VALMBCK="Q"
	I WHAT="D" D DLTCOPY(IBBLK) S IBBLK=IBBLK2,IBBLK2="" D COPYBLK(IBBLK,.IBBLK2,.IBBLK,.IBTKODR,.IBJUNK) D
	.I IBBLK S VALMBCK="R" D IDXBLOCK^IBDFU4(BLKIDX,1)
	.I 'IBBLK S IBBLK=IBBLK2,IBBLK2="",VALMBCK="Q"
	Q
DOWHAT()	;returns "D" for discard, "S" for save, "" for do nothing
	K DIR S DIR(0)="SB^S:Save Changes;D:Discard Changes;",DIR("A")="Save or Discard the recent changes to the block?"
	D ^DIR K DIR
	Q:$D(DIRUT) ""
	Q Y

IBDF5C
IBDF5C	;ALB/CJM - ENCOUNTER FORM (creating a new block) ;MARCH 22,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
NEWBLOCK	;adds a new block, expects IBFORM to be defined
	N IBBLK,TOP,BOT
	S VALMBCK="R"
	S IBBLK=$$CREATE()
	I IBBLK D
	.D TOPNBOT^IBDFU5(IBBLK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(0,TOP,BOT)
	Q
CREATE()	;creates the new block and allows the user to edit it
	;INPUTS: expects IBFORM to be defined
	;        expects IBTKBLK to be defined - IBTKBLK=1 means add to tk
	;returns IBBLK
	N NAME,IBBLK,NODE,IBDFDONE,IBBG,IBLFT
	S IBBG=1,IBLFT=5
	;IBDFDONE - a flag used in the input template to indicate if the input template was completed
	S VALMBCK="R"
	I '$G(IBTKBLK) S IBBG=+$G(VALMBG),IBLFT=+$G(VALMLFT)
	S NAME=$$NEWNAME Q:NAME=-1 ""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.1,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S IBBLK=+Y
	I 'IBBLK D
	.W !,"Unable to create a new block!" K DIC,DIE D PAUSE^IBDFU5
	I IBBLK D
	.;delete everything in the block - it should be empty
	.D DLTCNTNT^IBDFU3(IBBLK,357.1)
	.;set the current position of the block to the upper left-hand corner of the screen as the default
	.S $P(^IBE(357.1,IBBLK,0),"^",4,5)=(IBBG-1)_"^"_(IBLFT-5)
	.;now let the user edit the new block - header,name,outline,etc.
	.K DIE,DA S DIE=357.1,DA=IBBLK,DR="[IBDF NEW EMPTY BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIC,DIE,DR,DA
	.I 'IBDFDONE S DIK="^IBE(357.1,",DA=IBBLK K DA(1) D ^DIK K DIK,DA Q
	Q IBBLK
NEWNAME()	;
	K DIR S DIR(0)="357.1,.01A",DIR("A")="New Block Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
REDRAW	;redraws the ;entire form
	S VALMBCK="R"
	D IDXFORM^IBDF5A(1)
	Q
COPYBLK	;copies a block from another form,whether in the toolkit or not, expects IBFORM=current work form  to be defined
	N IBBLK,TOP,BOT,NEWBLOCK
	S IBBLK=$$SELECT2^IBDF13("")
	I IBBLK S NEWBLOCK=$$COPYBLK^IBDFU2(IBBLK,IBFORM,357.1,357.1,$$CURX^IBDFU4,$$CURY^IBDFU4,0) I NEWBLOCK D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.D POS^IBDFU4(NEWBLOCK)
	.D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(0,TOP,BOT)
	S VALMBCK="R"
	Q
	;
VIEW	;toggles between viewing form with data and without data
	N STARTVAL,IBARY
	S STARTVAL=IBCOMP
	I 'IBCOMP D
	.D FULL^VALM1
	.S DFN=$$PATIENT
	.I DFN S IBCOMP=1,IBAPPT=DT
	E  I IBCOMP S IBCOMP=0,(IBAPPT,DFN)=""
	I STARTVAL'=IBCOMP S IBARY=FORMIDX D DRWFLDS^IBDF2A(IBCOMP) K ^TMP("IB",$J,"INTERFACES")
	S VALMBCK="R"
	Q
	;
PATIENT()	;asks for a patient, returns the DFN
	K DIR S DIR(0)="P^2:EM",DIR("A")="Test with what Patient"
	D ^DIR K DIR I $D(DIRUT)!(+Y<1) Q 0
	Q +Y

IBDF6
IBDF6	;ALB/CJM - ENCOUNTER FORM - ENTRY FOR BUILDING A FORM ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
FORMLIST	;
	N FORMLIST,IBTKFORM,IBLISTPR
	S IBLISTPR=1 ;so that all routines know they are being invoked while in the list processor
	S IBTKFORM=0 ;IBTKFORM=1 only for toolkit forms
	N IBFASTXT ;set to 1 for fast exit from system
	S IBFASTXT=0
	K XQORS,VALMEVL
	S IBCLINIC=""
	D CLINIC
	I IBCLINIC D EN^VALM("IBDF CLINIC FORM LIST")
	Q
ONENTRY	;
	S FORMLIST="^TMP(""IB"",$J,""FORM LIST"")"
	D IDXFORMS
	Q
ONEXIT	;
	D KILL^%ZISS
	K ^TMP("IB",$J),^TMP("IBDF",$J),IBCLINIC,VALMY,IBQUIT,FORMIDX,VALMBCK,X,Y,I,DA,D0
	Q
EDITFORM	;allows user to select a form, then displays it for edit
	N SEL,IBFORM,IBCOMP,IBCRT,IBRASTER,IBGRPHCS,FORMIDX,IBFORMW,IBFORMHT,IBPAGES,IBPGHT,IOVL,IOHL,IOBRC,IOBLC,IOTRC,IOTLC,ARY,DFN,IBAPPT,RTNLIST
	S (IBRASTER,IBGRPHCS,IBCOMP)=0,IBCRT=1
	I '$D(IBLISTPR) N IBLISTPR S IBLISTPR=1
	S ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	K @ARY
	D NOGRPHCS^IBDFU5
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY("")),(IBFORM,VALMBCK)=""
	I SEL S IBFORM=+$G(@VALMAR@("IDX",2*SEL,SEL))
	I IBFORM D CLINICS^IBDFU4(IBFORM,ARY) I $G(@ARY@(0))>1 W !,"The form is in use by other clinics!" D LIST^IBDFU4(ARY,5) S DIR(0)="Y",DIR("A")="Still want to edit",DIR("B")="N" D ^DIR K DIR I $D(DIRUT)!(Y=0) S IBFORM=""
	I IBFORM,'$$LOCKFRM2^IBDFU7(IBFORM) D LOCKMSG2^IBDFU7(IBFORM) S IBFORM=""
	I IBFORM D EN^VALM("IBDF DISPLAY FORM FOR EDIT") S $P(^IBE(357,IBFORM,0),"^",5)=0 D FREEFRM2^IBDFU7(IBFORM)
	S VALMBCK="R",IBCOMP=0
	Q
	;
CLINIC	K DIR S DIR(0)="409.95,.01",DIR("A")="EDIT FORMS FOR WHICH CLINIC? " D ^DIR K DIR I $D(DIRUT)!(+Y<0) Q
	S IBCLINIC=+Y
	Q
	;
IDXFORMS	;build an array of forms used by IBCLINIC for the list processor
	N FORM,SETUP,NODE,SUB,SUBREC,USE,ID
	K @FORMLIST
	S SETUP="",VALMCNT=0,ID=0
	S SETUP=$O(^SD(409.95,"B",IBCLINIC,"")) Q:'SETUP
	S NODE=$G(^SD(409.95,SETUP,0)) Q:NODE=""
	F SUB=2:1:7 S FORM=$P(NODE,"^",SUB) I FORM D
	.I $D(^IBE(357,FORM,0)) D
	.S USE=""
	.D ENTRY
	Q
ENTRY	;adds an entry to the array
	S USE=USE_$S(SUB=2:"Basic Encounter Form",SUB=3:"Supplemental Form - Established Patients",SUB=4:"Supplemental Form - New Patients",SUB=5:"Form To Print With No Patient Data",1:"")
	S:USE="" USE=USE_$S(SUB=6:"Supplemental Form - All Patients",SUB=7:"For Future Use",1:"")
	S ID=ID+1,VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$$DISPLAY1(FORM,USE,ID),@FORMLIST@("IDX",VALMCNT,ID)=FORM D FLDCTRL^VALM10(VALMCNT) ;set video for ID column
	S VALMCNT=VALMCNT+1,@FORMLIST@(VALMCNT,0)=$$DISPLAY2(FORM),@FORMLIST@("IDX",VALMCNT,ID)=FORM_"^"_$S(SUB=2:.02,SUB=3:.03,SUB=4:.04,SUB=5:.05,SUB=6:.06,SUB=7:.07,1:0)
	Q
HDR	;
	S VALMHDR(1)="FORMS CURRENTLY USED BY '"_$$CLNCNAME_"' CLINIC"
	Q
CLNCNAME()	;
	Q $P($G(^SC(IBCLINIC,0)),"^",1)
DISPLAY1(FORM,USE,ID)	;
	N NODE,NAME,RET
	S RET=$J(ID,3)_$$SP(2)
	S NODE=$G(^IBE(357,FORM,0))
	S NAME=$P(NODE,"^",1)
	S RET=RET_$$PR(NAME,30)_$$SP(2)_USE
	Q RET
DISPLAY2(FORM)	;
	N NODE,DESCR,RET
	S RET=$$SP(37)
	S NODE=$G(^IBE(357,FORM,0))
	S DESCR=$P(NODE,"^",3)
	S RET=RET_$E(DESCR,1,80)
	Q RET
PR(STR,LEN)	; pad right
	Q:'$G(LEN) ""
	N B S STR=$E($G(STR),1,LEN)
	S:LEN'=$L(STR) $P(B," ",LEN-$L($G(STR)))=" "
	Q STR_$G(B)
SP(LEN)	;
	Q:'$G(LEN)
	N S S $P(S," ",LEN)=" "
	Q S
CHNGCLNC	;allows the user to change the clinic
	N SAVECLNC S SAVECLNC=IBCLINIC
	D FULL^VALM1
	S VALMBCK="R"
	D CLINIC I 'IBCLINIC S IBCLINIC=SAVECLNC Q
	D HDR,IDXFORMS
	Q

IBDF6A
IBDF6A	;ALB/CJM - ENCOUNTER FORM - (new forms, deleting forms, adding to setup) ;JAN 16,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DELFORM	;
	N CLINIC,FORM,BLOCK,NOCANDO,SETUP,ARY
	S NOCANDO=0,ARY="^TMP(""IBDF"",$J,""TEMPORARY CLINIC LIST"")"
	K @ARY
	D FULL^VALM1
	S VALMBCK="R"
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM to delete: "
	D ^DIC K DIC S FORM=+Y Q:(FORM<0)
	D CLINICS^IBDFU4(FORM,ARY)
	I $G(@ARY@(0)) D
	.W !,"Cannot be deleted, the form is in use!"
	.D LIST^IBDFU4(ARY,IOSL)
	I '$G(@ARY@(0)) D DELETE^IBDFU2C(FORM,357,1)
	K @ARY
	Q
NEWFORM	;
	N NAME,FORM,FLD,BLOCK,IBDELETE
	S VALMBCK="R"
	S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
	D FULL^VALM1
	K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S FORM=+Y
	I FORM<0 D
	.W !,"Unable to create a new form!" D PAUSE^IBDFU5
	E  D
	.K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT NEW FORM]",DA=FORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE S DIK="^IBE(357,",DA=FORM D ^DIK K DIK,DA Q
	.D:'IBTKFORM ADDSETUP(FORM,IBCLINIC,1)
	.;the new form should be empty - make sure
	.S BLOCK="" F  S BLOCK=$O(^IBE(357.1,"C",FORM,BLOCK)) Q:'BLOCK  D
	..I $P($G(^IBE(357.1,BLOCK,0)),"^",2)'=FORM D
	...K DA S DIK="^IBE(357.1,",DA=BLOCK D IX^DIK K DIK,DA
	..E  D DLTBLK^IBDFU3(BLOCK,FORM,357.1)
	.D:'IBTKFORM IDXFORMS^IBDF6
	.D:IBTKFORM IDXFORMS^IBDF12
	Q
COPYFORM	;
	N NAME,OLDFORM,NEWFORM,IBDELETE
	D FULL^VALM1
	S VALMBCK="R"
	S OLDFORM=$$SLCTFORM^IBDFU4("") Q:'OLDFORM
	S NAME=$$NEWNAME^IBDFU2C Q:NAME=""
	S NEWFORM=$$COPYFORM^IBDFU2C(OLDFORM,357,357,NAME,0)
	Q:'NEWFORM
	;
	;edit the form
	K DIE,DR,DA S DIE="^IBE(357,",DR="[IBDF EDIT OLD OR COPIED FORM]",DA=NEWFORM,DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	;delete the new form if the user didn't complete the edit
	I IBDELETE D DELETE^IBDFU2C(NEWFORM,357) Q
	;
	D:'IBTKFORM ADDSETUP(NEWFORM,IBCLINIC,1)
	D:'IBTKFORM IDXFORMS^IBDF6
	D:IBTKFORM IDXFORMS^IBDF12
	Q
SETUP	;
	N FORM
	D FULL^VALM1
	S VALMBCK="R"
	K DIC S DIC("S")="I '$P(^(0),U,7)",DIC=357,DIC(0)="AEQ",DIC("A")="Select FORM for Clinic Setup: "
	D ^DIC K DIC Q:($D(DTOUT)!$D(DUOUT))  S FORM=+Y Q:FORM<0
	D ADDSETUP(FORM,IBCLINIC,0)
	D IDXFORMS^IBDF6
	Q
ADDSETUP(FORM,IBCLINIC,NEW)	;
	;NEW=1 if the form was just created, 0 otherwise
	N FLD
	S NEW=+$G(NEW)
	W !,"How should the clinic use the form?"
	K DIR
	S DIR(0)="SO^1:BASIC FORM;2:SUPPLEMENTAL FORM FOR ALL PATIENTS;3:SUPPLEMENTAL FORM FOR NEW PATIENTS;4:SUPPLEMENTAL FORM FOR ESTABLISHED PATIENTS;5:FORM TO PRINT WITHOUT PATIENT DATA;6:RESERVED FOR FUTURE USE;"
	S:NEW DIR(0)=DIR(0)_"7:WILL NOT BE USED BY CLINIC;"
	D ^DIR K DIR
	I (Y=-1)!(Y=7)!$D(DIRUT) Q
	S FLD=$S(Y=1:.02,Y=2:.06,Y=3:.04,Y=4:.03,Y=5:.05,Y=6:.07,1:0) Q:'FLD
	K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) I 'DA D
	.K DIC,DO,DD,DINUM S DIC="^SD(409.95,",DIC(0)="",X=IBCLINIC
	.D FILE^DICN K DIC
	.S DA=$S(+Y<1:0,1:+Y)
	Q:'DA
	I $P($G(^SD(409.95,DA,0)),"^",(100*FLD)) Q:'$$OVERLAY
	K DIE,DR S DIE=409.95
	S DR=FLD_"////"_FORM D ^DIE K DIE,DR,DA
	Q
OVERLAY()	;asks the user if the he wants to overlay the form already used for the clinic setup
	W !,"But you already have a form for that use!"
	K DIR S DIR(0)="Y",DIR("A")="Do you want to replace it"
	D ^DIR K DIR
	Q:$D(DIRUT) 0
	Q Y

IBDF6C
IBDF6C	;ALB/CJM - ENCOUNTER FORM - (deleting setup, editing form name) ;JAN 16,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DSETUP	;allows user to select a form, then removes it from the clinic setup
	N SEL,IBFORM,SETUP
	D EN^VALM2($G(XQORNOD(0)),"S")
	S SEL=$O(VALMY("")),(IBFORM,VALMBCK)=""
	I SEL S SEL=$G(@VALMAR@("IDX",2*SEL,SEL)),IBFORM=+SEL
	I IBFORM D
	.S VALMBCK="R"
	.K DA S DA=$O(^SD(409.95,"B",+$G(IBCLINIC),"")) Q:'DA
	.S SETUP=$G(^SD(409.95,DA,0)) Q:SETUP=""
	.S DR=$P(SEL,"^",2)_"////@"
	.K DIE S DIE=409.95 D ^DIE K DIE,DR,DA
	.D IDXFORMS^IBDF6
	Q
EDITFORM	;allows user to select a form, then edit its name, description,  and size
	N IBFORM,IBDELETE ;IBDELETE appears in the input template
	D EN^VALM2($G(XQORNOD(0)),"S")
	S IBFORM=$O(VALMY("")),VALMBCK="R"
	I IBFORM S IBFORM=+$G(@VALMAR@("IDX",2*IBFORM,IBFORM))
	I IBFORM D
	.S VALMBCK="R"
	.K DA,DR,DIE S DA=IBFORM
	.S DR="[IBDF EDIT OLD OR COPIED FORM]"
	.S DIE=357 D ^DIE K DIE,DR,DA
	D:'IBTKFORM IDXFORMS^IBDF6
	D:IBTKFORM IDXFORMS^IBDF12
	Q

IBDF7
IBDF7	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(ADDING TOOLKIT BLKS) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ADD	;create a new block by copying a toolkit block
	N BLKLIST,OLDBLOCK,NEWBLOCK,TOP,BOT,IBBG,IBLFT
	S VALMBCK="R",IBBG=+$G(VALMBG),OLDBLOCK="",IBLFT=+$G(VALMLFT)
	D EN^VALM("IBDF TOOL KIT BLOCK LIST") ;list processor displays list of tool kit blocks
	I '$G(IBFASTXT) D
	.S VALMBG=IBBG S:VALMBG<1 VALMBG=1
	.Q:OLDBLOCK=""  ;selected tool kit block stored in OLDBLOCK
	.S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,IBFORM,357.1,357.1,IBBG-1,IBLFT-5,0)
	.D REFRESH^VALM,POS^IBDFU4(NEWBLOCK)
	.S VALMBCK="R"
	.D TOPNBOT^IBDFU5(NEWBLOCK,.TOP,.BOT)
	.D IDXFORM^IBDF5A(0,TOP,BOT)
	Q
	;
INIT	;entry code to list
	S BLKLIST="^TMP(""IBDF"",$J,""TOOL KIT BLOCK LIST"")"
	D IDXBLKS
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !
	Q
	;
EXIT	; -- exit code
	K @BLKLIST
	Q
	;
IDXBLKS	; sets up list of toolkit blocks for list processor
	N BLOCK,TK
	K @BLKLIST
	S VALMCNT=0
	S TK=0,BLOCK="" F  S TK=$O(^IBE(357.1,"D",TK)) Q:'TK  F  S BLOCK=$O(^IBE(357.1,"D",TK,BLOCK)) Q:'BLOCK  D
	.Q:'$P($G(^IBE(357.1,BLOCK,0)),"^",14)
	.S VALMCNT=VALMCNT+1
	.S @BLKLIST@(VALMCNT,0)=$$DISPLAY(BLOCK,VALMCNT,TK),@BLKLIST@("IDX",VALMCNT,VALMCNT)=BLOCK
	.D FLDCTRL^VALM10(VALMCNT,"ID") ;set video for ID column
	Q
	;
DISPLAY(BLOCK,ID,TKORDER)	;adds one toolkit block to the list array
	N NODE,NAME,DESCR,RET
	;** note: IBTKBLK=1 only if editing the tool kit blocks - display the tool kit order in that case
	S RET=$J(ID,3)_$$PADRIGHT^IBDFU("",2)
	S NODE=$G(^IBE(357.1,BLOCK,0))
	S NAME=$P(NODE,"^",1),DESCR=$P(NODE,"^",13)
	S RET=RET_$$PADRIGHT^IBDFU(NAME,30)_" "
	I $G(IBTKBLK) S RET=RET_$E($J(TKORDER,4),1,4)_"  "
	S RET=RET_$E(DESCR,1,80)
	Q RET
SELECT	;
	N CHOICE
	D EN^VALM2($G(XQORNOD(0)),"S")
	S CHOICE=$O(VALMY("")) Q:'CHOICE  S OLDBLOCK=$G(@VALMAR@("IDX",CHOICE,CHOICE))
	Q

IBDF8
IBDF8	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single toolkit block) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
VIEWBLK	;
	N QUIT,IBBLK,SAVELINE,TKBLKIDX,IBMEMARY
	S QUIT=0,SAVELINE=VALMBG
	D EN^VALM2($G(XQORNOD(0)),"S") ;select the block
	S IBBLK=$O(VALMY("")) Q:'IBBLK  S IBBLK=$G(@VALMAR@("IDX",IBBLK,IBBLK)) I IBBLK D EN^VALM("IBDF VIEW TOOL KIT BLOCK") ;call list processor to display selected block
	S VALMBCK="R",VALMBG=SAVELINE
	Q
INIT	;
	S TKBLKIDX="^TMP(""IB"",$J,""TOOL KIT BLOCK"")"
	D IDXBLOCK^IBDFU4(TKBLKIDX)
	Q
EXIT	;
	K @TKBLKIDX
	Q
HDR	;
	S VALMHDR(1)="Viewing the "_$P($G(^IBE(357.1,IBBLK,0)),"^",1)_" Tool Kit block"
	S (VALMHDR(2),VALMHDR(3))=$$PADRIGHT^IBDFU("",4)
	F I=1:1:16 S VALMHDR(2)=VALMHDR(2)_$J(I,10)
	Q

IBDF9
IBDF9	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(display single form block for edit) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
INIT	;
	S BLKIDX="^TMP(""IB"",$J,""FORM BLOCK"")"
	D IDXBLOCK^IBDFU4(BLKIDX,1)
	Q
EXIT	;
	K @BLKIDX
	Q
HDR	;
	S VALMHDR(1)=$$PADRIGHT^IBDFU("",4)
	F I=1:1:16 S VALMHDR(1)=VALMHDR(1)_$J(I,10)
	Q
RESIZE	;resize the block
	N IBW,IBH
	S VALMBCK="R"
	K DIR S DIR(0)="NA^1:"_IBFORMW_":0",DIR("A")="Move the RIGHT MARGIN of the block to which column?: ",DIR("B")=IBBLK("W") D ^DIR K DIR Q:$D(DIRUT)  S IBW=X
	S DIR(0)="NA^1:"_IBFORMHT_":0",DIR("A")="Move the BOTTOM MARGIN of the block to which row?: ",DIR("B")=IBBLK("H") D ^DIR K DIR Q:$D(DIRUT)  S IBH=X
	K DR,DIE,DA S DIE=357.1,DA=IBBLK,DR=".06////^S X=IBW;.07////^S X=IBH" D ^DIE K DIE,DR,DA
	S VALMBCK="R"
	D IDXBLOCK^IBDFU4(BLKIDX)
	Q
EDITBLK	;edit the name,brief description, header and outline
	;automatically shifts contents and changes size of block if changes in header or outline call for that
	N HDR1,HDR2 ;flags set to indicate existance of hdr before and after editing 
	N NODE,IBNAME,QUIT
	S QUIT=0,VALMBCK="R"
	D FULL^VALM1
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S HDR1=$P(NODE,"^",11) S:HDR1'="" HDR1=1
	K DIR S DIR(0)="357.1,.01",DIR("B")=$P($G(^IBE(357.1,IBBLK,0)),"^") D ^DIR K DIR D  Q:QUIT
	.I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	.S IBNAME=Y
	.K DA,DR,DIE S DIE=357.1,DA=IBBLK,DR="[IBDF EDIT HEADER&OUTLINE]" D ^DIE K DIE,DR,DA
	S NODE=$G(^IBE(357.1,IBBLK,0))
	S HDR2=$P(NODE,"^",11) S HDR2=$S(HDR2="":0,1:1)
	;shift contents and resize if there has been a change to existance of the header
	I HDR1'=HDR2 D
	.N TOP,BOTTOM,LEFT,RIGHT,WAY,AMOUNT
	.S TOP=0,BOTTOM=IBBLK("H"),LEFT=0,RIGHT=IBBLK("W"),AMOUNT=1
	.I HDR2 S WAY="D" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)+1,^IBE(357.1,IBBLK,0)=NODE
	.I HDR1 S WAY="U" D E^IBDF10 S $P(NODE,"^",7)=$P(NODE,"^",7)-1,^IBE(357.1,IBBLK,0)=NODE
	D IDXBLOCK^IBDFU4(BLKIDX)
	Q

IBDF9A
IBDF9A	;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list) ;FEB 1,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
LIST	;Create, Edit, or Delete a selection list from the form
	N SAVELINE
	S VALMBCK="R",SAVELINE=VALMBG
	K DIR S DIR("?",1)="You can create a [N]ew selection list, edit its [A]ppearance, [D]elete it,",DIR("?")="edit its [Co]ntents, [P]osition or size its columns.  Choose from:"
	S DIR("B")="C",DIR(0)="SAB^A:APPEARANCE;C:CONTENTS;D:DELETE;N:NEW;P:POSITION",DIR("A")="[N]ew   [A]ppearance   [D]elete   [C]ontents   [P]osition/size columns:  "
	W !!,DIR("?",1),!,DIR("?"),!
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"EDITLIST^IBDF3",Y="A":"EDITLIST",Y="N":"NEWLIST^IBDF9A1",Y="D":"DLTLIST",Y="P":"COLUMNS",1:"NOSUCH")
	S VALMBG=SAVELINE
	Q
NOSUCH	;
	Q
EDITLIST	;allows editing of the appearance of a list
	;expects IBBLK to be defined
	;IBSC1,IBSC2,IBSWITCH,IBP,IBOLD,IBLEN  are used in the input template
	N IBLIST,RTN,IBSC1,IBSC2,IBSWITCH,IBP,IBOLD,IBLEN,IBDELETE
	S VALMBCK="R",(IBOLD,IBP)=1
	D FULL^VALM1
	D SELECT
	I IBLIST D
	.S RTN=$P($G(^IBE(357.2,IBLIST,0)),"^",11) I RTN D DATASIZE(RTN)
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.S IBP="" F  S IBP=$O(IBSWITCH(IBP)) Q:'IBP  D SWITCH(IBLIST,$P(IBSWITCH(IBP),"^"),$P(IBSWITCH(IBP),"^",2))
	.D IDXBLOCK^IBDFU4(BLKIDX)
	S VALMBCK="R"
	Q
COLUMNS	;allows the user to place and size the columns of the list
	;expects IBBLK to be defined
	N IBLIST
	S VALMBCK="R"
	;D FULL^VALM1
	D SELECT
	I IBLIST D
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF POSITION/SIZE COLUMNS]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D IDXBLOCK^IBDFU4(BLKIDX)
	S VALMBCK="R"
	Q
SELECT	;
	S IBLIST=""
	Q:'$G(IBBLK)
	I '$O(^IBE(357.2,"C",IBBLK,0)) W !,"There is no selection list!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.2,",DIC(0)="EQ",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,2)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBLIST=+Y
	I 'IBLIST,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No selection list selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
MSG1	;called by the input template
	W !!,"Entering the number of list columns is optional. By default the list will be",!,"given as many columns as the block has space for.",!
	Q
MSG2	;called by the input template
	W !!,"Entering the information on the position of the columns and their",!,"height is optional. Appropriate default values will be used. However,",!,"you may specify your own values for up to 4 coulmns.",!
	Q
MSG3	;called by the input template
	W !!,"You can now specify the subcolumns the list should contain.",!,"There can be at most 6 subcolumns, numbered 1-6.",!
	Q
DATASIZE(RTN)	;IBLEN() stores the lengths of the pieces of the record returned by the package interface
	N IBJ,NODE
	Q:'$G(RTN)
	S NODE=$G(^IBE(357.6,RTN,2)) F IBJ=1:1:7 S IBLEN(IBJ)=+$P(NODE,"^",2*IBJ)
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.2,.01A",DIR("A")="New Selection List Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
SWITCH(IBLIST,IBSC1,IBSC2)	;finds all selections in list=IBLIST and changes subcolumn=IBSC1 into subcolumn=IBSC2
	N SLCTN,SC,DIE,DA,DR
	S SLCTN="" F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D
	.S SC=$O(^IBE(357.3,SLCTN,1,"B",IBSC1,""))
	.Q:'SC
	.S DIE="^IBE(357.3,SLCTN,1,",DA(1)=SLCTN,DA=SC,DR=".01///"_IBSC2
	.D ^DIE
	Q
RTN()	;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
	K DIC S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that the list will contain:" D MIX^DIC1 K DIC,DA
	Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)
DLTLIST	;expects IBBLK to be defined
	N IBLIST
	D FULL^VALM1
	D SELECT
	I IBLIST D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.2,IBLIST,0)),"^"))
	.D DLTLIST^IBDFU3(357.2,IBBLK,IBLIST)
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q

IBDF9A1
IBDF9A1	;ALB/CJM - ENCOUNTER FORM - (create,edit,delete selection list - continued) ;FEB 1,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
NEWLIST	;creates a new list
	;expects IBBLK to be defined
	N IBLIST,IBLEN,IBP,IBRTN,NAME,IBDELETE
	S IBOLD=0,VALMBCK="R"
	S NAME=$$NEWNAME^IBDF9A Q:NAME=-1
	D FULL^VALM1
	S IBRTN=$$RTN^IBDF9A Q:'IBRTN
	K DIC,DIE,DD,DO,DINUM,DA S DIC="^IBE(357.2,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DA
	S IBLIST=$S(+Y<0:"",1:+Y)
	I 'IBLIST D
	.W !,"Unable to create a new selection list!" D PAUSE^IBDFU5
	I IBLIST D
	.D DLISTCNT^IBDFU3(IBLIST,357.2) ;deletes anything that may have been left lying around that now points to IBLIST
	.K DIE,DA,DR S DIE=357.2,DA=IBLIST,DR="[IBDF EDIT SELECTION LIST]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE K DA S DIK="^IBE(357.2,",DA=IBLIST D ^DIK K DIK,DA
	.I IBLIST,'IBDELETE D ADDGROUP("BLANK",0)
	.D IDXBLOCK^IBDFU4(BLKIDX)
	S VALMBCK="R"
	Q
ADDGROUP(NAME,ORDER)	;adds a group to the selection list=IBLIST
	N GROUP
	K DIC,DIE,DD,DO,DINUM,DA S DIC="^IBE(357.4,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DA
	S GROUP=$S(+Y<0:"",1:+Y)
	I GROUP D
	.S NODE=$G(^IBE(357.4,GROUP,0)) S $P(NODE,"^",2)=ORDER,$P(NODE,"^",3)=IBLIST S ^IBE(357.4,GROUP,0)=NODE
	.S DIK="^IBE(357.4,",DA=GROUP D IX1^DIK K DIK,DA
	Q
	;
FORMAT	;allows the user to format all of the selections on the list in mass
	;
	;
	;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
	;SUBCOL is the subcolumn to format
	;
	N TYPE,SUBCOL,SLCTN
	;
	;ask for the subcolumn to format
	S SUBCOL=$$SUBCOL
	;
	;ask forthe type of fomatting
	S TYPE=$S(SUBCOL:$$TYPE,1:"")
	;
	;find all the sections to be formatted and do so
	I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"C",IBLIST,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",3)=IBLIST CHANGE(SLCTN,SUBCOL,TYPE)
	;
	S VALMBCK="R"
	Q
	;
FORMAT2	;allows the user to format all of the selections in the group in mass
	;
	;
	;TYPE = type of formating - U=upper case,L=lower case,C=capitalize
	;SUBCOL is the subcolumn to format
	;
	N TYPE,SUBCOL,SLCTN
	;
	;ask for the subcolumn to format
	S SUBCOL=$$SUBCOL
	;
	;ask forthe type of fomatting
	S TYPE=$S(SUBCOL:$$TYPE,1:"")
	;
	;find all the sections to be formatted and do so
	I TYPE'="",SUBCOL S SLCTN=0 F  S SLCTN=$O(^IBE(357.3,"D",IBGRP,SLCTN)) Q:'SLCTN  D:$P($G(^IBE(357.3,SLCTN,0)),"^",4)=IBGRP CHANGE(SLCTN,SUBCOL,TYPE)
	;
	D IDXSLCTN^IBDF4
	S VALMBCK="R"
	Q
	;
TYPE()	;ask the user what type of formatting
	N TYPE S TYPE=""
	K DIR S DIR(0)="SOB^UPPERCASE:U;LOWERCASE:L;CAPITALIZE:C"
	S DIR("A")="Select the type of formatting",DIR("B")="C"
	D ^DIR K DIR
	I '$D(DIRUT),Y'=-1 S TYPE=Y
	Q $E(TYPE,1)
	;
CHANGE(SLCTN,SUBCOL,TYPE)	;
	;
	N DA,NODE,STR
	S DA=$O(^IBE(357.3,SLCTN,1,"B",SUBCOL,0))
	Q:'DA
	S NODE=$G(^IBE(357.3,SLCTN,1,DA,0))
	S STR=$P(NODE,"^",2)
	D:$L(STR)
	.I TYPE="U" S STR=$$UP^XLFSTR(STR)
	.I TYPE="L" S STR=$$LOW^XLFSTR(STR)
	.I TYPE="C" S STR=$$CAPS(STR)
	.S $P(^IBE(357.3,SLCTN,1,DA,0),"^",2)=STR
	Q
	;
CAPS(STR)	;returns STR with each word in it capitalized
	N FIRST,I,CHAR,LEN
	S FIRST=1,LEN=$L(STR)
	F I=1:1 S CHAR=$E(STR,I) Q:CHAR=""  D
	.I CHAR?1A,FIRST D
	..S FIRST=0,CHAR=$$UP^XLFSTR(CHAR)
	.E  I CHAR?1A D
	..S CHAR=$$LOW^XLFSTR(CHAR)
	.E  S FIRST=1
	.S STR=$E(STR,1,I-1)_CHAR_$E(STR,I+1,LEN)
	Q STR
	;
SUBCOL()	;ask what subcolumn to format
	;SCLIST - used to record the subcolumns that can be formated - each digit will signify a subcolum
	;
	N SCLIST,NODE,SUBCOL,ANS
	;first get the list of subcolumns that can be formatted
	S SCLIST="",SUBCOL=0
	F  S SUBCOL=$O(^IBE(357.2,IBLIST,2,SUBCOL)) Q:'SUBCOL  S NODE=$G(^IBE(357.2,IBLIST,2,SUBCOL,0)) I $P(NODE,"^",3),$P(NODE,"^",4)=1,$P(NODE,"^",7) S SCLIST=SCLIST_","_$P(NODE,"^")
	;
	;if there is at most one subcolumn that can be edited return that
	I $L(SCLIST)<3 Q $E(SCLIST,2)
	;
	;now ask what subcolumn to format
AGAIN	W !,"What subcolumn do you want formated? Choose from (",$E(SCLIST,2,10),"): "
	R ANS:DTIME
	I '$T!(ANS["^") Q ""
	I ANS?1N,SCLIST[ANS Q ANS
	G AGAIN
	Q ANS

IBDF9B
IBDF9B	;ALB/CJM - ENCOUNTER FORM - (edit,delete,add data fields) ;FEB 1,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
FIELD	;Create, Edit, or Delete a data field from the form
	N SAVELINE
	S SAVELINE=VALMBG
	S VALMBCK="R"
	;
	K DIR S DIR("?",1)="You can Create, Edit, or Delete a data field, Shift all of the data fields",DIR("?")="within a range up or down, or List their locations ."
	W !!,DIR("?",1),!,DIR("?"),!
	S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete;S:Shift;L:List",DIR("A")="[C]reate,   [D]elete,   [E]dit,   [S]hift   [L]ist locations"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"NEWFLD",Y="E":"EDITFLD",Y="D":"DLTFLD",Y="S":"SHIFT",Y="L":"^IBDF9B1",1:"")
	S VALMBCK="R",VALMBG=SAVELINE
	Q
SHIFT	;expects IBBLK to be defined - shifts all fields within range supplied by user
	D SHIFT^IBDF10("D")
	D IDXBLOCK^IBDFU4(BLKIDX)
	Q
EDITFLD	;expects IBBLK to be defined
	N IBFIELD,RTN,NODE
	N IBMF,IBWP,IBLIST,IBI,IBOLD,IBX,IBY,IBW,IBP,IBLEN,IBDELETE ;these are used in the input template
	;IBMF=1 if output routine returns records,IBWP=1 output routine returns a word processing field
	D FULL^VALM1
	D SELECT
	I IBFIELD D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.S (IBMF,IBLIST,IBWP)=0,IBOLD=1,(IBX,IBY)=""
	.S RTN=$P($G(^IBE(357.5,IBFIELD,0)),"^",3)
	.I RTN D DATATYPE(RTN)
	.K DR,DIE,DA S DIE=357.5,DA=IBFIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
SELECT	;
	S IBFIELD=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.5,"C",IBBLK,0)) W !,"There is no data field!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.5,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,2)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBFIELD=+Y
	I 'IBFIELD,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data field selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTFLD	;expects IBBLK to be defined
	N IBFIELD
	D FULL^VALM1
	D SELECT
	I IBFIELD D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.5,IBFIELD,0)),"^"))
	.D DLTFLD^IBDFU3(357.5,IBBLK,IBFIELD)
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWFLD	;adds a new field, expects IBBLK to be defined
	N NAME,FIELD,NODE,IBRTN
	N IBX,IBY,IBLIST,IBLEN,IBWP,IBMF,IBW,IBP,IBDELETE,IBOLD ;these are used in the input template
	S NAME=$$NEWNAME Q:NAME=-1
	D FULL^VALM1
	S IBRTN=$$LOOKUP Q:'IBRTN
	S IBOLD=0,(IBX,IBY)=""
	K DIC,DIE,DD,DO,DINUM S DIC="^IBE(357.5,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S FIELD=$S(+Y<0:"",1:+Y)
	I 'FIELD D
	.W !,"Unable to create a new data field!" D PAUSE^IBDFU5
	I FIELD D
	.S IBDELETE=1
	.K DIE,DA,DR S DIE=357.5,DA=FIELD,DR="[IBDF EDIT DATA FIELD]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA,DIC
	.I IBDELETE K DA S DIK="^IBE(357.5,",DA=FIELD D ^DIK K DIK,DA Q
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.5,.01A",DIR("A")="New Field Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
DATATYPE(RTN)	;
	;INPUT - RTN is a ptr to the package interface file
	;
	;OUTPUT - IBLEN() stores the lengths of the pieces of the record returned by the package interface
	;IBLIST=1 if list,IBMF=1 if record, IBWP=1 if word processing
	;
	N IBSUB,NODE,DATATYPE
	S (IBMF,IBWP,IBLIST)=0
	Q:'$G(RTN)
	S DATATYPE=$P($G(^IBE(357.6,RTN,0)),"^",7) S:DATATYPE=5 IBWP=1 S:(DATATYPE=2)!(DATATYPE=4) IBMF=1 S:(DATATYPE=3)!(DATATYPE=4) IBLIST=1
	I 'IBWP S NODE=$G(^IBE(357.6,RTN,2)) F IBSUB=1:1:7 S IBLEN(IBSUB)=+$P(NODE,"^",2*IBSUB)
	Q
LOOKUP()	;does a lookup on the package interface file using the E cross-reference, which uses the name with the prefix=namespace removed
	K DIC S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	S DIC="^IBE(357.6,",DIC(0)="MQEA",D="E^D^B",DIC("A")="Select the TYPE OF DATA that should be displayed:" D MIX^DIC1 K DIC,DA,D
	Q $S((Y<0)!$D(DTOUT)!$D(DUOUT):0,1:+Y)

IBDF9B1
IBDF9B1	;ALB/CJM - ENCOUNTER FORM - (report data fields) ;APRIL 22,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
REPORT	;
	N TOP,BOTTOM,LEFT,RIGHT,QUIT,SCRNSIZE
	S QUIT=0,SCRNSIZE=4
	D RANGE
	D:'QUIT SEARCH(TOP,BOTTOM,LEFT,RIGHT)
	Q
RANGE	;asks the user for the range - returns TOP,BOTTOM,LEFT,RIGHT
	N I,HT,WIDTH
	S HT=IBBLK("H"),WIDTH=IBBLK("W")
	K DIR
	;get TOP
	S DIR("A")="What is the top-most row to report on?"
	S DIR(0)="N^1:"_HT_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S TOP=Y
	;now get BOTTOM
	S DIR("A")="What is the bottom-most row to report on? (optional)",DIR("?",1)="Enter the lowest row that you want to report on.",DIR("?")="Enter nothing to report all data fields below the highest row that you specified."
	K DIR("B") ;S DIR("B")=HT
	S DIR(0)="NO^"_TOP_":"_HT_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S BOTTOM=Y
	;get LEFT
	S DIR("A")="What is the left-most column to report on?"
	S DIR(0)="N^1:"_WIDTH_":0",DIR("B")=1
	D ^DIR K DIR I (Y=-1)!$D(DIRUT) S QUIT=1 Q
	S LEFT=Y
	;now get RIGHT
	S DIR("A")="What is the right-most column to report on? (optional)"
	S DIR("?",1)="Enter the right-most column that you want to report on.",DIR("?")="Enter nothing to report all data fields to the right of the left-most column that you specified."
	K DIR("B") ;S DIR("B")=WIDTH
	S DIR(0)="NO^"_LEFT_":"_WIDTH_":0"
	D ^DIR K DIR I (Y=-1)!$D(DTOUT)!$D(DUOUT) S QUIT=1 Q
	S RIGHT=Y
	;now change TOP,BOTTOM,LEFT,RIGHT to their internal values
	;(BOTTOM or RIGHT)="" has special meaning - means shift without limit 
	S TOP=TOP-1,LEFT=LEFT-1
	S:BOTTOM>0 BOTTOM=BOTTOM-1
	S:RIGHT>0 RIGHT=RIGHT-1
	Q
SEARCH(TOP,BOTTOM,LEFT,RIGHT)	;searches for data fields in IBBLK falling within the rectangle defined by TOP,BOTTOM,LEFT,RIGHT and reports on them
	N SUBFLD,IBX,IBY,FLD,QUIT,ARY,RTN,WP,LIST,CNT,NODE
	S ARY="^TMP(""IBDF"",$J,""LIST OF DATA FIELDS"")"
	K @ARY
	S QUIT=0
	S FLD="" F  S FLD=$O(^IBE(357.5,"C",IBBLK,FLD)) Q:QUIT!('FLD)  D
	.S FLD("NODE0")=$G(^IBE(357.5,FLD,0))
	.Q:FLD("NODE0")=""
	.S FLD("NAME")=$P(FLD("NODE0"),"^")
	.S FLD("MULTIPLE SF")="NO"
	.S (SUBFLD,CNT)=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,FLD,2,SUBFLD,0)) I $P(NODE,"^",9),$P(NODE,"^",8) S CNT=CNT+1 I CNT>1 S FLD("MULTIPLE SF")="YES" Q
	.Q:$P(FLD("NODE0"),"^",2)'=IBBLK
	.D RTNDESCR
	.I WP S IBX=+$P(FLD("NODE0"),"^",10),IBY=+$P(FLD("NODE0"),"^",11) D:$$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT)  Q
	..S FLD("MULTIPLE SF")="NO"
	..D SETARY
	.S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,FLD,2,SUBFLD)) Q:QUIT!('SUBFLD)  D
	..S SUBFLD("NODE0")=$G(^IBE(357.5,FLD,2,SUBFLD,0)) Q:SUBFLD("NODE0")=""
	..S IBX=$P(SUBFLD("NODE0"),"^",7),IBY=$P(SUBFLD("NODE0"),"^",6) I $$INRANGE^IBDF10A(IBX,IBY,TOP,BOTTOM,LEFT,RIGHT) D SETARY
	D PRINT
	K @ARY
	Q
RTNDESCR	;sets RTN=package interface and gets fields needed from the 0 node, sets the flags LIST, &  WP
	S RTN=$P(FLD("NODE0"),"^",3)
	S RTN("NODE0")=$G(^IBE(357.6,RTN,0))
	S LIST=$S("34"[$P(RTN("NODE0"),"^",7):1,1:0)
	S WP=$S($P(RTN("NODE0"),"^",7)=5:1,1:0)
	S RTN("INTERFACE")=$P(RTN("NODE0"),"^"),RTN("INTERFACE")=$E(RTN("INTERFACE"),$F(RTN("INTERFACE")," "),40)
	S RTN("PRINT COMPLETE")=$S($P(RTN("NODE0"),"^",8):"Y",1:"N")
	Q
PRINT	;prints @ARY
	N COUNT,LINE S (QUIT,COUNT)=0
	S IBY="" F  S IBY=$O(@ARY@(IBY)) Q:QUIT!(IBY="")  D
	.S IBX="" F  S IBX=$O(@ARY@(IBY,IBX)) Q:QUIT!(IBX="")  D
	..S LINE=0 F  S LINE=$O(@ARY@(IBY,IBX,LINE)) Q:'LINE  W !,$E($G(@ARY@(IBY,IBX,LINE)),1,IOM) S COUNT=LINE
	..F  Q:(COUNT>SCRNSIZE)  W ! S COUNT=COUNT+1
	..S QUIT=$$PAUSE
	Q
PAUSE()	;pauses after each field discription is displayed
	N ANS
	R ANS:DTIME
	Q $S('$T:1,ANS["^":1,1:0)
SETARY	;writes data field description to @ARY
	N PIECE,DATA,LINE
	S @ARY@(IBY,IBX,1)="Name of Data Field: "_FLD("NAME")_"     Multiple Subfields With Data: "_FLD("MULTIPLE SF")
	S LINE="Row: "_(IBY+1)_"  Column: "_(IBX+1)_"  Length: "_$S(WP:$P(FLD("NODE0"),"^",14)_"    Lines Allocated On Form: "_$P(FLD("NODE0"),"^",12),1:$P(SUBFLD("NODE0"),"^",8))
	S @ARY@(IBY,IBX,2)=LINE_$S(LIST:"  Number On List: "_$P(FLD("NODE0"),"^",5)_"  Last On List To Print?: "_$S($P(FLD("NODE0"),"^",4):"Y",1:"N"),1:"")
	S @ARY@(IBY,IBX,3)="Package Interface: "_RTN("INTERFACE")_"     Print Overflowed Data?: "_RTN("PRINT COMPLETE")
	I 'WP S DATA="",PIECE=$P(SUBFLD("NODE0"),"^",9) S:'PIECE PIECE=1 S:RTN DATA=$P($G(^IBE(357.6,RTN,2)),"^",(PIECE*2)-1) D
	.S @ARY@(IBY,IBX,4)="Label"_$S($P(SUBFLD("NODE0"),"^",3)["I":" (not displayed): ",1:": ")_$P(SUBFLD("NODE0"),"^")_"   Data: "_DATA
	I WP,RTN S @ARY@(IBY,IBX,4)=$G(^IBE(357.6,RTN,1,1,0)),@ARY@(IBY,IBX,5)=$G(^IBE(357.6,RTN,1,2,0))
	Q

IBDF9C
IBDF9C	;ALB/CJM - ENCOUNTER FORM - (edit header block) ;FEB 1,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EDITHDR	;edit the header block
	N HDRBLK,HDRFLD,TOP1,BOT1,TOP2,BOT2,HDRLINES,MAXLEN,QUIT,NEWBLOCK
	S VALMBCK="R",(TOP1,TOP2,BOT1,BOT2,QUIT,NEWBLOCK)=0
	D FULL^VALM1
	S HDRBLK=$$FINDBLK I 'HDRBLK S HDRBLK=$$MAKEBLK I 'HDRBLK Q
	D TOPNBOT^IBDFU5(HDRBLK,.TOP1,.BOT1)
	S HDRFLD=$$FINDFLD I 'HDRFLD S HDRFLD=$$MAKEFLD I 'HDRFLD Q
	D EDITFLD
	D:'QUIT EDITBLK,MOVEFLD
	I HDRBLK D TOPNBOT^IBDFU5(HDRBLK,.TOP2,.BOT2),UNCMPILE^IBDF2A(HDRBLK)
	D IDXFORM^IBDF5A(0,$S(TOP1<TOP2:TOP1,1:TOP2),$S(BOT1>BOT2:BOT1,1:BOT2))
	S VALMBCK="R"
	Q
FINDBLK()	;
	S HDRBLK="" F  S HDRBLK=$O(^IBE(357.1,"C",IBFORM,HDRBLK)) Q:'HDRBLK  Q:$P($G(^IBE(357.1,HDRBLK,0)),"^")="HEADER"
	Q HDRBLK
MAKEBLK()	;
	S NEWBLOCK=1
	K DIC,DD,DO,DINUM S DIC="^IBE(357.1,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_IBFORM
	D FILE^DICN K DIC,DIE
	Q $S(+Y<0:"",1:+Y)
FINDFLD()	;
	S HDRFLD="" F  S HDRFLD=$O(^IBE(357.5,"C",HDRBLK,HDRFLD)) Q:'HDRFLD  Q:$P($G(^IBE(357.5,HDRFLD,0)),"^")="HEADER"
	Q HDRFLD
MAKEFLD()	;
	K DIC,DD,DO,DINUM S DIC="^IBE(357.5,",X="HEADER",DIC(0)="",DIC("DR")=".02////"_HDRBLK
	D FILE^DICN K DIC,DIE
	Q $S(+Y<0:"",1:+Y)
EDITFLD	;allows the user to edit the header lines
	N NODE,SUBFLD
	K DIE,DA S DIE=357.5,DA=HDRFLD,DR="[IBDF EDIT FORM HEADER]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	;find the number of lines and the maximum length
	S (HDRLINES,MAXLEN)=0
	S SUBFLD=0 F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^(SUBFLD,0)) I NODE'="" S HDRLINES=HDRLINES+1 S MAXLEN=$S(MAXLEN>$L($P(NODE,"^",1)):MAXLEN,1:$L($P(NODE,"^",1)))
	I 'MAXLEN D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1) S QUIT=1,HDRBLK=""
	Q
EDITBLK	;allows the user to position the header block & draw a box around it
	N IBBOX,IBDELETE
	S IBBOX=0,IBDELETE=1
	D RESET^VALM4:VALMCC,REFRESH^VALM
	K DIE,DA S DIE=357.1,DA=HDRBLK,DR="[IBDF EDIT HEADER BLOCK]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	I IBDELETE,NEWBLOCK D DLTBLK^IBDFU3(HDRBLK,IBFORM,357.1)
	Q
DFLTCOL()	;finds the column that would center the header block
	N FRMWIDTH
	S FRMWIDTH=+$P($G(^IBE(357,IBFORM,0)),"^",9)
	Q ((FRMWIDTH-(+$G(MAXLEN)+(+$G(IBBOX))))\2)+1
MOVEFLD	;centers each header line in the block
	N START,SUBFLD,HDR,LINES
	S LINES=0
	S START=$S($P($G(^IBE(357.1,HDRBLK,0)),"^",10)=1:1,1:0)
	S SUBFLD=0
	F  S SUBFLD=$O(^IBE(357.5,HDRFLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(357.5,HDRFLD,2,SUBFLD,0)),HDR=$P(NODE,"^",1) D
	.I HDR'="" S $P(NODE,"^",4)=((MAXLEN-$L(HDR))\2)+START,$P(NODE,"^",5)=LINES+START,LINES=LINES+1 S ^IBE(357.5,HDRFLD,2,SUBFLD,0)=NODE
	Q

IBDF9D
IBDF9D	;ALB/CJM - ENCOUNTER FORM (create/edit/delete lines);MARCH 20, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
LINE	;Create, Edit, or Delete a line on the block
	S VALMBCK="R"
	K DIR S DIR("?",1)="You can add vertical or horizontal lines to the block, or edit or delete",DIR("?")="a line already there IF it was created through this action."
	S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a line"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"NEWLINE",Y="E":"EDITLINE",Y="D":"DLTLINE",1:"")
	S VALMBCK="R"
	Q
EDITLINE	;expects IBBLK to be defined - edits an already existing line
	N IBLINE,IBDFDONE
	;IBDFDONE is used in the imput template
	D FULL^VALM1
	D SELECT
	I IBLINE D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
SELECT	;select a line on the block
	S IBLINE=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.7,"C",IBBLK,0)) W !,"There is no line!" D PAUSE^IBDFU5 Q
AGAIN	K DIC S DIC="^IBE(357.7,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	S DIC("S")="I $P($G(^(0)),U,6)=IBBLK"
	D IX^DIC K DIC
	S:+Y>0 IBLINE=+Y
	I 'IBLINE,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No data line selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTLINE	;expects IBBLK to be defined - deletes one of the blocks lines
	N IBLINE
	D FULL^VALM1
	D SELECT
	I IBLINE D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.7,IBLINE,0)),"^"))
	.D DLTLINE^IBDFU3(357.7,IBBLK,IBLINE)
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWLINE	;adds a new line, expects IBBLK to be defined
	N NAME,IBLINE,NODE,IBDFDONE
	;IBDONE - a flag used in the input template to indicate if the input template was completed - delete the line if not completed
	S NAME=$$NEWNAME Q:NAME=-1
	K DIC,DIE,DD,D0,DINUM S DIC="^IBE(357.7,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S IBLINE=+Y
	I 'IBLINE D
	.W !,"Unable to create a new line!" D PAUSE^IBDFU5
	I IBLINE D
	.K DIE,DA S DIE=357.7,DA=IBLINE,DR="[IBDF FORM LINE]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I 'IBDFDONE K DA S DIK="^IBE(357.7,",DA=IBLINE D ^DIK K DIK Q
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.7,.01A",DIR("A")="New Form Line Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
MAXLEN()	;returns the maximum length of the line=IBLINE that will fit in the block=IBBLK
	N LEN,TYPE,NODE,POS
	S NODE=$G(^IBE(357.7,IBLINE,0))
	S TYPE=$P(NODE,"^",4)
	S POS=$S(TYPE="H":$P(NODE,"^",2),1:$P(NODE,"^",3))
	Q ((1+$S(TYPE="H":$$MAXX^IBDFU1B,1:$$MAXY^IBDFU1B))-POS)

IBDF9E
IBDF9E	;ALB/CJM - ENCOUNTER FORM (create/edit/delete text areas);MARCH 20, 1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
TEXT	;Create, Edit, or Delete a text area on a block
	S VALMBCK="R"
	K DIR S DIR("?")="You can add text areas to the block, or edit or delete a text area already there."
	S DIR("B")="C",DIR(0)="SB^C:Create;E:Edit;D:Delete",DIR("A")="[C]reate , [D]elete, or [E]dit a text area"
	D ^DIR K DIR I $D(DIRUT)!(Y<0) Q
	D @$S(Y="C":"NEWTEXT",Y="E":"EDITTEXT",Y="D":"DLTTEXT",1:"")
	S VALMBCK="R"
	Q
EDITTEXT	;expects IBBLK to be defined
	N IBTEXT,IBDELETE
	;IBDELETE is used in the imput template
	D FULL^VALM1
	D SELECT
	I IBTEXT D
	.D REFRESH^VALM,RESET^VALM4:VALMCC
	.K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
SELECT	;select a text area on the block
	S IBTEXT=0
	Q:'$G(IBBLK)
	I '$O(^IBE(357.8,"C",IBBLK,0)) W !,"There is no text area!" D PAUSE^IBDFU5 Q
AGAIN	S DIC="^IBE(357.8,",DIC(0)="EFQ",DIC("B")="",D="C",X=IBBLK
	D IX^DIC K DIC
	S:+Y>0 IBTEXT=+Y
	I 'IBTEXT,'$D(DTOUT),'$D(DUOUT) K DIR S DIR(0)="Y",DIR("A")="No text area selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	Q
DLTTEXT	;delete a text area - expects IBBLK to be defined
	N IBTEXT
	D FULL^VALM1
	D SELECT
	I IBTEXT D
	.Q:'$$RUSURE^IBDFU5($P($G(^IBE(357.8,IBTEXT,0)),"^"))
	.D DLTTEXT^IBDFU3(357.8,IBBLK,IBTEXT)
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWTEXT	;adds a new text area, expects IBBLK to be defined
	N NAME,IBTEXT,NODE,IBDELETE
	;IBDELETE - a flag used in the input template to indicate if the input template was completed - if returns 1 delete the record 
	S NAME=$$NEWNAME Q:NAME=-1
	K DIC,DIE,DD,D0,DINUM S DIC="^IBE(357.8,",DIC(0)="FL",X=NAME
	D FILE^DICN K DIC,DIE,DA
	S IBTEXT=$S(+Y<0:"",1:+Y)
	I 'IBTEXT D
	.W !,"Unable to create a text area!" D PAUSE^IBDFU5
	I IBTEXT D
	.K DIE,DA S DIE=357.8,DA=IBTEXT,DR="[IBDF EDIT TEXT AREA]",DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DR,DA
	.I IBDELETE K DA S DIK="^IBE(357.8,",DA=IBTEXT D ^DIK K DIK Q
	.D IDXBLOCK^IBDFU4(BLKIDX)
	Q
NEWNAME()	;
	K DIR S DIR(0)="357.8,.01A",DIR("A")="New Text Area Name: ",DIR("B")=""
	D ^DIR K DIR I $D(DIRUT) Q -1
	Q Y
FORMAT	;formats the word-processing field of IBTEXT
	N W,HT,NODE,COUNT,LINE
	S NODE=$G(^IBE(357.8,IBTEXT,0))
	S W=$P(NODE,"^",5),HT=$P(NODE,"^",6)
	D FORMAT^IBDFU6("^IBE(357.8,IBTEXT,1)",W) ;creates formated version at ^UTILITY($J,"W",1)
	K ^IBE(357.8,IBTEXT,1)
	I $G(^UTILITY($J,"W",1))>HT W !,"WARNING! The text area is too small to display all of the text." D PAUSE^IBDFU5
	S (COUNT,NUM)=0 F  S NUM=$O(^UTILITY($J,"W",1,NUM)) Q:'NUM  S LINE=$G(^(NUM,0)) D
	.;I $L(LINE)>W W !,"WARNING!  The word "_LINE_" is being truncated",!,"because it is too long." D PAUSE^IBDFU5
	.S ^IBE(357.8,IBTEXT,1,NUM,0)=$E(LINE,1,W)
	.S COUNT=COUNT+1
	S ^IBE(357.8,IBTEXT,1,0)="^^"_COUNT_"^"_COUNT_"^"_DT_"^^^^"
	K ^UTILITY($J,"W")
	Q
MAXHT()	;returns the maximum ht. of IBTEXT text area fits in the block IBBLK
	N NODE,Y
	S NODE=$G(^IBE(357.8,IBTEXT,0)) S Y=$P(NODE,"^",4)
	Q ((1+$$MAXY^IBDFU1B)-Y)
	Q
MAXW()	;returns the maximum width of IBTEXT text area fits in the block IBBLK
	N NODE,X
	S NODE=$G(^IBE(357.8,IBTEXT,0)) S X=$P(NODE,"^",3)
	Q ((1+$$MAXX^IBDFU1B)-X)

IBDFN
IBDFN	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
VADPT	;returns patient demographic data
	;input variables - DFN
	N ARY
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D DEM^VADPT
	I VAERR S (@ARY@("DPT PATIENT'S NAME"),@ARY@("DPT PATIENT'S DOB/AGE"),@ARY@("DPT PATIENT'S SEX"),@ARY@("DPT PATIENT'S PID"),@ARY@("DPT PATIENT'S MARITAL STATUS"))=""  Q
	S @ARY@("DPT PATIENT'S NAME")=VADM(1),@ARY@("DPT PATIENT'S SEX")=$P(VADM(5),"^",2)_"^"_$E($P(VADM(5),"^",2)),@ARY@("DPT PATIENT'S DOB/AGE")=$P(VADM(3),"^",2)_"^"_VADM(4),@ARY@("DPT PATIENT'S PID")=VA("PID")
	S @ARY@("DPT PATIENT'S MARITAL STATUS")=$P(VADM(10),"^",2)
	K VADM,VA,VAERR,VAEL
	Q
EMPLMNT	;returns patient's employment status
	;input variables - DFN
	N ARY
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D OPD^VADPT
	I VAERR S @ARY@("DPT PATIENT'S EMPLOYMENT STATUS")=""  Q
	S @ARY@("DPT PATIENT'S EMPLOYMENT STATUS")=$P(VAPD(7),"^",2)
	K VAPD,VA,VAERR,VAEL
	Q
	;
DATE(Y)	; Y=date in FM form, this function translates the date to its 
	;external form
	D DD^%DT
	Q Y
	Q
	;
ELIG	;for output of eligibility information & service connected conditions
	N COUNT,ARY,VAEL,VAERR,NODE0,COND,DESCR,PERC,EC,VASV,DATA,I
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D ELIG^VADPT
	I VAERR F I=1:1:6 S VAEL(I)=""
	S PERC=$P(VAEL(3),"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
	S @ARY@("DPT PATIENT ELIGIBILITY DATA")=$P(VAEL(1),"^",2)_"^"_$P(VAEL(2),"^",2)_"^"_$S(VAEL(3):"YES",VAEL(3)=0:"NO",1:"")_"^"_$S(VAEL(4):"YES",VAEL(4)=0:"NO",1:"")_"^"_$S(VAEL(5):"YES",VAEL(5)=0:"NO",1:"")_"^"_$P(VAEL(6),"^",2)_"^"_PERC
	S @ARY@("DPT SC HIDDEN LABELS")=$S(((+VAEL(3))!($O(^DPT(DFN,.372,0)))):"%^% - SERVICE CONNECTED^SERVICE CONNECTED:^SC CONDITIONS:^S/C",1:"  ^  ^  ^  ^  ")
	I $O(^DPT(DFN,.372,0)),VAEL(4)!$P($G(^DG(391,+VAEL(6),0)),"^",2) S (COUNT,COND)=0 F  S COND=$O(^DPT(DFN,.372,COND)) Q:COND=""  D
	.S NODE0=$G(^DPT(DFN,.372,COND,0)) Q:'$P(NODE0,"^",3)  S DESCR=$G(^DIC(31,+NODE0,0)),COUNT=COUNT+1
	.S PERC=$P(NODE0,"^",2),PERC=$S(PERC="":"",1:$J(PERC,3,0))
	.S @ARY@("DPT PATIENT'S SC CONDITIONS",COUNT)=$S($P(DESCR,"^",4)'="":$P(DESCR,"^",4),1:$P(DESCR,"^",1))_"^"_PERC_"^"_PERC_"%"_"^"_PERC_"%SC"_"^"_PERC_"% - SERVICE CONNECTED"
	;
	;get service data
	D SVC^VADPT
	I VAERR S DATA="^^^^"
	E  S DATA=$S(VASV(1):"YES",1:"NO")_"^"_$S(VASV(2):"YES",1:"NO")_"^"_$S(VASV(3):"YES",1:"NO")_"^"_$S(VASV(4):"YES",1:"NO")_"^"_$S(VASV(5):"YES",1:"NO")
	;
	;get the persian gulf indicator - not returned by VADPT
	S EC=$P($G(^DPT(DFN,.322)),"^",13)
	S @ARY@("DPT SERVICE HISTORY RELATED DATA")=DATA_"^"_$S(EC="Y":"YES",1:"NO")
	;
	;displays questions concerning treatment related to service only
	;if they apply
	;
	S DATA=$S(VAEL(3):"Was treatment for a SC condition? __ YES __ NO",1:"")_"^"
	S DATA=DATA_$S(VASV(2):"Was treatment related to exposure to Agent Orange? __ YES __ NO",1:"")_"^"
	S DATA=DATA_$S(VASV(3):"Was treatment related to exposure to Ionization Radiation? __ YES __ NO",1:"")
	S @ARY@("DPT SC TREATMENT QUESTIONS")=DATA
	;
	;note: must store the 4th question in an annex node
	S DATA="^^^"_$S(EC="Y":"Was treatment related to exposure to Environmental Contaminants? __ YES __ NO",1:"")_"^"
	I VASV(2)!VASV(3)!(EC="Y") D
	.S DATA=DATA_"Was treatment related to: "_$S(VASV(2):"AO __ ",1:"")_$S(VASV(3):"IR __ ",1:"")_$S(EC="Y":"EC __",1:"")
	E  S DATA=DATA_" "
	S @ARY@("DPT SC TREATMENT QUESTIONS",1)=DATA
	Q
	;
BLANKS	;returns NOTHING for printing blank lines
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IBDF UTILITY FOR BLANK LINES")=""
	Q
LABELS	;returns NOTHING for printing labels only, ie, no data
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IBDF UTILITY FOR LABELS ONLY")=""
	Q

IBDFN1
IBDFN1	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
CLINIC	;returns clinic name
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"SD CLINIC NAME")=$S($G(IBCLINIC):$P($G(^SC(IBCLINIC,0)),"^",1),1:"UNSPECIFIED")
	Q
DIVISION	;returns the name of the division of IBCLINIC in ien^name format
	Q:'$G(IBCLINIC)
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"SD DIVISION NAME")=$P($$DIVISION^IBDF1B5(+IBCLINIC),"^",2)
	Q
INST	;returns the name of the institution of IBCLINIC
	Q:'$G(IBCLINIC)
	N INST
	S INST=$P($G(^SC(IBCLINIC,0)),"^",4)
	I 'INST S INST=+$$DIVISION^IBDF1B5(+IBCLINIC) S:INST INST=$P($G(^DG(40.8,INST,0)),"^",7)
	S:INST INST=$P($G(^DIC(4,INST,0)),"^")
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"SD INSTITUTION NAME")=INST
	Q
	;
SAMEDAY	;get all future, same day appts
	N TO
	S TO=DT+.999999
	D GETAPPTS("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),""SD FUTURE APPTS, SAME DAY"")",TO)
	Q
	;
ALLFUTR	;get all future appts
	D GETAPPTS("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),""SD FUTURE APPTS, ALL"")")
	Q
	;
CLNCFUTR	;get all future appts for the same clinic
	Q:'$G(IBCLINIC)
	D GETAPPTS("^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),""SD FUTURE APPTS, SAME CLINIC"")","",IBCLINIC)
	Q
	;
GETAPPTS(ARY,TO,CLINIC)	;
	Q:'$G(DFN)!('$G(IBAPPT))
	N CNT,SUB,NODE,TIME
	K VASD,VADPT
	S VASD("F")=IBAPPT
	S:$G(TO) VASD("T")=TO
	S:$G(CLINIC) VASD("C",CLINIC)=""
	D SDA^VADPT
	I '$G(VAERR) S (SUB,CNT)=0 F  S SUB=$O(^UTILITY("VASD",$J,SUB)) Q:'SUB  D
	.S NODE=$G(^UTILITY("VASD",$J,SUB,"E")) Q:NODE=""
	.S CNT=CNT+1
	.S TIME=$P(NODE,"^",1)
	.S @ARY@(CNT)=$P(TIME,"@",1)_"^"_$P(TIME,"@",2)_"^"_NODE
	K ^UTILITY("VASD",$J),VADPT,VASD,VAERR
	Q

IBDFN2
IBDFN2	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
APPT	;returns appt date@time^date^time
	N ARY,Y
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	S Y="" I IBAPPT S Y=IBAPPT K %DT D DD^%DT
	S @ARY@("SD APPOINTMENT DATE/TIME")=Y_"^"_$P(Y,"@")_"^"_$P(Y,"@",2)
	Q
NOW	;returns date and time
	;FORMATS:
	; MMM DD, YYYY@HH:MM:SS at the "IB DATE@TIME" subscript
	; MMM DD,YYYY at the "IB DATE" subscript
	; HH:MM:SS at the "IB TIME" subscript      
	N Y,%,%H,%I,X
	D NOW^%DTC S Y=% K %DT D DD^%DT
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE@TIME")=Y
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT TIME")=$P(Y,"@",2)
	S ^TMP("IB",$J,"INTERFACES",+$G(DFN),"IB CURRENT DATE")=$P(Y,"@")
	Q
	;
SPSEMPLR	;returns spouse's employer,address, telephone
	;input variables - DFN
	N ARY,CNT S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	S VAOA("A")=6 D OAD^VADPT
	I VAERR S (@ARY@("DPT SPOUSE'S EMPLOYER NAME"),@ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE"),@ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES"))=""  Q
	I VAOA(1)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
	I VAOA(2)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
	I VAOA(3)'="" S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
	S @ARY@("DPT SPOUSE'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
	S @ARY@("DPT SPOUSE'S EMPLOYER TELEPHONE")=VAOA(8)
	S @ARY@("DPT SPOUSE'S EMPLOYER NAME")=VAOA(9)
	K VAOA,VAERR
	Q
EMPLOYER	;returns employer,address, telephone
	;input variables - DFN
	N ARY,CNT S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",DFN)"
	S VAOA("A")=5 D OAD^VADPT
	I VAERR S (@ARY@("DPT PATIENT'S EMPLOYER NAME"),@ARY@("DPT PATIENT'S EMPLOYER TELEPHONE"),@ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES"))=""  Q
	I VAOA(1)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(1),CNT=CNT+1
	I VAOA(2)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(2),CNT=CNT+1
	I VAOA(3)'="" S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(3),CNT=CNT+1
	S @ARY@("DPT PATIENT'S EMPLOYER ADDRESS LINES",CNT)=VAOA(4)_", "_$P(VAOA(5),"^",2)_" "_VAOA(6)
	S @ARY@("DPT PATIENT'S EMPLOYER TELEPHONE")=VAOA(8)
	S @ARY@("DPT PATIENT'S EMPLOYER NAME")=VAOA(9)
	K VAOA,VAERR
	Q
MT	;returns means test data
	N Y,RET,GET
	S GET=$$LST^DGMTU(DFN)
	S RET=$P(GET,"^",3)_"^"
	S Y=$P(GET,"^",2) D DD^%DT
	S RET=RET_Y_"^"_$P(GET,"^",4)
	S ^TMP("IB",$J,"INTERFACES",DFN,"DPT PATIENT'S MEANS TEST DATA")=RET
	Q
ALLERGY	;outputs a list of the patient's allergies
	;piece #1=allergy name,#2=type of allergy(FOOD/DRUG/OTHER),#3=type of allergy(F/D/O),#4=VERFIED?(YES/NO),#5=TRUE ALLERGEN(YES/NO)
	N ARY,GMRA,GMRAL,NODE,I,COUNT,TYPE
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN),""GMRA PATIENT'S ALLERGIES"")"
	D:$L($T(GMRADPT^GMRADPT)) ^GMRADPT
	S (COUNT,I)=0 F  S I=$O(GMRAL(I)) Q:'I  D
	.S COUNT=COUNT+1
	.S NODE=$G(GMRAL(I))
	.S TYPE=$P(NODE,"^",3)
	.S @ARY@(COUNT)=$P(NODE,"^",2)_"^"_$S(TYPE="D":"DRUG",TYPE="F":"FOOD",TYPE="O":"OTHER",1:"")_"^"_TYPE_"^"_$S($P(NODE,"^",4)=1:"YES",1:"NO")_"^"_$S($P(NODE,"^",5)=0:"YES",$P(NODE,"^",5)=1:"NO",1:"")
	Q

IBDFN3
IBDFN3	;ALB/CJM - ENCOUNTER FORM - (entry points for reports);5/21/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
RXPROF	;Outpatient Pharmacy Action Profile and Information Profile
	;INPUTS:
	;PSDAYS = number of days to print the medication profile for
	;PSTYPE=1 for the Action Profile, =0 for the Information Profile
	;DFN
	;
	N IBDFN,ADDR,ADDRFL,CLASS,CNDT,DRUG,HDFL,I,II,J,L,LINE,P,PAGE,PSDOB,PSIIX,PSNAME,PSOI,PSSN,PSIX,PGM,PRF,PSDATE,VAL,VAR,RX,RX0,RX2,ST,ST0,PSDAY,RF,RFS
	N PSOPRINT,X1,X2,ZTSK,X,Y,PSII,PSDT,LMI,PSCNT,PSDIS,RXCNTLN,ELN,FN,CNT,VAERR,LN,PCLASS,PSOIFSUP
	Q:(+$G(DFN)=0)
	S IBDFN=DFN
	S X1=DT,X2=-PSDAYS D C^%DTC S (PSDATE,PSDAY)=X
	S LINE="" F I=1:1:132 S LINE=LINE_"-"
	S PAGE=1 D HD^PSOSD2,PAT^PSOSD
	I PSTYPE,$L($T(RXPAD^PSOSD1)) D RXPAD^PSOSD1
	W:$Y @IOF
	S DFN=IBDFN
	K VA,VAEL,VAPA
	Q
	;
DRUGS	;prints the medication profile of Outpatient Pharmacy
	;doesn't seem to be needed, integration agreement not obtained to use this
	;INPUTS:
	;PLS=0 for long, 1 for short
	;PSRT="D" to sort by date, "M" to sort by medication, "C" to sort by class
	;DFN
	;
	;N IBDFN,DRUG,ZII,PHYS,CT,AL,I1,REF,LMI,PI,FN,Y,I,J,RX,DRX,ST,RX0,RX2,DA,D0,DIC,DIPGM,II,K,ST0,TEMP,Z,LMI,RXD,RXF,PI,AL,D0,DIPGM,II,PSCNT,PSDIV,PSLC,PSDIS
	;
	;S (FN,IBDFN,D0,DA)=DFN
	;I '$D(^PS(55,IBDFN,"P")),'$D(^("ARC")) D ^PSODEM W !?20,"NO PHARMACY INFORMATION" G RXQ
	;I '$O(^PS(55,IBDFN,"P",0)),$D(^PS(55,IBDFN,"ARC")) D ^PSODEM W !!,"PATIENT HAS ARCHIVED PRESCRIPTIONS",! G RXQ
	;D P^PSOP
RXQ	;W @IOF
	;S DFN=IBDFN
	;K ^UTILITY($J)
	Q
ROUTING	;entry point for printing a routing sheet for a single patient
	;Sets IBPRINT=1 so that it will be known that this entry point was used
	;inputs - 
	;    DFN
	;    IBAPPT - the appointment
	;    IBCLINIC - pointer to the clinic
	;protect variables that may be changed
	N %,%DT,%I,ADDR,ALL,APDATE,IBDFN,DGMT,DIC,DIV,G,GDATE,H,I,J,K,L,LL,M,NAME,NDATE,ORD,ORDER,P,POP,PRDATE
	N SC,SDA,SDATE,SDCNT,SDI,SDI1,SDIQ,SDM,SDREP,SDSP,SDSTART,SDVA,SDX,SDX1,SSN,SZ,TDO,X,X1,Y,ZIP,ZX,VAR,C,V,SDEF,A,SD,SCN,SDTD,SDSCCOND,SDPARMS
	;
	;protect DFN
	Q:(+$G(DFN)=0)
	S IBDFN=DFN N DFN S DFN=IBDFN
	;
	;set the start date to the date of the appt
	S SDPARMS("START")=IBAPPT\1
	;keep the divice open
	S SDPARMS("DO NOT CLOSE")=1
	;set DIV to the division of IBCLINIC
	S DIV=$P($G(^SC(IBCLINIC,0)),"^",15)
	D EN1^SDROUT1
	Q

IBDFN4
IBDFN4	;ALB/CJM - ENCOUNTER FORM - (entry points for selection routines);5/21/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
CPT	;select ambulatory procedures
	N NAME,CODE,SCREEN,IBDESCR,ARY,QUIT
	S QUIT=0
	S ARY="^TMP(""IB"",$J,""INTERFACES"",""DG SELECT CPT PROCEDURE CODES"")"
	I '$D(@ARY@("SCREEN")) D CPTSCRN Q:QUIT
	E  S SCREEN=$G(@ARY@("SCREEN"))
	K DIC S DIC=81,DIC(0)="AEMQZ",DIC("S")=SCREEN
	I $D(^DIC(81)) D ^DIC K DIC I +Y>0 D
	.S CODE=$P(Y(0),U),NAME=$P(Y(0),U,2),IBDESCR=$G(^ICPT(+Y,"D",1,0))_" "_$G(^ICPT(+Y,"D",2,0))
	.S @ARY=CODE_"^"_NAME_"^"_IBDESCR
	E  K @ARY ;kill either if file doesn't exist or nothing chosen
	Q
CPTSCRN	;
	S SCREEN="I '$P(^(0),U,5)"
	;
	;don't ask the user about categories - it doesn't work well 
	;K DIR S DIR(0)="YA",DIR("A")="Do you want to select a CPT from a particular CPT category? ",DIR("?")="Answer YES if you want to screen out all CPT codes that do not belong to a particular category",DIR("B")="NO"
	;I $D(^DIC(81.1)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
	;.K DIC S DIC="81.1",DIC(0)="AEQ",DIC("S")="I $P(^(0),U,2)=""m"""
	;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",$P($G(^DIC(81.1,+$P(^(0),U,3),0)),U,3)="_+Y
	S @ARY@("SCREEN")=SCREEN
	Q
	;
ICD9	;select ICD-9 codes
	N IBDX,CODE,SCREEN,IBDESCR,ARY,QUIT
	S QUIT=0
	S ARY="^TMP(""IB"",$J,""INTERFACES"",""DG SELECT ICD-9 DIAGNOSIS CODES"")"
	I $D(@ARY@("SCREEN")) S SCREEN=$G(@ARY@("SCREEN"))
	E  D ICD9SCRN Q:QUIT
	K DIC S DIC=80,DIC(0)="AEMQZI",DIC("S")=SCREEN
	I $D(^DIC(80)) D ^DIC K DIC I +Y>0 D
	.S CODE=$P(Y(0),U),IBDX=$P(Y(0),U,3),IBDESCR=$P($G(^ICD9(+Y,1)),"^")
	.S @ARY=CODE_"^"_IBDX_"^"_IBDESCR
	E  K @ARY ;kill if either file doesn't exist or nothing chosen - this is how to let the encounter form utilities know nothing was selected
	Q
ICD9SCRN	;
	S SCREEN="I '$P(^(0),U,9)"
	;
	;don't ask the user about categories - it doesn't work well 
	;K DIR S DIR(0)="YA",DIR("A")="Do you want to select an ICD diagnosis from a particular diagnostic category? ",DIR("B")="NO"
	;S DIR("?")="Answer YES if you want to screen out all diagnosis codes that do not belong to a particular category"
	;I $D(^DIC(80.3)) D ^DIR K DIR S:$D(DIRUT) QUIT=1 Q:$D(DIRUT)  I +Y D
	;.K DIC S DIC="80.3",DIC(0)="AEQ"
	;.D ^DIC K DIC I +Y>0 S SCREEN=SCREEN_",+$P(^(0),U,5)="_+Y
	S @ARY@("SCREEN")=SCREEN
	Q
NULL	;returns NOTHING for selection
	S ^TMP("IB",$J,"INTERFACES","IBDF UTILITY FOR SELECTING BLANKS")=""
	Q

IBDFN5
IBDFN5	;ALB/CJM - ENCOUNTER FORM - (entry points for used to print Health Summaries);6/16/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRNTSMRY(GMTSTYP)	;prints the health summary
	;INPUTS:
	;DFN 
	;GMTSTYP is a ptr to the HEALTH SUMMARY TYPE file
	;
	;
	;check that required variables are defined
	Q:'$G(GMTSTYP)!'$G(DFN)
	I '$L($T(ENX^GMTSDVR)),$L($T(SELTYP1^GMTS)),$L($T(EN^GMTS1)) D
	.;protect stuff that might be killed
	.N S1,S2,S2,GMI,GMTSEG,GMTSEGI,GMI,GMTSTITL,GMTSCVD,GMTSICF,GMTSCKP,GMW,GMTSEGC
	.N GMTSNPG,GMTSPG,GMTSQIT,GMTSHDR,GMTSHD2,GMTSBRK,GMTSLCMP,GMTSDTC,GMTSEGN,GMTSE,GMTSEGR,GMTSEQ,GMTSEGH,GMTSEGL,GMTSDLM,GMTSDLS,GMTSNDM,GMTSN,GMTSQ,GMTSQIT,ZTSK,GMTSDLS,GMTSN,GMTSDLM
	.N %T,DIC,GMTS,GMTSLO,GMTSPNM,GMTSRB,GMTSWARD,GMTSDOB,X,Y,VA,VAIN,VAINDT,VADM,VAEL,VAPA,VAERR,GMTSSN,GMTS0,GMTS1,GMTS2
	.N GMTSAGE,GMTSTIM,GMTSEGH,GMTSEGL,GMTSHDR,GMTSNPG,GMTSPG,GMTSX,ENTRY,Z1,GMTSDTM,GMTSLOCK,GMTSLPG,SEX,POP,C,GMTSTOF
	.S GMTSTITL=$G(^GMT(142,GMTSTYP,"T")) S:GMTSTITL="" GMTSTITL=$P($G(^GMT(142,GMTSTYP,0)),"^")
	.D SELTYP1^GMTS
	.D EN^GMTS1
	I $L($T(ENX^GMTSDVR)) D ENX^GMTSDVR(DFN,GMTSTYP)
	Q

IBDFN6
IBDFN6	;ALB/CJM - ENCOUNTER FORM - INTERFACE ROUTINES ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
ADDRESS	;returns address, telephone
	;input variables - DFN
	N ARY,CNT,LINE S CNT=1
	S ARY="^TMP(""IB"",$J,""INTERFACES"",+$G(DFN))"
	D ADD^VADPT
	I VAERR S (@ARY@("DPT PATIENT ADDRESS LINES"),@ARY@("DPT PATIENT'S TELEPHONE NUMBER"),@ARY@("DPT PATIENT SHORT ADDRESS"))=""  Q
	I VAPA(1)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(1),CNT=CNT+1
	I VAPA(2)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(2),CNT=CNT+1
	I VAPA(3)'="" S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(3),CNT=CNT+1
	S @ARY@("DPT PATIENT ADDRESS LINES",CNT)=VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_VAPA(6)
	;
	;short address
	F CNT=1:1:3 S LINE=VAPA(CNT) Q:LINE'=""
	S @ARY@("DPT PATIENT SHORT ADDRESS")=LINE_","_VAPA(4)_", "_$P(VAPA(5),"^",2)_" "_VAPA(6)
	;
	S @ARY@("DPT PATIENT'S TELEPHONE NUMBER")=VAPA(8)
	K VAPA,VA,VAERR,VAEL
	Q
	;
INSURANC	;returns all sorts of insurance information
	;input - DFN,ACT
	;ACT="" to return all insurance, ACT=1 to return only active insurance, ACT=2 to return active insurance and insurance that will not reimburse (Medicare)
	;
	Q:'$G(DFN)
	N NODE,SUB,ITEM,ENTRY,DATE,ARY,WHO,METHOD
	S METHOD=1
	I $L($T(ALL^IBCNS1)) D
	.S ARY="^TMP(""IBDF"",$J,""INSURANCE"")"
	.K @ARY
	.D ALL^IBCNS1(DFN,ARY,$G(ACT))
	;
	;do it the old way, on theory that old ways are best?
	E  Q:'$L($T(DGCRNS^DGCRNS))  N DGCRDD,DGCRINS,DGCRDDI,DGCROUTP D
	.S ARY="DGCRDD",DGCROUTP=$S('$G(ACT):2,1:1),METHOD=2
	.D DGCRNS^DGCRNS
	S SUB=0,ITEM=1,ENTRY="" F  S SUB=$O(@ARY@(SUB)) Q:'SUB  D
	.S NODE=$S(METHOD=1:$G(@ARY@(SUB,0)),1:$G(@ARY@(SUB))) Q:NODE=""
	.S:$P(NODE,"^") ENTRY=$P($G(^DIC(36,$P(NODE,"^"),0)),"^")
	.S Y=$P(NODE,"^",4) I Y>0 D DD^%DT S $P(ENTRY,"^",2)=Y
	.S $P(ENTRY,"^",3)=$P(NODE,"^",2)
	.S $P(ENTRY,"^",4)=$P(NODE,"^",3)
	.S $P(ENTRY,"^",5)=$P(NODE,"^",15)
	.S $P(ENTRY,"^",6)=$P(NODE,"^",17)
	.S WHO=$P(NODE,"^",6)
	.S $P(ENTRY,"^",7)=$S(WHO="v":"APPLICANT",WHO="s":"SPOUSE",WHO="o":"OTHER",1:"")
	.S ^TMP("IB",$J,"INTERFACES",DFN,"DPT PATIENT'S INSURANCE "_$S($G(ACT)="":"- ALL",$G(ACT)=1:"- ACTIVE ONLY",$G(ACT)=2:"POLICIES",1:""),ITEM)=ENTRY
	.S ITEM=ITEM+1
	K @ARY
	Q
	;
INSURED	;is the patient insured?
	;input - DFN
	Q:'$G(DFN)
	N INS S INS=""
	;do it the new way?
	I $L($T(INSURED^IBCNS1)) D
	.S INS=$$INSURED^IBCNS1(DFN)
	;
	;do it the old way
	E  Q:'$L($T(DGCRNS^DGCRNS))  D
	.N DGCRDD,DGCRDDI,DGCRINS,DGCROUTP
	.D DGCRNS^DGCRNS
	.S INS=$G(DGCRINS)
	S ^TMP("IB",$J,"INTERFACES",DFN,"DPT IS PATIENT INSURED?")=$S(INS=1:"YES",INS=0:"NO",1:"UNKNOWN")
	Q

IBDFU
IBDFU	;ALB/CJM - ENCOUNTER FORM (utilities) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
HEADER(HDR,HDISP,IBY,IBX,IBW)	;writes the header
	N ON,OFF,POS,BOLD
	S BOLD=""
	I HDR="" Q
	I HDISP["U" D DRWSTR(IBY,IBX,"","U",IBW)
	S POS=IBX
	I HDISP["C",($L(HDR)<(IBW)) S POS=IBX+((IBW-$L(HDR)\2))
	I HDISP["B" S BOLD="B" I HDISP["U",($L(HDR)<IBW) S BOLD="BC"
	D DRWSTR(IBY,POS,$E(HDR,1,(IBW)),BOLD)
	Q
DRWBOX(IBY,IBX,W,H)	;draws a box
	I W=1,H N I D  Q
	.D DRWVLINE(IBY+1,IBX,H-2)
	I H=1,W D DRWSTR(IBY,IBX,$$HLINE(W),"") Q
	I W<2,H<2 Q
	D DRWSTR(IBY,IBX,"A"_$$HLINE(W-2,"B")_"C","G")
	D DRWSTR(IBY+H-1,IBX,"F"_$$HLINE(W-2,"B")_"E","G")
	D DRWVLINE(IBY+1,IBX,H-2,"|"),DRWVLINE(IBY+1,IBX+W-1,H-2,"|")
	Q
HLINE(L,CHAR)	;returns a horizontal line
	I $G(CHAR)="" S CHAR="_"
	N LINE S LINE=""
	S $P(LINE,CHAR,L)=CHAR
	Q LINE
DRWVLINE(IBY,IBX,IBH,CHAR)	;draw vertical line
	I IBCMPILE D CMPVLINE Q:'IBCMPILE("WRITE")  N IBCMPILE S IBCMPILE=0
	N I
	I $D(CHAR) D  Q
	.F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,CHAR)
	F I=0:1:IBH-1 D DRWSTR(IBY+I,IBX,"D","G")
	Q
	;
DRWSTR(IBY,IBX,STRING,OPTIONS,IBW)	;
	;IBW is the width over which to apply OPTIONS
	;OPTIONS - B=bold,G=graphics,U=underlind
	;
	N UNDRLINE,END,ON,OFF,S,CURLINE
	S IBW=$G(IBW),OPTIONS=$G(OPTIONS),STRING=$G(STRING)
	I (IBW'>0)&(STRING="") Q
	I IBCMPILE D CMPSTR Q:'IBCMPILE("WRITE")
	S IBY=IBY+IBBLK("Y"),IBX=IBX+IBBLK("X")
	I IBLISTPR,$G(IBTOPLN),$G(IBBOTLN),((IBY<IBTOPLN)!(IBY>IBBOTLN)) Q
	S (UNDRLINE,ON,OFF)=""
	;
	I OPTIONS'="" D
	.I OPTIONS["B" S ON=ON_"B1",OFF=OFF_"B0"
	.I IBLISTPR,OPTIONS["U" S ON=ON_"U1",OFF=OFF_"U0"
	.I OPTIONS["C",IBLISTPR S OFF=OFF_"U1"
	.I 'IBLISTPR,OPTIONS["U",'IBCRT S UNDRLINE=1
	;
	I IBW'>$L(STRING) S IBW=$L(STRING)
	;
	;for laser printing - NOT used presently
	;I '$G(IBLISTPR),$G(IBRASTER) D  Q
	;.I ON'="" W ON
	;.S DX=IBX,DY=IBY X IOXY
	;.W $J($G(STRING),+IBW) I OFF'="" W OFF
	;.I UNDRLINE N ARY S ARY="ARY",ARY(IBY,IBX)=$$HLINE(IBW) D RASPRINT^IBDF2F(.ARY)
	;
	I '$G(IBLISTPR) D  Q
	.I OPTIONS["G",IBGRPHCS S @IBGARY@(IBY,IBX)=STRING Q
	.I OPTIONS["G" S STRING=$$GRPHCS(STRING)
	.S END=IBX+IBW-1
	.I UNDRLINE D UNDRLINE(IBY,IBX,IBW)
	.I STRING'="" D
	..S CURLINE=$G(@IBARY@(IBY))
	..S:CURLINE="" CURLINE=$J("",IBFORMW)
	..S CURLINE=$E(CURLINE,1,IBX)_STRING_$E(CURLINE,IBX+1+$L(STRING),IBFORMW)
	..S @IBARY@(IBY)=CURLINE
	.I ON'="" S @IBCTRLS@(IBY,IBX)=$G(@IBCTRLS@(IBY,IBX))_ON,@IBCTRLS@(IBY,END+1)=$G(@IBCTRLS@(IBY,END+1))_OFF
	;
	I $G(IBLISTPR) D
	.I OPTIONS["G" S STRING=$$GRPHCS(STRING)
	.S CURLINE=$G(@IBARY@(IBY+1,0))
	.I CURLINE="" S CURLINE=$J((IBY#1000)+1,3,0)_$J("",IBFORMW) D CNTRL^VALM10(IBY+1,4,1,IORVON,IORVOFF) I (IBY+1)>VALMCNT S VALMCNT=(IBY+1)
	.S CURLINE=$E(CURLINE,1,IBX+4)_STRING_$E(CURLINE,IBX+5+$L(STRING),IBFORMW+5)
	.S @IBARY@(IBY+1,0)=CURLINE
	.I ON]"" D CNTRL^VALM10(IBY+1,IBX+5,IBW,$$CTRLS(ON),$$CTRLS(OFF))
	Q
UNDRLINE(IBY,IBX,W)	; underlining with when not using printers underlining ability
	N LINE
	S LINE=$G(@IBUNDRLN@(IBY))
	S LINE=$$PADRIGHT($E(LINE,1,IBX),IBX)_$$HLINE(W,"_")_$E(LINE,IBX+W+1,IBFORMW)
	S @IBUNDRLN@(IBY)=LINE
	Q
PADRIGHT(STR,LEN)	; pad right
	N B S STR=$E(STR,1,LEN)
	S:LEN'=$L(STR) $P(B," ",LEN-$L(STR))=" "
	Q STR_$G(B)
CMPSTR	;saves compiled string write
	S IBWRTCNT("S")=IBWRTCNT("S")+1
	S ^IBE(357.1,IBBLK,"S",IBWRTCNT("S"),0)=IBY_"^"_IBX_"^"_OPTIONS_"^"_IBW_"^"_STRING
	Q
CMPVLINE	;save compiled vertical line write
	S IBWRTCNT("V")=IBWRTCNT("V")+1
	S ^IBE(357.1,IBBLK,"V",IBWRTCNT("V"),0)=IBY_"^"_IBX_"^"_IBH_"^"_$G(CHAR)
	Q
CTRLS(CTRLS)	;returns the needed escape sequences
	N I,X,RET S RET=""
	F I=1:1 S X=$E(CTRLS,((I-1)*2)+1,((I-1)*2)+2) Q:X=""  S RET=RET_$S(X="B0":IOINORM,X="B1":IOINHI,X="U0":IOUOFF_IOINORM,X="U1":IOUON,X="G1":IOG1,X="G0":IOG0,1:"")
	Q RET
	;
GRPHCS(GRPHCS)	;returns the needed graphics characters
	N I,X,RET S RET=""
	F I=1:1 S X=$E(GRPHCS,I) Q:X=""  S RET=RET_$S(X="A":IOTLC,X="B":IOHL,X="C":IOTRC,X="D":IOVL,X="E":IOBRC,X="F":IOBLC,1:"")
	Q RET

IBDFU1
IBDFU1	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;utilities
LSTDESCR(IBLST)	;parses the LIST record pointed to by IBBLK and puts the
	;descripition in IBBLK array - should be called by reference
	;returns 1 if list description not found
	N NODE,J,C
	S NODE=$G(^IBE(357.2,IBLST,0))
	Q:NODE="" 1
	S IBLST("NAME")=$P(NODE,"^",1)
	S IBLST("BLK")=$P(NODE,"^",2)
	S IBLST("HDR")=$P(NODE,"^",5)
	S IBLST("DHDR")=$P(NODE,"^",6)
	S IBLST("SEP")=$P(NODE,"^",7)
	S IBLST("BTWN")=$P(NODE,"^",8)
	S IBLST("DGHDR")=$P(NODE,"^",9)
	S IBLST("RTN")=$P(NODE,"^",11)
	S IBLST("ULSLCTNS")=$P(NODE,"^",12)
	S IBLST("NUMCOL")=$P(NODE,"^",13)
	;get column information
	F J=1:1:4 S C=$O(^IBE(357.2,IBLST,1,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLST,1,C,0))) S IBLST("Y",J)=$P(NODE,"^",2),IBLST("X",J)=$P(NODE,"^",3),IBLST("H",J)=$P(NODE,"^",4)
	;get subcolumn information
	F J=1:1:6 S C=$O(^IBE(357.2,IBLST,2,"B",J,"")) S NODE=$S('C:"",1:$G(^IBE(357.2,IBLST,2,C,0))) D
	.S IBLST("SCHDR",J)=$P(NODE,"^",2),IBLST("SCW",J)=$P(NODE,"^",3),IBLST("SCTYPE",J)=$P(NODE,"^",4),IBLST("SCPIECE",J)=$P(NODE,"^",5),IBLST("SCSYMBOL",J)=$P(NODE,"^",6),IBLST("SCEDITABLE",J)=$P(NODE,"^",7)
	Q 0
	;
SCDESCR(LIST,CWIDTH,EWIDTH,EOFFSET)	;computes the offsets for each subcolumn
	;computes the column width (CWIDTH),entry width without end "|",and entry offset
	;sets MTSLCTN=to an empty selection (contains marking areas and subcolumnseperators),sets DIVIDER to the string that divides the subcolumns
	N I,SCHDR,CHDR,W,FLAG
	;how to separate subcolumns, what should the edges be
	S:LIST("SEP")=1 LIST("SEP")=" ",LIST("ENDS")=" "
	;
	;if the each end has one space, total separation between columns will be two spaces
	S:LIST("SEP")=2 LIST("SEP")="  ",LIST("ENDS")=" "
	;
	S:LIST("SEP")=3 LIST("SEP")="|",LIST("ENDS")="|"
	S:LIST("SEP")=4 LIST("SEP")=" | ",LIST("ENDS")="| "
	;
	S CWIDTH=$L(LIST("ENDS"))
	S CHDR="",FLAG=0
	F I=1:1:6 D
	.I (LIST("SCTYPE",I)'=1)&(LIST("SCTYPE",I)'=2) S LIST("SCTYPE",I)="" Q
	.S:LIST("SCTYPE",I)=2 LIST("SCSYMBOL",I)=$P($G(^IBE(357.91,LIST("SCSYMBOL",I),0)),"^",2),LIST("SCW",I)=$L(LIST("SCSYMBOL",I))
	.I 'LIST("SCW",I) S LIST("SCTYPE",I)="" Q
	.I LIST("SCHDR",I)'="" S FLAG=1,LIST("SCHDR",I)=$E(LIST("SCHDR",I),1,LIST("SCW",I)) I 'LIST("ULSLCTNS") D
	..S LIST("SCOS",I)=CWIDTH+((LIST("SCW",I)-$L(LIST("SCHDR",I)))\2)
	.S CWIDTH=CWIDTH+LIST("SCW",I)+$L(LIST("SEP"))
	.I LIST("ULSLCTNS") D
	..S SCHDR=LIST("SCHDR",I)
	..S W=$L(SCHDR)
	..S SCHDR=$$PADRIGHT^IBDFU($J(SCHDR,W+((LIST("SCW",I)-W)\2)),LIST("SCW",I))
	..S:CHDR'="" CHDR=CHDR_$J("",$L(LIST("SEP")))
	..S CHDR=CHDR_SCHDR
	;
	;calculate the column width
	S CWIDTH=CWIDTH+$L(LIST("ENDS"))-$L(LIST("SEP"))
	;
	;EOFFSET=1 if ends contain "|"
	S EOFFSET=$S(LIST("ENDS")["|":1,1:0)
	;
	;EWIDTH=width without "|" at ends
	S EWIDTH=CWIDTH-(2*EOFFSET)
	;return the value for the subcolumn headers in LIST
	;
	I LIST("ULSLCTNS") D
	.I 'FLAG S LIST("CHDR")="" Q
	.S LIST("CHDR")=$J("",($L(LIST("ENDS"))-EOFFSET))_CHDR
	Q
	;
PAGE(IBFORM,IBFORMW,IBFORMHT)	;get the page size (pass IBFORMW,IBFORMHT by reference)
	N NODE S NODE=""
	S:IBFORM NODE=$G(^IBE(357,IBFORM,0))
	S IBFORMW=$P(NODE,"^",9)
	S:'IBFORMW IBFORMW=132
	S IBFORMHT=$P(NODE,"^",10)
	S:'IBFORMHT IBFORMHT=80
	Q

IBDFU10
IBDFU10	;ALB/CJM - ENCOUNTER FORM (uncompile forms,blocks);DEC 14,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
UNCMPILE	;
	N BLK,FORM
	;
	W !,"Beginning to Uncompile Forms and Blocks"
	;
	;set COMPILED? field for forms to 0
	S FORM=0 F  S FORM=$O(^IBE(357,FORM)) Q:'FORM  S $P(^IBE(357,FORM,0),"^",5)=0
	;
	;delete cross-references for compiled blocks
	S BLK=0 F  S BLK=$O(^IBE(357.1,BLK)) Q:'BLK  D UNCMPILE^IBDF2A(BLK)
	;
	W !,"Forms and Blocks have been Uncompiled!"
	Q

IBDFU1A
IBDFU1A	;ALB/CJM - ENCOUNTER FORM (read data field description);NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;utilities
FLDDESCR(IBFLD)	;IBFLD should be a pointer to the IB DATA FIELD file
	;parses the 0 NODE and returns the fields
	;returns 1 if the field description is not found
	N NODE
	S:$G(IBFLD) NODE=$G(^IBE(357.5,IBFLD,0))
	Q:NODE="" 0
	S FLDNAME=$P(NODE,"^",1)
	S BLK=$P(NODE,"^",2)
	S RTN=$P(NODE,"^",3)
	S LASTITEM=$P(NODE,"^",4)
	S ITEM=+$P(NODE,"^",5)
	S LABEL=$P(NODE,"^",6)
	S DISPLAY=$P(NODE,"^",7)
	S XIO=+$P(NODE,"^",10)
	S YIO=+$P(NODE,"^",11)
	S HIO=+$P(NODE,"^",12)
	S SPACING=$P(NODE,"^",13)
	S WIO=+$P(NODE,"^",14)
	Q 1
SFLDDSCR(IBFLD,LAST)	;gets the next subfield - LAST is the last subfield processed, IBFLD  is the field
	;outputs - LABEL,XIO,YIO,WIO,XLAB,YLAB,PIECE,LENGTH,LAST
	;returns 0 if no more subfields, LAST otherwise
	;
	N NODE
	F  S LAST=$O(^IBE(357.5,IBFLD,2,LAST)) Q:'LAST  S NODE=$G(^IBE(357.5,IBFLD,2,LAST,0)) I NODE'="" D  Q
	.S LABEL=$P(NODE,"^",1),DISPLAY=$P(NODE,"^",3),XLAB=$P(NODE,"^",4),YLAB=$P(NODE,"^",5),YIO=$P(NODE,"^",6),XIO=$P(NODE,"^",7),WIO=$P(NODE,"^",8),PIECE=$P(NODE,"^",9)
	Q LAST

IBDFU1B
IBDFU1B	;ALB/CJM - ENCOUNTER FORM ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;utilities
BLKDESCR(IBBLK)	;parses the block record pointed to by IBBLK and puts the
	;descripition in IBBLK array - should be called by reference
	;returns 1 if block description is too incomplete to print block
	N NODE0
	S NODE0=$G(^IBE(357.1,IBBLK,0))
	S IBBLK("NAME")=$P(NODE0,"^",1)
	S IBBLK("Y")=$P(NODE0,"^",4)
	S IBBLK("X")=$P(NODE0,"^",5)
	S IBBLK("W")=$P(NODE0,"^",6)
	S IBBLK("H")=$P(NODE0,"^",7)
	S IBBLK("BOX")=$P(NODE0,"^",10)
	S IBBLK("HDR")=$P(NODE0,"^",11)
	S IBBLK("HDISP")=$P(NODE0,"^",12)
	S IBBLK("S")=$P(NODE0,"^",3)
	Q:NODE0="" 1
	Q 0
	;
BLOCKPOS(IBBLK)	;gets just the block position
	;input - IBBLK=the block
	N NODE S NODE=""
	S:$G(IBBLK) NODE=$G(^IBE(357.1,IBBLK,0))
	S IBBLK("Y")=$P(NODE,"^",4),IBBLK("X")=$P(NODE,"^",5)
	Q
	;
RTNDESCR(RTN)	;RTN should be a pointer to the Package Interface file
	;parses node 0 and puts the info in the RTN array
	;RTN should be passed by reference
	;returns 1 if routine description is not found
	N NODE,I
	S NODE=""
	S:$G(RTN) NODE=$G(^IBE(357.6,RTN,0))
	S RTN("NAME")=$P(NODE,"^",1)
	S RTN("RTN")=$P(NODE,"^",2,3)
	S RTN("PKG")=$P(NODE,"^",4)
	S RTN("CHANGES")=$P(NODE,"^",5)
	S RTN("ACTION")=$P(NODE,"^",6)
	S RTN("DATATYPE")=$P(NODE,"^",7)
	S RTN("FULL")=$P(NODE,"^",8)
	S RTN("AVAIL")=$P(NODE,"^",9)
	S RTN("HSMRY?")=$P(NODE,"^",10)
	S RTN("HSMRY")=$P(NODE,"^",11)
	Q
ORTNDSCR(RTN)	;RTN should be a pointer to the Package Interface file
	;parses node 0 and 8 and puts the info in the RTN array - just the fields needed for selection and output interfaces
	;RTN should be passed by reference
	;returns 1 if routine description is not found
	N NODE,I
	S NODE=""
	S:$G(RTN) NODE=$G(^IBE(357.6,RTN,0))
	S RTN("NAME")=$P(NODE,"^",1)
	S RTN("RTN")=$P(NODE,"^",2,3)
	S RTN("CHANGES")=$P(NODE,"^",5)
	S RTN("ACTION")=$P(NODE,"^",6)
	S RTN("DATATYPE")=$P(NODE,"^",7)
	S RTN("FULL")=$P(NODE,"^",8)
	S RTN("AVAIL")=$P(NODE,"^",9)
	S RTN("NODES")=""
	S:$G(RTN) RTN("NODES")=$G(^IBE(357.6,RTN,8))
	Q
PRTNDSCR(RTN)	;RTN should be a pointer to the Package Interface file
	;parses node 0 and puts the info in the RTN array - just the fields needed for interfaces that print reports
	;RTN should be passed by reference
	;returns 1 if routine description is not found
	N NODE,I
	S NODE=""
	S:$G(RTN) NODE=$G(^IBE(357.6,RTN,0))
	S RTN("RTN")=$P(NODE,"^",2,3)
	S RTN("ACTION")=$P(NODE,"^",6)
	S RTN("AVAIL")=$P(NODE,"^",9)
	S RTN("HSMRY?")=$P(NODE,"^",10)
	S RTN("HSMRY")=$P(NODE,"^",11)
	Q
RTNDSCR2(RTN)	;gets information from the Package Interface file -
	;returns node 2, which is information about the pieces of the record returned by the interface
	;RTN should be passed by reference
	N NODE2
	S NODE2=$G(^IBE(357.6,RTN,2))
	F I=1:1:10 S RTN("NAME"_I)=$P(NODE2,"^",((I-1)*2)+1),RTN("WIDTH"_I)=$P(NODE2,"^",I*2)
	Q
	;
WARNING(OBJECT)	; displays a warning
	S:'$D(OBJECT) OBJECT="object"
	W !,"WARNING! The "_OBJECT_" is partially outside the block."
	D PAUSE^IBDFU5
	Q
	; ** The following routines assume BLKDESCR has been called and the IBBLK array is defined
	;
MINX()	;the smallest X a block element can begin at
	Q $S((IBBLK("BOX")=1):1,1:0)
MAXX()	;the largest X a block element can begin at
	Q (IBBLK("W")-(1+$S(IBBLK("BOX")=1:1,1:0)))
MINY()	;the smallest Y a block element can begin at
	N COUNT
	S COUNT=0
	I IBBLK("BOX")=1 S COUNT=1
	I IBBLK("HDR")'="" S COUNT=COUNT+1
	Q COUNT
MAXY()	;the largest Y a block element can begin at
	Q (IBBLK("H")-(1+$S((IBBLK("BOX")=1):1,1:0)))
	;
DORTN(RTN)	;calls the rtn specified by the pkg interface if ok
	;RTN is an array containing data from the package interface in format returned by RTNDESCR and MUST be passed by reference
	;returns 0 if not successful, 1 otherwise
	N QUIT,VARIABLE,VARIEN,ENTRY,EXIT
	S QUIT=0
	Q:RTN("AVAIL")'=1 0
	;verify that required variables exist
	S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,RTN,7,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,RTN,7,VARIEN,0)),"^") I '$D(@VARIABLE) S QUIT=1 Q
	Q:QUIT 0
	;new protected variables
	S VARIEN=0 F  S VARIEN=$O(^IBE(357.6,RTN,6,VARIEN)) Q:'VARIEN  S VARIABLE=$P($G(^IBE(357.6,RTN,6,VARIEN,0)),"^")  N @VARIABLE
	;
	;make sure we know the entry point
	Q:$G(RTN("RTN"))="" 0
	;make sure the entry point exists
	Q:'$L($T(@$P(RTN("RTN"),"^")^@$P($P(RTN("RTN"),"^",2),"("))) 0
	;call the interface routine,xecute the entry and exit actions
	S ENTRY=$G(^IBE(357.6,RTN,4))
	S EXIT=$G(^IBE(357.6,RTN,5))
	X ENTRY
	D @RTN("RTN")
	X EXIT
	Q 1

IBDFU2
IBDFU2	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
COPYBLK(OLDBLOCK,IBFORM,FROMFILE,TOFILE,ROW,COL,TKORDER,NAME)	;copys OLDBLOCK in FROMFILE to IBFORM in TOFILE
	;makes the new block part of IBFORM if defined
	;places block at (ROW,COL) if defined
	;sets TOOL KIT ORDER TKORDER if defined and >0
	;sets the block name to NAME if defined
	;returns the ien of the new copy
	Q:(FROMFILE'=357.1)&(FROMFILE'=358.1) ""
	Q:(TOFILE'=357.1)&(TOFILE'=358.1) ""
	N NODE,LIST,FLD,LINE,TEXT,NEWBLOCK,FROM,TO,SUB,I
	S NEWBLOCK=""
	S NODE=$G(^IBE(FROMFILE,OLDBLOCK,0)) Q:NODE="" ""
	S $P(NODE,"^",2)=$G(IBFORM)
	S:$G(NAME)="" NAME=$P(NODE,"^")
	;there must be a name
	Q:NAME="" ""
	S $P(NODE,"^")=NAME
	I $D(ROW),(ROW=+ROW) S $P(NODE,"^",4)=ROW
	I $D(COL),(COL=+COL) S $P(NODE,"^",5)=COL
	S:$D(TKORDER) $P(NODE,"^",14)=$S(TKORDER:TKORDER,1:"")
	K DIC,DO,DD,DINUM S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWBLOCK=$S(+Y<0:"",1:+Y)
	Q:'NEWBLOCK ""
	S ^IBE(TOFILE,NEWBLOCK,0)=NODE
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDBLOCK,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWBLOCK,NODE)=$G(^IBE(FROMFILE,OLDBLOCK,NODE))
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWBLOCK
	D IX1^DIK K DIK,DA
	I TOFILE=357.1,FROMFILE=357.1,$D(^IBE(357.1,OLDBLOCK,"V")),$D(^IBE(357.1,OLDBLOCK,"S")) D
	.F SUB="S","V" S I=0 S ^IBE(357.1,NEWBLOCK,SUB,0)=$G(^IBE(357.1,OLDBLOCK,SUB,0)) F  S I=$O(^IBE(357.1,OLDBLOCK,SUB,I)) Q:'I  S ^IBE(357.1,NEWBLOCK,SUB,I,0)=$G(^IBE(357.1,OLDBLOCK,SUB,I,0))
	;before any new block component is created, make sure there is no garbage around with dangling pointer pointing to new block
	D DLTCNTNT^IBDFU3(NEWBLOCK,TOFILE)
	;now copy the old block's contents into the newblock
	S (LIST,FLD,LINE,TEXT)=""
	;copy selection lists
	S FROM=$S(FROMFILE[358:358.2,1:357.2),TO=$S(TOFILE[358:358.2,1:357.2)
	F  S LIST=$O(^IBE(FROM,"C",OLDBLOCK,LIST)) Q:'LIST  D COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROM,TO)
	;copy data fields
	S FROM=$S(FROMFILE[358:358.5,1:357.5),TO=$S(TOFILE[358:358.5,1:357.5)
	F  S FLD=$O(^IBE(FROM,"C",OLDBLOCK,FLD)) Q:'FLD  D COPYFLD^IBDFU2A(FLD,OLDBLOCK,NEWBLOCK,FROM,TO)
	;copy lines
	S FROM=$S(FROMFILE[358:358.7,1:357.7),TO=$S(TOFILE[358:358.7,1:357.7)
	F  S LINE=$O(^IBE(FROM,"C",OLDBLOCK,LINE)) Q:'LINE  D COPYLINE^IBDFU2A(LINE,OLDBLOCK,NEWBLOCK,FROM,TO)
	;copy text areas
	S FROM=$S(FROMFILE[358:358.8,1:357.8),TO=$S(TOFILE[358:358.8,1:357.8)
	F  S TEXT=$O(^IBE(FROM,"C",OLDBLOCK,TEXT)) Q:'TEXT  D COPYTEXT^IBDFU2A(TEXT,OLDBLOCK,NEWBLOCK,FROM,TO)
	Q NEWBLOCK
	;
COPYLIST(LIST,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;
	Q:'$G(LIST)!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.2)&(FROMFILE'=358.2)
	Q:(TOFILE'=357.2)&(TOFILE'=358.2)
	N NODE,NAME,NEWLIST,GRP,SLCTN,COL,TO,FROM,TOPI,FROMPI
	S NEWLIST=""
	S NODE=$G(^IBE(FROMFILE,LIST,0)) Q:NODE=""
	;make sure the list really belongs to the block being copied - if not re-index it
	I $P(NODE,"^",2)='OLDBLOCK K DA S DA=LIST,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	S FROMPI=$P(NODE,"^",11)
	S TOPI=$$GETPI^IBDFU2B(FROMPI,$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6)),$P(NODE,"^",11)=TOPI
	Q:NAME=""
	K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWLIST=$S(+Y<0:"",1:+Y)
	Q:'NEWLIST
	D DLISTCNT^IBDFU3(NEWLIST,TOFILE) ;clean up any dangling pointers that may be now pointing to this new, supposedly empty list
	;
	;now copy
	S ^IBE(TOFILE,NEWLIST,0)=NODE
	;copy the column multiple
	S NODE=$G(^IBE(FROMFILE,LIST,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWLIST,1,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,1,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,1,COL,0)) S:NODE'="" ^IBE(TOFILE,NEWLIST,1,COL,0)=NODE
	;now copy the subcolumn multiple
	S NODE=$G(^IBE(FROMFILE,LIST,2,0)) I NODE'=""  S ^IBE(TOFILE,NEWLIST,2,0)=NODE S COL=0 F  S COL=$O(^IBE(FROMFILE,LIST,2,COL)) Q:'COL  S NODE=$G(^IBE(FROMFILE,LIST,2,COL,0)) I NODE'="" D
	.S:$P(NODE,"^",6) $P(NODE,"^",6)=$$GETMA^IBDFU2B($P(NODE,"^",6),$S(FROMFILE[358:358.91,1:357.91),$S(TOFILE[358:358.91,1:357.91)) S ^IBE(TOFILE,NEWLIST,2,COL,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLIST
	D IX1^DIK K DIK,DA
	S FROM=$S(FROMFILE[358:358.4,1:357.4),TO=$S(TOFILE[358:358.4,1:357.4)
	;
	;don't want to copy groups and selections if the selections are not exportable
	I FROM'=TO,FROMPI,'$P($G(^IBE($S(FROM[358:358.6,1:357.6),FROMPI,2)),"^",18) Q
	;
	S GRP="" F  S GRP=$O(^IBE(FROM,"D",LIST,GRP)) Q:'GRP  D COPYGRP^IBDFU2A(GRP,LIST,NEWLIST,NEWBLOCK,FROM,TO)
	Q

IBDFU2A
IBDFU2A	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
COPYLINE(LINE,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copys LINE from OLDBLOCK,FROMFILE to newly created NEWBLOCK,TOFILE
	Q:('$G(LINE))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.7)&(FROMFILE'=358.7)
	Q:(TOFILE'=357.7)&(TOFILE'=358.7)
	N NODE,NAME,NEWLINE
	S NEWLINE=""
	S NODE=$G(^IBE(FROMFILE,LINE,0)) Q:NODE=""
	;make sure the line really belongs to the block being copied - if not re-index it
	I $P(NODE,"^",6)'=OLDBLOCK K DA S DA=LINE,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",6)=NEWBLOCK
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWLINE=$S(+Y<0:"",1:+Y)
	Q:'NEWLINE
	S ^IBE(TOFILE,NEWLINE,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWLINE
	D IX1^DIK K DIK,DA
	Q
COPYTEXT(TEXT,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies TEXT in OLDBLOCK,FROMFILE to NEWBLOCK,TOFILE
	Q:('$G(TEXT))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.8)&(FROMFILE'=358.8)
	Q:(TOFILE'=357.8)&(TOFILE'=358.8)
	N NODE,NAME,NEWTEXT,TLINE
	S NEWTEXT=""
	S NODE=$G(^IBE(FROMFILE,TEXT,0)) Q:NODE=""
	;make sure the text area really belongs to the block being copied - re-index if not
	I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=TEXT,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWTEXT=$S(+Y<0:"",1:+Y)
	Q:'NEWTEXT
	S ^IBE(TOFILE,NEWTEXT,0)=NODE
	;now copy the word-processing field
	S NODE=$G(^IBE(FROMFILE,TEXT,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWTEXT,1,0)=NODE S TLINE=0 F  S TLINE=$O(^IBE(FROMFILE,TEXT,1,TLINE)) Q:'TLINE  S NODE=$G(^IBE(FROMFILE,TEXT,1,TLINE,0)) S:NODE'="" ^IBE(TOFILE,NEWTEXT,1,TLINE,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWTEXT
	D IX1^DIK K DIK,DA
	Q
COPYFLD(FLD,OLDBLOCK,NEWBLOCK,FROMFILE,TOFILE)	;copies FLD in FROMFILE to NEWBLOCK in TOFILE
	Q:('$G(FLD))!('$G(OLDBLOCK))!('$G(NEWBLOCK))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.5)&(FROMFILE'=358.5)
	Q:(TOFILE'=357.5)&(TOFILE'=358.5)
	N NODE,NAME,NEWFLD,SUBFLD
	S NEWFLD=""
	S NODE=$G(^IBE(FROMFILE,FLD,0)) Q:NODE=""
	;make sure the field really belongs to the block being copied - if not re-index it
	I ($P(NODE,"^",2)'=OLDBLOCK) K DA S DA=FLD,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",2)=NEWBLOCK
	Q:NAME=""  ;corrupted data
	S:$P(NODE,"^",3) $P(NODE,"^",3)=$$GETPI^IBDFU2B($P(NODE,"^",3),$S(FROMFILE[358:358.6,1:357.6),$S(TOFILE[358:358.6,1:357.6))
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWFLD=$S(+Y<0:"",1:+Y)
	Q:'NEWFLD
	S ^IBE(TOFILE,NEWFLD,0)=NODE
	;now copy the subfields
	S NODE=$G(^IBE(FROMFILE,FLD,2,0)) I NODE'=""  S ^IBE(TOFILE,NEWFLD,2,0)=NODE S SUBFLD=0 F  S SUBFLD=$O(^IBE(FROMFILE,FLD,2,SUBFLD)) Q:'SUBFLD  S NODE=$G(^IBE(FROMFILE,FLD,2,SUBFLD,0)) S:NODE'="" ^IBE(TOFILE,NEWFLD,2,SUBFLD,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWFLD
	D IX1^DIK K DIK,DA
	Q
COPYGRP(GRP,LIST,NEWLIST,BLOCK,FROMFILE,TOFILE)	;
	Q:(FROMFILE'=357.4)&(FROMFILE'=358.4)
	Q:(TOFILE'=357.4)&(TOFILE'=358.4)
	N NODE,HDR,NEWGRP,SLCTN,FROM,TO
	S NEWGRP=""
	S NODE=$G(^IBE(FROMFILE,GRP,0)) Q:NODE=""
	;make sure group belongs to list - otherwise re-index
	I $P(NODE,"^",3)'=LIST K DA S DA=GRP,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S HDR=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST
	Q:HDR=""
	K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=HDR,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWGRP=$S(+Y<0:"",1:+Y)
	Q:'NEWGRP
	S ^IBE(TOFILE,NEWGRP,0)=NODE
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,GRP,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWGRP,NODE)=$G(^IBE(FROMFILE,GRP,NODE))
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWGRP
	D IX1^DIK K DIK,DA
	S FROM=$S(FROMFILE[358:358.3,1:357.3),TO=$S(TOFILE[358:358.3,1:357.3)
	S SLCTN="" F  S SLCTN=$O(^IBE(FROM,"D",GRP,SLCTN)) Q:'SLCTN  D CPYSLCTN^IBDFU2B(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROM,TO)
	Q

IBDFU2B
IBDFU2B	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(copying blocks - continued from IBDFU2) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
CPYSLCTN(SLCTN,GRP,NEWGRP,LIST,NEWLIST,FROMFILE,TOFILE)	;
	Q:('$G(SLCTN))!('$G(GRP))!('$G(NEWGRP))!('$G(LIST))!('$G(NEWLIST))!('$G(FROMFILE))!('$G(TOFILE))
	Q:(FROMFILE'=357.3)&(FROMFILE'=358.3)
	Q:(TOFILE'=357.3)&(TOFILE'=358.3)
	N NODE,NAME,NEWSLCTN,SC
	S NEWSLCTN=""
	S NODE=$G(^IBE(FROMFILE,SLCTN,0)) Q:NODE=""
	I ($P(NODE,"^",3)'=LIST)!($P(NODE,"^",4)'=GRP) K DA S DA=SLCTN,DIK="^IBE("_FROMFILE_"," D IX^DIK K DIK Q
	S NAME=$P(NODE,"^",1),$P(NODE,"^",3)=NEWLIST,$P(NODE,"^",4)=NEWGRP
	Q:NAME=""
	K DIC,DD,DINUM,DO S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWSLCTN=$S(+Y<0:"",1:+Y)
	Q:'NEWSLCTN
	S ^IBE(TOFILE,NEWSLCTN,0)=NODE
	;now copy the subcolumn value multiple
	S NODE=$G(^IBE(FROMFILE,SLCTN,1,0)) I NODE'=""  S ^IBE(TOFILE,NEWSLCTN,1,0)=NODE S SC=0 F  S SC=$O(^IBE(FROMFILE,SLCTN,1,SC)) Q:'SC  S NODE=$G(^IBE(FROMFILE,SLCTN,1,SC,0)) S:NODE'="" ^IBE(TOFILE,NEWSLCTN,1,SC,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWSLCTN
	D IX1^DIK K DIK,DA
	Q
GETMA(MA,FROMFILE,TOFILE)	;copys marking area=ma from file=FROMFILE to file=TOFILE if it does not already exist
	;returns the ien of the marking area existing in TOFILE
	Q:($G(FROMFILE)'=357.91)&($G(FROMFILE)'=358.91) ""
	Q:($G(TOFILE)'=357.91)&($G(TOFILE)'=358.91) ""
	Q:'$G(MA) ""
	Q:FROMFILE=TOFILE MA ;files are the same!
	N NODE,NAME,NEWMA
	S NEWMA=""
	S NODE=$G(^IBE(FROMFILE,MA,0)) Q:NODE=""
	S NAME=$P(NODE,"^",1)
	Q:NAME="" ""
	S NEWMA=$O(^IBE(TOFILE,"B",NAME,0)) Q:NEWMA NEWMA ;quit if it already exists
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=NAME,DIC(0)=""
	D FILE^DICN K DIC,DIE,DA
	S NEWMA=$S(+Y<0:"",1:+Y)
	Q:'NEWMA ""
	S ^IBE(TOFILE,NEWMA,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWMA
	D IX1^DIK K DIK,DA
	Q NEWMA
GETPI(PI,FROMFILE,TOFILE)	;copies the package interface=PI from file=FROMFILE to file=TOFILE if it doesn't already exist
	;returns the ien of the package interface in the TOFILE
	Q:($G(FROMFILE)'=357.6)&($G(FROMFILE)'=358.6) ""
	Q:($G(TOFILE)'=357.6)&($G(TOFILE)'=358.6) ""
	Q:'$G(PI) ""
	Q:FROMFILE=TOFILE PI
	N NODE,NEWPI,SUB1,SUB2,RTN,ENTRYPT
	S NEWPI=""
	S NODE=$G(^IBE(FROMFILE,PI,0)) Q:NODE=""
	S NAME=$P(NODE,"^"),ENTRYPT=$P(NODE,"^",2),RTN=$P(NODE,"^",3)
	S NEWPI=$$LOOKUP(NAME,RTN,ENTRYPT,TOFILE)
	Q:NEWPI NEWPI ;quit if copy is not needed
	K DIC,DO,DINUM,DD S DIC="^IBE("_TOFILE_",",X=$P(NODE,"^"),DIC(0)=""
	Q:X="" "" ;corrupted data!
	D FILE^DICN K DIC,DIE,DA
	S NEWPI=$S(+Y<0:"",1:+Y)
	Q:'NEWPI ""
	;
	;if the entry point does not exist the new package interface should be marked as unavailable
	I '$L($T(@ENTRYPT^@RTN)) S $P(NODE,"^",9)=0
	;
	S ^IBE(TOFILE,NEWPI,0)=NODE
	F SUB1=2,3,4,5,8 S NODE=$G(^IBE(FROMFILE,PI,SUB1)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1)=NODE
	F SUB1=1,6,7 S NODE=$G(^IBE(FROMFILE,PI,SUB1,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,0)=NODE S SUB2=0 F  S SUB2=$O(^IBE(FROMFILE,PI,SUB1,SUB2)) Q:'SUB2  S NODE=$G(^IBE(FROMFILE,PI,SUB1,SUB2,0)) I NODE'="" S ^IBE(TOFILE,NEWPI,SUB1,SUB2,0)=NODE
	K DIK,DA S DIK="^IBE("_TOFILE_",",DA=NEWPI
	D IX1^DIK K DIK,DA
	Q NEWPI
LOOKUP(NAME,RTN,ENTRYPT,TOFILE)	;return 1 if the package interface already exists in TOFILE, 0 otherwise
	N PI,LOOKNODE,QUIT
	Q:NAME="" ""
	S (QUIT,PI)=0 F  S PI=$O(^IBE(TOFILE,"B",$E(NAME,1,30),PI)) Q:'PI  S LOOKNODE=$G(^IBE(TOFILE,PI,0)) I LOOKNODE'="" D  Q:QUIT
	.I NAME=$P(LOOKNODE,"^",1),RTN=$P(LOOKNODE,"^",3),ENTRYPT=$P(LOOKNODE,"^",2) S QUIT=1 Q  ;matches!
	Q PI

IBDFU2C
IBDFU2C	;ALB/CJM - ENCOUNTER FORM - (COPYING FORMS) ;AUG12,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
COPYFORM(OLDFORM,FROMFILE,TOFILE,NEWNAME,TK)	;
	;copies OLDFORM from FROMFILE to TOFILE, changing the name to NEWNAME if defined (NEWNAME is optional), and the field TOOL KIT to TK if defined
	;
	Q:'$D(OLDFORM)!'$D(FROMFILE)!'$D(TOFILE) ""
	Q:(FROMFILE'=357)&(FROMFILE'=358) ""
	Q:(TOFILE'=357)&(TOFILE'=358) ""
	Q:'OLDFORM ""
	N NEWFORM,NODE,OLDBLOCK,NEWBLOCK,BLOCK,IBDELETE,FROM,TO
	S NODE=$G(^IBE(FROMFILE,OLDFORM,0)) Q:NODE="" ""
	S:($G(NEWNAME)'="") $P(NODE,"^")=NEWNAME
	S:$G(NEWNAME)="" NEWNAME=$P(NODE,"^")
	I $G(TK)=+$G(TK) S $P(NODE,"^",7)=TK
	S $P(NODE,"^",5)=0
	K DIC,DD,DO,DINUM S DIC="^IBE("_TOFILE_",",X=NEWNAME,DIC(0)=""
	D FILE^DICN K DIC,DIE
	S NEWFORM=$S(+Y<0:"",1:+Y)
	I (NEWFORM<0) W !,"Unable to create a new form!" D PAUSE^IBDFU5 Q ""
	;
	;the new form should be empty - make sure
	S FROM=$S(FROMFILE[358:358.1,1:357.1)
	S TO=$S(TOFILE[358:358.1,1:357.1)
	S BLOCK="" F  S BLOCK=$O(^IBE(TOFILE,"C",NEWFORM,BLOCK)) Q:'BLOCK  D
	.I $P($G(^IBE(TO,BLOCK,0)),"^",2)'=NEWFORM D
	..K ^IBE(TO,"C",NEWFORM,BLOCK),DA S DIK="^IBE("_TO_",",DA=BLOCK D IX1^DIK K DIK,DA
	.E  D DLTBLK^IBDFU3(BLOCK,NEWFORM,TO)
	;
	;copy old 0 node into the new form
	S ^IBE(TOFILE,NEWFORM,0)=NODE
	;
	;copy the rest of the form
	S NODE=0 F  S NODE=$O(^IBE(FROMFILE,OLDFORM,NODE)) Q:'NODE  S ^IBE(TOFILE,NEWFORM,NODE)=$G(^IBE(FROMFILE,OLDFORM,NODE))
	K DIK S DIK="^IBE("_TOFILE_",",DA=NEWFORM D IX^DIK K DIK
	;
	;now copy the blocks into the form
	S OLDBLOCK="" F  S OLDBLOCK=$O(^IBE(FROM,"C",OLDFORM,OLDBLOCK)) Q:'OLDBLOCK  I $P($G(^IBE(FROM,OLDBLOCK,0)),"^",2)=OLDFORM S NEWBLOCK=$$COPYBLK^IBDFU2(OLDBLOCK,NEWFORM,FROM,TO) W "."
	Q NEWFORM
	;
	;
DELETE(FORM,FILE,ASK)	;deletes the FORM in FILE- if ASK then asks permission first
	Q:'$D(FORM)
	Q:(FILE'=357)&(FILE'=358)
	N BLOCK,BLKFILE,CR
	S BLKFILE=FILE+.1
	I $G(ASK) Q:'$$RUSURE^IBDFU5($P($G(^IBE(FILE,FORM,0)),"^"))
	S BLOCK="" F  S BLOCK=$O(^IBE(BLKFILE,"C",FORM,BLOCK)) Q:'BLOCK  D DLTBLK^IBDFU3(BLOCK,FORM,BLKFILE) W "."
	I FILE=357 F CR="AT","AC","AU","AG" K ^IBE(357,CR,FORM)
	K DA S DIK="^IBE("_FILE_",",DA=FORM D ^DIK K DIK,DA
	Q
NEWNAME(OLDNAME)	;asks the user to select a unique form name
	;returns "" if unsuccessfull, else the form name
	;shows OLDNAME as the default if defined
	;
	N NAME,QUIT S NAME="",QUIT=0
	K DIR S DIR(0)="357,.01A",DIR("A")="New Form Name: ",DIR("?")="Enter a unique name up to 30 characters"
	S DIR("B")="" I $G(OLDNAME)'="",'$O(IBE(357,"B",OLDNAME,0)) S DIR("B")=OLDNAME
	F  D  Q:QUIT
	.D ^DIR I $D(DIRUT) S QUIT=1 Q
	.I $O(^IBE(357,"B",Y,"")) D
	..W !,"The form name must be unique, try using the clinic in the name!"
	.E  S NAME=Y,QUIT=1
	K DIR
	Q NAME
TKFORM()	;returns the form TOOL KIT that contains all of the tool kit blocs
	N TKFORM,BLOCK,TKORDER,TK
	S TKFORM=+$O(^IBE(357,"B","TOOL KIT",""))
	I 'TKFORM D
	.K DIC,DD,DO,DINUM S DIC="^IBE(357,",DIC(0)="",X="TOOL KIT"
	.D FILE^DICN K DIC,DIE,DA
	.S TKFORM=$S(+(Y>0):+Y,1:"")
	.Q:'TKFORM
	.S ^IBE(357,TKFORM,0)="TOOL KIT^^CONTAINS ALL OF THE TOOL KIT BLOCKS^^^^1"
	.K DIK S DIK="^IBE(357,",DA=TKFORM D IX1^DIK K DIK
	.S TKORDER=0 F  S TKORDER=$O(^IBE(357.1,"D",TKORDER)) Q:'TKORDER  S BLOCK=0 F  S BLOCK=$O(^IBE(357.1,"D",TKORDER,BLOCK)) Q:'BLOCK  D
	..S TK=$P($G(^IBE(357.1,BLOCK,0)),"^",14) I 'TK K ^IBE(357.1,"D",TKORDER,BLOCK) Q
	..S FORM=$P($G(^IBE(357.1,BLOCK,0)),"^",2) I FORM'=TKFORM K ^IBE(357.1,"C",FORM,BLOCK) S $P(^IBE(357.1,BLOCK,0),"^",2)=TKFORM K DIK S DIK="^IBE(357.1,",DA=BLOCK,DIK(1)=.02 D EN1^DIK K DIK
	Q TKFORM

IBDFU3
IBDFU3	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(deleting blocks) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DLTBLK(BLOCK,FORM,FILE)	;deletes BLOCK (in FILE) if not part of the toolkit (unless IBTKBLK=1) and, if FORM is passed in, the block actually is on FORM
	Q:('$G(BLOCK))
	Q:(FILE'=357.1)&(FILE'=358.1)
	N NODE,DIK,DA
	S NODE=$G(^IBE(FILE,BLOCK,0))
	K DA S DA=BLOCK,DIK="^IBE("_FILE_","
	;don't delete it if part of the toolkit or doesn't belong to the form (messed up cross-references), unless IBTKBLK=1 (means deletion is durring special option for editing the tk)
	G:$G(IBTKBLK) JUSTDOIT
	I ($P(NODE,"^",14)) D  Q
	.S $P(^IBE(FILE,BLOCK,0),"^",2)=$O(^IBE(FILE\1,"B","TOOL KIT",""))
	.I $G(FORM)'="" K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
	I $G(FORM)'="",($P(NODE,"^",2)'=FORM) D  Q
	.;don't delete it - instead re-index it and quit
	.K ^IBE(FILE,"C",FORM,BLOCK) D IX1^DIK
JUSTDOIT	;
	;delete its components
	D DLTCNTNT(BLOCK,FILE)
	;delete the block (DIC,DA are newed)
	D ^DIK
	Q
	;
DLTCNTNT(BLOCK,FILE)	;delete everything in BLOCK, but not the block itself
	Q:('$G(BLOCK))!('$G(FILE))
	Q:(FILE'=357.1)&(FILE'=358.1)
	N LIST,FLD,LINE,TEXT,TARGET,DIK,DA
	;delete selection lists from BLOCK
	S TARGET=$S(FILE[358:358.2,1:357.2)
	S LIST="" F  S LIST=$O(^IBE(TARGET,"C",BLOCK,LIST)) Q:'LIST  D DLTLIST(TARGET,BLOCK,LIST)
	;delete data fields
	S TARGET=$S(FILE[358:358.5,1:357.5)
	S FLD="" F  S FLD=$O(^IBE(TARGET,"C",BLOCK,FLD)) Q:'FLD  D DLTFLD(TARGET,BLOCK,FLD)
	;delete lines
	S TARGET=$S(FILE[358:358.7,1:357.7)
	S LINE="" F  S LINE=$O(^IBE(TARGET,"C",BLOCK,LINE)) Q:'LINE  D DLTLINE(TARGET,BLOCK,LINE)
	;delete text areas
	S TARGET=$S(FILE[358:358.8,1:357.8)
	S TEXT="" F  S TEXT=$O(^IBE(TARGET,"C",BLOCK,TEXT)) Q:'TEXT  D DLTTEXT(TARGET,BLOCK,TEXT)
	Q
	;
DLTLIST(FILE,BLOCK,LIST)	;delete the LIST, its selections and groups
	Q:'$G(LIST)!'$G(BLOCK)!(($G(FILE)'=357.2)&($G(FILE)'=358.2))
	N GRP,SLCTN,DIK,DA
	S DIK="^IBE("_FILE_",",DA=LIST
	;don't delete it if it does not belong to BLOCK - instead, reindex it and quit
	I $P($G(^IBE(FILE,LIST,0)),"^",2)'=BLOCK K ^IBE(FILE,"C",BLOCK,LIST) D IX1^DIK Q
	;delete its contents(DIK,DA are newed)
	D DLISTCNT(LIST,FILE)
	;delete the list
	D ^DIK
	Q
DLISTCNT(LIST,FILE)	;delete the list's selections and groups
	N GRP,SLCTN,DIK,DA,GFILE,SFILE
	Q:('$G(LIST))!('$G(FILE))
	Q:(FILE'=357.2)&(FILE'=358.2)
	S GFILE=$S(FILE[358:358.4,1:357.4)
	S SFILE=$S(FILE[358:358.3,1:357.3)
	;now delete list's contents
	S GRP="",DIK="^IBE("_GFILE_"," F  S GRP=$O(^IBE(GFILE,"D",LIST,GRP)) Q:'GRP  S DA=GRP D
	.I $P($G(^IBE(GFILE,GRP,0)),"^",3)=LIST D
	..D ^DIK
	.E  K ^IBE(GFILE,"D",LIST,GRP) D IX1^DIK
	S SLCTN="",DIK="^IBE("_SFILE_"," F  S SLCTN=$O(^IBE(SFILE,"C",LIST,SLCTN)) Q:'SLCTN  S DA=SLCTN D
	.I $P($G(^IBE(SFILE,SLCTN,0)),"^",3)=LIST D
	..D ^DIK
	.E  K ^IBE(SFILE,"C",LIST,SLCTN) D IX1^DIK
	Q
	;
DLTFLD(FILE,BLOCK,FLD)	;delete the data field
	Q:('$G(BLOCK))!('$G(FLD))!('$G(FILE))
	Q:(FILE'=357.5)&(FILE'=358.5)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=FLD
	I $P($G(^IBE(FILE,FLD,0)),"^",2)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,FLD) D IX1^DIK
	Q
DLTTEXT(FILE,BLOCK,TEXT)	;delete the TEXT AREA
	Q:('$G(BLOCK))!('$G(TEXT))!('$G(FILE))
	Q:(FILE'=357.8)&(FILE'=358.8)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=TEXT
	I $P($G(^IBE(FILE,TEXT,0)),"^",2)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,TEXT) D IX1^DIK
	Q
DLTLINE(FILE,BLOCK,LINE)	;delete the line
	Q:('$G(BLOCK))!('$G(LINE))!('$G(FILE))
	Q:(FILE'=357.7)&(FILE'=358.7)
	N DA,DIK
	S DIK="^IBE("_FILE_",",DA=LINE
	I $P($G(^IBE(FILE,LINE,0)),"^",6)=BLOCK D
	.D ^DIK
	E  K ^IBE(FILE,"C",BLOCK,LINE) D IX1^DIK
	Q
FASTEXIT	;just sets a flag signaling system should be exited
	S VALMBCK="Q"
	K DIR S DIR(0)="Y",DIR("A")="Exit Encounter Form Option",DIR("B")="NO" D ^DIR
	I $D(DIRUT)!(Y) S IBFASTXT=1
	K DIR
	Q

IBDFU4
IBDFU4	;ALB/CJM - ENCOUNTER FORM - BUILD FORM(write single form block to array for display,position & size copied block) ; 08-JAN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
IDXBLOCK(ARY,NOCMPILE,NOWRITE)	; create list containing block rows for list processor
	;NOCMPILE=1 means don't compile
	;NOWRITE=1 means don't write
	;IBLK = the block to be displayed
	;ARY is string=name of node where list should be placed
	;if ARY is not defined list is placed at ^TMP("IB",$J,"FORM BLOCK")
	N IBARY,I
	Q:$$BLKDESCR^IBDFU1B(.IBBLK)
	I '$G(NOWRITE) D
	.W !,"... BUILDING THE FORM BLOCK ..."
	.I ((IBBLK("H")+1)*(IBBLK("W")+1))<4000 D
	..S IBARY="IBMEMARY",VALMAR="IBMEMARY"
	.E  S IBARY=$G(ARY) S:IBARY="" IBARY="^TMP(""IB"",$J,""FORM BLOCK"")" S VALMAR=IBARY
	.;
	.K @IBARY D KILL^VALM10()
	.D BLNKFORM^IBDF5A(0,IBBLK("H")-1,IBBLK("W"))
	.S I="",$P(I,"~",IBBLK("W")+1)="~"
	.S @IBARY@(IBBLK("H")+1,0)="    "_I
	.S VALMCNT=IBBLK("H")+1
	S (IBBLK("X"),IBBLK("Y"))=0
	D DRWBLOCK^IBDF2A(.IBBLK,'$G(NOCMPILE),'$G(NOWRITE))
	Q
POS(NEWBLOCK,DFLTX,DFLTY)	;allows the user to position and size the copied block
	;NEWBLOCK = block to be edited
	;DFLTY - default value for starting row
	;DFLTX - default value for starting column
	N IBX,IBY ;used in the input template
	S:$G(DFLTX)=+$G(DFLTX) $P(NODE,"^",5)=DFLTX
	S:$G(DFLTY)=+$G(DFLTY) $P(NODE,"^",4)=DFLTY
	N NODE,IBBLK,IBDONE
	S IBBLK=NEWBLOCK
	S NODE=$G(^IBE(357.1,NEWBLOCK,0))
	;set defaults for starting column, starting row
	S ^IBE(357.1,NEWBLOCK,0)=NODE,IBDONE=0
	K DIE S DIE=357.1,DA=NEWBLOCK,DR="[IBDF POSITION COPIED BLOCK]"
	D ^DIE K DIE,DR,DA
	I 'IBDONE D DLTBLK^IBDFU3(NEWBLOCK,IBFORM,357.1)
	Q
CURX()	;returns the current X position (top left corner of displayed poriton of the form - internal column value)
	S X=+$G(VALMLFT),X=X-5 S:X<0 X=0
	Q X
CURY()	;returns the current Y position (top left corner of displayed poriton of the form - internal row value)
	N Y
	S Y=+$G(VALMBG),Y=Y-1 S:Y<0 Y=0
	Q Y
SLCTFORM(TK,NODE)	;allows the user to select a form and returns the IEN
	;returns 0 if no form selected
	;
	;INPUTS
	;if TK=0 assumes form should not be a toolkit form
	;if TK=1 assumes form should be a toolkit form
	;otherwise, ask the user if the he wants to select fromt he toolkit
	;
	;NODE is optional - if defined it returns the 0 node of the form selected - should be passed by reference
	;
	N FORM,Y S FORM=0
	S TK=$G(TK)
	I TK'=0,TK'=1 D
	.K DIR S DIR(0)="YA",DIR("A")="Do you want to select a form from the tool kit? "
	.D ^DIR
	.I Y'=-1,'$D(DIRUT) S TK=Y
	;don't continue with the selection if it is not known whether or not the form is comming from the toolkit
	I (TK=1)!(TK=0) D
	.D:$G(IBLISTPR) FULL^VALM1
	.K DIC S DIC("S")=$S(TK:"I $P($G(^(0)),U,7),$P($G(^(0)),U)'=""TOOL KIT"",$P($G(^(0)),U)'=""GARBAGE""",1:"I '$P($G(^(0)),U,7)"),DIC=357,DIC(0)="AEQ"_$S($D(NODE):"Z",1:""),DIC("A")="Select a FORM: "
	.D ^DIC S:+Y>0 FORM=+Y
	I FORM,$D(NODE) S NODE=Y(0)
	K DIC,Y,DIR
	Q FORM
CLINICS(FORM,ARY)	;finds the list of clinics using FORM
	;@ARY@(0) is set to the number of clinics found
	;ARY is where to put the list of clinics
	;
	N CLINIC,SETUP,IDX,COUNT,NAME
	K @ARY
	S COUNT=0
	F IDX="C","D","E","F","G","H" D
	.S SETUP="" F  S SETUP=$O(^SD(409.95,IDX,FORM,SETUP)) Q:'SETUP  D
	..S CLINIC=$P($G(^SD(409.95,SETUP,0)),"^",1)
	..Q:'CLINIC
	..S NAME=$P($G(^SC(CLINIC,0)),"^",1)
	..Q:NAME=""
	..I '$D(@ARY@(NAME)) S @ARY@(NAME)=CLINIC,COUNT=COUNT+1
	S @ARY@(0)=COUNT
	Q
LIST(ARY,SCRNSIZE)	;
	;ARY is the same as in CLINICS
	N CLINIC,COUNT,DIR
	S DIR(0)="YO",DIR("B")="Y",DIR("A")="List the clinics using the form"
	D ^DIR K DIR I '$D(DIRUT),Y D
	.S (COUNT,CLINIC)=0
	.S DIR(0)="E"
	.F  S CLINIC=$O(@ARY@(CLINIC)) Q:CLINIC=""  W !,CLINIC S COUNT=COUNT+1 I COUNT=SCRNSIZE D ^DIR Q:'Y  S COUNT=0
	.D:COUNT>0 ^DIR
	Q

IBDFU5
IBDFU5	;ALB/CJM - ENCOUNTER FORM (utilities) ;JAN 16,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
TOPNBOT(BLOCK,TOP,BOT)	;finds the top and bottom of the block - pass TOP and BOT by reference
	N NODE
	S NODE=$G(^IBE(357.1,BLOCK,0))
	S TOP=+$P(NODE,"^",4),BOT=(TOP+(+$P(NODE,"^",7)))-1
	Q
RUSURE(NAME)	;obtains verification from the user for deletion- returns 1 if answered YES, otherwise NO
	;if NAME is defined it will be used in the prompt
	N RET
	S RET=1
	K DIR S DIR(0)="Y",DIR("A")=$S(NAME="":"Are you sure",1:"Are you sure "_NAME_" should be deleted"),DIR("B")="NO"
	D ^DIR K DIR I (Y<1)!$D(DIRUT) S RET=0
	Q RET
PAUSE	;
	N ANS
	W !,*7,"Press RETURN to continue..." R ANS:DTIME
	Q
	;
NOGRPHCS	;sets graphics variables to "_" and "|"
	S (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
	Q
HELP1	;displays a list of the record pieces (fields .01,.03,.05,.07,.09,.11) from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE DATA FIELD FILE
	;
	;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
	;
	N RTN
	Q:'$G(D0)
	W !,"WHAT DATA SHOULD BE PRINTED IN THE SUBFIELD? CHOOSE FROM:",!
	S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
	D SHOWDATA
	Q
HELP2	;displays a list of the record pieces (fields .01,.03,.05,.07,.09,.11) from file 357.6, IB PACKAGE INTERFACE file - EXECUTABLE HELP FOR FIELDS IN THE SELECTION LIST FILE
	;
	;INPUT - D0 should be a pointer to a SELECTION LIST
	;
	N RTN
	W !,"WHAT DATA SHOULD BE PRINTED IN THIS SUBCOLUMN? CHOOSE FROM:",!
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
	D SHOWDATA
	Q
HELP3	;displays a list of the record pieces (fields .01,.03,.05,.07,.09,.11,.13) from file 357.6, IB PACKAGE INTERFACE file - used to display available data to the user before he enters a data field label
	;
	;INPUT - D0 is a pointer to a DATA FIELD (file 357.5)
	N RTN
	W !,"Available Data:",!
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.5,D0,0)),"^",3) Q:'RTN
	D SHOWDATA
	Q
HELP4	;displays a list of the record pieces (fields .01,.03,.05,.07,.09,.11,.13) from file 357.6, IB PACKAGE INTERFACE file - used to display to the user the available data before a subcolumn to a selection list
	;
	;INPUT - D0 should be a pointer to a SELECTION LIST
	;
	N RTN
	W !,"Available Data:",!
	Q:'$G(D0)
	S RTN=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'RTN
	D SHOWDATA
	Q
HELP5	;for number of columns in list
	I $G(IBLISTPR) D FULL^VALM1
	W !!,"A selection list COLUMN contains items on the list. It may consist of several",!,"subcolumns. For example, a typical column may have three subcolumns, one"
	W !,"containing a code, the second a description, and the third a marking area for",!,"the user to indicate his selections from the list. Besides going down the",!,"form, the list can can go across the form by having multiple columns."
	W !!,"Entering the number of columns is optional. By default the entire block will",!,"be filled with the list.",!
	I $G(IBLISTPR) D PAUSE^IBDFU5,RESET^VALM4:VALMCC,REFRESH^VALM
	Q
SHOWDATA	;displays a list of the record pieces (fields .01,.03,.05,.07,.09,.11,.13) from file 357.6, IB PACKAGE INTERFACE file
	;
	;INPUT - RTN - ptr to the package interface file
	N NODE,SUB,LIM1,LIM2,LINE,DESCR,CANSHOW
	S NODE=$G(^IBE(357.6,RTN,2)) Q:NODE=""
	S CANSHOW=$S($P(NODE,"^",17)=0:0,1:1)
	F LIM1=0:1:3 S LINE="" D  W LINE W:LIM1'=3 !
	.F LIM2=1:1:2 D:'((LIM1=3)&(LIM2=2))
	..S SUB=LIM2+(2*LIM1)
	..S DESCR=$S((SUB=1)&('CANSHOW):"",1:$P(NODE,"^",(2*SUB)-1)) I DESCR'="" S DESCR=DESCR_" :"_$P(NODE,"^",(2*SUB))_" char"
	..S LINE=LINE_$S(DESCR="":"",1:$$PADRIGHT^IBDFU("  "_SUB_"= "_DESCR,39))
	Q
RESET	;resets the scrolling area of the screen to that defined by List Manager
	;I $G(IOSTBM)'="" S IOTM=IOSL-4,IOBM=IOSL W IOSC,@IOSTBM,IORC
	Q
VARIABLE(VAR)	;returns 0 if VAR is not syntactically a good local variable name, 1 otherwise
	N I,LEN,CHAR,GOOD
	S LEN=$L(VAR)
	S CHAR=$E(VAR)
	I '((CHAR?1A)!(CHAR="%")) Q 0
	S GOOD=1
	F I=2:1:LEN S CHAR=$E(VAR,I) I '((CHAR?1A)!(CHAR?1N)) S GOOD=0 Q
	Q GOOD
ID1	;writes identifier for subcolumn of selection list (file 357.2)
	N NODE,TYPE,PIECE
	S NODE=$G(^(0)) Q:NODE=""
	W "HEADER=",$$PADRIGHT^IBDFU($P(NODE,U,2),27)_"  CONTENT="
	I $P(NODE,U,4)=1 D
	.S TYPE=$P($G(^IBE(357.2,D0,0)),"^",11) Q:'TYPE
	.S PIECE=+$P(NODE,U,5)
	.W $P($G(^IBE(357.6,TYPE,2)),U,((2*PIECE)-1))
	I $P(NODE,U,4)=2 D
	.S TYPE=$P(NODE,U,6) Q:'TYPE
	.W $P($G(^IBE(357.91,TYPE,0)),U)
	Q

IBDFU5A
IBDFU5A	;ALB/CJM - ENCOUNTER FORM - (contains Xecutable help);3/29/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
HELP6	;help for choosing print condition
	W "Choose FOR EVERY APPOINTMENT if the form should print for every appointment.",!
	W !,"Choose ONLY FOR EARLIEST APPOINTMENT if the form should print once per",!,"patient, even if he has multiple appointments",!
	W !,"Choose ONLY IF MULTIPLE APPOINTMENTS if the form should print only if the",!,"patient has multiple appointments. If so, it will print only for the",!,"earliest appointment.",!

IBDFU6
IBDFU6	;ALB/CJM - ENCOUNTER FORM - (utilities for data fields);3/29/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
FORMAT(ARY,WIDTH,LABEL)	;formats the word-processing field pointed to by @ARY into a column of width=WIDTH
	N LINE
	K ^UTILITY($J,"W"),DIWF
	S LINE=0,DIWL=1,DIWR=WIDTH
	I $D(LABEL) S X=$E(LABEL_" ",1,WIDTH) I X'="" D ^DIWP
	F  S LINE=$O(@ARY@(LINE)) Q:'LINE  S X=$G(@ARY@(LINE,0)) I X'="" D ^DIWP
	K X,DIWL,DIWR,DIWF
	Q

IBDFU7
IBDFU7	;ALB/CJM - ENCOUNTER FORM - (utilities to handle form locks & timestamps);3/29/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
LOCKFORM(FORM)	;locks the form - returns 0 if unsuccessful, 1 otherwise
	;this lock is used to prevent multiple processes form simultaneously compiling a form
	L +^IBE(357,FORM,"LOCK1"):10
	Q $T
	;
LOCKFRM2(FORM)	;locks the form - returns 0 if unsuccessful, 1 otherwise
	;this lock is used to prevent multiple users from editing a form simultaneously
	L +^IBE(357,FORM,"LOCK2"):5
	Q $T
	;
FREEFORM(FORM)	;unlocks the form
	L -^IBE(357,FORM,"LOCK1")
	Q
	;
FREEFRM2(FORM)	;unlocks the form locked by LOCKFRM2()
	L -^IBE(357,FORM,"LOCK2")
	Q
	;
	;
LOCKMSG2(FORM)	;displays a message to the user for forms unavailable by LOCKFRM2()
	N FORMNAME
	S FORMNAME=$P($G(^IBE(357,FORM,0)),"^",1)
	W !!,"The form = '"_FORMNAME_"' is currently is not available.",!,"It is being edited by another person.",!
	D PAUSE^IBDFU5
	Q

IBDFU8
IBDFU8	;ALB/CJM - ENCOUNTER FORM - selection routines for form components;OCT 8,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
SLCTBLK(FORM,SCRNSIZE,EXCLUDE)	;SCRNSIZE is the number of lines available for scrolling
	;EXCLUDE is a block name that can be excluded (used to exclude the HEADER block from being edited)
	;returns the block selected, returns "" if none selected
	;only allows one to be selected
	;
	Q:'FORM
	S SCRNSIZE=+$G(SCRNSIZE)-1
	S:SCRNSIZE<1 SCRNSIZE=4
	S EXCLUDE=$G(EXCLUDE)
	N COUNT,PICK,BLK,ARY,NAME
	S ARY="^TMP($J,""FORM BLOCKS"")"
	K @ARY
	S COUNT=$$FINDALL ;FORM,EXCLUDE,ARY are inputs to FINDALL
	;
	;if COUNT=1 return the only block
	I COUNT=1 S NAME=$O(@ARY@("NAME","")) Q $S(NAME'="":$O(@ARY@("NAME",NAME,0)),1:"")
	; 
	;if COUNT'=1 loop through the blocks, displaying them to the user and let him choose
AGAIN	;
	S (PICK,NAME)="",COUNT=0
	F  S NAME=$O(@ARY@("NAME",NAME)) Q:(PICK'="")!(NAME="")  D
	.S BLK=0 F  S BLK=$O(@ARY@("NAME",NAME,BLK)) Q:(PICK'="")!('BLK)  D  Q:NAME=""
	..S COUNT=COUNT+1,@ARY@("#",COUNT)=BLK W !,COUNT,"   ",NAME
	..I COUNT#SCRNSIZE=0 S PICK=$$CHOOSE
	I (PICK=""),COUNT,COUNT#SCRNSIZE'=0 S PICK=$$CHOOSE
	I PICK="" K DIR S DIR(0)="Y",DIR("A")="No block selected! Try again",DIR("B")="YES" D ^DIR K DIR I '$D(DIRUT),Y=1 G AGAIN
	I PICK="?" G AGAIN
	K @ARY
	Q $S((PICK'>0):"",1:PICK)
	;
FINDALL()	;finds all of the blocks on FORM (except the one named EXCLUDE) and puts them on @ARY,returns the cound
	N BLK,COUNT,NODE
	S BLK="",COUNT=0 F  S BLK=$O(^IBE(357.1,"C",FORM,BLK)) Q:'BLK  S NODE=$G(^IBE(357.1,BLK,0)),NAME=$P(NODE,"^") S:(NAME'="")&(NAME'=EXCLUDE)&($P(NODE,"^",2)=FORM) @ARY@("NAME",$$UP^XLFSTR(NAME),BLK)="",COUNT=COUNT+1
	Q COUNT
	;
CHOOSE()	;asks the user to select a blk - @ARY@("#", is the aray of blocks displayed so far(subscripted by the number on the list), @ARY@("NAME", the entire array (subscripted by name,ien)
	;sets NAME to " " and COUNT to 0 if ? is entered - starts display of list over
	N ANS,QUIT,PICK,NEXT1,NEXT2
	S QUIT=0
	F  Q:QUIT  D  D:'QUIT MSG
	.S (PICK,ANS)=""
	.W !,"CHOOSE 1-",COUNT,": "
	.R ANS:DTIME
	.I '$T!($E(ANS,1)="^") S PICK=-1,QUIT=1 Q
	.I ANS="" S QUIT=1 Q
	.I $E(ANS,1)="?" D HELP Q
	.;
	.;convert to upper case
	.S ANS=$$UP^XLFSTR(ANS)
	.
	.;if user entered a displayed number then he's made his choice
	.I $D(@ARY@("#",ANS)) S PICK=$G(@ARY@("#",ANS)),QUIT=1 Q
	.;
	.;if the user entered an exact name, and the name is unique then he's made his choice
	.S PICK=$O(@ARY@("NAME",ANS,PICK)) I PICK,'$O(@ARY@("NAME",ANS,PICK)) S QUIT=1 Q
	.Q:PICK  ;don't set QUIT=1 because name is not unique
	.;
	.;if the user entered a partial name accept it if there is exactly one match
	.S NEXT1=$O(@ARY@("NAME",ANS)) Q:(NEXT1="")!($E(NEXT1,1,$L(ANS))'=ANS)
	.S NEXT2=$O(@ARY@("NAME",NEXT1)) Q:($E(NEXT2,1,$L(ANS))=ANS)  ;because user did not type in enough to uniquely identify the block
	.;make sure there are not two blocks with the same name - if ok, accept it
	.S PICK=$O(@ARY@("NAME",NEXT1,PICK)) Q:'PICK  I '$O(@ARY@("NAME",NEXT1,PICK)) S QUIT=1 Q
	Q PICK
	;
HELP	;choosing help restarts the display (by setting NAME="")
	W !,"You can choose a block by the number or by it's name.",!
	D PAUSE^IBDFU5
	S QUIT=1,NAME="",PICK="?",COUNT=0
	Q
MSG	;
	W !,"You must enter the number or name of the block!"
	D PAUSE^IBDFU5
	Q

IBDFU9
IBDFU9	;ALB/CJM - ENCOUNTER FORM - post-selection action for package interface file;OCT 18,1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ASK	;
	N LINE,DA,ANS,TYPE
	S DA=+Y
	I $G(DA),$D(^IBE(357.6,DA,1)) D
	.S TYPE=$P($G(^IBE(357.6,DA,0)),"^",6)
	.;in the case of reports, the post-selection action is not executed until after the report is created in the setup - so it's not useful, just quit out
	.Q:TYPE=4
	.S TYPE=$S(TYPE=2:"type of data",TYPE=3:"type of data",TYPE=4:"report",1:"package interface")
	.S LINE=0 W ! F  S LINE=$O(^IBE(357.6,DA,1,LINE)) Q:'LINE  W !,$G(^IBE(357.6,DA,1,LINE,0))
	.W !!,"Are you sure this is the right "_TYPE_"?: "
	.R ANS:DTIME
	.I '$T S Y=-1 Q
	.I (ANS["^")!(ANS["?")!(ANS="")!("Yy"'[$E(ANS,1)) S Y=-1
	Q

IBDFUA
IBDFUA	;ALB/CJM - ENCOUNTER FORM (utilities - IBDFU continued) ;NOV 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRNTVAR	;defines the screen and graphics variables needed for printing
	;
	I $L($T(GSET^%ZISS)) D GSET^%ZISS,KILL^%ZISS
	S X="IOINHI;IOINORM;IOUON;IOUOFF"
	D ENDR^%ZISS
	K X
	Q
	;
KPRNTVAR	;kills the variables defined by PRINTVAR (actually, kills all screen paramters)
	;
	I $L($T(GKILL^%ZISS)) D GKILL^%ZISS
	D KILL^%ZISS
	Q 
	;
DEVTYPE(IBRASTER,IBGRPHCS,IBCRT)	;the parameters should be passed by reference - they return values
	; IBRASTER = 1 if IOXY defined and not a crt
	; IBCRT= 1 if crt
	; IBGRPHCS=1 if graphic mode available with characters needed
	;also, the required screen and graphics parameters are defined
	;
	S (IBRASTER,IBGRPHCS,IBCRT)=0
	I $E($G(IOST),1,2)="C-" S IBCRT=1
	I $G(IOXY)'="" S IBRASTER=1
	D PRNTVAR
	S IBGRPHCS=$$GRAPHICS
	Q
	;
GRAPHICS()	; returns1 if graphic mode available with characters needed
	;sets graphics characters to "|" and "_" if graphics mode not available
	;If not a raster device, then returns 0 no matter what
	;
	N GRAPHICS S GRAPHICS=0
	I IBRASTER,($G(IOG0)'=""),($G(IOG1)'=""),($G(IOVL)'=""),($G(IOHL)'=""),($G(IOBLC)'=""),($G(IOBRC)'=""),($G(IOTLC)'=""),($G(IOTRC)'="") S GRAPHICS=1
	S:'GRAPHICS (IOVL,IOBLC,IOBRC)="|",(IOHL,IOTRC,IOTLC)="_"
	Q GRAPHICS

IBEBR
IBEBR	;ALB/AAS - Add/Edit IB ACTION CHARGE FILE; 3-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; entry point
	D HOME^%ZIS W @IOF
EN	W !!,?28,"Enter/Edit Billing Rates",!!
	S IBX="MAIN" D CHOOSE I $D(DIRUT)!('Y) G END
	I Y>0,Y<7 D @Y
	G EN
	Q
1	;enter edit revenue code rates
	D EN1^IBCBR
	D ENR^IBEMTO ; bill MT OPT charges awaiting the new copay rate
	D END Q
	;
2	;enter per diem rate
	S IBX="PERDIEM" D CHOOSE Q:$D(DIRUT)
	D EFFDT,END
	G 2
	;
3	;enter medicare deductable
	S IBX="MEDIC",IBPD="MEDICARE DEDUCTIBLE" ;D CHOOSE Q:$D(DIRUT)
	D EFFDT,END Q:$G(Y)<1
	G 3
	;
4	;enter hcfa amb. surg. rates
	S IBX="HCFA" D CHOOSE Q:$D(DIRUT)
	D EFFDT,END
	G 4
	;
5	;enter rx copay rates
	S IBX="COPAY" D CHOOSE Q:$D(DIRUT)
	D EFFDT,END
	G 5
	;
6	;enter champva subsistence rates
	S IBX="CHMPVA" D CHOOSE Q:$D(DIRUT)
	D EFFDT,END
	G 6
	;
CHOOSE	S IBSEL=$P($T(@IBX),";;",2,99),IB=""
	F I=1:1 Q:$P($T(@IBX+I),";;",2,99)=""  S IB=IB_I_":"_$P($P($T(@IBX+I),";;",2,99),"^",$S($P($P($T(@IBX+1),";;",2,99),"^",5)="":1,1:5))_";"
	W !!,"CHOOSE FROM:"
	F I=1:1 S X=$P(IB,";",I) Q:'X  W !?4,+X,?20,$P(X,":",2)
	S DIR("?")="^D 1^IBEBRH",DIR("??")="^D 2^IBEBRH"
	W !! S DIR(0)="SOA^"_IB,DIR("A")="Select "_IBSEL_": " D ^DIR K DIR I $D(DIRUT) G CHOOSEQ
	S IBP=$P($T(@IBX+Y),";;",2,99) S IBPD=$P(IBP,"^",1) F I=2:1 Q:$P(IBP,"^",I)=""  S IBPD(I)=$P(IBP,"^",I)
CHOOSEQ	Q
	;
EFFDT	S %DT="EX"
	R !!,"   Select Effective Date: ",X:DTIME Q:X=""  D:X["?" 3^IBEBRH I X=" ",$D(IBEFDT) S X=IBEFDT
	D ^%DT K %DT G:X["?" EFFDT Q:Y<1  S IBEFDT=+Y
	D FILE G EFFDT
	Q
	;
FILE	;  -add new entries in 350.2 and edit
	S DLAYGO=350.2,X=IBPD,DIC="^IBE(350.2,",DIC(0)="ELMQ",DIC("S")="I $P(^(0),U,2)=IBEFDT",DIC("DR")=".02///"_IBEFDT D ^DIC K DIC G:+Y<0 FILEQ
	;
	;  -if a new entry
	K DR S DR="" S IBORIG=$O(^IBE(350.2,"B",IBPD,0)) I $P(Y,"^",3) S DR=".02///"_IBEFDT_";.03///"_$P($G(^IBE(350.2,+IBORIG,0)),"^",3)_";"
	;
	S DIE="^IBE(350.2,",DA=+Y,DR=DR_".04;.06;.05;" D ^DIE K DIE
	;
	;  -delete if no charge or not inactive
	S X=$G(^IBE(350.2,DA,0)) I '$P(X,"^",4)&('$P(X,"^",5)) W !!,*7,"Deleting - no charge, not inactive" S DIK="^IBE(350.2," D ^DIK Q
	;
	;  -set computed logic for new entry if needed
	S IB10=$G(^IBE(350.2,+IBORIG,10)) I IB10]"" S ^IBE(350.2,DA,10)=IB10
	;
	;  -logic for rx3-rx6
	S IB=0,IB0=$G(^IBE(350.2,DA,0)) F  S IB=$O(IBPD(IB)) Q:'IB  D
	. S IBORIG=$O(^IBE(350.2,"B",IBPD(IB),0)),IBATYP=$P($G(^IBE(350.2,+IBORIG,0)),"^",3)
	. S X=IBPD(IB),DIC="^IBE(350.2,",DIC(0)="L" K DD,DO D FILE^DICN Q:'Y  S DA=+Y
	. S DIE="^IBE(350.2,",DR=".02////"_IBEFDT_";.03////"_IBATYP_";.04////"_$P(IB0,"^",4)_";.05////"_$P(IB0,"^",5)_";.06////"_$P(IB0,"^",6) D ^DIE
	;
FILEQ	K IB10,DIC,DIE,DR,DA,IBORIG,DIK Q
	;
END	;Kill vars
	K I,X,Y,IBNOD,IBPD,DIR,DIC,DIE,DIK,DA,DR,DA,IB10,IBORIG,IB,IB0,IBP,IBEFDT,IBSEL,IBX,IBRUN
	Q
	;
	;;
COPAY	;;Co-pay Type
NSC	;;RX1^RX3^RX4^^NSC RX CO-PAY (RX1)
SC	;;RX2^RX5^RX6^^SC RX CO-PAY (RX2)
	;;
PERDIEM	;;Per Diem
	;;INPT PER DIEM
	;;NHCU PER DIEM
	;;
HCFA	;;HCFA Amb. Surg. Rate
	;;MEDICARE 1^^^^AMB SURG RATE 1
	;;MEDICARE 2^^^^AMB SURG RATE 2
	;;MEDICARE 3^^^^AMB SURG RATE 3
	;;MEDICARE 4^^^^AMB SURG RATE 4
	;;MEDICARE 5^^^^AMB SURG RATE 5
	;;MEDICARE 6^^^^AMB SURG RATE 6
	;;MEDICARE 7^^^^AMB SURG RATE 7
	;;MEDICARE 8^^^^AMB SURG RATE 8
	;;MEDICARE 9^^^^AMB SURG RATE 9
	;;
CHMPVA	;;CHAMPVA Rate Type
	;;CHAMPVA PER DIEM
	;;CHAMPVA SUBSISTENCE LIMIT
	;;
MEDIC	;;Medicare Deductible
	;;MEDICARE DEDUCTIBLE
	;;
MAIN	;;Billing Rate Type
	;;REVENUE CODE RATES
	;;PER DIEM RATES
	;;MEDICARE DEDUCTIBLE
	;;HCFA AMB. SURG. RATES
	;;RX CO-PAYMENT
	;;CHAMPVA SUBSISTENCE RATES

IBEBRH
IBEBRH	;ALB/AAS - HELP FOR ENTER BILLING RATES PROCESSOR ;4-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	S IBX="MAIN" D 1
	Q
	;
1	;
	W !!,"Select one of the displayed choices by number or name."
	W !,"You must select the type of rate to add/edit to proceed."
	Q
	;
2	;  - help for 1 group of rates
	N I,J,IBP,IBPD,IBNOD
	I IBX="MAIN" D  Q
	.W !!,"CHOOSE FROM:" F J=1:1 S TEXT=$P($T(@IBX+J^IBEBR),";;",2,99) Q:TEXT=""  W !?4,TEXT
	F J=1:1 S IBP=$P($T(@IBX+J^IBEBR),";;",2,99),IBPD=$P(IBP,"^") Q:IBPD=""  D 3
	Q
3	;  - help for 1 rate name
	N I,IBNOD
	I $D(%DT) W !!,"To edit an entry enter one of the following effective dates.",!
	S I="" F  S I=$O(^IBE(350.2,"B",IBPD,I)) Q:'I  S IBNOD=$G(^IBE(350.2,I,0)) I IBNOD'="" D
	. W !?4,$$DAT2^IBOUTL($P(IBNOD,"^",2)),?20,$E($S($P(IBP,"^",5)'="":$P(IBP,"^",5),1:$P(IBP,"^")),1,20),?42,"$",$J($P(IBNOD,"^",4),7,2)
	. I $P(IBNOD,"^",6) W " + $",$J($P(IBNOD,"^",6),7,2)
	. W ?65,$S($P(IBNOD,"^",5):"INACTIVE",1:"ACTIVE")
	I $D(%DT) W !!,"Or enter a new effective date to add a new rate.",!
	Q

IBECEA
IBECEA	;ALB/RLW - Cancel/Edit/Add Patient Charges ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Cancel/Edit/Add Patient Charges -- invoke the List Manager.
	I '$$CHECK^IBECEAU(1) G ENQ
	K XQORS,VALMEVL D EN^VALM("IB CHARGES")
ENQ	K IBSITE,IBFAC,IBSERV
	Q
	;
INIT	; List Manager (IB CHARGES) main entry point.
	S IBJOB=4,IBWHER="IBECEA",IBDUZ=DUZ
	S IBACMAR="^TMP(""IBACM"",$J)",IBACMIDX="^TMP(""IBACMIDX"",$J)",VALMIDX="^TMP(""IBCMLIDX"",$J)"
	I '$$SLPT S VALMQUIT="" D FNL G INITQ
	I $$SLDT S VALMQUIT="" D FNL G INITQ
	I $$SLRX S VALMQUIT="" D FNL G INITQ
	D ARRAY^IBECEA0
INITQ	Q
	;
PAT	; 'Change Patient' protocol entry action.
	N IBDFN S IBDFN=DFN
	I '$$SLPT D MSG S DFN=IBDFN G PATQ
DATE	; 'Change Date' protocol entry action.
	N IBDT1,IBDT2,IBRXXX S IBDT1=IBABEG,IBDT2=IBAEND,IBRXXX=IBRX
	I $$SLDT D MSG S IBABEG=IBDT1,IBAEND=IBDT2 S:$D(IBDFN) DFN=IBDFN G PATQ
	I $$SLRX D MSG S IBABEG=IBDT1,IBAEND=IBDT2,IBRX=IBRXXX S:$D(IBDFN) DFN=IBDFN G PATQ
	D ARRAY^IBECEA0,HDR S VALMBCK="R"
PATQ	Q
	;
MSG	; Quick message display.
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	W !!,*7,"No changes were made!",!
	S DIR(0)="E" D ^DIR S VALMBCK=""
	Q
	;
HDR	; Build screen header.
	S IBNAM=$$PT^IBEFUNC(DFN)
	S VALMHDR(1)=$$SETSTR^VALM1($$FDATE^VALM1(IBABEG)_" THRU "_$$FDATE^VALM1(IBAEND),"Cancel/Edit/Add Charges",59,22)
	S VALMHDR(2)=$E("Patient: "_$P(IBNAM,"^"),1,25)_" "_$E(IBNAM)_$P(IBNAM,"^",3)
	Q
	;
SLPT()	; Select a patient.
	N DIC,X,Y
	S DIC="^DPT(",DIC(0)="AEMQ" D ^DIC S DFN=+Y
	Q Y>0
	;
SLDT()	; Select Charge dates.
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	S DIR(0)="DA^2860101:NOW:EX",DIR("A")="Search for CHARGES from: ",DIR("B")=$$DAT2^IBOUTL($$FMADD^XLFDT(DT,-365)) D ^DIR S IBABEG=+Y G:'Y SLDTQ
	S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="                     to: ",DIR("B")=$$DAT2^IBOUTL(DT) D ^DIR S IBAEND=+Y+.999999
SLDTQ	Q $D(DIRUT)!($D(DUOUT))
	;
SLRX()	; Include Rx copay charges?
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	S DIR(0)="Y",DIR("A")="Include RX COPAY charges",DIR("B")="NO" D ^DIR S IBRX=Y
	Q $D(DIRUT)!($D(DUOUT))
	;
FNL	; List Manager (IB CHARGES) exit action.
	K:$D(IBACMAR) @IBACMAR,IBACMAR K:$D(IBACMIDX) @IBACMIDX,IBACMIDX K:$D(VALMIDX) @VALMIDX,VALMIDX
	K IBABEG,IBAEND,DFN,IBAT,IBAX,IBY,VA,IBRX,IBWHER,X,^TMP("IBECEA",$J),^TMP("IBCMLIDX",$J),DFN,IBSAVY,IBARTYP,IBPRNT,IBDUZ,IBJOB,IBXA,IBNOW,IBLDT,IBL,IBIL,IBNAM
	Q
	;
EXIT	Q

IBECEA0
IBECEA0	;ALB/CPM - Cancel/Edit/Add... Build List ; 22-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ARRAY	; Build list for the List Manager.
	N C,IBATYP,IBAX,IBCHG,IBD,IBN,IBND,IBSTAT,Y
	S VALMBG=1,VALMCNT=0,VALMBCK="R"
	K @IBACMAR,@IBACMIDX,@VALMIDX,^TMP("IBACM",$J),^TMP("IBECEA",$J)
	D APDT,APTDT:$G(IBRX)
	S IBD="" F  S IBD=$O(^TMP("IBECEA",$J,IBD)) Q:'IBD  D
	.S IBN="" F  S IBN=$O(^TMP("IBECEA",$J,IBD,IBN)) Q:'IBN  D 
	..S IBND=^IB(IBN,0) Q:$P(IBND,"^",7)=""
	..S VALMCNT=VALMCNT+1,Y=$P(IBND,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ S IBSTAT=Y
	..S IBATYP=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^") S:$E(IBATYP,1,2)="DG" IBATYP=$E(IBATYP,4,99)
	..S IBCHG=$S(IBATYP["CANCEL":"(",1:" ")_"$"_$P(IBND,"^",7)_$S(IBATYP["CANCEL":")",1:"")
	..S IBAX=$$SETSTR^VALM1(VALMCNT,"",+$P(VALMDDF("CHG#"),"^",2),+$P(VALMDDF("CHG#"),"^",3))
	..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL(IBD),IBAX,+$P(VALMDDF("FDATE"),"^",2),+$P(VALMDDF("FDATE"),"^",3))
	..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL($S($P(IBND,"^",8)["RX COPAY":IBD,1:$P(IBND,"^",15))),IBAX,+$P(VALMDDF("TDATE"),"^",2),+$P(VALMDDF("TDATE"),"^",3))
	..S IBAX=$$SETSTR^VALM1(IBATYP,IBAX,+$P(VALMDDF("ENTRY"),"^",2),+$P(VALMDDF("ENTRY"),"^",3))
	..S IBAX=$$SETSTR^VALM1($P($P(IBND,"^",11),"-",2),IBAX,+$P(VALMDDF("BILL#"),"^",2),+$P(VALMDDF("BILL#"),"^",3))
	..S IBAX=$$SETSTR^VALM1(IBSTAT,IBAX,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
	..S IBAX=$$SETSTR^VALM1(IBCHG,IBAX,+$P(VALMDDF("CHARGE"),"^",2),+$P(VALMDDF("CHARGE"),"^",3))
	..S @IBACMAR@(VALMCNT,0)=IBAX,@IBACMAR@("IDX",VALMCNT,VALMCNT)="",@VALMIDX@(VALMCNT)=VALMCNT
	..S @IBACMIDX@(VALMCNT)=VALMCNT_"^"_DFN_"^"_IBATYP_"^"_IBN_"^"_IBCHG_"^"_IBSTAT
	I '$O(@IBACMAR@(0)) S @IBACMAR@(1,0)=" ",@IBACMAR@(2,0)="No charges meet criteria",VALMCNT=2,@VALMIDX@(1)=1,@VALMIDX@(2)=2
	Q
	;
APDT	; Gather Means Test and CHAMPVA charges.
	N IBN,IBX,Y,Y1
	S Y="" F  S Y=$O(^IB("AFDT",DFN,Y)) Q:'Y  I -Y'>IBAEND S Y1=0 F  S Y1=$O(^IB("AFDT",DFN,Y,Y1)) Q:'Y1  D
	.S IBN=0 F  S IBN=$O(^IB("AF",Y1,IBN)) Q:'IBN  D
	..Q:'$D(^IB(IBN,0))  S IBX=^(0)
	..Q:$P(IBX,"^",8)["ADMISSION"
	..I $P(IBX,"^",15)<IBABEG!($P(IBX,"^",14)>IBAEND) Q
	..S ^TMP("IBECEA",$J,+$P(IBX,"^",14),IBN)=""
	;
	S Y=0  F  S Y=$O(^IB("ACVA",DFN,Y)) Q:'Y  I Y'>IBAEND S Y1=0 F  S Y1=$O(^IB("ACVA",DFN,Y,Y1)) Q:'Y1  D
	.S IBN=0 F  S IBN=$O(^IB("AD",Y1,IBN)) Q:'IBN  D
	..Q:'$D(^IB(IBN,0))  S IBX=^(0)
	..I $P(IBX,"^",15)<IBABEG!($P(IBX,"^",14)>IBAEND) Q
	..S ^TMP("IBECEA",$J,Y,IBN)=""
	Q
	;
APTDT	; Gather Rx copay charges entered through Cancel/Edit/Add.
	N DATE,IBN
	S DATE=IBABEG F  S DATE=$O(^IB("APTDT",DFN,DATE)) Q:'DATE!(DATE>IBAEND)  S IBN="" F  S IBN=$O(^IB("APTDT",DFN,DATE,IBN)) Q:'IBN  I $P($G(^IB(IBN,0)),"^",8)["RX" S ^TMP("IBECEA",$J,DATE\1,IBN)=""
	Q

IBECEA1
IBECEA1	;ALB/RLW - Cancel/Edit/Add... Action Entry Points ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
PASS	; 'Pass a Charge' Entry Action (added by Jim Moore 4/30/92)
	N C,IBII,IBNOS,IBND,IBMSG,IBY,IBLINE,IBSTAT,IBAFY,IBATYP
	N IBARTYP,IBN,IBSEQNO,IBSERV,IBTOTL,IBTRAN,IBIL,IBNOS2,Y
	S VALMBCK="R" D EN^VALM2($G(XQORNOD(0)))
	S IBII="" F  S IBII=$O(VALMY(IBII)) Q:'IBII  D  L -^IB(IBNOS2) D MSG
	.S IBY=1,IBLINE=^TMP("IBACM",$J,IBII,0)
	.S (IBNOS,IBNOS2)=+$P(^TMP("IBACMIDX",$J,IBII),"^",4)
	.;
	.; - perform up-front edits
	.L +^IB(IBNOS2):5 I '$T S IBMSG="was not passed - record not available, please try again" Q
	.S IBND=$G(^IB(IBNOS2,0)) I IBND="" S IBMSG="was not passed - record missing the zeroth node" Q
	.I $P(IBND,"^",12) S IBMSG="was not passed - the charge already has an AR Transaction Number" Q
	.S IBSTAT=+$P(IBND,"^",5) I $P($G(^IBE(350.21,IBSTAT,0)),"^",4) S IBMSG="was not passed - the status indicates that the charge is billed" Q
	.I $P(IBND,"^",7)'>0 S IBMSG="was not passed - there is no charge amount" Q
	.S IBSEQNO=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",5) I 'IBSEQNO S IBMSG="was not passed (Bulletin will be generated)",IBY="-1^IB023" Q
	.;
	.; - pass charge to AR and update list
	.D ^IBR S IBY=$G(Y)
	.S IBND=$G(^IB(IBNOS2,0))
	.S (IBSTAT,Y)=$P(IBND,"^",5),C=$P($G(^DD(350,.05,0)),"^",2) D Y^DIQ
	.S IBLINE=$$SETSTR^VALM1(Y,IBLINE,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
	.S IBLINE=$$SETSTR^VALM1($P($P(IBND,"^",11),"-",2),IBLINE,+$P(VALMDDF("BILL#"),"^",2),+$P(VALMDDF("BILL#"),"^",3))
	.S ^TMP("IBACM",$J,IBII,0)=IBLINE
	.S IBMSG=$S(+IBY=-1:"was not passed -",IBSTAT=8:"has now been placed ON HOLD",1:"has now been passed")
	.;
	.; - if there is no active billing clock, add one
	.I $P(IBND,"^",14),'$D(^IBE(351,"ACT",DFN)) D
	..W !,"This patient has no active billing clock.  Adding a new one... "
	..S IBCLDT=$P(IBND,"^",14) D CLADD^IBAUTL3 W $S(IBY>0:"done.",1:"error (see msg)")
	Q
	;
MSG	; Display results message.
	W !,"Charge #"_IBII_" "_IBMSG I +IBY=-1 D ^IBAERR1
	W ! S DIR(0)="E" D ^DIR K DIR W !
	Q
	;
	;
ADD	; 'Add a Charge' Entry Action
	G ^IBECEA3
	;
UPD	; 'Edit a Charge' Entry Action
	S IBAUPD=1
	;
CAN	; 'Cancel a Charge' Entry Action
	D EN^VALM2(IBNOD(0)) I '$O(VALMY(0)) S VALMBCK="" G CANQ
	S (IBNBR,IBCOMMIT)=0,VALMBCK="R"
	F  S IBNBR=$O(VALMY(IBNBR)) Q:'IBNBR  D ^@$S($G(IBAUPD):"IBECEA2",1:"IBECEA4")
	I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
	K IBBG,IBNBR,IBAUPD,IBCOMMIT
CANQ	Q
	;
PAUSE	; Keep this around for awhile.
	W ! S DIR(0)="E" D ^DIR K DIR W !
	Q

IBECEA2
IBECEA2	;ALB/CPM - Cancel/Edit/Add... Edit a Charge ; 15-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ONE	; Edit a single charge.
	D HDR^IBECEAU("E D I T")
	;
	; - don't allow edit of CHAMPVA charges
	I $P($G(^IB(IBN,1)),"^",5) W !,"Sorry!  You cannot edit the CHAMPVA inpatient subsistence charge.",!,"Please cancel this charge and add a new charge." G ONEQ
	;
	; - perform up-front edits
	I 'IBND S IBY="-1^IB021" G ONEQ
	S IBPARNT=+$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S IBY="-1^IB027" G ONEQ
	I $$LAST^IBECEAU(IBPARNT)'=IBN W !,"You can only edit the last transaction for an original charge." G ONEQ
	S IBATYP=$G(^IBE(350.1,+$P(IBND,"^",3),0)) I IBATYP="" S IBY="-1^IB022" G ONEQ
	S IBSEQNO=$P(IBATYP,"^",5) I 'IBSEQNO S IBY="-1^IB023" G ONEQ
	I $P(IBATYP,"^",5)=2 W !,"You cannot edit cancellation transactions... please add a new charge." G ONEQ
	I $P(IBND,"^",5)=10 W !,"You cannot edit charges which have been directly cancelled.",!,"Please add a new charge." G ONEQ
	;
	; - see if charge has been billed or not
	S IBH="^1^2^8^9^99^"[("^"_+$P(IBND,"^",5)_"^"),IBXA=$P(IBATYP,"^",11)
	S IBIL=$P(IBND,"^",11),IBUNITP=+$P(IBND,"^",6),IBCHGP=+$P(IBND,"^",7)
	S IBATYP=+$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",9)
	I 'IBH D  G:IBY<0 ONEQ
	.I 'IBUNITP W !,"This charge has been billed, but there are no units!" S IBY=-1 Q
	.I 'IBCHGP W !,"There is no charge amount associated with this action!" S IBY=-1 Q
	.I IBIL="" W !,"This charge has been billed, but there is no bill number!" S IBY=-1 Q
	I IBH,$P(IBND,"^",5)'=8 W !,"*** Please Note:  This charge has not yet been passed to Accounts Receivable ***"
	I $P(IBND,"^",5)=8 W !?17,"*** Please Note:  This charge is on hold. ***",!?9,"Editing it will cause it to be passed to Accounts Receivable."
	;
	; - ask user for the cancellation reason
	I 'IBH,IBXA'=4 D REAS^IBECEAU2("E") G:IBCRES<0 ONEQ
	;
	; - ask user for data to be edited
	D ^IBECEA21 G:IBY<0 ONEQ
	;
	; - okay to proceed?
	D PROC^IBECEAU4("edit") G:IBY<0 ONEQ S IBUPD=IBND
	;
	; - build the cancellation transaction
	D CANC^IBECEAU4(IBN,IBCRES,0) G:IBY<0 ONEQ
	;
	; - build the updated transaction
	D UPD^IBECEA22 G:IBY<0 ONEQ
	;
	; - handle updating of clock
	I "^1^2^3^"[("^"_IBXA_"^") D CLOCK^IBECEAU(IBDOLA-IBCLDOL,IBCLDAY,IBDAYA-IBCLDAY)
	;
ONEQ	D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU
	K IBBS,IBCRES,IBDESC,IBIL,IBND,IBARTYP,IBSEQNO,IBTOTL,IBUNIT,IBATYP,IBIDX,IBN,IBY,IBPARNT,IBH,IBXA,IBNOS,IBRTED
	K IBAFY,IBCAN,IBCHG,IBCHGP,IBCLDA,IBCLDAY,IBCLDOL,IBCLDOLO,IBCLDT,IBCLST,IBDAYA,IBDAYP,IBDOLA,IBDOLP,IBDT,IBFR,IBFRP,IBI,IBJ,IBLIM,IBMED,IBTO,IBTOP,IBTRAN,IBUNIT,IBUNITP,IBUPD
	Q

IBECEA21
IBECEA21	;ALB/CPM - Cancel/Edit/Add... Edit Prompts ; 19-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Issue appropriate prompts for each charge type.  If the charge
	; being edited has not been billed, handle that charge before
	; returning to IBECEA2.
	;
	; Handle Outpatient Charges
	I IBXA=4 D  G END
	.S (IBFR,IBTO,IBDT)=$P(IBND,"^",14),IBUNIT=IBUNITP
	.W !,"Re-calculating the OPT copay charge for ",$$DAT1^IBOUTL(IBFR)," ..."
	.S IBX="O" D TYPE^IBAUTL2 Q:IBY<0  W "   $",IBCHG
	.I 'IBH,IBCHG=IBCHGP W !,"This equals the billed amount - this charge cannot be edited." S IBY=-1 Q
	.I IBCHG=IBCHGP W !,"This charge is ready to be billed." D PASS^IBECEA22 S IBY=-1 Q
	.I IBH D UPCHG^IBECEA22(IBCHG) S IBY=-1 Q
	.S IBCRES=$O(^IBE(350.3,"B","MT CHARGE EDITED",0)) S:'IBCRES IBCRES=19
	.W !!,"The original charge will be cancelled and re-billed for $",IBCHG,"."
	;
	; Handle Pharmacy Copay Charges
	I IBXA=5 D  G END
	.D UNIT^IBECEAU2(IBUNITP) Q:IBY<0
	.I 'IBH,IBUNIT=IBUNITP W !!,"No change was made!" S IBY=-1 Q
	.I IBH D UPCHG^IBECEA22(IBCHG,IBUNIT) S IBY=-1 Q
	.W !!,"The original charge will be cancelled and re-billed for $",IBCHG,"."
	;
	; Handle all Inpatient Charges
	S IBFRP=+$P(IBND,"^",14),IBTOP=+$P(IBND,"^",15),IBLIM=$S(IBXA=4:DT,1:$$FMADD^XLFDT(DT,-1))
	D CLSTR^IBECEAU1(DFN,IBFRP)
	I 'IBCLDA W !!,"I cannot find a billing clock that was effective on ",$$DAT1^IBOUTL(IBFRP),"!",!,"Please adjust this patient's billing clocks before editing this charge." S IBY=-1 Q
	D CLDATA^IBAUTL3,DED^IBAUTL3 G:IBY<0 END
	S:IBXA=2 IBBS=$O(^DGCR(399.1,"AC",IBATYP,0))
	I IBXA=2,$P($G(^IBE(350.1,IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90,IBCHGP'>IBCLDOL S IBMED=IBMED/2
	W !!,"  ** ",$S($P(IBCLST,"^",4)=1:"Active",1:"Closed")," Billing Clock **"
	W !?2,"Begin Date: ",$$DAT1^IBOUTL(IBCLDT),"   # Inpt Days: ",IBCLDAY,"   ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",IBCLDOL,!
	S:IBXA=3 IBDAYP=IBCLDAY-IBUNITP
	I IBXA=1!(IBXA=2) S IBDOLP=IBCLDOL-IBCHGP S:IBDOLP<0 IBDOLP=0
	;
	; - ask for 'Bill From' date
FR	D FR^IBECEAU2(IBFRP) G:IBY<0 END I IBFR<IBCLDT W !!,"The 'Bill From' date cannot preceed the Billing Clock Begin Date.",! G FR
	I IBXA=3 S IBDT=IBFR D COST^IBAUTL2 I 'IBCHG W !!,"Unable to determine the per diem rate. Please check your rate table." S IBY=-1 G END
	I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G:IBY<0 END I IBCHG+IBDOLP<IBMED W *7,"   ($",IBCHG,"/day)" G TO
	I IBXA=2,IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 G END
	;
	; - ask for 'Bill To' date
TO	D TO^IBECEAU2(IBTOP) G:IBY<0 END I $P(IBCLST,"^",10),IBTO>$P(IBCLST,"^",10) W !!,"The 'Bill To' date cannot exceed the Billing Clock End Date (",$$DAT1^IBOUTL($P(IBCLST,"^",10)),")." G TO
	S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR)
	I $$FMDIFF^XLFDT(IBTOP,IBFRP)<IBUNITP!(IBFR=IBTO) S IBUNIT=IBUNIT+1
	I IBXA>1 D  G END
	.S IBCHG=IBUNIT*IBCHG S:IBXA=2 IBCHG=$S(IBDOLP+IBCHG>IBMED:IBMED-IBDOLP,1:IBCHG)
	.I IBCHG=IBCHGP D CTBB^IBECEAU3 W !!,"No change was made!" S IBY=-1 Q
	.S:IBXA=2 IBDOLA=IBDOLP+IBCHG,IBDAYA=0 S:IBXA=3 IBDAYA=IBDAYP+IBUNIT,IBDOLA=0
	.W !!,"New charge to be billed: $",IBCHG,!
	.I IBH D CHCL^IBECEA22
	;
	; - ask for 'Fee Amount'
	S IBCLDOLO=IBCLDOL,IBCLDOL=IBCLDOL-IBCHGP S:IBCLDOL<0 IBCLDOL=0
	D FEE^IBECEAU2(IBCHGP) G:IBY<0 END
	I IBCHG=IBCHGP W !!,"No change was made!" S IBY=-1 G END
	S IBCLDOL=IBCLDOLO,IBDOLA=IBDOLP+IBCHG
	I IBH D CHCL^IBECEA22
	;
END	Q

IBECEA22
IBECEA22	;ALB/CPM - Cancel/Edit/Add... Edit Utilities ; 23-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
UPCHG(P7,P6,P14,P15)	; Update the incomplete charge and pass to AR?
	; Input:  P7  --  New amount [required]
	;         P6  --  New Units [optional]
	;        P14  --  New Bill From date [optional]
	;        P15  --  New Bill To date [optional]
	N DA,DIE,DIR,DIRUT,DR,DUOUT,DTOUT,X,Y
	S DIR(0)="Y",DIR("A")="Okay to update this charge and pass it to Accounts Receivable"
	S DIR("?")="Enter 'Y' or 'YES' to update and pass the charge, or 'N', or '^' to quit."
	D ^DIR I 'Y!($D(DIRUT))!($D(DUOUT)) S IBY=-1 Q
	W !,"Updating the incomplete charge and passing to Accounts Receivable...  "
	S $P(^IB(IBN,0),"^",7)=P7 S:$G(P6) $P(^(0),"^",6)=P6 S:$G(P14) $P(^(0),"^",14)=P14 S:$G(P15) $P(^(0),"^",15)=P15
	D PASSCH I IBY>0 W "done." S IBCOMMIT=1
	Q
	;
PASS	; Okay to pass charge to Accounts Receivable?
	N DIR,DIRUT,DUOUT,DTOUT
	S DIR(0)="Okay to pass this charge to Accounts Receivable",DIR(0)="Y"
	S DIR("?")="Enter 'Y' or 'YES' to pass this charge to AR, or 'N' or '^' to quit."
	D ^DIR I Y W !,"Passing the charge to Accounts Receivable...  " D PASSCH I IBY>0 W "done." S IBCOMMIT=1
	Q
	;
PASSCH	; Pass charge to Accounts Receivable.
	N IBSERV S IBNOS=IBN D ^IBR S IBY=Y
	Q
	;
CHCL	; Update charge and clocks.
	D UPCHG(IBCHG,IBUNIT,IBFR,IBTO)
	I IBY>0 D CLOCK^IBECEAU(IBDOLA-IBCLDOL,IBCLDAY,IBDAYA-IBCLDAY) S IBY=-1
	Q
	;
UPD	; Build an 'update' transaction.
	N DA,DIK
	S IBATYP=$P($G(^IBE(350.1,+$P(IBUPD,"^",3),0)),"^",7) I IBATYP="" S IBY="-1^IB022" G UPDQ
	S IBSEQNO=$P($G(^IBE(350.1,IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023" G UPDQ
	W !!,"Building the updated transaction... "
	D ADD^IBAUTL I Y<1 S IBY=Y G UPDQ
	S $P(IBUPD,"^",3)=IBATYP,$P(IBUPD,"^",5)=1,$P(IBUPD,"^",6,7)=IBUNIT_"^"_IBCHG,$P(IBUPD,"^",12)=""
	S:IBXA'=5 $P(IBUPD,"^",14,15)=IBFR_"^"_IBTO,IBUPD=$P(IBUPD,"^",1,16)
	S ^IB(IBN,0)=IBUPD,$P(^(1),"^")=DUZ S DA=IBN,DIK="^IB(" D IX1^DIK
	D PASSCH W:IBY>0 "done."
UPDQ	Q

IBECEA3
IBECEA3	;ALB/CPM - Cancel/Edit/Add... Add a Charge ; 30-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADD	; Add a Charge protocol
	S IBCOMMIT=0,IBEXSTAT=$$RXST^IBARXEU(DFN,DT),IBCATC=$$BILST^DGMTUB(DFN),IBCVAEL=$$CVA^IBAUTL5(DFN)
	I 'IBCVAEL,'IBCATC,'$G(IBRX),+IBEXSTAT<1 W !!,"This patient has never been Category C." S VALMBCK="" D PAUSE^VALM1 G ADDQ1
	;
	; - clear screen and begin
	D CLOCK^IBAUTL3 I 'IBCLDA S (IBMED,IBCLDAY,IBCLDOL,IBCLDT)=0
	D HDR^IBECEAU("A D D")
	I IBY<0 D NODED^IBECEAU3 G ADDQ
	;
	; - ask for the charge type
	D CHTYP^IBECEA33 G:IBY<0 ADDQ
	;
	; - process CHAMPVA charges
	I IBXA=6 D CHMPVA^IBECEA32 G ADDQ
	;
	; - display billing clock data
	I IBXA=2,$P(Y(0),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
	I "^1^2^3^"[("^"_IBXA_"^"),IBCLDA W !!,"  ** Active Billing Clock **   # Inpt Days: ",IBCLDAY,"    ",$$INPT^IBECEAU(IBCLDAY)," 90 days: $",+IBCLDOL,!
	;
	; - ask units for rx copay charge
	I IBXA=5 D UNIT^IBECEAU2(0) G ADDQ:IBY<0 D CTBB^IBECEAU3 G PROC
	S IBLIM=$S(IBXA=4:DT,1:$$FMADD^XLFDT(DT,-1))
	;
FR	; - ask 'bill from' date
	D FR^IBECEAU2(0) G:IBY<0 ADDQ
	;
	; - check the billing clock
	D CLMSG^IBECEA33 G:IBY<0 ADDQ
	;
	; - calculate the inpt copay charge
	I IBXA=2 S IBDT=IBFR D COPAY^IBAUTL2 G ADDQ:IBY<0 I IBCHG+IBCLDOL<IBMED W *7,"   ($",IBCHG,"/day)"
	;
	; - find the correct clock from the 'bill from' date
	I 'IBCLDA!(IBCLDA&(IBFR<IBCLDT)) D NOCL^IBECEA33 G:IBY<0 ADDQ
	;
	; - perform outpatient edits
	I IBXA=4 D OPT^IBECEA33 G ADDQ:IBY<0,PROC
	;
	; - find per diem charge and description
	I IBXA=3 D  I 'IBCHG W !!,"Unable to determine the per diem rate.  Please check your rate table." G ADDQ
	.N IBDT S IBDT=IBFR D COST^IBAUTL2
	.S IBDESC="" X:$D(^IBE(350.1,IBATYP,20)) ^(20)
	;
	; - calculate charge for the inpatient copay
	I IBXA=2,IBCHG+IBCLDOL'<IBMED S IBCHG=IBMED-IBCLDOL,IBUNIT=1,IBTO=IBFR D CTBB^IBECEAU3 G EV
	;
TO	; - ask 'bill to' date
	D TO^IBECEAU2(0) G:IBY<0 ADDQ
	;
	; - calculate units and total charge
	S IBUNIT=$$FMDIFF^XLFDT(IBTO,IBFR) S:IBXA'=3!(IBFR=IBTO) IBUNIT=IBUNIT+1
	I IBXA=1 D FEPR^IBECEA32 G ADDQ:IBY<0,PROC
	S IBCHG=IBCHG*IBUNIT S:IBXA=2 IBCHG=$S(IBCLDOL+IBCHG>IBMED:IBMED-IBCLDOL,1:IBCHG)
	D CTBB^IBECEAU3 W:IBXA=3 "  (for ",IBUNIT," day",$E("s",IBUNIT>1),")"
	;
EV	; - find event record, or select admission for linkage
	S IBEVDA=$$EVF^IBECEA31(DFN,IBFR,IBTO,IBNH)
	I IBEVDA'>0 D NOEV^IBECEA31 G ADDQ:IBY<0,PROC
	S IBSL=$P($G(^IB(+IBEVDA,0)),"^",4)
	W !!,"Linked charge to admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),"  ("
	W $S($P(IBEVDA,"^",3)=9999999:"Still admitted)",1:"Discharged on "_$$DAT1^IBOUTL($P(IBEVDA,"^",3))_$S($P(IBEVDA,"^",3)>DT:" [pseudo])",1:")"))," ..."
	S IBEVDA=+IBEVDA
	I '$G(IBSIBC) D SPEC^IBECEA32(0,$O(^IBE(351.2,"AD",IBEVDA,0)))
	;
PROC	; - okay to proceed?
	D PROC^IBECEAU4("add") G:IBY<0 ADDQ
	;
	; - build the event record first if necessary
	I $G(IBDG) D ADEV^IBECEA31 G:IBY<0 ADDQ
	;
	; - disposition the special inpatient billing case, if necessary
	I $G(IBSIBC) D CEA^IBAMTI1(IBSIBC,IBEVDA)
	;
	; - generate entry in file #350
	W !!,"Building the new transaction...  "
	D ADD^IBECEAU3 G:IBY<0 ADDQ W "done."
	;
	; - pass the charge off to AR on-line
	W !,"Passing the charge directly to Accounts Receivable... "
	D PASSCH^IBECEA22 W:IBY>0 "done." G:IBY<0 ADDQ
	;
	; - review the special inpatient billing case
	I $G(IBSIBC1) D CHK^IBAMTI1(IBSIBC1,IBEVDA)
	;
	; - handle updating of clock
	D CLUPD^IBECEA32
	;
ADDQ	; - display error, rebuild list, and quit
	D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU S VALMBCK="R"
	I IBCOMMIT S IBBG=VALMBG W !,"Rebuilding list of charges..." D ARRAY^IBECEA0 S VALMBG=IBBG
	K IBMED,IBCLDA,IBCLDT,IBCLDOL,IBCLDAY,IBATYP,IBDG,IBSEQNO,IBXA,IBNH,IBBS,IBLIM,IBFR,IBTO,IBRTED,IBSIBC,IBSIBC1,IBBG
	K IBX,IBCHG,IBUNIT,IBDESC,IBDT,IBEVDT,IBEVDA,IBSL,IBNOS,IBN,IBTOTL,IBARTYP,IBIL,IBTRAN,IBAFY,IBCVA,IBCLSF,IBDD,IBND,VADM,VA,VAERR
ADDQ1	K IBEXSTAT,IBCOMMIT,IBCATC,IBCVAEL
	Q

IBECEA31
IBECEA31	;ALB/CPM - Cancel/Edit/Add... Handle Events ; 02-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EVF(DFN,IBFR,IBTO,IBNH)	; Find the matching event for a copay or per diem.
	;  Input:    DFN   --   Pointer to the patient in file #2
	;           IBFR   --   Charge 'Bill From' date
	;           IBTO   --   Charge 'Bill To' date
	;           IBNH   --   1 - NHCU charge, 0 - Hospital charge
	;  Output:    >1   --   ien of event ^ admission date ^ discharge date
	;              0   --   an event is not found
	;             -1   --   an event is found, but can't be billed
	I '$G(DFN)!'$G(IBFR)!'$G(IBTO) Q 0
	S IBNH=$S($G(IBNH):"NHCU",1:"HOSPITAL")
	N DIS,EVD,IBN,Y S EVD="",(IBN,Y)=0
	F  S EVD=$O(^IB("AFDT",DFN,EVD)) Q:'EVD  I -EVD'>IBFR F  S IBN=$O(^IB("AFDT",DFN,EVD,IBN)) Q:'IBN  S IBND=$G(^IB(IBN,0)) I $P(IBND,"^",8)[IBNH D EVS G EVFQ
EVFQ	Q Y
	;
EVS	; Set the output variable Y for the most recent (applicable) event.
	S DIS=$$DIS(IBND)
	S Y=$S(IBXA=3&(IBTO>DIS):-1,IBXA=2&(IBTO'<DIS):-1,1:IBN)_"^"_-EVD_"^"_DIS
	Q
	;
DIS(X)	; Find the discharge date for an admission.
	;  Input:   X  --  Zeroth node of an entry in #350
	;  Output:  Discharge date (if discharged), or 9999999 (still admitted)
	N DIS
	S DIS=+$G(^DGPM(+$P($G(^DGPM(+$P($P($G(X),"^",4),":",2),0)),"^",17),0))
	Q $S(DIS:DIS\1,1:9999999)
	;
ADSEL(DFN)	; Select an admission to use to build an event.
	;  Input:  DFN  --  Pointer to the patient in file #2
	;  Output:    >1   --   ien of pt movement (in file #405) to link event
	;              0   --   no admissions for the patient, or
	;             -1   --   user decided to quit.
	I '$D(^DGPM("ATID1",+$G(DFN))) Q 0
	N ARR,DG,IBD,IBQ,J,SEL,X S IBQ=0,IBD=""
	F J=1:1 S IBD=$O(^DGPM("ATID1",DFN,IBD)) Q:'IBD  S DG=+$O(^(IBD,0)) I $D(^DGPM(DG,0)) W:J=1 !!," Please select one of the following admissions:" S ARR(J)=DG_"^"_(+^(0)\1)_"^"_+$P(^(0),"^",17) W !?3,J D DISEL,ASKAD:'(J#5) G:IBQ!($D(SEL)) ADSELQ
	I '$D(ARR) G ADSELQ
	I '((J-1)#5) W !!?3,"End of list.",!
	S J=J-1 D ASKAD
ADSELQ	Q $S('$D(ARR):0,IBQ!'$D(SEL):-1,1:SEL)
	;
DISEL	; Display admission data.
	N DGPM S DGPM=$G(^DGPM(DG,0))
	W ?7,$$DAT2^IBOUTL(+DGPM),?28,"to:  ",$E($P($G(^DIC(42,+$P(DGPM,"^",6),0)),"^"),1,18)
	I $P(DGPM,"^",17) W ?52,"(Discharged: ",$$DAT2^IBOUTL(+$G(^DGPM(+$P(DGPM,"^",17),0))\1),")"
	Q
	;
ASKAD	; Prompt the user to select an admission.
	W !," Select 1-",J," or type '^' to quit: " R X:DTIME S:'$T!(X["^") IBQ=1 I IBQ!(X="") G ASKADQ
	I '$D(ARR(+X)) W !!?3,*7,"Enter a NUMBER from 1-",J,".",! G ASKAD
	S IBDIS=+$G(^DGPM(+$P(ARR(+X),"^",3),0))\1 S:'IBDIS IBDIS=DT
	I IBFR'<$P(ARR(+X),"^",2),IBTO'>IBDIS S SEL=ARR(+X) G ASKADQ
	W !!?3,*7,"The bill dates fall outside the admissions dates!",! G ASKAD
ASKADQ	K IBDIS
	Q
	;
ADEV	; Add a new event entry in file #350.
	W !!,"I have to build the event record first...  "
	N DIE,DR,DA,IBLAST
	D EVADD^IBAUTL3 K IBN,IBEVDT Q:IBY<0  W "done."
	S IBLAST=$S(IBXA=2:IBTO,IBFR=IBTO:IBTO,1:$$FMADD^XLFDT(IBTO,-1))
	W !,"Updating the Date Last Calculated to ",$$DAT1^IBOUTL(IBLAST),"...  "
	S DIE="^IB(",DA=IBEVDA,DR=".18////"_IBLAST D ^DIE W "done."
	I $P(IBDG,"^",3) W !,"Since the patient has been discharged, let me 'close' the IB event... " S DIE="^IB(",DA=IBEVDA,DR=".05////2" D ^DIE W "done."
	Q
	;
NOEV	; No event in Integrated Billing - ask user to select an admission
	W !! I IBEVDA<0 D UNAB W !,"Tried to link the charge to an admission on ",$$DAT1^IBOUTL($P(IBEVDA,"^",2)),", but the Bill To date",!,"(",$$DAT1^IBOUTL(IBTO),") exceeds the discharge date of ",$$DAT1^IBOUTL($P(IBEVDA,"^",3)),"."
	D:'IBEVDA UNAB
	W !,"You may link this charge to one of the patient's admissions..."
	S IBDG=$$ADSEL(DFN)
	I 'IBDG W !!,"This patient has no admissions -- this charge cannot be added." S IBY=-1 Q
	I IBDG=-1 W !!,"No admission selected -- transaction cannot be completed." S IBY=-1 Q
	W !!,"I will need to build an event record in Integrated Billing for this charge."
	;
	; - check for special inpatient billing case
	D SPEC^IBECEA32(1,$O(^IBE(351.2,"AC",+IBDG,0)))
	;
	; - build softlink and set event date
	S IBSL="405:"_+IBDG,IBEVDT=$P(IBDG,"^",2)
	Q
	;
UNAB	W "Unable to link this charge to an event in Integrated Billing!"
	Q

IBECEA32
IBECEA32	;ALB/CPM - Cancel/Edit/Add... Add Utilities ; 02-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CLUPD	; Handle the updating of the billing clock when adding a charge.
	I IBXA=5!(IBCLDA&(IBXA=4)) G CLOCKQ
	;
	; - charge not covered by a clock
	I 'IBCLDA D ADD G CLOCKQ
	;
	; - update existing clock
	S IBCLST=^IBE(351,IBCLDA,0)
	D CLOCK^IBECEAU(IBCHG,+$P(IBCLST,"^",9),IBUNIT)
CLOCKQ	K IBCLST
	Q
	;
CHMPVA	; Process the CHAMPVA inpatient subsistence charge.
	I '$$ON^IBACVA2() W !!,"Sorry!  The CHAMPVA billing module is not yet fully installed.  You will need",!,"to generate a claim to bill this patient the inpatient subsistence charge." G CHMPVAQ
CHMPEN	S IBPM=$$ADSEL^IBECEA31(DFN) I IBPM=-1 G CHMPVAQ
	I 'IBPM W !!,"This patient has no admissions on file!",!,"You cannot bill the CHAMPVA inpatient subsistence charge at this time." G CHMPVAQ
	S IBSL=+IBPM,IBCVA=$P(IBPM,"^",2),IBPMD=$P(IBPM,"^",3)
	I 'IBPMD W !!,"You can only bill admissions which have been discharged!" G CHMPEN
	I $$PREV^IBACVA1(DFN,IBCVA,IBSL) W !!,"This admission has already been billed the CHAMPVA inpatient subsistence charge."  G CHMPEN
	;
	; - set input parameters and automatically calculate the charge
	S IBBDT=$$FMTH^XLFDT(IBCVA,1),IBEDT=$$FMTH^XLFDT(+$G(^DGPM(IBPMD,0))\1,1)
	D BILL^IBACVA1
CHMPVAQ	K IBPM,IBSL,IBCVA
	Q
	;
ADD	; Prompt user to add a new billing clock.
	N DIE,DA,DR,DIR,DIRUT,DUOUT,DTOUT,X,Y
	W !!,"Since this patient has no active clock to cover this charge, I would like to",!,"set up an active clock as follows:"
	W !!?5,"Clock Begin Date: ",$$DAT1^IBOUTL(IBFR),! W:IBXA=1!(IBXA=2) ?4,"1st 90 days copay: $",IBCHG,! W:IBXA=3 ?5,"# Inpatient days: ",IBUNIT,!
	S DIR(0)="Y",DIR("A")="Is it okay to set up a new clock with "_$S(IBXA=4:"this",1:"these")_" value"_$E("s",IBXA'=4),DIR("?")="Enter 'Y' or 'YES' to create a new clock, or 'N', 'NO', or '^' to quit."
	D ^DIR I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"A new clock will not be established.  Be sure this patient's clock is correct." Q
	W !!,"Creating a new, active billing clock...  "
	S IBCLDT=IBFR D CLADD^IBAUTL3 Q:IBY<0
	I IBXA'=4 S DIE="^IBE(351,",DA=IBCLDA,DR=$S(IBXA=3:.09,1:.05)_"////"_$S(IBXA=3:IBUNIT,1:IBCHG)_";13////"_DUZ_";14///NOW" D ^DIE
	W "done."
	Q
	;
FEPR	; Issue prompts for Inpatient Fee Services
	N DIR,DIRUT,DUOUT,DTOUT,IBCLDT,X,Y
	S IBDESC="FEE SERVICE (INPT)",IBEVDA="*"
	D FEE^IBECEAU2(0) Q:IBY<0  D CTBB^IBECEAU3
	W !!?8,"**** This charge cannot be linked to an event in DHCP. ****"
	W !?8,"**** Please enter the Event Date for this Fee Service. ****",!
	S DIR(0)="DA^2860701:"_IBFR_":EX",DIR("A")="              Event Date: ",DIR("?")="^D HFEV^IBECEA32"
	D ^DIR K DIR S IBEVDT=Y I 'Y W !!,"Fee Event Date not entered - transaction cannot be completed." S IBY=-1
	Q
	;
HFEV	; Help for Fee Event Date
	W !!,"Please enter the Event Date for this Fee Service (which should be the"
	W !,"admission date, and not exceed the Bill From date [",$$DAT1^IBOUTL(IBFR),"]), or '^' to quit."
	Q
	;
SPEC(X,Y)	; Display messages for special inpatient billing cases.
	;  Input:  X -- has two values:
	;                1 --> entering after selecting an admission
	;                      (will need to set IBSIBC)
	;                0 --> billing event record exists
	;          Y -- Pointer to special inpatient billing case in
	;               file #351.2 (quit if not positive)
	Q:'$G(Y)
	I $G(X),'$P($G(^IBE(351.2,Y,0)),"^",8) D  Q
	.S IBSIBC=+IBDG
	.W !,"This is a special inpatient billing case!  The case will be dispositioned."
	W !,*7,"Please note that you are creating a charge for a special inpatient case!!"
	S IBSIBC1=Y D DSPL^IBAMTI1(Y)
	Q

IBECEA33
IBECEA33	;ALB/CPM - Cancel/Edit/Add... More Add Utilities ; 23-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
NOCL	; Find the correct clock from the 'bill from' date.
	N IBCLST,IBALR S IBALR=0
	I IBCLDA S IBALR=1 W !!,"The Bill From date is prior to the start of the active clock..."
	D CLSTR^IBECEAU1(DFN,IBFR)
	I 'IBCLDA D  G NOCLQ
	.I IBALR W !!,"This patient has no clock which would cover this date.  You should use the",!,"Clock Maintenance option to adjust this patient's clocks before proceeding." S IBY=-1 Q
	.W !!,"Please note that I cannot find an active or closed clock for this patient",!,"on this date.",!
	D CLDATA^IBAUTL3,DED^IBAUTL3 I IBY<0 D NODED^IBECEAU3 G NOCLQ
	I IBXA=2,$P($G(^IBE(350.1,IBATYP,0)),"^",8)'["NHCU",IBCLDAY>90 S IBMED=IBMED/2
	W !!?5,"This charge will be billed under the following closed clock:"
	W !!?6,"Begin Date: ",$$DAT1^IBOUTL(IBCLDT),"     # Inpt Days: ",IBCLDAY
	W !?5,"Closed Date: ",$$DAT1^IBOUTL($P(IBCLST,"^",10)),"     ",$$INPT^IBECEAU(IBCLDAY)," 90 Days: $",+IBCLDOL
	I IBXA=2,IBCLDOL'<IBMED S IBY=-1 W !!?5,"This patient has been billed the full copayment under this billing clock!",!?5,"You cannot add another copay charge starting on this date."
NOCLQ	Q
	;
OPT	; Check for a C&P exam and determine the outpatient copay rate.
	I $$CNP^IBECEAU(DFN,IBFR) D  I IBY<0 G OPTQ
	.N DIR,DIRUT,DUOUT,DTOUT,Y
	.W !!,"This patient had a Compensation & Pension exam on this date."
	.S DIR(0)="Y",DIR("A")="Do you still want to add a charge"
	.S DIR("?")="Enter 'Y' to continue to add the charge, or 'N' or '^' to quit"
	.D ^DIR S:'Y IBY=-1
	;
	N IBDT,IBX,IBBS S (IBDT,IBTO)=IBFR,IBX="O",IBUNIT=1,IBEVDA="*"
	D TYPE^IBAUTL2,CTBB^IBECEAU3:IBY>0
OPTQ	Q
	;
CHTYP	; Ask for the Charge Type
	S DIC="^IBE(350.1,",DIC(0)="AEMQZ",D="E",DIC("S")="I $P(^(0),U)'[""MEDICARE"",$P(^(0),U)'[""CHAMPVA SUB""",DIC("A")="Select CHARGE TYPE: "
	D IX^DIC K DIC S IBATYP=+Y I Y<0 S IBY=-1 W !!,"No CHARGE TYPE entered - transaction cannot be completed." G CHTYPQ
	;
	; - perform charge type edits
	S IBSEQNO=$P(Y(0),"^",5),IBXA=$P(Y(0),"^",11),IBNH=$P(Y(0),"^",8)["NHCU"
	I 'IBSEQNO S IBY="-1^IB023" G CHTYPQ
	I IBXA=6 G:IBCVAEL CHTYPQ W !!,"This patient does not have a Primary Eligibility of CHAMPVA.",! G CHTYP
	I 'IBCATC,IBXA'=5 W !!,"This patient has never been Category C...",!,"You may only select a Pharmacy copay charge type.",! G CHTYP
	I +IBEXSTAT,IBXA=5 W !!,"Patient is Exempt from Medication Copayment",!,$P(IBEXSTAT,"^",4),! G CHTYP
	S:IBXA=2 IBBS=$O(^DGCR(399.1,"AC",IBATYP,0))
CHTYPQ	Q
	;
CLMSG	; Check the Medicare Deductible and Billing Clock
	I 'IBMED S IBCLDT=IBFR D DED^IBAUTL3 I IBY<0 D NODED^IBECEAU3 G CLMSGQ
	I "^1^2^"[("^"_IBXA_"^"),IBCLDA,IBFR'<IBCLDT,IBCLDOL'<IBMED S IBY=-1 D
	.W !!?5,*7,"This patient has already been billed the Medicare Deductible ($",IBMED,")"
	.W !?5,"for his current 90 days of care.  If you know this not to be the case,"
	.W !?5,"please adjust the billing clock before proceeding."
CLMSGQ	Q

IBECEA4
IBECEA4	;ALB/CPM - Cancel/Edit/Add... Cancel a Charge ; 11-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ONE	; Cancel a single charge.
	D HDR^IBECEAU("C A N C E L")
	;
	; - perform up-front edits
	D CED^IBECEAU4(IBN) G:IBY<0 ONEQ
	I IBCANTR!($P(IBND,"^",5)=10) W !,$S(IBH:"Please note that this cancellation action has not yet been passed to AR.",1:"This transaction has already been cancelled."),! G ONEQ:'IBH,REAS
	I 'IBH,IBIL="" S IBY="-1^IB024" G ONEQ
	;
REAS	; - ask for the cancellation reason
	D REAS^IBECEAU2("C") G:IBCRES<0 ONEQ
	;
	; - okay to proceed?
	D PROC^IBECEAU4("cancel") G:IBY<0 ONEQ
	;
	; - handle cancellation transactions
	I IBCANTR D  G ONEQ
	.I IBN=IBPARNT D UPSTAT^IBECEAU4(IBN,1) Q
	.I 'IBIL S IBIL=$P($G(^IB(IBPARNT,0)),"^",11) I 'IBIL W !!,"There is no bill number associated with this charge.",!,"The charge cannot be cancelled." Q
	.S DIE="^IB(",DA=IBN,DR=".1////"_IBCRES_";.11////"_IBIL D ^DIE,PASS K DIE,DA,DR
	;
	; - handle incomplete and regular transactions
	D CANC^IBECEAU4(IBN,IBCRES,1) G:IBY<1 ONEQ
	;
	; - handle updating of clock
	I "^1^2^3^"'[("^"_IBXA_"^") G ONEQ
	I 'IBCHG G ONEQ
	D CLSTR^IBECEAU1(DFN,IBFR) I 'IBCLDA W !!,"Please note that there is no billing clock which would cover this charge.",!,"Be sure that this patient's billing clock is correct." G ONEQ
	D CLOCK^IBECEAU(-IBCHG,+$P(IBCLST,"^",9),-IBUNIT)
	;
ONEQ	D ERR^IBECEAU4:IBY<0,PAUSE^IBECEAU
	K IBCHG,IBCRES,IBDESC,IBIL,IBND,IBSEQNO,IBTOTL,IBUNIT,IBATYP,IBIDX
	K IBN,IBREB,IBY,IBEVDA,IBPARNT,IBH,IBCANTR,IBXA,IBSL,IBFR,IBTO,IBNOS,IBCANC
	Q
	;
PASS	; Pass the action to Accounts Receivable.
	N IBSERV
	W !,"Passing the cancellation action to AR... "
	S IBNOS=IBN D ^IBR S IBY=Y W:Y>0 "done."
	Q

IBECEA5
IBECEA5	;ALB/CPM - Cancel/Edit/Add... Update Events ; 05-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Update Events -- invoke the List Manager.
	N VALMIDX,VALMHDR
	D EN^VALM("IB EVENTS")
	Q
	;
INIT	; List Manager (IB EVENTS) main entry point.
	N IBAX,IBD,IBN,IBND,IBSTAT,IBLAST,IBWARD
	S IBACME="^TMP(""IBACME"",$J)",IBACMEI="^TMP(""IBACMEI"",$J)",IBD=""
	S VALMIDX="^TMP(""IBACMLI"",$J)",VALMBG=1,VALMCNT=0,VALMBCK="R"
	K @IBACME,@IBACMEI,@VALMIDX
	F  S IBD=$O(^IB("AFDT",DFN,IBD)) Q:'IBD  D
	.S IBN=0 F  S IBN=$O(^IB("AFDT",DFN,IBD,IBN)) Q:'IBN  D
	..S IBND=$G(^IB(IBN,0)) Q:$P(IBND,"^",8)'["ADMISSION"
	..S IBSTAT=$S($P(IBND,"^",5)=1:"OPEN",1:"CLOSED"),IBLAST=$P(IBND,"^",18)
	..S Y=+$P($P(IBND,"^",4),":",2),Y=+$P($G(^DGPM(Y,0)),"^",6),Y=$E($P($G(^DIC(42,Y,0)),"^"),1,20)
	..S VALMCNT=VALMCNT+1,IBWARD=$S(Y]"":Y,1:"*** unknown ***")
	..S IBAX=$$SETSTR^VALM1($P(IBND,"^",8),VALMCNT,+$P(VALMDDF("TYPE"),"^",2),+$P(VALMDDF("TYPE"),"^",3))
	..S IBAX=$$SETSTR^VALM1(IBWARD,IBAX,+$P(VALMDDF("WARD"),"^",2),+$P(VALMDDF("WARD"),"^",3))
	..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL($P(IBND,"^",17)),IBAX,+$P(VALMDDF("EDATE"),"^",2),+$P(VALMDDF("EDATE"),"^",3))
	..S IBAX=$$SETSTR^VALM1(IBSTAT,IBAX,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
	..S IBAX=$$SETSTR^VALM1($$DAT1^IBOUTL(IBLAST),IBAX,+$P(VALMDDF("LCALC"),"^",2),+$P(VALMDDF("LCALC"),"^",3))
	..S @IBACME@(VALMCNT,0)=IBAX,@IBACME@("IDX",VALMCNT,VALMCNT)="",@VALMIDX@(VALMCNT)=VALMCNT
	..S @IBACMEI@(VALMCNT)=IBSTAT_"^"_IBLAST_"^"_IBN_"^"_$P(IBND,"^",17)
	I '$O(@IBACME@(0)) S @IBACME@(1,0)=" ",@IBACME@(2,0)="  This patient has no inpatient event records stored in Billing.",VALMCNT=2,@VALMIDX@(1)=1,@VALMIDX@(2)=2
	Q
	;
HDR	; Build screen header.
	S VALMHDR(1)=$$SETSTR^VALM1("Update Billable Events","Cancel/Edit/Add Charges",59,22)
	S VALMHDR(2)=$$SETSTR^VALM1("Date Charges",$E("Patient: "_$P(IBNAM,"^"),1,25)_" "_$E(IBNAM)_$P(IBNAM,"^",3),68,12)
	Q
	;
EXIT	; List Manager (IB EVENTS) exit action.
	K:$D(IBACME) @IBACME K:$D(IBACMEI) IBACMEI
	K IBACME,IBACMEI
	D FULL^VALM1,CLEAN^VALM10
	;D CLEAN^VALM10,CLEAR^VALM1
	Q

IBECEA51
IBECEA51	;ALB/CPM - Cancel/Edit/Add... Update Event Actions ; 05-MAY-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CS	; 'Change Status' Entry Action
	N DIE,DA,DR,IBCOMMIT,IBLINE,IBNDX,IBSTAT,IBDEST,IBNBR,IBN
	S IBCOMMIT=0 D EN^VALM2($G(XQORNOD(0))) I '$O(VALMY(0)) G CSQ
	S IBNBR="" F  S IBNBR=$O(VALMY(IBNBR)) Q:'IBNBR  D
	.S IBLINE=^TMP("IBACME",$J,IBNBR,0),IBNDX=^TMP("IBACMEI",$J,IBNBR)
	.S IBSTAT=$P(IBNDX,"^"),IBN=$P(IBNDX,"^",3)
	.S IBDEST=$S(IBSTAT="OPEN":"CLOSED",1:"OPEN")
	.W !!,"Processing Event #",IBNBR,":"
	.S DIR(0)="Y",DIR("A")="Change the status of this event from "_IBSTAT_" to "_IBDEST,DIR("?")="^D HCS^IBECEA51"
	.D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"This event will remain "_IBSTAT_"." Q
	.S DIE="^IB(",DA=IBN,DR=".05////"_$S(IBDEST="OPEN":1,1:2)
	.D ^DIE I $D(Y) W !,"An error occured while changing the status - event is still ",IBSTAT,"." Q
	.S IBCOMMIT=1 W !,"The status has been changed to ",IBDEST,"."
	.S IBLINE=$$SETSTR^VALM1(IBDEST,IBLINE,+$P(VALMDDF("STATUS"),"^",2),+$P(VALMDDF("STATUS"),"^",3))
	.S ^TMP("IBACME",$J,IBNBR,0)=IBLINE,$P(^TMP("IBACMEI",$J,IBNBR),"^",1)=IBDEST
	D PAUSE^VALM1
CSQ	S VALMBCK=$S(IBCOMMIT:"R",1:"")
	Q
	;
HCS	; Help for 'Change Status'
	W !!,"Please enter 'Y' or 'YES' to change the status of this event from ",IBSTAT
	W !,"to ",IBDEST,", or 'N', 'NO', or '^' to quit."
	W !!,"If the status of this event is changed to open, and the patient is still an"
	W !,"inpatient in this ward (on the specified admission date), charges will be"
	W !,"billed starting the day after the Date Last Calculated.  If the status is"
	W !,"changed to closed, no further charges will be associated with this event."
	Q
	;
LC	; 'Last Date Calc' Entry Action
	N IBCOMMIT,IBNBR
	S IBCOMMIT=0 D EN^VALM2($G(XQORNOD(0))) I '$O(VALMY(0)) G LCQ
	S IBNBR="" F  S IBNBR=$O(VALMY(IBNBR)) Q:'IBNBR  D LCO
	D PAUSE^VALM1
LCQ	S VALMBCK=$S(IBCOMMIT:"R",1:"")
	Q
	;
LCO	; Update Last Calc Date for a Single Event.
	N DIE,DR,DA,IBLINE,IBNDX,IBLCAL,IBN,IBEVDT,IBNEWV,%DT
	S IBLINE=^TMP("IBACME",$J,IBNBR,0),IBNDX=^TMP("IBACMEI",$J,IBNBR)
	S IBLCAL=$P(IBNDX,"^",2),IBN=$P(IBNDX,"^",3),IBEVDT=$P(IBNDX,"^",4)
	W !!,"Processing Event #",IBNBR,":"
LCP	W !,"Date Last Calculated: " W:IBLCAL $$DAT2^IBOUTL(IBLCAL),"// "
	R X:DTIME S:'IBLCAL&(X="") X="^" S:'$T X="^" I $E(X)="^" G LCOQ
	I X="" W "  (",$$DAT2^IBOUTL(IBLCAL),")",!,"No change!" G LCOQ
	I $E(X)="?"!($E(X)="@") D HLC G LCP
	S %DT="EPX" D ^%DT I Y<0 D HELP^%DTC G LCP
	I Y<IBEVDT!(Y>$$FMADD^XLFDT(DT,-1)) D HLC G LCP
	S IBNEWV=Y,DIE="^IB(",DA=IBN,DR=".18////"_Y
	D ^DIE I $D(Y) W !,"An error occured while changing the Last Calc Date - no change made!" G LCOQ
	S IBCOMMIT=1 W !,"The Date Last Calculated has been changed to ",$$DAT1^IBOUTL(IBNEWV),"."
	S IBLINE=$$SETSTR^VALM1($$DAT1^IBOUTL(IBNEWV),IBLINE,+$P(VALMDDF("LCALC"),"^",2),+$P(VALMDDF("LCALC"),"^",3))
	S ^TMP("IBACME",$J,IBNBR,0)=IBLINE,$P(^TMP("IBACMEI",$J,IBNBR),"^",2)=IBNEWV
LCOQ	Q
	;
HLC	; Help for 'Last Calc Date'
	W !!,"The Date Last Calculated is used to record the last date for which Means Test"
	W !,"charges were billed for an admission."
	W !!,"This date cannot be deleted.  Please enter a date not less than the Event"
	W !,"Date (",$$DAT1^IBOUTL(IBEVDT),") and not greater than yesterday (",$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-1)),").",!
	Q

IBECEAU
IBECEAU	;ALB/CPM - Cancel/Edit/Add... Utilities ; 11-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CHECK(TALK)	; Retrieve the institution and MAS Service pointer.
	; Input:   TALK  --  1 : do i/o (writes)
	;                    0 : no i/o
	N IBY,Y S (IBY,Y)=1
	D SITE^IBAUTL I Y<1 S IBY=Y W:$G(TALK) !!,"You must define your facility in the IB SITE PARAMETER file before proceeding!",!
	I IBY>0 D SERV^IBAUTL2 I IBY<1 W:$G(TALK) !!,"You must define the MAS Service Pointer in the IB SITE PARAMETER file",!,"before proceeding!",!
	Q IBY>0
	;
PAUSE	; Go to end of page to pause.
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	W ! F Y=$Y:1:21 W !
	S DIR("A")="Press RETURN to process the next charge or to return to the list"
	S DIR(0)="E" D ^DIR K DIR
	Q
	;
INPT(DAYS)	; Return a description for Billing Clock days.
	; Input:   DAYS  --  Number of days in a billing clock
	; Output:  "1st", "2nd", "3rd", "4th"
	Q $S(DAYS>270:"4th",DAYS>180:"3rd",DAYS>90:"2nd",1:"1st")
	;
LAST(PAR)	; Find last action filed for any parent action.
	; Input:    PAR  --  Parent IB Action
	; Output:   Last action filed for parent (or parent if none)
	N IBL,IBLDT,IBLAST
	S IBLAST="",IBLDT=$O(^IB("APDT",PAR,"")) I +IBLDT S IBL=0 F  S IBL=$O(^IB("APDT",PAR,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
	Q $S(IBLAST:IBLAST,1:PAR)
	;
BFO(DFN,DATE)	; Patient Billed For OPT Copay on a specified date?
	; Input:    DFN  --  Pointer to the patient in file #2
	;          DATE  --  Date of the Outpatient Visit
	; Output:     0  --  Not billed the OPT copay on the visit date
	;            >0  --  Pointer to charge in file #350 that was billed
	N IBATYP,IBATYPN,IBL,IBND,IBN,Y
	I '$G(DFN)!'$G(DATE) G BFOQ
	S IBN=0 F  S IBN=$O(^IB("AFDT",DFN,-DATE,IBN)) Q:'IBN  D  I $P(IBATYPN,"^",11)=4,"^1^3^"[("^"_$P(IBATYP,"^",5)_"^"),"^1^2^3^4^8^20^"[("^"_+$P(IBND,"^",5)_"^") S Y=IBL Q
	.S IBL=$$LAST(+$P($G(^IB(IBN,0)),"^",9)),IBND=$G(^IB(IBL,0))
	.S IBATYP=$G(^IBE(350.1,+$P(IBND,"^",3),0))
	.S IBATYPN=$G(^IBE(350.1,+$P(IBATYP,"^",9),0))
BFOQ	Q +$G(Y)
	;
CNP(DFN,DATE)	; Did the patient have a C&P Exam on a specified date?
	; Input:    DFN  --  Pointer to the patient in file #2
	;          DATE  --  Date of the Outpatient Visit
	; Output:     0  --  Patient did not have a C&P Exam on the visit date
	;             1  --  Patient had a C&P Exam on the visit date
	N I,IBD,IBSD,Y
	I '$G(DFN)!'$G(DATE) G CNPQ
	; - check scheduled appointments
	S IBD=DATE F  S IBD=$O(^DPT(DFN,"S",IBD)) Q:IBD=""!(IBD>(DATE+.9999))  S IBSD=$G(^(IBD,0)) I IBSD,$P(IBSD,"^",16)=1,$P($$STATUS^SDAM1(DFN,IBD,+IBSD,IBSD),";")<3 S Y=1 G CNPQ
	; - check stop codes
	S IBD=$G(^SDV("ADT",DFN,DATE)) G:'IBD CNPQ
	S I=0 F  S I=$O(^SDV(IBD,"CS",I)) Q:'I  I $P($G(^(I,0)),"^",5)=1 S Y=1 Q
CNPQ	Q +$G(Y)
	;
HDR(OPT)	; Display the header for an action
	; Input:    OPT  --  Action Header
	N ADD,HDR S ADD=OPT="A D D"
	D CLEAR^VALM1 S IBY=1,HDR=OPT_"   A   C H A R G E"
	I 'ADD S IBIDX=$G(^TMP("IBACMIDX",$J,IBNBR)),IBN=+$P(IBIDX,"^",4),IBND=$G(^IB(IBN,0))
	W !?(80-$L(HDR)\2),HDR W:'ADD !?29,"Processing Charge #",IBNBR
	W !,$$LINE,!?3,"Name: ",$P(IBNAM,"^") W:'ADD ?41,"Type: ",$P(IBIDX,"^",3)
	I ADD W ?41,"** " W:'IBCLDA "NO " W "ACTIVE BILLING CLOCK **"
	W !?5,"ID: ",$P(IBNAM,"^",2) W:'ADD ?42,"Amt:",$P(IBIDX,"^",5)," (",$P(IBIDX,"^",6),")"
	I ADD,IBCLDA W ?44,"Clock Begin Date: ",$$DAT1^IBOUTL(IBCLDT)
	W !,$$LINE,!
	Q
	;
LINE()	; Write a line.
	Q $TR($J("",80)," ","-")
	;
CLOCK(IBDOL,IBDAYPR,IBDAY)	; Display and update clock data.
	; Input:     IBDOL  --  Dollar amount to add or subtract
	;          IBDAYPR  --  Existing number of inpatient days
	;            IBDAY  --  Inpatient days to add or subtract
	; Also assumes that IBCLST,IBNAM, IBCLDA, and IBXA are defined.
	D CLDSP^IBECEAU1(IBCLST,IBNAM) I $P(IBCLST,"^",4)'=1 W !,"** Please note that an active billing clock was not selected for updating **"
	I IBXA=1!(IBXA=2) D CLAMT^IBECEAU1(IBCLST,IBDOL,IBCLDA)
	I IBXA=3 D CLINP^IBECEAU1(IBDAYPR,IBDAY,IBCLDA)
	Q

IBECEAU1
IBECEAU1	;ALB/CPM - Cancel/Edit/Add... Clock Utilities ; 12-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CLSTR(DFN,DATE)	; Find the billing clock in effect on DATE.
	;   Input:      DFN  --  Pointer to the patient in file #2
	;              DATE  --  The date which is covered by the clock
	;  Output:   IBCLDA  --  Pointer to the clock in file #351
	;                        (or null if there is none)
	;            IBCLST  --  Zeroth node of clock pointed to by
	;                        IBCLDA  [OPTIONAL]
	N X,Y
	K IBCLST S IBCLDA=""
	I '$G(DATE)!'$G(DFN) G CLSTRQ
	S X="" F  S X=$O(^IBE(351,"AIVDT",DFN,X)) Q:'X  S IBCLDA=0 F  S IBCLDA=$O(^IBE(351,"AIVDT",DFN,X,IBCLDA)) Q:'IBCLDA  S Y=$G(^IBE(351,IBCLDA,0)) I Y,$P(Y,"^",4)'=3,$P(Y,"^",3)'>DATE S IBCLST=Y G CLSTRQ
CLSTRQ	Q
	;
CLDSP(X,NAM)	; Display Billing Clock data for NAM.
	;   Input:        X  --  Zeroth node of clock in file #351
	;               NAM  --  Patient name^short id^long id
	I '$G(X)!($G(NAM)="") G CLDSPQ
	W !!,"Means Test Billing Clock information for ",$P(NAM,"^")," (",$P(NAM,"^",3),")"
	W !,$TR($J("",80)," ","-")
	W !?2,"Clock Start Date: ",$$DAT1^IBOUTL($P(X,"^",3)),?42,"Clock End Date: ",$S($P(X,"^",10):$$DAT1^IBOUTL($P(X,"^",10)),1:"N/A")
	W !?6,"Clock Status: ",$S($P(X,"^",4)=1:"CURRENT",$P(X,"^",4)=2:"CLOSED",1:"UNKNOWN"),?42,"Inpatient Days: ",+$P(X,"^",9)
	W !!?2,"Medicare Deductible Co-payments:"
	W !?15,"1st 90 days: $",+$P(X,"^",5),?45,"3rd 90 days: $",+$P(X,"^",7)
	W !?15,"2nd 90 days: $",+$P(X,"^",6),?45,"4th 90 days: $",+$P(X,"^",8)
	W !,$TR($J("",80)," ","-")
CLDSPQ	Q
	;
CLINP(BEG,DIF,IBCLDA)	; Update Billing Clock Inpatient Days
	;   Input:      BEG  --  Existing number of inpatient days
	;               DIF  --  Days to add to clock (could be negative)
	;            IBCLDA  --  Pointer to clock in file #351
	N DAYS,DIR,DIRUT,DUOUT,DTOUT,DIE,DA,DR
	I $G(BEG)=""!'$G(DIF)!'$G(IBCLDA) G CLINPQ
	S DAYS=BEG+DIF
	I DAYS<0!(DAYS>365) W !!,"Can't update the clock to reflect ",DAYS," inpatient days.",!,"Please review this patient's clock and use the Clock Maintenance option",!,"to make any changes, if necessary." G CLINPQ
	W ! S DIR(0)="Y",DIR("?")="Enter 'Y' or 'YES' to update the clock, or 'N', 'NO', or '^' to stop.",DIR("A")="Update the number of inpatient days from "_BEG_" to "_DAYS D ^DIR
	I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"The billing clock has not been updated." G CLINPQ
	S DIE="^IBE(351,",DA=IBCLDA,DR=".09////"_DAYS_";13////"_DUZ_";14///NOW" D ^DIE
	W !,"The clock has been updated."
CLINPQ	Q
	;
CLAMT(STR,AMT,IBCLDA)	; Update Billing Clock Medicare Deductible co-payments
	;   Input:      STR  --  Zeroth node of clock in file #351
	;               AMT  --  Dollar Amt to add to clock (could be negative)
	;            IBCLDA  --  Pointer to clock in file #351
	N DAYS,DIR,DIRUT,DUOUT,DTOUT,DIE,DA,DR,IBMED,IBCLDT,NEWAMT,PTR
	I $G(STR)=""!'$G(AMT)!'$G(IBCLDA) G CLAMTQ
	S DAYS=+$P(STR,"^",9),PTR=$S(DAYS<91:5,DAYS<181:6,DAYS<271:7,1:8)
	S IBCLDT=+$P(STR,"^",3) D DED^IBAUTL3
	S NEWAMT=+$P(STR,"^",PTR)+AMT
	I NEWAMT<0 W !!,"Can't update the clock to reflect a copayment of -$",-NEWAMT,".",!,"Please review this patient's clock and use the Clock Maintenance option",!,"to make any changes, if necessary." G CLAMTQ
	I NEWAMT>IBMED W !!,"Note that the effective Medicare Deductible for this billing clock is $",IBMED,".",!,"Please note that $",NEWAMT," is beyond this limit."
	W ! S DIR(0)="Y",DIR("?")="Enter 'Y' or 'YES' to update the clock, or 'N', 'NO', or '^' to stop.",DIR("A")="Update the "_$$INPT^IBECEAU(DAYS)_" 90 days copayment from $"_+$P(STR,"^",PTR)_" to $"_NEWAMT D ^DIR
	I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"The billing clock has not been updated." G CLAMTQ
	S DIE="^IBE(351,",DA=IBCLDA,DR=".0"_PTR_"////"_NEWAMT_";13////"_DUZ_";14///NOW" D ^DIE
	W !,"The clock has been updated."
CLAMTQ	Q

IBECEAU2
IBECEAU2	;ALB/CPM - Cancel/Edit/Add... User Prompts ; 19-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
REAS(IBX)	; Ask for the cancellation reason.
	; Input:   IBX  --  "C" (Cancel a charge), "E" (Edit a Charge)
	S DIC="^IBE(350.3,",DIC(0)="AEMQZ",DIC("A")="Select "_$S(IBX="E":"EDIT",1:"CANCELLATION")_" REASON: "
	S DIC("S")=$S(IBXA=6:"I $P(^(0),U,3)=3",IBXA=5:"I ($P(^(0),U,3)=1)!($P(^(0),U,3)=3)",1:"I ($P(^(0),U,3)=2)!($P(^(0),U,3)=3)")
	D ^DIC K DIC S IBCRES=+Y I Y<0 W !!,"No ",$S(IBX="E":"edit",1:"cancellation")," reason entered - the transaction cannot be completed."
	Q
	;
UNIT(DEF)	; Ask for units for Rx copay charges
	; Input:   DEF  --  Default value if previous charge is to be displayed
	N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
	S DA=IBATYP,IBDESC="RX COPAYMENT" D COST^IBAUTL S IBCHG=X1
	S DIR(0)="N^::0^K:X<1!(X>3) X",DIR("A")="Units",DIR("?")="^D HUN^IBECEAU2"
	S:DEF DIR("B")=DEF D ^DIR I Y S IBUNIT=Y,IBCHG=IBCHG*Y
	I 'Y W !!,"Units not entered - transaction cannot be completed." S IBY=-1
	Q
	;
FR(DEF)	; Ask Bill From Date
	; Input:   DEF  --  Default value if previous charge is to be displayed
	N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
FRA	S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
	S DIR(0)="DA^2901001:"_IBLIM_":EX",DIR("A")=$S(IBXA=4:"Visit Date: ",1:"Charge for services from: "),DIR("?")="^D HFR^IBECEAU2"
	D ^DIR K DIR S IBFR=Y I 'Y W !!,$S(IBXA=4:"Visit",1:"Bill From")," Date not entered - transaction cannot be completed." S IBY=-1 G FRQ
	I '$$BIL^DGMTUB(DFN,IBFR+.24) D CATC G FRA
	I IBXA=4,$$BFO^IBECEAU(DFN,IBFR) W !!,"This patient has already been billed the outpatient copay charge for ",$$DAT1^IBOUTL(IBFR),".",! G FRA
FRQ	Q
	;
TO(DEF)	; Ask Bill To Date
	; Input:   DEF  --  Default value if previous charge is to be displayed
	N DA,DIR,DIRUT,DUOUT,DTOUT,X,X1,Y
TOA	S:$G(DEF) DIR("B")=$$DAT2^IBOUTL(DEF)
	S DIR(0)="DA^"_IBFR_":"_IBLIM_":EX",DIR("A")="  Charge for services to: ",DIR("?")="^D HTO^IBECEAU2"
	D ^DIR K DIR S IBTO=Y I 'Y W !!,"Bill To date not entered - transaction cannot be completed." S IBY=-1 G TOQ
	I '$$BIL^DGMTUB(DFN,IBTO+.24) D CATC G TOA
TOQ	Q
	;
FEE(DEF)	; Ask for Fee Amount
	; Input:   DEF  --  Default value if previous charge is to be displayed
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	S:$G(DEF) DIR("B")=DEF
	S DIR(0)="NA^::2^K:X<0!(X>(IBMED-IBCLDOL)) X",DIR("A")="              Fee Amount: ",DIR("?")="^D HFEE^IBECEAU2"
	D ^DIR S IBCHG=Y I 'Y W !!,"Charge not entered - transaction cannot be completed." S IBY=-1
	Q
	;
CATC	; Display that patient is not Category C.
	W !!,"The patient ",$S(IBFR<DT:"was",1:"is")," not Category C on this date.",!
	Q
	;
HUN	; Help for units
	W !!,"Please enter 1, 2, or 3 to denote a 30, 60, or 90 days supply of"
	W !,"medication, or '^' to quit."
	Q
	;
HFR	; Help for Bill From date
	W !!,"Please enter the ",$S(IBXA=4:"patient's outpatient visit date",1:"'Bill From' date for this charge"),", which must follow"
	W !,"10/1/90",$S(IBXA'=4:" (and be prior to today)",1:""),", or '^' to quit."
	Q
	;
HTO	; Help for Bill To date
	W !!,"Please enter the 'Bill To' date for this charge, which may not precede"
	W !,$$DAT1^IBOUTL(IBFR),", or '^' to quit."
	Q
	;
HFEE	; Help for Fee Amount
	W !!,"Please enter the charge for this Fee Service, which may not be greater than"
	W !,"the difference between the Medicare Deductible amount and the "
	W $$INPT^IBECEAU(IBCLDAY)," 90 days",!,"copay billed ($",IBMED-IBCLDOL,"), or '^' to quit."
	Q

IBECEAU3
IBECEAU3	;ALB/CPM - Cancel/Edit/Add... Add New IB Action ; 11-MAR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADD	; Add a new Integrated Billing Action entry.
	;   Input:     DFN  --  Pointer to patient in file #2
	;           IBATYP  --  Pointer to Action Type in file #350.1
	;           IBUNIT  --  Number of units of charge
	;            IBCHG  --  Total charge
	;           IBDESC  --  Charge description
	;           IBSITE  --  Pointer to the facility in file #4
	;            IBFAC  --  Facility number
	;             IBFR  --  Bill From date
	;             IBTO  --  Bill To date
	;             IBSL  --  Softlink  [OPTIONAL]
	;          IBPARNT  --  Pointer to parent entry in #350  [OPTIONAL]
	;           IBEVDA  --  Pointer to parent event in #350  [OPTIONAL], or
	;                   --  "*" to set ibevda=ibn
	;           IBEVDT  --  Event Date  [OPTIONAL]
	;             IBIL  --  Bill Number  [OPTIONAL]
	;           IBCRES  --  Pointer to canc. reason in #350.3  [OPTIONAL]
	;             IBXA  --  IB Action billing group  [OPTIONAL]
	;            IBJOB  --  Option being executed  [OPTIONAL]
	;            IBCVA  --  CHAMPVA Admission date [OPTIONAL]
	;
	;  Output:     IBN  --  Internal number of new entry in file #350
	;
	N DA,DIK,IBASTR,IBND,Y
	D ADD^IBAUTL I Y<1 S IBY=Y G ADDQ
	S:$G(IBEVDA)="*" IBEVDA=IBN
	S IBND=DFN_"^"_IBATYP_"^"_$S($G(IBSL):IBSL,1:"350:"_IBN)_"^1^"_IBUNIT_"^"_IBCHG_"^"_IBDESC_"^"_$S($D(IBPARNT):IBPARNT,1:IBN)_"^"_$G(IBCRES)_"^"_$G(IBIL)_"^^"_IBFAC
	I IBDESC'["RX COPAY" S IBND=IBND_"^"_IBFR_"^"_IBTO_"^"_$G(IBEVDA)_$S($G(IBEVDT):"^"_IBEVDT,$G(IBXA)=1!($G(IBXA)=4)!($G(IBJOB)=5):"^"_IBFR,1:"")
	S $P(^IB(IBN,0),"^",2,17)=IBND
	D NOW^%DTC S $P(^IB(IBN,1),"^")=DUZ,$P(^(1),"^",3,5)=DUZ_"^"_%_$S($G(IBCVA):"^"_IBCVA,1:"")
	S DIK="^IB(",DA=IBN D IX1^DIK
ADDQ	Q
	;
CTBB	; Charge to be billed
	W !!,"Charge to be billed --> $",$J(IBCHG,0,2)
	Q
	;
NODED	; Could not determine the Medicare Deductible amount.
	W !,*7,"The Medicare Deductible Amount for ",$$DAT1^IBOUTL(IBCLDT)," could not be determined."
	W !,"You should determine the cause of this problem before proceeding."
	S IBY=-1
	Q

IBECEAU4
IBECEAU4	;ALB/CPM - Cancel/Edit/Add... Cancel Utilities ; 23-APR-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CANCH(IBN,IBCRES,IBIND,IBCV)	; Cancel last transaction for a specific charge.
	;  Input:    IBN   --  Charge to be cancelled
	;          IBCRES  --  Cancellation reason
	;           IBIND  --  1=>set MT bulletin flags; 0=>don't set flags
	;            IBCV  --  1=>use the CHAMPVA error bulletin
	N IBY,IBHOLDN,IBND,IBPARNT,IBCANC,IBH,IBCANTR,IBXA,IBATYP,IBSEQNO,IBIL,IBUNIT,IBCHG
	S (IBN,IBHOLDN)=$$LAST^IBECEAU($P(^IB(IBN,0),"^",9)),IBY=1
	D CED(IBN) I IBCANTR!(IBY<0) G CANCHQ
	D CANC(IBN,IBCRES,1) I IBY<0 G CANCHQ
	I $G(IBIND) S IBARR(DT,IBHOLDN)="",(IBCANCEL,IBFND)=1
CANCHQ	I IBY<1 D @$S($G(IBCV):"ERRMSG^IBACVA2",1:"^IBAERR1")
	Q
	;
CANC(IBCN,IBCRES,IBINC)	; Cancel a charge, after passing all edits
	; Input:    IBCAN  --  Internal entry # of IB Action to cancel
	;          IBCRES  --  Cancellation reason
	;           IBINC  --  Try to cancel an incomplete charge? [optional]
	N DA,DIK,IBCAN
	S IBCAN=$G(^IB(IBCN,0))
	;
	; - handle incomplete transactions
	I $G(IBINC) S:'$D(IBH) IBH='$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",4) I IBH D UPSTAT(IBCN,1) G CANCQ
	;
	; - handle regular transactions
	S IBATYP=$P($G(^IBE(350.1,+$P(IBCAN,"^",3),0)),"^",6) I IBATYP="" S IBY="-1^IB022" G CANCQ
	S IBSEQNO=$P($G(^IBE(350.1,IBATYP,0)),"^",5) I 'IBSEQNO S IBY="-1^IB023" G CANCQ
	W:$G(IBJOB)=4 !!,"Building the cancellation transaction... "
	D ADD^IBAUTL I Y<1 S IBY=Y G CANCQ
	S $P(IBCAN,"^",3)=IBATYP,$P(IBCAN,"^",5)=1,$P(IBCAN,"^",10)=IBCRES,$P(IBCAN,"^",12)=""
	S:IBXA'=5 IBCAN=$P(IBCAN,"^",1,16)
	S $P(^IB(IBN,0),"^",2,17)=$P(IBCAN,"^",2,17),$P(^(1),"^")=DUZ S DA=IBN,DIK="^IB(" D IX1^DIK
	W:$G(IBJOB)=4 " .. " D PASS
	;
	; - cancel original charge (if it was an updated transaction)
	I $D(^IB(IBCN,0)),$P(^(0),"^",5)'=10 D UPSTAT(IBCN)
CANCQ	Q
	;
CED(IBN)	; Edits required to cancel a charge.
	; Input:   IBN  --   Internal entry # of charge to be cancelled
	S IBND=$G(^IB(IBN,0)) I 'IBND S IBY="-1^IB021" G CEDQ
	S IBPARNT=+$P(IBND,"^",9) I '$D(^IB(IBPARNT,0)) S IBY="-1^IB027" G CEDQ
	I $$LAST^IBECEAU(IBPARNT)'=IBN S IBY="-1^^You can only cancel the last transaction for an original charge." G CEDQ
	S IBCANC=$G(^IBE(350.1,+$P(IBND,"^",3),0))
	S IBH='$P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",4),IBCANTR=$P(IBCANC,"^",5)=2
	S IBXA=$P(IBCANC,"^",11),IBATYP=$P(IBCANC,"^",6)
	I '$D(^IBE(350.1,+IBATYP,0)) S IBY="-1^IB022" G CEDQ
	S IBSEQNO=$P(^IBE(350.1,+IBATYP,0),"^",5) I 'IBSEQNO S IBY="-1^IB023" G CEDQ
	S IBIL=$P(IBND,"^",11),IBUNIT=+$P(IBND,"^",6),IBCHG=+$P(IBND,"^",7),IBFR=$P(IBND,"^",14)
	I IBUNIT<1 S IBY="-1^IB025" G CEDQ
	I 'IBH,'IBCHG S IBY="-1^^There is no charge amount associated with this action." G CEDQ
	I $G(IBJOB)'=4,'IBH,IBIL="" S IBY="-1^IB024"
CEDQ	Q
	;
UPSTAT(IBCN,IB)	; Update the status, cancellation reason of incomplete charges.
	N DIE,DA,DR
	W:$G(IBJOB)=4&$G(IB) !,"Updating the status of the charge to 'cancelled'... "
	S DIE="^IB(",DA=IBCN,DR=".05////10;.1////"_IBCRES
	D ^DIE W:$G(IBJOB)=4&$G(IB) "done."
	Q
	;
PASS	; Pass the action to Accounts Receivable.
	N IBSERV
	S IBNOS=IBN D ^IBR S IBY=Y I Y>0,$G(IBJOB)=4 W "done."
	Q
	;
ERR	; Error Processing.
	Q:IBY>0
	I $P(IBY,"^",2)]"" W !,$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",$P($P(IBY,"^",2),";"),0)),0)),"^",2) Q
	I $P(IBY,"^",3)]"" W !,$P(IBY,"^",3)
	Q
	;
PROC(EVT)	; Okay to proceed with Add, Edit, or Cancel?
	N DIR,DIRUT,DUOUT,DTOUT,X,Y
	W ! S DIR(0)="Y",DIR("A")="Okay to "_EVT_" this charge",DIR("?")="Enter 'Y' or 'YES' to "_EVT_" this charge, or 'N', 'NO', or '^' to quit."
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) W !,"This charge will not be ",$S(EVT="cancel":"cancelled",1:EVT_"ed"),"." S IBY=-1 G PROCQ
	S IBCOMMIT=1
PROCQ	Q

IBECK
IBECK	;ALB/AAS - INTEGRATED BILLING CHECK IF FILER RUNNING ; 8-MAY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	N X,Y,I S IBFLAG="" G:'$D(^IB("APOST")) END
	S IBCNT=0,IBI="" F  S IBI=$O(^IB("APOST",IBI)) Q:'IBI  S IBCNT=IBCNT+1 I IBCNT>11 S IBFLAG=1
	;
NOT	S IBPARM=$G(^IBE(350.9,1,0))
	I '$P(IBPARM,"^",4)&('$P(IBPARM,"^",10)) S IBFLAG=IBFLAG_"2"
LAST	S X=$P(IBPARM,"^",6) D H^%DTC
	I $P(IBPARM,"^",6),+$H'=+%H!(%T+(2200*(+$P(IBPARM,"^",8)))<$P($H,",",2)) S IBFLAG=IBFLAG_"3"
	;
END	K IBCNT,IBI,%T,%H,IBPARM
	Q
	;
1	W !,"The Integrated Billing filer has more than 10 transactions in the queue." Q
2	W !,"The Integrated Billing filer is not running and has transactions to file." Q
3	W !,"The Integrated Billing filer is late.  It hasn't run since " S Y=$P(^IBE(350.9,1,0),"^",6) D D^DIQ W Y Q
	;
MENU	;  -menu entry action
	D EN
	I IBFLAG'="" W !,*7 F I=1,2,3 I IBFLAG[I D @I
	K IBFLAG,IBPARM,Y,I G END

IBECPF
IBECPF	;ALB/RLW - IB FLAG/UNFLAG CONTINUOUS PATIENTS ; 1-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
EN	;
	;***
	;S XRTL=$ZU(0),XRTN="IBECPF-1" D T0^%ZOSV ;start rt clock
	D DT^DICRW S IBDATE=%
	S DIC="^IBE(351.1,",DIC(0)="AELMQZ",DLAYGO=351.1,DIC("A")="Select PATIENT: " D ^DIC K DIC
	G:+Y<0 ENQ
	I $P(Y,"^",3)=1 S DR=".02;.03////"_DUZ_";.04////"_IBDATE
	E  S DR=".01;.02;.05////"_DUZ_";.06////"_IBDATE
	S DIE="^IBE(351.1,",DA=+Y,DIDEL=351.1 D ^DIE K DIE,DA,DR,Y,DIDEL
ENQ	;
	K IBDATE
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBECPF" D T1^%ZOSV ;stop rt clock
	Q

IBECPTE
IBECPTE	;ALB/ARH - ENTER/EDIT CPT BILLING TIME SENS DATA (350.4&350.5) ; 11/5/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN4	;entry point - enter/edit procedure and rate group for amb surg billing (350.4)
	D HOME^%ZIS
CPT	W !! S DIC("A")="Select AMBULATORY SURGERY PROCEDURE: "
	S DIC="^SD(409.71,",DIC(0)="AEQL" D ^DIC K DIC G:Y<0 CPTQ S IBCPT=+Y
	I $P(Y,"^",3) S DIE="^SD(409.71,",DA=IBCPT,DR="[SD-AMB-PROC-EDIT]" D ^DIE K DIE,DR,DIC,Y G:'$D(DA) CPT K DA
	S IBEDT=0 D DISCPT,EFFCPT D:IBEDT DISCPT G CPT
CPTQ	K IBCPT,IBEDT,DA,DTOUT,DUOUT,X,Y
	Q
	;
EN5	;entry point - enter/edit division and wage percentage data for amb surg billing (350.5)
	D HOME^%ZIS
DIV	W !! S DIC("A")="Select MEDICAL CENTER DIVISION: "
	S DIC="^DG(40.8,",DIC(0)="AEQ" D ^DIC K DIC G:Y<0 DIVQ S IBDIV=+Y
	S IBEDT=0 D DISDIV,EFFDIV D:IBEDT DISDIV G DIV
DIVQ	K IBDIV,IBEDT,DA,DTOUT,DUOUT,X,Y
	Q
	;
EFFCPT	;enter/edit time sensitve procedure data
	;DIR was used instead of DIC because of the size of the file and number of entries DIC would search through
	S DIR("?")="Enter the date the new rate or status becomes effective",DIR("??")="^D LISTCPT^IBECPTE"
	S DIR(0)="DO^::AEX",DIR("A")="Select PROCEDURE EFFECTIVE DATE" D ^DIR K DIR G:$D(DIRUT) EFFCPTQ S IBEFF=+Y
	I $D(^IBE(350.4,"AIVDT",IBCPT,-IBEFF)) S Y=$O(^(-IBEFF,"")) G EDITC
	S DIR(0)="Y",DIR("A")="Are you adding a new RATE GROUP entry to this PROCEDURE" D ^DIR K DIR G:'Y EFFCPT
	K DO,DD S DIC="^IBE(350.4,",DIC(0)="",X=IBEFF,DIC("DR")=".02////"_IBCPT D FILE^DICN K DIC G:Y<0 EFFCPTQ
EDITC	S IBEDT=1,DR=".01;.04;I X=0 S Y=0;.03",DA=+Y,DIE="^IBE(350.4,",DIE("NO^")="BACK" D ^DIE K DIE,DIC,DR,DA,Y
	W ! G EFFCPT
EFFCPTQ	K IBEFF,%DT,DR,DA,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
	Q
	;
EFFDIV	;enter/edit time sensitve division data
	S DIR("?")="Enter the date the new percentages or status becomes effective",DIR("??")="^D LISTDIV^IBECPTE"
	S DIR(0)="DO^::AEX",DIR("A")="Select PROCEDURE EFFECTIVE DATE" D ^DIR K DIR G:$D(DIRUT) EFFDIVQ S IBEFF=+Y
	I $D(^IBE(350.5,"AIVDT",IBDIV,-IBEFF)) S Y=$O(^(-IBEFF,""))  G EDITD
	S DIR(0)="Y",DIR("A")="Are you adding a new WAGE PERCENTAGE entry to this DIVISION" D ^DIR K DIR G:'Y EFFDIV
	K DO,DD S DIC="^IBE(350.5,",DIC(0)="",X=IBEFF,DIC("DR")=".02////"_IBDIV D FILE^DICN K DIC G:Y<0 EFFDIV
EDITD	S DA=+Y,DIE="^IBE(350.5,",DR=".01;.04;I X=0 S Y=0;.05;.07",DIE("NO^")="BACK",IBEDT=1 D ^DIE K DIE,DIC,DR,DA,Y
	W ! G EFFDIV
EFFDIVQ	K IBEFF,%DT,DR,DA,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
	Q
	;
DISCPT	;display data on procedure
	S X="IBXCPTR" X ^%ZOSF("TEST") Q:'$T
	W:$D(IOF) @IOF,?24,"Ambulatory Surgery Procedure Billing Profile"
	S D0=IBCPT D ^IBXCPTR K X,DXS,D0
	Q
	;
DISDIV	;display data on division
	S X="IBXDIVD" X ^%ZOSF("TEST") Q:'$T
	W:$D(IOF) @IOF,?24,"Medical Center Division Billing Profile"
	S D0=IBDIV D ^IBXDIVD K X,DXS,D0
	Q
	;
LISTCPT	;provide list of effective dates already defined for CPT
	Q:'$D(^IBE(350.4,"AIVDT",IBCPT))  N Y,IBX,IBY,IBLN
	S IBX="" F  S IBX=$O(^IBE(350.4,"AIVDT",IBCPT,IBX)) Q:IBX=""  D
	. S IBY="" F  S IBY=$O(^IBE(350.4,"AIVDT",IBCPT,IBX,IBY)) Q:IBY=""  D
	.. S IBLN=$G(^IBE(350.4,IBY,0)) Q:IBLN=""  S Y=-IBX X ^DD("DD")
	.. W !,?5,Y,?20,$P($G(^ICPT(+$P(IBLN,"^",2),0)),"^",1),?30,$S($P(IBLN,"^",4):"ACTIVE",1:"INACTIVE"),?43,$P($G(^IBE(350.1,+$P(IBLN,"^",3),0)),"^",1)
	Q
	;
LISTDIV	;provide list of effective dates already defined for division
	Q:'$D(^IBE(350.5,"AIVDT",IBDIV))  N Y,IBX,IBY,IBLN
	S IBX="" F  S IBX=$O(^IBE(350.5,"AIVDT",IBDIV,IBX)) Q:IBX=""  D
	. S IBY="" F  S IBY=$O(^IBE(350.5,"AIVDT",IBDIV,IBX,IBY)) Q:IBY=""  D
	.. S IBLN=$G(^IBE(350.5,IBY,0)) Q:IBLN=""  S Y=-IBX X ^DD("DD")
	.. W !,?4,Y,?20,$E($P($G(^DG(40.8,+$P(IBLN,"^",2),0)),"^",1),1,20),?43,$S($P(IBLN,"^",4):"ACTIVE",1:"INACTIVE"),?52,$J($P(IBLN,"^",5),7),?61,$J($P(IBLN,"^",6),7),?70,$J($P(IBLN,"^",7),7)
	Q

IBECPTT
IBECPTT	;ALB/ARH - TRANSFERS CPT RATE UPDATES TO 350.4 ; 10/22/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;transfer all entrys in 350.41 to 350.4 that are valid
	W !!!,?18,"Transfer HCFA updates to the Permanent BASC File",!!!
	W !!,"This option transfers the HCFA updates from the temporary BASC file to the"
	W !,"permanent BASC file."
	S DIR(0)="Y",DIR("A")="Proceed with transfer" D ^DIR K DIR G:$D(DIRUT)!('Y) END
	W !!,"Beginning transfer, this could take some time.   Please wait...",!
START	W !,"Transferring HCFA updates to permanent BASC file."
	S IBX=0,(IBSD,IBNT,IBE,IBES,IBERR,IBCNT)=0
	F IBI=1:1 S IBX=$O(^IBE(350.41,IBX)) Q:IBX?1A.A  I '$P($G(^IBE(350.41,IBX,0)),"^",7) D SEARCH S IBCNT=IBCNT+1 I '(IBCNT#25) W "."
	W !!,"Transfer complete: ",IBSD," Entries created in 409.71"
	W !,?19,IBE," Entries created in 350.4",!,?19,IBES," Entries in 350.4 ""stuffed"""
	W !!,?19,IBNT," Codes already have entries for given effective date"
	W !,?19,IBERR," Codes unable to transfer"
END	;
	K IBX,IBSD,IBNT,IBE,IBES,IBCNT,IBERR,IBI,IBLN,IBLN1,IBUA,IBEDT,IBOLD,IBNEW,IBERRF,IBCD,DA,DR,DTOUT,DUOUT,DIRUT,DIROUT,X,Y
	Q
	;
SEARCH	;update/create new billing code entries if conditions meet
	;  does not transfer to 350.4 if: - code inactive (in 81)
	;                                 - date effective already defined for code
	;                                 - deactivating a code not in billing
	;                                 - deactivating a code already inactive
	;                                 - stated old group not match current group
	;                                 - entry does not cause changes in rate or status
	S IBLN=^IBE(350.41,IBX,0),IBEDT=$E($P(IBLN,"^",2),1,7),IBNEW=$P(IBLN,"^",4)
	S IBOLD=$P(IBLN,"^",3),IBCD=+IBLN,IBUA="@"
	I $P(^ICPT(IBCD,0),"^",4) S IBERRF="CODE NOT ACTIVE IN CPT FILE (81)" G ERROR
	I $D(^IBE(350.4,"AIVDT",IBCD,-IBEDT)) S IBNT=IBNT+1,IBERRF="DATE EFFECTIVE ALREADY DEFINED FOR CODE" G ERROR
	S IBLN1=$G(^IBE(350.4,+$O(^(+$O(^IBE(350.4,"AIVDT",IBCD,-(IBEDT+1))),0)),0))
	S IBUA=$S('IBLN1:1,'$P(IBLN1,"^",4):2,'IBNEW:4,IBNEW'=IBOLD&(IBNEW'=$P(IBLN1,"^",3)):3,1:"@")
	I IBOLD,$P(IBLN1,"^",3),IBOLD'=$P(IBLN1,"^",3) S IBERRF="STATED OLD GROUP DOES NOT MATCH CURRENT GROUP" G ERROR
	I 'IBNEW,'IBLN1 S IBERRF="DEACTIVATING A CODE NOT IN BILLING" G ERROR
	I 'IBNEW,'$P(IBLN1,"^",4) S IBERRF="DEACTIVATING A CODE ALREADY INACTIVE" G ERROR
	I IBUA="@" S IBERRF="NO VALID UPDATE ACTION FOUND, NO CHANGE IN RATE/STATUS" G ERROR
	S IBERRF="ERROR WHILE TRYING TO STORE THE DATA"
CREATE	;create entries in 350.4 and 409.71
	S DLAYGO=409.71,X="`"_IBCD,DIC="^SD(409.71,",DIC(0)="XL" D ^DIC K DIC G:Y<0 ERROR I $P(Y,"^",3) S IBSD=IBSD+1
	K DD,DO S DLAYGO=350.4,X=IBEDT,DIC="^IBE(350.4,",DIC(0)="L" D FILE^DICN K DIC,DLAYGO G:Y<0 ERROR S IBE=IBE+1
STUFF	;stuff data into newly created entry in 350.4
	S DR=".02////"_IBCD_";.03////"_IBNEW_";.04////"_$S(IBNEW:1,1:0)
	S DIE="^IBE(350.4,",DA=+Y D ^DIE K DIE,DIC,DR,DA,Y S IBES=IBES+1
	S DR=".06///"_IBUA_";.07////1;.08///@",DIE="^IBE(350.41,",DA=IBX D ^DIE K DIE,DIC,DR,DA,Y,X
	Q
	;
ERROR	;entry can not be transfered for some reason, flag piece 7 in 350.41
	S IBERR=IBERR+1
	S DR=".06///"_IBUA_";.07////0;.08////"_IBERRF,DIE="^IBE(350.41,",DA=IBX D ^DIE K DIE,DIC,DR,DA,Y,X
	Q

IBECPTZ
IBECPTZ	;ALB/ARH - CPT TRANSFER UTILITY, KILLS FROM 350.41,LIST ERRORS; 10/22/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;external entry point
CLEAN	;removes all entries from file 350.41 - to be used during a
	;preinit in which new updates (ie 350.41) are being released
	N X
	S X=$P($G(^IBE(350.41,0)),"^",1,2) I X'="" K ^IBE(350.41) S ^IBE(350.41,0)=X
	Q
	;
	;external entry point
PURGE	;deletes entries in 350.41 that have been transfered to 350.4
	W !!,?20,"Delete Transferred Codes from the Temporary BASC File",!!
	W !!!,"This option will only delete BASC codes in the temporary file that have"
	W !,"already been transferred to the permanent BASC file."
	S DIR(0)="Y",DIR("A")="Do you want to delete transferred codes now" D ^DIR K DIR
	G:$D(DIRUT)!('Y) KEND
	W !!,"Processing, this could take some time.   Please wait...",!!
	;
	S (IBCNT,IBX)=0
	F IBI=1:1 S IBX=$O(^IBE(350.41,IBX)) Q:'IBX  S IBLN=$G(^IBE(350.41,IBX,0)) I $P(IBLN,"^",7) S DIK="^IBE(350.41,",DA=IBX D ^DIK K DIK S IBCNT=IBCNT+1
	W !!,"Done.  ",IBCNT," entries deleted from 350.41."
KEND	;
	K IBX,IBI,IBCNT,DA,IBLN,DIC,DUOUT,DTOUT,DIRUT,DIROUT,Y,X
	Q
	;
	;external entry point
LIST	;lists all update errors in 350.41,  ie. status=0 only
	D HOME^%ZIS
	W @IOF,!,?15,"Billing Ambulatory Surgery Code Update Error List",!!!
	S DIC="^IBE(350.41,",FR="0,?,?",TO="0,?,?"
	S BY="@.07,.01,.02",FLDS="[IB CPT UPDATE ERROR]" D EN1^DIP
	K DIC,FR,TO,BY,FLDS,X,Y
	Q

IBEF
IBEF	;ALB/AAS - BACKGROUND FILER FOR INTEGRATED BILLING ; 12-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;  -main background filer routine
	;  -    for pharmacy copay call ^ibefcop to process
	;
DQ	;  - entry point for ib background filer
	;***
	;I $D(ZTQUEUED) S XRTL=$ZU(0),XRTN="IBEF-2" D T0^%ZOSV ;start rt clock
	;
	; -- lock symbolic reference (not real), if already locked, quit.
	L +^IB("IBEF"):5 I '$T G END
	I $S('$D(^IBE(350.9,1,0)):1,'$P(^(0),"^",3):1,$P(^(0),"^",4):1,1:0) G END
	I $D(^%ZOSF("PRIORITY")) S X=10 X ^%ZOSF("PRIORITY")
	I $D(^%ZOSF("TRAP")) S X="^%ET",@^("TRAP")
	;
%	;  -set start time, delete stop time, queued = no
	S DIE="^IBE(350.9,",DA=1,DR=".04///NOW;.05///@;.1////0" D ^DIE K DIC,DIE,DR,DA
	;
	;  - retention time = 2000 x hang time
	;  - if data is found ibht is reset to 1
	S IBHANG=$S($P(^IBE(350.9,1,0),"^",8):$P(^(0),"^",8),1:2)
	F IBHT=1:1:2000 D:$D(^IB("APOST")) ^IBEFCOP H IBHANG I $D(^IBE(350.9,1,0)),'$P(^(0),"^",3) Q
	G END
	Q
	;
END	;
	;  - delete start time, set stop time
	S DIE="^IBE(350.9,",DA=1,DR=".04///@;.05///NOW" D ^DIE K DIC,DIE,DR,DA
	L -^IB("IBEF")
	;***
	;I $D(ZTQUEUED),$D(XRT0) S:'$D(XRTN) XRTN="IBEF" D T1^%ZOSV ;stop rt clock
	Q
	;
ZTSK	;  - que background filer if not running
	N ZTSK,Y
	;  -set queued flag to prevent multiple queued filers
	L +^IBE(350.9,0):2 Q:'$T  ;somebody else is queueing off a filer at the  same time
	S DIE="^IBE(350.9,",DA=1,DR=".1////1" D ^DIE K DIE,DA,DR S Y=1
	;
	S ZTRTN="^IBEF",ZTDTH=$H,ZTIO="",ZTDESC="Integrated Billing background Delivery to A/R"
	K ZTCPU I $D(^IBE(350.9,1,0)) S X=$P(^(0),"^",7) I X'="" S ZTCPU=$P(X,",",2)
	D ^%ZTLOAD
	S Y=$S($D(ZTSK):1,1:"-1^IB019")
	L -^IBE(350.9,0)
	;
	Q

IBEFCOP
IBEFCOP	;ALB/AAS - INTEGRATED BILLING BACKGROUND FILER FOR RX COPAY ; 26-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
COPAY	;  - find pharmacy copay entries to process
	;
	S IBHT=1
	S IBNOW="" F  S IBNOW=$O(^IB("APOST",IBNOW)) Q:'IBNOW  L +^IB("APOST",IBNOW):0 I $T S DFN=$O(^IB("APOST",IBNOW,"")) Q:'DFN  D C1 L -^IB("APOST",IBNOW)
	Q
	;
C1	S IBSEQNO=$O(^IB("APOST",IBNOW,DFN,"")) Q:'IBSEQNO  S IBDUZ=$O(^IB("APOST",IBNOW,DFN,IBSEQNO,"")) Q:'IBDUZ  D C2
	Q
	;
C2	D CHKDT S IBNOS=^IB("APOST",IBNOW,DFN,IBSEQNO,IBDUZ) K ^IB("APOST",IBNOW,DFN,IBSEQNO,IBDUZ) D ^IBR
	D LAST
	Q
	;
LAST	S DIE="^IBE(350.9,",DA=1,DR=".06///NOW" D ^DIE K DIE,DA,DR
	Q
	;
CHKDT	; -- update dt if not the same
	N X,%
	D NOW^%DTC
	S:X'=DT DT=X
	Q

IBEFUNC
IBEFUNC	;ALB/RLW - EXTRINSIC FUNCTION ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ETXT(X)	; -- output error message text from 350.8
	; -- input error message code
	N Y S Y=X
	I X="" G ETXTQ
	S Y=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),"^",2)
ETXTQ	Q Y
	;
IGN(X,Y)	; ignore means test? for appointment type on dates
	; -- input x = mas appointment type
	;          y = date of appointment
	;    output  = true if this appointment type should not be billed for
	;              Cat C Means test billing (352.1,.04) for given date
	;
	I '$G(X)!('$G(Y)) Q 1
	Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),"^",4)
	;
DSP(X,Y)	; display on input screen?
	; --    input X = mas appointment type (P409.1)
	;             Y = date
	;       output  = true if appointment type X (352.1,.02) should be displayed as a
	;                 potential billable visit (352.1,.06) on the given date Y (352.1,.03)
	;
	I '$G(X)!('$G(Y)) Q 0
	Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),"^",6)
	;
RPT(X,Y)	; print on report?
	; -- input X = mas appointment type (P409.1)
	;          Y = date
	;    output  = true if appointment type X (352.1,.02) should be printed on 'Vets w/ Ins and Opt
	;               Visits' report (352.1,.05) on the given date Y (352.1,.06)
	;
	I '$G(X)!('$G(Y)) Q 0
	Q +$P($G(^IBE(352.1,+$O(^(+$O(^IBE(352.1,"AIVDT",+X,-(Y+.1))),0)),0)),"^",5)
	;
NBDIS(X,Y)	; Is this disposition non-billable?
	; -- input X = disposition (P37)
	;          Y = date of appointment
	;    output  = true (1) if this disposition should be ignored for
	;              Means test billing (352.2,.03) for the given date
	;
	I '$G(X)!('$G(Y)) Q 0
	Q +$P($G(^IBE(352.2,+$O(^(+$O(^IBE(352.2,"AIVDT",+X,-(Y+.1))),0)),0)),"^",3)
	;
NBCSC(X,Y)	; Is this clinic stop code non-billable?
	; -- input X = clinic stop code (P40.7)
	;          Y = date of appointment
	;    output  = true (1) if this clinic stop code should be ignored for
	;              Means test billing (352.3,.03) for the given date
	;
	I '$G(X)!('$G(Y)) Q 0
	Q +$P($G(^IBE(352.3,+$O(^(+$O(^IBE(352.3,"AIVDT",+X,-(Y+.1))),0)),0)),"^",3)
	;
NBCL(X,Y)	; Is this clinic non-billable?
	; -- input X = clinic (P44)
	;          Y = date of appointment
	;    output  = true (1) if this clinic should be ignored for
	;              Means test billing (352.4,.03) for the given date
	;
	I '$G(X)!('$G(Y)) Q 0
	Q +$P($G(^IBE(352.4,+$O(^(+$O(^IBE(352.4,"AIVDT",+X,-(Y+.1))),0)),0)),"^",3)
	;
PT(DFN)	;returns (patient name^long patient id^short patient id) or null if not found
	N X S X="" I $D(DFN) S X=$G(^DPT(+DFN,0)) I X'="" S X=$P(X,"^",1)_"^"_$P($G(^DPT(DFN,.36)),"^",3,4)
	Q X
	;
EXSET(X,D0,D1)	;returns external value of a set in file D0, field D1
	N Y,Z S Y="" I $G(X)'="",+$G(D0),+$G(D1) S Z=$G(^DD(+D0,+D1,0)) I $P(Z,U,2)["S" S X=X_":",Y=$P($P(Z,X,2),";",1)
	; *****  S Y=X,C=$P(^DD(+D0,+D1,0),"^",2) D Y^DIQ K C  ******
	Q Y
	;
BABCSC(DFN,IBDT)	; -- is there any billable stop codes in the encounter file for patient
	;  -- Input  dfn = patient,
	;           ibdt = date
	;     output     = 1 if any billable stop on date OR 0 if none
	;
	N IBX,IBOE,IBOEDATA,IBY S IBX=0
	I '$G(DFN)!('$G(IBDT)) G BABQ
	S IBY=IBDT\1-.00001 F  S IBY=$O(^SCE("ADFN",DFN,IBY)) Q:'IBY!(IBY>(IBDT+.24))  D  Q:IBX
	.S IBOE=$O(^SCE("ADFN",DFN,IBY,0))
	.Q:'IBOE
	.S IBOEDATA=$G(^SCE(IBOE,0))
	.I $P(IBOEDATA,"^",3),$P(IBOEDATA,"^",12)=2,'$$NBCSC($P(IBOEDATA,"^",3),IBY) S IBX=1
	.Q
BABQ	Q IBX

IBEFUNC1
IBEFUNC1	;ALB/ARH - CPT BILLING EXTRINSIC FUNCTIONS ; 11/27/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;created front-ends for extrinsic functions for use until all versions of file man can use them
FCC	;
	S IBCHGX=$$CPTCHG($S('$D(IBCDX):"",1:IBCDX),$S('$D(IBDIVX):"",1:IBDIVX),$S('$D(IBDTX):"",1:IBDTX))
	Q
	;
CPTCHG(CODE,DIV,DATE)	;ambulatory procedure billing charge on a date
	;assumes current date if none passed in (to disallow guessing on division pass in +DIV)
	;assumes first active division if (DIV=""!'$D(DIV)) passed in
	;returns - the charge if code is valid and active in Billing on DATE
	;        - "" if unable to calc charge or there was none
	;              division or rate group inactive on date or not defined in file
	N X,%,%H,%I,Y
	S Y=-1 G:'$D(CODE) ENDCHG
	S:'$D(DATE) DATE=DT S DATE=$E(DATE,1,7) I DATE'?7N S DATE=DT
	S:'$D(DIV) DIV="" I DIV="" S DIV=$$MCDIV(DIV,DATE)
	I +$$CPTBSTAT(CODE,DATE) S X=DATE_"^"_DIV_"^"_+CODE D RATE^IBAUTL1
ENDCHG	Q $S(Y<0:"",1:Y)
	;
FCBS	;
	S IBSTX=$$CPTBSTAT($S('$D(IBCDX):"",1:IBCDX),$S('$D(IBDTX):"",1:IBDTX))
	Q
	;
CPTBSTAT(CODE,DATE)	;ambulatory procedure billing status on a date
	;assumes current date if none passed in
	;returns - ""          if CODE had never been a billing code on/before DATE given or DATE before BASC start date
	;        - 0^INACTIVE  if CODE billing inactive on DATE given or rate group inactive on DATE
	;        - 1^ACTIVE    if CODE billing active on DATE given
	N LN,ST,%,%H,%I,X
	S ST="" I '$D(CODE) G ENDST
	S:'$D(DATE) DATE=DT S DATE=$E(DATE,1,7) I DATE'?7N S DATE=DT
	I $$STDATE^IBCU63>DATE G ENDST
	I $D(^IBE(350.4,+$O(^(+$O(^IBE(350.4,"AIVDT",+CODE,-(DATE+1))),0)),0)) S LN=^(0),ST=+$P(LN,"^",4)
	I ST,$P($G(^IBE(350.2,+$P(LN,"^",3),0)),"^",2)>DATE S ST=""
	S ST=ST_$S(ST'="":"^"_$P($P($P(^DD(350.4,.04,0),"^",3),ST_":",2),";",1),1:"")
ENDST	Q ST
	;
FCR	;
	S IBRGX=$$CPTRG($S('$D(IBCDX):"",1:IBCDX),$S('$D(IBDTX):"",1:IBDTX))
	Q
	;
CPTRG(CPT,DATE)	;find the rate group for the CPT on the given date
	;assumes current date if none passed in
	;returns - a rate group name
	;        - "" if no rate group listed for date, or CPT or DATE is ""
	N RATE,%,%H,%I,X
	G:'$D(CPT) ENDRG
	S:'$D(DATE) DATE=DT S DATE=$E(DATE,1,7) I DATE'?7N S DATE=DT
	I $D(^IBE(350.4,+$O(^(+$O(^IBE(350.4,"AIVDT",+CPT,-(DATE+1))),0)),0)) S RATE=$P($P($G(^IBE(350.1,+$P(^(0),"^",3),0)),"^",1)," ",2,999)
ENDRG	Q $S($D(RATE):RATE,1:"")
	;
FMCD	;
	S IBDIVX=$$MCDIV($S('$D(IBDIVX):"",1:IBDIVX),$S('$D(IBDTX):"",1:IBDTX))
	Q
	;
MCDIV(DIV,DATE)	;find the medical center division
	; if DATE is not defined then assumes current date
	;returns - DIV passed in, if its status is active for date given
	;        - first active division found, if DIV was inactive or ""
	;        - if all divisions are inactive for the given date, returns ""
	N I,NDIV,INACT,%,%H,%I,X S DIV=$G(DIV)
	;I '$D(DIV) S DIV="" G ENDIV
	S:'$D(DATE) DATE=DT S DATE=$E(DATE,1,7) I DATE'?7N S DATE=DT
	S NDIV=+$O(^(+$O(^IBE(350.5,"AIVDT",+DIV,-(DATE+1))),0))
	I '$P($G(^IBE(350.5,NDIV,0)),"^",4) S DIV="" F I=1:1 S DIV=$O(^IBE(350.5,"AIVDT",DIV)) Q:DIV=""!('$D(INACT(+DIV))&($P($G(^IBE(350.5,+$O(^(+$O(^IBE(350.5,"AIVDT",+DIV,-(DATE+1))),0)),0)),"^",4)))  S INACT(DIV)=""
ENDIV	Q DIV
	;
RC(D0,D1,DATE)	;find BASC charge for particular revenue code entry (399,42)
	;input:   D0 = bill ifn,   D1 = revenue code sub-file IFN
	;         if DATE not passed then assums STATEMENT FROM date of bill
	;returns: dollar amount if rev code has an active BASC CPT, otherwise ""
	N X,Y,DA S X="",DATE=$P($G(DATE),".") I DATE'?7N S DATE=+$G(^DGCR(399,D0,"U"))
	S Y=$G(^DGCR(399,D0,"RC",D1,0)) I +$P(Y,U,6),+$P(Y,U,7) S X=+$$CPTCHG^IBEFUNC1(+$P(Y,U,6),+$P(Y,U,7),DATE)
	Q X
	;
CP(D0,D1)	;find BASC charge for particular procedure entry (399,304)
	;input:    D0 = bill IFN,   D1 = procedure code sub-file IFN
	;returns:  dollar amount if CPT is BASC active, otherwise ""
	N X,Y,DA S X="",Y=$G(^DGCR(399,D0,"CP",D1,0)) I $P(Y,U,1)[";ICPT(",+$P(Y,U,2),+$P(Y,U,6) S X=$$CPTCHG^IBEFUNC1(+Y,+$P(Y,U,6),+$P(Y,U,2))
	Q X

IBEFUNC2
IBEFUNC2	;ALB/ARH - CPT BILLING EXTRINSIC FUNCTIONS II ; 11/27/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CPTSTAT(CPT,DATE)	;determine the overall status for a CPT for given date,  assumes today if no date given
	;if DATE is not today, assumes that if active in either 409.71 or 350.4 then also active in 81 for that DATE
	;(ICPT is not a date sensitive file, so will only check (81) if want todays status), returns:
	; 1  - if DATE=DT and CPT currently only active in ICPT file (81) (not active in 409.71 or 350.4)
	; 2A - if CPT is Nationally Active only in SD(409.71) and not BASC for DATE
	; 2B - if CPT is Locally Active only in SD(409.71) and not BASC for DATE
	; 2C - if CPT is Nationally and Locally Active in SD(409.71) and not BASC for DATE
	; 3  - if CPT is Billing Active (BASC) in IBE(350.4) and not active in (409.71) for DATE
	; 4A - if CPT is Nationally Active in SD(409.71) and Billing Active in IBE(350.4) for DATE
	; 4B - if CPT is Locally Active only in SD(409.71) and Billing Active in IBE(350.4) for DATE
	; 4C - if CPT is Nationally and Locally Active in SD(409.71) and Billing Active in IBE(350.4) for DATE
	; 0  - otherwise
	N X,X1,Y,POST
	S:'$D(CPT) CPT=0 S:'$D(DATE) DATE=DT S:'DATE DATE=DT
	S Y=0,POST="" G:'$D(^ICPT(CPT,0)) CEND
	I $E(DATE,1,7)=DT G:$P($G(^ICPT(CPT,0)),"^",4) CEND S Y=1
	S X=CPT,X1=DATE D STATUS^SDAMBAE4 I X'["INACTIVE"&(X'="") D
	. S Y=2,POST="A" I X["LOCAL" S POST="B" I X["NATIONAL" S POST="C"
	I $$CPTBSTAT^IBEFUNC1(CPT,DATE) S Y=3 I POST'="" S Y=Y+1
CEND	Q Y_POST
	;
TDG(SSN)	;reformat SSN into terminal digit order
	; returns either 0 or ssn in terminal digit order
	N X,Y,I S Y="" F I=1:1 S X=$E(SSN,I) Q:X=""  I X?1N S Y=Y_X
	S Y=$S(Y'?9N:0,1:$E(Y,8,9)_$E(Y,6,7)_$E(Y,4,5)_$E(Y,1,3))
ENDP	Q Y
	;
FFMT	;
	S IBLNGX=$$FORMAT($S('$D(IBGRPX):"",1:IBGRPX),$S('$D(IBCPX):"",1:IBCPX)) Q
	;
FORMAT(GRP,CP)	;calculate spacing format for clinic CPT list
	;input GRP - the ifn of the GROUP to be calculated or ""
	; or   CP  - the ifn of the entry in 350.71 to return format or ""
	;returns - "" if GRP not defined in ^IBE(350.7, or GRP of CP not found
	;        - margin width & intercolumn width ^ header width (same for both groups and catigories)
	;          ^ procedure name width 
	;if # of columns not defined for group, assumes 2
	;if display charge not defined for group, assumes negative
	;assumes that charge and code widths are not variable
	N X,DCHG,CD,IC,PN,H,COL,M,CHK
	S:'$D(GRP) GRP="" S:'$D(CP) CP="" I 'GRP&'CP S X="" G ENDFMT
	S DCHG=10,CD=7,CHK=7,IC=3,M=132
	S:'+GRP GRP=$G(^IBE(350.71,+CP,0)),GRP=$S($P(GRP,"^",4):$P(GRP,"^",4),1:$P($G(^IBE(350.71,+$P(GRP,"^",5),0)),"^",4))
	S X=$G(^IBE(350.7,+GRP,0)),COL=$P(X,"^",3) S:COL="" COL=2
	I X'="" S DCHG=$S($P(X,"^",2):DCHG,1:0),DCHG=DCHG*COL,CD=CD*COL,CHK=CHK*COL
	I X'="" S H=(M-(2*COL*IC)),PN=(H-DCHG-CD-CHK)\COL,H=H\COL
ENDFMT	Q $S(X="":X,1:IC_"^"_H_"^"_PN)
	;
FPO	;
	S X=$$PO(DA,X) Q
	;
PO(DA,X)	;check that the print order entered has not already been used for the group/sub-header
	;used to ensure unique print orders within groups and sub-headers
	; input:  DA - the IFN of the entry being added/edited may be a subheader or procedure
	;         X  - the print order to check
	;returns: "" - if bad input or print order already defined
	;         X  - input value of X if not previously defined for group/sub-header
	I '$D(DA)!('$D(^IBE(350.71,+DA,0)))!('$D(X))!('X) S X="" G ENDPO
	N Y S Y=^IBE(350.71,+DA,0)
	I $P(Y,"^",3)="S",$D(^IBE(350.71,"AG",+$P(Y,"^",4),X)) S X=""
	I $P(Y,"^",3)="P",$D(^IBE(350.71,"AS",+$P(Y,"^",5),X)) S X=""
ENDPO	Q X

IBEFUTL
IBEFUTL	;ALB/AAS - INTEGRATED BILLING - FILER UTILITIES ; 26-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
START	;  -turn IB filer on, task manually
	;***
	;S XRTL=$ZU(0),XRTN="START^IBEFUTL-1" D T0^%ZOSV ;start rt clock
	;
	W !!,"This option will start the IB Background Filer running.  If one filer"
	W !,"is currently running a second filer will be started.  Manually starting"
	W !,"the filer with this option is not ordinarily necessary, as it will start"
	W !,"itself when needed.  However, if the Filer job should be killed or"
	W !,"your system goes down with the filer running, you may need to use this"
	W !,"option."
	;
	I '$D(^IBE(350.9,1,0)) W !!,"You must enter/edit site parameters first" G STARTQ
	I $P(^IBE(350.9,1,0),"^",4)]"" W !!,*7,"<<<<WARNING!!!  ","Filer appears to have been started on " S Y=$P(^(0),"^",4) D DT^DIQ W ">>>>"
	;
	W !! S DIR("A")="Are you sure",DIR("B")="NO",DIR(0)="Y" D ^DIR K DIR I 'Y W !!,"Nothing queued!" G STARTQ
	;
S1	N Y S DIE="^IBE(350.9,",DA=1,DR=".03////1;.04///@" D ^DIE K DIE,DA,DR
	D ZTSK^IBEF
STARTQ	K %H,D,DIC,X,Y,ZTSK
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="START^IBEFUTL" D T1^%ZOSV ;stop rt clock
	Q
	;
STOP	;  -stop IB filer
	;***
	;S XRTL=$ZU(0),XRTN="STOP^IBEFUTL-1" D T0^%ZOSV ;start rt clock
	;
	W !,"This option will edit the IB site parameter file and allow for the"
	W !,"graceful shutdown of the IB Background filer.  Use of this option"
	W !,"will cause the IB Engine to file in the foreground until the site"
	W !,"parameter FILE IN BACKGROUND is edited to yes."
	W !!,"After using this option the filer may attempt to complete filing"
	W !,"posted transactions prior to stopping.  This option should be used"
	W !,"prior to stopping taskmanager when doing an orderly system shutdown."
	W !!,"REMEMBER: If you use this option, you must edit the site parameter"
	W !,"FILE IN BACKGROUND to yes to allow the filer to restart, or use the"
	W !,"Start IB filer option."
	;
	W !! S DIR("A")="Are you sure",DIR(0)="Y",DIR("B")="NO" D ^DIR K DIR I 'Y W !!,"Nothing stopped!" G STOPQ
	S DIE="^IBE(350.9,",DA=1,DR=".03////0" D ^DIE K DA,DIE,DR,DIC
	W !,"IB Background Filing stopped"
	;
STOPQ	K %H,D,X
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="STOP^IBEFUTL" D T1^%ZOSV ;stop rt clock
	Q
	;
EDIT	;  -edit IB site parameters
	;***
	;S XRTL=$ZU(0),XRTN="EDIT^IBEFUTL-1" D T0^%ZOSV ;start rt clock
	;
	I '$D(^IBE(350.9,1,0)) K DD,DO S DIC="^IBE(350.9,",DIC(0)="L",(X,DINUM)=1 D FILE^DICN K DIC,DD,DO W !!,*7,"Creating Site Parameter Entry!  You may now Edit"
	;
	I '$D(^IBE(350.9,1,0)) W !!,*7,"<<<WARNING:  There appears to be a problem in the parameter file.>>>" G EDITQ
	;
	L +^IBE(350.9,1,0):0 I '$T W !,"Site Parameteres being edited by another user!" G EDITQ
	;
	S DA=1,DR="[IB EDIT SITE PARAM]",DIE="^IBE(350.9," D ^DIE
	L -^IBE(350.9,1,0)
	;
EDITQ	K %H,DA,DR,DIE,DIC,X,Y
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EDIT^IBEFUTL" D T1^%ZOSV ;stop rt clock
	Q
	;
CLEAR	;  - clear the start date and tasked flags from file 350.9
	;***
	;S XRTL=$ZU(0),XRTN="CLEAR^IBEFUTL-1" D T0^%ZOSV ;start rt clock
	;
	S DA=1,DIE="^IBE(350.9,",DR="[IB EDIT CLEAR]" D ^DIE K DA,DIE,DR,DIC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="CLEAR^IBEFUTL" D T1^%ZOSV ;stop rt clock
	Q

IBEFUTL1
IBEFUTL1	;ALB/MJK/AAS - Re-Compile Templates/x-refs ; 1/31/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; ******* DO NOT MAP THIS ROUTINE *******
	Q
	;
EN	; Entry point to re-compile templates
	; input: IBKIND = OUTPUT or INPUT
	;
	K IBLINE S U="^",$P(IBLINE,"=",81)="",IBMAX=^DD("ROU")
	G ENQ:'$D(IBKIND),ENQ:"^OUTPUT^INPUT^"'[(U_IBKIND_U)
	I IBKIND="OUTPUT" S IBFILE="^DIPT",IBROU="EN^DIPZ"
	I IBKIND="INPUT" S IBFILE="^DIE",IBROU="EN^DIEZ"
	W !,IBLINE,!?20,"Recompilation of '",IBKIND,"' Templates",!,IBLINE
	;
	S IBX="IAzzz" F IBI=1:1 S IBX=$O(@IBFILE@("B",IBX)) Q:IBX=""!($E(IBX,1,2)'="IB")  S Y=+$O(^(IBX,0)) I $D(@IBFILE@(Y,"ROUOLD")),^("ROUOLD")]"",$D(^(0)) S (IBEMP,Y)=Y,X=$P(^("ROUOLD"),"^"),IB0=^(0) D COMP
	;
ENQ	K IBROU,IB0,IBX,IBI,IBMAX,IBEMP,IBFILE,IBI,IBLINE Q
	;
COMP	; re-compile
	;
	;
	S DMAX=IBMAX D @IBROU W !!,IBLINE
COMPQ	Q
	;
ALL	; compile templates and x-refs
	S:'$D(DTIME) DTIME=300 S U="^"
	S DIR(0)="Y",DIR("A")="Re-compile all 'IB' templates and cross references"
	S DIR("?",1)="Yes to re-compile",DIR("?",2)="No  to stop recompilation process",DIR("?")=" "
	D ^DIR K DIR G ALLQ:'Y
	D DIEZ W !!
	D DIPZ W !!
	D DIKZ
	W !!,"...Done.",!!,"NOTE: Recompilation should be performed on ALL systems."
ALLQ	K A,C,L,O,X1,DQ,DIE,DMAX,DIEZ,DIEZDUP,DK,DR Q
	;
DIEZ	; -- re-compile all IB 'edit' templates
	S IBKIND="INPUT" D EN K IBKIND Q
	;
DIPZ	; -- re-compile all IB 'print' templates
	S IBKIND="OUTPUT" D EN K IBKIND Q
	;
DIKZ	; -- compile x-refs
	W !!,">>> Compiling cross references for  BILL/CLAIMS, INTEGRATED BILLING, and ENCOUNTER FORM files:"
	F IBN=399,350,357,357.1,357.2,357.3,357.4,357.5 S N=IBN W ! I $D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") W !,"** File "_IBN_" **",! D EN^DIKZ
	K IBN,N,DMAX
	Q

IBEMTBC
IBEMTBC	;ALB/RLW - IB MEANS TEST BILLING CLOCK FILE UPDATE ; 15-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Entry point for Clock Maintenance
	;
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBEMTBC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBEMTBC-1" D T0^%ZOSV ;start rt clock
	;
	D HOME^%ZIS,NOW^%DTC S IBDT=% K % I '$D(DT) D DT^DICRW
	S DIR(0)="PO^2:AEMQZ" D ^DIR K DIR S DFN=+Y I $D(DIRUT) G ENQ
	I $$BILST^DGMTUB(DFN)=0 S J=5 D ERR G EN
	I $D(^IBE(351,"ACT",DFN)) S IBSELECT="ADJUST",IBDR="[IB BILLING CYCLE ADJUST]" D ADJUST,CLEANUP G ENQ
	S IBSELECT="ADD",IBDR="[IB BILLING CYCLE ADD]" D ADDNEW,CLEANUP
	;
ENQ	I '$D(DIRUT) W ! G EN
	K DIC,IBSELECT,DFN,IBDR,IBEL,DFN,IBIEN,IBDATA,J,DIRUT,IBFAC,IBSITE,IBDT
	;
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBEMTBC" D T1^%ZOSV ;stop rt clock
	;
	Q
	;
ADJUST	; - show current active clock; inactivate and add a new one
	W @IOF
	S IBIEN=$O(^IBE(351,"ACT",DFN,0))
	S DIC="^IBE(351,",DA=IBIEN W !! D EN^DIQ K DIC,DA
	S DIR(0)="Y",DIR("A")="Do you want to update" D ^DIR K DIR Q:+Y<1
	;
	; - save current clock, change to cancelled and delete "ACT" xref
	K ^IBE(351,"ACT",DFN) L +(^IBE(351,IBIEN))
	S IBDATA=$P(^IBE(351,IBIEN,0),"^",2,10),$P(^IBE(351,IBIEN,0),"^",4)=3,$P(^(1),"^",3,4)=DUZ_"^"_IBDT
	L -(^IBE(351,IBIEN))
	;
ADDNEW	; - add a new clock and allow updating
	I IBSELECT="ADD" D  Q:'Y  W !
	.W !!,"This patient does not have an active billing clock!"
	.S DIR(0)="Y",DIR("A")="Is it okay to add a new billing clock for this patient"
	.D ^DIR K DIR,DIRUT,DUOUT,DTOUT
	;
	D SITE^IBAUTL I 'IBSITE S J=1 G ERR
	S I=$P($S($D(^IBE(351,0)):^(0),1:"^^-1"),"^",3)+1 I 'I S J=3 G ERR
	K DD,DO,DIC,DR S DIC="^IBE(351,",DIC(0)="L",DLAYGO=351,DIC("DR")=".02////"_DFN_";11////"_DUZ_";12////"_IBDT
	F I=I:1 I I>0,'$D(^IBE(351,I)) L +^IBE(351,I):2 I $T,'$D(^IBE(351,I)) S DINUM=I,X=+IBSITE_I D FILE^DICN K DIC,DR S IBCL=+Y Q:+Y>0
	I IBSELECT'="ADD" S $P(^IBE(351,IBCL,0),"^",2,10)=IBDATA,DIK="^IBE(351,",DA=IBCL D IX1^DIK K DIK
	S DIE="^IBE(351,",DA=IBCL,DR=IBDR D ^DIE K DA,DIE,DR
	L -^IBE(351,IBCL)
	;
	; - if the updated clock was cancelled, with no other changes made,
	; - move the update reason over to the old clock and cancel the new one.
	I IBSELECT'="ADD" D
	.I $L(^IBE(351,+$G(IBIEN),0),"^")=9 S $P(^IBE(351,+$G(IBIEN),0),"^",10)=""
	.I $L(^IBE(351,IBCL,0),"^")=9 S $P(^IBE(351,IBCL,0),"^",10)=""
	.Q:$P(^IBE(351,+$G(IBIEN),0),"^",2,10)'=$P(^IBE(351,IBCL,0),"^",2,10)
	.W !!,"Since you only cancelled the clock, I'll delete the new clock..."
	.I $P(^IBE(351,IBCL,0),"^",11)]"" S $P(^IBE(351,+$G(IBIEN),0),"^",11)=$P(^IBE(351,IBCL,0),"^",11) W !,"(but I'll save the update reason)..."
	.S DA=IBCL,DIK="^IBE(351," D ^DIK K DIK,DA
	;
	; - if the user is adding a new clock, and there is no clock
	; - begin date or status, delete the clock.
	I IBSELECT="ADD" S IBDATA=^IBE(351,IBCL,0) I '$P(IBDATA,"^",3)!'$P(IBDATA,"^",4) D
	.W !!,"This new clock is incomplete!!  Deleting the clock from the system..."
	.S DA=IBCL,DIK="^IBE(351," D ^DIK K DIK,DA
	K IBCL
	Q
	;
ERR	; - display error messages
	W !?5,$P($T(ERRMSG+J),";;",2)
CLEANUP	K IBCLDA,IBCLDAY,IBCLDT,IBMED,IBCLDOL,X,IBSELECT,DLAYGO,IBDT
	Q
	;
ERRMSG	; - possible error messages
	;;No value returned from call to SITE^IBAUTL
	;;Record locked, try again later!
	;;Problem extracting last IFN from zeroth node of CATEGORY C BILLING CLOCK file
	;;Unable to add record to CATEGORY C BILLING CLOCK file
	;;Not a Category C patient!

IBEMTF
IBEMTF	;ALB/CPM - FLAG STOP CODES, DISPOSITIONS, AND CLINICS ; 22-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Option entry point - main processing loop.
	S IBQ=0 F  D UPD Q:IBQ
	K IBQ
	Q
	;
UPD	; Update the billable status for stop codes, dispositions, or clinics.
	W @IOF,*13,?6,"Flag Stop Codes, Dispositions, and Clinics for Means Test Billing"
	W !,$$DASH(),!,"This option is used to set up Clinic Stop Codes, Dispositions, and Clinics"
	W !,"as either non-billable or billable for the Means Test Outpatient Copayment."
	W !!,"Use of this option will have an immediate effect on your billing operations,"
	W !,"so you should have your work pre-planned before using this option.",!,$$DASH()
	;
	; - select stop codes, dispositions, or clinics.
	S DIR(0)="SO^S:STOP CODES;D:DISPOSITIONS;C:CLINICS",DIR("?")="^D HSEL^IBEMTF1"
	S DIR("A")="Enter your choice" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) G UPDQ
	S IBINFO=$T(@Y+1)
	;
	; - some help
	W !!,$$DASH(),!,"You may now enter the ",$P(IBINFO,";",3)," that you wish to flag.  Please note"
	W !,"all ",$P(IBINFO,";",3)," that you select will be assigned the same effective"
	W !,"date and billable status.",!,$$DASH(),!
	;
	; - select all entries to be updated
	S (IBNUM,IBHIT)=0 D UPDQ1 F  D  Q:Y<0
	.S DIC=$P(IBINFO,";",5),DIC(0)="QEAMZ"
	.S DIC("A")=$S(IBHIT:"Next",1:"Select")_" "_$P(IBINFO,";",4)_": "
	.S:$P(IBINFO,";",6)]"" DIC("S")=$P(IBINFO,";",6)
	.D ^DIC K DIC Q:Y<0  S IBHIT=1
	.I $D(^TMP("IBEMTF",$J,+Y)) W !,"Please note that you've already selected ",Y(0,0),"."
	.E  S ^TMP("IBEMTF",$J,+Y)=Y(0,0),IBNUM=IBNUM+1
	;
	; - quit if no selections were made.
	I '$D(^TMP("IBEMTF",$J)) W !!,"No ",$P(IBINFO,";",3)," selected!" S IBQ=1 G UPDQ
	;
	; - allow review of the selections.
	I IBNUM>1 D REV^IBEMTF1 I IBQ G UPDQ
	;
	; - quit if all entries were de-selected (but allow re-start).
	I '$D(^TMP("IBEMTF",$J)) W !!,"All ",$P(IBINFO,";",3)," were de-selected!" G UPDQ
	;
	; - should Means Test billing be ignored or activated?
	S DIR(0)="Y",DIR("A")="Ignore Means Test billing for "_$S(IBNUM=1:"this",1:"these")_" "_$P(IBINFO,";",$S(IBNUM=1:7,1:3))
	S DIR("?")="^D HACT^IBEMTF1"
	W ! D ^DIR K DIR G:($D(DIRUT))!($D(DUOUT)) UPDQ
	S IBFILE=+Y,IBACT=$S(IBFILE:"ignore",1:"activate")
	;
	; - what is the effective date for this action?
	S %DT="AEX",%DT("A")="Please enter the effective date to "_IBACT_" billing: "
	D ^%DT K %DT G:Y<0 UPDQ S IBDAT=Y
	I Y>DT W !!,"Please note that you've selected a future date!"
	;
	; - re-display the list of selected entries.
	W !!,"Action to take => ",IBACT," billing for the following ",$P(IBINFO,";",3),":" D LIST^IBEMTF1 W !
	;
	; - okay to proceed and file entries?
	S DIR(0)="Y",DIR("A")="Is it okay to proceed and file these entries"
	S DIR("?")="Enter 'Y' to file these entries, 'N' to try again, or '^' to quit."
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G UPDQ
	;
	; - file selected entries.
	W !!,"Filing these ",$P(IBINFO,";",4)," entries...  " D FILE^IBEMTF1
	W ! S DIR(0)="E" D ^DIR K DIR,DIRUT,DUOUT
	;
UPDQ	S:$D(DIRUT)!($D(DUOUT)) IBQ=1
	K DIRUT,DUOUT,DTOUT,DIROUT,IBINFO,IBNUM,IBFILE,IBACT,IBDAT,IBHIT
UPDQ1	K ^TMP("IBEMTF",$J)
	Q
	;
DASH()	; Write a dashed line.
	Q $TR($J("",79)," ","=")
	;
INFO	; Description of stop/disposition/clinic information listed below.
	;;desc (plural);desc (selection);source file root;source screen;desc (sing);dest file root;dest file #
	;
S	; Stop Code Information
	;;clinic stop codes;CLINIC STOP CODE;^DIC(40.7,;I '$P(^(0),U,3);clinic stop code;^IBE(352.3,;352.3
	;
D	; Disposition Information
	;;dispositions;DISPOSITION;^DIC(37,;I '$P(^(0),U,10);disposition;^IBE(352.2,;352.2
	;
C	; Clinic Information
	;;clinics;CLINIC;^SC(;I $P(^(0),U,3)="C";clinic;^IBE(352.4,;352.4
	;

IBEMTF1
IBEMTF1	;ALB/CPM - FLAG STOP CODES, DISPOSITIONS, AND CLINICS (CON'T.) ; 23-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
REV	; Review selected entries and de-select if necessary.
	W !!,"You have selected ",IBNUM," ",$P(IBINFO,";",3),"."
	S DIR(0)="Y",DIR("A")="Would you like to review these selections",DIR("?")="^D HREV^IBEMTF1"
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G REVQ
	;
	; - list selections and ask if user would like to de-select.
	D LIST W !
	S DIR(0)="Y",DIR("A")="Would you like to de-select any entries"
	S DIR("?")="Enter 'Y' to de-select entries, 'N' to continue, or '^' to quit."
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G REVQ
	;
	; - allow de-selection and pull entries from the list.
	S IBHIT=0 F  D  Q:Y<0
	.S DIC=$P(IBINFO,";",5),DIC(0)="QEAMZ"
	.S DIC("A")="De-select "_$S(IBHIT:"Next ",1:"")_$P(IBINFO,";",4)_": "
	.S:$P(IBINFO,";",6)]"" DIC("S")=$P(IBINFO,";",6)
	.D ^DIC K DIC Q:Y<0  S IBHIT=1
	.I '$D(^TMP("IBEMTF",$J,+Y)) W !,"Please note that ",Y(0,0)," is not currently selected."
	.E  K ^TMP("IBEMTF",$J,+Y) S IBNUM=IBNUM-1
	W !!,"You have selected a total of ",IBNUM," ",$P(IBINFO,";",$S(IBNUM=1:7,1:3)),"."
REVQ	S:$D(DIRUT)!($D(DUOUT)) IBQ=1
	Q
	;
FILE	; File all selected entries.
	N IBI,IBIN,IBALR
	S IBI=0 F  S IBI=$O(^TMP("IBEMTF",$J,IBI)) Q:'IBI  S IBIN=^(IBI) D
	.K DD,DO,DIC,DR
	.S DIC=$P(IBINFO,";",8),DIC(0)="",X=IBI,DLAYGO=$P(IBINFO,";",9)
	.;
	.; - has this entry already been filed for this date?
	.S IBALR=$O(@(DIC_"""AIVDT"","_IBI_","_-IBDAT_",0)"))
	.;
	.; - add new entry if not yet on file for the specified date
	.I 'IBALR D FILE^DICN I Y<0 W !,"Unable to file ",IBIN,"..",! Q
	.S DIE=$P(IBINFO,";",8),DA=$S(IBALR:IBALR,1:+Y),DR=".02////"_IBDAT_";.03////"_IBFILE
	.D ^DIE K DA,DR,DIE W "."
	W " done!"
	Q
	;
LIST	; List all selected entries.
	W ! S I=0 F  S I=$O(^TMP("IBEMTF",$J,I)) Q:'I  W:$X>40 ! W:$X>2 ?40 W ^(I)
	Q
	;
HACT	; Help for the Billing action prompt.
	W !!,"Please enter:"
	W !,"   'Y' to ignore Means Test billing for ",$S(IBNUM=1:"this",1:"these")," ",$P(IBINFO,";",$S(IBNUM=1:7,1:3))
	W !,"   'N' to activate Means Test billing for ",$S(IBNUM=1:"this",1:"these")," ",$P(IBINFO,";",$S(IBNUM=1:7,1:3))
	W !,"   '^' to quit this option."
	Q
	;
HSEL	; Help for the Billing characteristic prompt.
	W !!,"Please enter:"
	W !,"   'S' to ignore/activate Means Test Billing for Stop Codes"
	W !,"   'D' to ignore/activate Means Test Billing for Dispositions"
	W !,"   'C' to ignore/activate Means Test Billing for Clinics"
	W !,"   '^' to quit this option."
	Q
	;
HREV	; Help for the Request to Review prompt.
	W !!,"Enter 'Y' to review the selections, 'N' to continue, or '^' to quit."
	W !,"Please note that, if you choose to review the selections, you will have"
	W !,"the opportunity to de-select incorrect entries from the list."
	Q

IBEMTF2
IBEMTF2	;ALB/CPM - LIST NON-BILLABLE STOP CODES, DISPOSITIONS, AND CLINICS ; 05-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Option entry point - describe output.
	W !!?5,"This report may be used to generate a list of all clinic stop codes,"
	W !?5,"dispositions, and clinics where Means Test billing will be ignored.",!
	;
	; - grab effective date
	S %DT="AEX",%DT("A")="Please select the effective date for this list: ",%DT("B")=$$DAT2^IBOUTL(DT)
	D ^%DT K %DT G:Y<0 ENQ S IBDAT=Y
	;
	; - select a device
	S %ZIS="QM" D ^%ZIS G:POP ENQ
	I $D(IO("Q")) D  G ENQ
	.S ZTRTN="DQ^IBEMTF2",ZTDESC="LIST NON-BILLABLE STOPS/CLINICS/DISPOSITIONS",ZTSAVE("IBDAT")=""
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	;
	U IO
	;
DQ	; Tasked entry point.
	;
	; - compile data
	D ENQ1 F IBI=352.2,352.3,352.4 S IBJ=0 F  S IBJ=$O(^IBE(IBI,"AIVDT",IBJ)) Q:'IBJ  I $$NBILL(IBI,IBJ,IBDAT) S ^TMP("IBEMTF2",$J,IBI,IBJ)=""
	;
	; - print results
	S (IBPAG,IBQ)=0 F IBI=352.2,352.3,352.4 D HDR,LST,PAUSE:'IBQ Q:IBQ
	;
ENQ	I '$D(ZTQUEUED) D ^%ZISC
	K IBDAT,IBI,IBJ,IBQ,IBT,IBPAG
ENQ1	K ^TMP("IBEMTF2",$J)
	Q
	;
HDR	; Generate a report header.
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
	S IBPAG=IBPAG+1,IBT="LIST OF NON-BILLABLE "_$S(IBI=352.2:"DISPOSITIONS",IBI=352.3:"CLINIC STOP CODES",1:"CLINICS")
	W $$DASH(),!?(80-$L(IBT)\2),IBT,!?33,"As Of: ",$$DAT1^IBOUTL(IBDAT)
	W !?64,"Page: ",IBPAG,!?60,"Run Date: ",$$DAT1^IBOUTL(DT)
	W !,$$DASH(),!!
	Q
	;
LST	; List all selected entries.
	I '$D(^TMP("IBEMTF2",$J,IBI)) W "All ",$S(IBI=352.2:"dispositions",IBI=352.3:"clinic stop codes",1:"clinics")," are billable on this date." G LSTQ
	S IBJ=0 F  S IBJ=$O(^TMP("IBEMTF2",$J,IBI,IBJ)) Q:'IBJ  D  Q:IBQ
	.W:$X>40 ! I $Y>(IOSL-3) D PAUSE Q:IBQ  D HDR
	.W:$X>2 ?40 W $$VAL(IBI,IBJ)
LSTQ	Q
	;
NBILL(IBF,IBEN,IBD)	; Is the entry not billable as of the effective date?
	;  Input:    IBF  --  Base file (#352.2, #352.3, #352.4)
	;           IBEN  --  Internal entry number for entry
	;            IBD  --  Effective date for non-billing
	N Y S Y=0
	I '$G(IBF)!'$G(IBEN)!'$G(IBD) G NBILLQ
	I $G(IBF)=352.2 S Y=$$NBDIS^IBEFUNC(IBEN,IBDAT) G NBILLQ
	I $G(IBF)=352.3 S Y=$$NBCSC^IBEFUNC(IBEN,IBDAT) G NBILLQ
	I $G(IBF)=352.4 S Y=$$NBCL^IBEFUNC(IBEN,IBDAT)
NBILLQ	Q Y
	;
VAL(IBF,IBEN)	; Return the entry name.
	;  Input:    IBF  --  Base file (#352.2, #352.3, #352.4)
	;           IBEN  --  Internal entry number for entry
	;  Output:    Entry name (#.01 from respective file)
	N Y S Y="'ENTRY NAME UNKNOWN'"
	I '$G(IBF)!'$G(IBEN) G VALQ
	I $G(IBF)=352.2 S Y=$P($G(^DIC(37,IBEN,0)),"^") G VALQ
	I $G(IBF)=352.3 S Y=$P($G(^DIC(40.7,IBEN,0)),"^") G VALQ
	I $G(IBF)=352.4 S Y=$P($G(^SC(IBEN,0)),"^")
VALQ	Q Y
	;
DASH()	; Return a dashed line.
	Q $TR($J("",80)," ","=")
	;
PAUSE	; Page break
	Q:$E(IOST,1,2)'="C-"
	N IBX,DIR,DIRUT,DUOUT,DTOUT,DIROUT,X,Y
	F IBX=$Y:1:(IOSL-3) W !
	S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S IBQ=1
	Q

IBEMTO
IBEMTO	;ALB/CPM - BILL MT CHARGES AWAITING NEW COPAY RATE ; 02-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Bill MT OPT charges on hold awaiting the new copay rate.
	;
ENO	; Standalone option entry point
	S IBOPT=1
	;
ENR	; Enter/edit billing rates entry point
	;
	; - quit if job has been fired up from enter/edit rates already
	I $G(IBRUN) G ENQ
	;
	; - quit if there are no charges on hold awaiting the new rate
	I '$D(^IB("AC",20)) W:$G(IBOPT) !!,"There are no charges on hold awaiting the entry of the new copay rate." G ENQ
	;
	; - quit if current rate is still too old
	S IBDT=DT,IBX="O" D TYPE^IBAUTL2
	I $$OLDRATE^IBAMTS1(IBRTED,DT) D:$G(IBOPT)  G ENQ
	.W !!,"The current copay rate (effective ",$$DAT1^IBOUTL(IBRTED),") is still too old to use.  Please be"
	.W !,"sure that you have entered the most current rate in your Billing Rates table."
	;
	; - if x-ref is locked, the job must be currently running
	L +^IB("AC",20):5 E  D:$G(IBOPT)  G ENQ
	.W !!,"The list of held charges cannot be accessed -- the job to bill these held"
	.W !,"charges may currently be running."
	;
	; - queue the job to bill the held charges?
	I '$G(IBOPT) D
	.W !!?28,*7,*7,"***  PLEASE NOTE  ***"
	.W !?8,"The Means Test Outpatient Copayment rate has just been updated,"
	.W !?8,"and there are charges 'on hold' awaiting the entry of this new rate!",!
	;
	I $G(IBOPT) D
	.S IBN=0 F IBJ=0:1:21 S IBN=$O(^IB("AC",20,IBN)) Q:'IBN
	.W !!,"There ",$S(IBJ=1:"is 1",1:"are "_$S(IBJ>20:"at least ",1:"")_IBJ)," charge",$E("s",IBJ>1)," on hold, awaiting the new copay rate."
	S DIR(0)="Y",DIR("A")="Do you want to queue a job to automatically bill these held charges",DIR("?")="^D HQ^IBEMTO"
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G ENQ
	;
	; - queue up job to bill held charges
	S:'$G(IBOPT) ZTDTH=$H
	S ZTRTN="DQ^IBEMTO",ZTIO="",ZTDESC="BILLING OF MT OPT CHARGES AWAITING NEW COPAY RATE"
	S IBRUN=1 D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job!")
	;
ENQ	L -^IB("AC",20)
	K:$G(IBOPT) IBRUN
	K IBN,IBDT,IBATYP,IBDESC,IBJ,IBOPT,IBRTED,IBCHG,IBX,ZTSK
	Q
	;
HQ	; Help for prompt
	W !!,"If you wish to queue off a job to bill the Means Test Outpatient"
	W !,"copayment charges that are on hold awaiting entry of the updated"
	W !,"billing rate, please enter 'Y' or 'YES'.  The job will be tasked"
	W !,"immediately.  Otherwise, enter 'N' or 'NO' or '^' to quit."
	Q
	;
	;
DQ	; Tasked job to bill all charges awaiting the new copay rate.
	S IBJOB=8,IBDUZ=DUZ,IBSEQNO=1,IBCNT=0
	;
	; - record start time
	D NOW^%DTC S IBSTART=$$DAT2^IBOUTL(%)
	;
	; - if can't lock x-ref, job must currently be running
	L +^IB("AC",20):5
	;
	; - loop through all charges awaiting the new rate
	I  S IBREF=0 F  S IBREF=$O(^IB("AC",20,IBREF)) Q:'IBREF  D CHG
	;
	; - unlock x-ref, record end time, and post bulletin
	L -^IB("AC",20)
	D NOW^%DTC S IBEND=$$DAT2^IBOUTL(%)
	D BULL^IBEMTO1
	K IBT,IBSTART,IBEND,IBREF,IBND,IBDT,IBX,IBCHG,IBSEQNO,IBNOS,IBCNT,XMTEXT,XMSUB,XMZ,XMY,XMDUZ
	Q
	;
CHG	; Pass a single charge to Accounts Receivable.
	S IBND=$G(^IB(IBREF,0)) I 'IBND K ^IB("AC",20,IBREF) G CHGQ
	S IBDT=DT,IBX="O" D TYPE^IBAUTL2
	I $$OLDRATE^IBAMTS1(IBRTED,$P(IBND,"^",14)) G CHGQ ; rate still old
	S $P(^IB(IBREF,0),"^",7)=IBCHG,IBSEQNO=1,DFN=+$P(IBND,"^",2)
	S IBNOS=IBREF D ^IBR S:Y>0 IBCNT=IBCNT+1
CHGQ	Q

IBEMTO1
IBEMTO1	;ALB/CPM - LIST MT CHARGES AWAITING NEW COPAY RATE ; 10-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; List Means Test charges on hold, awaiting the new copay rate.
	;
	; - quit if there are no charges on hold awaiting the new rate
	I '$D(^IB("AC",20)) W !!,"There are no charges on hold awaiting the entry of the new copay rate." G ENQ
	;
	; - select a device
	S %ZIS="QM" D ^%ZIS G:POP ENQ
	I $D(IO("Q")) D  G ENQ
	.S ZTRTN="DQ^IBEMTO1",ZTDESC="LIST MT CHARGES ON HOLD AWAITING NEW COPAY RATE"
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	;
	U IO
	;
DQ	; Tasked entry point.
	;
	; - compile data
	D ENQ1 S IBN=0 F  S IBN=$O(^IB("AC",20,IBN)) Q:'IBN  D
	.S IBND=$G(^IB(IBN,0)),DFN=+$P(IBND,"^",2) Q:'DFN
	.S IBPT=$$PT^IBEFUNC(DFN)
	.S ^TMP("IBEMTO1",$J,$P(IBPT,"^")_"@"_$P(IBPT,"^",3)_"@"_DFN,IBN)=""
	;
	; - print message if there are no charges
	S (IBPAG,IBQ)=0 D HDR I '$D(^TMP("IBEMTO1",$J)) W !,"There are no charges on hold awaiting the new copay rate." D PAUSE^IBEMTF2 G ENQ
	;
	; - print charges
	S IBNAM="" F  S IBNAM=$O(^TMP("IBEMTO1",$J,IBNAM)) Q:IBNAM=""  D  Q:IBQ
	.I $Y>(IOSL-3) D PAUSE^IBEMTF2 Q:IBQ  D HDR
	.W !,$P(IBNAM,"@"),"  (",$P(IBNAM,"@",2),")"
	.S (IBF,IBN)=0 F  S IBN=$O(^TMP("IBEMTO1",$J,IBNAM,IBN)) Q:'IBN  D  Q:IBQ
	..I IBF,$Y>(IOSL-3) D PAUSE^IBEMTF2 Q:IBQ  D HDR
	..S IBND=$G(^IB(IBN,0))
	..W:IBF ! W ?41,$$DAT1^IBOUTL($P(IBND,"^",14)),?61,"$",$P(IBND,"^",7)
	..S IBF=1
	;
	; - end-of-report pause
	D:'IBQ PAUSE^IBEMTF2
	;
ENQ	I '$D(ZTQUEUED) D ^%ZISC
	K DFN,IBF,IBN,IBNAM,IBND,IBPT,IBQ,IBPAG
ENQ1	K ^TMP("IBEMTO1",$J)
	Q
	;
HDR	; Generate a report header.
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF,*13
	S IBPAG=IBPAG+1
	W ?14,"LIST OF ALL OUTPATIENT COPAYMENT CHARGES 'ON HOLD'",!?18,"AWAITING ENTRY OF THE NEW COPAYMENT RATE"
	W !?64,"Page: ",IBPAG,!?60,"Run Date: ",$$DAT1^IBOUTL(DT)
	W !,$$DASH(),!,"Patient Name (ID)",?40,"Visit Date",?60,"Charge",!,$$DASH(),!
	Q
	;
DASH()	; Return a dashed line.
	Q $TR($J("",80)," ","-")
	;
	;
	;
BULL	; Post results of background billing run in a bulletin.
	K IBT
	S XMTEXT="IBT("
	S XMSUB="BILLING OF MEANS TEST CHARGES AWAITING NEW COPAY RATE"
	S XMDUZ="INTEGRATED BILLING PACKAGE"
	S IBT(1)="The job to automatically bill Means Test Outpatient copayment charges"
	S IBT(2)="which were on hold, awaiting the new copayment rate, has just completed."
	S IBT(3)=" "
	S IBT(4)="          Job Start Time: "_$P(IBSTART,"@")_" at "_$P(IBSTART,"@",2)
	S IBT(5)="            Job End Time: "_$P(IBEND,"@")_" at "_$P(IBEND,"@",2)
	S IBT(6)=" "
	S IBT(7)="Number of charges billed: "_IBCNT
	S IBT(8)=$S($D(^IB("AC",20)):"Please Note!  There are still similar charges which remain on hold.",1:"There are no longer any charges awaiting the new copay rate which are on hold.")
	S XMY(DUZ)=""
	D ^XMD
	Q

IBEPAR
IBEPAR	;ALB/AAS - MCCR SITE PARAMETER ENTER/EDIT  ;26-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
	S IBPAR=1,IBV1="00000",IBSR="PAR",IBSR1="" F I=0,1,2 S IBEPAR(I)=$S($D(^IBE(350.9,1,I)):^(I),1:"")
	D ^IBCSCU
	S L="",$P(L,"=",80)=""
	I $D(IBPAR) S X="MEDICAL CARE COST RECOVERY PARAMETER ENTER/EDIT" W @IOF,?17,IBVI,X,IBVO,!,L
	;
1	S Z=1,IBW=1 X IBWW W " Medical Center Name: "_$P($G(^DIC(4,+$P(IBEPAR(0),"^",2),0)),"^"),?47,"Federal Tax #",?66,": ",$S($P(IBEPAR(1),"^",5)]"":$P(IBEPAR(1),"^",5),1:IBU)
	W !?4,"Default BC/BS #",?23,": ",$S($P(IBEPAR(1),"^",6)]"":$P(IBEPAR(1),"^",6),1:IBU)
	W ?47,"Medicare Number",?66,": ",$S($P(IBEPAR(1),"^",21)]"":$P(IBEPAR(1),"^",21),1:IBU)
	W !?4,"MAS Service Pointer",?23,": ",$E($S($P(IBEPAR(1),"^",14)]""&($D(^DIC(49,+$P(IBEPAR(1),"^",14),0))):$P(^(0),"^",1),1:IBU),1,20)
	W ?47,"Default Division",?66,": ",$E($S($P(IBEPAR(1),"^",25)]"":$P($G(^DG(40.8,+$P(IBEPAR(1),"^",25),0)),"^"),1:IBU),1,12),!
	;
2	S Z=2,IBW=1 X IBWW W " Bill Signer Name   : "_$S($P(IBEPAR(1),"^",1)]"":$P(IBEPAR(1),"^",1),1:IBU)
	W ?47,"Title: ",$S($P(IBEPAR(1),"^",2)]"":$P(IBEPAR(1),"^",2),1:IBU)
	W !?4,"Billing Supervisor",?23,": " S IBSUP=$S($P(IBEPAR(1),"^",8)]"":$P(IBEPAR(1),"^",8),1:IBU) I IBSUP'=IBU S IBSUP=$P(^VA(200,IBSUP,0),"^",1)
	W:IBSUP'=IBU $P(IBSUP,",",2)," ",$P(IBSUP,",",1),! W:IBSUP=IBU IBU,!
	;
3	S Z=3,IBW=1 X IBWW W " Multiple Form Types: "_$S($P(IBEPAR(1),"^",22)=1:"YES",$P(IBEPAR(1),"^",11)=0:"NO",1:IBU)
	W ?47,"Initiator Authorize: ",$S($P(IBEPAR(1),"^",23)=1:"YES",$P(IBEPAR(1),"^",3)=0:"NO",1:IBU) W !?4,"Use Non-PTF Codes?",?23,": ",$S($P(IBEPAR(1),"^",15)=1:"YES",$P(IBEPAR(1),"^",15)=0:"NO",1:IBU)
	W ?47,"Ask HINQ in MCCR?  : ",$S($P(IBEPAR(1),"^",16)=1:"YES",$P(IBEPAR(1),"^",16)=0:"NO",1:IBU),!
	W ?4,"Use OP CPT screen? : ",$S($P(IBEPAR(1),"^",17):"YES",'$P(IBEPAR(1),"^",17):"NO",1:IBU)
	W ?47,"Default ASC Rev. Cd: " S X=$G(^DGCR(399.2,+$P(IBEPAR(1),"^",18),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU),!
	W ?4,"Xfer Proc to Sched?: "_$S($P(IBEPAR(1),"^",19)=1:"YES",$P(IBEPAR(1),"^",19)=0:"NO",1:IBU)
	W ?47,"Per Diem Start Date: " S Y=$P(IBEPAR(0),"^",12) D D^DIQ W Y,!
	W ?4,"Default RX Rev. Cd : " S X=$G(^DGCR(399.2,+$P(IBEPAR(1),"^",28),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU)
	W ?42,"Suppress MT Ins Bulletin: ",$S($P(IBEPAR(0),"^",15)=1:"YES",$P(IBEPAR(0),"^",15)=0:"NO",1:IBU),!
	W ?4,"Default RX Dx Cd   : " S X=$G(^ICD9(+$P(IBEPAR(1),"^",29),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU)
	W ?47,"Default RX CPT Cd  : " S X=$G(^ICPT(+$P(IBEPAR(1),"^",30),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU),!
	;
4	S Z=4,IBW=1 X IBWW W " '001' for Total?   : "_$S($P(IBEPAR(1),"^",10)=1:"YES",$P(IBEPAR(1),"^",10)=0:"NO",1:IBU)
	W ?47,"Hold MT Bills W/Ins: ",$S($P(IBEPAR(1),"^",20)=1:"YES",$P(IBEPAR(1),"^",20)=0:"NO",1:IBU)
	W !?4,"Remark on each bill",?23,": ",$S($P(IBEPAR(1),"^",4)]"":$E($P(IBEPAR(1),"^",4),1,21),1:IBU)
	W ?47,"UB-92 Address Col  : " W $S($P(IBEPAR(1),U,31)]"":$P(IBEPAR(1),"^",31),1:IBU)
	W !?4,"Cancellation Remark",?23,": ",$S($P(IBEPAR(2),"^",7)]"":$E($P(IBEPAR(2),"^",7),1,21),1:IBU)
	W ?47,"HCFA 1500 Addr Col : " W $S($P(IBEPAR(1),U,27)]"":$P(IBEPAR(1),"^",27),1:IBU)
	;
	W !?4,"Cancelled Mailgroup",?23,": ",$S($P(IBEPAR(1),"^",7):$P($G(^XMB(3.8,+$P(IBEPAR(1),"^",7),0)),"^",1),1:IBU)
	;
	W ?47,"Disap. Mailgroup   : ",$S($P(IBEPAR(1),"^",9):$P($G(^XMB(3.8,+$P(IBEPAR(1),"^",9),0)),"^"),1:IBU),!
	W ?4,"Copay Mailgroup",?23,": ",$S($P(IBEPAR(0),"^",9):$P($G(^XMB(3.8,+$P(IBEPAR(0),"^",9),0)),"^"),1:IBU)
	W ?47,"Cat C Mailgroup    : ",$S($P(IBEPAR(0),"^",11):$P($G(^XMB(3.8,+$P(IBEPAR(0),"^",11),0)),"^"),1:IBU)
	;
5	;
	S Z=5,IBW=1 X IBWW W " Agent Cashier",?23,": ",$P(IBEPAR(2),"^",1)
	W ", ",$P(IBEPAR(2),"^",3),", "
	W $S($P(IBEPAR(2),"^",4):$P(^DIC(5,$P(IBEPAR(2),"^",4),0),"^",2),1:"")
	W "  ",$P(IBEPAR(2),"^",5)
	W !?4,"Phone",?23,": ",$S($P(IBEPAR(2),"^",6)]"":$P(IBEPAR(2),"^",6),1:IBU)
	W ?47,"Default Form Type  : " S X=$G(^IBE(353,+$P(IBEPAR(1),"^",26),0)) W $S($P(X,"^")]"":$P(X,"^"),1:IBU)
CH	D ^IBEPAR1 I $D(IBSCA) G IBEPAR
Q	K IBEPAR,IBSCPP,IBSUP,IBSR,IBPAR,IBU,IBUN,IBV1,IBVI,IBVV,IBVO,IBW,IBWW,DIK,I,X,Y Q
	;IBEPAR

IBEPAR1
IBEPAR1	;ALB/MJB/AAS - MCCR PARAMETER SCREEN EDIT  ;28 JUN 88 11:09
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	D Q1 W !
	S IBSCPP=$S($L(IBV1)>1:"1-"_$L(IBV1),1:1)
	F I=$Y:1:20 W !
	W "Enter ",IBSCPP," to EDIT, or '^' to QUIT: " R IBSCA:DTIME G Q:'$T I IBSCA=""!(IBSCA["^") G Q
	I IBSCA?1N1"-"1N S IBDR=IBSCA,IBSCA="" F I=+IBDR:1:$P(IBDR,"-",2) S IBSCA=IBSCA_I_","
	S IBDR="" F J=1:1 S I=$P(IBSCA,",",J) Q:I=""!($L(I)>3)  I I<10 S:I'["-"&(IBDR'[I_",") IBDR=IBDR_I_"," I I["-" S I1=$P(I,"-",1),I2=$P(I,"-",2) F I3=I1:1:I2 S IBDR=IBDR_I3_"," I I3>10 Q
	;
	I $S($L(IBSCA)>20:1,IBSCA["?":1,IBSCA'?1N.E:1,IBSCA<1:1,IBSCA>6:1,IBSCA?1"0".E:1,1:0) D ^IBCSCH Q
	;
	S (DA,Y)=1,DIE="^IBE(350.9,",DR="[IB EDIT MCCR PARM]" D ^DIE
	;
	K DR,DA,DIE Q
Q	K IBDR,IBSR,IBV,IBVV,IBVI,IBVO
Q1	K %DT,C,DGA,DGA1,DGA2,DGAD,DGCC,IBSCAN,IBSCA,IBDR,DGST,DGAAC
	K DIC,DIWF,DIWL,I,I1,I2,I3,J,X,X1,X2,X3,Y,Z,Z1,Z2 Q
	;
W	I IOST="C-QUME",$L(IBVI)'=2 W Z
	E  W @IBVI,Z,@IBVO
	Q
	;
1	;;1.05;1.06;1.21;1.14;
2	;;1.01;1.02;1.08;
3	;;1.11;1.03;1.15:1.19;.12;
4	;;1.1;1.2;1.04;2.07;1.07;1.09;.09;.11;
5	;;2.01:2.06
	;IBPAR1

IBERS
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;patient data for a particuar appointment is printed on the top of the check-off sheet
EN	;determine print option from user  (print by clinic or by patient)
	;***
	;S XRTL=$ZU(0),XRTN="IBERS-1" D T0^%ZOSV ;start rt clock
	D HOME^%ZIS S IBDT=DT
E1	W @IOF,!,?20,"Print Appointment Check-Off Sheets",!!
	S DIR("?")="Enter a code from the list or return to exit.",DIR("B")="Clinic"
	S DIR(0)="SO^P:Patient Name;C:Clinic",DIR("A")="Select Appointment by" D ^DIR K DIR G:$D(DIRUT) END S IBC=Y
	I IBC="P" S IBSRT=1 G E2
	S DIR(0)="SOB^C:Clinic and Patient;T:Terminal Digits",DIR("?")="Enter ""C"" for sorting by Clinic and Patient or ""T"" to sort by Terminal Digits"
	S DIR("A")="Sort sheets by",DIR("B")="Clinic" D ^DIR K DIR G:$D(DIRUT) END S IBSRT=$S(Y="T":2,1:1)
E2	D DATE I IBDT'=-1 D @IBC
END	G:'$D(^TMP("IBRS",$J)) EXIT
	W !,"This report requires 132 columns."
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="^IBERS1",ZTDESC="IB Appointment Check-Off Sheets",ZTSAVE("^TMP(""IBRS"",$J,")="",ZTSAVE("IBSRT")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G EXIT
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERS" D T1^%ZOSV ;stop rt clock
	D ^IBERS1
EXIT	K ^TMP("IBRS",$J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERS" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IBC,IBDT,IBSRT,DTOUT,DUOUT,DIRUT,DIROUT,X,Y D ^%ZISC
	Q
	;
P	;print by patient - get patient then appointment(s) for date
	S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC G:Y<0 ENDP S IBPFN=+Y,IBPNM=$P(Y,"^",2)
	S IBDFN(IBPFN)="" D SEARCH S IBNM=IBPNM D DISP
	G P
ENDP	K IBPFN,IBPNM,IBNM,DTOUT,DUOUT,X,Y
	Q
	;
C	;print all appointments for a clinic - find division then clinic, print all/some clinics for all/some divisions
	D DIVISION^VAUTOMA G:$D(VAUTD)<11&(VAUTD=0) ENDC
	S DIC("S")="I +$P(^(0),U,25),$P(^(0),U,3)=""C"",$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD($O(^DG(40.8,0)))):1,1:0)"
	S DIC="^SC(",VAUTVB="VAUTC",VAUTNI=2,VAUTSTR="clinic" D FIRST^VAUTOMA K DIC G:$D(VAUTC)<11&(VAUTC=0) ENDC
	I VAUTC,VAUTD S ^TMP("IBRS",$J,"D","ALL",IBDT)=""
	I VAUTC,'VAUTD S IBDIV="" F IBI=1:1 S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  S ^TMP("IBRS",$J,"D",IBDIV,IBDT)=""
	I 'VAUTC S IBCLN="" F IBI=1:1 S IBCLN=$O(VAUTC(IBCLN)) Q:IBCLN=""  S ^TMP("IBRS",$J,"C",IBCLN,IBDT)=""
ENDC	K VAUTNI,VAUTD,VAUTC,VAUTVB,VAUTSTR,IBDIV,IBCLN,IBI,DIC
	Q
	;
SEARCH	;get the appointment data on a patient (IBLN=APPT DT^CLINIC^STATUS^APPT TYPE)
	S DFN=""
S1	S DFN=$O(IBDFN(DFN)) G:DFN="" ENDS
	S (VASD("F"),VASD("T"))=IBDT,VASD("W")=129 D SDA^VADPT I VAERR!'($D(^UTILITY("VASD",$J))) G S1
	S IBX="" F IBI=1:1 S IBX=$O(^UTILITY("VASD",$J,IBX)) Q:IBX=""  D
	. S IBLN=^UTILITY("VASD",$J,IBX,"I") Q:'$P($G(^SC(+$P(IBLN,"^",2),0)),"^",25)  S IBPAT=$$PT^IBEFUNC(DFN) Q:IBPAT=""
	. S IBTMP($P(IBLN,"^",1))=DFN_"^"_$P(IBLN,"^",2)_"^"_$P(IBPAT,"^",1)_"^"_^UTILITY("VASD",$J,IBX,"E")_"^"_$P(IBPAT,"^",2)
	G S1
ENDS	K IBX,IBI,IBLN,DFN,IBPAT,VASD,VAERR,IBDFN
	Q
	;
DISP	;display patients/clinics appointments found and get users choice
	I '$D(^UTILITY("VASD",$J)) W !!,?5,"No Active Appointments for ",IBNM," on this date",! G ENDD
	I '$D(IBTMP) W !!,?10,"No Active Appointments in a Clinic with a Check-Off Sheet",!,?10,"for ",IBNM," on this date.",! G ENDD
	W !!,"Appointments for ",IBNM,!
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  S IBLN=IBTMP(IBX) W !,$J(IBI,3),"  ",$E($S(IBC="C":$P(IBLN,"^",3),1:$P(IBLN,"^",5)),1,20),?25,"   " F IBJ=4,6,7 W "  ",$P(IBLN,"^",IBJ)
	S DIR(0)="LO^1:"_(IBI-1)_"^K:X[""."" X",DIR("A")="    Select Appointments" D ^DIR K DIR G:$D(DIRUT) ENDD
	S IBX="" F IBI=1:1 S IBX=$O(IBTMP(IBX)) Q:IBX=""  I Y[(IBI_",") D
	. S IBSRT1=$S(IBSRT=2:0_$$TDG^IBEFUNC2($P(IBTMP(IBX),"^",8)),1:$P(IBTMP(IBX),"^",2))
	. S ^TMP("IBRS",$J,"P",IBSRT1,$P(IBTMP(IBX),"^",3),IBX)=IBTMP(IBX)_"^"_IBX
ENDD	K IBX,IBI,IBJ,IBLN,IBTMP,IBSRT1,DTOUT,DUOUT,DIRUT,DIROUT,X,Y,^UTILITY("VASD",$J)
	Q
	;
DATE	;get date for RS
	S Y=IBDT X ^DD("DD")
	S %DT="AEX",%DT("A")="Appointment DATE: ",%DT("B")=Y D ^%DT K %DT S IBDT=Y
	W !!,"Only Clinics and Patients with Appointments on this Date will be allowed."
	W !,"Appointments must be in Clinics that have a Check-Off Sheet, to be chosen.",!!
	Q

IBERS1
IBERS1	;ALB/ARH - APPOINTMENT CHECK-OFF SHEET GENERATOR (CONTINUED); 12/6/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;***
	;S XRTL=$ZU(0),XRTN="IBERS1-2" D T0^%ZOSV ;start rt clock
	;
	;collect data/print appointment check-off sheets for patients and clinics choosen
	;passed in: temp file and IBSRT with the method of sort
	S IBQ=0 I $D(^TMP("IBRS",$J,"D")) D ENDV
	I 'IBQ,$D(^TMP("IBRS",$J,"C")) D ENCL
	I 'IBQ,$D(^TMP("IBRS",$J,"P")) D ENPT
	K ^TMP("IBRSC",$J),IBHDR,IBLC,IBQ
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERS1" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	Q
ENPT	;print an appointment check-off sheet for each patient selected
	;input TMP file - contains appointment data:
	;^TMP("IBRS",$J,"P",IBSRT1,IBSRT2,IBSRT3)=DFN^CLN/I^PNM/E^APP DT/E^CLN/E^STAT/E^APP TYP/E^PID/E^APP DT/I
	S IB1=2,IB4=4,IB2=((IOM-(IB1*2)-IB4)/2),IB3=((IOM-(IB1*2)-(IB4*2))/3)
	S IBDSH="" F IBI=1:1:IOM S IBDSH=IBDSH_"-"
	S IBSRT1="" F  S IBSRT1=$O(^TMP("IBRS",$J,"P",IBSRT1)) Q:IBSRT1=""!(IBQ)  S IBSRT2="" D:$D(IBHDR)&(IBSRT=1) HDRPG D
	. F  S IBSRT2=$O(^TMP("IBRS",$J,"P",IBSRT1,IBSRT2)) Q:IBSRT2=""!(IBQ)  S IBSRT3="" D
	.. F  S IBSRT3=$O(^TMP("IBRS",$J,"P",IBSRT1,IBSRT2,IBSRT3)) Q:IBSRT3=""!(IBQ)  D
	... S IBLN=^(IBSRT3) D ^IBERS2,PRINT
	D:$D(IBHDR) HDRPG
	K IBSRT1,IBSRT2,IBSRT3,IBLN,IBDSH,IB1,IB2,IB3,IB4,IBI,IBHDR,IBHDRLN,Y,^TMP("IBRS",$J,"P")
	Q
	;
ENCL	;for every clinic choosen find every patient appointment on DATE
	S IBCNT=1,(IBHDR,IBCLN)=""
	F  S IBCLN=$O(^TMP("IBRS",$J,"C",IBCLN)) Q:IBCLN=""!IBQ  D  S IBQ=$$STOP
	. S IBY="" F  S IBY=$O(^TMP("IBRS",$J,"C",IBCLN,IBY)) Q:IBY=""  D
	.. S (IBDT,IBAPP)=$E(IBY,1,7) F  S IBAPP=$O(^SC(IBCLN,"S",IBAPP)) Q:$E(IBAPP,1,7)'=IBDT  D
	... S IBCLNE=$P($G(^SC(IBCLN,0)),"^",1),Y=IBAPP X ^DD("DD") S IBDTE=Y
	... S IBX=0 F  S IBX=$O(^SC(IBCLN,"S",IBAPP,1,IBX)) Q:IBX=""  D
	.... S IBPFN=+$G(^SC(IBCLN,"S",IBAPP,1,IBX,0)) S IBPAT=$$PT^IBEFUNC(IBPFN) Q:IBPAT=""
	.... S IBAPTYP=$G(^DPT(IBPFN,"S",IBAPP,0)) Q:"NT,I,"'[($P(IBAPTYP,"^",2)_",")
	.... S IBAPTYP=$P($G(^SD(409.1,+$P(IBAPTYP,"^",16),0)),"^")
	.... S IBSRT1=$S(IBSRT=2:0_$$TDG^IBEFUNC2($P(IBPAT,"^",2)),1:IBCLN),IBCNT=IBCNT+1
	.... S ^TMP("IBRS",$J,"P",IBSRT1,$P(IBPAT,"^",1),IBAPP)=IBPFN_"^"_IBCLN_"^"_$P(IBPAT,"^",1)_"^"_IBDTE_"^"_IBCLNE_"^^"_IBAPTYP_"^"_$P(IBPAT,"^",2)_"^"_IBAPP
ENDC	K IBAPP,IBAPTYP,IBCLN,IBCLNE,IBCNT,IBDT,IBDTE,IBPFN,IBPAT,IBSRT1,IBX,IBY,Y,^TMP("IBRS",$J,"C")
	Q
	;
ENDV	;entire divisions were choosen, find all clinics (with check-off sheets defined)
	I $D(^TMP("IBRS",$J,"D","ALL")) S IBDT="" F  S IBDT=$O(^TMP("IBRS",$J,"D","ALL",IBDT)) Q:IBDT=""  D
	. S IBDIV="" F  S IBDIV=$O(^DG(40.8,IBDIV)) Q:IBDIV'?1N.N  S ^TMP("IBRS",$J,"D",IBDIV,IBDT)=""
	S IBGRP="" F  S IBGRP=$O(^SC("AF",IBGRP)) Q:IBGRP=""!IBQ  S IBCLN="" D  S IBQ=$$STOP
	. F  S IBCLN=$O(^SC("AF",IBGRP,IBCLN))  Q:IBCLN=""  D
	.. S IBDIV=$G(^SC(IBCLN,0)) Q:$P(IBDIV,"^",3)'="C"
	.. S IBDIV=$P(IBDIV,"^",15) Q:'$D(^TMP("IBRS",$J,"D",+IBDIV))
	.. S IBDT="" F  S IBDT=$O(^TMP("IBRS",$J,"D",+IBDIV,IBDT)) Q:IBDT=""  S ^TMP("IBRS",$J,"C",IBCLN,IBDT)=""
	K IBDT,IBCLN,IBDIV,IBGRP,^TMP("IBRS",$J,"D")
	Q
	;
HDRPG	;print a header/trailer pages if entire clinics or divisions were requested
	I $D(IBHDRLN) S IBX=$L(IBHDRLN) W !!!!!!!,$J("End"_IBHDRLN,((IOM\2)+(IBX\2)+2)),@IOF
	I IBSRT1'="" S IBX=$G(^SC(IBSRT1,0)),IBHDRLN=" of Check-off sheets for "_$P(IBX,"^",1)_", "_$P($G(^DG(40.8,+$P(IBX,"^",15),0)),"^",1),IBX=$L(IBHDRLN) W !!!!,$J("Beginning"_IBHDRLN,((IOM\2)+(IBX\2)+5)),@IOF
	K IBX
	Q
	;
PRINT	;print the patient data and then the check-off sheet CPT list that has been gathered/created
	S IBX="",IBLC=0 S IBQ=$$STOP
	F IBI=1:1 S IBX=$O(^TMP("IBRSP",$J,IBX)) Q:IBX=""!(IBQ)  S IBLC=IBLC+1 D:IOSL<(IBLC+3) PAUSE W !,^TMP("IBRSP",$J,IBX)
	I 'IBQ D PAUSE I 'IBQ S IBX=$G(^SC(+$P(IBLN,"^",2),0)) D CPT^IBERSP(+$P(IBX,"^",25),+$P(IBX,"^",15),IBLC,$P(IBLN,"^",9),0)
	W @IOF K ^TMP("IBRSP",$J),IBLC,IBX,IBI
	Q
PAUSE	;
	Q:$E(IOST,1,2)'["C-"  S (IBLC,IBQ)=0,DIR(0)="E" D ^DIR K DIR,DTOUT,DUOUT,DIRUT,DIROUT S:'Y IBQ=1 W @IOF
	Q
	;
STOP()	;deterimine if user requested task to stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ
	Q +$G(ZTSTOP)

IBERS2
IBERS2	;ALB/ARH - APPOINTMENT CHECK-OFF SHEET GENERATOR (CONTINUED) ; 12/6/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;gather the data for an individual patient appointment check-off sheet (all data needed is passed in, in IBLN)
	S IBLC=0,IBDT=$P(IBLN,"^",9),DFN=$P(IBLN,"^",1) D ELIG^VADPT
	S IBX="AMBULATORY SURGERY CHECK-OFF SHEET",IBW=1 D LINE S IBX="" D ENDLN
PAT	;name,clinic,appointment date/time
	S IBX="   Patient Name: "_$P(IBLN,"^",3),IBY=$J("",15)_"Clinic: "_$P(IBLN,"^",5),IBW=2 D LINE
	S IBX="     Patient Id: "_$P(IBLN,"^",8),IBY="Appointment Date/Time: "_$P(IBLN,"^",4),IBW=2 D LINE
	S IBX="",IBY="     Appointment Type: "_$P(IBLN,"^",7),IBW=2 D LINE
	S IBX=IBDSH D ENDLN
	;
MT	;means test, date of last means test, primary eligibility
	S Y=$$LST^DGMTU(DFN,IBDT)
	S IBX="     Means Test: "_$P(Y,"^",3),IBY="  Primary Eligibility: "_$P(VAEL(1),"^",2),IBW=2 D LINE
	S Y=$P(Y,"^",2) X ^DD("DD")
	S IBX="Last Means Test: "_Y,IBY="    Service Connected: "_$S(+VAEL(3):$P(VAEL(3),"^",2)_"%",1:"NO"),IBW=2 D LINE
	S IBX=IBDSH D ENDLN
	;
	;find active insurance companies and SC disabilities
INS	S IBCOND=0,IBINDT=IBDT,IBOUTP=1 D ^IBCNS
	S IBX="      Insurance: " I 'IBINS S IBINS(1)=IBX_"None Active" G SC
	S ^TMP("IBRSP",$J,1)=$E(^TMP("IBRSP",$J,1),1,(IOM-4))_$J("INS",(IOM-4-$L(^TMP("IBRSP",$J,1))))
	;S $E(^TMP("IBRSP",$J,1),(IOM-3),IOM)="INS"
	I $D(IBDD) S IBNS="",IBI=1 F  S IBNS=$O(IBDD(IBNS)) Q:IBNS=""  D
	. S IBLX=$G(IBINS(IBI)),IBCMP=$P($G(^DIC(36,+IBNS,0)),"^",1)
	. I IBLX="" S IBINS(IBI)=IBX_IBCMP,IBX=$J("",17) Q
	. I IB2>($L(IBLX)+$L(IBCMP)+2) S IBINS(IBI)=IBLX_", "_IBCMP Q
	. S IBI=IBI+1 S IBINS(IBI)=IBX_IBCMP,IBX=$J("",17)
SC	G:'+VAEL(3)&('$D(^DPT(DFN,.372))) ENDINSC
	S IBX="      SC Disabilities: "
	I 'VAEL(4),$S($P($G(^DG(391,+VAEL(6),0)),"^",2):0,1:1) S IBSCD(1)=IBX_"Not A Veteran" G ENDINSC
	I '$D(^DPT(DFN,.372)) S IBSCD(1)=IBX_"No SC Disabilities Listed" G ENDINSC
	I '$O(^DPT(DFN,.372,0)) S IBSCD(1)=IBX_"None Stated" G ENDINSC
	S (IBCOND,IBSC)=0 F  S IBSC=$O(^DPT(DFN,.372,IBSC)) Q:IBSC=""  D
	. S IBDIS=$G(^DPT(DFN,.372,IBSC,0)) Q:'$P(IBDIS,"^",3)  S IBDISC=$G(^DIC(31,+IBDIS,0)),IBCOND=IBCOND+1
	. S IBSCD(IBCOND)=IBX_IBCOND_" "_$E($S($P(IBDISC,"^",4)'="":$P(IBDISC,"^",4),1:$P(IBDISC,"^",1)),1,(IB2-$S(IBCOND>9:31,1:30)))_$J($P(IBDIS,"^",2),4)_"%"
	. S IBX=$J("",23)
	I 'IBCOND S IBSCD(1)=IBX_"None"
ENDINSC	;print the INS and SC arrays on the same lines
	F IBI=1:1 Q:'$D(IBINS(IBI))&'$D(IBSCD(IBI))  S IBX=$G(IBINS(IBI)),IBY=$G(IBSCD(IBI)),IBW=2 D LINE
	S IBX=IBDSH D ENDLN
	K IBLX,IBCMP,IBINS,IBSCD,IBNS,IBDIS,IBDISC,IBSC,IBI,IBINDT,IBINS,IBOUTP,IBDD,VAEL,VAERR
	;
DX	;print discharge and billing dx's for last 6 appointments
	;D ^IBERS3
	;
CHECKS	;print space for checks
	S IBZ=IB3\2,IBX=$J("EKG  (  )",IBZ+5),IBY=$J("LAB  (  )",IBZ+5),IBZ=$J("X-RAY  (  )",IBZ+6),IBW=3 D LINE
	S IBX=IBDSH D ENDLN
	;
END	;end of sheet, Last section on patient printed on RS: new dx's, signature
	I IBCOND S IBX=$J("",IB1)_"Visit for SC condition: 1" F IBI=2:1:IBCOND S IBX=IBX_", "_IBI
	D:IBCOND ENDLN
	S IBX="Diagnosis: ",IBY="Signature: ",IBW=2 D LINE
	S IBX=IBDSH D ENDLN S IBX="" D ENDLN
	;
EXIT	K IBDT,IBLC,IBI,IBX,IBY,IBZ,IBW,IBCOND,DFN,X,Y
	Q
	;
LINE	;prints 1 (IBW=1) 2 (IBW=2) or three (IBW=3) pieces of data on a formated line
	;(IBX, IBY, IBZ should contain the 1st, 2nd, and 3rd piece of data, respectively)
	;use IBW=1 for headers centered on the page: IBX=header text
	;entry at lable ENDLN can be used to insert a line with no additional frmating
	I IBW=1 S IBT=IB1+(IB2-($L(IBX)/2)),IBX=$J("",IBT)_IBX G ENDLN
	S IBL=$S(IBW=2:IB2,1:IB3),IBT=IB4
	S IBX=$E(IBX,1,IBL),IBX=$J("",IB1)_IBX_$J("",(IBL-$L(IBX)))
	S IBY=$E(IBY,1,IBL),IBX=IBX_$J("",IBT)_IBY_$J("",(IBL-$L(IBY)))
	I IBW=3 S IBZ=$E(IBZ,1,IBL),IBX=IBX_$J("",IBT)_IBZ_$J("",(IBL-$L(IBZ)))
ENDLN	S IBLC=IBLC+1,^TMP("IBRSP",$J,IBLC)=IBX
	K IBT,IBL
	Q

IBERS3
IBERS3	;ALB/ARH - APPOINTMENT CHECK-OFF SHEET GENERATOR (CONTINUED); 12/6/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;gather data continued - dx's
	;first three DXs from patients PTF records (by discharge date) and billing records (by event date) for the last year
	;with a max of 18 (IBPDN), first 3 DX's from the last 6 records in year
	;input: DFN, IBDT
	;
	S IBFD="",IBPDN=18
PTFDX	;701 dx's for last year, or at most 3 dx's from last 6 ptf's
	S (IBST,IBADT)=(IBDT-10000),IBEND=(IBDT+.99)
	;get last years pft records, store in reverse cronological order by discharge date
	F  S IBADT=$O(^DGPT("AAD",DFN,IBADT)) Q:IBADT=""!(IBADT>IBEND)  S IBPTF="" D
	. F  S IBPTF=$O(^DGPT("AAD",DFN,IBADT,IBPTF)) Q:IBPTF=""  D
	.. S IBN=$G(^DGPT(IBPTF,70)) Q:IBN=""!(+IBN>IBEND)  S IBG(-IBN,IBPTF)=IBN
	G:'$D(IBG) ENDPTF S IBDXP1=10,IBDXP2=16,IBDXP3=17,IBCNT=0
	D DX G:'$D(IBD) ENDPTF
	D DX1 G:'$D(IBTMP) ENDPTF S IBLBL="Discharge"
	D DX2
ENDPTF	K IBADT,IBCNT,IBPTF,IBST,IBEND,IBN
	;
BILLDX	;print billing dx's, or at most 3 dx's from last 6 bills
	S (IBST,IBEG)=(IBDT-10000),IBEND=(IBDT+.99),IBBN=""
	;get last years billing records, store in reverse cronological order by event date
	F  S IBBN=$O(^DGCR(399,"C",DFN,IBBN)) Q:IBBN=""  D
	. S IBEDT=$P($G(^DGCR(399,IBBN,0)),"^",3) Q:(IBEDT>IBEND)!(IBEDT<IBEG)
	. S IBN=$G(^DGCR(399,IBBN,"C")) Q:IBN=""  S IBG(-IBEDT,IBBN)=IBN
	G:'$D(IBG) ENDBILL S IBDXP1=14,IBDXP2=15,IBDXP3=16,IBCNT=0
	D DX G:'$D(IBD) ENDBILL
	D DX1 G:'$D(IBTMP) ENDBILL S IBLBL="Billing" S IBX="" D ENDLN
	D DX2
ENDBILL	K IBN,IBCNT,IBST,IBEDT,IBEND,IBEG,IBX,IBBN
	;
END	I IBFD S IBX=IBDSH D ENDLN
	K IBFD,IBPDN
	Q
	;
DX	;get appropriate number of DX codes from choosen records
	S IBDDT="" F  S IBDDT=$O(IBG(IBDDT)) Q:IBDDT=""!(IBPDN'>IBCNT)  D
	. S IBX="" F  S IBX=$O(IBG(IBDDT,IBX)) Q:IBX=""!(IBPDN'>IBCNT)  S IBN=IBG(IBDDT,IBX) D
	.. F IBI=IBDXP1,IBDXP2,IBDXP3 S IBDX=$P(IBN,"^",IBI) I IBDX,(IBPDN>IBCNT),'($G(IBR($E(IBDDT,1,7),IBDX))) D
	... S IBCNT=IBCNT+1,IBD(IBDDT,IBCNT)=IBDX_"^"_$S(IBI=10:"*",1:" ") I IBCNT=IBPDN S IBST=-IBDDT
	... S IBR($E(IBDDT,1,7),IBDX)=1
	K IBDDT,IBX,IBI,IBDX,IBN,IBR,IBG,IBDXP1,IBDXP2,IBDXP3,IBX
	Q
	;
	;format records found that have dx's in past year (from previous steps)
DX1	S IBFD=1,IBDDT="",IBROW=1,IBCOL=3,IBRMAX=(IBCNT\IBCOL)+$S(IBCNT#IBCOL=0:0,1:1)
	;format dx's for printing, 3 columns, descending date
	F  S IBDDT=$O(IBD(IBDDT)) Q:IBDDT=""  S IBX="" F  S IBX=$O(IBD(IBDDT,IBX)) Q:IBX=""  D
	. S IBDX=IBD(IBDDT,IBX),IBDDTE=$$DAT1^IBOUTL(-IBDDT)
	. S IBDX=IBDDTE_" "_$P(IBDX,"^",2)_"("_$J($P($G(^ICD9(+IBDX,0)),"^",1),7)_") "_$P($G(^ICD9(+IBDX,0)),"^",3)
	. I IBROW>IBRMAX S IBROW=1,IBCOL=IBCOL-1,IBRMAX=(IBCNT\IBCOL)+$S(IBCNT#IBCOL=0:0,1:1)
	. S IBTMP(IBROW)=$S($D(IBTMP(IBROW)):IBTMP(IBROW),1:$J("",IB1))_$E(IBDX,1,IB3)_$J("",(IB3-$L(IBDX)))_$J("",IB4)
	. S IBROW=IBROW+1,IBCNT=IBCNT-1
	K IBDDT,IBROW,IBCOL,IBRMAX,IBX,IBDX,IBD,IBDDTE
	Q
	;
	;set results into temp array to be printed on check-off sheet
DX2	S Y=IBST X ^DD("DD") S IBEG=$P(Y,"@",1),Y=IBDT X ^DD("DD") S IBEND=$P(Y,"@",1)
	S IBX=IBLBL_" Diagnosis for "_IBEG_" to "_IBEND,IBW=1 D LINE S IBX="" D ENDLN
	S IBDX="" F  S IBDX=$O(IBTMP(IBDX)) Q:IBDX=""  S IBX=$E(IBTMP(IBDX),1,IOM) D ENDLN
	K Y,IBEG,IBEND,IBX,IBDX,IBTMP,IBLBL
	Q
	;
	;enters a line into the temp file used to had the COS before printing
LINE	;prints 1 (IBW=1) 2 (IBW=2) or three (IBW=3) pieces of data on a formated line
	;use IBW=1 for headers centered on the page: IBX=header text
	;entry at lable ENDLN can be used to insert a line with no additional formating
	I IBW=1 S IBT=IB1+(IB2-($L(IBX)/2)),IBX=$J("",IBT)_IBX G ENDLN
	S IBL=$S(IBW=2:IB2,1:IB3),IBT=IB4
	S IBX=$E(IBX,1,IBL),IBX=$J("",IB1)_IBX_$J("",(IBL-$L(IBX)))
	S IBY=$E(IBY,1,IBL),IBX=IBX_$J("",IBT)_IBY_$J("",(IBL-$L(IBY)))
	I IBW=3 S IBZ=$E(IBZ,1,IBL),IBX=IBX_$J("",IBT)_IBZ_$J("",(IBL-$L(IBZ)))
ENDLN	S IBLC=IBLC+1,^TMP("IBRSP",$J,IBLC)=IBX
	K IBT,IBL
	Q

IBERSE
IBERSE	;ALB/ARH - BUILD CHECK-OFF SHEET  (350.7&350.71); 11/18/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	S IBERSCE=1 D HOME^%ZIS W @IOF,?22,"Build Check-Off Sheets",!!!!!!!
ENTG	;enter/edit group information (350.7)
	S DIC("A")="Select Check-Off Sheet: "
	S DIC="^IBE(350.7,",DIC(0)="AELQ" D ^DIC K DIC G:Y<0 ENDG S IBGRP=+Y
	I '$P(Y,"^",3) S DIR(0)="Y",DIR("A")="Edit this CHECK-OFF SHEET",DIR("B")="NO" D ^DIR K DIR G G4:$D(DIRUT),G3:'Y
G1	S DA=IBGRP,DIE="^IBE(350.7,",DR=".01:.04",DIE("NO^")="BACK" D ^DIE K DIE,DIC,DR,Y I '$D(DA) D DELGRP G G4
	K DA S IBX=$$FORMAT^IBEFUNC2(IBGRP,"") I $L($P($G(^IBE(350.7,IBGRP,0)),"^",1))>$P(IBX,"^",2) W !!,"Name too long, will not fit format entered.",!! G G1
G2	S DIC("A")="Select CLINIC: ",DIC="^SC(",DIC(0)="AEQ",DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC
	I Y'<0 S DA=+Y,DIE="^SC(",DR="25//"_$P(^IBE(350.7,+IBGRP,0),"^") D ^DIE K DIE,DIC,DR,DA,Y G G2
G3	D GDISP,CAT,PRINT
G4	W ! G ENTG
ENDG	K DA,DR,Y,X,IBGRP,IBPFN,IBX,IBERSCE,DTOUT,DUOUT,DIRUT,DIROUT
	Q
	;
CAT	;enter/edit sub-header information (350.71)
	S DIC("A")="Select SUB-HEADER: ",DIC("S")="I $D(^(0)),$P(^(0),U,3)=""S"",$P(^(0),U,4)="_IBGRP
	S DIC="^IBE(350.71,",DIC(0)="AEQL" D ^DIC K DIC G ENDC:Y<0 S IBCFN=+Y
	I '$P(Y,"^",3) S DIR(0)="Y",DIR("A")="    Edit SUB-HEADER",DIR("B")="NO" D ^DIR K DIR G C2:$D(DIRUT),C1:'Y
	S DA=IBCFN,DIE="^IBE(350.71,",DR=".03///S;.04////"_IBGRP_";.01;.02",DIE("NO^")="BACK" D ^DIE K DIE,DIC,DR,Y I '$D(DA) D DELCAT G C2
C1	D CDISP,PROC,GDISP
C2	G CAT
ENDC	K X,Y,IBCFN,DA,DUOUT,DTOUT
	Q
	;
PROC	;enter/edit procedure information (350.71)
	S DIR("A")="        Select a PROCEDURE",DIR("?")="^D CDISP^IBERSE"
	S DIR(0)="409.71,.01O" D ^DIR K DIR,DINUM G ENDP:Y<1 S IBCODE=+Y
	I $$CPTSTAT^IBEFUNC2(IBCODE,DT)'>1 W !!,?5,"CPT not active Nationally, Locally, or in Billing!",!! G PROC
	S IBNM=$P($G(^ICPT(IBCODE,0)),"^",2),IBPFN=$O(^IBE(350.71,"AP",IBCFN,IBCODE,0))
	I 'IBPFN K DD,DO S DIC(0)="",DIC="^IBE(350.71,",X=IBNM D FILE^DICN K DIC S IBPFN=+Y
	S DA=IBPFN,DIE="^IBE(350.71,",DR=".03///P;.05////"_IBCFN_";.06////"_IBCODE_";.01;.02",DIE("NO^")="BACK" D ^DIE K DIE,DIC,DR,DA,Y
	G PROC
ENDP	K X,Y,IBPFN,IBCODE,IBNM,DA,DUOUT,DTOUT,DIRUT,DIROUT
	Q
	;
GDISP	;display the groups data (350.7)
	S X="IBXCPTG" X ^%ZOSF("TEST") Q:'$T
	W:$D(IOF) @IOF,?25,"Ambulatory Surgery Check-Off Sheet Profile"
	S D0=IBGRP D ^IBXCPTG K X,DXS,D0
	Q
CDISP	;display the field data (350.71)
	S X="IBXCPTC" X ^%ZOSF("TEST") Q:'$T
	W:$D(IOF) @IOF,?25,"Ambulatory Surgery Sub-header Profile"
	S D0=IBCFN D ^IBXCPTC K X,DXS,D0
	Q
	;
DELGRP	;delete a sheets members - including the sheets sub-header members, and the entry in 44
	W !!,"Deleting SHEET members, please wait....",!!
	S IBPO="" F IBI=1:1 S IBPO=$O(^IBE(350.71,"AG",IBGRP,IBPO)) Q:IBPO=""  S IBCFN=$O(^(IBPO,"")) D DC1 S DIK="^IBE(350.71,",DA=IBCFN D ^DIK K DIK
	I $D(^SC("AF",IBGRP)) S IBCLN="" F  S IBCLN=$O(^SC("AF",IBGRP,IBCLN)) Q:IBCLN=""  S DA=IBCLN,DIE="^SC(",DR="25////@" D ^DIE K DIE,DIC,DR,DA,Y
ENDGP	K IBI,IBPO,IBCLN,DA
	Q
	;
DELCAT	;delete a sub-header's members
	W !!,"Deleting SUB-HEADER members, please wait...",!!
DC1	S IBPPO="" F IBJ=1:1 S IBPPO=$O(^IBE(350.71,"AS",IBCFN,IBPPO)) Q:IBPPO=""  S IBPFN=$O(^(IBPPO,"")) S DIK="^IBE(350.71,",DA=IBPFN D ^DIK K DIK
ENDCT	K IBJ,IBPPO,DA
	Q
	;
PRINT	;print the check-off sheet
	S DIR(0)="Y",DIR("A")="Print this SHEET",DIR("B")="NO" D ^DIR K DIR Q:'Y
	W !,"This report requires a 132 column printer."
	S %ZIS="QM" D ^%ZIS Q:POP
	I $D(IO("Q")) S ZTRTN="RQT^IBERSP",ZTSAVE("IBG("_IBGRP_")")="1",ZTDESC="A.S. Check-Off Sheet" D ^%ZTLOAD K IO("Q") D HOME^%ZIS Q
	U IO D CPT^IBERSP(IBGRP,"",0,DT,1) D ^%ZISC
	K ^TMP("IBRSC",$J),DTOUT,DUOUT,DIRUT,DIROUT,X,Y
	Q

IBERSI
IBERSI	;ALB/ARH - LIST/DELETE INACTIVE CODES FROM COS; 5/27/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;determine option from user
EN	S DIR("?")="List and/or delete CPT codes on Check-Off Sheets that are AMA inactive or that are Nationally, Locally, and Billing inactive."
	S DIR(0)="SO^1:LIST INACTIVE CODES ON CHECK-OFF SHEETS;2:DELETE INACTIVE CODES FROM CHECK-OFF SHEET;"
	D ^DIR K DIR G:$D(DIRUT)!'Y EXIT S IBOPT=Y
	D ^IBOCOSI:IBOPT=1,EN1:IBOPT=2 S IBOPT=0 G EN
	;
EXIT	K X,Y,DIRUT,DTOUT,DUOUT,DIROUT,IBOPT
	Q
	;
EN1	;delete CPTs from COS
	;***
	;S XRTL=$ZU(0),XRTN="IBERSI-1" D T0^%ZOSV ;start rt clock
	;
	S DIR("?")="Delete CPT codes on Check-Off Sheets that are AMA inactive"
	S DIR(0)="Y",DIR("A")="DELETE AMA INACTIVE CODES",DIR("B")="No"
	D ^DIR K DIR G:$D(DIRUT) END1 I Y=1 S IBAMA=1
	S DIR("?")="Delete CPT codes on Check-Off Sheets that are Nationally, Locally, and Billing inactive."
	S DIR(0)="Y",DIR("A")="DELETE OTHER INACTIVE CODES",DIR("B")="No"
	D ^DIR K DIR G:$D(DIRUT) END1 I Y=1 S IBNLB=1
	I $D(IBAMA)!($D(IBNLB)) W !,"Deleting" D DEL
END1	K X,Y,DIRUT,DTOUT,DUOUT,DIROUT,IBAMA,IBNLB
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERSI" D T1^%ZOSV ;stop rt clock
	Q
	;
DEL	;delete inactive codes from check-off sheets
	S IBCPT="" F  S IBCPT=$O(^IBE(350.71,"P",IBCPT)) Q:IBCPT=""  S IBX="" F  S IBX=$O(^IBE(350.71,"P",IBCPT,IBX)) Q:IBX=""  D
	. S IBLN=$G(^IBE(350.71,IBX,0)),IBSTAT=+$$CPTSTAT^IBEFUNC2(+$P(IBLN,"^",6)) Q:IBSTAT>1
	. I ($D(IBAMA)&('IBSTAT))!($D(IBNLB)&(IBSTAT)) S DIK="^IBE(350.71,",DA=IBX D ^DIK K DIK,DA
	K IBSTAT,IBCPT,IBX,IBLN
	Q

IBERSP
IBERSP	;ALB/ARH - CREATE/PRINT CHECK-OFF SHEET CPT LIST ; 11/5/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;request ambulatory surgery check-off sheet by group ie. not for an appointment
	;***
	;S XRTL=$ZU(0),XRTN="IBERSP-1" D T0^%ZOSV ;start rt clock
	D HOME^%ZIS W @IOF,!!,?20,"Print Clinic Check-Off Sheet",!!!
SLT	S DIC="^IBE(350.7,",DIC(0)="AEQ" D ^DIC K DIC I Y>0 S IBG(+Y)="" G SLT
	G:'$D(IBG) END
	W !!,"This report requires a 132 column printer." S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="RQT^IBERSP",ZTSAVE("IBG(")="",ZTDESC="A.S. Check-Off Sheets" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G END
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERSP" D T1^%ZOSV ;stop rt clock
	D RQT
END	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERSP" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K DTOUT,DUOUT,IBG,X,Y D ^%ZISC
	Q
	;(possible) external entry pt.
	;print requested check-off sheets for groups in IBG (without patient data, with box)
RQT	;
	;***
	;S XRTL=$ZU(0),XRTN="IBERSP-2" D T0^%ZOSV ;start rt clock
	S IBGRP="" F  S IBGRP=$O(IBG(IBGRP)) Q:IBGRP=""  D CPT(IBGRP,"",0,DT,1) W @IOF Q:$$STOP^IBERS1
	K IBG,IBGRP,^TMP("IBRSC",$J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBERSP" D T1^%ZOSV ;stop rt clock
	G END
	;
	;external entry point
CPT(GRP,DIV,TOF,ADT,BOX)	;prints the CPT list for particular group
	;print device must be defined, opened and the paper set on the line that printing is to begin on
	;does not close the device when done or set printer to TOF
	;Inputs:  GRP = the IFN (350.7) of the group to be printed
	;         DIV = division of clinic, needed for charge calculation
	;          DT = date of appointment, needed for charge calculation (DT if "")
	;         TOF = top of form, the line number at which to begin printing
	;         BOX = true if a card box should be printed in upper left corner
	;first creates a temp file in sequential format, then prints that file in column format
	;whoever calls this must delete ^TMP("IBRSC") themselves after they have printed all lists,
	;it is not killed here to speed up CPT lists by already having them partially formated for reuse
	D:'$D(^TMP("IBRSC",$J,GRP)) CREATE^IBERSP1 Q:'$D(^TMP("IBRSC",$J,GRP))
	I BOX D:'$D(^TMP("IBRSC",$J,"B")) BOX^IBERSP1 D PRNTBX
	D PRINT
	Q
	;
PRINT	;reformats list into multiple columns for specific TOF then prints it out
	N CAT,COL,PG,GCOL,HDR,LN,CW,MAXLN,MINLN,LINE,CONT,CHDR,SL,I,J,X,Y,N
	Q:'$D(^TMP("IBRSC",$J,+GRP))
	S SL=IOSL,CAT=0,(MAXLN,LN,MINLN,COL)=1,PG=$S(BOX:1,1:0),GCOL=^TMP("IBRSC",$J,GRP),HDR=^TMP("IBRSC",$J,GRP,0)
	S HDR="CPT Codes for "_HDR,HDR=$J(HDR,IOM/2+($L(HDR)\2)) D:'BOX HDR
	F I=1:1 S CAT=$O(^TMP("IBRSC",$J,GRP,CAT)) Q:CAT=""  D
	. S CONT=0 F  Q:SL'<(LN+TOF+3)  D NEWCOL
	. S CHDR=^TMP("IBRSC",$J,GRP,CAT,0),CW=$L(CHDR),N=0 F X="",CHDR D PL
	. F J=1:1 S N=$O(^TMP("IBRSC",$J,GRP,CAT,N)) Q:N=""  D
	.. S LINE=^(N) F  Q:SL>(LN+TOF)  S CONT=1 D NEWCOL
	.. S X=LINE D PL
	D P1 K ^TMP("IBRSC",$J,"F")
	Q
	;
PL	;sets each formated line into temp file, X is added to the end of the current line,
	;then the line is padded with spaces to the end of the column (plus # IC spaces)
	S Y=$G(^TMP("IBRSC",$J,"F",PG,LN)),Y=Y_$J("",((CW*(COL-1))-$L(Y)))
	S ^TMP("IBRSC",$J,"F",PG,LN)=Y_X,LN=LN+1 S:LN>MAXLN MAXLN=LN
	Q
	;
NEWCOL	;go to next column, or next page
	S COL=COL+1 D:COL>GCOL HDR S LN=MINLN I CONT F X="",CHDR D PL
	Q
	;
HDR	;set GROUP header into the temp file
	S LN=1,PG=PG+1 I COL>GCOL S TOF=0
	S Y=HDR,^TMP("IBRSC",$J,"F",PG,LN)=Y,LN=LN+1,COL=1,MINLN=LN
	Q
	;
P1	;print each line of finally formated temp file
	S X="" F I=1:1 S X=$O(^TMP("IBRSC",$J,"F",X)) Q:X'?1N.N  W:X>1 @IOF S Y="" F J=1:1 S Y=$O(^TMP("IBRSC",$J,"F",X,Y)) Q:Y=""  W !,^TMP("IBRSC",$J,"F",X,Y)
	Q
	;
PRNTBX	;print a box in upper left corner and title
	N HDR,CTR,IBLG,I5,I6,X,I
	S HDR=^TMP("IBRSC",$J,GRP,0),CTR=$G(^TMP("IBRSC",$J,"B")),IBLG=$S(($L(HDR)+30)>CTR:1,1:0),CTR=CTR\2
	S I6=$S(IBLG:$J(HDR,CTR+($L(HDR)\2)),1:"")
	S I5=$S(IBLG:$J("CPT Codes for ",(CTR+7)),1:$J("CPT Codes for "_HDR,CTR+7+($L(HDR)\2)))
	S X="" F I=1:1 S X=$O(^TMP("IBRSC",$J,"B",X)) Q:X=""  W !,^TMP("IBRSC",$J,"B",X)_$S($D(@("I"_I)):@("I"_I),1:"")
	S TOF=(TOF+I+1)
	Q

IBERSP1
IBERSP1	;ALB/ARH - CREATE CHECK-OFF SHEET CPT LIST (CONTINUED) ; 11/5/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;continuation of COS print function:   creates the preliminary forms that IBERSP then reformats and prints
	;creates partially formated files that can then be reformated to fit any TOF to save time
	;only called if these do not already exist ie. may not be called for every COS print
	;external entry pt.
CREATE	;create linear temp file of CPT's for GRP, array can be reused each time GRP is printed
	N GDATA,DC,LF,CW,PN,GPO,IFN,DATA,NAME,CODE,CD,CHG,CPO,PFN,IC,I,J,X,Y
	Q:'$D(^IBE(350.7,GRP,0))!('$D(^IBE(350.71,"AG",GRP)))
	S GDATA=^IBE(350.7,GRP,0),DC=$P(GDATA,"^",2),LF=$P(GDATA,"^",4),ADT=$S(+ADT:ADT,1:DT)
	S X=$$FORMAT^IBEFUNC2(GRP),IC=$P(X,"^",1),CW=$P(X,"^",2),PN=$P(X,"^",3)
	S ^TMP("IBRSC",$J,GRP,0)=$P(GDATA,"^",1),^TMP("IBRSC",$J,GRP)=$P(GDATA,"^",3)
	S GPO="" F I=1:1 S GPO=$O(^IBE(350.71,"AG",GRP,GPO)) Q:GPO=""  S IFN=+$O(^IBE(350.71,"AG",GRP,GPO,"")) S DATA=$G(^IBE(350.71,IFN,0)) D:DATA'="" C1
	S X="" F Y=1:1:(CW-12) S X=X_"_"
	S X="OTHER PROC: "_X,J=0 D LINE
	Q
	;
C1	;set GROUPs catigories and procedures into temp file
	S NAME=$E($P(DATA,"^",1),1,CW),CPO="",X=$J(NAME,CW/2+($L(NAME)/2)),J=0 D LINE
	F J=1:1 S CPO=$O(^IBE(350.71,"AS",IFN,CPO)) Q:CPO=""  S PFN=+$O(^IBE(350.71,"AS",IFN,CPO,"")) S DATA=$G(^IBE(350.71,PFN,0)) D:DATA'="" C2
	Q
	;
C2	;set each procedure into temp file
	S NAME=$E($P(DATA,"^",1),1,PN),NAME=NAME_$J("",(PN-$L(NAME))),CD=+$P(DATA,"^",6),CODE=$P($G(^ICPT(CD,0)),"^",1),CHG=""
	S:LF=1 X=CODE_"  "_NAME S:LF'=1 X=NAME_"  "_CODE
	I DC S CHG=$$CPTCHG^IBEFUNC1(CD,DIV,ADT),X=X_"  "_$S(CHG="":$J(CHG,8),1:$J(CHG,8,2))
	S X=X_"  (   )" D LINE
	Q
	;
LINE	;saves line in the linear temp file, padded depending on GRP format
	S ^TMP("IBRSC",$J,GRP,I,J)=$J("",IC)_X_$J("",(CW-$L(X)+IC))
	Q
	;
	;external entry pt.
BOX	;create card box and header
	N CTR,IC,HLN,VLN,I,X
	S BOX=12,CTR=(IOM/2),IC=4 S ^TMP("IBRSC",$J,"B")=CTR
	S X=CTR-IC,HLN="" F I=1:1:X S HLN=HLN_"="
	S VLN=$J("",(CTR-2))_"||",HLN=$J("",IC)_HLN_$J("",IC) F I=1:1:BOX S ^TMP("IBRSC",$J,"B",I)=VLN_$J("",IC)
	S ^TMP("IBRSC",$J,"B",I+1)=HLN
	S ^(I)=^TMP("IBRSC",$J,"B",I)_"Date:",^(4)=^TMP("IBRSC",$J,"B",4)_$J("Ambulatory Surgery Check-Off Sheet",(CTR\2)+17)
	Q

IBESTAT
IBESTAT	;ALB/AAS - INTEGRATED BILLING - FILER STATUS ; 27-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
%	;
	;***
	;S XRTL=$ZU(0),XRTN="IBESTAT-1" D T0^%ZOSV ;start rt clock
	;
	D HOME^%ZIS
	;
	W @IOF,"Integrated Billing Status"
	S X="" S $P(X,"=",IOM)="" W !,X
	S X=$S($D(^IBE(350.9,1,0)):^(0),1:"")
SITE	;
	W !,"IB Facility Name ........................ ",$S($D(^DIC(4,+$P(X,"^",2),0)):$P(^(0),"^"),1:"")
	W !,"IB Facility Number ...................... ",$S($D(^DIC(4,+$P(X,"^",2),99)):$P(^(99),"^"),1:"")
	W !
PARAM	W !,"File in Background ...................... ",$S($P(X,"^",3):"YES",1:"NO")
	W !,"Filer UCI,VOL ........................... ",$P(X,"^",7)
	W !,"Filer Hang Time ......................... ",$P(X,"^",8)_" Seconds"
	W !,"Background Error Mail Group ............. ",$S($D(^XMB(3.8,+$P(X,"^",9),0)):$P(^(0),"^"),1:"")
	;
	W !
FILER	I +$P(X,"^",4) W !,"Filer Appears to be Running!",!
	E  W !,"Filer does not Appear to be Running!",!
	W !,"Filer currently queued to run ........... ",$S($P(X,"^",10):"YES",1:"NO")
	S C=0 F I=0:0 S I=$O(^IB("APOST",I)) Q:'I  S C=C+1
	W !,"Number Transactions in Queue ............ ",C
	W !,"Filer Started on ........................ " S Y=$P(X,"^",4) D DT^DIQ
	W !,"Filer Stopped on ........................ " S Y=$P(X,"^",5) D DT^DIQ
	W !,"Filer last processed transaction on ..... " S Y=$P(X,"^",6) D DT^DIQ
	W !
	S C=0 F I=DT:0 S I=$O(^IB("D",I)) Q:'I!(I>(DT+.24))  F J=0:0 S J=$O(^IB("D",I,J)) Q:'J  S C=C+1
	W !,"Transactions filed since midnight ....... ",C
	;
	D MENU^IBECK
	F I=$Y:1:(IOSL-4) W !
	S DIR(0)="E" D ^DIR
	;
END	K %H,C,I,J,X,Y,DIR
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBESTAT" D T1^%ZOSV ;stop rt clock
	Q

IBETIME
IBETIME	;ALB/CJM/AAS - Provides entry points to TO^%ZOSV and T1^%ZOSV for ease of turning off data collection ;Sep 16,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;VAXDSM ONLY
	;
T0	;start clock
	K IBXRTN Q
	;Q:'$D(IBXRTN)
	;S XRTN=IBXRTN_"-"_$S($D(ZTQUEUED):2,1:1)
	;D T0ZOSV ;T0^%ZOSV
	Q
	;
T1	;stop clock
	Q
	;N XRTL
	;I $D(XRT0),$D(XRTN) S XRTL=$ZU(0) D T1ZOSV ;T1^%ZOSV
	;K XRT0,XRTN
	Q
	;
	;
T0ZOSV	; start RT clock ; KERNEL 7 LOGIC for VAXDSM
	;D T0^%ZOSV
	Q
	;
T1ZOSV	; store RT datum w/ZHDIF ; KERNEL 7 LOGIC for VAXDSM
	;D T1^%ZOSV
	Q

IBINI001
IBINI001	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(2,0,"GL")
	;;=^DPT(
	;;^DIC("B","PATIENT",2)
	;;=
	;;^DIC(2,"%",0)
	;;=^1.005^6^6
	;;^DIC(2,"%",1,0)
	;;=LR
	;;^DIC(2,"%",2,0)
	;;=RA
	;;^DIC(2,"%",3,0)
	;;=PS
	;;^DIC(2,"%",4,0)
	;;=DG
	;;^DIC(2,"%",5,0)
	;;=SD
	;;^DIC(2,"%",6,0)
	;;=RT
	;;^DIC(2,"%","B","DG",4)
	;;=
	;;^DIC(2,"%","B","LR",1)
	;;=
	;;^DIC(2,"%","B","PS",3)
	;;=
	;;^DIC(2,"%","B","RA",2)
	;;=
	;;^DIC(2,"%","B","RT",6)
	;;=
	;;^DIC(2,"%","B","SD",5)
	;;=
	;;^DIC(2,"%D",0)
	;;=^^16^16^2940225^^^^
	;;^DIC(2,"%D",1,0)
	;;=The PATIENT file contains all the patients followed by the medical center/
	;;^DIC(2,"%D",2,0)
	;;=Outpatient clinic.  At a minimum each patient entry must have a NAME, DATE
	;;^DIC(2,"%D",3,0)
	;;=OF BIRTH and SOCIAL SECURITY NUMBER.  In order to add a new patient to the
	;;^DIC(2,"%D",4,0)
	;;=PATIENT file the user must also indicate whether or not the patient is
	;;^DIC(2,"%D",5,0)
	;;=requesting to receive care as a VETERAN of the U.S. Armed Forces and
	;;^DIC(2,"%D",6,0)
	;;=specify the TYPE of patient being added to the system.  For the most
	;;^DIC(2,"%D",7,0)
	;;=part the information contained in this file is demographic in nature,
	;;^DIC(2,"%D",8,0)
	;;=i.e., address, employment, service history, etc., however data
	;;^DIC(2,"%D",9,0)
	;;=concerning admissions, appointments,etc., is also stored in this file.
	;;^DIC(2,"%D",10,0)
	;;=The ADMISSION sub-field is scheduled to be moved into the new PATIENT
	;;^DIC(2,"%D",11,0)
	;;=MOVEMENT file by the end of calendar year 1989.  Care should be used
	;;^DIC(2,"%D",12,0)
	;;=when removing a patient from the PATIENT file since virtually all
	;;^DIC(2,"%D",13,0)
	;;=other DHCP modules do utilize data from this file.  Of the many fields
	;;^DIC(2,"%D",14,0)
	;;=in the file you will note that many are preceeded by an asterisk.
	;;^DIC(2,"%D",15,0)
	;;=Those fields are scheduled to be removed from the file due to either
	;;^DIC(2,"%D",16,0)
	;;=lack of use or replacement by another field/file in the next release.
	;;^DD(2,0)
	;;=FIELD^NL^11500.03^309
	;;^DD(2,0,"ACT")
	;;=I '$D(DICR) D ^DGSEC
	;;^DD(2,0,"DDA")
	;;=N
	;;^DD(2,0,"DIC")
	;;=DPTLK
	;;^DD(2,0,"DT")
	;;=2930629
	;;^DD(2,0,"ID",.03)
	;;=W:$D(^("0")) "   ",$E($P(^("0"),U,3),4,5)_"-"_$E($P(^("0"),U,3),6,7)_"-"_$E($P(^("0"),U,3),2,3)
	;;^DD(2,0,"ID",.09)
	;;=W "   ",$P(^(0),U,9)
	;;^DD(2,0,"ID",.301)
	;;=W:$D(^(.3)) "   ",@("$P($P($C(59)_$S($D(^DD(2,.301,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(.3),U,1)_"":"",2),$C(59),1)")
	;;^DD(2,0,"ID",391)
	;;=S %I=Y,Y=$S('$D(^("TYPE")):"",$D(^DG(391,+$P(^("TYPE"),U,1),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(391,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(2,0,"ID",1901)
	;;=W ""
	;;^DD(2,0,"IX","AAP",2,.1041)
	;;=
	;;^DD(2,0,"IX","AB",2.312,.01)
	;;=
	;;^DD(2,0,"IX","ABUL",2,.01)
	;;=
	;;^DD(2,0,"IX","AC",2.011,3)
	;;=
	;;^DD(2,0,"IX","ACA",2,.105)
	;;=
	;;^DD(2,0,"IX","ACB",2,.31)
	;;=
	;;^DD(2,0,"IX","ACFL2",2,.312)
	;;=
	;;^DD(2,0,"IX","ACFL4",2,.314)
	;;=
	;;^DD(2,0,"IX","ACIVZIP",2,.2928)
	;;=
	;;^DD(2,0,"IX","ACIVZIP4",2,.290012)
	;;=
	;;^DD(2,0,"IX","ACN",2,.1)
	;;=
	;;^DD(2,0,"IX","ACOL",2,.3601)
	;;=
	;;^DD(2,0,"IX","ACS",2,.14)
	;;=
	;;^DD(2,0,"IX","AD",2,.09)
	;;=
	;;^DD(2,0,"IX","AD1ZIP",2,.348)
	;;=
	;;^DD(2,0,"IX","AD1ZIP4",2,.2202)
	;;=
	;;^DD(2,0,"IX","ADA",2.101,50)
	;;=
	;;^DD(2,0,"IX","ADI",2.101,.01)
	;;=
	;;^DD(2,0,"IX","ADIS",2.101,.01)
	;;=
	;;^DD(2,0,"IX","ADIS4",2.101,5)
	;;=
	;;^DD(2,0,"IX","ADOB",2,.03)
	;;=
	;;^DD(2,0,"IX","AE",2,.326)
	;;=
	;;^DD(2,0,"IX","AEB",2.011,.01)
	;;=
	;;^DD(2,0,"IX","AEC1ZIP",2,.338)
	;;=

IBINI002
IBINI002	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2,0,"IX","AEC1ZIP4",2,.2201)
	;;=
	;;^DD(2,0,"IX","AEC2ZIP4",2,.2204)
	;;=
	;;^DD(2,0,"IX","AEL",2,.361)
	;;=
	;;^DD(2,0,"IX","AEL1",2.0361,.01)
	;;=
	;;^DD(2,0,"IX","AEM1ZIP",2,.3118)
	;;=
	;;^DD(2,0,"IX","AEM1ZIP4",2,.2205)
	;;=
	;;^DD(2,0,"IX","AEXP",2,.351)
	;;=
	;;^DD(2,0,"IX","AEXP1",2,.351)
	;;=
	;;^DD(2,0,"IX","AF",2,.3292)
	;;=
	;;^DD(2,0,"IX","AG",2,.361)
	;;=
	;;^DD(2,0,"IX","AGU1",2,.1217)
	;;=
	;;^DD(2,0,"IX","AH",2,.362)
	;;=
	;;^DD(2,0,"IX","AI",2,.32102)
	;;=
	;;^DD(2,0,"IX","AJ",2,.36205)
	;;=
	;;^DD(2,0,"IX","AK",2,.32103)
	;;=
	;;^DD(2,0,"IX","AL",2,.36215)
	;;=
	;;^DD(2,0,"IX","AM",2,.36235)
	;;=
	;;^DD(2,0,"IX","AMT",2,.381)
	;;=
	;;^DD(2,0,"IX","AN",2,1901)
	;;=
	;;^DD(2,0,"IX","ANEW",2,.083)
	;;=
	;;^DD(2,0,"IX","ANK1ZIP",2,.218)
	;;=
	;;^DD(2,0,"IX","ANK1ZIP4",2,.2207)
	;;=
	;;^DD(2,0,"IX","ANK2ZIP",2,.2198)
	;;=
	;;^DD(2,0,"IX","ANK2ZIP4",2,.2203)
	;;=
	;;^DD(2,0,"IX","ANURS",2,.1)
	;;=
	;;^DD(2,0,"IX","AO",2.0361,.01)
	;;=
	;;^DD(2,0,"IX","AODS1",2,.09)
	;;=
	;;^DD(2,0,"IX","AODS111",2,.111)
	;;=
	;;^DD(2,0,"IX","AODS112",2,.112)
	;;=
	;;^DD(2,0,"IX","AODS113",2,.113)
	;;=
	;;^DD(2,0,"IX","AODS114",2,.114)
	;;=
	;;^DD(2,0,"IX","AODS115",2,.115)
	;;=
	;;^DD(2,0,"IX","AODS116",2,.116)
	;;=
	;;^DD(2,0,"IX","AODS117",2,.117)
	;;=
	;;^DD(2,0,"IX","AODS2",2,.01)
	;;=
	;;^DD(2,0,"IX","AODS3",2,.03)
	;;=
	;;^DD(2,0,"IX","AODS4",2,.325)
	;;=
	;;^DD(2,0,"IX","AODS5",2,11500.03)
	;;=
	;;^DD(2,0,"IX","AODS6",2,11500.02)
	;;=
	;;^DD(2,0,"IX","AODS7",2,401.3)
	;;=
	;;^DD(2,0,"IX","AODSR",2.101,11500.02)
	;;=
	;;^DD(2,0,"IX","AOERR",2,.351)
	;;=
	;;^DD(2,0,"IX","AP",2,.302)
	;;=
	;;^DD(2,0,"IX","APOS",2,.323)
	;;=
	;;^DD(2,0,"IX","APR",2,.104)
	;;=
	;;^DD(2,0,"IX","APSJD",2,.351)
	;;=
	;;^DD(2,0,"IX","ARCDTH",2,.351)
	;;=
	;;^DD(2,0,"IX","AS",2,401.3)
	;;=
	;;^DD(2,0,"IX","ASCP",2,.302)
	;;=
	;;^DD(2,0,"IX","ASDCN",2.98,3)
	;;=
	;;^DD(2,0,"IX","ASP1ZIP",2,.257)
	;;=
	;;^DD(2,0,"IX","ASP1ZIP4",2,.2206)
	;;=
	;;^DD(2,0,"IX","ASX",2,.02)
	;;=
	;;^DD(2,0,"IX","ATR",2,.103)
	;;=
	;;^DD(2,0,"IX","ATZIP",2,.1216)
	;;=
	;;^DD(2,0,"IX","ATZIP4",2,.12112)
	;;=
	;;^DD(2,0,"IX","AVADPT6",2,.09)
	;;=
	;;^DD(2,0,"IX","AVAZIP",2,.2918)
	;;=
	;;^DD(2,0,"IX","AVAZIP4",2,.29013)
	;;=
	;;^DD(2,0,"IX","AXR",2,.211)
	;;=
	;;^DD(2,0,"IX","AXR1",2,.2191)
	;;=
	;;^DD(2,0,"IX","AXR10",2,.32945)
	;;=
	;;^DD(2,0,"IX","AXR11",2,.12105)
	;;=
	;;^DD(2,0,"IX","AXR12",2,.1211)
	;;=
	;;^DD(2,0,"IX","AXR13",2,.1212)
	;;=
	;;^DD(2,0,"IX","AXR14",2,.213)
	;;=
	;;^DD(2,0,"IX","AXR15",2,.214)
	;;=
	;;^DD(2,0,"IX","AXR16",2,.2193)
	;;=
	;;^DD(2,0,"IX","AXR17",2,.2194)
	;;=
	;;^DD(2,0,"IX","AXR18",2,.252)
	;;=
	;;^DD(2,0,"IX","AXR19",2,.253)
	;;=
	;;^DD(2,0,"IX","AXR2",2,.251)
	;;=
	;;^DD(2,0,"IX","AXR20",2,.3113)
	;;=
	;;^DD(2,0,"IX","AXR21",2,.3114)
	;;=
	;;^DD(2,0,"IX","AXR22",2,.3313)
	;;=
	;;^DD(2,0,"IX","AXR23",2,.3314)
	;;=
	;;^DD(2,0,"IX","AXR24",2,.333)
	;;=
	;;^DD(2,0,"IX","AXR25",2,.334)
	;;=
	;;^DD(2,0,"IX","AXR26",2,.343)
	;;=
	;;^DD(2,0,"IX","AXR27",2,.344)
	;;=
	;;^DD(2,0,"IX","AXR28",2,.361)
	;;=
	;;^DD(2,0,"IX","AXR29",2,.111)
	;;=
	;;^DD(2,0,"IX","AXR3",2,.3111)
	;;=
	;;^DD(2,0,"IX","AXR30",2,.112)
	;;=
	;;^DD(2,0,"IX","AXR4",2,.331)
	;;=
	;;^DD(2,0,"IX","AXR5",2,.3311)
	;;=
	;;^DD(2,0,"IX","AXR6",2,.341)
	;;=
	;;^DD(2,0,"IX","AXR7",2,.152)
	;;=
	;;^DD(2,0,"IX","AXR8",2,.153)
	;;=
	;;^DD(2,0,"IX","AXR9",2,.3285)
	;;=
	;;^DD(2,0,"IX","AZIP",2,.116)
	;;=
	;;^DD(2,0,"IX","AZIP4",2,.1112)
	;;=
	;;^DD(2,0,"IX","B",2,.01)
	;;=
	;;^DD(2,0,"IX","B",2.01,.01)
	;;=
	;;^DD(2,0,"IX","BEN",2,.36205)
	;;=
	;;^DD(2,0,"IX","BS",2,.09)
	;;=
	;;^DD(2,0,"IX","BS5",2,.01)
	;;=
	;;^DD(2,0,"IX","BS5",2,.09)
	;;=

IBINI003
IBINI003	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2,0,"IX","CHK1",2,.36205)
	;;=
	;;^DD(2,0,"IX","CHK2",2,.36215)
	;;=
	;;^DD(2,0,"IX","CHK3",2,.36235)
	;;=
	;;^DD(2,0,"IX","CHK4",2,.3025)
	;;=
	;;^DD(2,0,"IX","CN",2,.1)
	;;=
	;;^DD(2,0,"IX","IVM01",2,.01)
	;;=
	;;^DD(2,0,"IX","IVM02",2,.02)
	;;=
	;;^DD(2,0,"IX","IVM03",2,.03)
	;;=
	;;^DD(2,0,"IX","IVM09",2,.09)
	;;=
	;;^DD(2,0,"IX","IVM111",2,.111)
	;;=
	;;^DD(2,0,"IX","IVM1112",2,.1112)
	;;=
	;;^DD(2,0,"IX","IVM112",2,.112)
	;;=
	;;^DD(2,0,"IX","IVM113",2,.113)
	;;=
	;;^DD(2,0,"IX","IVM114",2,.114)
	;;=
	;;^DD(2,0,"IX","IVM115",2,.115)
	;;=
	;;^DD(2,0,"IX","IVM117",2,.117)
	;;=
	;;^DD(2,0,"IX","IVM131",2,.131)
	;;=
	;;^DD(2,0,"IX","IVM132",2,.132)
	;;=
	;;^DD(2,0,"IX","IVM351",2,.351)
	;;=
	;;^DD(2,0,"IX","LD",2,.107)
	;;=
	;;^DD(2,0,"IX","MAC",2,.31115)
	;;=
	;;^DD(2,0,"IX","PID",2.0361,.03)
	;;=
	;;^DD(2,0,"IX","RM",2,.101)
	;;=
	;;^DD(2,0,"IX","SSN",2,.09)
	;;=
	;;^DD(2,0,"IX","ZEC2ZIP",2,.3318)
	;;=
	;;^DD(2,0,"NM","PATIENT")
	;;=
	;;^DD(2,0,"PT",2,.082)
	;;=
	;;^DD(2,0,"PT",2,.3601)
	;;=
	;;^DD(2,0,"PT",15,.01)
	;;=
	;;^DD(2,0,"PT",15,.02)
	;;=
	;;^DD(2,0,"PT",15,999999903)
	;;=
	;;^DD(2,0,"PT",38.1,.01)
	;;=
	;;^DD(2,0,"PT",38.5,.01)
	;;=
	;;^DD(2,0,"PT",39.13,.01)
	;;=
	;;^DD(2,0,"PT",39.5,.01)
	;;=
	;;^DD(2,0,"PT",40.1,.01)
	;;=
	;;^DD(2,0,"PT",40.15,.01)
	;;=
	;;^DD(2,0,"PT",41.1,.01)
	;;=
	;;^DD(2,0,"PT",41.2,.01)
	;;=
	;;^DD(2,0,"PT",41.3,.01)
	;;=
	;;^DD(2,0,"PT",42.51,.01)
	;;=
	;;^DD(2,0,"PT",43,213)
	;;=
	;;^DD(2,0,"PT",43.5,.05)
	;;=
	;;^DD(2,0,"PT",44.003,.01)
	;;=
	;;^DD(2,0,"PT",44.007,.01)
	;;=
	;;^DD(2,0,"PT",45,.01)
	;;=
	;;^DD(2,0,"PT",45.5,1)
	;;=
	;;^DD(2,0,"PT",45.85,.01)
	;;=
	;;^DD(2,0,"PT",45.87,.09)
	;;=
	;;^DD(2,0,"PT",45.9,.01)
	;;=
	;;^DD(2,0,"PT",50.0731,7)
	;;=
	;;^DD(2,0,"PT",50.804,.01)
	;;=
	;;^DD(2,0,"PT",52,2)
	;;=
	;;^DD(2,0,"PT",52.4,1)
	;;=
	;;^DD(2,0,"PT",52.41,1)
	;;=
	;;^DD(2,0,"PT",52.5,.03)
	;;=
	;;^DD(2,0,"PT",52.8,1)
	;;=
	;;^DD(2,0,"PT",52.9001,.01)
	;;=
	;;^DD(2,0,"PT",55,.01)
	;;=
	;;^DD(2,0,"PT",55.06,.5)
	;;=
	;;^DD(2,0,"PT",70,.01)
	;;=
	;;^DD(2,0,"PT",74,2)
	;;=
	;;^DD(2,0,"PT",74.4,9)
	;;=
	;;^DD(2,0,"PT",75.1,.01)
	;;=
	;;^DD(2,0,"PT",100,.02)
	;;=
	;;^DD(2,0,"PT",100.2,.01)
	;;=
	;;^DD(2,0,"PT",100.2101,.01)
	;;=
	;;^DD(2,0,"PT",121,.02)
	;;=
	;;^DD(2,0,"PT",123,.02)
	;;=
	;;^DD(2,0,"PT",161,.01)
	;;=
	;;^DD(2,0,"PT",161.26,.01)
	;;=
	;;^DD(2,0,"PT",161.5,2)
	;;=
	;;^DD(2,0,"PT",161.83,.01)
	;;=
	;;^DD(2,0,"PT",162,.01)
	;;=
	;;^DD(2,0,"PT",162.2,3)
	;;=
	;;^DD(2,0,"PT",162.4,2)
	;;=
	;;^DD(2,0,"PT",162.7,2)
	;;=
	;;^DD(2,0,"PT",162.7,23)
	;;=
	;;^DD(2,0,"PT",163,.01)
	;;=
	;;^DD(2,0,"PT",190,.01)
	;;=
	;;^DD(2,0,"PT",190,9)
	;;=
	;;^DD(2,0,"PT",194.31,.01)
	;;=
	;;^DD(2,0,"PT",301.5,.01)
	;;=
	;;^DD(2,0,"PT",350,.02)
	;;=
	;;^DD(2,0,"PT",350.9,4.02)
	;;=
	;;^DD(2,0,"PT",351,.02)
	;;=
	;;^DD(2,0,"PT",351.1,.01)
	;;=
	;;^DD(2,0,"PT",351.2,.01)
	;;=
	;;^DD(2,0,"PT",351.3,.01)
	;;=
	;;^DD(2,0,"PT",354,.01)
	;;=
	;;^DD(2,0,"PT",355.3,.1)
	;;=
	;;^DD(2,0,"PT",355.5,.02)
	;;=
	;;^DD(2,0,"PT",355.7,.02)
	;;=
	;;^DD(2,0,"PT",356,.02)
	;;=
	;;^DD(2,0,"PT",356.2,.05)
	;;=
	;;^DD(2,0,"PT",391.51,2)
	;;=
	;;^DD(2,0,"PT",392,2)
	;;=
	;;^DD(2,0,"PT",392.2,2)
	;;=
	;;^DD(2,0,"PT",393,.01)
	;;=
	;;^DD(2,0,"PT",394,8)
	;;=
	;;^DD(2,0,"PT",394.4,5)
	;;=
	;;^DD(2,0,"PT",395.5,.01)
	;;=
	;;^DD(2,0,"PT",395.7,.01)
	;;=
	;;^DD(2,0,"PT",396,.01)
	;;=
	;;^DD(2,0,"PT",396.2,.01)
	;;=
	;;^DD(2,0,"PT",396.3,.01)
	;;=
	;;^DD(2,0,"PT",399,.02)
	;;=
	;;^DD(2,0,"PT",405,.03)
	;;=
	;;^DD(2,0,"PT",408.12,.01)
	;;=
	;;^DD(2,0,"PT",408.12,.03)
	;;=
	;;^DD(2,0,"PT",408.22,.01)
	;;=
	;;^DD(2,0,"PT",408.31,.02)
	;;=
	;;^DD(2,0,"PT",408.41,.04)
	;;=
	;;^DD(2,0,"PT",409.5,2)
	;;=

IBINI004
IBINI004	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2,0,"PT",409.68,.02)
	;;=
	;;^DD(2,0,"PT",412,.01)
	;;=
	;;^DD(2,0,"PT",430,7)
	;;=
	;;^DD(2,0,"PT",435.01,.03)
	;;=
	;;^DD(2,0,"PT",440.2,.01)
	;;=
	;;^DD(2,0,"PT",513.8,.01)
	;;=
	;;^DD(2,0,"PT",663.4,1)
	;;=
	;;^DD(2,0,"PT",665,.01)
	;;=
	;;^DD(2,0,"PT",665.1,1)
	;;=
	;;^DD(2,0,"PT",665.4,.01)
	;;=
	;;^DD(2,0,"PT",668,1)
	;;=
	;;^DD(2,0,"PT",11090.1,.16)
	;;=
	;;^DD(2,0,"PT",11200,.02)
	;;=
	;;^DD(2,0,"PT",11400.2,.01)
	;;=
	;;^DD(2,0,"PT",11500.1,.12)
	;;=
	;;^DD(2,0,"PT",11600.3,.24)
	;;=
	;;^DD(2,0,"PT",50000,.01)
	;;=
	;;^DD(2,0,"PT",500011,.01)
	;;=
	;;^DD(2,0,"PT",500014,2)
	;;=
	;;^DD(2,0,"PT",500031,.01)
	;;=
	;;^DD(2,0,"PT",500032,.01)
	;;=
	;;^DD(2,0,"PT",500038,.01)
	;;=
	;;^DD(2,0,"PT",500042,.02)
	;;=
	;;^DD(2,0,"PT",500044.01,.01)
	;;=
	;;^DD(2,0,"PT",500044.02,.01)
	;;=
	;;^DD(2,0,"PT",500047,.01)
	;;=
	;;^DD(2,0,"PT",500057,.01)
	;;=
	;;^DD(2,0,"PT",9000001,.01)
	;;=
	;;^DD(2,0,"W")
	;;=W ?44,$P(^(0),U,9)
	;;^DD(2,.01,0)
	;;=NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3)!(X?1P.E)!(X'?1U.ANP)!(X'[",") X I $D(X) D UP^DGHELP S Y=", " S:$D(X)#2 X=$$CLEAN^DPTLK(X)
	;;^DD(2,.01,.1)
	;;=
	;;^DD(2,.01,1,0)
	;;=^.1^^-1
	;;^DD(2,.01,1,1,0)
	;;=2^B
	;;^DD(2,.01,1,1,1)
	;;=S ^DPT("B",$E(X,1,30),DA)=""
	;;^DD(2,.01,1,1,2)
	;;=K ^DPT("B",$E(X,1,30),DA)
	;;^DD(2,.01,1,2,0)
	;;=2^BS5^MUMPS
	;;^DD(2,.01,1,2,1)
	;;=Q:$P(^DPT(DA,0),U,9)']""  S ^DPT("BS5",$E(X,1)_$E($P(^(0),U,9),6,9),DA)=""
	;;^DD(2,.01,1,2,2)
	;;=Q:$P(^DPT(DA,0),U,9)']""  K ^DPT("BS5",$E(X,1)_$E($P(^(0),U,9),6,9),DA)
	;;^DD(2,.01,1,4,0)
	;;=2^AODS2^MUMPS
	;;^DD(2,.01,1,4,1)
	;;=S A1B2TAG="PAT" D ^A1B2XFR
	;;^DD(2,.01,1,4,2)
	;;=S A1B2TAG="PAT" D ^A1B2XFR
	;;^DD(2,.01,1,5,0)
	;;=2^ABUL^MUMPS
	;;^DD(2,.01,1,5,1)
	;;=Q
	;;^DD(2,.01,1,5,2)
	;;=S DFN=DA D ^DGPATN Q
	;;^DD(2,.01,1,301,0)
	;;=2^IVM01^MUMPS
	;;^DD(2,.01,1,301,1)
	;;=S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
	;;^DD(2,.01,1,301,2)
	;;=S IVMX=X,X="IVMPXFR" X ^%ZOSF("TEST") D:$T DPT^IVMPXFR S X=IVMX K IVMX
	;;^DD(2,.01,1,301,"%D",0)
	;;=^^5^5^2930513^
	;;^DD(2,.01,1,301,"%D",1,0)
	;;=This cross-reference will check the IVM PATIENT file to see if a change
	;;^DD(2,.01,1,301,"%D",2,0)
	;;=to this field will require transmission to the IVM Center.  If it does,
	;;^DD(2,.01,1,301,"%D",3,0)
	;;=the IVM PATIENT file entry's TRANSMISSION STATUS will be set to 0 and
	;;^DD(2,.01,1,301,"%D",4,0)
	;;=the nightly background job will transmit the updated information.
	;;^DD(2,.01,1,301,"DT")
	;;=2930513
	;;^DD(2,.01,3)
	;;=Enter patient name in 'Last, First Middle' format [3-30 characters].
	;;^DD(2,.01,20,0)
	;;=^.3LA^1^1
	;;^DD(2,.01,20,1,0)
	;;=DEMOG^
	;;^DD(2,.01,21,0)
	;;=^^4^4^2940118^^^^
	;;^DD(2,.01,21,1,0)
	;;=Enter the applicant's name in 'Last,First Middle' format between 3-30
	;;^DD(2,.01,21,2,0)
	;;=characters.  Do not use numerics or lowercase alphabetic characters.
	;;^DD(2,.01,21,3,0)
	;;=With the exception of the comma, period, space, hyphen, dash and
	;;^DD(2,.01,21,4,0)
	;;=apostrophe punctuation characters should be avoided.
	;;^DD(2,.01,"AUDIT")
	;;=
	;;^DD(2,.01,"AX")
	;;=I 1
	;;^DD(2,.01,"DEL",401,0)
	;;=I $O(^DGPM("C",DA,0)) W *7,!,"Delete Patient Movements First",!
	;;^DD(2,.01,"DEL",1900,0)
	;;=I $N(^DPT(DA,"S",DT))+1 W *7,!,"APPOINTMENT(S) PENDING!"
	;;^DD(2,.01,"DEL",3000,0)
	;;=I $N(^PS(55,DA,"P",0))+1 W *7,!,"PATIENT HAS OUTPATIENT PRESCRIPTIONS"
	;;^DD(2,.01,"DT")
	;;=2910118
	;;^DD(2,.3121,0)
	;;=INSURANCE TYPE^2.312PAI^^.312;0
	;;^DD(2,.3121,3)
	;;=Select from the listing available the type of insurance under which this patient is covered.

IBINI005
IBINI005	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2,.3121,20,0)
	;;=^.3LA^1^1
	;;^DD(2,.3121,20,1,0)
	;;=II
	;;^DD(2,.3121,21,0)
	;;=^^2^2^2930823^^^^
	;;^DD(2,.3121,21,1,0)
	;;=From the available listing enter the type of insurance under which this
	;;^DD(2,.3121,21,2,0)
	;;=applicant is covered regardless of who holds the policy.
	;;^DD(2,.3121,22)
	;;=
	;;^DD(2,1900,0)
	;;=APPOINTMENT^2.98P^^S;0
	;;^DD(2,1900,9)
	;;=^
	;;^DD(2,1900,21,0)
	;;=^^3^3^2930924^^^^
	;;^DD(2,1900,21,1,0)
	;;=This multiple contains information on appointments this patient has had or
	;;^DD(2,1900,21,2,0)
	;;=is scheduled to have.  This information includes the date/time of the
	;;^DD(2,1900,21,3,0)
	;;=appointment, the clinic, and the reason for the appointment.
	;;^DD(2.312,0)
	;;=INSURANCE TYPE SUB-FIELD^NL^21^38
	;;^DD(2.312,0,"DT")
	;;=2930712
	;;^DD(2.312,0,"ID","WRITE")
	;;=
	;;^DD(2.312,0,"IX","AC",2.312,16)
	;;=
	;;^DD(2.312,0,"IX","AD",2.312,8)
	;;=
	;;^DD(2.312,0,"IX","AD1",2.312,3)
	;;=
	;;^DD(2.312,0,"IX","AINS",2.312,.01)
	;;=
	;;^DD(2.312,0,"IX","B",2.312,.01)
	;;=
	;;^DD(2.312,0,"NM","INSURANCE TYPE")
	;;=
	;;^DD(2.312,0,"UP")
	;;=2
	;;^DD(2.312,.01,0)
	;;=INSURANCE TYPE^M*P36'^DIC(36,^0;1^S DIC("S")="I '$P(^(0),""^"",5)" S:$D(DGCRINSS) DIC("S")=DIC("S")_",$P(^(0),""^"",2)'=""N""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(2.312,.01,1,0)
	;;=^.1
	;;^DD(2.312,.01,1,1,0)
	;;=2.312^AINS^MUMPS
	;;^DD(2.312,.01,1,1,1)
	;;=Q
	;;^DD(2.312,.01,1,1,2)
	;;=Q
	;;^DD(2.312,.01,1,1,"%D",0)
	;;=^^3^3^2930304^
	;;^DD(2.312,.01,1,1,"%D",1,0)
	;;=This x-ref used to update piece 5 to the pointer to the insurance 
	;;^DD(2.312,.01,1,1,"%D",2,0)
	;;=address multiple.  This logic was previously star'd for deletion and
	;;^DD(2.312,.01,1,1,"%D",3,0)
	;;=is being removed for IB v2.
	;;^DD(2.312,.01,1,1,"DT")
	;;=2930304
	;;^DD(2.312,.01,1,2,0)
	;;=2.312^B
	;;^DD(2.312,.01,1,2,1)
	;;=S ^DPT(DA(1),.312,"B",$E(X,1,30),DA)=""
	;;^DD(2.312,.01,1,2,2)
	;;=K ^DPT(DA(1),.312,"B",$E(X,1,30),DA)
	;;^DD(2.312,.01,1,2,"DT")
	;;=2930304
	;;^DD(2.312,.01,1,3,0)
	;;=2^AB
	;;^DD(2.312,.01,1,3,1)
	;;=S ^DPT("AB",$E(X,1,30),DA(1),DA)=""
	;;^DD(2.312,.01,1,3,2)
	;;=K ^DPT("AB",$E(X,1,30),DA(1),DA)
	;;^DD(2.312,.01,1,3,"%D",0)
	;;=^^3^3^2930304^
	;;^DD(2.312,.01,1,3,"%D",1,0)
	;;=Index of all insurance companies for the entire patient file.  This will 
	;;^DD(2.312,.01,1,3,"%D",2,0)
	;;=be used to prevent deleting in insurance companies that are pointed to
	;;^DD(2.312,.01,1,3,"%D",3,0)
	;;=by the patient file.
	;;^DD(2.312,.01,1,3,"DT")
	;;=2930304
	;;^DD(2.312,.01,1,4,0)
	;;=^^TRIGGER^2.312^1.01
	;;^DD(2.312,.01,1,4,1)
	;;=X ^DD(2.312,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(2.312,.01,1,4,1.4)
	;;^DD(2.312,.01,1,4,1.3)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,1)=""
	;;^DD(2.312,.01,1,4,1.4)
	;;=S DIH=$S($D(^DPT(DIV(0),.312,DIV(1),1)):^(1),1:""),DIV=X S $P(^(1),U,1)=DIV,DIH=2.312,DIG=1.01 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(2.312,.01,1,4,2)
	;;=Q
	;;^DD(2.312,.01,1,4,"%D",0)
	;;=^^1^1^2930602^^
	;;^DD(2.312,.01,1,4,"%D",1,0)
	;;=Triggers date entered field to current date only if null.
	;;^DD(2.312,.01,1,4,"CREATE CONDITION")
	;;=#1.01=""
	;;^DD(2.312,.01,1,4,"CREATE VALUE")
	;;=S X=DT
	;;^DD(2.312,.01,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(2.312,.01,1,4,"DT")
	;;=2930304
	;;^DD(2.312,.01,1,4,"FIELD")
	;;=#1.01
	;;^DD(2.312,.01,1,5,0)
	;;=^^TRIGGER^2.312^1.02
	;;^DD(2.312,.01,1,5,1)
	;;=X ^DD(2.312,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(2.312,.01,1,5,1.4)

IBINI006
IBINI006	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,.01,1,5,1.3)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1))=""
	;;^DD(2.312,.01,1,5,1.4)
	;;=S DIH=$S($D(^DPT(DIV(0),.312,DIV(1),1)):^(1),1:""),DIV=X S $P(^(1),U,2)=DIV,DIH=2.312,DIG=1.02 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(2.312,.01,1,5,2)
	;;=Q
	;;^DD(2.312,.01,1,5,"%D",0)
	;;=^^1^1^2930304^
	;;^DD(2.312,.01,1,5,"%D",1,0)
	;;=Store user who entered insurance.
	;;^DD(2.312,.01,1,5,"CREATE CONDITION")
	;;=#1.02=""
	;;^DD(2.312,.01,1,5,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(2.312,.01,1,5,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(2.312,.01,1,5,"DT")
	;;=2930304
	;;^DD(2.312,.01,1,5,"FIELD")
	;;=#1.02
	;;^DD(2.312,.01,3)
	;;=
	;;^DD(2.312,.01,12)
	;;=ACTIVE INSURANCE COMPANIES ONLY
	;;^DD(2.312,.01,12.1)
	;;=S DIC("S")="I '$P(^(0),""^"",5)" S:$D(DGCRINSS) DIC("S")=DIC("S")_",$P(^(0),""^"",2)'=""N"""
	;;^DD(2.312,.01,21,0)
	;;=^^2^2^2930602^^^^
	;;^DD(2.312,.01,21,1,0)
	;;=Choose from the available listing the name(s) of the insurance
	;;^DD(2.312,.01,21,2,0)
	;;=company(ies) under which this applicant is covered.
	;;^DD(2.312,.01,"DEL",399,0)
	;;=I $$DELP^IBCNSU(DA(1),$P(^DPT(DA(1),.312,DA,0),U)) W !!,$C(7),"THERE ARE BILLS ASSOCIATED WITH THIS COMPANY, DELETION NOT ALLOWED"
	;;^DD(2.312,.01,"DT")
	;;=2930304
	;;^DD(2.312,.18,0)
	;;=GROUP PLAN^*P355.3^IBA(355.3,^0;18^S DIC("S")="I +$P(^(0),U)=+$G(^DPT(DA(1),.312,DA,0))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(2.312,.18,3)
	;;=Enter the name or number of the Insurance Company you are trying to update benefits for.
	;;^DD(2.312,.18,12)
	;;=MUST BE SAME INSURANCE COMPANY
	;;^DD(2.312,.18,12.1)
	;;=S DIC("S")="I +$P(^(0),U)=+$G(^DPT(DA(1),.312,DA,0))"
	;;^DD(2.312,.18,21,0)
	;;=^^5^5^2931103^^
	;;^DD(2.312,.18,21,1,0)
	;;=Select the plan under which this patient is covered by the specified
	;;^DD(2.312,.18,21,2,0)
	;;=insurance company.  If this is a group plan then there may already be
	;;^DD(2.312,.18,21,3,0)
	;;=an entry for this plan that you may select.  Or, you may add a new
	;;^DD(2.312,.18,21,4,0)
	;;=plan.  If this is an individual plan then it will be associated with
	;;^DD(2.312,.18,21,5,0)
	;;=only this patient.
	;;^DD(2.312,.18,"DT")
	;;=2931103
	;;^DD(2.312,.2,0)
	;;=COORDINATION OF BENEFITS^S^1:PRIMARY;2:SECONDARY;3:TERTIARY;^0;20^Q
	;;^DD(2.312,.2,"DT")
	;;=2930702
	;;^DD(2.312,1,0)
	;;=SUBSCRIBER ID^FX^^0;2^N L,R S R=$P(^DPT(DA(1),.312,DA,0),U,16),L=$P(^DPT(DA(1),0),U,9),R=$S(R="01":1,R="":1,1:0) W:X?1"SS".E&(R=1) "  ",L S:X?1"SS".E&(R=1) X=L K:$L(X)>20!($L(X)<3) X
	;;^DD(2.312,1,.1)
	;;=INSURANCE NUMBER
	;;^DD(2.312,1,3)
	;;=ANSWER MUST BE 3-20 CHARACTERS IN LENGTH
	;;^DD(2.312,1,21,0)
	;;=^^12^12^2940304^^^^
	;;^DD(2.312,1,21,1,0)
	;;=This is the Insured's unique identification number assigned by the payer
	;;^DD(2.312,1,21,2,0)
	;;=organization.  For Medicare enter the number as shown on the Health
	;;^DD(2.312,1,21,3,0)
	;;=Insurance Care (HIC).  For Medicaid enter the Medicaid identification
	;;^DD(2.312,1,21,4,0)
	;;=number for the insured or case head Medicaid number show on the Medicaid
	;;^DD(2.312,1,21,5,0)
	;;=Identification card.  
	;;^DD(2.312,1,21,6,0)
	;;= 
	;;^DD(2.312,1,21,7,0)
	;;=For commerical or Blue Cross insurance enter the insured ID number from
	;;^DD(2.312,1,21,8,0)
	;;=the ID card.  In not available use the insured SSN.  If an individual
	;;^DD(2.312,1,21,9,0)
	;;=insurance contract is involved, use the policy number.
	;;^DD(2.312,1,21,10,0)
	;;= 
	;;^DD(2.312,1,21,11,0)
	;;=If the insured is self, you can enter "SS" to enter this patients SSN

IBINI007
IBINI007	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,1,21,12,0)
	;;=in this field.
	;;^DD(2.312,1,"DT")
	;;=2931104
	;;^DD(2.312,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.312,1.01,3)
	;;=Enter the Date time this entry was entered
	;;^DD(2.312,1.01,5,1,0)
	;;=2.312^.01^4
	;;^DD(2.312,1.01,21,0)
	;;=^^3^3^2930603^^
	;;^DD(2.312,1.01,21,1,0)
	;;=This is the date this entry was added.  It will be created by the system
	;;^DD(2.312,1.01,21,2,0)
	;;=whenever a new policy is added.  Entries created prior the installation
	;;^DD(2.312,1.01,21,3,0)
	;;=of IB v2.0 will not have an entry in this field.
	;;^DD(2.312,1.01,"DT")
	;;=2930707
	;;^DD(2.312,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(2.312,1.02,5,1,0)
	;;=2.312^.01^5
	;;^DD(2.312,1.02,21,0)
	;;=^^3^3^2930603^
	;;^DD(2.312,1.02,21,1,0)
	;;=This the user who added this entry.  It will be entered by the system
	;;^DD(2.312,1.02,21,2,0)
	;;=whenever a new policy is added.  Entries created prior the installation
	;;^DD(2.312,1.02,21,3,0)
	;;=of IB v2.0 will not have an entry in this field.
	;;^DD(2.312,1.02,"DT")
	;;=2930303
	;;^DD(2.312,1.03,0)
	;;=DATE LAST VERIFIED^D^^1;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.312,1.03,21,0)
	;;=^^9^9^2930603^
	;;^DD(2.312,1.03,21,1,0)
	;;=Insurance coverage is generally verified by calling the insurer and
	;;^DD(2.312,1.03,21,2,0)
	;;=or reqesting an explaination of benefits.  When coverage has been
	;;^DD(2.312,1.03,21,3,0)
	;;=verified the person verifying the coverage should use the options to
	;;^DD(2.312,1.03,21,4,0)
	;;=verify the coverage in DHCP.  
	;;^DD(2.312,1.03,21,5,0)
	;;= 
	;;^DD(2.312,1.03,21,6,0)
	;;=This is the date that this policy for this patient was last verified 
	;;^DD(2.312,1.03,21,7,0)
	;;=with the insurance company.  It is important to update the verification
	;;^DD(2.312,1.03,21,8,0)
	;;=date regularly so that other users will know how current the information
	;;^DD(2.312,1.03,21,9,0)
	;;=in DHCP is.
	;;^DD(2.312,1.03,"DT")
	;;=2930707
	;;^DD(2.312,1.04,0)
	;;=VERIFIED BY^P200'^VA(200,^1;4^Q
	;;^DD(2.312,1.04,21,0)
	;;=^^4^4^2930603^
	;;^DD(2.312,1.04,21,1,0)
	;;=This is the user that last contacted the insurance company to verify
	;;^DD(2.312,1.04,21,2,0)
	;;=the policy.  It is updated by using the appropriate DHCP options.
	;;^DD(2.312,1.04,21,3,0)
	;;=It is important to update the verification date and user so that other
	;;^DD(2.312,1.04,21,4,0)
	;;=users will know the insurance policy information is current.
	;;^DD(2.312,1.04,"DT")
	;;=2930303
	;;^DD(2.312,1.05,0)
	;;=DATE LAST EDITED^D^^1;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.312,1.05,21,0)
	;;=^^2^2^2930603^
	;;^DD(2.312,1.05,21,1,0)
	;;=This is the date this policy was last edited.  This field is updated by
	;;^DD(2.312,1.05,21,2,0)
	;;=the computer whenever anyone edits this patients policy information.
	;;^DD(2.312,1.05,"DT")
	;;=2930707
	;;^DD(2.312,1.06,0)
	;;=LAST EDITED BY^P200'^VA(200,^1;6^Q
	;;^DD(2.312,1.06,21,0)
	;;=^^2^2^2930603^
	;;^DD(2.312,1.06,21,1,0)
	;;=This is the user that last edited the policy.  This field is updated by
	;;^DD(2.312,1.06,21,2,0)
	;;=the computer whenever anyone edits this patients policy information.
	;;^DD(2.312,1.06,"DT")
	;;=2930303
	;;^DD(2.312,1.08,0)
	;;=COMMENT - PATIENT POLICY^F^^1;8^K:$L(X)>80!($L(X)<3) X
	;;^DD(2.312,1.08,3)
	;;=Answer must be 3-80 characters in length.  This is a short comment about this patients policy.
	;;^DD(2.312,1.08,21,0)
	;;=^^3^3^2930603^^
	;;^DD(2.312,1.08,21,1,0)
	;;=This is a place to record a short comment about this patients policy.

IBINI008
IBINI008	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,1.08,21,2,0)
	;;=It is specific to this patient and to this policy.  The answer must be
	;;^DD(2.312,1.08,21,3,0)
	;;=3 to 80 characters.
	;;^DD(2.312,1.08,"DT")
	;;=2930603
	;;^DD(2.312,1.09,0)
	;;=SOURCE OF INFORMATION^S^1:INTERVIEW;2:DATA MATCH;3:IVM;^1;9^Q
	;;^DD(2.312,1.09,1,0)
	;;=^.1
	;;^DD(2.312,1.09,1,1,0)
	;;=^^TRIGGER^2.312^1.1
	;;^DD(2.312,1.09,1,1,1)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DPT(D0,.312,D1,1)):^(1),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y X ^DD(2.312,1.09,1,1,1.1) X ^DD(2.312,1.09,1,1,1.4)
	;;^DD(2.312,1.09,1,1,1.1)
	;;=S X=DIV S %=$P($H,",",2),X=$E(DT_(%\60#60/100+(%\3600)+(%#60/10000)/100),1,12)
	;;^DD(2.312,1.09,1,1,1.4)
	;;=S DIH=$S($D(^DPT(DIV(0),.312,DIV(1),1)):^(1),1:""),DIV=X S $P(^(1),U,10)=DIV,DIH=2.312,DIG=1.1 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(2.312,1.09,1,1,2)
	;;=Q
	;;^DD(2.312,1.09,1,1,"CREATE VALUE")
	;;=NOW
	;;^DD(2.312,1.09,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(2.312,1.09,1,1,"FIELD")
	;;=#1.1
	;;^DD(2.312,1.09,21,0)
	;;=^^8^8^2930712^
	;;^DD(2.312,1.09,21,1,0)
	;;=Enter the last source of this information.  If the insurance information
	;;^DD(2.312,1.09,21,2,0)
	;;=was obtained by patient interview the enter interview, etc.  If the 
	;;^DD(2.312,1.09,21,3,0)
	;;=information was initially or previously obtained by one source but updated
	;;^DD(2.312,1.09,21,4,0)
	;;=by another source then enter the most recent source of the information.
	;;^DD(2.312,1.09,21,5,0)
	;;= 
	;;^DD(2.312,1.09,21,6,0)
	;;=The data in this field will be initially set to INTERVIEW with IB v2.  The
	;;^DD(2.312,1.09,21,7,0)
	;;=data may be passed to Accounts Receivable and/or the MCCR NDB.  Any field
	;;^DD(2.312,1.09,21,8,0)
	;;=not answered will be considered to be by interview.
	;;^DD(2.312,1.09,"DT")
	;;=2930712
	;;^DD(2.312,1.1,0)
	;;=DATE OF SOURCE OF INFORMATION^D^^1;10^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.312,1.1,5,1,0)
	;;=2.312^1.09^1
	;;^DD(2.312,1.1,"DT")
	;;=2930712
	;;^DD(2.312,2,0)
	;;=*GROUP NUMBER^F^^0;3^K:$L(X)>17!($L(X)<1) X
	;;^DD(2.312,2,3)
	;;=Answer must be 1-17 characters in length.
	;;^DD(2.312,2,21,0)
	;;=^^7^7^2930601^^^^
	;;^DD(2.312,2,21,1,0)
	;;=Enter any other appropriate number which identifies this policy, i.e.,
	;;^DD(2.312,2,21,2,0)
	;;=group number/code, under which this applicant is covered.  Answer must
	;;^DD(2.312,2,21,3,0)
	;;=be between 1 and 17 characters.
	;;^DD(2.312,2,21,4,0)
	;;= 
	;;^DD(2.312,2,21,5,0)
	;;=This field is moved to the HEALTH INSURANCE POLICY file (355.3) beginning
	;;^DD(2.312,2,21,6,0)
	;;=with IB v2.0.  It will be deleted with the first release 18 months after
	;;^DD(2.312,2,21,7,0)
	;;=the release of IB V2.
	;;^DD(2.312,2,"DT")
	;;=2930601
	;;^DD(2.312,2.01,0)
	;;=SEND BILL TO EMPLOYER^S^1:YES;0:NO;^2;1^Q
	;;^DD(2.312,2.01,3)
	;;=Enter 'YES' if the employer should be mailed insurance claims for pre-processing.  Enter 'NO' if the employer does not receive claims.
	;;^DD(2.312,2.01,21,0)
	;;=^^11^11^2930603^^^^
	;;^DD(2.312,2.01,21,1,0)
	;;=If the employer of the person who holds this policy requires that 
	;;^DD(2.312,2.01,21,2,0)
	;;=they pre-processed for the insurance policy then enter 'YES'.  You 
	;;^DD(2.312,2.01,21,3,0)
	;;=will then be allowed to enter the company name and address that
	;;^DD(2.312,2.01,21,4,0)
	;;=these bills should be sent to.  The bills will then automatically use
	;;^DD(2.312,2.01,21,5,0)
	;;=this address.
	;;^DD(2.312,2.01,21,6,0)
	;;= 
	;;^DD(2.312,2.01,21,7,0)
	;;=If the employer does not require this, or unknown, enter 'NO'.  The bills

IBINI009
IBINI009	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,2.01,21,8,0)
	;;=will then be sent to the insurance company.
	;;^DD(2.312,2.01,21,9,0)
	;;= 
	;;^DD(2.312,2.01,21,10,0)
	;;=If the policy is held by other than the patient then this will not be the
	;;^DD(2.312,2.01,21,11,0)
	;;=patient's employer but the employer of the person who is insured.
	;;^DD(2.312,2.01,"DT")
	;;=2930303
	;;^DD(2.312,2.015,0)
	;;=SUBSCRIBER'S EMPLOYER NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
	;;^DD(2.312,2.015,3)
	;;=Answer must be 3-30 characters in length.  This is the name of the subsriber's employer that will appear on the UB-92 if this employer pre-processes insurance claims.
	;;^DD(2.312,2.015,21,0)
	;;=^^2^2^2930603^
	;;^DD(2.312,2.015,21,1,0)
	;;=This is the name of the employer that will appear on the UB-82 or UB-92
	;;^DD(2.312,2.015,21,2,0)
	;;=if the bills should be sent to the employer for pre-processing.
	;;^DD(2.312,2.015,"DT")
	;;=2930520
	;;^DD(2.312,2.02,0)
	;;=EMPLOYER CLAIMS STREET ADDRESS^F^^2;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(2.312,2.02,3)
	;;=Answer must be 3-30 characters in length.  This is the street address, line 1, of the employer who should receive claims to pre-processs.
	;;^DD(2.312,2.02,21,0)
	;;=^^3^3^2930603^
	;;^DD(2.312,2.02,21,1,0)
	;;=This is the street address of the employer who should receive claims to be
	;;^DD(2.312,2.02,21,2,0)
	;;=pre-processed before the are forwarded to the insurance carrier.
	;;^DD(2.312,2.02,21,3,0)
	;;=The answer should be 3 to 30 characters.
	;;^DD(2.312,2.02,"DT")
	;;=2930303
	;;^DD(2.312,2.03,0)
	;;=EMPLOY CLAIM ST ADDRESS LINE 2^F^^2;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(2.312,2.03,3)
	;;=Answer must be 3-30 characters in length.  This is line 2 of the street address for employers who pre-process insurance claims.
	;;^DD(2.312,2.03,21,0)
	;;=^^3^3^2930603^
	;;^DD(2.312,2.03,21,1,0)
	;;=This is line 2 of the street address for employers who pre-process 
	;;^DD(2.312,2.03,21,2,0)
	;;=insurance claims before they are forwarded to the insurance carrier
	;;^DD(2.312,2.03,21,3,0)
	;;=for processing.  Answer must be 3-30 characters.
	;;^DD(2.312,2.03,"DT")
	;;=2930303
	;;^DD(2.312,2.04,0)
	;;=EMPLOY CLAIM ST ADDRESS LINE 3^F^^2;4^K:$L(X)>30!($L(X)<3) X
	;;^DD(2.312,2.04,3)
	;;=Answer must be 3-30 characters in length.  This is line 3 of the street address for employers who pre-process insurance claims.
	;;^DD(2.312,2.04,21,0)
	;;=^^3^3^2930603^
	;;^DD(2.312,2.04,21,1,0)
	;;=This is line 3 of the street address for employers who pre-process 
	;;^DD(2.312,2.04,21,2,0)
	;;=insurance claims before they are forwarded to the insurance carrier 
	;;^DD(2.312,2.04,21,3,0)
	;;=for processing.  Answer must be 3-30 characters.
	;;^DD(2.312,2.04,"DT")
	;;=2930303
	;;^DD(2.312,2.05,0)
	;;=EMPLOYER CLAIMS CITY^F^^2;5^K:$L(X)>20!($L(X)<3) X
	;;^DD(2.312,2.05,3)
	;;=Answer must be 3-20 characters in length.  Enter the city of the employer's address if the employer pre-processes insurance claims.
	;;^DD(2.312,2.05,21,0)
	;;=^^4^4^2930603^^^^
	;;^DD(2.312,2.05,21,1,0)
	;;=If the employer of the person who holds this policy pre-processes
	;;^DD(2.312,2.05,21,2,0)
	;;=insurance claims prior to forwarding to the insurance carrier enter
	;;^DD(2.312,2.05,21,3,0)
	;;=the city that claim should be sent to.  This will be printed on the
	;;^DD(2.312,2.05,21,4,0)
	;;=claim form.  Answer must be 3 to 20 characters.
	;;^DD(2.312,2.05,"DT")
	;;=2930303
	;;^DD(2.312,2.06,0)
	;;=EMPLOYER CLAIMS STATE^P5'^DIC(5,^2;6^Q
	;;^DD(2.312,2.06,21,0)
	;;=^^4^4^2930603^
	;;^DD(2.312,2.06,21,1,0)
	;;=If the employer of the person who holds this policy pre-processes

IBINI00A
IBINI00A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,2.06,21,2,0)
	;;=insurance claims prior to forwarding to the insurance carrier enter
	;;^DD(2.312,2.06,21,3,0)
	;;=the state that the claim should be sent to.  This will be printed on the
	;;^DD(2.312,2.06,21,4,0)
	;;=claim form.  Answer must be 3 to 20 characters.
	;;^DD(2.312,2.06,"DT")
	;;=2930303
	;;^DD(2.312,2.07,0)
	;;=EMPLOYER CLAIMS ZIP CODE^FX^^2;7^K:$L(X)>20!($L(X)<5) X D:$D(X) ZIPIN^VAFADDR
	;;^DD(2.312,2.07,3)
	;;=Answer with either the 5 or 9 digit zip code.
	;;^DD(2.312,2.07,21,0)
	;;=^^4^4^2930603^
	;;^DD(2.312,2.07,21,1,0)
	;;=Enter the zip code of the mailing address for this employer.
	;;^DD(2.312,2.07,21,2,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 
	;;^DD(2.312,2.07,21,3,0)
	;;=digit zip code (in format 123456789 or 12345-6789).
	;;^DD(2.312,2.07,21,4,0)
	;;= 
	;;^DD(2.312,2.07,"DT")
	;;=2930603
	;;^DD(2.312,2.08,0)
	;;=EMPLOYER CLAIMS PHONE^F^^2;8^K:$L(X)>15!($L(X)<7) X
	;;^DD(2.312,2.08,3)
	;;=Answer must be 7-15 characters in length.
	;;^DD(2.312,2.08,21,0)
	;;=^^2^2^2930603^
	;;^DD(2.312,2.08,21,1,0)
	;;=Enter the phone number of the employer.  This should be the phone number
	;;^DD(2.312,2.08,21,2,0)
	;;=of the person to contact regarding insurance claims.
	;;^DD(2.312,2.08,"DT")
	;;=2930304
	;;^DD(2.312,3,0)
	;;=INSURANCE EXPIRATION DATE^DX^^0;4^S %DT="E" D ^%DT S X=Y K:((Y<1)!(X<$P($G(^DPT(DA(1),.312,DA,0)),"^",8))) X
	;;^DD(2.312,3,1,0)
	;;=^.1
	;;^DD(2.312,3,1,1,0)
	;;=2.312^AD1^MUMPS
	;;^DD(2.312,3,1,1,1)
	;;=Q
	;;^DD(2.312,3,1,1,2)
	;;=Q
	;;^DD(2.312,3,1,1,"%D",0)
	;;=^^1^1^2930903^
	;;^DD(2.312,3,1,1,"%D",1,0)
	;;=Cross-reference forces filing of record so input transform will work.
	;;^DD(2.312,3,1,1,"DT")
	;;=2930903
	;;^DD(2.312,3,3)
	;;=
	;;^DD(2.312,3,21,0)
	;;=^^2^2^2930820^^^^
	;;^DD(2.312,3,21,1,0)
	;;=If this insurance policy under which this applicant is covered expires on
	;;^DD(2.312,3,21,2,0)
	;;=a specified date enter that date, otherwise, leave this field blank.
	;;^DD(2.312,3,"DT")
	;;=2930903
	;;^DD(2.312,6,0)
	;;=WHOSE INSURANCE^RSX^v:VETERAN;s:SPOUSE;o:OTHER;^0;6^Q
	;;^DD(2.312,6,3)
	;;=
	;;^DD(2.312,6,21,0)
	;;=^^4^4^2861117^
	;;^DD(2.312,6,21,1,0)
	;;=Enter 'v' if this insurance policy is held by the veteran (applicant),
	;;^DD(2.312,6,21,2,0)
	;;='s' if the veteran is married and the spouse holds the policy, or 'o'
	;;^DD(2.312,6,21,3,0)
	;;=if someone other than the veteran or his/her spouse hold the policy, i.e.,
	;;^DD(2.312,6,21,4,0)
	;;=employer.
	;;^DD(2.312,6,"DT")
	;;=2860930
	;;^DD(2.312,7,0)
	;;=*RENEWAL DATE^D^^0;7^S %DT="E" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.312,7,21,0)
	;;=^^5^5^2930301^^^^
	;;^DD(2.312,7,21,1,0)
	;;=If applicable enter the date this policy is to be renewed, otherwise,
	;;^DD(2.312,7,21,2,0)
	;;=leave blank.
	;;^DD(2.312,7,21,3,0)
	;;= 
	;;^DD(2.312,7,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,7,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,7,"DT")
	;;=2930301
	;;^DD(2.312,8,0)
	;;=EFFECTIVE DATE OF POLICY^DX^^0;8^S %DT="E" D ^%DT S X=Y K:(Y<1) X I $D(X),$P($G(^DPT(DA(1),.312,DA,0)),"^",4)'="",X>$P($G(^DPT(DA(1),.312,DA,0)),"^",4) K X
	;;^DD(2.312,8,1,0)
	;;=^.1
	;;^DD(2.312,8,1,1,0)
	;;=2.312^AD^MUMPS
	;;^DD(2.312,8,1,1,1)
	;;=Q
	;;^DD(2.312,8,1,1,2)
	;;=Q
	;;^DD(2.312,8,1,1,"%D",0)
	;;=^^1^1^2930903^
	;;^DD(2.312,8,1,1,"%D",1,0)
	;;=Cross-reference forces filing of record so input transform will work.
	;;^DD(2.312,8,1,1,"DT")
	;;=2930903
	;;^DD(2.312,8,3)
	;;=ANSWER MUST BE 3-10 CHARACTERS IN LENGTH

IBINI00B
IBINI00B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,8,21,0)
	;;=^^2^2^2930823^^
	;;^DD(2.312,8,21,1,0)
	;;=Enter the date that this insurance policy initially went into effect (the
	;;^DD(2.312,8,21,2,0)
	;;=date the patient acquired this policy).
	;;^DD(2.312,8,"DT")
	;;=2930903
	;;^DD(2.312,9,0)
	;;=*AGENT'S NAME^F^^0;9^K:$L(X)>25!($L(X)<3) X
	;;^DD(2.312,9,3)
	;;=Answer must be 3-25 characters in length.
	;;^DD(2.312,9,21,0)
	;;=^^5^5^2930301^^^^
	;;^DD(2.312,9,21,1,0)
	;;=Enter the name of the insurance agent from which the patient acquired this
	;;^DD(2.312,9,21,2,0)
	;;=insurance policy.
	;;^DD(2.312,9,21,3,0)
	;;= 
	;;^DD(2.312,9,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,9,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,9,"DT")
	;;=2930702
	;;^DD(2.312,10,0)
	;;=*AGENT'S TELEPHONE NUMBER^F^^0;10^K:$L(X)>15!($L(X)<7) X
	;;^DD(2.312,10,3)
	;;=Answer must be 7-15 characters in length.
	;;^DD(2.312,10,21,0)
	;;=^^5^5^2930223^^^^
	;;^DD(2.312,10,21,1,0)
	;;=Enter the phone number of the insurance agent from which this patient
	;;^DD(2.312,10,21,2,0)
	;;=acquired this insurance policy.
	;;^DD(2.312,10,21,3,0)
	;;= 
	;;^DD(2.312,10,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,10,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,10,"DT")
	;;=2930303
	;;^DD(2.312,11,0)
	;;=*AGENT'S STREET^F^^0;11^K:$L(X)>25!($L(X)<3) X
	;;^DD(2.312,11,3)
	;;=Answer must be 3-25 characters in length.
	;;^DD(2.312,11,21,0)
	;;=^^5^5^2930223^^^^
	;;^DD(2.312,11,21,1,0)
	;;=Enter the street address of the insurance agent from which this patient
	;;^DD(2.312,11,21,2,0)
	;;=acquired this insurance policy.
	;;^DD(2.312,11,21,3,0)
	;;= 
	;;^DD(2.312,11,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,11,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,11,"DT")
	;;=2930702
	;;^DD(2.312,12,0)
	;;=*AGENT'S CITY^F^^0;12^K:$L(X)>15!($L(X)<3) X
	;;^DD(2.312,12,3)
	;;=Answer must be 3-15 characters in length.
	;;^DD(2.312,12,21,0)
	;;=^^5^5^2930223^^^^
	;;^DD(2.312,12,21,1,0)
	;;=Enter the city in which the insurance agent that supplied the patient with
	;;^DD(2.312,12,21,2,0)
	;;=this policy is located.
	;;^DD(2.312,12,21,3,0)
	;;= 
	;;^DD(2.312,12,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,12,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,12,"DT")
	;;=2930525
	;;^DD(2.312,13,0)
	;;=*AGENT'S STATE^P5'^DIC(5,^0;13^Q
	;;^DD(2.312,13,21,0)
	;;=^^5^5^2930223^^^
	;;^DD(2.312,13,21,1,0)
	;;=Enter the state in which the insurance agent that supplied the patient
	;;^DD(2.312,13,21,2,0)
	;;=with this policy is located.
	;;^DD(2.312,13,21,3,0)
	;;= 
	;;^DD(2.312,13,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted
	;;^DD(2.312,13,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,13,"DT")
	;;=2930222
	;;^DD(2.312,14,0)
	;;=*AGENT'S ZIP CODE^F^^0;14^K:$L(X)>5!($L(X)<5)!'(X?5N) X
	;;^DD(2.312,14,3)
	;;=ANSWER MUST BE 5 NUMERICS IN LENGTH
	;;^DD(2.312,14,21,0)
	;;=^^5^5^2930223^^^^
	;;^DD(2.312,14,21,1,0)
	;;=Enter the zip code of the address for the insurance agent that supplied
	;;^DD(2.312,14,21,2,0)
	;;=this policy to the patient.
	;;^DD(2.312,14,21,3,0)
	;;= 
	;;^DD(2.312,14,21,4,0)
	;;=Field star'd for deleting in IB version 2.0.  This field will be deleted

IBINI00C
IBINI00C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.312,14,21,5,0)
	;;=in the first release of IB 18 months after the release of IB version 2.0.
	;;^DD(2.312,14,"DT")
	;;=2930222
	;;^DD(2.312,15,0)
	;;=*GROUP NAME^F^^0;15^K:$L(X)>20!($L(X)<1) X
	;;^DD(2.312,15,3)
	;;=ANSWER MUST BE 1-20 CHARACTERS IN LENGTH
	;;^DD(2.312,15,21,0)
	;;=^^5^5^2930601^^
	;;^DD(2.312,15,21,1,0)
	;;=If this insurance policy is a group policy, enter the name of the group.
	;;^DD(2.312,15,21,2,0)
	;;= 
	;;^DD(2.312,15,21,3,0)
	;;=This field is moved to the HEALTH INSURANCE POLICY file (355.3) beginning
	;;^DD(2.312,15,21,4,0)
	;;=with IB v2.0.  It will be deleted with the first release 18 months after
	;;^DD(2.312,15,21,5,0)
	;;=the release of IB V2.
	;;^DD(2.312,15,"DT")
	;;=2930601
	;;^DD(2.312,16,0)
	;;=PT. RELATIONSHIP TO INSURED^RS^01:PATIENT;02:SPOUSE;03:NATURAL CHILD;08:EMPLOYEE;09:UNKNOWN;11:ORGAN DONOR;15:INJURED PLANTIFF;18:PARENT;^0;16^Q
	;;^DD(2.312,16,1,0)
	;;=^.1
	;;^DD(2.312,16,1,1,0)
	;;=2.312^AC^MUMPS
	;;^DD(2.312,16,1,1,1)
	;;=Q
	;;^DD(2.312,16,1,1,2)
	;;=Q
	;;^DD(2.312,16,1,1,"%D",0)
	;;=^^1^1^2930601^
	;;^DD(2.312,16,1,1,"%D",1,0)
	;;=Cross-reference to force filing of data.
	;;^DD(2.312,16,1,1,"DT")
	;;=2930601
	;;^DD(2.312,16,3)
	;;=Enter the code which indicates the patient's relationship to the insured party.
	;;^DD(2.312,16,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.312,16,21,1,0)
	;;=If the insurance policy belongs to the patient, enter 'v' for veteran
	;;^DD(2.312,16,21,2,0)
	;;=here.  If the policy belongs to the patient's spouse, enter 's' for spouse
	;;^DD(2.312,16,21,3,0)
	;;=here.  If the policy belongs to someone else, enter 'o' for other.
	;;^DD(2.312,16,"DT")
	;;=2930601
	;;^DD(2.312,17,0)
	;;=NAME OF INSURED^RFX^^0;17^K:$L(X)>30!($L(X)<2) X I $D(X) N DIC S DIC(0)="E",DIC="^DPT(" D ^DIC S:$D(^DPT(+Y,0)) X=$P(^(0),"^",1)
	;;^DD(2.312,17,3)
	;;=ENTER 3-30 CHARACTER NAME OF PERSON WHO HOLDS THIS INSURANCE POLICY
	;;^DD(2.312,17,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.312,17,21,1,0)
	;;=Enter the name of the individual for which this insurance policy was
	;;^DD(2.312,17,21,2,0)
	;;=issued.  If the 'PT. RELATIONSHIP TO INSURED' was answered 'v' for veteran,
	;;^DD(2.312,17,21,3,0)
	;;=this field will be created with this patient's name.
	;;^DD(2.312,17,"DT")
	;;=2930524
	;;^DD(2.312,20,0)
	;;=NEW GROUP NAME^CJ20^^ ; ^X ^DD(2.312,20,9.2) S D0=$P(Y(2.312,20,1),U,18) S:'$D(^IBA(355.3,+D0,0)) D0=-1 S Y(2.312,20,101)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(2.312,20,101),U,3) S D0=Y(2.312,20,80) S D1=Y(2.312,20,81)
	;;^DD(2.312,20,9)
	;;=^
	;;^DD(2.312,20,9.01)
	;;=355.3^.03;2.312^.18
	;;^DD(2.312,20,9.1)
	;;=#.18:GROUP NAME
	;;^DD(2.312,20,9.2)
	;;=S Y(2.312,20,81)=$S($D(D1):D1,1:""),Y(2.312,20,80)=$S($D(D0):D0,1:""),Y(2.312,20,1)=$S($D(^DPT(D0,.312,D1,0)):^(0),1:"")
	;;^DD(2.312,21,0)
	;;=NEW GROUP NUMBER^CJ20^^ ; ^X ^DD(2.312,21,9.2) S D0=$P(Y(2.312,21,1),U,18) S:'$D(^IBA(355.3,+D0,0)) D0=-1 S Y(2.312,21,101)=$S($D(^IBA(355.3,D0,0)):^(0),1:"") S X=$P(Y(2.312,21,101),U,4) S D0=Y(2.312,21,80) S D1=Y(2.312,21,81)
	;;^DD(2.312,21,9)
	;;=^
	;;^DD(2.312,21,9.01)
	;;=355.3^.04;2.312^.18
	;;^DD(2.312,21,9.1)
	;;=#.18:GROUP NUMBER
	;;^DD(2.312,21,9.2)
	;;=S Y(2.312,21,81)=$S($D(D1):D1,1:""),Y(2.312,21,80)=$S($D(D0):D0,1:""),Y(2.312,21,1)=$S($D(^DPT(D0,.312,D1,0)):^(0),1:"")
	;;^DD(2.98,0)
	;;=APPOINTMENT SUB-FIELD^NL^23^27
	;;^DD(2.98,0,"DT")
	;;=2930922
	;;^DD(2.98,0,"NM","APPOINTMENT")
	;;=
	;;^DD(2.98,0,"UP")
	;;=2
	;;^DD(2.98,.001,0)
	;;=APPOINTMENT DATE/TIME^D^^ ^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,.001,21,0)
	;;=^^3^3^2930127^^

IBINI00D
IBINI00D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.98,.001,21,1,0)
	;;=This displays date/time function as defined in file manager.  The
	;;^DD(2.98,.001,21,2,0)
	;;=date/time of the appointment.
	;;^DD(2.98,.001,21,3,0)
	;;=|
	;;^DD(2.98,.001,22)
	;;=
	;;^DD(2.98,.001,"DT")
	;;=2870505
	;;^DD(2.98,.01,0)
	;;=CLINIC^MP44'X^SC(^0;1^Q
	;;^DD(2.98,.01,1,0)
	;;=^.1^^0
	;;^DD(2.98,.01,3)
	;;=
	;;^DD(2.98,.01,"DEL",1,0)
	;;=I '$D(SDSCHED) W !,*7,"No deletion of this node allowed through fileman"
	;;^DD(2.98,.01,"DT")
	;;=2870323
	;;^DD(2.98,.02,0)
	;;=TELEPHONE OF CLINIC^CJ14^^ ; ^X ^DD(2.98,.02,9.2) S X=$P(Y(.02,101),U,1) S D0=Y(.02,2)
	;;^DD(2.98,.02,9)
	;;=^
	;;^DD(2.98,.02,9.01)
	;;=44^99;2.98^.01
	;;^DD(2.98,.02,9.1)
	;;=#.01:TELEPHONE
	;;^DD(2.98,.02,9.2)
	;;=S Y(.02,2)=$S($D(D0):D0,1:""),Y(.02,1)=$S($D(^DPT(D0,"S",D1,0)):^(0),1:""),D0=$P(Y(.02,1),U,1) S:'$D(^SC(+D0,0)) D0=-1 S Y(.02,101)=$S($D(^SC(D0,99)):^(99),1:"")
	;;^DD(2.98,.02,21,0)
	;;=^^3^3^2911214^^
	;;^DD(2.98,.02,21,1,0)
	;;=This is a computed field which returns the telephone number for the clinic
	;;^DD(2.98,.02,21,2,0)
	;;=at which this patient has an appointment.  This information is stored in
	;;^DD(2.98,.02,21,3,0)
	;;=the HOSPITAL LOCATION file.
	;;^DD(2.98,.02,"DT")
	;;=2830406
	;;^DD(2.98,3,0)
	;;=STATUS^S^N:NO-SHOW;C:CANCELLED BY CLINIC;NA:NO-SHOW & AUTO RE-BOOK;CA:CANCELLED BY CLINIC & AUTO RE-BOOK;I:INPATIENT APPOINTMENT;PC:CANCELLED BY PATIENT;PCA:CANCELLED BY PATIENT & AUTO-REBOOK;NT:NO ACTION TAKEN;^0;2^Q
	;;^DD(2.98,3,1,0)
	;;=^.1
	;;^DD(2.98,3,1,1,0)
	;;=2^ASDCN^MUMPS
	;;^DD(2.98,3,1,1,1)
	;;=D:X["C" ^SDCAN
	;;^DD(2.98,3,1,1,2)
	;;=K ^DPT("ASDCN",$P(^(0),"^"),DA,DA(1))
	;;^DD(2.98,3,21,0)
	;;=^^5^5^2930617^^
	;;^DD(2.98,3,21,1,0)
	;;=This field contains the current status of the patient's appointment.  If
	;;^DD(2.98,3,21,2,0)
	;;=the field is blank, it means the appointment has not been no-showed or
	;;^DD(2.98,3,21,3,0)
	;;=cancelled and the patient was not an inpatient at the time of the
	;;^DD(2.98,3,21,4,0)
	;;=appointment.  This field is set automatically by the scheduling module and
	;;^DD(2.98,3,21,5,0)
	;;=must NOT be edited.
	;;^DD(2.98,3,"DT")
	;;=2911127
	;;^DD(2.98,4,0)
	;;=REAL APPOINTMENT^BC^^ ; ^S Y(4,1)=$S($D(^DPT(D0,"S",D1,0)):^(0),1:"") S X=$P(Y(4,1),U,2)=""
	;;^DD(2.98,4,9)
	;;=^
	;;^DD(2.98,4,9.1)
	;;=STATUS=""
	;;^DD(2.98,4,21,0)
	;;=^^4^4^2911214^
	;;^DD(2.98,4,21,1,0)
	;;=This is a computed field which determines whether the appointment is
	;;^DD(2.98,4,21,2,0)
	;;=considered real (kept).  This field checks to see that the status is null
	;;^DD(2.98,4,21,3,0)
	;;=(this means the appointment is not no-showed or cancelled and the patient
	;;^DD(2.98,4,21,4,0)
	;;=was not an inpatient at the time of the appointment).
	;;^DD(2.98,5,0)
	;;=LAB DATE/TIME^D^^0;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,5,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.98,5,21,1,0)
	;;=If this patient is scheduled for laboratory tests in conjunction with this
	;;^DD(2.98,5,21,2,0)
	;;=appointment, enter the date/time the patient should report to the lab for
	;;^DD(2.98,5,21,3,0)
	;;=these tests.
	;;^DD(2.98,5,"DT")
	;;=2870505
	;;^DD(2.98,6,0)
	;;=X-RAY DATE/TIME^D^^0;4^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,6,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.98,6,21,1,0)
	;;=If this patient is scheduled for x-rays in conjunction with this
	;;^DD(2.98,6,21,2,0)
	;;=appointment, enter the date/time the patient should report to radiology
	;;^DD(2.98,6,21,3,0)
	;;=for these x-rays.
	;;^DD(2.98,6,"DT")
	;;=2870505
	;;^DD(2.98,7,0)
	;;=EKG DATE/TIME^D^^0;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X

IBINI00E
IBINI00E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.98,7,21,0)
	;;=^^2^2^2911214^
	;;^DD(2.98,7,21,1,0)
	;;=If this patient is scheduled for EKG tests in conjuction with this clinic
	;;^DD(2.98,7,21,2,0)
	;;=appointment, enter the date/time the patient should report for these tests.
	;;^DD(2.98,7,"DT")
	;;=2870505
	;;^DD(2.98,8,0)
	;;=ROUTING SLIP PRINTED^S^Y:YES;^0;6^Q
	;;^DD(2.98,8,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.98,8,21,1,0)
	;;=If a routing sheet was printed for this appointment, this field will
	;;^DD(2.98,8,21,2,0)
	;;=contain a yes.  Otherwise this field will contain a no.  This is created
	;;^DD(2.98,8,21,3,0)
	;;=automatically by the scheduling module.
	;;^DD(2.98,8,"DT")
	;;=2831230
	;;^DD(2.98,8.5,0)
	;;=ROUTING SLIP PRINT DATE^D^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,8.5,3)
	;;=The date the routing slip was printed.
	;;^DD(2.98,8.5,21,0)
	;;=^^2^2^2911214^
	;;^DD(2.98,8.5,21,1,0)
	;;=If a routing sheet was printed for this visit, the date it was printed will
	;;^DD(2.98,8.5,21,2,0)
	;;=be stored here.  This is stored automatically by the MAS module.
	;;^DD(2.98,8.5,"DT")
	;;=2860317
	;;^DD(2.98,9,0)
	;;=PURPOSE OF VISIT^RS^1:C&P;2:10-10;3:SCHEDULED VISIT;4:UNSCHED. VISIT;^0;7^Q
	;;^DD(2.98,9,3)
	;;=Enter the reason for this appointment.  Choose from the available choices.
	;;^DD(2.98,9,21,0)
	;;=^^6^6^2911214^
	;;^DD(2.98,9,21,1,0)
	;;=Choose from the list of available choices the reason this patient has
	;;^DD(2.98,9,21,2,0)
	;;=this clinic appointment.  Enter 1010 if this patient was sent to the
	;;^DD(2.98,9,21,3,0)
	;;=clinic after a 1010 application (registration).  Enter C&P if this patient
	;;^DD(2.98,9,21,4,0)
	;;=is being seen for a comp and pension exam.  Enter scheduled visit if this
	;;^DD(2.98,9,21,5,0)
	;;=patient is being seen for a previously scheduled appointment or unsched.
	;;^DD(2.98,9,21,6,0)
	;;=visit if the patient is a walk-in.
	;;^DD(2.98,9,"DT")
	;;=2841030
	;;^DD(2.98,9.5,0)
	;;=APPOINTMENT TYPE^P409.1'^SD(409.1,^0;16^Q
	;;^DD(2.98,9.5,1,0)
	;;=^.1
	;;^DD(2.98,9.5,1,1,0)
	;;=^^TRIGGER^409.68^.1
	;;^DD(2.98,9.5,1,1,1)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA X ^DD(2.98,9.5,1,1,89.2) S Y(101)=$S($D(^SCE(D0,0)):^(0),1:"") S X=$S('$D(^SD(409.1,+$P(Y(101),U,10),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S D1=I(1,0) S DIU=X K Y S X=DIV S X=X X ^DD(2.98,9.5,1,1,1.4)
	;;^DD(2.98,9.5,1,1,1.4)
	;;=S DIH=$S($D(^SCE(DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,10)=DIV,DIH=409.68,DIG=.1 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(2.98,9.5,1,1,2)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA X ^DD(2.98,9.5,1,1,89.2) S Y(101)=$S($D(^SCE(D0,0)):^(0),1:"") S X=$S('$D(^SD(409.1,+$P(Y(101),U,10),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S D1=I(1,0) S DIU=X K Y S X="" X ^DD(2.98,9.5,1,1,2.4)
	;;^DD(2.98,9.5,1,1,2.4)
	;;=S DIH=$S($D(^SCE(DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,10)=DIV,DIH=409.68,DIG=.1 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(2.98,9.5,1,1,89.2)
	;;=S I(1,0)=$S($D(D1):D1,1:""),I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^DPT(D0,"S",D1,0)):^(0),1:""),D0=$P(Y(1),U,20) S:'$D(^SCE(+D0,0)) D0=-1 S DIV(0)=D0
	;;^DD(2.98,9.5,1,1,"CREATE VALUE")
	;;=S X=X
	;;^DD(2.98,9.5,1,1,"DELETE VALUE")
	;;=@
	;;^DD(2.98,9.5,1,1,"FIELD")
	;;=OUTPATIENT ENCOUNTER:#.1
	;;^DD(2.98,9.5,3)
	;;=Enter from the available choices the type of appointment this patient has.
	;;^DD(2.98,9.5,21,0)
	;;=^^2^2^2911214^
	;;^DD(2.98,9.5,21,1,0)
	;;=Enter from the available choices the type of appointment this patient is
	;;^DD(2.98,9.5,21,2,0)
	;;=scheduled for.  This is a pointer to the APPOINTMENT TYPE file.

IBINI00F
IBINI00F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.98,9.5,"DT")
	;;=2930407
	;;^DD(2.98,10,0)
	;;=SPECIAL SURVEY DISPOSITION^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(2.98,10,3)
	;;=TYPE A WHOLE NUMBER BETWEEN 0 AND 9
	;;^DD(2.98,10,21,0)
	;;=^^3^3^2911224^
	;;^DD(2.98,10,21,1,0)
	;;=If this patinet is claiming exposure to agent orange or ionizing radiation,
	;;^DD(2.98,10,21,2,0)
	;;=enter the special survey disposition, indicating whether his treatment was
	;;^DD(2.98,10,21,3,0)
	;;=related to that exposure, here.
	;;^DD(2.98,10,"DT")
	;;=2840924
	;;^DD(2.98,11,0)
	;;=NUMBER OF COLLATERAL SEEN^NJ1,0^^0;9^K:+X'=X!(X>9)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(2.98,11,3)
	;;=TYPE A WHOLE NUMBER BETWEEN 1 AND 9
	;;^DD(2.98,11,21,0)
	;;=^^2^2^2911224^
	;;^DD(2.98,11,21,1,0)
	;;=If this patient is a collateral, enter the number assigned to that
	;;^DD(2.98,11,21,2,0)
	;;=collateral.
	;;^DD(2.98,11,"DT")
	;;=2840228
	;;^DD(2.98,12,0)
	;;=AUTO-REBOOKED APPT. DATE/TIME^D^^0;10^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,12,21,0)
	;;=^^4^4^2911214^
	;;^DD(2.98,12,21,1,0)
	;;=If this appointment was cancelled and automatically rebooked for a future
	;;^DD(2.98,12,21,2,0)
	;;=date, this field will contain the date/time for which this appointment
	;;^DD(2.98,12,21,3,0)
	;;=was rescheduled.  This field is created automatically by the scheduling
	;;^DD(2.98,12,21,4,0)
	;;=module and should not be edited.
	;;^DD(2.98,12,"DT")
	;;=2870505
	;;^DD(2.98,13,0)
	;;=COLLATERAL VISIT^S^1:YES;^0;11^Q
	;;^DD(2.98,13,21,0)
	;;=^^2^2^2911214^
	;;^DD(2.98,13,21,1,0)
	;;=If this patient was seen as a collateral for another patient, enter YES
	;;^DD(2.98,13,21,2,0)
	;;=in this field.  Otherwise, enter NO.
	;;^DD(2.98,13,"DT")
	;;=2840913
	;;^DD(2.98,14,0)
	;;=NO-SHOW/CANCELLED BY^P200'^VA(200,^0;12^Q
	;;^DD(2.98,14,21,0)
	;;=^^4^4^2911214^
	;;^DD(2.98,14,21,1,0)
	;;=If this appointment was listed as a no-show and was that no-show was
	;;^DD(2.98,14,21,2,0)
	;;=subsequently cancelled, this field will contain the user that cancelled
	;;^DD(2.98,14,21,3,0)
	;;=the no-show.  This field is set automatically by the MAS module and should
	;;^DD(2.98,14,21,4,0)
	;;=not be edited.
	;;^DD(2.98,14,"DT")
	;;=2901017
	;;^DD(2.98,15,0)
	;;=NO-SHOW/CANCEL DATE/TIME^D^^0;14^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,15,21,0)
	;;=^^4^4^2911214^
	;;^DD(2.98,15,21,1,0)
	;;=If this appointment was listed as a no-show and that no-show was
	;;^DD(2.98,15,21,2,0)
	;;=subsequently cancelled, this field will contain the date/time the no-show
	;;^DD(2.98,15,21,3,0)
	;;=was cancelled.  This field is set automatically by the scheduling module
	;;^DD(2.98,15,21,4,0)
	;;=and should not be edited.
	;;^DD(2.98,15,"DT")
	;;=2860909
	;;^DD(2.98,16,0)
	;;=CANCELLATION REASON^R*P409.2'^SD(409.2,^0;15^S DIC("S")="I '$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(2.98,16,12)
	;;=CHOOSE FROM ACTIVE REASONS ONLY
	;;^DD(2.98,16,12.1)
	;;=S DIC("S")="I '$P(^(0),U,4)"
	;;^DD(2.98,16,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.98,16,21,1,0)
	;;=If this appointment was cancelled, this field will contain the reason the
	;;^DD(2.98,16,21,2,0)
	;;=appointment was cancelled.  Choose from the available entries in the
	;;^DD(2.98,16,21,3,0)
	;;=CANCELLATION REASONS file.
	;;^DD(2.98,16,"DT")
	;;=2880412
	;;^DD(2.98,17,0)
	;;=CANCELLATION REMARKS^F^^R;1^K:$L(X)>160!($L(X)<3) X
	;;^DD(2.98,17,3)
	;;=ANSWER MUST BE 3-160 CHARACTERS IN LENGTH
	;;^DD(2.98,17,21,0)
	;;=^^2^2^2911214^
	;;^DD(2.98,17,21,1,0)
	;;=If thsi appointment was cancelled, additional remarks as to the reason
	;;^DD(2.98,17,21,2,0)
	;;=the appointment was cancelled can be entered.  This is optional.

IBINI00G
IBINI00G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.98,17,"DT")
	;;=2880329
	;;^DD(2.98,18,0)
	;;=APPT. CANCELLED^P44'^SC(^0;17^Q
	;;^DD(2.98,18,21,0)
	;;=^^4^4^2880623^^
	;;^DD(2.98,18,21,1,0)
	;;=Field is set when user cancels another appointment set at the same time
	;;^DD(2.98,18,21,2,0)
	;;=in another clinic for the same patient. This field reflects the clinic
	;;^DD(2.98,18,21,3,0)
	;;=in which the patient had a scheduled appointment which was cancelled to
	;;^DD(2.98,18,21,4,0)
	;;=set this appointment.
	;;^DD(2.98,18,"DT")
	;;=2880401
	;;^DD(2.98,19,0)
	;;=DATA ENTRY CLERK^P200'^VA(200,^0;18^Q
	;;^DD(2.98,19,21,0)
	;;=^^3^3^2911214^^
	;;^DD(2.98,19,21,1,0)
	;;=This field contains the name of the user that entered the appointment
	;;^DD(2.98,19,21,2,0)
	;;=into the scheduling system.  This field is created automatically by the
	;;^DD(2.98,19,21,3,0)
	;;=scheduling module and should not be edited.
	;;^DD(2.98,19,"DT")
	;;=2901017
	;;^DD(2.98,20,0)
	;;=DATE APPT. MADE^D^^0;19^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(2.98,20,21,0)
	;;=^^3^3^2911214^
	;;^DD(2.98,20,21,1,0)
	;;=This field contains the date the appointment was entered into sheduling
	;;^DD(2.98,20,21,2,0)
	;;=system.  This field is creatd automatically by the scheduling module and
	;;^DD(2.98,20,21,3,0)
	;;=should not be edited.
	;;^DD(2.98,20,"DT")
	;;=2881212
	;;^DD(2.98,21,0)
	;;=OUTPATIENT ENCOUNTER^P409.68'^SCE(^0;20^Q
	;;^DD(2.98,21,"DT")
	;;=2930209
	;;^DD(2.98,22,0)
	;;=ENCOUNTER FORMS PRINTED^S^0:NO;1:YES;^0;21^Q
	;;^DD(2.98,22,3)
	;;=Enter YES if the required encounter forms and reports have been printed for the appointment.
	;;^DD(2.98,22,21,0)
	;;=^^3^3^2930924^
	;;^DD(2.98,22,21,1,0)
	;;=Used by the Print Manager to indicate that it has printed
	;;^DD(2.98,22,21,2,0)
	;;=the encounter forms and other reports required by the division and
	;;^DD(2.98,22,21,3,0)
	;;=clinic for the appointment.
	;;^DD(2.98,22,23,0)
	;;=^^2^2^2930924^^^
	;;^DD(2.98,22,23,1,0)
	;;=Used by IB to indicate whether or not encounter forms have been printed
	;;^DD(2.98,22,23,2,0)
	;;=for the patient.
	;;^DD(2.98,22,"DT")
	;;=2930922
	;;^DD(2.98,23,0)
	;;=ENCOUNTER FORMS AS ADD-ONS^S^0:NO;1:YES;^0;22^Q
	;;^DD(2.98,23,3)
	;;=Enter YES if the required encounter forms and reports have been printed for the appointment as an add-on.
	;;^DD(2.98,23,21,0)
	;;=^^3^3^2930924^
	;;^DD(2.98,23,21,1,0)
	;;=Used by the Print Manager to indicate that it has printed
	;;^DD(2.98,23,21,2,0)
	;;=the encounter forms and other reports required by the division and
	;;^DD(2.98,23,21,3,0)
	;;=clinic for the appointment and they were printed as an add-on.
	;;^DD(2.98,23,23,0)
	;;=^^2^2^2930924^^^
	;;^DD(2.98,23,23,1,0)
	;;=Used by IB to indicate that encounter forms & reports were printed as an
	;;^DD(2.98,23,23,2,0)
	;;=add-on.
	;;^DD(2.98,23,"DT")
	;;=2930922
	;;^DD(2.98,100,0)
	;;=CURRENT STATUS^CJ35^^ ; ^D CURRENT^SDAMU
	;;^DD(2.98,100,9)
	;;=^
	;;^DD(2.98,100,9.01)
	;;=
	;;^DD(2.98,100,9.1)
	;;=D CURRENT^SDAMU
	;;^DD(2.98,100,21,0)
	;;=^^12^12^2920715^^^
	;;^DD(2.98,100,21,1,0)
	;;=This computed field determines the current status for the
	;;^DD(2.98,100,21,2,0)
	;;=appointment. The difference between this field and the STATUS 
	;;^DD(2.98,100,21,3,0)
	;;=field is that appointments with a blank STATUS are further defined 
	;;^DD(2.98,100,21,4,0)
	;;=in this CURRENT STATUS field. 
	;;^DD(2.98,100,21,5,0)
	;;= 
	;;^DD(2.98,100,21,6,0)
	;;=Appointments with a blank STATUS may have a CURRENT STATUS of any
	;;^DD(2.98,100,21,7,0)
	;;=one of the following:
	;;^DD(2.98,100,21,8,0)
	;;=          o FUTURE
	;;^DD(2.98,100,21,9,0)
	;;=          o NO ACTION TAKEN

IBINI00H
IBINI00H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(2.98,100,21,10,0)
	;;=          o CHECKED IN
	;;^DD(2.98,100,21,11,0)
	;;=          o CHECKED OUT
	;;^DD(2.98,100,21,12,0)
	;;=          o NON-COUNT
	;;^DD(2.98,100,"DT")
	;;=2920212

IBINI00I
IBINI00I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(36,0,"GL")
	;;=^DIC(36,
	;;^DIC("B","INSURANCE COMPANY",36)
	;;=
	;;^DIC(36,"%D",0)
	;;=^^6^6^2940307^^^^
	;;^DIC(36,"%D",1,0)
	;;=This file contains the names and addresses of insurance companies as needed
	;;^DIC(36,"%D",2,0)
	;;=by the local facility.  The data in this file is NOT EDITABLE USING VA
	;;^DIC(36,"%D",3,0)
	;;=FILEMANAGER.  If a new entry needs to be made or an existing entry
	;;^DIC(36,"%D",4,0)
	;;=changed the user must be assigned the appropriate MAS or IB module option.
	;;^DIC(36,"%D",5,0)
	;;= 
	;;^DIC(36,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(36,0)
	;;=FIELD^^.16^82
	;;^DD(36,0,"DDA")
	;;=N
	;;^DD(36,0,"DT")
	;;=2940228
	;;^DD(36,0,"ID",.111)
	;;=W:$D(^(.11)) "   ",$P(^(.11),U,1)
	;;^DD(36,0,"ID",.112)
	;;=W ""
	;;^DD(36,0,"ID",.113)
	;;=W ""
	;;^DD(36,0,"ID",.114)
	;;=W:$D(^(.11)) "   ",$P(^(.11),U,4)
	;;^DD(36,0,"ID",.115)
	;;=S %I=Y,Y=$S('$D(^(.11)):"",$D(^DIC(5,+$P(^(.11),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(36,0,"ID",.116)
	;;=W ""
	;;^DD(36,0,"ID",1)
	;;=W:$D(^("0")) "   ",$P(^("0"),U,2)
	;;^DD(36,0,"IX","B",36,.01)
	;;=
	;;^DD(36,0,"IX","C",36.03,.01)
	;;=
	;;^DD(36,0,"NM","INSURANCE COMPANY")
	;;=
	;;^DD(36,0,"PT",2.101,25)
	;;=
	;;^DD(36,0,"PT",2.312,.01)
	;;=
	;;^DD(36,0,"PT",36,.127)
	;;=
	;;^DD(36,0,"PT",36,.139)
	;;=
	;;^DD(36,0,"PT",36,.147)
	;;=
	;;^DD(36,0,"PT",36,.157)
	;;=
	;;^DD(36,0,"PT",36,.16)
	;;=
	;;^DD(36,0,"PT",36,.167)
	;;=
	;;^DD(36,0,"PT",36,.187)
	;;=
	;;^DD(36,0,"PT",36.02,6)
	;;=
	;;^DD(36,0,"PT",350.9,4.02)
	;;=
	;;^DD(36,0,"PT",350.9,4.06)
	;;=
	;;^DD(36,0,"PT",355.3,.01)
	;;=
	;;^DD(36,0,"PT",356.2,.08)
	;;=
	;;^DD(36,0,"PT",399,101)
	;;=
	;;^DD(36,0,"PT",399,102)
	;;=
	;;^DD(36,0,"PT",399,103)
	;;=
	;;^DD(36,0,"PT",412,.01)
	;;=
	;;^DD(36,0,"PT",430,19)
	;;=
	;;^DD(36,0,"PT",430,19.1)
	;;=
	;;^DD(36,0,"PT",513.85,11)
	;;=
	;;^DD(36,0,"PT",500015.01,.01)
	;;=
	;;^DD(36,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
	;;^DD(36,.01,.1)
	;;=INSURANCE COMPANY FILE
	;;^DD(36,.01,1,0)
	;;=^.1
	;;^DD(36,.01,1,1,0)
	;;=36^B
	;;^DD(36,.01,1,1,1)
	;;=S ^DIC(36,"B",$E(X,1,30),DA)=""
	;;^DD(36,.01,1,1,2)
	;;=K ^DIC(36,"B",$E(X,1,30),DA)
	;;^DD(36,.01,3)
	;;=ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
	;;^DD(36,.01,21,0)
	;;=^^5^5^2940209^^^
	;;^DD(36,.01,21,1,0)
	;;=Enter the name of the insurance carrier which at least one patient seen
	;;^DD(36,.01,21,2,0)
	;;=at your facility has.  This information must be updated using the 'Insurance
	;;^DD(36,.01,21,3,0)
	;;=Company Entry/Edit' option, NOT using VA FileMan.  Editing of this data
	;;^DD(36,.01,21,4,0)
	;;=through a filemanager option could cause negative impacts on the MAS and
	;;^DD(36,.01,21,5,0)
	;;=IB software modules in addition to other DHCP modules.
	;;^DD(36,.01,"DEL",1,0)
	;;=I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ))!($O(^IBA(355.3,"B",DA,0))) W !!,"Deletion not allowed"
	;;^DD(36,.01,"DT")
	;;=2930226
	;;^DD(36,.05,0)
	;;=INACTIVE^SX^0:NO;1:YES;^0;5^Q
	;;^DD(36,.05,3)
	;;=ENTER 'YES' IF THIS COMPANY IS INACTIVE AND SHOULD NO LONGER BE ALLOWED FOR SELECTION.
	;;^DD(36,.05,21,0)
	;;=^^2^2^2911222^
	;;^DD(36,.05,21,1,0)
	;;=If this insurance company is no longer active in your area, enter INACTIVE
	;;^DD(36,.05,21,2,0)
	;;=here.  This will disallow users from selecting this insurance company entry.
	;;^DD(36,.05,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.05,"DT")
	;;=2930312
	;;^DD(36,.06,0)
	;;=ALLOW MULTIPLE BEDSECTIONS^S^0:NO;1:YES;^0;6^Q
	;;^DD(36,.06,3)
	;;=Enter whether or not this Insurance Company will accept multiple bedsections on a claim form.  If left blank a NO is assumed.

IBINI00J
IBINI00J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.06,21,0)
	;;=^^6^6^2940209^^^
	;;^DD(36,.06,21,1,0)
	;;=This field determines whether this insurance company will accept multiple
	;;^DD(36,.06,21,2,0)
	;;=bedsections on one claim form.  If answered 'YES' then selection of the
	;;^DD(36,.06,21,3,0)
	;;=PRIMARY INSURANCE CARRIER in MCCR will trigger revenue codes for all
	;;^DD(36,.06,21,4,0)
	;;=bedsections within the STATEMENT COVERS FROM and STATEMENT COVERS TO dates.
	;;^DD(36,.06,21,5,0)
	;;=If this is answered 'NO' or left blank then only the first bedsection in
	;;^DD(36,.06,21,6,0)
	;;=the date range will be used.
	;;^DD(36,.06,"DT")
	;;=2900515
	;;^DD(36,.07,0)
	;;=DIFFERENT REVENUE CODES TO USE^FX^^0;7^K:$L(X)>40!($L(X)<3) X I $D(X) X "F DGII=1:4:$L(X) S DGINX=$E(X,DGII,DGII+3) I $S(DGINX?3N:0,DGINX?3N1"","":0,1:1) K X Q" K DGII,DGINX
	;;^DD(36,.07,3)
	;;=Answer must be 3-40 characters in length.  Enter the 3 digit revenue codes separated by commas to set up for bills with this insurance company.  Answer must be 3 numerics separated by commas.
	;;^DD(36,.07,21,0)
	;;=^^5^5^2900515^^
	;;^DD(36,.07,21,1,0)
	;;=If this field contains revenue codes that have matching entries in the
	;;^DD(36,.07,21,2,0)
	;;=Billing Rates file for the bedsection being billed.  The revenue codes
	;;^DD(36,.07,21,3,0)
	;;=listed in this field, separated by commas, will be automatically set up
	;;^DD(36,.07,21,4,0)
	;;=for this insurance company rather than the standard revenue codes that
	;;^DD(36,.07,21,5,0)
	;;=are Standard Rates set up in the Billing Rates file.
	;;^DD(36,.07,"DT")
	;;=2900703
	;;^DD(36,.08,0)
	;;=ONE OPT. VISIT ON BILL ONLY^S^0:NO;1:YES;^0;8^Q
	;;^DD(36,.08,3)
	;;=Enter whether or not claom form's to this Insurance Company should allow only 1 outpatient visit per bill.
	;;^DD(36,.08,21,0)
	;;=^^4^4^2940209^^^^
	;;^DD(36,.08,21,1,0)
	;;=If this field is answered 'YES' then only one outpatient visit will be
	;;^DD(36,.08,21,2,0)
	;;=allowed per claim form for this Insurance Company.  If it is
	;;^DD(36,.08,21,3,0)
	;;=unanswered or answered 'NO' then multiple (up to 10) outpatient bills will
	;;^DD(36,.08,21,4,0)
	;;=be allowed per claim form.
	;;^DD(36,.08,"DT")
	;;=2900515
	;;^DD(36,.09,0)
	;;=AMBULATORY SURG. REV. CODE^*P399.2'^DGCR(399.2,^0;9^S DIC("S")="I $P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.09,3)
	;;=Enter the default revenue code for ambulatory surgical codes.  This will automatically be used when creating a bill.
	;;^DD(36,.09,12)
	;;=Only Activated Revenue Codes can be selected!
	;;^DD(36,.09,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)"
	;;^DD(36,.09,21,0)
	;;=^^3^3^2940207^^^
	;;^DD(36,.09,21,1,0)
	;;=This is the Revenue Code that will automatically be generated for this
	;;^DD(36,.09,21,2,0)
	;;=insurance company if a billable Ambulatory Surgical Code is listed as
	;;^DD(36,.09,21,3,0)
	;;=a procedure in this this bill.
	;;^DD(36,.09,"DT")
	;;=2911120
	;;^DD(36,.1,0)
	;;=ATTENDING PHYSICIAN ID.^F^^0;10^K:$L(X)>22!($L(X)<3) X
	;;^DD(36,.1,3)
	;;=Answer must be 3-22 characters in length.
	;;^DD(36,.1,21,0)
	;;=^^5^5^2940209^^^^
	;;^DD(36,.1,21,1,0)
	;;=Enter in this field the Attending Physician ID (UPIN) number.  Currently
	;;^DD(36,.1,21,2,0)
	;;=several insurance companies require a UPIN of VAD000.  If the entry for
	;;^DD(36,.1,21,3,0)
	;;=this insurance company is completed, this field will print on the UB-82
	;;^DD(36,.1,21,4,0)
	;;=in form locator 92 and in form locator 82 of the UB-92 for all bills 
	;;^DD(36,.1,21,5,0)
	;;=where this insurance company is the primary insurer.

IBINI00K
IBINI00K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.1,"DT")
	;;=2921028
	;;^DD(36,.11,0)
	;;=HOSPITAL PROVIDER NUMBER^F^^0;11^K:$L(X)>15!($L(X)<1) X
	;;^DD(36,.11,3)
	;;=Answer must be 1-15 characters in length.
	;;^DD(36,.11,21,0)
	;;=^^3^3^2931110^^^^
	;;^DD(36,.11,21,1,0)
	;;=An identifier assigned to the facility by the insurance company.
	;;^DD(36,.11,21,2,0)
	;;=Will be printed in form locator 51 of the UB-92 of bills for this
	;;^DD(36,.11,21,3,0)
	;;=insurance company.
	;;^DD(36,.11,23,0)
	;;=^^2^2^2931110^
	;;^DD(36,.11,23,1,0)
	;;=Printed in form locator 51 of the UB-92 if the insurance company is the
	;;^DD(36,.11,23,2,0)
	;;=primary insurance company.
	;;^DD(36,.11,"DT")
	;;=2930826
	;;^DD(36,.111,0)
	;;=STREET ADDRESS [LINE 1]^RFX^^.11;1^K:$L(X)>35!($L(X)<3) X
	;;^DD(36,.111,1,0)
	;;=^.1
	;;^DD(36,.111,1,1,0)
	;;=^^TRIGGER^36^.112
	;;^DD(36,.111,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,1,1.4)
	;;^DD(36,.111,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,2)=DIV,DIH=36,DIG=.112 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.111,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,1,2.4)
	;;^DD(36,.111,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,2)=DIV,DIH=36,DIG=.112 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.111,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.111,1,1,"%D",1,0)
	;;=When changing or deleting STREET ADDRESS [LINE 1] delete STREET 
	;;^DD(36,.111,1,1,"%D",2,0)
	;;=ADDRESS [LINE 2].
	;;^DD(36,.111,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.111,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.111,1,1,"DT")
	;;=2930401
	;;^DD(36,.111,1,1,"FIELD")
	;;=STREET ADDRESS [LINE 2]
	;;^DD(36,.111,1,2,0)
	;;=^^TRIGGER^36^.113
	;;^DD(36,.111,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,2,1.4)
	;;^DD(36,.111,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.111,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.111,1,2,2.4)
	;;^DD(36,.111,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.111,1,2,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.111,1,2,"%D",1,0)
	;;=When changing or deleting STREET ADDRESS [LINE 1] delete STREET
	;;^DD(36,.111,1,2,"%D",2,0)
	;;=ADDRESS [LINE 3].
	;;^DD(36,.111,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.111,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.111,1,2,"DT")
	;;=2930402
	;;^DD(36,.111,1,2,"FIELD")
	;;=STREET ADDRESS [LINE 3]
	;;^DD(36,.111,3)
	;;=Enter the first line of this company's street address with 3-35 characters.
	;;^DD(36,.111,21,0)
	;;=^^1^1^2930401^^^^
	;;^DD(36,.111,21,1,0)
	;;=Enter the first line of the mailing address for this insurance carrier.
	;;^DD(36,.111,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.111,"DT")
	;;=2930402
	;;^DD(36,.112,0)
	;;=STREET ADDRESS [LINE 2]^FX^^.11;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.112,1,0)
	;;=^.1
	;;^DD(36,.112,1,1,0)
	;;=^^TRIGGER^36^.113
	;;^DD(36,.112,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.112,1,1,1.4)
	;;^DD(36,.112,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI00L
IBINI00L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.112,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.112,1,1,2.4)
	;;^DD(36,.112,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.11)):^(.11),1:""),DIV=X S $P(^(.11),U,3)=DIV,DIH=36,DIG=.113 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.112,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.112,1,1,"%D",1,0)
	;;=When changing or deleting STREET ADDRESS [LINE 2] delete STREET
	;;^DD(36,.112,1,1,"%D",2,0)
	;;=ADDRESS [LINE 3].
	;;^DD(36,.112,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.112,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.112,1,1,"DT")
	;;=2930401
	;;^DD(36,.112,1,1,"FIELD")
	;;=STREET ADDRESS [LINE 3]
	;;^DD(36,.112,3)
	;;=Enter the second line of this company's street address with 3-30 characters if the space provided in 'STREET ADDRESS' was not sufficient.
	;;^DD(36,.112,5,1,0)
	;;=36^.111^1
	;;^DD(36,.112,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(36,.112,21,1,0)
	;;=If this insurance company's street address is longer than one line, enter
	;;^DD(36,.112,21,2,0)
	;;=the second line here.
	;;^DD(36,.112,"DT")
	;;=2930401
	;;^DD(36,.113,0)
	;;=STREET ADDRESS [LINE 3]^FX^^.11;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.113,3)
	;;=Enter the third line of this company's street address with 3-30 characters if the space provided in 'STREET ADDRESS' and 'STREET ADDRESS 2' was not sufficient.
	;;^DD(36,.113,5,1,0)
	;;=36^.112^1
	;;^DD(36,.113,5,2,0)
	;;=36^.111^2
	;;^DD(36,.113,21,0)
	;;=^^2^2^2930330^^
	;;^DD(36,.113,21,1,0)
	;;=If this insurance company's street address is longer than two lines, enter
	;;^DD(36,.113,21,2,0)
	;;=the third line here.
	;;^DD(36,.113,"DT")
	;;=2930226
	;;^DD(36,.114,0)
	;;=CITY^FX^^.11;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.114,3)
	;;=Enter the city in which this company is located with 2-25 characters.  If the space provided is not sufficient, abbreviate the city to the best of your ability.
	;;^DD(36,.114,21,0)
	;;=^^1^1^2911222^
	;;^DD(36,.114,21,1,0)
	;;=Enter the city of the mailing address for this insurance carrier.
	;;^DD(36,.114,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.114,"DT")
	;;=2930226
	;;^DD(36,.115,0)
	;;=STATE^P5'X^DIC(5,^.11;5^Q
	;;^DD(36,.115,21,0)
	;;=^^1^1^2911222^
	;;^DD(36,.115,21,1,0)
	;;=Enter the state of the mailing address for this insurance carrier.
	;;^DD(36,.115,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.115,"DT")
	;;=2930312
	;;^DD(36,.116,0)
	;;=ZIP CODE^FXO^^.11;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.116,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.116,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.116,3)
	;;=Answer with either 5 digit or 9 digit zip code.
	;;^DD(36,.116,21,0)
	;;=^^4^4^2930715^^^^
	;;^DD(36,.116,21,1,0)
	;;=Enter the zip code of the mailing address for this insurance carrier.
	;;^DD(36,.116,21,2,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 
	;;^DD(36,.116,21,3,0)
	;;=digit zip code (in format 123456789 or 12345-6789).
	;;^DD(36,.116,21,4,0)
	;;= 
	;;^DD(36,.116,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.116,"DT")
	;;=2930226
	;;^DD(36,.117,0)
	;;=BILLING COMPANY NAME^F^^.11;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.117,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(36,.117,21,0)
	;;=^^1^1^2930715^
	;;^DD(36,.117,21,1,0)
	;;=Enter the name of the insurance carrier's billing company.
	;;^DD(36,.117,"DT")
	;;=2930715
	;;^DD(36,.119,0)
	;;=FAX NUMBER^F^^.11;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.119,3)
	;;=Enter the fax number of the company with 7 - 20 characters, ex. 415-444-6555.
	;;^DD(36,.119,21,0)
	;;=^^1^1^2931123^

IBINI00M
IBINI00M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.119,21,1,0)
	;;=Enter the fax number of this insurance carrier.
	;;^DD(36,.119,"DT")
	;;=2931123
	;;^DD(36,.12,0)
	;;=FILING TIME FRAME^F^^0;12^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.12,3)
	;;=Enter maximum amount of time from date of service that the insurance company allows for submitting claims.  Answer must be 3-30 characters in length.
	;;^DD(36,.12,21,0)
	;;=^^4^4^2940204^^
	;;^DD(36,.12,21,1,0)
	;;=Enter the maximum amount of time from the date of service that the
	;;^DD(36,.12,21,2,0)
	;;=insurance company allows for submitting claims.  Examples:  60 days,
	;;^DD(36,.12,21,3,0)
	;;=90 days, 6 months, 1 year, 18 months;  March 30 following year of
	;;^DD(36,.12,21,4,0)
	;;=service, June 1 following year of service.
	;;^DD(36,.12,"DT")
	;;=2940201
	;;^DD(36,.121,0)
	;;=CLAIMS (INPT) STREET ADDRESS 1^F^^.12;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.121,1,0)
	;;=^.1
	;;^DD(36,.121,1,1,0)
	;;=^^TRIGGER^36^.122
	;;^DD(36,.121,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.121,1,1,1.4)
	;;^DD(36,.121,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,2)=DIV,DIH=36,DIG=.122 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.121,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.121,1,1,2.4)
	;;^DD(36,.121,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,2)=DIV,DIH=36,DIG=.122 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.121,1,1,"%D",0)
	;;=^^2^2^2930715^^^^
	;;^DD(36,.121,1,1,"%D",1,0)
	;;=When changing or deleting CLAIMS (INPT) STREET ADDRESS 1 delete
	;;^DD(36,.121,1,1,"%D",2,0)
	;;=CLAIMS (INPT) STREET ADDRESS 2.
	;;^DD(36,.121,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.121,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.121,1,1,"DT")
	;;=2930401
	;;^DD(36,.121,1,1,"FIELD")
	;;=CLAIMS STREET ADDRESS [LINE 2]
	;;^DD(36,.121,1,2,0)
	;;=^^TRIGGER^36^.123
	;;^DD(36,.121,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.121,1,2,1.4)
	;;^DD(36,.121,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,3)=DIV,DIH=36,DIG=.123 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.121,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.121,1,2,2.4)
	;;^DD(36,.121,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,3)=DIV,DIH=36,DIG=.123 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.121,1,2,"%D",0)
	;;=^^2^2^2930715^^^
	;;^DD(36,.121,1,2,"%D",1,0)
	;;=When changing or deleting CLAIMS (INPT) STREET ADDRESS 1 delete
	;;^DD(36,.121,1,2,"%D",2,0)
	;;=CLAIMS (INPT) STREET ADDRESS 3.
	;;^DD(36,.121,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.121,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.121,1,2,"DT")
	;;=2930401
	;;^DD(36,.121,1,2,"FIELD")
	;;=CLAIMS STREET ADDRESS [LINE 3]
	;;^DD(36,.121,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter Line 1 of the inpatient claims street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.121,21,0)
	;;=^^2^2^2930715^^^^
	;;^DD(36,.121,21,1,0)
	;;=Enter the first line of the street address for the inpatient 
	;;^DD(36,.121,21,2,0)
	;;=claims office of this insurance carrier.
	;;^DD(36,.121,"DT")
	;;=2930715
	;;^DD(36,.122,0)
	;;=CLAIMS (INPT) STREET ADDRESS 2^F^^.12;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.122,1,0)
	;;=^.1

IBINI00N
IBINI00N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.122,1,1,0)
	;;=^^TRIGGER^36^.123
	;;^DD(36,.122,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.122,1,1,1.4)
	;;^DD(36,.122,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,3)=DIV,DIH=36,DIG=.123 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.122,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.122,1,1,2.4)
	;;^DD(36,.122,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,3)=DIV,DIH=36,DIG=.123 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.122,1,1,"%D",0)
	;;=^^2^2^2930715^^
	;;^DD(36,.122,1,1,"%D",1,0)
	;;=When changing or deleting CLAIMS (OPT) STREET ADDRESS 2 delete
	;;^DD(36,.122,1,1,"%D",2,0)
	;;=CLAIMS (OPT) STREET ADDRESS 3.
	;;^DD(36,.122,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.122,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.122,1,1,"DT")
	;;=2930401
	;;^DD(36,.122,1,1,"FIELD")
	;;=CLAIMS STREET ADDRESS [LINE 3]
	;;^DD(36,.122,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter Line 2 of the inpatient claims street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.122,5,1,0)
	;;=36^.121^1
	;;^DD(36,.122,21,0)
	;;=^^2^2^2930715^^^^
	;;^DD(36,.122,21,1,0)
	;;=If this insurance company's inpatient claims office street address 
	;;^DD(36,.122,21,2,0)
	;;=is longer than one line, enter the second line here.
	;;^DD(36,.122,"DT")
	;;=2930715
	;;^DD(36,.123,0)
	;;=CLAIMS (INPT) STREET ADDRESS 3^F^^.12;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.123,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter Line 3 of the inpatient claims street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.123,5,1,0)
	;;=36^.121^2
	;;^DD(36,.123,5,2,0)
	;;=36^.122^1
	;;^DD(36,.123,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(36,.123,21,1,0)
	;;=If this insurance company's inpatient claims office street address is longer
	;;^DD(36,.123,21,2,0)
	;;=than two lines, enter the third line here.
	;;^DD(36,.123,"DT")
	;;=2930715
	;;^DD(36,.124,0)
	;;=CLAIMS (INPT) PROCESS CITY^F^^.12;4^K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.124,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter city of the inpatient claims process address.  Answer must be 2-25 characters in length.
	;;^DD(36,.124,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(36,.124,21,1,0)
	;;=Enter the city in which this insurance company's inpatient claims office is
	;;^DD(36,.124,21,2,0)
	;;=located.
	;;^DD(36,.124,"DT")
	;;=2930715
	;;^DD(36,.125,0)
	;;=CLAIMS (INPT) PROCESS STATE^P5'^DIC(5,^.12;5^Q
	;;^DD(36,.125,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter state of the inpatient claims process address.
	;;^DD(36,.125,21,0)
	;;=^^3^3^2931007^^^^
	;;^DD(36,.125,21,1,0)
	;;=Enter the state in which this insurance company's inpatient claims 
	;;^DD(36,.125,21,2,0)
	;;=office is located.  Enter state even if it is the same as the state
	;;^DD(36,.125,21,3,0)
	;;=of the company's main address.
	;;^DD(36,.125,"DT")
	;;=2931007
	;;^DD(36,.126,0)
	;;=CLAIMS (INPT) PROCESS ZIP^FXO^^.12;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.126,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.126,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.126,3)
	;;=If the inpatient claims process address of this company is different from its main address, enter zip code of the inpatient claims process address.  Answer with either 5 digit or 9 digit zip code.

IBINI00O
IBINI00O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.126,21,0)
	;;=^^1^1^2930816^^^^
	;;^DD(36,.126,21,1,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 digit zip code (in format 123456789 or 12345-6789).
	;;^DD(36,.126,"DT")
	;;=2930715
	;;^DD(36,.127,0)
	;;=CLAIMS (INPT) COMPANY NAME^*P36'X^DIC(36,^.12;7^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.12)),U,7),(Y'=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.127,3)
	;;=
	;;^DD(36,.127,5,1,0)
	;;=36^.128^1
	;;^DD(36,.127,12)
	;;=Select a company that processes inpatient claims for this company.  Must be active, not this company, and process its own inpatient claims.
	;;^DD(36,.127,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.12)),U,7),(Y'=DA)"
	;;^DD(36,.127,21,0)
	;;=^^4^4^2931008^^^^
	;;^DD(36,.127,21,1,0)
	;;=You can only select a company that processes claims.  The company
	;;^DD(36,.127,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.127,21,3,0)
	;;=same company as the entry being edited, and must not have another
	;;^DD(36,.127,21,4,0)
	;;=company specified as handling Inpatient Claims for it.
	;;^DD(36,.127,"DT")
	;;=2931005
	;;^DD(36,.128,0)
	;;=ANOTHER CO. PROCESS CLAIMS?^S^0:NO;1:YES;^.12;8^Q
	;;^DD(36,.128,.1)
	;;=Are Inpatient Claims Processed by Another Insurance Co.?
	;;^DD(36,.128,1,0)
	;;=^.1
	;;^DD(36,.128,1,1,0)
	;;=^^TRIGGER^36^.127
	;;^DD(36,.128,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.12)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.12)):^(.12),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(36,.128,1,1,1.4)
	;;^DD(36,.128,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.12)):^(.12),1:""),DIV=X S $P(^(.12),U,7)=DIV,DIH=36,DIG=.127 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.128,1,1,2)
	;;=Q
	;;^DD(36,.128,1,1,"%D",0)
	;;=^^1^1^2931005^^
	;;^DD(36,.128,1,1,"%D",1,0)
	;;=Enter "Yes" if another insurance company processes Inpatient Claims.
	;;^DD(36,.128,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.12)),"^",8)
	;;^DD(36,.128,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.128,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.128,1,1,"DT")
	;;=2931005
	;;^DD(36,.128,1,1,"FIELD")
	;;=#.127
	;;^DD(36,.128,21,0)
	;;=^^1^1^2940121^^^
	;;^DD(36,.128,21,1,0)
	;;=Enter "Yes" if another insurance company processes Inpatient Claims.
	;;^DD(36,.128,"DT")
	;;=2931007
	;;^DD(36,.129,0)
	;;=CLAIMS (INPT) FAX^F^^.12;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.129,3)
	;;=Enter the fax number of the inpatient claims office with 7-20 characters, e.g. 444-8888, 614-333-9999.
	;;^DD(36,.129,21,0)
	;;=^^1^1^2931122^
	;;^DD(36,.129,21,1,0)
	;;=Enter the fax number of this insurance carrier's inpatient claims office.
	;;^DD(36,.129,"DT")
	;;=2931122
	;;^DD(36,.13,0)
	;;=TYPE OF COVERAGE^P355.2'^IBE(355.2,^0;13^Q
	;;^DD(36,.13,21,0)
	;;=^^11^11^2940209^^
	;;^DD(36,.13,21,1,0)
	;;=If this insurance carrier provides only one type of coverage then select
	;;^DD(36,.13,21,2,0)
	;;=the entry that best describes this carriers type of coverage.  If this
	;;^DD(36,.13,21,3,0)
	;;=carrier provides more than one type of coverage then select HEALTH
	;;^DD(36,.13,21,4,0)
	;;=INSURANCE.  The default answer if left unanswered is Health Insurance.
	;;^DD(36,.13,21,5,0)
	;;= 
	;;^DD(36,.13,21,6,0)
	;;=This is useful information when contacting carriers, when creating 
	;;^DD(36,.13,21,7,0)
	;;=claims for reimbursement and when estimating if the payment received is
	;;^DD(36,.13,21,8,0)
	;;=appropriate.
	;;^DD(36,.13,21,9,0)
	;;= 
	;;^DD(36,.13,21,10,0)
	;;=If this field is answered it may affect choices that can be selected when

IBINI00P
IBINI00P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.13,21,11,0)
	;;=entering policy or benefit information.
	;;^DD(36,.13,"DT")
	;;=2930603
	;;^DD(36,.131,0)
	;;=PHONE NUMBER^FX^^.13;1^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.131,3)
	;;=Enter the telephone number of the company with 7 - 20 characters, ex. 777-8888, 415 111 2222 x123.
	;;^DD(36,.131,21,0)
	;;=^^1^1^2911222^
	;;^DD(36,.131,21,1,0)
	;;=Enter the phone number at which this insurance carrier can be reached.
	;;^DD(36,.131,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,.131,"DT")
	;;=2930226
	;;^DD(36,.1311,0)
	;;=CLAIMS (RX) PHONE NUMBER^F^^.13;11^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.1311,3)
	;;=Enter the telephone number of the prescription claims office with 7 - 20 characters, ex. 777-8888, 415 111 2222x123.
	;;^DD(36,.1311,21,0)
	;;=^^1^1^2940104^^
	;;^DD(36,.1311,21,1,0)
	;;=Enter the phone number at which the prescription claims office of this insurance carrier can be reached.
	;;^DD(36,.1311,"DT")
	;;=2940104
	;;^DD(36,.132,0)
	;;=BILLING PHONE NUMBER^F^^.13;2^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.132,3)
	;;=Enter the telephone number of the billing office for this company.  Answer must be 7-20 characters in length.
	;;^DD(36,.132,21,0)
	;;=^^2^2^2911222^
	;;^DD(36,.132,21,1,0)
	;;=Enter the phone number of the insurance carrier where inquiries about
	;;^DD(36,.132,21,2,0)
	;;=patient billing should be made.
	;;^DD(36,.132,"DT")
	;;=2900504
	;;^DD(36,.133,0)
	;;=PRECERTIFICATION PHONE NUMBER^F^^.13;3^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.133,3)
	;;=Enter the phone number for getting Precertification of insurance if this company requires it.  Answer must be 7-20 characters in length.
	;;^DD(36,.133,21,0)
	;;=^^2^2^2911222^
	;;^DD(36,.133,21,1,0)
	;;=If precertification is required prior to a patient being treated, enter
	;;^DD(36,.133,21,2,0)
	;;=the number of the insurance carrier to which this request can be made.
	;;^DD(36,.133,"DT")
	;;=2900504
	;;^DD(36,.134,0)
	;;=VERIFICATION PHONE NUMBER^F^^.13;4^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.134,3)
	;;=Enter the phone number for getting verification of insurance.  Answer must be 7-20 characters in length.
	;;^DD(36,.134,21,0)
	;;=^^2^2^2930715^^
	;;^DD(36,.134,21,1,0)
	;;=Enter the phone number of the insurance carrier to which a Verification
	;;^DD(36,.134,21,2,0)
	;;=request can be made.
	;;^DD(36,.134,"DT")
	;;=2930329
	;;^DD(36,.135,0)
	;;=CLAIMS (INPT) PHONE NUMBER^F^^.13;5^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.135,3)
	;;=Enter the telephone number of the inpatient claims office with 7-20 characters, e.g. 777-8888, 415 111 2222 x123.
	;;^DD(36,.135,21,0)
	;;=^^2^2^2930715^^^^
	;;^DD(36,.135,21,1,0)
	;;=Enter the telephone number at which this insurance carrier's 
	;;^DD(36,.135,21,2,0)
	;;=inpatient claims office can be reached.
	;;^DD(36,.135,"DT")
	;;=2930715
	;;^DD(36,.136,0)
	;;=CLAIMS (OPT) PHONE NUMBER^F^^.13;6^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.136,3)
	;;=Enter the telephone number of the outpatient claims office with 7 - 20 characters, ex. 777-8888, 415 111 2222 x123.
	;;^DD(36,.136,21,0)
	;;=2
	;;^DD(36,.136,21,1,0)
	;;=Enter the phone number at which the outpatient claims office 
	;;^DD(36,.136,21,2,0)
	;;=of this insurance carrier can be reached.
	;;^DD(36,.136,"DT")
	;;=2930715
	;;^DD(36,.137,0)
	;;=APPEALS PHONE NUMBER^F^^.13;7^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.137,3)
	;;=Enter the telephone number of the appeals office with 7 - 20 characters, ex. 777-8888, 415 111 2222 x123.
	;;^DD(36,.137,21,0)
	;;=^^2^2^2930823^^^^
	;;^DD(36,.137,21,1,0)
	;;=Enter the telephone number at which the appeals office of this insurance

IBINI00Q
IBINI00Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.137,21,2,0)
	;;=carrier can be reached.
	;;^DD(36,.137,22)
	;;=
	;;^DD(36,.137,"DT")
	;;=2930715
	;;^DD(36,.138,0)
	;;=INQUIRY PHONE NUMBER^F^^.13;8^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.138,3)
	;;=Enter the telephone number of the inquiry office with 7 - 20 characters, ex. 777-8888, 415 111 222 x123.
	;;^DD(36,.138,21,0)
	;;=^^1^1^2930715^
	;;^DD(36,.138,21,1,0)
	;;=Enter the telephone number at which the inquiry office of this insurance carrier can be reached.
	;;^DD(36,.138,"DT")
	;;=2930715
	;;^DD(36,.139,0)
	;;=PRECERT COMPANY NAME^*P36'X^DIC(36,^.13;9^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.13)),U,9),(Y'=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.139,5,1,0)
	;;=36^.178^1
	;;^DD(36,.139,12)
	;;=Select a company that processes precerts for this company.  Must be active, not this company, and process its own precerts.
	;;^DD(36,.139,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.13)),U,9),(Y'=DA)"
	;;^DD(36,.139,21,0)
	;;=^^3^3^2931006^^^^
	;;^DD(36,.139,21,1,0)
	;;=You can only select a company that processes Precerts.  The company
	;;^DD(36,.139,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.139,21,3,0)
	;;=same company specified as handling Precerts for it.
	;;^DD(36,.139,"DT")
	;;=2931006
	;;^DD(36,.14,0)
	;;=FORM TYPE^P353'^IBE(353,^0;14^Q
	;;^DD(36,.14,3)
	;;=Enter the primary Form Type desired by this Insurance Company.
	;;^DD(36,.14,21,0)
	;;=^^7^7^2940209^^^^
	;;^DD(36,.14,21,1,0)
	;;=This is the primary form type for the insurance company.  An entry is
	;;^DD(36,.14,21,2,0)
	;;=needed only if the primary form type for this insurance company is
	;;^DD(36,.14,21,3,0)
	;;=different than the Default Form Type site parameter.
	;;^DD(36,.14,21,4,0)
	;;= 
	;;^DD(36,.14,21,5,0)
	;;=Used for the conversion from the UB-82 to the UB-92.  If this is set to
	;;^DD(36,.14,21,6,0)
	;;=either of those form types then all UB bills for this insurance
	;;^DD(36,.14,21,7,0)
	;;=company will be printed on that form.
	;;^DD(36,.14,23,0)
	;;=^^2^2^2940209^^
	;;^DD(36,.14,23,1,0)
	;;=Set up initially because companies are converting to the UB-92 at
	;;^DD(36,.14,23,2,0)
	;;=different times and once they do they will no longer accept the UB-82.
	;;^DD(36,.14,"DT")
	;;=2930826
	;;^DD(36,.141,0)
	;;=APPEALS ADDRESS ST. [LINE 1]^F^^.14;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.141,1,0)
	;;=^.1
	;;^DD(36,.141,1,1,0)
	;;=^^TRIGGER^36^.142
	;;^DD(36,.141,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.141,1,1,1.4)
	;;^DD(36,.141,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,2)=DIV,DIH=36,DIG=.142 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.141,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.141,1,1,2.4)
	;;^DD(36,.141,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,2)=DIV,DIH=36,DIG=.142 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.141,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.141,1,1,"%D",1,0)
	;;=When changing or deleting APPEALS ADDRESS ST. [LINE 1] delete
	;;^DD(36,.141,1,1,"%D",2,0)
	;;=APPEALS ADDRESS ST. [LINE 2].
	;;^DD(36,.141,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.141,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.141,1,1,"DT")
	;;=2930401
	;;^DD(36,.141,1,1,"FIELD")
	;;=APPEALS ADDRESS ST. [LINE 2]
	;;^DD(36,.141,1,2,0)
	;;=^^TRIGGER^36^.143
	;;^DD(36,.141,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.141,1,2,1.4)

IBINI00R
IBINI00R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.141,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,3)=DIV,DIH=36,DIG=.143 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.141,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.141,1,2,2.4)
	;;^DD(36,.141,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,3)=DIV,DIH=36,DIG=.143 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.141,1,2,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.141,1,2,"%D",1,0)
	;;=When changing or deleting APPEALS ADDRESS ST. [LINE 1] delete
	;;^DD(36,.141,1,2,"%D",2,0)
	;;=APPEALS ADDRESS ST. [LINE 3].
	;;^DD(36,.141,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.141,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.141,1,2,"DT")
	;;=2930401
	;;^DD(36,.141,1,2,"FIELD")
	;;=APPEALS ADDRESS ST. [LINE 3]
	;;^DD(36,.141,3)
	;;=If the appeals address of this company is different from its main address, enter Line 1 of the appeals street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.141,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.141,21,1,0)
	;;=Enter the first line of the street address of the appeals office
	;;^DD(36,.141,21,2,0)
	;;=of this insurance carrier.
	;;^DD(36,.141,"DT")
	;;=2930401
	;;^DD(36,.142,0)
	;;=APPEALS ADDRESS ST. [LINE 2]^F^^.14;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.142,1,0)
	;;=^.1
	;;^DD(36,.142,1,1,0)
	;;=^^TRIGGER^36^.143
	;;^DD(36,.142,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.142,1,1,1.4)
	;;^DD(36,.142,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,3)=DIV,DIH=36,DIG=.143 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.142,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.142,1,1,2.4)
	;;^DD(36,.142,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,3)=DIV,DIH=36,DIG=.143 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.142,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.142,1,1,"%D",1,0)
	;;=When changing or deleting APPEALS ADDRESS ST. [LINE 2] delete
	;;^DD(36,.142,1,1,"%D",2,0)
	;;=APPEALS ADDRESS ST. [LINE 3].
	;;^DD(36,.142,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.142,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.142,1,1,"DT")
	;;=2930401
	;;^DD(36,.142,1,1,"FIELD")
	;;=APPEALS ADDRESS ST. [LINE 3]
	;;^DD(36,.142,3)
	;;=If the appeals address of this company is different from its main address, enter Line 2 of the appeals street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.142,5,1,0)
	;;=36^.141^1
	;;^DD(36,.142,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.142,21,1,0)
	;;=If this insurance company's appeals office address is longer than
	;;^DD(36,.142,21,2,0)
	;;=one line, enter the second line here.
	;;^DD(36,.142,"DT")
	;;=2930401
	;;^DD(36,.143,0)
	;;=APPEALS ADDRESS ST. [LINE 3]^F^^.14;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.143,3)
	;;=If the appeals address of this company is different from its main address, enter Line 3 of the appeals street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.143,5,1,0)
	;;=36^.142^1
	;;^DD(36,.143,5,2,0)
	;;=36^.141^2
	;;^DD(36,.143,21,0)
	;;=^^2^2^2930715^^
	;;^DD(36,.143,21,1,0)
	;;=If this insurance company's appeals office address is longer than
	;;^DD(36,.143,21,2,0)
	;;=two lines, enter the third line here.
	;;^DD(36,.143,"DT")
	;;=2930225
	;;^DD(36,.144,0)
	;;=APPEALS ADDRESS CITY^F^^.14;4^K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.144,3)
	;;=If the appeals address of this company is different from its main address, enter city of the appeals address.  Answer must be 2-25 characters in length.

IBINI00S
IBINI00S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.144,21,0)
	;;=^^2^2^2930607^^
	;;^DD(36,.144,21,1,0)
	;;=Enter the city in which the appeals office of this insurance company
	;;^DD(36,.144,21,2,0)
	;;=is located.
	;;^DD(36,.144,"DT")
	;;=2930225
	;;^DD(36,.145,0)
	;;=APPEALS ADDRESS STATE^P5'^DIC(5,^.14;5^Q
	;;^DD(36,.145,3)
	;;=If the appeals address of this company is different from its main address, enter state of the appeals address.
	;;^DD(36,.145,21,0)
	;;=^^3^3^2931007^^^^
	;;^DD(36,.145,21,1,0)
	;;=Enter the state in which the appeals office of this insurance
	;;^DD(36,.145,21,2,0)
	;;=company is located.  Enter state even if it is the same as the state
	;;^DD(36,.145,21,3,0)
	;;=of the company's main address.
	;;^DD(36,.145,22)
	;;=DESCR
	;;^DD(36,.145,"DT")
	;;=2931007
	;;^DD(36,.146,0)
	;;=APPEALS ADDRESS ZIP^FXO^^.14;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.146,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.146,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.146,3)
	;;=If the appeals address of this company is different from its main address, enter zip code of the appeals address.  Answer with either 5 digit or 9 digit zip code.
	;;^DD(36,.146,21,0)
	;;=2^^2^2^2930226^^^^
	;;^DD(36,.146,21,1,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 
	;;^DD(36,.146,21,2,0)
	;;=digit zip code (in format 123456789 or 12345-6789).
	;;^DD(36,.146,"DT")
	;;=2930226
	;;^DD(36,.147,0)
	;;=APPEALS COMPANY NAME^*P36'X^DIC(36,^.14;7^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.14)),U,7),(Y'=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.147,3)
	;;=
	;;^DD(36,.147,5,1,0)
	;;=36^.148^1
	;;^DD(36,.147,12)
	;;=Select a company that processes inpatient claims for this company.  Must be active, not this company, and process its own inpatient claims.
	;;^DD(36,.147,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.14)),U,7),(Y'=DA)"
	;;^DD(36,.147,21,0)
	;;=^^4^4^2931006^^^
	;;^DD(36,.147,21,1,0)
	;;=You can only select a company that processes Appeals.  The company
	;;^DD(36,.147,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.147,21,3,0)
	;;=same company as the entry being edited, and must not have another
	;;^DD(36,.147,21,4,0)
	;;=company specified as handling Appeals for it.
	;;^DD(36,.147,"DT")
	;;=2931006
	;;^DD(36,.148,0)
	;;=ANOTHER CO. PROCESS APPEALS?^S^0:NO;1:YES;^.14;8^Q
	;;^DD(36,.148,.1)
	;;=Are Appeals Processed by Another Insurance Co.?
	;;^DD(36,.148,1,0)
	;;=^.1
	;;^DD(36,.148,1,1,0)
	;;=^^TRIGGER^36^.147
	;;^DD(36,.148,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.14)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.14)):^(.14),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(36,.148,1,1,1.4)
	;;^DD(36,.148,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.14)):^(.14),1:""),DIV=X S $P(^(.14),U,7)=DIV,DIH=36,DIG=.147 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.148,1,1,2)
	;;=Q
	;;^DD(36,.148,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.14)),"^",8)
	;;^DD(36,.148,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.148,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.148,1,1,"DT")
	;;=2931006
	;;^DD(36,.148,1,1,"FIELD")
	;;=#.147
	;;^DD(36,.148,21,0)
	;;=^^1^1^2931007^^^
	;;^DD(36,.148,21,1,0)
	;;=Enter "Yes" if another insurance company processes appeals.
	;;^DD(36,.148,"DT")
	;;=2931007
	;;^DD(36,.149,0)
	;;=APPEALS FAX^F^^.14;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.149,3)
	;;=Enter the fax number of this insurance carrier's appeals office with 7 - 20 characters, ex. 444-8888, 614-333-9999.
	;;^DD(36,.149,21,0)
	;;=^^1^1^2931122^^^

IBINI00T
IBINI00T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.149,21,1,0)
	;;=Enter the fax number of the appeals office of this insurance carrier.
	;;^DD(36,.149,"DT")
	;;=2931122
	;;^DD(36,.15,0)
	;;=PRESCRIPTION REFILL REV. CODE^*P399.2'^DGCR(399.2,^0;15^S DIC("S")="I $P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.15,3)
	;;=Enter revenue code to be used for Rx refills.
	;;^DD(36,.15,12)
	;;=This is the Revenue Code that will automatically be generated for this insurance company if a prescription refill is listed on this bill.
	;;^DD(36,.15,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)"
	;;^DD(36,.15,21,0)
	;;=^^1^1^2940110^^
	;;^DD(36,.15,21,1,0)
	;;=This is the Revenue Code that will automatically be generated for this insurance company if a prescription refill is listed on this bill.
	;;^DD(36,.15,"DT")
	;;=2940110
	;;^DD(36,.151,0)
	;;=INQUIRY ADDRESS ST. [LINE 1]^F^^.15;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.151,1,0)
	;;=^.1
	;;^DD(36,.151,1,1,0)
	;;=^^TRIGGER^36^.152
	;;^DD(36,.151,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.151,1,1,1.4)
	;;^DD(36,.151,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,2)=DIV,DIH=36,DIG=.152 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.151,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.151,1,1,2.4)
	;;^DD(36,.151,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,2)=DIV,DIH=36,DIG=.152 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.151,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.151,1,1,"%D",1,0)
	;;=When changing or deleting INQUIRY ADDRESS ST. [LINE 1]
	;;^DD(36,.151,1,1,"%D",2,0)
	;;=delete INQUIRY ADDRESS ST. [LINE 2].
	;;^DD(36,.151,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.151,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.151,1,1,"DT")
	;;=2930401
	;;^DD(36,.151,1,1,"FIELD")
	;;=INQUIRY ADDRESS ST. [LINE 2]
	;;^DD(36,.151,1,2,0)
	;;=^^TRIGGER^36^.153
	;;^DD(36,.151,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.151,1,2,1.4)
	;;^DD(36,.151,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,3)=DIV,DIH=36,DIG=.153 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.151,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.151,1,2,2.4)
	;;^DD(36,.151,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,3)=DIV,DIH=36,DIG=.153 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.151,1,2,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.151,1,2,"%D",1,0)
	;;=When changing or deleting INQUIRY ADDRESS ST. [LINE 1] delete
	;;^DD(36,.151,1,2,"%D",2,0)
	;;=INQUIRY ADDRESS ST. [LINE 3].
	;;^DD(36,.151,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.151,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.151,1,2,"DT")
	;;=2930401
	;;^DD(36,.151,1,2,"FIELD")
	;;=INQUIRY ADDRESS ST. [LINE 3]
	;;^DD(36,.151,3)
	;;=If the inquiry address of this company is different from its main address, enter Line 1 of the inquiry street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.151,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.151,21,1,0)
	;;=Enter the first line of the street address of the inquiry office of
	;;^DD(36,.151,21,2,0)
	;;=this insurance carrier.
	;;^DD(36,.151,"DT")
	;;=2930401
	;;^DD(36,.152,0)
	;;=INQUIRY ADDRESS ST. [LINE 2]^F^^.15;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.152,1,0)
	;;=^.1
	;;^DD(36,.152,1,1,0)
	;;=^^TRIGGER^36^.153

IBINI00U
IBINI00U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.152,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.152,1,1,1.4)
	;;^DD(36,.152,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,3)=DIV,DIH=36,DIG=.153 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.152,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.152,1,1,2.4)
	;;^DD(36,.152,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,3)=DIV,DIH=36,DIG=.153 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.152,1,1,"%D",0)
	;;=^^2^2^2930402^
	;;^DD(36,.152,1,1,"%D",1,0)
	;;=When changing or deleting INQUIRY ADDRESS ST. [LINE 2] delete
	;;^DD(36,.152,1,1,"%D",2,0)
	;;=INQUIRY ADDRESS ST. [LINE 3].
	;;^DD(36,.152,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.152,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.152,1,1,"DT")
	;;=2930401
	;;^DD(36,.152,1,1,"FIELD")
	;;=INQUIRY ADDRESS ST. [LINE 3]
	;;^DD(36,.152,3)
	;;=If the inquiry address of this company is different from its main address, enter Line 2 of the inquiry street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.152,5,1,0)
	;;=36^.151^1
	;;^DD(36,.152,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.152,21,1,0)
	;;=If this insurance company's inquiry address is longer than one line,
	;;^DD(36,.152,21,2,0)
	;;=enter the second line here.
	;;^DD(36,.152,"DT")
	;;=2930401
	;;^DD(36,.153,0)
	;;=INQUIRY ADDRESS ST. [LINE 3]^F^^.15;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.153,3)
	;;=If the inquiry address of this company is different from its main address, enter Line 3 of the inquiry street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.153,5,1,0)
	;;=36^.151^2
	;;^DD(36,.153,5,2,0)
	;;=36^.152^1
	;;^DD(36,.153,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.153,21,1,0)
	;;=If this insurance company's inquiry address is longer than two lines,
	;;^DD(36,.153,21,2,0)
	;;=enter the third line here.
	;;^DD(36,.153,"DT")
	;;=2930225
	;;^DD(36,.154,0)
	;;=INQUIRY ADDRESS CITY^F^^.15;4^K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.154,3)
	;;=If the inquiry address of this company is different from its main address, enter city of the inquiry address.  Answer must be 2-25 characters in length.
	;;^DD(36,.154,21,0)
	;;=^^2^2^2930607^
	;;^DD(36,.154,21,1,0)
	;;=Enter the city in which this insurance company's inquiry address
	;;^DD(36,.154,21,2,0)
	;;=office is located.
	;;^DD(36,.154,"DT")
	;;=2930225
	;;^DD(36,.155,0)
	;;=INQUIRY ADDRESS STATE^P5'^DIC(5,^.15;5^Q
	;;^DD(36,.155,3)
	;;=If the inquiry address of this company is different from its main address, enter state of the inquiry address.
	;;^DD(36,.155,21,0)
	;;=^^3^3^2931007^^^^
	;;^DD(36,.155,21,1,0)
	;;=Enter the state in which this insurance company's inquiry address
	;;^DD(36,.155,21,2,0)
	;;=office is located.  Enter state even if it is the same as the state
	;;^DD(36,.155,21,3,0)
	;;=of the company's main address.
	;;^DD(36,.155,"DT")
	;;=2930225
	;;^DD(36,.156,0)
	;;=INQUIRY ADDRESS ZIP CODE^FXO^^.15;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.156,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.156,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.156,3)
	;;=If the inquiry address of this company is different from its main address, enter zip code of the inquiry address.  Answer with either the 5 digit or 9 digit zip code.
	;;^DD(36,.156,21,0)
	;;=^^2^2^2930226^
	;;^DD(36,.156,21,1,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9
	;;^DD(36,.156,21,2,0)
	;;=digit zip code (in format 123456789 or 12345-6789).

IBINI00V
IBINI00V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.156,"DT")
	;;=2930226
	;;^DD(36,.157,0)
	;;=INQUIRY COMPANY NAME^*P36'X^DIC(36,^.15;7^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.15)),U,7),(Y'=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.157,3)
	;;=
	;;^DD(36,.157,5,1,0)
	;;=36^.158^1
	;;^DD(36,.157,12)
	;;=Select a company that processes inquiries for this company.  Must be active, not this company, and process its own inquiries.
	;;^DD(36,.157,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.15)),U,7),(Y'=DA)"
	;;^DD(36,.157,21,0)
	;;=^^4^4^2931006^^^
	;;^DD(36,.157,21,1,0)
	;;=You can only select a company that processes Inquiries.  The company
	;;^DD(36,.157,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.157,21,3,0)
	;;=same company as the entry being edited, and must not have another
	;;^DD(36,.157,21,4,0)
	;;=company specified as handling Inquiries for it.
	;;^DD(36,.157,"DT")
	;;=2931008
	;;^DD(36,.158,0)
	;;=ANOTHER CO. PROCESS INQUIRIES?^S^0:NO;1:YES;^.15;8^Q
	;;^DD(36,.158,.1)
	;;=Are Inquiries Processed by Another Insurance Co.?
	;;^DD(36,.158,1,0)
	;;=^.1
	;;^DD(36,.158,1,1,0)
	;;=^^TRIGGER^36^.157
	;;^DD(36,.158,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.15)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.15)):^(.15),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(36,.158,1,1,1.4)
	;;^DD(36,.158,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.15)):^(.15),1:""),DIV=X S $P(^(.15),U,7)=DIV,DIH=36,DIG=.157 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.158,1,1,2)
	;;=Q
	;;^DD(36,.158,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.15)),"^",8)
	;;^DD(36,.158,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.158,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.158,1,1,"FIELD")
	;;=#.157
	;;^DD(36,.158,21,0)
	;;=^^1^1^2931007^^
	;;^DD(36,.158,21,1,0)
	;;=Enter "Yes" if another insurance company processes Inquiries.
	;;^DD(36,.158,"DT")
	;;=2931007
	;;^DD(36,.159,0)
	;;=INQUIRY FAX^F^^.15;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.159,3)
	;;=Enter the fax number of this insurance carrier's inquiries office with 7 - 20 characters, ex. 444-8888, 614-333-9999.
	;;^DD(36,.159,21,0)
	;;=^^1^1^2931122^^
	;;^DD(36,.159,21,1,0)
	;;=Enter the fax number of the inquiries office of this insurance carrier.
	;;^DD(36,.159,"DT")
	;;=2931122
	;;^DD(36,.16,0)
	;;=REPOINT PATIENTS TO^P36^DIC(36,^0;16^Q
	;;^DD(36,.16,9)
	;;=^
	;;^DD(36,.16,21,0)
	;;=^^2^2^2940228^^
	;;^DD(36,.16,21,1,0)
	;;=If an insurance company has been inactivated and the patients repointed
	;;^DD(36,.16,21,2,0)
	;;=to another company then this is the company that they are assigned.
	;;^DD(36,.16,23,0)
	;;=^^1^1^2940228^
	;;^DD(36,.16,23,1,0)
	;;=This field will be maintained by the computer.  Do not manually enter/edit.
	;;^DD(36,.16,"DT")
	;;=2940228
	;;^DD(36,.161,0)
	;;=CLAIMS (OPT) STREET ADDRESS 1^F^^.16;1^K:$L(X)>35!($L(X)<3) X
	;;^DD(36,.161,1,0)
	;;=^.1
	;;^DD(36,.161,1,1,0)
	;;=^^TRIGGER^36^.162
	;;^DD(36,.161,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.161,1,1,1.4)
	;;^DD(36,.161,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,2)=DIV,DIH=36,DIG=.162 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.161,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.161,1,1,2.4)
	;;^DD(36,.161,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,2)=DIV,DIH=36,DIG=.162 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI00W
IBINI00W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.161,1,1,"%D",0)
	;;=^^2^2^2930715^^
	;;^DD(36,.161,1,1,"%D",1,0)
	;;=When changing or deleting CLAIMS (OPT) STREET ADDRESS 1 delete CLAIMS
	;;^DD(36,.161,1,1,"%D",2,0)
	;;=(OPT) STREET ADDRESS 2.
	;;^DD(36,.161,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.161,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.161,1,1,"FIELD")
	;;=#.162
	;;^DD(36,.161,1,2,0)
	;;=^^TRIGGER^36^.163
	;;^DD(36,.161,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.161,1,2,1.4)
	;;^DD(36,.161,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,3)=DIV,DIH=36,DIG=.163 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.161,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.161,1,2,2.4)
	;;^DD(36,.161,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,3)=DIV,DIH=36,DIG=.163 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.161,1,2,"%D",0)
	;;=^^2^2^2930715^^
	;;^DD(36,.161,1,2,"%D",1,0)
	;;=When changing or deleting CLAIMS (OPT) STREET ADDRESS 1 delete CLAIMS
	;;^DD(36,.161,1,2,"%D",2,0)
	;;=(OPT) STREET ADDRESS 3.
	;;^DD(36,.161,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.161,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.161,1,2,"DT")
	;;=2930715
	;;^DD(36,.161,1,2,"FIELD")
	;;=#.163
	;;^DD(36,.161,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter Line 1 of the outpatient claims street address.  Answer must be 3-35 characters in length.
	;;^DD(36,.161,21,0)
	;;=^^2^2^2931007^^^
	;;^DD(36,.161,21,1,0)
	;;=Enter the first line of the street address for the outpatient claims
	;;^DD(36,.161,21,2,0)
	;;=office of this insurance carrier.
	;;^DD(36,.161,"DT")
	;;=2931007
	;;^DD(36,.162,0)
	;;=CLAIMS (OPT) STREET ADDRESS 2^F^^.16;2^K:$L(X)>35!($L(X)<3) X
	;;^DD(36,.162,1,0)
	;;=^.1
	;;^DD(36,.162,1,1,0)
	;;=^^TRIGGER^36^.163
	;;^DD(36,.162,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.162,1,1,1.4)
	;;^DD(36,.162,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,3)=DIV,DIH=36,DIG=.163 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.162,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.162,1,1,2.4)
	;;^DD(36,.162,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,3)=DIV,DIH=36,DIG=.163 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.162,1,1,"%D",0)
	;;=^^2^2^2930715^^
	;;^DD(36,.162,1,1,"%D",1,0)
	;;=When changing or deleting CLAIMS (OPT) STREET ADDRESS 2 delete CLAIMS (OPT) 
	;;^DD(36,.162,1,1,"%D",2,0)
	;;=STREET ADDRESS 3.
	;;^DD(36,.162,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.162,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.162,1,1,"FIELD")
	;;=#.163
	;;^DD(36,.162,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter Line 2 of the outpatient claims street address.  Answer must be 3-35 characters in length.
	;;^DD(36,.162,5,1,0)
	;;=36^.161^1
	;;^DD(36,.162,21,0)
	;;=^^2^2^2930715^
	;;^DD(36,.162,21,1,0)
	;;=If this insurance company's outpatient claims office street address is
	;;^DD(36,.162,21,2,0)
	;;=longer than one line, enter the second line here.
	;;^DD(36,.162,"DT")
	;;=2930715
	;;^DD(36,.163,0)
	;;=CLAIMS (OPT) STREET ADDRESS 3^F^^.16;3^K:$L(X)>35!($L(X)<3) X
	;;^DD(36,.163,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter Line 3 of the outpatient claims street address.  Answer must be 3-35 characters in length.

IBINI00X
IBINI00X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.163,5,1,0)
	;;=36^.161^2
	;;^DD(36,.163,5,2,0)
	;;=36^.162^1
	;;^DD(36,.163,21,0)
	;;=^^1^1^2930715^
	;;^DD(36,.163,21,1,0)
	;;=If this insurance company's outpatient claims office street address is longer than two lines, enter the third line here.
	;;^DD(36,.163,"DT")
	;;=2930715
	;;^DD(36,.164,0)
	;;=CLAIMS (OPT) PROCESS CITY^F^^.16;4^K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.164,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter city of the outpatient claims process address.  Answer must be 2-25 characters in length.
	;;^DD(36,.164,21,0)
	;;=^^1^1^2930715^
	;;^DD(36,.164,21,1,0)
	;;=Enter the city in which this insurance company's outpatient claims office is located.
	;;^DD(36,.164,"DT")
	;;=2930715
	;;^DD(36,.165,0)
	;;=CLAIMS (OPT) PROCESS STATE^P5'^DIC(5,^.16;5^Q
	;;^DD(36,.165,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter state of the outpatient claims address.
	;;^DD(36,.165,21,0)
	;;=^^3^3^2931007^^^^
	;;^DD(36,.165,21,1,0)
	;;=Enter the state in which this insurance company's outpatient claims
	;;^DD(36,.165,21,2,0)
	;;=office is located.  Enter state even if it is the same as the state
	;;^DD(36,.165,21,3,0)
	;;=of the company's main address.
	;;^DD(36,.165,"DT")
	;;=2930715
	;;^DD(36,.166,0)
	;;=CLAIMS (OPT) PROCESS ZIP^FXO^^.16;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.166,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.166,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.166,3)
	;;=If the outpatient claims process address of this company is different from its main address, enter zip code of the outpatient claims process address.  Answer with either 5 digit or 9 digit zip code.
	;;^DD(36,.166,21,0)
	;;=^^1^1^2930816^^^^
	;;^DD(36,.166,21,1,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 digit zip code (in format 123456789 or 12345-6789).
	;;^DD(36,.166,"DT")
	;;=2930816
	;;^DD(36,.167,0)
	;;=CLAIMS (OPT) COMPANY NAME^*P36'X^DIC(36,^.16;7^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.16)),U,7),Y'=DA" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.167,3)
	;;=
	;;^DD(36,.167,5,1,0)
	;;=36^.168^1
	;;^DD(36,.167,12)
	;;=Select an active Insurance Company that will process Outpatient Claims for this company.  It may not be this company or have another company process outpatient claims for it.
	;;^DD(36,.167,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.16)),U,7),Y'=DA"
	;;^DD(36,.167,21,0)
	;;=^^4^4^2931006^^^^
	;;^DD(36,.167,21,1,0)
	;;=You can only select a company that processes claims.  The company
	;;^DD(36,.167,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.167,21,3,0)
	;;=same company as the entry being edited, and must not have another
	;;^DD(36,.167,21,4,0)
	;;=company specified as handling Outpatient Claims for it.
	;;^DD(36,.167,"DT")
	;;=2931001
	;;^DD(36,.168,0)
	;;=ANOTHER CO. PROCESS CLAIMS?^S^0:NO;1:YES;^.16;8^Q
	;;^DD(36,.168,.1)
	;;=Are Outpatient Claims Processed by Another Insurance Co.?
	;;^DD(36,.168,1,0)
	;;=^.1
	;;^DD(36,.168,1,1,0)
	;;=^^TRIGGER^36^.167
	;;^DD(36,.168,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.16)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.16)):^(.16),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(36,.168,1,1,1.4)
	;;^DD(36,.168,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.16)):^(.16),1:""),DIV=X S $P(^(.16),U,7)=DIV,DIH=36,DIG=.167 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.168,1,1,2)
	;;=Q

IBINI00Y
IBINI00Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.168,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.16)),"^",8)
	;;^DD(36,.168,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.168,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.168,1,1,"DT")
	;;=2931006
	;;^DD(36,.168,1,1,"FIELD")
	;;=#.167
	;;^DD(36,.168,21,0)
	;;=^^1^1^2931007^^^^
	;;^DD(36,.168,21,1,0)
	;;=Enter "Yes" if another insurance company processes Outpatient Claims.
	;;^DD(36,.168,"DT")
	;;=2931007
	;;^DD(36,.169,0)
	;;=CLAIMS (OPT) FAX^F^^.16;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.169,3)
	;;=Enter the fax number of the outpatient claims office with 7 - 20 characters, ex. 444-8888, 614-333-9999.
	;;^DD(36,.169,21,0)
	;;=^^1^1^2931122^^
	;;^DD(36,.169,21,1,0)
	;;=Enter the fax number of the outpatient claims office of this insurance carrier.
	;;^DD(36,.169,"DT")
	;;=2931122
	;;^DD(36,.178,0)
	;;=ANOTHER CO. PROCESS PRECERTS?^S^0:NO;1:YES;^.17;8^Q
	;;^DD(36,.178,.1)
	;;=Are Precerts Processed by Another Insurance Co.?
	;;^DD(36,.178,1,0)
	;;=^.1
	;;^DD(36,.178,1,1,0)
	;;=^^TRIGGER^36^.139
	;;^DD(36,.178,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.17)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.13)):^(.13),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(36,.178,1,1,1.4)
	;;^DD(36,.178,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.13)):^(.13),1:""),DIV=X S $P(^(.13),U,9)=DIV,DIH=36,DIG=.139 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.178,1,1,2)
	;;=Q
	;;^DD(36,.178,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.17)),"^",8)
	;;^DD(36,.178,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.178,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.178,1,1,"FIELD")
	;;=#.139
	;;^DD(36,.178,21,0)
	;;=^^1^1^2931007^^
	;;^DD(36,.178,21,1,0)
	;;=Enter "Yes" if another insurance company processes precerts.
	;;^DD(36,.178,"DT")
	;;=2931007
	;;^DD(36,.181,0)
	;;=CLAIMS (RX) STREET ADDRESS 1^F^^.18;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.181,1,0)
	;;=^.1
	;;^DD(36,.181,1,1,0)
	;;=^^TRIGGER^36^.182
	;;^DD(36,.181,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.181,1,1,1.4)
	;;^DD(36,.181,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,2)=DIV,DIH=36,DIG=.182 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.181,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(36,.181,1,1,2.4)
	;;^DD(36,.181,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,2)=DIV,DIH=36,DIG=.182 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.181,1,1,"%D",0)
	;;=^^1^1^2940104^^
	;;^DD(36,.181,1,1,"%D",1,0)
	;;=When changing or deleting CLAIMS (RX) STREET 1 delete CLAIMS (RX) STREET ADDRESS 1.
	;;^DD(36,.181,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.181,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.181,1,1,"FIELD")
	;;=#.182
	;;^DD(36,.181,1,2,0)
	;;=^^TRIGGER^36^.183
	;;^DD(36,.181,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.181,1,2,1.4)
	;;^DD(36,.181,1,2,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,3)=DIV,DIH=36,DIG=.183 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.181,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.181,1,2,2.4)
	;;^DD(36,.181,1,2,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,3)=DIV,DIH=36,DIG=.183 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.181,1,2,"%D",0)
	;;=^^1^1^2940104^

IBINI00Z
IBINI00Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.181,1,2,"%D",1,0)
	;;=When changing or deleting CLAIMS (RX) STREET ADDRESS 1 delete CLAIMS (RX) STREET ADDRESS 2.
	;;^DD(36,.181,1,2,"CREATE VALUE")
	;;=@
	;;^DD(36,.181,1,2,"DELETE VALUE")
	;;=@
	;;^DD(36,.181,1,2,"DT")
	;;=2940104
	;;^DD(36,.181,1,2,"FIELD")
	;;=#.183
	;;^DD(36,.181,3)
	;;=If the prescription claims address of this company is different from its main address, enter Line 1 of the prescription claims address.  Answer must be 3-30 characters in length.
	;;^DD(36,.181,21,0)
	;;=^^1^1^2940104^^^
	;;^DD(36,.181,21,1,0)
	;;=Enter the first line of the street address for the prescription claims office of this insurance carrier.
	;;^DD(36,.181,"DT")
	;;=2940104
	;;^DD(36,.182,0)
	;;=CLAIMS (RX) STREET ADDRESS 2^F^^.18;2^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.182,1,0)
	;;=^.1
	;;^DD(36,.182,1,1,0)
	;;=^^TRIGGER^36^.183
	;;^DD(36,.182,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.182,1,1,1.4)
	;;^DD(36,.182,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,3)=DIV,DIH=36,DIG=.183 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.182,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(36,.182,1,1,2.4)
	;;^DD(36,.182,1,1,2.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,3)=DIV,DIH=36,DIG=.183 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.182,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.182,1,1,"DELETE VALUE")
	;;=@
	;;^DD(36,.182,1,1,"FIELD")
	;;=#.183
	;;^DD(36,.182,3)
	;;=If the prescription claims address of this company is different from its main address, enter Line 2 of the prescription claims address.  Answer must be 3-30 characters in length.
	;;^DD(36,.182,5,1,0)
	;;=36^.181^1
	;;^DD(36,.182,21,0)
	;;=^^1^1^2940103^
	;;^DD(36,.182,21,1,0)
	;;=If this insurance company's prescription claims office street address is longer than one line, enter the second line here.
	;;^DD(36,.182,"DT")
	;;=2940104
	;;^DD(36,.183,0)
	;;=CLAIMS (RX) STREET ADDRESS 3^F^^.18;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(36,.183,3)
	;;=If the prescription clais office address of this company is different from its main address, enter Line 3 of the prescription claims street address.  Answer must be 3-30 characters in length.
	;;^DD(36,.183,5,1,0)
	;;=36^.181^2
	;;^DD(36,.183,5,2,0)
	;;=36^.182^1
	;;^DD(36,.183,21,0)
	;;=^^1^1^2940103^
	;;^DD(36,.183,21,1,0)
	;;=If this insurance company's prescription claims office street address is longer than two lines, enter the third line here.
	;;^DD(36,.183,"DT")
	;;=2940103
	;;^DD(36,.184,0)
	;;=CLAIMS (RX) CITY^F^^.18;4^K:$L(X)>25!($L(X)<2) X
	;;^DD(36,.184,3)
	;;=If the prescription claims office address of this company is different from its main address, enter city of the prescription claims address.  Answer must be 2-25 characters in length.
	;;^DD(36,.184,21,0)
	;;=^^1^1^2940103^
	;;^DD(36,.184,21,1,0)
	;;=Enter the city in which this insurance company's prescription claims office is located.
	;;^DD(36,.184,"DT")
	;;=2940103
	;;^DD(36,.185,0)
	;;=CLAIMS (RX) STATE^P5'^DIC(5,^.18;5^Q
	;;^DD(36,.185,3)
	;;=If the prescription clais office address of this company is different from its main address, enter state of the prescription claims office.
	;;^DD(36,.185,21,0)
	;;=^^1^1^2940103^^
	;;^DD(36,.185,21,1,0)
	;;=Enter the state in which this insurance company's prescription claims office is located.  Enter state even if it is the same as the state of the company's main address.

IBINI010
IBINI010	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,.185,"DT")
	;;=2940103
	;;^DD(36,.186,0)
	;;=CLAIMS (RX) ZIP^FXO^^.18;6^K:$L(X)>20!($L(X)<5) X I $D(X) D ZIPIN^VAFADDR
	;;^DD(36,.186,2)
	;;=S Y(0)=Y D ZIPOUT^VAFADDR
	;;^DD(36,.186,2.1)
	;;=D ZIPOUT^VAFADDR
	;;^DD(36,.186,3)
	;;=If the prescription claims address of this company is different from its main address, enter zip code of the prescription claims address.  Answer with either 5 digit or 9 digit zip code.
	;;^DD(36,.186,21,0)
	;;=^^1^1^2940103^
	;;^DD(36,.186,21,1,0)
	;;=Answer with either the 5 digit zip code (format 12345) or with the 9 digit zip code (in format 123456789 or 12345-6789).
	;;^DD(36,.186,"DT")
	;;=2940104
	;;^DD(36,.187,0)
	;;=CLAIMS (RX) COMPANY NAME^*P36'X^DIC(36,^.18;7^S DIC(0)=DIC(0)_"F",DIC("S")="I '$P(^(0),U,5),'$P($G(^(.18)),U,7),(Y'=DA)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(36,.187,5,1,0)
	;;=36^.188^1
	;;^DD(36,.187,12)
	;;=Select a company that processes prescription claims for this company.  Must be active, not this company, and process its own prescription claims.
	;;^DD(36,.187,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5),'$P($G(^(.18)),U,7),(Y'=DA)"
	;;^DD(36,.187,21,0)
	;;=^^4^4^2940103^
	;;^DD(36,.187,21,1,0)
	;;=You can only select a company that processes Prescriptions.  The company
	;;^DD(36,.187,21,2,0)
	;;=specified in this field must be an active insurance company, not the
	;;^DD(36,.187,21,3,0)
	;;=same company as the entry being edited, and must not have another company
	;;^DD(36,.187,21,4,0)
	;;=specified as handling Prescriptions for it.
	;;^DD(36,.187,"DT")
	;;=2940104
	;;^DD(36,.188,0)
	;;=ANOTHER CO. PROCESS RX CLAIMS?^S^0:NO;1:YES;^.18;8^Q
	;;^DD(36,.188,.1)
	;;=Are Rx Claims Processed by Another Insurance Co.?
	;;^DD(36,.188,1,0)
	;;=^.1
	;;^DD(36,.188,1,1,0)
	;;=^^TRIGGER^36^.187
	;;^DD(36,.188,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X='$P($G(^DIC(36,DA,.18)),"^",8) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,.18)):^(.18),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(36,.188,1,1,1.4)
	;;^DD(36,.188,1,1,1.4)
	;;=S DIH=$S($D(^DIC(36,DIV(0),.18)):^(.18),1:""),DIV=X S $P(^(.18),U,7)=DIV,DIH=36,DIG=.187 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(36,.188,1,1,2)
	;;=Q
	;;^DD(36,.188,1,1,"%D",0)
	;;=^^1^1^2940104^
	;;^DD(36,.188,1,1,"%D",1,0)
	;;=Enter "Yes" if another insurance company processes prescription claims.
	;;^DD(36,.188,1,1,"CREATE CONDITION")
	;;=S X='$P($G(^DIC(36,DA,.18)),"^",8)
	;;^DD(36,.188,1,1,"CREATE VALUE")
	;;=@
	;;^DD(36,.188,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(36,.188,1,1,"FIELD")
	;;=#.187
	;;^DD(36,.188,21,0)
	;;=^^1^1^2940121^^^
	;;^DD(36,.188,21,1,0)
	;;=Enter "Yes" if another insurance company processes prescription claims.
	;;^DD(36,.188,"DT")
	;;=2940104
	;;^DD(36,.189,0)
	;;=CLAIMS (RX) FAX^F^^.18;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(36,.189,3)
	;;=Enter the fax number of the prescription claims office with 7-20 characters, ex. 444-8888, 614-333-9999.
	;;^DD(36,.189,21,0)
	;;=^^1^1^2940103^^
	;;^DD(36,.189,21,1,0)
	;;=Enter the fax number of the prescription claims office of this insurance carrier.
	;;^DD(36,.189,"DT")
	;;=2940103
	;;^DD(36,1,0)
	;;=REIMBURSE?^RS^Y:WILL REIMBURSE;*:WILL REIMBURSE IF TREATED UNDER VAR 6046(C) OR VAR 6060.2(A);**:DEPENDS ON POLICY, CHECK WITH COMPANY;N:WILL NOT REIMBURSE;^0;2^Q
	;;^DD(36,1,21,0)
	;;=^^3^3^2930927^^
	;;^DD(36,1,21,1,0)
	;;=Choose from the available list of choices the appropriate code denoting
	;;^DD(36,1,21,2,0)
	;;=whether or not and under which circumstances this insurance carrier will
	;;^DD(36,1,21,3,0)
	;;=reimburse the Dept of Veterans Affairs for care received.

IBINI011
IBINI011	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36,1,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,1,"DT")
	;;=2901102
	;;^DD(36,2,0)
	;;=SIGNATURE REQUIRED ON BILL?^RS^0:NO;1:YES;^0;3^Q
	;;^DD(36,2,3)
	;;=Enter 'Yes' if a bill sent to this insurance carrier requires a manual signature or 'No' if it does not.
	;;^DD(36,2,21,0)
	;;=^^2^2^2911222^
	;;^DD(36,2,21,1,0)
	;;=Enter a yes or no in this field denoting whether a signature is required
	;;^DD(36,2,21,2,0)
	;;=on a bill before being submitted to the insurance carrier.
	;;^DD(36,2,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36,2,"DT")
	;;=2911222
	;;^DD(36,10,0)
	;;=SYNONYM^36.03^^10;0
	;;^DD(36,11,0)
	;;=REMARKS^36.011^^11;0
	;;^DD(36,11,21,0)
	;;=^^3^3^2931109^
	;;^DD(36,11,21,1,0)
	;;=You may enter unlimited free text comments about this insurance company.
	;;^DD(36,11,21,2,0)
	;;=It may be helpful to date ongoing comments and identify the source of 
	;;^DD(36,11,21,3,0)
	;;=the comments.
	;;^DD(36,11,"DT")
	;;=2931109
	;;^DD(36,30,0)
	;;=*ADDRESS^36.02I^^2;0
	;;^DD(36.011,0)
	;;=REMARKS SUB-FIELD^^.01^1
	;;^DD(36.011,0,"DT")
	;;=2931109
	;;^DD(36.011,0,"NM","REMARKS")
	;;=
	;;^DD(36.011,0,"UP")
	;;=36
	;;^DD(36.011,.01,0)
	;;=REMARKS^W^^0;1^Q
	;;^DD(36.011,.01,3)
	;;=You may enter comments about this insurance company.
	;;^DD(36.011,.01,"DT")
	;;=2931109
	;;^DD(36.02,0)
	;;=*ADDRESS SUB-FIELD^^6^6
	;;^DD(36.02,0,"ID",.01)
	;;=I $D(^(0)) S %A=^(0) W !?3,$P(%A,U,2),",",?15," ",$S($D(^DIC(5,+$P(%A,U,3),0)):$P(^(0),U,1),1:""),?30," ",$P(%A,U,4) K %A
	;;^DD(36.02,0,"IX","B",36.02,.01)
	;;=
	;;^DD(36.02,0,"IX","C",36.02,3)
	;;=
	;;^DD(36.02,0,"IX","D",36.02,2)
	;;=
	;;^DD(36.02,0,"NM","*ADDRESS")
	;;=
	;;^DD(36.02,0,"UP")
	;;=36
	;;^DD(36.02,.01,0)
	;;=STREET^FX^^0;1^K:$L(X)>35!($L(X)<3) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,.01,1,0)
	;;=^.1
	;;^DD(36.02,.01,1,1,0)
	;;=36.02^B
	;;^DD(36.02,.01,1,1,1)
	;;=S ^DIC(36,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(36.02,.01,1,1,2)
	;;=K ^DIC(36,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(36.02,.01,3)
	;;=ANSWER MUST BE 3-35 CHARACTERS IN LENGTH
	;;^DD(36.02,.01,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,.01,"DT")
	;;=2880914
	;;^DD(36.02,2,0)
	;;=CITY^FX^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>25!($L(X)<2) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,2,1,0)
	;;=^.1
	;;^DD(36.02,2,1,1,0)
	;;=36.02^D
	;;^DD(36.02,2,1,1,1)
	;;=S ^DIC(36,DA(1),2,"D",$E(X,1,30),DA)=""
	;;^DD(36.02,2,1,1,2)
	;;=K ^DIC(36,DA(1),2,"D",$E(X,1,30),DA)
	;;^DD(36.02,2,3)
	;;=ANSWER MUST BE 2-25 CHARACTERS IN LENGTH
	;;^DD(36.02,2,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,2,"DT")
	;;=2890124
	;;^DD(36.02,3,0)
	;;=STATE^P5'X^DIC(5,^0;3^K:'$D(DGINS) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,3,1,0)
	;;=^.1
	;;^DD(36.02,3,1,1,0)
	;;=36.02^C
	;;^DD(36.02,3,1,1,1)
	;;=S ^DIC(36,DA(1),2,"C",$E(X,1,30),DA)=""
	;;^DD(36.02,3,1,1,2)
	;;=K ^DIC(36,DA(1),2,"C",$E(X,1,30),DA)
	;;^DD(36.02,3,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,3,"DT")
	;;=2880914
	;;^DD(36.02,4,0)
	;;=ZIP CODE^FX^^0;4^K:$L(X)>5!($L(X)<5) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,4,3)
	;;=ANSWER MUST BE 5 CHARACTERS IN LENGTH
	;;^DD(36.02,4,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,4,"DT")
	;;=2890106
	;;^DD(36.02,5,0)
	;;=TELEPHONE^FX^^0;5^K:$L(X)>20!($L(X)<7) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,5,3)
	;;=ANSWER MUST BE 7-20 CHARACTERS IN LENGTH
	;;^DD(36.02,5,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,5,"DT")
	;;=2890124
	;;^DD(36.02,6,0)
	;;=POINT TO^P36IX^DIC(36,^0;6^K:'$D(DGINS) X I $D(X) K:'$D(DGINS) X
	;;^DD(36.02,6,"DEL",1,0)
	;;=I $D(DGINS)
	;;^DD(36.02,6,"DT")
	;;=2880914
	;;^DD(36.03,0)
	;;=SYNONYM SUB-FIELD^^.01^1
	;;^DD(36.03,0,"DT")
	;;=2930326
	;;^DD(36.03,0,"IX","B",36.03,.01)
	;;=

IBINI012
IBINI012	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(36)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(36.03,0,"NM","SYNONYM")
	;;=
	;;^DD(36.03,0,"UP")
	;;=36
	;;^DD(36.03,.01,0)
	;;=SYNONYM^MF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(36.03,.01,1,0)
	;;=^.1
	;;^DD(36.03,.01,1,1,0)
	;;=36.03^B
	;;^DD(36.03,.01,1,1,1)
	;;=S ^DIC(36,DA(1),10,"B",$E(X,1,30),DA)=""
	;;^DD(36.03,.01,1,1,2)
	;;=K ^DIC(36,DA(1),10,"B",$E(X,1,30),DA)
	;;^DD(36.03,.01,1,2,0)
	;;=36^C
	;;^DD(36.03,.01,1,2,1)
	;;=S ^DIC(36,"C",$E(X,1,30),DA(1),DA)=""
	;;^DD(36.03,.01,1,2,2)
	;;=K ^DIC(36,"C",$E(X,1,30),DA(1),DA)
	;;^DD(36.03,.01,1,2,"DT")
	;;=2930326
	;;^DD(36.03,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(36.03,.01,21,0)
	;;=^^1^1^2930607^
	;;^DD(36.03,.01,21,1,0)
	;;=Enter other terms for referring to this insurance company.
	;;^DD(36.03,.01,"DT")
	;;=2930326

IBINI013
IBINI013	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350,0,"GL")
	;;=^IB(
	;;^DIC("B","INTEGRATED BILLING ACTION",350)
	;;=
	;;^DIC(350,"%D",0)
	;;=^^25^25^2940214^^^^
	;;^DIC(350,"%D",1,0)
	;;=DO NOT delete entries in this file.  DO NOT edit data in this file with
	;;^DIC(350,"%D",2,0)
	;;=VA File Manager.
	;;^DIC(350,"%D",3,0)
	;;= 
	;;^DIC(350,"%D",4,0)
	;;=Entries in this file are created by other applications calling approved
	;;^DIC(350,"%D",5,0)
	;;=application specific routines.  This file is the link between Accounts
	;;^DIC(350,"%D",6,0)
	;;=Receivable and an application.  Integrated billing will attempt to
	;;^DIC(350,"%D",7,0)
	;;=aggregate charges where possible to reduce the number of account 
	;;^DIC(350,"%D",8,0)
	;;=entries necessary.  Resolution of charges from Accounts Receivable would
	;;^DIC(350,"%D",9,0)
	;;=then be accomplished through Integrated Billing.
	;;^DIC(350,"%D",10,0)
	;;= 
	;;^DIC(350,"%D",11,0)
	;;=Entries in this file will not be deleted or edited (except for the
	;;^DIC(350,"%D",12,0)
	;;=status field, cancellation reasons filed, last updated field, and
	;;^DIC(350,"%D",13,0)
	;;=user last updating field).  Rather than deleting an entry, an entry
	;;^DIC(350,"%D",14,0)
	;;=is "reversed" by creating an additional entry with the IB ACTION TYPE
	;;^DIC(350,"%D",15,0)
	;;=entry that cancels the original entry.  An entry is edited by creating
	;;^DIC(350,"%D",16,0)
	;;=the cancellation entry and then adding an updated new entry.  All entries
	;;^DIC(350,"%D",17,0)
	;;=related to the original entry will be related by the PARENT LINK field.
	;;^DIC(350,"%D",18,0)
	;;= 
	;;^DIC(350,"%D",19,0)
	;;=There is also an IB ACTION type that is an event, which may include
	;;^DIC(350,"%D",20,0)
	;;=Hospital admissions, NHCU admissions, and outpatient visits.  All of
	;;^DIC(350,"%D",21,0)
	;;=the charges associated with an event will be related to that event by
	;;^DIC(350,"%D",22,0)
	;;=the EVENT LINK field.
	;;^DIC(350,"%D",23,0)
	;;= 
	;;^DIC(350,"%D",24,0)
	;;= 
	;;^DIC(350,"%D",25,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350,0)
	;;=FIELD^^15^23
	;;^DD(350,0,"DIK")
	;;=IBXA
	;;^DD(350,0,"DT")
	;;=2930823
	;;^DD(350,0,"IX","ABIL",350,.11)
	;;=
	;;^DD(350,0,"IX","AC",350,.05)
	;;=
	;;^DD(350,0,"IX","ACT",350,.05)
	;;=
	;;^DD(350,0,"IX","ACT1",350,.16)
	;;=
	;;^DD(350,0,"IX","ACVA",350,.02)
	;;=
	;;^DD(350,0,"IX","ACVA1",350,15)
	;;=
	;;^DD(350,0,"IX","AD",350,.09)
	;;=
	;;^DD(350,0,"IX","AE",350,.03)
	;;=
	;;^DD(350,0,"IX","AF",350,.16)
	;;=
	;;^DD(350,0,"IX","AFDT",350,.02)
	;;=
	;;^DD(350,0,"IX","AFDT1",350,.17)
	;;=
	;;^DD(350,0,"IX","AH",350,.05)
	;;=
	;;^DD(350,0,"IX","AH1",350,.02)
	;;=
	;;^DD(350,0,"IX","AI",350,.05)
	;;=
	;;^DD(350,0,"IX","AI1",350,.02)
	;;=
	;;^DD(350,0,"IX","APDT",350,.09)
	;;=
	;;^DD(350,0,"IX","APDT1",350,12)
	;;=
	;;^DD(350,0,"IX","APTDT",350,.02)
	;;=
	;;^DD(350,0,"IX","APTDT1",350,12)
	;;=
	;;^DD(350,0,"IX","AT",350,.12)
	;;=
	;;^DD(350,0,"IX","B",350,.01)
	;;=
	;;^DD(350,0,"IX","C",350,.02)
	;;=
	;;^DD(350,0,"IX","D",350,12)
	;;=
	;;^DD(350,0,"NM","INTEGRATED BILLING ACTION")
	;;=
	;;^DD(350,0,"PT",52,106)
	;;=
	;;^DD(350,0,"PT",52.1,9)
	;;=
	;;^DD(350,0,"PT",350,.09)
	;;=
	;;^DD(350,0,"PT",350,.16)
	;;=
	;;^DD(350,0,"PT",351.2,.04)
	;;=
	;;^DD(350,0,"PT",351.3,.02)
	;;=
	;;^DD(350,.01,0)
	;;=REFERENCE NUMBER^RNJ12,0I^^0;1^K:+X'=X!(X>999999999999)!(X<1000)!(X?.E1"."1N.N) X
	;;^DD(350,.01,1,0)
	;;=^.1
	;;^DD(350,.01,1,1,0)
	;;=350^B
	;;^DD(350,.01,1,1,1)
	;;=S ^IB("B",$E(X,1,30),DA)=""
	;;^DD(350,.01,1,1,2)
	;;=K ^IB("B",$E(X,1,30),DA)
	;;^DD(350,.01,3)
	;;=Type a Number between 1000 and 999999999999, 0 Decimal Digits

IBINI014
IBINI014	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.01,21,0)
	;;=^^5^5^2940209^^^
	;;^DD(350,.01,21,1,0)
	;;=This is the station number concatenated with the internal number of 
	;;^DD(350,.01,21,2,0)
	;;=this entry in this file.  The purpose of this number is to provide
	;;^DD(350,.01,21,3,0)
	;;=a unique number for each entry for each station.  Modifying this
	;;^DD(350,.01,21,4,0)
	;;=number may have serious consequences when and where centralized
	;;^DD(350,.01,21,5,0)
	;;=billing and accounting are taking place.
	;;^DD(350,.01,"DEL",1,0)
	;;=I 1 W !,"Deleting entries not allowed"
	;;^DD(350,.01,"DT")
	;;=2910304
	;;^DD(350,.02,0)
	;;=PATIENT^P2'I^DPT(^0;2^Q
	;;^DD(350,.02,1,0)
	;;=^.1
	;;^DD(350,.02,1,1,0)
	;;=350^C
	;;^DD(350,.02,1,1,1)
	;;=S ^IB("C",$E(X,1,30),DA)=""
	;;^DD(350,.02,1,1,2)
	;;=K ^IB("C",$E(X,1,30),DA)
	;;^DD(350,.02,1,2,0)
	;;=350^AFDT^MUMPS
	;;^DD(350,.02,1,2,1)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",17) S ^IB("AFDT",X,-$P(^(0),"^",17),DA)=""
	;;^DD(350,.02,1,2,2)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",17) K ^IB("AFDT",X,-$P(^(0),"^",17),DA)
	;;^DD(350,.02,1,2,"%D",0)
	;;=^^5^5^2911101^
	;;^DD(350,.02,1,2,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries which represent inpatient/NHCU
	;;^DD(350,.02,1,2,"%D",2,0)
	;;=admissions by the patient field and the minus (negative or inverse) event
	;;^DD(350,.02,1,2,"%D",3,0)
	;;=date (#.17) field.  A billable event may be located for a patient using
	;;^DD(350,.02,1,2,"%D",4,0)
	;;=this cross-reference.  The "AFDT1" cross-reference on the event date (#.17)
	;;^DD(350,.02,1,2,"%D",5,0)
	;;=field is the companion to this cross-reference.
	;;^DD(350,.02,1,2,"DT")
	;;=2911101
	;;^DD(350,.02,1,3,0)
	;;=350^APTDT^MUMPS
	;;^DD(350,.02,1,3,1)
	;;=I $D(^IB(DA,1)),$P(^(1),"^",2) S ^IB("APTDT",X,$P(^(1),"^",2),DA)=""
	;;^DD(350,.02,1,3,2)
	;;=I $D(^IB(DA,1)),$P(^(1),"^",2) K ^IB("APTDT",X,$P(^(1),"^",2),DA)
	;;^DD(350,.02,1,3,"%D",0)
	;;=^^3^3^2920226^^^^
	;;^DD(350,.02,1,3,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries by patient (#.02) and date entry added
	;;^DD(350,.02,1,3,"%D",2,0)
	;;=(#12) fields.  The "APTDT1" cross-reference on the date entry added field is
	;;^DD(350,.02,1,3,"%D",3,0)
	;;=the companion to this cross-reference.
	;;^DD(350,.02,1,4,0)
	;;=350^AH1^MUMPS
	;;^DD(350,.02,1,4,1)
	;;=I $D(^IB(DA,0)),$P(^(0),U,5)=8 S ^IB("AH",X,DA)=""
	;;^DD(350,.02,1,4,2)
	;;=I $D(^IB(DA,0)),$P(^(0),U,5)=8 K ^IB("AH",X,DA)
	;;^DD(350,.02,1,4,"%D",0)
	;;=^^1^1^2920302^
	;;^DD(350,.02,1,4,"%D",1,0)
	;;=All mt bills in a hold status
	;;^DD(350,.02,1,4,"DT")
	;;=2920302
	;;^DD(350,.02,1,5,0)
	;;=350^AI1^MUMPS
	;;^DD(350,.02,1,5,1)
	;;=I $D(^IB(DA,0)),$P(^(0),U,5)=99 S ^IB("AI",X,DA)=""
	;;^DD(350,.02,1,5,2)
	;;=I $D(^IB(DA,0)),$P(^(0),U,5)=99 K ^IB("AI",X,DA)
	;;^DD(350,.02,1,5,"%D",0)
	;;=^^1^1^2920430^
	;;^DD(350,.02,1,5,"%D",1,0)
	;;=COMPANION TO AI X-REF ON FIELD .05
	;;^DD(350,.02,1,5,"DT")
	;;=2920430
	;;^DD(350,.02,1,6,0)
	;;=350^ACVA^MUMPS
	;;^DD(350,.02,1,6,1)
	;;=I X,$D(^IB(DA,1)),$P(^(1),"^",5) S ^IB("ACVA",X,$P(^(1),"^",5),DA)=""
	;;^DD(350,.02,1,6,2)
	;;=I X,$D(^IB(DA,1)),$P(^(1),"^",5) K ^IB("ACVA",X,$P(^(1),"^",5),DA)
	;;^DD(350,.02,1,6,"%D",0)
	;;=^^4^4^2930728^^
	;;^DD(350,.02,1,6,"%D",1,0)
	;;=This cross-reference is used in conjunction with the ACVA1 cross
	;;^DD(350,.02,1,6,"%D",2,0)
	;;=reference on the CHAMPVA ADM DATE (#15) field to cross reference
	;;^DD(350,.02,1,6,"%D",3,0)
	;;=all CHAMPVA inpatient subsistence charges by patient and admission
	;;^DD(350,.02,1,6,"%D",4,0)
	;;=date.
	;;^DD(350,.02,1,6,"DT")
	;;=2930728
	;;^DD(350,.02,21,0)
	;;=^^3^3^2910301^

IBINI015
IBINI015	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.02,21,1,0)
	;;=This is the patient that received services, care, or medications that
	;;^DD(350,.02,21,2,0)
	;;=caused this entry to be created.  If the debtor is the patient, this
	;;^DD(350,.02,21,3,0)
	;;=patient is the debtor.
	;;^DD(350,.02,"DT")
	;;=2930728
	;;^DD(350,.03,0)
	;;=ACTION TYPE^P350.1'I^IBE(350.1,^0;3^Q
	;;^DD(350,.03,1,0)
	;;=^.1^^-1
	;;^DD(350,.03,1,1,0)
	;;=350^AE
	;;^DD(350,.03,1,1,1)
	;;=S ^IB("AE",$E(X,1,30),DA)=""
	;;^DD(350,.03,1,1,2)
	;;=K ^IB("AE",$E(X,1,30),DA)
	;;^DD(350,.03,3)
	;;=
	;;^DD(350,.03,21,0)
	;;=^^7^7^2940209^^^^
	;;^DD(350,.03,21,1,0)
	;;=This field points to an entry in the IB ACTION TYPE file.  Entries in
	;;^DD(350,.03,21,2,0)
	;;=the IB ACTION TYPE file provide specific information about the type
	;;^DD(350,.03,21,3,0)
	;;=of entry that is being created and provides data necessary to AR and
	;;^DD(350,.03,21,4,0)
	;;=to resolve the data from the application.
	;;^DD(350,.03,21,5,0)
	;;= 
	;;^DD(350,.03,21,6,0)
	;;=Applications passing data to IB determine the Action Type and pass this
	;;^DD(350,.03,21,7,0)
	;;=to IB.
	;;^DD(350,.03,"DT")
	;;=2910304
	;;^DD(350,.04,0)
	;;=RESULTING FROM^FI^^0;4^K:$L(X)>20!($L(X)<1) X
	;;^DD(350,.04,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(350,.04,21,0)
	;;=^^8^8^2940209^^^^
	;;^DD(350,.04,21,1,0)
	;;=This will be the soft-link back to the entry in any file that caused
	;;^DD(350,.04,21,2,0)
	;;=this transaction to be set.  It will be in the format of:
	;;^DD(350,.04,21,3,0)
	;;= 
	;;^DD(350,.04,21,4,0)
	;;=    filenumber:entry;[node:sub-entry];[node:sub-entry]...
	;;^DD(350,.04,21,5,0)
	;;= 
	;;^DD(350,.04,21,6,0)
	;;=The number of node:sub-entry pieces will depend on the level of
	;;^DD(350,.04,21,7,0)
	;;=multiples that cause the entry.  For example, a new prescription
	;;^DD(350,.04,21,8,0)
	;;=might be '52:345678'  but the first refill might be '52:345678;1,1'.
	;;^DD(350,.04,"DT")
	;;=2910304
	;;^DD(350,.05,0)
	;;=STATUS^P350.21'^IBE(350.21,^0;5^Q
	;;^DD(350,.05,1,0)
	;;=^.1
	;;^DD(350,.05,1,1,0)
	;;=350^AC
	;;^DD(350,.05,1,1,1)
	;;=S ^IB("AC",$E(X,1,30),DA)=""
	;;^DD(350,.05,1,1,2)
	;;=K ^IB("AC",$E(X,1,30),DA)
	;;^DD(350,.05,1,2,0)
	;;=^^TRIGGER^350^13
	;;^DD(350,.05,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IB(D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:.5) X ^DD(350,.05,1,2,1.4)
	;;^DD(350,.05,1,2,1.4)
	;;=S DIH=$S($D(^IB(DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=350,DIG=13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350,.05,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IB(D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:.5) X ^DD(350,.05,1,2,2.4)
	;;^DD(350,.05,1,2,2.4)
	;;=S DIH=$S($D(^IB(DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=350,DIG=13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350,.05,1,2,"CREATE VALUE")
	;;=S X=$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:.5)
	;;^DD(350,.05,1,2,"DELETE VALUE")
	;;=S X=$S($D(IBDUZ):IBDUZ,$D(DUZ):DUZ,1:.5)
	;;^DD(350,.05,1,2,"FIELD")
	;;=#13
	;;^DD(350,.05,1,3,0)
	;;=^^TRIGGER^350^14
	;;^DD(350,.05,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IB(D0,1)):^(1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(350,.05,1,3,1.1) X ^DD(350,.05,1,3,1.4)
	;;^DD(350,.05,1,3,1.1)
	;;=S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
	;;^DD(350,.05,1,3,1.4)
	;;=S DIH=$S($D(^IB(DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,4)=DIV,DIH=350,DIG=14 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350,.05,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IB(D0,1)):^(1),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(350,.05,1,3,2.1) X ^DD(350,.05,1,3,2.4)

IBINI016
IBINI016	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.05,1,3,2.1)
	;;=S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
	;;^DD(350,.05,1,3,2.4)
	;;=S DIH=$S($D(^IB(DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,4)=DIV,DIH=350,DIG=14 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350,.05,1,3,"CREATE VALUE")
	;;=NOW
	;;^DD(350,.05,1,3,"DELETE VALUE")
	;;=NOW
	;;^DD(350,.05,1,3,"FIELD")
	;;=#14
	;;^DD(350,.05,1,4,0)
	;;=350^ACT^MUMPS
	;;^DD(350,.05,1,4,1)
	;;=I X=1,$D(^IB(DA,0)),$P($G(^IBE(350.1,+$P(^(0),"^",3),0)),"^")'["ADMISSION",$P(^IB(DA,0),"^",16) S ^IB("ACT",$P(^(0),"^",16),DA)=""
	;;^DD(350,.05,1,4,2)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",16) K ^IB("ACT",$P(^(0),"^",16),DA)
	;;^DD(350,.05,1,4,"%D",0)
	;;=^^11^11^2920115^^^^
	;;^DD(350,.05,1,4,"%D",1,0)
	;;=Cross-reference of all IB ACTIONS for Means Test/Category C charges
	;;^DD(350,.05,1,4,"%D",2,0)
	;;=which have a status of INCOMPLETE (cross-referenced by the parent event
	;;^DD(350,.05,1,4,"%D",3,0)
	;;=(#.16) field).
	;;^DD(350,.05,1,4,"%D",4,0)
	;;= 
	;;^DD(350,.05,1,4,"%D",5,0)
	;;=This is a temporary cross-reference which is used to locate per diem
	;;^DD(350,.05,1,4,"%D",6,0)
	;;=and co-payment charges, for an inpatient/NHCU admission, which are
	;;^DD(350,.05,1,4,"%D",7,0)
	;;=established, but not yet passed to AR.  The cross-reference is set
	;;^DD(350,.05,1,4,"%D",8,0)
	;;=whenever the status of a billable charge is changed to 1 (INCOMPLETE),
	;;^DD(350,.05,1,4,"%D",9,0)
	;;=and killed whenever the parent event (#.16) field is defined.  The
	;;^DD(350,.05,1,4,"%D",10,0)
	;;="ACT1" cross-reference on the parent event field is the companion
	;;^DD(350,.05,1,4,"%D",11,0)
	;;=to this cross-reference.
	;;^DD(350,.05,1,4,"DT")
	;;=2911106
	;;^DD(350,.05,1,5,0)
	;;=350^AH^MUMPS
	;;^DD(350,.05,1,5,1)
	;;=I X=8,$P(^IB(DA,0),U,2) S ^IB("AH",$P(^IB(DA,0),U,2),DA)=""
	;;^DD(350,.05,1,5,2)
	;;=I $P(^IB(DA,0),U,2) K ^IB("AH",$P(^IB(DA,0),U,2),DA)
	;;^DD(350,.05,1,5,"%D",0)
	;;=^^1^1^2920427^^^
	;;^DD(350,.05,1,5,"%D",1,0)
	;;=All mt bills in a hold status.
	;;^DD(350,.05,1,5,"DT")
	;;=2920302
	;;^DD(350,.05,1,6,0)
	;;=350^AI^MUMPS
	;;^DD(350,.05,1,6,1)
	;;=I X=99,$P(^IB(DA,0),U,2) S ^IB("AI",$P(^IB(DA,0),U,2),DA)=""
	;;^DD(350,.05,1,6,2)
	;;=I $P(^IB(DA,0),U,2) K ^IB("AI",$P(^IB(DA,0),U,2),DA)
	;;^DD(350,.05,1,6,"%D",0)
	;;=^^1^1^2920427^^^
	;;^DD(350,.05,1,6,"%D",1,0)
	;;=ALL MT BILLS IN CONVERTED STATUS
	;;^DD(350,.05,1,6,"DT")
	;;=2920427
	;;^DD(350,.05,3)
	;;=
	;;^DD(350,.05,21,0)
	;;=^^19^19^2930823^^^^
	;;^DD(350,.05,21,1,0)
	;;=This is the current status of this entry.  The IB routines will maintain
	;;^DD(350,.05,21,2,0)
	;;=this field.  An entry will be incomplete when it is created, complete
	;;^DD(350,.05,21,3,0)
	;;=when all data needed to pass to AR is there, and Billed after passing to
	;;^DD(350,.05,21,4,0)
	;;=AR and the bill number and/or transaction number have been added.
	;;^DD(350,.05,21,5,0)
	;;= 
	;;^DD(350,.05,21,6,0)
	;;=If the entry represents a billable inpatient/NHCU admission (event), the
	;;^DD(350,.05,21,7,0)
	;;=status will be Incomplete while the patient is admitted, and then
	;;^DD(350,.05,21,8,0)
	;;=Complete when the patient has been discharged.  All entries created
	;;^DD(350,.05,21,9,0)
	;;=during the Means Test conversion will have the status Converted Record.
	;;^DD(350,.05,21,10,0)
	;;= 
	;;^DD(350,.05,21,11,0)
	;;=With Integrated Billing version 2.0, this field is changed from a set
	;;^DD(350,.05,21,12,0)
	;;=of codes field to a pointer which points to the IB ACTION STATUS
	;;^DD(350,.05,21,13,0)
	;;=(#350.21) file.  This change will allow new action statuses to be

IBINI017
IBINI017	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.05,21,14,0)
	;;=added more easily, and permit various characteristics to be assigned
	;;^DD(350,.05,21,15,0)
	;;=to the statuses to facilitate system processing.  IT IS IMPERATIVE
	;;^DD(350,.05,21,16,0)
	;;=THAT THESE NEW POINTED-TO ENTRIES HAVE AN INTERNAL ENTRY NUMBER IN
	;;^DD(350,.05,21,17,0)
	;;=FILE #350.21 WHICH IS EQUAL TO THEIR PREVIOUS CODE VALUE.  PLEASE
	;;^DD(350,.05,21,18,0)
	;;=CAREFULLY READ THE IB ACTION STATUS FILE DESCRIPTION FOR MORE
	;;^DD(350,.05,21,19,0)
	;;=INFORMATION.
	;;^DD(350,.05,"DT")
	;;=2930823
	;;^DD(350,.06,0)
	;;=UNITS^NJ4,0I^^0;6^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350,.06,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits
	;;^DD(350,.06,21,0)
	;;=^^3^3^2910301^^
	;;^DD(350,.06,21,1,0)
	;;=This is the number of units that will be multiplied times a specific
	;;^DD(350,.06,21,2,0)
	;;=charge that will be calculated to create the total charge.  This is
	;;^DD(350,.06,21,3,0)
	;;=passed to IB from the application.
	;;^DD(350,.06,"DT")
	;;=2910304
	;;^DD(350,.07,0)
	;;=TOTAL CHARGE^NJ10,2I^^0;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(350,.07,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(350,.07,21,0)
	;;=^^10^10^2940209^^^
	;;^DD(350,.07,21,1,0)
	;;=This is the total charge for this entry, that will be passed to
	;;^DD(350,.07,21,2,0)
	;;=AR.  It is calculated and stored by IB routines.  NOTE: Several IB
	;;^DD(350,.07,21,3,0)
	;;=ACTION entries may be combined into one pass to AR so that there may
	;;^DD(350,.07,21,4,0)
	;;=not be a one to one relationship between this entry and one in AR.
	;;^DD(350,.07,21,5,0)
	;;= 
	;;^DD(350,.07,21,6,0)
	;;=The TOTAL CHARGE for all entries will always be positive.  It is
	;;^DD(350,.07,21,7,0)
	;;=necessary to refer to the IB ACTION TYPE file to determine if this
	;;^DD(350,.07,21,8,0)
	;;=is a NEW, CANCEL or UPDATE.  Cancel action types will cause a decrease
	;;^DD(350,.07,21,9,0)
	;;=adjustment to a bill for this amount.  New and Update action types
	;;^DD(350,.07,21,10,0)
	;;=will cause an increase adjustment to a bill for this amount.
	;;^DD(350,.07,"DT")
	;;=2910304
	;;^DD(350,.08,0)
	;;=BRIEF DESCRIPTION^FI^^0;8^K:$L(X)>20!($L(X)<3) X
	;;^DD(350,.08,3)
	;;=Answer must be 3-20 characters in length.
	;;^DD(350,.08,21,0)
	;;=^^8^8^2910403^^
	;;^DD(350,.08,21,1,0)
	;;=This is a brief description of the application entry that caused this
	;;^DD(350,.08,21,2,0)
	;;=IB ACTION entry to be created.  For example, for Pharmacy co-payments
	;;^DD(350,.08,21,3,0)
	;;=it might indicate '100999-ENDURAL-2' which would indicate that this was
	;;^DD(350,.08,21,4,0)
	;;=prescription number 100999, the drug name started with ENDURAL and
	;;^DD(350,.08,21,5,0)
	;;=2 units (30-60 days supply) were given.
	;;^DD(350,.08,21,6,0)
	;;= 
	;;^DD(350,.08,21,7,0)
	;;=The logic to calculate this will be supplied by the application and
	;;^DD(350,.08,21,8,0)
	;;=stored with the IB ACTION TYPE entry for this action.
	;;^DD(350,.08,"DT")
	;;=2910304
	;;^DD(350,.09,0)
	;;=PARENT CHARGE^P350'I^IB(^0;9^Q
	;;^DD(350,.09,1,0)
	;;=^.1
	;;^DD(350,.09,1,1,0)
	;;=350^AD
	;;^DD(350,.09,1,1,1)
	;;=S ^IB("AD",$E(X,1,30),DA)=""
	;;^DD(350,.09,1,1,2)
	;;=K ^IB("AD",$E(X,1,30),DA)
	;;^DD(350,.09,1,2,0)
	;;=350^APDT^MUMPS
	;;^DD(350,.09,1,2,1)
	;;=I $D(^IB(DA,1)),$P(^(1),"^",2) S ^IB("APDT",$E(X,1,30),-$P(^(1),"^",2),DA)=""
	;;^DD(350,.09,1,2,2)
	;;=I $D(^IB(DA,1)),$P(^(1),"^",2) K ^IB("APDT",$E(X,1,30),-$P(^(1),"^",2),DA)
	;;^DD(350,.09,1,2,"%D",0)
	;;=^^5^5^2910417^^

IBINI018
IBINI018	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.09,1,2,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries by parent link (#.09) field and
	;;^DD(350,.09,1,2,"%D",2,0)
	;;=the minus (negative or inverse) date entry added (#12) field.  The most current ACTION
	;;^DD(350,.09,1,2,"%D",3,0)
	;;=for the original entry can be found using this cross-reference.  The "APDT1"
	;;^DD(350,.09,1,2,"%D",4,0)
	;;=cross-reference on the DATE ENTRY ADDED (#12) field is the companion to this
	;;^DD(350,.09,1,2,"%D",5,0)
	;;=cross-reference.
	;;^DD(350,.09,3)
	;;=
	;;^DD(350,.09,21,0)
	;;=^^12^12^2911105^^^^
	;;^DD(350,.09,21,1,0)
	;;=This is a pointer to the original IB ACTION entry that this entry refers
	;;^DD(350,.09,21,2,0)
	;;=to.  For a NEW entry, it will point to itself.  For all other entries it
	;;^DD(350,.09,21,3,0)
	;;=will point to the original entry.
	;;^DD(350,.09,21,4,0)
	;;= 
	;;^DD(350,.09,21,5,0)
	;;=An application then only needs to maintain the pointer to the original
	;;^DD(350,.09,21,6,0)
	;;=entry and can find the most recent entry for this entry as
	;;^DD(350,.09,21,7,0)
	;;= 
	;;^DD(350,.09,21,8,0)
	;;=  S x=$O(^IB("APDT",parent,0),x=$O(^(x,0))
	;;^DD(350,.09,21,9,0)
	;;= 
	;;^DD(350,.09,21,10,0)
	;;=If x '= parent then this is an updated entry, the pointer to the
	;;^DD(350,.09,21,11,0)
	;;=IB ACTION TYPE file will give you the sequence number which will indicate
	;;^DD(350,.09,21,12,0)
	;;=if this is cancelled or an updated entry.
	;;^DD(350,.09,"DT")
	;;=2911105
	;;^DD(350,.1,0)
	;;=CANCELLATION REASON^P350.3^IBE(350.3,^0;10^Q
	;;^DD(350,.1,3)
	;;=
	;;^DD(350,.1,21,0)
	;;=^^1^1^2910301^^
	;;^DD(350,.1,21,1,0)
	;;=This is the reason that this charge was cancelled.
	;;^DD(350,.1,"DT")
	;;=2910301
	;;^DD(350,.11,0)
	;;=AR BILL NUMBER^F^^0;11^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>12!($L(X)<6) X
	;;^DD(350,.11,1,0)
	;;=^.1
	;;^DD(350,.11,1,1,0)
	;;=350^ABIL
	;;^DD(350,.11,1,1,1)
	;;=S ^IB("ABIL",$E(X,1,30),DA)=""
	;;^DD(350,.11,1,1,2)
	;;=K ^IB("ABIL",$E(X,1,30),DA)
	;;^DD(350,.11,3)
	;;=Answer must be 6-12 characters in length.
	;;^DD(350,.11,21,0)
	;;=^^4^4^2910301^
	;;^DD(350,.11,21,1,0)
	;;=This is the free text bill number that this entry is charged to.  It
	;;^DD(350,.11,21,2,0)
	;;=is in the format of a PAT number.  It will be calculated by accounts
	;;^DD(350,.11,21,3,0)
	;;=receivable from the AR BILL NUMBER file for the service in the IB
	;;^DD(350,.11,21,4,0)
	;;=ACTION TYPE entry associated with this entry.
	;;^DD(350,.11,"DT")
	;;=2910306
	;;^DD(350,.12,0)
	;;=AR TRANSACTION NUMBER^NJ6,0^^0;12^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350,.12,1,0)
	;;=^.1
	;;^DD(350,.12,1,1,0)
	;;=350^AT
	;;^DD(350,.12,1,1,1)
	;;=S ^IB("AT",$E(X,1,30),DA)=""
	;;^DD(350,.12,1,1,2)
	;;=K ^IB("AT",$E(X,1,30),DA)
	;;^DD(350,.12,3)
	;;=Type a Number between 1 and 999999, 0 Decimal Digits
	;;^DD(350,.12,21,0)
	;;=^^4^4^2910301^
	;;^DD(350,.12,21,1,0)
	;;=This is the pointer value to the AR TRANSACTION file.  An entry that
	;;^DD(350,.12,21,2,0)
	;;=causes a new bill number to be created will not have an AR TRANSACTION
	;;^DD(350,.12,21,3,0)
	;;=file entry associated with it as the charge data will be stored with
	;;^DD(350,.12,21,4,0)
	;;=the original bill.
	;;^DD(350,.12,"DT")
	;;=2910329
	;;^DD(350,.13,0)
	;;=INSTITUTION^P4'I^DIC(4,^0;13^Q
	;;^DD(350,.13,3)
	;;=
	;;^DD(350,.13,21,0)
	;;=^^3^3^2910301^
	;;^DD(350,.13,21,1,0)
	;;=This is the facility that caused this bill.  The station number field of
	;;^DD(350,.13,21,2,0)
	;;=the institution file will be used in determining the reference number.
	;;^DD(350,.13,21,3,0)
	;;=Accounts Receivable will use the station number in the bill number.

IBINI019
IBINI019	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.13,"DT")
	;;=2910304
	;;^DD(350,.14,0)
	;;=DATE BILLED FROM^D^^0;14^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,.14,1,0)
	;;=^.1^^0
	;;^DD(350,.14,21,0)
	;;=^^1^1^2920414^^^^
	;;^DD(350,.14,21,1,0)
	;;=This is the first date in the date range covered by this billing action.
	;;^DD(350,.14,"DT")
	;;=2920302
	;;^DD(350,.15,0)
	;;=DATE BILLED TO^D^^0;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,.15,21,0)
	;;=^^1^1^2920414^^
	;;^DD(350,.15,21,1,0)
	;;=This is the last date in the date range covered by this billing action.
	;;^DD(350,.15,"DT")
	;;=2911008
	;;^DD(350,.16,0)
	;;=PARENT EVENT^P350'^IB(^0;16^Q
	;;^DD(350,.16,1,0)
	;;=^.1
	;;^DD(350,.16,1,1,0)
	;;=350^AF
	;;^DD(350,.16,1,1,1)
	;;=S ^IB("AF",$E(X,1,30),DA)=""
	;;^DD(350,.16,1,1,2)
	;;=K ^IB("AF",$E(X,1,30),DA)
	;;^DD(350,.16,1,1,"%D",0)
	;;=^^2^2^2911009^
	;;^DD(350,.16,1,1,"%D",1,0)
	;;=This cross-reference will be used to link all Means Test/Category C
	;;^DD(350,.16,1,1,"%D",2,0)
	;;=co-payment and per diem charges to a particular billable event.
	;;^DD(350,.16,1,1,"DT")
	;;=2911009
	;;^DD(350,.16,1,2,0)
	;;=350^ACT1^MUMPS
	;;^DD(350,.16,1,2,1)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",5)=1,$P($G(^IBE(350.1,+$P(^(0),"^",3),0)),"^")'["ADMISSION" S ^IB("ACT",X,DA)=""
	;;^DD(350,.16,1,2,2)
	;;=K ^IB("ACT",X,DA)
	;;^DD(350,.16,1,2,"%D",0)
	;;=^^9^9^2920115^^^^
	;;^DD(350,.16,1,2,"%D",1,0)
	;;=Cross-reference of all IB ACTIONS for Means Test/Category C charges
	;;^DD(350,.16,1,2,"%D",2,0)
	;;=which have a status (field #.05) of INCOMPLETE.
	;;^DD(350,.16,1,2,"%D",3,0)
	;;= 
	;;^DD(350,.16,1,2,"%D",4,0)
	;;=This is a temporary cross-reference which is used to locate per diem
	;;^DD(350,.16,1,2,"%D",5,0)
	;;=and co-payment charges, for an inpatient/NHCU admission, which are
	;;^DD(350,.16,1,2,"%D",6,0)
	;;=established, but not yet passed to AR.  The cross-reference is set
	;;^DD(350,.16,1,2,"%D",7,0)
	;;=whenever the status (#.05) of a billable charge is changed to 1
	;;^DD(350,.16,1,2,"%D",8,0)
	;;=(INCOMPLETE), and killed without condition.  The "ACT" cross-reference
	;;^DD(350,.16,1,2,"%D",9,0)
	;;=on the status field is the companion to this cross-reference.
	;;^DD(350,.16,1,2,"DT")
	;;=2911106
	;;^DD(350,.16,21,0)
	;;=^^12^12^2940209^^^^
	;;^DD(350,.16,21,1,0)
	;;=This field is used only for IB ACTION entries (both events and charges)
	;;^DD(350,.16,21,2,0)
	;;=which are associated with Category C billing.
	;;^DD(350,.16,21,3,0)
	;;= 
	;;^DD(350,.16,21,4,0)
	;;=This field is a pointer to the IB ACTION event (inpatient/NHCU admission
	;;^DD(350,.16,21,5,0)
	;;=or outpatient visit) for which the charges are being billed.  For an
	;;^DD(350,.16,21,6,0)
	;;=event entry, this field will point to itself.  For all IB ACTION charges 
	;;^DD(350,.16,21,7,0)
	;;=(new, cancelled, and updated) associated with a billable event,
	;;^DD(350,.16,21,8,0)
	;;=this field will point to that event.
	;;^DD(350,.16,21,9,0)
	;;= 
	;;^DD(350,.16,21,10,0)
	;;=Note that cancelled and updated actions will still point to the parent
	;;^DD(350,.16,21,11,0)
	;;=(new) action through the Parent Charge (.09) field, in the same manner
	;;^DD(350,.16,21,12,0)
	;;=as Pharmacy co-pay charges.
	;;^DD(350,.16,"DT")
	;;=2911106
	;;^DD(350,.17,0)
	;;=EVENT DATE^D^^0;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,.17,1,0)
	;;=^.1
	;;^DD(350,.17,1,1,0)
	;;=350^AFDT1^MUMPS
	;;^DD(350,.17,1,1,1)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",2) S ^IB("AFDT",$P(^(0),"^",2),-X,DA)=""
	;;^DD(350,.17,1,1,2)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",2) K ^IB("AFDT",$P(^(0),"^",2),-X,DA)
	;;^DD(350,.17,1,1,"%D",0)
	;;=^^5^5^2911227^^^

IBINI01A
IBINI01A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,.17,1,1,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries which represent inpatient/NHCU
	;;^DD(350,.17,1,1,"%D",2,0)
	;;=admissions by the patient (#.02) field and the minus (negative or inverse)
	;;^DD(350,.17,1,1,"%D",3,0)
	;;=event date field.  A billable event may be located for a patient using
	;;^DD(350,.17,1,1,"%D",4,0)
	;;=this cross-reference.  The "AFDT" cross-reference on the patient (#.02)
	;;^DD(350,.17,1,1,"%D",5,0)
	;;=field is the companion to this cross-reference.
	;;^DD(350,.17,1,1,"DT")
	;;=2911101
	;;^DD(350,.17,21,0)
	;;=^^6^6^2911104^^^^
	;;^DD(350,.17,21,1,0)
	;;=This field will only be used for those IB ACTION entries which represent
	;;^DD(350,.17,21,2,0)
	;;=Hospital/NHCU admissions and outpatient visits for which Category C
	;;^DD(350,.17,21,3,0)
	;;=copayment and per diem charges will be billed to the patient.  The
	;;^DD(350,.17,21,4,0)
	;;=value of this field will be the admission or visit date.  The inverse
	;;^DD(350,.17,21,5,0)
	;;=(negative) value of this date will be cross-referenced by patient for
	;;^DD(350,.17,21,6,0)
	;;=look-up purposes.
	;;^DD(350,.17,"DT")
	;;=2911101
	;;^DD(350,.18,0)
	;;=DATE LAST BILLED^D^^0;18^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,.18,21,0)
	;;=^^4^4^2911101^
	;;^DD(350,.18,21,1,0)
	;;=This field will only be used for those IB ACTION entries which represent
	;;^DD(350,.18,21,2,0)
	;;=inpatient or NHCU admissions for which Category C copayment and per diem
	;;^DD(350,.18,21,3,0)
	;;=charges will be billed to the patient.  The value of this field will be
	;;^DD(350,.18,21,4,0)
	;;=the last day through which charges have been calculated for the admission.
	;;^DD(350,.18,"DT")
	;;=2911101
	;;^DD(350,11,0)
	;;=USER ADDING ENTRY^P200'I^VA(200,^1;1^Q
	;;^DD(350,11,21,0)
	;;=^^2^2^2911008^^^^
	;;^DD(350,11,21,1,0)
	;;=This is the person adding an entry in an application that cause the
	;;^DD(350,11,21,2,0)
	;;=application to create an entry in this file.
	;;^DD(350,11,"DT")
	;;=2910304
	;;^DD(350,12,0)
	;;=DATE ENTRY ADDED^DI^^1;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,12,1,0)
	;;=^.1^^-1
	;;^DD(350,12,1,1,0)
	;;=350^D
	;;^DD(350,12,1,1,1)
	;;=S ^IB("D",$E(X,1,30),DA)=""
	;;^DD(350,12,1,1,2)
	;;=K ^IB("D",$E(X,1,30),DA)
	;;^DD(350,12,1,2,0)
	;;=350^APDT1^MUMPS
	;;^DD(350,12,1,2,1)
	;;=I $P(^IB(DA,0),"^",9) S ^IB("APDT",$P(^(0),"^",9),-X,DA)=""
	;;^DD(350,12,1,2,2)
	;;=I $P(^IB(DA,0),"^",9) K ^IB("APDT",$P(^(0),"^",9),-X,DA)
	;;^DD(350,12,1,2,"%D",0)
	;;=^^5^5^2910417^
	;;^DD(350,12,1,2,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries by parent link (#.09) field and
	;;^DD(350,12,1,2,"%D",2,0)
	;;=the minus (negative or inverse) date entry added (#12) field.  The most
	;;^DD(350,12,1,2,"%D",3,0)
	;;=current ACTION for the original entry can be found using this cross
	;;^DD(350,12,1,2,"%D",4,0)
	;;=reference.  The "APDT" cross-reference on the parent link (#.09) is the 
	;;^DD(350,12,1,2,"%D",5,0)
	;;=companion to this cross-reference.
	;;^DD(350,12,1,3,0)
	;;=350^APTDT1^MUMPS
	;;^DD(350,12,1,3,1)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",2) S ^IB("APTDT",$P(^(0),"^",2),X,DA)=""
	;;^DD(350,12,1,3,2)
	;;=I $D(^IB(DA,0)),$P(^(0),"^",2) K ^IB("APTDT",$P(^(0),"^",2),X,DA)
	;;^DD(350,12,1,3,"%D",0)
	;;=^^3^3^2910417^
	;;^DD(350,12,1,3,"%D",1,0)
	;;=Cross-reference of all IB ACTION entries by patient (#.02) and the date entry added (#12)
	;;^DD(350,12,1,3,"%D",2,0)
	;;=field.  The "APTDT" cross-reference on the patient (#.02) field is the
	;;^DD(350,12,1,3,"%D",3,0)
	;;=companion to this cross-reference.

IBINI01B
IBINI01B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350,12,21,0)
	;;=^^3^3^2921009^^^
	;;^DD(350,12,21,1,0)
	;;=This is the date/time that an entry was added to this file.  The most
	;;^DD(350,12,21,2,0)
	;;=recent update to an entry can be determined by finding the last entry in
	;;^DD(350,12,21,3,0)
	;;=this field.
	;;^DD(350,12,"DT")
	;;=2920430
	;;^DD(350,13,0)
	;;=USER LAST UPDATING^P200'^VA(200,^1;3^Q
	;;^DD(350,13,3)
	;;=
	;;^DD(350,13,5,1,0)
	;;=350^.05^2
	;;^DD(350,13,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350,13,21,1,0)
	;;=This is the person last updating an entry in an application when it
	;;^DD(350,13,21,2,0)
	;;=caused an update to this entry in this file.
	;;^DD(350,13,"DT")
	;;=2910205
	;;^DD(350,14,0)
	;;=DATE LAST UPDATED^D^^1;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,14,5,1,0)
	;;=350^.05^3
	;;^DD(350,14,21,0)
	;;=^^1^1^2910301^
	;;^DD(350,14,21,1,0)
	;;=This is the date/time that this entry was last updated.
	;;^DD(350,14,"DT")
	;;=2910205
	;;^DD(350,15,0)
	;;=CHAMPVA ADM DATE^D^^1;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350,15,1,0)
	;;=^.1
	;;^DD(350,15,1,1,0)
	;;=350^ACVA1^MUMPS
	;;^DD(350,15,1,1,1)
	;;=I X,$D(^IB(DA,0)),$P(^(0),"^",2) S ^IB("ACVA",$P(^(0),"^",2),X,DA)=""
	;;^DD(350,15,1,1,2)
	;;=I X,$D(^IB(DA,0)),$P(^(0),"^",2) K ^IB("ACVA",$P(^(0),"^",2),X,DA)
	;;^DD(350,15,1,1,"%D",0)
	;;=^^3^3^2930728^
	;;^DD(350,15,1,1,"%D",1,0)
	;;=This cross-reference is used in conjunction with the ACVA cross
	;;^DD(350,15,1,1,"%D",2,0)
	;;=reference on the PATIENT (#.02) field to cross reference all
	;;^DD(350,15,1,1,"%D",3,0)
	;;=CHAMPVA inpatient subsistence charges by patient and admission date.
	;;^DD(350,15,1,1,"DT")
	;;=2930728
	;;^DD(350,15,21,0)
	;;=^^1^1^2930728^
	;;^DD(350,15,21,1,0)
	;;=This is the admission date for the episode of CHAMPVA care being billed.
	;;^DD(350,15,"DT")
	;;=2930728

IBINI01C
IBINI01C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.1,0,"GL")
	;;=^IBE(350.1,
	;;^DIC("B","IB ACTION TYPE",350.1)
	;;=
	;;^DIC(350.1,"%D",0)
	;;=^^5^5^2940214^
	;;^DIC(350.1,"%D",1,0)
	;;=This file contains the types of actions that a service can use with IB.
	;;^DIC(350.1,"%D",2,0)
	;;=Data in this file provides links from the application to IB to AR that
	;;^DIC(350.1,"%D",3,0)
	;;=are associated with the type rather than each entry.
	;;^DIC(350.1,"%D",4,0)
	;;= 
	;;^DIC(350.1,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.1,0)
	;;=FIELD^^.11^15
	;;^DD(350.1,0,"DT")
	;;=2930729
	;;^DD(350.1,0,"IX","ANEW",350.1,.04)
	;;=
	;;^DD(350.1,0,"IX","ANEW1",350.1,.05)
	;;=
	;;^DD(350.1,0,"IX","B",350.1,.01)
	;;=
	;;^DD(350.1,0,"IX","C",350.1,.04)
	;;=
	;;^DD(350.1,0,"IX","D",350.1,.02)
	;;=
	;;^DD(350.1,0,"IX","E",350.1,.08)
	;;=
	;;^DD(350.1,0,"NM","IB ACTION TYPE")
	;;=
	;;^DD(350.1,0,"PT",52,105)
	;;=
	;;^DD(350.1,0,"PT",350,.03)
	;;=
	;;^DD(350.1,0,"PT",350.1,.06)
	;;=
	;;^DD(350.1,0,"PT",350.1,.07)
	;;=
	;;^DD(350.1,0,"PT",350.1,.09)
	;;=
	;;^DD(350.1,0,"PT",350.2,.03)
	;;=
	;;^DD(350.1,0,"PT",350.4,.03)
	;;=
	;;^DD(350.1,0,"PT",350.41,.03)
	;;=
	;;^DD(350.1,0,"PT",350.41,.04)
	;;=
	;;^DD(350.1,0,"PT",399.1,.14)
	;;=
	;;^DD(350.1,0,"PT",399.1,.15)
	;;=
	;;^DD(350.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(350.1,.01,1,0)
	;;=^.1
	;;^DD(350.1,.01,1,1,0)
	;;=350.1^B
	;;^DD(350.1,.01,1,1,1)
	;;=S ^IBE(350.1,"B",$E(X,1,30),DA)=""
	;;^DD(350.1,.01,1,1,2)
	;;=K ^IBE(350.1,"B",$E(X,1,30),DA)
	;;^DD(350.1,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(350.1,.01,21,0)
	;;=3
	;;^DD(350.1,.01,21,1,0)
	;;=Enter the  unique name of this action type.  The name should begin
	;;^DD(350.1,.01,21,2,0)
	;;=with the namespace of the application that will use this action type and
	;;^DD(350.1,.01,21,3,0)
	;;=should describe the function being billed.
	;;^DD(350.1,.01,"DEL",1,0)
	;;=I 1 W !,"Deleting entries not allowed"
	;;^DD(350.1,.02,0)
	;;=ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2) X
	;;^DD(350.1,.02,1,0)
	;;=^.1
	;;^DD(350.1,.02,1,1,0)
	;;=350.1^D
	;;^DD(350.1,.02,1,1,1)
	;;=S ^IBE(350.1,"D",$E(X,1,30),DA)=""
	;;^DD(350.1,.02,1,1,2)
	;;=K ^IBE(350.1,"D",$E(X,1,30),DA)
	;;^DD(350.1,.02,1,1,"DT")
	;;=2910830
	;;^DD(350.1,.02,3)
	;;=Answer must be 2-8 characters in length.
	;;^DD(350.1,.02,21,0)
	;;=^^1^1^2920224^^^^
	;;^DD(350.1,.02,21,1,0)
	;;=Enter a short description that can be output on space limited reports.
	;;^DD(350.1,.02,"DT")
	;;=2910830
	;;^DD(350.1,.03,0)
	;;=CHARGE CATEGORY^P430.2'^PRCA(430.2,^0;3^Q
	;;^DD(350.1,.03,21,0)
	;;=^^3^3^2910305^^
	;;^DD(350.1,.03,21,1,0)
	;;=This is the pointer to the ACCOUNT RECEIVABLE CATEGORY file.  This data
	;;^DD(350.1,.03,21,2,0)
	;;=will get passed to AR when an IB ACTION for this ACTION type gets passed
	;;^DD(350.1,.03,21,3,0)
	;;=to AR.
	;;^DD(350.1,.04,0)
	;;=SERVICE^P49'^DIC(49,^0;4^Q
	;;^DD(350.1,.04,1,0)
	;;=^.1
	;;^DD(350.1,.04,1,1,0)
	;;=350.1^C
	;;^DD(350.1,.04,1,1,1)
	;;=S ^IBE(350.1,"C",$E(X,1,30),DA)=""
	;;^DD(350.1,.04,1,1,2)
	;;=K ^IBE(350.1,"C",$E(X,1,30),DA)
	;;^DD(350.1,.04,1,2,0)
	;;=350.1^ANEW^MUMPS
	;;^DD(350.1,.04,1,2,1)
	;;=I $P(^IBE(350.1,DA,0),U,5) S ^IBE(350.1,"ANEW",X,$P(^(0),U,5),DA)=""
	;;^DD(350.1,.04,1,2,2)
	;;=I $P(^IBE(350.1,DA,0),U,5) K ^IBE(350.1,"ANEW",X,$P(^(0),U,5),DA)
	;;^DD(350.1,.04,21,0)
	;;=^^2^2^2910305^^
	;;^DD(350.1,.04,21,1,0)
	;;=Enter the name of the Service/Section that will be using this action
	;;^DD(350.1,.04,21,2,0)
	;;=type.  This is required by Accounts Receivable.

IBINI01D
IBINI01D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.1,.04,"DT")
	;;=2910214
	;;^DD(350.1,.05,0)
	;;=SEQUENCE NUMBER^S^1:NEW;2:CANCEL;3:UPDATE;81:MEDICARE DEDUCTIBLE;82:CHAMPVA LIMIT;91:HOSPITAL ADMISSION;92:NHCU ADMISSION;^0;5^Q
	;;^DD(350.1,.05,1,0)
	;;=^.1
	;;^DD(350.1,.05,1,1,0)
	;;=350.1^ANEW1^MUMPS
	;;^DD(350.1,.05,1,1,1)
	;;=I $P(^IBE(350.1,DA,0),U,4) S ^IBE(350.1,"ANEW",$P(^(0),U,4),X,DA)=""
	;;^DD(350.1,.05,1,1,2)
	;;=I $P(^IBE(350.1,DA,0),U,4) K ^IBE(350.1,"ANEW",$P(^(0),U,4),X,DA)
	;;^DD(350.1,.05,3)
	;;=Enter the appropriate entry to indicate the sequencing that this action type should be filed with AR, or the appropriate code for the non-billable action type.
	;;^DD(350.1,.05,21,0)
	;;=^^12^12^2911101^^^^
	;;^DD(350.1,.05,21,1,0)
	;;=This field tells the IB filer the order in which to file entries with
	;;^DD(350.1,.05,21,2,0)
	;;=AR.  A new entry must be filed before it can be cancelled.  An update
	;;^DD(350.1,.05,21,3,0)
	;;=action type will generate two actions, a cancel of previous entry, and
	;;^DD(350.1,.05,21,4,0)
	;;=an updated entry containing the correct data.  The update will be filed
	;;^DD(350.1,.05,21,5,0)
	;;=after the cancel.  The ordering must be maintained so that the last full
	;;^DD(350.1,.05,21,6,0)
	;;=entry in the INTEGRATED BILLING ACTION file for a parent is the most
	;;^DD(350.1,.05,21,7,0)
	;;=current entry.  (an inverse date x-ref on the parent field will indicate
	;;^DD(350.1,.05,21,8,0)
	;;=the most recent entry to the updated parent)
	;;^DD(350.1,.05,21,9,0)
	;;=Additional numbering series are also available for IB ACTION TYPES which
	;;^DD(350.1,.05,21,10,0)
	;;=do not explicitly represent billable charges.  These series are set so that
	;;^DD(350.1,.05,21,11,0)
	;;=they do not conflict with the ordering required for correct processing of
	;;^DD(350.1,.05,21,12,0)
	;;=IB ACTION charges in AR.
	;;^DD(350.1,.05,"DT")
	;;=2930727
	;;^DD(350.1,.06,0)
	;;=CANCELLATION ACTION TYPE^P350.1'^IBE(350.1,^0;6^Q
	;;^DD(350.1,.06,21,0)
	;;=^^4^4^2920415^^
	;;^DD(350.1,.06,21,1,0)
	;;=This is the IB ACTION TYPE entry that will be the 'CANCEL' type for
	;;^DD(350.1,.06,21,2,0)
	;;=this entry.  If this is a 'CANCEL' type entry, then this will be itself.
	;;^DD(350.1,.06,21,3,0)
	;;=Every 'NEW' type entry should have an associated 'CANCEL' and 'UPDATE'
	;;^DD(350.1,.06,21,4,0)
	;;=type entry.
	;;^DD(350.1,.06,"DT")
	;;=2910213
	;;^DD(350.1,.07,0)
	;;=UPDATE ACTION TYPE^P350.1^IBE(350.1,^0;7^Q
	;;^DD(350.1,.07,21,0)
	;;=^^4^4^2940209^^^
	;;^DD(350.1,.07,21,1,0)
	;;=This is the IB ACTION TYPE entry that will be the 'UPDATE' type for
	;;^DD(350.1,.07,21,2,0)
	;;=this entry.  If this entry is an UPDATE type then it will be itself.
	;;^DD(350.1,.07,21,3,0)
	;;=For every 'NEW' type of entry, there should be an associated 'CANCEL'
	;;^DD(350.1,.07,21,4,0)
	;;=and 'UPDATE' type.
	;;^DD(350.1,.07,"DT")
	;;=2910213
	;;^DD(350.1,.08,0)
	;;=USER LOOKUP NAME^F^^0;8^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>22!($L(X)<3) X
	;;^DD(350.1,.08,1,0)
	;;=^.1
	;;^DD(350.1,.08,1,1,0)
	;;=350.1^E
	;;^DD(350.1,.08,1,1,1)
	;;=S ^IBE(350.1,"E",$E(X,1,30),DA)=""
	;;^DD(350.1,.08,1,1,2)
	;;=K ^IBE(350.1,"E",$E(X,1,30),DA)
	;;^DD(350.1,.08,1,1,"DT")
	;;=2920224
	;;^DD(350.1,.08,3)
	;;=Answer must be 3-22 characters in length.
	;;^DD(350.1,.08,21,0)
	;;=^^3^3^2920415^^^
	;;^DD(350.1,.08,21,1,0)
	;;=This is the name of the action that may be used for look-up and 
	;;^DD(350.1,.08,21,2,0)
	;;=printing on reports.  The name will only exist for IB ACTION TYPE
	;;^DD(350.1,.08,21,3,0)
	;;=entries whose SEQUENCE NUMBER is "1" for NEW.

IBINI01E
IBINI01E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.1,.08,"DT")
	;;=2920227
	;;^DD(350.1,.09,0)
	;;=NEW ACTION TYPE^P350.1'^IBE(350.1,^0;9^Q
	;;^DD(350.1,.09,21,0)
	;;=^^1^1^2920227^
	;;^DD(350.1,.09,21,1,0)
	;;=This is the IB ACTION TYPE entry that is the 'NEW' type for this entry.
	;;^DD(350.1,.09,"DT")
	;;=2920227
	;;^DD(350.1,.1,0)
	;;=PLACE ON HOLD^S^1:YES;0:NO;^0;10^Q
	;;^DD(350.1,.1,21,0)
	;;=1^^8^8^2920414^^
	;;^DD(350.1,.1,21,1,0)
	;;=This field is used to flag those IB Actions (as identified by the IB
	;;^DD(350.1,.1,21,2,0)
	;;=Action Type) which may be 'held up' in Integrated Billing until
	;;^DD(350.1,.1,21,3,0)
	;;=reimbursement from an Insurance company for the billing of the same
	;;^DD(350.1,.1,21,4,0)
	;;=event has been received.
	;;^DD(350.1,.1,21,5,0)
	;;= 
	;;^DD(350.1,.1,21,6,0)
	;;=The field will be set to 'YES' if the Action Type is one which
	;;^DD(350.1,.1,21,7,0)
	;;=represents a billable action which may be billed to a patient's
	;;^DD(350.1,.1,21,8,0)
	;;=insurance company as well as to the patient.
	;;^DD(350.1,.1,"DT")
	;;=2920227
	;;^DD(350.1,.11,0)
	;;=BILLING GROUP^S^1:INPT/NHCU FEE SERVICE;2:INPT/NHCU COPAY;3:INPT/NHCU PER DIEM;4:OPT COPAY;5:RX COPAY;6:CHAMPVA;^0;11^Q
	;;^DD(350.1,.11,3)
	;;=Enter Group for manual charge processing.
	;;^DD(350.1,.11,21,0)
	;;=^^2^2^2920415^
	;;^DD(350.1,.11,21,1,0)
	;;=This field is a set of codes used to enter the group for
	;;^DD(350.1,.11,21,2,0)
	;;=manual charge processing.
	;;^DD(350.1,.11,"DT")
	;;=2930729
	;;^DD(350.1,10,0)
	;;=PARENT TRACE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.1,10,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.1,10,21,0)
	;;=^^8^8^2940209^^^^
	;;^DD(350.1,10,21,1,0)
	;;=This is the executable code that will expand the field RESULTING FROM in
	;;^DD(350.1,10,21,2,0)
	;;=the INTEGRATED BILLING ACTION File to return in Y(n) the zeroth node
	;;^DD(350.1,10,21,3,0)
	;;=of the entry creating this entry.  If the entry is caused by a top
	;;^DD(350.1,10,21,4,0)
	;;=level entry then Y(0) will equal the zeroth node of the file.  If
	;;^DD(350.1,10,21,5,0)
	;;=an entry is caused by a lower level entry then in addition to Y(0),
	;;^DD(350.1,10,21,6,0)
	;;=Y(1) will be the zeroth node of the next lower level, Y(2) will be the
	;;^DD(350.1,10,21,7,0)
	;;=zeroth node of the third level, etc.  If a node described in the
	;;^DD(350.1,10,21,8,0)
	;;=RESULTING FROM field in file 350 is not present then Y=-1^error code.
	;;^DD(350.1,20,0)
	;;=SET LOGIC^K^^20;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.1,20,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.1,20,21,0)
	;;=^^4^4^2910305^^^
	;;^DD(350.1,20,21,1,0)
	;;=This is the executable MUMPS code that will calculate the BRIEF DESCRIPTION
	;;^DD(350.1,20,21,2,0)
	;;=stored in file 350.  This is used by the IB application interface routines.
	;;^DD(350.1,20,21,3,0)
	;;=This may execute the PARENT TRACE LOGIC to return data from the
	;;^DD(350.1,20,21,4,0)
	;;=application.
	;;^DD(350.1,30,0)
	;;=FULL PROFILE LOGIC^K^^30;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.1,30,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.1,30,21,0)
	;;=^^3^3^2910305^^
	;;^DD(350.1,30,21,1,0)
	;;=This is the standard MUMPS code that will calculate the full profile
	;;^DD(350.1,30,21,2,0)
	;;=of an IB ACTION entry as approved by the DBA agreements between integrating
	;;^DD(350.1,30,21,3,0)
	;;=applications.
	;;^DD(350.1,40,0)
	;;=ELIGIBILITY LOGIC^K^^40;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.1,40,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.1,40,21,0)
	;;=^^2^2^2910305^^
	;;^DD(350.1,40,21,1,0)
	;;=This field the standard mumps code to determine  eligibility

IBINI01F
IBINI01F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.1,40,21,2,0)
	;;=to use the IB ACTION TYPE for the desired debtor.
	;;^DD(350.1,40,"DT")
	;;=2910206

IBINI01G
IBINI01G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.1)
	;;=^IBE(350.1,
	;;^UTILITY(U,$J,350.1,0)
	;;=IB ACTION TYPE^350.1^67^67
	;;^UTILITY(U,$J,350.1,1,0)
	;;=PSO NSC RX COPAY NEW^NSC CO^23^12^1^3^4^NSC PHARMACY COPAY^1^^5
	;;^UTILITY(U,$J,350.1,1,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,1,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,1,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,1,40)
	;;=S X=0,X1="",X2="" G:'$D(VAEL) 1^IBAERR I VAEL(4),'+VAEL(3),'IBDOM,'$$RXEXMT^IBARXEU0(DFN,DT) S X=1,X2=$P(^IBE(350.1,DA,0),"^",4) D COST^IBAUTL
	;;^UTILITY(U,$J,350.1,2,0)
	;;=PSO SC RX COPAY NEW^SC COPAY^22^12^1^5^6^SC PHARMACY COPAY^2^^5
	;;^UTILITY(U,$J,350.1,2,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,2,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,2,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,2,40)
	;;=S X=0,X1="",X2="" G:'$D(VAEL) 1^IBAERR I VAEL(4),+VAEL(3),'IBDOM S X=$S($P(VAEL(3),"^",2)<50:2,1:0) I X S:$$RXEXMT^IBARXEU0(DFN,DT) X=0 I X S X2=$P(^IBE(350.1,DA,0),"^",4) D COST^IBAUTL
	;;^UTILITY(U,$J,350.1,3,0)
	;;=PSO NSC RX COPAY CANCEL^CAN NSC^23^12^2^3^4^^1^^
	;;^UTILITY(U,$J,350.1,3,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,3,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,3,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,4,0)
	;;=PSO NSC RX COPAY UPDATE^UPDAT NS^23^12^3^3^4^^1^^5
	;;^UTILITY(U,$J,350.1,4,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,4,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,4,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,5,0)
	;;=PSO SC RX COPAY CANCEL^CAN SC^22^12^2^5^6^^2^^
	;;^UTILITY(U,$J,350.1,5,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,5,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,5,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,6,0)
	;;=PSO SC RX COPAY UPDATE^UPDA SC^22^12^3^5^6^^2^^5
	;;^UTILITY(U,$J,350.1,6,10)
	;;=D PTL^IBAUTL
	;;^UTILITY(U,$J,350.1,6,20)
	;;=S:'$D(^(10)) X="" I $D(^(10)) X ^(10) S X=$S($D(Y(0)):$P(Y(0),U),1:"UNK") I $D(Y(0)) S X=X_"-"_$S($D(^PSDRUG(+$P(Y(0),U,6),0)):$P(^(0),"^"),1:"UNK DRUG"),X=$E(X,1,18)_"-"_$S($D(IBUNIT):IBUNIT,$D(IBX):$P(IBX,U,2),1:"")
	;;^UTILITY(U,$J,350.1,6,30)
	;;=I $D(X) D EN^PSOCPVW
	;;^UTILITY(U,$J,350.1,7,0)
	;;=IB OPT MEDICARE RATE 1^RATE 1^^^1^^^HCFA AMB. SURG. RATE 1^7^^
	;;^UTILITY(U,$J,350.1,8,0)
	;;=IB OPT MEDICARE RATE 2^RATE 2^^^1^^^HCFA AMB. SURG. RATE 2^8^^
	;;^UTILITY(U,$J,350.1,9,0)
	;;=IB OPT MEDICARE RATE 3^RATE 3^^^1^^^HCFA AMB. SURG. RATE 3^9^^
	;;^UTILITY(U,$J,350.1,10,0)
	;;=IB OPT MEDICARE RATE 4^RATE 4^^^1^^^HCFA AMB. SURG. RATE 4^10^^
	;;^UTILITY(U,$J,350.1,11,0)
	;;=IB OPT MEDICARE RATE 5^RATE 5^^^1^^^HCFA AMB. SURG. RATE 5^11^^

IBINI01H
IBINI01H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.1,12,0)
	;;=IB OPT MEDICARE RATE 6^RATE 6^^^1^^^HCFA AMB. SURG. RATE 6^12^^
	;;^UTILITY(U,$J,350.1,13,0)
	;;=IB OPT MEDICARE RATE 7^RATE 7^^^1^^^HCFA AMB. SURG. RATE 7^13^^
	;;^UTILITY(U,$J,350.1,14,0)
	;;=IB OPT MEDICARE RATE 8^RATE 8^^^1^^^HCFA AMB. SURG. RATE 8^14^^
	;;^UTILITY(U,$J,350.1,15,0)
	;;=DG INPT COPAY (MED) NEW^MED CO^5^18^1^25^35^GEN MED INPT COPAY^15^1^2^
	;;^UTILITY(U,$J,350.1,15,20)
	;;=S IBDESC="INPT CO-PAY (MED)"
	;;^UTILITY(U,$J,350.1,16,0)
	;;=DG INPT COPAY (SUR) NEW^SUR CO^5^18^1^26^36^SURGICAL INPT COPAY^16^1^2^
	;;^UTILITY(U,$J,350.1,16,20)
	;;=S IBDESC="INPT CO-PAY (SUR)"
	;;^UTILITY(U,$J,350.1,17,0)
	;;=DG INPT COPAY (SPI) NEW^SPI CO^5^18^1^27^37^SPINAL CORD INPT COPAY^17^1^2^
	;;^UTILITY(U,$J,350.1,17,20)
	;;=S IBDESC="INPT CO-PAY (SPI)"
	;;^UTILITY(U,$J,350.1,18,0)
	;;=DG INPT COPAY (PSY) NEW^PSY CO^5^18^1^28^38^PSYCHIATRIC INPT COPAY^18^1^2^
	;;^UTILITY(U,$J,350.1,18,20)
	;;=S IBDESC="INPT CO-PAY (PSY)"
	;;^UTILITY(U,$J,350.1,19,0)
	;;=DG INPT COPAY (INT) NEW^INT CO^5^18^1^29^39^INTER CARE INPT COPAY^19^1^2^
	;;^UTILITY(U,$J,350.1,19,20)
	;;=S IBDESC="INPT CO-PAY (INT)"
	;;^UTILITY(U,$J,350.1,20,0)
	;;=DG INPT COPAY (REH) NEW^REH CO^5^18^1^30^40^REHAB MED INPT COPAY^20^1^2^
	;;^UTILITY(U,$J,350.1,20,20)
	;;=S IBDESC="INPT CO-PAY (REH)"
	;;^UTILITY(U,$J,350.1,21,0)
	;;=DG INPT COPAY (BLI) NEW^BLI CO^5^18^1^31^41^BLIND REHAB INPT COPAY^21^1^2^
	;;^UTILITY(U,$J,350.1,21,20)
	;;=S IBDESC="INPT CO-PAY (BLI)"
	;;^UTILITY(U,$J,350.1,22,0)
	;;=DG INPT COPAY (NEU) NEW^NEU CO^5^18^1^32^42^NEUROLOGY INPT COPAY^22^1^2^
	;;^UTILITY(U,$J,350.1,22,20)
	;;=S IBDESC="INPT CO-PAY (NEU)"
	;;^UTILITY(U,$J,350.1,23,0)
	;;=DG INPT COPAY (ALC) NEW^ALC CO^5^18^1^33^43^ALC & DRUG INPT COPAY^23^1^2^
	;;^UTILITY(U,$J,350.1,23,20)
	;;=S IBDESC="INPT CO-PAY (ALC)"
	;;^UTILITY(U,$J,350.1,24,0)
	;;=DG NHCU COPAY NEW^NHC CO^3^18^1^34^44^NHCU COPAY^24^1^2^
	;;^UTILITY(U,$J,350.1,24,20)
	;;=S IBDESC="NHCU CO-PAYMENT"
	;;^UTILITY(U,$J,350.1,25,0)
	;;=DG INPT COPAY (MED) CANCEL^CAN MED^5^18^2^25^35^^15^^
	;;^UTILITY(U,$J,350.1,26,0)
	;;=DG INPT COPAY (SUR) CANCEL^CAN SUR^5^18^2^26^36^^16^^^
	;;^UTILITY(U,$J,350.1,27,0)
	;;=DG INPT COPAY (SPI) CANCEL^CAN SPI^5^18^2^27^37^^17^^
	;;^UTILITY(U,$J,350.1,28,0)
	;;=DG INPT COPAY (PSY) CANCEL^CAN PSY^5^18^2^28^38^^18^^
	;;^UTILITY(U,$J,350.1,29,0)
	;;=DG INPT COPAY (INT) CANCEL^CAN INT^5^18^2^29^39^^19^^
	;;^UTILITY(U,$J,350.1,30,0)
	;;=DG INPT COPAY (REH) CANCEL^CAN REH^5^18^2^30^40^^20^^
	;;^UTILITY(U,$J,350.1,31,0)
	;;=DG INPT COPAY (BLI) CANCEL^CAN BLI^5^18^2^31^41^^21^^
	;;^UTILITY(U,$J,350.1,32,0)
	;;=DG INPT COPAY (NEU) CANCEL^CAN NEU^5^18^2^32^42^^22^^
	;;^UTILITY(U,$J,350.1,33,0)
	;;=DG INPT COPAY (ALC) CANCEL^CAN ALC^5^18^2^33^43^^23^^
	;;^UTILITY(U,$J,350.1,34,0)
	;;=DG NHCU COPAY CANCEL^CAN NHC^3^18^2^34^44^^24^^
	;;^UTILITY(U,$J,350.1,35,0)
	;;=DG INPT COPAY (MED) UPDATE^UPD MED^5^18^3^25^35^^15^1^2^
	;;^UTILITY(U,$J,350.1,36,0)
	;;=DG INPT COPAY (SUR) UPDATE^UPD SUR^5^18^3^26^36^^16^1^2^
	;;^UTILITY(U,$J,350.1,37,0)
	;;=DG INPT COPAY (SPI) UPDATE^UPD SPI^5^18^3^27^37^^17^1^2^
	;;^UTILITY(U,$J,350.1,38,0)
	;;=DG INPT COPAY (PSY) UPDATE^UPD PSY^5^18^3^28^38^^18^1^2^
	;;^UTILITY(U,$J,350.1,39,0)
	;;=DG INPT COPAY (INT) UPDATE^UPD INT^5^18^3^29^39^^19^1^2^
	;;^UTILITY(U,$J,350.1,40,0)
	;;=DG INPT COPAY (REH) UPDATE^UPD REH^5^18^3^30^40^^20^1^2^
	;;^UTILITY(U,$J,350.1,41,0)
	;;=DG INPT COPAY (BLI) UPDATE^UPD BLI^5^18^3^31^41^^21^1^2^
	;;^UTILITY(U,$J,350.1,42,0)
	;;=DG INPT COPAY (NEU) UPDATE^UPD NEU^5^18^3^32^42^^22^1^2^

IBINI01I
IBINI01I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.1,43,0)
	;;=DG INPT COPAY (ALC) UPDATE^UPD ALC^5^18^3^33^43^^23^1^2^
	;;^UTILITY(U,$J,350.1,44,0)
	;;=DG NHCU COPAY UPDATE^UPD NHC^3^18^3^34^44^^24^1^2^
	;;^UTILITY(U,$J,350.1,45,0)
	;;=DG INPT PER DIEM NEW^INP PD^25^18^1^46^47^INPATIENT PER DIEM^45^^3^
	;;^UTILITY(U,$J,350.1,45,20)
	;;=S IBDESC="INPT PER DIEM"
	;;^UTILITY(U,$J,350.1,46,0)
	;;=DG INPT PER DIEM CANCEL^CAN IPD^25^18^2^46^47^^45^^
	;;^UTILITY(U,$J,350.1,47,0)
	;;=DG INPT PER DIEM UPDATE^UPD IPD^25^18^3^46^47^^45^^3
	;;^UTILITY(U,$J,350.1,48,0)
	;;=DG NHCU PER DIEM NEW^NHC PD^24^18^1^49^50^NHCU PER DIEM^48^^3
	;;^UTILITY(U,$J,350.1,48,20)
	;;=S IBDESC="NHCU PER DIEM"
	;;^UTILITY(U,$J,350.1,49,0)
	;;=DG NHCU PER DIEM CANCEL^CAN NPD^24^18^2^49^50^^48^^
	;;^UTILITY(U,$J,350.1,50,0)
	;;=DG NHCU PER DIEM UPDATE^UPD NPD^24^18^3^49^50^^48^^3
	;;^UTILITY(U,$J,350.1,51,0)
	;;=DG OPT COPAY NEW^OPT CO^4^18^1^52^53^OUTPATIENT COPAY^51^1^4^
	;;^UTILITY(U,$J,350.1,51,20)
	;;=S IBDESC="OPT COPAYMENT"
	;;^UTILITY(U,$J,350.1,52,0)
	;;=DG OPT COPAY CANCEL^CAN OPT^4^18^2^52^53^^51^^
	;;^UTILITY(U,$J,350.1,53,0)
	;;=DG OPT COPAY UPDATE^UPD OPT^4^18^3^52^53^^51^1^4^
	;;^UTILITY(U,$J,350.1,54,0)
	;;=MEDICARE DEDUCTIBLE^MCR DED^^18^81^^^MEDICARE DEDUCTIBLE^54^^
	;;^UTILITY(U,$J,350.1,55,0)
	;;=HOSPITAL ADMISSION^HOSP ADM^^18^91^^^^55^^
	;;^UTILITY(U,$J,350.1,56,0)
	;;=NHCU ADMISSION^NHCU ADM^^18^92^^^^56^^
	;;^UTILITY(U,$J,350.1,57,0)
	;;=DG FEE SERVICE (OPT) NEW^FEE CO^4^18^1^58^59^FEE SERVICE/OUTPATIENT^57^1^4^
	;;^UTILITY(U,$J,350.1,58,0)
	;;=DG FEE SERVICE (OPT) CANCEL^CAN FEE^4^18^2^58^59^^57^^
	;;^UTILITY(U,$J,350.1,59,0)
	;;=DG FEE SERVICE (OPT) UPDATE^UPD FEE^4^18^3^58^59^^57^1^4^
	;;^UTILITY(U,$J,350.1,60,0)
	;;=DG FEE SERVICE (INPT) NEW^FEI CO^3^18^1^61^62^FEE SERVICE/INPATIENT^60^1^1^
	;;^UTILITY(U,$J,350.1,61,0)
	;;=DG FEE SERVICE (INPT) CANCEL^CAN FEI^3^18^2^61^62^^60^^
	;;^UTILITY(U,$J,350.1,62,0)
	;;=DG FEE SERVICE (INPT) UPDATE^UPD FEI^3^18^3^61^62^^60^1^1^
	;;^UTILITY(U,$J,350.1,63,0)
	;;=IB OPT MEDICARE RATE 9^RATE 9^^^1^^^HCFA AMB. SURG. RATE 9^63^^
	;;^UTILITY(U,$J,350.1,64,0)
	;;=CHAMPVA SUBSISTENCE LIMIT^CVA LIM^^18^82^^^CHAMPVA LIMIT^64
	;;^UTILITY(U,$J,350.1,65,0)
	;;=DG CHAMPVA PER DIEM NEW^CVA PD^^18^1^66^67^CHAMPVA SUBSISTENCE^65^^6
	;;^UTILITY(U,$J,350.1,66,0)
	;;=DG CHAMPVA PER DIEM CANCEL^CAN CPD^^18^2^66^67^^65
	;;^UTILITY(U,$J,350.1,67,0)
	;;=DG CHAMPVA PER DIEM UPDATE^UPD CPD^^18^3^66^67^^65

IBINI01J
IBINI01J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.2,0,"GL")
	;;=^IBE(350.2,
	;;^DIC("B","IB ACTION CHARGE",350.2)
	;;=
	;;^DIC(350.2,"%D",0)
	;;=^^6^6^2940214^^^
	;;^DIC(350.2,"%D",1,0)
	;;=This file contains the unit charges for an IB ACTION TYPE by the
	;;^DIC(350.2,"%D",2,0)
	;;=effective date of the charge.  The "AIVDT" cross-reference can be
	;;^DIC(350.2,"%D",3,0)
	;;=used to quickly ascertain the most recent charge for an action type.
	;;^DIC(350.2,"%D",4,0)
	;;= 
	;;^DIC(350.2,"%D",5,0)
	;;= 
	;;^DIC(350.2,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.2,0)
	;;=FIELD^^10^7
	;;^DD(350.2,0,"DDA")
	;;=N
	;;^DD(350.2,0,"DT")
	;;=2910913
	;;^DD(350.2,0,"ID",.02)
	;;=W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
	;;^DD(350.2,0,"IX","AIVDT",350.2,.02)
	;;=
	;;^DD(350.2,0,"IX","AIVDT1",350.2,.03)
	;;=
	;;^DD(350.2,0,"IX","B",350.2,.01)
	;;=
	;;^DD(350.2,0,"IX","C",350.2,.02)
	;;=
	;;^DD(350.2,0,"NM","IB ACTION CHARGE")
	;;=
	;;^DD(350.2,.01,0)
	;;=KEY^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(350.2,.01,1,0)
	;;=^.1
	;;^DD(350.2,.01,1,1,0)
	;;=350.2^B
	;;^DD(350.2,.01,1,1,1)
	;;=S ^IBE(350.2,"B",$E(X,1,30),DA)=""
	;;^DD(350.2,.01,1,1,2)
	;;=K ^IBE(350.2,"B",$E(X,1,30),DA)
	;;^DD(350.2,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(350.2,.01,21,0)
	;;=^^3^3^2910305^
	;;^DD(350.2,.01,21,1,0)
	;;=This is a description unique name for this entry that identifies it.  It
	;;^DD(350.2,.01,21,2,0)
	;;=is not used in the calculation of the charge but rather for editing
	;;^DD(350.2,.01,21,3,0)
	;;=purposes.
	;;^DD(350.2,.02,0)
	;;=EFFECTIVE DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.2,.02,1,0)
	;;=^.1
	;;^DD(350.2,.02,1,1,0)
	;;=350.2^C
	;;^DD(350.2,.02,1,1,1)
	;;=S ^IBE(350.2,"C",$E(X,1,30),DA)=""
	;;^DD(350.2,.02,1,1,2)
	;;=K ^IBE(350.2,"C",$E(X,1,30),DA)
	;;^DD(350.2,.02,1,2,0)
	;;=350.2^AIVDT^MUMPS
	;;^DD(350.2,.02,1,2,1)
	;;=I $P(^IBE(350.2,DA,0),U,3) S ^IBE(350.2,"AIVDT",$P(^(0),U,3),-X,DA)=""
	;;^DD(350.2,.02,1,2,2)
	;;=I $P(^IBE(350.2,DA,0),U,3) K ^IBE(350.2,"AIVDT",$P(^(0),U,3),-X,DA)
	;;^DD(350.2,.02,21,0)
	;;=^^1^1^2910305^
	;;^DD(350.2,.02,21,1,0)
	;;=This is the date the charge rate for this entry became effective.
	;;^DD(350.2,.02,"DT")
	;;=2910206
	;;^DD(350.2,.03,0)
	;;=IB TRANSACTION TYPE^P350.1'^IBE(350.1,^0;3^Q
	;;^DD(350.2,.03,1,0)
	;;=^.1
	;;^DD(350.2,.03,1,1,0)
	;;=350.2^AIVDT1^MUMPS
	;;^DD(350.2,.03,1,1,1)
	;;=I $P(^IBE(350.2,DA,0),U,2) S ^IBE(350.2,"AIVDT",X,-$P(^(0),U,2),DA)=""
	;;^DD(350.2,.03,1,1,2)
	;;=I $P(^IBE(350.2,DA,0),U,2) K ^IBE(350.2,"AIVDT",X,-$P(^(0),U,2),DA)
	;;^DD(350.2,.03,21,0)
	;;=^^1^1^2910305^
	;;^DD(350.2,.03,21,1,0)
	;;=This is the IB TRANSACTION TYPE that this rate is for.
	;;^DD(350.2,.03,"DT")
	;;=2910206
	;;^DD(350.2,.04,0)
	;;=UNIT CHARGE, FIXED^NJ10,2^^0;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(350.2,.04,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(350.2,.04,21,0)
	;;=^^1^1^2910305^^
	;;^DD(350.2,.04,21,1,0)
	;;=If this charge is a fixed amount, this field contains the fixed amount.
	;;^DD(350.2,.05,0)
	;;=INACTIVATION DATE^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.2,.05,3)
	;;=
	;;^DD(350.2,.05,21,0)
	;;=^^6^6^2910429^^
	;;^DD(350.2,.05,21,1,0)
	;;=If this charge is inactive put in the inactive date.  If the charge
	;;^DD(350.2,.05,21,2,0)
	;;=is not to be used the inactive date should equal the active date.  If
	;;^DD(350.2,.05,21,3,0)
	;;=the charge was effective for a time period but that charge no longer

IBINI01K
IBINI01K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.2,.05,21,4,0)
	;;=is valid then enter the date that this is inactive.  No entry is 
	;;^DD(350.2,.05,21,5,0)
	;;=necessary in this field if a more recent active date is added for an
	;;^DD(350.2,.05,21,6,0)
	;;=IB ACTION TYPE.
	;;^DD(350.2,.06,0)
	;;=ADDITIONAL AMOUNT^NJ10,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(350.2,.06,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(350.2,.06,21,0)
	;;=^^4^4^2940209^^^^
	;;^DD(350.2,.06,21,1,0)
	;;=This is a fixed additional dollar amount that will be added to the
	;;^DD(350.2,.06,21,2,0)
	;;=basic charge after it has been computed. An example of this would
	;;^DD(350.2,.06,21,3,0)
	;;=be the additional charge of $200 added to HCFA Ambulatory Surgery rate
	;;^DD(350.2,.06,21,4,0)
	;;=groups for inter-ocular lens implants.
	;;^DD(350.2,.06,"DT")
	;;=2910913
	;;^DD(350.2,10,0)
	;;=UNIT CHARGE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.2,10,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.2,10,21,0)
	;;=^^3^3^2910305^^
	;;^DD(350.2,10,21,1,0)
	;;=If this charge is not fixed (ie an exact cost) the field contains the logic
	;;^DD(350.2,10,21,2,0)
	;;=to calculate the cost per unit.  It may need to use the logic in the IB
	;;^DD(350.2,10,21,3,0)
	;;=transaction type file to find this cost.

IBINI01L
IBINI01L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.2)
	;;=^IBE(350.2,
	;;^UTILITY(U,$J,350.2,0)
	;;=IB ACTION CHARGE^350.2I^35^29
	;;^UTILITY(U,$J,350.2,1,0)
	;;=RX1^2901001^1^2
	;;^UTILITY(U,$J,350.2,2,0)
	;;=RX2^2901001^2^2
	;;^UTILITY(U,$J,350.2,3,0)
	;;=RX3^2901001^3^2
	;;^UTILITY(U,$J,350.2,4,0)
	;;=RX4^2901001^4^2
	;;^UTILITY(U,$J,350.2,5,0)
	;;=RX5^2901001^5^2
	;;^UTILITY(U,$J,350.2,6,0)
	;;=RX6^2901001^6^2
	;;^UTILITY(U,$J,350.2,7,0)
	;;=MEDICARE 1^2920101^7^285
	;;^UTILITY(U,$J,350.2,7,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,8,0)
	;;=MEDICARE 2^2920101^8^382
	;;^UTILITY(U,$J,350.2,8,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,9,0)
	;;=MEDICARE 3^2920101^9^438
	;;^UTILITY(U,$J,350.2,9,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,10,0)
	;;=MEDICARE 4^2920101^10^539
	;;^UTILITY(U,$J,350.2,10,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,11,0)
	;;=MEDICARE 5^2920101^11^615
	;;^UTILITY(U,$J,350.2,11,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,12,0)
	;;=MEDICARE 6^2920101^12^580^^200
	;;^UTILITY(U,$J,350.2,12,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,13,0)
	;;=MEDICARE 7^2920101^13^853
	;;^UTILITY(U,$J,350.2,13,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,14,0)
	;;=MEDICARE 8^2920101^14^705^^200
	;;^UTILITY(U,$J,350.2,14,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,15,0)
	;;=MEDICARE 9^2920101^63^0
	;;^UTILITY(U,$J,350.2,15,10)
	;;=S IBNOD=^IBE(350.2,DA,0) D VAR^IBAUTL1 Q:Y<0  S Y=(($P(Y,"^",2)*$P(IBNOD,"^",4))+(+Y*$P(Y,"^",3)*$P(IBNOD,"^",4))+$P(IBNOD,"^",6))+.005\.01/100
	;;^UTILITY(U,$J,350.2,19,0)
	;;=INPT PER DIEM^2901001^45^10
	;;^UTILITY(U,$J,350.2,20,0)
	;;=NHCU PER DIEM^2901001^48^5
	;;^UTILITY(U,$J,350.2,24,0)
	;;=MEDICARE DEDUCTIBLE^2860701^54^492
	;;^UTILITY(U,$J,350.2,25,0)
	;;=MEDICARE DEDUCTIBLE^2870101^54^520
	;;^UTILITY(U,$J,350.2,26,0)
	;;=MEDICARE DEDUCTIBLE^2880101^54^540
	;;^UTILITY(U,$J,350.2,27,0)
	;;=MEDICARE DEDUCTIBLE^2890101^54^560
	;;^UTILITY(U,$J,350.2,28,0)
	;;=MEDICARE DEDUCTIBLE^2900101^54^592
	;;^UTILITY(U,$J,350.2,29,0)
	;;=MEDICARE DEDUCTIBLE^2910101^54^628
	;;^UTILITY(U,$J,350.2,30,0)
	;;=MEDICARE DEDUCTIBLE^2920101^54^652
	;;^UTILITY(U,$J,350.2,32,0)
	;;=MEDICARE DEDUCTIBLE^2930101^54^676
	;;^UTILITY(U,$J,350.2,33,0)
	;;=CHAMPVA SUBSISTENCE LIMIT^2911001^64^25
	;;^UTILITY(U,$J,350.2,34,0)
	;;=CHAMPVA PER DIEM^2911001^65^8.95
	;;^UTILITY(U,$J,350.2,35,0)
	;;=CHAMPVA PER DIEM^2921001^65^9.30
	;;^UTILITY(U,$J,350.2,36,0)
	;;=MEDICARE DEDUCTIBLE^2940101^54^696

IBINI01M
IBINI01M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.21)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.21,0,"GL")
	;;=^IBE(350.21,
	;;^DIC("B","IB ACTION STATUS",350.21)
	;;=
	;;^DIC(350.21,"%D",0)
	;;=^^20^20^2940214^^^
	;;^DIC(350.21,"%D",1,0)
	;;=This new file for Integrated Billing version 2.0 has been implemented
	;;^DIC(350.21,"%D",2,0)
	;;=to replace the set of codes for the STATUS (#.05) field of the
	;;^DIC(350.21,"%D",3,0)
	;;=INTEGRATED BILLING ACTION (#350) file.  The file holds new statuses
	;;^DIC(350.21,"%D",4,0)
	;;=which are introduced in v2.0, display and abbreviated names for the
	;;^DIC(350.21,"%D",5,0)
	;;=status, and classification-type fields for each status which is
	;;^DIC(350.21,"%D",6,0)
	;;=used for processing in the Integrated Billing module.
	;;^DIC(350.21,"%D",7,0)
	;;= 
	;;^DIC(350.21,"%D",8,0)
	;;=To convert to the use of this new file, it was necessary to change
	;;^DIC(350.21,"%D",9,0)
	;;=the field type of the STATUS field from a "set-of-codes" field to
	;;^DIC(350.21,"%D",10,0)
	;;=a pointer field (pointing to this file).  Thus, the internal entry
	;;^DIC(350.21,"%D",11,0)
	;;=numbers for the statuses in this file MUST MATCH the codes established
	;;^DIC(350.21,"%D",12,0)
	;;=for the statuses in the old set-of-codes definition.  The entries in this
	;;^DIC(350.21,"%D",13,0)
	;;=file will be precisely set in the IB version 2.0 post initialization.
	;;^DIC(350.21,"%D",14,0)
	;;= 
	;;^DIC(350.21,"%D",15,0)
	;;=ENTRIES IN THIS FILE SHOULD NOT BE EDITED OR DELETED.  IF YOU LOSE
	;;^DIC(350.21,"%D",16,0)
	;;=ENTRIES IN THIS FILE DUE TO SYSTEM FAILURE, THEY MUST BE RE-SET USING
	;;^DIC(350.21,"%D",17,0)
	;;=THE CORRECT INTERNAL ENTRY NUMBERS.  If you have any questions about
	;;^DIC(350.21,"%D",18,0)
	;;=re-setting entries in this file, please contact your supporting ISC.
	;;^DIC(350.21,"%D",19,0)
	;;= 
	;;^DIC(350.21,"%D",20,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.21,0)
	;;=FIELD^^.06^6
	;;^DD(350.21,0,"DDA")
	;;=N
	;;^DD(350.21,0,"DT")
	;;=2930810
	;;^DD(350.21,0,"IX","B",350.21,.01)
	;;=
	;;^DD(350.21,0,"NM","IB ACTION STATUS")
	;;=
	;;^DD(350.21,0,"PT",350,.05)
	;;=
	;;^DD(350.21,.01,0)
	;;=STATUS^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(350.21,.01,1,0)
	;;=^.1
	;;^DD(350.21,.01,1,1,0)
	;;=350.21^B
	;;^DD(350.21,.01,1,1,1)
	;;=S ^IBE(350.21,"B",$E(X,1,30),DA)=""
	;;^DD(350.21,.01,1,1,2)
	;;=K ^IBE(350.21,"B",$E(X,1,30),DA)
	;;^DD(350.21,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(350.21,.01,21,0)
	;;=^^5^5^2930810^
	;;^DD(350.21,.01,21,1,0)
	;;=The value of the STATUS field matches the name of the code from
	;;^DD(350.21,.01,21,2,0)
	;;=STATUS (#.05) field of the INTEGRATED BILLING ACTION (#350) file
	;;^DD(350.21,.01,21,3,0)
	;;=prior to Integrated Billing version 2.0.
	;;^DD(350.21,.01,21,4,0)
	;;= 
	;;^DD(350.21,.01,21,5,0)
	;;=This field should not be edited!
	;;^DD(350.21,.01,"DT")
	;;=2930810
	;;^DD(350.21,.02,0)
	;;=PRINT NAME^F^^0;2^K:$L(X)>25!($L(X)<3) X
	;;^DD(350.21,.02,3)
	;;=Answer must be 3-25 characters in length.
	;;^DD(350.21,.02,21,0)
	;;=^^2^2^2930810^
	;;^DD(350.21,.02,21,1,0)
	;;=This field contains a displayable status name which may be used
	;;^DD(350.21,.02,21,2,0)
	;;=in reports.
	;;^DD(350.21,.02,"DT")
	;;=2930810
	;;^DD(350.21,.03,0)
	;;=ABBREVIATION^F^^0;3^K:$L(X)>8!($L(X)<2) X
	;;^DD(350.21,.03,3)
	;;=Answer must be 2-8 characters in length.
	;;^DD(350.21,.03,21,0)
	;;=^^2^2^2930810^
	;;^DD(350.21,.03,21,1,0)
	;;=The abbreviation is a short-hand notation for the status which may
	;;^DD(350.21,.03,21,2,0)
	;;=be used for display in space-limited outputs.

IBINI01N
IBINI01N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.21)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.21,.03,"DT")
	;;=2930810
	;;^DD(350.21,.04,0)
	;;=PASSED TO AR?^S^0:NO;1:YES;^0;4^Q
	;;^DD(350.21,.04,21,0)
	;;=^^2^2^2930810^
	;;^DD(350.21,.04,21,1,0)
	;;=This field is used to determine if IB actions with this status have
	;;^DD(350.21,.04,21,2,0)
	;;=already been passed to the Accounts Receivable module.
	;;^DD(350.21,.04,"DT")
	;;=2930810
	;;^DD(350.21,.05,0)
	;;=CANCELLED?^S^0:NO;1:YES;^0;5^Q
	;;^DD(350.21,.05,21,0)
	;;=^^2^2^2930810^
	;;^DD(350.21,.05,21,1,0)
	;;=This field is used to determine if IB actions with this status have
	;;^DD(350.21,.05,21,2,0)
	;;=been cancelled.
	;;^DD(350.21,.05,"DT")
	;;=2930810
	;;^DD(350.21,.06,0)
	;;=ON HOLD?^S^0:NO;1:YES;^0;6^Q
	;;^DD(350.21,.06,21,0)
	;;=^^2^2^2930810^
	;;^DD(350.21,.06,21,1,0)
	;;=This field is used to determine if IB actions are being held in the
	;;^DD(350.21,.06,21,2,0)
	;;=Integrated Billing module waiting to be passed to Accounts Receivable.
	;;^DD(350.21,.06,"DT")
	;;=2930810

IBINI01O
IBINI01O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.3,0,"GL")
	;;=^IBE(350.3,
	;;^DIC("B","IB CHARGE REMOVE REASONS",350.3)
	;;=
	;;^DIC(350.3,"%D",0)
	;;=^^6^6^2940214^^^^
	;;^DIC(350.3,"%D",1,0)
	;;=This file contains the reasons that an IB ACTION entry was cancelled.
	;;^DIC(350.3,"%D",2,0)
	;;= 
	;;^DIC(350.3,"%D",3,0)
	;;=This file comes pre-loaded with data and should not be edited or added
	;;^DIC(350.3,"%D",4,0)
	;;=to by sites.
	;;^DIC(350.3,"%D",5,0)
	;;= 
	;;^DIC(350.3,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.3,0)
	;;=FIELD^^.03^4
	;;^DD(350.3,0,"DT")
	;;=2920130
	;;^DD(350.3,0,"IX","B",350.3,.01)
	;;=
	;;^DD(350.3,0,"IX","C",350.3,.02)
	;;=
	;;^DD(350.3,0,"NM","IB CHARGE REMOVE REASONS")
	;;=
	;;^DD(350.3,0,"PT",350,.1)
	;;=
	;;^DD(350.3,.001,0)
	;;=NUMBER^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.3,.001,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits
	;;^DD(350.3,.001,21,0)
	;;=^^1^1^2930406^^
	;;^DD(350.3,.001,21,1,0)
	;;=A number which is used to uniquely identify the entry in this file.
	;;^DD(350.3,.001,"DT")
	;;=2910419
	;;^DD(350.3,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(350.3,.01,1,0)
	;;=^.1
	;;^DD(350.3,.01,1,1,0)
	;;=350.3^B
	;;^DD(350.3,.01,1,1,1)
	;;=S ^IBE(350.3,"B",$E(X,1,30),DA)=""
	;;^DD(350.3,.01,1,1,2)
	;;=K ^IBE(350.3,"B",$E(X,1,30),DA)
	;;^DD(350.3,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(350.3,.01,21,0)
	;;=^^1^1^2910305^
	;;^DD(350.3,.01,21,1,0)
	;;=Enter the reason that the charges are being cancelled.
	;;^DD(350.3,.02,0)
	;;=ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>10!($L(X)<2) X
	;;^DD(350.3,.02,1,0)
	;;=^.1
	;;^DD(350.3,.02,1,1,0)
	;;=350.3^C
	;;^DD(350.3,.02,1,1,1)
	;;=S ^IBE(350.3,"C",$E(X,1,30),DA)=""
	;;^DD(350.3,.02,1,1,2)
	;;=K ^IBE(350.3,"C",$E(X,1,30),DA)
	;;^DD(350.3,.02,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(350.3,.02,21,0)
	;;=^^2^2^2910305^
	;;^DD(350.3,.02,21,1,0)
	;;=Enter a unique abbreviation for this cancellation reason that can
	;;^DD(350.3,.02,21,2,0)
	;;=assist in quick lookup of this entry.
	;;^DD(350.3,.03,0)
	;;=LIMIT^S^1:RX;2:OP MEANS TEST;3:GENERIC;4:OTHER;^0;3^Q
	;;^DD(350.3,.03,21,0)
	;;=^^2^2^2920415^^
	;;^DD(350.3,.03,21,1,0)
	;;=This field is a set of codes that identifies which type of charge
	;;^DD(350.3,.03,21,2,0)
	;;=the IB Charge Removal Reason can be used for.
	;;^DD(350.3,.03,"DT")
	;;=2920130

IBINI01P
IBINI01P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.3)
	;;=^IBE(350.3,
	;;^UTILITY(U,$J,350.3,0)
	;;=IB CHARGE REMOVE REASONS^350.3I^36^36
	;;^UTILITY(U,$J,350.3,1,0)
	;;=RX REFUSED^REFUSED^1
	;;^UTILITY(U,$J,350.3,2,0)
	;;=RX NEVER RECEIVED^NOT REC^1
	;;^UTILITY(U,$J,350.3,3,0)
	;;=RX RETURNED/DAMAGED (MAIL)^DAMAGED^1
	;;^UTILITY(U,$J,350.3,4,0)
	;;=ENTERED IN ERROR^ERROR^3
	;;^UTILITY(U,$J,350.3,5,0)
	;;=RX CANCELLED^CANCELLED^1
	;;^UTILITY(U,$J,350.3,6,0)
	;;=INPATIENT/PASS^PASS^4
	;;^UTILITY(U,$J,350.3,7,0)
	;;=INVESTIGATIONAL DRUG^RESEARCH^1
	;;^UTILITY(U,$J,350.3,8,0)
	;;=RX DELETED^DELETE^1
	;;^UTILITY(U,$J,350.3,9,0)
	;;=EMPLOYEE^EM^3
	;;^UTILITY(U,$J,350.3,10,0)
	;;=CNH - 3 DAY^3DAY
	;;^UTILITY(U,$J,350.3,11,0)
	;;=PATIENT DECEASED^DEATH^3
	;;^UTILITY(U,$J,350.3,12,0)
	;;=SUPPLY ITEM^SUP^4
	;;^UTILITY(U,$J,350.3,13,0)
	;;=BEDSIDE MEDICATIONS^BED^1
	;;^UTILITY(U,$J,350.3,14,0)
	;;=ELIGIBILITY INCORRECT^INC^3
	;;^UTILITY(U,$J,350.3,15,0)
	;;=CHANGE IN ELIGIBILITY^EC^3
	;;^UTILITY(U,$J,350.3,16,0)
	;;=RX EDITED^EDIT RX^1
	;;^UTILITY(U,$J,350.3,17,0)
	;;=MT OP APPT NO-SHOW^NO-SHOW^2
	;;^UTILITY(U,$J,350.3,18,0)
	;;=MT OP APPT CANCELLED^CANCEL OP^2
	;;^UTILITY(U,$J,350.3,19,0)
	;;=MT CHARGE EDITED^EDIT MT^2
	;;^UTILITY(U,$J,350.3,20,0)
	;;=INSURANCE CO PAID IN FULL^INS PAID^2
	;;^UTILITY(U,$J,350.3,21,0)
	;;=RX COPAY INCOME EXEMPTION^RX INCOME^1
	;;^UTILITY(U,$J,350.3,22,0)
	;;=MT CATEGORY CHANGED FROM C^NOT C^2
	;;^UTILITY(U,$J,350.3,23,0)
	;;=COMP & PENSION VISIT RECORDED^CNP VST^2
	;;^UTILITY(U,$J,350.3,24,0)
	;;=CHAMPVA ADMISSION DELETED^CVA DEL^2
	;;^UTILITY(U,$J,350.3,25,0)
	;;=RECD INPATIENT CARE^INP CARE^2
	;;^UTILITY(U,$J,350.3,26,0)
	;;=CHECK OUT DELETED^CO DEL^2
	;;^UTILITY(U,$J,350.3,27,0)
	;;=CLASSIFICATION CHANGED^CLS CHNG^2
	;;^UTILITY(U,$J,350.3,28,0)
	;;=RESEARCH VISIT/ADMISSION^RES VST^2
	;;^UTILITY(U,$J,350.3,29,0)
	;;=SERVICE CONNECTED VISIT/ADM^SER CONN^2
	;;^UTILITY(U,$J,350.3,30,0)
	;;=HARDSHIP GRANTED^HRDSHP^2
	;;^UTILITY(U,$J,350.3,31,0)
	;;=ADJUDICATED AS CATEGORY A^ADJ A^2
	;;^UTILITY(U,$J,350.3,32,0)
	;;=TREATED AT OTHER FACILITY^OTH FAC^2
	;;^UTILITY(U,$J,350.3,33,0)
	;;=AGENT ORANGE RELATED VISIT^AO VST^2
	;;^UTILITY(U,$J,350.3,34,0)
	;;=IONIZING RAD RELATED VISIT^IO VST^2
	;;^UTILITY(U,$J,350.3,35,0)
	;;=ENV CONTAMINANT RELATED VISIT^EC VST^2
	;;^UTILITY(U,$J,350.3,36,0)
	;;=CLASS II DENTAL VISIT^DENTL^2

IBINI01Q
IBINI01Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.4,0,"GL")
	;;=^IBE(350.4,
	;;^DIC("B","BILLABLE AMBULATORY SURGICAL CODE",350.4)
	;;=
	;;^DIC(350.4,"%D",0)
	;;=^^10^10^2940214^^^^
	;;^DIC(350.4,"%D",1,0)
	;;=Contains the HCFA rate groups for ambulatory surgeries that may
	;;^DIC(350.4,"%D",2,0)
	;;=be billed.  This file is time sensitive, a procedure may have multiple entries
	;;^DIC(350.4,"%D",3,0)
	;;=indicating updates effective on different dates.  These updates include a
	;;^DIC(350.4,"%D",4,0)
	;;=procedure changing rate groups or changing status.
	;;^DIC(350.4,"%D",5,0)
	;;= 
	;;^DIC(350.4,"%D",6,0)
	;;=The data in this file is either transfered from 350.41 or 
	;;^DIC(350.4,"%D",7,0)
	;;=entered interactively and is used to calculate the charge for a procedure
	;;^DIC(350.4,"%D",8,0)
	;;=on any given date.
	;;^DIC(350.4,"%D",9,0)
	;;= 
	;;^DIC(350.4,"%D",10,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.4,0)
	;;=FIELD^^.04^4
	;;^DD(350.4,0,"DDA")
	;;=N
	;;^DD(350.4,0,"DT")
	;;=2920108
	;;^DD(350.4,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^SD(409.71,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(409.71,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(350.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(350.1,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(350.1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(350.4,0,"IX","AIVDT",350.4,.01)
	;;=
	;;^DD(350.4,0,"IX","AIVDT1",350.4,.02)
	;;=
	;;^DD(350.4,0,"IX","B",350.4,.01)
	;;=
	;;^DD(350.4,0,"IX","C",350.4,.02)
	;;=
	;;^DD(350.4,0,"NM","BILLABLE AMBULATORY SURGICAL CODE")
	;;=
	;;^DD(350.4,.01,0)
	;;=EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.4,.01,1,0)
	;;=^.1
	;;^DD(350.4,.01,1,1,0)
	;;=350.4^B
	;;^DD(350.4,.01,1,1,1)
	;;=S ^IBE(350.4,"B",$E(X,1,30),DA)=""
	;;^DD(350.4,.01,1,1,2)
	;;=K ^IBE(350.4,"B",$E(X,1,30),DA)
	;;^DD(350.4,.01,1,2,0)
	;;=350.4^AIVDT^MUMPS
	;;^DD(350.4,.01,1,2,1)
	;;=I $P(^IBE(350.4,DA,0),"^",2) S ^IBE(350.4,"AIVDT",$P(^(0),"^",2),-X,DA)=""
	;;^DD(350.4,.01,1,2,2)
	;;=I $P(^IBE(350.4,DA,0),"^",2) K ^IBE(350.4,"AIVDT",$P(^(0),"^",2),-X,DA)
	;;^DD(350.4,.01,1,2,3)
	;;=DO NOT DELETE
	;;^DD(350.4,.01,1,2,"%D",0)
	;;=^^2^2^2911119^^^
	;;^DD(350.4,.01,1,2,"%D",1,0)
	;;=This cross reference is used to find the correct rate group for a 
	;;^DD(350.4,.01,1,2,"%D",2,0)
	;;=procedure on a particular date.
	;;^DD(350.4,.01,1,2,"DT")
	;;=2910829
	;;^DD(350.4,.01,3)
	;;=Enter the date that this new STATUS/RATE GROUP becomes effective.
	;;^DD(350.4,.01,21,0)
	;;=^^2^2^2920415^^^^
	;;^DD(350.4,.01,21,1,0)
	;;=This is the date when the new status or rate group for a procedure
	;;^DD(350.4,.01,21,2,0)
	;;=becomes effective.
	;;^DD(350.4,.01,"DT")
	;;=2910829
	;;^DD(350.4,.02,0)
	;;=PROCEDURE^P409.71'^SD(409.71,^0;2^Q
	;;^DD(350.4,.02,1,0)
	;;=^.1
	;;^DD(350.4,.02,1,1,0)
	;;=350.4^C
	;;^DD(350.4,.02,1,1,1)
	;;=S ^IBE(350.4,"C",$E(X,1,30),DA)=""
	;;^DD(350.4,.02,1,1,2)
	;;=K ^IBE(350.4,"C",$E(X,1,30),DA)
	;;^DD(350.4,.02,1,1,3)
	;;=DO NOT DELETE
	;;^DD(350.4,.02,1,1,"DT")
	;;=2910830
	;;^DD(350.4,.02,1,2,0)
	;;=350.4^AIVDT1^MUMPS
	;;^DD(350.4,.02,1,2,1)
	;;=I $P(^IBE(350.4,DA,0),"^") S ^IBE(350.4,"AIVDT",X,-$P(^(0),"^"),DA)=""
	;;^DD(350.4,.02,1,2,2)
	;;=I $P(^IBE(350.4,DA,0),"^") K ^IBE(350.4,"AIVDT",X,-$P(^(0),"^"),DA)
	;;^DD(350.4,.02,1,2,3)
	;;=DO NOT DELETE
	;;^DD(350.4,.02,1,2,"%D",0)
	;;=^^1^1^2911113^
	;;^DD(350.4,.02,1,2,"%D",1,0)
	;;=Used to find the correct rate group for a procedure on any particular date.
	;;^DD(350.4,.02,1,2,"DT")
	;;=2910830

IBINI01R
IBINI01R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.4,.02,21,0)
	;;=^^1^1^2920317^^
	;;^DD(350.4,.02,21,1,0)
	;;=The ambulatory surgery associated with this entry.
	;;^DD(350.4,.02,"DT")
	;;=2910830
	;;^DD(350.4,.03,0)
	;;=RATE GROUP^R*P350.1'^IBE(350.1,^0;3^S DIC("S")="I $P(^(0),U,1)[""MEDICARE RATE""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.4,.03,3)
	;;=May enter "Rate N" as abbrevation for Opt Medicare Rate N.
	;;^DD(350.4,.03,5,1,0)
	;;=350.4^.04^1
	;;^DD(350.4,.03,12)
	;;=Only Medicare Rate Action Type allowed.
	;;^DD(350.4,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,1)[""MEDICARE RATE"""
	;;^DD(350.4,.03,21,0)
	;;=^^2^2^2920415^^^^
	;;^DD(350.4,.03,21,1,0)
	;;=This is the HCFA rate group assigned to this procedure beginning with this
	;;^DD(350.4,.03,21,2,0)
	;;=entry's effective date.
	;;^DD(350.4,.03,"DT")
	;;=2911202
	;;^DD(350.4,.04,0)
	;;=STATUS^RS^1:ACTIVE;0:INACTIVE;^0;4^Q
	;;^DD(350.4,.04,1,0)
	;;=^.1
	;;^DD(350.4,.04,1,1,0)
	;;=^^TRIGGER^350.4^.03
	;;^DD(350.4,.04,1,1,1)
	;;=X ^DD(350.4,.04,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBE(350.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(350.4,.04,1,1,1.4)
	;;^DD(350.4,.04,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$S($D(^DD(350.4,.04,0)):$P(^(0),U,3),1:"") S X=$P($P(Y(1),$C(59)_Y(0)_":",2),$C(59),1)="INACTIVE"
	;;^DD(350.4,.04,1,1,1.4)
	;;=S DIH=$S($D(^IBE(350.4,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=350.4,DIG=.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.4,.04,1,1,2)
	;;=X ^DD(350.4,.04,1,1,2.3) I X S X=DIV S Y(1)=$S($D(^IBE(350.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(350.4,.04,1,1,2.4)
	;;^DD(350.4,.04,1,1,2.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(350.4,.04,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^IBE(350.4,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,4)_":",2),$C(59),1)="INACTIVE"
	;;^DD(350.4,.04,1,1,2.4)
	;;=S DIH=$S($D(^IBE(350.4,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=350.4,DIG=.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.4,.04,1,1,"%D",0)
	;;=^^1^1^2920421^
	;;^DD(350.4,.04,1,1,"%D",1,0)
	;;=Removes the Rate Group from any procedure being inactivated.
	;;^DD(350.4,.04,1,1,"CREATE CONDITION")
	;;=STATUS="INACTIVE"
	;;^DD(350.4,.04,1,1,"CREATE VALUE")
	;;=@
	;;^DD(350.4,.04,1,1,"DELETE CONDITION")
	;;=STATUS="INACTIVE"
	;;^DD(350.4,.04,1,1,"DELETE VALUE")
	;;=@
	;;^DD(350.4,.04,1,1,"DT")
	;;=2920421
	;;^DD(350.4,.04,1,1,"FIELD")
	;;=RATE GROUP
	;;^DD(350.4,.04,3)
	;;=Enter the appropriate STATUS for this procedure on and after the EFFECTIVE DATE.
	;;^DD(350.4,.04,21,0)
	;;=^^1^1^2920415^^^^
	;;^DD(350.4,.04,21,1,0)
	;;=The STATUS for this procedure beginning with the EFFECTIVE DATE.
	;;^DD(350.4,.04,"DT")
	;;=2920421

IBINI01S
IBINI01S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.41)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.41,0,"GL")
	;;=^IBE(350.41,
	;;^DIC("B","UPDATE BILLABLE AMBULATORY SURGICAL CODE",350.41)
	;;=
	;;^DIC(350.41,"%D",0)
	;;=^^8^8^2940214^^^^
	;;^DIC(350.41,"%D",1,0)
	;;=Contains updates to the ambulatory surgery procedures that can be billed.
	;;^DIC(350.41,"%D",2,0)
	;;=The data comes from HCFA in a WP file that is uploaded and entered into
	;;^DIC(350.41,"%D",3,0)
	;;=this file, generally once a year.
	;;^DIC(350.41,"%D",4,0)
	;;=The new billing procedures or billing group updates are activated only after
	;;^DIC(350.41,"%D",5,0)
	;;=the data in this file is transferred to 350.4.  This file should be empty
	;;^DIC(350.41,"%D",6,0)
	;;=except during the loading and transferring of the HCFA updates.
	;;^DIC(350.41,"%D",7,0)
	;;= 
	;;^DIC(350.41,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.41,0)
	;;=FIELD^^.08^8
	;;^DD(350.41,0,"DDA")
	;;=N
	;;^DD(350.41,0,"DT")
	;;=2911125
	;;^DD(350.41,0,"ID",.02)
	;;=W "   ",$E($P(^(0),U,2),4,5)_"-"_$E($P(^(0),U,2),6,7)_"-"_$E($P(^(0),U,2),2,3)
	;;^DD(350.41,0,"IX","B",350.41,.01)
	;;=
	;;^DD(350.41,0,"NM","UPDATE BILLABLE AMBULATORY SURGICAL CODE")
	;;=
	;;^DD(350.41,.01,0)
	;;=PROCEDURE^RP81'^ICPT(^0;1^Q
	;;^DD(350.41,.01,1,0)
	;;=^.1
	;;^DD(350.41,.01,1,1,0)
	;;=350.41^B
	;;^DD(350.41,.01,1,1,1)
	;;=S ^IBE(350.41,"B",$E(X,1,30),DA)=""
	;;^DD(350.41,.01,1,1,2)
	;;=K ^IBE(350.41,"B",$E(X,1,30),DA)
	;;^DD(350.41,.01,3)
	;;=
	;;^DD(350.41,.01,21,0)
	;;=^^4^4^2911113^^^^
	;;^DD(350.41,.01,21,1,0)
	;;=The ambulatory procedure to be added to or updated in 350.4.
	;;^DD(350.41,.01,21,2,0)
	;;=It is not necessary that this procedure already have entries in either 350.4 or
	;;^DD(350.41,.01,21,3,0)
	;;=409.71 but it is required that the procedure already be active 
	;;^DD(350.41,.01,21,4,0)
	;;=in 81.
	;;^DD(350.41,.01,"DT")
	;;=2911113
	;;^DD(350.41,.02,0)
	;;=DATE EFFECTIVE^RD^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.41,.02,21,0)
	;;=^^1^1^2911113^
	;;^DD(350.41,.02,21,1,0)
	;;=The date that this procedure entry becomes effective for billing.
	;;^DD(350.41,.02,"DT")
	;;=2911113
	;;^DD(350.41,.03,0)
	;;=OLD RATE GROUP^P350.1'^IBE(350.1,^0;3^Q
	;;^DD(350.41,.03,21,0)
	;;=^^2^2^2911113^
	;;^DD(350.41,.03,21,1,0)
	;;=This is the rate group that the procedure belongs to before this entry
	;;^DD(350.41,.03,21,2,0)
	;;=is activated, as defined by the HCFA document.
	;;^DD(350.41,.03,"DT")
	;;=2911113
	;;^DD(350.41,.04,0)
	;;=NEW RATE GROUP^P350.1'^IBE(350.1,^0;4^Q
	;;^DD(350.41,.04,21,0)
	;;=^^1^1^2911113^
	;;^DD(350.41,.04,21,1,0)
	;;=The rate group for this procedure after this entry is activated.
	;;^DD(350.41,.04,"DT")
	;;=2911113
	;;^DD(350.41,.05,0)
	;;=DATE LOADED^D^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.41,.05,21,0)
	;;=^^1^1^2920415^^
	;;^DD(350.41,.05,21,1,0)
	;;=The date the HCFA information was loaded into this file.
	;;^DD(350.41,.05,"DT")
	;;=2911113
	;;^DD(350.41,.06,0)
	;;=UPDATE ACTION^S^1:CREATED;2:ACTIVATED;3:CHANGED GROUPS;4:DEACTIVATED;^0;6^Q
	;;^DD(350.41,.06,3)
	;;=
	;;^DD(350.41,.06,21,0)
	;;=^^1^1^2911113^^
	;;^DD(350.41,.06,21,1,0)
	;;=The result caused by this entry on the procedure.
	;;^DD(350.41,.06,"DT")
	;;=2911113
	;;^DD(350.41,.07,0)
	;;=STATUS^S^0:NOT TRANSFERED;1:TRANSFERED;^0;7^Q
	;;^DD(350.41,.07,21,0)
	;;=^^3^3^2940209^^
	;;^DD(350.41,.07,21,1,0)
	;;=A flag indicating if this entry has been successfully transferred to the
	;;^DD(350.41,.07,21,2,0)
	;;=billing file 350.4 (and therefore activated).  If this is null then the 
	;;^DD(350.41,.07,21,3,0)
	;;=transfer program has not yet processed this procedure (entry).

IBINI01T
IBINI01T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.41)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.41,.07,"DT")
	;;=2911113
	;;^DD(350.41,.08,0)
	;;=ERROR^F^^0;8^K:$L(X)>60!($L(X)<3) X
	;;^DD(350.41,.08,3)
	;;=Answer must be 3-60 characters in length.
	;;^DD(350.41,.08,21,0)
	;;=^^2^2^2940209^^
	;;^DD(350.41,.08,21,1,0)
	;;=Description of the error which prevented the entry from transferring to 
	;;^DD(350.41,.08,21,2,0)
	;;=350.4.  This field is edited automatically by the transfer program.
	;;^DD(350.41,.08,"DT")
	;;=2911125

IBINI01U
IBINI01U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.5,0,"GL")
	;;=^IBE(350.5,
	;;^DIC("B","BASC LOCALITY MODIFIER",350.5)
	;;=
	;;^DIC(350.5,"%D",0)
	;;=^^7^7^2940214^^^^
	;;^DIC(350.5,"%D",1,0)
	;;=This file is used in the calculation of the charge for an ambulatory
	;;^DIC(350.5,"%D",2,0)
	;;=surgery performed on any given date. This file contains time sensitive data
	;;^DIC(350.5,"%D",3,0)
	;;=with each entry defining a locality modifier and wage percentage for a
	;;^DIC(350.5,"%D",4,0)
	;;=division. There may be multiple entries for each division indicating changes
	;;^DIC(350.5,"%D",5,0)
	;;=effective on a particular date.
	;;^DIC(350.5,"%D",6,0)
	;;= 
	;;^DIC(350.5,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.5,0)
	;;=FIELD^^.07^6
	;;^DD(350.5,0,"DDA")
	;;=N
	;;^DD(350.5,0,"DT")
	;;=2920121
	;;^DD(350.5,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DG(40.8,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(40.8,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(350.5,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(350.5,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(350.5,0,"ID",.07)
	;;=W "   ",$P(^(0),U,7)
	;;^DD(350.5,0,"IX","AIVDT",350.5,.01)
	;;=
	;;^DD(350.5,0,"IX","AIVDT1",350.5,.02)
	;;=
	;;^DD(350.5,0,"IX","B",350.5,.01)
	;;=
	;;^DD(350.5,0,"IX","C",350.5,.02)
	;;=
	;;^DD(350.5,0,"NM","BASC LOCALITY MODIFIER")
	;;=
	;;^DD(350.5,.01,0)
	;;=EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.5,.01,1,0)
	;;=^.1
	;;^DD(350.5,.01,1,1,0)
	;;=350.5^B
	;;^DD(350.5,.01,1,1,1)
	;;=S ^IBE(350.5,"B",$E(X,1,30),DA)=""
	;;^DD(350.5,.01,1,1,2)
	;;=K ^IBE(350.5,"B",$E(X,1,30),DA)
	;;^DD(350.5,.01,1,2,0)
	;;=350.5^AIVDT^MUMPS
	;;^DD(350.5,.01,1,2,1)
	;;=I $P(^IBE(350.5,DA,0),"^",2) S ^IBE(350.5,"AIVDT",$P(^(0),"^",2),-X,DA)=""
	;;^DD(350.5,.01,1,2,2)
	;;=I $P(^IBE(350.5,DA,0),"^",2) K ^IBE(350.5,"AIVDT",$P(^(0),"^",2),-X,DA)
	;;^DD(350.5,.01,1,2,"%D",0)
	;;=^^1^1^2911113^^
	;;^DD(350.5,.01,1,2,"%D",1,0)
	;;=Used to find the appropriate entry for a division on any particular date.
	;;^DD(350.5,.01,1,2,"DT")
	;;=2911113
	;;^DD(350.5,.01,3)
	;;=
	;;^DD(350.5,.01,21,0)
	;;=^^3^3^2911113^^
	;;^DD(350.5,.01,21,1,0)
	;;=The date on which this entries data becomes effective.
	;;^DD(350.5,.01,21,2,0)
	;;=The data in this entry will override any other entry for
	;;^DD(350.5,.01,21,3,0)
	;;=this DIVISION that has a previous EFFECTIVE DATE.
	;;^DD(350.5,.01,"DT")
	;;=2911113
	;;^DD(350.5,.02,0)
	;;=DIVISION^RP40.8'^DG(40.8,^0;2^Q
	;;^DD(350.5,.02,1,0)
	;;=^.1
	;;^DD(350.5,.02,1,1,0)
	;;=350.5^C
	;;^DD(350.5,.02,1,1,1)
	;;=S ^IBE(350.5,"C",$E(X,1,30),DA)=""
	;;^DD(350.5,.02,1,1,2)
	;;=K ^IBE(350.5,"C",$E(X,1,30),DA)
	;;^DD(350.5,.02,1,1,"DT")
	;;=2910829
	;;^DD(350.5,.02,1,2,0)
	;;=350.5^AIVDT1^MUMPS
	;;^DD(350.5,.02,1,2,1)
	;;=I $P(^IBE(350.5,DA,0),"^") S ^IBE(350.5,"AIVDT",X,-$P(^(0),"^"),DA)=""
	;;^DD(350.5,.02,1,2,2)
	;;=I $P(^IBE(350.5,DA,0),"^") K ^IBE(350.5,"AIVDT",X,-$P(^(0),"^"),DA)
	;;^DD(350.5,.02,1,2,"%D",0)
	;;=^^1^1^2911113^
	;;^DD(350.5,.02,1,2,"%D",1,0)
	;;=Used to find the correct entry for a division for a particular date.
	;;^DD(350.5,.02,1,2,"DT")
	;;=2910829
	;;^DD(350.5,.02,21,0)
	;;=^^1^1^2920121^^
	;;^DD(350.5,.02,21,1,0)
	;;=The division that this data applies to.
	;;^DD(350.5,.02,"DT")
	;;=2920121
	;;^DD(350.5,.04,0)
	;;=STATUS^RS^1:ACTIVE;0:INACTIVE;^0;4^Q
	;;^DD(350.5,.04,21,0)
	;;=^^1^1^2920723^^^
	;;^DD(350.5,.04,21,1,0)
	;;=The status for this DIVISION on/after this EFFECTIVE DATE.

IBINI01V
IBINI01V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.5,.04,"DT")
	;;=2920121
	;;^DD(350.5,.05,0)
	;;=WAGE PERCENTAGE^RNJ10,8^^0;5^K:+X'=X!(X>1)!(X<0)!(X?.E1"."9N.N) X
	;;^DD(350.5,.05,1,0)
	;;=^.1
	;;^DD(350.5,.05,1,1,0)
	;;=^^TRIGGER^350.5^.06
	;;^DD(350.5,.05,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=1-DIV X ^DD(350.5,.05,1,1,1.4)
	;;^DD(350.5,.05,1,1,1.4)
	;;=S DIH=$S($D(^IBE(350.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=350.5,DIG=.06 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.5,.05,1,1,2)
	;;=Q
	;;^DD(350.5,.05,1,1,"CREATE VALUE")
	;;=1-WAGE PERCENTAGE
	;;^DD(350.5,.05,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(350.5,.05,1,1,"FIELD")
	;;=NON-WAGE PERCENTAGE
	;;^DD(350.5,.05,3)
	;;=Type a number between 0 and 1, with up to 8 decimal digits.  This is the wage component fraction of the Ambulatory Surgery charge.
	;;^DD(350.5,.05,21,0)
	;;=^^2^2^2920723^^^^
	;;^DD(350.5,.05,21,1,0)
	;;=This is the percentage of the rate group unit charge that is the wage
	;;^DD(350.5,.05,21,2,0)
	;;=component to be used in calculating the ambulatory surgery charge.
	;;^DD(350.5,.05,"DT")
	;;=2920122
	;;^DD(350.5,.06,0)
	;;=NON-WAGE PERCENTAGE^RNJ10,8X^^0;6^K:+X'=X!(X>1)!(X<0)!(X?.E1"."9N.N)!(X'=(1-$P(^IBE(350.5,DA,0),U,5))) X
	;;^DD(350.5,.06,3)
	;;=Type a Number between 0 and 1, 8 Decimal Digits.  Wage and non-wage percentage must total 1.
	;;^DD(350.5,.06,5,1,0)
	;;=350.5^.05^1
	;;^DD(350.5,.06,21,0)
	;;=^^2^2^2920415^^^^
	;;^DD(350.5,.06,21,1,0)
	;;=This is the percentage of the rate group unit charge that is the non-wage 
	;;^DD(350.5,.06,21,2,0)
	;;=component to be used in calculating the ambulatory surgery charge.
	;;^DD(350.5,.06,"DT")
	;;=2920122
	;;^DD(350.5,.07,0)
	;;=LOCALITY RATE MODIFIER^RNJ11,8^^0;7^K:+X'=X!(X>99)!(X<0)!(X?.E1"."9N.N) X
	;;^DD(350.5,.07,3)
	;;=Type a Number between 0 and 99, 8 Decimal Digits
	;;^DD(350.5,.07,21,0)
	;;=^^4^4^2920415^^^
	;;^DD(350.5,.07,21,1,0)
	;;=This is the Geographic Wage Index that is used to account for wage differences
	;;^DD(350.5,.07,21,2,0)
	;;=in different localities when calculating the ambulatory surgery charge. It is
	;;^DD(350.5,.07,21,3,0)
	;;=multiplied by the wage component to get the final geographic wage component
	;;^DD(350.5,.07,21,4,0)
	;;=of the charge.
	;;^DD(350.5,.07,"DT")
	;;=2920121

IBINI01W
IBINI01W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.6,0,"GL")
	;;=^IBE(350.6,
	;;^DIC("B","IB ARCHIVE/PURGE LOG",350.6)
	;;=
	;;^DIC(350.6,"%D",0)
	;;=^^15^15^2940214^^
	;;^DIC(350.6,"%D",1,0)
	;;=This file will be used to track the archiving and purging operations
	;;^DIC(350.6,"%D",2,0)
	;;=of the following three data files used in billing:
	;;^DIC(350.6,"%D",3,0)
	;;= 
	;;^DIC(350.6,"%D",4,0)
	;;=  #350  INTEGRATED BILLING ACTION
	;;^DIC(350.6,"%D",5,0)
	;;=  #351  CATEGORY C BILLING CLOCK
	;;^DIC(350.6,"%D",6,0)
	;;=  #399  BILL/CLAIMS
	;;^DIC(350.6,"%D",7,0)
	;;= 
	;;^DIC(350.6,"%D",8,0)
	;;=A log entry will be filed when an archival "search" is initiated for
	;;^DIC(350.6,"%D",9,0)
	;;=one of these files.  Once the search end date is logged, archiving
	;;^DIC(350.6,"%D",10,0)
	;;=will be permitted, and subsequently purging will be allowed when the
	;;^DIC(350.6,"%D",11,0)
	;;=archive end date is logged.  The log entry is thus used to assure that
	;;^DIC(350.6,"%D",12,0)
	;;=all the necessary steps for archiving and purging are performed in
	;;^DIC(350.6,"%D",13,0)
	;;=their entirety in the correct order.
	;;^DIC(350.6,"%D",14,0)
	;;= 
	;;^DIC(350.6,"%D",15,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.6,0)
	;;=FIELD^^3.03^14
	;;^DD(350.6,0,"DDA")
	;;=N
	;;^DD(350.6,0,"DT")
	;;=2920408
	;;^DD(350.6,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(350.6,0,"ID",.05)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(350.6,.05,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,5)_"":"",2),$C(59),1)")
	;;^DD(350.6,0,"ID",1.01)
	;;=W:$D(^(1)) "   ",$E($P(^(1),U,1),4,5)_"-"_$E($P(^(1),U,1),6,7)_"-"_$E($P(^(1),U,1),2,3)
	;;^DD(350.6,0,"IX","AF",350.6,.03)
	;;=
	;;^DD(350.6,0,"IX","AF1",350.6,1.01)
	;;=
	;;^DD(350.6,0,"IX","B",350.6,.01)
	;;=
	;;^DD(350.6,0,"IX","C",350.6,.02)
	;;=
	;;^DD(350.6,0,"IX","D",350.6,.03)
	;;=
	;;^DD(350.6,0,"IX","E",350.6,.05)
	;;=
	;;^DD(350.6,0,"NM","IB ARCHIVE/PURGE LOG")
	;;=
	;;^DD(350.6,.01,0)
	;;=ARCHIVE LOG #^RNJ15,0^^0;1^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.6,.01,1,0)
	;;=^.1
	;;^DD(350.6,.01,1,1,0)
	;;=350.6^B
	;;^DD(350.6,.01,1,1,1)
	;;=S ^IBE(350.6,"B",$E(X,1,30),DA)=""
	;;^DD(350.6,.01,1,1,2)
	;;=K ^IBE(350.6,"B",$E(X,1,30),DA)
	;;^DD(350.6,.01,3)
	;;=Type a Number between 1 and 999999999999999, 0 Decimal Digits
	;;^DD(350.6,.01,21,0)
	;;=^^3^3^2920427^^^
	;;^DD(350.6,.01,21,1,0)
	;;=The Log # number is used to identify a unique archive/purge operation
	;;^DD(350.6,.01,21,2,0)
	;;=for a single file.  The number will be equal to the internal entry
	;;^DD(350.6,.01,21,3,0)
	;;=number of the Log entry.
	;;^DD(350.6,.01,"DT")
	;;=2920408
	;;^DD(350.6,.02,0)
	;;=SEARCH TEMPLATE^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>33!($L(X)<6) X
	;;^DD(350.6,.02,1,0)
	;;=^.1
	;;^DD(350.6,.02,1,1,0)
	;;=350.6^C
	;;^DD(350.6,.02,1,1,1)
	;;=S ^IBE(350.6,"C",$E(X,1,30),DA)=""
	;;^DD(350.6,.02,1,1,2)
	;;=K ^IBE(350.6,"C",$E(X,1,30),DA)
	;;^DD(350.6,.02,1,1,"DT")
	;;=2920408
	;;^DD(350.6,.02,3)
	;;=Answer must be 6-33 characters in length.
	;;^DD(350.6,.02,21,0)
	;;=^^7^7^2920427^
	;;^DD(350.6,.02,21,1,0)
	;;=This field contains the name of the Search Template used to contain the
	;;^DD(350.6,.02,21,2,0)
	;;=list of entries to be archived/purged.  This name is the .01 field for
	;;^DD(350.6,.02,21,3,0)
	;;=the template entry in the SORT TEMPLATE file (#.401).  The name of the
	;;^DD(350.6,.02,21,4,0)
	;;=template is stored instead of a hard pointer to the SORT TEMPLATE file

IBINI01X
IBINI01X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.6,.02,21,5,0)
	;;=because the template is deleted from the file after the entries have
	;;^DD(350.6,.02,21,6,0)
	;;=been purged.  The name of the template is the string "IB ARCHIVE/PURGE #"
	;;^DD(350.6,.02,21,7,0)
	;;=concatenated with the Archive Log # (field .01).
	;;^DD(350.6,.02,"DT")
	;;=2920408
	;;^DD(350.6,.03,0)
	;;=ARCHIVE FILE^P1'^DIC(^0;3^Q
	;;^DD(350.6,.03,1,0)
	;;=^.1
	;;^DD(350.6,.03,1,1,0)
	;;=350.6^D
	;;^DD(350.6,.03,1,1,1)
	;;=S ^IBE(350.6,"D",$E(X,1,30),DA)=""
	;;^DD(350.6,.03,1,1,2)
	;;=K ^IBE(350.6,"D",$E(X,1,30),DA)
	;;^DD(350.6,.03,1,1,"DT")
	;;=2920408
	;;^DD(350.6,.03,1,2,0)
	;;=350.6^AF^MUMPS
	;;^DD(350.6,.03,1,2,1)
	;;=I $D(^IBE(350.6,DA,1)),^(1) S ^IBE(350.6,"AF",X,-^(1),DA)=""
	;;^DD(350.6,.03,1,2,2)
	;;=I $D(^IBE(350.6,DA,1)),^(1) K ^IBE(350.6,"AF",X,-^(1),DA)
	;;^DD(350.6,.03,1,2,"%D",0)
	;;=^^5^5^2920408^
	;;^DD(350.6,.03,1,2,"%D",1,0)
	;;=Cross-reference of all ARCHIVE/PURGE LOG entries (by Archive file [#.03]
	;;^DD(350.6,.03,1,2,"%D",2,0)
	;;=and the inverse Search Begin Date/Time [#1.01]) for which a search has
	;;^DD(350.6,.03,1,2,"%D",3,0)
	;;=been initiated.  The cross-reference will be used to find the most recent
	;;^DD(350.6,.03,1,2,"%D",4,0)
	;;=log entry for a file.  The "AF1" cross-reference on the Search Begin
	;;^DD(350.6,.03,1,2,"%D",5,0)
	;;=Date/Time field (#1.01) is the companion to this cross-reference.
	;;^DD(350.6,.03,1,2,"DT")
	;;=2920408
	;;^DD(350.6,.03,21,0)
	;;=^^7^7^2940209^^
	;;^DD(350.6,.03,21,1,0)
	;;=This field points to the FILE file (#1) and represents the file to be
	;;^DD(350.6,.03,21,2,0)
	;;=archived/purged.  The Billing data files subject to archiving/purging
	;;^DD(350.6,.03,21,3,0)
	;;=currently are:
	;;^DD(350.6,.03,21,4,0)
	;;= 
	;;^DD(350.6,.03,21,5,0)
	;;=  350  INTEGRATED BILLING ACTION
	;;^DD(350.6,.03,21,6,0)
	;;=  351  CATEGORY C BILLING CLOCK
	;;^DD(350.6,.03,21,7,0)
	;;=  399  BILL/CLAIMS
	;;^DD(350.6,.03,"DT")
	;;=2920408
	;;^DD(350.6,.04,0)
	;;=# RECORDS ARCHIVED^NJ15,0^^0;4^K:+X'=X!(X>999999999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.6,.04,3)
	;;=Type a Number between 1 and 999999999999999, 0 Decimal Digits
	;;^DD(350.6,.04,21,0)
	;;=^^7^7^2920427^
	;;^DD(350.6,.04,21,1,0)
	;;=This field will contain the number of entries which have been processed
	;;^DD(350.6,.04,21,2,0)
	;;=in each sequential archive/purge operation.  The 'Search' option will
	;;^DD(350.6,.04,21,3,0)
	;;=update the field with the number of entries which have met the search
	;;^DD(350.6,.04,21,4,0)
	;;=criteria.  The 'Archive' option will update this field with the number
	;;^DD(350.6,.04,21,5,0)
	;;=of entries archived.  The 'Purge' option will update the field with the
	;;^DD(350.6,.04,21,6,0)
	;;=number of entries purged.  Also, the 'Delete Entry From Search Template'
	;;^DD(350.6,.04,21,7,0)
	;;=option will update the field when entries from the template are deleted.
	;;^DD(350.6,.04,"DT")
	;;=2920408
	;;^DD(350.6,.05,0)
	;;=LOG STATUS^S^1:OPEN;2:CLOSED;3:CANCELLED;^0;5^Q
	;;^DD(350.6,.05,1,0)
	;;=^.1
	;;^DD(350.6,.05,1,1,0)
	;;=350.6^E
	;;^DD(350.6,.05,1,1,1)
	;;=S ^IBE(350.6,"E",$E(X,1,30),DA)=""
	;;^DD(350.6,.05,1,1,2)
	;;=K ^IBE(350.6,"E",$E(X,1,30),DA)
	;;^DD(350.6,.05,1,1,"DT")
	;;=2920408
	;;^DD(350.6,.05,21,0)
	;;=^^4^4^2920427^^^
	;;^DD(350.6,.05,21,1,0)
	;;=This field contains the current status of the archive/purge operation.
	;;^DD(350.6,.05,21,2,0)
	;;=The status will be OPEN when the log entry is created, and CLOSED after
	;;^DD(350.6,.05,21,3,0)
	;;=successfully purging archived entries.  The entry will be CANCELLED if an

IBINI01Y
IBINI01Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.6,.05,21,4,0)
	;;=error is detected during processing which invalidates the operation.
	;;^DD(350.6,.05,"DT")
	;;=2920408
	;;^DD(350.6,1.01,0)
	;;=SEARCH BEGIN DATE/TIME^D^^1;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,1.01,1,0)
	;;=^.1
	;;^DD(350.6,1.01,1,1,0)
	;;=^^TRIGGER^350.6^1.03
	;;^DD(350.6,1.01,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(350.6,1.01,1,1,1.4)
	;;^DD(350.6,1.01,1,1,1.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=350.6,DIG=1.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,1.01,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,1)):^(1),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(350.6,1.01,1,1,2.4)
	;;^DD(350.6,1.01,1,1,2.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,3)=DIV,DIH=350.6,DIG=1.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,1.01,1,1,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(350.6,1.01,1,1,"DELETE VALUE")
	;;=@
	;;^DD(350.6,1.01,1,1,"DT")
	;;=2920424
	;;^DD(350.6,1.01,1,1,"FIELD")
	;;=SEARCH INITIATOR
	;;^DD(350.6,1.01,1,2,0)
	;;=350.6^AF1^MUMPS
	;;^DD(350.6,1.01,1,2,1)
	;;=I $D(^IBE(350.6,DA,0)),$P(^(0),"^",3) S ^IBE(350.6,"AF",$P(^(0),"^",3),-X,DA)=""
	;;^DD(350.6,1.01,1,2,2)
	;;=I $D(^IBE(350.6,DA,0)),$P(^(0),"^",3) K ^IBE(350.6,"AF",$P(^(0),"^",3),-X,DA)
	;;^DD(350.6,1.01,1,2,"%D",0)
	;;=^^5^5^2920410^
	;;^DD(350.6,1.01,1,2,"%D",1,0)
	;;=Cross-reference of all ARCHIVE/PURGE LOG entries (by Archive file [#.03]
	;;^DD(350.6,1.01,1,2,"%D",2,0)
	;;=and the inverse Search Begin Date/Time [#1.01]) for which a search has
	;;^DD(350.6,1.01,1,2,"%D",3,0)
	;;=been initiated.  The cross-reference will be used to find the most recent
	;;^DD(350.6,1.01,1,2,"%D",4,0)
	;;=log entry for a file.  The "AF" cross-reference on the Archive File field
	;;^DD(350.6,1.01,1,2,"%D",5,0)
	;;=(#.03) is the companion to this cross-reference.
	;;^DD(350.6,1.01,1,2,"DT")
	;;=2920410
	;;^DD(350.6,1.01,21,0)
	;;=^^2^2^2920427^^
	;;^DD(350.6,1.01,21,1,0)
	;;=The date/time at which the search was initiated is automatically stuffed
	;;^DD(350.6,1.01,21,2,0)
	;;=into this field by the 'Search' option.
	;;^DD(350.6,1.01,"DT")
	;;=2920424
	;;^DD(350.6,1.02,0)
	;;=SEARCH END DATE/TIME^D^^1;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,1.02,3)
	;;=
	;;^DD(350.6,1.02,21,0)
	;;=^^4^4^2920427^^
	;;^DD(350.6,1.02,21,1,0)
	;;=The date/time at which the search was completed is automatically stuffed
	;;^DD(350.6,1.02,21,2,0)
	;;=into this field by the 'Search' option.  The existence of this field in
	;;^DD(350.6,1.02,21,3,0)
	;;=the log entry assures that the search on the file was successful, and
	;;^DD(350.6,1.02,21,4,0)
	;;=thus the field is used as the flag to allow archiving.
	;;^DD(350.6,1.03,0)
	;;=SEARCH INITIATOR^P200'^VA(200,^1;3^Q
	;;^DD(350.6,1.03,5,1,0)
	;;=350.6^1.01^1
	;;^DD(350.6,1.03,21,0)
	;;=^^3^3^2920427^
	;;^DD(350.6,1.03,21,1,0)
	;;=This field conatins the individual who queued the search on the file.
	;;^DD(350.6,1.03,21,2,0)
	;;=The field is updated by a trigger when the SEARCH BEGIN DATE/TIME field
	;;^DD(350.6,1.03,21,3,0)
	;;=is updated.
	;;^DD(350.6,1.03,"DT")
	;;=2920408
	;;^DD(350.6,2.01,0)
	;;=ARCHIVE BEGIN DATE/TIME^D^^2;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,2.01,1,0)
	;;=^.1
	;;^DD(350.6,2.01,1,1,0)
	;;=^^TRIGGER^350.6^2.03
	;;^DD(350.6,2.01,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,2)):^(2),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(350.6,2.01,1,1,1.4)

IBINI01Z
IBINI01Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.6,2.01,1,1,1.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),2)):^(2),1:""),DIV=X S $P(^(2),U,3)=DIV,DIH=350.6,DIG=2.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,2.01,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,2)):^(2),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(350.6,2.01,1,1,2.4)
	;;^DD(350.6,2.01,1,1,2.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),2)):^(2),1:""),DIV=X S $P(^(2),U,3)=DIV,DIH=350.6,DIG=2.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,2.01,1,1,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(350.6,2.01,1,1,"DELETE VALUE")
	;;=@
	;;^DD(350.6,2.01,1,1,"DT")
	;;=2920424
	;;^DD(350.6,2.01,1,1,"FIELD")
	;;=#2.03
	;;^DD(350.6,2.01,21,0)
	;;=^^2^2^2920427^^
	;;^DD(350.6,2.01,21,1,0)
	;;=The date/time that the archiving of data is initiated is automatically
	;;^DD(350.6,2.01,21,2,0)
	;;=stuffed into this field by the 'Archive' option.
	;;^DD(350.6,2.01,"DT")
	;;=2920424
	;;^DD(350.6,2.02,0)
	;;=ARCHIVE END DATE/TIME^D^^2;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,2.02,3)
	;;=
	;;^DD(350.6,2.02,21,0)
	;;=^^4^4^2920427^^
	;;^DD(350.6,2.02,21,1,0)
	;;=The date/time that the archiving of data was completed is automatically
	;;^DD(350.6,2.02,21,2,0)
	;;=stuffed into this field by the 'Archive' option.  The existence of this
	;;^DD(350.6,2.02,21,3,0)
	;;=field in the log entry assures that archiving was successful, and thus
	;;^DD(350.6,2.02,21,4,0)
	;;=the field is used as a flag to allow purging.
	;;^DD(350.6,2.03,0)
	;;=ARCHIVE INITIATOR^P200'^VA(200,^2;3^Q
	;;^DD(350.6,2.03,5,1,0)
	;;=350.6^2.01^1
	;;^DD(350.6,2.03,21,0)
	;;=^^2^2^2920427^^
	;;^DD(350.6,2.03,21,1,0)
	;;=This field contains the individual who archived the file.  The field is
	;;^DD(350.6,2.03,21,2,0)
	;;=updated by a trigger when the ARCHIVE BEGIN DATE/TIME field is updated.
	;;^DD(350.6,2.03,"DT")
	;;=2920408
	;;^DD(350.6,3.01,0)
	;;=PURGE BEGIN DATE/TIME^D^^3;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,3.01,1,0)
	;;=^.1
	;;^DD(350.6,3.01,1,1,0)
	;;=^^TRIGGER^350.6^3.03
	;;^DD(350.6,3.01,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,3)):^(3),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(350.6,3.01,1,1,1.4)
	;;^DD(350.6,3.01,1,1,1.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),3)):^(3),1:""),DIV=X S $P(^(3),U,3)=DIV,DIH=350.6,DIG=3.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,3.01,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBE(350.6,D0,3)):^(3),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(350.6,3.01,1,1,2.4)
	;;^DD(350.6,3.01,1,1,2.4)
	;;=S DIH=$S($D(^IBE(350.6,DIV(0),3)):^(3),1:""),DIV=X S $P(^(3),U,3)=DIV,DIH=350.6,DIG=3.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(350.6,3.01,1,1,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(350.6,3.01,1,1,"DELETE VALUE")
	;;=@
	;;^DD(350.6,3.01,1,1,"DT")
	;;=2920424
	;;^DD(350.6,3.01,1,1,"FIELD")
	;;=#3.03
	;;^DD(350.6,3.01,21,0)
	;;=^^2^2^2920427^
	;;^DD(350.6,3.01,21,1,0)
	;;=The date/time that purging is initiated is automatically stuffed into
	;;^DD(350.6,3.01,21,2,0)
	;;=this field by the 'Purge' option.
	;;^DD(350.6,3.01,"DT")
	;;=2920424
	;;^DD(350.6,3.02,0)
	;;=PURGE END DATE/TIME^D^^3;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.6,3.02,3)
	;;=
	;;^DD(350.6,3.02,21,0)
	;;=^^3^3^2920427^
	;;^DD(350.6,3.02,21,1,0)
	;;=The date/time that the purging of data was completed is automatically
	;;^DD(350.6,3.02,21,2,0)
	;;=stuffed into this field by the 'Purge' option.  When this field is
	;;^DD(350.6,3.02,21,3,0)
	;;=updated the status of the log entry is updated to CLOSED.
	;;^DD(350.6,3.03,0)
	;;=PURGE INITIATOR^P200'^VA(200,^3;3^Q

IBINI020
IBINI020	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.6,3.03,5,1,0)
	;;=350.6^3.01^1
	;;^DD(350.6,3.03,21,0)
	;;=^^2^2^2920427^
	;;^DD(350.6,3.03,21,1,0)
	;;=This field contains the individual who purged the file.  The field is
	;;^DD(350.6,3.03,21,2,0)
	;;=updated by a trigger when the PURGE BEGIN DATE/TIME field is updated.
	;;^DD(350.6,3.03,"DT")
	;;=2920408

IBINI021
IBINI021	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.7,0,"GL")
	;;=^IBE(350.7,
	;;^DIC("B","AMBULATORY CHECK-OFF SHEET",350.7)
	;;=
	;;^DIC(350.7,"%D",0)
	;;=^^5^5^2940214^^^^
	;;^DIC(350.7,"%D",1,0)
	;;=This file contains the details of the line format
	;;^DIC(350.7,"%D",2,0)
	;;=for the Ambulatory Surgries Check-off Sheets.
	;;^DIC(350.7,"%D",3,0)
	;;=Each sheet in this file can be associated with multiple clinics.
	;;^DIC(350.7,"%D",4,0)
	;;= 
	;;^DIC(350.7,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.7,0)
	;;=FIELD^^.01^4
	;;^DD(350.7,0,"DDA")
	;;=N
	;;^DD(350.7,0,"DT")
	;;=2911119
	;;^DD(350.7,0,"IX","B",350.7,.01)
	;;=
	;;^DD(350.7,0,"NM","AMBULATORY CHECK-OFF SHEET")
	;;=
	;;^DD(350.7,0,"PT",44,25)
	;;=
	;;^DD(350.7,0,"PT",350.71,.04)
	;;=
	;;^DD(350.7,.01,0)
	;;=NAME^RFX^^0;1^S IBGRPX=$G(DA) D FFMT^IBEFUNC2 S IBLNGX=$S($P(IBLNGX,U,2):$P(IBLNGX,U,2),1:59) K:$L(X)<3!'(X'?1P.E)!($L(X)>IBLNGX) X K IBLNGX,IBGRPX
	;;^DD(350.7,.01,1,0)
	;;=^.1
	;;^DD(350.7,.01,1,1,0)
	;;=350.7^B
	;;^DD(350.7,.01,1,1,1)
	;;=S ^IBE(350.7,"B",$E(X,1,30),DA)=""
	;;^DD(350.7,.01,1,1,2)
	;;=K ^IBE(350.7,"B",$E(X,1,30),DA)
	;;^DD(350.7,.01,3)
	;;=Enter the title to be printed on the CPT list for this sheet.  PLEASE NOTE THAT DELETING A SHEET ALSO DELETES ALL THE SHEET'S SUB-HEADERS AND PROCEDURES.Maximum length depends on number of columns.  
	;;^DD(350.7,.01,4)
	;;=S IBGRPX=$G(DA) D FFMT^IBEFUNC2 W !,?5,"Maximum length for this SHEET is now ",$S($P(IBLNGX,U,2):$P(IBLNGX,U,2),1:59)," characters.",! K IBLNGX,IBGRPX
	;;^DD(350.7,.01,21,0)
	;;=^^3^3^2920512^^^^
	;;^DD(350.7,.01,21,1,0)
	;;=Title for this sheet (group), printed on the CPT list for the associated
	;;^DD(350.7,.01,21,2,0)
	;;=clinics.  Maximum length allowed is calculated because it will change
	;;^DD(350.7,.01,21,3,0)
	;;=depending on the line format for the sheet.
	;;^DD(350.7,.01,"DEL",1,0)
	;;=I '$D(IBERSCE)
	;;^DD(350.7,.01,"DT")
	;;=2940317
	;;^DD(350.7,.02,0)
	;;=DISPLAY CHARGE^RS^0:NO;1:YES;^0;2^Q
	;;^DD(350.7,.02,3)
	;;=Enter 'Y' if you want the CPT charge to be printed on the check-off sheet, along with NAME and CODE.  Printing the charge decreases the number of characters available for the procedure name, by 10.
	;;^DD(350.7,.02,21,0)
	;;=^^3^3^2920220^^^^
	;;^DD(350.7,.02,21,1,0)
	;;=Indicates if the charge should be displayed on this check-off sheet.
	;;^DD(350.7,.02,21,2,0)
	;;=If charge is displayed, then the number of characters available for the
	;;^DD(350.7,.02,21,3,0)
	;;=procedure name is decreased.
	;;^DD(350.7,.02,"DT")
	;;=2911119
	;;^DD(350.7,.03,0)
	;;=COLUMNS^RS^2:TWO VERTICAL;3:THREE VERTICAL;^0;3^Q
	;;^DD(350.7,.03,3)
	;;=Enter the number of vertical columns of CPT codes printed on each page for this check-off sheet.  Number of characters for name (w/ w/o $): 2 columns=36/46, 3 columns=14/24.
	;;^DD(350.7,.03,21,0)
	;;=^^3^3^2920409^^^^
	;;^DD(350.7,.03,21,1,0)
	;;=The number of vertical columns used when printing this check-off sheet.
	;;^DD(350.7,.03,21,2,0)
	;;=The number of columns on a page determines the column width and the
	;;^DD(350.7,.03,21,3,0)
	;;=number of characters available for the procedure/subheader name.
	;;^DD(350.7,.03,"DT")
	;;=2911119
	;;^DD(350.7,.04,0)
	;;=LINE FORMAT^RS^1:CODE/NAME/$;2:NAME/CODE/$;^0;4^Q
	;;^DD(350.7,.04,3)
	;;=Enter the code corresponding to the positioning of data elements within a vertical column on the check-off sheet.  (Ignore the $ if charge is not to be printed.)
	;;^DD(350.7,.04,21,0)
	;;=^^1^1^2920220^^^^
	;;^DD(350.7,.04,21,1,0)
	;;=Position of data elements within a column.

IBINI022
IBINI022	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.7,.04,"DT")
	;;=2911119

IBINI023
IBINI023	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.71)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.71,0,"GL")
	;;=^IBE(350.71,
	;;^DIC("B","AMBULATORY SURG. CHECK-OFF SHEET PRINT FIELDS",350.71)
	;;=
	;;^DIC(350.71,"%",0)
	;;=^1.005^0^0
	;;^DIC(350.71,"%D",0)
	;;=^^6^6^2940214^^^^
	;;^DIC(350.71,"%D",1,0)
	;;=Contains the Sub-headers and Procedures associated with each ambulatory
	;;^DIC(350.71,"%D",2,0)
	;;=surgery check-off sheet.  Defines the relationship between check-off sheets,
	;;^DIC(350.71,"%D",3,0)
	;;=Sub-headers, and Procedures.  Also defines the print order of each entry on 
	;;^DIC(350.71,"%D",4,0)
	;;=the check-off sheet.
	;;^DIC(350.71,"%D",5,0)
	;;= 
	;;^DIC(350.71,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.71,0)
	;;=FIELD^^.08^7
	;;^DD(350.71,0,"DDA")
	;;=N
	;;^DD(350.71,0,"DT")
	;;=2920128
	;;^DD(350.71,0,"IX","AG",350.71,.02)
	;;=
	;;^DD(350.71,0,"IX","AG1",350.71,.04)
	;;=
	;;^DD(350.71,0,"IX","AP",350.71,.06)
	;;=
	;;^DD(350.71,0,"IX","AP1",350.71,.05)
	;;=
	;;^DD(350.71,0,"IX","AS",350.71,.02)
	;;=
	;;^DD(350.71,0,"IX","AS1",350.71,.05)
	;;=
	;;^DD(350.71,0,"IX","B",350.71,.01)
	;;=
	;;^DD(350.71,0,"IX","G",350.71,.04)
	;;=
	;;^DD(350.71,0,"IX","P",350.71,.06)
	;;=
	;;^DD(350.71,0,"IX","S",350.71,.05)
	;;=
	;;^DD(350.71,0,"NM","AMBULATORY SURG. CHECK-OFF SHEET PRINT FIELDS")
	;;=
	;;^DD(350.71,0,"PT",350.71,.05)
	;;=
	;;^DD(350.71,.01,0)
	;;=NAME^RFX^^0;1^S:$D(DA) IBCPX=DA D FFMT^IBEFUNC2 S IBLNGX=$S(IBLNGX=""!'$D(DA):59,$P(^IBE(350.71,DA,0),U,3)="P":$P(IBLNGX,U,3),1:$P(IBLNGX,U,2)) K:$L(X)<3!($L(X)>IBLNGX) X K IBLNGX,IBCPX
	;;^DD(350.71,.01,1,0)
	;;=^.1^^-1
	;;^DD(350.71,.01,1,1,0)
	;;=350.71^B
	;;^DD(350.71,.01,1,1,1)
	;;=S ^IBE(350.71,"B",$E(X,1,30),DA)=""
	;;^DD(350.71,.01,1,1,2)
	;;=K ^IBE(350.71,"B",$E(X,1,30),DA)
	;;^DD(350.71,.01,3)
	;;=Enter the text to be printed on the CPT list for this entry. Maximum length depends on number of columns and if charge is printed.  DELETING A SUB-HEADER DELETES ALL THE SUB-HEADER'S PROCEDURES.
	;;^DD(350.71,.01,4)
	;;=I $D(DA) S IBCPX=DA D FFMT^IBEFUNC2 W !,?5,"Maximum length for this entry is now ",$S(IBLNGX="":59,$P(^IBE(350.71,DA,0),U,3)="P":$P(IBLNGX,U,3),1:$P(IBLNGX,U,2))," characters.",! K IBLNGX,IBCPX
	;;^DD(350.71,.01,21,0)
	;;=^^1^1^2920327^^^^
	;;^DD(350.71,.01,21,1,0)
	;;=Text printed on the check-off sheet for this entry.
	;;^DD(350.71,.01,"DEL",1,0)
	;;=I '$D(IBERSCE)
	;;^DD(350.71,.01,"DT")
	;;=2920327
	;;^DD(350.71,.02,0)
	;;=PRINT ORDER^RNJ4,0X^^0;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X I $D(X),$D(DA) D FPO^IBEFUNC2 I 'X K X
	;;^DD(350.71,.02,1,0)
	;;=^.1
	;;^DD(350.71,.02,1,1,0)
	;;=350.71^AS^MUMPS
	;;^DD(350.71,.02,1,1,1)
	;;=I $P(^IBE(350.71,DA,0),"^",5) S ^IBE(350.71,"AS",$P(^(0),"^",5),X,DA)=""
	;;^DD(350.71,.02,1,1,2)
	;;=I $P(^IBE(350.71,DA,0),"^",5) K ^IBE(350.71,"AS",$P(^(0),"^",5),X,DA)
	;;^DD(350.71,.02,1,1,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.02,1,1,"%D",0)
	;;=^^1^1^2920128^
	;;^DD(350.71,.02,1,1,"%D",1,0)
	;;=Quick index for sub-header members (procedures) and their print orders.
	;;^DD(350.71,.02,1,1,"DT")
	;;=2920128
	;;^DD(350.71,.02,1,2,0)
	;;=350.71^AG^MUMPS
	;;^DD(350.71,.02,1,2,1)
	;;=I $P(^IBE(350.71,DA,0),"^",4) S ^IBE(350.71,"AG",$P(^(0),"^",4),X,DA)=""
	;;^DD(350.71,.02,1,2,2)
	;;=I $P(^IBE(350.71,DA,0),"^",4) K ^IBE(350.71,"AG",$P(^(0),"^",4),X,DA)
	;;^DD(350.71,.02,1,2,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.02,1,2,"%D",0)
	;;=^^1^1^2920128^^^^
	;;^DD(350.71,.02,1,2,"%D",1,0)
	;;=Quick cross-reference for all members (sub-header's) and their print orders, within a sheet.
	;;^DD(350.71,.02,1,2,"DT")
	;;=2911121

IBINI024
IBINI024	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.71)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.71,.02,3)
	;;=Type a Number between 1 and 9999, the number must not already be defined as a Print Order for the sheet/sub-header.  This determines the printing order for entries within sheets and sub-headers.
	;;^DD(350.71,.02,21,0)
	;;=^^2^2^2920415^^^^
	;;^DD(350.71,.02,21,1,0)
	;;=The order that the members of the check-off sheet/sub-header are printed.
	;;^DD(350.71,.02,21,2,0)
	;;=A print order must be entered or the procedure is deleted from the sheet.
	;;^DD(350.71,.02,"DT")
	;;=2920211
	;;^DD(350.71,.03,0)
	;;=TYPE^RS^S:SUB-HEADER;P:PROCEDURE;^0;3^Q
	;;^DD(350.71,.03,1,0)
	;;=^.1^^0
	;;^DD(350.71,.03,3)
	;;=A sub-header is a subgroup which may have multiple procedures associated with it.  A procedure is printed under a specific sub-header and must have a valid CPT code.
	;;^DD(350.71,.03,21,0)
	;;=^^2^2^2920128^^^
	;;^DD(350.71,.03,21,1,0)
	;;=The type definition for this entry.  There are only two types:
	;;^DD(350.71,.03,21,2,0)
	;;=  "P"rocedures which should always have valid CPT codes, and "S"ub-headers which may have multiple procedures.
	;;^DD(350.71,.03,"DT")
	;;=2920128
	;;^DD(350.71,.04,0)
	;;=CHECK-OFF SHEET^P350.7'^IBE(350.7,^0;4^Q
	;;^DD(350.71,.04,1,0)
	;;=^.1
	;;^DD(350.71,.04,1,1,0)
	;;=350.71^AG1^MUMPS
	;;^DD(350.71,.04,1,1,1)
	;;=I $P(^IBE(350.71,DA,0),"^",2) S ^IBE(350.71,"AG",X,$P(^(0),"^",2),DA)=""
	;;^DD(350.71,.04,1,1,2)
	;;=I $P(^IBE(350.71,DA,0),"^",2) K ^IBE(350.71,"AG",X,$P(^(0),"^",2),DA)
	;;^DD(350.71,.04,1,1,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.04,1,1,"%D",0)
	;;=^^1^1^2920128^^^^
	;;^DD(350.71,.04,1,1,"%D",1,0)
	;;=Quick cross-reference for members and their print orders within a check-off sheet.
	;;^DD(350.71,.04,1,1,"DT")
	;;=2911121
	;;^DD(350.71,.04,1,2,0)
	;;=350.71^G
	;;^DD(350.71,.04,1,2,1)
	;;=S ^IBE(350.71,"G",$E(X,1,30),DA)=""
	;;^DD(350.71,.04,1,2,2)
	;;=K ^IBE(350.71,"G",$E(X,1,30),DA)
	;;^DD(350.71,.04,1,2,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.04,1,2,"%D",0)
	;;=^^1^1^2920128^
	;;^DD(350.71,.04,1,2,"%D",1,0)
	;;=Quick index of all sheets (groups).
	;;^DD(350.71,.04,1,2,"DT")
	;;=2911122
	;;^DD(350.71,.04,3)
	;;=The check-off sheet this entry is a member of.  This entry will be printed on the CPT list for the sheet you specify.
	;;^DD(350.71,.04,21,0)
	;;=^^1^1^2940209^^^^
	;;^DD(350.71,.04,21,1,0)
	;;=The check-off sheet this entry belongs to.
	;;^DD(350.71,.04,23,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.71,.04,23,1,0)
	;;=Under the current hierarchical scheme this field will have data only for
	;;^DD(350.71,.04,23,2,0)
	;;=entries of TYPE=SUB-HEADER.
	;;^DD(350.71,.04,"DT")
	;;=2920128
	;;^DD(350.71,.05,0)
	;;=SUB-HEADER^*P350.71'^IBE(350.71,^0;5^S DIC("S")="I $P(^(0),U,3)=""S""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.71,.05,1,0)
	;;=^.1
	;;^DD(350.71,.05,1,1,0)
	;;=350.71^AS1^MUMPS
	;;^DD(350.71,.05,1,1,1)
	;;=I $P(^IBE(350.71,DA,0),"^",2) S ^IBE(350.71,"AS",X,$P(^(0),"^",2),DA)=""
	;;^DD(350.71,.05,1,1,2)
	;;=I $P(^IBE(350.71,DA,0),"^",2) K ^IBE(350.71,"AS",X,$P(^(0),"^",2),DA)
	;;^DD(350.71,.05,1,1,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.05,1,1,"%D",0)
	;;=^^1^1^2920128^
	;;^DD(350.71,.05,1,1,"%D",1,0)
	;;=Quick index for sub-header members (procedures) and their print orders.
	;;^DD(350.71,.05,1,1,"DT")
	;;=2920128
	;;^DD(350.71,.05,1,3,0)
	;;=350.71^S
	;;^DD(350.71,.05,1,3,1)
	;;=S ^IBE(350.71,"S",$E(X,1,30),DA)=""
	;;^DD(350.71,.05,1,3,2)
	;;=K ^IBE(350.71,"S",$E(X,1,30),DA)
	;;^DD(350.71,.05,1,3,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.05,1,3,"%D",0)
	;;=^^1^1^2920128^
	;;^DD(350.71,.05,1,3,"%D",1,0)
	;;=Quick index of all sub-header entrys.

IBINI025
IBINI025	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.71)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.71,.05,1,3,"DT")
	;;=2920128
	;;^DD(350.71,.05,1,4,0)
	;;=350.71^AP1^MUMPS
	;;^DD(350.71,.05,1,4,1)
	;;=I $P(^IBE(350.71,DA,0),"^",6) S ^IBE(350.71,"AP",X,$P(^(0),"^",6),DA)=""
	;;^DD(350.71,.05,1,4,2)
	;;=I $P(^IBE(350.71,DA,0),"^",6) K ^IBE(350.71,"AP",X,$P(^(0),"^",6),DA)
	;;^DD(350.71,.05,1,4,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.05,1,4,"%D",0)
	;;=^^1^1^2920128^^^
	;;^DD(350.71,.05,1,4,"%D",1,0)
	;;=Quick cross-reference between procedures and sub-headers.
	;;^DD(350.71,.05,1,4,"DT")
	;;=2911122
	;;^DD(350.71,.05,3)
	;;=Enter the sub-header that this procedure should be printed under on the check-off sheet.
	;;^DD(350.71,.05,12)
	;;=Procedures cannot be sub-headers.
	;;^DD(350.71,.05,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""S"""
	;;^DD(350.71,.05,21,0)
	;;=^^1^1^2940209^^^^
	;;^DD(350.71,.05,21,1,0)
	;;=The sub-header that this entry is a member of.
	;;^DD(350.71,.05,23,0)
	;;=^^2^2^2940209^^
	;;^DD(350.71,.05,23,1,0)
	;;=Under the current hierarchical scheme this field should have data only if
	;;^DD(350.71,.05,23,2,0)
	;;=TYPE=PROCEDURE.
	;;^DD(350.71,.05,"DT")
	;;=2920128
	;;^DD(350.71,.06,0)
	;;=PROCEDURE^R*P409.71'^SD(409.71,^0;6^S DIC("S")="I $D(DA),$P($G(^IBE(350.71,+DA,0)),U,3)=""P""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.71,.06,1,0)
	;;=^.1
	;;^DD(350.71,.06,1,1,0)
	;;=350.71^P
	;;^DD(350.71,.06,1,1,1)
	;;=S ^IBE(350.71,"P",$E(X,1,30),DA)=""
	;;^DD(350.71,.06,1,1,2)
	;;=K ^IBE(350.71,"P",$E(X,1,30),DA)
	;;^DD(350.71,.06,1,1,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.06,1,1,"DT")
	;;=2911122
	;;^DD(350.71,.06,1,2,0)
	;;=350.71^AP^MUMPS
	;;^DD(350.71,.06,1,2,1)
	;;=I $P(^IBE(350.71,DA,0),"^",5) S ^IBE(350.71,"AP",$P(^(0),"^",5),X,DA)=""
	;;^DD(350.71,.06,1,2,2)
	;;=I $P(^IBE(350.71,DA,0),"^",5) K ^IBE(350.71,"AP",$P(^(0),"^",5),X,DA)
	;;^DD(350.71,.06,1,2,3)
	;;=DO NOT DELETE
	;;^DD(350.71,.06,1,2,"%D",0)
	;;=^^1^1^2920128^^^
	;;^DD(350.71,.06,1,2,"%D",1,0)
	;;=Quick cross-reference between procedures and sub-headers.
	;;^DD(350.71,.06,1,2,"DT")
	;;=2911122
	;;^DD(350.71,.06,3)
	;;=Enter the CPT code for this Procedure.
	;;^DD(350.71,.06,12)
	;;=Only TYPE "P" entries may have procedures.
	;;^DD(350.71,.06,12.1)
	;;=S DIC("S")="I $D(DA),$P($G(^IBE(350.71,+DA,0)),U,3)=""P"""
	;;^DD(350.71,.06,21,0)
	;;=^^1^1^2920331^^^
	;;^DD(350.71,.06,21,1,0)
	;;=The CPT code for this PROCEDURE.  Should only be defined for TYPE="P".
	;;^DD(350.71,.06,"DT")
	;;=2911202
	;;^DD(350.71,.08,0)
	;;=CHARGE^CJ8,2^^ ; ^X ^DD(350.71,.08,9.4) S X1=Y(350.71,.08,1) S IBCDX=X,IBDTX=X1 D FCC^IBEFUNC1 S X=IBCHGX K IBCDX,IBDTX,IBCHGX S X=X S D0=Y(350.71,.08,80) S X=$J(X,0,2)
	;;^DD(350.71,.08,9)
	;;=^
	;;^DD(350.71,.08,9.01)
	;;=409.71^.01;350.71^.06
	;;^DD(350.71,.08,9.1)
	;;=IB CPT BILLING CHARGE(TODAY,PROCEDURE)
	;;^DD(350.71,.08,9.2)
	;;=S Y(350.71,.08,80)=$S($D(D0):D0,1:""),Y(350.71,.08,2)=$S($D(^IBE(350.71,D0,0)):^(0),1:""),X=DT S X=X,Y(350.71,.08,1)=X
	;;^DD(350.71,.08,9.3)
	;;=X ^DD(350.71,.08,9.2) S D0=$P(Y(350.71,.08,2),U,6) S:'$D(^SD(409.71,+D0,0)) D0=-1 S Y(350.71,.08,101)=$S($D(^SD(409.71,D0,0)):^(0),1:"")
	;;^DD(350.71,.08,9.4)
	;;=X ^DD(350.71,.08,9.3) S X=$S('$D(^ICPT(+$P(Y(350.71,.08,101),U,1),0)):"",1:$P(^(0),U,1))
	;;^DD(350.71,.08,21,0)
	;;=^^1^1^2930616^^^^
	;;^DD(350.71,.08,21,1,0)
	;;=Displays the charge for a CPT code.
	;;^DD(350.71,.08,"DT")
	;;=2920205

IBINI026
IBINI026	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.8,0,"GL")
	;;=^IBE(350.8,
	;;^DIC("B","IB ERROR",350.8)
	;;=
	;;^DIC(350.8,"%D",0)
	;;=^^11^11^2940214^^^^
	;;^DIC(350.8,"%D",1,0)
	;;=This file contains errors for billing functions.  It may be used by
	;;^DIC(350.8,"%D",2,0)
	;;=applications, IB or AR.  The normal format for a routine to return
	;;^DIC(350.8,"%D",3,0)
	;;=an error is to return the variable:
	;;^DIC(350.8,"%D",4,0)
	;;=  Y=1^... a successful event occured
	;;^DIC(350.8,"%D",5,0)
	;;=  Y=-1^error code[;error code;error code...]^additional text
	;;^DIC(350.8,"%D",6,0)
	;;=The error messages can be displayed by calling routine ^IBAERR.  If
	;;^DIC(350.8,"%D",7,0)
	;;=the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
	;;^DIC(350.8,"%D",8,0)
	;;=put the error message in a bulletin and post it to the group defined
	;;^DIC(350.8,"%D",9,0)
	;;=in the IB SITE PARAMETER FILE.
	;;^DIC(350.8,"%D",10,0)
	;;= 
	;;^DIC(350.8,"%D",11,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.8,0)
	;;=FIELD^^10^7
	;;^DD(350.8,0,"DDA")
	;;=N
	;;^DD(350.8,0,"DT")
	;;=2930322
	;;^DD(350.8,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(350.8,0,"IX","AC",350.8,.03)
	;;=
	;;^DD(350.8,0,"IX","B",350.8,.01)
	;;=
	;;^DD(350.8,0,"IX","C",350.8,.03)
	;;=
	;;^DD(350.8,0,"NM","IB ERROR")
	;;=
	;;^DD(350.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(350.8,.01,1,0)
	;;=^.1
	;;^DD(350.8,.01,1,1,0)
	;;=350.8^B
	;;^DD(350.8,.01,1,1,1)
	;;=S ^IBE(350.8,"B",$E(X,1,30),DA)=""
	;;^DD(350.8,.01,1,1,2)
	;;=K ^IBE(350.8,"B",$E(X,1,30),DA)
	;;^DD(350.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(350.8,.01,21,0)
	;;=^^2^2^2910305^^
	;;^DD(350.8,.01,21,1,0)
	;;=This is a free text name of the entry.  It should be namespaced with
	;;^DD(350.8,.01,21,2,0)
	;;=the namespace of the package reporting the error.
	;;^DD(350.8,.02,0)
	;;=ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
	;;^DD(350.8,.02,3)
	;;=Answer must be 3-80 characters in length.
	;;^DD(350.8,.02,21,0)
	;;=^^3^3^2940209^^^^
	;;^DD(350.8,.02,21,1,0)
	;;=This is the text of the message as it will be displayed to a user or
	;;^DD(350.8,.02,21,2,0)
	;;=posted in a bulletin.  It should be as meaningful as possible to the
	;;^DD(350.8,.02,21,3,0)
	;;=person seeing the message.
	;;^DD(350.8,.03,0)
	;;=ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
	;;^DD(350.8,.03,1,0)
	;;=^.1
	;;^DD(350.8,.03,1,1,0)
	;;=350.8^AC
	;;^DD(350.8,.03,1,1,1)
	;;=S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
	;;^DD(350.8,.03,1,1,2)
	;;=K ^IBE(350.8,"AC",$E(X,1,30),DA)
	;;^DD(350.8,.03,1,2,0)
	;;=350.8^C
	;;^DD(350.8,.03,1,2,1)
	;;=S ^IBE(350.8,"C",$E(X,1,30),DA)=""
	;;^DD(350.8,.03,1,2,2)
	;;=K ^IBE(350.8,"C",$E(X,1,30),DA)
	;;^DD(350.8,.03,3)
	;;=Answer must be 1-9 characters in length.
	;;^DD(350.8,.03,21,0)
	;;=^^9^9^2920219^^^^
	;;^DD(350.8,.03,21,1,0)
	;;=This is the error code that will be passed to or determined by
	;;^DD(350.8,.03,21,2,0)
	;;=Integrated Billing.  The format for the Error Code should be
	;;^DD(350.8,.03,21,3,0)
	;;=nnxxx, where nn is the reporting package namespace and xxx are numeric
	;;^DD(350.8,.03,21,4,0)
	;;=values.
	;;^DD(350.8,.03,21,5,0)
	;;= 
	;;^DD(350.8,.03,21,6,0)
	;;=This is the error code that will be passed as the second piece of
	;;^DD(350.8,.03,21,7,0)
	;;=the variable Y to IB when +Y=-1.  More than one error code can be
	;;^DD(350.8,.03,21,8,0)
	;;=placed in the second ^ piece of Y delimited by semi-colons.  Applications
	;;^DD(350.8,.03,21,9,0)
	;;=may call ^IBAERR to display the error message(s).

IBINI027
IBINI027	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.8,.03,"DT")
	;;=2920219
	;;^DD(350.8,.04,0)
	;;=PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
	;;^DD(350.8,.04,21,0)
	;;=^^2^2^2920415^^^
	;;^DD(350.8,.04,21,1,0)
	;;=This is the package that requested this entry in this file and will
	;;^DD(350.8,.04,21,2,0)
	;;=report it to IB as an error if the conditions are detected.
	;;^DD(350.8,.05,0)
	;;=ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
	;;^DD(350.8,.05,21,0)
	;;=^^6^6^2910227^
	;;^DD(350.8,.05,21,1,0)
	;;=This is the type of action that should be taken when this error is
	;;^DD(350.8,.05,21,2,0)
	;;=reported to IB.  If action other than displaying a message is indicated
	;;^DD(350.8,.05,21,3,0)
	;;=then the MUMPS code in the ERROR ACTION field will be executed.
	;;^DD(350.8,.05,21,4,0)
	;;= 
	;;^DD(350.8,.05,21,5,0)
	;;=Currently only display actions are implemented.  Please contact the 
	;;^DD(350.8,.05,21,6,0)
	;;=developing ISC if other action types are desired.
	;;^DD(350.8,.06,0)
	;;=CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
	;;^DD(350.8,.06,21,0)
	;;=^^1^1^2940209^
	;;^DD(350.8,.06,21,1,0)
	;;=This is the type of alert that should be sent when this error occurs.
	;;^DD(350.8,.06,"DT")
	;;=2930322
	;;^DD(350.8,10,0)
	;;=EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(350.8,10,3)
	;;=This is Standard MUMPS code.
	;;^DD(350.8,10,21,0)
	;;=^^2^2^2910227^
	;;^DD(350.8,10,21,1,0)
	;;=This is the MUMPS code that will be executed if an error is reported
	;;^DD(350.8,10,21,2,0)
	;;=with an ERROR ACTION of other than to display a message.

IBINI028
IBINI028	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.8)
	;;=^IBE(350.8,
	;;^UTILITY(U,$J,350.8,0)
	;;=IB ERROR^350.8I^154^154
	;;^UTILITY(U,$J,350.8,1,0)
	;;=IB VAEL MISSING^Patient eligibility data was expected but not there.^IB001^1^1
	;;^UTILITY(U,$J,350.8,2,0)
	;;=IB DFN^Patient pointer does not point to a valid patient file entry!^IB002^1^1
	;;^UTILITY(U,$J,350.8,3,0)
	;;=IB SERVICE^Application Service not in Service/Section file!^IB003^1^1
	;;^UTILITY(U,$J,350.8,4,0)
	;;=IB MISSING APP GL^Global location of parent file can't be determined for this entry.^IB004^1^1
	;;^UTILITY(U,$J,350.8,5,0)
	;;=IB NO PARENT^Application entry that created IB Action no longer exists.^IB005^1^1
	;;^UTILITY(U,$J,350.8,6,0)
	;;=IB NO SUBFILE^Application entry in a subfile that created IB Action no longer exists.^IB006^1^1
	;;^UTILITY(U,$J,350.8,7,0)
	;;=IB DUZ^User (DUZ) creating entry not a valid entry in New Person file.^IB007^1^1
	;;^UTILITY(U,$J,350.8,8,0)
	;;=IB ACTION TYPE^Integrated Billing can not determine Action Type from application.^IB008^1^1
	;;^UTILITY(U,$J,350.8,9,0)
	;;=IB SITE^Facility is not entered in IB Site Parameter file.^IB009^1^1
	;;^UTILITY(U,$J,350.8,10,0)
	;;=IB NO RX^Pharmacy called IB but no RX data passed.^IB010^1^1
	;;^UTILITY(U,$J,350.8,11,0)
	;;=IB NO BILL^IB expected Bill Number from AR but none returned.^IB011^1^1
	;;^UTILITY(U,$J,350.8,12,0)
	;;=IB SOFT LINK^Application did not pass link to entry creating entry.^IB012^1^1
	;;^UTILITY(U,$J,350.8,13,0)
	;;=IB UNITS^Application did not pass number of units to IB^IB013^1^1
	;;^UTILITY(U,$J,350.8,14,0)
	;;=IB ENTRY LOCKED^IB can't create new entry.  File locked by another user.^IB014^1^2^11
	;;^UTILITY(U,$J,350.8,15,0)
	;;=IB NOT INSTALLED^Integrated Billing files do not appear to be installed on this system.^IB015^1^1
	;;^UTILITY(U,$J,350.8,16,0)
	;;=IB PARAMETERS^IB site parameters not set up on this system.^IB016^1^1
	;;^UTILITY(U,$J,350.8,17,0)
	;;=IB SEQUENCE NUMBER^Sequence number is missing, can't pass IB entry to AR.^IB017^1^1
	;;^UTILITY(U,$J,350.8,18,0)
	;;=IB ZEROTH NODE^Entry in IB ACTION file appears to be missing.^IB018^1^1
	;;^UTILITY(U,$J,350.8,19,0)
	;;=IB FILER NOT QUEUED^An attempt to queue the IB filer was unsuccessful.^IB019^1^1
	;;^UTILITY(U,$J,350.8,20,0)
	;;=IB CANCELLATION REASON^Canceled Entry does not have expected cancellation reason.^IB020^1^1
	;;^UTILITY(U,$J,350.8,21,0)
	;;=IB CANCELLED PARENT^An attempt was made to cancel an IB ACTION entry that does not exist^IB021^1^1
	;;^UTILITY(U,$J,350.8,22,0)
	;;=IB CANCELED ACTION TYPE^The cancellation action type for this action type can not be determined.^IB022^1^1
	;;^UTILITY(U,$J,350.8,23,0)
	;;=IB MISSING SEQUENCE NUMBER^The SEQUENCE NUMBER field in the IB ACTION TYPE file is missing for the type.^IB023^1^1
	;;^UTILITY(U,$J,350.8,24,0)
	;;=IB BILL NUMBER^The bill number in the parent IB ACTION entry is missing.^IB024^1^1
	;;^UTILITY(U,$J,350.8,25,0)
	;;=IB UNIT<1^The billable unit is less than one.^IB025^1^1
	;;^UTILITY(U,$J,350.8,26,0)
	;;=IB ALREADY CANCELLED^Last update for entry you are cancelling is cancelled.^IB026^1^1
	;;^UTILITY(U,$J,350.8,27,0)
	;;=IB NO UPDATE PARENT^An attempt was made to update an IB Action, but its Parent entry does not exist.^IB027^1^1
	;;^UTILITY(U,$J,350.8,28,0)
	;;=IB FAILED WHILE EDITING^Integrated Billing failed while editing a newly created entry^IB028^1^1
	;;^UTILITY(U,$J,350.8,29,0)
	;;=IB NO CHARGE - ACTION TYPE^Integrated Billing cannot find a charge for a specific Action Type.^IB029^1^1

IBINI029
IBINI029	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.8,30,0)
	;;=IB NO CHARGE - BEDSECTION^Integrated Billing cannot find a charge for a specific bedsection.^IB030^1^1
	;;^UTILITY(U,$J,350.8,31,0)
	;;=IB NO MEDICARE ACTION TYPE^Integrated Billing cannot find an action type for the Medicare Deductible.^IB031^1^1
	;;^UTILITY(U,$J,350.8,32,0)
	;;=IB NO MEDICARE DEDUCTIBLE^Integrated Billing cannot find the Medicare Deductible for the given date.^IB032^1^1
	;;^UTILITY(U,$J,350.8,33,0)
	;;=IB INVALID CHARGES^Means Test charges have been calculated on and/or beyond the discharge date.^IB033^1^1
	;;^UTILITY(U,$J,350.8,34,0)
	;;=IB INVALID CYCLE^The billing cycle has been started after the billable event date.^IB034^1^1
	;;^UTILITY(U,$J,350.8,35,0)
	;;=IB NO CHARGE REMOVE REASON^Integrated Billing CHARGE REMOVE REASON is missing.^IB035^1^1
	;;^UTILITY(U,$J,350.8,36,0)
	;;=IB UNKNOWN IB ACTION TYPE^Unknown IB ACTION TYPE.^IB036^1^1
	;;^UTILITY(U,$J,350.8,37,0)
	;;=IB NO BILLABLE EVENT^Integrated Billing requires inpatient charges to relate to an admission.^IB037^1^1
	;;^UTILITY(U,$J,350.8,38,0)
	;;=IB NO FEE BASIS AMOUNT^Integrated Billing requires a dollar amount for fee basis charges.^IB038^1^1
	;;^UTILITY(U,$J,350.8,39,0)
	;;=IB NO BILLING DATE^Integrated Billing requires a date or date range for charges.^IB039^1^1
	;;^UTILITY(U,$J,350.8,40,0)
	;;=IB ALREADY NEW BILL^Bill is already in New Bill Status in A/R, can't send. Contact supervisor.^IB040^1^3
	;;^UTILITY(U,$J,350.8,41,0)
	;;=IB APPROVING USER^Approving User not in User file or Person file link missing.^IB041^1^3
	;;^UTILITY(U,$J,350.8,42,0)
	;;=IB ASC AND VISITS^Bill has Amb. Surg. Code and more than one visit date.^IB042^1^3
	;;^UTILITY(U,$J,350.8,43,0)
	;;=IB BAD BILL CLASSIFICATION^Bill Classification is missing or incorrect^IB043^1^3
	;;^UTILITY(U,$J,350.8,44,0)
	;;=IB BILL NUMBER^Bill Number is in an incorrect format. Contact supervisor.^IB044^1^3
	;;^UTILITY(U,$J,350.8,45,0)
	;;=IB BILL STATUS^Bill status is undetermined or inappropriate. Contact supervisor.^IB045^1^3
	;;^UTILITY(U,$J,350.8,46,0)
	;;=IB CROSSES CALENDAR YEAR^Bill dates start and end in different calendar years, must be in same year.^IB046^1^3
	;;^UTILITY(U,$J,350.8,47,0)
	;;=IB CROSSES FY^Bill dates start and end in different fiscal years, must be in same FY.^IB047^1^3
	;;^UTILITY(U,$J,350.8,48,0)
	;;=IB ENTERING USER^Entering User not in User file or Person file link missing.^IB048^1^3
	;;^UTILITY(U,$J,350.8,49,0)
	;;=IB EVENT DATE^Event Date is not defined or incorrect.^IB049^1^3
	;;^UTILITY(U,$J,350.8,50,0)
	;;=IB FISCAL YEAR ONE^Fiscal Year is not entered or inappropriate.^IB050^1^3
	;;^UTILITY(U,$J,350.8,51,0)
	;;=IB FY1 CHARGES^Charges for FY 1 are missing or zero.^IB051^1^3
	;;^UTILITY(U,$J,350.8,52,0)
	;;=IB FY1 MINUS OFFSET^FY 1 charges minus the offset less than or equal to zero.^IB052^1^3
	;;^UTILITY(U,$J,350.8,53,0)
	;;=IB INSTITUTION^Other listed as responsible but not in Institution field.^IB053^1^3
	;;^UTILITY(U,$J,350.8,54,0)
	;;=IB INSURER^Insurer listed as responsible but no Primary Insurance Carrier Selected.^IB054^1^3
	;;^UTILITY(U,$J,350.8,55,0)
	;;=IB LOC^Location of Care field is not entered or incorrect.^IB055^1^3
	;;^UTILITY(U,$J,350.8,56,0)
	;;=IB MISSING A/R RECORD^Accounts Receivable record is missing or has different bill number.^IB056^1^3
	;;^UTILITY(U,$J,350.8,57,0)
	;;=IB PATIENT^Patient not defined or Patient not in Patient file. Contact Supervisor.^IB057^1^3
	;;^UTILITY(U,$J,350.8,58,0)
	;;=IB RATE TO DEBTOR^Rate Type chosen expects different selection of Who's Responsible.^IB058^1^3

IBINI02A
IBINI02A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.8,59,0)
	;;=IB RATE TYPE^Rate Type is missing or is missing A/R Category Field.^IB059^1^3
	;;^UTILITY(U,$J,350.8,60,0)
	;;=IB REVIEWING USER^Reviewing User not in Usr file or Person file link missing.^IB060^1^3
	;;^UTILITY(U,$J,350.8,61,0)
	;;=IB STATEMENT FROM^Statement Covers From field not entered or inappropriate.^IB061^1^3
	;;^UTILITY(U,$J,350.8,62,0)
	;;=IB STATEMENT TO^Statement Covers To field not entered or inappropriate.^IB062^1^3
	;;^UTILITY(U,$J,350.8,63,0)
	;;=IB TIMEFRAME^Time Frame of Bill is missing or incorrect.^IB063^1^3
	;;^UTILITY(U,$J,350.8,64,0)
	;;=IB TOTAL CHARGES^Total Charges for Bill missing or equals zero.^IB064^1^3
	;;^UTILITY(U,$J,350.8,65,0)
	;;=IB WHO'S RESPONSIBLE^Who's Responsible for bill is not entered or incorrect.^IB065^1^3
	;;^UTILITY(U,$J,350.8,66,0)
	;;=IB066  IB DUPLICATE COPAYMENT^Patient already charged a Copayment for this date.^IB066^1^1
	;;^UTILITY(U,$J,350.8,67,0)
	;;=IB067  COMP & PENSION^Patient had a Compensation and Pension on this date.^IB067^1^1
	;;^UTILITY(U,$J,350.8,68,0)
	;;=IB068  IB CLOCK LOCKED^Patient's billing clock locked; adjust manually.^IB068^1^1
	;;^UTILITY(U,$J,350.8,69,0)
	;;=IB069  IB NO CHARGE^Exceeds maximum appropriate charges; no bill added.^IB069^1^1
	;;^UTILITY(U,$J,350.8,70,0)
	;;=IB NO VISIT CPT^Missing the visit procedure.^IB070^1^3
	;;^UTILITY(U,$J,350.8,71,0)
	;;=IB NO DX^No ICD-9 diagnosis.^IB071^1^3
	;;^UTILITY(U,$J,350.8,72,0)
	;;=IB NO CPT DX^A CPT procedure is missing an associated diagnosis.^IB072^1^3
	;;^UTILITY(U,$J,350.8,73,0)
	;;=IB BAD CPT DX^A CPT procedure associated diagnosis does not match any billing diagnosis.^IB073^1^3
	;;^UTILITY(U,$J,350.8,74,0)
	;;=IB ADD PATIENT FAILED^Failed to add patient to Billing Patient file.^IB074^1^2^12
	;;^UTILITY(U,$J,350.8,75,0)
	;;=IB BAD DATE FORMAT^Date in incorrect format.^IB075^1^2^13
	;;^UTILITY(U,$J,350.8,76,0)
	;;=IB ADD EXEMPTION FAILED^Failed to add exemption record to Billing Exemption file.^IB076^1^2^14
	;;^UTILITY(U,$J,350.8,77,0)
	;;=IB EXEMPTION UPDATE FAILED^Failed while updating exemption record.^IB077^1^2^15
	;;^UTILITY(U,$J,350.8,78,0)
	;;=IB FAILED CURRENT STATUS^Failed while updating current exemption status.^IB078^1^2^16
	;;^UTILITY(U,$J,350.8,79,0)
	;;=IB INACTIVATE EXEM FAILED^Failed while inactivating old exemption status.^IB079^1^2^17
	;;^UTILITY(U,$J,350.8,80,0)
	;;=IB ADD EX. BAD USER^Failed to add exemption.  User not defined.^IB080^1^2^18
	;;^UTILITY(U,$J,350.8,81,0)
	;;=IB ADD PT. ENTRY LOCKED^Failed to add patient to Billing Patient file.  Entry locked.^IB081^1^2^19
	;;^UTILITY(U,$J,350.8,82,0)
	;;=IB FAILED IN AR^Failed in Accounts Receivable while processing decrease adjustment or refund.^IB082^1^2^20
	;;^UTILITY(U,$J,350.8,83,0)
	;;=IB NO CHAMPVA LIMIT TYPE^Integrated Billing cannot find an action type for the CHAMPVA limit.^IB083^1^1
	;;^UTILITY(U,$J,350.8,84,0)
	;;=IB NO CHAMPVA LIMIT^Integrated Billing cannot find the CHAMPVA limit for the given date.^IB084^1^1
	;;^UTILITY(U,$J,350.8,85,0)
	;;=IB085^IB085 - place holder^IB085^1^1
	;;^UTILITY(U,$J,350.8,86,0)
	;;=IB086^IB086 - place holder^IB086^1^1
	;;^UTILITY(U,$J,350.8,87,0)
	;;=IB087^IB087 - place holder^IB087^1^1
	;;^UTILITY(U,$J,350.8,88,0)
	;;=IB088^IB088 - place holder^IB088^1^1
	;;^UTILITY(U,$J,350.8,89,0)
	;;=IB089^IB089 - place holder^IB089^1^1
	;;^UTILITY(U,$J,350.8,90,0)
	;;=IB090^IB090 - place holder^IB090^1^1
	;;^UTILITY(U,$J,350.8,91,0)
	;;=IB091^IB091 - place holder^IB091^1^1
	;;^UTILITY(U,$J,350.8,92,0)
	;;=IB092^IB092 - place holder^IB092^1^1

IBINI02B
IBINI02B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.8,93,0)
	;;=IB093^IB093 - place holder^IB093^1^1
	;;^UTILITY(U,$J,350.8,94,0)
	;;=IB094^IB094 - place holder^IB094^1^1
	;;^UTILITY(U,$J,350.8,95,0)
	;;=IB095^IB095 - place holder^IB095^1^1
	;;^UTILITY(U,$J,350.8,96,0)
	;;=IB096^IB096 - place holder^IB096^1^1
	;;^UTILITY(U,$J,350.8,97,0)
	;;=IB097^IB097 - place holder^IB097^1^1
	;;^UTILITY(U,$J,350.8,98,0)
	;;=IB098^IB098 - place holder^IB098^1^1
	;;^UTILITY(U,$J,350.8,99,0)
	;;=IB099^IB099 - place holder^IB099^1^1
	;;^UTILITY(U,$J,350.8,100,0)
	;;=PRCA SITE^Site not defined.^PRCA001^2^1
	;;^UTILITY(U,$J,350.8,101,0)
	;;=PRCA SERVICE^Service not defined.^PRCA002^2^1
	;;^UTILITY(U,$J,350.8,102,0)
	;;=PRCA NUMBERING SERIES^No common numbering series available for service^PRCA003^2^1
	;;^UTILITY(U,$J,350.8,103,0)
	;;=PRCA IN USE^Another user entering a bill, try later.^PRCA004^2^1
	;;^UTILITY(U,$J,350.8,104,0)
	;;=PRCA NO AR^Accounts Receivable package does not appear to be installed.^PRCA005^2^1
	;;^UTILITY(U,$J,350.8,105,0)
	;;=PRCA BILL RECORD^Bill record number is missing.^PRCA006^2^1
	;;^UTILITY(U,$J,350.8,106,0)
	;;=PRCA BILL NUMBER^Bill number undefined.^PRCA007^2^1
	;;^UTILITY(U,$J,350.8,107,0)
	;;=PRCA STATUS MISSING^Status of bills is missing.^PRCA008^2^1
	;;^UTILITY(U,$J,350.8,108,0)
	;;=PRCA STATUS INCORRECT^Status of bills is not correct.^PRCA009^2^1
	;;^UTILITY(U,$J,350.8,109,0)
	;;=PRCA DATE MISSING^Billing date is missing.^PRCA010^2^1
	;;^UTILITY(U,$J,350.8,110,0)
	;;=PRCA DATE WRONG^Billing date is not in expected format.^PRCA011^2^1
	;;^UTILITY(U,$J,350.8,111,0)
	;;=PRCA USER MISSING^Approving official is missing.^PRCA012^2^1
	;;^UTILITY(U,$J,350.8,112,0)
	;;=PRCA USER UNDEFINED^Approving official is undefined.^PRCA013^2^1
	;;^UTILITY(U,$J,350.8,113,0)
	;;=PRCA USER MISSING IN 200^Approving official is not in the person file.^PRCA014^2^1
	;;^UTILITY(U,$J,350.8,114,0)
	;;=PRCA FY MISSING^Fiscal year data is missing^PRCA015^2^1
	;;^UTILITY(U,$J,350.8,115,0)
	;;=PRCA FY BLANK^Fiscal year is blank.^PRCA016^2^1
	;;^UTILITY(U,$J,350.8,116,0)
	;;=PRCA AMOUNT^Amount of bill is less than zero.^PRCA017^2^1
	;;^UTILITY(U,$J,350.8,117,0)
	;;=PRCA NO DEBTOR^Debtor data is missing.^PRCA018^2^1
	;;^UTILITY(U,$J,350.8,118,0)
	;;=PRCA DEBTOR PROBLEM^Debtor is not in expected format or is not defined.^PRCA019^2^1
	;;^UTILITY(U,$J,350.8,119,0)
	;;=PRCA TRANSACTION^No transaction passed.^PRCA020^2^1
	;;^UTILITY(U,$J,350.8,120,0)
	;;=PRCA TRANSACTION UNDEF^Transaction type does not exist.^PRCA021^2^1
	;;^UTILITY(U,$J,350.8,121,0)
	;;=PRCA TRANSACTION INVALID^Invalid transaction type^PRCA022^2^1
	;;^UTILITY(U,$J,350.8,122,0)
	;;=PRCA INVALID AMOUNT^Amount is in an invalid format.^PRCA023^2^1
	;;^UTILITY(U,$J,350.8,123,0)
	;;=PRCA DATE FORMAT^Date of adjustment is not in a valid format.^PRCA024^2^1
	;;^UTILITY(U,$J,350.8,124,0)
	;;=PRCA CAT. MISSING^Category of bill is missing^PRCA025^2^1
	;;^UTILITY(U,$J,350.8,125,0)
	;;=PRCA CAT. UNDEF.^Category of bill is undefined.^PRCA026^2^1
	;;^UTILITY(U,$J,350.8,126,0)
	;;=PRCA TYPE CARE^Type of care is missing^PRCA027^2^1
	;;^UTILITY(U,$J,350.8,127,0)
	;;=PRCA TYPE CARE WRONG^Type of care is not in expected format^PRCA028^2^1
	;;^UTILITY(U,$J,350.8,128,0)
	;;=PRCA AMOUNT MISSING^Amount of bill is missing^PRCA029^2^1
	;;^UTILITY(U,$J,350.8,129,0)
	;;=PRCA APR1^Bill Approver field is blank.^60^2^3
	;;^UTILITY(U,$J,350.8,130,0)
	;;=PRCA APR2^Bill Approver is not in User file.^61^2^3
	;;^UTILITY(U,$J,350.8,131,0)
	;;=PRCA APR3^Bill Approver is not in the Person file.^62^2^3

IBINI02C
IBINI02C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(350.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,350.8,132,0)
	;;=PRCA ARREC1^Billing Record # field is blank - Checking stopped!^30^2^3
	;;^UTILITY(U,$J,350.8,133,0)
	;;=PRCA ARREC2^No matching AR Record - Checking stopped!^31^2^3
	;;^UTILITY(U,$J,350.8,134,0)
	;;=PRCA BDT1^Date Bill Generated field is blank.^40^2^3
	;;^UTILITY(U,$J,350.8,135,0)
	;;=PRCA BDT2^Date bill generated is not in expected format.^41^2^3
	;;^UTILITY(U,$J,350.8,136,0)
	;;=PRCA BNO1^Bill Number field is blank.^20^2^3
	;;^UTILITY(U,$J,350.8,137,0)
	;;=PRCA BNO2^Bill Number pattern match failed.^21^2^3
	;;^UTILITY(U,$J,350.8,138,0)
	;;=PRCA CARE1^Type of Care field is blank.^90^2^3
	;;^UTILITY(U,$J,350.8,139,0)
	;;=PRCA CARE2^Type of Care is not in expected format.^91^2^3
	;;^UTILITY(U,$J,350.8,140,0)
	;;=PRCA CAT1^Rate Type field is blank.^80^2^3
	;;^UTILITY(U,$J,350.8,141,0)
	;;=PRCA CAT2^Rate Type is not in expected format.^81^2^3
	;;^UTILITY(U,$J,350.8,142,0)
	;;=PRCA CAT3^Payer for this Rate Type should be in file.^82^2^3
	;;^UTILITY(U,$J,350.8,143,0)
	;;=PRCA DEBTOR1^Payer field is blank.^70^2^3
	;;^UTILITY(U,$J,350.8,144,0)
	;;=PRCA DEBTOR2^Payer is not in expected format.^71^2^3
	;;^UTILITY(U,$J,350.8,145,0)
	;;=PRCA FY1^Fiscal Year and Amount fields are blank.^50^2^3
	;;^UTILITY(U,$J,350.8,146,0)
	;;=PRCA FY2^Amount field must be greater than 0.^51^2^3
	;;^UTILITY(U,$J,350.8,147,0)
	;;=PRCA FY3^Fiscal Year field is blank.^52^2^3
	;;^UTILITY(U,$J,350.8,148,0)
	;;=PRCA PAT1^Patient field is blank.^100^2^3
	;;^UTILITY(U,$J,350.8,149,0)
	;;=PRCA SER1^No entry for billing Service/Section.^10^2^3
	;;^UTILITY(U,$J,350.8,150,0)
	;;=PRCA SER2^Billing Service not in the Service/Section File.^11^2^3
	;;^UTILITY(U,$J,350.8,151,0)
	;;=PRCA SITE1^Station Number field is blank.^1^2^3
	;;^UTILITY(U,$J,350.8,152,0)
	;;=PRCA SITE2^Station Number is not in the Site Parameter File.^2^2^3
	;;^UTILITY(U,$J,350.8,153,0)
	;;=PRCA STAT1^Bill Status (Service) is blank.^110^2^3
	;;^UTILITY(U,$J,350.8,154,0)
	;;=PRCA STAT2^Bill Status (Service) is inappropriate.^111^2^3

IBINI02D
IBINI02D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(350.9,0,"GL")
	;;=^IBE(350.9,
	;;^DIC("B","IB SITE PARAMETERS",350.9)
	;;=
	;;^DIC(350.9,"%D",0)
	;;=^^12^12^2940214^^^^
	;;^DIC(350.9,"%D",1,0)
	;;=This file contains the data necessary to run the IB package, and to
	;;^DIC(350.9,"%D",2,0)
	;;=manage the IB background filer.  The menu IB SITE MANAGER MENU provides
	;;^DIC(350.9,"%D",3,0)
	;;=options that allow display and editing of
	;;^DIC(350.9,"%D",4,0)
	;;=data in this file, in addition to options to manage the
	;;^DIC(350.9,"%D",5,0)
	;;=IB background filer, for the site manager.  
	;;^DIC(350.9,"%D",6,0)
	;;= 
	;;^DIC(350.9,"%D",7,0)
	;;=The Billing Site Parameters are also found in this file.  
	;;^DIC(350.9,"%D",8,0)
	;;=The option to edit these parameters is on the Billing Supervisor menu.
	;;^DIC(350.9,"%D",9,0)
	;;= 
	;;^DIC(350.9,"%D",10,0)
	;;=This file should always be edited by use of the provided options.
	;;^DIC(350.9,"%D",11,0)
	;;= 
	;;^DIC(350.9,"%D",12,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(350.9,0)
	;;=FIELD^^4.06^106
	;;^DD(350.9,0,"DDA")
	;;=N
	;;^DD(350.9,0,"DT")
	;;=2940125
	;;^DD(350.9,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(4,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(350.9,0,"IX","B",350.9,.01)
	;;=
	;;^DD(350.9,0,"NM","IB SITE PARAMETERS")
	;;=
	;;^DD(350.9,.01,0)
	;;=NAME^RNJ1,0X^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X I $D(X) S DINUM=X
	;;^DD(350.9,.01,1,0)
	;;=^.1
	;;^DD(350.9,.01,1,1,0)
	;;=350.9^B
	;;^DD(350.9,.01,1,1,1)
	;;=S ^IBE(350.9,"B",$E(X,1,30),DA)=""
	;;^DD(350.9,.01,1,1,2)
	;;=K ^IBE(350.9,"B",$E(X,1,30),DA)
	;;^DD(350.9,.01,3)
	;;=Type a Number between 1 and 1, 0 Decimal Digits
	;;^DD(350.9,.01,21,0)
	;;=^^2^2^2910227^
	;;^DD(350.9,.01,21,1,0)
	;;=You may only have one site parameter entry.  Its internal number must be
	;;^DD(350.9,.01,21,2,0)
	;;=1 and its name must be the same.
	;;^DD(350.9,.01,"DEL",1,0)
	;;=I 1 W !,"Deleting site parameters not allowed!"
	;;^DD(350.9,.02,0)
	;;=FACILITY NAME^R*P4'^DIC(4,^0;2^S DIC("S")="I $S('$D(^(99)):0,+^(99)<1:0,1:1)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.9,.02,12)
	;;=Institution must have a facility number defined
	;;^DD(350.9,.02,12.1)
	;;=S DIC("S")="I $S('$D(^(99)):0,+^(99)<1:0,1:1)"
	;;^DD(350.9,.02,21,0)
	;;=^^3^3^2910227^
	;;^DD(350.9,.02,21,1,0)
	;;=This is the name of your facility from the institution file.  There must
	;;^DD(350.9,.02,21,2,0)
	;;=be a station number associated with this entry.  This value will be used
	;;^DD(350.9,.02,21,3,0)
	;;=by IFCAP in determining the bill number.
	;;^DD(350.9,.02,"DT")
	;;=2910221
	;;^DD(350.9,.03,0)
	;;=FILE IN BACKGROUND^S^1:YES;0:NO;^0;3^Q
	;;^DD(350.9,.03,21,0)
	;;=^^7^7^2910227^
	;;^DD(350.9,.03,21,1,0)
	;;=Set this field to 'YES' to cause the IB Background Filer to run as a 
	;;^DD(350.9,.03,21,2,0)
	;;=background job.  If it is set to 'NO' or left blank, filing will occur
	;;^DD(350.9,.03,21,3,0)
	;;=as applications pass data to Integrated Billing.  Sites may wish to
	;;^DD(350.9,.03,21,4,0)
	;;=experiment with running the filer in the foreground (answer 'NO') or
	;;^DD(350.9,.03,21,5,0)
	;;=filing in the background.  For Pharmacy Co-Pay, it is expected that
	;;^DD(350.9,.03,21,6,0)
	;;=some sites will experience significant delays in Outpatient Pharmacy
	;;^DD(350.9,.03,21,7,0)
	;;=label printing if filing is not done in the background.
	;;^DD(350.9,.03,"DT")
	;;=2910225
	;;^DD(350.9,.04,0)
	;;=FILER STARTED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X

IBINI02E
IBINI02E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,.04,21,0)
	;;=^^8^8^2910416^^^^
	;;^DD(350.9,.04,21,1,0)
	;;=This is the internal fileman date/time that the IBE filer was last started.
	;;^DD(350.9,.04,21,2,0)
	;;=This field should be blank if the FILER STOPPED field contains data.
	;;^DD(350.9,.04,21,3,0)
	;;= 
	;;^DD(350.9,.04,21,4,0)
	;;=If this field contains a date/time and the field FILE IN BACKGROUND is 
	;;^DD(350.9,.04,21,5,0)
	;;=answered 'YES' then it is assumed that an IBE Filer is running.  Use
	;;^DD(350.9,.04,21,6,0)
	;;=the option 'Start the Integrated Billing Background Filer' to start a new filer if
	;;^DD(350.9,.04,21,7,0)
	;;=needed.  This field is updated by the IBE Filer and should not be edited
	;;^DD(350.9,.04,21,8,0)
	;;=with FileMan.
	;;^DD(350.9,.04,"DT")
	;;=2910225
	;;^DD(350.9,.05,0)
	;;=FILER STOPPED^D^^0;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,.05,21,0)
	;;=^^5^5^2910227^^^
	;;^DD(350.9,.05,21,1,0)
	;;=This is the internal fileman date/time that the IBE filer was last stopped.
	;;^DD(350.9,.05,21,2,0)
	;;=This field should be blank if the FILER STARTED field contains data.
	;;^DD(350.9,.05,21,3,0)
	;;= 
	;;^DD(350.9,.05,21,4,0)
	;;=This field is updated by the IBE Filer.  It should not be edited with
	;;^DD(350.9,.05,21,5,0)
	;;=FileMan.
	;;^DD(350.9,.05,"DT")
	;;=2910225
	;;^DD(350.9,.06,0)
	;;=FILER LAST RAN^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,.06,3)
	;;=
	;;^DD(350.9,.06,21,0)
	;;=^^5^5^2910227^^
	;;^DD(350.9,.06,21,1,0)
	;;=This is the date/time that the IBE Filer last passed data to the
	;;^DD(350.9,.06,21,2,0)
	;;=Accounts Receivable module of IFCAP.
	;;^DD(350.9,.06,21,3,0)
	;;= 
	;;^DD(350.9,.06,21,4,0)
	;;=This field is updated by the IBE Filer and should not be edited with
	;;^DD(350.9,.06,21,5,0)
	;;=FileMan.
	;;^DD(350.9,.06,"DT")
	;;=2910225
	;;^DD(350.9,.07,0)
	;;=FILER UCI,VOL^F^^0;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(350.9,.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(350.9,.07,21,0)
	;;=^^4^4^2920415^^^
	;;^DD(350.9,.07,21,1,0)
	;;=This is the UCI and Volume set that you want the IBE Filer to run on.  Vax
	;;^DD(350.9,.07,21,2,0)
	;;=sites should leave this blank.  It is recommended that the filer
	;;^DD(350.9,.07,21,3,0)
	;;=run on the volume set that contains either the IB globals or the PRC
	;;^DD(350.9,.07,21,4,0)
	;;=globals.
	;;^DD(350.9,.07,"DT")
	;;=2910225
	;;^DD(350.9,.08,0)
	;;=FILER HANG TIME^NJ2,0^^0;8^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,.08,3)
	;;=Type a Number between 1 and 15, 0 Decimal Digits
	;;^DD(350.9,.08,21,0)
	;;=^^4^4^2920416^^^^
	;;^DD(350.9,.08,21,1,0)
	;;=This is the number of seconds that the filer will remain idle after
	;;^DD(350.9,.08,21,2,0)
	;;=finishing all transactions and before checking for more transactions
	;;^DD(350.9,.08,21,3,0)
	;;=to file.  The filer will shut itself down after 2000 hangs with no activity
	;;^DD(350.9,.08,21,4,0)
	;;=detected.  The default value for this field is 2 if left blank.
	;;^DD(350.9,.08,"DT")
	;;=2910227
	;;^DD(350.9,.09,0)
	;;=COPAY BACKGROUND ERROR GROUP^P3.8'^XMB(3.8,^0;9^Q
	;;^DD(350.9,.09,21,0)
	;;=^^3^3^2910227^
	;;^DD(350.9,.09,21,1,0)
	;;=This is the mail group that will receive mail bulletins from the IBE filer
	;;^DD(350.9,.09,21,2,0)
	;;=when an unsuccessful attempt to file is detected.  Remember to add users
	;;^DD(350.9,.09,21,3,0)
	;;=to it.
	;;^DD(350.9,.09,"DT")
	;;=2920220
	;;^DD(350.9,.1,0)
	;;=FILER QUEUED^S^1:YES;0:NO;^0;10^Q
	;;^DD(350.9,.1,21,0)
	;;=^^3^3^2910228^
	;;^DD(350.9,.1,21,1,0)
	;;=This field will be set to 'YES' when a file job is queued and set back to

IBINI02F
IBINI02F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,.1,21,2,0)
	;;='NO' when the queued job is started.  It will be used to prevent queueing
	;;^DD(350.9,.1,21,3,0)
	;;=two or more jobs before the first job starts.
	;;^DD(350.9,.1,"DT")
	;;=2910228
	;;^DD(350.9,.11,0)
	;;=CATEGORY C BILLING MAIL GROUP^P3.8'^XMB(3.8,^0;11^Q
	;;^DD(350.9,.11,21,0)
	;;=^^3^3^2920106^^
	;;^DD(350.9,.11,21,1,0)
	;;=Members of this mail group will receive bulletins when Means Test/Category
	;;^DD(350.9,.11,21,2,0)
	;;=C billing processing errors have been encountered, and when movements and
	;;^DD(350.9,.11,21,3,0)
	;;=Means Tests for Category C patients have been edited or deleted.
	;;^DD(350.9,.11,"DT")
	;;=2911209
	;;^DD(350.9,.12,0)
	;;=PER DIEM START DATE^D^^0;12^S %DT="EX" D ^%DT S X=Y K:3991231<X!(2901105>X) X
	;;^DD(350.9,.12,3)
	;;=This is the date this hospital began the $5 and $10 Per Diem Billing.  Enter a date no earlier than 11/5/90.
	;;^DD(350.9,.12,21,0)
	;;=^^10^10^2920205^^^^
	;;^DD(350.9,.12,21,1,0)
	;;=This is the date that this facility counseled category C patients that
	;;^DD(350.9,.12,21,2,0)
	;;=they would have to pay the new Per Diem charges and began the Per Diem
	;;^DD(350.9,.12,21,3,0)
	;;=billing.
	;;^DD(350.9,.12,21,4,0)
	;;= 
	;;^DD(350.9,.12,21,5,0)
	;;=This field represents the earliest date for which the Hospital ($10) or
	;;^DD(350.9,.12,21,6,0)
	;;=Nursing Home ($5) Per Diem charge may be billed to a Category C patient.
	;;^DD(350.9,.12,21,7,0)
	;;=This billing is mandated by Public Law 101-508, which was implemented
	;;^DD(350.9,.12,21,8,0)
	;;=on November 5, 1990.
	;;^DD(350.9,.12,21,9,0)
	;;= 
	;;^DD(350.9,.12,21,10,0)
	;;=Please note that the Per Diem billing will not occur if this field is null.
	;;^DD(350.9,.12,"DT")
	;;=2920205
	;;^DD(350.9,.13,0)
	;;=COPAY EXEMPTION MAIL GROUP^P3.8^XMB(3.8,^0;13^Q
	;;^DD(350.9,.13,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,.13,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,.13,21,1,0)
	;;=This mail group will be sent the copay exemption bulletins and error
	;;^DD(350.9,.13,21,2,0)
	;;=messages.
	;;^DD(350.9,.13,21,3,0)
	;;= 
	;;^DD(350.9,.13,21,4,0)
	;;=The value of this field is the number of fiscal years, prior to the
	;;^DD(350.9,.13,21,5,0)
	;;=current fiscal year, for which Category C Billing Clock data should be
	;;^DD(350.9,.13,21,6,0)
	;;=retained in the system when the option to purge billing clock records
	;;^DD(350.9,.13,21,7,0)
	;;=is run.  If that option is tasked to run automatically, then this
	;;^DD(350.9,.13,21,8,0)
	;;=parameter is directly accessed and used to determine which data shall
	;;^DD(350.9,.13,21,9,0)
	;;=be purged from the database (if the value of this field is null or less
	;;^DD(350.9,.13,21,10,0)
	;;=than one, one previous year's worth of data is retained).  If the option
	;;^DD(350.9,.13,21,11,0)
	;;=is manually invoked, the value of this field is defaulted when the user
	;;^DD(350.9,.13,21,12,0)
	;;=is prompted for the number of year's worth of data to retain.
	;;^DD(350.9,.13,"DT")
	;;=2930115
	;;^DD(350.9,.14,0)
	;;=USE ALERTS^*S^1:YES;0:NO;^0;14^Q
	;;^DD(350.9,.14,12)
	;;=Version 7 of Kernel must be installed inorder to turn this feature on.
	;;^DD(350.9,.14,12.1)
	;;=S DIC("S")="I 'Y!(+$G(^DD(200,0,""VR""))'<7)"
	;;^DD(350.9,.14,21,0)
	;;=^^7^7^2930204^^
	;;^DD(350.9,.14,21,1,0)
	;;=If a facility has installed Version 7 or higher of Kernel, then the
	;;^DD(350.9,.14,21,2,0)
	;;=site may decide whether to use Alerts or Bulletins for internal messages
	;;^DD(350.9,.14,21,3,0)
	;;=in Integrated Billing.  Initially this functionality will only be

IBINI02G
IBINI02G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,.14,21,4,0)
	;;=available for the Medication Copayment Exemption functionality.  If
	;;^DD(350.9,.14,21,5,0)
	;;=this is a desirable feature it may be expanded in the future.
	;;^DD(350.9,.14,21,6,0)
	;;= 
	;;^DD(350.9,.14,21,7,0)
	;;=If this field is unanswered, the default is No and IB will use bulletins.
	;;^DD(350.9,.14,23,0)
	;;=^^3^3^2930204^^
	;;^DD(350.9,.14,23,1,0)
	;;=The node ^DD(200,0,"VR") is checked for version number.  If the 
	;;^DD(350.9,.14,23,2,0)
	;;=value of this node is less than 7 then the user will not be able
	;;^DD(350.9,.14,23,3,0)
	;;=to turn this feature on.
	;;^DD(350.9,.14,"DT")
	;;=2930204
	;;^DD(350.9,.15,0)
	;;=SUPPRESS MT INS BULLETIN^S^1:YES;0:NO;^0;15^Q
	;;^DD(350.9,.15,21,0)
	;;=^^4^4^2930805^
	;;^DD(350.9,.15,21,1,0)
	;;=This parameter is used to control the bulletin that is posted when
	;;^DD(350.9,.15,21,2,0)
	;;=any Means Test charge which might be covered by the patient's health
	;;^DD(350.9,.15,21,3,0)
	;;=insurance is billed.  If the site wishes to suppress this bulletin,
	;;^DD(350.9,.15,21,4,0)
	;;=then this parameter should be answered 'Yes'.
	;;^DD(350.9,.15,"DT")
	;;=2930805
	;;^DD(350.9,1.01,0)
	;;=NAME OF CLAIM FORM SIGNER^F^^1;1^K:$L(X)>20!($L(X)<2) X
	;;^DD(350.9,1.01,3)
	;;=Enter the name of the person responsible for signing third party bills as it should appear on the bills.  Answer must be 2-20 characters in length
	;;^DD(350.9,1.01,21,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.01,21,1,0)
	;;=This is the name of the signer of third party bills and will be printed
	;;^DD(350.9,1.01,21,2,0)
	;;=on the claim form in the signature block.
	;;^DD(350.9,1.01,"DT")
	;;=2940119
	;;^DD(350.9,1.02,0)
	;;=TITLE OF CLAIM FORM SIGNER^F^^1;2^K:$L(X)>20!($L(X)<2) X
	;;^DD(350.9,1.02,3)
	;;=Enter the title of the person responsible for signing this bill as it should appear on the bill.  Answer must be 2-20 characters in length.
	;;^DD(350.9,1.02,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,1.02,21,1,0)
	;;=This is the title of the person signing the claim form as it will appear on
	;;^DD(350.9,1.02,21,2,0)
	;;=the bill.
	;;^DD(350.9,1.02,"DT")
	;;=2940119
	;;^DD(350.9,1.03,0)
	;;=*CAN REVIEWER AUTHORIZE?^S^1:YES;0:NO;^1;3^Q
	;;^DD(350.9,1.03,3)
	;;=Enter 1 or 'YES' if the person who reviews a billing record is also able to authorize that record.
	;;^DD(350.9,1.03,21,0)
	;;=^^9^9^2940209^^^^
	;;^DD(350.9,1.03,21,1,0)
	;;=Creating a third party bill is a 4 part process.  The bill is Entered,
	;;^DD(350.9,1.03,21,2,0)
	;;=Reviewed, Authorized, and Printed.  The bill is considered complete and
	;;^DD(350.9,1.03,21,3,0)
	;;=passed to Accounts Receivable immediately after it has been Authorized.
	;;^DD(350.9,1.03,21,4,0)
	;;=This parameter is used to determine if the same person who Reviewed the
	;;^DD(350.9,1.03,21,5,0)
	;;=bill can Authorize the bill.  If the paramater CAN INITIATOR REVIEW? 
	;;^DD(350.9,1.03,21,6,0)
	;;=and this parameter, CAN REVIEWER AUTHORIZE?, are both answered "YES"
	;;^DD(350.9,1.03,21,7,0)
	;;=then the same individual can perform all 4 parts of the billing process.
	;;^DD(350.9,1.03,21,8,0)
	;;=If either parameter is answered 'NO' then more than one person must
	;;^DD(350.9,1.03,21,9,0)
	;;=be involved in each bill.
	;;^DD(350.9,1.03,23,0)
	;;=^^1^1^2940209^^
	;;^DD(350.9,1.03,23,1,0)
	;;=This field should be deleted in the next release of IB after v2.0.
	;;^DD(350.9,1.03,"DT")
	;;=2920429
	;;^DD(350.9,1.04,0)
	;;=REMARKS TO APPEAR ON EACH FORM^F^^1;4^K:$L(X)>39!($L(X)<2) X
	;;^DD(350.9,1.04,3)
	;;=Enter any facility specific remarks which you would like to print on every UB bill.  Answer must be 2-39 characters in length.

IBINI02H
IBINI02H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.04,21,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.04,21,1,0)
	;;=Enter any remarks that need to appear on every UB claim form.  This remark
	;;^DD(350.9,1.04,21,2,0)
	;;=will print in the remarks section of every UB-82 and UB-92.
	;;^DD(350.9,1.04,"DT")
	;;=2940119
	;;^DD(350.9,1.05,0)
	;;=FEDERAL TAX NUMBER^RF^^1;5^K:$L(X)>10!($L(X)<10)!'(X?2N1"-"7N) X
	;;^DD(350.9,1.05,3)
	;;=Enter the federal tax number for your facility in NN-NNNNNNN format.  Answer must be 10 characters in length.
	;;^DD(350.9,1.05,21,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.05,21,1,0)
	;;=This is your facility federal tax number.  If unknown, this may be obtained
	;;^DD(350.9,1.05,21,2,0)
	;;=from your Fiscal Service.
	;;^DD(350.9,1.05,23,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.05,23,1,0)
	;;=This is not editable from the billing screens.  Printed in Form Locator
	;;^DD(350.9,1.05,23,2,0)
	;;=6 of the UB-82 and in Form Locator 5 of the UB-92.
	;;^DD(350.9,1.05,"DT")
	;;=2920204
	;;^DD(350.9,1.06,0)
	;;=BLUE CROSS/SHIELD PROVIDER #^RF^^1;6^K:$L(X)>13!($L(X)<3) X
	;;^DD(350.9,1.06,3)
	;;=Enter the 3-13 character BC/BS Provider Number which will be the default for all billing episodes at this facility.  Answer must be 3-13 characters in length.
	;;^DD(350.9,1.06,21,0)
	;;=^^2^2^2920204^
	;;^DD(350.9,1.06,21,1,0)
	;;=This is the BC/BS Provider Number which Blue Cross has assigned your 
	;;^DD(350.9,1.06,21,2,0)
	;;=facility.
	;;^DD(350.9,1.06,"DT")
	;;=2920204
	;;^DD(350.9,1.07,0)
	;;=BILL CANCELLATION MAILGROUP^P3.8'^XMB(3.8,^1;7^Q
	;;^DD(350.9,1.07,3)
	;;=Enter the mail group you want notified whenever a third party bill is cancelled.  If none is entered no mailman notification will be made.
	;;^DD(350.9,1.07,21,0)
	;;=^^3^3^2940209^^^^
	;;^DD(350.9,1.07,21,1,0)
	;;=This is the mail group that will recieve automatic notification every
	;;^DD(350.9,1.07,21,2,0)
	;;=time a third party bill is cancelled.  This must be answered for the
	;;^DD(350.9,1.07,21,3,0)
	;;=automatic notification to occur.
	;;^DD(350.9,1.07,"DT")
	;;=2940119
	;;^DD(350.9,1.08,0)
	;;=BILLING SUPERVISOR NAME^RP200'^VA(200,^1;8^Q
	;;^DD(350.9,1.08,3)
	;;=Enter the Person who is the billing supervisor.
	;;^DD(350.9,1.08,21,0)
	;;=^^1^1^2920204^
	;;^DD(350.9,1.08,21,1,0)
	;;=This is the pointer to the PERSON file for the Billing Supervisor.
	;;^DD(350.9,1.08,"DT")
	;;=2920204
	;;^DD(350.9,1.09,0)
	;;=BILL DISAPPROVED MAILGROUP^P3.8'^XMB(3.8,^1;9^Q
	;;^DD(350.9,1.09,3)
	;;=When a third party bill is disapproved the supervisor and initiator of the bill will be notified.  If you want additional people notified create a mailgroup and specify it here.
	;;^DD(350.9,1.09,21,0)
	;;=^^5^5^2940209^^^^
	;;^DD(350.9,1.09,21,1,0)
	;;=When a third party bill is disapproved the supervisor and initiator of the
	;;^DD(350.9,1.09,21,2,0)
	;;=bill will be notified.  If you want additional people to be notified that a
	;;^DD(350.9,1.09,21,3,0)
	;;=bill has been disapproved then you must create a mail group and add the
	;;^DD(350.9,1.09,21,4,0)
	;;=member and then specify the group here.  The members of this mail group
	;;^DD(350.9,1.09,21,5,0)
	;;=will then recieve the disapproval bulletin.
	;;^DD(350.9,1.09,"DT")
	;;=2940119
	;;^DD(350.9,1.1,0)
	;;=PRINT '001' FOR TOTAL CHARGES?^S^1:YES;0:NO;^1;10^Q
	;;^DD(350.9,1.1,3)
	;;=Enter 'YES' if you want the Revenue Code '001' printed on each third party bill with the total charges.
	;;^DD(350.9,1.1,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,1.1,21,1,0)
	;;=The revenue code '001', TOTAL CHARGES, may be printed on each bill with

IBINI02I
IBINI02I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.1,21,2,0)
	;;=the total charges if this parameter is set to 'YES'.
	;;^DD(350.9,1.1,"DT")
	;;=2920204
	;;^DD(350.9,1.11,0)
	;;=*CAN INITIATOR REVIEW^S^1:YES;0:NO;^1;11^Q
	;;^DD(350.9,1.11,3)
	;;=Enter 1 or 'YES' if the person who created/edited a billing record is also able to review that record.
	;;^DD(350.9,1.11,21,0)
	;;=^^9^9^2940209^^^^
	;;^DD(350.9,1.11,21,1,0)
	;;=Creating a third party bill is a 4 part process.  The bill is Entered,
	;;^DD(350.9,1.11,21,2,0)
	;;=Reviewed, Authorized, and Printed.  The bill is considered complete and
	;;^DD(350.9,1.11,21,3,0)
	;;=passed to Accounts Receivable immediately after it has been Authorized.
	;;^DD(350.9,1.11,21,4,0)
	;;=This parameter is used to determine if the same person who Reviewed the
	;;^DD(350.9,1.11,21,5,0)
	;;=bill can Authorize the bill.  If the paramater CAN REVIEWER AUTHORIZE?
	;;^DD(350.9,1.11,21,6,0)
	;;=and this parameter, CAN INITIATOR REVIEW?, are both answered "YES" then
	;;^DD(350.9,1.11,21,7,0)
	;;=the same individual can perform all 4 parts of the billing process.  If
	;;^DD(350.9,1.11,21,8,0)
	;;=either parameter is answered "NO" then more than one person must be
	;;^DD(350.9,1.11,21,9,0)
	;;=involved in each bill.
	;;^DD(350.9,1.11,23,0)
	;;=^^1^1^2940209^
	;;^DD(350.9,1.11,23,1,0)
	;;=This field should be deleted in the next release of IB after v2.0.
	;;^DD(350.9,1.11,"DT")
	;;=2920429
	;;^DD(350.9,1.14,0)
	;;=MAS SERVICE POINTER^RP49'^DIC(49,^1;14^Q
	;;^DD(350.9,1.14,3)
	;;=Enter the Service/Section which is your facilities MAS Service.
	;;^DD(350.9,1.14,21,0)
	;;=^^3^3^2940209^^
	;;^DD(350.9,1.14,21,1,0)
	;;=Accounts Receivable requires that every bill be associated with a
	;;^DD(350.9,1.14,21,2,0)
	;;=SERVICE/SECTION.  This is the Service that will be identified with bills
	;;^DD(350.9,1.14,21,3,0)
	;;=sent to Accounts Receivable from the Integrated Billing Module.
	;;^DD(350.9,1.15,0)
	;;=CAN CLERK ENTER NON-PTF CODES?^S^1:YES;0:NO;^1;15^Q
	;;^DD(350.9,1.15,3)
	;;=Enter '1' or 'YES' if diagnosis and procedure codes not found in the PTF record may be entered by the billing clerk into a billing record.  This affects inpatient bills only.
	;;^DD(350.9,1.15,21,0)
	;;=^^4^4^2920205^
	;;^DD(350.9,1.15,21,1,0)
	;;=Answering 'YES' to this parameter will also allow billing clerks to enter
	;;^DD(350.9,1.15,21,2,0)
	;;=CPT and HCPS codes into the billing record as well as ICD diagnosis and
	;;^DD(350.9,1.15,21,3,0)
	;;=Procedure codes that are not in the corresponding PTF record.  This
	;;^DD(350.9,1.15,21,4,0)
	;;=parameter only affects inpatient bills.
	;;^DD(350.9,1.16,0)
	;;=ASK HINQ IN MCCR^S^1:YES;0:NO;^1;16^Q
	;;^DD(350.9,1.16,3)
	;;=Enter '1' or 'YES' if you want the person entering a new bill to be able to request a HINQ inquiry for bills on patients with unverified eligibility.
	;;^DD(350.9,1.16,21,0)
	;;=^^3^3^2920205^
	;;^DD(350.9,1.16,21,1,0)
	;;=When creating a new bill on a Veteran with unverified eligibility the
	;;^DD(350.9,1.16,21,2,0)
	;;=user may be asked if they would like to put a HINQ request in the HINQ
	;;^DD(350.9,1.16,21,3,0)
	;;=SUSPENSE file if this parameter is answered 'YES'.
	;;^DD(350.9,1.17,0)
	;;=USE OP CPT SCREEN?^S^1:YES;0:NO;^1;17^Q
	;;^DD(350.9,1.17,3)
	;;=Enter '1' or 'YES' if you want the person entering an outpatient bill to easily transfer CPT procedures from scheduling into the bill.
	;;^DD(350.9,1.17,21,0)
	;;=^^8^8^2920602^^
	;;^DD(350.9,1.17,21,1,0)
	;;=CPT codes for outpatient visits are currently stored as Ambulatory
	;;^DD(350.9,1.17,21,2,0)
	;;=Procedures in the Scheduling Visits file.  The user editing a bill

IBINI02J
IBINI02J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.17,21,3,0)
	;;=will be displayed all CPT codes stored in the Scheduling Visits file
	;;^DD(350.9,1.17,21,4,0)
	;;=for the date range of the bill if the parameter is set to 'YES'.
	;;^DD(350.9,1.17,21,5,0)
	;;=This display screen will prompt the user if they would like to
	;;^DD(350.9,1.17,21,6,0)
	;;=easily import any or all of the CPT codes into the bill.  This will
	;;^DD(350.9,1.17,21,7,0)
	;;=include both Ambulatory Procedures and the Billable Ambulatory
	;;^DD(350.9,1.17,21,8,0)
	;;=Surgical Codes.
	;;^DD(350.9,1.18,0)
	;;=DEFAULT AMB SURG REV CODE^*P399.2'^DGCR(399.2,^1;18^S DIC("S")="I $P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.9,1.18,3)
	;;=Enter the Revenue Code that you will usually want for Ambulatory Surgery.
	;;^DD(350.9,1.18,21,0)
	;;=^^5^5^2920224^^^
	;;^DD(350.9,1.18,21,1,0)
	;;=When billing Billable Ambulatory Surgical Codes (BASC), this will be
	;;^DD(350.9,1.18,21,2,0)
	;;=the default revenue code stored in the bill.  If this is not appropriate
	;;^DD(350.9,1.18,21,3,0)
	;;=for any particular insurance company then the field AMBULATORY SURG. REV.
	;;^DD(350.9,1.18,21,4,0)
	;;=CODE in the Insurance Company file may be entered and it will be used
	;;^DD(350.9,1.18,21,5,0)
	;;=for that particular insurance company entry.
	;;^DD(350.9,1.19,0)
	;;=TRANSFER PROCEDURES TO SCHED?^S^1:YES;0:NO;^1;19^Q
	;;^DD(350.9,1.19,3)
	;;=Enter '1' or 'YES' if you would like the person entering a bill to be able to automatically store the CPT procedures in a bill in the Scheduling Visits file.
	;;^DD(350.9,1.19,21,0)
	;;=^^13^13^2920224^^^^
	;;^DD(350.9,1.19,21,1,0)
	;;=CPT procedures may be stored as Ambulatory Procedures in the Scheduling
	;;^DD(350.9,1.19,21,2,0)
	;;=Visits file (using the Add/Edit Stop Code option) and they may be stored
	;;^DD(350.9,1.19,21,3,0)
	;;=in the billing record as procedures to print on a bill.  There is now a two
	;;^DD(350.9,1.19,21,4,0)
	;;=way sharing of information between these two files.  If this parameter
	;;^DD(350.9,1.19,21,5,0)
	;;=is answered 'YES' then as CPT procedures are entered in a bill that
	;;^DD(350.9,1.19,21,6,0)
	;;=are also Ambulatory Procedures, then the user will be prompted as to whether
	;;^DD(350.9,1.19,21,7,0)
	;;=they should be transfered to the Scheduling Visits file also.  The
	;;^DD(350.9,1.19,21,8,0)
	;;=reverse of this is the parameter USE OP CPT SCREEN? which allows
	;;^DD(350.9,1.19,21,9,0)
	;;=importing of Ambulatory Procedures into a bill.
	;;^DD(350.9,1.19,21,10,0)
	;;= 
	;;^DD(350.9,1.19,21,11,0)
	;;=Only CPT procedures that are either Billable Ambulatory Surgical Codes
	;;^DD(350.9,1.19,21,12,0)
	;;=or either Nationally or Locally active Ambulatory Procedures may be
	;;^DD(350.9,1.19,21,13,0)
	;;=transfered.
	;;^DD(350.9,1.19,"DT")
	;;=2920205
	;;^DD(350.9,1.2,0)
	;;=HOLD MT BILLS W/INS^S^1:YES;0:NO;^1;20^Q
	;;^DD(350.9,1.2,3)
	;;=Enter 'Yes' if automated Means Test Charges should be held until claim disposition from an insurance Company.  If 'Yes' and a patient has insurance then the bills will automatically be placed on hold.
	;;^DD(350.9,1.2,21,0)
	;;=^^5^5^2920302^
	;;^DD(350.9,1.2,21,1,0)
	;;=If this parameter is answered 'YES' then the automated Category C
	;;^DD(350.9,1.2,21,2,0)
	;;=bills will automatically be placed on hold if the Patient has 
	;;^DD(350.9,1.2,21,3,0)
	;;=active Insurance.  The bills will need to
	;;^DD(350.9,1.2,21,4,0)
	;;=be released to Accounts Receivable after claim disposition from
	;;^DD(350.9,1.2,21,5,0)
	;;=the Insurance Company.

IBINI02K
IBINI02K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.2,"DT")
	;;=2920302
	;;^DD(350.9,1.21,0)
	;;=MEDICARE PROVIDER NUMBER^F^^1;21^K:$L(X)>8!($L(X)<1) X
	;;^DD(350.9,1.21,3)
	;;=Enter the number Medicare provided your facility.  Answer must be 1-8 characters in length.
	;;^DD(350.9,1.21,21,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.21,21,1,0)
	;;=This is the 1-8 character number provided by Medicare to the facility.
	;;^DD(350.9,1.21,21,2,0)
	;;= 
	;;^DD(350.9,1.21,22)
	;;=
	;;^DD(350.9,1.21,"DT")
	;;=2920306
	;;^DD(350.9,1.22,0)
	;;=MULTIPLE FORM TYPES^S^1:YES;0:NO;^1;22^Q
	;;^DD(350.9,1.22,3)
	;;=Enter 'Y'es if your facility uses the HCFA 1500 as well as one of the UB claim forms.
	;;^DD(350.9,1.22,21,0)
	;;=^^7^7^2940209^^^^
	;;^DD(350.9,1.22,21,1,0)
	;;=Set this field to 'YES' if the facility uses more than one health insurance
	;;^DD(350.9,1.22,21,2,0)
	;;=form type.  The UB-82 and the UB-92 are considered a single form because
	;;^DD(350.9,1.22,21,3,0)
	;;=one is replacing the other.  Therefore, if your site uses one of the UB
	;;^DD(350.9,1.22,21,4,0)
	;;=forms and the HCFA 1500 then this should be answered 'YES'.  If your site
	;;^DD(350.9,1.22,21,5,0)
	;;=is only using the UB forms (UB-82 and/or UB-92) then answer 'NO'.  If this
	;;^DD(350.9,1.22,21,6,0)
	;;=is set to 'NO' or left blank then only the UB type claim forms will be 
	;;^DD(350.9,1.22,21,7,0)
	;;=allowed.
	;;^DD(350.9,1.22,"DT")
	;;=2920414
	;;^DD(350.9,1.23,0)
	;;=CAN INITIATOR AUTHORIZE?^S^1:YES;0:NO;^1;23^Q
	;;^DD(350.9,1.23,21,0)
	;;=^^6^6^2920428^
	;;^DD(350.9,1.23,21,1,0)
	;;=Beginning with IB Version 1.5, the Review step in creating a bill has
	;;^DD(350.9,1.23,21,2,0)
	;;=been eliminated.  If this parameter is answered YES and the initiator
	;;^DD(350.9,1.23,21,3,0)
	;;=holds the IB AUTHORIZE key then the initiator
	;;^DD(350.9,1.23,21,4,0)
	;;=of the bill will be allowed to Authorize the Bill.  If this is answered
	;;^DD(350.9,1.23,21,5,0)
	;;=no then another user who holds the IB AUTHORIZE key will have to authorize
	;;^DD(350.9,1.23,21,6,0)
	;;=the bill.
	;;^DD(350.9,1.23,"DT")
	;;=2920428
	;;^DD(350.9,1.24,0)
	;;=BASC START DATE^D^^1;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,1.24,21,0)
	;;=^^6^6^2920616^^^^
	;;^DD(350.9,1.24,21,1,0)
	;;=This is the date that facilities can begin billing Ambulatory Surgical
	;;^DD(350.9,1.24,21,2,0)
	;;=Code Rates.  The earliest date is the date that IB Version 1.5 was installed
	;;^DD(350.9,1.24,21,3,0)
	;;=at the site or the date the regulation allowing BASC billing was approved.
	;;^DD(350.9,1.24,21,4,0)
	;;=This date will be stored automatically in the file.
	;;^DD(350.9,1.24,21,5,0)
	;;= 
	;;^DD(350.9,1.24,21,6,0)
	;;=If this field is null then BASC rates will not automatically calculate.
	;;^DD(350.9,1.24,"DT")
	;;=2920506
	;;^DD(350.9,1.25,0)
	;;=DEFAULT DIVISION^P40.8^DG(40.8,^1;25^Q
	;;^DD(350.9,1.25,3)
	;;=Enter the division you wish to show as a default division when entering procedures into a bill.
	;;^DD(350.9,1.25,21,0)
	;;=^^2^2^2920526^
	;;^DD(350.9,1.25,21,1,0)
	;;=This field will be used as the default answer to the division question when
	;;^DD(350.9,1.25,21,2,0)
	;;=entering Billable Ambulatory Surgeries into a bill.
	;;^DD(350.9,1.25,"DT")
	;;=2920526
	;;^DD(350.9,1.26,0)
	;;=DEFAULT FORM TYPE^*P353'^IBE(353,^1;26^S DIC("S")="I $P(^IBE(353,Y,0),U,1)[""UB""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.9,1.26,3)
	;;=Enter the form type that is most commonly used at your facility.
	;;^DD(350.9,1.26,12)
	;;=Only UB form types can be chosen.
	;;^DD(350.9,1.26,12.1)
	;;=S DIC("S")="I $P(^IBE(353,Y,0),U,1)[""UB"""

IBINI02L
IBINI02L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.26,21,0)
	;;=^^4^4^2940209^^^^
	;;^DD(350.9,1.26,21,1,0)
	;;=Enter the form type most commonly used at your facility.  Used for the
	;;^DD(350.9,1.26,21,2,0)
	;;=conversion between the UB-82 and the UB-92.  All new bills and
	;;^DD(350.9,1.26,21,3,0)
	;;=all follow-up bills will be printed on this form unless the primary
	;;^DD(350.9,1.26,21,4,0)
	;;=insurer has the other UB form defined as it's form type.
	;;^DD(350.9,1.26,23,0)
	;;=^^4^4^2940209^^^
	;;^DD(350.9,1.26,23,1,0)
	;;=Used specifically to help in the conversion from the UB-82 to the UB-92.
	;;^DD(350.9,1.26,23,2,0)
	;;=The UB-92 is replacing the UB-82, which will no longer be accepted after
	;;^DD(350.9,1.26,23,3,0)
	;;=a certain date, so that even follow-up bills that were originally printed
	;;^DD(350.9,1.26,23,4,0)
	;;=on the UB-82 must then be printed on the UB-92.
	;;^DD(350.9,1.26,"DT")
	;;=2931110
	;;^DD(350.9,1.27,0)
	;;=HCFA 1500 ADDRESS COLUMN^NJ2,0^^1;27^K:+X'=X!(X>80)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,1.27,3)
	;;=Type a Number between 1 and 80, 0 Decimal Digits.  Used only for the HCFA 1500 bill form.
	;;^DD(350.9,1.27,21,0)
	;;=^^2^2^2940209^^^^
	;;^DD(350.9,1.27,21,1,0)
	;;=This is the column that the mailing address will begin printing
	;;^DD(350.9,1.27,21,2,0)
	;;=on row 1 of the HCFA 1500 form.
	;;^DD(350.9,1.27,23,0)
	;;=^^5^5^2940209^^^^
	;;^DD(350.9,1.27,23,1,0)
	;;=Necessary because the latest version of the HCFA 1500 form has black
	;;^DD(350.9,1.27,23,2,0)
	;;=bars in the space where the mailing address is supposed to print.  With
	;;^DD(350.9,1.27,23,3,0)
	;;=this parameter the site can specify where the address prints, depending
	;;^DD(350.9,1.27,23,4,0)
	;;=on the type of envelope they use.  The first 5 rows are the only blank
	;;^DD(350.9,1.27,23,5,0)
	;;=space on the form available for the mailing address.
	;;^DD(350.9,1.27,"DT")
	;;=2940112
	;;^DD(350.9,1.28,0)
	;;=DEFAULT RX REFILL REV CODE^*P399.2'^DGCR(399.2,^1;28^S DIC("S")="I $P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.9,1.28,3)
	;;=Enter the revenue code that should be used for Rx Refills.
	;;^DD(350.9,1.28,12)
	;;=Only Activated Revenue Codes can be selected!
	;;^DD(350.9,1.28,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)"
	;;^DD(350.9,1.28,21,0)
	;;=^^4^4^2940121^^
	;;^DD(350.9,1.28,21,1,0)
	;;=If entered, this Revenue Code will be used for all prescription refill's
	;;^DD(350.9,1.28,21,2,0)
	;;=on a bill when the revenue codes and charges are automatically calculated.
	;;^DD(350.9,1.28,21,3,0)
	;;=This default will be overridden by the PRESCRIPTION REFILL REV. CODE
	;;^DD(350.9,1.28,21,4,0)
	;;=for an insurance company, if one exists.
	;;^DD(350.9,1.28,"DT")
	;;=2940105
	;;^DD(350.9,1.29,0)
	;;=DEFAULT RX REFILL DX^P80'^ICD9(^1;29^Q
	;;^DD(350.9,1.29,3)
	;;=Enter a Diagnosis that should be added to every RX Refill bill.
	;;^DD(350.9,1.29,21,0)
	;;=^^2^2^2940121^^^
	;;^DD(350.9,1.29,21,1,0)
	;;=If entered, this diagnosis will be automatically added to every bill that
	;;^DD(350.9,1.29,21,2,0)
	;;=has prescription refills.
	;;^DD(350.9,1.29,23,0)
	;;=^^1^1^2940121^^
	;;^DD(350.9,1.29,23,1,0)
	;;=Should probably be a genaric code like V68.1 ISSUE REPEAT PRESCRIPT.
	;;^DD(350.9,1.29,"DT")
	;;=2940105
	;;^DD(350.9,1.3,0)
	;;=DEFAULT RX REFILL CPT^P81'^ICPT(^1;30^Q
	;;^DD(350.9,1.3,3)
	;;=Enter a CPT procedure code that should be printed on every bill that has RX Refills.
	;;^DD(350.9,1.3,21,0)
	;;=^^2^2^2940121^^^
	;;^DD(350.9,1.3,21,1,0)
	;;=If entered, this procedure will automatically be added to every bill

IBINI02M
IBINI02M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,1.3,21,2,0)
	;;=that has a prescription refill.
	;;^DD(350.9,1.3,23,0)
	;;=^^1^1^2940121^^
	;;^DD(350.9,1.3,23,1,0)
	;;=Should probably be a genaric code like 99070 SPECIAL SUPPLIES.
	;;^DD(350.9,1.3,"DT")
	;;=2940105
	;;^DD(350.9,1.31,0)
	;;=UB-92 ADDRESS COLUMN^NJ2,0^^1;31^K:+X'=X!(X>80)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,1.31,3)
	;;=Type a Number between 1 and 80, 0 Decimal Digits.  Applies only to the UB-92 Claim Form.
	;;^DD(350.9,1.31,21,0)
	;;=^^7^7^2940121^^
	;;^DD(350.9,1.31,21,1,0)
	;;=This is the column on which the Mailing Address should begin printing on
	;;^DD(350.9,1.31,21,2,0)
	;;=the UB-92.  The purpose of this field to to help in placing the mailing
	;;^DD(350.9,1.31,21,3,0)
	;;=address in the area required so that is visible through an envelopes
	;;^DD(350.9,1.31,21,4,0)
	;;=window.  Please note that on the UB-92 the Mailing Address block (FL 38)
	;;^DD(350.9,1.31,21,5,0)
	;;=has a maximum width of 40 characters.  The number entered here will cause
	;;^DD(350.9,1.31,21,6,0)
	;;=the address be moved to the right and therefore the allowable width of 
	;;^DD(350.9,1.31,21,7,0)
	;;=the mailing address will be reduced.
	;;^DD(350.9,1.31,"DT")
	;;=2940112
	;;^DD(350.9,2.01,0)
	;;=AGENT CASHIER MAIL SYMBOL^F^^2;1^K:$L(X)>25!($L(X)<1) X
	;;^DD(350.9,2.01,3)
	;;=Enter the mail routing symbol for the agent cashier.  Answer must be 1-25 characters in length.
	;;^DD(350.9,2.01,21,0)
	;;=^^2^2^2920204^
	;;^DD(350.9,2.01,21,1,0)
	;;=This is the facility mail routing symbol for the Agent Cashier.  This
	;;^DD(350.9,2.01,21,2,0)
	;;=may begin with 04 (for Fiscal Service) at most facilities.
	;;^DD(350.9,2.01,"DT")
	;;=2920204
	;;^DD(350.9,2.02,0)
	;;=AGENT CASHIER STREET ADDRESS^F^^2;2^K:$L(X)>25!($L(X)<3) X
	;;^DD(350.9,2.02,3)
	;;=Enter the street address for the Agent Cashier.  Aswer must be 3-25 characters in length.
	;;^DD(350.9,2.02,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,2.02,21,1,0)
	;;=This is the street address that checks should be mailed to.  This will
	;;^DD(350.9,2.02,21,2,0)
	;;=appear on the on all claim forms as the billing address.
	;;^DD(350.9,2.02,"DT")
	;;=2920302
	;;^DD(350.9,2.03,0)
	;;=AGENT CASHIER CITY^F^^2;3^K:$L(X)>15!($L(X)<1) X
	;;^DD(350.9,2.03,3)
	;;=Enter the City for the Agent Cashier.  Answer must be 1-15 characters in length.
	;;^DD(350.9,2.03,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,2.03,21,1,0)
	;;=This is the City for the Agent Cashier.  This will be part of the address
	;;^DD(350.9,2.03,21,2,0)
	;;=that Checks are mailed to and will appear on the claim forms.
	;;^DD(350.9,2.03,"DT")
	;;=2920204
	;;^DD(350.9,2.04,0)
	;;=AGENT CASHIER STATE^P5'^DIC(5,^2;4^Q
	;;^DD(350.9,2.04,3)
	;;=Enter the state for the Agent Cashier.
	;;^DD(350.9,2.04,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,2.04,21,1,0)
	;;=This is the state for the Agent Cashier.  This will be the State part
	;;^DD(350.9,2.04,21,2,0)
	;;=of the address that checks are mailed to as it appears on the claim forms.
	;;^DD(350.9,2.04,"DT")
	;;=2920204
	;;^DD(350.9,2.05,0)
	;;=AGENT CASHIER ZIP CODE^F^^2;5^K:$L(X)>5!($L(X)<5)!'(X?5N) X
	;;^DD(350.9,2.05,3)
	;;=Answer must be 5 characters in length.
	;;^DD(350.9,2.05,21,0)
	;;=^^2^2^2940209^^^
	;;^DD(350.9,2.05,21,1,0)
	;;=Enter the zip code for the Agent Cashier.  This will be the zip code that
	;;^DD(350.9,2.05,21,2,0)
	;;=checks will be mailed to as it should appear on the claim forms.
	;;^DD(350.9,2.05,"DT")
	;;=2920204
	;;^DD(350.9,2.06,0)
	;;=AGENT CASHIER PHONE NUMBER^F^^2;6^K:$L(X)>25!($L(X)<4) X
	;;^DD(350.9,2.06,3)
	;;=Answer must be 4-25 characters in length.

IBINI02N
IBINI02N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,2.06,21,0)
	;;=^^1^1^2920204^
	;;^DD(350.9,2.06,21,1,0)
	;;=This is the phone number for the agent cashier.
	;;^DD(350.9,2.06,"DT")
	;;=2920204
	;;^DD(350.9,2.07,0)
	;;=CANCELLATION REMARK FOR FISCAL^F^^2;7^K:$L(X)>75!($L(X)<3)!'(X?1A.E) X
	;;^DD(350.9,2.07,3)
	;;=Enter the remark (reason for cancellation) which will be sent to Fiscal Service every time a bill is cancelled in MAS.  Answer must be 3-75 characters in length.
	;;^DD(350.9,2.07,21,0)
	;;=^^6^6^2940209^^
	;;^DD(350.9,2.07,21,1,0)
	;;=This is the remark which will be sent to Fiscal every time a bill is
	;;^DD(350.9,2.07,21,2,0)
	;;=cancelled in MAS.  This remark will explain to Fiscal why the IFCAP
	;;^DD(350.9,2.07,21,3,0)
	;;=billing record is being amended or cancelled.  The generic remark,
	;;^DD(350.9,2.07,21,4,0)
	;;="BILL CANCELLED IN MAS" will be transmitted to Fiscal Service if no
	;;^DD(350.9,2.07,21,5,0)
	;;=remark is entered in this field.  The site may enter any remark which
	;;^DD(350.9,2.07,21,6,0)
	;;=is meaningful to MAS and Fiscal.
	;;^DD(350.9,2.07,"DT")
	;;=2920204
	;;^DD(350.9,3.01,0)
	;;=*CONVERSION LAST BILL DATE^D^^3;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.01,21,0)
	;;=^^10^10^2940127^^^
	;;^DD(350.9,3.01,21,1,0)
	;;=This field will only be used for the Means Test conversion which is part
	;;^DD(350.9,3.01,21,2,0)
	;;=of the Integrated Billing v1.5 post init.  The field will be deleted
	;;^DD(350.9,3.01,21,3,0)
	;;=with the next version of Integrated Billing.
	;;^DD(350.9,3.01,21,4,0)
	;;= 
	;;^DD(350.9,3.01,21,5,0)
	;;=This field is updated during the IB v1.5 post init.  The value of this
	;;^DD(350.9,3.01,21,6,0)
	;;=field designates the last day through which Means Test charges will be
	;;^DD(350.9,3.01,21,7,0)
	;;=created during the conversion.
	;;^DD(350.9,3.01,21,8,0)
	;;= 
	;;^DD(350.9,3.01,21,9,0)
	;;=Please note that this field has been starred for deletion in IB v2.0.
	;;^DD(350.9,3.01,21,10,0)
	;;=This field will be deleted in the version of IB which follows v2.0.
	;;^DD(350.9,3.01,"DT")
	;;=2940127
	;;^DD(350.9,3.02,0)
	;;=*CONVERSION BREAK DATE^D^^3;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.02,3)
	;;=
	;;^DD(350.9,3.02,21,0)
	;;=^^17^17^2940209^^^^
	;;^DD(350.9,3.02,21,1,0)
	;;=This field will only be used for the Means Test conversion which is part
	;;^DD(350.9,3.02,21,2,0)
	;;=of the Integrated Billing v1.5 post init.  The field will be deleted
	;;^DD(350.9,3.02,21,3,0)
	;;=with the next version of Integrated Billing.
	;;^DD(350.9,3.02,21,4,0)
	;;= 
	;;^DD(350.9,3.02,21,5,0)
	;;=This field is updated during the IB v1.5 post init.  The value of this
	;;^DD(350.9,3.02,21,6,0)
	;;=field is used by the conversion when creating Hospital/NHCU per diem
	;;^DD(350.9,3.02,21,7,0)
	;;=charges.  If a patient owes the per diem on this date, and has
	;;^DD(350.9,3.02,21,8,0)
	;;=accumulated other charges prior to this date, a charge is filed for
	;;^DD(350.9,3.02,21,9,0)
	;;=all previous charges up through the date.  The intent of "splitting"
	;;^DD(350.9,3.02,21,10,0)
	;;=charges in this manner is to allow facilities to select a "final" date
	;;^DD(350.9,3.02,21,11,0)
	;;=through which Means Test billing will have been completed
	;;^DD(350.9,3.02,21,12,0)
	;;=manually so that charges created by the conversion may
	;;^DD(350.9,3.02,21,13,0)
	;;=easily be passed to the Accounts Receivable package (and thus billed
	;;^DD(350.9,3.02,21,14,0)
	;;=to the patient).
	;;^DD(350.9,3.02,21,15,0)
	;;= 
	;;^DD(350.9,3.02,21,16,0)
	;;=Please note that this field has been starred for deletion in IB v2.0.

IBINI02O
IBINI02O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,3.02,21,17,0)
	;;=This field will be deleted in the version of IB which follows v2.0.
	;;^DD(350.9,3.02,"DT")
	;;=2940127
	;;^DD(350.9,3.03,0)
	;;=COPAY EXEMPTION CONV. STARTED^NJ7,0^^3;3^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.03,3)
	;;=Type a Number between 1 and 9999999, 0 Decimal Digits
	;;^DD(350.9,3.03,21,0)
	;;=^^2^2^2930114^^
	;;^DD(350.9,3.03,21,1,0)
	;;=This is the number of times the Medication Copayment Exemption Conversion
	;;^DD(350.9,3.03,21,2,0)
	;;=has been started.  It is used to tell if the conversion has been restarted.
	;;^DD(350.9,3.03,23,0)
	;;=^^11^11^2930114^
	;;^DD(350.9,3.03,23,1,0)
	;;=The Medication Copayment Exemption Conversion can be stopped by
	;;^DD(350.9,3.03,23,2,0)
	;;=editing this field to a number different that its current value.
	;;^DD(350.9,3.03,23,3,0)
	;;=This is NOT a recommended procedure but should only be used in
	;;^DD(350.9,3.03,23,4,0)
	;;=exception cases.  It will cause an orderly shut down on the 
	;;^DD(350.9,3.03,23,5,0)
	;;=completion of a single patient.  After the conversion shuts down,
	;;^DD(350.9,3.03,23,6,0)
	;;=the value of this field should be returned to its original value.
	;;^DD(350.9,3.03,23,7,0)
	;;= 
	;;^DD(350.9,3.03,23,8,0)
	;;=If a second conversion is started this field will be updated causing
	;;^DD(350.9,3.03,23,9,0)
	;;=the first conversion to stop.  At that point it is possible that
	;;^DD(350.9,3.03,23,10,0)
	;;=a patient may be double processed, possible causing the double
	;;^DD(350.9,3.03,23,11,0)
	;;=decreasing of charges in AR for that patient.
	;;^DD(350.9,3.03,"DT")
	;;=2930114
	;;^DD(350.9,3.04,0)
	;;=COPAY EXEMPTION LAST DFN^NJ9,0^^3;4^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.04,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.04,9)
	;;=^
	;;^DD(350.9,3.04,21,0)
	;;=^^5^5^2930114^
	;;^DD(350.9,3.04,21,1,0)
	;;=This is the internal entry number of the last patient completely
	;;^DD(350.9,3.04,21,2,0)
	;;=converted by the Medication Copayment Exemption Conversion.  The
	;;^DD(350.9,3.04,21,3,0)
	;;=Conversion processes patients in order of internal entry number.
	;;^DD(350.9,3.04,21,4,0)
	;;=If the conversion stops for any reason it will start with the next
	;;^DD(350.9,3.04,21,5,0)
	;;=internal number after this one.
	;;^DD(350.9,3.04,"DT")
	;;=2921124
	;;^DD(350.9,3.05,0)
	;;=TOTAL PATIENTS CONVERTED^NJ9,0^^3;5^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.05,.1)
	;;=COPAY EXEMPTION TOTAL PATIENT CONVERTED
	;;^DD(350.9,3.05,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.05,9)
	;;=^
	;;^DD(350.9,3.05,21,0)
	;;=^^2^2^2930114^^
	;;^DD(350.9,3.05,21,1,0)
	;;=This is the total number of patients in the IB file that were set
	;;^DD(350.9,3.05,21,2,0)
	;;=up with an exemption status during the conversion.
	;;^DD(350.9,3.05,"DT")
	;;=2930107
	;;^DD(350.9,3.06,0)
	;;=TOTAL PATIENTS EXEMPT^NJ9,0^^3;6^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.06,.1)
	;;=COPAY EXEMPTION TOTAL PATIENTS CONVERTED EXEMPT
	;;^DD(350.9,3.06,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.06,9)
	;;=^
	;;^DD(350.9,3.06,21,0)
	;;=^^1^1^2930114^
	;;^DD(350.9,3.06,21,1,0)
	;;=This is the number of patients that were converted to an exempt status.
	;;^DD(350.9,3.06,"DT")
	;;=2930107
	;;^DD(350.9,3.07,0)
	;;=TOTAL PATIENT NON-EXEMPT^NJ9,0^^3;7^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.07,.1)
	;;=COPAY EXEMPTION TOTAL PATIENTS CONVERTED NON-EXEMPT

IBINI02P
IBINI02P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,3.07,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.07,9)
	;;=^
	;;^DD(350.9,3.07,21,0)
	;;=^^1^1^2930114^
	;;^DD(350.9,3.07,21,1,0)
	;;=This is the number of patients converted to a non-exempt status.
	;;^DD(350.9,3.07,"DT")
	;;=2930107
	;;^DD(350.9,3.08,0)
	;;=COUNT OF EXEMPT BILLS^NJ9,0^^3;8^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.08,.1)
	;;=COPAY EXEMPTION TOTAL COUNT OF CANCELED RX CHARGES
	;;^DD(350.9,3.08,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.08,9)
	;;=^
	;;^DD(350.9,3.08,21,0)
	;;=^^3^3^2930114^^^
	;;^DD(350.9,3.08,21,1,0)
	;;=This is the number of Medication Copayment IB Actions that were 
	;;^DD(350.9,3.08,21,2,0)
	;;=issued to patients who's status is exempt from the start of the 
	;;^DD(350.9,3.08,21,3,0)
	;;=exemption legislation to the running of the conversion.
	;;^DD(350.9,3.08,"DT")
	;;=2930114
	;;^DD(350.9,3.09,0)
	;;=AMOUNT OF CHARGES CHECKED^NJ9,0^^3;9^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.09,.1)
	;;=COPAY EXEMPTION CONVERSION TOTAL CHARGES CHECKED
	;;^DD(350.9,3.09,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.09,9)
	;;=^
	;;^DD(350.9,3.09,21,0)
	;;=^^3^3^2930114^^^
	;;^DD(350.9,3.09,21,1,0)
	;;=This is the total dollar amount of charges checked during the Medication
	;;^DD(350.9,3.09,21,2,0)
	;;=Copayment Exemption Conversion issued to patients from the start
	;;^DD(350.9,3.09,21,3,0)
	;;=date of the exemption legislation to the running of the conversion.
	;;^DD(350.9,3.09,"DT")
	;;=2930107
	;;^DD(350.9,3.1,0)
	;;=TOTAL EXEMPT DOLLAR AMOUNT^NJ9,0^^3;10^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.1,.1)
	;;=COPAY EXEMPTION CONVERSION TOTAL EXEMPTED CHARGES
	;;^DD(350.9,3.1,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.1,9)
	;;=^
	;;^DD(350.9,3.1,21,0)
	;;=^^3^3^2930114^
	;;^DD(350.9,3.1,21,1,0)
	;;=This is the total dollar amount of charges checked during the Medication
	;;^DD(350.9,3.1,21,2,0)
	;;=Copayment Exemption Conversion issued to Exempt patients from the start
	;;^DD(350.9,3.1,21,3,0)
	;;=date of the exemption legislation to the running of the conversion.
	;;^DD(350.9,3.1,"DT")
	;;=2930114
	;;^DD(350.9,3.11,0)
	;;=AMOUNT OF NON-EXEMPT CHARGES^NJ9,0^^3;11^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.11,.1)
	;;=COPAY EXEMPTION CONVERSION TOTAL NON-EXEMPT CHARGES
	;;^DD(350.9,3.11,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.11,9)
	;;=^
	;;^DD(350.9,3.11,21,0)
	;;=^^3^3^2930114^
	;;^DD(350.9,3.11,21,1,0)
	;;=This is the total dollar amount of charges checked during the Medication
	;;^DD(350.9,3.11,21,2,0)
	;;=Copayment Exemption Conversion issued to Non-Exempt patients from the start
	;;^DD(350.9,3.11,21,3,0)
	;;=date of the exemption legislation to the running of the conversion.
	;;^DD(350.9,3.11,"DT")
	;;=2930107
	;;^DD(350.9,3.12,0)
	;;=AMOUNT OF CANCELED CHARGES^NJ9,0^^3;12^K:+X'=X!(X>999999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.12,.1)
	;;=COPAY EXEMPTION CONVERSION TOTAL AMOUNT OF CANCELED CHARGES
	;;^DD(350.9,3.12,3)
	;;=Type a Number between 1 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.12,9)
	;;=^
	;;^DD(350.9,3.12,21,0)
	;;=^^3^3^2930114^
	;;^DD(350.9,3.12,21,1,0)
	;;=This is the total dollar amount of charges actually canceled during the Medication
	;;^DD(350.9,3.12,21,2,0)
	;;=Copayment Exemption Conversion issued to Exempt patients from the start
	;;^DD(350.9,3.12,21,3,0)
	;;=date of the exemption legislation to the running of the conversion.

IBINI02Q
IBINI02Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,3.12,"DT")
	;;=2930107
	;;^DD(350.9,3.13,0)
	;;=COPAY EXEMPTION START DATE^RD^^3;13^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.13,9)
	;;=^
	;;^DD(350.9,3.13,21,0)
	;;=^^2^2^2930114^^
	;;^DD(350.9,3.13,21,1,0)
	;;=This is the date/time that the Medication Copayment Exemption Conversion
	;;^DD(350.9,3.13,21,2,0)
	;;=started.  It should not be edited.
	;;^DD(350.9,3.13,"DT")
	;;=2930113
	;;^DD(350.9,3.14,0)
	;;=COPAY EXEMPTION STOP DATE^RDI^^3;14^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.14,3)
	;;=
	;;^DD(350.9,3.14,9)
	;;=^
	;;^DD(350.9,3.14,21,0)
	;;=^^4^4^2930114^^^^
	;;^DD(350.9,3.14,21,1,0)
	;;=This is the date/time that the conversion completed.  This field
	;;^DD(350.9,3.14,21,2,0)
	;;=should not be edited.  It will be stored by the conversion routine
	;;^DD(350.9,3.14,21,3,0)
	;;=when it is finished.  
	;;^DD(350.9,3.14,21,4,0)
	;;= 
	;;^DD(350.9,3.14,23,0)
	;;=^^9^9^2930114^^^^
	;;^DD(350.9,3.14,23,1,0)
	;;=If for some reason, it is necessary to restart the conversion after
	;;^DD(350.9,3.14,23,2,0)
	;;=this field has been populated you may delete the data in this field.
	;;^DD(350.9,3.14,23,3,0)
	;;=Sites should check with their supporting ISC prior to doing this.  The
	;;^DD(350.9,3.14,23,4,0)
	;;=field, LAST DFN UPDATED (3.04) in this file may also need to be edited.
	;;^DD(350.9,3.14,23,5,0)
	;;= 
	;;^DD(350.9,3.14,23,6,0)
	;;=Normally it is not recommended that the conversion be re-run after it
	;;^DD(350.9,3.14,23,7,0)
	;;=has run once.  Re-running the conversion will not cause updating of
	;;^DD(350.9,3.14,23,8,0)
	;;=patients with current exemptions, nor will it cause re-cancellation
	;;^DD(350.9,3.14,23,9,0)
	;;=of charges cancelled previously.
	;;^DD(350.9,3.14,"DT")
	;;=2930113
	;;^DD(350.9,3.15,0)
	;;=NON-EXEMPT PATIENTS CONVERTED^NJ9,0^^3;15^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.15,3)
	;;=Type a Number between 0 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.15,9)
	;;=^
	;;^DD(350.9,3.15,21,0)
	;;=^^2^2^2930114^
	;;^DD(350.9,3.15,21,1,0)
	;;=This is the count of patients in the IB Action file that had
	;;^DD(350.9,3.15,21,2,0)
	;;=an exemption status of Non-exempt set up during the conversion.
	;;^DD(350.9,3.15,"DT")
	;;=2930114
	;;^DD(350.9,3.16,0)
	;;=TOTAL BILLS DURING CONVERSION^NJ9,0^^3;16^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.16,3)
	;;=Type a Number between 0 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.16,9)
	;;=^
	;;^DD(350.9,3.16,21,0)
	;;=^^3^3^2930114^
	;;^DD(350.9,3.16,21,1,0)
	;;=This is the total number of IB ACTION entries issued from the effective
	;;^DD(350.9,3.16,21,2,0)
	;;=date of the Income Exemption Legislation until the running of the
	;;^DD(350.9,3.16,21,3,0)
	;;=conversion that were issued to either exempt or non-exempt patients.
	;;^DD(350.9,3.16,"DT")
	;;=2930114
	;;^DD(350.9,3.17,0)
	;;=COUNT OF BILLS CANCELED^NJ9,0^^3;17^K:+X'=X!(X>999999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,3.17,3)
	;;=Type a Number between 0 and 999999999, 0 Decimal Digits
	;;^DD(350.9,3.17,9)
	;;=^
	;;^DD(350.9,3.17,21,0)
	;;=^^2^2^2930114^^
	;;^DD(350.9,3.17,21,1,0)
	;;=This is the count of bills actually sent to be canceled in the IB
	;;^DD(350.9,3.17,21,2,0)
	;;=ACTION file during the conversion.
	;;^DD(350.9,3.17,"DT")
	;;=2930114
	;;^DD(350.9,3.18,0)
	;;=INSURANCE CONVERSION COMPLETE^RDI^^3;18^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.18,21,0)
	;;=^^5^5^2931108^
	;;^DD(350.9,3.18,21,1,0)
	;;=This is the date the insurance conversion completes.  It is not editable.
	;;^DD(350.9,3.18,21,2,0)
	;;=The data should not be deleted.

IBINI02R
IBINI02R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,3.18,21,3,0)
	;;= 
	;;^DD(350.9,3.18,21,4,0)
	;;=The v2.0 insurance conversion will automatically set this field to the
	;;^DD(350.9,3.18,21,5,0)
	;;=date it completes.
	;;^DD(350.9,3.18,"DT")
	;;=2931108
	;;^DD(350.9,3.19,0)
	;;=BILL/CLAIMS CONV. COMPLETE^RDI^^3;19^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.19,21,0)
	;;=^^3^3^2931108^
	;;^DD(350.9,3.19,21,1,0)
	;;=This is the date that the v2 post-init conversion of the bill/claims file
	;;^DD(350.9,3.19,21,2,0)
	;;=completed.  It will automatically be updated by the conversion routine
	;;^DD(350.9,3.19,21,3,0)
	;;=when it completes.
	;;^DD(350.9,3.19,"DT")
	;;=2931108
	;;^DD(350.9,3.2,0)
	;;=CURRENT INPATIENTS LOADED^RDI^^3;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,3.2,21,0)
	;;=^^3^3^2931108^
	;;^DD(350.9,3.2,21,1,0)
	;;=This is the date that the current inpatients were loaded into claims
	;;^DD(350.9,3.2,21,2,0)
	;;=tracking as part of the IB v2 post init.  This date will automatically
	;;^DD(350.9,3.2,21,3,0)
	;;=be entered upon completion.
	;;^DD(350.9,3.2,"DT")
	;;=2931108
	;;^DD(350.9,4.01,0)
	;;=INSURANCE EXTENDED HELP^S^0:OFF;1:ON;^4;1^Q
	;;^DD(350.9,4.01,21,0)
	;;=^^7^7^2940131^^
	;;^DD(350.9,4.01,21,1,0)
	;;=Should the extended help display be always on in the Insurance Management
	;;^DD(350.9,4.01,21,2,0)
	;;=options.  Answer 'ON' if you always want it to display automatically
	;;^DD(350.9,4.01,21,3,0)
	;;=or answer 'OFF' if you do not want to see it.
	;;^DD(350.9,4.01,21,4,0)
	;;= 
	;;^DD(350.9,4.01,21,5,0)
	;;=It is recommended that the extended help be turned on initially
	;;^DD(350.9,4.01,21,6,0)
	;;=after v2 is installed.  As users become more familiar with the
	;;^DD(350.9,4.01,21,7,0)
	;;=new functionality the parameter can be turned off.
	;;^DD(350.9,4.01,"DT")
	;;=2930813
	;;^DD(350.9,4.02,0)
	;;=PATIENT OR INSURANCE COMPANY^V^^4;2^Q
	;;^DD(350.9,4.02,21,0)
	;;=^^1^1^2940209^
	;;^DD(350.9,4.02,21,1,0)
	;;=Enter the patient or insurance company you wish to access.
	;;^DD(350.9,4.02,23,0)
	;;=^^3^3^2940209^
	;;^DD(350.9,4.02,23,1,0)
	;;=This field does not contain data.  It is used as a file definition by
	;;^DD(350.9,4.02,23,2,0)
	;;=the reader to do a variable pointer look up that is not tied to any
	;;^DD(350.9,4.02,23,3,0)
	;;=data base element.
	;;^DD(350.9,4.02,"DT")
	;;=2930303
	;;^DD(350.9,4.02,"V",0)
	;;=^.12P^2^2
	;;^DD(350.9,4.02,"V",1,0)
	;;=2^Patient^1^2^n^n
	;;^DD(350.9,4.02,"V",2,0)
	;;=36^Insurance company^10^36^n^n
	;;^DD(350.9,4.03,0)
	;;=HEALTH INSURANCE POLICY^F^^4;3^K:$L(X)>20!($L(X)<1) X
	;;^DD(350.9,4.03,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(350.9,4.03,21,0)
	;;=^^1^1^2940209^
	;;^DD(350.9,4.03,21,1,0)
	;;=Enter the name of the patient's health insurance policy.
	;;^DD(350.9,4.03,23,0)
	;;=^^3^3^2940209^
	;;^DD(350.9,4.03,23,1,0)
	;;=This field does not contain data.  It is used by the reader to
	;;^DD(350.9,4.03,23,2,0)
	;;=provide a definition to do a lookup that is not tied to a
	;;^DD(350.9,4.03,23,3,0)
	;;=particular data base element.
	;;^DD(350.9,4.03,"DT")
	;;=2930829
	;;^DD(350.9,4.04,0)
	;;=NEW INSURANCE MAIL GROUP^P3.8'^XMB(3.8,^4;4^Q
	;;^DD(350.9,4.04,21,0)
	;;=^^3^3^2940209^^
	;;^DD(350.9,4.04,21,1,0)
	;;=Enter the mail group that should receive a bulletin every time an
	;;^DD(350.9,4.04,21,2,0)
	;;=insurance policy is added for a patient that has potential billings
	;;^DD(350.9,4.04,21,3,0)
	;;=associated with it.
	;;^DD(350.9,4.04,"DT")
	;;=2930829
	;;^DD(350.9,4.05,0)
	;;=CENTRAL COLLECTION MAIL GROUP^F^^4;5^K:$L(X)>45!($L(X)<3) X

IBINI02S
IBINI02S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,4.05,3)
	;;=Answer must be 3-45 characters in length.
	;;^DD(350.9,4.05,21,0)
	;;=^^10^10^2930903^
	;;^DD(350.9,4.05,21,1,0)
	;;=The MCCR Program Office has recently requested that the results from
	;;^DD(350.9,4.05,21,2,0)
	;;=the report Rank Insurance Carriers By Amount Billed be transmitted
	;;^DD(350.9,4.05,21,3,0)
	;;=centrally for nation-wide compilation.  This field contains the
	;;^DD(350.9,4.05,21,4,0)
	;;=mail group on Forum to which these reports will be sent.
	;;^DD(350.9,4.05,21,5,0)
	;;= 
	;;^DD(350.9,4.05,21,6,0)
	;;=The field is being exported with the value G.MCCR DATA@FORUM.VA.GOV.
	;;^DD(350.9,4.05,21,7,0)
	;;=It is anticipated that future reports may be sent to this group for
	;;^DD(350.9,4.05,21,8,0)
	;;=compilation.  If it becomes necessary to change the mail group name
	;;^DD(350.9,4.05,21,9,0)
	;;=or domain, this field may be edited using Fileman.  Do not edit this
	;;^DD(350.9,4.05,21,10,0)
	;;=field without receiving instructions from your supporting ISC.
	;;^DD(350.9,4.05,"DT")
	;;=2930903
	;;^DD(350.9,4.06,0)
	;;=INSURANCE COMPANY^*P36'^DIC(36,^4;6^S DIC("S")="I '$P(^(0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(350.9,4.06,12)
	;;=Only Active Companies may be selected!
	;;^DD(350.9,4.06,12.1)
	;;=S DIC("S")="I '$P(^(0),U,5)"
	;;^DD(350.9,4.06,"DT")
	;;=2940119
	;;^DD(350.9,5.01,0)
	;;=ADMISSION SHEET HEADER LINE 1^F^^5;1^K:$L(X)>50!($L(X)<3) X
	;;^DD(350.9,5.01,3)
	;;=Answer must be 3-50 characters in length.
	;;^DD(350.9,5.01,21,0)
	;;=^^3^3^2930826^
	;;^DD(350.9,5.01,21,1,0)
	;;=Enter the text that your facility would like to have printed as the
	;;^DD(350.9,5.01,21,2,0)
	;;=first line of the header on the admission sheet.  This is generally
	;;^DD(350.9,5.01,21,3,0)
	;;=the name of your medical center.
	;;^DD(350.9,5.01,"DT")
	;;=2930826
	;;^DD(350.9,5.02,0)
	;;=ADMISSION SHEET HEADER LINE 2^F^^5;2^K:$L(X)>50!($L(X)<3) X
	;;^DD(350.9,5.02,3)
	;;=Answer must be 3-50 characters in length.
	;;^DD(350.9,5.02,21,0)
	;;=^^3^3^2930826^
	;;^DD(350.9,5.02,21,1,0)
	;;=Enter the text that your facility would like to have printed as the
	;;^DD(350.9,5.02,21,2,0)
	;;=second line of the header on the admission sheet.  This is generally
	;;^DD(350.9,5.02,21,3,0)
	;;=the street address of your medical center.
	;;^DD(350.9,5.02,"DT")
	;;=2930826
	;;^DD(350.9,5.03,0)
	;;=ADMISSION SHEET HEADER LINE 3^F^^5;3^K:$L(X)>50!($L(X)<3) X
	;;^DD(350.9,5.03,3)
	;;=Answer must be 3-50 characters in length.
	;;^DD(350.9,5.03,21,0)
	;;=^^3^3^2930826^
	;;^DD(350.9,5.03,21,1,0)
	;;=Enter the text that your facility would like to have printed as the
	;;^DD(350.9,5.03,21,2,0)
	;;=third line of the header on the admission sheet.  This is generally
	;;^DD(350.9,5.03,21,3,0)
	;;=the city, state and zip code of your medical center.
	;;^DD(350.9,5.03,"DT")
	;;=2930826
	;;^DD(350.9,6.01,0)
	;;=CLAIMS TRACKING START DATE^D^^6;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,6.01,21,0)
	;;=^^9^9^2940209^^^
	;;^DD(350.9,6.01,21,1,0)
	;;=If you choose to run the claims tracking module and populate the files
	;;^DD(350.9,6.01,21,2,0)
	;;=with past episodes of care, this is the date that the routine will use
	;;^DD(350.9,6.01,21,3,0)
	;;=to start.
	;;^DD(350.9,6.01,21,4,0)
	;;= 
	;;^DD(350.9,6.01,21,5,0)
	;;=This is the main parameter that contro what past care can be entered
	;;^DD(350.9,6.01,21,6,0)
	;;=into claims tracking.  At no time does the software automatically add
	;;^DD(350.9,6.01,21,7,0)
	;;=entires older than this date.  The one exception is that this parameter

IBINI02T
IBINI02T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,6.01,21,8,0)
	;;=does not affect the entries that may be added to claims tracking using
	;;^DD(350.9,6.01,21,9,0)
	;;=the add tracking entry action on the main claims tracking screen.
	;;^DD(350.9,6.01,"DT")
	;;=2930804
	;;^DD(350.9,6.02,0)
	;;=INPATIENT CLAIMS TRACKING^S^0:OFF;1:INSURED AND UR ONLY;2:ALL PATIENTS;^6;2^Q
	;;^DD(350.9,6.02,21,0)
	;;=^^13^13^2940209^^^^
	;;^DD(350.9,6.02,21,1,0)
	;;=This field determines what inpatients will automatically be added to
	;;^DD(350.9,6.02,21,2,0)
	;;=the claims tracking module.  If this parameter is set to "OFF" then
	;;^DD(350.9,6.02,21,3,0)
	;;=no new patients will be added.  If this is set to "INSURED AND UR ONLY"
	;;^DD(350.9,6.02,21,4,0)
	;;=then only the insured patients and random sample patients will be added.
	;;^DD(350.9,6.02,21,5,0)
	;;=If this is set to "ALL PATIENTS" then a record of all admissions will
	;;^DD(350.9,6.02,21,6,0)
	;;=be created.
	;;^DD(350.9,6.02,21,7,0)
	;;= 
	;;^DD(350.9,6.02,21,8,0)
	;;=If a patient is not insured then each record will be so annotated 
	;;^DD(350.9,6.02,21,9,0)
	;;=automatically on creation and no follow-up will be required.  The
	;;^DD(350.9,6.02,21,10,0)
	;;=advantage of tracking all patients is that you can determine the
	;;^DD(350.9,6.02,21,11,0)
	;;=percentage of billable cases and make necessary adjustments if the
	;;^DD(350.9,6.02,21,12,0)
	;;=patients are later found to have insurance.  The disadvantage is that
	;;^DD(350.9,6.02,21,13,0)
	;;=additional capacity is used.
	;;^DD(350.9,6.02,"DT")
	;;=2930804
	;;^DD(350.9,6.03,0)
	;;=OUTPATIENT CLAIMS TRACKING^S^0:OFF;1:INSURED ONLY;2:ALL PATIENTS;^6;3^Q
	;;^DD(350.9,6.03,3)
	;;=
	;;^DD(350.9,6.03,21,0)
	;;=^^8^8^2940130^^
	;;^DD(350.9,6.03,21,1,0)
	;;=This field determines if outpatient visit dates will automatically be
	;;^DD(350.9,6.03,21,2,0)
	;;=entered into the claims tracking module.  If this is answered "OFF"
	;;^DD(350.9,6.03,21,3,0)
	;;=then no entries will be entered.  If this is answered "INSURED ONLY"
	;;^DD(350.9,6.03,21,4,0)
	;;=then only outpatient visits for insured patients will be added.
	;;^DD(350.9,6.03,21,5,0)
	;;=If this parameter is set to ALL PATIENTS then the outpatient visits
	;;^DD(350.9,6.03,21,6,0)
	;;=for all patients will be added to claims tracking.
	;;^DD(350.9,6.03,21,7,0)
	;;= 
	;;^DD(350.9,6.03,21,8,0)
	;;=Initially we recommend this parameter be set to INSURED ONLY.
	;;^DD(350.9,6.03,"DT")
	;;=2930804
	;;^DD(350.9,6.04,0)
	;;=PRESCRIPTION CLAIMS TRACKING^S^0:OFF;1:INSURED ONLY;2:ALL PATIENTS;^6;4^Q
	;;^DD(350.9,6.04,3)
	;;=
	;;^DD(350.9,6.04,21,0)
	;;=^^11^11^2940130^^
	;;^DD(350.9,6.04,21,1,0)
	;;=This field determines if prescriptions will automatically be entered
	;;^DD(350.9,6.04,21,2,0)
	;;=into the claims tracking module.  If this is answered "OFF" then
	;;^DD(350.9,6.04,21,3,0)
	;;=no prescriptions or refills will be entered.  If this is answered 
	;;^DD(350.9,6.04,21,4,0)
	;;="INSURED ONLY", then only prescriptions and refills will be added if
	;;^DD(350.9,6.04,21,5,0)
	;;=the patient is insured.  If all is choose then an entry for all
	;;^DD(350.9,6.04,21,6,0)
	;;=prescriptions will be entered.
	;;^DD(350.9,6.04,21,7,0)
	;;= 
	;;^DD(350.9,6.04,21,8,0)
	;;=If a prescription or refill does not appear to be billable, that is it
	;;^DD(350.9,6.04,21,9,0)
	;;=may be for SC care, or there is a visit date associated with that
	;;^DD(350.9,6.04,21,10,0)
	;;=prescription or refill, this will be so noted in the reason not billable.
	;;^DD(350.9,6.04,21,11,0)
	;;= 
	;;^DD(350.9,6.04,"DT")
	;;=2930804

IBINI02U
IBINI02U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,6.05,0)
	;;=PROSTHETICS CLAIMS TRACKING^S^0:OFF;1:INSURED ONLY;2:ALL PATIENTS;^6;5^Q
	;;^DD(350.9,6.05,3)
	;;=
	;;^DD(350.9,6.05,21,0)
	;;=^^6^6^2940130^^
	;;^DD(350.9,6.05,21,1,0)
	;;=This field will be used to determine if prosthetics should be tracked in
	;;^DD(350.9,6.05,21,2,0)
	;;=the claims tracking module.  If this parameter is set to OFF, then no
	;;^DD(350.9,6.05,21,3,0)
	;;=prosthetic entries will be added to claims tracking.  If this is set to
	;;^DD(350.9,6.05,21,4,0)
	;;=INSURED ONLY then only parameter entries for insured patients will be
	;;^DD(350.9,6.05,21,5,0)
	;;=added to claims tracking.  If this is set to ALL PATIENTS then an
	;;^DD(350.9,6.05,21,6,0)
	;;=entry will be created for all patients prosthetic items.
	;;^DD(350.9,6.05,"DT")
	;;=2930804
	;;^DD(350.9,6.06,0)
	;;=USE ADMISSION SHEETS^S^0:NO;1:YES;^6;6^Q
	;;^DD(350.9,6.06,21,0)
	;;=^^4^4^2940130^^^
	;;^DD(350.9,6.06,21,1,0)
	;;=Enter whether your facility is using Admission Sheets as part of the
	;;^DD(350.9,6.06,21,2,0)
	;;=MCCR/UR functionality.  If this parameter is answered "YES" then
	;;^DD(350.9,6.06,21,3,0)
	;;=users will be asked for the device to print admissions sheets to.
	;;^DD(350.9,6.06,21,4,0)
	;;=The default device will be from the BILL FORM TYPE file.
	;;^DD(350.9,6.06,"DT")
	;;=2930804
	;;^DD(350.9,6.07,0)
	;;=RANDOM SAMPLE DATE^D^^6;7^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,6.07,21,0)
	;;=^^3^3^2930804^
	;;^DD(350.9,6.07,21,1,0)
	;;=This is the date that random sampling was last re-generated.  The
	;;^DD(350.9,6.07,21,2,0)
	;;=IB background job will re-generate a new date, new random numbers,
	;;^DD(350.9,6.07,21,3,0)
	;;=and zero the counters every Sunday night.
	;;^DD(350.9,6.07,"DT")
	;;=2930804
	;;^DD(350.9,6.08,0)
	;;=MEDICINE SAMPLE SIZE^RNJ2,0^^6;8^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.08,3)
	;;=Type a Number between 0 and 99, 0 Decimal Digits
	;;^DD(350.9,6.08,21,0)
	;;=^^3^3^2930805^^
	;;^DD(350.9,6.08,21,1,0)
	;;=This is the number of required Utilization Reviews that you wish to have
	;;^DD(350.9,6.08,21,2,0)
	;;=done each week for Medicine admissions.  The minimum recommended by
	;;^DD(350.9,6.08,21,3,0)
	;;=the QA office is one per week.
	;;^DD(350.9,6.08,"DT")
	;;=2940113
	;;^DD(350.9,6.09,0)
	;;=MEDICINE WEEKLY ADMISSIONS^NJ2,0^^6;9^K:+X'=X!(X>99)!(X<5)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.09,3)
	;;=Type a Number between 5 and 99, 0 Decimal Digits
	;;^DD(350.9,6.09,21,0)
	;;=^^3^3^2930805^^^
	;;^DD(350.9,6.09,21,1,0)
	;;=This is the minimum number of admissions for Medicine that your Medical
	;;^DD(350.9,6.09,21,2,0)
	;;=Center generally averages.  This is used along with the Medicine
	;;^DD(350.9,6.09,21,3,0)
	;;=sample size to compute a random number.
	;;^DD(350.9,6.09,"DT")
	;;=2930804
	;;^DD(350.9,6.1,0)
	;;=MEDICINE RANDOM NUMBER^NJ2,0^^6;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.1,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.1,21,0)
	;;=^^4^4^2940209^^^
	;;^DD(350.9,6.1,21,1,0)
	;;=This is an internally computed random number.  It is re-computed each
	;;^DD(350.9,6.1,21,2,0)
	;;=week.  When the count of the Medicine admissions reaches a multiple of
	;;^DD(350.9,6.1,21,3,0)
	;;=this number it is considered the random selection.  The total number
	;;^DD(350.9,6.1,21,4,0)
	;;=of random selections for UR will not exceed the Medicine sample size.
	;;^DD(350.9,6.1,"DT")
	;;=2930804
	;;^DD(350.9,6.11,0)
	;;=MEDICINE ENTRIES MET^NJ2,0^^6;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.11,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits

IBINI02V
IBINI02V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,6.11,21,0)
	;;=^^1^1^2930805^
	;;^DD(350.9,6.11,21,1,0)
	;;=This is the number of random selections generated this week.
	;;^DD(350.9,6.11,"DT")
	;;=2930804
	;;^DD(350.9,6.12,0)
	;;=MEDICINE ADMISSION COUNTER^NJ2,0^^6;12^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.12,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.12,21,0)
	;;=^^2^2^2930805^
	;;^DD(350.9,6.12,21,1,0)
	;;=This is the number of admissions for this service counted by the
	;;^DD(350.9,6.12,21,2,0)
	;;=claims tracking module so far this week.
	;;^DD(350.9,6.12,"DT")
	;;=2930804
	;;^DD(350.9,6.13,0)
	;;=SURGERY SAMPLE SIZE^NJ2,0^^6;13^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.13,3)
	;;=Type a Number between 0 and 99, 0 Decimal Digits
	;;^DD(350.9,6.13,21,0)
	;;=^^3^3^2930901^^
	;;^DD(350.9,6.13,21,1,0)
	;;=This is the number of required Utilization Reviews that you wish to have
	;;^DD(350.9,6.13,21,2,0)
	;;=done each week for Surgery admissions.  The minimum recommended by
	;;^DD(350.9,6.13,21,3,0)
	;;=the QA office is one per week.
	;;^DD(350.9,6.13,"DT")
	;;=2940113
	;;^DD(350.9,6.14,0)
	;;=SURGERY WEEKLY ADMISSIONS^NJ2,0^^6;14^K:+X'=X!(X>99)!(X<5)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.14,3)
	;;=Type a Number between 5 and 99, 0 Decimal Digits
	;;^DD(350.9,6.14,21,0)
	;;=^^3^3^2930805^^
	;;^DD(350.9,6.14,21,1,0)
	;;=This is the minimum number of admissions for Surgery that your Medical
	;;^DD(350.9,6.14,21,2,0)
	;;=Center generally averages.  This is used along with the Surgery
	;;^DD(350.9,6.14,21,3,0)
	;;=sample size to compute a random number.
	;;^DD(350.9,6.14,"DT")
	;;=2930901
	;;^DD(350.9,6.15,0)
	;;=SURGERY RANDOM NUMBER^NJ2,0^^6;15^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.15,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.15,21,0)
	;;=^^4^4^2940209^^^
	;;^DD(350.9,6.15,21,1,0)
	;;=This is an internally computed random number.  It is re-computed each
	;;^DD(350.9,6.15,21,2,0)
	;;=week.  When the count of the Surgery admissions reaches a multiple of
	;;^DD(350.9,6.15,21,3,0)
	;;=this number it is considered the random selection.  The total number
	;;^DD(350.9,6.15,21,4,0)
	;;=of random selections for UR will not exceed the Surgery sample size.
	;;^DD(350.9,6.15,"DT")
	;;=2930804
	;;^DD(350.9,6.16,0)
	;;=SURGERY ENTRIES MET^NJ2,0^^6;16^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.16,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.16,21,0)
	;;=^^1^1^2930805^
	;;^DD(350.9,6.16,21,1,0)
	;;=This is the number of random selections generated this week.
	;;^DD(350.9,6.16,"DT")
	;;=2930804
	;;^DD(350.9,6.17,0)
	;;=SURGERY ADMISSION COUNTER^NJ2,0^^6;17^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.17,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.17,21,0)
	;;=^^2^2^2930805^
	;;^DD(350.9,6.17,21,1,0)
	;;=This is the number of admissions for this service counted by the
	;;^DD(350.9,6.17,21,2,0)
	;;=claims tracking module so far this week.
	;;^DD(350.9,6.17,"DT")
	;;=2930804
	;;^DD(350.9,6.18,0)
	;;=PSYCH SAMPLE SIZE^NJ2,0^^6;18^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.18,3)
	;;=Type a Number between 0 and 99, 0 Decimal Digits
	;;^DD(350.9,6.18,21,0)
	;;=^^3^3^2930805^
	;;^DD(350.9,6.18,21,1,0)
	;;=This is the number of required Utilization Reviews that you wish to have
	;;^DD(350.9,6.18,21,2,0)
	;;=done each week for Psychiatry admissions.  The minimum recommended by
	;;^DD(350.9,6.18,21,3,0)
	;;=the QA office is one per week.
	;;^DD(350.9,6.18,"DT")
	;;=2940113

IBINI02W
IBINI02W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,6.19,0)
	;;=PSYCH WEEKLY ADMISSIONS^NJ2,0^^6;19^K:+X'=X!(X>99)!(X<5)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.19,3)
	;;=Type a Number between 5 and 99, 0 Decimal Digits
	;;^DD(350.9,6.19,21,0)
	;;=^^3^3^2930805^
	;;^DD(350.9,6.19,21,1,0)
	;;=This is the minimum number of admissions for Psychiatry that your Medical
	;;^DD(350.9,6.19,21,2,0)
	;;=Center generally averages.  This is used along with the Psychiatry
	;;^DD(350.9,6.19,21,3,0)
	;;=sample size to compute a random number.
	;;^DD(350.9,6.19,"DT")
	;;=2930901
	;;^DD(350.9,6.2,0)
	;;=PSYCH RANDOM NUMBER^NJ2,0^^6;20^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.2,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.2,21,0)
	;;=^^4^4^2940209^^
	;;^DD(350.9,6.2,21,1,0)
	;;=This is an internally computed random number.  It is re-computed each
	;;^DD(350.9,6.2,21,2,0)
	;;=week.  When the count of the Psychiatry admissions reaches a multiple of
	;;^DD(350.9,6.2,21,3,0)
	;;=this number it is considered the random selection.  The total number
	;;^DD(350.9,6.2,21,4,0)
	;;=of random selections for UR will not exceed the Psychiatry sample size.
	;;^DD(350.9,6.2,"DT")
	;;=2930804
	;;^DD(350.9,6.21,0)
	;;=PSYCH ENTRIES MET^NJ2,0^^6;21^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.21,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.21,21,0)
	;;=^^1^1^2930805^
	;;^DD(350.9,6.21,21,1,0)
	;;=This is the number of random selections generated this week.
	;;^DD(350.9,6.21,"DT")
	;;=2930804
	;;^DD(350.9,6.22,0)
	;;=PSYCH ADMISSION COUNTER^NJ2,0^^6;22^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(350.9,6.22,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(350.9,6.22,21,0)
	;;=^^2^2^2930805^
	;;^DD(350.9,6.22,21,1,0)
	;;=This is the number of admissions for this service counted by the
	;;^DD(350.9,6.22,21,2,0)
	;;=claims tracking module so far this week.
	;;^DD(350.9,6.22,"DT")
	;;=2930804
	;;^DD(350.9,6.23,0)
	;;=REPORTS ADD TO CLAIMS TRACKING^S^0:NO;1:YES;^6;23^Q
	;;^DD(350.9,6.23,3)
	;;=Should the Patients with Insurance Reports add entries to claims tracking.
	;;^DD(350.9,6.23,21,0)
	;;=^^10^10^2940209^^
	;;^DD(350.9,6.23,21,1,0)
	;;=This field determines whether or not you wish to allow the Veterans with
	;;^DD(350.9,6.23,21,2,0)
	;;=Insurance reports to add entries to Claims tracking.  If you answer 'YES'
	;;^DD(350.9,6.23,21,3,0)
	;;=then admisssions and outpatient visits found as billable but not found
	;;^DD(350.9,6.23,21,4,0)
	;;=in claims tracking will be added to claims tracking for billing information
	;;^DD(350.9,6.23,21,5,0)
	;;=purposes only.  No review will be set up.  This is to allow flagging of
	;;^DD(350.9,6.23,21,6,0)
	;;=these visits as unbillable so that they can be removed from these reports.
	;;^DD(350.9,6.23,21,7,0)
	;;=Answering 'YES' does not guarantee that the entry will be added.  The 
	;;^DD(350.9,6.23,21,8,0)
	;;=related parameters about whether Claims Tracking is turned on and the
	;;^DD(350.9,6.23,21,9,0)
	;;=Claims Tracking Start Date will override this parameter.
	;;^DD(350.9,6.23,21,10,0)
	;;= 
	;;^DD(350.9,6.23,23,0)
	;;=^^1^1^2940209^^
	;;^DD(350.9,6.23,23,1,0)
	;;= 
	;;^DD(350.9,6.23,"DT")
	;;=2931026
	;;^DD(350.9,7.01,0)
	;;=AUTO BILLER FREQUENCY^NJ4,0^^7;1^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(350.9,7.01,3)
	;;=Type a Number between 0 and 9999, 0 Decimal Digits
	;;^DD(350.9,7.01,21,0)
	;;=^^8^8^2931122^^^^
	;;^DD(350.9,7.01,21,1,0)
	;;=Enter the number of days between each execution of the automated biller.
	;;^DD(350.9,7.01,21,2,0)
	;;=For example, if the auto biller should run only once a week, enter 7.

IBINI02X
IBINI02X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(350.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(350.9,7.01,21,3,0)
	;;=If the auto biller should run every night, enter 1.
	;;^DD(350.9,7.01,21,4,0)
	;;= 
	;;^DD(350.9,7.01,21,5,0)
	;;=This will not effect the date range of the bills themselves, but will
	;;^DD(350.9,7.01,21,6,0)
	;;=only effect the date they are created.
	;;^DD(350.9,7.01,21,7,0)
	;;= 
	;;^DD(350.9,7.01,21,8,0)
	;;=If this is left blank or zero then the auto biller will never run.
	;;^DD(350.9,7.01,"DT")
	;;=2931021
	;;^DD(350.9,7.02,0)
	;;=LAST AUTO BILLER DATE^D^^7;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(350.9,7.02,3)
	;;=This is the last date on which the auto biller ran.
	;;^DD(350.9,7.02,21,0)
	;;=^^1^1^2931021^
	;;^DD(350.9,7.02,21,1,0)
	;;=This is generally set by the system.
	;;^DD(350.9,7.02,"DT")
	;;=2931021
	;;^DD(350.9,7.03,0)
	;;=INPATIENT STATUS (AB)^S^1:Closed;2:Released;3:Transmitted;^7;3^Q
	;;^DD(350.9,7.03,3)
	;;=Enter the Status that an Inpatients PTF record should have before the automated biller attempts to create a bill for that inpatient stay.
	;;^DD(350.9,7.03,21,0)
	;;=^^9^9^2940125^^^^
	;;^DD(350.9,7.03,21,1,0)
	;;=This is the status that a PTF record must be in before the automated biller
	;;^DD(350.9,7.03,21,2,0)
	;;=will attempt to create an inpatient bill.
	;;^DD(350.9,7.03,21,3,0)
	;;= 
	;;^DD(350.9,7.03,21,4,0)
	;;=The auto biller will use the Frequency, Billing Cycle and Days Delay
	;;^DD(350.9,7.03,21,5,0)
	;;=parameters to decide when to try to create an inpatient bill.  However,
	;;^DD(350.9,7.03,21,6,0)
	;;=the auto biller can not set up a bill until the PTF record is Closed.
	;;^DD(350.9,7.03,21,7,0)
	;;=Of the two dates, the date calculated from the site parameters or the date
	;;^DD(350.9,7.03,21,8,0)
	;;=that the PTF record meets the Status entered here, the bill will be created
	;;^DD(350.9,7.03,21,9,0)
	;;=on the later date.
	;;^DD(350.9,7.03,23,0)
	;;=^^12^12^2940125^^^^
	;;^DD(350.9,7.03,23,1,0)
	;;=This set of codes should exactly mirror the PTF Status (45,6) set of 
	;;^DD(350.9,7.03,23,2,0)
	;;=codes, except for Open.
	;;^DD(350.9,7.03,23,3,0)
	;;= 
	;;^DD(350.9,7.03,23,4,0)
	;;=Some sites want to wait until the PTF is closed before a bill is created
	;;^DD(350.9,7.03,23,5,0)
	;;=because they know it will be coded at that time.  Others do not want to
	;;^DD(350.9,7.03,23,6,0)
	;;=bill until the PTF record has been transmitted and they know that it is
	;;^DD(350.9,7.03,23,7,0)
	;;=complete.
	;;^DD(350.9,7.03,23,8,0)
	;;= 
	;;^DD(350.9,7.03,23,9,0)
	;;=After this had been added it was decided that an auto bill should not be
	;;^DD(350.9,7.03,23,10,0)
	;;=created for inpatients until after the PTF record has been closed.
	;;^DD(350.9,7.03,23,11,0)
	;;=So, the option of creating an auto bill when the PTF record was still open
	;;^DD(350.9,7.03,23,12,0)
	;;=was removed.
	;;^DD(350.9,7.03,"DT")
	;;=2940125

IBINI02Y
IBINI02Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(351,0,"GL")
	;;=^IBE(351,
	;;^DIC("B","CATEGORY C BILLING CLOCK",351)
	;;=
	;;^DIC(351,"%D",0)
	;;=^^16^16^2940214^^^^
	;;^DIC(351,"%D",1,0)
	;;=DO NOT delete entries in this file.  DO NOT edit data in this file
	;;^DIC(351,"%D",2,0)
	;;=with VA File Manager.
	;;^DIC(351,"%D",3,0)
	;;= 
	;;^DIC(351,"%D",4,0)
	;;=This file was introduced with v1.5 of Integrated Billing in
	;;^DIC(351,"%D",5,0)
	;;=conjunction with the automation of bills for Means Test/Category C
	;;^DIC(351,"%D",6,0)
	;;=charges.  The file is used to create and maintain billing clocks in
	;;^DIC(351,"%D",7,0)
	;;=which Category C patients may be charged co-payment and per diem
	;;^DIC(351,"%D",8,0)
	;;=charges for Hospital or Nursing Home Care, as well as outpatient
	;;^DIC(351,"%D",9,0)
	;;=visits.  This file was initially populated by the Means Test data
	;;^DIC(351,"%D",10,0)
	;;=conversion that took place when v1.5 was installed.  Entries are
	;;^DIC(351,"%D",11,0)
	;;=subsequently updated and created by Integrated Billing.
	;;^DIC(351,"%D",12,0)
	;;= 
	;;^DIC(351,"%D",13,0)
	;;=Entries in this file should not be deleted.  Billing clocks which
	;;^DIC(351,"%D",14,0)
	;;=are not correct will be cancelled, and new clocks may be added.
	;;^DIC(351,"%D",15,0)
	;;= 
	;;^DIC(351,"%D",16,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(351,0)
	;;=FIELD^^15^15
	;;^DD(351,0,"DDA")
	;;=N
	;;^DD(351,0,"DT")
	;;=2920225
	;;^DD(351,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W ?16,$E(Y,1,25),@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(351,0,"ID",.03)
	;;=W ?44,$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(351,0,"ID",.04)
	;;=W ?55,@("$P($P($C(59)_$S($D(^DD(351,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(351,0,"IX","ACT",351,.02)
	;;=
	;;^DD(351,0,"IX","ACT1",351,.04)
	;;=
	;;^DD(351,0,"IX","AIVDT",351,.02)
	;;=
	;;^DD(351,0,"IX","AIVDT1",351,.03)
	;;=
	;;^DD(351,0,"IX","B",351,.01)
	;;=
	;;^DD(351,0,"IX","C",351,.02)
	;;=
	;;^DD(351,0,"NM","CATEGORY C BILLING CLOCK")
	;;=
	;;^DD(351,.01,0)
	;;=REFERENCE NUMBER^RNJ12,0^^0;1^K:+X'=X!(X>999999999999)!(X<1000)!(X?.E1"."1N.N) X
	;;^DD(351,.01,1,0)
	;;=^.1^^-1
	;;^DD(351,.01,1,1,0)
	;;=351^B
	;;^DD(351,.01,1,1,1)
	;;=S ^IBE(351,"B",$E(X,1,30),DA)=""
	;;^DD(351,.01,1,1,2)
	;;=K ^IBE(351,"B",$E(X,1,30),DA)
	;;^DD(351,.01,3)
	;;=Type a Number between 1000 and 999999999999, 0 Decimal Digits
	;;^DD(351,.01,21,0)
	;;=^^3^3^2911226^^^
	;;^DD(351,.01,21,1,0)
	;;=This field consists of the station number concatenated with the internal
	;;^DD(351,.01,21,2,0)
	;;=number of the entry.  The purpose of this number is to provide a unique
	;;^DD(351,.01,21,3,0)
	;;=reference for each billing clock which has been opened at each station.
	;;^DD(351,.01,"DT")
	;;=2911010
	;;^DD(351,.02,0)
	;;=PATIENT^RP2'^DPT(^0;2^Q
	;;^DD(351,.02,1,0)
	;;=^.1
	;;^DD(351,.02,1,1,0)
	;;=351^AIVDT^MUMPS
	;;^DD(351,.02,1,1,1)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",3) S ^IBE(351,"AIVDT",X,-$P(^(0),"^",3),DA)=""
	;;^DD(351,.02,1,1,2)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",3) K ^IBE(351,"AIVDT",X,-$P(^(0),"^",3),DA)
	;;^DD(351,.02,1,1,"%D",0)
	;;=^^5^5^2920415^^^^
	;;^DD(351,.02,1,1,"%D",1,0)
	;;=Cross-reference of all IB MT BILLING CYCLE entries by the patient (#.02)
	;;^DD(351,.02,1,1,"%D",2,0)
	;;=field and the minus (negative or inverse) cycle date (#.03) field.  The
	;;^DD(351,.02,1,1,"%D",3,0)
	;;=most current billing cycle for a patient may be found using this cross-

IBINI02Z
IBINI02Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(351,.02,1,1,"%D",4,0)
	;;=reference.  The "AIVDT1" cross-reference on the cycle date (#.03) field
	;;^DD(351,.02,1,1,"%D",5,0)
	;;=is the companion to this cross-reference.
	;;^DD(351,.02,1,1,"DT")
	;;=2911009
	;;^DD(351,.02,1,2,0)
	;;=351^ACT^MUMPS
	;;^DD(351,.02,1,2,1)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",4)=1 S ^IBE(351,"ACT",X,DA)=""
	;;^DD(351,.02,1,2,2)
	;;=K ^IBE(351,"ACT",X,DA)
	;;^DD(351,.02,1,2,"%D",0)
	;;=^^7^7^2911106^
	;;^DD(351,.02,1,2,"%D",1,0)
	;;=Cross-reference of all active IB BILLING CYCLES by patient.
	;;^DD(351,.02,1,2,"%D",2,0)
	;;= 
	;;^DD(351,.02,1,2,"%D",3,0)
	;;=This is a temporary cross-reference which is used to find a patient's
	;;^DD(351,.02,1,2,"%D",4,0)
	;;=active billing cycle record, if one exists.  The cross-reference is
	;;^DD(351,.02,1,2,"%D",5,0)
	;;=set whenever the status (#.04 field) of a billing cycle is changed to 1
	;;^DD(351,.02,1,2,"%D",6,0)
	;;=(CURRENT), and killed without condition.  The "ACT1" cross-reference on
	;;^DD(351,.02,1,2,"%D",7,0)
	;;=the status field is the companion to this cross-reference.
	;;^DD(351,.02,1,2,"DT")
	;;=2911106
	;;^DD(351,.02,1,3,0)
	;;=351^C
	;;^DD(351,.02,1,3,1)
	;;=S ^IBE(351,"C",$E(X,1,30),DA)=""
	;;^DD(351,.02,1,3,2)
	;;=K ^IBE(351,"C",$E(X,1,30),DA)
	;;^DD(351,.02,1,3,"DT")
	;;=2911226
	;;^DD(351,.02,3)
	;;=Please enter the patient for whom this billing clock is being opened.
	;;^DD(351,.02,21,0)
	;;=^^1^1^2911226^^
	;;^DD(351,.02,21,1,0)
	;;=This is the patient for whom the billing clock is being opened.
	;;^DD(351,.02,"DT")
	;;=2911226
	;;^DD(351,.03,0)
	;;=CLOCK BEGIN DATE^RD^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(351,.03,1,0)
	;;=^.1
	;;^DD(351,.03,1,1,0)
	;;=351^AIVDT1^MUMPS
	;;^DD(351,.03,1,1,1)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",2) S ^IBE(351,"AIVDT",$P(^(0),"^",2),-X,DA)=""
	;;^DD(351,.03,1,1,2)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",2) K ^IBE(351,"AIVDT",$P(^(0),"^",2),-X,DA)
	;;^DD(351,.03,1,1,"%D",0)
	;;=^^5^5^2911105^^^^
	;;^DD(351,.03,1,1,"%D",1,0)
	;;=Cross-reference of all IB MT BILLING CYCLE entries by the patient (#.02)
	;;^DD(351,.03,1,1,"%D",2,0)
	;;=field and the minus (negative or inverse) cycle date (#.03) field.  The
	;;^DD(351,.03,1,1,"%D",3,0)
	;;=most current billing cycle for a patient may be found using this cross-
	;;^DD(351,.03,1,1,"%D",4,0)
	;;=reference.  The "AIVDT" cross-reference on the patient (#.02) field is
	;;^DD(351,.03,1,1,"%D",5,0)
	;;=is the companion to this cross-reference.
	;;^DD(351,.03,1,1,"DT")
	;;=2911009
	;;^DD(351,.03,3)
	;;=Please enter the date on which the billing clock should begin.
	;;^DD(351,.03,21,0)
	;;=^^1^1^2920211^^^^
	;;^DD(351,.03,21,1,0)
	;;=This is the date on which the billing clock has been opened.
	;;^DD(351,.03,"DT")
	;;=2911230
	;;^DD(351,.04,0)
	;;=STATUS^S^1:CURRENT;2:CLOSED;3:CANCELLED;^0;4^Q
	;;^DD(351,.04,1,0)
	;;=^.1
	;;^DD(351,.04,1,1,0)
	;;=351^ACT1^MUMPS
	;;^DD(351,.04,1,1,1)
	;;=I X=1,$D(^IBE(351,DA,0)),$P(^(0),"^",2) S ^IBE(351,"ACT",$P(^(0),"^",2),DA)=""
	;;^DD(351,.04,1,1,2)
	;;=I $D(^IBE(351,DA,0)),$P(^(0),"^",2) K ^IBE(351,"ACT",$P(^(0),"^",2),DA)
	;;^DD(351,.04,1,1,"%D",0)
	;;=^^7^7^2911106^
	;;^DD(351,.04,1,1,"%D",1,0)
	;;=Cross-reference of all active IB BILLING CYCLES by patient (#.02 field).
	;;^DD(351,.04,1,1,"%D",2,0)
	;;= 
	;;^DD(351,.04,1,1,"%D",3,0)
	;;=This is a temporary cross-reference which is used to find a patient's
	;;^DD(351,.04,1,1,"%D",4,0)
	;;=active billing cycle record, if one exists.  The cross-reference is set
	;;^DD(351,.04,1,1,"%D",5,0)
	;;=whenever the status of a billing cycle is changed to 1 (CURRENT), and

IBINI030
IBINI030	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(351,.04,1,1,"%D",6,0)
	;;=killed whenever the patient field is defined.  The "ACT" cross-reference
	;;^DD(351,.04,1,1,"%D",7,0)
	;;=on the patient field is the companion to this cross-reference.
	;;^DD(351,.04,1,1,"DT")
	;;=2911106
	;;^DD(351,.04,3)
	;;=Enter the present status for this billing clock.
	;;^DD(351,.04,21,0)
	;;=^^7^7^2920415^^^^
	;;^DD(351,.04,21,1,0)
	;;=The status of the billing clock will be CURRENT if charges are being
	;;^DD(351,.04,21,2,0)
	;;=created for that clock.  The clock will be CLOSED after 365 days or
	;;^DD(351,.04,21,3,0)
	;;=the date on which the patient is no longer Category C, whichever is
	;;^DD(351,.04,21,4,0)
	;;=earlier.  Billing clocks which may have been "left open" due to a lack
	;;^DD(351,.04,21,5,0)
	;;=of billable activity will be closed during the nightly compilation
	;;^DD(351,.04,21,6,0)
	;;=job.  Billing clocks which must be deleted for any reason will
	;;^DD(351,.04,21,7,0)
	;;=have a status of CANCELLED.
	;;^DD(351,.04,"DT")
	;;=2911106
	;;^DD(351,.05,0)
	;;=1ST 90 DAY INPATIENT AMOUNT^NJ7,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999.99)!(X<0) X
	;;^DD(351,.05,3)
	;;=Type a Dollar Amount between 0 and 9999.99, 2 Decimal Digits
	;;^DD(351,.05,21,0)
	;;=^^3^3^2920415^^^^
	;;^DD(351,.05,21,1,0)
	;;=This field represents the total co-payment (not including the per diem
	;;^DD(351,.05,21,2,0)
	;;=charge) amount which has been billed to the patient for his first 90 days
	;;^DD(351,.05,21,3,0)
	;;=of Hospital or Nursing Home care.
	;;^DD(351,.05,"DT")
	;;=2911009
	;;^DD(351,.06,0)
	;;=2ND 90 DAY INPATIENT AMOUNT^NJ7,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999.99)!(X<0) X
	;;^DD(351,.06,3)
	;;=Type a Dollar Amount between 0 and 9999.99, 2 Decimal Digits
	;;^DD(351,.06,21,0)
	;;=^^3^3^2920415^^^
	;;^DD(351,.06,21,1,0)
	;;=This field represents the total co-payment (not including the per diem
	;;^DD(351,.06,21,2,0)
	;;=charge) amount which has been billed to the patient for his second 90 days
	;;^DD(351,.06,21,3,0)
	;;=of Hospital or Nursing Home care.
	;;^DD(351,.06,"DT")
	;;=2911009
	;;^DD(351,.07,0)
	;;=3RD 90 DAY INPATIENT AMOUNT^NJ7,2^^0;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999.99)!(X<0) X
	;;^DD(351,.07,3)
	;;=Type a Dollar Amount between 0 and 9999.99, 2 Decimal Digits
	;;^DD(351,.07,21,0)
	;;=^^3^3^2920415^^^
	;;^DD(351,.07,21,1,0)
	;;=This field represents the total co-payment (not including the per diem
	;;^DD(351,.07,21,2,0)
	;;=charge) amount which has been billed to the patient for his third 90 days
	;;^DD(351,.07,21,3,0)
	;;=of Hospital or Nursing Home care.
	;;^DD(351,.07,"DT")
	;;=2911009
	;;^DD(351,.08,0)
	;;=4TH 90 DAY INPATIENT AMOUNT^NJ7,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999.99)!(X<0) X
	;;^DD(351,.08,3)
	;;=Type a Dollar Amount between 0 and 9999.99, 2 Decimal Digits
	;;^DD(351,.08,21,0)
	;;=^^3^3^2920415^^^
	;;^DD(351,.08,21,1,0)
	;;=This field represents the total co-payment (not including the per diem
	;;^DD(351,.08,21,2,0)
	;;=charge) amount which has been billed to the patient for his fourth 90 days
	;;^DD(351,.08,21,3,0)
	;;=of Hospital or Nursing Home care.
	;;^DD(351,.08,"DT")
	;;=2911009
	;;^DD(351,.09,0)
	;;=NUMBER INPATIENT DAYS^NJ3,0^^0;9^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(351,.09,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(351,.09,21,0)
	;;=^^4^4^2920225^^^
	;;^DD(351,.09,21,1,0)
	;;=This field represents the total number of days that the patient has
	;;^DD(351,.09,21,2,0)
	;;=spent in the Hospital or Nursing Home since the Clock Begin Date.

IBINI031
IBINI031	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(351,.09,21,3,0)
	;;=The field is used to determine the co-payment charges billed to the
	;;^DD(351,.09,21,4,0)
	;;=patient for care received.
	;;^DD(351,.09,"DT")
	;;=2911009
	;;^DD(351,.1,0)
	;;=CLOCK END DATE^D^^0;10^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(351,.1,3)
	;;=Enter the date on which this billing clock must be closed.
	;;^DD(351,.1,21,0)
	;;=^^2^2^2911226^^
	;;^DD(351,.1,21,1,0)
	;;=This is the date on which the billing clock was closed.  This date
	;;^DD(351,.1,21,2,0)
	;;=should not be more than 365 days after the Clock Begin Date.
	;;^DD(351,.1,"DT")
	;;=2911226
	;;^DD(351,11,0)
	;;=USER ADDING ENTRY^P200'^VA(200,^1;1^Q
	;;^DD(351,11,9)
	;;=^
	;;^DD(351,11,21,0)
	;;=^^3^3^2911226^^
	;;^DD(351,11,21,1,0)
	;;=This is the person performing a transaction in an application that
	;;^DD(351,11,21,2,0)
	;;=causes the application to create an entry in this file.  This field
	;;^DD(351,11,21,3,0)
	;;=may be null if the entry was created by an off-line compilation job.
	;;^DD(351,11,"DT")
	;;=2911009
	;;^DD(351,12,0)
	;;=DATE ENTRY ADDED^D^^1;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351,12,9)
	;;=^
	;;^DD(351,12,21,0)
	;;=^^1^1^2911226^^
	;;^DD(351,12,21,1,0)
	;;=This the date/time that an entry was added to this file.
	;;^DD(351,12,"DT")
	;;=2911009
	;;^DD(351,13,0)
	;;=USER LAST UPDATING^P200'^VA(200,^1;3^Q
	;;^DD(351,13,21,0)
	;;=^^3^3^2911226^^
	;;^DD(351,13,21,1,0)
	;;=This is the person performing a transaction in an application which
	;;^DD(351,13,21,2,0)
	;;=causes the application to update this entry.  This entry may be null
	;;^DD(351,13,21,3,0)
	;;=if the entry was last updated in an off-line compilation job.
	;;^DD(351,13,"DT")
	;;=2911009
	;;^DD(351,14,0)
	;;=DATE LAST UPDATED^D^^1;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351,14,21,0)
	;;=^^1^1^2911226^^
	;;^DD(351,14,21,1,0)
	;;=This is the date/time that this entry was last updated.
	;;^DD(351,14,"DT")
	;;=2911009
	;;^DD(351,15,0)
	;;=UPDATE REASON^F^^0;11^K:$L(X)>40!($L(X)<3) X
	;;^DD(351,15,3)
	;;= Answer must be 3-40 characters in length.
	;;^DD(351,15,21,0)
	;;=^^1^1^2920225^
	;;^DD(351,15,21,1,0)
	;;=Brief description of reason for updating billing clock.
	;;^DD(351,15,"DT")
	;;=2920225

IBINI032
IBINI032	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(351.1,0,"GL")
	;;=^IBE(351.1,
	;;^DIC("B","IB CONTINUOUS PATIENT",351.1)
	;;=
	;;^DIC(351.1,"%D",0)
	;;=0^^9^9^2940214^^^^
	;;^DIC(351.1,"%D",1,0)
	;;=This file was created as part of v1.5 of Integrated Billing, in
	;;^DIC(351.1,"%D",2,0)
	;;=conjunction with the automation of Means Test/Category C billing.
	;;^DIC(351.1,"%D",3,0)
	;;=This file contains a list of all continuous Hospital or Nursing
	;;^DIC(351.1,"%D",4,0)
	;;=Home Care patients since 7/1/86 who may be subject to Category C
	;;^DIC(351.1,"%D",5,0)
	;;=billing.  These patients are exempt from the co-payment charges,
	;;^DIC(351.1,"%D",6,0)
	;;=but not the per diem charges.  Patients who change their level of care must
	;;^DIC(351.1,"%D",7,0)
	;;=be manually unflagged.
	;;^DIC(351.1,"%D",8,0)
	;;= 
	;;^DIC(351.1,"%D",9,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(351.1,0)
	;;=FIELD^^.06^6
	;;^DD(351.1,0,"DDA")
	;;=N
	;;^DD(351.1,0,"IX","B",351.1,.01)
	;;=
	;;^DD(351.1,0,"NM","IB CONTINUOUS PATIENT")
	;;=
	;;^DD(351.1,.01,0)
	;;=PATIENT^RP2'^DPT(^0;1^Q
	;;^DD(351.1,.01,1,0)
	;;=^.1^^-1
	;;^DD(351.1,.01,1,1,0)
	;;=351.1^B
	;;^DD(351.1,.01,1,1,1)
	;;=S ^IBE(351.1,"B",$E(X,1,30),DA)=""
	;;^DD(351.1,.01,1,1,2)
	;;=K ^IBE(351.1,"B",$E(X,1,30),DA)
	;;^DD(351.1,.01,3)
	;;=Enter the name of the patient who has been a continuous inpatient since July 1, 1986.
	;;^DD(351.1,.01,21,0)
	;;=^^2^2^2911104^^
	;;^DD(351.1,.01,21,1,0)
	;;=This field contains the DFN of the patient who has been a continuous
	;;^DD(351.1,.01,21,2,0)
	;;=inpatient since July 1, 1986.
	;;^DD(351.1,.01,"DT")
	;;=2911101
	;;^DD(351.1,.02,0)
	;;=DISCHARGE DATE^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.1,.02,3)
	;;=Enter the date on which the patient is no longer a continuous patient.
	;;^DD(351.1,.02,21,0)
	;;=^^2^2^2920415^^^^
	;;^DD(351.1,.02,21,1,0)
	;;=This is the date on which the patient has been discharged from the hospital
	;;^DD(351.1,.02,21,2,0)
	;;=or nursing home after a continuous stay since July 1,1986.
	;;^DD(351.1,.02,"DT")
	;;=2911101
	;;^DD(351.1,.03,0)
	;;=USER ADDING ENTRY^P200'^VA(200,^0;3^Q
	;;^DD(351.1,.03,9)
	;;=^
	;;^DD(351.1,.03,21,0)
	;;=^^1^1^2911104^^^
	;;^DD(351.1,.03,21,1,0)
	;;=This is the person who is adding the entry to the file.
	;;^DD(351.1,.03,"DT")
	;;=2911008
	;;^DD(351.1,.04,0)
	;;=DATE ENTRY ADDED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.1,.04,9)
	;;=^
	;;^DD(351.1,.04,21,0)
	;;=^^1^1^2911008^^
	;;^DD(351.1,.04,21,1,0)
	;;=This is the date/time that the entry was added to the file.
	;;^DD(351.1,.04,"DT")
	;;=2911008
	;;^DD(351.1,.05,0)
	;;=USER LAST UPDATING^P200'^VA(200,^0;5^Q
	;;^DD(351.1,.05,21,0)
	;;=^^1^1^2940209^^^^
	;;^DD(351.1,.05,21,1,0)
	;;=This is the last user who has edited this entry.
	;;^DD(351.1,.05,"DT")
	;;=2911008
	;;^DD(351.1,.06,0)
	;;=DATE LAST UPDATED^D^^0;6^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.1,.06,21,0)
	;;=^^1^1^2911008^
	;;^DD(351.1,.06,21,1,0)
	;;=This is the last date/time that the entry was edited.
	;;^DD(351.1,.06,"DT")
	;;=2911008

IBINI033
IBINI033	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(351.2,0,"GL")
	;;=^IBE(351.2,
	;;^DIC("B","SPECIAL INPATIENT BILLING CASES",351.2)
	;;=
	;;^DIC(351.2,"%D",0)
	;;=^^20^20^2940214^^^
	;;^DIC(351.2,"%D",1,0)
	;;=This file is used to track inpatient episodes for Category C veterans
	;;^DIC(351.2,"%D",2,0)
	;;=who have claimed exposure to Agent Orange, Ionizing Radiation, and
	;;^DIC(351.2,"%D",3,0)
	;;=Environmental Contaminants.
	;;^DIC(351.2,"%D",4,0)
	;;= 
	;;^DIC(351.2,"%D",5,0)
	;;=These episodes, which are normally billed automatically by the system,
	;;^DIC(351.2,"%D",6,0)
	;;=require individual review to determine if the care provided was related
	;;^DIC(351.2,"%D",7,0)
	;;=to the claimed exposure.  If the care was determined to be related to
	;;^DIC(351.2,"%D",8,0)
	;;=exposure, the patient should not be billed, but the case disposition 
	;;^DIC(351.2,"%D",9,0)
	;;=must be documented.
	;;^DIC(351.2,"%D",10,0)
	;;= 
	;;^DIC(351.2,"%D",11,0)
	;;=A case record will automatically be filed at admission for this special
	;;^DIC(351.2,"%D",12,0)
	;;=group of patients, and updated when the patient is discharged.  The
	;;^DIC(351.2,"%D",13,0)
	;;=site then has 45 days to disposition the case, i.e. determine if the
	;;^DIC(351.2,"%D",14,0)
	;;=care was related to the claimed exposure.  If the care was unrelated,
	;;^DIC(351.2,"%D",15,0)
	;;=and copayment and per diem charges are created in the Cancel/Edit/Add
	;;^DIC(351.2,"%D",16,0)
	;;=Patient Charges option, the case record will be automatically
	;;^DIC(351.2,"%D",17,0)
	;;=dispositioned.  If the patient is not going to be billed, the reason
	;;^DIC(351.2,"%D",18,0)
	;;=for not billing must be entered into this file.
	;;^DIC(351.2,"%D",19,0)
	;;= 
	;;^DIC(351.2,"%D",20,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(351.2,0)
	;;=FIELD^^2.04^13
	;;^DD(351.2,0,"DDA")
	;;=N
	;;^DD(351.2,0,"DT")
	;;=2930810
	;;^DD(351.2,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGPM(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(405,.01,0),U,2) D Y^DIQ:Y]"" W "   Adm: ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(351.2,0,"ID",.03)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(351.2,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
	;;^DD(351.2,0,"IX","AC",351.2,.02)
	;;=
	;;^DD(351.2,0,"IX","AD",351.2,.04)
	;;=
	;;^DD(351.2,0,"IX","B",351.2,.01)
	;;=
	;;^DD(351.2,0,"NM","SPECIAL INPATIENT BILLING CASES")
	;;=
	;;^DD(351.2,.01,0)
	;;=PATIENT^RP2'^DPT(^0;1^Q
	;;^DD(351.2,.01,1,0)
	;;=^.1
	;;^DD(351.2,.01,1,1,0)
	;;=351.2^B
	;;^DD(351.2,.01,1,1,1)
	;;=S ^IBE(351.2,"B",$E(X,1,30),DA)=""
	;;^DD(351.2,.01,1,1,2)
	;;=K ^IBE(351.2,"B",$E(X,1,30),DA)
	;;^DD(351.2,.01,3)
	;;=
	;;^DD(351.2,.01,21,0)
	;;=^^1^1^2930810^
	;;^DD(351.2,.01,21,1,0)
	;;=This is the patient whose inpatient episode must be tracked.
	;;^DD(351.2,.01,"DT")
	;;=2930810
	;;^DD(351.2,.02,0)
	;;=ADMISSION^P405'^DGPM(^0;2^Q
	;;^DD(351.2,.02,1,0)
	;;=^.1
	;;^DD(351.2,.02,1,1,0)
	;;=351.2^AC
	;;^DD(351.2,.02,1,1,1)
	;;=S ^IBE(351.2,"AC",$E(X,1,30),DA)=""
	;;^DD(351.2,.02,1,1,2)
	;;=K ^IBE(351.2,"AC",$E(X,1,30),DA)
	;;^DD(351.2,.02,1,1,"DT")
	;;=2930811
	;;^DD(351.2,.02,21,0)
	;;=^^2^2^2930810^
	;;^DD(351.2,.02,21,1,0)
	;;=This field points to the admission in the PATIENT MOVEMENT (#405)
	;;^DD(351.2,.02,21,2,0)
	;;=file which is being tracked.
	;;^DD(351.2,.02,"DT")
	;;=2930811
	;;^DD(351.2,.03,0)
	;;=PATIENT TYPE^S^1:AGENT ORANGE;2:IONIZING RADIATION;3:ENVIRONMENTAL CONTAMINANT;^0;3^Q
	;;^DD(351.2,.03,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,.03,21,1,0)
	;;=This field is used to determine whether the patient has claimed

IBINI034
IBINI034	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(351.2,.03,21,2,0)
	;;=exposure to Agent Orange, Ionizing Radiation, or Environmental
	;;^DD(351.2,.03,21,3,0)
	;;=Contaminants.
	;;^DD(351.2,.03,"DT")
	;;=2930810
	;;^DD(351.2,.04,0)
	;;=BILLING EVENT^P350'^IB(^0;4^Q
	;;^DD(351.2,.04,1,0)
	;;=^.1
	;;^DD(351.2,.04,1,1,0)
	;;=351.2^AD
	;;^DD(351.2,.04,1,1,1)
	;;=S ^IBE(351.2,"AD",$E(X,1,30),DA)=""
	;;^DD(351.2,.04,1,1,2)
	;;=K ^IBE(351.2,"AD",$E(X,1,30),DA)
	;;^DD(351.2,.04,1,1,"DT")
	;;=2930811
	;;^DD(351.2,.04,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,.04,21,1,0)
	;;=This field points to the event record in the INTEGRATED BILLING ACTION
	;;^DD(351.2,.04,21,2,0)
	;;=(#350) file which may be used to reference all charges associated with
	;;^DD(351.2,.04,21,3,0)
	;;=the admission.
	;;^DD(351.2,.04,"DT")
	;;=2930811
	;;^DD(351.2,.05,0)
	;;=PATIENT STATUS^S^1:ADMITTED;2:DISCHARGED;^0;5^Q
	;;^DD(351.2,.05,21,0)
	;;=^^3^3^2940209^^^
	;;^DD(351.2,.05,21,1,0)
	;;=This field indicates whether the patient is admitted or has been
	;;^DD(351.2,.05,21,2,0)
	;;=discharged.  The field is used to determine if monitoring of the
	;;^DD(351.2,.05,21,3,0)
	;;=billing case should begin.
	;;^DD(351.2,.05,"DT")
	;;=2930810
	;;^DD(351.2,.06,0)
	;;=DATE DISCHARGE ENTERED^D^^0;6^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.2,.06,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,.06,21,1,0)
	;;=This field contains the date that the patient's discharge movement
	;;^DD(351.2,.06,21,2,0)
	;;=was entered into the system.  The date is used as the starting date
	;;^DD(351.2,.06,21,3,0)
	;;=in the 45-day period in which this case must be dispositioned.
	;;^DD(351.2,.06,"DT")
	;;=2930810
	;;^DD(351.2,.07,0)
	;;=CARE RELATED TO CONDITION?^S^0:NO;1:YES;^0;7^Q
	;;^DD(351.2,.07,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,.07,21,1,0)
	;;=This field indicates whether this patient's inpatient episode of
	;;^DD(351.2,.07,21,2,0)
	;;=care has any component at all which is related to the patient's
	;;^DD(351.2,.07,21,3,0)
	;;=claimed exposure.
	;;^DD(351.2,.07,"DT")
	;;=2930810
	;;^DD(351.2,.08,0)
	;;=CASE DISPOSITIONED?^S^0:NO;1:YES;^0;8^Q
	;;^DD(351.2,.08,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,.08,21,1,0)
	;;=This field indicates whether this billing case has been fully
	;;^DD(351.2,.08,21,2,0)
	;;=dispositioned.  Once the case has been dispositioned, then it
	;;^DD(351.2,.08,21,3,0)
	;;=will no longer be monitored by the nightly billing job.
	;;^DD(351.2,.08,"DT")
	;;=2930810
	;;^DD(351.2,1,0)
	;;=REASON FOR NON-BILLING^F^^1;1^K:$L(X)>80!($L(X)<1) X
	;;^DD(351.2,1,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(351.2,1,21,0)
	;;=^^2^2^2930810^
	;;^DD(351.2,1,21,1,0)
	;;=This field allows the user to enter a free-text comment explaining why
	;;^DD(351.2,1,21,2,0)
	;;=this inpatient episode of care was not billed.
	;;^DD(351.2,1,"DT")
	;;=2930810
	;;^DD(351.2,2.01,0)
	;;=USER ADDING ENTRY^P200'^VA(200,^2;1^Q
	;;^DD(351.2,2.01,21,0)
	;;=^^3^3^2930810^
	;;^DD(351.2,2.01,21,1,0)
	;;=This field contains a pointer to the user who caused this entry to
	;;^DD(351.2,2.01,21,2,0)
	;;=be created.  This would normally be the user who enters the admission
	;;^DD(351.2,2.01,21,3,0)
	;;=movement for the patient.
	;;^DD(351.2,2.01,"DT")
	;;=2930810
	;;^DD(351.2,2.02,0)
	;;=DATE/TIME ENTRY CREATED^D^^2;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.2,2.02,21,0)
	;;=^^1^1^2930810^
	;;^DD(351.2,2.02,21,1,0)
	;;=This is the date/time that the entry was created.
	;;^DD(351.2,2.02,"DT")
	;;=2930810
	;;^DD(351.2,2.03,0)
	;;=USER LAST UPDATING^P200'^VA(200,^2;3^Q
	;;^DD(351.2,2.03,21,0)
	;;=^^1^1^2930810^
	;;^DD(351.2,2.03,21,1,0)
	;;=This field is a pointer to the user who last updated the entry.

IBINI035
IBINI035	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(351.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(351.2,2.03,"DT")
	;;=2930810
	;;^DD(351.2,2.04,0)
	;;=DATE LAST UPDATED^D^^2;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(351.2,2.04,21,0)
	;;=^^1^1^2930810^
	;;^DD(351.2,2.04,21,1,0)
	;;=This is the date/time that the entry was last updated.
	;;^DD(351.2,2.04,"DT")
	;;=2930810

IBINI036
IBINI036	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(352.1,0,"GL")
	;;=^IBE(352.1,
	;;^DIC("B","BILLABLE APPOINTMENT TYPE",352.1)
	;;=
	;;^DIC(352.1,"%D",0)
	;;=^^6^6^2940214^
	;;^DIC(352.1,"%D",1,0)
	;;=Records for each appointment type with indicators for  IGNORE 
	;;^DIC(352.1,"%D",2,0)
	;;=MEANS TEST, PRINT ON INSURANCE REPORT, and DISPLAY ON INPUT
	;;^DIC(352.1,"%D",3,0)
	;;=SCREEN.  Also contains effective date of determination.
	;;^DIC(352.1,"%D",4,0)
	;;=Accessed by extrinsic function ^IBEFUNC.
	;;^DIC(352.1,"%D",5,0)
	;;= 
	;;^DIC(352.1,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(352.1,0)
	;;=FIELD^^.06^6
	;;^DD(352.1,0,"DDA")
	;;=N
	;;^DD(352.1,0,"DT")
	;;=2911022
	;;^DD(352.1,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^SD(409.1,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(409.1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(352.1,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(352.1,0,"IX","AIVDT1",352.1,.02)
	;;=
	;;^DD(352.1,0,"IX","AIVDT2",352.1,.03)
	;;=
	;;^DD(352.1,0,"IX","B",352.1,.01)
	;;=
	;;^DD(352.1,0,"IX","C",352.1,.02)
	;;=
	;;^DD(352.1,0,"IX","D",352.1,.03)
	;;=
	;;^DD(352.1,0,"NM","BILLABLE APPOINTMENT TYPE")
	;;=
	;;^DD(352.1,.01,0)
	;;=NUMBER^RNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(352.1,.01,1,0)
	;;=^.1^^0
	;;^DD(352.1,.01,1,1,0)
	;;=352.1^B
	;;^DD(352.1,.01,1,1,1)
	;;=S ^IBE(352.1,"B",$E(X,1,30),DA)=""
	;;^DD(352.1,.01,1,1,2)
	;;=K ^IBE(352.1,"B",$E(X,1,30),DA)
	;;^DD(352.1,.01,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(352.1,.01,21,0)
	;;=^^1^1^2920406^^^
	;;^DD(352.1,.01,21,1,0)
	;;=This is a unique number for each entry.
	;;^DD(352.1,.01,"DT")
	;;=2911021
	;;^DD(352.1,.02,0)
	;;=APPOINTMENT TYPE^RP409.1'^SD(409.1,^0;2^Q
	;;^DD(352.1,.02,1,0)
	;;=^.1
	;;^DD(352.1,.02,1,1,0)
	;;=352.1^AIVDT1^MUMPS
	;;^DD(352.1,.02,1,1,1)
	;;=I $P(^IBE(352.1,DA,0),U,3) S ^IBE(352.1,"AIVDT",X,-$P(^(0),U,3),DA)=""
	;;^DD(352.1,.02,1,1,2)
	;;=I $P(^IBE(352.1,DA,0),U,3) K ^IBE(352.1,"AIVDT",X,-$P(^(0),U,3),DA)
	;;^DD(352.1,.02,1,1,"%D",0)
	;;=^^1^1^2911022^
	;;^DD(352.1,.02,1,1,"%D",1,0)
	;;=Used to find most recent entry for appointment type.
	;;^DD(352.1,.02,1,1,"DT")
	;;=2911022
	;;^DD(352.1,.02,1,2,0)
	;;=352.1^C
	;;^DD(352.1,.02,1,2,1)
	;;=S ^IBE(352.1,"C",$E(X,1,30),DA)=""
	;;^DD(352.1,.02,1,2,2)
	;;=K ^IBE(352.1,"C",$E(X,1,30),DA)
	;;^DD(352.1,.02,1,2,"DT")
	;;=2911022
	;;^DD(352.1,.02,21,0)
	;;=^^1^1^2920406^^
	;;^DD(352.1,.02,21,1,0)
	;;=This is the MAS Appointment type.
	;;^DD(352.1,.02,"DT")
	;;=2911022
	;;^DD(352.1,.03,0)
	;;=EFFECTIVE DATE^RDI^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(352.1,.03,1,0)
	;;=^.1
	;;^DD(352.1,.03,1,1,0)
	;;=352.1^AIVDT2^MUMPS
	;;^DD(352.1,.03,1,1,1)
	;;=I $P(^IBE(352.1,DA,0),U,2) S ^IBE(352.1,"AIVDT",$P(^(0),U,2),-X,DA)=""
	;;^DD(352.1,.03,1,1,2)
	;;=I $P(^IBE(352.1,DA,0),U,2) K ^IBE(352.1,"AIVDT",$P(^(0),U,2),-X,DA)
	;;^DD(352.1,.03,1,1,"%D",0)
	;;=^^1^1^2911022^
	;;^DD(352.1,.03,1,1,"%D",1,0)
	;;=Used to find most recent entry for an appointment type.
	;;^DD(352.1,.03,1,1,"DT")
	;;=2911022
	;;^DD(352.1,.03,1,2,0)
	;;=352.1^D
	;;^DD(352.1,.03,1,2,1)
	;;=S ^IBE(352.1,"D",$E(X,1,30),DA)=""
	;;^DD(352.1,.03,1,2,2)
	;;=K ^IBE(352.1,"D",$E(X,1,30),DA)
	;;^DD(352.1,.03,1,2,"DT")
	;;=2911022
	;;^DD(352.1,.03,21,0)
	;;=^^7^7^2920406^^^
	;;^DD(352.1,.03,21,1,0)
	;;=Every Appointment type has certain billing characteristics that may
	;;^DD(352.1,.03,21,2,0)
	;;=change over time.  For example, an appointment type may not be billable

IBINI037
IBINI037	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(352.1,.03,21,3,0)
	;;=for Category C Means Test billing one year but may the next depending
	;;^DD(352.1,.03,21,4,0)
	;;=on legislation.
	;;^DD(352.1,.03,21,5,0)
	;;= 
	;;^DD(352.1,.03,21,6,0)
	;;=It is only necessary to add a new effective date for an appointment type
	;;^DD(352.1,.03,21,7,0)
	;;=if the characteristics need to be time sensitive.
	;;^DD(352.1,.03,"DT")
	;;=2911022
	;;^DD(352.1,.04,0)
	;;=IGNORE MEANS TEST^RS^1:YES;0:NO;^0;4^Q
	;;^DD(352.1,.04,21,0)
	;;=^^2^2^2920415^^^
	;;^DD(352.1,.04,21,1,0)
	;;=Set this field to 'YES' if this appointment type should NOT be billed
	;;^DD(352.1,.04,21,2,0)
	;;=for Category C means test billing.
	;;^DD(352.1,.04,"DT")
	;;=2911021
	;;^DD(352.1,.05,0)
	;;=PRINT ON INSURANCE REPORT^RS^1:YES;0:NO;^0;5^Q
	;;^DD(352.1,.05,21,0)
	;;=^^2^2^2920207^
	;;^DD(352.1,.05,21,1,0)
	;;=Set this field to 'YES' if you would like this appointment type to show
	;;^DD(352.1,.05,21,2,0)
	;;=up on the list of Veterans with insurance and outpatient visits.
	;;^DD(352.1,.05,"DT")
	;;=2911021
	;;^DD(352.1,.06,0)
	;;=DISPLAY ON INPUT SCREEN^RS^1:YES;0:NO;^0;6^Q
	;;^DD(352.1,.06,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(352.1,.06,21,1,0)
	;;=Set this field to 'YES' if you would like this appointment type to
	;;^DD(352.1,.06,21,2,0)
	;;=be displayed as a potential billable visit on the outpatient visit
	;;^DD(352.1,.06,21,3,0)
	;;=screen when creating a third party bill.
	;;^DD(352.1,.06,"DT")
	;;=2911021

IBINI038
IBINI038	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(352.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,352.1)
	;;=^IBE(352.1,
	;;^UTILITY(U,$J,352.1,0)
	;;=BILLABLE APPOINTMENT TYPE^352.1I^10^10
	;;^UTILITY(U,$J,352.1,1,0)
	;;=1^1^2880101^1^0^0
	;;^UTILITY(U,$J,352.1,2,0)
	;;=2^2^2880101^1^0^1
	;;^UTILITY(U,$J,352.1,3,0)
	;;=3^3^2880101^1^1^0
	;;^UTILITY(U,$J,352.1,4,0)
	;;=4^4^2880101^1^0^1
	;;^UTILITY(U,$J,352.1,5,0)
	;;=5^5^2880101^1^0^0
	;;^UTILITY(U,$J,352.1,6,0)
	;;=6^6^2880101^1^0^0
	;;^UTILITY(U,$J,352.1,7,0)
	;;=7^7^2880101^1^0^1
	;;^UTILITY(U,$J,352.1,8,0)
	;;=8^8^2880101^1^0^0
	;;^UTILITY(U,$J,352.1,9,0)
	;;=9^9^2880101^0^1^1
	;;^UTILITY(U,$J,352.1,10,0)
	;;=10^10^2880101^1^1^1

IBINI039
IBINI039	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(352.2,0,"GL")
	;;=^IBE(352.2,
	;;^DIC("B","NON-BILLABLE DISPOSITIONS",352.2)
	;;=
	;;^DIC(352.2,"%D",0)
	;;=^^11^11^2940214^^^^
	;;^DIC(352.2,"%D",1,0)
	;;=This file shall be used to flag dispositions in the DISPOSITION (#37)
	;;^DIC(352.2,"%D",2,0)
	;;=file as either billable or non-billable for Means Test Billing.  The
	;;^DIC(352.2,"%D",3,0)
	;;=flagging of dispositions is date-sensitive, so the ability to not
	;;^DIC(352.2,"%D",4,0)
	;;=bill can be turned on or off.  The default billing action is TO BILL
	;;^DIC(352.2,"%D",5,0)
	;;=ALL dispositions; thus, it is only necessary to add entries to this
	;;^DIC(352.2,"%D",6,0)
	;;=file if billing of a particular disposition is not desired.
	;;^DIC(352.2,"%D",7,0)
	;;= 
	;;^DIC(352.2,"%D",8,0)
	;;=The routine IBEFUNC contains the function call to determine if a
	;;^DIC(352.2,"%D",9,0)
	;;=disposition should not be billed on a specific date.
	;;^DIC(352.2,"%D",10,0)
	;;= 
	;;^DIC(352.2,"%D",11,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(352.2,0)
	;;=FIELD^^.03^3
	;;^DD(352.2,0,"DDA")
	;;=N
	;;^DD(352.2,0,"DT")
	;;=2930720
	;;^DD(352.2,0,"IX","AIVDT",352.2,.01)
	;;=
	;;^DD(352.2,0,"IX","AIVDT1",352.2,.02)
	;;=
	;;^DD(352.2,0,"IX","B",352.2,.01)
	;;=
	;;^DD(352.2,0,"NM","NON-BILLABLE DISPOSITIONS")
	;;=
	;;^DD(352.2,.01,0)
	;;=DISPOSITION^RP37'^DIC(37,^0;1^Q
	;;^DD(352.2,.01,1,0)
	;;=^.1
	;;^DD(352.2,.01,1,1,0)
	;;=352.2^B
	;;^DD(352.2,.01,1,1,1)
	;;=S ^IBE(352.2,"B",$E(X,1,30),DA)=""
	;;^DD(352.2,.01,1,1,2)
	;;=K ^IBE(352.2,"B",$E(X,1,30),DA)
	;;^DD(352.2,.01,1,2,0)
	;;=352.2^AIVDT^MUMPS
	;;^DD(352.2,.01,1,2,1)
	;;=I $D(^IBE(352.2,DA,0)),$P(^(0),"^",2) S ^IBE(352.2,"AIVDT",X,-$P(^(0),"^",2),DA)=""
	;;^DD(352.2,.01,1,2,2)
	;;=I $D(^IBE(352.2,DA,0)),$P(^(0),"^",2) K ^IBE(352.2,"AIVDT",X,-$P(^(0),"^",2),DA)
	;;^DD(352.2,.01,1,2,"%D",0)
	;;=^^3^3^2930720^^
	;;^DD(352.2,.01,1,2,"%D",1,0)
	;;=This cross-reference on the DISPOSITION (#.01) field and the EFFECTIVE
	;;^DD(352.2,.01,1,2,"%D",2,0)
	;;=DATE (#.02) field is used to locate the appropriate record for a
	;;^DD(352.2,.01,1,2,"%D",3,0)
	;;=disposition on a specific effective date.
	;;^DD(352.2,.01,1,2,"DT")
	;;=2930720
	;;^DD(352.2,.01,3)
	;;=Please enter a disposition.
	;;^DD(352.2,.01,21,0)
	;;=^^3^3^2930805^^
	;;^DD(352.2,.01,21,1,0)
	;;=This field is a pointer to the DISPOSITION (#37) file, and identifies
	;;^DD(352.2,.01,21,2,0)
	;;=the disposition which is being established as either billable or
	;;^DD(352.2,.01,21,3,0)
	;;=non-billable for Means Test billing.
	;;^DD(352.2,.01,"DT")
	;;=2930720
	;;^DD(352.2,.02,0)
	;;=EFFECTIVE DATE^RD^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(352.2,.02,1,0)
	;;=^.1
	;;^DD(352.2,.02,1,1,0)
	;;=352.2^AIVDT1^MUMPS
	;;^DD(352.2,.02,1,1,1)
	;;=I $D(^IBE(352.2,DA,0)),+^(0) S ^IBE(352.2,"AIVDT",+^(0),-X,DA)=""
	;;^DD(352.2,.02,1,1,2)
	;;=I $D(^IBE(352.2,DA,0)),+^(0) K ^IBE(352.2,"AIVDT",+^(0),-X,DA)
	;;^DD(352.2,.02,1,1,"%D",0)
	;;=^^3^3^2930720^
	;;^DD(352.2,.02,1,1,"%D",1,0)
	;;=This cross-reference on the DISPOSITION (#.01) field and the EFFECTIVE
	;;^DD(352.2,.02,1,1,"%D",2,0)
	;;=DATE (#.02) field is used to locate the appropriate record for a
	;;^DD(352.2,.02,1,1,"%D",3,0)
	;;=disposition on a specific effective date.
	;;^DD(352.2,.02,1,1,"DT")
	;;=2930720
	;;^DD(352.2,.02,3)
	;;=Please enter an effective date.
	;;^DD(352.2,.02,21,0)
	;;=^^2^2^2930805^^
	;;^DD(352.2,.02,21,1,0)
	;;=This is the date on which Means Test billing for this disposition
	;;^DD(352.2,.02,21,2,0)
	;;=should be activated or ignored.

IBINI03A
IBINI03A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(352.2,.02,"DT")
	;;=2930720
	;;^DD(352.2,.03,0)
	;;=IGNORE MEANS TEST BILLING?^RS^1:YES;0:NO;^0;3^Q
	;;^DD(352.2,.03,3)
	;;=Please enter 'YES' or 'NO.'
	;;^DD(352.2,.03,21,0)
	;;=^^5^5^2930805^^^^
	;;^DD(352.2,.03,21,1,0)
	;;=This field is used to determine whether Means Test billing should
	;;^DD(352.2,.03,21,2,0)
	;;=be activated or ignored, as of the EFFECTIVE DATE (field #.02).
	;;^DD(352.2,.03,21,3,0)
	;;= 
	;;^DD(352.2,.03,21,4,0)
	;;=Please note that you only need an entry in this file for a disposition
	;;^DD(352.2,.03,21,5,0)
	;;=for which you would like Means Test billing to be IGNORED.
	;;^DD(352.2,.03,"DT")
	;;=2930805

IBINI03B
IBINI03B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(352.3,0,"GL")
	;;=^IBE(352.3,
	;;^DIC("B","NON-BILLABLE CLINIC STOP CODES",352.3)
	;;=
	;;^DIC(352.3,"%D",0)
	;;=^^12^12^2940214^^^^
	;;^DIC(352.3,"%D",1,0)
	;;=This file shall be used to flag clinic stop codes in the CLINIC
	;;^DIC(352.3,"%D",2,0)
	;;=STOP (#40.7) file as either billable or non-billable for Means
	;;^DIC(352.3,"%D",3,0)
	;;=Test Billing.  The flagging of the stop codes is date-sensitive,
	;;^DIC(352.3,"%D",4,0)
	;;=so the ability to not bill can be turned on or off.  The default
	;;^DIC(352.3,"%D",5,0)
	;;=billing action is TO BILL ALL stop codes; thus, it is only
	;;^DIC(352.3,"%D",6,0)
	;;=necessary to add entries to this file if billing of a particular
	;;^DIC(352.3,"%D",7,0)
	;;=clinic stop code is not desired.
	;;^DIC(352.3,"%D",8,0)
	;;= 
	;;^DIC(352.3,"%D",9,0)
	;;=The routine IBEFUNC contains the function call to determine if a
	;;^DIC(352.3,"%D",10,0)
	;;=clinic stop code should not be billed on a specific date.
	;;^DIC(352.3,"%D",11,0)
	;;= 
	;;^DIC(352.3,"%D",12,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(352.3,0)
	;;=FIELD^^.03^3
	;;^DD(352.3,0,"DDA")
	;;=N
	;;^DD(352.3,0,"DT")
	;;=2930720
	;;^DD(352.3,0,"IX","AIVDT",352.3,.01)
	;;=
	;;^DD(352.3,0,"IX","AIVDT1",352.3,.02)
	;;=
	;;^DD(352.3,0,"IX","B",352.3,.01)
	;;=
	;;^DD(352.3,0,"NM","NON-BILLABLE CLINIC STOP CODES")
	;;=
	;;^DD(352.3,.01,0)
	;;=CLINIC STOP CODE^RP40.7'^DIC(40.7,^0;1^Q
	;;^DD(352.3,.01,1,0)
	;;=^.1
	;;^DD(352.3,.01,1,1,0)
	;;=352.3^B
	;;^DD(352.3,.01,1,1,1)
	;;=S ^IBE(352.3,"B",$E(X,1,30),DA)=""
	;;^DD(352.3,.01,1,1,2)
	;;=K ^IBE(352.3,"B",$E(X,1,30),DA)
	;;^DD(352.3,.01,1,2,0)
	;;=352.3^AIVDT^MUMPS
	;;^DD(352.3,.01,1,2,1)
	;;=I $D(^IBE(352.3,DA,0)),$P(^(0),"^",2) S ^IBE(352.3,"AIVDT",X,-$P(^(0),"^",2),DA)=""
	;;^DD(352.3,.01,1,2,2)
	;;=I $D(^IBE(352.3,DA,0)),$P(^(0),"^",2) K ^IBE(352.3,"AIVDT",X,-$P(^(0),"^",2),DA)
	;;^DD(352.3,.01,1,2,"%D",0)
	;;=^^3^3^2930720^
	;;^DD(352.3,.01,1,2,"%D",1,0)
	;;=This cross-reference on the CLINIC STOP CODE (#.01) field and the
	;;^DD(352.3,.01,1,2,"%D",2,0)
	;;=EFFECTIVE DATE (#.02) field is used to locate the appropriate record
	;;^DD(352.3,.01,1,2,"%D",3,0)
	;;=for a clinic stop code on a specific effective date.
	;;^DD(352.3,.01,1,2,"DT")
	;;=2930720
	;;^DD(352.3,.01,3)
	;;=Please enter a clinic stop code.
	;;^DD(352.3,.01,21,0)
	;;=^^3^3^2930720^
	;;^DD(352.3,.01,21,1,0)
	;;=This field is a pointer to the CLINIC STOP (#40.7) file and identifies
	;;^DD(352.3,.01,21,2,0)
	;;=the clinic stop code which is being established as either billable
	;;^DD(352.3,.01,21,3,0)
	;;=or non-billable for Means Test billing.
	;;^DD(352.3,.01,"DT")
	;;=2930720
	;;^DD(352.3,.02,0)
	;;=EFFECTIVE DATE^RD^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(352.3,.02,1,0)
	;;=^.1
	;;^DD(352.3,.02,1,1,0)
	;;=352.3^AIVDT1^MUMPS
	;;^DD(352.3,.02,1,1,1)
	;;=I $D(^IBE(352.3,DA,0)),+^(0) S ^IBE(352.3,"AIVDT",+^(0),-X,DA)=""
	;;^DD(352.3,.02,1,1,2)
	;;=I $D(^IBE(352.3,DA,0)),+^(0) K ^IBE(352.3,"AIVDT",+^(0),-X,DA)
	;;^DD(352.3,.02,1,1,"%D",0)
	;;=^^3^3^2930720^
	;;^DD(352.3,.02,1,1,"%D",1,0)
	;;=This cross-reference on the CLINIC STOP CODE (#.01) field and the
	;;^DD(352.3,.02,1,1,"%D",2,0)
	;;=EFFECTIVE DATE (#.02) field is used to locate the appropriate record
	;;^DD(352.3,.02,1,1,"%D",3,0)
	;;=for a clinic stop code on a specific effective date.
	;;^DD(352.3,.02,1,1,"DT")
	;;=2930720
	;;^DD(352.3,.02,3)
	;;=Please enter an effective date.
	;;^DD(352.3,.02,21,0)
	;;=^^2^2^2930720^
	;;^DD(352.3,.02,21,1,0)
	;;=This is the date on which Means Test billing for this clinic stop

IBINI03C
IBINI03C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(352.3,.02,21,2,0)
	;;=code should be activated or ignored.
	;;^DD(352.3,.02,"DT")
	;;=2930720
	;;^DD(352.3,.03,0)
	;;=IGNORE MEANS TEST BILLING?^RS^1:YES;0:NO;^0;3^Q
	;;^DD(352.3,.03,3)
	;;=Please enter 'YES' or 'NO.'
	;;^DD(352.3,.03,21,0)
	;;=^^5^5^2930805^^^^
	;;^DD(352.3,.03,21,1,0)
	;;=This field is used to determine whether Means Test billing should
	;;^DD(352.3,.03,21,2,0)
	;;=be activated or ignored, as of the EFFECTIVE DATE (field #.02).
	;;^DD(352.3,.03,21,3,0)
	;;= 
	;;^DD(352.3,.03,21,4,0)
	;;=Please note that you only need an entry in this file for a clinic
	;;^DD(352.3,.03,21,5,0)
	;;=stop code for which you would like Means Test billing to be IGNORED.
	;;^DD(352.3,.03,"DT")
	;;=2930805

IBINI03D
IBINI03D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(352.4,0,"GL")
	;;=^IBE(352.4,
	;;^DIC("B","NON-BILLABLE CLINICS",352.4)
	;;=
	;;^DIC(352.4,"%D",0)
	;;=^^11^11^2940214^^^
	;;^DIC(352.4,"%D",1,0)
	;;=This file shall be used to flag clinics in the HOSPITAL LOCATION (#44)
	;;^DIC(352.4,"%D",2,0)
	;;=file as either billable or non-billable for Means Test Billing.  The
	;;^DIC(352.4,"%D",3,0)
	;;=flagging of clinics is date-sensitive, so the ability to not bill
	;;^DIC(352.4,"%D",4,0)
	;;=may be turned on or off.  Please note that the default billing action
	;;^DIC(352.4,"%D",5,0)
	;;=IS TO BILL all clinics; thus, it is only necessary to add entries in
	;;^DIC(352.4,"%D",6,0)
	;;=this file for clinics where Means Test billing is NOT desired.
	;;^DIC(352.4,"%D",7,0)
	;;= 
	;;^DIC(352.4,"%D",8,0)
	;;=The routine IBEFUNC contains the function call to determine if a
	;;^DIC(352.4,"%D",9,0)
	;;=clinic should be not billed on a specific date.
	;;^DIC(352.4,"%D",10,0)
	;;= 
	;;^DIC(352.4,"%D",11,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(352.4,0)
	;;=FIELD^^.03^3
	;;^DD(352.4,0,"DDA")
	;;=N
	;;^DD(352.4,0,"DT")
	;;=2930720
	;;^DD(352.4,0,"IX","AIVDT",352.4,.01)
	;;=
	;;^DD(352.4,0,"IX","AIVDT1",352.4,.02)
	;;=
	;;^DD(352.4,0,"IX","B",352.4,.01)
	;;=
	;;^DD(352.4,0,"NM","NON-BILLABLE CLINICS")
	;;=
	;;^DD(352.4,.01,0)
	;;=CLINIC^R*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(352.4,.01,1,0)
	;;=^.1
	;;^DD(352.4,.01,1,1,0)
	;;=352.4^B
	;;^DD(352.4,.01,1,1,1)
	;;=S ^IBE(352.4,"B",$E(X,1,30),DA)=""
	;;^DD(352.4,.01,1,1,2)
	;;=K ^IBE(352.4,"B",$E(X,1,30),DA)
	;;^DD(352.4,.01,1,2,0)
	;;=352.4^AIVDT^MUMPS
	;;^DD(352.4,.01,1,2,1)
	;;=I $D(^IBE(352.4,DA,0)),$P(^(0),"^",2) S ^IBE(352.4,"AIVDT",X,-$P(^(0),"^",2),DA)=""
	;;^DD(352.4,.01,1,2,2)
	;;=I $D(^IBE(352.4,DA,0)),$P(^(0),"^",2) K ^IBE(352.4,"AIVDT",X,-$P(^(0),"^",2),DA)
	;;^DD(352.4,.01,1,2,"%D",0)
	;;=^^3^3^2930720^
	;;^DD(352.4,.01,1,2,"%D",1,0)
	;;=This cross-reference on the CLINIC (#.01) field and the EFFECTIVE DATE
	;;^DD(352.4,.01,1,2,"%D",2,0)
	;;=(#.02) field is used to locate the appropriate record for a clinic on
	;;^DD(352.4,.01,1,2,"%D",3,0)
	;;=a specific effective date.
	;;^DD(352.4,.01,1,2,"DT")
	;;=2930720
	;;^DD(352.4,.01,3)
	;;=Please enter a clinic.
	;;^DD(352.4,.01,12)
	;;=This screen is used to assure that only clinics in file #44 are selected.
	;;^DD(352.4,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""C"""
	;;^DD(352.4,.01,21,0)
	;;=^^3^3^2930720^
	;;^DD(352.4,.01,21,1,0)
	;;=This field is a pointer to the HOSPITAL LOCATION (#44) file and
	;;^DD(352.4,.01,21,2,0)
	;;=identifies the clinic which is being flagged as billable or
	;;^DD(352.4,.01,21,3,0)
	;;=non-billable for Means Test billing.
	;;^DD(352.4,.01,"DT")
	;;=2930720
	;;^DD(352.4,.02,0)
	;;=EFFECTIVE DATE^RD^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(352.4,.02,1,0)
	;;=^.1
	;;^DD(352.4,.02,1,1,0)
	;;=352.4^AIVDT1^MUMPS
	;;^DD(352.4,.02,1,1,1)
	;;=I $D(^IBE(352.4,DA,0)),+^(0) S ^IBE(352.4,"AIVDT",+^(0),-X,DA)=""
	;;^DD(352.4,.02,1,1,2)
	;;=I $D(^IBE(352.4,DA,0)),+^(0) K ^IBE(352.4,"AIVDT",+^(0),-X,DA)
	;;^DD(352.4,.02,1,1,"%D",0)
	;;=^^3^3^2930720^
	;;^DD(352.4,.02,1,1,"%D",1,0)
	;;=This cross-reference on the CLINIC (#.01) field and the EFFECTIVE DATE
	;;^DD(352.4,.02,1,1,"%D",2,0)
	;;=(#.02) field is used to locate the appropriate record for a clinic on
	;;^DD(352.4,.02,1,1,"%D",3,0)
	;;=a specific effective date.
	;;^DD(352.4,.02,1,1,"DT")
	;;=2930720
	;;^DD(352.4,.02,3)
	;;=Please enter the effective date.
	;;^DD(352.4,.02,21,0)
	;;=^^2^2^2930720^

IBINI03E
IBINI03E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(352.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(352.4,.02,21,1,0)
	;;=This is the date on which Means Test billing for this clinic
	;;^DD(352.4,.02,21,2,0)
	;;=should be ignored or activated.
	;;^DD(352.4,.02,"DT")
	;;=2930720
	;;^DD(352.4,.03,0)
	;;=IGNORE MEANS TEST BILLING?^RS^1:YES;0:NO;^0;3^Q
	;;^DD(352.4,.03,3)
	;;=Please enter 'YES' or 'NO.'
	;;^DD(352.4,.03,21,0)
	;;=^^5^5^2930805^^
	;;^DD(352.4,.03,21,1,0)
	;;=This field is used to determine whether Means Test billing should
	;;^DD(352.4,.03,21,2,0)
	;;=be ignored or activated, as of the EFFECTIVE DATE (field #.02).
	;;^DD(352.4,.03,21,3,0)
	;;= 
	;;^DD(352.4,.03,21,4,0)
	;;=Please note that you only need an entry in this file for a clinic
	;;^DD(352.4,.03,21,5,0)
	;;=for which you would like Means Test billing to be IGNORED.
	;;^DD(352.4,.03,"DT")
	;;=2930720

IBINI03F
IBINI03F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(353)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(353,0,"GL")
	;;=^IBE(353,
	;;^DIC("B","BILL FORM TYPE",353)
	;;=
	;;^DIC(353,"%D",0)
	;;=^^13^13^2940214^^^^
	;;^DIC(353,"%D",1,0)
	;;=This is a reference file containing the types of health insurance
	;;^DIC(353,"%D",2,0)
	;;=claim forms used in billing.
	;;^DIC(353,"%D",3,0)
	;;= 
	;;^DIC(353,"%D",4,0)
	;;=Sites may add local forms to this file however, the number of entries
	;;^DIC(353,"%D",5,0)
	;;=for locally added forms should be in the stations number range of
	;;^DIC(353,"%D",6,0)
	;;=Station number time 1000.  
	;;^DIC(353,"%D",7,0)
	;;= 
	;;^DIC(353,"%D",8,0)
	;;=If other than UB-82 forms are pointed to by the BILL/CLAIMS file, then
	;;^DIC(353,"%D",9,0)
	;;=the follow-up letter job will create a separate tasked job for each
	;;^DIC(353,"%D",10,0)
	;;=bill to the Follow-up Printer for that form using the specified routine
	;;^DIC(353,"%D",11,0)
	;;=for that form.
	;;^DIC(353,"%D",12,0)
	;;= 
	;;^DIC(353,"%D",13,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(353,0)
	;;=FIELD^^.001^5
	;;^DD(353,0,"DDA")
	;;=N
	;;^DD(353,0,"DT")
	;;=2940112
	;;^DD(353,0,"IX","B",353,.01)
	;;=
	;;^DD(353,0,"NM","BILL FORM TYPE")
	;;=
	;;^DD(353,0,"PT",36,.14)
	;;=
	;;^DD(353,0,"PT",350.9,1.26)
	;;=
	;;^DD(353,0,"PT",399,.19)
	;;=
	;;^DD(353,.001,0)
	;;=NUMBER^NJ7,0^^ ^K:+X'=X!(X>9999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(353,.001,3)
	;;=Type a Number between 1 and 9999999, 0 Decimal Digits
	;;^DD(353,.001,21,0)
	;;=^^2^2^2920427^^
	;;^DD(353,.001,21,1,0)
	;;=Enter a number that is within the number range for your facility,
	;;^DD(353,.001,21,2,0)
	;;=that is xxx000 to xxx999 where xxx is your station number.
	;;^DD(353,.001,"DT")
	;;=2920427
	;;^DD(353,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>20!($L(X)<3)!'(X'?1P.E) X
	;;^DD(353,.01,1,0)
	;;=^.1
	;;^DD(353,.01,1,1,0)
	;;=353^B
	;;^DD(353,.01,1,1,1)
	;;=S ^IBE(353,"B",$E(X,1,30),DA)=""
	;;^DD(353,.01,1,1,2)
	;;=K ^IBE(353,"B",$E(X,1,30),DA)
	;;^DD(353,.01,3)
	;;=Answer must be 3-20 characters in length.
	;;^DD(353,.01,21,0)
	;;=^^1^1^2920427^^^
	;;^DD(353,.01,21,1,0)
	;;=This field names a type of form that is available for billing purposes.
	;;^DD(353,.01,"DEL",1,0)
	;;=I DA<999 W !,"Deleting Standard entries not allowed"
	;;^DD(353,.01,"DT")
	;;=2920410
	;;^DD(353,.02,0)
	;;=DEFAULT PRINTER (BILLING)^FX^^0;2^S IBL=X,X=$P(X,";"),DIC=3.5,DIC(0)="EQ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=X_$S(IBL[";":";"_$P(IBL,";",2,99),1:"") K IBL S DIC=DIE
	;;^DD(353,.02,3)
	;;=Enter the device that is the default billing printer for this form.
	;;^DD(353,.02,4)
	;;=S DIC=3.5,DIC(0)="E",X="?" D ^DIC S DIC=DIE
	;;^DD(353,.02,21,0)
	;;=^^2^2^2940112^^
	;;^DD(353,.02,21,1,0)
	;;=This is the default printer that will appear at selected prompts for
	;;^DD(353,.02,21,2,0)
	;;=this form type.
	;;^DD(353,.02,"DT")
	;;=2920427
	;;^DD(353,.03,0)
	;;=FOLLOW-UP PRINTER (A/R)^FX^^0;3^S IBL=X,X=$P(X,";"),DIC=3.5,DIC(0)="EQ" D ^DIC K:Y'>0!(X=" ") X S:$D(X) X=X_$S(IBL[";":";"_$P(IBL,";",2,99),1:"") K IBL S DIC=DIE
	;;^DD(353,.03,3)
	;;=Enter the device that is the default printer for follow-up bills for this form type.
	;;^DD(353,.03,4)
	;;=S DIC=3.5,DIC(0)="E",X="?" D ^DIC S DIC=DIE
	;;^DD(353,.03,21,0)
	;;=^^2^2^2940213^^^^
	;;^DD(353,.03,21,1,0)
	;;=For forms other than the UB-82/UB-92, this is the default printer that has this
	;;^DD(353,.03,21,2,0)
	;;=form mounted for follow-up letter/forms for Accounts Receivable.
	;;^DD(353,.03,"DT")
	;;=2920427
	;;^DD(353,1.01,0)
	;;=ROUTINE^FX^^1;E1,245^K:$L(X)>25!($L(X)<1)!(X'?.1ANP.7AN.1"^"1ANP.7AN) X

IBINI03G
IBINI03G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(353)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(353,1.01,3)
	;;=Answer must be 1-25 characters in length.  It must be in the form of [TAG^]ROUTINE.
	;;^DD(353,1.01,21,0)
	;;=^^2^2^2940213^^^^
	;;^DD(353,1.01,21,1,0)
	;;=This is the routine that will get executed for follow-up letters and bills 
	;;^DD(353,1.01,21,2,0)
	;;=printed in a batch if this is not a UB-82 entry.
	;;^DD(353,1.01,"DT")
	;;=2920427

IBINI03H
IBINI03H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(353)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,353)
	;;=^IBE(353,
	;;^UTILITY(U,$J,353,0)
	;;=BILL FORM TYPE^353^4^4
	;;^UTILITY(U,$J,353,1,0)
	;;=UB-82^^^^
	;;^UTILITY(U,$J,353,2,0)
	;;=HCFA 1500^^^^
	;;^UTILITY(U,$J,353,2,1)
	;;=EN^IBCF2
	;;^UTILITY(U,$J,353,3,0)
	;;=UB-92^^
	;;^UTILITY(U,$J,353,3,1)
	;;=EN^IBCF3
	;;^UTILITY(U,$J,353,4,0)
	;;=BILL ADDENDUM^^
	;;^UTILITY(U,$J,353,4,1)
	;;=EN^IBCF4

IBINI03I
IBINI03I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(353.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(353.1,0,"GL")
	;;=^IBE(353.1,
	;;^DIC("B","PLACE OF SERVICE",353.1)
	;;=
	;;^DIC(353.1,"%D",0)
	;;=^^5^5^2940214^^
	;;^DIC(353.1,"%D",1,0)
	;;=This is a reference file containing the Place of Service codes that may be
	;;^DIC(353.1,"%D",2,0)
	;;=associated with a procedure.  This is a set of codes specifically defined to
	;;^DIC(353.1,"%D",3,0)
	;;=be used on the HCFA 1500.
	;;^DIC(353.1,"%D",4,0)
	;;= 
	;;^DIC(353.1,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(353.1,0)
	;;=FIELD^^.03^3
	;;^DD(353.1,0,"DDA")
	;;=N
	;;^DD(353.1,0,"DT")
	;;=2920429
	;;^DD(353.1,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(353.1,0,"IX","B",353.1,.01)
	;;=
	;;^DD(353.1,0,"IX","C",353.1,.02)
	;;=
	;;^DD(353.1,0,"NM","PLACE OF SERVICE")
	;;=
	;;^DD(353.1,0,"PT",162.03,30)
	;;=
	;;^DD(353.1,0,"PT",399,168)
	;;=
	;;^DD(353.1,0,"PT",399.0304,8)
	;;=
	;;^DD(353.1,.01,0)
	;;=CODE^RF^^0;1^K:$L(X)>7!($L(X)<1)!'(X'?1P.E) X
	;;^DD(353.1,.01,1,0)
	;;=^.1
	;;^DD(353.1,.01,1,1,0)
	;;=353.1^B
	;;^DD(353.1,.01,1,1,1)
	;;=S ^IBE(353.1,"B",$E(X,1,30),DA)=""
	;;^DD(353.1,.01,1,1,2)
	;;=K ^IBE(353.1,"B",$E(X,1,30),DA)
	;;^DD(353.1,.01,3)
	;;=Answer must be 1-7 characters in length.
	;;^DD(353.1,.01,21,0)
	;;=^^2^2^2920427^^^
	;;^DD(353.1,.01,21,1,0)
	;;=This is the code identifing the Place of Service associated
	;;^DD(353.1,.01,21,2,0)
	;;=with a visit.  Printed on the HCFA 1500.
	;;^DD(353.1,.01,"DT")
	;;=2920427
	;;^DD(353.1,.02,0)
	;;=NAME^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<3) X
	;;^DD(353.1,.02,1,0)
	;;=^.1
	;;^DD(353.1,.02,1,1,0)
	;;=353.1^C
	;;^DD(353.1,.02,1,1,1)
	;;=S ^IBE(353.1,"C",$E(X,1,30),DA)=""
	;;^DD(353.1,.02,1,1,2)
	;;=K ^IBE(353.1,"C",$E(X,1,30),DA)
	;;^DD(353.1,.02,1,1,3)
	;;=DO NOT DELETE
	;;^DD(353.1,.02,1,1,"DT")
	;;=2920630
	;;^DD(353.1,.02,3)
	;;=Answer must be 3-50 characters in length.
	;;^DD(353.1,.02,21,0)
	;;=^^1^1^2920429^^^^
	;;^DD(353.1,.02,21,1,0)
	;;=This is the full name/description of this code.
	;;^DD(353.1,.02,"DT")
	;;=2920630
	;;^DD(353.1,.03,0)
	;;=ABBREVIATION^RF^^0;3^K:$L(X)>20!($L(X)<2) X
	;;^DD(353.1,.03,3)
	;;=Answer must be 2-20 characters in length.
	;;^DD(353.1,.03,21,0)
	;;=^^2^2^2920427^
	;;^DD(353.1,.03,21,1,0)
	;;=This is the abbreviation of the name of this entry.  This will most often
	;;^DD(353.1,.03,21,2,0)
	;;=be used for printing on reports.
	;;^DD(353.1,.03,"DT")
	;;=2920427

IBINI03J
IBINI03J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(353.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,353.1)
	;;=^IBE(353.1,
	;;^UTILITY(U,$J,353.1,0)
	;;=PLACE OF SERVICE^353.1I^27^27
	;;^UTILITY(U,$J,353.1,1,0)
	;;=11^OFFICE^OFFICE
	;;^UTILITY(U,$J,353.1,2,0)
	;;=12^HOME^HOME
	;;^UTILITY(U,$J,353.1,3,0)
	;;=21^INPATIENT HOSPITAL^INPATIENT HOSPITAL
	;;^UTILITY(U,$J,353.1,4,0)
	;;=22^OUTPATIENT HOSPITAL^OUTPATIENT HOSPITAL
	;;^UTILITY(U,$J,353.1,5,0)
	;;=23^EMERGENCY ROOM - HOSPITAL^HOSP. EMERGENCY RM.
	;;^UTILITY(U,$J,353.1,6,0)
	;;=24^AMBULATORY SURGICAL CENTER^AMB. SURG. CENTER
	;;^UTILITY(U,$J,353.1,7,0)
	;;=25^BIRTHING CENTER^BIRTHING CENTER
	;;^UTILITY(U,$J,353.1,8,0)
	;;=26^MILITARY TREATMENT FACILITY^MILITARY TRTMT FAC.
	;;^UTILITY(U,$J,353.1,9,0)
	;;=31^SKILLED NURSING FACILITY^SKILLED NURSING FAC.
	;;^UTILITY(U,$J,353.1,10,0)
	;;=32^NURSING FACILITY^NURSING FACILITY
	;;^UTILITY(U,$J,353.1,11,0)
	;;=33^CUSTODIAL CARE FACILITY^CUSTODIAL CARE FAC.
	;;^UTILITY(U,$J,353.1,12,0)
	;;=34^HOSPICE^HOSPICE
	;;^UTILITY(U,$J,353.1,13,0)
	;;=41^AMBULANCE - LAND^AMBULANCE - LAND
	;;^UTILITY(U,$J,353.1,14,0)
	;;=42^AMBULANCE - AIR OR WATER^AMBULANCE  AIR/WATER
	;;^UTILITY(U,$J,353.1,15,0)
	;;=51^INPATIENT PSYCHIATRIC FACILITY^INPT PSYCH. FAC
	;;^UTILITY(U,$J,353.1,16,0)
	;;=52^PSY. FAC. PARTIAL HOSPITALIZATION^PSY FAC PART HOSP
	;;^UTILITY(U,$J,353.1,17,0)
	;;=53^COMMUNITY MENTAL HEALTH CENTER^COMM MENTAL HLTH CTR
	;;^UTILITY(U,$J,353.1,18,0)
	;;=54^INTERMEDIATE CARE FAC/MENTALLY RETARDED^INTER. CARE FAC/MR
	;;^UTILITY(U,$J,353.1,19,0)
	;;=55^RESIDENTIAL SUBSTANCE ABUSE TREATMENT FACILITY^RES. SUB. ABUSE FAC.
	;;^UTILITY(U,$J,353.1,20,0)
	;;=56^PSYCHIATRIC RESIDENTIAL TREATMENT CENTER^PSY RESID TRTMT CTR
	;;^UTILITY(U,$J,353.1,21,0)
	;;=61^COMPREHENSIVE INPATIENT REHABILITATION FACILITY^COMP INPT REHAB FAC
	;;^UTILITY(U,$J,353.1,22,0)
	;;=62^COMPREHENSIVE OUTPATIENT REHABILITATION FACILITY^COMP OUTPT REHAB FAC
	;;^UTILITY(U,$J,353.1,23,0)
	;;=65^END STAGE RENAL DISEASE TREATMENT FACILITY^END STAGE RENAL T F
	;;^UTILITY(U,$J,353.1,24,0)
	;;=71^STATE OR LOCAL PUBLIC HEALTH CLINIC^ST/LOC PUB HLTH CLN
	;;^UTILITY(U,$J,353.1,25,0)
	;;=72^RURAL HEALTH CLINIC^RURAL HEALTH CLINIC
	;;^UTILITY(U,$J,353.1,26,0)
	;;=81^INDEPENDENT LABORATORY^INDEPENDENT LAB
	;;^UTILITY(U,$J,353.1,27,0)
	;;=99^OTHER UNLISTED FACILITY^OTHER UNLISTED FAC

IBINI03K
IBINI03K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(353.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(353.2,0,"GL")
	;;=^IBE(353.2,
	;;^DIC("B","TYPE OF SERVICE",353.2)
	;;=
	;;^DIC(353.2,"%D",0)
	;;=^^5^5^2940214^^
	;;^DIC(353.2,"%D",1,0)
	;;=This is a reference file containing the Types of Services that may be
	;;^DIC(353.2,"%D",2,0)
	;;=associated with a procedure.  This set is specifically defined for the
	;;^DIC(353.2,"%D",3,0)
	;;=HCFA 1500.
	;;^DIC(353.2,"%D",4,0)
	;;= 
	;;^DIC(353.2,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(353.2,0)
	;;=FIELD^^.03^3
	;;^DD(353.2,0,"DDA")
	;;=N
	;;^DD(353.2,0,"DT")
	;;=2920429
	;;^DD(353.2,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(353.2,0,"IX","B",353.2,.01)
	;;=
	;;^DD(353.2,0,"IX","C",353.2,.02)
	;;=
	;;^DD(353.2,0,"NM","TYPE OF SERVICE")
	;;=
	;;^DD(353.2,0,"PT",162.03,31)
	;;=
	;;^DD(353.2,0,"PT",399,169)
	;;=
	;;^DD(353.2,0,"PT",399.0304,9)
	;;=
	;;^DD(353.2,.01,0)
	;;=CODE^RF^^0;1^K:$L(X)>7!($L(X)<1)!'(X'?1P.E) X
	;;^DD(353.2,.01,1,0)
	;;=^.1
	;;^DD(353.2,.01,1,1,0)
	;;=353.2^B
	;;^DD(353.2,.01,1,1,1)
	;;=S ^IBE(353.2,"B",$E(X,1,30),DA)=""
	;;^DD(353.2,.01,1,1,2)
	;;=K ^IBE(353.2,"B",$E(X,1,30),DA)
	;;^DD(353.2,.01,3)
	;;=Answer must be 1-7 characters in length.
	;;^DD(353.2,.01,21,0)
	;;=^^2^2^2920427^
	;;^DD(353.2,.01,21,1,0)
	;;=This is the code that identifies a Type of Service associated with a visit
	;;^DD(353.2,.01,21,2,0)
	;;=on the HCFA 1500.
	;;^DD(353.2,.01,"DT")
	;;=2920427
	;;^DD(353.2,.02,0)
	;;=NAME^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<3) X
	;;^DD(353.2,.02,1,0)
	;;=^.1
	;;^DD(353.2,.02,1,1,0)
	;;=353.2^C
	;;^DD(353.2,.02,1,1,1)
	;;=S ^IBE(353.2,"C",$E(X,1,30),DA)=""
	;;^DD(353.2,.02,1,1,2)
	;;=K ^IBE(353.2,"C",$E(X,1,30),DA)
	;;^DD(353.2,.02,1,1,3)
	;;=DO NOT DELETE
	;;^DD(353.2,.02,1,1,"DT")
	;;=2920630
	;;^DD(353.2,.02,3)
	;;=Answer must be 3-50 characters in length.
	;;^DD(353.2,.02,21,0)
	;;=^^1^1^2920429^^^
	;;^DD(353.2,.02,21,1,0)
	;;=This is the full name/description of this Type of Service.
	;;^DD(353.2,.02,"DT")
	;;=2920630
	;;^DD(353.2,.03,0)
	;;=ABBREVIATION^RF^^0;3^K:$L(X)>20!($L(X)<2) X
	;;^DD(353.2,.03,3)
	;;=Answer must be 2-20 characters in length.
	;;^DD(353.2,.03,21,0)
	;;=^^2^2^2920427^
	;;^DD(353.2,.03,21,1,0)
	;;=This is the abbreviation of the name of this entry.  Will primarily be
	;;^DD(353.2,.03,21,2,0)
	;;=used for reports.
	;;^DD(353.2,.03,"DT")
	;;=2920427

IBINI03L
IBINI03L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(353.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,353.2)
	;;=^IBE(353.2,
	;;^UTILITY(U,$J,353.2,0)
	;;=TYPE OF SERVICE^353.2I^21^21
	;;^UTILITY(U,$J,353.2,1,0)
	;;=1^MEDICAL CARE^MEDICAL CARE
	;;^UTILITY(U,$J,353.2,2,0)
	;;=2^SURGERY^SURGERY
	;;^UTILITY(U,$J,353.2,3,0)
	;;=3^CONSULTATION^CONSULTATION
	;;^UTILITY(U,$J,353.2,4,0)
	;;=4^DIAGNOSTIC X-RAY^DIAGNOSTIC X-RAY
	;;^UTILITY(U,$J,353.2,5,0)
	;;=5^DIAGNOSTIC LABORATORY^DIAGNOSTIC LAB
	;;^UTILITY(U,$J,353.2,6,0)
	;;=6^RADIATION THERAPY^RADIATION THERAPY
	;;^UTILITY(U,$J,353.2,7,0)
	;;=7^ANESTHESIA^ANESTHESIA
	;;^UTILITY(U,$J,353.2,8,0)
	;;=8^ASSISTANCE AT SURGERY^SURGERY ASSISTANCE
	;;^UTILITY(U,$J,353.2,9,0)
	;;=9^OTHER MEDICAL SERVICE^OTHER MED SERVICE
	;;^UTILITY(U,$J,353.2,10,0)
	;;=0^BLOOD OR PACKED RED CELLS^BLD/PACKED RED CELLS
	;;^UTILITY(U,$J,353.2,11,0)
	;;=A^USED DME^USED DME
	;;^UTILITY(U,$J,353.2,12,0)
	;;=B^AMBULATORY SURGICAL CENTER^AMB. SURG. CENTER
	;;^UTILITY(U,$J,353.2,13,0)
	;;=H^HOSPICE^HOSPICE
	;;^UTILITY(U,$J,353.2,14,0)
	;;=L^RENTAL SUPPLIES IN THE HOME^RENTAL SUPPLIES/HOME
	;;^UTILITY(U,$J,353.2,15,0)
	;;=M^ALTERNATE PAYMENT FOR MAINTENANCE DIALYSIS^ALT PMT/MNT DIALYSIS
	;;^UTILITY(U,$J,353.2,16,0)
	;;=N^KIDNEY DONOR^KIDNEY DONOR
	;;^UTILITY(U,$J,353.2,17,0)
	;;=V^PNEUMOCOCCAL VACCINE^PNEUMOCOCCAL VACCINE
	;;^UTILITY(U,$J,353.2,18,0)
	;;=Y^SECOND OPINION ON ELECTIVE SURGERY^2ND OPIN/ELECT SURG
	;;^UTILITY(U,$J,353.2,19,0)
	;;=Z^THIRD OPINION ON ELECTIVE SURGERY^3RD OPIN/ELECT SURG
	;;^UTILITY(U,$J,353.2,20,0)
	;;=43^DIAGNOSTIC X-RAY/PROFESSIONAL COMPONENT^DIAG XRAY/PROF CMNT
	;;^UTILITY(U,$J,353.2,21,0)
	;;=53^DIAGNOSTIC LAB/PROFESSIONAL COMPONENT^DIAG LAB/PROF CMNT

IBINI03M
IBINI03M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354,0,"GL")
	;;=^IBA(354,
	;;^DIC("B","BILLING PATIENT",354)
	;;=
	;;^DIC(354,"%D",0)
	;;=^^21^21^2940307^^^^
	;;^DIC(354,"%D",1,0)
	;;=DO NOT EDIT THIS FILE.
	;;^DIC(354,"%D",2,0)
	;;= 
	;;^DIC(354,"%D",3,0)
	;;=Under normal operation it is not necessary to edit the fields in this
	;;^DIC(354,"%D",4,0)
	;;=file directly.  The option Manually Change Copay Exemption (Hardships) can
	;;^DIC(354,"%D",5,0)
	;;=be used to update and correct this entry by creating a new exemption.
	;;^DIC(354,"%D",6,0)
	;;=If many patient records have problems the option Print/Verify Patient
	;;^DIC(354,"%D",7,0)
	;;=Exemption Status can be used to correct the entries.
	;;^DIC(354,"%D",8,0)
	;;= 
	;;^DIC(354,"%D",9,0)
	;;=The data in this file is updated each time a new (current) exemption
	;;^DIC(354,"%D",10,0)
	;;=is created for a patient.  Exemptions are automatically created when
	;;^DIC(354,"%D",11,0)
	;;=changes in patient information change the exemption status or when
	;;^DIC(354,"%D",12,0)
	;;=an expired (older than 1 year) exemption is encountered when determining
	;;^DIC(354,"%D",13,0)
	;;=the exemption status for pharmacy.
	;;^DIC(354,"%D",14,0)
	;;= 
	;;^DIC(354,"%D",15,0)
	;;=This file will contain specific information related to billing about
	;;^DIC(354,"%D",16,0)
	;;=individual patients.  Current Status of the Medication Copayment Exemption
	;;^DIC(354,"%D",17,0)
	;;=will be kept in this file.  Conceptually this is different than the
	;;^DIC(354,"%D",18,0)
	;;=BILLING EXEMPTIONS File which maintains the audit log and historical data
	;;^DIC(354,"%D",19,0)
	;;=related to billing exemptions.
	;;^DIC(354,"%D",20,0)
	;;= 
	;;^DIC(354,"%D",21,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354,0)
	;;=FIELD^^.05^4
	;;^DD(354,0,"DDA")
	;;=N
	;;^DD(354,0,"DT")
	;;=2930210
	;;^DD(354,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(354,0,"ID",.05)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(354.2,+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(354.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(354,0,"IX","AC",354,.05)
	;;=
	;;^DD(354,0,"IX","AD",354,.03)
	;;=
	;;^DD(354,0,"IX","AEX",354,.04)
	;;=
	;;^DD(354,0,"IX","B",354,.01)
	;;=
	;;^DD(354,0,"NM","BILLING PATIENT")
	;;=
	;;^DD(354,0,"PT",354.1,.02)
	;;=
	;;^DD(354,.01,0)
	;;=PATIENT NAME^RP2'X^DPT(^0;1^S DINUM=X
	;;^DD(354,.01,1,0)
	;;=^.1
	;;^DD(354,.01,1,1,0)
	;;=354^B
	;;^DD(354,.01,1,1,1)
	;;=S ^IBA(354,"B",$E(X,1,30),DA)=""
	;;^DD(354,.01,1,1,2)
	;;=K ^IBA(354,"B",$E(X,1,30),DA)
	;;^DD(354,.01,3)
	;;=Enter the name of the patient as it appears in the patient file or enter the SSN or last four.
	;;^DD(354,.01,21,0)
	;;=^^1^1^2930121^^
	;;^DD(354,.01,21,1,0)
	;;=This is the name of the patient as it appears in the patient file.
	;;^DD(354,.01,23,0)
	;;=^^2^2^2930121^^
	;;^DD(354,.01,23,1,0)
	;;=This field is the pointer to the PATIENT file.  It will use the same
	;;^DD(354,.01,23,2,0)
	;;=internal entry number in this file as in the PATIENT file.
	;;^DD(354,.01,"DEL",1,0)
	;;=I 1 W !,"Deleting entries not allowed"
	;;^DD(354,.01,"DT")
	;;=2930121
	;;^DD(354,.03,0)
	;;=COPAY EXEMPTION STATUS DATE^RDX^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X K:X'=$P(^IBA(354,DA,0),U,3) X
	;;^DD(354,.03,.1)
	;;=CURRENT RX COPAY INCOME EXEMPTION STATUS DATE
	;;^DD(354,.03,1,0)
	;;=^.1
	;;^DD(354,.03,1,1,0)
	;;=354^AD
	;;^DD(354,.03,1,1,1)
	;;=S ^IBA(354,"AD",$E(X,1,30),DA)=""
	;;^DD(354,.03,1,1,2)
	;;=K ^IBA(354,"AD",$E(X,1,30),DA)

IBINI03N
IBINI03N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354,.03,1,1,"DT")
	;;=2930121
	;;^DD(354,.03,3)
	;;=Enter the date of the current income exemption.
	;;^DD(354,.03,5,1,0)
	;;=354^.04^2
	;;^DD(354,.03,9)
	;;=^
	;;^DD(354,.03,21,0)
	;;=^^5^5^2940213^^^^
	;;^DD(354,.03,21,1,0)
	;;=DO NOT EDIT THIS FIELD.  It is maintained by the Copay Exemption Software.
	;;^DD(354,.03,21,2,0)
	;;= 
	;;^DD(354,.03,21,3,0)
	;;=This is the date that this patients Medication Copay Income Exemption 
	;;^DD(354,.03,21,4,0)
	;;=Status was last updated.  If this date is not in the current calendar 
	;;^DD(354,.03,21,5,0)
	;;=year this patient will be flagged as needing to have his status updated.
	;;^DD(354,.03,23,0)
	;;=^^5^5^2940213^^^^
	;;^DD(354,.03,23,1,0)
	;;=This field will be updated by the Copay Exemption software every time
	;;^DD(354,.03,23,2,0)
	;;=a new current exemption is added.  It should not be edited.
	;;^DD(354,.03,23,3,0)
	;;= 
	;;^DD(354,.03,23,4,0)
	;;=Programmers must 4 slash stuff data into this field to bypass the input
	;;^DD(354,.03,23,5,0)
	;;=transform.
	;;^DD(354,.03,"DT")
	;;=2930210
	;;^DD(354,.04,0)
	;;=COPAY INCOME EXEMPTION STATUS^R*S^1:EXEMPT;0:NON-EXEMPT;^0;4^Q
	;;^DD(354,.04,.1)
	;;=RX COPAY CURRENT INCOME EXEMPTION STATUS
	;;^DD(354,.04,1,0)
	;;=^.1^^-1
	;;^DD(354,.04,1,1,0)
	;;=354^AEX
	;;^DD(354,.04,1,1,1)
	;;=S ^IBA(354,"AEX",$E(X,1,30),DA)=""
	;;^DD(354,.04,1,1,2)
	;;=K ^IBA(354,"AEX",$E(X,1,30),DA)
	;;^DD(354,.04,1,1,"%D",0)
	;;=^^2^2^2930429^^^
	;;^DD(354,.04,1,1,"%D",1,0)
	;;=This is a regular cross-reference of the Pharmacy Copay Income Exemption
	;;^DD(354,.04,1,1,"%D",2,0)
	;;=Status of patients for their most recent status.
	;;^DD(354,.04,1,1,"DT")
	;;=2921109
	;;^DD(354,.04,1,2,0)
	;;=^^TRIGGER^354^.03
	;;^DD(354,.04,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(354,.04,1,2,1.4)
	;;^DD(354,.04,1,2,1.4)
	;;=S DIH=$S($D(^IBA(354,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=354,DIG=.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(354,.04,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBA(354,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=354,DIG=.03 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(354,.04,1,2,"CREATE VALUE")
	;;=S X=DT
	;;^DD(354,.04,1,2,"DELETE VALUE")
	;;=@
	;;^DD(354,.04,1,2,"DT")
	;;=2921109
	;;^DD(354,.04,1,2,"FIELD")
	;;=#.03
	;;^DD(354,.04,3)
	;;=Enter whether this patient is currently exempt from pharmacy copay due to the income exemption.
	;;^DD(354,.04,9)
	;;=^
	;;^DD(354,.04,12)
	;;=This field can only be edited/updated by the Copay Exemption software.
	;;^DD(354,.04,12.1)
	;;=S DIC("S")="I $P(^IBA(354,DA,0),U,4)=Y!($G(IBJOB)>10)"
	;;^DD(354,.04,21,0)
	;;=^^10^10^2930429^^^^
	;;^DD(354,.04,21,1,0)
	;;=DO NOT EDIT THIS FIELD.  It is maintained by the Copay Exemption Software.
	;;^DD(354,.04,21,2,0)
	;;= 
	;;^DD(354,.04,21,3,0)
	;;=This is the patients current Medication Copay Income Exemption Status.  It
	;;^DD(354,.04,21,4,0)
	;;=is updated whenever an entry in the Billing Exemptions file is made.
	;;^DD(354,.04,21,5,0)
	;;= 
	;;^DD(354,.04,21,6,0)
	;;=If a patient's income is less than the pension level, effective 10/29/92
	;;^DD(354,.04,21,7,0)
	;;=the patient is exempt from paying the Medication Copayment.  If a patient
	;;^DD(354,.04,21,8,0)
	;;=is receiving a VA Pension, or is receiving Aid and Attendence or House
	;;^DD(354,.04,21,9,0)
	;;=Bound benefits, or his income for the previous year is less than the

IBINI03O
IBINI03O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354,.04,21,10,0)
	;;=pension level, he is exempt.
	;;^DD(354,.04,23,0)
	;;=^^6^6^2930429^^^
	;;^DD(354,.04,23,1,0)
	;;= 
	;;^DD(354,.04,23,2,0)
	;;=This field will be updated by the Copay Exemption software every time
	;;^DD(354,.04,23,3,0)
	;;=a new current exemption is added.  It should not be edited.
	;;^DD(354,.04,23,4,0)
	;;= 
	;;^DD(354,.04,23,5,0)
	;;=Programmers must 4 slash stuff data into this field to bypass the input
	;;^DD(354,.04,23,6,0)
	;;=transform.
	;;^DD(354,.04,"DT")
	;;=2930210
	;;^DD(354,.05,0)
	;;=COPAY EXEMPTION REASON^R*P354.2'^IBE(354.2,^0;5^S DIC("S")="I Y=$P(^IBA(354,DA,0),U,5)!($G(IBJOB)>10)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(354,.05,1,0)
	;;=^.1
	;;^DD(354,.05,1,1,0)
	;;=354^AC
	;;^DD(354,.05,1,1,1)
	;;=S ^IBA(354,"AC",$E(X,1,30),DA)=""
	;;^DD(354,.05,1,1,2)
	;;=K ^IBA(354,"AC",$E(X,1,30),DA)
	;;^DD(354,.05,1,1,"DT")
	;;=2930120
	;;^DD(354,.05,9)
	;;=^
	;;^DD(354,.05,12)
	;;=This field can only be edited/updated by the Copay Exemption software.
	;;^DD(354,.05,12.1)
	;;=S DIC("S")="I Y=$P(^IBA(354,DA,0),U,5)!($G(IBJOB)>10)"
	;;^DD(354,.05,21,0)
	;;=^^4^4^2930429^^^^
	;;^DD(354,.05,21,1,0)
	;;=DO NOT EDIT THIS FIELD.  It is maintained by the Copay Exemption Software.
	;;^DD(354,.05,21,2,0)
	;;= 
	;;^DD(354,.05,21,3,0)
	;;=This is the exemption reason for the current copay exemption.  It will
	;;^DD(354,.05,21,4,0)
	;;=be entered by the system.  
	;;^DD(354,.05,23,0)
	;;=^^6^6^2930429^^^
	;;^DD(354,.05,23,1,0)
	;;= 
	;;^DD(354,.05,23,2,0)
	;;=This field will be updated by the Copay Exemption software every time
	;;^DD(354,.05,23,3,0)
	;;=a new current exemption is added.  It should not be edited.
	;;^DD(354,.05,23,4,0)
	;;= 
	;;^DD(354,.05,23,5,0)
	;;=Programmers must 4 slash stuff data into this field to bypass the input
	;;^DD(354,.05,23,6,0)
	;;=transform.
	;;^DD(354,.05,"DT")
	;;=2930210

IBINI03P
IBINI03P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.1,0,"GL")
	;;=^IBA(354.1,
	;;^DIC("B","BILLING EXEMPTIONS",354.1)
	;;=
	;;^DIC(354.1,"%D",0)
	;;=^^21^21^2940214^^^^
	;;^DIC(354.1,"%D",1,0)
	;;=DO NOT EDIT THIS FILE.
	;;^DIC(354.1,"%D",2,0)
	;;= 
	;;^DIC(354.1,"%D",3,0)
	;;=Under normal operation it is not necessary to edit the fields in this
	;;^DIC(354.1,"%D",4,0)
	;;=file directly.  The option Manually Change Copay Exemption (Hardships) can
	;;^DIC(354.1,"%D",5,0)
	;;=be used to update and correct entries by creating a new exemption.
	;;^DIC(354.1,"%D",6,0)
	;;=If many patient records have problems the option Print/Verify Patient
	;;^DIC(354.1,"%D",7,0)
	;;=Exemption Status can be used to correct the entries.
	;;^DIC(354.1,"%D",8,0)
	;;= 
	;;^DIC(354.1,"%D",9,0)
	;;=This file will hold the time sensitive data that is used to determine
	;;^DIC(354.1,"%D",10,0)
	;;=if a patient can be exluded from any type of billing for a period of
	;;^DIC(354.1,"%D",11,0)
	;;=time.  The initial use of this file is for storing the time sensitive
	;;^DIC(354.1,"%D",12,0)
	;;=data related to whether or not a patient is exempt from pharmacy copay
	;;^DIC(354.1,"%D",13,0)
	;;=requirement due to income below the pension level.
	;;^DIC(354.1,"%D",14,0)
	;;= 
	;;^DIC(354.1,"%D",15,0)
	;;=The file then maintains the audit trail of changes to exemptions and
	;;^DIC(354.1,"%D",16,0)
	;;=historical data about exemptions.  The data in this file should be
	;;^DIC(354.1,"%D",17,0)
	;;=retained for approximately the current calendar year and the past
	;;^DIC(354.1,"%D",18,0)
	;;=calendar year.  The ability to purge data in this file will be added
	;;^DIC(354.1,"%D",19,0)
	;;=at a future time.
	;;^DIC(354.1,"%D",20,0)
	;;= 
	;;^DIC(354.1,"%D",21,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.1,0)
	;;=FIELD^^.15^15
	;;^DD(354.1,0,"DDA")
	;;=N
	;;^DD(354.1,0,"DT")
	;;=2930204
	;;^DD(354.1,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(354,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(354,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(354.1,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354.1,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(354.1,0,"ID",.1)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354.1,.1,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,10)_"":"",2),$C(59),1)")
	;;^DD(354.1,0,"IX","AA",354.1,.1)
	;;=
	;;^DD(354.1,0,"IX","ACAN",354.1,.14)
	;;=
	;;^DD(354.1,0,"IX","ACAN1",354.1,.02)
	;;=
	;;^DD(354.1,0,"IX","ACY",354.1,.01)
	;;=
	;;^DD(354.1,0,"IX","ACY1",354.1,.02)
	;;=
	;;^DD(354.1,0,"IX","ACY2",354.1,.1)
	;;=
	;;^DD(354.1,0,"IX","ACY3",354.1,.03)
	;;=
	;;^DD(354.1,0,"IX","AIVDT",354.1,.01)
	;;=
	;;^DD(354.1,0,"IX","AIVDT1",354.1,.1)
	;;=
	;;^DD(354.1,0,"IX","AIVDT2",354.1,.02)
	;;=
	;;^DD(354.1,0,"IX","AIVDT3",354.1,.03)
	;;=
	;;^DD(354.1,0,"IX","ALERT",354.1,.09)
	;;=
	;;^DD(354.1,0,"IX","AP",354.1,.02)
	;;=
	;;^DD(354.1,0,"IX","APIDT",354.1,.02)
	;;=
	;;^DD(354.1,0,"IX","APIDT1",354.1,.01)
	;;=
	;;^DD(354.1,0,"IX","APIDT2",354.1,.03)
	;;=
	;;^DD(354.1,0,"IX","APRIOR",354.1,.15)
	;;=
	;;^DD(354.1,0,"IX","AR",354.1,.05)
	;;=
	;;^DD(354.1,0,"IX","AS",354.1,.04)
	;;=
	;;^DD(354.1,0,"IX","B",354.1,.01)
	;;=
	;;^DD(354.1,0,"IX","C",354.1,.02)
	;;=
	;;^DD(354.1,0,"NM","BILLING EXEMPTIONS")
	;;=
	;;^DD(354.1,.01,0)
	;;=EFFECTIVE DATE^RDI^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.1,.01,.1)
	;;=
	;;^DD(354.1,.01,1,0)
	;;=^.1^^-1
	;;^DD(354.1,.01,1,1,0)
	;;=354.1^B
	;;^DD(354.1,.01,1,1,1)
	;;=S ^IBA(354.1,"B",$E(X,1,30),DA)=""

IBINI03Q
IBINI03Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.01,1,1,2)
	;;=K ^IBA(354.1,"B",$E(X,1,30),DA)
	;;^DD(354.1,.01,1,2,0)
	;;=354.1^ACY^MUMPS
	;;^DD(354.1,.01,1,2,1)
	;;=I $P(^IBA(354.1,DA,0),"^",2),$P(^(0),U,3),$P(^(0),U,10) S ^IBA(354.1,"ACY",+$P(^(0),"^",3),+$P(^(0),"^",2),$E(X,1,3),DA)=""
	;;^DD(354.1,.01,1,2,2)
	;;=K ^IBA(354.1,"ACY",+$P(^IBA(354.1,DA,0),"^",3),+$P(^(0),U,2),$E(X,1,3),DA)
	;;^DD(354.1,.01,1,2,"%D",0)
	;;=^^3^3^2921209^^^^
	;;^DD(354.1,.01,1,2,"%D",1,0)
	;;=Cross-reference of all ACTIVE entries for a patient for an effective
	;;^DD(354.1,.01,1,2,"%D",2,0)
	;;=date.  For Pharmacy Co-pay income exemption this equates to calendar
	;;^DD(354.1,.01,1,2,"%D",3,0)
	;;=year (CY).          
	;;^DD(354.1,.01,1,2,"DT")
	;;=2921118
	;;^DD(354.1,.01,1,3,0)
	;;=354.1^AIVDT^MUMPS
	;;^DD(354.1,.01,1,3,1)
	;;=N IBX S IBX=^IBA(354.1,DA,0) I $P(IBX,U,2),$P(IBX,U,3),$P(IBX,U,4)'="",$P(IBX,U,10) S ^IBA(354.1,"AIVDT",+$P(IBX,U,3),+$P(IBX,U,2),-($P(IBX,U)),DA)=""
	;;^DD(354.1,.01,1,3,2)
	;;=K ^IBA(354.1,"AIVDT",+$P(^IBA(354.1,DA,0),U,3),+$P(^(0),U,2),-X,DA)
	;;^DD(354.1,.01,1,3,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(354.1,.01,1,3,"%D",1,0)
	;;=Inverse date cross reference of all exemption entries for a patient.
	;;^DD(354.1,.01,1,3,"DT")
	;;=2921110
	;;^DD(354.1,.01,1,4,0)
	;;=354.1^APIDT1^MUMPS
	;;^DD(354.1,.01,1,4,1)
	;;=I $P(^IBA(354.1,DA,0),U,2),$P(^(0),U,3) S ^IBA(354.1,"APIDT",+$P(^(0),U,2),+$P(^(0),U,3),-X,DA)=""
	;;^DD(354.1,.01,1,4,2)
	;;=K ^IBA(354.1,"APIDT",+$P(^IBA(354.1,DA,0),U,2),+$P(^(0),U,3),-X,DA)
	;;^DD(354.1,.01,1,4,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(354.1,.01,1,4,"%D",1,0)
	;;=Cross reference of all exemptions by patient, by type and by inverse date.
	;;^DD(354.1,.01,1,4,"DT")
	;;=2921116
	;;^DD(354.1,.01,3)
	;;=
	;;^DD(354.1,.01,21,0)
	;;=^^7^7^2921209^^^^
	;;^DD(354.1,.01,21,1,0)
	;;=Enter the effective date of the exemption.  
	;;^DD(354.1,.01,21,2,0)
	;;= 
	;;^DD(354.1,.01,21,3,0)
	;;=Patients will be given 1 year of exemption from the Medication Copayment
	;;^DD(354.1,.01,21,4,0)
	;;=requirement from this effective date.  For patients who's exemption is
	;;^DD(354.1,.01,21,5,0)
	;;=based on income data, every effort will be made to keep this effective
	;;^DD(354.1,.01,21,6,0)
	;;=date consistent with the Means Test Date of Test or the Copayment
	;;^DD(354.1,.01,21,7,0)
	;;=Income Test Date of Test.
	;;^DD(354.1,.01,"DEL",1,0)
	;;=I 1 W !,"Deleting entries not allowed"
	;;^DD(354.1,.01,"DT")
	;;=2930407
	;;^DD(354.1,.02,0)
	;;=PATIENT^RP354'I^IBA(354,^0;2^Q
	;;^DD(354.1,.02,.1)
	;;=BILLING PATIENT
	;;^DD(354.1,.02,1,0)
	;;=^.1
	;;^DD(354.1,.02,1,1,0)
	;;=354.1^AP
	;;^DD(354.1,.02,1,1,1)
	;;=S ^IBA(354.1,"AP",$E(X,1,30),DA)=""
	;;^DD(354.1,.02,1,1,2)
	;;=K ^IBA(354.1,"AP",$E(X,1,30),DA)
	;;^DD(354.1,.02,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.1,.02,1,1,"%D",1,0)
	;;=Cross-reference of Patient.
	;;^DD(354.1,.02,1,1,"DT")
	;;=2921110
	;;^DD(354.1,.02,1,2,0)
	;;=354.1^AIVDT2^MUMPS
	;;^DD(354.1,.02,1,2,1)
	;;=N IBX S IBX=^IBA(354.1,DA,0) I $P(IBX,U,2),$P(IBX,U,3),$P(IBX,U,4)'="",$P(IBX,U,10) S ^IBA(354.1,"AIVDT",+$P(IBX,U,3),+$P(IBX,U,2),-($P(IBX,U)),DA)=""
	;;^DD(354.1,.02,1,2,2)
	;;=K ^IBA(354.1,"AIVDT",+$P(^IBA(354.1,DA,0),"^",3),+X,-($P(^(0),U)),DA)
	;;^DD(354.1,.02,1,2,"DT")
	;;=2921110
	;;^DD(354.1,.02,1,3,0)
	;;=354.1^C
	;;^DD(354.1,.02,1,3,1)
	;;=S ^IBA(354.1,"C",$E(X,1,30),DA)=""
	;;^DD(354.1,.02,1,3,2)
	;;=K ^IBA(354.1,"C",$E(X,1,30),DA)
	;;^DD(354.1,.02,1,3,"%D",0)
	;;=^^2^2^2940213^^^^
	;;^DD(354.1,.02,1,3,"%D",1,0)
	;;=Cross-reference of all ACTIVE entries for a patient by calendar
	;;^DD(354.1,.02,1,3,"%D",2,0)
	;;=year (CY).  This equates to $e(effective date,1,3).

IBINI03R
IBINI03R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.02,1,3,"DT")
	;;=2921223
	;;^DD(354.1,.02,1,4,0)
	;;=354.1^APIDT^MUMPS
	;;^DD(354.1,.02,1,4,1)
	;;=I $P(^IBA(354.1,DA,0),U,3),+^(0) S ^IBA(354.1,"APIDT",X,+$P(^(0),U,3),-($P(^(0),U)),DA)=""
	;;^DD(354.1,.02,1,4,2)
	;;=K ^IBA(354.1,"APIDT",+X,+$P(^IBA(354.1,DA,0),U,3),-($P(^(0),U)),DA)
	;;^DD(354.1,.02,1,4,"%D",0)
	;;=^^1^1^2940213^^^^
	;;^DD(354.1,.02,1,4,"%D",1,0)
	;;=Cross-reference of all records by patient, by type, by inverse date.
	;;^DD(354.1,.02,1,4,"DT")
	;;=2921118
	;;^DD(354.1,.02,1,5,0)
	;;=354.1^ACAN1^MUMPS
	;;^DD(354.1,.02,1,5,1)
	;;=I $P(^IBA(354.1,DA,0),"^",14) S ^IBA(354.1,"ACAN",X,-$P(^(0),"^",14),DA)=""
	;;^DD(354.1,.02,1,5,2)
	;;=K ^IBA(354.1,"ACAN",X,-$P(^IBA(354.1,DA,0),"^",14),DA)
	;;^DD(354.1,.02,1,5,3)
	;;=DO NOT DELETE
	;;^DD(354.1,.02,1,5,"%D",0)
	;;=^^6^6^2930430^^^^
	;;^DD(354.1,.02,1,5,"%D",1,0)
	;;=This cross-reference is set whenever bills are retroactively canceled 
	;;^DD(354.1,.02,1,5,"%D",2,0)
	;;=due to the medication copayment exemption patch.  It is used to
	;;^DD(354.1,.02,1,5,"%D",3,0)
	;;=prevent canceling charges in AR a second time.  This is
	;;^DD(354.1,.02,1,5,"%D",4,0)
	;;=necessary because the direct link between IB and AR is not maintained
	;;^DD(354.1,.02,1,5,"%D",5,0)
	;;=for this functionality as it is necessary to remove admin and interest
	;;^DD(354.1,.02,1,5,"%D",6,0)
	;;=charges that may have accumulated.
	;;^DD(354.1,.02,1,5,"DT")
	;;=2930113
	;;^DD(354.1,.02,21,0)
	;;=^^3^3^2921209^^^
	;;^DD(354.1,.02,21,1,0)
	;;=This is the patient that this Billing Exemption Entry is for.  
	;;^DD(354.1,.02,21,2,0)
	;;=The Patient must be in the Billing Patient File.  The Current Status for
	;;^DD(354.1,.02,21,3,0)
	;;=an exemption will be automatically stored in the Billing Patient file.
	;;^DD(354.1,.02,"DT")
	;;=2930204
	;;^DD(354.1,.03,0)
	;;=TYPE^RSI^1:COPAY INCOME EXEMPTION;^0;3^Q
	;;^DD(354.1,.03,1,0)
	;;=^.1^^-1
	;;^DD(354.1,.03,1,1,0)
	;;=354.1^AIVDT3^MUMPS
	;;^DD(354.1,.03,1,1,1)
	;;=N IBX S IBX=^IBA(354.1,DA,0) I $P(IBX,U,2),$P(IBX,U,3),$P(IBX,U,4)'="",$P(IBX,U,10) S ^IBA(354.1,"AIVDT",+$P(IBX,U,3),+$P(IBX,U,2),-($P(IBX,U)),DA)=""
	;;^DD(354.1,.03,1,1,2)
	;;=K ^IBA(354.1,"AIVDT",+X,+$P(^IBA(354.1,DA,0),U,2),-($P(^(0),U)),DA)
	;;^DD(354.1,.03,1,1,"%D",0)
	;;=^^2^2^2940213^
	;;^DD(354.1,.03,1,1,"%D",1,0)
	;;=Inverse date cross reference of all exemptions for a patient for a type of
	;;^DD(354.1,.03,1,1,"%D",2,0)
	;;=exemption.
	;;^DD(354.1,.03,1,1,"DT")
	;;=2921110
	;;^DD(354.1,.03,1,2,0)
	;;=354.1^APIDT2^MUMPS
	;;^DD(354.1,.03,1,2,1)
	;;=I $P(^IBA(354.1,DA,0),U,2),+^(0) S ^IBA(354.1,"APIDT",+$P(^(0),U,2),+X,-($P(^(0),U)),DA)=""
	;;^DD(354.1,.03,1,2,2)
	;;=K ^IBA(354.1,"APIDT",+$P(^IBA(354.1,DA,0),U,2),+X,-($P(^(0),U)),DA)
	;;^DD(354.1,.03,1,2,"%D",0)
	;;=^^1^1^2940213^^^^
	;;^DD(354.1,.03,1,2,"%D",1,0)
	;;=Cross-reference of all records by patient, by type, by inverse date.
	;;^DD(354.1,.03,1,2,"DT")
	;;=2921118
	;;^DD(354.1,.03,1,3,0)
	;;=354.1^ACY3^MUMPS
	;;^DD(354.1,.03,1,3,1)
	;;=I $P(^IBA(354.1,DA,0),U,2),+^(0) S ^IBA(354.1,"ACY",+X,+$P(^(0),U,2),+$E($P(^(0),U),1,3),DA)=""
	;;^DD(354.1,.03,1,3,2)
	;;=K ^IBA(354.1,"ACY",+X,+$P(^IBA(354.1,DA,0),U,2),+$E($P(^(0),U),1,3),DA)
	;;^DD(354.1,.03,1,3,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(354.1,.03,1,3,"%D",1,0)
	;;=Cross reference of all active entries for a patient by inverse date.
	;;^DD(354.1,.03,1,3,"DT")
	;;=2921118
	;;^DD(354.1,.03,21,0)
	;;=^^2^2^2930429^^^^
	;;^DD(354.1,.03,21,1,0)
	;;=This is the type of exemption that this entry is for.  Each type of 

IBINI03S
IBINI03S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.03,21,2,0)
	;;=exemption will have its own record.
	;;^DD(354.1,.03,23,0)
	;;=^^2^2^2930429^^^^
	;;^DD(354.1,.03,23,1,0)
	;;=Currently there is only one type of record. Pharmacy Copay Exemptions
	;;^DD(354.1,.03,23,2,0)
	;;=based on income.
	;;^DD(354.1,.03,"DT")
	;;=2930204
	;;^DD(354.1,.04,0)
	;;=STATUS^RSI^1:EXEMPT;0:NON-EXEMPT;^0;4^Q
	;;^DD(354.1,.04,.1)
	;;=EXEMPTION STATUS
	;;^DD(354.1,.04,1,0)
	;;=^.1
	;;^DD(354.1,.04,1,1,0)
	;;=354.1^AS
	;;^DD(354.1,.04,1,1,1)
	;;=S ^IBA(354.1,"AS",$E(X,1,30),DA)=""
	;;^DD(354.1,.04,1,1,2)
	;;=K ^IBA(354.1,"AS",$E(X,1,30),DA)
	;;^DD(354.1,.04,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.1,.04,1,1,"%D",1,0)
	;;=Cross-reference of Status.
	;;^DD(354.1,.04,1,1,"DT")
	;;=2921110
	;;^DD(354.1,.04,21,0)
	;;=^^3^3^2921209^^
	;;^DD(354.1,.04,21,1,0)
	;;=This is the Exemption Status of this record.  Enter whether the
	;;^DD(354.1,.04,21,2,0)
	;;=patient is exempt or not exempt from the TYPE of billing of this
	;;^DD(354.1,.04,21,3,0)
	;;=record.  Generally this data element will be entered by the system.
	;;^DD(354.1,.04,"DT")
	;;=2930204
	;;^DD(354.1,.05,0)
	;;=EXEMPTION REASON^RP354.2'I^IBE(354.2,^0;5^Q
	;;^DD(354.1,.05,1,0)
	;;=^.1
	;;^DD(354.1,.05,1,1,0)
	;;=354.1^AR
	;;^DD(354.1,.05,1,1,1)
	;;=S ^IBA(354.1,"AR",$E(X,1,30),DA)=""
	;;^DD(354.1,.05,1,1,2)
	;;=K ^IBA(354.1,"AR",$E(X,1,30),DA)
	;;^DD(354.1,.05,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.1,.05,1,1,"%D",1,0)
	;;=Cross-reference of Exemption Reasons.
	;;^DD(354.1,.05,1,1,"DT")
	;;=2921110
	;;^DD(354.1,.05,21,0)
	;;=^^6^6^2930429^^^
	;;^DD(354.1,.05,21,1,0)
	;;=Enter the reason that the patient is exempt or not exempt from this type
	;;^DD(354.1,.05,21,2,0)
	;;=of billing.  Entry of this field will automatically update the STATUS
	;;^DD(354.1,.05,21,3,0)
	;;=of this exemption record to the STATUS of the Exemption Reason.  
	;;^DD(354.1,.05,21,4,0)
	;;=For exmple, an exemption reason of "In Receipt of Pension" will
	;;^DD(354.1,.05,21,5,0)
	;;=automatically trigger a STATUS of Exempt for the Pharmacy Copay
	;;^DD(354.1,.05,21,6,0)
	;;=Income Exemption.
	;;^DD(354.1,.05,"DT")
	;;=2930204
	;;^DD(354.1,.06,0)
	;;=HOW ADDED^S^1:SYSTEM;2:MANUAL;^0;6^Q
	;;^DD(354.1,.06,21,0)
	;;=^^4^4^2930429^^^^
	;;^DD(354.1,.06,21,1,0)
	;;=This field indicates whether this record was automatically added
	;;^DD(354.1,.06,21,2,0)
	;;=by the system or manually entered by a user.
	;;^DD(354.1,.06,21,3,0)
	;;= 
	;;^DD(354.1,.06,21,4,0)
	;;=This field will always be entered by the system.
	;;^DD(354.1,.06,23,0)
	;;=^^5^5^2930429^^
	;;^DD(354.1,.06,23,1,0)
	;;=This field is updated to manual whenever a user creates an entry that
	;;^DD(354.1,.06,23,2,0)
	;;=does not appear to be consistent with the data returned from MAS or
	;;^DD(354.1,.06,23,3,0)
	;;=when adding a hardship exemption.  Whenever this field is set to
	;;^DD(354.1,.06,23,4,0)
	;;=manual an electronic signature should be required and a bulletin or
	;;^DD(354.1,.06,23,5,0)
	;;=alert sent to an appropriate group.
	;;^DD(354.1,.06,"DT")
	;;=2921209
	;;^DD(354.1,.07,0)
	;;=USER ADDING ENTRY^P200'I^VA(200,^0;7^Q
	;;^DD(354.1,.07,21,0)
	;;=^^8^8^2930430^^^^
	;;^DD(354.1,.07,21,1,0)
	;;=This is the user who was responsible for adding this entry.  If the 
	;;^DD(354.1,.07,21,2,0)
	;;=entry was SYSTEM added then the user would be the signed 
	;;^DD(354.1,.07,21,3,0)
	;;=on user when the exemption was created.  This may be a user who
	;;^DD(354.1,.07,21,4,0)
	;;=edited the patient record or who entered a prescription or a
	;;^DD(354.1,.07,21,5,0)
	;;=user who corrected an exemption.  All changes except Hardship

IBINI03T
IBINI03T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.07,21,6,0)
	;;=exemptions will be considered SYSTEM added.
	;;^DD(354.1,.07,21,7,0)
	;;=If the entry was Manually added then this is the user who
	;;^DD(354.1,.07,21,8,0)
	;;=entered the Hardship exemption.
	;;^DD(354.1,.07,"DT")
	;;=2930204
	;;^DD(354.1,.08,0)
	;;=DATE/TIME ADDED^RDI^^0;8^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.1,.08,3)
	;;=
	;;^DD(354.1,.08,21,0)
	;;=^^7^7^2921209^^^
	;;^DD(354.1,.08,21,1,0)
	;;=This is the date and time this entry was added.
	;;^DD(354.1,.08,21,2,0)
	;;= 
	;;^DD(354.1,.08,21,3,0)
	;;=The date time added will be different from the effective date in many
	;;^DD(354.1,.08,21,4,0)
	;;=cases, where the entry is based on actual income data and where there
	;;^DD(354.1,.08,21,5,0)
	;;=are changes to an exemption status.  When the exemption is based upon
	;;^DD(354.1,.08,21,6,0)
	;;=the fact that the patient is recieving pension, etc. the effective date
	;;^DD(354.1,.08,21,7,0)
	;;=and the date added may be the same.
	;;^DD(354.1,.08,"DT")
	;;=2930204
	;;^DD(354.1,.09,0)
	;;=ALERT^P354.4'^IBA(354.4,^0;9^Q
	;;^DD(354.1,.09,1,0)
	;;=^.1
	;;^DD(354.1,.09,1,1,0)
	;;=354.1^ALERT
	;;^DD(354.1,.09,1,1,1)
	;;=S ^IBA(354.1,"ALERT",$E(X,1,30),DA)=""
	;;^DD(354.1,.09,1,1,2)
	;;=K ^IBA(354.1,"ALERT",$E(X,1,30),DA)
	;;^DD(354.1,.09,1,1,"%D",0)
	;;=^^1^1^2930204^
	;;^DD(354.1,.09,1,1,"%D",1,0)
	;;=This is an index of alerted exemptions.
	;;^DD(354.1,.09,1,1,"DT")
	;;=2930204
	;;^DD(354.1,.09,3)
	;;=
	;;^DD(354.1,.09,21,0)
	;;=^^1^1^2921209^
	;;^DD(354.1,.09,21,1,0)
	;;=Future use.
	;;^DD(354.1,.09,21,2,0)
	;;=An alert or mail message may be posted in association with the creation
	;;^DD(354.1,.09,21,3,0)
	;;=or editing of an exemption record.  If Alerts are used, then this field
	;;^DD(354.1,.09,21,4,0)
	;;=will store the pointer to the alert entry.  Once an alert has been
	;;^DD(354.1,.09,21,5,0)
	;;=resolved it will be deleted.
	;;^DD(354.1,.09,"DT")
	;;=2930204
	;;^DD(354.1,.1,0)
	;;=ACTIVE^R*S^1:ACTIVE;0:INACTIVE;^0;10^Q
	;;^DD(354.1,.1,.1)
	;;=CURRENTLY ACTIVE
	;;^DD(354.1,.1,1,0)
	;;=^.1^^-1
	;;^DD(354.1,.1,1,1,0)
	;;=354.1^AA
	;;^DD(354.1,.1,1,1,1)
	;;=S ^IBA(354.1,"AA",$E(X,1,30),DA)=""
	;;^DD(354.1,.1,1,1,2)
	;;=K ^IBA(354.1,"AA",$E(X,1,30),DA)
	;;^DD(354.1,.1,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.1,.1,1,1,"%D",1,0)
	;;=Cross-reference of Active Records.
	;;^DD(354.1,.1,1,1,"DT")
	;;=2921110
	;;^DD(354.1,.1,1,2,0)
	;;=354.1^AIVDT1^MUMPS
	;;^DD(354.1,.1,1,2,1)
	;;=N IBX S IBX=^IBA(354.1,DA,0) I +X,$P(IBX,U,2),$P(IBX,U,3),$P(IBX,U,4)'="" S ^IBA(354.1,"AIVDT",+$P(IBX,U,3),+$P(IBX,U,2),-($P(IBX,U)),DA)=""
	;;^DD(354.1,.1,1,2,2)
	;;=N IBX S IBX=^IBA(354.1,DA,0) K ^IBA(354.1,"AIVDT",+$P(IBX,U,3),+$P(IBX,U,2),-($P(IBX,U)),DA)
	;;^DD(354.1,.1,1,2,"%D",0)
	;;=^^4^4^2930430^^^^
	;;^DD(354.1,.1,1,2,"%D",1,0)
	;;=If this is the active record, patient has been entered, type has been
	;;^DD(354.1,.1,1,2,"%D",2,0)
	;;=entered, status has been entered; set up an inverse cross reference.
	;;^DD(354.1,.1,1,2,"%D",3,0)
	;;= 
	;;^DD(354.1,.1,1,2,"%D",4,0)
	;;=^iba(354.1,"aivdt",type,patient,inverse effective date,da)=""
	;;^DD(354.1,.1,1,2,"DT")
	;;=2921110
	;;^DD(354.1,.1,1,3,0)
	;;=354.1^ACY2^MUMPS
	;;^DD(354.1,.1,1,3,1)
	;;=I X,+$P(^IBA(354.1,DA,0),U,2),+$P(^(0),U,3),+^(0) S ^IBA(354.1,"ACY",+$P(^(0),U,3),+$P(^(0),U,2),+$E($P(^(0),U),1,3),DA)=""
	;;^DD(354.1,.1,1,3,2)
	;;=K ^IBA(354.1,"ACY",+$P(^IBA(354.1,DA,0),U,3),+$P(^(0),U,2),+$E($P(^(0),U),1,3),DA)
	;;^DD(354.1,.1,1,3,"%D",0)
	;;=^^2^2^2940213^^^^
	;;^DD(354.1,.1,1,3,"%D",1,0)
	;;=Cross-reference of all ACTIVE entries for a patient by calendar

IBINI03U
IBINI03U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.1,1,3,"%D",2,0)
	;;=year (CY).  This equates to $e(effective date,1,3).
	;;^DD(354.1,.1,1,3,"DT")
	;;=2921118
	;;^DD(354.1,.1,12)
	;;=Only 1 entry for a patient for an effective date can be active at one time
	;;^DD(354.1,.1,12.1)
	;;=S DIC("S")="I $$ACTIVE^IBARXEU(X)"
	;;^DD(354.1,.1,21,0)
	;;=^^4^4^2930430^^^^
	;;^DD(354.1,.1,21,1,0)
	;;=Only 1 record for an effective date can be active at a time.  When
	;;^DD(354.1,.1,21,2,0)
	;;=it is necessary to change a patient's exemption status the user will
	;;^DD(354.1,.1,21,3,0)
	;;=be asked if this is the currently active record.  If yes, then all 
	;;^DD(354.1,.1,21,4,0)
	;;=other records for the effective date will be inactivated automatically.
	;;^DD(354.1,.1,"DT")
	;;=2930204
	;;^DD(354.1,.11,0)
	;;=ELECTRONIC SIGNATURE^FO^^0;11^K:$L(X)>20!($L(X)<6) X
	;;^DD(354.1,.11,2)
	;;=S Y(0)=Y S Y(0)=Y S Y="<Hidden>"
	;;^DD(354.1,.11,2.1)
	;;=S Y(0)=Y S Y="<Hidden>"
	;;^DD(354.1,.11,3)
	;;=Answer must be 6-20 characters in length.
	;;^DD(354.1,.11,21,0)
	;;=^^4^4^2930430^^^
	;;^DD(354.1,.11,21,1,0)
	;;=Enter your Electronic Signature.  This field will be required whenever
	;;^DD(354.1,.11,21,2,0)
	;;=a user trys to create an exemption that is different from the
	;;^DD(354.1,.11,21,3,0)
	;;=exemption computed by the system.  This would
	;;^DD(354.1,.11,21,4,0)
	;;=be required in order to create a hardship exemption.
	;;^DD(354.1,.11,"DT")
	;;=2930422
	;;^DD(354.1,.12,0)
	;;=SECOND ELECTRONIC SIGNATURE^F^^0;12^K:$L(X)>40!($L(X)<3) X
	;;^DD(354.1,.12,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(354.1,.12,21,0)
	;;=^^3^3^2930430^
	;;^DD(354.1,.12,21,1,0)
	;;=A second electronic signature for hardship exemptions will be
	;;^DD(354.1,.12,21,2,0)
	;;=implemented in a future release.
	;;^DD(354.1,.12,21,3,0)
	;;=|
	;;^DD(354.1,.12,"DT")
	;;=2930422
	;;^DD(354.1,.13,0)
	;;=RETRO CANCEL BILLS START DATE^D^^0;13^S %DT="EX" D ^%DT S X=Y K:3991231<X!(2920129>X) X
	;;^DD(354.1,.13,3)
	;;=TYPE A DATE BETWEEN 1/29/1992 AND 12/31/2099
	;;^DD(354.1,.13,21,0)
	;;=^^4^4^2930430^^
	;;^DD(354.1,.13,21,1,0)
	;;=If this exemption requires retroactively canceling prior charges, this
	;;^DD(354.1,.13,21,2,0)
	;;=is the beginning date for the retroactive cancellation.  This must be 
	;;^DD(354.1,.13,21,3,0)
	;;=tracked to prevent duplicate retroactive cancellations of the same
	;;^DD(354.1,.13,21,4,0)
	;;=charges.
	;;^DD(354.1,.13,"DT")
	;;=2921209
	;;^DD(354.1,.14,0)
	;;=RETRO CANCEL BILLS END DATE^D^^0;14^S %DT="EX" D ^%DT S X=Y K:3991231<X!(2920129>X) X
	;;^DD(354.1,.14,1,0)
	;;=^.1
	;;^DD(354.1,.14,1,1,0)
	;;=354.1^ACAN^MUMPS
	;;^DD(354.1,.14,1,1,1)
	;;=I $P(^IBA(354.1,DA,0),"^",2) S ^IBA(354.1,"ACAN",$P(^(0),"^",2),-X,DA)=""
	;;^DD(354.1,.14,1,1,2)
	;;=K ^IBA(354.1,"ACAN",$P(^IBA(354.1,DA,0),"^",2),-X,DA)
	;;^DD(354.1,.14,1,1,3)
	;;=DO NOT DELETE
	;;^DD(354.1,.14,1,1,"%D",0)
	;;=^^6^6^2930430^^^^
	;;^DD(354.1,.14,1,1,"%D",1,0)
	;;=This cross-reference is set whenever bills are retroactively canceled
	;;^DD(354.1,.14,1,1,"%D",2,0)
	;;=due to the medication copayment exemption patch.  It is used to
	;;^DD(354.1,.14,1,1,"%D",3,0)
	;;=prevent canceling charges in AR for the same period.  This is
	;;^DD(354.1,.14,1,1,"%D",4,0)
	;;=necessary because the direct link between IB and AR is not maintained
	;;^DD(354.1,.14,1,1,"%D",5,0)
	;;=for this functionality as it is necessary to remove admin and interest
	;;^DD(354.1,.14,1,1,"%D",6,0)
	;;=charges that may have accumulated.
	;;^DD(354.1,.14,1,1,"DT")
	;;=2930113
	;;^DD(354.1,.14,3)
	;;=TYPE A DATE BETWEEN 1/29/1992 AND 12/31/2099

IBINI03V
IBINI03V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.1,.14,21,0)
	;;=^^4^4^2930430^^
	;;^DD(354.1,.14,21,1,0)
	;;=If this exemption requires retroactively canceling prior charges, this
	;;^DD(354.1,.14,21,2,0)
	;;=is the ending date for the retroactive cancellation.  This must be   
	;;^DD(354.1,.14,21,3,0)
	;;=tracked to prevent duplicate retroactive cancellations of the same      
	;;^DD(354.1,.14,21,4,0)
	;;=charges.
	;;^DD(354.1,.14,"DT")
	;;=2930113
	;;^DD(354.1,.15,0)
	;;=PRIOR YEAR THRESHOLDS^D^^0;15^S %DT="E" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.1,.15,1,0)
	;;=^.1
	;;^DD(354.1,.15,1,1,0)
	;;=354.1^APRIOR
	;;^DD(354.1,.15,1,1,1)
	;;=S ^IBA(354.1,"APRIOR",$E(X,1,30),DA)=""
	;;^DD(354.1,.15,1,1,2)
	;;=K ^IBA(354.1,"APRIOR",$E(X,1,30),DA)
	;;^DD(354.1,.15,1,1,"%D",0)
	;;=^^5^5^2930430^^
	;;^DD(354.1,.15,1,1,"%D",1,0)
	;;=This is a cross reference of all active exemptions created with prior
	;;^DD(354.1,.15,1,1,"%D",2,0)
	;;=year thresholds.  It will be used when entering new thresholds to
	;;^DD(354.1,.15,1,1,"%D",3,0)
	;;=identfy patient exemptions in need of updating.  It will be deleted
	;;^DD(354.1,.15,1,1,"%D",4,0)
	;;=by the IB INACTIVATE EXEMPTION TEMPLATE when creating a new exemption
	;;^DD(354.1,.15,1,1,"%D",5,0)
	;;=for this date.
	;;^DD(354.1,.15,1,1,"DT")
	;;=2930126
	;;^DD(354.1,.15,21,0)
	;;=^^5^5^2930430^
	;;^DD(354.1,.15,21,1,0)
	;;=This field will contain the date of the threshold used to calculate
	;;^DD(354.1,.15,21,2,0)
	;;=exemptions based on income only if the date of the threshold was
	;;^DD(354.1,.15,21,3,0)
	;;=over 1 year in the past.  This will be used by the add threshold 
	;;^DD(354.1,.15,21,4,0)
	;;=option to list and recompute these exemptions when new thresholds
	;;^DD(354.1,.15,21,5,0)
	;;=are entered.
	;;^DD(354.1,.15,"DT")
	;;=2930126

IBINI03W
IBINI03W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.2,0,"GL")
	;;=^IBE(354.2,
	;;^DIC("B","EXEMPTION REASON",354.2)
	;;=
	;;^DIC(354.2,"%D",0)
	;;=^^14^14^2940214^^^^
	;;^DIC(354.2,"%D",1,0)
	;;=Warning:  DO NOT EDIT ENTRIES IN THIS FILE without instructions from
	;;^DIC(354.2,"%D",2,0)
	;;=your ISC.
	;;^DIC(354.2,"%D",3,0)
	;;= 
	;;^DIC(354.2,"%D",4,0)
	;;=This file contains the reasons for exemptions to a particular billing
	;;^DIC(354.2,"%D",5,0)
	;;=process.  Initially it will contain reasons only for the Pharmacy Copay
	;;^DIC(354.2,"%D",6,0)
	;;=Income exemption process.  This may be expanded in a later release 
	;;^DIC(354.2,"%D",7,0)
	;;=to allow other exemptions to other processes.  The current software 
	;;^DIC(354.2,"%D",8,0)
	;;=expects certain entries in this file to exist.  Changing the data in
	;;^DIC(354.2,"%D",9,0)
	;;=this file can have major impact on the Pharmacy Copay process.  It
	;;^DIC(354.2,"%D",10,0)
	;;=should not be edited except on instruction from your ISC.  Generally
	;;^DIC(354.2,"%D",11,0)
	;;=instructions to modify this file will be released through the National
	;;^DIC(354.2,"%D",12,0)
	;;=Patch Module on FORUM.
	;;^DIC(354.2,"%D",13,0)
	;;= 
	;;^DIC(354.2,"%D",14,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.2,0)
	;;=FIELD^^.1^6
	;;^DD(354.2,0,"DDA")
	;;=N
	;;^DD(354.2,0,"DT")
	;;=2921216
	;;^DD(354.2,0,"ID",.03)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354.2,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
	;;^DD(354.2,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354.2,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(354.2,0,"ID",.05)
	;;=W "   ",$P(^(0),U,5)
	;;^DD(354.2,0,"ID",.1)
	;;=W:$D(^(10)) "   ",@("$P($P($C(59)_$S($D(^DD(354.2,.1,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(10),U,1)_"":"",2),$C(59),1)")
	;;^DD(354.2,0,"IX","AA",354.2,.1)
	;;=
	;;^DD(354.2,0,"IX","ACODE",354.2,.05)
	;;=
	;;^DD(354.2,0,"IX","AS",354.2,.04)
	;;=
	;;^DD(354.2,0,"IX","B",354.2,.01)
	;;=
	;;^DD(354.2,0,"IX","C",354.2,.05)
	;;=
	;;^DD(354.2,0,"NM","EXEMPTION REASON")
	;;=
	;;^DD(354.2,0,"PT",354,.05)
	;;=
	;;^DD(354.2,0,"PT",354.1,.05)
	;;=
	;;^DD(354.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(354.2,.01,1,0)
	;;=^.1
	;;^DD(354.2,.01,1,1,0)
	;;=354.2^B
	;;^DD(354.2,.01,1,1,1)
	;;=S ^IBE(354.2,"B",$E(X,1,30),DA)=""
	;;^DD(354.2,.01,1,1,2)
	;;=K ^IBE(354.2,"B",$E(X,1,30),DA)
	;;^DD(354.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(354.2,.01,21,0)
	;;=^^3^3^2921208^^
	;;^DD(354.2,.01,21,1,0)
	;;=This is the name of the exemption reason.  Do not edit this field.
	;;^DD(354.2,.01,21,2,0)
	;;= 
	;;^DD(354.2,.01,21,3,0)
	;;=This field can be printed as the short name of the exemption reason.
	;;^DD(354.2,.01,"DT")
	;;=2921208
	;;^DD(354.2,.02,0)
	;;=LONG NAME^F^^0;2^K:$L(X)>80!($L(X)<3) X
	;;^DD(354.2,.02,.1)
	;;=DESCRIPTION
	;;^DD(354.2,.02,3)
	;;=Enter the long description of this exemption reason.  Answer must be 3-80 characters in length.
	;;^DD(354.2,.02,21,0)
	;;=^^3^3^2921208^^^
	;;^DD(354.2,.02,21,1,0)
	;;=Enter a long description to explain this exemption
	;;^DD(354.2,.02,21,2,0)
	;;=reason.  This field will generally be displayed to users
	;;^DD(354.2,.02,21,3,0)
	;;=along with the Exemption Status to explain the status of an exemption.
	;;^DD(354.2,.02,"DT")
	;;=2921208
	;;^DD(354.2,.03,0)
	;;=TYPE^S^1:COPAY INCOME EXEMPTION;^0;3^Q
	;;^DD(354.2,.03,21,0)
	;;=^^6^6^2930430^^^
	;;^DD(354.2,.03,21,1,0)
	;;=This is the type of exemption this reason is for.  When creating an

IBINI03X
IBINI03X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.2,.03,21,2,0)
	;;=exemption of Pharmacy Copay based on Income, only the type
	;;^DD(354.2,.03,21,3,0)
	;;=COPAY INCOME EXEMPTION reason can be selected.
	;;^DD(354.2,.03,21,4,0)
	;;= 
	;;^DD(354.2,.03,21,5,0)
	;;=In a future release additional types of exemptions may be created.
	;;^DD(354.2,.03,21,6,0)
	;;=Do not modify this field.
	;;^DD(354.2,.03,"DT")
	;;=2921208
	;;^DD(354.2,.04,0)
	;;=STATUS^S^0:NON-EXEMPT;1:EXEMPT;^0;4^Q
	;;^DD(354.2,.04,.1)
	;;=
	;;^DD(354.2,.04,1,0)
	;;=^.1
	;;^DD(354.2,.04,1,1,0)
	;;=354.2^AS
	;;^DD(354.2,.04,1,1,1)
	;;=S ^IBE(354.2,"AS",$E(X,1,30),DA)=""
	;;^DD(354.2,.04,1,1,2)
	;;=K ^IBE(354.2,"AS",$E(X,1,30),DA)
	;;^DD(354.2,.04,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.2,.04,1,1,"%D",1,0)
	;;=Cross-reference of Status.
	;;^DD(354.2,.04,1,1,"DT")
	;;=2921110
	;;^DD(354.2,.04,3)
	;;=
	;;^DD(354.2,.04,21,0)
	;;=^^3^3^2930430^^^^
	;;^DD(354.2,.04,21,1,0)
	;;=This is the status of this type of record.  Whether it is an exempt
	;;^DD(354.2,.04,21,2,0)
	;;=or non-exempt reason.  This status will be automatically stored
	;;^DD(354.2,.04,21,3,0)
	;;=in the Billing Exemptions file.
	;;^DD(354.2,.04,"DT")
	;;=2921208
	;;^DD(354.2,.05,0)
	;;=CODE^NJ4,0I^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(354.2,.05,1,0)
	;;=^.1
	;;^DD(354.2,.05,1,1,0)
	;;=354.2^ACODE
	;;^DD(354.2,.05,1,1,1)
	;;=S ^IBE(354.2,"ACODE",$E(X,1,30),DA)=""
	;;^DD(354.2,.05,1,1,2)
	;;=K ^IBE(354.2,"ACODE",$E(X,1,30),DA)
	;;^DD(354.2,.05,1,1,3)
	;;=DO NOT DELETE
	;;^DD(354.2,.05,1,1,"%D",0)
	;;=^^3^3^2921110^
	;;^DD(354.2,.05,1,1,"%D",1,0)
	;;=Cross-reference of code field.  To be used in routines to look up correct
	;;^DD(354.2,.05,1,1,"%D",2,0)
	;;=entry.  The internal codes will be used in routines to locate the correct
	;;^DD(354.2,.05,1,1,"%D",3,0)
	;;=entry.
	;;^DD(354.2,.05,1,1,"DT")
	;;=2921110
	;;^DD(354.2,.05,1,2,0)
	;;=354.2^C
	;;^DD(354.2,.05,1,2,1)
	;;=S ^IBE(354.2,"C",$E(X,1,30),DA)=""
	;;^DD(354.2,.05,1,2,2)
	;;=K ^IBE(354.2,"C",$E(X,1,30),DA)
	;;^DD(354.2,.05,1,2,"DT")
	;;=2930105
	;;^DD(354.2,.05,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits
	;;^DD(354.2,.05,9)
	;;=^
	;;^DD(354.2,.05,21,0)
	;;=^^2^2^2930430^^^^
	;;^DD(354.2,.05,21,1,0)
	;;=This is the internal code used to look up entries by the billing
	;;^DD(354.2,.05,21,2,0)
	;;=system.  This should not be altered except by the developing ISC.
	;;^DD(354.2,.05,23,0)
	;;=^^9^9^2930430^^^^
	;;^DD(354.2,.05,23,1,0)
	;;=The data in this field is returned as the third piece from the call to
	;;^DD(354.2,.05,23,2,0)
	;;=RXST^IBARXEU and RXEXMT^IBARXEU0.  Programmers can determine certain
	;;^DD(354.2,.05,23,3,0)
	;;=attributes from the code.  Codes of 2 digits are reserved for exemption
	;;^DD(354.2,.05,23,4,0)
	;;=reasons that can automatically be determined by the system but not
	;;^DD(354.2,.05,23,5,0)
	;;=based on income.  Codes of 3 digits are reserved for exemptions based
	;;^DD(354.2,.05,23,6,0)
	;;=on income.  Codes of 4 digits are reserved for exemptions that only
	;;^DD(354.2,.05,23,7,0)
	;;=can be manually entered that would generally over-ride all other
	;;^DD(354.2,.05,23,8,0)
	;;=determinations.
	;;^DD(354.2,.05,23,9,0)
	;;= 
	;;^DD(354.2,.05,"DT")
	;;=2930115
	;;^DD(354.2,.1,0)
	;;=ACTIVE^S^1:ACTIVE;0:INACTIVE;^10;1^Q
	;;^DD(354.2,.1,1,0)
	;;=^.1
	;;^DD(354.2,.1,1,1,0)
	;;=354.2^AA
	;;^DD(354.2,.1,1,1,1)
	;;=S ^IBE(354.2,"AA",$E(X,1,30),DA)=""
	;;^DD(354.2,.1,1,1,2)
	;;=K ^IBE(354.2,"AA",$E(X,1,30),DA)
	;;^DD(354.2,.1,1,1,"%D",0)
	;;=^^1^1^2921110^
	;;^DD(354.2,.1,1,1,"%D",1,0)
	;;=Cross-reference of Active records.

IBINI03Y
IBINI03Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.2,.1,1,1,"DT")
	;;=2921110
	;;^DD(354.2,.1,21,0)
	;;=^^2^2^2921208^^^
	;;^DD(354.2,.1,21,1,0)
	;;=Enter whether or not this Billing Exemption Reason can currently be
	;;^DD(354.2,.1,21,2,0)
	;;=used or not.
	;;^DD(354.2,.1,"DT")
	;;=2921110

IBINI03Z
IBINI03Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(354.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,354.2)
	;;=^IBE(354.2,
	;;^UTILITY(U,$J,354.2,0)
	;;=EXEMPTION REASON^354.2I^9^9
	;;^UTILITY(U,$J,354.2,1,0)
	;;=IN RECEIPT OF PENSION^Patient Receives VA Pension^1^1^40
	;;^UTILITY(U,$J,354.2,2,0)
	;;=IN RECEIPT OF A&A^Patient Receives Aid and Attendance^1^1^20
	;;^UTILITY(U,$J,354.2,3,0)
	;;=IN RECEIPT OF HB^Patient receives House Bound Benefits^1^1^30
	;;^UTILITY(U,$J,354.2,4,0)
	;;=INCOME<PENSION^Patients income below Copay Income Threshold^1^1^120
	;;^UTILITY(U,$J,354.2,5,0)
	;;=INCOME>PENSION^Patients income is greater than Copay Income Threshold^1^0^110
	;;^UTILITY(U,$J,354.2,6,0)
	;;=NO INCOME DATA^There is insufficient income data on file for the prior year.^1^0^210
	;;^UTILITY(U,$J,354.2,7,0)
	;;=NON-VETERAN^Patient is a non-Veteran^1^1^60
	;;^UTILITY(U,$J,354.2,8,0)
	;;=SC>50^Patient is Service Connected 50 percent or more.^1^1^10
	;;^UTILITY(U,$J,354.2,9,0)
	;;=HARDSHIP^Exempted Due to Hardship^1^1^2010

IBINI040
IBINI040	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.3,0,"GL")
	;;=^IBE(354.3,
	;;^DIC("B","BILLING THRESHOLDS",354.3)
	;;=
	;;^DIC(354.3,"%D",0)
	;;=^^15^15^2940214^^^^
	;;^DIC(354.3,"%D",1,0)
	;;=This file contains the threshold amounts for the Medication Copayment
	;;^DIC(354.3,"%D",2,0)
	;;=Income Exemption.  It may contain other types of thresholds in the 
	;;^DIC(354.3,"%D",3,0)
	;;=future.  The Medication Copayment Income Exemption legislation
	;;^DIC(354.3,"%D",4,0)
	;;=was effective on 30-Oct-92.  The thresholds are normally effective
	;;^DIC(354.3,"%D",5,0)
	;;=on December 1.  To simplify implementation VACO has determined that
	;;^DIC(354.3,"%D",6,0)
	;;=the threshold effective 1-Dec-92 would be used for the period from 30-Oct-92
	;;^DIC(354.3,"%D",7,0)
	;;=to 1-Dec-92.
	;;^DIC(354.3,"%D",8,0)
	;;= 
	;;^DIC(354.3,"%D",9,0)
	;;=The Medication Copayment Income Exemption is based on veterans making
	;;^DIC(354.3,"%D",10,0)
	;;=less than the VBA rate for pension plus Aid and Attendence.  
	;;^DIC(354.3,"%D",11,0)
	;;= 
	;;^DIC(354.3,"%D",12,0)
	;;= 
	;;^DIC(354.3,"%D",13,0)
	;;= 
	;;^DIC(354.3,"%D",14,0)
	;;= 
	;;^DIC(354.3,"%D",15,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.3,0)
	;;=FIELD^^.12^12
	;;^DD(354.3,0,"DDA")
	;;=N
	;;^DD(354.3,0,"DT")
	;;=2930405
	;;^DD(354.3,0,"ID",.02)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(354.3,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
	;;^DD(354.3,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(354.3,0,"ID",.04)
	;;=W ""
	;;^DD(354.3,0,"ID",.12)
	;;=W ""
	;;^DD(354.3,0,"IX","AC",354.3,.02)
	;;=
	;;^DD(354.3,0,"IX","AIVDT",354.3,.01)
	;;=
	;;^DD(354.3,0,"IX","AIVDT1",354.3,.02)
	;;=
	;;^DD(354.3,0,"IX","B",354.3,.01)
	;;=
	;;^DD(354.3,0,"NM","BILLING THRESHOLDS")
	;;=
	;;^DD(354.3,.01,0)
	;;=DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.3,.01,1,0)
	;;=^.1
	;;^DD(354.3,.01,1,1,0)
	;;=354.3^B
	;;^DD(354.3,.01,1,1,1)
	;;=S ^IBE(354.3,"B",$E(X,1,30),DA)=""
	;;^DD(354.3,.01,1,1,2)
	;;=K ^IBE(354.3,"B",$E(X,1,30),DA)
	;;^DD(354.3,.01,1,2,0)
	;;=354.3^AIVDT^MUMPS
	;;^DD(354.3,.01,1,2,1)
	;;=I $P(^IBE(354.3,DA,0),"^",2) S ^IBE(354.3,"AIVDT",$P(^(0),"^",2),-X,DA)=""
	;;^DD(354.3,.01,1,2,2)
	;;=K ^IBE(354.3,"AIVDT",+$P(^IBE(354.3,DA,0),"^",2),-X,DA)
	;;^DD(354.3,.01,1,2,"%D",0)
	;;=^^2^2^2921211^
	;;^DD(354.3,.01,1,2,"%D",1,0)
	;;=Inverse date cross reference to rapidly retrieve the proper threshold
	;;^DD(354.3,.01,1,2,"%D",2,0)
	;;=prior to date x.
	;;^DD(354.3,.01,1,2,"DT")
	;;=2921211
	;;^DD(354.3,.01,3)
	;;=
	;;^DD(354.3,.01,21,0)
	;;=^^1^1^2921209^^^
	;;^DD(354.3,.01,21,1,0)
	;;=This is the effective date of this threshold.
	;;^DD(354.3,.01,"DT")
	;;=2921211
	;;^DD(354.3,.02,0)
	;;=TYPE^S^2:PENSION PLUS A&A;^0;2^Q
	;;^DD(354.3,.02,1,0)
	;;=^.1
	;;^DD(354.3,.02,1,1,0)
	;;=354.3^AC
	;;^DD(354.3,.02,1,1,1)
	;;=S ^IBE(354.3,"AC",$E(X,1,30),DA)=""
	;;^DD(354.3,.02,1,1,2)
	;;=K ^IBE(354.3,"AC",$E(X,1,30),DA)
	;;^DD(354.3,.02,1,1,"DT")
	;;=2930319
	;;^DD(354.3,.02,1,2,0)
	;;=354.3^AIVDT1^MUMPS
	;;^DD(354.3,.02,1,2,1)
	;;=I +^IBE(354.3,DA,0) S ^IBE(354.3,"AIVDT",X,-$P(^(0),"^"),DA)=""
	;;^DD(354.3,.02,1,2,2)
	;;=K ^IBE(354.3,"AIVDT",X,-$P(^IBE(354.3,DA,0),"^"),DA)
	;;^DD(354.3,.02,1,2,3)
	;;=DON'T DELETE
	;;^DD(354.3,.02,1,2,"%D",0)
	;;=^^2^2^2921211^
	;;^DD(354.3,.02,1,2,"%D",1,0)
	;;=Inverse date cross reference used to quickly retrieve threshold immediately
	;;^DD(354.3,.02,1,2,"%D",2,0)
	;;=prior to date x.
	;;^DD(354.3,.02,1,2,"DT")
	;;=2921211
	;;^DD(354.3,.02,21,0)
	;;=^^4^4^2930317^^^^
	;;^DD(354.3,.02,21,1,0)
	;;=This is the type of Threshold that this entry is for.  

IBINI041
IBINI041	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.3,.02,21,2,0)
	;;= 
	;;^DD(354.3,.02,21,3,0)
	;;=The Medication Copayment exemption based on income uses the 
	;;^DD(354.3,.02,21,4,0)
	;;=Pension plus A&A threshold for income. 
	;;^DD(354.3,.02,21,5,0)
	;;=Income threshold is used to determine patients who require 
	;;^DD(354.3,.02,21,6,0)
	;;=adjudication.
	;;^DD(354.3,.02,22)
	;;=
	;;^DD(354.3,.02,"DT")
	;;=2930319
	;;^DD(354.3,.03,0)
	;;=BASE RATE FOR VETERAN^RNJ10,2^^0;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.03,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.03,21,0)
	;;=^^1^1^2921209^
	;;^DD(354.3,.03,21,1,0)
	;;=This is the rate for a single veteran.
	;;^DD(354.3,.03,"DT")
	;;=2930405
	;;^DD(354.3,.04,0)
	;;=BASE RATE WITH 1 DEPENDENT^RNJ10,2^^0;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.04,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.04,21,0)
	;;=^^1^1^2930120^^^^
	;;^DD(354.3,.04,21,1,0)
	;;=This is the amount for the Veteran with 1 Dependent.
	;;^DD(354.3,.04,"DT")
	;;=2930405
	;;^DD(354.3,.05,0)
	;;=BASE RATE WITH 2 DEPENDENTS^NJ10,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.05,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.05,21,0)
	;;=^^3^3^2930430^^^
	;;^DD(354.3,.05,21,1,0)
	;;=This is the amount for the Veteran with 2 Dependents.  If this rate
	;;^DD(354.3,.05,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.05,21,3,0)
	;;=dependent amount, it can be left null and computed.
	;;^DD(354.3,.06,0)
	;;=BASE RATE WITH 3 DEPENDENTS^NJ10,2^^0;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.06,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.06,21,0)
	;;=^^3^3^2930430^^^
	;;^DD(354.3,.06,21,1,0)
	;;=This is the amount for the Veteran with 3 Dependents.  If this rate
	;;^DD(354.3,.06,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.06,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.07,0)
	;;=BASE RATE WITH 4 DEPENDENTS^NJ10,2^^0;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.07,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.07,21,0)
	;;=^^3^3^2930430^^
	;;^DD(354.3,.07,21,1,0)
	;;=This is the amount for the Veteran with 4 Dependents.  If this rate
	;;^DD(354.3,.07,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.07,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.08,0)
	;;=BASE RATE WITH 5 DEPENDENTS^NJ10,2^^0;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.08,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.08,21,0)
	;;=^^3^3^2930430^^
	;;^DD(354.3,.08,21,1,0)
	;;=This is the amount for the Veteran with 5 Dependents.  If this rate
	;;^DD(354.3,.08,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.08,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.08,"DT")
	;;=2930120
	;;^DD(354.3,.09,0)
	;;=BASE RATE WITH 6 DEPENDENTS^NJ10,2^^0;9^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.09,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.09,21,0)
	;;=^^3^3^2930430^^

IBINI042
IBINI042	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.3,.09,21,1,0)
	;;=This is the amount for the Veteran with 6 Dependents.  If this rate
	;;^DD(354.3,.09,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.09,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.1,0)
	;;=BASE RATE WITH 7 DEPENDENTS^NJ10,2^^0;10^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.1,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.1,21,0)
	;;=^^3^3^2930430^^
	;;^DD(354.3,.1,21,1,0)
	;;=This is the amount for the Veteran with 7 Dependents.  If this rate
	;;^DD(354.3,.1,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.1,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.1,"DT")
	;;=2930120
	;;^DD(354.3,.11,0)
	;;=BASE RATE WITH 8 DEPENDENTS^NJ10,2^^0;11^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.11,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.11,21,0)
	;;=^^3^3^2930430^^
	;;^DD(354.3,.11,21,1,0)
	;;=This is the amount for the Veteran with 8 Dependents.  If this rate
	;;^DD(354.3,.11,21,2,0)
	;;=is the same as the rate for Veteran with 1 dependent plus an additional
	;;^DD(354.3,.11,21,3,0)
	;;=dependent amount for each dependent, it can be left null and computed.
	;;^DD(354.3,.12,0)
	;;=ADDITIONAL DEPENDENT AMOUNT^RNJ10,2^^0;12^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(354.3,.12,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(354.3,.12,21,0)
	;;=^^1^1^2921209^
	;;^DD(354.3,.12,21,1,0)
	;;=This is the rate for each additional dependent.
	;;^DD(354.3,.12,23,0)
	;;=^^7^7^2921209^
	;;^DD(354.3,.12,23,1,0)
	;;=Calculation of the threshold amount will be based on the number of
	;;^DD(354.3,.12,23,2,0)
	;;=dependents a veteran has.  First the base rate will be determined.
	;;^DD(354.3,.12,23,3,0)
	;;=Second, look at the rate for the veteran with the correct number
	;;^DD(354.3,.12,23,4,0)
	;;=of dependents.  Third, if the entry for the veteran and the number
	;;^DD(354.3,.12,23,5,0)
	;;=of dependents is null, then the threshold will be the base rate
	;;^DD(354.3,.12,23,6,0)
	;;=plus the rate for each additional dependent times the number of 
	;;^DD(354.3,.12,23,7,0)
	;;=dependents.
	;;^DD(354.3,.12,"DT")
	;;=2930405

IBINI043
IBINI043	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(354.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,354.3)
	;;=^IBE(354.3,
	;;^UTILITY(U,$J,354.3,0)
	;;=BILLING THRESHOLDS^354.3DI^2^2
	;;^UTILITY(U,$J,354.3,1,0)
	;;=2921201^2^12187^14548^15844^17140^18436^19732^21028^22324^23620^1296
	;;^UTILITY(U,$J,354.3,2,0)
	;;=2931201^2^12504^14927^16257^17587^18917^20247^21577^22907^24237^1330

IBINI044
IBINI044	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.4,0,"GL")
	;;=^IBA(354.4,
	;;^DIC("B","BILLING ALERTS",354.4)
	;;=
	;;^DIC(354.4,"%D",0)
	;;=^^17^17^2940214^^^^
	;;^DIC(354.4,"%D",1,0)
	;;=This file will only be populated if a site chooses to use the
	;;^DIC(354.4,"%D",2,0)
	;;=Alert functionality available in Kernel v7 instead of receiving 
	;;^DIC(354.4,"%D",3,0)
	;;=mail messages  This is determined by the field USE ALERTS in the
	;;^DIC(354.4,"%D",4,0)
	;;=IB SITE PARAMETERS file.
	;;^DIC(354.4,"%D",5,0)
	;;= 
	;;^DIC(354.4,"%D",6,0)
	;;=The entries will contain the name of the alert and after it has been
	;;^DIC(354.4,"%D",7,0)
	;;=resolved, who resolved the alert.  The entries in this file will
	;;^DIC(354.4,"%D",8,0)
	;;=automatically be deleted by the nightly background job, IB MT NIGHT COMP.
	;;^DIC(354.4,"%D",9,0)
	;;=Resolved alerts will be deleted after 30 days, unresolved alerts will be
	;;^DIC(354.4,"%D",10,0)
	;;=deleted after 60 days.
	;;^DIC(354.4,"%D",11,0)
	;;= 
	;;^DIC(354.4,"%D",12,0)
	;;=The data in the file is automatically entered by the system when
	;;^DIC(354.4,"%D",13,0)
	;;=either a detectable error occurs or when an action occurs that
	;;^DIC(354.4,"%D",14,0)
	;;=requires automatic notification for fiscal integrity (such as
	;;^DIC(354.4,"%D",15,0)
	;;=giving a hardship notification).
	;;^DIC(354.4,"%D",16,0)
	;;= 
	;;^DIC(354.4,"%D",17,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.4,0)
	;;=FIELD^^.04^4
	;;^DD(354.4,0,"DDA")
	;;=N
	;;^DD(354.4,0,"DT")
	;;=2930204
	;;^DD(354.4,0,"IX","AC",354.4,.02)
	;;=
	;;^DD(354.4,0,"IX","B",354.4,.01)
	;;=
	;;^DD(354.4,0,"NM","BILLING ALERTS")
	;;=
	;;^DD(354.4,0,"PT",354.1,.09)
	;;=
	;;^DD(354.4,.01,0)
	;;=BILLING ALERT^RP354.5'^IBE(354.5,^0;1^Q
	;;^DD(354.4,.01,1,0)
	;;=^.1
	;;^DD(354.4,.01,1,1,0)
	;;=354.4^B
	;;^DD(354.4,.01,1,1,1)
	;;=S ^IBA(354.4,"B",$E(X,1,30),DA)=""
	;;^DD(354.4,.01,1,1,2)
	;;=K ^IBA(354.4,"B",$E(X,1,30),DA)
	;;^DD(354.4,.01,3)
	;;=
	;;^DD(354.4,.01,21,0)
	;;=^^2^2^2930204^
	;;^DD(354.4,.01,21,1,0)
	;;=This is a pointer to the type of Billing Alert associated with this
	;;^DD(354.4,.01,21,2,0)
	;;=Alert.
	;;^DD(354.4,.01,"DT")
	;;=2930204
	;;^DD(354.4,.02,0)
	;;=DATE/TIME OF ALERT^D^^0;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.4,.02,1,0)
	;;=^.1
	;;^DD(354.4,.02,1,1,0)
	;;=354.4^AC
	;;^DD(354.4,.02,1,1,1)
	;;=S ^IBA(354.4,"AC",$E(X,1,30),DA)=""
	;;^DD(354.4,.02,1,1,2)
	;;=K ^IBA(354.4,"AC",$E(X,1,30),DA)
	;;^DD(354.4,.02,1,1,"%D",0)
	;;=^^2^2^2930209^
	;;^DD(354.4,.02,1,1,"%D",1,0)
	;;=Cross reference by date, used by purge.  Will purge all entries over
	;;^DD(354.4,.02,1,1,"%D",2,0)
	;;=60 days old and resolved entries over 30 days old.
	;;^DD(354.4,.02,1,1,"DT")
	;;=2930209
	;;^DD(354.4,.02,21,0)
	;;=^^1^1^2930204^
	;;^DD(354.4,.02,21,1,0)
	;;=This is the date time the alert occured.
	;;^DD(354.4,.02,"DT")
	;;=2930209
	;;^DD(354.4,.03,0)
	;;=RESOLVED BY^P200'^VA(200,^0;3^Q
	;;^DD(354.4,.03,21,0)
	;;=^^1^1^2930204^^
	;;^DD(354.4,.03,21,1,0)
	;;=This is the person who resolved the alert.
	;;^DD(354.4,.03,"DT")
	;;=2930204
	;;^DD(354.4,.04,0)
	;;=WHEN RESOLVED^D^^0;4^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(354.4,.04,21,0)
	;;=^^1^1^2930210^^
	;;^DD(354.4,.04,21,1,0)
	;;=This is the date/time when the alert was resolved.
	;;^DD(354.4,.04,"DT")
	;;=2930204

IBINI045
IBINI045	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.5,0,"GL")
	;;=^IBE(354.5,
	;;^DIC("B","BILLING ALERT DEFINITION",354.5)
	;;=
	;;^DIC(354.5,"%D",0)
	;;=^^9^9^2940214^^^^
	;;^DIC(354.5,"%D",1,0)
	;;=This file contains data used to generate alerts.  This information 
	;;^DIC(354.5,"%D",2,0)
	;;=is used to determine recipients and the contents of the alerts.
	;;^DIC(354.5,"%D",3,0)
	;;=Sites should not normally need to delete or edit these entries.
	;;^DIC(354.5,"%D",4,0)
	;;=Specific users and mailgroups can be assigned to receive each alert message.
	;;^DIC(354.5,"%D",5,0)
	;;= 
	;;^DIC(354.5,"%D",6,0)
	;;=Do not add, edit, or delete entries in this file without instructions
	;;^DIC(354.5,"%D",7,0)
	;;=from your ISC.
	;;^DIC(354.5,"%D",8,0)
	;;= 
	;;^DIC(354.5,"%D",9,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.5,0)
	;;=FIELD^^200^10
	;;^DD(354.5,0,"DDA")
	;;=N
	;;^DD(354.5,0,"DT")
	;;=2930204
	;;^DD(354.5,0,"IX","B",354.5,.01)
	;;=
	;;^DD(354.5,0,"NM","BILLING ALERT DEFINITION")
	;;=
	;;^DD(354.5,0,"PT",350.8,.06)
	;;=
	;;^DD(354.5,0,"PT",354.4,.01)
	;;=
	;;^DD(354.5,.001,0)
	;;=NUMBER^NJ5,0^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(354.5,.001,3)
	;;=Type a Number between 1 and 99999, 0 Decimal Digits
	;;^DD(354.5,.001,21,0)
	;;=^^5^5^2930430^^^
	;;^DD(354.5,.001,21,1,0)
	;;=This is the internal entry number assigned to this billing alert
	;;^DD(354.5,.001,21,2,0)
	;;=type.  Entries 1 through 999 are reserved for IB.
	;;^DD(354.5,.001,21,3,0)
	;;= 
	;;^DD(354.5,.001,21,4,0)
	;;=The internal number is used by the ib routines to find entries in this
	;;^DD(354.5,.001,21,5,0)
	;;=file.  Do not delete, edit, or add entries to this file.
	;;^DD(354.5,.001,"DT")
	;;=2930204
	;;^DD(354.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(354.5,.01,1,0)
	;;=^.1
	;;^DD(354.5,.01,1,1,0)
	;;=354.5^B
	;;^DD(354.5,.01,1,1,1)
	;;=S ^IBE(354.5,"B",$E(X,1,30),DA)=""
	;;^DD(354.5,.01,1,1,2)
	;;=K ^IBE(354.5,"B",$E(X,1,30),DA)
	;;^DD(354.5,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(354.5,.01,21,0)
	;;=^^2^2^2930210^
	;;^DD(354.5,.01,21,1,0)
	;;=This is the name of this alert.  It should be close in name or meaning
	;;^DD(354.5,.01,21,2,0)
	;;=to the message text which the users are familiar with seeing.
	;;^DD(354.5,.02,0)
	;;=PACKAGE ID^F^^0;2^K:$L(X)>5!($L(X)<2) X
	;;^DD(354.5,.02,3)
	;;=Answer must be 2-5 characters in length.
	;;^DD(354.5,.02,21,0)
	;;=^^3^3^2930210^^
	;;^DD(354.5,.02,21,1,0)
	;;=This is the package prefix for the package using this notification.
	;;^DD(354.5,.02,21,2,0)
	;;=It will be concatenated with the internal number in the BILLING ALERTS file
	;;^DD(354.5,.02,21,3,0)
	;;=to form the variable XQAID for look up and deleting alerts.
	;;^DD(354.5,.02,23,0)
	;;=^^2^2^2930210^^
	;;^DD(354.5,.02,23,1,0)
	;;=This is used to build the XQAID variable when passed to the alerts
	;;^DD(354.5,.02,23,2,0)
	;;=API.
	;;^DD(354.5,.02,"DT")
	;;=2930204
	;;^DD(354.5,.03,0)
	;;=MESSAGE TEXT^F^^0;3^K:$L(X)>51!($L(X)<3) X
	;;^DD(354.5,.03,3)
	;;=Answer must be 3-51 characters in length.
	;;^DD(354.5,.03,21,0)
	;;=^^3^3^2930430^^^
	;;^DD(354.5,.03,21,1,0)
	;;=This is the message text that will be appended to the patient's name and
	;;^DD(354.5,.03,21,2,0)
	;;=ssn and will be displayed to users when first notified about
	;;^DD(354.5,.03,21,3,0)
	;;=the alert.
	;;^DD(354.5,.03,"DT")
	;;=2930204
	;;^DD(354.5,.05,0)
	;;=ACTION FLAG^S^I:INFORMATION ONLY;R:RUN ROUTINE;^0;5^Q
	;;^DD(354.5,.05,21,0)
	;;=^^7^7^2930430^^^
	;;^DD(354.5,.05,21,1,0)
	;;=Enter 'I' if the user is to take no follow-up action for this

IBINI046
IBINI046	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.5,.05,21,2,0)
	;;=notification. Enter 'R' if the user is to take a follow-up action
	;;^DD(354.5,.05,21,3,0)
	;;=after viewing this notification. 
	;;^DD(354.5,.05,21,4,0)
	;;= 
	;;^DD(354.5,.05,21,5,0)
	;;=This is a mandatory flag used to regulate processing in the alert
	;;^DD(354.5,.05,21,6,0)
	;;=software.  No additional action will be allowed after viewing
	;;^DD(354.5,.05,21,7,0)
	;;=information only alerts.
	;;^DD(354.5,.05,"DT")
	;;=2930204
	;;^DD(354.5,.06,0)
	;;=ENTRY POINT^F^^0;6^K:$L(X)>8!($L(X)<1) X
	;;^DD(354.5,.06,3)
	;;=Answer must be 1-8 characters in length.  This will be concatentated with the routine name.
	;;^DD(354.5,.06,21,0)
	;;=^^3^3^2930210^
	;;^DD(354.5,.06,21,1,0)
	;;=This is the entry point in a routine that will be run when the alert
	;;^DD(354.5,.06,21,2,0)
	;;=is processed.  It is used to build the variable XQAROU.  This field
	;;^DD(354.5,.06,21,3,0)
	;;=represents the TAG in tag^routine.
	;;^DD(354.5,.06,"DT")
	;;=2930204
	;;^DD(354.5,.07,0)
	;;=ROUTINE NAME^F^^0;7^K:$L(X)>8!($L(X)<2) X
	;;^DD(354.5,.07,3)
	;;=Answer must be 2-8 characters in length.
	;;^DD(354.5,.07,21,0)
	;;=^^3^3^2930210^
	;;^DD(354.5,.07,21,1,0)
	;;=This is the routine name that will be called by the alert software when
	;;^DD(354.5,.07,21,2,0)
	;;=processing the alert.  The variable XQAROU will be defined as tag^routine
	;;^DD(354.5,.07,21,3,0)
	;;=where this is the routine.  (ie xqarou=$p(^ibe(354.4,n,0),"^",6,7)
	;;^DD(354.5,.07,"DT")
	;;=2930204
	;;^DD(354.5,2,0)
	;;=RECIPIENT GROUPS^354.52PA^^2;0
	;;^DD(354.5,2,21,0)
	;;=^^1^1^2930210^
	;;^DD(354.5,2,21,1,0)
	;;=These are mail groups that this alert should be sent to.
	;;^DD(354.5,3,0)
	;;=PROCESSING FLAG^S^D:DISABLED;E:ENABLED;M:MANDATORY;^3;1^Q
	;;^DD(354.5,3,21,0)
	;;=^^3^3^2930210^
	;;^DD(354.5,3,21,1,0)
	;;=This field is used to regulate the alert processing.  Notifications flagged
	;;^DD(354.5,3,21,2,0)
	;;=as "D" will indicate the alert is disabled and will not be processed.  A
	;;^DD(354.5,3,21,3,0)
	;;=flag of "M" indicates the alert is enabled and mandatory.
	;;^DD(354.5,3,"DT")
	;;=2930204
	;;^DD(354.5,200,0)
	;;=RECIPIENT USERS^354.5002PA^^200;0
	;;^DD(354.5,200,21,0)
	;;=^^1^1^2930210^
	;;^DD(354.5,200,21,1,0)
	;;=These are users who have been determined to need to see this alert.
	;;^DD(354.5002,0)
	;;=RECIPIENT USERS SUB-FIELD^^.01^1
	;;^DD(354.5002,0,"DT")
	;;=2930204
	;;^DD(354.5002,0,"IX","B",354.5002,.01)
	;;=
	;;^DD(354.5002,0,"NM","RECIPIENT USERS")
	;;=
	;;^DD(354.5002,0,"UP")
	;;=354.5
	;;^DD(354.5002,.01,0)
	;;=RECIPIENT USERS^MP200'^VA(200,^0;1^Q
	;;^DD(354.5002,.01,1,0)
	;;=^.1
	;;^DD(354.5002,.01,1,1,0)
	;;=354.5002^B
	;;^DD(354.5002,.01,1,1,1)
	;;=S ^IBE(354.5,DA(1),200,"B",$E(X,1,30),DA)=""
	;;^DD(354.5002,.01,1,1,2)
	;;=K ^IBE(354.5,DA(1),200,"B",$E(X,1,30),DA)
	;;^DD(354.5002,.01,21,0)
	;;=^^1^1^2930210^
	;;^DD(354.5002,.01,21,1,0)
	;;=These are users who have been determined to need to see this alert.
	;;^DD(354.5002,.01,"DT")
	;;=2930204
	;;^DD(354.52,0)
	;;=RECIPIENT GROUPS SUB-FIELD^^.01^1
	;;^DD(354.52,0,"DT")
	;;=2930204
	;;^DD(354.52,0,"IX","B",354.52,.01)
	;;=
	;;^DD(354.52,0,"NM","RECIPIENT GROUPS")
	;;=
	;;^DD(354.52,0,"UP")
	;;=354.5
	;;^DD(354.52,.01,0)
	;;=RECIPIENT GROUPS^MP3.8'^XMB(3.8,^0;1^Q
	;;^DD(354.52,.01,1,0)
	;;=^.1
	;;^DD(354.52,.01,1,1,0)
	;;=354.52^B
	;;^DD(354.52,.01,1,1,1)
	;;=S ^IBE(354.5,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(354.52,.01,1,1,2)
	;;=K ^IBE(354.5,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(354.52,.01,21,0)
	;;=^^2^2^2930210^
	;;^DD(354.52,.01,21,1,0)
	;;=Enter the name of a mail group.  The alert will be sent to all

IBINI047
IBINI047	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.52,.01,21,2,0)
	;;=current members of this mail group if one is entered.
	;;^DD(354.52,.01,"DT")
	;;=2930204

IBINI048
IBINI048	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(354.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,354.5)
	;;=^IBE(354.5,
	;;^UTILITY(U,$J,354.5,0)
	;;=BILLING ALERT DEFINITION^354.5^20^14
	;;^UTILITY(U,$J,354.5,1,0)
	;;=TO HARDSHIP^IB^Patient given Copay Hardship^^I^1^IBAERR3
	;;^UTILITY(U,$J,354.5,1,3)
	;;=E
	;;^UTILITY(U,$J,354.5,2,0)
	;;=FROM HARDSHIP^IB^Copay Hardship Removed^^I^1^IBAERR3
	;;^UTILITY(U,$J,354.5,2,3)
	;;=E
	;;^UTILITY(U,$J,354.5,3,0)
	;;=INCOME EXPIRED^IB^Copay Income Exemption expired^^I^1^IBAERR3
	;;^UTILITY(U,$J,354.5,3,3)
	;;=E
	;;^UTILITY(U,$J,354.5,10,0)
	;;=UNKNOWN ALERT^IB^Unknown Error Occured^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,10,3)
	;;=M
	;;^UTILITY(U,$J,354.5,11,0)
	;;=LOCK FAILED^IB^Adding a Copay Exemption Failed^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,11,3)
	;;=E
	;;^UTILITY(U,$J,354.5,12,0)
	;;=ADD PATIENT FAILED^IB^Failed Adding to Billing Patient file^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,12,3)
	;;=E
	;;^UTILITY(U,$J,354.5,13,0)
	;;=BAD DATE^IB^Adding a Copay Exemption Failed^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,13,3)
	;;=E
	;;^UTILITY(U,$J,354.5,14,0)
	;;=DICN FAILED^IB^Adding a Copay Exemption Failed^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,14,3)
	;;=E
	;;^UTILITY(U,$J,354.5,15,0)
	;;=EDITING FAILED^IB^Editing a Copay Exemption Failed^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,16,0)
	;;=CURRENT STATUS FAILED^IB^Failed while updating Current Status^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,16,3)
	;;=E
	;;^UTILITY(U,$J,354.5,17,0)
	;;=INACTIVATION FAILED^IB^Failed while inactiving old entries^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,17,3)
	;;=E
	;;^UTILITY(U,$J,354.5,18,0)
	;;=USER UNDEFINED^IB^Failed to add exemption, User undefined.^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,18,3)
	;;=M
	;;^UTILITY(U,$J,354.5,19,0)
	;;=PATIENT LOCKED WHILE ADDING^IB^Failed to add Billing Patient Entry, locked.^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,19,3)
	;;=M
	;;^UTILITY(U,$J,354.5,20,0)
	;;=FAILED IN AR^IB^Failed in Accounts Receivable^^R^11^IBAERR3
	;;^UTILITY(U,$J,354.5,20,3)
	;;=M

IBINI049
IBINI049	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.6,0,"GL")
	;;=^IBE(354.6,
	;;^DIC("B","IB FORM LETTER",354.6)
	;;=
	;;^DIC(354.6,"%D",0)
	;;=^^8^8^2940214^^
	;;^DIC(354.6,"%D",1,0)
	;;=This file contains the Header and Main body of letters that are
	;;^DIC(354.6,"%D",2,0)
	;;=generated by the IB package.  Sites should edit the header of the
	;;^DIC(354.6,"%D",3,0)
	;;=letter to their own address.  Sites may edit the main body of the
	;;^DIC(354.6,"%D",4,0)
	;;=letter to change the signer of the letter or add in contact persons 
	;;^DIC(354.6,"%D",5,0)
	;;=and phone numbers.  The text of the letters have been approved
	;;^DIC(354.6,"%D",6,0)
	;;=by MCCR VACO.
	;;^DIC(354.6,"%D",7,0)
	;;= 
	;;^DIC(354.6,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(354.6,0)
	;;=FIELD^^2^6
	;;^DD(354.6,0,"DDA")
	;;=N
	;;^DD(354.6,0,"DT")
	;;=2930507
	;;^DD(354.6,0,"IX","B",354.6,.01)
	;;=
	;;^DD(354.6,0,"NM","IB FORM LETTER")
	;;=
	;;^DD(354.6,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(354.6,.01,1,0)
	;;=^.1
	;;^DD(354.6,.01,1,1,0)
	;;=354.6^B
	;;^DD(354.6,.01,1,1,1)
	;;=S ^IBE(354.6,"B",$E(X,1,30),DA)=""
	;;^DD(354.6,.01,1,1,2)
	;;=K ^IBE(354.6,"B",$E(X,1,30),DA)
	;;^DD(354.6,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(354.6,.01,21,0)
	;;=^^5^5^2930504^^^
	;;^DD(354.6,.01,21,1,0)
	;;=Enter the name of the form letter.  Normally the names will begin with
	;;^DD(354.6,.01,21,2,0)
	;;=the IB namespace.  The entries in this file will normally
	;;^DD(354.6,.01,21,3,0)
	;;=be sent out with each release in the approved format from VACO.
	;;^DD(354.6,.01,21,4,0)
	;;=Local editing of the Header and of the signature line in the main body
	;;^DD(354.6,.01,21,5,0)
	;;=is permitted.
	;;^DD(354.6,.01,22)
	;;=
	;;^DD(354.6,.01,"DT")
	;;=2930504
	;;^DD(354.6,.02,0)
	;;=LONG NAME^F^^0;2^K:$L(X)>60!($L(X)<3) X
	;;^DD(354.6,.02,3)
	;;=Answer must be 3-60 characters in length.
	;;^DD(354.6,.02,21,0)
	;;=^^1^1^2940213^^
	;;^DD(354.6,.02,21,1,0)
	;;=This is the full descriptive name of this letter.
	;;^DD(354.6,.02,"DT")
	;;=2930427
	;;^DD(354.6,.03,0)
	;;=TYPE^S^1:INITAL EXEMPTION;^0;3^Q
	;;^DD(354.6,.03,21,0)
	;;=^^2^2^2940213^^^
	;;^DD(354.6,.03,21,1,0)
	;;=This field tells what type of application the letter is for.  Currently 
	;;^DD(354.6,.03,21,2,0)
	;;=only one type is defined.
	;;^DD(354.6,.03,"DT")
	;;=2930427
	;;^DD(354.6,.04,0)
	;;=STARTING ADDRESS LINE^NJ2,0^^0;4^K:+X'=X!(X>25)!(X<10)!(X?.E1"."1N.N) X
	;;^DD(354.6,.04,3)
	;;=Type a Number between 10 and 25, 0 Decimal Digits
	;;^DD(354.6,.04,21,0)
	;;=^^6^6^2930507^^
	;;^DD(354.6,.04,21,1,0)
	;;=This is the line number that the patient address should start on.  The
	;;^DD(354.6,.04,21,2,0)
	;;=default if this is unanswered is line 15.  
	;;^DD(354.6,.04,21,3,0)
	;;= 
	;;^DD(354.6,.04,21,4,0)
	;;=To account for slight differences in printers and automated letter folders
	;;^DD(354.6,.04,21,5,0)
	;;=the line that the address starts on is now a parameter.  Set this to the
	;;^DD(354.6,.04,21,6,0)
	;;=correct value for the printer and folder combination for your facility.
	;;^DD(354.6,.04,"DT")
	;;=2930507
	;;^DD(354.6,1,0)
	;;=MAIN BODY^354.61^^1;0
	;;^DD(354.6,1,21,0)
	;;=^^2^2^2930504^^^
	;;^DD(354.6,1,21,1,0)
	;;=This field contains the main body of the letter that will be printed
	;;^DD(354.6,1,21,2,0)
	;;=after the salutation and includes the signature line.
	;;^DD(354.6,1,23,0)
	;;=^^3^3^2930429^
	;;^DD(354.6,1,23,1,0)
	;;=The data in this field will be printed as it is entered.  VA FileMan
	;;^DD(354.6,1,23,2,0)
	;;=utilities are not used to format the data, hence, any imbedded functions

IBINI04A
IBINI04A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(354.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(354.6,1,23,3,0)
	;;=will not print properly.
	;;^DD(354.6,1,"DT")
	;;=2930428
	;;^DD(354.6,2,0)
	;;=HEADER^354.62^^2;0
	;;^DD(354.6,2,21,0)
	;;=^^3^3^2940213^^
	;;^DD(354.6,2,21,1,0)
	;;=The first six lines in this field will be centered at the top of plain
	;;^DD(354.6,2,21,2,0)
	;;=paper to form the header of the letter.  The data in this field should
	;;^DD(354.6,2,21,3,0)
	;;=be edited to the correct station name and address of your facility.
	;;^DD(354.6,2,23,0)
	;;=^^3^3^2940213^^
	;;^DD(354.6,2,23,1,0)
	;;=The data in this field will be printed as it is entered.  VA FileMan
	;;^DD(354.6,2,23,2,0)
	;;=utilities are not used to format the data, hence, any imbedded functions
	;;^DD(354.6,2,23,3,0)
	;;=will not print properly.
	;;^DD(354.61,0)
	;;=MAIN BODY SUB-FIELD^^.01^1
	;;^DD(354.61,0,"DT")
	;;=2930428
	;;^DD(354.61,0,"NM","MAIN BODY")
	;;=
	;;^DD(354.61,0,"UP")
	;;=354.6
	;;^DD(354.61,.01,0)
	;;=MAIN BODY^W^^0;1^Q
	;;^DD(354.61,.01,21,0)
	;;=^^2^2^2930504^^^
	;;^DD(354.61,.01,21,1,0)
	;;=This field contains the main body of the letter that will be printed
	;;^DD(354.61,.01,21,2,0)
	;;=after the salutation and includes the signature line.  
	;;^DD(354.61,.01,23,0)
	;;=^^3^3^2930504^^
	;;^DD(354.61,.01,23,1,0)
	;;=The data in this field will be printed as it is entered.  VA FileMan
	;;^DD(354.61,.01,23,2,0)
	;;=utilities are not used to format the data, hence, any imbedded functions
	;;^DD(354.61,.01,23,3,0)
	;;=will not print properly.
	;;^DD(354.61,.01,"DT")
	;;=2930428
	;;^DD(354.62,0)
	;;=HEADER SUB-FIELD^^.01^1
	;;^DD(354.62,0,"DT")
	;;=2930428
	;;^DD(354.62,0,"NM","HEADER")
	;;=
	;;^DD(354.62,0,"UP")
	;;=354.6
	;;^DD(354.62,.01,0)
	;;=HEADER^W^^0;1^Q
	;;^DD(354.62,.01,21,0)
	;;=^^3^3^2940213^^
	;;^DD(354.62,.01,21,1,0)
	;;=The first six lines in this field will be centered at the top of plain
	;;^DD(354.62,.01,21,2,0)
	;;=paper to form the header of the letter.  The data in this field should
	;;^DD(354.62,.01,21,3,0)
	;;=be edited to the correct station name and address of your facility.
	;;^DD(354.62,.01,23,0)
	;;=^^3^3^2940213^^^
	;;^DD(354.62,.01,23,1,0)
	;;=The data in this field will be printed as it is entered.  VA FileMan
	;;^DD(354.62,.01,23,2,0)
	;;=utilities are not used to format the data, hence, any imbedded functions
	;;^DD(354.62,.01,23,3,0)
	;;=will not print properly.
	;;^DD(354.62,.01,"DT")
	;;=2930428

IBINI04B
IBINI04B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(354.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,354.6)
	;;=^IBE(354.6,
	;;^UTILITY(U,$J,354.6,0)
	;;=IB FORM LETTER^354.6^1^1
	;;^UTILITY(U,$J,354.6,1,0)
	;;=IB NOW EXEMPT^Initial letter of Copay Exemption^1^15
	;;^UTILITY(U,$J,354.6,1,1,0)
	;;=^^25^25^2930512^^^^
	;;^UTILITY(U,$J,354.6,1,1,1,0)
	;;=Public Law 102-568 enacted on October 29, 1992, provided for an exemption
	;;^UTILITY(U,$J,354.6,1,1,2,0)
	;;=to the prescription copayment for those veterans who had income levels
	;;^UTILITY(U,$J,354.6,1,1,3,0)
	;;=less than the maximum rate of VA pension.  Charges established before 
	;;^UTILITY(U,$J,354.6,1,1,4,0)
	;;=October 29, 1992, were not exempted by the legislation.
	;;^UTILITY(U,$J,354.6,1,1,5,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,6,0)
	;;=We have reviewed your income and eligibility information contained in our
	;;^UTILITY(U,$J,354.6,1,1,7,0)
	;;=records and determined that you are eligible for the exemption.  We are 
	;;^UTILITY(U,$J,354.6,1,1,8,0)
	;;=currently reviewing your account and will make the appropriate adjustments
	;;^UTILITY(U,$J,354.6,1,1,9,0)
	;;=to it in the near future.  If you are eligible for a refund for payments
	;;^UTILITY(U,$J,354.6,1,1,10,0)
	;;=made on charges established since October 29, 1992, we will forward you a 
	;;^UTILITY(U,$J,354.6,1,1,11,0)
	;;=check.  While we are reviewing your account we will not be sending out a 
	;;^UTILITY(U,$J,354.6,1,1,12,0)
	;;=statement.
	;;^UTILITY(U,$J,354.6,1,1,13,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,14,0)
	;;=Medication copayment exemptions based upon annual income must be 
	;;^UTILITY(U,$J,354.6,1,1,15,0)
	;;=re-evaluated yearly on the anniversary of your means test or copayment 
	;;^UTILITY(U,$J,354.6,1,1,16,0)
	;;=test.  If a renewal date is shown below the 'in reply' heading you must 
	;;^UTILITY(U,$J,354.6,1,1,17,0)
	;;=complete a new copay income test by that date or you will no longer be 
	;;^UTILITY(U,$J,354.6,1,1,18,0)
	;;=considered exempt from the pharmacy copayment requirement.
	;;^UTILITY(U,$J,354.6,1,1,19,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,20,0)
	;;=Please do not send in any more payments until we have completed this review
	;;^UTILITY(U,$J,354.6,1,1,21,0)
	;;=and forwarded a statement to you.
	;;^UTILITY(U,$J,354.6,1,1,22,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,23,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,24,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,1,25,0)
	;;=FINANCE OFFICER
	;;^UTILITY(U,$J,354.6,1,2,0)
	;;=^^6^6^2930512^^^^
	;;^UTILITY(U,$J,354.6,1,2,1,0)
	;;=Department of Veterans Affairs Medical Center
	;;^UTILITY(U,$J,354.6,1,2,2,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,2,3,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,2,4,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,2,5,0)
	;;= 
	;;^UTILITY(U,$J,354.6,1,2,6,0)
	;;= 

IBINI04C
IBINI04C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.1,0,"GL")
	;;=^IBE(355.1,
	;;^DIC("B","TYPE OF PLAN",355.1)
	;;=
	;;^DIC(355.1,"%D",0)
	;;=^^6^6^2940214^^^^
	;;^DIC(355.1,"%D",1,0)
	;;=This file contains the standard types of plans that an insurance
	;;^DIC(355.1,"%D",2,0)
	;;=company may provide.  The type of plan may be dependent on the type
	;;^DIC(355.1,"%D",3,0)
	;;=of coverage provided by the insurance company and may affect the type
	;;^DIC(355.1,"%D",4,0)
	;;=of benefits that are available for the plan.
	;;^DIC(355.1,"%D",5,0)
	;;= 
	;;^DIC(355.1,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.1,0)
	;;=FIELD^^10^4
	;;^DD(355.1,0,"DDA")
	;;=N
	;;^DD(355.1,0,"DT")
	;;=2940111
	;;^DD(355.1,0,"ID",.03)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(355.1,.03,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,3)_"":"",2),$C(59),1)")
	;;^DD(355.1,0,"IX","B",355.1,.01)
	;;=
	;;^DD(355.1,0,"IX","C",355.1,.03)
	;;=
	;;^DD(355.1,0,"IX","D",355.1,.02)
	;;=
	;;^DD(355.1,0,"NM","TYPE OF PLAN")
	;;=
	;;^DD(355.1,0,"PT",355.3,.09)
	;;=
	;;^DD(355.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(355.1,.01,1,0)
	;;=^.1
	;;^DD(355.1,.01,1,1,0)
	;;=355.1^B
	;;^DD(355.1,.01,1,1,1)
	;;=S ^IBE(355.1,"B",$E(X,1,30),DA)=""
	;;^DD(355.1,.01,1,1,2)
	;;=K ^IBE(355.1,"B",$E(X,1,30),DA)
	;;^DD(355.1,.01,3)
	;;=Enter the name of this type of policy that best describes the policy.  Answer must be 3-40 characters in length.
	;;^DD(355.1,.01,21,0)
	;;=^^10^10^2940213^^^^
	;;^DD(355.1,.01,21,1,0)
	;;=There are a number of different types of policies, some have very
	;;^DD(355.1,.01,21,2,0)
	;;=specific types of coverage while others cover a much broader
	;;^DD(355.1,.01,21,3,0)
	;;=range of care.  This is the name of the type of policy.  Select
	;;^DD(355.1,.01,21,4,0)
	;;=the name that best describes the type of policy.  This is a list of 
	;;^DD(355.1,.01,21,5,0)
	;;=standard types of policies.
	;;^DD(355.1,.01,21,6,0)
	;;= 
	;;^DD(355.1,.01,21,7,0)
	;;=The type of policy may be dependent on the type of coverage provided
	;;^DD(355.1,.01,21,8,0)
	;;=by the insurance company and may affect the type of benefits that are
	;;^DD(355.1,.01,21,9,0)
	;;=available for the policy.  This will be used in determining if the
	;;^DD(355.1,.01,21,10,0)
	;;=reimbursement from the insurance company is appropriate for this policy.
	;;^DD(355.1,.01,"DT")
	;;=2930225
	;;^DD(355.1,.02,0)
	;;=ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2) X
	;;^DD(355.1,.02,1,0)
	;;=^.1
	;;^DD(355.1,.02,1,1,0)
	;;=355.1^D
	;;^DD(355.1,.02,1,1,1)
	;;=S ^IBE(355.1,"D",$E(X,1,30),DA)=""
	;;^DD(355.1,.02,1,1,2)
	;;=K ^IBE(355.1,"D",$E(X,1,30),DA)
	;;^DD(355.1,.02,1,1,"DT")
	;;=2930603
	;;^DD(355.1,.02,3)
	;;=Enter the standard abbreviation.  Answer must be 2-8 characters in length.
	;;^DD(355.1,.02,21,0)
	;;=^^3^3^2930603^
	;;^DD(355.1,.02,21,1,0)
	;;=Enter the standard abbreviation for this type of policy.  The abbreviation
	;;^DD(355.1,.02,21,2,0)
	;;=will be used on standard displays of policy information where space is
	;;^DD(355.1,.02,21,3,0)
	;;=limited.
	;;^DD(355.1,.02,"DT")
	;;=2930603
	;;^DD(355.1,.03,0)
	;;=MAJOR CATEGORY^S^1:MAJOR MEDICAL;2:DENTAL;3:HMO;4:PPO;5:MEDICARE;6:MEDICAIDE;7:CHAMPUS;8:WORKMANS COMP;9:INDEMNITY;10:PRESCRIPTION;11:MEDICARE SUPPLEMENTAL;12:ALL OTHER;^0;3^Q
	;;^DD(355.1,.03,1,0)
	;;=^.1
	;;^DD(355.1,.03,1,1,0)
	;;=355.1^C
	;;^DD(355.1,.03,1,1,1)
	;;=S ^IBE(355.1,"C",$E(X,1,30),DA)=""
	;;^DD(355.1,.03,1,1,2)
	;;=K ^IBE(355.1,"C",$E(X,1,30),DA)
	;;^DD(355.1,.03,1,1,"DT")
	;;=2930603

IBINI04D
IBINI04D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.1,.03,21,0)
	;;=^^3^3^2940111^^^
	;;^DD(355.1,.03,21,1,0)
	;;=Each type of policy must be identified with a major category.  It is the
	;;^DD(355.1,.03,21,2,0)
	;;=major category field that will be used to determine the type of policy
	;;^DD(355.1,.03,21,3,0)
	;;=internally by the computer.
	;;^DD(355.1,.03,"DT")
	;;=2940111
	;;^DD(355.1,10,0)
	;;=DESCRIPTION^355.11^^10;0
	;;^DD(355.1,10,21,0)
	;;=^^1^1^2930603^
	;;^DD(355.1,10,21,1,0)
	;;=Enter a one or two sentence description of the type of policy.
	;;^DD(355.11,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(355.11,0,"DT")
	;;=2930603
	;;^DD(355.11,0,"NM","DESCRIPTION")
	;;=
	;;^DD(355.11,0,"UP")
	;;=355.1
	;;^DD(355.11,.01,0)
	;;=DESCRIPTION^W^^0;1^Q
	;;^DD(355.11,.01,"DT")
	;;=2930603

IBINI04E
IBINI04E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.1)
	;;=^IBE(355.1,
	;;^UTILITY(U,$J,355.1,0)
	;;=TYPE OF PLAN^355.1I^60^38
	;;^UTILITY(U,$J,355.1,1,0)
	;;=ACCIDENT AND HEALTH INSURANCE^ACCIDENT^1
	;;^UTILITY(U,$J,355.1,1,10,0)
	;;=^^2^2^2930603^
	;;^UTILITY(U,$J,355.1,1,10,1,0)
	;;=Insurance under which benefits are payable in case of disease,
	;;^UTILITY(U,$J,355.1,1,10,2,0)
	;;=accidental injury, or accidental death.
	;;^UTILITY(U,$J,355.1,2,0)
	;;=AVIATION TRIP INSURANCE^AVIATION^1
	;;^UTILITY(U,$J,355.1,2,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,2,10,1,0)
	;;=A short-term policy protecting individuals as passengers on scheduled
	;;^UTILITY(U,$J,355.1,2,10,2,0)
	;;=airline flights.  It is generally obtained at airports.
	;;^UTILITY(U,$J,355.1,3,0)
	;;=BLUE CROSS/BLUE SHIELD^BCBS^1
	;;^UTILITY(U,$J,355.1,3,10,0)
	;;=^^4^4^2930603^
	;;^UTILITY(U,$J,355.1,3,10,1,0)
	;;=An independent, not-for-profit membership corporation providing
	;;^UTILITY(U,$J,355.1,3,10,2,0)
	;;=protection against the costs of hospital care (Blue Cross) and
	;;^UTILITY(U,$J,355.1,3,10,3,0)
	;;=against the costs of surgery and other items of medical care
	;;^UTILITY(U,$J,355.1,3,10,4,0)
	;;=(Blue Shield).
	;;^UTILITY(U,$J,355.1,5,0)
	;;=CATASTROPHIC INSURANCE^CI^1
	;;^UTILITY(U,$J,355.1,5,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,5,10,1,0)
	;;=Insurance against catastrophic illness.
	;;^UTILITY(U,$J,355.1,6,0)
	;;=CHAMPUS^CPS^7
	;;^UTILITY(U,$J,355.1,6,10,0)
	;;=^^4^4^2940111^
	;;^UTILITY(U,$J,355.1,6,10,1,0)
	;;=A government-sponsored program that provides hospital and medical
	;;^UTILITY(U,$J,355.1,6,10,2,0)
	;;=services for dependents of active service, retired service personnel
	;;^UTILITY(U,$J,355.1,6,10,3,0)
	;;=and their dependents, and dependents of deceased members who died in
	;;^UTILITY(U,$J,355.1,6,10,4,0)
	;;=active duty.
	;;^UTILITY(U,$J,355.1,7,0)
	;;=COINSURANCE^COINS^1
	;;^UTILITY(U,$J,355.1,7,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,7,10,1,0)
	;;=A plan under which the insured and the insurer share hospital and
	;;^UTILITY(U,$J,355.1,7,10,2,0)
	;;=medical expenses resulting from illness or injury.  Sometimes seen in
	;;^UTILITY(U,$J,355.1,7,10,3,0)
	;;=major medical insurance.
	;;^UTILITY(U,$J,355.1,8,0)
	;;=COMPREHENSIVE MAJOR MEDICAL^CMM^1
	;;^UTILITY(U,$J,355.1,8,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,8,10,1,0)
	;;=A policy designed to give the protection offered by both a basic
	;;^UTILITY(U,$J,355.1,8,10,2,0)
	;;=and a major medical health insurance policy.
	;;^UTILITY(U,$J,355.1,9,0)
	;;=DENTAL INSURANCE^DENIN^2
	;;^UTILITY(U,$J,355.1,9,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,9,10,1,0)
	;;=A form of insurance that provides protectio against the costs of 
	;;^UTILITY(U,$J,355.1,9,10,2,0)
	;;=diagnostic and preventive dental care as well as oral surgery,
	;;^UTILITY(U,$J,355.1,9,10,3,0)
	;;=restorative procedures, and therapeutic dental care.
	;;^UTILITY(U,$J,355.1,12,0)
	;;=DUAL COVERAGE^DC
	;;^UTILITY(U,$J,355.1,12,10,0)
	;;=
	;;^UTILITY(U,$J,355.1,12,10,1,0)
	;;=A plan under which the insured has health insurance coverage from
	;;^UTILITY(U,$J,355.1,12,10,2,0)
	;;=more than one carrier.
	;;^UTILITY(U,$J,355.1,18,0)
	;;=HEALTH MAINTENANCE ORGANIZ^HMO^1
	;;^UTILITY(U,$J,355.1,18,10,0)
	;;=^^5^5^2940105^
	;;^UTILITY(U,$J,355.1,18,10,1,0)
	;;=An organization that provides for a wide range of comprehensive
	;;^UTILITY(U,$J,355.1,18,10,2,0)
	;;=health care services for a specified group at a fixed periodic
	;;^UTILITY(U,$J,355.1,18,10,3,0)
	;;=payment.  An HMO can be sponsored by the government, medical schools,
	;;^UTILITY(U,$J,355.1,18,10,4,0)
	;;=hospitals, employers, labor unions, consumer groups, insurance

IBINI04F
IBINI04F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.1,18,10,5,0)
	;;=companies, or hospital-medical plans.
	;;^UTILITY(U,$J,355.1,20,0)
	;;=HOSPITAL EXPENSE INSURANCE^HEI^1
	;;^UTILITY(U,$J,355.1,20,10,0)
	;;=^^2^2^2930604^
	;;^UTILITY(U,$J,355.1,20,10,1,0)
	;;=Health insurance protection against the costs of hospital care
	;;^UTILITY(U,$J,355.1,20,10,2,0)
	;;=resulting from the illness or injury of an insured person.
	;;^UTILITY(U,$J,355.1,22,0)
	;;=INDIVIDUAL PRACTICE ASSOCATION (IPA)^IPA^1
	;;^UTILITY(U,$J,355.1,22,10,0)
	;;=^^3^3^2930604^
	;;^UTILITY(U,$J,355.1,22,10,1,0)
	;;=An organization in which a program administrator contracts with a 
	;;^UTILITY(U,$J,355.1,22,10,2,0)
	;;=number of pysicians who agree to provide treatment to subscribers in
	;;^UTILITY(U,$J,355.1,22,10,3,0)
	;;=their own offices for a fixed capitation payment per month.
	;;^UTILITY(U,$J,355.1,24,0)
	;;=KEY-MAN HEALTH INSURANCE^KMHI^1
	;;^UTILITY(U,$J,355.1,24,10,0)
	;;=^^5^5^2930604^
	;;^UTILITY(U,$J,355.1,24,10,1,0)
	;;=An individual or group insurance policy designed to protect an essential
	;;^UTILITY(U,$J,355.1,24,10,2,0)
	;;=employee or employees of a firm against the loss of income resulting
	;;^UTILITY(U,$J,355.1,24,10,3,0)
	;;=from disability.  If desired, it may be written for the benefit of 
	;;^UTILITY(U,$J,355.1,24,10,4,0)
	;;=the employer, who usually continues to pay the salary during periods 
	;;^UTILITY(U,$J,355.1,24,10,5,0)
	;;=of disability.
	;;^UTILITY(U,$J,355.1,27,0)
	;;=MAJOR MEDICAL EXPENSE INSURANCE^MMEI^1
	;;^UTILITY(U,$J,355.1,27,10,0)
	;;=^^11^11^2930604^
	;;^UTILITY(U,$J,355.1,27,10,1,0)
	;;=Health insurance to finance the expense of major illnesses and
	;;^UTILITY(U,$J,355.1,27,10,2,0)
	;;=injuries.  Major medical policies usually include a deductible
	;;^UTILITY(U,$J,355.1,27,10,3,0)
	;;=clause, which means that the individual or another insurer 
	;;^UTILITY(U,$J,355.1,27,10,4,0)
	;;=contributes toward the cost of the medical expenses.  The
	;;^UTILITY(U,$J,355.1,27,10,5,0)
	;;=larger the deductible, the greater the savings in premium cost.
	;;^UTILITY(U,$J,355.1,27,10,6,0)
	;;=Above this initial deductible, major medical insurance is 
	;;^UTILITY(U,$J,355.1,27,10,7,0)
	;;=characterized by large benefit maximums, ranging up to $25,000
	;;^UTILITY(U,$J,355.1,27,10,8,0)
	;;=or even beyond.  The holder is reimbursed for the major part
	;;^UTILITY(U,$J,355.1,27,10,9,0)
	;;=of all charges for the hospital, the doctor, private nurse, medical 
	;;^UTILITY(U,$J,355.1,27,10,10,0)
	;;=appliances, and prescribed out-of-hospital treatment, drugs, and 
	;;^UTILITY(U,$J,355.1,27,10,11,0)
	;;=medicines.
	;;^UTILITY(U,$J,355.1,28,0)
	;;=MANAGED CARE SYSTEM (MCS)^MCS^1
	;;^UTILITY(U,$J,355.1,28,10,0)
	;;=^^4^4^2930604^
	;;^UTILITY(U,$J,355.1,28,10,1,0)
	;;=A self-administered, self-insured program that is an agreement
	;;^UTILITY(U,$J,355.1,28,10,2,0)
	;;=between the employer and the employee.  The employee may choose
	;;^UTILITY(U,$J,355.1,28,10,3,0)
	;;=the provider.  Once a procedure or service has been approved,
	;;^UTILITY(U,$J,355.1,28,10,4,0)
	;;=the physician is free to charge his or her regular fee.
	;;^UTILITY(U,$J,355.1,29,0)
	;;=MEDICAID^MD^6
	;;^UTILITY(U,$J,355.1,29,10,0)
	;;=^^3^3^2930604^
	;;^UTILITY(U,$J,355.1,29,10,1,0)
	;;=A plan sponsored jointly by the federal and state governments for
	;;^UTILITY(U,$J,355.1,29,10,2,0)
	;;=people eligible for public assistance and some other low-income
	;;^UTILITY(U,$J,355.1,29,10,3,0)
	;;=people.  Coverage and benefits vary widely from state to state.

IBINI04G
IBINI04G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.1,30,0)
	;;=MEDI-CAL^MCAL^6
	;;^UTILITY(U,$J,355.1,30,10,0)
	;;=^^1^1^2930604^
	;;^UTILITY(U,$J,355.1,30,10,1,0)
	;;=California's version of the nationwide program known as Medicaid.
	;;^UTILITY(U,$J,355.1,32,0)
	;;=MEDICAL EXPENSE INSURANCE^MEI^1
	;;^UTILITY(U,$J,355.1,32,10,0)
	;;=^^5^5^2940111^^
	;;^UTILITY(U,$J,355.1,32,10,1,0)
	;;=A form of health insurance that provides benefits for medical care
	;;^UTILITY(U,$J,355.1,32,10,2,0)
	;;=on an outpatient basis.  The company may limit the amount it will
	;;^UTILITY(U,$J,355.1,32,10,3,0)
	;;=pay per call or the total amount for all calls.  It may also exclude
	;;^UTILITY(U,$J,355.1,32,10,4,0)
	;;=the first few calls made by the physician at the beginning of an
	;;^UTILITY(U,$J,355.1,32,10,5,0)
	;;=illness.
	;;^UTILITY(U,$J,355.1,33,0)
	;;=MEDICARE (M)^MR^5
	;;^UTILITY(U,$J,355.1,33,10,0)
	;;=^^4^4^2930604^
	;;^UTILITY(U,$J,355.1,33,10,1,0)
	;;=The hospital insurance system and supplementary medical insurance for 
	;;^UTILITY(U,$J,355.1,33,10,2,0)
	;;=the aged created by the 1965 Amendments to the Social Security Act 
	;;^UTILITY(U,$J,355.1,33,10,3,0)
	;;=and operated under the provisions of the act.  Benefits are also
	;;^UTILITY(U,$J,355.1,33,10,4,0)
	;;=extended to the totally disabled and the blind.
	;;^UTILITY(U,$J,355.1,34,0)
	;;=MEDICARE/MEDICAID (MEDI-CAL)^MM^5
	;;^UTILITY(U,$J,355.1,34,10,0)
	;;=^^2^2^2930604^
	;;^UTILITY(U,$J,355.1,34,10,1,0)
	;;=This program, also known as Medi-Medi, covers those persons
	;;^UTILITY(U,$J,355.1,34,10,2,0)
	;;=protected under both Medicare and Medicaid (or Medi-Cal).
	;;^UTILITY(U,$J,355.1,35,0)
	;;=MEDIGAP INSURANCE^MG^11
	;;^UTILITY(U,$J,355.1,35,10,0)
	;;=^^2^2^2931008^^^^
	;;^UTILITY(U,$J,355.1,35,10,1,0)
	;;=Supplemental insurance designed to fill in some, though never all,
	;;^UTILITY(U,$J,355.1,35,10,2,0)
	;;=of the gaps in Medicare's coverage.  Also known as Medifill.
	;;^UTILITY(U,$J,355.1,36,0)
	;;=NO-FAULT INSURANCE^^1
	;;^UTILITY(U,$J,355.1,36,10,0)
	;;=^^4^4^2930604^
	;;^UTILITY(U,$J,355.1,36,10,1,0)
	;;=Automobile insurance that provides coverage against injury or other
	;;^UTILITY(U,$J,355.1,36,10,2,0)
	;;=loss without the need to determine responsibility for an accident.
	;;^UTILITY(U,$J,355.1,36,10,3,0)
	;;=Coverage and benefits vary widely; at present plans exist in many
	;;^UTILITY(U,$J,355.1,36,10,4,0)
	;;=states.
	;;^UTILITY(U,$J,355.1,40,0)
	;;=PREFERRED PROVIDER ORGANIZATION (PPO)^PPO^4
	;;^UTILITY(U,$J,355.1,40,10,0)
	;;=^^4^4^2930604^^
	;;^UTILITY(U,$J,355.1,40,10,1,0)
	;;=An entity that serves as a broker to contract for comprehensive
	;;^UTILITY(U,$J,355.1,40,10,2,0)
	;;=health care services, with both hospitals and physicians, on
	;;^UTILITY(U,$J,355.1,40,10,3,0)
	;;=behalf of an employer or other specific groups of patients,
	;;^UTILITY(U,$J,355.1,40,10,4,0)
	;;=at prearranged discounted rates or on a fee schedule.
	;;^UTILITY(U,$J,355.1,41,0)
	;;=PREPAID GROUP PRACTICE PLAN^PGPP^3
	;;^UTILITY(U,$J,355.1,41,10,0)
	;;=^^8^8^2930604^^
	;;^UTILITY(U,$J,355.1,41,10,1,0)
	;;=A plan under which specified health services are rendered by
	;;^UTILITY(U,$J,355.1,41,10,2,0)
	;;=participating physicians to an enrolled group of persons, with
	;;^UTILITY(U,$J,355.1,41,10,3,0)
	;;=fixed periodic payments made in advance, by or on behalf of
	;;^UTILITY(U,$J,355.1,41,10,4,0)
	;;=each person or family.  If a health insurance carrier is
	;;^UTILITY(U,$J,355.1,41,10,5,0)
	;;=involved, it contracts to pay in advance for the full range 
	;;^UTILITY(U,$J,355.1,41,10,6,0)
	;;=of health services to which the insured is entitled under

IBINI04H
IBINI04H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.1,41,10,7,0)
	;;=the terms of the health insurance contract.  Such a plan is
	;;^UTILITY(U,$J,355.1,41,10,8,0)
	;;=one form of a Health maintenance organization.
	;;^UTILITY(U,$J,355.1,42,0)
	;;=QUALIFIED IMPAIRMENT INSURANCE^QII
	;;^UTILITY(U,$J,355.1,42,10,0)
	;;=2
	;;^UTILITY(U,$J,355.1,42,10,1,0)
	;;=A form of substandard or special class insurance that restricts
	;;^UTILITY(U,$J,355.1,42,10,2,0)
	;;=benefits to the insured's particular condition.
	;;^UTILITY(U,$J,355.1,43,0)
	;;=REGULAR MEDICAL EXPENSE INSURANCE^RMEI
	;;^UTILITY(U,$J,355.1,43,10,0)
	;;=^^4^4^2930604^^
	;;^UTILITY(U,$J,355.1,43,10,1,0)
	;;=Coverage that provides benefits toward the cost of such services as
	;;^UTILITY(U,$J,355.1,43,10,2,0)
	;;=doctor fees for nonsurgical care in the hospital, at home, or in a
	;;^UTILITY(U,$J,355.1,43,10,3,0)
	;;=physician's office and x-rays or laboratory tests performed outside
	;;^UTILITY(U,$J,355.1,43,10,4,0)
	;;=of the hospital.
	;;^UTILITY(U,$J,355.1,44,0)
	;;=SENIOR CITIZEN POLICIES^SCP^1
	;;^UTILITY(U,$J,355.1,44,10,0)
	;;=^^3^3^2930604^
	;;^UTILITY(U,$J,355.1,44,10,1,0)
	;;=Contracts insuring persons 65 years of age or over.  In most cases
	;;^UTILITY(U,$J,355.1,44,10,2,0)
	;;=these policies supplement the coverage afforded by the government
	;;^UTILITY(U,$J,355.1,44,10,3,0)
	;;=under Medicare.
	;;^UTILITY(U,$J,355.1,46,0)
	;;=SPECIAL CLASS INSURANCE^SCI^1
	;;^UTILITY(U,$J,355.1,46,10,0)
	;;=^^2^2^2930604^
	;;^UTILITY(U,$J,355.1,46,10,1,0)
	;;=Coverage for health insurance applicants who cannot qualify for
	;;^UTILITY(U,$J,355.1,46,10,2,0)
	;;=a standard policy because of their health.
	;;^UTILITY(U,$J,355.1,47,0)
	;;=SPECIAL RISK INSURANCE^SRI^1
	;;^UTILITY(U,$J,355.1,47,10,0)
	;;=^^1^1^2930604^
	;;^UTILITY(U,$J,355.1,47,10,1,0)
	;;=Coverage for risks or hazards of a special or unusual nature.
	;;^UTILITY(U,$J,355.1,48,0)
	;;=SPECIFIED DISEASE INSURANCE^SDI^1
	;;^UTILITY(U,$J,355.1,48,10,0)
	;;=^^3^3^2930604^
	;;^UTILITY(U,$J,355.1,48,10,1,0)
	;;=A policy that provides benefits, usually of large amounts, toward
	;;^UTILITY(U,$J,355.1,48,10,2,0)
	;;=the expense of the treatment of the disease or diseases named in 
	;;^UTILITY(U,$J,355.1,48,10,3,0)
	;;=the policy.
	;;^UTILITY(U,$J,355.1,50,0)
	;;=SURGICAL EXPENSE INSURANCE^SEI^1
	;;^UTILITY(U,$J,355.1,50,10,0)
	;;=^^3^3^2930604^
	;;^UTILITY(U,$J,355.1,50,10,1,0)
	;;=A health insurance policy that provides benefits toward the doctor's
	;;^UTILITY(U,$J,355.1,50,10,2,0)
	;;=operating fees.  Benefits usually consist of scheduled amounts for
	;;^UTILITY(U,$J,355.1,50,10,3,0)
	;;=each surgical procedure.
	;;^UTILITY(U,$J,355.1,54,0)
	;;=WORKERS' COMPENSATION INSURANCE^WCI^8
	;;^UTILITY(U,$J,355.1,54,10,0)
	;;=^^2^2^2930604^
	;;^UTILITY(U,$J,355.1,54,10,1,0)
	;;=A contract that insures a person against on-the-job injury or
	;;^UTILITY(U,$J,355.1,54,10,2,0)
	;;=illness.  The employer pays the premium for his or her employees.
	;;^UTILITY(U,$J,355.1,55,0)
	;;=LABS, PROCEDURES, X-RAY, ETC. (ONLY)^LP^12
	;;^UTILITY(U,$J,355.1,55,10,0)
	;;=^^1^1^2940105^
	;;^UTILITY(U,$J,355.1,55,10,1,0)
	;;=Insurance policy that pays only for labs, procedures, X-rays, etc.
	;;^UTILITY(U,$J,355.1,56,0)
	;;=INDEMNITY^IN^9
	;;^UTILITY(U,$J,355.1,56,10,0)
	;;=^^2^2^2940226^^
	;;^UTILITY(U,$J,355.1,56,10,1,0)
	;;=A form of health insurance that pays for injuries resulting from a
	;;^UTILITY(U,$J,355.1,56,10,2,0)
	;;=third party's negligence.
	;;^UTILITY(U,$J,355.1,57,0)
	;;=PRESCRIPTION ONLY^Rx Plan^10
	;;^UTILITY(U,$J,355.1,57,10,0)
	;;=^^1^1^2940111^^

IBINI04I
IBINI04I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.1,57,10,1,0)
	;;=Prescription only coverage.
	;;^UTILITY(U,$J,355.1,58,0)
	;;=MENTAL HEALTH ONLY^MH^12
	;;^UTILITY(U,$J,355.1,59,0)
	;;=HOSPITAL-MEDICAL INSURANCE^HMI^1
	;;^UTILITY(U,$J,355.1,59,10,0)
	;;=^^3^3^2940111^
	;;^UTILITY(U,$J,355.1,59,10,1,0)
	;;=A term used to indicate protection that provides benefits toward
	;;^UTILITY(U,$J,355.1,59,10,2,0)
	;;=the cost of any or all of the numerous health care services normally
	;;^UTILITY(U,$J,355.1,59,10,3,0)
	;;=covered under various health insurance plans.
	;;^UTILITY(U,$J,355.1,60,0)
	;;=CHAMPUS SUPPLEMENTAL^CS^1
	;;^UTILITY(U,$J,355.1,60,10,0)
	;;=^^3^3^2940209^
	;;^UTILITY(U,$J,355.1,60,10,1,0)
	;;=Insurance for patients who are retirees from the service.  All
	;;^UTILITY(U,$J,355.1,60,10,2,0)
	;;=automatically receive CHAMPUS, and may select the supplemental
	;;^UTILITY(U,$J,355.1,60,10,3,0)
	;;=policy of their choice.

IBINI04J
IBINI04J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.2,0,"GL")
	;;=^IBE(355.2,
	;;^DIC("B","TYPE OF INSURANCE COVERAGE",355.2)
	;;=
	;;^DIC(355.2,"%D",0)
	;;=^^8^8^2940214^^^^
	;;^DIC(355.2,"%D",1,0)
	;;=This file contains the types of coverages that an insurance company is
	;;^DIC(355.2,"%D",2,0)
	;;=generally associated with.  If an insurer is identified with more than 
	;;^DIC(355.2,"%D",3,0)
	;;=one type of coverage then  it should be identified as HEALTH INSURANCE as
	;;^DIC(355.2,"%D",4,0)
	;;=this encompases all.
	;;^DIC(355.2,"%D",5,0)
	;;= 
	;;^DIC(355.2,"%D",6,0)
	;;=Sites should not add, edit or delete entries from this file.
	;;^DIC(355.2,"%D",7,0)
	;;= 
	;;^DIC(355.2,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.2,0)
	;;=FIELD^^10^3
	;;^DD(355.2,0,"DDA")
	;;=N
	;;^DD(355.2,0,"DT")
	;;=2930603
	;;^DD(355.2,0,"IX","B",355.2,.01)
	;;=
	;;^DD(355.2,0,"IX","C",355.2,.02)
	;;=
	;;^DD(355.2,0,"NM","TYPE OF INSURANCE COVERAGE")
	;;=
	;;^DD(355.2,0,"PT",36,.13)
	;;=
	;;^DD(355.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(355.2,.01,1,0)
	;;=^.1
	;;^DD(355.2,.01,1,1,0)
	;;=355.2^B
	;;^DD(355.2,.01,1,1,1)
	;;=S ^IBE(355.2,"B",$E(X,1,30),DA)=""
	;;^DD(355.2,.01,1,1,2)
	;;=K ^IBE(355.2,"B",$E(X,1,30),DA)
	;;^DD(355.2,.01,3)
	;;=This is the name of the type of policy.  Answer must be 3-30 characters in length.
	;;^DD(355.2,.01,21,0)
	;;=^^16^16^2940213^^^^
	;;^DD(355.2,.01,21,1,0)
	;;=This is name of the type of coverage that an insurance company generally
	;;^DD(355.2,.01,21,2,0)
	;;=provides.  The entries in this file are a limited set of choices
	;;^DD(355.2,.01,21,3,0)
	;;=that are exported with the IB package.  The entries may have special
	;;^DD(355.2,.01,21,4,0)
	;;=meaning interanally in the billing package.
	;;^DD(355.2,.01,21,5,0)
	;;= 
	;;^DD(355.2,.01,21,6,0)
	;;=If this insurance carrier provides only one type of coverage then select
	;;^DD(355.2,.01,21,7,0)
	;;=the entry that best describes this carriers' type of coverage.  If this
	;;^DD(355.2,.01,21,8,0)
	;;=carrier provides more than one type of coverage then select HEALTH
	;;^DD(355.2,.01,21,9,0)
	;;=INSURANCE.  The default answer if left unanswered is Health Insurance.
	;;^DD(355.2,.01,21,10,0)
	;;= 
	;;^DD(355.2,.01,21,11,0)
	;;=This is useful information when contacting carriers, when creating 
	;;^DD(355.2,.01,21,12,0)
	;;=claims for reimbursement and when estimating if the payment received is
	;;^DD(355.2,.01,21,13,0)
	;;=appropriate.
	;;^DD(355.2,.01,21,14,0)
	;;= 
	;;^DD(355.2,.01,21,15,0)
	;;=If this field is answered it may affect choices that can be selected when
	;;^DD(355.2,.01,21,16,0)
	;;=entering policy or benefit information.
	;;^DD(355.2,.01,"DT")
	;;=2930603
	;;^DD(355.2,.02,0)
	;;=ABBREVIATION^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>8!($L(X)<2) X
	;;^DD(355.2,.02,1,0)
	;;=^.1
	;;^DD(355.2,.02,1,1,0)
	;;=355.2^C
	;;^DD(355.2,.02,1,1,1)
	;;=S ^IBE(355.2,"C",$E(X,1,30),DA)=""
	;;^DD(355.2,.02,1,1,2)
	;;=K ^IBE(355.2,"C",$E(X,1,30),DA)
	;;^DD(355.2,.02,1,1,"DT")
	;;=2930602
	;;^DD(355.2,.02,3)
	;;=Enter a standard abbreviation.  Answer must be 2-8 characters in length.
	;;^DD(355.2,.02,21,0)
	;;=^^3^3^2930603^^
	;;^DD(355.2,.02,21,1,0)
	;;=This is the standard abbreviation for this type of coverage.  Enter
	;;^DD(355.2,.02,21,2,0)
	;;=the 2 to 8 character abbreviation.  The abbreviation may appear on 
	;;^DD(355.2,.02,21,3,0)
	;;=reports that have limited space available.
	;;^DD(355.2,.02,"DT")
	;;=2930602
	;;^DD(355.2,10,0)
	;;=DESCRIPTION^355.21^^10;0
	;;^DD(355.2,10,21,0)
	;;=^^1^1^2930603^^

IBINI04K
IBINI04K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.2,10,21,1,0)
	;;=Enter a one or two sentence description of the type of coverage.
	;;^DD(355.21,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(355.21,0,"DT")
	;;=2930602
	;;^DD(355.21,0,"NM","DESCRIPTION")
	;;=
	;;^DD(355.21,0,"UP")
	;;=355.2
	;;^DD(355.21,.01,0)
	;;=DESCRIPTION^W^^0;1^Q
	;;^DD(355.21,.01,21,0)
	;;=^^1^1^2930603^
	;;^DD(355.21,.01,21,1,0)
	;;=Enter a one or two sentence description of the type of coverage.
	;;^DD(355.21,.01,"DT")
	;;=2930602

IBINI04L
IBINI04L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.2)
	;;=^IBE(355.2,
	;;^UTILITY(U,$J,355.2,0)
	;;=TYPE OF INSURANCE COVERAGE^355.2^19^17
	;;^UTILITY(U,$J,355.2,1,0)
	;;=HEALTH INSURANCE^HI
	;;^UTILITY(U,$J,355.2,1,10,0)
	;;=^^3^3^2930603^
	;;^UTILITY(U,$J,355.2,1,10,1,0)
	;;=The insurance company is generally associated with more than one type
	;;^UTILITY(U,$J,355.2,1,10,2,0)
	;;=of coverage.  The term "HEALTH INSURANCE" encompasses all of the
	;;^UTILITY(U,$J,355.2,1,10,3,0)
	;;=company's types of coverage.
	;;^UTILITY(U,$J,355.2,2,0)
	;;=MEDICARE^MCR
	;;^UTILITY(U,$J,355.2,2,10,0)
	;;=^^6^6^2930603^
	;;^UTILITY(U,$J,355.2,2,10,1,0)
	;;=The hospital insurance system and supplementary medical insurance for
	;;^UTILITY(U,$J,355.2,2,10,2,0)
	;;=those over 65 created by the 1965 Amendments to the Social Security
	;;^UTILITY(U,$J,355.2,2,10,3,0)
	;;=Act and operated under the provisions of the act.  Benefits are also
	;;^UTILITY(U,$J,355.2,2,10,4,0)
	;;=extended to certain disabled people (e.g., totally disabled or blind)
	;;^UTILITY(U,$J,355.2,2,10,5,0)
	;;=as well as coverage and payment for those requiring kidney dialysis
	;;^UTILITY(U,$J,355.2,2,10,6,0)
	;;=and kidney transplant services.
	;;^UTILITY(U,$J,355.2,3,0)
	;;=MEDIGAP^MGP
	;;^UTILITY(U,$J,355.2,3,10,0)
	;;=^^2^2^2930603^
	;;^UTILITY(U,$J,355.2,3,10,1,0)
	;;=Supplemental insurance designed to fill in some, though never all,
	;;^UTILITY(U,$J,355.2,3,10,2,0)
	;;=of the gaps in Medicare's coverage.  Also known as Medifill.
	;;^UTILITY(U,$J,355.2,4,0)
	;;=BLUE CROSS^BC
	;;^UTILITY(U,$J,355.2,4,10,0)
	;;=^^3^3^2930604^^
	;;^UTILITY(U,$J,355.2,4,10,1,0)
	;;=An independent, not-for-profit membership corporation providing
	;;^UTILITY(U,$J,355.2,4,10,2,0)
	;;=protection against the costs of hospital care and, in some policies,
	;;^UTILITY(U,$J,355.2,4,10,3,0)
	;;=protection against the costs of surgical and professional care.
	;;^UTILITY(U,$J,355.2,5,0)
	;;=BLUE SHIELD^BS
	;;^UTILITY(U,$J,355.2,5,10,0)
	;;=^^4^4^2930604^^
	;;^UTILITY(U,$J,355.2,5,10,1,0)
	;;=An independent, not-for-profit membership association providing 
	;;^UTILITY(U,$J,355.2,5,10,2,0)
	;;=protection against the costs of surgery and other items of medical
	;;^UTILITY(U,$J,355.2,5,10,3,0)
	;;=care.  Some policies also offer protection against the costs of
	;;^UTILITY(U,$J,355.2,5,10,4,0)
	;;=hospital care.
	;;^UTILITY(U,$J,355.2,6,0)
	;;=CHAMPUS^CHS
	;;^UTILITY(U,$J,355.2,6,10,0)
	;;=^^5^5^2930604^^
	;;^UTILITY(U,$J,355.2,6,10,1,0)
	;;=The Civilian Health and Medical Program of the Uniformed Services.
	;;^UTILITY(U,$J,355.2,6,10,2,0)
	;;=This government-sponsored program provides hospital and medical
	;;^UTILITY(U,$J,355.2,6,10,3,0)
	;;=services for dependents of active service personnel, retired service
	;;^UTILITY(U,$J,355.2,6,10,4,0)
	;;=personnel and their dependents, and dependents of members who died
	;;^UTILITY(U,$J,355.2,6,10,5,0)
	;;=in active duty.
	;;^UTILITY(U,$J,355.2,7,0)
	;;=CHAMPVA^CHV
	;;^UTILITY(U,$J,355.2,7,10,0)
	;;=^^5^5^2940105^^
	;;^UTILITY(U,$J,355.2,7,10,1,0)
	;;=The Civilian Health and Medical Program of the Veterans Administration.
	;;^UTILITY(U,$J,355.2,7,10,2,0)
	;;=The Veterans Administration shares the medical bills of spouses and
	;;^UTILITY(U,$J,355.2,7,10,3,0)
	;;=children of veterans with total, permanent, service-connected
	;;^UTILITY(U,$J,355.2,7,10,4,0)
	;;=disabilities or of the surviving spouses and children of veterans who
	;;^UTILITY(U,$J,355.2,7,10,5,0)
	;;=died as a result of service-connected disabilities.
	;;^UTILITY(U,$J,355.2,8,0)
	;;=DISABILITY INCOME INSURANCE^DII

IBINI04M
IBINI04M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.2,8,10,0)
	;;=^^3^3^2930603^
	;;^UTILITY(U,$J,355.2,8,10,1,0)
	;;=A form of health insurance that provides periodic payments to replace
	;;^UTILITY(U,$J,355.2,8,10,2,0)
	;;=income when the insured is unable to work as a result of illness,
	;;^UTILITY(U,$J,355.2,8,10,3,0)
	;;=injury or disease.
	;;^UTILITY(U,$J,355.2,9,0)
	;;=HEALTH MAINTENANCE ORG.^HMO
	;;^UTILITY(U,$J,355.2,9,10,0)
	;;=^^5^5^2940105^^
	;;^UTILITY(U,$J,355.2,9,10,1,0)
	;;=An organization that provides a wide range of comprehensive health
	;;^UTILITY(U,$J,355.2,9,10,2,0)
	;;=care services for a specified group at a fixed periodic payment. 
	;;^UTILITY(U,$J,355.2,9,10,3,0)
	;;=An HMO can be sponsored by the government, medical schools,
	;;^UTILITY(U,$J,355.2,9,10,4,0)
	;;=hospitals, employers, labor unions, consumer groups, insurance companies,
	;;^UTILITY(U,$J,355.2,9,10,5,0)
	;;=or hospital-medical plans.
	;;^UTILITY(U,$J,355.2,10,0)
	;;=MEDICAID^MCD
	;;^UTILITY(U,$J,355.2,10,10,0)
	;;=^^4^4^2930604^^
	;;^UTILITY(U,$J,355.2,10,10,1,0)
	;;=A plan sponsored jointly by the federal and state governments for
	;;^UTILITY(U,$J,355.2,10,10,2,0)
	;;=people eligible for public assistance and some other low-income people.
	;;^UTILITY(U,$J,355.2,10,10,3,0)
	;;=Coverage and benefits vary widely from state to state.  In California,
	;;^UTILITY(U,$J,355.2,10,10,4,0)
	;;=this program is known as Medi-Cal.
	;;^UTILITY(U,$J,355.2,13,0)
	;;=WORKERS' COMPENSATION^WC
	;;^UTILITY(U,$J,355.2,13,10,0)
	;;=^^2^2^2930603^
	;;^UTILITY(U,$J,355.2,13,10,1,0)
	;;=A contract that insures a person against on-the-job injury or illness.
	;;^UTILITY(U,$J,355.2,13,10,2,0)
	;;=The employer pays the premium for his or her employees.
	;;^UTILITY(U,$J,355.2,14,0)
	;;=MEDI-CAL^MCL
	;;^UTILITY(U,$J,355.2,14,10,0)
	;;=^^1^1^2930603^
	;;^UTILITY(U,$J,355.2,14,10,1,0)
	;;=California's version of the nationwide program known as Medicaid.
	;;^UTILITY(U,$J,355.2,15,0)
	;;=INDEMNITY^IN
	;;^UTILITY(U,$J,355.2,15,10,0)
	;;=^^2^2^2940226^^
	;;^UTILITY(U,$J,355.2,15,10,1,0)
	;;=A form of health insurance that provides periodic payments when the
	;;^UTILITY(U,$J,355.2,15,10,2,0)
	;;=insured is disabled and in the hospital.
	;;^UTILITY(U,$J,355.2,16,0)
	;;=MENTAL HEALTH ONLY^MHO
	;;^UTILITY(U,$J,355.2,16,10,0)
	;;=^^1^1^2940105^
	;;^UTILITY(U,$J,355.2,16,10,1,0)
	;;= A form of health insurance that provides mental health benefits only.
	;;^UTILITY(U,$J,355.2,17,0)
	;;=PRESCRIPTION ONLY^PO
	;;^UTILITY(U,$J,355.2,17,10,0)
	;;=^^1^1^2940105^
	;;^UTILITY(U,$J,355.2,17,10,1,0)
	;;=A form of health insurance that provides prescription benefits only.
	;;^UTILITY(U,$J,355.2,18,0)
	;;=SUBSTANCE ABUSE ONLY^SAO
	;;^UTILITY(U,$J,355.2,18,10,0)
	;;=^^1^1^2940105^
	;;^UTILITY(U,$J,355.2,18,10,1,0)
	;;=A form of health insurance that provides drug/alcohol abuse benefits only.
	;;^UTILITY(U,$J,355.2,19,0)
	;;=TORT/FEASOR^TF
	;;^UTILITY(U,$J,355.2,19,10,0)
	;;=^^2^2^2940105^
	;;^UTILITY(U,$J,355.2,19,10,1,0)
	;;=A form of health insurance that pays for injuries resulting from a third
	;;^UTILITY(U,$J,355.2,19,10,2,0)
	;;=party's negligence.

IBINI04N
IBINI04N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.3,0,"GL")
	;;=^IBA(355.3,
	;;^DIC("B","GROUP INSURANCE PLAN",355.3)
	;;=
	;;^DIC(355.3,"%D",0)
	;;=^^8^8^2940225^^^^
	;;^DIC(355.3,"%D",1,0)
	;;=This file contains the relevent data for Group insurance plans.
	;;^DIC(355.3,"%D",2,0)
	;;=The data in this file is specific to the plan itself.
	;;^DIC(355.3,"%D",3,0)
	;;= 
	;;^DIC(355.3,"%D",4,0)
	;;=This is in contrast to the patient file which contains data about
	;;^DIC(355.3,"%D",5,0)
	;;=patient's policies, where the policy may be for a group or Health 
	;;^DIC(355.3,"%D",6,0)
	;;=Insurance Plan.
	;;^DIC(355.3,"%D",7,0)
	;;= 
	;;^DIC(355.3,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.3,0)
	;;=FIELD^^11^17
	;;^DD(355.3,0,"DDA")
	;;=N
	;;^DD(355.3,0,"DT")
	;;=2931109
	;;^DD(355.3,0,"ID",.02)
	;;=W:$P(^(0),U,2)=0 "   Individual Policy" W:$P(^(0),U,2) "   Group Policy"
	;;^DD(355.3,0,"ID",.03)
	;;=I $P(^(0),U,3)]"" W "   Group Name: ",$P(^(0),U,3)
	;;^DD(355.3,0,"ID",.04)
	;;=I $P(^(0),U,4)]"" W "   Group No: ",$P(^(0),U,4)
	;;^DD(355.3,0,"IX","AGNA",355.3,.03)
	;;=
	;;^DD(355.3,0,"IX","AGNA1",355.3,.01)
	;;=
	;;^DD(355.3,0,"IX","AGNU",355.3,.04)
	;;=
	;;^DD(355.3,0,"IX","AGNU1",355.3,.01)
	;;=
	;;^DD(355.3,0,"IX","B",355.3,.01)
	;;=
	;;^DD(355.3,0,"IX","D",355.3,.03)
	;;=
	;;^DD(355.3,0,"IX","E",355.3,.04)
	;;=
	;;^DD(355.3,0,"NM","GROUP INSURANCE PLAN")
	;;=
	;;^DD(355.3,0,"PT",2.312,.18)
	;;=
	;;^DD(355.3,0,"PT",355.4,.02)
	;;=
	;;^DD(355.3,0,"PT",355.5,.01)
	;;=
	;;^DD(355.3,.01,0)
	;;=INSURANCE COMPANY^RP36'^DIC(36,^0;1^Q
	;;^DD(355.3,.01,1,0)
	;;=^.1
	;;^DD(355.3,.01,1,1,0)
	;;=355.3^B
	;;^DD(355.3,.01,1,1,1)
	;;=S ^IBA(355.3,"B",$E(X,1,30),DA)=""
	;;^DD(355.3,.01,1,1,2)
	;;=K ^IBA(355.3,"B",$E(X,1,30),DA)
	;;^DD(355.3,.01,1,2,0)
	;;=^^TRIGGER^355.3^1.01
	;;^DD(355.3,.01,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,1)="" I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y X ^DD(355.3,.01,1,2,1.1) X ^DD(355.3,.01,1,2,1.4)
	;;^DD(355.3,.01,1,2,1.1)
	;;=S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
	;;^DD(355.3,.01,1,2,1.4)
	;;=S DIH=$S($D(^IBA(355.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,1)=DIV,DIH=355.3,DIG=1.01 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(355.3,.01,1,2,2)
	;;=Q
	;;^DD(355.3,.01,1,2,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(355.3,.01,1,2,"%D",1,0)
	;;=Triggers the date/time entered when creating a new entry.
	;;^DD(355.3,.01,1,2,"CREATE CONDITION")
	;;=#1.01=""
	;;^DD(355.3,.01,1,2,"CREATE VALUE")
	;;=NOW
	;;^DD(355.3,.01,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(355.3,.01,1,2,"DT")
	;;=2940213
	;;^DD(355.3,.01,1,2,"FIELD")
	;;=#1.01
	;;^DD(355.3,.01,1,3,0)
	;;=^^TRIGGER^355.3^1.02
	;;^DD(355.3,.01,1,3,1)
	;;=X ^DD(355.3,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.3,D0,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(355.3,.01,1,3,1.4)
	;;^DD(355.3,.01,1,3,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.3,D0,1)):^(1),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1))=""
	;;^DD(355.3,.01,1,3,1.4)
	;;=S DIH=$S($D(^IBA(355.3,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,2)=DIV,DIH=355.3,DIG=1.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(355.3,.01,1,3,2)
	;;=Q
	;;^DD(355.3,.01,1,3,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(355.3,.01,1,3,"%D",1,0)
	;;=Triggers the user who created this entry.
	;;^DD(355.3,.01,1,3,"CREATE CONDITION")
	;;=#1.02=""
	;;^DD(355.3,.01,1,3,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(355.3,.01,1,3,"DELETE VALUE")
	;;=NO EFFECT

IBINI04O
IBINI04O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.3,.01,1,3,"DT")
	;;=2940213
	;;^DD(355.3,.01,1,3,"FIELD")
	;;=#1.02
	;;^DD(355.3,.01,1,4,0)
	;;=355.3^AGNA1^MUMPS
	;;^DD(355.3,.01,1,4,1)
	;;=S:$P(^IBA(355.3,DA,0),U,3) ^IBA(355.3,"AGNA",X,+$P(^(0),U,3),DA)=""
	;;^DD(355.3,.01,1,4,2)
	;;=K ^IBA(355.3,"AGNA",X,+$P(^IBA(355.3,DA,0),U,3),DA)
	;;^DD(355.3,.01,1,4,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(355.3,.01,1,4,"%D",1,0)
	;;=Cross reference of insurance companies and group names.
	;;^DD(355.3,.01,1,4,"DT")
	;;=2940213
	;;^DD(355.3,.01,1,5,0)
	;;=355.3^AGNU1^MUMPS
	;;^DD(355.3,.01,1,5,1)
	;;=S:$P(^IBA(355.3,DA,0),U,4) ^IBA(355.3,"AGNU",X,+$P(^(0),U,4),DA)=""
	;;^DD(355.3,.01,1,5,2)
	;;=K ^IBA(355.3,"AGNU",X,+$P(^IBA(355.3,DA,0),U,4),DA)
	;;^DD(355.3,.01,1,5,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(355.3,.01,1,5,"%D",1,0)
	;;=Cross reference of insurance companies and group numbers.
	;;^DD(355.3,.01,1,5,"DT")
	;;=2940213
	;;^DD(355.3,.01,3)
	;;=
	;;^DD(355.3,.01,21,0)
	;;=^^1^1^2930603^
	;;^DD(355.3,.01,21,1,0)
	;;=Select the insurance company that this policy is with.
	;;^DD(355.3,.01,"DT")
	;;=2940213
	;;^DD(355.3,.02,0)
	;;=IS THIS A GROUP POLICY?^S^1:YES;0:NO;^0;2^Q
	;;^DD(355.3,.02,1,0)
	;;=^.1^^0
	;;^DD(355.3,.02,3)
	;;=If this is a group policy answer "YES" so that other patients may be associated with it.  If this is an individual plan answer "NO" and only the current patient can have this policy.
	;;^DD(355.3,.02,21,0)
	;;=^^5^5^2940110^^
	;;^DD(355.3,.02,21,1,0)
	;;=Some policies are indiviual policies and are specific to a patient.  Many
	;;^DD(355.3,.02,21,2,0)
	;;=policies are group plans that many patients may have.  If this is a group
	;;^DD(355.3,.02,21,3,0)
	;;=plan, answer 'YES' so that other patients may be associated with this
	;;^DD(355.3,.02,21,4,0)
	;;=policy.  If this is an individual plan then answer 'NO' and only this 
	;;^DD(355.3,.02,21,5,0)
	;;=patient can be associated with this policy.
	;;^DD(355.3,.02,"DT")
	;;=2930525
	;;^DD(355.3,.03,0)
	;;=GROUP NAME^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<2) X
	;;^DD(355.3,.03,1,0)
	;;=^.1
	;;^DD(355.3,.03,1,1,0)
	;;=355.3^D
	;;^DD(355.3,.03,1,1,1)
	;;=S ^IBA(355.3,"D",$E(X,1,30),DA)=""
	;;^DD(355.3,.03,1,1,2)
	;;=K ^IBA(355.3,"D",$E(X,1,30),DA)
	;;^DD(355.3,.03,1,1,"DT")
	;;=2930525
	;;^DD(355.3,.03,1,2,0)
	;;=355.3^AGNA^MUMPS
	;;^DD(355.3,.03,1,2,1)
	;;=S:+^IBA(355.3,DA,0) ^IBA(355.3,"AGNA",+^(0),X,DA)=""
	;;^DD(355.3,.03,1,2,2)
	;;=K ^IBA(355.3,"AGNA",+^IBA(355.3,DA,0),X,DA)
	;;^DD(355.3,.03,1,2,"%D",0)
	;;=^^2^2^2930527^
	;;^DD(355.3,.03,1,2,"%D",1,0)
	;;=Cross reference of insurance companies and group names.
	;;^DD(355.3,.03,1,2,"%D",2,0)
	;;=|
	;;^DD(355.3,.03,1,2,"DT")
	;;=2930527
	;;^DD(355.3,.03,3)
	;;=Answer must be 2-20 characters in length.
	;;^DD(355.3,.03,21,0)
	;;=^^6^6^2930603^^
	;;^DD(355.3,.03,21,1,0)
	;;=If this is a group policy, enter the name of the group that this policy
	;;^DD(355.3,.03,21,2,0)
	;;=is associated with.  This is the name that the insurance
	;;^DD(355.3,.03,21,3,0)
	;;=company uses to identify the plan.  This will appear 
	;;^DD(355.3,.03,21,4,0)
	;;=on the health claims forms in the appropriate blocks.  It will also be
	;;^DD(355.3,.03,21,5,0)
	;;=used to help identify this policy so that other patients with the same
	;;^DD(355.3,.03,21,6,0)
	;;=plan can be associated with it.
	;;^DD(355.3,.03,"DT")
	;;=2930527
	;;^DD(355.3,.04,0)
	;;=GROUP NUMBER^F^^0;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>17!($L(X)<2) X
	;;^DD(355.3,.04,1,0)
	;;=^.1
	;;^DD(355.3,.04,1,1,0)
	;;=355.3^E
	;;^DD(355.3,.04,1,1,1)
	;;=S ^IBA(355.3,"E",$E(X,1,30),DA)=""

IBINI04P
IBINI04P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.3,.04,1,1,2)
	;;=K ^IBA(355.3,"E",$E(X,1,30),DA)
	;;^DD(355.3,.04,1,1,"DT")
	;;=2930525
	;;^DD(355.3,.04,1,2,0)
	;;=355.3^AGNU^MUMPS
	;;^DD(355.3,.04,1,2,1)
	;;=S:+^IBA(355.3,DA,0) ^IBA(355.3,"AGNU",+^(0),X,DA)=""
	;;^DD(355.3,.04,1,2,2)
	;;=K ^IBA(355.3,"AGNU",+^IBA(355.3,DA,0),X,DA)
	;;^DD(355.3,.04,1,2,"%D",0)
	;;=^^1^1^2930527^
	;;^DD(355.3,.04,1,2,"%D",1,0)
	;;=Cross reference of insurance companies and group names.
	;;^DD(355.3,.04,1,2,"DT")
	;;=2930527
	;;^DD(355.3,.04,3)
	;;=Answer must be 2-17 characters in length.
	;;^DD(355.3,.04,21,0)
	;;=^^3^3^2930603^
	;;^DD(355.3,.04,21,1,0)
	;;=If this is a group policy enter the number which identifies this policy,
	;;^DD(355.3,.04,21,2,0)
	;;=i.e. group number/code that the insurance company uses to identify this
	;;^DD(355.3,.04,21,3,0)
	;;=plan.  Answer must be between 1 and 17 characters.
	;;^DD(355.3,.04,"DT")
	;;=2930611
	;;^DD(355.3,.05,0)
	;;=IS UTILIZATION REVIEW REQUIRED^S^1:YES;0:NO;^0;5^Q
	;;^DD(355.3,.05,3)
	;;=Answer "YES" if this policy requires Utilization Review for all billable cases.  Otherwise, answer "NO".
	;;^DD(355.3,.05,21,0)
	;;=^^5^5^2930604^^
	;;^DD(355.3,.05,21,1,0)
	;;=Answer "YES" if Utilization Review is required by the insurance company
	;;^DD(355.3,.05,21,2,0)
	;;=for this policy.  Answer "NO" if it is not required.  The UR staff will
	;;^DD(355.3,.05,21,3,0)
	;;=automatically be required to follow-up on all billable cases where this
	;;^DD(355.3,.05,21,4,0)
	;;=field is answered "YES".  If the field is answered "NO" then UR follow-up
	;;^DD(355.3,.05,21,5,0)
	;;=will be considered optional.
	;;^DD(355.3,.05,"DT")
	;;=2930223
	;;^DD(355.3,.06,0)
	;;=IS PRE-CERTIFICATION REQUIRED?^S^1:YES;0:NO;^0;6^Q
	;;^DD(355.3,.06,3)
	;;=Answer "YES" if pre-certification is required by this policy.  Otherwise answer "NO".
	;;^DD(355.3,.06,21,0)
	;;=^^5^5^2930603^
	;;^DD(355.3,.06,21,1,0)
	;;=Answer "YES" if this policy requires Pre-certification of all non-emergent
	;;^DD(355.3,.06,21,2,0)
	;;=admissions.  Answer "NO" if pre-certification is not required.   
	;;^DD(355.3,.06,21,3,0)
	;;=If pre-certification is required but not obtained, follow-up will be
	;;^DD(355.3,.06,21,4,0)
	;;=required by the MCCR tracking module.
	;;^DD(355.3,.06,21,5,0)
	;;=|
	;;^DD(355.3,.06,"DT")
	;;=2930223
	;;^DD(355.3,.07,0)
	;;=EXCLUDE PRE-EXISTING CONDITION^S^1:YES;0:NO;^0;7^Q
	;;^DD(355.3,.07,3)
	;;=Answer "YES" if this policy excludes any pre existing conditions.  Otherwise answer "NO".
	;;^DD(355.3,.07,21,0)
	;;=^^7^7^2940213^^^^
	;;^DD(355.3,.07,21,1,0)
	;;=Answer "YES" if the policy excludes any pre existing conditions.  Answer
	;;^DD(355.3,.07,21,2,0)
	;;="NO" if the policy covers any pre existing conditions.  If a patient has
	;;^DD(355.3,.07,21,3,0)
	;;=pre-exisiting conditions that are not covered they should be entered in
	;;^DD(355.3,.07,21,4,0)
	;;=the patient policy comment field.
	;;^DD(355.3,.07,21,5,0)
	;;= 
	;;^DD(355.3,.07,21,6,0)
	;;= 
	;;^DD(355.3,.07,21,7,0)
	;;= 
	;;^DD(355.3,.07,"DT")
	;;=2930702
	;;^DD(355.3,.08,0)
	;;=BENEFITS ASSIGNABLE?^S^1:YES;0:NO;^0;8^Q
	;;^DD(355.3,.08,3)
	;;=
	;;^DD(355.3,.08,21,0)
	;;=^^4^4^2940213^
	;;^DD(355.3,.08,21,1,0)
	;;=If this policy will allow assignment of benefits then answer YES,
	;;^DD(355.3,.08,21,2,0)
	;;=otherwise answer NO.  Normally this field will be answered YES.  
	;;^DD(355.3,.08,21,3,0)
	;;=However, it may be useful to track policies that do not allow for
	;;^DD(355.3,.08,21,4,0)
	;;=assignment of benefits.
	;;^DD(355.3,.08,"DT")
	;;=2930223
	;;^DD(355.3,.09,0)
	;;=TYPE OF PLAN^P355.1'^IBE(355.1,^0;9^Q

IBINI04Q
IBINI04Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.3,.09,3)
	;;=Enter the type of policy that best describes this policy.
	;;^DD(355.3,.09,21,0)
	;;=^^5^5^2931103^^^^
	;;^DD(355.3,.09,21,1,0)
	;;=Select the type of plan that best describes this plan.  The type of
	;;^DD(355.3,.09,21,2,0)
	;;=policy will be used to determine if reimbursement for claims from the
	;;^DD(355.3,.09,21,3,0)
	;;=insurance carrier are appropriate.It will also be used to determine
	;;^DD(355.3,.09,21,4,0)
	;;=what other fields and displays are appropriate for this plan.  If
	;;^DD(355.3,.09,21,5,0)
	;;=unknown or unsure pick the more general type of plan.
	;;^DD(355.3,.09,"DT")
	;;=2931103
	;;^DD(355.3,.1,0)
	;;=INDIVIDUAL POLICY PATIENT^P2'^DPT(^0;10^Q
	;;^DD(355.3,.1,21,0)
	;;=^^7^7^2940213^^^^
	;;^DD(355.3,.1,21,1,0)
	;;=This is the patient associated with this policy if this is an individual
	;;^DD(355.3,.1,21,2,0)
	;;=policy. 
	;;^DD(355.3,.1,21,3,0)
	;;= 
	;;^DD(355.3,.1,21,4,0)
	;;=If this is an individual policy, the system will store the patient 
	;;^DD(355.3,.1,21,5,0)
	;;=in this field.  Only one patient may be associated with an individual
	;;^DD(355.3,.1,21,6,0)
	;;=policy.  Many patients can be associated with a group policy.
	;;^DD(355.3,.1,21,7,0)
	;;= 
	;;^DD(355.3,.1,22)
	;;=
	;;^DD(355.3,.1,"DT")
	;;=2930601
	;;^DD(355.3,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.3,1.01,5,1,0)
	;;=355.3^.01^2
	;;^DD(355.3,1.01,21,0)
	;;=^^2^2^2931102^^^
	;;^DD(355.3,1.01,21,1,0)
	;;=This is the date that this policy was entered.  It is triggered by
	;;^DD(355.3,1.01,21,2,0)
	;;=the creation of this entry.
	;;^DD(355.3,1.01,"DT")
	;;=2931102
	;;^DD(355.3,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(355.3,1.02,5,1,0)
	;;=355.3^.01^3
	;;^DD(355.3,1.02,21,0)
	;;=^^2^2^2930603^
	;;^DD(355.3,1.02,21,1,0)
	;;=This is the user who created this entry.  It is automatically triggered
	;;^DD(355.3,1.02,21,2,0)
	;;=by the creation of this entry.
	;;^DD(355.3,1.02,"DT")
	;;=2930603
	;;^DD(355.3,1.03,0)
	;;=DATE LAST VERIFIED^D^^1;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.3,1.03,21,0)
	;;=^^5^5^2940213^
	;;^DD(355.3,1.03,21,1,0)
	;;=This is the date that this policy was last verified.  A policy is 
	;;^DD(355.3,1.03,21,2,0)
	;;=verified by selecting the Verify Policy Action on the Patient 
	;;^DD(355.3,1.03,21,3,0)
	;;=Insurance Management screen.  Generally this is the last time
	;;^DD(355.3,1.03,21,4,0)
	;;=that somebody contacted the insurance company and verified that
	;;^DD(355.3,1.03,21,5,0)
	;;=policy information is correct.
	;;^DD(355.3,1.03,"DT")
	;;=2930603
	;;^DD(355.3,1.04,0)
	;;=VERIFIED BY^P200'^VA(200,^1;4^Q
	;;^DD(355.3,1.04,21,0)
	;;=^^1^1^2940213^
	;;^DD(355.3,1.04,21,1,0)
	;;=This is the user who last verified that the policy information is correct.
	;;^DD(355.3,1.04,"DT")
	;;=2930603
	;;^DD(355.3,1.05,0)
	;;=DATE LAST EDITED^D^^1;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.3,1.05,21,0)
	;;=^^2^2^2940213^
	;;^DD(355.3,1.05,21,1,0)
	;;=This is the date that this policy was last edited.  It is automatically
	;;^DD(355.3,1.05,21,2,0)
	;;=updated any time a policy is editing using one of the options provided.
	;;^DD(355.3,1.05,"DT")
	;;=2930603
	;;^DD(355.3,1.06,0)
	;;=LAST EDITED BY^P200'^VA(200,^1;6^Q
	;;^DD(355.3,1.06,21,0)
	;;=^^2^2^2940213^
	;;^DD(355.3,1.06,21,1,0)
	;;=This is the user who last edited this policy.  It is automatically
	;;^DD(355.3,1.06,21,2,0)
	;;=updated everytime a policy is edited using one of the options.
	;;^DD(355.3,1.06,"DT")
	;;=2930603
	;;^DD(355.3,11,0)
	;;=COMMENTS^355.311^^11;0

IBINI04R
IBINI04R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.3,11,21,0)
	;;=^^2^2^2931109^
	;;^DD(355.3,11,21,1,0)
	;;=Enter comments that are specific to this group plan.  Do not enter
	;;^DD(355.3,11,21,2,0)
	;;=comments about a specific patient or patient care here.
	;;^DD(355.311,0)
	;;=COMMENTS SUB-FIELD^^.01^1
	;;^DD(355.311,0,"DT")
	;;=2931109
	;;^DD(355.311,0,"NM","COMMENTS")
	;;=
	;;^DD(355.311,0,"UP")
	;;=355.3
	;;^DD(355.311,.01,0)
	;;=COMMENTS^W^^0;1^Q
	;;^DD(355.311,.01,3)
	;;=Enter comments specific to this Group Plan.  These comments will pertain to multiple patients who have this same group plan.
	;;^DD(355.311,.01,"DT")
	;;=2931109

IBINI04S
IBINI04S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.4,0,"GL")
	;;=^IBA(355.4,
	;;^DIC("B","ANNUAL BENEFITS",355.4)
	;;=
	;;^DIC(355.4,"%D",0)
	;;=^^4^4^2940214^^^^
	;;^DIC(355.4,"%D",1,0)
	;;=This file contains the fields to maintain the annual benefits by year 
	;;^DIC(355.4,"%D",2,0)
	;;=for an insurance policy.
	;;^DIC(355.4,"%D",3,0)
	;;= 
	;;^DIC(355.4,"%D",4,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.4,0)
	;;=FIELD^^5.14^60
	;;^DD(355.4,0,"DDA")
	;;=N
	;;^DD(355.4,0,"DT")
	;;=2940228
	;;^DD(355.4,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(355.3,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(355.3,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(355.4,0,"IX","APY",355.4,.02)
	;;=
	;;^DD(355.4,0,"IX","APY1",355.4,.01)
	;;=
	;;^DD(355.4,0,"IX","B",355.4,.01)
	;;=
	;;^DD(355.4,0,"IX","C",355.4,.02)
	;;=
	;;^DD(355.4,0,"NM","ANNUAL BENEFITS")
	;;=
	;;^DD(355.4,.01,0)
	;;=BENEFIT YEAR BEGINNING ON^RDX^^0;1^S %DT="EX" D:$D(X) ^%DT S X=Y K:Y<1 X D DATECHK^IBCNSA2
	;;^DD(355.4,.01,1,0)
	;;=^.1
	;;^DD(355.4,.01,1,1,0)
	;;=355.4^B
	;;^DD(355.4,.01,1,1,1)
	;;=S ^IBA(355.4,"B",$E(X,1,30),DA)=""
	;;^DD(355.4,.01,1,1,2)
	;;=K ^IBA(355.4,"B",$E(X,1,30),DA)
	;;^DD(355.4,.01,1,2,0)
	;;=355.4^APY1^MUMPS
	;;^DD(355.4,.01,1,2,1)
	;;=S:$P(^IBA(355.4,DA,0),U,2) ^IBA(355.4,"APY",$P(^(0),U,2),-X,DA)=""
	;;^DD(355.4,.01,1,2,2)
	;;=K ^IBA(355.4,"APY",+$P(^IBA(355.4,DA,0),U,2),-X,DA)
	;;^DD(355.4,.01,1,2,3)
	;;=DO NOT DELETE
	;;^DD(355.4,.01,1,2,"%D",0)
	;;=^^1^1^2930831^^^^
	;;^DD(355.4,.01,1,2,"%D",1,0)
	;;=Cross-reference of all policies by calendar year.
	;;^DD(355.4,.01,1,2,"DT")
	;;=2930831
	;;^DD(355.4,.01,1,3,0)
	;;=^^TRIGGER^355.4^1.01
	;;^DD(355.4,.01,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.4,D0,1)):^(1),1:"") S X=$P(Y(1),U,1)="" I X S X=DIV S Y(1)=$S($D(^IBA(355.4,D0,1)):^(1),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(355.4,.01,1,3,1.4)
	;;^DD(355.4,.01,1,3,1.4)
	;;=S DIH=$S($D(^IBA(355.4,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,1)=DIV,DIH=355.4,DIG=1.01 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(355.4,.01,1,3,2)
	;;=Q
	;;^DD(355.4,.01,1,3,"CREATE CONDITION")
	;;=#1.01=""
	;;^DD(355.4,.01,1,3,"CREATE VALUE")
	;;=S X=DT
	;;^DD(355.4,.01,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(355.4,.01,1,3,"DT")
	;;=2930604
	;;^DD(355.4,.01,1,3,"FIELD")
	;;=#1.01
	;;^DD(355.4,.01,1,4,0)
	;;=^^TRIGGER^355.4^1.02
	;;^DD(355.4,.01,1,4,1)
	;;=X ^DD(355.4,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.4,D0,1)):^(1),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(355.4,.01,1,4,1.4)
	;;^DD(355.4,.01,1,4,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.4,D0,1)):^(1),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1))=""
	;;^DD(355.4,.01,1,4,1.4)
	;;=S DIH=$S($D(^IBA(355.4,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,2)=DIV,DIH=355.4,DIG=1.02 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(355.4,.01,1,4,2)
	;;=Q
	;;^DD(355.4,.01,1,4,"CREATE CONDITION")
	;;=#1.02=""
	;;^DD(355.4,.01,1,4,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(355.4,.01,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(355.4,.01,1,4,"DT")
	;;=2930604
	;;^DD(355.4,.01,1,4,"FIELD")
	;;=#1.02
	;;^DD(355.4,.01,3)
	;;=Partial benefit years not allowed.
	;;^DD(355.4,.01,21,0)
	;;=^^1^1^2940228^^^^
	;;^DD(355.4,.01,21,1,0)
	;;=This is the year to which the health insurance policy's benefits apply.
	;;^DD(355.4,.01,"DT")
	;;=2930903
	;;^DD(355.4,.02,0)
	;;=HEALTH INSURANCE POLICY^P355.3'^IBA(355.3,^0;2^Q
	;;^DD(355.4,.02,1,0)
	;;=^.1
	;;^DD(355.4,.02,1,1,0)
	;;=355.4^C

IBINI04T
IBINI04T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,.02,1,1,1)
	;;=S ^IBA(355.4,"C",$E(X,1,30),DA)=""
	;;^DD(355.4,.02,1,1,2)
	;;=K ^IBA(355.4,"C",$E(X,1,30),DA)
	;;^DD(355.4,.02,1,1,"DT")
	;;=2930525
	;;^DD(355.4,.02,1,2,0)
	;;=355.4^APY^MUMPS
	;;^DD(355.4,.02,1,2,1)
	;;=S:+^IBA(355.4,DA,0) ^IBA(355.4,"APY",X,-^(0),DA)=""
	;;^DD(355.4,.02,1,2,2)
	;;=K ^IBA(355.4,"APY",X,-^IBA(355.4,DA,0),DA)
	;;^DD(355.4,.02,1,2,3)
	;;=DO NOT DELETE
	;;^DD(355.4,.02,1,2,"%D",0)
	;;=^^1^1^2930831^^^^
	;;^DD(355.4,.02,1,2,"%D",1,0)
	;;=Cross-reference of all policies by calendar year.
	;;^DD(355.4,.02,1,2,"DT")
	;;=2930831
	;;^DD(355.4,.02,21,0)
	;;=^^3^3^2930604^^
	;;^DD(355.4,.02,21,1,0)
	;;=This is the particular health insurance policy that provides some 
	;;^DD(355.4,.02,21,2,0)
	;;=subset of all of the possible benefits for the year selected.
	;;^DD(355.4,.02,21,3,0)
	;;=Enter the name of the health insurance policy.
	;;^DD(355.4,.02,"DT")
	;;=2930831
	;;^DD(355.4,.05,0)
	;;=MAX. OUT OF POCKET^NJ9,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,.05,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,.05,21,0)
	;;=^^3^3^2930825^^
	;;^DD(355.4,.05,21,1,0)
	;;=This is the dollar amount that this policy does not cover in claims.
	;;^DD(355.4,.05,21,2,0)
	;;=This information will be used in calculating whether reimbursement
	;;^DD(355.4,.05,21,3,0)
	;;=for claims against this policy are appropriate.
	;;^DD(355.4,.05,"DT")
	;;=2930825
	;;^DD(355.4,.06,0)
	;;=AMBULANCE COVERAGE (%)^NJ3,0^^0;6^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,.06,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,.06,21,0)
	;;=^^2^2^2930604^
	;;^DD(355.4,.06,21,1,0)
	;;=If this policy provides an ambulance coverage benefit, then this is 
	;;^DD(355.4,.06,21,2,0)
	;;=the amount of that benefit.
	;;^DD(355.4,.06,"DT")
	;;=2930513
	;;^DD(355.4,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.4,1.01,3)
	;;=
	;;^DD(355.4,1.01,5,1,0)
	;;=355.4^.01^3
	;;^DD(355.4,1.01,9)
	;;=^
	;;^DD(355.4,1.01,21,0)
	;;=^^2^2^2930604^^
	;;^DD(355.4,1.01,21,1,0)
	;;=This is the date that the information was first entered.  It is
	;;^DD(355.4,1.01,21,2,0)
	;;=necessary to supply a time as well as date, for example "12/12/93@1300".
	;;^DD(355.4,1.01,"DT")
	;;=2940228
	;;^DD(355.4,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(355.4,1.02,3)
	;;=
	;;^DD(355.4,1.02,5,1,0)
	;;=355.4^.01^4
	;;^DD(355.4,1.02,9)
	;;=^
	;;^DD(355.4,1.02,21,0)
	;;=^^1^1^2930607^^
	;;^DD(355.4,1.02,21,1,0)
	;;=This is the name of the person who entered the information.
	;;^DD(355.4,1.02,"DT")
	;;=2930520
	;;^DD(355.4,1.03,0)
	;;=DATE LAST VERIFIED^D^^1;3^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.4,1.03,3)
	;;=
	;;^DD(355.4,1.03,21,0)
	;;=^^2^2^2930604^
	;;^DD(355.4,1.03,21,1,0)
	;;=This is the date that the information was last verified.  It is 
	;;^DD(355.4,1.03,21,2,0)
	;;=necessary to supply a time as well as date, for example "12/12/93@1300".
	;;^DD(355.4,1.03,"DT")
	;;=2930707
	;;^DD(355.4,1.04,0)
	;;=VERIFIED BY^P200'^VA(200,^1;4^Q
	;;^DD(355.4,1.04,3)
	;;=
	;;^DD(355.4,1.04,21,0)
	;;=^^2^2^2930604^
	;;^DD(355.4,1.04,21,1,0)
	;;=This is the name of the person who verified the information on
	;;^DD(355.4,1.04,21,2,0)
	;;="DATE LAST VERIFIED".
	;;^DD(355.4,1.04,"DT")
	;;=2930520
	;;^DD(355.4,1.05,0)
	;;=DATE LAST EDITED^D^^1;5^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.4,1.05,3)
	;;=
	;;^DD(355.4,1.05,9)
	;;=^
	;;^DD(355.4,1.05,21,0)
	;;=^^2^2^2930604^^
	;;^DD(355.4,1.05,21,1,0)
	;;=This is the date that the information was last edited.  The time must be

IBINI04U
IBINI04U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,1.05,21,2,0)
	;;=included, for example 12/12/93@1300.
	;;^DD(355.4,1.05,"DT")
	;;=2930707
	;;^DD(355.4,1.06,0)
	;;=LAST EDIT BY^P200'^VA(200,^1;6^Q
	;;^DD(355.4,1.06,3)
	;;=
	;;^DD(355.4,1.06,9)
	;;=^
	;;^DD(355.4,1.06,21,0)
	;;=^^1^1^2930604^
	;;^DD(355.4,1.06,21,1,0)
	;;=This is the name of the person who last edited the information.
	;;^DD(355.4,1.06,"DT")
	;;=2930520
	;;^DD(355.4,1.07,0)
	;;=PERSON CONTACTED^F^^1;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(355.4,1.07,.1)
	;;=WHO DID YOU TALK TO AT THE INSURANCE COMPANY
	;;^DD(355.4,1.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.4,1.07,21,0)
	;;=^^2^2^2930607^^
	;;^DD(355.4,1.07,21,1,0)
	;;=This is the name of the person who was contacted for verification 
	;;^DD(355.4,1.07,21,2,0)
	;;=purposes.
	;;^DD(355.4,1.07,"DT")
	;;=2930701
	;;^DD(355.4,1.08,0)
	;;=COMMENTS^F^^1;8^K:$L(X)>80!($L(X)<3) X
	;;^DD(355.4,1.08,3)
	;;=Answer must be 3-80 characters in length.
	;;^DD(355.4,1.08,21,0)
	;;=^^1^1^2930607^
	;;^DD(355.4,1.08,21,1,0)
	;;=Enter any additional information here.
	;;^DD(355.4,1.08,"DT")
	;;=2930520
	;;^DD(355.4,1.09,0)
	;;=CONTACT'S PHONE NUMBER^F^^1;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(355.4,1.09,.1)
	;;=WHAT WAS THEIR PHONE NUMBER
	;;^DD(355.4,1.09,3)
	;;=Answer must be 7-20 characters in length.
	;;^DD(355.4,1.09,21,0)
	;;=^^2^2^2930907^^
	;;^DD(355.4,1.09,21,1,0)
	;;=Enter the telephone number of the person who was contacted for
	;;^DD(355.4,1.09,21,2,0)
	;;=verification purposes.
	;;^DD(355.4,1.09,"DT")
	;;=2930907
	;;^DD(355.4,2.01,0)
	;;=ANNUAL DEDUCTIBLE (OPT)^NJ9,2^^2;1^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,2.01,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,2.01,21,0)
	;;=^^3^3^2930607^
	;;^DD(355.4,2.01,21,1,0)
	;;=This is the amount that this policy does not cover in claims.
	;;^DD(355.4,2.01,21,2,0)
	;;=This information will be used in calculating whether reimbursement
	;;^DD(355.4,2.01,21,3,0)
	;;=for claims against this policy are appropriate.
	;;^DD(355.4,2.01,"DT")
	;;=2930604
	;;^DD(355.4,2.02,0)
	;;=PER VISIT DEDUCTIBLE^NJ8,2^^2;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0) X
	;;^DD(355.4,2.02,3)
	;;=Type a Dollar Amount between 0 and 99999, 2 Decimal Digits
	;;^DD(355.4,2.02,21,0)
	;;=^^2^2^2940213^
	;;^DD(355.4,2.02,21,1,0)
	;;=This is the deductible that the patient must pay for each outpatient
	;;^DD(355.4,2.02,21,2,0)
	;;=visit.
	;;^DD(355.4,2.02,"DT")
	;;=2930513
	;;^DD(355.4,2.03,0)
	;;=OUTPATIENT LIFETIME MAXIMUM^NJ10,2^^2;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.4,2.03,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.4,2.03,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.03,21,1,0)
	;;=If this policy has a lifetime maximum benefit for outpatient services,
	;;^DD(355.4,2.03,21,2,0)
	;;=then this is the amount of that benefit.
	;;^DD(355.4,2.03,"DT")
	;;=2931028
	;;^DD(355.4,2.04,0)
	;;=OUTPATIENT ANNUAL MAXIMUM^NJ8,2^^2;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0) X
	;;^DD(355.4,2.04,3)
	;;=Type a Dollar Amount between 0 and 99999, 2 Decimal Digits
	;;^DD(355.4,2.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.04,21,1,0)
	;;=If this policy has a benefit for outpatient services, then this
	;;^DD(355.4,2.04,21,2,0)
	;;=amount is the maxiumum of that benefit for one year.
	;;^DD(355.4,2.04,"DT")
	;;=2930513
	;;^DD(355.4,2.05,0)
	;;=MH LIFETIME OUTPATIENT MAX.^NJ7,0^^2;5^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.05,3)
	;;=Type a Number between 0 and 9999999, 0 Decimal Digits

IBINI04V
IBINI04V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,2.05,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.05,21,1,0)
	;;=If this policy has a lifetime maximum benefit for mental health services,
	;;^DD(355.4,2.05,21,2,0)
	;;=then this is the amount of that benefit.
	;;^DD(355.4,2.05,"DT")
	;;=2931028
	;;^DD(355.4,2.06,0)
	;;=MH ANNUAL OUTPATIENT MAX.^NJ9,2^^2;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,2.06,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,2.06,21,0)
	;;=^^2^2^2930713^^
	;;^DD(355.4,2.06,21,1,0)
	;;=If this policy has a benefit for mental health services,
	;;^DD(355.4,2.06,21,2,0)
	;;=then this amount is the maximum of that benefit for one year.
	;;^DD(355.4,2.06,"DT")
	;;=2930513
	;;^DD(355.4,2.07,0)
	;;=DENTAL COVERAGE TYPE^S^0:NONE;1:PER VISIT AMOUNT;2:PERCENTAGE AMOUNT;^2;7^Q
	;;^DD(355.4,2.07,1,0)
	;;=^.1
	;;^DD(355.4,2.07,1,1,0)
	;;=^^TRIGGER^355.4^2.08
	;;^DD(355.4,2.07,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.4,D0,2)):^(2),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(355.4,2.07,1,1,1.4)
	;;^DD(355.4,2.07,1,1,1.4)
	;;=S DIH=$S($D(^IBA(355.4,DIV(0),2)):^(2),1:""),DIV=X S $P(^(2),U,8)=DIV,DIH=355.4,DIG=2.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(355.4,2.07,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.4,D0,2)):^(2),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(355.4,2.07,1,1,2.4)
	;;^DD(355.4,2.07,1,1,2.4)
	;;=S DIH=$S($D(^IBA(355.4,DIV(0),2)):^(2),1:""),DIV=X S $P(^(2),U,8)=DIV,DIH=355.4,DIG=2.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(355.4,2.07,1,1,"%D",0)
	;;=^^1^1^2940107^^
	;;^DD(355.4,2.07,1,1,"%D",1,0)
	;;=When changing or deleting DENTAL COVERAGE TYPE delete DENTAL COVERAGE $ OR %.
	;;^DD(355.4,2.07,1,1,"CREATE VALUE")
	;;=@
	;;^DD(355.4,2.07,1,1,"DELETE VALUE")
	;;=@
	;;^DD(355.4,2.07,1,1,"FIELD")
	;;=#2.08
	;;^DD(355.4,2.07,3)
	;;=
	;;^DD(355.4,2.07,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.07,21,1,0)
	;;=This indicates whether there is a dental benefit, and if so, the 
	;;^DD(355.4,2.07,21,2,0)
	;;=per visit or percentage amount.
	;;^DD(355.4,2.07,"DT")
	;;=2940107
	;;^DD(355.4,2.08,0)
	;;=DENTAL COVERAGE $ OR %^NJ5,0^^2;8^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.08,3)
	;;=Type a Number between 0 and 99999, 0 Decimal Digits if coverage is a $ amount, or between 0 and 100 if %.
	;;^DD(355.4,2.08,5,1,0)
	;;=355.4^2.07^1
	;;^DD(355.4,2.08,21,0)
	;;=^^2^2^2931228^^
	;;^DD(355.4,2.08,21,1,0)
	;;=If there is a dental benefit, this number indicates the dollar
	;;^DD(355.4,2.08,21,2,0)
	;;=or percentage amount of that benefit.
	;;^DD(355.4,2.08,"DT")
	;;=2930513
	;;^DD(355.4,2.09,0)
	;;=OUTPATIENT VISIT (%)^NJ3,0^^2;9^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.09,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,2.09,21,0)
	;;=^^2^2^2930607^^^
	;;^DD(355.4,2.09,21,1,0)
	;;=If this policy has an outpatient benefit, this is the percentage
	;;^DD(355.4,2.09,21,2,0)
	;;=coverage per outpatient visit.
	;;^DD(355.4,2.09,"DT")
	;;=2930603
	;;^DD(355.4,2.1,0)
	;;=EMERGENCY OUTPATIENT (%)^NJ6,0^^2;10^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.1,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.4,2.1,21,0)
	;;=^^2^2^2930607^^^
	;;^DD(355.4,2.1,21,1,0)
	;;=If this policy has a benefit for emergency outpatient services,
	;;^DD(355.4,2.1,21,2,0)
	;;=this is the percentage covered by that benefit.
	;;^DD(355.4,2.1,"DT")
	;;=2930607
	;;^DD(355.4,2.11,0)
	;;=MENTAL HEALTH OUTPATIENT (%)^NJ3,0^^2;11^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X

IBINI04W
IBINI04W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,2.11,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,2.11,21,0)
	;;=^^2^2^2930607^^
	;;^DD(355.4,2.11,21,1,0)
	;;=If this policy has a benefit for mental health outpatient services,
	;;^DD(355.4,2.11,21,2,0)
	;;=this is the percentage covered by that benefit.
	;;^DD(355.4,2.11,"DT")
	;;=2930603
	;;^DD(355.4,2.12,0)
	;;=PRESCRIPTION (%)^NJ6,0^^2;12^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.12,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.4,2.12,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.12,21,1,0)
	;;=If this policy has a benefit for prescription services, this is the
	;;^DD(355.4,2.12,21,2,0)
	;;=percentage covered by that benefit.
	;;^DD(355.4,2.12,"DT")
	;;=2930513
	;;^DD(355.4,2.13,0)
	;;=OUTPATIENT SURGERY (%)^NJ6,0^^2;13^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.13,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.4,2.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,2.13,21,1,0)
	;;=If this policy has a benefit for outpatient surgery services, this
	;;^DD(355.4,2.13,21,2,0)
	;;=is the percentage covered by that benefit.
	;;^DD(355.4,2.13,"DT")
	;;=2930513
	;;^DD(355.4,2.14,0)
	;;=MH OPT. MAX DAYS PER YEAR^NJ3,0^^2;14^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.14,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,2.14,21,0)
	;;=^^3^3^2930708^
	;;^DD(355.4,2.14,21,1,0)
	;;=If this policy provides a benefit for mental health outpatient
	;;^DD(355.4,2.14,21,2,0)
	;;=services, this is the maximum number of days per year of this
	;;^DD(355.4,2.14,21,3,0)
	;;=benefit.
	;;^DD(355.4,2.14,"DT")
	;;=2930708
	;;^DD(355.4,2.15,0)
	;;=OUTPATIENT VISITS PER YEAR^NJ3,0^^2;15^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,2.15,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,2.15,21,0)
	;;=^^2^2^2930825^
	;;^DD(355.4,2.15,21,1,0)
	;;=If this policy provides outpatient benefits, this is the maximum
	;;^DD(355.4,2.15,21,2,0)
	;;=number of visits per year.
	;;^DD(355.4,2.15,"DT")
	;;=2930825
	;;^DD(355.4,2.17,0)
	;;=ADULT DAY HEALTH CARE^S^0:NO;1:YES;^2;17^Q
	;;^DD(355.4,2.17,21,0)
	;;=^^2^2^2930827^
	;;^DD(355.4,2.17,21,1,0)
	;;=This indicates whether the policy has a benefit for Adult Day Health
	;;^DD(355.4,2.17,21,2,0)
	;;=Care services.
	;;^DD(355.4,2.17,"DT")
	;;=2930827
	;;^DD(355.4,3.01,0)
	;;=HOME HEALTH CARE LEVEL^S^0:NONE;1:NURSES AIDE;2:LPN;3:RN;4:THERAPIST/OTHER;^3;1^Q
	;;^DD(355.4,3.01,21,0)
	;;=^^2^2^2930825^^
	;;^DD(355.4,3.01,21,1,0)
	;;=If this policy provides home health care, this is the highest level
	;;^DD(355.4,3.01,21,2,0)
	;;=of nursing care that it will cover.
	;;^DD(355.4,3.01,"DT")
	;;=2930924
	;;^DD(355.4,3.02,0)
	;;=HOME HEALTH VISITS PER YEAR^NJ3,0^^3;2^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.02,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.02,21,0)
	;;=^^2^2^2930825^^
	;;^DD(355.4,3.02,21,1,0)
	;;=If this policy provides home health care, this is the maximum
	;;^DD(355.4,3.02,21,2,0)
	;;=number of visits per year.
	;;^DD(355.4,3.02,"DT")
	;;=2930513
	;;^DD(355.4,3.03,0)
	;;=HOME HEALTH MAX DAYS PER YEAR^NJ3,0^^3;3^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.03,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.03,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,3.03,21,1,0)
	;;=If this policy provides home health care, this is the maximum number
	;;^DD(355.4,3.03,21,2,0)
	;;=of days per year of home health care services.
	;;^DD(355.4,3.03,"DT")
	;;=2930513

IBINI04X
IBINI04X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,3.04,0)
	;;=HOME HEALTH MED. EQUIPMENT (%)^NJ3,0^^3;4^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.04,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,3.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,3.04,21,1,0)
	;;=If this policy provides a benefit for medical equipment used in
	;;^DD(355.4,3.04,21,2,0)
	;;=home health care services, this is the percentage of that benefit.
	;;^DD(355.4,3.04,"DT")
	;;=2930513
	;;^DD(355.4,3.05,0)
	;;=HOME HEALTH VISIT DEFINITION^F^^3;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(355.4,3.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.4,3.05,21,0)
	;;=^^2^2^2930607^^
	;;^DD(355.4,3.05,21,1,0)
	;;=If this policy provides for home health visits, this defines the
	;;^DD(355.4,3.05,21,2,0)
	;;=nature of the visits.
	;;^DD(355.4,3.05,"DT")
	;;=2930513
	;;^DD(355.4,3.06,0)
	;;=OCCUPATIONAL THERAPY # VISITS^NJ3,0^^3;6^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.06,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.06,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,3.06,21,1,0)
	;;=If this policy has a benefit for occupational therapy, then this is
	;;^DD(355.4,3.06,21,2,0)
	;;=the maximum number of OT visits that the policy allows in one year.
	;;^DD(355.4,3.06,"DT")
	;;=2930826
	;;^DD(355.4,3.07,0)
	;;=PHYSICAL THERAPY # VISITS^NJ3,0^^3;7^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.07,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.07,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,3.07,21,1,0)
	;;=If this policy has a benefit for physical therapy, then this is the
	;;^DD(355.4,3.07,21,2,0)
	;;=maximum number of PT visits that the policy allows in one year.
	;;^DD(355.4,3.07,"DT")
	;;=2930826
	;;^DD(355.4,3.08,0)
	;;=SPEECH THERAPY # VISITS^NJ3,0^^3;8^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.08,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.08,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,3.08,21,1,0)
	;;=If this policy has a benefit for speech therapy, then this is the
	;;^DD(355.4,3.08,21,2,0)
	;;=maximum number of ST visits that the policy allows in one year.
	;;^DD(355.4,3.08,"DT")
	;;=2930826
	;;^DD(355.4,3.09,0)
	;;=MEDICATION COUNSELING # VISITS^NJ3,0^^3;9^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,3.09,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,3.09,21,0)
	;;=^^2^2^2940213^^
	;;^DD(355.4,3.09,21,1,0)
	;;=If this policy has a benefit for medication counseling, then this is the
	;;^DD(355.4,3.09,21,2,0)
	;;=maximum number of MC visits that the policy allows in one year.
	;;^DD(355.4,3.09,"DT")
	;;=2930826
	;;^DD(355.4,4.01,0)
	;;=HOSPICE ANNUAL DEDUCTIBLE^NJ9,2^^4;1^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,4.01,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,4.01,21,0)
	;;=^^4^4^2930607^
	;;^DD(355.4,4.01,21,1,0)
	;;=If this policy provides hospice services, this is the amount that
	;;^DD(355.4,4.01,21,2,0)
	;;=the policy does not cover in claims.  This information will be used
	;;^DD(355.4,4.01,21,3,0)
	;;=in calculating whether reimbursement for claims against this policy
	;;^DD(355.4,4.01,21,4,0)
	;;=are appropriate.
	;;^DD(355.4,4.01,"DT")
	;;=2930513
	;;^DD(355.4,4.02,0)
	;;=HOSPICE INPATIENT ANNUAL MAX^NJ9,2^^4;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,4.02,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,4.02,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,4.02,21,1,0)
	;;=If this policy provides hospice inpatient services, this is the

IBINI04Y
IBINI04Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,4.02,21,2,0)
	;;=maximum amount of coverage for one year.
	;;^DD(355.4,4.02,"DT")
	;;=2930513
	;;^DD(355.4,4.03,0)
	;;=HOSPICE INPT. LIFETIME MAX^NJ10,2^^4;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.4,4.03,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.4,4.03,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,4.03,21,1,0)
	;;=If this policy provides hospice inpatient services, this is the
	;;^DD(355.4,4.03,21,2,0)
	;;=maximum amount over the life of the policy for this benefit.
	;;^DD(355.4,4.03,"DT")
	;;=2931028
	;;^DD(355.4,4.04,0)
	;;=ROOM AND BOARD (%)^NJ3,0^^4;4^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,4.04,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,4.04,21,0)
	;;=^^2^2^2930607^^^^
	;;^DD(355.4,4.04,21,1,0)
	;;=If this policy provides a room and board benefit, this is the 
	;;^DD(355.4,4.04,21,2,0)
	;;=percentage of the charges that the policy will cover.
	;;^DD(355.4,4.04,"DT")
	;;=2930513
	;;^DD(355.4,4.05,0)
	;;=OTHER INPATIENT CHARGES (%)^NJ3,0^^4;5^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,4.05,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,4.05,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,4.05,21,1,0)
	;;=If this policy provides a benefit for other inpatient charges, this
	;;^DD(355.4,4.05,21,2,0)
	;;=is the percentage covered by that benefit.
	;;^DD(355.4,4.05,"DT")
	;;=2930513
	;;^DD(355.4,4.06,0)
	;;=IV INFUSION OPT.^S^0:NO;1:YES;^4;6^Q
	;;^DD(355.4,4.06,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,4.06,21,1,0)
	;;=This indicates whether the policy has a benefit for outpatient IV
	;;^DD(355.4,4.06,21,2,0)
	;;=Infusion services.
	;;^DD(355.4,4.06,"DT")
	;;=2930826
	;;^DD(355.4,4.07,0)
	;;=IV INFUSION INPT.^S^0:NO;1:YES;^4;7^Q
	;;^DD(355.4,4.07,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,4.07,21,1,0)
	;;=This indicates whether the policy has a benefit for inpatient IV
	;;^DD(355.4,4.07,21,2,0)
	;;=Infusion services.
	;;^DD(355.4,4.07,"DT")
	;;=2930826
	;;^DD(355.4,4.08,0)
	;;=IV ANTIBIOTICS OPT.^S^0:NO;1:YES;^4;8^Q
	;;^DD(355.4,4.08,21,0)
	;;=^^2^2^2930826^
	;;^DD(355.4,4.08,21,1,0)
	;;=This indicates whether the policy has a benefit for outpatient IV
	;;^DD(355.4,4.08,21,2,0)
	;;=Antibiotics services.
	;;^DD(355.4,4.08,"DT")
	;;=2930826
	;;^DD(355.4,4.09,0)
	;;=IV ANTIBIOTICS INPT.^S^0:NO;1:YES;^4;9^Q
	;;^DD(355.4,4.09,3)
	;;=
	;;^DD(355.4,4.09,21,0)
	;;=^^2^2^2931001^^^
	;;^DD(355.4,4.09,21,1,0)
	;;=This indicates whether the policy has a benefit for inpatient IV
	;;^DD(355.4,4.09,21,2,0)
	;;=Antibiotics.
	;;^DD(355.4,4.09,"DT")
	;;=2930907
	;;^DD(355.4,5.01,0)
	;;=ANNUAL DEDUCTIBLE (INPATIENT)^NJ9,2^^5;1^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,5.01,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,5.01,21,0)
	;;=^^4^4^2930607^
	;;^DD(355.4,5.01,21,1,0)
	;;=If this policy provides for inpatient services, this is the amount
	;;^DD(355.4,5.01,21,2,0)
	;;=that the policy does not cover in claims.  This information will
	;;^DD(355.4,5.01,21,3,0)
	;;=be used in calculating whether reimburseent for claims against
	;;^DD(355.4,5.01,21,4,0)
	;;=this policy are appropriate.
	;;^DD(355.4,5.01,"DT")
	;;=2930604
	;;^DD(355.4,5.02,0)
	;;=PER ADMISSION DEDUCTIBLE^NJ9,2^^5;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,5.02,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,5.02,21,0)
	;;=^^2^2^2930713^^
	;;^DD(355.4,5.02,21,1,0)
	;;=This is the dollar amount that this policy does not cover in claims

IBINI04Z
IBINI04Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,5.02,21,2,0)
	;;=for each admission.  
	;;^DD(355.4,5.02,"DT")
	;;=2930520
	;;^DD(355.4,5.03,0)
	;;=INPATIENT LIFETIME MAXIMUM^NJ10,2^^5;3^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.4,5.03,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.4,5.03,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.4,5.03,21,1,0)
	;;=If this policy provides inpatient services, this is the maximum
	;;^DD(355.4,5.03,21,2,0)
	;;=amount over the life of this policy for this benefit.
	;;^DD(355.4,5.03,"DT")
	;;=2931028
	;;^DD(355.4,5.04,0)
	;;=INPATIENT ANNUAL MAXIMUM^NJ9,2^^5;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,5.04,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,5.04,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.4,5.04,21,1,0)
	;;=If this policy provides inpatient services, this is the maximum
	;;^DD(355.4,5.04,21,2,0)
	;;=annual amount of this benefit.
	;;^DD(355.4,5.04,"DT")
	;;=2930520
	;;^DD(355.4,5.05,0)
	;;=MH LIFETIME INPATIENT MAXIMUM^NJ10,2^^5;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.4,5.05,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.4,5.05,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.05,21,1,0)
	;;=If this policy provides a benefit for mental health inpatient services,
	;;^DD(355.4,5.05,21,2,0)
	;;=this is the maximum amount over the life of the policy for this benefit.
	;;^DD(355.4,5.05,"DT")
	;;=2931028
	;;^DD(355.4,5.06,0)
	;;=MH ANNUAL INPATIENT MAXIMUM^NJ9,2^^5;6^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,5.06,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,5.06,21,0)
	;;=^^3^3^2930607^
	;;^DD(355.4,5.06,21,1,0)
	;;=If this policy provides a benefit for mental health inpatient services,
	;;^DD(355.4,5.06,21,2,0)
	;;=this is the maximum amount that this policy will pay toward these
	;;^DD(355.4,5.06,21,3,0)
	;;=services in one year.
	;;^DD(355.4,5.06,"DT")
	;;=2930520
	;;^DD(355.4,5.07,0)
	;;=DRUG & ALCOHOL LIFETIME MAX^NJ10,2^^5;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.4,5.07,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.4,5.07,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.07,21,1,0)
	;;=If this policy provides a benefit for drug and alcohol services,
	;;^DD(355.4,5.07,21,2,0)
	;;=this is the maximum amount over the life of the policy for this benefit.
	;;^DD(355.4,5.07,"DT")
	;;=2931028
	;;^DD(355.4,5.08,0)
	;;=DRUG & ALCOHOL ANNUAL MAX^NJ9,2^^5;8^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.4,5.08,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.4,5.08,21,0)
	;;=^^3^3^2930607^
	;;^DD(355.4,5.08,21,1,0)
	;;=If this policy provides a benefit for drug and alcohol services,
	;;^DD(355.4,5.08,21,2,0)
	;;=this is the maximum amount that this policy will pay toward these
	;;^DD(355.4,5.08,21,3,0)
	;;=services in one year.
	;;^DD(355.4,5.08,"DT")
	;;=2930520
	;;^DD(355.4,5.09,0)
	;;=ROOM AND BOARD (%)^NJ3,0^^5;9^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,5.09,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,5.09,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.09,21,1,0)
	;;=If this policy provides a room and board benefit, this is the 
	;;^DD(355.4,5.09,21,2,0)
	;;=percentage of room and board charges that the policy will cover.
	;;^DD(355.4,5.09,"DT")
	;;=2930520
	;;^DD(355.4,5.1,0)
	;;=NURSING HOME (%)^NJ3,0^^5;10^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X

IBINI050
IBINI050	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.4,5.1,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,5.1,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.1,21,1,0)
	;;=If this policy provides a benefit for nursing home services, this
	;;^DD(355.4,5.1,21,2,0)
	;;=is the percentage of nursing home charges that the policy will cover.
	;;^DD(355.4,5.1,"DT")
	;;=2930520
	;;^DD(355.4,5.11,0)
	;;=MENTAL HEALTH INPATIENT (%)^NJ3,0^^5;11^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,5.11,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,5.11,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.11,21,1,0)
	;;=If this policy provides a benefit for mental health inpatient services,
	;;^DD(355.4,5.11,21,2,0)
	;;=this is the percentage of the charges that the policy will cover.
	;;^DD(355.4,5.11,"DT")
	;;=2930520
	;;^DD(355.4,5.12,0)
	;;=OTHER INPATIENT CHARGES (%)^NJ3,0^^5;12^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,5.12,3)
	;;=Type a Number between 0 and 100, 0 Decimal Digits
	;;^DD(355.4,5.12,21,0)
	;;=^^2^2^2930607^
	;;^DD(355.4,5.12,21,1,0)
	;;=If this policy provides a benefit for other inpatient charges, this
	;;^DD(355.4,5.12,21,2,0)
	;;=is the percentage of those charges that the policy will cover.
	;;^DD(355.4,5.12,"DT")
	;;=2930520
	;;^DD(355.4,5.14,0)
	;;=MH INPT. MAX DAYS PER YEAR^NJ3,0^^5;14^K:+X'=X!(X>365)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.4,5.14,3)
	;;=Type a Number between 0 and 365, 0 Decimal Digits
	;;^DD(355.4,5.14,21,0)
	;;=^^3^3^2930708^
	;;^DD(355.4,5.14,21,1,0)
	;;=If this policy provides a benefit for mental health inpatient
	;;^DD(355.4,5.14,21,2,0)
	;;=services, this is the maximum number of days per year of this
	;;^DD(355.4,5.14,21,3,0)
	;;=benefit.
	;;^DD(355.4,5.14,"DT")
	;;=2930708

IBINI051
IBINI051	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.5,0,"GL")
	;;=^IBA(355.5,
	;;^DIC("B","INSURANCE CLAIMS YEAR TO DATE",355.5)
	;;=
	;;^DIC(355.5,"%D",0)
	;;=^^6^6^2940214^^^^
	;;^DIC(355.5,"%D",1,0)
	;;=This file will contain the claim to date information about a patient's
	;;^DIC(355.5,"%D",2,0)
	;;=health insurance claims to a specific carrier for a specific year.  This
	;;^DIC(355.5,"%D",3,0)
	;;=will allow estimate of receivables based on whether claims exceed deductibles
	;;^DIC(355.5,"%D",4,0)
	;;=or other maximum benefits.
	;;^DIC(355.5,"%D",5,0)
	;;= 
	;;^DIC(355.5,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.5,0)
	;;=FIELD^^1.09^29
	;;^DD(355.5,0,"DDA")
	;;=N
	;;^DD(355.5,0,"DT")
	;;=2931217
	;;^DD(355.5,0,"IX","APPY",355.5,.02)
	;;=
	;;^DD(355.5,0,"IX","APPY1",355.5,.01)
	;;=
	;;^DD(355.5,0,"IX","APPY2",355.5,.03)
	;;=
	;;^DD(355.5,0,"IX","APPY3",355.5,.17)
	;;=
	;;^DD(355.5,0,"IX","B",355.5,.01)
	;;=
	;;^DD(355.5,0,"IX","C",355.5,.02)
	;;=
	;;^DD(355.5,0,"NM","INSURANCE CLAIMS YEAR TO DATE")
	;;=
	;;^DD(355.5,.01,0)
	;;=POLICY^RP355.3I^IBA(355.3,^0;1^Q
	;;^DD(355.5,.01,1,0)
	;;=^.1
	;;^DD(355.5,.01,1,1,0)
	;;=355.5^B
	;;^DD(355.5,.01,1,1,1)
	;;=S ^IBA(355.5,"B",$E(X,1,30),DA)=""
	;;^DD(355.5,.01,1,1,2)
	;;=K ^IBA(355.5,"B",$E(X,1,30),DA)
	;;^DD(355.5,.01,1,2,0)
	;;=355.5^APPY1^MUMPS
	;;^DD(355.5,.01,1,2,1)
	;;=I +$P(^IBA(355.5,DA,0),U,2),-$P(^(0),U,3),+$P(^(0),U,17) S ^IBA(355.5,"APPY",+$P(^(0),U,2),X,-$P(^(0),U,3),+$P(^(0),U,17),DA)=""
	;;^DD(355.5,.01,1,2,2)
	;;=K ^IBA(355.5,"APPY",+$P(^IBA(355.5,DA,0),U,2),X,-$P(^(0),U,3),+$P(^(0),U,17),DA)
	;;^DD(355.5,.01,1,2,"%D",0)
	;;=^^1^1^2930831^^^^
	;;^DD(355.5,.01,1,2,"%D",1,0)
	;;=Cross-reference of patients by policy by year.
	;;^DD(355.5,.01,1,2,"DT")
	;;=2930831
	;;^DD(355.5,.01,3)
	;;=
	;;^DD(355.5,.01,21,0)
	;;=^^2^2^2930713^^
	;;^DD(355.5,.01,21,1,0)
	;;=Select the patient's health insurance policy against which claims
	;;^DD(355.5,.01,21,2,0)
	;;=may have been made.
	;;^DD(355.5,.01,"DT")
	;;=2930831
	;;^DD(355.5,.02,0)
	;;=PATIENT^P2'I^DPT(^0;2^Q
	;;^DD(355.5,.02,1,0)
	;;=^.1
	;;^DD(355.5,.02,1,1,0)
	;;=355.5^C
	;;^DD(355.5,.02,1,1,1)
	;;=S ^IBA(355.5,"C",$E(X,1,30),DA)=""
	;;^DD(355.5,.02,1,1,2)
	;;=K ^IBA(355.5,"C",$E(X,1,30),DA)
	;;^DD(355.5,.02,1,1,"DT")
	;;=2930622
	;;^DD(355.5,.02,1,2,0)
	;;=355.5^APPY^MUMPS
	;;^DD(355.5,.02,1,2,1)
	;;=I -$P(^IBA(355.5,DA,0),U,3),+^(0),+$P(^(0),U,17) S ^IBA(355.5,"APPY",X,+^(0),-$P(^(0),U,3),+$P(^(0),U,17),DA)=""
	;;^DD(355.5,.02,1,2,2)
	;;=K ^IBA(355.5,"APPY",X,+^IBA(355.5,DA,0),-$P(^(0),U,3),+$P(^(0),U,17),DA)
	;;^DD(355.5,.02,1,2,"%D",0)
	;;=^^1^1^2930831^^^^
	;;^DD(355.5,.02,1,2,"%D",1,0)
	;;=Cross-references patient by policy by year.
	;;^DD(355.5,.02,1,2,"DT")
	;;=2930831
	;;^DD(355.5,.02,21,0)
	;;=^^1^1^2930713^^
	;;^DD(355.5,.02,21,1,0)
	;;=Enter the name of the patient who is on this policy.
	;;^DD(355.5,.02,"DT")
	;;=2931217
	;;^DD(355.5,.03,0)
	;;=BENEFIT YEAR BEGINNING ON^RDI^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.5,.03,1,0)
	;;=^.1
	;;^DD(355.5,.03,1,1,0)
	;;=355.5^APPY2^MUMPS
	;;^DD(355.5,.03,1,1,1)
	;;=I +$P(^IBA(355.5,DA,0),U,2),+^(0),+$P(^(0),U,17) S ^IBA(355.5,"APPY",+$P(^(0),U,2),+^(0),-X,+$P(^(0),U,17),DA)=""
	;;^DD(355.5,.03,1,1,2)
	;;=K ^IBA(355.5,"APPY",+$P(^IBA(355.5,DA,0),U,2),+^(0),-X,+$P(^(0),U,17),DA)
	;;^DD(355.5,.03,1,1,"%D",0)
	;;=^^1^1^2930831^^^^
	;;^DD(355.5,.03,1,1,"%D",1,0)
	;;=Cross-reference of patients by policy by year.
	;;^DD(355.5,.03,1,1,"DT")
	;;=2930831
	;;^DD(355.5,.03,3)
	;;=
	;;^DD(355.5,.03,9)
	;;=^
	;;^DD(355.5,.03,21,0)
	;;=^^2^2^2931217^^^^

IBINI052
IBINI052	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.5,.03,21,1,0)
	;;=This is the first day of the year in which the health insurance policy's
	;;^DD(355.5,.03,21,2,0)
	;;=benefits apply.  Exact date (with month and day) is required.
	;;^DD(355.5,.03,23,0)
	;;=^^3^3^2931217^
	;;^DD(355.5,.03,23,1,0)
	;;=This field must match the year for an entry for this patient and policy
	;;^DD(355.5,.03,23,2,0)
	;;=in the annual benefits field.  It is automatically stored by the system
	;;^DD(355.5,.03,23,3,0)
	;;=when creating an entry.  It is not editable.
	;;^DD(355.5,.03,"DT")
	;;=2931217
	;;^DD(355.5,.04,0)
	;;=DEDUCTIBLE MET?^S^0:NO;1:YES;^0;4^Q
	;;^DD(355.5,.04,21,0)
	;;=^^3^3^2930713^^^
	;;^DD(355.5,.04,21,1,0)
	;;=If the dollar amount of claims against this policy is less than the 
	;;^DD(355.5,.04,21,2,0)
	;;=the policy's annual deductible, enter "NO".  If it is equal to or 
	;;^DD(355.5,.04,21,3,0)
	;;=greater than the annual deductible, enter "YES".
	;;^DD(355.5,.04,"DT")
	;;=2930513
	;;^DD(355.5,.05,0)
	;;=AMOUNT OF DEDUCTIBLE MET^NJ9,2^^0;5^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.5,.05,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.5,.05,21,0)
	;;=^^1^1^2930713^
	;;^DD(355.5,.05,21,1,0)
	;;=Enter the dollar amount of claims against this policy.
	;;^DD(355.5,.05,"DT")
	;;=2930513
	;;^DD(355.5,.06,0)
	;;=DEDUCTIBLE (INPT) MET?^S^1:YES;0:NO;^0;6^Q
	;;^DD(355.5,.06,21,0)
	;;=^^4^4^2930713^
	;;^DD(355.5,.06,21,1,0)
	;;=If the dollar amount of claims for inpatient services is less than
	;;^DD(355.5,.06,21,2,0)
	;;=the policy's annual deductible for inpatient services, enter "NO".
	;;^DD(355.5,.06,21,3,0)
	;;=If it is equal to or greater than the annual deductible for such
	;;^DD(355.5,.06,21,4,0)
	;;=services, enter "YES".
	;;^DD(355.5,.06,"DT")
	;;=2930513
	;;^DD(355.5,.07,0)
	;;=AMOUNT OF DEDUCTIBLE (INP) MET^NJ9,2^^0;7^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(355.5,.07,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(355.5,.07,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,.07,21,1,0)
	;;=Enter the dollar amount of claims against this policy for inpatient
	;;^DD(355.5,.07,21,2,0)
	;;=services.
	;;^DD(355.5,.07,"DT")
	;;=2930513
	;;^DD(355.5,.08,0)
	;;=DEDUCTIBLE (OPT) MET?^S^0:NO;1:YES;^0;8^Q
	;;^DD(355.5,.08,21,0)
	;;=^^4^4^2930713^
	;;^DD(355.5,.08,21,1,0)
	;;=If the dollar amount of claims for outpatient services is less than
	;;^DD(355.5,.08,21,2,0)
	;;=the policy's annual deductible for outpatient services, enter "NO".
	;;^DD(355.5,.08,21,3,0)
	;;=If it is equal to or greater than the annual deductible for such
	;;^DD(355.5,.08,21,4,0)
	;;=services, enter "YES".
	;;^DD(355.5,.08,"DT")
	;;=2930513
	;;^DD(355.5,.09,0)
	;;=AMOUNT OF DEDUCTIBLE (OPT) MET^NJ6,0^^0;9^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.5,.09,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.5,.09,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,.09,21,1,0)
	;;=Enter the dollar amount of claims against this policy for outpatient
	;;^DD(355.5,.09,21,2,0)
	;;=services.
	;;^DD(355.5,.09,"DT")
	;;=2930513
	;;^DD(355.5,.1,0)
	;;=AMT LIFETIME MAX USED (OPT)^NJ7,0^^0;10^K:+X'=X!(X>9999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.5,.1,3)
	;;=Type a Number between 0 and 9999999, 0 Decimal Digits
	;;^DD(355.5,.1,21,0)
	;;=^^3^3^2931214^^^^
	;;^DD(355.5,.1,21,1,0)
	;;=Enter the dollar amount of claims against this policy, which can
	;;^DD(355.5,.1,21,2,0)
	;;=then be compared to the maximum amount available over the life of
	;;^DD(355.5,.1,21,3,0)
	;;=the policy.

IBINI053
IBINI053	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.5,.1,"DT")
	;;=2931214
	;;^DD(355.5,.11,0)
	;;=MH DEDUCTIBLE (INP) MET?^S^0:NO;1:YES;^0;11^Q
	;;^DD(355.5,.11,21,0)
	;;=^^4^4^2940213^^^
	;;^DD(355.5,.11,21,1,0)
	;;=If the dollar amount of claims for inpatient mental health services
	;;^DD(355.5,.11,21,2,0)
	;;=is less than the policy's annual deductible for these services,
	;;^DD(355.5,.11,21,3,0)
	;;=enter "NO".  If it is equal to or greater than the annual 
	;;^DD(355.5,.11,21,4,0)
	;;=deductible for such services, enter "YES".
	;;^DD(355.5,.11,"DT")
	;;=2930513
	;;^DD(355.5,.12,0)
	;;=AMOUNT OF MH (INP) DED MET^NJ6,0^^0;12^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.5,.12,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.5,.12,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,.12,21,1,0)
	;;=Enter the dollar amount of claims against this policy for inpatient
	;;^DD(355.5,.12,21,2,0)
	;;=mental health services.
	;;^DD(355.5,.12,"DT")
	;;=2930513
	;;^DD(355.5,.13,0)
	;;=MH DEDUCTIBLE (OPT) MET?^S^0:NO;1:YES;^0;13^Q
	;;^DD(355.5,.13,3)
	;;=
	;;^DD(355.5,.13,21,0)
	;;=^^4^4^2930713^
	;;^DD(355.5,.13,21,1,0)
	;;=If the dollar amount of claims for outpatient mental health services
	;;^DD(355.5,.13,21,2,0)
	;;=is less than the policy's annual deductible for these services,
	;;^DD(355.5,.13,21,3,0)
	;;=enter "NO".  If it is equal to or greater than the annual deductible
	;;^DD(355.5,.13,21,4,0)
	;;=for such services, enter "YES".
	;;^DD(355.5,.13,"DT")
	;;=2930513
	;;^DD(355.5,.14,0)
	;;=AMOUNT OF MH (OPT) DED MET^NJ6,0^^0;14^K:+X'=X!(X>999999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(355.5,.14,3)
	;;=Type a Number between 0 and 999999, 0 Decimal Digits
	;;^DD(355.5,.14,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,.14,21,1,0)
	;;=Enter the dollar amount of claims against this policy for outpatient
	;;^DD(355.5,.14,21,2,0)
	;;=mental health services.
	;;^DD(355.5,.14,"DT")
	;;=2930513
	;;^DD(355.5,.15,0)
	;;=PRE-EXISTING CONDITIONS^F^^0;15^K:$L(X)>30!($L(X)<3) X
	;;^DD(355.5,.15,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.5,.15,21,0)
	;;=^^1^1^2930713^
	;;^DD(355.5,.15,21,1,0)
	;;=Enter the patient's pre-existing conditions.
	;;^DD(355.5,.15,"DT")
	;;=2930513
	;;^DD(355.5,.16,0)
	;;=COORDINATION OF BENEFITS DATA^F^^0;16^K:$L(X)>30!($L(X)<3) X
	;;^DD(355.5,.16,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.5,.16,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,.16,21,1,0)
	;;=If the patient is included in a policy held by a family member, e.g.
	;;^DD(355.5,.16,21,2,0)
	;;=spouse, enter that information here.
	;;^DD(355.5,.16,"DT")
	;;=2930513
	;;^DD(355.5,.17,0)
	;;=PATIENT POLICY POINTER^NJ6,0I^^0;17^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(355.5,.17,1,0)
	;;=^.1
	;;^DD(355.5,.17,1,1,0)
	;;=355.5^APPY3^MUMPS
	;;^DD(355.5,.17,1,1,1)
	;;=I $P(^IBA(355.5,DA,0),U,2),+^(0),-$P(^(0),U,3) S ^IBA(355.5,"APPY",+$P(^(0),U,2),+^(0),-$P(^(0),U,3),X,DA)=""
	;;^DD(355.5,.17,1,1,2)
	;;=K ^IBA(355.5,"APPY",+$P(^(0),U,2),+^(0),-$P(^(0),U,3),X,DA)
	;;^DD(355.5,.17,1,1,"%D",0)
	;;=^^1^1^2930831^^^
	;;^DD(355.5,.17,1,1,"%D",1,0)
	;;=Cross-references patients by policy by year.
	;;^DD(355.5,.17,1,1,"DT")
	;;=2930831
	;;^DD(355.5,.17,3)
	;;=Type a Number between 1 and 999999, 0 Decimal Digits
	;;^DD(355.5,.17,8.5)
	;;=^
	;;^DD(355.5,.17,9)
	;;=^
	;;^DD(355.5,.17,"DT")
	;;=2930831
	;;^DD(355.5,.18,0)
	;;=AMT. MH LIFET. MAX USED (INPT)^NJ10,2^^0;18^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.5,.18,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(355.5,.18,21,0)
	;;=^^2^2^2931214^^^^

IBINI054
IBINI054	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.5,.18,21,1,0)
	;;=Enter the dollar amount of claims against this policy for mental
	;;^DD(355.5,.18,21,2,0)
	;;=health services.
	;;^DD(355.5,.18,"DT")
	;;=2931214
	;;^DD(355.5,.19,0)
	;;=AMT LIFETIME MAX USED (INPT)^NJ10,2^^0;19^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.5,.19,3)
	;;=Type a Dollar Amount between 0 and 9999999, 0 Decimal Digits
	;;^DD(355.5,.19,21,0)
	;;=^^3^3^2931214^
	;;^DD(355.5,.19,21,1,0)
	;;=Enter the dollar amount of inpatient claims against this policy, which
	;;^DD(355.5,.19,21,2,0)
	;;=can then be compared to the maxium amount available over the life of
	;;^DD(355.5,.19,21,3,0)
	;;=the policy.
	;;^DD(355.5,.19,"DT")
	;;=2931214
	;;^DD(355.5,.2,0)
	;;=AMT MH LIFET MAX USED (OPT)^NJ10,2^^0;20^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(355.5,.2,3)
	;;=Type a Dollar Amount between 0 and 9999999, 0 Decimal Digits
	;;^DD(355.5,.2,21,0)
	;;=^^3^3^2931214^
	;;^DD(355.5,.2,21,1,0)
	;;=Enter the dollar amount of MH claims against this policy, which can
	;;^DD(355.5,.2,21,2,0)
	;;=then be compared to the maximum amount available over the life of
	;;^DD(355.5,.2,21,3,0)
	;;=the policy.
	;;^DD(355.5,.2,"DT")
	;;=2931214
	;;^DD(355.5,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.5,1.01,9)
	;;=^
	;;^DD(355.5,1.01,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,1.01,21,1,0)
	;;=This is the date that this entry was created.  It is automatically
	;;^DD(355.5,1.01,21,2,0)
	;;=triggered by the creation of the entry.
	;;^DD(355.5,1.01,"DT")
	;;=2930513
	;;^DD(355.5,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(355.5,1.02,9)
	;;=^
	;;^DD(355.5,1.02,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,1.02,21,1,0)
	;;=This is the user who created this entry.  It is automatically
	;;^DD(355.5,1.02,21,2,0)
	;;=triggered by the creation of this entry.
	;;^DD(355.5,1.02,"DT")
	;;=2930513
	;;^DD(355.5,1.03,0)
	;;=DATE LAST VERIFIED^D^^1;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.5,1.03,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,1.03,21,1,0)
	;;=This is the date that the entry was verified.  It is automatically
	;;^DD(355.5,1.03,21,2,0)
	;;=triggered by the verification process.
	;;^DD(355.5,1.03,"DT")
	;;=2930707
	;;^DD(355.5,1.04,0)
	;;=VERIFIED BY^P200'^VA(200,^1;4^Q
	;;^DD(355.5,1.04,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,1.04,21,1,0)
	;;=This is the person who verified the entry.  It is automatically
	;;^DD(355.5,1.04,21,2,0)
	;;=triggered by the verification process.
	;;^DD(355.5,1.04,"DT")
	;;=2930513
	;;^DD(355.5,1.05,0)
	;;=DATE LAST EDITED^D^^1;5^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(355.5,1.05,3)
	;;=
	;;^DD(355.5,1.05,9)
	;;=^
	;;^DD(355.5,1.05,21,0)
	;;=^^2^2^2930713^^
	;;^DD(355.5,1.05,21,1,0)
	;;=This is the date that the entry was last edited.  It is automatically
	;;^DD(355.5,1.05,21,2,0)
	;;=triggered whenever editing takes place.
	;;^DD(355.5,1.05,"DT")
	;;=2930707
	;;^DD(355.5,1.06,0)
	;;=EDITED BY^P200'^VA(200,^1;6^Q
	;;^DD(355.5,1.06,9)
	;;=^
	;;^DD(355.5,1.06,21,0)
	;;=^^2^2^2930713^
	;;^DD(355.5,1.06,21,1,0)
	;;=This is the name of the person who last edited the entry.  It is
	;;^DD(355.5,1.06,21,2,0)
	;;=automatically triggered whenever editing takes place.
	;;^DD(355.5,1.06,"DT")
	;;=2930513
	;;^DD(355.5,1.07,0)
	;;=PERSON CONTACTED^RF^^1;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(355.5,1.07,.1)
	;;=WHO DID YOU TALK TO AT THE INSURANCE COMPANY?
	;;^DD(355.5,1.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.5,1.07,21,0)
	;;=^^2^2^2930702^^^
	;;^DD(355.5,1.07,21,1,0)
	;;=Give the name of the person at the insurance company with whom you

IBINI055
IBINI055	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.5,1.07,21,2,0)
	;;=verified insurance claims information.
	;;^DD(355.5,1.07,"DT")
	;;=2930702
	;;^DD(355.5,1.08,0)
	;;=COMMENT - CLAIMS FILED^F^^1;8^K:$L(X)>80!($L(X)<3) X
	;;^DD(355.5,1.08,3)
	;;=Answer must be 3-80 characters in length.
	;;^DD(355.5,1.08,21,0)
	;;=^^1^1^2930713^
	;;^DD(355.5,1.08,21,1,0)
	;;=Enter any pertinent information here that you did not enter above.
	;;^DD(355.5,1.08,"DT")
	;;=2930611
	;;^DD(355.5,1.09,0)
	;;=CONTACT'S PHONE NUMBER^RF^^1;9^K:$L(X)>20!($L(X)<7) X
	;;^DD(355.5,1.09,.1)
	;;=WHAT WAS THEIR PHONE NUMBER?
	;;^DD(355.5,1.09,3)
	;;=Answer must be 7-20 characters in length.
	;;^DD(355.5,1.09,21,0)
	;;=^^2^2^2930702^^
	;;^DD(355.5,1.09,21,1,0)
	;;=Give the telephone number of the person who verified insurance
	;;^DD(355.5,1.09,21,2,0)
	;;=claims information.
	;;^DD(355.5,1.09,"DT")
	;;=2930702

IBINI056
IBINI056	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.6,0,"GL")
	;;=^IBE(355.6,
	;;^DIC("B","INSURANCE RIDERS",355.6)
	;;=
	;;^DIC(355.6,"%D",0)
	;;=^^7^7^2940214^^^^
	;;^DIC(355.6,"%D",1,0)
	;;=This file contains a listing of Insurance Riders that can be purchased
	;;^DIC(355.6,"%D",2,0)
	;;=as add on coverage to a group plan.  The software does nothing special
	;;^DIC(355.6,"%D",3,0)
	;;=with these riders.  The listing may be added to locally and be assigned
	;;^DIC(355.6,"%D",4,0)
	;;=to patients as Policy riders.  This information is strictly for display
	;;^DIC(355.6,"%D",5,0)
	;;=and tracking purposes only.
	;;^DIC(355.6,"%D",6,0)
	;;= 
	;;^DIC(355.6,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.6,0)
	;;=FIELD^^11^2
	;;^DD(355.6,0,"DDA")
	;;=N
	;;^DD(355.6,0,"IX","B",355.6,.01)
	;;=
	;;^DD(355.6,0,"NM","INSURANCE RIDERS")
	;;=
	;;^DD(355.6,0,"PT",355.7,.01)
	;;=
	;;^DD(355.6,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(355.6,.01,1,0)
	;;=^.1
	;;^DD(355.6,.01,1,1,0)
	;;=355.6^B
	;;^DD(355.6,.01,1,1,1)
	;;=S ^IBE(355.6,"B",$E(X,1,30),DA)=""
	;;^DD(355.6,.01,1,1,2)
	;;=K ^IBE(355.6,"B",$E(X,1,30),DA)
	;;^DD(355.6,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(355.6,.01,21,0)
	;;=^^3^3^2931129^
	;;^DD(355.6,.01,21,1,0)
	;;=This is the name of the Rider.  The entries in this file are generic
	;;^DD(355.6,.01,21,2,0)
	;;=riders that are commonly purchased as add-on insurance to a group plan.
	;;^DD(355.6,.01,21,3,0)
	;;=Many plans allow the purchase of add-on riders while many do not.
	;;^DD(355.6,.01,"DT")
	;;=2931129
	;;^DD(355.6,11,0)
	;;=DESCRIPTION^355.611^^11;0
	;;^DD(355.6,11,21,0)
	;;=^^1^1^2931129^
	;;^DD(355.6,11,21,1,0)
	;;=This is a description of the riders.
	;;^DD(355.611,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(355.611,0,"NM","DESCRIPTION")
	;;=
	;;^DD(355.611,0,"UP")
	;;=355.6
	;;^DD(355.611,.01,0)
	;;=DESCRIPTION^W^^0;1^Q
	;;^DD(355.611,.01,"DT")
	;;=2931129

IBINI057
IBINI057	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.6)
	;;=^IBE(355.6,
	;;^UTILITY(U,$J,355.6,0)
	;;=INSURANCE RIDERS^355.6^18^18
	;;^UTILITY(U,$J,355.6,1,0)
	;;=EXTEND COVERAGE TO 365 DAYS
	;;^UTILITY(U,$J,355.6,1,11,0)
	;;=^^1^1^2931130^^
	;;^UTILITY(U,$J,355.6,1,11,1,0)
	;;=Extends coverage to 365 dates of in-hospital visits.
	;;^UTILITY(U,$J,355.6,2,0)
	;;=COVERAGE FOR ACCIDENTAL INJURY
	;;^UTILITY(U,$J,355.6,2,11,0)
	;;=^^3^3^2931130^
	;;^UTILITY(U,$J,355.6,2,11,1,0)
	;;=Provides first-aid coverage for accidental injuries and coverage
	;;^UTILITY(U,$J,355.6,2,11,2,0)
	;;=for certain medical emergency examinations provided in the doctor's
	;;^UTILITY(U,$J,355.6,2,11,3,0)
	;;=office, outpatient or emergcy department.
	;;^UTILITY(U,$J,355.6,3,0)
	;;=EXTEND DEPENDENTS TO AGE 23
	;;^UTILITY(U,$J,355.6,3,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,3,11,1,0)
	;;=Extends age limit for eligible dependents to 23.
	;;^UTILITY(U,$J,355.6,4,0)
	;;=AMBULANCE COVERAGE
	;;^UTILITY(U,$J,355.6,4,11,0)
	;;=^^2^2^2931130^
	;;^UTILITY(U,$J,355.6,4,11,1,0)
	;;=Provides benefits for necessary ambulance servcies to a hospital as ordered
	;;^UTILITY(U,$J,355.6,4,11,2,0)
	;;=by a physician or officer of the law.
	;;^UTILITY(U,$J,355.6,5,0)
	;;=NO LABORATORY MAXIMUM
	;;^UTILITY(U,$J,355.6,5,11,0)
	;;=^^3^3^2931130^
	;;^UTILITY(U,$J,355.6,5,11,1,0)
	;;=Removes Laboratory maximum and expands laboratory coverage to include
	;;^UTILITY(U,$J,355.6,5,11,2,0)
	;;=those in the doctor's office, outpatient department or independent lab
	;;^UTILITY(U,$J,355.6,5,11,3,0)
	;;=with no maximum benefit.
	;;^UTILITY(U,$J,355.6,6,0)
	;;=MENTAL HEALTH COVERAGE
	;;^UTILITY(U,$J,355.6,6,11,0)
	;;=^^5^5^2931130^
	;;^UTILITY(U,$J,355.6,6,11,1,0)
	;;=Provides coverage for specified mental health services provided by
	;;^UTILITY(U,$J,355.6,6,11,2,0)
	;;=psychiatrists, psychologists, and certified psychiatric social workers
	;;^UTILITY(U,$J,355.6,6,11,3,0)
	;;=when not otherwise covered by a plan.  
	;;^UTILITY(U,$J,355.6,6,11,4,0)
	;;= 
	;;^UTILITY(U,$J,355.6,6,11,5,0)
	;;=Inpatient and outpatient maximums may apply.
	;;^UTILITY(U,$J,355.6,7,0)
	;;=PRESCRIPTION COVERAGE
	;;^UTILITY(U,$J,355.6,7,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,7,11,1,0)
	;;=Provides coverage for medications and nonexperimental therapy.
	;;^UTILITY(U,$J,355.6,8,0)
	;;=ELIMINATE PRESCRIPTION COVER
	;;^UTILITY(U,$J,355.6,8,11,0)
	;;=^^2^2^2931130^
	;;^UTILITY(U,$J,355.6,8,11,1,0)
	;;=Eliminates benefits for prescription drugs and insulin from 
	;;^UTILITY(U,$J,355.6,8,11,2,0)
	;;=basic contract.
	;;^UTILITY(U,$J,355.6,9,0)
	;;=PRE-EXISTING COND. 11 MONTHS
	;;^UTILITY(U,$J,355.6,9,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,9,11,1,0)
	;;=Imposes an 11 month waiting period for pre-existing conditions.
	;;^UTILITY(U,$J,355.6,10,0)
	;;=EXTEND DEPENDENTS TO AGE 25
	;;^UTILITY(U,$J,355.6,10,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,10,11,1,0)
	;;=Extends coverage for student dependents to age 25.
	;;^UTILITY(U,$J,355.6,11,0)
	;;=ELIMINATE DEDUCTIBLE AND COPAY
	;;^UTILITY(U,$J,355.6,11,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,11,11,1,0)
	;;=Eliminates deductibles and copayments for most hospital facility charges.
	;;^UTILITY(U,$J,355.6,12,0)
	;;=SUBSTANCE ABUSE 30 DAYS
	;;^UTILITY(U,$J,355.6,12,11,0)
	;;=^^2^2^2931130^
	;;^UTILITY(U,$J,355.6,12,11,1,0)
	;;=Provides benefits for up to 30 days of inpatient rehabilitation for
	;;^UTILITY(U,$J,355.6,12,11,2,0)
	;;=alcoholism or substance abuse during each calendar year.
	;;^UTILITY(U,$J,355.6,13,0)
	;;=NURSING HOME COVERAGE

IBINI058
IBINI058	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(355.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,355.6,13,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,13,11,1,0)
	;;=Provides benefits for nursing home care.
	;;^UTILITY(U,$J,355.6,14,0)
	;;=EYE EXAM COVERAGE
	;;^UTILITY(U,$J,355.6,14,11,0)
	;;=^^2^2^2931130^
	;;^UTILITY(U,$J,355.6,14,11,1,0)
	;;=Provides benefits for eye examinations, lenses, frames, and contact
	;;^UTILITY(U,$J,355.6,14,11,2,0)
	;;=lenses based on a fixed fee schedule.
	;;^UTILITY(U,$J,355.6,15,0)
	;;=INPATIENT DEDUCTIBLE $50
	;;^UTILITY(U,$J,355.6,15,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,15,11,1,0)
	;;=Imposes a $50 inpatient hospital deductible per calendar year.
	;;^UTILITY(U,$J,355.6,16,0)
	;;=INPATIENT DEDUCTIBLE $100
	;;^UTILITY(U,$J,355.6,16,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,16,11,1,0)
	;;=Imposes a $100 inpatient hospital deductible per calendar year.
	;;^UTILITY(U,$J,355.6,17,0)
	;;=INPATIENT DEDUCTIBLE $250
	;;^UTILITY(U,$J,355.6,17,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,17,11,1,0)
	;;=Imposes a $250 inpatient hospital deductible per calendar year.
	;;^UTILITY(U,$J,355.6,18,0)
	;;=INPATIENT DEDUCTIBLE $500
	;;^UTILITY(U,$J,355.6,18,11,0)
	;;=^^1^1^2931130^
	;;^UTILITY(U,$J,355.6,18,11,1,0)
	;;=Imposes a $500 inpatient hospital deductible per calendar year.

IBINI059
IBINI059	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(355.7,0,"GL")
	;;=^IBA(355.7,
	;;^DIC("B","PERSONAL POLICY",355.7)
	;;=
	;;^DIC(355.7,"%D",0)
	;;=^^5^5^2940214^^^^
	;;^DIC(355.7,"%D",1,0)
	;;=This file contains the insurance riders that have been purchased as
	;;^DIC(355.7,"%D",2,0)
	;;=add on coverage to a group plan.  This information is used internally
	;;^DIC(355.7,"%D",3,0)
	;;=for display purposes only.  
	;;^DIC(355.7,"%D",4,0)
	;;= 
	;;^DIC(355.7,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(355.7,0)
	;;=FIELD^^.03^3
	;;^DD(355.7,0,"DDA")
	;;=N
	;;^DD(355.7,0,"DT")
	;;=2931129
	;;^DD(355.7,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(355.7,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(355.7,0,"IX","AC",355.7,.02)
	;;=
	;;^DD(355.7,0,"IX","APP",355.7,.01)
	;;=
	;;^DD(355.7,0,"IX","APP1",355.7,.02)
	;;=
	;;^DD(355.7,0,"IX","APP2",355.7,.03)
	;;=
	;;^DD(355.7,0,"IX","B",355.7,.01)
	;;=
	;;^DD(355.7,0,"NM","PERSONAL POLICY")
	;;=
	;;^DD(355.7,.01,0)
	;;=RIDER^RP355.6'^IBE(355.6,^0;1^Q
	;;^DD(355.7,.01,1,0)
	;;=^.1
	;;^DD(355.7,.01,1,1,0)
	;;=355.7^B
	;;^DD(355.7,.01,1,1,1)
	;;=S ^IBA(355.7,"B",$E(X,1,30),DA)=""
	;;^DD(355.7,.01,1,1,2)
	;;=K ^IBA(355.7,"B",$E(X,1,30),DA)
	;;^DD(355.7,.01,1,2,0)
	;;=355.7^APP^MUMPS
	;;^DD(355.7,.01,1,2,1)
	;;=S:$P(^IBA(355.7,DA,0),U,2)&($P(^(0),U,3)) ^IBA(355.7,"APP",+$P(^(0),U,2),+$P(^(0),U,3),X,DA)=""
	;;^DD(355.7,.01,1,2,2)
	;;=K ^IBA(355.7,"APP",+$P(^IBA(355.7,DA,0),U,2),+$P(^(0),U,3),X,DA)
	;;^DD(355.7,.01,1,2,"%D",0)
	;;=^^2^2^2931129^^
	;;^DD(355.7,.01,1,2,"%D",1,0)
	;;=Cross reference of riders by patient, policy, rider.  Used to make sure
	;;^DD(355.7,.01,1,2,"%D",2,0)
	;;=only one entry for each policy.
	;;^DD(355.7,.01,1,2,"DT")
	;;=2931129
	;;^DD(355.7,.01,3)
	;;=
	;;^DD(355.7,.01,21,0)
	;;=^^4^4^2931129^
	;;^DD(355.7,.01,21,1,0)
	;;=Select the Insurance Rider that best describes the personal rider you are
	;;^DD(355.7,.01,21,2,0)
	;;=adding or editing for this patient.  A personal rider is add-on coverage
	;;^DD(355.7,.01,21,3,0)
	;;=that an individual may purchase as part of their group plan but is
	;;^DD(355.7,.01,21,4,0)
	;;=has additional cost.
	;;^DD(355.7,.01,"DT")
	;;=2931130
	;;^DD(355.7,.02,0)
	;;=PATIENT^P2'^DPT(^0;2^Q
	;;^DD(355.7,.02,1,0)
	;;=^.1
	;;^DD(355.7,.02,1,1,0)
	;;=355.7^AC
	;;^DD(355.7,.02,1,1,1)
	;;=S ^IBA(355.7,"AC",$E(X,1,30),DA)=""
	;;^DD(355.7,.02,1,1,2)
	;;=K ^IBA(355.7,"AC",$E(X,1,30),DA)
	;;^DD(355.7,.02,1,1,"DT")
	;;=2931130
	;;^DD(355.7,.02,1,2,0)
	;;=355.7^APP1^MUMPS
	;;^DD(355.7,.02,1,2,1)
	;;=S:$P(^IBA(355.7,DA,0),U,3) ^IBA(355.7,"APP",X,+$P(^(0),U,3),+^(0),DA)=""
	;;^DD(355.7,.02,1,2,2)
	;;=K ^IBA(355.7,"APP",X,+$P(^IBA(355.7,DA,0),U,3),+^(0),DA)
	;;^DD(355.7,.02,1,2,"%D",0)
	;;=^^2^2^2931129^
	;;^DD(355.7,.02,1,2,"%D",1,0)
	;;=Cross reference of riders by patient, policy, rider.  Used to make sure
	;;^DD(355.7,.02,1,2,"%D",2,0)
	;;=only one entry for each policy.
	;;^DD(355.7,.02,1,2,"DT")
	;;=2931129
	;;^DD(355.7,.02,21,0)
	;;=^^3^3^2940213^^
	;;^DD(355.7,.02,21,1,0)
	;;=Select the patient that this is a rider for.
	;;^DD(355.7,.02,21,2,0)
	;;=For any patients' policy there may be a number of riders associated
	;;^DD(355.7,.02,21,3,0)
	;;=with it.
	;;^DD(355.7,.02,"DT")
	;;=2931130
	;;^DD(355.7,.03,0)
	;;=HEALTH INSURANCE POLICY^FXO^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<1) X S:$D(X) X=$$SEL^IBTRC2(X,$P(^IBA(355.7,DA,0),"^",2),DT,2)
	;;^DD(355.7,.03,1,0)
	;;=^.1

IBINI05A
IBINI05A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(355.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(355.7,.03,1,1,0)
	;;=355.7^APP2^MUMPS
	;;^DD(355.7,.03,1,1,1)
	;;=S:$P(^IBA(355.7,DA,0),U,2) ^IBA(355.7,"APP",+$P(^(0),U,2),X,+^(0),DA)=""
	;;^DD(355.7,.03,1,1,2)
	;;=K ^IBA(355.7,"APP",+$P(^IBA(355.7,DA,0),U,2),X,+^(0),DA)
	;;^DD(355.7,.03,1,1,"%D",0)
	;;=^^2^2^2931129^
	;;^DD(355.7,.03,1,1,"%D",1,0)
	;;=Cross reference of riders by patient, policy, rider.  Used to make sure
	;;^DD(355.7,.03,1,1,"%D",2,0)
	;;=only one entry for each policy.
	;;^DD(355.7,.03,1,1,"DT")
	;;=2931129
	;;^DD(355.7,.03,2)
	;;=S Y(0)=Y S Y=$P($G(^DIC(36,+$P($G(^DPT(+$P(^IBA(355.7,DA,0),U,2),.312,+$G(Y),0)),U),0)),U)
	;;^DD(355.7,.03,2.1)
	;;=S Y=$P($G(^DIC(36,+$P($G(^DPT(+$P(^IBA(355.7,DA,0),U,2),.312,+$G(Y),0)),U),0)),U)
	;;^DD(355.7,.03,3)
	;;=Select the correct policy for this patient.  Answer must be 1-30 characters in length.
	;;^DD(355.7,.03,4)
	;;=S DFN=$P(^IBA(355.7,DA,0),U,2) D DISP^IBCNS W !
	;;^DD(355.7,.03,21,0)
	;;=^^3^3^2940213^
	;;^DD(355.7,.03,21,1,0)
	;;=This is the policy for the patient that this is a rider for.
	;;^DD(355.7,.03,21,2,0)
	;;= 
	;;^DD(355.7,.03,21,3,0)
	;;=One or more riders may be associated with any policy for any patient.
	;;^DD(355.7,.03,"DT")
	;;=2931129

IBINI05B
IBINI05B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356,0,"GL")
	;;=^IBT(356,
	;;^DIC("B","CLAIMS TRACKING",356)
	;;=
	;;^DIC(356,"%D",0)
	;;=^^6^6^2940214^^^^
	;;^DIC(356,"%D",1,0)
	;;=This file may contain entries of all type of billable events that need
	;;^DIC(356,"%D",2,0)
	;;=to be tracked by MCCR.  The information in this file is used for MCCR and
	;;^DIC(356,"%D",3,0)
	;;=or UR purposes.  It is information about the event itself not otherwise
	;;^DIC(356,"%D",4,0)
	;;=stored or pertinent for MCCR purposes.
	;;^DIC(356,"%D",5,0)
	;;= 
	;;^DIC(356,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356,0)
	;;=FIELD^^1.08^38
	;;^DD(356,0,"DT")
	;;=2940128
	;;^DD(356,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "  ",$E(Y,1,20),@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356,0,"ID",.06)
	;;=W "   ",$E($P(^(0),U,6),4,5)_"-"_$E($P(^(0),U,6),6,7)_"-"_$E($P(^(0),U,6),2,3)
	;;^DD(356,0,"ID",.07)
	;;=I $P(^(0),U,7) W ?38,@("$P($P($C(59)_$S($D(^DD(356,.07,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,7)_"":"",2),$C(59),1)")
	;;^DD(356,0,"ID",.18)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(356.6,+$P(^(0),U,18),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356.6,.01,0),U,2) D Y^DIQ:Y]"" W " ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356,0,"ID","WRITE")
	;;=D ID^IBTRE20
	;;^DD(356,0,"IX","ABD",356,.17)
	;;=
	;;^DD(356,0,"IX","AC",356,.12)
	;;=
	;;^DD(356,0,"IX","AD",356,.05)
	;;=
	;;^DD(356,0,"IX","ADFN",356,.02)
	;;=
	;;^DD(356,0,"IX","ADM",356,.05)
	;;=
	;;^DD(356,0,"IX","ADM1",356,.02)
	;;=
	;;^DD(356,0,"IX","AENC",356,.04)
	;;=
	;;^DD(356,0,"IX","AENC1",356,.02)
	;;=
	;;^DD(356,0,"IX","AI",356,.24)
	;;=
	;;^DD(356,0,"IX","ANABD1",356,.19)
	;;=
	;;^DD(356,0,"IX","ANABD2",356,.2)
	;;=
	;;^DD(356,0,"IX","ANABD3",356,.18)
	;;=
	;;^DD(356,0,"IX","APRO",356,.09)
	;;=
	;;^DD(356,0,"IX","APTDT",356,.06)
	;;=
	;;^DD(356,0,"IX","APTDT1",356,.02)
	;;=
	;;^DD(356,0,"IX","APTY",356,.02)
	;;=
	;;^DD(356,0,"IX","APTY1",356,.06)
	;;=
	;;^DD(356,0,"IX","APTY2",356,.18)
	;;=
	;;^DD(356,0,"IX","AR",356,.19)
	;;=
	;;^DD(356,0,"IX","ARXFL",356,.1)
	;;=
	;;^DD(356,0,"IX","ARXFL1",356,.08)
	;;=
	;;^DD(356,0,"IX","ASCE",356,.04)
	;;=
	;;^DD(356,0,"IX","ASCH",356,.32)
	;;=
	;;^DD(356,0,"IX","ASPC",356,.12)
	;;=
	;;^DD(356,0,"IX","ASPC1",356,.02)
	;;=
	;;^DD(356,0,"IX","ATOBIL",356,.02)
	;;=
	;;^DD(356,0,"IX","ATOBIL1",356,.17)
	;;=
	;;^DD(356,0,"IX","AVSIT",356,.03)
	;;=
	;;^DD(356,0,"IX","B",356,.01)
	;;=
	;;^DD(356,0,"IX","C",356,.02)
	;;=
	;;^DD(356,0,"IX","D",356,.06)
	;;=
	;;^DD(356,0,"IX","E",356,.11)
	;;=
	;;^DD(356,0,"IX","EVNT",356,.18)
	;;=
	;;^DD(356,0,"NM","CLAIMS TRACKING")
	;;=
	;;^DD(356,0,"PT",356.1,.02)
	;;=
	;;^DD(356,0,"PT",356.2,.02)
	;;=
	;;^DD(356,0,"PT",356.399,.01)
	;;=
	;;^DD(356,0,"PT",362.1,.02)
	;;=
	;;^DD(356,.01,0)
	;;=ENTRY ID^RNJ11,0^^0;1^K:+X'=X!(X>99999999999)!(X<1001)!(X?.E1"."1N.N) X
	;;^DD(356,.01,1,0)
	;;=^.1
	;;^DD(356,.01,1,1,0)
	;;=356^B
	;;^DD(356,.01,1,1,1)
	;;=S ^IBT(356,"B",$E(X,1,30),DA)=""
	;;^DD(356,.01,1,1,2)
	;;=K ^IBT(356,"B",$E(X,1,30),DA)
	;;^DD(356,.01,3)
	;;=Type a Number between 1001 and 99999999999, 0 Decimal Digits
	;;^DD(356,.01,21,0)
	;;=^^2^2^2930609^
	;;^DD(356,.01,21,1,0)
	;;=This is a unique number assigned to this entry.  The first 3 characters
	;;^DD(356,.01,21,2,0)
	;;=of the number are the station number.
	;;^DD(356,.01,"DEL",1,0)
	;;=I $P(^IBT(356,DA,0),U,2) W *7,!,"Only can be deleted from Menus"
	;;^DD(356,.01,"DT")
	;;=2930609
	;;^DD(356,.02,0)
	;;=PATIENT^P2'^DPT(^0;2^Q
	;;^DD(356,.02,1,0)
	;;=^.1

IBINI05C
IBINI05C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.02,1,1,0)
	;;=356^C
	;;^DD(356,.02,1,1,1)
	;;=S ^IBT(356,"C",$E(X,1,30),DA)=""
	;;^DD(356,.02,1,1,2)
	;;=K ^IBT(356,"C",$E(X,1,30),DA)
	;;^DD(356,.02,1,1,"DT")
	;;=2930621
	;;^DD(356,.02,1,2,0)
	;;=356^ADM1^MUMPS
	;;^DD(356,.02,1,2,1)
	;;=S:$P(^IBT(356,DA,0),"^",5) ^IBT(356,"ADM",X,+$P(^(0),"^",5),DA)=""
	;;^DD(356,.02,1,2,2)
	;;=K ^IBT(356,"ADM",X,+$P(^IBT(356,DA,0),"^",5),DA)
	;;^DD(356,.02,1,2,"%D",0)
	;;=^^1^1^2930702^^
	;;^DD(356,.02,1,2,"%D",1,0)
	;;=Cross-reference of all admissions by patient.
	;;^DD(356,.02,1,2,"DT")
	;;=2930702
	;;^DD(356,.02,1,3,0)
	;;=356^APTDT1^MUMPS
	;;^DD(356,.02,1,3,1)
	;;=S:$P(^IBT(356,DA,0),U,6) ^IBT(356,"APTDT",X,-($P(^(0),U,6)),DA)=""
	;;^DD(356,.02,1,3,2)
	;;=K ^IBT(356,"APTDT",X,-($P(^IBT(356,DA,0),U,6)),DA)
	;;^DD(356,.02,1,3,"%D",0)
	;;=^^2^2^2930806^^
	;;^DD(356,.02,1,3,"%D",1,0)
	;;=Cross reference of all episodes of care by patient by date, in inverse
	;;^DD(356,.02,1,3,"%D",2,0)
	;;=date order so can list most recent first.
	;;^DD(356,.02,1,3,"DT")
	;;=2930806
	;;^DD(356,.02,1,4,0)
	;;=356^ASPC1^MUMPS
	;;^DD(356,.02,1,4,1)
	;;=S:$P(^IBT(356,DA,0),U,12) ^IBT(356,X,+$P(^(0),U,12),DA)=""
	;;^DD(356,.02,1,4,2)
	;;=K ^IBT(356,X,+$P(^IBT(356,DA,0),U,12),DA)
	;;^DD(356,.02,1,4,"%D",0)
	;;=^^1^1^2930712^
	;;^DD(356,.02,1,4,"%D",1,0)
	;;=Cross-reference of special types of bills by patient.
	;;^DD(356,.02,1,4,"DT")
	;;=2930712
	;;^DD(356,.02,1,5,0)
	;;=356^ADFN^MUMPS
	;;^DD(356,.02,1,5,1)
	;;=S ^IBT(356,"ADFN"_X,+^IBT(356,DA,0),DA)=""
	;;^DD(356,.02,1,5,2)
	;;=K ^IBT(356,"ADFN"_X,+^IBT(356,DA,0),DA)
	;;^DD(356,.02,1,5,"%D",0)
	;;=^^1^1^2931109^^
	;;^DD(356,.02,1,5,"%D",1,0)
	;;=Cross-reference by patient dfn for fast look-up.
	;;^DD(356,.02,1,5,"DT")
	;;=2930729
	;;^DD(356,.02,1,6,0)
	;;=356^ATOBIL^MUMPS
	;;^DD(356,.02,1,6,1)
	;;=S:$P(^IBT(356,DA,0),U,17)&($P(^(0),U,18)) ^IBT(356,"ATOBIL",+X,+$P(^(0),U,18),+$P(^(0),U,17),DA)=""
	;;^DD(356,.02,1,6,2)
	;;=K ^IBT(356,"ATOBIL",+X,+$P(^IBT(356,DA,0),U,18),+$P(^(0),U,17),DA)
	;;^DD(356,.02,1,6,"%D",0)
	;;=^^3^3^2930824^^^^
	;;^DD(356,.02,1,6,"%D",1,0)
	;;=This is a cross-reference of all active billable events that have not
	;;^DD(356,.02,1,6,"%D",2,0)
	;;=already been billed.  It is used by the autobilling software to determine
	;;^DD(356,.02,1,6,"%D",3,0)
	;;=the next autobill date for a patient by type of event.
	;;^DD(356,.02,1,6,"DT")
	;;=2930824
	;;^DD(356,.02,1,7,0)
	;;=356^APTY^MUMPS
	;;^DD(356,.02,1,7,1)
	;;=S:$P(^IBT(356,DA,0),U,6)&($P(^(0),U,18)) ^IBT(356,"APTY",X,+$P(^(0),U,18),+$P(^(0),U,6),DA)=""
	;;^DD(356,.02,1,7,2)
	;;=K ^IBT(356,"APTY",X,+$P(^IBT(356,DA,0),U,18),+$P(^(0),U,6),DA)
	;;^DD(356,.02,1,7,"%D",0)
	;;=^^1^1^2930809^^
	;;^DD(356,.02,1,7,"%D",1,0)
	;;=Cross-reference of all entries by patient by event type, by episode date.
	;;^DD(356,.02,1,7,"DT")
	;;=2930809
	;;^DD(356,.02,1,8,0)
	;;=356^AENC1^MUMPS
	;;^DD(356,.02,1,8,1)
	;;=S:$P(^IBT(356,DA,0),U,4) ^IBT(356,"AENC",X,+$P(^(0),U,4),DA)=""
	;;^DD(356,.02,1,8,2)
	;;=K ^IBT(356,"AENC",X,+$P(^IBT(356,DA,0),U,4),DA)
	;;^DD(356,.02,1,8,"%D",0)
	;;=^^1^1^2930831^
	;;^DD(356,.02,1,8,"%D",1,0)
	;;=Cross reference of all outpatient encounters by patient
	;;^DD(356,.02,1,8,"DT")
	;;=2930831
	;;^DD(356,.02,21,0)
	;;=^^5^5^2930709^
	;;^DD(356,.02,21,1,0)
	;;=Enter the patient that this Claims Tracking entry is for.  This is 
	;;^DD(356,.02,21,2,0)
	;;=the patient whose admission, outpatient visit, prescription refill,
	;;^DD(356,.02,21,3,0)
	;;=prosthetic device or other encounter for medical care or services
	;;^DD(356,.02,21,4,0)
	;;=is being tracked.

IBINI05D
IBINI05D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.02,21,5,0)
	;;= 
	;;^DD(356,.02,"DT")
	;;=2930831
	;;^DD(356,.03,0)
	;;=VISIT^P9000010'^AUPNVSIT(^0;3^Q
	;;^DD(356,.03,1,0)
	;;=^.1
	;;^DD(356,.03,1,1,0)
	;;=356^AVSIT
	;;^DD(356,.03,1,1,1)
	;;=S ^IBT(356,"AVSIT",$E(X,1,30),DA)=""
	;;^DD(356,.03,1,1,2)
	;;=K ^IBT(356,"AVSIT",$E(X,1,30),DA)
	;;^DD(356,.03,1,1,"%D",0)
	;;=^^1^1^2930712^
	;;^DD(356,.03,1,1,"%D",1,0)
	;;=Regular cross-reference of claim by visit.
	;;^DD(356,.03,1,1,"DT")
	;;=2930712
	;;^DD(356,.03,3)
	;;=
	;;^DD(356,.03,21,0)
	;;=^^4^4^2930709^
	;;^DD(356,.03,21,1,0)
	;;=This is the visit for the patient that is being tracked in this entry.
	;;^DD(356,.03,21,2,0)
	;;= 
	;;^DD(356,.03,21,3,0)
	;;=This field is a place holder for when visit tracking is implemented.  It
	;;^DD(356,.03,21,4,0)
	;;=will point to the visit that is being tracked.
	;;^DD(356,.03,"DT")
	;;=2930712
	;;^DD(356,.04,0)
	;;=OUTPATIENT ENCOUNTER^P409.68'^SCE(^0;4^Q
	;;^DD(356,.04,1,0)
	;;=^.1
	;;^DD(356,.04,1,1,0)
	;;=356^ASCE
	;;^DD(356,.04,1,1,1)
	;;=S ^IBT(356,"ASCE",$E(X,1,30),DA)=""
	;;^DD(356,.04,1,1,2)
	;;=K ^IBT(356,"ASCE",$E(X,1,30),DA)
	;;^DD(356,.04,1,1,"%D",0)
	;;=^^1^1^2930712^
	;;^DD(356,.04,1,1,"%D",1,0)
	;;=Regular cross-reference of claims by outpatient encounters.
	;;^DD(356,.04,1,1,"DT")
	;;=2930712
	;;^DD(356,.04,1,2,0)
	;;=356^AENC^MUMPS
	;;^DD(356,.04,1,2,1)
	;;=S:$P(^IBT(356,DA,0),U,2) ^IBT(356,"AENC",+$P(^(0),U,2),X,DA)=""
	;;^DD(356,.04,1,2,2)
	;;=K ^IBT(356,"AENC",+$P(^IBT(356,DA,0),U,2),X,DA)
	;;^DD(356,.04,1,2,"%D",0)
	;;=^^1^1^2930831^
	;;^DD(356,.04,1,2,"%D",1,0)
	;;=Cross reference of outpatient encounters by patient.
	;;^DD(356,.04,1,2,"DT")
	;;=2930831
	;;^DD(356,.04,21,0)
	;;=^^3^3^2930709^
	;;^DD(356,.04,21,1,0)
	;;=This is the outpatient encounter that is being tracked.  If this is
	;;^DD(356,.04,21,2,0)
	;;=entered and the provider and/or diagnosis for the encounter are entered
	;;^DD(356,.04,21,3,0)
	;;=then the inforamation will be extracted from the encounter file.
	;;^DD(356,.04,"DT")
	;;=2930831
	;;^DD(356,.05,0)
	;;=ADMISSION^*P405'^DGPM(^0;5^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356,.05,1,0)
	;;=^.1
	;;^DD(356,.05,1,1,0)
	;;=356^ADM^MUMPS
	;;^DD(356,.05,1,1,1)
	;;=S:$P(^IBT(356,DA,0),"^",2) ^IBT(356,"ADM",+$P(^(0),"^",2),X,DA)=""
	;;^DD(356,.05,1,1,2)
	;;=K ^IBT(356,"ADM",+$P(^IBT(356,DA,0),"^",2),X,DA)
	;;^DD(356,.05,1,1,"%D",0)
	;;=^^1^1^2940121^^^
	;;^DD(356,.05,1,1,"%D",1,0)
	;;=Cross reference of all admissions by patient.
	;;^DD(356,.05,1,1,"DT")
	;;=2930702
	;;^DD(356,.05,1,2,0)
	;;=356^AD
	;;^DD(356,.05,1,2,1)
	;;=S ^IBT(356,"AD",$E(X,1,30),DA)=""
	;;^DD(356,.05,1,2,2)
	;;=K ^IBT(356,"AD",$E(X,1,30),DA)
	;;^DD(356,.05,1,2,"%D",0)
	;;=^^1^1^2940121^^
	;;^DD(356,.05,1,2,"%D",1,0)
	;;=Regular x-ref of admission movement ifn
	;;^DD(356,.05,1,2,"DT")
	;;=2930804
	;;^DD(356,.05,3)
	;;=
	;;^DD(356,.05,12)
	;;=Only admissions for this patient.
	;;^DD(356,.05,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356,.05,21,0)
	;;=^^4^4^2930709^
	;;^DD(356,.05,21,1,0)
	;;=This is the admission that is being tracked.  When an entry is added for
	;;^DD(356,.05,21,2,0)
	;;=inpatient care for any date the software will find the current admission
	;;^DD(356,.05,21,3,0)
	;;=for that date and use the current admission from the patient movement
	;;^DD(356,.05,21,4,0)
	;;=file.
	;;^DD(356,.05,"DT")
	;;=2931018
	;;^DD(356,.06,0)
	;;=EPISODE DATE^D^^0;6^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356,.06,1,0)
	;;=^.1^^-1
	;;^DD(356,.06,1,1,0)
	;;=356^D
	;;^DD(356,.06,1,1,1)
	;;=S ^IBT(356,"D",$E(X,1,30),DA)=""

IBINI05E
IBINI05E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.06,1,1,2)
	;;=K ^IBT(356,"D",$E(X,1,30),DA)
	;;^DD(356,.06,1,1,"DT")
	;;=2930820
	;;^DD(356,.06,1,2,0)
	;;=356^APTDT^MUMPS
	;;^DD(356,.06,1,2,1)
	;;=S:$P(^IBT(356,DA,0),U,2) ^IBT(356,"APTDT",+$P(^(0),U,2),-X,DA)=""
	;;^DD(356,.06,1,2,2)
	;;=K ^IBT(356,"APTDT",+$P(^IBT(356,DA,0),U,2),-X,DA)
	;;^DD(356,.06,1,2,"%D",0)
	;;=^^2^2^2931008^^^^
	;;^DD(356,.06,1,2,"%D",1,0)
	;;=Cross reference of all episodes of care by patient by date, in inverse
	;;^DD(356,.06,1,2,"%D",2,0)
	;;=date order so can list most recent first.
	;;^DD(356,.06,1,2,"DT")
	;;=2931008
	;;^DD(356,.06,1,4,0)
	;;=356^APTY1^MUMPS
	;;^DD(356,.06,1,4,1)
	;;=S:$P(^IBT(356,DA,0),U,2)&($P(^(0),U,18)) ^IBT(356,"APTY",+$P(^(0),U,2),+$P(^(0),U,18),X,DA)=""
	;;^DD(356,.06,1,4,2)
	;;=K ^IBT(356,"APTY",+$P(^IBT(356,DA,0),U,2),+$P(^(0),U,18),X,DA)
	;;^DD(356,.06,1,4,"%D",0)
	;;=^^1^1^2930809^^
	;;^DD(356,.06,1,4,"%D",1,0)
	;;=Cross-reference of all entries by patient by event type, by episode date.
	;;^DD(356,.06,1,4,"DT")
	;;=2930809
	;;^DD(356,.06,21,0)
	;;=^^7^7^2930712^^
	;;^DD(356,.06,21,1,0)
	;;=This is the date of the episode of care or services that is being tracked.
	;;^DD(356,.06,21,2,0)
	;;=For admissions, it is the admission date.  For outpatient visits it is
	;;^DD(356,.06,21,3,0)
	;;=the visit date.  For prescription refills it is the refill date.  For
	;;^DD(356,.06,21,4,0)
	;;=prosthetic items it is the date that the prosthetic item was issued.
	;;^DD(356,.06,21,5,0)
	;;= 
	;;^DD(356,.06,21,6,0)
	;;=The data in this field is entered by the Claims tracking event tracker
	;;^DD(356,.06,21,7,0)
	;;=routines.
	;;^DD(356,.06,"DT")
	;;=2931008
	;;^DD(356,.07,0)
	;;=ADMISSION TYPE^S^1:SCHEDULED;2:URGENT;3:EMERGENT;4:UNSCHEDULED;5:COURT ORDERED;^0;7^Q
	;;^DD(356,.07,5,1,0)
	;;=356^.18^5
	;;^DD(356,.07,21,0)
	;;=^^5^5^2940213^^^^
	;;^DD(356,.07,21,1,0)
	;;=Enter whether this admission was a scheduled admission, a direct
	;;^DD(356,.07,21,2,0)
	;;=admission from the outpatient area, or whether this was an
	;;^DD(356,.07,21,3,0)
	;;=urgent or emergent admission.  The type of admission will impact
	;;^DD(356,.07,21,4,0)
	;;=whether pre-certification reviews should be done and the impact
	;;^DD(356,.07,21,5,0)
	;;=on reimbursements.
	;;^DD(356,.07,"DT")
	;;=2930820
	;;^DD(356,.08,0)
	;;=PRESCRIPTION^P52'^PSRX(^0;8^Q
	;;^DD(356,.08,1,0)
	;;=^.1
	;;^DD(356,.08,1,1,0)
	;;=356^ARXFL1^MUMPS
	;;^DD(356,.08,1,1,1)
	;;=S:$P(^IBT(356,DA,0),U,10) ^IBT(356,"ARXFL",X,+$P(^(0),U,10),DA)=""
	;;^DD(356,.08,1,1,2)
	;;=K ^IBT(356,"ARXFL",X,+$P(^IBT(356,DA,0),U,10),DA)
	;;^DD(356,.08,1,1,"%D",0)
	;;=^^2^2^2940213^^^
	;;^DD(356,.08,1,1,"%D",1,0)
	;;=This is a cross reference of all prescriptions and refills.  It is used
	;;^DD(356,.08,1,1,"%D",2,0)
	;;=to ensure that only 1 entry for each refill is created.
	;;^DD(356,.08,1,1,"DT")
	;;=2930813
	;;^DD(356,.08,21,0)
	;;=^^2^2^2940213^^
	;;^DD(356,.08,21,1,0)
	;;=If the entry that is being tracked is a prescription refill then this
	;;^DD(356,.08,21,2,0)
	;;=field should point to the entry in the prescription file.
	;;^DD(356,.08,"DT")
	;;=2930813
	;;^DD(356,.09,0)
	;;=PROSTHETIC ITEM^P660'^RMPR(660,^0;9^Q
	;;^DD(356,.09,1,0)
	;;=^.1
	;;^DD(356,.09,1,1,0)
	;;=356^APRO
	;;^DD(356,.09,1,1,1)
	;;=S ^IBT(356,"APRO",$E(X,1,30),DA)=""
	;;^DD(356,.09,1,1,2)
	;;=K ^IBT(356,"APRO",$E(X,1,30),DA)
	;;^DD(356,.09,1,1,"DT")
	;;=2940131
	;;^DD(356,.09,3)
	;;=
	;;^DD(356,.09,21,0)
	;;=^^2^2^2931221^^
	;;^DD(356,.09,21,1,0)
	;;=If this tracking entry is for a prothetic item, this is the pointer
	;;^DD(356,.09,21,2,0)
	;;=to the prosthetic item file.

IBINI05F
IBINI05F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.09,"DT")
	;;=2940131
	;;^DD(356,.1,0)
	;;=REFILL DATE^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356,.1,1,0)
	;;=^.1
	;;^DD(356,.1,1,1,0)
	;;=356^ARXFL^MUMPS
	;;^DD(356,.1,1,1,1)
	;;=S:$P(^IBT(356,DA,0),U,8) ^IBT(356,"ARXFL",$P(^(0),U,8),X,DA)=""
	;;^DD(356,.1,1,1,2)
	;;=K ^IBT(356,"ARXFL",+$P(^IBT(356,DA,0),U,8),X,DA)
	;;^DD(356,.1,1,1,"%D",0)
	;;=^^2^2^2940213^^
	;;^DD(356,.1,1,1,"%D",1,0)
	;;=This is a cross reference of all prescriptions and refills.  It is used
	;;^DD(356,.1,1,1,"%D",2,0)
	;;=to ensure that only 1 entry for each refill is created.
	;;^DD(356,.1,1,1,"DT")
	;;=2930813
	;;^DD(356,.1,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(356,.1,21,0)
	;;=^^4^4^2930813^
	;;^DD(356,.1,21,1,0)
	;;=This is the internal entry number of the refill, it will have an
	;;^DD(356,.1,21,2,0)
	;;=input and output transform to make it look like its a date.  The
	;;^DD(356,.1,21,3,0)
	;;=system will store the number value.
	;;^DD(356,.1,21,4,0)
	;;= 
	;;^DD(356,.1,"DT")
	;;=2930813
	;;^DD(356,.11,0)
	;;=INITIAL BILL NUMBER^P399'^DGCR(399,^0;11^Q
	;;^DD(356,.11,1,0)
	;;=^.1^^-1
	;;^DD(356,.11,1,1,0)
	;;=356^E
	;;^DD(356,.11,1,1,1)
	;;=S ^IBT(356,"E",$E(X,1,30),DA)=""
	;;^DD(356,.11,1,1,2)
	;;=K ^IBT(356,"E",$E(X,1,30),DA)
	;;^DD(356,.11,1,1,"DT")
	;;=2930712
	;;^DD(356,.11,1,2,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,.11,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) X ^DD(356,.11,1,2,1.4)
	;;^DD(356,.11,1,2,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.11,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) X ^DD(356,.11,1,2,2.4)
	;;^DD(356,.11,1,2,2.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.11,1,2,"%D",0)
	;;=^^1^1^2930827^^
	;;^DD(356,.11,1,2,"%D",1,0)
	;;=Re-sets Earliest Auto Bill Date each time Initial Bill Number is modified.
	;;^DD(356,.11,1,2,"CREATE VALUE")
	;;=S X=$$BILL^IBTUTL(DA)
	;;^DD(356,.11,1,2,"DELETE VALUE")
	;;=S X=$$BILL^IBTUTL(DA)
	;;^DD(356,.11,1,2,"DT")
	;;=2930825
	;;^DD(356,.11,1,2,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,.11,5,1,0)
	;;=356.399^.02^3
	;;^DD(356,.11,9)
	;;=^
	;;^DD(356,.11,21,0)
	;;=^^3^3^2940213^^^^
	;;^DD(356,.11,21,1,0)
	;;=This is the bill number in the BILL/CLAIMS file for the initial
	;;^DD(356,.11,21,2,0)
	;;=bill number for this entry.  It is the bill to the third
	;;^DD(356,.11,21,3,0)
	;;=party for this claim.
	;;^DD(356,.11,"DT")
	;;=2930825
	;;^DD(356,.12,0)
	;;=OTHER TYPE OF BILL^S^1:TORT FEASOR;2:FEDERAL OWCP;3:WORKMAN'S COMP;4:OTHER;^0;12^Q
	;;^DD(356,.12,1,0)
	;;=^.1
	;;^DD(356,.12,1,1,0)
	;;=356^AC
	;;^DD(356,.12,1,1,1)
	;;=S ^IBT(356,"AC",$E(X,1,30),DA)=""
	;;^DD(356,.12,1,1,2)
	;;=K ^IBT(356,"AC",$E(X,1,30),DA)
	;;^DD(356,.12,1,1,"DT")
	;;=2930712
	;;^DD(356,.12,1,2,0)
	;;=356^ASPC^MUMPS
	;;^DD(356,.12,1,2,1)
	;;=S:$P(^IBT(356,DA,0),U,2) ^IBT(356,"ASPC",+$P(^(0),U,2),X,DA)=""
	;;^DD(356,.12,1,2,2)
	;;=K ^IBT(356,"ASPC",+$P(^IBT(356,DA,0),U,2),X,DA)
	;;^DD(356,.12,1,2,"%D",0)
	;;=^^1^1^2930820^^^
	;;^DD(356,.12,1,2,"%D",1,0)
	;;=Cross reference of special types of bills by patient.
	;;^DD(356,.12,1,2,"DT")
	;;=2930712
	;;^DD(356,.12,1,3,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,.12,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI05G
IBINI05G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.12,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) X ^DD(356,.12,1,3,2.4)
	;;^DD(356,.12,1,3,2.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.12,1,3,"%D",0)
	;;=^^4^4^2940213^^^
	;;^DD(356,.12,1,3,"%D",1,0)
	;;=Deletes the Earliest Auto Bill Date (.17) if an Other Type of Bill is
	;;^DD(356,.12,1,3,"%D",2,0)
	;;=entered, the event may need a rate type other than reimbursable ins.
	;;^DD(356,.12,1,3,"%D",3,0)
	;;=and therefore should not be billed by the automated biller.
	;;^DD(356,.12,1,3,"%D",4,0)
	;;=Re-sets EABD if Other Type of Bill is deleted.
	;;^DD(356,.12,1,3,"CREATE VALUE")
	;;=@
	;;^DD(356,.12,1,3,"DELETE VALUE")
	;;=S X=$$BILL^IBTUTL(DA)
	;;^DD(356,.12,1,3,"DT")
	;;=2930824
	;;^DD(356,.12,1,3,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,.12,21,0)
	;;=^^4^4^2940213^^^^
	;;^DD(356,.12,21,1,0)
	;;=If this claims tracking entry can be billed as other than an insurance
	;;^DD(356,.12,21,2,0)
	;;=claim or a patient bill enter the type of claim.  If a patient has
	;;^DD(356,.12,21,3,0)
	;;=ever had a claim type other than insurance then special warnings may
	;;^DD(356,.12,21,4,0)
	;;=be given in the billing and claims tracking package.
	;;^DD(356,.12,"DT")
	;;=2930824
	;;^DD(356,.14,0)
	;;=SECOND OPINION REQUIRED^S^1:YES;0:NO;^0;14^Q
	;;^DD(356,.14,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,.14,21,1,0)
	;;=If this patient insurance policy requires a second opinion enter 'YES'.
	;;^DD(356,.14,21,2,0)
	;;=If a second opinion is not required then enter 'NO'.
	;;^DD(356,.14,"DT")
	;;=2930609
	;;^DD(356,.15,0)
	;;=SECOND OPINION OBTAINED^S^1:YES;0:NO;^0;15^Q
	;;^DD(356,.15,3)
	;;=
	;;^DD(356,.15,21,0)
	;;=^^8^8^2940213^^
	;;^DD(356,.15,21,1,0)
	;;=If a second opinion was required by this patients' insurance policy,
	;;^DD(356,.15,21,2,0)
	;;=enter 'YES' if it was obtained or 'NO' if it was not obtained.  If
	;;^DD(356,.15,21,3,0)
	;;=a second opinion was obtained but did not meet the insurance companies
	;;^DD(356,.15,21,4,0)
	;;=criteria for any reason, enter 'NO'.
	;;^DD(356,.15,21,5,0)
	;;= 
	;;^DD(356,.15,21,6,0)
	;;=This field will be used to help determine the estimated reimbursement
	;;^DD(356,.15,21,7,0)
	;;=from the insurance carrier.  If a second opinion was not obtained
	;;^DD(356,.15,21,8,0)
	;;=certain denials and penalties may be assessed.
	;;^DD(356,.15,"DT")
	;;=2930609
	;;^DD(356,.17,0)
	;;=EARLIEST AUTO BILL DATE^D^^0;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356,.17,1,0)
	;;=^.1
	;;^DD(356,.17,1,1,0)
	;;=356^ABD
	;;^DD(356,.17,1,1,1)
	;;=S ^IBT(356,"ABD",$E(X,1,30),DA)=""
	;;^DD(356,.17,1,1,2)
	;;=K ^IBT(356,"ABD",$E(X,1,30),DA)
	;;^DD(356,.17,1,1,"%D",0)
	;;=^^1^1^2930709^
	;;^DD(356,.17,1,1,"%D",1,0)
	;;=Regular cross reference of auto bill date field.
	;;^DD(356,.17,1,1,"DT")
	;;=2930709
	;;^DD(356,.17,1,2,0)
	;;=356^ATOBIL1^MUMPS
	;;^DD(356,.17,1,2,1)
	;;=S:$P(^IBT(356,DA,0),U,2)&($P(^(0),U,18)) ^IBT(356,"ATOBIL",+$P(^(0),U,2),+$P(^(0),U,18),+X,DA)=""
	;;^DD(356,.17,1,2,2)
	;;=K ^IBT(356,"ATOBIL",+$P(^IBT(356,DA,0),U,2),+$P(^(0),U,18),+X,DA)
	;;^DD(356,.17,1,2,"%D",0)
	;;=^^3^3^2930824^^
	;;^DD(356,.17,1,2,"%D",1,0)
	;;=Cross-reference of all billable, non-billed events by patient, event type,
	;;^DD(356,.17,1,2,"%D",2,0)
	;;=and earliest auto bill date.  Only events with entries in this x-ref
	;;^DD(356,.17,1,2,"%D",3,0)
	;;=will be considered for inclusion on a bill by the automated biller.

IBINI05H
IBINI05H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.17,1,2,"DT")
	;;=2930824
	;;^DD(356,.17,3)
	;;=Enter the date the autobiller will first try and create a bill for this visit.  Delete this date if the visit is not billable.
	;;^DD(356,.17,5,1,0)
	;;=356^.18^3
	;;^DD(356,.17,5,2,0)
	;;=356^1.01^1
	;;^DD(356,.17,5,3,0)
	;;=356^.11^2
	;;^DD(356,.17,5,4,0)
	;;=356^.12^3
	;;^DD(356,.17,5,5,0)
	;;=356^.19^3
	;;^DD(356,.17,5,6,0)
	;;=356^.2^2
	;;^DD(356,.17,21,0)
	;;=^^15^15^2940213^^^^
	;;^DD(356,.17,21,1,0)
	;;=This is the earliest date that this visit can be automatically billed.
	;;^DD(356,.17,21,2,0)
	;;=The automatic billing software will use this date when searching for events
	;;^DD(356,.17,21,3,0)
	;;=to bill.  All events with an Earliest Auto Bill Date on or before the run
	;;^DD(356,.17,21,4,0)
	;;=date of the automatic biller will be considered for inclusion on a bill.
	;;^DD(356,.17,21,5,0)
	;;= 
	;;^DD(356,.17,21,6,0)
	;;=This field may be set in one of two ways.  If AUTOMATE BILLING is on for
	;;^DD(356,.17,21,7,0)
	;;=the Event Type then this field will be automatically set when apparently
	;;^DD(356,.17,21,8,0)
	;;=billable events are added to the claims tracking module.
	;;^DD(356,.17,21,9,0)
	;;=This field can also be directly set by a user, AUTOMATE BILLING does not
	;;^DD(356,.17,21,10,0)
	;;=need to be on for the Event Type.  When the automated biller runs it will
	;;^DD(356,.17,21,11,0)
	;;=attempt to add the event to a bill.
	;;^DD(356,.17,21,12,0)
	;;= 
	;;^DD(356,.17,21,13,0)
	;;=This date should be deleted if the event turns out not to be suitable for
	;;^DD(356,.17,21,14,0)
	;;=a reimbursable insurance bill.  This field will automatically be deleted
	;;^DD(356,.17,21,15,0)
	;;=if the event is added to a bill or a reason not-billable is entered.
	;;^DD(356,.17,22)
	;;=
	;;^DD(356,.17,23,0)
	;;=^^13^13^2940213^^^^
	;;^DD(356,.17,23,1,0)
	;;=If and only if this field is set will the event be considered by the 
	;;^DD(356,.17,23,2,0)
	;;=automatic biller.  This will be set to the date the event was entered
	;;^DD(356,.17,23,3,0)
	;;=into claims tracking plus the number of days delay for the event type.
	;;^DD(356,.17,23,4,0)
	;;= 
	;;^DD(356,.17,23,5,0)
	;;=Setting of this field may be automatic, ie. all by triggers, if automated
	;;^DD(356,.17,23,6,0)
	;;=billing is turned on for the event type.  Initially set by triggers on
	;;^DD(356,.17,23,7,0)
	;;=Event  Type (.18) and Date Entered (1.01).
	;;^DD(356,.17,23,8,0)
	;;= 
	;;^DD(356,.17,23,9,0)
	;;=This may also be set by user.
	;;^DD(356,.17,23,10,0)
	;;= 
	;;^DD(356,.17,23,11,0)
	;;=There is no checking to determine if the event is actually billable when
	;;^DD(356,.17,23,12,0)
	;;=the date is added.  Instead, if one of the fields that makes an event not
	;;^DD(356,.17,23,13,0)
	;;=billable is entered this field is deleted.
	;;^DD(356,.17,"DT")
	;;=2930824
	;;^DD(356,.18,0)
	;;=EVENT TYPE^P356.6'^IBE(356.6,^0;18^Q
	;;^DD(356,.18,1,0)
	;;=^.1
	;;^DD(356,.18,1,1,0)
	;;=356^EVNT
	;;^DD(356,.18,1,1,1)
	;;=S ^IBT(356,"EVNT",$E(X,1,30),DA)=""
	;;^DD(356,.18,1,1,2)
	;;=K ^IBT(356,"EVNT",$E(X,1,30),DA)
	;;^DD(356,.18,1,1,"DT")
	;;=2930820
	;;^DD(356,.18,1,2,0)
	;;=356^ANABD3^MUMPS
	;;^DD(356,.18,1,2,1)
	;;=S:$P(^IBT(356,DA,0),U,20)&($P(^(0),U,19)="")&($P(^(0),"^",17)) ^IBT(356,"ANABD",X,$P(^(0),U,17),DA)=""
	;;^DD(356,.18,1,2,2)
	;;=K ^IBT(356,"ANABD",X,+$P(^IBT(356,DA,0),U,17),DA)
	;;^DD(356,.18,1,2,"%D",0)
	;;=^^2^2^2930709^
	;;^DD(356,.18,1,2,"%D",1,0)
	;;=Cross reference of all active, billable events by event type and next
	;;^DD(356,.18,1,2,"%D",2,0)
	;;=auto bill date.

IBINI05I
IBINI05I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.18,1,2,"DT")
	;;=2930709
	;;^DD(356,.18,1,3,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,.18,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y X ^DD(356,.18,1,3,1.1) X ^DD(356,.18,1,3,1.4)
	;;^DD(356,.18,1,3,1.1)
	;;=S X=DIV S X=$$EABD^IBTUTL($P($G(^IBT(356,+DA,0)),U,18),+$G(^IBT(356,+DA,1)))
	;;^DD(356,.18,1,3,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.18,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.18,1,3,"%D",0)
	;;=^^2^2^2930824^^
	;;^DD(356,.18,1,3,"%D",1,0)
	;;=Sets the Earliest Auto Bill Date whenever Event Type is set.  Does not
	;;^DD(356,.18,1,3,"%D",2,0)
	;;=check if event is billable.
	;;^DD(356,.18,1,3,"CREATE VALUE")
	;;=S X=$$EABD^IBTUTL($P($G(^IBT(356,+DA,0)),U,18),+$G(^IBT(356,+DA,1)))
	;;^DD(356,.18,1,3,"DELETE VALUE")
	;;=@
	;;^DD(356,.18,1,3,"DT")
	;;=2930824
	;;^DD(356,.18,1,3,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,.18,1,4,0)
	;;=356^APTY2^MUMPS
	;;^DD(356,.18,1,4,1)
	;;=S:$P(^IBT(356,DA,0),U,2)&($P(^(0),U,6)) ^IBT(356,"APTY",+$P(^(0),U,2),X,+$P(^(0),U,6),DA)=""
	;;^DD(356,.18,1,4,2)
	;;=K ^IBT(356,"APTY",+$P(^IBT(356,DA,0),U,2),X,+$P(^(0),U,6),DA)
	;;^DD(356,.18,1,4,"%D",0)
	;;=^^1^1^2930809^
	;;^DD(356,.18,1,4,"%D",1,0)
	;;=Cross-reference of all entries by patient by event type, by episode date.
	;;^DD(356,.18,1,4,"DT")
	;;=2930809
	;;^DD(356,.18,1,5,0)
	;;=^^TRIGGER^356^.07
	;;^DD(356,.18,1,5,1)
	;;=X ^DD(356,.18,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X=$$ADT^IBTRE0(DA) X ^DD(356,.18,1,5,1.4)
	;;^DD(356,.18,1,5,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(356,.07,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,7)_":",2),$C(59),1)=""
	;;^DD(356,.18,1,5,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=356,DIG=.07 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.18,1,5,2)
	;;=Q
	;;^DD(356,.18,1,5,"%D",0)
	;;=^^1^1^2931008^
	;;^DD(356,.18,1,5,"%D",1,0)
	;;= 
	;;^DD(356,.18,1,5,"CREATE CONDITION")
	;;=#.07=""
	;;^DD(356,.18,1,5,"CREATE VALUE")
	;;=S X=$$ADT^IBTRE0(DA)
	;;^DD(356,.18,1,5,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356,.18,1,5,"DT")
	;;=2931008
	;;^DD(356,.18,1,5,"FIELD")
	;;=#.07
	;;^DD(356,.18,21,0)
	;;=^^15^15^2940118^^^^
	;;^DD(356,.18,21,1,0)
	;;=This is the type of event that is being tracked.  This field
	;;^DD(356,.18,21,2,0)
	;;=is automatically stored when an entry is created.  Scheduled admissions
	;;^DD(356,.18,21,3,0)
	;;=are tracked to allow for precertification reviews.  When an admission
	;;^DD(356,.18,21,4,0)
	;;=occurs within 7 days of a scheduled admission the scheduled admission will
	;;^DD(356,.18,21,5,0)
	;;=be updated to an inpatient care event type automatically.
	;;^DD(356,.18,21,6,0)
	;;= 
	;;^DD(356,.18,21,7,0)
	;;=Choose an event type of Scheduled Admission only for future scheduled
	;;^DD(356,.18,21,8,0)
	;;=admissions and choose an event type of admission for past admissions.
	;;^DD(356,.18,21,9,0)
	;;=If you are using the scheduled admissions portion of the MAS package
	;;^DD(356,.18,21,10,0)
	;;=then scheduled admissions will automatically be added to claims tracking
	;;^DD(356,.18,21,11,0)
	;;=7 days before the scheduled admission and automatically converted to 

IBINI05J
IBINI05J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.18,21,12,0)
	;;=an event type of admission after the patient has been admitted.
	;;^DD(356,.18,21,13,0)
	;;= 
	;;^DD(356,.18,21,14,0)
	;;=For admissions you will be able to specify the type of admission in
	;;^DD(356,.18,21,15,0)
	;;=another field.
	;;^DD(356,.18,"DT")
	;;=2931008
	;;^DD(356,.19,0)
	;;=REASON NOT BILLABLE^P356.8'^IBE(356.8,^0;19^Q
	;;^DD(356,.19,.1)
	;;=NOT BILLABLE REASON
	;;^DD(356,.19,1,0)
	;;=^.1
	;;^DD(356,.19,1,1,0)
	;;=356^AR
	;;^DD(356,.19,1,1,1)
	;;=S ^IBT(356,"AR",$E(X,1,30),DA)=""
	;;^DD(356,.19,1,1,2)
	;;=K ^IBT(356,"AR",$E(X,1,30),DA)
	;;^DD(356,.19,1,1,"%D",0)
	;;=^^1^1^2930709^
	;;^DD(356,.19,1,1,"%D",1,0)
	;;=Regular cross reference of reason not billable
	;;^DD(356,.19,1,1,"DT")
	;;=2930709
	;;^DD(356,.19,1,2,0)
	;;=356^ANABD1^MUMPS
	;;^DD(356,.19,1,2,1)
	;;=K:X ^IBT(356,"ANABD",+$P(^IBT(356,DA,0),U,18),+$P(^(0),U,17),DA)
	;;^DD(356,.19,1,2,2)
	;;=S:$P(^IBT(356,DA,0),U,20)&($P(^(0),U,17))&($P(^(0),U,18)) ^IBT(356,"ANABD",$P(^(0),U,18),$P(^(0),U,17),DA)=""
	;;^DD(356,.19,1,2,"%D",0)
	;;=^^2^2^2930709^
	;;^DD(356,.19,1,2,"%D",1,0)
	;;=Cross reference of all active, billable events by event type and next
	;;^DD(356,.19,1,2,"%D",2,0)
	;;=auto bill date.
	;;^DD(356,.19,1,2,"DT")
	;;=2930709
	;;^DD(356,.19,1,3,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,.19,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.19,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) X ^DD(356,.19,1,3,2.4)
	;;^DD(356,.19,1,3,2.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.19,1,3,"%D",0)
	;;=^^2^2^2930824^
	;;^DD(356,.19,1,3,"%D",1,0)
	;;=Deletes the Earliest Auto Bill Date (.17) when Reason Not Billable is set,
	;;^DD(356,.19,1,3,"%D",2,0)
	;;=event is no longer billable.  Re-sets EABD if Reason Not Billable is deleted.
	;;^DD(356,.19,1,3,"CREATE VALUE")
	;;=@
	;;^DD(356,.19,1,3,"DELETE VALUE")
	;;=S X=$$BILL^IBTUTL(DA)
	;;^DD(356,.19,1,3,"DT")
	;;=2930824
	;;^DD(356,.19,1,3,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,.19,21,0)
	;;=^^6^6^2930712^^^
	;;^DD(356,.19,21,1,0)
	;;=Enter the primary reason this episode of care should not be billed to
	;;^DD(356,.19,21,2,0)
	;;=an insurance company.
	;;^DD(356,.19,21,3,0)
	;;= 
	;;^DD(356,.19,21,4,0)
	;;=If a reason not billable is entered, then this episode will no longer
	;;^DD(356,.19,21,5,0)
	;;=appear on reports as billable and will not be used by the automated
	;;^DD(356,.19,21,6,0)
	;;=biller as a billable event.
	;;^DD(356,.19,"DT")
	;;=2930824
	;;^DD(356,.2,0)
	;;=INACTIVE^S^0:INACTIVE;1:ACTIVE;^0;20^Q
	;;^DD(356,.2,1,0)
	;;=^.1
	;;^DD(356,.2,1,1,0)
	;;=356^ANABD2^MUMPS
	;;^DD(356,.2,1,1,1)
	;;=S:X&($P(^IBT(356,DA,0),U,19)="")&($P(^(0),U,18))&($P(^(0),U,17)) ^IBT(356,"ANABD",$P(^(0),U,18),$P(^(0),U,17),DA)=""
	;;^DD(356,.2,1,1,2)
	;;=K ^IBT(356,"ANABD",+$P(^IBT(356,DA,0),U,18),+$P(^(0),U,17),DA)
	;;^DD(356,.2,1,1,"%D",0)
	;;=^^2^2^2930709^^^^
	;;^DD(356,.2,1,1,"%D",1,0)
	;;=Cross reference of all active, billable events by event type and next
	;;^DD(356,.2,1,1,"%D",2,0)
	;;=auto bill date.
	;;^DD(356,.2,1,1,"DT")
	;;=2930709
	;;^DD(356,.2,1,2,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,.2,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=$$BILL^IBTUTL(DA) X ^DD(356,.2,1,2,1.4)

IBINI05K
IBINI05K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.2,1,2,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.2,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,.2,1,2,"%D",0)
	;;=^^1^1^2930824^
	;;^DD(356,.2,1,2,"%D",1,0)
	;;=Re-sets Earliest Auto Bill Date whenever Status is modified.
	;;^DD(356,.2,1,2,"CREATE VALUE")
	;;=S X=$$BILL^IBTUTL(DA)
	;;^DD(356,.2,1,2,"DELETE VALUE")
	;;=@
	;;^DD(356,.2,1,2,"DT")
	;;=2930824
	;;^DD(356,.2,1,2,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,.2,21,0)
	;;=^^6^6^2930826^^^^
	;;^DD(356,.2,21,1,0)
	;;=An entry is automatically inactived if the parent event that is being
	;;^DD(356,.2,21,2,0)
	;;=tracked is either deleted or edited so that it no longer is a valid tracking
	;;^DD(356,.2,21,3,0)
	;;=entry.
	;;^DD(356,.2,21,4,0)
	;;= 
	;;^DD(356,.2,21,5,0)
	;;=Inactivating an entry has the same affect as deleting an entry except that
	;;^DD(356,.2,21,6,0)
	;;=the activity is left as a history.
	;;^DD(356,.2,"DT")
	;;=2930826
	;;^DD(356,.21,0)
	;;=ESTIMATED INS. PAYMENT (PRI)^NJ10,2^^0;21^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(356,.21,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(356,.21,21,0)
	;;=^^2^2^2930712^^
	;;^DD(356,.21,21,1,0)
	;;=This is the estimated amount that the primary insurance carrier is expected
	;;^DD(356,.21,21,2,0)
	;;=to pay on this claim.
	;;^DD(356,.21,"DT")
	;;=2930712
	;;^DD(356,.22,0)
	;;=ESTIMATED INS. PAYMENT (SEC)^NJ10,2^^0;22^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(356,.22,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(356,.22,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,.22,21,1,0)
	;;=This the the estimated amount that the secondary insurance carrier is
	;;^DD(356,.22,21,2,0)
	;;=expected to pay on this claim.
	;;^DD(356,.22,"DT")
	;;=2930712
	;;^DD(356,.23,0)
	;;=ESTIMATED INS. PAYMENT (TER)^NJ10,2^^0;23^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(356,.23,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(356,.23,21,0)
	;;=^^2^2^2940213^^
	;;^DD(356,.23,21,1,0)
	;;=This is the estimated amount that the tertiary insurance carrier is
	;;^DD(356,.23,21,2,0)
	;;=expected to pay on this claim.
	;;^DD(356,.23,"DT")
	;;=2930712
	;;^DD(356,.24,0)
	;;=TRACKED AS INSURANCE CLAIM?^*S^1:YES;0:NO;^0;24^Q
	;;^DD(356,.24,.1)
	;;=INSURANCE CLAIM?
	;;^DD(356,.24,1,0)
	;;=^.1^^-1
	;;^DD(356,.24,1,1,0)
	;;=356^AI
	;;^DD(356,.24,1,1,1)
	;;=S ^IBT(356,"AI",$E(X,1,30),DA)=""
	;;^DD(356,.24,1,1,2)
	;;=K ^IBT(356,"AI",$E(X,1,30),DA)
	;;^DD(356,.24,1,1,"DT")
	;;=2930709
	;;^DD(356,.24,12)
	;;=Only patients who have active insurance for the episode
	;;^DD(356,.24,12.1)
	;;=S DIC("S")="I $S(Y=0:1,$$INSURED^IBCNS1($P(^IBT(356,DA,0),U,2),$P(^(0),U,6)):1,1:0)"
	;;^DD(356,.24,21,0)
	;;=^^5^5^2930804^^^
	;;^DD(356,.24,21,1,0)
	;;=Enter 'YES' if the patient is insured for this event.  Enter 'No' if 
	;;^DD(356,.24,21,2,0)
	;;=the patient is not insured for this event.  If this event is not
	;;^DD(356,.24,21,3,0)
	;;=tracked as an insurance claim, the field REASON NOT BILLABLE will
	;;^DD(356,.24,21,4,0)
	;;=automatically have entered "NOT INSURED" if it is not otherwise
	;;^DD(356,.24,21,5,0)
	;;=entered.
	;;^DD(356,.24,"DT")
	;;=2930827
	;;^DD(356,.25,0)
	;;=TRACKED AS RANDOM SAMPLE?^S^1:YES;0:NO;^0;25^Q

IBINI05L
IBINI05L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.25,.1)
	;;=RANDOM SAMPLE?
	;;^DD(356,.25,3)
	;;=
	;;^DD(356,.25,21,0)
	;;=^^7^7^2930712^
	;;^DD(356,.25,21,1,0)
	;;=Enter if this is to be tracked as a Random Sample for UR purposes.  The
	;;^DD(356,.25,21,2,0)
	;;=Claims tracking module is designed to flag one admission per week
	;;^DD(356,.25,21,3,0)
	;;=each from the 3 major bedsections, Medicine, Surgery, and Psychiatry,
	;;^DD(356,.25,21,4,0)
	;;=as a random sample that is to have utilization review follow-up.  If
	;;^DD(356,.25,21,5,0)
	;;=there is not sufficient activity in your facility for the automated
	;;^DD(356,.25,21,6,0)
	;;=tracker to set up the minimum random sample, then you may manually
	;;^DD(356,.25,21,7,0)
	;;=add entires to be tracked for UR purposes.
	;;^DD(356,.25,"DT")
	;;=2930712
	;;^DD(356,.26,0)
	;;=TRACKED AS SPECIAL CONDITION^S^1:TURP;2:COPD;3:CVD;0:NONE;^0;26^Q
	;;^DD(356,.26,.1)
	;;=SPECIAL CONDITION?
	;;^DD(356,.26,3)
	;;=
	;;^DD(356,.26,21,0)
	;;=^^8^8^2940124^^^^
	;;^DD(356,.26,21,1,0)
	;;=If you are tracking special conditions for follow up by UR then
	;;^DD(356,.26,21,2,0)
	;;=indicate that this is a special condition UR case and UR will be
	;;^DD(356,.26,21,3,0)
	;;=required and the information about this case will appear on special
	;;^DD(356,.26,21,4,0)
	;;=condition reports.
	;;^DD(356,.26,21,5,0)
	;;= 
	;;^DD(356,.26,21,6,0)
	;;=The choices are:   TURP -- Transurethral Prostatectomy
	;;^DD(356,.26,21,7,0)
	;;=                   COPD -- Chronic Obstructive Pulmonary Disease
	;;^DD(356,.26,21,8,0)
	;;=                   CVD  -- Cerebrovascular Disease
	;;^DD(356,.26,"DT")
	;;=2940124
	;;^DD(356,.27,0)
	;;=TRACKED AS A LOCAL ADDITION?^S^1:YES;0:NO;^0;27^Q
	;;^DD(356,.27,.1)
	;;=LOCAL ADDITION?
	;;^DD(356,.27,3)
	;;=
	;;^DD(356,.27,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,.27,21,1,0)
	;;=If this is being track as a local addition for UR purposes then
	;;^DD(356,.27,21,2,0)
	;;=enter 'YES'.
	;;^DD(356,.27,"DT")
	;;=2930624
	;;^DD(356,.28,0)
	;;=ESTIMATED MT CHARGES^NJ10,2^^0;28^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(356,.28,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(356,.28,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,.28,21,1,0)
	;;=Enter the estimated amount of Means Test copayment charges that
	;;^DD(356,.28,21,2,0)
	;;=are to be paid by the patient for this case.
	;;^DD(356,.28,"DT")
	;;=2930712
	;;^DD(356,.29,0)
	;;=ESTIMATED TOTAL CHARGES^NJ10,2^^0;29^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(356,.29,3)
	;;=Type a Dollar Amount between 0 and 9999999, 2 Decimal Digits
	;;^DD(356,.29,21,0)
	;;=^^8^8^2940213^^
	;;^DD(356,.29,21,1,0)
	;;=Enter the estimated total charges from this case.  This is the estimated
	;;^DD(356,.29,21,2,0)
	;;=total amount due the government.  
	;;^DD(356,.29,21,3,0)
	;;= 
	;;^DD(356,.29,21,4,0)
	;;=The total estimated charges minus the estimated payments from all sources
	;;^DD(356,.29,21,5,0)
	;;=will be the amount not anticipated to be reimbursed from this case.
	;;^DD(356,.29,21,6,0)
	;;=Comparing estimated receipt versus the actual amount received will
	;;^DD(356,.29,21,7,0)
	;;=help determine if all payers have sufficiently re-imbursed the 
	;;^DD(356,.29,21,8,0)
	;;=government.
	;;^DD(356,.29,"DT")
	;;=2930712
	;;^DD(356,.3,0)
	;;=ADMITTING REASON (ICD-9)^*P356.9'^IBT(356.9,^0;30^S DIC("S")="I $P(^(0),U,4)=3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356,.3,12)
	;;=Must be the admitting diagnosis for this admission movement.
	;;^DD(356,.3,12.1)
	;;=S DIC("S")="I $P(^(0),U,4)=3"
	;;^DD(356,.3,21,0)
	;;=^^1^1^2930901^^

IBINI05M
IBINI05M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,.3,21,1,0)
	;;=This is the ICD9 diagnosis code for the admitting diagnosis.
	;;^DD(356,.3,"DT")
	;;=2930901
	;;^DD(356,.31,0)
	;;=SPECIAL CONSENT ROI^S^1:NOT REQUIRED;2:OBTAINED;3:REQUIRED;4:REFUSED;^0;31^Q
	;;^DD(356,.31,21,0)
	;;=^^9^9^2930820^^
	;;^DD(356,.31,21,1,0)
	;;=Enter whether or not a special consent release of information 
	;;^DD(356,.31,21,2,0)
	;;=form for this patient for this
	;;^DD(356,.31,21,3,0)
	;;=episode of care is required, obtained, or not necessary.  If ROI is
	;;^DD(356,.31,21,4,0)
	;;=required but not obtained, certain clinical information may not be
	;;^DD(356,.31,21,5,0)
	;;=released to Insurance carriers.  This will affect contacts with
	;;^DD(356,.31,21,6,0)
	;;=insurance companies and bill preparation.
	;;^DD(356,.31,21,7,0)
	;;= 
	;;^DD(356,.31,21,8,0)
	;;=Generally a special consent is required if the patient has or was treated
	;;^DD(356,.31,21,9,0)
	;;=for Drug and Alcohol, HIV, and sickle cell anemia.
	;;^DD(356,.31,"DT")
	;;=2930824
	;;^DD(356,.32,0)
	;;=SCHEDULED ADMISSION^*P41.1'^DGS(41.1,^0;32^S DIC("S")="I +^(0)=$P(^IBT(356,DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356,.32,1,0)
	;;=^.1
	;;^DD(356,.32,1,1,0)
	;;=356^ASCH
	;;^DD(356,.32,1,1,1)
	;;=S ^IBT(356,"ASCH",$E(X,1,30),DA)=""
	;;^DD(356,.32,1,1,2)
	;;=K ^IBT(356,"ASCH",$E(X,1,30),DA)
	;;^DD(356,.32,1,1,"%D",0)
	;;=^^1^1^2930809^
	;;^DD(356,.32,1,1,"%D",1,0)
	;;=Regular index of scheduled admissions
	;;^DD(356,.32,1,1,"DT")
	;;=2930809
	;;^DD(356,.32,12)
	;;=You can only select scheduled admissions for the same patient.
	;;^DD(356,.32,12.1)
	;;=S DIC("S")="I +^(0)=$P(^IBT(356,DA,0),U,2)"
	;;^DD(356,.32,21,0)
	;;=^^7^7^2930809^
	;;^DD(356,.32,21,1,0)
	;;=If this claims tracking entry is for a scheduled admission, this is
	;;^DD(356,.32,21,2,0)
	;;=the scheduled admission.
	;;^DD(356,.32,21,3,0)
	;;= 
	;;^DD(356,.32,21,4,0)
	;;=This field points to the entry in the Scheduled Admissions file that
	;;^DD(356,.32,21,5,0)
	;;=is being tracked.  When this scheduled admission is acutally admitted,
	;;^DD(356,.32,21,6,0)
	;;=it will be converted to an inpatient admission tracking record 
	;;^DD(356,.32,21,7,0)
	;;=automatically.
	;;^DD(356,.32,"DT")
	;;=2930809
	;;^DD(356,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356,1.01,1,0)
	;;=^.1
	;;^DD(356,1.01,1,1,0)
	;;=^^TRIGGER^356^.17
	;;^DD(356,1.01,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y X ^DD(356,1.01,1,1,1.1) X ^DD(356,1.01,1,1,1.4)
	;;^DD(356,1.01,1,1,1.1)
	;;=S X=DIV S X=$$EABD^IBTUTL($P($G(^IBT(356,+DA,0)),U,18),+$G(^IBT(356,+DA,1)))
	;;^DD(356,1.01,1,1,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,1.01,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X="" S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,17)=DIV,DIH=356,DIG=.17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356,1.01,1,1,"%D",0)
	;;=^^2^2^2930824^^
	;;^DD(356,1.01,1,1,"%D",1,0)
	;;=Sets the Earliest Auto Bill Date whenever Date Entered is set.  Does
	;;^DD(356,1.01,1,1,"%D",2,0)
	;;=not check if event is billable.
	;;^DD(356,1.01,1,1,"CREATE VALUE")
	;;=S X=$$EABD^IBTUTL($P($G(^IBT(356,+DA,0)),U,18),+$G(^IBT(356,+DA,1)))
	;;^DD(356,1.01,1,1,"DELETE VALUE")
	;;=@
	;;^DD(356,1.01,1,1,"FIELD")
	;;=EARLIEST AUTO BILL DATE
	;;^DD(356,1.01,3)
	;;=
	;;^DD(356,1.01,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,1.01,21,1,0)
	;;=Enter the date that this entry was created.  This will usually be the

IBINI05N
IBINI05N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356,1.01,21,2,0)
	;;=date that the automated tracker created this entry on.
	;;^DD(356,1.01,"DT")
	;;=2930824
	;;^DD(356,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(356,1.02,3)
	;;=
	;;^DD(356,1.02,21,0)
	;;=^^2^2^2930712^
	;;^DD(356,1.02,21,1,0)
	;;=Enter the name of the user who first created this entry.  This is 
	;;^DD(356,1.02,21,2,0)
	;;=most important if this entry was not created by the automated tracker.
	;;^DD(356,1.02,"DT")
	;;=2930609
	;;^DD(356,1.03,0)
	;;=DATE LAST EDITED^D^^1;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356,1.03,21,0)
	;;=^^1^1^2930712^
	;;^DD(356,1.03,21,1,0)
	;;=Enter the date that this claim was last edited.
	;;^DD(356,1.03,"DT")
	;;=2930706
	;;^DD(356,1.04,0)
	;;=LAST EDITED BY^P200'^VA(200,^1;4^Q
	;;^DD(356,1.04,21,0)
	;;=^^1^1^2930719^^
	;;^DD(356,1.04,21,1,0)
	;;=Enter the user who last edited this claim tracking entry.
	;;^DD(356,1.04,"DT")
	;;=2930609
	;;^DD(356,1.05,0)
	;;=HOSPITAL REVIEWS ASSIGNED TO^P200'^VA(200,^1;5^Q
	;;^DD(356,1.05,21,0)
	;;=^^6^6^2940213^^^^
	;;^DD(356,1.05,21,1,0)
	;;=Enter the UR person that this case is assigned to if it is assigned to
	;;^DD(356,1.05,21,2,0)
	;;=an individual for hospital Reviews.
	;;^DD(356,1.05,21,3,0)
	;;= 
	;;^DD(356,1.05,21,4,0)
	;;=Cases may be assigned for an individual to follow for the length of their
	;;^DD(356,1.05,21,5,0)
	;;=admission.  If viewing pending work by who it is assigned to then this
	;;^DD(356,1.05,21,6,0)
	;;=field is used to sort the pending work.
	;;^DD(356,1.05,"DT")
	;;=2930825
	;;^DD(356,1.06,0)
	;;=INS. REVIEWS ASSIGNED TO^P200'^VA(200,^1;6^Q
	;;^DD(356,1.06,21,0)
	;;=^^6^6^2940213^^^
	;;^DD(356,1.06,21,1,0)
	;;=Enter the Insurance UR person that this case is assigned to if it 
	;;^DD(356,1.06,21,2,0)
	;;=is assigned to an individual for Insurance UR.
	;;^DD(356,1.06,21,3,0)
	;;= 
	;;^DD(356,1.06,21,4,0)
	;;=Cases may be assigned for an individual to follow for the length of their
	;;^DD(356,1.06,21,5,0)
	;;=admission.  If viewing pending work by who it is assigned to then this
	;;^DD(356,1.06,21,6,0)
	;;=field is used to sort the pending work.
	;;^DD(356,1.06,"DT")
	;;=2930825
	;;^DD(356,1.07,0)
	;;=FOLLOW-UP TYPE^S^1:NONE;2:ADMISSION NOTIFICATION;3:ADMISSION AND DISCHARGE NOTIFICATION;4:PRE-CERTIFICATION;5:PRE-CERT AND CONT. STAY;6:PRE-CERT AND DISCH.;7:PRE-CERT, CONT. STAY AND DISCH.;^1;7^Q
	;;^DD(356,1.07,21,0)
	;;=^^4^4^2940128^
	;;^DD(356,1.07,21,1,0)
	;;=Enter type of follow that the insurance company requires for this
	;;^DD(356,1.07,21,2,0)
	;;=visit.  This information will be used by the reports to determine
	;;^DD(356,1.07,21,3,0)
	;;=if the case requires pre-cert or not, or pre-cert and continued 
	;;^DD(356,1.07,21,4,0)
	;;=stay.
	;;^DD(356,1.07,"DT")
	;;=2940128
	;;^DD(356,1.08,0)
	;;=ADDITIONAL COMMENT^F^^1;8^K:$L(X)>80!($L(X)<3) X
	;;^DD(356,1.08,3)
	;;=If necessary, use this field for a brief additional explaination of why this case isn't billable.  Answer must be 3-80 characters in length.
	;;^DD(356,1.08,21,0)
	;;=^^2^2^2940128^
	;;^DD(356,1.08,21,1,0)
	;;=Enter any brief comment about this episode that may explain why
	;;^DD(356,1.08,21,2,0)
	;;=a case is not billable.
	;;^DD(356,1.08,"DT")
	;;=2940128

IBINI05O
IBINI05O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.1,0,"GL")
	;;=^IBT(356.1,
	;;^DIC("B","HOSPITAL REVIEW",356.1)
	;;=
	;;^DIC(356.1,"%D",0)
	;;=^^11^11^2940214^^^^
	;;^DIC(356.1,"%D",1,0)
	;;=This file contains Utilization Review information about appropriateness
	;;^DIC(356.1,"%D",2,0)
	;;=of admission and continued stay in an acute medical setting.  It uses
	;;^DIC(356.1,"%D",3,0)
	;;=the Interqual criteria for appropriateness.  An entry for each day of
	;;^DIC(356.1,"%D",4,0)
	;;=care for cases being tracked is required by the QM office in VACO.  The
	;;^DIC(356.1,"%D",5,0)
	;;=information in this file will be rolled up into a national data base.
	;;^DIC(356.1,"%D",6,0)
	;;=Only reviews that have a status of COMPLETE should be rolled up.
	;;^DIC(356.1,"%D",7,0)
	;;= 
	;;^DIC(356.1,"%D",8,0)
	;;=The information in this file is clinical in nature and should be treated
	;;^DIC(356.1,"%D",9,0)
	;;=with the same confidentiality as required of all clinical data.
	;;^DIC(356.1,"%D",10,0)
	;;= 
	;;^DIC(356.1,"%D",11,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.1,0)
	;;=FIELD^^.24^34
	;;^DD(356.1,0,"DT")
	;;=2930928
	;;^DD(356.1,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBT(356,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.1,0,"ID",.21)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(356.1,.21,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,21)_"":"",2),$C(59),1)")
	;;^DD(356.1,0,"ID",.22)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(356.11,+$P(^(0),U,22),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356.11,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.1,0,"IX","AC",356.1,.21)
	;;=
	;;^DD(356.1,0,"IX","AD",356.1,.22)
	;;=
	;;^DD(356.1,0,"IX","APEND",356.1,.2)
	;;=
	;;^DD(356.1,0,"IX","ASPC",356.1,.07)
	;;=
	;;^DD(356.1,0,"IX","ATIDT",356.1,.01)
	;;=
	;;^DD(356.1,0,"IX","ATIDT1",356.1,.02)
	;;=
	;;^DD(356.1,0,"IX","ATRTP",356.1,.22)
	;;=
	;;^DD(356.1,0,"IX","ATRTP1",356.1,.02)
	;;=
	;;^DD(356.1,0,"IX","B",356.1,.01)
	;;=
	;;^DD(356.1,0,"IX","C",356.1,.02)
	;;=
	;;^DD(356.1,0,"NM","HOSPITAL REVIEW")
	;;=
	;;^DD(356.1,0,"PT",356.1,.24)
	;;=
	;;^DD(356.1,0,"PT",356.2,.03)
	;;=
	;;^DD(356.1,.01,0)
	;;=REVIEW DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,.01,1,0)
	;;=^.1
	;;^DD(356.1,.01,1,1,0)
	;;=356.1^B
	;;^DD(356.1,.01,1,1,1)
	;;=S ^IBT(356.1,"B",$E(X,1,30),DA)=""
	;;^DD(356.1,.01,1,1,2)
	;;=K ^IBT(356.1,"B",$E(X,1,30),DA)
	;;^DD(356.1,.01,1,2,0)
	;;=356.1^ATIDT^MUMPS
	;;^DD(356.1,.01,1,2,1)
	;;=S:$P(^IBT(356.1,DA,0),U,2) ^IBT(356.1,"ATIDT",$P(^(0),U,2),-X,DA)=""
	;;^DD(356.1,.01,1,2,2)
	;;=K ^IBT(356.1,"ATIDT",+$P(^IBT(356.1,DA,0),U,2),-X,DA)
	;;^DD(356.1,.01,1,2,"%D",0)
	;;=^^2^2^2930714^
	;;^DD(356.1,.01,1,2,"%D",1,0)
	;;=Cross reference in inverse date order of all reviews for a tracking 
	;;^DD(356.1,.01,1,2,"%D",2,0)
	;;=entry.
	;;^DD(356.1,.01,1,2,"DT")
	;;=2930714
	;;^DD(356.1,.01,3)
	;;=
	;;^DD(356.1,.01,21,0)
	;;=^^13^13^2940213^^^^
	;;^DD(356.1,.01,21,1,0)
	;;=This is the date of the Review.  Normally, reviews are done for UR purposes
	;;^DD(356.1,.01,21,2,0)
	;;=on days 3, 6, 9, 14, 21, 28 and every 7 days thereafter.  This field
	;;^DD(356.1,.01,21,3,0)
	;;=contains the date of these reviews.
	;;^DD(356.1,.01,21,4,0)
	;;= 
	;;^DD(356.1,.01,21,5,0)
	;;=There are 2 related fields,  DAY FOR REVIEW, and DATE ENTERED.  The field
	;;^DD(356.1,.01,21,6,0)
	;;=DAY FOR REVIEW will generally be computed for you based on the REVIEW DATE.
	;;^DD(356.1,.01,21,7,0)
	;;=The DATE ENTERED is the date the review was entered into the computer and

IBINI05P
IBINI05P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.01,21,8,0)
	;;=is automatically generated for you.
	;;^DD(356.1,.01,21,9,0)
	;;= 
	;;^DD(356.1,.01,21,10,0)
	;;=Normally the REVIEW DATEs are done in order. The pre-cert or urgent
	;;^DD(356.1,.01,21,11,0)
	;;=admission review is done before the continued stay reviews which
	;;^DD(356.1,.01,21,12,0)
	;;=in turn are normally done before the Discharge review.  The order of
	;;^DD(356.1,.01,21,13,0)
	;;=reviews shown on the main review screen is based on REVIEW DATE.
	;;^DD(356.1,.01,"DT")
	;;=2930714
	;;^DD(356.1,.02,0)
	;;=TRACKING ID^P356'^IBT(356,^0;2^Q
	;;^DD(356.1,.02,1,0)
	;;=^.1
	;;^DD(356.1,.02,1,1,0)
	;;=356.1^C
	;;^DD(356.1,.02,1,1,1)
	;;=S ^IBT(356.1,"C",$E(X,1,30),DA)=""
	;;^DD(356.1,.02,1,1,2)
	;;=K ^IBT(356.1,"C",$E(X,1,30),DA)
	;;^DD(356.1,.02,1,1,"DT")
	;;=2930702
	;;^DD(356.1,.02,1,2,0)
	;;=356.1^ATIDT1^MUMPS
	;;^DD(356.1,.02,1,2,1)
	;;=S:+^IBT(356.1,DA,0) ^IBT(356.1,"ATIDT",X,-$P(^(0),U),DA)=""
	;;^DD(356.1,.02,1,2,2)
	;;=K ^IBT(356.1,"ATIDT",X,-$P(^IBT(356.1,DA,0),U),DA)
	;;^DD(356.1,.02,1,2,"%D",0)
	;;=^^2^2^2930714^
	;;^DD(356.1,.02,1,2,"%D",1,0)
	;;=Cross reference in inverse date order of all reviews for a tracking  
	;;^DD(356.1,.02,1,2,"%D",2,0)
	;;=entry.
	;;^DD(356.1,.02,1,2,"DT")
	;;=2930714
	;;^DD(356.1,.02,1,3,0)
	;;=356.1^ATRTP1^MUMPS
	;;^DD(356.1,.02,1,3,1)
	;;=S:$P(^IBT(356.1,DA,0),U,22) ^IBT(356.1,"ATRTP",X,+$P($G(^IBE(356.11,+$P(^(0),U,22),0)),U,2),DA)=""
	;;^DD(356.1,.02,1,3,2)
	;;=K ^IBT(356.1,"ATRTP",X,+$P($G(^IBE(356.11,+$P(^IBT(356.1,DA,0),U,22),0)),U,2),DA)
	;;^DD(356.1,.02,1,3,"%D",0)
	;;=^^2^2^2930904^^^^
	;;^DD(356.1,.02,1,3,"%D",1,0)
	;;=Cross reference of all reviews for a tracking entry by type of review
	;;^DD(356.1,.02,1,3,"%D",2,0)
	;;=code.
	;;^DD(356.1,.02,1,3,"DT")
	;;=2930904
	;;^DD(356.1,.02,3)
	;;=
	;;^DD(356.1,.02,21,0)
	;;=^^3^3^2930719^^
	;;^DD(356.1,.02,21,1,0)
	;;=This is the Claims Tracking entry that is being reviewed.  Generally
	;;^DD(356.1,.02,21,2,0)
	;;=only inpatient admissions will have reviews performed.
	;;^DD(356.1,.02,21,3,0)
	;;= 
	;;^DD(356.1,.02,"DT")
	;;=2930904
	;;^DD(356.1,.03,0)
	;;=DAY FOR REVIEW^NJ5,0^^0;3^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(356.1,.03,3)
	;;=Enter the numeric day of this review, ie, 3, 6, 9, 14, 21, 28, etc.  Type a Number between 0 and 99999, 0 Decimal Digits
	;;^DD(356.1,.03,21,0)
	;;=^^8^8^2940213^^^^
	;;^DD(356.1,.03,21,1,0)
	;;=This is the number of the day of a continued stay review.  Continued stay
	;;^DD(356.1,.03,21,2,0)
	;;=reviews for UR purposes are generally done on days 3, 6, 9, 14, 21, 28,
	;;^DD(356.1,.03,21,3,0)
	;;=and every 7 days thereafter.  This field is normally computed from the
	;;^DD(356.1,.03,21,4,0)
	;;=Review date field.  However, it may be changed for reviews that are not
	;;^DD(356.1,.03,21,5,0)
	;;=solely for UR purposes.
	;;^DD(356.1,.03,21,6,0)
	;;= 
	;;^DD(356.1,.03,21,7,0)
	;;=Pre-certification reviews, Urgent Admission reviews, and Discharge 
	;;^DD(356.1,.03,21,8,0)
	;;=reviews will not have any data in this field.
	;;^DD(356.1,.03,"DT")
	;;=2930714
	;;^DD(356.1,.04,0)
	;;=SEVERITY OF ILLNESS^*P356.3'^IBE(356.3,^0;4^S DIC("S")="I $P(^(0),U,2)=2" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.04,12)
	;;=Only categories for general units may be selected!
	;;^DD(356.1,.04,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=2"
	;;^DD(356.1,.04,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.1,.04,21,1,0)
	;;=Enter the Severity of Illness (SI) category that best describes the
	;;^DD(356.1,.04,21,2,0)
	;;=criteria met for continued stay days of care.  Select the PRIMARY

IBINI05Q
IBINI05Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.04,21,3,0)
	;;=category for this review.
	;;^DD(356.1,.04,"DT")
	;;=2930719
	;;^DD(356.1,.05,0)
	;;=INTENSITY OF SERVICE^*P356.3'^IBE(356.3,^0;5^S DIC("S")="I $P(^(0),U,2)=2" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.05,12)
	;;=Only categories for general units may be selected!
	;;^DD(356.1,.05,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=2"
	;;^DD(356.1,.05,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.1,.05,21,1,0)
	;;=Enter the Intensity of Service (IS) category that best describes the
	;;^DD(356.1,.05,21,2,0)
	;;=criteria met for continued stay days of care.  Select the PRIMARY
	;;^DD(356.1,.05,21,3,0)
	;;=category for this review.
	;;^DD(356.1,.05,"DT")
	;;=2930719
	;;^DD(356.1,.06,0)
	;;=CRITERIA MET IN 24 HOURS^S^1:YES;0:NO;^0;6^Q
	;;^DD(356.1,.06,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.1,.06,21,1,0)
	;;=For Pre-certification Reviews and Urgent Admission reviews enter if the
	;;^DD(356.1,.06,21,2,0)
	;;=patient met IS or SI criteria for acute admissions within 24 hours of
	;;^DD(356.1,.06,21,3,0)
	;;=admission.  If the criteria was not met, then selection of a REASON 
	;;^DD(356.1,.06,21,4,0)
	;;=FOR NON-ACUTE ADMISSIONS will be required.
	;;^DD(356.1,.07,0)
	;;=SPECIALTY FOR REVIEW^P45.7'^DIC(45.7,^0;7^Q
	;;^DD(356.1,.07,1,0)
	;;=^.1
	;;^DD(356.1,.07,1,1,0)
	;;=356.1^ASPC
	;;^DD(356.1,.07,1,1,1)
	;;=S ^IBT(356.1,"ASPC",$E(X,1,30),DA)=""
	;;^DD(356.1,.07,1,1,2)
	;;=K ^IBT(356.1,"ASPC",$E(X,1,30),DA)
	;;^DD(356.1,.07,1,1,"DT")
	;;=2930716
	;;^DD(356.1,.07,21,0)
	;;=^^3^3^2940216^^^^
	;;^DD(356.1,.07,21,1,0)
	;;=Enter the specialty that is treating the patient for this review.  
	;;^DD(356.1,.07,21,2,0)
	;;=Normally this will automatically be retrieved from the admission/transfer 
	;;^DD(356.1,.07,21,3,0)
	;;=records and you will only need to confirm.
	;;^DD(356.1,.07,"DT")
	;;=2940216
	;;^DD(356.1,.08,0)
	;;=SPECIALIZED UNIT SI^*P356.3'^IBE(356.3,^0;8^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.08,12)
	;;=Only categories for special units may be selected!
	;;^DD(356.1,.08,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.1,.08,21,0)
	;;=^^8^8^2940213^^^^
	;;^DD(356.1,.08,21,1,0)
	;;=Enter the Severity of Illness (SI) category that best describes the
	;;^DD(356.1,.08,21,2,0)
	;;=criteria met for continued stay days of care.  Select the PRIMARY
	;;^DD(356.1,.08,21,3,0)
	;;=category for this review.
	;;^DD(356.1,.08,21,4,0)
	;;= 
	;;^DD(356.1,.08,21,5,0)
	;;=For patients in specialized units the SI categories are different
	;;^DD(356.1,.08,21,6,0)
	;;=than for non-specialized units.  The definition of specialized
	;;^DD(356.1,.08,21,7,0)
	;;=units for interqual is different than what we normally consider
	;;^DD(356.1,.08,21,8,0)
	;;=intensive care units.
	;;^DD(356.1,.08,22)
	;;=
	;;^DD(356.1,.08,"DT")
	;;=2930719
	;;^DD(356.1,.09,0)
	;;=SPECIALIZED UNIT IS^*P356.3'^IBE(356.3,^0;9^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.09,12)
	;;=Only categories for special units may be selected!
	;;^DD(356.1,.09,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.1,.09,21,0)
	;;=^^8^8^2940213^^
	;;^DD(356.1,.09,21,1,0)
	;;=Enter the Intensity of Service (IS) category that best describes the
	;;^DD(356.1,.09,21,2,0)
	;;=criteria met for continued stay days of care.  Select the PRIMARY
	;;^DD(356.1,.09,21,3,0)
	;;=category for this review.
	;;^DD(356.1,.09,21,4,0)
	;;= 
	;;^DD(356.1,.09,21,5,0)
	;;=For patient in specialized units the IS categories are different
	;;^DD(356.1,.09,21,6,0)
	;;=than for non-specialized units.  The definition of specialized

IBINI05R
IBINI05R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.09,21,7,0)
	;;=units for interqual is different than what we normally consider
	;;^DD(356.1,.09,21,8,0)
	;;=intensive care units.
	;;^DD(356.1,.09,"DT")
	;;=2930719
	;;^DD(356.1,.1,0)
	;;=PROVIDER INTERVIEWED?^S^1:YES;0:NO;^0;10^Q
	;;^DD(356.1,.1,21,0)
	;;=^^3^3^2930719^
	;;^DD(356.1,.1,21,1,0)
	;;=For Pre-certification reviews and Urgent Admission reviews enter whether
	;;^DD(356.1,.1,21,2,0)
	;;=or not UR interviewed the provider regarding the appropriateness of the
	;;^DD(356.1,.1,21,3,0)
	;;=admission.
	;;^DD(356.1,.1,"DT")
	;;=2930610
	;;^DD(356.1,.11,0)
	;;=ADMISSION DECISION INFLUENCED^S^1:YES;0:NO;^0;11^Q
	;;^DD(356.1,.11,21,0)
	;;=^^3^3^2930719^
	;;^DD(356.1,.11,21,1,0)
	;;=If the provider was interviewed about the appropriateness of admission
	;;^DD(356.1,.11,21,2,0)
	;;=then answer whether or not the decision to admit the patient was
	;;^DD(356.1,.11,21,3,0)
	;;=influenced.
	;;^DD(356.1,.11,"DT")
	;;=2930610
	;;^DD(356.1,.12,0)
	;;=D/C SCREENS MET^*P356.3'^IBE(356.3,^0;12^S DIC("S")="I $P(^(0),U,2)=2" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.12,3)
	;;=
	;;^DD(356.1,.12,12)
	;;=Only categories for general units may be selected!
	;;^DD(356.1,.12,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=2"
	;;^DD(356.1,.12,21,0)
	;;=^^1^1^2930719^^
	;;^DD(356.1,.12,21,1,0)
	;;=Enter the Intensity of Service category whose discharge screens were met.
	;;^DD(356.1,.12,"DT")
	;;=2930719
	;;^DD(356.1,.13,0)
	;;=SPECIAL CARE D/C SCREENS MET^*P356.3'^IBE(356.3,^0;13^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.13,3)
	;;=
	;;^DD(356.1,.13,12)
	;;=Only categories for specialized units may be selected!
	;;^DD(356.1,.13,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.1,.13,21,0)
	;;=^^2^2^2930726^^^
	;;^DD(356.1,.13,21,1,0)
	;;=Enter the Intesity of Service Category whose discharge screens were
	;;^DD(356.1,.13,21,2,0)
	;;=met.
	;;^DD(356.1,.13,"DT")
	;;=2930719
	;;^DD(356.1,.14,0)
	;;=SI/IS APPLY ALL DAYS^S^1:YES;0:NO;^0;14^Q
	;;^DD(356.1,.14,21,0)
	;;=^^6^6^2940213^^^^
	;;^DD(356.1,.14,21,1,0)
	;;=Answer whether or not the Severity of Illness (SI) or Intensity of
	;;^DD(356.1,.14,21,2,0)
	;;=Service (IS) criteria apply to all days.  If not, then the number
	;;^DD(356.1,.14,21,3,0)
	;;=of non-acute days and the reason for non-acute days should be
	;;^DD(356.1,.14,21,4,0)
	;;=answered.
	;;^DD(356.1,.14,21,5,0)
	;;= 
	;;^DD(356.1,.14,21,6,0)
	;;=The dates of non-acute care should be entered in the comments field.
	;;^DD(356.1,.14,22)
	;;=
	;;^DD(356.1,.14,"DT")
	;;=2930610
	;;^DD(356.1,.19,0)
	;;=ACTIVE^S^1:YES;0:NO;^0;19^Q
	;;^DD(356.1,.19,3)
	;;=Enter whether this Review is ACTIVE or not.  Answering "NO" has a similar effect to deleting the entry, it will no longer appear on reports or input screens.
	;;^DD(356.1,.19,21,0)
	;;=^^5^5^2930726^
	;;^DD(356.1,.19,21,1,0)
	;;=Enter if this review is active or not.  If a review is not active it
	;;^DD(356.1,.19,21,2,0)
	;;=will not be used or displayed on input screens or reports.  
	;;^DD(356.1,.19,21,3,0)
	;;= 
	;;^DD(356.1,.19,21,4,0)
	;;=Inactivating an entry has the same effect as deleting the entry, with the
	;;^DD(356.1,.19,21,5,0)
	;;=added benefit of leaving the data for later review if necessary.
	;;^DD(356.1,.19,"DT")
	;;=2930610
	;;^DD(356.1,.2,0)
	;;=NEXT REVIEW DATE^D^^0;20^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,.2,1,0)
	;;=^.1
	;;^DD(356.1,.2,1,1,0)
	;;=356.1^APEND
	;;^DD(356.1,.2,1,1,1)
	;;=S ^IBT(356.1,"APEND",$E(X,1,30),DA)=""
	;;^DD(356.1,.2,1,1,2)
	;;=K ^IBT(356.1,"APEND",$E(X,1,30),DA)

IBINI05S
IBINI05S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.2,1,1,"%D",0)
	;;=^^2^2^2940213^^
	;;^DD(356.1,.2,1,1,"%D",1,0)
	;;=Cross reference of all non-completed reviews so it can be used as a tickler
	;;^DD(356.1,.2,1,1,"%D",2,0)
	;;=file.
	;;^DD(356.1,.2,1,1,"DT")
	;;=2930722
	;;^DD(356.1,.2,5,1,0)
	;;=356.1^.21^4
	;;^DD(356.1,.2,21,0)
	;;=^^7^7^2940213^^
	;;^DD(356.1,.2,21,1,0)
	;;=This is the date that this review should be reviewed next.  If the review
	;;^DD(356.1,.2,21,2,0)
	;;=status is entered then this field will contain the date it was entered.  If
	;;^DD(356.1,.2,21,3,0)
	;;=the review status is complete then the data in this field is automatically
	;;^DD(356.1,.2,21,4,0)
	;;=deleted.
	;;^DD(356.1,.2,21,5,0)
	;;= 
	;;^DD(356.1,.2,21,6,0)
	;;=This field is used to create your pending work lists.  Enter the date that
	;;^DD(356.1,.2,21,7,0)
	;;=you want to be reminded to follow-up on this review.
	;;^DD(356.1,.2,"DT")
	;;=2930722
	;;^DD(356.1,.21,0)
	;;=REVIEW STATUS^S^0:INACTIVE;1:ENTERED;2:PENDING;10:COMPLETE;^0;21^Q
	;;^DD(356.1,.21,1,0)
	;;=^.1
	;;^DD(356.1,.21,1,1,0)
	;;=356.1^AC
	;;^DD(356.1,.21,1,1,1)
	;;=S ^IBT(356.1,"AC",$E(X,1,30),DA)=""
	;;^DD(356.1,.21,1,1,2)
	;;=K ^IBT(356.1,"AC",$E(X,1,30),DA)
	;;^DD(356.1,.21,1,1,"DT")
	;;=2930714
	;;^DD(356.1,.21,1,2,0)
	;;=^^TRIGGER^356.1^1.05
	;;^DD(356.1,.21,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.1,D0,0),U,21)=10,$P($G(^(1)),U,5)="" I X S X=DIV S Y(1)=$S($D(^IBT(356.1,D0,1)):^(1),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(356.1,.21,1,2,1.1) X ^DD(356.1,.21,1,2,1.4)
	;;^DD(356.1,.21,1,2,1.1)
	;;=S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
	;;^DD(356.1,.21,1,2,1.4)
	;;=S DIH=$S($D(^IBT(356.1,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,5)=DIV,DIH=356.1,DIG=1.05 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.1,.21,1,2,2)
	;;=Q
	;;^DD(356.1,.21,1,2,"%D",0)
	;;=^^1^1^2930714^
	;;^DD(356.1,.21,1,2,"%D",1,0)
	;;=Trigger date completed when status changes to complete
	;;^DD(356.1,.21,1,2,"CREATE CONDITION")
	;;=I $P(^IBT(356.1,D0,0),U,21)=10,$P($G(^(1)),U,5)=""
	;;^DD(356.1,.21,1,2,"CREATE VALUE")
	;;=NOW
	;;^DD(356.1,.21,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.1,.21,1,2,"DT")
	;;=2930714
	;;^DD(356.1,.21,1,2,"FIELD")
	;;=#1.05
	;;^DD(356.1,.21,1,3,0)
	;;=^^TRIGGER^356.1^1.06
	;;^DD(356.1,.21,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.1,D0,0),U,21)=10,$P($G(^(1)),U,6)="" I X S X=DIV S Y(1)=$S($D(^IBT(356.1,D0,1)):^(1),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(356.1,.21,1,3,1.4)
	;;^DD(356.1,.21,1,3,1.4)
	;;=S DIH=$S($D(^IBT(356.1,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,6)=DIV,DIH=356.1,DIG=1.06 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.1,.21,1,3,2)
	;;=Q
	;;^DD(356.1,.21,1,3,"%D",0)
	;;=^^1^1^2930714^
	;;^DD(356.1,.21,1,3,"%D",1,0)
	;;=Trigger completed by when status changes to complete
	;;^DD(356.1,.21,1,3,"CREATE CONDITION")
	;;=I $P(^IBT(356.1,D0,0),U,21)=10,$P($G(^(1)),U,6)=""
	;;^DD(356.1,.21,1,3,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(356.1,.21,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.1,.21,1,3,"DT")
	;;=2930714
	;;^DD(356.1,.21,1,3,"FIELD")
	;;=#1.06
	;;^DD(356.1,.21,1,4,0)
	;;=^^TRIGGER^356.1^.2
	;;^DD(356.1,.21,1,4,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.1,DA,0),U,21)=10 I X S X=DIV S Y(1)=$S($D(^IBT(356.1,D0,0)):^(0),1:"") S X=$P(Y(1),U,20),X=X S DIU=X K Y S X="" X ^DD(356.1,.21,1,4,1.4)
	;;^DD(356.1,.21,1,4,1.4)
	;;=S DIH=$S($D(^IBT(356.1,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,20)=DIV,DIH=356.1,DIG=.2 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(356.1,.21,1,4,2)
	;;=Q

IBINI05T
IBINI05T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.21,1,4,"%D",0)
	;;=^^1^1^2940209^
	;;^DD(356.1,.21,1,4,"%D",1,0)
	;;=Deletes the Next Review Date whenever the status is set to completed.
	;;^DD(356.1,.21,1,4,"CREATE CONDITION")
	;;=I $P(^IBT(356.1,DA,0),U,21)=10
	;;^DD(356.1,.21,1,4,"CREATE VALUE")
	;;=@
	;;^DD(356.1,.21,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.1,.21,1,4,"DT")
	;;=2940209
	;;^DD(356.1,.21,1,4,"FIELD")
	;;=#.2
	;;^DD(356.1,.21,3)
	;;=Enter the status of this review.  Reviews that are not completed will continue to appear on your pending work lists.
	;;^DD(356.1,.21,21,0)
	;;=^^5^5^2940213^^
	;;^DD(356.1,.21,21,1,0)
	;;=This is the status of this review.  Reviews that are entered or pending
	;;^DD(356.1,.21,21,2,0)
	;;=should contain a next review date.  Once a review is completed, the next
	;;^DD(356.1,.21,21,3,0)
	;;=review date is automatically deleted.  If a review status is changed from
	;;^DD(356.1,.21,21,4,0)
	;;=complete to any other status then the next review date is automatically
	;;^DD(356.1,.21,21,5,0)
	;;=set to today, but may be edited.
	;;^DD(356.1,.21,"DT")
	;;=2940209
	;;^DD(356.1,.22,0)
	;;=TYPE OF REVIEW^R*P356.11'^IBE(356.11,^0;22^S DIC("S")="I $P(^(0),U,2)=15!($P(^(0),U,2)=30)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.22,1,0)
	;;=^.1
	;;^DD(356.1,.22,1,1,0)
	;;=356.1^AD
	;;^DD(356.1,.22,1,1,1)
	;;=S ^IBT(356.1,"AD",$E(X,1,30),DA)=""
	;;^DD(356.1,.22,1,1,2)
	;;=K ^IBT(356.1,"AD",$E(X,1,30),DA)
	;;^DD(356.1,.22,1,1,"DT")
	;;=2930719
	;;^DD(356.1,.22,1,2,0)
	;;=356.1^ATRTP^MUMPS
	;;^DD(356.1,.22,1,2,1)
	;;=S:$P(^IBT(356.1,DA,0),U,2) ^IBT(356.1,"ATRTP",$P(^(0),U,2),+$P($G(^IBE(356.11,X,0)),U,2),DA)=""
	;;^DD(356.1,.22,1,2,2)
	;;=K ^IBT(356.1,"ATRTP",+$P(^IBT(356.1,DA,0),U,2),+$P($G(^IBE(356.11,X,0)),U,2),DA)
	;;^DD(356.1,.22,1,2,"%D",0)
	;;=^^2^2^2930720^^^
	;;^DD(356.1,.22,1,2,"%D",1,0)
	;;=Cross reference of all reviews for a tracking entry by type of review
	;;^DD(356.1,.22,1,2,"%D",2,0)
	;;=code.
	;;^DD(356.1,.22,1,2,"DT")
	;;=2930720
	;;^DD(356.1,.22,12)
	;;=Only admission review types may be selected!
	;;^DD(356.1,.22,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=15!($P(^(0),U,2)=30)"
	;;^DD(356.1,.22,21,0)
	;;=^^1^1^2940127^^^^
	;;^DD(356.1,.22,21,1,0)
	;;=Enter whether or not this is an admission review or a continued stay review.
	;;^DD(356.1,.22,"DT")
	;;=2930901
	;;^DD(356.1,.23,0)
	;;=REVIEW METHODOLOGY^S^1:INTERQUAL;2:MILLIMAN & ROBERTSON;999:OTHER;^0;23^Q
	;;^DD(356.1,.23,21,0)
	;;=^^8^8^2930726^
	;;^DD(356.1,.23,21,1,0)
	;;=Enter the Review Methodology being used for this review.  Generally
	;;^DD(356.1,.23,21,2,0)
	;;=the INTERQUAL method is being used as the methodology for UR required
	;;^DD(356.1,.23,21,3,0)
	;;=review.  Insurance carriers may require other review methodologies.
	;;^DD(356.1,.23,21,4,0)
	;;= 
	;;^DD(356.1,.23,21,5,0)
	;;=Currently, if the type of review methodology is INTERQUAL then the
	;;^DD(356.1,.23,21,6,0)
	;;=categories for severity of illness and intensity of service will be
	;;^DD(356.1,.23,21,7,0)
	;;=prompted.  This data will be used for national roll-up purposes for
	;;^DD(356.1,.23,21,8,0)
	;;=UR.
	;;^DD(356.1,.23,"DT")
	;;=2940127
	;;^DD(356.1,.24,0)
	;;=REVIEW COPIED FROM^*P356.1'^IBT(356.1,^0;24^S DIC("S")="I $P(^(O),U,2)=$P(^IBT(356.1,DA,0),U,2)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.1,.24,12)
	;;=Must be for the same claims tracking id
	;;^DD(356.1,.24,12.1)
	;;=S DIC("S")="I $P(^(O),U,2)=$P(^IBT(356.1,DA,0),U,2)"
	;;^DD(356.1,.24,21,0)
	;;=^^2^2^2930904^
	;;^DD(356.1,.24,21,1,0)
	;;=If this review was automatically copied during the editing of a review

IBINI05U
IBINI05U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,.24,21,2,0)
	;;=then this is the review it was copied from.
	;;^DD(356.1,.24,"DT")
	;;=2930904
	;;^DD(356.1,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,1.01,21,0)
	;;=^^2^2^2930726^
	;;^DD(356.1,1.01,21,1,0)
	;;=This is the date this review was entered into the computer.  It is
	;;^DD(356.1,1.01,21,2,0)
	;;=generated when the review is entered and not editable by the user.
	;;^DD(356.1,1.01,"DT")
	;;=2930714
	;;^DD(356.1,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(356.1,1.02,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.1,1.02,21,1,0)
	;;=This is the user who was signed on to the computer system when this
	;;^DD(356.1,1.02,21,2,0)
	;;=review was created.  If this review was created automatically by
	;;^DD(356.1,1.02,21,3,0)
	;;=the computer from an admission or outpatient visit, then this might
	;;^DD(356.1,1.02,21,4,0)
	;;=be a user for MAS, IRM or other service.
	;;^DD(356.1,1.02,"DT")
	;;=2930610
	;;^DD(356.1,1.03,0)
	;;=LAST EDIT ON^D^^1;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,1.03,3)
	;;=
	;;^DD(356.1,1.03,21,0)
	;;=^^4^4^2930726^^^
	;;^DD(356.1,1.03,21,1,0)
	;;=This is the date that this review was last edited by a user using 
	;;^DD(356.1,1.03,21,2,0)
	;;=the input options.  Every time any
	;;^DD(356.1,1.03,21,3,0)
	;;=field other than the UR COMMENT field is edited this field is updated
	;;^DD(356.1,1.03,21,4,0)
	;;=to the current date.
	;;^DD(356.1,1.03,"DT")
	;;=2930714
	;;^DD(356.1,1.04,0)
	;;=LAST EDITED BY^P200'^VA(200,^1;4^Q
	;;^DD(356.1,1.04,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.1,1.04,21,1,0)
	;;=This is the signed on user who last edited this entry using the input
	;;^DD(356.1,1.04,21,2,0)
	;;=screens.  Every time a review is edited with the input screens, this
	;;^DD(356.1,1.04,21,3,0)
	;;=field is updated.  (If only the UR COMMENTS field is updated then
	;;^DD(356.1,1.04,21,4,0)
	;;=this field is not changed.)
	;;^DD(356.1,1.04,"DT")
	;;=2930610
	;;^DD(356.1,1.05,0)
	;;=DATE COMPLETED^D^^1;5^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,1.05,3)
	;;=
	;;^DD(356.1,1.05,5,1,0)
	;;=356.1^.21^2
	;;^DD(356.1,1.05,21,0)
	;;=^^2^2^2940213^^^
	;;^DD(356.1,1.05,21,1,0)
	;;=This is the date that this review was completed.  It is triggered by 
	;;^DD(356.1,1.05,21,2,0)
	;;=the REVIEW STATUS field every time the review is completed.
	;;^DD(356.1,1.05,"DT")
	;;=2930714
	;;^DD(356.1,1.06,0)
	;;=COMPLETED BY^P200'^VA(200,^1;6^Q
	;;^DD(356.1,1.06,5,1,0)
	;;=356.1^.21^3
	;;^DD(356.1,1.06,21,0)
	;;=^^2^2^2930726^
	;;^DD(356.1,1.06,21,1,0)
	;;=This is the user who completed this review.  It is triggered by the
	;;^DD(356.1,1.06,21,2,0)
	;;=REVIEW STATUS field when the status chages to complete.
	;;^DD(356.1,1.06,"DT")
	;;=2930610
	;;^DD(356.1,1.13,0)
	;;=ADD NEXT REVIEW^S^1:YES;0:NO;^1;13^Q
	;;^DD(356.1,1.13,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.1,1.13,21,1,0)
	;;=If you wish to add the next day reviewed at this time answer YEand
	;;^DD(356.1,1.13,21,2,0)
	;;=you may procede directly into the next review.  Answer NO and you
	;;^DD(356.1,1.13,21,3,0)
	;;=will be returned to the Hospital Review Screen.  You may add another
	;;^DD(356.1,1.13,21,4,0)
	;;=day for review at any time.
	;;^DD(356.1,1.13,"DT")
	;;=2930830
	;;^DD(356.1,1.14,0)
	;;=NEXT REVIEW EXACTLY THE SAME^S^1:YES;0:NO;^1;14^Q
	;;^DD(356.1,1.14,3)
	;;=
	;;^DD(356.1,1.14,21,0)
	;;=^^6^6^2940213^^
	;;^DD(356.1,1.14,21,1,0)
	;;=If the Next Day for Review is exactly the same as the day you just
	;;^DD(356.1,1.14,21,2,0)
	;;=finished entering answer YES and the computer will copy this days

IBINI05V
IBINI05V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.1,1.14,21,3,0)
	;;=review into the next days review so you don't have to do all the
	;;^DD(356.1,1.14,21,4,0)
	;;=data entry.  Answer No and you will be asked each prompt as appropriate.
	;;^DD(356.1,1.14,21,5,0)
	;;= 
	;;^DD(356.1,1.14,21,6,0)
	;;=A review that was copied may be edited at any time if necessary.
	;;^DD(356.1,1.14,"DT")
	;;=2930830
	;;^DD(356.1,1.15,0)
	;;=ADDITIONAL REVIEWS REQUIRED^S^1:YES;0:NO;^1;15^Q
	;;^DD(356.1,1.15,3)
	;;=
	;;^DD(356.1,1.15,21,0)
	;;=^^4^4^2940213^^^
	;;^DD(356.1,1.15,21,1,0)
	;;=If this visit does not require any additional reviews then answer NO and
	;;^DD(356.1,1.15,21,2,0)
	;;=the computer will not create any more reviews automatically unless there
	;;^DD(356.1,1.15,21,3,0)
	;;=is a change is service.  Answer YES or leave blank if additional reviews
	;;^DD(356.1,1.15,21,4,0)
	;;=are required.
	;;^DD(356.1,1.15,22)
	;;=
	;;^DD(356.1,1.15,"DT")
	;;=2930830
	;;^DD(356.1,1.17,0)
	;;=ACUTE CARE DISCHARGE DATE^D^^1;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.1,1.17,3)
	;;=
	;;^DD(356.1,1.17,21,0)
	;;=^^2^2^2940213^^
	;;^DD(356.1,1.17,21,1,0)
	;;=If the patient no longer requires acute care, then this is the date
	;;^DD(356.1,1.17,21,2,0)
	;;=that the patient left an acute status.  
	;;^DD(356.1,1.17,"DT")
	;;=2930830
	;;^DD(356.1,11,0)
	;;=UTILIZATION REVIEW COMMENTS^356.111^^11;0
	;;^DD(356.1,11,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.1,11,21,1,0)
	;;=This field is used to store comments about the UR Review.  It can be
	;;^DD(356.1,11,21,2,0)
	;;=used to document reasons for non-acute admissions, non-acute days,
	;;^DD(356.1,11,21,3,0)
	;;=or other items that require a greater explanation.
	;;^DD(356.1,12,0)
	;;=REASON FOR NON-ACUTE ADMISSION^356.112PA^^12;0
	;;^DD(356.1,12,12)
	;;=Only reasons for non-acute admissions may be selected!
	;;^DD(356.1,12,12.1)
	;;=S DIC("S")="I $P(^(0),U,5)=1"
	;;^DD(356.1,12,21,0)
	;;=^^6^6^2940213^^^
	;;^DD(356.1,12,21,1,0)
	;;=If this patient did not meet criteria for an acute admission within
	;;^DD(356.1,12,21,2,0)
	;;=24 hours enter the reasons that best describe why the admission didn't
	;;^DD(356.1,12,21,3,0)
	;;=meet criteria.  If no reason can be determined enter 8.02 other.
	;;^DD(356.1,12,21,4,0)
	;;= 
	;;^DD(356.1,12,21,5,0)
	;;=This reason will be transmitted to the national database when it becomes
	;;^DD(356.1,12,21,6,0)
	;;=available.
	;;^DD(356.1,13,0)
	;;=REASON FOR NON-ACUTE DAYS^356.113PA^^13;0
	;;^DD(356.1,13,12)
	;;=Only reasons for non-acute days of care may be selected!
	;;^DD(356.1,13,12.1)
	;;=S DIC("S")="I $P(^(0),U,5)=2"
	;;^DD(356.1,13,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.1,13,21,1,0)
	;;=If this patient had non-acute days of care during this review, enter
	;;^DD(356.1,13,21,2,0)
	;;=reasons that best describe the reason for the non-acute days.  If no
	;;^DD(356.1,13,21,3,0)
	;;=reason can be deteremined select the reason 8.01, Other.
	;;^DD(356.1,21,0)
	;;=PATIENT^CJ30^^ ; ^X ^DD(356.1,21,9.2) S Y(356.1,21,101)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(356.1,21,101),U,2),0)):"",1:$P(^(0),U,1)) S D0=Y(356.1,21,80)
	;;^DD(356.1,21,9)
	;;=^
	;;^DD(356.1,21,9.01)
	;;=356^.02;356.1^.02
	;;^DD(356.1,21,9.1)
	;;=TRACKING ID:PATIENT
	;;^DD(356.1,21,9.2)
	;;=S Y(356.1,21,80)=$S($D(D0):D0,1:""),Y(356.1,21,1)=$S($D(^IBT(356.1,D0,0)):^(0),1:""),D0=$P(Y(356.1,21,1),U,2) S:'$D(^IBT(356,+D0,0)) D0=-1
	;;^DD(356.1,21,21,0)
	;;=^^1^1^2930726^
	;;^DD(356.1,21,21,1,0)
	;;=This is the patient whose tracking entry this review is for.
	;;^DD(356.111,0)
	;;=UTILIZATION REVIEW COMMENTS SUB-FIELD^^.01^1

IBINI05W
IBINI05W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.111,0,"DT")
	;;=2930723
	;;^DD(356.111,0,"NM","UTILIZATION REVIEW COMMENTS")
	;;=
	;;^DD(356.111,0,"UP")
	;;=356.1
	;;^DD(356.111,.01,0)
	;;=UTILIZATION REVIEW COMMENTS^W^^0;1^Q
	;;^DD(356.111,.01,.1)
	;;=COMMENTS
	;;^DD(356.111,.01,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(356.111,.01,21,1,0)
	;;=This field is used to store comments about the UR Review.  It can be
	;;^DD(356.111,.01,21,2,0)
	;;=used to document reasons for non-acute admissions, non-acute days,
	;;^DD(356.111,.01,21,3,0)
	;;=or other items that require a greater explanation.
	;;^DD(356.111,.01,"DT")
	;;=2930723
	;;^DD(356.112,0)
	;;=REASON FOR NON-ACUTE ADMISSION SUB-FIELD^^.01^1
	;;^DD(356.112,0,"DT")
	;;=2930826
	;;^DD(356.112,0,"IX","B",356.112,.01)
	;;=
	;;^DD(356.112,0,"NM","REASON FOR NON-ACUTE ADMISSION")
	;;=
	;;^DD(356.112,0,"UP")
	;;=356.1
	;;^DD(356.112,.01,0)
	;;=REASON FOR NON-ACUTE ADMISSION^M*P356.4'^IBE(356.4,^0;1^S DIC("S")="I $P(^(0),U,5)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.112,.01,1,0)
	;;=^.1
	;;^DD(356.112,.01,1,1,0)
	;;=356.112^B
	;;^DD(356.112,.01,1,1,1)
	;;=S ^IBT(356.1,DA(1),12,"B",$E(X,1,30),DA)=""
	;;^DD(356.112,.01,1,1,2)
	;;=K ^IBT(356.1,DA(1),12,"B",$E(X,1,30),DA)
	;;^DD(356.112,.01,21,0)
	;;=^^6^6^2940213^^
	;;^DD(356.112,.01,21,1,0)
	;;=If this patient did not meet criteria for an acute admission within
	;;^DD(356.112,.01,21,2,0)
	;;=24 hours enter the reasons that best describe why the admission didn't
	;;^DD(356.112,.01,21,3,0)
	;;=meet criteria.  If no reason can be determined enter 8.02 other.
	;;^DD(356.112,.01,21,4,0)
	;;= 
	;;^DD(356.112,.01,21,5,0)
	;;=This reason will be transmitted to the national database when it become
	;;^DD(356.112,.01,21,6,0)
	;;=available.
	;;^DD(356.112,.01,"DT")
	;;=2930826
	;;^DD(356.113,0)
	;;=REASON FOR NON-ACUTE DAYS SUB-FIELD^^.01^1
	;;^DD(356.113,0,"DT")
	;;=2930826
	;;^DD(356.113,0,"IX","B",356.113,.01)
	;;=
	;;^DD(356.113,0,"NM","REASON FOR NON-ACUTE DAYS")
	;;=
	;;^DD(356.113,0,"UP")
	;;=356.1
	;;^DD(356.113,.01,0)
	;;=REASON FOR NON-ACUTE DAYS^M*P356.4'^IBE(356.4,^0;1^S DIC("S")="I $P(^(0),U,5)=2" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.113,.01,1,0)
	;;=^.1
	;;^DD(356.113,.01,1,1,0)
	;;=356.113^B
	;;^DD(356.113,.01,1,1,1)
	;;=S ^IBT(356.1,DA(1),13,"B",$E(X,1,30),DA)=""
	;;^DD(356.113,.01,1,1,2)
	;;=K ^IBT(356.1,DA(1),13,"B",$E(X,1,30),DA)
	;;^DD(356.113,.01,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.113,.01,21,1,0)
	;;=If this patient had non-acute days of care during this review, enter
	;;^DD(356.113,.01,21,2,0)
	;;=reasons that best describe the reason for the non-acute days.  If no
	;;^DD(356.113,.01,21,3,0)
	;;=reason can be determined select the reason 8.01.
	;;^DD(356.113,.01,"DT")
	;;=2930826

IBINI05X
IBINI05X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.11)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.11,0,"GL")
	;;=^IBE(356.11,
	;;^DIC("B","CLAIMS TRACKING REVIEW TYPE",356.11)
	;;=
	;;^DIC(356.11,"%D",0)
	;;=^^8^8^2940214^^^^
	;;^DIC(356.11,"%D",1,0)
	;;=This is the type of Review that is being performed by MCCR or UR.  This 
	;;^DIC(356.11,"%D",2,0)
	;;=file may contain the logic to determine which quesions and/or screens
	;;^DIC(356.11,"%D",3,0)
	;;=can be presented to the user in the future.
	;;^DIC(356.11,"%D",4,0)
	;;= 
	;;^DIC(356.11,"%D",5,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.11,"%D",6,0)
	;;=from your ISC.
	;;^DIC(356.11,"%D",7,0)
	;;= 
	;;^DIC(356.11,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.11,0)
	;;=FIELD^^.03^3
	;;^DD(356.11,0,"DDA")
	;;=N
	;;^DD(356.11,0,"DT")
	;;=2930826
	;;^DD(356.11,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(356.11,0,"IX","ACODE",356.11,.02)
	;;=
	;;^DD(356.11,0,"IX","B",356.11,.01)
	;;=
	;;^DD(356.11,0,"IX","C",356.11,.02)
	;;=
	;;^DD(356.11,0,"NM","CLAIMS TRACKING REVIEW TYPE")
	;;=
	;;^DD(356.11,0,"PT",356.1,.22)
	;;=
	;;^DD(356.11,0,"PT",356.2,.04)
	;;=
	;;^DD(356.11,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.11,.01,1,0)
	;;=^.1
	;;^DD(356.11,.01,1,1,0)
	;;=356.11^B
	;;^DD(356.11,.01,1,1,1)
	;;=S ^IBE(356.11,"B",$E(X,1,30),DA)=""
	;;^DD(356.11,.01,1,1,2)
	;;=K ^IBE(356.11,"B",$E(X,1,30),DA)
	;;^DD(356.11,.01,3)
	;;=Enter the name of the type of Review.  Answer must be 3-30 characters in length.
	;;^DD(356.11,.01,21,0)
	;;=^^1^1^2930714^
	;;^DD(356.11,.01,21,1,0)
	;;=This is the name of the type of Review being performed.
	;;^DD(356.11,.01,"DT")
	;;=2930714
	;;^DD(356.11,.02,0)
	;;=CODE^NJ3,0^^0;2^K:+X'=X!(X>100)!(X<10)!(X?.E1"."1N.N) X
	;;^DD(356.11,.02,1,0)
	;;=^.1
	;;^DD(356.11,.02,1,1,0)
	;;=356.11^ACODE
	;;^DD(356.11,.02,1,1,1)
	;;=S ^IBE(356.11,"ACODE",$E(X,1,30),DA)=""
	;;^DD(356.11,.02,1,1,2)
	;;=K ^IBE(356.11,"ACODE",$E(X,1,30),DA)
	;;^DD(356.11,.02,1,1,3)
	;;=DO NOT DELETE
	;;^DD(356.11,.02,1,1,"%D",0)
	;;=^^2^2^2930706^
	;;^DD(356.11,.02,1,1,"%D",1,0)
	;;=Regular cross-reference used to look-up review type internally by code
	;;^DD(356.11,.02,1,1,"%D",2,0)
	;;=number.
	;;^DD(356.11,.02,1,1,"DT")
	;;=2930706
	;;^DD(356.11,.02,1,2,0)
	;;=356.11^C
	;;^DD(356.11,.02,1,2,1)
	;;=S ^IBE(356.11,"C",$E(X,1,30),DA)=""
	;;^DD(356.11,.02,1,2,2)
	;;=K ^IBE(356.11,"C",$E(X,1,30),DA)
	;;^DD(356.11,.02,1,2,"DT")
	;;=2930803
	;;^DD(356.11,.02,3)
	;;=Type a Number between 10 and 100, 0 Decimal Digits
	;;^DD(356.11,.02,21,0)
	;;=^^2^2^2930714^
	;;^DD(356.11,.02,21,1,0)
	;;=Enter the internal code used by the claims tracking module to identify
	;;^DD(356.11,.02,21,2,0)
	;;=this specific type of review.
	;;^DD(356.11,.02,"DT")
	;;=2930803
	;;^DD(356.11,.03,0)
	;;=ABBREVIATION^F^^0;3^K:$L(X)>10!($L(X)<2) X
	;;^DD(356.11,.03,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(356.11,.03,21,0)
	;;=^^2^2^2930826^
	;;^DD(356.11,.03,21,1,0)
	;;=This is the abbreviation for this type of review that will be displayed
	;;^DD(356.11,.03,21,2,0)
	;;=on reports and input screens.
	;;^DD(356.11,.03,"DT")
	;;=2930826

IBINI05Y
IBINI05Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.11)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.11)
	;;=^IBE(356.11,
	;;^UTILITY(U,$J,356.11,0)
	;;=CLAIMS TRACKING REVIEW TYPE^356.11I^11^11
	;;^UTILITY(U,$J,356.11,1,0)
	;;=PRE-ADM CERTIFICATION REVIEW^10^PRE-ADM
	;;^UTILITY(U,$J,356.11,2,0)
	;;=URGENT/EMERGENT ADMIT REVIEW^20^URG ADM
	;;^UTILITY(U,$J,356.11,3,0)
	;;=CONTINUED STAY REVIEW^30^CONT. STAY
	;;^UTILITY(U,$J,356.11,4,0)
	;;=DISCHARGE REVIEW^40^DISCHARGE
	;;^UTILITY(U,$J,356.11,5,0)
	;;=OUTPATIENT TREATMENT^50^OPT
	;;^UTILITY(U,$J,356.11,6,0)
	;;=INITIAL APPEAL^60^1st Appeal
	;;^UTILITY(U,$J,356.11,7,0)
	;;=PATIENT^70^PATIENT
	;;^UTILITY(U,$J,356.11,8,0)
	;;=OTHER^80^OTHER
	;;^UTILITY(U,$J,356.11,9,0)
	;;=SUBSEQUENT APPEAL^65^Nth Appeal
	;;^UTILITY(U,$J,356.11,10,0)
	;;=ADMISSION REVIEW^15^Admission
	;;^UTILITY(U,$J,356.11,11,0)
	;;=INSURANCE VERIFICATION^85^Ins. Ver.

IBINI05Z
IBINI05Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.2,0,"GL")
	;;=^IBT(356.2,
	;;^DIC("B","INSURANCE REVIEW",356.2)
	;;=
	;;^DIC(356.2,"%D",0)
	;;=^^10^10^2940214^^^^
	;;^DIC(356.2,"%D",1,0)
	;;=This file contains information about the MCCR/UR portion of Utilization
	;;^DIC(356.2,"%D",2,0)
	;;=Review and the associated contacts with Insurance Carriers.  Appropriateness
	;;^DIC(356.2,"%D",3,0)
	;;=of care is inferred from the approval and denial of billing days by
	;;^DIC(356.2,"%D",4,0)
	;;=the insurance carriers UR section.  
	;;^DIC(356.2,"%D",5,0)
	;;= 
	;;^DIC(356.2,"%D",6,0)
	;;=While this information appears to be primarily administrative in nature
	;;^DIC(356.2,"%D",7,0)
	;;=it may contain sensitive clinical information and should be treated with
	;;^DIC(356.2,"%D",8,0)
	;;=the same confidentiality as required of all clinical data.
	;;^DIC(356.2,"%D",9,0)
	;;= 
	;;^DIC(356.2,"%D",10,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.2,0)
	;;=FIELD^^1.07^40
	;;^DD(356.2,0,"DT")
	;;=2940127
	;;^DD(356.2,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBT(356,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.2,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(356.11,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356.11,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.2,0,"ID",.05)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.2,0,"ID",.08)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(36,+$P(^(0),U,8),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(36,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.2,0,"ID",1.05)
	;;=W ""
	;;^DD(356.2,0,"IX","AC",356.2,.04)
	;;=
	;;^DD(356.2,0,"IX","ACT",356.2,.11)
	;;=
	;;^DD(356.2,0,"IX","AD",356.2,.03)
	;;=
	;;^DD(356.2,0,"IX","ADFN",356.2,.05)
	;;=
	;;^DD(356.2,0,"IX","ADFN1",356.2,.01)
	;;=
	;;^DD(356.2,0,"IX","AE",356.2,.19)
	;;=
	;;^DD(356.2,0,"IX","AIACT",356.2,.08)
	;;=
	;;^DD(356.2,0,"IX","AIACT1",356.2,.11)
	;;=
	;;^DD(356.2,0,"IX","AP",356.2,.18)
	;;=
	;;^DD(356.2,0,"IX","APACT",356.2,.05)
	;;=
	;;^DD(356.2,0,"IX","APACT1",356.2,.11)
	;;=
	;;^DD(356.2,0,"IX","APEND",356.2,.24)
	;;=
	;;^DD(356.2,0,"IX","APRE",356.2,.02)
	;;=
	;;^DD(356.2,0,"IX","APRE1",356.2,.28)
	;;=
	;;^DD(356.2,0,"IX","ATIDT",356.2,.01)
	;;=
	;;^DD(356.2,0,"IX","ATIDT1",356.2,.02)
	;;=
	;;^DD(356.2,0,"IX","ATRP",356.2,.02)
	;;=
	;;^DD(356.2,0,"IX","ATRTP1",356.2,.04)
	;;=
	;;^DD(356.2,0,"IX","B",356.2,.01)
	;;=
	;;^DD(356.2,0,"IX","C",356.2,.02)
	;;=
	;;^DD(356.2,0,"IX","D",356.2,.05)
	;;=
	;;^DD(356.2,0,"NM","INSURANCE REVIEW")
	;;=
	;;^DD(356.2,0,"PT",356.2,.18)
	;;=
	;;^DD(356.2,.01,0)
	;;=REVIEW DATE^RD^^0;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.2,.01,1,0)
	;;=^.1
	;;^DD(356.2,.01,1,1,0)
	;;=356.2^B
	;;^DD(356.2,.01,1,1,1)
	;;=S ^IBT(356.2,"B",$E(X,1,30),DA)=""
	;;^DD(356.2,.01,1,1,2)
	;;=K ^IBT(356.2,"B",$E(X,1,30),DA)
	;;^DD(356.2,.01,1,2,0)
	;;=356.2^ATIDT^MUMPS
	;;^DD(356.2,.01,1,2,1)
	;;=S:$P(^IBT(356.2,DA,0),U,2) ^IBT(356.2,"ATIDT",+$P(^(0),U,2),-X,DA)=""
	;;^DD(356.2,.01,1,2,2)
	;;=K ^IBT(356.2,"ATIDT",+$P(^IBT(356.2,DA,0),U,2),-X,DA)
	;;^DD(356.2,.01,1,2,"%D",0)
	;;=^^2^2^2930818^^
	;;^DD(356.2,.01,1,2,"%D",1,0)
	;;=Cross-Reference of all entries by tracking ID and by inverse date so can
	;;^DD(356.2,.01,1,2,"%D",2,0)
	;;=list most recent first.
	;;^DD(356.2,.01,1,2,"DT")
	;;=2930818
	;;^DD(356.2,.01,1,3,0)
	;;=356.2^ADFN1^MUMPS

IBINI060
IBINI060	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.01,1,3,1)
	;;=S:$P(^IBT(356.2,DA,0),U,2) ^IBT(356.2,"ADFN"_+$P(^(0),U,2),X,DA)=""
	;;^DD(356.2,.01,1,3,2)
	;;=K ^IBT(356.2,"ADFN"_+$P(^IBT(356.2,DA,0),U,2),X,DA)
	;;^DD(356.2,.01,1,3,"%D",0)
	;;=^^1^1^2940213^
	;;^DD(356.2,.01,1,3,"%D",1,0)
	;;=Cross-reference used for quick look up of entries for a patient.
	;;^DD(356.2,.01,1,3,"DT")
	;;=2931207
	;;^DD(356.2,.01,3)
	;;=
	;;^DD(356.2,.01,21,0)
	;;=^^5^5^2930806^^^
	;;^DD(356.2,.01,21,1,0)
	;;=This is the date of the contact for this entry.
	;;^DD(356.2,.01,21,2,0)
	;;= 
	;;^DD(356.2,.01,21,3,0)
	;;=It is frequently necessary to call insurance companies for
	;;^DD(356.2,.01,21,4,0)
	;;=insurance verification, pre-certification reviews, continued stay review,
	;;^DD(356.2,.01,21,5,0)
	;;=appeals, etc.  This is the date that you called the insurance company.
	;;^DD(356.2,.01,"DT")
	;;=2931207
	;;^DD(356.2,.02,0)
	;;=TRACKING ID^P356'^IBT(356,^0;2^Q
	;;^DD(356.2,.02,1,0)
	;;=^.1
	;;^DD(356.2,.02,1,1,0)
	;;=356.2^C
	;;^DD(356.2,.02,1,1,1)
	;;=S ^IBT(356.2,"C",$E(X,1,30),DA)=""
	;;^DD(356.2,.02,1,1,2)
	;;=K ^IBT(356.2,"C",$E(X,1,30),DA)
	;;^DD(356.2,.02,1,1,"DT")
	;;=2930702
	;;^DD(356.2,.02,1,2,0)
	;;=356.2^ATRP^MUMPS
	;;^DD(356.2,.02,1,2,1)
	;;=S:$P(^IBT(356.2,DA,0),"^",4) ^IBT(356.2,"ATRTP",X,+$P(^(0),"^",4),DA)=""
	;;^DD(356.2,.02,1,2,2)
	;;=K ^IBT(356.2,"ATRTP",X,+$P(^IBT(356.2,DA,0),"^",4),DA)
	;;^DD(356.2,.02,1,2,"%D",0)
	;;=^^1^1^2930712^
	;;^DD(356.2,.02,1,2,"%D",1,0)
	;;=Index of all communications by tracking id and type.
	;;^DD(356.2,.02,1,2,"DT")
	;;=2930712
	;;^DD(356.2,.02,1,3,0)
	;;=356.2^ATIDT1^MUMPS
	;;^DD(356.2,.02,1,3,1)
	;;=S:$P(^IBT(356.2,DA,0),U) ^IBT(356.2,"ATIDT",X,-$P(^(0),U),DA)=""
	;;^DD(356.2,.02,1,3,2)
	;;=K ^IBT(356.2,"ATIDT",X,-$P(^IBT(356.2,DA,0),U),DA)
	;;^DD(356.2,.02,1,3,"%D",0)
	;;=^^2^2^2930728^^
	;;^DD(356.2,.02,1,3,"%D",1,0)
	;;=Cross-Reference of all entries by tracking ID and by inverse date so can
	;;^DD(356.2,.02,1,3,"%D",2,0)
	;;=list most recent first.
	;;^DD(356.2,.02,1,3,"DT")
	;;=2930728
	;;^DD(356.2,.02,1,4,0)
	;;=356.2^APRE^MUMPS
	;;^DD(356.2,.02,1,4,1)
	;;=S:$P(^IBT(356.2,DA,0),U,28) ^IBT(356.2,"APRE",X,$P(^(0),U,28),DA)=""
	;;^DD(356.2,.02,1,4,2)
	;;=K ^IBT(356.2,"APRE",X,+$P(^IBT(356.2,DA,0),U,28),DA)
	;;^DD(356.2,.02,1,4,"%D",0)
	;;=^^3^3^2930729^
	;;^DD(356.2,.02,1,4,"%D",1,0)
	;;=Cross-Reference of all pre-cert numbers by tracking ID.  This is used to
	;;^DD(356.2,.02,1,4,"%D",2,0)
	;;=display the Pre-cert number in the claims tracking screens and the
	;;^DD(356.2,.02,1,4,"%D",3,0)
	;;=Review edit screens.
	;;^DD(356.2,.02,1,4,"DT")
	;;=2930729
	;;^DD(356.2,.02,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,.02,21,1,0)
	;;=This is the Claims Tracking entry that was the primary episode of care
	;;^DD(356.2,.02,21,2,0)
	;;=that caused this contact.  Generally contacts are associated with
	;;^DD(356.2,.02,21,3,0)
	;;=an episode of care but occasionally they are not.
	;;^DD(356.2,.02,"DT")
	;;=2930729
	;;^DD(356.2,.03,0)
	;;=RELATED REVIEW^P356.1'^IBT(356.1,^0;3^Q
	;;^DD(356.2,.03,1,0)
	;;=^.1
	;;^DD(356.2,.03,1,1,0)
	;;=356.2^AD
	;;^DD(356.2,.03,1,1,1)
	;;=S ^IBT(356.2,"AD",$E(X,1,30),DA)=""
	;;^DD(356.2,.03,1,1,2)
	;;=K ^IBT(356.2,"AD",$E(X,1,30),DA)
	;;^DD(356.2,.03,1,1,"DT")
	;;=2930715
	;;^DD(356.2,.03,3)
	;;=
	;;^DD(356.2,.03,21,0)
	;;=^^5^5^2930806^^
	;;^DD(356.2,.03,21,1,0)
	;;=This is the review in the Claims Tracking Reviews file that this insurance
	;;^DD(356.2,.03,21,2,0)
	;;=contact is associated with.
	;;^DD(356.2,.03,21,3,0)
	;;= 
	;;^DD(356.2,.03,21,4,0)
	;;=This field will be system generated wheneve there is a utilization review

IBINI061
IBINI061	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.03,21,5,0)
	;;=entry created for a case that is also an insurance case.
	;;^DD(356.2,.03,"DT")
	;;=2930715
	;;^DD(356.2,.04,0)
	;;=TYPE OF CONTACT^R*P356.11'^IBE(356.11,^0;4^S DIC("S")="I $$CONTCT^IBTRC(DA,Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.2,.04,1,0)
	;;=^.1
	;;^DD(356.2,.04,1,1,0)
	;;=356.2^AC
	;;^DD(356.2,.04,1,1,1)
	;;=S ^IBT(356.2,"AC",$E(X,1,30),DA)=""
	;;^DD(356.2,.04,1,1,2)
	;;=K ^IBT(356.2,"AC",$E(X,1,30),DA)
	;;^DD(356.2,.04,1,1,"DT")
	;;=2930712
	;;^DD(356.2,.04,1,2,0)
	;;=356.2^ATRTP1^MUMPS
	;;^DD(356.2,.04,1,2,1)
	;;=S:$P(^IBT(356.2,DA,0),U,2) ^IBT(356.2,"ATRTP",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.2,.04,1,2,2)
	;;=K ^IBT(356.2,"ATRTP",+$P(^IBT(356.2,DA,0),U,2),X,DA)
	;;^DD(356.2,.04,1,2,"%D",0)
	;;=^^1^1^2930712^
	;;^DD(356.2,.04,1,2,"%D",1,0)
	;;=Index of all communications by tracking id and type.
	;;^DD(356.2,.04,1,2,"DT")
	;;=2930712
	;;^DD(356.2,.04,3)
	;;=
	;;^DD(356.2,.04,12)
	;;=If not associated with a tracking entry, only a patient or other type of contact may be selected.
	;;^DD(356.2,.04,12.1)
	;;=S DIC("S")="I $$CONTCT^IBTRC(DA,Y)"
	;;^DD(356.2,.04,21,0)
	;;=^^9^9^2940112^^^^
	;;^DD(356.2,.04,21,1,0)
	;;=This is the type of contact with a patient or insurance company that
	;;^DD(356.2,.04,21,2,0)
	;;=you are making.  If this is a contact with a patient then select patient.
	;;^DD(356.2,.04,21,3,0)
	;;=If this is a contact with an insurance company then indicate if this
	;;^DD(356.2,.04,21,4,0)
	;;=is for pre-certification, urgent/emergent admission,
	;;^DD(356.2,.04,21,5,0)
	;;=continued stay, discharge, outpatient treatment, or an appeal.  
	;;^DD(356.2,.04,21,6,0)
	;;=You may also select other if this is a contact that you wish to record
	;;^DD(356.2,.04,21,7,0)
	;;=but does not meet one of these categories.
	;;^DD(356.2,.04,21,8,0)
	;;= 
	;;^DD(356.2,.04,21,9,0)
	;;=To add an appeal it must be associated with a denial.
	;;^DD(356.2,.04,"DT")
	;;=2930803
	;;^DD(356.2,.05,0)
	;;=PATIENT^P2'^DPT(^0;5^Q
	;;^DD(356.2,.05,1,0)
	;;=^.1
	;;^DD(356.2,.05,1,1,0)
	;;=356.2^D
	;;^DD(356.2,.05,1,1,1)
	;;=S ^IBT(356.2,"D",$E(X,1,30),DA)=""
	;;^DD(356.2,.05,1,1,2)
	;;=K ^IBT(356.2,"D",$E(X,1,30),DA)
	;;^DD(356.2,.05,1,1,"DT")
	;;=2930729
	;;^DD(356.2,.05,1,2,0)
	;;=356.2^APACT^MUMPS
	;;^DD(356.2,.05,1,2,1)
	;;=S:$P(^IBT(356.2,DA,0),U,11) ^IBT(356.2,"APACT",X,+$P(^(0),U,11),DA)=""
	;;^DD(356.2,.05,1,2,2)
	;;=K ^IBT(356.2,"APACT",X,+$P(^IBT(356.2,DA,0),U,11),DA)
	;;^DD(356.2,.05,1,2,"%D",0)
	;;=^^2^2^2930811^^^
	;;^DD(356.2,.05,1,2,"%D",1,0)
	;;=Index of insurance contacts with actions by patient by action.
	;;^DD(356.2,.05,1,2,"%D",2,0)
	;;=Used primarily to find denials by patient.
	;;^DD(356.2,.05,1,2,"DT")
	;;=2930811
	;;^DD(356.2,.05,1,3,0)
	;;=^^TRIGGER^356.2^1.05
	;;^DD(356.2,.05,1,3,1)
	;;=X ^DD(356.2,.05,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBT(356.2,D0,1)):^(1),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=$P($$HIP^IBTRC3(DA),"^",1) X ^DD(356.2,.05,1,3,1.4)
	;;^DD(356.2,.05,1,3,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBT(356.2,D0,1)):^(1),1:""),Y=$P(Y(1),U,5) X:$D(^DD(356.2,1.05,2)) ^(2) S X=Y=""
	;;^DD(356.2,.05,1,3,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,5)=DIV,DIH=356.2,DIG=1.05 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.05,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,1)):^(1),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(356.2,.05,1,3,2.4)
	;;^DD(356.2,.05,1,3,2.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),1)):^(1),1:""),DIV=X S $P(^(1),U,5)=DIV,DIH=356.2,DIG=1.05 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI062
IBINI062	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.05,1,3,"%D",0)
	;;=^^1^1^2930930^
	;;^DD(356.2,.05,1,3,"%D",1,0)
	;;=Trigger of Primary Health Insurance Policy.
	;;^DD(356.2,.05,1,3,"CREATE CONDITION")
	;;=#1.05=""
	;;^DD(356.2,.05,1,3,"CREATE VALUE")
	;;=S X=$P($$HIP^IBTRC3(DA),"^",1)
	;;^DD(356.2,.05,1,3,"DELETE VALUE")
	;;=@
	;;^DD(356.2,.05,1,3,"DT")
	;;=2930930
	;;^DD(356.2,.05,1,3,"FIELD")
	;;=#1.05
	;;^DD(356.2,.05,1,4,0)
	;;=356.2^ADFN^MUMPS
	;;^DD(356.2,.05,1,4,1)
	;;=S ^IBT(356.2,"ADFN"_X,+^IBT(356.2,DA,0),DA)=""
	;;^DD(356.2,.05,1,4,2)
	;;=K ^IBT(356.2,"ADFN"_X,+^IBT(356.2,DA,0),DA)
	;;^DD(356.2,.05,1,4,"%D",0)
	;;=^^1^1^2931207^^
	;;^DD(356.2,.05,1,4,"%D",1,0)
	;;=cross-reference used for speedy lookups.
	;;^DD(356.2,.05,1,4,"DT")
	;;=2931109
	;;^DD(356.2,.05,21,0)
	;;=^^1^1^2930729^
	;;^DD(356.2,.05,21,1,0)
	;;=Enter the patient that was contacted.  
	;;^DD(356.2,.05,"DT")
	;;=2931109
	;;^DD(356.2,.06,0)
	;;=PERSON CONTACTED^F^^0;6^K:$L(X)>30!($L(X)<3) X
	;;^DD(356.2,.06,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(356.2,.06,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,.06,21,1,0)
	;;=This is the name of the person you contacted.  This is a free text name
	;;^DD(356.2,.06,21,2,0)
	;;=that can be entered.  It is recommended that you use the format of
	;;^DD(356.2,.06,21,3,0)
	;;=Firstname MI Lastname, just as they would say it to you.
	;;^DD(356.2,.06,"DT")
	;;=2930610
	;;^DD(356.2,.07,0)
	;;=CONTACT PHONE #^F^^0;7^K:$L(X)>20!($L(X)<7) X
	;;^DD(356.2,.07,3)
	;;=Answer must be 7-20 characters in length.
	;;^DD(356.2,.07,21,0)
	;;=^^6^6^2930806^
	;;^DD(356.2,.07,21,1,0)
	;;=This is the phone number of the person you contacted.
	;;^DD(356.2,.07,21,2,0)
	;;= 
	;;^DD(356.2,.07,21,3,0)
	;;=If you contacted an insurance company and this number is not in the
	;;^DD(356.2,.07,21,4,0)
	;;=insurance company file, then you may want to enter it into that file
	;;^DD(356.2,.07,21,5,0)
	;;=as well.  The number entered here will only be seen when looking
	;;^DD(356.2,.07,21,6,0)
	;;=at this contact.
	;;^DD(356.2,.07,"DT")
	;;=2930610
	;;^DD(356.2,.08,0)
	;;=INSURANCE COMPANY CONTACTED^P36'^DIC(36,^0;8^Q
	;;^DD(356.2,.08,1,0)
	;;=^.1
	;;^DD(356.2,.08,1,1,0)
	;;=356.2^AIACT^MUMPS
	;;^DD(356.2,.08,1,1,1)
	;;=S:$P(^IBT(356.2,DA,0),U,11) ^IBT(356.2,"AIACT",X,+$P(^(0),U,11),DA)=""
	;;^DD(356.2,.08,1,1,2)
	;;=K ^IBT(356.2,"AIACT",X,+$P(^IBT(356.2,DA,0),U,11),DA)
	;;^DD(356.2,.08,1,1,"%D",0)
	;;=^^2^2^2930811^^
	;;^DD(356.2,.08,1,1,"%D",1,0)
	;;=Index of insurance contacts with actions by patient by action.
	;;^DD(356.2,.08,1,1,"%D",2,0)
	;;=Used primarily to find denials by patient.
	;;^DD(356.2,.08,1,1,"DT")
	;;=2930811
	;;^DD(356.2,.08,5,1,0)
	;;=356.2^1.05^1
	;;^DD(356.2,.08,9)
	;;=^
	;;^DD(356.2,.08,21,0)
	;;=^^2^2^2930729^
	;;^DD(356.2,.08,21,1,0)
	;;=This is the insurance company that is being contacted.  This is
	;;^DD(356.2,.08,21,2,0)
	;;=generally triggered by the HEALTH INSURANCE POLICY field.
	;;^DD(356.2,.08,"DT")
	;;=2930811
	;;^DD(356.2,.09,0)
	;;=CALL REFERENCE NUMBER^F^^0;9^K:$L(X)>15!($L(X)<3) X
	;;^DD(356.2,.09,3)
	;;=Answer must be 3-15 characters in length.
	;;^DD(356.2,.09,21,0)
	;;=^^4^4^2930806^
	;;^DD(356.2,.09,21,1,0)
	;;=If the company you called gave you a reference number for the call
	;;^DD(356.2,.09,21,2,0)
	;;=then enter that reference number here.  Many companies will issue
	;;^DD(356.2,.09,21,3,0)
	;;=reference numbers so that they can track their calls and allow
	;;^DD(356.2,.09,21,4,0)
	;;=reference back to them by others.
	;;^DD(356.2,.09,"DT")
	;;=2930610
	;;^DD(356.2,.1,0)
	;;=APPEAL STATUS^S^1:OPEN;2:PENDING;3:CLOSED;4:REFERED TO DISTRICT COUNSEL;^0;10^Q

IBINI063
IBINI063	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.1,1,0)
	;;=^.1
	;;^DD(356.2,.1,1,1,0)
	;;=^^TRIGGER^356.2^.24
	;;^DD(356.2,.1,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.2,DA,0),U,10)=3 I X S X=DIV S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" X ^DD(356.2,.1,1,1,1.4)
	;;^DD(356.2,.1,1,1,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,24)=DIV,DIH=356.2,DIG=.24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.1,1,1,2)
	;;=Q
	;;^DD(356.2,.1,1,1,"CREATE CONDITION")
	;;=I $P(^IBT(356.2,DA,0),U,10)=3
	;;^DD(356.2,.1,1,1,"CREATE VALUE")
	;;=@
	;;^DD(356.2,.1,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.2,.1,1,1,"DT")
	;;=2940207
	;;^DD(356.2,.1,1,1,"FIELD")
	;;=#.24
	;;^DD(356.2,.1,21,0)
	;;=^^3^3^2930809^^
	;;^DD(356.2,.1,21,1,0)
	;;=If this Insurance Action is an appeal, this is the status of the appeal.
	;;^DD(356.2,.1,21,2,0)
	;;=Appeals that are OPEN will continue to be on the list of pending work
	;;^DD(356.2,.1,21,3,0)
	;;=based on the next review date.
	;;^DD(356.2,.1,"DT")
	;;=2940207
	;;^DD(356.2,.11,0)
	;;=ACTION^*P356.7'^IBE(356.7,^0;11^S DIC("S")="N ACODE,CTYPE S ACODE=$P(^(0),U,3),CTYPE=$P(^IBT(356.2,DA,0),U,4) I $$SCREEN^IBTRC1(ACODE,CTYPE)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.2,.11,1,0)
	;;=^.1
	;;^DD(356.2,.11,1,1,0)
	;;=356.2^ACT
	;;^DD(356.2,.11,1,1,1)
	;;=S ^IBT(356.2,"ACT",$E(X,1,30),DA)=""
	;;^DD(356.2,.11,1,1,2)
	;;=K ^IBT(356.2,"ACT",$E(X,1,30),DA)
	;;^DD(356.2,.11,1,1,"%D",0)
	;;=^^1^1^2930908^^^
	;;^DD(356.2,.11,1,1,"%D",1,0)
	;;=Regular cross refence of actions
	;;^DD(356.2,.11,1,1,"DT")
	;;=2930811
	;;^DD(356.2,.11,1,2,0)
	;;=356.2^APACT1^MUMPS
	;;^DD(356.2,.11,1,2,1)
	;;=S:$P(^IBT(356.2,DA,0),U,5) ^IBT(356.2,"APACT",+$P(^(0),U,5),X,DA)=""
	;;^DD(356.2,.11,1,2,2)
	;;=K ^IBT(356.2,"APACT",+$P(^IBT(356.2,DA,0),U,5),X,DA)
	;;^DD(356.2,.11,1,2,"%D",0)
	;;=^^2^2^2930811^^^^
	;;^DD(356.2,.11,1,2,"%D",1,0)
	;;=Index of insurance contacts with actions by patient by action.
	;;^DD(356.2,.11,1,2,"%D",2,0)
	;;=Used primarily to find denials by patient.
	;;^DD(356.2,.11,1,2,"DT")
	;;=2930811
	;;^DD(356.2,.11,1,3,0)
	;;=356.2^AIACT1^MUMPS
	;;^DD(356.2,.11,1,3,1)
	;;=S:$P(^IBT(356.2,DA,0),U,8) ^IBT(356.2,"AIACT",+$P(^(0),U,8),X,DA)=""
	;;^DD(356.2,.11,1,3,2)
	;;=K ^IBT(356.2,"AIACT",+$P(^IBT(356.2,DA,0),U,8),X,DA)
	;;^DD(356.2,.11,1,3,"%D",0)
	;;=^^2^2^2930908^^^^
	;;^DD(356.2,.11,1,3,"%D",1,0)
	;;=Index of insurance contacts with actions by insurance co. by type of
	;;^DD(356.2,.11,1,3,"%D",2,0)
	;;=action.  Used primarily to find denials by insurance company.
	;;^DD(356.2,.11,1,3,"DT")
	;;=2930811
	;;^DD(356.2,.11,1,4,0)
	;;=^^TRIGGER^356.2^.19
	;;^DD(356.2,.11,1,4,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.2,DA,0),"^",19)=1 I X S X=DIV S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(356.2,.11,1,4,1.4)
	;;^DD(356.2,.11,1,4,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,19)=DIV,DIH=356.2,DIG=.19 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.11,1,4,2)
	;;=Q
	;;^DD(356.2,.11,1,4,"%D",0)
	;;=^^2^2^2931005^
	;;^DD(356.2,.11,1,4,"%D",1,0)
	;;=Trigger Review Status from entered to Pending when an action is entered.
	;;^DD(356.2,.11,1,4,"%D",2,0)
	;;= 
	;;^DD(356.2,.11,1,4,"CREATE CONDITION")
	;;=I $P(^IBT(356.2,DA,0),"^",19)=1
	;;^DD(356.2,.11,1,4,"CREATE VALUE")
	;;=S X=2
	;;^DD(356.2,.11,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.2,.11,1,4,"DT")
	;;=2931005
	;;^DD(356.2,.11,1,4,"FIELD")
	;;=#.19
	;;^DD(356.2,.11,3)
	;;=Select the action taken by the insurance company on this call.

IBINI064
IBINI064	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.11,12)
	;;=Only actions appropriate for the type of contact may be selected!
	;;^DD(356.2,.11,12.1)
	;;=S DIC("S")="N ACODE,CTYPE S ACODE=$P(^(0),U,3),CTYPE=$P(^IBT(356.2,DA,0),U,4) I $$SCREEN^IBTRC1(ACODE,CTYPE)"
	;;^DD(356.2,.11,21,0)
	;;=^^10^10^2940213^^^^
	;;^DD(356.2,.11,21,1,0)
	;;=Enter the action that the insurance company took on this call.  
	;;^DD(356.2,.11,21,2,0)
	;;=Each contact can only have one action.  If you need to enter
	;;^DD(356.2,.11,21,3,0)
	;;=more than one action, enter another contact.  If you change the
	;;^DD(356.2,.11,21,4,0)
	;;=action, previously entered information will be deleted.
	;;^DD(356.2,.11,21,5,0)
	;;= 
	;;^DD(356.2,.11,21,6,0)
	;;=If this contact was with an insurance company as part of an admission
	;;^DD(356.2,.11,21,7,0)
	;;=or continued stay review then you should enter the action that the
	;;^DD(356.2,.11,21,8,0)
	;;=insurance company took on thecall.  Based upon the answer to
	;;^DD(356.2,.11,21,9,0)
	;;=this question along with the type of contact, you will be prompted
	;;^DD(356.2,.11,21,10,0)
	;;=for varying information.
	;;^DD(356.2,.11,"DT")
	;;=2931007
	;;^DD(356.2,.12,0)
	;;=CARE AUTHORIZED FROM^RDX^^0;12^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) K:'$$AFDT^IBTUTL4(DA,X) X
	;;^DD(356.2,.12,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,.12,21,0)
	;;=^^3^3^2930806^^
	;;^DD(356.2,.12,21,1,0)
	;;=If the insurance company pre-approved the admission for
	;;^DD(356.2,.12,21,2,0)
	;;=this patient, this is the beginning date that they approved care
	;;^DD(356.2,.12,21,3,0)
	;;=from.
	;;^DD(356.2,.12,"DT")
	;;=2940127
	;;^DD(356.2,.13,0)
	;;=CARE AUTHORIZED TO^RDX^^0;13^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) K:'$$ATDT^IBTUTL4(DA,X) X
	;;^DD(356.2,.13,1,0)
	;;=^.1
	;;^DD(356.2,.13,1,1,0)
	;;=^^TRIGGER^356.2^.24
	;;^DD(356.2,.13,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X=DIV S X=$P(^IBT(356.2,DA,0),U,13) X ^DD(356.2,.13,1,1,1.4)
	;;^DD(356.2,.13,1,1,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,24)=DIV,DIH=356.2,DIG=.24 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.13,1,1,2)
	;;=Q
	;;^DD(356.2,.13,1,1,"CREATE VALUE")
	;;=S X=$P(^IBT(356.2,DA,0),U,13)
	;;^DD(356.2,.13,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.2,.13,1,1,"FIELD")
	;;=#.24
	;;^DD(356.2,.13,3)
	;;=
	;;^DD(356.2,.13,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,.13,21,0)
	;;=^^6^6^2940213^^
	;;^DD(356.2,.13,21,1,0)
	;;=If the insurance company pre-approved the admission for this
	;;^DD(356.2,.13,21,2,0)
	;;=patient, this is the ending date of the care approved. 
	;;^DD(356.2,.13,21,3,0)
	;;= 
	;;^DD(356.2,.13,21,4,0)
	;;=Typically insurance companies will approve only a certain number of
	;;^DD(356.2,.13,21,5,0)
	;;=days of care for reimbursement.  This is the ending date of the number
	;;^DD(356.2,.13,21,6,0)
	;;=of days that they approved for reimbursement.
	;;^DD(356.2,.13,"DT")
	;;=2940127
	;;^DD(356.2,.14,0)
	;;=DIAGNOSIS AUTHORIZED^*P80'^ICD9(^0;14^S DIC("S")="I '$P(^(0),U,9)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.2,.14,12)
	;;=Only Active Diagnosis may be selected
	;;^DD(356.2,.14,12.1)
	;;=S DIC("S")="I '$P(^(0),U,9)"
	;;^DD(356.2,.14,21,0)
	;;=^^6^6^2930928^^
	;;^DD(356.2,.14,21,1,0)
	;;=If the insurance company approved the care for this patient for 
	;;^DD(356.2,.14,21,2,0)
	;;=reimbursement this is the diagnosis that they approved.
	;;^DD(356.2,.14,21,3,0)
	;;= 
	;;^DD(356.2,.14,21,4,0)
	;;=Typically when an insurance company approves care for reimbursement

IBINI065
IBINI065	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.14,21,5,0)
	;;=they approve it for a specific diagnosis.  This is the diagnosis that
	;;^DD(356.2,.14,21,6,0)
	;;=they approved.
	;;^DD(356.2,.14,23,0)
	;;=^^2^2^2930928^
	;;^DD(356.2,.14,23,1,0)
	;;= 
	;;^DD(356.2,.14,23,2,0)
	;;= 
	;;^DD(356.2,.14,"DT")
	;;=2930928
	;;^DD(356.2,.15,0)
	;;=DATES OF DENIAL FROM^RDX^^0;15^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) K:'$$DFDT^IBTUTL4(DA,X) X
	;;^DD(356.2,.15,3)
	;;=
	;;^DD(356.2,.15,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,.15,21,0)
	;;=^^4^4^2940127^^
	;;^DD(356.2,.15,21,1,0)
	;;=If the insurance company disapproved or denied pre-approving
	;;^DD(356.2,.15,21,2,0)
	;;=the care for this patient, this is the beginning date of care
	;;^DD(356.2,.15,21,3,0)
	;;=that they denied.  For some patients there may be both a 
	;;^DD(356.2,.15,21,4,0)
	;;=number of approved and denied days.
	;;^DD(356.2,.15,"DT")
	;;=2940127
	;;^DD(356.2,.16,0)
	;;=DATES OF DENIAL TO^RDX^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X) K:'$$DTDT^IBTUTL4(DA,X) X
	;;^DD(356.2,.16,1,0)
	;;=^.1
	;;^DD(356.2,.16,1,1,0)
	;;=^^TRIGGER^356.2^.24
	;;^DD(356.2,.16,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X=DIV S X=$P(^IBT(356.2,DA,0),U,16) X ^DD(356.2,.16,1,1,1.4)
	;;^DD(356.2,.16,1,1,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,24)=DIV,DIH=356.2,DIG=.24 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.16,1,1,2)
	;;=Q
	;;^DD(356.2,.16,1,1,"CREATE VALUE")
	;;=S X=$P(^IBT(356.2,DA,0),U,16)
	;;^DD(356.2,.16,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(356.2,.16,1,1,"FIELD")
	;;=#.24
	;;^DD(356.2,.16,3)
	;;=
	;;^DD(356.2,.16,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,.16,21,0)
	;;=^^4^4^2930806^
	;;^DD(356.2,.16,21,1,0)
	;;=If the insurance company disapproved or denied pre-approving  
	;;^DD(356.2,.16,21,2,0)
	;;=the care for this patient, this is the ending date of care
	;;^DD(356.2,.16,21,3,0)
	;;=that they denied.  For some patients there may be both a 
	;;^DD(356.2,.16,21,4,0)
	;;=number of approved and denied days.
	;;^DD(356.2,.16,"DT")
	;;=2940127
	;;^DD(356.2,.17,0)
	;;=METHOD OF CONTACT^S^1:PHONE;2:MAIL;3:OVERNIGHT MAIL;4:PERSONAL;5:VOICE MAIL;6:OTHER;^0;17^Q
	;;^DD(356.2,.17,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.2,.17,21,1,0)
	;;=This is the method that you used to contact the person contacted
	;;^DD(356.2,.17,21,2,0)
	;;=in this entry.  Most contacts will be by phone but many others will
	;;^DD(356.2,.17,21,3,0)
	;;=be by mail.
	;;^DD(356.2,.17,"DT")
	;;=2930915
	;;^DD(356.2,.18,0)
	;;=PARENT REVIEW^*P356.2'^IBT(356.2,^0;18^S DIC("S")="N TYPE S TYPE=$P(^IBE(356.7,+$P(^(0),U,11),0),U,3) I TYPE=20!(TYPE=30)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.2,.18,1,0)
	;;=^.1
	;;^DD(356.2,.18,1,1,0)
	;;=356.2^AP
	;;^DD(356.2,.18,1,1,1)
	;;=S ^IBT(356.2,"AP",$E(X,1,30),DA)=""
	;;^DD(356.2,.18,1,1,2)
	;;=K ^IBT(356.2,"AP",$E(X,1,30),DA)
	;;^DD(356.2,.18,1,1,"DT")
	;;=2930811
	;;^DD(356.2,.18,12)
	;;=Only penalties and denials can be appealed.
	;;^DD(356.2,.18,12.1)
	;;=S DIC("S")="N TYPE S TYPE=$P(^IBE(356.7,+$P(^(0),U,11),0),U,3) I TYPE=20!(TYPE=30)"
	;;^DD(356.2,.18,21,0)
	;;=^^3^3^2940213^^^^
	;;^DD(356.2,.18,21,1,0)
	;;=This is the first contact in a series of contacts.  This field will
	;;^DD(356.2,.18,21,2,0)
	;;=generally be system generated.  When adding an appeal to a denied 
	;;^DD(356.2,.18,21,3,0)
	;;=claim, this will be the denial contact that is being appealed.
	;;^DD(356.2,.18,"DT")
	;;=2930907
	;;^DD(356.2,.19,0)
	;;=REVIEW STATUS^S^0:INACTIVE;1:ENTERED;2:PENDING;10:COMPLETE;^0;19^Q

IBINI066
IBINI066	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.19,1,0)
	;;=^.1
	;;^DD(356.2,.19,1,1,0)
	;;=356.2^AE
	;;^DD(356.2,.19,1,1,1)
	;;=S ^IBT(356.2,"AE",$E(X,1,30),DA)=""
	;;^DD(356.2,.19,1,1,2)
	;;=K ^IBT(356.2,"AE",$E(X,1,30),DA)
	;;^DD(356.2,.19,1,1,"DT")
	;;=2940207
	;;^DD(356.2,.19,1,2,0)
	;;=^^TRIGGER^356.2^.24
	;;^DD(356.2,.19,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.2,DA,0),U,19)'=10 I X S X=DIV S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(356.2,.19,1,2,1.4)
	;;^DD(356.2,.19,1,2,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,24)=DIV,DIH=356.2,DIG=.24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.19,1,2,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^IBT(356.2,DA,0),U,19)=10 I X S X=DIV S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,24),X=X S DIU=X K Y S X="" X ^DD(356.2,.19,1,2,2.4)
	;;^DD(356.2,.19,1,2,2.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,24)=DIV,DIH=356.2,DIG=.24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,.19,1,2,"%D",0)
	;;=^^1^1^2940207^
	;;^DD(356.2,.19,1,2,"%D",1,0)
	;;=This trigger deletes the NEXT REVIEW DATE when completing a review.
	;;^DD(356.2,.19,1,2,"CREATE CONDITION")
	;;=I $P(^IBT(356.2,DA,0),U,19)'=10
	;;^DD(356.2,.19,1,2,"CREATE VALUE")
	;;=S X=DT
	;;^DD(356.2,.19,1,2,"DELETE CONDITION")
	;;=I $P(^IBT(356.2,DA,0),U,19)=10
	;;^DD(356.2,.19,1,2,"DELETE VALUE")
	;;=@
	;;^DD(356.2,.19,1,2,"DT")
	;;=2940207
	;;^DD(356.2,.19,1,2,"FIELD")
	;;=#.24
	;;^DD(356.2,.19,3)
	;;=
	;;^DD(356.2,.19,5,1,0)
	;;=356.2^.11^4
	;;^DD(356.2,.19,21,0)
	;;=^^2^2^2930907^^^
	;;^DD(356.2,.19,21,1,0)
	;;=Enter whether or not this entry is active or not.  Inactivating an
	;;^DD(356.2,.19,21,2,0)
	;;=entry has the same effect as deleting the entry.
	;;^DD(356.2,.19,"DT")
	;;=2940207
	;;^DD(356.2,.2,0)
	;;=CASE PENDING^S^1:UR/CLINICAL INFORMATION;2:PENDING MEDICAL REVIEW;3:OTHER;^0;20^Q
	;;^DD(356.2,.2,21,0)
	;;=^^4^4^2930806^
	;;^DD(356.2,.2,21,1,0)
	;;=If the action by the insurance company on this contact is pending, then
	;;^DD(356.2,.2,21,2,0)
	;;=this is what the case is pending for.  Generally cases are pending
	;;^DD(356.2,.2,21,3,0)
	;;=further UR/Clinical information from the site or Medical Review at
	;;^DD(356.2,.2,21,4,0)
	;;=the insurance company.
	;;^DD(356.2,.2,"DT")
	;;=2930610
	;;^DD(356.2,.21,0)
	;;=NO COVERAGE^S^1:PATIENT NOT ELIGIBLE;2:SERVICE NOT PROGRAM BENEFIT;3:COVERAGE CANCELED BEFORE TREATMENT;4:OTHER;^0;21^Q
	;;^DD(356.2,.21,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,.21,21,1,0)
	;;=If the action by the insurance company on this contact was that
	;;^DD(356.2,.21,21,2,0)
	;;=the patient was not covered by this carrier for this care then
	;;^DD(356.2,.21,21,3,0)
	;;=this is the reason that they claim no coverge.
	;;^DD(356.2,.21,"DT")
	;;=2930610
	;;^DD(356.2,.22,0)
	;;=FOLLOW-UP WITH APPEAL^S^1:YES;0:NO;^0;22^Q
	;;^DD(356.2,.22,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,.22,21,1,0)
	;;=If the action by the insurance company on this contact was a denial,
	;;^DD(356.2,.22,21,2,0)
	;;=then enter whether you wish to follow up with an appeal.  If you
	;;^DD(356.2,.22,21,3,0)
	;;=answer 'YES' then this will be included on your Pending Work.
	;;^DD(356.2,.22,"DT")
	;;=2930610
	;;^DD(356.2,.23,0)
	;;=TYPE OF APPEAL^S^1:CLINICAL;2:ADMINISTRATIVE;^0;23^Q
	;;^DD(356.2,.23,21,0)
	;;=^^2^2^2930806^
	;;^DD(356.2,.23,21,1,0)
	;;=If you are appealing the decision of an insurance company enter whether
	;;^DD(356.2,.23,21,2,0)
	;;=this is a clinical or administrative appeal.

IBINI067
IBINI067	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.23,"DT")
	;;=2930610
	;;^DD(356.2,.24,0)
	;;=NEXT REVIEW DATE^D^^0;24^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.2,.24,1,0)
	;;=^.1
	;;^DD(356.2,.24,1,1,0)
	;;=356.2^APEND
	;;^DD(356.2,.24,1,1,1)
	;;=S ^IBT(356.2,"APEND",$E(X,1,30),DA)=""
	;;^DD(356.2,.24,1,1,2)
	;;=K ^IBT(356.2,"APEND",$E(X,1,30),DA)
	;;^DD(356.2,.24,1,1,"%D",0)
	;;=^^1^1^2930804^
	;;^DD(356.2,.24,1,1,"%D",1,0)
	;;=This cross-refence is used to find contacts that need futher action.
	;;^DD(356.2,.24,1,1,"DT")
	;;=2930804
	;;^DD(356.2,.24,5,1,0)
	;;=356.2^.13^1
	;;^DD(356.2,.24,5,2,0)
	;;=356.2^.16^1
	;;^DD(356.2,.24,5,3,0)
	;;=356.2^.19^2
	;;^DD(356.2,.24,5,4,0)
	;;=356.2^.1^1
	;;^DD(356.2,.24,21,0)
	;;=^^9^9^2940213^^
	;;^DD(356.2,.24,21,1,0)
	;;=This is the date that this should show up on your Pending Work list.  If
	;;^DD(356.2,.24,21,2,0)
	;;=you have entered an admission review with a next review date in three
	;;^DD(356.2,.24,21,3,0)
	;;=days, you will, in three days, have either a continued stay review or
	;;^DD(356.2,.24,21,4,0)
	;;=a discharge review to do depending on the patient's status.  If this
	;;^DD(356.2,.24,21,5,0)
	;;=is a denial contact an the next review date is in three days, in three
	;;^DD(356.2,.24,21,6,0)
	;;=days you will show and appeal that needs to be done.  Etc.
	;;^DD(356.2,.24,21,7,0)
	;;= 
	;;^DD(356.2,.24,21,8,0)
	;;=If no entry is in this field then you will not be reminded of pending
	;;^DD(356.2,.24,21,9,0)
	;;=work.
	;;^DD(356.2,.24,"DT")
	;;=2930804
	;;^DD(356.2,.25,0)
	;;=NUMBER OF DAYS PENDING APPEAL^NJ3,0^^0;25^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.2,.25,3)
	;;=Type a Number between 1 and 999, 0 Decimal Digits
	;;^DD(356.2,.25,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,.25,21,1,0)
	;;=If the insurance company denied reimbursement for days of care, either
	;;^DD(356.2,.25,21,2,0)
	;;=in part or in total, and you are appealing that denial, then enter the
	;;^DD(356.2,.25,21,3,0)
	;;=number of days being appealed.
	;;^DD(356.2,.25,"DT")
	;;=2930812
	;;^DD(356.2,.26,0)
	;;=OUTPATIENT TREATMENT^F^^0;26^K:$L(X)>20!($L(X)<3) X
	;;^DD(356.2,.26,3)
	;;=Answer must be 3-20 characters in length.
	;;^DD(356.2,.26,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.2,.26,21,1,0)
	;;=If this contact is to determine if a particular outpatient
	;;^DD(356.2,.26,21,2,0)
	;;=treatment will be authorized for reimbursement, this is the 
	;;^DD(356.2,.26,21,3,0)
	;;=outpatient treatment that is authorized.  Enter the free-text
	;;^DD(356.2,.26,21,4,0)
	;;=description of the outpatient treatment.
	;;^DD(356.2,.26,"DT")
	;;=2930610
	;;^DD(356.2,.27,0)
	;;=TREATMENT AUTHORIZED^S^1:YES;0:NO;^0;27^Q
	;;^DD(356.2,.27,21,0)
	;;=^^5^5^2940213^^^
	;;^DD(356.2,.27,21,1,0)
	;;=Entry 'YES' if this was authorized or 'NO' if it was not authorized.
	;;^DD(356.2,.27,21,2,0)
	;;= 
	;;^DD(356.2,.27,21,3,0)
	;;=If this contact is to determine if a particular outpatient 
	;;^DD(356.2,.27,21,4,0)
	;;=treatment is authorized for reimbursement, then this is
	;;^DD(356.2,.27,21,5,0)
	;;=whether or not the treatment was authorized.  
	;;^DD(356.2,.27,"DT")
	;;=2930610
	;;^DD(356.2,.28,0)
	;;=AUTHORIZATION NUMBER^F^^0;28^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>18!($L(X)<3) X
	;;^DD(356.2,.28,1,0)
	;;=^.1
	;;^DD(356.2,.28,1,1,0)
	;;=356.2^APRE1^MUMPS
	;;^DD(356.2,.28,1,1,1)
	;;=S:$P(^IBT(356.2,DA,0),U,2) ^IBT(356.2,"APRE",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.2,.28,1,1,2)
	;;=K ^IBT(356.2,"APRE",+$P(^IBT(356.2,DA,0),U,2),X,DA)
	;;^DD(356.2,.28,1,1,"%D",0)
	;;=^^1^1^2930729^
	;;^DD(356.2,.28,1,1,"%D",1,0)
	;;=Cross-reference of pre-cert numbers by tracking id.

IBINI068
IBINI068	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,.28,1,1,"DT")
	;;=2930729
	;;^DD(356.2,.28,3)
	;;=Answer must be 3-18 characters in length.
	;;^DD(356.2,.28,21,0)
	;;=6^^6^6^2940213^
	;;^DD(356.2,.28,21,1,0)
	;;=Enter the treatment authorization number that the insurance company gave
	;;^DD(356.2,.28,21,2,0)
	;;=you during this contact.
	;;^DD(356.2,.28,21,3,0)
	;;= 
	;;^DD(356.2,.28,21,4,0)
	;;=The data in this field if it exists will be considered the Treatment
	;;^DD(356.2,.28,21,5,0)
	;;=Authorization code for this care and will automatically used by the
	;;^DD(356.2,.28,21,6,0)
	;;=billing module.
	;;^DD(356.2,.28,"DT")
	;;=2931220
	;;^DD(356.2,.29,0)
	;;=FINAL OUTCOME OF APPEAL^S^1:APPROVED;2:DENIED;3:PARITIAL APPROVAL;^0;29^Q
	;;^DD(356.2,.29,21,0)
	;;=^^5^5^2930825^
	;;^DD(356.2,.29,21,1,0)
	;;=Enter the final outcome of this appeal.  Did the insurance company
	;;^DD(356.2,.29,21,2,0)
	;;=approve, partially approve or deny this appeal?
	;;^DD(356.2,.29,21,3,0)
	;;= 
	;;^DD(356.2,.29,21,4,0)
	;;=If the appeal was approved or partially approved you may enter the
	;;^DD(356.2,.29,21,5,0)
	;;=dates that it was approved for.
	;;^DD(356.2,.29,"DT")
	;;=2930825
	;;^DD(356.2,1.01,0)
	;;=DATE ENTERED^D^^1;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.2,1.01,21,0)
	;;=^^3^3^2930806^
	;;^DD(356.2,1.01,21,1,0)
	;;=This is the date this contact was entered into the computer.  It is
	;;^DD(356.2,1.01,21,2,0)
	;;=generated when the contact is entered and is not editable by the 
	;;^DD(356.2,1.01,21,3,0)
	;;=user.
	;;^DD(356.2,1.01,22)
	;;=
	;;^DD(356.2,1.01,"DT")
	;;=2930610
	;;^DD(356.2,1.02,0)
	;;=ENTERED BY^P200'^VA(200,^1;2^Q
	;;^DD(356.2,1.02,21,0)
	;;=^^4^4^2930806^
	;;^DD(356.2,1.02,21,1,0)
	;;=This is the user who was signed on to the computer system when this
	;;^DD(356.2,1.02,21,2,0)
	;;=contact was created.  If this contact was created automatically by the
	;;^DD(356.2,1.02,21,3,0)
	;;=computer from an admission or discharge, then this might be a user from
	;;^DD(356.2,1.02,21,4,0)
	;;=IRM, MAS, or other service.
	;;^DD(356.2,1.02,"DT")
	;;=2930610
	;;^DD(356.2,1.03,0)
	;;=DATE LAST EDITED^D^^1;3^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.2,1.03,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.2,1.03,21,1,0)
	;;=This is the date that this contact was last edited by a user using
	;;^DD(356.2,1.03,21,2,0)
	;;=the input options.  After every editing sequence the files are checked
	;;^DD(356.2,1.03,21,3,0)
	;;=for changes.  If any are noted then this field is updated.
	;;^DD(356.2,1.03,"DT")
	;;=2930610
	;;^DD(356.2,1.04,0)
	;;=LAST EDITED BY^P200'^VA(200,^1;4^Q
	;;^DD(356.2,1.04,21,0)
	;;=^^1^1^2930806^
	;;^DD(356.2,1.04,21,1,0)
	;;=This is the user that last edited this contact using the input screens.
	;;^DD(356.2,1.04,"DT")
	;;=2930610
	;;^DD(356.2,1.05,0)
	;;=HEALTH INSURANCE POLICY^RFXO^^1;5^K:$L(X)>30!($L(X)<1) X D:$D(X) DD^IBTRC2(X,DA)
	;;^DD(356.2,1.05,1,0)
	;;=^.1
	;;^DD(356.2,1.05,1,1,0)
	;;=^^TRIGGER^356.2^.08
	;;^DD(356.2,1.05,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y X ^DD(356.2,1.05,1,1,1.1) X ^DD(356.2,1.05,1,1,1.4)
	;;^DD(356.2,1.05,1,1,1.1)
	;;=S X=DIV S X=+$$INSCO^IBTRC2(DA,$P(^IBT(356.2,DA,1),U,5))
	;;^DD(356.2,1.05,1,1,1.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=356.2,DIG=.08 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.2,1.05,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(356.2,1.05,1,1,2.4)
	;;^DD(356.2,1.05,1,1,2.4)
	;;=S DIH=$S($D(^IBT(356.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=356.2,DIG=.08 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI069
IBINI069	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,1.05,1,1,"CREATE VALUE")
	;;=S X=+$$INSCO^IBTRC2(DA,$P(^IBT(356.2,DA,1),U,5))
	;;^DD(356.2,1.05,1,1,"DELETE VALUE")
	;;=@
	;;^DD(356.2,1.05,1,1,"FIELD")
	;;=#.08
	;;^DD(356.2,1.05,2)
	;;=S Y(0)=Y S Y=$$TRANS^IBTRC2(DA,Y)
	;;^DD(356.2,1.05,2.1)
	;;=S Y=$$TRANS^IBTRC2(DA,Y)
	;;^DD(356.2,1.05,3)
	;;=Select the policy for the insurance company that you contacted.
	;;^DD(356.2,1.05,4)
	;;=D DDHELP^IBTRC2(DA)
	;;^DD(356.2,1.05,5,1,0)
	;;=356.2^.05^3
	;;^DD(356.2,1.05,21,0)
	;;=^^2^2^2940213^^^^
	;;^DD(356.2,1.05,21,1,0)
	;;=Select the policy for this patient that you are contacting the insurance
	;;^DD(356.2,1.05,21,2,0)
	;;=company for.
	;;^DD(356.2,1.05,23,0)
	;;=^^4^4^2940213^^^
	;;^DD(356.2,1.05,23,1,0)
	;;=This field points to the patient insurance type field in the patient file.
	;;^DD(356.2,1.05,23,2,0)
	;;=It is used to do look-ups on the ins. type multiple and to display
	;;^DD(356.2,1.05,23,3,0)
	;;=help.  It is needed because a patient may have more than one entry with
	;;^DD(356.2,1.05,23,4,0)
	;;=the same ins. co. and same policy except for different effective dates.
	;;^DD(356.2,1.05,"DT")
	;;=2931108
	;;^DD(356.2,1.07,0)
	;;=DENY ENTIRE ADMISSION^*S^0:NO;1:YES;^1;7^Q
	;;^DD(356.2,1.07,3)
	;;=
	;;^DD(356.2,1.07,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,1.07,12)
	;;=An entire admission can only be authorized or denied once.
	;;^DD(356.2,1.07,12.1)
	;;=S DIC("S")="I $S(Y:$$DEA^IBTUTL4(DA,Y),1:1)"
	;;^DD(356.2,1.07,21,0)
	;;=^^8^8^2940127^^^
	;;^DD(356.2,1.07,21,1,0)
	;;=If the insurance company denies the entire admission for reimbursement
	;;^DD(356.2,1.07,21,2,0)
	;;=then enter YES.  You will then not asked to enter the Care Denied From
	;;^DD(356.2,1.07,21,3,0)
	;;=and Care Denied To questions for this admission.  If you want to enter
	;;^DD(356.2,1.07,21,4,0)
	;;=the dates care was denied from and to, then answer NO.
	;;^DD(356.2,1.07,21,5,0)
	;;= 
	;;^DD(356.2,1.07,21,6,0)
	;;=If this question is answered YES, then the days denied for this episode
	;;^DD(356.2,1.07,21,7,0)
	;;=will be the admission to discharge date and any report will use the portion
	;;^DD(356.2,1.07,21,8,0)
	;;=of the episode that falls within the date range of the report.   
	;;^DD(356.2,1.07,"DT")
	;;=2940127
	;;^DD(356.2,1.08,0)
	;;=AUTHORIZE ENTIRE ADMISSION^*S^0:NO;1:YES;^1;8^Q
	;;^DD(356.2,1.08,4)
	;;=D HELP^IBTUTL3(DA)
	;;^DD(356.2,1.08,12)
	;;= An entire admission can only be authorized or denied once.
	;;^DD(356.2,1.08,12.1)
	;;=S DIC("S")="I $S(Y:$$AEA^IBTUTL4(DA,Y),1:1)"
	;;^DD(356.2,1.08,21,0)
	;;=^^8^8^2940127^^
	;;^DD(356.2,1.08,21,1,0)
	;;=If the insurance company authorizes the entire admission for reimbursement
	;;^DD(356.2,1.08,21,2,0)
	;;=then enter YES.  You will then not asked to enter the Care Authorized From
	;;^DD(356.2,1.08,21,3,0)
	;;=and Care Authorized To questions for this admission.  If you want to enter
	;;^DD(356.2,1.08,21,4,0)
	;;=the dates care was authorized from and to, then answer NO.
	;;^DD(356.2,1.08,21,5,0)
	;;= 
	;;^DD(356.2,1.08,21,6,0)
	;;=If this question is answered YES, then the days authorized for this episode
	;;^DD(356.2,1.08,21,7,0)
	;;=will be the admission to discharge date and any report will use the portion
	;;^DD(356.2,1.08,21,8,0)
	;;=of the episode that falls within the date range of the report.
	;;^DD(356.2,1.08,"DT")
	;;=2940127
	;;^DD(356.2,11,0)
	;;=COMMENTS^356.211^^11;0
	;;^DD(356.2,11,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.2,11,21,1,0)
	;;=This field is used to store long textual information about the contact.
	;;^DD(356.2,11,21,2,0)
	;;=This may be used to document specific information that is not captured

IBINI06A
IBINI06A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.2,11,21,3,0)
	;;=in other fields or to pass along pertinent information to other users.
	;;^DD(356.2,12,0)
	;;=REASONS FOR DENIAL^356.212PA^^12;0
	;;^DD(356.2,12,21,0)
	;;=^^2^2^2940202^^
	;;^DD(356.2,12,21,1,0)
	;;=If this contact was a denial, this is the reason(s) for denial.  More
	;;^DD(356.2,12,21,2,0)
	;;=than one reason may be selected from the available choices.
	;;^DD(356.2,13,0)
	;;=PENALTY^356.213SA^^13;0
	;;^DD(356.2,13,21,0)
	;;=^^2^2^2940213^^
	;;^DD(356.2,13,21,1,0)
	;;=If the action taken by an insurance company was to assess a penalty,
	;;^DD(356.2,13,21,2,0)
	;;=then this is the reason for the penalty.
	;;^DD(356.2,14,0)
	;;=APPROVE ON APPEAL FROM^356.214DA^^14;0
	;;^DD(356.2,14,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(356.2,14,21,1,0)
	;;=Enter the dates that were approved for payment after an appeal.  If the
	;;^DD(356.2,14,21,2,0)
	;;=appeal was partially or fully approved enter the dates that this appeal
	;;^DD(356.2,14,21,3,0)
	;;=was approved from.
	;;^DD(356.211,0)
	;;=COMMENTS SUB-FIELD^^.01^1
	;;^DD(356.211,0,"NM","COMMENTS")
	;;=
	;;^DD(356.211,0,"UP")
	;;=356.2
	;;^DD(356.211,.01,0)
	;;=COMMENTS^W^^0;1^Q
	;;^DD(356.211,.01,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.211,.01,21,1,0)
	;;=This field is used to store long textual information about the contact.
	;;^DD(356.211,.01,21,2,0)
	;;=This may be used to document specific information that is not captured
	;;^DD(356.211,.01,21,3,0)
	;;=in other fields or to pass along pertinent information to other users.
	;;^DD(356.211,.01,"DT")
	;;=2930610
	;;^DD(356.212,0)
	;;=REASONS FOR DENIAL SUB-FIELD^^.01^1
	;;^DD(356.212,0,"IX","B",356.212,.01)
	;;=
	;;^DD(356.212,0,"NM","REASONS FOR DENIAL")
	;;=
	;;^DD(356.212,0,"UP")
	;;=356.2
	;;^DD(356.212,.01,0)
	;;=REASONS FOR DENIAL^MP356.21'^IBE(356.21,^0;1^Q
	;;^DD(356.212,.01,1,0)
	;;=^.1
	;;^DD(356.212,.01,1,1,0)
	;;=356.212^B
	;;^DD(356.212,.01,1,1,1)
	;;=S ^IBT(356.2,DA(1),12,"B",$E(X,1,30),DA)=""
	;;^DD(356.212,.01,1,1,2)
	;;=K ^IBT(356.2,DA(1),12,"B",$E(X,1,30),DA)
	;;^DD(356.212,.01,21,0)
	;;=^^2^2^2940202^^^
	;;^DD(356.212,.01,21,1,0)
	;;=If this contact was a denial, this is the reason(s) for denial.  More
	;;^DD(356.212,.01,21,2,0)
	;;=than one reason may be selected from the available choices.
	;;^DD(356.212,.01,"DT")
	;;=2930610
	;;^DD(356.213,0)
	;;=PENALTY SUB-FIELD^^.02^2
	;;^DD(356.213,0,"DT")
	;;=2940125
	;;^DD(356.213,0,"IX","B",356.213,.01)
	;;=
	;;^DD(356.213,0,"NM","PENALTY")
	;;=
	;;^DD(356.213,0,"UP")
	;;=356.2
	;;^DD(356.213,.01,0)
	;;=PENALTY^MS^1:NO PRE ADMISSION CERTIFICATION;2:UNTIMELY PRE ADMISSION CERTIFICATION;3:VA A NON-PROVIDER;^0;1^Q
	;;^DD(356.213,.01,1,0)
	;;=^.1
	;;^DD(356.213,.01,1,1,0)
	;;=356.213^B
	;;^DD(356.213,.01,1,1,1)
	;;=S ^IBT(356.2,DA(1),13,"B",$E(X,1,30),DA)=""
	;;^DD(356.213,.01,1,1,2)
	;;=K ^IBT(356.2,DA(1),13,"B",$E(X,1,30),DA)
	;;^DD(356.213,.01,21,0)
	;;=^^2^2^2940213^^^
	;;^DD(356.213,.01,21,1,0)
	;;=If the action taken by an insurance company was to assess a penalty,
	;;^DD(356.213,.01,21,2,0)
	;;=then this is the reason for the penalty.
	;;^DD(356.213,.01,"DT")
	;;=2940125
	;;^DD(356.213,.02,0)
	;;=AMOUNT OF PENALTY^NJ9,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>999999)!(X<0) X
	;;^DD(356.213,.02,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(356.213,.02,21,0)
	;;=^^2^2^2940213^^
	;;^DD(356.213,.02,21,1,0)
	;;=If the action taken by an insurance company was to assess a penalty,
	;;^DD(356.213,.02,21,2,0)
	;;=this is the amount of the penalty assessed.
	;;^DD(356.213,.02,"DT")
	;;=2930806

IBINI06B
IBINI06B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.214,0)
	;;=APPROVE ON APPEAL FROM SUB-FIELD^^.02^2
	;;^DD(356.214,0,"DT")
	;;=2930825
	;;^DD(356.214,0,"IX","B",356.214,.01)
	;;=
	;;^DD(356.214,0,"NM","APPROVE ON APPEAL FROM")
	;;=
	;;^DD(356.214,0,"UP")
	;;=356.2
	;;^DD(356.214,.01,0)
	;;=APPROVE ON APPEAL FROM^MD^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.214,.01,1,0)
	;;=^.1
	;;^DD(356.214,.01,1,1,0)
	;;=356.214^B
	;;^DD(356.214,.01,1,1,1)
	;;=S ^IBT(356.2,DA(1),14,"B",$E(X,1,30),DA)=""
	;;^DD(356.214,.01,1,1,2)
	;;=K ^IBT(356.2,DA(1),14,"B",$E(X,1,30),DA)
	;;^DD(356.214,.01,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(356.214,.01,21,1,0)
	;;=Enter the dates that were approved for payment after an appeal.  If the
	;;^DD(356.214,.01,21,2,0)
	;;=appeal was partially or fully approved enter the dates that this appeal
	;;^DD(356.214,.01,21,3,0)
	;;=was approved from.
	;;^DD(356.214,.01,"DT")
	;;=2930825
	;;^DD(356.214,.02,0)
	;;=APPROVE ON APPEAL TO^D^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.214,.02,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(356.214,.02,21,1,0)
	;;=Enter the dates that were approved for payment after an appeal.  If the
	;;^DD(356.214,.02,21,2,0)
	;;=appeal was partially or fully approved enter the dates that this appeal
	;;^DD(356.214,.02,21,3,0)
	;;=was approved to.
	;;^DD(356.214,.02,"DT")
	;;=2930825

IBINI06C
IBINI06C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.21)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.21,0,"GL")
	;;=^IBE(356.21,
	;;^DIC("B","CLAIMS TRACKING DENIAL REASONS",356.21)
	;;=
	;;^DIC(356.21,"%D",0)
	;;=^^9^9^2940214^^^
	;;^DIC(356.21,"%D",1,0)
	;;=This file is a list of the standard reasons for denial of a claim.  Do
	;;^DIC(356.21,"%D",2,0)
	;;=not add to or delete from this file.  Editing this file may have significant
	;;^DIC(356.21,"%D",3,0)
	;;=impact on the results of the MCCR NDB roll-up of claims tracking 
	;;^DIC(356.21,"%D",4,0)
	;;=information.
	;;^DIC(356.21,"%D",5,0)
	;;= 
	;;^DIC(356.21,"%D",6,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.21,"%D",7,0)
	;;=from your ISC.
	;;^DIC(356.21,"%D",8,0)
	;;= 
	;;^DIC(356.21,"%D",9,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.21,0)
	;;=FIELD^^.02^3
	;;^DD(356.21,0,"DDA")
	;;=N
	;;^DD(356.21,0,"DT")
	;;=2930825
	;;^DD(356.21,0,"IX","B",356.21,.01)
	;;=
	;;^DD(356.21,0,"NM","CLAIMS TRACKING DENIAL REASONS")
	;;=
	;;^DD(356.21,0,"PT",356.212,.01)
	;;=
	;;^DD(356.21,.001,0)
	;;=NUMBER^NJ5,0^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.21,.001,3)
	;;=Type a Number between 1 and 99999, 0 Decimal Digits
	;;^DD(356.21,.001,21,0)
	;;=^^2^2^2931128^
	;;^DD(356.21,.001,21,1,0)
	;;=This is the number of the entry.  You may select the Denial Reason by
	;;^DD(356.21,.001,21,2,0)
	;;=name or by number.
	;;^DD(356.21,.001,"DT")
	;;=2930610
	;;^DD(356.21,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.21,.01,1,0)
	;;=^.1
	;;^DD(356.21,.01,1,1,0)
	;;=356.21^B
	;;^DD(356.21,.01,1,1,1)
	;;=S ^IBE(356.21,"B",$E(X,1,30),DA)=""
	;;^DD(356.21,.01,1,1,2)
	;;=K ^IBE(356.21,"B",$E(X,1,30),DA)
	;;^DD(356.21,.01,3)
	;;=Answer must be 3-60 characters in length.
	;;^DD(356.21,.01,21,0)
	;;=^^2^2^2931128^
	;;^DD(356.21,.01,21,1,0)
	;;=This is the name of the denial reason.  Select the Denial reason by name
	;;^DD(356.21,.01,21,2,0)
	;;=or by number.
	;;^DD(356.21,.01,"DT")
	;;=2930825
	;;^DD(356.21,.02,0)
	;;=ABBREVIATION^F^^0;2^K:$L(X)>10!($L(X)<2) X
	;;^DD(356.21,.02,3)
	;;=Answer must be 2-10 characters in length.
	;;^DD(356.21,.02,21,0)
	;;=^^2^2^2931128^
	;;^DD(356.21,.02,21,1,0)
	;;=Enter the 2 to 10 character abbreviation for this Denial Reason.  The
	;;^DD(356.21,.02,21,2,0)
	;;=abbreviation may be used on displays and reports if the name is too long.
	;;^DD(356.21,.02,"DT")
	;;=2930610

IBINI06D
IBINI06D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.21)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.21)
	;;=^IBE(356.21,
	;;^UTILITY(U,$J,356.21,0)
	;;=CLAIMS TRACKING DENIAL REASONS^356.21^8^8
	;;^UTILITY(U,$J,356.21,1,0)
	;;=FAILURE TO MEET PAYER ADMISSION CRITERIA^FAIL CRIT
	;;^UTILITY(U,$J,356.21,2,0)
	;;=NO PRE-ADMISSION CERTIFICATION^NO PRE-ADM
	;;^UTILITY(U,$J,356.21,3,0)
	;;=UNTIMELY PRE-ADMISSION CERTIFICATION^UNTIMELY
	;;^UTILITY(U,$J,356.21,4,0)
	;;=OUTPT PROCEDURE/TREATMENT IS MORE APPROPRIATE^OUTPT
	;;^UTILITY(U,$J,356.21,5,0)
	;;=PRE-OP DAYS NOT COVERED^PRE-OP
	;;^UTILITY(U,$J,356.21,6,0)
	;;=NOT MEDICALLY NECESSARY^NOT NECES
	;;^UTILITY(U,$J,356.21,7,0)
	;;=VA A NON PROVIDER (OUT OF NETWORK HMO)^NON PROV
	;;^UTILITY(U,$J,356.21,8,0)
	;;=TREATMENT PROVIDED NOT COVERED BY POLICY^NOT COVER

IBINI06E
IBINI06E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.3,0,"GL")
	;;=^IBE(356.3,
	;;^DIC("B","CLAIMS TRACKING SI/IS CATEGORIES",356.3)
	;;=
	;;^DIC(356.3,"%D",0)
	;;=5^^14^14^2940214^^^^
	;;^DIC(356.3,"%D",1,0)
	;;=This file contains the major categories of areas that are used to address
	;;^DIC(356.3,"%D",2,0)
	;;=the severity of illness and intensity of service.  Specific criteria for
	;;^DIC(356.3,"%D",3,0)
	;;=each category must be met to address appropriateness of admission to
	;;^DIC(356.3,"%D",4,0)
	;;=continued stay in and discharge from specialized units and general
	;;^DIC(356.3,"%D",5,0)
	;;=units.
	;;^DIC(356.3,"%D",6,0)
	;;= 
	;;^DIC(356.3,"%D",7,0)
	;;=Do Not add to or delete from this file without instructions from your
	;;^DIC(356.3,"%D",8,0)
	;;=ISC.  Editing this file may have significant impact on the QM national 
	;;^DIC(356.3,"%D",9,0)
	;;=roll-up of Utilization Review information.
	;;^DIC(356.3,"%D",10,0)
	;;= 
	;;^DIC(356.3,"%D",11,0)
	;;=The contents of this file are the general categories for Intesity of 
	;;^DIC(356.3,"%D",12,0)
	;;=Service and Severity of Illness from Interqual.
	;;^DIC(356.3,"%D",13,0)
	;;= 
	;;^DIC(356.3,"%D",14,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.3,0)
	;;=FIELD^^.03^3
	;;^DD(356.3,0,"DDA")
	;;=N
	;;^DD(356.3,0,"DT")
	;;=2930907
	;;^DD(356.3,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(356.3,0,"IX","B",356.3,.01)
	;;=
	;;^DD(356.3,0,"IX","C",356.3,.03)
	;;=
	;;^DD(356.3,0,"NM","CLAIMS TRACKING SI/IS CATEGORIES")
	;;=
	;;^DD(356.3,0,"PT",356.1,.04)
	;;=
	;;^DD(356.3,0,"PT",356.1,.05)
	;;=
	;;^DD(356.3,0,"PT",356.1,.08)
	;;=
	;;^DD(356.3,0,"PT",356.1,.09)
	;;=
	;;^DD(356.3,0,"PT",356.1,.12)
	;;=
	;;^DD(356.3,0,"PT",356.1,.13)
	;;=
	;;^DD(356.3,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.3,.01,1,0)
	;;=^.1
	;;^DD(356.3,.01,1,1,0)
	;;=356.3^B
	;;^DD(356.3,.01,1,1,1)
	;;=S ^IBE(356.3,"B",$E(X,1,30),DA)=""
	;;^DD(356.3,.01,1,1,2)
	;;=K ^IBE(356.3,"B",$E(X,1,30),DA)
	;;^DD(356.3,.01,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(356.3,.01,21,0)
	;;=^^4^4^2931128^
	;;^DD(356.3,.01,21,1,0)
	;;=This is the name of the Severity of Illness (SI) or Intensity of Service
	;;^DD(356.3,.01,21,2,0)
	;;=(IS) general category.  
	;;^DD(356.3,.01,21,3,0)
	;;= 
	;;^DD(356.3,.01,21,4,0)
	;;=Enter the name as it appears in the Interqual manual.
	;;^DD(356.3,.01,"DT")
	;;=2930610
	;;^DD(356.3,.02,0)
	;;=GENERAL OR SPECIAL UNIT^S^1:SPECIAL UNIT CODE;2:GENERAL UNIT;^0;2^Q
	;;^DD(356.3,.02,21,0)
	;;=^^5^5^2940213^^^^
	;;^DD(356.3,.02,21,1,0)
	;;=Enter whether this criteria is for general medical surgical ward or for
	;;^DD(356.3,.02,21,2,0)
	;;=a specialized unit as defined in the Interqual manual.  Specialized
	;;^DD(356.3,.02,21,3,0)
	;;=units include not only ICU's and CCU's but some other non-critical care
	;;^DD(356.3,.02,21,4,0)
	;;=units that one might not normally expect to see included in the list.
	;;^DD(356.3,.02,21,5,0)
	;;= 
	;;^DD(356.3,.02,"DT")
	;;=2930610
	;;^DD(356.3,.03,0)
	;;=CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>2!($L(X)<2)!'(X?2N) X
	;;^DD(356.3,.03,1,0)
	;;=^.1
	;;^DD(356.3,.03,1,1,0)
	;;=356.3^C
	;;^DD(356.3,.03,1,1,1)
	;;=S ^IBE(356.3,"C",$E(X,1,30),DA)=""
	;;^DD(356.3,.03,1,1,2)
	;;=K ^IBE(356.3,"C",$E(X,1,30),DA)
	;;^DD(356.3,.03,1,1,"DT")
	;;=2930915
	;;^DD(356.3,.03,3)
	;;=Answer must be 2 characters in length.
	;;^DD(356.3,.03,21,0)
	;;=^^4^4^2931128^^
	;;^DD(356.3,.03,21,1,0)
	;;=Enter the 2 digit number to assist in looking up SI/IS criteria.
	;;^DD(356.3,.03,21,2,0)
	;;= 
	;;^DD(356.3,.03,21,3,0)
	;;=Do not edit this code as it will be used in the national roll-up of QM 

IBINI06F
IBINI06F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.3,.03,21,4,0)
	;;=Utilization Review data to identify the category.
	;;^DD(356.3,.03,"DT")
	;;=2930915

IBINI06G
IBINI06G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.3)
	;;=^IBE(356.3,
	;;^UTILITY(U,$J,356.3,0)
	;;=CLAIMS TRACKING SI/IS CATEGORIES^356.3I^23^21
	;;^UTILITY(U,$J,356.3,1,0)
	;;=GENERIC^2^01
	;;^UTILITY(U,$J,356.3,2,0)
	;;=CARDIOVASCULAR^2^03
	;;^UTILITY(U,$J,356.3,3,0)
	;;=CENTRAL NERVOUS SYSTEM/HEAD^2^04
	;;^UTILITY(U,$J,356.3,4,0)
	;;=ENDOCRINE/METABOLIC^2^05
	;;^UTILITY(U,$J,356.3,5,0)
	;;=EYE, EAR, NOSE, AND THROAT^2^06
	;;^UTILITY(U,$J,356.3,6,0)
	;;=FEMALE REPRODUCTIVE^2^07
	;;^UTILITY(U,$J,356.3,7,0)
	;;=GASTROINTESTINAL TRACT AND ABDOMEN^2^08
	;;^UTILITY(U,$J,356.3,10,0)
	;;=MUSCULOSKELETAL/SPINE^2^09
	;;^UTILITY(U,$J,356.3,11,0)
	;;=PERIPHERAL VASCULAR^2^10
	;;^UTILITY(U,$J,356.3,12,0)
	;;=PSYCHIATRIC^2^11
	;;^UTILITY(U,$J,356.3,13,0)
	;;=RESPIRATORY/CHEST^2^12
	;;^UTILITY(U,$J,356.3,14,0)
	;;=SKIN/CONNECTIVE TISSUE^2^13
	;;^UTILITY(U,$J,356.3,15,0)
	;;=SUBSTANCE ABUSE (MEDICAL DETOXIFICATION)^2^14
	;;^UTILITY(U,$J,356.3,16,0)
	;;=URINARY TRACT^2^15
	;;^UTILITY(U,$J,356.3,17,0)
	;;=CORONARY CARE^1^30
	;;^UTILITY(U,$J,356.3,18,0)
	;;=INTENSIVE CARE (MED AND SURG)^1^31
	;;^UTILITY(U,$J,356.3,19,0)
	;;=OBSERVATION^1^32
	;;^UTILITY(U,$J,356.3,20,0)
	;;=REHABILITATION^1^33
	;;^UTILITY(U,$J,356.3,21,0)
	;;=SUBSTANCE ABUSE^1^34
	;;^UTILITY(U,$J,356.3,22,0)
	;;=TELEMETRY^1^35
	;;^UTILITY(U,$J,356.3,23,0)
	;;=BLOOD AND LYMPHATICS^2^02

IBINI06H
IBINI06H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.399,0,"GL")
	;;=^IBT(356.399,
	;;^DIC("B","CLAIMS TRACKING/BILL",356.399)
	;;=
	;;^DIC(356.399,"%D",0)
	;;=^^8^8^2940214^^
	;;^DIC(356.399,"%D",1,0)
	;;=This file serves as a bridge between Claims Tracking and the Bill Claims 
	;;^DIC(356.399,"%D",2,0)
	;;=file.  An entry is created automatically by the billing module to link
	;;^DIC(356.399,"%D",3,0)
	;;=the events being billed to the claims tracking entry.  It serves as a
	;;^DIC(356.399,"%D",4,0)
	;;=cross-reference in a many to many relationship for the entries in these
	;;^DIC(356.399,"%D",5,0)
	;;=two files.  Entries should not normally be added or edited manualy in 
	;;^DIC(356.399,"%D",6,0)
	;;=this file.  It should be maintained by the Billing Module.
	;;^DIC(356.399,"%D",7,0)
	;;= 
	;;^DIC(356.399,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.399,0)
	;;=FIELD^^.02^2
	;;^DD(356.399,0,"DDA")
	;;=N
	;;^DD(356.399,0,"DT")
	;;=2930726
	;;^DD(356.399,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.399,0,"IX","ACB",356.399,.02)
	;;=
	;;^DD(356.399,0,"IX","ACB1",356.399,.01)
	;;=
	;;^DD(356.399,0,"IX","B",356.399,.01)
	;;=
	;;^DD(356.399,0,"IX","C",356.399,.02)
	;;=
	;;^DD(356.399,0,"NM","CLAIMS TRACKING/BILL")
	;;=
	;;^DD(356.399,.01,0)
	;;=CLAIM TRACKING ID^RP356'^IBT(356,^0;1^Q
	;;^DD(356.399,.01,1,0)
	;;=^.1
	;;^DD(356.399,.01,1,1,0)
	;;=356.399^B
	;;^DD(356.399,.01,1,1,1)
	;;=S ^IBT(356.399,"B",$E(X,1,30),DA)=""
	;;^DD(356.399,.01,1,1,2)
	;;=K ^IBT(356.399,"B",$E(X,1,30),DA)
	;;^DD(356.399,.01,1,2,0)
	;;=356.399^ACB1^MUMPS
	;;^DD(356.399,.01,1,2,1)
	;;=S:$P(^IBT(356.399,DA,0),U,2) ^IBT(356.399,"ACB",X,$P(^(0),U,2),DA)=""
	;;^DD(356.399,.01,1,2,2)
	;;=K:$P(^IBT(356.399,DA,0),U,2) ^IBT(356.399,"ACB",X,$P(^(0),U,2),DA)
	;;^DD(356.399,.01,1,2,"%D",0)
	;;=^^2^2^2940213^
	;;^DD(356.399,.01,1,2,"%D",1,0)
	;;=Cross reference of bills and claims tracking entries.  Used to find
	;;^DD(356.399,.01,1,2,"%D",2,0)
	;;=all bills associated with a claims tracking entry.
	;;^DD(356.399,.01,1,2,"DT")
	;;=2930802
	;;^DD(356.399,.01,3)
	;;=The Claims Tracking ID to cross-reference with Bill Numbers.
	;;^DD(356.399,.01,21,0)
	;;=^^1^1^2931128^^^^
	;;^DD(356.399,.01,21,1,0)
	;;=This is the Claims Tracking entry that is associated with this bill.
	;;^DD(356.399,.01,"DT")
	;;=2930802
	;;^DD(356.399,.02,0)
	;;=BILL NUMBER^RP399'^DGCR(399,^0;2^Q
	;;^DD(356.399,.02,1,0)
	;;=^.1
	;;^DD(356.399,.02,1,1,0)
	;;=356.399^ACB^MUMPS
	;;^DD(356.399,.02,1,1,1)
	;;=S:$P(^IBT(356.399,DA,0),U,1) ^IBT(356.399,"ACB",+^(0),X,DA)=""
	;;^DD(356.399,.02,1,1,2)
	;;=K:$P(^IBT(356.399,DA,0),U,1) ^IBT(356.399,"ACB",+^(0),X,DA)
	;;^DD(356.399,.02,1,1,"%D",0)
	;;=^^1^1^2930802^
	;;^DD(356.399,.02,1,1,"%D",1,0)
	;;=Cross-reference of claims events and bills.
	;;^DD(356.399,.02,1,1,"DT")
	;;=2930802
	;;^DD(356.399,.02,1,2,0)
	;;=356.399^C
	;;^DD(356.399,.02,1,2,1)
	;;=S ^IBT(356.399,"C",$E(X,1,30),DA)=""
	;;^DD(356.399,.02,1,2,2)
	;;=K ^IBT(356.399,"C",$E(X,1,30),DA)
	;;^DD(356.399,.02,1,2,"DT")
	;;=2931029
	;;^DD(356.399,.02,1,3,0)
	;;=^^TRIGGER^356^.11
	;;^DD(356.399,.02,1,3,1)
	;;=X ^DD(356.399,.02,1,3,1.3) I X S X=DIV X ^DD(356.399,.02,1,3,89.2) S X=$S('$D(^DGCR(399,+$P(Y(101),U,11),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S DIU=X K Y X ^DD(356.399,.02,1,3,1.1) X ^DD(356.399,.02,1,3,1.4)
	;;^DD(356.399,.02,1,3,1.1)
	;;=S X=DIV S X=$P(^IBT(356.399,DA,0),U,2)
	;;^DD(356.399,.02,1,3,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(356.399,.02,1,3,69.2) S X=$S('$D(^DGCR(399,+$P(Y(101),U,11),0)):"",1:$P(^(0),U,1))="" S D0=I(0,0)

IBINI06I
IBINI06I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.399,.02,1,3,1.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,11)=DIV,DIH=356,DIG=.11 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.399,.02,1,3,2)
	;;=X ^DD(356.399,.02,1,3,2.3) I X S X=DIV X ^DD(356.399,.02,1,3,89.2) S X=$S('$D(^DGCR(399,+$P(Y(101),U,11),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) S DIU=X K Y S X="" X ^DD(356.399,.02,1,3,2.4)
	;;^DD(356.399,.02,1,3,2.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(356.399,.02,1,3,79.2) S X=$S('$D(^DGCR(399,+$P(Y(101),U,11),0)):"",1:$P(^(0),U,1))=$S('$D(^DGCR(399,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) S D0=I(0,0)
	;;^DD(356.399,.02,1,3,2.4)
	;;=S DIH=$S($D(^IBT(356,DIV(0),0)):^(0),1:""),DIV=X I $D(^(0)) S $P(^(0),U,11)=DIV,DIH=356,DIG=.11 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(356.399,.02,1,3,69.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBT(356.399,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBT(356,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^DD(356.399,.02,1,3,79.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBT(356.399,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBT(356,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^DD(356.399,.02,1,3,89.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBT(356.399,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBT(356,+D0,0)) D0=-1 S DIV(0)=D0 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^DD(356.399,.02,1,3,"%D",0)
	;;=^^3^3^2930826^
	;;^DD(356.399,.02,1,3,"%D",1,0)
	;;=Sets the events Initial Bill Number (356,.11) if that field does not
	;;^DD(356.399,.02,1,3,"%D",2,0)
	;;=already have a value.  Deletes the Initial Bill Number if that bill
	;;^DD(356.399,.02,1,3,"%D",3,0)
	;;=is being deleted from this entry.
	;;^DD(356.399,.02,1,3,"CREATE CONDITION")
	;;=CLAIM TRACKING ID:INITIAL BILL NUMBER=""
	;;^DD(356.399,.02,1,3,"CREATE VALUE")
	;;=S X=$P(^IBT(356.399,DA,0),U,2)
	;;^DD(356.399,.02,1,3,"DELETE CONDITION")
	;;=CLAIM TRACKING ID:INITIAL BILL NUMBER=BILL NUMBER
	;;^DD(356.399,.02,1,3,"DELETE VALUE")
	;;=@
	;;^DD(356.399,.02,1,3,"DT")
	;;=2930825
	;;^DD(356.399,.02,1,3,"FIELD")
	;;=CLAIM TRACKING ID:INITIAL BILL NUMBER
	;;^DD(356.399,.02,3)
	;;=The bill number associated with this Claims Tracking ID.
	;;^DD(356.399,.02,21,0)
	;;=^^1^1^2931128^^^
	;;^DD(356.399,.02,21,1,0)
	;;=This is the Bill associated with this Claims Tracking Entry.
	;;^DD(356.399,.02,"DT")
	;;=2931029

IBINI06J
IBINI06J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.4,0,"GL")
	;;=^IBE(356.4,
	;;^DIC("B","CLAIMS TRACKING NON-ACUTE CLASSIFICATIONS",356.4)
	;;=
	;;^DIC(356.4,"%D",0)
	;;=^^7^7^2940214^^^
	;;^DIC(356.4,"%D",1,0)
	;;=This file contains the list of approved non-acute classifications provided
	;;^DIC(356.4,"%D",2,0)
	;;=by the UM office in VACO.  The codes are used in roll up of national data
	;;^DIC(356.4,"%D",3,0)
	;;= 
	;;^DIC(356.4,"%D",4,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.4,"%D",5,0)
	;;=from your ISC.
	;;^DIC(356.4,"%D",6,0)
	;;= 
	;;^DIC(356.4,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.4,0)
	;;=FIELD^^10^5
	;;^DD(356.4,0,"DT")
	;;=2931029
	;;^DD(356.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(356.4,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(356.4,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(356.4,0,"IX","B",356.4,.01)
	;;=
	;;^DD(356.4,0,"IX","C",356.4,.02)
	;;=
	;;^DD(356.4,0,"IX","D",356.4,.04)
	;;=
	;;^DD(356.4,0,"NM","CLAIMS TRACKING NON-ACUTE CLASSIFICATIONS")
	;;=
	;;^DD(356.4,0,"PT",356.112,.01)
	;;=
	;;^DD(356.4,0,"PT",356.113,.01)
	;;=
	;;^DD(356.4,.01,0)
	;;=SHORT NAME^RF^^0;1^K:$L(X)>80!($L(X)<3) X
	;;^DD(356.4,.01,1,0)
	;;=^.1
	;;^DD(356.4,.01,1,1,0)
	;;=356.4^B
	;;^DD(356.4,.01,1,1,1)
	;;=S ^IBE(356.4,"B",$E(X,1,30),DA)=""
	;;^DD(356.4,.01,1,1,2)
	;;=K ^IBE(356.4,"B",$E(X,1,30),DA)
	;;^DD(356.4,.01,3)
	;;=Answer must be 3-80 characters in length.
	;;^DD(356.4,.01,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(356.4,.01,21,1,0)
	;;=This is the first 30-60 characters of the description of the non-acute
	;;^DD(356.4,.01,21,2,0)
	;;=classification.
	;;^DD(356.4,.01,"DT")
	;;=2940201
	;;^DD(356.4,.02,0)
	;;=CODE^RFI^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<4)!'(X?1.2N1"."2N) X
	;;^DD(356.4,.02,1,0)
	;;=^.1
	;;^DD(356.4,.02,1,1,0)
	;;=356.4^C
	;;^DD(356.4,.02,1,1,1)
	;;=S ^IBE(356.4,"C",$E(X,1,30),DA)=""
	;;^DD(356.4,.02,1,1,2)
	;;=K ^IBE(356.4,"C",$E(X,1,30),DA)
	;;^DD(356.4,.02,1,1,"DT")
	;;=2930715
	;;^DD(356.4,.02,3)
	;;=Enter the unique code for this factor in the format of nn.nn or n.nn where n is any number.
	;;^DD(356.4,.02,21,0)
	;;=^^3^3^2940213^^^^
	;;^DD(356.4,.02,21,1,0)
	;;=This is the external reference number by which this data is
	;;^DD(356.4,.02,21,2,0)
	;;=uniquely known.  This is the value that will be transmitted 
	;;^DD(356.4,.02,21,3,0)
	;;=in the national roll up.
	;;^DD(356.4,.02,"DT")
	;;=2931014
	;;^DD(356.4,.04,0)
	;;=FACTOR^SI^1:SOCIAL FACTORS;2:ENVIRONMENTAL FACTORS;3:SCHEDULING;4:BED/SERVICE AVAILIBILITY;5:PRACTITIONER FACTOR;6:ADMINISTRATIVE;7:COMMUNICATION PROBLEMS;8:OTHER;^0;4^Q
	;;^DD(356.4,.04,1,0)
	;;=^.1
	;;^DD(356.4,.04,1,1,0)
	;;=356.4^D
	;;^DD(356.4,.04,1,1,1)
	;;=S ^IBE(356.4,"D",$E(X,1,30),DA)=""
	;;^DD(356.4,.04,1,1,2)
	;;=K ^IBE(356.4,"D",$E(X,1,30),DA)
	;;^DD(356.4,.04,1,1,"DT")
	;;=2930715
	;;^DD(356.4,.04,21,0)
	;;=^^1^1^2931029^^
	;;^DD(356.4,.04,21,1,0)
	;;=Enter the name of the factor that best describes this classification.
	;;^DD(356.4,.04,"DT")
	;;=2931220
	;;^DD(356.4,.05,0)
	;;=DAY OR ADMISSION^SI^1:ADMISSION (NON-ACUTE);2:DAY(S) OF CARE (NON ACUTE);^0;5^Q
	;;^DD(356.4,.05,21,0)
	;;=^^2^2^2930715^
	;;^DD(356.4,.05,21,1,0)
	;;=Enter whether this classification for not meeting criteria is for
	;;^DD(356.4,.05,21,2,0)
	;;=admissions or days of care.
	;;^DD(356.4,.05,"DT")
	;;=2931220
	;;^DD(356.4,10,0)
	;;=REASON^356.41^^1;0
	;;^DD(356.4,10,21,0)
	;;=^^1^1^2940213^
	;;^DD(356.4,10,21,1,0)
	;;=This is the long description of the non-acute classification.

IBINI06K
IBINI06K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.4,10,"DT")
	;;=2930715
	;;^DD(356.41,0)
	;;=REASON SUB-FIELD^^.01^1
	;;^DD(356.41,0,"DT")
	;;=2930715
	;;^DD(356.41,0,"NM","REASON")
	;;=
	;;^DD(356.41,0,"UP")
	;;=356.4
	;;^DD(356.41,.01,0)
	;;=REASON^W^^0;1^Q
	;;^DD(356.41,.01,21,0)
	;;=^^1^1^2940213^
	;;^DD(356.41,.01,21,1,0)
	;;=This is the long description of the non-acute classification.
	;;^DD(356.41,.01,"DT")
	;;=2930715

IBINI06L
IBINI06L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.4)
	;;=^IBE(356.4,
	;;^UTILITY(U,$J,356.4,0)
	;;=CLAIMS TRACKING NON-ACUTE CLASSIFICATIONS^356.4I^64^64
	;;^UTILITY(U,$J,356.4,1,0)
	;;=LACK OF FAMILY/SOCIAL SUPPORT^1.01^^1^1
	;;^UTILITY(U,$J,356.4,1,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,1,1,1,0)
	;;=Lack of family/social support/unable to care for self
	;;^UTILITY(U,$J,356.4,2,0)
	;;=HOMELESS^1.02^^1^1
	;;^UTILITY(U,$J,356.4,2,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,2,1,1,0)
	;;=Homeless
	;;^UTILITY(U,$J,356.4,3,0)
	;;=RESPITE CARE^1.03^^1^1
	;;^UTILITY(U,$J,356.4,3,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,3,1,1,0)
	;;=Respite Care
	;;^UTILITY(U,$J,356.4,4,0)
	;;=ADMISSION WAS FOR FAMILY CONVENIENCE^1.04^^1^1
	;;^UTILITY(U,$J,356.4,4,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,4,1,1,0)
	;;=Admission was for family, patient or physician convenience
	;;^UTILITY(U,$J,356.4,5,0)
	;;=OTHER (SOCIAL FACTOR)^1.05^^1^1
	;;^UTILITY(U,$J,356.4,5,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,5,1,1,0)
	;;=Other (specify in comments sections)
	;;^UTILITY(U,$J,356.4,6,0)
	;;=DISTANCE TO TRAVEL TO HOSPITAL^2.01^^2^1
	;;^UTILITY(U,$J,356.4,6,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,6,1,1,0)
	;;=Distance to travel to hospital (over 75 miles)
	;;^UTILITY(U,$J,356.4,7,0)
	;;=OTHER (ENVIRONMENTAL FACTOR)^2.02^^2^1
	;;^UTILITY(U,$J,356.4,7,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,7,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,8,0)
	;;=DELAY IN SCHEDULING APPOINTMENT^3.01^^3^1
	;;^UTILITY(U,$J,356.4,8,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,8,1,1,0)
	;;=Delay is scheduling outpatient clinic appointment
	;;^UTILITY(U,$J,356.4,9,0)
	;;=DELAY IN SCHEDULING PROCEDURE^3.02^^3^1
	;;^UTILITY(U,$J,356.4,9,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,9,1,1,0)
	;;=Delay is scheduling outpatient procedure
	;;^UTILITY(U,$J,356.4,10,0)
	;;=ADMISSION TO CIRCUMENT SLOWNESS^3.03^^3^1
	;;^UTILITY(U,$J,356.4,10,1,0)
	;;=^^3^3^2940201^^^^
	;;^UTILITY(U,$J,356.4,10,1,1,0)
	;;=Admission due to wish to circumvent slowness or lack of timely
	;;^UTILITY(U,$J,356.4,10,1,2,0)
	;;=appointments in ambulatory care system; e.g., timeliness of routine
	;;^UTILITY(U,$J,356.4,10,1,3,0)
	;;=lab, X-rays, procedures, consults
	;;^UTILITY(U,$J,356.4,11,0)
	;;=PREMATURE ADMISSION^3.04^^3^1
	;;^UTILITY(U,$J,356.4,11,1,0)
	;;=^^3^3^2940201^^^
	;;^UTILITY(U,$J,356.4,11,1,1,0)
	;;=Premature admission (Procedures scheduled more than one day after
	;;^UTILITY(U,$J,356.4,11,1,2,0)
	;;=admission or patient admitted on Friday and not evaluated until
	;;^UTILITY(U,$J,356.4,11,1,3,0)
	;;=Monday)
	;;^UTILITY(U,$J,356.4,12,0)
	;;=OTHER (SCHEDULING)^3.05^^3^1
	;;^UTILITY(U,$J,356.4,12,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,12,1,1,0)
	;;=Other (Specify if comments section)
	;;^UTILITY(U,$J,356.4,13,0)
	;;=ALTERNATIVE BEDS UNAVAILABLE^4.01^^4^1
	;;^UTILITY(U,$J,356.4,13,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,13,1,1,0)
	;;=Alternative beds unavailable; e.g., Observations, Intermediate Care,
	;;^UTILITY(U,$J,356.4,13,1,2,0)
	;;=NHCU, Hospice
	;;^UTILITY(U,$J,356.4,14,0)
	;;=OUTPATIENT PROCEDURE UNAVAILABLE^4.02^^4^1
	;;^UTILITY(U,$J,356.4,14,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,14,1,1,0)
	;;=Outpatient procedure unavailable (not offered as an outpatient
	;;^UTILITY(U,$J,356.4,14,1,2,0)
	;;=procedure)
	;;^UTILITY(U,$J,356.4,15,0)
	;;=OTHER OUTPATIENT SERVICES/CARE UNAVAILABLE^4.03^^4^1
	;;^UTILITY(U,$J,356.4,15,1,0)
	;;=^^4^4^2940201^^^
	;;^UTILITY(U,$J,356.4,15,1,1,0)
	;;=Other outpatient services/care unavailable; e.g., board and care,

IBINI06M
IBINI06M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.4,15,1,2,0)
	;;=(appointment availability not frequent enough to allow for close
	;;^UTILITY(U,$J,356.4,15,1,3,0)
	;;=follow-up in outpatient setting for care such as medication adjustments,
	;;^UTILITY(U,$J,356.4,15,1,4,0)
	;;=blood transusions, chemotherapy, etc.)
	;;^UTILITY(U,$J,356.4,16,0)
	;;=OTHER (BED/SERVICE AVAILABILITY)^4.04^^4^1
	;;^UTILITY(U,$J,356.4,16,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,16,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,17,0)
	;;=AMBULATORY CARE SEEMS APPROPRIATE^5.01^^5^1
	;;^UTILITY(U,$J,356.4,17,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,17,1,1,0)
	;;=Ambulatory Care seem appropriate and services or specialty is
	;;^UTILITY(U,$J,356.4,17,1,2,0)
	;;=available/offered
	;;^UTILITY(U,$J,356.4,18,0)
	;;=PHYSICIAN DETERMINED PATIENT NEEDED HOSPITALIZATION^5.02^^5^1
	;;^UTILITY(U,$J,356.4,18,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,18,1,1,0)
	;;=Physician determined that patient needed hospitalization for medical
	;;^UTILITY(U,$J,356.4,18,1,2,0)
	;;=reasons (serious illness or needed hospital services)
	;;^UTILITY(U,$J,356.4,19,0)
	;;=PHYSICIAN CHOSE TO ADMIT^5.03^^5^1
	;;^UTILITY(U,$J,356.4,19,1,0)
	;;=^^5^5^2940201^^^
	;;^UTILITY(U,$J,356.4,19,1,1,0)
	;;=Physician chose to admit though care and service could be rendered
	;;^UTILITY(U,$J,356.4,19,1,2,0)
	;;=safely and effectively (causing no harm/potential harm to patient) in
	;;^UTILITY(U,$J,356.4,19,1,3,0)
	;;=an alternate setting (causing no harm/potential harm to patient)
	;;^UTILITY(U,$J,356.4,19,1,4,0)
	;;=in an alternate/non ambulatory setting, e.g., Hospice, Board
	;;^UTILITY(U,$J,356.4,19,1,5,0)
	;;=and care, Nursing Home (No medical justification given)
	;;^UTILITY(U,$J,356.4,20,0)
	;;=MONITORING ORDERS DO NOT REFLECT ACUITY^5.04^^5^1
	;;^UTILITY(U,$J,356.4,20,1,0)
	;;=^^1^1^2940201^^^^
	;;^UTILITY(U,$J,356.4,20,1,1,0)
	;;=Monitoring Orders do not reflect acuity as indicated by SI criteria
	;;^UTILITY(U,$J,356.4,21,0)
	;;=ADMITTED FOR NURSING HOME PLACEMENT^6.01^^6^1
	;;^UTILITY(U,$J,356.4,21,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,21,1,1,0)
	;;=Admitted for Nursing Home Placement
	;;^UTILITY(U,$J,356.4,22,0)
	;;=ADMITTED FOR TRANSFER^6.02^^6^1
	;;^UTILITY(U,$J,356.4,22,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,22,1,1,0)
	;;=Admitted for transfer to anohter acute care hospital
	;;^UTILITY(U,$J,356.4,23,0)
	;;=ADMITTED TO BE ELIGIBLE FOR OTHER CARE^6.03^^6^1
	;;^UTILITY(U,$J,356.4,23,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,23,1,1,0)
	;;=Admitted to be eligible for other VA care; e.g., Dental
	;;^UTILITY(U,$J,356.4,24,0)
	;;=ADMITTED AS A TRANFER FROM ANOTHER HOSPITAL^6.04^^6^1
	;;^UTILITY(U,$J,356.4,24,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,24,1,1,0)
	;;=Admitted as a transfer from another hospital
	;;^UTILITY(U,$J,356.4,25,0)
	;;=ADMITTED FROM BOARDING HOME/CNH^6.05^^6^1
	;;^UTILITY(U,$J,356.4,25,1,0)
	;;=^^3^3^2940201^^^
	;;^UTILITY(U,$J,356.4,25,1,1,0)
	;;=Admitted from a boarding home/Contract Nursing Home for 
	;;^UTILITY(U,$J,356.4,25,1,2,0)
	;;=psychosocial reasons; e.g. contract home returned patient
	;;^UTILITY(U,$J,356.4,25,1,3,0)
	;;=to hospital due to behavioral problems
	;;^UTILITY(U,$J,356.4,26,0)
	;;=ADMITTED FOR C&P EXAM^6.06^^6^1
	;;^UTILITY(U,$J,356.4,26,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,26,1,1,0)
	;;=Admitted for Compensation & Pension Exam
	;;^UTILITY(U,$J,356.4,27,0)
	;;=OTHER (ADMINISTRATIVE)^6.07^^6^1
	;;^UTILITY(U,$J,356.4,27,1,0)
	;;=^^1^1^2940201^^^

IBINI06N
IBINI06N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.4,27,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,28,0)
	;;=OTHER (COMMUNICATION PROBLEM)^7.01^^7^1
	;;^UTILITY(U,$J,356.4,28,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,28,1,1,0)
	;;=Other (Specify in Comments section)
	;;^UTILITY(U,$J,356.4,29,0)
	;;=OTHER REASON IDENTIFIED^8.01^^8^1
	;;^UTILITY(U,$J,356.4,29,1,0)
	;;=^^2^2^2940201^^^^
	;;^UTILITY(U,$J,356.4,29,1,1,0)
	;;=If you have been unable to identify any reasons from this list, please
	;;^UTILITY(U,$J,356.4,29,1,2,0)
	;;=use 8.01, Other reason identified.
	;;^UTILITY(U,$J,356.4,30,0)
	;;=PATIENT IS CONVALESCING^9.01^^1^2
	;;^UTILITY(U,$J,356.4,30,1,0)
	;;=^^3^3^2940201^^^
	;;^UTILITY(U,$J,356.4,30,1,1,0)
	;;=Patient is convalescing from an illness, and it is anticipated
	;;^UTILITY(U,$J,356.4,30,1,2,0)
	;;=that his/her stay in an alternative facility would be less than
	;;^UTILITY(U,$J,356.4,30,1,3,0)
	;;=72 hours
	;;^UTILITY(U,$J,356.4,31,0)
	;;=PATIENT FROM UNHEALTHY ENVIRONMENT^9.02^^1^2
	;;^UTILITY(U,$J,356.4,31,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,31,1,1,0)
	;;=Patient from unhealthy environment, patient kept until environment
	;;^UTILITY(U,$J,356.4,31,1,2,0)
	;;=becomes acceptable or alternative facility found
	;;^UTILITY(U,$J,356.4,32,0)
	;;=LACK OF FAMILY FOR HOME CARE^9.03^^1^2
	;;^UTILITY(U,$J,356.4,32,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,32,1,1,0)
	;;=Lack of family for home care (or lack of supportive family)
	;;^UTILITY(U,$J,356.4,33,0)
	;;=HOMELESS^9.04^^1^2
	;;^UTILITY(U,$J,356.4,33,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,33,1,1,0)
	;;=Homeless
	;;^UTILITY(U,$J,356.4,34,0)
	;;=RESPITE CARE^9.05^^1^2
	;;^UTILITY(U,$J,356.4,34,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,34,1,1,0)
	;;=Respite Care
	;;^UTILITY(U,$J,356.4,35,0)
	;;=OTHER (SOCIAL FACTORS)^9.06^^1^2
	;;^UTILITY(U,$J,356.4,35,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,35,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,36,0)
	;;=WEATHER DEEMED INAPROPRIATE^10.01^^2^2
	;;^UTILITY(U,$J,356.4,36,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,36,1,1,0)
	;;=Weather deemed inappropriate by practitioner for patients to travel
	;;^UTILITY(U,$J,356.4,37,0)
	;;=DISTANCE TO TRAVEL OVER 75 MILES^10.02^^2^2
	;;^UTILITY(U,$J,356.4,37,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,37,1,1,0)
	;;=Distance to travel between hospital and home (over 75 miles)
	;;^UTILITY(U,$J,356.4,38,0)
	;;=OTHER (ENVIRONMENTAL FACTORS)^10.03^^2^2
	;;^UTILITY(U,$J,356.4,38,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,38,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,39,0)
	;;=PROBLEM IN TIMELY SCHEDULING^11.01^^3^2
	;;^UTILITY(U,$J,356.4,39,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,39,1,1,0)
	;;=Problem in timely scheduling/canceling of procedure
	;;^UTILITY(U,$J,356.4,40,0)
	;;=WAITING FOR APPROPRIATE PROCEDURE^11.02^^3^2
	;;^UTILITY(U,$J,356.4,40,1,0)
	;;=^^1^1^2940218^^^^
	;;^UTILITY(U,$J,356.4,40,1,1,0)
	;;=Waiting for appropriate procedure to be done at non-VA facility
	;;^UTILITY(U,$J,356.4,41,0)
	;;=OTHER (SCHEDULING)^11.05^^3^2
	;;^UTILITY(U,$J,356.4,41,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,41,1,1,0)
	;;=Other (Specify in comments sections)
	;;^UTILITY(U,$J,356.4,42,0)
	;;=ALTERNATE BEDS UNAVAILABLE^12.01^^4^2
	;;^UTILITY(U,$J,356.4,42,1,0)
	;;=^^4^4^2940201^^^
	;;^UTILITY(U,$J,356.4,42,1,1,0)
	;;=Alternate beds unavailable within the facility; e.g., Observation, 
	;;^UTILITY(U,$J,356.4,42,1,2,0)
	;;=Intermediate Care, NHCU, or Hospice; e.g. type of beds available

IBINI06O
IBINI06O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.4,42,1,3,0)
	;;=but full, (NHCU has not yet accepted patient), or type of beds are
	;;^UTILITY(U,$J,356.4,42,1,4,0)
	;;=not available at facility
	;;^UTILITY(U,$J,356.4,43,0)
	;;=AWAITING PLACEMENT IN COMMUNITY NURSING HOME^12.02^^4^2
	;;^UTILITY(U,$J,356.4,43,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,43,1,1,0)
	;;=Awaiting placement in a community nursing home
	;;^UTILITY(U,$J,356.4,44,0)
	;;=AWAITING TRANSFER TO ANOTHER ACUTE CARE^12.03^^4^2
	;;^UTILITY(U,$J,356.4,44,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,44,1,1,0)
	;;=Awaiting transfer to another acute care institution
	;;^UTILITY(U,$J,356.4,45,0)
	;;=NON-FACILITY BASED TREATMENT UNAVAILABLE^12.04^^4^2
	;;^UTILITY(U,$J,356.4,45,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,45,1,1,0)
	;;=Non-facility based treatment unavailable; e.g., home health care
	;;^UTILITY(U,$J,356.4,46,0)
	;;=OTHER (BED AVAILABILITY)^12.05^^4^2
	;;^UTILITY(U,$J,356.4,46,1,0)
	;;=^^1^1^2940201^^^^
	;;^UTILITY(U,$J,356.4,46,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,47,0)
	;;=SERVICE-CONNECTED CONSIDERATIONS DELAY DISCHARGE^13.01^^6^2
	;;^UTILITY(U,$J,356.4,47,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,47,1,1,0)
	;;=Service-connected considerations delay discharge
	;;^UTILITY(U,$J,356.4,48,0)
	;;=PATIENT GRANTED PASS^13.02^^6^2
	;;^UTILITY(U,$J,356.4,48,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,48,1,1,0)
	;;=Patient granted pass (which does not have clear therapeutic rationale)
	;;^UTILITY(U,$J,356.4,49,0)
	;;=OTHER (ADMINISTRATIVE)^13.03^^6^2
	;;^UTILITY(U,$J,356.4,49,1,0)
	;;=^^1^1^2940201^^^^
	;;^UTILITY(U,$J,356.4,49,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,50,0)
	;;=DELAY IN RECEIVING RESULTS^14.01^^7^2
	;;^UTILITY(U,$J,356.4,50,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,50,1,1,0)
	;;=Delay in receiving results of diagnostic test or consultation needed to
	;;^UTILITY(U,$J,356.4,50,1,2,0)
	;;=direct further treatment
	;;^UTILITY(U,$J,356.4,51,0)
	;;=OTHER (COMMUNICATION PROBLEMS)^14.02^^7^2
	;;^UTILITY(U,$J,356.4,51,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,51,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,52,0)
	;;=FAILURE TO WRITE DISCHARGE ORDERS^15.01^^5^2
	;;^UTILITY(U,$J,356.4,52,1,0)
	;;=^^1^1^2940201^^^
	;;^UTILITY(U,$J,356.4,52,1,1,0)
	;;=Failure to write discharge orders
	;;^UTILITY(U,$J,356.4,53,0)
	;;=FAILURE TO INITIATE DISCHARGE PLANNING^15.02^^5^2
	;;^UTILITY(U,$J,356.4,53,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,53,1,1,0)
	;;=Failure to initiate timely discharge planning; e.g., developing plan
	;;^UTILITY(U,$J,356.4,53,1,2,0)
	;;=for transfer to non-acute level of care
	;;^UTILITY(U,$J,356.4,54,0)
	;;=OBSERVATION FOR SIGNS/SYMPTOMS^15.03^^5^2
	;;^UTILITY(U,$J,356.4,54,1,0)
	;;=^^3^3^2940201^^^
	;;^UTILITY(U,$J,356.4,54,1,1,0)
	;;=Observation for signs/symptoms such as: medication adjustment,
	;;^UTILITY(U,$J,356.4,54,1,2,0)
	;;=signs of depression, potential relapse from alcohol or drugs,
	;;^UTILITY(U,$J,356.4,54,1,3,0)
	;;=noncompliance
	;;^UTILITY(U,$J,356.4,55,0)
	;;=NO DOCUMENTED PLAN OF TREATMENT^15.04^^5^2
	;;^UTILITY(U,$J,356.4,55,1,0)
	;;=^^2^2^2940201^^^^
	;;^UTILITY(U,$J,356.4,55,1,1,0)
	;;=No documented plan of active treatment or evaluation of patient
	;;^UTILITY(U,$J,356.4,55,1,2,0)
	;;=(Administrative Week)
	;;^UTILITY(U,$J,356.4,56,0)
	;;=OTHER (PRACTITIONER ISSUES)^15.08^^5^2
	;;^UTILITY(U,$J,356.4,56,1,0)
	;;=^^1^1^2940201^^^^
	;;^UTILITY(U,$J,356.4,56,1,1,0)
	;;=Other (Specify in comments section)

IBINI06P
IBINI06P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.4,57,0)
	;;=OTHER REASON IDENTIFIED^8.02^^8^2
	;;^UTILITY(U,$J,356.4,57,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,57,1,1,0)
	;;=If you have been unable to identify any reasons from this list, please
	;;^UTILITY(U,$J,356.4,57,1,2,0)
	;;=use 8.02, Other reason identified.
	;;^UTILITY(U,$J,356.4,58,0)
	;;=OTHER (PRACTITIONER ISSUES)^5.05^^5^1
	;;^UTILITY(U,$J,356.4,58,1,0)
	;;=^^1^1^2940201^^^^
	;;^UTILITY(U,$J,356.4,58,1,1,0)
	;;=Other (Specify in comments section)
	;;^UTILITY(U,$J,356.4,59,0)
	;;=PREMATURE APPROPRIATE ADMISSION^11.03^^3^2
	;;^UTILITY(U,$J,356.4,59,1,0)
	;;=^^3^3^2940201^^^^
	;;^UTILITY(U,$J,356.4,59,1,1,0)
	;;=Premature admission (Procedures scheduled after admission day, or Patient
	;;^UTILITY(U,$J,356.4,59,1,2,0)
	;;=admitted on Friday and not evaluated until Monday {Procedure to be done
	;;^UTILITY(U,$J,356.4,59,1,3,0)
	;;=is an appropriate inpatient admission})
	;;^UTILITY(U,$J,356.4,60,0)
	;;=PREMATURE INAPPROPRIATE ADMISSION^11.04^^3^2
	;;^UTILITY(U,$J,356.4,60,1,0)
	;;=^^3^3^2940201^^
	;;^UTILITY(U,$J,356.4,60,1,1,0)
	;;=Premature admission (Procedures scheduled after admission day, or
	;;^UTILITY(U,$J,356.4,60,1,2,0)
	;;=Patient admitted on Friday and not evaluated until Monday {Procedure
	;;^UTILITY(U,$J,356.4,60,1,3,0)
	;;=to be done is not an appropriate inpatient admission})
	;;^UTILITY(U,$J,356.4,61,0)
	;;=PHYSICIAN CHOSE ACUTE CARE^15.06^^5^2
	;;^UTILITY(U,$J,356.4,61,1,0)
	;;=^^3^3^2940201^^
	;;^UTILITY(U,$J,356.4,61,1,1,0)
	;;=Physician chose to keep in acute care though care and service could
	;;^UTILITY(U,$J,356.4,61,1,2,0)
	;;=be rendered safely and effectively (causing no harm/potential harm
	;;^UTILITY(U,$J,356.4,61,1,3,0)
	;;=to patient) in an alternate setting (No medical Justification given)
	;;^UTILITY(U,$J,356.4,62,0)
	;;=MONITORING ORDERS DO NOT REFLECT ACUITY^15.07^^5^2
	;;^UTILITY(U,$J,356.4,62,1,0)
	;;=^^2^2^2940201^^^
	;;^UTILITY(U,$J,356.4,62,1,1,0)
	;;=Monitoring orders do not reflect acuity as indicated by SI criteria
	;;^UTILITY(U,$J,356.4,62,1,2,0)
	;;=and does not meed Discharge screens
	;;^UTILITY(U,$J,356.4,63,0)
	;;=NO DOCUMENTED PLAN OF TREATMENT (NON-ADM WEEK)^15.05^^5^2
	;;^UTILITY(U,$J,356.4,63,1,0)
	;;=^^2^2^2940201^^
	;;^UTILITY(U,$J,356.4,63,1,1,0)
	;;=No documented plan of active treatment or evaluation of patient
	;;^UTILITY(U,$J,356.4,63,1,2,0)
	;;=(Non-Administrative Week)
	;;^UTILITY(U,$J,356.4,64,0)
	;;=OTHER (OTHER FACTORS)^16.01^^8^2
	;;^UTILITY(U,$J,356.4,64,1,0)
	;;=^^1^1^2940201^
	;;^UTILITY(U,$J,356.4,64,1,1,0)
	;;=Other (Specify in comments Section)

IBINI06Q
IBINI06Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.5,0,"GL")
	;;=^IBE(356.5,
	;;^DIC("B","CLAIMS TRACKING ALOS",356.5)
	;;=
	;;^DIC(356.5,"%D",0)
	;;=^^8^8^2940214^^^^
	;;^DIC(356.5,"%D",1,0)
	;;=This file contains the DRG's and average length of stays (ALOS) that
	;;^DIC(356.5,"%D",2,0)
	;;=is the most common alos approved by insurance companies.  this generally
	;;^DIC(356.5,"%D",3,0)
	;;=is much shorted than the ALOS for the VA
	;;^DIC(356.5,"%D",4,0)
	;;= 
	;;^DIC(356.5,"%D",5,0)
	;;=The data in this file is initially seeded with the HCFA 1992 table of
	;;^DIC(356.5,"%D",6,0)
	;;=average length of stays.
	;;^DIC(356.5,"%D",7,0)
	;;= 
	;;^DIC(356.5,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.5,0)
	;;=FIELD^^.03^3
	;;^DD(356.5,0,"DT")
	;;=2931129
	;;^DD(356.5,0,"IX","ADR",356.5,.01)
	;;=
	;;^DD(356.5,0,"IX","ADR1",356.5,.02)
	;;=
	;;^DD(356.5,0,"IX","B",356.5,.01)
	;;=
	;;^DD(356.5,0,"NM","CLAIMS TRACKING ALOS")
	;;=
	;;^DD(356.5,.01,0)
	;;=DRG^RP80.2'^ICD(^0;1^Q
	;;^DD(356.5,.01,1,0)
	;;=^.1
	;;^DD(356.5,.01,1,1,0)
	;;=356.5^B
	;;^DD(356.5,.01,1,1,1)
	;;=S ^IBE(356.5,"B",$E(X,1,30),DA)=""
	;;^DD(356.5,.01,1,1,2)
	;;=K ^IBE(356.5,"B",$E(X,1,30),DA)
	;;^DD(356.5,.01,1,2,0)
	;;=356.5^ADR^MUMPS
	;;^DD(356.5,.01,1,2,1)
	;;=S:$P(^IBE(356.5,DA,0),U,2) ^IBE(356.5,"ADR",X,$P(^(0),U,2),DA)=""
	;;^DD(356.5,.01,1,2,2)
	;;=K ^IBE(356.5,"ADR",X,+$P(^IBE(356.5,DA,0),U,2),DA)
	;;^DD(356.5,.01,1,2,"%D",0)
	;;=^^1^1^2930723^
	;;^DD(356.5,.01,1,2,"%D",1,0)
	;;=Cross-reference of drgs by year.
	;;^DD(356.5,.01,1,2,"DT")
	;;=2930723
	;;^DD(356.5,.01,3)
	;;=
	;;^DD(356.5,.01,21,0)
	;;=^^4^4^2940213^^
	;;^DD(356.5,.01,21,1,0)
	;;=This is the DRG for which you wish to enter an average length of stay
	;;^DD(356.5,.01,21,2,0)
	;;=that will be reflected on the review screen.  This ALOS is an alos
	;;^DD(356.5,.01,21,3,0)
	;;=that is used in practice by the insurance industry which is different
	;;^DD(356.5,.01,21,4,0)
	;;=than the ALOS generally found in DHCP files which are specific to VA care.
	;;^DD(356.5,.01,"DT")
	;;=2931129
	;;^DD(356.5,.02,0)
	;;=YEAR^RDX^^0;2^S %DT="E" D ^%DT S X=Y K:Y<1 X S:$D(X) X=$E(X,1,3)_"0000"
	;;^DD(356.5,.02,1,0)
	;;=^.1
	;;^DD(356.5,.02,1,1,0)
	;;=356.5^ADR1^MUMPS
	;;^DD(356.5,.02,1,1,1)
	;;=S:$P(^IBE(356.5,DA,0),U) ^IBE(356.5,"ADR",$P(^(0),U),X,DA)=""
	;;^DD(356.5,.02,1,1,2)
	;;=K ^IBE(356.5,"ADR",+$P(^IBE(356.5,DA,0),U),X,DA)
	;;^DD(356.5,.02,1,1,"%D",0)
	;;=^^2^2^2930723^
	;;^DD(356.5,.02,1,1,"%D",1,0)
	;;=Cross reference of all drgs by year so that the alos for that drg for the
	;;^DD(356.5,.02,1,1,"%D",2,0)
	;;=correct year can be found.
	;;^DD(356.5,.02,1,1,"DT")
	;;=2930723
	;;^DD(356.5,.02,3)
	;;=Enter the year for this ALOS for this DRG.  If any date other than a year is entered, only the year will be stored.
	;;^DD(356.5,.02,21,0)
	;;=^^3^3^2930723^
	;;^DD(356.5,.02,21,1,0)
	;;=This is the year for which you want to enter an average lenght of stay for
	;;^DD(356.5,.02,21,2,0)
	;;=this DRG.  If any date in a year is entered only the year will be
	;;^DD(356.5,.02,21,3,0)
	;;=stored.
	;;^DD(356.5,.02,"DT")
	;;=2930723
	;;^DD(356.5,.03,0)
	;;=ALOS FOR INS. PURPOSES^NJ7,2^^0;3^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(356.5,.03,3)
	;;=Enter the ALOS for this DRG for this year.  Type a Number between 0 and 9999, 2 Decimal Digits
	;;^DD(356.5,.03,21,0)
	;;=^^4^4^2930723^
	;;^DD(356.5,.03,21,1,0)
	;;=Enter the average length of stay (ALOS) that you wish to be used 
	;;^DD(356.5,.03,21,2,0)
	;;=as a base for insurance purposes.  This ALOS will be displayed on

IBINI06R
IBINI06R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.5,.03,21,3,0)
	;;=the expanded review screen for associated DRG's.  Generally this
	;;^DD(356.5,.03,21,4,0)
	;;=information will be from HCFA or the insurance industry.
	;;^DD(356.5,.03,"DT")
	;;=2930723

IBINI06S
IBINI06S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5)
	;;=^IBE(356.5,
	;;^UTILITY(U,$J,356.5,0)
	;;=CLAIMS TRACKING ALOS^356.5P^492^492
	;;^UTILITY(U,$J,356.5,1,0)
	;;=1^2930000^16
	;;^UTILITY(U,$J,356.5,2,0)
	;;=2^2930000^15.3
	;;^UTILITY(U,$J,356.5,3,0)
	;;=3^2930000^20.2
	;;^UTILITY(U,$J,356.5,4,0)
	;;=4^2930000^13.3
	;;^UTILITY(U,$J,356.5,5,0)
	;;=5^2930000^6.8
	;;^UTILITY(U,$J,356.5,6,0)
	;;=6^2930000^3.3
	;;^UTILITY(U,$J,356.5,7,0)
	;;=7^2930000^22.9
	;;^UTILITY(U,$J,356.5,8,0)
	;;=8^2930000^4.9
	;;^UTILITY(U,$J,356.5,9,0)
	;;=9^2930000^16.8
	;;^UTILITY(U,$J,356.5,10,0)
	;;=10^2930000^11.1
	;;^UTILITY(U,$J,356.5,11,0)
	;;=11^2930000^8.3
	;;^UTILITY(U,$J,356.5,12,0)
	;;=12^2930000^13.3
	;;^UTILITY(U,$J,356.5,13,0)
	;;=13^2930000^11.3
	;;^UTILITY(U,$J,356.5,14,0)
	;;=14^2930000^10.4
	;;^UTILITY(U,$J,356.5,15,0)
	;;=15^2930000^5.5
	;;^UTILITY(U,$J,356.5,16,0)
	;;=16^2930000^9.7
	;;^UTILITY(U,$J,356.5,17,0)
	;;=17^2930000^8.1
	;;^UTILITY(U,$J,356.5,18,0)
	;;=18^2930000^8.3
	;;^UTILITY(U,$J,356.5,19,0)
	;;=19^2930000^6.3
	;;^UTILITY(U,$J,356.5,20,0)
	;;=20^2930000^13.1
	;;^UTILITY(U,$J,356.5,21,0)
	;;=21^2930000^9.8
	;;^UTILITY(U,$J,356.5,22,0)
	;;=22^2930000^5.5
	;;^UTILITY(U,$J,356.5,23,0)
	;;=23^2930000^7
	;;^UTILITY(U,$J,356.5,24,0)
	;;=24^2930000^7.5
	;;^UTILITY(U,$J,356.5,25,0)
	;;=25^2930000^4.7
	;;^UTILITY(U,$J,356.5,26,0)
	;;=26^2930000^5.9
	;;^UTILITY(U,$J,356.5,27,0)
	;;=27^2930000^9.7
	;;^UTILITY(U,$J,356.5,28,0)
	;;=28^2930000^9.8
	;;^UTILITY(U,$J,356.5,29,0)
	;;=29^2930000^7.5
	;;^UTILITY(U,$J,356.5,30,0)
	;;=30^2930000^22.2
	;;^UTILITY(U,$J,356.5,31,0)
	;;=31^2930000^7
	;;^UTILITY(U,$J,356.5,32,0)
	;;=32^2930000^3.8
	;;^UTILITY(U,$J,356.5,33,0)
	;;=33^2930000^0
	;;^UTILITY(U,$J,356.5,34,0)
	;;=34^2930000^10.1
	;;^UTILITY(U,$J,356.5,35,0)
	;;=35^2930000^9
	;;^UTILITY(U,$J,356.5,36,0)
	;;=36^2930000^2.3
	;;^UTILITY(U,$J,356.5,37,0)
	;;=37^2930000^4.6
	;;^UTILITY(U,$J,356.5,38,0)
	;;=38^2930000^3
	;;^UTILITY(U,$J,356.5,39,0)
	;;=39^2930000^1.9
	;;^UTILITY(U,$J,356.5,40,0)
	;;=40^2930000^3.4
	;;^UTILITY(U,$J,356.5,41,0)
	;;=41^2930000^3
	;;^UTILITY(U,$J,356.5,42,0)
	;;=42^2930000^2.6
	;;^UTILITY(U,$J,356.5,43,0)
	;;=43^2930000^5.6
	;;^UTILITY(U,$J,356.5,44,0)
	;;=44^2930000^6.3
	;;^UTILITY(U,$J,356.5,45,0)
	;;=45^2930000^4.6
	;;^UTILITY(U,$J,356.5,46,0)
	;;=46^2930000^6.5
	;;^UTILITY(U,$J,356.5,47,0)
	;;=47^2930000^5.5
	;;^UTILITY(U,$J,356.5,48,0)
	;;=48^2930000^15.5
	;;^UTILITY(U,$J,356.5,49,0)
	;;=49^2930000^7.9
	;;^UTILITY(U,$J,356.5,50,0)
	;;=50^2930000^2.6
	;;^UTILITY(U,$J,356.5,51,0)
	;;=51^2930000^2.8
	;;^UTILITY(U,$J,356.5,52,0)
	;;=52^2930000^3.2
	;;^UTILITY(U,$J,356.5,53,0)
	;;=53^2930000^3.4
	;;^UTILITY(U,$J,356.5,54,0)
	;;=54^2930000^0
	;;^UTILITY(U,$J,356.5,55,0)
	;;=55^2930000^2.7
	;;^UTILITY(U,$J,356.5,56,0)
	;;=56^2930000^2.8
	;;^UTILITY(U,$J,356.5,57,0)
	;;=57^2930000^5.4
	;;^UTILITY(U,$J,356.5,58,0)
	;;=58^2930000^1
	;;^UTILITY(U,$J,356.5,59,0)
	;;=59^2930000^2.2
	;;^UTILITY(U,$J,356.5,60,0)
	;;=60^2930000^11
	;;^UTILITY(U,$J,356.5,61,0)
	;;=61^2930000^5
	;;^UTILITY(U,$J,356.5,62,0)
	;;=62^2930000^1
	;;^UTILITY(U,$J,356.5,63,0)
	;;=63^2930000^5.7
	;;^UTILITY(U,$J,356.5,64,0)
	;;=64^2930000^9.6
	;;^UTILITY(U,$J,356.5,65,0)
	;;=65^2930000^4.2
	;;^UTILITY(U,$J,356.5,66,0)
	;;=66^2930000^4.3
	;;^UTILITY(U,$J,356.5,67,0)
	;;=67^2930000^5.2
	;;^UTILITY(U,$J,356.5,68,0)
	;;=68^2930000^6.1
	;;^UTILITY(U,$J,356.5,69,0)
	;;=69^2930000^4.4
	;;^UTILITY(U,$J,356.5,70,0)
	;;=70^2930000^4
	;;^UTILITY(U,$J,356.5,71,0)
	;;=71^2930000^5.1
	;;^UTILITY(U,$J,356.5,72,0)
	;;=72^2930000^5.7
	;;^UTILITY(U,$J,356.5,73,0)
	;;=73^2930000^6.1
	;;^UTILITY(U,$J,356.5,74,0)
	;;=74^2930000^7.7

IBINI06T
IBINI06T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,75,0)
	;;=75^2930000^13.8
	;;^UTILITY(U,$J,356.5,76,0)
	;;=76^2930000^14.9
	;;^UTILITY(U,$J,356.5,77,0)
	;;=77^2930000^6.8
	;;^UTILITY(U,$J,356.5,78,0)
	;;=78^2930000^10.1
	;;^UTILITY(U,$J,356.5,79,0)
	;;=79^2930000^11.9
	;;^UTILITY(U,$J,356.5,80,0)
	;;=80^2930000^9
	;;^UTILITY(U,$J,356.5,81,0)
	;;=81^2930000^11.4
	;;^UTILITY(U,$J,356.5,82,0)
	;;=82^2930000^9.7
	;;^UTILITY(U,$J,356.5,83,0)
	;;=83^2930000^8.2
	;;^UTILITY(U,$J,356.5,84,0)
	;;=84^2930000^4.5
	;;^UTILITY(U,$J,356.5,85,0)
	;;=85^2930000^9.1
	;;^UTILITY(U,$J,356.5,86,0)
	;;=86^2930000^5.4
	;;^UTILITY(U,$J,356.5,87,0)
	;;=87^2930000^8.5
	;;^UTILITY(U,$J,356.5,88,0)
	;;=88^2930000^7.6
	;;^UTILITY(U,$J,356.5,89,0)
	;;=89^2930000^8.8
	;;^UTILITY(U,$J,356.5,90,0)
	;;=90^2930000^6.5
	;;^UTILITY(U,$J,356.5,91,0)
	;;=91^2930000^8.4
	;;^UTILITY(U,$J,356.5,92,0)
	;;=92^2930000^8.6
	;;^UTILITY(U,$J,356.5,93,0)
	;;=93^2930000^6.4
	;;^UTILITY(U,$J,356.5,94,0)
	;;=94^2930000^9.5
	;;^UTILITY(U,$J,356.5,95,0)
	;;=95^2930000^6.4
	;;^UTILITY(U,$J,356.5,96,0)
	;;=96^2930000^7.1
	;;^UTILITY(U,$J,356.5,97,0)
	;;=97^2930000^5.2
	;;^UTILITY(U,$J,356.5,98,0)
	;;=98^2930000^7.4
	;;^UTILITY(U,$J,356.5,99,0)
	;;=99^2930000^5.3
	;;^UTILITY(U,$J,356.5,100,0)
	;;=100^2930000^3.7
	;;^UTILITY(U,$J,356.5,101,0)
	;;=101^2930000^7.1
	;;^UTILITY(U,$J,356.5,102,0)
	;;=102^2930000^5.3
	;;^UTILITY(U,$J,356.5,103,0)
	;;=103^2930000^32.8
	;;^UTILITY(U,$J,356.5,104,0)
	;;=104^2930000^20.4
	;;^UTILITY(U,$J,356.5,105,0)
	;;=105^2930000^14.6
	;;^UTILITY(U,$J,356.5,106,0)
	;;=106^2930000^15.3
	;;^UTILITY(U,$J,356.5,107,0)
	;;=107^2930000^11.8
	;;^UTILITY(U,$J,356.5,108,0)
	;;=108^2930000^15.3
	;;^UTILITY(U,$J,356.5,109,0)
	;;=109^2930000^0
	;;^UTILITY(U,$J,356.5,110,0)
	;;=110^2930000^13.5
	;;^UTILITY(U,$J,356.5,111,0)
	;;=111^2930000^8.3
	;;^UTILITY(U,$J,356.5,112,0)
	;;=112^2930000^6.1
	;;^UTILITY(U,$J,356.5,113,0)
	;;=113^2930000^19.2
	;;^UTILITY(U,$J,356.5,114,0)
	;;=114^2930000^12.6
	;;^UTILITY(U,$J,356.5,115,0)
	;;=115^2930000^13.9
	;;^UTILITY(U,$J,356.5,116,0)
	;;=116^2930000^7.3
	;;^UTILITY(U,$J,356.5,117,0)
	;;=117^2930000^5.5
	;;^UTILITY(U,$J,356.5,118,0)
	;;=118^2930000^3.9
	;;^UTILITY(U,$J,356.5,119,0)
	;;=119^2930000^6.3
	;;^UTILITY(U,$J,356.5,120,0)
	;;=120^2930000^12.3
	;;^UTILITY(U,$J,356.5,121,0)
	;;=121^2930000^9.6
	;;^UTILITY(U,$J,356.5,122,0)
	;;=122^2930000^6.9
	;;^UTILITY(U,$J,356.5,123,0)
	;;=123^2930000^5.3
	;;^UTILITY(U,$J,356.5,124,0)
	;;=124^2930000^5.8
	;;^UTILITY(U,$J,356.5,125,0)
	;;=125^2930000^3.1
	;;^UTILITY(U,$J,356.5,126,0)
	;;=126^2930000^20.2
	;;^UTILITY(U,$J,356.5,127,0)
	;;=127^2930000^7.8
	;;^UTILITY(U,$J,356.5,128,0)
	;;=128^2930000^8.4
	;;^UTILITY(U,$J,356.5,129,0)
	;;=129^2930000^4.8
	;;^UTILITY(U,$J,356.5,130,0)
	;;=130^2930000^8.2
	;;^UTILITY(U,$J,356.5,131,0)
	;;=131^2930000^6.3
	;;^UTILITY(U,$J,356.5,132,0)
	;;=132^2930000^6.4
	;;^UTILITY(U,$J,356.5,133,0)
	;;=133^2930000^6
	;;^UTILITY(U,$J,356.5,134,0)
	;;=134^2930000^5.2
	;;^UTILITY(U,$J,356.5,135,0)
	;;=135^2930000^6.8
	;;^UTILITY(U,$J,356.5,136,0)
	;;=136^2930000^4.9
	;;^UTILITY(U,$J,356.5,137,0)
	;;=137^2930000^0
	;;^UTILITY(U,$J,356.5,138,0)
	;;=138^2930000^5.9
	;;^UTILITY(U,$J,356.5,139,0)
	;;=139^2930000^3.7
	;;^UTILITY(U,$J,356.5,140,0)
	;;=140^2930000^4.5
	;;^UTILITY(U,$J,356.5,141,0)
	;;=141^2930000^5.7
	;;^UTILITY(U,$J,356.5,142,0)
	;;=142^2930000^3.9
	;;^UTILITY(U,$J,356.5,143,0)
	;;=143^2930000^3.4
	;;^UTILITY(U,$J,356.5,144,0)
	;;=144^2930000^7.1
	;;^UTILITY(U,$J,356.5,145,0)
	;;=145^2930000^4.4
	;;^UTILITY(U,$J,356.5,146,0)
	;;=146^2930000^13.8
	;;^UTILITY(U,$J,356.5,147,0)
	;;=147^2930000^8.9

IBINI06U
IBINI06U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,148,0)
	;;=148^2930000^15.9
	;;^UTILITY(U,$J,356.5,149,0)
	;;=149^2930000^9.1
	;;^UTILITY(U,$J,356.5,150,0)
	;;=150^2930000^13.9
	;;^UTILITY(U,$J,356.5,151,0)
	;;=151^2930000^7.6
	;;^UTILITY(U,$J,356.5,152,0)
	;;=152^2930000^10.8
	;;^UTILITY(U,$J,356.5,153,0)
	;;=153^2930000^7.1
	;;^UTILITY(U,$J,356.5,154,0)
	;;=154^2930000^18
	;;^UTILITY(U,$J,356.5,155,0)
	;;=155^2930000^8.6
	;;^UTILITY(U,$J,356.5,156,0)
	;;=156^2930000^22.6
	;;^UTILITY(U,$J,356.5,157,0)
	;;=157^2930000^6.6
	;;^UTILITY(U,$J,356.5,158,0)
	;;=158^2930000^3
	;;^UTILITY(U,$J,356.5,159,0)
	;;=159^2930000^6.3
	;;^UTILITY(U,$J,356.5,160,0)
	;;=160^2930000^3.3
	;;^UTILITY(U,$J,356.5,161,0)
	;;=161^2930000^4.6
	;;^UTILITY(U,$J,356.5,162,0)
	;;=162^2930000^2.2
	;;^UTILITY(U,$J,356.5,163,0)
	;;=163^2930000^4.6
	;;^UTILITY(U,$J,356.5,164,0)
	;;=164^2930000^11.2
	;;^UTILITY(U,$J,356.5,165,0)
	;;=165^2930000^7
	;;^UTILITY(U,$J,356.5,166,0)
	;;=166^2930000^7.2
	;;^UTILITY(U,$J,356.5,167,0)
	;;=167^2930000^4.1
	;;^UTILITY(U,$J,356.5,168,0)
	;;=168^2930000^5.8
	;;^UTILITY(U,$J,356.5,169,0)
	;;=169^2930000^2.9
	;;^UTILITY(U,$J,356.5,170,0)
	;;=170^2930000^16
	;;^UTILITY(U,$J,356.5,171,0)
	;;=171^2930000^7.4
	;;^UTILITY(U,$J,356.5,172,0)
	;;=172^2930000^10.6
	;;^UTILITY(U,$J,356.5,173,0)
	;;=173^2930000^7.4
	;;^UTILITY(U,$J,356.5,174,0)
	;;=174^2930000^6.9
	;;^UTILITY(U,$J,356.5,175,0)
	;;=175^2930000^4.5
	;;^UTILITY(U,$J,356.5,176,0)
	;;=176^2930000^7.7
	;;^UTILITY(U,$J,356.5,177,0)
	;;=177^2930000^6.2
	;;^UTILITY(U,$J,356.5,178,0)
	;;=178^2930000^4.4
	;;^UTILITY(U,$J,356.5,179,0)
	;;=179^2930000^9.8
	;;^UTILITY(U,$J,356.5,180,0)
	;;=180^2930000^7.7
	;;^UTILITY(U,$J,356.5,181,0)
	;;=181^2930000^4.7
	;;^UTILITY(U,$J,356.5,182,0)
	;;=182^2930000^0
	;;^UTILITY(U,$J,356.5,183,0)
	;;=183^2930000^4.7
	;;^UTILITY(U,$J,356.5,184,0)
	;;=184^2930000^4.9
	;;^UTILITY(U,$J,356.5,185,0)
	;;=185^2930000^6.2
	;;^UTILITY(U,$J,356.5,186,0)
	;;=186^2930000^2
	;;^UTILITY(U,$J,356.5,187,0)
	;;=187^2930000^3.9
	;;^UTILITY(U,$J,356.5,188,0)
	;;=188^2930000^7.4
	;;^UTILITY(U,$J,356.5,189,0)
	;;=189^2930000^4.1
	;;^UTILITY(U,$J,356.5,190,0)
	;;=190^2930000^5.7
	;;^UTILITY(U,$J,356.5,191,0)
	;;=191^2930000^20.1
	;;^UTILITY(U,$J,356.5,192,0)
	;;=192^2930000^9.7
	;;^UTILITY(U,$J,356.5,193,0)
	;;=193^2930000^16.5
	;;^UTILITY(U,$J,356.5,194,0)
	;;=194^2930000^9.6
	;;^UTILITY(U,$J,356.5,195,0)
	;;=195^2930000^12.4
	;;^UTILITY(U,$J,356.5,196,0)
	;;=196^2930000^8
	;;^UTILITY(U,$J,356.5,197,0)
	;;=197^2930000^8.5
	;;^UTILITY(U,$J,356.5,198,0)
	;;=198^2930000^3
	;;^UTILITY(U,$J,356.5,199,0)
	;;=199^2930000^14.2
	;;^UTILITY(U,$J,356.5,200,0)
	;;=200^2930000^13.7
	;;^UTILITY(U,$J,356.5,201,0)
	;;=201^2930000^14.4
	;;^UTILITY(U,$J,356.5,202,0)
	;;=202^2930000^9.8
	;;^UTILITY(U,$J,356.5,203,0)
	;;=203^2930000^9.8
	;;^UTILITY(U,$J,356.5,204,0)
	;;=204^2930000^8.1
	;;^UTILITY(U,$J,356.5,205,0)
	;;=205^2930000^9.1
	;;^UTILITY(U,$J,356.5,206,0)
	;;=206^2930000^6.2
	;;^UTILITY(U,$J,356.5,207,0)
	;;=207^2930000^7
	;;^UTILITY(U,$J,356.5,208,0)
	;;=208^2930000^4
	;;^UTILITY(U,$J,356.5,209,0)
	;;=209^2930000^10.5
	;;^UTILITY(U,$J,356.5,210,0)
	;;=210^2930000^13.2
	;;^UTILITY(U,$J,356.5,211,0)
	;;=211^2930000^9.5
	;;^UTILITY(U,$J,356.5,212,0)
	;;=212^2930000^11.6
	;;^UTILITY(U,$J,356.5,213,0)
	;;=213^2930000^13.2
	;;^UTILITY(U,$J,356.5,214,0)
	;;=214^2930000^10.3
	;;^UTILITY(U,$J,356.5,215,0)
	;;=215^2930000^6.1
	;;^UTILITY(U,$J,356.5,216,0)
	;;=216^2930000^14.4
	;;^UTILITY(U,$J,356.5,217,0)
	;;=217^2930000^21.7
	;;^UTILITY(U,$J,356.5,218,0)
	;;=218^2930000^9.1
	;;^UTILITY(U,$J,356.5,219,0)
	;;=219^2930000^5.2

IBINI06V
IBINI06V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,220,0)
	;;=220^2930000^4.1
	;;^UTILITY(U,$J,356.5,221,0)
	;;=221^2930000^10.8
	;;^UTILITY(U,$J,356.5,222,0)
	;;=222^2930000^5.1
	;;^UTILITY(U,$J,356.5,223,0)
	;;=223^2930000^4.1
	;;^UTILITY(U,$J,356.5,224,0)
	;;=224^2930000^2.9
	;;^UTILITY(U,$J,356.5,225,0)
	;;=225^2930000^5.3
	;;^UTILITY(U,$J,356.5,226,0)
	;;=226^2930000^9
	;;^UTILITY(U,$J,356.5,227,0)
	;;=227^2930000^3.7
	;;^UTILITY(U,$J,356.5,228,0)
	;;=228^2930000^3.8
	;;^UTILITY(U,$J,356.5,229,0)
	;;=229^2930000^2.6
	;;^UTILITY(U,$J,356.5,230,0)
	;;=230^2930000^6.5
	;;^UTILITY(U,$J,356.5,231,0)
	;;=231^2930000^6.6
	;;^UTILITY(U,$J,356.5,232,0)
	;;=232^2930000^6.7
	;;^UTILITY(U,$J,356.5,233,0)
	;;=233^2930000^11
	;;^UTILITY(U,$J,356.5,234,0)
	;;=234^2930000^5.6
	;;^UTILITY(U,$J,356.5,235,0)
	;;=235^2930000^12.3
	;;^UTILITY(U,$J,356.5,236,0)
	;;=236^2930000^10.2
	;;^UTILITY(U,$J,356.5,237,0)
	;;=237^2930000^6.1
	;;^UTILITY(U,$J,356.5,238,0)
	;;=238^2930000^14
	;;^UTILITY(U,$J,356.5,239,0)
	;;=239^2930000^10.1
	;;^UTILITY(U,$J,356.5,240,0)
	;;=240^2930000^9.7
	;;^UTILITY(U,$J,356.5,241,0)
	;;=241^2930000^8.3
	;;^UTILITY(U,$J,356.5,242,0)
	;;=242^2930000^10.9
	;;^UTILITY(U,$J,356.5,243,0)
	;;=243^2930000^7.1
	;;^UTILITY(U,$J,356.5,244,0)
	;;=244^2930000^8.1
	;;^UTILITY(U,$J,356.5,245,0)
	;;=245^2930000^8.6
	;;^UTILITY(U,$J,356.5,246,0)
	;;=246^2930000^6.6
	;;^UTILITY(U,$J,356.5,247,0)
	;;=247^2930000^7.4
	;;^UTILITY(U,$J,356.5,248,0)
	;;=248^2930000^8
	;;^UTILITY(U,$J,356.5,249,0)
	;;=249^2930000^7.8
	;;^UTILITY(U,$J,356.5,250,0)
	;;=250^2930000^7
	;;^UTILITY(U,$J,356.5,251,0)
	;;=251^2930000^4.5
	;;^UTILITY(U,$J,356.5,252,0)
	;;=252^2930000^4
	;;^UTILITY(U,$J,356.5,253,0)
	;;=253^2930000^8.4
	;;^UTILITY(U,$J,356.5,254,0)
	;;=254^2930000^5.6
	;;^UTILITY(U,$J,356.5,255,0)
	;;=255^2930000^4.6
	;;^UTILITY(U,$J,356.5,256,0)
	;;=256^2930000^8.7
	;;^UTILITY(U,$J,356.5,257,0)
	;;=257^2930000^5.1
	;;^UTILITY(U,$J,356.5,258,0)
	;;=258^2930000^3.6
	;;^UTILITY(U,$J,356.5,259,0)
	;;=259^2930000^6
	;;^UTILITY(U,$J,356.5,260,0)
	;;=260^2930000^2.6
	;;^UTILITY(U,$J,356.5,261,0)
	;;=261^2930000^2.7
	;;^UTILITY(U,$J,356.5,262,0)
	;;=262^2930000^3.6
	;;^UTILITY(U,$J,356.5,263,0)
	;;=263^2930000^20.7
	;;^UTILITY(U,$J,356.5,264,0)
	;;=264^2930000^11.6
	;;^UTILITY(U,$J,356.5,265,0)
	;;=265^2930000^9.8
	;;^UTILITY(U,$J,356.5,266,0)
	;;=266^2930000^4.3
	;;^UTILITY(U,$J,356.5,267,0)
	;;=267^2930000^4.8
	;;^UTILITY(U,$J,356.5,268,0)
	;;=268^2930000^5.3
	;;^UTILITY(U,$J,356.5,269,0)
	;;=269^2930000^12.3
	;;^UTILITY(U,$J,356.5,270,0)
	;;=270^2930000^4.1
	;;^UTILITY(U,$J,356.5,271,0)
	;;=271^2930000^12.9
	;;^UTILITY(U,$J,356.5,272,0)
	;;=272^2930000^9.4
	;;^UTILITY(U,$J,356.5,273,0)
	;;=273^2930000^7.4
	;;^UTILITY(U,$J,356.5,274,0)
	;;=274^2930000^11.2
	;;^UTILITY(U,$J,356.5,275,0)
	;;=275^2930000^11
	;;^UTILITY(U,$J,356.5,276,0)
	;;=276^2930000^5.7
	;;^UTILITY(U,$J,356.5,277,0)
	;;=277^2930000^8.5
	;;^UTILITY(U,$J,356.5,278,0)
	;;=278^2930000^6.4
	;;^UTILITY(U,$J,356.5,279,0)
	;;=279^2930000^8.4
	;;^UTILITY(U,$J,356.5,280,0)
	;;=280^2930000^6.9
	;;^UTILITY(U,$J,356.5,281,0)
	;;=281^2930000^4.4
	;;^UTILITY(U,$J,356.5,282,0)
	;;=282^2930000^8.6
	;;^UTILITY(U,$J,356.5,283,0)
	;;=283^2930000^7.2
	;;^UTILITY(U,$J,356.5,284,0)
	;;=284^2930000^5
	;;^UTILITY(U,$J,356.5,285,0)
	;;=285^2930000^21.7
	;;^UTILITY(U,$J,356.5,286,0)
	;;=286^2930000^11.5
	;;^UTILITY(U,$J,356.5,287,0)
	;;=287^2930000^19.2
	;;^UTILITY(U,$J,356.5,288,0)
	;;=288^2930000^10.9
	;;^UTILITY(U,$J,356.5,289,0)
	;;=289^2930000^6.7
	;;^UTILITY(U,$J,356.5,290,0)
	;;=290^2930000^3.5
	;;^UTILITY(U,$J,356.5,291,0)
	;;=291^2930000^2.1

IBINI06W
IBINI06W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,292,0)
	;;=292^2930000^18.1
	;;^UTILITY(U,$J,356.5,293,0)
	;;=293^2930000^7.8
	;;^UTILITY(U,$J,356.5,294,0)
	;;=294^2930000^7.4
	;;^UTILITY(U,$J,356.5,295,0)
	;;=295^2930000^5.8
	;;^UTILITY(U,$J,356.5,296,0)
	;;=296^2930000^8.5
	;;^UTILITY(U,$J,356.5,297,0)
	;;=297^2930000^5.6
	;;^UTILITY(U,$J,356.5,298,0)
	;;=298^2930000^6.5
	;;^UTILITY(U,$J,356.5,299,0)
	;;=299^2930000^6.9
	;;^UTILITY(U,$J,356.5,300,0)
	;;=300^2930000^9.5
	;;^UTILITY(U,$J,356.5,301,0)
	;;=301^2930000^6.1
	;;^UTILITY(U,$J,356.5,302,0)
	;;=302^2930000^15.8
	;;^UTILITY(U,$J,356.5,303,0)
	;;=303^2930000^13.4
	;;^UTILITY(U,$J,356.5,304,0)
	;;=304^2930000^13.5
	;;^UTILITY(U,$J,356.5,305,0)
	;;=305^2930000^6.4
	;;^UTILITY(U,$J,356.5,306,0)
	;;=306^2930000^8.9
	;;^UTILITY(U,$J,356.5,307,0)
	;;=307^2930000^4.5
	;;^UTILITY(U,$J,356.5,308,0)
	;;=308^2930000^9.2
	;;^UTILITY(U,$J,356.5,309,0)
	;;=309^2930000^2.9
	;;^UTILITY(U,$J,356.5,310,0)
	;;=310^2930000^5.6
	;;^UTILITY(U,$J,356.5,311,0)
	;;=311^2930000^2.7
	;;^UTILITY(U,$J,356.5,312,0)
	;;=312^2930000^5.5
	;;^UTILITY(U,$J,356.5,313,0)
	;;=313^2930000^2.7
	;;^UTILITY(U,$J,356.5,314,0)
	;;=314^2930000^8
	;;^UTILITY(U,$J,356.5,315,0)
	;;=315^2930000^12.5
	;;^UTILITY(U,$J,356.5,316,0)
	;;=316^2930000^9.3
	;;^UTILITY(U,$J,356.5,317,0)
	;;=317^2930000^4.3
	;;^UTILITY(U,$J,356.5,318,0)
	;;=318^2930000^9.2
	;;^UTILITY(U,$J,356.5,319,0)
	;;=319^2930000^6
	;;^UTILITY(U,$J,356.5,320,0)
	;;=320^2930000^8.5
	;;^UTILITY(U,$J,356.5,321,0)
	;;=321^2930000^6.2
	;;^UTILITY(U,$J,356.5,322,0)
	;;=322^2930000^7.2
	;;^UTILITY(U,$J,356.5,323,0)
	;;=323^2930000^4.2
	;;^UTILITY(U,$J,356.5,324,0)
	;;=324^2930000^2.6
	;;^UTILITY(U,$J,356.5,325,0)
	;;=325^2930000^5.9
	;;^UTILITY(U,$J,356.5,326,0)
	;;=326^2930000^4.1
	;;^UTILITY(U,$J,356.5,327,0)
	;;=327^2930000^5.8
	;;^UTILITY(U,$J,356.5,328,0)
	;;=328^2930000^5
	;;^UTILITY(U,$J,356.5,329,0)
	;;=329^2930000^3.8
	;;^UTILITY(U,$J,356.5,330,0)
	;;=330^2930000^0
	;;^UTILITY(U,$J,356.5,331,0)
	;;=331^2930000^7.6
	;;^UTILITY(U,$J,356.5,332,0)
	;;=332^2930000^4.6
	;;^UTILITY(U,$J,356.5,333,0)
	;;=333^2930000^7.1
	;;^UTILITY(U,$J,356.5,334,0)
	;;=334^2930000^9.1
	;;^UTILITY(U,$J,356.5,335,0)
	;;=335^2930000^7.3
	;;^UTILITY(U,$J,356.5,336,0)
	;;=336^2930000^5.8
	;;^UTILITY(U,$J,356.5,337,0)
	;;=337^2930000^3.8
	;;^UTILITY(U,$J,356.5,338,0)
	;;=338^2930000^5.4
	;;^UTILITY(U,$J,356.5,339,0)
	;;=339^2930000^4.7
	;;^UTILITY(U,$J,356.5,340,0)
	;;=340^2930000^3.7
	;;^UTILITY(U,$J,356.5,341,0)
	;;=341^2930000^4.4
	;;^UTILITY(U,$J,356.5,342,0)
	;;=342^2930000^3.8
	;;^UTILITY(U,$J,356.5,343,0)
	;;=343^2930000^0
	;;^UTILITY(U,$J,356.5,344,0)
	;;=344^2930000^5.4
	;;^UTILITY(U,$J,356.5,345,0)
	;;=345^2930000^5.2
	;;^UTILITY(U,$J,356.5,346,0)
	;;=346^2930000^8.9
	;;^UTILITY(U,$J,356.5,347,0)
	;;=347^2930000^6.8
	;;^UTILITY(U,$J,356.5,348,0)
	;;=348^2930000^5.8
	;;^UTILITY(U,$J,356.5,349,0)
	;;=349^2930000^3.3
	;;^UTILITY(U,$J,356.5,350,0)
	;;=350^2930000^8.9
	;;^UTILITY(U,$J,356.5,351,0)
	;;=351^2930000^0
	;;^UTILITY(U,$J,356.5,352,0)
	;;=352^2930000^4.9
	;;^UTILITY(U,$J,356.5,353,0)
	;;=353^2930000^11.8
	;;^UTILITY(U,$J,356.5,354,0)
	;;=354^2930000^8.3
	;;^UTILITY(U,$J,356.5,355,0)
	;;=355^2930000^5
	;;^UTILITY(U,$J,356.5,356,0)
	;;=356^2930000^4.3
	;;^UTILITY(U,$J,356.5,357,0)
	;;=357^2930000^12.5
	;;^UTILITY(U,$J,356.5,358,0)
	;;=358^2930000^6.6
	;;^UTILITY(U,$J,356.5,359,0)
	;;=359^2930000^4.5
	;;^UTILITY(U,$J,356.5,360,0)
	;;=360^2930000^5.3
	;;^UTILITY(U,$J,356.5,361,0)
	;;=361^2930000^5.6
	;;^UTILITY(U,$J,356.5,362,0)
	;;=362^2930000^1.3
	;;^UTILITY(U,$J,356.5,363,0)
	;;=363^2930000^4.4

IBINI06X
IBINI06X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,364,0)
	;;=364^2930000^4.3
	;;^UTILITY(U,$J,356.5,365,0)
	;;=365^2930000^10.9
	;;^UTILITY(U,$J,356.5,366,0)
	;;=366^2930000^10.3
	;;^UTILITY(U,$J,356.5,367,0)
	;;=367^2930000^6.5
	;;^UTILITY(U,$J,356.5,368,0)
	;;=368^2930000^7.6
	;;^UTILITY(U,$J,356.5,369,0)
	;;=369^2930000^4.8
	;;^UTILITY(U,$J,356.5,370,0)
	;;=370^2930000^6.6
	;;^UTILITY(U,$J,356.5,371,0)
	;;=371^2930000^4.4
	;;^UTILITY(U,$J,356.5,372,0)
	;;=372^2930000^3.7
	;;^UTILITY(U,$J,356.5,373,0)
	;;=373^2930000^2.5
	;;^UTILITY(U,$J,356.5,374,0)
	;;=374^2930000^3.5
	;;^UTILITY(U,$J,356.5,375,0)
	;;=375^2930000^13.1
	;;^UTILITY(U,$J,356.5,376,0)
	;;=376^2930000^3.4
	;;^UTILITY(U,$J,356.5,377,0)
	;;=377^2930000^5.1
	;;^UTILITY(U,$J,356.5,378,0)
	;;=378^2930000^3.6
	;;^UTILITY(U,$J,356.5,379,0)
	;;=379^2930000^3
	;;^UTILITY(U,$J,356.5,380,0)
	;;=380^2930000^2.8
	;;^UTILITY(U,$J,356.5,381,0)
	;;=381^2930000^2.5
	;;^UTILITY(U,$J,356.5,382,0)
	;;=382^2930000^1.5
	;;^UTILITY(U,$J,356.5,383,0)
	;;=383^2930000^5.1
	;;^UTILITY(U,$J,356.5,384,0)
	;;=384^2930000^2.6
	;;^UTILITY(U,$J,356.5,385,0)
	;;=385^2930000^2.7
	;;^UTILITY(U,$J,356.5,386,0)
	;;=386^2930000^149
	;;^UTILITY(U,$J,356.5,387,0)
	;;=387^2930000^5.5
	;;^UTILITY(U,$J,356.5,388,0)
	;;=388^2930000^0
	;;^UTILITY(U,$J,356.5,389,0)
	;;=389^2930000^9.5
	;;^UTILITY(U,$J,356.5,390,0)
	;;=390^2930000^16.1
	;;^UTILITY(U,$J,356.5,391,0)
	;;=391^2930000^0
	;;^UTILITY(U,$J,356.5,392,0)
	;;=392^2930000^14.1
	;;^UTILITY(U,$J,356.5,393,0)
	;;=393^2930000^0
	;;^UTILITY(U,$J,356.5,394,0)
	;;=394^2930000^10.5
	;;^UTILITY(U,$J,356.5,395,0)
	;;=395^2930000^6.5
	;;^UTILITY(U,$J,356.5,396,0)
	;;=396^2930000^4
	;;^UTILITY(U,$J,356.5,397,0)
	;;=397^2930000^7.5
	;;^UTILITY(U,$J,356.5,398,0)
	;;=398^2930000^8.4
	;;^UTILITY(U,$J,356.5,399,0)
	;;=399^2930000^5.4
	;;^UTILITY(U,$J,356.5,400,0)
	;;=400^2930000^13.4
	;;^UTILITY(U,$J,356.5,401,0)
	;;=401^2930000^16.1
	;;^UTILITY(U,$J,356.5,402,0)
	;;=402^2930000^5.3
	;;^UTILITY(U,$J,356.5,403,0)
	;;=403^2930000^12.1
	;;^UTILITY(U,$J,356.5,404,0)
	;;=404^2930000^6.3
	;;^UTILITY(U,$J,356.5,405,0)
	;;=405^2930000^2.9
	;;^UTILITY(U,$J,356.5,406,0)
	;;=406^2930000^15.3
	;;^UTILITY(U,$J,356.5,407,0)
	;;=407^2930000^6.6
	;;^UTILITY(U,$J,356.5,408,0)
	;;=408^2930000^8.6
	;;^UTILITY(U,$J,356.5,409,0)
	;;=409^2930000^9.1
	;;^UTILITY(U,$J,356.5,410,0)
	;;=410^2930000^3.7
	;;^UTILITY(U,$J,356.5,411,0)
	;;=411^2930000^3.8
	;;^UTILITY(U,$J,356.5,412,0)
	;;=412^2930000^2.9
	;;^UTILITY(U,$J,356.5,413,0)
	;;=413^2930000^10.8
	;;^UTILITY(U,$J,356.5,414,0)
	;;=414^2930000^6.8
	;;^UTILITY(U,$J,356.5,415,0)
	;;=415^2930000^20.7
	;;^UTILITY(U,$J,356.5,416,0)
	;;=416^2930000^10.5
	;;^UTILITY(U,$J,356.5,417,0)
	;;=417^2930000^9
	;;^UTILITY(U,$J,356.5,418,0)
	;;=418^2930000^8.4
	;;^UTILITY(U,$J,356.5,419,0)
	;;=419^2930000^7.5
	;;^UTILITY(U,$J,356.5,420,0)
	;;=420^2930000^6
	;;^UTILITY(U,$J,356.5,421,0)
	;;=421^2930000^5.6
	;;^UTILITY(U,$J,356.5,422,0)
	;;=422^2930000^5.3
	;;^UTILITY(U,$J,356.5,423,0)
	;;=423^2930000^11.9
	;;^UTILITY(U,$J,356.5,424,0)
	;;=424^2930000^24.8
	;;^UTILITY(U,$J,356.5,425,0)
	;;=425^2930000^8.7
	;;^UTILITY(U,$J,356.5,426,0)
	;;=426^2930000^11.7
	;;^UTILITY(U,$J,356.5,427,0)
	;;=427^2930000^12
	;;^UTILITY(U,$J,356.5,428,0)
	;;=428^2930000^16.6
	;;^UTILITY(U,$J,356.5,429,0)
	;;=429^2930000^20.4
	;;^UTILITY(U,$J,356.5,430,0)
	;;=430^2930000^19.3
	;;^UTILITY(U,$J,356.5,431,0)
	;;=431^2930000^17.4
	;;^UTILITY(U,$J,356.5,432,0)
	;;=432^2930000^15.8
	;;^UTILITY(U,$J,356.5,433,0)
	;;=433^2930000^4.8
	;;^UTILITY(U,$J,356.5,434,0)
	;;=434^2930000^8.6
	;;^UTILITY(U,$J,356.5,435,0)
	;;=435^2930000^11.6

IBINI06Y
IBINI06Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.5,436,0)
	;;=436^2930000^17.8
	;;^UTILITY(U,$J,356.5,437,0)
	;;=437^2930000^16.8
	;;^UTILITY(U,$J,356.5,438,0)
	;;=438^2930000^0
	;;^UTILITY(U,$J,356.5,439,0)
	;;=439^2930000^9.6
	;;^UTILITY(U,$J,356.5,440,0)
	;;=440^2930000^13.4
	;;^UTILITY(U,$J,356.5,441,0)
	;;=441^2930000^3.7
	;;^UTILITY(U,$J,356.5,442,0)
	;;=442^2930000^10
	;;^UTILITY(U,$J,356.5,443,0)
	;;=443^2930000^3.8
	;;^UTILITY(U,$J,356.5,444,0)
	;;=444^2930000^7.3
	;;^UTILITY(U,$J,356.5,445,0)
	;;=445^2930000^8.4
	;;^UTILITY(U,$J,356.5,446,0)
	;;=446^2930000^2.5
	;;^UTILITY(U,$J,356.5,447,0)
	;;=447^2930000^3.6
	;;^UTILITY(U,$J,356.5,448,0)
	;;=448^2930000^1
	;;^UTILITY(U,$J,356.5,449,0)
	;;=449^2930000^6
	;;^UTILITY(U,$J,356.5,450,0)
	;;=450^2930000^3.6
	;;^UTILITY(U,$J,356.5,451,0)
	;;=451^2930000^5.2
	;;^UTILITY(U,$J,356.5,452,0)
	;;=452^2930000^6.3
	;;^UTILITY(U,$J,356.5,453,0)
	;;=453^2930000^3.9
	;;^UTILITY(U,$J,356.5,454,0)
	;;=454^2930000^7.1
	;;^UTILITY(U,$J,356.5,455,0)
	;;=455^2930000^3.5
	;;^UTILITY(U,$J,356.5,456,0)
	;;=456^2930000^9.6
	;;^UTILITY(U,$J,356.5,457,0)
	;;=457^2930000^7.7
	;;^UTILITY(U,$J,356.5,458,0)
	;;=458^2930000^23.2
	;;^UTILITY(U,$J,356.5,459,0)
	;;=459^2930000^15.1
	;;^UTILITY(U,$J,356.5,460,0)
	;;=460^2930000^9.7
	;;^UTILITY(U,$J,356.5,461,0)
	;;=461^2930000^12.4
	;;^UTILITY(U,$J,356.5,462,0)
	;;=462^2930000^17
	;;^UTILITY(U,$J,356.5,463,0)
	;;=463^2930000^7.4
	;;^UTILITY(U,$J,356.5,464,0)
	;;=464^2930000^7.2
	;;^UTILITY(U,$J,356.5,465,0)
	;;=465^2930000^3.4
	;;^UTILITY(U,$J,356.5,466,0)
	;;=466^2930000^7.6
	;;^UTILITY(U,$J,356.5,467,0)
	;;=467^2930000^11.1
	;;^UTILITY(U,$J,356.5,468,0)
	;;=468^2930000^19
	;;^UTILITY(U,$J,356.5,469,0)
	;;=469^2930000^0
	;;^UTILITY(U,$J,356.5,470,0)
	;;=470^2930000^16.3
	;;^UTILITY(U,$J,356.5,471,0)
	;;=471^2930000^14.2
	;;^UTILITY(U,$J,356.5,472,0)
	;;=472^2930000^29
	;;^UTILITY(U,$J,356.5,473,0)
	;;=473^2930000^17.2
	;;^UTILITY(U,$J,356.5,474,0)
	;;=474^2930000^0
	;;^UTILITY(U,$J,356.5,475,0)
	;;=475^2930000^14.2
	;;^UTILITY(U,$J,356.5,476,0)
	;;=476^2930000^17.5
	;;^UTILITY(U,$J,356.5,477,0)
	;;=477^2930000^10.7
	;;^UTILITY(U,$J,356.5,478,0)
	;;=478^2930000^10.3
	;;^UTILITY(U,$J,356.5,479,0)
	;;=479^2930000^5.5
	;;^UTILITY(U,$J,356.5,480,0)
	;;=480^2930000^38.8
	;;^UTILITY(U,$J,356.5,481,0)
	;;=481^2930000^41.8
	;;^UTILITY(U,$J,356.5,482,0)
	;;=482^2930000^18.5
	;;^UTILITY(U,$J,356.5,483,0)
	;;=483^2930000^57.1
	;;^UTILITY(U,$J,356.5,484,0)
	;;=484^2930000^23.9
	;;^UTILITY(U,$J,356.5,485,0)
	;;=485^2930000^17.8
	;;^UTILITY(U,$J,356.5,486,0)
	;;=486^2930000^16.9
	;;^UTILITY(U,$J,356.5,487,0)
	;;=487^2930000^11.7
	;;^UTILITY(U,$J,356.5,488,0)
	;;=488^2930000^22.9
	;;^UTILITY(U,$J,356.5,489,0)
	;;=489^2930000^14.6
	;;^UTILITY(U,$J,356.5,490,0)
	;;=490^2930000^9.4
	;;^UTILITY(U,$J,356.5,491,0)
	;;=491^2930000^0
	;;^UTILITY(U,$J,356.5,492,0)
	;;=492^2930000^0

IBINI06Z
IBINI06Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.6,0,"GL")
	;;=^IBE(356.6,
	;;^DIC("B","CLAIMS TRACKING TYPE",356.6)
	;;=
	;;^DIC(356.6,"%D",0)
	;;=^^8^8^2940214^^^^
	;;^DIC(356.6,"%D",1,0)
	;;=This file contains the types of events that can be stored in Claims
	;;^DIC(356.6,"%D",2,0)
	;;=Tracking.  It also contains data on how the automated biller is to
	;;^DIC(356.6,"%D",3,0)
	;;=handle each type of event.  
	;;^DIC(356.6,"%D",4,0)
	;;= 
	;;^DIC(356.6,"%D",5,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.6,"%D",6,0)
	;;=from your ISC.
	;;^DIC(356.6,"%D",7,0)
	;;= 
	;;^DIC(356.6,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.6,0)
	;;=FIELD^^.01^7
	;;^DD(356.6,0,"DT")
	;;=2940309
	;;^DD(356.6,0,"IX","AC",356.6,.08)
	;;=
	;;^DD(356.6,0,"IX","ACODE",356.6,.03)
	;;=
	;;^DD(356.6,0,"IX","B",356.6,.01)
	;;=
	;;^DD(356.6,0,"NM","CLAIMS TRACKING TYPE")
	;;=
	;;^DD(356.6,0,"PT",356,.18)
	;;=
	;;^DD(356.6,.01,0)
	;;=NAME^RFI^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.6,.01,1,0)
	;;=^.1
	;;^DD(356.6,.01,1,1,0)
	;;=356.6^B
	;;^DD(356.6,.01,1,1,1)
	;;=S ^IBE(356.6,"B",$E(X,1,30),DA)=""
	;;^DD(356.6,.01,1,1,2)
	;;=K ^IBE(356.6,"B",$E(X,1,30),DA)
	;;^DD(356.6,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(356.6,.01,21,0)
	;;=^^6^6^2940213^^^^
	;;^DD(356.6,.01,21,1,0)
	;;=This is the name of the type of event that can be stored in Claims Tracking.
	;;^DD(356.6,.01,21,2,0)
	;;=Only certain types of events or visits are known to Claims Tracking.  Adding
	;;^DD(356.6,.01,21,3,0)
	;;=or deleting entries can have unwanted effects on the IB package.  Currently
	;;^DD(356.6,.01,21,4,0)
	;;=only inpatient, outpatient, prosthetics, and Rx Refill visits are known 
	;;^DD(356.6,.01,21,5,0)
	;;=to IB.  Future plans call for adding Fee Basis visits.  This is limited
	;;^DD(356.6,.01,21,6,0)
	;;=to those areas that we currently have legislative authority to bill.
	;;^DD(356.6,.01,"DT")
	;;=2930803
	;;^DD(356.6,.02,0)
	;;=ABBREVIATION^F^^0;2^K:$L(X)>8!($L(X)<3) X
	;;^DD(356.6,.02,3)
	;;=Answer must be 3-8 characters in length.
	;;^DD(356.6,.02,21,0)
	;;=^^2^2^2931128^
	;;^DD(356.6,.02,21,1,0)
	;;=Enter the 3-8 character abbreviation for this entry that will be used 
	;;^DD(356.6,.02,21,2,0)
	;;=on display screens and outputs.
	;;^DD(356.6,.02,"DT")
	;;=2930628
	;;^DD(356.6,.03,0)
	;;=TYPE CODE^SI^1:INPATIENT CARE;2:OUTPATIENT CARE;3:RX REFILL;4:PROSTHETICS;^0;3^Q
	;;^DD(356.6,.03,1,0)
	;;=^.1
	;;^DD(356.6,.03,1,1,0)
	;;=356.6^ACODE
	;;^DD(356.6,.03,1,1,1)
	;;=S ^IBE(356.6,"ACODE",$E(X,1,30),DA)=""
	;;^DD(356.6,.03,1,1,2)
	;;=K ^IBE(356.6,"ACODE",$E(X,1,30),DA)
	;;^DD(356.6,.03,1,1,"DT")
	;;=2930813
	;;^DD(356.6,.03,21,0)
	;;=^^2^2^2940202^^
	;;^DD(356.6,.03,21,1,0)
	;;=Enter the correct type code for this entry.  This type code is used
	;;^DD(356.6,.03,21,2,0)
	;;=internally by the Claims Tracking Module.  Do not edit this field.
	;;^DD(356.6,.03,"DT")
	;;=2930813
	;;^DD(356.6,.04,0)
	;;=AUTOMATE BILLING^S^1:YES;^0;4^Q
	;;^DD(356.6,.04,3)
	;;=Enter "YES" if this type of entry can be automatically billed.
	;;^DD(356.6,.04,21,0)
	;;=^^5^5^2931021^^^^
	;;^DD(356.6,.04,21,1,0)
	;;=This will control the automated creation of bills for each type of care.
	;;^DD(356.6,.04,21,2,0)
	;;= 
	;;^DD(356.6,.04,21,3,0)
	;;=If this is "Y"es then the Earliest Auto Bill date will be automatically
	;;^DD(356.6,.04,21,4,0)
	;;=added to billable events.  These events can then be added to bills by
	;;^DD(356.6,.04,21,5,0)
	;;=the automated biller.

IBINI070
IBINI070	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.6,.04,"DT")
	;;=2930802
	;;^DD(356.6,.05,0)
	;;=BILLING CYCLE^NJ4,0^^0;5^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.6,.05,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits.  Enter the number of days in the billing cycle for this type of claim.
	;;^DD(356.6,.05,21,0)
	;;=^^9^9^2931021^^^^
	;;^DD(356.6,.05,21,1,0)
	;;=This is the maximum number of days allowed on a single bill for this type
	;;^DD(356.6,.05,21,2,0)
	;;=of care.
	;;^DD(356.6,.05,21,3,0)
	;;= 
	;;^DD(356.6,.05,21,4,0)
	;;=For example, if outpatient bills have a billing cycle of 7 days then
	;;^DD(356.6,.05,21,5,0)
	;;=one bill will be created for a seven day period, which may contain 1
	;;^DD(356.6,.05,21,6,0)
	;;=visit or seven.
	;;^DD(356.6,.05,21,7,0)
	;;= 
	;;^DD(356.6,.05,21,8,0)
	;;=If this is left blank and the event type can be automatically billed then
	;;^DD(356.6,.05,21,9,0)
	;;=the bills will be created in one month intervals.
	;;^DD(356.6,.05,"DT")
	;;=2930802
	;;^DD(356.6,.06,0)
	;;=DAYS DELAY^NJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.6,.06,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits.  Enter the number of days after a billing cycle completes that the Automated Biller should run.
	;;^DD(356.6,.06,21,0)
	;;=^^6^6^2931021^^
	;;^DD(356.6,.06,21,1,0)
	;;=This is the minimum number of days delay that apparently billable 
	;;^DD(356.6,.06,21,2,0)
	;;=visits (for this type of event type) should wait for auto billing.
	;;^DD(356.6,.06,21,3,0)
	;;= 
	;;^DD(356.6,.06,21,4,0)
	;;=This field works in conjunction with the field BILLING CYCLE to 
	;;^DD(356.6,.06,21,5,0)
	;;=determine what visits are included on a bill and when those bills can
	;;^DD(356.6,.06,21,6,0)
	;;=be created.
	;;^DD(356.6,.06,"DT")
	;;=2930802
	;;^DD(356.6,.08,0)
	;;=ENTRY CODE^NJ2,0I^^0;8^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.6,.08,1,0)
	;;=^.1
	;;^DD(356.6,.08,1,1,0)
	;;=356.6^AC
	;;^DD(356.6,.08,1,1,1)
	;;=S ^IBE(356.6,"AC",$E(X,1,30),DA)=""
	;;^DD(356.6,.08,1,1,2)
	;;=K ^IBE(356.6,"AC",$E(X,1,30),DA)
	;;^DD(356.6,.08,1,1,"DT")
	;;=2940223
	;;^DD(356.6,.08,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(356.6,.08,21,0)
	;;=^^3^3^2940202^
	;;^DD(356.6,.08,21,1,0)
	;;=This field is designed to be used internally by the claims tracking module
	;;^DD(356.6,.08,21,2,0)
	;;=to uniquely identify an entry.  This number will intially be the same as
	;;^DD(356.6,.08,21,3,0)
	;;=the internal entry number.  It should not be edited.
	;;^DD(356.6,.08,"DT")
	;;=2940309

IBINI071
IBINI071	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.6)
	;;=^IBE(356.6,
	;;^UTILITY(U,$J,356.6,0)
	;;=CLAIMS TRACKING TYPE^356.6^5^5
	;;^UTILITY(U,$J,356.6,1,0)
	;;=INPATIENT ADMISSION^INPT.^1^^^^^1
	;;^UTILITY(U,$J,356.6,2,0)
	;;=OUTPATIENT VISIT^OPT.^2^^^^^2
	;;^UTILITY(U,$J,356.6,3,0)
	;;=PROSTHETIC ITEM^Prosth^4^^^^^3
	;;^UTILITY(U,$J,356.6,4,0)
	;;=PRESCRIPTION REFILL^RxRefill^3^^^^^4
	;;^UTILITY(U,$J,356.6,5,0)
	;;=SCHEDULED ADMISSION^Sch Adm^1^^^^^5

IBINI072
IBINI072	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.7,0,"GL")
	;;=^IBE(356.7,
	;;^DIC("B","CLAIMS TRACKING ACTION",356.7)
	;;=
	;;^DIC(356.7,"%D",0)
	;;=^^7^7^2940214^^^^
	;;^DIC(356.7,"%D",1,0)
	;;=This file contains a list of the types of actions that may be taken
	;;^DIC(356.7,"%D",2,0)
	;;=on a review or a contact by an insurance company
	;;^DIC(356.7,"%D",3,0)
	;;= 
	;;^DIC(356.7,"%D",4,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.7,"%D",5,0)
	;;=from your ISC.
	;;^DIC(356.7,"%D",6,0)
	;;= 
	;;^DIC(356.7,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.7,0)
	;;=FIELD^^.03^3
	;;^DD(356.7,0,"DDA")
	;;=N
	;;^DD(356.7,0,"DT")
	;;=2930728
	;;^DD(356.7,0,"IX","ACODE",356.7,.03)
	;;=
	;;^DD(356.7,0,"IX","B",356.7,.01)
	;;=
	;;^DD(356.7,0,"NM","CLAIMS TRACKING ACTION")
	;;=
	;;^DD(356.7,0,"PT",356.2,.11)
	;;=
	;;^DD(356.7,.001,0)
	;;=NUMBER^NJ6,0^^ ^K:+X'=X!(X>999999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.7,.001,3)
	;;=Type a Number between 1 and 999999, 0 Decimal Digits
	;;^DD(356.7,.001,21,0)
	;;=^^1^1^2931128^
	;;^DD(356.7,.001,21,1,0)
	;;=This is the number of the Action.  It is used for look-up purposes.
	;;^DD(356.7,.001,"DT")
	;;=2930610
	;;^DD(356.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.7,.01,1,0)
	;;=^.1
	;;^DD(356.7,.01,1,1,0)
	;;=356.7^B
	;;^DD(356.7,.01,1,1,1)
	;;=S ^IBE(356.7,"B",$E(X,1,30),DA)=""
	;;^DD(356.7,.01,1,1,2)
	;;=K ^IBE(356.7,"B",$E(X,1,30),DA)
	;;^DD(356.7,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(356.7,.01,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.7,.01,21,1,0)
	;;=This is the name of the action that can be taken by an insurance 
	;;^DD(356.7,.01,21,2,0)
	;;=company on a review or contact.  Do not locally add, edit, or delete
	;;^DD(356.7,.01,21,3,0)
	;;=entries from this file.
	;;^DD(356.7,.03,0)
	;;=CODE^NJ3,0I^^0;3^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.7,.03,1,0)
	;;=^.1
	;;^DD(356.7,.03,1,1,0)
	;;=356.7^ACODE
	;;^DD(356.7,.03,1,1,1)
	;;=S ^IBE(356.7,"ACODE",$E(X,1,30),DA)=""
	;;^DD(356.7,.03,1,1,2)
	;;=K ^IBE(356.7,"ACODE",$E(X,1,30),DA)
	;;^DD(356.7,.03,1,1,"DT")
	;;=2930811
	;;^DD(356.7,.03,3)
	;;=Type a Number between 1 and 999, 0 Decimal Digits
	;;^DD(356.7,.03,21,0)
	;;=^^3^3^2931128^
	;;^DD(356.7,.03,21,1,0)
	;;=This is the code for this type of action entry.  This number is used
	;;^DD(356.7,.03,21,2,0)
	;;=internally by the Claims Tracking module and should not be modified 
	;;^DD(356.7,.03,21,3,0)
	;;=locally.
	;;^DD(356.7,.03,"DT")
	;;=2931128

IBINI073
IBINI073	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.7)
	;;=^IBE(356.7,
	;;^UTILITY(U,$J,356.7,0)
	;;=CLAIMS TRACKING ACTION^356.7^5^5
	;;^UTILITY(U,$J,356.7,1,0)
	;;=APPROVED^^10
	;;^UTILITY(U,$J,356.7,2,0)
	;;=DENIAL^^20
	;;^UTILITY(U,$J,356.7,3,0)
	;;=PENALTY^^30
	;;^UTILITY(U,$J,356.7,4,0)
	;;=CASE PENDING^^40
	;;^UTILITY(U,$J,356.7,5,0)
	;;=NO COVERAGE^^50

IBINI074
IBINI074	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.8,0,"GL")
	;;=^IBE(356.8,
	;;^DIC("B","CLAIMS TRACKING NON-BILLABLE REASONS",356.8)
	;;=
	;;^DIC(356.8,"%D",0)
	;;=^^7^7^2940214^^
	;;^DIC(356.8,"%D",1,0)
	;;=This is a file of reasons that may be entered into the claims tracking 
	;;^DIC(356.8,"%D",2,0)
	;;=module to specify why a potential claim isn't billable.
	;;^DIC(356.8,"%D",3,0)
	;;= 
	;;^DIC(356.8,"%D",4,0)
	;;=Do NOT add, edit, or delete entries in this file without instructions
	;;^DIC(356.8,"%D",5,0)
	;;=from your ISC.
	;;^DIC(356.8,"%D",6,0)
	;;= 
	;;^DIC(356.8,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.8,0)
	;;=FIELD^^.001^2
	;;^DD(356.8,0,"DDA")
	;;=N
	;;^DD(356.8,0,"DT")
	;;=2930930
	;;^DD(356.8,0,"IX","B",356.8,.01)
	;;=
	;;^DD(356.8,0,"NM","CLAIMS TRACKING NON-BILLABLE REASONS")
	;;=
	;;^DD(356.8,0,"PT",356,.19)
	;;=
	;;^DD(356.8,.001,0)
	;;=NUMBER^NJ4,0^^ ^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(356.8,.001,3)
	;;=Type a Number between 1 and 9999, 0 Decimal Digits
	;;^DD(356.8,.001,21,0)
	;;=^^2^2^2931128^
	;;^DD(356.8,.001,21,1,0)
	;;=This is the number of the reason not billable.  It is used for look-up
	;;^DD(356.8,.001,21,2,0)
	;;=purposes only.
	;;^DD(356.8,.001,"DT")
	;;=2930930
	;;^DD(356.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(356.8,.01,1,0)
	;;=^.1
	;;^DD(356.8,.01,1,1,0)
	;;=356.8^B
	;;^DD(356.8,.01,1,1,1)
	;;=S ^IBE(356.8,"B",$E(X,1,30),DA)=""
	;;^DD(356.8,.01,1,1,2)
	;;=K ^IBE(356.8,"B",$E(X,1,30),DA)
	;;^DD(356.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(356.8,.01,21,0)
	;;=^^5^5^2940213^^^^
	;;^DD(356.8,.01,21,1,0)
	;;=Enter the name of the reason that a visit is not billable.  This is the name
	;;^DD(356.8,.01,21,2,0)
	;;=that will appear on displays and outputs.  If a claims tracking entry is 
	;;^DD(356.8,.01,21,3,0)
	;;=assigned a reaon not billable then it will be considered to not be 
	;;^DD(356.8,.01,21,4,0)
	;;=billable.  Users may select whether visits that have a reason not billable
	;;^DD(356.8,.01,21,5,0)
	;;=assigned should appear on the patients with visits and insurance reports.

IBINI075
IBINI075	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(356.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,356.8)
	;;=^IBE(356.8,
	;;^UTILITY(U,$J,356.8,0)
	;;=CLAIMS TRACKING NON-BILLABLE REASONS^356.8^18^19
	;;^UTILITY(U,$J,356.8,1,0)
	;;=NOT INSURED
	;;^UTILITY(U,$J,356.8,2,0)
	;;=SC TREATMENT
	;;^UTILITY(U,$J,356.8,3,0)
	;;=AGENT ORANGE
	;;^UTILITY(U,$J,356.8,4,0)
	;;=IONIZING RADIATION
	;;^UTILITY(U,$J,356.8,5,0)
	;;=ENV. CONTAM.
	;;^UTILITY(U,$J,356.8,6,0)
	;;=SERVICE NOT COVERED
	;;^UTILITY(U,$J,356.8,7,0)
	;;=COVERAGE CANCELED
	;;^UTILITY(U,$J,356.8,8,0)
	;;=NEEDS SC DETERMINATION
	;;^UTILITY(U,$J,356.8,9,0)
	;;=NON-BILLABLE APPOINTMENT TYPE
	;;^UTILITY(U,$J,356.8,10,0)
	;;=INVALID PRESCRIPTION ENTRY
	;;^UTILITY(U,$J,356.8,11,0)
	;;=REFILL ON VISIT DATE
	;;^UTILITY(U,$J,356.8,12,0)
	;;=PRESCRIPTION DELETED
	;;^UTILITY(U,$J,356.8,13,0)
	;;=PRESCRIPTION NOT RELEASED
	;;^UTILITY(U,$J,356.8,14,0)
	;;=DRUG NOT BILLABLE
	;;^UTILITY(U,$J,356.8,15,0)
	;;=HMO POLICY
	;;^UTILITY(U,$J,356.8,16,0)
	;;=REFUSES TO SIGN RELEASE (ROI)
	;;^UTILITY(U,$J,356.8,17,0)
	;;=NON-BILLABLE STOP CODE
	;;^UTILITY(U,$J,356.8,18,0)
	;;=RESEARCH VISIT
	;;^UTILITY(U,$J,356.8,999,0)
	;;=OTHER

IBINI076
IBINI076	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.9,0,"GL")
	;;=^IBT(356.9,
	;;^DIC("B","INPATIENT DIAGNOSIS",356.9)
	;;=
	;;^DIC(356.9,"%D",0)
	;;=^^3^3^2940214^^^^
	;;^DIC(356.9,"%D",1,0)
	;;=This file is designed to hold all inpatient diagnoses.
	;;^DIC(356.9,"%D",2,0)
	;;= 
	;;^DIC(356.9,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.9,0)
	;;=FIELD^^.04^4
	;;^DD(356.9,0,"DT")
	;;=2930901
	;;^DD(356.9,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(356.9,0,"ID",.04)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(356.9,.04,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
	;;^DD(356.9,0,"ID","WRITE")
	;;=N Y S Y=$G(^(0)) W "   ",$P($G(^DPT(+$P($G(^DGPM(+$P(Y,U,2),0)),U,3),0)),U)
	;;^DD(356.9,0,"IX","ADG",356.9,.01)
	;;=
	;;^DD(356.9,0,"IX","ADG1",356.9,.02)
	;;=
	;;^DD(356.9,0,"IX","ADG2",356.9,.04)
	;;=
	;;^DD(356.9,0,"IX","ADGPM",356.9,.01)
	;;=
	;;^DD(356.9,0,"IX","ADGPM1",356.9,.02)
	;;=
	;;^DD(356.9,0,"IX","APD",356.9,.02)
	;;=
	;;^DD(356.9,0,"IX","APD1",356.9,.03)
	;;=
	;;^DD(356.9,0,"IX","ATP",356.9,.04)
	;;=
	;;^DD(356.9,0,"IX","ATP1",356.9,.02)
	;;=
	;;^DD(356.9,0,"IX","B",356.9,.01)
	;;=
	;;^DD(356.9,0,"IX","C",356.9,.02)
	;;=
	;;^DD(356.9,0,"IX","D",356.9,.03)
	;;=
	;;^DD(356.9,0,"NM","INPATIENT DIAGNOSIS")
	;;=
	;;^DD(356.9,0,"PT",356,.3)
	;;=
	;;^DD(356.9,.01,0)
	;;=DIAGNOSIS^RP80'^ICD9(^0;1^Q
	;;^DD(356.9,.01,1,0)
	;;=^.1
	;;^DD(356.9,.01,1,1,0)
	;;=356.9^B
	;;^DD(356.9,.01,1,1,1)
	;;=S ^IBT(356.9,"B",$E(X,1,30),DA)=""
	;;^DD(356.9,.01,1,1,2)
	;;=K ^IBT(356.9,"B",$E(X,1,30),DA)
	;;^DD(356.9,.01,1,2,0)
	;;=356.9^ADG^MUMPS
	;;^DD(356.9,.01,1,2,1)
	;;=S:$P(^IBT(356.9,DA,0),U,4)=3&($P(^(0),U,2)) ^IBT(356.9,"ADG",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.9,.01,1,2,2)
	;;=K ^IBT(356.9,"ADG",+$P(^IBT(356.9,DA,0),U,2),X,DA)
	;;^DD(356.9,.01,1,2,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.9,.01,1,2,"%D",1,0)
	;;=Cross-reference of admitting diagnosis by admission movement.
	;;^DD(356.9,.01,1,2,"DT")
	;;=2930901
	;;^DD(356.9,.01,1,3,0)
	;;=356.9^ADGPM^MUMPS
	;;^DD(356.9,.01,1,3,1)
	;;=S:$P(^IBT(356.9,DA,0),U,2) ^IBT(356.9,"ADGPM",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.9,.01,1,3,2)
	;;=K ^IBT(356.9,"ADGPM",+$P(^IBT(356.9,DA,0),U,2),X,DA)
	;;^DD(356.9,.01,1,3,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.9,.01,1,3,"%D",1,0)
	;;=Cross-reference of all diagnosis by admission movement
	;;^DD(356.9,.01,1,3,"DT")
	;;=2930901
	;;^DD(356.9,.01,3)
	;;=
	;;^DD(356.9,.01,21,0)
	;;=^^1^1^2930720^^^^
	;;^DD(356.9,.01,21,1,0)
	;;=This is the diagnosis for this patient for this episode of care.
	;;^DD(356.9,.01,"DT")
	;;=2930901
	;;^DD(356.9,.02,0)
	;;=ADMISSION MOVEMENT^*P405'^DGPM(^0;2^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.9,.02,1,0)
	;;=^.1
	;;^DD(356.9,.02,1,1,0)
	;;=356.9^C
	;;^DD(356.9,.02,1,1,1)
	;;=S ^IBT(356.9,"C",$E(X,1,30),DA)=""
	;;^DD(356.9,.02,1,1,2)
	;;=K ^IBT(356.9,"C",$E(X,1,30),DA)
	;;^DD(356.9,.02,1,1,"DT")
	;;=2930713
	;;^DD(356.9,.02,1,2,0)
	;;=356.9^APD^MUMPS
	;;^DD(356.9,.02,1,2,1)
	;;=S:$P(^IBT(356.9,DA,0),U,3) ^IBT(356.9,"APD",X,-$P(^(0),U,3),DA)=""
	;;^DD(356.9,.02,1,2,2)
	;;=K ^IBT(356.9,"APD",X,-$P(^IBT(356.9,DA,0),U,3),DA)
	;;^DD(356.9,.02,1,2,"%D",0)
	;;=^^1^1^2940213^^^^
	;;^DD(356.9,.02,1,2,"%D",1,0)
	;;=cross reference of all diagnoses by tracking id and inverse date
	;;^DD(356.9,.02,1,2,"DT")
	;;=2930713
	;;^DD(356.9,.02,1,3,0)
	;;=356.9^ATP1^MUMPS
	;;^DD(356.9,.02,1,3,1)
	;;=S:$P(^IBT(356.9,DA,0),U,4) ^IBT(356.9,"ATP",X,$P(^(0),U,4),DA)=""
	;;^DD(356.9,.02,1,3,2)
	;;=K ^IBT(356.9,"ATP",X,+$P(^IBT(356.9,DA,0),U,4),DA)

IBINI077
IBINI077	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.9,.02,1,3,"%D",0)
	;;=^^2^2^2930720^
	;;^DD(356.9,.02,1,3,"%D",1,0)
	;;=Cross reference of primary diagnosis for a tracking entry so only one
	;;^DD(356.9,.02,1,3,"%D",2,0)
	;;=diagnosis can be primary
	;;^DD(356.9,.02,1,3,"DT")
	;;=2930720
	;;^DD(356.9,.02,1,4,0)
	;;=356.9^ADG1^MUMPS
	;;^DD(356.9,.02,1,4,1)
	;;=S:$P(^IBT(356.9,DA,0),U,4)=3&(+^(0)) ^IBT(356.9,"ADG",X,+^(0),DA)=""
	;;^DD(356.9,.02,1,4,2)
	;;=K ^IBT(356.9,"ADG",X,+^IBT(356.9,DA,0),DA)
	;;^DD(356.9,.02,1,4,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.9,.02,1,4,"%D",1,0)
	;;=Cross-reference of admitting diagnosis by admission movement.
	;;^DD(356.9,.02,1,4,"DT")
	;;=2930901
	;;^DD(356.9,.02,1,5,0)
	;;=356.9^ADGPM1^MUMPS
	;;^DD(356.9,.02,1,5,1)
	;;=S:+^IBT(356.9,DA,0) ^IBT(356.9,"ADGPM",X,+^(0),DA)=""
	;;^DD(356.9,.02,1,5,2)
	;;=K ^IBT(356.9,"ADGPM",X,+^IBT(356,DA,0),DA)
	;;^DD(356.9,.02,1,5,"%D",0)
	;;=^^1^1^2940213^^
	;;^DD(356.9,.02,1,5,"%D",1,0)
	;;=Cross-reference of all diagnoses by admission movement.
	;;^DD(356.9,.02,1,5,"DT")
	;;=2930901
	;;^DD(356.9,.02,12)
	;;=Must be an admission movement
	;;^DD(356.9,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.9,.02,21,0)
	;;=^^3^3^2940213^^^
	;;^DD(356.9,.02,21,1,0)
	;;=This field should point to the admission movement of the inpatient episode
	;;^DD(356.9,.02,21,2,0)
	;;=that this diagnosis is for.  For ASIH movements it should point to
	;;^DD(356.9,.02,21,3,0)
	;;=the admission in the acute setting.
	;;^DD(356.9,.02,"DT")
	;;=2930901
	;;^DD(356.9,.03,0)
	;;=ONSET DATE THIS VISIT^RDX^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X K:$G(X)+.9<+$G(^DGPM(+$P(^IBT(356.9,DA,0),U,2),0)) X
	;;^DD(356.9,.03,1,0)
	;;=^.1
	;;^DD(356.9,.03,1,1,0)
	;;=356.9^D
	;;^DD(356.9,.03,1,1,1)
	;;=S ^IBT(356.9,"D",$E(X,1,30),DA)=""
	;;^DD(356.9,.03,1,1,2)
	;;=K ^IBT(356.9,"D",$E(X,1,30),DA)
	;;^DD(356.9,.03,1,1,"DT")
	;;=2930713
	;;^DD(356.9,.03,1,2,0)
	;;=356.9^APD1^MUMPS
	;;^DD(356.9,.03,1,2,1)
	;;=S:$P(^IBT(356.9,DA,0),U,2) ^IBT(356.9,"APD",+$P(^(0),U,2),-X,DA)=""
	;;^DD(356.9,.03,1,2,2)
	;;=K ^IBT(356,"APD",+$P(^IBT(356.9,DA,0),U,2),-X,DA)
	;;^DD(356.9,.03,1,2,"%D",0)
	;;=^^1^1^2940213^^^^
	;;^DD(356.9,.03,1,2,"%D",1,0)
	;;=cross reference of all diagnoses by tracking id and inverse date.
	;;^DD(356.9,.03,1,2,"DT")
	;;=2930901
	;;^DD(356.9,.03,3)
	;;=Dates must be during the admission.
	;;^DD(356.9,.03,21,0)
	;;=^^4^4^2930825^^^^
	;;^DD(356.9,.03,21,1,0)
	;;=This is the date of the onset of this diagnosis for this episode of care.
	;;^DD(356.9,.03,21,2,0)
	;;=If the diagnosis is for an admission then the date of onset should be
	;;^DD(356.9,.03,21,3,0)
	;;=within the dates of admission and discharge.  If the diagnosis is for an
	;;^DD(356.9,.03,21,4,0)
	;;=outpatient visit then the date of onset should be the visit date.
	;;^DD(356.9,.03,"DT")
	;;=2930902
	;;^DD(356.9,.04,0)
	;;=TYPE^*S^1:PRIMARY;2:SECONDARY;3:ADMITTING;^0;4^Q
	;;^DD(356.9,.04,1,0)
	;;=^.1
	;;^DD(356.9,.04,1,1,0)
	;;=356.9^ATP^MUMPS
	;;^DD(356.9,.04,1,1,1)
	;;=S:$P(^IBT(356.9,DA,0),U,2) ^IBT(356.9,"ATP",$P(^(0),U,2),X,DA)=""
	;;^DD(356.9,.04,1,1,2)
	;;=K ^IBT(356.9,"ATP",+$P(^IBT(356.9,DA,0),U,2),X,DA)
	;;^DD(356.9,.04,1,1,"%D",0)
	;;=^^2^2^2930720^
	;;^DD(356.9,.04,1,1,"%D",1,0)
	;;=Cross reference of primary diagnosis for a tracking entry so only one
	;;^DD(356.9,.04,1,1,"%D",2,0)
	;;=diagnosis can be primary at a time.
	;;^DD(356.9,.04,1,1,"DT")
	;;=2930720
	;;^DD(356.9,.04,1,2,0)
	;;=356.9^ADG2^MUMPS
	;;^DD(356.9,.04,1,2,1)
	;;=S:X=3&($P(^IBT(356.9,DA,0),U,2))&(+^(0)) ^IBT(356.9,"ADG",+$P(^(0),U,2),+^(0),DA)=""
	;;^DD(356.9,.04,1,2,2)
	;;=K ^IBT(356.9,"ADG",+$P(^IBT(356.9,DA,0),U,2),+^(0),DA)

IBINI078
IBINI078	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.9)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.9,.04,1,2,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.9,.04,1,2,"%D",1,0)
	;;=Cross-reference of admitting diagnosis by admission movement.
	;;^DD(356.9,.04,1,2,"DT")
	;;=2930901
	;;^DD(356.9,.04,12)
	;;=Only one diagnosis can be primary or admitting diagnosis for an admission.
	;;^DD(356.9,.04,12.1)
	;;=S DIC("S")="I $$DICS^IBTRED1(Y)"
	;;^DD(356.9,.04,21,0)
	;;=^^3^3^2930901^^
	;;^DD(356.9,.04,21,1,0)
	;;=Enter 'PRIMARY' if this is the primary diagnosis for this date, enter
	;;^DD(356.9,.04,21,2,0)
	;;='SECONDARY' if this is not the primary diagnosis for this date.
	;;^DD(356.9,.04,21,3,0)
	;;=Enter "ADMITTING" if this is the admitting diagnosis.
	;;^DD(356.9,.04,"DT")
	;;=2930901

IBINI079
IBINI079	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.91,0,"GL")
	;;=^IBT(356.91,
	;;^DIC("B","INPATIENT PROCEDURE",356.91)
	;;=
	;;^DIC(356.91,"%D",0)
	;;=^^3^3^2940214^^^^
	;;^DIC(356.91,"%D",1,0)
	;;=This file holds inpatient procedures.
	;;^DIC(356.91,"%D",2,0)
	;;= 
	;;^DIC(356.91,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.91,0)
	;;=FIELD^^.03^3
	;;^DD(356.91,0,"DT")
	;;=2930901
	;;^DD(356.91,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(356.91,0,"ID","WRITE")
	;;=N Y S Y=$G(^(0)) W "   ",$P($G(^DPT(+$P($G(^DGPM(+$P(Y,U,2),0)),U,3),0)),U)
	;;^DD(356.91,0,"IX","ADGPM",356.91,.01)
	;;=
	;;^DD(356.91,0,"IX","ADGPM1",356.91,.02)
	;;=
	;;^DD(356.91,0,"IX","APP",356.91,.02)
	;;=
	;;^DD(356.91,0,"IX","APP1",356.91,.03)
	;;=
	;;^DD(356.91,0,"IX","B",356.91,.01)
	;;=
	;;^DD(356.91,0,"IX","C",356.91,.02)
	;;=
	;;^DD(356.91,0,"IX","D",356.91,.03)
	;;=
	;;^DD(356.91,0,"NM","INPATIENT PROCEDURE")
	;;=
	;;^DD(356.91,.01,0)
	;;=PROCEDURE^RP80.1'^ICD0(^0;1^Q
	;;^DD(356.91,.01,1,0)
	;;=^.1
	;;^DD(356.91,.01,1,1,0)
	;;=356.91^B
	;;^DD(356.91,.01,1,1,1)
	;;=S ^IBT(356.91,"B",$E(X,1,30),DA)=""
	;;^DD(356.91,.01,1,1,2)
	;;=K ^IBT(356.91,"B",$E(X,1,30),DA)
	;;^DD(356.91,.01,1,2,0)
	;;=356.91^ADGPM^MUMPS
	;;^DD(356.91,.01,1,2,1)
	;;=S:$P(^IBT(356.91,DA,0),U,2) ^IBT(356.91,"ADGPM",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.91,.01,1,2,2)
	;;=K ^IBT(356.91,+$P(^IBT(356.91,DA,0),U,2),X,DA)
	;;^DD(356.91,.01,1,2,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.91,.01,1,2,"%D",1,0)
	;;=Cross-reference of procedures by patient movement
	;;^DD(356.91,.01,1,2,"DT")
	;;=2930901
	;;^DD(356.91,.01,3)
	;;=
	;;^DD(356.91,.01,21,0)
	;;=^^1^1^2930713^^
	;;^DD(356.91,.01,21,1,0)
	;;=This is the procedure for this patient.
	;;^DD(356.91,.01,"DT")
	;;=2930901
	;;^DD(356.91,.02,0)
	;;=ADMISSION MOVEMENT^*P405'^DGPM(^0;2^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.91,.02,1,0)
	;;=^.1
	;;^DD(356.91,.02,1,1,0)
	;;=356.91^C
	;;^DD(356.91,.02,1,1,1)
	;;=S ^IBT(356.91,"C",$E(X,1,30),DA)=""
	;;^DD(356.91,.02,1,1,2)
	;;=K ^IBT(356.91,"C",$E(X,1,30),DA)
	;;^DD(356.91,.02,1,1,"DT")
	;;=2930713
	;;^DD(356.91,.02,1,2,0)
	;;=356.91^APP^MUMPS
	;;^DD(356.91,.02,1,2,1)
	;;=S:$P(^IBT(356.91,DA,0),U,3) ^IBT(356.91,"APP",X,-$P(^(0),U,3),DA)=""
	;;^DD(356.91,.02,1,2,2)
	;;=K ^IBT(356.91,"APP",X,-$P(^IBT(356.91,DA,0),U,3),DA)
	;;^DD(356.91,.02,1,2,"%D",0)
	;;=^^1^1^2930713^^
	;;^DD(356.91,.02,1,2,"%D",1,0)
	;;=Cross reference of all procedures by  tracking ID and procedure date.
	;;^DD(356.91,.02,1,2,"DT")
	;;=2930713
	;;^DD(356.91,.02,1,3,0)
	;;=356.91^ADGPM1^MUMPS
	;;^DD(356.91,.02,1,3,1)
	;;=S:+^IBT(356.91,DA,0) ^IBT(356.91,"ADGPM",X,+^(0),DA)=""
	;;^DD(356.91,.02,1,3,2)
	;;=K ^IBT(356.91,"ADGPM",X,+^IBT(356.91,DA,0),DA)
	;;^DD(356.91,.02,1,3,"%D",0)
	;;=^^1^1^2930901^
	;;^DD(356.91,.02,1,3,"%D",1,0)
	;;=Cross-reference of all procedures by patient movement
	;;^DD(356.91,.02,1,3,"DT")
	;;=2930901
	;;^DD(356.91,.02,12)
	;;=Must be an admission movement
	;;^DD(356.91,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.91,.02,21,0)
	;;=^^1^1^2930901^^^
	;;^DD(356.91,.02,21,1,0)
	;;=This is the pointer to the admission movement that this is associated with.
	;;^DD(356.91,.02,"DT")
	;;=2930901
	;;^DD(356.91,.03,0)
	;;=PROCEDURE DATE^RDX^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X K:$G(X)+.9<+$G(^DGPM(+$P(^IBT(356.91,DA,0),U,2),0)) X
	;;^DD(356.91,.03,1,0)
	;;=^.1
	;;^DD(356.91,.03,1,1,0)
	;;=356.91^D
	;;^DD(356.91,.03,1,1,1)
	;;=S ^IBT(356.91,"D",$E(X,1,30),DA)=""
	;;^DD(356.91,.03,1,1,2)
	;;=K ^IBT(356.91,"D",$E(X,1,30),DA)

IBINI07A
IBINI07A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.91,.03,1,1,"DT")
	;;=2930713
	;;^DD(356.91,.03,1,2,0)
	;;=356.91^APP1^MUMPS
	;;^DD(356.91,.03,1,2,1)
	;;=S:$P(^IBT(356.91,DA,0),U,2) ^IBT(356.91,"APP",$P(^(0),U,2),-X,DA)=""
	;;^DD(356.91,.03,1,2,2)
	;;=K ^IBT(356.91,"APP",+$P(^IBT(356.91,DA,0),U,2),-X,DA)
	;;^DD(356.91,.03,1,2,"%D",0)
	;;=^^1^1^2930713^
	;;^DD(356.91,.03,1,2,"%D",1,0)
	;;=Cross reference of all procedures by  tracking ID and procedure date.
	;;^DD(356.91,.03,1,2,"DT")
	;;=2930713
	;;^DD(356.91,.03,3)
	;;=Dates must be during admission.
	;;^DD(356.91,.03,21,0)
	;;=^^1^1^2930713^^
	;;^DD(356.91,.03,21,1,0)
	;;=This is the date that the procedure was performed.
	;;^DD(356.91,.03,"DT")
	;;=2930902

IBINI07B
IBINI07B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.93,0,"GL")
	;;=^IBT(356.93,
	;;^DIC("B","INPATIENT INTERIM DRG",356.93)
	;;=
	;;^DIC(356.93,"%D",0)
	;;=^^7^7^2940214^^^^
	;;^DIC(356.93,"%D",1,0)
	;;=This file holds interim DRGs computed by the Claims Tracking Module for
	;;^DIC(356.93,"%D",2,0)
	;;=display in Claims Tracking and on Reports.  The computed ALOS is based
	;;^DIC(356.93,"%D",3,0)
	;;=upon 1992 HCFA average lengths of stay and not VA averages.  The purpose is
	;;^DIC(356.93,"%D",4,0)
	;;=to help utilization review personnel determine if the the ALOS approved
	;;^DIC(356.93,"%D",5,0)
	;;=by an insurance company is within industry standards.
	;;^DIC(356.93,"%D",6,0)
	;;= 
	;;^DIC(356.93,"%D",7,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.93,0)
	;;=FIELD^^.05^5
	;;^DD(356.93,0,"DDA")
	;;=N
	;;^DD(356.93,0,"DT")
	;;=2931213
	;;^DD(356.93,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGPM(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(405,.01,0),U,2) D Y^DIQ:Y]"" W "   Admission Date: ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.93,0,"ID",.03)
	;;=W "   Computed: ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(356.93,0,"ID","WRITE")
	;;=N Y S Y=$G(^(0)) W "   ",$P($G(^DPT(+$P($G(^DGPM(+$P(Y,U,2),0)),U,3),0)),U)
	;;^DD(356.93,0,"IX","AC",356.93,.04)
	;;=
	;;^DD(356.93,0,"IX","AMVD",356.93,.02)
	;;=
	;;^DD(356.93,0,"IX","AMVD1",356.93,.03)
	;;=
	;;^DD(356.93,0,"IX","B",356.93,.01)
	;;=
	;;^DD(356.93,0,"NM","INPATIENT INTERIM DRG")
	;;=
	;;^DD(356.93,.01,0)
	;;=NAME^RP80.2'^ICD(^0;1^Q
	;;^DD(356.93,.01,1,0)
	;;=^.1
	;;^DD(356.93,.01,1,1,0)
	;;=356.93^B
	;;^DD(356.93,.01,1,1,1)
	;;=S ^IBT(356.93,"B",$E(X,1,30),DA)=""
	;;^DD(356.93,.01,1,1,2)
	;;=K ^IBT(356.93,"B",$E(X,1,30),DA)
	;;^DD(356.93,.01,3)
	;;=
	;;^DD(356.93,.01,21,0)
	;;=^^1^1^2931129^
	;;^DD(356.93,.01,21,1,0)
	;;=Enter the DRG that best describes this inpatient case.
	;;^DD(356.93,.01,"DT")
	;;=2931129
	;;^DD(356.93,.02,0)
	;;=ADMISSION MOVEMENT^*P405'^DGPM(^0;2^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.93,.02,1,0)
	;;=^.1
	;;^DD(356.93,.02,1,1,0)
	;;=356.93^AMVD^MUMPS
	;;^DD(356.93,.02,1,1,1)
	;;=S:$P(^IBT(356.93,DA,0),U,3) ^IBT(356.93,"AMVD",X,+$P(^(0),U,3),DA)=""
	;;^DD(356.93,.02,1,1,2)
	;;=K ^IBT(356.93,"AMVD",X,+$P(^IBT(356.93,DA,0),U,3),DA)
	;;^DD(356.93,.02,1,1,"%D",0)
	;;=^^1^1^2931130^
	;;^DD(356.93,.02,1,1,"%D",1,0)
	;;=Cross reference of drgs by admission movement and drg date.
	;;^DD(356.93,.02,1,1,"DT")
	;;=2931130
	;;^DD(356.93,.02,12)
	;;=Must be an admission movement.
	;;^DD(356.93,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.93,.02,21,0)
	;;=^^2^2^2931129^
	;;^DD(356.93,.02,21,1,0)
	;;=This field should point to the admission movement of the inpatient 
	;;^DD(356.93,.02,21,2,0)
	;;=episode that this interim DRG is for.
	;;^DD(356.93,.02,"DT")
	;;=2931130
	;;^DD(356.93,.03,0)
	;;=DATE^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(356.93,.03,1,0)
	;;=^.1
	;;^DD(356.93,.03,1,1,0)
	;;=356.93^AMVD1^MUMPS
	;;^DD(356.93,.03,1,1,1)
	;;=S:$P(^IBT(356.93,DA,0),U,2) ^IBT(356.93,"AMVD",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.93,.03,1,1,2)
	;;=K ^IBT(356.93,"AMVD",+$P(^IBT(356.93,DA,0),U,2),X,DA)
	;;^DD(356.93,.03,1,1,"%D",0)
	;;=^^1^1^2931130^
	;;^DD(356.93,.03,1,1,"%D",1,0)
	;;=Cross reference of drgs by admission movement and drg date.
	;;^DD(356.93,.03,1,1,"DT")
	;;=2931130
	;;^DD(356.93,.03,3)
	;;=This is the date that the INTERIM DRG was computed.
	;;^DD(356.93,.03,21,0)
	;;=^^1^1^2931129^
	;;^DD(356.93,.03,21,1,0)
	;;=Enter the date that this DRG was computed.

IBINI07C
IBINI07C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.93)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.93,.03,"DT")
	;;=2931130
	;;^DD(356.93,.04,0)
	;;=ESTIMATED LENGTH OF STAY^NJ7,1^^0;4^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."2N.N) X
	;;^DD(356.93,.04,1,0)
	;;=^.1
	;;^DD(356.93,.04,1,1,0)
	;;=356.93^AC^MUMPS
	;;^DD(356.93,.04,1,1,1)
	;;=Q
	;;^DD(356.93,.04,1,1,2)
	;;=Q
	;;^DD(356.93,.04,1,1,"%D",0)
	;;=^^3^3^2931215^
	;;^DD(356.93,.04,1,1,"%D",1,0)
	;;=Cross-reference to cause filing of data.  Field Days Remaining 
	;;^DD(356.93,.04,1,1,"%D",2,0)
	;;=utilizes value in input transform and may not be filed without this
	;;^DD(356.93,.04,1,1,"%D",3,0)
	;;=x-ref.
	;;^DD(356.93,.04,1,1,"DT")
	;;=2931215
	;;^DD(356.93,.04,3)
	;;=Type a Number between 0 and 99999, 1 Decimal Digit
	;;^DD(356.93,.04,21,0)
	;;=^^5^5^2940213^^^
	;;^DD(356.93,.04,21,1,0)
	;;=This is the estimated length of stay in the medical center for UR or
	;;^DD(356.93,.04,21,2,0)
	;;=Insurance purposes.  This is not related to the average length of 
	;;^DD(356.93,.04,21,3,0)
	;;=stays for PTF.  It is the estimated LOS for this admission for this
	;;^DD(356.93,.04,21,4,0)
	;;=patient for this DRG.  It is used to help determine if for billing
	;;^DD(356.93,.04,21,5,0)
	;;=purposes that this patient has exceeded his length of stay.
	;;^DD(356.93,.04,"DT")
	;;=2931215
	;;^DD(356.93,.05,0)
	;;=DAYS REMAINING^NJ5,0X^^0;5^K:+X'=X!(X>99999)!(X<0)!(X?.E1"."1N.N)!(X>$P($G(^IBT(356.93,DA,0)),"^",4)) X
	;;^DD(356.93,.05,3)
	;;=The Days Remaining can not exceed the Estimated Length of Stay.  Type a Number between 0 and 99999, 0 Decimal Digits
	;;^DD(356.93,.05,21,0)
	;;=^^3^3^2940213^^
	;;^DD(356.93,.05,21,1,0)
	;;=This is the days remaining that this patient has for this DRG.
	;;^DD(356.93,.05,21,2,0)
	;;=It is the ELOS minus the number of days the patient has already been
	;;^DD(356.93,.05,21,3,0)
	;;=treated for this episode.
	;;^DD(356.93,.05,"DT")
	;;=2931201

IBINI07D
IBINI07D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.94,0,"GL")
	;;=^IBT(356.94,
	;;^DIC("B","INPATIENT PROVIDERS",356.94)
	;;=
	;;^DIC(356.94,"%D",0)
	;;=^^11^11^2940214^^^^
	;;^DIC(356.94,"%D",1,0)
	;;=This file is to allow the claims tracking module store the admitting
	;;^DIC(356.94,"%D",2,0)
	;;=physician.  In addition, the attending and resident providers can be
	;;^DIC(356.94,"%D",3,0)
	;;=identified in this file.  If attending and resident providers are
	;;^DIC(356.94,"%D",4,0)
	;;=entered then they are assume to be entered completely for an episode
	;;^DIC(356.94,"%D",5,0)
	;;=of care being tracked.  If no provider other than admitting physician
	;;^DIC(356.94,"%D",6,0)
	;;=is entered then the providers and attending from MAS will be considered
	;;^DIC(356.94,"%D",7,0)
	;;=to the the correct providers.  Because QM data may be extracting this
	;;^DIC(356.94,"%D",8,0)
	;;=data on the national roll-up, it is necessary to correctly identify the
	;;^DIC(356.94,"%D",9,0)
	;;=attending physician.
	;;^DIC(356.94,"%D",10,0)
	;;= 
	;;^DIC(356.94,"%D",11,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(356.94,0)
	;;=FIELD^^.04^4
	;;^DD(356.94,0,"DDA")
	;;=N
	;;^DD(356.94,0,"DT")
	;;=2940202
	;;^DD(356.94,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGPM(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(405,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.94,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^VA(200,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(200,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(356.94,0,"ID","WRITE")
	;;=N Y S Y=$G(^(0)) W "   ",$P($G(^DPT(+$P($G(^DGPM(+$P(Y,U,2),0)),U,3),0)),U)
	;;^DD(356.94,0,"IX","ADG",356.94,.02)
	;;=
	;;^DD(356.94,0,"IX","ADG1",356.94,.03)
	;;=
	;;^DD(356.94,0,"IX","ADG2",356.94,.04)
	;;=
	;;^DD(356.94,0,"IX","ADGPM",356.94,.02)
	;;=
	;;^DD(356.94,0,"IX","ADGPM1",356.94,.03)
	;;=
	;;^DD(356.94,0,"IX","ATP",356.94,.02)
	;;=
	;;^DD(356.94,0,"IX","ATP1",356.94,.04)
	;;=
	;;^DD(356.94,0,"IX","B",356.94,.01)
	;;=
	;;^DD(356.94,0,"IX","C",356.94,.02)
	;;=
	;;^DD(356.94,0,"IX","D",356.94,.03)
	;;=
	;;^DD(356.94,0,"NM","INPATIENT PROVIDERS")
	;;=
	;;^DD(356.94,.01,0)
	;;=DATE OF CHANGE^RDX^^0;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X K:'$$DTCHK^IBTRE5(DA,$G(X)) X
	;;^DD(356.94,.01,1,0)
	;;=^.1
	;;^DD(356.94,.01,1,1,0)
	;;=356.94^B
	;;^DD(356.94,.01,1,1,1)
	;;=S ^IBT(356.94,"B",$E(X,1,30),DA)=""
	;;^DD(356.94,.01,1,1,2)
	;;=K ^IBT(356.94,"B",$E(X,1,30),DA)
	;;^DD(356.94,.01,3)
	;;=Enter the date the is provider assumes responsibility for the patient.  It can not be before the admission date or after the discharge date or if not discharged, more than 7 days into the future.
	;;^DD(356.94,.01,21,0)
	;;=^^9^9^2940222^^
	;;^DD(356.94,.01,21,1,0)
	;;=This is the first day that this provider is responsible for care for
	;;^DD(356.94,.01,21,2,0)
	;;=the patient.  Enter the date that the provider assumes responsibility.
	;;^DD(356.94,.01,21,3,0)
	;;=For claims tracking purposes the provider will be resonsible for the
	;;^DD(356.94,.01,21,4,0)
	;;=care from this date (inclusive) until another provider assumes
	;;^DD(356.94,.01,21,5,0)
	;;=responsibility for the same level.
	;;^DD(356.94,.01,21,6,0)
	;;= 
	;;^DD(356.94,.01,21,7,0)
	;;=The date must not be before the admission date or after the discharge
	;;^DD(356.94,.01,21,8,0)
	;;=date.  If a current inpatient, it can not be more than 7 days into the
	;;^DD(356.94,.01,21,9,0)
	;;=future.
	;;^DD(356.94,.01,"DT")
	;;=2940222
	;;^DD(356.94,.02,0)
	;;=ADMISSION MOVEMENT^R*P405'^DGPM(^0;2^S DIC("S")="I $P(^(0),U,2)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBINI07E
IBINI07E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.94,.02,1,0)
	;;=^.1
	;;^DD(356.94,.02,1,1,0)
	;;=356.94^C
	;;^DD(356.94,.02,1,1,1)
	;;=S ^IBT(356.94,"C",$E(X,1,30),DA)=""
	;;^DD(356.94,.02,1,1,2)
	;;=K ^IBT(356.94,"C",$E(X,1,30),DA)
	;;^DD(356.94,.02,1,1,"%D",0)
	;;=^^2^2^2940222^^
	;;^DD(356.94,.02,1,1,"%D",1,0)
	;;=Regular cross reference of all inpatient provider entries by the admission 
	;;^DD(356.94,.02,1,1,"%D",2,0)
	;;=movement.
	;;^DD(356.94,.02,1,1,"DT")
	;;=2940222
	;;^DD(356.94,.02,1,2,0)
	;;=356.94^ADG^MUMPS
	;;^DD(356.94,.02,1,2,1)
	;;=S:$P(^IBT(356.94,DA,0),U,4)=3&($P(^(0),U,3)) ^IBT(356.94,"ADG",X,+$P(^(0),U,3),DA)=""
	;;^DD(356.94,.02,1,2,2)
	;;=K ^IBT(356.94,"ADG",X,+$P(^IBT(356.94,DA,0),U,3),DA)
	;;^DD(356.94,.02,1,2,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.02,1,2,"%D",1,0)
	;;=Cross reference of all admitting provider entries by admission movement,
	;;^DD(356.94,.02,1,2,"%D",2,0)
	;;=by provider.
	;;^DD(356.94,.02,1,2,"DT")
	;;=2940222
	;;^DD(356.94,.02,1,3,0)
	;;=356.94^ADGPM^MUMPS
	;;^DD(356.94,.02,1,3,1)
	;;=S:$P(^IBT(356.94,DA,0),U,3) ^IBT(356.94,"ADGPM",X,+$P(^(0),U,3),DA)=""
	;;^DD(356.94,.02,1,3,2)
	;;=K ^IBT(356.94,"ADGPM",X,+$P(^IBT(356.94,DA,0),U,3),DA)
	;;^DD(356.94,.02,1,3,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.02,1,3,"%D",1,0)
	;;=Cross reference of all inpatient provider entries by patient movement,
	;;^DD(356.94,.02,1,3,"%D",2,0)
	;;=by provider.
	;;^DD(356.94,.02,1,3,"DT")
	;;=2940222
	;;^DD(356.94,.02,1,4,0)
	;;=356.94^ATP^MUMPS
	;;^DD(356.94,.02,1,4,1)
	;;=S:$P(^IBT(356.94,DA,0),U,4) ^IBT(356.94,"ATP",X,+$P(^(0),U,4),DA)=""
	;;^DD(356.94,.02,1,4,2)
	;;=K ^IBT(356.94,"ATP",X,+$P(^IBT(356.94,DA,0),U,4),DA)
	;;^DD(356.94,.02,1,4,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.02,1,4,"%D",1,0)
	;;=Cross reference of all inpatient provider entries by admission movement
	;;^DD(356.94,.02,1,4,"%D",2,0)
	;;=by type of provider.
	;;^DD(356.94,.02,1,4,"DT")
	;;=2940222
	;;^DD(356.94,.02,12)
	;;=Must be an admission movement.
	;;^DD(356.94,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,2)=1"
	;;^DD(356.94,.02,21,0)
	;;=^^1^1^2940202^
	;;^DD(356.94,.02,21,1,0)
	;;=This is the admission movement that the provider is responsible for.
	;;^DD(356.94,.02,"DT")
	;;=2940222
	;;^DD(356.94,.03,0)
	;;=PROVIDER^*P200'^VA(200,^0;3^S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U,1),+Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(356.94,.03,1,0)
	;;=^.1
	;;^DD(356.94,.03,1,1,0)
	;;=356.94^D
	;;^DD(356.94,.03,1,1,1)
	;;=S ^IBT(356.94,"D",$E(X,1,30),DA)=""
	;;^DD(356.94,.03,1,1,2)
	;;=K ^IBT(356.94,"D",$E(X,1,30),DA)
	;;^DD(356.94,.03,1,1,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.03,1,1,"%D",1,0)
	;;=Regular cross-reference of all inpatient provider entries by
	;;^DD(356.94,.03,1,1,"%D",2,0)
	;;=provider.
	;;^DD(356.94,.03,1,1,"DT")
	;;=2940222
	;;^DD(356.94,.03,1,2,0)
	;;=356.94^ADG1^MUMPS
	;;^DD(356.94,.03,1,2,1)
	;;=S:$P(^IBT(356.94,DA,0),U,4)=3&($P(^(0),U,2)) ^IBT(356.94,"ADG",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.94,.03,1,2,2)
	;;=K ^IBT(356.94,"ADG",+$P(^IBT(356.94,DA,0),U,2),X,DA)
	;;^DD(356.94,.03,1,2,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.03,1,2,"%D",1,0)
	;;=Cross reference of all admitting provider entries by admission movement,
	;;^DD(356.94,.03,1,2,"%D",2,0)
	;;=by provider.
	;;^DD(356.94,.03,1,2,"DT")
	;;=2940222
	;;^DD(356.94,.03,1,3,0)
	;;=356.94^ADGPM1^MUMPS
	;;^DD(356.94,.03,1,3,1)
	;;=S:$P(^IBT(356.94,DA,0),U,2) ^IBT(356.94,"ADGPM",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.94,.03,1,3,2)
	;;=K ^IBT(356.94,"ADGPM",+$P(^IBT(356.94,DA,0),U,2),X,DA)
	;;^DD(356.94,.03,1,3,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.03,1,3,"%D",1,0)
	;;=Cross reference of all inpatient provider entries by patient movement, 

IBINI07F
IBINI07F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(356.94)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(356.94,.03,1,3,"%D",2,0)
	;;=by provider.
	;;^DD(356.94,.03,1,3,"DT")
	;;=2940222
	;;^DD(356.94,.03,12)
	;;=Must be a provder.
	;;^DD(356.94,.03,12.1)
	;;=S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U,1),+Y))"
	;;^DD(356.94,.03,21,0)
	;;=^^2^2^2940202^
	;;^DD(356.94,.03,21,1,0)
	;;=Enter the name of the provider who is responsible for care of this 
	;;^DD(356.94,.03,21,2,0)
	;;=patient.
	;;^DD(356.94,.03,"DT")
	;;=2940222
	;;^DD(356.94,.04,0)
	;;=TYPE PROVIDER^R*S^1:ATTENDING;2:PROVIDER;3:ADMITTING;^0;4^Q
	;;^DD(356.94,.04,1,0)
	;;=^.1
	;;^DD(356.94,.04,1,1,0)
	;;=356.94^ADG2^MUMPS
	;;^DD(356.94,.04,1,1,1)
	;;=S:X=3&($P(^IBT(356.94,DA,0),U,2))&($P(^(0),U,3)) ^IBT(356.94,"ADG",+$P(^(0),U,2),+$P(^(0),U,3),DA)=""
	;;^DD(356.94,.04,1,1,2)
	;;=K ^IBT(356.94,"ADG",+$P(^IBT(356.94,DA,0),U,2),+$P(^(0),U,3),DA)
	;;^DD(356.94,.04,1,1,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.04,1,1,"%D",1,0)
	;;=Cross reference of all admitting provider entries by admission movement,
	;;^DD(356.94,.04,1,1,"%D",2,0)
	;;=by provider.
	;;^DD(356.94,.04,1,1,"DT")
	;;=2940222
	;;^DD(356.94,.04,1,2,0)
	;;=356.94^ATP1^MUMPS
	;;^DD(356.94,.04,1,2,1)
	;;=S:$P(^IBT(356.94,DA,0),U,2) ^IBT(356.94,"ATP",+$P(^(0),U,2),X,DA)=""
	;;^DD(356.94,.04,1,2,2)
	;;=K ^IBT(356.94,"ATP",+$P(^IBT(356.94,DA,0),U,2),X,DA)
	;;^DD(356.94,.04,1,2,"%D",0)
	;;=^^2^2^2940222^
	;;^DD(356.94,.04,1,2,"%D",1,0)
	;;=Cross reference of all inpatient provider entries by admission movement
	;;^DD(356.94,.04,1,2,"%D",2,0)
	;;=by type of provider.
	;;^DD(356.94,.04,1,2,"DT")
	;;=2940222
	;;^DD(356.94,.04,12)
	;;=Only one admitting physician allowed.
	;;^DD(356.94,.04,12.1)
	;;=S DIC("S")="I $$DICS^IBTRE5(Y)"
	;;^DD(356.94,.04,21,0)
	;;=^^18^18^2940202^
	;;^DD(356.94,.04,21,1,0)
	;;=Enter whether this physician is an attending physician, admitting
	;;^DD(356.94,.04,21,2,0)
	;;=physician, or the daily care provider (or resident).
	;;^DD(356.94,.04,21,3,0)
	;;= 
	;;^DD(356.94,.04,21,4,0)
	;;=It may be that the admitting physician is different from either the
	;;^DD(356.94,.04,21,5,0)
	;;=attending or provider.  If the admission to acure care does not meet UR
	;;^DD(356.94,.04,21,6,0)
	;;=criteria, it is important to track the admitting physician.
	;;^DD(356.94,.04,21,7,0)
	;;= 
	;;^DD(356.94,.04,21,8,0)
	;;=The attending physician is the physician responsible for the care of
	;;^DD(356.94,.04,21,9,0)
	;;=the patient, more than one physician may be the attending.
	;;^DD(356.94,.04,21,10,0)
	;;= 
	;;^DD(356.94,.04,21,11,0)
	;;=The provider is the physician directly providing patient care.  In
	;;^DD(356.94,.04,21,12,0)
	;;=affiliated hospitals this can be a resident or intern who is not 
	;;^DD(356.94,.04,21,13,0)
	;;=necessarily responsible (the attending is responsible).
	;;^DD(356.94,.04,21,14,0)
	;;= 
	;;^DD(356.94,.04,21,15,0)
	;;=Because UR reviews are done every day, it is important to be able
	;;^DD(356.94,.04,21,16,0)
	;;=to accurately track attendings and providers related to care that
	;;^DD(356.94,.04,21,17,0)
	;;=does not meet critea.  
	;;^DD(356.94,.04,21,18,0)
	;;= 
	;;^DD(356.94,.04,"DT")
	;;=2940222

IBINI07G
IBINI07G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357,0,"GL")
	;;=^IBE(357,
	;;^DIC("B","ENCOUNTER FORM",357)
	;;=
	;;^DIC(357,"%D",0)
	;;=^^3^3^2940121^
	;;^DIC(357,"%D",1,0)
	;;= 
	;;^DIC(357,"%D",2,0)
	;;=Contains encounter form descriptions, used by the Encounter Form utilities
	;;^DIC(357,"%D",3,0)
	;;=to print encounter forms.
	;;^DD(357,0)
	;;=FIELD^^.11^8
	;;^DD(357,0,"DDA")
	;;=N
	;;^DD(357,0,"DIK")
	;;=IBXF0
	;;^DD(357,0,"DT")
	;;=2931124
	;;^DD(357,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(357,0,"IX","AC",357,.01)
	;;=
	;;^DD(357,0,"IX","AG",357,.01)
	;;=
	;;^DD(357,0,"IX","AT",357,.01)
	;;=
	;;^DD(357,0,"IX","AU",357,.01)
	;;=
	;;^DD(357,0,"IX","B",357,.01)
	;;=
	;;^DD(357,0,"IX","C",357,.07)
	;;=
	;;^DD(357,0,"IX","D",357,.04)
	;;=
	;;^DD(357,0,"NM","ENCOUNTER FORM")
	;;=
	;;^DD(357,0,"PT",357.1,.02)
	;;=
	;;^DD(357,0,"PT",409.95,.02)
	;;=
	;;^DD(357,0,"PT",409.95,.03)
	;;=
	;;^DD(357,0,"PT",409.95,.04)
	;;=
	;;^DD(357,0,"PT",409.95,.05)
	;;=
	;;^DD(357,0,"PT",409.95,.06)
	;;=
	;;^DD(357,0,"PT",409.95,.07)
	;;=
	;;^DD(357,.01,0)
	;;=NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(357,.01,1,0)
	;;=^.1
	;;^DD(357,.01,1,1,0)
	;;=357^B
	;;^DD(357,.01,1,1,1)
	;;=S ^IBE(357,"B",$E(X,1,30),DA)=""
	;;^DD(357,.01,1,1,2)
	;;=K ^IBE(357,"B",$E(X,1,30),DA)
	;;^DD(357,.01,1,2,0)
	;;=357^AT^MUMPS
	;;^DD(357,.01,1,2,1)
	;;=Q
	;;^DD(357,.01,1,2,2)
	;;=Q
	;;^DD(357,.01,1,2,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(357,.01,1,2,"%D",1,0)
	;;=This cross-reference will be used to store the text of the compiled form.
	;;^DD(357,.01,1,2,"%D",2,0)
	;;=The format will be ..."AT",form ien,row #)=text line. The index will be
	;;^DD(357,.01,1,2,"%D",3,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(357,.01,1,2,"%D",4,0)
	;;=optional.
	;;^DD(357,.01,1,2,"DT")
	;;=2931124
	;;^DD(357,.01,1,3,0)
	;;=357^AC^MUMPS
	;;^DD(357,.01,1,3,1)
	;;=Q
	;;^DD(357,.01,1,3,2)
	;;=Q
	;;^DD(357,.01,1,3,"%D",0)
	;;=^^4^4^2940216^
	;;^DD(357,.01,1,3,"%D",1,0)
	;;=This cross-reference will be used to store the special controls needed
	;;^DD(357,.01,1,3,"%D",2,0)
	;;=(bold on, bold off, etc.) to print the compiled form. The format will be
	;;^DD(357,.01,1,3,"%D",3,0)
	;;=..."AC",form ien,row #,column # )=controls. The index will be created by
	;;^DD(357,.01,1,3,"%D",4,0)
	;;=the 'compile' action of the encounter form utilities - it is optional.
	;;^DD(357,.01,1,3,"DT")
	;;=2931124
	;;^DD(357,.01,1,4,0)
	;;=357^AU^MUMPS
	;;^DD(357,.01,1,4,1)
	;;=Q
	;;^DD(357,.01,1,4,2)
	;;=Q
	;;^DD(357,.01,1,4,"%D",0)
	;;=^^4^4^2931124^
	;;^DD(357,.01,1,4,"%D",1,0)
	;;=This cross-reference will be used to store the underlining of the compiled
	;;^DD(357,.01,1,4,"%D",2,0)
	;;=form. The format will be ...,"AU",form ien,row #)=underlining . The index
	;;^DD(357,.01,1,4,"%D",3,0)
	;;=will be created by the 'compile' action of the encounter form utilities -
	;;^DD(357,.01,1,4,"%D",4,0)
	;;=it is optional.
	;;^DD(357,.01,1,4,"DT")
	;;=2931124
	;;^DD(357,.01,1,5,0)
	;;=357^AG^MUMPS
	;;^DD(357,.01,1,5,1)
	;;=Q
	;;^DD(357,.01,1,5,2)
	;;=Q
	;;^DD(357,.01,1,5,"%D",0)
	;;=^^5^5^2931124^
	;;^DD(357,.01,1,5,"%D",1,0)
	;;=This cross-reference will be used to store strings of graphics characters
	;;^DD(357,.01,1,5,"%D",2,0)
	;;=(TLC,TRC, etc.) needed for the compiled form. The format will be
	;;^DD(357,.01,1,5,"%D",3,0)
	;;=..."AG",form ien,row #,column # )=graphics string . The index will be
	;;^DD(357,.01,1,5,"%D",4,0)
	;;=created by the 'compile' action of the encounter form utilities - it is
	;;^DD(357,.01,1,5,"%D",5,0)
	;;=optional.
	;;^DD(357,.01,1,5,"DT")
	;;=2931124

IBINI07H
IBINI07H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357,.01,3)
	;;=The form name must be 3-30 uppercase characters in length.
	;;^DD(357,.01,21,0)
	;;=^^2^2^2931110^^
	;;^DD(357,.01,21,1,0)
	;;= 
	;;^DD(357,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(357,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(357,.01,"DT")
	;;=2931124
	;;^DD(357,.03,0)
	;;=BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
	;;^DD(357,.03,.1)
	;;=BRIEF DESCRIPTION OF FORM'S USE & CONTENT
	;;^DD(357,.03,3)
	;;=Enter a brief description of the intended use of the form or its contents.
	;;^DD(357,.03,21,0)
	;;=^^3^3^2930607^
	;;^DD(357,.03,21,1,0)
	;;= 
	;;^DD(357,.03,21,2,0)
	;;=A brief description of the contents of the form and its intended use. This
	;;^DD(357,.03,21,3,0)
	;;=description will be displayed to the user.
	;;^DD(357,.03,"DT")
	;;=2940309
	;;^DD(357,.04,0)
	;;=TYPE OF USE^R*S^0:RESERVED FOR UTILITY;1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
	;;^DD(357,.04,1,0)
	;;=^.1
	;;^DD(357,.04,1,1,0)
	;;=357^D
	;;^DD(357,.04,1,1,1)
	;;=S ^IBE(357,"D",$E(X,1,30),DA)=""
	;;^DD(357,.04,1,1,2)
	;;=K ^IBE(357,"D",$E(X,1,30),DA)
	;;^DD(357,.04,1,1,"%D",0)
	;;=^^1^1^2930825^
	;;^DD(357,.04,1,1,"%D",1,0)
	;;=Used to find forms of a particular type.
	;;^DD(357,.04,1,1,"DT")
	;;=2930825
	;;^DD(357,.04,3)
	;;=How will the form be used?
	;;^DD(357,.04,12)
	;;=Does not allow users to choose RESERVED FOR UTILITY
	;;^DD(357,.04,12.1)
	;;=S DIC("S")="I Y'=0"
	;;^DD(357,.04,21,0)
	;;=^^5^5^2930825^^^
	;;^DD(357,.04,21,1,0)
	;;=This field will be used to categorize forms by type of use. It is possible
	;;^DD(357,.04,21,2,0)
	;;=that the form generator that is part of the Encounter Form Utilities may
	;;^DD(357,.04,21,3,0)
	;;=be used to create forms other than encounter forms.
	;;^DD(357,.04,21,4,0)
	;;=The utilities use a couple of forms (GARBAGE, TOOL KIT), TYPE OF USE is
	;;^DD(357,.04,21,5,0)
	;;=RESERVED FOR UTILITY, that are not real forms.
	;;^DD(357,.04,"DT")
	;;=2930825
	;;^DD(357,.05,0)
	;;=COMPILED?^S^0:NO;1:YES;^0;5^Q
	;;^DD(357,.05,3)
	;;=Enter yes if a compiled copy of the form should be created and stored.
	;;^DD(357,.05,21,0)
	;;=^^2^2^2931201^^
	;;^DD(357,.05,21,1,0)
	;;=This indicates whether a compiled version of the form exists. The compiled
	;;^DD(357,.05,21,2,0)
	;;=version is much faster to print.
	;;^DD(357,.05,"DT")
	;;=2931124
	;;^DD(357,.07,0)
	;;=TOOL KIT^RS^0:NO;1:YES;^0;7^Q
	;;^DD(357,.07,.1)
	;;=SHOULD THIS FORM BE PART OF THE TOOL KIT?
	;;^DD(357,.07,1,0)
	;;=^.1
	;;^DD(357,.07,1,1,0)
	;;=357^C
	;;^DD(357,.07,1,1,1)
	;;=S ^IBE(357,"C",$E(X,1,30),DA)=""
	;;^DD(357,.07,1,1,2)
	;;=K ^IBE(357,"C",$E(X,1,30),DA)
	;;^DD(357,.07,1,1,"%D",0)
	;;=^^1^1^2930624^
	;;^DD(357,.07,1,1,"%D",1,0)
	;;=Used to find all of the tool kit forms.
	;;^DD(357,.07,1,1,"DT")
	;;=2930624
	;;^DD(357,.07,3)
	;;=Is this form part of the tool kit?
	;;^DD(357,.07,21,0)
	;;=^^3^3^2930607^
	;;^DD(357,.07,21,1,0)
	;;= 
	;;^DD(357,.07,21,2,0)
	;;=This field, if set to YES, means that the form can not be deleted and can
	;;^DD(357,.07,21,3,0)
	;;=not be added to a clinic setup.
	;;^DD(357,.07,"DT")
	;;=2931220
	;;^DD(357,.09,0)
	;;=RIGHT MARGIN^RNJ3,0^^0;9^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.09,.1)
	;;=FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
	;;^DD(357,.09,3)
	;;=How many columns (characters) wide should the form be?
	;;^DD(357,.09,21,0)
	;;=^^2^2^2930810^^
	;;^DD(357,.09,21,1,0)
	;;= 
	;;^DD(357,.09,21,2,0)
	;;=The number of characters wide the form is.
	;;^DD(357,.09,"DT")
	;;=2930420

IBINI07I
IBINI07I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.1,.1)
	;;=FORM'S PAGE LENGTH (IN LINES)
	;;^DD(357,.1,3)
	;;=How many lines should the form have?
	;;^DD(357,.1,21,0)
	;;=^^2^2^2921213^
	;;^DD(357,.1,21,1,0)
	;;= 
	;;^DD(357,.1,21,2,0)
	;;=This is the number of usable lines on the page.
	;;^DD(357,.1,"DT")
	;;=2930420
	;;^DD(357,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(357,.11,21,0)
	;;=^^1^1^2930602^
	;;^DD(357,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(357,.11,"DT")
	;;=2930602

IBINI07J
IBINI07J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.1,0,"GL")
	;;=^IBE(357.1,
	;;^DIC("B","ENCOUNTER FORM BLOCK",357.1)
	;;=
	;;^DIC(357.1,"%D",0)
	;;=^^3^3^2931214^^^
	;;^DIC(357.1,"%D",1,0)
	;;= 
	;;^DIC(357.1,"%D",2,0)
	;;=Contains descriptions of blocks, which are rectangular areas on an
	;;^DIC(357.1,"%D",3,0)
	;;=encounter form.
	;;^DD(357.1,0)
	;;=FIELD^^2^13
	;;^DD(357.1,0,"DDA")
	;;=N
	;;^DD(357.1,0,"DIK")
	;;=IBXF1
	;;^DD(357.1,0,"DT")
	;;=2931117
	;;^DD(357.1,0,"ID",.02)
	;;=W ""
	;;^DD(357.1,0,"IX","B",357.1,.01)
	;;=
	;;^DD(357.1,0,"IX","C",357.1,.02)
	;;=
	;;^DD(357.1,0,"IX","D",357.1,.14)
	;;=
	;;^DD(357.1,0,"NM","ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(357.1,0,"PT",357.2,.02)
	;;=
	;;^DD(357.1,0,"PT",357.5,.02)
	;;=
	;;^DD(357.1,0,"PT",357.7,.06)
	;;=
	;;^DD(357.1,0,"PT",357.8,.02)
	;;=
	;;^DD(357.1,.01,0)
	;;=NAME^RFX^^0;1^S X=$$UP^XLFSTR(X) K:$L(X)>30!($L(X)<3) X
	;;^DD(357.1,.01,1,0)
	;;=^.1
	;;^DD(357.1,.01,1,1,0)
	;;=357.1^B
	;;^DD(357.1,.01,1,1,1)
	;;=S ^IBE(357.1,"B",$E(X,1,30),DA)=""
	;;^DD(357.1,.01,1,1,2)
	;;=K ^IBE(357.1,"B",$E(X,1,30),DA)
	;;^DD(357.1,.01,3)
	;;=The block name must be 3-30 uppercase characters.
	;;^DD(357.1,.01,21,0)
	;;=^^3^3^2940216^
	;;^DD(357.1,.01,21,1,0)
	;;= 
	;;^DD(357.1,.01,21,2,0)
	;;= 
	;;^DD(357.1,.01,21,3,0)
	;;=The name of the block.
	;;^DD(357.1,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.1,.01,"DT")
	;;=2931117
	;;^DD(357.1,.02,0)
	;;=FORM^RP357'^IBE(357,^0;2^Q
	;;^DD(357.1,.02,1,0)
	;;=^.1
	;;^DD(357.1,.02,1,1,0)
	;;=357.1^C
	;;^DD(357.1,.02,1,1,1)
	;;=S ^IBE(357.1,"C",$E(X,1,30),DA)=""
	;;^DD(357.1,.02,1,1,2)
	;;=K ^IBE(357.1,"C",$E(X,1,30),DA)
	;;^DD(357.1,.02,1,1,"%D",0)
	;;=^^1^1^2921116^
	;;^DD(357.1,.02,1,1,"%D",1,0)
	;;=Used to find all the blocks belonging to a particular form.
	;;^DD(357.1,.02,1,1,"DT")
	;;=2921116
	;;^DD(357.1,.02,3)
	;;=What form should this block appear on?
	;;^DD(357.1,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.02,21,1,0)
	;;= 
	;;^DD(357.1,.02,21,2,0)
	;;=The form the block appears on.
	;;^DD(357.1,.02,"DT")
	;;=2921116
	;;^DD(357.1,.04,0)
	;;=BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.1,.04,.1)
	;;=WHAT ROW SHOULD THE BLOCK START IN?
	;;^DD(357.1,.04,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(357.1,.04,2.1)
	;;=S Y=(+Y)+1
	;;^DD(357.1,.04,3)
	;;=What line should this block begin on?
	;;^DD(357.1,.04,21,0)
	;;=^^1^1^2940216^
	;;^DD(357.1,.04,21,1,0)
	;;=The row  on the encounter form that the block starts on.
	;;^DD(357.1,.04,23,0)
	;;=^^4^4^2940216^
	;;^DD(357.1,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.1,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.1,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.1,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.1,.04,"DT")
	;;=2930715
	;;^DD(357.1,.05,0)
	;;=BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.1,.05,.1)
	;;=WHAT COLUMN SHOULD THE BLOCK START IN?
	;;^DD(357.1,.05,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(357.1,.05,2.1)
	;;=S Y=(+Y)+1
	;;^DD(357.1,.05,3)
	;;=What column should this block begin on?
	;;^DD(357.1,.05,21,0)
	;;=^^1^1^2930715^^
	;;^DD(357.1,.05,21,1,0)
	;;=The column on the encounter form that the block starts on.
	;;^DD(357.1,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.1,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation

IBINI07K
IBINI07K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.1,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.1,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.1,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.1,.05,"DT")
	;;=2930715
	;;^DD(357.1,.06,0)
	;;=WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.1,.06,.1)
	;;=HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
	;;^DD(357.1,.06,3)
	;;=How many characters wide should this block be?
	;;^DD(357.1,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.06,21,1,0)
	;;= 
	;;^DD(357.1,.06,21,2,0)
	;;=The width of the block, measured in the number of characters across.
	;;^DD(357.1,.06,"DT")
	;;=2930415
	;;^DD(357.1,.07,0)
	;;=HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.1,.07,.1)
	;;=HOW MANY LINES HIGH SHOULD THE BLOCK BE?
	;;^DD(357.1,.07,3)
	;;=How many lines high should this block be?
	;;^DD(357.1,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.07,21,1,0)
	;;= 
	;;^DD(357.1,.07,21,2,0)
	;;=The height of the block, measured by the number of lines it takes up.
	;;^DD(357.1,.07,"DT")
	;;=2930415
	;;^DD(357.1,.1,0)
	;;=OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
	;;^DD(357.1,.1,.1)
	;;=OUTLINE TYPE (SOLID/INVISIBLE)
	;;^DD(357.1,.1,3)
	;;=Enter '1' if the block should have a box around it, '2' if not.
	;;^DD(357.1,.1,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.1,21,1,0)
	;;= 
	;;^DD(357.1,.1,21,2,0)
	;;=How the block is outlined on the form.
	;;^DD(357.1,.1,"DT")
	;;=2930415
	;;^DD(357.1,.11,0)
	;;=BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
	;;^DD(357.1,.11,.1)
	;;=WHAT HEADER SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
	;;^DD(357.1,.11,3)
	;;=What text should appear at the top of the block?
	;;^DD(357.1,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.1,.11,21,1,0)
	;;= 
	;;^DD(357.1,.11,21,2,0)
	;;=The text appearing at the top of the block.
	;;^DD(357.1,.11,"DT")
	;;=2940216
	;;^DD(357.1,.12,0)
	;;=HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(357.1,.12,.1)
	;;=HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(357.1,.12,3)
	;;=B=bold, U=underline, C=center. You can enter any combination of {B,U,C}.
	;;^DD(357.1,.12,21,0)
	;;=^^2^2^2940216^
	;;^DD(357.1,.12,21,1,0)
	;;= 
	;;^DD(357.1,.12,21,2,0)
	;;=This field determines the appearance of the block's header.
	;;^DD(357.1,.12,"DT")
	;;=2930616
	;;^DD(357.1,.13,0)
	;;=BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
	;;^DD(357.1,.13,.1)
	;;=ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
	;;^DD(357.1,.13,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(357.1,.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(357.1,.13,21,1,0)
	;;= 
	;;^DD(357.1,.13,21,2,0)
	;;=A brief description of the contents or use of the block.
	;;^DD(357.1,.13,"DT")
	;;=2930415
	;;^DD(357.1,.14,0)
	;;=TOOL KIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<.01)!(X?.E1"."3N.N) X
	;;^DD(357.1,.14,1,0)
	;;=^.1
	;;^DD(357.1,.14,1,1,0)
	;;=357.1^D
	;;^DD(357.1,.14,1,1,1)
	;;=S ^IBE(357.1,"D",$E(X,1,30),DA)=""
	;;^DD(357.1,.14,1,1,2)
	;;=K ^IBE(357.1,"D",$E(X,1,30),DA)
	;;^DD(357.1,.14,1,1,"%D",0)
	;;=^^2^2^2940216^
	;;^DD(357.1,.14,1,1,"%D",1,0)
	;;=This index is used to locate all the 'tool box' blocks that can be used
	;;^DD(357.1,.14,1,1,"%D",2,0)
	;;=as templates to create a new block to be added to a form.
	;;^DD(357.1,.14,1,1,"DT")
	;;=2930108
	;;^DD(357.1,.14,3)
	;;=Enter a number greater than 0 if this block is part of the tool kit. The number will determine its listed order.

IBINI07L
IBINI07L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.1,.14,21,0)
	;;=^^3^3^2930817^^^^
	;;^DD(357.1,.14,21,1,0)
	;;=A number>0 in this field means that the block is part of the tool kit.
	;;^DD(357.1,.14,21,2,0)
	;;=The value determines the order that the block will be listed to the
	;;^DD(357.1,.14,21,3,0)
	;;=screen that displays the tool kit blocks.
	;;^DD(357.1,.14,"DT")
	;;=2930817
	;;^DD(357.1,1,0)
	;;=COMPILED STRINGS^357.11A^^S;0
	;;^DD(357.1,1,21,0)
	;;=^^3^3^2931117^^
	;;^DD(357.1,1,21,1,0)
	;;=Contains a compiled list of the calls, along with the arguments, that should
	;;^DD(357.1,1,21,2,0)
	;;=be made to the routine that prints strings to the form. Before printing, the
	;;^DD(357.1,1,21,3,0)
	;;=block offset is added to the string position.
	;;^DD(357.1,2,0)
	;;=COMPILED VERTICAL LINES^357.12A^^V;0
	;;^DD(357.1,2,21,0)
	;;=^^3^3^2940216^
	;;^DD(357.1,2,21,1,0)
	;;=A compiled list of the vertical lines that are needed to print the block.
	;;^DD(357.1,2,21,2,0)
	;;=The arguments to the routine that prints the line are included. The
	;;^DD(357.1,2,21,3,0)
	;;=block's offset is must be added to the line's position.
	;;^DD(357.11,0)
	;;=COMPILED STRINGS SUB-FIELD^^.05^5
	;;^DD(357.11,0,"DIK")
	;;=IBXF1
	;;^DD(357.11,0,"DT")
	;;=2931115
	;;^DD(357.11,0,"IX","B",357.11,.01)
	;;=
	;;^DD(357.11,0,"NM","COMPILED STRINGS")
	;;=
	;;^DD(357.11,0,"UP")
	;;=357.1
	;;^DD(357.11,.01,0)
	;;=STRING ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.01,1,0)
	;;=^.1
	;;^DD(357.11,.01,1,1,0)
	;;=357.11^B
	;;^DD(357.11,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)=""
	;;^DD(357.11,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"S","B",$E(X,1,30),DA)
	;;^DD(357.11,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.01,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.01,21,1,0)
	;;=The row that the string should be printed at.
	;;^DD(357.11,.01,"DT")
	;;=2931117
	;;^DD(357.11,.02,0)
	;;=COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.02,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.02,21,1,0)
	;;=The column that the string should be printed at.
	;;^DD(357.11,.02,"DT")
	;;=2931115
	;;^DD(357.11,.03,0)
	;;=OPTIONS^F^^0;3^K:$L(X)>4!($L(X)<1) X
	;;^DD(357.11,.03,3)
	;;=Answer must be 1-4 characters in length.
	;;^DD(357.11,.03,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.03,21,1,0)
	;;=The display characteristics that the string should have.
	;;^DD(357.11,.03,"DT")
	;;=2931115
	;;^DD(357.11,.04,0)
	;;=WIDTH^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.11,.04,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.11,.04,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.04,21,1,0)
	;;=The width that the printed string should occupy. (optional)
	;;^DD(357.11,.04,"DT")
	;;=2931115
	;;^DD(357.11,.05,0)
	;;=STRING^F^^0;5^K:$L(X)>200!($L(X)<1) X
	;;^DD(357.11,.05,3)
	;;=Answer must be 1-200 characters in length.
	;;^DD(357.11,.05,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.11,.05,21,1,0)
	;;=The string that should be printed.
	;;^DD(357.11,.05,"DT")
	;;=2931115
	;;^DD(357.12,0)
	;;=COMPILED VERTICAL LINES SUB-FIELD^^.04^4
	;;^DD(357.12,0,"DIK")
	;;=IBXF1
	;;^DD(357.12,0,"DT")
	;;=2931117
	;;^DD(357.12,0,"IX","B",357.12,.01)
	;;=
	;;^DD(357.12,0,"NM","COMPILED VERTICAL LINES")
	;;=
	;;^DD(357.12,0,"UP")
	;;=357.1
	;;^DD(357.12,.01,0)
	;;=VERTICAL LINE ROW^NJ3,0^^0;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.01,1,0)
	;;=^.1
	;;^DD(357.12,.01,1,1,0)
	;;=357.12^B
	;;^DD(357.12,.01,1,1,1)
	;;=S ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)=""

IBINI07M
IBINI07M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.12,.01,1,1,2)
	;;=K ^IBE(357.1,DA(1),"V","B",$E(X,1,30),DA)
	;;^DD(357.12,.01,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.01,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.01,21,1,0)
	;;=The row that the line should begin at.
	;;^DD(357.12,.01,"DT")
	;;=2931117
	;;^DD(357.12,.02,0)
	;;=COLUMN^RNJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.02,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.02,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.02,21,1,0)
	;;=The column that the line should begin at.
	;;^DD(357.12,.02,"DT")
	;;=2931117
	;;^DD(357.12,.03,0)
	;;=LENGTH^RNJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.12,.03,3)
	;;=Type a Number between 0 and 200, 0 Decimal Digits
	;;^DD(357.12,.03,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.03,21,1,0)
	;;=The length of the line.
	;;^DD(357.12,.03,"DT")
	;;=2931117
	;;^DD(357.12,.04,0)
	;;=CHARACTER^F^^0;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(357.12,.04,3)
	;;=Answer must be 1-30 characters in length.
	;;^DD(357.12,.04,21,0)
	;;=^^1^1^2931117^
	;;^DD(357.12,.04,21,1,0)
	;;=The string (probably a single character) to use to create the string. (optional)
	;;^DD(357.12,.04,"DT")
	;;=2931117

IBINI07N
IBINI07N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.2,0,"GL")
	;;=^IBE(357.2,
	;;^DIC("B","SELECTION LIST",357.2)
	;;=
	;;^DIC(357.2,"%D",0)
	;;=^^10^10^2940217^
	;;^DIC(357.2,"%D",1,0)
	;;= 
	;;^DIC(357.2,"%D",2,0)
	;;= 
	;;^DIC(357.2,"%D",3,0)
	;;= 
	;;^DIC(357.2,"%D",4,0)
	;;= 
	;;^DIC(357.2,"%D",5,0)
	;;= 
	;;^DIC(357.2,"%D",6,0)
	;;=This file contains descriptions of 'selection lists'.  A selection list is
	;;^DIC(357.2,"%D",7,0)
	;;=a rectangular area in a block that contains a list. The list has 'columns'
	;;^DIC(357.2,"%D",8,0)
	;;=of 'selections'. The columns have 'subcolumns', which can either contain
	;;^DIC(357.2,"%D",9,0)
	;;=text or  a 'marking area'.  A marking area is an area on the form designed
	;;^DIC(357.2,"%D",10,0)
	;;=to be checked to indicate that a choice is being made from the list.
	;;^DD(357.2,0)
	;;=FIELD^^2^12
	;;^DD(357.2,0,"DDA")
	;;=N
	;;^DD(357.2,0,"DIK")
	;;=IBXF2
	;;^DD(357.2,0,"DT")
	;;=2930427
	;;^DD(357.2,0,"ID",.02)
	;;=W ""
	;;^DD(357.2,0,"ID",.11)
	;;=W ""
	;;^DD(357.2,0,"IX","B",357.2,.01)
	;;=
	;;^DD(357.2,0,"IX","C",357.2,.02)
	;;=
	;;^DD(357.2,0,"NM","SELECTION LIST")
	;;=
	;;^DD(357.2,0,"PT",357.3,.03)
	;;=
	;;^DD(357.2,0,"PT",357.4,.03)
	;;=
	;;^DD(357.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.2,.01,1,0)
	;;=^.1
	;;^DD(357.2,.01,1,1,0)
	;;=357.2^B
	;;^DD(357.2,.01,1,1,1)
	;;=S ^IBE(357.2,"B",$E(X,1,30),DA)=""
	;;^DD(357.2,.01,1,1,2)
	;;=K ^IBE(357.2,"B",$E(X,1,30),DA)
	;;^DD(357.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.01,21,1,0)
	;;= 
	;;^DD(357.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(357.2,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.2,.01,"DT")
	;;=2921119
	;;^DD(357.2,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.2,.02,1,0)
	;;=^.1
	;;^DD(357.2,.02,1,1,0)
	;;=357.2^C
	;;^DD(357.2,.02,1,1,1)
	;;=S ^IBE(357.2,"C",$E(X,1,30),DA)=""
	;;^DD(357.2,.02,1,1,2)
	;;=K ^IBE(357.2,"C",$E(X,1,30),DA)
	;;^DD(357.2,.02,1,1,"DT")
	;;=2921207
	;;^DD(357.2,.02,3)
	;;=Enter the block that the selection list should appear in.
	;;^DD(357.2,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.02,21,1,0)
	;;=The block that the list appears on. The position of the selection list is
	;;^DD(357.2,.02,21,2,0)
	;;=relative to the block.
	;;^DD(357.2,.02,"DT")
	;;=2921207
	;;^DD(357.2,.05,0)
	;;=COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
	;;^DD(357.2,.05,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
	;;^DD(357.2,.05,3)
	;;=This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
	;;^DD(357.2,.05,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.05,21,1,0)
	;;= 
	;;^DD(357.2,.05,21,2,0)
	;;=The text that appears at the top of each column (NOT subcolumn).
	;;^DD(357.2,.05,"DT")
	;;=2930415
	;;^DD(357.2,.06,0)
	;;=COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(357.2,.06,.1)
	;;=HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(357.2,.06,3)
	;;=B=bold,U=underline,C=center. You can enter any combination of {B,U,C}.
	;;^DD(357.2,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.06,21,1,0)
	;;= 
	;;^DD(357.2,.06,21,2,0)
	;;=The column header can be give characteristics, such as centered and bold.
	;;^DD(357.2,.06,"DT")
	;;=2930616
	;;^DD(357.2,.07,0)
	;;=SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
	;;^DD(357.2,.07,.1)
	;;=HOW SHOULD THE SUBCOLUMNS BE SEPARATED?

IBINI07O
IBINI07O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.2,.07,3)
	;;=How should the subcolumns be separated?
	;;^DD(357.2,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.07,21,1,0)
	;;= 
	;;^DD(357.2,.07,21,2,0)
	;;=What characters are used to separate the subcolumns.
	;;^DD(357.2,.07,"DT")
	;;=2930415
	;;^DD(357.2,.08,0)
	;;=EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.2,.08,.1)
	;;=NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
	;;^DD(357.2,.08,3)
	;;=How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
	;;^DD(357.2,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.2,.08,21,1,0)
	;;= 
	;;^DD(357.2,.08,21,2,0)
	;;=Each entry on the list prints on only one line. However, if you want
	;;^DD(357.2,.08,21,3,0)
	;;=extra space to appear below each entry on the list then this field should
	;;^DD(357.2,.08,21,4,0)
	;;=be set to the number of blank lines desired.
	;;^DD(357.2,.08,"DT")
	;;=2930427
	;;^DD(357.2,.09,0)
	;;=GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(357.2,.09,.1)
	;;=HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(357.2,.09,3)
	;;=B=bold, C=center,U=underline. You can enter any combination of {B,C,U}
	;;^DD(357.2,.09,21,0)
	;;=^^1^1^2930401^^^
	;;^DD(357.2,.09,21,1,0)
	;;=This field determines the appearance of the group headers.
	;;^DD(357.2,.09,"DT")
	;;=2930616
	;;^DD(357.2,.11,0)
	;;=SELECTION ROUTINE^R*P357.6'^IBE(357.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.2,.11,3)
	;;=Enter the package interface used to obtain this list.
	;;^DD(357.2,.11,12)
	;;=Allows only available selection routines.
	;;^DD(357.2,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	;;^DD(357.2,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.11,21,1,0)
	;;= 
	;;^DD(357.2,.11,21,2,0)
	;;=This identifies the Package Interface that is used to fill the list.
	;;^DD(357.2,.11,"DT")
	;;=2930115
	;;^DD(357.2,.12,0)
	;;=UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
	;;^DD(357.2,.12,.1)
	;;=SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
	;;^DD(357.2,.12,3)
	;;=Should the items on the list be underlined?
	;;^DD(357.2,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.2,.12,21,1,0)
	;;= 
	;;^DD(357.2,.12,21,2,0)
	;;=Answer yes if each entry on the list should be underlined.
	;;^DD(357.2,.12,"DT")
	;;=2930414
	;;^DD(357.2,.13,0)
	;;=NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.2,.13,.1)
	;;=HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
	;;^DD(357.2,.13,3)
	;;=
	;;^DD(357.2,.13,4)
	;;=D HELP5^IBDFU5
	;;^DD(357.2,.13,21,0)
	;;=^^6^6^2930527^
	;;^DD(357.2,.13,21,1,0)
	;;= 
	;;^DD(357.2,.13,21,2,0)
	;;=A selection list may be displayed in an area several columns wide. The
	;;^DD(357.2,.13,21,3,0)
	;;=starting position and height of each column may be specified. However, it
	;;^DD(357.2,.13,21,4,0)
	;;=is not necessary because defaults values will be used. The defaults used
	;;^DD(357.2,.13,21,5,0)
	;;=assume that nothing else is going in the block except the selection list
	;;^DD(357.2,.13,21,6,0)
	;;=and that the entire block should be filled.
	;;^DD(357.2,.13,"DT")
	;;=2930802
	;;^DD(357.2,1,0)
	;;=LIST COLUMN^357.21I^^1;0
	;;^DD(357.2,1,21,0)
	;;=^^2^2^2940216^^^^
	;;^DD(357.2,1,21,1,0)
	;;=A column is a rectangular area that has the necessary width to display a
	;;^DD(357.2,1,21,2,0)
	;;=single item on the list.
	;;^DD(357.2,1,"DT")
	;;=2930802

IBINI07P
IBINI07P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.2,2,0)
	;;=SUBCOLUMN NUMBER^357.22I^^2;0
	;;^DD(357.2,2,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.2,2,21,1,0)
	;;= 
	;;^DD(357.2,2,21,2,0)
	;;=A subcolumn contains one field of the entry on the list. The subcolumn
	;;^DD(357.2,2,21,3,0)
	;;=order is the order, from left to right, that the subcolumns will appear
	;;^DD(357.2,2,21,4,0)
	;;=in.
	;;^DD(357.2,2,"DT")
	;;=2930413
	;;^DD(357.21,0)
	;;=LIST COLUMN SUB-FIELD^^.04^4
	;;^DD(357.21,0,"DIK")
	;;=IBXF2
	;;^DD(357.21,0,"DT")
	;;=2930331
	;;^DD(357.21,0,"ID","WRITE")
	;;=W "  COLUMN #",$P($G(^(0)),U)
	;;^DD(357.21,0,"IX","B",357.21,.01)
	;;=
	;;^DD(357.21,0,"NM","LIST COLUMN")
	;;=
	;;^DD(357.21,0,"UP")
	;;=357.2
	;;^DD(357.21,.01,0)
	;;=LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.21,.01,1,0)
	;;=^.1
	;;^DD(357.21,.01,1,1,0)
	;;=357.21^B
	;;^DD(357.21,.01,1,1,1)
	;;=S ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.21,.01,1,1,2)
	;;=K ^IBE(357.2,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.21,.01,3)
	;;=You can specify the position and height of up to 4 columns. Defaults will be used where needed.
	;;^DD(357.21,.01,21,0)
	;;=^^2^2^2930722^^
	;;^DD(357.21,.01,21,1,0)
	;;=The order that the columns will be filled. Column 1 will first be filled
	;;^DD(357.21,.01,21,2,0)
	;;=with items, then column 2, etc.
	;;^DD(357.21,.01,"DT")
	;;=2930802
	;;^DD(357.21,.02,0)
	;;=LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.21,.02,.1)
	;;=WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(357.21,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.21,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.21,.02,3)
	;;=What row should the column begin in?
	;;^DD(357.21,.02,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(357.21,.02,21,1,0)
	;;=The row, relative to the block, that the column should begin in. This is
	;;^DD(357.21,.02,21,2,0)
	;;=optional, since default values can be used.
	;;^DD(357.21,.02,23,0)
	;;=^^4^4^2930715^^
	;;^DD(357.21,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.21,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.21,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.21,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.21,.02,"DT")
	;;=2930802
	;;^DD(357.21,.03,0)
	;;=LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.21,.03,.1)
	;;=WHAT BLOCK COLUMN SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(357.21,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.21,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.21,.03,3)
	;;=At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
	;;^DD(357.21,.03,21,0)
	;;=^^4^4^2940216^
	;;^DD(357.21,.03,21,1,0)
	;;= 
	;;^DD(357.21,.03,21,2,0)
	;;=The column (# of characters to the right) that the list column should
	;;^DD(357.21,.03,21,3,0)
	;;=begin in, relative to the block. It is optional, since a default value can
	;;^DD(357.21,.03,21,4,0)
	;;=be used.
	;;^DD(357.21,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.21,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.21,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.21,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.21,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.

IBINI07Q
IBINI07Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.21,.03,"DT")
	;;=2930930
	;;^DD(357.21,.04,0)
	;;=LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.21,.04,.1)
	;;=HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
	;;^DD(357.21,.04,3)
	;;=How many lines should the column cover?
	;;^DD(357.21,.04,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.21,.04,21,1,0)
	;;= 
	;;^DD(357.21,.04,21,2,0)
	;;=The number of lines the column should occupy. This is optional - if not
	;;^DD(357.21,.04,21,3,0)
	;;=supplied the column will extend to the bottom of the block.
	;;^DD(357.21,.04,"DT")
	;;=2930802
	;;^DD(357.22,0)
	;;=SUBCOLUMN NUMBER SUB-FIELD^^.07^7
	;;^DD(357.22,0,"DIK")
	;;=IBXF2
	;;^DD(357.22,0,"DT")
	;;=2930413
	;;^DD(357.22,0,"ID","WRITE")
	;;=D ID1^IBDFU5
	;;^DD(357.22,0,"IX","B",357.22,.01)
	;;=
	;;^DD(357.22,0,"NM","SUBCOLUMN NUMBER")
	;;=
	;;^DD(357.22,0,"UP")
	;;=357.2
	;;^DD(357.22,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.2,DA(1),2,"B",X))) X
	;;^DD(357.22,.01,.1)
	;;=Number of the subcolumn, subcolumns being numbered 1-6, left-to-right
	;;^DD(357.22,.01,1,0)
	;;=^.1
	;;^DD(357.22,.01,1,1,0)
	;;=357.22^B
	;;^DD(357.22,.01,1,1,1)
	;;=S ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(357.22,.01,1,1,2)
	;;=K ^IBE(357.2,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.22,.01,3)
	;;=The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 6 subcolumns, numbered 1-6.
	;;^DD(357.22,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.22,.01,21,1,0)
	;;= 
	;;^DD(357.22,.01,21,2,0)
	;;=The order that the subcolumn will appear on the form.
	;;^DD(357.22,.01,"DT")
	;;=2930413
	;;^DD(357.22,.02,0)
	;;=SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.22,.02,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
	;;^DD(357.22,.02,3)
	;;=What text should appear at the top of the subcolumn?
	;;^DD(357.22,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.22,.02,21,1,0)
	;;= 
	;;^DD(357.22,.02,21,2,0)
	;;=The text that will appear at the top of the subcolumn.
	;;^DD(357.22,.02,"DT")
	;;=2930414
	;;^DD(357.22,.03,0)
	;;=SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.22,.03,.1)
	;;=HOW WIDE SHOULD THE SUBCOLUMN BE?
	;;^DD(357.22,.03,3)
	;;=How wide should the subcolumn be?
	;;^DD(357.22,.03,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.22,.03,21,1,0)
	;;= 
	;;^DD(357.22,.03,21,2,0)
	;;=The width of the subcolumn. If the subcolumn contains a MARKING AREA then
	;;^DD(357.22,.03,21,3,0)
	;;=the width of the MARKING AREA overrides what ever this is.
	;;^DD(357.22,.03,"DT")
	;;=2930414
	;;^DD(357.22,.04,0)
	;;=TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
	;;^DD(357.22,.04,.1)
	;;=SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
	;;^DD(357.22,.04,3)
	;;=Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
	;;^DD(357.22,.04,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.22,.04,21,1,0)
	;;= 
	;;^DD(357.22,.04,21,2,0)
	;;=The subcolumn can contain either text, derived from what is returned by
	;;^DD(357.22,.04,21,3,0)
	;;=the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
	;;^DD(357.22,.04,21,4,0)
	;;=to select an entry on the list.
	;;^DD(357.22,.04,"DT")
	;;=2930428
	;;^DD(357.22,.05,0)
	;;=SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(357.6,+$P($G(^IBE(357.2,DA(1),0)),U,11),2)),U,(2*X)-1)="")!((X=1)&'$P($G(^IBE(357.6,+$P($G(^IBE(357.2,DA(1),0)),U,11),2)),U,17)) X
	;;^DD(357.22,.05,.1)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?

IBINI07R
IBINI07R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.22,.05,3)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(357.22,.05,4)
	;;=D HELP2^IBDFU5
	;;^DD(357.22,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.22,.05,21,1,0)
	;;= 
	;;^DD(357.22,.05,21,2,0)
	;;=The Package Interface returns a record, which is composed of fields. This
	;;^DD(357.22,.05,21,3,0)
	;;=identifies which field goes in the subcolumn.
	;;^DD(357.22,.05,"DT")
	;;=2930810
	;;^DD(357.22,.06,0)
	;;=MARKING AREA^P357.91'^IBE(357.91,^0;6^Q
	;;^DD(357.22,.06,.1)
	;;=TYPE OF MARKING AREA
	;;^DD(357.22,.06,3)
	;;=What type of marking area should appear in the subcolumn?
	;;^DD(357.22,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.22,.06,21,1,0)
	;;= 
	;;^DD(357.22,.06,21,2,0)
	;;=This identifies which MARKING AREA should go in the subcolumn.
	;;^DD(357.22,.06,"DT")
	;;=2930414
	;;^DD(357.22,.07,0)
	;;=ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
	;;^DD(357.22,.07,.1)
	;;=ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
	;;^DD(357.22,.07,3)
	;;=Is it okey to edit the text appearing in this subcolumn?
	;;^DD(357.22,.07,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.22,.07,21,1,0)
	;;= 
	;;^DD(357.22,.07,21,2,0)
	;;=This determines whether or not the user, when selecting items to appear on
	;;^DD(357.22,.07,21,3,0)
	;;=the list, will be able to edit the text appearing in the subcolum. This is
	;;^DD(357.22,.07,21,4,0)
	;;=ignored if the subcolumn contains a MARKING AREA.
	;;^DD(357.22,.07,"DT")
	;;=2930428

IBINI07S
IBINI07S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.3,0,"GL")
	;;=^IBE(357.3,
	;;^DIC("B","SELECTION",357.3)
	;;=
	;;^DIC(357.3,"%D",0)
	;;=^^4^4^2931214^^^
	;;^DIC(357.3,"%D",1,0)
	;;= 
	;;^DIC(357.3,"%D",2,0)
	;;=Contains the items appearing on the SELECTION LISTS. A selection can be
	;;^DIC(357.3,"%D",3,0)
	;;=composed of several fields, hence can occupy several subcolumns. Only the
	;;^DIC(357.3,"%D",4,0)
	;;=text is stored here, not the MARKING SYMBOLS.
	;;^DD(357.3,0)
	;;=FIELD^^1^6
	;;^DD(357.3,0,"DIK")
	;;=IBXF3
	;;^DD(357.3,0,"DT")
	;;=2931020
	;;^DD(357.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.3,0,"IX","APO",357.3,.03)
	;;=
	;;^DD(357.3,0,"IX","APO1",357.3,.04)
	;;=
	;;^DD(357.3,0,"IX","APO2",357.3,.05)
	;;=
	;;^DD(357.3,0,"IX","B",357.3,.01)
	;;=
	;;^DD(357.3,0,"IX","C",357.3,.03)
	;;=
	;;^DD(357.3,0,"IX","D",357.3,.04)
	;;=
	;;^DD(357.3,0,"NM","SELECTION")
	;;=
	;;^DD(357.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.3,.01,1,0)
	;;=^.1
	;;^DD(357.3,.01,1,1,0)
	;;=357.3^B
	;;^DD(357.3,.01,1,1,1)
	;;=S ^IBE(357.3,"B",$E(X,1,30),DA)=""
	;;^DD(357.3,.01,1,1,2)
	;;=K ^IBE(357.3,"B",$E(X,1,30),DA)
	;;^DD(357.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(357.3,.01,21,1,0)
	;;= 
	;;^DD(357.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(357.3,.01,"DT")
	;;=2921119
	;;^DD(357.3,.02,0)
	;;=PLACE HOLDER ONLY^S^0:NO;1:YES;^0;2^Q
	;;^DD(357.3,.02,3)
	;;=Enter YES if this is a real entry on the list, NO if it is a place holder, used to add some blank space to the list.
	;;^DD(357.3,.02,"DT")
	;;=2931020
	;;^DD(357.3,.03,0)
	;;=SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
	;;^DD(357.3,.03,1,0)
	;;=^.1
	;;^DD(357.3,.03,1,1,0)
	;;=357.3^C
	;;^DD(357.3,.03,1,1,1)
	;;=S ^IBE(357.3,"C",$E(X,1,30),DA)=""
	;;^DD(357.3,.03,1,1,2)
	;;=K ^IBE(357.3,"C",$E(X,1,30),DA)
	;;^DD(357.3,.03,1,1,"DT")
	;;=2921127
	;;^DD(357.3,.03,1,2,0)
	;;=357.3^APO^MUMPS
	;;^DD(357.3,.03,1,2,1)
	;;=I $P(^IBE(357.3,DA,0),U,5)]"",$P(^(0),U,4) S ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
	;;^DD(357.3,.03,1,2,2)
	;;=I $P(^IBE(357.3,DA,0),U,5)]"",$P(^(0),U,4) K ^IBE(357.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
	;;^DD(357.3,.03,1,2,"%D",0)
	;;=^^7^7^2940224^
	;;^DD(357.3,.03,1,2,"%D",1,0)
	;;= 
	;;^DD(357.3,.03,1,2,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.03,1,2,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.03,1,2,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.03,1,2,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO1 index
	;;^DD(357.3,.03,1,2,"%D",6,0)
	;;=on the .04 field and the APO2 index on the .05 field need not be
	;;^DD(357.3,.03,1,2,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.03,1,2,"DT")
	;;=2921222
	;;^DD(357.3,.03,21,0)
	;;=^^2^2^2921215^
	;;^DD(357.3,.03,21,1,0)
	;;= 
	;;^DD(357.3,.03,21,2,0)
	;;=Identifies the selection list that this selection belongs on.
	;;^DD(357.3,.03,"DT")
	;;=2921222
	;;^DD(357.3,.04,0)
	;;=SELECTION GROUP^RP357.4^IBE(357.4,^0;4^Q
	;;^DD(357.3,.04,1,0)
	;;=^.1
	;;^DD(357.3,.04,1,1,0)
	;;=357.3^D
	;;^DD(357.3,.04,1,1,1)
	;;=S ^IBE(357.3,"D",$E(X,1,30),DA)=""

IBINI07T
IBINI07T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.3,.04,1,1,2)
	;;=K ^IBE(357.3,"D",$E(X,1,30),DA)
	;;^DD(357.3,.04,1,1,"DT")
	;;=2921221
	;;^DD(357.3,.04,1,2,0)
	;;=357.3^APO1^MUMPS
	;;^DD(357.3,.04,1,2,1)
	;;=I $P(^IBE(357.3,DA,0),U,5)]"",$P(^(0),U,3) S ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
	;;^DD(357.3,.04,1,2,2)
	;;=I $P(^IBE(357.3,DA,0),U,5)]"",$P(^(0),U,3) K ^IBE(357.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
	;;^DD(357.3,.04,1,2,"%D",0)
	;;=^^7^7^2940224^
	;;^DD(357.3,.04,1,2,"%D",1,0)
	;;= 
	;;^DD(357.3,.04,1,2,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.04,1,2,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.04,1,2,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.04,1,2,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO index
	;;^DD(357.3,.04,1,2,"%D",6,0)
	;;=on the .03 field and the APO2 index on the .05 field need not be
	;;^DD(357.3,.04,1,2,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.04,1,2,"DT")
	;;=2921222
	;;^DD(357.3,.04,3)
	;;=Entries on a list are grouped under group headers - under which header should this entry appear?
	;;^DD(357.3,.04,21,0)
	;;=^^3^3^2930607^
	;;^DD(357.3,.04,21,1,0)
	;;= 
	;;^DD(357.3,.04,21,2,0)
	;;=The SELECTION GROUP that the selection belongs to.The selection will
	;;^DD(357.3,.04,21,3,0)
	;;=appear under the group header on the form.
	;;^DD(357.3,.04,"DT")
	;;=2921222
	;;^DD(357.3,.05,0)
	;;=PRINT ORDER WITHIN GROUP^RNJ6,2^^0;5^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(357.3,.05,1,0)
	;;=^.1
	;;^DD(357.3,.05,1,1,0)
	;;=357.3^APO2^MUMPS
	;;^DD(357.3,.05,1,1,1)
	;;=I $P(^IBE(357.3,DA,0),U,3),$P(^(0),U,4) S ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
	;;^DD(357.3,.05,1,1,2)
	;;=I $P(^IBE(357.3,DA,0),U,3),$P(^(0),U,4) K ^IBE(357.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
	;;^DD(357.3,.05,1,1,"%D",0)
	;;=^^7^7^2940224^
	;;^DD(357.3,.05,1,1,"%D",1,0)
	;;= 
	;;^DD(357.3,.05,1,1,"%D",2,0)
	;;=Allows all selections for a particular group in a selection list to be
	;;^DD(357.3,.05,1,1,"%D",3,0)
	;;=found in the order that they should appear. The subscripts are
	;;^DD(357.3,.05,1,1,"%D",4,0)
	;;=^IBE(357.3,"APO",<selection list ien>,<group ien>,<print order within
	;;^DD(357.3,.05,1,1,"%D",5,0)
	;;=group>,<selection ien>). If this field is re-indexed then the APO index
	;;^DD(357.3,.05,1,1,"%D",6,0)
	;;=on the .03 field and the APO1 index on the .04 field need not be
	;;^DD(357.3,.05,1,1,"%D",7,0)
	;;=re-indexed.
	;;^DD(357.3,.05,1,1,"DT")
	;;=2921222
	;;^DD(357.3,.05,3)
	;;=Type a Number between 0 and 999.99, 2 Decimal Digits
	;;^DD(357.3,.05,21,0)
	;;=^^2^2^2921229^^^^
	;;^DD(357.3,.05,21,1,0)
	;;=Determines the order that this selection entry will appear in under the
	;;^DD(357.3,.05,21,2,0)
	;;=header for the selection group.
	;;^DD(357.3,.05,"DT")
	;;=2921229
	;;^DD(357.3,1,0)
	;;=SUBCOLUMN VALUE^357.31IA^^1;0
	;;^DD(357.3,1,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.3,1,21,1,0)
	;;= 
	;;^DD(357.3,1,21,2,0)
	;;=The selection can be composed of multiple fields. Each field occupies its
	;;^DD(357.3,1,21,3,0)
	;;=own subcolumn on the form.
	;;^DD(357.31,0)
	;;=SUBCOLUMN VALUE SUB-FIELD^^.02^2
	;;^DD(357.31,0,"DIK")
	;;=IBXF3
	;;^DD(357.31,0,"DT")
	;;=2930402
	;;^DD(357.31,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(357.31,0,"IX","B",357.31,.01)
	;;=
	;;^DD(357.31,0,"NM","SUBCOLUMN VALUE")
	;;=
	;;^DD(357.31,0,"UP")
	;;=357.3
	;;^DD(357.31,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(357.3,DA(1),1,"B",X))) X

IBINI07U
IBINI07U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.31,.01,1,0)
	;;=^.1
	;;^DD(357.31,.01,1,1,0)
	;;=357.31^B
	;;^DD(357.31,.01,1,1,1)
	;;=S ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(357.31,.01,1,1,2)
	;;=K ^IBE(357.3,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(357.31,.01,3)
	;;=Which subcolumn is the value for?
	;;^DD(357.31,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.31,.01,21,1,0)
	;;= 
	;;^DD(357.31,.01,21,2,0)
	;;=The order that the subcolumn should appear on the form.
	;;^DD(357.31,.01,"DT")
	;;=2930402
	;;^DD(357.31,.02,0)
	;;=SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.31,.02,3)
	;;=What value should go in the subcolumn?
	;;^DD(357.31,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.31,.02,21,1,0)
	;;= 
	;;^DD(357.31,.02,21,2,0)
	;;=The text that should appear in the subcolumn.
	;;^DD(357.31,.02,"DT")
	;;=2930401

IBINI07V
IBINI07V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.4,0,"GL")
	;;=^IBE(357.4,
	;;^DIC("B","SELECTION GROUP",357.4)
	;;=
	;;^DIC(357.4,"%D",0)
	;;=^^3^3^2931214^^
	;;^DIC(357.4,"%D",1,0)
	;;= 
	;;^DIC(357.4,"%D",2,0)
	;;=A Selection Group is a set of items on a list and the header that those
	;;^DIC(357.4,"%D",3,0)
	;;=items should appear under.
	;;^DD(357.4,0)
	;;=FIELD^^.03^3
	;;^DD(357.4,0,"DDA")
	;;=N
	;;^DD(357.4,0,"DIK")
	;;=IBXF4
	;;^DD(357.4,0,"DT")
	;;=2930604
	;;^DD(357.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(357.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(357.4,0,"IX","APO",357.4,.02)
	;;=
	;;^DD(357.4,0,"IX","APO1",357.4,.03)
	;;=
	;;^DD(357.4,0,"IX","B",357.4,.01)
	;;=
	;;^DD(357.4,0,"IX","D",357.4,.03)
	;;=
	;;^DD(357.4,0,"NM","SELECTION GROUP")
	;;=
	;;^DD(357.4,0,"PT",357.3,.04)
	;;=
	;;^DD(357.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(357.4,.01,1,0)
	;;=^.1
	;;^DD(357.4,.01,1,1,0)
	;;=357.4^B
	;;^DD(357.4,.01,1,1,1)
	;;=S ^IBE(357.4,"B",$E(X,1,30),DA)=""
	;;^DD(357.4,.01,1,1,2)
	;;=K ^IBE(357.4,"B",$E(X,1,30),DA)
	;;^DD(357.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(357.4,.01,21,0)
	;;=^^2^2^2930604^^^^
	;;^DD(357.4,.01,21,1,0)
	;;= 
	;;^DD(357.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(357.4,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(357.4,.01,"DT")
	;;=2930604
	;;^DD(357.4,.02,0)
	;;=PRINT ORDER^RNJ5,2^^0;2^K:+X'=X!(X>99.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(357.4,.02,1,0)
	;;=^.1
	;;^DD(357.4,.02,1,1,0)
	;;=357.4^APO^MUMPS
	;;^DD(357.4,.02,1,1,1)
	;;=I $P(^IBE(357.4,DA,0),U,3) S ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)=""
	;;^DD(357.4,.02,1,1,2)
	;;=I $P(^IBE(357.4,DA,0),U,3) K ^IBE(357.4,"APO",$P(^(0),U,3),X,DA)
	;;^DD(357.4,.02,1,1,"%D",0)
	;;=^^5^5^2940224^
	;;^DD(357.4,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(357.4,.02,1,1,"%D",2,0)
	;;=Allows all groups in a selection list to be found in the order that they
	;;^DD(357.4,.02,1,1,"%D",3,0)
	;;=should appear. The subscripts are ^IBE(357.4,"APO",<selection list
	;;^DD(357.4,.02,1,1,"%D",4,0)
	;;=ien>,<print order for group>,<group ien>). If this field is re-indexed
	;;^DD(357.4,.02,1,1,"%D",5,0)
	;;=then the APO1 index on the .03 field need not be re-indexed.
	;;^DD(357.4,.02,1,1,"DT")
	;;=2921222
	;;^DD(357.4,.02,3)
	;;=Type a Number between 0 and 99.99, 2 Decimal Digits
	;;^DD(357.4,.02,21,0)
	;;=^^5^5^2921222^^^^
	;;^DD(357.4,.02,21,1,0)
	;;= 
	;;^DD(357.4,.02,21,2,0)
	;;=This will define the order that a group of selections will appear in as
	;;^DD(357.4,.02,21,3,0)
	;;=compared to the other groups of selections.
	;;^DD(357.4,.02,21,4,0)
	;;=A group header "BLANK" will be created by default with order number 0.
	;;^DD(357.4,.02,21,5,0)
	;;=This header will not print to the form.
	;;^DD(357.4,.02,"DT")
	;;=2921222
	;;^DD(357.4,.03,0)
	;;=SELECTION LIST^RP357.2'^IBE(357.2,^0;3^Q
	;;^DD(357.4,.03,1,0)
	;;=^.1
	;;^DD(357.4,.03,1,1,0)
	;;=357.4^D
	;;^DD(357.4,.03,1,1,1)
	;;=S ^IBE(357.4,"D",$E(X,1,30),DA)=""
	;;^DD(357.4,.03,1,1,2)
	;;=K ^IBE(357.4,"D",$E(X,1,30),DA)
	;;^DD(357.4,.03,1,1,"%D",0)
	;;=^^1^1^2921218^
	;;^DD(357.4,.03,1,1,"%D",1,0)
	;;=Used to find all the groups belonging to a selection list.
	;;^DD(357.4,.03,1,1,"DT")
	;;=2921218
	;;^DD(357.4,.03,1,2,0)
	;;=357.4^APO1^MUMPS
	;;^DD(357.4,.03,1,2,1)
	;;=I $P(^IBE(357.4,DA,0),U,2)]"" S ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)=""

IBINI07W
IBINI07W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.4,.03,1,2,2)
	;;=I $P(^IBE(357.4,DA,0),U,2)]"" K ^IBE(357.4,"APO",X,$P(^(0),U,2),DA)
	;;^DD(357.4,.03,1,2,"%D",0)
	;;=^^5^5^2940224^
	;;^DD(357.4,.03,1,2,"%D",1,0)
	;;= 
	;;^DD(357.4,.03,1,2,"%D",2,0)
	;;=Allows all groups in a selection list to be found in the order that they
	;;^DD(357.4,.03,1,2,"%D",3,0)
	;;=should appear. The subscripts are ^IBE(357.4,"APO",<selection list
	;;^DD(357.4,.03,1,2,"%D",4,0)
	;;=ien>,<print order for group>,<group ien>). If this field is re-indexed
	;;^DD(357.4,.03,1,2,"%D",5,0)
	;;=then the APO index on the .02 field need not be re-indexed.
	;;^DD(357.4,.03,1,2,"DT")
	;;=2921222
	;;^DD(357.4,.03,3)
	;;=This identifies the selection list that contains this group.
	;;^DD(357.4,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.4,.03,21,1,0)
	;;= 
	;;^DD(357.4,.03,21,2,0)
	;;=The Selection List this group belongs to.
	;;^DD(357.4,.03,"DT")
	;;=2921222

IBINI07X
IBINI07X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.5,0,"GL")
	;;=^IBE(357.5,
	;;^DIC("B","DATA FIELD",357.5)
	;;=
	;;^DIC(357.5,"%D",0)
	;;=^^6^6^2940217^
	;;^DIC(357.5,"%D",1,0)
	;;= 
	;;^DIC(357.5,"%D",2,0)
	;;=A data field can be composed of a label, determined at the time the form
	;;^DIC(357.5,"%D",3,0)
	;;=description is created, and data, coming from the DHCP database and
	;;^DIC(357.5,"%D",4,0)
	;;=determined at the time the form prints. The label and data are printed to
	;;^DIC(357.5,"%D",5,0)
	;;=the encounter form. A data field can be composed of subfields, each
	;;^DIC(357.5,"%D",6,0)
	;;=subfield containing possibly its own label and data.
	;;^DD(357.5,0)
	;;=FIELD^^2^13
	;;^DD(357.5,0,"DIK")
	;;=IBXF5
	;;^DD(357.5,0,"DT")
	;;=2930730
	;;^DD(357.5,0,"ID",.02)
	;;=W ""
	;;^DD(357.5,0,"ID",.03)
	;;=W ""
	;;^DD(357.5,0,"IX","B",357.5,.01)
	;;=
	;;^DD(357.5,0,"IX","C",357.5,.02)
	;;=
	;;^DD(357.5,0,"NM","DATA FIELD")
	;;=
	;;^DD(357.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.5,.01,1,0)
	;;=^.1
	;;^DD(357.5,.01,1,1,0)
	;;=357.5^B
	;;^DD(357.5,.01,1,1,1)
	;;=S ^IBE(357.5,"B",$E(X,1,30),DA)=""
	;;^DD(357.5,.01,1,1,2)
	;;=K ^IBE(357.5,"B",$E(X,1,30),DA)
	;;^DD(357.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(357.5,.01,21,1,0)
	;;= 
	;;^DD(357.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(357.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(357.5,.01,"DT")
	;;=2930419
	;;^DD(357.5,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.5,.02,1,0)
	;;=^.1
	;;^DD(357.5,.02,1,1,0)
	;;=357.5^C
	;;^DD(357.5,.02,1,1,1)
	;;=S ^IBE(357.5,"C",$E(X,1,30),DA)=""
	;;^DD(357.5,.02,1,1,2)
	;;=K ^IBE(357.5,"C",$E(X,1,30),DA)
	;;^DD(357.5,.02,1,1,"DT")
	;;=2921118
	;;^DD(357.5,.02,3)
	;;=What block should this data field appear in?
	;;^DD(357.5,.02,21,0)
	;;=^^2^2^2930310^
	;;^DD(357.5,.02,21,1,0)
	;;= 
	;;^DD(357.5,.02,21,2,0)
	;;=The particular block the data field should appear in.
	;;^DD(357.5,.02,"DT")
	;;=2921118
	;;^DD(357.5,.03,0)
	;;=TYPE OF DATA^*P357.6'^IBE(357.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.5,.03,3)
	;;=What data should be displayed in this field?
	;;^DD(357.5,.03,4)
	;;=
	;;^DD(357.5,.03,12)
	;;=Allows only available output routines
	;;^DD(357.5,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	;;^DD(357.5,.03,21,0)
	;;=^^5^5^2930409^^
	;;^DD(357.5,.03,21,1,0)
	;;= 
	;;^DD(357.5,.03,21,2,0)
	;;=The particular interface that should be invoked to obtain the data for
	;;^DD(357.5,.03,21,3,0)
	;;=display. Some of the interfaces don't actually return data, but are
	;;^DD(357.5,.03,21,4,0)
	;;=instead 'dummy' interfaces for the purpose of printing things like blank
	;;^DD(357.5,.03,21,5,0)
	;;=lines.
	;;^DD(357.5,.03,"DT")
	;;=2930309
	;;^DD(357.5,.04,0)
	;;=LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
	;;^DD(357.5,.04,.1)
	;;=IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
	;;^DD(357.5,.04,3)
	;;=
	;;^DD(357.5,.04,4)
	;;=W "Enter YES if this is the last item that should print, else enter NO."
	;;^DD(357.5,.04,21,0)
	;;=^^4^4^2930408^^^^
	;;^DD(357.5,.04,21,1,0)
	;;= 
	;;^DD(357.5,.04,21,2,0)
	;;=This field is used to indicate which item on a list is the last to be
	;;^DD(357.5,.04,21,3,0)
	;;=printed to the form. The remaining items can be printed to a separate
	;;^DD(357.5,.04,21,4,0)
	;;=piece of paper.
	;;^DD(357.5,.04,"DT")
	;;=2930413
	;;^DD(357.5,.05,0)
	;;=NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X

IBINI07Y
IBINI07Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.5,.05,.1)
	;;=WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
	;;^DD(357.5,.05,3)
	;;=The data is a list of items. Which item on the list should be displayed?
	;;^DD(357.5,.05,21,0)
	;;=^^1^1^2930607^
	;;^DD(357.5,.05,21,1,0)
	;;=For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.
	;;^DD(357.5,.05,"DT")
	;;=2930413
	;;^DD(357.5,.06,0)
	;;=TEXT LABEL^F^^0;6^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.5,.06,.1)
	;;=WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
	;;^DD(357.5,.06,3)
	;;=You can optionally begin the text with a label of your choice.
	;;^DD(357.5,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.06,21,1,0)
	;;= 
	;;^DD(357.5,.06,21,2,0)
	;;=The label that should precede the text.
	;;^DD(357.5,.06,"DT")
	;;=2930825
	;;^DD(357.5,.07,0)
	;;=TEXT LABEL APPEARANCE^FX^^0;7^K:$L(X)>2!($L(X)<1)!("BU"'[$E(X,1))!("UB"'[$E(X,2)) X
	;;^DD(357.5,.07,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U}
	;;^DD(357.5,.07,3)
	;;=B=bold,U=underline. You can enter BU to make the label bold and underlined.
	;;^DD(357.5,.07,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.5,.07,21,1,0)
	;;= 
	;;^DD(357.5,.07,21,2,0)
	;;=The label can have characteristics, such as being underlined or
	;;^DD(357.5,.07,21,3,0)
	;;=emboldened.
	;;^DD(357.5,.07,"DT")
	;;=2930414
	;;^DD(357.5,.1,0)
	;;=TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.1,2)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.5,.1,2.1)
	;;=S Y=+Y+1
	;;^DD(357.5,.1,3)
	;;=What block column should the text start at?
	;;^DD(357.5,.1,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.5,.1,21,1,0)
	;;=This field determines what column the text should begin in.
	;;^DD(357.5,.1,21,2,0)
	;;=Applies only if the Package Interface returns a word-processing field.
	;;^DD(357.5,.1,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.5,.1,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.5,.1,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.5,.1,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.5,.1,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.5,.1,"DT")
	;;=2930617
	;;^DD(357.5,.11,0)
	;;=TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.11,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.5,.11,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.5,.11,3)
	;;=What block row should the text begin in?
	;;^DD(357.5,.11,21,0)
	;;=^^4^4^2930715^^
	;;^DD(357.5,.11,21,1,0)
	;;= 
	;;^DD(357.5,.11,21,2,0)
	;;=Determines which line on the form, relative to the block, the text area
	;;^DD(357.5,.11,21,3,0)
	;;=should begin at. Only applies if the package interface returns a
	;;^DD(357.5,.11,21,4,0)
	;;=word-processing field.
	;;^DD(357.5,.11,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.5,.11,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.5,.11,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.5,.11,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.5,.11,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.5,.11,"DT")
	;;=2930617
	;;^DD(357.5,.12,0)
	;;=NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.5,.12,.1)
	;;=HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?

IBINI07Z
IBINI07Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.5,.12,3)
	;;=How many lines of the form should be allocated for the text?
	;;^DD(357.5,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.12,21,1,0)
	;;= 
	;;^DD(357.5,.12,21,2,0)
	;;=The number of lines on the form that should be allocated for the text.
	;;^DD(357.5,.12,"DT")
	;;=2930414
	;;^DD(357.5,.13,0)
	;;=SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q
	;;^DD(357.5,.13,.1)
	;;=HOW SHOULD THE TEXT LINES BE SPACED?
	;;^DD(357.5,.13,3)
	;;=How do you want the text lines to be spaced?
	;;^DD(357.5,.13,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.13,21,1,0)
	;;= 
	;;^DD(357.5,.13,21,2,0)
	;;=Determines the spacing between lines of text.
	;;^DD(357.5,.13,"DT")
	;;=2930414
	;;^DD(357.5,.14,0)
	;;=WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.5,.14,.1)
	;;=HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
	;;^DD(357.5,.14,3)
	;;=How many columns wide do you want the text?
	;;^DD(357.5,.14,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.5,.14,21,1,0)
	;;= 
	;;^DD(357.5,.14,21,2,0)
	;;=Determines how many characters across should be allocated to the text.
	;;^DD(357.5,.14,"DT")
	;;=2930414
	;;^DD(357.5,2,0)
	;;=SUBFIELD^357.52I^^2;0
	;;^DD(357.5,2,21,0)
	;;=^^2^2^2940217^^^^
	;;^DD(357.5,2,21,1,0)
	;;=A data field can be composed of multiple subfields. Each subfield can have
	;;^DD(357.5,2,21,2,0)
	;;=a label and data.
	;;^DD(357.5,2,"DT")
	;;=2930323
	;;^DD(357.52,0)
	;;=SUBFIELD SUB-FIELD^^.09^8
	;;^DD(357.52,0,"DIK")
	;;=IBXF5
	;;^DD(357.52,0,"DT")
	;;=2930730
	;;^DD(357.52,0,"IX","B",357.52,.01)
	;;=
	;;^DD(357.52,0,"NM","SUBFIELD")
	;;=
	;;^DD(357.52,0,"UP")
	;;=357.5
	;;^DD(357.52,.01,0)
	;;=SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(357.52,.01,1,0)
	;;=^.1
	;;^DD(357.52,.01,1,1,0)
	;;=357.52^B
	;;^DD(357.52,.01,1,1,1)
	;;=S ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(357.52,.01,1,1,2)
	;;=K ^IBE(357.5,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(357.52,.01,3)
	;;=What should the subfield be named? The label will print unless it is made invisible.
	;;^DD(357.52,.01,4)
	;;=
	;;^DD(357.52,.01,21,0)
	;;=^^3^3^2931020^^^^
	;;^DD(357.52,.01,21,1,0)
	;;= 
	;;^DD(357.52,.01,21,2,0)
	;;=The name of the subfield. The label prints to the form unless it is made
	;;^DD(357.52,.01,21,3,0)
	;;=invisible.
	;;^DD(357.52,.01,"DT")
	;;=2930730
	;;^DD(357.52,.03,0)
	;;=SUBCOLUMN LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBI"'[$E(X,1))!("UBI"'[$E(X,2))!("UBI"'[$E(X,3)) X
	;;^DD(357.52,.03,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,I}
	;;^DD(357.52,.03,3)
	;;=B=bold,U=underline,I=invisible You can enter any combination of {B,U,I}. The label will not print if it is made invisible.
	;;^DD(357.52,.03,4)
	;;=
	;;^DD(357.52,.03,21,0)
	;;=^^3^3^2940217^
	;;^DD(357.52,.03,21,1,0)
	;;= 
	;;^DD(357.52,.03,21,2,0)
	;;=The label can be made bold, underlined, or invisible. This field
	;;^DD(357.52,.03,21,3,0)
	;;=determines which of those characteristics apply.
	;;^DD(357.52,.03,"DT")
	;;=2930616
	;;^DD(357.52,.04,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.04,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.04,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.04,3)
	;;=What block column should the label start in?
	;;^DD(357.52,.04,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.52,.04,21,1,0)
	;;= 
	;;^DD(357.52,.04,21,2,0)
	;;=The column, relative to the block, that the label should start at.
	;;^DD(357.52,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation

IBINI080
IBINI080	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.52,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.04,"DT")
	;;=2930617
	;;^DD(357.52,.05,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.05,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.05,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.05,3)
	;;=What block row should the label start in?
	;;^DD(357.52,.05,21,0)
	;;=^^2^2^2930608^
	;;^DD(357.52,.05,21,1,0)
	;;= 
	;;^DD(357.52,.05,21,2,0)
	;;=The row the label should be printed on.
	;;^DD(357.52,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.05,"DT")
	;;=2930617
	;;^DD(357.52,.06,0)
	;;=STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.06,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.06,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.06,3)
	;;=What block row should the data begin in?
	;;^DD(357.52,.06,21,0)
	;;=^^2^2^2930715^^
	;;^DD(357.52,.06,21,1,0)
	;;= 
	;;^DD(357.52,.06,21,2,0)
	;;=The row, relative to the block, that the data should print on.
	;;^DD(357.52,.06,23,0)
	;;=^^4^4^2930715^^
	;;^DD(357.52,.06,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.06,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.06,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.06,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.06,"DT")
	;;=2930617
	;;^DD(357.52,.07,0)
	;;=STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.52,.07,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(357.52,.07,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.52,.07,3)
	;;=What block column should the data begin in?
	;;^DD(357.52,.07,21,0)
	;;=^^2^2^2930608^
	;;^DD(357.52,.07,21,1,0)
	;;= 
	;;^DD(357.52,.07,21,2,0)
	;;=The column, relative to the block, that the data should print on.
	;;^DD(357.52,.07,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.52,.07,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.52,.07,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.52,.07,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.52,.07,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.52,.07,"DT")
	;;=2930617
	;;^DD(357.52,.08,0)
	;;=LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.52,.08,3)
	;;=How much space on the line should be allocated for the information to be displayed?
	;;^DD(357.52,.08,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.52,.08,21,1,0)
	;;= 
	;;^DD(357.52,.08,21,2,0)
	;;=The amount of space, in terms of characters, that should be allocated
	;;^DD(357.52,.08,21,3,0)
	;;=to the data.
	;;^DD(357.52,.08,"DT")
	;;=2930322
	;;^DD(357.52,.09,0)
	;;=DATA^NJ1,0X^^0;9^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(357.6,+$P($G(^IBE(357.5,DA(1),0)),U,3),2)),U,(2*X)-1)="") X

IBINI081
IBINI081	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.52,.09,.1)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(357.52,.09,3)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(357.52,.09,4)
	;;=D HELP1^IBDFU5
	;;^DD(357.52,.09,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.52,.09,21,1,0)
	;;= 
	;;^DD(357.52,.09,21,2,0)
	;;=The package interface returns a record that may be composed of multiple
	;;^DD(357.52,.09,21,3,0)
	;;=fields. This identifies which of those fields should appear in this
	;;^DD(357.52,.09,21,4,0)
	;;=subfield.
	;;^DD(357.52,.09,"DT")
	;;=2930526

IBINI082
IBINI082	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.6,0,"GL")
	;;=^IBE(357.6,
	;;^DIC("B","PACKAGE INTERFACE",357.6)
	;;=
	;;^DIC(357.6,"%D",0)
	;;=^^22^22^2940121^
	;;^DIC(357.6,"%D",1,0)
	;;=This file contains a description of all of the interfaces with other packages.
	;;^DIC(357.6,"%D",2,0)
	;;=The form will invoke the proper interface routines by doing a lookup on
	;;^DIC(357.6,"%D",3,0)
	;;=this file and then calling the routine by indirection. The
	;;^DIC(357.6,"%D",4,0)
	;;=Data will be exchanged between the encounter form utilities and other
	;;^DIC(357.6,"%D",5,0)
	;;=packages by putting the data in a predefined location. The first part of
	;;^DIC(357.6,"%D",6,0)
	;;=the subscript is always ^TMP("IB",$J,"INTERFACES". For output routines,
	;;^DIC(357.6,"%D",7,0)
	;;=but not selection routines, the fourth subscript is be the patient DFN.
	;;^DIC(357.6,"%D",8,0)
	;;=The next subscript is the name of the Package Interface. For single valued
	;;^DIC(357.6,"%D",9,0)
	;;=data and record valued data there is no additional subscript. For
	;;^DIC(357.6,"%D",10,0)
	;;=interfaces returning a list there is one additional subscript level, the
	;;^DIC(357.6,"%D",11,0)
	;;=number of the item on the list. For word processing type data the data
	;;^DIC(357.6,"%D",12,0)
	;;=will be in FM word-processing format, i.e., the final subscripts will be
	;;^DIC(357.6,"%D",13,0)
	;;=...1,0),...2,0),...3,0), etc.
	;;^DIC(357.6,"%D",14,0)
	;;= 
	;;^DIC(357.6,"%D",15,0)
	;;=Note that multiple entries in this file can have the same entry points
	;;^DIC(357.6,"%D",16,0)
	;;=into routines. This is for efficiency purposes. For example, patient name,
	;;^DIC(357.6,"%D",17,0)
	;;=DOB and sex are all located on the same node of the Patient file. Each of
	;;^DIC(357.6,"%D",18,0)
	;;=these items of data can have its own entry in the Package Interface file,
	;;^DIC(357.6,"%D",19,0)
	;;=but by using the same entry point there is a savings because all of the
	;;^DIC(357.6,"%D",20,0)
	;;=data on that node can be obtained at once. The routine that invokes the
	;;^DIC(357.6,"%D",21,0)
	;;=entry points keeps track of those already invoked so that they are not
	;;^DIC(357.6,"%D",22,0)
	;;=repeated.
	;;^DD(357.6,0)
	;;=FIELD^^8.07^41
	;;^DD(357.6,0,"ACT")
	;;=D ASK^IBDFU9
	;;^DD(357.6,0,"DDA")
	;;=N
	;;^DD(357.6,0,"DT")
	;;=2931014
	;;^DD(357.6,0,"ID","WRITE")
	;;=W ?45,"Package=",$P($G(^(0)),"^",4)
	;;^DD(357.6,0,"IX","B",357.6,.01)
	;;=
	;;^DD(357.6,0,"IX","C",357.6,.04)
	;;=
	;;^DD(357.6,0,"IX","D",357.6,3)
	;;=
	;;^DD(357.6,0,"IX","E",357.6,.01)
	;;=
	;;^DD(357.6,0,"NM","PACKAGE INTERFACE")
	;;=
	;;^DD(357.6,0,"PT",357.2,.11)
	;;=
	;;^DD(357.6,0,"PT",357.5,.03)
	;;=
	;;^DD(357.6,0,"PT",409.9501,.01)
	;;=
	;;^DD(357.6,0,"PT",409.9502,.01)
	;;=
	;;^DD(357.6,0,"PT",409.961,.01)
	;;=
	;;^DD(357.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.6,.01,1,0)
	;;=^.1
	;;^DD(357.6,.01,1,1,0)
	;;=357.6^B
	;;^DD(357.6,.01,1,1,1)
	;;=S ^IBE(357.6,"B",$E(X,1,30),DA)=""
	;;^DD(357.6,.01,1,1,2)
	;;=K ^IBE(357.6,"B",$E(X,1,30),DA)
	;;^DD(357.6,.01,1,2,0)
	;;=357.6^E^MUMPS
	;;^DD(357.6,.01,1,2,1)
	;;=S ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(357.6,.01,1,2,2)
	;;=K ^IBE(357.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(357.6,.01,1,2,"%D",0)
	;;=^^4^4^2940224^
	;;^DD(357.6,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(357.6,.01,1,2,"%D",2,0)
	;;=For package interfaces that are output routines the name has the custodial
	;;^DD(357.6,.01,1,2,"%D",3,0)
	;;=package's name space as a prefix. This cross-reference removes that
	;;^DD(357.6,.01,1,2,"%D",4,0)
	;;=prefix. It is used to improve the display of output routines for the user.

IBINI083
IBINI083	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(357.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the namespace of the package that is responsible for the data.
	;;^DD(357.6,.01,21,0)
	;;=^^3^3^2940110^^^
	;;^DD(357.6,.01,21,1,0)
	;;= 
	;;^DD(357.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(357.6,.01,21,3,0)
	;;=should be preceded with the namespace of the package.
	;;^DD(357.6,.01,"DT")
	;;=2930409
	;;^DD(357.6,.02,0)
	;;=ENTRY POINT^RF^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(357.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(357.6,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.6,.02,21,1,0)
	;;= 
	;;^DD(357.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.
	;;^DD(357.6,.02,"DT")
	;;=2921125
	;;^DD(357.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(357.6,.03,3)
	;;=What routine does this package interface use?
	;;^DD(357.6,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.6,.03,21,1,0)
	;;= 
	;;^DD(357.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(357.6,.03,"DT")
	;;=2921125
	;;^DD(357.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
	;;^DD(357.6,.04,1,0)
	;;=^.1
	;;^DD(357.6,.04,1,1,0)
	;;=357.6^C
	;;^DD(357.6,.04,1,1,1)
	;;=S ^IBE(357.6,"C",$E(X,1,30),DA)=""
	;;^DD(357.6,.04,1,1,2)
	;;=K ^IBE(357.6,"C",$E(X,1,30),DA)
	;;^DD(357.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(357.6,.04,3)
	;;=For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
	;;^DD(357.6,.04,21,0)
	;;=^^2^2^2940217^
	;;^DD(357.6,.04,21,1,0)
	;;=This is a free text pointer to the package file. It serves only to
	;;^DD(357.6,.04,21,2,0)
	;;=document the custodial package of the data.
	;;^DD(357.6,.04,"DT")
	;;=2930726
	;;^DD(357.6,.05,0)
	;;=VARIABLE DATA?^S^0:NO;1:YES;^0;5^Q
	;;^DD(357.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(357.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(357.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(357.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(357.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(357.6,.05,21,3,0)
	;;=patient.
	;;^DD(357.6,.05,"DT")
	;;=2931124
	;;^DD(357.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT ROUTINE;2:OUTPUT ROUTINE;3:SELECTION ROUTINE;4:PRINT REPORT;^0;6^Q
	;;^DD(357.6,.06,3)
	;;=Is this package interface for displaying data to the form, for inputing data, or for creating a list that will appear on the form?
	;;^DD(357.6,.06,21,0)
	;;=^^8^8^2940217^
	;;^DD(357.6,.06,21,1,0)
	;;= 
	;;^DD(357.6,.06,21,2,0)
	;;=Enter 1 for INPUT ROUTINE if the routine accepts data input from the user
	;;^DD(357.6,.06,21,3,0)
	;;=and transmits the data to the appropriate package. Enter 2 for OUTPUT
	;;^DD(357.6,.06,21,4,0)
	;;=ROUTINE if the routine gets data from another package. Enter 3 for
	;;^DD(357.6,.06,21,5,0)
	;;=SELECTION ROUTINE if the routine allows the user to select items from a
	;;^DD(357.6,.06,21,6,0)
	;;=table belonging to another package. If the ACTION TYPE is SELECTION ROUTINE
	;;^DD(357.6,.06,21,7,0)
	;;=then the data type must be record and the first piece must be the ID passed
	;;^DD(357.6,.06,21,8,0)
	;;=by the other package.
	;;^DD(357.6,.06,"DT")
	;;=2930518

IBINI084
IBINI084	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(357.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(357.6,.07,3)
	;;=What format will the data be in?
	;;^DD(357.6,.07,21,0)
	;;=^^8^8^2930527^
	;;^DD(357.6,.07,21,1,0)
	;;=This should only be defined for interfaces that transfer data. It is the
	;;^DD(357.6,.07,21,2,0)
	;;=type of format the data should be in.
	;;^DD(357.6,.07,21,3,0)
	;;= 
	;;^DD(357.6,.07,21,4,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(357.6,.07,21,5,0)
	;;=concatenated together with "^" separating the pieces. A list is an
	;;^DD(357.6,.07,21,6,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(357.6,.07,21,7,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(357.6,.07,21,8,0)
	;;=If the ACTION TYPE is SELECTION ROUTINE then the data type must be record.
	;;^DD(357.6,.07,"DT")
	;;=2930726
	;;^DD(357.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(357.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?
	;;^DD(357.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(357.6,.08,21,1,0)
	;;= 
	;;^DD(357.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(357.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(357.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(357.6,.08,"DT")
	;;=2930507
	;;^DD(357.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(357.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(357.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,.09,21,1,0)
	;;= 
	;;^DD(357.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(357.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(357.6,.09,"DT")
	;;=2921213
	;;^DD(357.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
	;;^DD(357.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(357.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(357.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(357.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(357.6,.1,21,1,0)
	;;= 
	;;^DD(357.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(357.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(357.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(357.6,.1,21,5,0)
	;;=Summary to print. The process of printing Health Summaries dos not use the
	;;^DD(357.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(357.6,.1,21,7,0)
	;;=the same way.
	;;^DD(357.6,.1,"DT")
	;;=2930616
	;;^DD(357.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(357.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(357.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(357.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(357.6,.11,21,0)
	;;=^^4^4^2940224^
	;;^DD(357.6,.11,21,1,0)
	;;= 
	;;^DD(357.6,.11,21,2,0)
	;;=This identifies the Health Summary that should be printed when this
	;;^DD(357.6,.11,21,3,0)
	;;=Package Interface is invoked. It should be null unless the HEALTH SUMMARY?

IBINI085
IBINI085	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,.11,21,4,0)
	;;=field #.1 is coded YES.
	;;^DD(357.6,.11,"DT")
	;;=2930617
	;;^DD(357.6,.12,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(357.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOL KIT?
	;;^DD(357.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the tool kit, enter NO otherwise.
	;;^DD(357.6,.12,21,0)
	;;=^^3^3^2940224^
	;;^DD(357.6,.12,21,1,0)
	;;= 
	;;^DD(357.6,.12,21,2,0)
	;;=Package Interfaces that are developed for national use will be documented
	;;^DD(357.6,.12,21,3,0)
	;;=as being part of the tool kit.
	;;^DD(357.6,.12,"DT")
	;;=2930811
	;;^DD(357.6,1,0)
	;;=DESCRIPTION^357.61^^1;0
	;;^DD(357.6,1,21,0)
	;;=^^1^1^2930210^^^
	;;^DD(357.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(357.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,2.01,21,1,0)
	;;= 
	;;^DD(357.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(357.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(357.6,2.01,"DT")
	;;=2930726
	;;^DD(357.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(357.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,2.02,21,1,0)
	;;= 
	;;^DD(357.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(357.6,2.02,21,3,0)
	;;=interface.
	;;^DD(357.6,2.02,"DT")
	;;=2930726
	;;^DD(357.6,2.03,0)
	;;=PIECE 2 DESCRIPTIVE NAME^F^^2;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.03,.1)
	;;=WHAT IS THE SECOND PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.03,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.03,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,2.03,21,1,0)
	;;= 
	;;^DD(357.6,2.03,21,2,0)
	;;=A descriptive name of the second field of the record returned by the
	;;^DD(357.6,2.03,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.03,"DT")
	;;=2930726
	;;^DD(357.6,2.04,0)
	;;=WHAT IS ITS MAXIMUM LENGTH?^NJ3,0^^2;4^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.04,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.04,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,2.04,21,1,0)
	;;= 
	;;^DD(357.6,2.04,21,2,0)
	;;=The maximum length of the second field of the record returned by the
	;;^DD(357.6,2.04,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.04,"DT")
	;;=2930726
	;;^DD(357.6,2.05,0)
	;;=PIECE 3 DESCRIPTIVE NAME^F^^2;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.05,.1)
	;;=WHAT IS THE THIRD PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.05,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,2.05,21,1,0)
	;;= 
	;;^DD(357.6,2.05,21,2,0)
	;;=A descriptive name of the third field of the record returned by the
	;;^DD(357.6,2.05,21,3,0)
	;;=interface routine.
	;;^DD(357.6,2.05,"DT")
	;;=2930726
	;;^DD(357.6,2.06,0)
	;;=PIECE 3 MAXIMUM LENGTH^NJ3,0^^2;6^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.06,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.06,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.06,21,1,0)
	;;= 
	;;^DD(357.6,2.06,21,2,0)
	;;=The maximum length of the 3rd field returned by the interface routine.

IBINI086
IBINI086	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,2.06,"DT")
	;;=2930726
	;;^DD(357.6,2.07,0)
	;;=PIECE 4 DESCRIPTIVE NAME^F^^2;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.07,.1)
	;;=WHAT IS THE FOURTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.07,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.07,21,1,0)
	;;= 
	;;^DD(357.6,2.07,21,2,0)
	;;=A descriptive name of the 4th field returned by the interface routine.
	;;^DD(357.6,2.07,"DT")
	;;=2930726
	;;^DD(357.6,2.08,0)
	;;=PIECE 4 MAXIMUM LENGTH^NJ3,0^^2;8^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.08,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.08,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(357.6,2.08,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.08,21,1,0)
	;;= 
	;;^DD(357.6,2.08,21,2,0)
	;;=The maximum length of the 4th field returned by the interface routine.
	;;^DD(357.6,2.08,"DT")
	;;=2930726
	;;^DD(357.6,2.09,0)
	;;=PIECE 5 DESCRIPTIVE NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.09,.1)
	;;=WHAT IS THE FIFTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.09,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.09,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.09,21,1,0)
	;;= 
	;;^DD(357.6,2.09,21,2,0)
	;;=A descriptive name of the 5th field returned by the interface routine.
	;;^DD(357.6,2.09,"DT")
	;;=2930726
	;;^DD(357.6,2.1,0)
	;;=PIECE 5 MAXIMUM LENGTH^NJ3,0^^2;10^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.1,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.1,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.1,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.1,21,1,0)
	;;= 
	;;^DD(357.6,2.1,21,2,0)
	;;=The maximum length of the 5th field returned by the interface routine.
	;;^DD(357.6,2.1,"DT")
	;;=2930726
	;;^DD(357.6,2.11,0)
	;;=PIECE 6 DESCRIPTIVE NAME^F^^2;11^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.11,.1)
	;;=WHAT IS THE SIXTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.11,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.11,21,0)
	;;=^^2^2^2940217^
	;;^DD(357.6,2.11,21,1,0)
	;;= 
	;;^DD(357.6,2.11,21,2,0)
	;;=A descriptive name for the 6th field returned by the interface routine.
	;;^DD(357.6,2.11,"DT")
	;;=2930726
	;;^DD(357.6,2.12,0)
	;;=PIECE 6 MAXIMUM LENGTH^NJ3,0^^2;12^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.12,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.12,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.12,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.12,21,1,0)
	;;= 
	;;^DD(357.6,2.12,21,2,0)
	;;=The maximum length of the 6th field returned by the interface routine.
	;;^DD(357.6,2.12,"DT")
	;;=2930726
	;;^DD(357.6,2.13,0)
	;;=PIECE 7 DESCRIPTIVE NAME^F^^2;13^K:$L(X)>30!($L(X)<3) X
	;;^DD(357.6,2.13,.1)
	;;=WHAT IS THE SEVENTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(357.6,2.13,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(357.6,2.13,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,2.13,21,1,0)
	;;= 
	;;^DD(357.6,2.13,21,2,0)
	;;=A descriptive name for the 7th field returned by the package interface
	;;^DD(357.6,2.13,21,3,0)
	;;=routine.
	;;^DD(357.6,2.13,"DT")
	;;=2930726
	;;^DD(357.6,2.14,0)
	;;=PIECE 7 MAXIMUM LENGTH^NJ3,0^^2;14^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.6,2.14,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(357.6,2.14,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(357.6,2.14,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.6,2.14,21,1,0)
	;;= 
	;;^DD(357.6,2.14,21,2,0)
	;;=The maximum length of the 7th field returned by the interface routine.

IBINI087
IBINI087	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,2.14,"DT")
	;;=2930726
	;;^DD(357.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(357.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(357.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if it is a pointer.
	;;^DD(357.6,2.17,21,0)
	;;=^^3^3^2940217^
	;;^DD(357.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, then the value can
	;;^DD(357.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.  The first piece must contain the
	;;^DD(357.6,2.17,21,3,0)
	;;=unique id of the selection.
	;;^DD(357.6,2.17,"DT")
	;;=2930810
	;;^DD(357.6,2.18,0)
	;;=ARE SELECTIONS EXPORTABLE?^S^0:NO;1:YES;^2;18^Q
	;;^DD(357.6,2.18,3)
	;;=Enter NO if the ID returned by the PACKAGE INTERFACE is not constant between sites, for example, if it is a pointer. Otherwise answer YES.
	;;^DD(357.6,2.18,21,0)
	;;=^^6^6^2930823^^^
	;;^DD(357.6,2.18,21,1,0)
	;;=Applies only to selection routines. Determines whether selections appearing
	;;^DD(357.6,2.18,21,2,0)
	;;=on selection lists that are populated via the package interface will
	;;^DD(357.6,2.18,21,3,0)
	;;=be exported along with the form that they appear on. The import/export
	;;^DD(357.6,2.18,21,4,0)
	;;=utility will not resolve pointers, so if the id returned by the package
	;;^DD(357.6,2.18,21,5,0)
	;;=interface (piece 1) is a pointer that differs between sites this field
	;;^DD(357.6,2.18,21,6,0)
	;;=should contain NO.
	;;^DD(357.6,2.18,"DT")
	;;=2930811
	;;^DD(357.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(357.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(357.6,3,1,0)
	;;=^.1
	;;^DD(357.6,3,1,1,0)
	;;=357.6^D^KWIC
	;;^DD(357.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(357.6,"D",I,DA)=""
	;;^DD(357.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(357.6,"D",I,DA)
	;;^DD(357.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(357.6,3,1,1,"%D",1,0)
	;;= 
	;;^DD(357.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(357.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(357.6,3,1,1,"DT")
	;;=2930309
	;;^DD(357.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(357.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(357.6,3,21,0)
	;;=^^4^4^2940217^
	;;^DD(357.6,3,21,1,0)
	;;= 
	;;^DD(357.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to
	;;^DD(357.6,3,21,3,0)
	;;=assist the user in locating the package interface he needs to display a
	;;^DD(357.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(357.6,3,"DT")
	;;=2930726
	;;^DD(357.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(357.6,4.01,9)
	;;=@
	;;^DD(357.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.6,4.01,21,1,0)
	;;= 
	;;^DD(357.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(357.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(357.6,4.01,"DT")
	;;=2930521
	;;^DD(357.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(357.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(357.6,5.01,9)
	;;=@

IBINI088
IBINI088	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(357.6,5.01,21,1,0)
	;;= 
	;;^DD(357.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(357.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(357.6,5.01,"DT")
	;;=2930518
	;;^DD(357.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^357.66^^6;0
	;;^DD(357.6,6,21,0)
	;;=^^11^11^2930608^^
	;;^DD(357.6,6,21,1,0)
	;;= 
	;;^DD(357.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(357.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(357.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(357.6,6,21,5,0)
	;;=VARIABLES should not also be PROTECTED VARIABLES. If an interface routine
	;;^DD(357.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(357.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(357.6,6,21,8,0)
	;;=it:
	;;^DD(357.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(357.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(357.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(357.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^357.67^^7;0
	;;^DD(357.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(357.6,7,21,1,0)
	;;= 
	;;^DD(357.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(357.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(357.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(357.6,8.01,0)
	;;=PIECE 1 NODE^F^^8;1^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.01,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.01,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.01,21,1,0)
	;;=For record type data, the node of the field can be optionally specified.
	;;^DD(357.6,8.01,"DT")
	;;=2931014
	;;^DD(357.6,8.02,0)
	;;=PIECE 2 NODE^F^^8;2^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.02,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.02,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.02,21,1,0)
	;;=For records you can optionally specify the node to store the field.
	;;^DD(357.6,8.02,"DT")
	;;=2931014
	;;^DD(357.6,8.03,0)
	;;=PIECE 3 NODE^F^^8;3^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.03,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.03,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.03,21,1,0)
	;;=For record type data you can optionally specify the node to store the data.
	;;^DD(357.6,8.03,"DT")
	;;=2931014
	;;^DD(357.6,8.04,0)
	;;=PIECE 4 NODE^F^^8;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.04,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.04,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.04,21,1,0)
	;;=For record type data you can optionally specify the node to store the field.
	;;^DD(357.6,8.04,"DT")
	;;=2931014
	;;^DD(357.6,8.05,0)
	;;=PIECE 5 NODE^F^^8;5^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.05,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.05,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.05,21,1,0)
	;;=For record type data you can optionally specify the node to store the field.
	;;^DD(357.6,8.05,"DT")
	;;=2931014
	;;^DD(357.6,8.06,0)
	;;=PIECE 6 NODE^F^^8;6^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.06,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.06,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.06,21,1,0)
	;;=For records you can optionally specify the node to store the field.

IBINI089
IBINI089	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.6,8.06,"DT")
	;;=2931014
	;;^DD(357.6,8.07,0)
	;;=PIECE 7 NODE^F^^8;7^K:$L(X)>10!($L(X)<1) X
	;;^DD(357.6,8.07,3)
	;;=You can optionally specify the subscript to store the data.
	;;^DD(357.6,8.07,21,0)
	;;=^^1^1^2931014^
	;;^DD(357.6,8.07,21,1,0)
	;;=For records you can optionally specify the node to store the field at.
	;;^DD(357.6,8.07,"DT")
	;;=2931014
	;;^DD(357.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1
	;;^DD(357.61,0,"DT")
	;;=2921119
	;;^DD(357.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(357.61,0,"UP")
	;;=357.6
	;;^DD(357.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(357.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(357.61,.01,"DT")
	;;=2930210
	;;^DD(357.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(357.66,0,"DT")
	;;=2930608
	;;^DD(357.66,0,"IX","B",357.66,.01)
	;;=
	;;^DD(357.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(357.66,0,"UP")
	;;=357.6
	;;^DD(357.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(357.66,.01,1,0)
	;;=^.1
	;;^DD(357.66,.01,1,1,0)
	;;=357.66^B
	;;^DD(357.66,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(357.66,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(357.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(357.66,.01,21,0)
	;;=^^3^3^2930608^
	;;^DD(357.66,.01,21,1,0)
	;;= 
	;;^DD(357.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(357.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(357.66,.01,"DT")
	;;=2930608
	;;^DD(357.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(357.67,0,"DT")
	;;=2930521
	;;^DD(357.67,0,"IX","B",357.67,.01)
	;;=
	;;^DD(357.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(357.67,0,"UP")
	;;=357.6
	;;^DD(357.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(357.67,.01,1,0)
	;;=^.1
	;;^DD(357.67,.01,1,1,0)
	;;=357.67^B
	;;^DD(357.67,.01,1,1,1)
	;;=S ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(357.67,.01,1,1,2)
	;;=K ^IBE(357.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(357.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(357.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(357.67,.01,21,1,0)
	;;= 
	;;^DD(357.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(357.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(357.67,.01,21,4,0)
	;;=defined.
	;;^DD(357.67,.01,"DT")
	;;=2930521

IBINI08A
IBINI08A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6)
	;;=^IBE(357.6,
	;;^UTILITY(U,$J,357.6,0)
	;;=PACKAGE INTERFACE^357.6I^55^46
	;;^UTILITY(U,$J,357.6,1,0)
	;;=DPT PATIENT'S NAME^VADPT^IBDFN^PATIENT FILE^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,1,1,0)
	;;=^^2^2^2930212^^^^
	;;^UTILITY(U,$J,357.6,1,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,1,1,2,0)
	;;=Patient's Name
	;;^UTILITY(U,$J,357.6,1,2)
	;;=Patient's Name^30
	;;^UTILITY(U,$J,357.6,1,3)
	;;=PATIENT NAME MAS
	;;^UTILITY(U,$J,357.6,1,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,1,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,2,0)
	;;=DPT PATIENT'S SEX^VADPT^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,2,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,357.6,2,1,1,0)
	;;=Patient's sex, either 'MALE' or 'FEMALE', or "M" or "F".
	;;^UTILITY(U,$J,357.6,2,2)
	;;=Patient's Sex^6^Patient's Sex (Code)^1
	;;^UTILITY(U,$J,357.6,2,3)
	;;=PATIENT SEX MAS
	;;^UTILITY(U,$J,357.6,2,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,2,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,3,0)
	;;=DPT PATIENT'S DOB/AGE^VADPT^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,3,1,0)
	;;=^^2^2^2930726^^
	;;^UTILITY(U,$J,357.6,3,1,1,0)
	;;=Patient's DOB in MMM DD, YYYY format
	;;^UTILITY(U,$J,357.6,3,1,2,0)
	;;=Patient's age in years.
	;;^UTILITY(U,$J,357.6,3,2)
	;;=Patient's DOB^12^Patient's Age^3
	;;^UTILITY(U,$J,357.6,3,3)
	;;=PATIENT DOB AGE MAS PIMS
	;;^UTILITY(U,$J,357.6,3,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,3,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,4,0)
	;;=GMRA PATIENT'S ALLERGIES^ALLERGY^IBDFN2^ALLERGY^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,4,1,0)
	;;=^^7^7^2931015^^
	;;^UTILITY(U,$J,357.6,4,1,1,0)
	;;=Used to disply a list of the patient's allergies, both true and adverse
	;;^UTILITY(U,$J,357.6,4,1,2,0)
	;;=reactions, verified and unverified. Data returned:
	;;^UTILITY(U,$J,357.6,4,1,3,0)
	;;=  allergy name
	;;^UTILITY(U,$J,357.6,4,1,4,0)
	;;=  type of allergen
	;;^UTILITY(U,$J,357.6,4,1,5,0)
	;;=  type (code only - F=food, D=drug,O=other)
	;;^UTILITY(U,$J,357.6,4,1,6,0)
	;;=  verified? YES/NO
	;;^UTILITY(U,$J,357.6,4,1,7,0)
	;;=  true allergy? YES/NO
	;;^UTILITY(U,$J,357.6,4,2)
	;;=ALLERGY NAME^30^TYPE OF ALLERGEN^5^TYPE (F=FOOD,D=DRUG,O=OTHER)^1^VERIFIED? (YES/NO)^3^TRUE ALLERGY? (YES/NO)^3
	;;^UTILITY(U,$J,357.6,4,3)
	;;=ALLERGIES ALLERGY PATIENT
	;;^UTILITY(U,$J,357.6,4,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,4,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,7,0)
	;;=DG SELECT CPT PROCEDURE CODES^CPT^IBDFN4^MAS^^3^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,7,1,0)
	;;=^^2^2^2930726^^^
	;;^UTILITY(U,$J,357.6,7,1,1,0)
	;;=Allows for the selection of CPT codes from the CPT file. The user can 
	;;^UTILITY(U,$J,357.6,7,1,2,0)
	;;=limit his selections by choosing a major CPT category if he wishes.
	;;^UTILITY(U,$J,357.6,7,2)
	;;=CODE^5^SHORT NAME^28^DESCRIPTION^161^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,7,3)
	;;=SELECT CPT CODES
	;;^UTILITY(U,$J,357.6,8,0)
	;;=DPT PATIENT'S SC CONDITIONS^ELIG^IBDFN^PATIENT FILE^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,8,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,357.6,8,1,1,0)
	;;=Used to output a list of the patients service connected conditons, along with
	;;^UTILITY(U,$J,357.6,8,1,2,0)
	;;=the percentage ratings. Data returned:
	;;^UTILITY(U,$J,357.6,8,1,3,0)
	;;=  disability name
	;;^UTILITY(U,$J,357.6,8,1,4,0)
	;;=  disability percentage
	;;^UTILITY(U,$J,357.6,8,1,5,0)
	;;=  disability percentage with the label "%"
	;;^UTILITY(U,$J,357.6,8,1,6,0)
	;;=  disabilty percentage with the label "%SC"
	;;^UTILITY(U,$J,357.6,8,1,7,0)
	;;=  disability percentage with the label "% - SERVICE CONNECTED"

IBINI08B
IBINI08B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,8,2)
	;;=Disability Name^45^Disability % (number only)^3^Disability % (label=%)^4^Disabilty % (label=%SC)^6^Dis.%_"% - SERVICE CONNECTED"^24
	;;^UTILITY(U,$J,357.6,8,3)
	;;=CONDITIONS PATIENT MAS PIMS DISABILITY DISABILITIES
	;;^UTILITY(U,$J,357.6,8,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,8,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,9,0)
	;;=DG SELECT ICD-9 DIAGNOSIS CODES^ICD9^IBDFN4^MAS^^3^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,9,1,0)
	;;=^^3^3^2930126^
	;;^UTILITY(U,$J,357.6,9,1,1,0)
	;;=Allows the user to select ICD-9 diagnosis codes from the ICD Diagnosis file.
	;;^UTILITY(U,$J,357.6,9,1,2,0)
	;;=Allows the user to select from a particular Major Diagnosis Category if
	;;^UTILITY(U,$J,357.6,9,1,3,0)
	;;=desired. Allows only active codes to be selected.
	;;^UTILITY(U,$J,357.6,9,2)
	;;=CODE^7^DIAGNOSIS^30^DESCRIPTION^200^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,9,3)
	;;=SELECT ICD-9 CODES DX DIAGNOSIS
	;;^UTILITY(U,$J,357.6,10,0)
	;;=DPT PATIENT'S PID^VADPT^IBDFN^PATIENT FILE^1^2^1^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,10,1,0)
	;;=^^1^1^2931015^^
	;;^UTILITY(U,$J,357.6,10,1,1,0)
	;;=Used to display the patient identifier.
	;;^UTILITY(U,$J,357.6,10,2)
	;;=PATIENT IDENTIFIER^15
	;;^UTILITY(U,$J,357.6,10,3)
	;;=PATIENT PID MAS
	;;^UTILITY(U,$J,357.6,10,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,10,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,11,0)
	;;=IBDF UTILITY FOR SELECTING BLANKS^NULL^IBDFN4^INTEGRATED BILLING^^3^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,11,1,0)
	;;=^^2^2^2930414^^^^
	;;^UTILITY(U,$J,357.6,11,1,1,0)
	;;=No data is returned, so this interface allows the user to create a
	;;^UTILITY(U,$J,357.6,11,1,2,0)
	;;=selection list with what ever text he desires.
	;;^UTILITY(U,$J,357.6,11,2)
	;;=Enter Anything!^0^^^^^^^^^^^^^^^1^1
	;;^UTILITY(U,$J,357.6,11,3)
	;;=UTILITY SELECT NULL BLANKS
	;;^UTILITY(U,$J,357.6,12,0)
	;;=DPT PATIENT ADDRESS LINES^ADDRESS^IBDFN6^PATIENT FILE^1^2^3^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,12,1,0)
	;;=^^1^1^2930128^
	;;^UTILITY(U,$J,357.6,12,1,1,0)
	;;=Outputs the patient's address, up to 4 lines of 45 characters each.
	;;^UTILITY(U,$J,357.6,12,2)
	;;=ADDRESS LINE^45
	;;^UTILITY(U,$J,357.6,12,3)
	;;=PATIENT ADDRESS MAS
	;;^UTILITY(U,$J,357.6,12,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,12,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,13,0)
	;;=DPT PATIENT'S TELEPHONE NUMBER^ADDRESS^IBDFN6^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,13,1,0)
	;;=^^1^1^2930217^^
	;;^UTILITY(U,$J,357.6,13,1,1,0)
	;;=Used to display the patient's telephone number.
	;;^UTILITY(U,$J,357.6,13,2)
	;;=TELEPHONE NUMBER^20
	;;^UTILITY(U,$J,357.6,13,3)
	;;=PATIENT TELEPHONE MAS
	;;^UTILITY(U,$J,357.6,13,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,13,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,14,0)
	;;=DPT IS PATIENT INSURED?^INSURED^IBDFN6^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,14,1,0)
	;;=^^2^2^2931130^^^^
	;;^UTILITY(U,$J,357.6,14,1,1,0)
	;;=Prints 'YES','NO', or 'UNKNOWN' based on the field COVERED BY INSURANCE?
	;;^UTILITY(U,$J,357.6,14,1,2,0)
	;;=from the patient file.
	;;^UTILITY(U,$J,357.6,14,2)
	;;=Covered by Ins?^7
	;;^UTILITY(U,$J,357.6,14,3)
	;;=PATIENT INSURANCE MAS
	;;^UTILITY(U,$J,357.6,14,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,14,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,15,0)
	;;=DPT PATIENT'S INSURANCE POLICIES^INSURANC^IBDFN6^PATIENT FILE^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,15,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,357.6,15,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,15,1,2,0)
	;;=active insurance policies and policies that do not reimburse (Medicare).

IBINI08C
IBINI08C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,15,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,15,1,4,0)
	;;=    insurance company
	;;^UTILITY(U,$J,357.6,15,1,5,0)
	;;=    policy number
	;;^UTILITY(U,$J,357.6,15,1,6,0)
	;;=    group name
	;;^UTILITY(U,$J,357.6,15,1,7,0)
	;;=    policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,15,1,8,0)
	;;=    policy expiration date
	;;^UTILITY(U,$J,357.6,15,1,9,0)
	;;=    group number
	;;^UTILITY(U,$J,357.6,15,1,10,0)
	;;=    name of insured
	;;^UTILITY(U,$J,357.6,15,2)
	;;=INSURANCE COMPANY^30^EXPIRATION DATE^12^POLICY NUMBER^20^GROUP NUMBER^17^GROUP NAME^20^NAME OF INSURED^30^HOLDER'S RELATIONSHIP^9
	;;^UTILITY(U,$J,357.6,15,3)
	;;=PATIENT INSURANCE MAS PIMS
	;;^UTILITY(U,$J,357.6,15,4)
	;;=S ACT=2
	;;^UTILITY(U,$J,357.6,15,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,15,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,15,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,15,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,16,0)
	;;=IBDF UTILITY FOR BLANK LINES^BLANKS^IBDFN^INTEGRATED BILLING^0^2^5^^1^^^1^^
	;;^UTILITY(U,$J,357.6,16,1,0)
	;;=^^2^2^2930408^^
	;;^UTILITY(U,$J,357.6,16,1,1,0)
	;;=No data is returned by this interface - it's purpose is to print blank
	;;^UTILITY(U,$J,357.6,16,1,2,0)
	;;=lines to the form for data entry.
	;;^UTILITY(U,$J,357.6,16,2)
	;;=^0
	;;^UTILITY(U,$J,357.6,16,3)
	;;=UTILITY BLANKS LINES
	;;^UTILITY(U,$J,357.6,17,0)
	;;=IBDF UTILITY FOR LABELS ONLY^LABELS^IBDFN^INTEGRATED BILLING^0^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,17,1,0)
	;;=^^2^2^2930210^^
	;;^UTILITY(U,$J,357.6,17,1,1,0)
	;;=This interface returns no data. Its purpose is to print labels without
	;;^UTILITY(U,$J,357.6,17,1,2,0)
	;;=data to the form.
	;;^UTILITY(U,$J,357.6,17,2)
	;;=Underscore Only^0
	;;^UTILITY(U,$J,357.6,17,3)
	;;=UTILITY BLANKS LABELS
	;;^UTILITY(U,$J,357.6,18,0)
	;;=GMP PATIENT ACTIVE PROBLEMS^ACTIVE^GMPLENFM^PROBLEM LIST^1^2^4^1^1^^^1^^
	;;^UTILITY(U,$J,357.6,18,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,357.6,18,1,1,0)
	;;=For displaying the patient's active problems. Returns a list.
	;;^UTILITY(U,$J,357.6,18,1,2,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,18,1,3,0)
	;;=  problem text
	;;^UTILITY(U,$J,357.6,18,1,4,0)
	;;=  corresponding ICD-9 code (if there is a mapping)
	;;^UTILITY(U,$J,357.6,18,1,5,0)
	;;=  date of onset (MM/DD/YY)
	;;^UTILITY(U,$J,357.6,18,1,6,0)
	;;=  SC indicator (SC/NSC/"")
	;;^UTILITY(U,$J,357.6,18,1,7,0)
	;;=  special exposure (A/I/P/"")
	;;^UTILITY(U,$J,357.6,18,1,8,0)
	;;=  special exposure (returns the full text of the type of exposure)
	;;^UTILITY(U,$J,357.6,18,2)
	;;=PROBLEM TEXT^210^CORRESPONDNG ICD-9 Dx CODE^7^DATE OF ONSET (MM/DD/YY)^8^SC INDICATOR (SC/NSC/"")^3^SC INDICATOR (Y/N/"")^1^SPECIAL EXPOSURE (A/I/P/"")^1^SPECIAL EXPOSURE (FULL TEXT)^12^^^
	;;^UTILITY(U,$J,357.6,18,3)
	;;=ACTIVE PROBLEMS LIST PATIENT
	;;^UTILITY(U,$J,357.6,18,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,18,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,19,0)
	;;=DPT PATIENT'S EMPLOYER NAME^EMPLOYER^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,19,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,19,1,1,0)
	;;=For displaying the patient's employer.
	;;^UTILITY(U,$J,357.6,19,2)
	;;=employer name^45
	;;^UTILITY(U,$J,357.6,19,3)
	;;=PATIENT EMPLOYER MAS
	;;^UTILITY(U,$J,357.6,19,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,19,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,20,0)
	;;=DPT PATIENT'S EMPLOYER ADDRESS LINES^EMPLOYER^IBDFN2^PATIENT FILE^1^2^3^^1^^^1^^
	;;^UTILITY(U,$J,357.6,20,1,0)
	;;=^^3^3^2930217^
	;;^UTILITY(U,$J,357.6,20,1,1,0)
	;;=For displaying the patient's employer's address. The address is in the form

IBINI08D
IBINI08D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,20,1,2,0)
	;;=of a list of address lines each up to 30 characters long. The number of lines
	;;^UTILITY(U,$J,357.6,20,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,357.6,20,2)
	;;=ADDRESS LINE^45
	;;^UTILITY(U,$J,357.6,20,3)
	;;=PATIENT EMPLOYER ADDRESS MAS
	;;^UTILITY(U,$J,357.6,20,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,20,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,21,0)
	;;=DPT PATIENT'S EMPLOYER TELEPHONE^EMPLOYER^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,21,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,21,1,1,0)
	;;=For displaying the patient's employer's telephone number.
	;;^UTILITY(U,$J,357.6,21,2)
	;;=telephone number^20
	;;^UTILITY(U,$J,357.6,21,3)
	;;=PATIENT EMPLOYER TELEPHONE MAS
	;;^UTILITY(U,$J,357.6,21,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,21,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,22,0)
	;;=DPT SPOUSE'S EMPLOYER NAME^SPSEMPLR^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,22,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,22,1,1,0)
	;;=For displaying the spouse's employer.
	;;^UTILITY(U,$J,357.6,22,2)
	;;=employer name^45
	;;^UTILITY(U,$J,357.6,22,3)
	;;=PATIENT SPOUSE EMPLOYER MAS
	;;^UTILITY(U,$J,357.6,22,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,22,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,23,0)
	;;=DPT SPOUSE'S EMPLOYER ADDRESS LINES^SPSEMPLR^IBDFN2^PATIENT FILE^1^2^4^^1^^^1^^
	;;^UTILITY(U,$J,357.6,23,1,0)
	;;=^^3^3^2930217^
	;;^UTILITY(U,$J,357.6,23,1,1,0)
	;;=For displaying the patient's spouse's employer's address. The address is in the form
	;;^UTILITY(U,$J,357.6,23,1,2,0)
	;;=of a list of address liness each up to 30 characters long. The number of line
	;;^UTILITY(U,$J,357.6,23,1,3,0)
	;;=is variable, up to 4.
	;;^UTILITY(U,$J,357.6,23,2)
	;;=address line^45
	;;^UTILITY(U,$J,357.6,23,3)
	;;=PATIENT SPOUSE EMPLOYER ADDRESS MAS
	;;^UTILITY(U,$J,357.6,23,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,23,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,24,0)
	;;=DPT SPOUSE'S EMPLOYER TELEPHONE^SPSEMPLR^IBDFN2^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,24,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,24,1,1,0)
	;;=For displaying the telephone number of the spouse's employer.
	;;^UTILITY(U,$J,357.6,24,2)
	;;=telephone number^20
	;;^UTILITY(U,$J,357.6,24,3)
	;;=PATIENT SPOUSE EMPLOYER TELEPHONE MAS
	;;^UTILITY(U,$J,357.6,24,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,24,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,25,0)
	;;=DPT PATIENT'S MARITAL STATUS^VADPT^IBDFN^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,25,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,25,1,1,0)
	;;=For displaying the patient's marital status.
	;;^UTILITY(U,$J,357.6,25,2)
	;;=MARITAL STATUS^15
	;;^UTILITY(U,$J,357.6,25,3)
	;;=PATIENT MARITAL STATUS MAS
	;;^UTILITY(U,$J,357.6,25,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,25,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,26,0)
	;;=DPT PATIENT'S EMPLOYMENT STATUS^EMPLMNT^IBDFN^PATIENT FILE^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,26,1,0)
	;;=^^1^1^2930217^
	;;^UTILITY(U,$J,357.6,26,1,1,0)
	;;=For displaying the employment status of the patient.
	;;^UTILITY(U,$J,357.6,26,2)
	;;=EMPLOYMENT STATUS^20
	;;^UTILITY(U,$J,357.6,26,3)
	;;=PATIENT EMPLOYER EMPLOYMENT MAS
	;;^UTILITY(U,$J,357.6,26,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,26,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,27,0)
	;;=SD CLINIC NAME^CLINIC^IBDFN1^SCHEDULING^1^2^1^^1^^^1^^
	;;^UTILITY(U,$J,357.6,27,1,0)
	;;=^^2^2^2930616^^
	;;^UTILITY(U,$J,357.6,27,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,27,1,2,0)
	;;=Outputs the name of the clinic.
	;;^UTILITY(U,$J,357.6,27,2)
	;;=CLINIC NAME^30

IBINI08E
IBINI08E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,27,3)
	;;=CLINIC SCHEDULING
	;;^UTILITY(U,$J,357.6,27,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,27,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,28,0)
	;;=SD APPOINTMENT DATE/TIME^APPT^IBDFN2^SCHEDULING^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,28,1,0)
	;;=^^2^2^2930602^^^
	;;^UTILITY(U,$J,357.6,28,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,28,1,2,0)
	;;=Returns the date/time of the appointment.
	;;^UTILITY(U,$J,357.6,28,2)
	;;=APPT. DATE/TIME^18^APPT. DATE (MMM DD,YYYY)^12^APPT. TIME (HH:MM)^5
	;;^UTILITY(U,$J,357.6,28,3)
	;;=APPOINTMENT DATE TIME SCHEDULING
	;;^UTILITY(U,$J,357.6,28,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,28,7,1,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,28,7,2,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,28,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,30,0)
	;;=DPT PATIENT ELIGIBILITY DATA^ELIG^IBDFN^PATIENT FILE^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,30,1,0)
	;;=^^8^8^2931015^^^^
	;;^UTILITY(U,$J,357.6,30,1,1,0)
	;;=Returns patient eligibility data. Data returned is:
	;;^UTILITY(U,$J,357.6,30,1,2,0)
	;;=   eligibility code in external form
	;;^UTILITY(U,$J,357.6,30,1,3,0)
	;;=   period of service
	;;^UTILITY(U,$J,357.6,30,1,4,0)
	;;=   service connected? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,5,0)
	;;=   veteran? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,6,0)
	;;=   eligible for care? YES/NO
	;;^UTILITY(U,$J,357.6,30,1,7,0)
	;;=   type of patient
	;;^UTILITY(U,$J,357.6,30,1,8,0)
	;;=   SC%
	;;^UTILITY(U,$J,357.6,30,2)
	;;=ELIGIBILTY CODE/EXTERNAL FORM^30^PERIOD OF SERVICE^25^SERVICE CONNECTED?^3^VETERAN?^3^ELIGIBLE FOR CARE?^3^TYPE OF PATIENT^20^SC %^3
	;;^UTILITY(U,$J,357.6,30,3)
	;;=ELIGIBLE ELIGIBILITY PATIENT PERIOD SERVICE CONNECTED VETERAN STATUS
	;;^UTILITY(U,$J,357.6,30,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,30,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,31,0)
	;;=DPT SERVICE HISTORY RELATED DATA^ELIG^IBDFN^PATIENT FILE^1^2^2^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,31,1,0)
	;;=^^7^7^2931015^^^^
	;;^UTILITY(U,$J,357.6,31,1,1,0)
	;;=For displaying service history data. Data returned:
	;;^UTILITY(U,$J,357.6,31,1,2,0)
	;;=  Vietnam service? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,3,0)
	;;=  Agent Orange exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,4,0)
	;;=  radiation exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,5,0)
	;;=  combat service? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,6,0)
	;;=  POW? YES/NO
	;;^UTILITY(U,$J,357.6,31,1,7,0)
	;;=  environmental contaminants exposure? YES/NO
	;;^UTILITY(U,$J,357.6,31,2)
	;;=VIETNAM SERVICE?^3^AGENT ORANGE EXPOSURE?^3^RADIATION EXPOSURE?^3^POW?^3^COMBAT SERVICE?^3^ENVIRONMENTAL CONTAMINANTS?^3
	;;^UTILITY(U,$J,357.6,31,3)
	;;=PATIENT MAS VIETNAM SERVICE AGENT ORANGE RADIATION COMBAT POW HISTORY ENVIRONMENTAL CONTAMINANT PERSIAN
	;;^UTILITY(U,$J,357.6,31,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,31,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,32,0)
	;;=DPT PATIENT'S MEANS TEST DATA^MT^IBDFN2^MAS^1^2^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,32,1,0)
	;;=^^5^5^2931015^^^
	;;^UTILITY(U,$J,357.6,32,1,1,0)
	;;=Returns the patient's current means test category and the date of the most
	;;^UTILITY(U,$J,357.6,32,1,2,0)
	;;=recent means test. Data returned:
	;;^UTILITY(U,$J,357.6,32,1,3,0)
	;;=  means test category
	;;^UTILITY(U,$J,357.6,32,1,4,0)
	;;=  means test code
	;;^UTILITY(U,$J,357.6,32,1,5,0)
	;;=  date of last means test
	;;^UTILITY(U,$J,357.6,32,2)
	;;=MEANS TEST CATEGORY^20^DATE OF LAST MEANS TEST^12^MEANS TEST CODE^1
	;;^UTILITY(U,$J,357.6,32,3)
	;;=MEANS TEST CATEGORY PATIENT MAS
	;;^UTILITY(U,$J,357.6,32,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,32,7,1,0)
	;;=DFN

IBINI08F
IBINI08F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,33,0)
	;;=GMP SELECT CLINIC COMMON PROBLEMS^SELECT^GMPLENFM^PROBLEM LIST^0^3^2^^1^^^1^^
	;;^UTILITY(U,$J,357.6,33,1,0)
	;;=^^2^2^2931025^
	;;^UTILITY(U,$J,357.6,33,1,1,0)
	;;=Allows the user to select common problemslems from the term file of the
	;;^UTILITY(U,$J,357.6,33,1,2,0)
	;;=Problem List package.
	;;^UTILITY(U,$J,357.6,33,2)
	;;=POINTER TO CLINICAL TERM FILE^9^PROBLEM TEXT^210^CORRESPNDNG ICD-9 Dx CODE^7^^^^^^^^^^^0^1
	;;^UTILITY(U,$J,357.6,33,3)
	;;=PROBLEMS SELECT LIST
	;;^UTILITY(U,$J,357.6,40,0)
	;;=ACTION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^0^^1^^
	;;^UTILITY(U,$J,357.6,40,1,0)
	;;=^^2^2^2930623^^^^
	;;^UTILITY(U,$J,357.6,40,1,1,0)
	;;=The Action Profile from Outpatient Pharmacy. The  medicine profile is printed
	;;^UTILITY(U,$J,357.6,40,1,2,0)
	;;=for the last 45 days.
	;;^UTILITY(U,$J,357.6,40,3)
	;;=OUTPATIENT PHARMACY ACTION PROFILE
	;;^UTILITY(U,$J,357.6,40,4)
	;;=S PSTYPE=1,PSDAYS=45
	;;^UTILITY(U,$J,357.6,40,6,0)
	;;=^357.66^25^2
	;;^UTILITY(U,$J,357.6,40,6,23,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,357.6,40,6,25,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,357.6,40,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,40,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,41,0)
	;;=INFORMATION PROFILE - 45 DAYS^RXPROF^IBDFN3^OUTPATIENT PHARMACY^1^4^^^1^^^1^^
	;;^UTILITY(U,$J,357.6,41,1,0)
	;;=^^3^3^2930524^^
	;;^UTILITY(U,$J,357.6,41,1,1,0)
	;;= 
	;;^UTILITY(U,$J,357.6,41,1,2,0)
	;;=Prints the Information Profile from Outpatient Pharmacy. The medication
	;;^UTILITY(U,$J,357.6,41,1,3,0)
	;;=profile is printed for 45 days.
	;;^UTILITY(U,$J,357.6,41,3)
	;;=INFORMATION PROFILE OUTPATIENT PHARMACY RX
	;;^UTILITY(U,$J,357.6,41,4)
	;;=S PSTYPE=0,PSDAYS=45
	;;^UTILITY(U,$J,357.6,41,6,0)
	;;=^357.66^2^2
	;;^UTILITY(U,$J,357.6,41,6,1,0)
	;;=PSTYPE
	;;^UTILITY(U,$J,357.6,41,6,2,0)
	;;=PSDAYS
	;;^UTILITY(U,$J,357.6,41,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,41,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,42,0)
	;;=ROUTING SLIP^ROUTING^IBDFN3^SCHEDULING^1^4^^^1^0^^1^^
	;;^UTILITY(U,$J,357.6,42,1,0)
	;;=^^1^1^2930929^^^^
	;;^UTILITY(U,$J,357.6,42,1,1,0)
	;;=Prints the routing slip from the scheduling package.
	;;^UTILITY(U,$J,357.6,42,3)
	;;=ROUTING SLIP SCHEDULING
	;;^UTILITY(U,$J,357.6,42,5)
	;;=
	;;^UTILITY(U,$J,357.6,42,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,42,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,42,7,2,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,42,7,3,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,44,0)
	;;=IB CURRENT DATE^NOW^IBDFN2^INTEGRATED BILLING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,44,1,0)
	;;=^^1^1^2930528^^
	;;^UTILITY(U,$J,357.6,44,1,1,0)
	;;=Prints the current date in MMM DD,YYYY format.
	;;^UTILITY(U,$J,357.6,44,2)
	;;=CURRENT DATE (MMM DD, YYYY)^12
	;;^UTILITY(U,$J,357.6,44,3)
	;;=TODAY CURRENT DATE DAY
	;;^UTILITY(U,$J,357.6,45,0)
	;;=IB CURRENT DATE@TIME^NOW^IBDFN2^INTEGRATED BILLING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,45,1,0)
	;;=^^1^1^2930528^
	;;^UTILITY(U,$J,357.6,45,1,1,0)
	;;=Returns the current date and time in MMM DD, YYY@HH:MM:SS format.
	;;^UTILITY(U,$J,357.6,45,2)
	;;=DT/TM (MMM DD, YYYY@HH:MM:SS)^21
	;;^UTILITY(U,$J,357.6,45,3)
	;;=DATE TIME NOW DAY
	;;^UTILITY(U,$J,357.6,46,0)
	;;=IB CURRENT TIME^NOW^IBDFN2^INTEGRATED BILLING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,46,1,0)
	;;=^^1^1^2930528^
	;;^UTILITY(U,$J,357.6,46,1,1,0)
	;;=Returns the time in HH:MM:SS format.
	;;^UTILITY(U,$J,357.6,46,2)
	;;=CURRENT TIME (HH:MM:SS)^8
	;;^UTILITY(U,$J,357.6,46,3)
	;;=TIME NOW
	;;^UTILITY(U,$J,357.6,47,0)
	;;=SD DIVISION NAME^DIVISION^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^

IBINI08G
IBINI08G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,47,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,357.6,47,1,1,0)
	;;=Gets the name of the division that the clinic belongs to.
	;;^UTILITY(U,$J,357.6,47,2)
	;;=DIVISION NAME^30
	;;^UTILITY(U,$J,357.6,47,3)
	;;=DIVISION PIMS FACILITY
	;;^UTILITY(U,$J,357.6,47,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,47,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,48,0)
	;;=SD INSTITUTION NAME^INST^IBDFN1^SCHEDULING^1^2^1^0^1^^^1^^
	;;^UTILITY(U,$J,357.6,48,1,0)
	;;=^^1^1^2930603^^
	;;^UTILITY(U,$J,357.6,48,1,1,0)
	;;=Obtains the name of the institution of the clinic of the appointment.
	;;^UTILITY(U,$J,357.6,48,2)
	;;=INSTITUTION NAME^30
	;;^UTILITY(U,$J,357.6,48,3)
	;;=FACILITY INSTITUTION PIMS MAS SCHEDULING
	;;^UTILITY(U,$J,357.6,48,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,48,7,1,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,49,0)
	;;=DPT PATIENT SHORT ADDRESS^ADDRESS^IBDFN6^PATIENT FILE^1^2^1^1^1^0^^1
	;;^UTILITY(U,$J,357.6,49,1,0)
	;;=^^2^2^2931014^^^
	;;^UTILITY(U,$J,357.6,49,1,1,0)
	;;=The patient's address shortened to fit on a single line. It consists of the
	;;^UTILITY(U,$J,357.6,49,1,2,0)
	;;=first address line followed by the city, state, and ZIP.
	;;^UTILITY(U,$J,357.6,49,2)
	;;=SHORT ADDRESS - SINGLE LINE^65
	;;^UTILITY(U,$J,357.6,49,3)
	;;=PATIENT SHORT ADDRESS
	;;^UTILITY(U,$J,357.6,49,6,0)
	;;=^357.66^^0
	;;^UTILITY(U,$J,357.6,49,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,49,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,50,0)
	;;=DPT SC HIDDEN LABELS^ELIG^IBDFN^PATIENT FILE^1^2^2^0^1^0^^1^^
	;;^UTILITY(U,$J,357.6,50,1,0)
	;;=^^9^9^2931015^^
	;;^UTILITY(U,$J,357.6,50,1,1,0)
	;;=This interface gives the ability to place labels that refer to SC conditions
	;;^UTILITY(U,$J,357.6,50,1,2,0)
	;;=on the form that won't actually be displayed if the patient is not a 
	;;^UTILITY(U,$J,357.6,50,1,3,0)
	;;=service connected veteran. It consists of a list of possible labels that will
	;;^UTILITY(U,$J,357.6,50,1,4,0)
	;;=only print if the veteran is SLabels returned:
	;;^UTILITY(U,$J,357.6,50,1,5,0)
	;;=  %
	;;^UTILITY(U,$J,357.6,50,1,6,0)
	;;=  % - SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,50,1,7,0)
	;;=  S/C
	;;^UTILITY(U,$J,357.6,50,1,8,0)
	;;=  SERVICE CONNECTED
	;;^UTILITY(U,$J,357.6,50,1,9,0)
	;;=  SC CONDITIONS:
	;;^UTILITY(U,$J,357.6,50,2)
	;;= % ^1^% - SERVICE CONNECTED^21^SERVICE CONNECTED^17^SC CONDITIONS:^13^S/C^3
	;;^UTILITY(U,$J,357.6,50,3)
	;;=SERVICE CONNECTED HIDDEN LABELS DPT PIMS S/C
	;;^UTILITY(U,$J,357.6,50,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,50,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,51,0)
	;;=DPT SC TREATMENT QUESTIONS^ELIG^IBDFN^PATIENT FILE^1^2^2^0^1^^^1
	;;^UTILITY(U,$J,357.6,51,1,0)
	;;=^^8^8^2931018^^^^
	;;^UTILITY(U,$J,357.6,51,1,1,0)
	;;=Prints questions concerning whether treatment was related to service.
	;;^UTILITY(U,$J,357.6,51,1,2,0)
	;;=Each question is printed only if it applies to the patient. Questions are:
	;;^UTILITY(U,$J,357.6,51,1,3,0)
	;;= 
	;;^UTILITY(U,$J,357.6,51,1,4,0)
	;;=Was treatment for a SC condition? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,5,0)
	;;=Was treatment related to exposure to Agent Orange? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,6,0)
	;;=Was treatment related to exposure to Ionization Radiation? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,7,0)
	;;=Was treatment related to exposure to Environmental Contaminants? __ YES __ NO
	;;^UTILITY(U,$J,357.6,51,1,8,0)
	;;=Was treatment related to: AO __ IR __ EC __
	;;^UTILITY(U,$J,357.6,51,2)
	;;=RELATED TO SC CONDITION?^46^RELATED TO AO?^63^RELATED TO IR?^71^RELATED TO EC?^77^RELATED TO AO,IR, OR EC?^43

IBINI08H
IBINI08H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,51,3)
	;;=PATIENT TREATMENT QUESTIONS SERVICE CONNECTED EXPOSURE
	;;^UTILITY(U,$J,357.6,51,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,51,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,51,8)
	;;=^^^1^1
	;;^UTILITY(U,$J,357.6,52,0)
	;;=SD FUTURE APPTS, SAME DAY^SAMEDAY^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,357.6,52,1,0)
	;;=^^8^8^2931105^^^
	;;^UTILITY(U,$J,357.6,52,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day.
	;;^UTILITY(U,$J,357.6,52,1,2,0)
	;;= Includes:
	;;^UTILITY(U,$J,357.6,52,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,52,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,52,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,52,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,52,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,52,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,52,2)
	;;=DATE (MMM DD,YYYY)^11^TIME (HH:MM)^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,357.6,52,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,52,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,52,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,52,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,53,0)
	;;=SD FUTURE APPTS, ALL^ALLFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,357.6,53,1,0)
	;;=^^8^8^2931105^
	;;^UTILITY(U,$J,357.6,53,1,1,0)
	;;=Returns a list of all future appointments for the same day, all clinics.
	;;^UTILITY(U,$J,357.6,53,1,2,0)
	;;=Includes:
	;;^UTILITY(U,$J,357.6,53,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,53,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,53,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,53,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,53,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,53,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,53,2)
	;;=DATE (MMM DD,YYYY)^11^TIME^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,357.6,53,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,53,7,0)
	;;=^357.67^2^2
	;;^UTILITY(U,$J,357.6,53,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,53,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,54,0)
	;;=SD FUTURE APPTS, SAME CLINIC^CLNCFUTR^IBDFN1^SCHEDULING^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,357.6,54,1,0)
	;;=^^8^8^2931105^
	;;^UTILITY(U,$J,357.6,54,1,1,0)
	;;=Returns a list of all the patient's future appointments for the same day
	;;^UTILITY(U,$J,357.6,54,1,2,0)
	;;=and clinic. Includes:
	;;^UTILITY(U,$J,357.6,54,1,3,0)
	;;=  Appointment Date
	;;^UTILITY(U,$J,357.6,54,1,4,0)
	;;=  Appointment Time
	;;^UTILITY(U,$J,357.6,54,1,5,0)
	;;=  Appointment Date@Time
	;;^UTILITY(U,$J,357.6,54,1,6,0)
	;;=  Clinic
	;;^UTILITY(U,$J,357.6,54,1,7,0)
	;;=  Status
	;;^UTILITY(U,$J,357.6,54,1,8,0)
	;;=  Appointment Type
	;;^UTILITY(U,$J,357.6,54,2)
	;;=DATE (MMM DD,YYYY)^11^TIME^5^DATE@TIME^17^CLINIC^30^STATUS^35^APPOINTMENT TYPE^25
	;;^UTILITY(U,$J,357.6,54,3)
	;;=FUTURE APPOINTMENTS SCHEDULING
	;;^UTILITY(U,$J,357.6,54,7,0)
	;;=^357.67^3^3
	;;^UTILITY(U,$J,357.6,54,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,54,7,2,0)
	;;=IBAPPT
	;;^UTILITY(U,$J,357.6,54,7,3,0)
	;;=IBCLINIC
	;;^UTILITY(U,$J,357.6,55,0)
	;;=DPT PATIENT'S INSURANCE - ALL^INSURANC^IBDFN6^PATIENT FILE^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,357.6,55,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,357.6,55,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns
	;;^UTILITY(U,$J,357.6,55,1,2,0)
	;;=ALL insurance policies, including inactive ones.
	;;^UTILITY(U,$J,357.6,55,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,55,1,4,0)
	;;=  insurance company

IBINI08I
IBINI08I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.6,55,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,55,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,55,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,55,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,55,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,55,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,55,2)
	;;=INSURANCE COMPANY^30^EXPIRATION DATE^12^POLICY NUMBER^20^GROUP NUMBER^17^GROUP NAME^20^NAME OF INSURED^30^HOLDER'S RELATIONSHIP^9
	;;^UTILITY(U,$J,357.6,55,3)
	;;=PATIENT INSURANCE MAS PIMS
	;;^UTILITY(U,$J,357.6,55,4)
	;;=S ACT=""
	;;^UTILITY(U,$J,357.6,55,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,55,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,55,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,55,7,1,0)
	;;=DFN
	;;^UTILITY(U,$J,357.6,56,0)
	;;=DPT PATIENT'S INSURANCE - ACTIVE ONLY^INSURANC^IBDFN6^PATIENT FILE^1^2^4^1^1^^^1
	;;^UTILITY(U,$J,357.6,56,1,0)
	;;=^^10^10^2931201^
	;;^UTILITY(U,$J,357.6,56,1,1,0)
	;;=For displaying information on the patient's health insurance. Returns ONLY
	;;^UTILITY(U,$J,357.6,56,1,2,0)
	;;=active insurance, excluding policies that do not reimburse.
	;;^UTILITY(U,$J,357.6,56,1,3,0)
	;;=Data returned:
	;;^UTILITY(U,$J,357.6,56,1,4,0)
	;;=  insurance company
	;;^UTILITY(U,$J,357.6,56,1,5,0)
	;;=  policy number
	;;^UTILITY(U,$J,357.6,56,1,6,0)
	;;=  group name
	;;^UTILITY(U,$J,357.6,56,1,7,0)
	;;=  policy holder's relationship to the patient
	;;^UTILITY(U,$J,357.6,56,1,8,0)
	;;=  policy expiration date
	;;^UTILITY(U,$J,357.6,56,1,9,0)
	;;=  group number
	;;^UTILITY(U,$J,357.6,56,1,10,0)
	;;=  name of insured
	;;^UTILITY(U,$J,357.6,56,2)
	;;=INSURANCE COMPANY^30^EXPIRATION DATE^12^POLICY NUMBER^20^GROUP NUMBER^17^GROUP NAME^20^NAME OF INSURED^30^HOLDER'S RELATIONSHIP^9
	;;^UTILITY(U,$J,357.6,56,3)
	;;=PATIENT INSURANCE MAS PIMS ACTIVE
	;;^UTILITY(U,$J,357.6,56,4)
	;;=S ACT=1
	;;^UTILITY(U,$J,357.6,56,6,0)
	;;=^357.66^1^1
	;;^UTILITY(U,$J,357.6,56,6,1,0)
	;;=ACT
	;;^UTILITY(U,$J,357.6,56,7,0)
	;;=^357.67^1^1
	;;^UTILITY(U,$J,357.6,56,7,1,0)
	;;=DFN

IBINI08J
IBINI08J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.7,0,"GL")
	;;=^IBE(357.7,
	;;^DIC("B","FORM LINE",357.7)
	;;=
	;;^DIC(357.7,"%D",0)
	;;=^^1^1^2931214^^
	;;^DIC(357.7,"%D",1,0)
	;;=Either a horizontal or vertical line appearing on the form.
	;;^DD(357.7,0)
	;;=FIELD^^.06^6
	;;^DD(357.7,0,"DT")
	;;=2940217
	;;^DD(357.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(357.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(357.7,0,"ID",.06)
	;;=W ""
	;;^DD(357.7,0,"IX","B",357.7,.01)
	;;=
	;;^DD(357.7,0,"IX","C",357.7,.06)
	;;=
	;;^DD(357.7,0,"NM","FORM LINE")
	;;=
	;;^DD(357.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.7,.01,1,0)
	;;=^.1
	;;^DD(357.7,.01,1,1,0)
	;;=357.7^B
	;;^DD(357.7,.01,1,1,1)
	;;=S ^IBE(357.7,"B",$E(X,1,30),DA)=""
	;;^DD(357.7,.01,1,1,2)
	;;=K ^IBE(357.7,"B",$E(X,1,30),DA)
	;;^DD(357.7,.01,3)
	;;=Enter a name for the line that will allow it to be identified, such as V(1,1), meaning a vertical line starting at coordinates (1,1).
	;;^DD(357.7,.01,21,0)
	;;=^^4^4^2940217^
	;;^DD(357.7,.01,21,1,0)
	;;= 
	;;^DD(357.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(357.7,.01,21,3,0)
	;;=them to be identified, such as V(1,1), meaning a vertical line starting at
	;;^DD(357.7,.01,21,4,0)
	;;=coordinates (1,1).
	;;^DD(357.7,.01,"DT")
	;;=2940217
	;;^DD(357.7,.02,0)
	;;=LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.7,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.7,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.7,.02,3)
	;;=Enter the block column the line should begin at.
	;;^DD(357.7,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.7,.02,21,1,0)
	;;= 
	;;^DD(357.7,.02,21,2,0)
	;;=The column, relative to the block, that the line should begin at.
	;;^DD(357.7,.02,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.7,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.7,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.7,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.7,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.7,.02,"DT")
	;;=2930715
	;;^DD(357.7,.03,0)
	;;=LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.7,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.7,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.7,.03,3)
	;;=Enter the block row the line should begin at.
	;;^DD(357.7,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.7,.03,21,1,0)
	;;= 
	;;^DD(357.7,.03,21,2,0)
	;;=The row, relative to the block, that the line should begin at.
	;;^DD(357.7,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.7,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.7,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.7,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.7,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.7,.03,"DT")
	;;=2930715
	;;^DD(357.7,.04,0)
	;;=ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
	;;^DD(357.7,.04,.1)
	;;=ORIENTATION (HORIZONTAL/VERTICAL)
	;;^DD(357.7,.04,3)
	;;=Should the line be horizontal or vertical?
	;;^DD(357.7,.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(357.7,.04,21,1,0)
	;;= 
	;;^DD(357.7,.04,21,2,0)
	;;=The direction the line goes in.
	;;^DD(357.7,.04,"DT")
	;;=2930415
	;;^DD(357.7,.05,0)
	;;=LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X

IBINI08K
IBINI08K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.7,.05,3)
	;;=How long should the line be?
	;;^DD(357.7,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(357.7,.05,21,1,0)
	;;= 
	;;^DD(357.7,.05,21,2,0)
	;;=The length of the line. For horizontal lines the length is in terms of
	;;^DD(357.7,.05,21,3,0)
	;;=characters. For vertical lines it is in terms of rows.
	;;^DD(357.7,.05,"DT")
	;;=2930319
	;;^DD(357.7,.06,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;6^Q
	;;^DD(357.7,.06,1,0)
	;;=^.1
	;;^DD(357.7,.06,1,1,0)
	;;=357.7^C
	;;^DD(357.7,.06,1,1,1)
	;;=S ^IBE(357.7,"C",$E(X,1,30),DA)=""
	;;^DD(357.7,.06,1,1,2)
	;;=K ^IBE(357.7,"C",$E(X,1,30),DA)
	;;^DD(357.7,.06,1,1,"%D",0)
	;;=^^2^2^2930319^
	;;^DD(357.7,.06,1,1,"%D",1,0)
	;;= 
	;;^DD(357.7,.06,1,1,"%D",2,0)
	;;=This cross-reference is used to find all lines belonging to a block.
	;;^DD(357.7,.06,1,1,"DT")
	;;=2930319
	;;^DD(357.7,.06,3)
	;;=What block should the line appear in?
	;;^DD(357.7,.06,4)
	;;=W "DOES THIS WORK",!
	;;^DD(357.7,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(357.7,.06,21,1,0)
	;;= 
	;;^DD(357.7,.06,21,2,0)
	;;=The block the line appears in.
	;;^DD(357.7,.06,"DT")
	;;=2930319

IBINI08L
IBINI08L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.8,0,"GL")
	;;=^IBE(357.8,
	;;^DIC("B","TEXT AREA",357.8)
	;;=
	;;^DIC(357.8,"%D",0)
	;;=^^3^3^2931214^^
	;;^DIC(357.8,"%D",1,0)
	;;= 
	;;^DIC(357.8,"%D",2,0)
	;;=A TEXT AREA rectangular area on the form that displays a word processing
	;;^DIC(357.8,"%D",3,0)
	;;=field. The text is automatically formatted to fit within the area.
	;;^DD(357.8,0)
	;;=FIELD^^1^7
	;;^DD(357.8,0,"DDA")
	;;=N
	;;^DD(357.8,0,"DT")
	;;=2930326
	;;^DD(357.8,0,"IX","B",357.8,.01)
	;;=
	;;^DD(357.8,0,"IX","C",357.8,.02)
	;;=
	;;^DD(357.8,0,"NM","TEXT AREA")
	;;=
	;;^DD(357.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.8,.01,1,0)
	;;=^.1
	;;^DD(357.8,.01,1,1,0)
	;;=357.8^B
	;;^DD(357.8,.01,1,1,1)
	;;=S ^IBE(357.8,"B",$E(X,1,30),DA)=""
	;;^DD(357.8,.01,1,1,2)
	;;=K ^IBE(357.8,"B",$E(X,1,30),DA)
	;;^DD(357.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(357.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.01,21,1,0)
	;;= 
	;;^DD(357.8,.01,21,2,0)
	;;=The name of the text area.
	;;^DD(357.8,.02,0)
	;;=BLOCK^RP357.1'^IBE(357.1,^0;2^Q
	;;^DD(357.8,.02,1,0)
	;;=^.1
	;;^DD(357.8,.02,1,1,0)
	;;=357.8^C
	;;^DD(357.8,.02,1,1,1)
	;;=S ^IBE(357.8,"C",$E(X,1,30),DA)=""
	;;^DD(357.8,.02,1,1,2)
	;;=K ^IBE(357.8,"C",$E(X,1,30),DA)
	;;^DD(357.8,.02,1,1,"%D",0)
	;;=^^3^3^2930326^
	;;^DD(357.8,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(357.8,.02,1,1,"%D",2,0)
	;;=Used to find all of the text areas that should appear on a particular
	;;^DD(357.8,.02,1,1,"%D",3,0)
	;;=block.
	;;^DD(357.8,.02,1,1,"DT")
	;;=2930326
	;;^DD(357.8,.02,3)
	;;=What block do you want the text to appear in?
	;;^DD(357.8,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.02,21,1,0)
	;;= 
	;;^DD(357.8,.02,21,2,0)
	;;=The block the text area is displayed in.
	;;^DD(357.8,.02,"DT")
	;;=2930326
	;;^DD(357.8,.03,0)
	;;=TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.8,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.8,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.8,.03,3)
	;;=What block column should the text begin in?
	;;^DD(357.8,.03,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.03,21,1,0)
	;;= 
	;;^DD(357.8,.03,21,2,0)
	;;=The starting position of the text area, relative to the block.
	;;^DD(357.8,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.8,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.8,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.8,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.8,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(357.8,.03,"DT")
	;;=2930715
	;;^DD(357.8,.04,0)
	;;=TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(357.8,.04,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(357.8,.04,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(357.8,.04,3)
	;;=What block row should the text begin in?
	;;^DD(357.8,.04,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.04,21,1,0)
	;;= 
	;;^DD(357.8,.04,21,2,0)
	;;=The starting row of the text area, relative to the block.
	;;^DD(357.8,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(357.8,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(357.8,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(357.8,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(357.8,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.

IBINI08M
IBINI08M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(357.8,.04,"DT")
	;;=2930715
	;;^DD(357.8,.05,0)
	;;=TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.8,.05,3)
	;;=How many columns should be allocated on the block for the text?
	;;^DD(357.8,.05,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.05,21,1,0)
	;;= 
	;;^DD(357.8,.05,21,2,0)
	;;=The width of the text area, measured in characters.
	;;^DD(357.8,.05,"DT")
	;;=2930326
	;;^DD(357.8,.06,0)
	;;=TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(357.8,.06,3)
	;;=How many lines on the block should be allocated for the text?
	;;^DD(357.8,.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,.06,21,1,0)
	;;= 
	;;^DD(357.8,.06,21,2,0)
	;;=The height of the text area, measured in lines.
	;;^DD(357.8,.06,"DT")
	;;=2930326
	;;^DD(357.8,1,0)
	;;=TEXT^357.81^^1;0
	;;^DD(357.8,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.8,1,21,1,0)
	;;= 
	;;^DD(357.8,1,21,2,0)
	;;=The text that should appear within the text area.
	;;^DD(357.81,0)
	;;=TEXT SUB-FIELD^^.01^1
	;;^DD(357.81,0,"DT")
	;;=2930326
	;;^DD(357.81,0,"NM","TEXT")
	;;=
	;;^DD(357.81,0,"UP")
	;;=357.8
	;;^DD(357.81,.01,0)
	;;=TEXT^WL^^0;1^Q
	;;^DD(357.81,.01,3)
	;;=Enter the text that you want to appear in the block.
	;;^DD(357.81,.01,"DT")
	;;=2930326

IBINI08N
IBINI08N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.91,0,"GL")
	;;=^IBE(357.91,
	;;^DIC("B","MARKING AREA TYPE",357.91)
	;;=
	;;^DIC(357.91,"%D",0)
	;;=^^4^4^2931214^^
	;;^DIC(357.91,"%D",1,0)
	;;= 
	;;^DIC(357.91,"%D",2,0)
	;;=This file contains the different types of marking areas that can be
	;;^DIC(357.91,"%D",3,0)
	;;=printed to a form for the user to write in. Examples are  ( ),__, etc.
	;;^DIC(357.91,"%D",4,0)
	;;=These are for the person completing the form to mark to indicate a choice.
	;;^DD(357.91,0)
	;;=FIELD^^.03^3
	;;^DD(357.91,0,"DDA")
	;;=N
	;;^DD(357.91,0,"DT")
	;;=2930811
	;;^DD(357.91,0,"IX","B",357.91,.01)
	;;=
	;;^DD(357.91,0,"NM","MARKING AREA TYPE")
	;;=
	;;^DD(357.91,0,"PT",357.22,.06)
	;;=
	;;^DD(357.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(357.91,.01,1,0)
	;;=^.1
	;;^DD(357.91,.01,1,1,0)
	;;=357.91^B
	;;^DD(357.91,.01,1,1,1)
	;;=S ^IBE(357.91,"B",$E(X,1,30),DA)=""
	;;^DD(357.91,.01,1,1,2)
	;;=K ^IBE(357.91,"B",$E(X,1,30),DA)
	;;^DD(357.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(357.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(357.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.
	;;^DD(357.91,.02,0)
	;;=DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
	;;^DD(357.91,.02,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(357.91,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.91,.02,21,1,0)
	;;= 
	;;^DD(357.91,.02,21,2,0)
	;;=The text that should be displayed in the MARKING AREA.
	;;^DD(357.91,.02,"DT")
	;;=2921207
	;;^DD(357.91,.03,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;3^Q
	;;^DD(357.91,.03,3)
	;;=Enter YES if the MARKING AREA is part of the tool kit, NO otherwise.
	;;^DD(357.91,.03,21,0)
	;;=^^2^2^2930811^
	;;^DD(357.91,.03,21,1,0)
	;;=Used to prevent local sites from editing MARKING AREAS that are part of the
	;;^DD(357.91,.03,21,2,0)
	;;=tool kit.
	;;^DD(357.91,.03,"DT")
	;;=2930811

IBINI08O
IBINI08O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.91)
	;;=^IBE(357.91,
	;;^UTILITY(U,$J,357.91,0)
	;;=MARKING AREA TYPE^357.91^14^14
	;;^UTILITY(U,$J,357.91,1,0)
	;;=( )^( )^1^
	;;^UTILITY(U,$J,357.91,2,0)
	;;=_^_^1^
	;;^UTILITY(U,$J,357.91,3,0)
	;;=SPACE^ ^1^
	;;^UTILITY(U,$J,357.91,4,0)
	;;=BLANK^^1^
	;;^UTILITY(U,$J,357.91,5,0)
	;;=TWO SPACES^  ^1^
	;;^UTILITY(U,$J,357.91,6,0)
	;;=__ yes^__ yes^1^
	;;^UTILITY(U,$J,357.91,7,0)
	;;=__ no^__ no^1^
	;;^UTILITY(U,$J,357.91,8,0)
	;;=THREE SPACES^   ^1^
	;;^UTILITY(U,$J,357.91,9,0)
	;;=__^__^1^
	;;^UTILITY(U,$J,357.91,10,0)
	;;=(P) (S)^(P) (S)^1^
	;;^UTILITY(U,$J,357.91,11,0)
	;;=(Y)^(Y)^1^
	;;^UTILITY(U,$J,357.91,12,0)
	;;=(A) (I) (H)^(A) (I) (H)^1^
	;;^UTILITY(U,$J,357.91,13,0)
	;;=5 SPACES^     ^1^
	;;^UTILITY(U,$J,357.91,14,0)
	;;=(A) (I)^(A) (I)^1

IBINI08P
IBINI08P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(357.92)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(357.92,0,"GL")
	;;=^IBE(357.92,
	;;^DIC("B","PRINT CONDITIONS",357.92)
	;;=
	;;^DIC(357.92,"%D",0)
	;;=^^6^6^2931214^^
	;;^DIC(357.92,"%D",1,0)
	;;= 
	;;^DIC(357.92,"%D",2,0)
	;;=A table containing a list of conditions recognized by the print manager.
	;;^DIC(357.92,"%D",3,0)
	;;=They are used to specify the conditions under which reports should be
	;;^DIC(357.92,"%D",4,0)
	;;=printed. The print manager is a program that scans the appointments for
	;;^DIC(357.92,"%D",5,0)
	;;=selected clinics for a selected date, and prints specified reports under
	;;^DIC(357.92,"%D",6,0)
	;;=specified conditions.
	;;^DD(357.92,0)
	;;=FIELD^^.01^1
	;;^DD(357.92,0,"DT")
	;;=2930518
	;;^DD(357.92,0,"IX","B",357.92,.01)
	;;=
	;;^DD(357.92,0,"NM","PRINT CONDITIONS")
	;;=
	;;^DD(357.92,0,"PT",409.9501,.02)
	;;=
	;;^DD(357.92,0,"PT",409.961,.02)
	;;=
	;;^DD(357.92,.01,0)
	;;=PRINT CONDITION^RF^^0;1^K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(357.92,.01,1,0)
	;;=^.1
	;;^DD(357.92,.01,1,1,0)
	;;=357.92^B
	;;^DD(357.92,.01,1,1,1)
	;;=S ^IBE(357.92,"B",$E(X,1,30),DA)=""
	;;^DD(357.92,.01,1,1,2)
	;;=K ^IBE(357.92,"B",$E(X,1,30),DA)
	;;^DD(357.92,.01,3)
	;;=Answer must be 3-40 characters in length.
	;;^DD(357.92,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(357.92,.01,21,1,0)
	;;= 
	;;^DD(357.92,.01,21,2,0)
	;;=A condition recognized by the Print Manager.
	;;^DD(357.92,.01,"DT")
	;;=2930518

IBINI08Q
IBINI08Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(357.92)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,357.92)
	;;=^IBE(357.92,
	;;^UTILITY(U,$J,357.92,0)
	;;=PRINT CONDITIONS^357.92^3^3
	;;^UTILITY(U,$J,357.92,1,0)
	;;=FOR EVERY APPOINTMENT
	;;^UTILITY(U,$J,357.92,2,0)
	;;=ONLY FOR EARLIEST APPOINTMENT
	;;^UTILITY(U,$J,357.92,3,0)
	;;=ONLY IF MULTIPLE APPOINTMENTS

IBINI08R
IBINI08R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358,0,"GL")
	;;=^IBE(358,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM",358)
	;;=
	;;^DIC(358,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358,"%D",1,0)
	;;= 
	;;^DIC(358,"%D",2,0)
	;;=This file is nearly identical to file #357. It is used by the Import/Export
	;;^DIC(358,"%D",3,0)
	;;=Utility as a temporary staging area for data from that file that is being
	;;^DIC(358,"%D",4,0)
	;;=imported or exported.
	;;^DD(358,0)
	;;=FIELD^^1^9
	;;^DD(358,0,"DDA")
	;;=N
	;;^DD(358,0,"DT")
	;;=2931201
	;;^DD(358,0,"ID",.03)
	;;=W "   ",$P(^(0),U,3)
	;;^DD(358,0,"IX","B",358,.01)
	;;=
	;;^DD(358,0,"IX","C",358,.07)
	;;=
	;;^DD(358,0,"NM","IMP/EXP ENCOUNTER FORM")
	;;=
	;;^DD(358,0,"PT",358.1,.02)
	;;=
	;;^DD(358,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358,.01,1,0)
	;;=^.1
	;;^DD(358,.01,1,1,0)
	;;=358^B
	;;^DD(358,.01,1,1,1)
	;;=S ^IBE(358,"B",$E(X,1,30),DA)=""
	;;^DD(358,.01,1,1,2)
	;;=K ^IBE(358,"B",$E(X,1,30),DA)
	;;^DD(358,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358,.01,21,1,0)
	;;= 
	;;^DD(358,.01,21,2,0)
	;;=The name of the encounter form.
	;;^DD(358,.01,"DEL",1,0)
	;;=I 1 W "...Encounter Forms can only be deleted through the",!," DELETE UNUSED FORM action in the Encounter Form Utilities!"
	;;^DD(358,.01,"DT")
	;;=2930225
	;;^DD(358,.03,0)
	;;=BRIEF DESCRIPTION^RF^^0;3^K:$L(X)>80!($L(X)<1) X
	;;^DD(358,.03,.1)
	;;=BRIEF DESRIPTION OF FORM'S USE & CONTENT
	;;^DD(358,.03,3)
	;;=Enter a brief description of the intended use of the form or its contents.
	;;^DD(358,.03,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.03,21,1,0)
	;;= 
	;;^DD(358,.03,21,2,0)
	;;=A brief description of the contents of the form and its intended use. This
	;;^DD(358,.03,21,3,0)
	;;=description will be displayed to the user.
	;;^DD(358,.03,"DT")
	;;=2930420
	;;^DD(358,.04,0)
	;;=TYPE OF USE^RS^1:OUTPATIENT ENCOUNTER FORM;^0;4^Q
	;;^DD(358,.04,3)
	;;=How will the form be used?
	;;^DD(358,.04,"DT")
	;;=2930802
	;;^DD(358,.05,0)
	;;=COMPILED?^S^0:NO;1:YES;^0;5^Q
	;;^DD(358,.05,"DT")
	;;=2931201
	;;^DD(358,.07,0)
	;;=TOOL KIT^RS^0:NO;1:YES;^0;7^Q
	;;^DD(358,.07,1,0)
	;;=^.1
	;;^DD(358,.07,1,1,0)
	;;=358^C
	;;^DD(358,.07,1,1,1)
	;;=S ^IBE(358,"C",$E(X,1,30),DA)=""
	;;^DD(358,.07,1,1,2)
	;;=K ^IBE(358,"C",$E(X,1,30),DA)
	;;^DD(358,.07,1,1,"%D",0)
	;;=^^1^1^2930624^
	;;^DD(358,.07,1,1,"%D",1,0)
	;;=Used to find all of the tool kit forms.
	;;^DD(358,.07,1,1,"DT")
	;;=2930624
	;;^DD(358,.07,3)
	;;=Is this form part of the tool kit?
	;;^DD(358,.07,21,0)
	;;=^^3^3^2930607^
	;;^DD(358,.07,21,1,0)
	;;= 
	;;^DD(358,.07,21,2,0)
	;;=This field, if set to YES, means that the form can not be deleted and can
	;;^DD(358,.07,21,3,0)
	;;=not be added to a clinic setup.
	;;^DD(358,.07,"DT")
	;;=2930624
	;;^DD(358,.09,0)
	;;=RIGHT MARGIN^RNJ3,0^^0;9^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.09,.1)
	;;=FORM'S RIGHT MARGIN (WIDTH IN CHARACTERS)
	;;^DD(358,.09,3)
	;;=How many columns (characters) wide should the form be?
	;;^DD(358,.09,21,0)
	;;=^^2^2^2930607^
	;;^DD(358,.09,21,1,0)
	;;= 
	;;^DD(358,.09,21,2,0)
	;;=The number of characters wide the form is.
	;;^DD(358,.09,"DT")
	;;=2930420
	;;^DD(358,.1,0)
	;;=PAGE LENGTH^RNJ3,0^^0;10^K:+X'=X!(X>300)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358,.1,.1)
	;;=FORM'S PAGE LENGTH (IN LINES)
	;;^DD(358,.1,3)
	;;=How many lines should the form have?
	;;^DD(358,.1,21,0)
	;;=^^2^2^2921213^
	;;^DD(358,.1,21,1,0)
	;;= 
	;;^DD(358,.1,21,2,0)
	;;=This is the number of usable lines on the page.
	;;^DD(358,.1,"DT")
	;;=2930420
	;;^DD(358,.11,0)
	;;=NUMBER OF PAGES^RNJ2,0^^0;11^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X

IBINI08S
IBINI08S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358,.11,3)
	;;=How many pages should the encounter form have?
	;;^DD(358,.11,21,0)
	;;=^^1^1^2930602^
	;;^DD(358,.11,21,1,0)
	;;=The encounter form may have multiple pages.
	;;^DD(358,.11,"DT")
	;;=2930602
	;;^DD(358,1,0)
	;;=EXPORT NOTES^358.01^^1;0
	;;^DD(358,1,21,0)
	;;=^^3^3^2930806^
	;;^DD(358,1,21,1,0)
	;;=Used to describe the form to other sites. The form can not be displayed
	;;^DD(358,1,21,2,0)
	;;=until after it is imported. Maybe if they knew more about it they wouldn't
	;;^DD(358,1,21,3,0)
	;;=want to import it! They will be able to read the EXPORT NOTES before importing it.
	;;^DD(358.01,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.01,0,"DT")
	;;=2930806
	;;^DD(358.01,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.01,0,"UP")
	;;=358
	;;^DD(358.01,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.01,.01,3)
	;;=What should other sites know about this form before importing it? The other site will not be able to display it until after they import it.
	;;^DD(358.01,.01,"DT")
	;;=2930806

IBINI08T
IBINI08T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.1,0,"GL")
	;;=^IBE(358.1,
	;;^DIC("B","IMP/EXP ENCOUNTER FORM BLOCK",358.1)
	;;=
	;;^DIC(358.1,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.1,"%D",1,0)
	;;= 
	;;^DIC(358.1,"%D",2,0)
	;;=This file is nearly identical to file #357.1. It is used by the
	;;^DIC(358.1,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.1,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.1,0)
	;;=FIELD^^1^12
	;;^DD(358.1,0,"DT")
	;;=2930806
	;;^DD(358.1,0,"ID",.02)
	;;=W ""
	;;^DD(358.1,0,"IX","B",358.1,.01)
	;;=
	;;^DD(358.1,0,"IX","C",358.1,.02)
	;;=
	;;^DD(358.1,0,"IX","D",358.1,.14)
	;;=
	;;^DD(358.1,0,"NM","IMP/EXP ENCOUNTER FORM BLOCK")
	;;=
	;;^DD(358.1,0,"PT",358.2,.02)
	;;=
	;;^DD(358.1,0,"PT",358.5,.02)
	;;=
	;;^DD(358.1,0,"PT",358.7,.06)
	;;=
	;;^DD(358.1,0,"PT",358.8,.02)
	;;=
	;;^DD(358.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.1,.01,1,0)
	;;=^.1
	;;^DD(358.1,.01,1,1,0)
	;;=358.1^B
	;;^DD(358.1,.01,1,1,1)
	;;=S ^IBE(358.1,"B",$E(X,1,30),DA)=""
	;;^DD(358.1,.01,1,1,2)
	;;=K ^IBE(358.1,"B",$E(X,1,30),DA)
	;;^DD(358.1,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.1,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.01,21,1,0)
	;;= 
	;;^DD(358.1,.01,21,2,0)
	;;=The name of the block.
	;;^DD(358.1,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Encounter Form Blocks can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.1,.02,0)
	;;=FORM^RP358'^IBE(358,^0;2^Q
	;;^DD(358.1,.02,1,0)
	;;=^.1
	;;^DD(358.1,.02,1,1,0)
	;;=358.1^C
	;;^DD(358.1,.02,1,1,1)
	;;=S ^IBE(358.1,"C",$E(X,1,30),DA)=""
	;;^DD(358.1,.02,1,1,2)
	;;=K ^IBE(358.1,"C",$E(X,1,30),DA)
	;;^DD(358.1,.02,1,1,"%D",0)
	;;=^^1^1^2921116^
	;;^DD(358.1,.02,1,1,"%D",1,0)
	;;=Used to find all the blocks belonging to a particular form.
	;;^DD(358.1,.02,1,1,"DT")
	;;=2921116
	;;^DD(358.1,.02,3)
	;;=What form should this block appear on?
	;;^DD(358.1,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.1,.02,21,1,0)
	;;= 
	;;^DD(358.1,.02,21,2,0)
	;;=The form the block appears on.
	;;^DD(358.1,.02,"DT")
	;;=2930802
	;;^DD(358.1,.04,0)
	;;=BLOCK'S STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.04,.1)
	;;=WHAT ROW SHOULD THE BLOCK START IN?
	;;^DD(358.1,.04,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.04,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.04,3)
	;;=What line should this block begin on?
	;;^DD(358.1,.04,21,0)
	;;=^^1^1^2930715^^^
	;;^DD(358.1,.04,21,1,0)
	;;=The row  on the encounter form that the block starts on.
	;;^DD(358.1,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.1,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.04,23,3,0)
	;;=it is convenient to work with displacements fromt the top left-hand
	;;^DD(358.1,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.04,"DT")
	;;=2930715
	;;^DD(358.1,.05,0)
	;;=BLOCK'S STARTING COLUMN^RNJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.1,.05,.1)
	;;=WHAT COLUMN SHOULD THE BLOCK START IN?
	;;^DD(358.1,.05,2)
	;;=S Y(0)=Y S Y=(+Y)+1
	;;^DD(358.1,.05,2.1)
	;;=S Y=(+Y)+1
	;;^DD(358.1,.05,3)
	;;=What column should this block begin on?
	;;^DD(358.1,.05,21,0)
	;;=^^1^1^2930715^^
	;;^DD(358.1,.05,21,1,0)
	;;=The column on the encounter form that the block starts on.
	;;^DD(358.1,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.1,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation

IBINI08U
IBINI08U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.1,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.1,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.1,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.1,.05,"DT")
	;;=2930715
	;;^DD(358.1,.06,0)
	;;=WIDTH IN CHARACTERS^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.06,.1)
	;;=HOW MANY CHARACTERS WIDE SHOULD THE BLOCK BE?
	;;^DD(358.1,.06,3)
	;;=How many characters wide should this block be?
	;;^DD(358.1,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.06,21,1,0)
	;;= 
	;;^DD(358.1,.06,21,2,0)
	;;=The width of the block, measured in the number of characters across.
	;;^DD(358.1,.06,"DT")
	;;=2930415
	;;^DD(358.1,.07,0)
	;;=HEIGHT IN LINES^RNJ3,0^^0;7^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.1,.07,.1)
	;;=HOW MANY LINES HIGH SHOULD THE BLOCK BE?
	;;^DD(358.1,.07,3)
	;;=How many lines high should this block be?
	;;^DD(358.1,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.07,21,1,0)
	;;= 
	;;^DD(358.1,.07,21,2,0)
	;;=The height of the block, measured by the number of lines it takes up.
	;;^DD(358.1,.07,"DT")
	;;=2930415
	;;^DD(358.1,.1,0)
	;;=OUTLINE TYPE^RS^1:SOLID LINE;2:INVISIBLE;^0;10^Q
	;;^DD(358.1,.1,.1)
	;;=OUTLINE TYPE (SOLID/INVISIBLE)
	;;^DD(358.1,.1,3)
	;;=Enter '1' if the block should have a box around it, '2' if not.
	;;^DD(358.1,.1,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.1,21,1,0)
	;;= 
	;;^DD(358.1,.1,21,2,0)
	;;=How the block is outlined on the form.
	;;^DD(358.1,.1,"DT")
	;;=2930415
	;;^DD(358.1,.11,0)
	;;=BLOCK HEADER^F^^0;11^K:$L(X)>60!($L(X)<1) X
	;;^DD(358.1,.11,.1)
	;;=WHAT HEADER WOULD SHOULD APPEAR AT THE TOP OF THE BLOCK? (OPTIONAL)
	;;^DD(358.1,.11,3)
	;;=What text should appear at the top of the block?
	;;^DD(358.1,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.1,.11,21,1,0)
	;;= 
	;;^DD(358.1,.11,21,2,0)
	;;=The text appearing at the top of the block.
	;;^DD(358.1,.11,"DT")
	;;=2930415
	;;^DD(358.1,.12,0)
	;;=HEADER APPEARANCE^FX^^0;12^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.1,.12,.1)
	;;=HOW SHOULD THE BLOCK HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.1,.12,3)
	;;=B=bold, U=underline, C=center. You can enter any combination of {B,U,C}.
	;;^DD(358.1,.12,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.12,21,1,0)
	;;= 
	;;^DD(358.1,.12,21,2,0)
	;;=A description of the block's contents and use.
	;;^DD(358.1,.12,"DT")
	;;=2930616
	;;^DD(358.1,.13,0)
	;;=BRIEF DESCRIPTION^RF^^0;13^K:$L(X)>80!($L(X)<1) X
	;;^DD(358.1,.13,.1)
	;;=ENTER A BRIEF DESCRIPTION OF THE USE & CONTENTS OF THE BLOCK
	;;^DD(358.1,.13,3)
	;;=Answer must be 1-80 characters in length.
	;;^DD(358.1,.13,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.1,.13,21,1,0)
	;;= 
	;;^DD(358.1,.13,21,2,0)
	;;=A brief description of the contents or use of the block.
	;;^DD(358.1,.13,"DT")
	;;=2930415
	;;^DD(358.1,.14,0)
	;;=TOOL KIT ORDER^NJ6,2^^0;14^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.1,.14,1,0)
	;;=^.1
	;;^DD(358.1,.14,1,1,0)
	;;=358.1^D
	;;^DD(358.1,.14,1,1,1)
	;;=S ^IBE(358.1,"D",$E(X,1,30),DA)=""
	;;^DD(358.1,.14,1,1,2)
	;;=K ^IBE(358.1,"D",$E(X,1,30),DA)
	;;^DD(358.1,.14,1,1,"%D",0)
	;;=^^2^2^2930108^
	;;^DD(358.1,.14,1,1,"%D",1,0)
	;;=This index is used to locate all the 'tool box' blocs that can be used 
	;;^DD(358.1,.14,1,1,"%D",2,0)
	;;=as templates to create a new block to be added to a form.
	;;^DD(358.1,.14,1,1,"DT")
	;;=2930108
	;;^DD(358.1,.14,3)
	;;=Enter a numeric value >0 if this block is part of the tool kit. The number will determine its listed order.

IBINI08V
IBINI08V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.1,.14,21,0)
	;;=^^4^4^2930607^
	;;^DD(358.1,.14,21,1,0)
	;;= 
	;;^DD(358.1,.14,21,2,0)
	;;=A value greater than 0 means that the block belongs to the tool kit. The
	;;^DD(358.1,.14,21,3,0)
	;;=value also determines the order that the block will be listed to the
	;;^DD(358.1,.14,21,4,0)
	;;=screen that displays the tool kit blocks.
	;;^DD(358.1,.14,"DT")
	;;=2930309
	;;^DD(358.1,1,0)
	;;=EXPORT NOTES^358.11^^1;0
	;;^DD(358.1,1,21,0)
	;;=^^2^2^2930806^
	;;^DD(358.1,1,21,1,0)
	;;=Should be give other sites information that will enable them to decide
	;;^DD(358.1,1,21,2,0)
	;;=whether or not they want to import the block. Only applies to tool kit blocks.
	;;^DD(358.11,0)
	;;=EXPORT NOTES SUB-FIELD^^.01^1
	;;^DD(358.11,0,"DT")
	;;=2930806
	;;^DD(358.11,0,"NM","EXPORT NOTES")
	;;=
	;;^DD(358.11,0,"UP")
	;;=358.1
	;;^DD(358.11,.01,0)
	;;=EXPORT NOTES^W^^0;1^Q
	;;^DD(358.11,.01,3)
	;;=What should other sites know about this tool kit block before importing it?
	;;^DD(358.11,.01,"DT")
	;;=2930806

IBINI08W
IBINI08W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.2,0,"GL")
	;;=^IBE(358.2,
	;;^DIC("B","IMP/EXP SELECTION LIST",358.2)
	;;=
	;;^DIC(358.2,"%D",0)
	;;=^^10^10^2940217^
	;;^DIC(358.2,"%D",1,0)
	;;= 
	;;^DIC(358.2,"%D",2,0)
	;;= 
	;;^DIC(358.2,"%D",3,0)
	;;= 
	;;^DIC(358.2,"%D",4,0)
	;;= 
	;;^DIC(358.2,"%D",5,0)
	;;= 
	;;^DIC(358.2,"%D",6,0)
	;;= 
	;;^DIC(358.2,"%D",7,0)
	;;= 
	;;^DIC(358.2,"%D",8,0)
	;;=This file is nearly identical to file #357.2 . It is used by the
	;;^DIC(358.2,"%D",9,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.2,"%D",10,0)
	;;=that is being imported or exported.
	;;^DD(358.2,0)
	;;=FIELD^^2^12
	;;^DD(358.2,0,"ID",.02)
	;;=W ""
	;;^DD(358.2,0,"ID",.11)
	;;=W ""
	;;^DD(358.2,0,"IX","B",358.2,.01)
	;;=
	;;^DD(358.2,0,"IX","C",358.2,.02)
	;;=
	;;^DD(358.2,0,"NM","IMP/EXP SELECTION LIST")
	;;=
	;;^DD(358.2,0,"PT",358.3,.03)
	;;=
	;;^DD(358.2,0,"PT",358.4,.03)
	;;=
	;;^DD(358.2,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.2,.01,1,0)
	;;=^.1
	;;^DD(358.2,.01,1,1,0)
	;;=358.2^B
	;;^DD(358.2,.01,1,1,1)
	;;=S ^IBE(358.2,"B",$E(X,1,30),DA)=""
	;;^DD(358.2,.01,1,1,2)
	;;=K ^IBE(358.2,"B",$E(X,1,30),DA)
	;;^DD(358.2,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.2,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.01,21,1,0)
	;;= 
	;;^DD(358.2,.01,21,2,0)
	;;=The name of the list.
	;;^DD(358.2,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Lists can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.2,.01,"DT")
	;;=2921119
	;;^DD(358.2,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.2,.02,1,0)
	;;=^.1
	;;^DD(358.2,.02,1,1,0)
	;;=358.2^C
	;;^DD(358.2,.02,1,1,1)
	;;=S ^IBE(358.2,"C",$E(X,1,30),DA)=""
	;;^DD(358.2,.02,1,1,2)
	;;=K ^IBE(358.2,"C",$E(X,1,30),DA)
	;;^DD(358.2,.02,1,1,"DT")
	;;=2921207
	;;^DD(358.2,.02,3)
	;;=Enter the block that the selection list should appear in.
	;;^DD(358.2,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.02,21,1,0)
	;;=The block that the list appears on. The position of the selection list is
	;;^DD(358.2,.02,21,2,0)
	;;=relative to the block.
	;;^DD(358.2,.02,"DT")
	;;=2921207
	;;^DD(358.2,.05,0)
	;;=COLUMN HEADER^F^^0;5^K:$L(X)>70!($L(X)<1) X
	;;^DD(358.2,.05,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF EACH COLUMN? (OPTIONAL)
	;;^DD(358.2,.05,3)
	;;=This header will appear at the top of the column that contains the list. If there is more than one column it will appear at the top of each.
	;;^DD(358.2,.05,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.05,21,1,0)
	;;= 
	;;^DD(358.2,.05,21,2,0)
	;;=The text that appears at the top of each column (NOT subcolumn).
	;;^DD(358.2,.05,"DT")
	;;=2930415
	;;^DD(358.2,.06,0)
	;;=COLUMN HEADER APPEARANCE^FX^^0;6^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.2,.06,.1)
	;;=HOW SHOULD THE COLUMN HEADER APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.2,.06,3)
	;;=B=bold,U=underline,C=center. You can enter any combination of {B,U,C}.
	;;^DD(358.2,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.06,21,1,0)
	;;= 
	;;^DD(358.2,.06,21,2,0)
	;;=The column header can be give characteristics, such as centered and bold.
	;;^DD(358.2,.06,"DT")
	;;=2930616
	;;^DD(358.2,.07,0)
	;;=SUBCOLUMNS SEPARATED WITH?^RS^1:ONE SPACE;2:TWO SPACES;3:LINE;4:SPACE/LINE/SPACE;^0;7^Q
	;;^DD(358.2,.07,.1)
	;;=HOW SHOULD THE SUBCOLUMNS BE SEPARATED?
	;;^DD(358.2,.07,3)
	;;=How should the subcolumns be separated?
	;;^DD(358.2,.07,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.07,21,1,0)
	;;= 
	;;^DD(358.2,.07,21,2,0)
	;;=What characters are used to separate the subcolumns.
	;;^DD(358.2,.07,"DT")
	;;=2930415

IBINI08X
IBINI08X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.2,.08,0)
	;;=EXTRA LINES FOR SELECTIONS^NJ1,0^^0;8^K:+X'=X!(X>9)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.2,.08,.1)
	;;=NUMBER OF ADDITIONAL LINES FOR EACH ENTRY ON LIST?
	;;^DD(358.2,.08,3)
	;;=How many extra lines should be allocated for each selection, in addition to the 1 the selection will print on?
	;;^DD(358.2,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.2,.08,21,1,0)
	;;= 
	;;^DD(358.2,.08,21,2,0)
	;;=Each entry on the list prints on only one line. However, if you want
	;;^DD(358.2,.08,21,3,0)
	;;=extra space to appear below each entry on the list then this field should
	;;^DD(358.2,.08,21,4,0)
	;;=be set to the number of blank lines desired.
	;;^DD(358.2,.08,"DT")
	;;=2930427
	;;^DD(358.2,.09,0)
	;;=GROUP HEADER APPEARANCE^FX^^0;9^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBC"'[$E(X,1))!("UBC"'[$E(X,2))!("UBC"'[$E(X,3)) X
	;;^DD(358.2,.09,.1)
	;;=HOW SHOULD THE HEADER FOR EACH GROUP OF ENTRIES APPEAR? CHOOSE FROM {U,B,C}
	;;^DD(358.2,.09,3)
	;;=B=bold, C=center,U=underline. You can enter any combination of {B,C,U}
	;;^DD(358.2,.09,21,0)
	;;=^^1^1^2930401^^^
	;;^DD(358.2,.09,21,1,0)
	;;=This field determines the appearance of the group headers.
	;;^DD(358.2,.09,"DT")
	;;=2930616
	;;^DD(358.2,.11,0)
	;;=SELECTION ROUTINE^R*P358.6'^IBE(358.6,^0;11^S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.2,.11,3)
	;;=Enter the package interface used to obtain this list.
	;;^DD(358.2,.11,12)
	;;=Allows only available selection routines.
	;;^DD(358.2,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=3,$P(^(0),U,9)=1"
	;;^DD(358.2,.11,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.11,21,1,0)
	;;= 
	;;^DD(358.2,.11,21,2,0)
	;;=This identifies the Package Interface that is used to fill the list.
	;;^DD(358.2,.11,"DT")
	;;=2930115
	;;^DD(358.2,.12,0)
	;;=UNDERLINE SELECTIONS?^RS^0:NO;1:YES;^0;12^Q
	;;^DD(358.2,.12,.1)
	;;=SHOULD EACH ENTRY ON THE LIST BE UNDERLINED? (YES/NO)
	;;^DD(358.2,.12,3)
	;;=Should the items on the list be underlined?
	;;^DD(358.2,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.2,.12,21,1,0)
	;;= 
	;;^DD(358.2,.12,21,2,0)
	;;=Answer yes if each entry on the list should be underlined.
	;;^DD(358.2,.12,"DT")
	;;=2930414
	;;^DD(358.2,.13,0)
	;;=NUMBER OF COLUMNS^NJ2,0^^0;13^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.2,.13,.1)
	;;=HOW MANY COLUMNS OF LIST ENTRIES SHOULD THE LIST HAVE? (OPTIONAL)
	;;^DD(358.2,.13,3)
	;;=
	;;^DD(358.2,.13,4)
	;;=D HELP5^IBDFU5
	;;^DD(358.2,.13,21,0)
	;;=^^6^6^2930527^
	;;^DD(358.2,.13,21,1,0)
	;;= 
	;;^DD(358.2,.13,21,2,0)
	;;=A selection list may be displayed in an area several columns wide. The
	;;^DD(358.2,.13,21,3,0)
	;;=starting position and height of each column may be specified. However, it
	;;^DD(358.2,.13,21,4,0)
	;;=is not necessary because defaults values will be used. The defaults used
	;;^DD(358.2,.13,21,6,0)
	;;=and that the entire block should be filled.
	;;^DD(358.2,.13,"DT")
	;;=2930802
	;;^DD(358.2,1,0)
	;;=LIST COLUMN^358.21I^^1;0
	;;^DD(358.2,1,21,0)
	;;=^^2^2^2930802^^^^
	;;^DD(358.2,1,21,1,0)
	;;=A column is a rectangular area that has the necessary width to display a
	;;^DD(358.2,1,21,2,0)
	;;=single item on the list.
	;;^DD(358.2,1,"DT")
	;;=2930802
	;;^DD(358.2,2,0)
	;;=SUBCOLUMN NUMBER^358.22I^^2;0
	;;^DD(358.2,2,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.2,2,21,1,0)
	;;= 
	;;^DD(358.2,2,21,2,0)
	;;=A subcolumn contains one field of the entry on the list. The subcolumn
	;;^DD(358.2,2,21,3,0)
	;;=order is the order, from left to right, that the subcolumns will appear
	;;^DD(358.2,2,21,4,0)
	;;=in.
	;;^DD(358.2,2,"DT")
	;;=2930413

IBINI08Y
IBINI08Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.21,0)
	;;=LIST COLUMN SUB-FIELD^^.04^4
	;;^DD(358.21,0,"ID","WRITE")
	;;=W "  COLUMN #",$P($G(^(0)),U)
	;;^DD(358.21,0,"IX","B",358.21,.01)
	;;=
	;;^DD(358.21,0,"NM","LIST COLUMN")
	;;=
	;;^DD(358.21,0,"UP")
	;;=358.2
	;;^DD(358.21,.01,0)
	;;=LIST COLUMN NUMBER^MNJ1,0^^0;1^K:+X'=X!(X>4)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.01,1,0)
	;;=^.1
	;;^DD(358.21,.01,1,1,0)
	;;=358.21^B
	;;^DD(358.21,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.21,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.21,.01,3)
	;;=You can specify the position and height of up to 4 columns. Defaults will be used where needed.
	;;^DD(358.21,.01,21,0)
	;;=^^2^2^2930722^^
	;;^DD(358.21,.01,21,1,0)
	;;=The order that the columns will be filled. Column 1 will first be filled
	;;^DD(358.21,.01,21,2,0)
	;;=with items, then column 2, etc.
	;;^DD(358.21,.01,"DT")
	;;=2930802
	;;^DD(358.21,.02,0)
	;;=LIST COLUMN'S STARTING ROW^NJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.02,.1)
	;;=WHAT ROW SHOULD THE LIST COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.02,3)
	;;=What row should the column begin in?
	;;^DD(358.21,.02,21,0)
	;;=^^2^2^2930715^^^
	;;^DD(358.21,.02,21,1,0)
	;;=The row, relative to the block, that the column should begin in. This is
	;;^DD(358.21,.02,21,2,0)
	;;=optional, since default values can be used.
	;;^DD(358.21,.02,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.21,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.02,"DT")
	;;=2930802
	;;^DD(358.21,.03,0)
	;;=LIST COLUMN'S STARTING COLUMN^NJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.21,.03,.1)
	;;=WHAT LIST COLUMN SHOULD THE COLUMN START IN? (OPTIONAL)
	;;^DD(358.21,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.21,.03,3)
	;;=At what block column should the list column begin at? The first subcolumn of the list column will start one character to the right of this.
	;;^DD(358.21,.03,21,0)
	;;=^^3^3^2930715^^
	;;^DD(358.21,.03,21,1,0)
	;;= 
	;;^DD(358.21,.03,21,2,0)
	;;=The column (# of characters to the right) that the column should begin in,
	;;^DD(358.21,.03,21,3,0)
	;;=relative to the block. It is optional, since a default value can be used.
	;;^DD(358.21,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.21,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.21,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.21,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.21,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.21,.03,"DT")
	;;=2930802
	;;^DD(358.21,.04,0)
	;;=LIST COLUMN HEIGHT^NJ3,0^^0;4^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.21,.04,.1)
	;;=HOW MANY LINES HIGH SHOULD THE LIST COLUMN BE? (OPTIONAL)
	;;^DD(358.21,.04,3)
	;;=How many lines should the column cover?
	;;^DD(358.21,.04,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.21,.04,21,1,0)
	;;= 
	;;^DD(358.21,.04,21,2,0)
	;;=The number of lines the column should occupy. This is optional - if not

IBINI08Z
IBINI08Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.21,.04,21,3,0)
	;;=supplied the column will extend to the bottom of the block.
	;;^DD(358.21,.04,"DT")
	;;=2930802
	;;^DD(358.22,0)
	;;=SUBCOLUMN NUMBER SUB-FIELD^^.07^7
	;;^DD(358.22,0,"ID","WRITE")
	;;=D ID1^IBDFU5
	;;^DD(358.22,0,"IX","B",358.22,.01)
	;;=
	;;^DD(358.22,0,"NM","SUBCOLUMN NUMBER")
	;;=
	;;^DD(358.22,0,"UP")
	;;=358.2
	;;^DD(358.22,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.2,DA(1),2,"B",X))) X
	;;^DD(358.22,.01,.1)
	;;=Number of the subcolumn, subcolumns being numbered 1-6, left-to-right
	;;^DD(358.22,.01,1,0)
	;;=^.1
	;;^DD(358.22,.01,1,1,0)
	;;=358.22^B
	;;^DD(358.22,.01,1,1,1)
	;;=S ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.22,.01,1,1,2)
	;;=K ^IBE(358.2,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.22,.01,3)
	;;=The SUBCOLUMN NUMBER determines the order in which the subcolumns will display. There are at most 6 subcolumns, numbered 1-6.
	;;^DD(358.22,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.01,21,1,0)
	;;= 
	;;^DD(358.22,.01,21,2,0)
	;;=The order that the subcolumn will appear on the form.
	;;^DD(358.22,.01,"DT")
	;;=2930413
	;;^DD(358.22,.02,0)
	;;=SUBCOLUMN HEADER^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.22,.02,.1)
	;;=WHAT TEXT SHOULD APPEAR AT THE TOP OF THE SUBCOLUMN?
	;;^DD(358.22,.02,3)
	;;=What text should appear at the top of the subcolumn?
	;;^DD(358.22,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.02,21,1,0)
	;;= 
	;;^DD(358.22,.02,21,2,0)
	;;=The text that will appear at the top of the subcolumn.
	;;^DD(358.22,.02,"DT")
	;;=2930414
	;;^DD(358.22,.03,0)
	;;=SUBCOLUMN WIDTH^NJ3,0^^0;3^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.22,.03,.1)
	;;=HOW WIDE SHOULD THE SUBCOLUMN BE?
	;;^DD(358.22,.03,3)
	;;=How wide should the subcolumn be?
	;;^DD(358.22,.03,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.22,.03,21,1,0)
	;;= 
	;;^DD(358.22,.03,21,2,0)
	;;=The width of the subcolumn. If the subcolumn contains a MARKING AREA then
	;;^DD(358.22,.03,21,3,0)
	;;=the width of the MARKING AREA overrides what ever this is.
	;;^DD(358.22,.03,"DT")
	;;=2930414
	;;^DD(358.22,.04,0)
	;;=TYPE OF SUBCOLUMN^RS^1:TEXT;2:MARKING;^0;4^Q
	;;^DD(358.22,.04,.1)
	;;=SUBCOLUMN CONTAINS TEXT, OR FOR MARKING? (TEXT/MARKING)
	;;^DD(358.22,.04,3)
	;;=Enter '1' if the subcolumn will contain text, '2' if it will be for the user to mark his selections.
	;;^DD(358.22,.04,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.04,21,1,0)
	;;= 
	;;^DD(358.22,.04,21,2,0)
	;;=The subcolumn can contain either text, derived from what is returned by
	;;^DD(358.22,.04,21,3,0)
	;;=the PACKAGE INTERFACE, or a MARKING AREA, which is meant to be written in
	;;^DD(358.22,.04,21,4,0)
	;;=to select an entry on the list.
	;;^DD(358.22,.04,"DT")
	;;=2930428
	;;^DD(358.22,.05,0)
	;;=SUBCOLUMN'S DATA^NJ1,0X^^0;5^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,(2*X)-1)="")!((X=1)&'$P($G(^IBE(358.6,+$P($G(^IBE(358.2,DA(1),0)),U,11),2)),U,17)) X
	;;^DD(358.22,.05,.1)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,3)
	;;=WHAT DATA SHOULD BE CONTAINED IN THE SUBCOLUMN?
	;;^DD(358.22,.05,4)
	;;=D HELP2^IBDFU5
	;;^DD(358.22,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.22,.05,21,1,0)
	;;= 
	;;^DD(358.22,.05,21,2,0)
	;;=The Package Interface returns a record, which is composed of fields. This
	;;^DD(358.22,.05,21,3,0)
	;;=identifies which field goes in the subcolumn.
	;;^DD(358.22,.05,"DT")
	;;=2930810
	;;^DD(358.22,.06,0)
	;;=MARKING AREA^P358.91'^IBE(358.91,^0;6^Q
	;;^DD(358.22,.06,.1)
	;;=TYPE OF MARKING AREA

IBINI090
IBINI090	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.22,.06,3)
	;;=What type of marking area should appear in the subcolumn?
	;;^DD(358.22,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.22,.06,21,1,0)
	;;= 
	;;^DD(358.22,.06,21,2,0)
	;;=This identifies which MARKING AREA should go in the subcolumn.
	;;^DD(358.22,.06,"DT")
	;;=2930414
	;;^DD(358.22,.07,0)
	;;=ALLOW EDITING OF TEXT?^S^0:NO;1:YES;^0;7^Q
	;;^DD(358.22,.07,.1)
	;;=ALLOW EDITING OF THE TEXT APPEARING IN THIS SUBCOLUMN? (YES/NO)
	;;^DD(358.22,.07,3)
	;;=Is it okey to edit the text appearing in this subcolumn?
	;;^DD(358.22,.07,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.22,.07,21,1,0)
	;;= 
	;;^DD(358.22,.07,21,2,0)
	;;=This determines whether or not the user, when selecting items to appear on
	;;^DD(358.22,.07,21,3,0)
	;;=the list, will be able to edit the text appearing in the subcolum. This is
	;;^DD(358.22,.07,21,4,0)
	;;=ignored if the subcolumn contains a MARKING AREA.
	;;^DD(358.22,.07,"DT")
	;;=2930428

IBINI091
IBINI091	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.3,0,"GL")
	;;=^IBE(358.3,
	;;^DIC("B","IMP/EXP SELECTION",358.3)
	;;=
	;;^DIC(358.3,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.3,"%D",1,0)
	;;= 
	;;^DIC(358.3,"%D",2,0)
	;;=This file is nearly identical to file #357.3. It is used by the
	;;^DIC(358.3,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.3,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.3,0)
	;;=FIELD^^1^5
	;;^DD(358.3,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"ID",.04)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.4,+$P(^(0),U,4),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.4,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.3,0,"IX","APO",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","APO1",358.3,.04)
	;;=
	;;^DD(358.3,0,"IX","APO2",358.3,.05)
	;;=
	;;^DD(358.3,0,"IX","B",358.3,.01)
	;;=
	;;^DD(358.3,0,"IX","C",358.3,.03)
	;;=
	;;^DD(358.3,0,"IX","D",358.3,.04)
	;;=
	;;^DD(358.3,0,"NM","IMP/EXP SELECTION")
	;;=
	;;^DD(358.3,.01,0)
	;;=SELECTION ID^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.3,.01,1,0)
	;;=^.1
	;;^DD(358.3,.01,1,1,0)
	;;=358.3^B
	;;^DD(358.3,.01,1,1,1)
	;;=S ^IBE(358.3,"B",$E(X,1,30),DA)=""
	;;^DD(358.3,.01,1,1,2)
	;;=K ^IBE(358.3,"B",$E(X,1,30),DA)
	;;^DD(358.3,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.3,.01,21,0)
	;;=^^2^2^2930309^
	;;^DD(358.3,.01,21,1,0)
	;;= 
	;;^DD(358.3,.01,21,2,0)
	;;=The ID passed by the package.
	;;^DD(358.3,.01,"DT")
	;;=2921119
	;;^DD(358.3,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.3,.03,1,0)
	;;=^.1
	;;^DD(358.3,.03,1,1,0)
	;;=358.3^C
	;;^DD(358.3,.03,1,1,1)
	;;=S ^IBE(358.3,"C",$E(X,1,30),DA)=""
	;;^DD(358.3,.03,1,1,2)
	;;=K ^IBE(358.3,"C",$E(X,1,30),DA)
	;;^DD(358.3,.03,1,1,"DT")
	;;=2921127
	;;^DD(358.3,.03,1,2,0)
	;;=358.3^APO^MUMPS
	;;^DD(358.3,.03,1,2,1)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,4) S ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)=""
	;;^DD(358.3,.03,1,2,2)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,4) K ^IBE(358.3,"APO",X,$P(^(0),U,4),$P(^(0),U,5),DA)
	;;^DD(358.3,.03,1,2,"DT")
	;;=2921222
	;;^DD(358.3,.03,21,0)
	;;=^^2^2^2921215^
	;;^DD(358.3,.03,21,1,0)
	;;= 
	;;^DD(358.3,.03,21,2,0)
	;;=Identifies the selection list that this selection belongs on.
	;;^DD(358.3,.03,"DT")
	;;=2921222
	;;^DD(358.3,.04,0)
	;;=SELECTION GROUP^RP358.4^IBE(358.4,^0;4^Q
	;;^DD(358.3,.04,1,0)
	;;=^.1
	;;^DD(358.3,.04,1,1,0)
	;;=358.3^D
	;;^DD(358.3,.04,1,1,1)
	;;=S ^IBE(358.3,"D",$E(X,1,30),DA)=""
	;;^DD(358.3,.04,1,1,2)
	;;=K ^IBE(358.3,"D",$E(X,1,30),DA)
	;;^DD(358.3,.04,1,1,"DT")
	;;=2921221
	;;^DD(358.3,.04,1,2,0)
	;;=358.3^APO1^MUMPS
	;;^DD(358.3,.04,1,2,1)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,3) S ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)=""
	;;^DD(358.3,.04,1,2,2)
	;;=I $P(^IBE(358.3,DA,0),U,5)]"",$P(^(0),U,3) K ^IBE(358.3,"APO",$P(^(0),U,3),X,$P(^(0),U,5),DA)
	;;^DD(358.3,.04,1,2,"DT")
	;;=2921222
	;;^DD(358.3,.04,3)
	;;=Entries on a list are grouped under group headers - under which header should this entry appear?
	;;^DD(358.3,.04,21,0)
	;;=^^3^3^2930607^
	;;^DD(358.3,.04,21,1,0)
	;;= 
	;;^DD(358.3,.04,21,2,0)
	;;=The SELECTION GROUP that the selection belongs to.The selection will
	;;^DD(358.3,.04,21,3,0)
	;;=appear under the group header on the form.
	;;^DD(358.3,.04,"DT")
	;;=2921222
	;;^DD(358.3,.05,0)
	;;=PRINT ORDER WITHIN GROUP^RNJ6,2^^0;5^K:+X'=X!(X>999.99)!(X<0)!(X?.E1"."3N.N) X

IBINI092
IBINI092	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.3,.05,1,0)
	;;=^.1
	;;^DD(358.3,.05,1,1,0)
	;;=358.3^APO2^MUMPS
	;;^DD(358.3,.05,1,1,1)
	;;=I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) S ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)=""
	;;^DD(358.3,.05,1,1,2)
	;;=I $P(^IBE(358.3,DA,0),U,3),$P(^(0),U,4) K ^IBE(358.3,"APO",$P(^(0),U,3),$P(^(0),U,4),X,DA)
	;;^DD(358.3,.05,1,1,"DT")
	;;=2921222
	;;^DD(358.3,.05,3)
	;;=Type a Number between 0 and 999.99, 2 Decimal Digits
	;;^DD(358.3,.05,21,0)
	;;=^^2^2^2921229^^^^
	;;^DD(358.3,.05,21,1,0)
	;;=Determines the order that this selection entry will appear in under the
	;;^DD(358.3,.05,21,2,0)
	;;=header for the selection group.
	;;^DD(358.3,.05,"DT")
	;;=2921229
	;;^DD(358.3,1,0)
	;;=SUBCOLUMN VALUE^358.31IA^^1;0
	;;^DD(358.3,1,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.3,1,21,1,0)
	;;= 
	;;^DD(358.3,1,21,2,0)
	;;=The selection can be composed of multiple fields. Each field occupies its
	;;^DD(358.3,1,21,3,0)
	;;=own subcolumn on the form.
	;;^DD(358.31,0)
	;;=SUBCOLUMN VALUE SUB-FIELD^^.02^2
	;;^DD(358.31,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.31,0,"IX","B",358.31,.01)
	;;=
	;;^DD(358.31,0,"NM","SUBCOLUMN VALUE")
	;;=
	;;^DD(358.31,0,"UP")
	;;=358.3
	;;^DD(358.31,.01,0)
	;;=SUBCOLUMN NUMBER^MRNJ1,0X^^0;1^K:+X'=X!(X>6)!(X<1)!(X?.E1"."1N.N)!($D(^IBE(358.3,DA(1),1,"B",X))) X
	;;^DD(358.31,.01,1,0)
	;;=^.1
	;;^DD(358.31,.01,1,1,0)
	;;=358.31^B
	;;^DD(358.31,.01,1,1,1)
	;;=S ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(358.31,.01,1,1,2)
	;;=K ^IBE(358.3,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(358.31,.01,3)
	;;=Which subcolumn is the value for?
	;;^DD(358.31,.01,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.01,21,1,0)
	;;= 
	;;^DD(358.31,.01,21,2,0)
	;;=The order that the subcolumn should appear on the form.
	;;^DD(358.31,.01,"DT")
	;;=2930402
	;;^DD(358.31,.02,0)
	;;=SUBCOLUMN VALUE^F^^0;2^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.31,.02,3)
	;;=What value should go in the subcolumn?
	;;^DD(358.31,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.31,.02,21,1,0)
	;;= 
	;;^DD(358.31,.02,21,2,0)
	;;=The text that should appear in the subcolumn.
	;;^DD(358.31,.02,"DT")
	;;=2930401

IBINI093
IBINI093	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.4,0,"GL")
	;;=^IBE(358.4,
	;;^DIC("B","IMP/EXP SELECTION GROUP",358.4)
	;;=
	;;^DIC(358.4,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.4,"%D",1,0)
	;;= 
	;;^DIC(358.4,"%D",2,0)
	;;=This file is nearly identical to file #357.4. It is used by the
	;;^DIC(358.4,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.4,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.4,0)
	;;=FIELD^^.03^3
	;;^DD(358.4,0,"DDA")
	;;=N
	;;^DD(358.4,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(358.4,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(358.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(358.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(358.4,0,"IX","APO",358.4,.02)
	;;=
	;;^DD(358.4,0,"IX","APO1",358.4,.03)
	;;=
	;;^DD(358.4,0,"IX","B",358.4,.01)
	;;=
	;;^DD(358.4,0,"IX","D",358.4,.03)
	;;=
	;;^DD(358.4,0,"NM","IMP/EXP SELECTION GROUP")
	;;=
	;;^DD(358.4,0,"PT",358.3,.04)
	;;=
	;;^DD(358.4,.01,0)
	;;=HEADER^RF^^0;1^K:$L(X)>40!($L(X)<1) X
	;;^DD(358.4,.01,1,0)
	;;=^.1
	;;^DD(358.4,.01,1,1,0)
	;;=358.4^B
	;;^DD(358.4,.01,1,1,1)
	;;=S ^IBE(358.4,"B",$E(X,1,30),DA)=""
	;;^DD(358.4,.01,1,1,2)
	;;=K ^IBE(358.4,"B",$E(X,1,30),DA)
	;;^DD(358.4,.01,3)
	;;=What text do you want to appear at the top of this group?
	;;^DD(358.4,.01,21,0)
	;;=^^2^2^2930604^^^^
	;;^DD(358.4,.01,21,1,0)
	;;= 
	;;^DD(358.4,.01,21,2,0)
	;;=The name given to a group of selections appearing on a selection list.
	;;^DD(358.4,.01,"DEL",1,0)
	;;=I '$G(IBLISTPR) W "...Selection Groups can only be deleted through the Encounter Form Utilities!"
	;;^DD(358.4,.01,"DT")
	;;=2930604
	;;^DD(358.4,.02,0)
	;;=PRINT ORDER^RNJ5,2^^0;2^K:+X'=X!(X>99.99)!(X<0)!(X?.E1"."3N.N) X
	;;^DD(358.4,.02,1,0)
	;;=^.1
	;;^DD(358.4,.02,1,1,0)
	;;=358.4^APO^MUMPS
	;;^DD(358.4,.02,1,1,1)
	;;=I $P(^IBE(358.4,DA,0),U,3) S ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)=""
	;;^DD(358.4,.02,1,1,2)
	;;=I $P(^IBE(358.4,DA,0),U,3) K ^IBE(358.4,"APO",$P(^(0),U,3),X,DA)
	;;^DD(358.4,.02,1,1,"DT")
	;;=2921222
	;;^DD(358.4,.02,3)
	;;=Type a Number between 0 and 99.99, 2 Decimal Digits
	;;^DD(358.4,.02,21,0)
	;;=^^5^5^2921222^^^^
	;;^DD(358.4,.02,21,1,0)
	;;= 
	;;^DD(358.4,.02,21,2,0)
	;;=This will define the order that a group of selections will appear in as
	;;^DD(358.4,.02,21,3,0)
	;;=compared to the other groups of selections.
	;;^DD(358.4,.02,21,4,0)
	;;=A group header "BLANK" will be created by default with order number 0.
	;;^DD(358.4,.02,"DT")
	;;=2921222
	;;^DD(358.4,.03,0)
	;;=SELECTION LIST^RP358.2'^IBE(358.2,^0;3^Q
	;;^DD(358.4,.03,1,0)
	;;=^.1
	;;^DD(358.4,.03,1,1,0)
	;;=358.4^D
	;;^DD(358.4,.03,1,1,1)
	;;=S ^IBE(358.4,"D",$E(X,1,30),DA)=""
	;;^DD(358.4,.03,1,1,2)
	;;=K ^IBE(358.4,"D",$E(X,1,30),DA)
	;;^DD(358.4,.03,1,1,"%D",0)
	;;=^^1^1^2921218^
	;;^DD(358.4,.03,1,1,"%D",1,0)
	;;=Used to find all the groups belonging to a selection list.
	;;^DD(358.4,.03,1,1,"DT")
	;;=2921218
	;;^DD(358.4,.03,1,2,0)
	;;=358.4^APO1^MUMPS
	;;^DD(358.4,.03,1,2,1)
	;;=I $P(^IBE(358.4,DA,0),U,2)]"" S ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)=""
	;;^DD(358.4,.03,1,2,2)
	;;=I $P(^IBE(358.4,DA,0),U,2)]"" K ^IBE(358.4,"APO",X,$P(^(0),U,2),DA)
	;;^DD(358.4,.03,1,2,"DT")
	;;=2921222
	;;^DD(358.4,.03,3)
	;;=This identifies the selection list that contains this group.
	;;^DD(358.4,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.4,.03,21,1,0)
	;;= 
	;;^DD(358.4,.03,21,2,0)
	;;=The Selection List this group belongs to.
	;;^DD(358.4,.03,"DT")
	;;=2921222

IBINI094
IBINI094	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.5,0,"GL")
	;;=^IBE(358.5,
	;;^DIC("B","IMP/EXP DATA FIELD",358.5)
	;;=
	;;^DIC(358.5,"%D",0)
	;;=^^6^6^2940217^
	;;^DIC(358.5,"%D",1,0)
	;;= 
	;;^DIC(358.5,"%D",2,0)
	;;= 
	;;^DIC(358.5,"%D",3,0)
	;;= 
	;;^DIC(358.5,"%D",4,0)
	;;=This file is nearly identical to file #357.5. It is used by the
	;;^DIC(358.5,"%D",5,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.5,"%D",6,0)
	;;=that is being imported or exported.
	;;^DD(358.5,0)
	;;=FIELD^^2^13
	;;^DD(358.5,0,"ID",.02)
	;;=W ""
	;;^DD(358.5,0,"ID",.03)
	;;=W ""
	;;^DD(358.5,0,"IX","B",358.5,.01)
	;;=
	;;^DD(358.5,0,"IX","C",358.5,.02)
	;;=
	;;^DD(358.5,0,"NM","IMP/EXP DATA FIELD")
	;;=
	;;^DD(358.5,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.5,.01,1,0)
	;;=^.1
	;;^DD(358.5,.01,1,1,0)
	;;=358.5^B
	;;^DD(358.5,.01,1,1,1)
	;;=S ^IBE(358.5,"B",$E(X,1,30),DA)=""
	;;^DD(358.5,.01,1,1,2)
	;;=K ^IBE(358.5,"B",$E(X,1,30),DA)
	;;^DD(358.5,.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.5,.01,21,0)
	;;=^^3^3^2930419^^^
	;;^DD(358.5,.01,21,1,0)
	;;= 
	;;^DD(358.5,.01,21,2,0)
	;;=The name is used to identify the field within a block. It can be anything
	;;^DD(358.5,.01,21,3,0)
	;;=the designer of a form wants it to be.
	;;^DD(358.5,.01,"DT")
	;;=2930419
	;;^DD(358.5,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.5,.02,1,0)
	;;=^.1
	;;^DD(358.5,.02,1,1,0)
	;;=358.5^C
	;;^DD(358.5,.02,1,1,1)
	;;=S ^IBE(358.5,"C",$E(X,1,30),DA)=""
	;;^DD(358.5,.02,1,1,2)
	;;=K ^IBE(358.5,"C",$E(X,1,30),DA)
	;;^DD(358.5,.02,1,1,"DT")
	;;=2921118
	;;^DD(358.5,.02,3)
	;;=What block should this data field appear in?
	;;^DD(358.5,.02,21,0)
	;;=^^2^2^2930310^
	;;^DD(358.5,.02,21,1,0)
	;;= 
	;;^DD(358.5,.02,21,2,0)
	;;=The particular block the data field should appear in.
	;;^DD(358.5,.02,"DT")
	;;=2921118
	;;^DD(358.5,.03,0)
	;;=TYPE OF DATA^*P358.6'^IBE(358.6,^0;3^S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.5,.03,3)
	;;=What data should be displayed in this field?
	;;^DD(358.5,.03,12)
	;;=Allows only available output routines
	;;^DD(358.5,.03,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=2,$P(^(0),U,9)=1"
	;;^DD(358.5,.03,21,0)
	;;=^^5^5^2930409^^
	;;^DD(358.5,.03,21,1,0)
	;;= 
	;;^DD(358.5,.03,21,2,0)
	;;=The particular interface that should be invoked to obtain the data for
	;;^DD(358.5,.03,21,3,0)
	;;=display. Some of the interfaces don't actually return data, but are
	;;^DD(358.5,.03,21,4,0)
	;;=instead 'dummy' interfaces for the purpose of printing things like blank
	;;^DD(358.5,.03,"DT")
	;;=2930309
	;;^DD(358.5,.04,0)
	;;=LAST ITEM INDICATOR^S^1:YES;0:NO;^0;4^Q
	;;^DD(358.5,.04,.1)
	;;=IS THIS THE LAST ONE THAT WILL FIT ON THE FORM?
	;;^DD(358.5,.04,3)
	;;=
	;;^DD(358.5,.04,4)
	;;=W "Enter YES if this is the last item that should print, else enter NO."
	;;^DD(358.5,.04,21,0)
	;;=^^4^4^2930408^^^^
	;;^DD(358.5,.04,21,1,0)
	;;= 
	;;^DD(358.5,.04,21,2,0)
	;;=This field is used to indicate which item on a list is the last to be
	;;^DD(358.5,.04,21,3,0)
	;;=printed to the form. The remaining items can be printed to a separate
	;;^DD(358.5,.04,21,4,0)
	;;=piece of paper.
	;;^DD(358.5,.04,"DT")
	;;=2930413
	;;^DD(358.5,.05,0)
	;;=NUMBER ON LIST^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.05,.1)
	;;=WHICH ITEM ON THE LIST SHOULD BE DISPLAYED IN THIS FIELD?
	;;^DD(358.5,.05,3)
	;;=The data is a list of items. Which item on the list should be displayed?
	;;^DD(358.5,.05,21,0)
	;;=^^1^1^2930607^
	;;^DD(358.5,.05,21,1,0)
	;;=For data returned by the package interface that is in the form of a list, this field indicates which one of the items on the list should be displayed to this field.

IBINI095
IBINI095	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.5,.05,"DT")
	;;=2930413
	;;^DD(358.5,.06,0)
	;;=TEXT LABEL^FO^^0;6^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.5,.06,.1)
	;;=WHAT LABEL SHOULD BEGIN THE TEXT (OPTIONAL)
	;;^DD(358.5,.06,2)
	;;=S Y(0)=Y S Y=+Y+1
	;;^DD(358.5,.06,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.06,3)
	;;=You can optionally begin the text with a label of your choice.
	;;^DD(358.5,.06,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.06,21,1,0)
	;;= 
	;;^DD(358.5,.06,21,2,0)
	;;=The label that should precede the text.
	;;^DD(358.5,.06,"DT")
	;;=2930617
	;;^DD(358.5,.07,0)
	;;=TEXT LABEL APPEARANCE^FX^^0;7^K:$L(X)>2!($L(X)<1)!("BU"'[$E(X,1))!("UB"'[$E(X,2)) X
	;;^DD(358.5,.07,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {B,U}
	;;^DD(358.5,.07,3)
	;;=B=bold,U=underline. You can enter BU to make the label bold and underlined.
	;;^DD(358.5,.07,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.5,.07,21,1,0)
	;;= 
	;;^DD(358.5,.07,21,2,0)
	;;=The label can have characteristics, such as being underlined or
	;;^DD(358.5,.07,21,3,0)
	;;=emboldened.
	;;^DD(358.5,.07,"DT")
	;;=2930414
	;;^DD(358.5,.1,0)
	;;=TEXT STARTING COLUMN^NJ3,0XO^^0;10^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.1,2)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.1,2.1)
	;;=S Y=+Y+1
	;;^DD(358.5,.1,3)
	;;=What block column should the text start at?
	;;^DD(358.5,.1,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.5,.1,21,1,0)
	;;=This field determines what column the text should begin in.
	;;^DD(358.5,.1,21,2,0)
	;;=Applies only if the Package Interface returns a word-processing field.
	;;^DD(358.5,.1,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.1,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.1,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.1,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.1,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.1,"DT")
	;;=2930617
	;;^DD(358.5,.11,0)
	;;=TEXT STARTING ROW^NJ3,0XO^^0;11^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.11,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.5,.11,3)
	;;=What block row should the text begin in?
	;;^DD(358.5,.11,21,0)
	;;=^^4^4^2930715^^
	;;^DD(358.5,.11,21,1,0)
	;;= 
	;;^DD(358.5,.11,21,2,0)
	;;=Determines which line on the form, relative to the block, the text area
	;;^DD(358.5,.11,21,3,0)
	;;=should begin at. Only applies if the package interface returns a
	;;^DD(358.5,.11,21,4,0)
	;;=word-processing field.
	;;^DD(358.5,.11,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.5,.11,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.5,.11,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.5,.11,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.5,.11,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.5,.11,"DT")
	;;=2930617
	;;^DD(358.5,.12,0)
	;;=NUMBER OF FORM LINES FOR TEXT^NJ3,0^^0;12^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.5,.12,.1)
	;;=HOW MANY LINES OF THE FORM SHOULD BE ALLOCATED FOR THE TEXT?
	;;^DD(358.5,.12,3)
	;;=How many lines of the form should be allocated for the text?
	;;^DD(358.5,.12,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.12,21,1,0)
	;;= 
	;;^DD(358.5,.12,21,2,0)
	;;=The number of lines on the form that should be allocated for the text.
	;;^DD(358.5,.12,"DT")
	;;=2930414
	;;^DD(358.5,.13,0)
	;;=SPACING OF TEXT LINES^S^1:SINGLE SPACED;2:DOUBLE SPACED;3:SINGLE, BUT DOUBLE IF BLANK;^0;13^Q

IBINI096
IBINI096	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.5,.13,.1)
	;;=HOW SHOULD THE TEXT LINES BE SPACED?
	;;^DD(358.5,.13,3)
	;;=How do you want the text lines to be spaced?
	;;^DD(358.5,.13,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.13,21,1,0)
	;;= 
	;;^DD(358.5,.13,21,2,0)
	;;=Determines the spacing between lines of text.
	;;^DD(358.5,.13,"DT")
	;;=2930414
	;;^DD(358.5,.14,0)
	;;=WIDTH OF TEXT LINES^NJ3,0^^0;14^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.5,.14,.1)
	;;=HOW MANY CHARACTERS ACROSS SHOULD THE TEXT LINES BE?
	;;^DD(358.5,.14,3)
	;;=How many columns wide do you want the text?
	;;^DD(358.5,.14,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.5,.14,21,1,0)
	;;= 
	;;^DD(358.5,.14,21,2,0)
	;;=Determines how many characters across should be allocated to the text.
	;;^DD(358.5,.14,"DT")
	;;=2930414
	;;^DD(358.5,2,0)
	;;=SUBFIELD^358.52I^^2;0
	;;^DD(358.5,2,21,0)
	;;=^^2^2^2930730^^^^
	;;^DD(358.5,2,21,1,0)
	;;=A data field can be composed of multiple subfields. Each subfield can have
	;;^DD(358.5,2,21,2,0)
	;;=a label and data.
	;;^DD(358.5,2,"DT")
	;;=2930323
	;;^DD(358.52,0)
	;;=SUBFIELD SUB-FIELD^^.09^8
	;;^DD(358.52,0,"IX","B",358.52,.01)
	;;=
	;;^DD(358.52,0,"NM","SUBFIELD")
	;;=
	;;^DD(358.52,0,"UP")
	;;=358.5
	;;^DD(358.52,.01,0)
	;;=SUBFIELD LABEL^MF^^0;1^K:$L(X)>150!($L(X)<1) X
	;;^DD(358.52,.01,1,0)
	;;=^.1
	;;^DD(358.52,.01,1,1,0)
	;;=358.52^B
	;;^DD(358.52,.01,1,1,1)
	;;=S ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(358.52,.01,1,1,2)
	;;=K ^IBE(358.5,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(358.52,.01,3)
	;;=What should the subfield be named? The label will print unless it is made invisible.
	;;^DD(358.52,.01,4)
	;;=
	;;^DD(358.52,.01,21,0)
	;;=^^3^3^2930730^^
	;;^DD(358.52,.01,21,1,0)
	;;= 
	;;^DD(358.52,.01,21,2,0)
	;;=The name of the subfield. The label prints to the form unless it is made
	;;^DD(358.52,.01,21,3,0)
	;;=invisible.
	;;^DD(358.52,.01,"DT")
	;;=2930730
	;;^DD(358.52,.03,0)
	;;=SUBCOLUMN LABEL APPEARANCE^FX^^0;3^S X=$$UPPER^VALM1(X) K:$L(X)>3!("UBI"'[$E(X,1))!("UBI"'[$E(X,2))!("UBI"'[$E(X,3)) X
	;;^DD(358.52,.03,.1)
	;;=HOW SHOULD THE LABEL APPEAR? CHOOSE FROM {U,B,I}
	;;^DD(358.52,.03,3)
	;;=B=bold,U=underline,I=invisible You can enter any combination of {B,U,I}. The label will not print if it is made invisible.
	;;^DD(358.52,.03,4)
	;;=
	;;^DD(358.52,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.52,.03,21,1,0)
	;;= 
	;;^DD(358.52,.03,21,2,0)
	;;=The label can have characterisics, such as being underlined.
	;;^DD(358.52,.03,"DT")
	;;=2930616
	;;^DD(358.52,.04,0)
	;;=STARTING COLUMN FOR LABEL^NJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.04,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.04,3)
	;;=What block column should the label start in?
	;;^DD(358.52,.04,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.04,21,1,0)
	;;= 
	;;^DD(358.52,.04,21,2,0)
	;;=The column, relative to the block, that the label should start at.
	;;^DD(358.52,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.04,"DT")
	;;=2930617
	;;^DD(358.52,.05,0)
	;;=STARTING ROW FOR LABEL^NJ3,0XO^^0;5^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.05,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.05,2.1)
	;;=S:Y=+Y Y=Y+1

IBINI097
IBINI097	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.05,3)
	;;=What block row should the label start in?
	;;^DD(358.52,.05,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.05,21,1,0)
	;;= 
	;;^DD(358.52,.05,21,2,0)
	;;=The row the label should be printed on.
	;;^DD(358.52,.05,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.05,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.05,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.05,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.05,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.05,"DT")
	;;=2930617
	;;^DD(358.52,.06,0)
	;;=STARTING ROW FOR DATA^NJ3,0XO^^0;6^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.06,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.06,3)
	;;=What block row should the data begin in?
	;;^DD(358.52,.06,21,0)
	;;=^^2^2^2930715^^
	;;^DD(358.52,.06,21,1,0)
	;;= 
	;;^DD(358.52,.06,21,2,0)
	;;=The row, relative to the block, that the data should print on.
	;;^DD(358.52,.06,23,0)
	;;=^^4^4^2930715^^
	;;^DD(358.52,.06,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.06,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.06,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.06,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.06,"DT")
	;;=2930617
	;;^DD(358.52,.07,0)
	;;=STARTING COLUMN FOR DATA^NJ3,0XO^^0;7^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.52,.07,2)
	;;=S Y(0)=Y S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.52,.07,3)
	;;=What block column should the data begin in?
	;;^DD(358.52,.07,21,0)
	;;=^^2^2^2930608^
	;;^DD(358.52,.07,21,1,0)
	;;= 
	;;^DD(358.52,.07,21,2,0)
	;;=The column, relative to the block, that the data should print on.
	;;^DD(358.52,.07,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.52,.07,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.52,.07,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.52,.07,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.52,.07,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.52,.07,"DT")
	;;=2930617
	;;^DD(358.52,.08,0)
	;;=LENGTH OF DATA^NJ3,0^^0;8^K:+X'=X!(X>150)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.52,.08,3)
	;;=How much space on the line should be allocated for the information to be displayed?
	;;^DD(358.52,.08,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.52,.08,21,1,0)
	;;= 
	;;^DD(358.52,.08,21,2,0)
	;;=The amount of space, in terms of characters, that should be allocated
	;;^DD(358.52,.08,21,3,0)
	;;=to the data.
	;;^DD(358.52,.08,"DT")
	;;=2930322
	;;^DD(358.52,.09,0)
	;;=DATA^NJ1,0X^^0;9^K:+X'=X!(X>7)!(X<1)!(X?.E1"."1N.N)!($P($G(^IBE(358.6,+$P($G(^IBE(358.5,DA(1),0)),U,3),2)),U,(2*X)-1)="") X
	;;^DD(358.52,.09,.1)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,3)
	;;=WHAT DATA SHOULD BE DISPLAYED IN THIS SUBFIELD?
	;;^DD(358.52,.09,4)
	;;=D HELP1^IBDFU5
	;;^DD(358.52,.09,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.52,.09,21,1,0)
	;;= 
	;;^DD(358.52,.09,21,2,0)
	;;=The package interface returns a record that may be composed of multiple
	;;^DD(358.52,.09,21,3,0)
	;;=fields. This identifies which of those fields should appear in this

IBINI098
IBINI098	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.52,.09,21,4,0)
	;;=subfield.
	;;^DD(358.52,.09,"DT")
	;;=2930526

IBINI099
IBINI099	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"GL")
	;;=^IBE(358.6,
	;;^DIC("B","IMP/EXP PACKAGE INTERFACE",358.6)
	;;=
	;;^DIC(358.6,"%D",0)
	;;=^^18^18^2940217^
	;;^DIC(358.6,"%D",1,0)
	;;=This file is nearly identical to file #357.6. It is used by the
	;;^DIC(358.6,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.6,"%D",3,0)
	;;=that is being imported or exported.
	;;^DIC(358.6,"%D",4,0)
	;;= 
	;;^DIC(358.6,"%D",5,0)
	;;=This file contains a description of all of the interfaces with other packages.
	;;^DIC(358.6,"%D",6,0)
	;;=The form will invoke the proper interface routines by doing a lookup on
	;;^DIC(358.6,"%D",7,0)
	;;=this file and then invoking the routine by indirection. The INPUT VARIABLE
	;;^DIC(358.6,"%D",8,0)
	;;=fields are for documentation purposes and to verify that the proper
	;;^DIC(358.6,"%D",9,0)
	;;=variables are defined. Data will be exchanged between the encounter form
	;;^DIC(358.6,"%D",10,0)
	;;=utilities and other packages by putting the data in a predefined location.
	;;^DIC(358.6,"%D",11,0)
	;;=The first part of the subscript is always be ^TMP("IB",$J,"INTERFACES".
	;;^DIC(358.6,"%D",12,0)
	;;=For output routines, but not selection routines, the fourth subscript is
	;;^DIC(358.6,"%D",13,0)
	;;=be the patient DFN. The next subscript is the name of the Package
	;;^DIC(358.6,"%D",14,0)
	;;=Interface. For single valued data and record valued data there is no
	;;^DIC(358.6,"%D",15,0)
	;;=additional subscript. For interfaces returning a list there is one
	;;^DIC(358.6,"%D",16,0)
	;;=additional subscript level, the number of the item on the list. For
	;;^DIC(358.6,"%D",17,0)
	;;=word processing type data the data will be in FM word-processing format,
	;;^DIC(358.6,"%D",18,0)
	;;=i.e., the final subscripts will be ...1,0),...2,0),...3,0), etc.
	;;^DD(358.6,0)
	;;=FIELD^^8.07^41
	;;^DD(358.6,0,"DT")
	;;=2931203
	;;^DD(358.6,0,"ID","WRITE")
	;;=W "Package=",$P($G(^(0)),"^",4)
	;;^DD(358.6,0,"IX","B",358.6,.01)
	;;=
	;;^DD(358.6,0,"IX","C",358.6,.04)
	;;=
	;;^DD(358.6,0,"IX","D",358.6,3)
	;;=
	;;^DD(358.6,0,"IX","E",358.6,.01)
	;;=
	;;^DD(358.6,0,"NM","IMP/EXP PACKAGE INTERFACE")
	;;=
	;;^DD(358.6,0,"PT",358.2,.11)
	;;=
	;;^DD(358.6,0,"PT",358.5,.03)
	;;=
	;;^DD(358.6,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>40!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.6,.01,1,0)
	;;=^.1
	;;^DD(358.6,.01,1,1,0)
	;;=358.6^B
	;;^DD(358.6,.01,1,1,1)
	;;=S ^IBE(358.6,"B",$E(X,1,30),DA)=""
	;;^DD(358.6,.01,1,1,2)
	;;=K ^IBE(358.6,"B",$E(X,1,30),DA)
	;;^DD(358.6,.01,1,2,0)
	;;=358.6^E^MUMPS
	;;^DD(358.6,.01,1,2,1)
	;;=S ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)=""
	;;^DD(358.6,.01,1,2,2)
	;;=K ^IBE(358.6,"E",$E(X,$F(X," "),40),DA)
	;;^DD(358.6,.01,1,2,"DT")
	;;=2930409
	;;^DD(358.6,.01,3)
	;;=Answer must be 3-40 characters in length. All entries with Action Type other than PRINT REPORT must be be prefixed with the name space of the package that is responsible for the data.
	;;^DD(358.6,.01,21,0)
	;;=^^3^3^2930727^^
	;;^DD(358.6,.01,21,1,0)
	;;= 
	;;^DD(358.6,.01,21,2,0)
	;;=The name of the Package Interface. For interfaces returning data the name
	;;^DD(358.6,.01,21,3,0)
	;;=should be preceded with the name space of the package.
	;;^DD(358.6,.01,"DT")
	;;=2930409
	;;^DD(358.6,.02,0)
	;;=ENTRY POINT^RF^^0;2^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.02,3)
	;;=What entry point into the routine does this package interface use?
	;;^DD(358.6,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.6,.02,21,1,0)
	;;= 
	;;^DD(358.6,.02,21,2,0)
	;;=The entry point in the routine that should be called.

IBINI09A
IBINI09A	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.02,"DT")
	;;=2921125
	;;^DD(358.6,.03,0)
	;;=ROUTINE^F^^0;3^K:$L(X)>8!($L(X)<1) X
	;;^DD(358.6,.03,3)
	;;=What routine does this package interface use?
	;;^DD(358.6,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.6,.03,21,1,0)
	;;= 
	;;^DD(358.6,.03,21,2,0)
	;;=The routine that should be called.
	;;^DD(358.6,.03,"DT")
	;;=2921125
	;;^DD(358.6,.04,0)
	;;=CUSTODIAL PACKAGE^F^^0;4^K:$L(X)>20!($L(X)<3) X
	;;^DD(358.6,.04,1,0)
	;;=^.1
	;;^DD(358.6,.04,1,1,0)
	;;=358.6^C
	;;^DD(358.6,.04,1,1,1)
	;;=S ^IBE(358.6,"C",$E(X,1,30),DA)=""
	;;^DD(358.6,.04,1,1,2)
	;;=K ^IBE(358.6,"C",$E(X,1,30),DA)
	;;^DD(358.6,.04,1,1,"DT")
	;;=2921229
	;;^DD(358.6,.04,3)
	;;=For Package Interfaces that return data the Custodial Package is the package that is providing the data. For Package Interfaces that print reports it is the package that is providing the report.
	;;^DD(358.6,.04,21,0)
	;;=^^1^1^2930726^^^^
	;;^DD(358.6,.04,21,1,0)
	;;=This is a free text pointer to the package file.
	;;^DD(358.6,.04,"DT")
	;;=2930726
	;;^DD(358.6,.05,0)
	;;=PATIENT VARIABLE DATA^S^0:NO;1:YES;^0;5^Q
	;;^DD(358.6,.05,.1)
	;;=DOES THE DATA VARY FROM PATIENT TO PATIENT?
	;;^DD(358.6,.05,3)
	;;=Enter YES if the data returned is variable, NO if the data is always the same.
	;;^DD(358.6,.05,21,0)
	;;=^^3^3^2930726^^^
	;;^DD(358.6,.05,21,1,0)
	;;=This field is used in the batch printing of encounter forms. The purpose
	;;^DD(358.6,.05,21,2,0)
	;;=is to avoid recomputing fields whose data does not change from patient to
	;;^DD(358.6,.05,21,3,0)
	;;=patient.
	;;^DD(358.6,.05,"DT")
	;;=2930726
	;;^DD(358.6,.06,0)
	;;=ACTION TYPE^RS^1:INPUT ROUTINE;2:OUTPUT ROUTINE;3:SELECTION ROUTINE;4:PRINT REPORT;^0;6^Q
	;;^DD(358.6,.06,3)
	;;=Is this package interface for displaying data to the form, for inputing data, or for creating a list that will appear on the form?
	;;^DD(358.6,.06,21,0)
	;;=^^8^8^2930518^^^^
	;;^DD(358.6,.06,21,1,0)
	;;= 
	;;^DD(358.6,.06,21,2,0)
	;;=Enter 1 for INPUT ROUTINE if the routine accepts data input from the user
	;;^DD(358.6,.06,21,3,0)
	;;=and transmits the data to the appropriate package. Enter 2 for OUTPUT
	;;^DD(358.6,.06,21,4,0)
	;;=ROUTINE if the routine gets data from another package. Enter 3 for
	;;^DD(358.6,.06,21,6,0)
	;;=table belonging to a foreign package If the ACTION TYPE is SELECTION ROUTINE then
	;;^DD(358.6,.06,21,7,0)
	;;=the data type must be record and the first piece must be the ID passed
	;;^DD(358.6,.06,21,8,0)
	;;=by the other package.
	;;^DD(358.6,.06,"DT")
	;;=2930518
	;;^DD(358.6,.07,0)
	;;=DATA TYPE^S^1:SINGLE VALUE;2:RECORD;3:LIST OF SINGLE VALUES;4:LIST OF RECORDS;5:WORD PROCESSING;^0;7^Q
	;;^DD(358.6,.07,.1)
	;;=WHAT FORMAT WILL THE DATA BE IN?
	;;^DD(358.6,.07,3)
	;;=What format will the data be in?
	;;^DD(358.6,.07,21,0)
	;;=^^8^8^2930527^
	;;^DD(358.6,.07,21,1,0)
	;;=This should only be defined for interfaces that transfer data. It is the
	;;^DD(358.6,.07,21,2,0)
	;;=type of format the data should be in.
	;;^DD(358.6,.07,21,3,0)
	;;= 
	;;^DD(358.6,.07,21,4,0)
	;;=A single value is a string without pieces. A record is a set of strings
	;;^DD(358.6,.07,21,6,0)
	;;=indefinite number of values, each numbered, each containing the same type
	;;^DD(358.6,.07,21,7,0)
	;;=of information. A word processing data type will be in FM format.
	;;^DD(358.6,.07,21,8,0)
	;;=If the ACTION TYPE is SELECTION ROUTINE then the data type must be record.
	;;^DD(358.6,.07,"DT")
	;;=2930726
	;;^DD(358.6,.08,0)
	;;=PRINT COMPLETE^S^0:NO;1:YES;^0;8^Q
	;;^DD(358.6,.08,3)
	;;=If there is insufficient room on the form to print the data, should it be re-printed in full on a separate page?

IBINI09B
IBINI09B	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,.08,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.6,.08,21,1,0)
	;;= 
	;;^DD(358.6,.08,21,2,0)
	;;=This field is used to determine what should happen if the data does not
	;;^DD(358.6,.08,21,3,0)
	;;=fit in the space allocated to it on the form. If answered YES the data
	;;^DD(358.6,.08,21,4,0)
	;;=will be printed on another page.
	;;^DD(358.6,.08,"DT")
	;;=2930507
	;;^DD(358.6,.09,0)
	;;=AVAILABLE? (Y/N)^RS^0:NO;1:YES;^0;9^Q
	;;^DD(358.6,.09,3)
	;;=Is this package interface now available for use?
	;;^DD(358.6,.09,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,.09,21,1,0)
	;;= 
	;;^DD(358.6,.09,21,2,0)
	;;=This field should be set to YES if the interface is available, NO if it is
	;;^DD(358.6,.09,21,3,0)
	;;=not available. Interfaces that are not available are not called.
	;;^DD(358.6,.09,"DT")
	;;=2921213
	;;^DD(358.6,.1,0)
	;;=HEALTH SUMMARY?^S^0:NO;1:YES;^0;10^Q
	;;^DD(358.6,.1,.1)
	;;=ARE YOU REQUESTING A HEALTH SUMMARY?
	;;^DD(358.6,.1,2.1)
	;;=S:Y=+Y Y=Y+1
	;;^DD(358.6,.1,3)
	;;= Are you requesting a HEALTH SUMMARY to print?
	;;^DD(358.6,.1,21,0)
	;;=^^7^7^2930616^
	;;^DD(358.6,.1,21,1,0)
	;;= 
	;;^DD(358.6,.1,21,2,0)
	;;=This field will determine how to go about printing the report or form. It
	;;^DD(358.6,.1,21,3,0)
	;;=applies only to Package Interfaces of ACTION TYPE = PRINT REPORT. Health
	;;^DD(358.6,.1,21,4,0)
	;;=Summaries use the field HEALTH SUMMARY to determine the type of Health
	;;^DD(358.6,.1,21,6,0)
	;;=fields ENTRY POINT or ROUTINE, since all Health Summaries are printed in
	;;^DD(358.6,.1,21,7,0)
	;;=the same way.
	;;^DD(358.6,.1,"DT")
	;;=2930616
	;;^DD(358.6,.11,0)
	;;=TYPE OF HEALTH SUMMARY^*P142'^GMT(142,^0;11^S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(358.6,.11,3)
	;;=Which Health Summary do you want printed?
	;;^DD(358.6,.11,12)
	;;=EXCLUDES AD HOC HEALTH SUMMARIES
	;;^DD(358.6,.11,12.1)
	;;=S DIC("S")="I $P(^(0),U)'=""GMTS HS ADHOC OPTION"""
	;;^DD(358.6,.11,"DT")
	;;=2930617
	;;^DD(358.6,.12,0)
	;;=TOOL KIT MEMBER?^S^0:NO;1:YES;^0;12^Q
	;;^DD(358.6,.12,.1)
	;;=SHOULD THIS PACKAGE INTERFACE BE PART OF THE TOOL KIT?
	;;^DD(358.6,.12,3)
	;;=Enter YES if this PACKAGE INTERFACE was added by the package developers as part of the tool kit, enter NO otherwise.
	;;^DD(358.6,.12,"DT")
	;;=2930811
	;;^DD(358.6,1,0)
	;;=DESCRIPTION^358.61^^1;0
	;;^DD(358.6,1,21,0)
	;;=^^1^1^2930210^^^
	;;^DD(358.6,1,21,1,0)
	;;=Should describe the data being exchanged by the package interface.
	;;^DD(358.6,2.01,0)
	;;=PIECE 1 DESCRIPTIVE NAME^F^^2;1^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.01,.1)
	;;=WHAT IS THE FIRST PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.01,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.01,21,1,0)
	;;= 
	;;^DD(358.6,2.01,21,2,0)
	;;=Should be a descriptive name of the first field in the record returned by
	;;^DD(358.6,2.01,21,3,0)
	;;=the interface.
	;;^DD(358.6,2.01,"DT")
	;;=2930726
	;;^DD(358.6,2.02,0)
	;;=PIECE 1 MAXIMUM LENGTH^NJ3,0^^2;2^K:+X'=X!(X>210)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.02,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.02,3)
	;;=Type a Number between 0 and 210, 0 Decimal Digits
	;;^DD(358.6,2.02,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,2.02,21,1,0)
	;;= 
	;;^DD(358.6,2.02,21,2,0)
	;;=The maximum length of the first field of the record returned by the
	;;^DD(358.6,2.02,21,3,0)
	;;=interface.
	;;^DD(358.6,2.02,"DT")
	;;=2930726
	;;^DD(358.6,2.03,0)
	;;=PIECE 2 DESCRIPTIVE NAME^F^^2;3^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.03,.1)
	;;=WHAT IS THE SECOND PIECE OF DATA RETURNED BY THE INTERFACE?

IBINI09C
IBINI09C	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,2.03,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.03,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.03,21,1,0)
	;;= 
	;;^DD(358.6,2.03,21,2,0)
	;;=A descriptive name of the second field of the record returned by the
	;;^DD(358.6,2.03,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.03,"DT")
	;;=2930726
	;;^DD(358.6,2.04,0)
	;;=WHAT IS ITS MAXIMUM LENGTH?^NJ3,0^^2;4^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.04,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.04,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.04,21,1,0)
	;;= 
	;;^DD(358.6,2.04,21,2,0)
	;;=The maximum length of the second field of the record returned by the
	;;^DD(358.6,2.04,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.04,"DT")
	;;=2930726
	;;^DD(358.6,2.05,0)
	;;=PIECE 3 DESCRIPTIVE NAME^F^^2;5^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.05,.1)
	;;=WHAT IS THE THIRD PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.05,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.05,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.05,21,1,0)
	;;= 
	;;^DD(358.6,2.05,21,2,0)
	;;=A descriptive name of the third field of the record returned by the
	;;^DD(358.6,2.05,21,3,0)
	;;=interface routine.
	;;^DD(358.6,2.05,"DT")
	;;=2930726
	;;^DD(358.6,2.06,0)
	;;=PIECE 3 MAXIMUM LENGTH^NJ3,0^^2;6^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.06,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.06,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.06,21,1,0)
	;;= 
	;;^DD(358.6,2.06,21,2,0)
	;;=The maximum length of the 3rd field returned by the interface routine.
	;;^DD(358.6,2.06,"DT")
	;;=2930726
	;;^DD(358.6,2.07,0)
	;;=PIECE 4 DESCRIPTIVE NAME^F^^2;7^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.07,.1)
	;;=WHAT IS THE FOURTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.07,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.07,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.07,21,1,0)
	;;= 
	;;^DD(358.6,2.07,21,2,0)
	;;=A descriptive name of the 4th field returned by the interface routine.
	;;^DD(358.6,2.07,"DT")
	;;=2930726
	;;^DD(358.6,2.08,0)
	;;=PIECE 4 MAXIMUM LENGTH^NJ3,0^^2;8^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.08,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.08,3)
	;;=Type a Number between 1 and 200, 0 Decimal Digits
	;;^DD(358.6,2.08,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.08,21,1,0)
	;;= 
	;;^DD(358.6,2.08,21,2,0)
	;;=The maximum length of the 4th field returned by the interface routine.
	;;^DD(358.6,2.08,"DT")
	;;=2930726
	;;^DD(358.6,2.09,0)
	;;=PIECE 5 DESCRIPTIVE NAME^F^^2;9^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.09,.1)
	;;=WHAT IS THE FIFTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.09,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.09,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.09,21,1,0)
	;;= 
	;;^DD(358.6,2.09,21,2,0)
	;;=A descriptive name of the 5th field returned by the interface routine.
	;;^DD(358.6,2.09,"DT")
	;;=2930726
	;;^DD(358.6,2.1,0)
	;;=PIECE 5 MAXIMUM LENGTH^NJ3,0^^2;10^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.1,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.1,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.1,21,1,0)
	;;= 
	;;^DD(358.6,2.1,21,2,0)
	;;=The maximum length of the 5th field returned by the interface routine.
	;;^DD(358.6,2.1,"DT")
	;;=2930726
	;;^DD(358.6,2.11,0)
	;;=PIECE 6 DESCRIPTIVE NAME^F^^2;11^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.11,.1)
	;;=WHAT IS THE SIXTH PIECE OF DATA RETURNED BY THE INTERFACE?

IBINI09D
IBINI09D	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,2.11,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.11,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.11,21,1,0)
	;;= 
	;;^DD(358.6,2.11,21,2,0)
	;;=A descriptive name fo the 6th field returned by the interface routine.
	;;^DD(358.6,2.11,"DT")
	;;=2930726
	;;^DD(358.6,2.12,0)
	;;=PIECE 6 MAXIMUM LENGTH^NJ3,0^^2;12^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.12,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.12,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.12,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.12,21,1,0)
	;;= 
	;;^DD(358.6,2.12,21,2,0)
	;;=The maximum length of the 6th field returned by the interface routine.
	;;^DD(358.6,2.12,"DT")
	;;=2930726
	;;^DD(358.6,2.13,0)
	;;=PIECE 7 DESCRIPTIVE NAME^F^^2;13^K:$L(X)>30!($L(X)<3) X
	;;^DD(358.6,2.13,.1)
	;;=WHAT IS THE SEVENTH PIECE OF DATA RETURNED BY THE INTERFACE?
	;;^DD(358.6,2.13,3)
	;;=Answer must be 3-30 characters in length.
	;;^DD(358.6,2.13,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,2.13,21,1,0)
	;;= 
	;;^DD(358.6,2.13,21,2,0)
	;;=A descriptive name for the 7th field returned by the package interface
	;;^DD(358.6,2.13,21,3,0)
	;;=routine.
	;;^DD(358.6,2.13,"DT")
	;;=2930726
	;;^DD(358.6,2.14,0)
	;;=PIECE 7 MAXIMUM LENGTH^NJ3,0^^2;14^K:+X'=X!(X>210)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.6,2.14,.1)
	;;=WHAT IS ITS MAXIMUM LENGTH?
	;;^DD(358.6,2.14,3)
	;;=Type a Number between 1 and 210, 0 Decimal Digits
	;;^DD(358.6,2.14,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.6,2.14,21,1,0)
	;;= 
	;;^DD(358.6,2.14,21,2,0)
	;;=The maximum length of the 7th field returned by the interface routine.
	;;^DD(358.6,2.14,"DT")
	;;=2930726
	;;^DD(358.6,2.17,0)
	;;=IS PIECE 1 DISPLAYABLE?^S^0:NO;1:YES;^2;17^Q
	;;^DD(358.6,2.17,.1)
	;;=CAN THIS FIELD BE DISPLAYED TO THE USER?
	;;^DD(358.6,2.17,3)
	;;=The first piece of the returned record is reserved for the unique id of the selection. Enter no if it should not be displayed, for example, if is a pointer.
	;;^DD(358.6,2.17,21,0)
	;;=^^3^3^2930811^^^^
	;;^DD(358.6,2.17,21,1,0)
	;;=This is used only for selection type interfaces. If NO, the the value can
	;;^DD(358.6,2.17,21,2,0)
	;;=not be displayed to the encounter form.
	;;^DD(358.6,2.17,21,3,0)
	;;=The first piece is reserved for the unique id of the selection.
	;;^DD(358.6,2.17,"DT")
	;;=2930810
	;;^DD(358.6,2.18,0)
	;;=ARE SELECTIONS EXPORTABLE?^S^0:NO;1:YES;^2;18^Q
	;;^DD(358.6,2.18,"DT")
	;;=2931203
	;;^DD(358.6,3,0)
	;;=USER LOOKUP^F^^3;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>240!($L(X)<1) X
	;;^DD(358.6,3,.1)
	;;=LIST OF WORDS TO MAKE LOOK-UPS EASIER
	;;^DD(358.6,3,1,0)
	;;=^.1
	;;^DD(358.6,3,1,1,0)
	;;=358.6^D^KWIC
	;;^DD(358.6,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^IBE(358.6,"D",I,DA)=""
	;;^DD(358.6,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^IBE(358.6,"D",I,DA)
	;;^DD(358.6,3,1,1,"%D",0)
	;;=^^3^3^2930409^^
	;;^DD(358.6,3,1,1,"%D",1,0)
	;;= 
	;;^DD(358.6,3,1,1,"%D",2,0)
	;;=This index is meant to assist the user in locating the correct package
	;;^DD(358.6,3,1,1,"%D",3,0)
	;;=interface needed to display a particular item of data to a form.
	;;^DD(358.6,3,1,1,"DT")
	;;=2930309
	;;^DD(358.6,3,3)
	;;=Enter words separated with spaces. They will be indexed to assist in lookup.
	;;^DD(358.6,3,4)
	;;=D LOOKUP^IBDF16
	;;^DD(358.6,3,21,0)
	;;=^^4^4^2930726^^^
	;;^DD(358.6,3,21,1,0)
	;;= 
	;;^DD(358.6,3,21,2,0)
	;;=This field is used to create a KWIC index for this file. The purpose is to

IBINI09E
IBINI09E	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.6,3,21,3,0)
	;;=assist the user in located the package interface he needs to display a
	;;^DD(358.6,3,21,4,0)
	;;=particular item of data to a form.
	;;^DD(358.6,3,"DT")
	;;=2930726
	;;^DD(358.6,4.01,0)
	;;=ENTRY ACTION^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,4.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,4.01,9)
	;;=@
	;;^DD(358.6,4.01,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.6,4.01,21,1,0)
	;;= 
	;;^DD(358.6,4.01,21,2,0)
	;;=This code will be executed after the PROTECTED VARIABLES are newed, but
	;;^DD(358.6,4.01,21,3,0)
	;;=before the interface routine is called.
	;;^DD(358.6,4.01,"DT")
	;;=2930521
	;;^DD(358.6,5.01,0)
	;;=EXIT ACTION^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
	;;^DD(358.6,5.01,3)
	;;=This is Standard MUMPS code.
	;;^DD(358.6,5.01,9)
	;;=@
	;;^DD(358.6,5.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(358.6,5.01,21,1,0)
	;;= 
	;;^DD(358.6,5.01,21,2,0)
	;;=This code will be executed after the interface routine is called.
	;;^DD(358.6,5.01,21,3,0)
	;;=The effect of the NEW done on the PROTECTED VARIABLES is still in effect.
	;;^DD(358.6,5.01,"DT")
	;;=2930518
	;;^DD(358.6,6,0)
	;;=PROTECTED LOCAL VARIABLES^358.66^^6;0
	;;^DD(358.6,6,21,0)
	;;=^^11^11^2930608^^
	;;^DD(358.6,6,21,1,0)
	;;= 
	;;^DD(358.6,6,21,2,0)
	;;=This is a list of variables that should be newed before the entry action
	;;^DD(358.6,6,21,3,0)
	;;=or calling the interface routine. It is protection against interfaces that
	;;^DD(358.6,6,21,4,0)
	;;=alter or kill variables, or entry actions that do so. Note that REQUIRED
	;;^DD(358.6,6,21,6,0)
	;;=changes a required variable, however, there is a way to protect it.
	;;^DD(358.6,6,21,7,0)
	;;=Supposing, for example, DFN is killed by the interface. This will protect
	;;^DD(358.6,6,21,8,0)
	;;=it:
	;;^DD(358.6,6,21,9,0)
	;;=     PROTECTED VARIABLE:   IBDFN
	;;^DD(358.6,6,21,10,0)
	;;=     ENTRY ACTION:  S IBDFN=DFN
	;;^DD(358.6,6,21,11,0)
	;;=     EXIT ACTION:   S DFN=IBDFN
	;;^DD(358.6,7,0)
	;;=REQUIRED LOCAL VARIABLES^358.67^^7;0
	;;^DD(358.6,7,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.6,7,21,1,0)
	;;= 
	;;^DD(358.6,7,21,2,0)
	;;=The interface may require inputs. This field is a list of the required
	;;^DD(358.6,7,21,3,0)
	;;=local variables. The interface will not be called unless the variables are
	;;^DD(358.6,7,21,4,0)
	;;=determined to exist.
	;;^DD(358.6,8.01,0)
	;;=PIECE 1 NODE^F^^8;1^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.01,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.01,"DT")
	;;=2931203
	;;^DD(358.6,8.02,0)
	;;=PIECE 2 NODE^F^^8;2^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.02,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.02,"DT")
	;;=2931203
	;;^DD(358.6,8.03,0)
	;;=PIECE 3 NODE^F^^8;3^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.03,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.03,"DT")
	;;=2931203
	;;^DD(358.6,8.04,0)
	;;=PIECE 4 NODE^F^^8;4^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.04,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.04,"DT")
	;;=2931203
	;;^DD(358.6,8.05,0)
	;;=PIECE 5 NODE^F^^8;5^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.05,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.05,"DT")
	;;=2931203
	;;^DD(358.6,8.06,0)
	;;=PIECE 6 NODE^F^^8;6^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.06,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.06,"DT")
	;;=2931203
	;;^DD(358.6,8.07,0)
	;;=PIECE 7 NODE^F^^8;7^K:$L(X)>10!($L(X)<1) X
	;;^DD(358.6,8.07,3)
	;;=Answer must be 1-10 characters in length.
	;;^DD(358.6,8.07,"DT")
	;;=2931203
	;;^DD(358.61,0)
	;;=DESCRIPTION SUB-FIELD^^.01^1

IBINI09F
IBINI09F	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.6)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.61,0,"NM","DESCRIPTION")
	;;=
	;;^DD(358.61,0,"UP")
	;;=358.6
	;;^DD(358.61,.01,0)
	;;=/6^W^^0;1^Q
	;;^DD(358.61,.01,3)
	;;=Enter a description of the data being exchanged.
	;;^DD(358.61,.01,"DT")
	;;=2930210
	;;^DD(358.66,0)
	;;=PROTECTED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.66,0,"IX","B",358.66,.01)
	;;=
	;;^DD(358.66,0,"NM","PROTECTED LOCAL VARIABLES")
	;;=
	;;^DD(358.66,0,"UP")
	;;=358.6
	;;^DD(358.66,.01,0)
	;;=PROTECTED LOCAL VARIABLES^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.66,.01,1,0)
	;;=^.1
	;;^DD(358.66,.01,1,1,0)
	;;=358.66^B
	;;^DD(358.66,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)=""
	;;^DD(358.66,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),6,"B",$E(X,1,30),DA)
	;;^DD(358.66,.01,3)
	;;=Enter variables that should be NEWED before the entry action or calling the interface.
	;;^DD(358.66,.01,21,0)
	;;=^^3^3^2930608^
	;;^DD(358.66,.01,21,1,0)
	;;= 
	;;^DD(358.66,.01,21,2,0)
	;;=A list of variables that should be newed before the entry action or
	;;^DD(358.66,.01,21,3,0)
	;;=calling the interface.
	;;^DD(358.66,.01,"DT")
	;;=2930608
	;;^DD(358.67,0)
	;;=REQUIRED LOCAL VARIABLES SUB-FIELD^^.01^1
	;;^DD(358.67,0,"IX","B",358.67,.01)
	;;=
	;;^DD(358.67,0,"NM","REQUIRED LOCAL VARIABLES")
	;;=
	;;^DD(358.67,0,"UP")
	;;=358.6
	;;^DD(358.67,.01,0)
	;;=REQUIRED LOCAL VARIABLE^MFX^^0;1^K:'$$VARIABLE^IBDFU5(X) X
	;;^DD(358.67,.01,1,0)
	;;=^.1
	;;^DD(358.67,.01,1,1,0)
	;;=358.67^B
	;;^DD(358.67,.01,1,1,1)
	;;=S ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)=""
	;;^DD(358.67,.01,1,1,2)
	;;=K ^IBE(358.6,DA(1),7,"B",$E(X,1,30),DA)
	;;^DD(358.67,.01,3)
	;;=Enter any variables that must exist before the Package Interface routine is called.
	;;^DD(358.67,.01,21,0)
	;;=^^4^4^2930528^
	;;^DD(358.67,.01,21,1,0)
	;;= 
	;;^DD(358.67,.01,21,2,0)
	;;=A variable that is required input to the interface routine. The interface
	;;^DD(358.67,.01,21,3,0)
	;;=routine will not be called if all of the required variables are not
	;;^DD(358.67,.01,21,4,0)
	;;=defined.
	;;^DD(358.67,.01,"DT")
	;;=2930521

IBINI09G
IBINI09G	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.7,0,"GL")
	;;=^IBE(358.7,
	;;^DIC("B","IMP/EXP FORM LINE",358.7)
	;;=
	;;^DIC(358.7,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.7,"%D",1,0)
	;;=This file is nearly identical to file #357.7. It is used by the
	;;^DIC(358.7,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.7,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.7,0)
	;;=FIELD^^.06^6
	;;^DD(358.7,0,"DDA")
	;;=N
	;;^DD(358.7,0,"DT")
	;;=2930802
	;;^DD(358.7,0,"ID",.02)
	;;=W " STARTING COL=",$P(^(0),U,2)+1
	;;^DD(358.7,0,"ID",.03)
	;;=W " STARTING ROW=",$P(^(0),U,3)+1
	;;^DD(358.7,0,"ID",.06)
	;;=W ""
	;;^DD(358.7,0,"IX","B",358.7,.01)
	;;=
	;;^DD(358.7,0,"IX","C",358.7,.06)
	;;=
	;;^DD(358.7,0,"NM","IMP/EXP FORM LINE")
	;;=
	;;^DD(358.7,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.7,.01,1,0)
	;;=^.1
	;;^DD(358.7,.01,1,1,0)
	;;=358.7^B
	;;^DD(358.7,.01,1,1,1)
	;;=S ^IBE(358.7,"B",$E(X,1,30),DA)=""
	;;^DD(358.7,.01,1,1,2)
	;;=K ^IBE(358.7,"B",$E(X,1,30),DA)
	;;^DD(358.7,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.7,.01,21,0)
	;;=^^4^4^2930527^
	;;^DD(358.7,.01,21,1,0)
	;;= 
	;;^DD(358.7,.01,21,2,0)
	;;=The name given to the line. Lines should be given names that will allow
	;;^DD(358.7,.01,21,3,0)
	;;=them to be identifies, such as V(1,1), meaning a vertical line starting at
	;;^DD(358.7,.01,21,4,0)
	;;=coordinates (1,1).
	;;^DD(358.7,.02,0)
	;;=LINE STARTING COLUMN^RNJ3,0XO^^0;2^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.02,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.02,3)
	;;=Enter the block column the line should begin at.
	;;^DD(358.7,.02,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.02,21,1,0)
	;;= 
	;;^DD(358.7,.02,21,2,0)
	;;=The column, relative to the block, that the line should begin at.
	;;^DD(358.7,.02,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.02,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.02,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.02,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.02,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.02,"DT")
	;;=2930715
	;;^DD(358.7,.03,0)
	;;=LINE STARTING ROW^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.7,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.7,.03,3)
	;;=Enter the block row the line should begin at.
	;;^DD(358.7,.03,21,0)
	;;=^^2^2^2930527^
	;;^DD(358.7,.03,21,1,0)
	;;= 
	;;^DD(358.7,.03,21,2,0)
	;;=The row, relative to the block, that the line should begin at.
	;;^DD(358.7,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.7,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.7,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.7,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.7,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.7,.03,"DT")
	;;=2930715
	;;^DD(358.7,.04,0)
	;;=ORIENTATION^RS^H:HORIZONTAL;V:VERTICAL;^0;4^Q
	;;^DD(358.7,.04,.1)
	;;=ORIENTATION (HORIZONTAL/VERTICAL)
	;;^DD(358.7,.04,3)
	;;=Should the line be horizontal or vertical?
	;;^DD(358.7,.04,21,0)
	;;=^^2^2^2930607^
	;;^DD(358.7,.04,21,1,0)
	;;= 
	;;^DD(358.7,.04,21,2,0)
	;;=The direction the line goes in.

IBINI09H
IBINI09H	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.7)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.7,.04,"DT")
	;;=2930415
	;;^DD(358.7,.05,0)
	;;=LENGTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.7,.05,3)
	;;=How long should the line be?
	;;^DD(358.7,.05,21,0)
	;;=^^3^3^2930527^
	;;^DD(358.7,.05,21,1,0)
	;;= 
	;;^DD(358.7,.05,21,2,0)
	;;=The length of the line. For horizontal lines the length is in terms of
	;;^DD(358.7,.05,21,3,0)
	;;=characters. For vertical lines it is in terms of rows.
	;;^DD(358.7,.05,"DT")
	;;=2930319
	;;^DD(358.7,.06,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;6^Q
	;;^DD(358.7,.06,1,0)
	;;=^.1
	;;^DD(358.7,.06,1,1,0)
	;;=358.7^C
	;;^DD(358.7,.06,1,1,1)
	;;=S ^IBE(358.7,"C",$E(X,1,30),DA)=""
	;;^DD(358.7,.06,1,1,2)
	;;=K ^IBE(358.7,"C",$E(X,1,30),DA)
	;;^DD(358.7,.06,1,1,"%D",0)
	;;=^^2^2^2930319^
	;;^DD(358.7,.06,1,1,"%D",1,0)
	;;= 
	;;^DD(358.7,.06,1,1,"%D",2,0)
	;;=This cross-reference is used to find all lines belonging to a block.
	;;^DD(358.7,.06,1,1,"DT")
	;;=2930319
	;;^DD(358.7,.06,3)
	;;=What block should the line appear in?
	;;^DD(358.7,.06,4)
	;;=W "DOES THIS WORK",!
	;;^DD(358.7,.06,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.7,.06,21,1,0)
	;;= 
	;;^DD(358.7,.06,21,2,0)
	;;=The block the line appears in.
	;;^DD(358.7,.06,"DT")
	;;=2930802

IBINI09I
IBINI09I	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.8,0,"GL")
	;;=^IBE(358.8,
	;;^DIC("B","IMP/EXP TEXT AREA",358.8)
	;;=
	;;^DIC(358.8,"%D",0)
	;;=^^3^3^2940217^
	;;^DIC(358.8,"%D",1,0)
	;;=This file is nearly identical to file #357.8. It is used by the
	;;^DIC(358.8,"%D",2,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.8,"%D",3,0)
	;;=that is being imported or exported.
	;;^DD(358.8,0)
	;;=FIELD^^1^7
	;;^DD(358.8,0,"DDA")
	;;=N
	;;^DD(358.8,0,"DT")
	;;=2930802
	;;^DD(358.8,0,"IX","B",358.8,.01)
	;;=
	;;^DD(358.8,0,"IX","C",358.8,.02)
	;;=
	;;^DD(358.8,0,"NM","IMP/EXP TEXT AREA")
	;;=
	;;^DD(358.8,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
	;;^DD(358.8,.01,1,0)
	;;=^.1
	;;^DD(358.8,.01,1,1,0)
	;;=358.8^B
	;;^DD(358.8,.01,1,1,1)
	;;=S ^IBE(358.8,"B",$E(X,1,30),DA)=""
	;;^DD(358.8,.01,1,1,2)
	;;=K ^IBE(358.8,"B",$E(X,1,30),DA)
	;;^DD(358.8,.01,3)
	;;=NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
	;;^DD(358.8,.01,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.01,21,1,0)
	;;= 
	;;^DD(358.8,.01,21,2,0)
	;;=The name of the text area.
	;;^DD(358.8,.02,0)
	;;=BLOCK^RP358.1'^IBE(358.1,^0;2^Q
	;;^DD(358.8,.02,1,0)
	;;=^.1
	;;^DD(358.8,.02,1,1,0)
	;;=358.8^C
	;;^DD(358.8,.02,1,1,1)
	;;=S ^IBE(358.8,"C",$E(X,1,30),DA)=""
	;;^DD(358.8,.02,1,1,2)
	;;=K ^IBE(358.8,"C",$E(X,1,30),DA)
	;;^DD(358.8,.02,1,1,"%D",0)
	;;=^^3^3^2930326^
	;;^DD(358.8,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(358.8,.02,1,1,"%D",2,0)
	;;=Used to find all of the text areas that should appear on a particular
	;;^DD(358.8,.02,1,1,"%D",3,0)
	;;=block.
	;;^DD(358.8,.02,1,1,"DT")
	;;=2930326
	;;^DD(358.8,.02,3)
	;;=What block do you want the text to appear in?
	;;^DD(358.8,.02,21,0)
	;;=^^2^2^2930802^^
	;;^DD(358.8,.02,21,1,0)
	;;= 
	;;^DD(358.8,.02,21,2,0)
	;;=The block the text area is displayed in.
	;;^DD(358.8,.02,"DT")
	;;=2930802
	;;^DD(358.8,.03,0)
	;;=TEXT AREA STARTING COLUMN^RNJ3,0XO^^0;3^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.03,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.03,3)
	;;=What block column should the text begin in?
	;;^DD(358.8,.03,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.03,21,1,0)
	;;= 
	;;^DD(358.8,.03,21,2,0)
	;;=The starting position of the text area, relative to the block.
	;;^DD(358.8,.03,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.03,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.03,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.03,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.03,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.
	;;^DD(358.8,.03,"DT")
	;;=2930715
	;;^DD(358.8,.04,0)
	;;=TEXT AREA STARTING ROW^RNJ3,0XO^^0;4^S:+X=X X=X-1 K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(358.8,.04,2)
	;;=S Y(0)=Y S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,2.1)
	;;=S:+Y=Y Y=+Y+1
	;;^DD(358.8,.04,3)
	;;=What block row should the text begin in?
	;;^DD(358.8,.04,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.04,21,1,0)
	;;= 
	;;^DD(358.8,.04,21,2,0)
	;;=The starting row of the text area, relative to the block.
	;;^DD(358.8,.04,23,0)
	;;=^^4^4^2930715^
	;;^DD(358.8,.04,23,1,0)
	;;=The internal representation starts at 0, the external representation
	;;^DD(358.8,.04,23,2,0)
	;;=starts at 1. The difference is because for computing the form image
	;;^DD(358.8,.04,23,3,0)
	;;=it is convenient to work with displacements from the top left-hand
	;;^DD(358.8,.04,23,4,0)
	;;=corner. However, users do not want to work with row=0 or column=0.

IBINI09J
IBINI09J	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.8)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(358.8,.04,"DT")
	;;=2930715
	;;^DD(358.8,.05,0)
	;;=TEXT WIDTH^RNJ3,0^^0;5^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.05,3)
	;;=How many columns should be allocated on the block for the text?
	;;^DD(358.8,.05,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.05,21,1,0)
	;;= 
	;;^DD(358.8,.05,21,2,0)
	;;=The width of the text area, measured in characters.
	;;^DD(358.8,.05,"DT")
	;;=2930326
	;;^DD(358.8,.06,0)
	;;=TEXT HEIGHT^RNJ3,0^^0;6^K:+X'=X!(X>200)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(358.8,.06,3)
	;;=How many lines on the block should be allocated for the text?
	;;^DD(358.8,.06,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,.06,21,1,0)
	;;= 
	;;^DD(358.8,.06,21,2,0)
	;;=The height of the text area, measured in lines.
	;;^DD(358.8,.06,"DT")
	;;=2930326
	;;^DD(358.8,1,0)
	;;=TEXT^358.81^^1;0
	;;^DD(358.8,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.8,1,21,1,0)
	;;= 
	;;^DD(358.8,1,21,2,0)
	;;=The text that should appear within the text area.
	;;^DD(358.81,0)
	;;=TEXT SUB-FIELD^^.01^1
	;;^DD(358.81,0,"NM","TEXT")
	;;=
	;;^DD(358.81,0,"UP")
	;;=358.8
	;;^DD(358.81,.01,0)
	;;=TEXT^WL^^0;1^Q
	;;^DD(358.81,.01,3)
	;;=Enter the text that you want to appear in the block.
	;;^DD(358.81,.01,"DT")
	;;=2930326

IBINI09K
IBINI09K	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(358.91)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.91,0,"GL")
	;;=^IBE(358.91,
	;;^DIC("B","IMP/EXP MARKING AREA",358.91)
	;;=
	;;^DIC(358.91,"%D",0)
	;;=^^4^4^2940217^
	;;^DIC(358.91,"%D",1,0)
	;;= 
	;;^DIC(358.91,"%D",2,0)
	;;=This file is nearly identical to file #357.91. It is used by the
	;;^DIC(358.91,"%D",3,0)
	;;=Import/Export Utility as a temporary staging area for data from that file
	;;^DIC(358.91,"%D",4,0)
	;;=that is being imported or exported.
	;;^DD(358.91,0)
	;;=FIELD^^.02^2
	;;^DD(358.91,0,"IX","B",358.91,.01)
	;;=
	;;^DD(358.91,0,"NM","IMP/EXP MARKING AREA")
	;;=
	;;^DD(358.91,0,"PT",358.22,.06)
	;;=
	;;^DD(358.91,.01,0)
	;;=NAME^RFX^^0;1^K:$L(X)>30 X
	;;^DD(358.91,.01,1,0)
	;;=^.1
	;;^DD(358.91,.01,1,1,0)
	;;=358.91^B
	;;^DD(358.91,.01,1,1,1)
	;;=S ^IBE(358.91,"B",$E(X,1,30),DA)=""
	;;^DD(358.91,.01,1,1,2)
	;;=K ^IBE(358.91,"B",$E(X,1,30),DA)
	;;^DD(358.91,.01,3)
	;;=NAME MUST BE UNDER 31 CHARACTERS
	;;^DD(358.91,.01,21,0)
	;;=^^1^1^2930608^
	;;^DD(358.91,.01,21,1,0)
	;;=The name should describe the appearance of the marking area on the form.
	;;^DD(358.91,.02,0)
	;;=DISPLAY STRING^F^^0;2^K:$L(X)>20!($L(X)<1) X
	;;^DD(358.91,.02,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(358.91,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(358.91,.02,21,1,0)
	;;= 
	;;^DD(358.91,.02,21,2,0)
	;;=The text that should be displayed in the MARKING AREA.
	;;^DD(358.91,.02,"DT")
	;;=2921207

IBINI09L
IBINI09L	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(362.1,0,"GL")
	;;=^IBA(362.1,
	;;^DIC("B","IB AUTOMATED BILLING COMMENTS",362.1)
	;;=
	;;^DIC(362.1,"%D",0)
	;;=^^22^22^2940214^^^
	;;^DIC(362.1,"%D",1,0)
	;;=This file contains entries created by the Third Party automated biller.
	;;^DIC(362.1,"%D",2,0)
	;;=As the auto biller attempts to create bills based on events in Claims
	;;^DIC(362.1,"%D",3,0)
	;;=Tracking it sets entries in this file indicating the action taken by the
	;;^DIC(362.1,"%D",4,0)
	;;=auto biller for the event.  The only way entries are added to this
	;;^DIC(362.1,"%D",5,0)
	;;=file is by the auto biller, there is no user entry.
	;;^DIC(362.1,"%D",6,0)
	;;= 
	;;^DIC(362.1,"%D",7,0)
	;;=An entry may be created for the event if a bill could not be created, this
	;;^DIC(362.1,"%D",8,0)
	;;=entry will contain a comment on why the bill could not be created.
	;;^DIC(362.1,"%D",9,0)
	;;=If the Claims Tracking event could not be billed because the Earliest
	;;^DIC(362.1,"%D",10,0)
	;;=Auto Bill date did not match the time frame set by the parameters, no
	;;^DIC(362.1,"%D",11,0)
	;;=entry is made in this file but the events Earliest Auto Bill Date is 
	;;^DIC(362.1,"%D",12,0)
	;;=reset.
	;;^DIC(362.1,"%D",13,0)
	;;=An entry will be created for every event that a bill was created for, in
	;;^DIC(362.1,"%D",14,0)
	;;=some cases these entries will have comments about the event that may be of
	;;^DIC(362.1,"%D",15,0)
	;;=interest to billing the event.
	;;^DIC(362.1,"%D",16,0)
	;;= 
	;;^DIC(362.1,"%D",17,0)
	;;=Entries are deleted from this file in two ways.  Entries for events that
	;;^DIC(362.1,"%D",18,0)
	;;=were billed are only deleted by the system, when the bill is either 
	;;^DIC(362.1,"%D",19,0)
	;;=cancelled or authorized.  Entries without corresponding bills must be 
	;;^DIC(362.1,"%D",20,0)
	;;=manually deleted by a user, with the option provided.
	;;^DIC(362.1,"%D",21,0)
	;;= 
	;;^DIC(362.1,"%D",22,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(362.1,0)
	;;=FIELD^^11^5
	;;^DD(362.1,0,"DDA")
	;;=N
	;;^DD(362.1,0,"DT")
	;;=2930903
	;;^DD(362.1,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBT(356,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(356,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(362.1,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(362.1,0,"IX","B",362.1,.01)
	;;=
	;;^DD(362.1,0,"IX","C",362.1,.02)
	;;=
	;;^DD(362.1,0,"IX","D",362.1,.03)
	;;=
	;;^DD(362.1,0,"NM","IB AUTOMATED BILLING COMMENTS")
	;;=
	;;^DD(362.1,.01,0)
	;;=NUMBER^RNJ3,0^^0;1^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(362.1,.01,1,0)
	;;=^.1
	;;^DD(362.1,.01,1,1,0)
	;;=362.1^B
	;;^DD(362.1,.01,1,1,1)
	;;=S ^IBA(362.1,"B",$E(X,1,30),DA)=""
	;;^DD(362.1,.01,1,1,2)
	;;=K ^IBA(362.1,"B",$E(X,1,30),DA)
	;;^DD(362.1,.01,3)
	;;=Type a Number between 0 and 999, 0 Decimal Digits
	;;^DD(362.1,.01,21,0)
	;;=^^1^1^2931229^
	;;^DD(362.1,.01,21,1,0)
	;;=A reference number that should be unique for each entry.
	;;^DD(362.1,.01,"DT")
	;;=2930903
	;;^DD(362.1,.02,0)
	;;=CLAIMS TRACKING ID^P356'^IBT(356,^0;2^Q
	;;^DD(362.1,.02,1,0)
	;;=^.1
	;;^DD(362.1,.02,1,1,0)
	;;=362.1^C
	;;^DD(362.1,.02,1,1,1)
	;;=S ^IBA(362.1,"C",$E(X,1,30),DA)=""
	;;^DD(362.1,.02,1,1,2)
	;;=K ^IBA(362.1,"C",$E(X,1,30),DA)
	;;^DD(362.1,.02,1,1,"DT")
	;;=2930905
	;;^DD(362.1,.02,3)
	;;=Enter a Claims Tracking event.
	;;^DD(362.1,.02,21,0)
	;;=^^1^1^2931229^
	;;^DD(362.1,.02,21,1,0)
	;;=The Claims Tracking event for this comment entry.

IBINI09M
IBINI09M	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(362.1,.02,"DT")
	;;=2930905
	;;^DD(362.1,.03,0)
	;;=BILL NUMBER^P399'^DGCR(399,^0;3^Q
	;;^DD(362.1,.03,1,0)
	;;=^.1
	;;^DD(362.1,.03,1,1,0)
	;;=362.1^D
	;;^DD(362.1,.03,1,1,1)
	;;=S ^IBA(362.1,"D",$E(X,1,30),DA)=""
	;;^DD(362.1,.03,1,1,2)
	;;=K ^IBA(362.1,"D",$E(X,1,30),DA)
	;;^DD(362.1,.03,1,1,"DT")
	;;=2930906
	;;^DD(362.1,.03,3)
	;;=Enter a bill number.
	;;^DD(362.1,.03,21,0)
	;;=^^1^1^2931229^
	;;^DD(362.1,.03,21,1,0)
	;;=This is the bill associated with the Claims Tracking event, if any.
	;;^DD(362.1,.03,"DT")
	;;=2930906
	;;^DD(362.1,.05,0)
	;;=DATE ENTERED^RD^^0;5^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(362.1,.05,1,0)
	;;=^.1^^0
	;;^DD(362.1,.05,3)
	;;=Enter a date.
	;;^DD(362.1,.05,21,0)
	;;=^^3^3^2931229^
	;;^DD(362.1,.05,21,1,0)
	;;=This is the date the event was added to the comments file.  This is
	;;^DD(362.1,.05,21,2,0)
	;;=usually the date the auto biller first tried to create a bill for the
	;;^DD(362.1,.05,21,3,0)
	;;=event.
	;;^DD(362.1,.05,"DT")
	;;=2940211
	;;^DD(362.1,11,0)
	;;=COMMENTS^362.111^^11;0
	;;^DD(362.1,11,21,0)
	;;=^^2^2^2931229^
	;;^DD(362.1,11,21,1,0)
	;;=Comments associated with the Claims Tracking event the the Bill/Claims 
	;;^DD(362.1,11,21,2,0)
	;;=bill.
	;;^DD(362.111,0)
	;;=COMMENTS SUB-FIELD^^.01^1
	;;^DD(362.111,0,"DT")
	;;=2930903
	;;^DD(362.111,0,"NM","COMMENTS")
	;;=
	;;^DD(362.111,0,"UP")
	;;=362.1
	;;^DD(362.111,.01,0)
	;;=COMMENTS^W^^0;1^Q
	;;^DD(362.111,.01,"DT")
	;;=2930903

IBINI09N
IBINI09N	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(362.3,0,"GL")
	;;=^IBA(362.3,
	;;^DIC("B","IB BILL/CLAIMS DIAGNOSIS",362.3)
	;;=
	;;^DIC(362.3,"%D",0)
	;;=^^3^3^2940214^^^^
	;;^DIC(362.3,"%D",1,0)
	;;=This file contains all diagnoses for bills in the Bill/Claims file.
	;;^DIC(362.3,"%D",2,0)
	;;= 
	;;^DIC(362.3,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(362.3,0)
	;;=FIELD^^.01^3
	;;^DD(362.3,0,"DDA")
	;;=N
	;;^DD(362.3,0,"DT")
	;;=2931229
	;;^DD(362.3,0,"ID",.02)
	;;=W ""
	;;^DD(362.3,0,"IX","AIFN",362.3,.01)
	;;=
	;;^DD(362.3,0,"IX","AIFN1",362.3,.02)
	;;=
	;;^DD(362.3,0,"IX","AO",362.3,.02)
	;;=
	;;^DD(362.3,0,"IX","AO1",362.3,.03)
	;;=
	;;^DD(362.3,0,"IX","B",362.3,.01)
	;;=
	;;^DD(362.3,0,"NM","IB BILL/CLAIMS DIAGNOSIS")
	;;=
	;;^DD(362.3,0,"PT",399.0304,10)
	;;=
	;;^DD(362.3,0,"PT",399.0304,11)
	;;=
	;;^DD(362.3,0,"PT",399.0304,12)
	;;=
	;;^DD(362.3,0,"PT",399.0304,13)
	;;=
	;;^DD(362.3,.01,0)
	;;=DIAGNOSIS^R*P80'^ICD9(^0;1^S DIC("S")="I '$P(^(0),U,9),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(362.3,.01,1,0)
	;;=^.1^^-1
	;;^DD(362.3,.01,1,1,0)
	;;=362.3^B
	;;^DD(362.3,.01,1,1,1)
	;;=S ^IBA(362.3,"B",$E(X,1,30),DA)=""
	;;^DD(362.3,.01,1,1,2)
	;;=K ^IBA(362.3,"B",$E(X,1,30),DA)
	;;^DD(362.3,.01,1,2,0)
	;;=362.3^AIFN^MUMPS
	;;^DD(362.3,.01,1,2,1)
	;;=S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)=""
	;;^DD(362.3,.01,1,2,2)
	;;=K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AIFN"_+$P(^(0),U,2),+X,DA)
	;;^DD(362.3,.01,1,2,"%D",0)
	;;=^^2^2^2940214^^^^
	;;^DD(362.3,.01,1,2,"%D",1,0)
	;;=Special x-ref set up specifically to provide a regular x-ref of a bill and
	;;^DD(362.3,.01,1,2,"%D",2,0)
	;;=all it's diagnoses for easy look-up.
	;;^DD(362.3,.01,1,2,"DT")
	;;=2931117
	;;^DD(362.3,.01,3)
	;;=Enter a diagnosis for this bill.  Duplicates are not allowed.
	;;^DD(362.3,.01,4)
	;;=D HELP^IBCSC4D
	;;^DD(362.3,.01,12)
	;;=Only active diagnosis, no duplicates for a bill, and bill must not be authorized or cancelled.
	;;^DD(362.3,.01,12.1)
	;;=S DIC("S")="I '$P(^(0),U,9),'$$DXDUP^IBCU1(+Y,$G(DA)),$$DXBSTAT^IBCU1($G(DA))<3"
	;;^DD(362.3,.01,21,0)
	;;=^^1^1^2931123^^^^
	;;^DD(362.3,.01,21,1,0)
	;;=Enter an active diagnosis for this bill.
	;;^DD(362.3,.01,23,0)
	;;=^^1^1^2931123^^^^
	;;^DD(362.3,.01,23,1,0)
	;;=All diagnosis for a bill are stored here, beginning with IB v2.0.
	;;^DD(362.3,.01,"DT")
	;;=2931123
	;;^DD(362.3,.02,0)
	;;=BILL NUMBER^R*P399'^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)<3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(362.3,.02,1,0)
	;;=^.1
	;;^DD(362.3,.02,1,1,0)
	;;=362.3^AIFN1^MUMPS
	;;^DD(362.3,.02,1,1,1)
	;;=S ^IBA(362.3,"AIFN"_X,+^IBA(362.3,DA,0),DA)=""
	;;^DD(362.3,.02,1,1,2)
	;;=K ^IBA(362.3,"AIFN"_X,+^IBA(362.3,DA,0),DA)
	;;^DD(362.3,.02,1,1,"%D",0)
	;;=^^2^2^2940214^^^
	;;^DD(362.3,.02,1,1,"%D",1,0)
	;;=Special x-ref set up specifically to provide a regular x-ref of a bill and
	;;^DD(362.3,.02,1,1,"%D",2,0)
	;;=all it's diagnoses for easy look-up.
	;;^DD(362.3,.02,1,1,"DT")
	;;=2931117
	;;^DD(362.3,.02,1,2,0)
	;;=362.3^AO^MUMPS
	;;^DD(362.3,.02,1,2,1)
	;;=S:+$P(^IBA(362.3,DA,0),U,3) ^IBA(362.3,"AO",+X,+$P(^(0),U,3),DA)=""
	;;^DD(362.3,.02,1,2,2)
	;;=K:+$P(^IBA(362.3,DA,0),U,3) ^IBA(362.3,"AO",+X,+$P(^(0),U,3),DA)
	;;^DD(362.3,.02,1,2,"%D",0)
	;;=^^1^1^2931117^
	;;^DD(362.3,.02,1,2,"%D",1,0)
	;;=Print order by bill, used to prevent duplicate print orders for a bill.
	;;^DD(362.3,.02,1,2,"DT")
	;;=2931117
	;;^DD(362.3,.02,1,3,0)
	;;=^^TRIGGER^362.3^.03
	;;^DD(362.3,.02,1,3,1)
	;;~K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^IBA(362.3,D0,0)):^(0),1:"") S X=$
	;;=P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$ORDNXT^IBCU1(+X) X ^DD(362.3,.02,1,3,1.4)

IBINI09O
IBINI09O	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(362.3,.02,1,3,1.4)
	;;=S DIH=$S($D(^IBA(362.3,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,3)=DIV,DIH=362.3,DIG=.03 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(362.3,.02,1,3,2)
	;;=Q
	;;^DD(362.3,.02,1,3,"%D",0)
	;;=^^1^1^2940112^
	;;^DD(362.3,.02,1,3,"%D",1,0)
	;;=Sets default value for print order.
	;;^DD(362.3,.02,1,3,"CREATE CONDITION")
	;;=ORDER=""
	;;^DD(362.3,.02,1,3,"CREATE VALUE")
	;;=S X=$$ORDNXT^IBCU1(+X)
	;;^DD(362.3,.02,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(362.3,.02,1,3,"DT")
	;;=2940112
	;;^DD(362.3,.02,1,3,"FIELD")
	;;=ORDER
	;;^DD(362.3,.02,3)
	;;=The bill that this diagnosis is related to.
	;;^DD(362.3,.02,12)
	;;=Diagnosis can only be added to open bills.
	;;^DD(362.3,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,13)<3"
	;;^DD(362.3,.02,"DT")
	;;=2940112
	;;^DD(362.3,.03,0)
	;;=ORDER^NJ3,0X^^0;3^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N)!($$DXBSTAT^IBCU1(DA)>2)!($$ORDDUP^IBCU1(+X,DA)) X
	;;^DD(362.3,.03,1,0)
	;;=^.1
	;;^DD(362.3,.03,1,1,0)
	;;=362.3^AO1^MUMPS
	;;^DD(362.3,.03,1,1,1)
	;;=S:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AO",+$P(^(0),U,2),+X,DA)=""
	;;^DD(362.3,.03,1,1,2)
	;;=K:+$P(^IBA(362.3,DA,0),U,2) ^IBA(362.3,"AO",+$P(^(0),U,2),+X,DA)
	;;^DD(362.3,.03,1,1,"%D",0)
	;;=^^1^1^2931117^
	;;^DD(362.3,.03,1,1,"%D",1,0)
	;;=Print order by bill, used to prevent duplicate print orders for a bill.
	;;^DD(362.3,.03,1,1,"DT")
	;;=2931117
	;;^DD(362.3,.03,3)
	;;=Type a Number between 1 and 999, 0 Decimal Digits.  This is the order that the diagnoses will be printed on a bill.  Each number must be unique for a bill.
	;;^DD(362.3,.03,4)
	;;=D HELP^IBCSC4D
	;;^DD(362.3,.03,5,1,0)
	;;=362.3^.02^3
	;;^DD(362.3,.03,"DT")
	;;=2931123

IBINI09P
IBINI09P	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(362.4,0,"GL")
	;;=^IBA(362.4,
	;;^DIC("B","IB BILL/CLAIMS PRESCRIPTION REFILL",362.4)
	;;=
	;;^DIC(362.4,"%D",0)
	;;=^^3^3^2940214^^
	;;^DIC(362.4,"%D",1,0)
	;;=This file contains all prescription refills for bills in the Bill/Claims file.
	;;^DIC(362.4,"%D",2,0)
	;;= 
	;;^DIC(362.4,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(362.4,0)
	;;=FIELD^^.03^8
	;;^DD(362.4,0,"DDA")
	;;=N
	;;^DD(362.4,0,"DT")
	;;=2940208
	;;^DD(362.4,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(362.4,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(362.4,0,"IX","AIFN",362.4,.01)
	;;=
	;;^DD(362.4,0,"IX","AIFN1",362.4,.02)
	;;=
	;;^DD(362.4,0,"IX","B",362.4,.01)
	;;=
	;;^DD(362.4,0,"IX","C",362.4,.02)
	;;=
	;;^DD(362.4,0,"NM","IB BILL/CLAIMS PRESCRIPTION REFILL")
	;;=
	;;^DD(362.4,.01,0)
	;;=RX #^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>11!($L(X)<1) X
	;;^DD(362.4,.01,1,0)
	;;=^.1
	;;^DD(362.4,.01,1,1,0)
	;;=362.4^B
	;;^DD(362.4,.01,1,1,1)
	;;=S ^IBA(362.4,"B",$E(X,1,30),DA)=""
	;;^DD(362.4,.01,1,1,2)
	;;=K ^IBA(362.4,"B",$E(X,1,30),DA)
	;;^DD(362.4,.01,1,2,0)
	;;=362.4^AIFN^MUMPS
	;;^DD(362.4,.01,1,2,1)
	;;=S:+$P(^IBA(362.4,+DA,0),U,2) ^IBA(362.4,"AIFN"_+$P(^(0),U,2),X,+DA)=""
	;;^DD(362.4,.01,1,2,2)
	;;=K:+$P(^IBA(362.4,+DA,0),U,2) ^IBA(362.4,"AIFN"_+$P(^(0),U,2),X,+DA)
	;;^DD(362.4,.01,1,2,"%D",0)
	;;=^^2^2^2931229^^
	;;^DD(362.4,.01,1,2,"%D",1,0)
	;;=Special x-ref set up specifically to provide a regular x-ref of a bill and
	;;^DD(362.4,.01,1,2,"%D",2,0)
	;;=all it's rx refills for easy look-up.
	;;^DD(362.4,.01,1,2,"DT")
	;;=2931229
	;;^DD(362.4,.01,1,3,0)
	;;=^^TRIGGER^362.4^.05
	;;^DD(362.4,.01,1,3,1)
	;;=Q
	;;^DD(362.4,.01,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(362.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(362.4,.01,1,3,2.4)
	;;^DD(362.4,.01,1,3,2.4)
	;;=S DIH=$S($D(^IBA(362.4,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=362.4,DIG=.05 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(362.4,.01,1,3,"%D",0)
	;;=^^1^1^2931229^
	;;^DD(362.4,.01,1,3,"%D",1,0)
	;;=Deletes the Prescription Record pointer if the Prescription Number is modified.
	;;^DD(362.4,.01,1,3,"CREATE VALUE")
	;;=NO EFFECT
	;;^DD(362.4,.01,1,3,"DELETE VALUE")
	;;=@
	;;^DD(362.4,.01,1,3,"DT")
	;;=2931229
	;;^DD(362.4,.01,1,3,"FIELD")
	;;=RECORD
	;;^DD(362.4,.01,3)
	;;=Answer must be 1-11 characters in length.
	;;^DD(362.4,.01,21,0)
	;;=^^1^1^2940223^^^^
	;;^DD(362.4,.01,21,1,0)
	;;=The prescription number for the refill.
	;;^DD(362.4,.01,23,0)
	;;=^^3^3^2940223^^^^
	;;^DD(362.4,.01,23,1,0)
	;;=A free text pointer (may correspond to 52,.01).  Because prescriptions 
	;;^DD(362.4,.01,23,2,0)
	;;=may be deleted from file 52 or prescriptions added that may not be from  
	;;^DD(362.4,.01,23,3,0)
	;;=outpatient pharmacy this may not be defined in the Prescription file (52).
	;;^DD(362.4,.01,"DT")
	;;=2931229
	;;^DD(362.4,.02,0)
	;;=BILL NUMBER^R*P399'^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)<3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(362.4,.02,1,0)
	;;=^.1
	;;^DD(362.4,.02,1,1,0)
	;;=362.4^AIFN1^MUMPS
	;;^DD(362.4,.02,1,1,1)
	;;=S ^IBA(362.4,"AIFN"_X,$P(^IBA(362.4,+DA,0),U,1),DA)=""
	;;^DD(362.4,.02,1,1,2)
	;;=K ^IBA(362.4,"AIFN"_X,$P(^IBA(362.4,+DA,0),U,1),DA)
	;;^DD(362.4,.02,1,1,"%D",0)
	;;=^^2^2^2931229^^^
	;;^DD(362.4,.02,1,1,"%D",1,0)
	;;=Special x-ref set up specifically to provide a regular x-ref of a bill and

IBINI09Q
IBINI09Q	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(362.4,.02,1,1,"%D",2,0)
	;;=all it's rx refills for easy look-up.
	;;^DD(362.4,.02,1,1,"DT")
	;;=2931229
	;;^DD(362.4,.02,1,2,0)
	;;=362.4^C
	;;^DD(362.4,.02,1,2,1)
	;;=S ^IBA(362.4,"C",$E(X,1,30),DA)=""
	;;^DD(362.4,.02,1,2,2)
	;;=K ^IBA(362.4,"C",$E(X,1,30),DA)
	;;^DD(362.4,.02,1,2,"DT")
	;;=2940110
	;;^DD(362.4,.02,3)
	;;=Enter a bill number.
	;;^DD(362.4,.02,12)
	;;=Only open bills may be modified.
	;;^DD(362.4,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,13)<3"
	;;^DD(362.4,.02,21,0)
	;;=^^1^1^2931229^
	;;^DD(362.4,.02,21,1,0)
	;;=The bill this rx refill is associated with.
	;;^DD(362.4,.02,"DT")
	;;=2940110
	;;^DD(362.4,.03,0)
	;;=DATE^D^^0;3^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(362.4,.03,3)
	;;=Enter the refill date.
	;;^DD(362.4,.03,21,0)
	;;=^^1^1^2940208^
	;;^DD(362.4,.03,21,1,0)
	;;=The date of the refill that is being billed.
	;;^DD(362.4,.03,"DT")
	;;=2940208
	;;^DD(362.4,.04,0)
	;;=DRUG^RP50'^PSDRUG(^0;4^Q
	;;^DD(362.4,.04,3)
	;;=Enter the drug for this prescription.
	;;^DD(362.4,.04,21,0)
	;;=^^1^1^2931223^
	;;^DD(362.4,.04,21,1,0)
	;;=The drug prescribed.
	;;^DD(362.4,.04,"DT")
	;;=2931223
	;;^DD(362.4,.05,0)
	;;=RECORD^P52'^PSRX(^0;5^Q
	;;^DD(362.4,.05,3)
	;;=This is the Prescription record for this refill.
	;;^DD(362.4,.05,5,1,0)
	;;=362.4^.01^3
	;;^DD(362.4,.05,21,0)
	;;=^^1^1^2931229^
	;;^DD(362.4,.05,21,1,0)
	;;=Enter the Prescription record for this refill.
	;;^DD(362.4,.05,23,0)
	;;=^^4^4^2931229^
	;;^DD(362.4,.05,23,1,0)
	;;=This should be automatically set by the system if a Prescription (52) 
	;;^DD(362.4,.05,23,2,0)
	;;=refill is chosen.  This is not required because not all items may be
	;;^DD(362.4,.05,23,3,0)
	;;=outpatient prescriptions, such as fee basis charges.
	;;^DD(362.4,.05,23,4,0)
	;;=Also, note that the Prescription (52) is not a permanent file.
	;;^DD(362.4,.05,"DT")
	;;=2931229
	;;^DD(362.4,.06,0)
	;;=DAYS SUPPLY^NJ2,0^^0;6^K:+X'=X!(X>90)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(362.4,.06,3)
	;;=Type a Number between 1 and 90, 0 Decimal Digits
	;;^DD(362.4,.06,21,0)
	;;=^^1^1^2940110^^^^
	;;^DD(362.4,.06,21,1,0)
	;;=This should be the number of days supplied of the drug dispensed in this refill.
	;;^DD(362.4,.06,23,0)
	;;=^^1^1^2940110^^^
	;;^DD(362.4,.06,23,1,0)
	;;=Passed from (52,8) 
	;;^DD(362.4,.06,"DT")
	;;=2940110
	;;^DD(362.4,.07,0)
	;;=QTY^NJ3,0^^0;7^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(362.4,.07,3)
	;;=Type a Number between 0 and 999, 0 Decimal Digits
	;;^DD(362.4,.07,21,0)
	;;=^^2^2^2940110^^^
	;;^DD(362.4,.07,21,1,0)
	;;=This should be the quantity (# of tablets, pills, items, etc.) of the drug 
	;;^DD(362.4,.07,21,2,0)
	;;=dispensed in this refill.
	;;^DD(362.4,.07,23,0)
	;;=^^1^1^2940110^^
	;;^DD(362.4,.07,23,1,0)
	;;=Loaded from (52,52,1)
	;;^DD(362.4,.07,"DT")
	;;=2940110
	;;^DD(362.4,.08,0)
	;;=NDC #^F^^0;8^K:$L(X)>20!($L(X)<1) X
	;;^DD(362.4,.08,3)
	;;=Answer must be 1-20 characters in length.
	;;^DD(362.4,.08,21,0)
	;;=^^1^1^2940112^^^
	;;^DD(362.4,.08,21,1,0)
	;;=Enter the NDC number for this drug, if it should be printed on the bill.
	;;^DD(362.4,.08,23,0)
	;;=^^1^1^2940112^^
	;;^DD(362.4,.08,23,1,0)
	;;=Not loaded from pharmacy.
	;;^DD(362.4,.08,"DT")
	;;=2940112

IBINI09R
IBINI09R	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(362.5,0,"GL")
	;;=^IBA(362.5,
	;;^DIC("B","IB BILL/CLAIMS PROSTHETICS",362.5)
	;;=
	;;^DIC(362.5,"%D",0)
	;;=^^3^3^2940214^^
	;;^DIC(362.5,"%D",1,0)
	;;=This file contains all prosthetic items for bills in the Bill/Claims file.
	;;^DIC(362.5,"%D",2,0)
	;;= 
	;;^DIC(362.5,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(362.5,0)
	;;=FIELD^^.04^4
	;;^DD(362.5,0,"DDA")
	;;=N
	;;^DD(362.5,0,"DT")
	;;=2931229
	;;^DD(362.5,0,"IX","AIFN",362.5,.01)
	;;=
	;;^DD(362.5,0,"IX","AIFN1",362.5,.02)
	;;=
	;;^DD(362.5,0,"IX","B",362.5,.01)
	;;=
	;;^DD(362.5,0,"NM","IB BILL/CLAIMS PROSTHETICS")
	;;=
	;;^DD(362.5,.01,0)
	;;=DELIVERY DATE^RD^^0;1^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(362.5,.01,1,0)
	;;=^.1
	;;^DD(362.5,.01,1,1,0)
	;;=362.5^B
	;;^DD(362.5,.01,1,1,1)
	;;=S ^IBA(362.5,"B",$E(X,1,30),DA)=""
	;;^DD(362.5,.01,1,1,2)
	;;=K ^IBA(362.5,"B",$E(X,1,30),DA)
	;;^DD(362.5,.01,1,2,0)
	;;=362.5^AIFN^MUMPS
	;;^DD(362.5,.01,1,2,1)
	;;=S:+$P(^IBA(362.5,+DA,0),U,2) ^IBA(362.5,"AIFN"_+$P(^(0),U,2),+X,+DA)=""
	;;^DD(362.5,.01,1,2,2)
	;;=K:+$P(^IBA(362.5,+DA,0),U,2) ^IBA(362.5,"AIFN"_+$P(^(0),U,2),+X,+DA)
	;;^DD(362.5,.01,1,2,"%D",0)
	;;=^^1^1^2931228^
	;;^DD(362.5,.01,1,2,"%D",1,0)
	;;=Set-up for quick cross reference of all prosthetic devices on a bill.
	;;^DD(362.5,.01,1,2,"DT")
	;;=2931228
	;;^DD(362.5,.01,1,3,0)
	;;=^^TRIGGER^362.5^.04
	;;^DD(362.5,.01,1,3,1)
	;;=Q
	;;^DD(362.5,.01,1,3,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(362.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(362.5,.01,1,3,2.4)
	;;^DD(362.5,.01,1,3,2.4)
	;;=S DIH=$S($D(^IBA(362.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=362.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(362.5,.01,1,3,"%D",0)
	;;=^^3^3^2931229^
	;;^DD(362.5,.01,1,3,"%D",1,0)
	;;=Deletes
	;;^DD(362.5,.01,1,3,"%D",2,0)
	;;=the Prescription Transaction Record pointer if the Delivery Date is 
	;;^DD(362.5,.01,1,3,"%D",3,0)
	;;=changed.
	;;^DD(362.5,.01,1,3,"CREATE VALUE")
	;;=NO EFFECT
	;;^DD(362.5,.01,1,3,"DELETE VALUE")
	;;=@
	;;^DD(362.5,.01,1,3,"DT")
	;;=2931229
	;;^DD(362.5,.01,1,3,"FIELD")
	;;=record
	;;^DD(362.5,.01,3)
	;;=Enter the date the item was delivered to the patient.
	;;^DD(362.5,.01,21,0)
	;;=^^2^2^2931229^^
	;;^DD(362.5,.01,21,1,0)
	;;=This is the date the prosthetic item was delivered and accepted by the
	;;^DD(362.5,.01,21,2,0)
	;;=patient.
	;;^DD(362.5,.01,"DT")
	;;=2931229
	;;^DD(362.5,.02,0)
	;;=BILL NUMBER^R*P399'^DGCR(399,^0;2^S DIC("S")="I $P(^(0),U,13)<3" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(362.5,.02,1,0)
	;;=^.1
	;;^DD(362.5,.02,1,1,0)
	;;=362.5^AIFN1^MUMPS
	;;^DD(362.5,.02,1,1,1)
	;;=S ^IBA(362.5,"AIFN"_+X,+^IBA(362.5,+DA,0),DA)=""
	;;^DD(362.5,.02,1,1,2)
	;;=K ^IBA(362.5,"AIFN"_+X,+^IBA(362.5,+DA,0),DA)
	;;^DD(362.5,.02,1,1,"%D",0)
	;;=^^1^1^2931228^
	;;^DD(362.5,.02,1,1,"%D",1,0)
	;;=Set-up for quick cross reference of all prosthetic devices on a bill.
	;;^DD(362.5,.02,1,1,"DT")
	;;=2931228
	;;^DD(362.5,.02,3)
	;;=The bill number associated with this prosthetic item.
	;;^DD(362.5,.02,12)
	;;=Only open biils!
	;;^DD(362.5,.02,12.1)
	;;=S DIC("S")="I $P(^(0),U,13)<3"
	;;^DD(362.5,.02,"DT")
	;;=2931228
	;;^DD(362.5,.03,0)
	;;=ITEM^RP661'^RMPR(661,^0;3^Q
	;;^DD(362.5,.03,3)
	;;=Enter the prosthetic item to be added to this bill.
	;;^DD(362.5,.03,21,0)
	;;=^^1^1^2931229^^^^
	;;^DD(362.5,.03,21,1,0)
	;;=The prosthetic item added to the bill.
	;;^DD(362.5,.03,23,0)
	;;=^^2^2^2931229^^^
	;;^DD(362.5,.03,23,1,0)
	;;=This should be automatically set by the system if a prosthetic record

IBINI09S
IBINI09S	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(362.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(362.5,.03,23,2,0)
	;;=is chosen.
	;;^DD(362.5,.03,"DT")
	;;=2931229
	;;^DD(362.5,.04,0)
	;;=RECORD^P660'^RMPR(660,^0;4^Q
	;;^DD(362.5,.04,3)
	;;=Enter the record for this prosthetic item transaction.
	;;^DD(362.5,.04,5,1,0)
	;;=362.5^.01^3
	;;^DD(362.5,.04,21,0)
	;;=^^1^1^2931229^^^^
	;;^DD(362.5,.04,21,1,0)
	;;=This is the Prosthetic record for this item transaction.
	;;^DD(362.5,.04,23,0)
	;;=^^3^3^2931229^^^^
	;;^DD(362.5,.04,23,1,0)
	;;=This should be automatically set by the system if a prosthetic record
	;;^DD(362.5,.04,23,2,0)
	;;=is chosen.  This is not required because not all items may be from
	;;^DD(362.5,.04,23,3,0)
	;;=prosthetics, such as fee basis charges.
	;;^DD(362.5,.04,"DT")
	;;=2931229

IBINI09T
IBINI09T	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399,0,"GL")
	;;=^DGCR(399,
	;;^DIC("B","BILL/CLAIMS",399)
	;;=
	;;^DIC(399,"%D",0)
	;;=^^8^8^2940215^^^^
	;;^DIC(399,"%D",1,0)
	;;=This file contains all of the information necessary to complete a 
	;;^DIC(399,"%D",2,0)
	;;=Third Party billing form.
	;;^DIC(399,"%D",3,0)
	;;= 
	;;^DIC(399,"%D",4,0)
	;;=The entries in this file have matching entries in the Accounts Receivable
	;;^DIC(399,"%D",5,0)
	;;=file (430).  The internal number in the AR file is the same as the internal
	;;^DIC(399,"%D",6,0)
	;;=number in the BILL/CLAIMS file.
	;;^DIC(399,"%D",7,0)
	;;= 
	;;^DIC(399,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399,0)
	;;=FIELD^^217^131
	;;^DD(399,0,"DDA")
	;;=N
	;;^DD(399,0,"DIK")
	;;=IBXX
	;;^DD(399,0,"DT")
	;;=2940310
	;;^DD(399,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DPT(+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(399,0,"ID",.03)
	;;=W "   ",$E($P(^(0),U,3),4,5)_"-"_$E($P(^(0),U,3),6,7)_"-"_$E($P(^(0),U,3),2,3)
	;;^DD(399,0,"ID",.05)
	;;=I $P(@(DIC_"Y,0)"),U,5) W "   ",$S($P(^(0),U,5)>2:"Outpatient",1:"Inpatient")
	;;^DD(399,0,"ID",.07)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399.3,+$P(^(0),U,7),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399.3,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(399,0,"ID",.13)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(399,.13,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,13)_"":"",2),$C(59),1)")
	;;^DD(399,0,"IX","ABNDT",399,.03)
	;;=
	;;^DD(399,0,"IX","ABT",399,.05)
	;;=
	;;^DD(399,0,"IX","AC",399,.17)
	;;=
	;;^DD(399,0,"IX","AD",399,.07)
	;;=
	;;^DD(399,0,"IX","AE",399,101)
	;;=
	;;^DD(399,0,"IX","AI1",399,101)
	;;=
	;;^DD(399,0,"IX","AI11",399,112)
	;;=
	;;^DD(399,0,"IX","AI2",399,102)
	;;=
	;;^DD(399,0,"IX","AI21",399,113)
	;;=
	;;^DD(399,0,"IX","AI3",399,103)
	;;=
	;;^DD(399,0,"IX","AI31",399,114)
	;;=
	;;^DD(399,0,"IX","AML",399,111)
	;;=
	;;^DD(399,0,"IX","AML1",399,.11)
	;;=
	;;^DD(399,0,"IX","AOP",399,.13)
	;;=
	;;^DD(399,0,"IX","AOPV",399.043,.01)
	;;=
	;;^DD(399,0,"IX","AP",399,12)
	;;=
	;;^DD(399,0,"IX","APD",399,1)
	;;=
	;;^DD(399,0,"IX","APDT",399,.03)
	;;=
	;;^DD(399,0,"IX","APTF",399,.08)
	;;=
	;;^DD(399,0,"IX","AREV1",399.043,.01)
	;;=
	;;^DD(399,0,"IX","AREV2",399,151)
	;;=
	;;^DD(399,0,"IX","AREV3",399,152)
	;;=
	;;^DD(399,0,"IX","AREV4",399,101)
	;;=
	;;^DD(399,0,"IX","AREV5",399,111)
	;;=
	;;^DD(399,0,"IX","AREV6",399,.11)
	;;=
	;;^DD(399,0,"IX","AREV7",399,.19)
	;;=
	;;^DD(399,0,"IX","ASC1",399.042,.06)
	;;=
	;;^DD(399,0,"IX","ASC11",399.042,.07)
	;;=
	;;^DD(399,0,"IX","ASC2",399.042,.06)
	;;=
	;;^DD(399,0,"IX","ASC21",399.042,.07)
	;;=
	;;^DD(399,0,"IX","ASD",399.0304,.01)
	;;=
	;;^DD(399,0,"IX","ASD1",399.0304,1)
	;;=
	;;^DD(399,0,"IX","AST",399,.13)
	;;=
	;;^DD(399,0,"IX","B",399,.01)
	;;=
	;;^DD(399,0,"IX","C",399,.02)
	;;=
	;;^DD(399,0,"IX","D",399,.03)
	;;=
	;;^DD(399,0,"IX","E",399,12)
	;;=
	;;^DD(399,0,"NM","BILL/CLAIMS")
	;;=
	;;^DD(399,0,"PT",356,.11)
	;;=
	;;^DD(399,0,"PT",356.399,.02)
	;;=
	;;^DD(399,0,"PT",362.1,.03)
	;;=
	;;^DD(399,0,"PT",362.3,.02)
	;;=
	;;^DD(399,0,"PT",362.4,.02)
	;;=
	;;^DD(399,0,"PT",362.5,.02)
	;;=
	;;^DD(399,0,"PT",399,.15)
	;;=
	;;^DD(399,0,"PT",399,.17)
	;;=
	;;^DD(399,.01,0)
	;;=BILL NUMBER^RFXI^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:X'?.ANP X I $D(X) K:$E(X)=" " X
	;;^DD(399,.01,1,0)
	;;=^.1
	;;^DD(399,.01,1,1,0)
	;;=399^B
	;;^DD(399,.01,1,1,1)
	;;=S ^DGCR(399,"B",$E(X,1,30),DA)=""
	;;^DD(399,.01,1,1,2)
	;;=K ^DGCR(399,"B",$E(X,1,30),DA)
	;;^DD(399,.01,1,3,0)
	;;=^^TRIGGER^399^1

IBINI09U
IBINI09U	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.01,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,.01,1,3,1.4)
	;;^DD(399,.01,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,1)=DIV,DIH=399,DIG=1 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.01,1,3,2)
	;;=Q
	;;^DD(399,.01,1,3,"CREATE CONDITION")
	;;=DATE ENTERED=""
	;;^DD(399,.01,1,3,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,.01,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.01,1,3,"FIELD")
	;;=#1
	;;^DD(399,.01,1,4,0)
	;;=^^TRIGGER^399^2
	;;^DD(399,.01,1,4,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$S(($D(DUZ)#2):DUZ,1:"") X ^DD(399,.01,1,4,1.4)
	;;^DD(399,.01,1,4,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,2)=DIV,DIH=399,DIG=2 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.01,1,4,2)
	;;=Q
	;;^DD(399,.01,1,4,"CREATE VALUE")
	;;=S X=$S(($D(DUZ)#2):DUZ,1:"")
	;;^DD(399,.01,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.01,1,4,"FIELD")
	;;=#2
	;;^DD(399,.01,1,5,0)
	;;=^^TRIGGER^399^164
	;;^DD(399,.01,1,5,1)
	;;~K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,14)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:""
	;;=) S X=$P(Y(1),U,14),X=X S DIU=X K Y X ^DD(399,.01,1,5,1.1) X ^DD(399,.01,1,5,1.4)
	;;^DD(399,.01,1,5,1.1)
	;;=S X=DIV S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"")
	;;^DD(399,.01,1,5,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,14)=DIV,DIH=399,DIG=164 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.01,1,5,2)
	;;=Q
	;;^DD(399,.01,1,5,"%D",0)
	;;=^^2^2^2920205^
	;;^DD(399,.01,1,5,"%D",1,0)
	;;=This will automatically store the default BC/BS PROVIDER # from the
	;;^DD(399,.01,1,5,"%D",2,0)
	;;=IB SITE PARAMETERS file into the BC/BS PROVIDER # field for this bill.
	;;^DD(399,.01,1,5,"CREATE CONDITION")
	;;=#164=""
	;;^DD(399,.01,1,5,"CREATE VALUE")
	;;=S X=$S($D(^IBE(350.9,1,1)):$P(^(1),U,6),1:"")
	;;^DD(399,.01,1,5,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.01,1,5,"DT")
	;;=2920205
	;;^DD(399,.01,1,5,"FIELD")
	;;=#164
	;;^DD(399,.01,1,6,0)
	;;=^^TRIGGER^399^.13
	;;^DD(399,.01,1,6,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(399,.01,1,6,1.4)
	;;^DD(399,.01,1,6,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.01,1,6,2)
	;;=Q
	;;^DD(399,.01,1,6,"CREATE VALUE")
	;;=S X=1
	;;^DD(399,.01,1,6,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.01,1,6,"FIELD")
	;;=#.13
	;;^DD(399,.01,1,7,0)
	;;=^^TRIGGER^399^.19
	;;^DD(399,.01,1,7,1)
	;;=X ^DD(399,.01,1,7,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV S X=$P($G(^IBE(350.9,1,1)),U,26) X ^DD(399,.01,1,7,1.4)
	;;^DD(399,.01,1,7,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$S('$D(^IBE(353,+$P(Y(1),U,19),0)):"",1:$P(^(0),U,1))=""
	;;^DD(399,.01,1,7,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,19)=DIV,DIH=399,DIG=.19 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.01,1,7,2)
	;;=Q
	;;^DD(399,.01,1,7,3)
	;;=DO NOT DELETE
	;;^DD(399,.01,1,7,"%D",0)
	;;=^^2^2^2930608^
	;;^DD(399,.01,1,7,"%D",1,0)
	;;=Sets the bill's form type to the site's default form type (350.9,1.26)

IBINI09V
IBINI09V	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.01,1,7,"%D",2,0)
	;;=when the bill is created.
	;;^DD(399,.01,1,7,"CREATE CONDITION")
	;;=FORM TYPE=""
	;;^DD(399,.01,1,7,"CREATE VALUE")
	;;=S X=$P($G(^IBE(350.9,1,1)),U,26)
	;;^DD(399,.01,1,7,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.01,1,7,"DT")
	;;=2930608
	;;^DD(399,.01,1,7,"FIELD")
	;;=FORM TYPE
	;;^DD(399,.01,3)
	;;=Enter the "unique" bill number for this billing episode [6 characters].
	;;^DD(399,.01,4)
	;;=
	;;^DD(399,.01,21,0)
	;;=^^8^8^2940317^^^^
	;;^DD(399,.01,21,1,0)
	;;=This is the "unique" bill number assigned to this billing episode.
	;;^DD(399,.01,21,2,0)
	;;=A bill numbers consist of 6 characters.  Beginning with MAS 
	;;^DD(399,.01,21,3,0)
	;;=version 4.7 bill numbers will be determined by the Accounts Receivable
	;;^DD(399,.01,21,4,0)
	;;=module of IFCAP and returned to MCCR.  This is to provide consistency
	;;^DD(399,.01,21,5,0)
	;;=in bill numbering between the sites and CALM.  The bill numbers
	;;^DD(399,.01,21,6,0)
	;;=will be determined from entries in the AR BILL NUMBER file.  They
	;;^DD(399,.01,21,7,0)
	;;=will be in the format of PAT (Pending Account Transaction) numbers
	;;^DD(399,.01,21,8,0)
	;;=and may be used in Accounts Receivable for PAT numbers.
	;;^DD(399,.01,"DT")
	;;=2930608
	;;^DD(399,.02,0)
	;;=PATIENT NAME^RP2'I^DPT(^0;2^Q
	;;^DD(399,.02,1,0)
	;;=^.1
	;;^DD(399,.02,1,1,0)
	;;=399^C
	;;^DD(399,.02,1,1,1)
	;;=S ^DGCR(399,"C",$E(X,1,30),DA)=""
	;;^DD(399,.02,1,1,2)
	;;=K ^DGCR(399,"C",$E(X,1,30),DA)
	;;^DD(399,.02,3)
	;;=Enter the name of the patient for whom this bill is being generated.
	;;^DD(399,.02,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,.02,21,1,0)
	;;=This is the name of the patient for whom this bill is being generated.
	;;^DD(399,.02,"DT")
	;;=2880526
	;;^DD(399,.03,0)
	;;=EVENT DATE^RDX^^0;3^S %DT="ETP",%DT(0)="-0" D ^%DT S X=Y K:Y<1 X I $D(X),'$D(IBNWBL) W !?4,"Event date can no longer be edited...cancel and submit a new bill if necessary." K X
	;;^DD(399,.03,1,0)
	;;=^.1
	;;^DD(399,.03,1,1,0)
	;;=399^D
	;;^DD(399,.03,1,1,1)
	;;=S ^DGCR(399,"D",$E(X,1,30),DA)=""
	;;^DD(399,.03,1,1,2)
	;;=K ^DGCR(399,"D",$E(X,1,30),DA)
	;;^DD(399,.03,1,2,0)
	;;=399^APDT^MUMPS
	;;^DD(399,.03,1,2,1)
	;;=S IBN=$P(^DGCR(399,DA,0),"^",2) S:$D(IBN) ^DGCR(399,"APDT",IBN,DA,9999999-X)="" K IBN
	;;^DD(399,.03,1,2,2)
	;;=S IBN=$P(^DGCR(399,DA,0),"^",2) I $D(IBN) K ^DGCR(399,"APDT",IBN,DA,9999999-X),IBN
	;;^DD(399,.03,1,2,"%D",0)
	;;=^^1^1^2940214^^
	;;^DD(399,.03,1,2,"%D",1,0)
	;;=Cross-reference of bills by patient and event date.
	;;^DD(399,.03,1,3,0)
	;;=399^ABNDT^MUMPS
	;;^DD(399,.03,1,3,1)
	;;=S ^DGCR(399,"ABNDT",DA,9999999-X)=""
	;;^DD(399,.03,1,3,2)
	;;=K ^DGCR(399,"ABNDT",DA,9999999-X)
	;;^DD(399,.03,1,3,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399,.03,1,3,"%D",1,0)
	;;=Cross-reference of bills by inverse event date.
	;;^DD(399,.03,3)
	;;=Enter the date of admission for inpatient episodes of care. For outpatient visits, enter the date of the initial outpatient visit.
	;;^DD(399,.03,21,0)
	;;=^^3^3^2940214^^
	;;^DD(399,.03,21,1,0)
	;;=This is the date on which care was originated. For inpatient episodes of
	;;^DD(399,.03,21,2,0)
	;;=care, this is the admission date. For outpatient visits, this is the date
	;;^DD(399,.03,21,3,0)
	;;=of the initial outpatient visit.
	;;^DD(399,.03,"DT")
	;;=2920220
	;;^DD(399,.04,0)
	;;=LOCATION OF CARE^RS^1:HOSPITAL (INCLUDES CLINIC) - INPT. OR OPT.;2:SKILLED NURSING (NHCU);7:CLINIC (WHEN INDEPENDENT OR SATELLITE);^0;4^Q
	;;^DD(399,.04,.1)
	;;=TYPE OF BILL (1ST DIGIT)
	;;^DD(399,.04,3)
	;;=Enter the code which identifies the type of facility at which care was administered.

IBINI09W
IBINI09W	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.04,21,0)
	;;=^^1^1^2931221^^^^
	;;^DD(399,.04,21,1,0)
	;;=This identifies the type of facility at which care was administered.
	;;^DD(399,.04,"DT")
	;;=2931221
	;;^DD(399,.05,0)
	;;=BILL CLASSIFICATION^RSX^1:INPATIENT (MEDICARE PART A);2:HUMANITARIAN EMERGENCY (INPT./MEDICARE PART B);3:OUTPATIENT;4:HUMANITARIAN EMERGENCY (OPT./ESRD);^0;5^Q
	;;^DD(399,.05,.1)
	;;=TYPE OF BILL (2ND DIGIT)
	;;^DD(399,.05,1,0)
	;;=^.1
	;;^DD(399,.05,1,1,0)
	;;=399^ABT
	;;^DD(399,.05,1,1,1)
	;;=S ^DGCR(399,"ABT",$E(X,1,30),DA)=""
	;;^DD(399,.05,1,1,2)
	;;=K ^DGCR(399,"ABT",$E(X,1,30),DA)
	;;^DD(399,.05,3)
	;;=Enter the code which designates inpatient or outpatient care.
	;;^DD(399,.05,21,0)
	;;=^^1^1^2931220^^^^
	;;^DD(399,.05,21,1,0)
	;;=This code identifies the care being billed for as inpatient or outpatient.
	;;^DD(399,.05,"DT")
	;;=2900508
	;;^DD(399,.06,0)
	;;~TIMEFRAME OF BILL^RS^1:ADMIT THRU DISCHARGE CLAIM;2:INTERIM - FIRST CLAIM;3:INTERIM - CONTINUING CLAIM;4:INTERIM - LAST CLAIM;5:LATE CHARGE(S) ONLY CLAIM;6:ADJU
	;;=STMENT OF PRIOR CLAIM;7:REPLACEMENT OF PRIOR CLAIM;0:NON-PAYMENT/ZERO CLAIM;^0;6^Q
	;;^DD(399,.06,.1)
	;;=TYPE OF BILL (3RD DIGIT)
	;;^DD(399,.06,3)
	;;=Enter the code which defines the frequency of this bill.
	;;^DD(399,.06,21,0)
	;;=^^1^1^2931220^^^
	;;^DD(399,.06,21,1,0)
	;;=This code defines the frequency of this bill.
	;;^DD(399,.06,"DT")
	;;=2891221
	;;^DD(399,.07,0)
	;;=RATE TYPE^R*P399.3'^DGCR(399.3,^0;7^S DIC("S")="I '$P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,.07,1,0)
	;;=^.1
	;;^DD(399,.07,1,1,0)
	;;=^^TRIGGER^399^156
	;;^DD(399,.07,1,1,1)
	;;=X ^DD(399,.07,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X="Y" X ^DD(399,.07,1,1,1.4)
	;;^DD(399,.07,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.07,1,1,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,5)_":",2),$C(59),1)="YES" S D0=I(0,0)
	;;^DD(399,.07,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,6)=DIV,DIH=399,DIG=156 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.07,1,1,2)
	;;=X ^DD(399,.07,1,1,2.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X="N" X ^DD(399,.07,1,1,2.4)
	;;^DD(399,.07,1,1,2.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.07,1,1,79.2) S Y(101)=$S($D(^DGCR(399.3,D0,0)):^(0),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,5)_":",2),$C(59),1)'="YES" S D0=I(0,0)
	;;^DD(399,.07,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,6)=DIV,DIH=399,DIG=156 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.07,1,1,69.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),D0=Y(0) S:'$D(^DGCR(399.3,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(399.3,.05,0)):$P(^(0),U,3),1:""),Y(101)=$S($D(^DGCR(399.3,D0,0)):^(0),1:"")
	;;^DD(399,.07,1,1,79.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:""),D0=$P(Y(1),U,7) S:'$D(^DGCR(399.3,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(399.3,.05,0)):$P(^(0),U,3),1:"")
	;;^DD(399,.07,1,1,"CREATE CONDITION")
	;;=RATE TYPE:IS THIS A THIRD PARTY BILL?="YES"
	;;^DD(399,.07,1,1,"CREATE VALUE")
	;;=S X="Y"
	;;^DD(399,.07,1,1,"DELETE CONDITION")
	;;=RATE TYPE:IS THIS A THIRD PARTY BILL?'="YES"
	;;^DD(399,.07,1,1,"DELETE VALUE")
	;;=S X="N"
	;;^DD(399,.07,1,1,"FIELD")
	;;=#156
	;;^DD(399,.07,1,2,0)
	;;=^^TRIGGER^399^.11
	;;^DD(399,.07,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y X ^DD(399,.07,1,2,1.1) X ^DD(399,.07,1,2,1.4)

IBINI09X
IBINI09X	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.07,1,2,1.1)
	;;=S X=DIV S X=$P(^DGCR(399.3,$P(^DGCR(399,DA,0),U,7),0),U,7)
	;;^DD(399,.07,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=399,DIG=.11 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.07,1,2,2)
	;;=Q
	;;^DD(399,.07,1,2,"CREATE VALUE")
	;;=S X=$P(^DGCR(399.3,$P(^DGCR(399,DA,0),U,7),0),U,7)
	;;^DD(399,.07,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.07,1,2,"FIELD")
	;;=WHO'S RESPONSIBLE
	;;^DD(399,.07,1,3,0)
	;;=399^AD
	;;^DD(399,.07,1,3,1)
	;;=S ^DGCR(399,"AD",$E(X,1,30),DA)=""
	;;^DD(399,.07,1,3,2)
	;;=K ^DGCR(399,"AD",$E(X,1,30),DA)
	;;^DD(399,.07,1,3,"DT")
	;;=2910912
	;;^DD(399,.07,3)
	;;=Enter the code which identifies the type of bill.
	;;^DD(399,.07,12)
	;;=to screen out Inactive Rate Types
	;;^DD(399,.07,12.1)
	;;=S DIC("S")="I '$P(^(0),U,3)"
	;;^DD(399,.07,21,0)
	;;=^^1^1^2890413^^^
	;;^DD(399,.07,21,1,0)
	;;=This identifies the type of bill.
	;;^DD(399,.07,"DT")
	;;=2910912
	;;^DD(399,.08,0)
	;;=PTF ENTRY NUMBER^RP45X^DGPT(^0;8^D PTF^IBCU S DIC(0)="MN",DIC="^DGPT(",DIC("S")="I $D(IBDD1(+Y))" D ^DIC:X K DIC,IBDD1 S:$D(DIE) DIC=DIE S X=+Y K:Y<0 X
	;;^DD(399,.08,1,0)
	;;=^.1
	;;^DD(399,.08,1,1,0)
	;;=^^TRIGGER^399^159
	;;^DD(399,.08,1,1,1)
	;;=X ^DD(399,.08,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,.08,1,1,1.4)
	;;^DD(399,.08,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,159,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,9)_":",2),$C(59),1)=""
	;;^DD(399,.08,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,9)=DIV,DIH=399,DIG=159 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,1,2)
	;;=Q
	;;^DD(399,.08,1,1,"CREATE CONDITION")
	;;=#159=""
	;;^DD(399,.08,1,1,"CREATE VALUE")
	;;=S X=2
	;;^DD(399,.08,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.08,1,1,"FIELD")
	;;=#159
	;;^DD(399,.08,1,2,0)
	;;=^^TRIGGER^399^158
	;;^DD(399,.08,1,2,1)
	;;=X ^DD(399,.08,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,.08,1,2,1.4)
	;;^DD(399,.08,1,2,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$S($D(^DD(399,158,0)):$P(^(0),U,3),1:""),Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,8)_":",2),$C(59),1)=""
	;;^DD(399,.08,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,8)=DIV,DIH=399,DIG=158 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,2,2)
	;;=Q
	;;^DD(399,.08,1,2,"CREATE CONDITION")
	;;=#158=""
	;;^DD(399,.08,1,2,"CREATE VALUE")
	;;=S X=2
	;;^DD(399,.08,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.08,1,2,"FIELD")
	;;=#158
	;;^DD(399,.08,1,3,0)
	;;=^^TRIGGER^399^160
	;;^DD(399,.08,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=99 X ^DD(399,.08,1,3,1.4)
	;;^DD(399,.08,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,10)=DIV,DIH=399,DIG=160 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,3,2)
	;;=Q
	;;^DD(399,.08,1,3,"CREATE VALUE")
	;;=S X=99
	;;^DD(399,.08,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.08,1,3,"FIELD")
	;;=ACCIDENT HOUR
	;;^DD(399,.08,1,4,0)
	;;=^^TRIGGER^399^162
	;;^DD(399,.08,1,4,1)
	;;=X ^DD(399,.08,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV D DIS^IBCU S X=X X ^DD(399,.08,1,4,1.4)
	;;^DD(399,.08,1,4,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$S('$D(^DGCR(399.1,+$P(Y(1),U,12),0)):"",1:$P(^(0),U,1))=""

IBINI09Y
IBINI09Y	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.08,1,4,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,12)=DIV,DIH=399,DIG=162 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,4,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,.08,1,4,2.4)
	;;^DD(399,.08,1,4,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,12)=DIV,DIH=399,DIG=162 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,4,"%D",0)
	;;=^^2^2^2920212^
	;;^DD(399,.08,1,4,"%D",1,0)
	;;=This sets the discharge status to the correct entry based upon the
	;;^DD(399,.08,1,4,"%D",2,0)
	;;=Disposition Field type in the PTF record.
	;;^DD(399,.08,1,4,"CREATE CONDITION")
	;;=#162=""
	;;^DD(399,.08,1,4,"CREATE VALUE")
	;;=D DIS^IBCU S X=X
	;;^DD(399,.08,1,4,"DELETE VALUE")
	;;=@
	;;^DD(399,.08,1,4,"DT")
	;;=2920212
	;;^DD(399,.08,1,4,"FIELD")
	;;=#162
	;;^DD(399,.08,1,5,0)
	;;=399^APTF
	;;^DD(399,.08,1,5,1)
	;;=S ^DGCR(399,"APTF",$E(X,1,30),DA)=""
	;;^DD(399,.08,1,5,2)
	;;=K ^DGCR(399,"APTF",$E(X,1,30),DA)
	;;^DD(399,.08,1,5,"%D",0)
	;;=^^2^2^2920406^
	;;^DD(399,.08,1,5,"%D",1,0)
	;;=Cross reference of all PTF records with associated bills.  To be used
	;;^DD(399,.08,1,5,"%D",2,0)
	;;=by PTF purge utilities.
	;;^DD(399,.08,1,5,"DT")
	;;=2920406
	;;^DD(399,.08,1,6,0)
	;;=^^TRIGGER^399^165
	;;^DD(399,.08,1,6,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,0),U,5)<3 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=+$$LOS1^IBCU64(DA) X ^DD(399,.08,1,6,1.4)
	;;^DD(399,.08,1,6,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,15)=DIV,DIH=399,DIG=165 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.08,1,6,2)
	;;=Q
	;;^DD(399,.08,1,6,"%D",0)
	;;=^^1^1^2931018^^^
	;;^DD(399,.08,1,6,"%D",1,0)
	;;=Sets Length of Stay based on PTF record and date range of bill.  Inpatients only.
	;;^DD(399,.08,1,6,"CREATE CONDITION")
	;;=I $P(^DGCR(399,DA,0),U,5)<3
	;;^DD(399,.08,1,6,"CREATE VALUE")
	;;=S X=+$$LOS1^IBCU64(DA)
	;;^DD(399,.08,1,6,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.08,1,6,"DT")
	;;=2931018
	;;^DD(399,.08,1,6,"FIELD")
	;;=LENGTH OF STAY
	;;^DD(399,.08,3)
	;;=ENTER A PTF RECORD BELONGING TO THIS PATIENT ONLY!
	;;^DD(399,.08,12.1)
	;;=S DIC("S")="I $D(IBDD1(+Y))"
	;;^DD(399,.08,21,0)
	;;=^^1^1^2880831^^
	;;^DD(399,.08,21,1,0)
	;;=This identifies PTF records belonging to this patient only.
	;;^DD(399,.08,"DT")
	;;=2931018
	;;^DD(399,.09,0)
	;;=PROCEDURE CODING METHOD^S^4:CPT-4;5:HCPCS (HCFA COMMON PROCEDURE CODING SYSTEM);9:ICD-9-CM;^0;9^Q
	;;^DD(399,.09,3)
	;;=Enter the code which identifies the method for procedure coding on this bill.
	;;^DD(399,.09,5,1,0)
	;;=399^.19^1
	;;^DD(399,.09,21,0)
	;;=^^1^1^2900809^^
	;;^DD(399,.09,21,1,0)
	;;=This defines the outpatient procedure coding method utilized on this bill.
	;;^DD(399,.11,0)
	;;=WHO'S RESPONSIBLE FOR BILL?^RSI^p:PATIENT;i:INSURER;o:OTHER;^0;11^Q
	;;^DD(399,.11,1,0)
	;;=^.1
	;;^DD(399,.11,1,1,0)
	;;=^^TRIGGER^399^112
	;;^DD(399,.11,1,1,1)
	;;=X ^DD(399,.11,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV D EN1^IBCU5 X ^DD(399,.11,1,1,1.4)
	;;^DD(399,.11,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=(X="i"&($S('$D(^DGCR(399,DA,"M")):1,'+^("M"):1,'$D(^DIC(36,+^("M"),0)):1,1:0)))
	;;^DD(399,.11,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,12)=DIV,DIH=399,DIG=112 D ^DICR:$N(^DD(DIH,DIG,1,0))>0

IBINI09Z
IBINI09Z	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.11,1,1,2)
	;;=Q
	;;^DD(399,.11,1,1,"CREATE CONDITION")
	;;=S X=(X="i"&($S('$D(^DGCR(399,DA,"M")):1,'+^("M"):1,'$D(^DIC(36,+^("M"),0)):1,1:0)))
	;;^DD(399,.11,1,1,"CREATE VALUE")
	;;=D EN1^IBCU5
	;;^DD(399,.11,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.11,1,1,"DT")
	;;=2930908
	;;^DD(399,.11,1,1,"FIELD")
	;;=#112
	;;^DD(399,.11,1,2,0)
	;;=399^AML1^MUMPS
	;;^DD(399,.11,1,2,1)
	;;=D EN^IBCU5
	;;^DD(399,.11,1,2,2)
	;;=D DEL^IBCU5
	;;^DD(399,.11,1,2,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399,.11,1,2,"%D",1,0)
	;;=Loads/deletes the mailing address.
	;;^DD(399,.11,1,3,0)
	;;=399^AREV6^MUMPS
	;;^DD(399,.11,1,3,1)
	;;=S DGRVRCAL=1
	;;^DD(399,.11,1,3,2)
	;;=S DGRVRCAL=2
	;;^DD(399,.11,1,3,"%D",0)
	;;=^^2^2^2940214^
	;;^DD(399,.11,1,3,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399,.11,1,3,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399,.11,3)
	;;=Enter the code which identifies the party responsible for payment of this bill.
	;;^DD(399,.11,5,1,0)
	;;=399^.07^2
	;;^DD(399,.11,21,0)
	;;=^^1^1^2880928^
	;;^DD(399,.11,21,1,0)
	;;=This identifies the party responsible for payment of this bill.
	;;^DD(399,.11,"DT")
	;;=2930908
	;;^DD(399,.13,0)
	;;=STATUS^RS^1:ENTERED/NOT REVIEWED;2:REVIEWED;3:AUTHORIZED;4:PRINTED;5:TRANSMITTED;7:CANCELLED;0:CLOSED;^0;13^Q
	;;^DD(399,.13,1,0)
	;;=^.1
	;;^DD(399,.13,1,1,0)
	;;=^^TRIGGER^399^.14
	;;^DD(399,.13,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,.13,1,1,1.4)
	;;^DD(399,.13,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,14)=DIV,DIH=399,DIG=.14 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.13,1,1,2)
	;;=Q
	;;^DD(399,.13,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,.13,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.13,1,1,"FIELD")
	;;=#.14
	;;^DD(399,.13,1,2,0)
	;;=399^AOP^MUMPS
	;;^DD(399,.13,1,2,1)
	;;=I X>0,X<3,$P(^DGCR(399,DA,0),U,2) S ^DGCR(399,"AOP",$P(^(0),U,2),DA)=""
	;;^DD(399,.13,1,2,2)
	;;=I $P(^DGCR(399,DA,0),U,2) K ^DGCR(399,"AOP",$P(^(0),U,2),DA)
	;;^DD(399,.13,1,3,0)
	;;=399^AST^MUMPS
	;;^DD(399,.13,1,3,1)
	;;=I +X=3 S ^DGCR(399,"AST",+X,DA)=""
	;;^DD(399,.13,1,3,2)
	;;=K ^DGCR(399,"AST",+X,DA)
	;;^DD(399,.13,1,3,"%D",0)
	;;=^^1^1^2940214^^^^
	;;^DD(399,.13,1,3,"%D",1,0)
	;;=Cross reference of all Authorized bills.
	;;^DD(399,.13,1,3,"DT")
	;;=2940127
	;;^DD(399,.13,3)
	;;=Enter the code which defines whether or not billing record is editable.
	;;^DD(399,.13,5,1,0)
	;;=399^.01^6
	;;^DD(399,.13,5,2,0)
	;;=399^17^1
	;;^DD(399,.13,5,3,0)
	;;=399^14^1
	;;^DD(399,.13,5,4,0)
	;;=399^9^3
	;;^DD(399,.13,5,5,0)
	;;=399^6^3
	;;^DD(399,.13,21,0)
	;;=^^5^5^2940216^^^^
	;;^DD(399,.13,21,1,0)
	;;=This identifies the status of this billing record. That is, whether or not
	;;^DD(399,.13,21,2,0)
	;;=this record is open for editing.  Current valid statuss are:
	;;^DD(399,.13,21,3,0)
	;;=1=ENTERED/NOT REVIEWED, 2=REVIEWED, 3=AUTHORIZED, 4=PRINTED, 5=TRANSMITTED,
	;;^DD(399,.13,21,4,0)
	;;=7=CANCELLED, 0=CLOSED
	;;^DD(399,.13,21,5,0)
	;;=Only ENTERED/NOT REVIEWED and REVIEWED bills are editable.
	;;^DD(399,.13,"DT")
	;;=2940127
	;;^DD(399,.14,0)
	;;=STATUS DATE^RD^^0;14^S %DT="E" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,.14,3)
	;;=Enter the date of last status change.
	;;^DD(399,.14,5,1,0)
	;;=399^.13^1
	;;^DD(399,.14,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,.14,21,1,0)
	;;=This is the date of the last status change.
	;;^DD(399,.14,"DT")
	;;=2880608
	;;^DD(399,.15,0)
	;;=BILL COPIED FROM^*P399'^DGCR(399,^0;15^S DIC("S")="I $P(^(0),U,13)=7" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBINI0A0
IBINI0A0	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.15,3)
	;;=Enter the bill that this bill was copied from.
	;;^DD(399,.15,12)
	;;=BILL MUST BE CANCELLED TO COPY
	;;^DD(399,.15,12.1)
	;;=S DIC("S")="I $P(^(0),U,13)=7"
	;;^DD(399,.15,21,0)
	;;=^^3^3^2920211^^
	;;^DD(399,.15,21,1,0)
	;;=If this bill was copied from another bill, then this will be the bill
	;;^DD(399,.15,21,2,0)
	;;=it was copied from.  This field is automatically completed by the
	;;^DD(399,.15,21,3,0)
	;;=Copy and Cancel option.
	;;^DD(399,.15,"DT")
	;;=2900126
	;;^DD(399,.16,0)
	;;=NON-VA DISCHARGE DATE^D^^0;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,.16,3)
	;;=Enter the discharge date for this admission.  It must be since the admission    date and not in the future.
	;;^DD(399,.16,21,0)
	;;=^^3^3^2900420^
	;;^DD(399,.16,21,1,0)
	;;=This is the discharge date for NON-VA Admissions when no associated PTF
	;;^DD(399,.16,21,2,0)
	;;=record exists.  The date entered must be after the admission date and
	;;^DD(399,.16,21,3,0)
	;;=not into the future.
	;;^DD(399,.16,"DT")
	;;=2900420
	;;^DD(399,.17,0)
	;;=PRIMARY BILL^P399'^DGCR(399,^0;17^Q
	;;^DD(399,.17,1,0)
	;;=^.1
	;;^DD(399,.17,1,1,0)
	;;=399^AC
	;;^DD(399,.17,1,1,1)
	;;=S ^DGCR(399,"AC",$E(X,1,30),DA)=""
	;;^DD(399,.17,1,1,2)
	;;=K ^DGCR(399,"AC",$E(X,1,30),DA)
	;;^DD(399,.17,21,0)
	;;=^^3^3^2920211^^
	;;^DD(399,.17,21,1,0)
	;;=This is the initial bill that this episode is associated with.
	;;^DD(399,.17,21,2,0)
	;;=If an episode of care has more than one bill but multiple event dates, then
	;;^DD(399,.17,21,3,0)
	;;=this field can be used.
	;;^DD(399,.17,"DT")
	;;=2900524
	;;^DD(399,.18,0)
	;;=SC AT TIME OF CARE^FXO^^0;18^I $D(X) D YN^IBCU
	;;^DD(399,.18,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,.18,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,.18,3)
	;;=Was this patient Service Connected for any condition during the timeframe of this bill?  Answer 'Yes' or 'No'.
	;;^DD(399,.18,21,0)
	;;=^^8^8^2920610^^^^
	;;^DD(399,.18,21,1,0)
	;;=Was this patient Service Connected for any condition at the time the
	;;^DD(399,.18,21,2,0)
	;;=care in the bill was rendered.  This field is used to correctly assign
	;;^DD(399,.18,21,3,0)
	;;=Accounts Receivable AMIS segments to this bill if it is a Reimbursable
	;;^DD(399,.18,21,4,0)
	;;=Insurance bill.  Answer 'Yes' or 'No'.
	;;^DD(399,.18,21,5,0)
	;;= 
	;;^DD(399,.18,21,6,0)
	;;=The default for this field is the current value in the SC PATIENT field
	;;^DD(399,.18,21,7,0)
	;;=of the patient file.  If this field is left blank, the default value
	;;^DD(399,.18,21,8,0)
	;;=will be used to determine the AMIS segment.
	;;^DD(399,.18,"DT")
	;;=2910913
	;;^DD(399,.19,0)
	;;=FORM TYPE^RP353'^IBE(353,^0;19^Q
	;;^DD(399,.19,1,0)
	;;=^.1
	;;^DD(399,.19,1,1,0)
	;;=^^TRIGGER^399^.09
	;;^DD(399,.19,1,1,1)
	;;=X ^DD(399,.19,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=4 X ^DD(399,.19,1,1,1.4)
	;;^DD(399,.19,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.19,1,1,69.2) S Y(1)=X S X=$P($P(Y(3),$C(59)_$P(Y(2),U,9)_":",2),$C(59),1)="",Y=X,X=Y(1),X=X&Y
	;;^DD(399,.19,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=399,DIG=.09 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,.19,1,1,2)
	;;=Q
	;;^DD(399,.19,1,1,69.2)
	;;=S Y(3)=$C(59)_$S($D(^DD(399,.09,0)):$P(^(0),U,3),1:""),Y(2)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$S('$D(^IBE(353,+Y(0),0)):"",1:$P(^(0),U,1))="HCFA 1500"
	;;^DD(399,.19,1,1,"%D",0)
	;;=^^2^2^2920430^
	;;^DD(399,.19,1,1,"%D",1,0)
	;;=If the HCFA 1500 claim form is used and no coding method defined, then

IBINI0A1
IBINI0A1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,.19,1,1,"%D",2,0)
	;;=set coding method to CPT-4.
	;;^DD(399,.19,1,1,"CREATE CONDITION")
	;;=FORM TYPE="HCFA 1500"&(PROCEDURE CODING METHOD="")
	;;^DD(399,.19,1,1,"CREATE VALUE")
	;;=S X=4
	;;^DD(399,.19,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,.19,1,1,"DT")
	;;=2920430
	;;^DD(399,.19,1,1,"FIELD")
	;;=PROCEDURE CODING METHOD
	;;^DD(399,.19,1,2,0)
	;;=399^AREV7^MUMPS
	;;^DD(399,.19,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399,.19,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399,.19,1,2,3)
	;;=DO NOT DELETE
	;;^DD(399,.19,1,2,"%D",0)
	;;=^^2^2^2940214^
	;;^DD(399,.19,1,2,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399,.19,1,2,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399,.19,1,2,"DT")
	;;=2920428
	;;^DD(399,.19,3)
	;;=Enter the type of claim form to be used.
	;;^DD(399,.19,5,1,0)
	;;=399^.01^7
	;;^DD(399,.19,5,2,0)
	;;=399^101^4
	;;^DD(399,.19,21,0)
	;;=^^1^1^2920427^^^^
	;;^DD(399,.19,21,1,0)
	;;=The form type that the bill is printed on.
	;;^DD(399,.19,"DT")
	;;=2920430
	;;^DD(399,.2,0)
	;;=AUTO^S^0:NO;1:YES;^0;20^Q
	;;^DD(399,.2,3)
	;;=True if this bill was created by the auto biller.
	;;^DD(399,.2,21,0)
	;;=^^2^2^2940125^
	;;^DD(399,.2,21,1,0)
	;;=True if this bill was created by the auto biller.  Should only be set
	;;^DD(399,.2,21,2,0)
	;;=by the auto biller software, no manual entry.
	;;^DD(399,.2,"DT")
	;;=2940125
	;;^DD(399,1,0)
	;;=DATE ENTERED^RDXI^^S;1^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,1,1,0)
	;;=^.1
	;;^DD(399,1,1,1,0)
	;;=399^APD
	;;^DD(399,1,1,1,1)
	;;=S ^DGCR(399,"APD",$E(X,1,30),DA)=""
	;;^DD(399,1,1,1,2)
	;;=K ^DGCR(399,"APD",$E(X,1,30),DA)
	;;^DD(399,1,1,1,"%D",0)
	;;=^^1^1^2920521^
	;;^DD(399,1,1,1,"%D",1,0)
	;;=Regular cross-reference used to speed up reports.
	;;^DD(399,1,1,1,"DT")
	;;=2920521
	;;^DD(399,1,3)
	;;=Enter the date on which this billing record was established.
	;;^DD(399,1,5,1,0)
	;;=399^.01^3
	;;^DD(399,1,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,1,21,1,0)
	;;=This is the date on which this billing record was established.
	;;^DD(399,1,"DT")
	;;=2920521
	;;^DD(399,2,0)
	;;=ENTERED/EDITED BY^RP200'I^VA(200,^S;2^Q
	;;^DD(399,2,3)
	;;=Enter the user who established this billing record.
	;;^DD(399,2,5,1,0)
	;;=399^.01^4
	;;^DD(399,2,21,0)
	;;=^^1^1^2940214^^^
	;;^DD(399,2,21,1,0)
	;;=This is the user who established this billing record.
	;;^DD(399,2,"DT")
	;;=2900921
	;;^DD(399,3,0)
	;;=INITIAL REVIEW^FOX^^S;3^I $D(X) D YN^IBCU
	;;^DD(399,3,.1)
	;;=DO YOU APPROVE THIS BILL? (Y/N)
	;;^DD(399,3,1,0)
	;;=^.1
	;;^DD(399,3,1,1,0)
	;;=^^TRIGGER^399^4
	;;^DD(399,3,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,4)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,3,1,1,1.4)
	;;^DD(399,3,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,4)=DIV,DIH=399,DIG=4 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,3,1,1,2)
	;;=Q
	;;^DD(399,3,1,1,"CREATE CONDITION")
	;;=INITIAL REVIEW DATE=""
	;;^DD(399,3,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,3,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,3,1,1,"DT")
	;;=2940310
	;;^DD(399,3,1,1,"FIELD")
	;;=INITIAL REVIEW DATE
	;;^DD(399,3,1,2,0)
	;;=^^TRIGGER^399^5
	;;^DD(399,3,1,2,1)
	;;=X ^DD(399,3,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,3,1,2,1.4)
	;;^DD(399,3,1,2,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1))=""

IBINI0A2
IBINI0A2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,3,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,5)=DIV,DIH=399,DIG=5 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,3,1,2,2)
	;;=Q
	;;^DD(399,3,1,2,"CREATE CONDITION")
	;;=INITIAL REVIEWER=""
	;;^DD(399,3,1,2,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,3,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,3,1,2,"DT")
	;;=2940310
	;;^DD(399,3,1,2,"FIELD")
	;;=INITIAL REVIEWER
	;;^DD(399,3,1,3,0)
	;;=^^TRIGGER^399^6
	;;^DD(399,3,1,3,1)
	;;=X ^DD(399,3,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X=+X X ^DD(399,3,1,3,1.4)
	;;^DD(399,3,1,3,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:""),Y=$P(Y(1),U,6) X:$D(^DD(399,6,2)) ^(2) S X=Y=""
	;;^DD(399,3,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X X "F %=0:0 Q:$L($P(DIH,U,5,99))  S DIH=DIH_U" S %=$P(DIH,U,7,999),DIU=$P(DIH,U,6),^("S")=$P(DIH,U,1,5)_U_DIV_$S(%]"":U_%,1:""),DIH=399,DIG=6 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,3,1,3,2)
	;;=Q
	;;^DD(399,3,1,3,"CREATE CONDITION")
	;;=SECONDARY REVIEW=""
	;;^DD(399,3,1,3,"CREATE VALUE")
	;;=S X=+X
	;;^DD(399,3,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,3,1,3,"FIELD")
	;;=SECONDARY REVIEW
	;;^DD(399,3,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,3,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,3,3)
	;;=Enter 'Yes' or '1' if the information in this record is accurate and complete or 'No' or '0' if the information is inaccurate or incomplete.
	;;^DD(399,3,21,0)
	;;=^^2^2^2880831^
	;;^DD(399,3,21,1,0)
	;;=This allows the user to approve or disapprove the information contained in
	;;^DD(399,3,21,2,0)
	;;=this billing record.
	;;^DD(399,3,"DT")
	;;=2940310
	;;^DD(399,4,0)
	;;=INITIAL REVIEW DATE^D^^S;4^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,4,1,0)
	;;=^.1^^0
	;;^DD(399,4,3)
	;;=Enter the date on which this billing record was first reviewed.
	;;^DD(399,4,5,1,0)
	;;=399^3^1
	;;^DD(399,4,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,4,21,1,0)
	;;=This is the date on which this record was initially reviewed.
	;;^DD(399,4,"DT")
	;;=2900116
	;;^DD(399,5,0)
	;;=INITIAL REVIEWER^P200'I^VA(200,^S;5^Q
	;;^DD(399,5,1,0)
	;;=^.1^^0
	;;^DD(399,5,3)
	;;=Enter the user who first reviewed this billing record.
	;;^DD(399,5,5,1,0)
	;;=399^3^2
	;;^DD(399,5,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,5,21,1,0)
	;;=This is the user who performed the initial review on this billing record.
	;;^DD(399,5,"DT")
	;;=2900921
	;;^DD(399,6,0)
	;;=SECONDARY REVIEW^FOX^^S;6^I $D(X) D YN^IBCU
	;;^DD(399,6,.1)
	;;=DO YOU APPROVE THIS BILL? (Y/N)
	;;^DD(399,6,1,0)
	;;=^.1
	;;^DD(399,6,1,1,0)
	;;=^^TRIGGER^399^7
	;;^DD(399,6,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,7)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,6,1,1,1.4)
	;;^DD(399,6,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,7)=DIV,DIH=399,DIG=7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,6,1,1,2)
	;;=Q
	;;^DD(399,6,1,1,"CREATE CONDITION")
	;;=SECONDARY REVIEW DATE=""
	;;^DD(399,6,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,6,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,6,1,1,"DT")
	;;=2940310
	;;^DD(399,6,1,1,"FIELD")
	;;=SECONDARY REVIEW DATE
	;;^DD(399,6,1,2,0)
	;;=^^TRIGGER^399^8
	;;^DD(399,6,1,2,1)
	;;=X ^DD(399,6,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,6,1,2,1.4)

IBINI0A3
IBINI0A3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,6,1,2,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,8),0)):"",1:$P(^(0),U,1))=""
	;;^DD(399,6,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,8)=DIV,DIH=399,DIG=8 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,6,1,2,2)
	;;=Q
	;;^DD(399,6,1,2,"CREATE CONDITION")
	;;=SECONDARY REVIEWER=""
	;;^DD(399,6,1,2,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,6,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,6,1,2,"DT")
	;;=2940310
	;;^DD(399,6,1,2,"FIELD")
	;;=SECONDARY REVIEWER
	;;^DD(399,6,1,3,0)
	;;=^^TRIGGER^399^.13
	;;^DD(399,6,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y=Y(0) X:$D(^DD(399,6,2)) ^(2) S X=Y="YES" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=2 X ^DD(399,6,1,3,1.4)
	;;^DD(399,6,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,6,1,3,2)
	;;=Q
	;;^DD(399,6,1,3,"CREATE CONDITION")
	;;=#6="YES"
	;;^DD(399,6,1,3,"CREATE VALUE")
	;;=S X=2
	;;^DD(399,6,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,6,1,3,"FIELD")
	;;=STATUS
	;;^DD(399,6,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,6,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,6,3)
	;;=Enter 'Yes' or '1' if the information in this record is accurate and complete, or 'No' or '0' if the information is inaccurate or incomplete.
	;;^DD(399,6,5,1,0)
	;;=399^3^3
	;;^DD(399,6,21,0)
	;;=^^2^2^2880831^
	;;^DD(399,6,21,1,0)
	;;=This allows the user to approve or disapprove the information contained in
	;;^DD(399,6,21,2,0)
	;;=this billing record during the secondary review stage.
	;;^DD(399,6,"DT")
	;;=2940310
	;;^DD(399,7,0)
	;;=SECONDARY REVIEW DATE^D^^S;7^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,7,3)
	;;=Enter the date on which last review was performed.
	;;^DD(399,7,5,1,0)
	;;=399^6^1
	;;^DD(399,7,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,7,21,1,0)
	;;=This is the date on which this record was last reviewed.
	;;^DD(399,7,"DT")
	;;=2880523
	;;^DD(399,8,0)
	;;=SECONDARY REVIEWER^P200'^VA(200,^S;8^Q
	;;^DD(399,8,3)
	;;=Enter the user who performed the last review on this billing record.
	;;^DD(399,8,5,1,0)
	;;=399^6^2
	;;^DD(399,8,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,8,21,1,0)
	;;=This is the user who performed the last review of this billing record.
	;;^DD(399,8,"DT")
	;;=2900921
	;;^DD(399,9,0)
	;;=AUTHORIZE BILL GENERATION?^FOX^^S;9^I $D(X) D YN^IBCU
	;;^DD(399,9,1,0)
	;;=^.1
	;;^DD(399,9,1,1,0)
	;;=^^TRIGGER^399^10
	;;^DD(399,9,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,10)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,9,1,1,1.4)
	;;^DD(399,9,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,10)=DIV,DIH=399,DIG=10 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,9,1,1,2)
	;;=Q
	;;^DD(399,9,1,1,"CREATE CONDITION")
	;;=AUTHORIZATION DATE=""
	;;^DD(399,9,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,9,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,9,1,1,"DT")
	;;=2940310
	;;^DD(399,9,1,1,"FIELD")
	;;=AUTHORIZATION DATE
	;;^DD(399,9,1,2,0)
	;;=^^TRIGGER^399^11
	;;^DD(399,9,1,2,1)
	;;=X ^DD(399,9,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,9,1,2,1.4)
	;;^DD(399,9,1,2,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,11),0)):"",1:$P(^(0),U,1))=""

IBINI0A4
IBINI0A4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,9,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,11)=DIV,DIH=399,DIG=11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,9,1,2,2)
	;;=Q
	;;^DD(399,9,1,2,"CREATE CONDITION")
	;;=AUTHORIZER=""
	;;^DD(399,9,1,2,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,9,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,9,1,2,"DT")
	;;=2940310
	;;^DD(399,9,1,2,"FIELD")
	;;=AUTHORIZER
	;;^DD(399,9,1,3,0)
	;;=^^TRIGGER^399^.13
	;;^DD(399,9,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y=Y(0) X:$D(^DD(399,9,2)) ^(2) S X=Y="YES" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=3 X ^DD(399,9,1,3,1.4)
	;;^DD(399,9,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,9,1,3,2)
	;;=Q
	;;^DD(399,9,1,3,"CREATE CONDITION")
	;;=#9="YES"
	;;^DD(399,9,1,3,"CREATE VALUE")
	;;=S X=3
	;;^DD(399,9,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,9,1,3,"FIELD")
	;;=STATUS
	;;^DD(399,9,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,9,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,9,3)
	;;=Enter 'Yes' or '1' if the billing record has been reviewed and is ready for authorization, or 'No' or '0' if the billing record is not ready to be authorized.
	;;^DD(399,9,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,9,21,1,0)
	;;=This allows the user to authorize the printing of this bill.
	;;^DD(399,9,"DT")
	;;=2940310
	;;^DD(399,10,0)
	;;=AUTHORIZATION DATE^DI^^S;10^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,10,3)
	;;=Enter date on which this billing record was authorized for generation.
	;;^DD(399,10,5,1,0)
	;;=399^9^1
	;;^DD(399,10,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,10,21,1,0)
	;;=This is the date on which this bill was authorized for printing.
	;;^DD(399,10,"DT")
	;;=2880526
	;;^DD(399,11,0)
	;;=AUTHORIZER^P200'I^VA(200,^S;11^Q
	;;^DD(399,11,3)
	;;=Enter user who authorized this bill for generation.
	;;^DD(399,11,5,1,0)
	;;=399^9^2
	;;^DD(399,11,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,11,21,1,0)
	;;=This is the user who authorized the generation of this bill.
	;;^DD(399,11,"DT")
	;;=2900921
	;;^DD(399,12,0)
	;;=DATE FIRST PRINTED^RD^^S;12^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,12,1,0)
	;;=^.1
	;;^DD(399,12,1,1,0)
	;;=^^TRIGGER^399^14
	;;^DD(399,12,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,14)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,12,1,1,1.4)
	;;^DD(399,12,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,14)=DIV,DIH=399,DIG=14 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,12,1,1,2)
	;;=Q
	;;^DD(399,12,1,1,"CREATE CONDITION")
	;;=#14=""
	;;^DD(399,12,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,12,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,12,1,1,"FIELD")
	;;=#14
	;;^DD(399,12,1,2,0)
	;;=^^TRIGGER^399^15
	;;^DD(399,12,1,2,1)
	;;=X ^DD(399,12,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,12,1,2,1.4)
	;;^DD(399,12,1,2,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,15),0)):"",1:$P(^(0),U,1))=""
	;;^DD(399,12,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,15)=DIV,DIH=399,DIG=15 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,12,1,2,2)
	;;=Q
	;;^DD(399,12,1,2,"CREATE CONDITION")
	;;=#15=""
	;;^DD(399,12,1,2,"CREATE VALUE")
	;;=S X=DUZ

IBINI0A5
IBINI0A5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,12,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,12,1,2,"FIELD")
	;;=#15
	;;^DD(399,12,1,3,0)
	;;=^^TRIGGER^399^13
	;;^DD(399,12,1,3,1)
	;;=X ^DD(399,12,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,12,1,3,1.4)
	;;^DD(399,12,1,3,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,13),0)):"",1:$P(^(0),U,1))=""
	;;^DD(399,12,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,13)=DIV,DIH=399,DIG=13 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,12,1,3,2)
	;;=Q
	;;^DD(399,12,1,3,"CREATE CONDITION")
	;;=FIRST PRINTED BY=""
	;;^DD(399,12,1,3,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,12,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,12,1,3,"DT")
	;;=2940310
	;;^DD(399,12,1,3,"FIELD")
	;;=FIRST PRINTED BY
	;;^DD(399,12,1,4,0)
	;;=399^AP
	;;^DD(399,12,1,4,1)
	;;=S ^DGCR(399,"AP",$E(X,1,30),DA)=""
	;;^DD(399,12,1,4,2)
	;;=K ^DGCR(399,"AP",$E(X,1,30),DA)
	;;^DD(399,12,1,4,"%D",0)
	;;=^^1^1^2910916^
	;;^DD(399,12,1,4,"%D",1,0)
	;;=Regular cross-reference to be used to speed up reports.
	;;^DD(399,12,1,4,"DT")
	;;=2910916
	;;^DD(399,12,3)
	;;=Enter date on which this bill was first generated.
	;;^DD(399,12,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,12,21,1,0)
	;;=This is the date on which the bill was first printed.
	;;^DD(399,12,"DT")
	;;=2940310
	;;^DD(399,13,0)
	;;=FIRST PRINTED BY^P200'^VA(200,^S;13^Q
	;;^DD(399,13,1,0)
	;;=^.1^^0
	;;^DD(399,13,3)
	;;=Enter user who first generated this bill.
	;;^DD(399,13,5,1,0)
	;;=399^12^3
	;;^DD(399,13,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,13,21,1,0)
	;;=This is the user who first generated this bill.
	;;^DD(399,13,"DT")
	;;=2900921
	;;^DD(399,14,0)
	;;=DATE LAST PRINTED^D^^S;14^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,14,1,0)
	;;=^.1^^-1
	;;^DD(399,14,1,1,0)
	;;=^^TRIGGER^399^.13
	;;^DD(399,14,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=4 X ^DD(399,14,1,1,1.4)
	;;^DD(399,14,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,14,1,1,2)
	;;=Q
	;;^DD(399,14,1,1,"CREATE VALUE")
	;;=S X=4
	;;^DD(399,14,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,14,1,1,"FIELD")
	;;=STATUS
	;;^DD(399,14,1,3,0)
	;;=^^TRIGGER^399^15
	;;^DD(399,14,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,14,1,3,1.4)
	;;^DD(399,14,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,15)=DIV,DIH=399,DIG=15 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,14,1,3,2)
	;;=Q
	;;^DD(399,14,1,3,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,14,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,14,1,3,"FIELD")
	;;=LAST GENERATED BY
	;;^DD(399,14,3)
	;;=Enter date on which this bill was last generated.
	;;^DD(399,14,5,1,0)
	;;=399^12^1
	;;^DD(399,14,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,14,21,1,0)
	;;=This is the date on which this bill was last printed.
	;;^DD(399,14,"DT")
	;;=2900116
	;;^DD(399,15,0)
	;;=LAST PRINTED BY^P200'I^VA(200,^S;15^Q
	;;^DD(399,15,1,0)
	;;=^.1^^0
	;;^DD(399,15,3)
	;;=Enter user who generated this bill last.
	;;^DD(399,15,5,1,0)
	;;=399^12^2
	;;^DD(399,15,5,2,0)
	;;=399^14^3
	;;^DD(399,15,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,15,21,1,0)
	;;=This is the user who last printed this bill.
	;;^DD(399,15,"DT")
	;;=2900921
	;;^DD(399,16,0)
	;;=CANCEL BILL?^FOX^^S;16^I $D(X) D YN^IBCU

IBINI0A6
IBINI0A6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,16,1,0)
	;;=^.1
	;;^DD(399,16,1,1,0)
	;;=^^TRIGGER^399^17
	;;^DD(399,16,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,17),X=X S DIU=X K Y S X=DIV S X=DT X ^DD(399,16,1,1,1.4)
	;;^DD(399,16,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,17)=DIV,DIH=399,DIG=17 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,16,1,1,2)
	;;=Q
	;;^DD(399,16,1,1,"CREATE VALUE")
	;;=TODAY
	;;^DD(399,16,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,16,1,1,"FIELD")
	;;=#17
	;;^DD(399,16,1,2,0)
	;;=^^TRIGGER^399^18
	;;^DD(399,16,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$P(Y(1),U,18),X=X S DIU=X K Y S X=DIV S X=DUZ X ^DD(399,16,1,2,1.4)
	;;^DD(399,16,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"S")):^("S"),1:""),DIV=X S $P(^("S"),U,18)=DIV,DIH=399,DIG=18 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,16,1,2,2)
	;;=Q
	;;^DD(399,16,1,2,"CREATE VALUE")
	;;=S X=DUZ
	;;^DD(399,16,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,16,1,2,"FIELD")
	;;=#18
	;;^DD(399,16,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,16,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,16,3)
	;;=Enter 'Yes' or '1' if you want this billing record to be cancelled, 'No' or '0' if you do not want this billing record to be cancelled.
	;;^DD(399,16,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,16,21,1,0)
	;;=This allows the user to cancel this bill.
	;;^DD(399,16,"DT")
	;;=2880608
	;;^DD(399,17,0)
	;;=DATE BILL CANCELLED^DI^^S;17^S %DT="ETX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,17,1,0)
	;;=^.1
	;;^DD(399,17,1,1,0)
	;;=^^TRIGGER^399^.13
	;;^DD(399,17,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,"S"),U,16)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=7 X ^DD(399,17,1,1,1.4)
	;;^DD(399,17,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,13)=DIV,DIH=399,DIG=.13 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,17,1,1,2)
	;;=Q
	;;^DD(399,17,1,1,"CREATE CONDITION")
	;;=I $P(^DGCR(399,DA,"S"),U,16)=1
	;;^DD(399,17,1,1,"CREATE VALUE")
	;;=S X=7
	;;^DD(399,17,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,17,1,1,"FIELD")
	;;=STATUS
	;;^DD(399,17,3)
	;;=Enter date on which this bill was cancelled.
	;;^DD(399,17,5,1,0)
	;;=399^16^1
	;;^DD(399,17,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,17,21,1,0)
	;;=This is the date on which this billing record was cancelled.
	;;^DD(399,17,"DT")
	;;=2900119
	;;^DD(399,18,0)
	;;=BILL CANCELLED BY^P200'I^VA(200,^S;18^Q
	;;^DD(399,18,3)
	;;=Enter user who cancelled this bill.
	;;^DD(399,18,5,1,0)
	;;=399^16^2
	;;^DD(399,18,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,18,21,1,0)
	;;=This is the user who cancelled this bill.
	;;^DD(399,18,"DT")
	;;=2900921
	;;^DD(399,19,0)
	;;=REASON CANCELLED^RFX^^S;19^K:$L(X)>100!($L(X)<3)!'(X?1A.ANP) X I '$D(X) X ^DD(399,19,9.3)
	;;^DD(399,19,3)
	;;=Enter the 3-100 character reason(s) why this bill was cancelled.
	;;^DD(399,19,9.3)
	;;=W ?5,"Reason for cancellation is mandatory if you wish to cancel this bill.",!,?5,"Bill will not be cancelled if this field is left unanswered.",!
	;;^DD(399,19,21,0)
	;;=^^3^3^2900417^^^
	;;^DD(399,19,21,1,0)
	;;=This is the reason(s) why this bill was cancelled.  This entry is mandatory
	;;^DD(399,19,21,2,0)
	;;=when cancelling a bill.  Enter 3-100 characters, the first character must
	;;^DD(399,19,21,3,0)
	;;=be an alphabetic character.
	;;^DD(399,19,"DT")
	;;=2920121
	;;^DD(399,40,0)
	;;=CONDITION CODE^399.04SA^^CC;0
	;;^DD(399,40,21,0)
	;;=^^2^2^2931229^^^

IBINI0A7
IBINI0A7	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,40,21,1,0)
	;;=This identifies the condition(s) relating to this bill that may affect
	;;^DD(399,40,21,2,0)
	;;=payer processing.
	;;^DD(399,41,0)
	;;=OCCURRENCE CODE^399.041IPA^^OC;0
	;;^DD(399,41,12)
	;;=Valid MCCR Occurrence Codes only!
	;;^DD(399,41,12.1)
	;;=S DIC("S")="I $D(^DGCR(399.1,+Y,0)) I $P(^DGCR(399.1,+Y,0),""^"",4)=1 X ^DD(399.041,9.1)"
	;;^DD(399,41,21,0)
	;;=^^2^2^2920430^^^^
	;;^DD(399,41,21,1,0)
	;;=This identifies the significant event(s) relating to this bill that may
	;;^DD(399,41,21,2,0)
	;;=affect payer processing.
	;;^DD(399,42,0)
	;;=REVENUE CODE^399.042PAI^^RC;0
	;;^DD(399,42,21,0)
	;;=^^2^2^2940307^^^^
	;;^DD(399,42,21,1,0)
	;;=This identifies specific accommodation(s), ancillary service(s) or billing
	;;^DD(399,42,21,2,0)
	;;=calculation(s).
	;;^DD(399,43,0)
	;;=OP VISITS DATE(S)^399.043DA^^OP;0
	;;^DD(399,43,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,43,21,1,0)
	;;=This identifies the outpatient visit date(s) which are included on this bill.
	;;^DD(399,44,0)
	;;=REASON(S) DISAPPROVED-INITIAL^399.044PA^^D1;0
	;;^DD(399,44,21,0)
	;;=^^2^2^2880831^
	;;^DD(399,44,21,1,0)
	;;=This defines the reason(s) why this billing record was disapproved during
	;;^DD(399,44,21,2,0)
	;;=the initial review phase.
	;;^DD(399,45,0)
	;;=REASON(S) DISAPPROVED-SECOND^399.045PA^^D2;0
	;;^DD(399,45,21,0)
	;;=^^2^2^2880831^
	;;^DD(399,45,21,1,0)
	;;=This defines the reason(s) why this billing record was disapproved during
	;;^DD(399,45,21,2,0)
	;;=the secondary review phase.
	;;^DD(399,46,0)
	;;=RETURNED LOG DATE/TIME^399.046DA^^R;0
	;;^DD(399,46,21,0)
	;;=^^4^4^2911025^^^
	;;^DD(399,46,21,1,0)
	;;=This field provides the audit trail of who edited a bill after is has
	;;^DD(399,46,21,2,0)
	;;=been returned from being Audited for correction by the approving service.
	;;^DD(399,46,21,3,0)
	;;=Data in this field is automatically entered by the system whenever a
	;;^DD(399,46,21,4,0)
	;;=returned bill is edited and/or returned to fiscal.
	;;^DD(399,47,0)
	;;=VALUE CODE^399.047PA^^CV;0
	;;^DD(399,51,0)
	;;=*CPT PROCEDURE CODE (1)^*P81'^ICPT(^C;1^S DIC("S")="I $P(^(0),""^"",1)?5N" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,51,.1)
	;;=CPT PROCEDURE CODE (1)
	;;^DD(399,51,1,0)
	;;=^.1^^0
	;;^DD(399,51,3)
	;;=CPT procedure codes may be selected if CPT is specified as the Procedure Coding Method for this bill.
	;;^DD(399,51,12)
	;;=Only CPT codes may be selected!!
	;;^DD(399,51,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?5N"
	;;^DD(399,51,21,0)
	;;=^^3^3^2940214^^^^
	;;^DD(399,51,21,1,0)
	;;=This is a CPT outpatient procedure code.
	;;^DD(399,51,21,2,0)
	;;= 
	;;^DD(399,51,21,3,0)
	;;=This field has been marked for deletion 11/4/91.
	;;^DD(399,51,"DT")
	;;=2920122
	;;^DD(399,52,0)
	;;=*CPT PROCEDURE CODE (2)^*P81'^ICPT(^C;2^S DIC("S")="I $P(^(0),""^"",1)?5N" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,52,.1)
	;;=CPT PROCEDURE CODE (2)
	;;^DD(399,52,1,0)
	;;=^.1^^0
	;;^DD(399,52,3)
	;;=CPT outpatient procedure codes may only be selected if CPT is specified as the Procedure Coding Method for this outpatient bill.
	;;^DD(399,52,12)
	;;=Only CPT codes may be selected!!
	;;^DD(399,52,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?5N"
	;;^DD(399,52,21,0)
	;;=^^3^3^2911104^^
	;;^DD(399,52,21,1,0)
	;;=This is a CPT outpatient procedure code.
	;;^DD(399,52,21,2,0)
	;;= 
	;;^DD(399,52,21,3,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,52,"DT")
	;;=2920122
	;;^DD(399,53,0)
	;;=*CPT PROCEDURE CODE (3)^*P81'^ICPT(^C;3^S DIC("S")="I $P(^(0),""^"",1)?5N" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBINI0A8
IBINI0A8	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,53,.1)
	;;=CPT PROCEDURE CODE (3)
	;;^DD(399,53,1,0)
	;;=^.1^^0
	;;^DD(399,53,3)
	;;=CPT outpatient procedure codes may only be selected if CPT is specified as the Procedure Coding Method for this outpatient bill.
	;;^DD(399,53,12)
	;;=Only CPT codes may be selected!!
	;;^DD(399,53,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?5N"
	;;^DD(399,53,21,0)
	;;=^^3^3^2911104^^
	;;^DD(399,53,21,1,0)
	;;=This is a CPT outpatient procedure code.
	;;^DD(399,53,21,2,0)
	;;= 
	;;^DD(399,53,21,3,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,53,"DT")
	;;=2920122
	;;^DD(399,54,0)
	;;=*ICD PROCEDURE CODE (1)^P80.1'^ICD0(^C;4^Q
	;;^DD(399,54,1,0)
	;;=^.1^^0
	;;^DD(399,54,3)
	;;=Enter ICD procedure code associated with the outpatient episode of care.
	;;^DD(399,54,21,0)
	;;=^^3^3^2911104^^^
	;;^DD(399,54,21,1,0)
	;;=This is an ICD outpatient procedure code.
	;;^DD(399,54,21,2,0)
	;;= 
	;;^DD(399,54,21,3,0)
	;;=This field is marked for deletion on 11/4/91.
	;;^DD(399,54,"DT")
	;;=2920122
	;;^DD(399,55,0)
	;;=*ICD PROCEDURE CODE (2)^P80.1'^ICD0(^C;5^Q
	;;^DD(399,55,.1)
	;;=ICD PROCEDURE CODE (2)
	;;^DD(399,55,1,0)
	;;=^.1^^0
	;;^DD(399,55,3)
	;;=Enter ICD procedure code associated with this outpatient episode of care.
	;;^DD(399,55,21,0)
	;;=^^3^3^2920526^^^
	;;^DD(399,55,21,1,0)
	;;=This is an ICD outpatient procedure code.
	;;^DD(399,55,21,2,0)
	;;= 
	;;^DD(399,55,21,3,0)
	;;=This field is marked of deletion on 11/4/91.
	;;^DD(399,55,"DT")
	;;=2920122
	;;^DD(399,56,0)
	;;=*ICD PROCEDURE CODE (3)^P80.1'^ICD0(^C;6^Q
	;;^DD(399,56,.1)
	;;=ICD PROCEDURE CODE (3)
	;;^DD(399,56,1,0)
	;;=^.1^^0
	;;^DD(399,56,3)
	;;=Enter ICD procedure code associated with this outpatient episode of care.
	;;^DD(399,56,21,0)
	;;=^^3^3^2911104^^
	;;^DD(399,56,21,1,0)
	;;=This is an ICD outpatient procedure code.
	;;^DD(399,56,21,2,0)
	;;= 
	;;^DD(399,56,21,3,0)
	;;=This field is marked for deletion on 11/4/91.
	;;^DD(399,56,"DT")
	;;=2920122
	;;^DD(399,57,0)
	;;=*HCFA PROCEDURE CODE (1)^*P81'X^ICPT(^C;7^S D="F" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,57,.1)
	;;=HCFA PROCEDURE CODE (1)
	;;^DD(399,57,1,0)
	;;=^.1^^0
	;;^DD(399,57,3)
	;;=Enter HCFA procedure code associated with this outpatient episode of care.
	;;^DD(399,57,12)
	;;=Only HCFA codes may be selected!!
	;;^DD(399,57,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?1A.N"
	;;^DD(399,57,21,0)
	;;=^^3^3^2911104^^^^
	;;^DD(399,57,21,1,0)
	;;=This is a HCFA outpatient procedure code.
	;;^DD(399,57,21,2,0)
	;;= 
	;;^DD(399,57,21,3,0)
	;;=This field is marked for deletion on 11/4/91.
	;;^DD(399,57,"DT")
	;;=2920122
	;;^DD(399,58,0)
	;;=*HCFA PROCEDURE CODE (2)^*P81'X^ICPT(^C;8^S D="F" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,58,.1)
	;;=HCFA PROCEDURE CODE (2)
	;;^DD(399,58,1,0)
	;;=^.1^^0
	;;^DD(399,58,3)
	;;=Enter HCFA procedure code associated with this outpatient episode of care.
	;;^DD(399,58,12)
	;;=Only HCFA codes may be selected!!
	;;^DD(399,58,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?1A.N"
	;;^DD(399,58,21,0)
	;;=^^3^3^2911104^^
	;;^DD(399,58,21,1,0)
	;;=This is a HCFA outpatient procedure code.
	;;^DD(399,58,21,2,0)
	;;= 
	;;^DD(399,58,21,3,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,58,"DT")
	;;=2920122
	;;^DD(399,59,0)
	;;=*HCFA PROCEDURE CODE (3)^*P81'X^ICPT(^C;9^S D="F" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,59,.1)
	;;=*HCFA PROCDURE CODE (3)
	;;^DD(399,59,1,0)
	;;=^.1^^0
	;;^DD(399,59,3)
	;;=Enter HCFA procedure code associated with this outpatient episode of care.
	;;^DD(399,59,12)
	;;=Only HCFA codes may be selected!!

IBINI0A9
IBINI0A9	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,59,12.1)
	;;=S DIC("S")="I $P(^(0),""^"",1)?1A.N"
	;;^DD(399,59,21,0)
	;;=^^3^3^2911104^^
	;;^DD(399,59,21,1,0)
	;;=This is a HCFA outpatient procedure code.
	;;^DD(399,59,21,2,0)
	;;= 
	;;^DD(399,59,21,3,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,59,"DT")
	;;=2920122
	;;^DD(399,60,0)
	;;=OUTPATIENT DIAGNOSIS^FX^^C;10^K:$L(X)>45!($L(X)<1)!'(X?1U.ANP) X
	;;^DD(399,60,3)
	;;=Answer must be 1-45 characters in length.
	;;^DD(399,60,5,1,0)
	;;=399^64^1
	;;^DD(399,60,9)
	;;=^
	;;^DD(399,60,21,0)
	;;=^^1^1^2900525^^^^
	;;^DD(399,60,21,1,0)
	;;=The outpatient diagnosis is selectable from the ICD DIAGNOSIS file.
	;;^DD(399,60,"DT")
	;;=2900613
	;;^DD(399,61,0)
	;;=*PROCDEDURE DATE (1)^RDX^^C;11^S %DT="EX" D ^%DT S X=Y I $D(X) D DTMES^IBCU7
	;;^DD(399,61,.1)
	;;=PROCEDURE DATE (1)
	;;^DD(399,61,3)
	;;=TYPE A DATE ON OR BEFORE TODAY
	;;^DD(399,61,21,0)
	;;=^^4^4^2920615^^^^
	;;^DD(399,61,21,1,0)
	;;=This is the date on which the first procedure associated with this
	;;^DD(399,61,21,2,0)
	;;=billing episode occurred.
	;;^DD(399,61,21,3,0)
	;;= 
	;;^DD(399,61,21,4,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,61,"DT")
	;;=2911104
	;;^DD(399,62,0)
	;;=*PROCEDURE DATE (2)^RDX^^C;12^S %DT="EX" D ^%DT S X=Y I $D(X) D DTMES^IBCU7
	;;^DD(399,62,.1)
	;;=PROCEDURE DATE (2)
	;;^DD(399,62,3)
	;;=
	;;^DD(399,62,21,0)
	;;=^^4^4^2911104^^
	;;^DD(399,62,21,1,0)
	;;=This is the date on which the second procedure associated with
	;;^DD(399,62,21,2,0)
	;;=this billing episode occurred.
	;;^DD(399,62,21,3,0)
	;;= 
	;;^DD(399,62,21,4,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,62,"DT")
	;;=2911104
	;;^DD(399,63,0)
	;;=*PROCEDURE DATE (3)^RDX^^C;13^S %DT="EX" D ^%DT S X=Y I $D(X) D DTMES^IBCU7
	;;^DD(399,63,.1)
	;;=PROCEDURE DATE (3)
	;;^DD(399,63,3)
	;;=TYPE A DATE ON OR BEFORE TODAY
	;;^DD(399,63,21,0)
	;;=^^4^4^2911104^^
	;;^DD(399,63,21,1,0)
	;;=This is the date on which the third procedure associated with this
	;;^DD(399,63,21,2,0)
	;;=billing episode occurred.
	;;^DD(399,63,21,3,0)
	;;= 
	;;^DD(399,63,21,4,0)
	;;=This field has been marked for deletion on 11/4/91.
	;;^DD(399,63,"DT")
	;;=2911104
	;;^DD(399,64,0)
	;;=*ICD DIAGNOSIS CODE (1)^RP80'^ICD9(^C;14^Q
	;;^DD(399,64,.1)
	;;=ICD DIAGNOSIS CODE (1)
	;;^DD(399,64,1,0)
	;;=^.1
	;;^DD(399,64,1,1,0)
	;;=^^TRIGGER^399^60
	;;^DD(399,64,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,0),"^",5)>2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"C")):^("C"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=$P(^ICD9(+X,0),"^",3) X ^DD(399,64,1,1,1.4)
	;;^DD(399,64,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,10)=DIV,DIH=399,DIG=60 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,64,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"C")):^("C"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(399,64,1,1,2.4)
	;;^DD(399,64,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"C")):^("C"),1:""),DIV=X S $P(^("C"),U,10)=DIV,DIH=399,DIG=60 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,64,1,1,"%D",0)
	;;=^^1^1^2920211^
	;;^DD(399,64,1,1,"%D",1,0)
	;;=Sets the Outpatient Diagnosis to the ICD DIAGNOSIS CODE (1).
	;;^DD(399,64,1,1,"CREATE CONDITION")
	;;=I $P(^DGCR(399,DA,0),"^",5)>2
	;;^DD(399,64,1,1,"CREATE VALUE")
	;;=S X=$P(^ICD9(+X,0),"^",3)
	;;^DD(399,64,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399,64,1,1,"DT")
	;;=2920211
	;;^DD(399,64,1,1,"FIELD")
	;;=#60
	;;^DD(399,64,3)
	;;=Enter the ICD diagnosis code which pertains to this billing episode.
	;;^DD(399,64,21,0)
	;;=^^1^1^2931117^^^

IBINI0AA
IBINI0AA	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,64,21,1,0)
	;;=This is the first ICD diagnosis code associated with this billing episode.
	;;^DD(399,64,23,0)
	;;=^^2^2^2931117^
	;;^DD(399,64,23,1,0)
	;;=Replaced by a diagnosis file (362.3) with IB v2.0.  "*" for deletion
	;;^DD(399,64,23,2,0)
	;;=on 11/10/93.
	;;^DD(399,64,"DT")
	;;=2931110
	;;^DD(399,65,0)
	;;=*ICD DIAGNOSIS CODE (2)^P80'^ICD9(^C;15^Q
	;;^DD(399,65,.1)
	;;=ICD DIAGNOSIS CODE (2)
	;;^DD(399,65,3)
	;;=Enter the ICD diagnosis code which pertains to this billing episode.
	;;^DD(399,65,21,0)
	;;=^^1^1^2931117^^
	;;^DD(399,65,21,1,0)
	;;=This is the second ICD diagnosis code associated with this billing episode.
	;;^DD(399,65,23,0)
	;;=^^2^2^2931117^
	;;^DD(399,65,23,1,0)
	;;=Replaced by a diagnosis file (362.3) with IB v2.0.  "*" for deletion
	;;^DD(399,65,23,2,0)
	;;=on 11/10/93.
	;;^DD(399,65,"DT")
	;;=2931110
	;;^DD(399,66,0)
	;;=*ICD DIAGNOSIS CODE (3)^P80'^ICD9(^C;16^Q
	;;^DD(399,66,.1)
	;;=ICD DIAGNOSIS CODE (3)
	;;^DD(399,66,3)
	;;=Enter the ICD diagnosis code which pertains to this billing episode.
	;;^DD(399,66,21,0)
	;;=^^1^1^2931117^^
	;;^DD(399,66,21,1,0)
	;;=This is the third ICD diagnosis code associated with this billing episode.
	;;^DD(399,66,23,0)
	;;=^^2^2^2931117^
	;;^DD(399,66,23,1,0)
	;;=Replaced by a diagnosis file (362.3) with IB v2.0.  "*" for deletion
	;;^DD(399,66,23,2,0)
	;;=on 11/10/93.
	;;^DD(399,66,"DT")
	;;=2931110
	;;^DD(399,67,0)
	;;=*ICD DIAGNOSIS CODE (4)^P80'^ICD9(^C;17^Q
	;;^DD(399,67,.1)
	;;=ICD DIAGNOSIS CODE (4)
	;;^DD(399,67,3)
	;;=Enter the ICD diagnosis code which pertains to this billing episode.
	;;^DD(399,67,21,0)
	;;=^^1^1^2931117^^
	;;^DD(399,67,21,1,0)
	;;=This is the fourth ICD diagnosis code associated with this billing episode.
	;;^DD(399,67,23,0)
	;;=^^2^2^2931117^
	;;^DD(399,67,23,1,0)
	;;=Replaced by a diagnosis file (362.3) with IB v2.0.  "*" for deletion
	;;^DD(399,67,23,2,0)
	;;=on 11/10/93.
	;;^DD(399,67,"DT")
	;;=2931110
	;;^DD(399,68,0)
	;;=*ICD DIAGNOSIS CODE (5)^P80'^ICD9(^C;18^Q
	;;^DD(399,68,.1)
	;;=ICD DIAGNOSIS CODE (5)
	;;^DD(399,68,3)
	;;=Enter the ICD diagnosis code which pertains to this billing episode.
	;;^DD(399,68,21,0)
	;;=^^1^1^2931117^^
	;;^DD(399,68,21,1,0)
	;;=This is the fifth ICD diagnosis code associated with this billing episode.
	;;^DD(399,68,23,0)
	;;=^^2^2^2931117^
	;;^DD(399,68,23,1,0)
	;;=Replaced by a diagnosis file (362.3) with IB v2.0.  "*" for deletion
	;;^DD(399,68,23,2,0)
	;;=on 11/10/93.
	;;^DD(399,68,"DT")
	;;=2931110
	;;^DD(399,101,0)
	;;=PRIMARY INSURANCE CARRIER^R*P36'X^DIC(36,^M;1^D DD^IBCNS S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))" D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,101,1,0)
	;;=^.1
	;;^DD(399,101,1,1,0)
	;;=399^AI1^MUMPS
	;;^DD(399,101,1,1,1)
	;;=D MAILA^IBCU5
	;;^DD(399,101,1,1,2)
	;;=Q
	;;^DD(399,101,1,1,"%D",0)
	;;=^^9^9^2931220^^^^
	;;^DD(399,101,1,1,"%D",1,0)
	;;= - calls MAILA to set mailing address (399,104-109,121) to primary
	;;^DD(399,101,1,1,"%D",2,0)
	;;=   insurer's address
	;;^DD(399,101,1,1,"%D",3,0)
	;;= 
	;;^DD(399,101,1,1,"%D",4,0)
	;;=NOTE: I1 and AIC x-refs now set by field 112.
	;;^DD(399,101,1,1,"%D",5,0)
	;;=If X is one of the patients active/valid insurance companies:
	;;^DD(399,101,1,1,"%D",6,0)
	;;= - sets the node "I1" to detailed data on the insurance company 
	;;^DD(399,101,1,1,"%D",7,0)
	;;=   (2,.312, entire node .01-17)
	;;^DD(399,101,1,1,"%D",8,0)
	;;= - sets x-ref "AIC": subfile x-ref of insurance carriers (399,101-103)
	;;^DD(399,101,1,1,"%D",9,0)
	;;= 
	;;^DD(399,101,1,1,"DT")
	;;=2931220
	;;^DD(399,101,1,2,0)
	;;=399^AREV4^MUMPS

IBINI0AB
IBINI0AB	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,101,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399,101,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399,101,1,2,"%D",0)
	;;=^^3^3^2940214^^
	;;^DD(399,101,1,2,"%D",1,0)
	;;=This variable DGRVRCAL being defined causes the revenue codes to be
	;;^DD(399,101,1,2,"%D",2,0)
	;;=recalculated (results in ^IBCU6 being called).  Checked at various places
	;;^DD(399,101,1,2,"%D",3,0)
	;;=within the billing screens (ex. EN+2^IBCSC4).
	;;^DD(399,101,1,3,0)
	;;=399^AE^MUMPS
	;;^DD(399,101,1,3,1)
	;;=S:$P(^DGCR(399,DA,0),"^",2) ^DGCR(399,"AE",$P(^(0),U,2),X,DA)=""
	;;^DD(399,101,1,3,2)
	;;=K:$P(^DGCR(399,DA,0),"^",2) ^DGCR(399,"AE",$P(^(0),U,2),X,DA)
	;;^DD(399,101,1,3,"%D",0)
	;;=^^3^3^2930802^^
	;;^DD(399,101,1,3,"%D",1,0)
	;;=Cross reference of patients and bills to primary insurers.  This will
	;;^DD(399,101,1,3,"%D",2,0)
	;;=be used to prevent deletion of insurance policy entries from the
	;;^DD(399,101,1,3,"%D",3,0)
	;;=patient file if a bill has been created to this insurance company.
	;;^DD(399,101,1,3,"DT")
	;;=2930802
	;;^DD(399,101,1,4,0)
	;;=^^TRIGGER^399^.19
	;;^DD(399,101,1,4,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,19),X=X S DIU=X K Y S X=DIV S X=$$FT^IBCU3(DA) X ^DD(399,101,1,4,1.4)
	;;^DD(399,101,1,4,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,19)=DIV,DIH=399,DIG=.19 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,101,1,4,2)
	;;=Q
	;;^DD(399,101,1,4,"%D",0)
	;;=^^1^1^2940214^^
	;;^DD(399,101,1,4,"%D",1,0)
	;;=Sets form type depending on ins co. parameter and site default.
	;;^DD(399,101,1,4,"CREATE VALUE")
	;;=S X=$$FT^IBCU3(DA)
	;;^DD(399,101,1,4,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,101,1,4,"DT")
	;;=2931110
	;;^DD(399,101,1,4,"FIELD")
	;;=FORM TYPE
	;;^DD(399,101,1,5,0)
	;;=^^TRIGGER^399^122
	;;^DD(399,101,1,5,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(399,101,1,5,1.1) X ^DD(399,101,1,5,1.4)
	;;^DD(399,101,1,5,1.1)
	;;=S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^DIC(36,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(36,D0,0)):^(0),1:"") S X=$P(Y(101),U,11) S D0=I(0,0)
	;;^DD(399,101,1,5,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M1")):^("M1"),1:""),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,101,1,5,2)
	;;=Q
	;;^DD(399,101,1,5,"%D",0)
	;;=^^2^2^2940201^
	;;^DD(399,101,1,5,"%D",1,0)
	;;=Loads the Primary Provider # with the Hospital Provider Number of the
	;;^DD(399,101,1,5,"%D",2,0)
	;;=Primary Insurance Carrier.
	;;^DD(399,101,1,5,"CREATE VALUE")
	;;=PRIMARY INSURANCE CARRIER:HOSPITAL PROVIDER NUMBER
	;;^DD(399,101,1,5,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,101,1,5,"DT")
	;;=2940201
	;;^DD(399,101,1,5,"FIELD")
	;;=PRIMARY PROVIDER #
	;;^DD(399,101,3)
	;;=Enter name of insurance carrier to which this bill is to be sent.
	;;^DD(399,101,5,1,0)
	;;=399^112^1
	;;^DD(399,101,12)
	;;=Only valid insurance companies for this date of care.
	;;^DD(399,101,12.1)
	;;=S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
	;;^DD(399,101,21,0)
	;;=^^2^2^2940214^^^^
	;;^DD(399,101,21,1,0)
	;;=This is the name of the insurance carrier to which this bill is to be sent.
	;;^DD(399,101,21,2,0)
	;;=This is from the entries in this patients file of insurance companies. 
	;;^DD(399,101,23,0)
	;;=^^3^3^2940214^^
	;;^DD(399,101,23,1,0)
	;;=Only valid/active insurance companies for this patient can be choosen,
	;;^DD(399,101,23,2,0)
	;;=as defined by DD^IBCNS.  Company must not already be defined as a carrier 
	;;^DD(399,101,23,3,0)
	;;=(399,102-103) for this bill.

IBINI0AC
IBINI0AC	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,101,"DT")
	;;=2940201
	;;^DD(399,102,0)
	;;=SECONDARY INSURANCE CARRIER^*P36'X^DIC(36,^M;2^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,102,1,0)
	;;=^.1
	;;^DD(399,102,1,1,0)
	;;=399^AI2^MUMPS
	;;^DD(399,102,1,1,1)
	;;=Q
	;;^DD(399,102,1,1,2)
	;;=Q
	;;^DD(399,102,1,1,"DT")
	;;=2931220
	;;^DD(399,102,1,2,0)
	;;=^^TRIGGER^399^123
	;;^DD(399,102,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(399,102,1,2,1.1) X ^DD(399,102,1,2,1.4)
	;;^DD(399,102,1,2,1.1)
	;;=S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^DIC(36,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(36,D0,0)):^(0),1:"") S X=$P(Y(101),U,11) S D0=I(0,0)
	;;^DD(399,102,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M1")):^("M1"),1:""),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,102,1,2,2)
	;;=Q
	;;^DD(399,102,1,2,"%D",0)
	;;=^^2^2^2940201^
	;;^DD(399,102,1,2,"%D",1,0)
	;;=Loads the Secondary Provider # with the Hospital Provider Number of the
	;;^DD(399,102,1,2,"%D",2,0)
	;;=Secondary Insurance Carrier.
	;;^DD(399,102,1,2,"CREATE VALUE")
	;;=SECONDARY INSURANCE CARRIER:HOSPITAL PROVIDER NUMBER
	;;^DD(399,102,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,102,1,2,"DT")
	;;=2940201
	;;^DD(399,102,1,2,"FIELD")
	;;=SECONDARY PROVIDER #
	;;^DD(399,102,3)
	;;=Enter name of secondary insurance carrier from which the provider might expect some payment for this bill.
	;;^DD(399,102,5,1,0)
	;;=399^113^1
	;;^DD(399,102,12)
	;;=Only valid insurance companies for this date of care.
	;;^DD(399,102,12.1)
	;;=S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
	;;^DD(399,102,21,0)
	;;=^^2^2^2880831^
	;;^DD(399,102,21,1,0)
	;;=This is the name of the secondary insurance carrier from which the provider
	;;^DD(399,102,21,2,0)
	;;=might expect some payment for this bill.
	;;^DD(399,102,"DT")
	;;=2940201
	;;^DD(399,103,0)
	;;=TERTIARY INSURANCE CARRIER^*P36'X^DIC(36,^M;3^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,103,1,0)
	;;=^.1
	;;^DD(399,103,1,1,0)
	;;=399^AI3^MUMPS
	;;^DD(399,103,1,1,1)
	;;=Q
	;;^DD(399,103,1,1,2)
	;;=Q
	;;^DD(399,103,1,1,"DT")
	;;=2931220
	;;^DD(399,103,1,2,0)
	;;=^^TRIGGER^399^124
	;;^DD(399,103,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y X ^DD(399,103,1,2,1.1) X ^DD(399,103,1,2,1.4)
	;;^DD(399,103,1,2,1.1)
	;;=S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^DIC(36,+D0,0)) D0=-1 S Y(101)=$S($D(^DIC(36,D0,0)):^(0),1:"") S X=$P(Y(101),U,11) S D0=I(0,0)
	;;^DD(399,103,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M1")):^("M1"),1:""),DIV=X S $P(^("M1"),U,4)=DIV,DIH=399,DIG=124 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,103,1,2,2)
	;;=Q
	;;^DD(399,103,1,2,"%D",0)
	;;=^^2^2^2940201^
	;;^DD(399,103,1,2,"%D",1,0)
	;;=Loads the Tertiary Provider # with the Hospital Provider Number of the
	;;^DD(399,103,1,2,"%D",2,0)
	;;=Tertiary Insurance Carrier.
	;;^DD(399,103,1,2,"CREATE VALUE")
	;;=TERTIARY INSURANCE CARRIER:HOSPITAL PROVIDER NUMBER
	;;^DD(399,103,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,103,1,2,"DT")
	;;=2940201
	;;^DD(399,103,1,2,"FIELD")
	;;=TERTIARY PROVIDER #
	;;^DD(399,103,3)
	;;=Enter name of tertiary insurance carrier from which the provider might expect some payment for this bill.
	;;^DD(399,103,5,1,0)
	;;=399^114^1
	;;^DD(399,103,12)
	;;=Only valid insurance companies for this date of care.
	;;^DD(399,103,12.1)
	;;=S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
	;;^DD(399,103,21,0)
	;;=^^2^2^2880831^

IBINI0AD
IBINI0AD	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,103,21,1,0)
	;;=This is the name of the tertiary insurance carrier from which the provider
	;;^DD(399,103,21,2,0)
	;;=might expect some payment for this bill.
	;;^DD(399,103,"DT")
	;;=2940201
	;;^DD(399,104,0)
	;;=MAILING ADDRESS NAME^F^^M;4^K:$L(X)>30!($L(X)<1) X
	;;^DD(399,104,3)
	;;=Enter the name or title of the person to which this bill is to be sent.
	;;^DD(399,104,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,104,21,1,0)
	;;=This is the name of the party to whom this bill is to be sent.
	;;^DD(399,104,"DT")
	;;=2880523
	;;^DD(399,105,0)
	;;=MAILING ADDRESS STREET^FX^^M;5^K:$L(X)>35!($L(X)<3) X
	;;^DD(399,105,3)
	;;=Enter the 3-35 character street address to which this bill is to be mailed.
	;;^DD(399,105,9.3)
	;;=I '$D(^DGCR(399,D0,"M")),$D(^DGCR(399,D0,"I1")) S IBITY=$P(^DGCR(399,D0,"I1"),"^",1),IBIMA=^DIC(36,IBITY,2,1,0) I $D(IBIMA),IBIMA'="" S ^DGCR(399,D0,"M")=IBIMA
	;;^DD(399,105,21,0)
	;;=^^1^1^2900307^^^
	;;^DD(399,105,21,1,0)
	;;=This is the street address to which this bill is to be sent.
	;;^DD(399,105,"DT")
	;;=2890131
	;;^DD(399,106,0)
	;;=MAILING ADDRESS STREET2^F^^M;6^K:$L(X)>35!($L(X)<3) X
	;;^DD(399,106,3)
	;;=Enter the 3-35 character street address to which this bill is to be mailed.
	;;^DD(399,106,21,0)
	;;=^^1^1^2900307^^^
	;;^DD(399,106,21,1,0)
	;;=This is the street address to which this bill is to be sent.
	;;^DD(399,107,0)
	;;=MAILING ADDRESS CITY^F^^M;7^K:$L(X)>25!($L(X)<2) X
	;;^DD(399,107,3)
	;;=Enter the 2-25 character city to which this bill is to be mailed.
	;;^DD(399,107,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,107,21,1,0)
	;;=This is the city to which this bill is to be sent.
	;;^DD(399,107,"DT")
	;;=2890213
	;;^DD(399,108,0)
	;;=MAILING ADDRESS STATE^P5'^DIC(5,^M;8^Q
	;;^DD(399,108,3)
	;;=Enter the state to which this bill is to be mailed.
	;;^DD(399,108,21,0)
	;;=^^1^1^2880831^
	;;^DD(399,108,21,1,0)
	;;=This is the state to which this bill is to be sent.
	;;^DD(399,108,"DT")
	;;=2880523
	;;^DD(399,109,0)
	;;=MAILING ADDRESS ZIP CODE^F^^M;9^K:$L(X)>9!($L(X)<5)!'(X?5N!(X?9N)) X
	;;^DD(399,109,3)
	;;=Enter the 5-digit or 9-digit zip code to which this bill is to be sent.
	;;^DD(399,109,21,0)
	;;=^^1^1^2930223^^
	;;^DD(399,109,21,1,0)
	;;=This is the 5-digit or 9-digit zip code to which this bill is to be sent.
	;;^DD(399,109,"DT")
	;;=2880831
	;;^DD(399,110,0)
	;;=PATIENT SHORT MAILING ADDRESS^RF^^M;10^K:$L(X)>47!($L(X)<1) X
	;;^DD(399,110,3)
	;;=Answer with the 1-47 character short form of the patient mailing address.  This is all the information run together with a maximum of 47 characters.
	;;^DD(399,110,21,0)
	;;=^^5^5^2940120^^^^
	;;^DD(399,110,21,1,0)
	;;=This is the 1-47 character patient mailing address that will print in
	;;^DD(399,110,21,2,0)
	;;=block 11 on the UB-82 form and block 13 on the UB-92.  The computer will
	;;^DD(399,110,21,3,0)
	;;=try to calculate this.  If the length of all the patient address
	;;^DD(399,110,21,4,0)
	;;=fields is longer than 47 characters you will need to abbreviate this in
	;;^DD(399,110,21,5,0)
	;;=order to get it to print in this block.
	;;^DD(399,110,"DT")
	;;=2890419
	;;^DD(399,111,0)
	;;=RESPONSIBLE INSTITUTION^RP4^DIC(4,^M;11^Q
	;;^DD(399,111,1,0)
	;;=^.1
	;;^DD(399,111,1,1,0)
	;;=399^AML^MUMPS
	;;^DD(399,111,1,1,1)
	;;=D MAILIN^IBCU5
	;;^DD(399,111,1,1,2)
	;;=D DEL^IBCU5
	;;^DD(399,111,1,1,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399,111,1,1,"%D",1,0)
	;;=Sets/deletes mailing address.
	;;^DD(399,111,1,2,0)
	;;=399^AREV5^MUMPS
	;;^DD(399,111,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399,111,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399,111,1,2,"%D",0)
	;;=^^2^2^2940214^

IBINI0AE
IBINI0AE	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,111,1,2,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399,111,1,2,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399,111,3)
	;;=Enter name of the institution or organization responsible for payment of this bill.
	;;^DD(399,111,21,0)
	;;=^^2^2^2940114^^^
	;;^DD(399,111,21,1,0)
	;;=This is the name of the institution or organization responsible for payment
	;;^DD(399,111,21,2,0)
	;;=of this bill.
	;;^DD(399,111,"DT")
	;;=2900515
	;;^DD(399,112,0)
	;;=PRIMARY INSURANCE POLICY^FXO^^M;12^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,1)
	;;^DD(399,112,1,0)
	;;=^.1
	;;^DD(399,112,1,1,0)
	;;=^^TRIGGER^399^101
	;;^DD(399,112,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y X ^DD(399,112,1,1,1.1) X ^DD(399,112,1,1,1.4)
	;;^DD(399,112,1,1,1.1)
	;;=S X=DIV S X=+$$INSCO^IBCNS2(DA,$P(^DGCR(399,DA,"M"),U,12))
	;;^DD(399,112,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,1)=DIV,DIH=399,DIG=101 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,112,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" X ^DD(399,112,1,1,2.4)
	;;^DD(399,112,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,1)=DIV,DIH=399,DIG=101 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,112,1,1,"CREATE VALUE")
	;;=S X=+$$INSCO^IBCNS2(DA,$P(^DGCR(399,DA,"M"),U,12))
	;;^DD(399,112,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399,112,1,1,"FIELD")
	;;=#101
	;;^DD(399,112,1,2,0)
	;;=399^AI11^MUMPS
	;;^DD(399,112,1,2,1)
	;;=D IX^IBCNS2(DA,"I1")
	;;^DD(399,112,1,2,2)
	;;=D KIX^IBCNS2(DA,"I1")
	;;^DD(399,112,1,2,"%D",0)
	;;=^^2^2^2931220^^
	;;^DD(399,112,1,2,"%D",1,0)
	;;=Sets "I1" x-ref and "aic" x-ref for bill/claims file.  These indexes 
	;;^DD(399,112,1,2,"%D",2,0)
	;;=previously were set by field #101.
	;;^DD(399,112,1,2,"DT")
	;;=2931220
	;;^DD(399,112,2)
	;;=S Y(0)=Y S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,112,2.1)
	;;=S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,112,3)
	;;=Select this patient's insurance policy that is the primary policy to be billed.  Enter the name of the Ins. Company or the number.
	;;^DD(399,112,4)
	;;=D DDHELP^IBCNS2(DA,1)
	;;^DD(399,112,5,1,0)
	;;=399^.11^1
	;;^DD(399,112,21,0)
	;;=^^1^1^2940214^^^
	;;^DD(399,112,21,1,0)
	;;=The policy to be billed for this episode of care.
	;;^DD(399,112,"DT")
	;;=2931220
	;;^DD(399,113,0)
	;;=SECONDARY INSURANCE POLICY^FOX^^M;13^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,1)
	;;^DD(399,113,1,0)
	;;=^.1
	;;^DD(399,113,1,1,0)
	;;=^^TRIGGER^399^102
	;;^DD(399,113,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y X ^DD(399,113,1,1,1.1) X ^DD(399,113,1,1,1.4)
	;;^DD(399,113,1,1,1.1)
	;;=S X=DIV S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,13))
	;;^DD(399,113,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,2)=DIV,DIH=399,DIG=102 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,113,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399,113,1,1,2.4)
	;;^DD(399,113,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,2)=DIV,DIH=399,DIG=102 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,113,1,1,"CREATE VALUE")
	;;=S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,13))
	;;^DD(399,113,1,1,"DELETE VALUE")
	;;=@

IBINI0AF
IBINI0AF	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,113,1,1,"DT")
	;;=2931203
	;;^DD(399,113,1,1,"FIELD")
	;;=SECONDARY INSURANCE CARRIER
	;;^DD(399,113,1,2,0)
	;;=399^AI21^MUMPS
	;;^DD(399,113,1,2,1)
	;;=D IX^IBCNS2(DA,"I2")
	;;^DD(399,113,1,2,2)
	;;=D KIX^IBCNS2(DA,"I2")
	;;^DD(399,113,1,2,"%D",0)
	;;=^^2^2^2931220^
	;;^DD(399,113,1,2,"%D",1,0)
	;;=Sets "I2" x-ref and "aic" x-ref for bill/claims file.  These indexes 
	;;^DD(399,113,1,2,"%D",2,0)
	;;=previously were set by field #102.
	;;^DD(399,113,1,2,"DT")
	;;=2931220
	;;^DD(399,113,2)
	;;=S Y(0)=Y S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,113,2.1)
	;;=S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,113,3)
	;;=Select this patient's insurance policy that is the secondary policy to be billed.  Enter the name of the Ins. Company or the number.
	;;^DD(399,113,4)
	;;=D DDHELP^IBCNS2(DA,2)
	;;^DD(399,113,21,0)
	;;=^^1^1^2940214^
	;;^DD(399,113,21,1,0)
	;;=The secondary policy to be billed for this episode of care.
	;;^DD(399,113,"DT")
	;;=2931220
	;;^DD(399,114,0)
	;;=TERTIARY INSURANCE POLICY^FOX^^M;14^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>4!($L(X)<1) X D:$D(X) DD^IBCNS2(X,DA,1)
	;;^DD(399,114,1,0)
	;;=^.1
	;;^DD(399,114,1,1,0)
	;;=^^TRIGGER^399^103
	;;^DD(399,114,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y X ^DD(399,114,1,1,1.1) X ^DD(399,114,1,1,1.4)
	;;^DD(399,114,1,1,1.1)
	;;=S X=DIV S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,14))
	;;^DD(399,114,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,3)=DIV,DIH=399,DIG=103 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,114,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M")):^("M"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(399,114,1,1,2.4)
	;;^DD(399,114,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"M")):^("M"),1:""),DIV=X S $P(^("M"),U,3)=DIV,DIH=399,DIG=103 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399,114,1,1,"CREATE VALUE")
	;;=S X=+$$INSCO^IBCNS2(DA,+$P(^DGCR(399,DA,"M"),U,14))
	;;^DD(399,114,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399,114,1,1,"DT")
	;;=2931203
	;;^DD(399,114,1,1,"FIELD")
	;;=TERTIARY INSURANCE CARRIER
	;;^DD(399,114,1,2,0)
	;;=399^AI31^MUMPS
	;;^DD(399,114,1,2,1)
	;;=D IX^IBCNS2(DA,"I3")
	;;^DD(399,114,1,2,2)
	;;=D KIX^IBCNS2(DA,"I3")
	;;^DD(399,114,1,2,"%D",0)
	;;=^^2^2^2931220^
	;;^DD(399,114,1,2,"%D",1,0)
	;;=Sets "I3" x-ref and "aic" x-ref for bill/claims file.  These indexes 
	;;^DD(399,114,1,2,"%D",2,0)
	;;=previously were set by field #103.
	;;^DD(399,114,1,2,"DT")
	;;=2931220
	;;^DD(399,114,2)
	;;=S Y(0)=Y S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,114,2.1)
	;;=S Y=$$TRANS^IBCNS2(DA,Y)
	;;^DD(399,114,3)
	;;=Select this patient's insurance policy that is the tertiary policy to be billed.  Enter the name of the Ins. Company or the number.
	;;^DD(399,114,4)
	;;=D DDHELP^IBCNS2(DA,3)
	;;^DD(399,114,21,0)
	;;=^^1^1^2940214^
	;;^DD(399,114,21,1,0)
	;;=The tertiary policy to be billed for this episode of care.
	;;^DD(399,114,"DT")
	;;=2931220
	;;^DD(399,121,0)
	;;=MAILING ADDRESS STREET3^F^^M1;1^K:$L(X)>35!($L(X)<3) X
	;;^DD(399,121,3)
	;;=Enter the 3-35 character street address to which this bill is to be sent.
	;;^DD(399,121,21,0)
	;;=^^1^1^2890110^
	;;^DD(399,121,21,1,0)
	;;=This is the street address to which this bill is to be sent.
	;;^DD(399,121,"DT")
	;;=2890110
	;;^DD(399,122,0)
	;;=PRIMARY PROVIDER #^F^^M1;2^K:$L(X)>13!($L(X)<3) X
	;;^DD(399,122,3)
	;;=Answer must be 3-13 characters in length.
	;;^DD(399,122,5,1,0)
	;;=399^101^5
	;;^DD(399,122,21,0)
	;;=^^2^2^2940201^^
	;;^DD(399,122,21,1,0)
	;;=This is the number assigned to the provider by the primary payer.

IBINI0AG
IBINI0AG	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,122,21,2,0)
	;;=Printed in Form Locator 51 for the Primary Insurance Carrier on the UB-92.
	;;^DD(399,122,23,0)
	;;=^^2^2^2940201^^
	;;^DD(399,122,23,1,0)
	;;=Loaded with Hospital Provider Number (36,.11) of the Primary Insurance
	;;^DD(399,122,23,2,0)
	;;=Carrier, if defined.
	;;^DD(399,122,"DT")
	;;=2940201
	;;^DD(399,123,0)
	;;=SECONDARY PROVIDER #^F^^M1;3^K:$L(X)>13!($L(X)<3) X
	;;^DD(399,123,3)
	;;=Answer must be 3-13 characters in length.
	;;^DD(399,123,5,1,0)
	;;=399^102^2
	;;^DD(399,123,21,0)
	;;=^^2^2^2940201^
	;;^DD(399,123,21,1,0)
	;;=This is the number assigned to the provider by the secondary payer.
	;;^DD(399,123,21,2,0)
	;;=Printed in Form Locator 51 for the Secondary Insurance Carrier on the UB-92.
	;;^DD(399,123,23,0)
	;;=^^2^2^2940201^
	;;^DD(399,123,23,1,0)
	;;=Loaded with Hospital Provider Number (36,.11) of the Secondary Insurance
	;;^DD(399,123,23,2,0)
	;;=Carrier, if defined.
	;;^DD(399,123,"DT")
	;;=2940201
	;;^DD(399,124,0)
	;;=TERTIARY PROVIDER #^F^^M1;4^K:$L(X)>13!($L(X)<3) X
	;;^DD(399,124,3)
	;;=Answer must be 3-13 characters in length.
	;;^DD(399,124,5,1,0)
	;;=399^103^2
	;;^DD(399,124,21,0)
	;;=^^2^2^2940201^
	;;^DD(399,124,21,1,0)
	;;=This is the number assigned to the provider by the tertiary payer.
	;;^DD(399,124,21,2,0)
	;;=Printed in Form Locator 51 for the Tertiary Insurance Carrier on the UB-92.
	;;^DD(399,124,23,0)
	;;=^^2^2^2940201^
	;;^DD(399,124,23,1,0)
	;;=Loaded with Hospital Provider Number (36,.11) of the Tertiary Insurance
	;;^DD(399,124,23,2,0)
	;;=Carrier, if defined.
	;;^DD(399,124,"DT")
	;;=2940201
	;;^DD(399,151,0)
	;;=STATEMENT COVERS FROM^RDX^^U;1^S %DT="ETP" D ^%DT S X=Y K:Y<1 X I $D(X) D DDAT^IBCU4 K IB00
	;;^DD(399,151,1,0)
	;;=^.1
	;;^DD(399,151,1,1,0)
	;;=^^TRIGGER^399^165
	;;^DD(399,151,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,0),U,5)<3 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$$LOS1^IBCU64(DA) X ^DD(399,151,1,1,1.4)
	;;^DD(399,151,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,15)=DIV,DIH=399,DIG=165 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,151,1,1,2)
	;;=Q
	;;^DD(399,151,1,1,"%D",0)
	;;=^^1^1^2931018^
	;;^DD(399,151,1,1,"%D",1,0)
	;;=Sets Length of Stay based on PTF record and date range of bill.  Inpatient only.
	;;^DD(399,151,1,1,"CREATE CONDITION")
	;;=I $P(^DGCR(399,DA,0),U,5)<3
	;;^DD(399,151,1,1,"CREATE VALUE")
	;;=S X=$$LOS1^IBCU64(DA)
	;;^DD(399,151,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,151,1,1,"DT")
	;;=2931018
	;;^DD(399,151,1,1,"FIELD")
	;;=LENGTH OF STAY
	;;^DD(399,151,1,2,0)
	;;=399^AREV2^MUMPS
	;;^DD(399,151,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399,151,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399,151,1,2,"%D",0)
	;;=^^2^2^2940214^
	;;^DD(399,151,1,2,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399,151,1,2,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399,151,1,3,0)
	;;=^^TRIGGER^399^209
	;;^DD(399,151,1,3,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y X ^DD(399,151,1,3,1.1) X ^DD(399,151,1,3,1.4)
	;;^DD(399,151,1,3,1.1)
	;;=S X=DIV S X=+^DGCR(399,DA,"U"),X=$E(X,2,3)+$S($E(X,4,5)<10:0,1:1)
	;;^DD(399,151,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U1")):^("U1"),1:""),DIV=X S $P(^("U1"),U,9)=DIV,DIH=399,DIG=209 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,151,1,3,2)
	;;=Q
	;;^DD(399,151,1,3,"%D",0)
	;;=^^1^1^2931018^
	;;^DD(399,151,1,3,"%D",1,0)
	;;=Set Fiscal Year 1 to the FY the bill is within.  (Bills can not span FY.)

IBINI0AH
IBINI0AH	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,151,1,3,"CREATE VALUE")
	;;=S X=+^DGCR(399,DA,"U"),X=$E(X,2,3)+$S($E(X,4,5)<10:0,1:1)
	;;^DD(399,151,1,3,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,151,1,3,"DT")
	;;=2931018
	;;^DD(399,151,1,3,"FIELD")
	;;=FISCAL YEAR 1
	;;^DD(399,151,3)
	;;=Enter the beginning service date of the period included on this bill.
	;;^DD(399,151,21,0)
	;;=^^3^3^2940208^^^^
	;;^DD(399,151,21,1,0)
	;;=This is the beginning service date of the period covered by this bill.
	;;^DD(399,151,21,2,0)
	;;=A bills date range may not cross either the fiscal or calendar years.
	;;^DD(399,151,21,3,0)
	;;=The date range for inpatient interim bills should not be overlapped.
	;;^DD(399,151,"DT")
	;;=2931018
	;;^DD(399,152,0)
	;;=STATEMENT COVERS TO^RDX^^U;2^S %DT="ETP" D ^%DT S X=Y K:Y<1 X I $D(X) D DDAT1^IBCU4 K IB00
	;;^DD(399,152,1,0)
	;;=^.1
	;;^DD(399,152,1,1,0)
	;;=^^TRIGGER^399^165
	;;^DD(399,152,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $P(^DGCR(399,DA,0),U,5)<3 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,15),X=X S DIU=X K Y S X=DIV S X=$$LOS1^IBCU64(DA) X ^DD(399,152,1,1,1.4)
	;;^DD(399,152,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,15)=DIV,DIH=399,DIG=165 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,152,1,1,2)
	;;=Q
	;;^DD(399,152,1,1,"%D",0)
	;;=^^1^1^2931018^
	;;^DD(399,152,1,1,"%D",1,0)
	;;=Sets Length of Stay based on PTF record and date range of bill.  (Inpatient only.)
	;;^DD(399,152,1,1,"CREATE CONDITION")
	;;=I $P(^DGCR(399,DA,0),U,5)<3
	;;^DD(399,152,1,1,"CREATE VALUE")
	;;=S X=$$LOS1^IBCU64(DA)
	;;^DD(399,152,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,152,1,1,"DT")
	;;=2931018
	;;^DD(399,152,1,1,"FIELD")
	;;=LENGTH OF STAY
	;;^DD(399,152,1,2,0)
	;;=399^AREV3^MUMPS
	;;^DD(399,152,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399,152,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399,152,1,2,"%D",0)
	;;=^^2^2^2940214^
	;;^DD(399,152,1,2,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399,152,1,2,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399,152,3)
	;;=Enter the ending service date of period covered by this bill.
	;;^DD(399,152,21,0)
	;;=^^3^3^2940208^^^
	;;^DD(399,152,21,1,0)
	;;=This is the ending service date of the period covered by this bill.
	;;^DD(399,152,21,2,0)
	;;=A bills date range may not cross either the fiscal or calendar years.
	;;^DD(399,152,21,3,0)
	;;=The date range for inpatient interim bills should not be overlapped.
	;;^DD(399,152,"DT")
	;;=2931018
	;;^DD(399,153,0)
	;;=POWER OF ATTORNEY COMPLETED?^RFOX^^U;3^I $D(X) D YN^IBCU
	;;^DD(399,153,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,153,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,153,3)
	;;=Enter 'Yes' or '1' if Power of Attorney has been completed, 'No' or '0' if Power of Attorney has not been completed.
	;;^DD(399,153,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,153,21,1,0)
	;;=This identifies whether or not the power of attorney forms (if necessary)
	;;^DD(399,153,21,2,0)
	;;=have been signed.
	;;^DD(399,153,"DT")
	;;=2880607
	;;^DD(399,154,0)
	;;=WHOSE EMPLOYMENT INFO.?^RS^p:PATIENT;s:SPOUSE;^U;4^Q
	;;^DD(399,154,3)
	;;=Enter the code which indicates whether the employment information given applies to the patient or to the patient's spouse.
	;;^DD(399,154,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,154,21,1,0)
	;;=This indicates whether the employment information give applies to the
	;;^DD(399,154,21,2,0)
	;;=patient or to the patient's spouse.
	;;^DD(399,154,"DT")
	;;=2880523
	;;^DD(399,155,0)
	;;=IS THIS A SENSITIVE RECORD?^RFOX^^U;5^I $D(X) D YN^IBCU

IBINI0AI
IBINI0AI	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,155,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,155,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,155,3)
	;;=Enter 'Yes' or '1' if this record contains sensitive information pertaining  to, but not limited to, drugs, alcohol, and/or sickle cell anemia, 'No' or '0'  if it does not.
	;;^DD(399,155,21,0)
	;;=^^3^3^2880921^^
	;;^DD(399,155,21,1,0)
	;;=This indicates whether or not this record contains information pertaining
	;;^DD(399,155,21,2,0)
	;;=to, but not limited to, drugs, alcohol, or sickle cell anemia, and if so,
	;;^DD(399,155,21,3,0)
	;;=allows the user to identify this record as "sensitive".
	;;^DD(399,155,"DT")
	;;=2880607
	;;^DD(399,156,0)
	;;=ASSIGNMENT OF BENEFITS^RFOX^^U;6^I $D(X) D YN^IBCU I $D(X) X:X=0 ^DD(399,156,9.3) K IBRATY
	;;^DD(399,156,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,156,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,156,3)
	;;=Enter the code which indicates whether or not a third party is authorized to pay the provider for services covered by this bill.
	;;^DD(399,156,5,1,0)
	;;=399^.07^1
	;;^DD(399,156,9.3)
	;;=S IBRATY=$P(^DGCR(399,DA,0),"^",7) I $D(^DGCR(399.3,IBRATY,0)),$P(^(0),"^",5)=1 K X W !?4,"Answer must be YES for this 'Third Party' billing episode!",*7
	;;^DD(399,156,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,156,21,1,0)
	;;=This indicates whether or not a third party is authorized to pay the 
	;;^DD(399,156,21,2,0)
	;;=provider for services covered by this bill.
	;;^DD(399,156,"DT")
	;;=2881025
	;;^DD(399,157,0)
	;;=R.O.I. FORM(S) COMPLETED?^FOX^^U;7^I $D(X) D YN^IBCU
	;;^DD(399,157,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,157,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399,157,3)
	;;=Enter 'Yes' or '1' if Release Of Information form(s) are completed, 'No' or '0' if Release Of Information form(s) are not completed.
	;;^DD(399,157,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,157,21,1,0)
	;;=This allows the user to indicate if the Release of Information forms (if
	;;^DD(399,157,21,2,0)
	;;=necessary) have been signed.
	;;^DD(399,157,"DT")
	;;=2880607
	;;^DD(399,158,0)
	;;=TYPE OF ADMISSION^S^1:EMERGENCY;2:URGENT;3:ELECTIVE;^U;8^Q
	;;^DD(399,158,3)
	;;=Enter a code indicating the priority of this admission.
	;;^DD(399,158,5,1,0)
	;;=399^.08^2
	;;^DD(399,158,21,0)
	;;=^^1^1^2880901^
	;;^DD(399,158,21,1,0)
	;;=This indicates the priority of this admission.
	;;^DD(399,158,"DT")
	;;=2880523
	;;^DD(399,159,0)
	;;~SOURCE OF ADMISSION^S^1:PHYSICIAN REFERRAL;2:CLINIC REFERRAL;3:HMO REFERRAL;4:TRANSFER FROM HOSPITAL;5:TRANSFER FROM SKILLED NURSING FAC.;6:TRANSFER FROM OTHER 
	;;=HEALTH CARE FAC.;7:EMERGENCY ROOM;8:COURT/LAW ENFORCEMENT;9:INFO NOT AVAILABLE;^U;9^Q
	;;^DD(399,159,3)
	;;=Enter the code which indicates the source of this admission.
	;;^DD(399,159,5,1,0)
	;;=399^.08^1
	;;^DD(399,159,21,0)
	;;=^^1^1^2890405^^^
	;;^DD(399,159,21,1,0)
	;;=This indicates the source of this admission.
	;;^DD(399,159,"DT")
	;;=2890403
	;;^DD(399,160,0)
	;;=ACCIDENT HOUR^F^^U;10^K:$L(X)>3!($L(X)<1) X
	;;^DD(399,160,3)
	;;=Enter the time at which an accident took place if this bill is related to an accident.
	;;^DD(399,160,5,1,0)
	;;=399^.08^3
	;;^DD(399,160,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,160,21,1,0)
	;;=This indicates the time at which an accident occurred if this episode
	;;^DD(399,160,21,2,0)
	;;=of care is related to an accident.
	;;^DD(399,160,"DT")
	;;=2880523
	;;^DD(399,161,0)
	;;=DISCHARGE BEDSECTION^*P399.1'^DGCR(399.1,^U;11^S DIC("S")="I $P(^DGCR(399.1,+Y,0),""^"",5)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X

IBINI0AJ
IBINI0AJ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,161,1,0)
	;;=^.1
	;;^DD(399,161,1,1,0)
	;;=^^TRIGGER^399^162
	;;^DD(399,161,1,1,1)
	;;=X ^DD(399,161,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV D DIS^IBCU S X=X X ^DD(399,161,1,1,1.4)
	;;^DD(399,161,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U")):^("U"),1:"") S X=$S('$D(^DGCR(399.1,+$P(Y(1),U,12),0)):"",1:$P(^(0),U,1))=""
	;;^DD(399,161,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U")):^("U"),1:""),DIV=X S $P(^("U"),U,12)=DIV,DIH=399,DIG=162 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,161,1,1,2)
	;;=Q
	;;^DD(399,161,1,1,"%D",0)
	;;=^^2^2^2920212^
	;;^DD(399,161,1,1,"%D",1,0)
	;;=Sets the Discharge Status field to the correct status based upon the
	;;^DD(399,161,1,1,"%D",2,0)
	;;=Disposition Type field in the PTF Record.
	;;^DD(399,161,1,1,"CREATE CONDITION")
	;;=#162=""
	;;^DD(399,161,1,1,"CREATE VALUE")
	;;=D DIS^IBCU S X=X
	;;^DD(399,161,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,161,1,1,"DT")
	;;=2920212
	;;^DD(399,161,1,1,"FIELD")
	;;=#162
	;;^DD(399,161,3)
	;;=Enter the bedsection from which this patient was discharged.
	;;^DD(399,161,12)
	;;=Valid MCCR Bedsections only!
	;;^DD(399,161,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.1,+Y,0),""^"",5)=1"
	;;^DD(399,161,21,0)
	;;=^^1^1^2880901^
	;;^DD(399,161,21,1,0)
	;;=This is the bedsection from which this patient was discharged.
	;;^DD(399,161,"DT")
	;;=2920212
	;;^DD(399,162,0)
	;;=DISCHARGE STATUS^*P399.1'^DGCR(399.1,^U;12^S DIC("S")="I $P(^DGCR(399.1,+Y,0),""^"",6)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399,162,3)
	;;=Enter the code which indicates patient status as of statement covers through date.
	;;^DD(399,162,5,1,0)
	;;=399^161^1
	;;^DD(399,162,5,2,0)
	;;=399^.08^4
	;;^DD(399,162,12)
	;;=Valid MCCR Discharge Statuses only!
	;;^DD(399,162,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.1,+Y,0),""^"",6)=1"
	;;^DD(399,162,21,0)
	;;=^^1^1^2880901^
	;;^DD(399,162,21,1,0)
	;;=This is the patient status as of the statement covers through date.
	;;^DD(399,162,"DT")
	;;=2880831
	;;^DD(399,163,0)
	;;=TREATMENT AUTHORIZATION CODE^F^^U;13^K:$L(X)>18!($L(X)<1) X
	;;^DD(399,163,3)
	;;=Answer must be 1-18 characters in length.
	;;^DD(399,163,21,0)
	;;=^^4^4^2931220^^^^
	;;^DD(399,163,21,1,0)
	;;=This indicates that the treatment covered by this bill has been authorized
	;;^DD(399,163,21,2,0)
	;;=by the payer.
	;;^DD(399,163,21,3,0)
	;;= 
	;;^DD(399,163,21,4,0)
	;;=On the HCFA 1500 this is block 23, PRIOR AUTHORIZATION NUMBER.
	;;^DD(399,163,"DT")
	;;=2931220
	;;^DD(399,164,0)
	;;=BC/BS PROVIDER #^RFX^^U;14^K:$L(X)>13!($L(X)<3)!'(X?.ANP) X
	;;^DD(399,164,3)
	;;=Enter the Blue Cross/Shield provider number for this particular billing episode.
	;;^DD(399,164,5,1,0)
	;;=399^.01^5
	;;^DD(399,164,21,0)
	;;=^^1^1^2880901^
	;;^DD(399,164,21,1,0)
	;;=This is the Blue Cross/Blue Shield Provider Number for this billing episode.
	;;^DD(399,164,"DT")
	;;=2910819
	;;^DD(399,165,0)
	;;=LENGTH OF STAY^F^^U;15^K:$L(X)>6!($L(X)<1)!'(X?.N) X
	;;^DD(399,165,3)
	;;=Enter the length of stay for this inpatient episode excluding pass, AA and UA days.
	;;^DD(399,165,5,1,0)
	;;=399^.08^6
	;;^DD(399,165,5,2,0)
	;;=399^151^1
	;;^DD(399,165,5,3,0)
	;;=399^152^1
	;;^DD(399,165,21,0)
	;;=^^2^2^2931018^^^^
	;;^DD(399,165,21,1,0)
	;;=This defines the length of stay in days for this inpatient episode excluding
	;;^DD(399,165,21,2,0)
	;;=pass, AA, and UA days.
	;;^DD(399,165,23,0)
	;;=^^12^12^2931018^^^^
	;;^DD(399,165,23,1,0)
	;;=If no PTF defined then uses the Statement From and To dates for LOS.

IBINI0AK
IBINI0AK	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,165,23,2,0)
	;;=Excludes pass, AA, UA days but includes days in non-billable bedsections.
	;;^DD(399,165,23,3,0)
	;;=Notice that the number of units of service under revenue code only
	;;^DD(399,165,23,4,0)
	;;=includes billable bedsections so the number of units may not add
	;;^DD(399,165,23,5,0)
	;;=up to the length of stay if the patient was in a non-billable bedsection
	;;^DD(399,165,23,6,0)
	;;=for awhile.
	;;^DD(399,165,23,7,0)
	;;=LOS of a stay where admit day=discharge day is 1.  LOS of a stay where
	;;^DD(399,165,23,8,0)
	;;=admit date+1=discharge date also has an LOS of 1.
	;;^DD(399,165,23,9,0)
	;;=The discharge date is not charged.  Therefore, on continuous first
	;;^DD(399,165,23,10,0)
	;;=and interum bills the LOS is the date range inclusive of the last day
	;;^DD(399,165,23,11,0)
	;;=on the bill, all other bills exclude the last day (with exception of
	;;^DD(399,165,23,12,0)
	;;=admit=discharge day).
	;;^DD(399,165,"DT")
	;;=2880602
	;;^DD(399,166,0)
	;;=UNABLE TO WORK FROM^D^^U;16^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,166,3)
	;;=Enter the beginning date the patient became unable to work due to current condition.
	;;^DD(399,166,21,0)
	;;=^^3^3^2920427^^^^
	;;^DD(399,166,21,1,0)
	;;=Enter the beginning date for the period of time that the patient could not
	;;^DD(399,166,21,2,0)
	;;=work due to the condition for which this claim is being submitted.  Printed
	;;^DD(399,166,21,3,0)
	;;=on the HCFA 1500.
	;;^DD(399,166,"DT")
	;;=2920427
	;;^DD(399,167,0)
	;;=UNABLE TO WORK TO^D^^U;17^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399,167,3)
	;;=Enter the ending date of the time that the patient was unable to work due to current condition.
	;;^DD(399,167,21,0)
	;;=^^3^3^2920427^^
	;;^DD(399,167,21,1,0)
	;;=This is the ending date of the period of time during which the patient
	;;^DD(399,167,21,2,0)
	;;=was unable to work due to the condition for which this claim is being
	;;^DD(399,167,21,3,0)
	;;=submitted.  Used on the HCFA 1500.
	;;^DD(399,167,"DT")
	;;=2920427
	;;^DD(399,168,0)
	;;=*PLACE OF SERVICE^P353.1'^IBE(353.1,^U;18^Q
	;;^DD(399,168,3)
	;;=Enter the code corresponding to the Place of Service of patient care.
	;;^DD(399,168,21,0)
	;;=^^3^3^2930611^^^^
	;;^DD(399,168,21,1,0)
	;;=This indicates the Place of Service, used on the HCFA 1500.
	;;^DD(399,168,21,2,0)
	;;=Not used after IB v1.5, replaced by PLACE OF SERVICE (304,8) associated
	;;^DD(399,168,21,3,0)
	;;=with a specific procedure.  Marked for deletion 6/11/93.
	;;^DD(399,168,"DT")
	;;=2930611
	;;^DD(399,169,0)
	;;=*TYPE OF SERVICE^P353.2'^IBE(353.2,^U;19^Q
	;;^DD(399,169,3)
	;;=Enter the appropriate Type of Service code for this visit.
	;;^DD(399,169,21,0)
	;;=^^3^3^2930611^^
	;;^DD(399,169,21,1,0)
	;;=Code indicating the Type of Service preformed.  Used on the HCFA 1500.
	;;^DD(399,169,21,2,0)
	;;=Not used after IB v1.5, replaced by TYPE OF SERVICE (304,9) associated
	;;^DD(399,169,21,3,0)
	;;=with a specific procedure.  Marked for deletion 6/11/93.
	;;^DD(399,169,"DT")
	;;=2930611
	;;^DD(399,201,0)
	;;=TOTAL CHARGES^NJ8,2XI^^U1;1^Q
	;;^DD(399,201,1,0)
	;;=^.1
	;;^DD(399,201,1,1,0)
	;;=^^TRIGGER^399^210
	;;^DD(399,201,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DIV X ^DD(399,201,1,1,1.4)
	;;^DD(399,201,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U1")):^("U1"),1:""),DIV=X S $P(^("U1"),U,10)=DIV,DIH=399,DIG=210 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,201,1,1,2)
	;;=Q
	;;^DD(399,201,1,1,"CREATE VALUE")
	;;=TOTAL CHARGES

IBINI0AL
IBINI0AL	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,201,1,1,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399,201,1,1,"FIELD")
	;;=#210
	;;^DD(399,201,3)
	;;=Enter the total amount of the revenue code charges for this bill in dollars.
	;;^DD(399,201,9)
	;;=^
	;;^DD(399,201,21,0)
	;;=^^1^1^2880901^
	;;^DD(399,201,21,1,0)
	;;=This is the total amount of the revenue code charges for this bill.
	;;^DD(399,201,"DT")
	;;=2880831
	;;^DD(399,202,0)
	;;=OFFSET AMOUNT^NJ8,2^^U1;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0) X
	;;^DD(399,202,1,0)
	;;=^.1
	;;^DD(399,202,1,1,0)
	;;=^^TRIGGER^399^203
	;;^DD(399,202,1,1,1)
	;;=Q
	;;^DD(399,202,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" X ^DD(399,202,1,1,2.4)
	;;^DD(399,202,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U1")):^("U1"),1:""),DIV=X S $P(^("U1"),U,3)=DIV,DIH=399,DIG=203 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,202,1,1,"CREATE VALUE")
	;;=NO EFFECT
	;;^DD(399,202,1,1,"DELETE CONDITION")
	;;=OFFSET AMOUNT=""
	;;^DD(399,202,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399,202,1,1,"FIELD")
	;;=#203
	;;^DD(399,202,3)
	;;=Enter the dollar amount between 0 and 99999.99 that is to be subtracted from the total charges on this bill.  Offset includes, but is not limited to, co-payments and deductibles.
	;;^DD(399,202,21,0)
	;;=^^3^3^2880901^
	;;^DD(399,202,21,1,0)
	;;=This is the dollar amount which is to be subtracted from the total charges
	;;^DD(399,202,21,2,0)
	;;=on this bill. Offset includes, but is not limited to, co-payments, credits,
	;;^DD(399,202,21,3,0)
	;;=and deductibles.
	;;^DD(399,202,"DT")
	;;=2880525
	;;^DD(399,203,0)
	;;=OFFSET DESCRIPTION^FX^^U1;3^K:$L(X)>24!($L(X)<3) X
	;;^DD(399,203,3)
	;;=Enter reason for Offset Amount.  Offset Description may include, but is not limited to, deductibles, copayments, credits, etc.
	;;^DD(399,203,5,1,0)
	;;=399^202^1
	;;^DD(399,203,21,0)
	;;=^^1^1^2940317^^^^
	;;^DD(399,203,21,1,0)
	;;=This defines the reason for offset amount.  Maximum length is 24 characters.
	;;^DD(399,203,"DT")
	;;=2940317
	;;^DD(399,204,0)
	;;=FORM LOCATOR 2^F^^U1;4^K:$L(X)>30!($L(X)<2) X
	;;^DD(399,204,3)
	;;=Enter the information (2-30 characters) which is to appear in form locator 2 on the UB-82 form.
	;;^DD(399,204,21,0)
	;;=^^2^2^2940120^^
	;;^DD(399,204,21,1,0)
	;;=This allows the user to enter information which will appear in form locator
	;;^DD(399,204,21,2,0)
	;;=2 on the UB-82 form.
	;;^DD(399,204,"DT")
	;;=2880523
	;;^DD(399,205,0)
	;;=FORM LOCATOR 9^F^^U1;5^K:$L(X)>7!($L(X)<2) X
	;;^DD(399,205,3)
	;;=Enter the information (2-7 characters) which will appear in form locator 9 on the UB-82 form.
	;;^DD(399,205,21,0)
	;;=^^2^2^2940214^^^^
	;;^DD(399,205,21,1,0)
	;;=This allows the user to enter information which will appear in form locator
	;;^DD(399,205,21,2,0)
	;;=9 on the UB-82 form.       
	;;^DD(399,205,23,0)
	;;=^^2^2^2940214^^^
	;;^DD(399,205,23,1,0)
	;;=Was temporarily used to hold Admitting DX for the UB-92 (FL 76), but was 
	;;^DD(399,205,23,2,0)
	;;=replaced by FL 215.
	;;^DD(399,205,"DT")
	;;=2880523
	;;^DD(399,206,0)
	;;=FORM LOCATOR 27^F^^U1;6^K:$L(X)>8!($L(X)<2) X
	;;^DD(399,206,3)
	;;=Enter the information (2-8 characters) which is to appear in form locator 27 on the UB-82 form.
	;;^DD(399,206,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,206,21,1,0)
	;;=This allows the user to enter information will will appear in form locator
	;;^DD(399,206,21,2,0)
	;;=27 on the UB-82 form.
	;;^DD(399,206,"DT")
	;;=2880523

IBINI0AM
IBINI0AM	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,207,0)
	;;=FORM LOCATOR 45^F^^U1;7^K:$L(X)>17!($L(X)<2) X
	;;^DD(399,207,3)
	;;=Enter the information (2-17 characters) which will appear in form locator 45 on the UB-82 form.
	;;^DD(399,207,21,0)
	;;=^^2^2^2940120^^
	;;^DD(399,207,21,1,0)
	;;=This allows the user to enter information which will appear in form locator
	;;^DD(399,207,21,2,0)
	;;=45 on the UB-82 form.
	;;^DD(399,207,"DT")
	;;=2880523
	;;^DD(399,208,0)
	;;=BILL COMMENT^F^^U1;8^K:$L(X)>35!($L(X)<2) X
	;;^DD(399,208,3)
	;;=Enter a comment associated with this bill, if desired, which you want to print on the UB claim forms [2-35 CHARACTERS].
	;;^DD(399,208,21,0)
	;;=^^1^1^2940120^^^
	;;^DD(399,208,21,1,0)
	;;=This allows the user to enter an optional comment associated with this bill.
	;;^DD(399,208,"DT")
	;;=2880523
	;;^DD(399,209,0)
	;;=FISCAL YEAR 1^RNJ2,0X^^U1;9^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(399,209,3)
	;;=Enter the 2 digit fiscal year associated with this bill.
	;;^DD(399,209,5,1,0)
	;;=399^151^3
	;;^DD(399,209,21,0)
	;;=^^1^1^2931018^^
	;;^DD(399,209,21,1,0)
	;;=This defines the first fiscal year with which this bill is associated.
	;;^DD(399,209,"DT")
	;;=2880711
	;;^DD(399,210,0)
	;;=FY 1 CHARGES^RNJ10,2^^U1;10^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(399,210,1,0)
	;;=^.1
	;;^DD(399,210,1,1,0)
	;;=^^TRIGGER^399^212
	;;^DD(399,210,1,1,1)
	;;=X ^DD(399,210,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y X ^DD(399,210,1,1,1.1) X ^DD(399,210,1,1,1.4)
	;;^DD(399,210,1,1,1.1)
	;;=S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,1),Y(2)=X S X=DIV,Y=X,X=Y(2),X=X-Y
	;;^DD(399,210,1,1,1.3)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,11)]""
	;;^DD(399,210,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U1")):^("U1"),1:""),DIV=X S $P(^("U1"),U,12)=DIV,DIH=399,DIG=212 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,210,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U1")):^("U1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,210,1,1,2.4)
	;;^DD(399,210,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"U1")):^("U1"),1:""),DIV=X S $P(^("U1"),U,12)=DIV,DIH=399,DIG=212 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399,210,1,1,"CREATE CONDITION")
	;;=(#211)]""
	;;^DD(399,210,1,1,"CREATE VALUE")
	;;=(#201)-(#210)
	;;^DD(399,210,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399,210,1,1,"FIELD")
	;;=#212
	;;^DD(399,210,3)
	;;=Enter the charges incurred during the first fiscal year associated with this bill.
	;;^DD(399,210,5,1,0)
	;;=399^201^1
	;;^DD(399,210,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,210,21,1,0)
	;;=These are the charges incurred during the first fiscal year associated
	;;^DD(399,210,21,2,0)
	;;=with this bill.
	;;^DD(399,210,"DT")
	;;=2880901
	;;^DD(399,211,0)
	;;=FISCAL YEAR 2^NJ2,0^^U1;11^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(399,211,3)
	;;=Enter the 2 digit second fiscal year associated with this bill.
	;;^DD(399,211,21,0)
	;;=^^1^1^2931018^^
	;;^DD(399,211,21,1,0)
	;;=This is the second fiscal year with which this bill is associated.
	;;^DD(399,211,23,0)
	;;=^^2^2^2931018^
	;;^DD(399,211,23,1,0)
	;;=Beginning with 1.5 bills can no longer span fical years, so this is
	;;^DD(399,211,23,2,0)
	;;=no longer needed.
	;;^DD(399,211,"DT")
	;;=2880708
	;;^DD(399,212,0)
	;;=FY 2 CHARGES^NJ10,2^^U1;12^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999999)!(X<0) X
	;;^DD(399,212,3)
	;;=Enter the charges incurred during the second fiscal year associated with this bill.

IBINI0AN
IBINI0AN	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,212,5,1,0)
	;;=399^210^1
	;;^DD(399,212,9)
	;;=^
	;;^DD(399,212,21,0)
	;;=^^2^2^2880901^
	;;^DD(399,212,21,1,0)
	;;=These are the charges incurred during the second fiscal year associated
	;;^DD(399,212,21,2,0)
	;;=with this bill.
	;;^DD(399,212,"DT")
	;;=2880708
	;;^DD(399,213,0)
	;;=FORM LOCATOR 92^F^^U1;13^K:$L(X)>32!($L(X)<3) X
	;;^DD(399,213,3)
	;;=Answer must be 3-32 characters in length.
	;;^DD(399,213,21,0)
	;;=^^4^4^2940214^^^^
	;;^DD(399,213,21,1,0)
	;;=This is the Attending Physician ID (UPIN) and is printed on the UB-82 in
	;;^DD(399,213,21,2,0)
	;;=form locator 92 and form locator 82 on the UB-92.  This field will be
	;;^DD(399,213,21,3,0)
	;;=loaded with the ATTENDING PHYSICIAN ID code required by the primary
	;;^DD(399,213,21,4,0)
	;;=insurer, if that insurer has a code defined.
	;;^DD(399,213,23,0)
	;;=^^5^5^2940214^^^^
	;;^DD(399,213,23,1,0)
	;;=This field may be null or a value the billing clerk inserted while editing
	;;^DD(399,213,23,2,0)
	;;=on screen 8 or a value that the primary insurer requires to print in form
	;;^DD(399,213,23,3,0)
	;;=locator 92 of the UB-82 or FL 82 of the UB-92.  If the field is null
	;;^DD(399,213,23,4,0)
	;;=then the print routines print the string 'Dept. of Veterans Affairs' in
	;;^DD(399,213,23,5,0)
	;;=form locator 82/92.
	;;^DD(399,213,"DT")
	;;=2931216
	;;^DD(399,214,0)
	;;=FORM LOCATOR 93^F^^U1;14^K:$L(X)>32!($L(X)<3) X
	;;^DD(399,214,3)
	;;=Answer must be 3-32 characters in length.
	;;^DD(399,214,21,0)
	;;=^^4^4^2940120^^^^
	;;^DD(399,214,21,1,0)
	;;=Enter the 'Other Physician ID'.  The name and/or number of the licensed
	;;^DD(399,214,21,2,0)
	;;=physician other than the attending physician or what the primary insurer
	;;^DD(399,214,21,3,0)
	;;=requires in this field on the form.  Will print in form locator 93 on the
	;;^DD(399,214,21,4,0)
	;;=UB-82 and form locator 83 on the UB-92.
	;;^DD(399,214,"DT")
	;;=2931216
	;;^DD(399,215,0)
	;;=ADMITTING DIAGNOSIS^P80'^ICD9(^U2;1^Q
	;;^DD(399,215,3)
	;;=Enter the code for the admitting diagnosis.
	;;^DD(399,215,21,0)
	;;=^^4^4^2931220^^^^
	;;^DD(399,215,21,1,0)
	;;=The ICD-9 diagnosis code provided at the time of admission as stated
	;;^DD(399,215,21,2,0)
	;;=by the physician.
	;;^DD(399,215,21,3,0)
	;;= 
	;;^DD(399,215,21,4,0)
	;;=The admitting diagnosis code will be printed in Form Locator 76 on the UB-92.
	;;^DD(399,215,"DT")
	;;=2931220
	;;^DD(399,216,0)
	;;=COVERED DAYS^NJ3,0^^U2;2^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(399,216,3)
	;;=Type a Number between 0 and 999, 0 Decimal Digits
	;;^DD(399,216,21,0)
	;;=^^4^4^2940201^
	;;^DD(399,216,21,1,0)
	;;=The number of days covered by the primary payer, as qualified by the payer
	;;^DD(399,216,21,2,0)
	;;=organization.
	;;^DD(399,216,21,3,0)
	;;= 
	;;^DD(399,216,21,4,0)
	;;=Form Locator 7 on the UB-92.
	;;^DD(399,216,"DT")
	;;=2940201
	;;^DD(399,217,0)
	;;=NON-COVERED DAYS^NJ4,0^^U2;3^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X
	;;^DD(399,217,3)
	;;=Type a Number between 0 and 9999, 0 Decimal Digits
	;;^DD(399,217,21,0)
	;;=^^1^1^2940201^
	;;^DD(399,217,21,1,0)
	;;=Days of care not covered by the primary payer.  Form Locator 8 on the UB-92.
	;;^DD(399,217,"DT")
	;;=2940201
	;;^DD(399,301,0)
	;;=PRIMARY NODE^RF^^I1;E1,240^K:$L(X)>240!($L(X)<1) X
	;;^DD(399,301,3)
	;;=This is the information pertaining to the primary insurance carrier associated with this bill.
	;;^DD(399,301,21,0)
	;;=^^2^2^2930622^^
	;;^DD(399,301,21,1,0)
	;;=This is the information pertaining to the primary insurance carrier which
	;;^DD(399,301,21,2,0)
	;;=is associated with this bill.

IBINI0AO
IBINI0AO	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,301,23,0)
	;;=^^4^4^2930622^
	;;^DD(399,301,23,1,0)
	;;=Set by trigger on Primary Insurance Carrier (399,101) and at UPDT^IBSCSE.
	;;^DD(399,301,23,2,0)
	;;=This node is a duplicate of the insurance's node in the patient file.
	;;^DD(399,301,23,3,0)
	;;=^DGCR(399,IBIFN,"I1")=^DPT(DFN,.312,X)
	;;^DD(399,301,23,4,0)
	;;=      where +^DPT(DFN,.312,X)=(399,101)  primary insurer
	;;^DD(399,301,"DT")
	;;=2900129
	;;^DD(399,302,0)
	;;=SECONDARY NODE^RF^^I2;E1,240^K:$L(X)>240!($L(X)<1) X
	;;^DD(399,302,3)
	;;=This is the information pertaining to the secondary insurance carrier which is associated with this bill.
	;;^DD(399,302,21,0)
	;;=^^2^2^2930622^^
	;;^DD(399,302,21,1,0)
	;;=This is the information pertaining to the secondary insurance carrier which 
	;;^DD(399,302,21,2,0)
	;;=is associated with this bill.
	;;^DD(399,302,23,0)
	;;=^^4^4^2930622^
	;;^DD(399,302,23,1,0)
	;;=Set by trigger on Secondary Insurance Carrier (399,102) and by UPDT^IBCSCE.
	;;^DD(399,302,23,2,0)
	;;=This node is a duplicate of the insurance's node in the patient file.
	;;^DD(399,302,23,3,0)
	;;=^DGCR(399,IBIFN,"I2")=^DPT(DFN,.312,X)
	;;^DD(399,302,23,4,0)
	;;=      where +^DPT(DFN,.312,X)=(399,102)  secondary insurer for bill
	;;^DD(399,302,"DT")
	;;=2900129
	;;^DD(399,303,0)
	;;=TERTIARY NODE^RF^^I3;E1,240^K:$L(X)>240!($L(X)<1) X
	;;^DD(399,303,3)
	;;=This is the information pertaining to the tertiary insurance carrier associated with this bill.
	;;^DD(399,303,21,0)
	;;=^^1^1^2940214^^
	;;^DD(399,303,21,1,0)
	;;=This is the information pertaining to the tertiary insurance carrier associated with this bill.
	;;^DD(399,303,"DT")
	;;=2900129
	;;^DD(399,304,0)
	;;=PROCEDURES^399.0304IAV^^CP;0
	;;^DD(399,304,21,0)
	;;=^^1^1^2940214^^^^
	;;^DD(399,304,21,1,0)
	;;=These are ICD or CPT procedures that are associated with this bill.
	;;^DD(399,304,23,0)
	;;=^^1^1^2940120^^^^
	;;^DD(399,304,23,1,0)
	;;= 
	;;^DD(399,304,"DT")
	;;=2911101
	;;^DD(399,400,0)
	;;=BLOCK 31^F^^UF2;1^K:$L(X)>63!($L(X)<3) X
	;;^DD(399,400,3)
	;;=Answer must be 3-63 characters in length.
	;;^DD(399,400,21,0)
	;;=^^4^4^2940310^^
	;;^DD(399,400,21,1,0)
	;;=Entry will be printed in block 31 of the HCFA 1500.  This block is 3 lines
	;;^DD(399,400,21,2,0)
	;;=of 21 characters each.
	;;^DD(399,400,21,3,0)
	;;= 
	;;^DD(399,400,21,4,0)
	;;=Set up for the physicians name and number.
	;;^DD(399,400,"DT")
	;;=2940310
	;;^DD(399,450,0)
	;;=FORM LOCATOR 2^F^^UF3;1^K:$L(X)>59!($L(X)<3) X
	;;^DD(399,450,3)
	;;=Answer must be 3-59 characters in length.
	;;^DD(399,450,21,0)
	;;=^^3^3^2931216^^^^
	;;^DD(399,450,21,1,0)
	;;=FORM LOCATOR 2 ON THE UB-92.
	;;^DD(399,450,21,2,0)
	;;=Printed in Form Locator 2 on the UB-92.  If more than 30 characters are
	;;^DD(399,450,21,3,0)
	;;=entered this will be printed on two lines.
	;;^DD(399,450,23,0)
	;;=^^4^4^2931216^^^
	;;^DD(399,450,23,1,0)
	;;=Unlabled Form Locator 2 on the UB-92.  On the form the block is two lines
	;;^DD(399,450,23,2,0)
	;;=of 29 and 30 characters, with the upper line optional.  Therefore, if
	;;^DD(399,450,23,3,0)
	;;=string is longer than 30 characters it must be split and printed on both
	;;^DD(399,450,23,4,0)
	;;=lines.
	;;^DD(399,450,"DT")
	;;=2931216
	;;^DD(399,451,0)
	;;=FORM LOCATOR 11^F^^UF3;2^K:$L(X)>25!($L(X)<3) X
	;;^DD(399,451,3)
	;;=Answer must be 3-25 characters in length.
	;;^DD(399,451,21,0)
	;;=^^2^2^2931216^^^^
	;;^DD(399,451,21,1,0)
	;;=Printed in Form Locator 11 on the UB-92.  If more than 13 characters are
	;;^DD(399,451,21,2,0)
	;;=entered this will be printed on two lines.

IBINI0AP
IBINI0AP	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,451,23,0)
	;;=^^4^4^2931216^^^^
	;;^DD(399,451,23,1,0)
	;;=Unlabled Form Locator 11 on the UB-92.  On the form the block is two lines
	;;^DD(399,451,23,2,0)
	;;=of 12 and 13 characters, with the upper line optional.  Therefore, if
	;;^DD(399,451,23,3,0)
	;;=string is longer than 13 characters it must be split and printed on both
	;;^DD(399,451,23,4,0)
	;;=lines.
	;;^DD(399,451,"DT")
	;;=2931216
	;;^DD(399,452,0)
	;;=FORM LOCATOR 31^F^^UF3;3^K:$L(X)>11!($L(X)<3) X
	;;^DD(399,452,3)
	;;=Answer must be 3-11 characters in length.
	;;^DD(399,452,21,0)
	;;=^^2^2^2931216^^^
	;;^DD(399,452,21,1,0)
	;;=Printed in Form Locator 31 on the UB-92.  If more than 6 characters are
	;;^DD(399,452,21,2,0)
	;;=entered this will be printed on two lines.
	;;^DD(399,452,23,0)
	;;=^^3^3^2931216^^^
	;;^DD(399,452,23,1,0)
	;;=Unlabled Form Locator 31 on the UB-92.  On the form the block is two lines
	;;^DD(399,452,23,2,0)
	;;=of 5 and 6 characters.  Therefore, if the string is longer than 6
	;;^DD(399,452,23,3,0)
	;;=characters it must be split and printed on both lines.
	;;^DD(399,452,"DT")
	;;=2931216
	;;^DD(399,453,0)
	;;=FORM LOCATOR 37A^F^^UF3;4^K:$L(X)>23!($L(X)<3) X
	;;^DD(399,453,3)
	;;=Answer must be 3-23 characters in length.
	;;^DD(399,453,21,0)
	;;=^^4^4^2931216^^
	;;^DD(399,453,21,1,0)
	;;=Unlabled Form Locator 37A on the UB-92.  This field is nationally reserved
	;;^DD(399,453,21,2,0)
	;;=on adjustment/replacement type bills for the Internal Control
	;;^DD(399,453,21,3,0)
	;;=Number (ICN)/Document Control Number (DCN) assigned to the original bill
	;;^DD(399,453,21,4,0)
	;;=by the primary payer (in 50A).
	;;^DD(399,453,"DT")
	;;=2931216
	;;^DD(399,454,0)
	;;=FORM LOCATOR 37B^F^^UF3;5^K:$L(X)>23!($L(X)<3) X
	;;^DD(399,454,3)
	;;=Answer must be 3-23 characters in length.
	;;^DD(399,454,21,0)
	;;=^^4^4^2931216^^
	;;^DD(399,454,21,1,0)
	;;=Unlabled Form Locator 37B on the UB-92.  This field is nationally reserved
	;;^DD(399,454,21,2,0)
	;;=on adjustment/replacement type bills for the Internal Control
	;;^DD(399,454,21,3,0)
	;;=Number (ICN)/Document Control Number (DCN) assigned to the original bill
	;;^DD(399,454,21,4,0)
	;;=by the secondary payer (in 50B).
	;;^DD(399,454,"DT")
	;;=2931216
	;;^DD(399,455,0)
	;;=FORM LOCATOR 37C^F^^UF3;6^K:$L(X)>23!($L(X)<3) X
	;;^DD(399,455,3)
	;;=Answer must be 3-23 characters in length.
	;;^DD(399,455,21,0)
	;;=^^4^4^2931216^
	;;^DD(399,455,21,1,0)
	;;=Unlabled Form Locator 37C on the UB-92.  This field is nationally reserved
	;;^DD(399,455,21,2,0)
	;;=on adjustment/replacement type bills for the Internal Control
	;;^DD(399,455,21,3,0)
	;;=Number (ICN)/Document Control Number (DCN) assigned to the original bill
	;;^DD(399,455,21,4,0)
	;;=by the tertiary payer (in 50C).
	;;^DD(399,455,"DT")
	;;=2931216
	;;^DD(399,456,0)
	;;=FORM LOCATOR 56^F^^UF3;7^K:$L(X)>69!($L(X)<3) X
	;;^DD(399,456,3)
	;;=Answer must be 3-69 characters in length.
	;;^DD(399,456,21,0)
	;;=^^2^2^2931216^^
	;;^DD(399,456,21,1,0)
	;;=Printed in Form Locator 56 on the UB-92.  If more than 14 characters are
	;;^DD(399,456,21,2,0)
	;;=entered this will be printed on multiple lines.
	;;^DD(399,456,23,0)
	;;=^^4^4^2931216^
	;;^DD(399,456,23,1,0)
	;;=Unlabled Form Locator 56 on the UB-92.  On the form the block is five lines
	;;^DD(399,456,23,2,0)
	;;=of 13 and 14 characters.  Therefore, if the string is longer than 14
	;;^DD(399,456,23,3,0)
	;;=characters it must be split and printed on multiple lines.  The top line of
	;;^DD(399,456,23,4,0)
	;;=13 characters will be used last.
	;;^DD(399,456,"DT")
	;;=2931216

IBINI0AQ
IBINI0AQ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399,457,0)
	;;=FORM LOCATOR 57^F^^UF31;1^K:$L(X)>27!($L(X)<3) X
	;;^DD(399,457,3)
	;;=Answer must be 3-27 characters in length.
	;;^DD(399,457,21,0)
	;;=^^1^1^2931216^
	;;^DD(399,457,21,1,0)
	;;=Unlabled Form Locator 57 on the UB-92.
	;;^DD(399,457,"DT")
	;;=2931216
	;;^DD(399,458,0)
	;;=FORM LOCATOR 78^F^^UF31;2^K:$L(X)>5!($L(X)<3) X
	;;^DD(399,458,3)
	;;=Answer must be 3-5 characters in length.
	;;^DD(399,458,21,0)
	;;=^^2^2^2931216^
	;;^DD(399,458,21,1,0)
	;;=Printed in Form Locator 78 on the UB-92.  If more than 3 characters are
	;;^DD(399,458,21,2,0)
	;;=entered this will be printed on two lines.
	;;^DD(399,458,23,0)
	;;=^^4^4^2931216^
	;;^DD(399,458,23,1,0)
	;;=Unlabled Form Locator 78 on the UB-92.  On the form the block is two lines
	;;^DD(399,458,23,2,0)
	;;=of 2 and 3 characters, with the upper line optional.  Therefore, if
	;;^DD(399,458,23,3,0)
	;;=string is longer than 3 characters it must be split and printed on both
	;;^DD(399,458,23,4,0)
	;;=lines.
	;;^DD(399,458,"DT")
	;;=2931216
	;;^DD(399.0304,0)
	;;=PROCEDURES SUB-FIELD^^13^14
	;;^DD(399.0304,0,"DIK")
	;;=IBXX
	;;^DD(399.0304,0,"DT")
	;;=2931130
	;;^DD(399.0304,0,"ID","WRITE")
	;;=N X S X=^(0) W "   ",$E($P($G(@(U_$P($P(X,U),";",2)_+X_",0)")),U,$S($P(X,U,1)["CPT":2,1:4)),1,30)
	;;^DD(399.0304,0,"IX","AREV7",399.0304,4)
	;;=
	;;^DD(399.0304,0,"IX","ASC",399.0304,4)
	;;=
	;;^DD(399.0304,0,"IX","B",399.0304,.01)
	;;=
	;;^DD(399.0304,0,"IX","D",399.0304,3)
	;;=
	;;^DD(399.0304,0,"NM","PROCEDURES")
	;;=
	;;^DD(399.0304,0,"UP")
	;;=399
	;;^DD(399.0304,.01,0)
	;;=PROCEDURES^MV^^0;1^Q
	;;^DD(399.0304,.01,1,0)
	;;=^.1
	;;^DD(399.0304,.01,1,1,0)
	;;=399.0304^B
	;;^DD(399.0304,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)=""
	;;^DD(399.0304,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"CP","B",$E(X,1,30),DA)
	;;^DD(399.0304,.01,1,1,3)
	;;=Required Index for Variable Pointer
	;;^DD(399.0304,.01,1,2,0)
	;;=399^ASD^MUMPS
	;;^DD(399.0304,.01,1,2,1)
	;;=I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) S ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)=""
	;;^DD(399.0304,.01,1,2,2)
	;;=I $P(X,";",2)="ICPT(",$D(^DGCR(399,DA(1),"CP",DA,0)),$P(^(0),"^",2) K ^DGCR(399,"ASD",-$P(^(0),"^",2),+X,DA(1),DA)
	;;^DD(399.0304,.01,1,2,3)
	;;=DO NOT DELETE
	;;^DD(399.0304,.01,1,2,"%D",0)
	;;=^^1^1^2930513^^^
	;;^DD(399.0304,.01,1,2,"%D",1,0)
	;;=Index procedure date and all CPT procedures.
	;;^DD(399.0304,.01,1,2,"DT")
	;;=2920311
	;;^DD(399.0304,.01,1,3,0)
	;;=^^TRIGGER^399.0304^4
	;;^DD(399.0304,.01,1,3,1)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399.0304,.01,1,3,1.1) X ^DD(399.0304,.01,1,3,1.4)
	;;^DD(399.0304,.01,1,3,1.1)
	;;=S X=DIV S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,.01,1,3,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,.01,1,3,2)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399.0304,.01,1,3,2.4)
	;;^DD(399.0304,.01,1,3,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,.01,1,3,"%D",0)
	;;=^^1^1^2930903^
	;;^DD(399.0304,.01,1,3,"%D",1,0)
	;;=Calculate BASC Billable status.
	;;^DD(399.0304,.01,1,3,"CREATE VALUE")
	;;=S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,.01,1,3,"DELETE VALUE")
	;;=@

IBINI0AR
IBINI0AR	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.0304,.01,1,3,"DT")
	;;=2930903
	;;^DD(399.0304,.01,1,3,"FIELD")
	;;=BASC BILLABLE
	;;^DD(399.0304,.01,3)
	;;=Procedure coding must match the PROCEDURE CODING METHOD entry for this bill.
	;;^DD(399.0304,.01,4)
	;;=D 3^IBCSCH1
	;;^DD(399.0304,.01,7.5)
	;;=D ^IBCU7
	;;^DD(399.0304,.01,21,0)
	;;=^^2^2^2930513^^^^
	;;^DD(399.0304,.01,21,1,0)
	;;=These are ICD, CPT, of HCFA procedure codes associated with the episode
	;;^DD(399.0304,.01,21,2,0)
	;;=of care on this bill.
	;;^DD(399.0304,.01,23,0)
	;;=^^1^1^2930513^^^
	;;^DD(399.0304,.01,23,1,0)
	;;= 
	;;^DD(399.0304,.01,"DT")
	;;=2930903
	;;^DD(399.0304,.01,"V",0)
	;;=^.12P^2^2
	;;^DD(399.0304,.01,"V",1,0)
	;;=81^CPT^1^CPT^n^n
	;;^DD(399.0304,.01,"V",2,0)
	;;=80.1^ICD operation/procedure^2^ICD^n^n
	;;^DD(399.0304,1,0)
	;;=PROCEDURE DATE^DX^^0;2^S %DT="EX" D ^%DT S X=Y K:Y<1 X I $D(X),$D(IBIFN),'$$OPV2^IBCU41(X,IBIFN,1) K X
	;;^DD(399.0304,1,1,0)
	;;=^.1
	;;^DD(399.0304,1,1,1,0)
	;;=399^ASD1^MUMPS
	;;^DD(399.0304,1,1,1,1)
	;;=I $D(^DGCR(399,DA(1),"CP",DA,0)),+^(0),$P($P(^(0),"^",1),";",2)="ICPT(" S ^DGCR(399,"ASD",-X,+^(0),DA(1),DA)=""
	;;^DD(399.0304,1,1,1,2)
	;;=I $D(^DGCR(399,DA(1),"CP",DA,0)),+^(0),$P($P(^(0),"^",1),";",2)="ICPT(" K ^DGCR(399,"ASD",-X,+^(0),DA(1),DA)
	;;^DD(399.0304,1,1,1,3)
	;;=DO NOT DELETE
	;;^DD(399.0304,1,1,1,"%D",0)
	;;=^^1^1^2930617^^^
	;;^DD(399.0304,1,1,1,"%D",1,0)
	;;=Index procedure date and all CPT procedures.
	;;^DD(399.0304,1,1,1,"DT")
	;;=2920311
	;;^DD(399.0304,1,1,2,0)
	;;=^^TRIGGER^399.0304^4
	;;^DD(399.0304,1,1,2,1)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399.0304,1,1,2,1.1) X ^DD(399.0304,1,1,2,1.4)
	;;^DD(399.0304,1,1,2,1.1)
	;;=S X=DIV S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,1,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,1,1,2,2)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399.0304,1,1,2,2.4)
	;;^DD(399.0304,1,1,2,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,1,1,2,"%D",0)
	;;=^^1^1^2930903^
	;;^DD(399.0304,1,1,2,"%D",1,0)
	;;=Calculate BASC Billable Status flag.
	;;^DD(399.0304,1,1,2,"CREATE VALUE")
	;;=S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,1,1,2,"DELETE VALUE")
	;;=@
	;;^DD(399.0304,1,1,2,"DT")
	;;=2930903
	;;^DD(399.0304,1,1,2,"FIELD")
	;;=BASC BILLABLE
	;;^DD(399.0304,1,3)
	;;=Procedure date must be within the bill's STATEMENT FROM and STATEMENT TO dates.
	;;^DD(399.0304,1,21,0)
	;;=^^1^1^2911025^
	;;^DD(399.0304,1,21,1,0)
	;;=This is the date the procedure was performed.
	;;^DD(399.0304,1,"DT")
	;;=2930903
	;;^DD(399.0304,2,0)
	;;=*ADDITIONAL PROCEDURE NAME^FI^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>28!($L(X)<3)!'(X?.ANP) X
	;;^DD(399.0304,2,.1)
	;;=ADDITIONAL PROCEDURE NAME
	;;^DD(399.0304,2,1,0)
	;;=^.1^^0
	;;^DD(399.0304,2,3)
	;;=Answer must be 3-28 characters in length.
	;;^DD(399.0304,2,9)
	;;=^
	;;^DD(399.0304,2,21,0)
	;;=^^3^3^2920211^^^
	;;^DD(399.0304,2,21,1,0)
	;;=This is the name of the procedure.
	;;^DD(399.0304,2,21,2,0)
	;;= 
	;;^DD(399.0304,2,21,3,0)
	;;=This field has been marked for deletion 11/4/91.
	;;^DD(399.0304,2,"DT")
	;;=2911104
	;;^DD(399.0304,3,0)
	;;=PRINT ORDER^NJ2,0X^^0;4^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X I $D(X),$D(^DGCR(399,DA(1),"CP","D",X)) W !!,*7,"This number already used!" K X

IBINI0AS
IBINI0AS	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.0304,3,1,0)
	;;=^.1
	;;^DD(399.0304,3,1,1,0)
	;;=399.0304^D
	;;^DD(399.0304,3,1,1,1)
	;;=S ^DGCR(399,DA(1),"CP","D",$E(X,1,30),DA)=""
	;;^DD(399.0304,3,1,1,2)
	;;=K ^DGCR(399,DA(1),"CP","D",$E(X,1,30),DA)
	;;^DD(399.0304,3,1,1,"DT")
	;;=2911030
	;;^DD(399.0304,3,3)
	;;=Type a Number between 1 and 99, 0 Decimal Digits
	;;^DD(399.0304,3,21,0)
	;;=^^3^3^2940120^^^^
	;;^DD(399.0304,3,21,1,0)
	;;=This is the relative order that this procedure will appear on the
	;;^DD(399.0304,3,21,2,0)
	;;=bill.  The lowest numbers will appear on the UB forms in the blocks
	;;^DD(399.0304,3,21,3,0)
	;;=for procedure.  The highest numbers will appear as additional procedures.
	;;^DD(399.0304,3,"DT")
	;;=2911030
	;;^DD(399.0304,4,0)
	;;=BASC BILLABLE^S^1:YES;^0;5^Q
	;;^DD(399.0304,4,1,0)
	;;=^.1
	;;^DD(399.0304,4,1,1,0)
	;;=399.0304^AREV7^MUMPS
	;;^DD(399.0304,4,1,1,1)
	;;=S DGRVRCAL=1
	;;^DD(399.0304,4,1,1,2)
	;;=S DGRVRCAL=2
	;;^DD(399.0304,4,1,1,"%D",0)
	;;=^^2^2^2911119^
	;;^DD(399.0304,4,1,1,"%D",1,0)
	;;=When this field is edited or changed, the revenue codes and charges for this
	;;^DD(399.0304,4,1,1,"%D",2,0)
	;;=bill will automatically be recalculated.
	;;^DD(399.0304,4,1,1,"DT")
	;;=2911119
	;;^DD(399.0304,4,1,2,0)
	;;=399.0304^ASC
	;;^DD(399.0304,4,1,2,1)
	;;=S ^DGCR(399,DA(1),"CP","ASC",$E(X,1,30),DA)=""
	;;^DD(399.0304,4,1,2,2)
	;;=K ^DGCR(399,DA(1),"CP","ASC",$E(X,1,30),DA)
	;;^DD(399.0304,4,1,2,"%D",0)
	;;=^^2^2^2930611^^
	;;^DD(399.0304,4,1,2,"%D",1,0)
	;;=This cross-reference is used to determine if any procedures entered are
	;;^DD(399.0304,4,1,2,"%D",2,0)
	;;=billable as Ambulatory Surgery Codes.
	;;^DD(399.0304,4,1,2,"DT")
	;;=2911120
	;;^DD(399.0304,4,3)
	;;=
	;;^DD(399.0304,4,5,1,0)
	;;=399.0304^5^1
	;;^DD(399.0304,4,5,2,0)
	;;=399.0304^.01^3
	;;^DD(399.0304,4,5,3,0)
	;;=399.0304^1^2
	;;^DD(399.0304,4,21,0)
	;;=2^^2^2^2940214^
	;;^DD(399.0304,4,21,1,0)
	;;=This field will be completed by the system if this procedure is an
	;;^DD(399.0304,4,21,2,0)
	;;=Ambulatory Surgery that can be billed under the HCFA rate system.
	;;^DD(399.0304,4,"DT")
	;;=2920228
	;;^DD(399.0304,5,0)
	;;=DIVISION^RP40.8'^DG(40.8,^0;6^Q
	;;^DD(399.0304,5,1,0)
	;;=^.1
	;;^DD(399.0304,5,1,1,0)
	;;=^^TRIGGER^399.0304^4
	;;^DD(399.0304,5,1,1,1)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399.0304,5,1,1,1.1) X ^DD(399.0304,5,1,1,1.4)
	;;^DD(399.0304,5,1,1,1.1)
	;;=S X=DIV S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,5,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,5,1,1,2)
	;;=K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(1)=$S($D(^DGCR(399,D0,"CP",D1,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399.0304,5,1,1,2.4)
	;;^DD(399.0304,5,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399,DIV(0),"CP",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=399.0304,DIG=4 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.0304,5,1,1,"%D",0)
	;;=^^1^1^2930903^
	;;^DD(399.0304,5,1,1,"%D",1,0)
	;;=Calculate and set BASC billable flag.
	;;^DD(399.0304,5,1,1,"CREATE VALUE")
	;;=S X=$$CP^IBEFUNC1(DA(1),DA) I X'="" S X=1
	;;^DD(399.0304,5,1,1,"DELETE VALUE")
	;;=@
	;;^DD(399.0304,5,1,1,"DT")
	;;=2930903
	;;^DD(399.0304,5,1,1,"FIELD")
	;;=BASC BILLABLE
	;;^DD(399.0304,5,3)
	;;=Enter the division where this procedure was performed.
	;;^DD(399.0304,5,21,0)
	;;=^^3^3^2930611^^^^
	;;^DD(399.0304,5,21,1,0)
	;;=Enter the Division at which this procedure was performed.  If this field

IBINI0AT
IBINI0AT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.0304,5,21,2,0)
	;;=is not filled in for Billable Ambulatory Surgical Codes then a BASC
	;;^DD(399.0304,5,21,3,0)
	;;=revenue code and amount will not be calculated.
	;;^DD(399.0304,5,"DT")
	;;=2930903
	;;^DD(399.0304,6,0)
	;;=ASSOCIATED CLINIC^*P44'^SC(^0;7^S DIC("S")="I $P(^(0),U,3)=""C"",$S('$D(^(""I"")):1,'^(""I""):1,'$D(DGPROCDT):0,^(""I"")>DGPROCDT:1,'$P(^(""I""),U,2):0,1:$P(^(""I""),U,2)'>DGPROCDT)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.0304,6,12)
	;;=Only active clinics!
	;;^DD(399.0304,6,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""C"",$S('$D(^(""I"")):1,'^(""I""):1,'$D(DGPROCDT):0,^(""I"")>DGPROCDT:1,'$P(^(""I""),U,2):0,1:$P(^(""I""),U,2)'>DGPROCDT)"
	;;^DD(399.0304,6,21,0)
	;;=^^3^3^2920415^^^
	;;^DD(399.0304,6,21,1,0)
	;;=Enter the clinic where this procedure was performed.  This field must
	;;^DD(399.0304,6,21,2,0)
	;;=be completed in order for this procedure to successfully be transfered
	;;^DD(399.0304,6,21,3,0)
	;;=to the Add/Edit Stop code logic for inclusion in OPC workload.
	;;^DD(399.0304,6,"DT")
	;;=2911231
	;;^DD(399.0304,7,0)
	;;=*ASSOCIATED DIAGNOSIS^P80'^ICD9(^0;8^Q
	;;^DD(399.0304,7,3)
	;;=Enter the diagnosis related to this procedure.
	;;^DD(399.0304,7,21,0)
	;;=^^2^2^2931117^^^^
	;;^DD(399.0304,7,21,1,0)
	;;=This is the diagnosis most closely related to this procedure.  Used on the
	;;^DD(399.0304,7,21,2,0)
	;;=HFCA 1500, block 24e.
	;;^DD(399.0304,7,23,0)
	;;=^^2^2^2931117^
	;;^DD(399.0304,7,23,1,0)
	;;=Replaced by (399,304,10-13) so that could point to the diagnosis file (362.3).
	;;^DD(399.0304,7,23,2,0)
	;;="*"ed for deletion 11/16/93.
	;;^DD(399.0304,7,"DT")
	;;=2931116
	;;^DD(399.0304,8,0)
	;;=PLACE OF SERVICE^P353.1'^IBE(353.1,^0;9^Q
	;;^DD(399.0304,8,3)
	;;=Enter the Place of Service appropriate for this procedure.
	;;^DD(399.0304,8,21,0)
	;;=^^2^2^2930604^^
	;;^DD(399.0304,8,21,1,0)
	;;=This is the Place of Service appropriate for this Procedure.  Used only
	;;^DD(399.0304,8,21,2,0)
	;;=for the HCFA 1500 claim form.
	;;^DD(399.0304,8,"DT")
	;;=2930604
	;;^DD(399.0304,9,0)
	;;=TYPE OF SERVICE^P353.2'^IBE(353.2,^0;10^Q
	;;^DD(399.0304,9,3)
	;;=Enter the Type of Service appropriate for this procedure.
	;;^DD(399.0304,9,21,0)
	;;=^^2^2^2930604^
	;;^DD(399.0304,9,21,1,0)
	;;=This is the Type of Service to be associated with this procedure.  Applies
	;;^DD(399.0304,9,21,2,0)
	;;=only to the HCFA 1500 claim form.
	;;^DD(399.0304,9,"DT")
	;;=2930604
	;;^DD(399.0304,10,0)
	;;=ASSOCIATED DIAGNOSIS (1)^*P362.3'^IBA(362.3,^0;11^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.0304,10,3)
	;;=Enter the diagnosis related to this procedure.
	;;^DD(399.0304,10,12)
	;;=Only Diagnosis for this bill may be chosen.
	;;^DD(399.0304,10,12.1)
	;;=S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
	;;^DD(399.0304,10,21,0)
	;;=^^2^2^2931130^^^^
	;;^DD(399.0304,10,21,1,0)
	;;=The diagnosis most closely related to this procedure.  Used only for the
	;;^DD(399.0304,10,21,2,0)
	;;=HCFA 1500, block 24e.
	;;^DD(399.0304,10,23,0)
	;;=^^1^1^2931130^^^^
	;;^DD(399.0304,10,23,1,0)
	;;=Converted from (399,304,7) with IB 2.0.
	;;^DD(399.0304,10,"DT")
	;;=2931130
	;;^DD(399.0304,11,0)
	;;=ASSOCIATED DIAGNOSIS (2)^*P362.3'^IBA(362.3,^0;12^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.0304,11,3)
	;;=Enter a diagnosis related to this procedure.
	;;^DD(399.0304,11,12)
	;;=Only Diagnosis for this bill may be chosen.
	;;^DD(399.0304,11,12.1)
	;;=S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"

IBINI0AU
IBINI0AU	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.0304,11,21,0)
	;;=^^2^2^2931130^
	;;^DD(399.0304,11,21,1,0)
	;;=The diagnosis most closely related to this procedure.  Used only for the
	;;^DD(399.0304,11,21,2,0)
	;;=HCFA 1500, block 24e.
	;;^DD(399.0304,11,"DT")
	;;=2931130
	;;^DD(399.0304,12,0)
	;;=ASSOCIATED DIAGNOSIS (3)^*P362.3'^IBA(362.3,^0;13^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.0304,12,3)
	;;=Enter a diagnosis related to this procedure.
	;;^DD(399.0304,12,12)
	;;=Only Diagnosis for this bill may be chosen.
	;;^DD(399.0304,12,12.1)
	;;=S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
	;;^DD(399.0304,12,21,0)
	;;=^^2^2^2931130^
	;;^DD(399.0304,12,21,1,0)
	;;=The diagnosis most closely related to this procedure.  Used only for the
	;;^DD(399.0304,12,21,2,0)
	;;=HCFA 1500, block 24e.
	;;^DD(399.0304,12,"DT")
	;;=2931130
	;;^DD(399.0304,13,0)
	;;=ASSOCIATED DIAGNOSIS (4)^*P362.3'^IBA(362.3,^0;14^S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.0304,13,3)
	;;=Enter a diagnosis related to this procedure.
	;;^DD(399.0304,13,12)
	;;=Only Diagnosis for this bill may be chosen.
	;;^DD(399.0304,13,12.1)
	;;=S DIC("S")="I +$P(^IBA(362.3,Y,0),U,2)=+$G(DA(1))"
	;;^DD(399.0304,13,21,0)
	;;=^^2^2^2931130^
	;;^DD(399.0304,13,21,1,0)
	;;=The diagnosis most closely related to this procedure.  Used only for the
	;;^DD(399.0304,13,21,2,0)
	;;=HCFA 1500, block 24e.
	;;^DD(399.0304,13,"DT")
	;;=2931130
	;;^DD(399.04,0)
	;;=CONDITION CODE SUB-FIELD^^.01^1
	;;^DD(399.04,0,"NM","CONDITION CODE")
	;;=
	;;^DD(399.04,0,"UP")
	;;=399
	;;^DD(399.04,.01,0)
	;;=CONDITION CODE^MSX^02:CONDITION EMPLOYMENT RELATED;03:PT COVERED BY INSURANCE NOT REFLECTED HERE;05:LIEN FILED;06:ESRD PT IN 1ST YR OF ENTITLEMENT;17:PT OVER 100 YRS. OLD;18:MAIDEN NAME RETAINED;^0;1^I X=17!(X=18) D AGE^IBCU K IBC
	;;^DD(399.04,.01,3)
	;;=Select code(s) used to identify conditions relating to this patient that may affect insurance processing.
	;;^DD(399.04,.01,"DT")
	;;=2930513
	;;^DD(399.041,0)
	;;=OCCURRENCE CODE SUB-FIELD^^.04^4
	;;^DD(399.041,0,"DIK")
	;;=IBXX
	;;^DD(399.041,0,"DT")
	;;=2931221
	;;^DD(399.041,0,"ID",.02)
	;;=W ""
	;;^DD(399.041,0,"IX","B",399.041,.01)
	;;=
	;;^DD(399.041,0,"NM","OCCURRENCE CODE")
	;;=
	;;^DD(399.041,0,"UP")
	;;=399
	;;^DD(399.041,.01,0)
	;;=OCCURRENCE CODE^M*P399.1'^DGCR(399.1,^0;1^S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,4)=1,$S(+Y'=22:1,$P(^DPT($P(^DGCR(399,DA,0),U,2),0),U,2)=""F"":1,1:0)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.041,.01,1,0)
	;;=^.1
	;;^DD(399.041,.01,1,1,0)
	;;=399.041^B
	;;^DD(399.041,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"OC","B",$E(X,1,30),DA)=""
	;;^DD(399.041,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"OC","B",$E(X,1,30),DA)
	;;^DD(399.041,.01,3)
	;;=This code defines the event(s) relating to this bill which may affect           insurance processing.
	;;^DD(399.041,.01,9.6)
	;;=I X=10 S DFN=$P(^DGCR(399,DA,0),"^",2) I $D(^DPT(DFN,0)),$P(^DPT(DFN,0),"^",2)="M" W !!,"This patient is a MALE!! Occurrence Code 10 applies only to FEMALES!!",!! K DFN,X Q
	;;^DD(399.041,.01,12)
	;;=Valid MCCR Occurrence Codes only!
	;;^DD(399.041,.01,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,4)=1,$S(+Y'=22:1,$P(^DPT($P(^DGCR(399,DA,0),U,2),0),U,2)=""F"":1,1:0)"
	;;^DD(399.041,.01,"DT")
	;;=2890131
	;;^DD(399.041,.02,0)
	;;=DATE^RD^^0;2^S %DT="E" D ^%DT S X=Y K:DT<X!(2000101>X) X
	;;^DD(399.041,.02,3)
	;;=TYPE A DATE ON OR BEFORE TODAY
	;;^DD(399.041,.02,21,0)
	;;=^^2^2^2931221^^
	;;^DD(399.041,.02,21,1,0)
	;;=This is the date that this event occured.

IBINI0AV
IBINI0AV	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.041,.02,21,2,0)
	;;=This is the beginning date for the time period covered by Occurrence Spans.
	;;^DD(399.041,.02,"DT")
	;;=2890331
	;;^DD(399.041,.03,0)
	;;=STATE^P5'^DIC(5,^0;3^Q
	;;^DD(399.041,.03,3)
	;;=Enter the state the accident occured in.  Used for auto accidents on the HCFA 1500.
	;;^DD(399.041,.03,21,0)
	;;=^^2^2^2920430^^
	;;^DD(399.041,.03,21,1,0)
	;;=This is the state in which the accident took place.  Currently only needed
	;;^DD(399.041,.03,21,2,0)
	;;=for auto accidents on the HCFA 1500.
	;;^DD(399.041,.03,"DT")
	;;=2920427
	;;^DD(399.041,.04,0)
	;;=END DATE^D^^0;4^S %DT="EX" D ^%DT S X=Y K:Y<1 X
	;;^DD(399.041,.04,3)
	;;=Enter the end date for the time period covered by this Occurrence Span.
	;;^DD(399.041,.04,"DT")
	;;=2931221
	;;^DD(399.042,0)
	;;=REVENUE CODE SUB-FIELD^^.08^9
	;;^DD(399.042,0,"DIK")
	;;=IBXX
	;;^DD(399.042,0,"DT")
	;;=2940207
	;;^DD(399.042,0,"ID",.05)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399.1,+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399.1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(399.042,0,"IX","ABS",399.042,.05)
	;;=
	;;^DD(399.042,0,"IX","ABS1",399.042,.01)
	;;=
	;;^DD(399.042,0,"IX","ATC",399.042,.04)
	;;=
	;;^DD(399.042,0,"IX","B",399.042,.01)
	;;=
	;;^DD(399.042,0,"IX","TC",399.042,.03)
	;;=
	;;^DD(399.042,0,"IX","TC1",399.042,.02)
	;;=
	;;^DD(399.042,0,"NM","REVENUE CODE")
	;;=
	;;^DD(399.042,0,"UP")
	;;=399
	;;^DD(399.042,.001,0)
	;;=NUMBER^NJ5,0^^ ^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(399.042,.001,3)
	;;=Type a Number between 1 and 99999, 0 Decimal Digits
	;;^DD(399.042,.001,9)
	;;=^
	;;^DD(399.042,.001,21,0)
	;;=^^2^2^2911025^
	;;^DD(399.042,.001,21,1,0)
	;;=This is the sequential number of the entry.  Use of this number facilitates
	;;^DD(399.042,.001,21,2,0)
	;;=reference to the line item charges and revenue codes it is associated with.
	;;^DD(399.042,.001,"DT")
	;;=2900710
	;;^DD(399.042,.01,0)
	;;=REVENUE CODE^MR*P399.2'X^DGCR(399.2,^0;1^S D="D",DIC("S")="I $P(^(0),""^"",3)" D IX^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.042,.01,1,0)
	;;=^.1^^-1
	;;^DD(399.042,.01,1,1,0)
	;;=399.042^B
	;;^DD(399.042,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"RC","B",$E(X,1,30),DA)=""
	;;^DD(399.042,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"RC","B",$E(X,1,30),DA)
	;;^DD(399.042,.01,1,2,0)
	;;=399.042^ABS1^MUMPS
	;;^DD(399.042,.01,1,2,1)
	;;=I $P(^DGCR(399,DA(1),"RC",DA,0),U,5) S ^DGCR(399,DA(1),"RC","ABS",$P(^DGCR(399,DA(1),"RC",DA,0),U,5),$E(X,1,30),DA)=""
	;;^DD(399.042,.01,1,2,2)
	;;=I $P(^DGCR(399,DA(1),"RC",DA,0),U,5) K ^DGCR(399,DA(1),"RC","ABS",$P(^DGCR(399,DA(1),"RC",DA,0),U,5),$E(X,1,30),DA)
	;;^DD(399.042,.01,1,2,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.042,.01,1,2,"%D",1,0)
	;;=Cross reference of all revenue codes with bedsections.
	;;^DD(399.042,.01,3)
	;;=Enter the code(s) which identify a specific accommodation, ancillary service, or billing calculation.  You may enter up to 10 codes per bill.
	;;^DD(399.042,.01,9.6)
	;;=I $D(^DGCR(399,+DA,"RC",0)),$P(^(0),"^",4)'<10,'$D(^DGCR(399,DA,"RC","B",X)) W !!,"No more than 10 Revenue Codes per bill may be entered.",! S DGCRR=1
	;;^DD(399.042,.01,12)
	;;=Select active revenue codes only!
	;;^DD(399.042,.01,12.1)
	;;=S DIC("S")="I $D(^DGCR(399.2,""AC"",+Y))"
	;;^DD(399.042,.01,"DT")
	;;=2930610
	;;^DD(399.042,.02,0)
	;;=CHARGES^RNJ8,2^^0;2^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>99999)!(X<0) X
	;;^DD(399.042,.02,1,0)
	;;=^.1^^-1
	;;^DD(399.042,.02,1,1,0)
	;;=399.042^TC1^MUMPS
	;;^DD(399.042,.02,1,1,1)
	;;=D 21^IBCU2
	;;^DD(399.042,.02,1,1,2)
	;;=D 22^IBCU2

IBINI0AW
IBINI0AW	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.042,.02,1,1,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.042,.02,1,1,"%D",1,0)
	;;=Sets/deletes total charges.
	;;^DD(399.042,.02,1,1,"DT")
	;;=2920921
	;;^DD(399.042,.02,3)
	;;=Type a Dollar Amount between 0 and 99999, 2 Decimal Digits
	;;^DD(399.042,.02,21,0)
	;;=^^3^3^2911025^
	;;^DD(399.042,.02,21,1,0)
	;;=This is the unit charge for this revenue code.  It will be
	;;^DD(399.042,.02,21,2,0)
	;;=multiplied times the number of units to determine the total cost for
	;;^DD(399.042,.02,21,3,0)
	;;=this revenue code.
	;;^DD(399.042,.02,"DT")
	;;=2920921
	;;^DD(399.042,.03,0)
	;;=UNITS OF SERVICE^RNJ6,0X^^0;3^K:X'?1.N X I $D(X) S:X']"" X=1
	;;^DD(399.042,.03,1,0)
	;;=^.1
	;;^DD(399.042,.03,1,1,0)
	;;=399.042^TC^MUMPS
	;;^DD(399.042,.03,1,1,1)
	;;=D 31^IBCU2
	;;^DD(399.042,.03,1,1,2)
	;;=D 32^IBCU2
	;;^DD(399.042,.03,1,1,"%D",0)
	;;=^^1^1^2940214^^^
	;;^DD(399.042,.03,1,1,"%D",1,0)
	;;=Adds/deletes total charges.
	;;^DD(399.042,.03,1,1,"DT")
	;;=2920921
	;;^DD(399.042,.03,3)
	;;=Enter the number of units of service (accommodation days, miles, treatments, etc.) rendered to or for this patient for this revenue code.
	;;^DD(399.042,.03,21,0)
	;;=^^3^3^2940214^^^^
	;;^DD(399.042,.03,21,1,0)
	;;=This is the number of day of inpatient care or the number of outpatient
	;;^DD(399.042,.03,21,2,0)
	;;=visits for this revenue code.  It will be multiplied by the
	;;^DD(399.042,.03,21,3,0)
	;;=CHARGES field to determine the TOTAL charges for this revenue code.
	;;^DD(399.042,.03,"DT")
	;;=2920921
	;;^DD(399.042,.04,0)
	;;=TOTAL^RNJ9,2XI^^0;4^K:X?1.10N.1".".2N X
	;;^DD(399.042,.04,1,0)
	;;=^.1^^-1
	;;^DD(399.042,.04,1,1,0)
	;;=399.042^ATC^MUMPS
	;;^DD(399.042,.04,1,1,1)
	;;=S DGXRF=1 D TC^IBCU2 K DGXRF
	;;^DD(399.042,.04,1,1,2)
	;;=S DGXRF=2 D TC^IBCU2 K DGXRF
	;;^DD(399.042,.04,1,1,"%D",0)
	;;=^^1^1^2940216^^^
	;;^DD(399.042,.04,1,1,"%D",1,0)
	;;=Sets/deletes total charges, FY 1 charges.  Also sets FY 2 charges to "".
	;;^DD(399.042,.04,1,1,"DT")
	;;=2920921
	;;^DD(399.042,.04,3)
	;;=Type a Dollar Amount between 0 and 999999, 2 Decimal Digits
	;;^DD(399.042,.04,21,0)
	;;=^^2^2^2911025^
	;;^DD(399.042,.04,21,1,0)
	;;=This is the total charges for this revenue code.  It is computed by the
	;;^DD(399.042,.04,21,2,0)
	;;=system.
	;;^DD(399.042,.04,"DT")
	;;=2920921
	;;^DD(399.042,.05,0)
	;;=BEDSECTION^R*P399.1'^DGCR(399.1,^0;5^S DIC("S")="I $P(^(0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.042,.05,1,0)
	;;=^.1
	;;^DD(399.042,.05,1,1,0)
	;;=399.042^ABS^MUMPS
	;;^DD(399.042,.05,1,1,1)
	;;=S ^DGCR(399,DA(1),"RC","ABS",$E(X,1,30),+^DGCR(399,DA(1),"RC",DA,0),DA)=""
	;;^DD(399.042,.05,1,1,2)
	;;=K ^DGCR(399,DA(1),"RC","ABS",$E(X,1,30),+^DGCR(399,DA(1),"RC",DA,0),DA)
	;;^DD(399.042,.05,1,1,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.042,.05,1,1,"%D",1,0)
	;;=Cross reference of all revenue codes with bedsections.
	;;^DD(399.042,.05,12)
	;;=ONLY BILLABLE BEDSECTIONS
	;;^DD(399.042,.05,12.1)
	;;=S DIC("S")="I $P(^(0),U,5)"
	;;^DD(399.042,.05,21,0)
	;;=^^2^2^2931018^^
	;;^DD(399.042,.05,21,1,0)
	;;=If this is an inpatient bill then this is the Specialty associated with
	;;^DD(399.042,.05,21,2,0)
	;;=authorized rates for the type of care provided for this revenue code.
	;;^DD(399.042,.05,23,0)
	;;=^^1^1^2931018^
	;;^DD(399.042,.05,23,1,0)
	;;=Includes only billable bedsections.
	;;^DD(399.042,.05,"DT")
	;;=2900514
	;;^DD(399.042,.06,0)
	;;=PROCEDURE^P81'^ICPT(^0;6^Q
	;;^DD(399.042,.06,1,0)
	;;=^.1^^-1
	;;^DD(399.042,.06,1,1,0)
	;;=399^ASC1^MUMPS
	;;^DD(399.042,.06,1,1,1)
	;;=I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)=""

IBINI0AX
IBINI0AX	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.042,.06,1,1,2)
	;;=K ^DGCR(399,"ASC1",$E(X,1,30),DA(1),DA)
	;;^DD(399.042,.06,1,1,"%D",0)
	;;=^^1^1^2940310^^^^
	;;^DD(399.042,.06,1,1,"%D",1,0)
	;;=All Billable Ambulatory Surgery Codes (BASC) that have been billed.
	;;^DD(399.042,.06,1,1,"DT")
	;;=2930903
	;;^DD(399.042,.06,1,2,0)
	;;=399^ASC2^MUMPS
	;;^DD(399.042,.06,1,2,1)
	;;=I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)=""
	;;^DD(399.042,.06,1,2,2)
	;;=K ^DGCR(399,"ASC2",DA(1),$E(X,1,30),DA)
	;;^DD(399.042,.06,1,2,"%D",0)
	;;=^^1^1^2940310^^^^
	;;^DD(399.042,.06,1,2,"%D",1,0)
	;;=All bills with charges for Billable Ambulatory Surgery Codes (BASC).
	;;^DD(399.042,.06,1,2,"DT")
	;;=2930903
	;;^DD(399.042,.06,21,0)
	;;=3^^9^9^2930707^^
	;;^DD(399.042,.06,21,1,0)
	;;=This field may be used to associate the revenue code with a procedure.
	;;^DD(399.042,.06,21,2,0)
	;;=This will be needed primarily to accomodate the HCFA 1500 which allows
	;;^DD(399.042,.06,21,3,0)
	;;=charges by procedure not revenue code.  The charge associated with the
	;;^DD(399.042,.06,21,4,0)
	;;=revenue code will be printed on the HCFA 1500 claim form in the same line
	;;^DD(399.042,.06,21,5,0)
	;;=item as the procedure.
	;;^DD(399.042,.06,21,6,0)
	;;= 
	;;^DD(399.042,.06,21,7,0)
	;;=This field is also used for revenue codes that are for Billable Ambulatory
	;;^DD(399.042,.06,21,8,0)
	;;=Surgeries (BASC).  It identifies the CPT code of the surgery which is
	;;^DD(399.042,.06,21,9,0)
	;;=being billed for.
	;;^DD(399.042,.06,"DT")
	;;=2930903
	;;^DD(399.042,.07,0)
	;;=DIVISION^P40.8'X^DG(40.8,^0;7^Q
	;;^DD(399.042,.07,1,0)
	;;=^.1^^-1
	;;^DD(399.042,.07,1,1,0)
	;;=399^ASC11^MUMPS
	;;^DD(399.042,.07,1,1,1)
	;;=I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC1",$P(^DGCR(399,DA(1),"RC",DA,0),U,6),DA(1),DA)=""
	;;^DD(399.042,.07,1,1,2)
	;;=K ^DGCR(399,"ASC1",+$P(^DGCR(399,DA(1),"RC",DA,0),U,6),DA(1),DA)
	;;^DD(399.042,.07,1,1,"%D",0)
	;;=^^1^1^2940310^^^^
	;;^DD(399.042,.07,1,1,"%D",1,0)
	;;=All Billable Ambulatory Surgery Codes (BASC) that have been billed.
	;;^DD(399.042,.07,1,1,"DT")
	;;=2940310
	;;^DD(399.042,.07,1,2,0)
	;;=399^ASC21^MUMPS
	;;^DD(399.042,.07,1,2,1)
	;;=I $$RC^IBEFUNC1(DA(1),DA) S ^DGCR(399,"ASC2",DA(1),$P(^DGCR(399,DA(1),"RC",DA,0),U,6),DA)=""
	;;^DD(399.042,.07,1,2,2)
	;;=K ^DGCR(399,"ASC2",DA(1),+$P(^DGCR(399,DA(1),"RC",DA,0),U,6),DA)
	;;^DD(399.042,.07,1,2,"%D",0)
	;;=^^1^1^2940310^^^^
	;;^DD(399.042,.07,1,2,"%D",1,0)
	;;=All bills with charges for Billable Ambulatory Surgery Codes (BASC).
	;;^DD(399.042,.07,1,2,"DT")
	;;=2940307
	;;^DD(399.042,.07,3)
	;;=
	;;^DD(399.042,.07,21,0)
	;;=^^2^2^2920415^
	;;^DD(399.042,.07,21,1,0)
	;;=This field is completed only if the revenue code is for a Billable Ambulatory
	;;^DD(399.042,.07,21,2,0)
	;;=Surgery. It identifies the division where the surgery was performed.
	;;^DD(399.042,.07,"DT")
	;;=2940310
	;;^DD(399.042,.08,0)
	;;=AUTO^S^1:YES;^0;8^Q
	;;^DD(399.042,.08,3)
	;;=This field sould be automatically added by the software, user entry is not necessary.
	;;^DD(399.042,.08,21,0)
	;;=^^2^2^2940207^^
	;;^DD(399.042,.08,21,1,0)
	;;=True if the revenue code and charge were added by the automatic charge
	;;^DD(399.042,.08,21,2,0)
	;;=calculation routine, blank if added manually by the user.
	;;^DD(399.042,.08,23,0)
	;;=^^5^5^2940207^^
	;;^DD(399.042,.08,23,1,0)
	;;=Should only be true if the automatic charge calculator created the 
	;;^DD(399.042,.08,23,2,0)
	;;=revenue code and charge based on the chargable items on the bill.  Should
	;;^DD(399.042,.08,23,3,0)
	;;=be null for any rev code manually entered by a user.  (FILE^IBCU62) 

IBINI0AY
IBINI0AY	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.042,.08,23,4,0)
	;;=This is used to determine which of the revenue codes should be deleted
	;;^DD(399.042,.08,23,5,0)
	;;=before the calculator re-builds them.  (ALL^IBCU61)
	;;^DD(399.042,.08,"DT")
	;;=2940207
	;;^DD(399.043,0)
	;;=OP VISITS DATE(S) SUB-FIELD^^.01^1
	;;^DD(399.043,0,"DIK")
	;;=IBXX
	;;^DD(399.043,0,"NM","OP VISITS DATE(S)")
	;;=
	;;^DD(399.043,0,"UP")
	;;=399
	;;^DD(399.043,.01,0)
	;;=OP VISITS DATE(S)^MDX^^0;1^S %DT="E" D ^%DT S X=Y K:Y<1!('$D(IBIFN))!('$$OPV^IBCU41(X,IBIFN)) X I $D(X) S DINUM=X
	;;^DD(399.043,.01,1,0)
	;;=^.1
	;;^DD(399.043,.01,1,1,0)
	;;=399^AOPV^MUMPS
	;;^DD(399.043,.01,1,1,1)
	;;=S ^DGCR(399,"AOPV",$P(^DGCR(399,DA(1),0),U,2),$E(X,1,30),DA(1))=""
	;;^DD(399.043,.01,1,1,2)
	;;=K ^DGCR(399,"AOPV",$P(^DGCR(399,DA(1),0),U,2),$E(X,1,30),DA(1))
	;;^DD(399.043,.01,1,1,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.043,.01,1,1,"%D",1,0)
	;;=Cross reference of bills by patient and outpatient visit date.
	;;^DD(399.043,.01,1,2,0)
	;;=399^AREV1^MUMPS
	;;^DD(399.043,.01,1,2,1)
	;;=S DGRVRCAL=1
	;;^DD(399.043,.01,1,2,2)
	;;=S DGRVRCAL=2
	;;^DD(399.043,.01,1,2,"%D",0)
	;;=^^2^2^2940214^^
	;;^DD(399.043,.01,1,2,"%D",1,0)
	;;=Variable causes revenue codes and chrges to be re-calculated on return
	;;^DD(399.043,.01,1,2,"%D",2,0)
	;;=to the enter/edit billing screens.
	;;^DD(399.043,.01,3)
	;;=Enter outpatient dates which are covered by this bill. These dates must be included within the period which this statement covers.
	;;^DD(399.043,.01,"DT")
	;;=2930903
	;;^DD(399.044,0)
	;;=REASON(S) DISAPPROVED-INITIAL SUB-FIELD^^.01^1
	;;^DD(399.044,0,"DIK")
	;;=IBXX
	;;^DD(399.044,0,"IX","B",399.044,.01)
	;;=
	;;^DD(399.044,0,"NM","REASON(S) DISAPPROVED-INITIAL")
	;;=
	;;^DD(399.044,0,"UP")
	;;=399
	;;^DD(399.044,.01,0)
	;;=REASON(S) DISAPPROVED-INITIAL^MP399.4'^DGCR(399.4,^0;1^Q
	;;^DD(399.044,.01,1,0)
	;;=^.1
	;;^DD(399.044,.01,1,1,0)
	;;=399.044^B
	;;^DD(399.044,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"D1","B",$E(X,1,30),DA)=""
	;;^DD(399.044,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"D1","B",$E(X,1,30),DA)
	;;^DD(399.044,.01,3)
	;;=Select reason(s) why this billing record has been disapproved.
	;;^DD(399.044,.01,"DT")
	;;=2880523
	;;^DD(399.045,0)
	;;=REASON(S) DISAPPROVED-SECOND SUB-FIELD^^.01^1
	;;^DD(399.045,0,"DIK")
	;;=IBXX
	;;^DD(399.045,0,"IX","B",399.045,.01)
	;;=
	;;^DD(399.045,0,"NM","REASON(S) DISAPPROVED-SECOND")
	;;=
	;;^DD(399.045,0,"UP")
	;;=399
	;;^DD(399.045,.01,0)
	;;=REASON(S) DISAPPROVED-SECOND^MP399.4'^DGCR(399.4,^0;1^Q
	;;^DD(399.045,.01,1,0)
	;;=^.1
	;;^DD(399.045,.01,1,1,0)
	;;=399.045^B
	;;^DD(399.045,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"D2","B",$E(X,1,30),DA)=""
	;;^DD(399.045,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"D2","B",$E(X,1,30),DA)
	;;^DD(399.045,.01,3)
	;;=Select reason(s) why this billing record has been disapproved.
	;;^DD(399.045,.01,"DT")
	;;=2880523
	;;^DD(399.046,0)
	;;=RETURNED LOG DATE/TIME SUB-FIELD^^.04^4
	;;^DD(399.046,0,"DIK")
	;;=IBXX
	;;^DD(399.046,0,"IX","AC",399.046,.04)
	;;=
	;;^DD(399.046,0,"IX","B",399.046,.01)
	;;=
	;;^DD(399.046,0,"NM","RETURNED LOG DATE/TIME")
	;;=
	;;^DD(399.046,0,"UP")
	;;=399
	;;^DD(399.046,.01,0)
	;;=LOG DATE/TIME^D^^0;1^S %DT="ETXR" D ^%DT S X=Y K:Y<1 X
	;;^DD(399.046,.01,1,0)
	;;=^.1
	;;^DD(399.046,.01,1,1,0)
	;;=399.046^B
	;;^DD(399.046,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"R","B",$E(X,1,30),DA)=""
	;;^DD(399.046,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"R","B",$E(X,1,30),DA)
	;;^DD(399.046,.01,21,0)
	;;=^^1^1^2911025^
	;;^DD(399.046,.01,21,1,0)
	;;=This is the date and time that this entry was edited.
	;;^DD(399.046,.01,"DT")
	;;=2900605

IBINI0AZ
IBINI0AZ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.046,.02,0)
	;;=USER^P200'^VA(200,^0;2^Q
	;;^DD(399.046,.02,1,0)
	;;=^.1^^0
	;;^DD(399.046,.02,21,0)
	;;=^^1^1^2911025^
	;;^DD(399.046,.02,21,1,0)
	;;=This is the user who edited or returned the bill.
	;;^DD(399.046,.02,"DT")
	;;=2901004
	;;^DD(399.046,.03,0)
	;;=RETURNED COMMENTS^F^^0;3^K:$L(X)>80!($L(X)<3) X
	;;^DD(399.046,.03,3)
	;;=Answer must be 3-80 characters in length.
	;;^DD(399.046,.03,21,0)
	;;=^^2^2^2940214^^
	;;^DD(399.046,.03,21,1,0)
	;;=Enter any comments that you would like stored with this bill.  This may
	;;^DD(399.046,.03,21,2,0)
	;;=include documentation of any changes and why they occured.
	;;^DD(399.046,.03,"DT")
	;;=2900606
	;;^DD(399.046,.04,0)
	;;=RETURN TO A/R?^FXO^^0;4^I $D(X) D YN^IBCU
	;;^DD(399.046,.04,1,0)
	;;=^.1
	;;^DD(399.046,.04,1,1,0)
	;;=399.046^AC
	;;^DD(399.046,.04,1,1,1)
	;;=S ^DGCR(399,DA(1),"R","AC",$E(X,1,30),DA)=""
	;;^DD(399.046,.04,1,1,2)
	;;=K ^DGCR(399,DA(1),"R","AC",$E(X,1,30),DA)
	;;^DD(399.046,.04,2)
	;;=S Y(0)=Y S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399.046,.04,2.1)
	;;=S Y=$S(Y:"YES",Y=0:"NO",1:"")
	;;^DD(399.046,.04,3)
	;;=Answer must be 1 character in length.
	;;^DD(399.046,.04,21,0)
	;;=^^2^2^2911025^^
	;;^DD(399.046,.04,21,1,0)
	;;=Enter 'Yes' if you are returning this bill to Accounts Receivable at
	;;^DD(399.046,.04,21,2,0)
	;;=this time.  Enter 'No' if you do not wish to return this bill at this time.
	;;^DD(399.046,.04,"DT")
	;;=2920921
	;;^DD(399.047,0)
	;;=VALUE CODE SUB-FIELD^^.02^2
	;;^DD(399.047,0,"DIK")
	;;=IBXX
	;;^DD(399.047,0,"DT")
	;;=2931222
	;;^DD(399.047,0,"IX","B",399.047,.01)
	;;=
	;;^DD(399.047,0,"NM","VALUE CODE")
	;;=
	;;^DD(399.047,0,"UP")
	;;=399
	;;^DD(399.047,.01,0)
	;;=VALUE CODE^M*P399.1'^DGCR(399.1,^0;1^S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,11)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.047,.01,1,0)
	;;=^.1
	;;^DD(399.047,.01,1,1,0)
	;;=399.047^B
	;;^DD(399.047,.01,1,1,1)
	;;=S ^DGCR(399,DA(1),"CV","B",$E(X,1,30),DA)=""
	;;^DD(399.047,.01,1,1,2)
	;;=K ^DGCR(399,DA(1),"CV","B",$E(X,1,30),DA)
	;;^DD(399.047,.01,3)
	;;=Enter a Value Code that applies to this bill.
	;;^DD(399.047,.01,12)
	;;=Value Codes Only!
	;;^DD(399.047,.01,12.1)
	;;=S DIC("S")="I +$P($G(^DGCR(399.1,+Y,0)),U,11)"
	;;^DD(399.047,.01,21,0)
	;;=^^2^2^2931230^^
	;;^DD(399.047,.01,21,1,0)
	;;=This code relates amounts or values to identified data elements necessary
	;;^DD(399.047,.01,21,2,0)
	;;=to process this claim as qualified by the payer.
	;;^DD(399.047,.01,"DT")
	;;=2931222
	;;^DD(399.047,.02,0)
	;;=VALUE^F^^0;2^K:$L(X)>9!($L(X)<1) X
	;;^DD(399.047,.02,3)
	;;=Answer must be 1-9 characters in length.
	;;^DD(399.047,.02,21,0)
	;;=^^1^1^2931222^^
	;;^DD(399.047,.02,21,1,0)
	;;=Enter the amount or value that corresponds to this value code.
	;;^DD(399.047,.02,"DT")
	;;=2931222

IBINI0B0
IBINI0B0	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399.1,0,"GL")
	;;=^DGCR(399.1,
	;;^DIC("B","MCCR UTILITY",399.1)
	;;=
	;;^DIC(399.1,"%D",0)
	;;=^^5^5^2940215^^^^
	;;^DIC(399.1,"%D",1,0)
	;;=This file contains all of the Occurrence Codes, Discharge Bedsections,
	;;^DIC(399.1,"%D",2,0)
	;;=Discharge Statuses and Value Codes which may be used on the Third Party
	;;^DIC(399.1,"%D",3,0)
	;;=claim forms.
	;;^DIC(399.1,"%D",4,0)
	;;= 
	;;^DIC(399.1,"%D",5,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399.1,0)
	;;=FIELD^^.19^13
	;;^DD(399.1,0,"DDA")
	;;=N
	;;^DD(399.1,0,"DT")
	;;=2940103
	;;^DD(399.1,0,"ID",.02)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(399.1,0,"IX","AC",399.1,.14)
	;;=
	;;^DD(399.1,0,"IX","B",399.1,.01)
	;;=
	;;^DD(399.1,0,"IX","C",399.1,.02)
	;;=
	;;^DD(399.1,0,"IX","C1",399.1,.02)
	;;=
	;;^DD(399.1,0,"IX","D",399.1,.03)
	;;=
	;;^DD(399.1,0,"NM","MCCR UTILITY")
	;;=
	;;^DD(399.1,0,"PT",42.4,5)
	;;=
	;;^DD(399.1,0,"PT",399,161)
	;;=
	;;^DD(399.1,0,"PT",399,162)
	;;=
	;;^DD(399.1,0,"PT",399.041,.01)
	;;=
	;;^DD(399.1,0,"PT",399.042,.05)
	;;=
	;;^DD(399.1,0,"PT",399.047,.01)
	;;=
	;;^DD(399.1,0,"PT",399.5,.02)
	;;=
	;;^DD(399.1,0,"PT",11500.61,.01)
	;;=
	;;^DD(399.1,0,"PT",11000001.041,.01)
	;;=
	;;^DD(399.1,.001,0)
	;;=NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(399.1,.001,3)
	;;=Enter the internal file number of this entry.
	;;^DD(399.1,.001,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.001,21,1,0)
	;;=This is the internal file number of this entry.
	;;^DD(399.1,.001,"DT")
	;;=2880606
	;;^DD(399.1,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>60!($L(X)<3)!'(X'?1P.E) X
	;;^DD(399.1,.01,1,0)
	;;=^.1
	;;^DD(399.1,.01,1,1,0)
	;;=399.1^B
	;;^DD(399.1,.01,1,1,1)
	;;=S ^DGCR(399.1,"B",$E(X,1,30),DA)=""
	;;^DD(399.1,.01,1,1,2)
	;;=K ^DGCR(399.1,"B",$E(X,1,30),DA)
	;;^DD(399.1,.01,3)
	;;=Answer must be 3-60 characters in length.
	;;^DD(399.1,.01,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.01,21,1,0)
	;;=This is the full name/description of this entry.
	;;^DD(399.1,.01,"DT")
	;;=2920430
	;;^DD(399.1,.02,0)
	;;=CODE^F^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>3!($L(X)<1) X
	;;^DD(399.1,.02,1,0)
	;;=^.1
	;;^DD(399.1,.02,1,1,0)
	;;=399.1^C
	;;^DD(399.1,.02,1,1,1)
	;;=S ^DGCR(399.1,"C",$E(X,1,30),DA)=""
	;;^DD(399.1,.02,1,1,2)
	;;=K ^DGCR(399.1,"C",$E(X,1,30),DA)
	;;^DD(399.1,.02,1,2,0)
	;;=399.1^C1^MUMPS
	;;^DD(399.1,.02,1,2,1)
	;;=I +X S ^DGCR(399.1,"C1",+X,DA)=""
	;;^DD(399.1,.02,1,2,2)
	;;=K ^DGCR(399.1,"C1",+X,DA)
	;;^DD(399.1,.02,1,2,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.1,.02,1,2,"%D",1,0)
	;;=Cross reference of the codes that identify the entries.
	;;^DD(399.1,.02,3)
	;;=Enter code or number which corresponds to this entry.
	;;^DD(399.1,.02,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.02,21,1,0)
	;;=This identifies the code or number associated with this entry.
	;;^DD(399.1,.02,"DT")
	;;=2880831
	;;^DD(399.1,.03,0)
	;;=ABBREVIATION^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>20!($L(X)<2) X
	;;^DD(399.1,.03,1,0)
	;;=^.1
	;;^DD(399.1,.03,1,1,0)
	;;=399.1^D
	;;^DD(399.1,.03,1,1,1)
	;;=S ^DGCR(399.1,"D",$E(X,1,30),DA)=""
	;;^DD(399.1,.03,1,1,2)
	;;=K ^DGCR(399.1,"D",$E(X,1,30),DA)
	;;^DD(399.1,.03,3)
	;;=Enter the 2-20 character abbreviation (if any) of the name of this entry.
	;;^DD(399.1,.03,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.03,21,1,0)
	;;=This is the abbreviation (if any) of the name of this entry.
	;;^DD(399.1,.11,0)
	;;=OCCURRENCE CODE^S^1:YES;0:NO;^0;4^Q
	;;^DD(399.1,.11,3)
	;;=Enter the code which indicates whether or not this is an Occurrence Code.
	;;^DD(399.1,.11,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.11,21,1,0)
	;;=This indicates whether or not this entry is an Occurrence Code.

IBINI0B1
IBINI0B1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.1,.11,"DT")
	;;=2901003
	;;^DD(399.1,.12,0)
	;;=BEDSECTION^S^1:YES;0:NO;^0;5^Q
	;;^DD(399.1,.12,1,0)
	;;=^.1^^0
	;;^DD(399.1,.12,3)
	;;=Enter the code which indicates whether or not this is a Bedsection.
	;;^DD(399.1,.12,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.12,21,1,0)
	;;=This indicates whether or not this entry is a Bedsection.
	;;^DD(399.1,.12,"DT")
	;;=2901003
	;;^DD(399.1,.13,0)
	;;=DISCHARGE STATUS^S^1:YES;0:NO;^0;6^Q
	;;^DD(399.1,.13,3)
	;;=Enter the code which indicates whether or not this is a Discharge Status.
	;;^DD(399.1,.13,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.1,.13,21,1,0)
	;;=This indicates whether or not this entry is a Discharge Status.
	;;^DD(399.1,.13,"DT")
	;;=2901003
	;;^DD(399.1,.14,0)
	;;=IB ACTION TYPE (COPAYMENT)^P350.1'^IBE(350.1,^0;7^Q
	;;^DD(399.1,.14,1,0)
	;;=^.1
	;;^DD(399.1,.14,1,1,0)
	;;=399.1^AC
	;;^DD(399.1,.14,1,1,1)
	;;=S ^DGCR(399.1,"AC",$E(X,1,30),DA)=""
	;;^DD(399.1,.14,1,1,2)
	;;=K ^DGCR(399.1,"AC",$E(X,1,30),DA)
	;;^DD(399.1,.14,1,1,"%D",0)
	;;=^^5^5^2920407^^^
	;;^DD(399.1,.14,1,1,"%D",1,0)
	;;=This cross-reference is used to determine the billable bedsection for
	;;^DD(399.1,.14,1,1,"%D",2,0)
	;;=an Integrated Billing ACTION TYPE (file #350.2) for Means Test Inpatient
	;;^DD(399.1,.14,1,1,"%D",3,0)
	;;=or Nursing Home Care co-payment charges.  The actual charge for the action
	;;^DD(399.1,.14,1,1,"%D",4,0)
	;;=type is then found in the BILLING RATES file (#399.5), based on the
	;;^DD(399.1,.14,1,1,"%D",5,0)
	;;=bedsection and date of care.
	;;^DD(399.1,.14,1,1,"DT")
	;;=2920407
	;;^DD(399.1,.14,21,0)
	;;=^^6^6^2920415^^^
	;;^DD(399.1,.14,21,1,0)
	;;=This field will only be used for those bedsections which are included
	;;^DD(399.1,.14,21,2,0)
	;;=in the billing of Means Test/Category C charges.
	;;^DD(399.1,.14,21,3,0)
	;;= 
	;;^DD(399.1,.14,21,4,0)
	;;=The field is a pointer to the IB ACTION TYPE file.  Once the bedsection
	;;^DD(399.1,.14,21,5,0)
	;;=is derived from the patient's treating specialty, the IB ACTION TYPE
	;;^DD(399.1,.14,21,6,0)
	;;=for the Category C Inpatient/NHC co-payment charge can be determined.
	;;^DD(399.1,.14,"DT")
	;;=2920407
	;;^DD(399.1,.15,0)
	;;=IB ACTION TYPE (PER DIEM)^P350.1'^IBE(350.1,^0;8^Q
	;;^DD(399.1,.15,1,0)
	;;=^.1^^0
	;;^DD(399.1,.15,21,0)
	;;=^^6^6^2920415^^
	;;^DD(399.1,.15,21,1,0)
	;;=This field will only be used for those bedsections which are included
	;;^DD(399.1,.15,21,2,0)
	;;=in the billing of Means Test/Category C charges.
	;;^DD(399.1,.15,21,3,0)
	;;= 
	;;^DD(399.1,.15,21,4,0)
	;;=The field is a pointer to the IB ACTION TYPE file.  Once the bedsection
	;;^DD(399.1,.15,21,5,0)
	;;=is derived from the patient's treating specialty, the IB ACTION TYPE
	;;^DD(399.1,.15,21,6,0)
	;;=for the Category C Inpatient/NHC per diem charge can be determined.
	;;^DD(399.1,.15,"DT")
	;;=2920408
	;;^DD(399.1,.16,0)
	;;=OCC RELATED TO^*S^1:EMPLOYMENT;2:AUTO ACCIDENT;3:OTHER ACCIDENT;^0;9^Q
	;;^DD(399.1,.16,3)
	;;=Enter the code that most accurately relates to the Occurence Code.
	;;^DD(399.1,.16,12)
	;;=Valid MCCR Occurrence Codes only!
	;;^DD(399.1,.16,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.1,+DA,0),U,4)=1"
	;;^DD(399.1,.16,21,0)
	;;=^^2^2^2920428^
	;;^DD(399.1,.16,21,1,0)
	;;=Relates the Occurrence Codes to the 'Condition Related To' question on the
	;;^DD(399.1,.16,21,2,0)
	;;=HCFA 1500, block 10.
	;;^DD(399.1,.16,"DT")
	;;=2920428
	;;^DD(399.1,.17,0)
	;;=OCCURRENCE SPAN^*S^1:YES;0:NO;^0;10^Q
	;;^DD(399.1,.17,3)
	;;=Enter Yes if this Occurrence code has two related dates associated with it.
	;;^DD(399.1,.17,12)
	;;=Only Valid Occurrence Codes!

IBINI0B2
IBINI0B2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.1,.17,12.1)
	;;=S DIC("S")="I +$P(^DGCR(399.1,+DA,0),U,4)"
	;;^DD(399.1,.17,21,0)
	;;=^^2^2^2940103^^
	;;^DD(399.1,.17,21,1,0)
	;;=A code and related dates that identify an event that relates to the payment
	;;^DD(399.1,.17,21,2,0)
	;;=of the claim.
	;;^DD(399.1,.17,23,0)
	;;=^^2^2^2940103^^^^
	;;^DD(399.1,.17,23,1,0)
	;;=For Occurrence Spans both this flag and Occurrence Code must be set.
	;;^DD(399.1,.17,23,2,0)
	;;=Setting this flag indicates two dates are required.
	;;^DD(399.1,.17,"DT")
	;;=2940103
	;;^DD(399.1,.18,0)
	;;=VALUE CODE^S^1:YES;0:NO;^0;11^Q
	;;^DD(399.1,.18,3)
	;;=Enter Yes if this is a Value Code.
	;;^DD(399.1,.18,"DT")
	;;=2931221
	;;^DD(399.1,.19,0)
	;;=VALUE CODE AMOUNT^*S^1:YES;0:NO;^0;12^Q
	;;^DD(399.1,.19,3)
	;;=Enter Yes if the value associated with this code is a dollar amount.
	;;^DD(399.1,.19,12)
	;;=Only applies to value codes.
	;;^DD(399.1,.19,12.1)
	;;=S DIC("S")="I +$P(^DGCR(399.1,+DA,0),U,11)"
	;;^DD(399.1,.19,21,0)
	;;=^^2^2^2940103^^
	;;^DD(399.1,.19,21,1,0)
	;;=Enter Yes if the value amount associated with this value code should be
	;;^DD(399.1,.19,21,2,0)
	;;=right justified to the right of the delimiter, ie with cents printed.
	;;^DD(399.1,.19,23,0)
	;;=^^4^4^2940103^^^
	;;^DD(399.1,.19,23,1,0)
	;;=If this is true then the value amount for the value code is a dollar
	;;^DD(399.1,.19,23,2,0)
	;;=amount and should be right justified to the right of the 
	;;^DD(399.1,.19,23,3,0)
	;;=delimiter.  The value amounts for all other value codes will be right
	;;^DD(399.1,.19,23,4,0)
	;;=justified to the left of the delimiter.
	;;^DD(399.1,.19,"DT")
	;;=2940103

IBINI0B3
IBINI0B3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.1)
	;;=^DGCR(399.1,
	;;^UTILITY(U,$J,399.1,0)
	;;=MCCR UTILITY^399.1I^45^47
	;;^UTILITY(U,$J,399.1,1,0)
	;;=ALCOHOL AND DRUG TREATMENT^8^ETOH/DRUG^^1^^23^45
	;;^UTILITY(U,$J,399.1,2,0)
	;;=BLIND REHABILITATION^7^BLIND REHAB^^1^^21^45
	;;^UTILITY(U,$J,399.1,3,0)
	;;=GENERAL MEDICAL CARE^1^GEN MED CARE^^1^^15^45
	;;^UTILITY(U,$J,399.1,4,0)
	;;=INTERMEDIATE CARE^4^INTERMED CARE^^1^^19^45
	;;^UTILITY(U,$J,399.1,5,0)
	;;=NEUROLOGY^5^NEURO^^1^^22^45
	;;^UTILITY(U,$J,399.1,6,0)
	;;=NURSING HOME CARE^10^NURSING HOME^^1^^24^48
	;;^UTILITY(U,$J,399.1,7,0)
	;;=OUTPATIENT VISIT^12^OUTPATIENT^^1^^51
	;;^UTILITY(U,$J,399.1,8,0)
	;;=PRESCRIPTION^9^PRESCRIPT^^1
	;;^UTILITY(U,$J,399.1,9,0)
	;;=PSYCHIATRIC CARE^3^PSYCH CARE^^1^^18^45
	;;^UTILITY(U,$J,399.1,10,0)
	;;=REHABILITATION MEDICINE^6^REHAB MED^^1^^20^45
	;;^UTILITY(U,$J,399.1,11,0)
	;;=SPINAL CORD INJURY CARE^11^SCI CARE^^1^^17^45
	;;^UTILITY(U,$J,399.1,12,0)
	;;=SURGICAL CARE^2^SURG CARE^^1^^16^45
	;;^UTILITY(U,$J,399.1,13,0)
	;;=DISCHARGED TO ANOTHER SHORT-TERM GENERAL HOSPITAL^02^^^^1
	;;^UTILITY(U,$J,399.1,14,0)
	;;=DISCHARGED TO ANOTHER TYPE OF FACILITY^05^^^^1
	;;^UTILITY(U,$J,399.1,15,0)
	;;=DISCHARGED TO HOME OR SELF CARE^01^^^^1
	;;^UTILITY(U,$J,399.1,16,0)
	;;=DISCHARGED TO HOME UNDER CARE OF HOME HEALTH CARE SERVICE^06^^^^1
	;;^UTILITY(U,$J,399.1,17,0)
	;;=DISCHARGED TO INTERMEDIATE CARE FACILITY^04^^^^1
	;;^UTILITY(U,$J,399.1,18,0)
	;;=DISCHARGED TO SKILLED NURSING FACILITY^03^^^^1
	;;^UTILITY(U,$J,399.1,19,0)
	;;=EXPIRED^20^^^^1
	;;^UTILITY(U,$J,399.1,20,0)
	;;=LEFT AGAINST MEDICAL ADVICE^07^^^^1
	;;^UTILITY(U,$J,399.1,21,0)
	;;=STILL PATIENT^30^^^^1
	;;^UTILITY(U,$J,399.1,22,0)
	;;=LAST MENSTRUAL PERIOD^10^^1
	;;^UTILITY(U,$J,399.1,23,0)
	;;=ONSET OF SYMPTOMS/ILLNESS^11^^1
	;;^UTILITY(U,$J,399.1,24,0)
	;;=AUTO ACCIDENT                            ^01^^1^^^^^2
	;;^UTILITY(U,$J,399.1,25,0)
	;;=AUTO ACCIDENT/NO FAULT INSURANCE INVOLVED^02^^1^^^^^2^
	;;^UTILITY(U,$J,399.1,26,0)
	;;=ACCIDENT/TORT LIABILITY                  ^03^^1^^^^^
	;;^UTILITY(U,$J,399.1,27,0)
	;;=ACCIDENT/EMPLOYMENT RELATED              ^04^^1^^^^^1
	;;^UTILITY(U,$J,399.1,28,0)
	;;=OTHER ACCIDENT                           ^05^^1^^^^^3
	;;^UTILITY(U,$J,399.1,29,0)
	;;=CRIME VICTIM                             ^06^^1
	;;^UTILITY(U,$J,399.1,30,0)
	;;=NON-VA CARE^^NON-VA^^1
	;;^UTILITY(U,$J,399.1,31,0)
	;;=OUTPATIENT DENTAL^^OPT DNTL^^1
	;;^UTILITY(U,$J,399.1,32,0)
	;;=DISCHARGED TO HOME UNDER CARE OF A HOME IV PROVIDER^08^^^^1
	;;^UTILITY(U,$J,399.1,33,0)
	;;=PRIOR STAY DATES^71^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,34,0)
	;;=QUALIFYING STAY DATES FOR SNF USE ONLY^70^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,35,0)
	;;=FIRST/LAST VISIT^72^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,36,0)
	;;=BENEFIT ELIGIBILITY PERIOD^73^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,37,0)
	;;=NONCOVERED LEVEL OF CARE^74^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,38,0)
	;;=SNF LEVEL OF CARE^75^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,39,0)
	;;=PATIENT LIABILITY^76^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,40,0)
	;;=PROVIDER LIABILITY PERIOD^77^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,41,0)
	;;=SNF PRIOR STAY DATES^78^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,42,0)
	;;=PAYER CODE^79^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,43,0)
	;;=PRO/UR APPROVED STAY DATES^M0^^1^^^^^^1
	;;^UTILITY(U,$J,399.1,44,0)
	;;=INPATIENT PROFESSIONAL COMPONENT CHARGES, COMBINED BILLED^04^^^^^^^^^1
	;;^UTILITY(U,$J,399.1,45,0)
	;;=NO FAULT, INCLUDING AUTO/OTHER^14^^^^^^^^^1^1
	;;^UTILITY(U,$J,399.1,46,0)
	;;=WORKER'S COMPENSATION^15^^^^^^^^^1^
	;;^UTILITY(U,$J,399.1,47,0)
	;;=ACCIDENT HOUR^45^^^^^^^^^1

IBINI0B4
IBINI0B4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.1)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q

IBINI0B5
IBINI0B5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399.2,0,"GL")
	;;=^DGCR(399.2,
	;;^DIC("B","REVENUE CODE",399.2)
	;;=
	;;^DIC(399.2,"%D",0)
	;;=^^4^4^2940215^^^^
	;;^DIC(399.2,"%D",1,0)
	;;=This file contains all of the Revenue Codes which may be used on the
	;;^DIC(399.2,"%D",2,0)
	;;=Third Party claim forms.
	;;^DIC(399.2,"%D",3,0)
	;;= 
	;;^DIC(399.2,"%D",4,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399.2,0)
	;;=FIELD^^4^5
	;;^DD(399.2,0,"DDA")
	;;=N
	;;^DD(399.2,0,"DT")
	;;=2931221
	;;^DD(399.2,0,"ID",1)
	;;=W "   ",$P(^(0),U,2)
	;;^DD(399.2,0,"ID",3)
	;;=W "   ",$P(^(0),U,4)
	;;^DD(399.2,0,"IX","AC",399.2,2)
	;;=
	;;^DD(399.2,0,"IX","B",399.2,.01)
	;;=
	;;^DD(399.2,0,"IX","C",399.2,1)
	;;=
	;;^DD(399.2,0,"IX","D1",399.2,2)
	;;=
	;;^DD(399.2,0,"IX","E",399.2,3)
	;;=
	;;^DD(399.2,0,"IX","F",399.2,.01)
	;;=
	;;^DD(399.2,0,"NM","REVENUE CODE")
	;;=
	;;^DD(399.2,0,"PT",36,.09)
	;;=
	;;^DD(399.2,0,"PT",36,.15)
	;;=
	;;^DD(399.2,0,"PT",350.9,1.18)
	;;=
	;;^DD(399.2,0,"PT",350.9,1.28)
	;;=
	;;^DD(399.2,0,"PT",399.042,.01)
	;;=
	;;^DD(399.2,0,"PT",399.5,.03)
	;;=
	;;^DD(399.2,.01,0)
	;;=REVENUE CODE^RFXI^^0;1^K:X[""""!($A(X)=45) X I $D(X) S:$L(X)<3 X=$E("000",1,3-$L(X))_X K:X="000" X K:$L(X)>3!($L(X)<3)!'(X?3N) X I $D(X) S DINUM=+X K X
	;;^DD(399.2,.01,1,0)
	;;=^.1^^-1
	;;^DD(399.2,.01,1,1,0)
	;;=399.2^B
	;;^DD(399.2,.01,1,1,1)
	;;=S ^DGCR(399.2,"B",$E(X,1,30),DA)=""
	;;^DD(399.2,.01,1,1,2)
	;;=K ^DGCR(399.2,"B",$E(X,1,30),DA)
	;;^DD(399.2,.01,1,3,0)
	;;=399.2^F^MUMPS
	;;^DD(399.2,.01,1,3,1)
	;;=I +X,+X<100 S ^DGCR(399.2,"F",+X,DA)=""
	;;^DD(399.2,.01,1,3,2)
	;;=K ^DGCR(399.2,"F",+X,DA)
	;;^DD(399.2,.01,1,3,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.2,.01,1,3,"%D",1,0)
	;;=All revenue codes less than 100.
	;;^DD(399.2,.01,3)
	;;=Enter the 3-digit numeric code associated with this entry.
	;;^DD(399.2,.01,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.2,.01,21,1,0)
	;;=This is the 3-digit numeric code associated with this entry.
	;;^DD(399.2,.01,"DT")
	;;=2901003
	;;^DD(399.2,1,0)
	;;=STANDARD ABBREVIATION^FX^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>60!($L(X)<1)!'(X?1"*".A!(X?1A.E)) X I $D(X),$E(X)="*" S X=X_"RESERVED" K X
	;;^DD(399.2,1,1,0)
	;;=^.1
	;;^DD(399.2,1,1,1,0)
	;;=399.2^C
	;;^DD(399.2,1,1,1,1)
	;;=S ^DGCR(399.2,"C",$E(X,1,30),DA)=""
	;;^DD(399.2,1,1,1,2)
	;;=K ^DGCR(399.2,"C",$E(X,1,30),DA)
	;;^DD(399.2,1,1,2,0)
	;;=^^TRIGGER^399.2^3
	;;^DD(399.2,1,1,2,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=$E(X)="*" I X S X=DIV S Y(1)=$S($D(^DGCR(399.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=DIV X ^DD(399.2,1,1,2,1.4)
	;;^DD(399.2,1,1,2,1.4)
	;;=S DIH=$S($D(^DGCR(399.2,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=399.2,DIG=3 D ^DICR:$N(^DD(DIH,DIG,1,0))>0
	;;^DD(399.2,1,1,2,2)
	;;=Q
	;;^DD(399.2,1,1,2,"CREATE CONDITION")
	;;=$E(STANDARD ABBREVIATION)="*"
	;;^DD(399.2,1,1,2,"CREATE VALUE")
	;;=STANDARD ABBREVIATION
	;;^DD(399.2,1,1,2,"DELETE VALUE")
	;;=NO EFFECT
	;;^DD(399.2,1,1,2,"FIELD")
	;;=DESCRIPTION
	;;^DD(399.2,1,3)
	;;=Enter the 1-60 character abbreviation of the description field of this entry.
	;;^DD(399.2,1,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.2,1,21,1,0)
	;;=This is the abbreviation of the description field of this entry.
	;;^DD(399.2,1,"DT")
	;;=2880831
	;;^DD(399.2,2,0)
	;;=ACTIVATE^RSX^1:ACTIVATE CODE;0:INACTIVATE CODE;^0;3^Q:'X  S %=^DGCR(399.2,+DA,0) I $E($P(%,"^",2))="*"!($E($P(%,"^",4))="*") W !?4,"Can't activate a RESERVED code...",*7 K X
	;;^DD(399.2,2,1,0)
	;;=^.1
	;;^DD(399.2,2,1,1,0)
	;;=399.2^AC^MUMPS
	;;^DD(399.2,2,1,1,1)
	;;=I $P(^DGCR(399.2,DA,0),"^",3)=1 S ^DGCR(399.2,"AC",DA)=""

IBINI0B6
IBINI0B6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.2,2,1,1,2)
	;;=K ^DGCR(399.2,"AC",DA)
	;;^DD(399.2,2,1,1,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.2,2,1,1,"%D",1,0)
	;;=Cross reference of all active revenue codes.
	;;^DD(399.2,2,1,2,0)
	;;=399.2^D1^MUMPS
	;;^DD(399.2,2,1,2,1)
	;;=S Z1=+X,Z=$P(^DGCR(399.2,DA,0),"^",1) X ^DD(399.2,2,9.3)
	;;^DD(399.2,2,1,2,2)
	;;=S Z1=+X,Z=$P(^DGCR(399.2,DA,0),"^",1) X ^DD(399.2,2,9.4)
	;;^DD(399.2,2,3)
	;;=Enter 'A' or '1' if you want to activate this code for usage. 'I' or '0' if you want this code to remain inactive.
	;;^DD(399.2,2,9.3)
	;;=S:Z1 ^DGCR(399.2,"D",Z,DA)="" K Z,Z1
	;;^DD(399.2,2,9.4)
	;;=K ^DGCR(399.2,"D",Z,DA),Z,Z1
	;;^DD(399.2,2,21,0)
	;;=^^1^1^2931221^^^^
	;;^DD(399.2,2,21,1,0)
	;;=This indicates whether or not this revenue code has been activated for use.
	;;^DD(399.2,2,"DT")
	;;=2931221
	;;^DD(399.2,3,0)
	;;=DESCRIPTION^RFX^^0;4^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>60!($L(X)<2) X
	;;^DD(399.2,3,1,0)
	;;=^.1
	;;^DD(399.2,3,1,1,0)
	;;=399.2^E^KWIC
	;;^DD(399.2,3,1,1,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?!'-/&:;)\|*#+`="[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^DGCR(399.2,"E",I,DA)=""
	;;^DD(399.2,3,1,1,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?!'-/&:;)\|*#+`="[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^DGCR(399.2,"E",I,DA)
	;;^DD(399.2,3,3)
	;;=Enter the 2-60 character description of this revenue code.
	;;^DD(399.2,3,5,1,0)
	;;=399.2^1^2
	;;^DD(399.2,3,21,0)
	;;=^^1^1^2931220^^
	;;^DD(399.2,3,21,1,0)
	;;=This is the full length description of this entry.
	;;^DD(399.2,3,"DT")
	;;=2931220
	;;^DD(399.2,4,0)
	;;=ALL INCLUSIVE^SX^0:NO;1:YES;^0;5^K X
	;;^DD(399.2,4,3)
	;;=Enter the code which indicates if this revenue code is an all inclusive rate.
	;;^DD(399.2,4,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.2,4,21,1,0)
	;;=This indicates whether or not this revenue code is an all inclusive rate.
	;;^DD(399.2,4,"DT")
	;;=2880831

IBINI0B7
IBINI0B7	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2)
	;;=^DGCR(399.2,
	;;^UTILITY(U,$J,399.2,0)
	;;=REVENUE CODE^399.2I^999^999
	;;^UTILITY(U,$J,399.2,1,0)
	;;=001^TOTAL CHARGE^1^TOTAL CHARGE
	;;^UTILITY(U,$J,399.2,2,0)
	;;=002^*RESERVED^0^*RESERVED
	;;^UTILITY(U,$J,399.2,3,0)
	;;=003^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,4,0)
	;;=004^*RESERVED^0^*RESERVED
	;;^UTILITY(U,$J,399.2,5,0)
	;;=005^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,6,0)
	;;=006^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,7,0)
	;;=007^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,8,0)
	;;=008^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,9,0)
	;;=009^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,10,0)
	;;=010^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,11,0)
	;;=011^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,12,0)
	;;=012^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,13,0)
	;;=013^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,14,0)
	;;=014^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,15,0)
	;;=015^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,16,0)
	;;=016^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,17,0)
	;;=017^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,18,0)
	;;=018^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,19,0)
	;;=019^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,20,0)
	;;=020^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,21,0)
	;;=021^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,22,0)
	;;=022^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,23,0)
	;;=023^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,24,0)
	;;=024^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,25,0)
	;;=025^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,26,0)
	;;=026^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,27,0)
	;;=027^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,28,0)
	;;=028^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,29,0)
	;;=029^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,30,0)
	;;=030^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,31,0)
	;;=031^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,32,0)
	;;=032^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,33,0)
	;;=033^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,34,0)
	;;=034^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,35,0)
	;;=035^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,36,0)
	;;=036^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,37,0)
	;;=037^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,38,0)
	;;=038^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,39,0)
	;;=039^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,40,0)
	;;=040^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,41,0)
	;;=041^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,42,0)
	;;=042^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,43,0)
	;;=043^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,44,0)
	;;=044^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,45,0)
	;;=045^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,46,0)
	;;=046^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,47,0)
	;;=047^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,48,0)
	;;=048^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,49,0)
	;;=049^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,50,0)
	;;=050^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,51,0)
	;;=051^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,52,0)
	;;=052^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,53,0)
	;;=053^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,54,0)
	;;=054^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,55,0)
	;;=055^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,56,0)
	;;=056^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,57,0)
	;;=057^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,58,0)
	;;=058^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,59,0)
	;;=059^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,60,0)
	;;=060^*RESERVED^^*RESERVED

IBINI0B8
IBINI0B8	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,61,0)
	;;=061^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,62,0)
	;;=062^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,63,0)
	;;=063^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,64,0)
	;;=064^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,65,0)
	;;=065^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,66,0)
	;;=066^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,67,0)
	;;=067^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,68,0)
	;;=068^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,69,0)
	;;=069^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,70,0)
	;;=070^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,71,0)
	;;=071^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,72,0)
	;;=072^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,73,0)
	;;=073^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,74,0)
	;;=074^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,75,0)
	;;=075^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,76,0)
	;;=076^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,77,0)
	;;=077^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,78,0)
	;;=078^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,79,0)
	;;=079^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,80,0)
	;;=080^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,81,0)
	;;=081^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,82,0)
	;;=082^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,83,0)
	;;=083^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,84,0)
	;;=084^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,85,0)
	;;=085^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,86,0)
	;;=086^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,87,0)
	;;=087^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,88,0)
	;;=088^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,89,0)
	;;=089^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,90,0)
	;;=090^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,91,0)
	;;=091^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,92,0)
	;;=092^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,93,0)
	;;=093^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,94,0)
	;;=094^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,95,0)
	;;=095^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,96,0)
	;;=096^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,97,0)
	;;=097^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,98,0)
	;;=098^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,99,0)
	;;=099^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,100,0)
	;;=100^ALL INCL R&B/ANC^1^ALL-INCLUSIVE ROOM AND BOARD PLUS ANCILLARY
	;;^UTILITY(U,$J,399.2,101,0)
	;;=101^ALL INCL R&B^1^ALL-INCLUSIVE ROOM AND BOARD
	;;^UTILITY(U,$J,399.2,102,0)
	;;=102^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,103,0)
	;;=103^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,104,0)
	;;=104^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,105,0)
	;;=105^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,106,0)
	;;=106^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,107,0)
	;;=107^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,108,0)
	;;=108^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,109,0)
	;;=109^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,110,0)
	;;=110^ROOM-BOARD/PVT^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,111,0)
	;;=111^MED-SUR-GY/PVT^^MEDICAL/SURGICAL/GYN
	;;^UTILITY(U,$J,399.2,112,0)
	;;=112^OB/PVT^^OB
	;;^UTILITY(U,$J,399.2,113,0)
	;;=113^PEDS/PVT^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,114,0)
	;;=114^PSYCH/PVT^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,115,0)
	;;=115^HOSPICE/PVT^^HOSPICE
	;;^UTILITY(U,$J,399.2,116,0)
	;;=116^DETOX/PVT^^DETOXIFICATION
	;;^UTILITY(U,$J,399.2,117,0)
	;;=117^ONCOLOGY/PVT^^ONCOLOGY
	;;^UTILITY(U,$J,399.2,118,0)
	;;=118^REHAB/PVT^^REHABILITATION
	;;^UTILITY(U,$J,399.2,119,0)
	;;=119^OTHER/PVT^^OTHER
	;;^UTILITY(U,$J,399.2,120,0)
	;;=120^ROOM-BOARD/SEMI^^GENERAL CLASSIFICATION

IBINI0B9
IBINI0B9	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,121,0)
	;;=121^MED-SUR-GY/2BED^^MEDICAL/SURGICAL/GYN
	;;^UTILITY(U,$J,399.2,122,0)
	;;=122^OB/2BED^^OB
	;;^UTILITY(U,$J,399.2,123,0)
	;;=123^PEDS/2BED^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,124,0)
	;;=124^PSTAY/2BED^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,125,0)
	;;=125^HOSPICE/2BED^^HOSPICE
	;;^UTILITY(U,$J,399.2,126,0)
	;;=126^DETOX/2BED^^DETOXIFICATION
	;;^UTILITY(U,$J,399.2,127,0)
	;;=127^ONCOLOGY/2BED^^ONCOLOGY
	;;^UTILITY(U,$J,399.2,128,0)
	;;=128^REHAB/2BED^^REHABILITATION
	;;^UTILITY(U,$J,399.2,129,0)
	;;=129^OTHER/2BED^^OTHER
	;;^UTILITY(U,$J,399.2,130,0)
	;;=130^ROOM-BOARD/3&4BED^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,131,0)
	;;=131^MED-SUR-GY/3&4^^MEDICAL/SURGICAL/GYN
	;;^UTILITY(U,$J,399.2,132,0)
	;;=132^OB/3&4BED^^OB
	;;^UTILITY(U,$J,399.2,133,0)
	;;=133^PEDS/3&4BED^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,134,0)
	;;=134^PSYCH/3&4BED^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,135,0)
	;;=135^HOSPICE/3&4BED^^HOSPICE
	;;^UTILITY(U,$J,399.2,136,0)
	;;=136^DETOX/3&4BED^^DETOXIFICATION
	;;^UTILITY(U,$J,399.2,137,0)
	;;=137^ONCOLOGY/3&4BED^^ONCOLOGY
	;;^UTILITY(U,$J,399.2,138,0)
	;;=138^REHAB/3&4BED^^REHABILITATION
	;;^UTILITY(U,$J,399.2,139,0)
	;;=139^OTHER/3&4BED^^OTHER
	;;^UTILITY(U,$J,399.2,140,0)
	;;=140^ROOM-BOARD/PVT/DLX^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,141,0)
	;;=141^MED-SUR-GY/DLX^^MEDICAL/SURGICAL/GYN
	;;^UTILITY(U,$J,399.2,142,0)
	;;=142^OB/DLX^^OB
	;;^UTILITY(U,$J,399.2,143,0)
	;;=143^PEDS/DLX^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,144,0)
	;;=144^PSYCH/DLX^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,145,0)
	;;=145^HOSPICE/DLX^^HOSPICE
	;;^UTILITY(U,$J,399.2,146,0)
	;;=146^DETOX/DLX^^DETOXIFICATION
	;;^UTILITY(U,$J,399.2,147,0)
	;;=147^ONCOLOGY/DLX^^ONCOLOGY
	;;^UTILITY(U,$J,399.2,148,0)
	;;=148^REHAB/DLX^^REHABILITATION
	;;^UTILITY(U,$J,399.2,149,0)
	;;=149^OTHER/DLX^^OTHER
	;;^UTILITY(U,$J,399.2,150,0)
	;;=150^ROOM-BOARD/WARD^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,151,0)
	;;=151^MED-SUR-GY/WARD^^MEDICAL/SURGICAL/GYN
	;;^UTILITY(U,$J,399.2,152,0)
	;;=152^OB/WARD^^OB
	;;^UTILITY(U,$J,399.2,153,0)
	;;=153^PEDS/WARD^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,154,0)
	;;=154^PSYCH/WARD^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,155,0)
	;;=155^HOSPICE/WARD^^HOSPICE
	;;^UTILITY(U,$J,399.2,156,0)
	;;=156^DETOX/WARD^^DETOXIFICATION
	;;^UTILITY(U,$J,399.2,157,0)
	;;=157^ONCOLOGY/WARD^^ONCOLOGY
	;;^UTILITY(U,$J,399.2,158,0)
	;;=158^REHAB/WARD^^REHABILITATION
	;;^UTILITY(U,$J,399.2,159,0)
	;;=159^OTHER/WARD^^OTHER
	;;^UTILITY(U,$J,399.2,160,0)
	;;=160^R&B^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,161,0)
	;;=161^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,162,0)
	;;=162^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,163,0)
	;;=163^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,164,0)
	;;=164^R&B/STERILE^^STERILE ENVIRONMENT
	;;^UTILITY(U,$J,399.2,165,0)
	;;=165^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,166,0)
	;;=166^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,167,0)
	;;=167^R&B/SELF^^SELF CARE
	;;^UTILITY(U,$J,399.2,168,0)
	;;=168^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,169,0)
	;;=169^R&B/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,170,0)
	;;=170^NURSERY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,171,0)
	;;=171^NURSERY/NEWBORN^^NEWBORN
	;;^UTILITY(U,$J,399.2,172,0)
	;;=172^NURSERY/PREMIE^^PREMATURE
	;;^UTILITY(U,$J,399.2,173,0)
	;;=173^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,174,0)
	;;=174^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,175,0)
	;;=175^NURSERY/ICU^^NEONATAL ICU
	;;^UTILITY(U,$J,399.2,176,0)
	;;=176^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,177,0)
	;;=177^*RESERVED^^*RESERVED

IBINI0BA
IBINI0BA	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,178,0)
	;;=178^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,179,0)
	;;=179^NURSERY/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,180,0)
	;;=180^LEAVE OF ABSENCE OR LOA^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,181,0)
	;;=181^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,182,0)
	;;=182^LOA/PT CONV^^PATIENT CONVENIENCE
	;;^UTILITY(U,$J,399.2,183,0)
	;;=183^LOA/THERAPEUTIC^^THERAPEUTIC LEAVE
	;;^UTILITY(U,$J,399.2,184,0)
	;;=184^LOA/ICF/MR^^ICF/MR-ANY REASON
	;;^UTILITY(U,$J,399.2,185,0)
	;;=185^LOA/NURS HOME^^NURSING HOME (FOR HOSPITALIZATION)
	;;^UTILITY(U,$J,399.2,186,0)
	;;=186^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,187,0)
	;;=187^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,188,0)
	;;=188^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,189,0)
	;;=189^LOA/OTHER^^OTHER LEAVE OF ABSENCE
	;;^UTILITY(U,$J,399.2,190,0)
	;;=190^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,191,0)
	;;=191^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,192,0)
	;;=192^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,193,0)
	;;=193^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,194,0)
	;;=194^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,195,0)
	;;=195^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,196,0)
	;;=196^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,197,0)
	;;=197^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,198,0)
	;;=198^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,199,0)
	;;=199^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,200,0)
	;;=200^INTENSIVE CARE OR (ICU)^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,201,0)
	;;=201^ICU/SURGICAL^^SURGICAL
	;;^UTILITY(U,$J,399.2,202,0)
	;;=202^ICU/MEDICAL^^MEDICAL
	;;^UTILITY(U,$J,399.2,203,0)
	;;=203^ICU PEDS^^PEDIATRIC
	;;^UTILITY(U,$J,399.2,204,0)
	;;=204^ICU/PSTAY^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,205,0)
	;;=205^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,206,0)
	;;=206^POST ICU^^POST ICU
	;;^UTILITY(U,$J,399.2,207,0)
	;;=207^ICU/BURN CARE^^BURN CARE
	;;^UTILITY(U,$J,399.2,208,0)
	;;=208^ICU/TRAMA^^TRAUMA
	;;^UTILITY(U,$J,399.2,209,0)
	;;=209^ICU/OTHER^^OTHER INTENSIVE CARE
	;;^UTILITY(U,$J,399.2,210,0)
	;;=210^CORONARY CARE OR (CCU)^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,211,0)
	;;=211^CCU/MYO INFARC^^MYOCARDIAL INFARCTION
	;;^UTILITY(U,$J,399.2,212,0)
	;;=212^CCU/PULMONARY^^PULMONARY CARE
	;;^UTILITY(U,$J,399.2,213,0)
	;;=213^CCU/TRANSPLANT^^HEART TRANSPLANT
	;;^UTILITY(U,$J,399.2,214,0)
	;;=214^POST CCU^^POST-CCU
	;;^UTILITY(U,$J,399.2,215,0)
	;;=215^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,216,0)
	;;=216^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,217,0)
	;;=217^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,218,0)
	;;=218^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,219,0)
	;;=219^CCU/OTHER^^OTHER CORONARY CARE
	;;^UTILITY(U,$J,399.2,220,0)
	;;=220^SPECIAL CHARGES^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,221,0)
	;;=221^ADMIT CHARGE^^ADMISSION CHARGE
	;;^UTILITY(U,$J,399.2,222,0)
	;;=222^TECH SUPPORT CHG^^TECHNICAL SUPPPORT CHARGE
	;;^UTILITY(U,$J,399.2,223,0)
	;;=223^UR CHARGE^^U.R. SERVICE CHARGE
	;;^UTILITY(U,$J,399.2,224,0)
	;;=224^LATE DISCH/MED NEC^^LATE DISCHARGE,MEDICALLY NECESSARY
	;;^UTILITY(U,$J,399.2,225,0)
	;;=225^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,226,0)
	;;=226^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,227,0)
	;;=227^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,228,0)
	;;=228^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,229,0)
	;;=229^OTHER SPEC CHG^^OTHER SPECIAL CHARGES
	;;^UTILITY(U,$J,399.2,230,0)
	;;=230^NURSING INCREM^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,231,0)
	;;=231^NUR INCR/NURSERY^^NURSERY
	;;^UTILITY(U,$J,399.2,232,0)
	;;=232^NURS INCR/OB^^OB

IBINI0BB
IBINI0BB	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,233,0)
	;;=233^NUR INCR/ICU^^ICU
	;;^UTILITY(U,$J,399.2,234,0)
	;;=234^NUR INCR/CCU^^CCU
	;;^UTILITY(U,$J,399.2,235,0)
	;;=235^NUR INCR/HOSPICE^^HOSPICE
	;;^UTILITY(U,$J,399.2,236,0)
	;;=236^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,237,0)
	;;=237^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,238,0)
	;;=238^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,239,0)
	;;=239^NUR INCR/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,240,0)
	;;=240^ALL INCL ANCIL^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,241,0)
	;;=241^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,242,0)
	;;=242^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,243,0)
	;;=243^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,244,0)
	;;=244^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,245,0)
	;;=245^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,246,0)
	;;=246^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,247,0)
	;;=247^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,248,0)
	;;=248^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,249,0)
	;;=249^ALL INCL ANCIL/OTHER^^OTHER INCLUSIVE ANCILLARY
	;;^UTILITY(U,$J,399.2,250,0)
	;;=250^PHARMACY^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,251,0)
	;;=251^DRUGS/GENERIC^^GENERIC DRUGS
	;;^UTILITY(U,$J,399.2,252,0)
	;;=252^DRUGS/NONGENERIC^^NON-GENERIC DRUGS
	;;^UTILITY(U,$J,399.2,253,0)
	;;=253^DRUGS/TAKEHOME^^TAKE HOME DRUGS
	;;^UTILITY(U,$J,399.2,254,0)
	;;=254^DRUGS/INCIDNT OTHER DX^^DRUGS INCIDENT TO OTHER DIAGNOSTIC SERVICES
	;;^UTILITY(U,$J,399.2,255,0)
	;;=255^DRUGS/INCIDENT RAD^^DRUGS INCIDENT TO RADIOLOGY
	;;^UTILITY(U,$J,399.2,256,0)
	;;=256^DRUGS/EXPERIMT^^EXPERIMENTAL DRUGS
	;;^UTILITY(U,$J,399.2,257,0)
	;;=257^DRGS/NONSCRPT^1^NON-PRESCRIPTION
	;;^UTILITY(U,$J,399.2,258,0)
	;;=258^IV SOLUTIONS^^IV SOLUTIONS
	;;^UTILITY(U,$J,399.2,259,0)
	;;=259^DRGS/OTHER^^OTHER PHARMACY
	;;^UTILITY(U,$J,399.2,260,0)
	;;=260^IV THERAPY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,261,0)
	;;=261^IV THER/INFSN PUMP^^INFUSION PUMP
	;;^UTILITY(U,$J,399.2,262,0)
	;;=262^IV THER/PHARM/SVC^^IV THERAPY/PHARMACY SVCS
	;;^UTILITY(U,$J,399.2,263,0)
	;;=263^IV THER/DRUG/SUPPLY DELV^^IV THERAPY/DRUG/SUPPLY DELIVERY
	;;^UTILITY(U,$J,399.2,264,0)
	;;=264^IV THER/SUPPLIES^^IV THERAPY/SUPPLIES
	;;^UTILITY(U,$J,399.2,265,0)
	;;=265^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,266,0)
	;;=266^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,267,0)
	;;=267^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,268,0)
	;;=268^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,269,0)
	;;=269^IV THERAPY/OTHER^^OTHER IV THERAPY
	;;^UTILITY(U,$J,399.2,270,0)
	;;=270^MED-SUR SUPPLIES^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,271,0)
	;;=271^NON-STER SUPPLY^^NON STERILE SUPPLY
	;;^UTILITY(U,$J,399.2,272,0)
	;;=272^STERILE SUPPLY^^STERILE SUPPLY
	;;^UTILITY(U,$J,399.2,273,0)
	;;=273^TAKEHOME SUPPLY^^TAKE HOME SUPPLIES
	;;^UTILITY(U,$J,399.2,274,0)
	;;=274^PROSTH/ORTH DEV^1^PROSTHETIC/ORTHOTIC DEVICES
	;;^UTILITY(U,$J,399.2,275,0)
	;;=275^PACE MAKER^^PACE MAKER
	;;^UTILITY(U,$J,399.2,276,0)
	;;=276^INTRA OC LENS^^INTRAOCULAR LENS
	;;^UTILITY(U,$J,399.2,277,0)
	;;=277^O2/TAKEHOME^^OXYGEN-TAKE HOME
	;;^UTILITY(U,$J,399.2,278,0)
	;;=278^SUPPLY/IMPLANTS^^OTHER IMPLANTS
	;;^UTILITY(U,$J,399.2,279,0)
	;;=279^SUPPLY/OTHER^^OTHER SUPPLIES/DEVICES
	;;^UTILITY(U,$J,399.2,280,0)
	;;=280^ONCOLOGY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,281,0)
	;;=281^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,282,0)
	;;=282^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,283,0)
	;;=283^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,284,0)
	;;=284^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,285,0)
	;;=285^*RESERVED^^*RESERVED

IBINI0BC
IBINI0BC	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,286,0)
	;;=286^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,287,0)
	;;=287^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,288,0)
	;;=288^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,289,0)
	;;=289^ONCOLOGY/OTHER^^OTHER ONCOLOGY
	;;^UTILITY(U,$J,399.2,290,0)
	;;=290^MED EQUIP/DURAB^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,291,0)
	;;=291^MED EQUIP/RENT^^RENTAL
	;;^UTILITY(U,$J,399.2,292,0)
	;;=292^MED EQUIP/NEW^^PURCHASE OF NEW DME
	;;^UTILITY(U,$J,399.2,293,0)
	;;=293^MED EQUIP/USED^^PURCHASE OF USED DME
	;;^UTILITY(U,$J,399.2,294,0)
	;;=294^MED EQUIP/SUPPLIES/DRUGS^^SUPPLIES/DRUGS FOR DME EFFECTIVENESS HOME-HEALTH AGENCY ONLY
	;;^UTILITY(U,$J,399.2,295,0)
	;;=295^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,296,0)
	;;=296^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,297,0)
	;;=297^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,298,0)
	;;=298^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,299,0)
	;;=299^MED EQUIP/OTHER^^OTHER EQUIPMENT
	;;^UTILITY(U,$J,399.2,300,0)
	;;=300^LABORATORY OR (LAB)^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,301,0)
	;;=301^LAB/CHEMISTRY^^CHEMISTRY
	;;^UTILITY(U,$J,399.2,302,0)
	;;=302^LAB/IMMUNOLOGY^^IMMUNOLOGY
	;;^UTILITY(U,$J,399.2,303,0)
	;;=303^LAB/RENAL HOME^^RENAL PATIENT (HOME)
	;;^UTILITY(U,$J,399.2,304,0)
	;;=304^LAB/NR DIALYSIS^^NON-ROUTINE DIALYSIS
	;;^UTILITY(U,$J,399.2,305,0)
	;;=305^LAB/HEMATOLOGY^^HEMATOLOGY
	;;^UTILITY(U,$J,399.2,306,0)
	;;=306^LAB/BACT-MICRO^^BACTERIOLOGY & MICROBIOLOGY
	;;^UTILITY(U,$J,399.2,307,0)
	;;=307^LAB/UROLOGY^^UROLOGY
	;;^UTILITY(U,$J,399.2,308,0)
	;;=308^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,309,0)
	;;=309^LAB/OTHER^^OTHER LABORATORY
	;;^UTILITY(U,$J,399.2,310,0)
	;;=310^PATHOLOGY LAB OR (PATH LAB)^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,311,0)
	;;=311^PATHOL/CYTOLOGY^^CYTOLOGY
	;;^UTILITY(U,$J,399.2,312,0)
	;;=312^PATHOL/HYSTOL^^HISTOLOGY
	;;^UTILITY(U,$J,399.2,313,0)
	;;=313^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,314,0)
	;;=314^PATHOL/BIOPSY^^BIOPSY
	;;^UTILITY(U,$J,399.2,315,0)
	;;=315^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,316,0)
	;;=316^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,317,0)
	;;=317^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,318,0)
	;;=318^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,319,0)
	;;=319^PATHOL/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,320,0)
	;;=320^DX X-RAY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,321,0)
	;;=321^DX X-RAY/ANGIO^^ANGIOCARDIOGRAPHY
	;;^UTILITY(U,$J,399.2,322,0)
	;;=322^DX X-RAY/ARTH^^ARTHROGRAPHY
	;;^UTILITY(U,$J,399.2,323,0)
	;;=323^DX X-RAY/ARTER^^ARTERIOGRAPHY
	;;^UTILITY(U,$J,399.2,324,0)
	;;=324^DX X-RAY/CHEST^^CHEST X-RAY
	;;^UTILITY(U,$J,399.2,325,0)
	;;=325^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,326,0)
	;;=326^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,327,0)
	;;=327^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,328,0)
	;;=328^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,329,0)
	;;=329^DX X-RAY/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,330,0)
	;;=330^RX X-RAY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,331,0)
	;;=331^CHEMOTHER/INJ^^CHEMOTHERAPY - INJECTED
	;;^UTILITY(U,$J,399.2,332,0)
	;;=332^CHEMOTHER/ORAL^^CHEMOTHERAPY - ORAL
	;;^UTILITY(U,$J,399.2,333,0)
	;;=333^RADIATION RX^1^RADIATION THERAPY
	;;^UTILITY(U,$J,399.2,334,0)
	;;=334^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,335,0)
	;;=335^CHEMOTHERP-IV^^CHEMOTHERAPY - IV
	;;^UTILITY(U,$J,399.2,336,0)
	;;=336^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,337,0)
	;;=337^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,338,0)
	;;=338^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,339,0)
	;;=339^RX X-RAY/OTHER^^OTHER

IBINI0BD
IBINI0BD	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,340,0)
	;;=340^NUCLEAR MEDICINE OR (NUC MED)^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,341,0)
	;;=341^NUC MED/DX^^DIAGNOSTIC
	;;^UTILITY(U,$J,399.2,342,0)
	;;=342^NUC MED/RX^^THERAPEUTIC
	;;^UTILITY(U,$J,399.2,343,0)
	;;=343^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,344,0)
	;;=344^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,345,0)
	;;=345^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,346,0)
	;;=346^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,347,0)
	;;=347^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,348,0)
	;;=348^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,349,0)
	;;=349^NUC MED/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,350,0)
	;;=350^CT SCAN^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,351,0)
	;;=351^CT SCAN/HEAD^^HEAD SCAN
	;;^UTILITY(U,$J,399.2,352,0)
	;;=352^CT SCAN/BODY^^BODY SCAN
	;;^UTILITY(U,$J,399.2,353,0)
	;;=353^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,354,0)
	;;=354^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,355,0)
	;;=355^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,356,0)
	;;=356^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,357,0)
	;;=357^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,358,0)
	;;=358^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,359,0)
	;;=359^CT SCAN/OTHER^^OTHER CT SCANS
	;;^UTILITY(U,$J,399.2,360,0)
	;;=360^OR SERVICES^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,361,0)
	;;=361^OR/MINOR^^MINOR SURGERY
	;;^UTILITY(U,$J,399.2,362,0)
	;;=362^OR/ORGAN TRANS^^ORGAN TRANSPLANT-OTHER THAN KIDNEY
	;;^UTILITY(U,$J,399.2,363,0)
	;;=363^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,364,0)
	;;=364^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,365,0)
	;;=365^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,366,0)
	;;=366^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,367,0)
	;;=367^OR/KIDNEY TRANS^^KIDNEY TRANSPLANT
	;;^UTILITY(U,$J,399.2,368,0)
	;;=368^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,369,0)
	;;=369^OR/OTHER^^OTHER OPERATING ROOM SERVICES
	;;^UTILITY(U,$J,399.2,370,0)
	;;=370^ANESTHESIA^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,371,0)
	;;=371^ANESTHE/INCIDENT RAD^^ANESTHESIA INCIDENT TO RADIOLOGY
	;;^UTILITY(U,$J,399.2,372,0)
	;;=372^ANESTHE/INCDNT OTHER DX^^ANESTHESIA INCIDENT TO OTHER DIAGNOSTIC SERVICES
	;;^UTILITY(U,$J,399.2,373,0)
	;;=373^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,374,0)
	;;=374^ANESTHE/ACUPUNC^^ACUPUNCTURE
	;;^UTILITY(U,$J,399.2,375,0)
	;;=375^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,376,0)
	;;=376^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,377,0)
	;;=377^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,378,0)
	;;=378^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,379,0)
	;;=379^ANESTHE/OTHER^^OTHER ANESTHESIA
	;;^UTILITY(U,$J,399.2,380,0)
	;;=380^BLOOD^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,381,0)
	;;=381^BLOOD/PKD RED^^PACKED RED CELLS
	;;^UTILITY(U,$J,399.2,382,0)
	;;=382^BLOOD/WHOLE^^WHOLE BLOOD
	;;^UTILITY(U,$J,399.2,383,0)
	;;=383^BLOOD/PLASMA^^PLASMA
	;;^UTILITY(U,$J,399.2,384,0)
	;;=384^BLOOD/PLATELETS^^PLATELETS
	;;^UTILITY(U,$J,399.2,385,0)
	;;=385^BLOOD/LEUCOCYTES^^LEUCOCYTES
	;;^UTILITY(U,$J,399.2,386,0)
	;;=386^BLOOD/COMPONENTS^^OTHER COMPONENTS
	;;^UTILITY(U,$J,399.2,387,0)
	;;=387^BLOOD/DERIVATIVES^^OTHER DERIVATIVES (CRYOPRICIPITATES)
	;;^UTILITY(U,$J,399.2,388,0)
	;;=388^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,389,0)
	;;=389^BLOOD/OTHER^^OTHER BLOOD
	;;^UTILITY(U,$J,399.2,390,0)
	;;=390^BLOOD/STOR-PROC^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,391,0)
	;;=391^BLOOD/ADMIN^^BLOOD ADMINISTRATION
	;;^UTILITY(U,$J,399.2,392,0)
	;;=392^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,393,0)
	;;=393^*RESERVED^^*RESERVED

IBINI0BE
IBINI0BE	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,394,0)
	;;=394^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,395,0)
	;;=395^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,396,0)
	;;=396^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,397,0)
	;;=397^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,398,0)
	;;=398^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,399,0)
	;;=399^BLOOD/OTHER STOR^0^OTHER BLOOD STORAGE & PROCESSING
	;;^UTILITY(U,$J,399.2,400,0)
	;;=400^IMAGE SERVICE^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,401,0)
	;;=401^DIAG MAMMOGRAPHY^^DIAGNOSTIC MAMMOGRAPHY
	;;^UTILITY(U,$J,399.2,402,0)
	;;=402^ULTRASOUND^^ULTRASOUND
	;;^UTILITY(U,$J,399.2,403,0)
	;;=403^SCRN MAMMOGRAPHY^^SCREENING MAMMOGRAPHY
	;;^UTILITY(U,$J,399.2,404,0)
	;;=404^PET SCAN^^POSITRON EMMISSION TOMOGROPHY
	;;^UTILITY(U,$J,399.2,405,0)
	;;=405^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,406,0)
	;;=406^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,407,0)
	;;=407^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,408,0)
	;;=408^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,409,0)
	;;=409^OTHER IMAG SVS^^OTHER IMAGING SERVICES
	;;^UTILITY(U,$J,399.2,410,0)
	;;=410^RESPIRATORY SVC^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,411,0)
	;;=411^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,412,0)
	;;=412^INHALATION SVC^^INHALATION SERVICES
	;;^UTILITY(U,$J,399.2,413,0)
	;;=413^HYPERBARIC 02^^HYPERBARIC OXYGEN THERAPY
	;;^UTILITY(U,$J,399.2,414,0)
	;;=414^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,415,0)
	;;=415^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,416,0)
	;;=416^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,417,0)
	;;=417^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,418,0)
	;;=418^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,419,0)
	;;=419^OTHER RESPIR SVS^^OTHER RESPIRATORY SERVICES
	;;^UTILITY(U,$J,399.2,420,0)
	;;=420^PHYSICAL THERP^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,421,0)
	;;=421^PHYS THERP/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,422,0)
	;;=422^PHYS THERP/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,423,0)
	;;=423^PHYS THERP/GROUP^^GROUP RATE
	;;^UTILITY(U,$J,399.2,424,0)
	;;=424^PHYS THERP/EVAL^^EVALUATION OR RE-EVALUATION
	;;^UTILITY(U,$J,399.2,425,0)
	;;=425^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,426,0)
	;;=426^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,427,0)
	;;=427^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,428,0)
	;;=428^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,429,0)
	;;=429^OTHER PHYS THERP^^OTHER PHYSICAL THERAPY
	;;^UTILITY(U,$J,399.2,430,0)
	;;=430^OCCUPATION THER^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,431,0)
	;;=431^OCCUP THERP/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,432,0)
	;;=432^OCCUP THERP/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,433,0)
	;;=433^OCCUP THERP/GROUP^^GROUP RATE
	;;^UTILITY(U,$J,399.2,434,0)
	;;=434^OCCUP THER/EVAL^^EVALUATION OR RE-EVALUATION
	;;^UTILITY(U,$J,399.2,435,0)
	;;=435^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,436,0)
	;;=436^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,437,0)
	;;=437^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,438,0)
	;;=438^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,439,0)
	;;=439^OTHER OCCUP THER^^OTHER OCCUPATIONAL THERAPY
	;;^UTILITY(U,$J,399.2,440,0)
	;;=440^SPEECH PATHOL^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,441,0)
	;;=441^SPEECH PATH/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,442,0)
	;;=442^SPEECH PATH/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,443,0)
	;;=443^SPEECH PATH/GROUP^^GROUP RATE
	;;^UTILITY(U,$J,399.2,444,0)
	;;=444^SPEECH PATH/EVAL^^EVALUATION OR RE-EVALUATION
	;;^UTILITY(U,$J,399.2,445,0)
	;;=445^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,446,0)
	;;=446^*RESERVED^^*RESERVED

IBINI0BF
IBINI0BF	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,447,0)
	;;=447^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,448,0)
	;;=448^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,449,0)
	;;=449^OTHER SPEECH PAT^^OTHER SPEECH-LANGUAGE PATHOLOGY
	;;^UTILITY(U,$J,399.2,450,0)
	;;=450^EMERG ROOM^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,451,0)
	;;=451^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,452,0)
	;;=452^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,453,0)
	;;=453^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,454,0)
	;;=454^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,455,0)
	;;=455^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,456,0)
	;;=456^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,457,0)
	;;=457^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,458,0)
	;;=458^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,459,0)
	;;=459^OTHER EMER ROOM^^OTHER EMERGENCY ROOM
	;;^UTILITY(U,$J,399.2,460,0)
	;;=460^PULMONARY FUNC^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,461,0)
	;;=461^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,462,0)
	;;=462^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,463,0)
	;;=463^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,464,0)
	;;=464^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,465,0)
	;;=465^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,466,0)
	;;=466^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,467,0)
	;;=467^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,468,0)
	;;=468^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,469,0)
	;;=469^OTHER PULMON FUNC^^OTHER PULMONARY FUNCTION
	;;^UTILITY(U,$J,399.2,470,0)
	;;=470^AUDIOLOGY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,471,0)
	;;=471^AUDIOLOGY/DX^^DIAGNOSTIC
	;;^UTILITY(U,$J,399.2,472,0)
	;;=472^AUDIOLOGY/RX^^TREATMENT
	;;^UTILITY(U,$J,399.2,473,0)
	;;=473^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,474,0)
	;;=474^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,475,0)
	;;=475^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,476,0)
	;;=476^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,477,0)
	;;=477^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,478,0)
	;;=478^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,479,0)
	;;=479^OTHER AUDIOL^^OTHER AUDIOLOGY
	;;^UTILITY(U,$J,399.2,480,0)
	;;=480^CARDIOLOGY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,481,0)
	;;=481^CARDIAC CATH LAB^^CARDIAC CATH LAB
	;;^UTILITY(U,$J,399.2,482,0)
	;;=482^STRESS TEST^^STRESS TEST
	;;^UTILITY(U,$J,399.2,483,0)
	;;=483^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,484,0)
	;;=484^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,485,0)
	;;=485^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,486,0)
	;;=486^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,487,0)
	;;=487^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,488,0)
	;;=488^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,489,0)
	;;=489^OTHER CARDIOL^^OTHER CARDIOLOGY
	;;^UTILITY(U,$J,399.2,490,0)
	;;=490^AMBUL SURG^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,491,0)
	;;=491^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,492,0)
	;;=492^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,493,0)
	;;=493^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,494,0)
	;;=494^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,495,0)
	;;=495^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,496,0)
	;;=496^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,497,0)
	;;=497^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,498,0)
	;;=498^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,499,0)
	;;=499^OTHER AMBL SURG^^OTHER AMBULATORY SURGICAL CARE
	;;^UTILITY(U,$J,399.2,500,0)
	;;=500^OUTPATIENT SVS^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,501,0)
	;;=501^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,502,0)
	;;=502^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,503,0)
	;;=503^*RESERVED^^*RESERVED

IBINI0BG
IBINI0BG	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,504,0)
	;;=504^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,505,0)
	;;=505^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,506,0)
	;;=506^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,507,0)
	;;=507^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,508,0)
	;;=508^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,509,0)
	;;=509^OUTPATIENT/OTHER^^OTHER OUTPATIENT SERVICES
	;;^UTILITY(U,$J,399.2,510,0)
	;;=510^CLINIC^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,511,0)
	;;=511^CHRONIC PAIN CL^^CHRONIC PAIN CENTER
	;;^UTILITY(U,$J,399.2,512,0)
	;;=512^DENTAL CLINIC^1^DENTAL CLINIC
	;;^UTILITY(U,$J,399.2,513,0)
	;;=513^PSYCH CLINIC^^PSYCHIATRIC CLINIC
	;;^UTILITY(U,$J,399.2,514,0)
	;;=514^OB-GYN CLINIC^^OB-GYN CLINIC
	;;^UTILITY(U,$J,399.2,515,0)
	;;=515^PEDS CLINIC^^PEDIATRIC CLINIC
	;;^UTILITY(U,$J,399.2,516,0)
	;;=516^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,517,0)
	;;=517^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,518,0)
	;;=518^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,519,0)
	;;=519^OTHER CLINIC^^OTHER CLINIC
	;;^UTILITY(U,$J,399.2,520,0)
	;;=520^FREESTAND CLINIC^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,521,0)
	;;=521^RURAL/CLINIC^^RURAL HEALTH-CLINIC
	;;^UTILITY(U,$J,399.2,522,0)
	;;=522^RURAL/HOME^^RURAL HEALTH-HOME
	;;^UTILITY(U,$J,399.2,523,0)
	;;=523^FAMILY PRACTICE^^FAMILY PRACTICE
	;;^UTILITY(U,$J,399.2,524,0)
	;;=524^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,525,0)
	;;=525^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,526,0)
	;;=526^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,527,0)
	;;=527^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,528,0)
	;;=528^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,529,0)
	;;=529^OTHER FR/STD CLINIC^^OTHER FREESTANDING CLINIC
	;;^UTILITY(U,$J,399.2,530,0)
	;;=530^OSTEOPATH SVS^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,531,0)
	;;=531^OSTEOPATH RX^^OSTEOPATHIC THERAPY
	;;^UTILITY(U,$J,399.2,532,0)
	;;=532^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,533,0)
	;;=533^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,534,0)
	;;=534^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,535,0)
	;;=535^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,536,0)
	;;=536^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,537,0)
	;;=537^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,538,0)
	;;=538^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,539,0)
	;;=539^OTHER OSTEOPATH^^OTHER OSTEOPATHIC SERVICES
	;;^UTILITY(U,$J,399.2,540,0)
	;;=540^AMBULANCE^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,541,0)
	;;=541^AMBUL/SUPPLY^^SUPPLIES
	;;^UTILITY(U,$J,399.2,542,0)
	;;=542^AMBUL/MED TRANS^^MEDICAL TRANSPORT
	;;^UTILITY(U,$J,399.2,543,0)
	;;=543^AMBUL/HEARTMOBL^^HEART MOBILE
	;;^UTILITY(U,$J,399.2,544,0)
	;;=544^AMBUL/OXY^^OXYGEN
	;;^UTILITY(U,$J,399.2,545,0)
	;;=545^AIR AMBULANCE^^AIR AMBULANCE
	;;^UTILITY(U,$J,399.2,546,0)
	;;=546^AMBUL/NEONAT^^NEONATAL AMBULANCE SERVICES
	;;^UTILITY(U,$J,399.2,547,0)
	;;=547^AMBUL/PHARMACY^^PHARMACY
	;;^UTILITY(U,$J,399.2,548,0)
	;;=548^AMBUL/TELEPHONIC EKG^^TELEPHONE TRANSMISSION EKG
	;;^UTILITY(U,$J,399.2,549,0)
	;;=549^OTHER AMBULANCE^^OTHER AMBULANCE
	;;^UTILITY(U,$J,399.2,550,0)
	;;=550^SKILLED NURSING^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,551,0)
	;;=551^SKILLED NURS/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,552,0)
	;;=552^SKILLED NURS/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,553,0)
	;;=553^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,554,0)
	;;=554^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,555,0)
	;;=555^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,556,0)
	;;=556^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,557,0)
	;;=557^*RESERVED^^*RESERVED

IBINI0BH
IBINI0BH	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,558,0)
	;;=558^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,559,0)
	;;=559^SKILLED NURS/OTHER^^OTHER SKILLED NURSING
	;;^UTILITY(U,$J,399.2,560,0)
	;;=560^MED SOCIAL SVS^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,561,0)
	;;=561^MED SOC SERVS/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,562,0)
	;;=562^MED SOC SERV/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,563,0)
	;;=563^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,564,0)
	;;=564^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,565,0)
	;;=565^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,566,0)
	;;=566^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,567,0)
	;;=567^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,568,0)
	;;=568^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,569,0)
	;;=569^MED SOC SERV/OTHER^^OTHER MED. SOCIAL SERVICES
	;;^UTILITY(U,$J,399.2,570,0)
	;;=570^AID/HOME HEALTH^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,571,0)
	;;=571^AIDE/HOME HLTH/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,572,0)
	;;=572^AIDE/HOME HLTH/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,573,0)
	;;=573^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,574,0)
	;;=574^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,575,0)
	;;=575^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,576,0)
	;;=576^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,577,0)
	;;=577^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,578,0)
	;;=578^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,579,0)
	;;=579^AIDE/HOME HLTH/OTHER^^OTHER HOME HEALTH AIDE
	;;^UTILITY(U,$J,399.2,580,0)
	;;=580^VISIT/HOME HEALTH^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,581,0)
	;;=581^VISIT/HOME HLTH/VISIT^^VISIT CHARGE
	;;^UTILITY(U,$J,399.2,582,0)
	;;=582^VISIT/HOME HLTH/HOUR^^HOURLY CHARGE
	;;^UTILITY(U,$J,399.2,583,0)
	;;=583^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,584,0)
	;;=584^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,585,0)
	;;=585^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,586,0)
	;;=586^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,587,0)
	;;=587^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,588,0)
	;;=588^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,589,0)
	;;=589^VISIT/HOME HLTH/OTHER^^OTHER HOME HEALTH VISITS
	;;^UTILITY(U,$J,399.2,590,0)
	;;=590^UNIT/HOME HEALTH^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,591,0)
	;;=591^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,592,0)
	;;=592^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,593,0)
	;;=593^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,594,0)
	;;=594^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,595,0)
	;;=595^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,596,0)
	;;=596^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,597,0)
	;;=597^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,598,0)
	;;=598^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,599,0)
	;;=599^UNIT/HOME HLTH/OTHER^^HOME HEALTH OTHER UNITS
	;;^UTILITY(U,$J,399.2,600,0)
	;;=600^O2/HOME HEALTH^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,601,0)
	;;=601^O2/STAT EQUIP/SUPPL/CONT^^OXYGEN - STATE/EQUIP/SUPPL/OR CONT
	;;^UTILITY(U,$J,399.2,602,0)
	;;=602^O2/STAT EQUIP/UNDER 1 LPM^^OXYGEN - STATE/EQUIP/SUPPL/UNDER 1 LPM
	;;^UTILITY(U,$J,399.2,603,0)
	;;=603^O2/STAT EQUIP/OVER 4 LPM^^OXYGEN - STATE/EQUIP/OVER 4 LPM
	;;^UTILITY(U,$J,399.2,604,0)
	;;=604^O2/PORTABLE ADD-ON^^OXYGEN - PORTABLE ADD-ON
	;;^UTILITY(U,$J,399.2,605,0)
	;;=605^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,606,0)
	;;=606^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,607,0)
	;;=607^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,608,0)
	;;=608^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,609,0)
	;;=609^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,610,0)
	;;=610^MRI^^GENERAL CLASSIFICATION

IBINI0BI
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,611,0)
	;;=611^MRI - BRAIN^1^BRAIN (INCLUDING BRAINSTEM)
	;;^UTILITY(U,$J,399.2,612,0)
	;;=612^MRI - SPINE^1^SPINAL CORD (INCLUDING SPINE)
	;;^UTILITY(U,$J,399.2,613,0)
	;;=613^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,614,0)
	;;=614^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,615,0)
	;;=615^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,616,0)
	;;=616^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,617,0)
	;;=617^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,618,0)
	;;=618^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,619,0)
	;;=619^MRI - OTHER^1^OTHER MRI
	;;^UTILITY(U,$J,399.2,620,0)
	;;=620^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,621,0)
	;;=621^MED-SUR SUPP/INCDNT RAD^^SUPPLIES INCIDENT TO RADIOLOGY
	;;^UTILITY(U,$J,399.2,622,0)
	;;=622^MED-SUR SUP/INCDNT ODX^^SUPPLIES INCIDENT TO OTHER DIAGNOSTIC SERVICES
	;;^UTILITY(U,$J,399.2,623,0)
	;;=623^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,624,0)
	;;=624^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,625,0)
	;;=625^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,626,0)
	;;=626^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,627,0)
	;;=627^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,628,0)
	;;=628^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,629,0)
	;;=629^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,630,0)
	;;=630^DRUGS^^GENERAL CLASSIFICATION (HOME IV THER.)
	;;^UTILITY(U,$J,399.2,631,0)
	;;=631^DRUG/SNGL^^SINGLE SOURCE DRUG
	;;^UTILITY(U,$J,399.2,632,0)
	;;=632^DRUG/MULT^^MULTIPLE SOURCE DRUG
	;;^UTILITY(U,$J,399.2,633,0)
	;;=633^DRUG/RSTR^^RESTRICTIVE PRESCRIPTION
	;;^UTILITY(U,$J,399.2,634,0)
	;;=634^DRUG/EPO<10,000 UNITS^^ERYTHROPOIETIN (EPO) LESS THAN 10,000 UNITS
	;;^UTILITY(U,$J,399.2,635,0)
	;;=635^DRUG/EPO>=10,000 UNITS^^ERYTHROPOIETIN (EPO) 10,000 OR MORE UNITS
	;;^UTILITY(U,$J,399.2,636,0)
	;;=636^DRUGS/DETAIL CODE^^DRUGS REQUIRING DETAILED CODING
	;;^UTILITY(U,$J,399.2,637,0)
	;;=637^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,638,0)
	;;=638^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,639,0)
	;;=639^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,640,0)
	;;=640^IV THERAPY SVC^^GENERAL CLASSIFICATION - HOME IV THERAPY SERVICES
	;;^UTILITY(U,$J,399.2,641,0)
	;;=641^NON RT NURSING/CENTRAL^^NONROUTINE NURSING, CENTRAL LINE
	;;^UTILITY(U,$J,399.2,642,0)
	;;=642^IV SITE CARE/CENTRAL^^IV SITE CARE, CENTRAL LINE
	;;^UTILITY(U,$J,399.2,643,0)
	;;=643^IV STRT/ CHNG/PERIPHAL^^IV START/CHANGE, PERIPHERAL LINE
	;;^UTILITY(U,$J,399.2,644,0)
	;;=644^NONRT NURSING/PERIPHRL^^NONROUTINE NURSING, PERIPHERAL LINE
	;;^UTILITY(U,$J,399.2,645,0)
	;;=645^TRNG PT/CAREGVR/CENTRL^^TRAINING PATIENT/CAREGIVER, CENTRAL LINE
	;;^UTILITY(U,$J,399.2,646,0)
	;;=646^TRNG DSBLPT/CENTRAL^^TRAINING, DISABLED PATIENT, CENTRAL LINE
	;;^UTILITY(U,$J,399.2,647,0)
	;;=647^TRNG/PT/CARGVR/PERIPHRL^^TRAINING, PATIENT/ CAREGIVER, PERIHERAL LINE
	;;^UTILITY(U,$J,399.2,648,0)
	;;=648^TRNG/DSBLPAT/PERIPHRL^^TRAINING,DISABLED PATIENT, PERIPHERAL LINE
	;;^UTILITY(U,$J,399.2,649,0)
	;;=649^OTHER IV THERAPY SVC^^OTHER IV THERAPY SERVICES
	;;^UTILITY(U,$J,399.2,650,0)
	;;=650^HOSPICE^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,651,0)
	;;=651^HOSPICE/RTN HOME^^ROUTINE HOME CARE
	;;^UTILITY(U,$J,399.2,652,0)
	;;=652^HOSPICE/CTNS HOME^^CONTINUOUS HOME CARE
	;;^UTILITY(U,$J,399.2,653,0)
	;;=653^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,654,0)
	;;=654^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,655,0)
	;;=655^HOSPICE/IP RESPITE^^INPATIENT RESPITE CARE
	;;^UTILITY(U,$J,399.2,656,0)
	;;=656^HOSPICE/IP NON-RESPITE^^GENERAL INPATIENT CARE (NON-RESPITE)
	;;^UTILITY(U,$J,399.2,657,0)
	;;=657^HOSPICE/PHYSICIAN^^PHYSICIAN SERVICES

IBINI0BJ
IBINI0BJ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,658,0)
	;;=658^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,659,0)
	;;=659^HOSPICE/OTHER^^OTHER HOSPICE
	;;^UTILITY(U,$J,399.2,660,0)
	;;=660^RESPITE CARE^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,661,0)
	;;=661^RESPITE/SKILLED NURSE^^HOURLY CHARGE/SKILLED NURSING
	;;^UTILITY(U,$J,399.2,662,0)
	;;=662^RESPITE/HMEAID/HMEMKR^^HOURLY CHARGE/HOME HEALTH AIDE/HOMEMAKER
	;;^UTILITY(U,$J,399.2,663,0)
	;;=663^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,664,0)
	;;=664^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,665,0)
	;;=665^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,666,0)
	;;=666^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,667,0)
	;;=667^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,668,0)
	;;=668^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,669,0)
	;;=669^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,670,0)
	;;=670^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,671,0)
	;;=671^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,672,0)
	;;=672^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,673,0)
	;;=673^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,674,0)
	;;=674^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,675,0)
	;;=675^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,676,0)
	;;=676^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,677,0)
	;;=677^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,678,0)
	;;=678^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,679,0)
	;;=679^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,680,0)
	;;=680^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,681,0)
	;;=681^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,682,0)
	;;=682^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,683,0)
	;;=683^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,684,0)
	;;=684^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,685,0)
	;;=685^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,686,0)
	;;=686^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,687,0)
	;;=687^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,688,0)
	;;=688^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,689,0)
	;;=689^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,690,0)
	;;=690^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,691,0)
	;;=691^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,692,0)
	;;=692^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,693,0)
	;;=693^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,694,0)
	;;=694^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,695,0)
	;;=695^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,696,0)
	;;=696^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,697,0)
	;;=697^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,698,0)
	;;=698^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,699,0)
	;;=699^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,700,0)
	;;=700^CAST ROOM^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,701,0)
	;;=701^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,702,0)
	;;=702^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,703,0)
	;;=703^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,704,0)
	;;=704^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,705,0)
	;;=705^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,706,0)
	;;=706^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,707,0)
	;;=707^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,708,0)
	;;=708^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,709,0)
	;;=709^OTHER CAST ROOM^^OTHER CAST ROOM
	;;^UTILITY(U,$J,399.2,710,0)
	;;=710^RECOVERY ROOM^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,711,0)
	;;=711^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,712,0)
	;;=712^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,713,0)
	;;=713^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,714,0)
	;;=714^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,715,0)
	;;=715^*RESERVED^^*RESERVED

IBINI0BK
IBINI0BK	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,716,0)
	;;=716^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,717,0)
	;;=717^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,718,0)
	;;=718^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,719,0)
	;;=719^OTHER RECOV RM^^OTHER RECOVERY ROOM
	;;^UTILITY(U,$J,399.2,720,0)
	;;=720^DELIVEROOM/LABOR^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,721,0)
	;;=721^LABOR^^LABOR
	;;^UTILITY(U,$J,399.2,722,0)
	;;=722^DELIVERY ROOM^^DELIVERY
	;;^UTILITY(U,$J,399.2,723,0)
	;;=723^CIRCUMCISION^^CIRCUMCISION
	;;^UTILITY(U,$J,399.2,724,0)
	;;=724^BIRTHING CENTER^^BIRTHING CENTER
	;;^UTILITY(U,$J,399.2,725,0)
	;;=725^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,726,0)
	;;=726^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,727,0)
	;;=727^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,728,0)
	;;=728^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,729,0)
	;;=729^OTHER/DELIV-LABOR^^OTHER LABOR ROOM/DELIVERY
	;;^UTILITY(U,$J,399.2,730,0)
	;;=730^EKG/ECG^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,731,0)
	;;=731^HOLTER MONT^^HOLTER MONITOR
	;;^UTILITY(U,$J,399.2,732,0)
	;;=732^TELEMETRY^^TELEMETRY
	;;^UTILITY(U,$J,399.2,733,0)
	;;=733^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,734,0)
	;;=734^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,735,0)
	;;=735^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,736,0)
	;;=736^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,737,0)
	;;=737^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,738,0)
	;;=738^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,739,0)
	;;=739^OTHER EKG-ECG^^OTHER EKG/ECG
	;;^UTILITY(U,$J,399.2,740,0)
	;;=740^EEG^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,741,0)
	;;=741^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,742,0)
	;;=742^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,743,0)
	;;=743^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,744,0)
	;;=744^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,745,0)
	;;=745^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,746,0)
	;;=746^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,747,0)
	;;=747^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,748,0)
	;;=748^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,749,0)
	;;=749^OTHER EEG^^OTHER EEG
	;;^UTILITY(U,$J,399.2,750,0)
	;;=750^GASTR-INST SVS^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,751,0)
	;;=751^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,752,0)
	;;=752^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,753,0)
	;;=753^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,754,0)
	;;=754^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,755,0)
	;;=755^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,756,0)
	;;=756^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,757,0)
	;;=757^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,758,0)
	;;=758^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,759,0)
	;;=759^OTHER GASTRO-INTS^^OTHER GASTRO-INTESTINAL
	;;^UTILITY(U,$J,399.2,760,0)
	;;=760^TREATMENT ROOM^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,761,0)
	;;=761^TREATMENT RM^^TREATMENT ROOM
	;;^UTILITY(U,$J,399.2,762,0)
	;;=762^OBSERVATION RM^^OBSERVATION ROOM
	;;^UTILITY(U,$J,399.2,763,0)
	;;=763^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,764,0)
	;;=764^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,765,0)
	;;=765^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,766,0)
	;;=766^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,767,0)
	;;=767^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,768,0)
	;;=768^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,769,0)
	;;=769^OTHER TREATMENT RM^^OTHER TREATMENT ROOM
	;;^UTILITY(U,$J,399.2,770,0)
	;;=770^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,771,0)
	;;=771^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,772,0)
	;;=772^*RESERVED^^*RESERVED

IBINI0BL
IBINI0BL	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,773,0)
	;;=773^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,774,0)
	;;=774^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,775,0)
	;;=775^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,776,0)
	;;=776^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,777,0)
	;;=777^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,778,0)
	;;=778^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,779,0)
	;;=779^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,780,0)
	;;=780^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,781,0)
	;;=781^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,782,0)
	;;=782^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,783,0)
	;;=783^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,784,0)
	;;=784^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,785,0)
	;;=785^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,786,0)
	;;=786^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,787,0)
	;;=787^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,788,0)
	;;=788^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,789,0)
	;;=789^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,790,0)
	;;=790^LITHOTRIPSY^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,791,0)
	;;=791^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,792,0)
	;;=792^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,793,0)
	;;=793^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,794,0)
	;;=794^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,795,0)
	;;=795^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,796,0)
	;;=796^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,797,0)
	;;=797^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,798,0)
	;;=798^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,799,0)
	;;=799^LITHOTRIPSY/OTHER^^OTHER LITHOTRIPSY
	;;^UTILITY(U,$J,399.2,800,0)
	;;=800^RENAL DIALYSIS^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,801,0)
	;;=801^DIALY/INPT^^INPATIENT HEMODIALYSIS
	;;^UTILITY(U,$J,399.2,802,0)
	;;=802^DIALY/INPT/PER^^INPATIENT PERITONEAL (NON-CAPD)
	;;^UTILITY(U,$J,399.2,803,0)
	;;=803^DIALY/INPT/CAPD^^INPATIENT CONTINUOUS AMBULATORY PERIOTNEAL DIALYSIS (CAPD)
	;;^UTILITY(U,$J,399.2,804,0)
	;;=804^DIALY/INPT/CCPD^^INPATIENT CONTINUOUS CYCLING PERITONEAL DIALYSIS (CCPD)
	;;^UTILITY(U,$J,399.2,805,0)
	;;=805^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,806,0)
	;;=806^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,807,0)
	;;=807^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,808,0)
	;;=808^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,809,0)
	;;=809^DIALY/INPT/OTHER^1^OTHER INPATIENT DIALYSIS
	;;^UTILITY(U,$J,399.2,810,0)
	;;=810^ORGAN ACQUISIT^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,811,0)
	;;=811^KIDNEY/LIVE^^LIVING DONOR-KIDNEY
	;;^UTILITY(U,$J,399.2,812,0)
	;;=812^KIDNEY/CADAVER^^CADAVER DONOR-KIDNEY
	;;^UTILITY(U,$J,399.2,813,0)
	;;=813^KIDNEY/UNKNOWN^^UNKNOWN DONOR-KIDNEY
	;;^UTILITY(U,$J,399.2,814,0)
	;;=814^KIDNEY/OTHER^^OTHER KIDNEY ACQUISITION
	;;^UTILITY(U,$J,399.2,815,0)
	;;=815^HEART/CADAVER^1^CADAVER DONOR-HEART
	;;^UTILITY(U,$J,399.2,816,0)
	;;=816^HEART/OTHER^^OTHER HEART ACQUISITION
	;;^UTILITY(U,$J,399.2,817,0)
	;;=817^LIVER ACQUISIT^1^DONOR-LIVER
	;;^UTILITY(U,$J,399.2,818,0)
	;;=818^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,819,0)
	;;=819^ORGAN/OTHER^^OTHER ORGAN ACQUISITION
	;;^UTILITY(U,$J,399.2,820,0)
	;;=820^HEMO/OP OR HOME^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,821,0)
	;;=821^HEMO/COMPOSITE^^HEMODIALYSIS/COMPOSITE OR OTHER RATE
	;;^UTILITY(U,$J,399.2,822,0)
	;;=822^HEMO/HOME/SUPPL^^HOME SUPPLIES
	;;^UTILITY(U,$J,399.2,823,0)
	;;=823^HEMO/HOME/EQUIP^^HOME EQUIPMENT
	;;^UTILITY(U,$J,399.2,824,0)
	;;=824^HEMO/HOME/100%^^MAINTENANCE/100%
	;;^UTILITY(U,$J,399.2,825,0)
	;;=825^HEMO/HOME/SUPSERV^^SUPPORT SERVICES

IBINI0BM
IBINI0BM	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,826,0)
	;;=826^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,827,0)
	;;=827^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,828,0)
	;;=828^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,829,0)
	;;=829^HEMO/HOME/OTHER^^OTHER OUTPATIENT HEMODIALYSIS
	;;^UTILITY(U,$J,399.2,830,0)
	;;=830^PERITONEAL/OP OR HOME^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,831,0)
	;;=831^PERTNL/COMPOSITE^^PERITONEAL/COMPOSITE OR OTHER RATE
	;;^UTILITY(U,$J,399.2,832,0)
	;;=832^PERTNL/HOME/SUPPL^^HOME SUPPLIES
	;;^UTILITY(U,$J,399.2,833,0)
	;;=833^PERTNL/HOME/EQUIP^^HOME EQUIPMENT
	;;^UTILITY(U,$J,399.2,834,0)
	;;=834^PERTNL/HOME/100%^^MAINTENANCE/100%
	;;^UTILITY(U,$J,399.2,835,0)
	;;=835^PERTNL/HOME/SUPSERV^^SUPPORT SERVICES
	;;^UTILITY(U,$J,399.2,836,0)
	;;=836^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,837,0)
	;;=837^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,838,0)
	;;=838^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,839,0)
	;;=839^PERTNL/HOME/OTHER^^OTHER OUTPATIENT PERITONEAL DIALYSIS
	;;^UTILITY(U,$J,399.2,840,0)
	;;=840^CAPD/OP OR HOME^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,841,0)
	;;=841^CAPD/COMPOSITE^^CAPD/COMPOSITE OR OTHER RATE
	;;^UTILITY(U,$J,399.2,842,0)
	;;=842^CAPD/HOME/SUPPL^^HOME SUPPLIES
	;;^UTILITY(U,$J,399.2,843,0)
	;;=843^CAPD/HOME/EQUIP^^HOME EQUIPMENT
	;;^UTILITY(U,$J,399.2,844,0)
	;;=844^CAPD/HOME/100%^^MAINTENANCE 100%
	;;^UTILITY(U,$J,399.2,845,0)
	;;=845^CAPD/HOME/SUPSERV^^SUPPORT SERVICES
	;;^UTILITY(U,$J,399.2,846,0)
	;;=846^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,847,0)
	;;=847^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,848,0)
	;;=848^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,849,0)
	;;=849^CAPD/HOME/OTHER^^OTHER OUTPATIENT CAPD
	;;^UTILITY(U,$J,399.2,850,0)
	;;=850^CCPD/OP OR HOME^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,851,0)
	;;=851^CCPD/COMPOSITE^^CCPD/COMPOSITE OR OTHER RATE
	;;^UTILITY(U,$J,399.2,852,0)
	;;=852^CCPD/HOME/SUPPL^^HOME SUPPLIES
	;;^UTILITY(U,$J,399.2,853,0)
	;;=853^CCPD/HOME/EQUIP^^HOME EQUIPMENT
	;;^UTILITY(U,$J,399.2,854,0)
	;;=854^CCPD/HOME/100%^^MAINTENANCE 100%
	;;^UTILITY(U,$J,399.2,855,0)
	;;=855^CCPD/HOME/SUPSERV^^SUPPORT SERVICES
	;;^UTILITY(U,$J,399.2,856,0)
	;;=856^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,857,0)
	;;=857^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,858,0)
	;;=858^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,859,0)
	;;=859^CCPD/HOME/OTHER^^OTHER OUTPATIENT CCPD
	;;^UTILITY(U,$J,399.2,860,0)
	;;=860^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,861,0)
	;;=861^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,862,0)
	;;=862^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,863,0)
	;;=863^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,864,0)
	;;=864^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,865,0)
	;;=865^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,866,0)
	;;=866^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,867,0)
	;;=867^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,868,0)
	;;=868^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,869,0)
	;;=869^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,870,0)
	;;=870^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,871,0)
	;;=871^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,872,0)
	;;=872^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,873,0)
	;;=873^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,874,0)
	;;=874^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,875,0)
	;;=875^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,876,0)
	;;=876^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,877,0)
	;;=877^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,878,0)
	;;=878^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,879,0)
	;;=879^*RESERVED^^*RESERVED

IBINI0BN
IBINI0BN	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,880,0)
	;;=880^DIALY/MISC^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,881,0)
	;;=881^DIALY/ULTRAFILT^^ULTRAFILTRATION
	;;^UTILITY(U,$J,399.2,882,0)
	;;=882^HOME DIALYSIS AID VISIT^^HOME DIALYSIS AID VISIT
	;;^UTILITY(U,$J,399.2,883,0)
	;;=883^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,884,0)
	;;=884^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,885,0)
	;;=885^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,886,0)
	;;=886^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,887,0)
	;;=887^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,888,0)
	;;=888^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,889,0)
	;;=889^DIALY/MISC/OTHER^^MISC. DIALYSIS OTHER
	;;^UTILITY(U,$J,399.2,890,0)
	;;=890^DONOR BANK^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,891,0)
	;;=891^DONOR BANK/BONE^^BONE
	;;^UTILITY(U,$J,399.2,892,0)
	;;=892^DONOR BANK/ORGN^^ORGAN (OTHER THAN KIDNEY)
	;;^UTILITY(U,$J,399.2,893,0)
	;;=893^DONOR BANK/SKIN^^SKIN
	;;^UTILITY(U,$J,399.2,894,0)
	;;=894^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,895,0)
	;;=895^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,896,0)
	;;=896^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,897,0)
	;;=897^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,898,0)
	;;=898^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,899,0)
	;;=899^OTHER DONOR BANK^^OTHER DONOR BANK
	;;^UTILITY(U,$J,399.2,900,0)
	;;=900^PSYCH TREATMENT^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,901,0)
	;;=901^ELECTRO SHOCK^^ELECTROSHOCK TREATMENT
	;;^UTILITY(U,$J,399.2,902,0)
	;;=902^MILIEU THERAPY^^MILIEU THERAPY
	;;^UTILITY(U,$J,399.2,903,0)
	;;=903^PLAY THERAPY^^PLAY THERAPY
	;;^UTILITY(U,$J,399.2,904,0)
	;;=904^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,905,0)
	;;=905^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,906,0)
	;;=906^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,907,0)
	;;=907^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,908,0)
	;;=908^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,909,0)
	;;=909^OTHER PSYCH RX^^OTHER
	;;^UTILITY(U,$J,399.2,910,0)
	;;=910^PSYCH SERVICES^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,911,0)
	;;=911^PSYCH/REHAB^^REHABILITATION
	;;^UTILITY(U,$J,399.2,912,0)
	;;=912^PSYCH/DAYCARE^^DAY CARE
	;;^UTILITY(U,$J,399.2,913,0)
	;;=913^PSYCH/NIGHTCARE^^NIGHT CARE
	;;^UTILITY(U,$J,399.2,914,0)
	;;=914^PSYCH/INDIV RX^^INDIVIDUAL THERAPY
	;;^UTILITY(U,$J,399.2,915,0)
	;;=915^PSYCH/GROUP RX^^GROUP THERAPY
	;;^UTILITY(U,$J,399.2,916,0)
	;;=916^PSYCH/FAMILY RX^^FAMILY THERAPY
	;;^UTILITY(U,$J,399.2,917,0)
	;;=917^PSYCH/BIOFEED^^BIO FEEDBACK
	;;^UTILITY(U,$J,399.2,918,0)
	;;=918^PSYCH/TESTING^^TESTING
	;;^UTILITY(U,$J,399.2,919,0)
	;;=919^PSYCH/OTHER^^OTHER
	;;^UTILITY(U,$J,399.2,920,0)
	;;=920^OTHER DX SVS^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,921,0)
	;;=921^PERI VASCUL LAB^^PERIPHERAL VASCULAR LAB
	;;^UTILITY(U,$J,399.2,922,0)
	;;=922^EMG^^ELECTROMYELGRAM
	;;^UTILITY(U,$J,399.2,923,0)
	;;=923^PAP SMEAR^^PAP SMEAR
	;;^UTILITY(U,$J,399.2,924,0)
	;;=924^ALLERGY TEST^^ALLERGY TEST
	;;^UTILITY(U,$J,399.2,925,0)
	;;=925^PREG TEST^^PREGNANCY TEST
	;;^UTILITY(U,$J,399.2,926,0)
	;;=926^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,927,0)
	;;=927^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,928,0)
	;;=928^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,929,0)
	;;=929^ADDITIONAL DX SVS^^OTHER DIAGNOSTIC SERVICE
	;;^UTILITY(U,$J,399.2,930,0)
	;;=930^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,931,0)
	;;=931^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,932,0)
	;;=932^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,933,0)
	;;=933^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,934,0)
	;;=934^*RESERVED^^*RESERVED

IBINI0BO
IBINI0BO	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,935,0)
	;;=935^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,936,0)
	;;=936^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,937,0)
	;;=937^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,938,0)
	;;=938^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,939,0)
	;;=939^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,940,0)
	;;=940^OTHER RX SVS^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,941,0)
	;;=941^RECREATION RX^^RECREATIONAL THERAPY
	;;^UTILITY(U,$J,399.2,942,0)
	;;=942^EDUC/TRAINING^^EDUCATION/TRAINING
	;;^UTILITY(U,$J,399.2,943,0)
	;;=943^CARDIAC REHAB^^CARDIAC REHABILITATION
	;;^UTILITY(U,$J,399.2,944,0)
	;;=944^DRUG REHAB^^DRUG REHABILITATION
	;;^UTILITY(U,$J,399.2,945,0)
	;;=945^ALCOHOL REHABILITATION^^ALCOHOL REHAB
	;;^UTILITY(U,$J,399.2,946,0)
	;;=946^AIR FLUID BEDS^^AIR FLUID SUPPORT BEDS
	;;^UTILITY(U,$J,399.2,947,0)
	;;=947^CMPLX MED EQUIP-ANC^^COMPLEX MEDICAL EQUIPMENT - ANCILLARY
	;;^UTILITY(U,$J,399.2,948,0)
	;;=948^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,949,0)
	;;=949^ADDITIONAL RX SVS^^OTHER THERAPEUTIC SERVICES
	;;^UTILITY(U,$J,399.2,950,0)
	;;=950^*RESERVED^0^*RESERVED
	;;^UTILITY(U,$J,399.2,951,0)
	;;=951^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,952,0)
	;;=952^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,953,0)
	;;=953^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,954,0)
	;;=954^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,955,0)
	;;=955^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,956,0)
	;;=956^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,957,0)
	;;=957^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,958,0)
	;;=958^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,959,0)
	;;=959^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,960,0)
	;;=960^PRO FEE^1^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,961,0)
	;;=961^PRO FEE/PSYCH^^PSYCHIATRIC
	;;^UTILITY(U,$J,399.2,962,0)
	;;=962^PRO FEE/EYE^^OPTHALMOLOGY
	;;^UTILITY(U,$J,399.2,963,0)
	;;=963^PRO FEE/ANES MD^^ANESTHESIOLOGIST (MD)
	;;^UTILITY(U,$J,399.2,964,0)
	;;=964^PRO FEE/ANES CRNA^^ANESTHETIST (CRNA)
	;;^UTILITY(U,$J,399.2,965,0)
	;;=965^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,966,0)
	;;=966^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,967,0)
	;;=967^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,968,0)
	;;=968^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,969,0)
	;;=969^OTHER PRO FEE^^OTHER PROFESSIONAL FEES
	;;^UTILITY(U,$J,399.2,970,0)
	;;=970^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,971,0)
	;;=971^PRO FEE/LAB^^LABORATORY
	;;^UTILITY(U,$J,399.2,972,0)
	;;=972^PRO FEE/RAD/DX^^RADIOLOGY - DIAGNOSTIC
	;;^UTILITY(U,$J,399.2,973,0)
	;;=973^PRO FEE/RAD/RX^^RADIOLOGY - THERAPEUTIC
	;;^UTILITY(U,$J,399.2,974,0)
	;;=974^PRO FEE/NUC MED^^RADIOLOGY - NUCLEAR MEDICINE
	;;^UTILITY(U,$J,399.2,975,0)
	;;=975^PRO FEE/OR^^OPERATING ROOM
	;;^UTILITY(U,$J,399.2,976,0)
	;;=976^PRO FEE/RESPIR^^RESPIRATORY THERAPY
	;;^UTILITY(U,$J,399.2,977,0)
	;;=977^PRO FEE/PHYSI^^PHYSICAL THERAPY
	;;^UTILITY(U,$J,399.2,978,0)
	;;=978^PRO FEE/OCUPA^^OCCUPATIONAL THERAPY
	;;^UTILITY(U,$J,399.2,979,0)
	;;=979^PRO FEE/SPEECH^^SPEECH PATHOLOGY
	;;^UTILITY(U,$J,399.2,980,0)
	;;=980^*RESERVED^^*RESERVED
	;;^UTILITY(U,$J,399.2,981,0)
	;;=981^PRO FEE/ER^^EMERGENCY ROOM
	;;^UTILITY(U,$J,399.2,982,0)
	;;=982^PRO FEE/OUTPT^^OUTPATIENT SERVICES
	;;^UTILITY(U,$J,399.2,983,0)
	;;=983^PRO FEE/CLINIC^^CLINIC
	;;^UTILITY(U,$J,399.2,984,0)
	;;=984^PRO FEE/SOC SVC^^MEDICAL SOCIAL SERVICES
	;;^UTILITY(U,$J,399.2,985,0)
	;;=985^PRO FEE/EKG^^EKG
	;;^UTILITY(U,$J,399.2,986,0)
	;;=986^PRO FEE/EEG^^EEG
	;;^UTILITY(U,$J,399.2,987,0)
	;;=987^PRO FEE/HOS VIS^^HOSPITAL VISIT

IBINI0BP
IBINI0BP	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.2)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.2,988,0)
	;;=988^PRO FEE/CONSULT^^CONSULTATION
	;;^UTILITY(U,$J,399.2,989,0)
	;;=989^FEE/PVT NURSE^^PRIVATE DUTY NURSE
	;;^UTILITY(U,$J,399.2,990,0)
	;;=990^PT CONVENIENCE^^GENERAL CLASSIFICATION
	;;^UTILITY(U,$J,399.2,991,0)
	;;=991^CAFETERIA^^CAFETERIA/GUEST TRAY
	;;^UTILITY(U,$J,399.2,992,0)
	;;=992^LINEN^^PRIVATE LINEN SERVICE
	;;^UTILITY(U,$J,399.2,993,0)
	;;=993^TELEPHONE^^TELEPHONE/TELEGRAPH
	;;^UTILITY(U,$J,399.2,994,0)
	;;=994^TV/RADIO^^TV/RADIO
	;;^UTILITY(U,$J,399.2,995,0)
	;;=995^NONPT ROOM RENT^^NONPATIENT ROOM RENTALS
	;;^UTILITY(U,$J,399.2,996,0)
	;;=996^LATE DISCHARGE^^LATE DISCHARGE CHARGE
	;;^UTILITY(U,$J,399.2,997,0)
	;;=997^ADMIT KITS^^ADMISSION KITS
	;;^UTILITY(U,$J,399.2,998,0)
	;;=998^BARBER/BEAUTY^^BEAUTY SHOP/BARBER
	;;^UTILITY(U,$J,399.2,999,0)
	;;=999^PT CONVENCE/OTH^^OTHER PATIENT CONVENIENCE ITEMS

IBINI0BQ
IBINI0BQ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399.3,0,"GL")
	;;=^DGCR(399.3,
	;;^DIC("B","RATE TYPE",399.3)
	;;=
	;;^DIC(399.3,"%D",0)
	;;=^^3^3^2940215^^^^
	;;^DIC(399.3,"%D",1,0)
	;;=This file contains all of the Rate Types which may be used in MCCR Billing.
	;;^DIC(399.3,"%D",2,0)
	;;= 
	;;^DIC(399.3,"%D",3,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399.3,0)
	;;=FIELD^^.09^10
	;;^DD(399.3,0,"DT")
	;;=2920206
	;;^DD(399.3,0,"ID",.07)
	;;=W "Who's Responsible: ",@("$P($P($C(59)_$S($D(^DD(399.3,.07,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,7)_"":"",2),$C(59),1)")
	;;^DD(399.3,0,"IX","B",399.3,.01)
	;;=
	;;^DD(399.3,0,"NM","RATE TYPE")
	;;=
	;;^DD(399.3,0,"PT",399,.07)
	;;=
	;;^DD(399.3,.001,0)
	;;=NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(399.3,.001,3)
	;;=Enter the internal file number of this entry.
	;;^DD(399.3,.001,21,0)
	;;=^^1^1^2880901^
	;;^DD(399.3,.001,21,1,0)
	;;=This is the internal file number of this entry.
	;;^DD(399.3,.01,0)
	;;=NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
	;;^DD(399.3,.01,1,0)
	;;=^.1
	;;^DD(399.3,.01,1,1,0)
	;;=399.3^B
	;;^DD(399.3,.01,1,1,1)
	;;=S ^DGCR(399.3,"B",$E(X,1,30),DA)=""
	;;^DD(399.3,.01,1,1,2)
	;;=K ^DGCR(399.3,"B",$E(X,1,30),DA)
	;;^DD(399.3,.01,3)
	;;=Enter the 1-30 character name/description of this rate type.
	;;^DD(399.3,.01,21,0)
	;;=^^1^1^2890331^^
	;;^DD(399.3,.01,21,1,0)
	;;=This is the name/description of this rate type.
	;;^DD(399.3,.01,"DEL",.01,0)
	;;=I 1 W !,"Deletion of Rate Types not allowed. Use the Inactive field."
	;;^DD(399.3,.02,0)
	;;=BILL NAME^RF^^0;2^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
	;;^DD(399.3,.02,3)
	;;=Enter the 1-30 character text which you want to appear on the UB form each time a bill of this rate type is printed.
	;;^DD(399.3,.02,21,0)
	;;=^^2^2^2940120^^
	;;^DD(399.3,.02,21,1,0)
	;;=This is the text which will appear on the UB claim form each time a bill of
	;;^DD(399.3,.02,21,2,0)
	;;=this rate type is printed.
	;;^DD(399.3,.03,0)
	;;=INACTIVE^S^0:NO;1:YES;^0;3^Q
	;;^DD(399.3,.03,3)
	;;=Enter the code which indicates whether or not you would like to inactivate this rate type.
	;;^DD(399.3,.03,21,0)
	;;=^^1^1^2890405^^
	;;^DD(399.3,.03,21,1,0)
	;;=This indicates whether or not this code has been inactivated.
	;;^DD(399.3,.03,"DT")
	;;=2890405
	;;^DD(399.3,.04,0)
	;;=ABBREVIATION^RF^^0;4^K:$L(X)>8!($L(X)<2)!'(X?1A.ANP) X
	;;^DD(399.3,.04,3)
	;;=Enter the 2-8 character abbreviation of the name of this rate type which will appear on all of the billing outputs.
	;;^DD(399.3,.04,21,0)
	;;=^^2^2^2880901^
	;;^DD(399.3,.04,21,1,0)
	;;=This defines the abbreviation of the name of this rate type which will
	;;^DD(399.3,.04,21,2,0)
	;;=appear on all of the billing outputs.
	;;^DD(399.3,.05,0)
	;;=IS THIS A THIRD PARTY BILL?^RS^0:NO;1:YES;^0;5^Q
	;;^DD(399.3,.05,3)
	;;=Enter '1' or 'Yes' if this is a third party bill or '0' or 'No' if a bill of this rate type is not a third party bill.
	;;^DD(399.3,.05,21,0)
	;;=^^2^2^2880901^
	;;^DD(399.3,.05,21,1,0)
	;;=This allows the user to determine whether or not a bill of this rate type
	;;^DD(399.3,.05,21,2,0)
	;;=is a third party bill.
	;;^DD(399.3,.06,0)
	;;=ACCOUNTS RECEIVABLE CATEGORY^R*P430.2'^PRCA(430.2,^0;6^S DIC("S")="I $P(^(0),U,7)>9" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.3,.06,1,0)
	;;=^.1
	;;^DD(399.3,.06,1,1,0)
	;;=^^TRIGGER^399.3^.07
	;;^DD(399.3,.06,1,1,1)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV D ARCAT^IBCU X ^DD(399.3,.06,1,1,1.4)

IBINI0BR
IBINI0BR	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.3,.06,1,1,1.4)
	;;=S DIH=$S($D(^DGCR(399.3,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=399.3,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399.3,.06,1,1,2)
	;;=K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399.3,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(399.3,.06,1,1,2.4)
	;;^DD(399.3,.06,1,1,2.4)
	;;=S DIH=$S($D(^DGCR(399.3,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=399.3,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
	;;^DD(399.3,.06,1,1,"%D",0)
	;;=^^2^2^2931217^
	;;^DD(399.3,.06,1,1,"%D",1,0)
	;;=This triggers the correct value for WHO's RESPONSIBLE for any AR Category
	;;^DD(399.3,.06,1,1,"%D",2,0)
	;;=that is entered.
	;;^DD(399.3,.06,1,1,"CREATE VALUE")
	;;=D ARCAT^IBCU
	;;^DD(399.3,.06,1,1,"DELETE VALUE")
	;;=S X=""
	;;^DD(399.3,.06,1,1,"DT")
	;;=2931217
	;;^DD(399.3,.06,1,1,"FIELD")
	;;=#.07
	;;^DD(399.3,.06,3)
	;;=Select the 'Accounts Receivable Category' which corresponds to this rate type.
	;;^DD(399.3,.06,12)
	;;=Only Accounts Receivable categories may be selected
	;;^DD(399.3,.06,12.1)
	;;=S DIC("S")="I $P(^(0),U,7)>9"
	;;^DD(399.3,.06,21,0)
	;;=^^1^1^2920107^^^
	;;^DD(399.3,.06,21,1,0)
	;;=This points to the corresponding Accounts Receivable category.
	;;^DD(399.3,.06,"DT")
	;;=2931217
	;;^DD(399.3,.07,0)
	;;=WHO'S RESPONSIBLE^SI^p:PATIENT;i:INSURER;o:OTHER (INSTITUTION);^0;7^Q
	;;^DD(399.3,.07,3)
	;;=Enter the Expected debtor for this rate type.
	;;^DD(399.3,.07,5,1,0)
	;;=399.3^.06^1
	;;^DD(399.3,.07,21,0)
	;;=4
	;;^DD(399.3,.07,21,1,0)
	;;=This field is triggered when an Accounts Receivable Category is entered.
	;;^DD(399.3,.07,21,2,0)
	;;=It is used to provide consistency between packages so the the debtor for
	;;^DD(399.3,.07,21,3,0)
	;;=the bill is from the correct file.  Debtors can be from the Patient file,
	;;^DD(399.3,.07,21,4,0)
	;;=the Insurance Company file, or the Institution file.
	;;^DD(399.3,.07,"DT")
	;;=2900214
	;;^DD(399.3,.08,0)
	;;=REIMBURSABLE INSURANCE?^S^1:YES;0:NO;^0;8^Q
	;;^DD(399.3,.08,3)
	;;=Answer '1' or 'YES' if you want the Medicare statement to print on all UB bills of this Rate Type.
	;;^DD(399.3,.08,21,0)
	;;=^^7^7^2940120^^^^
	;;^DD(399.3,.08,21,1,0)
	;;=This field should be answered 'YES' if this is a Reimbursable Insurance
	;;^DD(399.3,.08,21,2,0)
	;;=rate type, all other rate types should be answered 'NO'.  This field
	;;^DD(399.3,.08,21,3,0)
	;;=will be used to determine if a bill is reimbursable Insurance.
	;;^DD(399.3,.08,21,4,0)
	;;= 
	;;^DD(399.3,.08,21,5,0)
	;;=Primarily, this field will be used by the bill print option to determine 
	;;^DD(399.3,.08,21,6,0)
	;;=if the 7 line statement that begins "For your information..."
	;;^DD(399.3,.08,21,7,0)
	;;=should be printed on the UB claim form. (Only applies to the UB form types.)
	;;^DD(399.3,.08,"DT")
	;;=2920406
	;;^DD(399.3,.09,0)
	;;=NSC STATEMENT ON UB BILLS^S^1:YES;0:NO;^0;9^Q
	;;^DD(399.3,.09,3)
	;;=Enter '1' or 'YES' if you want the statement "The undersigned certifies that treatment rendered is not for a service connected disablility." to print on UB bills of this rate type.
	;;^DD(399.3,.09,21,0)
	;;=^^6^6^2940120^^^^
	;;^DD(399.3,.09,21,1,0)
	;;=The statement "The undersigned certifies that treatment rendered is not
	;;^DD(399.3,.09,21,2,0)
	;;=for a service connected disablity." will be printed on UB claim forms of
	;;^DD(399.3,.09,21,3,0)
	;;=this Rate Type if this field is answered 'YES'.
	;;^DD(399.3,.09,21,4,0)
	;;= 
	;;^DD(399.3,.09,21,5,0)
	;;=This field should be answered 'YES' for all rate types where the bill

IBINI0BS
IBINI0BS	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.3,.09,21,6,0)
	;;=can only be for NSC care.
	;;^DD(399.3,.09,"DT")
	;;=2940120

IBINI0BT
IBINI0BT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.3)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.3)
	;;=^DGCR(399.3,
	;;^UTILITY(U,$J,399.3,0)
	;;=RATE TYPE^399.3I^13^13
	;;^UTILITY(U,$J,399.3,1,0)
	;;=CRIME VICTIM^THIRD PARTY^^CRIME^1^8^i^^1
	;;^UTILITY(U,$J,399.3,2,0)
	;;=DENTAL^DENTAL^^DENTAL^0^2^p^^1
	;;^UTILITY(U,$J,399.3,3,0)
	;;=HUMANITARIAN^HUMANITARIAN^^HUMAN^1^2^p^^1
	;;^UTILITY(U,$J,399.3,4,0)
	;;=INTERAGENCY^INTERAGENCY^^INTER^1^20^o^^1
	;;^UTILITY(U,$J,399.3,5,0)
	;;=MEANS TEST/CAT. C^MEANS TEST/CAT. C^^MT/CAT C^0^18^p^^1
	;;^UTILITY(U,$J,399.3,6,0)
	;;=MEDICARE ESRD^MEDICARE ESRD^^MEDICARE^1^20^o^^1
	;;^UTILITY(U,$J,399.3,7,0)
	;;=NO FAULT INS.^NO FAULT INS.^^NO FAULT^1^9^i^^1
	;;^UTILITY(U,$J,399.3,8,0)
	;;=REIMBURSABLE INS.^REIMBURSABLE INS.^^REIM INS^1^9^i^1^1
	;;^UTILITY(U,$J,399.3,9,0)
	;;=SHARING AGREEMENT^SHARING AGREEMENT^^SHARING^1^19^o^^1
	;;^UTILITY(U,$J,399.3,10,0)
	;;=TORT FEASOR^TORT FEASOR^^TORT^1^10^i^^1
	;;^UTILITY(U,$J,399.3,11,0)
	;;=WORKERS' COMP.^WORKERS' COMP.^^WORKERS^1^6^i^^1
	;;^UTILITY(U,$J,399.3,12,0)
	;;=CHAMPVA REIMB. INS.^REIMBURSABLE INS.^1^REIM INS^1^^i^1^1
	;;^UTILITY(U,$J,399.3,13,0)
	;;=CHAMPVA^CHAMPVA^0^CHAMPVA^1^^i^1^1

IBINI0BU
IBINI0BU	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399.4,0,"GL")
	;;=^DGCR(399.4,
	;;^DIC("B","MCCR INCONSISTENT DATA ELEMENTS",399.4)
	;;=
	;;^DIC(399.4,"%D",0)
	;;=^^6^6^2940215^^^
	;;^DIC(399.4,"%D",1,0)
	;;=This file contains a list of all possible reasons why a bill may be
	;;^DIC(399.4,"%D",2,0)
	;;=disapproved during the review phase of the billing process. Each
	;;^DIC(399.4,"%D",3,0)
	;;=element in this file corresponds directly to a form locator on the
	;;^DIC(399.4,"%D",4,0)
	;;=UB-82 form.
	;;^DIC(399.4,"%D",5,0)
	;;= 
	;;^DIC(399.4,"%D",6,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399.4,0)
	;;=FIELD^^.01^2
	;;^DD(399.4,0,"DDA")
	;;=N
	;;^DD(399.4,0,"IX","B",399.4,.01)
	;;=
	;;^DD(399.4,0,"IX","C",399.4,.01)
	;;=
	;;^DD(399.4,0,"NM","MCCR INCONSISTENT DATA ELEMENTS")
	;;=
	;;^DD(399.4,0,"PT",399.044,.01)
	;;=
	;;^DD(399.4,0,"PT",399.045,.01)
	;;=
	;;^DD(399.4,.001,0)
	;;=NUMBER^NJ3,0^^ ^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
	;;^DD(399.4,.001,3)
	;;=Enter form locator number which corresponds to this entry on the UB-82 form.
	;;^DD(399.4,.001,21,0)
	;;=^^2^2^2880901^
	;;^DD(399.4,.001,21,1,0)
	;;=This number corresponds to the form locator number of this entry on the
	;;^DD(399.4,.001,21,2,0)
	;;=UB-82 form.
	;;^DD(399.4,.01,0)
	;;=NAME^RF^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>55!($L(X)<3)!'(X'?1P.E) X
	;;^DD(399.4,.01,1,0)
	;;=^.1
	;;^DD(399.4,.01,1,1,0)
	;;=399.4^B
	;;^DD(399.4,.01,1,1,1)
	;;=S ^DGCR(399.4,"B",$E(X,1,30),DA)=""
	;;^DD(399.4,.01,1,1,2)
	;;=K ^DGCR(399.4,"B",$E(X,1,30),DA)
	;;^DD(399.4,.01,1,2,0)
	;;=399.4^C^KWIC
	;;^DD(399.4,.01,1,2,1)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2,^DD("KWIC")'[I S ^DGCR(399.4,"C",I,DA)=""
	;;^DD(399.4,.01,1,2,2)
	;;=S %1=1 F %=1:1:$L(X)+1 S I=$E(X,%) I "(,.?! '-/&:;)"[I S I=$E($E(X,%1,%-1),1,30),%1=%+1 I $L(I)>2 K ^DGCR(399.4,"C",I,DA)
	;;^DD(399.4,.01,3)
	;;=Enter the 3-55 character reason for disapproval.
	;;^DD(399.4,.01,21,0)
	;;=^^2^2^2880901^
	;;^DD(399.4,.01,21,1,0)
	;;=This defines a reason why a bill may be disapproved during the review phase
	;;^DD(399.4,.01,21,2,0)
	;;=of the billing process.

IBINI0BV
IBINI0BV	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.4)
	;;=^DGCR(399.4,
	;;^UTILITY(U,$J,399.4,0)
	;;=MCCR INCONSISTENT DATA ELEMENTS^399.4^99^50
	;;^UTILITY(U,$J,399.4,1,0)
	;;=PROVIDER NAME,ADDRESS,PHONE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,3,0)
	;;=PATIENT CONTROL NUMBER (SSN) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,4,0)
	;;=TYPE OF BILL UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,5,0)
	;;=BC/BS PROVIDER NUMBER UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,6,0)
	;;=FEDERAL TAX NUMBER (EIN) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,10,0)
	;;=PATIENT NAME UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,11,0)
	;;=PATIENT ADDRESS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,12,0)
	;;=PATIENT DATE OF BIRTH UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,13,0)
	;;=PATIENT SEX UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,14,0)
	;;=PATIENT MARITAL STATUS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,15,0)
	;;=ADMISSION DATE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,16,0)
	;;=ADMISSION HOUR UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,17,0)
	;;=ADMISSION TYPE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,18,0)
	;;=ADMISSION SOURCE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,19,0)
	;;=ACCIDENT HOUR UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,20,0)
	;;=DISCHARGE HOUR UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,21,0)
	;;=PATIENT (DISCHARGE) STATUS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,22,0)
	;;=STATEMENT COVERS PERIOD UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,28,0)
	;;=OCCURRENCE CODE(S)/DATE(S) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,33,0)
	;;=OCCURRENCE SPAN CODE/DATES UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,34,0)
	;;=RESPONSIBLE PARTY NAME/ADDRESS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,35,0)
	;;=CONDITION CODE(S) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,50,0)
	;;=REVENUE DESCRIPTION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,51,0)
	;;=REVENUE CODE(S) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,52,0)
	;;=UNITS OF SERVICE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,53,0)
	;;=TOTAL CHARGES UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,57,0)
	;;=PAYER IDENTIFICATION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,58,0)
	;;=R.O.I. CERTIFICATION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,59,0)
	;;=ASSIGNMENT OF BENEFITS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,65,0)
	;;=INSURED'S NAME UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,66,0)
	;;=INSURED'S SEX UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,67,0)
	;;=PT. RELATIONSHIP TO INSURED UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,68,0)
	;;=INSURANCE POLICY NUMBER UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,69,0)
	;;=INSURANCE GROUP NAME UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,70,0)
	;;=INSURANCE GROUP NUMBER UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,71,0)
	;;=EMPLOYMENT INFORMATION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,72,0)
	;;=EMPLOYMENT STATUS CODE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,73,0)
	;;=EMPLOYER NAME UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,74,0)
	;;=EMPLOYEE ID NUMBER UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,75,0)
	;;=EMPLOYER LOCATION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,76,0)
	;;=DIAGNOSIS DESCRIPTION UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,77,0)
	;;=PRINCIPAL DIAGNOSIS CODE UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,78,0)
	;;=OTHER DIAGNOSES CODES UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,82,0)
	;;=PROCEDURE CODING METHOD UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,83,0)
	;;=PROCEDURE DESCRIPTIONS UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,84,0)
	;;=PRINCIPAL PROCEDURE CODE/DATE UNSPECIFIED/INCORRECT

IBINI0BW
IBINI0BW	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.4)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.4,85,0)
	;;=OTHER PROCEDURE CODE(S)/DATE(S) UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,92,0)
	;;=ATTENDING PHYSICIAN UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,94,0)
	;;=BILL NUMBER UNSPECIFIED/INCORRECT
	;;^UTILITY(U,$J,399.4,99,0)
	;;=OTHER

IBINI0BX
IBINI0BX	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(399.5,0,"GL")
	;;=^DGCR(399.5,
	;;^DIC("B","BILLING RATES",399.5)
	;;=
	;;^DIC(399.5,"%D",0)
	;;=^^8^8^2940215^^^^
	;;^DIC(399.5,"%D",1,0)
	;;=This file contains the historical billing rates, associated with revenue
	;;^DIC(399.5,"%D",2,0)
	;;=codes and bedsections that the DVA has legislative authority to bill third
	;;^DIC(399.5,"%D",3,0)
	;;=parties for reimbursement.
	;;^DIC(399.5,"%D",4,0)
	;;= 
	;;^DIC(399.5,"%D",5,0)
	;;=It is used to automatically associate revenue codes, bedsections and
	;;^DIC(399.5,"%D",6,0)
	;;=amounts with a bill.
	;;^DIC(399.5,"%D",7,0)
	;;= 
	;;^DIC(399.5,"%D",8,0)
	;;=Per VHA Directive 10-93-142, this file definition should not be modified.
	;;^DD(399.5,0)
	;;=FIELD^^.07^7
	;;^DD(399.5,0,"DDA")
	;;=N
	;;^DD(399.5,0,"DT")
	;;=2900501
	;;^DD(399.5,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399.1,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399.1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(399.5,0,"ID",.03)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^DGCR(399.2,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(399.2,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(399.5,0,"ID",.04)
	;;=S DGZX=X,X=$P(^(0),U,4),X2="2$" D COMMA^%DTC W "   ",X S X=DGZX K DGZX,X2
	;;^DD(399.5,0,"ID",.05)
	;;=W "   ",@("$P($P($C(59)_$S($D(^DD(399.5,.05,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,5)_"":"",2),$C(59),1)")
	;;^DD(399.5,0,"IX","AIVDT",399.5,.01)
	;;=
	;;^DD(399.5,0,"IX","AIVDT1",399.5,.02)
	;;=
	;;^DD(399.5,0,"IX","AIVDT2",399.5,.03)
	;;=
	;;^DD(399.5,0,"IX","B",399.5,.01)
	;;=
	;;^DD(399.5,0,"IX","D",399.5,.03)
	;;=
	;;^DD(399.5,0,"NM","BILLING RATES")
	;;=
	;;^DD(399.5,.01,0)
	;;=EFFECTIVE DATE^RD^^0;1^S %DT="EX" D ^%DT S X=Y K:2991001<X!(2861001>X) X
	;;^DD(399.5,.01,1,0)
	;;=^.1
	;;^DD(399.5,.01,1,1,0)
	;;=399.5^B
	;;^DD(399.5,.01,1,1,1)
	;;=S ^DGCR(399.5,"B",$E(X,1,30),DA)=""
	;;^DD(399.5,.01,1,1,2)
	;;=K ^DGCR(399.5,"B",$E(X,1,30),DA)
	;;^DD(399.5,.01,1,2,0)
	;;=399.5^AIVDT^MUMPS
	;;^DD(399.5,.01,1,2,1)
	;;=S:$P(^DGCR(399.5,DA,0),U,2)&($P(^(0),U,3)) ^DGCR(399.5,"AIVDT",$P(^(0),U,2),-X,$P(^(0),U,3),DA)=""
	;;^DD(399.5,.01,1,2,2)
	;;=K:$P(^DGCR(399.5,DA,0),U,2)&($P(^(0),U,3)) ^DGCR(399.5,"AIVDT",$P(^(0),U,2),-X,$P(^(0),U,3),DA)
	;;^DD(399.5,.01,1,2,3)
	;;=DON'T DELETE
	;;^DD(399.5,.01,1,2,"%D",0)
	;;=^^1^1^2940214^^^
	;;^DD(399.5,.01,1,2,"%D",1,0)
	;;=All rates by revenue code, bedsection, and inverse date effective.
	;;^DD(399.5,.01,1,2,"DT")
	;;=2900501
	;;^DD(399.5,.01,3)
	;;=TYPE A DATE BETWEEN 10/1/1986 AND 10/1/1999
	;;^DD(399.5,.01,21,0)
	;;=^^4^4^2900501^^
	;;^DD(399.5,.01,21,1,0)
	;;=This is the date in which changes in billing rates will take effect.
	;;^DD(399.5,.01,21,2,0)
	;;=A new entry, with a new effective date is necessary to change a
	;;^DD(399.5,.01,21,3,0)
	;;=previous entry.  The most recent effective date's entry data will
	;;^DD(399.5,.01,21,4,0)
	;;=be used (even if its null) in calculating current charges.
	;;^DD(399.5,.01,"DT")
	;;=2900525
	;;^DD(399.5,.02,0)
	;;=BILLING BEDSECTION^R*P399.1'^DGCR(399.1,^0;2^S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,5)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.5,.02,1,0)
	;;=^.1^^-1
	;;^DD(399.5,.02,1,2,0)
	;;=399.5^AIVDT1^MUMPS
	;;^DD(399.5,.02,1,2,1)
	;;=S:$P(^DGCR(399.5,DA,0),U,3) ^DGCR(399.5,"AIVDT",X,-^(0),$P(^(0),U,3),DA)=""
	;;^DD(399.5,.02,1,2,2)
	;;=K:$P(^DGCR(399.5,DA,0),U,3) ^DGCR(399.5,"AIVDT",X,-^(0),$P(^(0),U,3),DA)
	;;^DD(399.5,.02,1,2,3)
	;;=DON'T DELETE
	;;^DD(399.5,.02,1,2,"%D",0)
	;;=^^1^1^2940214^^

IBINI0BY
IBINI0BY	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.5,.02,1,2,"%D",1,0)
	;;=All rates by revenue code, bedsection, and inverse date effective.
	;;^DD(399.5,.02,1,2,"DT")
	;;=2900501
	;;^DD(399.5,.02,12)
	;;=VALID BILLING BEDSECTIONS ONLY
	;;^DD(399.5,.02,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.1,+Y,0),U,5)"
	;;^DD(399.5,.02,21,0)
	;;=^^1^1^2911025^
	;;^DD(399.5,.02,21,1,0)
	;;=This is the Specialty for which we have approved billing rates.
	;;^DD(399.5,.02,"DT")
	;;=2900504
	;;^DD(399.5,.03,0)
	;;=REVENUE CODE^R*P399.2'^DGCR(399.2,^0;3^S DIC("S")="I $P(^DGCR(399.2,+Y,0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(399.5,.03,1,0)
	;;=^.1
	;;^DD(399.5,.03,1,1,0)
	;;=399.5^D
	;;^DD(399.5,.03,1,1,1)
	;;=S ^DGCR(399.5,"D",$E(X,1,30),DA)=""
	;;^DD(399.5,.03,1,1,2)
	;;=K ^DGCR(399.5,"D",$E(X,1,30),DA)
	;;^DD(399.5,.03,1,1,3)
	;;=Don't delete this.
	;;^DD(399.5,.03,1,1,"DT")
	;;=2900501
	;;^DD(399.5,.03,1,2,0)
	;;=399.5^AIVDT2^MUMPS
	;;^DD(399.5,.03,1,2,1)
	;;=S:$P(^DGCR(399.5,DA,0),U,2) ^DGCR(399.5,"AIVDT",$P(^(0),U,2),-^(0),X,DA)=""
	;;^DD(399.5,.03,1,2,2)
	;;=K:$P(^DGCR(399.5,DA,0),U,2) ^DGCR(399.5,"AIVDT",$P(^(0),U,2),-^(0),X,DA)
	;;^DD(399.5,.03,1,2,3)
	;;=DON'T DELETE
	;;^DD(399.5,.03,1,2,"%D",0)
	;;=^^1^1^2940214^
	;;^DD(399.5,.03,1,2,"%D",1,0)
	;;=All rates by revenue code, bedsection, and inverse date effective.
	;;^DD(399.5,.03,1,2,"DT")
	;;=2900501
	;;^DD(399.5,.03,12)
	;;=Select Active Revenue Codes Only!
	;;^DD(399.5,.03,12.1)
	;;=S DIC("S")="I $P(^DGCR(399.2,+Y,0),U,3)"
	;;^DD(399.5,.03,21,0)
	;;=^^1^1^2920211^^
	;;^DD(399.5,.03,21,1,0)
	;;=This is the revenue code that will automatically be used with this rate.
	;;^DD(399.5,.03,"DT")
	;;=2900501
	;;^DD(399.5,.04,0)
	;;=AMOUNT^RNJ7,2O^^0;4^S:X["$" X=$P(X,"$",2) K:X'?.N.1".".2N!(X>9999)!(X<1) X
	;;^DD(399.5,.04,2)
	;;=S Y(0)=Y S X=Y,X2="2$" D COMMA^%DTC S Y=X
	;;^DD(399.5,.04,2.1)
	;;=S X=Y,X2="2$" D COMMA^%DTC S Y=X
	;;^DD(399.5,.04,3)
	;;=Type a Dollar Amount between 1 and 9999, 2 Decimal Digits
	;;^DD(399.5,.04,21,0)
	;;=^^1^1^2911025^
	;;^DD(399.5,.04,21,1,0)
	;;=This is the unit charge dollar amount for this rate.
	;;^DD(399.5,.04,"DT")
	;;=2900529
	;;^DD(399.5,.05,0)
	;;=ACTIVE^S^0:NOT ACTIVE;1:YES, ACTIVE;^0;5^Q
	;;^DD(399.5,.05,21,0)
	;;=^^4^4^2940214^^
	;;^DD(399.5,.05,21,1,0)
	;;=If a rate is no longer to be used it should be inactivated.  This may be
	;;^DD(399.5,.05,21,2,0)
	;;=necessary if you are building rates for the same care using different
	;;^DD(399.5,.05,21,3,0)
	;;=Revenue Codes and would like to keep the old entries in the file for
	;;^DD(399.5,.05,21,4,0)
	;;=reference purposes.
	;;^DD(399.5,.05,"DT")
	;;=2900501
	;;^DD(399.5,.06,0)
	;;=PAYORS TO USE WITH^S^i:INSURANCE CO.;p:PATIENTS;o:OTHER (INSTITUTIONS);op:PATIENTS & INSTITUTIONS;iop:ALL BUT CAT C'S;iopc:ALL;c:CAT C. BILLS ONLY;opc:ALL BUT INSURANCE CO.'S;^0;6^Q
	;;^DD(399.5,.06,21,0)
	;;=^^10^10^2940214^^
	;;^DD(399.5,.06,21,1,0)
	;;=Enter the payors that this Billing Rate is to be used with.  For the
	;;^DD(399.5,.06,21,2,0)
	;;=purposes of this field, the choices for payer are:
	;;^DD(399.5,.06,21,3,0)
	;;=   i - Insurance companies
	;;^DD(399.5,.06,21,4,0)
	;;=   o - Other (Institutions
	;;^DD(399.5,.06,21,5,0)
	;;=   p - Patients
	;;^DD(399.5,.06,21,6,0)
	;;=   c - Means Test/Cat C bills
	;;^DD(399.5,.06,21,7,0)
	;;= 
	;;^DD(399.5,.06,21,8,0)
	;;=All bills to patients will be considered patient bills except for
	;;^DD(399.5,.06,21,9,0)
	;;=Means test Co-payment bills, which may have a different amount or 
	;;^DD(399.5,.06,21,10,0)
	;;=maximum associated with it.
	;;^DD(399.5,.06,"DT")
	;;=2900504

IBINI0BZ
IBINI0BZ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(399.5,.07,0)
	;;=NON-STANDARD RATE^S^0:NO;1:YES;^0;7^Q
	;;^DD(399.5,.07,3)
	;;=Enter whether or not this Billing Rate should NOT be set up automatically for bills to the identified payors and bedsections.
	;;^DD(399.5,.07,21,0)
	;;=^^9^9^2900515^
	;;^DD(399.5,.07,21,1,0)
	;;=This field should be answered 'YES' if this billing rate should not
	;;^DD(399.5,.07,21,2,0)
	;;=be automatically set up for all payers identified in the field 'PAYORS
	;;^DD(399.5,.07,21,3,0)
	;;=TO USE WITH."  This billing rate will only be used with insurance 
	;;^DD(399.5,.07,21,4,0)
	;;=companies where this revenue code has been listed in the  
	;;^DD(399.5,.07,21,5,0)
	;;=DIFFERENT REVENUE CODES TO USE field of the Insurance Company File.
	;;^DD(399.5,.07,21,6,0)
	;;= 
	;;^DD(399.5,.07,21,7,0)
	;;=If this field is left blank or answered 'NO' then this Revenue Code
	;;^DD(399.5,.07,21,8,0)
	;;=and amount will be set up automatically for this bedsection when a bill
	;;^DD(399.5,.07,21,9,0)
	;;=is created.
	;;^DD(399.5,.07,"DT")
	;;=2900515

IBINI0C0
IBINI0C0	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5)
	;;=^DGCR(399.5,
	;;^UTILITY(U,$J,399.5,0)
	;;=BILLING RATES^399.5ID^378^378
	;;^UTILITY(U,$J,399.5,1,0)
	;;=2861001^3^1^436^1^opc
	;;^UTILITY(U,$J,399.5,2,0)
	;;=2861001^3^101^286^1^i
	;;^UTILITY(U,$J,399.5,3,0)
	;;=2861001^3^960^48^1^i
	;;^UTILITY(U,$J,399.5,4,0)
	;;=2861001^3^240^102^1^i
	;;^UTILITY(U,$J,399.5,5,0)
	;;=2861001^12^1^508^1^opc
	;;^UTILITY(U,$J,399.5,6,0)
	;;=2861001^12^101^330^1^i
	;;^UTILITY(U,$J,399.5,7,0)
	;;=2861001^12^960^64^1^i
	;;^UTILITY(U,$J,399.5,8,0)
	;;=2861001^12^240^114^1^i
	;;^UTILITY(U,$J,399.5,9,0)
	;;=2861001^9^1^323^1^opc
	;;^UTILITY(U,$J,399.5,10,0)
	;;=2861001^9^101^249^1^i
	;;^UTILITY(U,$J,399.5,11,0)
	;;=2861001^9^960^23^1^i
	;;^UTILITY(U,$J,399.5,12,0)
	;;=2861001^9^240^51^1^i
	;;^UTILITY(U,$J,399.5,13,0)
	;;=2861001^4^1^197^1^opc
	;;^UTILITY(U,$J,399.5,14,0)
	;;=2861001^4^101^161^1^i
	;;^UTILITY(U,$J,399.5,15,0)
	;;=2861001^4^960^11^1^i
	;;^UTILITY(U,$J,399.5,16,0)
	;;=2861001^4^240^25^1^i
	;;^UTILITY(U,$J,399.5,17,0)
	;;=2861001^5^1^378^1^opc
	;;^UTILITY(U,$J,399.5,18,0)
	;;=2861001^5^101^250^1^i
	;;^UTILITY(U,$J,399.5,19,0)
	;;=2861001^5^960^12^1^i
	;;^UTILITY(U,$J,399.5,20,0)
	;;=2861001^10^1^344^1^opc
	;;^UTILITY(U,$J,399.5,21,0)
	;;=2861001^10^101^234^1^i
	;;^UTILITY(U,$J,399.5,22,0)
	;;=2861001^10^960^7^1^i
	;;^UTILITY(U,$J,399.5,23,0)
	;;=2861001^10^240^103^1^i
	;;^UTILITY(U,$J,399.5,24,0)
	;;=2861001^1^1^121^1^opc
	;;^UTILITY(U,$J,399.5,25,0)
	;;=2861001^1^101^82^1^i
	;;^UTILITY(U,$J,399.5,26,0)
	;;=2861001^1^960^14^1^i
	;;^UTILITY(U,$J,399.5,27,0)
	;;=2861001^1^240^25^1^i
	;;^UTILITY(U,$J,399.5,28,0)
	;;=2861001^2^1^485^1^opc
	;;^UTILITY(U,$J,399.5,29,0)
	;;=2861001^2^101^227^1^i
	;;^UTILITY(U,$J,399.5,30,0)
	;;=2861001^2^960^13^1^i
	;;^UTILITY(U,$J,399.5,31,0)
	;;=2861001^2^240^245^1^i
	;;^UTILITY(U,$J,399.5,32,0)
	;;=2861001^6^1^167^1^opc
	;;^UTILITY(U,$J,399.5,33,0)
	;;=2861001^6^101^141^1^i
	;;^UTILITY(U,$J,399.5,34,0)
	;;=2861001^6^960^4^1^i
	;;^UTILITY(U,$J,399.5,35,0)
	;;=2861001^6^240^22^1^i
	;;^UTILITY(U,$J,399.5,36,0)
	;;=2861001^11^1^501^1^opc
	;;^UTILITY(U,$J,399.5,37,0)
	;;=2861001^11^101^348^1^i
	;;^UTILITY(U,$J,399.5,38,0)
	;;=2861001^11^960^11^1^i
	;;^UTILITY(U,$J,399.5,39,0)
	;;=2861001^11^240^142^1^i
	;;^UTILITY(U,$J,399.5,40,0)
	;;=2861001^7^500^69^1^iop
	;;^UTILITY(U,$J,399.5,41,0)
	;;=2861001^8^250^13^1^iop
	;;^UTILITY(U,$J,399.5,42,0)
	;;=2871001^3^1^473^1^opc
	;;^UTILITY(U,$J,399.5,43,0)
	;;=2871001^3^101^266^1^i
	;;^UTILITY(U,$J,399.5,44,0)
	;;=2871001^3^960^91^1^i
	;;^UTILITY(U,$J,399.5,45,0)
	;;=2871001^3^240^116^1^i
	;;^UTILITY(U,$J,399.5,46,0)
	;;=2871001^12^1^611^1^opc
	;;^UTILITY(U,$J,399.5,47,0)
	;;=2871001^12^101^337^1^i
	;;^UTILITY(U,$J,399.5,48,0)
	;;=2871001^12^960^114^1^i
	;;^UTILITY(U,$J,399.5,49,0)
	;;=2871001^12^240^160^1^i
	;;^UTILITY(U,$J,399.5,50,0)
	;;=2871001^9^1^236^1^opc
	;;^UTILITY(U,$J,399.5,51,0)
	;;=2871001^9^101^168^1^i
	;;^UTILITY(U,$J,399.5,52,0)
	;;=2871001^9^960^32^1^i
	;;^UTILITY(U,$J,399.5,53,0)
	;;=2871001^9^240^36^1^i
	;;^UTILITY(U,$J,399.5,54,0)
	;;=2871001^4^1^190^1^opc
	;;^UTILITY(U,$J,399.5,55,0)
	;;=2871001^4^101^137^1^i
	;;^UTILITY(U,$J,399.5,56,0)
	;;=2871001^4^960^27^1^i
	;;^UTILITY(U,$J,399.5,57,0)
	;;=2871001^4^240^26^1^i
	;;^UTILITY(U,$J,399.5,58,0)
	;;=2871001^5^1^393^1^opc
	;;^UTILITY(U,$J,399.5,59,0)
	;;=2871001^5^101^219^1^i
	;;^UTILITY(U,$J,399.5,60,0)
	;;=2871001^5^960^49^1^i
	;;^UTILITY(U,$J,399.5,61,0)
	;;=2871001^5^240^125^1^i
	;;^UTILITY(U,$J,399.5,62,0)
	;;=2871001^10^1^372^1^opc
	;;^UTILITY(U,$J,399.5,63,0)
	;;=2871001^10^101^215^1^i
	;;^UTILITY(U,$J,399.5,64,0)
	;;=2871001^10^960^44^1^i

IBINI0C1
IBINI0C1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5,65,0)
	;;=2871001^10^240^113^1^i
	;;^UTILITY(U,$J,399.5,66,0)
	;;=2871001^1^1^197^1^opc
	;;^UTILITY(U,$J,399.5,67,0)
	;;=2871001^1^101^119^1^i
	;;^UTILITY(U,$J,399.5,68,0)
	;;=2871001^1^960^37^1^i
	;;^UTILITY(U,$J,399.5,69,0)
	;;=2871001^1^240^41^1^i
	;;^UTILITY(U,$J,399.5,70,0)
	;;=2871001^2^1^465^1^opc
	;;^UTILITY(U,$J,399.5,71,0)
	;;=2871001^2^101^174^1^i
	;;^UTILITY(U,$J,399.5,72,0)
	;;=2871001^2^960^62^1^i
	;;^UTILITY(U,$J,399.5,73,0)
	;;=2871001^2^240^229^1^i
	;;^UTILITY(U,$J,399.5,74,0)
	;;=2871001^6^1^168^1^opc
	;;^UTILITY(U,$J,399.5,75,0)
	;;=2871001^6^101^136^1^i
	;;^UTILITY(U,$J,399.5,76,0)
	;;=2871001^6^960^8^1^i
	;;^UTILITY(U,$J,399.5,77,0)
	;;=2871001^6^240^24^1^i
	;;^UTILITY(U,$J,399.5,78,0)
	;;=2871001^11^1^524^1^opc
	;;^UTILITY(U,$J,399.5,79,0)
	;;=2871001^11^101^308^1^i
	;;^UTILITY(U,$J,399.5,80,0)
	;;=2871001^11^960^62^1^i
	;;^UTILITY(U,$J,399.5,81,0)
	;;=2871001^11^240^154^1^i
	;;^UTILITY(U,$J,399.5,82,0)
	;;=2871001^7^500^127^1^iop
	;;^UTILITY(U,$J,399.5,83,0)
	;;=2871001^8^250^14^1^iop
	;;^UTILITY(U,$J,399.5,84,0)
	;;=2871001^7^500^25^1^c
	;;^UTILITY(U,$J,399.5,85,0)
	;;=2881001^3^1^483^1^opc
	;;^UTILITY(U,$J,399.5,86,0)
	;;=2881001^3^101^271^1^i
	;;^UTILITY(U,$J,399.5,87,0)
	;;=2881001^3^960^93^1^i
	;;^UTILITY(U,$J,399.5,88,0)
	;;=2881001^3^240^119^1^i
	;;^UTILITY(U,$J,399.5,89,0)
	;;=2881001^12^1^681^1^op
	;;^UTILITY(U,$J,399.5,90,0)
	;;=2881001^12^101^375^1^i
	;;^UTILITY(U,$J,399.5,91,0)
	;;=2881001^12^960^128^1^i
	;;^UTILITY(U,$J,399.5,92,0)
	;;=2881001^12^240^178^1^i
	;;^UTILITY(U,$J,399.5,93,0)
	;;=2881001^9^1^232^1^opc
	;;^UTILITY(U,$J,399.5,94,0)
	;;=2881001^9^101^164^1^i
	;;^UTILITY(U,$J,399.5,95,0)
	;;=2881001^9^960^32^1^i
	;;^UTILITY(U,$J,399.5,96,0)
	;;=2881001^9^240^36^1^i
	;;^UTILITY(U,$J,399.5,97,0)
	;;=2881001^4^1^209^1^opc
	;;^UTILITY(U,$J,399.5,98,0)
	;;=2881001^4^101^150^1^i
	;;^UTILITY(U,$J,399.5,99,0)
	;;=2881001^4^960^30^1^i
	;;^UTILITY(U,$J,399.5,100,0)
	;;=2881001^4^240^29^1^i
	;;^UTILITY(U,$J,399.5,101,0)
	;;=2881001^5^1^426^1^opc
	;;^UTILITY(U,$J,399.5,102,0)
	;;=2881001^5^101^237^1^i
	;;^UTILITY(U,$J,399.5,103,0)
	;;=2881001^5^960^53^1^i
	;;^UTILITY(U,$J,399.5,104,0)
	;;=2881001^5^240^136^1^i
	;;^UTILITY(U,$J,399.5,105,0)
	;;=2881001^10^960^44^1^i
	;;^UTILITY(U,$J,399.5,106,0)
	;;=2881001^10^1^374^1^opc
	;;^UTILITY(U,$J,399.5,107,0)
	;;=2881001^10^101^216^1^i
	;;^UTILITY(U,$J,399.5,108,0)
	;;=2881001^10^240^114^1^i
	;;^UTILITY(U,$J,399.5,109,0)
	;;=2881001^1^1^213^1^opc
	;;^UTILITY(U,$J,399.5,110,0)
	;;=2881001^1^101^129^1^i
	;;^UTILITY(U,$J,399.5,111,0)
	;;=2881001^1^960^40^1^i
	;;^UTILITY(U,$J,399.5,112,0)
	;;=2881001^1^240^44^1^i
	;;^UTILITY(U,$J,399.5,113,0)
	;;=2881001^2^1^545^1^opc
	;;^UTILITY(U,$J,399.5,114,0)
	;;=2881001^2^101^203^1^i
	;;^UTILITY(U,$J,399.5,115,0)
	;;=2881001^2^240^269^1^i
	;;^UTILITY(U,$J,399.5,116,0)
	;;=2881001^2^960^73^1^i
	;;^UTILITY(U,$J,399.5,117,0)
	;;=2881001^6^1^160^1^opc
	;;^UTILITY(U,$J,399.5,118,0)
	;;=2881001^6^101^130^1^i
	;;^UTILITY(U,$J,399.5,119,0)
	;;=2881001^6^960^7^1^i
	;;^UTILITY(U,$J,399.5,120,0)
	;;=2881001^6^240^23^1^i
	;;^UTILITY(U,$J,399.5,121,0)
	;;=2881001^11^1^539^1^opc
	;;^UTILITY(U,$J,399.5,122,0)
	;;=2881001^11^101^317^1^i
	;;^UTILITY(U,$J,399.5,123,0)
	;;=2881001^11^960^64^1^i
	;;^UTILITY(U,$J,399.5,124,0)
	;;=2881001^11^240^158^1^i
	;;^UTILITY(U,$J,399.5,125,0)
	;;=2881001^7^500^110^1^iop
	;;^UTILITY(U,$J,399.5,126,0)
	;;=2881001^8^250^16^1^iop
	;;^UTILITY(U,$J,399.5,127,0)
	;;=2881001^7^500^22^1^c
	;;^UTILITY(U,$J,399.5,128,0)
	;;=2891001^3^1^554^1^opc
	;;^UTILITY(U,$J,399.5,129,0)
	;;=2891001^3^101^311^1^i

IBINI0C2
IBINI0C2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5,130,0)
	;;=2891001^3^960^107^1^i
	;;^UTILITY(U,$J,399.5,131,0)
	;;=2891001^3^240^136^1^i
	;;^UTILITY(U,$J,399.5,132,0)
	;;=2891001^12^1^789^1^op
	;;^UTILITY(U,$J,399.5,133,0)
	;;=2891001^12^101^435^1^i
	;;^UTILITY(U,$J,399.5,134,0)
	;;=2891001^12^960^148^1^i
	;;^UTILITY(U,$J,399.5,135,0)
	;;=2891001^12^240^206^1^i
	;;^UTILITY(U,$J,399.5,136,0)
	;;=2891001^9^1^273^1^opc
	;;^UTILITY(U,$J,399.5,137,0)
	;;=2891001^9^101^193^1^i
	;;^UTILITY(U,$J,399.5,138,0)
	;;=2891001^9^960^37^1^i
	;;^UTILITY(U,$J,399.5,139,0)
	;;=2891001^9^240^43^1^i
	;;^UTILITY(U,$J,399.5,140,0)
	;;=2891001^4^1^234^1^opc
	;;^UTILITY(U,$J,399.5,141,0)
	;;=2891001^4^101^168^1^i
	;;^UTILITY(U,$J,399.5,142,0)
	;;=2891001^4^960^34^1^i
	;;^UTILITY(U,$J,399.5,143,0)
	;;=2891001^4^240^32^1^i
	;;^UTILITY(U,$J,399.5,144,0)
	;;=2891001^5^1^505^1^opc
	;;^UTILITY(U,$J,399.5,145,0)
	;;=2891001^5^101^281^1^i
	;;^UTILITY(U,$J,399.5,146,0)
	;;=2891001^5^960^63^1^i
	;;^UTILITY(U,$J,399.5,147,0)
	;;=2891001^5^240^161^1^i
	;;^UTILITY(U,$J,399.5,148,0)
	;;=2891001^10^1^412^1^opc
	;;^UTILITY(U,$J,399.5,149,0)
	;;=2891001^10^101^238^1^i
	;;^UTILITY(U,$J,399.5,150,0)
	;;=2891001^10^960^48^1^i
	;;^UTILITY(U,$J,399.5,151,0)
	;;=2891001^10^240^126^1^i
	;;^UTILITY(U,$J,399.5,152,0)
	;;=2891001^1^1^238^1^opc
	;;^UTILITY(U,$J,399.5,153,0)
	;;=2891001^1^101^144^1^i
	;;^UTILITY(U,$J,399.5,154,0)
	;;=2891001^1^960^44^1^i
	;;^UTILITY(U,$J,399.5,155,0)
	;;=2891001^1^240^50^1^i
	;;^UTILITY(U,$J,399.5,156,0)
	;;=2891001^2^1^568^1^opc
	;;^UTILITY(U,$J,399.5,157,0)
	;;=2891001^2^101^212^1^i
	;;^UTILITY(U,$J,399.5,158,0)
	;;=2891001^2^960^76^1^i
	;;^UTILITY(U,$J,399.5,159,0)
	;;=2891001^2^240^280^1^i
	;;^UTILITY(U,$J,399.5,160,0)
	;;=2891001^6^1^168^1^opc
	;;^UTILITY(U,$J,399.5,161,0)
	;;=2891001^6^101^136^1^i
	;;^UTILITY(U,$J,399.5,162,0)
	;;=2891001^6^960^8^1^i
	;;^UTILITY(U,$J,399.5,163,0)
	;;=2891001^6^240^24^1^i
	;;^UTILITY(U,$J,399.5,164,0)
	;;=2891001^11^1^613^1^op
	;;^UTILITY(U,$J,399.5,165,0)
	;;=2891001^11^101^360^1^i
	;;^UTILITY(U,$J,399.5,166,0)
	;;=2891001^11^960^73^1^i
	;;^UTILITY(U,$J,399.5,167,0)
	;;=2891001^11^240^180^1^i
	;;^UTILITY(U,$J,399.5,168,0)
	;;=2891001^7^500^116^1^iop
	;;^UTILITY(U,$J,399.5,169,0)
	;;=2891001^8^250^17^1^iop
	;;^UTILITY(U,$J,399.5,170,0)
	;;=2891001^7^500^23^1^c
	;;^UTILITY(U,$J,399.5,171,0)
	;;=2861001^5^240^116^1^i
	;;^UTILITY(U,$J,399.5,172,0)
	;;=2891001^12^1^592^1^c
	;;^UTILITY(U,$J,399.5,173,0)
	;;=2881001^12^1^560^1^c
	;;^UTILITY(U,$J,399.5,174,0)
	;;=2891001^11^1^592^1^c
	;;^UTILITY(U,$J,399.5,175,0)
	;;=2901001^3^1^592^1^c
	;;^UTILITY(U,$J,399.5,176,0)
	;;=2901001^3^1^642^1^op
	;;^UTILITY(U,$J,399.5,177,0)
	;;=2901001^3^101^360^1^i
	;;^UTILITY(U,$J,399.5,178,0)
	;;=2901001^3^240^158^1^i
	;;^UTILITY(U,$J,399.5,179,0)
	;;=2901001^3^960^124^1^i
	;;^UTILITY(U,$J,399.5,180,0)
	;;=2901001^12^1^592^1^c
	;;^UTILITY(U,$J,399.5,181,0)
	;;=2901001^12^1^974^1^op
	;;^UTILITY(U,$J,399.5,182,0)
	;;=2901001^12^101^537^1^i
	;;^UTILITY(U,$J,399.5,183,0)
	;;=2901001^12^240^255^1^i
	;;^UTILITY(U,$J,399.5,184,0)
	;;=2901001^12^960^182^1^i
	;;^UTILITY(U,$J,399.5,185,0)
	;;=2901001^9^1^291^1^opc
	;;^UTILITY(U,$J,399.5,186,0)
	;;=2901001^9^101^207^1^i
	;;^UTILITY(U,$J,399.5,187,0)
	;;=2901001^9^240^45^1^i
	;;^UTILITY(U,$J,399.5,188,0)
	;;=2901001^9^960^39^1^i
	;;^UTILITY(U,$J,399.5,189,0)
	;;=2901001^4^1^208^1^opc
	;;^UTILITY(U,$J,399.5,190,0)
	;;=2901001^4^101^149^1^i
	;;^UTILITY(U,$J,399.5,191,0)
	;;=2901001^4^240^29^1^i
	;;^UTILITY(U,$J,399.5,192,0)
	;;=2901001^4^960^30^1^i
	;;^UTILITY(U,$J,399.5,193,0)
	;;=2901001^5^1^564^1^opc

IBINI0C3
IBINI0C3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5,194,0)
	;;=2901001^5^101^314^1^i
	;;^UTILITY(U,$J,399.5,195,0)
	;;=2901001^5^240^180^1^i
	;;^UTILITY(U,$J,399.5,196,0)
	;;=2901001^5^960^70^1^i
	;;^UTILITY(U,$J,399.5,197,0)
	;;=2901001^10^1^461^1^opc
	;;^UTILITY(U,$J,399.5,198,0)
	;;=2901001^10^101^266^1^i
	;;^UTILITY(U,$J,399.5,199,0)
	;;=2901001^10^240^141^1^i
	;;^UTILITY(U,$J,399.5,200,0)
	;;=2901001^10^960^54^1^i
	;;^UTILITY(U,$J,399.5,201,0)
	;;=2901001^1^1^233^1^opc
	;;^UTILITY(U,$J,399.5,202,0)
	;;=2901001^1^101^141^1^i
	;;^UTILITY(U,$J,399.5,203,0)
	;;=2901001^1^240^49^1^i
	;;^UTILITY(U,$J,399.5,204,0)
	;;=2901001^1^960^43^1^i
	;;^UTILITY(U,$J,399.5,205,0)
	;;=2901001^2^1^541^1^opc
	;;^UTILITY(U,$J,399.5,206,0)
	;;=2901001^2^101^203^1^i
	;;^UTILITY(U,$J,399.5,207,0)
	;;=2901001^2^240^266^1^i
	;;^UTILITY(U,$J,399.5,208,0)
	;;=2901001^2^960^72^1^i
	;;^UTILITY(U,$J,399.5,209,0)
	;;=2901001^6^1^185^1^opc
	;;^UTILITY(U,$J,399.5,210,0)
	;;=2901001^6^101^150^1^i
	;;^UTILITY(U,$J,399.5,211,0)
	;;=2901001^6^240^26^1^i
	;;^UTILITY(U,$J,399.5,212,0)
	;;=2901001^6^960^9^1^i
	;;^UTILITY(U,$J,399.5,213,0)
	;;=2901001^11^1^592^1^c
	;;^UTILITY(U,$J,399.5,214,0)
	;;=2901001^11^1^663^1^op
	;;^UTILITY(U,$J,399.5,215,0)
	;;=2901001^11^101^390^1^i
	;;^UTILITY(U,$J,399.5,216,0)
	;;=2901001^11^240^195^1^i
	;;^UTILITY(U,$J,399.5,217,0)
	;;=2901001^11^960^78^1^i
	;;^UTILITY(U,$J,399.5,218,0)
	;;=2901001^7^500^26^1^c
	;;^UTILITY(U,$J,399.5,219,0)
	;;=2901001^7^500^130^1^iop
	;;^UTILITY(U,$J,399.5,220,0)
	;;=2901001^8^250^19^1^iop
	;;^UTILITY(U,$J,399.5,221,0)
	;;=2901201^3^1^568^1^o
	;;^UTILITY(U,$J,399.5,222,0)
	;;=2901201^12^1^865^1^o
	;;^UTILITY(U,$J,399.5,223,0)
	;;=2901201^11^1^585^1^o
	;;^UTILITY(U,$J,399.5,224,0)
	;;=2901201^2^1^475^1^o
	;;^UTILITY(U,$J,399.5,225,0)
	;;=2901201^5^1^498^1^o
	;;^UTILITY(U,$J,399.5,226,0)
	;;=2901201^10^1^406^1^o
	;;^UTILITY(U,$J,399.5,227,0)
	;;=2901201^9^1^257^1^o
	;;^UTILITY(U,$J,399.5,228,0)
	;;=2901201^4^1^184^1^o
	;;^UTILITY(U,$J,399.5,229,0)
	;;=2901201^6^1^164^1^o
	;;^UTILITY(U,$J,399.5,230,0)
	;;=2901201^1^1^205^1^o
	;;^UTILITY(U,$J,399.5,231,0)
	;;=2901201^7^500^116^1^o
	;;^UTILITY(U,$J,399.5,232,0)
	;;=2901201^8^250^17^1^o
	;;^UTILITY(U,$J,399.5,233,0)
	;;=2911001^3^1^628^1^c
	;;^UTILITY(U,$J,399.5,234,0)
	;;=2911001^3^1^687^1^op
	;;^UTILITY(U,$J,399.5,235,0)
	;;=2911001^3^101^386^1^i
	;;^UTILITY(U,$J,399.5,236,0)
	;;=2911001^3^240^169^1^i
	;;^UTILITY(U,$J,399.5,237,0)
	;;=2911001^3^960^132^1^i
	;;^UTILITY(U,$J,399.5,238,0)
	;;=2911001^12^1^628^1^c
	;;^UTILITY(U,$J,399.5,239,0)
	;;=2911001^12^1^982^1^op
	;;^UTILITY(U,$J,399.5,240,0)
	;;=2911001^12^101^542^1^i
	;;^UTILITY(U,$J,399.5,241,0)
	;;=2911001^12^240^257^1^i
	;;^UTILITY(U,$J,399.5,242,0)
	;;=2911001^12^960^183^1^i
	;;^UTILITY(U,$J,399.5,243,0)
	;;=2911001^9^1^297^1^opc
	;;^UTILITY(U,$J,399.5,244,0)
	;;=2911001^9^101^211^1^i
	;;^UTILITY(U,$J,399.5,245,0)
	;;=2911001^9^240^46^1^i
	;;^UTILITY(U,$J,399.5,246,0)
	;;=2911001^9^960^40^1^i
	;;^UTILITY(U,$J,399.5,247,0)
	;;=2911001^4^1^250^1^opc
	;;^UTILITY(U,$J,399.5,248,0)
	;;=2911001^4^101^180^1^i
	;;^UTILITY(U,$J,399.5,249,0)
	;;=2911001^4^240^34^1^i
	;;^UTILITY(U,$J,399.5,250,0)
	;;=2911001^4^960^36^1^i
	;;^UTILITY(U,$J,399.5,251,0)
	;;=2911001^5^1^584^1^opc
	;;^UTILITY(U,$J,399.5,252,0)
	;;=2911001^5^101^326^1^i
	;;^UTILITY(U,$J,399.5,253,0)
	;;=2911001^5^240^186^1^i
	;;^UTILITY(U,$J,399.5,254,0)
	;;=2911001^5^960^72^1^i
	;;^UTILITY(U,$J,399.5,255,0)
	;;=2911001^10^1^476^1^opc
	;;^UTILITY(U,$J,399.5,256,0)
	;;=2911001^10^101^275^1^i
	;;^UTILITY(U,$J,399.5,257,0)
	;;=2911001^10^240^145^1^i
	;;^UTILITY(U,$J,399.5,258,0)
	;;=2911001^10^960^56^1^i

IBINI0C4
IBINI0C4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5,259,0)
	;;=2911001^1^1^242^1^opc
	;;^UTILITY(U,$J,399.5,260,0)
	;;=2911001^1^101^147^1^i
	;;^UTILITY(U,$J,399.5,261,0)
	;;=2911001^1^240^50^1^i
	;;^UTILITY(U,$J,399.5,262,0)
	;;=2911001^1^960^45^1^i
	;;^UTILITY(U,$J,399.5,263,0)
	;;=2911001^2^1^533^1^opc
	;;^UTILITY(U,$J,399.5,264,0)
	;;=2911001^2^101^199^1^i
	;;^UTILITY(U,$J,399.5,265,0)
	;;=2911001^2^240^263^1^i
	;;^UTILITY(U,$J,399.5,266,0)
	;;=2911001^2^960^71^1^i
	;;^UTILITY(U,$J,399.5,267,0)
	;;=2911001^6^1^204^1^opc
	;;^UTILITY(U,$J,399.5,268,0)
	;;=2911001^6^101^166^1^i
	;;^UTILITY(U,$J,399.5,269,0)
	;;=2911001^6^240^29^1^i
	;;^UTILITY(U,$J,399.5,270,0)
	;;=2911001^6^960^9^1^i
	;;^UTILITY(U,$J,399.5,271,0)
	;;=2911001^11^1^628^1^c
	;;^UTILITY(U,$J,399.5,272,0)
	;;=2911001^11^1^661^1^op
	;;^UTILITY(U,$J,399.5,273,0)
	;;=2911001^11^101^389^1^i
	;;^UTILITY(U,$J,399.5,274,0)
	;;=2911001^11^240^194^1^i
	;;^UTILITY(U,$J,399.5,275,0)
	;;=2911001^11^960^78^1^i
	;;^UTILITY(U,$J,399.5,276,0)
	;;=2911001^7^500^30^1^c
	;;^UTILITY(U,$J,399.5,277,0)
	;;=2911001^7^500^148^1^iop
	;;^UTILITY(U,$J,399.5,278,0)
	;;=2911001^8^250^20^1^iop
	;;^UTILITY(U,$J,399.5,279,0)
	;;=2911201^3^1^609^1^o
	;;^UTILITY(U,$J,399.5,280,0)
	;;=2911201^12^1^871^1^o
	;;^UTILITY(U,$J,399.5,281,0)
	;;=2911201^11^1^583^1^o
	;;^UTILITY(U,$J,399.5,282,0)
	;;=2911201^2^1^469^1^o
	;;^UTILITY(U,$J,399.5,283,0)
	;;=2911201^5^1^516^1^o
	;;^UTILITY(U,$J,399.5,284,0)
	;;=2911201^10^1^419^1^o
	;;^UTILITY(U,$J,399.5,285,0)
	;;=2911201^9^1^261^1^o
	;;^UTILITY(U,$J,399.5,286,0)
	;;=2911201^4^1^220^1^o
	;;^UTILITY(U,$J,399.5,287,0)
	;;=2911201^6^1^180^1^o
	;;^UTILITY(U,$J,399.5,288,0)
	;;=2911201^1^1^214^1^o
	;;^UTILITY(U,$J,399.5,289,0)
	;;=2911201^7^500^131^1^o
	;;^UTILITY(U,$J,399.5,290,0)
	;;=2911201^8^250^19^1^o
	;;^UTILITY(U,$J,399.5,291,0)
	;;=2921001^3^1^802^1^opc
	;;^UTILITY(U,$J,399.5,292,0)
	;;=2921001^3^101^450^1^i
	;;^UTILITY(U,$J,399.5,293,0)
	;;=2921001^3^960^155^1^i
	;;^UTILITY(U,$J,399.5,294,0)
	;;=2921001^3^240^197^1^i
	;;^UTILITY(U,$J,399.5,295,0)
	;;=2921001^12^1^1164^1^opc
	;;^UTILITY(U,$J,399.5,296,0)
	;;=2921001^12^101^642^1^i
	;;^UTILITY(U,$J,399.5,297,0)
	;;=2921001^12^960^218^1^i
	;;^UTILITY(U,$J,399.5,298,0)
	;;=2921001^12^240^304^1^i
	;;^UTILITY(U,$J,399.5,299,0)
	;;=2921001^9^1^410^1^opc
	;;^UTILITY(U,$J,399.5,300,0)
	;;=2921001^9^101^291^1^i
	;;^UTILITY(U,$J,399.5,301,0)
	;;=2921001^9^960^55^1^i
	;;^UTILITY(U,$J,399.5,302,0)
	;;=2921001^9^240^64^1^i
	;;^UTILITY(U,$J,399.5,303,0)
	;;=2921001^4^1^317^1^opc
	;;^UTILITY(U,$J,399.5,304,0)
	;;=2921001^4^101^227^1^i
	;;^UTILITY(U,$J,399.5,305,0)
	;;=2921001^4^960^46^1^i
	;;^UTILITY(U,$J,399.5,306,0)
	;;=2921001^4^240^44^1^i
	;;^UTILITY(U,$J,399.5,307,0)
	;;=2921001^5^1^712^1^opc
	;;^UTILITY(U,$J,399.5,308,0)
	;;=2921001^5^101^397^1^i
	;;^UTILITY(U,$J,399.5,309,0)
	;;=2921001^5^960^88^1^i
	;;^UTILITY(U,$J,399.5,310,0)
	;;=2921001^5^240^227^1^i
	;;^UTILITY(U,$J,399.5,311,0)
	;;=2921001^10^1^566^1^opc
	;;^UTILITY(U,$J,399.5,312,0)
	;;=2921001^10^101^327^1^i
	;;^UTILITY(U,$J,399.5,313,0)
	;;=2921001^10^960^66^1^i
	;;^UTILITY(U,$J,399.5,314,0)
	;;=2921001^10^240^173^1^i
	;;^UTILITY(U,$J,399.5,315,0)
	;;=2921001^1^1^337^1^opc
	;;^UTILITY(U,$J,399.5,316,0)
	;;=2921001^1^101^204^1^i
	;;^UTILITY(U,$J,399.5,317,0)
	;;=2921001^1^960^63^1^i
	;;^UTILITY(U,$J,399.5,318,0)
	;;=2921001^1^240^70^1^i
	;;^UTILITY(U,$J,399.5,319,0)
	;;=2921001^2^1^644^1^opc
	;;^UTILITY(U,$J,399.5,320,0)
	;;=2921001^2^101^241^1^i
	;;^UTILITY(U,$J,399.5,321,0)
	;;=2921001^2^960^86^1^i
	;;^UTILITY(U,$J,399.5,322,0)
	;;=2921001^2^240^317^1^i
	;;^UTILITY(U,$J,399.5,323,0)
	;;=2921001^6^1^227^1^opc

IBINI0C5
IBINI0C5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQR(399.5)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,399.5,324,0)
	;;=2921001^6^101^184^1^i
	;;^UTILITY(U,$J,399.5,325,0)
	;;=2921001^6^960^11^1^i
	;;^UTILITY(U,$J,399.5,326,0)
	;;=2921001^6^240^32^1^i
	;;^UTILITY(U,$J,399.5,327,0)
	;;=2921001^11^1^761^1^opc
	;;^UTILITY(U,$J,399.5,328,0)
	;;=2921001^11^101^447^1^i
	;;^UTILITY(U,$J,399.5,329,0)
	;;=2921001^11^960^91^1^i
	;;^UTILITY(U,$J,399.5,330,0)
	;;=2921001^11^240^223^1^i
	;;^UTILITY(U,$J,399.5,331,0)
	;;=2921001^7^500^163^1^iop
	;;^UTILITY(U,$J,399.5,332,0)
	;;=2921001^31^512^97^1^iopc
	;;^UTILITY(U,$J,399.5,333,0)
	;;=2921001^8^250^20^1^iop
	;;^UTILITY(U,$J,399.5,334,0)
	;;=2921001^7^500^33^1^c
	;;^UTILITY(U,$J,399.5,335,0)
	;;=2931001^3^1^827^1^opc
	;;^UTILITY(U,$J,399.5,336,0)
	;;=2931001^3^101^464^1^i
	;;^UTILITY(U,$J,399.5,337,0)
	;;=2931001^3^960^160^1^i
	;;^UTILITY(U,$J,399.5,338,0)
	;;=2931001^3^240^203^1^i
	;;^UTILITY(U,$J,399.5,339,0)
	;;=2931001^12^1^1294^1^opc
	;;^UTILITY(U,$J,399.5,340,0)
	;;=2931001^12^101^714^1^i
	;;^UTILITY(U,$J,399.5,341,0)
	;;=2931001^12^960^242^1^i
	;;^UTILITY(U,$J,399.5,342,0)
	;;=2931001^12^240^338^1^i
	;;^UTILITY(U,$J,399.5,343,0)
	;;=2931001^9^1^357^1^opc
	;;^UTILITY(U,$J,399.5,344,0)
	;;=2931001^9^101^253^1^i
	;;^UTILITY(U,$J,399.5,345,0)
	;;=2931001^9^960^48^1^i
	;;^UTILITY(U,$J,399.5,346,0)
	;;=2931001^9^240^56^1^i
	;;^UTILITY(U,$J,399.5,347,0)
	;;=2931001^4^1^343^1^opc
	;;^UTILITY(U,$J,399.5,348,0)
	;;=2931001^4^101^246^1^i
	;;^UTILITY(U,$J,399.5,349,0)
	;;=2931001^4^960^49^1^i
	;;^UTILITY(U,$J,399.5,350,0)
	;;=2931001^4^240^48^1^i
	;;^UTILITY(U,$J,399.5,351,0)
	;;=2931001^5^1^764^1^opc
	;;^UTILITY(U,$J,399.5,352,0)
	;;=2931001^5^101^426^1^i
	;;^UTILITY(U,$J,399.5,353,0)
	;;=2931001^5^960^95^1^i
	;;^UTILITY(U,$J,399.5,354,0)
	;;=2931001^5^240^243^1^i
	;;^UTILITY(U,$J,399.5,355,0)
	;;=2931001^10^1^587^1^opc
	;;^UTILITY(U,$J,399.5,356,0)
	;;=2931001^10^101^339^1^i
	;;^UTILITY(U,$J,399.5,357,0)
	;;=2931001^10^960^69^1^i
	;;^UTILITY(U,$J,399.5,358,0)
	;;=2931001^10^240^179^1^i
	;;^UTILITY(U,$J,399.5,359,0)
	;;=2931001^1^1^339^1^opc
	;;^UTILITY(U,$J,399.5,360,0)
	;;=2931001^1^101^206^1^i
	;;^UTILITY(U,$J,399.5,361,0)
	;;=2931001^1^960^63^1^i
	;;^UTILITY(U,$J,399.5,362,0)
	;;=2931001^1^240^70^1^i
	;;^UTILITY(U,$J,399.5,363,0)
	;;=2931001^2^1^674^1^opc
	;;^UTILITY(U,$J,399.5,364,0)
	;;=2931001^2^101^252^1^i
	;;^UTILITY(U,$J,399.5,365,0)
	;;=2931001^2^960^90^1^i
	;;^UTILITY(U,$J,399.5,366,0)
	;;=2931001^2^240^332^1^i
	;;^UTILITY(U,$J,399.5,367,0)
	;;=2931001^6^1^240^1^opc
	;;^UTILITY(U,$J,399.5,368,0)
	;;=2931001^6^101^195^1^i
	;;^UTILITY(U,$J,399.5,369,0)
	;;=2931001^6^960^11^1^i
	;;^UTILITY(U,$J,399.5,370,0)
	;;=2931001^6^240^34^1^i
	;;^UTILITY(U,$J,399.5,371,0)
	;;=2931001^11^1^779^1^opc
	;;^UTILITY(U,$J,399.5,372,0)
	;;=2931001^11^101^458^1^i
	;;^UTILITY(U,$J,399.5,373,0)
	;;=2931001^11^960^93^1^i
	;;^UTILITY(U,$J,399.5,374,0)
	;;=2931001^11^240^228^1^i
	;;^UTILITY(U,$J,399.5,375,0)
	;;=2931001^8^250^20^1^iop
	;;^UTILITY(U,$J,399.5,376,0)
	;;=2931001^31^512^102^1^iopc
	;;^UTILITY(U,$J,399.5,377,0)
	;;=2931001^7^500^36^1^c
	;;^UTILITY(U,$J,399.5,378,0)
	;;=2931001^7^500^178^1^iop

IBINI0C6
IBINI0C6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(409.95,0,"GL")
	;;=^SD(409.95,
	;;^DIC("B","PRINT MANAGER CLINIC SETUP",409.95)
	;;=
	;;^DIC(409.95,"%D",0)
	;;=^^6^6^2940307^^^^
	;;^DIC(409.95,"%D",1,0)
	;;=This file defines which encounter forms to use for a particular clinic.
	;;^DIC(409.95,"%D",2,0)
	;;= 
	;;^DIC(409.95,"%D",3,0)
	;;=Also, this file can be used to define other forms or reports to print,
	;;^DIC(409.95,"%D",4,0)
	;;=along with the encounter forms. The idea is that for each appointment a
	;;^DIC(409.95,"%D",5,0)
	;;=packet of forms can be printed, saving the effort of collating the forms
	;;^DIC(409.95,"%D",6,0)
	;;=manually.
	;;^DD(409.95,0)
	;;=FIELD^^2^9
	;;^DD(409.95,0,"DDA")
	;;=N
	;;^DD(409.95,0,"DT")
	;;=2930806
	;;^DD(409.95,0,"IX","A",409.9501,.01)
	;;=
	;;^DD(409.95,0,"IX","A1",409.9501,.02)
	;;=
	;;^DD(409.95,0,"IX","AE",409.9502,.01)
	;;=
	;;^DD(409.95,0,"IX","B",409.95,.01)
	;;=
	;;^DD(409.95,0,"IX","C",409.95,.02)
	;;=
	;;^DD(409.95,0,"IX","D",409.95,.03)
	;;=
	;;^DD(409.95,0,"IX","E",409.95,.04)
	;;=
	;;^DD(409.95,0,"IX","F",409.95,.05)
	;;=
	;;^DD(409.95,0,"IX","G",409.95,.06)
	;;=
	;;^DD(409.95,0,"IX","H",409.95,.07)
	;;=
	;;^DD(409.95,0,"NM","PRINT MANAGER CLINIC SETUP")
	;;=
	;;^DD(409.95,.01,0)
	;;=CLINIC^R*P44'^SC(^0;1^S DIC("S")="I $P(^(0),U,3)=""C""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.01,1,0)
	;;=^.1^^-1
	;;^DD(409.95,.01,1,1,0)
	;;=409.95^B
	;;^DD(409.95,.01,1,1,1)
	;;=S ^SD(409.95,"B",$E(X,1,30),DA)=""
	;;^DD(409.95,.01,1,1,2)
	;;=K ^SD(409.95,"B",$E(X,1,30),DA)
	;;^DD(409.95,.01,3)
	;;=The clinic the print manager setup is for.
	;;^DD(409.95,.01,12)
	;;=Encounter forms are only for clinics.
	;;^DD(409.95,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,3)=""C"""
	;;^DD(409.95,.01,21,0)
	;;=^^2^2^2930804^^
	;;^DD(409.95,.01,21,1,0)
	;;= 
	;;^DD(409.95,.01,21,2,0)
	;;=The clinic that the setup is for.
	;;^DD(409.95,.01,"DT")
	;;=2930319
	;;^DD(409.95,.02,0)
	;;=BASIC DEFAULT ENCOUNTER FORM^*P357'^IBE(357,^0;2^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.02,1,0)
	;;=^.1
	;;^DD(409.95,.02,1,1,0)
	;;=409.95^C
	;;^DD(409.95,.02,1,1,1)
	;;=S ^SD(409.95,"C",$E(X,1,30),DA)=""
	;;^DD(409.95,.02,1,1,2)
	;;=K ^SD(409.95,"C",$E(X,1,30),DA)
	;;^DD(409.95,.02,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.02,3)
	;;=What form will be the default form printed with patient data for a patient with an appointment?
	;;^DD(409.95,.02,12)
	;;=Does not allow tool kit forms or forms of type other than encounter forms.
	;;^DD(409.95,.02,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.02,21,0)
	;;=^^2^2^2930806^^^
	;;^DD(409.95,.02,21,1,0)
	;;= 
	;;^DD(409.95,.02,21,2,0)
	;;=The encounter form that will be printed for every appointment.
	;;^DD(409.95,.02,"DT")
	;;=2930806
	;;^DD(409.95,.03,0)
	;;=SUPPLMNTL FORM - ESTBLSHED PT.^*P357'^IBE(357,^0;3^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.03,1,0)
	;;=^.1
	;;^DD(409.95,.03,1,1,0)
	;;=409.95^D
	;;^DD(409.95,.03,1,1,1)
	;;=S ^SD(409.95,"D",$E(X,1,30),DA)=""
	;;^DD(409.95,.03,1,1,2)
	;;=K ^SD(409.95,"D",$E(X,1,30),DA)
	;;^DD(409.95,.03,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.03,3)
	;;=What supplemental form should be printed for patients that have been seen before?
	;;^DD(409.95,.03,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.03,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.03,21,0)
	;;=^^3^3^2930818^^^
	;;^DD(409.95,.03,21,1,0)
	;;= 
	;;^DD(409.95,.03,21,2,0)
	;;=This is a supplemental form that will print only for patients that have

IBINI0C7
IBINI0C7	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.95,.03,21,3,0)
	;;=been seen in the clinic previously.
	;;^DD(409.95,.03,"DT")
	;;=2930818
	;;^DD(409.95,.04,0)
	;;=SUPPLMNTL FORM - FIRST VISIT^*P357'^IBE(357,^0;4^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.04,1,0)
	;;=^.1
	;;^DD(409.95,.04,1,1,0)
	;;=409.95^E
	;;^DD(409.95,.04,1,1,1)
	;;=S ^SD(409.95,"E",$E(X,1,30),DA)=""
	;;^DD(409.95,.04,1,1,2)
	;;=K ^SD(409.95,"E",$E(X,1,30),DA)
	;;^DD(409.95,.04,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.04,3)
	;;=What supplemental form should be printed for first time patients?
	;;^DD(409.95,.04,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.04,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.04,21,0)
	;;=^^3^3^2940216^
	;;^DD(409.95,.04,21,1,0)
	;;= 
	;;^DD(409.95,.04,21,2,0)
	;;=This is a supplemental for that will print only for patients that have
	;;^DD(409.95,.04,21,3,0)
	;;=not been seen previously at the clinic.
	;;^DD(409.95,.04,"DT")
	;;=2930806
	;;^DD(409.95,.05,0)
	;;=FORM W/O PATIENT DATA^*P357'^IBE(357,^0;5^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.05,.1)
	;;=FORM TO PRINT WITH NO PATIENT DATA
	;;^DD(409.95,.05,1,0)
	;;=^.1
	;;^DD(409.95,.05,1,1,0)
	;;=409.95^F
	;;^DD(409.95,.05,1,1,1)
	;;=S ^SD(409.95,"F",$E(X,1,30),DA)=""
	;;^DD(409.95,.05,1,1,2)
	;;=K ^SD(409.95,"F",$E(X,1,30),DA)
	;;^DD(409.95,.05,1,1,"DT")
	;;=2930209
	;;^DD(409.95,.05,3)
	;;=Enter the form that should print in cases where you do not want patient data printed on the form.
	;;^DD(409.95,.05,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.05,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.05,21,0)
	;;=^^4^4^2940216^^^^
	;;^DD(409.95,.05,21,1,0)
	;;= 
	;;^DD(409.95,.05,21,2,0)
	;;=This is the encounter form that should be printed for unscheduled visits.
	;;^DD(409.95,.05,21,3,0)
	;;=It may have a space in the top left hand corner for imprinting the
	;;^DD(409.95,.05,21,4,0)
	;;=embossed patient card or space to write in the name, ssn, etc.
	;;^DD(409.95,.05,"DT")
	;;=2930910
	;;^DD(409.95,.06,0)
	;;=SUPPLMNTL FORM - ALL PATIENTS^*P357'^IBE(357,^0;6^S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.95,.06,1,0)
	;;=^.1
	;;^DD(409.95,.06,1,1,0)
	;;=409.95^G
	;;^DD(409.95,.06,1,1,1)
	;;=S ^SD(409.95,"G",$E(X,1,30),DA)=""
	;;^DD(409.95,.06,1,1,2)
	;;=K ^SD(409.95,"G",$E(X,1,30),DA)
	;;^DD(409.95,.06,1,1,"%D",0)
	;;=^^1^1^2930719^
	;;^DD(409.95,.06,1,1,"%D",1,0)
	;;=Used to find all clinics using this form as a supplemental form for all patients.
	;;^DD(409.95,.06,1,1,"DT")
	;;=2930719
	;;^DD(409.95,.06,3)
	;;=You may require a supplemental form to be used for all appointments for this clinic.
	;;^DD(409.95,.06,12)
	;;=Does not allow tool kit forms or forms that are not of type encounter form.
	;;^DD(409.95,.06,12.1)
	;;=S DIC("S")="I '$P($G(^(0)),U,7),$P($G(^(0)),U,4)'>1"
	;;^DD(409.95,.06,21,0)
	;;=^^4^4^2940216^^
	;;^DD(409.95,.06,21,1,0)
	;;= 
	;;^DD(409.95,.06,21,2,0)
	;;=This is a supplemental form to be used by all patients of the clinic. A
	;;^DD(409.95,.06,21,3,0)
	;;=form in this category should not also be in one of the other categories
	;;^DD(409.95,.06,21,4,0)
	;;=for supplemental forms, else it will be printed twice.
	;;^DD(409.95,.06,"DT")
	;;=2930806
	;;^DD(409.95,.07,0)
	;;=RESERVED FOR FUTURE USE^P357'^IBE(357,^0;7^Q

IBINI0C8
IBINI0C8	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.95,.07,1,0)
	;;=^.1
	;;^DD(409.95,.07,1,1,0)
	;;=409.95^H
	;;^DD(409.95,.07,1,1,1)
	;;=S ^SD(409.95,"H",$E(X,1,30),DA)=""
	;;^DD(409.95,.07,1,1,2)
	;;=K ^SD(409.95,"H",$E(X,1,30),DA)
	;;^DD(409.95,.07,1,1,"%D",0)
	;;=^^1^1^2930729^
	;;^DD(409.95,.07,1,1,"%D",1,0)
	;;=Used to track forms assigned to a clinic but not in current use.
	;;^DD(409.95,.07,1,1,"DT")
	;;=2930729
	;;^DD(409.95,.07,3)
	;;=Assign a form to this category if you don't want it to print for appointments.
	;;^DD(409.95,.07,21,0)
	;;=^^2^2^2930729^
	;;^DD(409.95,.07,21,1,0)
	;;=This category was created for clinics to assign new forms that are not yet
	;;^DD(409.95,.07,21,2,0)
	;;=complete without fear that they would be accidently printed.
	;;^DD(409.95,.07,"DT")
	;;=2930729
	;;^DD(409.95,1,0)
	;;=REPORT^409.9501IP^^1;0
	;;^DD(409.95,1,12)
	;;=Allows only package interfaces that print reports or other forms and that are available.
	;;^DD(409.95,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.95,1,21,0)
	;;=^^4^4^2940216^^
	;;^DD(409.95,1,21,1,0)
	;;= 
	;;^DD(409.95,1,21,2,0)
	;;=This is a list of reports or forms that should be printed under certain
	;;^DD(409.95,1,21,3,0)
	;;=circumstances. The only types of forms or reports that can be printed are
	;;^DD(409.95,1,21,4,0)
	;;=ones that are defined in the Package Interface file.
	;;^DD(409.95,1,"DT")
	;;=2930520
	;;^DD(409.95,2,0)
	;;=EXCLUDED REPORT^409.9502P^^2;0
	;;^DD(409.95,2,12)
	;;=Allows only available package interfaces that print reports.
	;;^DD(409.95,2,12.1)
	;;=S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
	;;^DD(409.95,2,21,0)
	;;=^^3^3^2940216^^^^
	;;^DD(409.95,2,21,1,0)
	;;=Used to override reports defined to print for the division. 
	;;^DD(409.95,2,21,2,0)
	;;=Reports defined to print for the division will not print if they are
	;;^DD(409.95,2,21,3,0)
	;;=excluded for the clinic.
	;;^DD(409.9501,0)
	;;=REPORT SUB-FIELD^^.02^2
	;;^DD(409.9501,0,"DT")
	;;=2931110
	;;^DD(409.9501,0,"IX","B",409.9501,.01)
	;;=
	;;^DD(409.9501,0,"NM","REPORT")
	;;=
	;;^DD(409.9501,0,"UP")
	;;=409.95
	;;^DD(409.9501,.01,0)
	;;=REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.9501,.01,1,0)
	;;=^.1
	;;^DD(409.9501,.01,1,1,0)
	;;=409.9501^B
	;;^DD(409.9501,.01,1,1,1)
	;;=S ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(409.9501,.01,1,1,2)
	;;=K ^SD(409.95,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(409.9501,.01,1,2,0)
	;;=409.95^A^MUMPS
	;;^DD(409.9501,.01,1,2,1)
	;;=I $P(^SD(409.95,DA(1),1,DA,0),U,2) S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
	;;^DD(409.9501,.01,1,2,2)
	;;=I $P(^SD(409.95,DA(1),1,DA,0),U,2) K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),$P(^SD(409.95,DA(1),1,DA,0),U,2),X,DA(1),DA)
	;;^DD(409.9501,.01,1,2,"%D",0)
	;;=^^6^6^2940216^
	;;^DD(409.9501,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(409.9501,.01,1,2,"%D",2,0)
	;;=Allows all of the reports that should print under certain conditons for the
	;;^DD(409.9501,.01,1,2,"%D",3,0)
	;;=clinic to be found. The subscripts are ^SD(409.95,"A",<clinic ien>,<print
	;;^DD(409.9501,.01,1,2,"%D",4,0)
	;;=condition ien >, <package interface ien>, <clinic setup ien>, <report
	;;^DD(409.9501,.01,1,2,"%D",5,0)
	;;=multiple ien>). It is not necessary to re-index the A1 cross-reference on
	;;^DD(409.9501,.01,1,2,"%D",6,0)
	;;=the PRINT CONDITION field if this field is re-indexed.
	;;^DD(409.9501,.01,1,2,"DT")
	;;=2930518
	;;^DD(409.9501,.01,3)
	;;=You can choose reports and other forms to print under conditions that you specify.

IBINI0C9
IBINI0C9	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.9501,.01,12)
	;;=Allows only reports installed in the Package Interface file.
	;;^DD(409.9501,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.9501,.01,21,0)
	;;=^^4^4^2940216^
	;;^DD(409.9501,.01,21,1,0)
	;;= 
	;;^DD(409.9501,.01,21,2,0)
	;;= 
	;;^DD(409.9501,.01,21,3,0)
	;;=An entry in the Package Interface file that should identify a routine that
	;;^DD(409.9501,.01,21,4,0)
	;;=prints the desired form or report.
	;;^DD(409.9501,.01,"DT")
	;;=2930520
	;;^DD(409.9501,.02,0)
	;;=PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
	;;^DD(409.9501,.02,1,0)
	;;=^.1
	;;^DD(409.9501,.02,1,1,0)
	;;=409.95^A1^MUMPS
	;;^DD(409.9501,.02,1,1,1)
	;;=S ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)=""
	;;^DD(409.9501,.02,1,1,2)
	;;=K ^SD(409.95,"A",$P(^SD(409.95,DA(1),0),U),X,$P(^SD(409.95,DA(1),1,DA,0),U),DA(1),DA)
	;;^DD(409.9501,.02,1,1,"%D",0)
	;;=^^7^7^2940216^
	;;^DD(409.9501,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(409.9501,.02,1,1,"%D",2,0)
	;;= 
	;;^DD(409.9501,.02,1,1,"%D",3,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.9501,.02,1,1,"%D",4,0)
	;;=the clinic to be found. The subscripts are ^SD(409.95,"A",<clinic
	;;^DD(409.9501,.02,1,1,"%D",5,0)
	;;=ien>,<print condition ien >, <package interface ien>, <clinic setup ien>,
	;;^DD(409.9501,.02,1,1,"%D",6,0)
	;;=<report multiple ien>). It is not necessary to re-index the A
	;;^DD(409.9501,.02,1,1,"%D",7,0)
	;;=cross-reference on the REPORT field if this field is re-indexed.
	;;^DD(409.9501,.02,1,1,"DT")
	;;=2930518
	;;^DD(409.9501,.02,3)
	;;=Under what condition should the report be printed?
	;;^DD(409.9501,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(409.9501,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(409.9501,.02,21,1,0)
	;;= 
	;;^DD(409.9501,.02,21,2,0)
	;;=The particular condition under which the form or report should print.
	;;^DD(409.9501,.02,"DT")
	;;=2930518
	;;^DD(409.9502,0)
	;;=EXCLUDED REPORT SUB-FIELD^^.01^1
	;;^DD(409.9502,0,"IX","B",409.9502,.01)
	;;=
	;;^DD(409.9502,0,"NM","EXCLUDED REPORT")
	;;=
	;;^DD(409.9502,0,"UP")
	;;=409.95
	;;^DD(409.9502,.01,0)
	;;=EXCLUDED REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.9502,.01,.1)
	;;=
	;;^DD(409.9502,.01,1,0)
	;;=^.1
	;;^DD(409.9502,.01,1,1,0)
	;;=409.9502^B
	;;^DD(409.9502,.01,1,1,1)
	;;=S ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)=""
	;;^DD(409.9502,.01,1,1,2)
	;;=K ^SD(409.95,DA(1),2,"B",$E(X,1,30),DA)
	;;^DD(409.9502,.01,1,2,0)
	;;=409.95^AE^MUMPS
	;;^DD(409.9502,.01,1,2,1)
	;;=S ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)=""
	;;^DD(409.9502,.01,1,2,2)
	;;=K ^SD(409.95,"AE",$P(^SD(409.95,DA(1),0),U),X,DA(1),DA)
	;;^DD(409.9502,.01,1,2,"%D",0)
	;;=^^1^1^2930622^
	;;^DD(409.9502,.01,1,2,"%D",1,0)
	;;=Used to determine if a particular report is defined NOT to print for a clinic.
	;;^DD(409.9502,.01,1,2,"DT")
	;;=2930622
	;;^DD(409.9502,.01,3)
	;;=You may enter reports that you DO NOT want to print for this clinic. Entering an EXCLUDED REPORT will prevent it from printing even if it is defined to print for the entire division.
	;;^DD(409.9502,.01,12)
	;;=Allows only available package interfaces that print reports.
	;;^DD(409.9502,.01,12.1)
	;;=S DIC("S")="I $P($G(^(0)),U,6)=4,$P($G(^(0)),U,9)=1"
	;;^DD(409.9502,.01,21,0)
	;;=^^3^3^2940216^
	;;^DD(409.9502,.01,21,1,0)
	;;=Used to override repots defined to print for the division. Reports
	;;^DD(409.9502,.01,21,2,0)
	;;=defined to print for the division will not print if they are excluded

IBINI0CA
IBINI0CA	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.95)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.9502,.01,21,3,0)
	;;=for the clinic.
	;;^DD(409.9502,.01,"DT")
	;;=2930623

IBINI0CB
IBINI0CB	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(409.96,0,"GL")
	;;=^SD(409.96,
	;;^DIC("B","PRINT MANAGER DIVISION SETUP",409.96)
	;;=
	;;^DIC(409.96,"%D",0)
	;;=^^7^7^2940307^^^^
	;;^DIC(409.96,"%D",1,0)
	;;= 
	;;^DIC(409.96,"%D",2,0)
	;;= 
	;;^DIC(409.96,"%D",3,0)
	;;=This file allows the user to specify reports or forms that should print in
	;;^DIC(409.96,"%D",4,0)
	;;=addition to the encounter forms for the entire division . Only reports
	;;^DIC(409.96,"%D",5,0)
	;;=contained in the Package Interface file can be specified. The user can
	;;^DIC(409.96,"%D",6,0)
	;;=also specify the conditions under which the report should print. The
	;;^DIC(409.96,"%D",7,0)
	;;=intent is to print packets of forms that do not require manual collation.
	;;^DD(409.96,0)
	;;=FIELD^^1^2
	;;^DD(409.96,0,"DDA")
	;;=N
	;;^DD(409.96,0,"IX","A",409.961,.01)
	;;=
	;;^DD(409.96,0,"IX","A1",409.961,.02)
	;;=
	;;^DD(409.96,0,"IX","B",409.96,.01)
	;;=
	;;^DD(409.96,0,"NM","PRINT MANAGER DIVISION SETUP")
	;;=
	;;^DD(409.96,.01,0)
	;;=DIVISION^RP40.8'^DG(40.8,^0;1^Q
	;;^DD(409.96,.01,1,0)
	;;=^.1
	;;^DD(409.96,.01,1,1,0)
	;;=409.96^B
	;;^DD(409.96,.01,1,1,1)
	;;=S ^SD(409.96,"B",$E(X,1,30),DA)=""
	;;^DD(409.96,.01,1,1,2)
	;;=K ^SD(409.96,"B",$E(X,1,30),DA)
	;;^DD(409.96,.01,3)
	;;=Enter the division for which you want to specify forms.
	;;^DD(409.96,.01,21,0)
	;;=^^2^2^2930623^^^^
	;;^DD(409.96,.01,21,1,0)
	;;= 
	;;^DD(409.96,.01,21,2,0)
	;;=The division the setup is for.
	;;^DD(409.96,.01,"DT")
	;;=2930518
	;;^DD(409.96,1,0)
	;;=REPORT^409.961IP^^1;0
	;;^DD(409.96,1,12)
	;;=Allows only package interfaces that print reports and that are available.
	;;^DD(409.96,1,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.96,1,21,0)
	;;=^^2^2^2930528^
	;;^DD(409.96,1,21,1,0)
	;;= 
	;;^DD(409.96,1,21,2,0)
	;;=The reports that should print.
	;;^DD(409.96,1,"DT")
	;;=2930520
	;;^DD(409.961,0)
	;;=REPORT SUB-FIELD^^.02^2
	;;^DD(409.961,0,"ID",.02)
	;;=S %I=Y,Y=$S('$D(^(0)):"",$D(^IBE(357.92,+$P(^(0),U,2),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(357.92,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
	;;^DD(409.961,0,"IX","B",409.961,.01)
	;;=
	;;^DD(409.961,0,"NM","REPORT")
	;;=
	;;^DD(409.961,0,"UP")
	;;=409.96
	;;^DD(409.961,.01,0)
	;;=REPORT^M*P357.6'^IBE(357.6,^0;1^S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
	;;^DD(409.961,.01,1,0)
	;;=^.1
	;;^DD(409.961,.01,1,1,0)
	;;=409.961^B
	;;^DD(409.961,.01,1,1,1)
	;;=S ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)=""
	;;^DD(409.961,.01,1,1,2)
	;;=K ^SD(409.96,DA(1),1,"B",$E(X,1,30),DA)
	;;^DD(409.961,.01,1,2,0)
	;;=409.96^A^MUMPS
	;;^DD(409.961,.01,1,2,1)
	;;=I $P(^SD(409.96,DA(1),1,DA,0),U,2) S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)=""
	;;^DD(409.961,.01,1,2,2)
	;;=I $P(^SD(409.96,DA(1),1,DA,0),U,2) K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),$P(^SD(409.96,DA(1),1,DA,0),U,2),X,DA(1),DA)
	;;^DD(409.961,.01,1,2,"%D",0)
	;;=^^7^7^2940216^
	;;^DD(409.961,.01,1,2,"%D",1,0)
	;;= 
	;;^DD(409.961,.01,1,2,"%D",2,0)
	;;= 
	;;^DD(409.961,.01,1,2,"%D",3,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.961,.01,1,2,"%D",4,0)
	;;=the division to be found. The subscripts are ^SD(409.96,"A",<division
	;;^DD(409.961,.01,1,2,"%D",5,0)
	;;=ien>,<print condition ien >, <package interface ien>, <division setup
	;;^DD(409.961,.01,1,2,"%D",6,0)
	;;=ien>, <report multiple ien>). It is not necessary to re-index the A1
	;;^DD(409.961,.01,1,2,"%D",7,0)
	;;=cross-reference on the PRINT CONDITION field if this field is re-indexed.

IBINI0CC
IBINI0CC	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	Q:'DIFQ(409.96)  F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DD(409.961,.01,1,2,"DT")
	;;=2930518
	;;^DD(409.961,.01,3)
	;;=Enter the report or form that you want to print for the entire division.
	;;^DD(409.961,.01,12)
	;;=Allows only reports installed in the Package Interface file.
	;;^DD(409.961,.01,12.1)
	;;=S DIC("S")="I $P(^(0),U,6)=4,$P(^(0),U,9)=1"
	;;^DD(409.961,.01,21,0)
	;;=^^3^3^2930528^
	;;^DD(409.961,.01,21,1,0)
	;;= 
	;;^DD(409.961,.01,21,2,0)
	;;=A report that should print. Only reports contained in the Package
	;;^DD(409.961,.01,21,3,0)
	;;=Interface file can be printed by the print manager.
	;;^DD(409.961,.01,"DT")
	;;=2930520
	;;^DD(409.961,.02,0)
	;;=PRINT CONDITION^RP357.92'^IBE(357.92,^0;2^Q
	;;^DD(409.961,.02,1,0)
	;;=^.1
	;;^DD(409.961,.02,1,1,0)
	;;=409.96^A1^MUMPS
	;;^DD(409.961,.02,1,1,1)
	;;=S ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)=""
	;;^DD(409.961,.02,1,1,2)
	;;=K ^SD(409.96,"A",$P(^SD(409.96,DA(1),0),U),X,$P(^SD(409.96,DA(1),1,DA,0),U),DA(1),DA)
	;;^DD(409.961,.02,1,1,"%D",0)
	;;=^^6^6^2940216^
	;;^DD(409.961,.02,1,1,"%D",1,0)
	;;= 
	;;^DD(409.961,.02,1,1,"%D",2,0)
	;;=Allows all of the reports that should print under certain conditons for
	;;^DD(409.961,.02,1,1,"%D",3,0)
	;;=the division to be found. The subscripts are ^SD(409.96,"A",<division
	;;^DD(409.961,.02,1,1,"%D",4,0)
	;;=ien>,<print condition ien >, <package interface ien>, <division setup
	;;^DD(409.961,.02,1,1,"%D",5,0)
	;;=ien>, <report multiple ien>). It is not necessary to re-index the A
	;;^DD(409.961,.02,1,1,"%D",6,0)
	;;=cross-reference on the REPORT field if this field is re-indexed.
	;;^DD(409.961,.02,1,1,"DT")
	;;=2930518
	;;^DD(409.961,.02,3)
	;;=Under what condition do you want the report to print?
	;;^DD(409.961,.02,4)
	;;=D HELP6^IBDFU5A
	;;^DD(409.961,.02,21,0)
	;;=^^2^2^2930528^
	;;^DD(409.961,.02,21,1,0)
	;;= 
	;;^DD(409.961,.02,21,2,0)
	;;=The condition under which the report should print.
	;;^DD(409.961,.02,"DT")
	;;=2930518

IBINI0CD
IBINI0CD	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(2,0,"DD")
	;;=@
	;;^DIC(2,0,"DEL")
	;;=Dd
	;;^DIC(2,0,"LAYGO")
	;;=Dd
	;;^DIC(2,0,"RD")
	;;=d
	;;^DIC(2,0,"WR")
	;;=Dd
	;;^DIC(36,0,"DD")
	;;=#
	;;^DIC(36,0,"DEL")
	;;=d
	;;^DIC(36,0,"LAYGO")
	;;=d
	;;^DIC(36,0,"WR")
	;;=D
	;;^DIC(350,0,"AUDIT")
	;;=@
	;;^DIC(350,0,"DD")
	;;=@
	;;^DIC(350,0,"DEL")
	;;=@
	;;^DIC(350,0,"LAYGO")
	;;=@
	;;^DIC(350,0,"RD")
	;;=@
	;;^DIC(350,0,"WR")
	;;=@
	;;^DIC(350.1,0,"AUDIT")
	;;=@
	;;^DIC(350.1,0,"DD")
	;;=@
	;;^DIC(350.1,0,"DEL")
	;;=@
	;;^DIC(350.1,0,"LAYGO")
	;;=@
	;;^DIC(350.1,0,"RD")
	;;=@
	;;^DIC(350.1,0,"WR")
	;;=@
	;;^DIC(350.2,0,"AUDIT")
	;;=@
	;;^DIC(350.2,0,"DD")
	;;=@
	;;^DIC(350.2,0,"DEL")
	;;=@
	;;^DIC(350.2,0,"LAYGO")
	;;=@
	;;^DIC(350.2,0,"RD")
	;;=@
	;;^DIC(350.2,0,"WR")
	;;=@
	;;^DIC(350.21,0,"AUDIT")
	;;=@
	;;^DIC(350.21,0,"DD")
	;;=@
	;;^DIC(350.21,0,"DEL")
	;;=@
	;;^DIC(350.21,0,"LAYGO")
	;;=@
	;;^DIC(350.21,0,"RD")
	;;=@
	;;^DIC(350.21,0,"WR")
	;;=@
	;;^DIC(350.3,0,"AUDIT")
	;;=@
	;;^DIC(350.3,0,"DD")
	;;=@
	;;^DIC(350.3,0,"DEL")
	;;=@
	;;^DIC(350.3,0,"LAYGO")
	;;=@
	;;^DIC(350.3,0,"RD")
	;;=@
	;;^DIC(350.3,0,"WR")
	;;=@
	;;^DIC(350.4,0,"DD")
	;;=@
	;;^DIC(350.4,0,"DEL")
	;;=@
	;;^DIC(350.41,0,"DD")
	;;=@
	;;^DIC(350.41,0,"DEL")
	;;=@
	;;^DIC(350.41,0,"LAYGO")
	;;=@
	;;^DIC(350.41,0,"WR")
	;;=@
	;;^DIC(350.5,0,"DD")
	;;=@
	;;^DIC(350.6,0,"AUDIT")
	;;=@
	;;^DIC(350.6,0,"DD")
	;;=@
	;;^DIC(350.6,0,"DEL")
	;;=@
	;;^DIC(350.6,0,"LAYGO")
	;;=@
	;;^DIC(350.6,0,"RD")
	;;=@
	;;^DIC(350.6,0,"WR")
	;;=@
	;;^DIC(350.7,0,"DD")
	;;=@
	;;^DIC(350.71,0,"DD")
	;;=@
	;;^DIC(350.8,0,"AUDIT")
	;;=@
	;;^DIC(350.8,0,"DD")
	;;=@
	;;^DIC(350.8,0,"DEL")
	;;=@
	;;^DIC(350.8,0,"LAYGO")
	;;=@
	;;^DIC(350.8,0,"RD")
	;;=@
	;;^DIC(350.8,0,"WR")
	;;=@
	;;^DIC(350.9,0,"AUDIT")
	;;=@
	;;^DIC(350.9,0,"DD")
	;;=@
	;;^DIC(350.9,0,"DEL")
	;;=@
	;;^DIC(350.9,0,"LAYGO")
	;;=@
	;;^DIC(350.9,0,"RD")
	;;=@
	;;^DIC(350.9,0,"WR")
	;;=@
	;;^DIC(351,0,"DD")
	;;=@
	;;^DIC(351.1,0,"DD")
	;;=@
	;;^DIC(351.2,0,"AUDIT")
	;;=@
	;;^DIC(351.2,0,"DD")
	;;=@
	;;^DIC(351.2,0,"DEL")
	;;=@
	;;^DIC(351.2,0,"LAYGO")
	;;=@
	;;^DIC(351.2,0,"RD")
	;;=@
	;;^DIC(351.2,0,"WR")
	;;=@
	;;^DIC(352.1,0,"AUDIT")
	;;=@
	;;^DIC(352.1,0,"DD")
	;;=@
	;;^DIC(352.1,0,"DEL")
	;;=@
	;;^DIC(352.1,0,"LAYGO")
	;;=@
	;;^DIC(352.1,0,"RD")
	;;=@
	;;^DIC(352.1,0,"WR")
	;;=@
	;;^DIC(352.2,0,"AUDIT")
	;;=@
	;;^DIC(352.2,0,"DD")
	;;=@
	;;^DIC(352.2,0,"DEL")
	;;=@
	;;^DIC(352.2,0,"LAYGO")
	;;=@
	;;^DIC(352.2,0,"RD")
	;;=@
	;;^DIC(352.2,0,"WR")
	;;=@
	;;^DIC(352.3,0,"AUDIT")
	;;=@
	;;^DIC(352.3,0,"DD")
	;;=@
	;;^DIC(352.3,0,"DEL")
	;;=@
	;;^DIC(352.3,0,"LAYGO")
	;;=@
	;;^DIC(352.3,0,"RD")
	;;=@
	;;^DIC(352.3,0,"WR")
	;;=@
	;;^DIC(352.4,0,"AUDIT")
	;;=@
	;;^DIC(352.4,0,"DD")
	;;=@
	;;^DIC(352.4,0,"DEL")
	;;=@
	;;^DIC(352.4,0,"LAYGO")
	;;=@
	;;^DIC(352.4,0,"RD")
	;;=@
	;;^DIC(352.4,0,"WR")
	;;=@
	;;^DIC(353,0,"AUDIT")
	;;=@
	;;^DIC(353,0,"DD")
	;;=@
	;;^DIC(353,0,"DEL")
	;;=@
	;;^DIC(353,0,"LAYGO")
	;;=@
	;;^DIC(353,0,"WR")
	;;=@
	;;^DIC(353.1,0,"AUDIT")
	;;=@
	;;^DIC(353.1,0,"DD")
	;;=@
	;;^DIC(353.1,0,"DEL")
	;;=@
	;;^DIC(353.1,0,"LAYGO")
	;;=@
	;;^DIC(353.1,0,"RD")
	;;=@
	;;^DIC(353.1,0,"WR")
	;;=@
	;;^DIC(353.2,0,"AUDIT")
	;;=@
	;;^DIC(353.2,0,"DD")
	;;=@
	;;^DIC(353.2,0,"DEL")
	;;=@
	;;^DIC(353.2,0,"LAYGO")
	;;=@
	;;^DIC(353.2,0,"RD")
	;;=@
	;;^DIC(353.2,0,"WR")
	;;=@
	;;^DIC(354,0,"AUDIT")
	;;=@
	;;^DIC(354,0,"DD")
	;;=@
	;;^DIC(354,0,"DEL")
	;;=@
	;;^DIC(354,0,"LAYGO")
	;;=@
	;;^DIC(354,0,"RD")
	;;=@
	;;^DIC(354,0,"WR")
	;;=@
	;;^DIC(354.1,0,"AUDIT")
	;;=@
	;;^DIC(354.1,0,"DD")
	;;=@
	;;^DIC(354.1,0,"DEL")
	;;=@
	;;^DIC(354.1,0,"LAYGO")
	;;=@
	;;^DIC(354.1,0,"RD")
	;;=@
	;;^DIC(354.1,0,"WR")
	;;=@
	;;^DIC(354.2,0,"AUDIT")
	;;=@
	;;^DIC(354.2,0,"DD")
	;;=@
	;;^DIC(354.2,0,"DEL")
	;;=@

IBINI0CE
IBINI0CE	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(354.2,0,"LAYGO")
	;;=@
	;;^DIC(354.2,0,"RD")
	;;=@
	;;^DIC(354.2,0,"WR")
	;;=@
	;;^DIC(354.3,0,"AUDIT")
	;;=@
	;;^DIC(354.3,0,"DD")
	;;=@
	;;^DIC(354.3,0,"DEL")
	;;=@
	;;^DIC(354.3,0,"LAYGO")
	;;=@
	;;^DIC(354.3,0,"RD")
	;;=@
	;;^DIC(354.3,0,"WR")
	;;=@
	;;^DIC(354.4,0,"AUDIT")
	;;=@
	;;^DIC(354.4,0,"DD")
	;;=@
	;;^DIC(354.4,0,"DEL")
	;;=@
	;;^DIC(354.4,0,"LAYGO")
	;;=@
	;;^DIC(354.4,0,"RD")
	;;=@
	;;^DIC(354.4,0,"WR")
	;;=@
	;;^DIC(354.5,0,"AUDIT")
	;;=@
	;;^DIC(354.5,0,"DD")
	;;=@
	;;^DIC(354.5,0,"DEL")
	;;=@
	;;^DIC(354.5,0,"LAYGO")
	;;=@
	;;^DIC(354.5,0,"RD")
	;;=@
	;;^DIC(354.5,0,"WR")
	;;=@
	;;^DIC(354.6,0,"AUDIT")
	;;=@
	;;^DIC(354.6,0,"DD")
	;;=@
	;;^DIC(354.6,0,"DEL")
	;;=@
	;;^DIC(354.6,0,"LAYGO")
	;;=@
	;;^DIC(355.1,0,"AUDIT")
	;;=@
	;;^DIC(355.1,0,"DD")
	;;=@
	;;^DIC(355.1,0,"DEL")
	;;=@
	;;^DIC(355.1,0,"LAYGO")
	;;=@
	;;^DIC(355.1,0,"WR")
	;;=@
	;;^DD(355.1,.03,9)
	;;=@
	;;^DIC(355.2,0,"AUDIT")
	;;=@
	;;^DIC(355.2,0,"DD")
	;;=@
	;;^DIC(355.2,0,"DEL")
	;;=@
	;;^DIC(355.2,0,"LAYGO")
	;;=@
	;;^DIC(355.2,0,"WR")
	;;=@
	;;^DIC(355.3,0,"AUDIT")
	;;=@
	;;^DIC(355.3,0,"DD")
	;;=@
	;;^DIC(355.3,0,"DEL")
	;;=@
	;;^DIC(355.3,0,"LAYGO")
	;;=@
	;;^DIC(355.3,0,"WR")
	;;=@
	;;^DIC(355.4,0,"AUDIT")
	;;=@
	;;^DIC(355.4,0,"DD")
	;;=@
	;;^DIC(355.4,0,"DEL")
	;;=@
	;;^DIC(355.4,0,"LAYGO")
	;;=@
	;;^DIC(355.4,0,"WR")
	;;=@
	;;^DIC(355.5,0,"DD")
	;;=@
	;;^DIC(355.5,0,"DEL")
	;;=@
	;;^DIC(355.5,0,"LAYGO")
	;;=@
	;;^DIC(355.5,0,"WR")
	;;=@
	;;^DIC(355.6,0,"AUDIT")
	;;=@
	;;^DIC(355.6,0,"DD")
	;;=@
	;;^DIC(355.6,0,"DEL")
	;;=@
	;;^DIC(355.6,0,"LAYGO")
	;;=@
	;;^DIC(355.6,0,"WR")
	;;=@
	;;^DIC(355.7,0,"AUDIT")
	;;=@
	;;^DIC(355.7,0,"DD")
	;;=@
	;;^DIC(355.7,0,"DEL")
	;;=@
	;;^DIC(355.7,0,"LAYGO")
	;;=@
	;;^DIC(355.7,0,"WR")
	;;=@
	;;^DIC(356,0,"AUDIT")
	;;=@
	;;^DIC(356,0,"DD")
	;;=@
	;;^DIC(356,0,"DEL")
	;;=@
	;;^DIC(356,0,"LAYGO")
	;;=@
	;;^DIC(356,0,"WR")
	;;=@
	;;^DD(356,.12,9)
	;;=@
	;;^DIC(356.1,0,"AUDIT")
	;;=@
	;;^DIC(356.1,0,"DD")
	;;=@
	;;^DIC(356.1,0,"DEL")
	;;=@
	;;^DIC(356.1,0,"LAYGO")
	;;=@
	;;^DIC(356.1,0,"WR")
	;;=@
	;;^DIC(356.11,0,"AUDIT")
	;;=@
	;;^DIC(356.11,0,"DD")
	;;=@
	;;^DIC(356.11,0,"DEL")
	;;=@
	;;^DIC(356.11,0,"LAYGO")
	;;=@
	;;^DIC(356.11,0,"RD")
	;;=@
	;;^DIC(356.11,0,"WR")
	;;=@
	;;^DIC(356.2,0,"AUDIT")
	;;=@
	;;^DIC(356.2,0,"DD")
	;;=@
	;;^DIC(356.2,0,"DEL")
	;;=@
	;;^DIC(356.2,0,"LAYGO")
	;;=@
	;;^DIC(356.2,0,"WR")
	;;=@
	;;^DIC(356.21,0,"AUDIT")
	;;=@
	;;^DIC(356.21,0,"DD")
	;;=@
	;;^DIC(356.21,0,"DEL")
	;;=@
	;;^DIC(356.21,0,"LAYGO")
	;;=@
	;;^DIC(356.21,0,"RD")
	;;=@
	;;^DIC(356.21,0,"WR")
	;;=@
	;;^DIC(356.3,0,"AUDIT")
	;;=@
	;;^DIC(356.3,0,"DD")
	;;=@
	;;^DIC(356.3,0,"DEL")
	;;=@
	;;^DIC(356.3,0,"LAYGO")
	;;=@
	;;^DIC(356.3,0,"RD")
	;;=@
	;;^DIC(356.3,0,"WR")
	;;=@
	;;^DIC(356.399,0,"AUDIT")
	;;=@
	;;^DIC(356.399,0,"DD")
	;;=@
	;;^DIC(356.399,0,"DEL")
	;;=@
	;;^DIC(356.399,0,"LAYGO")
	;;=@
	;;^DIC(356.399,0,"RD")
	;;=@
	;;^DIC(356.399,0,"WR")
	;;=@
	;;^DIC(356.4,0,"AUDIT")
	;;=@
	;;^DIC(356.4,0,"DD")
	;;=@
	;;^DIC(356.4,0,"DEL")
	;;=@
	;;^DIC(356.4,0,"LAYGO")
	;;=@
	;;^DIC(356.4,0,"RD")
	;;=@
	;;^DIC(356.4,0,"WR")
	;;=@
	;;^DIC(356.5,0,"AUDIT")
	;;=@
	;;^DIC(356.5,0,"DD")
	;;=@
	;;^DIC(356.5,0,"DEL")
	;;=@
	;;^DIC(356.5,0,"LAYGO")
	;;=@
	;;^DIC(356.5,0,"WR")
	;;=@
	;;^DIC(356.6,0,"AUDIT")
	;;=@
	;;^DIC(356.6,0,"DD")
	;;=@
	;;^DIC(356.6,0,"DEL")
	;;=@
	;;^DIC(356.6,0,"LAYGO")
	;;=@
	;;^DIC(356.6,0,"RD")
	;;=@
	;;^DIC(356.6,0,"WR")
	;;=@
	;;^DIC(356.7,0,"AUDIT")
	;;=@
	;;^DIC(356.7,0,"DD")
	;;=@
	;;^DIC(356.7,0,"DEL")
	;;=@
	;;^DIC(356.7,0,"LAYGO")
	;;=@
	;;^DIC(356.7,0,"RD")
	;;=@
	;;^DIC(356.7,0,"WR")
	;;=@
	;;^DIC(356.8,0,"AUDIT")
	;;=@
	;;^DIC(356.8,0,"DD")
	;;=@
	;;^DIC(356.8,0,"DEL")
	;;=@
	;;^DIC(356.8,0,"LAYGO")
	;;=@

IBINI0CF
IBINI0CF	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(356.8,0,"RD")
	;;=@
	;;^DIC(356.8,0,"WR")
	;;=@
	;;^DIC(356.9,0,"AUDIT")
	;;=@
	;;^DIC(356.9,0,"DD")
	;;=@
	;;^DIC(356.9,0,"DEL")
	;;=@
	;;^DIC(356.9,0,"LAYGO")
	;;=@
	;;^DIC(356.9,0,"WR")
	;;=@
	;;^DIC(356.91,0,"AUDIT")
	;;=@
	;;^DIC(356.91,0,"DD")
	;;=@
	;;^DIC(356.91,0,"DEL")
	;;=@
	;;^DIC(356.91,0,"LAYGO")
	;;=@
	;;^DIC(356.91,0,"WR")
	;;=@
	;;^DIC(356.93,0,"AUDIT")
	;;=@
	;;^DIC(356.93,0,"DD")
	;;=@
	;;^DIC(356.93,0,"DEL")
	;;=@
	;;^DIC(356.93,0,"LAYGO")
	;;=@
	;;^DIC(356.93,0,"WR")
	;;=@
	;;^DIC(356.94,0,"AUDIT")
	;;=@
	;;^DIC(356.94,0,"DD")
	;;=@
	;;^DIC(356.94,0,"DEL")
	;;=@
	;;^DIC(356.94,0,"LAYGO")
	;;=@
	;;^DIC(356.94,0,"WR")
	;;=@
	;;^DIC(357,0,"AUDIT")
	;;=@
	;;^DIC(357,0,"DD")
	;;=@
	;;^DIC(357,0,"DEL")
	;;=@
	;;^DIC(357,0,"LAYGO")
	;;=@
	;;^DIC(357,0,"RD")
	;;=@
	;;^DIC(357,0,"WR")
	;;=@
	;;^DIC(357.1,0,"AUDIT")
	;;=@
	;;^DIC(357.1,0,"DD")
	;;=@
	;;^DIC(357.1,0,"DEL")
	;;=@
	;;^DIC(357.1,0,"LAYGO")
	;;=@
	;;^DIC(357.1,0,"RD")
	;;=@
	;;^DIC(357.1,0,"WR")
	;;=@
	;;^DIC(357.2,0,"AUDIT")
	;;=@
	;;^DIC(357.2,0,"DD")
	;;=@
	;;^DIC(357.2,0,"DEL")
	;;=@
	;;^DIC(357.2,0,"LAYGO")
	;;=@
	;;^DIC(357.2,0,"RD")
	;;=@
	;;^DIC(357.2,0,"WR")
	;;=@
	;;^DIC(357.3,0,"AUDIT")
	;;=@
	;;^DIC(357.3,0,"DD")
	;;=@
	;;^DIC(357.3,0,"DEL")
	;;=@
	;;^DIC(357.3,0,"LAYGO")
	;;=@
	;;^DIC(357.3,0,"RD")
	;;=@
	;;^DIC(357.3,0,"WR")
	;;=@
	;;^DIC(357.4,0,"AUDIT")
	;;=@
	;;^DIC(357.4,0,"DD")
	;;=@
	;;^DIC(357.4,0,"DEL")
	;;=@
	;;^DIC(357.4,0,"LAYGO")
	;;=@
	;;^DIC(357.4,0,"RD")
	;;=@
	;;^DIC(357.4,0,"WR")
	;;=@
	;;^DIC(357.5,0,"AUDIT")
	;;=@
	;;^DIC(357.5,0,"DD")
	;;=@
	;;^DIC(357.5,0,"DEL")
	;;=@
	;;^DIC(357.5,0,"LAYGO")
	;;=@
	;;^DIC(357.5,0,"RD")
	;;=@
	;;^DIC(357.5,0,"WR")
	;;=@
	;;^DIC(357.6,0,"AUDIT")
	;;=@
	;;^DIC(357.6,0,"DD")
	;;=@
	;;^DIC(357.6,0,"DEL")
	;;=@
	;;^DIC(357.6,0,"LAYGO")
	;;=@
	;;^DIC(357.6,0,"RD")
	;;=@
	;;^DIC(357.6,0,"WR")
	;;=@
	;;^DIC(357.7,0,"AUDIT")
	;;=@
	;;^DIC(357.7,0,"DD")
	;;=@
	;;^DIC(357.7,0,"DEL")
	;;=@
	;;^DIC(357.7,0,"LAYGO")
	;;=@
	;;^DIC(357.7,0,"RD")
	;;=@
	;;^DIC(357.7,0,"WR")
	;;=@
	;;^DIC(357.8,0,"AUDIT")
	;;=@
	;;^DIC(357.8,0,"DD")
	;;=@
	;;^DIC(357.8,0,"DEL")
	;;=@
	;;^DIC(357.8,0,"LAYGO")
	;;=@
	;;^DIC(357.8,0,"RD")
	;;=@
	;;^DIC(357.8,0,"WR")
	;;=@
	;;^DIC(357.91,0,"AUDIT")
	;;=@
	;;^DIC(357.91,0,"DD")
	;;=@
	;;^DIC(357.91,0,"DEL")
	;;=@
	;;^DIC(357.91,0,"LAYGO")
	;;=@
	;;^DIC(357.91,0,"RD")
	;;=@
	;;^DIC(357.91,0,"WR")
	;;=@
	;;^DIC(357.92,0,"AUDIT")
	;;=@
	;;^DIC(357.92,0,"DD")
	;;=@
	;;^DIC(357.92,0,"DEL")
	;;=@
	;;^DIC(357.92,0,"LAYGO")
	;;=@
	;;^DIC(357.92,0,"RD")
	;;=@
	;;^DIC(357.92,0,"WR")
	;;=@
	;;^DIC(358,0,"AUDIT")
	;;=@
	;;^DIC(358,0,"DD")
	;;=@
	;;^DIC(358,0,"DEL")
	;;=@
	;;^DIC(358,0,"LAYGO")
	;;=@
	;;^DIC(358,0,"RD")
	;;=@
	;;^DIC(358,0,"WR")
	;;=@
	;;^DIC(358.1,0,"AUDIT")
	;;=@
	;;^DIC(358.1,0,"DD")
	;;=@
	;;^DIC(358.1,0,"DEL")
	;;=@
	;;^DIC(358.1,0,"LAYGO")
	;;=@
	;;^DIC(358.1,0,"RD")
	;;=@
	;;^DIC(358.1,0,"WR")
	;;=@
	;;^DIC(358.2,0,"AUDIT")
	;;=@
	;;^DIC(358.2,0,"DD")
	;;=@
	;;^DIC(358.2,0,"DEL")
	;;=@
	;;^DIC(358.2,0,"LAYGO")
	;;=@
	;;^DIC(358.2,0,"RD")
	;;=@
	;;^DIC(358.2,0,"WR")
	;;=@
	;;^DIC(358.3,0,"AUDIT")
	;;=@
	;;^DIC(358.3,0,"DD")
	;;=@
	;;^DIC(358.3,0,"DEL")
	;;=@
	;;^DIC(358.3,0,"LAYGO")
	;;=@
	;;^DIC(358.3,0,"RD")
	;;=@
	;;^DIC(358.3,0,"WR")
	;;=@
	;;^DIC(358.4,0,"AUDIT")
	;;=@
	;;^DIC(358.4,0,"DD")
	;;=@
	;;^DIC(358.4,0,"DEL")
	;;=@
	;;^DIC(358.4,0,"LAYGO")
	;;=@
	;;^DIC(358.4,0,"RD")
	;;=@
	;;^DIC(358.4,0,"WR")
	;;=@
	;;^DIC(358.5,0,"AUDIT")
	;;=@
	;;^DIC(358.5,0,"DD")
	;;=@
	;;^DIC(358.5,0,"DEL")
	;;=@
	;;^DIC(358.5,0,"LAYGO")
	;;=@
	;;^DIC(358.5,0,"RD")
	;;=@
	;;^DIC(358.5,0,"WR")
	;;=@
	;;^DIC(358.6,0,"AUDIT")
	;;=@
	;;^DIC(358.6,0,"DD")
	;;=@
	;;^DIC(358.6,0,"DEL")
	;;=@

IBINI0CG
IBINI0CG	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	I DSEC F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^DIC(358.6,0,"LAYGO")
	;;=@
	;;^DIC(358.6,0,"RD")
	;;=@
	;;^DIC(358.6,0,"WR")
	;;=@
	;;^DIC(358.7,0,"AUDIT")
	;;=@
	;;^DIC(358.7,0,"DD")
	;;=@
	;;^DIC(358.7,0,"DEL")
	;;=@
	;;^DIC(358.7,0,"LAYGO")
	;;=@
	;;^DIC(358.7,0,"RD")
	;;=@
	;;^DIC(358.7,0,"WR")
	;;=@
	;;^DIC(358.8,0,"AUDIT")
	;;=@
	;;^DIC(358.8,0,"DD")
	;;=@
	;;^DIC(358.8,0,"DEL")
	;;=@
	;;^DIC(358.8,0,"LAYGO")
	;;=@
	;;^DIC(358.8,0,"RD")
	;;=@
	;;^DIC(358.8,0,"WR")
	;;=@
	;;^DIC(358.91,0,"AUDIT")
	;;=@
	;;^DIC(358.91,0,"DD")
	;;=@
	;;^DIC(358.91,0,"DEL")
	;;=@
	;;^DIC(358.91,0,"LAYGO")
	;;=@
	;;^DIC(358.91,0,"RD")
	;;=@
	;;^DIC(358.91,0,"WR")
	;;=@
	;;^DIC(362.1,0,"AUDIT")
	;;=@
	;;^DIC(362.1,0,"DD")
	;;=@
	;;^DIC(362.1,0,"DEL")
	;;=@
	;;^DIC(362.1,0,"LAYGO")
	;;=@
	;;^DIC(362.1,0,"WR")
	;;=@
	;;^DIC(362.3,0,"AUDIT")
	;;=@
	;;^DIC(362.3,0,"DD")
	;;=@
	;;^DIC(362.3,0,"DEL")
	;;=@
	;;^DIC(362.3,0,"LAYGO")
	;;=@
	;;^DIC(362.3,0,"WR")
	;;=@
	;;^DIC(362.4,0,"AUDIT")
	;;=@
	;;^DIC(362.4,0,"DD")
	;;=@
	;;^DIC(362.4,0,"DEL")
	;;=@
	;;^DIC(362.4,0,"LAYGO")
	;;=@
	;;^DIC(362.4,0,"WR")
	;;=@
	;;^DIC(362.5,0,"AUDIT")
	;;=@
	;;^DIC(362.5,0,"DD")
	;;=@
	;;^DIC(362.5,0,"DEL")
	;;=@
	;;^DIC(362.5,0,"LAYGO")
	;;=@
	;;^DIC(362.5,0,"WR")
	;;=@
	;;^DIC(399,0,"DD")
	;;=@
	;;^DIC(399,0,"DEL")
	;;=@
	;;^DIC(399,0,"LAYGO")
	;;=@
	;;^DIC(399,0,"RD")
	;;=@
	;;^DIC(399,0,"WR")
	;;=@
	;;^DIC(399.1,0,"DD")
	;;=@
	;;^DIC(399.2,0,"DD")
	;;=@
	;;^DIC(399.3,0,"DD")
	;;=@
	;;^DIC(399.4,0,"DD")
	;;=@
	;;^DIC(399.5,0,"AUDIT")
	;;=d
	;;^DIC(399.5,0,"DD")
	;;=@
	;;^DIC(399.5,0,"DEL")
	;;=d
	;;^DIC(399.5,0,"LAYGO")
	;;=d
	;;^DIC(399.5,0,"RD")
	;;=dD
	;;^DIC(399.5,0,"WR")
	;;=d
	;;^DIC(409.95,0,"AUDIT")
	;;=@
	;;^DIC(409.95,0,"DD")
	;;=@
	;;^DIC(409.95,0,"DEL")
	;;=@
	;;^DIC(409.95,0,"LAYGO")
	;;=@
	;;^DIC(409.95,0,"RD")
	;;=@
	;;^DIC(409.95,0,"WR")
	;;=@
	;;^DIC(409.96,0,"AUDIT")
	;;=@
	;;^DIC(409.96,0,"DD")
	;;=@
	;;^DIC(409.96,0,"DEL")
	;;=@
	;;^DIC(409.96,0,"LAYGO")
	;;=@
	;;^DIC(409.96,0,"RD")
	;;=@
	;;^DIC(409.96,0,"WR")
	;;=@

IBINI0CH
IBINI0CH	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIBT",526,0)
	;;=IB BILLING RATES^2900529.0958^^399.5^^^2920708^
	;;^UTILITY(U,$J,"DIBT",526,2,1)
	;;=399.5^^BILLING BEDSECTION^'".02^
	;;^UTILITY(U,$J,"DIBT",526,2,1,"CM")
	;;=S Y(1)=$S($D(^DGCR(399.5,D0,0)):^(0),1:"") S X=$S('$D(^DGCR(399.1,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(1)=X
	;;^UTILITY(U,$J,"DIBT",526,2,2)
	;;=399.5^.01^EFFECTIVE DATE^^
	;;^UTILITY(U,$J,"DIBT",526,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",526,2,2,"F")
	;;=2891000.99999
	;;^UTILITY(U,$J,"DIBT",526,2,2,"IX")
	;;=^DGCR(399.5,"B",^DGCR(399.5,^2
	;;^UTILITY(U,$J,"DIBT",526,2,2,"T")
	;;=z
	;;^UTILITY(U,$J,"DIBT",526,2,3)
	;;=399.5^^BILLING BEDSECTION^".02^;S2
	;;^UTILITY(U,$J,"DIBT",526,2,3,"CM")
	;;=S Y(1)=$S($D(^DGCR(399.5,D0,0)):^(0),1:"") S X=$S('$D(^DGCR(399.1,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(3)=X
	;;^UTILITY(U,$J,"DIBT",526,2,4)
	;;=399.5^.05^ACTIVE^^
	;;^UTILITY(U,$J,"DIBT",526,2,5)
	;;=399.5^^REVENUE CODE^".03^
	;;^UTILITY(U,$J,"DIBT",526,2,5,"CM")
	;;=S Y(1)=$S($D(^DGCR(399.5,D0,0)):^(0),1:"") S X=$S('$D(^DGCR(399.2,+$P(Y(1),U,3),0)):"",1:$P(^(0),U,1)) I D0>0 S X(5)=X
	;;^UTILITY(U,$J,"DIBT",526,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIBT",526,"%D",1,0)
	;;=Billing Rates List.
	;;^UTILITY(U,$J,"DIBT",642,0)
	;;=IB INCOMPLETE^2910318.1059^^350^^^2920708^
	;;^UTILITY(U,$J,"DIBT",642,2,1)
	;;=350^.05^STATUS^]^
	;;^UTILITY(U,$J,"DIBT",642,2,1,"F")
	;;=.99999
	;;^UTILITY(U,$J,"DIBT",642,2,1,"IX")
	;;=^IB("AC",^IB(^2
	;;^UTILITY(U,$J,"DIBT",642,2,1,"T")
	;;=2
	;;^UTILITY(U,$J,"DIBT",642,2,2)
	;;=350^^PATIENT^".02^
	;;^UTILITY(U,$J,"DIBT",642,2,2,"CM")
	;;=S Y(1)=$S($D(^IB(D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(2)=X
	;;^UTILITY(U,$J,"DIBT",642,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIBT",642,"%D",1,0)
	;;=Integrated Billing Action List of entries with a Status of Incomplete.
	;;^UTILITY(U,$J,"DIBT",646,0)
	;;=IB CLK PROD^2920521.1136^@^399^10882^@^2940315
	;;^UTILITY(U,$J,"DIBT",646,2,1)
	;;=399^1^DATE ENTERED^'^;"Date Entered"
	;;^UTILITY(U,$J,"DIBT",646,2,1,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",646,2,1,"F")
	;;=2910100.99999^2910101
	;;^UTILITY(U,$J,"DIBT",646,2,1,"IX")
	;;=^DGCR(399,"APD",^DGCR(399,^2
	;;^UTILITY(U,$J,"DIBT",646,2,1,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",646,2,2)
	;;=399^^ENTERED/EDITED BY^+@"2^;"Clerk Entered By";S1
	;;^UTILITY(U,$J,"DIBT",646,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",646,2,2,"CM")
	;;=S Y(1)=$S($D(^DGCR(399,D0,"S")):^("S"),1:"") S X=$S('$D(^VA(200,+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(2)=X
	;;^UTILITY(U,$J,"DIBT",646,2,2,"F")
	;;=.99999^1
	;;^UTILITY(U,$J,"DIBT",646,2,2,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",646,2,3)
	;;=399^^RATE TYPE^@".07^;"Rate Type";
	;;^UTILITY(U,$J,"DIBT",646,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",646,2,3,"CM")
	;;=S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$S('$D(^DGCR(399.3,+$P(Y(1),U,7),0)):"",1:$P(^(0),U,1)) I D0>0 S X(3)=X
	;;^UTILITY(U,$J,"DIBT",646,2,3,"F")
	;;=.99999^1
	;;^UTILITY(U,$J,"DIBT",646,2,3,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",646,2,4)
	;;=399^1^DATE ENTERED^^
	;;^UTILITY(U,$J,"DIBT",646,2,4,"IX")
	;;=^DGCR(399,"APD",^DGCR(399,^2
	;;^UTILITY(U,$J,"DIBT",646,"%D",0)
	;;=^^1^1^2920708^^^^
	;;^UTILITY(U,$J,"DIBT",646,"%D",1,0)
	;;=Clerk Productivity Report.
	;;^UTILITY(U,$J,"DIBT",802,0)
	;;=IB PRINT THRESHOLD^2930506.0933^@^354.3^1453^@^2931005
	;;^UTILITY(U,$J,"DIBT",802,2,1)
	;;=354.3^.02^TYPE^^;S1
	;;^UTILITY(U,$J,"DIBT",802,2,1,"IX")
	;;=^IBE(354.3,"AC",^IBE(354.3,^2
	;;^UTILITY(U,$J,"DIBT",802,2,2)
	;;=354.3^.01^DATE^^
	;;^UTILITY(U,$J,"DIBT",802,2,2,"ASK")
	;;=

IBINI0CI
IBINI0CI	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIBT",802,2,2,"F")
	;;=2930505.99999^T
	;;^UTILITY(U,$J,"DIBT",802,2,2,"IX")
	;;=^IBE(354.3,"B",^IBE(354.3,^2
	;;^UTILITY(U,$J,"DIBT",802,2,2,"T")
	;;=2930506.9999^T
	;;^UTILITY(U,$J,"DIBT",803,0)
	;;=IB BILLING PATIENT BY STATUS^2930324.0819^@^354^1453^@^2930421
	;;^UTILITY(U,$J,"DIBT",803,2,1)
	;;=354^.04^COPAY INCOME EXEMPTION STATUS^@+^
	;;^UTILITY(U,$J,"DIBT",803,2,1,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",803,2,1,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",803,2,1,"IX")
	;;=^IBA(354,"AEX",^IBA(354,^2
	;;^UTILITY(U,$J,"DIBT",803,2,1,"T")
	;;=Z^Z
	;;^UTILITY(U,$J,"DIBT",803,2,2)
	;;=354^.03^COPAY EXEMPTION STATUS DATE^'@^
	;;^UTILITY(U,$J,"DIBT",803,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",803,2,2,"F")
	;;=2900628.99999^T-999
	;;^UTILITY(U,$J,"DIBT",803,2,2,"IX")
	;;=^IBA(354,"AD",^IBA(354,^2
	;;^UTILITY(U,$J,"DIBT",803,2,2,"T")
	;;=2930324.9999^T
	;;^UTILITY(U,$J,"DIBT",803,2,3)
	;;=354^^PATIENT NAME^@".01^
	;;^UTILITY(U,$J,"DIBT",803,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",803,2,3,"CM")
	;;=S X(3)=$P($G(^DPT(+D0,0)),U)
	;;^UTILITY(U,$J,"DIBT",803,2,3,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",803,2,3,"T")
	;;=Z^Z
	;;^UTILITY(U,$J,"DIBT",804,0)
	;;=IB BILLING PATIENT BY REASON^2930324.0857^@^354^1453^@^2930507
	;;^UTILITY(U,$J,"DIBT",804,2,1)
	;;=354^^COPAY EXEMPTION REASON^@+".05^
	;;^UTILITY(U,$J,"DIBT",804,2,1,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",804,2,1,"CM")
	;;=S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$S('$D(^IBE(354.2,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1)) I D0>0 S X(1)=X
	;;^UTILITY(U,$J,"DIBT",804,2,1,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",804,2,1,"T")
	;;=ZZZZ^ZZZZ
	;;^UTILITY(U,$J,"DIBT",804,2,2)
	;;=354^.03^COPAY EXEMPTION STATUS DATE^'@^
	;;^UTILITY(U,$J,"DIBT",804,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",804,2,2,"F")
	;;=2920323.99999^T-365
	;;^UTILITY(U,$J,"DIBT",804,2,2,"IX")
	;;=^IBA(354,"AD",^IBA(354,^2
	;;^UTILITY(U,$J,"DIBT",804,2,2,"T")
	;;=2930324.9999^T
	;;^UTILITY(U,$J,"DIBT",804,2,3)
	;;=354^^PATIENT NAME^@".01^
	;;^UTILITY(U,$J,"DIBT",804,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",804,2,3,"CM")
	;;=S X(3)=$P($G(^DPT(+D0,0)),U)
	;;^UTILITY(U,$J,"DIBT",804,2,3,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",804,2,3,"T")
	;;=ZZZZ^ZZZZ
	;;^UTILITY(U,$J,"DIBT",819,0)
	;;=IB BILLING PAT W/INCOME^2930408.1559^@^354^1453^@^2930427
	;;^UTILITY(U,$J,"DIBT",819,2,1)
	;;=354^^COPAY EXEMPTION REASON^@+".05^
	;;^UTILITY(U,$J,"DIBT",819,2,1,"CM")
	;;=S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$S('$D(^IBE(354.2,+$P(Y(1),U,5),0)):"",1:$P(^(0),U,1)) I D0>0 S X(1)=X
	;;^UTILITY(U,$J,"DIBT",819,2,1,"F")
	;;=NO INCOME DAT@z^NO INCOME DATA
	;;^UTILITY(U,$J,"DIBT",819,2,1,"T")
	;;=NO INCOME DATA^NO INCOME DATA
	;;^UTILITY(U,$J,"DIBT",819,2,2)
	;;=354^.03^COPAY EXEMPTION STATUS DATE^'@^
	;;^UTILITY(U,$J,"DIBT",819,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",819,2,2,"F")
	;;=2930406.99999^T-1
	;;^UTILITY(U,$J,"DIBT",819,2,2,"IX")
	;;=^IBA(354,"AD",^IBA(354,^2
	;;^UTILITY(U,$J,"DIBT",819,2,2,"T")
	;;=2930408.9999^T
	;;^UTILITY(U,$J,"DIBT",819,2,3)
	;;=354^^PATIENT NAME^@".01^
	;;^UTILITY(U,$J,"DIBT",819,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",819,2,3,"CM")
	;;=S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S X(3)=X
	;;^UTILITY(U,$J,"DIBT",819,2,3,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",819,2,3,"T")
	;;=Z^Z
	;;^UTILITY(U,$J,"DIBT",820,0)
	;;=IB EXEMPT PATIENTS^2930423.1557^@^354^0^@^2930510
	;;^UTILITY(U,$J,"DIBT",820,2,1)
	;;=354^.04^COPAY INCOME EXEMPTION STATUS^@+^
	;;^UTILITY(U,$J,"DIBT",820,2,1,"F")
	;;=.99999^1
	;;^UTILITY(U,$J,"DIBT",820,2,1,"IX")
	;;=^IBA(354,"AEX",^IBA(354,^2

IBINI0CJ
IBINI0CJ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIBT",820,2,1,"T")
	;;=1^1
	;;^UTILITY(U,$J,"DIBT",820,2,2)
	;;=354^.03^COPAY EXEMPTION STATUS DATE^'@^
	;;^UTILITY(U,$J,"DIBT",820,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",820,2,2,"F")
	;;=2930413.99999^T-9
	;;^UTILITY(U,$J,"DIBT",820,2,2,"IX")
	;;=^IBA(354,"AD",^IBA(354,^2
	;;^UTILITY(U,$J,"DIBT",820,2,2,"T")
	;;=2930423.9999^T
	;;^UTILITY(U,$J,"DIBT",820,2,3)
	;;=354^^PATIENT NAME^@".01^
	;;^UTILITY(U,$J,"DIBT",820,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",820,2,3,"CM")
	;;=S Y(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D0>0 S X(3)=X
	;;^UTILITY(U,$J,"DIBT",820,2,3,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",820,2,3,"T")
	;;=Z^Z
	;;^UTILITY(U,$J,"DIBT",829,0)
	;;=IB EXEMPTION LETTER^2930604.1544^^354^^^2940309
	;;^UTILITY(U,$J,"DIBT",845,0)
	;;=IB AB COMMENTS^2940211.0941^@^362.1^10882^@^2940317
	;;^UTILITY(U,$J,"DIBT",845,2,1)
	;;=362.1^.05^DATE ENTERED^^;S1
	;;^UTILITY(U,$J,"DIBT",845,2,1,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",845,2,1,"F")
	;;=2930100.99999^1 1 93
	;;^UTILITY(U,$J,"DIBT",845,2,1,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",845,2,2)
	;;=362.1^^CLAIMS TRACKING ID:EVENT TYPE^@"^;S1
	;;^UTILITY(U,$J,"DIBT",845,2,2,"CM")
	;;=X DPP(2,"OVF0",9.2) S X=$S('$D(^IBE(356.6,+$P(Y(101),U,18),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) I D0>0 S X(2)=X
	;;^UTILITY(U,$J,"DIBT",845,2,2,"F")
	;;=?z^@
	;;^UTILITY(U,$J,"DIBT",845,2,2,"OVF0",9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(362.1,D0,0)):^(0),1:""),D0=$P(Y(1),U,2) S:'$D(^IBT(356,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIBT",845,2,2,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",845,2,3)
	;;=362.1^^CLAIMS TRACKING ID:PATIENT^@"^;"CLAIMS TRACKING PATIENT"
	;;^UTILITY(U,$J,"DIBT",845,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",845,2,3,"CM")
	;;=X DPP(3,"OVF0",9.2) S X=$S('$D(^DPT(+$P(Y(101),U,2),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) I D0>0 S X(3)=X
	;;^UTILITY(U,$J,"DIBT",845,2,3,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",845,2,3,"OVF0",9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(362.1,D0,0)):^(0),1:""),D0=$P(Y(1),U,2) S:'$D(^IBT(356,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIBT",845,2,3,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",845,2,4)
	;;=362.1^^CLAIMS TRACKING ID:EPISODE DATE^@"^^^D
	;;^UTILITY(U,$J,"DIBT",845,2,4,"CM")
	;;=X DPP(4,"OVF0",9.2) S X=$P(Y(101),U,6) S D0=I(0,0) I D0>0 S X(4)=X
	;;^UTILITY(U,$J,"DIBT",845,2,4,"F")
	;;=?z^@
	;;^UTILITY(U,$J,"DIBT",845,2,4,"OVF0",9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(362.1,D0,0)):^(0),1:""),D0=$P(Y(1),U,2) S:'$D(^IBT(356,+D0,0)) D0=-1 S Y(101)=$S($D(^IBT(356,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIBT",845,2,4,"T")
	;;=z^
	;;^UTILITY(U,$J,"DIBT",851,0)
	;;=IB INACTIVE INS CO^2931104.111^@^36^1453^@^2940228
	;;^UTILITY(U,$J,"DIBT",851,2,1)
	;;=36^.05^INACTIVE^'@^
	;;^UTILITY(U,$J,"DIBT",851,2,1,"F")
	;;=.99999^1
	;;^UTILITY(U,$J,"DIBT",851,2,1,"T")
	;;=1^1
	;;^UTILITY(U,$J,"DIBT",851,2,2)
	;;=36^.01^NAME^@^;"INSURANCE COMPANY"
	;;^UTILITY(U,$J,"DIBT",851,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",851,2,2,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",851,2,2,"IX")
	;;=^DIC(36,"B",^DIC(36,^2
	;;^UTILITY(U,$J,"DIBT",851,2,2,"T")
	;;=Z^Z
	;;^UTILITY(U,$J,"DIBT",853,0)
	;;=IBNOTVER^2931129.1527^^2^^^2940309^
	;;^UTILITY(U,$J,"DIBT",853,2,1)
	;;=2.312^1.03^DATE LAST VERIFIED^]@^
	;;^UTILITY(U,$J,"DIBT",853,2,1,2)
	;;=.312
	;;^UTILITY(U,$J,"DIBT",853,2,1,"F")
	;;=?z^@
	;;^UTILITY(U,$J,"DIBT",853,2,1,"T")
	;;=@^@
	;;^UTILITY(U,$J,"DIBT",853,2,2)
	;;=2.312^1.01^DATE ENTERED^@^
	;;^UTILITY(U,$J,"DIBT",853,2,2,2)
	;;=.312

IBINI0CK
IBINI0CK	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIBT",853,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",853,2,2,"F")
	;;=2931128.99999^T
	;;^UTILITY(U,$J,"DIBT",853,2,2,"T")
	;;=2931129.9999^T
	;;^UTILITY(U,$J,"DIBT",854,0)
	;;=IBNOTVER1^2931129.155^@^2^1453^@^2940309
	;;^UTILITY(U,$J,"DIBT",854,2,1)
	;;=2.312^^INSURANCE TYPE^'".01^
	;;^UTILITY(U,$J,"DIBT",854,2,1,2)
	;;=.312
	;;^UTILITY(U,$J,"DIBT",854,2,1,"CM")
	;;=S Y(1)=$S($D(^DPT(D0,.312,D1,0)):^(0),1:"") S X=$S('$D(^DIC(36,+$P(Y(1),U,1),0)):"",1:$P(^(0),U,1)) I D1>0 S X(1)=X
	;;^UTILITY(U,$J,"DIBT",854,2,1,"IX")
	;;=^DPT("AB",^DPT(^2
	;;^UTILITY(U,$J,"DIBT",854,2,2)
	;;=2.312^1.03^DATE LAST VERIFIED^@'^
	;;^UTILITY(U,$J,"DIBT",854,2,2,2)
	;;=.312
	;;^UTILITY(U,$J,"DIBT",854,2,2,"F")
	;;=?z^@
	;;^UTILITY(U,$J,"DIBT",854,2,2,"T")
	;;=@^@
	;;^UTILITY(U,$J,"DIBT",854,2,3)
	;;=2.312^1.01^DATE ENTERED^@'^
	;;^UTILITY(U,$J,"DIBT",854,2,3,2)
	;;=.312
	;;^UTILITY(U,$J,"DIBT",854,2,3,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",854,2,3,"F")
	;;=2931128.99999^T
	;;^UTILITY(U,$J,"DIBT",854,2,3,"T")
	;;=2931129.9999^T
	;;^UTILITY(U,$J,"DIBT",854,2,4)
	;;=2^.01^NAME^^
	;;^UTILITY(U,$J,"DIBT",854,2,4,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",854,2,4,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",854,2,4,"IX")
	;;=^DPT("B",^DPT(^2
	;;^UTILITY(U,$J,"DIBT",854,2,4,"T")
	;;=B^B
	;;^UTILITY(U,$J,"DIBT",877,0)
	;;=IBT LIST VISITS^2940124.0915^@^356^1453^@^2940318
	;;^UTILITY(U,$J,"DIBT",877,2,1)
	;;=356^.06^EPISODE DATE^]'^
	;;^UTILITY(U,$J,"DIBT",877,2,1,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",877,2,1,"F")
	;;=2940114.99999^T-9
	;;^UTILITY(U,$J,"DIBT",877,2,1,"IX")
	;;=^IBT(356,"D",^IBT(356,^2
	;;^UTILITY(U,$J,"DIBT",877,2,1,"T")
	;;=2940124.9999^T
	;;^UTILITY(U,$J,"DIBT",877,2,2)
	;;=356^^PATIENT^".02^
	;;^UTILITY(U,$J,"DIBT",877,2,2,"ASK")
	;;=
	;;^UTILITY(U,$J,"DIBT",877,2,2,"CM")
	;;=S Y(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$S('$D(^DPT(+$P(Y(1),U,2),0)):"",1:$P(^(0),U,1)) I D0>0 S X(2)=X
	;;^UTILITY(U,$J,"DIBT",877,2,2,"F")
	;;=@z^A
	;;^UTILITY(U,$J,"DIBT",877,2,2,"T")
	;;=ZZZ^ZZZ
	;;^UTILITY(U,$J,"DIE",318,0)
	;;=IB RATE EDIT^2920206.1418^^399.3^1453^^2931201
	;;^UTILITY(U,$J,"DIE",318,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",318,"%D",1,0)
	;;=Update Rate Type File.
	;;^UTILITY(U,$J,"DIE",318,"DR",1,399.3)
	;;=.01;.02;.04;.05;.08;.09;.03;.06;
	;;^UTILITY(U,$J,"DIE",319,0)
	;;=IB ACTIVATE^2880620^^399.2^^^2931201^
	;;^UTILITY(U,$J,"DIE",319,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",319,"%D",1,0)
	;;=Activate/inactivate revenue codes.
	;;^UTILITY(U,$J,"DIE",319,"DR",1,399.2)
	;;=2;
	;;^UTILITY(U,$J,"DIE",320,0)
	;;=IB MAIL^2880624^^399^^^^
	;;^UTILITY(U,$J,"DIE",320,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",320,"%D",1,0)
	;;=Enter/edit a bill's mailing address.
	;;^UTILITY(U,$J,"DIE",320,"DR",1,399)
	;;=104;105;106;107;108;109;
	;;^UTILITY(U,$J,"DIE",732,0)
	;;=IB EDIT SITE PARAM^2930204.0859^@^350.9^1453^@^2940112
	;;^UTILITY(U,$J,"DIE",732,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",732,"%D",1,0)
	;;=Enter/edit Integrated Billing Site Parameters.
	;;^UTILITY(U,$J,"DIE",732,"DR",1,350.9)
	;;=.02;.03;.07;.08;.09;.13;.14;.11;.12;
	;;^UTILITY(U,$J,"DIE",734,0)
	;;=IB EDIT CLEAR^2910304.0803^@^350.9^1453^@^2940314
	;;^UTILITY(U,$J,"DIE",734,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",734,"%D",1,0)
	;;=Clear Integrated Billing Filer Parameters.
	;;^UTILITY(U,$J,"DIE",734,"DR",1,350.9)
	;;=.04///@;.1///@;
	;;^UTILITY(U,$J,"DIE",1029,0)
	;;=IB REVCODE EDIT^2920917.1008^^399^0^^2920917
	;;^UTILITY(U,$J,"DIE",1029,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",1029,"%D",1,0)
	;;=Enter/Edit a bill's revenue code information.

IBINI0CL
IBINI0CL	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1029,"DR",1,399)
	;;=D:$D(IBIFN) RCD^IBCU1;42;202;S:'X Y="@999";203;I $P(^DGCR(399,DA,"U1"),"^",11)="" S Y="@999";210;@999;
	;;^UTILITY(U,$J,"DIE",1029,"DR",2,399.042)
	;;=.01;.02;.03;.04;.05;I $P(^DGCR(399,DA,0),U,5)<3 S Y="@99";.06;I X="" S Y="@99";.07;@99;
	;;^UTILITY(U,$J,"DIE",1030,0)
	;;=IB BILLING CYCLE ADJUST^2920225.14^@^351^0^@^2940307
	;;^UTILITY(U,$J,"DIE",1030,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",1030,"%D",1,0)
	;;=Patient Billing Clock Maintenance, edit existing entry.
	;;^UTILITY(U,$J,"DIE",1030,"DR",1,351)
	;;=.03;.04;.05;I $P(^IBE(351,D0,0),"^",9)<91 S Y="@1";.06;I $P(^IBE(351,D0,0),"^",9)<181 S Y="@1";.07;I $P(^IBE(351,D0,0),"^",9)<271 S Y="@1";.08;@1;.09;15;
	;;^UTILITY(U,$J,"DIE",1031,0)
	;;=IB BILLING CYCLE ADD^2920225.1359^@^351^0^@^2940128
	;;^UTILITY(U,$J,"DIE",1031,"%D",0)
	;;=^^1^1^2920724^^^^
	;;^UTILITY(U,$J,"DIE",1031,"%D",1,0)
	;;=Patient Billing Clock Maintenance, new entry.
	;;^UTILITY(U,$J,"DIE",1031,"DR",1,351)
	;;=.03;.04;.05;I $P(^IBE(351,D0,0),"^",9)<91 S Y="@1";.06;I $P(^IBE(351,D0,0),"^",9)<181 S Y="@1";.07;I $P(^IBE(351,D0,0),"^",9)<271 S Y="@1";.08;@1;.09;
	;;^UTILITY(U,$J,"DIE",1034,0)
	;;=IB EDIT MCCR PARM^2940112.1455^^350.9^10882^@^2940318
	;;^UTILITY(U,$J,"DIE",1034,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIE",1034,"%D",1,0)
	;;=Enter/edit MCCR Site Parameters.
	;;^UTILITY(U,$J,"DIE",1034,"DR",1,350.9)
	;;=I '$D(IBDR) S IBDR="1,2,3,4,5";S:IBDR'["1" Y="@2";1.05;1.06;1.21;1.14;1.25;@2;S:IBDR'["2" Y="@3";1.01;1.02;1.08;@3;S:IBDR'["3" Y="@4";1.22;1.23;1.15;1.16;1.17;1.18;1.19;.12;1.28;.15;1.29;1.3;@4;S:IBDR'["4" Y="@5";1.1;1.2;1.04;1.31;
	;;^UTILITY(U,$J,"DIE",1034,"DR",1,350.9,1)
	;;=2.07;1.27;1.07;1.09;.09;.11;@5;S:IBDR'["5" Y="@99";1.26;2.01;2.02;2.03;2.04;2.05;2.06;@99;
	;;^UTILITY(U,$J,"DIE",1034,"ROU")
	;;=^IBXPAR
	;;^UTILITY(U,$J,"DIE",1034,"ROUOLD")
	;;=IBXPAR
	;;^UTILITY(U,$J,"DIE",1054,0)
	;;=IB STATUS^2920922.0906^^399^11416^^2940318
	;;^UTILITY(U,$J,"DIE",1054,"%D",0)
	;;=^^1^1^2920708^^
	;;^UTILITY(U,$J,"DIE",1054,"%D",1,0)
	;;=Edit a bill's status.
	;;^UTILITY(U,$J,"DIE",1054,"DIAB",1,1,399.044,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1054,"DR",1,399)
	;;=S DIE("NO^")="OUTOK";I $D(IBYY) S Y=IBYY;@90;9;I $S(X="":1,X=1:1,1:0) S Y="@99";S IBX3=3;44;S Y="@99";@92;I $P(^DGCR(399,DA,"S"),"^",12)]"" S Y="@94";12///^S X=DT;S Y="@99";@94;14///^S X=DT;@99;K DIE("NO^");
	;;^UTILITY(U,$J,"DIE",1054,"DR",2,399.044)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1054,"ROU")
	;;=^IBXST
	;;^UTILITY(U,$J,"DIE",1054,"ROUOLD")
	;;=IBXST
	;;^UTILITY(U,$J,"DIE",1059,0)
	;;=IB DEVICE^2940114.1615^@^353^10882^@^2940227
	;;^UTILITY(U,$J,"DIE",1059,"%D",0)
	;;=^^1^1^2920708^^
	;;^UTILITY(U,$J,"DIE",1059,"%D",1,0)
	;;=Bill Form Print Device Setup.
	;;^UTILITY(U,$J,"DIE",1059,"DR",1,353)
	;;=.01;.02;.03;
	;;^UTILITY(U,$J,"DIE",1071,0)
	;;=IB SCREEN1^2940216.1051^@^399^1453^@^2940317
	;;^UTILITY(U,$J,"DIE",1071,"%D",0)
	;;=^^1^1^2920708^^
	;;^UTILITY(U,$J,"DIE",1071,"%D",1,0)
	;;=Enter/Edit billing screen 1, demographic information.
	;;^UTILITY(U,$J,"DIE",1071,"DIAB",1,0,399,0)
	;;=.02:
	;;^UTILITY(U,$J,"DIE",1071,"DIAB",1,2,2.01,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1071,"DR",1,399)
	;;=^2^DPT(^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");S:IBDR20'["16" Y="@17";110;@17;S:IBDR20'["17" Y="@18";I $D(DFN) D DIS^DGRPDB W !!;.18;@18;D:IBDR20[11 DEM^VADPT;
	;;^UTILITY(U,$J,"DIE",1071,"DR",2,2)
	;;=S:IBDR20'["11" Y="@12";.03;@12;S:IBDR20'["12" Y="@13";1;@13;S:IBDR20'["13" Y="@14";.02;.05;@14;S:IBDR20'["14" Y="@15";1901;.361;@15;S:IBDR20'["15" Y="@16";.111;S:X="" Y=.114;.112;S:X="" Y=.114;.113;.114;.115;.1112;.117;.131;.12105;

IBINI0CM
IBINI0CM	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1071,"DR",2,2,1)
	;;=S:X="N" Y="@915" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,*7,"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,*7,"But I need at least one line of a Temporary address." S Y=.12105;.1212;
	;;^UTILITY(U,$J,"DIE",1071,"DR",2,2,2)
	;;=S:X']"" Y=.1214;.1213;.1214;.1215;.12112;.1219;@915;K DIE("NO^");@16;
	;;^UTILITY(U,$J,"DIE",1071,"DR",3,2.01)
	;;=.01:1
	;;^UTILITY(U,$J,"DIE",1071,"ROU")
	;;=^IBXSC1
	;;^UTILITY(U,$J,"DIE",1071,"ROUOLD")
	;;=IBXSC1
	;;^UTILITY(U,$J,"DIE",1072,0)
	;;=IB SCREEN2^2940308.1606^@^399^10882^@^2940316
	;;^UTILITY(U,$J,"DIE",1072,"DIAB",1,0,399,0)
	;;=.02:
	;;^UTILITY(U,$J,"DIE",1072,"DR",1,399)
	;;=^2^DPT(^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
	;;^UTILITY(U,$J,"DIE",1072,"DR",2,2)
	;;=S:IBDR20'["21" Y="@41";.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115;.3116;.3117;.2205;.3119;@41;S:IBDR20'["22" Y="@42";.251;S:X']"" Y="@42";.252;
	;;^UTILITY(U,$J,"DIE",1072,"DR",2,2,1)
	;;=S:X']"" Y=.255;.253;S:X']"" Y=.255;.254;.255;.256;.2206;.258;@42;
	;;^UTILITY(U,$J,"DIE",1072,"ROU")
	;;=^IBXSC2
	;;^UTILITY(U,$J,"DIE",1072,"ROUOLD")
	;;=IBXSC2
	;;^UTILITY(U,$J,"DIE",1074,0)
	;;=IB SCREEN4^2940227.17^@^399^10882^@^2940314
	;;^UTILITY(U,$J,"DIE",1074,"DIAB",1,1,399.04,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1074,"DR",1,399)
	;;=S:IBDR20'["41" Y="@42";160;159;158;@42;S:IBDR20'["42" Y="@43";162;@43;S:IBDR20'["43" Y="@45";I IBPTF S Y="@943";S Y="@45";@943;D DX^IBCSC4B;@45;@46;S:IBDR20'["46" Y="@47";41;@47;S:IBDR20'["47" Y="@44";40;@44;S:IBDR20'["44" Y="@48";
	;;^UTILITY(U,$J,"DIE",1074,"DR",1,399,1)
	;;=S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;D PRO^IBCSC4B;S IBASKCOD=1;@48;S:IBDR20'["48" Y="@49";I $P(^DGCR(399,DA,0),U,19)=2 S Y="@49";47;@49;
	;;^UTILITY(U,$J,"DIE",1074,"DR",2,399.04)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1074,"DR",2,399.041)
	;;=.01;.02;I $P(^DGCR(399,DA(1),0),U,19)'=2 S Y="@454";.03;S Y="@455";@454;I '$P(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0),U,10) S Y="@455";.04;@455;
	;;^UTILITY(U,$J,"DIE",1074,"DR",2,399.047)
	;;=.01;.02;
	;;^UTILITY(U,$J,"DIE",1074,"ROU")
	;;=^IBXSC4
	;;^UTILITY(U,$J,"DIE",1074,"ROUOLD")
	;;=IBXSC4
	;;^UTILITY(U,$J,"DIE",1075,0)
	;;=IB SCREEN5^2940227.1701^@^399^10882^@^2940318
	;;^UTILITY(U,$J,"DIE",1075,"DIAB",1,1,399.04,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1075,"DIAB",1,1,399.043,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1075,"DR",1,399)
	;;=S:IBDR20'["53" Y="@51";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@51;S:IBDR20'["51" Y="@52";.03;@52;S:IBDR20'["52" Y="@55";@55;@56;S:IBDR20'["57" Y="@58";41;@56;@58;S:IBDR20'["58" Y="@54";40;@54;S:IBDR20'["54" Y="@59";
	;;^UTILITY(U,$J,"DIE",1075,"DR",1,399,1)
	;;=S IBZ20=$P(^DGCR(399,DA,0),U,9);.09;S IBASKCOD=1;@59;S:IBDR20'["59" Y="@999";I $P(^DGCR(399,DA,0),U,19)=2 S Y="@999";47;@999;
	;;^UTILITY(U,$J,"DIE",1075,"DR",2,399.04)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1075,"DR",2,399.041)
	;;=.01;.02;I $P(^DGCR(399,DA(1),0),U,19)'=2 S Y="@554";.03;S Y="@555";@554;I '$P(^DGCR(399.1,+^DGCR(399,DA(1),"OC",DA,0),0),U,10) S Y="@555";.04;@555;
	;;^UTILITY(U,$J,"DIE",1075,"DR",2,399.043)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1075,"DR",2,399.047)
	;;=.01;.02;
	;;^UTILITY(U,$J,"DIE",1075,"ROU")
	;;=^IBXSC5
	;;^UTILITY(U,$J,"DIE",1075,"ROUOLD")
	;;=IBXSC5
	;;^UTILITY(U,$J,"DIE",1076,0)
	;;=IB SCREEN6^2940201.1541^@^399^10882^@^2940317
	;;^UTILITY(U,$J,"DIE",1076,"DR",1,399)
	;;=S:IBDR20'["61" Y="@62";.06;216;217;@62;S:IBDR20'["62" Y="@63";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@63";153;@63;S:IBDR20'["63" Y="@64";151;152;@64;S:IBDR20'["64" Y="@65";161;165;@65;S:IBDR20'["65" Y="@66";D RCD^IBCU1;42;202;

IBINI0CN
IBINI0CN	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1076,"DR",1,399,1)
	;;=S:'X Y="@99";203;@99;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@66";210;@66;
	;;^UTILITY(U,$J,"DIE",1076,"DR",2,399.042)
	;;=.01;.02;.03;.04;.05;I $P(^DGCR(399,DA(1),0),U,19)'=2 S Y="@658";.06;.07;@658;
	;;^UTILITY(U,$J,"DIE",1076,"ROU")
	;;=^IBXSC6
	;;^UTILITY(U,$J,"DIE",1076,"ROUOLD")
	;;=IBXSC6
	;;^UTILITY(U,$J,"DIE",1077,0)
	;;=IB SCREEN7^2940201.1542^@^399^10882^@^2940318
	;;^UTILITY(U,$J,"DIE",1077,"DIAB",1,1,399.043,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1077,"DR",1,399)
	;;=S:IBDR20'["74" Y="@71";S:$D(IBOUT) Y="@999";43;@999;K IBOUT;@71;S:IBDR20'["71" Y="@72";.06;216;217;@72;S:IBDR20'["72" Y="@73";155;S:X=0 Y=156;157;156;S:'$D(IBOX) Y="@73";153;@73;S:IBDR20'["73" Y="@75";151;152;@75;
	;;^UTILITY(U,$J,"DIE",1077,"DR",1,399,1)
	;;=S:IBDR20'["75" Y="@76";D RCD^IBCU1;42;202;S:'X Y="@99";203;@99;I $P(^DGCR(399,DA,"U1"),"^",11)']"" S Y="@76";210;@76;
	;;^UTILITY(U,$J,"DIE",1077,"DR",2,399.042)
	;;=.01;.02;.03;.04;.05;I $P(^DGCR(399,DA(1),0),U,19)'=2 S Y="@758";.06;.07;@758;
	;;^UTILITY(U,$J,"DIE",1077,"DR",2,399.043)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1077,"ROU")
	;;=^IBXSC7
	;;^UTILITY(U,$J,"DIE",1077,"ROUOLD")
	;;=IBXSC7
	;;^UTILITY(U,$J,"DIE",1079,0)
	;;=IB SCREEN8^2930614.1514^@^399^10882^@^2940128
	;;^UTILITY(U,$J,"DIE",1079,"DR",1,399)
	;;=S:IBDR20'["81" Y="@82";208;@82;S:IBDR20'["82" Y="@83";204;@83;S:IBDR20'["83" Y="@84";205;@84;S:IBDR20'["84" Y="@85";206;@85;S:IBDR20'["85" Y="@86";207;@86;S:IBDR20'["86" Y="@87";213;@87;S:IBDR20'["87" Y="@88";214;@88;
	;;^UTILITY(U,$J,"DIE",1079,"DR",1,399,1)
	;;=S:IBDR20'["88" Y="@89";163;@89;
	;;^UTILITY(U,$J,"DIE",1079,"ROU")
	;;=^IBXSC8
	;;^UTILITY(U,$J,"DIE",1079,"ROUOLD")
	;;=IBXSC8
	;;^UTILITY(U,$J,"DIE",1080,0)
	;;=IB SCREEN8H^2940119.1628^@^399^10882^@^2940310
	;;^UTILITY(U,$J,"DIE",1080,"DR",1,399)
	;;=S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";400;@83;S:IBDR20'["83" Y="@84";163;@84;
	;;^UTILITY(U,$J,"DIE",1080,"ROU")
	;;=^IBXSC8H
	;;^UTILITY(U,$J,"DIE",1080,"ROUOLD")
	;;=IBXSC8H
	;;^UTILITY(U,$J,"DIE",1182,0)
	;;=IB NEW EXEMPTION^2930119.104^@^354.1^1453^@^2940318
	;;^UTILITY(U,$J,"DIE",1182,"DR",1,354.1)
	;;=I '$D(DFN)!('$D(IBTYPE))!('$D(IBSTAT))!('$D(IBEXREA)) S Y="@99";.02////^S X=DFN;.03////^S X=IBTYPE;.04////^S X=IBSTAT;.05////^S X=IBEXREA;.06////^S X=IBHOW;.07////^S X=DUZ;.08///NOW;.1////1;.11////^S X=$G(IBASIG);
	;;^UTILITY(U,$J,"DIE",1182,"DR",1,354.1,1)
	;;=I '$D(IBPRIOR) S Y="@99";.15////^S X=IBPRIOR;@99;
	;;^UTILITY(U,$J,"DIE",1182,"ROU")
	;;=^IBXEX
	;;^UTILITY(U,$J,"DIE",1182,"ROUOLD")
	;;=IBXEX
	;;^UTILITY(U,$J,"DIE",1183,0)
	;;=IB CURRENT STATUS^2930119.1005^@^354^1453^@^2940318
	;;^UTILITY(U,$J,"DIE",1183,"DR",1,354)
	;;=I '$D(IBSTAT)!('$D(IBDT)) S Y="@99";.04////^S X=+IBSTAT;.03////^S X=IBDT;.05////^S X=IBEXREA;@99;
	;;^UTILITY(U,$J,"DIE",1183,"ROU")
	;;=^IBXEXS
	;;^UTILITY(U,$J,"DIE",1183,"ROUOLD")
	;;=IBXEXS
	;;^UTILITY(U,$J,"DIE",1184,0)
	;;=IB INACTIVATE EXEMPTION^2930126.1153^@^354.1^1453^@^2940318
	;;^UTILITY(U,$J,"DIE",1184,"DR",1,354.1)
	;;=I '$D(IBX) S Y="@99";.1////0;.15///@;@99;
	;;^UTILITY(U,$J,"DIE",1184,"ROU")
	;;=^IBXEXI
	;;^UTILITY(U,$J,"DIE",1184,"ROUOLD")
	;;=IBXEXI
	;;^UTILITY(U,$J,"DIE",1185,0)
	;;=IB ENTER THRESHOLD^2930319.1445^@^354.3^1453^@^2940215
	;;^UTILITY(U,$J,"DIE",1185,"DR",1,354.3)
	;;=S IBTH="";.01;.02//PENSION PLUS A&A;S IBTH=+$P(^IBE(354.3,DA,0),"^",2);.03;I IBTH=4 S Y="@99";.04;.12;.05;.06;.07;.08;.09;.1;.11;@99;
	;;^UTILITY(U,$J,"DIE",1228,0)
	;;=IBDF POSITION COPIED BLOCK^2930713.1246^^357.1^^^2940302^
	;;^UTILITY(U,$J,"DIE",1228,"%D",0)
	;;=^^1^1^2940308^

IBINI0CO
IBINI0CO	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1228,"%D",1,0)
	;;=Used to position a copied block onto a form.
	;;^UTILITY(U,$J,"DIE",1228,"DIAB",5,0,357.1,0)
	;;=.06;T;REQ
	;;^UTILITY(U,$J,"DIE",1228,"DIAB",7,0,357.1,0)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1228,"DR",1,357.1)
	;;=.04;S IBY=X;.05;S IBX=X;.06R~T~;I (X+IBX)>$G(IBFORMW) W !,"WARNING!, The block extends past the right margin!";.07R~T~;I (X+IBY)>$G(IBFORMHT) W !,"WARNING!, The block extends past the bottom margin!";S IBDONE=1;
	;;^UTILITY(U,$J,"DIE",1229,0)
	;;=IBDF EDIT HEADER&OUTLINE^2930415.0801^^357.1^^^2940309^
	;;^UTILITY(U,$J,"DIE",1229,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1229,"%D",1,0)
	;;=Used to edit a block's header and outline.
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",2,0,357.1,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",3,0,357.1,0)
	;;=.11;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",5,0,357.1,0)
	;;=.12;T
	;;^UTILITY(U,$J,"DIE",1229,"DIAB",7,0,357.1,0)
	;;=.1;T
	;;^UTILITY(U,$J,"DIE",1229,"DR",1,357.1)
	;;=.01////^S X=IBNAME;.13T~;.11T~;I $P(^IBE(357.1,D0,0),U,11)="" S Y="@1";.12T~;@1;.1T~;
	;;^UTILITY(U,$J,"DIE",1230,0)
	;;=IBDF EDIT DATA FIELD^2930617.1514^^357.5^^^2940302^
	;;^UTILITY(U,$J,"DIE",1230,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1230,"%D",1,0)
	;;=Used to edit a data field.
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",1,0,357.5,1)
	;;=.1;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",1,1,357.52,1)
	;;=.09;"Select Subfield's Data"
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",2,0,357.5,1)
	;;=.12;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",3,0,357.5,1)
	;;=.13;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",4,0,357.5,1)
	;;=.14;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",4,1,357.52,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",9,0,357.5,0)
	;;=.05;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",10,0,357.5,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",13,0,357.5,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",15,0,357.5,0)
	;;=.07;T
	;;^UTILITY(U,$J,"DIE",1230,"DIAB",17,0,357.5,0)
	;;=.11;T;REQ
	;;^UTILITY(U,$J,"DIE",1230,"DR",1,357.5)
	;;=.01;I IBOLD S Y="@1";.02////^S X=$G(IBBLK);.03////^S X=$G(IBRTN);D DATATYPE^IBDF9B(+$G(IBRTN));D RESET^VALM4:VALMCC,REFRESH^VALM;@1;I '$G(IBLIST) S Y="@2";.05R~T~;.04T~;@2;I '$G(IBWP) S Y="@5";.06T~;S:X="" Y="@4";.07T~;@4;.11R~T~;
	;;^UTILITY(U,$J,"DIE",1230,"DR",1,357.5,1)
	;;=.1R~T~;.12R~T~;.13R~T~;.14R~T~;S Y="@99";@5;D FULL^VALM1;D HELP3^IBDFU5;S (IBY,IBX)=1;2;@99;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1230,"DR",2,357.52)
	;;=.01;S:X="" Y="@99" S IBW=$L(X);D RESET^VALM4:VALMCC,REFRESH^VALM;.03T~;I X["I" S Y="@7",IBW=0;.05//^S X=+IBY;S IBY=X+1;.04//^S X=+IBX;S IBX=X+2+IBW;@7;I $G(IBMF) S Y="@8";.09////^S X=1;S IBP=1;S Y="@9";@8;D HELP1^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1230,"DR",2,357.52,1)
	;;=.09Select Subfield's Data~;I 'X S Y="@10";S IBP=X;@9;.08//^S X=$G(IBLEN(IBP));S IBW=+X;.06//^S X=+IBY;S IBY=X+1;.07//^S X=+IBX;S IBX=X+2+IBW;@10;D FULL^VALM1;D HELP3^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1230,"ROU")
	;;=^IBXFI5
	;;^UTILITY(U,$J,"DIE",1230,"ROUOLD")
	;;=IBXFI5
	;;^UTILITY(U,$J,"DIE",1231,0)
	;;=IBDF EDIT FORM HEADER^2930730.1158^^357.5^^^2940308^
	;;^UTILITY(U,$J,"DIE",1231,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1231,"%D",1,0)
	;;=Used to edit the data field that is the form header.
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",1,1,357.52,0)
	;;=.01;"HEADER LINE"
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",2,1,357.52,0)
	;;=.03;"HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}"
	;;^UTILITY(U,$J,"DIE",1231,"DIAB",3,0,357.5,0)
	;;=2;"HEADER LINE"
	;;^UTILITY(U,$J,"DIE",1231,"DR",1,357.5)
	;;=W !!,"***** Each subfield entered here will be a header line *****",!;W "**** Lines will appear in the order entered ****",!;2HEADER LINE~;

IBINI0CP
IBINI0CP	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1231,"DR",2,357.52)
	;;=.01HEADER LINE~;.03HOW SHOULD THE HEADER LINE APPEAR? CHOOSE FROM {B=bold,U=underline}~;
	;;^UTILITY(U,$J,"DIE",1232,0)
	;;=IBDF EDIT HEADER BLOCK^2930617.1333^^357.1^^^2940308^
	;;^UTILITY(U,$J,"DIE",1232,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1232,"%D",1,0)
	;;=Used to edit the header block of a form.
	;;^UTILITY(U,$J,"DIE",1232,"DIAB",1,0,357.1,0)
	;;=.1//INVISIBLE;"HEADER BLOCK OUTLINE TYPE"
	;;^UTILITY(U,$J,"DIE",1232,"DIAB",5,0,357.1,0)
	;;=.04//1;"ROW TO BEGIN THE HEADER BLOCK AT"
	;;^UTILITY(U,$J,"DIE",1232,"DR",1,357.1)
	;;=.1HEADER BLOCK OUTLINE TYPE~//INVISIBLE;I X=1 S IBBOX=2;.06////^S X=+$G(MAXLEN)+IBBOX;.07////^S X=+$G(HDRLINES)+IBBOX;.04ROW TO BEGIN THE HEADER BLOCK AT~//1;.05//^S X=$$DFLTCOL^IBDF9C;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1233,0)
	;;=IBDF FORM LINE^2930616.1052^^357.7^^^2940201^
	;;^UTILITY(U,$J,"DIE",1233,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1233,"%D",1,0)
	;;=Used to edit a line.
	;;^UTILITY(U,$J,"DIE",1233,"DIAB",7,0,357.7,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1233,"DR",1,357.7)
	;;=S IBDFDONE=0;.01;.03;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("line");.02;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("line");.04T~;.05;I X>$$MAXLEN^IBDF9D D WARNING^IBDFU1B("line");
	;;^UTILITY(U,$J,"DIE",1233,"DR",1,357.7,1)
	;;=.06////^S X=$G(IBBLK);S IBDFDONE=1;
	;;^UTILITY(U,$J,"DIE",1234,0)
	;;=IBDF NEW EMPTY BLOCK^2940201.1144^^357.1^0^^2940302
	;;^UTILITY(U,$J,"DIE",1234,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1234,"%D",1,0)
	;;=Used to edit the header, position, outline, and other characteristics of a
	;;^UTILITY(U,$J,"DIE",1234,"%D",2,0)
	;;=new block.
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",6,0,357.1,0)
	;;=.14;REQ
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",8,0,357.1,0)
	;;=.11;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",10,0,357.1,0)
	;;=.12//UC;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",12,0,357.1,0)
	;;=.1//SOLID LINE;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",14,0,357.1,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",15,0,357.1,0)
	;;=.05;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",17,0,357.1,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",18,0,357.1,0)
	;;=.07;T
	;;^UTILITY(U,$J,"DIE",1234,"DIAB",19,0,357.1,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1234,"DR",1,357.1)
	;;=S IBDFDONE=0;.01;.02////^S X=$G(IBFORM);S:'$G(IBTKBLK) Y="@1";.14///^S X=$$TKORDER^IBDF13();.14R~;@1;.11T~;I X="" S Y="@2";.12T~//UC;@2;.1T~//SOLID LINE;S:$G(IBTKBLK) Y="@3";.04T~;.05T~;@3;.06T~;.07T~;.13T~;S IBDFDONE=1;
	;;^UTILITY(U,$J,"DIE",1235,0)
	;;=IBDF EDIT TEXT AREA^2930730.1203^^357.8^^^^
	;;^UTILITY(U,$J,"DIE",1235,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1235,"%D",1,0)
	;;=Used to edit a text area.
	;;^UTILITY(U,$J,"DIE",1235,"DR",1,357.8)
	;;=S IBDELETE=1;.01;.02////^S X=$G(IBBLK);.04;I (X<$$MINY^IBDFU1B)!(X>$$MAXY^IBDFU1B) D WARNING^IBDFU1B("text area");.03;I (X<$$MINX^IBDFU1B)!(X>$$MAXX^IBDFU1B) D WARNING^IBDFU1B("text area");.05;
	;;^UTILITY(U,$J,"DIE",1235,"DR",1,357.8,1)
	;;=I X>$$MAXW^IBDF9E D WARNING^IBDFU1B("text area");.06;I X>$$MAXHT^IBDF9E D WARNING^IBDFU1B("text area");D FULL^VALM1;1;D FORMAT^IBDF9E;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1236,0)
	;;=IBDF EDIT SELECTION LIST^2930803.0839^^357.2^^^2940208^
	;;^UTILITY(U,$J,"DIE",1236,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1236,"%D",1,0)
	;;=Used to edit a selection list, except for the position and size of the
	;;^UTILITY(U,$J,"DIE",1236,"%D",2,0)
	;;=columns.
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",1,1,357.22,1)
	;;=.05;"Select Subcolumn's Data";REQ

IBINI0CQ
IBINI0CQ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",2,1,357.22,0)
	;;=.01;"SUBCOLUMN NUMBER"
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",4,1,357.22,1)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",5,1,357.22,0)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",6,1,357.22,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",8,1,357.22,0)
	;;=.06;T;REQ
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",9,0,357.2,0)
	;;=.05;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",11,0,357.2,0)
	;;=.06;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",13,0,357.2,0)
	;;=.07//LINE;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",14,0,357.2,0)
	;;=.09;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",15,0,357.2,0)
	;;=.08//0;T
	;;^UTILITY(U,$J,"DIE",1236,"DIAB",16,0,357.2,0)
	;;=.12//YES;T
	;;^UTILITY(U,$J,"DIE",1236,"DR",1,357.2)
	;;=S IBDELETE=1;I IBOLD S Y="@1";D FULL^VALM1;.01;.02////^S X=$G(IBBLK);.11////^S X=$G(IBRTN);D DATASIZE^IBDF9A(+X);@1;.05T~;I X="" S Y="@2";.06T~;@2;.07T~//LINE;.09T~;.08T~//0;.12T~//YES;D MSG3^IBDF9A;D HELP4^IBDFU5;2;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22)
	;;=S IBSC1=$P($G(^IBE(357.2,D0,2,D1,0)),U);.01SUBCOLUMN NUMBER~;S IBSC2=$P($G(^IBE(357.2,D0,2,D1,0)),U);S:(IBSC1'=IBSC2) IBSWITCH(+$G(IBP))=IBSC1_"^"_IBSC2,IBP=$G(IBP)+1;.02T~;.04T~;I X=1 S Y="@3";.06R~T~;S Y="@99";@3;D HELP2^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1236,"DR",2,357.22,1)
	;;=.05R~Select Subcolumn's Data~;S IBP=+X;.03//^S X=$G(IBLEN(IBP));.07R~T~;@99;D HELP4^IBDFU5;
	;;^UTILITY(U,$J,"DIE",1237,0)
	;;=IBDF EDIT SELECTION^2930402.094^^357.3^^^^
	;;^UTILITY(U,$J,"DIE",1237,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1237,"%D",1,0)
	;;=Used to edit a selection.
	;;^UTILITY(U,$J,"DIE",1237,"DR",1,357.3)
	;;=.05;1;
	;;^UTILITY(U,$J,"DIE",1237,"DR",2,357.31)
	;;=I '$G(IBDFEDIT(+$G(^IBE(357.3,D0,1,D1,0)))) S Y="@1";.02;
	;;^UTILITY(U,$J,"DIE",1238,0)
	;;=IBDF EDIT OLD OR COPIED FORM^2930625.0828^^357^^^2940201^
	;;^UTILITY(U,$J,"DIE",1238,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1238,"%D",1,0)
	;;=Used to edit an existing form.
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",3,0,357,0)
	;;=.09;T
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",4,0,357,0)
	;;=.1;T
	;;^UTILITY(U,$J,"DIE",1238,"DIAB",6,0,357,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1238,"DR",1,357)
	;;=S IBDELETE=1;.01;.09T~;.1T~;.11//1;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1239,0)
	;;=IBDF EDIT NEW FORM^2930810.1058^^357^^^2940131^
	;;^UTILITY(U,$J,"DIE",1239,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1239,"%D",1,0)
	;;=Used to edit a new form.
	;;^UTILITY(U,$J,"DIE",1239,"DIAB",7,0,357,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1239,"DR",1,357)
	;;=S IBDELETE=1;.01;.04////1;.09//132;.1//80;.11//1;.03T~;.07////^S X=$S(+$G(IBTKFORM):1,1:0);S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1244,0)
	;;=IBDF EDIT AVAILABLE REPORT^2930924.1337^^357.6^^^2940202^
	;;^UTILITY(U,$J,"DIE",1244,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1244,"%D",1,0)
	;;=Used to define a package interface that prints a report other than a
	;;^UTILITY(U,$J,"DIE",1244,"%D",2,0)
	;;=Health Summary.
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",1,1,357.66,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",1,1,357.67,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",3,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",5,0,357.6,0)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",6,0,357.6,0)
	;;=.02;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",7,0,357.6,0)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DIAB",13,0,357.6,0)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1244,"DR",1,357.6)
	;;=.01;.06////4;1R~;3;.04R~;.02R~;.03R~;.1///NO;4.01;5.01;6;7;.09R~;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1244,"DR",2,357.66)
	;;=.01

IBINI0CR
IBINI0CR	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1244,"DR",2,357.67)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1247,0)
	;;=IBDF POSITION/SIZE COLUMNS^2930722.0846^^357.2^^^2940208^
	;;^UTILITY(U,$J,"DIE",1247,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1247,"%D",1,0)
	;;=Used to edit the size and position of a selection list's columns.
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",2,0,357.2,0)
	;;=.13;T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",3,1,357.21,0)
	;;=.02;T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",4,1,357.21,0)
	;;=.03;T
	;;^UTILITY(U,$J,"DIE",1247,"DIAB",5,1,357.21,0)
	;;=.04;T
	;;^UTILITY(U,$J,"DIE",1247,"DR",1,357.2)
	;;=D MSG1^IBDF9A;.13T~;D FULL^VALM1;D MSG2^IBDF9A;1;
	;;^UTILITY(U,$J,"DIE",1247,"DR",2,357.21)
	;;=.01;D RESET^VALM4:VALMCC,REFRESH^VALM;.02T~;.03T~;.04T~;D FULL^VALM1;
	;;^UTILITY(U,$J,"DIE",1249,0)
	;;=IBDF EDIT OUTPUT/SELECTION RTN^2931220.1423^^357.6^0^^2931220
	;;^UTILITY(U,$J,"DIE",1249,"%D",0)
	;;=^^2^2^2940308^
	;;^UTILITY(U,$J,"DIE",1249,"%D",1,0)
	;;=Used to define a package interface of the type output routine or selection
	;;^UTILITY(U,$J,"DIE",1249,"%D",2,0)
	;;=routine.
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,0,357.6,2)
	;;=2.06;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,1,357.66,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",1,1,357.67,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",2,0,357.6,1)
	;;=3;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",2,0,357.6,2)
	;;=2.07;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",4,0,357.6,1)
	;;=.04;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",4,0,357.6,2)
	;;=2.08;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",5,0,357.6,1)
	;;=.03;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",5,0,357.6,2)
	;;=2.09;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",6,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",6,0,357.6,1)
	;;=.02;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",7,0,357.6,2)
	;;=2.1;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",8,0,357.6,0)
	;;=.07;T;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",8,0,357.6,2)
	;;=2.11;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",9,0,357.6,1)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",10,0,357.6,2)
	;;=2.12;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",11,0,357.6,1)
	;;=2.01;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",11,0,357.6,2)
	;;=2.13;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",12,0,357.6,1)
	;;=2.02;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",13,0,357.6,2)
	;;=2.14;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",14,0,357.6,1)
	;;=2.17;T;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",15,0,357.6,1)
	;;=2.18;REQ
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",18,0,357.6,1)
	;;=2.03;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",20,0,357.6,1)
	;;=2.04;T
	;;^UTILITY(U,$J,"DIE",1249,"DIAB",21,0,357.6,1)
	;;=2.05;T
	;;^UTILITY(U,$J,"DIE",1249,"DR",1,357.6)
	;;=W !!,"You must prefix the name with the name space of the package that is providing",!,"the data.",!;.01;Q;.1///NO;.06///^S X=IBTYPE;1R~;S:IBTYPE=3 Y="@2";.07R~T~;S IBACTION=X;.05////1;S Y="@3";@2;.07////4;S IBACTION=4;@3;
	;;^UTILITY(U,$J,"DIE",1249,"DR",1,357.6,1)
	;;=D LOOKUP^IBDF16;3T~;.1///NO;.04R~;.03R~;.02R~;6;7;.09R~;S:IBACTION=5 Y="@1";2.01T~;2.02T~;S:IBTYPE=2 Y="@4";2.17R~T~;2.18R~;@4;S:(IBACTION=1)!(IBACTION=3) Y="@1";2.03T~;S:(X="")&IBNEW Y="@1";2.04T~;2.05T~;S:(X="")&IBNEW Y="@1";
	;;^UTILITY(U,$J,"DIE",1249,"DR",1,357.6,2)
	;;=2.06T~;2.07T~;S:(X="")&IBNEW Y="@1";2.08T~;2.09T~;S:(X="")&IBNEW Y="@1";2.1T~;2.11T~;S:(X="")&IBNEW Y="@1";2.12T~;2.13T~;S:(X="")&IBNEW Y="@1";2.14T~;@1;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1249,"DR",2,357.66)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1249,"DR",2,357.67)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1250,0)
	;;=IBDF EDIT MARKING AREA^2930727.0815^^357.91^^^^
	;;^UTILITY(U,$J,"DIE",1250,"%D",0)
	;;=^^1^1^2940308^

IBINI0CS
IBINI0CS	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1250,"%D",1,0)
	;;=Used to edit a marking area.
	;;^UTILITY(U,$J,"DIE",1250,"DIAB",4,0,357.91,0)
	;;=.02;T;REQ
	;;^UTILITY(U,$J,"DIE",1250,"DR",1,357.91)
	;;=.01;.03///NO;W !!,"Enter the characters that should be printed on the form, including spaces.",!!;.02R~T~;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1252,0)
	;;=IBDF PRINT MANAGER^2931110.0954^^409.95^^^2940208^
	;;^UTILITY(U,$J,"DIE",1252,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1252,"%D",1,0)
	;;=Used to edit a clinic setup for the print manager.
	;;^UTILITY(U,$J,"DIE",1252,"DIAB",1,1,409.9502,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1252,"DR",1,409.95)
	;;=.01;.02;.06;.03;.04;.05;.07;W !!,"You can now select reports that should be printed for the clinic",!,"IN ADDITION to the encounter forms that have been selected.",!;1;
	;;^UTILITY(U,$J,"DIE",1252,"DR",1,409.95,1)
	;;=W !!," You may enter reports that you DO NOT want to print for this clinic. Entering",!,"an EXCLUDED REPORT will prevent it from printing even if it is defined",!,"to print for the entire division.",!;2;
	;;^UTILITY(U,$J,"DIE",1252,"DR",2,409.9501)
	;;=.01;.02///FOR EVERY APPOINTMENT;
	;;^UTILITY(U,$J,"DIE",1252,"DR",2,409.9502)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1253,0)
	;;=IBDF PRINT MANAGER^2930623.1304^^409.96^^^^
	;;^UTILITY(U,$J,"DIE",1253,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1253,"%D",1,0)
	;;=Used to edit a division setup for the print manager.
	;;^UTILITY(U,$J,"DIE",1253,"DR",1,409.96)
	;;=.01;1;
	;;^UTILITY(U,$J,"DIE",1253,"DR",2,409.961)
	;;=.01;.02;
	;;^UTILITY(U,$J,"DIE",1256,0)
	;;=IBT UR INFO^2940128.1135^@^356^1453^@^2940128
	;;^UTILITY(U,$J,"DIE",1256,"DR",1,356)
	;;=.31;.25//NO;.24;1.07;.26//NONE;.27//NO;1.05;1.06;
	;;^UTILITY(U,$J,"DIE",1257,0)
	;;=IBT BILLING INFO^2940128.111^@^356^1453^@^2940228
	;;^UTILITY(U,$J,"DIE",1257,"DR",1,356)
	;;=.19;I X S Y="@99";.17;.12;.21;.22;.23;.28;.29;S Y="@999";@99;1.08;@999;
	;;^UTILITY(U,$J,"DIE",1258,0)
	;;=IBT PRECERT INFO^2930713.1439^@^356^1453^@^2930915
	;;^UTILITY(U,$J,"DIE",1258,"DR",1,356)
	;;=.14;.15;@99;
	;;^UTILITY(U,$J,"DIE",1259,0)
	;;=IBT ADD COMMENTS^2930726.0933^@^356.1^1453^@^2940201
	;;^UTILITY(U,$J,"DIE",1259,"DR",1,356.1)
	;;=11;
	;;^UTILITY(U,$J,"DIE",1260,0)
	;;=IBT STATUS CHANGE^2930810.0818^@^356.1^1453^@^2940226
	;;^UTILITY(U,$J,"DIE",1260,"DR",1,356.1)
	;;=.21;I X=3 S Y="@99";.2;@99;
	;;^UTILITY(U,$J,"DIE",1261,0)
	;;=IBT REVIEW INFO^2931221.0829^@^356.1^1453^@^2940202
	;;^UTILITY(U,$J,"DIE",1261,"DR",1,356.1)
	;;=.22;.01;.07;.23;
	;;^UTILITY(U,$J,"DIE",1262,0)
	;;=IBT SPECIAL UNIT^2930726.0956^@^356.1^1453^@^2930803
	;;^UTILITY(U,$J,"DIE",1262,"DR",1,356.1)
	;;=I $$TRTP^IBTRV($G(IBTRV))=40 S Y="@99";.08;.09;S Y="@999";@99;.13;@999;
	;;^UTILITY(U,$J,"DIE",1263,0)
	;;=IBT QUICK EDIT^2940207.0924^@^356.2^1453^@^2940311
	;;^UTILITY(U,$J,"DIE",1263,"DIAB",1,1,356.212,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1263,"DIAB",1,1,356.213,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1263,"DIAB",1,1,356.214,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1263,"DIAB",2,0,356.2,6)
	;;=.08:
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2)
	;;=S DIE("NO^")="BACKOUTOK";.01;.04;I $$TCODE^IBTRC(DA)=70 S Y="@100";I $P(^IBT(356.2,DA,0),U,2) S Y="@200";@100;.05;@200;S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,1)
	;;=N DFN S DFN=$P(^IBT(356.2,DA,0),U,5) I DFN W ! D DISP^IBCNS W !;1.05//^S X=$$HIPD^IBTRC3(DA,$G(IBTLST));S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);I $$TCODE^IBTRC(DA)=70 S Y="@250";.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));

IBINI0CT
IBINI0CT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,2)
	;;=@250;.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;.09;I $$TCODE^IBTRC(DA)>30 S Y="@300";D HELP^IBTUTL3(DA);.11;
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,3)
	;;=N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S Y=$S(IBY:"@"_IBY,1:"@350");@10;1.08;I X S Y="@11";.12;.13;@11;.14;.28//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@300";@20;1.07;I X S Y="@21";.15;.16;@21;12;S Y="@300";
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,4)
	;;=@30;13;S Y="@300";@40;.2;S Y="@300";@50;.21;@300;@350;N IBTCOD S IBTCOD=$$TCODE^IBTRC(DA) S Y=$S(IBTCOD=50:"@355",IBTCOD=60:"@356",1:"@400");@355;.26;.11;
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,5)
	;;=N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S:IBY=20 Y="@400";.28//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@400";@356;.23;.1;I X'=3 S Y="@41";.29;I X=2 S Y="@42";.28;14;@41;.25;@42;
	;;^UTILITY(U,$J,"DIE",1263,"DR",1,356.2,6)
	;;=I '$P(^IBT(356.2,DA,0),U,8) S Y="@400";^36^DIC(36,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@400;11;.19;.24;
	;;^UTILITY(U,$J,"DIE",1263,"DR",2,36)
	;;=.147;.141;.142;.143;.144;.145;.146;
	;;^UTILITY(U,$J,"DIE",1263,"DR",2,356.212)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1263,"DR",2,356.213)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1263,"DR",2,356.214)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1264,0)
	;;=IBT COMMENT INFO^2930729.1247^@^356.2^1453^@^2940128
	;;^UTILITY(U,$J,"DIE",1264,"DR",1,356.2)
	;;=11;
	;;^UTILITY(U,$J,"DIE",1265,0)
	;;=IBT CONTACT INFO^2931006.154^@^356.2^1453^@^2931006
	;;^UTILITY(U,$J,"DIE",1265,"DR",1,356.2)
	;;=S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.01;I $P(^IBT(356.2,DA,0),U,2) S Y="@200";.05;@200;.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";
	;;^UTILITY(U,$J,"DIE",1265,"DR",1,356.2,1)
	;;=.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;.09;
	;;^UTILITY(U,$J,"DIE",1266,0)
	;;=IBT INSURANCE INFO^2940216.1138^@^356.2^1453^@^2940226
	;;^UTILITY(U,$J,"DIE",1266,"DIAB",1,0,356.2,1)
	;;=.08:
	;;^UTILITY(U,$J,"DIE",1266,"DR",1,356.2)
	;;=1.05;W !!,"You are now editing the Insurance Company: ",!,$P($G(^DIC(36,+$P(^IBT(356.2,DA,0),"^",8),0)),"^"),!!;
	;;^UTILITY(U,$J,"DIE",1266,"DR",1,356.2,1)
	;;=^36^DIC(36,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
	;;^UTILITY(U,$J,"DIE",1266,"DR",2,36)
	;;=.131;.132;.133;.134;.135;.136;.137;.138;
	;;^UTILITY(U,$J,"DIE",1267,0)
	;;=IBT ACTION INFO^2940207.0926^@^356.2^1453^@^2940226
	;;^UTILITY(U,$J,"DIE",1267,"DIAB",1,1,356.212,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1267,"DIAB",1,1,356.213,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1267,"DIAB",1,1,356.214,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1267,"DR",1,356.2)
	;;=S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.04;I $$TCODE^IBTRC(DA)>30 S Y="@300";D HELP^IBTUTL3(DA);.11;N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S Y=$S(IBY:"@"_IBY,1:"@350");@10;1.08;
	;;^UTILITY(U,$J,"DIE",1267,"DR",1,356.2,1)
	;;=I X S Y="@11";.12;.13;@11;.14;.28//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@300";@20;1.07;I X S Y="@21";.15;.16;@21;12;S Y="@300";@30;13;S Y="@300";@40;.2;S Y="@300";@50;.21;@300;@350;
	;;^UTILITY(U,$J,"DIE",1267,"DR",1,356.2,2)
	;;=N IBTCOD S IBTCOD=$$TCODE^IBTRC(DA) S Y=$S(IBTCOD=50:"@355",IBTCOD=60:"@356",1:"@400");@355;.26;.11;N IBY S IBY=$P($G(^IBE(356.7,+$P(^IBT(356.2,DA,0),U,11),0)),U,3) S:IBY=20 Y="@400";.28//^S X=$$AN^IBTRC3(DA,$G(IBTLST));S Y="@400";

IBINI0CU
IBINI0CU	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1267,"DR",1,356.2,3)
	;;=@356;.23;.1;I X'=3 S Y="@41";.29;I X=2 S Y="@42";.28;14;@41;.25;@42;@400;11;.19;.24;
	;;^UTILITY(U,$J,"DIE",1267,"DR",2,356.212)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1267,"DR",2,356.213)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1267,"DR",2,356.214)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1268,0)
	;;=IBT APPEAL INFO^2930802.1018^@^356.2^1453^@^2931202
	;;^UTILITY(U,$J,"DIE",1268,"DIAB",1,0,356.2,1)
	;;=.08:
	;;^UTILITY(U,$J,"DIE",1268,"DR",1,356.2)
	;;=W !!,"You are now editing the Appeals Address Information for: ",!,$P($G(^DIC(36,+$P(^IBT(356.2,DA,0),"^",8),0)),"^"),!!;
	;;^UTILITY(U,$J,"DIE",1268,"DR",1,356.2,1)
	;;=^36^DIC(36,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
	;;^UTILITY(U,$J,"DIE",1268,"DR",2,36)
	;;=.147;.141;.142;.143;.144;.145;.146;
	;;^UTILITY(U,$J,"DIE",1269,0)
	;;=IBT STATUS CHANGE^2930810.0817^@^356^1453^@^2930810
	;;^UTILITY(U,$J,"DIE",1269,"DR",1,356)
	;;=.19;.2;.17;
	;;^UTILITY(U,$J,"DIE",1270,0)
	;;=IBT STATUS CHANGE^2930907.1206^@^356.2^1453^@^2940309
	;;^UTILITY(U,$J,"DIE",1270,"DR",1,356.2)
	;;=.19;I X=3 S Y="@99";.24;@99;
	;;^UTILITY(U,$J,"DIE",1271,0)
	;;=IBT REMOVE NEXT REVIEW^2930810.1152^@^356.1^1453^@^2940224
	;;^UTILITY(U,$J,"DIE",1271,"DR",1,356.1)
	;;=.2///@;
	;;^UTILITY(U,$J,"DIE",1272,0)
	;;=IBT REMOVE NEXT REVIEW^2940224.1015^@^356.2^1453^@^2940224
	;;^UTILITY(U,$J,"DIE",1272,"DIAB",2,0,356.2,0)
	;;=TRACKING ID:
	;;^UTILITY(U,$J,"DIE",1272,"DR",1,356.2)
	;;=.24///@;^356^IBT(356,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");
	;;^UTILITY(U,$J,"DIE",1272,"DR",2,356)
	;;=1.07//NONE;
	;;^UTILITY(U,$J,"DIE",1273,0)
	;;=IBT ADD APPEAL^2940207.0927^@^356.2^1453^@^2940223
	;;^UTILITY(U,$J,"DIE",1273,"DIAB",1,1,356.214,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1273,"DR",1,356.2)
	;;=I '$G(IBPARNT) S Y="@999";I '$G(IBCDFN) S Y="@999";.18////^S X=IBPARNT;1.05////^S X=IBCDFN;@999;.04;.23;.1;I X'=3 S Y="@200";.29;I X=2 S Y="@300";.28;14;@200;.25;@300;11;.19;.24;@900;
	;;^UTILITY(U,$J,"DIE",1273,"DR",2,356.214)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1274,0)
	;;=IBT ASSIGN CASE^2930825.0657^@^356^1453^@^2931213
	;;^UTILITY(U,$J,"DIE",1274,"DR",1,356)
	;;=1.05;1.06;
	;;^UTILITY(U,$J,"DIE",1275,0)
	;;=IBT FINAL OUTCOME^2940207.0931^@^356.2^1453^@^2940207
	;;^UTILITY(U,$J,"DIE",1275,"DIAB",1,1,356.214,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1275,"DR",1,356.2)
	;;=.29;I X=2 S Y="@999";.28;14;@999;
	;;^UTILITY(U,$J,"DIE",1275,"DR",2,356.214)
	;;=.01:.02
	;;^UTILITY(U,$J,"DIE",1276,0)
	;;=IBEDIT INS CO1^2940201.1452^^36^12540^^2940316
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",1,1,36.03,0)
	;;=ALL
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",4,0,36,2)
	;;=.168;T
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",9,0,36,4)
	;;=.158;T
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",12,0,36,1)
	;;=.128;T
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",19,0,36,0)
	;;=.178;T
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",19,0,36,3)
	;;=.148;T
	;;^UTILITY(U,$J,"DIE",1276,"DIAB",24,0,36,2)
	;;=.188;T
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36)
	;;=S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,"'[IBY Y="@10";2;1;.06;.07;.08;.09;.15;.12;.1;.11;.14;.13;.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36,1)
	;;=S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;

IBINI0CV
IBINI0CV	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36,2)
	;;=S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36,3)
	;;=.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36,4)
	;;=.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@50";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@50;S:",8,6,"'[IBY Y="@70";11;
	;;^UTILITY(U,$J,"DIE",1276,"DR",1,36,5)
	;;=S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
	;;^UTILITY(U,$J,"DIE",1276,"DR",2,36.03)
	;;=.01
	;;^UTILITY(U,$J,"DIE",1278,0)
	;;=IBCN AB MEN H^2940106.1308^@^355.4^12540^@^2940107
	;;^UTILITY(U,$J,"DIE",1278,"DR",1,355.4)
	;;=5.14;5.05;5.06;5.11;2.14;2.05;2.06;2.11;
	;;^UTILITY(U,$J,"DIE",1279,0)
	;;=IBCN AB POL INF^2930708.1222^@^355.4^11985^@^2940218
	;;^UTILITY(U,$J,"DIE",1279,"DR",1,355.4)
	;;=.05;.06;
	;;^UTILITY(U,$J,"DIE",1281,0)
	;;=IBCN AB OPT^2940106.1301^@^355.4^12540^@^2940315
	;;^UTILITY(U,$J,"DIE",1281,"DR",1,355.4)
	;;=2.01;2.02;2.03;2.04;2.09;2.15;2.13;2.1;2.12;2.17;2.07;S:'X!(X="") Y="@10";2.08;@10;
	;;^UTILITY(U,$J,"DIE",1282,0)
	;;=IBCN AB INPT^2930611.112^@^355.4^11985^@^2940218
	;;^UTILITY(U,$J,"DIE",1282,"DR",1,355.4)
	;;=5.01;5.02;5.03;5.04;5.09;5.07;5.08;5.1;5.12;
	;;^UTILITY(U,$J,"DIE",1283,0)
	;;=IBCN AB HOME HEA^2930611.1121^@^355.4^11985^@^2940315
	;;^UTILITY(U,$J,"DIE",1283,"DR",1,355.4)
	;;=3.01;3.02;3.03;3.04;3.05;
	;;^UTILITY(U,$J,"DIE",1284,0)
	;;=IBCN AB HOSPC^2930611.1129^@^355.4^11985^@^2940110
	;;^UTILITY(U,$J,"DIE",1284,"DR",1,355.4)
	;;=4.01;4.02;4.03;4.04;4.05;
	;;^UTILITY(U,$J,"DIE",1286,0)
	;;=IBCN AB ADD COM^2930611.1142^@^355.4^11985^@^2930628
	;;^UTILITY(U,$J,"DIE",1286,"DR",1,355.4)
	;;=1.08;
	;;^UTILITY(U,$J,"DIE",1287,0)
	;;=IBCN AB EDIT ALL^2940106.1108^@^355.4^12540^@^2940106
	;;^UTILITY(U,$J,"DIE",1287,"DR",1,355.4)
	;;=.05;.06;5.01;5.02;5.03;5.04;5.09;5.07;5.08;5.1;5.12;2.01;2.02;2.03;2.04;2.09;2.15;2.13;2.1;2.12;2.17;2.07;S:'X!(X="") Y="@10";2.08;@10;5.14;5.05;5.06;5.11;2.14;2.05;2.06;2.11;3.01;3.02;3.03;3.04;3.05;4.01;4.02;4.03;4.04;4.05;3.06;
	;;^UTILITY(U,$J,"DIE",1287,"DR",1,355.4,1)
	;;=3.07;3.08;3.09;4.06;4.07;4.08;4.09;
	;;^UTILITY(U,$J,"DIE",1288,0)
	;;=IBCN BU ADD COM^2930630.1546^@^355.5^11985^@^2931228
	;;^UTILITY(U,$J,"DIE",1288,"DR",1,355.5)
	;;=1.08;
	;;^UTILITY(U,$J,"DIE",1289,0)
	;;=IBCN BU INPT^2931214.0854^^355.5^^^2940315^
	;;^UTILITY(U,$J,"DIE",1289,"DR",1,355.5)
	;;=.06;.07;.11;.12;.19;.18;
	;;^UTILITY(U,$J,"DIE",1290,0)
	;;=IBCN BU OPT^2931214.0853^^355.5^^^2931228^
	;;^UTILITY(U,$J,"DIE",1290,"DR",1,355.5)
	;;=.08;.09;.13;.14;.1;.2;
	;;^UTILITY(U,$J,"DIE",1291,0)
	;;=IBCN BU POL^2930708.1223^@^355.5^11985^@^2940218
	;;^UTILITY(U,$J,"DIE",1291,"DR",1,355.5)
	;;=.04;.05;.15;.16;
	;;^UTILITY(U,$J,"DIE",1294,0)
	;;=IBCN BU ED AL^2931227.0952^^355.5^0^^2940316
	;;^UTILITY(U,$J,"DIE",1294,"DR",1,355.5)
	;;=.04;.05;.15;.16;.08;.09;.13;.14;.1;.2;.06;.07;.11;.12;.19;.18;1.08;
	;;^UTILITY(U,$J,"DIE",1295,0)
	;;=IBCN AB REHAB^2930827.1146^@^355.4^0^@^2931227
	;;^UTILITY(U,$J,"DIE",1295,"DR",1,355.4)
	;;=3.06;3.07;3.08;3.09;
	;;^UTILITY(U,$J,"DIE",1296,0)
	;;=IBCN AB IV MGMT^2930827.1146^@^355.4^0^@^2940315

IBINI0CW
IBINI0CW	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIE",1296,"DR",1,355.4)
	;;=4.06;4.07;4.08;4.09;
	;;^UTILITY(U,$J,"DIE",1297,0)
	;;=IB SCREEN3^2940201.1252^@^399^10882^@^2940318
	;;^UTILITY(U,$J,"DIE",1297,"DR",1,399)
	;;=S:$G(IBCNRTN) Y="@313" K IBCNRTN;S:IBDR20'["31" Y="@31";.07;S:'+$P(^IBE(350.9,1,1),U,22) Y="@314";.19;@314;S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;
	;;^UTILITY(U,$J,"DIE",1297,"DR",1,399,1)
	;;=D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:33);@313;@312;112;S:X="" Y="@999";113;S:X="" Y="@999";114;@999;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;S:IBDR20'["32" Y="@33";122;123;124;@33;S:IBDR20'["33" Y="@34";104;
	;;^UTILITY(U,$J,"DIE",1297,"DR",1,399,2)
	;;=105;106;S:X="" Y=107;121;107;108;109;@34;
	;;^UTILITY(U,$J,"DIE",1297,"ROU")
	;;=^IBXSC3
	;;^UTILITY(U,$J,"DIE",1297,"ROUOLD")
	;;=IBXSC3
	;;^UTILITY(U,$J,"DIE",1302,0)
	;;=IBDF EDIT AVAILABLE HLTH SMRY^2930924.1326^^357.6^^^^
	;;^UTILITY(U,$J,"DIE",1302,"%D",0)
	;;=^^1^1^2940308^
	;;^UTILITY(U,$J,"DIE",1302,"%D",1,0)
	;;=Used to define a package interface that prints a Health Summary.
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",3,0,357.6,0)
	;;=1;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",9,0,357.6,0)
	;;=.11;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DIAB",10,0,357.6,0)
	;;=.09;REQ
	;;^UTILITY(U,$J,"DIE",1302,"DR",1,357.6)
	;;=.01;.06////4;1R~;3;.02///PRNTSMRY;.03///IBDFN5;.04////^S X="HEALTH SUMMARY";.1///YES;.11R~;.09R~;S IBDELETE=0;
	;;^UTILITY(U,$J,"DIE",1306,0)
	;;=IBT INS VERIFICATION^2940301.092^@^356.2^1453^@^2940315
	;;^UTILITY(U,$J,"DIE",1306,"DIAB",4,0,356.2,0)
	;;=TRACKING ID:
	;;^UTILITY(U,$J,"DIE",1306,"DR",1,356.2)
	;;=S DIE("NO^")="BACKOUTOK";.01;I $$TCODE^IBTRC(DA)'=85 S Y="@999";^356^IBT(356,^^S I(0,0)=D0 S Y(1)=$S($D(^IBT(356.2,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");1.05////^S X=$G(IBCDFN);
	;;^UTILITY(U,$J,"DIE",1306,"DR",1,356.2,1)
	;;=S IBTLST=$$LAST^IBTRC3($P(^IBT(356.2,DA,0),"^",2),DA);.06//^S X=$$PC^IBTRC3(DA,$G(IBTLST));.17//^S X=$$MC^IBTRC3(DA,$G(IBTLST));I $P(^IBT(356.2,DA,0),U,17)'=1 S Y="@170";.07//^S X=$$CP^IBTRC3(DA,$G(IBTLST));@170;.09;.28;11;
	;;^UTILITY(U,$J,"DIE",1306,"DR",1,356.2,2)
	;;=.19///^S X=10;@999;
	;;^UTILITY(U,$J,"DIE",1306,"DR",2,356)
	;;=.31;1.07;
	;;^UTILITY(U,$J,"DIE",1316,0)
	;;=IB SCREEN82^2931220.1227^@^399^10882^@^2940310
	;;^UTILITY(U,$J,"DIE",1316,"DIAB",7,0,399,0)
	;;=213;"ATTENDING PHYSICIAN ID"
	;;^UTILITY(U,$J,"DIE",1316,"DIAB",8,0,399,0)
	;;=214;"OTHER PHYSICIAN ID"
	;;^UTILITY(U,$J,"DIE",1316,"DR",1,399)
	;;=S:IBDR20'["81" Y="@82";208;163;215;@82;S:IBDR20'["82" Y="@83";213ATTENDING PHYSICIAN ID~;214OTHER PHYSICIAN ID~;@83;S:IBDR20'["83" Y="@84";450;451;@84;S:IBDR20'["84" Y="@85";452;453;454;455;@85;S:IBDR20'["85" Y="@86";456;457;458;
	;;^UTILITY(U,$J,"DIE",1316,"DR",1,399,1)
	;;=@86;
	;;^UTILITY(U,$J,"DIE",1316,"ROU")
	;;=^IBXSC82
	;;^UTILITY(U,$J,"DIE",1316,"ROUOLD")
	;;=IBXSC82
	;;^UTILITY(U,$J,"DIE",1327,0)
	;;=IBT QUICK EDIT^2940226.1407^@^356^1453^@^2940315
	;;^UTILITY(U,$J,"DIE",1327,"DR",1,356)
	;;=S IBTRTP=$$TRTP^IBTRE1(DA) I IBTRTP'=1 S Y="@10";.07;@10;.24;I 'X S Y="@20";1.07;.31;.14;I 'X S Y="@20";.15;@20;N IBX S IBX=$G(^IBT(356,DA,0)) I '$$INSURED^IBCNS1($P(IBX,U,2),$P(IBX,U,6)) S Y="@21";.19;I 'X S Y="@22";1.08;
	;;^UTILITY(U,$J,"DIE",1327,"DR",1,356,1)
	;;=S Y="@22";@21;.19///NOT INSURED;@22;I IBTRTP'=1!($G(IBTRPRF)'[1) S Y="@90";.25//NO;.26//NONE;.27//NO;@90;N X S X=$G(^IBT(356,DA,0)) I '$P(X,"^",25),'$P(X,"^",26),'$P(X,"^",27) S Y="@105";1.05;@105;
	;;^UTILITY(U,$J,"DIE",1327,"DR",1,356,2)
	;;=I '$P(^IBT(356,DA,0),U,24) S Y="@106";1.06;@106;I $G(IBTATRK) S Y="@999";I $P(^IBT(356,DA,0),U,19)!($G(IBTRPRF)'[3) S Y="@999";.12;.17;.21;.22;.23;.28;.29;@999;

IBINI0CX
IBINI0CX	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",677,0)
	;;=IB BILLING RATES^2900529.1^^399.5^^^2920708^
	;;^UTILITY(U,$J,"DIPT",677,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",677,"%D",1,0)
	;;=List billing rates.
	;;^UTILITY(U,$J,"DIPT",677,"F",2)
	;;=.02;L30~.03~.04~.05;L15~.06;L30~.07;"NON-STANDARD"~
	;;^UTILITY(U,$J,"DIPT",677,"H")
	;;=BILLING RATES LIST
	;;^UTILITY(U,$J,"DIPT",735,0)
	;;=IB LIST^2910419.0822^^350^^^2940308^
	;;^UTILITY(U,$J,"DIPT",735,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",735,"%D",1,0)
	;;=Integrated Billing Action List.
	;;^UTILITY(U,$J,"DIPT",735,"DCL","350^.01")
	;;=!
	;;^UTILITY(U,$J,"DIPT",735,"DCL","350^.06")
	;;=&
	;;^UTILITY(U,$J,"DIPT",735,"DCL","350^.07")
	;;=&
	;;^UTILITY(U,$J,"DIPT",735,"DXS",1,9.2)
	;;=S DIP(1)=$S($D(^IB(D0,0)):^(0),1:"") S X=$S('$D(^IBE(350.1,+$P(DIP(1),U,3),0)):"",1:$P(^(0),U,1)),DIP(2)=X S X=" ",DIP(3)=X S X=2,DIP(4)=X S X=99
	;;^UTILITY(U,$J,"DIPT",735,"F",1)
	;;=.02;L20~.01;"REF. NO";L10~X DXS(1,9.2) S X=$P(DIP(2),DIP(3),DIP(4),X) W X K DIP;"TYPE";L20;Z;"$P(#.03," ",2,99)"~.05;L10~
	;;^UTILITY(U,$J,"DIPT",735,"F",2)
	;;=S DIP(1)=$S($D(^IB(D0,1)):^(1),1:"") S X=$P(DIP(1),U,2),X=$P(X,".",1) S Y=X D DT K DIP;L11;"DATE ADDED";Z;"DATE(#12)"~.06;R5~.07;"CHARGE";R8~.08~
	;;^UTILITY(U,$J,"DIPT",735,"F",3)
	;;=.11;"CHARGE ID";L10~
	;;^UTILITY(U,$J,"DIPT",735,"H")
	;;=INTEGRATED BILLING ACTION LIST
	;;^UTILITY(U,$J,"DIPT",834,0)
	;;=IB INCOMPLETE^2910318.1107^^350^^^^
	;;^UTILITY(U,$J,"DIPT",834,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",834,"%D",1,0)
	;;=Integrated Billing Action List of entries with Status of Incomplete.
	;;^UTILITY(U,$J,"DIPT",834,"F",1)
	;;=.02;"Patient";L20~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IB(D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"PATIENT:"~-2,.09;"SSN"~
	;;^UTILITY(U,$J,"DIPT",834,"F",2)
	;;=.01;"Ref. No.";L10~.08~-350.1,^IBE(350.1,^^S I(0,0)=D0 S DIP(1)=$S($D(^IB(D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),X=X S D(0)=+X;Z;"ACTION TYPE:"~
	;;^UTILITY(U,$J,"DIPT",834,"F",3)
	;;=-350.1,.05;"TYPE";L10~I '$D(IBPASS) S IBPASS=0;Z;"I '$D(IBPASS) S IBPASS=0"~I IBPASS D REPASS^IBAFIL;Z;"I IBPASS D REPASS^IBAFIL"~
	;;^UTILITY(U,$J,"DIPT",834,"H")
	;;=INTEGRATED BILLING ACTION LIST
	;;^UTILITY(U,$J,"DIPT",837,0)
	;;=IB CPT UPDATE ERROR^2920128.1719^@^350.41^10882^@^2920715
	;;^UTILITY(U,$J,"DIPT",837,"%D",0)
	;;=^^1^1^2920708^^^^
	;;^UTILITY(U,$J,"DIPT",837,"%D",1,0)
	;;=Update Billable Amb. Surg. Transfer Error List Report.
	;;^UTILITY(U,$J,"DIPT",837,"DXS",1,9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^IBE(350.41,D0,0)):^(0),1:""),D0=$P(DIP(1),U,3) S:'$D(^IBE(350.1,+D0,0)) D0=-1 S DIP(101)=$S($D(^IBE(350.1,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIPT",837,"DXS",2,9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^IBE(350.41,D0,0)):^(0),1:""),D0=$P(DIP(1),U,4) S:'$D(^IBE(350.1,+D0,0)) D0=-1 S DIP(101)=$S($D(^IBE(350.1,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIPT",837,"F",1)
	;;=.01;N~.02~X DXS(1,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;C28;"OLD GROUP";Z;"OLD RATE GROUP:ABBREVIATION"~
	;;^UTILITY(U,$J,"DIPT",837,"F",2)
	;;=X DXS(2,9.2) S X=$P(DIP(101),U,2) S D0=I(0,0) W X K DIP;"NEW GROUP";Z;"NEW RATE GROUP:ABBREVIATION"~.06~.08;W55~
	;;^UTILITY(U,$J,"DIPT",837,"H")
	;;=UPDATE BILLABLE AMB. SURG. ERROR LIST
	;;^UTILITY(U,$J,"DIPT",838,0)
	;;=IB CPT PG DISPLAY^2920205.1721^@^350.7^10882^@^2920331
	;;^UTILITY(U,$J,"DIPT",838,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",838,"%D",1,0)
	;;=Displays a Check-off Sheets line format and associated sub-headers.
	;;^UTILITY(U,$J,"DIPT",838,"DXS",1,9.2)
	;;=F D=0:0 S (D,D0)=$N(^SC("AF",I(0,0),D)) Q:D'>0  I $D(^SC(D,0)) S X=$P(^(0),U,1) X DICMX Q:'$D(D)  S D=D0

IBINI0CY
IBINI0CY	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",838,"DXS",2,9.2)
	;;=F D=0:0 S (D,D0)=$N(^IBE(350.71,"G",I(0,0),D)) Q:D'>0  I $D(^IBE(350.71,D,0)) S X=$P(^(0),U,1) S DIXX=DIXX(1) D M Q:'$D(D)  S D=D0
	;;^UTILITY(U,$J,"DIPT",838,"DXS",3,0)
	;;=NO
	;;^UTILITY(U,$J,"DIPT",838,"DXS",3,1)
	;;=YES
	;;^UTILITY(U,$J,"DIPT",838,"DXS",4,2)
	;;=TWO VERTICAL
	;;^UTILITY(U,$J,"DIPT",838,"DXS",4,3)
	;;=THREE VERTICAL
	;;^UTILITY(U,$J,"DIPT",838,"DXS",5,1)
	;;=CODE/NAME/$
	;;^UTILITY(U,$J,"DIPT",838,"DXS",5,2)
	;;=NAME/CODE/$
	;;^UTILITY(U,$J,"DIPT",838,"F",1)
	;;=.01;C1;L59;S1;""~"CHARGE";C5;S1~"DISPLAYED";C5~"# OF COLUMNS";C16~"LINE FORMAT";C33~"ASSOCIATED CLINICS";C47~"---------";C5~"------------";C16~
	;;^UTILITY(U,$J,"DIPT",838,"F",2)
	;;="-----------";C33~"------------------";C47~.02;C8;""~.03;C16;""~.04;C33;""~
	;;^UTILITY(U,$J,"DIPT",838,"F",3)
	;;=S I(0,0)=$S($D(D0):D0,1:"") X DXS(1,9.2) S X="" S D0=I(0,0) W X K DIP;C47;"";m;Z;"HOSPITAL LOCATION"~"SUB-HEADER";C5;S1~"PRINT ORDER";C67~
	;;^UTILITY(U,$J,"DIPT",838,"F",4)
	;;="----------";C5~"-----------";C67~-350.71,^IBE(350.71,^1^S I(0,0)=$S($D(D0):D0,1:"") X DXS(2,9.2) S X="" S D0=I(0,0);Z;"AMBULATORY SURG. CHECK:"~
	;;^UTILITY(U,$J,"DIPT",838,"F",5)
	;;=-350.71,.01;C5;L59;""~-350.71,.02;C67;R7;""~
	;;^UTILITY(U,$J,"DIPT",838,"F",6)
	;;=S X="-",DIP(1)=X,DIP(2)=X,X=$S($D(IOM):IOM,1:80) S X=X,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;S1;"";Z;"DUP("-",IOM)"~
	;;^UTILITY(U,$J,"DIPT",838,"H")
	;;=AMBULATORY SURGERY CHECK-OFF SHEET
	;;^UTILITY(U,$J,"DIPT",838,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",838,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",838,"ROU")
	;;=^IBXCPTG
	;;^UTILITY(U,$J,"DIPT",838,"ROUOLD")
	;;=IBXCPTG
	;;^UTILITY(U,$J,"DIPT",839,0)
	;;=IB CPT CP DISPLAY^2920205.172^@^350.71^10882^@^2920608
	;;^UTILITY(U,$J,"DIPT",839,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",839,"%D",1,0)
	;;=Displays procedures associated with a particular Check-off Sheet sub-header.
	;;^UTILITY(U,$J,"DIPT",839,"DXS",1,9.2)
	;;=F D=0:0 S (D,D0)=$N(^IBE(350.71,"S",I(0,0),D)) Q:D'>0  I $D(^IBE(350.71,D,0)) S X=$P(^(0),U,1) S DIXX=DIXX(1) D M Q:'$D(D)  S D=D0
	;;^UTILITY(U,$J,"DIPT",839,"DXS",2,9.2)
	;;=S I(100,0)=$S($D(D0):D0,1:""),DIP(101)=$S($D(^IBE(350.71,D0,0)):^(0),1:""),D0=$P(DIP(101),U,6) S:'$D(^SD(409.71,+D0,0)) D0=-1 S DIP(201)=$S($D(^SD(409.71,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIPT",839,"F",1)
	;;=.01;C1;L59;S1;""~"CHECK-OFF SHEET";C2;S1~"PRINT ORDER";C61~"---------------";C2~"-----------";C61~.04;C2;""~.02;C61;R7;""~"PROCEDURES";C2;S1~
	;;^UTILITY(U,$J,"DIPT",839,"F",2)
	;;="PRINT ORDER";C61~"CHARGE";C74~"----------";C2~"-----------";C61~"------";C74~
	;;^UTILITY(U,$J,"DIPT",839,"F",3)
	;;=-350.71,^IBE(350.71,^1^S I(0,0)=$S($D(D0):D0,1:"") X DXS(1,9.2) S X="" S D0=I(0,0);Z;"AMBULATORY SURG. CHECK:"~
	;;^UTILITY(U,$J,"DIPT",839,"F",4)
	;;=-350.71,X DXS(2,9.2) S X=$S('$D(^ICPT(+$P(DIP(201),U,1),0)):"",1:$P(^(0),U,1)) S D0=I(100,0) W X K DIP;C2;"";Z;"PROCEDURE:CODE"~-350.71,.01;C9;L51;""~
	;;^UTILITY(U,$J,"DIPT",839,"F",5)
	;;=-350.71,.02;C61;R7;""~-350.71,.08;C72;R8;""~
	;;^UTILITY(U,$J,"DIPT",839,"F",6)
	;;=S X="-",DIP(1)=X,DIP(2)=X,X=$S($D(IOM):IOM,1:80) S X=X,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;S1;"";Z;"DUP("-",IOM)"~
	;;^UTILITY(U,$J,"DIPT",839,"H")
	;;=AMB. SURG. CHECK-OFF SHEET PRINT FIELDS LIST
	;;^UTILITY(U,$J,"DIPT",839,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",839,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",839,"ROU")
	;;=^IBXCPTC
	;;^UTILITY(U,$J,"DIPT",839,"ROUOLD")
	;;=IBXCPTC

IBINI0CZ
IBINI0CZ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",840,0)
	;;=IB CPT RG DISPLAY^2920206.0912^@^409.71^10882^@^2920708
	;;^UTILITY(U,$J,"DIPT",840,"%D",0)
	;;=^^1^1^2920708^^^
	;;^UTILITY(U,$J,"DIPT",840,"%D",1,0)
	;;=Displays billing medicare rate group data for a procedure.
	;;^UTILITY(U,$J,"DIPT",840,"DXS",1,9)
	;;=S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^SD(409.71,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^ICPT(+D0,0)) D0=-1 X DXS(1,9.2):D0>0 S X="" S D0=I(0,0)
	;;^UTILITY(U,$J,"DIPT",840,"DXS",1,9.2)
	;;=S I(100)="^ICPT(",J(100)=81 F D=0:0 S (D,D1)=$N(^ICPT(D0,"D",D)) Q:D'>0  I $D(^(D,0))#2 S X=$P(^(0),U,1) X DICMX Q:'$D(D)  S D=D1
	;;^UTILITY(U,$J,"DIPT",840,"DXS",2,9.2)
	;;=F D=0:0 S (D,D0)=$N(^IBE(350.4,"C",I(0,0),D)) Q:D'>0  I $D(^IBE(350.4,D,0)) S X=$P(^(0),U,1),Y=X D D^DIQ S X=Y S DIXX=DIXX(1) D M Q:'$D(D)  S D=D0
	;;^UTILITY(U,$J,"DIPT",840,"DXS",3,9.2)
	;;=S DIP(101)=$S($D(^IBE(350.4,D0,0)):^(0),1:"") S X=$S('$D(^IBE(350.1,+$P(DIP(101),U,3),0)):"",1:$P(^(0),U,1)),DIP(102)=X S X=" ",DIP(103)=X S X=2,DIP(104)=X S X=999
	;;^UTILITY(U,$J,"DIPT",840,"DXS",4,9)
	;;=S IBDTX=$P(^IBE(350.4,D0,0),U,1) S:$D(IBDIV) IBDIVX=IBDIV D FMCD^IBEFUNC1 W:$D(^DG(40.8,+IBDIVX,0)) $E($P(^DG(40.8,+IBDIVX,0),U,1),1,15)
	;;^UTILITY(U,$J,"DIPT",840,"DXS",5,9)
	;;=S IBCDX=$P(^IBE(350.4,D0,0),U,2) D FCC^IBEFUNC1 W:IBCHGX'="" $J(IBCHGX,8,2) K IBDTX,IBDIVX,IBCDX,IBCHGX
	;;^UTILITY(U,$J,"DIPT",840,"DXS",6,0)
	;;=INACTIVE
	;;^UTILITY(U,$J,"DIPT",840,"DXS",6,1)
	;;=ACTIVE
	;;^UTILITY(U,$J,"DIPT",840,"F",1)
	;;="CPT/HCFA Code";C1;S1~"Current OPC Status";C63~"--------------";C1~"------------------";C63~.01;C1;""~
	;;^UTILITY(U,$J,"DIPT",840,"F",2)
	;;=X $P(^DD(409.71,.015,0),U,5,99) S DIP(1)=X S X="- "_DIP(1) W X K DIP;C7;"";Z;""- "_SHORT NAME"~205;"";C50;R31~
	;;^UTILITY(U,$J,"DIPT",840,"F",3)
	;;=X DXS(1,9) W X K DIP;C5;S1;"";m;Z;"CODE:DESCRIPTION"~"Effective Date";C2;S1~"Billing Status";C18~"Billing Group";C34~"Division";C56~"Charge";C74~
	;;^UTILITY(U,$J,"DIPT",840,"F",4)
	;;="--------------";C2~"--------------";C18~"--------------";C34~"--------";C56~"------";C74~
	;;^UTILITY(U,$J,"DIPT",840,"F",5)
	;;=-350.4,^IBE(350.4,^1^S I(0,0)=$S($D(D0):D0,1:"") X DXS(2,9.2) S X="" S D0=I(0,0);Z;"BILLABLE AMBULATORY SURGICAL:"~-350.4,.01;C2;""~-350.4,.04;C18;""~
	;;^UTILITY(U,$J,"DIPT",840,"F",6)
	;;=-350.4,X DXS(3,9.2) S X=$P(DIP(102),DIP(103),DIP(104),X) W X K DIP;C34;L19;"";Z;"$P(RATE GROUP," ",2,999)"~
	;;^UTILITY(U,$J,"DIPT",840,"F",7)
	;;=-350.4,X DXS(4,9);C56;"";Z;"S IBDTX=$P(^IBE(350.4,D0,0),U,1) S:$D(IBDIV) IBDIVX=IBDIV D FMCD^IBEFUNC1 W:$D(^DG(40.8,+IBDIVX,0)) $E($P(^DG(40.8,+IBDIVX,0),U,1),1,15)"~
	;;^UTILITY(U,$J,"DIPT",840,"F",8)
	;;=-350.4,X DXS(5,9);C72;X;"";Z;"S IBCDX=$P(^IBE(350.4,D0,0),U,2) D FCC^IBEFUNC1 W:IBCHGX'="" $J(IBCHGX,8,2) K IBDTX,IBDIVX,IBCDX,IBCHGX"~
	;;^UTILITY(U,$J,"DIPT",840,"F",9)
	;;=S X="-",DIP(1)=X,DIP(2)=X,X=$S($D(IOM):IOM,1:80) S X=X,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;S1;X;Z;"DUP("-",IOM)"~
	;;^UTILITY(U,$J,"DIPT",840,"H")
	;;=AMBULATORY PROCEDURE BILLING LIST
	;;^UTILITY(U,$J,"DIPT",840,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",840,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",840,"ROU")
	;;=^IBXCPTR
	;;^UTILITY(U,$J,"DIPT",840,"ROUOLD")
	;;=IBXCPTR
	;;^UTILITY(U,$J,"DIPT",841,0)
	;;=IB DIVISION DISPLAY^2920205.1722^@^40.8^10882^@^2930406
	;;^UTILITY(U,$J,"DIPT",841,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",841,"%D",1,0)
	;;=Displays wage rates and locality modifer data for a division.
	;;^UTILITY(U,$J,"DIPT",841,"DXS",1,9.2)
	;;=F D=0:0 S (D,D0)=$N(^IBE(350.5,"C",I(0,0),D)) Q:D'>0  I $D(^IBE(350.5,D,0)) S X=$P(^(0),U,1),Y=X D D^DIQ S X=Y S DIXX=DIXX(1) D M Q:'$D(D)  S D=D0

IBINI0D0
IBINI0D0	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",841,"DXS",2,0)
	;;=INACTIVE
	;;^UTILITY(U,$J,"DIPT",841,"DXS",2,1)
	;;=ACTIVE
	;;^UTILITY(U,$J,"DIPT",841,"F",1)
	;;=.01;S1;""~"Wage";C30;S1~"Non-Wage";C46~"Effective Date";C3~"Status";C20~"Percentage";C30~"Percentage";C46~"Locality Modifier";C61~"--------------";C3~
	;;^UTILITY(U,$J,"DIPT",841,"F",2)
	;;="------";C20~"----------";C30~"----------";C46~"-----------------";C61~
	;;^UTILITY(U,$J,"DIPT",841,"F",3)
	;;=-350.5,^IBE(350.5,^1^S I(0,0)=$S($D(D0):D0,1:"") X DXS(1,9.2) S X="" S D0=I(0,0);Z;"BASC LOCALITY MODIFIER:"~-350.5,.01;C4;""~-350.5,.04;C20;""~
	;;^UTILITY(U,$J,"DIPT",841,"F",4)
	;;=-350.5,.05;C30;R8;D4;""~-350.5,.06;C46;R8;D4;""~-350.5,.07;C64;R8;D4;""~"";S1~
	;;^UTILITY(U,$J,"DIPT",841,"F",5)
	;;=S X="-",DIP(1)=X,DIP(2)=X,X=$S($D(IOM):IOM,1:80) S X=X,X1=DIP(1) S %=X,X="" Q:X1=""  S $P(X,X1,%\$L(X1)+1)=X1,X=$E(X,1,%) W X K DIP;C1;X;Z;"DUP("-",IOM)"~
	;;^UTILITY(U,$J,"DIPT",841,"H")
	;;=MEDICAL CENTER DIVISION BILLING LIST
	;;^UTILITY(U,$J,"DIPT",841,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",841,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",841,"ROU")
	;;=^IBXDIVD
	;;^UTILITY(U,$J,"DIPT",841,"ROUOLD")
	;;=IBXDIVD
	;;^UTILITY(U,$J,"DIPT",843,0)
	;;=IB CLK PROD^2920910.1405^@^399^10882^@^2940315
	;;^UTILITY(U,$J,"DIPT",843,"%D",0)
	;;=^^1^1^2920708^^^^
	;;^UTILITY(U,$J,"DIPT",843,"%D",1,0)
	;;=Clerk Productivity Report.
	;;^UTILITY(U,$J,"DIPT",843,"DCL","399^.01")
	;;=!
	;;^UTILITY(U,$J,"DIPT",843,"DCL","399^201")
	;;=&
	;;^UTILITY(U,$J,"DIPT",843,"F",1)
	;;=2;N;L20~.07;L20~1;L12~.13;"CURRENT STATUS";L15~.01;L7~201~
	;;^UTILITY(U,$J,"DIPT",843,"F",2)
	;;=-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"PATIENT:"~-2,.01;L20~-2,.363;"PATIENT ID";L12~
	;;^UTILITY(U,$J,"DIPT",843,"H")
	;;=FULL CLERK PRODUCTIVITY REPORT
	;;^UTILITY(U,$J,"DIPT",848,0)
	;;=IB BILLING CLOCK HEADER^2920116.1055^^351^^^^
	;;^UTILITY(U,$J,"DIPT",848,"%D",0)
	;;=^^1^1^2920708^^
	;;^UTILITY(U,$J,"DIPT",848,"%D",1,0)
	;;=Displays the header for the Patient Billing Clock Inquiry.
	;;^UTILITY(U,$J,"DIPT",848,"DXS",1,9)
	;;=X DXS(1,9.3) S DIP(109)=X S X=9,X=$E(DIP(108),DIP(109),X) S Y=X,X=DIP(107),X=X_Y
	;;^UTILITY(U,$J,"DIPT",848,"DXS",1,9.2)
	;;=S DIP(101)=$S($D(^DPT(D0,0)):^(0),1:"") S X=$P(DIP(101),U,9),DIP(102)=X S X=1,DIP(103)=X S X=3,X=$E(DIP(102),DIP(103),X)_"-",DIP(104)=X S X=$P(DIP(101),U,9)
	;;^UTILITY(U,$J,"DIPT",848,"DXS",1,9.3)
	;;=X DXS(1,9.2) S DIP(105)=X S X=4,DIP(106)=X S X=5,X=$E(DIP(105),DIP(106),X) S Y=X,X=DIP(104),X=X_Y_"-",DIP(107)=X S X=$P(DIP(101),U,9),DIP(108)=X S X=6
	;;^UTILITY(U,$J,"DIPT",848,"F",1)
	;;=.02;L20;C1~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBE(351,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"PATIENT:"~
	;;^UTILITY(U,$J,"DIPT",848,"F",2)
	;;=-2,X DXS(1,9) W X K DIP;L12;C25;Z;"$E(SOCIAL SECURITY NUMBER,1,3)_"-"_$E(SOCIAL SECURITY NUMBER,4,5)_"-"_$E(SOCIAL SECURITY NUMBER,6,9)"~-2,.03;L12;C41~
	;;^UTILITY(U,$J,"DIPT",848,"F",3)
	;;=-2,391;L22;C57~"================================================================================";C1~
	;;^UTILITY(U,$J,"DIPT",848,"H")
	;;=@
	;;^UTILITY(U,$J,"DIPT",848,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",848,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",848,"ROU")
	;;=^IBXBCR2
	;;^UTILITY(U,$J,"DIPT",848,"ROUOLD")
	;;=IBXBCR2
	;;^UTILITY(U,$J,"DIPT",848,"SUB")
	;;=1
	;;^UTILITY(U,$J,"DIPT",849,0)
	;;=IB BILLING CLOCK INQ^2920520.0918^@^351^11416^@^2920520
	;;^UTILITY(U,$J,"DIPT",849,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",849,"%D",1,0)
	;;=Displays the Patient Billing Clock Inquiry data.

IBINI0D1
IBINI0D1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",849,"DXS",1,9.2)
	;;=S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^IBE(351,D0,0)):^(0),1:""),D0=$P(DIP(1),U,2) S:'$D(^DPT(+D0,0)) D0=-1 S DIP(101)=$S($D(^DPT(D0,.36)):^(.36),1:"")
	;;^UTILITY(U,$J,"DIPT",849,"DXS",2,1)
	;;=CURRENT
	;;^UTILITY(U,$J,"DIPT",849,"DXS",2,2)
	;;=CLOSED
	;;^UTILITY(U,$J,"DIPT",849,"DXS",2,3)
	;;=CANCELLED
	;;^UTILITY(U,$J,"DIPT",849,"F",1)
	;;="Reference Number:";C1;R23;~.01;L12~"Status:";C1;R23~.04;L40~"Primary Elig. Code:";R23;C1;S1~
	;;^UTILITY(U,$J,"DIPT",849,"F",2)
	;;=X DXS(1,9.2) S X=$S('$D(^DIC(8,+$P(DIP(101),U,1),0)):"",1:$P(^(0),U,1)) S D0=I(0,0) W X K DIP;L40;Z;"PATIENT:PRIMARY ELIGIBILITY CODE"~
	;;^UTILITY(U,$J,"DIPT",849,"F",3)
	;;="Clock Begin Date:";C1;S1;R23~
	;;^UTILITY(U,$J,"DIPT",849,"F",4)
	;;=S DIP(1)=$S($D(^IBE(351,D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),X=$P(X,".",1) S Y=X D DT K DIP;L40;Z;"DATE(CLOCK BEGIN DATE)"~"Clock End Date:";C1;R23~
	;;^UTILITY(U,$J,"DIPT",849,"F",5)
	;;=S DIP(1)=$S($D(^IBE(351,D0,0)):^(0),1:"") S X=$P(DIP(1),U,10),X=$P(X,".",1) S Y=X D DT K DIP;L40;Z;"DATE(CLOCK END DATE)"~
	;;^UTILITY(U,$J,"DIPT",849,"F",6)
	;;="Number Inpatient Days:";C1;S1;R23~.09;L40~"90 Day Inpatient Amounts";C2;S1~"1st 90 Day Amount:";C1;R23~.05;C24~"2nd 90 Day Amount:";C1;R23~.06;C24~
	;;^UTILITY(U,$J,"DIPT",849,"F",7)
	;;="3rd 90 Day Amount:";C1;R23~.07;C24~"4th 90 Day Amount:";C1;R23~.08;C24~"Date Entry Added:";C1;S1;R23~
	;;^UTILITY(U,$J,"DIPT",849,"F",8)
	;;=S DIP(1)=$S($D(^IBE(351,D0,1)):^(1),1:"") S X=$P(DIP(1),U,2),X=$P(X,".",1) S Y=X D DT K DIP;L40;Z;"DATE(DATE ENTRY ADDED)"~"Date Last Updated:";C1;R23~
	;;^UTILITY(U,$J,"DIPT",849,"F",9)
	;;=S DIP(1)=$S($D(^IBE(351,D0,1)):^(1),1:"") S X=$P(DIP(1),U,4),X=$P(X,".",1) S Y=X D DT K DIP;L40;Z;"DATE(DATE LAST UPDATED)"~"Update Reason:";C1;R23;S1~
	;;^UTILITY(U,$J,"DIPT",849,"F",10)
	;;=15~
	;;^UTILITY(U,$J,"DIPT",849,"H")
	;;=@
	;;^UTILITY(U,$J,"DIPT",849,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",849,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",849,"ROU")
	;;=^IBXBCR
	;;^UTILITY(U,$J,"DIPT",849,"ROUOLD")
	;;=IBXBCR
	;;^UTILITY(U,$J,"DIPT",849,"SUB")
	;;=1
	;;^UTILITY(U,$J,"DIPT",875,0)
	;;=IB APPOINTMENT TYPE^2920406.1326^@^352.1^1453^@^2920406
	;;^UTILITY(U,$J,"DIPT",875,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",875,"%D",1,0)
	;;=Billable Appointment Type List.
	;;^UTILITY(U,$J,"DIPT",875,"F",2)
	;;=.02~.03~.04~.05~.06~
	;;^UTILITY(U,$J,"DIPT",875,"H")
	;;=BILLABLE APPOINTMENT TYPE LIST
	;;^UTILITY(U,$J,"DIPT",884,0)
	;;=IB PURGE LIST LOG ENTRIES^2920423.1408^@^350.6^10865^@^2940224
	;;^UTILITY(U,$J,"DIPT",884,"%D",0)
	;;=^^1^1^2920708^
	;;^UTILITY(U,$J,"DIPT",884,"%D",1,0)
	;;=Integrated Billing Archive/Purge Log List.
	;;^UTILITY(U,$J,"DIPT",884,"F",1)
	;;=.01;"LOG#";L4~.03;L25~
	;;^UTILITY(U,$J,"DIPT",884,"F",2)
	;;=S DIP(1)=$S($D(^IBE(350.6,D0,1)):^(1),1:"") S X=$P(DIP(1),U,1) S:X X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3) W X K DIP;"DATE CREATED";Z;"NUMDATE(SEARCH BEGIN DATE/TIME)"~
	;;^UTILITY(U,$J,"DIPT",884,"F",3)
	;;=1.03;"INITIATOR";L20~.05;"STATUS";L9~
	;;^UTILITY(U,$J,"DIPT",884,"H")
	;;=INTEGRATED BILLING ARCHIVE/PURGE LOG ENTRIES
	;;^UTILITY(U,$J,"DIPT",1054,0)
	;;=IB PRINT THRESHOLD^2930120.104^@^354.3^1453^@^2931005
	;;^UTILITY(U,$J,"DIPT",1054,"F",1)
	;;=.01;"EFFECTIVE DATE"~.03;"BASE RATE";R9~.04;"1 DEPENDENT";R9~.05;"2 DEPENDENTS";R9~.06;"3 DEPENDENTS";R9~.07;"4 DEPENDENTS";R9~.08;"5 DEPENDENTS";R9~
	;;^UTILITY(U,$J,"DIPT",1054,"F",2)
	;;=.09;"6 DEPENDENTS";R9~.1;"7 DEPENDENTS";R9~.11;"8 DEPENDENTS";R9~.12;"ADDITIONAL AMOUNT";R9~

IBINI0D2
IBINI0D2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",1054,"H")
	;;=BILLING THRESHOLDS LIST
	;;^UTILITY(U,$J,"DIPT",1055,0)
	;;=IB BILLING PATIENT^2930319.1333^@^354^1453^@^2930507
	;;^UTILITY(U,$J,"DIPT",1055,"F",1)
	;;=.01;"PATIENT";L25~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"PATIENT NAME:"~-2,.363;"PT ID";L15~
	;;^UTILITY(U,$J,"DIPT",1055,"F",2)
	;;=-2,.361;"PRIMARY ELIGILITY";L20~.04;"STATUS";L15~.05;L22;"REASON"~.03;"STATUS DATE";L12~D CNT^IBARXEP;"";L1;Z;"D CNT^IBARXEP"~
	;;^UTILITY(U,$J,"DIPT",1055,"H")
	;;=BILLING PATIENT LIST
	;;^UTILITY(U,$J,"DIPT",1056,0)
	;;=IB BILLING PATIENT SUMMARY^2930121.1011^@^354^1453^@^2930429
	;;^UTILITY(U,$J,"DIPT",1056,"F",2)
	;;=D CNT^IBARXEP;"";Z;"D CNT^IBARXEP"~
	;;^UTILITY(U,$J,"DIPT",1056,"H")
	;;=BILLING PATIENT LIST
	;;^UTILITY(U,$J,"DIPT",1056,"IOM")
	;;=80
	;;^UTILITY(U,$J,"DIPT",1056,"LAST")
	;;=
	;;^UTILITY(U,$J,"DIPT",1056,"ROUOLD")
	;;=
	;;^UTILITY(U,$J,"DIPT",1078,0)
	;;=IB BILLING PAT W/INCOME^2940302.0817^@^354^1453^@^2940302
	;;^UTILITY(U,$J,"DIPT",1078,"DXS",1,9.2)
	;;=S D=0 F  S (D,D0)=$O(^DGPR(408.12,"B",I(100,0),D)) S:D="" (D,D0)=-1 Q:D'>0  I $D(^DGPR(408.12,D,0)) S X=$P(^(0),U,1) S:$D(^DPT(+X,0)) X=$P(^(0),U,1) S DIXX=DIXX(1) D M Q:'$D(D)  S D=D0
	;;^UTILITY(U,$J,"DIPT",1078,"DXS",1,9.3)
	;;=S I(0,0)=$S($D(D0):D0,1:""),DIP(1)=$S($D(^IBA(354,D0,0)):^(0),1:""),D0=$P(DIP(1),U,1) S:'$D(^DPT(+D0,0)) D0=-1 S D(0)=D0 S I(100,0)=$S($D(D0):D0,1:"") X DXS(1,9.2) S X=""
	;;^UTILITY(U,$J,"DIPT",1078,"DXS",1,9.4)
	;;=X DXS(1,9.3) S I(200,0)=$S($D(D0):D0,1:"") K DIC S DIC="^DGMT(408.21,",DIC(0)="NMF" D ^DIC S (D,D0,D(0))=+Y S DIP(301)=$S($D(^DGMT(408.21,D0,0)):^(0),1:"")
	;;^UTILITY(U,$J,"DIPT",1078,"F",1)
	;;=.01;"PATIENT";L25;S1~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"PATIENT NAME:"~
	;;^UTILITY(U,$J,"DIPT",1078,"F",2)
	;;=-2,.363;"PT ID";L15~-2,.361;"PRIMARY ELIGILITY";L20~.04;"STATUS";L15~.05;L22;"REASON"~.03;"STATUS DATE";L12~
	;;^UTILITY(U,$J,"DIPT",1078,"F",3)
	;;=-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"PATIENT:"~-2,"           Phone:  ";"";C5~-2,.131;X;""~
	;;^UTILITY(U,$J,"DIPT",1078,"F",4)
	;;=-2,"         Address:  ";"";C5~-2,.111;"";L25;X~-2,.112;C24;"";L25~-2,.113;C24;"";L25~-2,.114;"";C24~-2,", ";"";X~-2,.115;"";X~-2,"  ";"";X~-2,.1112;"";X~
	;;^UTILITY(U,$J,"DIPT",1078,"F",5)
	;;=-408.21,^DGMT(408.21,^1^X DXS(1,9.4) S X=$P(DIP(301),U,1) S D0=I(0,0);Z;"PATIENT NAME:PATIENT RELATION:INDIVIDUAL ANNUAL INCOME:"~
	;;^UTILITY(U,$J,"DIPT",1078,"F",6)
	;;=-408.21,"     Income Year: ";C5;""~-408.21,.01;"";X~-408.21,"   Entered On: ";"";X~-408.21,102;"";X~D CNT^IBARXEP;"";Z;"D CNT^IBARXEP"~
	;;^UTILITY(U,$J,"DIPT",1078,"F",7)
	;;="Next Appointment:  ";"";C5~S X=.01,X=$$DAT1^IBOUTL($O(^DPT(D0,"S",DT))) W X K DIP;"";X;Z;"IBNEXTAPPT(.01)"~
	;;^UTILITY(U,$J,"DIPT",1078,"F",8)
	;;="==============================================================================";"";C1~
	;;^UTILITY(U,$J,"DIPT",1078,"H")
	;;=BILLING PATIENT LIST
	;;^UTILITY(U,$J,"DIPT",1079,0)
	;;=IB PATIENT ADDRESSES^2940302.0818^@^354^1453^@^2940309
	;;^UTILITY(U,$J,"DIPT",1079,"F",1)
	;;=.01;S1;""~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(354,D0,0)):^(0),1:"") S X=$P(DIP(1),U,1),X=X S D(0)=+X;Z;"PATIENT:"~-2,.111;"";C1~-2,.112;"";C1~
	;;^UTILITY(U,$J,"DIPT",1079,"F",2)
	;;=-2,.113;"";C1~-2,.114;"";C1~-2,", ";"";X~-2,.115;"";X~-2,"  ";"";X~-2,.1112;"";X~
	;;^UTILITY(U,$J,"DIPT",1079,"H")
	;;=PATIENTS EXEMPT FROM MEDICATION COPAYMENT

IBINI0D3
IBINI0D3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"DIPT",1080,0)
	;;=IB DO NOT USE^2930429.1049^@^354^1453^@^2930510
	;;^UTILITY(U,$J,"DIPT",1080,"DXS",1,9)
	;;=I $G(IBLET) D SCR^IBARXEPL I $G(IBOK) S ^TMP("IBEX LIST",$J,$P($G(^DPT(D0,0)),U),D0)=$$PT^IBEFUNC(D0) I $G(IBTEMP) S ^DIBT(IBTEMP,1,D0)=""
	;;^UTILITY(U,$J,"DIPT",1080,"F",1)
	;;=
	;;^UTILITY(U,$J,"DIPT",1080,"F",2)
	;;=X DXS(1,9);"";Z;"I $G(IBLET) D SCR^IBARXEPL I $G(IBOK) S ^TMP("IBEX LIST",$J,$P($G(^DPT(D0,0)),U),D0)=$$PT^IBEFUNC(D0) I $G(IBTEMP) S ^DIBT(IBTEMP,1,D0)="""~
	;;^UTILITY(U,$J,"DIPT",1080,"H")
	;;=@@
	;;^UTILITY(U,$J,"DIPT",1080,"ROUOLD")
	;;=
	;;^UTILITY(U,$J,"DIPT",1124,0)
	;;=IB INACTIVE INS CO^2931104.1112^@^36^1453^@^2940228
	;;^UTILITY(U,$J,"DIPT",1124,"F",1)
	;;=.01;"INSURANCE COMPANY";L22~.111;L20;"STREET"~.114;L15~
	;;^UTILITY(U,$J,"DIPT",1124,"F",2)
	;;=-5,^DIC(5,^^S I(0,0)=D0 S DIP(1)=$S($D(^DIC(36,D0,.11)):^(.11),1:"") S X=$P(DIP(1),U,5),X=X S D(0)=+X;Z;"STATE:"~-5,1;"STATE";L5~
	;;^UTILITY(U,$J,"DIPT",1124,"F",3)
	;;=W $J($$CNT^IBCOC(D0),8);"NUMBER PATIENTS";R8;Z;"W $J($$CNT^IBCOC(D0),8)"~
	;;^UTILITY(U,$J,"DIPT",1124,"H")
	;;=INACTIVE INSURANCE COMPANIES WITH PATIENTS
	;;^UTILITY(U,$J,"DIPT",1128,0)
	;;=IBNOTVER^2940218.1103^@^2^1453^@^2940309
	;;^UTILITY(U,$J,"DIPT",1128,"DCL","2^.01")
	;;=!
	;;^UTILITY(U,$J,"DIPT",1128,"F",1)
	;;=.01;C1;L25;"PATIENT";S~.09;C28;L10;"PATIENT ID"~.3121,.01;C40;L25;"INSURANCE CO"~.3121,1;C68;L18;"SUBSCRIBER ID"~.3121,1.02;C89;L25;"WHO ENTERED"~
	;;^UTILITY(U,$J,"DIPT",1128,"F",2)
	;;=.3121,1.01;C116;L12;"DATE ENTERED"~
	;;^UTILITY(U,$J,"DIPT",1128,"H")
	;;=REPORT OF NEW, NOT VERIFIED INSURANCE ENTRIES
	;;^UTILITY(U,$J,"DIPT",1169,0)
	;;=IBT LIST VISITS^2940223.0839^@^356^1453^@^2940318
	;;^UTILITY(U,$J,"DIPT",1169,"F",1)
	;;=.02;L20~-2,^DPT(^^S I(0,0)=D0 S DIP(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"PATIENT:"~-2,.363;"PT. ID";L13~
	;;^UTILITY(U,$J,"DIPT",1169,"F",2)
	;;=-2,.1;L10;"WARD"~-356.6,^IBE(356.6,^^S I(0,0)=D0 S DIP(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(DIP(1),U,18),X=X S D(0)=+X;Z;"EVENT TYPE:"~
	;;^UTILITY(U,$J,"DIPT",1169,"F",3)
	;;=-356.6,.02;"VISIT TYPE"~S DIP(1)=$S($D(^IBT(356,D0,0)):^(0),1:"") S X=$P(DIP(1),U,6),X=$P(X,".",1) S Y=X D DT K DIP;"DATE";L11;Z;"DATE(EPISODE DATE)"~
	;;^UTILITY(U,$J,"DIPT",1169,"F",4)
	;;=.24;"INS. CASE";L4~.25;"RANDOM CASE"~.26;"SPECIAL COND."~.27;"LOCAL CASE"~1.05;L12;"HOSP REVIEWER"~1.06;L12;"INS REVIEWER"~
	;;^UTILITY(U,$J,"DIPT",1169,"H")
	;;=LIST OF VISITS REQUIRING REVIEWS
	;;^UTILITY(U,$J,"DIPT",1170,0)
	;;=IB AB COMMENTS^2940201.1742^@^362.1^10882^@^2940317
	;;^UTILITY(U,$J,"DIPT",1170,"DXS",1,9.2)
	;;=S I(100,0)=$S($D(D0):D0,1:""),DIP(101)=$S($D(^IBT(356,D0,0)):^(0),1:""),D0=$P(DIP(101),U,2) S:'$D(^DPT(+D0,0)) D0=-1 X $P(^DD(2,.0905,0),U,5,99) S DIP(201)=X
	;;^UTILITY(U,$J,"DIPT",1170,"F",1)
	;;=-356,^IBT(356,^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(362.1,D0,0)):^(0),1:"") S X=$P(DIP(1),U,2),X=X S D(0)=+X;Z;"CLAIMS TRACKING ID:"~-356,.02;L20~
	;;^UTILITY(U,$J,"DIPT",1170,"F",2)
	;;=-356,X DXS(1,9.2) S X=DIP(201) S D0=I(100,0) W X K DIP;L6;"";Z;"PATIENT:1U4N"~-356,.18;L4~-356,.06~
	;;^UTILITY(U,$J,"DIPT",1170,"F",3)
	;;=-399,^DGCR(399,^^S I(0,0)=D0 S DIP(1)=$S($D(^IBA(362.1,D0,0)):^(0),1:"") S X=$P(DIP(1),U,3),X=X S D(0)=+X;Z;"BILL NUMBER:"~-399,.01;L8~-399,.13;L7~
	;;^UTILITY(U,$J,"DIPT",1170,"F",4)
	;;=-399," ";""~-399,.06;L15~-399," ";""~-399,151;L12~-399,152;L12~11,.01;C38;""~
	;;^UTILITY(U,$J,"DIPT",1170,"H")
	;;=IB AUTOMATED BILLING COMMENTS LIST
	;;^UTILITY(U,$J,"FUN",156,0)
	;;=IB CPT BILLING CHARGE

IBINI0D4
IBINI0D4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"FUN",156,1)
	;;=S IBCDX=X,IBDTX=X1 D FCC^IBEFUNC1 S X=IBCHGX K IBCDX,IBDTX,IBCHGX
	;;^UTILITY(U,$J,"FUN",156,3)
	;;=2
	;;^UTILITY(U,$J,"FUN",156,9)
	;;=Returns the charge for procedure (X) on date (X1).
	;;^UTILITY(U,$J,"FUN",157,0)
	;;=IB CPT BILLING STATUS
	;;^UTILITY(U,$J,"FUN",157,1)
	;;=S IBCDX=X,IBDTX=X1 D FCBS^IBEFUNC1 S X=$P(IBSTX,"^",2) K IBCDX,IBDTX,IBSTX
	;;^UTILITY(U,$J,"FUN",157,3)
	;;=2
	;;^UTILITY(U,$J,"FUN",157,9)
	;;=Returns the billing status for procedure (X) on date (X1).
	;;^UTILITY(U,$J,"FUN",169,0)
	;;=IBNEXTAPPT
	;;^UTILITY(U,$J,"FUN",169,1)
	;;=S X=$$DAT1^IBOUTL($O(^DPT(D0,"S",DT)))
	;;^UTILITY(U,$J,"FUN",169,2)
	;;=X
	;;^UTILITY(U,$J,"FUN",169,3)
	;;=1
	;;^UTILITY(U,$J,"FUN",169,9)
	;;=Determines next appointment date from today.  Use only on files where D0 = dfn
	;;^UTILITY(U,$J,"KEY",133,0)
	;;=IB AUTHORIZE^^^n
	;;^UTILITY(U,$J,"KEY",134,0)
	;;=IB SUPERVISOR
	;;^UTILITY(U,$J,"KEY",135,0)
	;;=IB EDIT
	;;^UTILITY(U,$J,"KEY",151,0)
	;;=IB CLAIMS SUPERVISOR^SUPERVISOR FUNCTIONS FOR C.T.^^n
	;;^UTILITY(U,$J,"KEY",151,1,0)
	;;=^^3^3^2940210^^^
	;;^UTILITY(U,$J,"KEY",151,1,1,0)
	;;=This key should be allocated to individuals who may perform certain
	;;^UTILITY(U,$J,"KEY",151,1,2,0)
	;;=supervisory functions in Claims Tracking such as deleting claims tracking 
	;;^UTILITY(U,$J,"KEY",151,1,3,0)
	;;=entries and reviews.
	;;^UTILITY(U,$J,"KEY",152,0)
	;;=IB INSURANCE SUPERVISOR^INSURANCE SUPERVISOR KEY^^n
	;;^UTILITY(U,$J,"KEY",152,1,0)
	;;=^^3^3^2940107^^^^
	;;^UTILITY(U,$J,"KEY",152,1,1,0)
	;;=This key should only be given to those individuals who may perform
	;;^UTILITY(U,$J,"KEY",152,1,2,0)
	;;=supervisory insurance functions such as deleting insurance companies,
	;;^UTILITY(U,$J,"KEY",152,1,3,0)
	;;=deleting policies, and inactivating and merging insurance information.
	;;^UTILITY(U,$J,"KEY",154,0)
	;;=IBDF IRM
	;;^UTILITY(U,$J,"KEY",154,1,0)
	;;=^^3^3^2930929^
	;;^UTILITY(U,$J,"KEY",154,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"KEY",154,1,2,0)
	;;=Used to prevent access to Encounter Form Utility options that are for IRM
	;;^UTILITY(U,$J,"KEY",154,1,3,0)
	;;=staffs only.
	;;^UTILITY(U,$J,"OPT",1208,0)
	;;=IB EDIT BILLING INFO^Enter/Edit Billing Information^^R^^IB EDIT^^^^^^INTEGRATED BILLING^^^1
	;;^UTILITY(U,$J,"OPT",1208,1,0)
	;;=^^3^3^2940120^^^^
	;;^UTILITY(U,$J,"OPT",1208,1,1,0)
	;;=This option allows the user to enter the information required to
	;;^UTILITY(U,$J,"OPT",1208,1,2,0)
	;;=generate a third party bill and to edit existing billing
	;;^UTILITY(U,$J,"OPT",1208,1,3,0)
	;;=information.
	;;^UTILITY(U,$J,"OPT",1208,15)
	;;=D KILL^IBCMENU
	;;^UTILITY(U,$J,"OPT",1208,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1208,25)
	;;=EDI^IBCB
	;;^UTILITY(U,$J,"OPT",1208,"U")
	;;=ENTER/EDIT BILLING INFORMATION
	;;^UTILITY(U,$J,"OPT",1213,0)
	;;=IB AUTHORIZE BILL GENERATION^Authorize Bill Generation^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1213,1,0)
	;;=^^4^4^2880629^^^^
	;;^UTILITY(U,$J,"OPT",1213,1,1,0)
	;;=This option allows the user to perform final review of 
	;;^UTILITY(U,$J,"OPT",1213,1,2,0)
	;;=information contained in a billing record. The user is
	;;^UTILITY(U,$J,"OPT",1213,1,3,0)
	;;=then able to authorize the generation of the bill and
	;;^UTILITY(U,$J,"OPT",1213,1,4,0)
	;;=the release of the information to Fiscal.
	;;^UTILITY(U,$J,"OPT",1213,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1213,25)
	;;=2^IBCMENU
	;;^UTILITY(U,$J,"OPT",1213,"U")
	;;=AUTHORIZE BILL GENERATION
	;;^UTILITY(U,$J,"OPT",1214,0)
	;;=IB PRINT BILL^Print Bill^^R^^^^^^^^INTEGRATED BILLING

IBINI0D5
IBINI0D5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",1214,1,0)
	;;=^^3^3^2940120^^^^
	;;^UTILITY(U,$J,"OPT",1214,1,1,0)
	;;=This option allows the user to print a third party bill 
	;;^UTILITY(U,$J,"OPT",1214,1,2,0)
	;;=after all required information has been input, and after
	;;^UTILITY(U,$J,"OPT",1214,1,3,0)
	;;=the billing information has been reviewed and authorized.
	;;^UTILITY(U,$J,"OPT",1214,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1214,25)
	;;=6^IBCMENU
	;;^UTILITY(U,$J,"OPT",1214,"U")
	;;=PRINT BILL
	;;^UTILITY(U,$J,"OPT",1215,0)
	;;=IB BILL STATUS REPORT^Bill Status Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1215,1,0)
	;;=^^1^1^2880629^^^^
	;;^UTILITY(U,$J,"OPT",1215,1,1,0)
	;;=This option generates a report which lists each bill with its status.
	;;^UTILITY(U,$J,"OPT",1215,25)
	;;=3^IBCMENU
	;;^UTILITY(U,$J,"OPT",1215,"U")
	;;=BILL STATUS REPORT
	;;^UTILITY(U,$J,"OPT",1216,0)
	;;=IB CANCEL BILL^Cancel Bill^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1216,1,0)
	;;=^^5^5^2930905^^^^
	;;^UTILITY(U,$J,"OPT",1216,1,1,0)
	;;=This option allows the user to cancel a bill. A mandatory
	;;^UTILITY(U,$J,"OPT",1216,1,2,0)
	;;=comment field exists to document the reason for cancellation,
	;;^UTILITY(U,$J,"OPT",1216,1,3,0)
	;;=and a log is maintained to audit responsible user and date/time
	;;^UTILITY(U,$J,"OPT",1216,1,4,0)
	;;=bill is cancelled. A bulletin is sent to the billing supervisor
	;;^UTILITY(U,$J,"OPT",1216,1,5,0)
	;;=each time a bill is cancelled.
	;;^UTILITY(U,$J,"OPT",1216,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1216,25)
	;;=4^IBCMENU
	;;^UTILITY(U,$J,"OPT",1216,"U")
	;;=CANCEL BILL
	;;^UTILITY(U,$J,"OPT",1217,0)
	;;=IB BILLING CLERK MENU^Billing Clerk's Menu^^M^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",1217,1,0)
	;;=^^4^4^2940125^^^^
	;;^UTILITY(U,$J,"OPT",1217,1,1,0)
	;;=This menu contains the basic Medical Care Cost Recovery Billing Module
	;;^UTILITY(U,$J,"OPT",1217,1,2,0)
	;;=options. Through this option, a user may inquire to billing records,
	;;^UTILITY(U,$J,"OPT",1217,1,3,0)
	;;=generate a limited number of reports, and with the proper security
	;;^UTILITY(U,$J,"OPT",1217,1,4,0)
	;;=keys, may also establish and review billing records.
	;;^UTILITY(U,$J,"OPT",1217,10,0)
	;;=^19.01PI^6^5
	;;^UTILITY(U,$J,"OPT",1217,10,1,0)
	;;=3372^UBCF
	;;^UTILITY(U,$J,"OPT",1217,10,1,"^")
	;;=IB THIRD PARTY BILLING MENU
	;;^UTILITY(U,$J,"OPT",1217,10,2,0)
	;;=3373^CATC
	;;^UTILITY(U,$J,"OPT",1217,10,2,"^")
	;;=IB MEANS TEST MENU
	;;^UTILITY(U,$J,"OPT",1217,10,3,0)
	;;=2523^OUTP
	;;^UTILITY(U,$J,"OPT",1217,10,3,"^")
	;;=IB OUTPUT PATIENT REPORT MENU
	;;^UTILITY(U,$J,"OPT",1217,10,5,0)
	;;=1208^BILL
	;;^UTILITY(U,$J,"OPT",1217,10,5,"^")
	;;=IB EDIT BILLING INFO
	;;^UTILITY(U,$J,"OPT",1217,10,6,0)
	;;=4182^BI
	;;^UTILITY(U,$J,"OPT",1217,10,6,"^")
	;;=IBT USER MENU (BI)
	;;^UTILITY(U,$J,"OPT",1217,20)
	;;=I $D(^%ZOSF("TEST")) S X="PRCAUT2" X ^%ZOSF("TEST") I $T D COUNT^PRCAUT2
	;;^UTILITY(U,$J,"OPT",1217,99)
	;;=55907,52875
	;;^UTILITY(U,$J,"OPT",1217,"U")
	;;=BILLING CLERK'S MENU
	;;^UTILITY(U,$J,"OPT",1218,0)
	;;=IB OUTPATIENT VET REPORT^Veterans w/Insurance and Opt. Visits^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1218,1,0)
	;;=^^4^4^2930712^^^^
	;;^UTILITY(U,$J,"OPT",1218,1,1,0)
	;;=This option prints a list of all patients with non-service connected
	;;^UTILITY(U,$J,"OPT",1218,1,2,0)
	;;=disabilities who have insurance and who had outpatient visits during
	;;^UTILITY(U,$J,"OPT",1218,1,3,0)
	;;=a user-specified date range. Eligibility status is provided for each 
	;;^UTILITY(U,$J,"OPT",1218,1,4,0)
	;;=patient on list.

IBINI0D6
IBINI0D6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",1218,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1218,25)
	;;=EN^IBCONSC
	;;^UTILITY(U,$J,"OPT",1218,"U")
	;;=VETERANS W/INSURANCE AND OPT. 
	;;^UTILITY(U,$J,"OPT",1219,0)
	;;=IB MCCR PARAMETER EDIT^MCCR Site Parameter Enter/Edit^^R^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1219,1,0)
	;;=^^2^2^2880629^^^^
	;;^UTILITY(U,$J,"OPT",1219,1,1,0)
	;;=This option allows the user to define and edit the MCCR 
	;;^UTILITY(U,$J,"OPT",1219,1,2,0)
	;;=billing parameters for that site.
	;;^UTILITY(U,$J,"OPT",1219,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1219,25)
	;;=IBEPAR
	;;^UTILITY(U,$J,"OPT",1219,"U")
	;;=MCCR SITE PARAMETER ENTER/EDIT
	;;^UTILITY(U,$J,"OPT",1220,0)
	;;=IB ACTIVATE REVENUE CODES^Activate Revenue Codes^^E^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1220,1,0)
	;;=^^2^2^2920204^^^^
	;;^UTILITY(U,$J,"OPT",1220,1,1,0)
	;;=This option allows the user to activate the revenue codes which that
	;;^UTILITY(U,$J,"OPT",1220,1,2,0)
	;;=site has chosen to use for its third party billing.
	;;^UTILITY(U,$J,"OPT",1220,30)
	;;=DGCR(399.2,
	;;^UTILITY(U,$J,"OPT",1220,31)
	;;=AEMQ
	;;^UTILITY(U,$J,"OPT",1220,50)
	;;=DGCR(399.2,
	;;^UTILITY(U,$J,"OPT",1220,51)
	;;=[IB ACTIVATE]
	;;^UTILITY(U,$J,"OPT",1220,"U")
	;;=ACTIVATE REVENUE CODES
	;;^UTILITY(U,$J,"OPT",1221,0)
	;;=IB SYSTEM DEFINITION MENU^MCCR System Definition Menu^^M^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1221,1,0)
	;;=^^2^2^2940120^^
	;;^UTILITY(U,$J,"OPT",1221,1,1,0)
	;;=This option allows the user to set up the MCCR parameters necessary
	;;^UTILITY(U,$J,"OPT",1221,1,2,0)
	;;=for third party billing.
	;;^UTILITY(U,$J,"OPT",1221,10,0)
	;;=^19.01PI^11^11
	;;^UTILITY(U,$J,"OPT",1221,10,1,0)
	;;=1219^PARA
	;;^UTILITY(U,$J,"OPT",1221,10,1,"^")
	;;=IB MCCR PARAMETER EDIT
	;;^UTILITY(U,$J,"OPT",1221,10,2,0)
	;;=1220^ACTV
	;;^UTILITY(U,$J,"OPT",1221,10,2,"^")
	;;=IB ACTIVATE REVENUE CODES
	;;^UTILITY(U,$J,"OPT",1221,10,3,0)
	;;=1222^RATE
	;;^UTILITY(U,$J,"OPT",1221,10,3,"^")
	;;=IB RATE TYPE
	;;^UTILITY(U,$J,"OPT",1221,10,4,0)
	;;=963^INSU
	;;^UTILITY(U,$J,"OPT",1221,10,4,"^")
	;;=DG INSURANCE COMPANY EDIT
	;;^UTILITY(U,$J,"OPT",1221,10,5,0)
	;;=2311^ENTR
	;;^UTILITY(U,$J,"OPT",1221,10,5,"^")
	;;=IB BILLING RATES FILE
	;;^UTILITY(U,$J,"OPT",1221,10,6,0)
	;;=2321^FAST
	;;^UTILITY(U,$J,"OPT",1221,10,6,"^")
	;;=IB FAST ENTER BILLING RATES
	;;^UTILITY(U,$J,"OPT",1221,10,7,0)
	;;=2324^LIST
	;;^UTILITY(U,$J,"OPT",1221,10,7,"^")
	;;=IB LIST OF BILLING RATES
	;;^UTILITY(U,$J,"OPT",1221,10,8,0)
	;;=3348^BASC
	;;^UTILITY(U,$J,"OPT",1221,10,8,"^")
	;;=IB BASC UPDATE MENU
	;;^UTILITY(U,$J,"OPT",1221,10,9,0)
	;;=4133^FLAG
	;;^UTILITY(U,$J,"OPT",1221,10,9,"^")
	;;=IB MT FLAG OPT PARAMS
	;;^UTILITY(U,$J,"OPT",1221,10,10,0)
	;;=4134^LISF
	;;^UTILITY(U,$J,"OPT",1221,10,10,"^")
	;;=IB MT LIST FLAGGED PARAMS
	;;^UTILITY(U,$J,"OPT",1221,10,11,0)
	;;=4169^AUTO
	;;^UTILITY(U,$J,"OPT",1221,10,11,"^")
	;;=IB AUTO BILLER PARAMS
	;;^UTILITY(U,$J,"OPT",1221,99)
	;;=55767,67519
	;;^UTILITY(U,$J,"OPT",1221,"U")
	;;=MCCR SYSTEM DEFINITION MENU
	;;^UTILITY(U,$J,"OPT",1222,0)
	;;=IB RATE TYPE^Update Rate Type File^^R^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1222,1,0)
	;;=^^2^2^2940207^^^^
	;;^UTILITY(U,$J,"OPT",1222,1,1,0)
	;;=This option allows the user to add new entries to the RATE TYPE file
	;;^UTILITY(U,$J,"OPT",1222,1,2,0)
	;;=and to update existing entries.
	;;^UTILITY(U,$J,"OPT",1222,25)
	;;=15^IBCMENU
	;;^UTILITY(U,$J,"OPT",1222,30)
	;;=
	;;^UTILITY(U,$J,"OPT",1222,31)
	;;=
	;;^UTILITY(U,$J,"OPT",1222,50)
	;;=

IBINI0D7
IBINI0D7	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",1222,51)
	;;=
	;;^UTILITY(U,$J,"OPT",1222,"U")
	;;=UPDATE RATE TYPE FILE
	;;^UTILITY(U,$J,"OPT",1223,0)
	;;=IB BILLING TOTALS REPORT^Rate Type Billing Totals Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1223,1,0)
	;;=^^2^2^2911024^^^^
	;;^UTILITY(U,$J,"OPT",1223,1,1,0)
	;;=This report is sorted by rate type and prints all billing totals for
	;;^UTILITY(U,$J,"OPT",1223,1,2,0)
	;;=each rate type.
	;;^UTILITY(U,$J,"OPT",1223,25)
	;;=13^IBCMENU
	;;^UTILITY(U,$J,"OPT",1223,"U")
	;;=RATE TYPE BILLING TOTALS REPOR
	;;^UTILITY(U,$J,"OPT",1224,0)
	;;=IB INPATIENT VET REPORT^Veterans w/Insurance and Inpatient Admissions^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1224,1,0)
	;;=^^4^4^2930712^^^^
	;;^UTILITY(U,$J,"OPT",1224,1,1,0)
	;;=This option prints a list of all patients with non-service connected
	;;^UTILITY(U,$J,"OPT",1224,1,2,0)
	;;=disabilities who have insurance and who had inpatient admissions during
	;;^UTILITY(U,$J,"OPT",1224,1,3,0)
	;;=a user-specified date range. Eligibility status is provided for each
	;;^UTILITY(U,$J,"OPT",1224,1,4,0)
	;;=patient on list.
	;;^UTILITY(U,$J,"OPT",1224,20)
	;;=
	;;^UTILITY(U,$J,"OPT",1224,25)
	;;=INP^IBCONSC
	;;^UTILITY(U,$J,"OPT",1224,"U")
	;;=VETERANS W/INSURANCE AND INPAT
	;;^UTILITY(U,$J,"OPT",1225,0)
	;;=IB THIRD PARTY OUTPUT MENU^Third Party Output Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1225,1,0)
	;;=^^2^2^2920206^^^^
	;;^UTILITY(U,$J,"OPT",1225,1,1,0)
	;;=This option allows the user to generate any of the Third
	;;^UTILITY(U,$J,"OPT",1225,1,2,0)
	;;=Party Outputs.
	;;^UTILITY(U,$J,"OPT",1225,10,0)
	;;=^19.01PI^7^7
	;;^UTILITY(U,$J,"OPT",1225,10,1,0)
	;;=1224^INSC
	;;^UTILITY(U,$J,"OPT",1225,10,1,"^")
	;;=IB INPATIENT VET REPORT
	;;^UTILITY(U,$J,"OPT",1225,10,2,0)
	;;=1218^ONSC
	;;^UTILITY(U,$J,"OPT",1225,10,2,"^")
	;;=IB OUTPATIENT VET REPORT
	;;^UTILITY(U,$J,"OPT",1225,10,3,0)
	;;=907^PATR
	;;^UTILITY(U,$J,"OPT",1225,10,3,"^")
	;;=DG THIRD PARTY PATIENT REVIEW
	;;^UTILITY(U,$J,"OPT",1225,10,4,0)
	;;=850^INFO
	;;^UTILITY(U,$J,"OPT",1225,10,4,"^")
	;;=DG THIRD PARTY REIMBURSEMENT
	;;^UTILITY(U,$J,"OPT",1225,10,5,0)
	;;=3380^DISC
	;;^UTILITY(U,$J,"OPT",1225,10,5,"^")
	;;=IB OUTPUT VETS BY DISCH
	;;^UTILITY(U,$J,"OPT",1225,10,6,0)
	;;=3384^UNKI
	;;^UTILITY(U,$J,"OPT",1225,10,6,"^")
	;;=IB OUTPUT INPTS WITHOUT INS
	;;^UTILITY(U,$J,"OPT",1225,10,7,0)
	;;=3385^UNKO
	;;^UTILITY(U,$J,"OPT",1225,10,7,"^")
	;;=IB OUTPUT OPTS WITHOUT INS
	;;^UTILITY(U,$J,"OPT",1225,99)
	;;=55307,34306
	;;^UTILITY(U,$J,"OPT",1225,"U")
	;;=THIRD PARTY OUTPUT MENU
	;;^UTILITY(U,$J,"OPT",1228,0)
	;;=IB PATIENT BILLING INQUIRY^Patient Billing Inquiry^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1228,1,0)
	;;=^^5^5^2901022^
	;;^UTILITY(U,$J,"OPT",1228,1,1,0)
	;;=This option displays all the actions which have been performed
	;;^UTILITY(U,$J,"OPT",1228,1,2,0)
	;;=on a specified billing record. The user may select by patient name
	;;^UTILITY(U,$J,"OPT",1228,1,3,0)
	;;=or bill number a particular record, and is shown bill status, total
	;;^UTILITY(U,$J,"OPT",1228,1,4,0)
	;;=charges, statement covers period, and all previous actions of that
	;;^UTILITY(U,$J,"OPT",1228,1,5,0)
	;;=billing record.
	;;^UTILITY(U,$J,"OPT",1228,25)
	;;=IBOLK
	;;^UTILITY(U,$J,"OPT",1228,"U")
	;;=PATIENT BILLING INQUIRY
	;;^UTILITY(U,$J,"OPT",1237,0)
	;;=IB UB-82 TEST PATTERN PRINT^UB-82 Test Pattern Print^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",1237,1,0)
	;;=^^2^2^2930905^^^^
	;;^UTILITY(U,$J,"OPT",1237,1,1,0)
	;;=This option prints a test pattern on the UB-82 form so that

IBINI0D8
IBINI0D8	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",1237,1,2,0)
	;;=the form alignment in the printer may be checked.
	;;^UTILITY(U,$J,"OPT",1237,25)
	;;=IBCF1TP
	;;^UTILITY(U,$J,"OPT",1237,"U")
	;;=UB-82 TEST PATTERN PRINT
	;;^UTILITY(U,$J,"OPT",2248,0)
	;;=IB COPY AND CANCEL^Copy and Cancel^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2248,1,0)
	;;=^^2^2^2900306^^^^
	;;^UTILITY(U,$J,"OPT",2248,1,1,0)
	;;=This option will allow cancelling a bill and then will create an exact
	;;^UTILITY(U,$J,"OPT",2248,1,2,0)
	;;=duplicate bill except its status will be ENTERED/NOT REVIEWED.
	;;^UTILITY(U,$J,"OPT",2248,25)
	;;=IBCCC
	;;^UTILITY(U,$J,"OPT",2248,"U")
	;;=COPY AND CANCEL
	;;^UTILITY(U,$J,"OPT",2300,0)
	;;=IB LIST ALL BILLS FOR PAT.^List all Bills for a Patient^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2300,1,0)
	;;=^^1^1^2900427^
	;;^UTILITY(U,$J,"OPT",2300,1,1,0)
	;;=This option will print a list of all bills for one patient.
	;;^UTILITY(U,$J,"OPT",2300,25)
	;;=IBOA31
	;;^UTILITY(U,$J,"OPT",2300,"U")
	;;=LIST ALL BILLS FOR A PATIENT
	;;^UTILITY(U,$J,"OPT",2311,0)
	;;=IB BILLING RATES FILE^Enter/Edit Billing Rates^^R^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2311,1,0)
	;;=^^2^2^2940207^^^^
	;;^UTILITY(U,$J,"OPT",2311,1,1,0)
	;;=This option allows enter/edit of Billing Rates that will be used in the
	;;^UTILITY(U,$J,"OPT",2311,1,2,0)
	;;=automatic calculation of costs when preparing a third party bill.
	;;^UTILITY(U,$J,"OPT",2311,25)
	;;=IBEBR
	;;^UTILITY(U,$J,"OPT",2311,"U")
	;;=ENTER/EDIT BILLING RATES
	;;^UTILITY(U,$J,"OPT",2320,0)
	;;=IB RETURN BILL LIST^Returned Bill List^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2320,1,0)
	;;=^^3^3^2940207^^
	;;^UTILITY(U,$J,"OPT",2320,1,1,0)
	;;=This option will generate a list of bills returned by Accounts Receivable
	;;^UTILITY(U,$J,"OPT",2320,1,2,0)
	;;=to MCCR.  The output should be directed to a printer as this report may
	;;^UTILITY(U,$J,"OPT",2320,1,3,0)
	;;=take a few minutes to print.
	;;^UTILITY(U,$J,"OPT",2320,25)
	;;=RETN^PRCALST
	;;^UTILITY(U,$J,"OPT",2320,"U")
	;;=RETURNED BILL LIST
	;;^UTILITY(U,$J,"OPT",2321,0)
	;;=IB FAST ENTER BILLING RATES^Fast Enter of New Billing Rates^^R^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2321,1,0)
	;;=^^2^2^2900525^^
	;;^UTILITY(U,$J,"OPT",2321,1,1,0)
	;;=This option is designed to speed the entry of new billing rates  for
	;;^UTILITY(U,$J,"OPT",2321,1,2,0)
	;;=a fiscal year.
	;;^UTILITY(U,$J,"OPT",2321,25)
	;;=IBCBR
	;;^UTILITY(U,$J,"OPT",2321,"U")
	;;=FAST ENTER OF NEW BILLING RATE
	;;^UTILITY(U,$J,"OPT",2322,0)
	;;=IB LIST BILLS FOR EPISODE^Episode of Care Bill List^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2322,1,0)
	;;=^^1^1^2900529^^
	;;^UTILITY(U,$J,"OPT",2322,1,1,0)
	;;=This option will list all bills related to an episode of care
	;;^UTILITY(U,$J,"OPT",2322,25)
	;;=IBOBL
	;;^UTILITY(U,$J,"OPT",2322,"U")
	;;=EPISODE OF CARE BILL LIST
	;;^UTILITY(U,$J,"OPT",2324,0)
	;;=IB LIST OF BILLING RATES^Billing Rates List^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2324,1,0)
	;;=^^1^1^2920304^^^
	;;^UTILITY(U,$J,"OPT",2324,1,1,0)
	;;=This option will print a list of Billing Rates by Effective date.
	;;^UTILITY(U,$J,"OPT",2324,25)
	;;=IBORAT
	;;^UTILITY(U,$J,"OPT",2324,60)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,62)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,63)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,64)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,65)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,66)
	;;=
	;;^UTILITY(U,$J,"OPT",2324,"U")
	;;=BILLING RATES LIST
	;;^UTILITY(U,$J,"OPT",2328,0)
	;;=IB EDIT RETURNED BILL^Edit Returned Bill^^R^^IB EDIT^^^^^^INTEGRATED BILLING

IBINI0D9
IBINI0D9	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2328,1,0)
	;;=^^2^2^2900606^^
	;;^UTILITY(U,$J,"OPT",2328,1,1,0)
	;;=This option will allow users to edit a bill that has been returned from
	;;^UTILITY(U,$J,"OPT",2328,1,2,0)
	;;=AR to MCCR and return it back to A/R
	;;^UTILITY(U,$J,"OPT",2328,25)
	;;=EN1^IBCRTN
	;;^UTILITY(U,$J,"OPT",2328,"U")
	;;=EDIT RETURNED BILL
	;;^UTILITY(U,$J,"OPT",2329,0)
	;;=IB RETURN BILL^Return Bill to A/R^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2329,1,0)
	;;=^^2^2^2940207^^^
	;;^UTILITY(U,$J,"OPT",2329,1,1,0)
	;;=This option will allow users to return a bill from MCCR to AR if it
	;;^UTILITY(U,$J,"OPT",2329,1,2,0)
	;;=had previously been returned to MCCR from AR.
	;;^UTILITY(U,$J,"OPT",2329,25)
	;;=EN2^IBCRTN
	;;^UTILITY(U,$J,"OPT",2329,"U")
	;;=RETURN BILL TO A/R
	;;^UTILITY(U,$J,"OPT",2330,0)
	;;=IB BACKGRND VETS INPT W/INS^Background Vet. Patients with Admissions and Ins^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2330,1,0)
	;;=^^2^2^2940207^^^^
	;;^UTILITY(U,$J,"OPT",2330,1,1,0)
	;;=This option may be set to be queued once per week to run and generate 
	;;^UTILITY(U,$J,"OPT",2330,1,2,0)
	;;=a list of Veterans with Insurance and Admissions.
	;;^UTILITY(U,$J,"OPT",2330,25)
	;;=EN1^IBCONS1
	;;^UTILITY(U,$J,"OPT",2330,"U")
	;;=BACKGROUND VET. PATIENTS WITH 
	;;^UTILITY(U,$J,"OPT",2331,0)
	;;=IB BACKGRND VETS OPT W/INS^Background Vet. Patients with Opt. Visits and Ins^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2331,1,0)
	;;=^^2^2^2930712^^^^
	;;^UTILITY(U,$J,"OPT",2331,1,1,0)
	;;=This option may be set to be queued once per week to run and generate
	;;^UTILITY(U,$J,"OPT",2331,1,2,0)
	;;=a list of Veterans with Insurance and Outpatient Visits.
	;;^UTILITY(U,$J,"OPT",2331,25)
	;;=EN2^IBCONS1
	;;^UTILITY(U,$J,"OPT",2331,"U")
	;;=BACKGROUND VET. PATIENTS WITH 
	;;^UTILITY(U,$J,"OPT",2335,0)
	;;=IB RETURN BILL MENU^Return Bill Menu^^M^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",2335,1,0)
	;;=^^2^2^2900806^^
	;;^UTILITY(U,$J,"OPT",2335,1,1,0)
	;;=Menu to access options related to editing bills returned by A/R to 
	;;^UTILITY(U,$J,"OPT",2335,1,2,0)
	;;=MCCR and returning them to A/R.
	;;^UTILITY(U,$J,"OPT",2335,10,0)
	;;=^19.01PI^3^3
	;;^UTILITY(U,$J,"OPT",2335,10,1,0)
	;;=2329^RETN
	;;^UTILITY(U,$J,"OPT",2335,10,1,"^")
	;;=IB RETURN BILL
	;;^UTILITY(U,$J,"OPT",2335,10,2,0)
	;;=2320^LIST
	;;^UTILITY(U,$J,"OPT",2335,10,2,"^")
	;;=IB RETURN BILL LIST
	;;^UTILITY(U,$J,"OPT",2335,10,3,0)
	;;=2328^EDIT
	;;^UTILITY(U,$J,"OPT",2335,10,3,"^")
	;;=IB EDIT RETURNED BILL
	;;^UTILITY(U,$J,"OPT",2335,20)
	;;=I $D(^%ZOSF("TEST")) S X="PRCAUT2" X ^%ZOSF("TEST") I $T D COUNT^PRCAUT2
	;;^UTILITY(U,$J,"OPT",2335,99)
	;;=55265,49227
	;;^UTILITY(U,$J,"OPT",2335,"U")
	;;=RETURN BILL MENU
	;;^UTILITY(U,$J,"OPT",2406,0)
	;;=IB BILLING SUPERVISOR MENU^Billing Supervisor Menu^^M^^IB SUPERVISOR^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",2406,1,0)
	;;=^^4^4^2940125^^^^
	;;^UTILITY(U,$J,"OPT",2406,1,1,0)
	;;=This menu contains all of the Medical Care Cost Recovery
	;;^UTILITY(U,$J,"OPT",2406,1,2,0)
	;;=Billing Module options.  Through this option, a user may
	;;^UTILITY(U,$J,"OPT",2406,1,3,0)
	;;=accomplish every phase of the billing process and access all
	;;^UTILITY(U,$J,"OPT",2406,1,4,0)
	;;=billing reports.
	;;^UTILITY(U,$J,"OPT",2406,10,0)
	;;=^19.01PI^19^8
	;;^UTILITY(U,$J,"OPT",2406,10,11,0)
	;;=1221^SYST
	;;^UTILITY(U,$J,"OPT",2406,10,11,"^")
	;;=IB SYSTEM DEFINITION MENU
	;;^UTILITY(U,$J,"OPT",2406,10,12,0)
	;;=3372^UB82
	;;^UTILITY(U,$J,"OPT",2406,10,12,"^")
	;;=IB THIRD PARTY BILLING MENU

IBINI0DA
IBINI0DA	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2406,10,13,0)
	;;=3373^CATC
	;;^UTILITY(U,$J,"OPT",2406,10,13,"^")
	;;=IB MEANS TEST MENU
	;;^UTILITY(U,$J,"OPT",2406,10,14,0)
	;;=2523^OUTP
	;;^UTILITY(U,$J,"OPT",2406,10,14,"^")
	;;=IB OUTPUT PATIENT REPORT MENU
	;;^UTILITY(U,$J,"OPT",2406,10,15,0)
	;;=3374^REPT
	;;^UTILITY(U,$J,"OPT",2406,10,15,"^")
	;;=IB OUTPUT MANAGEMENT REPORTS
	;;^UTILITY(U,$J,"OPT",2406,10,17,0)
	;;=1208^BILL
	;;^UTILITY(U,$J,"OPT",2406,10,17,"^")
	;;=IB EDIT BILLING INFO
	;;^UTILITY(U,$J,"OPT",2406,10,18,0)
	;;=3941^RXEX
	;;^UTILITY(U,$J,"OPT",2406,10,18,"^")
	;;=IB RX EXEMPTION MENU
	;;^UTILITY(U,$J,"OPT",2406,10,19,0)
	;;=4182^BI
	;;^UTILITY(U,$J,"OPT",2406,10,19,"^")
	;;=IBT USER MENU (BI)
	;;^UTILITY(U,$J,"OPT",2406,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2406,20)
	;;=I $D(^%ZOSF("TEST")) S X="PRCAUT2" X ^%ZOSF("TEST") I $T D COUNT^PRCAUT2
	;;^UTILITY(U,$J,"OPT",2406,99)
	;;=55907,52875
	;;^UTILITY(U,$J,"OPT",2406,99.1)
	;;=54444,49832
	;;^UTILITY(U,$J,"OPT",2406,"U")
	;;=BILLING SUPERVISOR MENU
	;;^UTILITY(U,$J,"OPT",2480,0)
	;;=IB EDIT SITE PARAMETERS^Enter/Edit IB Site Parameters^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2480,1,0)
	;;=^^3^3^2920109^^^^
	;;^UTILITY(U,$J,"OPT",2480,1,1,0)
	;;=This option allows entering and editing of Integrated Billing Site
	;;^UTILITY(U,$J,"OPT",2480,1,2,0)
	;;=Parameter file.  Modifying the site parameters can affect the performance
	;;^UTILITY(U,$J,"OPT",2480,1,3,0)
	;;=of Integrated Billing's background filer.
	;;^UTILITY(U,$J,"OPT",2480,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2480,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2480,25)
	;;=EDIT^IBEFUTL
	;;^UTILITY(U,$J,"OPT",2480,"U")
	;;=ENTER/EDIT IB SITE PARAMETERS
	;;^UTILITY(U,$J,"OPT",2481,0)
	;;=IB SITE STATUS DISPLAY^Display Integrated Billing Status^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2481,1,0)
	;;=^^2^2^2910416^^
	;;^UTILITY(U,$J,"OPT",2481,1,1,0)
	;;=This option displays information from the IB site parameter file and
	;;^UTILITY(U,$J,"OPT",2481,1,2,0)
	;;=pertinent information about the status of the IB background filer.
	;;^UTILITY(U,$J,"OPT",2481,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2481,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2481,25)
	;;=IBESTAT
	;;^UTILITY(U,$J,"OPT",2481,"U")
	;;=DISPLAY INTEGRATED BILLING STA
	;;^UTILITY(U,$J,"OPT",2482,0)
	;;=IB FILER STOP^Stop the Integrated Billing Background Filer^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2482,1,0)
	;;=^^3^3^2910304^
	;;^UTILITY(U,$J,"OPT",2482,1,1,0)
	;;=This option will cause the IB background filer to cease when it has
	;;^UTILITY(U,$J,"OPT",2482,1,2,0)
	;;=finished processing all its known transactions.  Processing with
	;;^UTILITY(U,$J,"OPT",2482,1,3,0)
	;;=Accounts Receivable will then be accomplished in the foreground.
	;;^UTILITY(U,$J,"OPT",2482,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2482,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2482,25)
	;;=STOP^IBEFUTL
	;;^UTILITY(U,$J,"OPT",2482,"U")
	;;=STOP THE INTEGRATED BILLING BA
	;;^UTILITY(U,$J,"OPT",2483,0)
	;;=IB FILER START^Start the Integrated Billing Background Filer^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2483,1,0)
	;;=^^4^4^2910417^^^
	;;^UTILITY(U,$J,"OPT",2483,1,1,0)
	;;=This option will task the IB background filer to run whether or not a
	;;^UTILITY(U,$J,"OPT",2483,1,2,0)
	;;=filer is currently running.  This option can be used when a filer
	;;^UTILITY(U,$J,"OPT",2483,1,3,0)
	;;=job has terminated unexpectedly and won't restart itself.  This will
	;;^UTILITY(U,$J,"OPT",2483,1,4,0)
	;;=force a filer to start running.
	;;^UTILITY(U,$J,"OPT",2483,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2483,20)
	;;=

IBINI0DB
IBINI0DB	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2483,25)
	;;=START^IBEFUTL
	;;^UTILITY(U,$J,"OPT",2483,"U")
	;;=START THE INTEGRATED BILLING B
	;;^UTILITY(U,$J,"OPT",2484,0)
	;;=IB SITE MGR MENU^System Manager's Integrated Billing Menu^^M^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",2484,1,0)
	;;=^^3^3^2930927^
	;;^UTILITY(U,$J,"OPT",2484,1,1,0)
	;;=This menu contains the options for the System Manager to check on the
	;;^UTILITY(U,$J,"OPT",2484,1,2,0)
	;;=status of Integrated Billing, edit site parameters, and  manage the
	;;^UTILITY(U,$J,"OPT",2484,1,3,0)
	;;=background filer.
	;;^UTILITY(U,$J,"OPT",2484,10,0)
	;;=^19.01IP^11^11
	;;^UTILITY(U,$J,"OPT",2484,10,1,0)
	;;=2481
	;;^UTILITY(U,$J,"OPT",2484,10,1,"^")
	;;=IB SITE STATUS DISPLAY
	;;^UTILITY(U,$J,"OPT",2484,10,2,0)
	;;=2480
	;;^UTILITY(U,$J,"OPT",2484,10,2,"^")
	;;=IB EDIT SITE PARAMETERS
	;;^UTILITY(U,$J,"OPT",2484,10,3,0)
	;;=2483
	;;^UTILITY(U,$J,"OPT",2484,10,3,"^")
	;;=IB FILER START
	;;^UTILITY(U,$J,"OPT",2484,10,4,0)
	;;=2482
	;;^UTILITY(U,$J,"OPT",2484,10,4,"^")
	;;=IB FILER STOP
	;;^UTILITY(U,$J,"OPT",2484,10,5,0)
	;;=2558
	;;^UTILITY(U,$J,"OPT",2484,10,5,"^")
	;;=IB REPOST
	;;^UTILITY(U,$J,"OPT",2484,10,6,0)
	;;=2560
	;;^UTILITY(U,$J,"OPT",2484,10,6,"^")
	;;=IB OUTPUT IB INQ
	;;^UTILITY(U,$J,"OPT",2484,10,7,0)
	;;=2559
	;;^UTILITY(U,$J,"OPT",2484,10,7,"^")
	;;=IB OUTPUT INQ BY PATIENT
	;;^UTILITY(U,$J,"OPT",2484,10,8,0)
	;;=2562
	;;^UTILITY(U,$J,"OPT",2484,10,8,"^")
	;;=IB OUTPUT VERIFY RX LINKS
	;;^UTILITY(U,$J,"OPT",2484,10,9,0)
	;;=3396
	;;^UTILITY(U,$J,"OPT",2484,10,9,"^")
	;;=IB PURGE MENU
	;;^UTILITY(U,$J,"OPT",2484,10,10,0)
	;;=3547^DEVI
	;;^UTILITY(U,$J,"OPT",2484,10,10,"^")
	;;=IB SITE DEVICE SETUP
	;;^UTILITY(U,$J,"OPT",2484,10,11,0)
	;;=4107^EF
	;;^UTILITY(U,$J,"OPT",2484,10,11,"^")
	;;=IBDF IRM OPTIONS
	;;^UTILITY(U,$J,"OPT",2484,20)
	;;=D MENU^IBECK
	;;^UTILITY(U,$J,"OPT",2484,99)
	;;=55852,53999
	;;^UTILITY(U,$J,"OPT",2484,"U")
	;;=SYSTEM MANAGER'S INTEGRATED BI
	;;^UTILITY(U,$J,"OPT",2485,0)
	;;=IB FILER CLEAR PARAMETERS^Clear Integrated Billing Filer Parameters^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2485,1,0)
	;;=^^8^8^2940207^^^
	;;^UTILITY(U,$J,"OPT",2485,1,1,0)
	;;=This option will clear the IB site parameters to allow the IB filer to
	;;^UTILITY(U,$J,"OPT",2485,1,2,0)
	;;=start on its own whenever it needs to.  It will not edit the
	;;^UTILITY(U,$J,"OPT",2485,1,3,0)
	;;=field, FILE IN BACKGROUND.  It will only let the filer start when called
	;;^UTILITY(U,$J,"OPT",2485,1,4,0)
	;;=if this field is set to yes. 
	;;^UTILITY(U,$J,"OPT",2485,1,5,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",2485,1,6,0)
	;;=This option will be called as a start up job when the CPU is rebooted.
	;;^UTILITY(U,$J,"OPT",2485,1,7,0)
	;;=It will clear the two IB parameters that prevent the IB filer from
	;;^UTILITY(U,$J,"OPT",2485,1,8,0)
	;;=restarting if the CPU crashed while the filer was running.
	;;^UTILITY(U,$J,"OPT",2485,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2485,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2485,25)
	;;=CLEAR^IBEFUTL
	;;^UTILITY(U,$J,"OPT",2485,1916)
	;;=S
	;;^UTILITY(U,$J,"OPT",2485,"U")
	;;=CLEAR INTEGRATED BILLING FILER
	;;^UTILITY(U,$J,"OPT",2513,0)
	;;=IB OUTPUT STATISTICAL REPORT^Statistical Report (IB)^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2513,1,0)
	;;=^^6^6^2910311^
	;;^UTILITY(U,$J,"OPT",2513,1,1,0)
	;;=This report lists the total number of Integrated Billing actions by
	;;^UTILITY(U,$J,"OPT",2513,1,2,0)
	;;=Action type along with the total charge by type for a date range.  The
	;;^UTILITY(U,$J,"OPT",2513,1,3,0)
	;;=net totals are also printed.  The net totals are derived by looking at

IBINI0DC
IBINI0DC	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2513,1,4,0)
	;;=the last update for a parent even though the update may not be within
	;;^UTILITY(U,$J,"OPT",2513,1,5,0)
	;;=the date range.  The net total within a date range can be derived by
	;;^UTILITY(U,$J,"OPT",2513,1,6,0)
	;;=the formula "new+update-cancel" for any associated action types.
	;;^UTILITY(U,$J,"OPT",2513,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2513,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2513,25)
	;;=IBOST
	;;^UTILITY(U,$J,"OPT",2513,"U")
	;;=STATISTICAL REPORT (IB)
	;;^UTILITY(U,$J,"OPT",2514,0)
	;;=IB OUTPUT LIST ACTIONS^Print IB Actions by Date^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2514,1,0)
	;;=^^3^3^2910311^
	;;^UTILITY(U,$J,"OPT",2514,1,1,0)
	;;=This option will print the IB actions by a user selected date range.
	;;^UTILITY(U,$J,"OPT",2514,1,2,0)
	;;=The user may also select an additional field to sort by, such as
	;;^UTILITY(U,$J,"OPT",2514,1,3,0)
	;;=status.
	;;^UTILITY(U,$J,"OPT",2514,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2514,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2514,25)
	;;=EN2^IBODISP
	;;^UTILITY(U,$J,"OPT",2514,"U")
	;;=PRINT IB ACTIONS BY DATE
	;;^UTILITY(U,$J,"OPT",2516,0)
	;;=IB OUTPUT FULL INQ BY BILL NO^Patient Billing Inquiry^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2516,1,0)
	;;=^^4^4^2940120^^^^
	;;^UTILITY(U,$J,"OPT",2516,1,1,0)
	;;=This option will display information about a bill.  The bill may either
	;;^UTILITY(U,$J,"OPT",2516,1,2,0)
	;;=be a third party bill, a pharmacy co-pay bill, or a means test charge.
	;;^UTILITY(U,$J,"OPT",2516,1,3,0)
	;;=If a full inquiry is selected for non-third party bills, then additional
	;;^UTILITY(U,$J,"OPT",2516,1,4,0)
	;;=information about the care or services is displayed when available.
	;;^UTILITY(U,$J,"OPT",2516,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2516,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2516,25)
	;;=IBOLK
	;;^UTILITY(U,$J,"OPT",2516,"U")
	;;=PATIENT BILLING INQUIRY
	;;^UTILITY(U,$J,"OPT",2523,0)
	;;=IB OUTPUT PATIENT REPORT MENU^Patient Billing Reports Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2523,1,0)
	;;=^^3^3^2930823^^^^
	;;^UTILITY(U,$J,"OPT",2523,1,1,0)
	;;=This menu contains the Billing reports that deal with one
	;;^UTILITY(U,$J,"OPT",2523,1,2,0)
	;;=or a group of patients.   This includes all billing lists of patients and
	;;^UTILITY(U,$J,"OPT",2523,1,3,0)
	;;=billing inquiries.
	;;^UTILITY(U,$J,"OPT",2523,10,0)
	;;=^19.01IP^20^14
	;;^UTILITY(U,$J,"OPT",2523,10,2,0)
	;;=2516^INQU
	;;^UTILITY(U,$J,"OPT",2523,10,2,"^")
	;;=IB OUTPUT FULL INQ BY BILL NO
	;;^UTILITY(U,$J,"OPT",2523,10,3,0)
	;;=2514^DATE
	;;^UTILITY(U,$J,"OPT",2523,10,3,"^")
	;;=IB OUTPUT LIST ACTIONS
	;;^UTILITY(U,$J,"OPT",2523,10,7,0)
	;;=3363^PROF
	;;^UTILITY(U,$J,"OPT",2523,10,7,"^")
	;;=IB MT PROFILE
	;;^UTILITY(U,$J,"OPT",2523,10,8,0)
	;;=3364^ESTM
	;;^UTILITY(U,$J,"OPT",2523,10,8,"^")
	;;=IB MT ESTIMATOR
	;;^UTILITY(U,$J,"OPT",2523,10,9,0)
	;;=3369^MTLS
	;;^UTILITY(U,$J,"OPT",2523,10,9,"^")
	;;=IB MT BILLING REPORT
	;;^UTILITY(U,$J,"OPT",2523,10,10,0)
	;;=3361^APP
	;;^UTILITY(U,$J,"OPT",2523,10,10,"^")
	;;=IB OUTPUT BASC FORMS FOR APPT
	;;^UTILITY(U,$J,"OPT",2523,10,11,0)
	;;=3370^SHEE
	;;^UTILITY(U,$J,"OPT",2523,10,11,"^")
	;;=IB BASC PRINT A GROUP
	;;^UTILITY(U,$J,"OPT",2523,10,12,0)
	;;=2300^LIST
	;;^UTILITY(U,$J,"OPT",2523,10,12,"^")
	;;=IB LIST ALL BILLS FOR PAT.
	;;^UTILITY(U,$J,"OPT",2523,10,13,0)
	;;=2322^EPIS
	;;^UTILITY(U,$J,"OPT",2523,10,13,"^")
	;;=IB LIST BILLS FOR EPISODE
	;;^UTILITY(U,$J,"OPT",2523,10,14,0)
	;;=1225^OUTP
	;;^UTILITY(U,$J,"OPT",2523,10,14,"^")
	;;=IB THIRD PARTY OUTPUT MENU

IBINI0DD
IBINI0DD	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2523,10,17,0)
	;;=3382^CONT
	;;^UTILITY(U,$J,"OPT",2523,10,17,"^")
	;;=IB OUTPUT CONTINUOUS PATIENTS
	;;^UTILITY(U,$J,"OPT",2523,10,18,0)
	;;=3437^HOLD
	;;^UTILITY(U,$J,"OPT",2523,10,18,"^")
	;;=IB OUTPUT HELD CHARGES
	;;^UTILITY(U,$J,"OPT",2523,10,19,0)
	;;=3537^EVNT
	;;^UTILITY(U,$J,"OPT",2523,10,19,"^")
	;;=IB OUTPUT EVENTS REPORT
	;;^UTILITY(U,$J,"OPT",2523,10,20,0)
	;;=4126^EMPL
	;;^UTILITY(U,$J,"OPT",2523,10,20,"^")
	;;=IB OUTPUT EMPLOYER REPORT
	;;^UTILITY(U,$J,"OPT",2523,99)
	;;=55901,48002
	;;^UTILITY(U,$J,"OPT",2523,"U")
	;;=PATIENT BILLING REPORTS MENU
	;;^UTILITY(U,$J,"OPT",2529,0)
	;;=IB MANAGER MENU^Integrated Billing Master Menu^^M^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",2529,1,0)
	;;=^^1^1^2940126^^
	;;^UTILITY(U,$J,"OPT",2529,1,1,0)
	;;=This is the master IB menu that will contain all the IB options.
	;;^UTILITY(U,$J,"OPT",2529,10,0)
	;;=^19.01IP^7^7
	;;^UTILITY(U,$J,"OPT",2529,10,1,0)
	;;=2523^OUTP^80
	;;^UTILITY(U,$J,"OPT",2529,10,1,"^")
	;;=IB OUTPUT PATIENT REPORT MENU
	;;^UTILITY(U,$J,"OPT",2529,10,2,0)
	;;=2484^IRM^99
	;;^UTILITY(U,$J,"OPT",2529,10,2,"^")
	;;=IB SITE MGR MENU
	;;^UTILITY(U,$J,"OPT",2529,10,3,0)
	;;=2406^SUP^50
	;;^UTILITY(U,$J,"OPT",2529,10,3,"^")
	;;=IB BILLING SUPERVISOR MENU
	;;^UTILITY(U,$J,"OPT",2529,10,4,0)
	;;=1217^CLER^10
	;;^UTILITY(U,$J,"OPT",2529,10,4,"^")
	;;=IB BILLING CLERK MENU
	;;^UTILITY(U,$J,"OPT",2529,10,5,0)
	;;=4093^EF^30
	;;^UTILITY(U,$J,"OPT",2529,10,5,"^")
	;;=IBDF ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",2529,10,6,0)
	;;=4160^PI^40
	;;^UTILITY(U,$J,"OPT",2529,10,6,"^")
	;;=IBCN INSURANCE MGMT MENU
	;;^UTILITY(U,$J,"OPT",2529,10,7,0)
	;;=4152^CT^20
	;;^UTILITY(U,$J,"OPT",2529,10,7,"^")
	;;=IBT MANAGER MENU
	;;^UTILITY(U,$J,"OPT",2529,20)
	;;=D MENU^IBECK
	;;^UTILITY(U,$J,"OPT",2529,99)
	;;=55914,52857
	;;^UTILITY(U,$J,"OPT",2529,99.1)
	;;=55607,67132
	;;^UTILITY(U,$J,"OPT",2529,"U")
	;;=INTEGRATED BILLING MASTER MENU
	;;^UTILITY(U,$J,"OPT",2558,0)
	;;=IB REPOST^Repost IB Action to Filer^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2558,1,0)
	;;=^^2^2^2910401^
	;;^UTILITY(U,$J,"OPT",2558,1,1,0)
	;;=Option allows passing of IB action entries that did not successfully
	;;^UTILITY(U,$J,"OPT",2558,1,2,0)
	;;=pass to AR to be reposted to the IB filer.
	;;^UTILITY(U,$J,"OPT",2558,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2558,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2558,25)
	;;=IBAREP
	;;^UTILITY(U,$J,"OPT",2558,"U")
	;;=REPOST IB ACTION TO FILER
	;;^UTILITY(U,$J,"OPT",2559,0)
	;;=IB OUTPUT INQ BY PATIENT^Patient IB Action Inquiry^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2559,1,0)
	;;=^^2^2^2910401^
	;;^UTILITY(U,$J,"OPT",2559,1,1,0)
	;;=This inquiry will provide a brief display of IB actions for select patients
	;;^UTILITY(U,$J,"OPT",2559,1,2,0)
	;;=for a selected date range.
	;;^UTILITY(U,$J,"OPT",2559,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2559,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2559,25)
	;;=EN1^IBODISP
	;;^UTILITY(U,$J,"OPT",2559,"U")
	;;=PATIENT IB ACTION INQUIRY
	;;^UTILITY(U,$J,"OPT",2560,0)
	;;=IB OUTPUT IB INQ^Inquire an IB Action^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2560,1,0)
	;;=^^1^1^2910401^
	;;^UTILITY(U,$J,"OPT",2560,1,1,0)
	;;=This option will display a captioned inquiry of one IB Action.
	;;^UTILITY(U,$J,"OPT",2560,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2560,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2560,25)
	;;=IBODISP
	;;^UTILITY(U,$J,"OPT",2560,"U")
	;;=INQUIRE AN IB ACTION
	;;^UTILITY(U,$J,"OPT",2562,0)
	;;=IB OUTPUT VERIFY RX LINKS^Verify RX Co-Pay Links^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",2562,1,0)
	;;=^^3^3^2920722^^^^

IBINI0DE
IBINI0DE	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",2562,1,1,0)
	;;=This option will compare the soft-link stored in Integrated Billing with
	;;^UTILITY(U,$J,"OPT",2562,1,2,0)
	;;=the pointer in the prescription file pointing back to Integrated Billing.
	;;^UTILITY(U,$J,"OPT",2562,1,3,0)
	;;=A report will print out of all IB Actions that do not verify.
	;;^UTILITY(U,$J,"OPT",2562,15)
	;;=
	;;^UTILITY(U,$J,"OPT",2562,20)
	;;=
	;;^UTILITY(U,$J,"OPT",2562,25)
	;;=IBOCHK
	;;^UTILITY(U,$J,"OPT",2562,"U")
	;;=VERIFY RX CO-PAY LINKS
	;;^UTILITY(U,$J,"OPT",3235,0)
	;;=IB REV CODE TOTALS^Revenue Code Totals by Rate Type^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3235,1,0)
	;;=^^1^1^2911022^
	;;^UTILITY(U,$J,"OPT",3235,1,1,0)
	;;=Print totals of Revenue Code amounts by Rate Type.  To collect data for AMIS Segments 295 and 296
	;;^UTILITY(U,$J,"OPT",3235,25)
	;;=IBOAMS
	;;^UTILITY(U,$J,"OPT",3235,"U")
	;;=REVENUE CODE TOTALS BY RATE TY
	;;^UTILITY(U,$J,"OPT",3346,0)
	;;=IB OUTPUT CLK PROD^Clerk Productivity^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3346,1,0)
	;;=^^2^2^2920616^^^^
	;;^UTILITY(U,$J,"OPT",3346,1,1,0)
	;;=Lists number and type of bills entered by selected clerks, over a
	;;^UTILITY(U,$J,"OPT",3346,1,2,0)
	;;=date range.
	;;^UTILITY(U,$J,"OPT",3346,25)
	;;=IBOCPD
	;;^UTILITY(U,$J,"OPT",3346,"U")
	;;=CLERK PRODUCTIVITY
	;;^UTILITY(U,$J,"OPT",3348,0)
	;;=IB BASC UPDATE MENU^Ambulatory Surgery Maintenance Menu^^M^^IB SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3348,1,0)
	;;=^^1^1^2920527^^^^
	;;^UTILITY(U,$J,"OPT",3348,1,1,0)
	;;=This menu contains all Ambulatory Surgery billing options.
	;;^UTILITY(U,$J,"OPT",3348,10,0)
	;;=^19.01IP^11^9
	;;^UTILITY(U,$J,"OPT",3348,10,2,0)
	;;=3350^DIV
	;;^UTILITY(U,$J,"OPT",3348,10,2,"^")
	;;=IB BASC LOCALITY MODIFIER
	;;^UTILITY(U,$J,"OPT",3348,10,4,0)
	;;=3352^RTG
	;;^UTILITY(U,$J,"OPT",3348,10,4,"^")
	;;=IB BASC RATE GROUP ENTRY
	;;^UTILITY(U,$J,"OPT",3348,10,5,0)
	;;=3355^CLN
	;;^UTILITY(U,$J,"OPT",3348,10,5,"^")
	;;=IB PURGE/BASC TRANSFER CLEANUP
	;;^UTILITY(U,$J,"OPT",3348,10,6,0)
	;;=3356^ERR
	;;^UTILITY(U,$J,"OPT",3348,10,6,"^")
	;;=IB BASC TRANSFER ERRORS
	;;^UTILITY(U,$J,"OPT",3348,10,7,0)
	;;=3354^UPD
	;;^UTILITY(U,$J,"OPT",3348,10,7,"^")
	;;=IB BASC TRANSFER
	;;^UTILITY(U,$J,"OPT",3348,10,8,0)
	;;=3360^PRT
	;;^UTILITY(U,$J,"OPT",3348,10,8,"^")
	;;=IB BASC PRINT GROUP ENTRY
	;;^UTILITY(U,$J,"OPT",3348,10,9,0)
	;;=3361^APP
	;;^UTILITY(U,$J,"OPT",3348,10,9,"^")
	;;=IB OUTPUT BASC FORMS FOR APPT
	;;^UTILITY(U,$J,"OPT",3348,10,10,0)
	;;=3370^SHE
	;;^UTILITY(U,$J,"OPT",3348,10,10,"^")
	;;=IB BASC PRINT A GROUP
	;;^UTILITY(U,$J,"OPT",3348,10,11,0)
	;;=3583^INA
	;;^UTILITY(U,$J,"OPT",3348,10,11,"^")
	;;=IB BASC INACTIVE CODES
	;;^UTILITY(U,$J,"OPT",3348,99)
	;;=55301,42711
	;;^UTILITY(U,$J,"OPT",3348,"U")
	;;=AMBULATORY SURGERY MAINTENANCE
	;;^UTILITY(U,$J,"OPT",3350,0)
	;;=IB BASC LOCALITY MODIFIER^Locality Modifier Enter/Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3350,1,0)
	;;=^^1^1^2920626^^^
	;;^UTILITY(U,$J,"OPT",3350,1,1,0)
	;;=Enter or edit division information related to billing.
	;;^UTILITY(U,$J,"OPT",3350,25)
	;;=EN5^IBECPTE
	;;^UTILITY(U,$J,"OPT",3350,"U")
	;;=LOCALITY MODIFIER ENTER/EDIT
	;;^UTILITY(U,$J,"OPT",3352,0)
	;;=IB BASC RATE GROUP ENTRY^Ambulatory Surgery Rate Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3352,1,0)
	;;=^^1^1^2920129^^
	;;^UTILITY(U,$J,"OPT",3352,1,1,0)
	;;=Enter/edit entries in the CPT rate group billing file.
	;;^UTILITY(U,$J,"OPT",3352,25)
	;;=EN4^IBECPTE
	;;^UTILITY(U,$J,"OPT",3352,"U")
	;;=AMBULATORY SURGERY RATE EDIT

IBINI0DF
IBINI0DF	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3354,0)
	;;=IB BASC TRANSFER^Run Amb. Surg. Update^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3354,1,0)
	;;=^^2^2^2920722^^^^
	;;^UTILITY(U,$J,"OPT",3354,1,1,0)
	;;=Transfer procedures from temporary billing file to the permanent file.
	;;^UTILITY(U,$J,"OPT",3354,1,2,0)
	;;=Generally done once a year, after a new HCFA release.
	;;^UTILITY(U,$J,"OPT",3354,25)
	;;=IBECPTT
	;;^UTILITY(U,$J,"OPT",3354,"U")
	;;=RUN AMB. SURG. UPDATE
	;;^UTILITY(U,$J,"OPT",3355,0)
	;;=IB PURGE/BASC TRANSFER CLEANUP^Purge Update File^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3355,1,0)
	;;=^^2^2^2920722^^^^
	;;^UTILITY(U,$J,"OPT",3355,1,1,0)
	;;=Delete all CPT entries in the temporary file that have been transferred
	;;^UTILITY(U,$J,"OPT",3355,1,2,0)
	;;=to the permanent billing file.
	;;^UTILITY(U,$J,"OPT",3355,25)
	;;=PURGE^IBECPTZ
	;;^UTILITY(U,$J,"OPT",3355,"U")
	;;=PURGE UPDATE FILE
	;;^UTILITY(U,$J,"OPT",3356,0)
	;;=IB BASC TRANSFER ERRORS^List Transfer Errors^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3356,1,0)
	;;=^^3^3^2920722^^^^
	;;^UTILITY(U,$J,"OPT",3356,1,1,0)
	;;=Lists all entries in the temporary BASC file that have not been able to
	;;^UTILITY(U,$J,"OPT",3356,1,2,0)
	;;=transfer to the permanent BASC file.  This includes only those procedures
	;;^UTILITY(U,$J,"OPT",3356,1,3,0)
	;;=that could not transfer due to some error.
	;;^UTILITY(U,$J,"OPT",3356,25)
	;;=LIST^IBECPTZ
	;;^UTILITY(U,$J,"OPT",3356,"U")
	;;=LIST TRANSFER ERRORS
	;;^UTILITY(U,$J,"OPT",3360,0)
	;;=IB BASC PRINT GROUP ENTRY^Build CPT Check-off Sheet^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3360,1,0)
	;;=^^1^1^2920527^^^^
	;;^UTILITY(U,$J,"OPT",3360,1,1,0)
	;;=Enter or edit a clinic's CPT list.
	;;^UTILITY(U,$J,"OPT",3360,25)
	;;=IBERSE
	;;^UTILITY(U,$J,"OPT",3360,"U")
	;;=BUILD CPT CHECK-OFF SHEET
	;;^UTILITY(U,$J,"OPT",3361,0)
	;;=IB OUTPUT BASC FORMS FOR APPT^Print Check-off Sheet for Appointments^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3361,1,0)
	;;=^^4^4^2920423^^^^
	;;^UTILITY(U,$J,"OPT",3361,1,1,0)
	;;=For a given date, print Ambulatory Surgery Check-Off Sheets for individual
	;;^UTILITY(U,$J,"OPT",3361,1,2,0)
	;;=appointments or for each appointment in particular clinics.
	;;^UTILITY(U,$J,"OPT",3361,1,3,0)
	;;=No Check-Off Sheet will be printed for appointments that are no-shows
	;;^UTILITY(U,$J,"OPT",3361,1,4,0)
	;;=or have been cancelled.  Requires 132 columns.
	;;^UTILITY(U,$J,"OPT",3361,25)
	;;=IBERS
	;;^UTILITY(U,$J,"OPT",3361,"U")
	;;=PRINT CHECK-OFF SHEET FOR APPO
	;;^UTILITY(U,$J,"OPT",3363,0)
	;;=IB MT PROFILE^Single Patient Category C Billing Profile^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3363,1,0)
	;;=^^3^3^2920109^^
	;;^UTILITY(U,$J,"OPT",3363,1,1,0)
	;;=The Category C Billing Profile may be used to list, for a single patient,
	;;^UTILITY(U,$J,"OPT",3363,1,2,0)
	;;=all Means Test/Category C charges which fall within a user-specified
	;;^UTILITY(U,$J,"OPT",3363,1,3,0)
	;;=date range.
	;;^UTILITY(U,$J,"OPT",3363,25)
	;;=IBOMTP
	;;^UTILITY(U,$J,"OPT",3363,"U")
	;;=SINGLE PATIENT CATEGORY C BILL
	;;^UTILITY(U,$J,"OPT",3364,0)
	;;=IB MT ESTIMATOR^Estimate Category C Charges for an Admission^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3364,1,0)
	;;=^^4^4^2920103^
	;;^UTILITY(U,$J,"OPT",3364,1,1,0)
	;;=This report is used to estimate the Means Test/Category C charges for
	;;^UTILITY(U,$J,"OPT",3364,1,2,0)
	;;=an episode of Hospital or Nursing Home Care, given a proposed length
	;;^UTILITY(U,$J,"OPT",3364,1,3,0)
	;;=of stay.  The report may also be used to determine the remaining

IBINI0DG
IBINI0DG	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3364,1,4,0)
	;;=charges that will be billed to a current inpatient.
	;;^UTILITY(U,$J,"OPT",3364,25)
	;;=IBOMTE
	;;^UTILITY(U,$J,"OPT",3364,"U")
	;;=ESTIMATE CATEGORY C CHARGES FO
	;;^UTILITY(U,$J,"OPT",3365,0)
	;;=IB MT NIGHT COMP^Queue Means Test/Category C Compilation of Charges^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3365,1,0)
	;;=^^3^3^2940303^^^^
	;;^UTILITY(U,$J,"OPT",3365,1,1,0)
	;;=This job creates Means Test/Category C bills for all current inpatients
	;;^UTILITY(U,$J,"OPT",3365,1,2,0)
	;;=through the previous day.  The job should be queued to run each evening
	;;^UTILITY(U,$J,"OPT",3365,1,3,0)
	;;=after the G&L Recalculation has been completed.
	;;^UTILITY(U,$J,"OPT",3365,25)
	;;=IBAMTC
	;;^UTILITY(U,$J,"OPT",3365,200)
	;;=^^1D^
	;;^UTILITY(U,$J,"OPT",3365,"U")
	;;=QUEUE MEANS TEST/CATEGORY C CO
	;;^UTILITY(U,$J,"OPT",3367,0)
	;;=IB OUTPUT TREND REPORT^Insurance Payment Trend Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3367,1,0)
	;;=^^7^7^2940207^^
	;;^UTILITY(U,$J,"OPT",3367,1,1,0)
	;;=This option allows the user to analyze payment trends among
	;;^UTILITY(U,$J,"OPT",3367,1,2,0)
	;;=insurance companies.  In addition, it may be used to track
	;;^UTILITY(U,$J,"OPT",3367,1,3,0)
	;;=receivables which are due the Medical Center.  Many different
	;;^UTILITY(U,$J,"OPT",3367,1,4,0)
	;;=criteria may be specified to limit the selection of bills,
	;;^UTILITY(U,$J,"OPT",3367,1,5,0)
	;;=such as Rate Type, Inpt/Outpt, Treatment Dates, Bill Printed
	;;^UTILITY(U,$J,"OPT",3367,1,6,0)
	;;=Dates, and Insurance Company.  Any additional field may also
	;;^UTILITY(U,$J,"OPT",3367,1,7,0)
	;;=be selected and analyzed depending upon its content.
	;;^UTILITY(U,$J,"OPT",3367,25)
	;;=IBOTR
	;;^UTILITY(U,$J,"OPT",3367,"U")
	;;=INSURANCE PAYMENT TREND REPORT
	;;^UTILITY(U,$J,"OPT",3368,0)
	;;=IB OUTPT VISIT DATE INQUIRY^Outpatient Visit Date Inquiry^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3368,1,0)
	;;=^^5^5^2920106^
	;;^UTILITY(U,$J,"OPT",3368,1,1,0)
	;;=This option displays a billing record which covers a specified
	;;^UTILITY(U,$J,"OPT",3368,1,2,0)
	;;=outpatient visit.  The user may select any patient with billed
	;;^UTILITY(U,$J,"OPT",3368,1,3,0)
	;;=outpatient visits, and then the visit date in question.  The
	;;^UTILITY(U,$J,"OPT",3368,1,4,0)
	;;=option displays the same information as found in the Patient
	;;^UTILITY(U,$J,"OPT",3368,1,5,0)
	;;=Billing Inquiry.
	;;^UTILITY(U,$J,"OPT",3368,25)
	;;=IBCNQ1
	;;^UTILITY(U,$J,"OPT",3368,"U")
	;;=OUTPATIENT VISIT DATE INQUIRY
	;;^UTILITY(U,$J,"OPT",3369,0)
	;;=IB MT BILLING REPORT^Category C Billing Activity List^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3369,1,0)
	;;=^^2^2^2920226^^^^
	;;^UTILITY(U,$J,"OPT",3369,1,1,0)
	;;=This report is used to list all Means Test/Category C charges within a
	;;^UTILITY(U,$J,"OPT",3369,1,2,0)
	;;=user-specified date range.
	;;^UTILITY(U,$J,"OPT",3369,25)
	;;=IBOMTC
	;;^UTILITY(U,$J,"OPT",3369,"U")
	;;=CATEGORY C BILLING ACTIVITY LI
	;;^UTILITY(U,$J,"OPT",3370,0)
	;;=IB BASC PRINT A GROUP^Check off Sheet Print^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3370,1,0)
	;;=^^2^2^2920630^^^^
	;;^UTILITY(U,$J,"OPT",3370,1,1,0)
	;;=Print Check-Off Sheets by group.  Each group can be used for multiple clinics.
	;;^UTILITY(U,$J,"OPT",3370,1,2,0)
	;;=Report requires 132 columns.
	;;^UTILITY(U,$J,"OPT",3370,25)
	;;=IBERSP
	;;^UTILITY(U,$J,"OPT",3370,"U")
	;;=CHECK OFF SHEET PRINT
	;;^UTILITY(U,$J,"OPT",3372,0)
	;;=IB THIRD PARTY BILLING MENU^Third Party Billing Menu^^M^^^^^^^^INTEGRATED BILLING

IBINI0DH
IBINI0DH	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3372,1,0)
	;;=^^2^2^2940124^^^^
	;;^UTILITY(U,$J,"OPT",3372,1,1,0)
	;;=This menu contains the options necessary to create, edit, review,
	;;^UTILITY(U,$J,"OPT",3372,1,2,0)
	;;=authorize, print, and cancel third party bills.
	;;^UTILITY(U,$J,"OPT",3372,10,0)
	;;=^19.01IP^16^15
	;;^UTILITY(U,$J,"OPT",3372,10,1,0)
	;;=1213^AUTH
	;;^UTILITY(U,$J,"OPT",3372,10,1,"^")
	;;=IB AUTHORIZE BILL GENERATION
	;;^UTILITY(U,$J,"OPT",3372,10,2,0)
	;;=1208^BILL
	;;^UTILITY(U,$J,"OPT",3372,10,2,"^")
	;;=IB EDIT BILLING INFO
	;;^UTILITY(U,$J,"OPT",3372,10,3,0)
	;;=1216^CANC
	;;^UTILITY(U,$J,"OPT",3372,10,3,"^")
	;;=IB CANCEL BILL
	;;^UTILITY(U,$J,"OPT",3372,10,4,0)
	;;=2248^CLON
	;;^UTILITY(U,$J,"OPT",3372,10,4,"^")
	;;=IB COPY AND CANCEL
	;;^UTILITY(U,$J,"OPT",3372,10,5,0)
	;;=1214^GEN
	;;^UTILITY(U,$J,"OPT",3372,10,5,"^")
	;;=IB PRINT BILL
	;;^UTILITY(U,$J,"OPT",3372,10,6,0)
	;;=2335^RETN
	;;^UTILITY(U,$J,"OPT",3372,10,6,"^")
	;;=IB RETURN BILL MENU
	;;^UTILITY(U,$J,"OPT",3372,10,8,0)
	;;=1237^TEST
	;;^UTILITY(U,$J,"OPT",3372,10,8,"^")
	;;=IB UB-82 TEST PATTERN PRINT
	;;^UTILITY(U,$J,"OPT",3372,10,9,0)
	;;=3368^VIST
	;;^UTILITY(U,$J,"OPT",3372,10,9,"^")
	;;=IB OUTPT VISIT DATE INQUIRY
	;;^UTILITY(U,$J,"OPT",3372,10,10,0)
	;;=2516^INQU
	;;^UTILITY(U,$J,"OPT",3372,10,10,"^")
	;;=IB OUTPUT FULL INQ BY BILL NO
	;;^UTILITY(U,$J,"OPT",3372,10,11,0)
	;;=3548^TSTH^
	;;^UTILITY(U,$J,"OPT",3372,10,11,"^")
	;;=IB HCFA-1500 TEST PATTERN
	;;^UTILITY(U,$J,"OPT",3372,10,12,0)
	;;=4166^LIST
	;;^UTILITY(U,$J,"OPT",3372,10,12,"^")
	;;=IB OUTPUT AUTO BILLER
	;;^UTILITY(U,$J,"OPT",3372,10,13,0)
	;;=4171^DLST
	;;^UTILITY(U,$J,"OPT",3372,10,13,"^")
	;;=IB CLEAN AUTO BILLER LIST
	;;^UTILITY(U,$J,"OPT",3372,10,14,0)
	;;=4244^TP92
	;;^UTILITY(U,$J,"OPT",3372,10,14,"^")
	;;=IB UB-92 TEST PATTERN PRINT
	;;^UTILITY(U,$J,"OPT",3372,10,15,0)
	;;=4462^PRNT
	;;^UTILITY(U,$J,"OPT",3372,10,15,"^")
	;;=IB BATCH PRINT BILLS
	;;^UTILITY(U,$J,"OPT",3372,10,16,0)
	;;=4461^ADPR
	;;^UTILITY(U,$J,"OPT",3372,10,16,"^")
	;;=IB PRINT BILL ADDENDUM
	;;^UTILITY(U,$J,"OPT",3372,99)
	;;=55906,37930
	;;^UTILITY(U,$J,"OPT",3372,"U")
	;;=THIRD PARTY BILLING MENU
	;;^UTILITY(U,$J,"OPT",3373,0)
	;;=IB MEANS TEST MENU^Automated Means Test Billing Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3373,1,0)
	;;=^^2^2^2930823^^^^
	;;^UTILITY(U,$J,"OPT",3373,1,1,0)
	;;=This menu contains the options to manage the automated charges that
	;;^UTILITY(U,$J,"OPT",3373,1,2,0)
	;;=are generated for Category C veterans.
	;;^UTILITY(U,$J,"OPT",3373,10,0)
	;;=^19.01IP^14^10
	;;^UTILITY(U,$J,"OPT",3373,10,1,0)
	;;=3364^ESTM
	;;^UTILITY(U,$J,"OPT",3373,10,1,"^")
	;;=IB MT ESTIMATOR
	;;^UTILITY(U,$J,"OPT",3373,10,2,0)
	;;=3369^MTLS
	;;^UTILITY(U,$J,"OPT",3373,10,2,"^")
	;;=IB MT BILLING REPORT
	;;^UTILITY(U,$J,"OPT",3373,10,3,0)
	;;=3363^PROF
	;;^UTILITY(U,$J,"OPT",3373,10,3,"^")
	;;=IB MT PROFILE
	;;^UTILITY(U,$J,"OPT",3373,10,4,0)
	;;=3376^FLAG
	;;^UTILITY(U,$J,"OPT",3373,10,4,"^")
	;;=IB FLAG CONTINUOUS PATIENTS
	;;^UTILITY(U,$J,"OPT",3373,10,5,0)
	;;=3375^CLOC
	;;^UTILITY(U,$J,"OPT",3373,10,5,"^")
	;;=IB MT CLOCK MAINTENANCE
	;;^UTILITY(U,$J,"OPT",3373,10,6,0)
	;;=3377^INQC
	;;^UTILITY(U,$J,"OPT",3373,10,6,"^")
	;;=IB MT CLOCK INQUIRY
	;;^UTILITY(U,$J,"OPT",3373,10,7,0)
	;;=3378^CHRG
	;;^UTILITY(U,$J,"OPT",3373,10,7,"^")
	;;=IB CANCEL/EDIT/ADD CHARGES
	;;^UTILITY(U,$J,"OPT",3373,10,12,0)
	;;=4130^SPIL
	;;^UTILITY(U,$J,"OPT",3373,10,12,"^")
	;;=IB MT LIST SPECIAL CASES
	;;^UTILITY(U,$J,"OPT",3373,10,13,0)
	;;=4129^SPID
	;;^UTILITY(U,$J,"OPT",3373,10,13,"^")
	;;=IB MT DISP SPECIAL CASES

IBINI0DI
IBINI0DI	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3373,10,14,0)
	;;=4132^HOLD
	;;^UTILITY(U,$J,"OPT",3373,10,14,"^")
	;;=IB MT ON HOLD MENU
	;;^UTILITY(U,$J,"OPT",3373,99)
	;;=55922,52531
	;;^UTILITY(U,$J,"OPT",3373,"U")
	;;=AUTOMATED MEANS TEST BILLING M
	;;^UTILITY(U,$J,"OPT",3374,0)
	;;=IB OUTPUT MANAGEMENT REPORTS^Management Reports (Billing) Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3374,1,0)
	;;=^^2^2^2940207^^^^
	;;^UTILITY(U,$J,"OPT",3374,1,1,0)
	;;=This menu contains reports that provide statistics or lists of bills
	;;^UTILITY(U,$J,"OPT",3374,1,2,0)
	;;=that can be used in managing the Billing program.
	;;^UTILITY(U,$J,"OPT",3374,10,0)
	;;=^19.01IP^11^10
	;;^UTILITY(U,$J,"OPT",3374,10,1,0)
	;;=2513^BILL
	;;^UTILITY(U,$J,"OPT",3374,10,1,"^")
	;;=IB OUTPUT STATISTICAL REPORT
	;;^UTILITY(U,$J,"OPT",3374,10,3,0)
	;;=3346^PROD
	;;^UTILITY(U,$J,"OPT",3374,10,3,"^")
	;;=IB OUTPUT CLK PROD
	;;^UTILITY(U,$J,"OPT",3374,10,4,0)
	;;=2324^RATE
	;;^UTILITY(U,$J,"OPT",3374,10,4,"^")
	;;=IB LIST OF BILLING RATES
	;;^UTILITY(U,$J,"OPT",3374,10,5,0)
	;;=3235^RCT
	;;^UTILITY(U,$J,"OPT",3374,10,5,"^")
	;;=IB REV CODE TOTALS
	;;^UTILITY(U,$J,"OPT",3374,10,6,0)
	;;=1215^STAT
	;;^UTILITY(U,$J,"OPT",3374,10,6,"^")
	;;=IB BILL STATUS REPORT
	;;^UTILITY(U,$J,"OPT",3374,10,7,0)
	;;=1223^TOTL
	;;^UTILITY(U,$J,"OPT",3374,10,7,"^")
	;;=IB BILLING TOTALS REPORT
	;;^UTILITY(U,$J,"OPT",3374,10,8,0)
	;;=3367^TREN
	;;^UTILITY(U,$J,"OPT",3374,10,8,"^")
	;;=IB OUTPUT TREND REPORT
	;;^UTILITY(U,$J,"OPT",3374,10,9,0)
	;;=3383^COMM
	;;^UTILITY(U,$J,"OPT",3374,10,9,"^")
	;;=IB OUTPUT MOST COMMON OPT CPT
	;;^UTILITY(U,$J,"OPT",3374,10,10,0)
	;;=3402^UNBB
	;;^UTILITY(U,$J,"OPT",3374,10,10,"^")
	;;=IB OUTPUT UNBILLED BASC
	;;^UTILITY(U,$J,"OPT",3374,10,11,0)
	;;=4170^RANK
	;;^UTILITY(U,$J,"OPT",3374,10,11,"^")
	;;=IB OUTPUT RANK CARRIERS
	;;^UTILITY(U,$J,"OPT",3374,99)
	;;=55768,44400
	;;^UTILITY(U,$J,"OPT",3374,"U")
	;;=MANAGEMENT REPORTS (BILLING) M
	;;^UTILITY(U,$J,"OPT",3375,0)
	;;=IB MT CLOCK MAINTENANCE^Patient Billing Clock Maintenance^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3375,1,0)
	;;=^^1^1^2920722^^^^
	;;^UTILITY(U,$J,"OPT",3375,1,1,0)
	;;=This option will allow adding or editing of Patient Billing Clocks.
	;;^UTILITY(U,$J,"OPT",3375,20)
	;;=
	;;^UTILITY(U,$J,"OPT",3375,25)
	;;=IBEMTBC
	;;^UTILITY(U,$J,"OPT",3375,"U")
	;;=PATIENT BILLING CLOCK MAINTENA
	;;^UTILITY(U,$J,"OPT",3376,0)
	;;=IB FLAG CONTINUOUS PATIENTS^Add/Edit Pts. Continuously Hospitalized Since 1986^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3376,1,0)
	;;=^^7^7^2920722^^^
	;;^UTILITY(U,$J,"OPT",3376,1,1,0)
	;;=This option can be used to add or edit entries in the file of patient
	;;^UTILITY(U,$J,"OPT",3376,1,2,0)
	;;=continuously hospitalized since 1986.  These patients are exempt from
	;;^UTILITY(U,$J,"OPT",3376,1,3,0)
	;;=the co-payment portion of the means test but may still be charged the
	;;^UTILITY(U,$J,"OPT",3376,1,4,0)
	;;=per diem.  The automated category C billing software will exempt these
	;;^UTILITY(U,$J,"OPT",3376,1,5,0)
	;;=patients from the co-payments.  In order to be considered continuously 
	;;^UTILITY(U,$J,"OPT",3376,1,6,0)
	;;=hospitalized the patient must not have changed levels of care, i.e., gone
	;;^UTILITY(U,$J,"OPT",3376,1,7,0)
	;;=from a NHCU to the hospital.
	;;^UTILITY(U,$J,"OPT",3376,25)
	;;=IBECPF
	;;^UTILITY(U,$J,"OPT",3376,"U")
	;;=ADD/EDIT PTS. CONTINUOUSLY HOS
	;;^UTILITY(U,$J,"OPT",3377,0)
	;;=IB MT CLOCK INQUIRY^Patient Billing Clock Inquiry^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3377,1,0)
	;;=^^2^2^2920722^^^

IBINI0DJ
IBINI0DJ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3377,1,1,0)
	;;=Allows inquiry to the Category C patients number of inpatient days
	;;^UTILITY(U,$J,"OPT",3377,1,2,0)
	;;=and amounts billed.
	;;^UTILITY(U,$J,"OPT",3377,25)
	;;=IBOBCRT
	;;^UTILITY(U,$J,"OPT",3377,"U")
	;;=PATIENT BILLING CLOCK INQUIRY
	;;^UTILITY(U,$J,"OPT",3378,0)
	;;=IB CANCEL/EDIT/ADD CHARGES^Cancel/Edit/Add Patient Charges^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3378,1,0)
	;;=^^2^2^2920205^^^
	;;^UTILITY(U,$J,"OPT",3378,1,1,0)
	;;=This option will allow the user to directly cancel, edit, or add
	;;^UTILITY(U,$J,"OPT",3378,1,2,0)
	;;=to patient charges.
	;;^UTILITY(U,$J,"OPT",3378,25)
	;;=IBECEA
	;;^UTILITY(U,$J,"OPT",3378,"U")
	;;=CANCEL/EDIT/ADD PATIENT CHARGE
	;;^UTILITY(U,$J,"OPT",3380,0)
	;;=IB OUTPUT VETS BY DISCH^Veterans w/Insurance and Discharges^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3380,1,0)
	;;=^^1^1^2930712^^^^
	;;^UTILITY(U,$J,"OPT",3380,1,1,0)
	;;=List of Veteran discharges by division that are billable.
	;;^UTILITY(U,$J,"OPT",3380,25)
	;;=INPDIS^IBCONSC
	;;^UTILITY(U,$J,"OPT",3380,"U")
	;;=VETERANS W/INSURANCE AND DISCH
	;;^UTILITY(U,$J,"OPT",3381,0)
	;;=IB BACKGRND VET DISCHS W/INS^Background Vet. Patients with Discharges and Ins^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3381,1,0)
	;;=^^2^2^2940207^
	;;^UTILITY(U,$J,"OPT",3381,1,1,0)
	;;=This option may be set to be queued once per week to run and generate 
	;;^UTILITY(U,$J,"OPT",3381,1,2,0)
	;;=a list of Veterans with Insurance and Discharges.
	;;^UTILITY(U,$J,"OPT",3381,25)
	;;=EN^IBCONS1
	;;^UTILITY(U,$J,"OPT",3381,"U")
	;;=BACKGROUND VET. PATIENTS WITH 
	;;^UTILITY(U,$J,"OPT",3382,0)
	;;=IB OUTPUT CONTINUOUS PATIENTS^Patient Currently Cont. Hospitalized since 1986^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3382,1,0)
	;;=^^2^2^2920304^^^
	;;^UTILITY(U,$J,"OPT",3382,1,1,0)
	;;=This option is a list of current inpatients continuously hospitalized
	;;^UTILITY(U,$J,"OPT",3382,1,2,0)
	;;=at the same level of care since 1986.
	;;^UTILITY(U,$J,"OPT",3382,25)
	;;=IBOBCR6
	;;^UTILITY(U,$J,"OPT",3382,"U")
	;;=PATIENT CURRENTLY CONT. HOSPIT
	;;^UTILITY(U,$J,"OPT",3383,0)
	;;=IB OUTPUT MOST COMMON OPT CPT^Most Commonly used Outpatient CPT Codes^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3383,1,0)
	;;=^^3^3^2920312^^^^
	;;^UTILITY(U,$J,"OPT",3383,1,1,0)
	;;=This option will list the most common Ambulatory Procedures and 
	;;^UTILITY(U,$J,"OPT",3383,1,2,0)
	;;=Ambulatory Surgeries performed in a date range for a given set of clinics.
	;;^UTILITY(U,$J,"OPT",3383,1,3,0)
	;;=This can be used to help build the CPT Check-off Sheets.
	;;^UTILITY(U,$J,"OPT",3383,25)
	;;=IBOCNC
	;;^UTILITY(U,$J,"OPT",3383,"U")
	;;=MOST COMMONLY USED OUTPATIENT 
	;;^UTILITY(U,$J,"OPT",3384,0)
	;;=IB OUTPUT INPTS WITHOUT INS^Inpatients w/Unknown or Expired Insurance^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3384,1,0)
	;;=^^3^3^2920604^^^
	;;^UTILITY(U,$J,"OPT",3384,1,1,0)
	;;=This option will produce a list of either current inpatients or admissions
	;;^UTILITY(U,$J,"OPT",3384,1,2,0)
	;;=for a date range where the patient has either unknown insurance or the 
	;;^UTILITY(U,$J,"OPT",3384,1,3,0)
	;;=insurance is expired.
	;;^UTILITY(U,$J,"OPT",3384,25)
	;;=IBOUNP4
	;;^UTILITY(U,$J,"OPT",3384,"U")
	;;=INPATIENTS W/UNKNOWN OR EXPIRE
	;;^UTILITY(U,$J,"OPT",3385,0)
	;;=IB OUTPUT OPTS WITHOUT INS^Outpatients w/Unknown or Expired Insurance^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3385,1,0)
	;;=^^2^2^2920604^^^
	;;^UTILITY(U,$J,"OPT",3385,1,1,0)
	;;=This report will produce a list of patients for clinic appointments

IBINI0DK
IBINI0DK	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3385,1,2,0)
	;;=that have unknown or expired insurance.
	;;^UTILITY(U,$J,"OPT",3385,25)
	;;=IBOUNP1
	;;^UTILITY(U,$J,"OPT",3385,"U")
	;;=OUTPATIENTS W/UNKNOWN OR EXPIR
	;;^UTILITY(U,$J,"OPT",3396,0)
	;;=IB PURGE MENU^Purge Menu^^M^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3396,1,0)
	;;=^^1^1^2920519^^^^
	;;^UTILITY(U,$J,"OPT",3396,1,1,0)
	;;=This menu contains all the Integrated billing purge options
	;;^UTILITY(U,$J,"OPT",3396,10,0)
	;;=^19.01IP^9^8
	;;^UTILITY(U,$J,"OPT",3396,10,2,0)
	;;=3355^BASC
	;;^UTILITY(U,$J,"OPT",3396,10,2,"^")
	;;=IB PURGE/BASC TRANSFER CLEANUP
	;;^UTILITY(U,$J,"OPT",3396,10,3,0)
	;;=3434
	;;^UTILITY(U,$J,"OPT",3396,10,3,"^")
	;;=IB PURGE/ARCHIVE BILLING DATA
	;;^UTILITY(U,$J,"OPT",3396,10,4,0)
	;;=3435
	;;^UTILITY(U,$J,"OPT",3396,10,4,"^")
	;;=IB PURGE BILLING DATA
	;;^UTILITY(U,$J,"OPT",3396,10,5,0)
	;;=3433
	;;^UTILITY(U,$J,"OPT",3396,10,5,"^")
	;;=IB PURGE/FIND BILLING DATA
	;;^UTILITY(U,$J,"OPT",3396,10,6,0)
	;;=3542
	;;^UTILITY(U,$J,"OPT",3396,10,6,"^")
	;;=IB PURGE LIST LOG ENTRIES
	;;^UTILITY(U,$J,"OPT",3396,10,7,0)
	;;=3543
	;;^UTILITY(U,$J,"OPT",3396,10,7,"^")
	;;=IB PURGE LOG INQUIRY
	;;^UTILITY(U,$J,"OPT",3396,10,8,0)
	;;=3544
	;;^UTILITY(U,$J,"OPT",3396,10,8,"^")
	;;=IB PURGE LIST TEMPLATE ENTRIES
	;;^UTILITY(U,$J,"OPT",3396,10,9,0)
	;;=3545
	;;^UTILITY(U,$J,"OPT",3396,10,9,"^")
	;;=IB PURGE DELETE TEMPLATE ENTRY
	;;^UTILITY(U,$J,"OPT",3396,99)
	;;=55269,54167
	;;^UTILITY(U,$J,"OPT",3396,"U")
	;;=PURGE MENU
	;;^UTILITY(U,$J,"OPT",3402,0)
	;;=IB OUTPUT UNBILLED BASC^Unbilled BASC for Insured Patient Appointments^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3402,1,0)
	;;=^^4^4^2920312^^
	;;^UTILITY(U,$J,"OPT",3402,1,1,0)
	;;=This report lists all BASC procedures for scheduled appointments of
	;;^UTILITY(U,$J,"OPT",3402,1,2,0)
	;;=insured patients that could not be matched with BASC procedures entered
	;;^UTILITY(U,$J,"OPT",3402,1,3,0)
	;;=on a bill for the patient.  The match is based on the appointment date
	;;^UTILITY(U,$J,"OPT",3402,1,4,0)
	;;=in scheduling and the procedure date in billing.
	;;^UTILITY(U,$J,"OPT",3402,25)
	;;=IBOBCC
	;;^UTILITY(U,$J,"OPT",3402,99)
	;;=55650,38160
	;;^UTILITY(U,$J,"OPT",3402,"U")
	;;=UNBILLED BASC FOR INSURED PATI
	;;^UTILITY(U,$J,"OPT",3433,0)
	;;=IB PURGE/FIND BILLING DATA^Find Billing Data to Archive^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3433,1,0)
	;;=^^9^9^2920519^^
	;;^UTILITY(U,$J,"OPT",3433,1,1,0)
	;;=This option may be used to identify records to be archived and purged
	;;^UTILITY(U,$J,"OPT",3433,1,2,0)
	;;=from the following files:
	;;^UTILITY(U,$J,"OPT",3433,1,3,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3433,1,4,0)
	;;=  #350  INTEGRATED BILLING ACTION
	;;^UTILITY(U,$J,"OPT",3433,1,5,0)
	;;=  #351  CATEGORY C BILLING CLOCK
	;;^UTILITY(U,$J,"OPT",3433,1,6,0)
	;;=  #399  BILL/CLAIMS
	;;^UTILITY(U,$J,"OPT",3433,1,7,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3433,1,8,0)
	;;=Entries which are selected to be archived and then purged are placed
	;;^UTILITY(U,$J,"OPT",3433,1,9,0)
	;;=into a Search (Sort) template.
	;;^UTILITY(U,$J,"OPT",3433,25)
	;;=FIND^IBP
	;;^UTILITY(U,$J,"OPT",3433,"U")
	;;=FIND BILLING DATA TO ARCHIVE
	;;^UTILITY(U,$J,"OPT",3434,0)
	;;=IB PURGE/ARCHIVE BILLING DATA^Archive Billing Data^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3434,1,0)
	;;=^^8^8^2920519^^^^
	;;^UTILITY(U,$J,"OPT",3434,1,1,0)
	;;=This option may be used to archive data from the following files:
	;;^UTILITY(U,$J,"OPT",3434,1,2,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3434,1,3,0)
	;;=  #350  INTEGRATED BILLING ACTION

IBINI0DL
IBINI0DL	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3434,1,4,0)
	;;=  #351  CATEGORY C BILLING CLOCK
	;;^UTILITY(U,$J,"OPT",3434,1,5,0)
	;;=  #399  BILL/CLAIMS
	;;^UTILITY(U,$J,"OPT",3434,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3434,1,7,0)
	;;=Entries from these files must be found, and placed in the appropriate
	;;^UTILITY(U,$J,"OPT",3434,1,8,0)
	;;=Search (Sort) template, before they may be archived.
	;;^UTILITY(U,$J,"OPT",3434,25)
	;;=ARCHIVE^IBP
	;;^UTILITY(U,$J,"OPT",3434,"U")
	;;=ARCHIVE BILLING DATA
	;;^UTILITY(U,$J,"OPT",3435,0)
	;;=IB PURGE BILLING DATA^Purge Billing Data^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3435,1,0)
	;;=^^7^7^2940207^^^
	;;^UTILITY(U,$J,"OPT",3435,1,1,0)
	;;=This option may be used to purge data from the following files:
	;;^UTILITY(U,$J,"OPT",3435,1,2,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3435,1,3,0)
	;;=  #350  INTEGRATED BILLING ACTION
	;;^UTILITY(U,$J,"OPT",3435,1,4,0)
	;;=  #351  CATEGORY C BILLING CLOCK
	;;^UTILITY(U,$J,"OPT",3435,1,5,0)
	;;=  #399  BILL/CLAIMS
	;;^UTILITY(U,$J,"OPT",3435,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3435,1,7,0)
	;;=Entries from these files must be archived before they may be purged.
	;;^UTILITY(U,$J,"OPT",3435,25)
	;;=PURGE^IBP
	;;^UTILITY(U,$J,"OPT",3435,"U")
	;;=PURGE BILLING DATA
	;;^UTILITY(U,$J,"OPT",3436,0)
	;;=IB MT RELEASE CHARGES^Release Charges 'On Hold'^^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3436,1,0)
	;;=^^9^9^2930826^^
	;;^UTILITY(U,$J,"OPT",3436,1,1,0)
	;;=This option is used to release Category C charges which are 'on hold'
	;;^UTILITY(U,$J,"OPT",3436,1,2,0)
	;;=awaiting claim disposition from the patient's insurance company.  Any
	;;^UTILITY(U,$J,"OPT",3436,1,3,0)
	;;=held up charges for a patient (which is specified by the user) may be
	;;^UTILITY(U,$J,"OPT",3436,1,4,0)
	;;=selected and passed to Accounts Receivable.  This option will also be
	;;^UTILITY(U,$J,"OPT",3436,1,5,0)
	;;=accessed from the 'Enter a Payment' option in the Accounts Receivable
	;;^UTILITY(U,$J,"OPT",3436,1,6,0)
	;;=package.  If the user posts a payment from an insurance company for a
	;;^UTILITY(U,$J,"OPT",3436,1,7,0)
	;;=bill which has any 'held' charges associated with it, the user may opt
	;;^UTILITY(U,$J,"OPT",3436,1,8,0)
	;;=to select any of the charges to pass to Accounts Receivable in order to
	;;^UTILITY(U,$J,"OPT",3436,1,9,0)
	;;=post a portion of the insurance company's payment to the patient's bill.
	;;^UTILITY(U,$J,"OPT",3436,25)
	;;=IBRREL
	;;^UTILITY(U,$J,"OPT",3436,"U")
	;;=RELEASE CHARGES 'ON HOLD'
	;;^UTILITY(U,$J,"OPT",3437,0)
	;;=IB OUTPUT HELD CHARGES^Held Charges Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3437,1,0)
	;;=^^4^4^2920415^^^
	;;^UTILITY(U,$J,"OPT",3437,1,1,0)
	;;=This option produces the Held Charges Report.  The report lists all
	;;^UTILITY(U,$J,"OPT",3437,1,2,0)
	;;=charges having the status of ON HOLD.  With each charge is listed bills
	;;^UTILITY(U,$J,"OPT",3437,1,3,0)
	;;=that are for the same outpatient visit or the same inpatient admission
	;;^UTILITY(U,$J,"OPT",3437,1,4,0)
	;;=with an overlap in the period covered.
	;;^UTILITY(U,$J,"OPT",3437,25)
	;;=MAIN^IBOHLD1
	;;^UTILITY(U,$J,"OPT",3437,"U")
	;;=HELD CHARGES REPORT
	;;^UTILITY(U,$J,"OPT",3537,0)
	;;=IB OUTPUT EVENTS REPORT^Outpatient/Registration Events Report^^R^^^^^^n^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3537,1,0)
	;;=^^2^2^2920609^^^^
	;;^UTILITY(U,$J,"OPT",3537,1,1,0)
	;;=Report of clinic check-ins, stop codes, registrations, and charges for
	;;^UTILITY(U,$J,"OPT",3537,1,2,0)
	;;=Category C patients.
	;;^UTILITY(U,$J,"OPT",3537,25)
	;;=IBOVOP

IBINI0DM
IBINI0DM	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3537,"U")
	;;=OUTPATIENT/REGISTRATION EVENTS
	;;^UTILITY(U,$J,"OPT",3542,0)
	;;=IB PURGE LIST LOG ENTRIES^List Archive/Purge Log Entries^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3542,1,0)
	;;=^^3^3^2920519^^^
	;;^UTILITY(U,$J,"OPT",3542,1,1,0)
	;;=This option may be used to list all of the log entries in the
	;;^UTILITY(U,$J,"OPT",3542,1,2,0)
	;;=IB ARCHIVE/PURGE LOG file, #350.6.  All entries in the file are
	;;^UTILITY(U,$J,"OPT",3542,1,3,0)
	;;=listed, in the order that they were added to the file.
	;;^UTILITY(U,$J,"OPT",3542,25)
	;;=LST^IBPO
	;;^UTILITY(U,$J,"OPT",3542,"U")
	;;=LIST ARCHIVE/PURGE LOG ENTRIES
	;;^UTILITY(U,$J,"OPT",3543,0)
	;;=IB PURGE LOG INQUIRY^Archive/Purge Log Inquiry^^R^^XUMGR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3543,1,0)
	;;=^^2^2^2920519^^^
	;;^UTILITY(U,$J,"OPT",3543,1,1,0)
	;;=This option may be used to provide a full inquiry of any entry in the
	;;^UTILITY(U,$J,"OPT",3543,1,2,0)
	;;=IB ARCHIVE/PURGE LOG, file #350.6.
	;;^UTILITY(U,$J,"OPT",3543,25)
	;;=INQ^IBPO
	;;^UTILITY(U,$J,"OPT",3543,"U")
	;;=ARCHIVE/PURGE LOG INQUIRY
	;;^UTILITY(U,$J,"OPT",3544,0)
	;;=IB PURGE LIST TEMPLATE ENTRIES^List Search Template Entries^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3544,1,0)
	;;=^^2^2^2920519^
	;;^UTILITY(U,$J,"OPT",3544,1,1,0)
	;;=This option may be used to list all entries in a Search Template which
	;;^UTILITY(U,$J,"OPT",3544,1,2,0)
	;;=are scheduled to be archived and purged.
	;;^UTILITY(U,$J,"OPT",3544,25)
	;;=TMP^IBPO
	;;^UTILITY(U,$J,"OPT",3544,"U")
	;;=LIST SEARCH TEMPLATE ENTRIES
	;;^UTILITY(U,$J,"OPT",3545,0)
	;;=IB PURGE DELETE TEMPLATE ENTRY^Delete Entry from Search Template^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3545,1,0)
	;;=^^10^10^2940207^^^
	;;^UTILITY(U,$J,"OPT",3545,1,1,0)
	;;=This option may be used to prevent a record from being purged from the
	;;^UTILITY(U,$J,"OPT",3545,1,2,0)
	;;=database.  The user will be prompted for an established Search Template
	;;^UTILITY(U,$J,"OPT",3545,1,3,0)
	;;=based on one of the following three files:
	;;^UTILITY(U,$J,"OPT",3545,1,4,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3545,1,5,0)
	;;=  350  INTEGRATED BILLING ACTION
	;;^UTILITY(U,$J,"OPT",3545,1,6,0)
	;;=  351  CATEGORY C BILLING CLOCK
	;;^UTILITY(U,$J,"OPT",3545,1,7,0)
	;;=  399  BILL/CLAIMS
	;;^UTILITY(U,$J,"OPT",3545,1,8,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3545,1,9,0)
	;;=The records stored in this template will be listed, and the user may
	;;^UTILITY(U,$J,"OPT",3545,1,10,0)
	;;=select a record to be deleted from the template.
	;;^UTILITY(U,$J,"OPT",3545,25)
	;;=IBPUDEL
	;;^UTILITY(U,$J,"OPT",3545,"U")
	;;=DELETE ENTRY FROM SEARCH TEMPL
	;;^UTILITY(U,$J,"OPT",3546,0)
	;;=IB MT PASS CONV CHARGES^Send Converted Charges to A/R^To be removed with the next version of IB^R^^IB AUTHORIZE^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3546,1,0)
	;;=^^2^2^2931229^^^^
	;;^UTILITY(U,$J,"OPT",3546,1,1,0)
	;;=This option sends converted charges to accounts receivable. User can 
	;;^UTILITY(U,$J,"OPT",3546,1,2,0)
	;;=use Patient name or a Cutoff date as selection criteria.
	;;^UTILITY(U,$J,"OPT",3546,25)
	;;=START^IBRCON3
	;;^UTILITY(U,$J,"OPT",3546,"U")
	;;=SEND CONVERTED CHARGES TO A/R
	;;^UTILITY(U,$J,"OPT",3547,0)
	;;=IB SITE DEVICE SETUP^Select Default Device for Forms^^E^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3547,1,0)
	;;=^^3^3^2920722^^
	;;^UTILITY(U,$J,"OPT",3547,1,1,0)
	;;=This option allows associating devices as the default answer when printing
	;;^UTILITY(U,$J,"OPT",3547,1,2,0)
	;;=forms.  This is used to enter the default device for AR for follow-up

IBINI0DN
IBINI0DN	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3547,1,3,0)
	;;=activity.
	;;^UTILITY(U,$J,"OPT",3547,30)
	;;=IBE(353,
	;;^UTILITY(U,$J,"OPT",3547,31)
	;;=AEMQL
	;;^UTILITY(U,$J,"OPT",3547,50)
	;;=IBE(353,
	;;^UTILITY(U,$J,"OPT",3547,51)
	;;=[IB DEVICE]
	;;^UTILITY(U,$J,"OPT",3547,"U")
	;;=SELECT DEFAULT DEVICE FOR FORM
	;;^UTILITY(U,$J,"OPT",3548,0)
	;;=IB HCFA-1500 TEST PATTERN^HCFA-1500 Test Pattern Print^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3548,1,0)
	;;=^^2^2^2930728^^^^
	;;^UTILITY(U,$J,"OPT",3548,1,1,0)
	;;=This option prints a test pattern on the HCFA-1500 form so that
	;;^UTILITY(U,$J,"OPT",3548,1,2,0)
	;;=the form alignment in the printer may be checked.
	;;^UTILITY(U,$J,"OPT",3548,25)
	;;=IBCF2TP
	;;^UTILITY(U,$J,"OPT",3548,"U")
	;;=HCFA-1500 TEST PATTERN PRINT
	;;^UTILITY(U,$J,"OPT",3582,0)
	;;=IB OUTPUT MENU^Output IB Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3582,1,0)
	;;=^^1^1^2940310^^^
	;;^UTILITY(U,$J,"OPT",3582,1,1,0)
	;;=This menu contains Inquiry and report options for Integrated Billing
	;;^UTILITY(U,$J,"OPT",3582,10,0)
	;;=^19.01IP^3^3
	;;^UTILITY(U,$J,"OPT",3582,10,1,0)
	;;=2516^FULL
	;;^UTILITY(U,$J,"OPT",3582,10,1,"^")
	;;=IB OUTPUT FULL INQ BY BILL NO
	;;^UTILITY(U,$J,"OPT",3582,10,2,0)
	;;=2514
	;;^UTILITY(U,$J,"OPT",3582,10,2,"^")
	;;=IB OUTPUT LIST ACTIONS
	;;^UTILITY(U,$J,"OPT",3582,10,3,0)
	;;=2513^^
	;;^UTILITY(U,$J,"OPT",3582,10,3,"^")
	;;=IB OUTPUT STATISTICAL REPORT
	;;^UTILITY(U,$J,"OPT",3582,99)
	;;=55951,34646
	;;^UTILITY(U,$J,"OPT",3582,"U")
	;;=OUTPUT IB MENU
	;;^UTILITY(U,$J,"OPT",3583,0)
	;;=IB BASC INACTIVE CODES^Delete/List Inactive Codes on Check-off Sheets^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3583,1,0)
	;;=^^2^2^2920730^^^^
	;;^UTILITY(U,$J,"OPT",3583,1,1,0)
	;;=Reports and deletes CPT procedure codes on Check-off Sheets that are
	;;^UTILITY(U,$J,"OPT",3583,1,2,0)
	;;=AMA inactive or Nationally, Locally, and Billing inactive.
	;;^UTILITY(U,$J,"OPT",3583,25)
	;;=IBERSI
	;;^UTILITY(U,$J,"OPT",3583,"U")
	;;=DELETE/LIST INACTIVE CODES ON 
	;;^UTILITY(U,$J,"OPT",3941,0)
	;;=IB RX EXEMPTION MENU^Medication Copay Income Exemption Menu^^M^^^^^^^^INCOME EXEMPTION PATCH
	;;^UTILITY(U,$J,"OPT",3941,1,0)
	;;=^^2^2^2930122^^
	;;^UTILITY(U,$J,"OPT",3941,1,1,0)
	;;=This is the primary menu in IB for the options to manage and print
	;;^UTILITY(U,$J,"OPT",3941,1,2,0)
	;;=reports on the Medication Copayment Income Exclusion functionality.
	;;^UTILITY(U,$J,"OPT",3941,10,0)
	;;=^19.01PI^10^9
	;;^UTILITY(U,$J,"OPT",3941,10,1,0)
	;;=3942^HARD
	;;^UTILITY(U,$J,"OPT",3941,10,1,"^")
	;;=IB RX HARDSHIP
	;;^UTILITY(U,$J,"OPT",3941,10,2,0)
	;;=3943^EXEM
	;;^UTILITY(U,$J,"OPT",3941,10,2,"^")
	;;=IB RX INQUIRE
	;;^UTILITY(U,$J,"OPT",3941,10,3,0)
	;;=3944^THRE
	;;^UTILITY(U,$J,"OPT",3941,10,3,"^")
	;;=IB RX ADD THRESHOLDS
	;;^UTILITY(U,$J,"OPT",3941,10,4,0)
	;;=3945^LIST
	;;^UTILITY(U,$J,"OPT",3941,10,4,"^")
	;;=IB RX PRINT THRESHOLDS
	;;^UTILITY(U,$J,"OPT",3941,10,6,0)
	;;=3946^PATI
	;;^UTILITY(U,$J,"OPT",3941,10,6,"^")
	;;=IB RX PRINT PAT. EXEMP.
	;;^UTILITY(U,$J,"OPT",3941,10,7,0)
	;;=3947^CHAR
	;;^UTILITY(U,$J,"OPT",3941,10,7,"^")
	;;=IB RX PRINT RETRO CHARGES
	;;^UTILITY(U,$J,"OPT",3941,10,8,0)
	;;=3948^VERI
	;;^UTILITY(U,$J,"OPT",3941,10,8,"^")
	;;=IB RX PRINT VERIFY EXEMP
	;;^UTILITY(U,$J,"OPT",3941,10,9,0)
	;;=4082^COLE
	;;^UTILITY(U,$J,"OPT",3941,10,9,"^")
	;;=IB RX EDIT LETTER
	;;^UTILITY(U,$J,"OPT",3941,10,10,0)
	;;=4083^LEPR
	;;^UTILITY(U,$J,"OPT",3941,10,10,"^")
	;;=IB RX PRINT EX LETERS
	;;^UTILITY(U,$J,"OPT",3941,99)
	;;=55733,49423
	;;^UTILITY(U,$J,"OPT",3941,99.1)
	;;=55609,31556

IBINI0DO
IBINI0DO	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3941,"U")
	;;=MEDICATION COPAY INCOME EXEMPT
	;;^UTILITY(U,$J,"OPT",3942,0)
	;;=IB RX HARDSHIP^Manually Change Copay Exemption (Hardships)^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",3942,1,0)
	;;=^^7^7^2930419^^
	;;^UTILITY(U,$J,"OPT",3942,1,1,0)
	;;=This option can be used to give a hardship waiver from the Medication
	;;^UTILITY(U,$J,"OPT",3942,1,2,0)
	;;=Copayment.  If a hardship is granted it will be good for one year from
	;;^UTILITY(U,$J,"OPT",3942,1,3,0)
	;;=the date of the hardship. 
	;;^UTILITY(U,$J,"OPT",3942,1,4,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3942,1,5,0)
	;;=This option can also be used to update a single patient's exemption to
	;;^UTILITY(U,$J,"OPT",3942,1,6,0)
	;;=the correct status as computed from his patient record, if the current
	;;^UTILITY(U,$J,"OPT",3942,1,7,0)
	;;=exemption does not match what is computed.
	;;^UTILITY(U,$J,"OPT",3942,25)
	;;=IBARXEX
	;;^UTILITY(U,$J,"OPT",3942,"U")
	;;=MANUALLY CHANGE COPAY EXEMPTIO
	;;^UTILITY(U,$J,"OPT",3943,0)
	;;=IB RX INQUIRE^Inquire to Medication Copay Income Exemptions^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3943,1,0)
	;;=^^2^2^2930122^
	;;^UTILITY(U,$J,"OPT",3943,1,1,0)
	;;=This option will allow a brief inquiry to active exemptions or a full
	;;^UTILITY(U,$J,"OPT",3943,1,2,0)
	;;=inquiry to the history of all exemptions for a patient.
	;;^UTILITY(U,$J,"OPT",3943,25)
	;;=IBARXEI
	;;^UTILITY(U,$J,"OPT",3943,"U")
	;;=INQUIRE TO MEDICATION COPAY IN
	;;^UTILITY(U,$J,"OPT",3944,0)
	;;=IB RX ADD THRESHOLDS^Add Income Thresholds^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3944,1,0)
	;;=^^2^2^2930120^
	;;^UTILITY(U,$J,"OPT",3944,1,1,0)
	;;=This option is used to add the Income Thresholds used in the Medication
	;;^UTILITY(U,$J,"OPT",3944,1,2,0)
	;;=Copayment Income Exemption.
	;;^UTILITY(U,$J,"OPT",3944,25)
	;;=ADD^IBARXET
	;;^UTILITY(U,$J,"OPT",3944,"U")
	;;=ADD INCOME THRESHOLDS
	;;^UTILITY(U,$J,"OPT",3945,0)
	;;=IB RX PRINT THRESHOLDS^List Income Thresholds^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3945,1,0)
	;;=^^3^3^2930120^
	;;^UTILITY(U,$J,"OPT",3945,1,1,0)
	;;=This option will print a listing of the Income Thresholds used in
	;;^UTILITY(U,$J,"OPT",3945,1,2,0)
	;;=the Medication Copayment Income Exemption process.  The output
	;;^UTILITY(U,$J,"OPT",3945,1,3,0)
	;;=is sorted by type of Threshold and Effective Date.  
	;;^UTILITY(U,$J,"OPT",3945,25)
	;;=PRINT^IBARXET
	;;^UTILITY(U,$J,"OPT",3945,"U")
	;;=LIST INCOME THRESHOLDS
	;;^UTILITY(U,$J,"OPT",3946,0)
	;;=IB RX PRINT PAT. EXEMP.^Print Patient Exemptions or summary^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3946,1,0)
	;;=^^5^5^2930323^^^^
	;;^UTILITY(U,$J,"OPT",3946,1,1,0)
	;;=This option can print a list of patients by exemption status
	;;^UTILITY(U,$J,"OPT",3946,1,2,0)
	;;=or exemption reason.  This will enable a facility to print a list 
	;;^UTILITY(U,$J,"OPT",3946,1,3,0)
	;;=of patients who are either exempt or non-exempt.  Optionally the 
	;;^UTILITY(U,$J,"OPT",3946,1,4,0)
	;;=report can print only sub totals without printing the detailed 
	;;^UTILITY(U,$J,"OPT",3946,1,5,0)
	;;=patient listing.
	;;^UTILITY(U,$J,"OPT",3946,25)
	;;=IBARXEP
	;;^UTILITY(U,$J,"OPT",3946,"U")
	;;=PRINT PATIENT EXEMPTIONS OR SU
	;;^UTILITY(U,$J,"OPT",3947,0)
	;;=IB RX PRINT RETRO CHARGES^Print Charges Canceled Due to Income Exemption^^R^^^^^^^^INCOME EXEMPTION PATCH
	;;^UTILITY(U,$J,"OPT",3947,1,0)
	;;=^^5^5^2930304^^
	;;^UTILITY(U,$J,"OPT",3947,1,1,0)
	;;=This report will print a list of patients and Medication Copayment
	;;^UTILITY(U,$J,"OPT",3947,1,2,0)
	;;=charges that have been canceled due to the income exclusion.  Initially

IBINI0DP
IBINI0DP	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",3947,1,3,0)
	;;=this report will print a list of charges canceled during the installation/
	;;^UTILITY(U,$J,"OPT",3947,1,4,0)
	;;=conversion process.  The software may cancel other charges after
	;;^UTILITY(U,$J,"OPT",3947,1,5,0)
	;;=installation and this report can be used to list those charges.
	;;^UTILITY(U,$J,"OPT",3947,25)
	;;=IBARXEC1
	;;^UTILITY(U,$J,"OPT",3947,"U")
	;;=PRINT CHARGES CANCELED DUE TO 
	;;^UTILITY(U,$J,"OPT",3948,0)
	;;=IB RX PRINT VERIFY EXEMP^Print/Verify Patient Exemption Status^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",3948,1,0)
	;;=^^10^10^2940207^^^^
	;;^UTILITY(U,$J,"OPT",3948,1,1,0)
	;;=This option can be used to search through the BILLING EXEMPTIONS file
	;;^UTILITY(U,$J,"OPT",3948,1,2,0)
	;;=and compare the currently stored active exemption for each patient
	;;^UTILITY(U,$J,"OPT",3948,1,3,0)
	;;=against what it calculates to be the correct exemption status for
	;;^UTILITY(U,$J,"OPT",3948,1,4,0)
	;;=the patient based on current data in the MAS files.  This report can
	;;^UTILITY(U,$J,"OPT",3948,1,5,0)
	;;=be run to just print a list of discrepancies or it can be run 
	;;^UTILITY(U,$J,"OPT",3948,1,6,0)
	;;=to automatically update each incorrect exemption status.
	;;^UTILITY(U,$J,"OPT",3948,1,7,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",3948,1,8,0)
	;;=Initially the report should be run without updating the exemptions.  The
	;;^UTILITY(U,$J,"OPT",3948,1,9,0)
	;;=option Manually Change Copay Exemptions (Hardship) can be used to update
	;;^UTILITY(U,$J,"OPT",3948,1,10,0)
	;;=exemptions to the correct status one patient at a time if desired.
	;;^UTILITY(U,$J,"OPT",3948,25)
	;;=IBARXEPV
	;;^UTILITY(U,$J,"OPT",3948,"U")
	;;=PRINT/VERIFY PATIENT EXEMPTION
	;;^UTILITY(U,$J,"OPT",4082,0)
	;;=IB RX EDIT LETTER^Edit Copay Exemption Letter^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4082,1,0)
	;;=^^12^12^2930429^
	;;^UTILITY(U,$J,"OPT",4082,1,1,0)
	;;=This option will allow editing of the header, or station name and address,
	;;^UTILITY(U,$J,"OPT",4082,1,2,0)
	;;=and the main body of a letter.  The letter IB NOW EXEMPT is the letter
	;;^UTILITY(U,$J,"OPT",4082,1,3,0)
	;;=that was written to be sent to patients who become exempt during the
	;;^UTILITY(U,$J,"OPT",4082,1,4,0)
	;;=conversion to inform them that they no longer need to send in a 
	;;^UTILITY(U,$J,"OPT",4082,1,5,0)
	;;=copayment with their Rx refill requests.
	;;^UTILITY(U,$J,"OPT",4082,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4082,1,7,0)
	;;=The first six lines of the header field will be centered at the top
	;;^UTILITY(U,$J,"OPT",4082,1,8,0)
	;;=of each letter.  Do not center these lines.  The patient address will
	;;^UTILITY(U,$J,"OPT",4082,1,9,0)
	;;=print beginning on line 17.  The main body will print after the patient
	;;^UTILITY(U,$J,"OPT",4082,1,10,0)
	;;=address section.  Do not include functions in either word processing
	;;^UTILITY(U,$J,"OPT",4082,1,11,0)
	;;=field as VA FileMan utilities are not used at this time to output
	;;^UTILITY(U,$J,"OPT",4082,1,12,0)
	;;=the letters.
	;;^UTILITY(U,$J,"OPT",4082,25)
	;;=IBARXEPE
	;;^UTILITY(U,$J,"OPT",4082,"U")
	;;=EDIT COPAY EXEMPTION LETTER
	;;^UTILITY(U,$J,"OPT",4083,0)
	;;=IB RX PRINT EX LETERS^Letters to Exempt Patients^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4083,1,0)
	;;=^^9^9^2930429^
	;;^UTILITY(U,$J,"OPT",4083,1,1,0)
	;;=This option will print the form letter IB NOW EXEMPT for all currently
	;;^UTILITY(U,$J,"OPT",4083,1,2,0)
	;;=exempt patients.  The following patients will not be included:

IBINI0DQ
IBINI0DQ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4083,1,3,0)
	;;=   Deceased Patients
	;;^UTILITY(U,$J,"OPT",4083,1,4,0)
	;;=   Non-Veterans
	;;^UTILITY(U,$J,"OPT",4083,1,5,0)
	;;=   Patients who are rated SC greater than 50%
	;;^UTILITY(U,$J,"OPT",4083,1,6,0)
	;;=The user will be allowed to sort by Exemption Status Date, and by
	;;^UTILITY(U,$J,"OPT",4083,1,7,0)
	;;=Patient name.  Optionally, the user can store the results of the
	;;^UTILITY(U,$J,"OPT",4083,1,8,0)
	;;=search in a template named IB EXEMPTION LIST for local printing purposes.
	;;^UTILITY(U,$J,"OPT",4083,1,9,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4083,25)
	;;=IBARXEPL
	;;^UTILITY(U,$J,"OPT",4083,"U")
	;;=LETTERS TO EXEMPT PATIENTS
	;;^UTILITY(U,$J,"OPT",4093,0)
	;;=IBDF ENCOUNTER FORM^Encounter Forms^^M^^^^^^^y^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4093,1,0)
	;;=^^1^1^2930930^
	;;^UTILITY(U,$J,"OPT",4093,1,1,0)
	;;=Contains all of the encounter form options.
	;;^UTILITY(U,$J,"OPT",4093,10,0)
	;;=^19.01PI^11^5
	;;^UTILITY(U,$J,"OPT",4093,10,5,0)
	;;=4106^PM^3
	;;^UTILITY(U,$J,"OPT",4093,10,5,"^")
	;;=IBDF PRINT MANAGER
	;;^UTILITY(U,$J,"OPT",4093,10,8,0)
	;;=4178^TK^4
	;;^UTILITY(U,$J,"OPT",4093,10,8,"^")
	;;=IBDF EDIT TOOL KIT
	;;^UTILITY(U,$J,"OPT",4093,10,9,0)
	;;=4179^PR^2
	;;^UTILITY(U,$J,"OPT",4093,10,9,"^")
	;;=IBDF PRINT OPTIONS
	;;^UTILITY(U,$J,"OPT",4093,10,10,0)
	;;=4181^EE^1
	;;^UTILITY(U,$J,"OPT",4093,10,10,"^")
	;;=IBDF EDIT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4093,10,11,0)
	;;=4107^IR^5
	;;^UTILITY(U,$J,"OPT",4093,10,11,"^")
	;;=IBDF IRM OPTIONS
	;;^UTILITY(U,$J,"OPT",4093,99)
	;;=55852,54008
	;;^UTILITY(U,$J,"OPT",4093,"U")
	;;=ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4094,0)
	;;=IBDF CLINIC SETUP/EDIT FORMS^Clinic Setup/Edit Forms^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4094,1,0)
	;;=^^1^1^2930820^^^^
	;;^UTILITY(U,$J,"OPT",4094,1,1,0)
	;;=The form generator for creating encounter forms.
	;;^UTILITY(U,$J,"OPT",4094,20)
	;;=D ^IBDF6
	;;^UTILITY(U,$J,"OPT",4094,"U")
	;;=CLINIC SETUP/EDIT FORMS
	;;^UTILITY(U,$J,"OPT",4095,0)
	;;=IBDF PRINT ENCOUNTER FORMS^Print Encounter Forms for Appointments^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4095,1,0)
	;;=^^2^2^2931012^^
	;;^UTILITY(U,$J,"OPT",4095,1,1,0)
	;;=For printing an encounter form for appointments, either by division,
	;;^UTILITY(U,$J,"OPT",4095,1,2,0)
	;;=clinic, or patient.
	;;^UTILITY(U,$J,"OPT",4095,20)
	;;=D ^IBDF1B
	;;^UTILITY(U,$J,"OPT",4095,"U")
	;;=PRINT ENCOUNTER FORMS FOR APPO
	;;^UTILITY(U,$J,"OPT",4096,0)
	;;=IBDF PRINT BLNK ENCOUNTER FORM^Print Blank Encounter Form^^A^^^^^^^y^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4096,1,0)
	;;=^^2^2^2930610^^^^
	;;^UTILITY(U,$J,"OPT",4096,1,1,0)
	;;=This option allows the user to select a clinic, and if an encounter form
	;;^UTILITY(U,$J,"OPT",4096,1,2,0)
	;;=is defined for use with an embossed patient card the form will be printed.
	;;^UTILITY(U,$J,"OPT",4096,20)
	;;=D MAIN^IBDF1A(0)
	;;^UTILITY(U,$J,"OPT",4096,"U")
	;;=PRINT BLANK ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",4098,0)
	;;=IBDF PRNT FORM W/DATA NO APPT.^Print Form w/Patient Data, No Appt^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4098,1,0)
	;;=^^3^3^2930820^^^^
	;;^UTILITY(U,$J,"OPT",4098,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4098,1,2,0)
	;;=Allows an encounter form to be printed with patient data, but does not ask
	;;^UTILITY(U,$J,"OPT",4098,1,3,0)
	;;=that an appt. be selected. Uses current time as the appointment time.
	;;^UTILITY(U,$J,"OPT",4098,20)
	;;=D MAIN^IBDF1A(1)
	;;^UTILITY(U,$J,"OPT",4098,"U")
	;;=PRINT FORM W/PATIENT DATA, NO 

IBINI0DR
IBINI0DR	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4102,0)
	;;=IBDF DEFINE AVAILABLE REPORT^Define Available Report (not Health Summaries)^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4102,1,0)
	;;=^^2^2^2930623^
	;;^UTILITY(U,$J,"OPT",4102,1,1,0)
	;;=Allows reports, other than Health Summaries, to be made available for
	;;^UTILITY(U,$J,"OPT",4102,1,2,0)
	;;=use by the print manager.
	;;^UTILITY(U,$J,"OPT",4102,20)
	;;=D EDITRPRT^IBDF11(0)
	;;^UTILITY(U,$J,"OPT",4102,"U")
	;;=DEFINE AVAILABLE REPORT (NOT H
	;;^UTILITY(U,$J,"OPT",4103,0)
	;;=IBDF DEFINE AVLABLE HLTH SMRY^Define Available Health Summary^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4103,1,0)
	;;=^^1^1^2930924^^
	;;^UTILITY(U,$J,"OPT",4103,1,1,0)
	;;=Allows a Health Summary to be made available for use by the print manager.
	;;^UTILITY(U,$J,"OPT",4103,20)
	;;=D EDITRPRT^IBDF11(1)
	;;^UTILITY(U,$J,"OPT",4103,"U")
	;;=DEFINE AVAILABLE HEALTH SUMMAR
	;;^UTILITY(U,$J,"OPT",4104,0)
	;;=IBDF EDIT DIVISION REPORTS^Edit Division Reports^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4104,1,0)
	;;=^^1^1^2930623^
	;;^UTILITY(U,$J,"OPT",4104,1,1,0)
	;;=Used to select reports that should print for the entire division.
	;;^UTILITY(U,$J,"OPT",4104,20)
	;;=D DIVSUP^IBDF11
	;;^UTILITY(U,$J,"OPT",4104,99)
	;;=55762,42279
	;;^UTILITY(U,$J,"OPT",4104,"U")
	;;=EDIT DIVISION REPORTS
	;;^UTILITY(U,$J,"OPT",4105,0)
	;;=IBDF EDIT CLINIC REPORTS^Edit Clinic Reports^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4105,1,0)
	;;=^^1^1^2930623^
	;;^UTILITY(U,$J,"OPT",4105,1,1,0)
	;;=Used to select reports that should print for the clinic.
	;;^UTILITY(U,$J,"OPT",4105,20)
	;;=D CLNCSUP^IBDF11
	;;^UTILITY(U,$J,"OPT",4105,"U")
	;;=EDIT CLINIC REPORTS
	;;^UTILITY(U,$J,"OPT",4106,0)
	;;=IBDF PRINT MANAGER^Print Manager^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4106,1,0)
	;;=^^3^3^2930924^
	;;^UTILITY(U,$J,"OPT",4106,1,1,0)
	;;=Contains all the options pertaining to the print manager, except for the
	;;^UTILITY(U,$J,"OPT",4106,1,2,0)
	;;=IBDF DEFINE AVLABLE HLTH SMRY option - that option allows the user to
	;;^UTILITY(U,$J,"OPT",4106,1,3,0)
	;;=enter mumps code, so it must be limited to IRM use.
	;;^UTILITY(U,$J,"OPT",4106,10,0)
	;;=^19.01PI^6^5
	;;^UTILITY(U,$J,"OPT",4106,10,1,0)
	;;=4104^ED^1
	;;^UTILITY(U,$J,"OPT",4106,10,1,"^")
	;;=IBDF EDIT DIVISION REPORTS
	;;^UTILITY(U,$J,"OPT",4106,10,2,0)
	;;=4105^EC^2
	;;^UTILITY(U,$J,"OPT",4106,10,2,"^")
	;;=IBDF EDIT CLINIC REPORTS
	;;^UTILITY(U,$J,"OPT",4106,10,4,0)
	;;=4103^DH^4
	;;^UTILITY(U,$J,"OPT",4106,10,4,"^")
	;;=IBDF DEFINE AVLABLE HLTH SMRY
	;;^UTILITY(U,$J,"OPT",4106,10,5,0)
	;;=4116^LC
	;;^UTILITY(U,$J,"OPT",4106,10,5,"^")
	;;=IBDF LIST CLINICS USING FORMS
	;;^UTILITY(U,$J,"OPT",4106,10,6,0)
	;;=4115^RC
	;;^UTILITY(U,$J,"OPT",4106,10,6,"^")
	;;=IBDF REPORT CLINIC SETUPS
	;;^UTILITY(U,$J,"OPT",4106,99)
	;;=55852,54009
	;;^UTILITY(U,$J,"OPT",4106,"U")
	;;=PRINT MANAGER
	;;^UTILITY(U,$J,"OPT",4107,0)
	;;=IBDF IRM OPTIONS^Encounter Form IRM Options^^M^^IBDF IRM^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4107,1,0)
	;;=^^3^3^2940202^^^
	;;^UTILITY(U,$J,"OPT",4107,1,1,0)
	;;=The basic intent of this menu is to contain the options that should only
	;;^UTILITY(U,$J,"OPT",4107,1,2,0)
	;;=be available to those technical users that can program in MUMPS, which is
	;;^UTILITY(U,$J,"OPT",4107,1,3,0)
	;;=a requirement, for example, when, adding a new PACKAGE INTERFACE.
	;;^UTILITY(U,$J,"OPT",4107,10,0)
	;;=^19.01PI^8^5
	;;^UTILITY(U,$J,"OPT",4107,10,3,0)
	;;=4119^EP^3
	;;^UTILITY(U,$J,"OPT",4107,10,3,"^")
	;;=IBDF EDIT PACKAGE INTERFACE

IBINI0DS
IBINI0DS	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4107,10,4,0)
	;;=4120^EM^4
	;;^UTILITY(U,$J,"OPT",4107,10,4,"^")
	;;=IBDF EDIT MARKING AREA
	;;^UTILITY(U,$J,"OPT",4107,10,5,0)
	;;=4102^DR^5
	;;^UTILITY(U,$J,"OPT",4107,10,5,"^")
	;;=IBDF DEFINE AVAILABLE REPORT
	;;^UTILITY(U,$J,"OPT",4107,10,7,0)
	;;=4124^IX^7
	;;^UTILITY(U,$J,"OPT",4107,10,7,"^")
	;;=IBDF IMPORT/EXPORT UTILITY
	;;^UTILITY(U,$J,"OPT",4107,10,8,0)
	;;=4245^MC^8
	;;^UTILITY(U,$J,"OPT",4107,10,8,"^")
	;;=IBDF MISCELLANEOUS CLEANUP
	;;^UTILITY(U,$J,"OPT",4107,99)
	;;=55915,40169
	;;^UTILITY(U,$J,"OPT",4107,"U")
	;;=ENCOUNTER FORM IRM OPTIONS
	;;^UTILITY(U,$J,"OPT",4108,0)
	;;=IBDF EDIT TOOL KIT FORMS^Edit Tool Kit Forms^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4108,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"OPT",4108,1,1,0)
	;;=Allows tool kit forms to be edited, created, deleted.
	;;^UTILITY(U,$J,"OPT",4108,20)
	;;=D FORMLIST^IBDF12
	;;^UTILITY(U,$J,"OPT",4108,"U")
	;;=EDIT TOOL KIT FORMS
	;;^UTILITY(U,$J,"OPT",4109,0)
	;;=IBDF EDIT TOOL KIT BLOCKS^Edit Tool Kit Blocks^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4109,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"OPT",4109,1,1,0)
	;;=Allows tool kit blocks to be edited, created, deleted.
	;;^UTILITY(U,$J,"OPT",4109,20)
	;;=D LIST^IBDF13
	;;^UTILITY(U,$J,"OPT",4109,"U")
	;;=EDIT TOOL KIT BLOCKS
	;;^UTILITY(U,$J,"OPT",4115,0)
	;;=IBDF REPORT CLINIC SETUPS^Report Clinic Setups^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4115,1,0)
	;;=^^2^2^2930721^
	;;^UTILITY(U,$J,"OPT",4115,1,1,0)
	;;=Reports on each clinic setup, listing the encounter forms and other reports
	;;^UTILITY(U,$J,"OPT",4115,1,2,0)
	;;=defined for use by the clinic.
	;;^UTILITY(U,$J,"OPT",4115,20)
	;;=D SETUPS^IBDF14
	;;^UTILITY(U,$J,"OPT",4115,"U")
	;;=REPORT CLINIC SETUPS
	;;^UTILITY(U,$J,"OPT",4116,0)
	;;=IBDF LIST CLINICS USING FORMS^List Clinics Using Forms^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4116,1,0)
	;;=^^1^1^2931025^^
	;;^UTILITY(U,$J,"OPT",4116,1,1,0)
	;;=For each encounter form this option lists the clinics using it.
	;;^UTILITY(U,$J,"OPT",4116,20)
	;;=D FORMUSE^IBDF15
	;;^UTILITY(U,$J,"OPT",4116,"U")
	;;=LIST CLINICS USING FORMS
	;;^UTILITY(U,$J,"OPT",4119,0)
	;;=IBDF EDIT PACKAGE INTERFACE^Edit Package Interface^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4119,1,0)
	;;=^^5^5^2930726^
	;;^UTILITY(U,$J,"OPT",4119,1,1,0)
	;;=This option only allows selection routines and output routines. It allows
	;;^UTILITY(U,$J,"OPT",4119,1,2,0)
	;;=Package Interfaces to be created, edited, and deleted. However, Package Interfaces
	;;^UTILITY(U,$J,"OPT",4119,1,3,0)
	;;=that are in use in any form should not be deleted. By creating their
	;;^UTILITY(U,$J,"OPT",4119,1,4,0)
	;;=own Package Interfaces the local sites can display data to their forms that
	;;^UTILITY(U,$J,"OPT",4119,1,5,0)
	;;=is not provided for in the tool kit.
	;;^UTILITY(U,$J,"OPT",4119,20)
	;;=D EDIT^IBDF16
	;;^UTILITY(U,$J,"OPT",4119,"U")
	;;=EDIT PACKAGE INTERFACE
	;;^UTILITY(U,$J,"OPT",4120,0)
	;;=IBDF EDIT MARKING AREA^Edit Marking Area (for selection lists)^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4120,1,0)
	;;=^^3^3^2930727^
	;;^UTILITY(U,$J,"OPT",4120,1,1,0)
	;;=Allows the local sites to create their own Marking Area to supplement those
	;;^UTILITY(U,$J,"OPT",4120,1,2,0)
	;;=that come with the tool kit. Marking Areas are the areas on a selection list
	;;^UTILITY(U,$J,"OPT",4120,1,3,0)
	;;=that are used for writting in to indicate choices.
	;;^UTILITY(U,$J,"OPT",4120,20)
	;;=D MARKING^IBDF16

IBINI0DT
IBINI0DT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4120,"U")
	;;=EDIT MARKING AREA (FOR SELECTI
	;;^UTILITY(U,$J,"OPT",4124,0)
	;;=IBDF IMPORT/EXPORT UTILITY^Import/Export Utility^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4124,1,0)
	;;=^^1^1^2930819^
	;;^UTILITY(U,$J,"OPT",4124,1,1,0)
	;;=Allows forms and blocks to be transferred between sites.
	;;^UTILITY(U,$J,"OPT",4124,20)
	;;=D ^IBDE
	;;^UTILITY(U,$J,"OPT",4124,"U")
	;;=IMPORT/EXPORT UTILITY
	;;^UTILITY(U,$J,"OPT",4126,0)
	;;=IB OUTPUT EMPLOYER REPORT^Employer Report^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4126,1,0)
	;;=^^2^2^2940207^^^
	;;^UTILITY(U,$J,"OPT",4126,1,1,0)
	;;=For patients without active insurance, this report will list the patients
	;;^UTILITY(U,$J,"OPT",4126,1,2,0)
	;;=and/or the spouses employer.
	;;^UTILITY(U,$J,"OPT",4126,25)
	;;=IBOEMP
	;;^UTILITY(U,$J,"OPT",4126,"U")
	;;=EMPLOYER REPORT
	;;^UTILITY(U,$J,"OPT",4127,0)
	;;=IB MT LIST HELD (RATE) CHARGES^List Charges Awaiting New Copay Rate^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4127,1,0)
	;;=^^3^3^2930823^
	;;^UTILITY(U,$J,"OPT",4127,1,1,0)
	;;=This option is used to generate a list of all Means Test outpatient
	;;^UTILITY(U,$J,"OPT",4127,1,2,0)
	;;=copayment charges which have been placed on hold in Integrated
	;;^UTILITY(U,$J,"OPT",4127,1,3,0)
	;;=Billing because the outpatient copay rate is over one year old.
	;;^UTILITY(U,$J,"OPT",4127,25)
	;;=EN^IBEMTO1
	;;^UTILITY(U,$J,"OPT",4127,"U")
	;;=LIST CHARGES AWAITING NEW COPA
	;;^UTILITY(U,$J,"OPT",4128,0)
	;;=IB MT REL HELD (RATE) CHARGES^Release Charges Awaiting New Copay Rate^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4128,1,0)
	;;=^^7^7^2930823^
	;;^UTILITY(U,$J,"OPT",4128,1,1,0)
	;;=This option is used to release charges which have been placed on hold
	;;^UTILITY(U,$J,"OPT",4128,1,2,0)
	;;=in Integrated Billing because the outpatient copay rate is over one
	;;^UTILITY(U,$J,"OPT",4128,1,3,0)
	;;=year old.  If the new (less than one year old) rate has been entered
	;;^UTILITY(U,$J,"OPT",4128,1,4,0)
	;;=into the Billing table, the option will prompt the user to task off
	;;^UTILITY(U,$J,"OPT",4128,1,5,0)
	;;=a job which will automatically update the dollar amount and bill
	;;^UTILITY(U,$J,"OPT",4128,1,6,0)
	;;=all such charges.  The user will receive a bulletin when the tasked
	;;^UTILITY(U,$J,"OPT",4128,1,7,0)
	;;=job has completed.
	;;^UTILITY(U,$J,"OPT",4128,25)
	;;=ENO^IBEMTO
	;;^UTILITY(U,$J,"OPT",4128,"U")
	;;=RELEASE CHARGES AWAITING NEW C
	;;^UTILITY(U,$J,"OPT",4129,0)
	;;=IB MT DISP SPECIAL CASES^Disposition Special Inpatient Billing Cases^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4129,1,0)
	;;=^^2^2^2930823^
	;;^UTILITY(U,$J,"OPT",4129,1,1,0)
	;;=This option is used to enter the reason for not billing special inpatient
	;;^UTILITY(U,$J,"OPT",4129,1,2,0)
	;;=billing cases.
	;;^UTILITY(U,$J,"OPT",4129,25)
	;;=DISP^IBAMTI1
	;;^UTILITY(U,$J,"OPT",4129,"U")
	;;=DISPOSITION SPECIAL INPATIENT 
	;;^UTILITY(U,$J,"OPT",4130,0)
	;;=IB MT LIST SPECIAL CASES^List Special Inpatient Billing Cases^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4130,1,0)
	;;=^^4^4^2930823^
	;;^UTILITY(U,$J,"OPT",4130,1,1,0)
	;;=This option is used to list all special inpatient billing cases.  After
	;;^UTILITY(U,$J,"OPT",4130,1,2,0)
	;;=a case has been dispositioned, the output will include either the reason
	;;^UTILITY(U,$J,"OPT",4130,1,3,0)
	;;=for non-billing, or all of the charges which have been billed for the
	;;^UTILITY(U,$J,"OPT",4130,1,4,0)
	;;=admission.
	;;^UTILITY(U,$J,"OPT",4130,25)
	;;=LIST^IBAMTI2

IBINI0DU
IBINI0DU	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4130,"U")
	;;=LIST SPECIAL INPATIENT BILLING
	;;^UTILITY(U,$J,"OPT",4132,0)
	;;=IB MT ON HOLD MENU^On Hold Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4132,1,0)
	;;=^^4^4^2930826^^^^
	;;^UTILITY(U,$J,"OPT",4132,1,1,0)
	;;=This menu is used to group all options which are used to manage
	;;^UTILITY(U,$J,"OPT",4132,1,2,0)
	;;=Integrated Billing actions which are placed on hold because the
	;;^UTILITY(U,$J,"OPT",4132,1,3,0)
	;;=patient has insurance coverage or because the outpatient copay
	;;^UTILITY(U,$J,"OPT",4132,1,4,0)
	;;=rate is over one year old.
	;;^UTILITY(U,$J,"OPT",4132,10,0)
	;;=^19.01IP^5^5
	;;^UTILITY(U,$J,"OPT",4132,10,1,0)
	;;=4127^LIST
	;;^UTILITY(U,$J,"OPT",4132,10,1,"^")
	;;=IB MT LIST HELD (RATE) CHARGES
	;;^UTILITY(U,$J,"OPT",4132,10,2,0)
	;;=4128^WAIT
	;;^UTILITY(U,$J,"OPT",4132,10,2,"^")
	;;=IB MT REL HELD (RATE) CHARGES
	;;^UTILITY(U,$J,"OPT",4132,10,3,0)
	;;=3436^HOLD
	;;^UTILITY(U,$J,"OPT",4132,10,3,"^")
	;;=IB MT RELEASE CHARGES
	;;^UTILITY(U,$J,"OPT",4132,10,4,0)
	;;=3437^HELD
	;;^UTILITY(U,$J,"OPT",4132,10,4,"^")
	;;=IB OUTPUT HELD CHARGES
	;;^UTILITY(U,$J,"OPT",4132,10,5,0)
	;;=3546^PASS
	;;^UTILITY(U,$J,"OPT",4132,10,5,"^")
	;;=IB MT PASS CONV CHARGES
	;;^UTILITY(U,$J,"OPT",4132,99)
	;;=55880,85934
	;;^UTILITY(U,$J,"OPT",4132,"U")
	;;=ON HOLD MENU
	;;^UTILITY(U,$J,"OPT",4133,0)
	;;=IB MT FLAG OPT PARAMS^Flag Stop Codes/Dispositions/Clinics^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4133,1,0)
	;;=^^4^4^2930831^^
	;;^UTILITY(U,$J,"OPT",4133,1,1,0)
	;;=This option is used to flag stop codes, dispositions, and clinics
	;;^UTILITY(U,$J,"OPT",4133,1,2,0)
	;;=which the site has determined to be exempt from the Means Test
	;;^UTILITY(U,$J,"OPT",4133,1,3,0)
	;;=outpatient copayment charge.  These parameters are all flagged
	;;^UTILITY(U,$J,"OPT",4133,1,4,0)
	;;=by date and may be inactivated and re-activated.
	;;^UTILITY(U,$J,"OPT",4133,25)
	;;=EN^IBEMTF
	;;^UTILITY(U,$J,"OPT",4133,"U")
	;;=FLAG STOP CODES/DISPOSITIONS/C
	;;^UTILITY(U,$J,"OPT",4134,0)
	;;=IB MT LIST FLAGGED PARAMS^List Flagged Stop Codes/Dispositions/Clinics^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4134,1,0)
	;;=^^2^2^2930831^
	;;^UTILITY(U,$J,"OPT",4134,1,1,0)
	;;=This output is used to generate a list of all stop codes, dispositions,
	;;^UTILITY(U,$J,"OPT",4134,1,2,0)
	;;=and clinics which are inactive as of a user-specified date.
	;;^UTILITY(U,$J,"OPT",4134,25)
	;;=EN^IBEMTF2
	;;^UTILITY(U,$J,"OPT",4134,"U")
	;;=LIST FLAGGED STOP CODES/DISPOS
	;;^UTILITY(U,$J,"OPT",4135,0)
	;;=IBT USER COMBINED MCCR/UR MENU^Claims Tracking Menu (Combined Functions)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4135,1,0)
	;;=^^8^8^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4135,1,1,0)
	;;=This is the main menu for MCCR/UR persons who do both Hospital UR
	;;^UTILITY(U,$J,"OPT",4135,1,2,0)
	;;=and MCCR UR (Insurance UR).  It contains all the options necessary
	;;^UTILITY(U,$J,"OPT",4135,1,3,0)
	;;=to do both hospital and Insurance Reviews.
	;;^UTILITY(U,$J,"OPT",4135,1,4,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4135,1,5,0)
	;;=From this menu the claims tracking module can be edited, UR Reviews can
	;;^UTILITY(U,$J,"OPT",4135,1,6,0)
	;;=be entered, Insurance Reviews can be entered an reports printed.  
	;;^UTILITY(U,$J,"OPT",4135,1,7,0)
	;;=Supervisory functions will be available to those who hold the 
	;;^UTILITY(U,$J,"OPT",4135,1,8,0)
	;;=supervisory keys.
	;;^UTILITY(U,$J,"OPT",4135,10,0)
	;;=^19.01PI^13^9
	;;^UTILITY(U,$J,"OPT",4135,10,1,0)
	;;=4136^SP^30
	;;^UTILITY(U,$J,"OPT",4135,10,1,"^")
	;;=IBT OUTPUT ONE ADMISSION SHEET

IBINI0DV
IBINI0DV	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4135,10,2,0)
	;;=4137^CT^20
	;;^UTILITY(U,$J,"OPT",4135,10,2,"^")
	;;=IBT EDIT TRACKING ENTRY
	;;^UTILITY(U,$J,"OPT",4135,10,4,0)
	;;=4138^HR^99
	;;^UTILITY(U,$J,"OPT",4135,10,4,"^")
	;;=IBT EDIT REVIEWS
	;;^UTILITY(U,$J,"OPT",4135,10,6,0)
	;;=4139^IR^50
	;;^UTILITY(U,$J,"OPT",4135,10,6,"^")
	;;=IBT EDIT COMMUNICATIONS
	;;^UTILITY(U,$J,"OPT",4135,10,7,0)
	;;=4140^AD^70
	;;^UTILITY(U,$J,"OPT",4135,10,7,"^")
	;;=IBT EDIT APPEALS/DENIALS
	;;^UTILITY(U,$J,"OPT",4135,10,9,0)
	;;=4141^RM^96
	;;^UTILITY(U,$J,"OPT",4135,10,9,"^")
	;;=IBT OUTPUT MENU
	;;^UTILITY(U,$J,"OPT",4135,10,10,0)
	;;=4142^SM^93
	;;^UTILITY(U,$J,"OPT",4135,10,10,"^")
	;;=IBT SUPERVISORS MENU
	;;^UTILITY(U,$J,"OPT",4135,10,11,0)
	;;=4143^IC^90
	;;^UTILITY(U,$J,"OPT",4135,10,11,"^")
	;;=IBT OUTPUT CLAIM INQUIRY
	;;^UTILITY(U,$J,"OPT",4135,10,13,0)
	;;=4145^PR^10
	;;^UTILITY(U,$J,"OPT",4135,10,13,"^")
	;;=IBT EDIT REVIEWS TO DO
	;;^UTILITY(U,$J,"OPT",4135,99)
	;;=55825,69299
	;;^UTILITY(U,$J,"OPT",4135,"U")
	;;=CLAIMS TRACKING MENU (COMBINED
	;;^UTILITY(U,$J,"OPT",4136,0)
	;;=IBT OUTPUT ONE ADMISSION SHEET^Single Patient Admission Sheet^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4136,1,0)
	;;=^^3^3^2930627^^
	;;^UTILITY(U,$J,"OPT",4136,1,1,0)
	;;=This option will print an admission sheet for one patient one
	;;^UTILITY(U,$J,"OPT",4136,1,2,0)
	;;=admission at a time.  It can be used to reprint an admission sheet
	;;^UTILITY(U,$J,"OPT",4136,1,3,0)
	;;=if needed.
	;;^UTILITY(U,$J,"OPT",4136,25)
	;;=IBTOAT
	;;^UTILITY(U,$J,"OPT",4136,"U")
	;;=SINGLE PATIENT ADMISSION SHEET
	;;^UTILITY(U,$J,"OPT",4137,0)
	;;=IBT EDIT TRACKING ENTRY^Claims Tracking Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4137,1,0)
	;;=^^3^3^2930907^^
	;;^UTILITY(U,$J,"OPT",4137,1,1,0)
	;;=This option allows enter/editing of Claims Tracking Entries.  Data
	;;^UTILITY(U,$J,"OPT",4137,1,2,0)
	;;=associated with a CT entry may affect if or how it is billed and the
	;;^UTILITY(U,$J,"OPT",4137,1,3,0)
	;;=types of reviews that may be or must be entered.
	;;^UTILITY(U,$J,"OPT",4137,25)
	;;=IBTRE
	;;^UTILITY(U,$J,"OPT",4137,"U")
	;;=CLAIMS TRACKING EDIT
	;;^UTILITY(U,$J,"OPT",4138,0)
	;;=IBT EDIT REVIEWS^Hospital Reviews^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4138,1,0)
	;;=^^3^3^2930819^^^
	;;^UTILITY(U,$J,"OPT",4138,1,1,0)
	;;=This option allows viewing and editing of UR reviews of claims
	;;^UTILITY(U,$J,"OPT",4138,1,2,0)
	;;=tracking entries.  This includes pre-admission/pre-certification
	;;^UTILITY(U,$J,"OPT",4138,1,3,0)
	;;=reviews, continuing stay reviews, and discharge reviews.
	;;^UTILITY(U,$J,"OPT",4138,25)
	;;=IBTRV
	;;^UTILITY(U,$J,"OPT",4138,"U")
	;;=HOSPITAL REVIEWS
	;;^UTILITY(U,$J,"OPT",4139,0)
	;;=IBT EDIT COMMUNICATIONS^Insurance Review Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4139,1,0)
	;;=^^2^2^2940307^^^
	;;^UTILITY(U,$J,"OPT",4139,1,1,0)
	;;=This option allows enter/editing of MCCR/UR related communications that
	;;^UTILITY(U,$J,"OPT",4139,1,2,0)
	;;=may or may not be associated with a claims tracking entry.
	;;^UTILITY(U,$J,"OPT",4139,25)
	;;=IBTRC
	;;^UTILITY(U,$J,"OPT",4139,"U")
	;;=INSURANCE REVIEW EDIT
	;;^UTILITY(U,$J,"OPT",4140,0)
	;;=IBT EDIT APPEALS/DENIALS^Appeal/Denial Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4140,1,0)
	;;=^^2^2^2930627^
	;;^UTILITY(U,$J,"OPT",4140,1,1,0)
	;;=This option allows for enter/editing appeals and denials and associated
	;;^UTILITY(U,$J,"OPT",4140,1,2,0)
	;;=communications.
	;;^UTILITY(U,$J,"OPT",4140,25)
	;;=IBTRD
	;;^UTILITY(U,$J,"OPT",4140,"U")
	;;=APPEAL/DENIAL EDIT

IBINI0DW
IBINI0DW	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4141,0)
	;;=IBT OUTPUT MENU^Reports Menu (Claims Tracking)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4141,1,0)
	;;=^^1^1^2940121^^^
	;;^UTILITY(U,$J,"OPT",4141,1,1,0)
	;;=This is the main reports menu for the Claims tracking module.
	;;^UTILITY(U,$J,"OPT",4141,10,0)
	;;=^19.01PI^11^11
	;;^UTILITY(U,$J,"OPT",4141,10,1,0)
	;;=4143^IC
	;;^UTILITY(U,$J,"OPT",4141,10,1,"^")
	;;=IBT OUTPUT CLAIM INQUIRY
	;;^UTILITY(U,$J,"OPT",4141,10,2,0)
	;;=4136^SP
	;;^UTILITY(U,$J,"OPT",4141,10,2,"^")
	;;=IBT OUTPUT ONE ADMISSION SHEET
	;;^UTILITY(U,$J,"OPT",4141,10,3,0)
	;;=4146^DD
	;;^UTILITY(U,$J,"OPT",4141,10,3,"^")
	;;=IBT OUTPUT DENIED DAYS REPORT
	;;^UTILITY(U,$J,"OPT",4141,10,4,0)
	;;=4147^AC
	;;^UTILITY(U,$J,"OPT",4141,10,4,"^")
	;;=IBT OUTPUT UR ACTIVITY REPORT
	;;^UTILITY(U,$J,"OPT",4141,10,5,0)
	;;=4148^SA
	;;^UTILITY(U,$J,"OPT",4141,10,5,"^")
	;;=IBT OUTPUT SCHED ADM W/INS
	;;^UTILITY(U,$J,"OPT",4141,10,6,0)
	;;=4149^UA
	;;^UTILITY(U,$J,"OPT",4141,10,6,"^")
	;;=IBT OUTPUT UNSCHE ADM W/INS
	;;^UTILITY(U,$J,"OPT",4141,10,7,0)
	;;=4150^MS
	;;^UTILITY(U,$J,"OPT",4141,10,7,"^")
	;;=IBT OUTPUT MCCR/UR SUMMARY
	;;^UTILITY(U,$J,"OPT",4141,10,8,0)
	;;=4151^TODO
	;;^UTILITY(U,$J,"OPT",4141,10,8,"^")
	;;=IBT OUTPUT PENDING ITEMS
	;;^UTILITY(U,$J,"OPT",4141,10,9,0)
	;;=4186^RW
	;;^UTILITY(U,$J,"OPT",4141,10,9,"^")
	;;=IBT OUTPUT REVIEW WORKSHEET
	;;^UTILITY(U,$J,"OPT",4141,10,10,0)
	;;=4185^BI
	;;^UTILITY(U,$J,"OPT",4141,10,10,"^")
	;;=IBT OUTPUT BILLING SHEET
	;;^UTILITY(U,$J,"OPT",4141,10,11,0)
	;;=4512^RC
	;;^UTILITY(U,$J,"OPT",4141,10,11,"^")
	;;=IBT OUTPUT LIST VISITS
	;;^UTILITY(U,$J,"OPT",4141,99)
	;;=55906,37057
	;;^UTILITY(U,$J,"OPT",4141,"U")
	;;=REPORTS MENU (CLAIMS TRACKING)
	;;^UTILITY(U,$J,"OPT",4142,0)
	;;=IBT SUPERVISORS MENU^Supervisors Menu (Claims Tracking)^^M^^IB CLAIMS SUPERVISOR^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4142,1,0)
	;;=^^3^3^2930627^
	;;^UTILITY(U,$J,"OPT",4142,1,1,0)
	;;=This option contains the supervisory options for the Claims tracking
	;;^UTILITY(U,$J,"OPT",4142,1,2,0)
	;;=module.  Site parameters may be edited.  Table files may be
	;;^UTILITY(U,$J,"OPT",4142,1,3,0)
	;;=maintained.  Background jobs may be repeated or re-queued.
	;;^UTILITY(U,$J,"OPT",4142,10,0)
	;;=^19.01PI^3^3
	;;^UTILITY(U,$J,"OPT",4142,10,1,0)
	;;=4144^PE
	;;^UTILITY(U,$J,"OPT",4142,10,1,"^")
	;;=IBT EDIT TRACKING PARAMETERS
	;;^UTILITY(U,$J,"OPT",4142,10,2,0)
	;;=4157^RX
	;;^UTILITY(U,$J,"OPT",4142,10,2,"^")
	;;=IBT SUP MANUALLY QUE RX FILLS
	;;^UTILITY(U,$J,"OPT",4142,10,3,0)
	;;=4158^OE
	;;^UTILITY(U,$J,"OPT",4142,10,3,"^")
	;;=IBT SUP MANUALLY QUE ENCTRS
	;;^UTILITY(U,$J,"OPT",4142,99)
	;;=55769,49846
	;;^UTILITY(U,$J,"OPT",4142,"U")
	;;=SUPERVISORS MENU (CLAIMS TRACK
	;;^UTILITY(U,$J,"OPT",4143,0)
	;;=IBT OUTPUT CLAIM INQUIRY^Inquire to Claims Tracking^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4143,1,0)
	;;=^^3^3^2940207^^^
	;;^UTILITY(U,$J,"OPT",4143,1,1,0)
	;;=This option allows viewing or printing a detailed inquiry to any claims
	;;^UTILITY(U,$J,"OPT",4143,1,2,0)
	;;=tracking entry.  This includes showing all associated reviews and
	;;^UTILITY(U,$J,"OPT",4143,1,3,0)
	;;=communications.
	;;^UTILITY(U,$J,"OPT",4143,25)
	;;=IBTOTR
	;;^UTILITY(U,$J,"OPT",4143,"U")
	;;=INQUIRE TO CLAIMS TRACKING
	;;^UTILITY(U,$J,"OPT",4144,0)
	;;=IBT EDIT TRACKING PARAMETERS^Claims Tracking Parameter Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4144,1,0)
	;;=^^2^2^2940207^^
	;;^UTILITY(U,$J,"OPT",4144,1,1,0)
	;;=This option allows editing MCCR site parameters that affect the

IBINI0DX
IBINI0DX	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4144,1,2,0)
	;;=Claims Tracking Module.
	;;^UTILITY(U,$J,"OPT",4144,25)
	;;=IBTRP
	;;^UTILITY(U,$J,"OPT",4144,"U")
	;;=CLAIMS TRACKING PARAMETER EDIT
	;;^UTILITY(U,$J,"OPT",4145,0)
	;;=IBT EDIT REVIEWS TO DO^Pending Reviews^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4145,1,0)
	;;=^^7^7^2940307^^^^
	;;^UTILITY(U,$J,"OPT",4145,1,1,0)
	;;=This option will list all reviews that have a next review date in the
	;;^UTILITY(U,$J,"OPT",4145,1,2,0)
	;;=past seven days.  All screens and actions necessary to complete the 
	;;^UTILITY(U,$J,"OPT",4145,1,3,0)
	;;=pending reviews are available from within this option.  You may also
	;;^UTILITY(U,$J,"OPT",4145,1,4,0)
	;;=select a different date range of pending reviews if desired.
	;;^UTILITY(U,$J,"OPT",4145,1,5,0)
	;;=Both Hospital and Insurance reviews can be accessed with this option.
	;;^UTILITY(U,$J,"OPT",4145,1,6,0)
	;;=Many pending reviews may have automatically been created by the computer 
	;;^UTILITY(U,$J,"OPT",4145,1,7,0)
	;;=when a patient is admitted.
	;;^UTILITY(U,$J,"OPT",4145,20)
	;;=S IBTRPRF=12 D ^IBTRPR K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4145,99)
	;;=55774,51555
	;;^UTILITY(U,$J,"OPT",4145,"U")
	;;=PENDING REVIEWS
	;;^UTILITY(U,$J,"OPT",4146,0)
	;;=IBT OUTPUT DENIED DAYS REPORT^Days Denied Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4146,1,0)
	;;=^^2^2^2931104^
	;;^UTILITY(U,$J,"OPT",4146,1,1,0)
	;;=This option prints a summary of days denied by insurance company for a
	;;^UTILITY(U,$J,"OPT",4146,1,2,0)
	;;=user specified date range.  A summary report by service is also generated.
	;;^UTILITY(U,$J,"OPT",4146,25)
	;;=IBTODD
	;;^UTILITY(U,$J,"OPT",4146,"U")
	;;=DAYS DENIED REPORT
	;;^UTILITY(U,$J,"OPT",4147,0)
	;;=IBT OUTPUT UR ACTIVITY REPORT^UR Activity Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4147,1,0)
	;;=^^2^2^2931110^^
	;;^UTILITY(U,$J,"OPT",4147,1,1,0)
	;;=This option prints by clinical service, information about the mccr/ur
	;;^UTILITY(U,$J,"OPT",4147,1,2,0)
	;;=activity.
	;;^UTILITY(U,$J,"OPT",4147,25)
	;;=IBTOUR
	;;^UTILITY(U,$J,"OPT",4147,"U")
	;;=UR ACTIVITY REPORT
	;;^UTILITY(U,$J,"OPT",4148,0)
	;;=IBT OUTPUT SCHED ADM W/INS^Scheduled Admissions w/Insurance^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4148,1,0)
	;;=^^4^4^2940307^^^
	;;^UTILITY(U,$J,"OPT",4148,1,1,0)
	;;=This option will print a list of Admission that are scheduled but
	;;^UTILITY(U,$J,"OPT",4148,1,2,0)
	;;=not admitted and/or scheduled admissions that have been admitted.
	;;^UTILITY(U,$J,"OPT",4148,1,3,0)
	;;=All admissions must be for patients who were insured on their admission
	;;^UTILITY(U,$J,"OPT",4148,1,4,0)
	;;=date.
	;;^UTILITY(U,$J,"OPT",4148,25)
	;;=IBTOSA
	;;^UTILITY(U,$J,"OPT",4148,"U")
	;;=SCHEDULED ADMISSIONS W/INSURAN
	;;^UTILITY(U,$J,"OPT",4149,0)
	;;=IBT OUTPUT UNSCHE ADM W/INS^Unscheduled Admissions w/Insurance^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4149,1,0)
	;;=^^2^2^2940207^^
	;;^UTILITY(U,$J,"OPT",4149,1,1,0)
	;;=This option will print a list of patients who were insured on their
	;;^UTILITY(U,$J,"OPT",4149,1,2,0)
	;;=admission date but were not scheduled admissions.
	;;^UTILITY(U,$J,"OPT",4149,25)
	;;=IBTOUA
	;;^UTILITY(U,$J,"OPT",4149,"U")
	;;=UNSCHEDULED ADMISSIONS W/INSUR
	;;^UTILITY(U,$J,"OPT",4150,0)
	;;=IBT OUTPUT MCCR/UR SUMMARY^MCCR/UR Summary Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4150,1,0)
	;;=^^6^6^2940214^^^
	;;^UTILITY(U,$J,"OPT",4150,1,1,0)
	;;=This report can be run for either admissions or discharges for a

IBINI0DY
IBINI0DY	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4150,1,2,0)
	;;=date range.  It will summarize totals by admission or discharge, cases
	;;^UTILITY(U,$J,"OPT",4150,1,3,0)
	;;=with insurance, billable inpatient cases, cases requiring reviews,
	;;^UTILITY(U,$J,"OPT",4150,1,4,0)
	;;=days approved, amount collectible approved for billing, number of days
	;;^UTILITY(U,$J,"OPT",4150,1,5,0)
	;;=denied, amount denied, and penalty dollars.
	;;^UTILITY(U,$J,"OPT",4150,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4150,10,0)
	;;=^19.01PI^0^0
	;;^UTILITY(U,$J,"OPT",4150,25)
	;;=IBTOSUM
	;;^UTILITY(U,$J,"OPT",4150,"U")
	;;=MCCR/UR SUMMARY REPORT
	;;^UTILITY(U,$J,"OPT",4151,0)
	;;=IBT OUTPUT PENDING ITEMS^Pending Work Report^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4151,1,0)
	;;=^^3^3^2931110^
	;;^UTILITY(U,$J,"OPT",4151,1,1,0)
	;;=This option will print a sorted list of Pending Reviews.  It is  
	;;^UTILITY(U,$J,"OPT",4151,1,2,0)
	;;=different from printing from the Pending Reviews option in that it
	;;^UTILITY(U,$J,"OPT",4151,1,3,0)
	;;=will limit the entries to just those you care to see.
	;;^UTILITY(U,$J,"OPT",4151,25)
	;;=IBTOPW
	;;^UTILITY(U,$J,"OPT",4151,"U")
	;;=PENDING WORK REPORT
	;;^UTILITY(U,$J,"OPT",4152,0)
	;;=IBT MANAGER MENU^Claims Tracking Master Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4152,1,0)
	;;=^^2^2^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4152,1,1,0)
	;;=This is the main claims tracking menu.  It contains the various
	;;^UTILITY(U,$J,"OPT",4152,1,2,0)
	;;=user menus that can be assigned directly to UR or MCCR/UR personnel.
	;;^UTILITY(U,$J,"OPT",4152,10,0)
	;;=^19.01PI^4^4
	;;^UTILITY(U,$J,"OPT",4152,10,1,0)
	;;=4135^CT
	;;^UTILITY(U,$J,"OPT",4152,10,1,"^")
	;;=IBT USER COMBINED MCCR/UR MENU
	;;^UTILITY(U,$J,"OPT",4152,10,2,0)
	;;=4153^HR
	;;^UTILITY(U,$J,"OPT",4152,10,2,"^")
	;;=IBT USER MENU (HR)
	;;^UTILITY(U,$J,"OPT",4152,10,3,0)
	;;=4154^IR
	;;^UTILITY(U,$J,"OPT",4152,10,3,"^")
	;;=IBT USER MENU (IR)
	;;^UTILITY(U,$J,"OPT",4152,10,4,0)
	;;=4182^BI
	;;^UTILITY(U,$J,"OPT",4152,10,4,"^")
	;;=IBT USER MENU (BI)
	;;^UTILITY(U,$J,"OPT",4152,99)
	;;=55936,47661
	;;^UTILITY(U,$J,"OPT",4152,"U")
	;;=CLAIMS TRACKING MASTER MENU
	;;^UTILITY(U,$J,"OPT",4153,0)
	;;=IBT USER MENU (HR)^Claims Tracking Menu (Hospital Reviews)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4153,1,0)
	;;=^^7^7^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4153,1,1,0)
	;;=This is the main menu for UR personnel to enter Hospital Reviews into
	;;^UTILITY(U,$J,"OPT",4153,1,2,0)
	;;=the Claims Tracking Module.
	;;^UTILITY(U,$J,"OPT",4153,1,3,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4153,1,4,0)
	;;=From the menu the claims tracking module can be edited, UR Reviews can
	;;^UTILITY(U,$J,"OPT",4153,1,5,0)
	;;=be entered and reports printed.  
	;;^UTILITY(U,$J,"OPT",4153,1,6,0)
	;;=Supervisory functions will be available to those who hold the 
	;;^UTILITY(U,$J,"OPT",4153,1,7,0)
	;;=supervisory keys.
	;;^UTILITY(U,$J,"OPT",4153,10,0)
	;;=^19.01PI^9^7
	;;^UTILITY(U,$J,"OPT",4153,10,1,0)
	;;=4143^IC
	;;^UTILITY(U,$J,"OPT",4153,10,1,"^")
	;;=IBT OUTPUT CLAIM INQUIRY
	;;^UTILITY(U,$J,"OPT",4153,10,4,0)
	;;=4141^RM
	;;^UTILITY(U,$J,"OPT",4153,10,4,"^")
	;;=IBT OUTPUT MENU
	;;^UTILITY(U,$J,"OPT",4153,10,5,0)
	;;=4138^HR
	;;^UTILITY(U,$J,"OPT",4153,10,5,"^")
	;;=IBT EDIT REVIEWS
	;;^UTILITY(U,$J,"OPT",4153,10,6,0)
	;;=4136^SP
	;;^UTILITY(U,$J,"OPT",4153,10,6,"^")
	;;=IBT OUTPUT ONE ADMISSION SHEET
	;;^UTILITY(U,$J,"OPT",4153,10,7,0)
	;;=4142^SM
	;;^UTILITY(U,$J,"OPT",4153,10,7,"^")
	;;=IBT SUPERVISORS MENU
	;;^UTILITY(U,$J,"OPT",4153,10,8,0)
	;;=4155^PR^10

IBINI0DZ
IBINI0DZ	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4153,10,8,"^")
	;;=IBT EDIT HR REVIEWS TO DO
	;;^UTILITY(U,$J,"OPT",4153,10,9,0)
	;;=4168^CT
	;;^UTILITY(U,$J,"OPT",4153,10,9,"^")
	;;=IBT EDIT HR TRACKING ENTRY
	;;^UTILITY(U,$J,"OPT",4153,99)
	;;=55825,69301
	;;^UTILITY(U,$J,"OPT",4153,"U")
	;;=CLAIMS TRACKING MENU (HOSPITAL
	;;^UTILITY(U,$J,"OPT",4154,0)
	;;=IBT USER MENU (IR)^Claims Tracking Menu (Insurance Reviews)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4154,1,0)
	;;=^^7^7^2930826^^^
	;;^UTILITY(U,$J,"OPT",4154,1,1,0)
	;;=This is the main menu for MCCR/UR persons who do MCCR/UR Reviews 
	;;^UTILITY(U,$J,"OPT",4154,1,2,0)
	;;=(Insurance Reviews).
	;;^UTILITY(U,$J,"OPT",4154,1,3,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4154,1,4,0)
	;;=From the menu the claims tracking module can be edited, 
	;;^UTILITY(U,$J,"OPT",4154,1,5,0)
	;;=Insurance Reviews can be entered and reports printed.  
	;;^UTILITY(U,$J,"OPT",4154,1,6,0)
	;;=Supervisory functions will be available to those who hold the 
	;;^UTILITY(U,$J,"OPT",4154,1,7,0)
	;;=supervisory keys.
	;;^UTILITY(U,$J,"OPT",4154,10,0)
	;;=^19.01PI^12^8
	;;^UTILITY(U,$J,"OPT",4154,10,1,0)
	;;=4140^AD
	;;^UTILITY(U,$J,"OPT",4154,10,1,"^")
	;;=IBT EDIT APPEALS/DENIALS
	;;^UTILITY(U,$J,"OPT",4154,10,2,0)
	;;=4139^IR
	;;^UTILITY(U,$J,"OPT",4154,10,2,"^")
	;;=IBT EDIT COMMUNICATIONS
	;;^UTILITY(U,$J,"OPT",4154,10,4,0)
	;;=4143^IC
	;;^UTILITY(U,$J,"OPT",4154,10,4,"^")
	;;=IBT OUTPUT CLAIM INQUIRY
	;;^UTILITY(U,$J,"OPT",4154,10,8,0)
	;;=4141^RM
	;;^UTILITY(U,$J,"OPT",4154,10,8,"^")
	;;=IBT OUTPUT MENU
	;;^UTILITY(U,$J,"OPT",4154,10,9,0)
	;;=4142^SM
	;;^UTILITY(U,$J,"OPT",4154,10,9,"^")
	;;=IBT SUPERVISORS MENU
	;;^UTILITY(U,$J,"OPT",4154,10,10,0)
	;;=4136^SP
	;;^UTILITY(U,$J,"OPT",4154,10,10,"^")
	;;=IBT OUTPUT ONE ADMISSION SHEET
	;;^UTILITY(U,$J,"OPT",4154,10,11,0)
	;;=4156^PR^10
	;;^UTILITY(U,$J,"OPT",4154,10,11,"^")
	;;=IBT EDIT IR REVIEWS TO DO
	;;^UTILITY(U,$J,"OPT",4154,10,12,0)
	;;=4167^CT
	;;^UTILITY(U,$J,"OPT",4154,10,12,"^")
	;;=IBT EDIT IR TRACKING ENTRY
	;;^UTILITY(U,$J,"OPT",4154,99)
	;;=55825,69301
	;;^UTILITY(U,$J,"OPT",4154,"U")
	;;=CLAIMS TRACKING MENU (INSURANC
	;;^UTILITY(U,$J,"OPT",4155,0)
	;;=IBT EDIT HR REVIEWS TO DO^Pending Reviews^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4155,1,0)
	;;=^^3^3^2940211^^^^
	;;^UTILITY(U,$J,"OPT",4155,1,1,0)
	;;=This option will create a list of pending work for Hospital UR
	;;^UTILITY(U,$J,"OPT",4155,1,2,0)
	;;=personnel who do QM reviews.  From this option most all screens and
	;;^UTILITY(U,$J,"OPT",4155,1,3,0)
	;;=options needed to do the daily input are available.
	;;^UTILITY(U,$J,"OPT",4155,20)
	;;=S IBTRPRF=1 D ^IBTRPR K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4155,"U")
	;;=PENDING REVIEWS
	;;^UTILITY(U,$J,"OPT",4156,0)
	;;=IBT EDIT IR REVIEWS TO DO^Pending Reviews^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4156,1,0)
	;;=^^3^3^2940211^^^^
	;;^UTILITY(U,$J,"OPT",4156,1,1,0)
	;;=This option will create a list of pending reviews that Insurance
	;;^UTILITY(U,$J,"OPT",4156,1,2,0)
	;;=Review personnel need to complete.  Most of the input screens and
	;;^UTILITY(U,$J,"OPT",4156,1,3,0)
	;;=options needed to do the daily work are available from this option.
	;;^UTILITY(U,$J,"OPT",4156,20)
	;;=S IBTRPRF=2 D ^IBTRPR K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4156,"U")
	;;=PENDING REVIEWS
	;;^UTILITY(U,$J,"OPT",4157,0)
	;;=IBT SUP MANUALLY QUE RX FILLS^Manually Add Rx Refills to Claims Tracking^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4157,1,0)
	;;=^^3^3^2940207^^^
	;;^UTILITY(U,$J,"OPT",4157,1,1,0)
	;;=This option can be used to manually add rx refills to Claims tracking.

IBINI0E0
IBINI0E0	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4157,1,2,0)
	;;=The option will automatically queue off a task to add refills and when 
	;;^UTILITY(U,$J,"OPT",4157,1,3,0)
	;;=complete send the requesting user a mail message.
	;;^UTILITY(U,$J,"OPT",4157,25)
	;;=EN^IBTRKR3
	;;^UTILITY(U,$J,"OPT",4157,"U")
	;;=MANUALLY ADD RX REFILLS TO CLA
	;;^UTILITY(U,$J,"OPT",4158,0)
	;;=IBT SUP MANUALLY QUE ENCTRS^Manually Add Opt. Encounters to Claims Tracking^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4158,1,0)
	;;=^^5^5^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4158,1,1,0)
	;;=This option allows the user to select a date range of outpatient encounters
	;;^UTILITY(U,$J,"OPT",4158,1,2,0)
	;;=and tries to add them to the Claims tracking module.
	;;^UTILITY(U,$J,"OPT",4158,1,3,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4158,1,4,0)
	;;=The option will automatically queue off a task to add encounters and when 
	;;^UTILITY(U,$J,"OPT",4158,1,5,0)
	;;=complete send the requesting user a mail message.
	;;^UTILITY(U,$J,"OPT",4158,25)
	;;=EN^IBTRKR4
	;;^UTILITY(U,$J,"OPT",4158,99)
	;;=55776,47507
	;;^UTILITY(U,$J,"OPT",4158,"U")
	;;=MANUALLY ADD OPT. ENCOUNTERS T
	;;^UTILITY(U,$J,"OPT",4160,0)
	;;=IBCN INSURANCE MGMT MENU^Patient Insurance Menu^^M^^^^^^^^INSURANCE MANAGEMENT
	;;^UTILITY(U,$J,"OPT",4160,1,0)
	;;=^^1^1^2931104^^^^
	;;^UTILITY(U,$J,"OPT",4160,1,1,0)
	;;=This is the main menu to edit, view, and print insurance information.
	;;^UTILITY(U,$J,"OPT",4160,10,0)
	;;=^19.01PI^7^6
	;;^UTILITY(U,$J,"OPT",4160,10,2,0)
	;;=4161^EI^3
	;;^UTILITY(U,$J,"OPT",4160,10,2,"^")
	;;=IBCN INSURANCE CO EDIT
	;;^UTILITY(U,$J,"OPT",4160,10,3,0)
	;;=4162^PI^1
	;;^UTILITY(U,$J,"OPT",4160,10,3,"^")
	;;=IBCN PATIENT INSURANCE
	;;^UTILITY(U,$J,"OPT",4160,10,4,0)
	;;=4163^VP^2
	;;^UTILITY(U,$J,"OPT",4160,10,4,"^")
	;;=IBCN VIEW PATIENT INSURANCE
	;;^UTILITY(U,$J,"OPT",4160,10,5,0)
	;;=4164^VI^4
	;;^UTILITY(U,$J,"OPT",4160,10,5,"^")
	;;=IBCN VIEW INSURANCE CO
	;;^UTILITY(U,$J,"OPT",4160,10,6,0)
	;;=4187^LC
	;;^UTILITY(U,$J,"OPT",4160,10,6,"^")
	;;=IBCN LIST INACTIVE INS W/PAT
	;;^UTILITY(U,$J,"OPT",4160,10,7,0)
	;;=4246^NV
	;;^UTILITY(U,$J,"OPT",4160,10,7,"^")
	;;=IBCN LIST NEW NOT VER
	;;^UTILITY(U,$J,"OPT",4160,99)
	;;=55892,49766
	;;^UTILITY(U,$J,"OPT",4160,"U")
	;;=PATIENT INSURANCE MENU
	;;^UTILITY(U,$J,"OPT",4161,0)
	;;=IBCN INSURANCE CO EDIT^Insurance Company Entry/Edit^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4161,1,0)
	;;=^^1^1^2930626^
	;;^UTILITY(U,$J,"OPT",4161,1,1,0)
	;;=This option allows edit insurance company information
	;;^UTILITY(U,$J,"OPT",4161,25)
	;;=IBCNSC
	;;^UTILITY(U,$J,"OPT",4161,99)
	;;=55696,36156
	;;^UTILITY(U,$J,"OPT",4161,"U")
	;;=INSURANCE COMPANY ENTRY/EDIT
	;;^UTILITY(U,$J,"OPT",4162,0)
	;;=IBCN PATIENT INSURANCE^Patient Insurance Info View/Edit^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4162,1,0)
	;;=^^1^1^2930813^^
	;;^UTILITY(U,$J,"OPT",4162,1,1,0)
	;;=This option allows viewing and editing of patient insurance information.
	;;^UTILITY(U,$J,"OPT",4162,25)
	;;=IBCNSM4
	;;^UTILITY(U,$J,"OPT",4162,"U")
	;;=PATIENT INSURANCE INFO VIEW/ED
	;;^UTILITY(U,$J,"OPT",4163,0)
	;;=IBCN VIEW PATIENT INSURANCE^View Patient Insurance^^R^^^^^^^^INSURANCE MANAGEMENT^^1^1
	;;^UTILITY(U,$J,"OPT",4163,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"OPT",4163,1,1,0)
	;;=This option allows viewing of patient insurance information.
	;;^UTILITY(U,$J,"OPT",4163,15)
	;;=K IBVIEW
	;;^UTILITY(U,$J,"OPT",4163,20)
	;;=S IBVIEW=1
	;;^UTILITY(U,$J,"OPT",4163,25)
	;;=IBCNSM4
	;;^UTILITY(U,$J,"OPT",4163,99)
	;;=55742,49865
	;;^UTILITY(U,$J,"OPT",4163,"U")
	;;=VIEW PATIENT INSURANCE

IBINI0E1
IBINI0E1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4164,0)
	;;=IBCN VIEW INSURANCE CO^View Insurance Company^^R^^^^^^^^INSURANCE MANAGEMENT^^1^1
	;;^UTILITY(U,$J,"OPT",4164,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"OPT",4164,1,1,0)
	;;=This option allows viewing of insurance company information.
	;;^UTILITY(U,$J,"OPT",4164,15)
	;;=K IBVIEW
	;;^UTILITY(U,$J,"OPT",4164,20)
	;;=S IBVIEW=1
	;;^UTILITY(U,$J,"OPT",4164,25)
	;;=IBCNSC
	;;^UTILITY(U,$J,"OPT",4164,99)
	;;=55742,46974
	;;^UTILITY(U,$J,"OPT",4164,"U")
	;;=VIEW INSURANCE COMPANY
	;;^UTILITY(U,$J,"OPT",4165,0)
	;;=IBCN VIEW INSURANCE DATA^View Insurance Management Menu^^M^^^^^^^^INSURANCE MANAGEMENT
	;;^UTILITY(U,$J,"OPT",4165,1,0)
	;;=^^2^2^2940311^^^
	;;^UTILITY(U,$J,"OPT",4165,1,1,0)
	;;=This menu contains the view option to Patient Insurance and Insurance
	;;^UTILITY(U,$J,"OPT",4165,1,2,0)
	;;=Company information.
	;;^UTILITY(U,$J,"OPT",4165,10,0)
	;;=^19.01PI^2^2
	;;^UTILITY(U,$J,"OPT",4165,10,1,0)
	;;=4164^IC
	;;^UTILITY(U,$J,"OPT",4165,10,1,"^")
	;;=IBCN VIEW INSURANCE CO
	;;^UTILITY(U,$J,"OPT",4165,10,2,0)
	;;=4163^PI
	;;^UTILITY(U,$J,"OPT",4165,10,2,"^")
	;;=IBCN VIEW PATIENT INSURANCE
	;;^UTILITY(U,$J,"OPT",4165,99)
	;;=55825,69300
	;;^UTILITY(U,$J,"OPT",4165,"U")
	;;=VIEW INSURANCE MANAGEMENT MENU
	;;^UTILITY(U,$J,"OPT",4166,0)
	;;=IB OUTPUT AUTO BILLER^Print Auto Biller Results^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4166,1,0)
	;;=^^1^1^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4166,1,1,0)
	;;=Prints the list of bills and comments resulting from the Automated Biller.
	;;^UTILITY(U,$J,"OPT",4166,25)
	;;=PRINT^IBCDE
	;;^UTILITY(U,$J,"OPT",4166,"U")
	;;=PRINT AUTO BILLER RESULTS
	;;^UTILITY(U,$J,"OPT",4167,0)
	;;=IBT EDIT IR TRACKING ENTRY^Claims Tracking Edit^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4167,1,0)
	;;=^^3^3^2930627^
	;;^UTILITY(U,$J,"OPT",4167,1,1,0)
	;;=This option allows enter/editing of Claims Tracking Entries.  Data
	;;^UTILITY(U,$J,"OPT",4167,1,2,0)
	;;=associated with a CT entry may affect if or how it is billed and the
	;;^UTILITY(U,$J,"OPT",4167,1,3,0)
	;;=types of reviews that may be or must be entered.
	;;^UTILITY(U,$J,"OPT",4167,20)
	;;=S IBTRPRF=2 D ^IBTRE K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4167,"U")
	;;=CLAIMS TRACKING EDIT
	;;^UTILITY(U,$J,"OPT",4168,0)
	;;=IBT EDIT HR TRACKING ENTRY^Claims Tracking Edit^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4168,1,0)
	;;=^^3^3^2930907^^
	;;^UTILITY(U,$J,"OPT",4168,1,1,0)
	;;=This option allows enter/editing of Claims Tracking Entries.  Data
	;;^UTILITY(U,$J,"OPT",4168,1,2,0)
	;;=associated with a CT entry may affect if or how it is billed and the
	;;^UTILITY(U,$J,"OPT",4168,1,3,0)
	;;=types of reviews that may be or must be entered.
	;;^UTILITY(U,$J,"OPT",4168,20)
	;;=S IBTRPRF=1 D ^IBTRE K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4168,"U")
	;;=CLAIMS TRACKING EDIT
	;;^UTILITY(U,$J,"OPT",4169,0)
	;;=IB AUTO BILLER PARAMS^Enter/Edit Automated Billing Parameters^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4169,1,0)
	;;=^^1^1^2930907^
	;;^UTILITY(U,$J,"OPT",4169,1,1,0)
	;;=Enter and edit the parameters controlling Automated Billing.
	;;^UTILITY(U,$J,"OPT",4169,25)
	;;=EDIT^IBCDE
	;;^UTILITY(U,$J,"OPT",4169,"U")
	;;=ENTER/EDIT AUTOMATED BILLING P
	;;^UTILITY(U,$J,"OPT",4170,0)
	;;=IB OUTPUT RANK CARRIERS^Rank Insurance Carriers By Amount Billed^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4170,1,0)
	;;=^^14^14^2930908^^^^
	;;^UTILITY(U,$J,"OPT",4170,1,1,0)
	;;=This option is used to generate a listing of insurance carriers ranked
	;;^UTILITY(U,$J,"OPT",4170,1,2,0)
	;;=by the total amount billed.  The user may specify a date range from

IBINI0E2
IBINI0E2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4170,1,3,0)
	;;=which bills should be selected, as well as the number of carriers to
	;;^UTILITY(U,$J,"OPT",4170,1,4,0)
	;;=be ranked.
	;;^UTILITY(U,$J,"OPT",4170,1,5,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4170,1,6,0)
	;;=This output must be transmitted to the MCCR Program Office after the
	;;^UTILITY(U,$J,"OPT",4170,1,7,0)
	;;=beginning of the fiscal year.  The selected date range should be the
	;;^UTILITY(U,$J,"OPT",4170,1,8,0)
	;;=entire fiscal year (i.e., 10/1/92 through 9/30/93) and 30 carriers
	;;^UTILITY(U,$J,"OPT",4170,1,9,0)
	;;=should be ranked.  You should first run the report without transmitting
	;;^UTILITY(U,$J,"OPT",4170,1,10,0)
	;;=in order to first review the results.  When the report is being run
	;;^UTILITY(U,$J,"OPT",4170,1,11,0)
	;;=in the Production account, the user will always have the opportunity
	;;^UTILITY(U,$J,"OPT",4170,1,12,0)
	;;=to transmit the report centrally.  The central mailgroup is
	;;^UTILITY(U,$J,"OPT",4170,1,13,0)
	;;=G.MCCR DATA@FORUM.VA.GOV, which is stored as a parameter in field
	;;^UTILITY(U,$J,"OPT",4170,1,14,0)
	;;=#4.05 in the IB SITE PARAMETERS (#350.9) file.
	;;^UTILITY(U,$J,"OPT",4170,25)
	;;=IBCORC
	;;^UTILITY(U,$J,"OPT",4170,"U")
	;;=RANK INSURANCE CARRIERS BY AMO
	;;^UTILITY(U,$J,"OPT",4171,0)
	;;=IB CLEAN AUTO BILLER LIST^Delete Auto Biller Results^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4171,1,0)
	;;=^^1^1^2930908^
	;;^UTILITY(U,$J,"OPT",4171,1,1,0)
	;;=Deletes all entries from the auto biller results list before a certain date.
	;;^UTILITY(U,$J,"OPT",4171,25)
	;;=DELDT^IBCDE
	;;^UTILITY(U,$J,"OPT",4171,"U")
	;;=DELETE AUTO BILLER RESULTS
	;;^UTILITY(U,$J,"OPT",4178,0)
	;;=IBDF EDIT TOOL KIT^Edit Tool Kit^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4178,1,0)
	;;=^^3^3^2930924^^
	;;^UTILITY(U,$J,"OPT",4178,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4178,1,2,0)
	;;=Menu containing the options that allow the user to edit forms and blocks
	;;^UTILITY(U,$J,"OPT",4178,1,3,0)
	;;=contained in the tool kit.
	;;^UTILITY(U,$J,"OPT",4178,10,0)
	;;=^19.01PI^2^2
	;;^UTILITY(U,$J,"OPT",4178,10,1,0)
	;;=4108^EF
	;;^UTILITY(U,$J,"OPT",4178,10,1,"^")
	;;=IBDF EDIT TOOL KIT FORMS
	;;^UTILITY(U,$J,"OPT",4178,10,2,0)
	;;=4109^EB
	;;^UTILITY(U,$J,"OPT",4178,10,2,"^")
	;;=IBDF EDIT TOOL KIT BLOCKS
	;;^UTILITY(U,$J,"OPT",4178,99)
	;;=55852,53996
	;;^UTILITY(U,$J,"OPT",4178,"U")
	;;=EDIT TOOL KIT
	;;^UTILITY(U,$J,"OPT",4179,0)
	;;=IBDF PRINT OPTIONS^Print Options^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4179,1,0)
	;;=^^2^2^2930924^
	;;^UTILITY(U,$J,"OPT",4179,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4179,1,2,0)
	;;=Contains the options for printing encounter forms.
	;;^UTILITY(U,$J,"OPT",4179,10,0)
	;;=^19.01PI^3^3
	;;^UTILITY(U,$J,"OPT",4179,10,1,0)
	;;=4095^PF^1
	;;^UTILITY(U,$J,"OPT",4179,10,1,"^")
	;;=IBDF PRINT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4179,10,2,0)
	;;=4098^PD^2
	;;^UTILITY(U,$J,"OPT",4179,10,2,"^")
	;;=IBDF PRNT FORM W/DATA NO APPT.
	;;^UTILITY(U,$J,"OPT",4179,10,3,0)
	;;=4096^PB^3
	;;^UTILITY(U,$J,"OPT",4179,10,3,"^")
	;;=IBDF PRINT BLNK ENCOUNTER FORM
	;;^UTILITY(U,$J,"OPT",4179,99)
	;;=55852,54008
	;;^UTILITY(U,$J,"OPT",4179,"U")
	;;=PRINT OPTIONS
	;;^UTILITY(U,$J,"OPT",4180,0)
	;;=IBDF COPY CPTS TO FORM^Copy CPT Check-off Sheet to Encounter Form^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4180,1,0)
	;;=^^3^3^2930930^
	;;^UTILITY(U,$J,"OPT",4180,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4180,1,2,0)
	;;=Allows the user to select a CPT Check-off Sheet and Encounter Form. The
	;;^UTILITY(U,$J,"OPT",4180,1,3,0)
	;;=Check-off Sheet's CPT codes are then copied to the Encounter Form.

IBINI0E3
IBINI0E3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4180,25)
	;;=IBDF17
	;;^UTILITY(U,$J,"OPT",4180,"U")
	;;=COPY CPT CHECK-OFF SHEET TO EN
	;;^UTILITY(U,$J,"OPT",4181,0)
	;;=IBDF EDIT ENCOUNTER FORMS^Edit Encounter Forms^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4181,1,0)
	;;=^^2^2^2931001^^^
	;;^UTILITY(U,$J,"OPT",4181,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4181,1,2,0)
	;;=Contains the options that involve editing encounter forms.
	;;^UTILITY(U,$J,"OPT",4181,10,0)
	;;=^19.01PI^3^3
	;;^UTILITY(U,$J,"OPT",4181,10,1,0)
	;;=4094^ED^1
	;;^UTILITY(U,$J,"OPT",4181,10,1,"^")
	;;=IBDF CLINIC SETUP/EDIT FORMS
	;;^UTILITY(U,$J,"OPT",4181,10,2,0)
	;;=4180^CC^2
	;;^UTILITY(U,$J,"OPT",4181,10,2,"^")
	;;=IBDF COPY CPTS TO FORM
	;;^UTILITY(U,$J,"OPT",4181,10,3,0)
	;;=3383^CPT^3
	;;^UTILITY(U,$J,"OPT",4181,10,3,"^")
	;;=IB OUTPUT MOST COMMON OPT CPT
	;;^UTILITY(U,$J,"OPT",4181,99)
	;;=55852,53992
	;;^UTILITY(U,$J,"OPT",4181,"U")
	;;=EDIT ENCOUNTER FORMS
	;;^UTILITY(U,$J,"OPT",4182,0)
	;;=IBT USER MENU (BI)^Claims Tracking Menu for Billing^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4182,1,0)
	;;=^^6^6^2931027^
	;;^UTILITY(U,$J,"OPT",4182,1,1,0)
	;;=This menu contains the options in Claims tracking designed specifically
	;;^UTILITY(U,$J,"OPT",4182,1,2,0)
	;;=for billing clerks and billing supervisors who do not need to have any
	;;^UTILITY(U,$J,"OPT",4182,1,3,0)
	;;=Utilization Review Input.  Options include the ability to flag  care as
	;;^UTILITY(U,$J,"OPT",4182,1,4,0)
	;;=not billable, UR reports on billing case, and a claims tracking update
	;;^UTILITY(U,$J,"OPT",4182,1,5,0)
	;;=option.
	;;^UTILITY(U,$J,"OPT",4182,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4182,10,0)
	;;=^19.01IP^3^3
	;;^UTILITY(U,$J,"OPT",4182,10,1,0)
	;;=4183^RN
	;;^UTILITY(U,$J,"OPT",4182,10,1,"^")
	;;=IBT EDIT REASON NOT BILLABLE
	;;^UTILITY(U,$J,"OPT",4182,10,2,0)
	;;=4184^CT
	;;^UTILITY(U,$J,"OPT",4182,10,2,"^")
	;;=IBT EDIT BI TRACKING ENTRY
	;;^UTILITY(U,$J,"OPT",4182,10,3,0)
	;;=4185^PS
	;;^UTILITY(U,$J,"OPT",4182,10,3,"^")
	;;=IBT OUTPUT BILLING SHEET
	;;^UTILITY(U,$J,"OPT",4182,99)
	;;=55917,43997
	;;^UTILITY(U,$J,"OPT",4182,"U")
	;;=CLAIMS TRACKING MENU FOR BILLI
	;;^UTILITY(U,$J,"OPT",4183,0)
	;;=IBT EDIT REASON NOT BILLABLE^Assign Reason Not Billable^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4183,1,0)
	;;=^^3^3^2931027^^
	;;^UTILITY(U,$J,"OPT",4183,1,1,0)
	;;=This option allows entry of a reason not billable.  Entry of a reason 
	;;^UTILITY(U,$J,"OPT",4183,1,2,0)
	;;=will automatically be printed on the Patients with Insurance Reports
	;;^UTILITY(U,$J,"OPT",4183,1,3,0)
	;;=and will cause the annotated care not to be automatically billed.
	;;^UTILITY(U,$J,"OPT",4183,25)
	;;=IBTRED2
	;;^UTILITY(U,$J,"OPT",4183,"U")
	;;=ASSIGN REASON NOT BILLABLE
	;;^UTILITY(U,$J,"OPT",4184,0)
	;;=IBT EDIT BI TRACKING ENTRY^Claims Tracking Edit^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4184,1,0)
	;;=^^2^2^2931027^
	;;^UTILITY(U,$J,"OPT",4184,1,1,0)
	;;=This option allows entry and display of claims tracking information
	;;^UTILITY(U,$J,"OPT",4184,1,2,0)
	;;=that is needed to perform billing functions.
	;;^UTILITY(U,$J,"OPT",4184,20)
	;;=S IBTRPRF=3 D ^IBTRE K IBTRPRF
	;;^UTILITY(U,$J,"OPT",4184,"U")
	;;=CLAIMS TRACKING EDIT
	;;^UTILITY(U,$J,"OPT",4185,0)
	;;=IBT OUTPUT BILLING SHEET^Print CT Summary for Billing^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4185,1,0)
	;;=^^8^8^2940307^^^^
	;;^UTILITY(U,$J,"OPT",4185,1,1,0)
	;;=This option allows printing of information from Claims Tracking about
	;;^UTILITY(U,$J,"OPT",4185,1,2,0)
	;;=a specific visit.  Included on the report is Visit Information, Insurance

IBINI0E4
IBINI0E4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4185,1,3,0)
	;;=Information, Billing information (from Claims Tracking), Hospital Review
	;;^UTILITY(U,$J,"OPT",4185,1,4,0)
	;;=information and Insurance Review information.  Also included is provider,
	;;^UTILITY(U,$J,"OPT",4185,1,5,0)
	;;=diagnosis, and procedure information.
	;;^UTILITY(U,$J,"OPT",4185,1,6,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4185,1,7,0)
	;;=This report is the most complete summary of information about a single
	;;^UTILITY(U,$J,"OPT",4185,1,8,0)
	;;=visit available in Claims Tracking.
	;;^UTILITY(U,$J,"OPT",4185,25)
	;;=IBTOBI
	;;^UTILITY(U,$J,"OPT",4185,"U")
	;;=PRINT CT SUMMARY FOR BILLING
	;;^UTILITY(U,$J,"OPT",4186,0)
	;;=IBT OUTPUT REVIEW WORKSHEET^Review Worksheet Print^^R^^^^^^^^CLAIMS TRACKING (IB)
	;;^UTILITY(U,$J,"OPT",4186,1,0)
	;;=^^3^3^2931110^^
	;;^UTILITY(U,$J,"OPT",4186,1,1,0)
	;;=This option will print an Insurance Review worksheet for the selected 
	;;^UTILITY(U,$J,"OPT",4186,1,2,0)
	;;=patient.  If the patient is currently an inpatient, it will contain
	;;^UTILITY(U,$J,"OPT",4186,1,3,0)
	;;=the current inpatient information.  
	;;^UTILITY(U,$J,"OPT",4186,25)
	;;=RWM^IBTRC4
	;;^UTILITY(U,$J,"OPT",4186,"U")
	;;=REVIEW WORKSHEET PRINT
	;;^UTILITY(U,$J,"OPT",4187,0)
	;;=IBCN LIST INACTIVE INS W/PAT^List Inactive Ins. Co. Covering Patients^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4187,1,0)
	;;=^^5^5^2931104^
	;;^UTILITY(U,$J,"OPT",4187,1,1,0)
	;;=This option will list inactive insurance companies that have patients
	;;^UTILITY(U,$J,"OPT",4187,1,2,0)
	;;=listed as having this company as an insurer.  Run this report and then
	;;^UTILITY(U,$J,"OPT",4187,1,3,0)
	;;=use the Insurance Company Edit option and choose the (In)Activate Company
	;;^UTILITY(U,$J,"OPT",4187,1,4,0)
	;;=action to repoint those patients to a valid insurance company.
	;;^UTILITY(U,$J,"OPT",4187,1,5,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4187,25)
	;;=IBCOC
	;;^UTILITY(U,$J,"OPT",4187,99)
	;;=55825,41918
	;;^UTILITY(U,$J,"OPT",4187,"U")
	;;=LIST INACTIVE INS. CO. COVERIN
	;;^UTILITY(U,$J,"OPT",4244,0)
	;;=IB UB-92 TEST PATTERN PRINT^UB-92 Test Pattern Print^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4244,1,0)
	;;=^^1^1^2931110^
	;;^UTILITY(U,$J,"OPT",4244,1,1,0)
	;;=Prints a test UB-92.  Generally used to assist setting up a printer.
	;;^UTILITY(U,$J,"OPT",4244,25)
	;;=IBCF3TP
	;;^UTILITY(U,$J,"OPT",4244,"U")
	;;=UB-92 TEST PATTERN PRINT
	;;^UTILITY(U,$J,"OPT",4245,0)
	;;=IBDF MISCELLANEOUS CLEANUP^Miscellaneous Cleanup^^A^^^^^^^^INTEGRATED BILLING^^1
	;;^UTILITY(U,$J,"OPT",4245,1,0)
	;;=^^6^6^2940202^^
	;;^UTILITY(U,$J,"OPT",4245,1,1,0)
	;;=This option is intended to delete various data structures that are no longer
	;;^UTILITY(U,$J,"OPT",4245,1,2,0)
	;;=in use.  The Encounter Form Utilties were designed to automatically delete all
	;;^UTILITY(U,$J,"OPT",4245,1,3,0)
	;;=data structures when no longer needed, so this option is a backup that should
	;;^UTILITY(U,$J,"OPT",4245,1,4,0)
	;;=rarely be needed.  Currently, the option deletes the compiled version of forms
	;;^UTILITY(U,$J,"OPT",4245,1,5,0)
	;;=where the form itself no longer exists.  It also deletes blocks that do not
	;;^UTILITY(U,$J,"OPT",4245,1,6,0)
	;;=belong to any form.
	;;^UTILITY(U,$J,"OPT",4245,20)
	;;=D GARBAGE^IBDF19
	;;^UTILITY(U,$J,"OPT",4245,"U")
	;;=MISCELLANEOUS CLEANUP
	;;^UTILITY(U,$J,"OPT",4246,0)
	;;=IBCN LIST NEW NOT VER^List New not Verified Policies^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4246,1,0)
	;;=^^4^4^2931129^
	;;^UTILITY(U,$J,"OPT",4246,1,1,0)
	;;=This option will list by patient new insurance entries that have never

IBINI0E5
IBINI0E5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OPT",4246,1,2,0)
	;;=been verified.  Run this report and then use the Patient Insurance Info
	;;^UTILITY(U,$J,"OPT",4246,1,3,0)
	;;=View/Edit option and choose the Verify Coverage action to verify 
	;;^UTILITY(U,$J,"OPT",4246,1,4,0)
	;;=coverage for individual patients.
	;;^UTILITY(U,$J,"OPT",4246,25)
	;;=IBCOC1
	;;^UTILITY(U,$J,"OPT",4246,"U")
	;;=LIST NEW NOT VERIFIED POLICIES
	;;^UTILITY(U,$J,"OPT",4461,0)
	;;=IB PRINT BILL ADDENDUM^Print Bill Addendum Sheet^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4461,1,0)
	;;=^^3^3^2940207^^^^
	;;^UTILITY(U,$J,"OPT",4461,1,1,0)
	;;=Prints the Addendum sheets that may accompany HCFA 1500 Rx Refill or
	;;^UTILITY(U,$J,"OPT",4461,1,2,0)
	;;=Prosthetics bills.  The addendum contains information that could not
	;;^UTILITY(U,$J,"OPT",4461,1,3,0)
	;;=fit on the bill form.
	;;^UTILITY(U,$J,"OPT",4461,25)
	;;=IBCF4
	;;^UTILITY(U,$J,"OPT",4461,"U")
	;;=PRINT BILL ADDENDUM SHEET
	;;^UTILITY(U,$J,"OPT",4462,0)
	;;=IB BATCH PRINT BILLS^Print Authorized Bills^^R^^^^^^^^
	;;^UTILITY(U,$J,"OPT",4462,1,0)
	;;=^^1^1^2940119^
	;;^UTILITY(U,$J,"OPT",4462,1,1,0)
	;;=Queues all authorized bills to print in user specified order.
	;;^UTILITY(U,$J,"OPT",4462,25)
	;;=IBCFP
	;;^UTILITY(U,$J,"OPT",4462,"U")
	;;=PRINT AUTHORIZED BILLS
	;;^UTILITY(U,$J,"OPT",4512,0)
	;;=IBT OUTPUT LIST VISITS^List Visits Requiring Reviews^^R^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"OPT",4512,1,0)
	;;=^^8^8^2940124^^^^
	;;^UTILITY(U,$J,"OPT",4512,1,1,0)
	;;=This option will print a list of visits that require either an insurance
	;;^UTILITY(U,$J,"OPT",4512,1,2,0)
	;;=review, hospital review or both.  In addition only visits that are
	;;^UTILITY(U,$J,"OPT",4512,1,3,0)
	;;=admissions may be printed.   The user may select the date range of visits
	;;^UTILITY(U,$J,"OPT",4512,1,4,0)
	;;=to print.
	;;^UTILITY(U,$J,"OPT",4512,1,5,0)
	;;= 
	;;^UTILITY(U,$J,"OPT",4512,1,6,0)
	;;=This option can be used to list the Random Sample cases being tracked
	;;^UTILITY(U,$J,"OPT",4512,1,7,0)
	;;=for Hospital Reviews by answering the prompts that only hospital reviews for
	;;^UTILITY(U,$J,"OPT",4512,1,8,0)
	;;=admissions are wanted.
	;;^UTILITY(U,$J,"OPT",4512,25)
	;;=IBTOLR
	;;^UTILITY(U,$J,"OPT",4512,"U")
	;;=LIST VISITS REQUIRING REVIEWS
	;;^UTILITY(U,$J,"OR",200,0)
	;;=200^IB^^OTHER HOSPITAL SERVICES^
	;;^UTILITY(U,$J,"OR",200,1,0)
	;;=^100.9951PA^42^15
	;;^UTILITY(U,$J,"OR",200,1,1,0)
	;;=IB CATEGORY C BILLING
	;;^UTILITY(U,$J,"OR",200,1,1,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,1,1,1,0)
	;;=DGPM MOVEMENT EVENTS
	;;^UTILITY(U,$J,"OR",200,1,2,0)
	;;=IB MEANS TEST EVENT
	;;^UTILITY(U,$J,"OR",200,1,2,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,2,1,1,0)
	;;=DG MEANS TEST EVENTS
	;;^UTILITY(U,$J,"OR",200,1,3,0)
	;;=IBACM ADD CHARGE
	;;^UTILITY(U,$J,"OR",200,1,3,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,3,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,4,0)
	;;=IBACM ADD CHARGE ONE
	;;^UTILITY(U,$J,"OR",200,1,4,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,4,1,1,0)
	;;=IBACM ADD CHARGE
	;;^UTILITY(U,$J,"OR",200,1,17,0)
	;;=IBACM CANCEL CHARGE
	;;^UTILITY(U,$J,"OR",200,1,17,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,17,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,18,0)
	;;=IBACM CANCEL CHARGE ONE
	;;^UTILITY(U,$J,"OR",200,1,18,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,18,1,1,0)
	;;=IBACM CANCEL CHARGE
	;;^UTILITY(U,$J,"OR",200,1,21,0)
	;;=IBACM OP LINK
	;;^UTILITY(U,$J,"OR",200,1,21,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,21,1,1,0)
	;;=SDAM APPOINTMENT EVENTS

IBINI0E6
IBINI0E6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"OR",200,1,22,0)
	;;=IBACM PATIENT CHANGE
	;;^UTILITY(U,$J,"OR",200,1,22,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,22,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,23,0)
	;;=IBACM UPDATE CHARGE
	;;^UTILITY(U,$J,"OR",200,1,23,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,23,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,24,0)
	;;=IBACM UPDATE CHARGE ONE
	;;^UTILITY(U,$J,"OR",200,1,24,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,24,1,1,0)
	;;=IBACM UPDATE CHARGE
	;;^UTILITY(U,$J,"OR",200,1,25,0)
	;;=IBACM1 DATE CHANGE
	;;^UTILITY(U,$J,"OR",200,1,25,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,25,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,39,0)
	;;=IBACM PASS CHARGE
	;;^UTILITY(U,$J,"OR",200,1,39,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,39,1,1,0)
	;;=IBACM1 MENU
	;;^UTILITY(U,$J,"OR",200,1,40,0)
	;;=IBDF PRINT MANAGER CLINIC SETUP
	;;^UTILITY(U,$J,"OR",200,1,40,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,40,1,1,0)
	;;=SD PARM PARAMETERS MENU
	;;^UTILITY(U,$J,"OR",200,1,41,0)
	;;=IBDF PRINT MANAGER DIVISION SETUP
	;;^UTILITY(U,$J,"OR",200,1,41,1,0)
	;;=^100.99511PA^1^1
	;;^UTILITY(U,$J,"OR",200,1,41,1,1,0)
	;;=SD PARM PARAMETERS MENU
	;;^UTILITY(U,$J,"OR",200,1,42,0)
	;;=SD PARM PARAMETERS MENU
	;;^UTILITY(U,$J,"PKG",200,0)
	;;=INTEGRATED BILLING^IB^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PKG",200,3,0)
	;;=^9.43^5^5
	;;^UTILITY(U,$J,"PKG",200,3,1,0)
	;;=IB
	;;^UTILITY(U,$J,"PKG",200,3,1,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",200,3,2,0)
	;;=IBE
	;;^UTILITY(U,$J,"PKG",200,3,2,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",200,3,3,0)
	;;=DGCR
	;;^UTILITY(U,$J,"PKG",200,3,3,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",200,3,4,0)
	;;=IBA
	;;^UTILITY(U,$J,"PKG",200,3,4,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",200,3,5,0)
	;;=IBT
	;;^UTILITY(U,$J,"PKG",200,3,5,5)
	;;=M
	;;^UTILITY(U,$J,"PKG",200,3,"B","DGCR",3)
	;;=
	;;^UTILITY(U,$J,"PKG",200,3,"B","IB",1)
	;;=
	;;^UTILITY(U,$J,"PKG",200,3,"B","IBA",4)
	;;=
	;;^UTILITY(U,$J,"PKG",200,3,"B","IBE",2)
	;;=
	;;^UTILITY(U,$J,"PKG",200,3,"B","IBT",5)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,0)
	;;=^9.44PA^92^89
	;;^UTILITY(U,$J,"PKG",200,4,1,0)
	;;=350
	;;^UTILITY(U,$J,"PKG",200,4,1,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,2,0)
	;;=350.1
	;;^UTILITY(U,$J,"PKG",200,4,2,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,3,0)
	;;=350.2
	;;^UTILITY(U,$J,"PKG",200,4,3,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,4,0)
	;;=350.3
	;;^UTILITY(U,$J,"PKG",200,4,4,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,5,0)
	;;=350.4
	;;^UTILITY(U,$J,"PKG",200,4,5,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,6,0)
	;;=350.41
	;;^UTILITY(U,$J,"PKG",200,4,6,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,7,0)
	;;=350.5
	;;^UTILITY(U,$J,"PKG",200,4,7,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,8,0)
	;;=350.7
	;;^UTILITY(U,$J,"PKG",200,4,8,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,9,0)
	;;=350.71
	;;^UTILITY(U,$J,"PKG",200,4,9,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,10,0)
	;;=350.8
	;;^UTILITY(U,$J,"PKG",200,4,10,222)
	;;=y^y^^n^^^y^o^n
	;;^UTILITY(U,$J,"PKG",200,4,11,0)
	;;=350.9
	;;^UTILITY(U,$J,"PKG",200,4,11,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,12,0)
	;;=351
	;;^UTILITY(U,$J,"PKG",200,4,12,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,13,0)
	;;=351.1
	;;^UTILITY(U,$J,"PKG",200,4,13,1,0)
	;;=^9.45A
	;;^UTILITY(U,$J,"PKG",200,4,13,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,14,0)
	;;=352.1
	;;^UTILITY(U,$J,"PKG",200,4,14,1,0)
	;;=^9.45A
	;;^UTILITY(U,$J,"PKG",200,4,14,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,15,0)
	;;=399

IBINI0E7
IBINI0E7	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",200,4,15,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,16,0)
	;;=399.1
	;;^UTILITY(U,$J,"PKG",200,4,16,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,17,0)
	;;=399.2
	;;^UTILITY(U,$J,"PKG",200,4,17,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,18,0)
	;;=399.3
	;;^UTILITY(U,$J,"PKG",200,4,18,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,19,0)
	;;=399.4
	;;^UTILITY(U,$J,"PKG",200,4,19,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,20,0)
	;;=399.5
	;;^UTILITY(U,$J,"PKG",200,4,20,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,22,0)
	;;=350.6
	;;^UTILITY(U,$J,"PKG",200,4,22,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,23,0)
	;;=353
	;;^UTILITY(U,$J,"PKG",200,4,23,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,24,0)
	;;=353.1
	;;^UTILITY(U,$J,"PKG",200,4,24,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",200,4,25,0)
	;;=353.2
	;;^UTILITY(U,$J,"PKG",200,4,25,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",200,4,26,0)
	;;=352.2
	;;^UTILITY(U,$J,"PKG",200,4,26,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,27,0)
	;;=352.3
	;;^UTILITY(U,$J,"PKG",200,4,27,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,28,0)
	;;=352.4
	;;^UTILITY(U,$J,"PKG",200,4,28,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,29,0)
	;;=351.2
	;;^UTILITY(U,$J,"PKG",200,4,29,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,32,0)
	;;=354
	;;^UTILITY(U,$J,"PKG",200,4,32,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,33,0)
	;;=354.1
	;;^UTILITY(U,$J,"PKG",200,4,33,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,34,0)
	;;=354.2
	;;^UTILITY(U,$J,"PKG",200,4,34,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,35,0)
	;;=354.3
	;;^UTILITY(U,$J,"PKG",200,4,35,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,36,0)
	;;=354.4
	;;^UTILITY(U,$J,"PKG",200,4,36,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,37,0)
	;;=354.5
	;;^UTILITY(U,$J,"PKG",200,4,37,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,38,0)
	;;=354.6
	;;^UTILITY(U,$J,"PKG",200,4,38,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,39,0)
	;;=357
	;;^UTILITY(U,$J,"PKG",200,4,39,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,40,0)
	;;=357.1
	;;^UTILITY(U,$J,"PKG",200,4,40,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,41,0)
	;;=357.2
	;;^UTILITY(U,$J,"PKG",200,4,41,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,42,0)
	;;=357.3
	;;^UTILITY(U,$J,"PKG",200,4,42,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,43,0)
	;;=357.4
	;;^UTILITY(U,$J,"PKG",200,4,43,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,44,0)
	;;=357.5
	;;^UTILITY(U,$J,"PKG",200,4,44,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,45,0)
	;;=357.6
	;;^UTILITY(U,$J,"PKG",200,4,45,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",200,4,46,0)
	;;=357.7
	;;^UTILITY(U,$J,"PKG",200,4,46,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,47,0)
	;;=357.8
	;;^UTILITY(U,$J,"PKG",200,4,47,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,48,0)
	;;=356
	;;^UTILITY(U,$J,"PKG",200,4,48,222)
	;;=y^y^^n^^^n^
	;;^UTILITY(U,$J,"PKG",200,4,49,0)
	;;=357.91
	;;^UTILITY(U,$J,"PKG",200,4,49,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,50,0)
	;;=357.92
	;;^UTILITY(U,$J,"PKG",200,4,50,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,51,0)
	;;=358
	;;^UTILITY(U,$J,"PKG",200,4,51,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,52,0)
	;;=358.1
	;;^UTILITY(U,$J,"PKG",200,4,52,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,53,0)
	;;=358.2
	;;^UTILITY(U,$J,"PKG",200,4,53,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,54,0)
	;;=358.3
	;;^UTILITY(U,$J,"PKG",200,4,54,222)
	;;=y^y^^n^^^n

IBINI0E8
IBINI0E8	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",200,4,55,0)
	;;=358.4
	;;^UTILITY(U,$J,"PKG",200,4,55,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,56,0)
	;;=358.5
	;;^UTILITY(U,$J,"PKG",200,4,56,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,57,0)
	;;=358.6
	;;^UTILITY(U,$J,"PKG",200,4,57,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,58,0)
	;;=358.7
	;;^UTILITY(U,$J,"PKG",200,4,58,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,59,0)
	;;=358.8
	;;^UTILITY(U,$J,"PKG",200,4,59,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,60,0)
	;;=358.91
	;;^UTILITY(U,$J,"PKG",200,4,60,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,61,0)
	;;=409.95
	;;^UTILITY(U,$J,"PKG",200,4,61,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,62,0)
	;;=409.96
	;;^UTILITY(U,$J,"PKG",200,4,62,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,63,0)
	;;=36
	;;^UTILITY(U,$J,"PKG",200,4,63,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,64,0)
	;;=2
	;;^UTILITY(U,$J,"PKG",200,4,64,1,0)
	;;=^9.45A^2^2
	;;^UTILITY(U,$J,"PKG",200,4,64,1,1,0)
	;;=INSURANCE TYPE
	;;^UTILITY(U,$J,"PKG",200,4,64,1,2,0)
	;;=APPOINTMENT
	;;^UTILITY(U,$J,"PKG",200,4,64,1,"B","APPOINTMENT",2)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,64,1,"B","INSURANCE TYPE",1)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,64,222)
	;;=y^n^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,65,0)
	;;=350.21
	;;^UTILITY(U,$J,"PKG",200,4,65,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,66,0)
	;;=355.1
	;;^UTILITY(U,$J,"PKG",200,4,66,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",200,4,67,0)
	;;=355.2
	;;^UTILITY(U,$J,"PKG",200,4,67,222)
	;;=y^y^^n^^^y^o^y
	;;^UTILITY(U,$J,"PKG",200,4,68,0)
	;;=355.3
	;;^UTILITY(U,$J,"PKG",200,4,68,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,69,0)
	;;=355.4
	;;^UTILITY(U,$J,"PKG",200,4,69,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,70,0)
	;;=355.5
	;;^UTILITY(U,$J,"PKG",200,4,70,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,71,0)
	;;=356.1
	;;^UTILITY(U,$J,"PKG",200,4,71,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,72,0)
	;;=356.11
	;;^UTILITY(U,$J,"PKG",200,4,72,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,73,0)
	;;=356.2
	;;^UTILITY(U,$J,"PKG",200,4,73,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,74,0)
	;;=356.21
	;;^UTILITY(U,$J,"PKG",200,4,74,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,75,0)
	;;=356.3
	;;^UTILITY(U,$J,"PKG",200,4,75,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,76,0)
	;;=356.399
	;;^UTILITY(U,$J,"PKG",200,4,76,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,77,0)
	;;=356.4
	;;^UTILITY(U,$J,"PKG",200,4,77,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,78,0)
	;;=356.5
	;;^UTILITY(U,$J,"PKG",200,4,78,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,79,0)
	;;=356.6
	;;^UTILITY(U,$J,"PKG",200,4,79,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,80,0)
	;;=356.7
	;;^UTILITY(U,$J,"PKG",200,4,80,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,81,0)
	;;=356.8
	;;^UTILITY(U,$J,"PKG",200,4,81,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,82,0)
	;;=356.9
	;;^UTILITY(U,$J,"PKG",200,4,82,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,83,0)
	;;=356.91
	;;^UTILITY(U,$J,"PKG",200,4,83,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,84,0)
	;;=356.94
	;;^UTILITY(U,$J,"PKG",200,4,84,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,85,0)
	;;=362.1
	;;^UTILITY(U,$J,"PKG",200,4,85,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,87,0)
	;;=355.6
	;;^UTILITY(U,$J,"PKG",200,4,87,222)
	;;=y^y^^n^^^y^m^y
	;;^UTILITY(U,$J,"PKG",200,4,88,0)
	;;=355.7
	;;^UTILITY(U,$J,"PKG",200,4,88,222)
	;;=y^y^^n^^^n^^
	;;^UTILITY(U,$J,"PKG",200,4,89,0)
	;;=356.93
	;;^UTILITY(U,$J,"PKG",200,4,89,222)
	;;=y^y^^n^^^n^^

IBINI0E9
IBINI0E9	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",200,4,90,0)
	;;=362.3
	;;^UTILITY(U,$J,"PKG",200,4,90,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,91,0)
	;;=362.4
	;;^UTILITY(U,$J,"PKG",200,4,91,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,92,0)
	;;=362.5
	;;^UTILITY(U,$J,"PKG",200,4,92,222)
	;;=y^y^^n^^^n
	;;^UTILITY(U,$J,"PKG",200,4,"B",2,64)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",36,63)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350,1)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.1,2)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.2,3)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.21,65)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.3,4)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.4,5)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.41,6)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.5,7)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.6,22)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.7,8)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.71,9)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.8,10)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",350.9,11)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",351,12)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",351.1,13)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",351.2,29)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",352.1,14)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",352.2,26)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",352.3,27)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",352.4,28)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",353,23)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",353.1,24)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",353.2,25)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354,32)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.1,33)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.2,34)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.3,35)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.4,36)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.5,37)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",354.6,38)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.1,66)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.2,67)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.3,68)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.4,69)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.5,70)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.6,87)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",355.7,88)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356,48)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.1,71)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.11,72)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.2,73)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.21,74)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.3,75)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.399,76)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.4,77)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.5,78)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.6,79)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.7,80)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.8,81)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.9,82)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.91,83)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.93,89)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",356.94,84)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357,39)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.1,40)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.2,41)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.3,42)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.4,43)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.5,44)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.6,45)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.7,46)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.8,47)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.91,49)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",357.92,50)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358,51)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.1,52)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.2,53)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.3,54)
	;;=

IBINI0EA
IBINI0EA	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.4,55)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.5,56)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.6,57)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.7,58)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.8,59)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",358.91,60)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",362.1,85)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",362.3,90)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",362.4,91)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",362.5,92)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399,15)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399.1,16)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399.2,17)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399.3,18)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399.4,19)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",399.5,20)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",409.95,61)
	;;=
	;;^UTILITY(U,$J,"PKG",200,4,"B",409.96,62)
	;;=
	;;^UTILITY(U,$J,"PKG",200,5)
	;;=ALBANY
	;;^UTILITY(U,$J,"PKG",200,7)
	;;=ALBANY^^I
	;;^UTILITY(U,$J,"PKG",200,8,0)
	;;=^9.404ID
	;;^UTILITY(U,$J,"PKG",200,11)
	;;=350^399.9
	;;^UTILITY(U,$J,"PKG",200,22,0)
	;;=^9.49I^10^27
	;;^UTILITY(U,$J,"PKG",200,22,.01,0)
	;;=0.01^2910214
	;;^UTILITY(U,$J,"PKG",200,22,.1,0)
	;;=0.1^2910305
	;;^UTILITY(U,$J,"PKG",200,22,.11,0)
	;;=0.11^2910313
	;;^UTILITY(U,$J,"PKG",200,22,.2,0)
	;;=0.2^2910315
	;;^UTILITY(U,$J,"PKG",200,22,.21,0)
	;;=0.21^2910319
	;;^UTILITY(U,$J,"PKG",200,22,.22,0)
	;;=0.22^2910321
	;;^UTILITY(U,$J,"PKG",200,22,.3,0)
	;;=0.3^2910404
	;;^UTILITY(U,$J,"PKG",200,22,.31,0)
	;;=0.31^2910417
	;;^UTILITY(U,$J,"PKG",200,22,.4,0)
	;;=0.40^2910424
	;;^UTILITY(U,$J,"PKG",200,22,.41,0)
	;;=0.41^2910429
	;;^UTILITY(U,$J,"PKG",200,22,.5,0)
	;;=0.50^2910502
	;;^UTILITY(U,$J,"PKG",200,22,.51,0)
	;;=0.51^2910521
	;;^UTILITY(U,$J,"PKG",200,22,1,0)
	;;=1^2910523
	;;^UTILITY(U,$J,"PKG",200,22,1.01,0)
	;;=1.01^2920407^2920406
	;;^UTILITY(U,$J,"PKG",200,22,1.41,0)
	;;=1.41^2920424
	;;^UTILITY(U,$J,"PKG",200,22,1.42,0)
	;;=1.42^2920506
	;;^UTILITY(U,$J,"PKG",200,22,1.43,0)
	;;=1.43^2920611
	;;^UTILITY(U,$J,"PKG",200,22,1.5,0)
	;;=1.5^2920728
	;;^UTILITY(U,$J,"PKG",200,22,2,0)
	;;=2.0a1^2930903
	;;^UTILITY(U,$J,"PKG",200,22,3,0)
	;;=2.0p1^2930906
	;;^UTILITY(U,$J,"PKG",200,22,4,0)
	;;=2.0T1^2930909
	;;^UTILITY(U,$J,"PKG",200,22,5,0)
	;;=2.0T2^2931115
	;;^UTILITY(U,$J,"PKG",200,22,6,0)
	;;=2.0V1^2931202
	;;^UTILITY(U,$J,"PKG",200,22,7,0)
	;;=2.0V2^2931230
	;;^UTILITY(U,$J,"PKG",200,22,8,0)
	;;=2.0V3^2940215
	;;^UTILITY(U,$J,"PKG",200,22,9,0)
	;;=2.0V4^2940311
	;;^UTILITY(U,$J,"PKG",200,22,10,0)
	;;=2.0^2940321
	;;^UTILITY(U,$J,"PKG",200,22,"B",1,1)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B",1.01,1.01)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B",1.41,1.41)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B",1.42,1.42)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B",1.43,1.43)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B",1.5,1.5)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.01",.01)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.1",.1)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.11",.11)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.2",.2)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.21",.21)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.22",.22)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.3",.3)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.31",.31)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.40",.4)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.41",.41)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.50",.5)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","0.51",.51)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0",10)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0T1",4)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0T2",5)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0V1",6)
	;;=

IBINI0EB
IBINI0EB	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0V2",7)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0V3",8)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0V4",9)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0a1",2)
	;;=
	;;^UTILITY(U,$J,"PKG",200,22,"B","2.0p1",3)
	;;=
	;;^UTILITY(U,$J,"PKG",200,"DEV")
	;;=AAS/ALB
	;;^UTILITY(U,$J,"PKG",200,"DIBT",0)
	;;=^9.48^1^1
	;;^UTILITY(U,$J,"PKG",200,"DIBT",1,0)
	;;=IBNOTVER1^2
	;;^UTILITY(U,$J,"PKG",200,"DIE",0)
	;;=^9.47^^0
	;;^UTILITY(U,$J,"PKG",200,"DIPT",0)
	;;=^9.46^3^3
	;;^UTILITY(U,$J,"PKG",200,"DIPT",1,0)
	;;=IB CPT RG DISPLAY^409.71
	;;^UTILITY(U,$J,"PKG",200,"DIPT",2,0)
	;;=IB DIVISION DISPLAY^40.8
	;;^UTILITY(U,$J,"PKG",200,"DIPT",3,0)
	;;=IBNOTVER^2
	;;^UTILITY(U,$J,"PKG",200,"EX",0)
	;;=^9.432^2^2
	;;^UTILITY(U,$J,"PKG",200,"EX",1,0)
	;;=IBZ
	;;^UTILITY(U,$J,"PKG",200,"EX",2,0)
	;;=IBIZ
	;;^UTILITY(U,$J,"PKG",200,"INI")
	;;=IB20IN^
	;;^UTILITY(U,$J,"PKG",200,"INIT")
	;;=IB20PT^
	;;^UTILITY(U,$J,"PKG",200,"M",0)
	;;=^9.495^^0
	;;^UTILITY(U,$J,"PKG",200,"PRE")
	;;=IB20PRE^
	;;^UTILITY(U,$J,"SBF",2,2)
	;;=
	;;^UTILITY(U,$J,"SBF",2,2.312)
	;;=
	;;^UTILITY(U,$J,"SBF",2,2.98)
	;;=
	;;^UTILITY(U,$J,"SBF",36,36)
	;;=
	;;^UTILITY(U,$J,"SBF",36,36.011)
	;;=
	;;^UTILITY(U,$J,"SBF",36,36.02)
	;;=
	;;^UTILITY(U,$J,"SBF",36,36.03)
	;;=
	;;^UTILITY(U,$J,"SBF",350,350)
	;;=
	;;^UTILITY(U,$J,"SBF",350.1,350.1)
	;;=
	;;^UTILITY(U,$J,"SBF",350.2,350.2)
	;;=
	;;^UTILITY(U,$J,"SBF",350.21,350.21)
	;;=
	;;^UTILITY(U,$J,"SBF",350.3,350.3)
	;;=
	;;^UTILITY(U,$J,"SBF",350.4,350.4)
	;;=
	;;^UTILITY(U,$J,"SBF",350.41,350.41)
	;;=
	;;^UTILITY(U,$J,"SBF",350.5,350.5)
	;;=
	;;^UTILITY(U,$J,"SBF",350.6,350.6)
	;;=
	;;^UTILITY(U,$J,"SBF",350.7,350.7)
	;;=
	;;^UTILITY(U,$J,"SBF",350.71,350.71)
	;;=
	;;^UTILITY(U,$J,"SBF",350.8,350.8)
	;;=
	;;^UTILITY(U,$J,"SBF",350.9,350.9)
	;;=
	;;^UTILITY(U,$J,"SBF",351,351)
	;;=
	;;^UTILITY(U,$J,"SBF",351.1,351.1)
	;;=
	;;^UTILITY(U,$J,"SBF",351.2,351.2)
	;;=
	;;^UTILITY(U,$J,"SBF",352.1,352.1)
	;;=
	;;^UTILITY(U,$J,"SBF",352.2,352.2)
	;;=
	;;^UTILITY(U,$J,"SBF",352.3,352.3)
	;;=
	;;^UTILITY(U,$J,"SBF",352.4,352.4)
	;;=
	;;^UTILITY(U,$J,"SBF",353,353)
	;;=
	;;^UTILITY(U,$J,"SBF",353.1,353.1)
	;;=
	;;^UTILITY(U,$J,"SBF",353.2,353.2)
	;;=
	;;^UTILITY(U,$J,"SBF",354,354)
	;;=
	;;^UTILITY(U,$J,"SBF",354.1,354.1)
	;;=
	;;^UTILITY(U,$J,"SBF",354.2,354.2)
	;;=
	;;^UTILITY(U,$J,"SBF",354.3,354.3)
	;;=
	;;^UTILITY(U,$J,"SBF",354.4,354.4)
	;;=
	;;^UTILITY(U,$J,"SBF",354.5,354.5)
	;;=
	;;^UTILITY(U,$J,"SBF",354.5,354.5002)
	;;=
	;;^UTILITY(U,$J,"SBF",354.5,354.52)
	;;=
	;;^UTILITY(U,$J,"SBF",354.6,354.6)
	;;=
	;;^UTILITY(U,$J,"SBF",354.6,354.61)
	;;=
	;;^UTILITY(U,$J,"SBF",354.6,354.62)
	;;=
	;;^UTILITY(U,$J,"SBF",355.1,355.1)
	;;=
	;;^UTILITY(U,$J,"SBF",355.1,355.11)
	;;=
	;;^UTILITY(U,$J,"SBF",355.2,355.2)
	;;=
	;;^UTILITY(U,$J,"SBF",355.2,355.21)
	;;=
	;;^UTILITY(U,$J,"SBF",355.3,355.3)
	;;=
	;;^UTILITY(U,$J,"SBF",355.3,355.311)
	;;=
	;;^UTILITY(U,$J,"SBF",355.4,355.4)
	;;=
	;;^UTILITY(U,$J,"SBF",355.5,355.5)
	;;=
	;;^UTILITY(U,$J,"SBF",355.6,355.6)
	;;=
	;;^UTILITY(U,$J,"SBF",355.6,355.611)
	;;=
	;;^UTILITY(U,$J,"SBF",355.7,355.7)
	;;=
	;;^UTILITY(U,$J,"SBF",356,356)
	;;=
	;;^UTILITY(U,$J,"SBF",356.1,356.1)
	;;=
	;;^UTILITY(U,$J,"SBF",356.1,356.111)
	;;=
	;;^UTILITY(U,$J,"SBF",356.1,356.112)
	;;=
	;;^UTILITY(U,$J,"SBF",356.1,356.113)
	;;=
	;;^UTILITY(U,$J,"SBF",356.11,356.11)
	;;=
	;;^UTILITY(U,$J,"SBF",356.2,356.2)
	;;=
	;;^UTILITY(U,$J,"SBF",356.2,356.211)
	;;=
	;;^UTILITY(U,$J,"SBF",356.2,356.212)
	;;=
	;;^UTILITY(U,$J,"SBF",356.2,356.213)
	;;=
	;;^UTILITY(U,$J,"SBF",356.2,356.214)
	;;=
	;;^UTILITY(U,$J,"SBF",356.21,356.21)
	;;=

IBINI0EC
IBINI0EC	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"SBF",356.3,356.3)
	;;=
	;;^UTILITY(U,$J,"SBF",356.399,356.399)
	;;=
	;;^UTILITY(U,$J,"SBF",356.4,356.4)
	;;=
	;;^UTILITY(U,$J,"SBF",356.4,356.41)
	;;=
	;;^UTILITY(U,$J,"SBF",356.5,356.5)
	;;=
	;;^UTILITY(U,$J,"SBF",356.6,356.6)
	;;=
	;;^UTILITY(U,$J,"SBF",356.7,356.7)
	;;=
	;;^UTILITY(U,$J,"SBF",356.8,356.8)
	;;=
	;;^UTILITY(U,$J,"SBF",356.9,356.9)
	;;=
	;;^UTILITY(U,$J,"SBF",356.91,356.91)
	;;=
	;;^UTILITY(U,$J,"SBF",356.93,356.93)
	;;=
	;;^UTILITY(U,$J,"SBF",356.94,356.94)
	;;=
	;;^UTILITY(U,$J,"SBF",357,357)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.1)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.11)
	;;=
	;;^UTILITY(U,$J,"SBF",357.1,357.12)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.2)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.21)
	;;=
	;;^UTILITY(U,$J,"SBF",357.2,357.22)
	;;=
	;;^UTILITY(U,$J,"SBF",357.3,357.3)
	;;=
	;;^UTILITY(U,$J,"SBF",357.3,357.31)
	;;=
	;;^UTILITY(U,$J,"SBF",357.4,357.4)
	;;=
	;;^UTILITY(U,$J,"SBF",357.5,357.5)
	;;=
	;;^UTILITY(U,$J,"SBF",357.5,357.52)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.6)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.61)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.66)
	;;=
	;;^UTILITY(U,$J,"SBF",357.6,357.67)
	;;=
	;;^UTILITY(U,$J,"SBF",357.7,357.7)
	;;=
	;;^UTILITY(U,$J,"SBF",357.8,357.8)
	;;=
	;;^UTILITY(U,$J,"SBF",357.8,357.81)
	;;=
	;;^UTILITY(U,$J,"SBF",357.91,357.91)
	;;=
	;;^UTILITY(U,$J,"SBF",357.92,357.92)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358)
	;;=
	;;^UTILITY(U,$J,"SBF",358,358.01)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.1)
	;;=
	;;^UTILITY(U,$J,"SBF",358.1,358.11)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.2)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.21)
	;;=
	;;^UTILITY(U,$J,"SBF",358.2,358.22)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.3)
	;;=
	;;^UTILITY(U,$J,"SBF",358.3,358.31)
	;;=
	;;^UTILITY(U,$J,"SBF",358.4,358.4)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.5)
	;;=
	;;^UTILITY(U,$J,"SBF",358.5,358.52)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.6)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.61)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.66)
	;;=
	;;^UTILITY(U,$J,"SBF",358.6,358.67)
	;;=
	;;^UTILITY(U,$J,"SBF",358.7,358.7)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.8)
	;;=
	;;^UTILITY(U,$J,"SBF",358.8,358.81)
	;;=
	;;^UTILITY(U,$J,"SBF",358.91,358.91)
	;;=
	;;^UTILITY(U,$J,"SBF",362.1,362.1)
	;;=
	;;^UTILITY(U,$J,"SBF",362.1,362.111)
	;;=
	;;^UTILITY(U,$J,"SBF",362.3,362.3)
	;;=
	;;^UTILITY(U,$J,"SBF",362.4,362.4)
	;;=
	;;^UTILITY(U,$J,"SBF",362.5,362.5)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.0304)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.04)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.041)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.042)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.043)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.044)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.045)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.046)
	;;=
	;;^UTILITY(U,$J,"SBF",399,399.047)
	;;=
	;;^UTILITY(U,$J,"SBF",399.1,399.1)
	;;=
	;;^UTILITY(U,$J,"SBF",399.2,399.2)
	;;=
	;;^UTILITY(U,$J,"SBF",399.3,399.3)
	;;=
	;;^UTILITY(U,$J,"SBF",399.4,399.4)
	;;=
	;;^UTILITY(U,$J,"SBF",399.5,399.5)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.95)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.9501)
	;;=
	;;^UTILITY(U,$J,"SBF",409.95,409.9502)
	;;=
	;;^UTILITY(U,$J,"SBF",409.96,409.96)
	;;=
	;;^UTILITY(U,$J,"SBF",409.96,409.961)
	;;=

IBINIS
IBINIS	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
PAC(PKG,VER)	; called from package init (DIFROM7 created this routine)
	; PKG = $T(IXF) of the INIT routine.
	; VER is an array that is contained in DIFROM from the INIT routine
	;
	N %,%I,%H,DATE,DIFROM,NOW,PACKAGE,RUN,SERVER,SITE,START,X,XMDUZ,XMSUB,XMTEXT,XMY,Y K ^TMP("IBINIS",$J)
	;
	; Site tracking updates only occur if run in a VA production primary domain
	; account.
	I $G(^XMB("NETNAME"))'[".VA.GOV" Q
	Q:'$D(^%ZOSF("UCI"))  Q:'$D(^%ZOSF("PROD"))
	X ^%ZOSF("UCI") I Y'=^%ZOSF("PROD") Q
	;
	S SERVER="S.A5CSTS@FORUM.VA.GOV"
	S PACKAGE=$P($P(PKG,";",3),U)
	S SITE=$G(^XMB("NETNAME"))
	S START=$P($G(^DIC(9.4,VER(0),"PRE")),U,2) I '$L(START) S START="Unknown"
	D  ; check if ok to use kernel functions
	.S X="XLFDT" X ^%ZOSF("TEST") I $T D  Q
	..S NOW=$$HTFM^XLFDT($H)
	..S RUN="Unknown" I START S RUN=$$FMDIFF^XLFDT(NOW,START,3)
	..S START=$$FMTE^XLFDT(START)
	..S DATE=NOW\1
	..S NOW=$$FMTE^XLFDT(NOW)
	.D NOW^%DTC S NOW=%,DATE=X
	.S RUN="" ; don't bother to compute
	.S Y=START D DD^%DT S START=Y
	.S Y=NOW D DD^%DT S NOW=Y
	;
	; Message for server
	S ^TMP("IBINIS",$J,1,0)="PACKAGE INSTALL"
	S ^TMP("IBINIS",$J,2,0)="SITE: "_SITE
	S ^TMP("IBINIS",$J,3,0)="PACKAGE: "_PACKAGE
	S ^TMP("IBINIS",$J,4,0)="VERSION: "_VER
	S ^TMP("IBINIS",$J,5,0)="Start time: "_START
	S ^TMP("IBINIS",$J,6,0)="Completion time: "_NOW
	S ^TMP("IBINIS",$J,7,0)="Run time: "_RUN
	S ^TMP("IBINIS",$J,8,0)="DATE: "_DATE
	;
	; Data is sent to server on FORUM - S.A5CSTS
	S XMY(SERVER)="",XMDUZ=.5,XMTEXT="^TMP(""IBINIS"",$J,",XMSUB=PACKAGE_" VERSION "_VER_" INSTALLATION"
	D ^XMD
	K ^TMP("IBINIS",$J)
	Q

IBINIT
IBINIT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	K DIF,DIFQ,DIFQR,DIFQN,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DIFROM,DFR,DTN,DIX,DZ,DIRUT,DTOUT,DUOUT
	S U="^",DIFQ=0,DIFROM="2.0" W !,"This version (#2.0) of 'IBINIT' was created on 21-MAR-1994"
	W !?9,"(at ALBANY ISC VAX DEVELOPMENT, by VA FileMan V.20.0)",!
	I $D(^DD("VERSION")),^("VERSION")'<20 G GO
	W !,"FIRST, I'LL FRESHEN UP YOUR VA FILEMAN...." D N^DINIT
	I ^DD("VERSION")<20 W !,"BUT I NEED VERSION 20 OF THE VA FILEMAN!" G Q
GO	;
	W !,"I HAVE TO RUN AN ENVIRONMENT CHECK ROUTINE." D PKG,^IB20PRE Q:'$D(DIFQ)  D NOW^%DTC S DIFROM("PRE")=%
EN	; ENTER HERE TO BYPASS THE PRE-INIT PROGRAM
	S DIFQ=0 K DIRUT,DTOUT,DUOUT
	F DIFRIR=1:1:2 S DIFRRTN="^IBINIT"_$E("56",DIFRIR) D @DIFRRTN
	W:1 !,"I AM GOING TO SET UP THE FOLLOWING FILES:" F I=1:2:176 S DIF(I)=^UTILITY("DIF",$J,I) D 1 G Q:DIFQ!$D(DIRUT) K DIF(I)
	S DIFROM="2.0" D PKG:'$D(DIFROM(0)),^IBINIT1 G Q:'$D(DIFQ) S DIK(0)="AB"
	F DIF=1:2:176 S %=^UTILITY("DIF",$J,DIF),DIK=$P(%,";",5),N=$P(%,";",3),D=$P(%,";",4)_U_N D D K DIFQ(N)
	K DIFQR D ^IBINIT2,^IBINIT3
	L  S DUZ=DIDUZ W:1 !,"NO"_$P("TE THAT FILE",U,DSEC)_" SECURITY-CODE PROTECTION HAS BEEN MADE"
	D ^IB20PT,NOW^%DTC S DIFROM("INIT")=%
	I DIFROM F DIF=1:2:176 S %=^UTILITY("DIF",$J,DIF),N=+$P(%,";",3) I N,$P(%,";",8)="y" S ^DD(N,0,"VR")=DIFROM
	I DIFROM(0)>0 F %="PRE","INI","INIT" S:$D(DIFROM(%)) $P(^DIC(9.4,DIFROM(0),%),U,2)=DIFROM(%)
	I $G(DIFQN) S $P(^(0),U,3,4)=$P(DIFQN,U,2)_U_($P(^DIC(0),U,4)+DIFQN) K DIFQN
	I DIFROM,$D(^%ZTSK) S X="IBINIS" X ^%ZOSF("TEST") D:$T PAC^IBINIS($T(IXF),.DIFROM)
	S:DIFROM(0)>0 ^DIC(9.4,DIFROM(0),"VERSION")=DIFROM G Q^DIFROM0
D	S:$D(^DIC(+N,0))[0 ^(0)=D S X=$D(@(DIK_"0)")),^(0)=D_U_$S(X#2:$P(^(0),U,3,9),1:U)
	S DIFQR=DIFQR(+N) I ^DD("VERSION")>17.5,$D(^DD(+N,0,"DIK"))#2 S X=^("DIK"),Y=+N,DMAX=^DD("ROU") D EN^DIKZ
	I DIFQR D IXALL^DIK:$O(@(DIK_"0)")) W "."
	Q
R	G REP^IBINIT2
	;
1	S N=+$P(DIF(I),";",3),DIF=$P(DIF(I),";",4),S=$P(DIF(I),";",5)
	W !!?3,N,?13,DIF,$P("  (Partial Definition)",U,$P(DIF(I),";",6)),$P("  (including data)",U,$P(DIF(I),";",13)="y") S Z=$S($D(^DIC(N,0))#2:^(0),1:"")
	I Z="" S DIFQ(N)=1,DIFQN=$G(DIFQN)+1_U_N G S
	I $L($P(Z,DIF)) W $C(7),!,"*BUT YOU ALREADY HAVE '",$P(Z,U),"' AS FILE #",N,"!" D R Q:DIFQ  G S:$D(DIFKEP(N)),1
	S DIFQ(N)=$P(DIF(I),";",7)'="n"
	I $L(Z) W $C(7),!,"Note:  You already have the '",$P(Z,U),"' File." S DIFQ(0)=1
	S %=$E(^UTILITY("DIF",$J,I+1),4,245) I %]"" X % S DIFQ(N)=$T W:'$T !,"Screen on this Data Dictionary did not pass--DD will not be installed!" G S
	I $L(Z),$P(DIF(I),";",10)="y" S DIR("A")="Shall I write over the existing Data Definition",DIR("??")="^D DD^DIFROMH1",DIR("B")="YES",DIR(0)="Y" D ^DIR S DIFQ(N)=Y
S	S DIFQR(N)=0 Q:$P(DIF(I),";",13)'="y"!$D(DIRUT)
	I $P(DIF(I),";",15)="y",$O(@(S_"0)"))>0 S DIF=$P(DIF(I),";",14)="o",DIR("A")="Want my data "_$P("merged with^to overwrite",U,DIF+1)_" yours",DIR("??")="^D DTA^DIFROMH1",DIR(0)="Y" D ^DIR S DIFQR(N)=$S('Y:Y,1:Y+DIF) Q
	S %=$P(DIF(I),";",14)="o" W !,$C(7),"I will ",$P("MERGE^OVERWRITE",U,%+1)," your data with mine." S DIFQR(N)=%+1
	Q
Q	W $C(7),!!,"NO UPDATING HAS OCCURRED!" G Q^DIFROM0
	;
PKG	S X=$P($T(IXF),";",3),DIC="^DIC(9.4,",DIC(0)="",DIC("S")="I $P(^(0),U,2)="""_$P(X,U,2)_"""",X=$P(X,U) D ^DIC S DIFROM(0)=+Y K DIC
	Q
	;
IXF	;;INTEGRATED BILLING^IB;0
ERX	W $C(7),!!,"This INIT was built as a Network Mail Message and can ONLY be installed",!,"within the Mail system!!" G Q

IBINIT1
IBINIT1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; LOADS AND INDEXES DD'S
	;
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIDUZ,DIR,DA,DFR,DTN,DIX,DZ D DT^DICRW S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
ASK	I %=1,$D(DIFQ(0)) W !,"SHALL I WRITE OVER FILE SECURITY CODES" S %=2 D YN^DICN S DSEC=%=1 I %<1 K DIFQ Q
	F X="DIB","DIE","DIP","FUN","KEY","OPT" D W Q:'$D(DIFQ)
	Q:'$D(DIFQ)  S %=2 W !!,"ARE YOU SURE EVERYTHING'S OK" D YN^DICN I %-1 K DIFQ Q
	D ^IB20IN D NOW^%DTC S DIFROM("INI")=%
	I $D(DIFKEP) F DIDIU=0:0 S DIDIU=$O(DIFKEP(DIDIU)) Q:DIDIU'>0  S DIU=DIDIU,DIU(0)=DIFKEP(DIDIU) D EN^DIU2
	D DT^DICRW K ^UTILITY(U,$J),^UTILITY("DIK",$J) D WAIT^DICD
	S DN="^IBINI" F R=1:1:516 D @(DN_$$B36(R)) W "."
	F  S D=$O(^UTILITY(U,$J,"SBF","")) Q:D'>0  K:'DIFQ(D) ^(D) S D=$O(^(D,"")) I D>0  K ^(D) D IX
DATA	W "." S (D,DDF(1),DDT(0))=$O(^UTILITY(U,$J,0)) Q:D'>0
	I DIFQR(D) S DTO=0,DMRG=1,DTO(0)=^(D),Z=^(D)_"0)",D0=^(D,0),@Z=D0,DFR(1)="^UTILITY(U,$J,DDF(1),D0,",DKP=DIFQR(D)'=2 F D0=0:0 S D0=$O(^UTILITY(U,$J,DDF(1),D0)) S:D0="" D0=-1 Q:'$D(^(D0,0))  S Z=^(0) D I^DITR
	K ^UTILITY(U,$J,DDF(1)),DDF,DDT,DTO,DFR,DFN,DTN G DATA
	;
W	S Y=$P($T(@X),";",2) W !,"NOTE: This package also contains "_Y_"S",! Q:'$D(DIFQ(0))
	S %=1 W ?6,"SHALL I WRITE OVER EXISTING "_Y_"S OF THE SAME NAME" D YN^DICN I '% W !?6,"Answer YES to replace the current "_Y_"S with the incoming ones." G W
	S:%=2 DIFQ(X)=0 K:%<0 DIFQ
	Q
	;
OPT	;OPTION
RTN	;ROUTINE DOCUMENTATION NOTE
FUN	;FUNCTION
BUL	;BULLETIN
KEY	;SECURITY KEY
HEL	;HELP FRAME
DIP	;PRINT TEMPLATE
DIE	;INPUT TEMPLATE
DIB	;SORT TEMPLATE
DIS	;SCREEN TEMPLATE
	;
SBF	;FILE AND SUB FILE NUMBERS
IX	W "." S DIK="A" F %=0:0 S DIK=$O(^DD(D,DIK)) Q:DIK=""  K ^(DIK)
	S DA(1)=D,DIK="^DD("_D_"," D IXALL^DIK
	I $D(^DIC(D,"%",0)) S DIK="^DIC(D,""%""," G IXALL^DIK
	Q
B36(X)	Q $$N(X\(36*36)#36+1)_$$N(X\36#36+1)_$$N(X#36+1)
N(%)	Q $E("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",%)
MSG	;
	I $P(^XMB(3.9,XMZ,0),U,7)'="X" Q
	S X=$S($D(^XMB(3.9,XMZ,2,XCN,0)):^(0),1:"") Q:X=""
M0	D M1 Q:$P(X,"$END MESSAGE")=""  D SAVE,NT G M0
NT	S XCN=$O(^XMB(3.9,XMZ,2,XCN)) Q:XCN'?1.N  S X=^(XCN,0) Q
SAVE	D NT Q:$E(X)="$"  S Y=X D NT Q:$E(X)="$"
	I $A(X)=126 S A0=X D NT S X=A0_$E(X,2,999) K A0
	S:% @Y=$E(X,2,999) G SAVE
	Q
M1	S Y=$E(X,2,4),%=0 I Y="DDD" S D=+$P(X,"(#",2),%=DIFQ(D) Q:D  S:$P(X,"(#",2)["FILE SECURITY" %=DSEC Q
	Q:Y="END"
	I Y="DTA" S %=DIFQR(D) Q
	I (Y="OR ")!(Y="PKG") S %=1 Q
	I $T(@Y)]"" S %=1 Q
	Q

IBINIT2
IBINIT2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("DIFROM",$J),DIC S DIDUZ=0 S:$D(DUZ)#2 DIDUZ=DUZ S DUZ=.5
	I $D(^DIC(9.2,0))#2,^(0)?1"HEL".E S (DIC,DLAYGO)=9.2,N="HEL",DIC(0)="LX" G ADD
	Q
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R'>0  S X=$P(^(R,0),U,1) W "." K DA D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ^UTILITY("DIFROM",$J,N,X)=+Y K ^DIC(9.2,+Y,1),^(2),^(3),^(10) S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y D %XY^%RCR
	S DIK=DIC
HELP	S R=$O(^UTILITY("DIFROM",$J,N,R)) Q:R=""  W !,"'"_R_"' Help Frame filed." S DA=^(R)
	F X=0:0 S X=$O(^DIC(9.2,DA,2,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$P(I,U,2) S:Y]"" Y=$O(^DIC(9.2,"B",Y,0)) S ^(0)=$P(^DIC(9.2,DA,2,X,0),U,1)_U_$S(Y>0:Y,1:"")_U_$P(^(0),U,3,99)
	S I=0 F X=0:0 S X=$O(^DIC(9.2,DA,10,X)) Q:'X  I $D(^(X,0)) S Y=$P(^(0),U),Y=$S(Y]"":$O(^MAG("B",Y,0)),1:0) S:Y $P(^DIC(9.2,DA,10,X,0),U)=Y,I=I+1,%=X I 'Y K ^DIC(9.2,DA,10,X,0)
	I I S $P(^DIC(9.2,DA,10,0),U,3,4)=%_U_I
IX	D IX1^DIK G HELP
	;
U	I $D(DIRUT) S DIFQ=1
	W ! Q
REP	S DIR(0)="Y",DIR("A")="Shall I change the NAME of the file to "_DIF
	S DIR("??")="^D REP^DIFROMH1",DIR("B")="NO" D ^DIR G U:$D(DIRUT)
	I Y S DIE=1,DIFQ=0,DA=N,DR=".01////"_DIF D ^DIE Q
	S DIR("A")="Shall I replace your file with mine"
	S DIR("??")="^D AG^DIFROMH1" D ^DIR G U:$D(DIRUT)!'Y
	S DIU(0)="E",DIR("A")="Do you want to keep the Data"
	S DIR("??")="^D CHG^DIFROMH1" D ^DIR G U:$D(DIRUT)
	S:'Y DIU(0)=DIU(0)_"D"
	S DIR("A")="Do you want to keep the Templates"
	S DIR("??")="^D TEMP^DIFROMH1" D ^DIR G U:$D(DIRUT) S:'Y DIU(0)=DIU(0)_"T"
	S DIFQ(N)=1,DIFKEP(N)=DIU(0) W !?15," (",DIF,") " Q

IBINIT3
IBINIT3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("DIFROM",$J) S DIC(0)="LX",(DIC,DLAYGO)=3.6,N="BUL" D ADD:$D(^XMB(3.6,0))
	S X=0 F R=0:0 S X=$O(^UTILITY("DIFROM",$J,N,X)) Q:X=""  W !,"'",X,"' BULLETIN FILED -- Remember to add mail groups for new bulletins."
	I $D(^DIC(9.4,0))#2,^(0)?1"PACK".E S N="PKG",(DIC,DLAYGO)=9.4 D ADD
	G NP:'$D(DA) S %=+$O(^DIC(9.4,DA,22,"B",DIFROM,0)) I $D(^DIC(9.4,DA,22,%,0)) S $P(^(0),U,3)=DT
	I $D(^DIC(9.4,DA,0))#2 S %=$P(^(0),U,4) I %]"" S %=$O(^DIC(9.2,"B",%,0)) S:%]"" $P(^DIC(9.4,DA,0),U,4)=%
OR	I $D(^ORD(100.99))&$O(^UTILITY(U,$J,"OR","")) D EN^IBINIT4
NP	K DIC,^UTILITY("DIFROM",$J) S DIC(0)="LX" I $D(^DIC(19,0))#2,^(0)?1"OPTION".E S (DIC,DLAYGO)=19,N="OPT" D ADD,OP
	I $D(^DIC(19.1,0))#2,($P(^(0),U)?1"SECUR".E)!($P(^(0),U)="KEY") S (DIC,DLAYGO)=19.1,N="KEY" D ADD K ^UTILITY("DIFROM",$J)
	I $D(^DIC(9.8,0))#2,^(0)?1"ROUTINE^".E S (DIC,DLAYGO)=9.8,N="RTN" D ADD
	S DIC=.5,DLAYGO=0,N="FUN" D ADD
	S DIC("S")="I $P(^(0),U,4)=DIFL" F N="DIPT","DIBT","DIE" S DIC=U_N_"(" D ADD
	K DIC("S") S N="DIST(.404,",DIC=U_N,DLAYGO=.404 D ADD
	S DIC("S")="I $P(^(0),U,8)=DIFL",N="DIST(.403,",DIC=U_N,DLAYGO=.403 D ADD
	K ^UTILITY(U,$J),DIC,DLAYGO F DIFR="DIE","DIPT" D DIEZ
	K ^UTILITY("DIFROM",$J) Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS) D OS^DII
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S DIFR1=""
DZ1	S DIFR1=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1)) Q:DIFR1=""
	F DIFR2=0:0 S DIFR2=$O(^UTILITY("DIFROM",$J,DIFR,DIFR1,DIFR2)) Q:'DIFR2  S Y=DIFR2 I $D(@(U_DIFR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIFR,3)_"Z")
	G DZ1
	;
OP	S R=$O(^UTILITY("DIFROM",$J,N,R)) I R="" K ^UTILITY("DIFROM",$J) G Q
	W !,"'"_R_"' Option Filed" S DA=+^UTILITY("DIFROM",$J,N,R) G:$P(^(R),U,2,3)="XUCORE^"!($P(^(R),U,2,3)="XUCOMMAND^") OP
	I $D(^DIC(19,DA,220)) S %=$P(^(220),U) S:%]"" %=$O(^XMB(3.6,"B",%,0)) S $P(^DIC(19,DA,220),U)=%,%=$P(^(220),U,3) S:%]"" %=$O(^XMB(3.8,"B",%,0)) S $P(^DIC(19,DA,220),U,3)=%
	S %=$P(^DIC(19,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^DIC(19,DA,0),U,12)=%,%=$P(^(0),U,7),(DZ,DIX)=0
	D:$D(^DIC(19,DA,10,"B")) KAD(DA) S:%]"" %=$O(^DIC(9.2,"B",%,0)) S $P(^DIC(19,DA,0),U,7)=%,%=$P(^(0),U,4),%="MOQXL"[% K ^(10,"B"),^("C")
	F X=0:0 S X=$O(^DIC(19,DA,10,X)) Q:'X  S I=$S($D(^(X,0)):^(0),1:0),Y=$S($D(^(U)):^(U),1:"") K ^DIC(19,DA,10,X) I Y]"",% S D=$O(^DIC(19,"B",Y,0)) I D S ^DIC(19,DA,10,X,0)=D_U_$P(I,U,2,9),DZ=DZ+1,DIX=X
	S:% ^DIC(19,DA,10,0)="^19.01PI^"_DIX_U_DZ D IX1^DIK G OP
	;
ADD	F R=0:0 S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),DIFL=$S(N="DIST(.403,":$P(^(0),U,8),N="DIST(.404,":$P(^(0),U,2),1:$P(^(0),U,4)) W "." K DA D ^DIC I Y>0,'$D(DIFQ($E(N,1,3)))!$P(Y,U,3) S Y=Y_U D A
Q	Q
A	I N="BUL" K % S %(0)=$G(@(DIC_"+Y,2,0)")) F %=0:0 S %=$O(@(DIC_"+Y,2,%)")) Q:'%  S %(%)=$G(^(%,0))
	K:N'="KEY"&(N'="OPT") @(DIC_"+Y)") S ^UTILITY("DIFROM",$J,N,X)=Y S:$E(N,1,2)="DI" ^(X,+Y)="" S:N="PKG" DIFROM(0)=+Y Q:$P(Y,U,2,3)="XUCORE^"!($P(Y,U,2,3)="XUCOMMAND^")
	I N="BUL",%(0)]"" S @(DIC_"+Y,2,0)")=%(0) F %=0:0 S %=$O(%(%)) Q:'%  S @(DIC_"+Y,2,%,0)")=%(%)
	I $E(N,1,2)="DI",('DIFL)!('$D(^DD(+DIFL))) W !,"**WARNING--"_$S(N="DIE":"INPUT",N="DIPT":"PRINT",N="DIBT":"SORT",1:"FORM or BLOCK")_" template "_$P(Y,U,2)_" has been installed,",!,"but associated file "_DIFL_" not on your system!"
	I N="OPT" S:$P(^DIC(19,+Y,0),U,6)]"" DIOPT=$P(^(0),U,6) I $O(^UTILITY(U,$J,N,R,1,0)) K ^DIC(19,+Y,1)
	I N="DIST(.403," D BLK
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+Y,",DA=+Y,DIK=DIC D %XY^%RCR
	D IX1^DIK:N'="OPT" I N="OPT",$D(DIOPT) S:$P(^DIC(19,DA,0),U,6)="" $P(^(0),U,6)=DIOPT K DIOPT
	Q
BLK	F J=0:0 S J=$O(^UTILITY(U,$J,N,R,40,J)) Q:'J  I $D(^(J,0)) S %=$P(^(0),U,2) S:%]"" %=$O(^DIST(.404,"B",%,0)) S:% $P(^UTILITY(U,$J,N,R,40,J,0),U,2)=% D B1
	K A0,A1,A2,J,L Q
B1	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,40,L)) Q:'L  S A0=$G(^(L,0)),%=$P(A0,U) I %]"" S %=$O(^DIST(.404,"B",%,0)) I % S $P(A0,U)=%,^UTILITY(U,$J,N,R,40,J,"BLK",%,0)=A0
	S A0=$G(^UTILITY(U,$J,N,R,40,J,40,0)) Q:A0=""  K ^UTILITY(U,$J,N,R,40,J,40) S (A1,A2)=0
	F L=0:0 S L=$O(^UTILITY(U,$J,N,R,40,J,"BLK",L)) Q:'L  S ^UTILITY(U,$J,N,R,40,J,40,L,0)=^(L,0),A1=L,A2=A2+1
	S $P(A0,U,3,4)=A1_U_A2,^UTILITY(U,$J,N,R,40,J,40,0)=A0 K ^UTILITY(U,$J,N,R,40,J,"BLK")
	Q
KAD(D0)	N D1,X
	S X=0 F  S X=$O(^DIC(19,D0,10,"B",X)) Q:X'>0  S D1=0 F  S D1=$O(^DIC(19,D0,10,"B",X,D1)) Q:D1'>0  K ^DIC(19,"AD",X,D0,D1)
	Q

IBINIT4
IBINIT4	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
EN	S DA(1)=1,DIK="^ORD(100.99,1,5," I $D(^ORD(100.99,1,5,DA)) D ^DIK
	S %X="^UTILITY(U,$J,""OR"","_$O(^UTILITY(U,$J,"OR",""))_",",%Y=DIK_DA_","
	S:'$D(^ORD(100.99,1,5,0)) ^(0)="^100.995P^^" S $P(^(0),U,3,4)=DA_U_($P(^(0),U,4)+1)
	D %XY^%RCR S $P(^ORD(100.99,1,5,DA,0),U)=DA,%=$P(^(0),U,4)
	I %]"" S %=$O(^ORD(100.98,"B",%,0)) I %>0 S $P(^ORD(100.99,1,5,DA,0),U,4)=%
	D OR
	S DA(1)=1 D IX1^DIK
	Q
OR	S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,1,N)) Q:'N  S X=$P(^(N,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,0)=% S X=N,I=I+1,(R,J)=0,Y="" D OR1
	S:I $P(^ORD(100.99,1,5,DA,1,0),U,3,4)=X_U_I S (N,I)=0,X=""
	F  S N=$O(^ORD(100.99,1,5,DA,5,N)) Q:'N  S X=$P(^(N,0),U,3) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% $P(^ORD(100.99,1,5,DA,5,N,0),U,3)=% S X=N,I=I+1
	S:I $P(^ORD(100.99,1,5,DA,5,0),U,3,4)=X_U_I K N,R,X,Y,I,J
	Q
OR1	N X F  S R=$O(^ORD(100.99,1,5,DA,1,N,1,R)) Q:'R  S X=$P(^(R,0),U) I X]"" S %=$O(^ORD(101,"B",X,0)) D:'% ADDP S:% ^ORD(100.99,1,5,DA,1,N,1,R,0)=% S Y=R,J=J+1
	S:J $P(^ORD(100.99,1,5,DA,1,N,1,0),U,3,4)=Y_U_J
	Q
ADDP	N I,J,N,R,DA,DLAYGO S %=""
	S DIC="^ORD(101,",DIC(0)="LX",DLAYGO=101 D FILE^DICN K DIC Q:Y=-1  S %=+Y Q

IBINIT5
IBINIT5	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	K ^UTILITY("DIF",$J) S DIFRDIFI=1 F I=1:1:114 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;INTEGRATED BILLING^IB
	;;2I;PATIENT;^DPT(;1;y;n;;n;;;n
	;;
	;;36I;INSURANCE COMPANY;^DIC(36,;0;y;y;;n;;;n
	;;
	;;350;INTEGRATED BILLING ACTION;^IB(;0;y;y;;n;;;n;;
	;;
	;;350.1;IB ACTION TYPE;^IBE(350.1,;0;y;y;;n;;;y;m;y
	;;
	;;350.2I;IB ACTION CHARGE;^IBE(350.2,;0;y;y;;n;;;y;m;y
	;;
	;;350.21;IB ACTION STATUS;^IBE(350.21,;0;y;y;;n;;;n;;
	;;
	;;350.3I;IB CHARGE REMOVE REASONS;^IBE(350.3,;0;y;y;;n;;;y;m;y
	;;
	;;350.4ID;BILLABLE AMBULATORY SURGICAL CODE;^IBE(350.4,;0;y;y;;n;;;n;;
	;;
	;;350.41PI;UPDATE BILLABLE AMBULATORY SURGICAL CODE;^IBE(350.41,;0;y;y;;n;;;n;;
	;;
	;;350.5ID;BASC LOCALITY MODIFIER;^IBE(350.5,;0;y;y;;n;;;n;;
	;;
	;;350.6I;IB ARCHIVE/PURGE LOG;^IBE(350.6,;0;y;y;;n;;;n;;
	;;
	;;350.7IO;AMBULATORY CHECK-OFF SHEET;^IBE(350.7,;0;y;y;;n;;;n;;
	;;
	;;350.71OI;AMBULATORY SURG. CHECK-OFF SHEET PRINT FIELDS;^IBE(350.71,;0;y;y;;n;;;n;;
	;;
	;;350.8I;IB ERROR;^IBE(350.8,;0;y;y;;n;;;y;o;n
	;;
	;;350.9I;IB SITE PARAMETERS;^IBE(350.9,;0;y;y;;n;;;n;;
	;;
	;;351I;CATEGORY C BILLING CLOCK;^IBE(351,;0;y;y;;n;;;n;;
	;;
	;;351.1P;IB CONTINUOUS PATIENT;^IBE(351.1,;0;y;y;;n;;;n;;
	;;
	;;351.2PI;SPECIAL INPATIENT BILLING CASES;^IBE(351.2,;0;y;y;;n;;;n;;
	;;
	;;352.1I;BILLABLE APPOINTMENT TYPE;^IBE(352.1,;0;y;y;;n;;;y;m;y
	;;
	;;352.2P;NON-BILLABLE DISPOSITIONS;^IBE(352.2,;0;y;y;;n;;;n;;
	;;
	;;352.3P;NON-BILLABLE CLINIC STOP CODES;^IBE(352.3,;0;y;y;;n;;;n;;
	;;
	;;352.4P;NON-BILLABLE CLINICS;^IBE(352.4,;0;y;y;;n;;;n;;
	;;
	;;353;BILL FORM TYPE;^IBE(353,;0;y;y;;n;;;y;m;y
	;;
	;;353.1I;PLACE OF SERVICE;^IBE(353.1,;0;y;y;;n;;;y;o;y
	;;
	;;353.2I;TYPE OF SERVICE;^IBE(353.2,;0;y;y;;n;;;y;o;y
	;;
	;;354PI;BILLING PATIENT;^IBA(354,;0;y;y;;n;;;n;;
	;;
	;;354.1ID;BILLING EXEMPTIONS;^IBA(354.1,;0;y;y;;n;;;n;;
	;;
	;;354.2I;EXEMPTION REASON;^IBE(354.2,;0;y;y;;n;;;y;m;y
	;;
	;;354.3DI;BILLING THRESHOLDS;^IBE(354.3,;0;y;y;;n;;;y;m;y
	;;
	;;354.4P;BILLING ALERTS;^IBA(354.4,;0;y;y;;n;;;n;;
	;;
	;;354.5;BILLING ALERT DEFINITION;^IBE(354.5,;0;y;y;;n;;;y;m;y
	;;
	;;354.6;IB FORM LETTER;^IBE(354.6,;0;y;y;;n;;;y;m;y
	;;
	;;355.1I;TYPE OF PLAN;^IBE(355.1,;0;y;y;;n;;;y;o;y
	;;
	;;355.2;TYPE OF INSURANCE COVERAGE;^IBE(355.2,;0;y;y;;n;;;y;o;y
	;;
	;;355.3IP;GROUP INSURANCE PLAN;^IBA(355.3,;0;y;y;;n;;;n
	;;
	;;355.4ID;ANNUAL BENEFITS;^IBA(355.4,;0;y;y;;n;;;n
	;;
	;;355.5P;INSURANCE CLAIMS YEAR TO DATE;^IBA(355.5,;0;y;y;;n;;;n
	;;
	;;355.6;INSURANCE RIDERS;^IBE(355.6,;0;y;y;;n;;;y;m;y
	;;
	;;355.7PI;PERSONAL POLICY;^IBA(355.7,;0;y;y;;n;;;n;;
	;;
	;;356I;CLAIMS TRACKING;^IBT(356,;0;y;y;;n;;;n;
	;;
	;;356.1ID;HOSPITAL REVIEW;^IBT(356.1,;0;y;y;;n;;;n
	;;
	;;356.11I;CLAIMS TRACKING REVIEW TYPE;^IBE(356.11,;0;y;y;;n;;;y;m;y
	;;
	;;356.2ID;INSURANCE REVIEW;^IBT(356.2,;0;y;y;;n;;;n
	;;
	;;356.21;CLAIMS TRACKING DENIAL REASONS;^IBE(356.21,;0;y;y;;n;;;y;m;y
	;;
	;;356.3I;CLAIMS TRACKING SI/IS CATEGORIES;^IBE(356.3,;0;y;y;;n;;;y;m;y
	;;
	;;356.399PI;CLAIMS TRACKING/BILL;^IBT(356.399,;0;y;y;;n;;;n
	;;
	;;356.4I;CLAIMS TRACKING NON-ACUTE CLASSIFICATIONS;^IBE(356.4,;0;y;y;;n;;;y;m;y
	;;
	;;356.5P;CLAIMS TRACKING ALOS;^IBE(356.5,;0;y;y;;n;;;y;m;y
	;;
	;;356.6;CLAIMS TRACKING TYPE;^IBE(356.6,;0;y;y;;n;;;y;m;y
	;;
	;;356.7;CLAIMS TRACKING ACTION;^IBE(356.7,;0;y;y;;n;;;y;m;y
	;;
	;;356.8;CLAIMS TRACKING NON-BILLABLE REASONS;^IBE(356.8,;0;y;y;;n;;;y;m;y
	;;
	;;356.9IP;INPATIENT DIAGNOSIS;^IBT(356.9,;0;y;y;;n;;;n
	;;
	;;356.91PI;INPATIENT PROCEDURE;^IBT(356.91,;0;y;y;;n;;;n
	;;
	;;356.93PI;INPATIENT INTERIM DRG;^IBT(356.93,;0;y;y;;n;;;n;;
	;;
	;;356.94ID;INPATIENT PROVIDERS;^IBT(356.94,;0;y;y;;n;;;n
	;;
	;;357I;ENCOUNTER FORM;^IBE(357,;0;y;y;;n;;;n;;
	;;
	;;357.1I;ENCOUNTER FORM BLOCK;^IBE(357.1,;0;y;y;;n;;;n;;
	;;

IBINIT6
IBINIT6	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:1:62 S ^UTILITY("DIF",$J,DIFRDIFI)=$T(IXF+I),DIFRDIFI=DIFRDIFI+1
	Q
IXF	;;INTEGRATED BILLING^IB
	;;357.2I;SELECTION LIST;^IBE(357.2,;0;y;y;;n;;;n;;
	;;
	;;357.3I;SELECTION;^IBE(357.3,;0;y;y;;n;;;n;;
	;;
	;;357.4I;SELECTION GROUP;^IBE(357.4,;0;y;y;;n;;;n;;
	;;
	;;357.5I;DATA FIELD;^IBE(357.5,;0;y;y;;n;;;n;;
	;;
	;;357.6I;PACKAGE INTERFACE;^IBE(357.6,;0;y;y;;n;;;y;o;y
	;;
	;;357.7I;FORM LINE;^IBE(357.7,;0;y;y;;n;;;n;;
	;;
	;;357.8;TEXT AREA;^IBE(357.8,;0;y;y;;n;;;n;;
	;;
	;;357.91;MARKING AREA TYPE;^IBE(357.91,;0;y;y;;n;;;y;m;y
	;;
	;;357.92;PRINT CONDITIONS;^IBE(357.92,;0;y;y;;n;;;y;m;y
	;;
	;;358I;IMP/EXP ENCOUNTER FORM;^IBE(358,;0;y;y;;n;;;n;;
	;;
	;;358.1I;IMP/EXP ENCOUNTER FORM BLOCK;^IBE(358.1,;0;y;y;;n;;;n
	;;
	;;358.2I;IMP/EXP SELECTION LIST;^IBE(358.2,;0;y;y;;n;;;n
	;;
	;;358.3I;IMP/EXP SELECTION;^IBE(358.3,;0;y;y;;n;;;n
	;;
	;;358.4I;IMP/EXP SELECTION GROUP;^IBE(358.4,;0;y;y;;n;;;n
	;;
	;;358.5I;IMP/EXP DATA FIELD;^IBE(358.5,;0;y;y;;n;;;n
	;;
	;;358.6IO;IMP/EXP PACKAGE INTERFACE;^IBE(358.6,;0;y;y;;n;;;n
	;;
	;;358.7I;IMP/EXP FORM LINE;^IBE(358.7,;0;y;y;;n;;;n
	;;
	;;358.8;IMP/EXP TEXT AREA;^IBE(358.8,;0;y;y;;n;;;n
	;;
	;;358.91;IMP/EXP MARKING AREA;^IBE(358.91,;0;y;y;;n;;;n
	;;
	;;362.1I;IB AUTOMATED BILLING COMMENTS;^IBA(362.1,;0;y;y;;n;;;n
	;;
	;;362.3IP;IB BILL/CLAIMS DIAGNOSIS;^IBA(362.3,;0;y;y;;n;;;n
	;;
	;;362.4I;IB BILL/CLAIMS PRESCRIPTION REFILL;^IBA(362.4,;0;y;y;;n;;;n
	;;
	;;362.5D;IB BILL/CLAIMS PROSTHETICS;^IBA(362.5,;0;y;y;;n;;;n
	;;
	;;399I;BILL/CLAIMS;^DGCR(399,;0;y;y;;n;;;n;;
	;;
	;;399.1I;MCCR UTILITY;^DGCR(399.1,;0;y;y;;n;;;y;m;y
	;;
	;;399.2I;REVENUE CODE;^DGCR(399.2,;0;y;y;;n;;;y;m;y
	;;
	;;399.3I;RATE TYPE;^DGCR(399.3,;0;y;y;;n;;;y;m;y
	;;
	;;399.4;MCCR INCONSISTENT DATA ELEMENTS;^DGCR(399.4,;0;y;y;;n;;;y;m;y
	;;
	;;399.5ID;BILLING RATES;^DGCR(399.5,;0;y;y;;n;;;y;m;y
	;;
	;;409.95P;PRINT MANAGER CLINIC SETUP;^SD(409.95,;0;y;n;;n;;;n
	;;
	;;409.96P;PRINT MANAGER DIVISION SETUP;^SD(409.96,;0;y;n;;n;;;n
	;;

IBNTEG
IBNTEG	;ISC/XTSUMBLD KERNEL - Package checksum checker ;MAR 21, 1994@00:43:44
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;7.2;MAR 21, 1994@00:43:44
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBNTEG0
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
DGCRAMS	;;6214
DGCRNS	;;3661765
DGCRP3	;;107277
IB20IN	;;8009057
IB20PRE	;;8986169
IB20PT	;;7649477
IB20PT1	;;11063312
IB20PT2	;;4475525
IB20PT3	;;8076696
IB20PT31	;;6506886
IB20PT32	;;4317775
IB20PT4	;;7440773
IB20PT41	;;9986705
IB20PT42	;;9509377
IB20PT43	;;7387627
IB20PT44	;;8110297
IB20PT45	;;8306385
IB20PT46	;;8451128
IB20PT47	;;8563366
IB20PT48	;;9037639
IB20PT5	;;7032869
IB20PT51	;;7063314
IB20PT6	;;8955028
IB20PT61	;;6802850
IB20PT62	;;3225606
IB20PT7	;;8586962
IB20PT71	;;3338696
IB20PT8	;;2336162
IB20PT81	;;14448170
IB20PT82	;;11280903
IB20PT83	;;11209659
IB20PT84	;;16844506
IB20PT85	;;10911111
IB20PT86	;;8217996
IB20PT87	;;8505416
IB20PT88	;;7644188
IB20PT89	;;4557349
IB20PT8A	;;12040816
IB20PT8B	;;6866758
IB20PT8C	;;4652761
IBACVA	;;1769880
IBACVA1	;;4739079
IBACVA2	;;5370087
IBAERR	;;13780590
IBAERR1	;;5702039
IBAERR2	;;5326975
IBAERR3	;;9712468
IBAFIL	;;1923294
IBAMTBU	;;9650419
IBAMTBU1	;;9010226
IBAMTBU2	;;12041191
IBAMTC	;;6299589
IBAMTC1	;;7286348
IBAMTC2	;;3598454
IBAMTC3	;;6705455
IBAMTD	;;6465662
IBAMTD1	;;3267263
IBAMTD2	;;4636001
IBAMTED	;;2233627
IBAMTED1	;;8697962
IBAMTEDU	;;6182045
IBAMTEL	;;11828371
IBAMTI	;;9852587
IBAMTI1	;;7575816
IBAMTI2	;;2115607
IBAMTS	;;4935501
IBAMTS1	;;3867145
IBAMTS2	;;4234104
IBAPDX	;;5950991
IBAPDX0	;;3962132
IBAPDX1	;;10543843
IBAREP	;;2549777
IBARX	;;8244090
IBARX1	;;6596075
IBARXDOC	;;213627
IBARXEB	;;5398431
IBARXEC	;;9610214
IBARXEC0	;;9458042
IBARXEC1	;;11194005
IBARXEC2	;;3871811
IBARXEC3	;;6042009
IBARXEC4	;;612524
IBARXEC5	;;4692020
IBARXECA	;;5437412
IBARXEI	;;10800989
IBARXEP	;;6629685
IBARXEPE	;;2540349
IBARXEPL	;;10573402
IBARXEPV	;;10609884
IBARXET	;;9354161
IBARXEU	;;6806792
IBARXEU0	;;3601400
IBARXEU1	;;4150451
IBARXEU3	;;8350055
IBARXEU4	;;2171391
IBARXEU5	;;5703854
IBARXEVT	;;689754
IBARXEX	;;11713090
IBARXEX1	;;4260548
IBAUTL	;;6486243
IBAUTL1	;;2419237
IBAUTL2	;;4160094
IBAUTL3	;;6062540
IBAUTL4	;;6590985
IBAUTL5	;;2584138
IBAUTL6	;;6890980
IBAUTL7	;;3072190
IBCA	;;13403312
IBCA0	;;16511939
IBCA1	;;8761375
IBCA2	;;6208012
IBCA3	;;12718941
IBCAMS	;;1172097
IBCB	;;13881326
IBCB1	;;9850339
IBCB2	;;5883922
IBCBB	;;3144978
IBCBB1	;;5791591
IBCBB2	;;1343158
IBCBR	;;6665598
IBCBULL	;;9263228
IBCC	;;6548911
IBCCC	;;6939695
IBCCC1	;;4406795
IBCCC2	;;12947856
IBCCC3	;;4412585
IBCCPT	;;15501049
IBCD	;;3476576
IBCD1	;;4844291
IBCD2	;;8429080
IBCD3	;;9743645
IBCD4	;;8964833
IBCD5	;;9117539
IBCDC	;;4705205
IBCDE	;;7152633
IBCF	;;5123217
IBCF1	;;8752631
IBCF10	;;13246466
IBCF11	;;3618060
IBCF12	;;8199876
IBCF13	;;3359698
IBCF14	;;4671426
IBCF1TP	;;4608893
IBCF2	;;5400608
IBCF21	;;6867457
IBCF22	;;3951879
IBCF23	;;7041230
IBCF2P	;;5194801
IBCF2TP	;;5572923
IBCF3	;;8119511
IBCF31	;;7087284
IBCF32	;;4769225
IBCF33	;;8685819
IBCF331	;;3343184
IBCF34	;;4562880
IBCF3P	;;8274883
IBCF3TP	;;6312363
IBCF4	;;5431811
IBCFP	;;13317164
IBCMENU	;;5258201
IBCNADD	;;2016355
IBCNQ	;;12255106

IBNTEG0
IBNTEG0	;ISC/XTSUMBLD KERNEL - Package checksum checker ;MAR 21, 1994@00:43:44
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;7.2;MAR 21, 1994@00:43:44
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBNTEG01
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBCNQ1	;;8213160
IBCNS	;;5047234
IBCNS1	;;5577010
IBCNS2	;;3745315
IBCNSA	;;6396949
IBCNSA0	;;3165953
IBCNSA1	;;11651972
IBCNSA2	;;2611849
IBCNSBL	;;2445320
IBCNSBL1	;;8197763
IBCNSC	;;7465999
IBCNSC0	;;6126055
IBCNSC01	;;7789069
IBCNSC1	;;3850831
IBCNSC2	;;8154718
IBCNSC3	;;6631804
IBCNSD	;;6629671
IBCNSD1	;;1158146
IBCNSEH	;;4917879
IBCNSEVT	;;393303
IBCNSM	;;5264394
IBCNSM1	;;5083086
IBCNSM2	;;4308601
IBCNSM3	;;11770601
IBCNSM31	;;5120018
IBCNSM4	;;1683566
IBCNSM5	;;6602815
IBCNSM6	;;5555330
IBCNSM7	;;8914463
IBCNSM8	;;8047222
IBCNSM9	;;11256347
IBCNSOK	;;10324180
IBCNSOK1	;;6457752
IBCNSP	;;8601571
IBCNSP0	;;5809789
IBCNSP01	;;8590441
IBCNSP02	;;8471424
IBCNSP1	;;4868050
IBCNSP2	;;8141199
IBCNSP3	;;6580126
IBCNSU	;;3908800
IBCNSU1	;;2310797
IBCNSV	;;640320
IBCOC	;;950251
IBCOC1	;;892863
IBCONS1	;;7413645
IBCONS2	;;11154246
IBCONS3	;;3101025
IBCONSC	;;9041021
IBCOPV	;;9900610
IBCOPV1	;;9480865
IBCOPV2	;;7533725
IBCORC	;;9398632
IBCORC1	;;5338099
IBCORC2	;;3690596
IBCRTN	;;4948111
IBCSC1	;;5176501
IBCSC2	;;5200799
IBCSC3	;;12494861
IBCSC4	;;9729300
IBCSC4A	;;14651904
IBCSC4B	;;16543108
IBCSC4C	;;11565822
IBCSC4D	;;9469474
IBCSC4E	;;9915642
IBCSC5	;;8009258
IBCSC5A	;;12648510
IBCSC5B	;;9285889
IBCSC5C	;;8047246
IBCSC6	;;6853801
IBCSC61	;;2995269
IBCSC7	;;4127768
IBCSC8	;;2681062
IBCSC82	;;4196265
IBCSC8H	;;1582522
IBCSCE	;;6334542
IBCSCE1	;;6140000
IBCSCH	;;15072243
IBCSCH1	;;9538370
IBCSCP	;;5142249
IBCSCU	;;6000762
IBCU	;;8741634
IBCU1	;;5276295
IBCU2	;;6391688
IBCU3	;;6929850
IBCU4	;;7789095
IBCU41	;;5944776
IBCU5	;;5504494
IBCU6	;;8585767
IBCU61	;;3598334
IBCU62	;;6633813
IBCU63	;;6510058
IBCU64	;;6703156
IBCU7	;;16823266
IBCU71	;;3477243
IBCU8	;;4608945
IBCU81	;;3744610
IBCU82	;;11651075
IBCVA	;;3230375
IBCVA0	;;10422773
IBCVA1	;;9853216
IBDE	;;3003311
IBDE1	;;6677694
IBDE1A	;;3361379
IBDE1B	;;1339223
IBDE2	;;383336
IBDE3	;;9522902
IBDEHELP	;;7829287
IBDEI001	;;5914267
IBDEI002	;;3199545
IBDEI003	;;3723952
IBDEI004	;;6281872
IBDEI005	;;6938907
IBDEI006	;;2677613
IBDEI007	;;13070825
IBDEI008	;;14787357
IBDEI009	;;16942755
IBDEI00A	;;1964916
IBDEI00B	;;6821303
IBDEI00C	;;7822738
IBDEI00D	;;8086479
IBDEI00E	;;7766991
IBDEI00F	;;2531852
IBDEI00G	;;3990534
IBDEI00H	;;4023981
IBDEI00I	;;974293
IBDEI00J	;;6810223
IBDEI00K	;;3736068
IBDEI00L	;;3749473
IBDEI00M	;;3784750
IBDEI00N	;;3796078
IBDEI00O	;;2452621
IBDEI00P	;;6331684
IBDEI00Q	;;2106265
IBDEI00R	;;7573266
IBDEI00S	;;7561219
IBDEI00T	;;7123935
IBDEI00U	;;7766530
IBDEI00V	;;878660
IBDEI00W	;;4726931
IBDEI00X	;;4236815
IBDEI00Y	;;4411642
IBDEI00Z	;;3862497
IBDEI010	;;4088410
IBDEI011	;;3897227
IBDEI012	;;3867997
IBDEI013	;;3919512
IBDEI014	;;3960565
IBDEI015	;;3834719
IBDEI016	;;4326482
IBDEI017	;;4364433
IBDEI018	;;3977322
IBDEI019	;;4203924
IBDEI01A	;;3887525
IBDEI01B	;;3920282
IBDEI01C	;;2644559
IBDEI01D	;;8724015
IBDEI01E	;;9940913
IBDEI01F	;;7432564
IBDEI01G	;;6432912

IBNTEG01
IBNTEG01	;ISC/XTSUMBLD KERNEL - Package checksum checker ;MAR 21, 1994@00:43:44
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;7.2;MAR 21, 1994@00:43:44
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	G CONT^IBNTEG02
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBDEI01H	;;7992688
IBDEI01I	;;6311885
IBDEI01J	;;3859113
IBDEI01K	;;5879389
IBDEI01L	;;7094485
IBDEI01M	;;6372207
IBDEI01N	;;5942935
IBDEI01O	;;8541541
IBDEI01P	;;5651382
IBDEI01Q	;;6723525
IBDEI01R	;;2279208
IBDEI01S	;;996991
IBDEI01T	;;6458903
IBDEI01U	;;2419842
IBDEI01V	;;920330
IBDEI01W	;;2626862
IBDEI01X	;;1182089
IBDEI01Y	;;3699161
IBDEINI1	;;5628748
IBDEINI2	;;5232516
IBDEINI3	;;16091945
IBDEINI4	;;3357688
IBDEINI5	;;1691661
IBDEINIS	;;2205388
IBDEINIT	;;10989804
IBDF10	;;9760433
IBDF10A	;;8225317
IBDF10B	;;4334206
IBDF11	;;3608443
IBDF11A	;;3372216
IBDF12	;;2936265
IBDF13	;;5611144
IBDF14	;;7804726
IBDF15	;;2784960
IBDF16	;;8130393
IBDF17	;;7034989
IBDF18	;;5760005
IBDF19	;;3093172
IBDF1A	;;7658975
IBDF1B	;;9947551
IBDF1B1	;;11669586
IBDF1B1A	;;7661304
IBDF1B1B	;;1767481
IBDF1B2	;;2029190
IBDF1B3	;;5211017
IBDF1B5	;;2971706
IBDF1BA	;;11243446
IBDF1C	;;3533740
IBDF2A	;;10749365
IBDF2B	;;7042800
IBDF2B1	;;2199728
IBDF2D	;;10365846
IBDF2D1	;;3762256
IBDF2E	;;1318742
IBDF2F	;;3278399
IBDF3	;;7003790
IBDF4	;;5584361
IBDF4A	;;4167881
IBDF5	;;9847863
IBDF5A	;;3027638
IBDF5B	;;6006533
IBDF5C	;;3316889
IBDF6	;;8969820
IBDF6A	;;5925315
IBDF6C	;;906078
IBDF7	;;2562906
IBDF8	;;1759861
IBDF9	;;3690557
IBDF9A	;;10720154
IBDF9A1	;;5968374
IBDF9B	;;7645681
IBDF9B1	;;12759802
IBDF9C	;;5498868
IBDF9D	;;4630521
IBDF9E	;;5793958
IBDFN	;;10732403
IBDFN1	;;2496841
IBDFN2	;;6231082
IBDFN3	;;2563820
IBDFN4	;;2666489
IBDFN5	;;3054776
IBDFN6	;;4088594
IBDFU	;;5914828
IBDFU1	;;5169538
IBDFU10	;;522617
IBDFU1A	;;1402593
IBDFU1B	;;3304286
IBDFU2	;;11114839
IBDFU2A	;;8665828
IBDFU2B	;;7574217
IBDFU2C	;;7146508
IBDFU3	;;4202120
IBDFU4	;;4018137
IBDFU5	;;7337436
IBDFU5A	;;2508527
IBDFU6	;;330526
IBDFU7	;;692991
IBDFU8	;;6185271
IBDFU9	;;1965684
IBDFUA	;;1080437
IBEBR	;;6557036
IBEBRH	;;2330059
IBECEA	;;4832433
IBECEA0	;;7120498
IBECEA1	;;6495786
IBECEA2	;;8039946
IBECEA21	;;9541385
IBECEA22	;;3918054
IBECEA3	;;7679170
IBECEA31	;;9702269
IBECEA32	;;11121791
IBECEA33	;;9962755
IBECEA4	;;5275337
IBECEA5	;;5154868
IBECEA51	;;8011607
IBECEAU	;;7007799
IBECEAU1	;;12296342
IBECEAU2	;;9011739
IBECEAU3	;;2830374
IBECEAU4	;;6695615
IBECK	;;2104265
IBECPF	;;788382
IBECPTE	;;8741638
IBECPTT	;;6969487
IBECPTZ	;;2766869
IBEF	;;2149816
IBEFCOP	;;1800588
IBEFUNC	;;2552428
IBEFUNC1	;;5309761
IBEFUNC2	;;2541763
IBEFUTL	;;7747735
IBEFUTL1	;;4273452
IBEMTBC	;;6354798
IBEMTF	;;7890309
IBEMTF1	;;5726092
IBEMTF2	;;5545891
IBEMTO	;;7101853
IBEMTO1	;;6889786
IBEPAR	;;12386948
IBEPAR1	;;2533964
IBERS	;;10932371
IBERS1	;;8824914
IBERS2	;;7044980
IBERS3	;;5817160
IBERSE	;;9487433
IBERSI	;;3820304
IBERSP	;;5307050
IBERSP1	;;4237227
IBESTAT	;;3068706
IBETIME	;;217627
IBOA31	;;7891797
IBOA32	;;2647903
IBOAMS	;;10363537
IBOBCC	;;4521115
IBOBCC1	;;3836641
IBOBCR6	;;4908726
IBOBCRT	;;1471152
IBOBL	;;7366044
IBOCHK	;;7187383
IBOCNC	;;3176152
IBOCNC1	;;7495773
IBOCNC2	;;8792370
IBOCOSI	;;5228030

IBNTEG02
IBNTEG02	;ISC/XTSUMBLD KERNEL - Package checksum checker ;MAR 21, 1994@00:43:44
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;7.2;MAR 21, 1994@00:43:44
	S XT4="I 1",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
CONT	F XT1=1:1 S XT2=$T(ROU+XT1) Q:XT2=""  S X=$P(XT2," ",1),XT3=$P(XT2,";",3) X XT4 I $T W !,X X ^%ZOSF("TEST") S:'$T XT3=0 X:XT3 ^%ZOSF("RSUM") W ?10,$S('XT3:"Routine not in UCI",XT3'=Y:"Calculated "_$C(7)_Y_", off by "_(Y-XT3),1:"ok")
	;
	K %1,%2,%3,X,Y,XT1,XT2,XT3,XT4 Q
ONE	S XT4="I $D(^UTILITY($J,X))",X=$T(+3) W !!,"Checksum routine created on ",$P(X,";",4)," by KERNEL V",$P(X,";",3),!
	W !,"Check a subset of routines:" K ^UTILITY($J) X ^%ZOSF("RSEL")
	W ! G CONT
ROU	;;
IBOCPD	;;1720455
IBOCPDS	;;5830293
IBODISP	;;2933885
IBODIV	;;5128254
IBOEMP	;;6678171
IBOEMP1	;;10672548
IBOEMP2	;;6906404
IBOHLD1	;;4207713
IBOHLD2	;;5592060
IBOLK	;;7791103
IBOLK1	;;2492902
IBOMBL	;;8192932
IBOMTC	;;1690451
IBOMTC1	;;4373193
IBOMTE	;;5475821
IBOMTE1	;;7538361
IBOMTE2	;;3031067
IBOMTP	;;1425622
IBOMTP1	;;8257030
IBORAT	;;2629438
IBORAT1A	;;1249079
IBORAT1B	;;747816
IBORAT1C	;;2564792
IBORAT2A	;;2888714
IBORAT2B	;;1609133
IBORAT2C	;;4187545
IBORT	;;12589852
IBORT1	;;5196896
IBOST	;;8728133
IBOSTUS	;;8222172
IBOSTUS1	;;13901156
IBOTR	;;6890483
IBOTR1	;;9609343
IBOTR2	;;4054313
IBOTR3	;;7294292
IBOTR4	;;4986294
IBOUNP1	;;5103611
IBOUNP2	;;5551837
IBOUNP3	;;11102312
IBOUNP4	;;5816740
IBOUNP5	;;4930314
IBOUNP6	;;11719330
IBOUTL	;;3588665
IBOVOP	;;3951706
IBOVOP1	;;6521237
IBOVOP2	;;6328287
IBP	;;4383002
IBPA	;;5621480
IBPEX	;;4674014
IBPF	;;3366298
IBPF1	;;3550746
IBPFU	;;1975348
IBPO	;;6256568
IBPP	;;3866201
IBPU	;;6660057
IBPU1	;;4549333
IBPU2	;;3153479
IBPUBUL	;;4295755
IBPUDEL	;;9049505
IBR	;;4785208
IBRBUL	;;4871478
IBRCON1	;;11061579
IBRCON2	;;5758144
IBRCON3	;;2246092
IBRFN	;;1579924
IBRFN1	;;2791885
IBRFN2	;;3905109
IBRREL	;;10253828
IBRUTL	;;2441491
IBTOAT	;;5478898
IBTOAT1	;;5305537
IBTOAT2	;;2761554
IBTOBI	;;8662378
IBTOBI1	;;6435712
IBTOBI2	;;7990714
IBTOBI3	;;6401647
IBTOBI4	;;6224530
IBTODD	;;8031779
IBTODD1	;;8068439
IBTOLR	;;6224360
IBTONB	;;1885921
IBTOPW	;;10707392
IBTOSA	;;8113371
IBTOSUM	;;9538577
IBTOSUM1	;;8816791
IBTOSUM2	;;9298424
IBTOTR	;;5609897
IBTOUA	;;6974196
IBTOUR	;;10111309
IBTOUR1	;;7984547
IBTOUR2	;;6908472
IBTOUR3	;;8357145
IBTOUR4	;;8040075
IBTOUR5	;;4041626
IBTOVS	;;1551317
IBTRC	;;10516194
IBTRC1	;;5987611
IBTRC2	;;3262204
IBTRC3	;;3166666
IBTRC4	;;8767502
IBTRCD	;;9107959
IBTRCD0	;;7861660
IBTRCD1	;;8922819
IBTRD	;;7786538
IBTRD1	;;7381107
IBTRDD	;;2526056
IBTRDD1	;;597735
IBTRE	;;10429015
IBTRE0	;;598105
IBTRE1	;;8033144
IBTRE2	;;11012571
IBTRE20	;;5512238
IBTRE3	;;7554651
IBTRE4	;;6681407
IBTRE5	;;8002645
IBTRE6	;;4226128
IBTRED	;;8017886
IBTRED0	;;8966982
IBTRED01	;;11523940
IBTRED1	;;3540207
IBTRED2	;;2529514
IBTRKR	;;7275239
IBTRKR1	;;3200384
IBTRKR2	;;2075452
IBTRKR3	;;9828445
IBTRKR31	;;4093132
IBTRKR4	;;6029559
IBTRKR41	;;5933356
IBTRKR5	;;8668310
IBTRP	;;2908119
IBTRPR	;;9093794
IBTRPR0	;;9571992
IBTRPR01	;;9199268
IBTRPR1	;;6920311
IBTRPR2	;;1544197
IBTRV	;;8563669
IBTRV1	;;5485789
IBTRV2	;;7873619
IBTRV3	;;8401862
IBTRV31	;;6699387
IBTRVD	;;3563633
IBTRVD0	;;9150563
IBTRVD1	;;8867639
IBTUTL	;;6486404
IBTUTL1	;;5474483
IBTUTL2	;;2288421
IBTUTL3	;;7164634
IBTUTL4	;;14424130

IBOA31
IBOA31	;ALB/AAS - PRINT ALL BILLS FOR A PATIENT ; 04/18/90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRA31
EN	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOA31-1" D T0^%ZOSV ;start rt clock
	S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC Q:Y<1  S DFN=+Y
	S DIR(0)="Y",DIR("A")="Include Pharmacy Co-Pay charges on this report",DIR("B")="NO"
	S DIR("?",1)="    Enter:  'Y'  -  To include Pharmacy Co-pay charges on this report"
	S DIR("?",2)="            'N'  -  To exclude Pharmacy Co-pay charges on this report"
	S DIR("?")="            '^'  -  To select a new patient"
	D ^DIR K DIR G:$D(DIRUT) END S IBIBRX=Y
	W !,"You will need a 132 column printer for this report."
	S %ZIS="QM" D ^%ZIS G:POP ENQ
	I $D(IO("Q")) K IO("Q") D  G ENQ
	.S ZTDESC="IB - PRINT ALL BILLS FOR A PATIENT",ZTRTN="DQ^IBOA31",ZTSAVE("DFN")="",ZTSAVE("IB*")=""
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
DQ	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOA31-2" D T0^%ZOSV ;start rt clock
	U IO S IBPAG=0 D NOW^%DTC S Y=% X ^DD("DD") S IBNOW=Y,$P(IBLINE,"-",IOM+1)=""
	S IBQUIT=0,IBN=$$PT^IBEFUNC(DFN) D UTIL^IBCA3,UTIL^IBOA32
	I '$D(^UTILITY($J)) W !,"No Bills On File for ",$P(IBN,"^"),"  SSN: ",$P(IBN,"^",2),"." G ENQ
	D HDR1 S (IBDT,IBIFN)=""
	; - loop through all bills
	F  S IBDT=$O(^UTILITY($J,IBDT)) Q:IBDT=""!(IBQUIT)  D
	. F  S IBIFN=$O(^UTILITY($J,IBDT,IBIFN)) Q:IBIFN=""!(IBQUIT)  D @($S($E(IBIFN,$L(IBIFN))="X":"^IBOA32",1:"ONE"))
	D:'IBQUIT PAUSE
ENQ	W ! G END
	;
ONE	D GVAR^IBCBB
	D:($Y>(IOSL-5)) HDR Q:IBQUIT
	W !,IBBNO,?8,$$DAT1^IBOUTL($P(IBNDS,"^",12)),?18,$P($G(^DGCR(399.3,+IBAT,0)),"^")
	W ?37,$S(IBCL=1:"INPATIENT",IBCL=2:"HUMANIT. (INPT)",IBCL=3:"OUTPATIENT",IBCL=4:"HUMANIT. (OPT)",1:""),?54
	F I=$S(IBCL<3!('$O(^DGCR(399,IBIFN,"OP",0))):IBEVDT,1:$O(^DGCR(399,IBIFN,"OP",0))),IBFDT,IBTDT W $S(I]"":$$DAT1^IBOUTL(I)_"  ",1:"          ")
	S X=+$$TPR^PRCAFN(IBIFN) W $J($S(X<0:0,1:X),8,2)
	W ?94,$S(IBST=1:"ENTERED/NOT REV.",IBST=2:"REVIEWED",IBST=3:"AUTHORIZED",IBST=4:"PRINTED",IBST=7:"CANCELLED",1:"")
	W ?112,$P("NON-PAYMENT/ZERO^ADMIT - DISCHARGE^INTERIM - FIRST^INTERIM - CONTINUING^INTERIM - LAST^LATE CHARGE(S) ONLY^ADJUSTMENT OF PRIOR^REPLACEMENT OF PRIOR","^",(IBTF+1))
	; - print remaining outpatient visit dates
	S IBOPD=$O(^DGCR(399,IBIFN,"OP",0)) Q:'IBOPD
	F  S IBOPD=$O(^DGCR(399,IBIFN,"OP",IBOPD)) Q:'IBOPD  D  Q:IBQUIT
	. D:($Y>(IOSL-5)) HDR Q:IBQUIT  W !?54,$$DAT1^IBOUTL(IBOPD)
	Q
	;
HDR	I $E(IOST,1,2)["C-" D PAUSE Q:IBQUIT
HDR1	S IBPAG=IBPAG+1 W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF
	W "List of all Bills for ",$P(IBN,"^"),"  SSN: ",$P(IBN,"^",2),"  ",?(IOM-31),IBNOW,"  PAGE ",IBPAG
	W !,"BILL",?10,"DATE",?54,"DATE OF",?63,"STATEMENT  STATEMENT  AMOUNT"
	W !,"NO.      PRINTED  ACTION/RATE TYPE   CLASSIFICATION    CARE    FROM DATE   TO DATE  COLLECTED STATUS            TIMEFRAME OF BILL"
	W !,IBLINE
	Q
	;
PAUSE	S IBX1="" R:$E(IOST,1,2)["C-" !!!,"Enter ""^"" to quit, or return to continue",IBX1:DTIME S IBQUIT=$S(IBX1["^":1,1:0) Q
	;
END	K ^UTILITY($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOA31" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D END^IBCBB1
	K IBIFN1,IBQUIT,IBX1,IBDT,IBCNT,IBN,DFN,IBIFN,IBLINE,IBNOW,IBPAG,IBOPD,IBIBRX,DIRUT,DUOUT,DTOUT,X,Y
	D ^%ZISC G EN

IBOA32
IBOA32	;ALB/CPM - PRINT ALL BILLS FOR A PATIENT (CON'T) ; 28-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRA32
	;
	; Print out IB Actions onto the list.
	D:($Y>(IOSL-5)) HDR^IBOA31 Q:IBQUIT
	N IBND,IBND1,X
	S IBND=$G(^IB($E(IBIFN,1,$L(IBIFN)-1),0)),IBND1=$G(^(1))
	W !,$S($P(IBND,"^",11)]"":$P($P(IBND,"^",11),"-",2),$P(IBND,"^",5)=99:"",$P(IBND,"^",5)=10:"",1:"Pending")
	W ?8,$$DAT1^IBOUTL($S($P(IBND,"^",11)="":"",$P(IBND,"^",5)>2&($P(IBND,"^",5)'=99):$P(IBND1,"^",4)\1,1:""))
	S X=$P($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")," ",2,99)
	W ?18,$E($P(X," ",1,$L(X," ")-1),1,17)
	W ?37,$S($P(IBND,"^",3)<7:"PHARMACY COPAY",$P(IBND1,"^",5):"CHAMPVA SUBSIST",1:"AUT MEANS TEST")
	W ?54,$$DAT1^IBOUTL(-IBDT)
	W ?64,$$DAT1^IBOUTL($S($P(IBND,"^",14):$P(IBND,"^",14),1:$P(IBND1,"^",2)\1))
	W ?74,$$DAT1^IBOUTL($S($P(IBND,"^",15):$P(IBND,"^",15),1:$P(IBND1,"^",2)\1))
	W ?89,"N/A",?94,$E($P($G(^IBE(350.21,+$P(IBND,"^",5),0)),"^",2),1,17)
	Q
	;
UTIL	; Gather all IB Actions for a patient.
	N DATE,IBN,X,A,B,C,D,E
	S IBN=0 F  S IBN=$O(^IB("C",DFN,IBN)) Q:'IBN  S X=$G(^IB(IBN,0)) D:X
	. I 'IBIBRX,$E($G(^IBE(350.1,+$P(X,"^",3),0)),1,3)="PSO" Q
	. Q:$P(X,"^",8)["ADMISSION"
	. Q:'$D(^IB("APDT",IBN))
	. S (C,D)="",C=$O(^IB("APDT",IBN,C)),D=$O(^IB("APDT",IBN,C,D))
	. S E=$P($G(^IB(D,0)),U,3)
	. S A=$P($G(^IBE(350.1,E,0)),U,5)
	. S IBN=$S(A=2:$P($Q(^IB("APDT",IBN,C,D)),")",1),A=3:$P($Q(^IB("APDT",IBN,C,D)),")",1),1:IBN)
	. I $P(IBN,",",4)>0 S IBN=$P(IBN,",",4)
	. S DATE=$P($G(^IB(+$P(X,"^",16),0)),"^",17)
	. S:'DATE DATE=$P($G(^IB(IBN,1)),"^",5)
	. S:'DATE DATE=$P($G(^IB(IBN,1)),"^",2)\1
	. S:DATE ^UTILITY($J,-DATE,IBN_"X")=""
	Q

IBOAMS
IBOAMS	;ALB/AAS - PRINT REVENUE CODE TOTALS FOR MEANS TEST AMIS ; 10-SEP-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRAMS1
	;
EN	;  - Report of inpatient and nhcu per diems
	;***
	;S XRTL=$ZU(0),XRTN="IBOAMS-1" D T0^%ZOSV ;start rt clock
	;
	D HOME^%ZIS W @IOF,?19,"Report of Revenue Code Totals by Rate Type",!!!
	S DIC="^DGCR(399.3,",DIC(0)="AEQMN",DIC("A")="Select Means Test Rate Type: "
	S IBRT="" F  S IBRT=$O(^DGCR(399.3,"B",IBRT)) Q:IBRT=""  I IBRT["MEANS TEST" S DIC("B")=$O(^(IBRT,0)) Q
	D ^DIC K DIC G:+Y<1 ENQ S IBRT=+Y
	;
DATE	W ! S %DT="AEPX",%DT("A")="START WITH DATE FIRST PRINTED: " D ^%DT K %DT G ENQ:Y<1 S IBBDT=Y
DATE1	W ! S %DT="EPX" R !,"GO TO DATE FIRST PRINTED: ",X:DTIME S:X=" " X=IBBDT G ENQ:(X="")!(X["^") D ^%DT K %DT G DATE1:Y<1 S IBEDT=Y I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
	;
	W ! S DIR(0)="Y",DIR("A")="PRINT SUMMARY PAGE ONLY",DIR("B")="YES" D ^DIR K DIR G:$D(DIRUT) ENQ S IBSUM=Y
	;
DEV	W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP ENQ
	I $D(IO("Q")) K IO("Q") S ZTRTN="DQ^IBOAMS",ZTDESC="Revenue Code Report",ZTSAVE("IB*")="" D ^%ZTLOAD K ZTSK G ENQ
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOAMS" D T1^%ZOSV ;stop rt clock
	;
DQ	;  - start report here
	;***
	;S XRTL=$ZU(0),XRTN="IBOAMS-2" D T0^%ZOSV ;start rt clock
	S (IBCNT,IBQUIT,IBPAG,IBTC)=0 D NOW^%DTC S Y=% D D^DIQ S IBPDT=Y
	D HDR
	K IBT S IBDT=IBBDT-.01
	F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.25))!(IBQUIT)  S IBIFN=0 F  S IBIFN=$O(^DGCR(399,"AP",IBDT,IBIFN)) Q:'IBIFN!(IBQUIT)  D BLD
	;
	D:'IBQUIT TOTALS
	I '$D(IBT) W !,"No Matches Found"
	D PAUSE:'IBQUIT
ENQ	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOAMS" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K R,X,X2,X3,Y,DFN,IB,IBBDT,IBC,IBDT,IBEDT,IBGT,IBIFN,IBLINE,IBPAG,IBPDT,IBRT,IBSUM,IBT,IBTC,VA,VAERR,DIC,DIR,%DT,IBY,IBQUIT,IBCNT
	D ^%ZISC
	Q
	;
BLD	;
	K IB
	I $P(^DGCR(399,IBIFN,0),"^",7)'=IBRT!($S('$D(^("S")):1,$P(^("S"),"^",16):1,1:0)) Q
	S (IBC,R)=0 F  S R=$O(^DGCR(399,IBIFN,"RC",R)) Q:'R  I $D(^DGCR(399,IBIFN,"RC",R,0)) D BLD1
	S IBCNT=IBCNT+1,R=0 F  S R=$O(^DGCR(399,IBIFN,"RC","B",R)) Q:'R  S:'$D(IBCNT(R)) IBCNT(R)=0 S IBCNT(R)=IBCNT(R)+1
	Q:IBSUM
	I ($Y+4+IBC)>IOSL D PAUSE Q:IBQUIT  D HDR
	S DFN=$P(^DGCR(399,IBIFN,0),"^",2) D PID^VADPT W !,$E($P(^DPT(DFN,0),"^"),1,20),?23,VA("PID"),?38,$P(^DGCR(399,IBIFN,0),"^")
	S R=0 F  S R=$O(IB(R)) Q:'R  W ?59,$S($D(^DGCR(399.2,+R,0)):$P(^(0),"^"),1:R),?67 S X=IB(R),X2="2$",X3=12 D COMMA^%DTC W X,!
	Q
	;
BLD1	S IB=^DGCR(399,IBIFN,"RC",R,0) S:'$D(IB(+IB)) IB(+IB)=0,IBC=IBC+1 S IB(+IB)=IB(+IB)+$P(IB,"^",4) S:'$D(IBT(+IB)) IBT(+IB)=0,IBTC=IBTC+1 S IBT(+IB)=IBT(+IB)+$P(IB,"^",4)
	Q
	;
TOTALS	;  - print revenue code totals
	Q:'$D(IBT)
	I ($Y+4+IBTC)>IOSL S IBSUM=1 D PAUSE Q:IBQUIT  D HDR
	S IBGT=0
	W:'IBSUM !,"----------------------------------------------",!,"REVENUE CODE TOTALS",!
	S R=0 F  S R=$O(IBT(R)) Q:'R  W !,"Revenue Code: ",$S($D(^DGCR(399.2,+R,0)):$P(^(0),"^"),1:R)," .........." S IBGT=IBGT+IBT(R),X=IBT(R),X2="2$",X3=13 D COMMA^%DTC W ?32,X,?50,$J(IBCNT(R),8)," Bills"
	S X=IBGT,X2="2$",X3=13 D COMMA^%DTC W !,?31,"--------------",!,"   ",?32,X,?50,$J(IBCNT,8)," Bills"
	Q
HDR	;  - patient data header
	S IBPAG=IBPAG+1
	W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF
	W "Revenue Code Totals for ",$P(^DGCR(399.3,IBRT,0),"^",1),?(IOM-32),IBPDT,"  PAGE ",IBPAG
	W !,"For Bills First Printed " S Y=IBBDT D DT^DIQ W "  to  " S Y=IBEDT D DT^DIQ
	W:'IBSUM !,"Patient",?25,"Pt. ID.",?38,"Bill No.",?56,"Rev. Code",?72,"Amount"
	S IBLINE="",$P(IBLINE,"-",IOM)="" W !,IBLINE
	Q
PAUSE	Q:$E(IOST,1,2)'["C-"
	F IBY=$Y:1:(IOSL-4) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q

IBOBCC
IBOBCC	;ALB/ARH - UNBILLED APPOINTMENT BASC FOR INSURED PATIENTS ; 2/27/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;get date range then run the report
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBCC-1" D T0^%ZOSV ;start rt clock
	S IBHDR="UNBILLED BASC FOR INSURED PATIENT APPOINTMENTS" D HOME^%ZIS
	W @IOF W !!,?15,"Report Unbilled BASC for Insured Patient Appointments",!!!!
	D BDT^IBOUTL G:Y<0!(IBBDT="")!(IBEDT="") EXIT
DEV	;get the device
	W !!,"Report requires 132 columns."
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="EN1^IBOBCC",ZTDESC=IBHDR,ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q"),ZTSK G EXIT
	U IO D EN1 D ^%ZISC
	;
EXIT	;clean up and quit
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCC" D T1^%ZOSV ;stop clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IBBDT,IBEDT,IBHDR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
	Q
	;
EN1	;entry pt. for tasked jobs
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBCC-2" D T0^%ZOSV ;start rt clock
	;find, save, and print each BASC entered in scheduling that has not been entered in billing (or doesn't/can't match)
	;for each patient appointment in scheduling, where patient has active insurance, and billable CPTs entered for appointment
	;must match between scheduling and billing: DFN, CPT, appointment date (procedure date) (doesn't match clinics)
APPT	;get all BASC CPTs for appointments in date range for patients with insurance
	S IBE=IBEDT+.3,IBADT=IBBDT-.001,IBQ=0
	F  S IBADT=$O(^SDV("AP",IBADT)) Q:'IBADT!(IBADT>IBE)!IBQ  S IBX="" D  S IBQ=$$STOP
	. F  S IBX=$O(^SDV("AP",IBADT,IBX)) Q:'IBX  D
	.. S IBAD=$E(IBADT,1,7),(DFN,IBDFN)=^(IBX),IBINDT=IBAD D ^IBCNS Q:'IBINS
	.. S IBPR=$G(^SDV(IBADT,"CS",IBX,"PR")) I IBPR D
	... F IBI=1:1 S IBCPT=$P(IBPR,"^",IBI) Q:'IBCPT  I $$CPTBSTAT^IBEFUNC1(IBCPT,IBAD) D
	.... S ^TMP("IBBC",$J,IBDFN,IBAD,IBCPT)=$G(^TMP("IBBC",$J,IBDFN,IBAD,IBCPT))+1
	K IBE,IBADT,IBDFN,IBAD,IBX,IBPR,IBI,IBCPT,DFN,IBINDT,IBINS
	;
	G:'$D(^TMP("IBBC",$J))!IBQ PRINT
BILLED	;determine which BASC procedures from scheduling were actually entered in billing
	;try to match scheduling and billing, the scheduling appointment date (^SDV) and the billing procedure date (^IB) must be
	;the same to be able to match procedures between scheduling and billing
	S IBDFN="" F  S IBDFN=$O(^TMP("IBBC",$J,IBDFN)) Q:(IBDFN'?1N.N)!IBQ  S IBAD="" D  S IBQ=$$STOP
	. F  S IBAD=$O(^TMP("IBBC",$J,IBDFN,IBAD)) Q:IBAD=""  S IBCPT="" D
	.. F  S IBCPT=$O(^TMP("IBBC",$J,IBDFN,IBAD,IBCPT)) Q:IBCPT=""  S IBCNT=^(IBCPT) I $D(^DGCR(399,"ASD",-IBAD,IBCPT)) D
	... S IBBN="" F  S IBBN=$O(^DGCR(399,"ASD",-IBAD,IBCPT,IBBN)) Q:IBBN=""!(IBCNT'>0)  I $D(^DGCR(399,"C",IBDFN,IBBN)) D
	.... S IBX="" F  S IBX=$O(^DGCR(399,"ASD",-IBAD,IBCPT,IBBN,IBX)) Q:IBX=""!(IBCNT'>0)  S IBCNT=IBCNT-1
	... I IBCNT'>0 K ^TMP("IBBC",$J,IBDFN,IBAD,IBCPT) Q
	... S ^TMP("IBBC",$J,IBDFN,IBAD,IBCPT)=IBCNT
	.. I $D(^TMP("IBBC",$J,IBDFN,IBAD)) S ^TMP("IBBC",$J,"N",$P($G(^DPT(IBDFN,0)),"^",1),IBDFN)=""
	K IBDFN,IBAD,IBCPT,IBCNT,IBBN,IBX
	;
PRINT	G PRINT^IBOBCC1
	Q
	;
STOP()	;determine if user requested task to be stopped
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !!,"TASK STOPPED BY USER",!!
	Q +$G(ZTSTOP)

IBOBCC1
IBOBCC1	;ALB/ARH - UNBILLED APPOINTMENT BASC FOR INSURED PATIENTS ; 2/27/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRINT	;set up headers and dates then print
	G:IBQ END
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	S Y=IBBDT X ^DD("DD") S IBBDTE=Y,Y=IBEDT X ^DD("DD") S IBEDTE=Y
	S (IBPGN,IBLN)=0,IBDSH="" F IBI=1:1:IOM S IBDSH=IBDSH_"-"
	D HDR,P1
END	K IBCDT,IBBDTE,IBEDTE,IBPGN,IBQ,IBLN,IBI,IBDSH,Y
	I $D(ZTQUEUED) S ZTREQ="@"
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCC" D T1^%ZOSV ;stop rt clock
	Q
	;
P1	;print the report from the temp sort file to the appropriate device
	I $D(^TMP("IBBC",$J)) S IBPNM="" F  S IBPNM=$O(^TMP("IBBC",$J,"N",IBPNM)) Q:IBPNM=""!(IBQ)  S IBDFN="" D
	. F  S IBDFN=$O(^TMP("IBBC",$J,"N",IBPNM,IBDFN)) Q:IBDFN=""!(IBQ)  W ! S IBLN=IBLN+1 D
	.. S IBPAT=$$PT^IBEFUNC(IBDFN) Q:IBPAT=""  S IBAD="" F  S IBAD=$O(^TMP("IBBC",$J,IBDFN,IBAD)) Q:IBAD=""!(IBQ)  D
	... D:(IBLN+2)>IOSL HDR S Y=IBAD X ^DD("DD") S IBADE=Y W ?3,$P(IBPAT,"^",1),?35,$P(IBPAT,"^",2),?52,IBADE S IBCPT=""
	... F  S IBCPT=$O(^TMP("IBBC",$J,IBDFN,IBAD,IBCPT)) Q:IBCPT=""!(IBQ)  S IBN=^(IBCPT) F IBI=1:1:IBN D  Q:IBQ
	.... I (IBLN+2)>IOSL D HDR W ?3,$P(IBPAT,"^",1),?35,$P(IBPAT,"^",2),?52,IBADE
	.... W ?68,$P($G(^ICPT(+IBCPT,0)),"^",1),"  ",$P(^(0),"^",2),! S IBLN=IBLN+1
	D:'IBQ PAUSE
	K IBPNM,IBDFN,IBCPT,IBAD,IBADE,IBN,IBI,IBPAT,X,Y,^TMP("IBBC",$J)
	Q
	;
HDR	;print the report header, allow user stops, for terminals only form feed on first page
	S IBQ=$$STOP Q:IBQ  D:IBPGN>0 PAUSE Q:IBQ  I IBPGN>0!($E(IOST,1,2)["C-") W @IOF
	S IBPGN=IBPGN+1,IBLN=5 W IBHDR," FOR ",IBBDTE," - ",IBEDTE I IOM<85 W !
	W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
	W !,?3,"PATIENT NAME",?35,"PATIENT ID",?50,"APPOINTMENT DATE",?68,"BILLABLE AMBULATORY PROCEDURE",! W IBDSH,!
	Q
	;
PAUSE	;pause at end of screen if being displayed on a terminal
	Q:$E(IOST,1,2)'["C-"
	S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
	Q
	;
STOP()	;determine if user requested task to be stopped
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !!,"TASK STOPPED BY USER",!!
	Q +$G(ZTSTOP)

IBOBCR6
IBOBCR6	;ALB/RJS - CONTINUOUS PATIENT PRINTOUT - 2/20/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	;THIS REPORT GATHERS DATA FROM THE IB CONTINUOUS PT FILE 351.1
	;THE PATIENT FILE 2 AND THE MEANS TEST FILE 41.3 AND REPORTS 6
	;FIELDS IN COLUMNAR FORMAT. THE FIELDS ARE
	;Patient Name,Pt-Id,Ward Location,Means Test,Last Means,Eligibility
	;                                 Status     Test Date
	;  
START	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOBCR6-1" D T0^%ZOSV ;start rt clock
	W !,"Margin width of this report is 132 columns",!
	D OPEN G EXIT:POP
	I $D(IO("Q")) D QUEUED,HOME^%ZIS G END
	U IO
LOOP	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCR6" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBCR6-2" D T0^%ZOSV ;start rt clock
	S IBCOL2=23,IBCOL3=37,IBCOL4=54,IBCOL5=66,IBCOL6=84,IBDONE=0,IBRECNR=0
	F  S IBRECNR=$O(^IBE(351.1,IBRECNR)) Q:IBRECNR'>0  S IBDATA=^IBE(351.1,IBRECNR,0) D BUILDARY:+IBDATA
	D OUTPUT
END	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCR6-2" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
EXIT	;
	K IBDATA,IBMNSCAT,IBMNSDTA,IBDATE,IBNAME,IBOUT,IBPAGE,IBPATDIS,POP,IBRECNR
	K IBX,IBXX,Y,DFN,IBCOL2,IBCOL3,IBCOL4,IBCOL5,IBCOL6,IBDONE,^TMP($J,"IBOBCR6"),DIRUT,IBRECORD
	K ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%ZIS,IO("Q")
	D KVAR^VADPT
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCR6" D T1^%ZOSV ;stop rt clock
	Q
QUEUED	;
	S ZTRTN="LOOP^IBOBCR6",ZTDESC="Current Continuous Pt Report"
	D ^%ZTLOAD W !!,$S($D(ZTSK):"Request Queued!",1:"Request Cancelled")
	Q
BUILDARY	;
	S DFN=+IBDATA,IBPATDIS=$P(IBDATA,"^",2)
	I DFN=""!((IBPATDIS'="")&(IBPATDIS'>DT)) Q
	I '$D(^DPT(DFN,0)) Q
	D 2^VADPT,MEANS,LOADARY
	Q
MEANS	;
	;PIECE 2=LAST MT DATE///PIECE 3=STATUS NAME
	S IBXX=$$LST^DGMTU(DFN),IBDATE="",IBMNSCAT=""
	S IBMNSCAT=$P(IBXX,U,3),IBDATE=$P(IBXX,U,2)
	I IBDATE'="" S IBDATE=$E(IBDATE,4,5)_"/"_$E(IBDATE,6,7)_"/"_$E(IBDATE,2,3)
	Q
LOADARY	;***IN LOADARY FUNCTION THESE ARE THE VALUES***
	;***  BEING LOADED FROM THE CALLS TO VADPT  ***
	;
	; PATIENT      = VADM(1)
	; ELIGIBILITY  = $P(VAEL(1),"^",2)
	; SSI          = $P(VADM(2),"^",2)
	; LOCATION     = $G(^DPT(DFN,.1))
	;
	S ^TMP($J,"IBOBCR6",VADM(1),DFN)=VADM(1)_"^"_$P(VADM(2),"^",2)_"^"_$G(^DPT(DFN,.1))_"^"_$P(VAEL(1),"^",2)_"^"_IBMNSCAT_"^"_IBDATE
	Q
OUTPUT	;
	S Y=DT X ^DD("DD")
	S IBPAGE=1,IBOUT=""
	D HEADING
	S IBNAME=""
	F  S IBNAME=$O(^TMP($J,"IBOBCR6",IBNAME)) Q:IBNAME=""!(IBDONE)  S DFN="" F  S DFN=$O(^TMP($J,"IBOBCR6",IBNAME,DFN)) Q:DFN=""!(IBDONE)  D LINE
	Q
LINE	;
	S IBRECORD=^TMP($J,"IBOBCR6",IBNAME,DFN)
	;***PATIENT NAME***
	W $E(IBNAME,1,20),?IBCOL2
	;***PATIENT SSI****
	W $E($P(IBRECORD,"^",2),1,11),?IBCOL3
	;***PATIENT LOCATION***
	W $E($P(IBRECORD,"^",3),1,14),?IBCOL4
	;***LAST MEANS TEST DATE**** 
	W $E($P(IBRECORD,"^",6),1,8),?IBCOL5
	;***PATIENT MEANS CATEGORY***
	W $E($P(IBRECORD,"^",5),1,15),?IBCOL6
	;***PATIENT ELIGIBILITY***
	W $E($P(IBRECORD,"^",4),1,30),!
	D:$Y+3>IOSL HEADING
	Q
OPEN	;
	S %ZIS="QM" D ^%ZIS
	Q
HEADING	;
	I IBPAGE>1,($E(IOST,1,2)="C-")
	I  S DIR(0)="E" D ^DIR K DIR I $D(DUOUT) S IBDONE=1 Q
	I $E(IOST,1,2)["C-"!(IBPAGE>1) W @IOF ; initial form feeds to crts subsequent form feeds to all
	W !,Y,?IBCOL2,"***Patients Continuously Hospitalized Since July 1, 1986***",?IBCOL6,"PAGE ",IBPAGE
	W !!,"Patient NAME",?IBCOL2,"Pt-Id",?IBCOL3,"Ward Location",?IBCOL4
	W "Last Means",?IBCOL5,"Means Test",?IBCOL6,"Eligibility"
	W !,?IBCOL4,"Test Date",?IBCOL5,"Status",!
	S IBX="",$P(IBX,"=",IOM)="" W IBX,!
	S IBPAGE=IBPAGE+1
	Q

IBOBCRT
IBOBCRT	;ALB/RJS - IB-BILLING-CYCLE-REPORT 12/19/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
CATCCLK	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCRT" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBCRT-1" D T0^%ZOSV ;start rt clock
	;***
	S DIC="^IBE(351,",DIC(0)="AEQMZ"
	S DIC("A")="Select CAT C Billing Clock by PATIENT NAME: "
	D ^DIC
	I Y<0 G END
	S IBD0=$P(Y,"^",1)
	W ! D OPEN G END:POP
	I $D(IO("Q")) D QUEUED,HOME^%ZIS G CATCCLK
	U IO D DQ
	W ! S DIR(0)="E" D ^DIR I '$D(DIRUT) W @IOF G CATCCLK
	Q
OPEN	;
	S %ZIS="QM" D ^%ZIS
	Q
QUEUED	;
	S ZTRTN="DQ^IBOBCRT",ZTDESC="IB BILLING REPORT",ZTSAVE("IBD0")="" D ^%ZTLOAD W !!,$S($D(ZTSK):"Request Queued!",1:"Request Cancelled")
	Q
HEADER	;
	S Y=DT X ^DD("DD")
	W !,Y,"            Billing Cycle Inquiry",?30,!!
	K Y
	Q
DQ	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCRT" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBCRT-2" D T0^%ZOSV ;start rt clock
	;*** suppress initial form feed (to all but crts)
	W:$E(IOST,1,2)["C-" @IOF
	S D0=IBD0
	I $E(IOST,1,2)="P-" D HEADER
	K DXS D ^IBXBCR2 K DXS D ^IBXBCR K DXS
END	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBCRT" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K D0,DIC,DIR,DIRUT,DXS,POP,Y,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,IBD0
	Q

IBOBL
IBOBL	;ALB/AAS - LIST ALL BILLS FOR AN EPISODE OF CARE ; 25-MAY-90
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROBL
	;
%	S U="^"
	;
ASK	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBL" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOBL-1" D T0^%ZOSV ;start rt clock
	;
	S DIC="^DGCR(399,",DIC(0)="AEMQZ" D ^DIC K DIC Q:Y<1  S DGIFN=+Y,DGIFN1=$P(Y(0),"^",17),DFN=$P(Y(0),"^",2),DGEVDT=$P(Y(0),"^",3) G:+DGIFN1<1 END
	;
DEV	; -- ask device
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) K IO("Q") D  G END
	.S ZTRTN="START^IBOBL",ZTSAVE("DFN")="",ZTSAVE("DG*")="",ZTDESC="IB - List all Bills for an Episode"
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	;
	U IO
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBL" D T1^%ZOSV ;stop rt clock
START	;entry from DQing
	;***
	;S XRTL=$ZU(0),XRTN="IBOBL-2" D T0^%ZOSV ;start rt clock
	S Y=DGEVDT X ^DD("DD") S DGEVDT=Y,IBQUIT=0,DGLINE="",$P(DGLINE,"-",IOM)="",DGPAG=0 S X="NOW",%DT="T" D ^%DT X ^DD("DD") S DGDATE=Y D HDR1
	;
LOOP	S IBIFN=""
	F I=0:0 S IBIFN=$O(^DGCR(399,"AC",DGIFN1,IBIFN)) Q:'IBIFN!(IBQUIT)  D ONE I $D(^DGCR(399,"AC",IBIFN)),IBIFN'=DGIFN1 D LOOP2
	D PAUSE:'IBQUIT G END
	;
	;print bills who's primary bill field point to secondary bill for this episode
LOOP2	S IBIFN2=IBIFN,IBIFN="",DGIFN2=DGIFN1,DGIFN1=IBIFN2
	F J=0:0 S IBIFN=$O(^DGCR(399,"AC",DGIFN1,IBIFN)) Q:'IBIFN!(IBQUIT)  D ONE
	S DGIFN=DGIFN2,IBIFN=IBIFN2
	Q
ONE	D GVAR^IBCBB
	D:($Y>(IOSL-5)) HDR Q:IBQUIT
	W !,IBBNO,?12,$S(IBAT']"":"",$D(^DGCR(399.3,IBAT,0)):$P(^(0),"^"),1:"")
	W ?34,$S(IBCL=1:"INPATIENT",IBCL=2:"HUMANITARIAN (INPT.).",IBCL=3:"OUTPATIENT",IBCL=4:"HUMANITARIAN (OPT.)",1:""),?57
	F I=IBEVDT,IBFDT,IBTDT W $E(I,4,5)_"/"_$E(I,6,7)_"/"_$E(I,2,3),"    "
	W $S(IBST=1:"ENTERED/NOT REV.",IBST=2:"REVIEWED",IBST=3:"AUTHORIZED",IBST=4:"PRINTED",IBST=7:"CANCELLED",1:"")
	W ?112,$P("NON-PAYMENT/ZERO^ADMIT - DISCHARGE^INTERIM - FIRST^INTERIM - CONTINUING^INTERIM - LAST^LATE CHARGE(S) ONLY^ADJUSTMENT OF PRIOR^REPLACEMENT OF PRIOR","^",(IBTF+1))
	W !?4,"PAYOR: ",$S(IBWHO="i":"Insurance Co.",IBWHO="p":"Patient",1:"Institution")," - "
	S DGPAYOR="UNKNOWN"
	I IBWHO="i",+IBNDM,$D(^DIC(36,+IBNDM,0)) S DGPAYOR=$P(^(0),"^")
	I IBWHO="o",$P(IBNDM,"^",11),$D(^DIC(11,$P(IBNDM,"^",11),0)) S DGPAYOR=$P(^(0),"^")
	I IBWHO="p",+DFN,$D(^DPT(DFN,0)) S DGPAYOR=$P(^(0),"^")
	W DGPAYOR K DGPAYOR
	Q
	;
HDR	I $E(IOST,1,2)["C-" D PAUSE Q:IBQUIT
HDR1	I $E(IOST,1,2)["C-"!(DGPAG) W @IOF
	S DGPAG=DGPAG+1 W "LIST OF ALL BILLS FOR AN EPISODE OF CARE",?(IOM-30),DGDATE,"  PAGE ",DGPAG
	W !,"FOR PATIENT: ",$P(^DPT(DFN,0),"^"),"  EVENT DATE: ",DGEVDT
	W !?68,"STATEMENT   STATEMENT"
	W !,"BILL NO.    RATE TYPE             CLASSIFICATION        EVENT DATE  FROM DATE    TO DATE     STATUS             TIMEFRAME OF BILL"
	W !,DGLINE
	Q
PAUSE	S IBX1="" R:$E(IOST,1,2)["C-" !,"Enter ""^"" to quit display, return to continue",IBX1:DTIME S IBQUIT=$S(IBX1["^":1,1:0) Q
	;
END	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOBL" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D END^IBCBB1
	K %DT,DGIFN,DGIFN1,IBIFN1,IBQUIT,IBX1,IBCNT,DFN,IBIFN,DGDATE,DGEVDT,DGLINE,DGPAG,^UTILITY($J)
	D ^%ZISC G ASK

IBOCHK
IBOCHK	;ALB/AAS - INTEGRATED BILLING - RX COPAY LINK CHECK ; 2-APR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;  -loop through range of IB reference numbers and verify
	;   soft link exists and has link back to IB.
	;
%	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOCHK-1" D T0^%ZOSV ;start rt clock
	;
	D HOME^%ZIS W @IOF,?24,"Verify IB - Pharmacy Co-Pay links",!!
	;
ST	S DIC="^IB(",DIC(0)="AEQMN",DIC("A")="START WITH REFERENCE NUMBER:",DIC("B")="" D ^DIC K DIC G:+Y<1 END S IBSTART=$P(Y,"^",2)
	;
TO	S DIC="^IB(",DIC(0)="AEQMN",DIC("A")="GO TO REFERENCE NUMBER: ",DIC("B")="" D ^DIC K DIC G:+Y<1 END S IBEND=$P(Y,"^",2)
	I IBSTART>IBEND W *7,!!,"End must not be less than beginning number",! G ST
	;
DEV	W !!,"*** Margin width of this output is 132 ***"
	W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBOCHK",ZTDESC="IB Check Pharmacy Links",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") W ! G END
	;
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCHK" D T1^%ZOSV ;stop rt clock
	;
DQ	;  -entry point from queing
	;S XRTL=$ZU(0),XRTN="IBOCHK-2" D T0^%ZOSV ;start rt clock
	;
	S (IBCNT,IBECNT)=0,IBPAG=0,IBQUIT=0 S Y=DT D D^DIQ S IBHDT=Y D HDR
	S IBRNUM=IBSTART-1
	F  S IBRNUM=$O(^IB("B",IBRNUM)) Q:'IBRNUM!(IBRNUM>IBEND)!(IBQUIT)  S IBN="" F  S IBN=$O(^IB("B",IBRNUM,IBN)) Q:'IBN!(IBQUIT)  D CHK
	G END
	;
CHK	S IBCNT=IBCNT+1
	I '$D(^IB(IBN,0))!('$D(^IB(IBN,1))) S IBOERR=1,IBND=IBN G LINE ;xref to no entry
	S IBND=$S($D(^IB(IBN,0)):^(0),1:"")
	S IBSL=$P(^IB(IBN,0),"^",4) I 'IBSL S IBOERR=2 G LINE ;no softlink
	I +IBSL'=52 Q  ;not a pharmacy rx entry
	S IBRXN=$P($P(IBSL,";"),":",2),IBRXN1=$P($P(IBSL,";",2),":",2)
	I '$D(^PSRX(IBRXN,0)) S IBOERR=3 G LINE ;rx deleted
	I '$D(^PSRX(IBRXN,"IB")) S IBOERR=4 G LINE ;IB node missing
	I +^PSRX(IBRXN,"IB"),'$P(^("IB"),"^",2) S IBOERR=5 G LINE ;pointer back to IB missing
	Q:'IBRXN1
	I '$D(^PSRX(IBRXN,1,IBRXN1,0)) S IBOERR=6 G LINE ;refill deleted
	I '$D(^PSRX(IBRXN,1,IBRXN1,"IB")) S IBOERR=7 G LINE ;ib node on refill missing
	I '^PSRX(IBRXN,1,IBRXN1,"IB") S IBOERR=8 G LINE ;no data on node
	Q  ;pharmacy links okay.
	;
HDR	;
	S IBPAG=IBPAG+1
	W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF
	W "Verify Integrated Billing links to Pharmacy",?IOM-22,IBHDT,"  Page:",IBPAG
	W !,"Verify IB Reference Number ",IBSTART," to ",IBEND
	W !,"REF. NO.",?12,"PATIENT",?34,"SSN",?40,"RX#",?50,"REFILL",?58,"IB LINK",?80,"CHARGE ID",?91,"TRANS",?97,"ERROR MESSAGE"
	S $P(IBLINE,"-",IOM)="" W !,IBLINE K IBLINE
	Q
LINE	;
	I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	S IBECNT=IBECNT+1
	W !,$P(IBND,"^") S DFN=$P(IBND,"^",2)
	I $D(^DPT(+DFN,0)) D PID^VADPT W ?12,$E($P(^DPT(DFN,0),"^"),1,20),?34,VA("BID"),?40,$P($P(IBND,"^",8),"-"),?50,$P($P(IBSL,";",2),":",2),?58,IBSL,?80,$P(IBND,"^",11),?91,$P(IBND,"^",12)
	W ?97,$P($T(IBOERR+IBOERR),";;",2,99)
	Q
	;
END	;
	;***
	I $D(XRT0) S:'$D(XRTN) XRTN="IBOCHK" D T1^%ZOSV ;stop rt clock
	;
	Q:$D(ZTQUEUED)  K IBCNT,IBECNT,IBEND,IHDT,IBN,IBND,IBPAG,IBQUIT,IBRNUM,IBRXN,IBRXN1,IBSL,IBSTART
	D ^%ZISC
	Q
IBOERR	;error messages
	;;IB CROSS-REFERENCE BUT NO ENTRY
	;;IB ENTRY MISSING SOFTLINK
	;;RX ENTRY DELETED OR ARCHIVED
	;;RX ENTRY MISSING IB NODE
	;;RX ENTRY MISSING IB POINTER
	;;RX REFILL DELETED
	;;RX REFILL MISSING IB NODE
	;;RX REFILL MISSING IB LINK

IBOCNC
IBOCNC	;ALB/ARH - CPT USAGE IN CLINICS (USER) ; 1/23/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;count of procedures used in clinics and bills
	;if the sort is by clinic or procedure:
	;loops through the Schduling Visits (409.5) file for 900 stop code entries ("AP" x-ref)
	;for every 900 stop code entry, if each of the following conditions are ment then adds the stop code's procedures (409.5,10,21-25) to the report
	;    - outpt visit DATE/TIME (405.9,.01) within the date range entered by the user
	;    - ASSOCIATED CLINIC (409.5,10,3), checks if chosen by user
	;    - for each clinic chosen, checks that the clinics DIVISION (44,3.5) was chosen
	;
	;if the report is sorted by procedure the count of procedures found on bills (399,304 and 399,51-53,57-59) within the date range given by the user are also added to the report
	;
EN	;get parameters (date and clinic) then run the report
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCNC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOCNC-1" D T0^%ZOSV ;start rt clock
	D HOME^%ZIS S IBHDR="CLINIC CPT USAGE REPORT" W @IOF,?29,IBHDR,!!
	S DIR("?",1)="For the choosen date range and clinics:"
	S DIR("?",2)="""C"" - produces a count of procedures used, by clinic."
	S DIR("?",3)="""P"" - provides a total count of all procedures used"
	S DIR("?",4)="      including the total count used in billing."
	S DIR("?")="""D"" - same report as ""P"" plus the full procedure description."
	S DIR("0")="SO^C:CLINIC;P:PROCEDURE;D:PROCEDURE WITH EXTENDED DESCRIPTION;",DIR("A")="Sort report by" D ^DIR K DIR G:$D(DIRUT) EXIT S IBSRT=$S(Y="C":0,Y="P":1,1:2)
	D BDT^IBOUTL G:Y<0!(IBBDT="")!(IBEDT="") EXIT
	;find division then clinic - can select all or some clinics for all/some divisions
	D DIVISION^VAUTOMA G:$D(VAUTD)<11&(VAUTD=0) EXIT
	S VAUTNI=2 D CLINIC^VAUTOMA G:$D(VAUTC)<11&(VAUTC=0) EXIT
DEV	;get the device
	W !!,"This report requires 132 columns."
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="FIND^IBOCNC1",ZTDESC=IBHDR,ZTSAVE("IB*")="",ZTSAVE("VAU*")="" D ^%ZTLOAD K IO("Q"),ZTSK G EXIT
	U IO D ^IBOCNC1 D ^%ZISC
	;
EXIT	;clean up and quit
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCNC" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IBBDT,IBEDT,IBSRT,IBHDR,VAUTC,VAUTD,VAUTNI,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
	Q

IBOCNC1
IBOCNC1	;ALB/ARH - CPT USAGE IN CLINICS (SEARCH); 1/23/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;entry pt. for tasked jobs
FIND	;find, save, and print the data that satisfies the search parameters, save clinic/division names
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCNC" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOCNC-2" D T0^%ZOSV ;start rt clock
	I VAUTC,VAUTD S ^TMP("IBCU",$J,"D","ALL")="",IBPRC(1)="ALL DIVISIONS AND CLINICS"
	S X=0
	I VAUTC,'VAUTD S X=X+1,IBC="",IBPRC(X)="DIVISIONS: ",IBDIV="" F IBI=1:1 S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D
	. S ^TMP("IBCU",$J,"D",IBDIV)=""
	. I ($L(IBPRC(X))+$L(VAUTD(IBDIV))+2)>IOM S X=X+1,IBPRC(X)="           ",IBC=""
	. S IBPRC(X)=IBPRC(X)_IBC_VAUTD(IBDIV),IBC=", "
	I 'VAUTC S X=X+1,IBC="",IBPRC(X)="CLINICS: ",IBCLN="" F IBI=1:1 S IBCLN=$O(VAUTC(IBCLN)) Q:IBCLN=""  D
	. S ^TMP("IBCU",$J,"C",IBCLN)=""
	. I ($L(IBPRC(X))+$L(VAUTC(IBCLN))+2)>IOM S X=X+1,IBPRC(X)="         ",IBC=""
	. S IBPRC(X)=IBPRC(X)_IBC_VAUTC(IBCLN),IBC=", "
	K VAUTD,VAUTC,IBC,X
	;entire divisions were choosen, find all clinics
	I $D(^TMP("IBCU",$J,"D","ALL")) S IBDIV="" F  S IBDIV=$O(^DG(40.8,IBDIV)) Q:IBDIV'?1N.N  S ^TMP("IBCU",$J,"D",IBDIV)=""
	I $D(^TMP("IBCU",$J,"D")) S IBCLN="" F IBI=1:1 S IBCLN=$O(^SC(IBCLN)) Q:IBCLN'?1N.N  D
	. S IBLN=$G(^SC(IBCLN,0))  Q:$P(IBLN,"^",3)'="C"!('$D(^TMP("IBCU",$J,"D",+$P(IBLN,"^",15))))
	. S ^TMP("IBCU",$J,"C",IBCLN)=""
	K IBLN,IBCLN,IBDIV,IBI,^TMP("IBCU",$J,"D")
	;I $D(XRT0),'$D(^TMP("IBCU",$J,"C")) S:'$D(XRTN) XRTN="IBOCNC" D T1^%ZOSV ;stop rt clock
	Q:'$D(^TMP("IBCU",$J,"C"))
	;
SAVE	;for each clinic choosen collect counts on CPTs used and save in sorted tmp file
	S IBB=IBBDT-.001,IBE=IBEDT+.3,IBQ=0
	F  S IBB=$O(^SDV("AP",IBB)) Q:IBB=""!(IBB>IBE)!IBQ  D  S IBQ=$$STOP
	. S IBX=""  F  S IBX=$O(^SDV(IBB,"CS",IBX)) Q:IBX'?1N.N  D
	.. S IBCLN=$P($G(^SDV(IBB,"CS",IBX,0)),"^",3) Q:IBCLN=""!('$D(^SC(+IBCLN,0)))
	.. I $D(^TMP("IBCU",$J,"C",IBCLN)) S IBLN=$G(^SDV(IBB,"CS",IBX,"PR")) Q:IBLN=""  D
	... S IBCPT="" F IBI=1:1 S IBCPT=$P(IBLN,"^",IBI) Q:IBCPT=""!('$D(^ICPT(+IBCPT,0)))  D
	.... I IBSRT S ^TMP("IBCU",$J,IBCPT)=$G(^TMP("IBCU",$J,IBCPT))+1,^TMP("IBCU",$J)=$G(^TMP("IBCU",$J))+1 Q
	.... S IBCLNN=$P($G(^SC(IBCLN,0)),"^",1),^TMP("IBCU",$J,IBCLNN,"N")=IBCLN
	.... S ^TMP("IBCU",$J,IBCLNN)=$G(^TMP("IBCU",$J,IBCLNN))+1
	.... S ^TMP("IBCU",$J,IBCLNN,IBCPT)=$G(^TMP("IBCU",$J,IBCLNN,IBCPT))+1
	K IBB,IBE,IBX,IBCLN,IBCLNN,IBCPT,IBLN,IBI,^TMP("IBCU",$J,"C")
	D:IBSRT BILL
PRINT	I 'IBQ D ^IBOCNC2
	K IBPRC,IBSRT,IBQ,^TMP("IBCU",$J)
	I $D(ZTQUEUED) S ZTREQ="@"
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCNC" D T1^%ZOSV ;stop rt clock
	Q
	;
BILL	;when sorting by CPT, get count on CPT's entered in billing for the date range
	;count number of CPTs in old format, using event date as procedure date
	Q:IBQ  S IBEVDT=IBBDT-.001,IBE=IBEDT+.3
	F  S IBEVDT=$O(^DGCR(399,"D",IBEVDT)) Q:IBEVDT=""!(IBEVDT>IBE)!IBQ  D  S IBQ=$$STOP
	. S IBN="" F  S IBN=$O(^DGCR(399,"D",IBEVDT,IBN)) Q:IBN=""  D
	.. Q:$P($G(^DGCR(399,IBN,0)),"^",9)'=4!('$D(^DGCR(399,IBN,"C")))!($P($G(^DGCR(399,IBN,0)),"^",13)=7)  S IBX=$G(^DGCR(399,IBN,"C"))
	.. F IBI=1,2,3,7,8,9 S IBCPT=$P(IBX,"^",IBI) I $D(^ICPT(+IBCPT,0)) S ^TMP("IBCU",$J,+IBCPT,"B")=$G(^TMP("IBCU",$J,+IBCPT,"B"))+1,^TMP("IBCU",$J,"B")=$G(^TMP("IBCU",$J,"B"))+1
	;count number of CPTs in "CP" multiple using the cross-reference and the correct procedure date
	Q:IBQ  S IBPDT=-(IBEDT+.3)
	F  S IBPDT=$O(^DGCR(399,"ASD",IBPDT)) Q:IBPDT=""!(-IBPDT<IBBDT)!IBQ  D  S IBQ=$$STOP
	. S IBCPT="" F  S IBCPT=$O(^DGCR(399,"ASD",IBPDT,IBCPT)) Q:IBCPT=""  D
	.. S IBN="" F  S IBN=$O(^DGCR(399,"ASD",IBPDT,IBCPT,IBN)) Q:IBN=""  D
	... Q:$P($G(^DGCR(399,IBN,0)),U,13)=7
	... S IBX="" F  S IBX=$O(^DGCR(399,"ASD",IBPDT,IBCPT,IBN,IBX)) Q:IBX=""  D
	.... S ^TMP("IBCU",$J,+IBCPT,"B")=$G(^TMP("IBCU",$J,+IBCPT,"B"))+1,^TMP("IBCU",$J,"B")=$G(^TMP("IBCU",$J,"B"))+1
	K IBEVDT,IBPDT,IBN,IBE,IBI,IBCPT,IBX
	Q
	;
STOP()	;check for user requested stop when queued
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !!,"TASK STOPPED BY USER",!!
	Q +$G(ZTSTOP)

IBOCNC2
IBOCNC2	;ALB/ARH - CPT USAGE IN CLINICS (PRINT) ; 1/23/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
START	;set up headers and dates then do appropriate print
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	S Y=IBBDT X ^DD("DD") S IBBDTE=Y,Y=IBEDT X ^DD("DD") S IBEDTE=Y
	S IBHDR="CLINIC CPT USAGE FOR "_IBBDTE_" - "_IBEDTE
	S (IBPGN,IBLN)=0,IBDSH="" F IBI=1:1:IOM S IBDSH=IBDSH_"-"
	D:IBSRT=0 PRINTC D:IBSRT=1 PRINTP D:IBSRT=2 PRINTD
	K IBCDT,IBBDTE,IBEDTE,IBPGN,IBLN,IBI,IBDSH,IBHDR,Y
	Q
	;
PRINTC	;print the report from the temp sort file to the appropriate device, by clinic
	S IBLBL="W !,?3,""CLINIC"",?36,""AMBULATORY PROCEDURE"",?75,"" COUNT"",?84,""OPC STATUS"",?114,""  CHARGE"",!" D HDR
	S IBCLNN="" F  S IBCLNN=$O(^TMP("IBCU",$J,IBCLNN)) Q:IBCLNN=""!(IBQ)  D
	. S IBCLN=$G(^TMP("IBCU",$J,IBCLNN,"N")),IBCP=1,IBCT=0
	. S IBCPT=0 F  S IBCPT=$O(^TMP("IBCU",$J,IBCLNN,IBCPT)) Q:IBCPT'?1N.N!(IBQ)  D
	.. S IBCPTP=$J($P($G(^ICPT(IBCPT,0)),"^",1),5)_"  "_$P($G(^ICPT(IBCPT,0)),"^",2)
	.. S (IBNA,IBHCFA)="" D CPT I (IBLN+1)>IOSL D HDR S IBCP=1
	.. W !,?3,$S(IBCP:IBCLNN,1:""),?36,IBCPTP,?75,$J(^TMP("IBCU",$J,IBCLNN,IBCPT),6),?84,IBNA,?114,$J(IBHCFA,8)
	.. S IBLN=IBLN+1,IBCT=IBCT+1,IBCP=0
	. I 'IBQ D:(IBLN+2)>IOSL HDR W !,?36,$E(IBDSH,1,35),?76,$E(IBDSH,1,5),!,?36,"TOTAL:  ",$J(IBCT,5),?75,$J(^TMP("IBCU",$J,IBCLNN),6),!
	. S IBLN=IBLN+3
	D:'IBQ PAUSE
	K IBCLN,IBCLNN,IBCP,IBCT,IBCPT,IBCPTP,IBNA,IBHCFA,IBLBL,X,Y
	Q
	;
PRINTP	;print report from temp sort file by procedure
	S IBLBL="W !,""AMBULATORY PROCEDURE"",?38,"" COUNT"",?46,""#BILLED"",?55,""OPC STATUS"",?85,""  CHARGE"",!" D HDR
	S (IBCT,IBCPT)=0 F  S IBCPT=$O(^TMP("IBCU",$J,IBCPT)) Q:IBCPT'?1N.N!(IBQ)  D
	. S IBCPTP=$J($P($G(^ICPT(IBCPT,0)),"^",1),5)_"  "_$P($G(^ICPT(IBCPT,0)),"^",2)
	. S (IBNA,IBHCFA)="" D CPT I (IBLN+1)>IOSL D HDR Q:IBQ
	. W !,IBCPTP,?38,$J($G(^TMP("IBCU",$J,IBCPT)),6),?46,$J($G(^TMP("IBCU",$J,IBCPT,"B")),6),?55,IBNA,?85,$J(IBHCFA,8)
	. S IBLN=IBLN+1,IBCT=IBCT+1
	I 'IBQ,($D(^TMP("IBCU",$J))#2!$D(^TMP("IBCU",$J,"B"))#2) D:(IBLN+2)>IOSL HDR D
	. W !,$E(IBDSH,1,34),?39,$E(IBDSH,1,5),?47,$E(IBDSH,1,5),!,"TOTAL:  ",$J(IBCT,6),?38,$J(+$G(^TMP("IBCU",$J)),6),?46,$J(+$G(^TMP("IBCU",$J,"B")),6)
	D:'IBQ PAUSE
	K IBCPT,IBCPTP,IBNA,IBCT,IBHCFA,IBLBL,X,Y
	Q
	;
PRINTD	;print report from temp sort file by procedure with extended description
	S IBLBL="W !,""AMBULATORY PROCEDURE"",?78,"" COUNT"",?86,""#BILLED"",?95,""OPC STATUS"",?124,""  CHARGE"",!" D HDR
	S IBCPT=0 F  S IBCPT=$O(^TMP("IBCU",$J,IBCPT)) Q:IBCPT'?1N.N!(IBQ)  D
	. S IBCPTP=$J($P($G(^ICPT(IBCPT,0)),"^",1),5)_"  "_$P($G(^ICPT(IBCPT,0)),"^",2)
	. S (IBNA,IBHCFA)="" D CPT,DESC I (IBLN+1)>IOSL D HDR Q:IBQ
	. W !!,IBCPTP,?78,$J($G(^TMP("IBCU",$J,IBCPT)),6),?86,$J($G(^TMP("IBCU",$J,IBCPT,"B")),6),?95,IBNA,?124,$J(IBHCFA,8)
	. S IBLN=IBLN+2 I $D(IBD) S IBX=0 F  S IBX=$O(IBD(IBX)) Q:IBX=""!(IBQ)  D
	.. D:(IBLN+1)>IOSL HDR Q:IBQ  W !,?7,IBD(IBX) S IBLN=IBLN+1
	D:'IBQ PAUSE
	K IBCPT,IBCPTP,IBNA,IBHCFA,IBLBL,IBD,IBX,X,Y
	Q
	;
CPT	;get CPT status and charge data
	S D0=IBCPT S IBNA=$P(^DD(409.71,205,0),"^",5,999) X IBNA S IBNA=X
	S X=$$CPTBSTAT^IBEFUNC1(IBCPT,DT),IBHCFA=$P(X,"^",2)
	I +X S IBHCFA=$$CPTCHG^IBEFUNC1(IBCPT,$S($D(IBCLN):$P($G(^SC(+IBCLN,0)),"^",15),1:""),DT),IBHCFA=$J(IBHCFA,8,2)
	K D0,X
	Q
	;
DESC	;if sort by proc & user wants desc, get procedure description, store in IBD at proper length for printing
	Q:'$D(^ICPT(IBCPT,"D"))  K IBD S IBY=1,IBX=0,IBLNG=68
	F  S IBX=$O(^ICPT(IBCPT,"D",IBX)) Q:IBX'?1N.N  S IBZ=$G(^ICPT(IBCPT,"D",IBX,0)) D
	. F IBJ=1:1 S IBW=$P(IBZ," ",IBJ) Q:IBW=""  D
	.. I $L(IBW)>IBLNG S:$G(IBD(IBY))'="" IBY=IBY+1 S IBD(IBY)=$E(IBW,1,IBLNG-1)_"-",IBY=IBY+1,IBD(IBY)=$E(IBW,IBLNG,999)_" " Q
	.. I ($L($G(IBD(IBY)))+$L(IBW)+1)'>IBLNG S IBD(IBY)=$G(IBD(IBY))_IBW_" " Q
	.. S IBY=IBY+1,IBD(IBY)=IBW_" "
	K IBY,IBX,IBLNG,IBZ,IBJ,IBW
	Q
	;
HDR	;print the report header
	S IBQ=$$STOP^IBOCNC1 Q:IBQ  D:IBPGN>0 PAUSE Q:IBQ  I IBPGN>0!($E(IOST,1,2)["C-") W @IOF
	S IBPGN=IBPGN+1,IBLN=5 W IBHDR I IOM<85 W !
	W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
	I $D(IBPRC) S IBI="" F  S IBI=$O(IBPRC(IBI)) Q:IBI=""  W !,IBPRC(IBI) S IBLN=IBLN+1
	X IBLBL F IBI=1:1:IOM W "-"
	K IBI
	Q
	;
PAUSE	;pause at end of screen if being displayed on a terminal
	Q:$E(IOST,1,2)'["C-"
	S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
	Q

IBOCOSI
IBOCOSI	;ALB/ARH - LIST INACTIVE CODES FROM COS; 5/27/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;get device then run the report
	; ****
	;S XRTL=$ZU(0),XRTN="IBOCOSI-1" D T0^%ZOSV ;start rt clock
	S IBHDR="INACTIVE CPT CODES ON CHECK-OFF SHEETS"
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="EN1^IBOCOSI",ZTDESC=IBHDR D ^%ZTLOAD K IO("Q") G EXIT
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCOSI" D T1^%ZOSV ;stop rt clock
	D EN1 D ^%ZISC
	;
EXIT	;clean up and quit
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCOSI" D T1^%ZOSV ;stop rt clock
	Q:$D(ZTQUEUED)  K IBHDR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
	Q
	;
EN1	;entry pt. for tasked jobs
	;***
	;S XRTL=$ZU(0),XRTN="IBOCOSI-2" D T0^%ZOSV ;start rt clock
	S IBCPT="",IBQ=0 F  S IBCPT=$O(^IBE(350.71,"P",IBCPT)) Q:IBCPT=""!IBQ  D  S IBQ=$$STOP
	. S IBX="" F  S IBX=$O(^IBE(350.71,"P",IBCPT,IBX)) Q:IBX=""  D
	.. S IBLN=$G(^IBE(350.71,IBX,0)),IBSTAT=+$$CPTSTAT^IBEFUNC2(+$P(IBLN,"^",6))
	.. Q:IBSTAT>1  S (IBCPTP,IBSUBH,IBCHECK)=""
	.. S IBSUBH=$G(^IBE(350.71,+$P(IBLN,"^",5),0))
	.. I IBSUBH'="" S IBCHECK=$P($G(^IBE(350.7,+$P(IBSUBH,"^",4),0)),"^",1)
	.. S IBSUBH=$P(IBSUBH,"^",1),IBCPTP=$P($G(^ICPT(IBCPT,0)),"^",1)
	.. S ^TMP("IBINACT",$J,IBSTAT,IBCPTP,IBCHECK,IBSUBH)=$P($G(^ICPT(IBCPT,0)),"^",2)
	K IBCPT,IBX,IBLN,IBSTAT,IBCPTP,IBSUBH,IBCHECK
	G:IBQ END
	;
PRINT	;set up headers and dates then print
	S IBHDR="INACTIVE CPT CODES ON CHECK-OFF SHEETS"
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	S (IBPGN,IBLN)=0,IB3=(IOM-80)/3,IB1=IB3+20,(IB2,IB3)=IB3+24,IBDSH="" F IBI=1:1:IOM S IBDSH=IBDSH_"-"
	D HDR,P1
END	K IBHDR,IBCDT,IBPGN,IBQ,IBLN,IBI,IB1,IB2,IB3,IBDSH,Y,X,^TMP("IBINACT",$J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCOSI" D T1^%ZOSV ;stop rt clock
	Q
	;
P1	;print the report from the temp sort file to the appropriate device
	S IBSTAT="" F  S IBSTAT=$O(^TMP("IBINACT",$J,IBSTAT)) Q:IBSTAT=""!(IBQ)  S IBCPT="" D
	. W !!,?15,$S(IBSTAT=0:"AMA INACTIVE",1:"NATIONALLY, LOCALLY AND BILLING INACTIVE"),! S IBLN=IBLN+3
	. F  S IBCPT=$O(^TMP("IBINACT",$J,IBSTAT,IBCPT)) Q:IBCPT=""!(IBQ)  S IBCHECK="",IBI=1 D
	.. F  S IBCHECK=$O(^TMP("IBINACT",$J,IBSTAT,IBCPT,IBCHECK)) Q:IBCHECK=""!(IBQ)  S IBSUBH="" D
	... F  S IBSUBH=$O(^TMP("IBINACT",$J,IBSTAT,IBCPT,IBCHECK,IBSUBH)) Q:IBSUBH=""!(IBQ)  D
	.... I IBI S IBCPTP=^(IBSUBH) W !,IBCPT,?7,$E(IBCPTP,1,IB1)
	.... W:'IBI ! W ?(9+IB1),$E(IBCHECK,1,IB2),?(11+IB1+IB2),$E(IBSUBH,1,IB3) S IBLN=IBLN+1,IBI=0 D:IBLN>IOSL HDR
	D:'IBQ PAUSE
	K IBSTAT,IBCPT,IBCHECK,IBSUBH,IBCPTP,IBI,X,Y
	Q
	;
HDR	;print the report header
	S IBQ=$$STOP Q:IBQ  D:IBPGN>0 PAUSE Q:IBQ  S IBPGN=IBPGN+1,IBLN=6
	I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
	W IBHDR,?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
	W !,"PROCEDURE",?(9+IB1),"CHECK-OFF SHEET",?(11+IB1+IB2),"SUBHEADER",! W IBDSH
	Q
	;
PAUSE	;pause at end of screen if being displayed on a terminal
	Q:$E(IOST,1,2)'["C-"  S DIR(0)="E" D ^DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
	K DIR,DIROUT,DTOUT,DUOUT,DIRUT
	Q
	;
STOP()	;determine if user requested task to stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !!,"***TASK STOPPED BY USER***",!!
	Q +$G(ZTSTOP)

IBOCPD
IBOCPD	;ALB/ARH - CLERK PRODUCTIVITY REPORTS ; 10/8/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOCPD-1" D T0^%ZOSV ;start rt clock
	S DIR(0)="SO^F:FULL CLERK PRODUCTIVITY REPORT;S:SUMMARY OF CLERK PRODUCTIVITY REPORT;"
	D ^DIR K DIR G:$D(DIRUT) EXIT I Y="F" D FULL G EXIT
	I Y="S" D ^IBOCPDS
EXIT	K X,Y,DTOUT,DUOUT,DIRUT,DIROUT,DIOEND
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
	Q
	;
FULL	D HOME^%ZIS S IBHDR="CLERK PRODUCTIVITY REPORT" W @IOF,?27,IBHDR,!!
	W !,"Report requires 132 columns."
	S IBFLD="Date Entered" D RANGE G:IBQUIT ENDF
	;
PRINTF	;print report
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPD" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOCPD-2" D T0^%ZOSV ;start rt clock
	S DHD=IBHDR_" FOR "_IBBEGE_" - "_IBENDE,DIOEND="D PAUSE^IBOCPDS"
	S FR=IBBEG_",?,?,",TO=IBEND_",?,?,",L=0,DIC="^DGCR(399,",(BY,FLDS)="[IB CLK PROD]"
	D EN1^DIP
ENDF	;
	K DIC,L,FLDS,BY,DHD,FR,TO,IBHDR,IBBEG,IBEND,IBBEGE,IBENDE,IBFLD,IBQUIT,X,Y
	Q
	;
	;external entry point to get a range of dates
RANGE	;get date range
	S DIR(0)="D^:NOW:EX",DIR("A")="START WITH "_IBFLD
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
	S IBBEG=Y X ^DD("DD") S IBBEGE=Y
	S DIR(0)="D^"_IBBEG_":NOW:EX",DIR("A")="GO TO "_IBFLD,DIR("B")="TODAY"
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
	S IBEND=Y X ^DD("DD") S IBENDE=Y,IBQUIT=0
	Q

IBOCPDS
IBOCPDS	;ALB/ARH - CLERK PRODUCTIVITY REPORT, SUMMARY ; 10/8/91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;get parameters then run the report
	D HOME^%ZIS
	S IBHDR="CLERK PRODUCTIVITY SUMMARY REPORT"
	W @IOF,?22,IBHDR,!!
	S IBFLD="Date Entered"
	D RANGE^IBOCPD G:IBQUIT EXIT
	W !!
DEV	;get the device
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="ENT^IBOCPDS",ZTDESC="Clerk Productivity Summary Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") G EXIT
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
ENT	;find, save, and print the data that satisfies the search parameters
	;entry for tasked jobs
	;***
	;S XRTL=$ZU(0),XRTN="IBOCPDS-2" D T0^%ZOSV ;start rt clock
	S IBCDT=IBBEG-.001,IBE=IBEND+.3,U="^",IBQUIT=0
	F  S IBCDT=$O(^DGCR(399,"APD",IBCDT)) Q:IBCDT=""!(IBCDT>IBE)!IBQUIT  S IFN="" D  S IBQUIT=$$STOP
	. F  S IFN=$O(^DGCR(399,"APD",IBCDT,IFN)) Q:IFN=""  D FILE
	I $D(^TMP("IB",$J)),'IBQUIT D PRINT
	;
EXIT	;clean up and quit
	K ^TMP("IB",$J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOCPDS" D T1^%ZOSV ;stop rt clock
	Q:$D(ZTQUEUED)
	K IBE,IBBEG,IBBEGE,IBEND,IBENDE,IBCDT,IFN,IBRT,IBCLK,IBTD,IBNODE,IBPGN,IBLN,IBHDR,IBFLD,IBQUIT,IBI,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
	D ^%ZISC
	Q
	;
FILE	;save the data in sorted order in a temporary file
	S IBRT=$P($G(^DGCR(399,IFN,0)),U,7) Q:'IBRT
	S IBCLK=$P($G(^VA(200,+$P($G(^DGCR(399,IFN,"S")),U,2),0)),U,1) Q:IBCLK=""
	S IBTD=$P($G(^DGCR(399,IFN,"U1")),U,1)
	S IBNODE=$G(^TMP("IB",$J)),^($J)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)
	S IBNODE=$G(^TMP("IB",$J,IBCLK)),^(IBCLK)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)
	S IBNODE=$G(^TMP("IB",$J,IBCLK,IBRT)),^(IBRT)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)
	S IBNODE=$G(^TMP("IB",$J,"~~")),^("~~")=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)
	S IBNODE=$G(^TMP("IB",$J,"~~",IBRT)),^(IBRT)=($P(IBNODE,U,1)+1)_U_($P(IBNODE,U,2)+IBTD)
	Q
	;
PRINT	;print the report from the temp sort file to the appropriate device
	S IBCLK="",IBPGN=0
	D HDR F  S IBCLK=$O(^TMP("IB",$J,IBCLK)) Q:IBCLK=""!(IBQUIT)  D LINE
	W !!,"TOTAL:",?50,$J($P(^TMP("IB",$J),U,1),8),?60,$J($P(^($J),U,2),15,2),!
	D:'IBQUIT PAUSE
	Q
	;
LINE	;print all data for a particular clerk
	W !,$S(IBCLK'="~~":$E(IBCLK,1,25),1:"RATE TYPE TOTALS") S IBLN=IBLN+1
	S IBRT="" F  S IBRT=$O(^TMP("IB",$J,IBCLK,IBRT)) Q:IBRT=""!(IBQUIT)  D  S IBLN=IBLN+1 I IBLN>(IOSL-7) D PAUSE,HDR
	. W ?30,$E($P(^DGCR(399.3,IBRT,0),U,1),1,20),?50,$J($P(^TMP("IB",$J,IBCLK,IBRT),U,1),8),?60,$J($P(^(IBRT),U,2),15,2),!
	W ?50,"  ------",?60,"   ------------"
	W !,?30,"SUBTOTAL:",?50,$J($P(^TMP("IB",$J,IBCLK),U,1),8),?60,$J($P(^(IBCLK),U,2),15,2),! S IBLN=IBLN+2
	Q
	;
HDR	;print the report header
	S IBQUIT=$$STOP Q:IBQUIT  S IBPGN=IBPGN+1,IBLN=5
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	I IBPGN>1!($E(IOST,1,2)["C-") W @IOF
	W "CLERK PRODUCTIVITY SUMMARY FOR ",IBBEGE," - ",IBENDE I IOM<85 W !
	W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN,!
	W !,"ENTERED BY",?30,"RATE TYPE",?53,"COUNT",?69,"AMOUNT",!
	F IBI=1:1:IOM W "-"
	W !
	Q
	;
PAUSE	;pause at end of screen if beeing displayed on a terminal
	Q:$E(IOST,1,2)'["C-"
	S DIR(0)="E" D ^DIR K DIR
	I $D(DUOUT)!($D(DIRUT)) S IBQUIT=1
	Q
	;
STOP()	;determine if user has requested the queued report to stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
	Q +$G(ZTSTOP)

IBODISP
IBODISP	;ALB/AAS - INTEGRATED BILLING - OUTPUTS ; 8-MAR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN^IBODISP" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="EN^IBODISP-1" D T0^%ZOSV ;start rt clock
	;  -display ib action by reference number
	S DIC="^IB(",DIC(0)="AEQM" D ^DIC K DIC G ENQ:+Y<1 S DA=+Y D DISP G EN
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN^IBODISP" D T1^%ZOSV ;stop rt clock
	Q
	;
DISP	S DIC="^IB(",DR="0:1" D EN^DIQ
	Q
ENQ	K DIC,DA,DR,Y,X,IBQT
	Q
EN1	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN1^IBODISP" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="EN1^IBODISP-1" D T0^%ZOSV ;start rt clock
	;
	;  -display ib action by patient [by date]
	S DIC="^DPT(",DIC(0)="AEQM" D ^DIC K DIC G EN1Q:+Y<1 S DFN=+Y
	D DATE^IBOUTL G:'IBEDT EN1
	;  -loop through inverse dates by patient and display
	S S=2,IBDT=IBBDT-.0000001,(IBQUIT,IBOCNT)=0
	F IBI=0:0 S IBDT=$O(^IB("APTDT",DFN,IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  F IBJ=0:0 S IBJ=$O(^IB("APTDT",DFN,IBDT,IBJ)) Q:'IBJ!('S)!($D(DTOUT))  S DA=IBJ,IBOCNT=IBOCNT+1 I DA D DISP,PAUSE^IBOUTL G:IBQUIT EN1
	I IBOCNT<1 W !!,"No IB Actions Found for this Date Range",!!
	G EN1
EN1Q	K DIC,DA,DR,IBEDT,IBBDT,IBDT,IBI,IBJ,IBOCNT,S,X,Y,DFN,D0,IBQUIT
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN1^IBODISP" D T1^%ZOSV ;stop rt clock
	Q
	;
EN2	;
	;  -print list of ib actions
	;***
	;S XRTL=$ZU(0),XRTN="EN2^IBODISP-1" D T0^%ZOSV ;start rt clock
	W !!,"Print IB Action Entries by Date Added",!!," ** Please note that this output requires 132 columns **",!
	S DIC="^IB(",L=0,FLDS="[IB LIST]",BY="@12,@"
	D ASK G:$G(IBQT) ENQ
	S DHD="INTEGRATED BILLING ACTIONS FROM: "_FR(1)_" TO: "_TO(1)
	D EN1^DIP
	K DIC,L,FLDS,FR,BY,TO
	D ^%ZISC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="EN2^IBODISP" D T1^%ZOSV ;stop rt clock
	Q
ASK	;
	N IBBDT,IBEDT
	D DATE^IBOUTL
	I (IBBDT<1)!(IBEDT<1) S IBQT=1 Q
	S FR=IBBDT_",?",TO=IBEDT_",?"
	S FR(1)=$$DAT1^IBOUTL(FR),TO(1)=$$DAT1^IBOUTL(TO)
	Q

IBODIV
IBODIV	;BSN/GRR - MULTI-DIVISION SELECT ; 27 FEB 84  9:40 am
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; -- copied for scheduling v5.3 routine SDDIV
	;
ROUT	S DIC("A")="ROUTING SLIPS FOR WHICH DIVISION: " G ASK
APLST	S DIC("A")="APPOINTMENT LIST FOR WHICH DIVISION: " G ASK
FRLST	S DIC("A")="FILE ROOM LIST FOR WHICH DIVISION: " G ASK
CLST	S DIC("A")="CLINIC LIST FOR WHICH DIVISION: " G ASK
PALST	S DIC("A")="PRE-APPOINTMENT LETTERS FOR WHICH DIVISION: " G DIC
CNLET	S DIC("A")="CANCELLATION LETTERS FOR WHICH DIVISION: " G DIC
PCNLET	S DIC("A")="APPOINTMENT CANCELLATION LETTERS FOR WHICH DIVISION: " G DIC
NSLET	S DIC("A")="NO-SHOW LETTERS/AUTO REBOOK REPORT FOR WHICH DIVISION: " G ASK
NSLET1	S DIC("A")="NO-SHOW LETTERS FOR WHICH DIVISION: " G DIC
RALST	S DIC("A")="RADIOLOGY LIST FOR WHICH DIVISION: " G ASK
A223	S DIC("A")="AMIS SEGMENT 223 FOR WHICH DIVISION: " G ASK
CSSD	S DIC("A")="CREATE SURVEY DISPOSITIONING RECORDS FOR WHICH DIVISION (ENTER 'ALL' FOR ALL DIVISIONS): " G ASK
SDCP	S DIC("A")="CLINIC PROFILES FOR WHICH DIVISION: " G ASK
DSSA	S DIC("A")="DISPOSITION SURVEY APPOINTMENTS FOR WHICH DIVISION: " G ASK
PSDR	S DIC("A")="DIVISION (ENTER 'ALL' FOR ALL DIVISIONS): " G ASK2
CSEE	S DIC("A")="ENTER VISIT DATA FOR WHICH DIVISION: " G ASK
CALST	S DIC("A")="CLINIC ASSIGNMENT LIST FOR WHICH DIVISION: " G ASK
CACTLST	S DIC("A")="CLINIC WORKLOAD LIST FOR WHICH DIVISION: " G ASK
	Q
	;
ASK	S ALL=0,SDEF=$N(^DG(40.8,0)) G:'$D(^(SDEF,0)) ERR W !,DIC("A")," ",$P(^(0),"^"),"// " R X:DTIME I X["^" G ERR
	I X="ALL" S ALL=1 I $D(SDALL),'SDALL S X="?",ALL=0 W *7," ??"
	S:X="" DIV=SDEF G:X=""!(X="ALL") AWAY S DIC="^DG(40.8,",DIC(0)="EQMN" I X["?",$S('$D(SDALL):1,SDALL:1,1:0) W "    Enter 'ALL' for all divisions or"
DIC	D ^DIC G:X["?"!((Y<0)&('$D(SDLT))) ASK Q:$D(SDLT)&(Y'>0)  S:$D(SDLT) SDV1=+Y S DIV=+Y K DIC Q
AWAY	S Y=1 K DIC,SDEF Q
ERR	S Y=-1 K DIC,SDALL,SDEF Q
ASK2	S (VAUTD,Y)=0 I '$D(^DG(40.8,$N(^DG(40.8,0)),0)) W !,*7,"***WARNING...MEDICAL CENTER DIVISION FILE IS NOT SET UP" G ERR
	I $D(^DG(43,1,"GL")),$P(^("GL"),U,2) G DIVISION^VAUTOMA
	S I=$N(^DG(40.8,0)) G:'$D(^DG(40.8,I,0)) ERR S VAUTD(I)=$P(^(0),U) K DIC Q

IBOEMP
IBOEMP	;ALB/ARH - EMPLOYER REPORT ; 6/19/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;Included in Report:
	;                Employer Name Range can be choosen
	;    All:        Patient must NOT have active insurance on date of event
	;                Patient must not be dead
	;                Patients (2,.31115) or Spouses (2,.2515) Eployment Status is:
	;                       1 - EMPLOYED FULL TIME
	;                       2 - EMPLOYED PART TIME
	;                       4 - SELF EMPLOYED
	;                       5 - RETIRED
	;     or
	;                Patient (2,.3111) or Spouse (2,.251) (VAOA(9)) Employer Name is defined
	;
	;    Inpatient:  Admission Movements (405,.02=1):
	;
	;    Outpatient: division can be choosen by the user
	;                Scheduling Visits (409.5), unscheduled visits
	;                Scheduled visits:
	;                        Hospital Location must be "C" Clinic (44,2.1)
	;                        Patient visit Outpatient, not cancelled or no-showed (2,1900,3="")
	;                Dispositions, that are not Application Without Exam ((2,1000,1)<2)
	;
	;Printed on Report: Report is sorted by employer name, within employers, by patient name
	;                   For employers to match their name, address, and  phone number must match exactly
	;    All:        Employer Name, phone, address
	;                if employment status is employed but no employer name use {unspecified} for employer name
	;                Patient Name, SSN, Primary Eligibility, home ph number
	;    Inpatient:  Admission Date, Transaction (405,.02)
	;    Outpatient: Appointment Date, Appointment Type (409.5,5) or "DIPSOSITION"
	;    For Employed: Name, SSN, Occupation, Employment Status, for patient-work ph number
	;              
	;               
EN	;report on employers of patients with no insurance at time of care
	D HOME^%ZIS S IBHDR="EMPLOYER REPORT" W @IOF,?27,IBHDR,!!!!
RG	S DIR("?",1)="Specify the employers to list in the report by entering:",DIR("?",2)=" 1. the first character in the Employer's Name"
	S DIR("?",3)=" 2.""-"" for patients who indicated they were employed but who have no employer"
	S DIR("?",4)=" 3.""+"" for all employers.",DIR("?")="Enter one character only"
	S DIR(0)="FO^1:1",DIR("A")="Beginning Value",DIR("B")="+"
	D ^DIR K DIR G:$D(DIRUT) EXIT I Y="+" S IBRGB=-1,IBRGE=999 G NX
	I Y="-" S (IBRGB,IBRGE)=-1 G NX
	S IBRGB=$A(Y) S DIR("?")="Enter the last character in the Employer Name range to include"
	S DIR(0)="FO^1:15",DIR("A")="Ending Value",DIR("B")="Z" D ^DIR K DIR G:$D(DIRUT) EXIT S IBRGE=$A(Y)
	I IBRGB<65!(IBRGE>90) W "??" G RG
NX	I IBRGE<IBRGB W "??" G RG
	;
	S DIR("?")="The Employer Report can be printed for either INPATIENT MOVEMENTS or OUTPATIENT VISITS.  Enter the code cooresponding to your choice."
	S DIR(0)="SOB^INPT:Inpatient;OPT:Outpatient",DIR("A")="Select PATIENT TYPE"
	D ^DIR K DIR G:$D(DIRUT) EXIT S IBCH=Y I IBCH="OPT" D ASK2^IBODIV G:Y<0 EXIT
	S IBFLD="Date" D RANGE G:IBQUIT EXIT
	;
DEV	;get the device
	W !!,"Report requires 132 columns."
	S %ZIS="QM",%ZIS("A")="OUTPUT DEVICE: " D ^%ZIS G:POP EXIT
	I $D(IO("Q")) S ZTRTN="EN1^IBOEMP",ZTDESC=IBHDR,ZTSAVE("IB*")="",ZTSAVE("VAUTD")="" D ^%ZTLOAD K IO("Q") G EXIT
	U IO
	;
EN1	;tasked entry point
	S IBES="FULL TIME^PART TIME^NOT EMPL'D^SELF EMPL'D^RETIRED^ACTIVE DUTY^^^UNKNOWN"
	D ^IBOEMP1 I 'IBQ D PHDR,^IBOEMP2
	K IBES,VAUTD,VAERR,IBHDR1,IBPGN,IBQ,IBLN,IBDSH,IBI,IBDIV,IBCDT,IBX,IBY,X,Y
	;
EXIT	K ^TMP("IBEMP",$J) I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K X,Y,VA,DTOUT,DUOUT,DIRUT,DIROUT,DIOEND,IBCH,IBEND,IBBEG,IBQUIT,IBBEGE,IBENDE,IBFLD,IBHDR,IBRGB,IBRGE
	Q
	;
PHDR	;create print header
	D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S IBCDT=$P(Y,"@",1)_"  "_$P(Y,"@",2)
	S (IBPGN,IBQ,IBLN)=0,IBDSH="" F IBI=1:1:IOM S IBDSH=IBDSH_"-"
	S (IBHDR1,IBDIV)="" I $D(VAUTD) S:VAUTD=1 IBHDR1="ALL DIVISIONS" I $D(VAUTD)=11 D
	. S IBDIV=$O(VAUTD(IBDIV)),IBHDR1="DIVISION: "_VAUTD(IBDIV)
	. F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  S IBHDR1=IBHDR1_", "_VAUTD(IBDIV)
	Q
	;
	;
RANGE	;get date range
	S DIR(0)="D^:NOW:EX",DIR("A")="START WITH "_IBFLD
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
	S IBBEG=Y X ^DD("DD") S IBBEGE=Y
	S DIR(0)="D^"_IBBEG_":NOW:EX",DIR("A")="GO TO "_IBFLD,DIR("B")="TODAY"
	D ^DIR K DIR I $D(DIRUT) S IBQUIT=1 Q
	S IBEND=Y X ^DD("DD") S IBENDE=Y,IBQUIT=0
	Q

IBOEMP1
IBOEMP1	;ALB/ARH - EMPLOYER REPORT (SEARCH) ; 6/19/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	I IBCH="OPT" G OPT
	;
INPT	;search for outpatient admissions (patient movement file)
	S IBB=IBBEG-.001,IBE=IBEND+.3,IBHDR=IBHDR_" FOR INPATIENT ADMISSIONS ",IBQ=0
	F  S IBB=$O(^DGPM("AMV1",IBB)) Q:'IBB!(IBB>IBE)!(IBQ)  D  S IBQ=$$STOP^IBOEMP2
	. S IBDFN="" F  S IBDFN=$O(^DGPM("AMV1",IBB,IBDFN)) Q:'IBDFN  D
	.. Q:$D(^TMP("IBEMP",$J,IBDFN))  S Y=IBB D DD^%DT S IBAPDT=$P(Y,"@",1),IBPM=""
	.. F  S IBPM=$O(^DGPM("AMV1",IBB,IBDFN,IBPM)) Q:IBPM=""  S IBAPTYP=$P(^DGPM(IBPM,0),"^",2),IBAPTYP=$P($G(^DG(405.3,IBAPTYP,0)),"^",1)
	.. S IBAPDT=IBAPDT D PAT
	K IBB,IBE,IBDFN,IBAPDT,IBAPTYP,IBPM,X,Y
	Q
	;
OPT	;search for outpatient visits
	;find ALL outpatient visits within the date range and division
	;this includes registrations (2,1000), scheduled appointments (44,1900), and unscheduled appointments (409.5)
	;
DIS	;find all dispositions (2,1000) within the date range
	; - (2,1000,1) that are not 2-APPLICATION WITHOUT EXAM
	S IBB=IBBEG-.0001,IBE=IBEND+.9,IBHDR=IBHDR_" FOR OUTPATIENT VISITS ",IBQ=0
	F  S IBB=$O(^DPT("ADIS",IBB)) Q:'IBB!(IBB>IBE)!(IBQ)  S IBDFN=0 D  S IBQ=$$STOP^IBOEMP2
	. F  S IBDFN=$O(^DPT("ADIS",IBB,IBDFN)) Q:'IBDFN  S IBY=0 I '$D(^TMP("IBEMP",$J,IBDFN)) D
	.. F  S IBY=$O(^DPT("ADIS",IBB,IBDFN,IBY)) Q:'IBY  S IBX=$G(^DPT(IBDFN,"DIS",IBY,0)) I +IBX,$P(IBX,U,2)<2,(VAUTD=1!($D(VAUTD(+$P(IBX,"^",4))))) D
	... S IBAPTYP="DISPOSITION",IBAPDT=IBB\1
	... D PAT
	;
	;
APPT	;outpatient: find all scheduled appointments (44,1900 -> 2,1900)
	; - must be clinic appointments (44,2.1 -> "AC" x-ref)
	; - (2,1900,3) that are outpatient, have not been canceled or no-showed etc.
	S IBE=IBEND+.3,IBCLN=0
	F  S IBCLN=$O(^SC("AC","C",IBCLN)) Q:'IBCLN!(IBQ)  D  S IBQ=$$STOP^IBOEMP2
	. I VAUTD'=1,'$D(VAUTD(+$P($G(^SC(IBCLN,0)),"^",15))) Q  ; check division
	. S IBB=IBBEG-.0001 F  S IBB=$O(^SC(IBCLN,"S",IBB)) Q:'IBB!(IBB>IBE)  D
	.. S IBY=0 F  S IBY=$O(^SC(IBCLN,"S",IBB,1,IBY)) Q:'IBY  S IBX=$G(^SC(IBCLN,"S",IBB,1,IBY,0)) I +IBX D
	... S IBDFN=+IBX I $D(^TMP("IBEMP",$J,IBDFN)) Q
	... S IBXP=$G(^DPT(IBDFN,"S",IBB,0)) I +IBXP'=IBCLN,$P(IBXP,U,2)'="" Q
	... S IBAPTYP=$P($G(^SD(409.1,+$P(IBXP,U,16),0)),U,1),IBAPDT=IBB\1
	... D PAT
	;
	;
STOP	;outpatient: find all unscheduled outpatient appointments (409.5, add/edit) for the patient
	S IBB=IBBEG-.001,IBE=IBEND+.3
	F  S IBB=$O(^SDV(IBB)) Q:'IBB!(IBB>IBE)!(IBQ)  D  S IBQ=$$STOP^IBOEMP2
	. S IBX=$G(^SDV(IBB,0)) I IBX'="",(VAUTD=1!($D(VAUTD(+$P(IBX,"^",3))))) S IBDFN=+$P(IBX,"^",2) D
	.. Q:$D(^TMP("IBEMP",$J,IBDFN))  S Y=IBB D DD^%DT S IBAPDT=$P(Y,"@",1)
	.. S IBAPTYP=$O(^SDV(IBB,"CS",0)),IBAPTYP=$P($G(^SDV(IBB,"CS",+IBAPTYP,0)),"^",5),IBAPTYP=$P($G(^SD(409.1,+IBAPTYP,0)),"^",1)
	.. D PAT
	K IBB,IBE,IBX,IBY,IBCLN,IBXP,IBDFN,IBAPDT,IBAPTYP,X,Y
	Q
	;
	;Input:  IBB,IBDFN,IBAPTYP,IBAPDT
PAT	;gather data on patients with no insurance at time of care
	N IBX,IBY
	I $D(^TMP("IBEMP",$J,IBDFN)) G PEND ; quit if this patient has already been processed
	S ^TMP("IBEMP",$J,IBDFN)="" ; once a pt is checked don't check again
	S DFN=IBDFN,IBINDT=IBB D ^IBCNS G:IBINS PEND ; quit if patient has insurance
	D DEM^VADPT G:+VADM(6) PEND ; quit if patient is dead
	D ELIG^VADPT S IBPELG=$G(^DIC(8,+VAEL(1),0)),IBPELG=$S($P(IBPELG,"^",3)'="":$P(IBPELG,"^",3),1:$E($P(VAEL(1),"^",2),1,4)) K VAEL
	D OPD^VADPT S IBSES=$P($G(^DPT(DFN,.25)),"^",15) ; spouses employment status
	;
	;get patient and spouse's employer data
	;add to report if patient or spouse employment status is employed or the patients or spouse employer name is defined
	S DFN=IBDFN F Z=5,6 S VAOA("A")=Z D OAD^VADPT I VAOA(9)'=""!(Z=5&("1245"[+VAPD(7)))!(Z=6&("1245"[+IBSES)) D  K VAOA
	. S IBZ=$S(VAOA("A")=5:"P",1:"S"),IBADD="",IBADDN=VAOA(9),VAOA(5)=$P(VAOA(5),"^",2),IBX=0
	. S IBY=$A(IBADDN) I IBY>96,IBY<123 S IBY=IBY-82 ; deal with lower case
	. I IBY<IBRGB!(IBY>IBRGE) Q  ; is employer name within range?
	. I IBADDN="" S (VAOA(9),IBADDN)="{EMPLOYER NOT SPECIFIED}"
	. F IBI=9,1:1:6,8 S IBX=IBX+1 I VAOA(IBI)'="" S $P(IBADD,"^",IBX)=VAOA(IBI)
	. S IBY="",IBX=1
	. I $D(^TMP("IBEMP",$J,"E",IBADDN)) F  S IBY=$O(^TMP("IBEMP",$J,"E",IBADDN,IBY)) Q:IBY=""  Q:^TMP("IBEMP",$J,"E",IBADDN,IBY)=IBADD  S IBX=IBX+1
	. S ^TMP("IBEMP",$J,"E",IBADDN)=+$G(^TMP("IBEMP",$J,"E",IBADDN))+1
	. S ^TMP("IBEMP",$J,"E",IBADDN,IBX)=IBADD
	. S ^TMP("IBEMP",$J,"E",IBADDN,IBX,VADM(1),IBDFN,IBZ)=""
	. S ^TMP("IBEMP",$J,IBDFN)=VADM(1)_"^"_$P(VADM(2),U,2)_"^"_IBAPDT_"^"_IBAPTYP_"^"_IBPELG
	. I IBZ="P" D OPD^VADPT S ^TMP("IBEMP",$J,IBDFN,IBZ)=VADM(1)_"^"_VAPD(6)_"^"_$P(IBES,"^",+VAPD(7))_"^"_$P(VADM(2),"^",2) Q
	. D GETREL^DGMTU11(DFN,IBZ,IBEND) S IBY=$G(DGREL("S"))
	. S ^TMP("IBEMP",$J,IBDFN,IBZ)=$$NAME^DGMTU1(+IBY)_"^"_$P($G(^DPT(DFN,.25)),"^",14)_"^"_$P(IBES,"^",+IBSES)_"^"_$$SSN^DGMTU1(+IBY)
PEND	K VAIP,VADM,VAEL,VAPD,VAOA,DGREL,IBINDT,IBINS,DFN,IBPELG,IBSES,IBPAT,IBADD,IBADDN,IBI,IBX,IBY,IBZ,Z
	Q

IBOEMP2
IBOEMP2	;ALB/ARH - EMPLOYER REPORT (PRINT) ; 6/19/93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;Array:  patient:  DFN)=pt name ^ SSN ^ event date ^ appt type ^ prim elig
	;        employed: DFN,x)=name ^ occupation ^ employment status ^ SSN
	;        employer: "E",EMPLOYER NAME)=count of employees per employer name
	;                  "E",EMPLOYER NAME,y)=employer address
	;                  "E",EMPLOYER NAME,y,PATIENT NAME,DFN,x)=""
	;
	;        w/x = "P" if employed is patient, "S" for spouse otherwise
	;          y = number of employers with same name but not the same address, ie. 1:1:...
	;
	;
	D HDR
	;
P1	;print report
	Q:'$D(^TMP("IBEMP",$J))  S IBW=IOM
	S IBADDN="" F  S IBADDN=$O(^TMP("IBEMP",$J,"E",IBADDN)) Q:IBADDN=""!(IBQ)  S IBCNT=^TMP("IBEMP",$J,"E",IBADDN),IBX="" D  Q:IBQ
	. F  S IBX=$O(^TMP("IBEMP",$J,"E",IBADDN,IBX)) Q:IBX=""!(IBQ)  D:(IBLN+9)>IOSL HDR Q:IBQ  D  W !!,IBDSH,! S IBLN=IBLN+2
	.. ;
	.. ;print employer name and address
	.. S IBADD=^TMP("IBEMP",$J,"E",IBADDN,IBX) W !,$E($P(IBADD,"^",1),1,29),?32,$P(IBADD,"^",8),?55 S IBLNG=55,IBLN=IBLN+2
	.. F IBI=2:1:7 S IBP=$P(IBADD,"^",IBI) I IBP'="" S IBP=IBP_$S(IBI<6:",",IBI=6:" ",1:"") D
	... F  S IBE=$P(IBP," ",1)_" ",IBP=$P(IBP," ",2,999) D  W ?IBLNG,IBE S IBLNG=IBLNG+IBT Q:IBP=""
	.... S IBT=$L(IBE) I (IBT+IBLNG)>IOM S IBLNG=55,IBLN=IBLN+1 W !
	.. ;
	.. ;print patient data
	.. S IBPTNM="" F  S IBPTNM=$O(^TMP("IBEMP",$J,"E",IBADDN,IBX,IBPTNM)) Q:IBPTNM=""  D  Q:IBQ
	... S IBDFN="" F  S IBDFN=$O(^TMP("IBEMP",$J,"E",IBADDN,IBX,IBPTNM,IBDFN)) Q:IBDFN=""  I $D(^TMP("IBEMP",$J,IBDFN)) D:(IBLN+3)>IOSL HDR Q:IBQ  D
	.... S IBPAT=^TMP("IBEMP",$J,IBDFN),IBLN=IBLN+2 S Y=$P(IBPAT,"^",3) X ^DD("DD")
	.... W !!,?3,"Patient: ",?12,$P(IBPAT,"^",1),?55,$P(IBPAT,"^",2),?70,$P(IBPAT,"^",5),?77,Y,?92,$E($P(IBPAT,"^",4),1,11),?107,"Home: ",$P($G(^DPT(IBDFN,.13)),"^",1)
	.... ;
	.... ;print employed's data
	.... S IBZ="" F  S IBZ=$O(^TMP("IBEMP",$J,"E",IBADDN,IBX,IBPTNM,IBDFN,IBZ)) Q:IBZ=""  D:(IBLN'<IOSL) HDR Q:IBQ  D
	..... S IBEMPED=^TMP("IBEMP",$J,IBDFN,IBZ),IBLN=IBLN+1
	..... W !,?3,"Employed: ",?13,$S(IBZ="P":"Patient: ",1:"Spouse:  "),?22,$P(IBEMPED,"^",1),?55,$P(IBEMPED,"^",4),?70,$E($P(IBEMPED,"^",2),1,19),?92,$E($P(IBEMPED,"^",3),1,11)
	..... I IBZ="P" W ?107,"Work: ",$P($G(^DPT(IBDFN,.13)),"^",2) ; we only have patients work number
	I 'IBQ D PAUSE
	K IBT,IBE,IBP,IBI,IBY,IBX,IBZ,IBQ,IBW,IBCNT,IBADD,IBADDN,IBLNG,IBDFN,IBPAT,IBPTNM,IBEMPED,X,Y
	Q
	;
HDR	;print the report header, allow user stops, for terminals only form feed on first page
	S IBQ=$$STOP Q:IBQ  D:IBPGN>0 PAUSE Q:IBQ  I IBPGN>0!($E(IOST,1,2)["C-") W @IOF
	S IBPGN=IBPGN+1,IBLN=5 W IBHDR,IBBEGE," - ",IBENDE I IOM<85 W !
	W ?(IOM-30),IBCDT,?(IOM-8),"PAGE ",IBPGN W:IBHDR'="" !,IBHDR1 W !,IBDSH,!
	Q
	;
PAUSE	;pause at end of screen if being displayed on a terminal
	Q:$E(IOST,1,2)'["C-"
	S DIR(0)="E" D ^DIR K DIR I $D(DUOUT)!($D(DIRUT)) S IBQ=1
	Q
	;
STOP()	;determine if user requested task to be stopped
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !!,"TASK STOPPED BY USER",!!
	Q +$G(ZTSTOP)

IBOHLD1
IBOHLD1	;ALB/CJM -  REPORT OF CHARGES ON HOLD ;MARCH 3 1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
MAIN	;
	N IBQUIT S IBQUIT=0
QUEUED	; entry point if queued
	;***
	;S XRTL=$ZU(0),XRTN="IBOHLD1-2" D T0^%ZOSV ;start rt clock
	K ^TMP($J)
	D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHLD2
	D EXIT
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOHLD1" D T1^%ZOSV ;stop rt clock
	Q
EXIT	;
	K ^TMP($J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	W !!,*7,"*** Margin width of this output is 132 ***"
	W !,"*** This output should be queued ***"
	S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="QUEUED^IBOHLD1",ZTIO=ION,ZTDESC="HELD CHARGES REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS K ZTSK S IBQUIT=1 Q
	U IO
	Q
	; indexes records that should be included in report
	;
CHRGS	; charges on hold
	N IBN,DFN,IBNAME,IBND
	S DFN=0 F  S DFN=$O(^IB("AH",DFN)) Q:'DFN  D PAT S IBN=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D
	.S IBND=$G(^IB(IBN,0)) Q:'IBND
	.S ^TMP($J,"HOLD",IBNAME,DFN,IBN)=""
	.D BILLS
	Q
PAT	; patient name
	N VAERR,VADM D DEM^VADPT I VAERR K VADM
	S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
	Q
BILLS	; find bills for charges on hold
	N IBFR,IBT,IBATYPE,IBTO
	S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",1:"I")
	S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
	I IBATYPE="I" D
	.D INP
	E  D OTP
	Q
INP	; inpatient bills
	N IBEV,IBBILL,IBT,X,IBEND,IBOK
	S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
	S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
	S X1=IBEV,X2=1 D C^%DTC S IBEND=X
	S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
	.D INPTCK
	.I IBOK S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
	Q
	;
INPTCK	; does bill belong to charge? returns IBOK=0 if no
	N IBBILL0,IBBILLU
	S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
	S IBOK=1
CK1	; for same patient?
	I DFN=$P(IBBILL0,"^",2)
	S IBOK=$T
	Q:'IBOK
CK2	; same type- inp or opt?
	N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
	I B=IBATYPE
	S IBOK=$T
	Q:'IBOK
CK3	; overlap in date range?
	N F,T
	S F=+IBBILLU,T=$P(IBBILLU,"^",2)
	I (IBTO<F)!(IBFR>T)
	S IBOK='$T
	Q:'IBOK
CK4	; insurance bill?
	I $P(IBBILL0,"^",11)="i"
	S IBOK=$T
	Q
OTP	; outpatient bills
	N X,IBV,IBBILL,IBOK,IBBILL0
	S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
	.F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
	..Q:$D(^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL))
	..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
	..S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
	Q

IBOHLD2
IBOHLD2	;ALB/CJM  -  REPORT OR HELD CATC CHARGES ;MAR 6,1991
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
REPORT	;
	N IBQUIT,IBPAGE,IBNOW,IBLINE,IBCRT,IBBOT,DFN,IBNAME,IBN
	S IBCRT=0,IBBOT=6,IBQUIT=0 I $E(IOST,1,2)="C-" S IBCRT=1,IBBOT=2
	S IBLINE="",$P(IBLINE,"=",86)="||",IBLINE=IBLINE_$E(IBLINE,1,45)
	D NOW^%DTC S Y=X X ^DD("DD") S IBNOW=Y
	I IBCRT W @IOF
LOOP	;
	S IBPAGE=1 D HEADER Q:IBQUIT
	S IBNAME="" F  S IBNAME=$O(^TMP($J,"HOLD",IBNAME)) Q:IBNAME=""!(IBQUIT)  S DFN=0 F  S DFN=$O(^TMP($J,"HOLD",IBNAME,DFN)) Q:'DFN!(IBQUIT)  D PRNTPAT Q:IBQUIT  S IBN=0 F  S IBN=$O(^TMP($J,"HOLD",IBNAME,DFN,IBN)) Q:'IBN!(IBQUIT)  D
	.D PRNTCHG,PRNTBILL:'IBQUIT
	Q
PRNTBILL	; prints bills for a charge
	N IB,IB0,IBSTAT,IBCHG,IBPD,C,Y,I,IBT
	D:$Y-IBBOT+1>IOSL HEADER Q:IBQUIT
	S IB="" F I=1:1 S IB=$O(^TMP($J,"HOLD",IBNAME,DFN,IBN,IB)) W:'IB&(I<2) ?85,"||",! D:$Y+IBBOT>IOSL HEADER Q:'IB!(IBQUIT)  D
	.W ?85,"||"
	.S IB0=$G(^DGCR(399,IB,0)) Q:IB0=""
	.W ?88,$P(IB0,"^",1) ; bill #
	.S IBSTAT=$$STA^PRCAFN(IB)
	.W:+IBSTAT>0 ?97,$E($P(IBSTAT,"^",2),1,14)
	.S IBT=$J((+^DGCR(399,IB,"U1")-$P(^("U1"),"^",2)),9,2)
	.W ?112,IBT ; total charges
	.S IBPD=$$TPR^PRCAFN(IB) S:IBPD<0 IBPD="" S IBPD=$J(IBPD,9,2) W ?123,IBPD,! D:$Y+IBBOT>IOSL HEADER
	Q
PRNTPAT	; prints patient data
	N VAERR,VADM,IBSSN D DEM^VADPT S:'VAERR IBSSN=VA("BID") ; pt id,brief
	D:$Y+IBBOT>IOSL HEADER Q:IBQUIT
	W $E(IBNAME,1,20),?22,IBSSN
	Q
PRNTCHG	; prints a charge
	N IBACT,IBTYPE,IBBILL,IBFR,IBTO,IBCHG,IBND
	S IBND=$G(^IB(IBN,0))
	; action id
	S IBACT=+IBND
	; type
	S IBTYPE=$P(IBND,"^",3),IBTYPE=$E($P($G(^IBE(350.1,IBTYPE,0)),"^",1),4,7)
	; bill #
	S IBBILL=$P($P(IBND,"^",11),"-",2)
	; from date
	S IBFR=$$DAT1^IBOUTL($P(IBND,"^",14))
	; to date
	S IBTO=$$DAT1^IBOUTL($P(IBND,"^",15))
	; charge$
	S IBCHG=$J(+$P(IBND,"^",7),9,2)
	W ?29,IBACT,?39,IBTYPE,?46,IBBILL,?55,IBFR,?66,IBTO,?75,IBCHG
	Q
HEADER	; writes the report header
	Q:IBQUIT
	I IBCRT,$Y>1 D  Q:IBQUIT
	.F  Q:$Y>(IOSL-1)  W !
	.N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S IBQUIT=1 Q
	I IBPAGE>1 W !,@IOF
	W ?53,"CATEGORY C CHARGES ON HOLD",?110,IBNOW,"  PAGE ",IBPAGE,!,"HELD CHARGES",?87,"CORRESPONDING THIRD PARTY BILLS",!,IBLINE
	W !,"Name",?22,"Pt.ID",?29,"ActionID",?39,"Type",?46,"Bill#",?55,"From",?66,"To",?78,"Charge",?85,"||",?88,"Bill#",?97,"AR-Status",?115,"Charge",?128,"Paid"
	W !,IBLINE,!
	S IBPAGE=IBPAGE+1
	Q

IBOLK
IBOLK	;ALB/AAS - INTEGRATED BILLING - DISPLAY BY BILL NUMBER ; 6-MAR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOLK-1" D T0^%ZOSV ;start rt clock
	S DIC("A")="Select CHARGE ID or PATIENT NAME: ",DIC="^PRCA(430,",DIC(0)="AEQM" D ^DIC K DIC G END1:+Y<1 S IBIL=$P(Y,"^",2)
	S IBIFN=$O(^DGCR(399,"B",$P(IBIL,"-",2),0))
	I '$D(^IB("ABIL",IBIL)),'IBIFN W !!,"Billing has no Record of this Charge ID.",! G %
	;
BRIEF	R !,"(B)rief or (F)ull Inquiry: B// ",X:DTIME G:X="^"!('$T) END1 S:X="" X="B" S X=$E(X)
	I "BFbf"'[X D  G BRIEF
	. W !!?5,"Enter: '<CR>'  -  To select the Brief Inquiry."
	. W !?12,"'F'     -  To select the Full Inquiry.  This option will"
	. W !?23,"include the Address Inquiry, and more detailed"
	. W !?23,"information for Pharmacy Co-Pay bills."
	. W !?12,"'^'     -  To quit this option.",!
	W $S("Bb"[X:"   BRIEF",1:"   FULL") S IBFULL="Ff"[X
	I IBIFN S IBAC=8,IBQUIT=0
	;
DEV	W ! S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
	I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q") D HOME^%ZIS W ! G %
	. S ZTDESC="IB Print Actions by Bill Number"
	. S ZTRTN=$S(IBIFN:"VIEW^IBCNQ",1:"EN^IBOLK")
	. S ZTSAVE("IBFULL")="",ZTSAVE("IBIL")="",ZTSAVE("IBIFN")=""
	. I IBIFN F I="IBAC","IBQUIT" S ZTSAVE(I)=""
	;
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
	I 'IBIFN D EN G %
	D VIEW^IBCNQ,Q^IBCNQ,END1 G %
	;
EN	;  -Entry to display IB Action data for an AR Bill number
	;  -Input   IBIL = external form of bill number, ie 500-K10001
	;           IBFULL = 1 for full profile logic, 0 for brief description
	;***
	;S XRTL=$ZU(0),XRTN="IBOLK-2" D T0^%ZOSV ;start rt clock
	S IBN=$O(^IB("ABIL",IBIL,"")) G:'$D(^IB(IBN,0)) ENQ
	S IBTOTL=0,IBQUIT="",IBPAG=0 D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12)) D HDR
	;
	S IBN="" F IBI=0:0 S IBN=$O(^IB("ABIL",IBIL,IBN)) Q:'IBN  I $D(^IB(IBN,0)) D LINE Q:IBQUIT
	I 'IBQUIT D TOTAL,PAUSE,^IBOLK1:IBFULL&('IBQUIT)
ENQ	D END Q
	;
LINE	;  -find data for one line, write line, accumulate totals
	I '$D(IBTRAN),$Y>(IOSL-5) D PAUSE Q:IBQUIT  D HDR1
	S IBND=^IB(IBN,0),IBND1=$G(^(1))
	I IBFULL,$D(^IBE(350.1,+$P(IBND,"^",3),30)) W ! S X1=$P($P($P(IBND,"^",4),";",1),":",2),X2=$P($P($P(IBND,"^",4),";",2),":",2),X=X1_"^"_$S(X2:X2,1:0) X ^(30)
	S IBTYP=$G(^IBE(350.1,+$P(IBND,"^",3),0)),IBSEQNO=$P(IBTYP,"^",5)
	W ! S Y=$P($P(IBND1,"^",2),".",1) D DT^DIQ
	W ?15,$E($P($P(IBTYP,"^")," ",2,99),1,20),?37,$E($P(IBND,"^",8),1,20),?60,$J($P(IBND,"^",6),5)
	S IBCHRG=$P(IBND,"^",7) I IBSEQNO=2 S IBCHRG=(-IBCHRG) ;cancel types are decrease adjustments
	S X=IBCHRG,X2="2$",X3=10 D COMMA^%DTC W ?69,X
	S IBTOTL=IBTOTL+IBCHRG
	I $P(IBND,"^",10),IBSEQNO=2 W !,?5,"Charge Removal Reason: ",$S($D(^IBE(350.3,$P(IBND,"^",10),0)):$P(^(0),"^"),1:"UNKNOWN")
	Q
	;
HDR	S IBND=^IB(IBN,0),DFN=+$P(IBND,"^",2),IBNAME=$$PT^IBEFUNC(DFN)
HDR1	S IBPAG=IBPAG+1 I $E(IOST,1,2)["C-"!(IBPAG>1) W @IOF,*13
	W $E($P(IBNAME,"^"),1,20),"   ",$P(IBNAME,"^",2),?38,IBIL,?51,IBHDT,?72,"PAGE: ",IBPAG
	D DISP^IBARXEU(DFN,DT,2) W !
	W:'IBFULL !,"DATE",?15,"CHARGE TYPE",?37,"BRIEF DESCRIPTION",?62,"UNITS",?73,"CHARGE"
	S IBLINE="",$P(IBLINE,"=",IOM)="" W !,IBLINE K IBLINE
	Q
	;
TOTAL	W !?67,"------------" S X=IBTOTL,X2="2$",X3=12 D COMMA^%DTC
	W !,?67,X
	Q
	;
PAUSE	Q:$E(IOST,1,2)'["C-"
	F IBJ=$Y:1:(IOSL-4) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q
	;
END1	K IBFULL
END	W !
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOLK" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K X,X2,X3,Y,DFN,IBIFN,IBAC,I,IB,IBIL,IBI,IBJ,IBNAME,IBLINE,IBN,IBND,IBND1,IBCHRG,IBSEQNO,IBTYP,IBTOTL,ZTSK,IBHDT,IBPAG,IBQUIT,DN,D0,DUOUT,DTOUT,VA,VADM,VAERR
	D ^%ZISC
	Q
	;
ENF	;  -entry point for AR to print full profile for IB actions for
	;   an ar transaction number.
	;  -input   x = ar transaction number ($p(^ib(ibn,0),u,12)
	;
	S IBFULL=1
	;
ENB	;  -entry point for AR to print brief profile for IB actions for
	;   an ar transaction number.
	;  -input   x = ar transaction number
	;
	S IBTOTL=0,IBPAG=0,IBQUIT="" S:'$D(IBFULL) IBFULL=0
	S IBTRAN=X
	S IBN="" F  S IBN=$O(^IB("AT",IBTRAN,IBN)) Q:IBN=""  D LINE
	K D0,DN,X,X2,X3,Y,IBFULL,IBTOTL,IBPAG,IBQUIT,IBTRAN,IBN,IBND,IBND1,IBSEQNO,IBTYP,IBCHRG
	Q

IBOLK1
IBOLK1	;ALB/CPM - DISPLAY BY BILL NUMBER, ADDRESS INQUIRY ; 28-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Input:     DFN  --  pointer to patient in File #2
	;        IBIFN  --  pointer to a bill in File #399
	;
	D @("HDR1^"_$S(IBIFN:"IBCNQ",1:"IBOLK"))
	W !!?25,"*** ADDRESS INFORMATION ***"
	;
	; - display patient address
	D ADD^VADPT
	W !!,"Patient Address:  ",VAPA(1)
	W:VAPA(2)]"" !?18,VAPA(2) W:VAPA(3)]"" !?18,VAPA(3)
	W:VAPA(4)]""!(VAPA(5)]"")!(VAPA(6)]"") !?18
	W VAPA(4) W:VAPA(4)]""&(VAPA(5)]"") ", " W $P(VAPA(5),"^",2)
	W:VAPA(6)]""&(VAPA(4)]""!(VAPA(5)]"")) "   " W VAPA(6)
	W:VAPA(8)]"" !?18,VAPA(8)
	;
	; - display mailing address for a UB-82
	I IBIFN S IBM=$P($G(^DGCR(399,IBIFN,"M")),"^",4,9),IBM1=$G(^("M1")) D
	. Q:IBM=""&(IBM1="")  W !!,"Mailing Address:  " D ADDR
	;
	; - display Insurance Company or Institution addresses for UB-82's
	I IBIFN S X=$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBIFN,0)),"^",7),0)),"^",7) D:X["i"!(X["o")
	. I X["i" S Y=+$G(^DGCR(399,IBIFN,"M")) Q:'$D(^DIC(36,Y,0))  D
	..  S IBM=$P(^DIC(36,Y,0),"^")_"^"_$G(^(.11)),IBPHONE=$P($G(^(.13)),"^")
	..  S IBM1=$P(IBM,"^",4),$P(IBM,"^",4,6)=$P(IBM,"^",5,7)
	. I X["o" S Y=+$P($G(^DGCR(399,IBIFN,"M")),"^",11) Q:'$D(^DIC(4,Y,0))  D
	..  S IBM=$P(^DIC(4,Y,0),"^",1,2)_"^"_$G(^(1)),IBPHONE="",IBM1=""
	..  S Z=$P(IBM,"^",2),$P(IBM,"^",2,4)=$P(IBM,"^",3,5),$P(IBM,"^",5)=Z
	. W !!,$S(X["i":"Ins Co.",1:"Instit.")," Address:  " D ADDR
	. W:IBPHONE]"" !?18,$P(IBPHONE,"^")
	;
	D PAUSE^IBOLK
	K IBM,IBM1,IBPHONE,VA,VAERR,VAPA,X,Y,Z Q
	;
ADDR	; Print mailing addresses for Insurance Companies and Institutions.
	W $P(IBM,"^") W:$P(IBM,"^",2)]"" !?18,$P(IBM,"^",2)
	W:$P(IBM,"^",3)]"" !?18,$P(IBM,"^",3) W:$P(IBM1,"^")]"" !?18,$P(IBM1,"^")
	W:$P(IBM,"^",4)]""!($P(IBM,"^",5)]"")!($P(IBM,"^",6)]"") !?18
	W $P(IBM,"^",4) W:$P(IBM,"^",4)]""&($P(IBM,"^",5)]"") ", "
	W $P($G(^DIC(5,+$P(IBM,"^",5),0)),"^")
	W:$P(IBM,"^",6)]""&($P(IBM,"^",4)]""!($P(IBM,"^",5)]"")) "   "
	W $P(IBM,"^",6)
	Q

IBOMBL
IBOMBL	;ALB/SGD - MAS BILLING LOG  ;25 MAY 88 11:42
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROMBL
	;
	I '$D(DT) D DT^DICRW
DATE	S %DT="AEPX",%DT("A")="Start with DATE: ",%DT(0)=-DT D ^%DT G Q:Y<0 S IBBEG=Y
DATE1	S %DT="EPX" R !,"Go to DATE: ",X:DTIME S:X=" " X=IBBEG G Q:(X="")!(X["^") D ^%DT G DATE1:Y<0 S IBEND=Y I IBEND<IBBEG W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
	I IBEND>DT W *7," ??" G DATE1
	;
	W !!,*7,"*** Margin width of this output is 132 ***"
	;S DGPGM="BEGIN^IBOMBL",DGVAR="IBBEG^IBEND^DUZ" D ZIS^DGUTQ G Q:POP U IO
	S %ZIS="QM" D ^%ZIS G:POP Q
	I $D(IO("Q")) K IO("Q") D  G Q
	.S ZTRTN="BEGIN^IBOMBL",ZTSAVE("IB*")="",ZTDESC="IB - MAS BILLING LOG"
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	U IO
	;
BEGIN	S Y=IBBEG X ^DD("DD") S IBHD="MAS Billing Log of Printed Bills for "_$S(IBBEG'=IBEND:"period covering ",1:"")_Y I IBBEG<IBEND S Y=IBEND X ^DD("DD") S IBHD=IBHD_" through "_Y
	S (IBL,IBL1)="",$P(IBL,"=",131)="",$P(IBL1,"-",131)="",(IBNEX,IBPG)=0,X=132 X ^%ZOSF("RM") D HEAD
	F I=0:0 S IBNEX=$O(^DGCR(399,IBNEX)) Q:'IBNEX  I $D(^DGCR(399,IBNEX,"S")) S IBS=^DGCR(399,IBNEX,"S") D:($P(IBS,"^",12)'<(IBBEG\1))&($P(IBS,"^",12)'>(IBEND\1_.2359)) PRINT I $Y>$S($D(IOSL):(IOSL-6),1:6) D HEAD
	I '$D(IBFLAG) W !!,?30,"No matches found."
Q	K IB0,IBS,IBFLAG,IBPG,IBBEG,IBEND,IBHD,IBL,IBL1,IBNEX,POP,I,X,X2,Y,%DT,%
	I '$D(ZTQUEUED) D ^%ZISC
	Q
	;
PRINT	S IBFLAG=1,IB0=^DGCR(399,IBNEX,0) S DFN=$P(IB0,"^",2) D PID^VADPT6 W ! I DFN]"",$D(^DPT(DFN,0)) W $P(^DPT(DFN,0),"^",1),?30,VA("BID") K VA("BID"),VA("PID")
	W ?39,$P(IB0,"^",1) I $P(IBS,"^",12)]"" S Y=$P(IBS,"^",12) X ^DD("DD") W ?50,Y
	I $D(^DGCR(399,IBNEX,"U1")) S IBU1=^DGCR(399,IBNEX,"U1") I $P(IBU1,"^",1)]"" S X=$S($P(IBU1,"^",2)]"":$P(IBU1,"^",1)-$P(IBU1,"^",2),1:$P(IBU1,"^",1)),X2="2$" D COMMA^%DTC W ?64,$J(X,15)
	I $P(IB0,"^",7),$D(^DGCR(399.3,$P(IB0,"^",7),0)) W ?81,$P(^(0),"^",1)
	W ?102,$S($P(IB0,"^",5)']"":"UNKNOWN",$P(IB0,"^",5)<3:"INPATIENT",1:"OUTPATIENT")
	I $P(IBS,"^",17)]"" S Y=$P(IBS,"^",17) X ^DD("DD") W ?116,Y
	Q
HEAD	S IBPG=IBPG+1 W !,@IOF,!,?94,"Date/Time Printed: " D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") W Y,!!,IBHD,?120,"Page ",IBPG,!,IBL1,!!
	W "PATIENT NAME",?30,"PT ID",?38,"BILL NO.",?50,"DATE OF BILL",?67,"AMT. BILLED",?81,"BILL CATEGORY",?102,"INPT./OPT.",?116,"DATE CANCELLED",!,IBL
	Q

IBOMTC
IBOMTC	;ALB/CPM - CATEGORY C BILLING ACTIVITY LIST ; 09-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOMTC-1" D T0^%ZOSV ;start rt clock
	;
	S:'$D(DTIME) DTIME=300 D HOME^%ZIS
	; Select Start and End dates.
BDT	S %DT="AEPX",%DT("A")="Start with DATE: " D ^%DT K %DT G END:Y<0 S IBBDT=Y
	I IBBDT<2901001 W !,"The Start Date cannot be earlier than 10/1/90.",! G BDT
EDT	S %DT="EX" R !,"Go to DATE: ",X:DTIME S:X=" " X=IBBDT
	G END:(X="")!(X["^") D ^%DT G EDT:Y<0 S IBEDT=Y
	I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G BDT
	;
	; Select output device.
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) D  G END
	.S ZTRTN="^IBOMTC1",ZTDESC="CATEGORY C BILLING ACTIVITY LIST"
	.S (ZTSAVE("IBBDT"),ZTSAVE("IBEDT"))=""
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	;
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTC" D T1^%ZOSV ;stop rt clock
	;
	D ^IBOMTC1 ; generate report
	;
END	K %DT,IBBDT,IBEDT,X,Y
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTC" D T1^%ZOSV ;stop rt clock
	Q

IBOMTC1
IBOMTC1	;ALB/CPM - CATEGORY C BILLING ACTIVITY LIST (CON'T) ; 09-JAN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOMTC-2" D T0^%ZOSV ;start rt clock
	; Select charges from file #350.
	S DFN="" F  S DFN=$O(^IB("AFDT",DFN)) Q:'DFN  D
	. S EVDT=-(IBEDT+.99) F  S EVDT=$O(^IB("AFDT",DFN,EVDT)) Q:'EVDT  D
	..  S EVDA=0 F  S EVDA=$O(^IB("AFDT",DFN,EVDT,EVDA)) Q:'EVDA  D
	...   S IBDA=0 F IBCNT=1:1 S IBDA=$O(^IB("AF",EVDA,IBDA)) Q:'IBDA  D
	....    Q:'$D(^IB(IBDA,0))  S IBD0=^(0)
	....    Q:$P(IBD0,"^",8)["ADMISSION"
	....    I $P(IBD0,"^",15)<IBBDT!($P(IBD0,"^",14)>IBEDT) Q
	....    S NAM=$P($G(^DPT(DFN,0)),"^") S:NAM="" NAM="UNKNOWN"
	....    S ^TMP($J,"IBOMTC",NAM_"@@"_DFN,+$P(IBD0,"^",14),IBDA)=""
	;
	; Print report.
	D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
	S IBLINE="",$P(IBLINE,"-",IOM+1)="",(IBPAG,IBQUIT)=0 D HDR G:IBQUIT END
	I '$D(^TMP($J,"IBOMTC")) W !!,"There are no Category C bills for this date range." G END
	;
	S NAM="" F  S NAM=$O(^TMP($J,"IBOMTC",NAM)) Q:NAM=""  D  Q:IBQUIT
	. S IBPT=$$PT^IBEFUNC($P(NAM,"@@",2))
	. I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR Q:IBQUIT
	. W !,$E($P(IBPT,"^"),1,10),?11,$P(IBPT,"^",3)
	. S IBDT="" F  S IBDT=$O(^TMP($J,"IBOMTC",NAM,IBDT)) Q:'IBDT  D  Q:IBQUIT
	..  S IBDA="" F  S IBDA=$O(^TMP($J,"IBOMTC",NAM,IBDT,IBDA)) Q:'IBDA  D  Q:IBQUIT
	...  I $Y>(IOSL-4) D PAUSE^IBOUTL Q:IBQUIT  D HDR Q:IBQUIT  W !,$E($P(IBPT,"^"),1,10),?11,$P(IBPT,"^",3)
	...  S IBD0=$G(^IB(+IBDA,0)) Q:'IBD0
	...  S X=$P($P($G(^IBE(350.1,+$P(IBD0,"^",3),0)),"^")," ",2,99)
	...  W ?17,$E($P(X," ",1,$L(X," ")-1),1,16)
	...  W ?35,$E($P($G(^IBE(350.21,+$P(IBD0,"^",5),0)),"^",2),1,11)
	...  W ?47,$$DAT1^IBOUTL($P(IBD0,"^",14)),?57,$$DAT1^IBOUTL($P(IBD0,"^",15))
	...  W ?66,$J($P(IBD0,"^",6),3)
	...  S X=$P(IBD0,"^",7),X2="2$",X3=10 D COMMA^%DTC W ?70,X,!
	;
	; - close device and quit
END	D:'IBQUIT PAUSE^IBOUTL K ^TMP($J,"IBOMTC")
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTC1" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K NAM,DFN,EVDA,EVDT,IBD0,IBDA,IBDT,IBJ,IBQUIT,IBLINE,IBHDT,IBPAG,IBPT,IBCNT,X,X2,X3
	D ^%ZISC Q
	;
	;
HDR	; Print header.
	I $E(IOST,1,2)["C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1 W "Category C Billing Activity List",?IOM-35,IBHDT,?IOM-9,"Page: ",IBPAG
	W !,"Charges from ",$$DAT1^IBOUTL(IBBDT)," through ",$$DAT1^IBOUTL(IBEDT)
	W !,"PATIENT/ID",?17,"DESCRIPTION",?35,"STATUS",?49,"FROM",?60,"TO",?66,"UNITS",?72,"CHARGE"
	W !,IBLINE
	S IBQUIT=$$STOP^IBOUTL("Category C Billing Activity List")
	Q

IBOMTE
IBOMTE	;ALB/CPM - ESTIMATE CATEGORY C CHARGES ; 17-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	S:'$D(DTIME) DTIME=300 D HOME^%ZIS
	; Check the MAS Service pointer first.
START	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOMTE-1" D T0^%ZOSV ;start rt clock
	S IBY=1 D SERV^IBAUTL2 I IBY<1 D  G END
	. W !!,"Medical Administration Service is not defined in your IB Site Parameter File."
	. W !,"Please contact your System Manager, as this impacts on all aspects of",!,"Category C billing.",!!
	;
	; Select patient to be admitted; check for previously billed charges.
	S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC G END:Y<1 S (DFN,IBDFN)=+Y
	S IBADMDT=0 D EVFIND^IBAUTL3
	I IBEVDA D  G EDT
	. W !!,"Please note that this patient was admitted on ",$$DAT1^IBOUTL(IBEVDT)," and Category C charges"
	. W !,"have been calculated through ",$$DAT1^IBOUTL(IBEVCAL),".",!
	. S X1=IBEVCAL,X2=1 D C^%DTC S IBBDT=X
	;
	; Get proposed Admission and Discharge dates.
BDT	S %DT="AEPX",%DT("A")="Proposed ADMISSION Date: " D ^%DT K %DT G END:Y<0 S IBBDT=Y
	I IBBDT<DT W !!,"Past admissions cannot be accurately estimated.",! G BDT
EDT	S %DT="EX" R !,"Proposed DISCHARGE Date: ",X:DTIME S:X=" " X=IBBDT
	G END:(X="")!(X["^") D ^%DT G EDT:Y<0 S IBEDT=Y
	I Y<IBBDT W *7," ??",!,"The DISCHARGE Date must follow the ADMISSION Date." G EDT:IBEVDA,BDT
	;
	; Select the anticipated Facility Treating Specialty, if the patient
	; is not currently admitted, and check to see if a 'billable'
	; bedsection is associated with it.
	I IBEVDA S VAIP("D")=IBEVCAL+.2359 D IN5^VADPT S Y=+VAIP(8) G BED
	;
	S DIC="^DIC(45.7,",DIC(0)="AEQMN",DIC("A")="Anticipated Facility Treating Specialty: "
	D ^DIC K DIC G END:Y<1
BED	S IBBS=$$SECT^IBAUTL5(+Y) I 'IBBS D  G END
	. W !!,"A 'billable' bedsection is not associated with this ",$S(IBEVDA:"Admission",1:"Treating Specialty"),"."
	. W !,"Category C charges ",$S(IBEVDA:"are not being",1:"would not be")," billed for this admission.",!
	;
	; Select an output device.
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="^IBOMTE1",ZTDESC="CATEGORY C INPATIENT BILLING ESTIMATOR",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q") D HOME^%ZIS,END W ! G START
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
	D ^IBOMTE1 ; generate report
	D END W ! G START ; re-run report
	;
END	K %DT,DFN,IBADMDT,IBBS,IBDFN,IBBDT,IBEVDA,IBEVDT,IBEVCAL,IBEDT,IBSERV,IBY,VAIP,VAERR,X,X1,X2,X3,Y,ZTSK
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE" D T1^%ZOSV ;stop rt clock
	Q

IBOMTE1
IBOMTE1	;ALB/CPM - ESTIMATE CATEGORY C CHARGES (PRINT) ; 17-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOMTE1-2" D T0^%ZOSV ;start rt clock
	; Set up report header.
	S IBLINE="",$P(IBLINE,"-",IOM+1)="",(IBPAG,IBQUIT)=0
	S DFN=IBDFN,IBPT=$$PT^IBEFUNC(DFN) D HDR
	;
	; Check to see if patient will be Category C upon admission.
	S IBLASTC=$$BILST^DGMTUB(DFN)
	I IBBDT>DT&(IBLASTC<DT)!(IBBDT'>DT&(IBLASTC<IBBDT)) D
	. I 'IBLASTC W "** Please note that this patient has never been Category C. **",! Q
	. W "Please note that this patient ",$S(IBBDT'<DT:"will not be",1:"was not")," Category C on the admission date."
	. W !,"Last date as Category C: ",$$DAT1^IBOUTL(IBLASTC),!
	;
	; Check to see if the patient has an active billing clock
	; from which to base the charges.  Print active clock data.
	D CLOCK^IBAUTL3
	I IBCLDA D
	. S X1=IBBDT,X2=IBCLDT D ^%DTC S IBCLCT=X I X>365 S IBCLDA=0 Q
	. W "** THIS PATIENT HAS AN ACTIVE BILLING CLOCK **",!?6,"Clock date: ",$$DAT1^IBOUTL(IBCLDT),"   Days of inpatient care within clock: ",$J(+IBCLDAY,2)
	. W !?6,"Copayments made for current 90 days of inpatient care: ",$J("$"_$J(IBCLDOL,0,2),7),!
	I 'IBCLDA S IBCLDT=IBBDT,(IBCLCT,IBCLDAY,IBCLDOL)=0 D DED^IBAUTL3
	;
	; Build necessary processing variables.
	S (IBCHGT,IBTOT)=0 K IBA
	S X1=IBEDT,X2=IBBDT D ^%DTC S IBLOS=$S(IBEDT=IBBDT&('IBEVDA):1,1:X)
	S X=IBBDT D H^%DTC S IBBDH=%H,IBFCTR=IBBDH-1
	S X=IBEDT D H^%DTC S IBEDH=%H-1
	S IBNH=$P($G(^DGCR(399.1,IBBS,0)),"^")["NURSING"
	;
	; If continuous patient, just calculate the per diem.
	I $$CONT^IBAUTL5(DFN)>IBEDT D COHDR^IBOMTE2,NOCOP W ?3,"(PATIENT IS CONTINUOUS SINCE 7/1/86)",! G PER
	;
	; Process each day in the admission for co-payments.
	D ^IBOMTE2 G:IBQUIT END
	;
PER	; Calculate the total per diem charge and print total.
	I $Y>(IOSL-7) D PAUSE^IBOUTL G:IBQUIT END D HDR
	W !,"PER DIEM CHARGES for ",$S(IBNH:"NURSING HOME",1:"HOSPITAL")," CARE",!,IBLINE
	S IBDIEM=$$DIEM^IBAUTL5,X=IBEDT I IBBDT'=IBEDT S %H=IBEDH D YMD^%DTC S IBEDT=X
	I IBEDT<IBDIEM D NOPD G TOT
	I IBDIEM>IBBDT S X1=IBEDT,(X2,IBBDT)=IBDIEM D ^%DTC S IBLOS=X+1
	I IBLOS<1 D NOPD G TOT
	S IBCHG=IBLOS*$S(IBNH:5,1:10),IBTOT=IBTOT+IBCHG
	W !,$$DAT1^IBOUTL(IBBDT),?12,$$DAT1^IBOUTL(IBEDT),?26,IBLOS," day",$E("s",IBLOS>1),"  @ $",$S(IBNH:"5.00",1:"10.00"),"/day"
	S X=IBCHG,X2="2$",X3=12 D COMMA^%DTC W ?61,X
	;
TOT	W !?62,"----------",!?35,"Total Estimated Charges:" S X=IBTOT,X2="2$",X3=12 D COMMA^%DTC W ?61,X
	D PAUSE^IBOUTL
	;
END	; Close device and quit
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTE1" D T1^%ZOSV ;stop rt clock
	Q:$D(ZTQUEUED)
	K %H,IBJ,IBDIEM,IBCLDOL,IBTOT,IBH,IBLOS,IBNH,IBFCTR,IBBDH,IBEDH,IBLASTC,IBMED,IBCLDA,IBCLDT,IBCLCT,IBCLDAY,IBQUIT,IBCHG,IBCHGT,IBPAG,IBLINE,IBMAX,IBDT,IBATYP,IBDESC,IBI,IBCHARG,IBPT
	D ^%ZISC Q
	;
	;
HDR	; Print header.
	S IBPAG=IBPAG+1,IBH="Estimated Category C Inpatient Charges for "_$P(IBPT,"^")_"  "_$P(IBPT,"^",3)_$S(IBPAG>1:"  (Con't.)",1:"")
	I $E(IOST,1,2)["C-"!(IBPAG>1) W @IOF
	W !?IOM-$L(IBH)\2,IBH,!!
	I IBEVDA W "Please note that this patient is a current inpatient.",!
	W "Charges will be estimated from ",$$DAT1^IBOUTL(IBBDT)," through ",$$DAT1^IBOUTL(IBEDT),"."
	I IBBDT=IBEDT,'IBEVDA W "  (ONE-DAY ADMISSION)"
	W ! Q
	;
NOCOP	; Print 'No Copay' message.
	W !,"** NO COPAYMENT CHARGES WILL BE APPLIED **",?67,"$0.00",! Q
	;
NOPD	; Print 'No Per Diem' message.
	W !,"** NO PER DIEM CHARGES WILL BE APPLIED **",?67,"$0.00" Q

IBOMTE2
IBOMTE2	;ALB/CPM - ESTIMATE CATEGORY C CHARGES (COPAY) ; 17-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	; Process each day in the admission for co-payments.
	D COHDR F IBI=1:1:IBLOS D  Q:IBQUIT
	. S IBCLCT=IBCLCT+1,IBCLDAY=IBCLDAY+1
	. I IBCLCT>365 D
	..  S %H=IBI+IBFCTR D YMD^%DTC W !," ** NEW BILLING CLOCK TO BEGIN ON ",$$DAT1^IBOUTL(X)," **"
	..  S (IBCLCT,IBCLDAY)=1,IBCLDT=X D DED^IBAUTL3
	. Q:IBCLDAY>360
	. S IBMAX=IBMED I IBCLDAY>90,'IBNH S IBMAX=IBMED/2
	. I IBCLDOL'<IBMAX D  Q
	..  S IBCLDOL=0,X=90-(IBCLDAY#90)
	..  S IBI=IBI+X,IBCLCT=IBCLCT+X,IBCLDAY=IBCLDAY+X
	..  I IBCLCT>365 S IBI=IBI-(IBCLCT-365),IBCLDAY=0,IBCLCT=365
	..  D:$D(IBA) WRITE
	. S %H=IBI+IBFCTR D YMD^%DTC S IBDT=X D COPAY^IBAUTL2
	. S IBCHARG=IBMAX-IBCLDOL S:IBCHG<IBCHARG IBCHARG=IBCHG
	. S IBCHG=IBCHARG S:IBCHG<0 IBCHG=0 S IBCLDOL=IBCLDOL+IBCHG
	. I '$D(IBA) S IBA=IBDT_"^"_IBDT_"^"_IBCLDAY_"^"_IBCLDAY_"^"_IBCLCT_"^"_IBCLCT_"^"_IBCHG Q
	. S $P(IBA,"^",2)=IBDT,$P(IBA,"^",4)=IBCLDAY,$P(IBA,"^",6)=IBCLCT,$P(IBA,"^",7)=$P(IBA,"^",7)+IBCHG
	D:$D(IBA) WRITE
	;
	; Print copayment totals.
	I 'IBCHGT D NOCOP^IBOMTE1 Q
	W !?62,"----------" S X=IBCHGT,X2="2$",X3=12 D COMMA^%DTC W !?61,X
	Q
	;
	;
WRITE	; Write out detail line for copayments.
	I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR^IBOMTE1,COHDR
	S IBTOT=IBTOT+$P(IBA,"^",7),IBCHGT=IBCHGT+$P(IBA,"^",7)
	W !,$$DAT1^IBOUTL($P(IBA,"^")),?12,$$DAT1^IBOUTL($P(IBA,"^",2)),?26,$J($P(IBA,"^",3),3)
	W ?35,$J($P(IBA,"^",4),3),?44,$J($P(IBA,"^",5),3),?53,$J($P(IBA,"^",6),3)
	S X=$P(IBA,"^",7),X2="2$",X3=12 D COMMA^%DTC W ?61,X
	K IBA Q
	;
COHDR	; Print copayment subheader.
	W !,"COPAYMENT CHARGES for ",$P($G(^DGCR(399.1,IBBS,0)),"^"),!,IBLINE
	W !,"   Billing Dates",?27,"Inpt. Days",?45,"Clock Days"
	W !,"  From         To",?26,"1st     Last",?44,"1st     Last",?66,"Charge"
	W !,IBLINE Q

IBOMTP
IBOMTP	;ALB/CPM - CATEGORY C BILLING PROFILE ; 10-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	S:'$D(DTIME) DTIME=300 D HOME^%ZIS
	;
ASK	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTP" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOMTP-1" D T0^%ZOSV ;start rt clock
	S DIC="^DPT(",DIC(0)="AEQMN" D ^DIC K DIC G END:Y<1 S IBDFN=+Y
	;
	; Select Start and End dates.
BDT	S %DT="AEPX",%DT("A")="Start with DATE: ",%DT("B")="OCT 01, 1990" D ^%DT K %DT G END:Y<0 S IBBDT=Y
EDT	S Y=DT D DD^%DT S %DT="EX" W !,"Go to DATE: ",Y,"//" R X:DTIME
	G END:'$T!(X["^") S:X="" X=DT D ^%DT G EDT:Y<0 S IBEDT=Y
	I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE.",! G BDT
	;
	; Select an output device.
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) D  D ^%ZTLOAD K IO("Q") D HOME^%ZIS,END W ! G ASK
	. S ZTRTN="^IBOMTP1",ZTDESC="CATEGORY C BILLING PROFILE"
	. S (ZTSAVE("IBBDT"),ZTSAVE("IBEDT"),ZTSAVE("IBDFN"))=""
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTP" D T1^%ZOSV ;stop rt clock
	D ^IBOMTP1 ; generate report
	D END W ! G ASK ; re-run for next patient
	;
END	;
	K %DT,IBDFN,IBBDT,IBEDT,X,Y,ZTSK
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTP" D T1^%ZOSV ;stop rt clock
	Q

IBOMTP1
IBOMTP1	;ALB/CPM - CATEGORY C BILLING PROFILE (CON'T) ; 10-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOMTP1-2" D T0^%ZOSV ;start rt clock
	; Begin compilation.  Start with billing clocks.
	S Y=-(IBEDT+.1),X=0 F  Q:-Y<IBBDT  S Y=$O(^IBE(351,"AIVDT",IBDFN,Y)) Q:'Y  F  S X=$O(^IBE(351,"AIVDT",IBDFN,Y,X)) Q:'X  S:$P($G(^IBE(351,X,0)),"^",4)'=3 ^TMP($J,"IBOMTP",-Y,"C")=""
	;
	; Get O/P visits from file #399.
	S X1=IBBDT,X2=-1 D C^%DTC S Y=X
	F  S Y=$O(^DGCR(399,"AOPV",IBDFN,Y)) Q:'Y!(Y>IBEDT)  D
	. S IBDA=0 F  S IBDA=$O(^DGCR(399,"AOPV",IBDFN,Y,IBDA)) Q:'IBDA  D
	..  I $D(^DGCR(399,+IBDA,0)),'$P($G(^("S")),"^",16),$P($G(^DGCR(399.3,+$P(^(0),"^",7),0)),"^")["MEANS" S ^TMP($J,"IBOMTP",Y,"M"_IBDA)=""
	;
	; Get the rest of the charges from file #350.
	S Y="" F  S Y=$O(^IB("AFDT",IBDFN,Y)) Q:'Y  I -Y'>IBEDT S Y1=0 F  S Y1=$O(^IB("AFDT",IBDFN,Y,Y1)) Q:'Y1  D
	. S IBDA=0 F  S IBDA=$O(^IB("AF",Y1,IBDA)) Q:'IBDA  D
	..  Q:'$D(^IB(IBDA,0))  S IBX=^(0)
	..  Q:$P(IBX,"^",8)["ADMISSION"
	..  I $P(IBX,"^",15)<IBBDT!($P(IBX,"^",14)>IBEDT) Q
	..  S ^TMP($J,"IBOMTP",+$P(IBX,"^",14),"I"_IBDA)=""
	;
	; Print report.
	D NOW^%DTC S IBHDT=$$DAT2^IBOUTL($E(%,1,12))
	S IBLINE="",$P(IBLINE,"-",IOM+1)="",(IBPAG,IBCHGT,IBQUIT)=0
	S IBPT=$$PT^IBEFUNC(IBDFN)
	S IBH="Category C Billing Profile for "_$P(IBPT,"^")_"  "_$P(IBPT,"^",2) D HDR
	I '$D(^TMP($J,"IBOMTP")) W !,"This patient has no Category C bills." D PAUSE^IBOUTL G END
	; - first, print detail lines
	S IBD="" F  S IBD=$O(^TMP($J,"IBOMTP",IBD)) Q:'IBD  D  G:IBQUIT END
	. S IBTY="" F  S IBTY=$O(^TMP($J,"IBOMTP",IBD,IBTY)) Q:IBTY=""  D  Q:IBQUIT
	..  I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	..  W !,$$DAT1^IBOUTL(IBD)
	..  I IBTY="C" W ?12,"Begin Category C Billing Clock" Q
	..  S IBDA=+$E(IBTY,2,99),IBD0=$S($E(IBTY)="M":$G(^DGCR(399,IBDA,0)),1:$G(^IB(IBDA,0))),IBSEQ=0
	..  I $E(IBTY)="I" S IBSEQ=$P($G(^IBE(350.1,+$P(IBD0,"^",3),0)),"^",5)
	..  W ?14,$S($E(IBTY)="M":"OPT COPAYMENT (UB-82)",1:$$ACTNM^IBOUTL(+$P(IBD0,"^",3)))
	..  W ?44,$S($E(IBTY)="M":$P(IBD0,"^"),1:$$STAT())
	..  I $E(IBTY)="I",$P(IBD0,"^",14)'=$P(IBD0,"^",15) W ?54,$$DAT1^IBOUTL($P(IBD0,"^",15))
	..  I $E(IBTY)="M" S X=+$O(^DGCR(399,IBDA,"RC","B",500,0)),IBCHG=+$P($G(^DGCR(399,IBDA,"RC",X,0)),"^",2)
	..  E  S IBCHG=+$P(IBD0,"^",7)
	..  I IBSEQ=2 S IBCHG=-IBCHG
	..  I $E(IBTY)="I",$P(IBD0,"^",11)="",$P($G(^IBE(350.21,+$P(IBD0,"^",5),0)),"^",5) S IBCHG=0
	..  S X=IBCHG,X2="2$",X3=10 D COMMA^%DTC W ?65,X
	..  S IBCHGT=IBCHGT+IBCHG
	..  I IBSEQ=2!($P(IBD0,"^",11)=""&($P($G(^IBE(350.21,+$P(IBD0,"^",5),0)),"^",5))) W !?5,"Charge Removal Reason: ",$S($D(^IBE(350.3,+$P(IBD0,"^",10),0)):$P(^(0),"^"),1:"UNKNOWN")
	; - print totals line
	I $Y>(IOSL-5) D PAUSE^IBOUTL G:IBQUIT END D HDR
	W !?63,"-----------" S X=IBCHGT,X2="2$",X3=12 D COMMA^%DTC W !?63,X
	D PAUSE^IBOUTL
	; - close device and quit
END	K ^TMP($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOMTP1" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IBJ,IBD,IBH,IBHDT,IBTY,IBDA,IBD0,IBSEQ,IBQUIT,IBCHG,IBCHGT,IBPAG,IBLINE,IBX,IBPT,X,X2,X3,Y,Y1
	D ^%ZISC Q
	;
	;
HDR	; Print header.
	I $E(IOST,1,2)["C-"!(IBPAG) W @IOF,*13
	S IBPAG=IBPAG+1 W ?(80-$L(IBH)\2),IBH
	W !,"From ",$$DAT1^IBOUTL(IBBDT)," through ",$$DAT1^IBOUTL(IBEDT)
	W ?IOM-36,IBHDT,?IOM-9,"Page: ",IBPAG
	W !,"BILL DATE   BILL TYPE",?44,"BILL #    BILL TO   TOT CHARGE"
	W !,IBLINE,! Q
	;
STAT()	; Display bill number or status
	N IBSTAT S IBSTAT=$G(^IBE(350.21,+$P(IBD0,"^",5),0))
	Q $S($P(IBSTAT,"^",6):$$HLD(+$P(IBD0,"^",5)),$P(IBD0,"^",5)=99:"Converted",$P(IBD0,"^",11)]"":$P($P(IBD0,"^",11),"-",2),$P(IBSTAT,"^",5):"Cancelled",1:"Pending")
	;
HLD(STAT)	; Return an 'on hold' status string
	Q "Hold "_$S(STAT=20:"Rate",STAT=21:"Clm",STAT=22:"Adj",1:"Ins")

IBONI001
IBONI001	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",420,0)
	;;=IBACM1 DATE CHANGE^Change Date Range^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",420,1,0)
	;;=^^1^1^2930305^^^^
	;;^UTILITY(U,$J,"PRO",420,1,1,0)
	;;=Change range of dates to search for Billable Events.
	;;^UTILITY(U,$J,"PRO",420,15)
	;;=D EXIT^IBECEA
	;;^UTILITY(U,$J,"PRO",420,20)
	;;=D DATE^IBECEA
	;;^UTILITY(U,$J,"PRO",420,99)
	;;=55356,43484
	;;^UTILITY(U,$J,"PRO",420,"MEN","IBACM1 MENU")
	;;=420^CD^11
	;;^UTILITY(U,$J,"PRO",421,0)
	;;=IBACM PATIENT CHANGE^Change Patient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",421,1,0)
	;;=^^1^1^2920203^^^^
	;;^UTILITY(U,$J,"PRO",421,1,1,0)
	;;=Change patient to search for Billable Events.
	;;^UTILITY(U,$J,"PRO",421,15)
	;;=D EXIT^IBECEA
	;;^UTILITY(U,$J,"PRO",421,20)
	;;=D PAT^IBECEA
	;;^UTILITY(U,$J,"PRO",421,99)
	;;=55356,43475
	;;^UTILITY(U,$J,"PRO",421,"MEN","IBACM1 MENU")
	;;=421^CP^10
	;;^UTILITY(U,$J,"PRO",435,0)
	;;=IBACM ADD CHARGE^Add a Charge^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",435,1,0)
	;;=^^1^1^2920427^^^^
	;;^UTILITY(U,$J,"PRO",435,1,1,0)
	;;=This extended protocol performs all actions for adding a charge.
	;;^UTILITY(U,$J,"PRO",435,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",435,2,1,0)
	;;=AC
	;;^UTILITY(U,$J,"PRO",435,2,"B","AC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",435,4)
	;;=^
	;;^UTILITY(U,$J,"PRO",435,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",435,10,1,0)
	;;=440^^1
	;;^UTILITY(U,$J,"PRO",435,10,1,"^")
	;;=IBACM ADD CHARGE ONE
	;;^UTILITY(U,$J,"PRO",435,15)
	;;=
	;;^UTILITY(U,$J,"PRO",435,20)
	;;=
	;;^UTILITY(U,$J,"PRO",435,99)
	;;=55356,43353
	;;^UTILITY(U,$J,"PRO",435,"MEN","IBACM1 MENU")
	;;=435^AC^1
	;;^UTILITY(U,$J,"PRO",437,0)
	;;=IBACM CANCEL CHARGE^Cancel a Charge^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",437,1,0)
	;;=^^1^1^2920203^^^^
	;;^UTILITY(U,$J,"PRO",437,1,1,0)
	;;=Cancel an existing charge.
	;;^UTILITY(U,$J,"PRO",437,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",437,2,1,0)
	;;=CC
	;;^UTILITY(U,$J,"PRO",437,2,"B","CC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",437,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",437,10,1,0)
	;;=442^^1
	;;^UTILITY(U,$J,"PRO",437,10,1,"^")
	;;=IBACM CANCEL CHARGE ONE
	;;^UTILITY(U,$J,"PRO",437,15)
	;;=K IBNOD
	;;^UTILITY(U,$J,"PRO",437,20)
	;;=S IBNOD(0)=XQORNOD(0)
	;;^UTILITY(U,$J,"PRO",437,99)
	;;=55356,43395
	;;^UTILITY(U,$J,"PRO",437,"MEN","IBACM1 MENU")
	;;=437^CC^3
	;;^UTILITY(U,$J,"PRO",438,0)
	;;=IBACM UPDATE CHARGE^Edit a Charge^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",438,1,0)
	;;=^^2^2^2920203^^^^
	;;^UTILITY(U,$J,"PRO",438,1,1,0)
	;;=This extended protocol performs all actions for updating a charge.
	;;^UTILITY(U,$J,"PRO",438,1,2,0)
	;;=(Cancel previous charge, add new charge.)
	;;^UTILITY(U,$J,"PRO",438,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",438,2,1,0)
	;;=EC
	;;^UTILITY(U,$J,"PRO",438,2,"B","EC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",438,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",438,10,1,0)
	;;=443^^1
	;;^UTILITY(U,$J,"PRO",438,10,1,"^")
	;;=IBACM UPDATE CHARGE ONE
	;;^UTILITY(U,$J,"PRO",438,15)
	;;=K IBNOD
	;;^UTILITY(U,$J,"PRO",438,20)
	;;=S IBNOD(0)=XQORNOD(0)
	;;^UTILITY(U,$J,"PRO",438,99)
	;;=55356,43483
	;;^UTILITY(U,$J,"PRO",438,"MEN","IBACM1 MENU")
	;;=438^EC^2
	;;^UTILITY(U,$J,"PRO",440,0)
	;;=IBACM ADD CHARGE ONE^Add a Charge^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",440,1,0)
	;;=^^1^1^2920427^^^^
	;;^UTILITY(U,$J,"PRO",440,1,1,0)
	;;=This protocol adds a charge to the ib action file.
	;;^UTILITY(U,$J,"PRO",440,20)
	;;=D ADD^IBECEA1
	;;^UTILITY(U,$J,"PRO",440,99)
	;;=55356,43353
	;;^UTILITY(U,$J,"PRO",440,"MEN","IBACM ADD CHARGE")
	;;=440^^1

IBONI002
IBONI002	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",441,0)
	;;=IBACM OP LINK^Integrated Billing link to Scheduling^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",441,1,0)
	;;=^^1^1^2940210^^^^
	;;^UTILITY(U,$J,"PRO",441,1,1,0)
	;;=Automate OP billing via link to Scheduling
	;;^UTILITY(U,$J,"PRO",441,20)
	;;=D ^IBAMTS
	;;^UTILITY(U,$J,"PRO",441,99)
	;;=55755,47370
	;;^UTILITY(U,$J,"PRO",441,"MEN","SDAM APPOINTMENT EVENTS")
	;;=441^^4
	;;^UTILITY(U,$J,"PRO",442,0)
	;;=IBACM CANCEL CHARGE ONE^Cancel a Charge^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",442,1,0)
	;;=^^1^1^2920203^^^^
	;;^UTILITY(U,$J,"PRO",442,1,1,0)
	;;=Cancel a charge .
	;;^UTILITY(U,$J,"PRO",442,20)
	;;=D CAN^IBECEA1
	;;^UTILITY(U,$J,"PRO",442,99)
	;;=55356,43395
	;;^UTILITY(U,$J,"PRO",442,"MEN","IBACM CANCEL CHARGE")
	;;=442^^1
	;;^UTILITY(U,$J,"PRO",443,0)
	;;=IBACM UPDATE CHARGE ONE^Update a charge.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",443,1,0)
	;;=^^1^1^2920203^^^^
	;;^UTILITY(U,$J,"PRO",443,1,1,0)
	;;=Update a charge (cancel previous charge, create a new one).
	;;^UTILITY(U,$J,"PRO",443,15)
	;;=
	;;^UTILITY(U,$J,"PRO",443,20)
	;;=D UPD^IBECEA1
	;;^UTILITY(U,$J,"PRO",443,99)
	;;=55356,43483
	;;^UTILITY(U,$J,"PRO",443,"MEN","IBACM UPDATE CHARGE")
	;;=443^^1
	;;^UTILITY(U,$J,"PRO",445,0)
	;;=IBACM1 MENU^Add/Edit/Cancel Charges^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",445,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",445,10,0)
	;;=^101.01PA^7^15
	;;^UTILITY(U,$J,"PRO",445,10,1,0)
	;;=435^AC^1
	;;^UTILITY(U,$J,"PRO",445,10,1,"^")
	;;=IBACM ADD CHARGE
	;;^UTILITY(U,$J,"PRO",445,10,2,0)
	;;=438^EC^2
	;;^UTILITY(U,$J,"PRO",445,10,2,"^")
	;;=IBACM UPDATE CHARGE
	;;^UTILITY(U,$J,"PRO",445,10,3,0)
	;;=437^CC^3
	;;^UTILITY(U,$J,"PRO",445,10,3,"^")
	;;=IBACM CANCEL CHARGE
	;;^UTILITY(U,$J,"PRO",445,10,4,0)
	;;=421^CP^10
	;;^UTILITY(U,$J,"PRO",445,10,4,"^")
	;;=IBACM PATIENT CHANGE
	;;^UTILITY(U,$J,"PRO",445,10,5,0)
	;;=420^CD^11
	;;^UTILITY(U,$J,"PRO",445,10,5,"^")
	;;=IBACM1 DATE CHANGE
	;;^UTILITY(U,$J,"PRO",445,10,13,0)
	;;=562^PC^12
	;;^UTILITY(U,$J,"PRO",445,10,13,"^")
	;;=IBACM PASS CHARGE
	;;^UTILITY(U,$J,"PRO",445,10,15,0)
	;;=783^UE^20
	;;^UTILITY(U,$J,"PRO",445,10,15,"^")
	;;=IBACM UPDATE EVENT
	;;^UTILITY(U,$J,"PRO",445,20)
	;;=Q
	;;^UTILITY(U,$J,"PRO",445,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",445,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",445,99)
	;;=55924,41897
	;;^UTILITY(U,$J,"PRO",446,0)
	;;=IB CATEGORY C BILLING^CATEGORY C BILLING^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",446,1,0)
	;;=^^1^1^2940311^^
	;;^UTILITY(U,$J,"PRO",446,1,1,0)
	;;=Category C billing for ADT activity will be initiated through this option.
	;;^UTILITY(U,$J,"PRO",446,5)
	;;=
	;;^UTILITY(U,$J,"PRO",446,20)
	;;=D ^IBAMTD
	;;^UTILITY(U,$J,"PRO",446,99)
	;;=55356,43342
	;;^UTILITY(U,$J,"PRO",446,"MEN","DGPM MOVEMENT EVENTS")
	;;=446^^10
	;;^UTILITY(U,$J,"PRO",460,0)
	;;=SD PARM PARAMETERS MENU^Scheduling Parameters^^M^^^^^^^^SCHEDULING
	;;^UTILITY(U,$J,"PRO",460,1,0)
	;;=^^1^1^2920616^^^^
	;;^UTILITY(U,$J,"PRO",460,1,1,0)
	;;=This menu contains all the activities for the scheduling parameter option.
	;;^UTILITY(U,$J,"PRO",460,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",460,10,0)
	;;=^101.01PA^2^11
	;;^UTILITY(U,$J,"PRO",460,10,12,0)
	;;=876^CL^9
	;;^UTILITY(U,$J,"PRO",460,10,12,"^")
	;;=IBDF PRINT MANAGER CLINIC SETUP
	;;^UTILITY(U,$J,"PRO",460,10,13,0)
	;;=877^DV^10
	;;^UTILITY(U,$J,"PRO",460,10,13,"^")
	;;=IBDF PRINT MANAGER DIVISION SETUP
	;;^UTILITY(U,$J,"PRO",460,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",460,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",460,99)
	;;=55867,31443

IBONI003
IBONI003	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",463,0)
	;;=IB MEANS TEST EVENT^IB Edit a means test event^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",463,1,0)
	;;=^^2^2^2920403^
	;;^UTILITY(U,$J,"PRO",463,1,1,0)
	;;=This protocol will send a bulletin to billing when ever
	;;^UTILITY(U,$J,"PRO",463,1,2,0)
	;;=a change to a past means test may affect billing.
	;;^UTILITY(U,$J,"PRO",463,20)
	;;=D ^IBAMTED
	;;^UTILITY(U,$J,"PRO",463,99)
	;;=55356,43344
	;;^UTILITY(U,$J,"PRO",463,"MEN","DG MEANS TEST EVENTS")
	;;=463
	;;^UTILITY(U,$J,"PRO",562,0)
	;;=IBACM PASS CHARGE^Pass a Charge^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",562,.1)
	;;=Pass
	;;^UTILITY(U,$J,"PRO",562,1,0)
	;;=^^2^2^2920428^
	;;^UTILITY(U,$J,"PRO",562,1,1,0)
	;;=This protocol passes a Category C charge to Accounts Recievable, resulting
	;;^UTILITY(U,$J,"PRO",562,1,2,0)
	;;=in a change in its STATUS.
	;;^UTILITY(U,$J,"PRO",562,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",562,2,1,0)
	;;=PC
	;;^UTILITY(U,$J,"PRO",562,2,"B","PC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",562,4)
	;;=^^^Pass a Charge
	;;^UTILITY(U,$J,"PRO",562,20)
	;;=D PASS^IBECEA1
	;;^UTILITY(U,$J,"PRO",562,99)
	;;=55356,43473
	;;^UTILITY(U,$J,"PRO",562,"MEN","IBACM1 MENU")
	;;=562^PC^12
	;;^UTILITY(U,$J,"PRO",680,0)
	;;=IB EXEMPTION EVENTS^IB Exemption Event Driver^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",680,1,0)
	;;=^^3^3^2930121^
	;;^UTILITY(U,$J,"PRO",680,1,1,0)
	;;=This is the Integrated Billing Exemption Event driver.  It is invoked
	;;^UTILITY(U,$J,"PRO",680,1,2,0)
	;;=every time an Pharmacy Co-pay Exemption is added.  See routine
	;;^UTILITY(U,$J,"PRO",680,1,3,0)
	;;=IBARXEVT for details.
	;;^UTILITY(U,$J,"PRO",680,4)
	;;=^^^RX
	;;^UTILITY(U,$J,"PRO",680,10,0)
	;;=^101.01PA^0^1
	;;^UTILITY(U,$J,"PRO",680,99)
	;;=55763,56723
	;;^UTILITY(U,$J,"PRO",783,0)
	;;=IBACM UPDATE EVENT^Update Events^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",783,1,0)
	;;=^^5^5^2940211^^
	;;^UTILITY(U,$J,"PRO",783,1,1,0)
	;;=This menu protocol provides the user the tools needed to adjust the
	;;^UTILITY(U,$J,"PRO",783,1,2,0)
	;;=Means Test billing event record which is established for inpatient
	;;^UTILITY(U,$J,"PRO",783,1,3,0)
	;;=billing episodes.  Normally, the event record does not need to be
	;;^UTILITY(U,$J,"PRO",783,1,4,0)
	;;=managed, but if the system crashes or a logical error occurs, it
	;;^UTILITY(U,$J,"PRO",783,1,5,0)
	;;=may be necessary to adjust this record.
	;;^UTILITY(U,$J,"PRO",783,4)
	;;=^^^Update Events
	;;^UTILITY(U,$J,"PRO",783,20)
	;;=D EN^IBECEA5
	;;^UTILITY(U,$J,"PRO",783,99)
	;;=55924,41864
	;;^UTILITY(U,$J,"PRO",784,0)
	;;=IBACME EVENT MENU^Event Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",784,4)
	;;=26^4^^Event Menu
	;;^UTILITY(U,$J,"PRO",784,10,0)
	;;=^101.01PA^2^2
	;;^UTILITY(U,$J,"PRO",784,10,1,0)
	;;=785^CS^10
	;;^UTILITY(U,$J,"PRO",784,10,1,"^")
	;;=IBACME CHANGE STATUS
	;;^UTILITY(U,$J,"PRO",784,10,2,0)
	;;=786^LC^11
	;;^UTILITY(U,$J,"PRO",784,10,2,"^")
	;;=IBACME LAST CALC
	;;^UTILITY(U,$J,"PRO",784,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",784,28)
	;;=Select Event: 
	;;^UTILITY(U,$J,"PRO",784,99)
	;;=55878,44550
	;;^UTILITY(U,$J,"PRO",785,0)
	;;=IBACME CHANGE STATUS^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",785,1,0)
	;;=^^5^5^2930826^
	;;^UTILITY(U,$J,"PRO",785,1,1,0)
	;;=This protocol may be used to open or close a Means Test Billing event
	;;^UTILITY(U,$J,"PRO",785,1,2,0)
	;;=record.  If the record is opened, and the patient still admitted,
	;;^UTILITY(U,$J,"PRO",785,1,3,0)
	;;=Means Test billing will resume.  If the patient has been discharged

IBONI004
IBONI004	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",785,1,4,0)
	;;=and the event record was left open, this action may be used to close
	;;^UTILITY(U,$J,"PRO",785,1,5,0)
	;;=the event record.
	;;^UTILITY(U,$J,"PRO",785,4)
	;;=^^^Change Status
	;;^UTILITY(U,$J,"PRO",785,20)
	;;=D CS^IBECEA51
	;;^UTILITY(U,$J,"PRO",785,99)
	;;=55642,37634
	;;^UTILITY(U,$J,"PRO",786,0)
	;;=IBACME LAST CALC^Last Calc Date^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",786,1,0)
	;;=^^5^5^2930826^
	;;^UTILITY(U,$J,"PRO",786,1,1,0)
	;;=This action is used to adjust the last day that a patient was billing
	;;^UTILITY(U,$J,"PRO",786,1,2,0)
	;;=for the Means Test hospital or nursing home per diem charge.  If an
	;;^UTILITY(U,$J,"PRO",786,1,3,0)
	;;=event record is open and the patient still admitted, the nightly
	;;^UTILITY(U,$J,"PRO",786,1,4,0)
	;;=compilation will start billing the patient on the day following the
	;;^UTILITY(U,$J,"PRO",786,1,5,0)
	;;='Last Calculated' date.
	;;^UTILITY(U,$J,"PRO",786,4)
	;;=^^^Last Calc Date
	;;^UTILITY(U,$J,"PRO",786,20)
	;;=D LC^IBECEA51
	;;^UTILITY(U,$J,"PRO",786,99)
	;;=55642,37687
	;;^UTILITY(U,$J,"PRO",794,0)
	;;=IBDF EDIT SELECTION LIST MENU^EDIT SELECTION LIST^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",794,1,0)
	;;=^^2^2^2930423^^
	;;^UTILITY(U,$J,"PRO",794,1,1,0)
	;;=Displays all the selection groups defined for the list and provides
	;;^UTILITY(U,$J,"PRO",794,1,2,0)
	;;=a menu of actions for editing the contents of the list.
	;;^UTILITY(U,$J,"PRO",794,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",794,10,0)
	;;=^101.01PA^7^7
	;;^UTILITY(U,$J,"PRO",794,10,1,0)
	;;=795^AG^1^^^Add Group
	;;^UTILITY(U,$J,"PRO",794,10,1,"^")
	;;=IBDF ADD GROUP
	;;^UTILITY(U,$J,"PRO",794,10,2,0)
	;;=796^DG^2^^^Delete Group
	;;^UTILITY(U,$J,"PRO",794,10,2,"^")
	;;=IBDF DELETE GROUP
	;;^UTILITY(U,$J,"PRO",794,10,3,0)
	;;=797^GH^4^^^Group Header/Order
	;;^UTILITY(U,$J,"PRO",794,10,3,"^")
	;;=IBDF EDIT GROUP HDR/ORDER
	;;^UTILITY(U,$J,"PRO",794,10,4,0)
	;;=800^GC^3^^^Group's Contents
	;;^UTILITY(U,$J,"PRO",794,10,4,"^")
	;;=IBDF DISPLAY GRP'S SLCTNS FOR EDIT
	;;^UTILITY(U,$J,"PRO",794,10,5,0)
	;;=824^EX^7^^^Exit
	;;^UTILITY(U,$J,"PRO",794,10,5,"^")
	;;=IBDF EXIT
	;;^UTILITY(U,$J,"PRO",794,10,6,0)
	;;=1070^AB^5^^^Add Blank
	;;^UTILITY(U,$J,"PRO",794,10,6,"^")
	;;=IBDF ADD BLANK GROUP
	;;^UTILITY(U,$J,"PRO",794,10,7,0)
	;;=1071^FA^6^^^Format All
	;;^UTILITY(U,$J,"PRO",794,10,7,"^")
	;;=IBDF FORMAT ALL SELECTIONS
	;;^UTILITY(U,$J,"PRO",794,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",794,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",794,99)
	;;=55865,38871
	;;^UTILITY(U,$J,"PRO",795,0)
	;;=IBDF ADD GROUP^Add Group^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",795,1,0)
	;;=^^1^1^2930607^^^
	;;^UTILITY(U,$J,"PRO",795,1,1,0)
	;;=Adds a new group to the selection list.
	;;^UTILITY(U,$J,"PRO",795,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",795,2,1,0)
	;;=AG
	;;^UTILITY(U,$J,"PRO",795,2,"B","AG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",795,20)
	;;=D ADDGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",795,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",796,0)
	;;=IBDF DELETE GROUP^Delete Group^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",796,1,0)
	;;=^^3^3^2930510^
	;;^UTILITY(U,$J,"PRO",796,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",796,1,2,0)
	;;=Allows the user to select a group. The selected group, along with all of
	;;^UTILITY(U,$J,"PRO",796,1,3,0)
	;;=its selections, is deleted.
	;;^UTILITY(U,$J,"PRO",796,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",796,2,1,0)
	;;=DG
	;;^UTILITY(U,$J,"PRO",796,2,"B","DG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",796,20)
	;;=D DELGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",796,99)
	;;=55852,54043

IBONI005
IBONI005	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",797,0)
	;;=IBDF EDIT GROUP HDR/ORDER^Group Header/Order^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",797,1,0)
	;;=^^3^3^2930510^
	;;^UTILITY(U,$J,"PRO",797,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",797,1,2,0)
	;;=Allows a group to be selected. Then the header and print order can be
	;;^UTILITY(U,$J,"PRO",797,1,3,0)
	;;=edited.
	;;^UTILITY(U,$J,"PRO",797,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",797,2,1,0)
	;;=EG
	;;^UTILITY(U,$J,"PRO",797,2,2,0)
	;;=EH
	;;^UTILITY(U,$J,"PRO",797,2,"B","EG",1)
	;;=
	;;^UTILITY(U,$J,"PRO",797,2,"B","EH",2)
	;;=
	;;^UTILITY(U,$J,"PRO",797,20)
	;;=D EDITGRP^IBDF3
	;;^UTILITY(U,$J,"PRO",797,99)
	;;=55852,54044
	;;^UTILITY(U,$J,"PRO",798,0)
	;;=IBDF EDIT GROUP'S SELECTIONS MENU^Edit Selections^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",798,1,0)
	;;=^^1^1^2930212^^^^
	;;^UTILITY(U,$J,"PRO",798,1,1,0)
	;;=Used to edit a group's selections.
	;;^UTILITY(U,$J,"PRO",798,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",798,2,1,0)
	;;=ES
	;;^UTILITY(U,$J,"PRO",798,2,"B","ES",1)
	;;=
	;;^UTILITY(U,$J,"PRO",798,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",798,10,0)
	;;=^101.01PA^6^6
	;;^UTILITY(U,$J,"PRO",798,10,1,0)
	;;=799^AS^1^^^Add Selection
	;;^UTILITY(U,$J,"PRO",798,10,1,"^")
	;;=IBDF ADD SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,2,0)
	;;=808^ES^2^^^Edit Selection
	;;^UTILITY(U,$J,"PRO",798,10,2,"^")
	;;=IBDF EDIT SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,3,0)
	;;=809^DS^3^^^Delete Selection
	;;^UTILITY(U,$J,"PRO",798,10,3,1)
	;;=Delete Selection
	;;^UTILITY(U,$J,"PRO",798,10,3,"^")
	;;=IBDF DELETE SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,4,0)
	;;=824^EX^6^^^Exit
	;;^UTILITY(U,$J,"PRO",798,10,4,"^")
	;;=IBDF EXIT
	;;^UTILITY(U,$J,"PRO",798,10,5,0)
	;;=1069^AB^4^^^Add Blank
	;;^UTILITY(U,$J,"PRO",798,10,5,"^")
	;;=IBDF ADD BLANK SELECTION
	;;^UTILITY(U,$J,"PRO",798,10,6,0)
	;;=1072^FA^5^^^Format All
	;;^UTILITY(U,$J,"PRO",798,10,6,"^")
	;;=IBDF FORMAT GROUP'S SELECTIONS
	;;^UTILITY(U,$J,"PRO",798,15)
	;;=
	;;^UTILITY(U,$J,"PRO",798,20)
	;;=
	;;^UTILITY(U,$J,"PRO",798,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",798,99)
	;;=55866,36594
	;;^UTILITY(U,$J,"PRO",799,0)
	;;=IBDF ADD SELECTION^Add Selection^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",799,1,0)
	;;=^^1^1^2930607^^
	;;^UTILITY(U,$J,"PRO",799,1,1,0)
	;;=Adds a new selection to the selection list.
	;;^UTILITY(U,$J,"PRO",799,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",799,2,1,0)
	;;=AS
	;;^UTILITY(U,$J,"PRO",799,2,"B","AS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",799,15)
	;;=
	;;^UTILITY(U,$J,"PRO",799,20)
	;;=D ADDSLCTN^IBDF4
	;;^UTILITY(U,$J,"PRO",799,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",800,0)
	;;=IBDF DISPLAY GRP'S SLCTNS FOR EDIT^Group's Contents^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",800,1,0)
	;;=^^1^1^2930510^
	;;^UTILITY(U,$J,"PRO",800,1,1,0)
	;;=Displays the group's selections and a menu of edit actions.
	;;^UTILITY(U,$J,"PRO",800,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",800,2,1,0)
	;;=ES
	;;^UTILITY(U,$J,"PRO",800,2,"B","ES",1)
	;;=
	;;^UTILITY(U,$J,"PRO",800,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",800,20)
	;;=D EDTSLCTN^IBDF3
	;;^UTILITY(U,$J,"PRO",800,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",801,0)
	;;=IBDF CLINIC'S FORMS MENU^Clinic's Setup^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",801,1,0)
	;;=^^3^3^2931214^^^^
	;;^UTILITY(U,$J,"PRO",801,1,1,0)
	;;=Displays all of the forms used by a particular clinic. Allows the user
	;;^UTILITY(U,$J,"PRO",801,1,2,0)
	;;=to change the clinic setup, create new blank forms, copy forms, delete
	;;^UTILITY(U,$J,"PRO",801,1,3,0)
	;;=to change the clinic setup, create new blank forms, copy forms, delete

IBONI006
IBONI006	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",801,2,0)
	;;=^101.02A^^0
	;;^UTILITY(U,$J,"PRO",801,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",801,10,0)
	;;=^101.01PA^11^11
	;;^UTILITY(U,$J,"PRO",801,10,1,0)
	;;=802^EF^8^^^Edit Form
	;;^UTILITY(U,$J,"PRO",801,10,1,"^")
	;;=IBDF EDIT FORM
	;;^UTILITY(U,$J,"PRO",801,10,2,0)
	;;=815^CR^6^^^Create Blank Form
	;;^UTILITY(U,$J,"PRO",801,10,2,"^")
	;;=IBDF CREATE BLANK FORM
	;;^UTILITY(U,$J,"PRO",801,10,3,0)
	;;=816^CF^5^^^Copy Form
	;;^UTILITY(U,$J,"PRO",801,10,3,1)
	;;=Copy Form:
	;;^UTILITY(U,$J,"PRO",801,10,3,"^")
	;;=IBDF COPY FORM
	;;^UTILITY(U,$J,"PRO",801,10,4,0)
	;;=817^AS^3^^^Add Form to Setup
	;;^UTILITY(U,$J,"PRO",801,10,4,"^")
	;;=IBDF ADD TO CLINIC SETUP
	;;^UTILITY(U,$J,"PRO",801,10,5,0)
	;;=818^DS^4^^^Delete from Setup
	;;^UTILITY(U,$J,"PRO",801,10,5,"^")
	;;=IBDF DELETE FROM CLINIC SETUP
	;;^UTILITY(U,$J,"PRO",801,10,6,0)
	;;=826^PR^9^^^Print Sample Form
	;;^UTILITY(U,$J,"PRO",801,10,6,"^")
	;;=IBDF PRINT SAMPLE FORM
	;;^UTILITY(U,$J,"PRO",801,10,7,0)
	;;=827^DF^7^^^Delete Unused Form
	;;^UTILITY(U,$J,"PRO",801,10,7,"^")
	;;=IBDF DELETE FORM
	;;^UTILITY(U,$J,"PRO",801,10,8,0)
	;;=830^CC^1^^^Change Clinic
	;;^UTILITY(U,$J,"PRO",801,10,8,"^")
	;;=IBDF CHANGE CLINIC
	;;^UTILITY(U,$J,"PRO",801,10,9,0)
	;;=831^NM^2^^^Form Name/Descr/Size
	;;^UTILITY(U,$J,"PRO",801,10,9,"^")
	;;=IBDF EDIT FORM NAME/DESCR/SIZE
	;;^UTILITY(U,$J,"PRO",801,10,10,0)
	;;=854^EX^11^^^Exit
	;;^UTILITY(U,$J,"PRO",801,10,10,"^")
	;;=IBDF QUIT
	;;^UTILITY(U,$J,"PRO",801,10,11,0)
	;;=1082^RC^10^^^Recompile Form
	;;^UTILITY(U,$J,"PRO",801,10,11,"^")
	;;=IBDF COMPILE FORM
	;;^UTILITY(U,$J,"PRO",801,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",801,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",801,99)
	;;=55865,49189
	;;^UTILITY(U,$J,"PRO",802,0)
	;;=IBDF EDIT FORM^Edit Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",802,1,0)
	;;=^^2^2^2930624^^
	;;^UTILITY(U,$J,"PRO",802,1,1,0)
	;;=This protocol calls the list manager to display an encounter form. There
	;;^UTILITY(U,$J,"PRO",802,1,2,0)
	;;=is a menu of actions that allows the form description to be edited.
	;;^UTILITY(U,$J,"PRO",802,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",802,2,1,0)
	;;=EF
	;;^UTILITY(U,$J,"PRO",802,2,"B","EF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",802,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",802,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",802,20)
	;;=D EDITFORM^IBDF6
	;;^UTILITY(U,$J,"PRO",802,28)
	;;=Edit Form
	;;^UTILITY(U,$J,"PRO",802,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",803,0)
	;;=IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING^Add Tool Kit Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",803,1,0)
	;;=^^1^1^2931015^^^^
	;;^UTILITY(U,$J,"PRO",803,1,1,0)
	;;=Allows the user to select a block from the tool kit and add it to the form.
	;;^UTILITY(U,$J,"PRO",803,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",803,2,1,0)
	;;=AT
	;;^UTILITY(U,$J,"PRO",803,2,"B","AT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",803,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",803,20)
	;;=D ADD^IBDF7
	;;^UTILITY(U,$J,"PRO",803,28)
	;;=Add Tool Kit Block
	;;^UTILITY(U,$J,"PRO",803,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",804,0)
	;;=IBDF MENU FOR EDITING DISPLAYED FORM^Add Tool Kit Block^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",804,1,0)
	;;=^^1^1^2930211^^^^
	;;^UTILITY(U,$J,"PRO",804,1,1,0)
	;;=Allows the user to edit the form.
	;;^UTILITY(U,$J,"PRO",804,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",804,10,0)
	;;=^101.01PA^12^14
	;;^UTILITY(U,$J,"PRO",804,10,1,0)
	;;=803^AT^5
	;;^UTILITY(U,$J,"PRO",804,10,1,"^")
	;;=IBDF DISPLAY TOOL KIT BLOCKS FOR ADDING

IBONI007
IBONI007	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",804,10,2,0)
	;;=810^MV^1^^^Move Block
	;;^UTILITY(U,$J,"PRO",804,10,2,"^")
	;;=IBDF MOVE BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,3,0)
	;;=811^BS^3
	;;^UTILITY(U,$J,"PRO",804,10,3,"^")
	;;=IBDF RESIZE BLOCK (WHILE EDITING FORM)
	;;^UTILITY(U,$J,"PRO",804,10,4,0)
	;;=812^EB^7^^^Edit Block
	;;^UTILITY(U,$J,"PRO",804,10,4,"^")
	;;=IBDF DISPLAY FORM BLOCK FOR EDIT
	;;^UTILITY(U,$J,"PRO",804,10,5,0)
	;;=819^DB^8^^^Delete Block
	;;^UTILITY(U,$J,"PRO",804,10,5,"^")
	;;=IBDF DELETE A BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,6,0)
	;;=824^EX^11^^^Exit
	;;^UTILITY(U,$J,"PRO",804,10,6,"^")
	;;=IBDF EXIT
	;;^UTILITY(U,$J,"PRO",804,10,7,0)
	;;=825^FH^4^^^Form Header
	;;^UTILITY(U,$J,"PRO",804,10,7,"^")
	;;=IBDF EDIT HEADER BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,8,0)
	;;=828^NB^6^^^New Block
	;;^UTILITY(U,$J,"PRO",804,10,8,1)
	;;=New Block
	;;^UTILITY(U,$J,"PRO",804,10,8,"^")
	;;=IBDF CREATE EMPTY BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,9,0)
	;;=833^RD^9^^^Re Display Screen
	;;^UTILITY(U,$J,"PRO",804,10,9,"^")
	;;=IBDF REDRAW FORM
	;;^UTILITY(U,$J,"PRO",804,10,11,0)
	;;=846^CB^9^^^Copy Other Form's Block
	;;^UTILITY(U,$J,"PRO",804,10,11,"^")
	;;=IBDF COPY FORM BLOCK
	;;^UTILITY(U,$J,"PRO",804,10,13,0)
	;;=852^SH^2^^^Shift Blocks
	;;^UTILITY(U,$J,"PRO",804,10,13,"^")
	;;=IBDF SHIFT BLOCKS
	;;^UTILITY(U,$J,"PRO",804,10,14,0)
	;;=1073^VD^10^^^View w/wo Data (Toggle)
	;;^UTILITY(U,$J,"PRO",804,10,14,"^")
	;;=IBDF VIEW FORM W/WO DATA
	;;^UTILITY(U,$J,"PRO",804,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",804,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",804,99)
	;;=55852,56356
	;;^UTILITY(U,$J,"PRO",805,0)
	;;=IBDF SELECT TOOL KIT BLOCK^Add Tool Kit Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",805,1,0)
	;;=^^4^4^2930510^
	;;^UTILITY(U,$J,"PRO",805,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",805,1,2,0)
	;;=Allows the user to select a block from the list of toolkit blocks. The
	;;^UTILITY(U,$J,"PRO",805,1,3,0)
	;;=block is then pasted to the form at a position given by the user. He can
	;;^UTILITY(U,$J,"PRO",805,1,4,0)
	;;=also change the header, size, and description of the block.
	;;^UTILITY(U,$J,"PRO",805,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",805,2,1,0)
	;;=ST
	;;^UTILITY(U,$J,"PRO",805,2,2,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",805,2,"B","SB",2)
	;;=
	;;^UTILITY(U,$J,"PRO",805,2,"B","ST",1)
	;;=
	;;^UTILITY(U,$J,"PRO",805,20)
	;;=D SELECT^IBDF7
	;;^UTILITY(U,$J,"PRO",805,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",806,0)
	;;=IBDF MENU FOR ADDING TOOL KIT BLOCK^Add Tool Kit Block^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",806,1,0)
	;;=^^2^2^2931015^^^
	;;^UTILITY(U,$J,"PRO",806,1,1,0)
	;;=A menu of actions available in connection with adding a block from the 
	;;^UTILITY(U,$J,"PRO",806,1,2,0)
	;;=tool kit to a form.
	;;^UTILITY(U,$J,"PRO",806,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",806,2,1,0)
	;;=AT
	;;^UTILITY(U,$J,"PRO",806,2,"B","AT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",806,4)
	;;=40^4
	;;^UTILITY(U,$J,"PRO",806,10,0)
	;;=^101.01PA^3^3
	;;^UTILITY(U,$J,"PRO",806,10,1,0)
	;;=805^AT^2
	;;^UTILITY(U,$J,"PRO",806,10,1,"^")
	;;=IBDF SELECT TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",806,10,2,0)
	;;=807^VB^1
	;;^UTILITY(U,$J,"PRO",806,10,2,"^")
	;;=IBDF VIEW TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",806,10,3,0)
	;;=824^EX^3^^^Exit
	;;^UTILITY(U,$J,"PRO",806,10,3,"^")
	;;=IBDF EXIT
	;;^UTILITY(U,$J,"PRO",806,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",806,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",806,99)
	;;=55852,56415
	;;^UTILITY(U,$J,"PRO",807,0)
	;;=IBDF VIEW TOOL KIT BLOCK^View Block^^A^^^^^^^^INTEGRATED BILLING

IBONI008
IBONI008	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",807,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",807,2,1,0)
	;;=VB
	;;^UTILITY(U,$J,"PRO",807,2,"B","VB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",807,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",807,20)
	;;=D VIEWBLK^IBDF8
	;;^UTILITY(U,$J,"PRO",807,28)
	;;=View Block
	;;^UTILITY(U,$J,"PRO",807,99)
	;;=55852,54051
	;;^UTILITY(U,$J,"PRO",808,0)
	;;=IBDF EDIT SELECTION^Edit Selection^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",808,1,0)
	;;=^^1^1^2930115^^
	;;^UTILITY(U,$J,"PRO",808,1,1,0)
	;;=Allows editing of an existing selection
	;;^UTILITY(U,$J,"PRO",808,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",808,2,1,0)
	;;=ES
	;;^UTILITY(U,$J,"PRO",808,2,"B","ES",1)
	;;=
	;;^UTILITY(U,$J,"PRO",808,20)
	;;=D EDIT^IBDF4A
	;;^UTILITY(U,$J,"PRO",808,28)
	;;=Edit Selection:
	;;^UTILITY(U,$J,"PRO",808,99)
	;;=55852,54045
	;;^UTILITY(U,$J,"PRO",809,0)
	;;=IBDF DELETE SELECTION^Delete Selection^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",809,1,0)
	;;=^^1^1^2930115^
	;;^UTILITY(U,$J,"PRO",809,1,1,0)
	;;=Allows the user to choose existing selections for deletion.
	;;^UTILITY(U,$J,"PRO",809,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",809,2,1,0)
	;;=DS
	;;^UTILITY(U,$J,"PRO",809,2,"B","DS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",809,20)
	;;=D DELETE^IBDF4A
	;;^UTILITY(U,$J,"PRO",809,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",810,0)
	;;=IBDF MOVE BLOCK^Move Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",810,1,0)
	;;=^^1^1^2930119^^^^
	;;^UTILITY(U,$J,"PRO",810,1,1,0)
	;;=Moves a block to any position on the form.
	;;^UTILITY(U,$J,"PRO",810,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",810,2,1,0)
	;;=MB
	;;^UTILITY(U,$J,"PRO",810,2,2,0)
	;;=MV
	;;^UTILITY(U,$J,"PRO",810,2,"B","MB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",810,2,"B","MV",2)
	;;=
	;;^UTILITY(U,$J,"PRO",810,15)
	;;=
	;;^UTILITY(U,$J,"PRO",810,20)
	;;=D MOVE^IBDF5
	;;^UTILITY(U,$J,"PRO",810,28)
	;;=Move Block
	;;^UTILITY(U,$J,"PRO",810,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",811,0)
	;;=IBDF RESIZE BLOCK (WHILE EDITING FORM)^Block Size^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",811,1,0)
	;;=^^1^1^2930510^
	;;^UTILITY(U,$J,"PRO",811,1,1,0)
	;;=Allows the user to change the height and width of the block.
	;;^UTILITY(U,$J,"PRO",811,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",811,2,1,0)
	;;=RS
	;;^UTILITY(U,$J,"PRO",811,2,2,0)
	;;=BS
	;;^UTILITY(U,$J,"PRO",811,2,"B","BS",2)
	;;=
	;;^UTILITY(U,$J,"PRO",811,2,"B","RS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",811,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",811,20)
	;;=D RESIZE^IBDF5
	;;^UTILITY(U,$J,"PRO",811,28)
	;;=Resize Block
	;;^UTILITY(U,$J,"PRO",811,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",812,0)
	;;=IBDF DISPLAY FORM BLOCK FOR EDIT^Edit Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",812,1,0)
	;;=^^1^1^2930727^^^
	;;^UTILITY(U,$J,"PRO",812,1,1,0)
	;;=Allows the user to select a block from the form for editing.
	;;^UTILITY(U,$J,"PRO",812,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",812,2,1,0)
	;;=ED
	;;^UTILITY(U,$J,"PRO",812,2,"B","ED",1)
	;;=
	;;^UTILITY(U,$J,"PRO",812,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",812,20)
	;;=D EDITBLK^IBDF5B
	;;^UTILITY(U,$J,"PRO",812,28)
	;;=Edit Block:
	;;^UTILITY(U,$J,"PRO",812,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",813,0)
	;;=IBDF EDIT FORM BLOCK MENU^Edit Form Block Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",813,1,0)
	;;=^^1^1^2930120^^^^
	;;^UTILITY(U,$J,"PRO",813,1,1,0)
	;;=A menu of actions the user can use to define what is inside a form block.
	;;^UTILITY(U,$J,"PRO",813,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",813,10,0)
	;;=^101.01PA^9^9

IBONI009
IBONI009	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",813,10,1,0)
	;;=814^SE^3^^^Selection List
	;;^UTILITY(U,$J,"PRO",813,10,1,"^")
	;;=IBDF SELECTION LIST
	;;^UTILITY(U,$J,"PRO",813,10,2,0)
	;;=820^BS^2
	;;^UTILITY(U,$J,"PRO",813,10,2,"^")
	;;=IBDF RESIZE BLOCK (WHILE EDITING BLOCK)
	;;^UTILITY(U,$J,"PRO",813,10,3,0)
	;;=821^EH^1^^^Header/Descr/Outline
	;;^UTILITY(U,$J,"PRO",813,10,3,"^")
	;;=IBDF EDIT NAME,HEADER,OUTLINE
	;;^UTILITY(U,$J,"PRO",813,10,4,0)
	;;=822^DF^4^^^Data Field
	;;^UTILITY(U,$J,"PRO",813,10,4,"^")
	;;=IBDF DATA FIELD
	;;^UTILITY(U,$J,"PRO",813,10,5,0)
	;;=823^LN^5^^^Straight Line
	;;^UTILITY(U,$J,"PRO",813,10,5,"^")
	;;=IBDF STRAIGHT LINE
	;;^UTILITY(U,$J,"PRO",813,10,6,0)
	;;=824^EX^9^^^Exit
	;;^UTILITY(U,$J,"PRO",813,10,6,"^")
	;;=IBDF EXIT
	;;^UTILITY(U,$J,"PRO",813,10,7,0)
	;;=829^TA^6^^^Text Area
	;;^UTILITY(U,$J,"PRO",813,10,7,"^")
	;;=IBDF TEXT AREA
	;;^UTILITY(U,$J,"PRO",813,10,8,0)
	;;=832^SH^7^^^Shift Contents
	;;^UTILITY(U,$J,"PRO",813,10,8,"^")
	;;=IBDF SHIFT BLOCK CONTENTS
	;;^UTILITY(U,$J,"PRO",813,10,9,0)
	;;=853^SD^8^^^Save/Discard Changes
	;;^UTILITY(U,$J,"PRO",813,10,9,"^")
	;;=IBDF SAVE/DISCARD BLOCK CHANGES
	;;^UTILITY(U,$J,"PRO",813,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",813,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",813,99)
	;;=55857,55609
	;;^UTILITY(U,$J,"PRO",814,0)
	;;=IBDF SELECTION LIST^Selection List^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",814,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",814,1,1,0)
	;;=Allows the user to create a new selection list, delete or edit an already
	;;^UTILITY(U,$J,"PRO",814,1,2,0)
	;;=existing one, or change the contents of a list.
	;;^UTILITY(U,$J,"PRO",814,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",814,2,1,0)
	;;=SE
	;;^UTILITY(U,$J,"PRO",814,2,"B","SE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",814,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",814,20)
	;;=D LIST^IBDF9A
	;;^UTILITY(U,$J,"PRO",814,28)
	;;=
	;;^UTILITY(U,$J,"PRO",814,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",815,0)
	;;=IBDF CREATE BLANK FORM^Create Blank Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",815,1,0)
	;;=^^1^1^2930607^^^
	;;^UTILITY(U,$J,"PRO",815,1,1,0)
	;;=Creates a new blank form and allows the user to add it to the clinic setup.
	;;^UTILITY(U,$J,"PRO",815,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",815,2,1,0)
	;;=CR
	;;^UTILITY(U,$J,"PRO",815,2,"B","CR",1)
	;;=
	;;^UTILITY(U,$J,"PRO",815,20)
	;;=D NEWFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",815,28)
	;;=Create Blank Form:
	;;^UTILITY(U,$J,"PRO",815,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",816,0)
	;;=IBDF COPY FORM^Copy Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",816,1,0)
	;;=^^2^2^2930127^
	;;^UTILITY(U,$J,"PRO",816,1,1,0)
	;;=Allows the user to choose any form and and copy it, giving it a new name. 
	;;^UTILITY(U,$J,"PRO",816,1,2,0)
	;;=He can then add it to the clinic setup.
	;;^UTILITY(U,$J,"PRO",816,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",816,2,1,0)
	;;=CP
	;;^UTILITY(U,$J,"PRO",816,2,"B","CP",1)
	;;=
	;;^UTILITY(U,$J,"PRO",816,20)
	;;=D COPYFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",816,28)
	;;=Copy Form
	;;^UTILITY(U,$J,"PRO",816,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",817,0)
	;;=IBDF ADD TO CLINIC SETUP^Add Form to Setup^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",817,1,0)
	;;=^^1^1^2930127^
	;;^UTILITY(U,$J,"PRO",817,1,1,0)
	;;=Allows the user to add a form to the clinic setup.
	;;^UTILITY(U,$J,"PRO",817,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",817,2,1,0)
	;;=CS
	;;^UTILITY(U,$J,"PRO",817,2,2,0)
	;;=AC
	;;^UTILITY(U,$J,"PRO",817,2,"B","AC",2)
	;;=
	;;^UTILITY(U,$J,"PRO",817,2,"B","CS",1)
	;;=

IBONI010
IBONI010	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",817,20)
	;;=D SETUP^IBDF6A
	;;^UTILITY(U,$J,"PRO",817,28)
	;;=Add To Setup
	;;^UTILITY(U,$J,"PRO",817,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",818,0)
	;;=IBDF DELETE FROM CLINIC SETUP^Delete from Setup^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",818,1,0)
	;;=^^1^1^2930127^
	;;^UTILITY(U,$J,"PRO",818,1,1,0)
	;;=Allows the user to select a form and deletes it from the clinic setup.
	;;^UTILITY(U,$J,"PRO",818,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",818,2,1,0)
	;;=DC
	;;^UTILITY(U,$J,"PRO",818,2,"B","DC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",818,20)
	;;=D DSETUP^IBDF6C
	;;^UTILITY(U,$J,"PRO",818,28)
	;;=Delete From Clinic Setup:
	;;^UTILITY(U,$J,"PRO",818,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",819,0)
	;;=IBDF DELETE A BLOCK^Delete Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",819,1,0)
	;;=^^1^1^2930127^^
	;;^UTILITY(U,$J,"PRO",819,1,1,0)
	;;=Allows the user to select a block from the form and delete it.
	;;^UTILITY(U,$J,"PRO",819,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",819,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",819,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",819,20)
	;;=D DELETE^IBDF5
	;;^UTILITY(U,$J,"PRO",819,28)
	;;=Delete a Block:
	;;^UTILITY(U,$J,"PRO",819,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",820,0)
	;;=IBDF RESIZE BLOCK (WHILE EDITING BLOCK)^Block Size^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",820,1,0)
	;;=^^2^2^2930510^
	;;^UTILITY(U,$J,"PRO",820,1,1,0)
	;;=This allows the user to change the height and width of the block while he
	;;^UTILITY(U,$J,"PRO",820,1,2,0)
	;;=is editing the block.
	;;^UTILITY(U,$J,"PRO",820,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",820,2,1,0)
	;;=RS
	;;^UTILITY(U,$J,"PRO",820,2,2,0)
	;;=BS
	;;^UTILITY(U,$J,"PRO",820,2,"B","BS",2)
	;;=
	;;^UTILITY(U,$J,"PRO",820,2,"B","RS",1)
	;;=
	;;^UTILITY(U,$J,"PRO",820,20)
	;;=D RESIZE^IBDF9
	;;^UTILITY(U,$J,"PRO",820,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",821,0)
	;;=IBDF EDIT NAME,HEADER,OUTLINE^Header/Descr/Outline^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",821,1,0)
	;;=^^1^1^2930201^
	;;^UTILITY(U,$J,"PRO",821,1,1,0)
	;;=Allows editing of the block header and outline type.
	;;^UTILITY(U,$J,"PRO",821,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",821,2,1,0)
	;;=EH
	;;^UTILITY(U,$J,"PRO",821,2,"B","EH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",821,20)
	;;=D EDITBLK^IBDF9
	;;^UTILITY(U,$J,"PRO",821,99)
	;;=55852,54045
	;;^UTILITY(U,$J,"PRO",822,0)
	;;=IBDF DATA FIELD^Data Field^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",822,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",822,1,1,0)
	;;=Allows the user to create a new data field or edit or delete an already
	;;^UTILITY(U,$J,"PRO",822,1,2,0)
	;;=existing one.
	;;^UTILITY(U,$J,"PRO",822,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",822,2,2,0)
	;;=DF
	;;^UTILITY(U,$J,"PRO",822,2,"B","DF",2)
	;;=
	;;^UTILITY(U,$J,"PRO",822,20)
	;;=D FIELD^IBDF9B
	;;^UTILITY(U,$J,"PRO",822,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",823,0)
	;;=IBDF STRAIGHT LINE^Straight Line^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",823,1,0)
	;;=^^2^2^2930324^^
	;;^UTILITY(U,$J,"PRO",823,1,1,0)
	;;=Allows a straight line, either horizontal or vertical, to be created,
	;;^UTILITY(U,$J,"PRO",823,1,2,0)
	;;=deleted or edited.
	;;^UTILITY(U,$J,"PRO",823,2,0)
	;;=^101.02A^2^1
	;;^UTILITY(U,$J,"PRO",823,2,2,0)
	;;=LN
	;;^UTILITY(U,$J,"PRO",823,2,"B","LN",2)
	;;=
	;;^UTILITY(U,$J,"PRO",823,20)
	;;=D LINE^IBDF9D
	;;^UTILITY(U,$J,"PRO",823,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",824,0)
	;;=IBDF EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",824,1,0)
	;;=^^2^2^2930817^^^^

IBONI011
IBONI011	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",824,1,1,0)
	;;=Allows the user to exit the system without quitting through the hierarchy of
	;;^UTILITY(U,$J,"PRO",824,1,2,0)
	;;=screens, or the user can exit to the previous screen.
	;;^UTILITY(U,$J,"PRO",824,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",824,2,1,0)
	;;=EX
	;;^UTILITY(U,$J,"PRO",824,2,"B","EX",1)
	;;=
	;;^UTILITY(U,$J,"PRO",824,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",824,20)
	;;=D FASTEXIT^IBDFU3
	;;^UTILITY(U,$J,"PRO",824,99)
	;;=55852,54047
	;;^UTILITY(U,$J,"PRO",825,0)
	;;=IBDF EDIT HEADER BLOCK^Form Header^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",825,1,0)
	;;=^^1^1^2930211^
	;;^UTILITY(U,$J,"PRO",825,1,1,0)
	;;=Allows the form header to be edited
	;;^UTILITY(U,$J,"PRO",825,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",825,2,1,0)
	;;=FH
	;;^UTILITY(U,$J,"PRO",825,2,"B","FH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",825,20)
	;;=D EDITHDR^IBDF9C
	;;^UTILITY(U,$J,"PRO",825,99)
	;;=55852,54045
	;;^UTILITY(U,$J,"PRO",826,0)
	;;=IBDF PRINT SAMPLE FORM^Print Sample Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",826,1,0)
	;;=^^1^1^2930915^^^
	;;^UTILITY(U,$J,"PRO",826,1,1,0)
	;;=Allows a sample form, without patient information, to be printed.
	;;^UTILITY(U,$J,"PRO",826,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",826,2,1,0)
	;;=PF
	;;^UTILITY(U,$J,"PRO",826,2,"B","PF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",826,15)
	;;=
	;;^UTILITY(U,$J,"PRO",826,20)
	;;=D PRINT^IBDF1C
	;;^UTILITY(U,$J,"PRO",826,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",827,0)
	;;=IBDF DELETE FORM^Delete Unused Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",827,1,0)
	;;=^^6^6^2930224^
	;;^UTILITY(U,$J,"PRO",827,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",827,1,2,0)
	;;=Allows the user to delete a form. Deletion is not allowed if the form is
	;;^UTILITY(U,$J,"PRO",827,1,3,0)
	;;=in use by any clinic. In that case the form must first be deleted from the
	;;^UTILITY(U,$J,"PRO",827,1,4,0)
	;;=clinic setup, and then actually deleted using this action. This two step
	;;^UTILITY(U,$J,"PRO",827,1,5,0)
	;;=process is used to be on the safe side, since a form may be in use by more
	;;^UTILITY(U,$J,"PRO",827,1,6,0)
	;;=than one clinic.
	;;^UTILITY(U,$J,"PRO",827,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",827,2,1,0)
	;;=DF
	;;^UTILITY(U,$J,"PRO",827,2,"B","DF",1)
	;;=
	;;^UTILITY(U,$J,"PRO",827,20)
	;;=D DELFORM^IBDF6A
	;;^UTILITY(U,$J,"PRO",827,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",828,0)
	;;=IBDF CREATE EMPTY BLOCK^New Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",828,1,0)
	;;=^^2^2^2930322^
	;;^UTILITY(U,$J,"PRO",828,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",828,1,2,0)
	;;=Allows the user to add a new empty block to the form.
	;;^UTILITY(U,$J,"PRO",828,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",828,2,1,0)
	;;=NB
	;;^UTILITY(U,$J,"PRO",828,2,"B","NB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",828,20)
	;;=D NEWBLOCK^IBDF5C
	;;^UTILITY(U,$J,"PRO",828,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",829,0)
	;;=IBDF TEXT AREA^Text Area^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",829,1,0)
	;;=^^3^3^2930326^
	;;^UTILITY(U,$J,"PRO",829,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",829,1,2,0)
	;;=Allows the user to specify text and a rectangular area on the block that
	;;^UTILITY(U,$J,"PRO",829,1,3,0)
	;;=the text should appear in.
	;;^UTILITY(U,$J,"PRO",829,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",829,2,1,0)
	;;=TA
	;;^UTILITY(U,$J,"PRO",829,2,"B","TA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",829,20)
	;;=D TEXT^IBDF9E
	;;^UTILITY(U,$J,"PRO",829,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",830,0)
	;;=IBDF CHANGE CLINIC^Change Clinic^^A^^^^^^^^INTEGRATED BILLING

IBONI012
IBONI012	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",830,1,0)
	;;=^^3^3^2930413^
	;;^UTILITY(U,$J,"PRO",830,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",830,1,2,0)
	;;=Allows the user to specify a different clinic. The  setup for the new
	;;^UTILITY(U,$J,"PRO",830,1,3,0)
	;;=clinic will then be displayed.
	;;^UTILITY(U,$J,"PRO",830,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",830,2,1,0)
	;;=CC
	;;^UTILITY(U,$J,"PRO",830,2,"B","CC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",830,20)
	;;=D CHNGCLNC^IBDF6
	;;^UTILITY(U,$J,"PRO",830,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",831,0)
	;;=IBDF EDIT FORM NAME/DESCR/SIZE^Form Name/Descr/Size^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",831,1,0)
	;;=^^1^1^2930420^
	;;^UTILITY(U,$J,"PRO",831,1,1,0)
	;;=Allows the user to select a form, then edit its name, description, and size.
	;;^UTILITY(U,$J,"PRO",831,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",831,2,1,0)
	;;=NM
	;;^UTILITY(U,$J,"PRO",831,2,"B","NM",1)
	;;=
	;;^UTILITY(U,$J,"PRO",831,20)
	;;=D EDITFORM^IBDF6C
	;;^UTILITY(U,$J,"PRO",831,99)
	;;=55852,54044
	;;^UTILITY(U,$J,"PRO",832,0)
	;;=IBDF SHIFT BLOCK CONTENTS^Shift Contents^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",832,1,0)
	;;=^^4^4^2930510^
	;;^UTILITY(U,$J,"PRO",832,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",832,1,2,0)
	;;=The user can use this action to move the contents of a block. He can
	;;^UTILITY(U,$J,"PRO",832,1,3,0)
	;;=specify the type of object to shift, the area to be affected and the
	;;^UTILITY(U,$J,"PRO",832,1,4,0)
	;;=direction and distance of the shift.
	;;^UTILITY(U,$J,"PRO",832,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",832,2,1,0)
	;;=SH
	;;^UTILITY(U,$J,"PRO",832,2,"B","SH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",832,15)
	;;=D IDXBLOCK^IBDFU4(BLKIDX)
	;;^UTILITY(U,$J,"PRO",832,20)
	;;=D SHIFT^IBDF10()
	;;^UTILITY(U,$J,"PRO",832,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",833,0)
	;;=IBDF REDRAW FORM^Re Display Screen^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",833,1,0)
	;;=^^5^5^2930510^
	;;^UTILITY(U,$J,"PRO",833,1,1,0)
	;;= 
	;;^UTILITY(U,$J,"PRO",833,1,2,0)
	;;=Causes the form to be re-displayed. Should be used if it is suspected that
	;;^UTILITY(U,$J,"PRO",833,1,3,0)
	;;=the display is incorrect. This differs from the refresh action that comes
	;;^UTILITY(U,$J,"PRO",833,1,4,0)
	;;=with the List Processor in that the array which contains the list of form
	;;^UTILITY(U,$J,"PRO",833,1,5,0)
	;;=lines is re-built.
	;;^UTILITY(U,$J,"PRO",833,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",833,2,1,0)
	;;=RD
	;;^UTILITY(U,$J,"PRO",833,2,"B","RD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",833,20)
	;;=D REDRAW^IBDF5C
	;;^UTILITY(U,$J,"PRO",833,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",839,0)
	;;=IBDF TOOL KIT FORMS MENU^IBDF TOOL KIT FORMS MENU^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",839,1,0)
	;;=^^2^2^2930624^^^
	;;^UTILITY(U,$J,"PRO",839,1,1,0)
	;;=Displays the tool kit forms. Allows the user to edit them, create new ones,
	;;^UTILITY(U,$J,"PRO",839,1,2,0)
	;;=etc.
	;;^UTILITY(U,$J,"PRO",839,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",839,10,0)
	;;=^101.01PA^6^10
	;;^UTILITY(U,$J,"PRO",839,10,1,0)
	;;=802^EF^^^^Edit Form
	;;^UTILITY(U,$J,"PRO",839,10,1,"^")
	;;=IBDF EDIT FORM
	;;^UTILITY(U,$J,"PRO",839,10,2,0)
	;;=815^CR^^^^Create Blank Form
	;;^UTILITY(U,$J,"PRO",839,10,2,"^")
	;;=IBDF CREATE BLANK FORM
	;;^UTILITY(U,$J,"PRO",839,10,3,0)
	;;=816^CF^^^^Copy Form
	;;^UTILITY(U,$J,"PRO",839,10,3,1)
	;;=Copy Form:
	;;^UTILITY(U,$J,"PRO",839,10,3,"^")
	;;=IBDF COPY FORM
	;;^UTILITY(U,$J,"PRO",839,10,6,0)
	;;=826^PR^^^^Print Sample Form
	;;^UTILITY(U,$J,"PRO",839,10,6,"^")
	;;=IBDF PRINT SAMPLE FORM

IBONI013
IBONI013	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",839,10,9,0)
	;;=831^NM^2^^^Form Name/Descr/Size
	;;^UTILITY(U,$J,"PRO",839,10,9,"^")
	;;=IBDF EDIT FORM NAME/DESCR/SIZE
	;;^UTILITY(U,$J,"PRO",839,10,10,0)
	;;=840^DF^3^^^Delete Form
	;;^UTILITY(U,$J,"PRO",839,10,10,"^")
	;;=IBDF DELETE TOOL KIT FORM
	;;^UTILITY(U,$J,"PRO",839,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",839,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",839,99)
	;;=55852,54051
	;;^UTILITY(U,$J,"PRO",840,0)
	;;=IBDF DELETE TOOL KIT FORM^Delete Form^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",840,1,0)
	;;=^^1^1^2930624^
	;;^UTILITY(U,$J,"PRO",840,1,1,0)
	;;=Allows the user to delete a form from the tool kit.
	;;^UTILITY(U,$J,"PRO",840,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",840,2,1,0)
	;;=DT
	;;^UTILITY(U,$J,"PRO",840,2,"B","DT",1)
	;;=
	;;^UTILITY(U,$J,"PRO",840,20)
	;;=D DELFORM^IBDF12
	;;^UTILITY(U,$J,"PRO",840,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",841,0)
	;;=IBDF EDIT TOOL KIT BLOCKS MENU^EDIT TOOL KIT BLOCKS MENU^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",841,1,0)
	;;=^^1^1^2930624^^^^
	;;^UTILITY(U,$J,"PRO",841,1,1,0)
	;;=Allows the user to edit tool kit blocks.
	;;^UTILITY(U,$J,"PRO",841,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",841,2,1,0)
	;;=EB
	;;^UTILITY(U,$J,"PRO",841,2,"B","EB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",841,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",841,10,0)
	;;=^101.01PA^5^9
	;;^UTILITY(U,$J,"PRO",841,10,10,0)
	;;=842^EB^^^^Edit Block
	;;^UTILITY(U,$J,"PRO",841,10,10,"^")
	;;=IBDF EDIT TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,11,0)
	;;=843^NB^^^^New Block
	;;^UTILITY(U,$J,"PRO",841,10,11,"^")
	;;=IBDF NEW TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,12,0)
	;;=844^DB^^^^Delete Block
	;;^UTILITY(U,$J,"PRO",841,10,12,"^")
	;;=IBDF DELETE TOOL KIT BLOCK
	;;^UTILITY(U,$J,"PRO",841,10,13,0)
	;;=845^CB^^^^Copy Block
	;;^UTILITY(U,$J,"PRO",841,10,13,"^")
	;;=IBDF COPY BLOCK INTO TOOL KIT
	;;^UTILITY(U,$J,"PRO",841,10,14,0)
	;;=875^CH^^^^Change TK Order
	;;^UTILITY(U,$J,"PRO",841,10,14,"^")
	;;=IBDF CHANGE BLOCK TK ORDER
	;;^UTILITY(U,$J,"PRO",841,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",841,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",841,99)
	;;=55950,49063
	;;^UTILITY(U,$J,"PRO",842,0)
	;;=IBDF EDIT TOOL KIT BLOCK^Edit Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",842,1,0)
	;;=^^1^1^2930727^^^
	;;^UTILITY(U,$J,"PRO",842,1,1,0)
	;;=Allows the user to edit a tool kit block.
	;;^UTILITY(U,$J,"PRO",842,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",842,2,1,0)
	;;=EB
	;;^UTILITY(U,$J,"PRO",842,2,"B","EB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",842,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",842,20)
	;;=D EDITBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",842,99)
	;;=55852,54046
	;;^UTILITY(U,$J,"PRO",843,0)
	;;=IBDF NEW TOOL KIT BLOCK^New Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",843,1,0)
	;;=^^1^1^2930624^
	;;^UTILITY(U,$J,"PRO",843,1,1,0)
	;;=Allows the user to create a new tool kit block.
	;;^UTILITY(U,$J,"PRO",843,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",843,2,1,0)
	;;=NB
	;;^UTILITY(U,$J,"PRO",843,2,"B","NB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",843,20)
	;;=D NEWBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",843,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",844,0)
	;;=IBDF DELETE TOOL KIT BLOCK^Delete Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",844,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"PRO",844,1,1,0)
	;;=Allows the user to delete a block from the tool kit.
	;;^UTILITY(U,$J,"PRO",844,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",844,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",844,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",844,20)
	;;=D DLTBLOCK^IBDF13

IBONI014
IBONI014	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",844,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",845,0)
	;;=IBDF COPY BLOCK INTO TOOL KIT^Copy Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",845,1,0)
	;;=^^1^1^2930625^
	;;^UTILITY(U,$J,"PRO",845,1,1,0)
	;;=Allows the user to select any block and copy it into the tool kit.
	;;^UTILITY(U,$J,"PRO",845,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",845,2,1,0)
	;;=CB
	;;^UTILITY(U,$J,"PRO",845,2,"B","CB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",845,20)
	;;=D COPYBLK^IBDF13
	;;^UTILITY(U,$J,"PRO",845,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",846,0)
	;;=IBDF COPY FORM BLOCK^Copy Other Form's Block^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",846,1,0)
	;;=^^2^2^2930625^
	;;^UTILITY(U,$J,"PRO",846,1,1,0)
	;;=Allows a block from any form not in the tool kit to be selected, then copied
	;;^UTILITY(U,$J,"PRO",846,1,2,0)
	;;=and edited.
	;;^UTILITY(U,$J,"PRO",846,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",846,2,1,0)
	;;=CB
	;;^UTILITY(U,$J,"PRO",846,2,"B","CB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",846,20)
	;;=D COPYBLK^IBDF5C
	;;^UTILITY(U,$J,"PRO",846,99)
	;;=55852,54043
	;;^UTILITY(U,$J,"PRO",852,0)
	;;=IBDF SHIFT BLOCKS^Shift Blocks^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",852,1,0)
	;;=^^3^3^2930716^
	;;^UTILITY(U,$J,"PRO",852,1,1,0)
	;;=Allows the user to shift a group of blocks. The user is asked to specify
	;;^UTILITY(U,$J,"PRO",852,1,2,0)
	;;=a rectangular region where the shift should occur, the direction of movement
	;;^UTILITY(U,$J,"PRO",852,1,3,0)
	;;=and distance.
	;;^UTILITY(U,$J,"PRO",852,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",852,2,1,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",852,2,"B","SB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",852,20)
	;;=D SHIFT^IBDF5
	;;^UTILITY(U,$J,"PRO",852,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",853,0)
	;;=IBDF SAVE/DISCARD BLOCK CHANGES^Save/Discard Changes^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",853,1,0)
	;;=^^1^1^2930728^^
	;;^UTILITY(U,$J,"PRO",853,1,1,0)
	;;=Allows the user to save the changes to the block he is currently editing.
	;;^UTILITY(U,$J,"PRO",853,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",853,2,1,0)
	;;=SD
	;;^UTILITY(U,$J,"PRO",853,2,"B","SD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",853,20)
	;;=D DECIDE^IBDF5B
	;;^UTILITY(U,$J,"PRO",853,99)
	;;=55852,54050
	;;^UTILITY(U,$J,"PRO",854,0)
	;;=IBDF QUIT^Exit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",854,1,0)
	;;=^^1^1^2930729^^
	;;^UTILITY(U,$J,"PRO",854,1,1,0)
	;;=Quits to the prior level.
	;;^UTILITY(U,$J,"PRO",854,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",854,2,1,0)
	;;=Ex
	;;^UTILITY(U,$J,"PRO",854,2,"B","Ex",1)
	;;=
	;;^UTILITY(U,$J,"PRO",854,15)
	;;=S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",854,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",858,0)
	;;=IBDE IMP/EXP MENU FOR FORMS^List Forms^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",858,1,0)
	;;=^^2^2^2930813^^^^
	;;^UTILITY(U,$J,"PRO",858,1,1,0)
	;;=The main menu of the import/export utility, which allows forms and
	;;^UTILITY(U,$J,"PRO",858,1,2,0)
	;;=tool kit blocks to be transferred between sites.
	;;^UTILITY(U,$J,"PRO",858,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",858,10,0)
	;;=^101.01PA^10^11
	;;^UTILITY(U,$J,"PRO",858,10,2,0)
	;;=859^AE^6^^^Add Entry
	;;^UTILITY(U,$J,"PRO",858,10,2,"^")
	;;=IBDE ADD FORM TO IMP/EXP WS
	;;^UTILITY(U,$J,"PRO",858,10,3,0)
	;;=860^DE^5^^^Delete Entry
	;;^UTILITY(U,$J,"PRO",858,10,3,"^")
	;;=IBDE DELETE FORM FROM IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",858,10,4,0)
	;;=861^CW^4^^^Clear Work Space
	;;^UTILITY(U,$J,"PRO",858,10,4,"^")
	;;=IBDE DELETE IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",858,10,5,0)
	;;=862^EI^8^^^Edit Imp/Exp Notes

IBONI015
IBONI015	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",858,10,5,"^")
	;;=IBDE EDIT FORM'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",858,10,6,0)
	;;=863^VI^7^^^View Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",858,10,6,"^")
	;;=IBDE VIEW FORM'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",858,10,7,0)
	;;=864^IE^3^^^Import Entry
	;;^UTILITY(U,$J,"PRO",858,10,7,"^")
	;;=IBDE IMPORT FORM
	;;^UTILITY(U,$J,"PRO",858,10,8,0)
	;;=865^HE^1^^^Help
	;;^UTILITY(U,$J,"PRO",858,10,8,"^")
	;;=IBDE IMP/EXP HELP
	;;^UTILITY(U,$J,"PRO",858,10,9,0)
	;;=866^DI^9^^^DIFROM
	;;^UTILITY(U,$J,"PRO",858,10,9,"^")
	;;=IBDE EXECUTE DIFROM
	;;^UTILITY(U,$J,"PRO",858,10,10,0)
	;;=867^RI^10^^^Run Inits
	;;^UTILITY(U,$J,"PRO",858,10,10,"^")
	;;=IBDE EXECUTE INITS
	;;^UTILITY(U,$J,"PRO",858,10,11,0)
	;;=869^LB^2^^^List TK Blocks
	;;^UTILITY(U,$J,"PRO",858,10,11,"^")
	;;=IBDE DISPLAY TK BLOCKS
	;;^UTILITY(U,$J,"PRO",858,20)
	;;=
	;;^UTILITY(U,$J,"PRO",858,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",858,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",858,99)
	;;=55852,56604
	;;^UTILITY(U,$J,"PRO",859,0)
	;;=IBDE ADD FORM TO IMP/EXP WS^Add Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",859,.1)
	;;=
	;;^UTILITY(U,$J,"PRO",859,1,0)
	;;=^^1^1^2930813^^
	;;^UTILITY(U,$J,"PRO",859,1,1,0)
	;;=Allows the user to add a form to the IMP/EXP files.
	;;^UTILITY(U,$J,"PRO",859,2,0)
	;;=^101.02A^3^3
	;;^UTILITY(U,$J,"PRO",859,2,1,0)
	;;=TEST
	;;^UTILITY(U,$J,"PRO",859,2,2,0)
	;;=ADD
	;;^UTILITY(U,$J,"PRO",859,2,3,0)
	;;=AW
	;;^UTILITY(U,$J,"PRO",859,2,"B","ADD",2)
	;;=
	;;^UTILITY(U,$J,"PRO",859,2,"B","AW",3)
	;;=
	;;^UTILITY(U,$J,"PRO",859,2,"B","TEST",1)
	;;=
	;;^UTILITY(U,$J,"PRO",859,20)
	;;=D ADD^IBDE1
	;;^UTILITY(U,$J,"PRO",859,99)
	;;=55789,49845
	;;^UTILITY(U,$J,"PRO",860,0)
	;;=IBDE DELETE FORM FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",860,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",860,1,1,0)
	;;=Allows the user to select a form in the imp/exp files and deletes it.
	;;^UTILITY(U,$J,"PRO",860,2,0)
	;;=^101.02A^2^2
	;;^UTILITY(U,$J,"PRO",860,2,1,0)
	;;=DEL
	;;^UTILITY(U,$J,"PRO",860,2,2,0)
	;;=DW
	;;^UTILITY(U,$J,"PRO",860,2,"B","DEL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",860,2,"B","DW",2)
	;;=
	;;^UTILITY(U,$J,"PRO",860,20)
	;;=D DELETE^IBDE1
	;;^UTILITY(U,$J,"PRO",860,99)
	;;=55789,49858
	;;^UTILITY(U,$J,"PRO",861,0)
	;;=IBDE DELETE IMP/EXP FILES^Clear Work Space^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",861,1,0)
	;;=^^1^1^2930813^^
	;;^UTILITY(U,$J,"PRO",861,1,1,0)
	;;=Deletes all of the imp/exp files (358 range).
	;;^UTILITY(U,$J,"PRO",861,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",861,2,1,0)
	;;=CW
	;;^UTILITY(U,$J,"PRO",861,2,"B","CW",1)
	;;=
	;;^UTILITY(U,$J,"PRO",861,20)
	;;=D DLTALL^IBDE2
	;;^UTILITY(U,$J,"PRO",861,99)
	;;=55742,27560
	;;^UTILITY(U,$J,"PRO",862,0)
	;;=IBDE EDIT FORM'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",862,1,0)
	;;=^^2^2^2930813^^
	;;^UTILITY(U,$J,"PRO",862,1,1,0)
	;;=Allows the user to select a form form from the imp/exp files, then allows
	;;^UTILITY(U,$J,"PRO",862,1,2,0)
	;;=the user to edit the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",862,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",862,2,1,0)
	;;=EE
	;;^UTILITY(U,$J,"PRO",862,2,"B","EE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",862,20)
	;;=D EDIT^IBDE1
	;;^UTILITY(U,$J,"PRO",862,99)
	;;=55789,49908
	;;^UTILITY(U,$J,"PRO",863,0)
	;;=IBDE VIEW FORM'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",863,1,0)
	;;=^^2^2^2930813^
	;;^UTILITY(U,$J,"PRO",863,1,1,0)
	;;=Allows the user to select a form from the IMP/EXP files, then displays

IBONI016
IBONI016	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",863,1,2,0)
	;;=the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",863,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",863,2,1,0)
	;;=VI
	;;^UTILITY(U,$J,"PRO",863,2,"B","VI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",863,20)
	;;=D VIEW^IBDE1
	;;^UTILITY(U,$J,"PRO",863,99)
	;;=55742,34209
	;;^UTILITY(U,$J,"PRO",864,0)
	;;=IBDE IMPORT FORM^Import Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",864,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",864,1,1,0)
	;;=Allows the user to select a form from the work space, then imports it.
	;;^UTILITY(U,$J,"PRO",864,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",864,2,1,0)
	;;=IE
	;;^UTILITY(U,$J,"PRO",864,2,"B","IE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",864,20)
	;;=D IMPORT^IBDE1
	;;^UTILITY(U,$J,"PRO",864,99)
	;;=55742,41565
	;;^UTILITY(U,$J,"PRO",865,0)
	;;=IBDE IMP/EXP HELP^Help^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",865,1,0)
	;;=^^2^2^2930813^
	;;^UTILITY(U,$J,"PRO",865,1,1,0)
	;;=Displays help information about the import/export procedures that the user
	;;^UTILITY(U,$J,"PRO",865,1,2,0)
	;;=must follow.
	;;^UTILITY(U,$J,"PRO",865,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",865,2,1,0)
	;;=HE
	;;^UTILITY(U,$J,"PRO",865,2,"B","HE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",865,20)
	;;=D HELP^IBDEHELP
	;;^UTILITY(U,$J,"PRO",865,99)
	;;=55742,48206
	;;^UTILITY(U,$J,"PRO",866,0)
	;;=IBDE EXECUTE DIFROM^DIFROM^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",866,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",866,1,1,0)
	;;=Allows the user to execute ^DIFROM without leaving the imp/exp utility.
	;;^UTILITY(U,$J,"PRO",866,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",866,2,1,0)
	;;=DI
	;;^UTILITY(U,$J,"PRO",866,2,"B","DI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",866,20)
	;;=D DIFROM^IBDE1
	;;^UTILITY(U,$J,"PRO",866,99)
	;;=55742,48356
	;;^UTILITY(U,$J,"PRO",867,0)
	;;=IBDE EXECUTE INITS^Run Inits^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",867,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",867,1,1,0)
	;;=Allows the user to execute the inits without leaving the imp/exp utilities.
	;;^UTILITY(U,$J,"PRO",867,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",867,2,1,0)
	;;=RI
	;;^UTILITY(U,$J,"PRO",867,2,"B","RI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",867,20)
	;;=D INITS^IBDE1
	;;^UTILITY(U,$J,"PRO",867,99)
	;;=55789,49918
	;;^UTILITY(U,$J,"PRO",868,0)
	;;=IBDE IMP/EXP MENU FOR BLOCKS^List TK Blocks^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",868,1,0)
	;;=^^1^1^2930813^^^^
	;;^UTILITY(U,$J,"PRO",868,1,1,0)
	;;=The menu of actions that apply to tool kit blocks in the imp/exp files.
	;;^UTILITY(U,$J,"PRO",868,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",868,2,1,0)
	;;=SB
	;;^UTILITY(U,$J,"PRO",868,2,"B","SB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",868,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",868,10,0)
	;;=^101.01PA^10^16
	;;^UTILITY(U,$J,"PRO",868,10,4,0)
	;;=861^CW^4^^^Clear Work Space
	;;^UTILITY(U,$J,"PRO",868,10,4,"^")
	;;=IBDE DELETE IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",868,10,8,0)
	;;=865^HE^1^^^Help
	;;^UTILITY(U,$J,"PRO",868,10,8,"^")
	;;=IBDE IMP/EXP HELP
	;;^UTILITY(U,$J,"PRO",868,10,9,0)
	;;=866^DI^9^^^DIFROM
	;;^UTILITY(U,$J,"PRO",868,10,9,"^")
	;;=IBDE EXECUTE DIFROM
	;;^UTILITY(U,$J,"PRO",868,10,10,0)
	;;=867^RI^10^^^Run Inits
	;;^UTILITY(U,$J,"PRO",868,10,10,"^")
	;;=IBDE EXECUTE INITS
	;;^UTILITY(U,$J,"PRO",868,10,11,0)
	;;=870^DE^5^^^Delete Entry
	;;^UTILITY(U,$J,"PRO",868,10,11,"^")
	;;=IBDE DELTE TK BLOCK FROM IMP/EXP FILES
	;;^UTILITY(U,$J,"PRO",868,10,12,0)
	;;=871^AE^6^^^Add Entry
	;;^UTILITY(U,$J,"PRO",868,10,12,"^")
	;;=IBDE ADD BLOCK TO IMP/EXP WS
	;;^UTILITY(U,$J,"PRO",868,10,13,0)
	;;=872^EI^8^^^Edit Imp/Exp Notes

IBONI017
IBONI017	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",868,10,13,"^")
	;;=IBDE EDIT BLOCK'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",868,10,14,0)
	;;=873^VI^7^^^View Imp/Exp Notes
	;;^UTILITY(U,$J,"PRO",868,10,14,"^")
	;;=IBDE VIEW BLOCK'S IMP/EXP NOTES
	;;^UTILITY(U,$J,"PRO",868,10,15,0)
	;;=874^IE^3^^^Import Entry
	;;^UTILITY(U,$J,"PRO",868,10,15,"^")
	;;=IBDE IMPORT TK BLOCK
	;;^UTILITY(U,$J,"PRO",868,10,16,0)
	;;=854^LF^2^^^List Forms
	;;^UTILITY(U,$J,"PRO",868,10,16,"^")
	;;=IBDF QUIT
	;;^UTILITY(U,$J,"PRO",868,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",868,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",868,99)
	;;=55857,42359
	;;^UTILITY(U,$J,"PRO",869,0)
	;;=IBDE DISPLAY TK BLOCKS^List TK Blocks^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",869,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",869,1,1,0)
	;;=Displays the list of tool kit blocks that are in the imp/exp files.
	;;^UTILITY(U,$J,"PRO",869,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",869,2,1,0)
	;;=DB
	;;^UTILITY(U,$J,"PRO",869,2,"B","DB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",869,20)
	;;=D BLOCKS^IBDE1
	;;^UTILITY(U,$J,"PRO",869,99)
	;;=55789,49889
	;;^UTILITY(U,$J,"PRO",870,0)
	;;=IBDE DELTE TK BLOCK FROM IMP/EXP FILES^Delete Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",870,1,0)
	;;=^^1^1^2930813^
	;;^UTILITY(U,$J,"PRO",870,1,1,0)
	;;=Allows the user to select a TK block, then deletes it.
	;;^UTILITY(U,$J,"PRO",870,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",870,2,1,0)
	;;=DE
	;;^UTILITY(U,$J,"PRO",870,2,"B","DE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",870,20)
	;;=D DELETE^IBDE3
	;;^UTILITY(U,$J,"PRO",870,99)
	;;=55742,56808
	;;^UTILITY(U,$J,"PRO",871,0)
	;;=IBDE ADD BLOCK TO IMP/EXP WS^Add Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",871,1,0)
	;;=^^1^1^2930816^
	;;^UTILITY(U,$J,"PRO",871,1,1,0)
	;;=Allows the user to choose any block and adds it to the import/export files.
	;;^UTILITY(U,$J,"PRO",871,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",871,2,1,0)
	;;=AE
	;;^UTILITY(U,$J,"PRO",871,2,"B","AE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",871,20)
	;;=D ADD^IBDE3
	;;^UTILITY(U,$J,"PRO",871,99)
	;;=55745,44138
	;;^UTILITY(U,$J,"PRO",872,0)
	;;=IBDE EDIT BLOCK'S IMP/EXP NOTES^Edit Imp/Exp Notes^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",872,1,0)
	;;=^^2^2^2930816^
	;;^UTILITY(U,$J,"PRO",872,1,1,0)
	;;=Allows the user to select a tool kit block from the imp/exp files, then
	;;^UTILITY(U,$J,"PRO",872,1,2,0)
	;;=allows him to edit the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",872,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",872,2,1,0)
	;;=EI
	;;^UTILITY(U,$J,"PRO",872,2,"B","EI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",872,20)
	;;=D EDIT^IBDE3
	;;^UTILITY(U,$J,"PRO",872,99)
	;;=55745,44286
	;;^UTILITY(U,$J,"PRO",873,0)
	;;=IBDE VIEW BLOCK'S IMP/EXP NOTES^View Imp/Exp Notes^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",873,1,0)
	;;=^^2^2^2930816^
	;;^UTILITY(U,$J,"PRO",873,1,1,0)
	;;=Allows the user to select a tool kit block from the imp/exp files, then
	;;^UTILITY(U,$J,"PRO",873,1,2,0)
	;;=allows him to view the imp/exp notes.
	;;^UTILITY(U,$J,"PRO",873,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",873,2,1,0)
	;;=VI
	;;^UTILITY(U,$J,"PRO",873,2,"B","VI",1)
	;;=
	;;^UTILITY(U,$J,"PRO",873,20)
	;;=D VIEW^IBDE3
	;;^UTILITY(U,$J,"PRO",873,99)
	;;=55745,44470
	;;^UTILITY(U,$J,"PRO",874,0)
	;;=IBDE IMPORT TK BLOCK^Import Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",874,1,0)
	;;=^^1^1^2930817^
	;;^UTILITY(U,$J,"PRO",874,1,1,0)
	;;=Allows the user to select a tool kit block from the list, then imports it.
	;;^UTILITY(U,$J,"PRO",874,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",874,2,1,0)
	;;=IE

IBONI018
IBONI018	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",874,2,"B","IE",1)
	;;=
	;;^UTILITY(U,$J,"PRO",874,20)
	;;=D IMPORT^IBDE3
	;;^UTILITY(U,$J,"PRO",874,99)
	;;=55746,52359
	;;^UTILITY(U,$J,"PRO",875,0)
	;;=IBDF CHANGE BLOCK TK ORDER^Change TK Order^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",875,1,0)
	;;=^^1^1^2930820^
	;;^UTILITY(U,$J,"PRO",875,1,1,0)
	;;=Allows the user to select a block from the tool kit, then change it's order.
	;;^UTILITY(U,$J,"PRO",875,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",875,2,1,0)
	;;=CH
	;;^UTILITY(U,$J,"PRO",875,2,"B","CH",1)
	;;=
	;;^UTILITY(U,$J,"PRO",875,20)
	;;=D CHGORDER^IBDF13
	;;^UTILITY(U,$J,"PRO",875,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",876,0)
	;;=IBDF PRINT MANAGER CLINIC SETUP^Clinic Print Manager^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",876,1,0)
	;;=^^2^2^2930831^^
	;;^UTILITY(U,$J,"PRO",876,1,1,0)
	;;=Allows the user to edit the setup used by the Print Manager in determining 
	;;^UTILITY(U,$J,"PRO",876,1,2,0)
	;;=what forms to print for an appointment at the clinic level.
	;;^UTILITY(U,$J,"PRO",876,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",876,2,1,0)
	;;=CL
	;;^UTILITY(U,$J,"PRO",876,2,"B","CL",1)
	;;=
	;;^UTILITY(U,$J,"PRO",876,20)
	;;=D CLNCSUP2^IBDF11
	;;^UTILITY(U,$J,"PRO",876,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",876,"MEN","SD PARM PARAMETERS MENU")
	;;=876^CL^9
	;;^UTILITY(U,$J,"PRO",877,0)
	;;=IBDF PRINT MANAGER DIVISION SETUP^Div Print Manager^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",877,1,0)
	;;=^^2^2^2930831^
	;;^UTILITY(U,$J,"PRO",877,1,1,0)
	;;=Allows the user to edit the setup used by the Print Manager in determining
	;;^UTILITY(U,$J,"PRO",877,1,2,0)
	;;=what forms to print for an appointment at the division level.
	;;^UTILITY(U,$J,"PRO",877,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",877,2,1,0)
	;;=DV
	;;^UTILITY(U,$J,"PRO",877,2,"B","DV",1)
	;;=
	;;^UTILITY(U,$J,"PRO",877,20)
	;;=D DIVSUP2^IBDF11
	;;^UTILITY(U,$J,"PRO",877,99)
	;;=55852,54049
	;;^UTILITY(U,$J,"PRO",877,"MEN","SD PARM PARAMETERS MENU")
	;;=877^DV^10
	;;^UTILITY(U,$J,"PRO",878,0)
	;;=IBCNSM CHANGE PATIENT^Change Patient^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",878,20)
	;;=D CP^IBCNSM
	;;^UTILITY(U,$J,"PRO",878,24)
	;;=I '$G(IBTRN)
	;;^UTILITY(U,$J,"PRO",878,99)
	;;=55768,35752
	;;^UTILITY(U,$J,"PRO",879,0)
	;;=IBCNSM VIEW PAT POLICY^Policy Edit/View^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",879,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",879,20)
	;;=D VP^IBCNSM1
	;;^UTILITY(U,$J,"PRO",879,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",880,0)
	;;=IBCNSM UPDATE ANNUAL BENEFITS^Annual Benefits^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",880,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",880,20)
	;;=D AB^IBCNSM1
	;;^UTILITY(U,$J,"PRO",880,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",881,0)
	;;=IBCNSM UPDATE INS CO.^Ins. Co. Edit^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",881,20)
	;;=D EI^IBCNSM2
	;;^UTILITY(U,$J,"PRO",881,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",882,0)
	;;=IBCNSM PRINT WORKSHEET^Worksheet Print^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",882,20)
	;;=D WP^IBCNSM1
	;;^UTILITY(U,$J,"PRO",882,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",883,0)
	;;=IBCNSM PRINT PATIENT INS^Print Insurance Cov.^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",883,20)
	;;=D PC^IBCNSM1
	;;^UTILITY(U,$J,"PRO",883,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",884,0)
	;;=IBCNSM VERIFY INS^Verify Coverage^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",884,20)
	;;=D VC^IBCNSM2
	;;^UTILITY(U,$J,"PRO",884,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",885,0)
	;;=IBCNSC INS CO EDIT ALL^Edit All^^A^^^^^^^^INTEGRATED BILLING

IBONI019
IBONI019	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",885,4)
	;;=^^^EA
	;;^UTILITY(U,$J,"PRO",885,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",885,20)
	;;=S IB("^")=0,IBY=",6," S VALMY=IBCNS D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",885,99)
	;;=55768,35736
	;;^UTILITY(U,$J,"PRO",886,0)
	;;=IBCNSC INS CO BILLING PARAMETERS^Billing Parameters^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",886,4)
	;;=^^^EP
	;;^UTILITY(U,$J,"PRO",886,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",886,20)
	;;=S IBY=",1," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",886,99)
	;;=55768,35736
	;;^UTILITY(U,$J,"PRO",887,0)
	;;=IBCNSC INS CO MAIN MAILING ADDRESS^Main Mailing Address^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",887,4)
	;;=^^^EM
	;;^UTILITY(U,$J,"PRO",887,15)
	;;=S VALMBG=14
	;;^UTILITY(U,$J,"PRO",887,20)
	;;=S IBY=",2," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",887,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",888,0)
	;;=IBCNSC INS CO APPEALS OFFICE^Appeals Office^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",888,4)
	;;=^^^AA
	;;^UTILITY(U,$J,"PRO",888,15)
	;;=S VALMBG=40
	;;^UTILITY(U,$J,"PRO",888,20)
	;;=S IBY=",4," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",888,99)
	;;=55768,35736
	;;^UTILITY(U,$J,"PRO",889,0)
	;;=IBCNSC INS CO INQUIRY OFFICE^Inquiry Office^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",889,4)
	;;=^^^IA
	;;^UTILITY(U,$J,"PRO",889,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",889,15)
	;;=S VALMBG=40
	;;^UTILITY(U,$J,"PRO",889,20)
	;;=S IBY=",5," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",889,28)
	;;=
	;;^UTILITY(U,$J,"PRO",889,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",890,0)
	;;=IBCNSP EDIT POLICY INFO^Change Plan Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",890,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",890,20)
	;;=D PI^IBCNSP1
	;;^UTILITY(U,$J,"PRO",890,99)
	;;=55854,28902
	;;^UTILITY(U,$J,"PRO",891,0)
	;;=IBCNSP EDIT EFFECTIVE DATES^Effective Dates^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",891,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",891,20)
	;;=D ED^IBCNSP1
	;;^UTILITY(U,$J,"PRO",891,99)
	;;=55768,35758
	;;^UTILITY(U,$J,"PRO",892,0)
	;;=IBCNSP VERIFY COVERAGE^Verify Coverage^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",892,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",892,20)
	;;=D VC^IBCNSP1
	;;^UTILITY(U,$J,"PRO",892,99)
	;;=55768,35765
	;;^UTILITY(U,$J,"PRO",893,0)
	;;=IBCNSP SUBSCRIBER UPDATE^Subscriber Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",893,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",893,20)
	;;=D SU^IBCNSP1
	;;^UTILITY(U,$J,"PRO",893,99)
	;;=55768,35765
	;;^UTILITY(U,$J,"PRO",894,0)
	;;=IBCNSP EMPLOYER INFO FOR CLAIMS^Employer Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",894,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",894,20)
	;;=D EM^IBCNSP3
	;;^UTILITY(U,$J,"PRO",894,99)
	;;=55768,35758
	;;^UTILITY(U,$J,"PRO",895,0)
	;;=IBCNSP ADD COMMENT^Add Comment^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",895,15)
	;;=S VALMBG=29
	;;^UTILITY(U,$J,"PRO",895,20)
	;;=D AC^IBCNSP3
	;;^UTILITY(U,$J,"PRO",895,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",896,0)
	;;=IBCNSP UR INFO^UR Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",896,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",896,20)
	;;=D IT^IBCNSP1
	;;^UTILITY(U,$J,"PRO",896,99)
	;;=55768,35765
	;;^UTILITY(U,$J,"PRO",897,0)
	;;=IBCNSC INS CO CHANGE COMPANY^Change Insurance Co.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",897,4)
	;;=^^^CC
	;;^UTILITY(U,$J,"PRO",897,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",897,20)
	;;=D CC^IBCNSC1
	;;^UTILITY(U,$J,"PRO",897,24)
	;;=I $G(IBCHANGE)="OKAY"
	;;^UTILITY(U,$J,"PRO",897,25)
	;;=
	;;^UTILITY(U,$J,"PRO",897,99)
	;;=55906,38070

IBONI020
IBONI020	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",898,0)
	;;=IBCNSC INS CO TELEPHONE^Telephone Numbers^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",898,4)
	;;=^^^ET
	;;^UTILITY(U,$J,"PRO",898,20)
	;;=S IBY=",7," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",898,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",899,0)
	;;=IBCNSC INS CO REMARKS^Remarks^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",899,4)
	;;=^^^RE
	;;^UTILITY(U,$J,"PRO",899,15)
	;;=S VALMBG=53
	;;^UTILITY(U,$J,"PRO",899,20)
	;;=S IBY=",8," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",899,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",900,0)
	;;=IBCNSC INS CO SYNONYMS^Synonyms^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",900,4)
	;;=^^^ES
	;;^UTILITY(U,$J,"PRO",900,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",900,15)
	;;=S VALMBG=53
	;;^UTILITY(U,$J,"PRO",900,20)
	;;=S IBY=",9," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",900,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",901,0)
	;;=IBCNSC INS CO (IN)ACTIVATE COMPANY^(In)Activate Company^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",901,4)
	;;=^^^AI
	;;^UTILITY(U,$J,"PRO",901,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",901,20)
	;;=D AI^IBCNSC1
	;;^UTILITY(U,$J,"PRO",901,99)
	;;=55768,35736
	;;^UTILITY(U,$J,"PRO",902,0)
	;;=IBCNSM BENEFITS USED^Benefits Used^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",902,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",902,20)
	;;=D BU^IBCNSM2
	;;^UTILITY(U,$J,"PRO",902,99)
	;;=55768,35751
	;;^UTILITY(U,$J,"PRO",903,0)
	;;=IBCNSM ADD POLICY^Add Policy^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",903,20)
	;;=D AD^IBCNSM3
	;;^UTILITY(U,$J,"PRO",903,99)
	;;=55768,35751
	;;^UTILITY(U,$J,"PRO",904,0)
	;;=IBCNSM DELETE POLICY^Delete Policy^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",904,20)
	;;=D DP^IBCNSM1
	;;^UTILITY(U,$J,"PRO",904,99)
	;;=55768,35752
	;;^UTILITY(U,$J,"PRO",905,0)
	;;=IBCNSA AN BEN POL INF^Policy Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",905,4)
	;;=^^^PI
	;;^UTILITY(U,$J,"PRO",905,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",905,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",905,20)
	;;=D ED^IBCNSA2("[IBCN AB POL INF]")
	;;^UTILITY(U,$J,"PRO",905,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",907,0)
	;;=IBCNSA AN BEN OPT^Outpatient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",907,4)
	;;=^^^OP
	;;^UTILITY(U,$J,"PRO",907,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",907,20)
	;;=D ED^IBCNSA2("[IBCN AB OPT]")
	;;^UTILITY(U,$J,"PRO",907,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",908,0)
	;;=IBCNSA AN BEN INPT^Inpatient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",908,4)
	;;=^^^IP
	;;^UTILITY(U,$J,"PRO",908,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",908,20)
	;;=D ED^IBCNSA2("[IBCN AB INPT]")
	;;^UTILITY(U,$J,"PRO",908,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",909,0)
	;;=IBCNSA AN BEN MEN H^Mental Health^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",909,4)
	;;=^^^MH
	;;^UTILITY(U,$J,"PRO",909,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",909,20)
	;;=D ED^IBCNSA2("[IBCN AB MEN H]")
	;;^UTILITY(U,$J,"PRO",909,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",910,0)
	;;=IBCNSA AN BEN HOME HEA^Home Health^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",910,4)
	;;=^^^HH
	;;^UTILITY(U,$J,"PRO",910,15)
	;;=S VALMBG=29
	;;^UTILITY(U,$J,"PRO",910,20)
	;;=D ED^IBCNSA2("[IBCN AB HOME HEA]")
	;;^UTILITY(U,$J,"PRO",910,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",911,0)
	;;=IBCNSA AN BEN HOSPC^Hospice^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",911,4)
	;;=^^^HO
	;;^UTILITY(U,$J,"PRO",911,15)
	;;=S VALMBG=29
	;;^UTILITY(U,$J,"PRO",911,20)
	;;=D ED^IBCNSA2("[IBCN AB HOSPC]")

IBONI021
IBONI021	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",911,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",912,0)
	;;=IBCNSA AN BEN USER INF^User Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",912,4)
	;;=^^^UI
	;;^UTILITY(U,$J,"PRO",912,15)
	;;=S VALMBG=37
	;;^UTILITY(U,$J,"PRO",912,20)
	;;=D ED^IBCNSA2("[IBCN AB USER INF]")
	;;^UTILITY(U,$J,"PRO",912,99)
	;;=55768,35731
	;;^UTILITY(U,$J,"PRO",913,0)
	;;=IBCNSA AN BEN ADD COM^Add Comment^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",913,4)
	;;=^^^AC
	;;^UTILITY(U,$J,"PRO",913,15)
	;;=
	;;^UTILITY(U,$J,"PRO",913,20)
	;;=D ED^IBCNSA2("[IBCN AB ADD COM]")
	;;^UTILITY(U,$J,"PRO",913,99)
	;;=55768,35729
	;;^UTILITY(U,$J,"PRO",914,0)
	;;=IBCNSA AN BEN ED ALL^Edit All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",914,4)
	;;=^^^EA
	;;^UTILITY(U,$J,"PRO",914,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",914,20)
	;;=D ED^IBCNSA2("[IBCN AB EDIT ALL]")
	;;^UTILITY(U,$J,"PRO",914,99)
	;;=55768,35729
	;;^UTILITY(U,$J,"PRO",915,0)
	;;=IBCNSA AN BEN CH YR^Change Year^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",915,4)
	;;=^^^CY
	;;^UTILITY(U,$J,"PRO",915,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",915,20)
	;;=D CY^IBCNSA2
	;;^UTILITY(U,$J,"PRO",915,99)
	;;=55768,35729
	;;^UTILITY(U,$J,"PRO",916,0)
	;;=IBCNSP ANNUAL BENEFITS^Annual Benefits^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",916,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",916,20)
	;;=D AB^IBCNSP1
	;;^UTILITY(U,$J,"PRO",916,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",917,0)
	;;=IBCNSP BENEFITS USED^Benefits Used^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",917,15)
	;;=I $G(IBFASTXT) S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",917,20)
	;;=D BU^IBCNSP1
	;;^UTILITY(U,$J,"PRO",917,99)
	;;=55768,35758
	;;^UTILITY(U,$J,"PRO",918,0)
	;;=IBCNSP EDIT ALL^Fast Edit All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",918,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",918,20)
	;;=D EA^IBCNSP1
	;;^UTILITY(U,$J,"PRO",918,99)
	;;=55791,34990
	;;^UTILITY(U,$J,"PRO",919,0)
	;;=IBCNSM EDIT ALL^Fast Edit All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",919,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",919,20)
	;;=D EA^IBCNSM31
	;;^UTILITY(U,$J,"PRO",919,99)
	;;=55791,34968
	;;^UTILITY(U,$J,"PRO",920,0)
	;;=IBCNSC INS CO INPT CLAIMS^Inpt Claims Office^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",920,4)
	;;=^^^IC
	;;^UTILITY(U,$J,"PRO",920,15)
	;;=S VALMBG=14
	;;^UTILITY(U,$J,"PRO",920,20)
	;;=S IBY=",3," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",920,28)
	;;=IC
	;;^UTILITY(U,$J,"PRO",920,99)
	;;=55768,35736
	;;^UTILITY(U,$J,"PRO",921,0)
	;;=IBCNSC INS CO OPT CLAIMS^Opt Claims Office^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",921,4)
	;;=^^^OC
	;;^UTILITY(U,$J,"PRO",921,15)
	;;=S VALMBG=27
	;;^UTILITY(U,$J,"PRO",921,20)
	;;=S IBY=",10," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",921,99)
	;;=55768,35737
	;;^UTILITY(U,$J,"PRO",922,0)
	;;=IBCNSM  INSURANCE MANAGEMENT^Insurance Management^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",922,1,0)
	;;=^^1^1^2930303^^^
	;;^UTILITY(U,$J,"PRO",922,1,1,0)
	;;=This is the Primary Insurance Management option for IB v2.0
	;;^UTILITY(U,$J,"PRO",922,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",922,10,0)
	;;=^101.01PA^13^13
	;;^UTILITY(U,$J,"PRO",922,10,1,0)
	;;=878^CP^31
	;;^UTILITY(U,$J,"PRO",922,10,1,"^")
	;;=IBCNSM CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",922,10,2,0)
	;;=879^VP^12
	;;^UTILITY(U,$J,"PRO",922,10,2,"^")
	;;=IBCNSM VIEW PAT POLICY
	;;^UTILITY(U,$J,"PRO",922,10,3,0)
	;;=902^BU^21
	;;^UTILITY(U,$J,"PRO",922,10,3,"^")
	;;=IBCNSM BENEFITS USED
	;;^UTILITY(U,$J,"PRO",922,10,4,0)
	;;=903^AP^11

IBONI022
IBONI022	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",922,10,4,"^")
	;;=IBCNSM ADD POLICY
	;;^UTILITY(U,$J,"PRO",922,10,5,0)
	;;=880^AB^14
	;;^UTILITY(U,$J,"PRO",922,10,5,"^")
	;;=IBCNSM UPDATE ANNUAL BENEFITS
	;;^UTILITY(U,$J,"PRO",922,10,6,0)
	;;=881^EI^23
	;;^UTILITY(U,$J,"PRO",922,10,6,"^")
	;;=IBCNSM UPDATE INS CO.
	;;^UTILITY(U,$J,"PRO",922,10,7,0)
	;;=882^WP^32
	;;^UTILITY(U,$J,"PRO",922,10,7,"^")
	;;=IBCNSM PRINT WORKSHEET
	;;^UTILITY(U,$J,"PRO",922,10,8,0)
	;;=883^PC^33
	;;^UTILITY(U,$J,"PRO",922,10,8,"^")
	;;=IBCNSM PRINT PATIENT INS
	;;^UTILITY(U,$J,"PRO",922,10,9,0)
	;;=884^VC^22
	;;^UTILITY(U,$J,"PRO",922,10,9,"^")
	;;=IBCNSM VERIFY INS
	;;^UTILITY(U,$J,"PRO",922,10,10,0)
	;;=904^DP^13
	;;^UTILITY(U,$J,"PRO",922,10,10,"^")
	;;=IBCNSM DELETE POLICY
	;;^UTILITY(U,$J,"PRO",922,10,11,0)
	;;=919^EA^14
	;;^UTILITY(U,$J,"PRO",922,10,11,"^")
	;;=IBCNSM EDIT ALL
	;;^UTILITY(U,$J,"PRO",922,10,12,0)
	;;=928^EX^34
	;;^UTILITY(U,$J,"PRO",922,10,13,0)
	;;=1081^PR^27
	;;^UTILITY(U,$J,"PRO",922,10,13,"^")
	;;=IBCNSM PERSONAL RIDERS
	;;^UTILITY(U,$J,"PRO",922,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",922,20)
	;;=
	;;^UTILITY(U,$J,"PRO",922,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",922,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",922,99)
	;;=55886,42032
	;;^UTILITY(U,$J,"PRO",923,0)
	;;=IBCNSC INSURANCE CO^Insurance Company Edit^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",923,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",923,10,0)
	;;=^101.01PA^13^13
	;;^UTILITY(U,$J,"PRO",923,10,1,0)
	;;=885^EA^25
	;;^UTILITY(U,$J,"PRO",923,10,1,"^")
	;;=IBCNSC INS CO EDIT ALL
	;;^UTILITY(U,$J,"PRO",923,10,2,0)
	;;=888^AO^21
	;;^UTILITY(U,$J,"PRO",923,10,2,"^")
	;;=IBCNSC INS CO APPEALS OFFICE
	;;^UTILITY(U,$J,"PRO",923,10,3,0)
	;;=889^IO^22
	;;^UTILITY(U,$J,"PRO",923,10,3,"^")
	;;=IBCNSC INS CO INQUIRY OFFICE
	;;^UTILITY(U,$J,"PRO",923,10,4,0)
	;;=887^MM^12
	;;^UTILITY(U,$J,"PRO",923,10,4,"^")
	;;=IBCNSC INS CO MAIN MAILING ADDRESS
	;;^UTILITY(U,$J,"PRO",923,10,5,0)
	;;=886^BP^11
	;;^UTILITY(U,$J,"PRO",923,10,5,"^")
	;;=IBCNSC INS CO BILLING PARAMETERS
	;;^UTILITY(U,$J,"PRO",923,10,6,0)
	;;=897^CC^32
	;;^UTILITY(U,$J,"PRO",923,10,6,1)
	;;=^/
	;;^UTILITY(U,$J,"PRO",923,10,6,"^")
	;;=IBCNSC INS CO CHANGE COMPANY
	;;^UTILITY(U,$J,"PRO",923,10,7,0)
	;;=899^RE^23
	;;^UTILITY(U,$J,"PRO",923,10,7,"^")
	;;=IBCNSC INS CO REMARKS
	;;^UTILITY(U,$J,"PRO",923,10,8,0)
	;;=900^SY^24
	;;^UTILITY(U,$J,"PRO",923,10,8,"^")
	;;=IBCNSC INS CO SYNONYMS
	;;^UTILITY(U,$J,"PRO",923,10,9,0)
	;;=901^AI^31
	;;^UTILITY(U,$J,"PRO",923,10,9,"^")
	;;=IBCNSC INS CO (IN)ACTIVATE COMPANY
	;;^UTILITY(U,$J,"PRO",923,10,10,0)
	;;=920^IC^13
	;;^UTILITY(U,$J,"PRO",923,10,10,"^")
	;;=IBCNSC INS CO INPT CLAIMS
	;;^UTILITY(U,$J,"PRO",923,10,11,0)
	;;=921^OC^14
	;;^UTILITY(U,$J,"PRO",923,10,11,"^")
	;;=IBCNSC INS CO OPT CLAIMS
	;;^UTILITY(U,$J,"PRO",923,10,12,0)
	;;=1102^PC^15
	;;^UTILITY(U,$J,"PRO",923,10,12,"^")
	;;=IBCNSC INS CO RX CLAIMS
	;;^UTILITY(U,$J,"PRO",923,10,13,0)
	;;=1103^EX^33
	;;^UTILITY(U,$J,"PRO",923,10,13,"^")
	;;=IBCNS QUIT
	;;^UTILITY(U,$J,"PRO",923,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",923,24)
	;;=I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
	;;^UTILITY(U,$J,"PRO",923,25)
	;;=
	;;^UTILITY(U,$J,"PRO",923,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",923,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",923,99)
	;;=55907,38188
	;;^UTILITY(U,$J,"PRO",924,0)
	;;=IBCNSP POLICY MENU^Insurance Policy Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",924,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",924,10,0)
	;;=^101.01PA^12^12
	;;^UTILITY(U,$J,"PRO",924,10,1,0)
	;;=890^PI^11

IBONI023
IBONI023	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",924,10,1,"^")
	;;=IBCNSP EDIT POLICY INFO
	;;^UTILITY(U,$J,"PRO",924,10,2,0)
	;;=891^ED^13
	;;^UTILITY(U,$J,"PRO",924,10,2,"^")
	;;=IBCNSP EDIT EFFECTIVE DATES
	;;^UTILITY(U,$J,"PRO",924,10,3,0)
	;;=892^VC^31
	;;^UTILITY(U,$J,"PRO",924,10,3,"^")
	;;=IBCNSP VERIFY COVERAGE
	;;^UTILITY(U,$J,"PRO",924,10,4,0)
	;;=893^SU^14
	;;^UTILITY(U,$J,"PRO",924,10,4,"^")
	;;=IBCNSP SUBSCRIBER UPDATE
	;;^UTILITY(U,$J,"PRO",924,10,5,0)
	;;=894^EM^22
	;;^UTILITY(U,$J,"PRO",924,10,5,"^")
	;;=IBCNSP EMPLOYER INFO FOR CLAIMS
	;;^UTILITY(U,$J,"PRO",924,10,6,0)
	;;=895^AC^23
	;;^UTILITY(U,$J,"PRO",924,10,6,"^")
	;;=IBCNSP ADD COMMENT
	;;^UTILITY(U,$J,"PRO",924,10,7,0)
	;;=896^UI^12
	;;^UTILITY(U,$J,"PRO",924,10,7,"^")
	;;=IBCNSP UR INFO
	;;^UTILITY(U,$J,"PRO",924,10,8,0)
	;;=916^AB^32
	;;^UTILITY(U,$J,"PRO",924,10,8,"^")
	;;=IBCNSP ANNUAL BENEFITS
	;;^UTILITY(U,$J,"PRO",924,10,9,0)
	;;=917^BU^33
	;;^UTILITY(U,$J,"PRO",924,10,9,"^")
	;;=IBCNSP BENEFITS USED
	;;^UTILITY(U,$J,"PRO",924,10,10,0)
	;;=918^EA^24
	;;^UTILITY(U,$J,"PRO",924,10,10,"^")
	;;=IBCNSP EDIT ALL
	;;^UTILITY(U,$J,"PRO",924,10,11,0)
	;;=927^EX^34
	;;^UTILITY(U,$J,"PRO",924,10,11,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",924,10,12,0)
	;;=1066^IC^21
	;;^UTILITY(U,$J,"PRO",924,10,12,"^")
	;;=IBCNSP INSURANCE CONTACT INF
	;;^UTILITY(U,$J,"PRO",924,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",924,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",924,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",924,99)
	;;=55854,29000
	;;^UTILITY(U,$J,"PRO",925,0)
	;;=IBCNSA ANNUAL BENEFITS^Annual Benefits Editor^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",925,4)
	;;=26^4^^AB
	;;^UTILITY(U,$J,"PRO",925,10,0)
	;;=^101.01PA^11^12
	;;^UTILITY(U,$J,"PRO",925,10,1,0)
	;;=905^PI^11
	;;^UTILITY(U,$J,"PRO",925,10,1,"^")
	;;=IBCNSA AN BEN POL INF
	;;^UTILITY(U,$J,"PRO",925,10,3,0)
	;;=907^OP^14
	;;^UTILITY(U,$J,"PRO",925,10,3,"^")
	;;=IBCNSA AN BEN OPT
	;;^UTILITY(U,$J,"PRO",925,10,4,0)
	;;=908^IP^13
	;;^UTILITY(U,$J,"PRO",925,10,4,"^")
	;;=IBCNSA AN BEN INPT
	;;^UTILITY(U,$J,"PRO",925,10,5,0)
	;;=909^MH^21
	;;^UTILITY(U,$J,"PRO",925,10,5,"^")
	;;=IBCNSA AN BEN MEN H
	;;^UTILITY(U,$J,"PRO",925,10,6,0)
	;;=910^HH^22
	;;^UTILITY(U,$J,"PRO",925,10,6,"^")
	;;=IBCNSA AN BEN HOME HEA
	;;^UTILITY(U,$J,"PRO",925,10,7,0)
	;;=911^HS^23
	;;^UTILITY(U,$J,"PRO",925,10,7,"^")
	;;=IBCNSA AN BEN HOSPC
	;;^UTILITY(U,$J,"PRO",925,10,8,0)
	;;=914^EA^32
	;;^UTILITY(U,$J,"PRO",925,10,8,"^")
	;;=IBCNSA AN BEN ED ALL
	;;^UTILITY(U,$J,"PRO",925,10,9,0)
	;;=915^CY^33
	;;^UTILITY(U,$J,"PRO",925,10,9,"^")
	;;=IBCNSA AN BEN CH YR
	;;^UTILITY(U,$J,"PRO",925,10,10,0)
	;;=927^EX^34
	;;^UTILITY(U,$J,"PRO",925,10,10,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",925,10,11,0)
	;;=954^RH^24
	;;^UTILITY(U,$J,"PRO",925,10,11,"^")
	;;=IBCNSA AN BEN REHAB
	;;^UTILITY(U,$J,"PRO",925,10,12,0)
	;;=955^IV^31
	;;^UTILITY(U,$J,"PRO",925,10,12,"^")
	;;=IBCNSA AN BEN IV MGMT
	;;^UTILITY(U,$J,"PRO",925,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",925,20)
	;;=
	;;^UTILITY(U,$J,"PRO",925,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",925,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",925,99)
	;;=55861,52509
	;;^UTILITY(U,$J,"PRO",926,0)
	;;=IBCNSM PATIENT INSURANCE^Patient Insurance^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",926,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",926,10,0)
	;;=^101.01PA^12^13
	;;^UTILITY(U,$J,"PRO",926,10,1,0)
	;;=878^CP^31
	;;^UTILITY(U,$J,"PRO",926,10,1,"^")
	;;=IBCNSM CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",926,10,2,0)
	;;=879^VP^12
	;;^UTILITY(U,$J,"PRO",926,10,2,"^")
	;;=IBCNSM VIEW PAT POLICY

IBONI024
IBONI024	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",926,10,3,0)
	;;=902^BU^21
	;;^UTILITY(U,$J,"PRO",926,10,3,"^")
	;;=IBCNSM BENEFITS USED
	;;^UTILITY(U,$J,"PRO",926,10,4,0)
	;;=903^AP^11
	;;^UTILITY(U,$J,"PRO",926,10,4,"^")
	;;=IBCNSM ADD POLICY
	;;^UTILITY(U,$J,"PRO",926,10,5,0)
	;;=880^AB^14
	;;^UTILITY(U,$J,"PRO",926,10,5,"^")
	;;=IBCNSM UPDATE ANNUAL BENEFITS
	;;^UTILITY(U,$J,"PRO",926,10,6,0)
	;;=882^WP^32
	;;^UTILITY(U,$J,"PRO",926,10,6,"^")
	;;=IBCNSM PRINT WORKSHEET
	;;^UTILITY(U,$J,"PRO",926,10,7,0)
	;;=883^PC^33
	;;^UTILITY(U,$J,"PRO",926,10,7,"^")
	;;=IBCNSM PRINT PATIENT INS
	;;^UTILITY(U,$J,"PRO",926,10,8,0)
	;;=904^DP^13
	;;^UTILITY(U,$J,"PRO",926,10,8,"^")
	;;=IBCNSM DELETE POLICY
	;;^UTILITY(U,$J,"PRO",926,10,9,0)
	;;=919^EA^14
	;;^UTILITY(U,$J,"PRO",926,10,9,"^")
	;;=IBCNSM EDIT ALL
	;;^UTILITY(U,$J,"PRO",926,10,11,0)
	;;=884^VC^22
	;;^UTILITY(U,$J,"PRO",926,10,11,"^")
	;;=IBCNSM VERIFY INS
	;;^UTILITY(U,$J,"PRO",926,10,12,0)
	;;=1081^RI^27
	;;^UTILITY(U,$J,"PRO",926,10,12,"^")
	;;=IBCNSM PERSONAL RIDERS
	;;^UTILITY(U,$J,"PRO",926,10,13,0)
	;;=1103^EX^34
	;;^UTILITY(U,$J,"PRO",926,10,13,"^")
	;;=IBCNS QUIT
	;;^UTILITY(U,$J,"PRO",926,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",926,99)
	;;=55895,49897
	;;^UTILITY(U,$J,"PRO",927,0)
	;;=IBCNS EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",927,1,0)
	;;=^^2^2^2930806^^^^
	;;^UTILITY(U,$J,"PRO",927,1,1,0)
	;;=Allows the user to exit the system without quitting through the hierarchy of
	;;^UTILITY(U,$J,"PRO",927,1,2,0)
	;;=screens, or the user can exit to the previous screen.
	;;^UTILITY(U,$J,"PRO",927,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",927,2,1,0)
	;;=EX
	;;^UTILITY(U,$J,"PRO",927,2,"B","EX",1)
	;;=
	;;^UTILITY(U,$J,"PRO",927,4)
	;;=^^^EX
	;;^UTILITY(U,$J,"PRO",927,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",927,20)
	;;=D FASTEXIT^IBCNSM
	;;^UTILITY(U,$J,"PRO",927,28)
	;;=EX
	;;^UTILITY(U,$J,"PRO",927,99)
	;;=55768,35729
	;;^UTILITY(U,$J,"PRO",930,0)
	;;=IBCNSV ANNUAL BENEFITS^View An Ben^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",930,4)
	;;=26^4^^AB
	;;^UTILITY(U,$J,"PRO",930,10,0)
	;;=^101.01PA^2^2
	;;^UTILITY(U,$J,"PRO",930,10,1,0)
	;;=915^CY^11
	;;^UTILITY(U,$J,"PRO",930,10,1,"^")
	;;=IBCNSA AN BEN CH YR
	;;^UTILITY(U,$J,"PRO",930,10,2,0)
	;;=927^EX^21
	;;^UTILITY(U,$J,"PRO",930,10,2,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",930,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",930,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",930,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",930,99)
	;;=55775,31789
	;;^UTILITY(U,$J,"PRO",931,0)
	;;=IBCNSV PATIENT INSURANCE^Patient Insurance^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",931,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",931,10,0)
	;;=^101.01PA^5^6
	;;^UTILITY(U,$J,"PRO",931,10,1,0)
	;;=878^CP^22
	;;^UTILITY(U,$J,"PRO",931,10,1,"^")
	;;=IBCNSM CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",931,10,3,0)
	;;=933^AB^12
	;;^UTILITY(U,$J,"PRO",931,10,3,"^")
	;;=IBCNSV VIEW AN BEN
	;;^UTILITY(U,$J,"PRO",931,10,4,0)
	;;=932^VP^11
	;;^UTILITY(U,$J,"PRO",931,10,4,"^")
	;;=IBCNSV VIEW EXP POL
	;;^UTILITY(U,$J,"PRO",931,10,5,0)
	;;=934^BU^21
	;;^UTILITY(U,$J,"PRO",931,10,5,"^")
	;;=IBCNSV VIEW BEN USED
	;;^UTILITY(U,$J,"PRO",931,10,6,0)
	;;=1103^EX^31
	;;^UTILITY(U,$J,"PRO",931,10,6,"^")
	;;=IBCNS QUIT
	;;^UTILITY(U,$J,"PRO",931,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",931,24)
	;;=I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
	;;^UTILITY(U,$J,"PRO",931,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",931,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",931,99)
	;;=55894,57130
	;;^UTILITY(U,$J,"PRO",932,0)
	;;=IBCNSV VIEW EXP POL^View Policy Info^^A^^^^^^^^INTEGRATED BILLING

IBONI025
IBONI025	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",932,4)
	;;=^^^VP
	;;^UTILITY(U,$J,"PRO",932,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",932,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",932,20)
	;;=D NXT^IBCNSV("IBCNS VIEW EXP POL")
	;;^UTILITY(U,$J,"PRO",932,99)
	;;=55768,35771
	;;^UTILITY(U,$J,"PRO",933,0)
	;;=IBCNSV VIEW AN BEN^Annual Benefits ^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",933,4)
	;;=^^^VB
	;;^UTILITY(U,$J,"PRO",933,20)
	;;=D NXT^IBCNSV("IBCNS VIEW AN BEN")
	;;^UTILITY(U,$J,"PRO",933,28)
	;;=
	;;^UTILITY(U,$J,"PRO",933,99)
	;;=55768,35771
	;;^UTILITY(U,$J,"PRO",934,0)
	;;=IBCNSV VIEW BEN USED^Benefits Used^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",934,4)
	;;=^^^VU
	;;^UTILITY(U,$J,"PRO",934,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",934,20)
	;;=D NXT^IBCNSV("IBCNS VIEW BEN USED")
	;;^UTILITY(U,$J,"PRO",934,28)
	;;=
	;;^UTILITY(U,$J,"PRO",934,99)
	;;=55768,35771
	;;^UTILITY(U,$J,"PRO",935,0)
	;;=IBCNSV BENEFITS USED BY DATE^View Benefits Used By Date^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",935,4)
	;;=26^4^^BU
	;;^UTILITY(U,$J,"PRO",935,10,0)
	;;=^101.01PA^2^2
	;;^UTILITY(U,$J,"PRO",935,10,1,0)
	;;=951^CY^11
	;;^UTILITY(U,$J,"PRO",935,10,1,"^")
	;;=IBCNSD B USED CH YR
	;;^UTILITY(U,$J,"PRO",935,10,2,0)
	;;=927^EX^21
	;;^UTILITY(U,$J,"PRO",935,10,2,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",935,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",935,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",935,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",935,99)
	;;=55782,30516
	;;^UTILITY(U,$J,"PRO",936,0)
	;;=IBCNSV POLICY MENU^Insurance Policy Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",936,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",936,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",936,10,1,0)
	;;=927^EX^11
	;;^UTILITY(U,$J,"PRO",936,10,1,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",936,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",936,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",936,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",936,99)
	;;=55768,35771
	;;^UTILITY(U,$J,"PRO",937,0)
	;;=IBCNSV INSURANCE CO^View Insurance Co^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",937,4)
	;;=40^4
	;;^UTILITY(U,$J,"PRO",937,10,0)
	;;=^101.01PA^2^2
	;;^UTILITY(U,$J,"PRO",937,10,1,0)
	;;=897^CC^11
	;;^UTILITY(U,$J,"PRO",937,10,1,1)
	;;=^/
	;;^UTILITY(U,$J,"PRO",937,10,1,"^")
	;;=IBCNSC INS CO CHANGE COMPANY
	;;^UTILITY(U,$J,"PRO",937,10,2,0)
	;;=1103^EX^21
	;;^UTILITY(U,$J,"PRO",937,10,2,"^")
	;;=IBCNS QUIT
	;;^UTILITY(U,$J,"PRO",937,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",937,24)
	;;=I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^"),24)) ^(24)
	;;^UTILITY(U,$J,"PRO",937,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",937,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",937,99)
	;;=55917,44279
	;;^UTILITY(U,$J,"PRO",938,0)
	;;=IBCNSM VIEW INS CO^View Ins. Co.^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",938,20)
	;;=D VI^IBCNSM1
	;;^UTILITY(U,$J,"PRO",938,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",939,0)
	;;=IBCNSM VIEW NAT INS CO^View National Ins.^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",939,20)
	;;=D VN^IBCNSM1
	;;^UTILITY(U,$J,"PRO",939,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",940,0)
	;;=IBCNSM VIEW BENEFITS^View Benefits^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",940,20)
	;;=D VB^IBCNSM1
	;;^UTILITY(U,$J,"PRO",940,99)
	;;=55768,35757
	;;^UTILITY(U,$J,"PRO",941,0)
	;;=IBCNMS VIEW ALL DATA^View All Data^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",941,20)
	;;=D VA^IBCNSM1
	;;^UTILITY(U,$J,"PRO",941,99)
	;;=55768,35728
	;;^UTILITY(U,$J,"PRO",942,0)
	;;=IBCNSM UPDATE POLICY^Enter Policy^^A^^^^^^^^

IBONI026
IBONI026	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",942,20)
	;;=D EP^IBCNSM2
	;;^UTILITY(U,$J,"PRO",942,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",943,0)
	;;=IBCNSM UPDATE INS BENEFITS^Enter Cov. Benefits^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",943,20)
	;;=D EB^IBCNSM2
	;;^UTILITY(U,$J,"PRO",943,99)
	;;=55768,35756
	;;^UTILITY(U,$J,"PRO",945,0)
	;;=IBCNSD B USED POL INF^Policy Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",945,4)
	;;=^^^PI
	;;^UTILITY(U,$J,"PRO",945,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",945,20)
	;;=D FULL^VALM1 W !! D ED^IBCNSD1("[IBCN BU POL]")
	;;^UTILITY(U,$J,"PRO",945,99)
	;;=55768,35743
	;;^UTILITY(U,$J,"PRO",947,0)
	;;=IBCNSD B USED OPT DED^Opt Deduct^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",947,4)
	;;=^^^OD
	;;^UTILITY(U,$J,"PRO",947,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",947,20)
	;;=D FULL^VALM1 W !! D ED^IBCNSD1("[IBCN BU OPT]")
	;;^UTILITY(U,$J,"PRO",947,99)
	;;=55768,35743
	;;^UTILITY(U,$J,"PRO",948,0)
	;;=IBCNSD B USED INPT DED^Inpt Deduct^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",948,4)
	;;=^^^ID
	;;^UTILITY(U,$J,"PRO",948,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",948,10,1,0)
	;;=949^AC^23
	;;^UTILITY(U,$J,"PRO",948,10,1,"^")
	;;=IBCNSD B USED ADD COM
	;;^UTILITY(U,$J,"PRO",948,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",948,20)
	;;=D FULL^VALM1 W !! D ED^IBCNSD1("[IBCN BU INPT]")
	;;^UTILITY(U,$J,"PRO",948,99)
	;;=55768,35743
	;;^UTILITY(U,$J,"PRO",949,0)
	;;=IBCNSD B USED ADD COM^Add Comment^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",949,4)
	;;=^^^AC
	;;^UTILITY(U,$J,"PRO",949,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",949,20)
	;;=D FULL^VALM1 W !! D ED^IBCNSD1("[IBCN BU ADD COM]")
	;;^UTILITY(U,$J,"PRO",949,99)
	;;=55768,35742
	;;^UTILITY(U,$J,"PRO",951,0)
	;;=IBCNSD B USED CH YR^Change Year^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",951,4)
	;;=^^^CY
	;;^UTILITY(U,$J,"PRO",951,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",951,20)
	;;=D FULL^VALM1 W !! D CY^IBCNSD1
	;;^UTILITY(U,$J,"PRO",951,28)
	;;= 
	;;^UTILITY(U,$J,"PRO",951,99)
	;;=55768,35742
	;;^UTILITY(U,$J,"PRO",952,0)
	;;=IBCNSD B USED ED AL^Edit All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",952,4)
	;;=^^^EA
	;;^UTILITY(U,$J,"PRO",952,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",952,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",952,20)
	;;=D FULL^VALM1 W !! D ED^IBCNSD1("[IBCN BU ED AL]")
	;;^UTILITY(U,$J,"PRO",952,99)
	;;=55768,35742
	;;^UTILITY(U,$J,"PRO",953,0)
	;;=IBCNSD BENEFITS USED BY DATE^Benefits Used By Date Editor^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",953,4)
	;;=26^4^^BU
	;;^UTILITY(U,$J,"PRO",953,10,0)
	;;=^101.01PA^7^8
	;;^UTILITY(U,$J,"PRO",953,10,1,0)
	;;=945^PI^11
	;;^UTILITY(U,$J,"PRO",953,10,1,"^")
	;;=IBCNSD B USED POL INF
	;;^UTILITY(U,$J,"PRO",953,10,3,0)
	;;=947^OD^12
	;;^UTILITY(U,$J,"PRO",953,10,3,"^")
	;;=IBCNSD B USED OPT DED
	;;^UTILITY(U,$J,"PRO",953,10,4,0)
	;;=948^ID^13
	;;^UTILITY(U,$J,"PRO",953,10,4,"^")
	;;=IBCNSD B USED INPT DED
	;;^UTILITY(U,$J,"PRO",953,10,5,0)
	;;=949^AC^21
	;;^UTILITY(U,$J,"PRO",953,10,5,"^")
	;;=IBCNSD B USED ADD COM
	;;^UTILITY(U,$J,"PRO",953,10,6,0)
	;;=951^CY^23
	;;^UTILITY(U,$J,"PRO",953,10,6,"^")
	;;=IBCNSD B USED CH YR
	;;^UTILITY(U,$J,"PRO",953,10,7,0)
	;;=952^EA^22
	;;^UTILITY(U,$J,"PRO",953,10,7,"^")
	;;=IBCNSD B USED ED AL
	;;^UTILITY(U,$J,"PRO",953,10,8,0)
	;;=927^EX^31
	;;^UTILITY(U,$J,"PRO",953,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",953,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",953,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",953,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",953,99)
	;;=55879,39599

IBONI027
IBONI027	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",954,0)
	;;=IBCNSA AN BEN REHAB^Rehab^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",954,4)
	;;=^^^RH
	;;^UTILITY(U,$J,"PRO",954,15)
	;;=S VALMBG=29
	;;^UTILITY(U,$J,"PRO",954,20)
	;;=D ED^IBCNSA2("[IBCN AB REHAB]")
	;;^UTILITY(U,$J,"PRO",954,99)
	;;=55768,35731
	;;^UTILITY(U,$J,"PRO",955,0)
	;;=IBCNSA AN BEN IV MGMT^IV Mgmt.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",955,4)
	;;=^^^IV
	;;^UTILITY(U,$J,"PRO",955,15)
	;;=S VALMBG=29
	;;^UTILITY(U,$J,"PRO",955,20)
	;;=D ED^IBCNSA2("[IBCN AB IV MGMT]")
	;;^UTILITY(U,$J,"PRO",955,99)
	;;=55768,35730
	;;^UTILITY(U,$J,"PRO",956,0)
	;;=IBCN NEW INSURANCE EVENTS^IB New Insurnace Event Driver^^X^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",956,1,0)
	;;=^^3^3^2930829^^^
	;;^UTILITY(U,$J,"PRO",956,1,1,0)
	;;=This event driver will be invoked whenever a new insurance type entry is
	;;^UTILITY(U,$J,"PRO",956,1,2,0)
	;;=created in the patient file.  The is so that necessary actions can take
	;;^UTILITY(U,$J,"PRO",956,1,3,0)
	;;=place when a new insurance policy is added for a patient.
	;;^UTILITY(U,$J,"PRO",956,4)
	;;=^^^IBCNS
	;;^UTILITY(U,$J,"PRO",956,10,0)
	;;=^101.01PA^1^1
	;;^UTILITY(U,$J,"PRO",956,10,1,0)
	;;=957^^1
	;;^UTILITY(U,$J,"PRO",956,10,1,"^")
	;;=IBCN INSURANCE BULLETIN
	;;^UTILITY(U,$J,"PRO",956,99)
	;;=55768,35728
	;;^UTILITY(U,$J,"PRO",957,0)
	;;=IBCN INSURANCE BULLETIN^New Insurance Bulletin^^A^^^^^^^^
	;;^UTILITY(U,$J,"PRO",957,1,0)
	;;=^^2^2^2930829^^
	;;^UTILITY(U,$J,"PRO",957,1,1,0)
	;;=This protocol will send a bulletin when ever new insurance policies are 
	;;^UTILITY(U,$J,"PRO",957,1,2,0)
	;;=added and there is covered care that may now be billable.
	;;^UTILITY(U,$J,"PRO",957,15)
	;;=D ^IBCNSBL
	;;^UTILITY(U,$J,"PRO",957,99)
	;;=55768,35727
	;;^UTILITY(U,$J,"PRO",958,0)
	;;=IBTRE  MENU^Claims Tracked Editor Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",958,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",958,10,0)
	;;=^101.01PA^16^16
	;;^UTILITY(U,$J,"PRO",958,10,1,0)
	;;=959^CP^32
	;;^UTILITY(U,$J,"PRO",958,10,1,"^")
	;;=IBTRE CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",958,10,2,0)
	;;=960^AT^11
	;;^UTILITY(U,$J,"PRO",958,10,2,"^")
	;;=IBTRE ADD TRACKING
	;;^UTILITY(U,$J,"PRO",958,10,3,0)
	;;=961^DT^12
	;;^UTILITY(U,$J,"PRO",958,10,3,"^")
	;;=IBTRE DELETE TRACKING
	;;^UTILITY(U,$J,"PRO",958,10,4,0)
	;;=963^QE^13
	;;^UTILITY(U,$J,"PRO",958,10,4,"^")
	;;=IBTRE QUICK EDIT
	;;^UTILITY(U,$J,"PRO",958,10,5,0)
	;;=965^VE^20
	;;^UTILITY(U,$J,"PRO",958,10,5,"^")
	;;=IBTRE VIEW/EDIT TRACKING
	;;^UTILITY(U,$J,"PRO",958,10,6,0)
	;;=962^HR^21
	;;^UTILITY(U,$J,"PRO",958,10,6,"^")
	;;=IBTRE EDIT REVIEWS
	;;^UTILITY(U,$J,"PRO",958,10,7,0)
	;;=964^IR^22
	;;^UTILITY(U,$J,"PRO",958,10,7,"^")
	;;=IBTRE COMMUNICATIONS EDIT
	;;^UTILITY(U,$J,"PRO",958,10,8,0)
	;;=966^AE^31
	;;^UTILITY(U,$J,"PRO",958,10,8,"^")
	;;=IBTRE DENIALS/APPEALS
	;;^UTILITY(U,$J,"PRO",958,10,9,0)
	;;=967^CD^34
	;;^UTILITY(U,$J,"PRO",958,10,9,"^")
	;;=IBTRE CHANGE DATE
	;;^UTILITY(U,$J,"PRO",958,10,10,0)
	;;=1033^AC^14
	;;^UTILITY(U,$J,"PRO",958,10,10,"^")
	;;=IBTRE ASSIGN CASE
	;;^UTILITY(U,$J,"PRO",958,10,11,0)
	;;=1036^SC^25
	;;^UTILITY(U,$J,"PRO",958,10,11,"^")
	;;=IBTRE SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",958,10,12,0)
	;;=1040^DU^35
	;;^UTILITY(U,$J,"PRO",958,10,12,"^")
	;;=IBTRE DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",958,10,13,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",958,10,13,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",958,10,14,0)
	;;=1044^PU^36
	;;^UTILITY(U,$J,"PRO",958,10,14,"^")
	;;=IBTRE PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",958,10,15,0)
	;;=1050^PV^37

IBONI028
IBONI028	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",958,10,15,"^")
	;;=IBTRE PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",958,10,16,0)
	;;=1067^BI^18
	;;^UTILITY(U,$J,"PRO",958,10,16,"^")
	;;=IBTRE BILLING INFO
	;;^UTILITY(U,$J,"PRO",958,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",958,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",958,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",958,99)
	;;=55804,54407
	;;^UTILITY(U,$J,"PRO",959,0)
	;;=IBTRE CHANGE PATIENT^Change Patient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",959,20)
	;;=D CP^IBTRE1
	;;^UTILITY(U,$J,"PRO",959,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",960,0)
	;;=IBTRE ADD TRACKING^Add Tracking Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",960,20)
	;;=D AT^IBTRE2
	;;^UTILITY(U,$J,"PRO",960,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",961,0)
	;;=IBTRE DELETE TRACKING^Delete Tracking Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",961,20)
	;;=D DT^IBTRE1
	;;^UTILITY(U,$J,"PRO",961,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",962,0)
	;;=IBTRE EDIT REVIEWS^Hospital Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",962,20)
	;;=D NX^IBTRE1("IBT REVIEW EDITOR")
	;;^UTILITY(U,$J,"PRO",962,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",963,0)
	;;=IBTRE QUICK EDIT^Quick Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",963,20)
	;;=D QE^IBTRE1
	;;^UTILITY(U,$J,"PRO",963,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",964,0)
	;;=IBTRE COMMUNICATIONS EDIT^Insurance Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",964,20)
	;;=D NX^IBTRE1("IBT COMMUNICATIONS EDITOR")
	;;^UTILITY(U,$J,"PRO",964,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",965,0)
	;;=IBTRE VIEW/EDIT TRACKING^View/Edit Episode^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",965,20)
	;;=D NX^IBTRE1("IBT EXPAND/EDIT TRACKING")
	;;^UTILITY(U,$J,"PRO",965,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",966,0)
	;;=IBTRE DENIALS/APPEALS^Appeals Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",966,20)
	;;=D NX^IBTRE1("IBT APPEAL/DENIAL EDITOR")
	;;^UTILITY(U,$J,"PRO",966,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",967,0)
	;;=IBTRE CHANGE DATE^Change Date Range^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",967,20)
	;;=D CD^IBTRE1
	;;^UTILITY(U,$J,"PRO",967,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",968,0)
	;;=IBTRED  MENU^Expanded Claims Tracking Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",968,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",968,10,0)
	;;=^101.01PA^9^10
	;;^UTILITY(U,$J,"PRO",968,10,1,0)
	;;=969^BI^11
	;;^UTILITY(U,$J,"PRO",968,10,1,"^")
	;;=IBTRED BILLING INFO
	;;^UTILITY(U,$J,"PRO",968,10,3,0)
	;;=971^RI^21
	;;^UTILITY(U,$J,"PRO",968,10,3,"^")
	;;=IBTRED UR INFO
	;;^UTILITY(U,$J,"PRO",968,10,4,0)
	;;=972^TA^22
	;;^UTILITY(U,$J,"PRO",968,10,4,"^")
	;;=IBTRED PRECERT INFO
	;;^UTILITY(U,$J,"PRO",968,10,5,0)
	;;=973^HR^31
	;;^UTILITY(U,$J,"PRO",968,10,5,"^")
	;;=IBTRED EDIT REVIEWS
	;;^UTILITY(U,$J,"PRO",968,10,6,0)
	;;=974^IR^32
	;;^UTILITY(U,$J,"PRO",968,10,6,"^")
	;;=IBTRED COMMUNICATIONS EDIT
	;;^UTILITY(U,$J,"PRO",968,10,7,0)
	;;=1041^DU^35
	;;^UTILITY(U,$J,"PRO",968,10,7,"^")
	;;=IBTRED DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",968,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",968,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",968,10,9,0)
	;;=1045^PU^36
	;;^UTILITY(U,$J,"PRO",968,10,9,"^")
	;;=IBTRED PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",968,10,10,0)
	;;=1051^PV^37
	;;^UTILITY(U,$J,"PRO",968,10,10,"^")
	;;=IBTRED PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",968,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",968,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",968,28)
	;;=Select Action: 

IBONI029
IBONI029	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",968,99)
	;;=55768,58744
	;;^UTILITY(U,$J,"PRO",969,0)
	;;=IBTRED BILLING INFO^Billing Info Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",969,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",969,20)
	;;=D EDIT^IBTRED1("[IBT BILLING INFO]")
	;;^UTILITY(U,$J,"PRO",969,99)
	;;=55760,74737
	;;^UTILITY(U,$J,"PRO",971,0)
	;;=IBTRED UR INFO^Review Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",971,15)
	;;=S VALMBG=7
	;;^UTILITY(U,$J,"PRO",971,20)
	;;=D EDIT^IBTRED1("[IBT UR INFO]")
	;;^UTILITY(U,$J,"PRO",971,99)
	;;=55760,74737
	;;^UTILITY(U,$J,"PRO",972,0)
	;;=IBTRED PRECERT INFO^Treatment Auth.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",972,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",972,20)
	;;=D EDIT^IBTRED1("[IBT PRECERT INFO]")
	;;^UTILITY(U,$J,"PRO",972,99)
	;;=55760,74737
	;;^UTILITY(U,$J,"PRO",973,0)
	;;=IBTRED EDIT REVIEWS^Hospital Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",973,20)
	;;=D NX^IBTRED1("IBT REVIEW EDITOR")
	;;^UTILITY(U,$J,"PRO",973,99)
	;;=55760,74737
	;;^UTILITY(U,$J,"PRO",974,0)
	;;=IBTRED COMMUNICATIONS EDIT^Insurance Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",974,20)
	;;=D NX^IBTRED1("IBT COMMUNICATIONS EDITOR")
	;;^UTILITY(U,$J,"PRO",974,99)
	;;=55760,74737
	;;^UTILITY(U,$J,"PRO",975,0)
	;;=IBTRV  MENU^Review Editor Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",975,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",975,10,0)
	;;=^101.01PA^10^16
	;;^UTILITY(U,$J,"PRO",975,10,1,0)
	;;=976^QE^22
	;;^UTILITY(U,$J,"PRO",975,10,1,"^")
	;;=IBTRV QUICK EDIT
	;;^UTILITY(U,$J,"PRO",975,10,4,0)
	;;=979^DR^21
	;;^UTILITY(U,$J,"PRO",975,10,4,"^")
	;;=IBTRV DELETE REVIEW
	;;^UTILITY(U,$J,"PRO",975,10,5,0)
	;;=980^VE^32
	;;^UTILITY(U,$J,"PRO",975,10,5,"^")
	;;=IBTRV EXPAND REVIEW
	;;^UTILITY(U,$J,"PRO",975,10,6,0)
	;;=982^CS^23
	;;^UTILITY(U,$J,"PRO",975,10,6,"^")
	;;=IBTRV COMPLETE REV
	;;^UTILITY(U,$J,"PRO",975,10,9,0)
	;;=985^DU^35
	;;^UTILITY(U,$J,"PRO",975,10,9,"^")
	;;=IBTRV DIAGNOSIS
	;;^UTILITY(U,$J,"PRO",975,10,12,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",975,10,12,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",975,10,13,0)
	;;=1046^PU^36
	;;^UTILITY(U,$J,"PRO",975,10,13,"^")
	;;=IBTRV PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",975,10,14,0)
	;;=1052^PV^37
	;;^UTILITY(U,$J,"PRO",975,10,14,"^")
	;;=IBTRV PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",975,10,15,0)
	;;=1059^AN^11
	;;^UTILITY(U,$J,"PRO",975,10,15,"^")
	;;=IBTRV ADD NEXT REVIEW
	;;^UTILITY(U,$J,"PRO",975,10,16,0)
	;;=1105^CP^40
	;;^UTILITY(U,$J,"PRO",975,10,16,"^")
	;;=IBTRV CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",975,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",975,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",975,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",975,99)
	;;=55900,52541
	;;^UTILITY(U,$J,"PRO",976,0)
	;;=IBTRV QUICK EDIT^Quick Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",976,20)
	;;=D QE^IBTRV1
	;;^UTILITY(U,$J,"PRO",976,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",977,0)
	;;=IBTRV PRE-CERT^Pre-Cert Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",977,20)
	;;=D REV^IBTRV3(10,IBTRN)
	;;^UTILITY(U,$J,"PRO",977,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",978,0)
	;;=IBTRV CONT STAY^Cont. Stay Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",978,20)
	;;=D REV^IBTRV3(30,IBTRN)
	;;^UTILITY(U,$J,"PRO",978,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",979,0)
	;;=IBTRV DELETE REVIEW^Delete Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",979,20)
	;;=D DT^IBTRV1
	;;^UTILITY(U,$J,"PRO",979,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",980,0)
	;;=IBTRV EXPAND REVIEW^View/Edit Review^^A^^^^^^^^INTEGRATED BILLING

IBONI030
IBONI030	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",980,20)
	;;=D NX^IBTRV1("IBT EXPAND/EDIT REVIEW")
	;;^UTILITY(U,$J,"PRO",980,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",981,0)
	;;=IBTRV COMMUNICATIONS EDIT^Insurance Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",981,15)
	;;=D BLD^IBTRV
	;;^UTILITY(U,$J,"PRO",981,20)
	;;=D NX^IBTRVD1("IBT COMMUNICATIONS EDITOR",1)
	;;^UTILITY(U,$J,"PRO",981,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",982,0)
	;;=IBTRV COMPLETE REV^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",982,20)
	;;=D EDIT^IBTRV1("[IBT STATUS CHANGE]")
	;;^UTILITY(U,$J,"PRO",982,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",983,0)
	;;=IBTRV URGENT ADM REVIEW^Urgent Adm Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",983,20)
	;;=D REV^IBTRV3(20,IBTRN)
	;;^UTILITY(U,$J,"PRO",983,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",984,0)
	;;=IBTRV DISCHARGE REVIEW^Discharge Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",984,20)
	;;=D REV^IBTRV3(40,IBTRN)
	;;^UTILITY(U,$J,"PRO",984,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",985,0)
	;;=IBTRV DIAGNOSIS^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",985,15)
	;;=D BLD^IBTRV
	;;^UTILITY(U,$J,"PRO",985,20)
	;;=D EN^IBTRE3(IBTRN)
	;;^UTILITY(U,$J,"PRO",985,99)
	;;=55761,75116
	;;^UTILITY(U,$J,"PRO",987,0)
	;;=IBTRV NEXT REVIEW^Add Next Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",987,20)
	;;=D NR^IBTRV2
	;;^UTILITY(U,$J,"PRO",987,99)
	;;=55760,74745
	;;^UTILITY(U,$J,"PRO",988,0)
	;;=IBTRVD  MENU^Expanded Review Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",988,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",988,10,0)
	;;=^101.01PA^9^10
	;;^UTILITY(U,$J,"PRO",988,10,1,0)
	;;=991^CS^12
	;;^UTILITY(U,$J,"PRO",988,10,1,"^")
	;;=IBTRVD STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",988,10,2,0)
	;;=990^AC^13
	;;^UTILITY(U,$J,"PRO",988,10,2,"^")
	;;=IBTRVD ADD COMMENTS
	;;^UTILITY(U,$J,"PRO",988,10,3,0)
	;;=989^RI^11
	;;^UTILITY(U,$J,"PRO",988,10,3,"^")
	;;=IBTRVD REVIEW INFO
	;;^UTILITY(U,$J,"PRO",988,10,4,0)
	;;=992^SU^14
	;;^UTILITY(U,$J,"PRO",988,10,4,"^")
	;;=IBTRVD SPEC UNIT
	;;^UTILITY(U,$J,"PRO",988,10,5,0)
	;;=993^DU^35
	;;^UTILITY(U,$J,"PRO",988,10,5,"^")
	;;=IBTRVD DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",988,10,7,0)
	;;=996^CU^23
	;;^UTILITY(U,$J,"PRO",988,10,7,"^")
	;;=IBTRVD REVIEW CRITERIA
	;;^UTILITY(U,$J,"PRO",988,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",988,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",988,10,9,0)
	;;=1047^PU^36
	;;^UTILITY(U,$J,"PRO",988,10,9,"^")
	;;=IBTRVD PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",988,10,10,0)
	;;=1053^PV^37
	;;^UTILITY(U,$J,"PRO",988,10,10,"^")
	;;=IBTRVD PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",988,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",988,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",988,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",988,99)
	;;=55775,34126
	;;^UTILITY(U,$J,"PRO",989,0)
	;;=IBTRVD REVIEW INFO^Review Information^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",989,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",989,20)
	;;=D EDIT^IBTRVD1("[IBT REVIEW INFO]")
	;;^UTILITY(U,$J,"PRO",989,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",990,0)
	;;=IBTRVD ADD COMMENTS^Add Comments^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",990,15)
	;;=D BLD^IBTRVD S VALMBG=27
	;;^UTILITY(U,$J,"PRO",990,20)
	;;=S IBDIF=1 D EDIT^IBTRVD1("[IBT ADD COMMENTS]")
	;;^UTILITY(U,$J,"PRO",990,99)
	;;=55760,74747
	;;^UTILITY(U,$J,"PRO",991,0)
	;;=IBTRVD STATUS CHANGE^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",991,15)
	;;=S VALMBG=17
	;;^UTILITY(U,$J,"PRO",991,20)
	;;=D EDIT^IBTRVD1("[IBT STATUS CHANGE]")

IBONI031
IBONI031	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",991,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",992,0)
	;;=IBTRVD SPEC UNIT^Special Unit SI/IS^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",992,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",992,20)
	;;=D EDIT^IBTRVD1("[IBT SPECIAL UNIT]")
	;;^UTILITY(U,$J,"PRO",992,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",993,0)
	;;=IBTRVD DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",993,15)
	;;=D BLD^IBTRVD S VALMBG=17
	;;^UTILITY(U,$J,"PRO",993,20)
	;;=D EN^IBTRE3(IBTRN)
	;;^UTILITY(U,$J,"PRO",993,99)
	;;=55761,75252
	;;^UTILITY(U,$J,"PRO",994,0)
	;;=IBTRVD INSURANCE ACTION^Insurance Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",994,20)
	;;=D IA^IBTRVD1(IBTRV)
	;;^UTILITY(U,$J,"PRO",994,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",995,0)
	;;=IBTRVD COMMUNICATIONS EDIT^Insurance Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",995,20)
	;;=D NX^IBTRVD1("IBT COMMUNICATIONS EDITOR")
	;;^UTILITY(U,$J,"PRO",995,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",996,0)
	;;=IBTRVD REVIEW CRITERIA^Criteria Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",996,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",996,20)
	;;=D QE^IBTRVD1
	;;^UTILITY(U,$J,"PRO",996,99)
	;;=55760,74748
	;;^UTILITY(U,$J,"PRO",997,0)
	;;=IBTRC  MENU^Insurance Review Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",997,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",997,10,0)
	;;=^101.01PA^14^14
	;;^UTILITY(U,$J,"PRO",997,10,1,0)
	;;=998^AI^11
	;;^UTILITY(U,$J,"PRO",997,10,1,"^")
	;;=IBTRC ADD INS. ACTION
	;;^UTILITY(U,$J,"PRO",997,10,2,0)
	;;=999^DR^12
	;;^UTILITY(U,$J,"PRO",997,10,2,"^")
	;;=IBTRC DELETE INS. ACTION
	;;^UTILITY(U,$J,"PRO",997,10,3,0)
	;;=1000^QE^21
	;;^UTILITY(U,$J,"PRO",997,10,3,"^")
	;;=IBTRC QUICK EDIT
	;;^UTILITY(U,$J,"PRO",997,10,4,0)
	;;=1001^VE^22
	;;^UTILITY(U,$J,"PRO",997,10,4,"^")
	;;=IBTRC VIEW/EDIT
	;;^UTILITY(U,$J,"PRO",997,10,5,0)
	;;=1002^AE^31
	;;^UTILITY(U,$J,"PRO",997,10,5,"^")
	;;=IBTRC APPEAL/DENIALS
	;;^UTILITY(U,$J,"PRO",997,10,6,0)
	;;=1034^AC^31
	;;^UTILITY(U,$J,"PRO",997,10,6,"^")
	;;=IBTRC ADD COMMENT
	;;^UTILITY(U,$J,"PRO",997,10,7,0)
	;;=1035^SC^25
	;;^UTILITY(U,$J,"PRO",997,10,7,"^")
	;;=IBTRC SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",997,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",997,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",997,10,9,0)
	;;=1043^DU^35
	;;^UTILITY(U,$J,"PRO",997,10,9,"^")
	;;=IBTRC DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",997,10,10,0)
	;;=1048^PU^36
	;;^UTILITY(U,$J,"PRO",997,10,10,"^")
	;;=IBTRC PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",997,10,11,0)
	;;=1054^PV^37
	;;^UTILITY(U,$J,"PRO",997,10,11,"^")
	;;=IBTRC PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",997,10,12,0)
	;;=1060^CS^14
	;;^UTILITY(U,$J,"PRO",997,10,12,"^")
	;;=IBTRC STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",997,10,13,0)
	;;=1079^RW^39
	;;^UTILITY(U,$J,"PRO",997,10,13,"^")
	;;=IBTRC PRINT REV WORKSHEET
	;;^UTILITY(U,$J,"PRO",997,10,14,0)
	;;=1104^CP^40
	;;^UTILITY(U,$J,"PRO",997,10,14,"^")
	;;=IBTRC CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",997,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",997,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",997,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",997,99)
	;;=55929,40570
	;;^UTILITY(U,$J,"PRO",998,0)
	;;=IBTRC ADD INS. ACTION^Add Ins. Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",998,20)
	;;=D AI^IBTRC1
	;;^UTILITY(U,$J,"PRO",998,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",999,0)
	;;=IBTRC DELETE INS. ACTION^Delete Ins. Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",999,20)
	;;=D DT^IBTRC1

IBONI032
IBONI032	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",999,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1000,0)
	;;=IBTRC QUICK EDIT^Quick Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1000,20)
	;;=D QE^IBTRC1
	;;^UTILITY(U,$J,"PRO",1000,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1001,0)
	;;=IBTRC VIEW/EDIT^View/Edit Ins. Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1001,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",1001,20)
	;;=D NX^IBTRC1("IBT EXPAND/EDIT COMMUNICATIONS")
	;;^UTILITY(U,$J,"PRO",1001,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1002,0)
	;;=IBTRC APPEAL/DENIALS^Appeals Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1002,15)
	;;=D BLD^IBTRC
	;;^UTILITY(U,$J,"PRO",1002,20)
	;;=D NX^IBTRCD1("IBT APPEAL/DENIAL EDITOR",1)
	;;^UTILITY(U,$J,"PRO",1002,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1003,0)
	;;=IBTRCD  MENU^Insurance Actions Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1003,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1003,10,0)
	;;=^101.01PA^12^12
	;;^UTILITY(U,$J,"PRO",1003,10,1,0)
	;;=1006^AA^11
	;;^UTILITY(U,$J,"PRO",1003,10,1,"^")
	;;=IBTRCD APPEAL INFO
	;;^UTILITY(U,$J,"PRO",1003,10,2,0)
	;;=1007^CI^12
	;;^UTILITY(U,$J,"PRO",1003,10,2,"^")
	;;=IBTRCD CONTACT INFO
	;;^UTILITY(U,$J,"PRO",1003,10,3,0)
	;;=1004^IU^21
	;;^UTILITY(U,$J,"PRO",1003,10,3,"^")
	;;=IBTRCD INSURANCE INFO
	;;^UTILITY(U,$J,"PRO",1003,10,4,0)
	;;=1005^AI^22
	;;^UTILITY(U,$J,"PRO",1003,10,4,"^")
	;;=IBTRCD ACTION INFO
	;;^UTILITY(U,$J,"PRO",1003,10,5,0)
	;;=1008^AC^31
	;;^UTILITY(U,$J,"PRO",1003,10,5,"^")
	;;=IBTRCD COMMENT INFO
	;;^UTILITY(U,$J,"PRO",1003,10,6,0)
	;;=1009^VP^32
	;;^UTILITY(U,$J,"PRO",1003,10,6,"^")
	;;=IBTRCD EDIT PT. INS.
	;;^UTILITY(U,$J,"PRO",1003,10,7,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1003,10,7,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1003,10,8,0)
	;;=1042^DU^35
	;;^UTILITY(U,$J,"PRO",1003,10,8,"^")
	;;=IBTRCD DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1003,10,9,0)
	;;=1049^PU^36
	;;^UTILITY(U,$J,"PRO",1003,10,9,"^")
	;;=IBTRCD PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1003,10,10,0)
	;;=1055^PV^37
	;;^UTILITY(U,$J,"PRO",1003,10,10,"^")
	;;=IBTRCD PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1003,10,11,0)
	;;=1061^CS^14
	;;^UTILITY(U,$J,"PRO",1003,10,11,"^")
	;;=IBTRCD STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",1003,10,12,0)
	;;=1079^RW^39
	;;^UTILITY(U,$J,"PRO",1003,10,12,"^")
	;;=IBTRC PRINT REV WORKSHEET
	;;^UTILITY(U,$J,"PRO",1003,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1003,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1003,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1003,99)
	;;=55824,41351
	;;^UTILITY(U,$J,"PRO",1004,0)
	;;=IBTRCD INSURANCE INFO^Ins. Co. Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1004,15)
	;;=S VALMBG=9
	;;^UTILITY(U,$J,"PRO",1004,20)
	;;=D EDIT^IBTRCD1("[IBT INSURANCE INFO]")
	;;^UTILITY(U,$J,"PRO",1004,99)
	;;=55760,74727
	;;^UTILITY(U,$J,"PRO",1005,0)
	;;=IBTRCD ACTION INFO^Action Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1005,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",1005,20)
	;;=D EDIT^IBTRCD1("[IBT ACTION INFO]")
	;;^UTILITY(U,$J,"PRO",1005,99)
	;;=55760,74726
	;;^UTILITY(U,$J,"PRO",1006,0)
	;;=IBTRCD APPEAL INFO^Appeal Address^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1006,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",1006,20)
	;;=D EDIT^IBTRCD1("[IBT APPEAL INFO]")
	;;^UTILITY(U,$J,"PRO",1006,99)
	;;=55760,74726
	;;^UTILITY(U,$J,"PRO",1007,0)
	;;=IBTRCD CONTACT INFO^Contact Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1007,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",1007,20)
	;;=D EDIT^IBTRCD1("[IBT CONTACT INFO]")

IBONI033
IBONI033	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1007,99)
	;;=55760,74727
	;;^UTILITY(U,$J,"PRO",1008,0)
	;;=IBTRCD COMMENT INFO^Add Comments^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1008,15)
	;;=S VALMBG=23
	;;^UTILITY(U,$J,"PRO",1008,20)
	;;=D EDIT^IBTRCD1("[IBT COMMENT INFO]")
	;;^UTILITY(U,$J,"PRO",1008,99)
	;;=55760,74726
	;;^UTILITY(U,$J,"PRO",1009,0)
	;;=IBTRCD EDIT PT. INS.^View Pat. Ins.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1009,20)
	;;=D NX^IBTRCD1("IBCNS VIEW PAT INS")
	;;^UTILITY(U,$J,"PRO",1009,99)
	;;=55760,74727
	;;^UTILITY(U,$J,"PRO",1010,0)
	;;=IBTRPR  MENU^Pending Work Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1010,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1010,10,0)
	;;=^101.01PA^13^11
	;;^UTILITY(U,$J,"PRO",1010,10,1,0)
	;;=1011^CD^33
	;;^UTILITY(U,$J,"PRO",1010,10,1,"^")
	;;=IBTRPR CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1010,10,2,0)
	;;=1012^QE^11
	;;^UTILITY(U,$J,"PRO",1010,10,2,"^")
	;;=IBTRPR QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1010,10,3,0)
	;;=1013^VE^12
	;;^UTILITY(U,$J,"PRO",1010,10,3,"^")
	;;=IBTRPR VIEW EDIT
	;;^UTILITY(U,$J,"PRO",1010,10,4,0)
	;;=1016^IR^21
	;;^UTILITY(U,$J,"PRO",1010,10,4,"^")
	;;=IBTRPR INSURANCE ACTIONS
	;;^UTILITY(U,$J,"PRO",1010,10,5,0)
	;;=1015^HR^22
	;;^UTILITY(U,$J,"PRO",1010,10,5,"^")
	;;=IBTRPR UR REVIEW
	;;^UTILITY(U,$J,"PRO",1010,10,6,0)
	;;=1014^CS^31
	;;^UTILITY(U,$J,"PRO",1010,10,6,"^")
	;;=IBTRPR STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",1010,10,7,0)
	;;=1017^CT^13
	;;^UTILITY(U,$J,"PRO",1010,10,7,"^")
	;;=IBTRPR CLAIMS TRACKING
	;;^UTILITY(U,$J,"PRO",1010,10,8,0)
	;;=1018^RL^34
	;;^UTILITY(U,$J,"PRO",1010,10,8,"^")
	;;=IBTRPR REMOVE FROM LIST
	;;^UTILITY(U,$J,"PRO",1010,10,9,0)
	;;=1038^SC^25
	;;^UTILITY(U,$J,"PRO",1010,10,9,"^")
	;;=IBTRPR SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1010,10,10,0)
	;;=1039^PW^14
	;;^UTILITY(U,$J,"PRO",1010,10,10,"^")
	;;=IBTRPR PRINT WORKSHEET
	;;^UTILITY(U,$J,"PRO",1010,10,12,0)
	;;=1056^DU^35
	;;^UTILITY(U,$J,"PRO",1010,10,12,"^")
	;;=IBTRPR DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1010,10,13,0)
	;;=1057^PU^36
	;;^UTILITY(U,$J,"PRO",1010,10,13,"^")
	;;=IBTRPR PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1010,10,14,0)
	;;=1058^PV^37
	;;^UTILITY(U,$J,"PRO",1010,10,14,"^")
	;;=IBTRPR PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1010,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1010,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1010,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1010,99)
	;;=55893,33829
	;;^UTILITY(U,$J,"PRO",1011,0)
	;;=IBTRPR CHANGE DATE^Change Date Range^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1011,20)
	;;=D CD^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1011,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1012,0)
	;;=IBTRPR QUICK EDIT^Quick Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1012,20)
	;;=D QE^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1012,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1013,0)
	;;=IBTRPR VIEW EDIT^View/Edit Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1013,20)
	;;=D VE^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1013,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1014,0)
	;;=IBTRPR STATUS CHANGE^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1014,20)
	;;=D SC^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1014,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1015,0)
	;;=IBTRPR UR REVIEW^Hospital Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1015,20)
	;;=D NX^IBTRPR1("IBT REVIEW EDITOR")
	;;^UTILITY(U,$J,"PRO",1015,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1016,0)
	;;=IBTRPR INSURANCE ACTIONS^Ins. Reviews^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1016,20)
	;;=D NX^IBTRPR1("IBT COMMUNICATIONS EDITOR")

IBONI034
IBONI034	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1016,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1017,0)
	;;=IBTRPR CLAIMS TRACKING^Claims Tracking Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1017,20)
	;;=D NX^IBTRPR1("IBT EXPAND/EDIT TRACKING")
	;;^UTILITY(U,$J,"PRO",1017,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1018,0)
	;;=IBTRPR REMOVE FROM LIST^Remove from List^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1018,20)
	;;=D RL^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1018,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1019,0)
	;;=IBTRD  MENU^Appeal/Denial Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1019,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1019,10,0)
	;;=^101.01PA^8^8
	;;^UTILITY(U,$J,"PRO",1019,10,1,0)
	;;=1020^VE^11
	;;^UTILITY(U,$J,"PRO",1019,10,1,"^")
	;;=IBTRD VIEW EDIT DENIAL
	;;^UTILITY(U,$J,"PRO",1019,10,2,0)
	;;=1022^QE^12
	;;^UTILITY(U,$J,"PRO",1019,10,2,"^")
	;;=IBTRD QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1019,10,3,0)
	;;=1021^AA^21
	;;^UTILITY(U,$J,"PRO",1019,10,3,"^")
	;;=IBTRD ADD APPEAL
	;;^UTILITY(U,$J,"PRO",1019,10,4,0)
	;;=1023^DA^22
	;;^UTILITY(U,$J,"PRO",1019,10,4,"^")
	;;=IBTRD DELETE APPEAL/DENIAL
	;;^UTILITY(U,$J,"PRO",1019,10,5,0)
	;;=1025^PI^31
	;;^UTILITY(U,$J,"PRO",1019,10,5,"^")
	;;=IBTRD PATIENT INS. EDIT
	;;^UTILITY(U,$J,"PRO",1019,10,6,0)
	;;=1024^IC^32
	;;^UTILITY(U,$J,"PRO",1019,10,6,"^")
	;;=IBTRD VIEW INS. CO
	;;^UTILITY(U,$J,"PRO",1019,10,7,0)
	;;=1037^SC^25
	;;^UTILITY(U,$J,"PRO",1019,10,7,"^")
	;;=IBTRD SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1019,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1019,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1019,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1019,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1019,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1019,99)
	;;=55775,36782
	;;^UTILITY(U,$J,"PRO",1020,0)
	;;=IBTRD VIEW EDIT DENIAL^View Edit Entry^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1020,20)
	;;=D NX^IBTRD1("IBT EXPAND/EDIT DENIALS")
	;;^UTILITY(U,$J,"PRO",1020,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1021,0)
	;;=IBTRD ADD APPEAL^Add Appeal^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1021,20)
	;;=D AA^IBTRD1
	;;^UTILITY(U,$J,"PRO",1021,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1022,0)
	;;=IBTRD QUICK EDIT^Quick Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1022,20)
	;;=D QE^IBTRD1
	;;^UTILITY(U,$J,"PRO",1022,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1023,0)
	;;=IBTRD DELETE APPEAL/DENIAL^Delete Appeal/Denial^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1023,20)
	;;=D DT^IBTRD1
	;;^UTILITY(U,$J,"PRO",1023,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1024,0)
	;;=IBTRD VIEW INS. CO^Ins. Co. Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1024,20)
	;;=D NX^IBTRD1("IBCNS INSURANCE COMPANY")
	;;^UTILITY(U,$J,"PRO",1024,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1025,0)
	;;=IBTRD PATIENT INS. EDIT^Patient Ins. Edit.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1025,20)
	;;=D NX^IBTRD1("IBCNS PATIENT INSURANCE")
	;;^UTILITY(U,$J,"PRO",1025,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1026,0)
	;;=IBTRDD  MENU^Expanded Appeals/Denials Main Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1026,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1026,10,0)
	;;=^101.01PA^7^7
	;;^UTILITY(U,$J,"PRO",1026,10,1,0)
	;;=1027^AI^22
	;;^UTILITY(U,$J,"PRO",1026,10,1,"^")
	;;=IBTRDD ACTION INFO
	;;^UTILITY(U,$J,"PRO",1026,10,2,0)
	;;=1028^AA^11
	;;^UTILITY(U,$J,"PRO",1026,10,2,"^")
	;;=IBTRDD APPEAL INFO
	;;^UTILITY(U,$J,"PRO",1026,10,3,0)
	;;=1029^AC^31
	;;^UTILITY(U,$J,"PRO",1026,10,3,"^")
	;;=IBTRDD COMMENT INFO

IBONI035
IBONI035	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1026,10,4,0)
	;;=1030^CI^12
	;;^UTILITY(U,$J,"PRO",1026,10,4,"^")
	;;=IBTRDD CONTACT INFO
	;;^UTILITY(U,$J,"PRO",1026,10,5,0)
	;;=1031^EP^32
	;;^UTILITY(U,$J,"PRO",1026,10,5,"^")
	;;=IBTRDD EDIT PT. INS.
	;;^UTILITY(U,$J,"PRO",1026,10,6,0)
	;;=1032^IU^21
	;;^UTILITY(U,$J,"PRO",1026,10,6,"^")
	;;=IBTRDD INSURANCE INFO
	;;^UTILITY(U,$J,"PRO",1026,10,7,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1026,10,7,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1026,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1026,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1026,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1026,99)
	;;=55775,37294
	;;^UTILITY(U,$J,"PRO",1027,0)
	;;=IBTRDD ACTION INFO^Action Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1027,15)
	;;=S VALMBG=1
	;;^UTILITY(U,$J,"PRO",1027,20)
	;;=D EDIT^IBTRDD1("[IBT ACTION INFO]")
	;;^UTILITY(U,$J,"PRO",1027,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1028,0)
	;;=IBTRDD APPEAL INFO^Appeal Address^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1028,15)
	;;=S VALMBG=9
	;;^UTILITY(U,$J,"PRO",1028,20)
	;;=D EDIT^IBTRDD1("[IBT APPEAL INFO]")
	;;^UTILITY(U,$J,"PRO",1028,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1029,0)
	;;=IBTRDD COMMENT INFO^Add Comment^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1029,20)
	;;=D EDIT^IBTRDD1("[IBT COMMENT INFO]")
	;;^UTILITY(U,$J,"PRO",1029,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1030,0)
	;;=IBTRDD CONTACT INFO^Contact Info^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1030,15)
	;;=S VALMBG=23
	;;^UTILITY(U,$J,"PRO",1030,20)
	;;=D EDIT^IBTRDD1("[IBT CONTACT INFO]")
	;;^UTILITY(U,$J,"PRO",1030,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1031,0)
	;;=IBTRDD EDIT PT. INS.^Edit Pt. Ins.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1031,20)
	;;=D NX^IBTRDD1("IBCNS PATIENT INSURANCE")
	;;^UTILITY(U,$J,"PRO",1031,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1032,0)
	;;=IBTRDD INSURANCE INFO^Ins. Co. Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1032,15)
	;;=S VALMBG=17
	;;^UTILITY(U,$J,"PRO",1032,20)
	;;=D EDIT^IBTRDD1("[IBT INSURANCE INFO]")
	;;^UTILITY(U,$J,"PRO",1032,99)
	;;=55760,74731
	;;^UTILITY(U,$J,"PRO",1033,0)
	;;=IBTRE ASSIGN CASE^Assign Case^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1033,20)
	;;=D EDIT^IBTRE1("[IBT ASSIGN CASE]")
	;;^UTILITY(U,$J,"PRO",1033,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",1034,0)
	;;=IBTRC ADD COMMENT^Add Comment^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1034,20)
	;;=D EDIT^IBTRC1("[IBT COMMENT INFO]")
	;;^UTILITY(U,$J,"PRO",1034,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1035,0)
	;;=IBTRC SHOW SC CONDITIONS^SC Conditions^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1035,20)
	;;=D SHOWSC^IBTRC1
	;;^UTILITY(U,$J,"PRO",1035,99)
	;;=55760,74724
	;;^UTILITY(U,$J,"PRO",1036,0)
	;;=IBTRE SHOW SC CONDITIONS^SC Conditions^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1036,20)
	;;=D SHOWSC^IBTRC1
	;;^UTILITY(U,$J,"PRO",1036,99)
	;;=55760,74735
	;;^UTILITY(U,$J,"PRO",1037,0)
	;;=IBTRD SHOW SC CONDITIONS^SC Conditions^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1037,20)
	;;=D SHOWSC^IBTRD1
	;;^UTILITY(U,$J,"PRO",1037,99)
	;;=55760,74729
	;;^UTILITY(U,$J,"PRO",1038,0)
	;;=IBTRPR SHOW SC CONDITIONS^SC Conditions^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1038,20)
	;;=D SHOWSC^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1038,99)
	;;=55760,74741
	;;^UTILITY(U,$J,"PRO",1039,0)
	;;=IBTRPR PRINT WORKSHEET^Print Worksheet^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1039,20)
	;;=D PW^IBTRPR1
	;;^UTILITY(U,$J,"PRO",1039,99)
	;;=55760,74741

IBONI036
IBONI036	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1040,0)
	;;=IBTRE DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1040,15)
	;;=D BLD^IBTRE
	;;^UTILITY(U,$J,"PRO",1040,20)
	;;=D DIAG^IBTRE1
	;;^UTILITY(U,$J,"PRO",1040,99)
	;;=55761,47402
	;;^UTILITY(U,$J,"PRO",1041,0)
	;;=IBTRED DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1041,15)
	;;=D BLD^IBTRED S VALMBG=7
	;;^UTILITY(U,$J,"PRO",1041,20)
	;;=D EN^IBTRE3(IBTRN)
	;;^UTILITY(U,$J,"PRO",1041,99)
	;;=55761,74799
	;;^UTILITY(U,$J,"PRO",1042,0)
	;;=IBTRCD DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1042,15)
	;;=D BLD^IBTRCD
	;;^UTILITY(U,$J,"PRO",1042,20)
	;;=D EN^IBTRE3(IBTRN)
	;;^UTILITY(U,$J,"PRO",1042,99)
	;;=55761,75924
	;;^UTILITY(U,$J,"PRO",1043,0)
	;;=IBTRC DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1043,15)
	;;=D BLD^IBTRC
	;;^UTILITY(U,$J,"PRO",1043,20)
	;;=D EN^IBTRE3(IBTRN),DRG^IBTRV2(IBTRN)
	;;^UTILITY(U,$J,"PRO",1043,99)
	;;=55761,76045
	;;^UTILITY(U,$J,"PRO",1044,0)
	;;=IBTRE PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1044,15)
	;;=D BLD^IBTRE
	;;^UTILITY(U,$J,"PRO",1044,20)
	;;=D PU^IBTRE1
	;;^UTILITY(U,$J,"PRO",1044,99)
	;;=55761,78168
	;;^UTILITY(U,$J,"PRO",1045,0)
	;;=IBTRED PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1045,15)
	;;=D BLD^IBTRED S VALMBG=7
	;;^UTILITY(U,$J,"PRO",1045,20)
	;;=D EN^IBTRE4(IBTRN)
	;;^UTILITY(U,$J,"PRO",1045,99)
	;;=55761,78401
	;;^UTILITY(U,$J,"PRO",1046,0)
	;;=IBTRV PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1046,15)
	;;=D BLD^IBTRV
	;;^UTILITY(U,$J,"PRO",1046,20)
	;;=D EN^IBTRE4(IBTRN)
	;;^UTILITY(U,$J,"PRO",1046,99)
	;;=55761,78694
	;;^UTILITY(U,$J,"PRO",1047,0)
	;;=IBTRVD PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1047,15)
	;;=D BLD^IBTRVD S VALMBG=17
	;;^UTILITY(U,$J,"PRO",1047,20)
	;;=D EN^IBTRE4(IBTRN)
	;;^UTILITY(U,$J,"PRO",1047,99)
	;;=55761,78751
	;;^UTILITY(U,$J,"PRO",1048,0)
	;;=IBTRC PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1048,15)
	;;=D BLD^IBTRC
	;;^UTILITY(U,$J,"PRO",1048,20)
	;;=D EN^IBTRE4(IBTRN)
	;;^UTILITY(U,$J,"PRO",1048,99)
	;;=55761,78797
	;;^UTILITY(U,$J,"PRO",1049,0)
	;;=IBTRCD PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1049,15)
	;;=D BLD^IBTRCD
	;;^UTILITY(U,$J,"PRO",1049,20)
	;;=D EN^IBTRE4(IBTRN)
	;;^UTILITY(U,$J,"PRO",1049,99)
	;;=55761,78844
	;;^UTILITY(U,$J,"PRO",1050,0)
	;;=IBTRE PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1050,15)
	;;=D BLD^IBTRE
	;;^UTILITY(U,$J,"PRO",1050,20)
	;;=D PRV^IBTRE1
	;;^UTILITY(U,$J,"PRO",1050,99)
	;;=55762,29204
	;;^UTILITY(U,$J,"PRO",1051,0)
	;;=IBTRED PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1051,15)
	;;=D BLD^IBTRED S VALMBG=7
	;;^UTILITY(U,$J,"PRO",1051,20)
	;;=D EN^IBTRE5(IBTRN)
	;;^UTILITY(U,$J,"PRO",1051,99)
	;;=55762,29970
	;;^UTILITY(U,$J,"PRO",1052,0)
	;;=IBTRV PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1052,15)
	;;=D BLD^IBTRV
	;;^UTILITY(U,$J,"PRO",1052,20)
	;;=D EN^IBTRE5(IBTRN)
	;;^UTILITY(U,$J,"PRO",1052,99)
	;;=55762,30017
	;;^UTILITY(U,$J,"PRO",1053,0)
	;;=IBTRVD PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1053,15)
	;;=D BLD^IBTRVD S VALMBG=17
	;;^UTILITY(U,$J,"PRO",1053,20)
	;;=D EN^IBTRE5(IBTRN)

IBONI037
IBONI037	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1053,99)
	;;=55762,30059
	;;^UTILITY(U,$J,"PRO",1054,0)
	;;=IBTRC PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1054,15)
	;;=D BLD^IBTRC
	;;^UTILITY(U,$J,"PRO",1054,20)
	;;=D EN^IBTRE5(IBTRN)
	;;^UTILITY(U,$J,"PRO",1054,99)
	;;=55762,30100
	;;^UTILITY(U,$J,"PRO",1055,0)
	;;=IBTRCD PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1055,15)
	;;=D BLD^IBTRCD
	;;^UTILITY(U,$J,"PRO",1055,20)
	;;=D EN^IBTRE5(IBTRN)
	;;^UTILITY(U,$J,"PRO",1055,99)
	;;=55762,30154
	;;^UTILITY(U,$J,"PRO",1056,0)
	;;=IBTRPR DIAGNOSIS UPDATE^Diagnosis Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1056,15)
	;;=
	;;^UTILITY(U,$J,"PRO",1056,20)
	;;=D DIAG^IBTRPR2
	;;^UTILITY(U,$J,"PRO",1056,99)
	;;=55762,30883
	;;^UTILITY(U,$J,"PRO",1057,0)
	;;=IBTRPR PROCEDURE UPDATE^Procedure Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1057,15)
	;;=
	;;^UTILITY(U,$J,"PRO",1057,20)
	;;=D PU^IBTRPR2
	;;^UTILITY(U,$J,"PRO",1057,99)
	;;=55762,30933
	;;^UTILITY(U,$J,"PRO",1058,0)
	;;=IBTRPR PROVIDER UPDATE^Provider Update^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1058,20)
	;;=D PRV^IBTRPR2
	;;^UTILITY(U,$J,"PRO",1058,99)
	;;=55762,30975
	;;^UTILITY(U,$J,"PRO",1059,0)
	;;=IBTRV ADD NEXT REVIEW^Add Next Hosp. Review^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1059,15)
	;;=D BLD^IBTRV
	;;^UTILITY(U,$J,"PRO",1059,20)
	;;=D ADNXT^IBTRV3(IBTRN)
	;;^UTILITY(U,$J,"PRO",1059,99)
	;;=55763,23589
	;;^UTILITY(U,$J,"PRO",1060,0)
	;;=IBTRC STATUS CHANGE^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1060,20)
	;;=D EDIT^IBTRC1("[IBT STATUS CHANGE]")
	;;^UTILITY(U,$J,"PRO",1060,99)
	;;=55767,43204
	;;^UTILITY(U,$J,"PRO",1061,0)
	;;=IBTRCD STATUS CHANGE^Change Status^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1061,20)
	;;=D EDIT^IBTRCD1("[IBT STATUS CHANGE]")
	;;^UTILITY(U,$J,"PRO",1061,99)
	;;=55767,43272
	;;^UTILITY(U,$J,"PRO",1062,0)
	;;=IBTRPR  HR MENU^Pending Reviews HR Only^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1062,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1062,10,0)
	;;=^101.01PA^12^11
	;;^UTILITY(U,$J,"PRO",1062,10,1,0)
	;;=1011^CD^33
	;;^UTILITY(U,$J,"PRO",1062,10,1,"^")
	;;=IBTRPR CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1062,10,2,0)
	;;=1012^QE^11
	;;^UTILITY(U,$J,"PRO",1062,10,2,"^")
	;;=IBTRPR QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1062,10,3,0)
	;;=1013^VE^12
	;;^UTILITY(U,$J,"PRO",1062,10,3,"^")
	;;=IBTRPR VIEW EDIT
	;;^UTILITY(U,$J,"PRO",1062,10,5,0)
	;;=1015^HR^22
	;;^UTILITY(U,$J,"PRO",1062,10,5,"^")
	;;=IBTRPR UR REVIEW
	;;^UTILITY(U,$J,"PRO",1062,10,6,0)
	;;=1014^CS^31
	;;^UTILITY(U,$J,"PRO",1062,10,6,"^")
	;;=IBTRPR STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",1062,10,7,0)
	;;=1017^CT^13
	;;^UTILITY(U,$J,"PRO",1062,10,7,"^")
	;;=IBTRPR CLAIMS TRACKING
	;;^UTILITY(U,$J,"PRO",1062,10,8,0)
	;;=1018^RL^34
	;;^UTILITY(U,$J,"PRO",1062,10,8,"^")
	;;=IBTRPR REMOVE FROM LIST
	;;^UTILITY(U,$J,"PRO",1062,10,9,0)
	;;=1038^SC^25
	;;^UTILITY(U,$J,"PRO",1062,10,9,"^")
	;;=IBTRPR SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1062,10,10,0)
	;;=1039^PW^14
	;;^UTILITY(U,$J,"PRO",1062,10,10,"^")
	;;=IBTRPR PRINT WORKSHEET
	;;^UTILITY(U,$J,"PRO",1062,10,12,0)
	;;=1056^DU^35
	;;^UTILITY(U,$J,"PRO",1062,10,12,"^")
	;;=IBTRPR DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1062,10,13,0)
	;;=1057^PU^36
	;;^UTILITY(U,$J,"PRO",1062,10,13,"^")
	;;=IBTRPR PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1062,10,14,0)
	;;=1058^PV^37
	;;^UTILITY(U,$J,"PRO",1062,10,14,"^")
	;;=IBTRPR PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1062,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"

IBONI038
IBONI038	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1062,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1062,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",1062,99)
	;;=55941,35382
	;;^UTILITY(U,$J,"PRO",1063,0)
	;;=IBTRPR  IR MENU^Pending Work IR Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1063,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1063,10,0)
	;;=^101.01PA^12^11
	;;^UTILITY(U,$J,"PRO",1063,10,1,0)
	;;=1011^CD^33
	;;^UTILITY(U,$J,"PRO",1063,10,1,"^")
	;;=IBTRPR CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1063,10,2,0)
	;;=1012^QE^11
	;;^UTILITY(U,$J,"PRO",1063,10,2,"^")
	;;=IBTRPR QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1063,10,3,0)
	;;=1013^VE^12
	;;^UTILITY(U,$J,"PRO",1063,10,3,"^")
	;;=IBTRPR VIEW EDIT
	;;^UTILITY(U,$J,"PRO",1063,10,4,0)
	;;=1016^IR^21
	;;^UTILITY(U,$J,"PRO",1063,10,4,"^")
	;;=IBTRPR INSURANCE ACTIONS
	;;^UTILITY(U,$J,"PRO",1063,10,6,0)
	;;=1014^CS^31
	;;^UTILITY(U,$J,"PRO",1063,10,6,"^")
	;;=IBTRPR STATUS CHANGE
	;;^UTILITY(U,$J,"PRO",1063,10,7,0)
	;;=1017^CT^13
	;;^UTILITY(U,$J,"PRO",1063,10,7,"^")
	;;=IBTRPR CLAIMS TRACKING
	;;^UTILITY(U,$J,"PRO",1063,10,8,0)
	;;=1018^RL^34
	;;^UTILITY(U,$J,"PRO",1063,10,8,"^")
	;;=IBTRPR REMOVE FROM LIST
	;;^UTILITY(U,$J,"PRO",1063,10,9,0)
	;;=1038^SC^25
	;;^UTILITY(U,$J,"PRO",1063,10,9,"^")
	;;=IBTRPR SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1063,10,10,0)
	;;=1039^PW^14
	;;^UTILITY(U,$J,"PRO",1063,10,10,"^")
	;;=IBTRPR PRINT WORKSHEET
	;;^UTILITY(U,$J,"PRO",1063,10,12,0)
	;;=1056^DU^35
	;;^UTILITY(U,$J,"PRO",1063,10,12,"^")
	;;=IBTRPR DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1063,10,13,0)
	;;=1057^PU^36
	;;^UTILITY(U,$J,"PRO",1063,10,13,"^")
	;;=IBTRPR PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1063,10,14,0)
	;;=1058^PV^37
	;;^UTILITY(U,$J,"PRO",1063,10,14,"^")
	;;=IBTRPR PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1063,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1063,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1063,28)
	;;=Select Action:
	;;^UTILITY(U,$J,"PRO",1063,99)
	;;=55941,35403
	;;^UTILITY(U,$J,"PRO",1064,0)
	;;=IBTRE  IR MENU^Claims tracking IR Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1064,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1064,10,0)
	;;=^101.01PA^15^16
	;;^UTILITY(U,$J,"PRO",1064,10,1,0)
	;;=959^CP^32
	;;^UTILITY(U,$J,"PRO",1064,10,1,"^")
	;;=IBTRE CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",1064,10,2,0)
	;;=960^AT^11
	;;^UTILITY(U,$J,"PRO",1064,10,2,"^")
	;;=IBTRE ADD TRACKING
	;;^UTILITY(U,$J,"PRO",1064,10,3,0)
	;;=961^DT^12
	;;^UTILITY(U,$J,"PRO",1064,10,3,"^")
	;;=IBTRE DELETE TRACKING
	;;^UTILITY(U,$J,"PRO",1064,10,4,0)
	;;=963^QE^13
	;;^UTILITY(U,$J,"PRO",1064,10,4,"^")
	;;=IBTRE QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1064,10,5,0)
	;;=965^VE^20
	;;^UTILITY(U,$J,"PRO",1064,10,5,"^")
	;;=IBTRE VIEW/EDIT TRACKING
	;;^UTILITY(U,$J,"PRO",1064,10,7,0)
	;;=964^IR^22
	;;^UTILITY(U,$J,"PRO",1064,10,7,"^")
	;;=IBTRE COMMUNICATIONS EDIT
	;;^UTILITY(U,$J,"PRO",1064,10,8,0)
	;;=966^AE^31
	;;^UTILITY(U,$J,"PRO",1064,10,8,"^")
	;;=IBTRE DENIALS/APPEALS
	;;^UTILITY(U,$J,"PRO",1064,10,9,0)
	;;=967^CD^34
	;;^UTILITY(U,$J,"PRO",1064,10,9,"^")
	;;=IBTRE CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1064,10,10,0)
	;;=1033^AC^14
	;;^UTILITY(U,$J,"PRO",1064,10,10,"^")
	;;=IBTRE ASSIGN CASE
	;;^UTILITY(U,$J,"PRO",1064,10,11,0)
	;;=1036^SC^25
	;;^UTILITY(U,$J,"PRO",1064,10,11,"^")
	;;=IBTRE SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1064,10,12,0)
	;;=1040^DU^35
	;;^UTILITY(U,$J,"PRO",1064,10,12,"^")
	;;=IBTRE DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1064,10,13,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1064,10,13,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1064,10,14,0)
	;;=1044^PU^36
	;;^UTILITY(U,$J,"PRO",1064,10,14,"^")
	;;=IBTRE PROCEDURE UPDATE

IBONI039
IBONI039	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1064,10,15,0)
	;;=1050^PV^37
	;;^UTILITY(U,$J,"PRO",1064,10,15,"^")
	;;=IBTRE PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1064,10,16,0)
	;;=1067^BI^18
	;;^UTILITY(U,$J,"PRO",1064,10,16,"^")
	;;=IBTRE BILLING INFO
	;;^UTILITY(U,$J,"PRO",1064,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1064,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1064,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1064,99)
	;;=55804,54323
	;;^UTILITY(U,$J,"PRO",1065,0)
	;;=IBTRE  HR MENU^Claims Tracking HR menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1065,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1065,10,0)
	;;=^101.01PA^13^15
	;;^UTILITY(U,$J,"PRO",1065,10,1,0)
	;;=959^CP^32
	;;^UTILITY(U,$J,"PRO",1065,10,1,"^")
	;;=IBTRE CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",1065,10,2,0)
	;;=960^AT^11
	;;^UTILITY(U,$J,"PRO",1065,10,2,"^")
	;;=IBTRE ADD TRACKING
	;;^UTILITY(U,$J,"PRO",1065,10,3,0)
	;;=961^DT^12
	;;^UTILITY(U,$J,"PRO",1065,10,3,"^")
	;;=IBTRE DELETE TRACKING
	;;^UTILITY(U,$J,"PRO",1065,10,4,0)
	;;=963^QE^13
	;;^UTILITY(U,$J,"PRO",1065,10,4,"^")
	;;=IBTRE QUICK EDIT
	;;^UTILITY(U,$J,"PRO",1065,10,5,0)
	;;=965^VE^20
	;;^UTILITY(U,$J,"PRO",1065,10,5,"^")
	;;=IBTRE VIEW/EDIT TRACKING
	;;^UTILITY(U,$J,"PRO",1065,10,6,0)
	;;=962^HR^21
	;;^UTILITY(U,$J,"PRO",1065,10,6,"^")
	;;=IBTRE EDIT REVIEWS
	;;^UTILITY(U,$J,"PRO",1065,10,9,0)
	;;=967^CD^34
	;;^UTILITY(U,$J,"PRO",1065,10,9,"^")
	;;=IBTRE CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1065,10,10,0)
	;;=1033^AC^14
	;;^UTILITY(U,$J,"PRO",1065,10,10,"^")
	;;=IBTRE ASSIGN CASE
	;;^UTILITY(U,$J,"PRO",1065,10,11,0)
	;;=1036^SC^25
	;;^UTILITY(U,$J,"PRO",1065,10,11,"^")
	;;=IBTRE SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1065,10,12,0)
	;;=1040^DU^35
	;;^UTILITY(U,$J,"PRO",1065,10,12,"^")
	;;=IBTRE DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1065,10,13,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1065,10,13,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1065,10,14,0)
	;;=1044^PU^36
	;;^UTILITY(U,$J,"PRO",1065,10,14,"^")
	;;=IBTRE PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1065,10,15,0)
	;;=1050^PV^37
	;;^UTILITY(U,$J,"PRO",1065,10,15,"^")
	;;=IBTRE PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1065,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1065,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1065,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1065,99)
	;;=55817,50939
	;;^UTILITY(U,$J,"PRO",1066,0)
	;;=IBCNSP INSURANCE CONTACT INF^Insur. Contact Inf.^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1066,4)
	;;=^^^IC
	;;^UTILITY(U,$J,"PRO",1066,10,0)
	;;=^101.01PA^0^0
	;;^UTILITY(U,$J,"PRO",1066,15)
	;;=S VALMBG=15
	;;^UTILITY(U,$J,"PRO",1066,20)
	;;=D IC^IBCNSP1
	;;^UTILITY(U,$J,"PRO",1066,26)
	;;=
	;;^UTILITY(U,$J,"PRO",1066,28)
	;;=IC
	;;^UTILITY(U,$J,"PRO",1066,99)
	;;=55768,35758
	;;^UTILITY(U,$J,"PRO",1067,0)
	;;=IBTRE BILLING INFO^Billing Info Edit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1067,20)
	;;=D EDIT^IBTRE1("[IBT BILLING INFO]")
	;;^UTILITY(U,$J,"PRO",1067,99)
	;;=55804,54100
	;;^UTILITY(U,$J,"PRO",1069,0)
	;;=IBDF ADD BLANK SELECTION^Add Blank^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1069,1,0)
	;;=^^2^2^2931020^
	;;^UTILITY(U,$J,"PRO",1069,1,1,0)
	;;=Allows the user to add a blank selection, i.e., a place holder that takes
	;;^UTILITY(U,$J,"PRO",1069,1,2,0)
	;;=up space on the selection list but has no data that is displayed.
	;;^UTILITY(U,$J,"PRO",1069,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1069,2,1,0)
	;;=AB
	;;^UTILITY(U,$J,"PRO",1069,2,"B","AB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1069,20)
	;;=D ADDBLANK^IBDF4A
	;;^UTILITY(U,$J,"PRO",1069,99)
	;;=55852,54041

IBONI040
IBONI040	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1070,0)
	;;=IBDF ADD BLANK GROUP^Add Blank^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1070,1,0)
	;;=^^2^2^2931020^
	;;^UTILITY(U,$J,"PRO",1070,1,1,0)
	;;=Allows the user to add a group that has no displayable text - i.e., it is 
	;;^UTILITY(U,$J,"PRO",1070,1,2,0)
	;;=blank - serves to add space to the list.
	;;^UTILITY(U,$J,"PRO",1070,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1070,2,1,0)
	;;=AB
	;;^UTILITY(U,$J,"PRO",1070,2,"B","AB",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1070,20)
	;;=D ADDEMPTY^IBDF3
	;;^UTILITY(U,$J,"PRO",1070,99)
	;;=55852,54041
	;;^UTILITY(U,$J,"PRO",1071,0)
	;;=IBDF FORMAT ALL SELECTIONS^Format All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1071,1,0)
	;;=^^1^1^2931020^
	;;^UTILITY(U,$J,"PRO",1071,1,1,0)
	;;=Allows the user to format all the selections on the selection list all at once.
	;;^UTILITY(U,$J,"PRO",1071,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1071,2,1,0)
	;;=FA
	;;^UTILITY(U,$J,"PRO",1071,2,"B","FA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1071,20)
	;;=D FORMAT^IBDF9A1
	;;^UTILITY(U,$J,"PRO",1071,99)
	;;=55852,54047
	;;^UTILITY(U,$J,"PRO",1072,0)
	;;=IBDF FORMAT GROUP'S SELECTIONS^Format All^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1072,1,0)
	;;=^^1^1^2931021^
	;;^UTILITY(U,$J,"PRO",1072,1,1,0)
	;;=Allows the user to format in mass all the selections in the group.
	;;^UTILITY(U,$J,"PRO",1072,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1072,2,1,0)
	;;=FA
	;;^UTILITY(U,$J,"PRO",1072,2,"B","FA",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1072,20)
	;;=D FORMAT2^IBDF9A1
	;;^UTILITY(U,$J,"PRO",1072,99)
	;;=55852,54047
	;;^UTILITY(U,$J,"PRO",1073,0)
	;;=IBDF VIEW FORM W/WO DATA^View w/wo Data (Toggle)^^A^^^^^^^^IB ENCOUNTER FORM
	;;^UTILITY(U,$J,"PRO",1073,1,0)
	;;=^^2^2^2931022^
	;;^UTILITY(U,$J,"PRO",1073,1,1,0)
	;;=Allows the user to either view the form with or without data. When viewing
	;;^UTILITY(U,$J,"PRO",1073,1,2,0)
	;;=with data the user must select a test patient.
	;;^UTILITY(U,$J,"PRO",1073,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1073,2,1,0)
	;;=VD
	;;^UTILITY(U,$J,"PRO",1073,2,"B","VD",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1073,20)
	;;=D VIEW^IBDF5C
	;;^UTILITY(U,$J,"PRO",1073,99)
	;;=55852,54051
	;;^UTILITY(U,$J,"PRO",1074,0)
	;;=IBTRE  BI MENU^Claims Tracking for Billers Menu^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1074,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1074,10,0)
	;;=^101.01PA^6^16
	;;^UTILITY(U,$J,"PRO",1074,10,1,0)
	;;=959^CP^32
	;;^UTILITY(U,$J,"PRO",1074,10,1,"^")
	;;=IBTRE CHANGE PATIENT
	;;^UTILITY(U,$J,"PRO",1074,10,5,0)
	;;=965^VE^20
	;;^UTILITY(U,$J,"PRO",1074,10,5,"^")
	;;=IBTRE VIEW/EDIT TRACKING
	;;^UTILITY(U,$J,"PRO",1074,10,9,0)
	;;=967^CD^34
	;;^UTILITY(U,$J,"PRO",1074,10,9,"^")
	;;=IBTRE CHANGE DATE
	;;^UTILITY(U,$J,"PRO",1074,10,11,0)
	;;=1036^SC^25
	;;^UTILITY(U,$J,"PRO",1074,10,11,"^")
	;;=IBTRE SHOW SC CONDITIONS
	;;^UTILITY(U,$J,"PRO",1074,10,13,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1074,10,13,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1074,10,16,0)
	;;=1067^BI^18
	;;^UTILITY(U,$J,"PRO",1074,10,16,"^")
	;;=IBTRE BILLING INFO
	;;^UTILITY(U,$J,"PRO",1074,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1074,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1074,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1074,99)
	;;=55817,42430
	;;^UTILITY(U,$J,"PRO",1075,0)
	;;=IBTRED  IR MENU^Expanded Claims tracking menu (IR)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1075,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1075,10,0)
	;;=^101.01PA^8^10
	;;^UTILITY(U,$J,"PRO",1075,10,1,0)
	;;=969^BI^11
	;;^UTILITY(U,$J,"PRO",1075,10,1,"^")
	;;=IBTRED BILLING INFO

IBONI041
IBONI041	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1075,10,3,0)
	;;=971^RI^21
	;;^UTILITY(U,$J,"PRO",1075,10,3,"^")
	;;=IBTRED UR INFO
	;;^UTILITY(U,$J,"PRO",1075,10,4,0)
	;;=972^TA^22
	;;^UTILITY(U,$J,"PRO",1075,10,4,"^")
	;;=IBTRED PRECERT INFO
	;;^UTILITY(U,$J,"PRO",1075,10,6,0)
	;;=974^IR^32
	;;^UTILITY(U,$J,"PRO",1075,10,6,"^")
	;;=IBTRED COMMUNICATIONS EDIT
	;;^UTILITY(U,$J,"PRO",1075,10,7,0)
	;;=1041^DU^35
	;;^UTILITY(U,$J,"PRO",1075,10,7,"^")
	;;=IBTRED DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1075,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1075,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1075,10,9,0)
	;;=1045^PU^36
	;;^UTILITY(U,$J,"PRO",1075,10,9,"^")
	;;=IBTRED PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1075,10,10,0)
	;;=1051^PV^37
	;;^UTILITY(U,$J,"PRO",1075,10,10,"^")
	;;=IBTRED PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1075,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1075,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1075,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1075,99)
	;;=55818,33504
	;;^UTILITY(U,$J,"PRO",1076,0)
	;;=IBTRED  HR MENU^Expanded Claims Tracking menu (HR)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1076,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1076,10,0)
	;;=^101.01PA^6^10
	;;^UTILITY(U,$J,"PRO",1076,10,3,0)
	;;=971^RI^21
	;;^UTILITY(U,$J,"PRO",1076,10,3,"^")
	;;=IBTRED UR INFO
	;;^UTILITY(U,$J,"PRO",1076,10,5,0)
	;;=973^HR^31
	;;^UTILITY(U,$J,"PRO",1076,10,5,"^")
	;;=IBTRED EDIT REVIEWS
	;;^UTILITY(U,$J,"PRO",1076,10,7,0)
	;;=1041^DU^35
	;;^UTILITY(U,$J,"PRO",1076,10,7,"^")
	;;=IBTRED DIAGNOSIS UPDATE
	;;^UTILITY(U,$J,"PRO",1076,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1076,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1076,10,9,0)
	;;=1045^PU^36
	;;^UTILITY(U,$J,"PRO",1076,10,9,"^")
	;;=IBTRED PROCEDURE UPDATE
	;;^UTILITY(U,$J,"PRO",1076,10,10,0)
	;;=1051^PV^37
	;;^UTILITY(U,$J,"PRO",1076,10,10,"^")
	;;=IBTRED PROVIDER UPDATE
	;;^UTILITY(U,$J,"PRO",1076,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1076,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1076,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1076,99)
	;;=55817,50951
	;;^UTILITY(U,$J,"PRO",1077,0)
	;;=IBTRED  BI MENU^Expanded Claims Tracking Menu (BI)^^M^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1077,4)
	;;=26^4
	;;^UTILITY(U,$J,"PRO",1077,10,0)
	;;=^101.01PA^4^8
	;;^UTILITY(U,$J,"PRO",1077,10,1,0)
	;;=969^BI^11
	;;^UTILITY(U,$J,"PRO",1077,10,1,"^")
	;;=IBTRED BILLING INFO
	;;^UTILITY(U,$J,"PRO",1077,10,3,0)
	;;=971^RI^21
	;;^UTILITY(U,$J,"PRO",1077,10,3,"^")
	;;=IBTRED UR INFO
	;;^UTILITY(U,$J,"PRO",1077,10,4,0)
	;;=972^TA^22
	;;^UTILITY(U,$J,"PRO",1077,10,4,"^")
	;;=IBTRED PRECERT INFO
	;;^UTILITY(U,$J,"PRO",1077,10,8,0)
	;;=927^EX^41
	;;^UTILITY(U,$J,"PRO",1077,10,8,"^")
	;;=IBCNS EXIT
	;;^UTILITY(U,$J,"PRO",1077,15)
	;;=I $G(IBFASTXT)=1 S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1077,26)
	;;=D SHOW^VALM
	;;^UTILITY(U,$J,"PRO",1077,28)
	;;=Select Action: 
	;;^UTILITY(U,$J,"PRO",1077,99)
	;;=55817,50621
	;;^UTILITY(U,$J,"PRO",1079,0)
	;;=IBTRC PRINT REV WORKSHEET^Review Wksheet Print^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1079,20)
	;;=D RW^IBTRC4
	;;^UTILITY(U,$J,"PRO",1079,99)
	;;=55818,52639
	;;^UTILITY(U,$J,"PRO",1080,0)
	;;=IBCNSP PERSONAL RIDERS^Personal Riders^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1080,20)
	;;=D RIDERS^IBCNSP3
	;;^UTILITY(U,$J,"PRO",1080,99)
	;;=55851,25608
	;;^UTILITY(U,$J,"PRO",1081,0)
	;;=IBCNSM PERSONAL RIDERS^Personal Riders^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1081,20)
	;;=D RD^IBCNSP3
	;;^UTILITY(U,$J,"PRO",1081,99)
	;;=55851,26204
	;;^UTILITY(U,$J,"PRO",1082,0)
	;;=IBDF COMPILE FORM^Recompile Form^^A^^^^^^^^INTEGRATED BILLING

IBONI042
IBONI042	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	F I=1:2 S X=$T(Q+I) Q:X=""  S Y=$E($T(Q+I+1),4,999),X=$E(X,4,999) S:$A(Y)=126 I=I+1,Y=$E(Y,2,999)_$E($T(Q+I+1),5,99) S:$A(Y)=61 Y=$E(Y,2,999) X NO E  S @X=Y
Q	Q
	;;^UTILITY(U,$J,"PRO",1082,1,0)
	;;=^^1^1^2931124^
	;;^UTILITY(U,$J,"PRO",1082,1,1,0)
	;;=Allows forms to be compiled into a format that is very fast to print.
	;;^UTILITY(U,$J,"PRO",1082,2,0)
	;;=^101.02A^1^1
	;;^UTILITY(U,$J,"PRO",1082,2,1,0)
	;;=RC
	;;^UTILITY(U,$J,"PRO",1082,2,"B","RC",1)
	;;=
	;;^UTILITY(U,$J,"PRO",1082,20)
	;;=D CMPLACTN^IBDF19
	;;^UTILITY(U,$J,"PRO",1082,99)
	;;=55853,51175
	;;^UTILITY(U,$J,"PRO",1102,0)
	;;=IBCNSC INS CO RX CLAIMS^Prescr Claims Of^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1102,4)
	;;=^^^PC
	;;^UTILITY(U,$J,"PRO",1102,10,0)
	;;=^101.01PA^^
	;;^UTILITY(U,$J,"PRO",1102,15)
	;;=S VALMBG=27
	;;^UTILITY(U,$J,"PRO",1102,20)
	;;=S IBY=",11," D EA^IBCNSC1
	;;^UTILITY(U,$J,"PRO",1102,99)
	;;=55886,42441
	;;^UTILITY(U,$J,"PRO",1103,0)
	;;=IBCNS QUIT^Exit^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1103,4)
	;;=^^^EX
	;;^UTILITY(U,$J,"PRO",1103,15)
	;;=S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1103,20)
	;;=S VALMBCK="Q"
	;;^UTILITY(U,$J,"PRO",1103,99)
	;;=55894,56470
	;;^UTILITY(U,$J,"PRO",1104,0)
	;;=IBTRC CHANGE PATIENT^Change Patient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1104,20)
	;;=D CP^IBTRC1
	;;^UTILITY(U,$J,"PRO",1104,99)
	;;=55900,51856
	;;^UTILITY(U,$J,"PRO",1105,0)
	;;=IBTRV CHANGE PATIENT^Change Patient^^A^^^^^^^^INTEGRATED BILLING
	;;^UTILITY(U,$J,"PRO",1105,20)
	;;=D CP^IBTRV1
	;;^UTILITY(U,$J,"PRO",1105,99)
	;;=55900,51918

IBONIT
IBONIT	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	K DIF,DIK,DDF,DDT,DTO,D0,DLAYGO,DIC,DIR,DA,ORVROM,DFR,DTN,DIX,DZ
	S DIFQ=0,ORVROM=22 W !!,"This version of 'IBONIT' was created on 21-MAR-1994"
	W !?9,"(at ALBANY ISC VAX DEVELOPMENT, by OE/RR V.2.5)",!
	G Q:DIFQ D ^IBONIT1 G Q:'$D(DIFQ) S DIK(0)="B"
	D ^IBONIT2,^IBONIT3
	L  W !,*7,"OK, Protocol Installation is Complete.",!
	K %ZW,%,%H,D0,DA,DIF,DIFQ,DIG,DIH,DIK,DIU,DIV,DSEC,I,J,KEY,DIY,N,NM,NO,ORVROM,R,X,X0
	Q
	;
Q	W *7,!!,"NO UPDATING HAS OCCURRED!" Q
	;
IXF	;;IB

IBONIT1
IBONIT1	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; LOADS
	;
	I $S('$D(DUZ)#2:1,'$D(DUZ(0))#2:1,1:0) W !,"DUZ and DUZ(0) must be defined to continue." K DIFQ Q
	K DIF,DIK,D,DDF,DDT,DTO,D0,DLAYGO,DIC,DIR,DA,DFR,DTN,DIX,DZ D DT^IBONIT2 S %=1,U="^",DSEC=1
	S NO=$P("I 0^I $D(@X)#2,X[U",U,%) I %<1 K DIFQ Q
	W !,"    PROTOCOL INSTALLATION"
	Q:'$D(DIFQ)  ;S %=0 W !!,"ARE YOU SURE YOU WANT TO CONTINUE" D YN^DICN I %-1 K DIFQ Q
	D DT^IBONIT2 K ^UTILITY(U,$J),^UTILITY("DIK",$J) W !,"...OK, this may take a while, hold on please..." F R=1001:1:1042 D @("^IBONI"_$E(R,2,4)) W "."

IBONIT2
IBONIT2	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("ORVROM",$J),DIC
	Q
DT	W !
	I '$D(DTIME) S DTIME=999
	K %DT D NOW^%DTC S DT=X
	K DIK,DIC,%I,DICS Q
	;

IBONIT3
IBONIT3	; ; 21-MAR-1994
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;
	K ^UTILITY("ORVROM",$J) S DIC(0)="LX",ORNMCHK=1 I $D(^ORD(101,0))#2,^(0)?1"PROTOCOL".E S DIC="^ORD(101,",DLAYGO=101,N="PRO" D ADD,OP
	K ^UTILITY(U,$J),DIC,DLAYGO
	Q
DIEZ	I ^DD("VERSION")>17.4,'$D(DISYS),$D(^%ZOSF("OS"))#2 S DISYS=+$P(^("OS"),"^",2)
	E  S DISYS=^DD("OS")
	Q:'$D(^DD("OS",DISYS,"ZS"))
	S N=$O(^UTILITY("ORVROM",$J,DIR,0)) Q:N=""  S Y=+^(N) K ^(N)
	I $D(@("^"_DIR_"(Y,""ROU"")")) K ^("ROU") I $D(^("ROUOLD")) S X=^("ROUOLD"),DMAX=^DD("ROU") D:X]"" @("EN^DI"_$E(DIR,3)_"Z")
	G DIEZ
	;
OP	S NM=$O(^UTILITY("ORVROM",$J,N,NM)) I NM="" K ^UTILITY("ORVROM",$J) G Q
	S R=$O(^UTILITY("ORVROM",$J,N,NM,0)) G:R="" OP
	W !,"'"_NM_"' Protocol Filed" S DA=+^UTILITY("ORVROM",$J,N,NM,R)
	S %=$P(^ORD(101,DA,0),U,12) S:%]"" %=$O(^DIC(9.4,"B",%,0))
	S $P(^ORD(101,DA,0),U,12)=%,(ORDZ,ORDIX)=0
	S %=$S($D(^ORD(101,DA,5)):$P(^(5),"^"),1:"") I $L(%) S $P(^(5),"^")="",X=$P(%,";",2),%=$P(%,";") I $D(@("^"_X_"""B"","""_%_""")")) S %=$O(^(%,0)) S %=$S(%:%_";"_X,1:""),$P(^ORD(101,DA,5),"^")=%
	I $D(^ORD(101,DA,3,0)) S I=0 F  S I=$O(^ORD(101,DA,3,I)) Q:I<1  S KEY=^(I,0) K ^(0) I $D(^DIC(19.1,"B",KEY)) S KEY=$O(^(KEY,0)) I KEY S ^ORD(101,DA,3,I,0)=KEY
	I $D(^ORD(101,DA,3)) S I=0 F  S I=$O(^ORD(101,DA,3,I)) Q:I<1  S ORDZ=ORDZ+1,ORDIX=X
	I  S $P(^ORD(101,DA,3,0),"^",3,4)=ORDIX_"^"_ORDZ
	I $D(^UTILITY("ORVROM",$J,N,NM,R,10)) S X=0 F  S X=$O(^UTILITY("ORVROM",$J,N,NM,R,10,X)) Q:X<1  D A1
	S (ORDZ,ORDIX)=0 S X=0 F  S X=$O(^ORD(101,DA,10,X)) Q:X<1  S ORDZ=ORDZ+1,ORDIX=X
	S:$D(^ORD(101,DA,10,0)) ^(0)="^101.01PA^"_ORDIX_U_ORDZ D IX1^DIK
	I $D(^UTILITY("ORVROM",$J,N,NM,R,"MEN")) S IMEN=0 F  S IMEN=$O(^UTILITY("ORVROM",$J,N,NM,R,"MEN",IMEN)) Q:IMEN=""  S OMEN=^(IMEN),MEN=IMEN D MEN
	K MEN,IMEN,OMEN
	G OP
	;
ADD	S R=0 F  S R=$O(^UTILITY(U,$J,N,R)) Q:R=""  S X=$P(^(R,0),U),I=$P(^(0),U,4) D
	. I $L($T(DOT^ORVOM)) D DOT^ORVOM
	. I '$L($T(DOT^ORVOM)) W "."
	. I $O(^ORD(101,"B",X,0)) S Y=$O(^(0)),ORA=Y,Y=Y_U D A Q
	. D ^DIC I Y>0,'$D(DIFQ(N))!$P(Y,U,3) S ORA=Y,Y=Y_U D A
Q	K ORA,MEN,OMEN,ORNMCHK,ORDZ,ORDIX S (NM,R)=0 Q
A	S ^UTILITY("ORVROM",$J,N,X,R)=Y
	I $O(^UTILITY(U,$J,N,R,1,0))>0 K ^ORD(101,+Y,1)
	I $O(^UTILITY(U,$J,N,R,10,0))>0 S %X="^UTILITY(U,$J,N,R,10,",%Y="^UTILITY(""ORVROM"",$J,N,X,R,10," D %XY^%RCR K ^UTILITY(U,$J,N,R,10)
	I $D(^UTILITY(U,$J,N,R,"MEN")) S %X="^UTILITY(U,$J,N,R,""MEN"",",%Y="^UTILITY(""ORVROM"",$J,N,X,R,""MEN""," D %XY^%RCR K ^UTILITY(U,$J,N,R,"MEN")
	S %X="^UTILITY(U,$J,N,R,",%Y=DIC_"+ORA,",DA=+ORA,DIK=DIC D %XY^%RCR
	Q
A1	S ORA=DA N DA,DIC,ORI S Y="",ORI=0,DIC="^ORD(101,"_+ORA_",10,",DIC(0)="L",DA(1)=+ORA S:'$D(^ORD(101,DA(1),10,0)) ^(0)="^101.01PA^^"
	F  S ORI=$O(^UTILITY("ORVROM",$J,N,NM,R,10,ORI)) Q:ORI<1  S X0=^(ORI,0),X=$S($D(^(U)):^(U),1:"") I $L(X) D A2
	K DA,^UTILITY("ORVROM",$J,N,NM,R,10)
	Q
A2	N X1 S DLAYGO=101 D ^DIC Q:'Y
	I $P(Y,"^",3) W !?2,X_" added as item to "_$P(^ORD(101,DA(1),0),"^")_"."
	S X0=^UTILITY("ORVROM",$J,N,NM,R,10,ORI,0)
	S %=$P(X0,"^",4) I $L(%) S %=$O(^ORD(101,"B",%,0)) S:% $P(X0,"^",4)=%
	S $P(^ORD(101,DA(1),10,+Y,0),"^",2,99)=$P(X0,"^",2,99)
	S X1=0 F  S X1=$O(^UTILITY("ORVROM",$J,N,NM,R,10,ORI,X1)) Q:X1=""  I X1'["^" S X0=^UTILITY("ORVROM",$J,N,NM,R,10,ORI,X1),^ORD(101,DA(1),10,+Y,X1)=X0
	Q
MEN	S MEN=$S($D(^ORD(101,"B",MEN)):$O(^(MEN,0)),1:"") I 'MEN K ^UTILITY("ORVROM",$J,N,NM,R,"MEN") Q
	S X=NM,X0=OMEN,DIC="^ORD(101,"_MEN_",10,",DIC(0)="L",DA(1)=MEN S:'$D(^ORD(101,DA(1),10,0)) ^(0)="^101.01PA^^"
	S DIC("DR")="2///"_$P(X0,"^",2)_";3///"_$P(X0,"^",3)_";4///"_$P(X0,"^",4)_";5///"_$P(X0,"^",5)_";6///"_$P(X0,"^",6),DLAYGO=101 D ^DIC
	I $P(Y,"^",3) W !?2,X_" added as item to "_$P(^ORD(101,DA(1),0),"^")_"."
	Q

IBORAT
IBORAT	;ALB/RJS - BILLING RATES LISTING - 3/02/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAIN ROUTINE FOR IB BILLING RATES LISTING
	;CALLS IBORAT1A,IBORAT1B,IBORAT1C,IBORAT2A,IBORAT2B,IBORAT2C
	;
START	;
	;***
	;S XRTL=$ZU(0),XRTN="IBORAT-1" D T0^%ZOSV ;start rt clock
	D PROMPT I Y=-1 Q
	D OPEN G END:POP
	I $D(IO("Q")) D QUEUED,HOME^%ZIS G END
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBORAT" D T1^%ZOSV ;stop rt clock
REPORT	;
	;***
	;S XRTL=$ZU(0),XRTN="IBORAT-2" D T0^%ZOSV ;start rt clock
	S IBOUTPUT=0,IBZ=0
	D ^IBORAT1A,^IBORAT1B,^IBORAT2A,^IBORAT2B,^IBORAT1C
	I 'IBZ G NEXT
	I IBDONE G END
	F IBAAA=$Y:1:(IOSL-3) W !
	I ($E(IOST,1,2)="C-")
	I  S DIR(0)="E" D ^DIR K DIR I Y=0!(Y="")!($D(DIRUT)) G END
NEXT	;
	D ^IBORAT2C
	I 'IBZ W !,"No data for this date range"
END	;
	;KILL ^TMP GLOBAL
	K ^TMP($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBORAT" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	;IBORAT***** KILLING VARIABLES IN IBORAT******
	K %DT,%IS,IBENDATE,POP,IBSTDATE,Y,IBAAA,IBZ
	;IBORAT1**** KILLING SHARED VARIABLES FROM OTHER ROUTINES *****
	K DIRUT,IBDONE,IBEDATE,IBENDATE,IBOUTPUT,IBPAGE,IBSDATE,IBSTDATE,IBTITLE,IBTODAY,IBPAYORS
	D ^%ZISC
	Q
PROMPT	;
	W !
	S %DT="AEPX",IBOUTPUT=0
	S %DT("A")="Enter Beginning Date:" D ^%DT
	S IBSTDATE=Y
	I Y=-1 Q
	S %DT("A")="Enter Ending Date:" D ^%DT
	S IBENDATE=Y
	I Y=-1 Q
	I IBENDATE<IBSTDATE W !,"Ending Date Less than Beginning Date Please Re-enter" G PROMPT
	Q
QUEUED	;
	S ZTRTN="REPORT^IBORAT",ZTDESC="IB BILLING RATES & MEDICARE DEDUCTIBLE REPORT",ZTSAVE("IBSTDATE")="",ZTSAVE("IBENDATE")="" D ^%ZTLOAD W !!,$S($D(ZTSK):"Request Queued",1:"Request Cancelled")
	K ZTSK
	Q
OPEN	;
	S %ZIS="QM" D ^%ZIS
	Q

IBORAT1A
IBORAT1A	;ALB/RJS - FILTER FOR FILE 350.2 - 2/27/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;THIS PROGRAM BUILDS A TEMP FILE FROM FILE 350.2 DATA
	;FILE 350.2 IS THE IB ACTION CHARGE FILE
START	;
	S IBSPEC=""
	F  S IBSPEC=$O(^IBE(350.1,"E",IBSPEC)) Q:IBSPEC=""  D IBPTR
END	;
	K IBEFFDAT,IBPTR,IBRECNR,IBSPEC,IBXDATA
	Q
IBPTR	;
	S IBPTR=""
	F  S IBPTR=$O(^IBE(350.1,"E",IBSPEC,IBPTR)) Q:IBPTR=""  D IBEFFDAT
	Q
IBEFFDAT	;
	S IBEFFDAT=-9999999
	F  S IBEFFDAT=$O(^IBE(350.2,"AIVDT",IBPTR,IBEFFDAT)) Q:IBEFFDAT=""  D NEXT
	Q
NEXT	;
	F IBRECNR=0:0 S IBRECNR=$O(^IBE(350.2,"AIVDT",IBPTR,IBEFFDAT,IBRECNR)) Q:IBRECNR=""  D LOAD
	Q
LOAD	;
	SET IBXDATA=$G(^IBE(350.2,IBRECNR,0))
	I IBSPEC'=""&($P(IBXDATA,U,2)'="") S ^TMP($J,"IBORAT1A",IBSPEC,$P(IBXDATA,U,2))=$P(IBXDATA,U,4)_"^"_$P(IBXDATA,U,6)
	Q

IBORAT1B
IBORAT1B	;ALB/RJS - DATE SETUP IBROUTINE  - 3/02/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;CALLED BY IBORAT1A
	;THIS IBROUTINE PARSES A TMP FILE CONTAINING DATA FROM FILES
	;350.2 AND CALCULATES BEGINNING AND ENDING DATES
	;FOR BILLING RATES AND MEDICARE DEDUCTIBLES.
	;EG. IF RATE IS EFFECTIVE ON 1/1/87 AND IS SUPERSEDED BY A NEW RATE
	;ON 1/1/88 IT IS IN EFFECT FROM 1/1/87-12/31/87
	;THIS DATA IS STORED IN ^TMP($J,IBROUT,IBSPEC,IBEFFDAT)=IBCANCEL^AMOUNT
	;OUTPUT BY IBORAT4
	;
START	;
	S IBROUT="IBORAT1A",IBSPEC=""
	F  S IBSPEC=$O(^TMP($J,IBROUT,IBSPEC)) Q:IBSPEC=""  D IBSPEC2
END	;
	K IBCANCEL,IBEFFDAT,IBROUT,IBSPEC,X,X1,X2
	Q
IBSPEC2	;
	S IBEFFDAT=-1
	F  S IBEFFDAT=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT)) Q:IBEFFDAT=""  D IBCANCEL
	Q
IBCANCEL	;
	S IBCANCEL=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT))
	I IBCANCEL="" D CANDATE2 Q
	S X1=IBCANCEL,X2=-1 D C^%DTC
	S ^TMP($J,IBROUT,IBSPEC,IBEFFDAT)=X_"^"_^(IBEFFDAT)
	Q
CANDATE2	;
	S ^TMP($J,IBROUT,IBSPEC,IBEFFDAT)=9999999_"^"_^(IBEFFDAT)
	Q

IBORAT1C
IBORAT1C	;ALB/RJS - OUTPUT ROUTINE FOR IB ACTION CHARGES - 2/26/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
INIT	;
	S Y=DT X ^DD("DD") S IBTODAY=Y
	;
	;IBSTDATE & IBENDATE USED BY 2 ROUTINES SO DON'T WANT TO SET THEM HERE
	;IBSDATE,IBEDATE,IBTODAY,IBTITLE,IBPAGE,IBDONE,IBOUTPUT,IBSTDATE,IBENDATE
	;USED BY IBORAT2C SO DON'T WANT TO KILL THEM HERE
	;
	S Y=IBSTDATE D DD^%DT S IBSDATE=Y
	S Y=IBENDATE D DD^%DT S IBEDATE=Y
	S IBTITLE="***Billing Rates Listing***",IBDONE=0,IBPAGE=1
IBSPEC	;
	S IBROUT="IBORAT1A",IBSPEC="",IBOLDSPC=""
	F  S IBSPEC=$O(^TMP($J,IBROUT,IBSPEC)) Q:IBSPEC=""!(IBDONE)  D IBSPEC2
END	;
	K IBAAA,IBCANCEL,IBEFFDAT,IBOLDSPC,IBROUT,IBSPEC,IBX,Y
	Q
IBSPEC2	;
	S IBEFFDAT=-1
	F  S IBEFFDAT=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT)) Q:IBEFFDAT=""!(IBDONE)  D OUTPUT:$$SELECT(IBEFFDAT)
	Q
OUTPUT	;
	I IBOUTPUT=0 D IBTITLE S (IBOUTPUT,IBZ)=1
	I IBOLDSPC'=IBSPEC&($Y+8>IOSL) S IBOLDSPC=IBSPEC D HEADING G LINE
	I IBOLDSPC'=IBSPEC S IBOLDSPC=IBSPEC D SUBHEAD
LINE	;
	I IBDONE Q
	D:$Y+4>IOSL HEADING
	I IBDONE Q
	S Y=IBEFFDAT D DD^%DT
	W !,?2,Y,?22,"$",$P(^TMP($J,IBROUT,IBSPEC,IBEFFDAT),U,2)
	I $P(^(IBEFFDAT),U,3) W ?32,"$",$P(^(IBEFFDAT),U,3)
	Q
SUBHEAD	;
	W !!,IBSPEC,!,?2,"Effective Date",?22,"Amount",?32,"Additional Amount"
	Q
HEADING	;
	F IBAAA=$Y:1:(IOSL-3) W !
	I ($E(IOST,1,2)="C-")
	I  S DIR(0)="E" D ^DIR K DIR I Y=0!(Y="")!($D(DIRUT)) S IBDONE=1 Q
	D IBTITLE,SUBHEAD
	Q
IBTITLE	; initial form feeds to crts subsequent form feeds to all
	W:$E(IOST,1,2)["C-"!(IBPAGE>1) @IOF W IBTODAY,?25,IBTITLE,?68,"   PAGE ",IBPAGE
	D DATES
	S IBX="",$P(IBX,"=",IOM)="" W IBX
	S IBPAGE=IBPAGE+1
	Q
DATES	;
	I IBSDATE=IBEDATE W !,?25,"   Rates in effect on: ",IBSDATE,! Q
	W !,?25,"   Rates in effect from: ",IBSDATE
	W !,?25,"                     to: ",IBEDATE,!
	Q
SELECT(IBEFFDAT)	;
	S IBCANCEL=$P(^TMP($J,IBROUT,IBSPEC,IBEFFDAT),U,1)
	I (IBSTDATE'>IBEFFDAT)&(IBENDATE'<IBEFFDAT) Q 1
	I (IBSTDATE'<IBEFFDAT)&(IBSTDATE'>IBCANCEL) Q 1
	Q 0
	;

IBORAT2A
IBORAT2A	;ALB/RJS - FILTER FOR FILE 399.5- 1/22/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;THIS ROUTINE FILTERS FILE 399.5 TO BUILD A TEMPORARY
	;FILE NAMED TMP($J,"IBORAT2A") THIS FILE IS PASSED ON TO
	;ROUTINE IBORAT2B FOR FURTHER PROCESSING
START	;
	S IBCOUNT=0
	F IBRECNR=0:0 S IBRECNR=$O(^DGCR(399.5,IBRECNR)) Q:IBRECNR'>0  D NEXT
END	;
	K IBACTIVE,IBAMOUNT,IBBILL,IBEFFDAT,IBPAYORS,IBPTR,IBRECNR,IBREVCDE,IBXDATA,IBSTAND,IBCOUNT
	Q
NEXT	;
	S IBXDATA=$G(^DGCR(399.5,IBRECNR,0))
	I IBXDATA'="" D XTRACT,NEXT3
	Q
XTRACT	;
	S IBEFFDAT=$P(IBXDATA,U,1),IBPTR=$P(IBXDATA,U,2),IBREVCDE=$P(IBXDATA,U,3),IBAMOUNT=$P(IBXDATA,U,4),IBACTIVE=$P(IBXDATA,U,5),IBPAYORS=$P(IBXDATA,U,6),IBSTAND=$P(IBXDATA,U,7)
	Q
NEXT3	;
	Q:$G(IBPTR)=""
	S IBBILL=""
	S IBBILL=$P($G(^DGCR(399.1,IBPTR,0)),U,1)
	I IBBILL'="" D LOAD
	Q
LOAD	;
	Q:IBBILL=""!(IBREVCDE="")!(IBEFFDAT="")
	I (IBPAYORS'="") S ^TMP($J,"IBORAT2A",IBBILL,IBREVCDE,IBPAYORS,IBEFFDAT)=IBAMOUNT_"^"_IBPAYORS_"^"_IBACTIVE_"^"_IBSTAND
	E  S IBPAYORS=IBCOUNT+1,^TMP($J,"IBORAT2A",IBBILL,IBREVCDE,IBPAYORS,IBEFFDAT)=IBAMOUNT_"^"_IBPAYORS_"^"_IBACTIVE_"^"_IBSTAND,IBCOUNT=IBCOUNT+1
	Q

IBORAT2B
IBORAT2B	;ALB/RJS - DATE SETUP IBIBROUTINE  - 1/22/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;CALLED BY IBORAT
	;THIS ROUTINE PARSES A TMP FILE CONTAINING DATA FROM FILE
	;399.5 AND CALCULATES BEGINNING AND ENDING DATES
	;FOR BILLING RATES AND MEDICARE DEDUCTIBLES.
	;EG. IF RATE IS EFFECTIVE ON 1/1/87 AND IS SUPERSEDED BY A NEW RATE
	;ON 1/1/88 IT IS IN EFFECT FROM 1/1/87-12/31/87
	;THIS DATA IS STORED IN 
	;^TMP($J,IBROUT,IBSPEC,IBREVCDE,IBEFFDAT)=IBCANCEL^AMOUNT^ACTIVE
	;OUTPUT BY IBORAT2C
	;
START	;
	S IBROUT="IBORAT2A",IBSPEC=""
	F  S IBSPEC=$O(^TMP($J,IBROUT,IBSPEC)) Q:IBSPEC=""  D IBREVCDE
END	;
	K IBCANCEL,IBEFFDAT,IBREVCDE,IBROUT,IBSPEC,X,X1,X2
	Q
IBREVCDE	;
	S IBREVCDE=""
	F  S IBREVCDE=$O(^TMP($J,IBROUT,IBSPEC,IBREVCDE)) Q:IBREVCDE=""  D IBPAYORS
	Q
IBPAYORS	;
	S IBPAYORS=""
	F  S IBPAYORS=$O(^TMP($J,IBROUT,IBSPEC,IBREVCDE,IBPAYORS)) Q:IBPAYORS=""  D IBEFFDAT
	Q
IBEFFDAT	;
	S IBEFFDAT=-1
	F  S IBEFFDAT=$O(^TMP($J,IBROUT,IBSPEC,IBREVCDE,IBPAYORS,IBEFFDAT)) Q:IBEFFDAT=""  D IBCANCEL
	Q
IBCANCEL	;
	S IBCANCEL=$O(^TMP($J,IBROUT,IBSPEC,IBREVCDE,IBPAYORS,IBEFFDAT))
	I IBCANCEL="" D CANDATE2 Q
	S X1=IBCANCEL,X2=-1 D C^%DTC
	S ^TMP($J,"IBORAT2B",IBSPEC,IBEFFDAT,IBREVCDE,IBPAYORS)=X_"^"_^(IBEFFDAT)
	Q
CANDATE2	;
	S ^TMP($J,"IBORAT2B",IBSPEC,IBEFFDAT,IBREVCDE,IBPAYORS)=9999999_"^"_^(IBEFFDAT)
	Q

IBORAT2C
IBORAT2C	;ALB/RJS - OUTPUT ROUTINE FOR BILLING RATES REPORT - 1/22/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
START	;
	S IBROUT="IBORAT2B",IBOUTPUT=0
	S IBSPEC="",IBOLDSPC=""
	F  S IBSPEC=$O(^TMP($J,IBROUT,IBSPEC)) Q:IBSPEC=""!(IBDONE)  D IBEFFDAT
END	;
	K IBCANCEL,IBEFFDAT,IBDATA,IBOLDSPC,IBREVCD,IBREVCDE,IBREVFLG,IBROUT,IBSPEC,X,Y,IBAAA,C
	Q
IBEFFDAT	;
	S IBEFFDAT=-1
	F  S IBEFFDAT=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT)) Q:IBEFFDAT=""!(IBDONE)  D IBREVCDE
	Q
IBREVCDE	;
	S IBREVCDE="",IBREVFLG=0
	F  S IBREVCDE=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT,IBREVCDE)) Q:IBREVCDE=""!(IBDONE)  D IBPAYORS
	Q
IBPAYORS	;
	S IBPAYORS=""
	F  S IBPAYORS=$O(^TMP($J,IBROUT,IBSPEC,IBEFFDAT,IBREVCDE,IBPAYORS)) Q:IBPAYORS=""!(IBDONE)  D OUTPUT:$$SELECT(IBPAYORS)
	Q
OUTPUT	;
	I IBREVFLG=0 W ! S IBREVFLG=1
	I IBOUTPUT=0 D IBTITLE S (IBOUTPUT,IBZ)=1
	I IBOLDSPC'=IBSPEC&($Y+8>IOSL) S IBOLDSPC=IBSPEC D HEADING G LINE
	I IBOLDSPC'=IBSPEC S IBOLDSPC=IBSPEC D SUBHEAD
LINE	;
	I IBDONE Q
	D:$Y+4>IOSL HEADING
	I IBDONE Q
	S IBDATA=^TMP($J,"IBORAT2B",IBSPEC,IBEFFDAT,IBREVCDE,IBPAYORS)
	S Y=IBEFFDAT D DD^%DT
	S IBREVCD=$G(^DGCR(399.2,IBREVCDE,0)),IBREVCD=$P(IBREVCD,U,1)
	;AMOUNT=PIECE 2, ACTIVE=PIECE 4, PAYORS CODE=PIECE 3,NON STANDARD=$P 5
	W !,?2,Y,?19,"$",$P(IBDATA,U,2),?27,IBREVCD
	S Y=$P(IBDATA,U,4),C=$P(^DD(399.5,.05,0),U,2) D Y^DIQ W ?37,$S(Y="YES, ACTIVE":"YES",1:"NO")
	S Y=IBPAYORS,C=$P(^DD(399.5,.06,0),U,2) D Y^DIQ W ?45,$E(Y,1,20)
	S Y=$P(IBDATA,U,5),C=$P(^DD(399.5,.07,0),U,2) D Y^DIQ W ?70,$S(Y="YES":"YES",1:"NO")
	Q
SUBHEAD	;
	W !!,IBSPEC,!,?2,"Effective Date",?19,"Amount",?27,"Rev Code",?37,"Active",?45,"Payors to use",?66,"Non-Standard"
	Q
HEADING	;
	F IBAAA=$Y:1:(IOSL-3) W !
	I ($E(IOST,1,2)="C-")
	I  S DIR(0)="E" D ^DIR K DIR I Y=0!(Y="")!($D(DIRUT)) S IBDONE=1 Q
	D IBTITLE,SUBHEAD
	Q
IBTITLE	;
	W @IOF,!,IBTODAY,?25,IBTITLE,?68,"   PAGE ",IBPAGE
	D DATES
	S X="",$P(X,"=",IOM)="" W X
	S IBPAGE=IBPAGE+1
	Q
DATES	;
	I IBSDATE=IBEDATE W !,?25,"   Rates in effect on: ",IBSDATE,! Q
	W !,?25,"   Rates in effect from: ",IBSDATE
	W !,?25,"                     to: ",IBEDATE,!
	Q
SELECT(IBPAYORS)	;
	S IBCANCEL=$P(^TMP($J,IBROUT,IBSPEC,IBEFFDAT,IBREVCDE,IBPAYORS),U,1)
	I (IBSTDATE'>IBEFFDAT)&(IBENDATE'<IBEFFDAT) Q 1
	I (IBSTDATE'<IBEFFDAT)&(IBSTDATE'>IBCANCEL) Q 1
	Q 0

IBORT
IBORT	;ALB/MRL,SGD - MAS BILLING TOTALS REPORT  ;25 MAY 88 09:10
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRORT
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBORT-1" D T0^%ZOSV ;start rt clock
	N IBDTP,IBIDX
	S:'$D(U) U="^" S:'$D(DTIME) DTIME=600 I '$D(DT) S X="T",DT="" D ^%DT S DT=Y K X,Y,^UTILITY($J)
SELECT	; chose the date type to select by
	S DIR(0)="S^1:EVENT DATE;2:BILL DATE"
	S DIR("A")="SELECT BILLS BY",DIR("B")=1,DIR("?")="^D HELP^IBORT"
	D ^DIR K DIR Q:$D(DIRUT)
	S IBDTP=$S(Y=1:"EVENT",Y=2:"BILL",1:"") Q:IBDTP=""
DATE	S %DT="AEPX",%DT("A")="Start with "_IBDTP_" DATE: " D ^%DT G Q:Y<0 S IBBEG=Y I IBBEG>DT W *7," ??",!,"Date must be in the past." G DATE
DATE1	S %DT="EPX" R !,"Go to DATE: ",X:DTIME S:X=" " X=IBBEG G Q:(X="")!(X["^") D ^%DT G DATE1:Y<0 S IBEND=Y I IBEND<IBBEG W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
	I IBEND>DT W *7," ??",!,"Date must be in the past." G DATE1
	;
	W !!,*7,"*** Margin width of this output is 132 ***"
	;S DGPGM="BEGIN^IBORT",DGVAR="IBBEG^IBEND^DUZ^IBDTP" D ZIS^DGUTQ G Q:POP U IO
	S %ZIS="QM" D ^%ZIS G:POP Q
	;
	I $D(IO("Q")) K IO("Q") D  G Q
	.S ZTRTN="BEGIN^IBORT",ZTSAVE("IB*")="",ZTDESC="IB - BILLING TOTALS REPORT"
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	;
	U IO
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBORT" D T1^%ZOSV ;stop rt clock
BEGIN	;
	;***
	;S XRTL=$ZU(0),XRTN="IBORT-2" D T0^%ZOSV ;start rt clock
	S (IBL,IBL1)="",$P(IBL,"_",131)="",$P(IBL1,"=",131)="",Y=IBBEG X ^DD("DD") S IBHD="for "_$S(IBBEG'=IBEND:"period covering ",1:"")_Y I IBBEG<IBEND S Y=IBEND X ^DD("DD") S IBHD=IBHD_" through "_Y
	S X1=IBBEG,X2=-1 D C^%DTC S IBD=X_.9999,IBD1=IBEND_.2359,IBNEX=0
	F I=0:0 S IBNEX=$O(^DGCR(399.3,IBNEX)) Q:'IBNEX  S IBX=$P(^(IBNEX,0),"^",1),^UTILITY($J,"IB","T",IBX)="",^UTILITY($J,"IB","T1",IBX)=""
	S ^UTILITY($J,"IB","TT")="",^("TS")="",^UTILITY($J,"IB","T","UNKNOWN")="",^UTILITY($J,"IB","T1","UNKNOWN")=""
	S IBIDX=$S(IBDTP="BILL":"AP",1:"D")
	F I=0:0 S IBD=$O(^DGCR(399,IBIDX,IBD)) Q:'IBD!(IBD>IBD1)  S DFN="" F J=0:0 S DFN=$O(^DGCR(399,IBIDX,IBD,DFN)) Q:'DFN  I $D(^DGCR(399,+DFN,0)) S IB=^(0) I $P(IB,"^",1)'="",$P(IB,"^",3) D SET^IBORT1
	S IBB=1,X=132 X ^%ZOSF("RM") D HEAD S IBNEX=0 F I=0:0 S IBNEX=$O(^UTILITY($J,"IB","T",IBNEX)) Q:IBNEX=""  S IBP=^(IBNEX) W !,IBNEX F I1=1:2:7 D WRITE
	W !,IBL,!,"TOTALS" S IBP=^UTILITY($J,"IB","TT") F I1=1:2:7 D WRITE
	S IBB=0 D HEAD S IBNEX=0 F I=0:0 S IBNEX=$O(^UTILITY($J,"IB","T1",IBNEX)) Q:IBNEX=""  S IBP=^(IBNEX) W !,IBNEX F I1=1:2:7 D WRITE
	W !,IBL,!,"PENDING TOTALS" S IBP=^UTILITY($J,"IB","TS") F I1=1:2:7 D WRITE
Q	K X,X1,X2,Y,I,I1,J,DFN,IB,IBTOT,IBN1,IBN2,%DT,%,IBD,IBD1,IBHD,IBNEX,IBP,IBTAB,IBX,POP,IBBEG,IBEND,IBL,IBL1,IBB,IBS,^UTILITY($J),IBDTP,IBIDX
	I '$D(ZTQUEUED) D ^%ZISC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBORT" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
WRITE	S IBTAB=$S(I1=1:34,I1=3:59,I1=5:84,1:109),IBN1=+$P(IBP,"^",I1),IBN2=+$P(IBP,"^",I1+1) W ?IBTAB,$J(IBN1,5) S X=IBN2,X2="2$" D COMMA^%DTC S X=X_"|" W ?(IBTAB+7),$J(X,15)
	Q
HEAD	W !,@IOF,! D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") W ?94,"Date/Time Printed: ",Y,!!,$S(IBB:"Billing Summary Report ",1:"Summary of Pending Bill Authorizations "),IBHD," (by "_$S(IBDTP="EVENT":"Event Date)",1:"Date Billed)")
	W !,IBL,!
	I IBB W ?39,"INITIATED",?55,"|",?65,"PENDING",?80,"|",?89,"PRINTED",?105,"|",?114,"CANCELLED",?130,"|"
	E  W ?38,"TOTAL PENDING",?55,"|",?64,"NO ACTION",?80,"|",?89,"REVIEWED",?105,"|",?114,"AUTHORIZED",?130,"|"
	W !,"BILL TYPE" F IBTAB=33,58,83,108 W ?IBTAB,"Number         Dollars|"
	W !,IBL1 Q
HELP	; help for date type selection
	W !!,"EVENT DATE is the date beginning the bill's episode of care"
	W !!,"BILL DATE is the date the bill was initially printed"
	Q

IBORT1
IBORT1	;ALB/MRL,SGD - MAS BILLING TOTALS REPORT (CONT.)  ;03 JUN 88 09:15
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCRORT1
	;
	Q
SET	S IBTOT=$S('$D(^DGCR(399,DFN,"U1")):0,$P(^DGCR(399,DFN,"U1"),"^",2)]"":$P(^DGCR(399,DFN,"U1"),"^",1)-$P(^DGCR(399,DFN,"U1"),"^",2),1:$P(^DGCR(399,DFN,"U1"),"^",1))
	S IBS=$S($D(^DGCR(399,DFN,"S")):^("S"),1:""),X=$S($D(^DGCR(399.3,+$P(IB,"^",7),0)):$P(^(0),"^",1),1:"UNKNOWN"),IBT=^UTILITY($J,"IB","T",X),IBT1=^UTILITY($J,"IB","T1",X)
	S IBX1=$S($P(IBS,"^",17):11,$P(IBS,"^",14):9,$P(IBS,"^",10):7,$P(IBS,"^",7):5,$P(IBS,"^",4):5,1:3)
	S $P(IBT,"^",1)=$P(IBT,"^",1)+1,$P(IBT,"^",2)=$P(IBT,"^",2)+IBTOT S IBX2=$S(IBX1=9:5,IBX1=11:7,1:3),IBX3=$S(IBX2'=3:0,1:IBX1)
	I IBX3 S $P(IBT1,"^",1)=$P(IBT1,"^",1)+1,$P(IBT1,"^",2)=$P(IBT1,"^",2)+IBTOT,$P(IBT1,"^",IBX3)=$P(IBT1,"^",IBX3)+1,$P(IBT1,"^",IBX3+1)=$P(IBT1,"^",IBX3+1)+IBTOT
	S $P(IBT,"^",IBX2)=$P(IBT,"^",IBX2)+1,$P(IBT,"^",IBX2+1)=$P(IBT,"^",IBX2+1)+IBTOT S ^UTILITY($J,"IB","T",X)=IBT,^UTILITY($J,"IB","T1",X)=IBT1
	S IBT=^UTILITY($J,"IB","TT"),IBT1=^UTILITY($J,"IB","TS") S $P(IBT,"^",1)=$P(IBT,"^",1)+1,$P(IBT,"^",2)=$P(IBT,"^",2)+IBTOT
	S $P(IBT,"^",IBX2)=$P(IBT,"^",IBX2)+1,$P(IBT,"^",IBX2+1)=$P(IBT,"^",IBX2+1)+IBTOT
	I IBX3 S $P(IBT1,"^",1)=$P(IBT1,"^",1)+1,$P(IBT1,"^",2)=$P(IBT1,"^",2)+IBTOT,$P(IBT1,"^",IBX3)=$P(IBT1,"^",IBX3)+1,$P(IBT1,"^",IBX3+1)=$P(IBT1,"^",IBX3+1)+IBTOT
	S ^UTILITY($J,"IB","TT")=IBT,^("TS")=IBT1 Q
	Q

IBOST
IBOST	;ALB/AAS - INTEGRATED BILLING STATISTICAL REPORT ; 8-MAR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
EN	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOST-1" D T0^%ZOSV ;start rt clock
	D HOME^%ZIS W @IOF,*13,?20,"Integrated Billing Statistical Report"
	W !! D DATE^IBOUTL I IBEDT="" G END
DEV	S %ZIS="QM",%ZIS("A")="Output Device: " D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBOST",ZTDESC="IB Statistical Report",ZTSAVE("IB*")="" D ^%ZTLOAD K IO("Q"),ZTSK G END
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOST" D T1^%ZOSV ;stop rt clock
	W !!
	;
DQ	;  -entry from tasked job
	;***
	;S XRTL=$ZU(0),XRTN="IBOST-2" D T0^%ZOSV ;start rt clock
	K ^TMP($J)
	S IBN="" F IBDT=IBBDT:0 S IBDT=$O(^IB("D",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  F IBN=0:0 S IBN=$O(^IB("D",IBDT,IBN)) Q:'IBN  I $D(^IB(IBN,0)) D GROSS,NET:$P(^IB(IBN,0),"^",9)=IBN
	;
	D PRINT W !
	G END
	;
GROSS	;  -gross count of action types, total charges
	;  -^tmp($j,"ib",ibaction type,"gcnt")=count
	;   ^tmp($j,"ib",ibaction type,"gtot")=sum of charges
	;
	S IBND=^IB(IBN,0)
	S IBATYP=$S($D(^IBE(350.1,+$P(IBND,"^",3),0)):$P(^(0),"^"),1:"UNKNOWN"),IBSEQNO=$S($D(^IBE(350.1,+$P(IBND,"^",3),0)):$P(^(0),"^",5),1:0)
	S:'$D(^TMP($J,"IB",IBSEQNO,IBATYP,"GCNT")) ^("GCNT")=0 S ^("GCNT")=^("GCNT")+1
	S:'$D(^TMP($J,"IB",IBSEQNO,IBATYP,"GTOT")) ^("GTOT")=0 S ^("GTOT")=^("GTOT")+$P(IBND,"^",7)
	Q
	;
NET	; -net count of new actions that aren't cancelled
	;  -^tmp($j,"ib",ibaction type,"ncnt")=net count
	;   ^tmp($j,"ib",ibaction type,"ntot")=net total
	S IBLAST="",IBLDT=$O(^IB("APDT",IBN,"")) I +IBLDT F IBL=0:0 S IBL=$O(^IB("APDT",IBN,IBLDT,IBL)) Q:'IBL  S IBLAST=IBL
	Q:'IBLAST
	Q:'$D(^IB(IBLAST,0))
	S IBCHRG=$P(^IB(IBLAST,0),"^",7),IBSEQNOL=$S($D(^IBE(350.1,$P(^IB(IBLAST,0),"^",3),0)):$P(^(0),"^",5),1:"")
	S:IBSEQNOL=2 IBCHRG=0
	S:'$D(^TMP($J,"IB",IBSEQNO,IBATYP,"NTOT")) ^("NTOT")=0 S ^("NTOT")=^("NTOT")+(IBCHRG)
	S:'$D(^TMP($J,"IB",IBSEQNO,IBATYP,"NCNT")) ^("NCNT")=0 S ^("NCNT")=^("NCNT")+$S(IBSEQNOL=2:0,1:1)
	Q
	;
PRINT	;  -output data
	S IBQUIT=0,IBPAG=0,Y=DT D D^DIQ S IBHDT=Y D HDR
	W !!?((IOM-25)/2),"NET TOTALS BY ACTION TYPE"
	F IBSEQNO=0:0 S IBSEQNO=$O(^TMP($J,"IB",IBSEQNO)) Q:'IBSEQNO!(IBQUIT)  S IBATYP="" F IBT=0:0 S IBATYP=$O(^TMP($J,"IB",IBSEQNO,IBATYP)) Q:IBATYP=""!(IBQUIT)  D NETLIN
	;
	W !!?((IOM-27)/2),"GROSS TOTALS BY ACTION TYPE"
	F IBSEQNO=0:0 S IBSEQNO=$O(^TMP($J,"IB",IBSEQNO)) Q:'IBSEQNO!(IBQUIT)  S IBATYP="" F IBT=0:0 S IBATYP=$O(^TMP($J,"IB",IBSEQNO,IBATYP)) Q:IBATYP=""!(IBQUIT)  D LINE
	Q
	;
LINE	;
	I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	W !!?((IOM/2)-$L($P(IBATYP," ",2,99))),$P(IBATYP," ",2,99)
	W !?((IOM/2)-12),"NUMBER ENTRIES: ",$S($D(^TMP($J,"IB",IBSEQNO,IBATYP,"GCNT")):^("GCNT"),1:0)
	W !?((IOM/2)-12),"DOLLAR AMOUNT: $",$S($D(^TMP($J,"IB",IBSEQNO,IBATYP,"GTOT")):^("GTOT"),1:0)
	Q
	;
NETLIN	;
	I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR
	Q:'$D(^TMP($J,"IB",IBSEQNO,IBATYP,"NCNT"))
	W !!?((IOM/2)-$L($P(IBATYP," ",2,99))),$P(IBATYP," ",2,99)
	W !?((IOM/2)-12),"NUMBER ENTRIES: ",$S($D(^TMP($J,"IB",IBSEQNO,IBATYP,"NCNT")):^("NCNT"),1:0)
	W !?((IOM/2)-12),"DOLLAR AMOUNT: $",$S($D(^TMP($J,"IB",IBSEQNO,IBATYP,"NTOT")):^("NTOT"),1:0)
	Q
HDR	;
	W:$E(IOST,1,2)["C-"!(IBPAG>0) @IOF,*13
	W ?((IOM-37)/2),"INTEGRATED BILLING STATISTICAL REPORT"
	W !?((IOM-3)/2),"for"
	D SITE^IBAUTL S IBSNM=$S($D(^DIC(4,IBFAC,0)):$P(^(0),"^"),1:"")
	W !?((IOM-($L(IBSNM)+6))/2),IBSNM_" ("_IBSITE_")"
	W !!?(IOM-18/2),"From: " S Y=IBBDT D DT^DIQ
	W !?((IOM-16)/2),"To: " S Y=IBEDT D DT^DIQ
	W !!?(IOM-26/2),"Date Printed: ",IBHDT
	S IBPAG=IBPAG+1 W !?(IOM-8/2),"Page: ",IBPAG
	W !?(IOM-26/2),"--------------------------"
	Q
	;
END	K ^TMP($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOST" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K DUOUT,IBT,IBBDT,IBEDT,IBATYP,IBSEQNO,IBHDT,IBPAG,IBSNM,IBFAC,IBSITE,IBSEQNOL,IBLAST,IBL,IBCHRG,IBDT,IBJ,IBLDT,IBN,IBND,IBQUIT,X,Y
	D ^%ZISC
	Q

IBOSTUS
IBOSTUS	;ALB/SGD - MCCR BILL STATUS REPORT ;25 MAY 88 14:19
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROST
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOSTUS-1" D T0^%ZOSV ;start rt clock
	N IBDTP ; date type chosen for sorting
	I '$D(DT) D DT^DICRW
YN	W !!,"DO YOU WANT TO PRINT THE STATUS OF ALL BILLS" S %=1 D YN^DICN G Q:%=-1 S:%=1 IBBST="ALL" G SORT:%=1 I %=0 W !,"CHOOSE Y (YES) OR N (NO)" G YN
CHOOSE	S Z="^ENTERED/NOT REVIEWED^REVIEWED^AUTHORIZED^PRINTED^CANCELLED" R !!,"CHOOSE A BILL STATUS: ",X:DTIME G HELP:X["?" G Q:(X["^")!(X="") D IN^DGHELP S IBBST=$E(X,1) I %=-1 W *7," ??" G HELP
	S IBHD2=$S(IBBST="A":"AUTHORIZED",IBBST="E":"ENTERED/NOT REVIEWED",IBBST="R":"REVIEWED",IBBST="P":"PRINTED",IBBST="C":"CANCELLED",1:"")
SORT	; chose the date type to sort on
	S DIR(0)="S^1:EVENT DATE;2:BILL DATE;3:ENTERED DATE"
	S DIR("A")="SORT BY",DIR("B")=1,DIR("?")="^D HELP2^IBOSTUS"
	D ^DIR K DIR Q:$D(DIRUT)
	S IBDTP=$S(Y=1:"Event",Y=2:"Bill",Y=3:"Entered",1:"") Q:IBDTP=""
DATE	W ! S %DT="AEPX",%DT("A")="Start with "_IBDTP_" DATE: ",%DT(0)=-DT D ^%DT G Q:Y<0 S IBBEG=Y
DATE1	S %DT="EPX" W !,"Go to "_IBDTP_" DATE: TODAY// " R X:DTIME S:X=" " X=IBBEG G Q:(X["^") S:X="" X="TODAY" D ^%DT G DATE1:Y<0 S IBEND=Y I IBEND<IBBEG W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G DATE1
	I IBEND>DT W *7," ??" G DATE1
	;
	W !!,*7,"*** Margin width of this output is 132 ***"
	;S DGPGM="QUEUED^IBOSTUS",DGVAR="IBDTP^IBBST^IBHD2^IBBEG^IBEND^DUZ" D ZIS^DGUTQ G Q:POP
	;
	S %ZIS="QM" D ^%ZIS G:POP Q
	I $D(IO("Q")) K IO("Q") D  G Q
	.S ZTRTN="QUEUED^IBOSTUS",ZTDESC="IB - Bill Status Report",ZTSAVE("IB*")=""
	.D ^%ZTLOAD K ZTSK D HOME^%ZIS
	;
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOSTUS" D T1^%ZOSV ;stop rt clock
QUEUED	; entry point if queued
	;***
	;S XRTL=$ZU(0),XRTN="IBOSTUS-2" D T0^%ZOSV ;start rt clock
	;
	; K ^TMP($J)
	; D:IBDTP="Entered" INDX ; DATE ENTERED is not cross-referenced
	G BEGIN^IBOSTUS1
	;
Q	K %,I,J,X,X1,X2,Y,Z,IBIFN,%DT,IBAPP,POP,IBPAGE,DGPGM,DGVAR,IBNEX,IBF,IBBEG,IBEND,IBHD,IBHD2,IBL,IBL1,IBBST,IBBS,IBBSBY,IBBSDT,IB0,IBS
	I '$D(ZTQUEUED) D ^%ZISC
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOSTUS" D T1^%ZOSV ;stop rt clock
	Q
	;
HELP	W !!,"CHOOSE FROM: ","ENTERED/NOT REVIEWED",!?13,"REVIEWED",!?13,"AUTHORIZED",!?13,"PRINTED",!?13,"CANCELLED" G CHOOSE
	Q
HELP2	; help for SORT BY:
	W !!,"   EVENT DATE is the date beginning the bill's episode of care"
	W !!,"   BILL DATE is the date the bill was initially printed"
	W !!,"   ENTERED DATE is the date the bill was first entered"
	Q
INDX	; creates a temporary index of bills sorted by bill date=initial printed
	N D S IBNEX=0 F  S IBNEX=$O(^DGCR(399,IBNEX)) Q:'IBNEX  S D=$P($G(^DGCR(399,IBNEX,"S")),"^",1) D:D&(D'<(IBBEG\1))&(D'>(IBEND\1_.2359))
	.S ^TMP($J,"ENTERED",D,IBNEX)=""
	Q
STATS	; prints statistics
	S IBHDR3="REPORT STATISTICS" D HEAD^IBOSTUS1
	S IBST1="RATE TYPE  : "
	S IBST2="BILL STATUS: "
	F I="IBST1","IBST2" N IBTOT D  W:'IBCRT !!!!
	.S IBCAT="" F  W ! S IBCAT=$O(@I@(IBCAT)) Q:IBCAT=""  D
	..I IBCRT,($Y>(IOSL-2)) D HEAD^IBOSTUS1
	.. S X=@I@(IBCAT,"$"),X2="2$" D COMMA^%DTC
	..W !,IBCAT,?18,".................... ",?42,$J(X,15),?60,$J(@I@(IBCAT,"C"),6),?67," BILLS"
	..S IBTOT("C")=$G(IBTOT("C"))+@I@(IBCAT,"C")
	..S IBTOT("$")=$G(IBTOT("$"))+@I@(IBCAT,"$")
	.W !,?40,"-----------------",?60,"-------------"
	.S X=$G(IBTOT("$")),X2="2$" D COMMA^%DTC
	.W !?42,$J(X,15),?60,$J($G(IBTOT("C")),6),?67," BILLS"
	Q

IBOSTUS1
IBOSTUS1	;ALB/SGD - MCCR BILL STATUS REPORT ;25 MAY 88 14:19
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROST1
	;
BEGIN	N IBSUB,IBHDR,IBST1,IBST2,IBCAT,IBAMT,IBHDR3,IBBEF,IBCRT,IBQUIT,IBMTCT S IBBEF="",IBQUIT=0
	S IBCRT=$S($E($G(IOST),1,2)="C-":1,1:0)
	S:IBDTP="Entered" IBSUB="APD",IBHDR=1
	S:IBDTP="Bill" IBSUB="AP",IBHDR=1
	S:IBDTP="Event" IBSUB="D",IBHDR=0
	S Y=IBBEG X ^DD("DD") S IBHD="Medical Care Cost Recovery Bill Status Report for "_$S(IBBEG'=IBEND:"period covering ",1:"")_Y I IBBEG<IBEND S Y=IBEND X ^DD("DD") S IBHD=IBHD_" through "_Y
	S IBPAGE=0,(IBL,IBL1)="",$P(IBL,"=",131)="",$P(IBL1,"-",131)="",X1=IBBEG\1,X2=-1 D C^%DTC S IBNEX=X_.2359,X=132 X ^%ZOSF("RM")
	D HEAD F  S IBNEX=$O(^DGCR(399,IBSUB,IBNEX)) Q:'IBNEX!(IBNEX>(IBEND\1_.2359))!(IBQUIT)  D:$Y>$S($D(IOSL):(IOSL-$S(IBCRT:4,1:9)),1:20) NOTE,HEAD Q:IBQUIT  D
	.D:IBHDR SUBHDR S IBIFN="" F J=0:0 S IBIFN=$O(^DGCR(399,IBSUB,IBNEX,IBIFN)) Q:'IBIFN!IBQUIT  D SET S IBBEF=IBNEX
	I 'IBQUIT D
	.D:$D(IBF) NOTE
	.I '$D(IBF) W !!,?30,"No matches found"
	.E  D STATS^IBOSTUS
Q	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K %,I,J,X,X1,X2,Y,Z,IBIFN,%DT,IBAPP,POP,IBPAGE,DGPGM,DGVAR,IBNEX,IBF,IBBEG,IBEND,IBHD,IBHD2,IBL,IBL1,IBBST,IBBS,IBBSBY,IBBSDT,IB0,IBS,IBU1,DFN,VAERR,IBDTP,IBBY
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOSTUS1" D T1^%ZOSV ;stop rt clock
	Q
SET	S IBS=^DGCR(399,IBIFN,"S"),IBAPP=1
	I $P(IBS,"^",17)'="" S IBBS="  CANCELLED",IBBSDT=$P(IBS,"^",17),IBBSBY=$P(IBS,"^",18) D:IBBST="C" PRINT G ALL
	I $P(IBS,"^",14)'="" S IBBS="  PRINTED",IBBSDT=$P(IBS,"^",14),IBBSBY=$P(IBS,"^",15) D:IBBST="P" PRINT G ALL
	I $P(IBS,"^",10)'="" S IBBS="* AUTHORIZED",IBAPP=$P(IBS,"^",9),IBBSDT=$P(IBS,"^",10),IBBSBY=$P(IBS,"^",11) D:IBBST="A" PRINT G ALL
	I $P(IBS,"^",7)'="" S IBBS="* REVIEWED",IBAPP=$P(IBS,"^",6),IBBSDT=$P(IBS,"^",7),IBBSBY=$P(IBS,"^",8) D:IBBST="R" PRINT G ALL
	I $P(IBS,"^",4)'="" S IBBS="* REVIEWED",IBAPP=$P(IBS,"^",3),IBBSDT=$P(IBS,"^",4),IBBSBY=$P(IBS,"^",5) D:IBBST="R" PRINT G ALL
	S IBBS="* ENTERED",IBBSDT=$P(IBS,"^",1),IBBSBY=$P(IBS,"^",2) D:IBBST="E" PRINT
ALL	Q:IBQUIT
	D:IBBST="ALL" PRINT
	Q
PRINT	I $Y>$S($D(IOSL):(IOSL-$S(IBCRT:4,1:6)),1:6) D NOTE D HEAD Q:IBQUIT  D SUBHDR:(IBBEF=IBNEX)&IBHDR
	S IBF=1,IB0=^DGCR(399,IBIFN,0),DFN=$P(IB0,"^",2) D PID^VADPT6 W !,$P(IB0,"^",1),?10,$E($P(^DPT($P(IB0,"^",2),0),"^",1),1,20),?31,VA("BID"),?39,$E($P(IB0,"^",3),4,5),"/",$E($P(IB0,"^",3),6,7),"/",$E($P(IB0,"^",3),2,3)
	S IBBY=$P(IBS,"^",2) I IBBY W ?50,$E($S($D(^VA(200,IBBY,0)):$P(^(0),"^",2),1:"UNKN"),1,4)
	S IBCAT=$S($D(^DGCR(399.3,+$P(IB0,"^",7),0)):$P(^(0),"^",4),1:"UNSPECIFIED")_$S($P(IB0,"^",5)>2:"-OPT",1:"-INPT") W ?57,IBCAT
	; MT category as of event date
	S IBMTCT=$P($$LST^DGMTU(DFN,$P(IB0,"^",3)),"^",4) S:IBMTCT="" IBMTCT="N/A" W ?72,IBMTCT
	;
	S IBU1=$S($D(^DGCR(399,IBIFN,"U1")):^DGCR(399,IBIFN,"U1"),1:""),(IBAMT,X)=$S(IBU1="":0,$P(IBU1,"^",2)]"":$P(IBU1,"^",1)-$P(IBU1,"^",2),1:$P(IBU1,"^",1)),X2="2$" D COMMA^%DTC W ?77,$J(X,10)
	W ?90,IBBS,$S('IBAPP:"/DISAPP",1:"")," ",$E(IBBSDT,4,5),"/",$E(IBBSDT,6,7),"/",$E(IBBSDT,2,3)," (",$S($D(^VA(200,+IBBSBY,0)):$P(^(0),"^",2),1:"UNKN USER"),"/",IBBSBY,")" K VA("BID"),VA("PID")
	D ADD
	Q
HEAD	I $G(IBPAGE)>0,IBCRT S DIR(0)="E" D ^DIR K DIR I $D(DTOUT)!($D(DUOUT)) S IBQUIT=1 Q
	S IBPAGE=IBPAGE+1 W:$E(IOST,1,2)["C-"!(IBPAGE>1) !,@IOF,!
	I 'IBCRT D NOW^%DTC S Y=$E(%,1,12) X ^DD("DD") W ?94,"Date/Time Printed: ",Y,!!,IBHD,?121,"PAGE ",IBPAGE,!,IBL1,!!
	W:$D(IBHD2) ?40,"BILL STATUS: ",IBHD2,!
	W:'$D(IBHDR3) ?39,"EVENT",?49,"ENTRD",?73,"MT",!,"BILL NO.",?10,"PATIENT NAME",?31,"PT.ID",?39,"DATE",?50,"BY",?57,"RATE TYPE",?70,"CATEGORY",?81,"CHARGES",?94,"BILL STATUS",!,IBL
	W:$D(IBHDR3) ?54,IBHDR3,!,IBL
	Q
NOTE	;
	I IBBST'="C"!(IBBST'="P")  W !!,"* Denotes that the bill status is not Printed or Cancelled"
	Q
SUBHDR	;
	W !!,"   "_IBDTP_" Date: "_$$DAT1^IBOUTL(IBNEX),!
	Q
ADD	; for statistics
	S IBST1(IBCAT,"C")=1+$G(IBST1(IBCAT,"C"))
	S IBST1(IBCAT,"$")=IBAMT+$G(IBST1(IBCAT,"$"))
	S:IBBS["* " IBBS=$P(IBBS,"* ",2)
	S:IBBS["  " IBBS=$P(IBBS,"  ",2)
	S:IBBS="" IBBS="UNKNOWN"
	S IBST2(IBBS,"C")=1+$G(IBST2(IBBS,"C"))
	S IBST2(IBBS,"$")=IBAMT+$G(IBST2(IBBS,"$"))
	Q

IBOTR
IBOTR	;ALB/CPM - INSURANCE PAYMENT TREND REPORT - USER INTERFACE; 5-JUN-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROTR
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOTR-1" D T0^%ZOSV ;start rt clock
	D DT^DICRW,HOME^%ZIS
	S DIC="^DGCR(399.3,",DIC(0)="AEQMN",DIC("S")="I $P(^(0),U,7)=""i"""
	D ^DIC K DIC G END:Y<1 S IBRT=+Y,IBRTN=$P(Y,"^",2)
	;
	; Issue Selection field decision prompt
	W !!,"You may select a field from the BILL/CLAIMS file which you may use"
	W !,"to limit the selection of records to appear on the report.",!
	S DIR(0)="Y",DIR("A")="Do you wish to choose such a field",DIR("B")="NO",DIR("?")="^S IBOFF=1 W ! D HELP^IBOTR"
	D ^DIR K DIR G END:$D(DIRUT),CONT:'Y
	;
	; Issue Selection field prompts
	S DIC="^DD(399,",DIC(0)="AEQM",DIC("A")="Select BILL/CLAIMS FIELD: ",DIC("S")="S IBX=$P(^(0),U,2) I $S('$D(^DD(+IBX,.01,0)):1,$P(^(0),U,2)[""M"":0,1:1)"
	D ^DIC K DIC,IBX G:Y<0 END S IBAF=+Y,IBAFN=$P(Y,"^",2),IBAFD=$P($G(^DD(399,IBAF,0)),"^",2)["D"
	;
FD1	W !,"   START WITH "_IBAFN_": FIRST// " R X:DTIME G END:'$T!(X["^")
	I $E(X,1,2)="??" S IBOFF=6 D HELP1,HELP2,HELP W ! G FD1
	I $E(X)="?" S IBOFF=6 D HELP2,HELP W ! G FD1
	I "@"[X S IBAFF=$S(IBAFD&(X=""):0,1:X) G FD2
	I IBAFD D ^%DT K %DT S IBAFF=Y I Y<0 K IBAFF W ! S IBOFF=6 D HELP W ! G FD1
	S:'IBAFD IBAFF=X
	;
FD2	W !,"   GO TO "_IBAFN_": LAST// " R X:DTIME G END:'$T!(X["^")
	I $E(X,1,2)="??" S IBOFF=12 D HELP1,HELP2,HELP W ! G FD2
	I $E(X)="?" S IBOFF=12 D HELP2,HELP W ! G FD2
	I X="" S IBAFL=$S(IBAFD:9999999,1:"") S:IBAFF="" IBAFZ="ALL" G CONT
	I X="@",IBAFF="@" S IBAFL="@",IBAFZ="NULL" G CONT
	I IBAFD D ^%DT K %DT S IBAFL=Y I Y<0!(IBAFF'="@"&(Y<IBAFF)) K IBAFL W !!,"       LAST DATE must follow the BEGIN DATE.",! G FD2
	I 'IBAFD,+IBAFF=IBAFF,+X=X G:X'<IBAFF FD21 W !!,"       The LAST value must follow the FIRST.",! G FD2
	I 'IBAFD,IBAFF'="@",IBAFF]X W !!,"       The LAST value must follow the FIRST.",! G FD2
FD21	S:'IBAFD IBAFL=X
	;
CONT	D ^IBOTR1 ; Continue user interface; compile and print report.
	;
END	K IBRT,IBRTN,IBADFREF,IBAF,IBAFN,IBAFD,IBAFF,IBAFL,IBAFZ,IBBRT,IBBRN
	K IBDF,IBDFN,IBBDT,IBEDT,IBICF,IBICL,IBIC,IBBRTY,IBOFF,IBTEXT,IBARST
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOTR" D T1^%ZOSV ;stop rt clock
	Q
	;
	;
HELP	F  S IBTEXT=$P($T(TEXT+IBOFF),";",3) Q:IBTEXT=""  W !,IBTEXT S IBOFF=IBOFF+1
	Q
	;
HELP1	W ! S IBX=0 F  S IBX=$O(^DD(399,IBAF,21,IBX)) Q:'IBX  W:$D(^(IBX,0)) !,^(0)
	K IBX Q
	;
HELP2	W:$D(^DD(399,IBAF,3)) !!,^(3),! Q
	;
TEXT	;  'Additional Field' prompt
	;;      Enter:  'Y'    -  To select a field from the BILL/CLAIMS file
	;;              'N'    -  To skip this prompt and continue with this option
	;;              '^'    -  To quit this option
	;
	;  'Start with FIELD NAME' prompt
	;;      Enter a valid field value, or
	;;              '@'    -  To include null values
	;;              '<CR>' -  To start from the 'first' value for this field
	;;              '^'    -  To quit this option
	;
	;  'Go to FIELD NAME' prompt
	;;      Enter a valid field value, or
	;;              '@'    -  To include only null values, if 'Start with' value is @
	;;              '<CR>' -  To go to the 'last' value for this field
	;;              '^'    -  To quit this option
	;

IBOTR1
IBOTR1	;ALB/CPM - INSURANCE PAYMENT TREND REPORT - USER INTERFACE (CON'T.); 5-JUN-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROTR1
	;
OUTPT	R !,"Select (I)NPATIENT, (O)UTPATIENT, or (B)OTH BILL RECORDS: BOTH// ",X:DTIME G:'$T!(X["^") END S:X="" X="B" S X=$E(X)
	I "IOBiob"'[X S IBOFF=1 D HELP G OUTPT
	W $S("iI"[X:"  INPATIENT","oO"[X:"  OUTPATIENT","bB"[X:"  BOTH")
	S (IBBRT,IBBRTY)=$S("iI"[X:"I","oO"[X:"O",1:"A") I "Bb"'[X G ARST
	;
REPTY	R !,"Print a (C)ombined or (S)eparate Reports: C// ",X:DTIME G:'$T!(X["^") END S:X="" X="C" S X=$E(X)
	I "CScs"'[X S IBOFF=7 D HELP G REPTY
	W $S("cC"[X:"  COMBINED","sS"[X:"  SEPARATE") S IBBRN=$S("cC"[X:"C",1:"S")
	;
ARST	R !,"Select (O)PEN, (C)LOSED, or (B)OTH TYPES OF BILLS: BOTH// ",X:DTIME G:'$T!(X["^") END S:X="" X="B" S X=$E(X)
	I "OCBocb"'[X S IBOFF=29 D HELP G ARST
	W $S("oO"[X:"  OPEN","cC"[X:"  CLOSED","bB"[X:"  BOTH"),!
	S IBARST=$S("oO"[X:"O","cC"[X:"C",1:"A")
	;
QDATE	S DIR(0)="SA^1:DATE BILL PRINTED;2:TREATMENT DATE",DIR("A")="Print Report by (1) DATE BILL PRINTED or (2) TREATMENT DATE: ",DIR("B")="1",DIR("T")=20,DIR("?")="^S IBOFF=24 D HELP^IBOTR1"
	D ^DIR K DIR G:Y=""!(X="^") END S IBDF=X,IBDFN=Y(0)
BEGDT	S %DT="AEPX",%DT("A")="   START WITH "_IBDFN_": " D ^%DT K %DT G:Y<0 END S IBBDT=Y
	S %DT="AEPX",%DT("A")="   GO TO "_IBDFN_": " D ^%DT K %DT G:Y<0 END
	S IBEDT=Y I Y<IBBDT W *7,!!,"      The END DATE must follow the BEGIN DATE.",! G BEGDT
	;
INSO1	W !,"      START WITH INSURANCE COMPANY: FIRST// " R X:DTIME G:'$T!(X["^") END
	I $E(X)="?" S IBOFF=12 D HELP G INSO1
	S IBICF=X
INSO2	W !,"      GO TO INSURANCE COMPANY: LAST// " R X:DTIME G:'$T!(X["^") END
	I $E(X)="?" S IBOFF=18 D HELP G INSO2
	I X="" S IBICL="" S:IBICF="" IBIC="ALL" G SELPRNT
	I X="@",IBICF="@" S IBICL="@",IBIC="NULL" G SELPRNT
	I IBICF'="@",IBICF]X W *7,!!,"       The LAST value must follow the FIRST.",! G INSO2
	S IBICL=X
	;
SELPRNT	W !!,"You will need a 132 column printer for this report!"
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) D  G END
	.S ZTRTN="^IBOTR2",ZTDESC="INSURANCE PAYMENT TREND REPORT",ZTSAVE("IB*")=""
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	U IO
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOTR1" D T1^%ZOSV ;stop rt clock
	D ^IBOTR2 ;Compile and print report
END	Q
	;
	;
HELP	W ! F  S IBTEXT=$P($T(TEXT+IBOFF),";",3) Q:IBTEXT=""  W !,IBTEXT S IBOFF=IBOFF+1
	W:IBOFF<24!(IBOFF>29) ! Q
	;
TEXT	;  'Select INPATIENT... ' prompt
	;;      Enter:  '<CR>' -  To select both Inpatient and Outpatient bills
	;;              'I'    -  To select only Inpatient bills
	;;              'O'    -  To select only Outpatient bills
	;;              '^'    -  To quit this option
	;
	;  '(C)ombined or (S)eparate report' prompt
	;;      Enter:  '<CR>' -  To print a report of both Inpatient and Outpatient bills
	;;              'S'    -  To print separate Inpatient and Outpatient reports
	;;              '^'    -  To quit this option
	;
	;  'Start with INSURANCE COMPANY' prompt
	;;      Enter a valid field value up to 40 characters, or
	;;              '@'    -  To include null values
	;;              '<CR>' -  To start from the 'first' value for this field
	;;              '^'    -  To quit this option
	;
	;  'Go to INSURANCE COMPANY' prompt
	;;      Enter a valid field value up to 40 characters, or
	;;              '@'    -  To include only null values, if 'Start with' value is @
	;;              '<CR>' -  To go to the 'last' value for this field
	;;              '^'    -  To quit this option
	;
	;  'Print report by ...' prompt
	;;      Enter:  '<CR>' -  To select bills by the Bill Printed Date
	;;              '2'    -  To select bills by the Treatment Date
	;;              '^'    -  To quit this option
	;
	;  'Select (C)LOSED, (O)PEN... ' prompt
	;;      Enter:  '<CR>' -  To select both Open and Closed bills
	;;              'O'    -  To select only Open bills
	;;              'C'    -  To select only Closed bills
	;;              '^'    -  To quit this option
	;

IBOTR2
IBOTR2	;ALB/CPM - INSURANCE PAYMENT TREND REPORT - COMPILATION ; 5-JUN-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROTR2
	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOTR-2" D T0^%ZOSV ;start rt clock
	K ^TMP($J) S IBQUIT=0
	S IBDA="" F IBCNT=1:1 S IBDA=$O(^DGCR(399,"AD",IBRT,IBDA)) Q:'IBDA  D COMP I IBCNT#100=0 S IBQUIT=$$STOP^IBOUTL("Trend Report") Q:IBQUIT
	D:'IBQUIT ^IBOTR3 ; Write the output report.
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOTR2" D T1^%ZOSV ;stop rt clock
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K IB,IBAO,IBAP,IBCNT,IBDA,DFN,IBBC,DIC,DA,DR,DIQ,IBDP,IBDBC,IBSCF,IBSCT,IBQUIT
	D ^%ZISC Q
	;
	;
COMP	; Compile Bill-Accounts/Receivable records for report.
	Q:'$D(^DGCR(399,IBDA,0))  S IBD=^(0),IBBN=$P(IBD,"^"),DFN=+$P(IBD,"^",2),IBBC=$P(IBD,"^",5) S:IBBN="" IBBN="NULL"
	Q:IBBRT="O"&("12"[IBBC)  Q:IBBRT="I"&("34"[IBBC)
	S IBDBC=$$CLO^PRCAFN(IBDA) Q:IBARST="O"&(IBDBC>0)!(IBARST="C"&(IBDBC<0))
	S:IBDBC>0 IBBN=IBBN_" *" S:IBDBC'>0 IBDBC=DT
	I $D(IBBRN),IBBRN="S" S IBBRTY=$S("12"[IBBC:"I",1:"O")
	;
	; - perform edits for Insurance company
	S IBD=$P($G(^DGCR(399,IBDA,"M")),"^") Q:IBICF'="@"&(IBD="")
	I $D(IBIC) Q:IBIC="ALL"&(IBD="")  Q:IBIC="NULL"&(IBD]"")
	S IBINS=$P($G(^DIC(36,+IBD,0)),"^")
	I IBINS="" S IBINS="UNKNOWN" G CANC
	I $G(IBIC)="ALL" G CANC
	I IBICF="@"&(IBICL="") G CANC
	Q:IBICF]IBINS!(IBINS]IBICL)
	;
	; - only keep cancelled bills if 'Bill Cancelled?' field is selected
CANC	S IBINS=IBINS_"@@"_IBD
	Q:'$D(^DGCR(399,IBDA,"S"))  S IBD=^("S")
	I $G(IBAF)'=16 Q:$P(IBD,"^",16)  ; Bill has been cancelled
	;
	; - perform Printed/Treatment date edits
	S IBDP=$P(IBD,"^",12)
	I IBDF=1 Q:IBDP<IBBDT!(IBDP>IBEDT)  ; Date printed is out of range
	S IBD=$G(^DGCR(399,IBDA,"U")),IBSCF=$P(IBD,"^"),IBSCT=$P(IBD,"^",2)
	I IBDF=2 Q:IBSCT<IBBDT!(IBSCF>IBEDT)  ; Treatment dates out of range
	I '$D(IBAF) G BUILD
	;
	; - find the selected field value and compare to selection parameters
	K IB S DIC=399,DA=IBDA,DR=IBAF,DIQ="IB" S:IBAFD DIQ(0)="I"
	D EN^DIQ1 K DIQ
	S:IBAFD IB(399,IBDA,IBAF)=IB(399,IBDA,IBAF,"I")
	S IB=$G(IB(399,IBDA,IBAF))
	Q:IBAFF'="@"&(IB="")
	I $D(IBAFZ) Q:IBAFZ="ALL"&(IB="")  Q:IBAFZ="NULL"&(IB]"")
	I IB="" G BUILD
	I $G(IBAFZ)="ALL" G BUILD
	I IBAFF="@",IBAFL="" G BUILD
	I +IBAFF=IBAFF,+IBAFL=IBAFL Q:IB<IBAFF!(IB>IBAFL)
	E  Q:IBAFF]IB!(IB]IBAFL)
	;
	; - retrieve A/R data and build sort global.
BUILD	S IBAO=$$ORI^PRCAFN(IBDA) S:IBAO<0 IBAO=0
	S IBAP=$$TPR^PRCAFN(IBDA) S:IBAP<0 IBAP=0
	S ^TMP($J,"IBOTR",IBBRTY,IBINS,$$NAMAGE(DFN)_"@@"_IBBN)="^"_IBSCF_"^"_IBSCT_"^"_IBDP_"^"_IBDBC_"^"_IBAO_"^"_IBAP
	Q
	;
NAMAGE(DFN)	; Return patient name and age.
	;           Input:  DFN
	;           Output: Pt name (1st 18 chars)_"("_Pt Age_")"
	N DPT0,X,X1,X2
	S DPT0=$G(^DPT(DFN,0)),X2=$P(DPT0,"^",3)
	I 'X2 S X="UNK"
	E  S X1=DT D ^%DTC S X=X\365.25
	Q $E($P(DPT0,"^"),1,18)_" ("_X_")"

IBOTR3
IBOTR3	;ALB/CPM - INSURANCE PAYMENT TREND REPORT - OUTPUT ; 5-JUN-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROTR3
	;
	S (IBQUIT,IBPAG)=0,IBLINE="",$P(IBLINE,"-",IOM)="",Y=DT D D^DIQ S IBTDT=Y
	I $D(IBAF) D ADDFLD^IBOTR4
	I '$D(^TMP($J,"IBOTR")) D  S IBCALC=3 D PAUSE G END
	. S IBX=$S("bB"'[IBBRT:IBBRT,IBBRN="C":"A",1:"I")
	. D HDR W !!,"  NO INFORMATION MATCHES SELECTION CRITERIA."
	; 
	S IBX="" F  S IBX=$O(^TMP($J,"IBOTR",IBX)) Q:IBX=""  S IBTT="0^0^0^0" D HDR Q:IBQUIT  D INS Q:IBQUIT
END	K ^TMP($J),IBQUIT,IBINS,IBPAG,IBLINE,IBTDT,IBX,IBTT,IBTI,IBCALC,IBBN,IBD,X,X1,X2,IBAFT,IBI
	Q
	;
INS	; Loop through each Insurance company.
	S IBINS="" F  S IBINS=$O(^TMP($J,"IBOTR",IBX,IBINS)) Q:IBINS=""  S IBTI="0^0^0^0" D BILLNO Q:IBQUIT
	D:'IBQUIT GTOT^IBOTR4 ; Write grand totals for Inpt/Outpt report.
	Q
	;
BILLNO	; Loop through all bills for an Insurance company.
	I $Y>(IOSL-11) S IBCALC=11 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT
	D INSADD S IBBN=""
	F  S IBBN=$O(^TMP($J,"IBOTR",IBX,IBINS,IBBN)) Q:IBBN=""  S IBD=^(IBBN) D DETAIL Q:IBQUIT
	D:'IBQUIT SUBTOT^IBOTR4 ; Write sub-totals for each insurance company.
	Q
	;
DETAIL	; Write out detail lines.
	N IBPEN S IBPEN=$S($P(IBBN,"@@",2)["*":0,1:$P(IBD,"^",6)-$P(IBD,"^",7))
	I $Y>(IOSL-3) S IBCALC=3 D PAUSE Q:IBQUIT  D HDR Q:IBQUIT  D INSADD
	W !,$P(IBBN,"@@",2),?10,$P(IBBN,"@@"),?34,$$DATE($P(IBD,"^",2)),?44,$$DATE($P(IBD,"^",3))
	W ?54,$$DATE($P(IBD,"^",4)),?64,$$DATE($P(IBD,"^",5))
	S X1=$P(IBD,"^",5),X2=$P(IBD,"^",4) D ^%DTC W ?75,$J(X,4)
	W ?80,$J($P(IBD,"^",6),9,2),?90,$J($P(IBD,"^",7),9,2)
	W ?101,$J($P(IBD,"^",6)-$P(IBD,"^",7),9,2),?111,$J(IBPEN,9,2)
	W ?123,$J($S(+$P(IBD,"^",6)=0:0,1:$P(IBD,"^",7)/$P(IBD,"^",6)*100),6,2)
	S $P(IBTI,"^")=$P(IBTI,"^")+1,$P(IBTI,"^",2)=$P(IBTI,"^",2)+$P(IBD,"^",6),$P(IBTI,"^",3)=$P(IBTI,"^",3)+$P(IBD,"^",7),$P(IBTI,"^",4)=$P(IBTI,"^",4)+IBPEN
	S $P(IBTT,"^")=$P(IBTT,"^")+1,$P(IBTT,"^",2)=$P(IBTT,"^",2)+$P(IBD,"^",6),$P(IBTT,"^",3)=$P(IBTT,"^",3)+$P(IBD,"^",7),$P(IBTT,"^",4)=$P(IBTT,"^",4)+IBPEN
	Q
	;
HDR	; Print the report header.
	S IBPAG=IBPAG+1 W:$E(IOST,1,2)["C-"!(IBPAG>1) @IOF W IBRTN," PAYMENT TREND REPORT  --  "
	W $S(IBX="I":"INPATIENT",IBX="O":"OUTPATIENT",1:"COMBINED INPATIENT AND OUTPATIENT")," BILLING"
	W ?105,IBTDT,"   PAGE: ",IBPAG
	W !?6,IBDFN,":  ",$$DATE(IBBDT),"  -  ",$$DATE(IBEDT),?57,"Note: '*' after the Bill Number denotes a CLOSED bill"
	W:$D(IBAF) !?6,IBAFT
	W !,"BILL",?10,"PATIENT",?55,"DATE",?64,"DATE BILL",?76,"#"
	W ?82,"AMOUNT",?91,"AMOUNT",?103,"AMOUNT",?112,"AMOUNT",?122,"PERCENT"
	W !,"NUMBER",?10,"NAME/ (AGE)",?34,"BILL FROM  -  TO",?54,"PRINTED"
	W ?65,"CLOSED",?75,"DAYS",?82,"BILLED",?90,"COLLECTED",?103,"UNPAID"
	W ?112,"PENDING",?122,"COLLECTED",!,IBLINE
	S IBQUIT=$$STOP^IBOUTL("Trend Report")
	Q
	;
DATE(IBX)	S:IBX]"" IBX=$E(IBX,4,5)_"/"_$E(IBX,6,7)_"/"_$E(IBX,2,3) Q IBX
	;
PAUSE	Q:$E(IOST,1,2)'="C-"
	F IBI=$Y:1:(IOSL-IBCALC) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q
	;
INSADD	; Display Insurance Company name and address.  Input:  IBINS
	N D,IEN
	W !!?8,"PRIMARY INSURANCE CARRIER:  ",$P(IBINS,"@@")
	S IEN=$P(IBINS,"@@",2) G:'IEN INSADDQ
	S D=$G(^DIC(36,IEN,.11)) G:D="" INSADDQ
	W:$P(D,"^")]"" !?36,$P(D,"^")
	W:$P(D,"^",2)]"" !?36,$P(D,"^",2)
	W:$P(D,"^",3)]"" !?36,$P(D,"^",3)
	W:$P(D,"^")]""!($P(D,"^",2)]"")!($P(D,"^",3)]"") !?36
	W $P(D,"^",4) W:$P(D,"^",4)]""&($P(D,"^",5)]"") ", "
	W $P($G(^DIC(5,+$P(D,"^",5),0)),"^")
	W:$P(D,"^",6)]""&($P(D,"^",4)]""!($P(D,"^",5)]"")) "   "
	W $P(D,"^",6)
INSADDQ	W ! Q

IBOTR4
IBOTR4	;ALB/CPM - INSURANCE PAYMENT TREND REPORT - OUTPUT (CON'T.) ; 31-DEC-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;MAP TO DGCROTR4
	;
ADDFLD	; Build descriptive title for BILL/CLAIMS field.
	S IBAFT=IBAFN_":  "
	I IBAFD S IBAFT=IBAFT_$S(IBAFF=0&(IBAFL=9999999):"ALL DATES",IBAFF=0:"ALL DATES THROUGH "_$$DATE^IBOTR3(IBAFL),IBAFL=9999999:"ALL DATES ON AND AFTER "_$$DATE^IBOTR3(IBAFL),1:$$DATE^IBOTR3(IBAFF)_" THROUGH "_$$DATE^IBOTR3(IBAFL)) Q
	I $D(IBAFZ) S IBAFT=IBAFT_$S(IBAFZ="ALL":"ALL VALUES",1:"NULL VALUES ONLY") Q
	I IBAFF="@" S IBAFT=IBAFT_$S(IBAFL]"":"ALL VALUES THROUGH "_IBAFL_", INCLUDING NULLS",1:"ALL VALUES, INCLUDING NULLS") Q
	S IBAFT=IBAFT_$S(IBAFF']"":"ALL VALUES THROUGH "_IBAFL,IBAFL']"":"ALL VALUES FOLLOWING "_IBAFF,1:"ALL VALUES BETWEEN "_IBAFF_" AND "_IBAFL)
	Q
	;
SUBTOT	; Calculate and write sub-totals for each Insurance Company.
	I $Y>(IOSL-5) S IBCALC=5 D PAUSE^IBOTR3 Q:IBQUIT  D HDR^IBOTR3,INSADD^IBOTR3
	W !?80,"---------",?90,"---------",?101,"---------",?111,"---------",?122,"---------"
	W !,"TOTAL NUMBER OF BILLS:  ",$P(IBTI,"^"),?80,$J($P(IBTI,"^",2),9,2)
	W ?90,$J($P(IBTI,"^",3),9,2),?101,$J($P(IBTI,"^",2)-$P(IBTI,"^",3),9,2),?111,$J($P(IBTI,"^",4),9,2)
	W ?123,$J($S('$P(IBTI,"^",2):0,1:$P(IBTI,"^",3)/$P(IBTI,"^",2)*100),6,2)
	Q
	;
GTOT	; Calculate and write grand totals for report.
	I $Y>(IOSL-11) S IBCALC=11 D PAUSE^IBOTR3 Q:IBQUIT  D HDR^IBOTR3
	W !!!,?6,"GRAND TOTAL NUMBER OF BILLS:",?44,$J($P(IBTT,"^"),4)
	W !?6,"GRAND TOTAL AMOUNT BILLED:",?38,$J($P(IBTT,"^",2),10,2)
	W !?6,"GRAND TOTAL AMOUNT COLLECTED:",?38,$J($P(IBTT,"^",3),10,2)
	W !?6,"GRAND TOTAL AMOUNT UNPAID:",?38,$J($P(IBTT,"^",2)-$P(IBTT,"^",3),10,2)
	W !?6,"GRAND TOTAL AMOUNT PENDING:",?38,$J($P(IBTT,"^",4),10,2)
	W !?6,"PERCENTAGE COLLECTED:"
	W ?42,$J($S('$P(IBTT,"^",2):0,1:$P(IBTT,"^",3)/$P(IBTT,"^",2)*100),6,2)
	S IBCALC=3 D PAUSE^IBOTR3
	Q

IBOUNP1
IBOUNP1	;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; VAUTD =1 if all divisions selected
	; VAUTD() - list of selected divisions
	; VAUTC =1 if all clinics selected in selected divisions
	; VAUTC() - list of selected clinics, indexed by record number
	; IBOEND - end of the date range for the report
	; IBOBEG - start of the date range for report
	; IBOQUIT - flag to exit
	; IBOUK =1 if vets whose insurance is unknow should be included
	; IBOUI =1 if vets that are no insured should be included
	; IBOEXP = 1 if vets whose insurance is expiring should be included
MAIN	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOUNP1-1" D T0^%ZOSV ;start rt clock
	;
	S IBOQUIT=0 K ^TMP($J)
	D CLINIC,CATGRY:'IBOQUIT,DRANGE:'IBOQUIT
	D:'IBOQUIT DEVICE
	G:IBOQUIT EXIT
QUEUED	; entry point if queued
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOUNP1" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOUNP1-2" D T0^%ZOSV ;start rt clock
	;
	D:'IBOQUIT LCLINIC,LOOPCLNC^IBOUNP2,REPORT^IBOUNP3
EXIT	; 
	K ^TMP($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOUNP1" D T1^%ZOSV ;stop rt clock
	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K IBOQUIT,IBOBEG,IBOEND,IBOUK,IBOUI,IBOEXP,VAUTC,VAUTD
	Q
DRANGE	; select a date range for report
	S DIR(0)="D^::EX",DIR("A")="Start with DATE" D ^DIR I $D(DIRUT) S IBOQUIT=1 K DIR Q
	S IBOBEG=Y,DIR("A")="Go to DATE" F  D ^DIR S:$D(DIRUT) IBOQUIT=1 Q:(Y>IBOBEG)!(Y=IBOBEG)!IBOQUIT  W !,*7,"ENDING DATE must follow or be the same as the STARTING DATE"
	S IBOEND=Y K DIR
	Q
DEVICE	;
	I $D(ZTQUEUED) Q
	W !!,*7,"*** Margin width of this output is 132 ***"
	W !,"*** This output should be queued ***"
	S %ZIS="MQ" D ^%ZIS I POP S IBOQUIT=1 Q
	I $D(IO("Q")) S ZTRTN="QUEUED^IBOUNP1",ZTIO=ION,ZTSAVE("VA*")="",ZTSAVE("IBO*")="",ZTDESC="OUTPATIENT INSURANCE REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S IBOQUIT=1 Q
	U IO Q
CLINIC	; gets list of selected clinics,or sets VAUTC=1 if all selected
	N VAUTNI S VAUTNI=2,IBOQUIT=1
	D DIVISION^VAUTOMA Q:Y<0  S VAUTNI=2 D CLINIC^VAUTOMA Q:Y<0
	S IBOQUIT=0 Q
LCLINIC	; lists clinics if not all divisions were chosen
	N IBCLN,NODE
	I VAUTD'=1&(VAUTC=1) S VAUTC=0,IBCLN="" F  S IBCLN=$O(^SC(IBCLN)) Q:IBCLN=""  D
	.S NODE=$G(^SC(IBCLN,0))
	.;make sure it's the one of selected divisions division
	.Q:'$D(VAUTD(+$P(NODE,"^",15)))
	.;check that location is a clinic
	.Q:$P(NODE,"^",3)'="C"
	.S VAUTC(IBCLN)=""
	Q
CATGRY	; allows user to select categories to include in report
	S DIR(0)="Y",DIR("A")="Include veterans whose insurance is unknown"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
	S IBOUK=Y
	S DIR(0)="Y",DIR("A")="Include veterans whose insurance is expiring"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
	S IBOEXP=Y
	S DIR(0)="Y",DIR("A")="Include veterans who have no insurance"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S IBOQUIT=1 Q
	S IBOUI=Y
	Q

IBOUNP2
IBOUNP2	;ALB/CJM - OUTPATIENT INSURANCE REPORT ;JAN 25,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; IBOTIME appointment time
	; IBODIV  division
	; IBOCLNC clinic
	; IBOCTG category vet is in (no=noinsurance,expired,unknow)
	; IBOEND2  end of the date range + 30 days
	; IBOINS =1 in there is insurance data
	; IBORPTD =1 if appt should appear on report
LOOPCLNC	; loops through selected clinics
	N IBOCLNC,IBOTIME,IBOEND2,IBOCTG,IBOINS,IBORPTD,IBONAME S IBOCLNC=""
	S X1=IBOEND,X2=30 D C^%DTC S IBOEND2=X
	I VAUTC=1 F  S IBOCLNC=$O(^SC("AC","C",IBOCLNC)) Q:'IBOCLNC  D LOOPAPPT
	I VAUTC'=1 F  S IBOCLNC=$O(VAUTC(IBOCLNC)) Q:'IBOCLNC  D LOOPAPPT
	Q
LOOPAPPT	; loops through appointments for a selected clinic
	N J,R,IBOCLN,IBODIV I $D(^SC(IBOCLNC,0)) D
	.S IBODIV=$P($G(^SC(IBOCLNC,0)),"^",15) S:IBODIV IBODIV=$P($G(^DG(40.8,IBODIV,0)),"^",1) S:IBODIV="" IBODIV="UNKNOWN"
	.N IBOCLN S IBOCLN=$P($G(^SC(IBOCLNC,0)),"^",1) I IBOCLN="" S IBOCLN="NOT KNOWN"
	.F IBOTIME=IBOBEG-.0001:0 S IBOTIME=$O(^SC(IBOCLNC,"S",IBOTIME)) Q:'IBOTIME!(IBOTIME>(IBOEND+.99))  F J=0:0 S J=$O(^SC(IBOCLNC,"S",IBOTIME,1,J)) Q:J<1  I $D(^SC(IBOCLNC,"S",IBOTIME,1,J,0)) D
	.. S R=^(0),DFN=+R
	.. I $P(R,"^",9)'="C",$D(^DPT(DFN,"S",IBOTIME,0)),$P(^(0),"^",2)']"" S IBOQUIT=0 D DONE,VET:'IBOQUIT,STATUS:'IBOQUIT Q:IBOQUIT  S IBORPTD=0 D UNK:IBOUK,EXP:'IBORPTD&IBOEXP,UNI:'IBORPTD&IBOUI,INDEX:IBORPTD
	Q
VET	; checks if patient is a vet
	S IBOQUIT=1 D ELIG^VADPT Q:VAERR  S:VAEL(4) IBOQUIT=0
	Q
DONE	; checks if patient already on report
	S:$D(^TMP($J,"PATIENTS",DFN)) IBOQUIT=1
	Q
STATUS	; checks if appt status="",otherwise should not be on report
	S:($P($G(^DPT(DFN,"S",IBOTIME,0)),"^",2)]"") IBOQUIT=1
	Q
INDEX	; indexes appointment,also indexs vet so he won't be reported
	S IBONAME=$P($G(^DPT(DFN,0)),"^",1) Q:IBONAME'[""
	S ^TMP($J,IBOCTG,IBODIV,IBOCLN,IBONAME,DFN)=IBOTIME
	S ^TMP($J,"PATIENTS",DFN)=""
	Q
UNK	; goes in 'unknown' category if the field COVERED BY HEALTH INSURANCE
	; was not answered, was answered unknown, and there is no insurance data
	S IBORPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="U"!(T="") D CKINS I 'IBOINS S IBOCTG="UNKNOWN",IBORPTD=1 Q
	Q
EXP	; goes in expired category only if there is insurance and
	; all of it expired before end of specified period + 30 days
	S IBORPTD=0 N T,E D CKINS Q:'IBOINS
	S IBORPTD=1,IBOCTG="EXPIRED" F T=0:0 S T=$O(^DPT(DFN,.312,T)) Q:T'>0  S E=$P($G(^(T,0)),"^",4) I E=""!(E>IBOEND2) S IBORPTD=0 Q
	Q
UNI	; goes in unisured category if there is no insurance data and 
	; the field COVERED BY HEALTH INSURANCE was answered YES or NO
	S IBORPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="N"!(T="Y") D CKINS I 'IBOINS S IBOCTG="NO",IBORPTD=1
	Q
CKINS	; checks if any insurance in insurance multiple of patient record
	S IBOINS=0 I $O(^DPT(DFN,.312,0)) S IBOINS=1
	Q

IBOUNP3
IBOUNP3	;ALB/CJM   -  OUTPATIENT INSURANCE REPORT ;JAN 25,1991
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
REPORT	;
	N QUIT,IBODIV,CLNC,TIME,DFN,CTG,HDR,HDR2,HDR1,PAGE,NOW,LINE,B,E,NAME,CRT,BOT,DIVTOT,CLNTOT,TOTAL,FIRST
	S CRT=0,BOT=6,QUIT=0 I $E(IOST,1,2)="C-" S CRT=1,BOT=2
	S FIRST=1
	W:CRT @IOF
	S HDR="OUTPATIENT VISITS FOR VETERANS",LINE="",$P(LINE,"-",126)=""
	D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
	S Y=IBOBEG X ^DD("DD") S B=Y
	S Y=IBOEND X ^DD("DD") S E=Y
	S HDR2="FOR APPOINTMENTS " S:E'=B HDR2=HDR2_"FROM "_B_" TO "_E
	S:E=B HDR2=HDR2_"ON "_B
	I IBOUI S CTG="NO",HDR1=HDR_" WITH NO INSURANCE" D LOOP G:QUIT Q
	I IBOEXP S CTG="EXPIRED",HDR1=HDR_" WHOSE INSURANCE IS EXPIRED OR WILL EXPIRE WITHIN 30 DAYS" D LOOP G:QUIT Q
	I IBOUK S CTG="UNKNOWN",HDR1=HDR_" WHOSE INSURANCE IS UNKNOWN" D LOOP
	I CRT,'QUIT D PAUSE
Q	D KVAR^VADPT K VA
	Q
LOOP	;
	S IBODIV="",PAGE=1,(CLNTOT,DIVTOT,TOTAL)=0
	F  D:DIVTOT DIVTOT S:DIVTOT TOTAL=TOTAL+DIVTOT,DIVTOT=0 S IBODIV=$O(^TMP($J,CTG,IBODIV)) Q:IBODIV=""!QUIT  S CLNC="" D
	.D HEADER Q:QUIT
	.W !!?6,"Division:  ",?31,IBODIV,!
	.F  S CLNC=$O(^TMP($J,CTG,IBODIV,CLNC)) S DIVTOT=DIVTOT+CLNTOT,CLNTOT=0 Q:CLNC=""!QUIT  D:$Y>(IOSL-BOT-4) HEADER Q:QUIT  W !!,?6,"Clinic: ",?31,CLNC,! S NAME="" D
	..F  S NAME=$O(^TMP($J,CTG,IBODIV,CLNC,NAME)) Q:QUIT  D:NAME=""&(CLNTOT>0) CLNTOT Q:NAME=""  D
	... F DFN=0:0 S DFN=$O(^TMP($J,CTG,IBODIV,CLNC,NAME,DFN)) Q:DFN'>0  S TIME=^TMP($J,CTG,IBODIV,CLNC,NAME,DFN) D ITEM Q:QUIT
	D:'QUIT TOTAL
	Q
CLNTOT	; prints subtotal for clinic
	I $Y+BOT>(IOSL-1) D HEADER
	W !?3,"________________________"
	W !,?3,"Clinic Subtotal  : ",CLNTOT
	Q
DIVTOT	; prints subtotal for division
	I $Y+BOT>(IOSL-1) D HEADER
	W !?3,"________________________"
	W !,?3,"Division Subtotal: ",DIVTOT
	Q
TOTAL	; prints total for all clincis
	I ($Y+BOT>(IOSL-1))!($Y'>1) D HEADER Q:QUIT
	W !?3,"________________________"
	W !?3,"Total            : ",TOTAL
	F  Q:($Y>(IOSL-2))  W !
	Q
ITEM	; prints patient data for a single appt
	N CNT,TM,E1,E2,PID,MS,ES,SC,AGE,INS,I,VAPA S (E1,E2,PID,MS,ES,SC,AGE)="",CNT=2,CLNTOT=CLNTOT+1
DATA	S Y=TIME X ^DD("DD") S TM=$P(Y,"@",1)_"@"_$E($P(Y,"@",2),1,5)
	D DEM^VADPT I 'VAERR S MS=$P(VADM(10),"^",2),PID=VA("PID"),AGE=VADM(4)
	D OPD^VADPT I 'VAERR S ES=$P(VAPD(7),"^",2)
	D ELIG^VADPT I 'VAERR,+VAEL(3) S SC=$P(VAEL(3),"^",2)
CKSPACE	; tries to keep vet's data on same page
	S VAPA("P")="" D ADD^VADPT I 'VAERR D
	. F I=2,3,4 S:VAPA(I)]"" CNT=CNT+1
	S VAOA("A")=5 D OAD^VADPT I 'VAERR S E1=VAOA(9) I E1]"" D
	. S CNT=CNT+1
	. F I=1,2,3,4,5,6,8 S E1(I)=VAOA(I)
	. F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
	S VAOA("A")=6 D OAD^VADPT I 'VAERR S E2=VAOA(9) I E2]"" D
	. S CNT=CNT+1
	. F I=1,2,3,4,5,6,8 S E2(I)=VAOA(I)
	. F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
	S CNT=$P($G(^DPT(DFN,.312,0)),"^",4)+CNT
	I CNT>(IOSL-($Y+BOT)) D HEADER Q:QUIT
PRINT	W !?3,$E(NAME,1,25),?31,PID,?51,TM,?74,AGE,?81,SC,?87,$E(MS,1,15),?104,$E(ES,1,20)
	W !?31,"Address:",?51,VAPA(1),?87,"Tele: ",?104,VAPA(8) W:VAPA(2)]"" !?51,VAPA(2) W:VAPA(3)]"" !?51,VAPA(3) W:VAPA(4)]"" !?51,VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
	I E1]"" W !?31,"Employer:",?51,E1,?87,"Tele: ",?104,E1(8) W:E1(1)]"" !?51,E1(1) W:E1(2)]"" !?51,E1(2) W:E1(3)]"" !?51,E1(3) W:E1(4)]"" !?51,E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
	I E2]"" W !?31,"Sps's Emplr:",?51,E2,?87,"Tele: ",?104,E2(8) W:E2(1)]"" !?51,E2(1) W:E2(2)]"" !?51,E2(2) W:E2(3)]"" !?51,E2(3) W:E2(4)]"" !?51,E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
INS	; writes insurance data
	N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) D:$Y>(IOSL-BOT) HEADER Q:QUIT  W ! W:J ?31,"Insurance:" W ?51,$P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),?87 W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W ?104,Y
	Q
HEADER	; writes the report header
	I CRT,$Y>1,'FIRST D  Q:QUIT
	. F  Q:$Y>(IOSL-1)  W !
	.D PAUSE
	I 'FIRST W @IOF
	I FIRST S FIRST=0
	W !,HDR1,?104,NOW,"  PAGE ",PAGE,!,HDR2,!!
	W ?3,"PATIENT NAME",?32,"PT ID",?51,"APPT DATE/TIME",?74,"AGE",?81,"%SC",?87,"MARITAL STATUS",?104,"EMPLOYMENT STATUS",!
	W LINE
	S PAGE=PAGE+1
	Q
PAUSE	;
	N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S QUIT=1 Q
	Q

IBOUNP4
IBOUNP4	;ALB/CJM - INPATIENT INSURANCE REPORT ;JAN 25,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; VAUTD =1 if all divisions selected
	; VAUTD() - list of selected divisions
	; IBOEND - end of the date range for the report
	; IBOBEG - start of the date range for report
	; IBOUK =1 if vets whose insurance is unknow should be included
	; IBOUI =1 if vets that are no insured should be included
	; IBOEXP = 1 if vets whose insurance is expiring should be included
	; IBOBYWRD = 1 if report should be sorted by ward, = 0 otherwise
MAIN	;
	;***
	;S XRTL=$ZU(0),XRTN="IBOUNP4-1" D T0^%ZOSV ;start rt clock
	;
	N QUIT S QUIT=0,IBOBYWRD=0 K ^TMP($J)
	D DIVISION,PICK:'QUIT,CATGRY:'QUIT,SORTBY:'QUIT
	D:'$G(QUIT) DEVICE
	G:QUIT EXIT
QUEUED	; entry point if queued
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOUNP4" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBOUNP4-2" D T0^%ZOSV ;start rt clock
	;
	D LOOP^IBOUNP5,REPORT^IBOUNP6
EXIT	;
	K ^TMP($J)
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOUNP4" D T1^%ZOSV ;stop rt clock
	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K IBOBEG,IBOEND,IBOUK,IBOUI,IBOEXP,VAUTD,IBOPICK,IBOBYWRD
	Q
DRANGE	; select a date range for report
	S DIR(0)="D^::EX",DIR("A")="Start with DATE" D ^DIR I $D(DIRUT) S QUIT=1 K DIR Q
	S IBOBEG=Y,DIR("A")="Go to DATE" F  D ^DIR S:$D(DIRUT) QUIT=1 Q:(Y>IBOBEG)!(Y=IBOBEG)!QUIT  W !,*7,"ENDING DATE must follow or be the same as the STARTING DATE"
	S IBOEND=Y K DIR Q
DEVICE	;
	I $D(ZTQUEUED) Q
	W !!,*7,"*** Margin width of this output is 132 ***"
	W !,"*** This output should be queued ***"
	S %ZIS="MQ" D ^%ZIS I POP S QUIT=1 Q
	I $D(IO("Q")) S ZTRTN="QUEUED^IBOUNP4",ZTIO=ION,ZTSAVE("VA*")="",ZTSAVE("IBO*")="",ZTDESC="INPATIENT INSURANCE REPORT" D ^%ZTLOAD W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED") D HOME^%ZIS S QUIT=1 Q
	U IO
	Q
CATGRY	; allows user to select categories to include in report
	S DIR(0)="Y",DIR("A")="Include veterans whose insurance is unknown"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBOUK=Y
	S DIR(0)="Y",DIR("A")="Include veterans whose insurance is expiring"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBOEXP=Y
	S DIR(0)="Y",DIR("A")="Include veterans who have no insurance"
	S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBOUI=Y
	Q
DIVISION	; gets list of selected divisions,or sets VAUTC=1 if all select
	N VAUTNI S VAUTNI=2,QUIT=1
	D DIVISION^VAUTOMA Q:Y<0
	S QUIT=0
	Q
PICK	; gets user's choice of all current inpatients or all admitted in range
	S DIR(0)="S^D:(D)ATE RANGE;C:(C)URRENT DATE;"
	S DIR("?",1)="C for CURRENT DATE- Report will display only those patients that are "
	S DIR("?",2)="inpatients in hospital today."
	S DIR("?",3)=""
	S DIR("?",4)="D for DATE RANGE - to display all patients that were admitted "
	S DIR("?")="to the hospital during that period."
	S DIR("A")="Display report for"
	D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q
	S IBOPICK=Y D:IBOPICK="D" DRANGE
	Q
SORTBY	;sets IBOBYWRD=1 if user wants the output sorted by ward
	K DIR S DIR(0)="Y",DIR("A")="Do you want the report sorted by WARD, as well as by division and patient"
	D ^DIR I $D(DIRUT) S QUIT=1 Q
	S IBOBYWRD=Y
	Q

IBOUNP5
IBOUNP5	;ALB/CJM - INPATIENT INSURANCE REPORT ;JAN 25,1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	; TIME appointment or admission time time
	; CTG category vet is in (no,expired,unknow)
	; INS =1 in there is insurance data
	; RPTD =1 if appt should appear on report
	; IBOPICK ="D" if the user chose to enter a date range, otherwise ="C"
	;              for the current date
	; END2 30 days into the future, starting either from the curren date
	;       or END, depending on IBOPICK
LOOP	; loops through inpatients
	N DIV,DFN,PAT,TIME,CTG,INS,QUIT,RPTD,END2
	I IBOPICK="C" D LOOP1
	I IBOPICK="D" D LOOP2
	Q
LOOP1	; finds current admissions for selected divisions
	N TDY,WRD,WRDN,ADM,DTH,R S WRD=0
	D NOW^%DTC S (TDY,X1)=X,X2=30 D C^%DTC S END2=X
	F  S WRD=$O(^DIC(42,WRD)) Q:WRD'>0  S R=$G(^(WRD,0)),DIV=$P(R,"^",11),WRDN=$P(R,"^",1) D DIV I 'QUIT&(WRDN]"") D
	. S DFN=0 F  S DFN=$O(^DPT("CN",WRDN,DFN)) Q:DFN'>0  S ADM=^(DFN) I ADM]"",$P($G(^DGPM(+ADM,0)),"^",2)=1 S TIME=+^(0),DTH=+$G(^DPT(DFN,.35)) D:'DTH!((DTH\1)=TDY) PROC
	Q
LOOP2	; finds admissions during selected date range for selected divisions
	N WRD0,WRDN
	N T S X1=IBOEND,X2=30 D C^%DTC S END2=X
	S T=(IBOBEG-.0001)
	F  S T=$O(^DGPM("AMV1",T)) Q:'T!(T>(IBOEND+.99))  D
	.S DFN=0 F  S DFN=$O(^DGPM("AMV1",T,DFN)) Q:'DFN  S DIV="",DIV=$O(^DGPM("AMV1",T,DFN,DIV)) Q:DIV'>0  S WRD0=$G(^DIC(42,+$P($G(^DGPM(DIV,0)),U,6),0)),DIV=+$P(WRD0,U,11),WRDN=$P(WRD0,"^"),TIME=T,QUIT=0 D:DIV PROC
	Q
PROC	;
	D DIV:IBOPICK'="C",DONE:'QUIT,VET:'QUIT S RPTD=0 D:'QUIT UNK:IBOUK,EXP:'RPTD&IBOEXP,UNI:'RPTD&IBOUI,INDEX:RPTD
	Q
VET	; checks if patient is a vet
	S QUIT=1 D ELIG^VADPT Q:VAERR  S:VAEL(4) QUIT=0
	Q
DONE	; checks if patient already on report
	S:$D(^TMP($J,"PATIENTS",DFN)) QUIT=1
	Q
INDEX	; indexes appointment,also indexs vet so he won't be reported twice
	N NAME,D
	S D=""
	I DIV S D=$P($G(^DG(40.8,DIV,0)),"^",1)
	I D="" S D="NOT KNOWN"
	I WRDN="" S WRDN="NOT KNOWN"
	S NAME=$P($G(^DPT(DFN,0)),"^",1) Q:NAME'[""
	S ^TMP($J,CTG,D,$S(IBOBYWRD:WRDN,1:"ALL WARDS"),NAME,DFN)=TIME_"^"_WRDN
	S ^TMP($J,"PATIENTS",DFN)=""
	Q
UNK	; goes in 'unknown' category if the field COVERED BY HEALTH INSURANCE
	; was not answered, was answered unknown, and there is no insurance data
	S RPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="U"!(T="") D CKINS I 'INS S CTG="UNKNOWN",RPTD=1 Q
	Q
EXP	; goes in expired category only if there is insurance and
	; all of it expired before end of specified period + 30 days
	S RPTD=0 N T,E D CKINS I 'INS Q
	S RPTD=1,CTG="EXPIRED" F T=0:0 S T=$O(^DPT(DFN,.312,T)) Q:T'>0  S E=$P($G(^(T,0)),"^",4) I E=""!(E>END2) S RPTD=0 Q
	Q
UNI	; goes in unisured category if there is no insurance data and 
	; the field COVERED BY HEALTH INSURANCE was answered YES or NO
	S RPTD=0 N T S T=$P($G(^DPT(DFN,.31)),"^",11) I T="N"!(T="Y") D CKINS I 'INS S CTG="NO",RPTD=1
	Q
CKINS	; checks if any insurance in insurance multiple of patient record
	S INS=0 I $O(^DPT(DFN,.312,0)) S INS=1
	Q
DIV	; checks if the division is on the list VAUTD()
	S QUIT=0 I VAUTD=1 Q
	I 'DIV S QUIT=1 Q
	I '$D(VAUTD(+DIV)) S QUIT=1
	Q

IBOUNP6
IBOUNP6	;ALB/CJM  - INPATIENT INSURANCE REPORT ;JAN 25,1991
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
REPORT	;
	N QUIT,DIV,TIME,DFN,CTG,HDR,HDR2,HDR1,PAGE,NOW,LINE1,LINE2,B,E,NAME,CRT,BOT,SUBTOT,TOTAL,FIRST,WRDN,WARD
	S CRT=0,BOT=6,QUIT=0 I $E(IOST,1,2)="C-" S CRT=1,BOT=2
	S FIRST=1
	W:CRT @IOF
	S HDR="VETERANS"
	S LINE1="",$P(LINE1,"-",126)=""
	S LINE2="",$P(LINE2,"=",126)=""
	D NOW^%DTC S Y=X X ^DD("DD") S NOW=Y
	I IBOPICK="D" S Y=IBOBEG X ^DD("DD") S B=Y,Y=IBOEND X ^DD("DD") S E=Y,HDR2="THAT WERE ADMITTED " S:E'=B HDR2=HDR2_"BETWEEN "_B_" AND "_E S:E=B HDR2=HDR2_"ON "_B
	I IBOPICK="C" S HDR2="THAT ARE CURRENTLY ADMITTED"
	I CRT W @IOF
	I IBOUI S CTG="NO",HDR1=HDR_" WITH NO INSURANCE " D LOOP G:QUIT Q
	I IBOEXP S CTG="EXPIRED",HDR1=HDR_" WHOSE INSURANCE IS EXPIRED OR WILL EXPIRE WITHIN 30 DAYS " D LOOP G:QUIT Q
	I IBOUK S CTG="UNKNOWN",HDR1=HDR_" WHOSE INSURANCE IS UNKNOWN " D LOOP
	I CRT,'QUIT D PAUSE
Q	D KVAR^VADPT K VA
	Q
LOOP	;
	N NODE
	S PAGE=1,(SUBTOT,TOTAL)=0 D HEADER Q:QUIT
	S DIV="" F   S DIV=$O(^TMP($J,CTG,DIV)) S TOTAL=TOTAL+SUBTOT,SUBTOT=0 Q:DIV=""!QUIT   D:$Y>(IOSL-(BOT+4)) HEADER Q:QUIT  W !!,?6,"Division: ",?31,DIV,!,LINE2,! D
	.S WRDN="" F  S WRDN=$O(^TMP($J,CTG,DIV,WRDN)) Q:QUIT  D:WRDN=""&(SUBTOT>0) SUBTOT Q:WRDN=""  D  Q:QUIT
	..I WRDN'="ALL WARDS" D  Q:QUIT
	...I $Y>(IOSL-(BOT+8)) D HEADER Q:QUIT
	...W !,?6,"Ward: ",?31,WRDN,!
	..S NAME="" F  S NAME=$O(^TMP($J,CTG,DIV,WRDN,NAME)) Q:NAME=""  D
	...F DFN=0:0 S DFN=$O(^TMP($J,CTG,DIV,WRDN,NAME,DFN)) Q:QUIT!(DFN'>0)  S NODE=^TMP($J,CTG,DIV,WRDN,NAME,DFN),TIME=$P(NODE,"^"),WARD=$P(NODE,"^",2) D ITEM
	..I WRDN'="ALL WARDS" W !,LINE1
	D:'QUIT TOTAL
	Q
SUBTOT	; prints subtotal for division
	I $Y+BOT>(IOSL-3) D HEADER
	W !?3,"_________________"
	W !,?3,"Subtotal: ",SUBTOT
	Q
TOTAL	; prints total for all divisions
	I $Y+BOT>(IOSL-3) D HEADER Q:QUIT
	W !?3,"_________________"
	W !?3,"Total: ",TOTAL
	F  Q:($Y>(IOSL-2))  W !
	Q
ITEM	; prints patient data for a single appt
	N CNT,TM,E1,E2,PID,MS,ES,SC,AGE,INS,I,VAPA S (E1,E2,PID,MS,ES,SC,AGE)="",CNT=2,SUBTOT=SUBTOT+1
DATA	S Y=TIME X ^DD("DD") S TM=$P(Y,"@",1)_"@"_$E($P(Y,"@",2),1,5)
	D DEM^VADPT I 'VAERR S MS=$P(VADM(10),"^",2),PID=VA("PID"),AGE=VADM(4)
	D OPD^VADPT I 'VAERR S ES=$P(VAPD(7),"^",2)
	D ELIG^VADPT I 'VAERR,+VAEL(3) S SC=$P(VAEL(3),"^",2)
CKSPACE	; tries to keep vet's data on same page
	S VAPA("P")="" D ADD^VADPT I 'VAERR D
	. F I=2,3,4 S:VAPA(I)]"" CNT=CNT+1
	S VAOA("A")=5 D OAD^VADPT I 'VAERR S E1=VAOA(9) I E1]"" D
	. S CNT=CNT+1
	. F I=1,2,3,4,5,6,8 S E1(I)=VAOA(I)
	. F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
	S VAOA("A")=6 D OAD^VADPT I 'VAERR S E2=VAOA(9) I E2]"" D
	. S CNT=CNT+1
	. F I=1,2,3,4,5,6,8 S E2(I)=VAOA(I)
	. F I=1,2,3 S:VAOA(I)]"" CNT=CNT+1
	S CNT=$P($G(^DPT(DFN,.312,0)),"^",4)+CNT
	I CNT>(IOSL-($Y+BOT)) D HEADER Q:QUIT
PRINT	W !?3,$E(NAME,1,25),?31,PID,?51,TM,?74,AGE,?81,SC,?87,$E(MS,1,15),?104,$E(ES,1,20)
	W !?5,WARD,?34,"Address:",?51,VAPA(1),?87,"Tele: ",?104,VAPA(8) W:VAPA(2)]"" !?51,VAPA(2) W:VAPA(3)]"" !?51,VAPA(3) W:VAPA(4)]"" !?51,VAPA(4)_","_$P($G(^DIC(5,+VAPA(5),0)),"^",2)_" "_VAPA(6)
	I E1]"" W !?34,"Employer:",?51,E1,?87,"Tele: ",?104,E1(8) W:E1(1)]"" !?51,E1(1) W:E1(2)]"" !?51,E1(2) W:E1(3)]"" !?51,E1(3) W:E1(4)]"" !?51,E1(4)_","_$P($G(^DIC(5,+E1(5),0)),"^",2)_" "_E1(6)
	I E2]"" W !?34,"Sps's Emplr:",?51,E2,?87,"Tele: ",?104,E2(8) W:E2(1)]"" !?51,E2(1) W:E2(2)]"" !?51,E2(2) W:E2(3)]"" !?51,E2(3) W:E2(4)]"" !?51,E2(4)_","_$P($G(^DIC(5,+E2(5),0)),"^",2)_" "_E2(6)
INS	; writes insurance data
	N I,J S J=1 F I=0:0 S I=$O(^DPT(DFN,.312,I)) Q:I'>0  S INS=$G(^(I,0)) D:$Y>(IOSL-BOT) HEADER Q:QUIT  W ! W:J ?34,"Insurance:" W ?51,$P($G(^DIC(36,$P(INS,"^",1),0)),"^",1),?87 W:J "Expiration:" S Y=$P(INS,"^",4),J=0 I Y>0 X ^DD("DD") W ?104,Y
	W !
	Q
HEADER	; writes the report header
	I CRT,$Y>1,'FIRST D  Q:QUIT
	. F  Q:$Y>(IOSL-1)  W !
	.D PAUSE
	I 'FIRST W @IOF
	I FIRST S FIRST=0
	W ?104,NOW,"  PAGE ",PAGE,!?1,HDR1,HDR2,!!
	W ?3,"PATIENT/WARD",?32,"PT ID",?51,"ADMISSION DATE",?74,"AGE",?81,"%SC",?87,"MARITAL STATUS",?104,"EMPLOYMENT STATUS",!
	W LINE1
	S PAGE=PAGE+1
	Q
PAUSE	;
	N T R "    Press RETURN to continue",T:DTIME I '$T!(T["^") S QUIT=1 Q
	Q

IBOUTL
IBOUTL	;ALB/AAS - INTEGRATED BILLING OUTPUT UTILITY ROUTINE ; 8-MAR-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
DATE	;
	;  -get beginning and ending dates
	;  -output in ibbdt - beginning date
	;             ibedt - ending date
	;
BDT	;  -get beginning date
	S (IBBDT,IBEDT)=""
	S %DT="AEX",%DT("A")="Start with DATE: " D ^%DT K %DT G DATEQ:Y<0 S IBBDT=Y
	;
EDT	;  -get ending date
	S %DT="EX" R !,"Go to DATE: ",X:DTIME S:X=" " X=IBBDT G DATEQ:(X="")!(X["^") D ^%DT G EDT:Y<0 S IBEDT=Y I Y<IBBDT W *7," ??",!,"ENDING DATE must follow BEGINNING DATE." G BDT
	;
DATEQ	K %DT
	Q
	;
PAUSE	Q:$E(IOST,1,2)'["C-"
	F IBJ=$Y:1:(IOSL-4) W !
	S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
	Q
	;
DAT1(X,Y)	; Convert FM date to displayable (mm/dd/yy) format.
	; -- optional output of time, if $g(y) 
	N DATE,T
	S DATE=$S(X:$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3),1:"")
	I $G(Y) S T="."_$E($P(X,".",2)_"000000",1,7) I T>0 S DATE=DATE_" "_$S($E(T,2,3)>12:$E(T,2,3)-12,$E(T,2,3)="00":"00",1:+$E(T,2,3))_":"_$E(T,4,5)_$S($E(T,2,5)>1200:" pm",1:" am")
	Q DATE
	;
DAT2(Y)	; Convert FM date to displayable (mmm dd yyyy) format
	N %
	Q:'$D(Y) "" D D^DIQ
	Q Y
	;
ACTNM(X)	;  -input pointer to action type file (350.1)
	;   output printable name of action type
	S Y=$P($G(^IBE(350.1,+X,0)),"^",9) ;new action type
	Q $S($P($G(^IBE(350.1,+Y,0)),"^",8)]"":$P(^(0),"^",8),$P($G(^IBE(350.1,+X,0)),"^",8)]"":$P(^(0),"^",8),1:$P($G(^IBE(350.1,+X,0)),"^"))
	;
STOP(JOBDESC)	; Has a tasked job been requested to stop by the user?
	;  Input:   JOBDESC  --  Description of job to be printed
	;  Output:        0  --  Job has not been stopped
	;                 1  --  Job has been stopped
	;
	;  If the job HAS been requested to stop, the Taskman flag ZTSTOP is
	;  set to 1.  The check 'I $G(ZTSTOP)' can also be used in application
	;  code after calling this function, in the event that the function
	;  call is deeply nested.
	;
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 W !!?5,"'"_$S($D(JOBDESC):JOBDESC,1:"Unknown Task")_"' stopped at user's request..."
	Q $G(ZTSTOP)

IBOVOP
IBOVOP	;ALB/RLW - Report of Visits for NSC Outpatients ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
INIT	; 
	;***
	;S XRTL=$ZU(0),XRTN="IBOVOP-1" D T0^%ZOSV ;start rt clock
	;
	D DT^DICRW,HOME^%ZIS S IBQUIT=0
	N IBJ,IBAMT,IBAIEN,IBPAGE,IBLINE,IBACT,IBDATA,IBTITLE,IBDATE,IBADFN,IBEL,IBIEN,IBCL,IBCKIN,IBSDATA,IBSTART,IBPRNT,IBAPPT,IBSTAT,IBFLD1,IBFLD2,IBFLD3,IBFLD4,IBFLD5,IBFLD6,IBSEQ
	S DIR(0)="DA^2901001:NOW:EX",DIR("A")="Start with DATE: " D ^DIR K DIR G:$D(DIRUT) END S IBBDT=+Y
	S DIR(0)="DA^"_+Y_":NOW:EX",DIR("A")="Go to DATE: " D ^DIR K DIR G:$D(DIRUT) END S IBEDT=+Y
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) D  G END
	.S ZTRTN="QUE^IBOVOP",ZTDESC="CATEGORY C OUTPATIENT/REGISTRATION EVENTS",ZTSAVE("IB*")=""
	.D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	.K ZTSK,IO("Q") D HOME^%ZIS
	U IO
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOVOP" D T1^%ZOSV ;stop rt clock
	;
	D QUE
END	K IBBDT,IBEDT,IBQUIT
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOVOP" D T1^%ZOSV ;stop rt clock
	;
	Q
	;
QUE	;entry point if queued
	;***
	;S XRTL=$ZU(0),XRTN="IBOVOP-2" D T0^%ZOSV ;start rt clock
	;
	S IBPAGE=0
	S IBDATE=IBBDT D MAIN^IBOVOP1 Q:IBQUIT
	F  S X1=IBDATE,X2=1 D C^%DTC Q:X>IBEDT  S IBDATE=X K ^TMP("IBOVOP",$J) D MAIN^IBOVOP1 Q:IBQUIT
	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBOVOP" D T1^%ZOSV ;stop rt clock
	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
	;
CPMVST	; Find scheduled appointments for Category C veterans
	D BDT^IBOUTL I (IBBDT="")!(IBEDT="") G END2
	S DFN=0 F  S DFN=$O(^DPT("ACS",6,DFN)) Q:'DFN  S IBFLAG=0,IBDATE=IBBDT F  S IBDATE=$O(^DPT(DFN,"S",IBDATE)) Q:'IBDATE!(IBDATE>(IBEDT+.9999))  D PRINT
END2	K IBBDT,IBEDT,IBDATE,DFN,IBFLAG
	Q
PRINT	; write visit output
	I 'IBFLAG W !!,$P(^DPT(DFN,0),"^") S IBFLAG=1
	W !,$$DAT2^IBOUTL(IBDATE)
	W ?21,"STATUS: ",$P(^DPT(DFN,"S",IBDATE,0),"^",2)
	Q

IBOVOP1
IBOVOP1	;ALB/RLW - Report of Visits for NSC Outpatients ; 12-JUN-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
MAIN	; perform report for day(s)
	D HDR^IBOVOP2
	I $$STOP^IBOUTL("Outpatient/Registration Events Report") S IBQUIT=1 G END
	D APPT,STOPCD,REGS,PRINT^IBOVOP2
END	K DFN,^TMP("IBOVOP",$J),IBAPPT,IBJ,IB
	Q
	;
APPT	; scan visits for NSC patients
	;            field 2="CLINIC APPT"
	;            field 4=clinic
	;            field 5=appt type
	;            field 6=status
	S IBCL="",IBSEQ=0
	F  S IBCL=$O(^SC("AC","C",IBCL)) Q:IBCL=""  S IBFLD4=$P($G(^SC(IBCL,0)),"^") I IBFLD4]"" S:+$G(^("AT"))=6 IBFLD4=$E(IBFLD4,1,13)_" [R]" D
	.S IBJ=IBDATE F  S IBJ=$O(^SC(IBCL,"S",IBJ)) Q:$E(IBJ,1,7)'=IBDATE  D
	..S IBIEN=0 F  S IBIEN=$O(^SC(IBCL,"S",IBJ,1,IBIEN)) Q:IBIEN=""  S DFN=+$G(^(IBIEN,0)) D
	...Q:'$$BIL^DGMTUB(DFN,IBJ)
	...Q:'$D(^DPT(DFN,"S",IBJ,0))  S IBSDATA=^(0)
	...S ^TMP("IBOVOP",$J,$$FLD1(DFN),"CLINIC APPT",$$FLD3(IBJ),IBSEQ)=$E(IBFLD4,1,17)_"^"_$$FLD5($P(IBSDATA,"^",16))_"^"_$E($P($$STATUS^SDAM1(DFN,IBJ,IBCL,IBSDATA),";",3),1,17)_"^"_DFN_"^"_+$P(IBSDATA,"^",20)
	Q
	;
STOPCD	; scan ADD/EDIT STOP CODES for day
	;           field 2="STOP CODE"
	;           field 4=stop code
	;           field 5=appt type
	S IBJ=IBDATE,IBSEQ=0
	F  S IBJ=$O(^SDV(IBJ)) Q:$E(IBJ,1,7)'=IBDATE  S DFN=+$P($G(^SDV(IBJ,0)),"^",2) I $$BIL^DGMTUB(DFN,IBJ) D
	.S IB="" F  S IB=$O(^SDV(IBJ,"CS","B",IB)) Q:IB=""  S I=$O(^(IB,0)) Q:I=""  D:I
	..S IBDATA=$G(^SDV(IBJ,"CS",I,0)) Q:'IBDATA
	..S ^TMP("IBOVOP",$J,$$FLD1(DFN),"STOP CODE",$$FLD3(IBJ),IBSEQ)=$E($P($G(^DIC(40.7,+IBDATA,0)),"^"),1,16)_"^"_$$FLD5($P(IBDATA,"^",5))_"^^"_DFN_"^"_+$P(IBDATA,"^",8),IBSEQ=IBSEQ+1
	Q
	;
REGS	; registrations for day
	S IBJ=IBDATE F  S IBJ=$O(^DPT("ADIS",IBJ)) Q:$E(IBJ,1,7)'=IBDATE  D
	.S DFN="" F  S DFN=$O(^DPT("ADIS",IBJ,DFN)) Q:DFN=""  D
	..S IBAIEN=$O(^DPT("ADIS",IBJ,DFN,0)) Q:IBAIEN=""
	..S IBDATA=$G(^DPT(DFN,"DIS",IBAIEN,0)) Q:$P(IBDATA,"^",2)=2!('$$BIL^DGMTUB(DFN,$P(IBDATA,"^",6)))
	..S Y=$P(IBDATA,"^",3) I Y'="" S C=$P(^DD(2.101,2,0),"^",2) D Y^DIQ
	..S IBFLD4=Y
	..S Y=$P(IBDATA,"^",7) I Y'="" S C=$P(^DD(2.101,6,0),"^",2) D Y^DIQ
	..S ^TMP("IBOVOP",$J,$$FLD1(DFN),"REGISTRATION",$$FLD3(IBJ),IBSEQ)=$E(IBFLD4,1,16)_"^"_$E(Y,1,30)_"^^"_DFN_"^"_+$P(IBDATA,"^",18)
	Q
	;
FLD1(DFN)	; get patient name, l-4 ssn id, classification, insured?
	I '$G(DFN) Q ""
	N IBX,IBY,IBZ S IBX=$$PT^IBEFUNC(DFN),IBZ=""
	D CL^SDCO21(DFN,IBDATE,"",.IBY)
	I $D(IBY(1)) S IBZ="AO"
	I $D(IBY(2)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"IR"
	I $D(IBY(4)) S IBZ=IBZ_$S(IBZ]"":"/",1:"")_"EC"
	Q $E($P(IBX,"^"),1,20)_" "_$E(IBX)_$P(IBX,"^",3)_$S(IBZ]"":"    ["_IBZ_"]",1:"")_$S($$INSURED^IBCNS1(DFN,IBDATE):"    **Insured**",1:"")
	;
FLD3(Y)	; time - convert date/time to time only, no seconds
	I '$G(Y) Q ""
	X ^DD("DD") Q $P($P(Y,"@",2),":",1,2)
	;
FLD5(I)	; get appointment type name
	Q $E($P($G(^SD(409.1,+$G(I),0)),"^",1),1,17)

IBOVOP2
IBOVOP2	;ALB/CPM - Opt/Reg Events Report Print Utilities ; 30-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRINT	; Retrieve data for printing.
	S IBFLD1="" I '$D(^TMP("IBOVOP",$J)) W !!,"No Outpatient activity recorded for Category C patients on ",$$DAT1^IBOUTL(IBDATE),"."
	F  S IBFLD1=$O(^TMP("IBOVOP",$J,IBFLD1)) Q:(IBFLD1="")!(IBQUIT)  W ! D:IBLINE>55 HDR W !,IBFLD1 D  D CHRGS Q:IBQUIT
	.S IBFLD2="" F  S IBFLD2=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2)) Q:(IBFLD2="")!(IBQUIT)  W !?5,IBFLD2 D
	..S IBFLD3="" F  S IBFLD3=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3)) Q:(IBFLD3="")!(IBQUIT)  D
	...S IBSEQ="" F  S IBSEQ=$O(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3,IBSEQ)) Q:(IBSEQ="")!(IBQUIT)  S IBDATA=$G(^(IBSEQ)) D
	....S IBFLD4=$P(IBDATA,"^",1),IBFLD5=$P(IBDATA,"^",2),IBFLD6=$P(IBDATA,"^",3),DFN=$P(IBDATA,"^",4)
	....W ?20,IBFLD3,?26,IBFLD4,?44,IBFLD5,?63,IBFLD6 D CLSF(+$P(IBDATA,"^",5)) W ! S IBLINE=IBLINE+1
	....I IBLINE>55 D HDR W !,IBFLD1 I $D(^TMP("IBOVOP",$J,IBFLD1,IBFLD2,IBFLD3,IBSEQ+1)) W !?5,IBFLD2
	....I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR W !,IBFLD1,!?5,IBFLD2
	D:'IBQUIT PAUSE^IBOUTL
	Q
	;
CHRGS	; Find OP charges for day, if any. Build string for print.
	Q:'$G(DFN)
	I $D(^IB("AFDT",DFN,-IBDATE))=10 D
	.S IBPRNT="" F  S IBPRNT=$O(^IB("AFDT",DFN,-IBDATE,IBPRNT)) Q:IBPRNT=""!(IBQUIT)  D
	..S IBIEN="" F  S IBIEN=$O(^IB("AD",IBPRNT,IBIEN)) Q:IBIEN=""!(IBQUIT)  D
	...S IBDATA=$G(^IB(IBIEN,0)) Q:IBDATA=""
	...I $Y>(IOSL-5) D PAUSE^IBOUTL Q:IBQUIT  D HDR W !,IBFLD1
	...S IBSTAT=$P($G(^IBE(350.21,+$P(IBDATA,"^",5),0)),"^",2)
	...S IBACT=$S($P($G(^IBE(350.1,+$P(IBDATA,"^",3),0)),"^",8)'="":$P(^(0),"^",8),1:$P(^(0),"^",1))
	...S IBAMT=$P(IBDATA,"^",7),IBAMT=$S(IBACT["CANCEL":"*($"_IBAMT_")",1:"* $"_IBAMT)
	...W !?5,IBAMT,?13,IBACT,?63,IBSTAT S IBLINE=IBLINE+1
	Q
	;
HDR	; Print header.
	S IBPAGE=IBPAGE+1,IBLINE=5,IBTITLE="Category C Outpatient and Registration Activity for "_$$DAT1^IBOUTL(IBDATE)
	I $E(IOST,1,2)["C-"!(IBPAGE>1) W @IOF,*13
	W ?(80-$L(IBTITLE))\2,IBTITLE
	S IBTITLE="Printed: "_$$DAT1^IBOUTL(DT)
	W !?(80-$L(IBTITLE))\2,IBTITLE,?70,"Page: "_IBPAGE
	W !!,"Patient/Event",?20,"Time",?26,"Clinic/Stop",?44,"Appt.Type",?63,"(Status)",!
	Q
	;
CLSF(IBOE)	; Display classification results.
	;  Input:    IBOE  --  Pointer to Outpatient Encounter in file #409.68
	I '$G(IBOE) G CLSFQ
	N I,IBCLS,IBCLSD,IBF S IBF=0,IBCLSD=$$ENCL^IBAMTS2(IBOE)
	I IBCLSD]"" F I=1,2,4 S IBCLS=$P(IBCLSD,"^",I) I IBCLS]"" W:'IBF !?6 W:IBF "  " W "Care related to ",$S(I=1:"AO",I=2:"IR",1:"EC"),"? ",$S(IBCLS:"YES",1:"NO") S IBF=1
CLSFQ	Q

IBP
IBP	;ALB/CPM - ARCHIVE/PURGING OPERATIONS ; 17-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
FIND	; Entry point to Find Billing Data to Archive
	S IBOP=1 G START
	;
ARCHIVE	; Entry point to Archive Billing Data
	S IBOP=2 G START
	;
PURGE	; Entry point to Purge Billing Data
	S IBOP=3
	;
	;
START	; Begin search/archive/purge operations.
	I $$NODUZ^IBPU1 G END ; no DUZ code
	I IBOP>1,$$NOESIG^IBPU1(DUZ) G END ; no Electronic Signature Code
	S IBLINE="",$P(IBLINE,"-",80)=""
	;
	; - write header
	D HOME^%ZIS
	S IBHDR="***   "_$P("Find^Archive^Purge","^",IBOP)_" Billing Data"_$S(IBOP=1:" to Archive",1:"")_"   ***"
	W @IOF,!?80-$L(IBHDR)\2,IBHDR,!
	W !,"This option is used to ",$P("begin the archive process for^archive data from^purge data from","^",IBOP)," the following files:",!
	W !?8,"#350   INTEGRATED BILLING ACTION",!?8,"#351   CATEGORY C BILLING CLOCK",!?8,"#399   BILL/CLAIMS",!!
	I IBOP=1 W "Specify your search criteria for each file.  "
	W "The ",$P("search^archiving process^purge process","^",IBOP)," will be queued.",!
	;
	; - issue all operational prompts
	K IBD
	F I=350,351,399 W !,IBLINE S J=$$ASK^IBPU(I,IBOP) G:J<0 END I J S IBD(I)="" I IBOP=1 S K=$$DAT^IBPU G:K<0 END S IBD(I)=K_"^"_+$P(J,"^",2)
	I '$D(IBD) X "F I=$Y:1:(IOSL-3) W !" S DIR(0)="E" D ^DIR K DIR G END
	;
	; - select device if archiving
	I IBOP=2 S %ZIS="N",%ZIS("B")="",%ZIS("A")="Archive entries to what device: " D ^%ZIS G:POP END
	;
	; - must enter Electronic Signature to archive or purge
	I IBOP>1,'$$ESIG^IBPU1(DUZ) G END
	;
	; - if ok to continue, task off job
	I $$OKAY^IBPU1(IBOP) D TASK^IBPU1
	;
END	; - clean up and quit
	D HOME^%ZIS
	K I,IBD,IBHDR,IBLINE,IBOP,J,K,Y
	Q
	;
	;
	;
QUE	; Tasked Entry point to begin search/archive/purge operations.
	;
	;  Input:  IBD(file number) --  piece 1:  date through which to archive
	;                               piece 2:  log entry if restarting
	;                      IBOP --  1 (Search), 2 (Archive), 3 (Purge)
	;                       DUZ --  user ID; retained by Taskman
	;
	; - perform operation on each requested file
	S IBF="" F  S IBF=$O(IBD(IBF)) Q:'IBF  D @("^IBP"_$P("F^A^P","^",IBOP))
	;
	; - send confirmation message to user
	D ^IBPUBUL
	;
	; - clean up and quit
	K DFN,DATE,IBBDT,IBCNT,IBD,IBDATA,IBEDT,IBF,IBFNAME,IBHDT,IBLINE,IBLOG,IBN,IBOFF,IBOP,IBPAGE,IBROOT,IBSTAT,IBTMDA,IBTMPL,IBRCNO
	Q

IBPA
IBPA	;ALB/CPM - ARCHIVE BILLING DATA ; 22-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Tasked job sorts search template entries by patient and date
	; and writes each entry to the archive device.
	;
	;  Input:  IBD(file number) --  piece 1:  date through which to archive
	;                               piece 2:  log entry if restarting
	;                      IBOP --  2 (Archive Billing Data)
	;                       DUZ --  user ID; retained by Taskman
	;
	;  Called by QUE^IBP
	;
	;
	; Archive entries for each selected file. 
	S IBSTAT=$$LOG^IBPU(IBF)
	I 'IBSTAT S $P(IBD(IBF),"^",4)="Invalid File to Archive" G END
	I $P(IBD(IBF),"^",2) D DEL^IBPU1(IBF) F I=2.01,2.02,2.03 D UPD^IBPU1($P(IBD(IBF),"^",2),I,"/@")
	S IBLOG=$$LOGIEN^IBPU1(IBF),$P(IBD(IBF),"^",3)=IBLOG
	I 'IBLOG S $P(IBD(IBF),"^",4)="Unable to Retrieve Current Entry to Log File" G END
	S IBTMPL=$P($G(^IBE(350.6,IBLOG,0)),"^",2)
	I IBTMPL="" S $P(IBD(IBF),"^",4)="Log Entry has no Search Template" D UPD^IBPU1(IBLOG,.05,"/3") G END
	S IBTMDA=$O(^DIBT("B",IBTMPL,0))
	I 'IBTMDA S $P(IBD(IBF),"^",4)="Search Template Name is Invalid" D UPD^IBPU1(IBLOG,.05,"/3") G END
	I '$D(^DIBT(IBTMDA,1)) S $P(IBD(IBF),"^",4)="Search Template has no Entries to Archive" D UPD^IBPU1(IBLOG,.05,"/3") G END
	D UPD^IBPU1(IBLOG,2.01,"NOW") ; set start time of archive
	; - sort all entries by patient and date
	S IBROOT=^DIC(IBF,0,"GL"),IBN=0
	F  S IBN=$O(^DIBT(IBTMDA,1,IBN)) Q:'IBN  S DFN=$P($G(@(IBROOT_IBN_",0)")),"^",2),DATE=$S(IBF=350:$P($G(@(IBROOT_IBN_",1)")),"^",2),1:$P($G(@(IBROOT_IBN_",0)")),"^",3)),^TMP($J,"IBPA",+DFN,+DATE,IBN)=""
	; - write out the entries
	D WRITE K ^TMP($J,"IBPA")
	I 'IBCNT S $P(IBD(IBF),"^",4)="No Entries Archived" D DEL^IBPU1(IBF),UPD^IBPU1(IBLOG,.05,"/3") G END
	D UPD^IBPU1(IBLOG,.04,IBCNT) ; update log entry with count
	D UPD^IBPU1(IBLOG,2.02,"NOW") ; set end time of archive in log
END	Q
	;
	;
WRITE	; Write out each entry.
	S (DFN,DATE,IBCNT,IBN,IBPAGE)=0,DIC=IBROOT,IBFNAME=$P($G(^DIC(IBF,0)),"^")
	D NOW^%DTC S IBHDT=$$DAT2^IBOUTL(%)
	S IBLINE="",$P(IBLINE,"-",IOM)="" D:IBF'=399 HDR
	F  S DFN=$O(^TMP($J,"IBPA",DFN)) Q:'DFN  F  S DATE=$O(^TMP($J,"IBPA",DFN,DATE)) Q:'DATE  F  S IBN=$O(^TMP($J,"IBPA",DFN,DATE,IBN)) Q:'IBN  D
	. I IBF=399 D HDR
	. I IBF'=399 S IBOFF=$S(IBF=350:9,1:11) D:$Y>(IOSL-IBOFF) HDR
	. S DA=IBN,IBCNT=IBCNT+1 D EN^DIQ
	Q
	;
HDR	; Print a short header at the top of each page.
	S IBPAGE=IBPAGE+1
	W @IOF,"Archived "_IBFNAME,?(IOM-42),IBHDT,?(IOM-11),"Page: ",IBPAGE,!,IBLINE,!
	Q

IBPEX
IBPEX	;ALB/AAS - PURGE MEDICATION CO-PAY EXEMPTIONS ; 12-NOV-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	I '$D(IOF) D HOME^%ZIS
	;
	W @IOF,?15,"Purge Medication Copayment Exemptions",!!
	;
	S DIR("?")="Enter the date through which you want to purge entries for the BILLING EXEMPTIONS file (354.1)"
	S DIR("?",1)="This must be a date at least one year in the past."
	S DIR("?",2)="This option will purge inactive exemptions whose exemption date is earlier"
	S DIR("?",3)="than this date and active exemptions older than one year before this date."
	S DIR(0)="D^2920101:"_(DT-10000)_":EX",DIR("A")="Purge Date"
	S Y=DT-10000 D D^DIQ S DIR("B")=Y
	D ^DIR K DIR
	I $D(DIRUT)!(Y'?7N) G END
	S IBPDT=Y
	;
	W !!,"There is no output from this routine it just purges.",!
	S DIR(0)="Y",DIR("A")="Are you sure you want to purge now",DIR("B")="NO" D ^DIR K DIR
	I $D(DIRUT)!(Y'=1) G END
	;
DEV	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBPEX",ZTSAVE("IB*")="",ZTDESC="IB Purge exemption entries" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	U IO
	;
DQ	; -- entry point for later
	;    if exemption not active, not current, earlier than ibpdt
	;         or
	;    if active, not current, earlier that ibpdt-10000
	;         then purge
	;
	S (IBDT,IBPURG,IBPCNT,IBPAG)=0
	D NOW^%DTC S Y=% D D^DIQ S IBPDAT=Y
	F  S IBDT=$O(^IBA(354.1,"B",IBDT)) Q:'IBDT!(IBDT>IBPDT)  S IBDA=0 F  S IBDA=$O(^IBA(354.1,"B",IBDT,IBDA)) Q:'IBDA  D CHK,PURGE:IBPURG
	D HDR,REPORT
	G END
	;
END	Q:$D(ZTQUEUED)
	D ^%ZISC
	;K IBPDT,IBPURG,DIR
	Q
	;
CHK	; -- check entries
	W:'$D(ZTQUEUED) "."
	S IBPURG=0
	S X=$G(^IBA(354.1,IBDA,0)) G CHKQ:X=""
	S X1=$G(^IBA(354,$P(X,"^",2),0))
	;
	; -- quit if contains ar pass dates
	I $P(X,"^",14) G CHKQ
	;
	; -- quit if is current exemption
	I +X=$P(X1,"^",3) G CHKQ
	;
	; -- if active, older than purge date - 1 year
	I $P(X,"^",10),+X<(IBPDT-10000) S IBPURG=1
	;
	; -- if inactive, older than purge date
	I '$P(X,"^",10),+X<IBPDT S IBPURG=1
	;
CHKQ	Q
	;
PURGE	; -- blow away the entry
	S DA=IBDA,DIK="^IBA(354.1," D ^DIK
	K DA,DIK
	S IBPCNT=IBPCNT+1
	Q
	;
HDR	; -- simple header for 1 line report
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W "BILLING EXEMPTION PURGE REPORT",?IOM-30,IBPDAT," PAGE ",IBPAG
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
REPORT	; -- simple report
	I 'IBPCNT W !,"No exemption found that met purge criteria" G REPORTQ
	W !,"There were ",IBPCNT," entries purged from the billing exemption file"
REPORTQ	;
	Q

IBPF
IBPF	;ALB/CPM - FIND BILLING DATA TO ARCHIVE ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Tasked job which builds search template for each selected Billing
	; data file and populates with eligible records to archive.
	;
	;  Input:  IBD(file number) --  piece 1:  date through which to archive
	;                               piece 2:  log entry if restarting
	;                      IBOP --  1 (Find Billing Data to Archive)
	;                       DUZ --  user ID; retained by Taskman
	;
	;  Called by QUE^IBP
	;
	;
	; Perform search of all entries to be archived for each file.
	S IBSTAT=$$LOG^IBPU(IBF)
	I 'IBSTAT S $P(IBD(IBF),"^",4)="Invalid File to Archive" G END
	I $P(IBD(IBF),"^",2) D DEL^IBPU1(IBF),UPD^IBPU1($P(IBD(IBF),"^",2),.05,"/3")
	S IBLOG=$$LOGADD^IBPFU(IBF),$P(IBD(IBF),"^",3)=IBLOG
	I 'IBLOG S $P(IBD(IBF),"^",4)="Unable to Add Entry to Log File" G END
	S IBTMPL=$$TEMPL^IBPFU(IBF,IBLOG)
	I 'IBTMPL S $P(IBD(IBF),"^",4)="Unable to Create New Search Template" G END
	D UPD^IBPU1(IBLOG,1.01,"NOW") ; set start time of search
	S IBEDT=+IBD(IBF) ; set last valid date to select entry
	D @$S(IBF=350:"IB^IBPF1",IBF=351:"CLOCK",1:"BILL^IBPF1")
	I 'IBCNT S $P(IBD(IBF),"^",4)="No Entries Found to Archive" D DEL^IBPU1(IBF),UPD^IBPU1(IBLOG,.05,"/3") G END
	D UPD^IBPU1(IBLOG,.04,IBCNT) ; update log entry with count
	D UPD^IBPU1(IBLOG,1.02,"NOW") ; set end time of search in log
END	Q
	;
	;
CLOCK	; Find Category C billing clocks which may be purged.
	;  Input:     IBTMPL  --  Search template to store entries
	;              IBEDT  --  Last date for which a clock may be purged
	;  Output:     IBCNT  --  number of records stored
	S X1=IBEDT,X2=-364 D C^%DTC S IBBDT=X
	;
	; - cancelled and closed clocks which 'end' on or before the
	; - 'Purge End Date,' or 'start' on or before the 'Purge Start
	; - Date' are eligible for archiving/purging.
	;
	S (DFN,IBCLDA)=0,IBCNT=0
	F  S DFN=$O(^IBE(351,"AIVDT",DFN)) Q:'DFN  S IBDATE=-(IBEDT+.1) D
	. F  S IBDATE=$O(^IBE(351,"AIVDT",DFN,IBDATE)) Q:'IBDATE  D
	..  F  S IBCLDA=$O(^IBE(351,"AIVDT",DFN,IBDATE,IBCLDA)) Q:'IBCLDA  D
	...   S IBCLND=$G(^IBE(351,+IBCLDA,0)) I IBCLND="" D KILL Q
	...   Q:$P(IBCLND,"^",4)=1  ; Clock is still active
	...   I '$P(IBCLND,"^",10) Q:$P(IBCLND,"^",3)>IBBDT
	...   E  Q:$P(IBCLND,"^",10)>IBEDT
	...   S IBCNT=IBCNT+1,^DIBT(IBTMPL,1,IBCLDA)="" ; store in template
	;
	; - kill variables and quit.
	K IBDATE,DFN,IBCLDA,IBCLND,IBBDT,X,X1,X2
	Q
	;
KILL	; Kill leftover cross-references for a missing entry.
	K ^IBE(351,IBCLDA,0),^(1)
	K ^IBE(351,"ACT",DFN,IBCLDA)
	K ^IBE(351,"AIVDT",DFN,DATE,IBCLDA)
	K ^IBE(351,"B",IBSITE_IBCLDA,IBCLDA)
	K ^IBE(351,"C",DFN,IBCLDA)
	Q

IBPF1
IBPF1	;ALB/CPM - FIND BILLING DATA TO ARCHIVE (CON'T.) ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
BILL	; Find all UB-82's which may be archived.  Check only those bills
	; whose First Printed Date is prior to the last date on which a
	; bill must have been closed out in Accounts Receivable.
	;
	;  Input:  IBEDT  --  last valid date on which a bill may be closed out
	;         IBTMPL  --  search template in which to store entries
	;  Output: IBCNT  --  number of IB Actions which may be archived.
	;
	S (IBDT,IBN)="",IBCNT=0
	F  S IBDT=$O(^DGCR(399,"AP",IBDT)) Q:'IBDT!(IBDT>IBEDT)  F  S IBN=$O(^DGCR(399,"AP",IBDT,IBN)) Q:'IBN  I $$ALL(IBN,IBEDT) S IBCNT=IBCNT+1,^DIBT(IBTMPL,1,IBN)=""
	K IBCLO,IBDT,IBN
	Q
	;
	;
IB	; Find Pharmacy Co-pay IB Actions which may be archived.  Check
	; only those Pharmacy Co-pay IB Actions which have been added to the
	; database prior to the last date on which a bill must have been
	; closed out in Accounts Receivable.  Only "parent actions" will
	; be checked, and if the parent action may be archived, the parent
	; and its "children" will all be marked for archiving.
	;
	;  Input:  IBEDT  --  last valid date on which a bill may be closed out
	;         IBTMPL  --  search template in which to store entries
	;  Output: IBCNT  --  number of IB Actions which may be archived.
	;
	; - first find all Pharmacy action types.
	K IBA F I=1:1 S IBATYPN=$P($T(PSO+I),";;",2,99) Q:IBATYPN=""  S IBATYP=$O(^IBE(350.1,"B",IBATYPN,0)) I IBATYP S IBA(IBATYP)=""
	;
	; - locate all Pharmacy Co-pay actions which may be archived.
	S (IBDT,IBN)="",IBCNT=0
	F  S IBDT=$O(^IB("D",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.3))  D
	. F  S IBN=$O(^IB("D",IBDT,IBN)) Q:'IBN  D:$D(^IB("AD",IBN))
	..  S IBND=$G(^IB(IBN,0)) Q:IBND=""  ; 0th node missing
	..  Q:'$D(IBA(+$P(IBND,"^",3)))  ; not a Pharmacy co-pay action
	..  Q:$$RXFILE(IBND)  ; billed prescription has not been archived
	..  S IBAR=$P(IBND,"^",11) Q:IBAR=""
	..  S X="RCFN03" X ^%ZOSF("TEST")
	..  S IBAR=$S($T:$$BIEN^RCFN03(IBAR),1:$O(^PRCA(430,"B",IBAR,0)))
	..  Q:'IBAR  S IBCLO=$$PUR^PRCAFN(IBAR) ; get date bill was closed
	..  I IBCLO>0,IBCLO'>IBEDT F DA=0:0 S DA=$O(^IB("AD",IBN,DA)) Q:'DA  S IBCNT=IBCNT+1,^DIBT(IBTMPL,1,DA)=""
	;
	; - kill variables and quit.
	K DA,IBA,IBAR,IBATYP,IBATYPN,IBCLO,IBDT,IBN,IBND,X
	Q
	;
	;
RXFILE(IBND)	; Is the prescription still resident on-line?
	;         Input:    IBND  --  zeroth node of IB Action
	;         Output:     1   --  the rx is still on file
	;                     0   --  the rx is no longer on file (archived)
	N IBSL
	S IBSL=$P(IBND,"^",4) I +IBSL'=52 Q 0
	I $D(^PSRX($P($P(IBSL,";"),":",2),0)) Q 1
	Q 0
	;
ALL(IBN,DATE)	; Are all bills for an episode of care closed before DATE?
	;         Input:     IBN  --  ien of bill in file #399
	;                   DATE  --  the date by which the bills must be closed
	;         Output:     1   --  all bills are closed
	;                     0   --  at least one bill is not closed
	N I,X
	S X=$$CLO(IBN,DATE)
	I X S I=0 F  S I=$O(^DGCR(399,"AC",IBN,I)) Q:'I  I I'=IBN,'$$CLO(I,DATE) S X=0 Q
	Q X
	;
CLO(IBN,DATE)	; Is the bill closed before DATE?
	;         Input:     IBN  --  ien of bill in file #399
	;                   DATE  --  the date by which the bill must be closed
	;         Output:     1   --  the bill is closed
	;                     0   --  the bill is not closed
	N CLO S CLO=$$PUR^PRCAFN(IBN)
	Q $S(CLO<0:0,1:CLO'>DATE)
	;
	;
PSO	; Pharmacy Co-pay Action Types
	;;PSO NSC RX COPAY CANCEL
	;;PSO NSC RX COPAY NEW
	;;PSO NSC RX COPAY UPDATE
	;;PSO SC RX COPAY CANCEL
	;;PSO SC RX COPAY NEW
	;;PSO SC RX COPAY UPDATE
	;

IBPFU
IBPFU	;ALB/CPM - FIND BILLING DATA TO ARCHIVE - UTILITIES ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
LAST(NUM)	; Find last valid date for archiving a billing record.
	;         Input:   NUM  --  number of previous fiscal years to retain.
	;         Output:  Date of last day of fiscal year which may be archived
	N FY S:'$D(NUM) NUM=1
	S FY=$S($E(DT,4,5)<10:$E(DT,1,3),1:$E(DT,1,3)+1),FY=FY-(NUM+1)
	Q FY_"0930"
	;
LOGADD(IBFILE)	; File a log entry in file #350.6
	;         Input:   IBFILE  --  File number of file to be archived
	;         Output:  ien of new log entry, or 0 if error occurred.
	N DA,DD,DO,DIC,DIE,DR,DLAYGO,IEN,X
	S IEN=0 L +^IBE(350.6,0):10 E  G LOGADDQ
	S X=$P($S($D(^IBE(350.6,0)):^(0),1:"^^-1"),"^",3)+1 I 'X G LOGADDQ
	S DIC="^IBE(350.6,",DIC(0)="L",DLAYGO=350.6
	F X=X:1 I X>0,'$D(^IBE(350.6,X)) L +^IBE(350.6,X):1 I $T,'$D(^IBE(350.6,X)) S DINUM=X D FILE^DICN I +Y>0 Q
	S (DA,IEN)=+Y,DIE="^IBE(350.6,",DR=".02////IB ARCHIVE/PURGE #"_DA_";.03////"_IBFILE_";.05////1;1.01///NOW"
	D ^DIE L -^IBE(350.6,IEN) I $D(Y) S IEN=0
LOGADDQ	L -^IBE(350.6,0) Q IEN
	;
TEMPL(IBFILE,LOGDA)	; Add a new search template to file #.401 (SORT TEMPLATES)
	;         Input:   IBFILE  --  File number of file to be archived
	;                  LOGDA   --  IEN of log entry
	;         Output:  ien of new template, or 0 if error occurred.
	N DA,DD,DO,DIC,DIE,DR,IEN,X
	I '$D(IBFILE)!('$D(LOGDA)) S IEN=0 G TEMPLQ
	S X="IB ARCHIVE/PURGE #"_LOGDA,DIC(0)="",DIC="^DIBT(" D FILE^DICN
	S (DA,IEN)=+Y,DIE=DIC,DR="2////"_DT_";3////"_DUZ(0)_";4////"_IBFILE_";5////"_DUZ_";6////"_DUZ(0)_";8////1"
	D ^DIE I $D(Y) S IEN=0
TEMPLQ	Q IEN

IBPO
IBPO	;ALB/CPM - ARCHIVE/PURGING OUTPUTS ; 23-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
LST	; List Archive/Purge Log Entries
	S DIC="^IBE(350.6,",FLDS="[IB PURGE LIST LOG ENTRIES]",L=0,(BY,FR,TO)=""
	D EN1^DIP
	Q
	;
	;
INQ	; Archive/Purge Log Inquiry
	S DIC="^IBE(350.6,",DIC(0)="QEAMZ",DIC("A")="Select LOG #: " D ^DIC K DIC G INQQ:Y<0 S IBDA=+Y
	S %ZIS="QM" D ^%ZIS G:POP INQQ
	I $D(IO("Q")) S ZTRTN="INQS^IBPO",ZTSAVE("IBDA")="",ZTDESC="ARCHIVE/PURGE LOG INQUIRY" D ^%ZTLOAD K IO("Q") D HOME^%ZIS G INQQ
	U IO
	;
INQS	; Tasked Entry Point
	D NOW^%DTC W:$E(IOST,1,2)["C-" @IOF,*13 W " LOG #: ",IBDA,?15,$S($D(^DIC($P($G(^IBE(350.6,+IBDA,0)),"^",3),0)):$P(^(0),"^"),1:"FILE UNSPECIFIED"),?(IOM-25),$$DAT2^IBOUTL(%),!
	F I=1:1:IOM W "="
	S IBLOG0=$G(^IBE(350.6,+IBDA,0)),IBLOG1=$G(^(1)),IBLOG2=$G(^(2)),IBLOG3=$G(^(3))
	W !!,$J("Search Template : ",27),$S($P(IBLOG0,"^",2)]"":$P(IBLOG0,"^",2),1:"UNSPECIFIED")
	S IBX=$S($P(IBLOG3,"^",2):"Purged",$P(IBLOG2,"^",2):"Archived",1:"Found")
	W !,$J("# Records "_IBX_" : ",27),+$P(IBLOG0,"^",4)
	W !,$J("Log Status : ",27),$P("OPEN^CLOSED^CANCELLED","^",+$P(IBLOG0,"^",5))
	F I=1,2,3 D
	. S IBNOD="IBLOG"_I,IBNAM=$P("Search^Archive^Purge","^",I)
	. Q:@IBNOD=""
	. S Y=+@IBNOD W !!,$J(IBNAM_" Begin Date/Time : ",27),$S(Y:$$DAT2^IBOUTL(Y),1:"UNSPECIFIED")
	. S Y=$P(@IBNOD,"^",2) W !,$J(IBNAM_" End Date/Time : ",27),$S('Y:"UNSPECIFIED",1:$$DAT2^IBOUTL(Y))
	. S Y=$P(@IBNOD,"^",3) W !,$J(IBNAM_" Initiator : ",27),$S($D(^VA(200,Y,0)):$P(^(0),"^"),1:"UNSPECIFIED")
	F I=$Y:1:(IOSL-4) W !
	I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR
	Q:$D(ZTQUEUED)  D ^%ZISC
INQQ	K DIRUT,DUOUT,DTOUT,IBDA,IBLOG0,IBLOG1,IBLOG2,IBLOG3,IBX,X,Y
	Q
	;
	;
TMP	; List Search Template Entries
	S IBF=$$SEL^IBPUDEL G TMPQ:'IBF
	;
	; - display selection
	W ! F I=1:1:80 W "-"
	W !,"Template entries will be listed for the following file:"
	S IBOP=$P(IBD(IBF),"^",2),IBLOG=$P(IBD(IBF),"^",3)
	W !,$P($G(^DIC(IBF,0)),"^"),"      Entries ",$S(IBOP>2:"Archived",1:"Found")," on ",$$DAT2^IBOUTL($P($G(^IBE(350.6,IBLOG,IBOP-1)),"^",2)),!
	F I=1:1:80 W "-"
	W !!,"Specify Sort Criteria:",!
	;
	; - print list
	S DIC=^DIC(IBF,0,"GL"),L=0,FLDS=$S(IBF=399:".02;L25,.07;L20,.13;L10,.14",IBF=351:".02,.03,.04,.1",1:".02;L25,.08,.05;L10,DATE(#12);""DATE ADDED""")
	S BY="[IB ARCHIVE/PURGE #"_$$LOGIEN^IBPU1(IBF)_"],@.02,@",DHD=$P(^DIC(IBF,0),"^")_" SEARCH TEMPLATE"
	D EN1^DIP
	;
TMPQ	K I,IBD,IBF,IBLOG,IBOP,IBTM,IBTMDA,J,K
	Q

IBPP
IBPP	;ALB/CPM - PURGE BILLING DATA ; 22-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Tasked job inverts search template entries and deletes them from
	; the source file.
	;
	;  Input:  IBD(file number) --  piece 1:  date through which to archive
	;                      IBOP --  3 (Purge Billing Data)
	;                       DUZ --  user ID; retained by Taskman
	;
	;  Called by QUE^IBP
	;
	;
	; Purge entries for each selected file. 
	S IBSTAT=$$LOG^IBPU(IBF)
	I 'IBSTAT S $P(IBD(IBF),"^",4)="Invalid File to Purge" G END
	S IBLOG=$$LOGIEN^IBPU1(IBF),$P(IBD(IBF),"^",3)=IBLOG
	I 'IBLOG S $P(IBD(IBF),"^",4)="Unable to Retrieve Current Entry to Log File" G END
	S IBTMPL=$P($G(^IBE(350.6,IBLOG,0)),"^",2)
	I IBTMPL="" S $P(IBD(IBF),"^",4)="Log Entry has no Search Template" D UPD^IBPU1(IBLOG,.05,"/3") G END
	S IBTMDA=$O(^DIBT("B",IBTMPL,0))
	I 'IBTMDA S $P(IBD(IBF),"^",4)="Search Template Name is Invalid" D UPD^IBPU1(IBLOG,.05,"/3") G END
	I '$D(^DIBT(IBTMDA,1)) S $P(IBD(IBF),"^",4)="Search Template has no Entries to Archive" D UPD^IBPU1(IBLOG,.05,"/3") G END
	D UPD^IBPU1(IBLOG,3.01,"NOW") ; set start time of purge
	; - "invert" search template entries
	S IBN=0 F  S IBN=$O(^DIBT(IBTMDA,1,IBN)) Q:'IBN  S ^TMP($J,"IBPP",-IBN)=""
	; - purge the entries
	S DIK=^DIC(IBF,0,"GL"),IBCNT=0,IBRCNO="" F  S IBRCNO=$O(^TMP($J,"IBPP",IBRCNO)) Q:IBRCNO=""  S (DA,IBN)=-IBRCNO,IBCNT=IBCNT+1 D:IBF=399 NEWV D ^DIK
	K ^TMP($J,"IBPP")
	I 'IBCNT S $P(IBD(IBF),"^",4)="No Entries Purged" D DEL^IBPU1(IBF),UPD^IBPU1(IBLOG,.05,"/3") G END
	D UPD^IBPU1(IBLOG,.04,IBCNT) ; update log entry with count
	D UPD^IBPU1(IBLOG,3.02,"NOW") ; set end time of purge in log
	D UPD^IBPU1(IBLOG,.05,"/2") ; close out log entry
	D DEL^IBPU1(IBF) ; delete search template
END	Q
NEWV	;
	N DA,DIE,DIK
	D ^IBPU2
	Q

IBPU
IBPU	;ALB/CPM - ARCHIVE/PURGING UTILITIES ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ASK(FILE,JOB)	; User prompts to find/archive/purge entries for each data file.
	;         Input:  FILE -- Billing Data file number
	;                  JOB --  1  Find Billing Data to Archive
	;                      --  2  Archive Billing Data
	;                      --  3  Purge Billing Data
	;         Output:  -1  -- Exit option
	;                  0   -- No action to be taken
	;                  1^a -- Take action.
	;                          Optional second piece (a) is ien of
	;                          log entry if a restart is required.
	N FNAME,STATUS,Y
	S STATUS=$$LOG($G(FILE)) I 'STATUS W !,"File #",FILE," is not defined." Q 0
	S FNAME=$P($G(^DIC(FILE,0)),"^")
	I (JOB=2&(STATUS=1))!(JOB=3&(STATUS<3)) W !,"You must ",$S(STATUS=1:"find ",1:"archive "),FNAME," entries before you can ",$S(JOB=2:"archive.",1:"purge.") Q 0
	S STATUS=STATUS-JOB+1
	Q $S(STATUS>1:$$RESTART(FNAME,FILE,JOB),1:$$START(FNAME,JOB))
	;
START(NAME,JOB)	; Start find/archive/purge action?
	;         Input:  NAME -- File name
	;                  JOB -- same as above (1, 2, or 3)
	;         Output:    1 -- Yes,   0 -- No,  -1 -- Exit Option
	N DESC,DIR,DIRUT,DUOUT,DTOUT,Y
	S DESC=$P("find^archive^purge","^",JOB)
	S DIR(0)="Y",DIR("A")="Do you wish to "_DESC_" "_NAME_" file entries"
	S DIR("?",1)="Enter:  'Y'  to "_DESC_" "_NAME_" entries"
	S DIR("?",2)="        'N'  to ignore "_$P("find^archiv^purg","^",JOB)_"ing "_NAME_" entries, or"
	S DIR("?")="        '^'  to quit this option." D ^DIR
	Q $S($D(DIRUT)!($D(DUOUT))!($D(DTOUT)):-1,Y:1,1:0)
	;
RESTART(NAME,FILE,JOB)	; Re-start find/archive action?
	;         Input:  NAME -- File name
	;                 FILE -- Billing Data file number
	;                  JOB -- same as above (only 1 or 2)
	;         Output:    1 -- Yes,   0 -- No,  -1 -- Exit Option
	N DIR,DIRUT,DUOUT,DTOUT,Y
	W !,NAME," file entries have already been ",$P("found.^archived.","^",JOB)
	S DIR(0)="Y",DIR("A")="Do you wish to "_$S(JOB=1:"delete your search template and start",1:"archive these entries")_" again"
	S DIR("?",1)="Enter:  'Y'  to "_$S(JOB=1:"delete your current search template and search",1:"archive entries")_" again"
	S DIR("?",2)="        'N'  to "_$S(JOB=1:"retain your current search template",1:"ignore archiving this file")_", or"
	S DIR("?")="        '^'  to quit this option." D ^DIR
	Q $S($D(DIRUT)!($D(DUOUT))!($D(DTOUT)):-1,Y:"1^"_$$LOGIEN^IBPU1(FILE),1:0)
	;
LOG(FILE)	; Determine Log status for a file.
	;         Input:  FILE -- Billing Data file number
	;         Output:  0   -- File undefined, or invalid file number
	;                  1   -- No active log entry on file
	;                  2   -- Active log entry on file - entries FOUND
	;                  3   -- Active log entry on file - entries ARCHIVED
	N Y,LOG,LOG1,LOG2
	I '$D(^DIC(+$G(FILE))) S Y=0 G LOGQ
	S DA=$$LOGIEN^IBPU1(FILE)
	S LOG=$G(^IBE(350.6,DA,0)),LOG1=$G(^(1)),LOG2=$G(^(2))
	I $P(LOG,"^",5)'=1 S Y=1
LOGQ	Q $S($D(Y):Y,$P(LOG2,"^",2):3,$P(LOG1,"^",2):2,1:1)
	;
NUM()	; How many previous fiscal year's worth of data should be retained?
	; Input:  NONE    Output:  number of years, or  -1  to exit option.
	N DIR,DIRUT,DUOUT,DTOUT,Y
	S DIR("A")="Select the number of previous fiscal year's data to retain: "
	S DIR("?",1)="Please select the number of previous fiscal years' worth of billing"
	S DIR("?")="data that you wish to retain in your system, or '^' to exit."
	S DIR(0)="NA^1:20:0",DIR("B")=1 D ^DIR
	Q $S($D(DIRUT)!($D(DUOUT))!($D(DTOUT)):-1,1:Y)
	;
DAT()	; What is the date through which data should be archived?
	; Input:  NONE    Output:  final date for archiving, or  -1  to exit.
	N %DT,DTOUT,X,Y
	S %DT="AEPX",%DT(0)=-$$LAST^IBPFU(1),%DT("A")="Enter the final date through which data should be archived: "
	D ^%DT
	Q Y

IBPU1
IBPU1	;ALB/CPM - ARCHIVE/PURGING UTILITIES (CON'T.) ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
NODUZ()	; Check for the existence of DUZ
	;         Input:   NONE
	;         Output:  0  --  has DUZ,  1  --  no DUZ
	N Y
	I $D(DUZ)[0 S Y=1 W !!,"Your DUZ code must be defined in order to use this option.",!
	Q +$G(Y)
	;
NOESIG(USER)	; Check Electronic Signature Code
	;         Input:   USER  --   ien in New Person file
	;         Output:  0  --  has code,  1  --  no code
	N Y
	I $P($G(^VA(200,USER,20)),"^",4)="" S Y=1 W !!,"You must enter your Electronic Signature Code in order to use this option.",!
	Q +$G(Y)
	;
ESIG(USER)	; Enter Electronic Signature Code
	;         Input:   USER  --   ien in New Person file
	;         Output:  0  --  not entered or '^' out,  1  --  entered OK
	N I,J,SIG,X,Y S SIG=$P($G(^VA(200,USER,20)),"^",4),Y=0
	W ! F J=1:1 Q:J=4  W !,"ENTER ELECTRONIC SIGNATURE: " X ^%ZOSF("EOFF") R X:$S($D(DTIME):DTIME,1:60) X ^%ZOSF("EON") Q:'$T!(X="")!($E(X)="^")  D HASH^XUSHSHP I X=SIG S Y=1 Q
	W !,"Your Electronic Signature Code has " W:'Y "not " W "been verified."
	Q Y
	;
OKAY(JOB)	; Okay to queue this job?
	;         Input:   JOB  --  1 - Search, 2 - Archive, 3 - Purge
	;         Output:  0  --  No, not okay,  1  --  Yes, okay to continue
	N DIR,DIRUT,DUOUT,DTOUT,Y
	S DIR(0)="Y",DIR("A")="Is it okay to queue this "_$P("search^archive^purge","^",JOB)
	S DIR("?",1)="Enter:  'Y'  if you wish to task off this job, or"
	S DIR("?")="        'N' or '^'  to quit this option." W ! D ^DIR
	Q $S($D(DIRUT)!($D(DUOUT))!($D(DTOUT)):0,1:Y)
	;
TASK	; Task off job.
	;  Input:  IBOP  --  1 - Search, 2 - Archive, 3 - Purge
	;          IBD(  --  input data
	S ZTRTN="QUE^IBP",ZTDTH=$H,(ZTSAVE("IBD("),ZTSAVE("IBOP"))="",ZTIO=$S(IBOP=2:ION,1:"")
	S ZTDESC=$P("FIND^ARCHIVE^PURGE","^",IBOP)_" BILLING DATA"_$S(IBOP=1:" TO ARCHIVE",1:"")
	D ^%ZTLOAD W !!,$S($D(ZTSK):"This job has been queued.  The task number is "_ZTSK_".",1:"Unable to queue this job.")
	K ZTSK Q
	;
	;
DEL(FILE)	; Delete a search template from file #.401 (Sort Templates)
	;         Input:   FILE  --   file for which template must be deleted
	;         Output:  None
	N DA,DIK,TMPL
	S DA=$$LOGIEN(FILE)
	S TMPL=$P($G(^IBE(350.6,DA,0)),"^",2)
	I TMPL]"" S DA=$O(^DIBT("B",TMPL,0)) I DA S DIK="^DIBT(" D ^DIK
	Q
	;
UPD(LOG,FIELD,VALUE)	; Update/Delete Log Entry fields
	;         Input:   LOG   --  ien of log entry to be updated
	;                  FIELD --  field number of field being updated
	;                  VALUE --  value to be stuffed into field
	;         Output:  NONE
	N DA,DR,DIE
	S DIE="^IBE(350.6,",DA=LOG,DR=FIELD_"///"_VALUE D ^DIE
	Q
	;
LOGIEN(FILE)	; Find the most current log entry for a file
	;         Input:   FILE  --   file for which log entry must be deleted
	;         Output:  ien of most current log entry for a file
	Q +$O(^(+$O(^IBE(350.6,"AF",FILE,"")),0))

IBPU2
IBPU2	;ALB/BGA - IB PURGE FILE CLEAN UP ; 17-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; This routine requires IBN from routine IBPP
	; and deletes entries in FILE #399
	;
	; The following procedures remove references which
	; point to the IBN about to be deleted. This routine is 
	; invoked by IBPU.
	;
	Q:'$G(IBN)
	D CLBCOM ;     deletes Rec from file 362.1
	D CLPSTE ;     deletes Rec from file 362.5
	D CLCTBI ;     deletes Rec from file 356.399
	D CLCTRK ;     deletes ptr from file 356  field .11
	D IBPBIL ;     sets the ptr in fld .17 to its self
	D IBCYTO ;     checks the ptr in fld .15
	Q
	;
CLBCOM	; uses "D" xref to find all recs to be deleted
	N IBA,DIK,DA
	S IBA="" F  S IBA=$O(^IBA(362.1,"D",IBN,IBA)) Q:'IBA  S DIK="^IBA(362.1,",DA=IBA D ^DIK
	Q
	;
CLPSTE	; uses "AIFN_IBN" to find all recs pointing to the rec to be deleted
	N IBA,IBB,REF,DIK,DA
	S REF="AIFN"_IBN
	F IBI=362.5,362.3,362.4 S (IBA,IBB)="" F  S IBA=$O(^IBA(IBI,REF,IBA)) Q:'IBA  F  S IBB=$O(^IBA(IBI,REF,IBA,IBB)) Q:'IBB  S DIK="^IBA("_IBI_",",DA=IBB D ^DIK
	Q
CLCTBI	; uses "C" xref to find all recs pointing to 399 then deletes
	N IBA,IBB,DIK,DA
	S IBA="" F  S IBA=$O(^IBT(356.399,"C",IBN,IBA)) Q:'IBA  S DIK="^IBT(356.399,",DA=IBA D ^DIK
	Q
CLCTRK	; uses "E" xref to find all recs ptr to 399 then sets them to null
	N IBA,DIE,DA,DR
	S IBA="" F  S IBA=$O(^IBT(356,"E",IBN,IBA)) Q:'IBA  S DIE="^IBT(356,",DA=IBA,DR=".11///@" D ^DIE
	Q
IBPBIL	; uses "AC" xref to find all recs ptr to 399 then sets to the bill #
	N IBA,DIE,DA,DR
	S IBA="" F  S IBA=$O(^DGCR(399,"AC",IBN,IBA)) Q:'IBA  I IBN'=IBA S DIE="^DGCR(399,",DA=IBA,DR=".17///"_IBA D ^DIE
	Q
IBCYTO	; uses "C" xref to find all recs ptr to 399 then sets the recs to null
	N IBA,IBB,DFN,DIE,DA,DR
	S (IBA,IBB)="",DFN=+$P($G(^DGCR(399,IBN,0)),U,2)
	F  S IBA=$O(^DGCR(399,"C",DFN,IBA)) Q:'IBA  I +$P($G(^DGCR(399,IBA,0)),U,15)=IBN S DIE="^DGCR(399,",DA=IBA,DR=".15///@"
	Q

IBPUBUL
IBPUBUL	;ALB/CPM - ARCHIVE/PURGING BULLETIN ; 20-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	; Input:  IBD (file) =  piece 1: date through which to archive/purge
	;                       piece 2: old log # to cancel
	;                       piece 3: new log # created
	;                       piece 4: error message
	;              IBOP  =  1 - Search, 2 - Archiving, 3 - Purging
	;               DUZ  =  User ID
	;
	; - set up MailMan's variables
	S XMSUB="INTEGRATED BILLING "_$P("SEARCH^ARCHIVING^PURGING","^",IBOP)_" OF BILLING DATA"
	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMY(DUZ)=""
	;
	; - build report header
	K IBT S IBT(1)="The subject job has yielded the following results:"
	S IBHDR="Search ^Archive^ Purge "
	S IBT(2)=$J("",37)_$P(IBHDR,"^",IBOP)_$J("",11)_$P(IBHDR,"^",IBOP)_$J("",7)_"# Records"
	S IBT(3)="File"_$J("",23)_"Log#  Begin Date/Time    End Date/Time     "_$P(" Found^Archived^ Purged","^",IBOP)
	S $P(IBT(4),"-",79)=""
	;
	; - write detail lines
	S IBC=4,IBFILE=0 F  S IBFILE=$O(IBD(IBFILE)) Q:'IBFILE  S IBDAT=IBD(IBFILE) D
	. S IBFILEN=$S($D(^DIC(IBFILE,0))#2:$P(^(0),"^"),1:"* UNKNOWN FILE *")
	. S IBC=IBC+1,IBT(IBC)=IBFILEN_$J("",27-$L(IBFILEN))
	. S IBT(IBC)=IBT(IBC)_$S($P(IBDAT,"^",3):$J($P(IBDAT,"^",3),4),1:" -- ")
	. I $P(IBDAT,"^",4)]"" D  Q
	..  S IBT(IBC)=IBT(IBC)_"   ** "_$S($P(IBDAT,"^",3):"LOG ENTRY HAS BEEN CANCELLED",$P(IBDAT,"^",3)=0:"LOG ENTRY WAS NOT CREATED",1:$P(IBDAT,"^",4))_" **"
	..  I $P(IBDAT,"^",3)]"" S IBC=IBC+1,IBT(IBC)="  Error:   >>  "_$P(IBDAT,"^",4)_"  <<"
	..  S IBC=IBC+1,IBT(IBC)=" "
	. S IBLOG0=$G(^IBE(350.6,+$P(IBDAT,"^",3),0)),IBLOGT=$G(^(IBOP))
	. F I=1,2 S IBTIME=$P(IBLOGT,"^",I),IBT(IBC)=IBT(IBC)_"  "_$S(IBTIME:$$DAT1^IBOUTL(IBTIME)_"@"_$P($$DAT2^IBOUTL(IBTIME),"@",2),1:"Not specified    ")
	. S IBT(IBC)=IBT(IBC)_"  "_$J($P(IBLOG0,"^",4),5)
	. S IBC=IBC+1,IBT(IBC)=" "
	;
	; - deliver bulletin
	D ^XMD
	K IBC,IBDAT,IBFILE,IBFILEN,IBHDR,IBLOG0,IBLOGT,IBT,IBTIME,XMDUZ,XMSUB,XMTEXT,XMY
	Q

IBPUDEL
IBPUDEL	;ALB/CPM - DELETE SEARCH TEMPLATE ENTRIES ; 24-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
DEL	; Delete Entry From Search Template
	S IBF=$$SEL G DELQ:'IBF
	D HOME^%ZIS W @IOF,*13 D HDR S I="",$P(I,"=",81)="" W !,I
	;
	; - list entries which may be deleted
	S IBTMDA=+IBD(IBF),(IBN,IBEN)=0 K ^TMP($J,"IBPUDEL")
	F I=1:1 S IBN=$O(^DIBT(IBTMDA,1,IBN)) D PICK:'IBN Q:'IBN  S ^TMP($J,"IBPUDEL",I)=IBN D DISP,PICK:'(I#19) G:IBEN["^" DELQ Q:IBEN
	I 'IBEN G DELQ
	;
	; - okay to delete?
	S DIR(0)="Y",DIR("A")="Do you wish to delete this entry"
	S DIR("?",1)="Enter:  'Y'  to delete this entry"
	S DIR("?")="        'N' or '^'  to quit this option."
	D ^DIR K DIR
	;
	; - if okay, update # records and delete entry
	I Y D
	. S IBNUMR=$P($G(^IBE(350.6,+$P(IBD(IBF),"^",3),0)),"^",4)
	. I IBNUMR>1 D  Q
	..  D UPD^IBPU1(+$P(IBD(IBF),"^",3),.04,IBNUMR-1)
	..  K ^DIBT(IBTMDA,1,+$G(^TMP($J,"IBPUDEL",IBEN))) W !,"This entry has been deleted.",!
	. D DEL^IBPU1(IBF) ; delete search template
	. D UPD^IBPU1(+$P(IBD(IBF),"^",3),.05,"/3") ; cancel log entry
	. W !,"Since this is the last template entry, the template has been deleted, and",!,"the log entry has been cancelled."
	;
DELQ	K ^TMP($J,"IBPUDEL"),DIRUT,DTOUT,DUOUT,I,IBD,IBF,IBN,IBNUMR,IBTMDA,X,Y
	Q
	;
	;
SEL()	; Prompt for Search Template.
	;  Input:   NONE
	;  Output:  File number, or 0 if none found/selected.
	;           If file number is selected, then IBD is returned as
	;              IBD(file #)=ien of template^status of log^ien of log
	N I,IBTM,IBTMDA,J,K K IBD
	F I=350,351,399 S J=$$LOG^IBPU(I) I J>1 S K=$$LOGIEN^IBPU1(I),IBTM=$P($G(^IBE(350.6,K,0)),"^",2) I IBTM]"" S IBTMDA=$O(^DIBT("B",IBTM,0)) I IBTMDA S IBD(I)=IBTMDA_"^"_J_"^"_K
	I '$D(IBD) S IBF=0 W !!,"There are no Search templates which are currently active.",! G SELQ
	S IBF=$O(IBD(0)) I '$O(IBD(IBF)) G SELQ
	;
	; - display template (file) selections
	W !,"Select one of the following files where a Search Template has been created:",!
	S IBF=0 F  S IBF=$O(IBD(IBF)) Q:'IBF  W !,?1,IBF,?6 D HDR
	;
	; - select a template
READ	W !!,"Select a File Number: " R IBF:DTIME I $T,"^"'[IBF,'$D(IBD(IBF)) W !!,"  Enter one of the displayed file numbers, or '^' to exit this option." G READ
SELQ	Q +IBF
	;
HDR	; Write out a header.   Input:  IBF -- file name
	W $P($G(^DIC(IBF,0)),"^"),?35,"Created on ",$$DAT1^IBOUTL(+$G(^IBE(350.6,$P(IBD(IBF),"^",3),1)))," by ",$E($P($G(^VA(200,+$P($G(^(1)),"^",3),0)),"^"),1,22)
	Q
	;
DISP	; Display entry from a file.  Input: IBF -- file name, IBN -- file entry
	N C,DATA,ROOT
	S ROOT=^DIC(IBF,0,"GL"),DATA=$G(@(ROOT_IBN_",0)"))
	W !,$J(I,2),?5,$E($P($G(^DPT(+$P(DATA,"^",2),0)),"^"),1,22),?30
	I IBF=350 W $P(DATA,"^",8) S Y=$P(DATA,"^",5),C=$P(^DD(350,.05,0),"^",2) D Y^DIQ W ?54,Y,?67,$$DAT1^IBOUTL($P($G(^IB(IBN,1)),"^",2)) G DISPQ
	I IBF=351 W $$DAT1^IBOUTL($P(DATA,"^",3)) S Y=$P(DATA,"^",4),C=$P(^DD(351,.04,0),"^",2) D Y^DIQ W ?44,Y,?59,$$DAT1^IBOUTL($P(DATA,"^",10)) G DISPQ
	W $P($G(^DGCR(399.3,+$P(DATA,"^",7),0)),"^")
	S Y=$P(DATA,"^",13),C=$P(^DD(399,.13,0),"^",2) D Y^DIQ W ?52,Y
	W ?71,$$DAT1^IBOUTL($P(DATA,"^",14))
DISPQ	Q
	;
PICK	; Select an entry to delete.
	;  Input:  ^TMP($J,"IBPUDEL",  -- possible choices
	;  Output:               IBEN  -- null (continue),
	;                                 '^' (quit), or
	;                                 a successful pick
ASK	W !!,"Select 1-",$S(IBN:I,1:I-1),", or '^' to exit: " R IBEN:DTIME S:'$T IBEN="^" I "^"'[IBEN,'$D(^TMP($J,"IBPUDEL",IBEN)) W !!,"  ENTER a number between 1 and ",$S(IBN:I,1:I-1),"." G ASK
	W ! Q

IBR
IBR	;ALB/AAS - INTEGRATED BILLING - A/R INTERFACE ; 25-FEB-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;  - handles calls to AR
	;  -  input   IBSEQNO = 1,2, or 3
	;  -          IBDUZ   = user causing entry
	;  -          IBNOS   = IBnumber^Ibnumber... to process
	;  -          DFN     = patient number
	;  -  output  Y       = 1 if successful
	;  -                   =-1^error code if unsuccessful
	S IBERR=""
	I '$D(IBSEQNO) S IBERR="IB017;"_IBERR G END
	D @IBSEQNO
	G END
	;
1	;  -pass new entries to a/r
	S IBTOTL=0 N IBNOW
	F I=1:1 S IBN=$P(IBNOS,"^",I) Q:'IBN  S X=$S($D(^IB(IBN,0)):^(0),1:"") S:X="" IBERR="IB018;"_IBERR D TRCHK S IBTOTL=IBTOTL+$P(X,"^",7)
	Q:IBNOS=""!(IBTOTL<1)
	S IBSERV="",IBATYP=$P(X,"^",3) I $D(^IBE(350.1,+IBATYP,0)) S IBSERV=$P(^(0),"^",4)
	D ARPARM^IBAUTL
	S IBWHER=3
	D BILLNO^IBAUTL I +Y<1 G ERR
	S IBWHER=4
	;
	F I=1:1 S IBN=$P(IBNOS,"^",I) Q:'IBN  D UP1,UP3:IBSEQNO=3
	Q
UP1	;  -update IB data and reindex
	S DIE="^IB(",DA=IBN,DR=".05////"_$S(IBERR="":3,1:9)_";.11////"_IBIL_";.12////"_IBTRAN
	D ^DIE K DIE,DR,DA
	I $D(Y) S IBERR="IB020;"_IBERR
	S DA=IBN,DIK="^IB(" D IX^DIK
	K DIK,DA
	Q
2	S IBTOTL=0 N IBNOW
	F I=1:1 S IBN=$P(IBNOS,"^",I) Q:'IBN  S X=$S($D(^IB(IBN,0)):^(0),1:"") S:X="" IBERR="IB018;"_IBERR S:$P($G(^IB(+$P(X,"^",9),0)),"^",5)'=8 IBTOTL=IBTOTL+$P(X,"^",7)
	S IBIL=$P(X,"^",11)
	;
	S IBSERV="",IBATYP=$P(X,"^",3) I $D(^IBE(350.1,+IBATYP,0)) S IBSERV=$P(^(0),"^",4)
	D ARPARM^IBAUTL
	S IBWHER=3
	; - piece 1 of X (21) denotes the AR Trans. Type of Decrease Adjustment
	I IBTOTL>0 S X="21^"_IBTOTL_"^"_IBIL_"^"_IBDUZ_"^"_$P(IBNOW,".")_"^"_$S($D(^IBE(350.3,+$P(^IB(IBNOS,0),"^",10),0)):$P(^(0),"^",1),1:"") D ^PRCASER1 I +Y<0 G ERR
	;
	S IBWHER=4
	F I=1:1 S IBN=$P(IBNOS,"^",I) Q:'IBN  D UP2
	Q
UP2	;  -update IB data and reindex
	S DIE="^IB(",DA=IBN,DR=".05////"_$S(IBERR="":3,1:9)
	D ^DIE K DIE,DR,DA
	I $D(Y) S IBERR="IB020;"_IBERR
	S DA=IBN,DIK="^IB(" D IX^DIK
	;W "FILING UPDATED ENTRY IN IB",!
	K DIK,DA
	;  -update parent to cancelled
	S IBPARNT=$P(^IB(IBN,0),"^",9),IBCRES=$P(^IB(IBN,0),"^",10)
	S DIE="^IB(",DA=IBPARNT,DR=".05////10;.1////"_IBCRES D ^DIE K DIE,DA,DR
	Q
	;
3	D 1
	Q
UP3	;  -update status of all previous bills to updated
	;
	S IBJ="" F IBI=0:0 S IBJ=$O(^IB("AD",$P(^IB(IBN,0),"^",9),IBJ)) Q:'IBJ  I $D(^IB(IBJ,0)),$P(^(0),"^",5)=3,IBN'=IBJ S DIE="^IB(",DA=IBJ,DR=".05////4" D ^DIE
	Q
	;
ERR	D ^IBAERR:$D(ZTQUEUED) Q
END	;
	S Y=$S(IBERR="":1,1:"-1^"_IBERR)
	K IBERR Q
	;
TRCHK	;  - if entry has an ar transaction number take out of list
	I $P(X,"^",12)!($$HOLD^IBRUTL(X,IBN,IBDUZ,IBSEQNO)) D
	. I I=1 S IBNOS=$P(IBNOS,"^",2,99)
	. E  S IBNOS=$P(IBNOS,"^",1,I-1)_"^"_$P(IBNOS,"^",I+1,99)
	. S $P(X,"^",7)=0,I=I-1
	Q

IBRBUL
IBRBUL	;ALB/CJM - CAT C HOLD CHARGE BULLETIN ; 02-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	; This bulletin is sent even if the local site has chosen
	; not to hold Cat C charges. In that case, IBHOLDP should be set = 0.
	; requires: IBDD() = internal node in patient file of valid ins.
	;           DUZ
	;           X = 0 node of IB BILLING ACTION
	;           IBHOLDP = 1 if charge on hold, = 0 otherwise
	;           IBSEQNO = 1 if the charges are new, 3 if updated
BULL	N IBT,IBC,XMSUB,XMY,XMDUZ,XMTEXT,IBX,IBDUZ,IBNAME,IBPID,IBBID,IBAGE,DFN
	S IBC=1,IBX=X,IBDUZ=DUZ
	D PAT,HDR,PATLINE,CHRG,INS,MAIL^IBAERR1
	Q
MAIL	; for testing
	; W !,XMSUB
	; F IBC=1:1 Q:'$D(IBT(IBC))  W !,IBT(IBC)
	Q
HDR	; formated for held charges
	N T,U,SL S T=$S('IBHOLDP:"NOT ON HOLD",1:"ON HOLD"),U=$S(IBSEQNO=1:"NEW ",IBSEQNO=3:"UPDATED ",1:"")
	; if the parent event should have the soft-link that is needed to find
	; the division
	S SL=$P(X,"^",16) S:SL SL=$G(^IB(SL,0)) S:'SL SL=X S SL=$P(SL,"^",4)
	S XMSUB=$E(IBNAME,1,8)_"("_IBBID_")"_"CATC CHRG W/INS"_"-"_$E($$DIV(SL),1,11)
	S IBT(IBC)="The following patient has active insurance and "_U_"Cat C charges "_T_".",IBC=IBC+1
	S IBT(IBC)="You need to immediately process the charges to the insurance company.",IBC=IBC+1
	Q
PAT	; gets patient demographic data
	N VAERR,VADM,X
	S DFN=+$P(IBX,"^",2) D DEM^VADPT I VAERR K VADM
	S IBNAME=$$PR($G(VADM(1)),26),IBAGE=$$PR($G(VADM(4)),3),IBPID=$G(VA("PID")),IBBID=$G(VA("BID"))
	Q
PATLINE	; sets up lines with patient data 
	S IBT(IBC)="",IBC=IBC+1,IBT(IBC)="Name: "_IBNAME_"   Age    : "_IBAGE_"       Pt. ID: "_IBPID,IBC=IBC+1
	Q
CHRG	; gets charge data and sets up charge lines
	N TP,FR,TO
	S Y=$P(IBX,"^",14) D:Y DD^%DT S FR=Y
	S Y=$P(IBX,"^",15) D:Y DD^%DT S TO=Y
	S TP=$P(IBX,"^",3) S:TP TP=$P($G(^IBE(350.1,TP,0)),"^",3) S:TP TP=$P($$CATN^PRCAFN(TP),"^",2)
	S IBT(IBC)="Type: "_$$PR(TP,28)_" Amount : $"_+$P(IBX,"^",7),IBC=IBC+1
	S IBT(IBC)="From: "_$$PR(FR,28)_" To     : "_TO,IBC=IBC+1
	Q
INS	; gets insurance data and sets up insurance lines
	N I,CO,P,G,GNB,W,E,Y,C
	S IBT(IBC)="",IBC=IBC+1,IBT(IBC)="INSURANCE INFORMATION:",IBC=IBC+1
	S I="" F  S I=$O(IBDD(I)) Q:'I  D
	.S CO=$P(IBDD(I),"^",1),CO=$P(^DIC(36,CO,0),"^",1),CO=$$PR(CO,25)
	.S P=$$PR($P(IBDD(I),"^",2),21)
	.S Y=$P(IBDD(I),"^",6),C=$P(^DD(2.312,6,0),"^",2) D Y^DIQ S W=$$PR(Y,25)
	.S Y=$P(IBDD(I),"^",4) D:Y DD^%DT S E=Y
	.S G=$$PR($P(IBDD(I),"^",15),25)
	.S GNB=$P(IBDD(I),"^",3)
	.S IBT(IBC)="Company: "_CO_" Policy#: "_P,IBC=IBC+1
	.S IBT(IBC)="Whose  : "_W_" Expires: "_E,IBC=IBC+1
	.S IBT(IBC)="Group  : "_G_" Group# : "_GNB,IBC=IBC+1
	.S IBT(IBC)="",IBC=IBC+1
	Q
PR(STR,LEN)	; pad right
	N B S STR=$E(STR,1,LEN),$P(B," ",LEN-$L(STR))=" "
	Q STR_$G(B)
DIV(SL)	; returns the division with the softlink as input
	N IBDIV,IBWARD,IBFILE,IBIEN
	S:SL[";" SL=$P(SL,";",1)
	S IBFILE=$P(SL,":",1),IBIEN=$P(SL,":",2)
	S IBDIV=""
	I IBFILE=409.68,IBIEN S IBDIV=$P($G(^SCE(IBIEN,0)),"^",11)
	I IBFILE=44,IBIEN S IBDIV=$P($G(^SC(IBIEN,0)),"^",15)
	I IBFILE=405,IBIEN S IBWARD=$P($G(^DGPM(IBIEN,0)),"^",6) I IBWARD S IBDIV=$P($G(^DIC(42,IBWARD,0)),"^",11)
	I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),"^",1)
	I IBDIV="" S IBDIV="DIV UNKNWN"
	Q IBDIV

IBRCON1
IBRCON1	;ALB/RJS - PASS CONVERTED INPATIENT CHARGES ; 28-APR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;Selection is by patient name
	;
EN	; Entry point for stand-alone 'pass' option
	I '$D(^IB("AI")) W !!,"There are no patients with converted charges at this time.",! Q
	;
	D HOME^%ZIS
	W !!,"This option is used to pass Means Test/Category C charges which have been"
	W !,"converted. Please enter a patient with converted charges and these"
	W !,"charges will be displayed and may be selected to be released to Accounts",!,"Receivable.",!
	;
ASK	S IBRHOLD=0
	R !!,"Select PATIENT NAME: ",X:DTIME G END:"^"[X
	I $E(X,1,2)="??" D HLP1 G ASK
	I $E(X)="?" D HLP G ASK
	S DIC("S")="I $D(^IB(""AI"",+Y))"
	S DIC="^DPT(",DIC(0)="MQE" D ^DIC K DIC G ASK:Y<1 S DFN=+Y
	;
	K IBA
	S IBRRJS=0 F IBNUM=1:1 S IBRRJS=$O(^IB("AI",DFN,IBRRJS)) Q:'IBRRJS  S IBA(IBNUM)=IBRRJS
	I '$D(IBA) W !!,"This patient does not have any converted charges",! G ASK
	;
	D DEM^VADPT W @IOF,VADM(1),"      Pt ID: ",VA("PID"),! F I=1:1:79 W "-"
	;
	; - display header and list charges
RESUME	W !!,"The following IB Actions for this patient, are CONVERTED CHARGES:" D HDR1
	S IBQ=0 F IBNUM=1:1 Q:'$D(IBA(IBNUM))  D:'(IBNUM#15)  Q:IBQ  S IBN=IBA(IBNUM) D LST1
	. R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
	;
	; - prompt user to select IB Actions
	S DIR(0)="LAO^1:"_(IBNUM-1)_"^K:X[""."" X",DIR("A")="Select IB Action"_$E("s",IBNUM>2)_" (REF #) to pass (or '^' to exit): ",DIR("?")="^D HELP^IBRCON1"
	W ! D ^DIR K DIR I $D(DUOUT) G END
	I $D(DIRUT) G LOOP
	;
	S IBRANGE=Y,IBSEQNO=1,IBDUZ=DUZ
	;
	S DIR("B")="YES"
	S DIR(0)="YOA",DIR("A")="OK to pass "_$S($P(Y,",",2):"these charges",1:"this charge")_" to Accounts Receivable: "
	D ^DIR K DIR I $D(DUOUT) G END
	I 'Y!($D(DIRUT)) G LOOP
	;
	; - pass charges to Accounts Receivable
	W !!,"Passing charges to Accounts Receivable...",! D HDR2
	F IBRRJS=1:1 S IBNUM=$P(IBRANGE,",",IBRRJS) Q:'IBNUM  S IBNOS=IBA(IBNUM) D ^IBR,ERR:Y<1 I Y>0 S IBN=IBA(IBNUM) D LST2
	W !!,"The charge"_$E("s",$P(IBRANGE,",",2)>0)_" listed above "_$S($P(IBRANGE,",",2):"have",1:"has")_" been passed to Accounts Receivable",!
	W:IBRHOLD=1 !,"* Please note that charges placed 'On Hold' are still",!,"  pending release from Integrated Billing."
	;
LOOP	;
	G ASK
	;
END	K DIRUT,DUOUT,DTOUT,IBA,IBAFY,IBARTYP,IBATYP,IBN,IBDA,IBDUZ,IBFAC,IBRRJSL,IBRANGE,IBNOS,IBNUM,IBQ,IBSEQNO,IBSERV,IBSITE,IBTOTL,IBTRAN,IBWHER,VA,VADM,VAERR
	K DFN,DIC,DIR,I,IBA,IBLINE,IBND,IBRRJS,VA,VADM,X,Y,IBRHOLD
	Q
	;
	;
HDR1	; Display charge header.
	N IBLINE S $P(IBLINE,"=",81)=""
	W !,IBLINE,!," REF   Action ID  Bill Type",?44,"From",?54,"To",?64,"Charge"
	W !,IBLINE Q
	;
HDR2	; Display charge header.
	N IBLINE S $P(IBLINE,"=",81)=""
	W !,IBLINE,!,?42,"Bill # or"
	W !," REF   Action ID  Bill Type",?42,"On Hold",?53,"From",?64,"To",?73,"Charge"
	W !,IBLINE Q
	;
LST1	; Display individual IB Action.
	N IBND S IBND=$G(^IB(IBN,0))
	W !?1,$J(IBNUM,2),?7,$J(+IBND,9),?18,$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8)
	W ?42,$$DAT1^IBOUTL($P(IBND,"^",14)),?52,$$DAT1^IBOUTL($P(IBND,"^",15))
	W ?61,$J(+$P(IBND,"^",7),9,2)
	Q
	;
LST2	; Display individual IB Action.
	N IBND S IBND=$G(^IB(IBN,0))
	W !?1,$J(IBNUM,2),?7,$J(+IBND,9),?18,$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8)
	I $P(IBND,U,5)=8 W ?42,"On Hold" S IBRHOLD=1
	E  W ?42,$P($P(IBND,"^",11),"-",2)
	W ?51,$$DAT1^IBOUTL($P(IBND,"^",14)),?61,$$DAT1^IBOUTL($P(IBND,"^",15))
	W ?70,$J(+$P(IBND,"^",7),9,2)
	Q
	;
ERR	; Display error message.
	W !?1,$J(IBNUM,2),?7,"Error encountered - a separate bulletin has been posted"
	Q
	;
HLP	; Display basic help message.
	W !!,"Enter:    the name of a patient with converted charges or"
	W !?10,"'??' --  to see all patients with converted charges or"
	W !?10,"'^'  --  to quit this option.",!
	Q
	;
HLP1	; Display all patients with converted charges
	N DFN,I,IBQ,VA,VAERR
	W !!,"The following patients have converted charges"
	S (DFN,IBQ)=0 F I=1:1 S DFN=$O(^IB("AI",DFN)) Q:'DFN  D:'(I#15)  Q:IBQ  D PID^VADPT6 W !?3,$P($G(^DPT(DFN,0)),"^"),$J("",10),VA("PID")
	. R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
	W ! Q
	;
HELP	; Help for the 'Select' prompt.
	W !!?4,"Please enter a list or range of IB Actions (i.e. 1,3,5 or 2-4,8), none"
	W !?4,"greater than ",IBNUM-1,", to be passed to Accounts Receivable, or '^' to quit."
	Q

IBRCON2
IBRCON2	;ALB/RJS - PASSING CHARGES TO A/R BY DATE - 4/28/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
INIT	;
	S (IBRCOUNT,IBRDONE)=0
	S IBFEE="DG FEE SERVICE (OPT) NEW",IBFEE=$O(^IBE(350.1,"B",IBFEE,0))
	S IBOPT="DG OPT COPAY NEW",IBOPT=$O(^IBE(350.1,"B",IBOPT,0))
	I IBFEE=""!(IBOPT="") W !,"Error finding entries in file 350.1" G END
START	;
	S %DT("A")="Enter beginning date: "
	D PROMPT G:Y=-1 END
	S IBBEG=Y
	W !
	S %DT("A")="Enter ending date: "
	D PROMPT G:Y=-1 END
	I (Y<IBBEG) W !,"Ending date must be > or = start date!",!
	I  G START
	S IBENDING=Y
	W !!
	S SUBROUT="LOAD1" D LOOP,PROMPT2
	G:IBRDONE=1 END
	D QUEUED,HOME^%ZIS
END	;
	I $D(ZTQUEUED) S ZTREQ="@" Q
	K %DT,DFN,IBCUTOFF,IBDUZ,IBNOS,IBRRCNR,IBRXXX,IBSEQNO,Y,XMY
	K IBEND,IBRCOUNT,IBRDONE,IBSTART,SUBROUT,XMDUZ,XMSUB,XMTEXT
	K IBFEE,IBOPT,DIR,%,%ZIS,IBBEG,IBENDING
	Q
NEXT	;
	D NOW^%DTC S IBSTART=$$DAT2^IBOUTL(%)
	S SUBROUT="LOAD2" D LOOP
	D NOW^%DTC S IBEND=$$DAT2^IBOUTL(%)
	D MAIL
	Q
LOOP	;
	S IBSEQNO=1,IBDUZ=DUZ
	F IBRXXX=IBFEE,IBOPT D
	.S IBRRCNR=0
	.F  S IBRRCNR=$O(^IB("AE",IBRXXX,IBRRCNR)) Q:IBRRCNR=""  D @SUBROUT
	Q
LOAD1	;
	Q:$P($G(^IB(IBRRCNR,0)),U,17)=""!($P($G(^(0)),U,17)>IBENDING)!($P($G(^(0)),U,17)<IBBEG)!($P($G(^(0)),U,5)'=99)
	S IBRCOUNT=IBRCOUNT+1
	W "."
	Q
LOAD2	;
	Q:$P($G(^IB(IBRRCNR,0)),U,17)=""!($P($G(^(0)),U,17)>IBENDING)!($P($G(^(0)),U,17)<IBBEG)!($P($G(^(0)),U,5)'=99)
	S IBNOS=IBRRCNR,DFN=$P(^IB(IBRRCNR,0),U,2)
	D ^IBR,ERR:Y<1
	Q
PROMPT	;
	S %DT="AEX" D ^%DT
	Q
ERR	;
	W !,"Error encountered - a separate bulletin has been posted"
	Q
PROMPT2	;
	I IBRCOUNT=0 W !,"   There are no outpatient or fee basis converted",!,"   charges in this date range" S IBRDONE=1 Q
	W !!,"There are [ ",IBRCOUNT," ] charges to be passed to accounts receivable",!
	S DIR(0)="YA"
	S DIR("A")="Do you wish to pass these charges to accounts receivable (Y/N): "
	D ^DIR
	I Y'=1 S IBRDONE=1 Q
	Q
QUEUED	;
	S ZTIO="",ZTRTN="NEXT^IBRCON2",ZTDESC="IBRCON2 JOB TO PASS TO AR CONVERTED CHARGES",ZTSAVE("IB*")="" D ^%ZTLOAD W !!,$S($D(ZTSK):"Request Queued",1:"Request Cancelled")
	Q
OPEN	;
	S %ZIS="QM" D ^%ZIS
	Q
MAIL	;
	S XMSUB="PASSED CONVERTED CHARGES"
	S XMDUZ="INTEGRATED BILLING PACKAGE"
	S XMTEXT="IBT("
	K IBT,XMY
	S XMY(IBDUZ)=""
	S IBT(1)="The job that passes converted charges to accounts receivable"
	S IBT(2)="is complete."
	S IBT(3)="[ "_IBRCOUNT_" ] charges have been passed to accounts receivable."
	S IBT(4)=""
	S IBT(5)="Job started on  "_$P(IBSTART,"@",1)_" at "_$P(IBSTART,"@",2)
	S IBT(6)="Job finished on "_$P(IBEND,"@",1)_" at "_$P(IBEND,"@",2)
	D ^XMD
	Q

IBRCON3
IBRCON3	;ALB/RJS - TOP LEVEL ROUTINE FOR PASSING CONVERTED CHARGES - 4/28/92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
START	;
	;***
	;S XRTL=$ZU(0),XRTN="IBRCON3-1" D T0^%ZOSV ;start rt clock
	S DIR(0)="SAO^1:P;2:D"
	S DIR("A")="Pass converted charges by Patient or by Date (P/D): "
	S DIR("?",1)="Converted charges may be passed using Patient name or"
	S DIR("?",2)="Date selection criteria. If Patient is selected then"
	S DIR("?",3)="all billing actions with a status of 'Converted' will"
	S DIR("?",4)="be displayed. The user may then select which actions"
	S DIR("?",5)="will be passed to accounts receivable. If Date is"
	S DIR("?",6)="selected then all outpatient copay and fee service"
	S DIR("?",7)="billing actions that were created within the date"
	S DIR("?",8)="range selected (inclusive) and with a status of"
	S DIR("?")="'Converted' will be passed to accounts receivable."
	D ^DIR
	W !
	I Y=1 D ^IBRCON1 G END
	I Y=2 D ^IBRCON2 G END
END	;
	K DIR,Y
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBRCON3" D T1^%ZOSV ;stop rt clock
	Q

IBRFN
IBRFN	;ALB/AAS - Supported functions for AR ; cinco de mayo, 1992
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ERR(Y)	;  - input Y = -1^error code[;error code...]^literal message
	;  - output IBRERR = error message 1
	;         if more than one code then
	;           IBRERR(n)=error code n
	N N,X,X1,X2 K IBRERR S IBRERR=""
	G:+Y>0 ERRQ
	S X2=$P(Y,"^",2) F N=1:1 S X=$P(X2,";",N) Q:X=""  S X1=$P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",X,0)),0)),"^",2) D
	.I N=1 S IBRERR=X1
	.I $P(Y,"^",3)]""!($P(X2,";",2,99)]"") S IBRERR(N)=X1
	I $P(Y,"^",3)]"" S N=N+1,IBRERR(N)=$P(Y,"^",3)
ERRQ	Q IBRERR
	;
MESS(Y)	;  -input y=error code - from file 350.8 (piece 3)
	;   output error message
	Q $P($G(^IBE(350.8,+$O(^IBE(350.8,"AC",Y,0)),0)),"^",2)
	;
SVDT(BN,VDT)	;returns service dates for a specific bill
	;- input:  BN bill number (external form)
	;          VDT name of array to hold outpatient visit dates, pass by value (if needed)
	;- output: X function value, string, = 0 if bill not found
	;            = 1 (Inpt) or 2 (Outpt)^event date^stmt from date^stmt to date^LOS (I)^Number of visit dates (O)
	;              all are internal form, any piece may be null if not defined for the bill
	;          array containing outpatient visit dates as subscripts/no data, if VDT passed by value
	N X,Y,IFN S X=0,BN=$G(BN)
	I BN'="" S IFN=+$O(^DGCR(399,"B",BN,0)),Y=$G(^DGCR(399,IFN,0)) I Y'="" D
	. S X=$S(+$P(Y,U,5)<1:"",+$P(Y,U,5)<3:1,+$P(Y,U,5)<5:2,1:"")_U_$P(Y,U,3),Y=$G(^DGCR(399,IFN,"U"))
	. S X=X_U_$P(Y,U,1)_U_$P(Y,U,2)_U_$P(Y,U,15)_U_$P($G(^DGCR(399,IFN,"OP",0)),U,4)
	. S Y=0 F  S Y=$O(^DGCR(399,IFN,"OP",Y)) Q:'Y  S VDT(Y)=""
	Q X

IBRFN1
IBRFN1	;ALB/CPM - PASS PATIENT STATEMENT DATA TO A/R ; 24-FEB-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
STMT(TRAN)	; Pass clinical data to AR for the patient statement.
	;         Input:    TRAN -- AR Transaction number (ptr to #433)
	;         Returns:  ^TMP("IBRFN1",$J,n)=1^2^3^4^5^6^7^8 , where
	;
	;        -----------------------------------------------------------
	;       |          |                Transaction Type                |
	;       |----------|------------------------------------------------|
	;       |  Piece   |    Pharmacy    |  Outpatient  |   Inpatient    |
	;       |----------|----------------|--------------|----------------|
	;       |    1     |     IB Ref#    |    IB Ref#   |    IB Ref#     |
	;       |    2     |       Rx#      |  Visit Date  |    Adm Date    |
	;       |    3     |      Drug      |      --      | Bill From Date |
	;       |    4     |   Days Supply  |      --      |  Bill To Date  |
	;       |    5     |    Physician   |      --      |    Disc Date   |
	;       |    6     |    Quantity    |      --      |       --       |
	;       |    7     |Fill/Refill Date|      --      |       --       |
	;       |    8     |   Charge Amt   |  Charge Amt  |   Charge Amt   |
	;        -----------------------------------------------------------
	;
	Q:'$G(TRAN)  K ^TMP("IBRFN1",$J)
	N IBN,IBJ,IBND,IBBG,IBSL,IBPE
	S IBN=0 F IBJ=1:1 S IBN=$O(^IB("AT",TRAN,IBN)) Q:'IBN  D
	. S IBND=$G(^IB(IBN,0)),IBSL=$P(IBND,"^",4),IBCHG=$P(IBND,"^",7) Q:'IBND
	. I +IBSL=52 D RX Q
	. S IBBG=$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",11)
	. I IBBG=4 S ^TMP("IBRFN1",$J,IBJ)=+IBND_"^"_$P(IBND,"^",14)_"^^^^^^"_IBCHG Q
	. S IBPE=$G(^IB(+$P(IBND,"^",16),0)) S:+IBSL'=405 IBSL=$P(IBPE,"^",4)
	. I +IBSL=405 D INP Q
	. S ^TMP("IBRFN1",$J,IBJ)=+IBND_"^^"_$P(IBND,"^",14)_"^"_$P(IBND,"^",15)_"^^^^"_IBCHG
	Q
	;
RX	; Build array element for Pharmacy Co-pay charges.
	N %DT,I,IBRX,IBFILL,PSOFILL,PSONTALK,PSORX0,PSORX1,PSORXN,PSOTMP,VA,VAERR,X,Y,Z
	S IBRX=$P($P(IBSL,";"),":",2),IBFILL=+$P($P(IBSL,";",2),":",2)
	S X=IBRX_"^"_IBFILL,PSONTALK="" D EN^PSOCPVW
	S Z=+IBND F I=.01,6,8,4,7,22 S Z=Z_"^"_$G(PSOTMP(52,IBRX,I,"E"))
	S:IBFILL $P(Z,"^",7)=$G(PSOTMP(52.1,IBFILL,.01,"E"))
	S X=$P(Z,"^",7),%DT="" D ^%DT S $P(Z,"^",7)=$S(Y>0:Y,1:"")
	S ^TMP("IBRFN1",$J,IBJ)=Z_"^"_IBCHG
	Q
	;
INP	; Build array element for inpatient charges.
	N IBADM,IBDIS,IBFR,IBTO,PM,PM0,X,X1,X2
	S PM=+$P(IBSL,":",2),PM0=$G(^DGPM(PM,0))
	S IBADM=$S(PM0:+PM0\1,1:$P(IBPE,"^",17))
	S IBDIS=$S(PM0:$S($D(^DGPM(+$P(PM0,"^",17),0)):+^(0)\1,1:""),1:"")
	S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
	; - check for per diems added through C/E/A which are off by one day
	I IBBG=3 S X1=IBTO,X2=IBFR D ^%DTC I X+1'=$P(IBND,"^",6) S X1=IBTO,X2=-1 D C^%DTC S IBTO=X
	S ^TMP("IBRFN1",$J,IBJ)=+IBND_"^"_IBADM_"^"_IBFR_"^"_IBTO_"^"_IBDIS_"^^^"_IBCHG
	Q

IBRFN2
IBRFN2	;ALB/AAS - PASS INSURANCE/BEDSECTION DATA TO A/R FOR MCCR/NDB ; 8-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
CRIT(IBIFN)	; Pass AR insurance data for MCCR/NDB
	;         Input:    IBIFN -- Internal entry of Bill (ptr to #399)
	;                            (should be same as ptr to 430)
	;
	;         Returns:  piece 1 = criteria 3 (type of policy)
	;                   piece 2 = criteria 4 (how policy identified)
	;                   piece 3 = criteria 5 (primary bedsection of bill)
	;            see table below for values
	;
	;  -------------------------------------------------------------------
	; |       |              Numeric Value                                |
	; |-------|-----------------------------------------------------------|
	; | Piece |        1       |       2      |      3      |       4     |
	; |-------|----------------|--------------|-------------|-------------|
	; |   1   |  Full Medical  | Medicare Sup |  *Other     |       -     |
	; |   2   | *By interview  | By Data Match|   by IVM    |       -     |
	; |   3   |    Medical     |   Surgical   | Pschiatric  | *Any Other  |
	; |       |                |              |             |including opt|
	;  -------------------------------------------------------------------
	;
	; -- error, returns -1, bill does not exist
	;
	N IBX
	S IBX=-1
	; -- set value to defaults if okayed by vaco
	;S IBX="3^1^4"
	;
	I '$G(IBIFN)!($G(^DGCR(399,+$G(IBIFN),0))="") G CRITQ
	S IBX=""
	;
	S $P(IBX,"^",1)=$$TYPOL(IBIFN)
	S $P(IBX,"^",2)=$$HOWID(IBIFN)
	S $P(IBX,"^",3)=$$BEDSC(IBIFN)
	;
CRITQ	Q IBX
	;
	;
TYPOL(IBIFN)	; -- compute type of policy for a bill
	N IBX,IBCDFN,IBCPOL,TYPE
	S IBX=""
	S IBCDFN=$$POL(IBIFN) I 'IBCDFN G TYPOLQ
	S IBCPOL=$P($G(^DPT(+$P($G(^DGCR(399,+$G(IBIFN),0)),"^",2),.312,IBCDFN,0)),"^",18) ; pointer to group plan (355.3)
	I 'IBCPOL S IBX=3 ; default type of policy is 3 or other
	I IBCPOL D
	.S TYPE=$P($G(^IBE(355.1,+$P($G(^IBA(355.3,+IBCPOL,0)),"^",9),0)),"^",3)
	.S IBX=$S(TYPE=1:1,TYPE=11:2,1:3) ; full medical, medicare supplementa or other
TYPOLQ	I IBX<1!(IBX>3)!(IBX'?1N) S IBX=3 ; must be number from 1-3, default=3
	Q IBX
	;
	;
HOWID(IBIFN)	; -- compute how policy was identified
	N IBX,IBCDFN
	S IBX=""
	S IBCDFN=$$POL(IBIFN) I 'IBCDFN G HOWIDQ
	S IBX=$P($G(^DPT(+$P($G(^DGCR(399,+$G(IBIFN),0)),"^",2),.312,IBCDFN,1)),"^",9)
	;
HOWIDQ	I IBX<1!(IBX>3)!(IBX'?1N) S IBX=1 ; must be number from 1-3, default=1 by interview
	Q IBX
	;
	;
BEDSC(IBIFN)	; -- compute primary bedsection for a bill
	; -- based on greatest length of stay
	N IBX,IBRC,IBBS,IBUN,IBMAX
	S IBX=""
	I '$G(IBIFN) G BEDSCQ
	I $P($G(^DGCR(399,+IBIFN,0)),"^",5)>2 S IBX=4 G BEDSCQ ; opt bill
	;
	; -- add up all los for each rev code.
	S IBRC=0 F  S IBRC=$O(^DGCR(399,+IBIFN,"RC",IBRC)) Q:'IBRC  D
	.S IBUN=$P($G(^DGCR(399,+IBIFN,"RC",IBRC,0)),"^",3) ; units of service
	.S IBBS=$P($G(^DGCR(399,+IBIFN,"RC",IBRC,0)),"^",5) ; bedsection from 399.1
	.Q:IBBS=""
	.S IBBS(IBBS)=$G(IBBS(IBBS))+IBUN
	.Q
	;
	; -- find bedsection with highest los
	S IBMAX=""
	S X=0 F  S X=$O(IBBS(X)) Q:'X  I IBBS(X)>$G(IBBS(+IBMAX)) S IBMAX=X
	;
	S IBX=$P($G(^DGCR(399.1,+IBMAX,0)),"^")
	;
BEDSCQ	S IBX=$S(IBX="":4,IBX["MEDICAL":1,IBX["SURGICAL":2,IBX["PSYCHIATRIC":3,1:4)
	Q IBX
	;
POL(IBIFN)	; -- compute internal policy id for a bill
	N X,Y,DFN,IBDD,IBCDFN
	S IBCDFN=$P($G(^DGCR(399,+IBIFN,"M")),"^",12)
	I 'IBCDFN D
	.S IBCNS=+$G(^DGCR(399,+IBIFN,"M"))
	.S DFN=$P($G(^DGCR(399,+IBIFN,0)),"^",2)
	.S X="IBCNS1" X ^%ZOSF("TEST") I $T D ALL^IBCNS1(DFN,"IBDD")
	.I '$D(IBDD) Q
	.S X=0 F  S X=$O(IBDD(X)) Q:'X  I IBCNS=+$G(IBDD(X,0)) S IBCDFN=X Q
	.Q
POLQ	Q IBCDFN

IBRREL
IBRREL	;ALB/CPM - RELEASE MEANS TEST CHARGES 'ON HOLD' ; 03-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
EN	; Entry point for stand-alone 'release' option
	I '$D(^IB("AH")) W !!,"There are no patients with charges 'on hold' at this time.",! Q
	;
	D HOME^%ZIS
	W !!,"This option is used to release Means Test/Category C charges which have been"
	W !,"placed 'on hold.'  Please enter a patient with charges 'on hold,' and these"
	W !,"charges will be displayed and may be selected to be released to Accounts",!,"Receivable.",!
	;
ASK	;
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBRREL" D T1^%ZOSV ;stop rt clock
	;S XRTL=$ZU(0),XRTN="IBRREL-1" D T0^%ZOSV ;start rt clock
	;
	R !,"Select PATIENT NAME: ",X:DTIME G END:"^"[$E(X)
	I $E(X,1,2)="??" D HLP1 G ASK
	I $E(X)="?" D HLP G ASK
	S DIC="^DPT(",DIC(0)="QME" D ^DIC K DIC G ASK:Y<1 S DFN=+Y
	;
	K IBA,PRCABN
	S IBI=0 F IBNUM=1:1 S IBI=$O(^IB("AH",DFN,IBI)) Q:'IBI  S IBA(IBNUM)=IBI
	I '$D(IBA) W !!,"This patient does not have any charges 'on hold.'",! G ASK
	;
	S IBPT=$$PT^IBEFUNC(DFN) W @IOF,$P(IBPT,"^"),"      Pt ID: ",$P(IBPT,"^",2),! S I="",$P(I,"-",80)="" W I K I
	;
	; - display header and list charges
RESUME	W !!,"The following IB Actions ",$S($D(PRCABN):"associated with this bill",1:"for this patient")," are ON HOLD:" D HDR
	S IBQ=0 F IBNUM=1:1 Q:'$D(IBA(IBNUM))  D:'(IBNUM#15)  Q:IBQ  S IBN=IBA(IBNUM) D LST
	. R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
	;
	; - prompt user to select IB Actions
	S DIR(0)="LA^1:"_(IBNUM-1)_"^K:X[""."" X",DIR("A")="Select IB Action"_$E("s",IBNUM>2)_" (REF #) to release (or '^' to exit): ",DIR("?")="^D HELP^IBRREL"
	W ! D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
	;
	S IBRANGE=Y,IBSEQNO=1,IBDUZ=DUZ
	;
	S DIR(0)="Y",DIR("A")="OK to pass "_$S($P(Y,",",2):"these charges",1:"this charge")_" to Accounts Receivable"
	D ^DIR K DIR I 'Y!($D(DIRUT))!($D(DUOUT)) G END:$D(PRCABN) D END W ! G ASK
	;
	; - pass charges to Accounts Receivable
	W !!,"Passing charges to Accounts Receivable...",! D HDR
	F IBCTR=1:1 S IBNUM=$P(IBRANGE,",",IBCTR) Q:'IBNUM  I $D(IBA(IBNUM)) S IBNOS=IBA(IBNUM) D ^IBR,ERR:Y<1 I Y>0 S IBN=IBA(IBNUM) D LST
	W !!,"The charge"_$E("s",$P(IBRANGE,",",2)>0)_" listed above "_$S($P(IBRANGE,",",2):"have",1:"has")_" been passed to Accounts Receivable.",!
	;
	I '$D(PRCABN) W !! S DIR(0)="E" D ^DIR K DIR D END W ! G ASK
	;
END	K DIC,DIRUT,DUOUT,DTOUT,IBA,IBAFY,IBARTYP,IBATYP,IBCTR,IBN,IBDA,IBDUZ
	K IBFAC,IBI,IBIL,IBRANGE,IBNOS,IBNUM,IBPT,IBQ,IBSEQNO,IBSERV,IBSITE
	K IBTOTL,IBTRAN,IBWHER,VA,VAERR,VADM
	K:'$D(PRCABN) DFN
	;***
	;I $D(XRT0) S:'$D(XRTN) XRTN="IBRREL" D T1^%ZOSV ;stop rt clock
	Q
	;
	;
HDR	; Display charge header.
	N IBLINE S $P(IBLINE,"=",81)=""
	W !,IBLINE,!," REF   Action ID  Bill Type",?42,"Bill #",?53,"From",?64,"To",?73,"Charge"
	W !,IBLINE Q
	;
LST	; Display individual IB Action.
	N IBND S IBND=$G(^IB(IBN,0))
	W !?1,$J(IBNUM,2),?7,$J(+IBND,9),?18,$P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^",8)
	W ?42,$P($P(IBND,"^",11),"-",2),?51,$$DAT1^IBOUTL($P(IBND,"^",14)),?61,$$DAT1^IBOUTL($P(IBND,"^",15))
	W ?70,$J(+$P(IBND,"^",7),9,2)
	Q
	;
ERR	; Display error message.
	W !?1,$J(IBNUM,2),?7,"Error encountered - a separate bulletin has been posted"
	Q
	;
HLP	; Display basic help message.
	W !!,"Enter:    the name of a patient with charges 'on hold,' or"
	W !?10,"'??' --  to see all patients with charges 'on hold,' or"
	W !?10,"'^'  --  to quit this option.",!
	Q
	;
HLP1	; Display all patients with charges 'on hold.'
	N DFN,I,IBQ,PID
	W !!,"The following patients have charges 'on hold:'"
	S (DFN,IBQ)=0 F I=1:1 S DFN=$O(^IB("AH",DFN)) Q:'DFN  D:'(I#15)  Q:IBQ  S PID=$$PT^IBEFUNC(DFN) W !?3,$P(PID,"^"),$J("",10),$P(PID,"^",2)
	. R !,"Enter RETURN to continue or '^' to stop: ",X:DTIME S:X["^"!('$T) IBQ=1 Q
	W ! Q
	;
HELP	; Help for the 'Select' prompt.
	W !!?4,"Please enter a list or range of IB Actions (i.e. 1,3,5 or 2-4,8), none"
	W !?4,"greater than ",IBNUM-1,", to be passed to Accounts Receivable, or '^' to quit."
	Q
	;
	;
AR	; Accounts Receivable entry point to release charges.
	;   Input: PRCABN -- ien of Bill/Accounts Receivable
	Q:$D(PRCABN)[0  Q:'$$IB^IBRUTL(PRCABN,1)  G RESUME

IBRUTL
IBRUTL	;ALB/CPM - INTEGRATED BILLING - A/R INTERFACE UTILITIES ; 03-MAR-92
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
IB(IEN,RETN)	; Are there any IB Actions on hold for this bill?
	;         Input:   IEN         -- ien of Bill(#399), A/R(#430)
	;                  RETN (opt)  -- Want array of IB Actions? (1-Yes,0-No)
	;                                 if yes, returns IBA(num)=ibn
	;         Returns: 1 -- Yes, 0 -- No
	;
	N ATYPE,BTYPE,BILLS,DFN,IBFR,IB0,IBTO,IBU,IBN,IBND,IBNUM,IBOK
	S:'$D(RETN) RETN=0 S BILLS=0
	;
	; - determine patient, bill type and billing dates
	S IB0=$G(^DGCR(399,IEN,0)),IBU=$G(^("U")),DFN=+$P(IB0,"^",2)
	S BTYPE=$S(+$P(IB0,"^",5)<3:"I",1:"O"),IBFR=+IBU,IBTO=$P(IBU,"^",2)
	;
	; - loop through all bills on hold, and set flag if there is an
	; - IB Action of the same type as the UB-82 which has been billed
	; - within the statement dates of the UB-82.  Store all actions
	; - in the array IBA if required.
	S (IBN,IBNUM)=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D  I IBOK Q:'RETN  S IBNUM=IBNUM+1,IBA(IBNUM)=IBN
	. S IBOK=0,IBND=$G(^IB(IBN,0)) Q:'IBND
	. S ATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",1:"I") Q:ATYPE'=BTYPE
	. Q:$P(IBND,"^",15)<IBFR!($P(IBND,"^",14)>IBTO)  S (IBOK,BILLS)=1
	;
	Q BILLS
	;
	;
HOLD(X,IBN,IBDUZ,IBSEQNO)	; Place IB Action on hold?
	;         Input:        X -- Zeroth node of IB Action
	;                     IBN -- ien of IB Action
	;                   IBDUZ -- User ID
	;                 IBSEQNO -- 1 (New Action), 3 (Update Action)
	;         Returns:      1 -- Yes, 0 -- No
	;
	N DFN,IBINS,IBINDT,IBOUTP,HOLD,IBHOLDP,IBDUZ,I
	S IBHOLDP=$P($G(^IBE(350.9,1,1)),"^",20),DFN=+$P(X,"^",2)
	;
	I $P(X,"^",5)=8 G HOLDQ ; action is already on hold
	I '$P($G(^IBE(350.1,+$P(X,"^",3),0)),"^",10) G HOLDQ ; action can't be placed on hold
	;
	; - see if patient has insurance on Event date
	S IBINDT=$P($G(^IB(+$P(X,"^",16),0)),"^",17),IBOUTP=1
	D ^IBCNS S:IBHOLDP HOLD=IBINS
	;
	; - generate bulletin if patient has insurance, bulletin not suppressed
	I IBINS,'$P($G(^IBE(350.9,1,0)),"^",15) D ^IBRBUL
	;
	; - update action to 'Hold' if parameter is set and vet has insurance
	I IBHOLDP,IBINS S DIE="^IB(",DA=IBN,DR=".05////8" D ^DIE,UP3^IBR:IBSEQNO=3 K DA,DIE,DR,IBI,IBJ
	;
HOLDQ	Q +$G(HOLD)

IBTOAT
IBTOAT	;ALB/AAS - CLAIMS TRACKING ADMISSION SHEET PRINT ; 18-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	;
PAT	; -- Select patient
	S IBTOAT=1
	S DIC="^DPT(",DIC(0)="AEQM" ;,DIC("S")="I $D(^IBT(356,""APTA"",+Y))"
	D ^DIC K DIC I +Y<1 G END
	S DFN=+Y
	;
EN1	;
	; -- entry point to call from event driver or registration
	N VAIN,VAERR,VA,VAINDT,IBQUIT,DIR,I,J
	W !
	S IBQUIT=0
	Q:'$D(DFN)
	I '$G(IBTOAT) Q:'$P($G(^IBE(350.9,1,6)),"^",5)
	S VA200="" D INP^VADPT
	;Q:'VAIN(1)
	S IBTRN=$O(^IBT(356,"AD",+$G(VAIN(1)),0))
	I IBTRN D  I IBQUIT G END
	.N DIR
	.S DIR(0)="Y",DIR("A")="Print Admission Sheet for Current Adm. ("_$P(VAIN(7),"^",2)_")"
	.S DIR("B")="YES"
	.S DIR("?")="Answer 'YES' if you want to print an admission sheet for the current admission, or 'NO' if you wish to select another admission date."
	.D ^DIR K DIR I $D(DIRUT) S IBQUIT=1
	.S IBTCUR=Y
	.Q
	;
	I '$G(IBTCUR)!('$G(IBTRN))!($P($G(^IBT(356,+$G(IBTRN),0)),"^",2)'=DFN) D TRAC
	I '$G(IBTRN) G END
	;
DEV	; -- select device, run option
	W !
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="ONE^IBTOAT1",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Print single admission sheet" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G %
	U IO D ONE^IBTOAT1,END W !! G %
	Q
	;
END	; -- Clean up
	W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K X,Y,DFN,IBTRN,%ZIS,IBTOAT,VA200,IBTCUR,MAX,POP,TAB,TAB2,IBTITLE,IBDT
	Q
	;
TRAC	; -- Select tracking module internal entry number
	W !
	S DIC="^IBT(356,",DIC(0)="AEQ",DIC("A")="Select Visit: "
	S D="ADFN"_DFN
	S DIC("S")="I $P(^(0),U,5)"
	D IX^DIC K DIC I +Y<1 G END
	S IBTRN=+Y
	Q
	;
REG(DGPM)	; -- can be called from registration to print an admission sheet
	; -- input  DGPM = admission movement
	N IBTRKR,IBTRN,IBTRND,X,Y,I,J,DIR,DIRUT,DUOUT,DTOUT,IBQUIT,DFN
	S IBTRKR=$G(^IBE(350.9,1,6))
	Q:'$P(IBTRKR,"^",6)  ; quit if use admission sheets = no
	Q:'$G(DGPM)
	S DFN=$P($G(^DGPM(DGPM,0)),"^",2) Q:'DFN
	S IBTRN=$O(^IBT(356,"AD",DGPM,0))
	I 'IBTRN D ADM^IBTUTL(DGPM)
	S DIR(0)="Y",DIR("A")="PRINT ADMISSION SHEET",DIR("B")="YES"
	S DIR("?")="Answer YES if you wish to print an admission sheet which could be place on the top of the inpatient chart.  Answer NO if you do not want to print one."
	D ^DIR K DIR I Y D
	.S ZTRTN="ONE^IBTOAT1",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Print single admission sheet" D ^%ZTLOAD K ZTSK
	.;D ONE^IBTOAT1
	Q

IBTOAT1
IBTOAT1	;ALB/AAS - CLAIMS TRACKING ADMISSION SHEET PRINT ; 18-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
ONE	; -- print one sheet here - no close device, no form feeds
	;    input   DFN  = patient file pointer
	;          IBTRN  = Tracking module entry
	;
	Q:'$D(DFN)
	I '$D(IOST) D HOME^%ZIS
	N I,J,X,Y,VADM,VAOA,VAPA,VA,VAEC,VAIN,IBTRND,VAEL,VAINDT,VA200
	;
	; -- Make sure tracking entry exists
	I +$G(IBTRN)<1!('$D(^IBT(356,+$G(IBTRN),0))) Q  ;D ADM^IBTUTL()
	S IBTRND=$G(^IBT(356,+$G(IBTRN),0))
	;
	S TAB=4,TAB2=45
	W $C(13),?(IOM-15/2),"ADMISSION SHEET"
	S IBTITLE=$G(^IBE(350.9,1,5))
	F I=1:1:3 W !,?(IOM-$L($P(IBTITLE,"^",I))/2),$P(IBTITLE,"^",I)
	;
	D DEMO,LINE,ADM,LINE,EM,LINE
	I $E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) G END
	D INS,LINE,^IBTOAT2
END	D KVAR^VADPT K VAEC,DIRUT
	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
ADM	; -- print admissions data
	I $G(IBTRN)="" W !?TAB,"No admission Found",!!!! G ADMQ
	S VA200="" D INP^VADPT
	I VAIN(1)="" N VAINDT S VAINDT=$P(+$G(^DGPM(+$P($G(^IBT(356,IBTRN,0)),"^",5),0)),".")_.2359 D INP^VADPT
	W !?TAB,"Adm. Date: ",$P(VAIN(7),"^",2)
	W ?TAB2,"Adm. Type: ",$E($$ATYPE($P(IBTRND,"^",7)),1,19) ; urgent/emergent
	W !?TAB," Provider: ",$P(VAIN(2),"^",2)
	W ?TAB2,"Specialty: ",$P(VAIN(3),"^",2)
	W !?TAB,"     Ward: ",$P(VAIN(4),"^",2)
	W ?TAB2," Room/Bed: ",VAIN(5)
	W !?TAB,"Adm. Diag: ",$$ADMDIAG^IBTRE6(IBTRN)
	;
ADMQ	Q
	;
DEMO	; -- print pt. demographics
	D 4^VADPT ;demographic and pt address
	D ELIG^VADPT ;eligiblity data
	;
	W !!?TAB,"  Patient: ",VADM(1)
	W ?TAB2,"  Address: ",VAPA(1)
	W !?TAB,"    Pt ID: ",VA("PID")
	I VAPA(2)'="" W ?TAB2+11,VAPA(2)
	W !?TAB,"      Dob: ",$P(VADM(3),"^",2)
	I VAPA(3)'="" W ?TAB2+11,VAPA(3)
	W !?TAB,"       SC: ",$S(+VAEL(3):"YES - "_$P(VAEL(3),"^",2)_"%",1:"NO")
	W ?TAB2+11,VAPA(4),$S(VAPA(4)'="":", ",1:""),$P($G(^DIC(5,+VAPA(5),0)),"^",2),"  ",VAPA(6)
	W !?TAB,"      Sex: ",$P(VADM(5),"^",2),?TAB2,"    Phone: ",VAPA(8)
	Q
	;
EM	S VAROOT="VAEC",VAOA("A")=1 D OAD^VADPT K VAROOT ;emergency contact info
	S VAOA("A")=5 D OAD^VADPT ;patient employer info
	W !,?TAB," Employer: ",VAOA(9)
	W ?TAB2,"  E-Cont.: ",VAEC(9) I VAEC(10)'="" W " - ",VAEC(10)
	W !?TAB+11,VAOA(1),?TAB2+11,VAEC(1)
	I VAEC(2)'=""!(VAOA(2)'="") W !?TAB+11,VAOA(2),?TAB2+11,VAEC(2)
	I VAEC(3)'=""!(VAOA(3)'="") W !?TAB+11,VAOA(3),?TAB2+11,VAEC(3)
	W !?TAB+11,VAOA(4),$S(VAOA(4)'="":", ",1:""),$P($G(^DIC(5,+VAOA(5),0)),"^",2),"  ",VAOA(6)
	W ?TAB2+11,VAEC(4),$S(VAEC(4)'="":", ",1:""),$P($G(^DIC(5,+VAEC(5),0)),"^",2),"  ",VAEC(6)
	W !?TAB,"    Phone: ",VAOA(8),?TAB2,"    Phone: ",VAEC(8)
	Q
	;
INS	; -- print insurance info
	N IBINS,IBCNT,I
	I '$D(IBDT) S IBDT=DT
	D ALL^IBCNS1(DFN,"IBINS",1,IBDT)
	I $G(IBINS(0))<1 W !,?TAB,"No Insurance Information",!!! G INSQ
	S MAX=$S(IOSL<61:1,IOSL<67:2,1:3)
	S I=0,IBCNT=0 F  S I=$O(IBINS(I)) Q:'I  S IBINS=IBINS(I,0) D  I '$D(IBALLIN),IBCNT>MAX W !?TAB,"MORE......" Q
	.S IBCNT=IBCNT+1
	.I IBCNT>1 W !
	.W !?TAB,"Ins. Co "_IBCNT_": ",$P($G(^DIC(36,+IBINS,0)),"^")
	.S X=$G(^DIC(36,+IBINS,.13)),X=$S($P(X,"^",3)'="":$P(X,"^",3),1:$P(X,"^"))
	.W ?TAB2,"    Phone: ",X
	.W !?TAB,"   Subsc.: ",$P(IBINS,"^",17)
	.W ?TAB2,"     Type: ",$E($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+$P(IBINS,"^",18),0)),"^",9),0)),"^"),1,20)
	.W !?TAB,"Subsc. ID: ",$P(IBINS,"^",2)
	.W ?TAB2,"    Group: ",$$GRP^IBCNS($P(IBINS,"^",18))
INSQ	Q
	;
LINE	; -- write a line
	W !,$$L("-",IOM)
	Q
	;
TWOL	; -- write two underlines
	W !?TAB,$$L("_",IOM-TAB),!!?TAB,$$L("_",IOM-TAB)
	Q
	;
L(C,L)	; -- output line
	S:$G(C)="" C="-"
	S:$G(L)="" L=IOM
	Q $TR($J(" ",L)," ",C)
	;
ATYPE(X)	; -- Admission Type Expand Set
	; -- input internal form (number)
	; -- output external form
	Q $P($P($P(^DD(356,.07,0),"^",3),+$G(X)_":",2),";",1)

IBTOAT2
IBTOAT2	;ALB/AAS - CLAIMS TRACKING ADMISSION SHEET PRINT ; 18-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
	;D DEMO,LINE,ADM,LINE,EM,LINE,INS,LINE,DIAG,PROC,FNL,SC,STMT
	D DIAG,PROC,SC,STMT
	Q
	;
DIAG	; -- pirnt diagnosis/procedure block
	W !?TAB,"Date",?12,"Diagnosis",?37,"Procedure",?60,"Final",?68,"DRG",?73,"LOS"
	F I=1:1:5 D BLINE
	Q
	;
PROC	; -- print procedures done
	;W !!?TAB,"Procedures Done",?56,"Date"
	;D TWOL^IBTOAT1
	Q
	;
	;
SC	; -- prints sc conditions
	N I,I1,I2,I3
	S I3=0
	S MAX=$S(IOSL<61:4,IOSL<67:6,1:11)
	I '+VAEL(3) W !! G SCQ
	W !!?TAB,"Service Connected Conditions: " W:'$G(IBTRCSC) ?54,"Treated"
	F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  D  I '$G(IBTRCSC),I3>MAX W !?TAB,"MORE...." Q
	.S I1=^DPT(DFN,.372,I,0)
	.Q:'$P(I1,"^",3)
	.S I2=$G(^DIC(31,+I1,0))
	.S:$P(I2,"^",4)'="" I2=$P(I2,"^",4)
	.S I2=$P(I2,"^")
	.W !?TAB+5,$E(I2,1,39),?49,$J($P(I1,"^",2),3)_"%" W:'$G(IBTRCSC) " _______" S I3=I3+1
	.Q
	I 'I3 W !?TAB,$S('$O(^DPT(DFN,.372,0)):"NONE STATED",1:"NO SC DISABILITIES LISTED") S I3=1
SCQ	F I3=I3:1:MAX W !
	Q
	;
STMT	; -- print attestation and sig. lines
	W !!,"I attest that these are the diagnoses and procedures for which the"
	W !,"Patient was treated during this episode of care."
	W !!,"MD: __________________________________    Date: __________________"
	W !!,"Patient: ",$E(VADM(1),1,20),"  ",VA("PID"),?IOM-30," Printed: " D NOW^%DTC S Y=% D D^DIQ W $P(Y,":",1,2)
	Q
	;
BLINE	; -- write line with BARS
	;
	W !?TAB,"     |                        |                      |        |     |"
	W !?TAB,"_____|________________________|______________________|________|_____|_____"
	Q

IBTOBI
IBTOBI	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Bill Preparation Report for a Single Visit"
	D END
	;
PAT	; -- Select patient
	W !!
	S DIC="^DPT(",DIC(0)="AEQM"
	D ^DIC K DIC I +Y<1 G END
	S DFN=+Y
	;
VSIT	;
	; -- get claims tracking visit entry
	D TRAC^IBTRV K IBY
	I '$G(IBTRN) G END
	;
DEV	; -- select device, run option
	W !
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOBI",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Bill Preparation Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G PAT
	;
	U IO
	D ONE,END G PAT
	Q
DQ	; -- task man entry point
	D ONE
	;
END	; -- Clean up
	W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,DIRUT,DUOUT,IBCNT,IBI,IBJ,IBNAR,IBTNOD,IBTRCD1,IBTRTP,IBDA
	D KVAR^VADPT
	Q
ONE	; -- print one billing report from ct
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	D PID^VADPT
	S IBTRND=$G(^IBT(356,+IBTRN,0)),IBTRND1=$G(^(1))
	S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	D HDR,SECT1,^IBTOBI1
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I '$D(VA("PID")) N I,J D PID^VADPT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,$S($D(IBCTHDR):IBCTHDR,1:"Bill Preparation Report"),?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !!,$E($P($G(^DPT(DFN,0)),"^"),1,25),?28,VA("PID"),?50,"DOB: ",$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3),1)
	W !,$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))," on ",$$FMTE^XLFDT($P(IBTRND,"^",6),1)
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
SECT1	; -- Section 1 - Visit info Region / misc billing info
	N IBD
	W !," Visit Information "
	S IBD(1,1)="    Visit Type: "_$P(IBETYP,"^")
	S X=$P(IBETYP,"^",3) I 'X W !,"No Visit Selected" Q
	D @X
	D MBI
	S I=0 F  S I=$O(IBD(I)) Q:'I  W !,$G(IBD(I,1)),?44,$E($G(IBD(I,2)),1,36)
	W !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
1	; -- visit region for admission or scheduled admission
	S IBDISDT=""
	I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0)),IBDISDT=+$G(^DGPM(+$P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17),0))
	I '$D(VAIN) S VA200="" D INP^VADPT
	I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
	S IBD(2,1)="Admission Date: "_$P(VAIN(7),"^",2)
	S IBD(3,1)="          Ward: "_$P(VAIN(4),"^",2)
	S IBD(4,1)="     Specialty: "_$P(VAIN(3),"^",2)
	S IBD(5,1)="Discharge Date: "_$$FMTE^XLFDT(IBDISDT,1)
	Q
2	; -- visit region for  outpatient care
	N IBOE
	S IBOE=$P(IBTRND,"^",4)
	S IBD(2,1)="    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	I +IBOE<1 S IBD(3,1)="  No Outpatient Encounter Found" Q
	S IBD(3,1)="        Clinic: "_$P($G(^SC(+$P($G(^SCE(+IBOE,0)),"^",4),0)),"^")
	S IBD(4,1)="  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P($G(^SCE(+IBOE,0)),"^",12))
	S IBD(5,1)="    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P($G(^SCE(+IBOE,0)),"^",10))
	S IBD(6,1)="  Special Cond: "_$$ENCL^IBTRED(IBOE)
	Q
	;
3	; -- visit region for rx refill
	N PSONTALK,PSOTMP,PSORXN,PSOFILL
	S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
	S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
	S IBD(2,1)="Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E"))
	S IBD(3,1)="   Refill Date: "_$G(PSOTMP(52.1,+$P(IBTRND,"^",10),.01,"E"))
	S IBD(4,1)="          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E"))
	S IBD(5,1)="      Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8)
	S IBD(6,1)="   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8)
	S IBD(7,1)="          NDC#: "_$P($G(^PSDRUG(+$P($G(^PSRX(+$P(IBTRND,"^",8),0)),"^",6),2)),"^",4)
	S IBD(8,1)="     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E"))
	Q
	;
4	; -- Visit region for prosthetics
	D 4^IBTOBI4
	Q
	;
MBI	; -- Misc. billing info
	S IBD(1,2)=" Visit Billable: "_$S('$P(IBTRND,"^",19):"YES",1:"NO-"_$$EXPAND^IBTRE(356,.19,$P(IBTRND,"^",19)))
	S IBD(2,2)=" Second Opinion: "_$S('$P(IBTRND,"^",14):"NOT REQUIRED",1:$S('$P(IBTRND,"^",15):"REQUIRED-NOT OBTAINED",1:"OBTAINED"))
	S IBD(3,2)=" Auto Bill Date: "_$$FMTE^XLFDT($P(IBTRND,"^",17),1)
	S IBD(4,2)="Special Consent: ROI "_$S('$P(IBTRND,"^",31):"NOT DETERMINED",1:$$EXPAND^IBTRE(356,.31,$P(IBTRND,"^",31)))
	S IBD(5,2)="Special Billing: "_$$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12))
	Q

IBTOBI1
IBTOBI1	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	F IBTAG="INS","BI","SC","CLIN^IBTOBI4","IR^IBTOBI2","HR^IBTOBI3" D @IBTAG Q:IBQUIT
	Q
	;
INS	; -- print ins. stuff
	N TAB,TAB2,IBALLIN,IBDT,IBINS,IBCNT,I,X,IBI,PHON,PHON2,PHON3,P,IBI
	S TAB=5,TAB2=45,IBALLIN=1
	S IBDT=$P(IBTRND,"^",6)
	I '$G(IBDT) S IBDT=DT
	W !,"  Insurance Information "
	;
	D ALL^IBCNS1(DFN,"IBINS",1,IBDT)
	I $G(IBINS(0))<1 W !,?TAB,"No Insurance Information",!!! G INSQ
	S IBI=0,IBCNT=0 F  S IBI=$O(IBINS(IBI)) Q:'IBI!(IBQUIT)  S IBINS=IBINS(IBI,0) D  Q:IBQUIT
	.S IBCNT=IBCNT+1
	.I ($Y+8)>IOSL D HDR^IBTOBI Q:IBQUIT
	.I IBCNT>1 W !
	.W !?TAB,"     Ins. Co "_IBCNT_": ",$E($P($G(^DIC(36,+IBINS,0)),"^"),1,23)
	.S X=$G(^DIC(36,+IBINS,.13))
	.S PHON=$S($P(X,"^",3)'="":$P(X,"^",3),1:$P(X,"^"))
	.S PHON2=$S($P(X,"^",2)'="":$P(X,"^",2),1:$P(X,"^"))
	.S P=$S($P(IBETYP,"^",3)=1:5,$P(IBETYP,"^",3)=2:6,$P(IBETYP,"^",3)=3:11,1:1)
	.S PHON3=$S($P(X,"^",P)'="":$P(X,"^",P),1:$P(X,"^"))
	.W ?TAB2,"Pre-Cert Phone: ",PHON
	.W !?TAB,"        Subsc.: ",$P(IBINS,"^",17)
	.W ?TAB2,"          Type: ",$E($P($G(^IBE(355.1,+$P($G(^IBA(355.3,+$P(IBINS,"^",18),0)),"^",9),0)),"^"),1,18)
	.W !?TAB,"     Subsc. ID: ",$P(IBINS,"^",2)
	.W ?TAB2,"         Group: ",$$GRP^IBCNS($P(IBINS,"^",18))
	.W !?TAB,"     Coord Ben: ",$E($$EXPAND^IBTRE(2.312,.2,$P(IBINS,"^",20)),1,18)
	.W ?TAB2," Billing Phone: ",PHON2
	.W !,?TAB,"Filing Time Fr: ",$$EXPAND^IBTRE(36,.12,$P($G(^DIC(36,+IBINS,0)),"^",12))
	.W ?TAB2,"  Claims Phone: ",PHON3
	.S X=$P($G(IBINS(IBI,1)),"^",8) I X'="" W !,"     Policy Comment: " W:($L(X)+23)>IOM ! W " ",X
	.D COMM(+$P(IBINS,"^",18))
	.Q:IBQUIT
	.W !?30,"-----------------------------------"
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
INSQ	Q
	;
BI	; -- print billing information
	Q:$D(IBCTHDR)
	I ($Y+8)>IOSL D HDR^IBTOBI Q:IBQUIT
BI1	W !,"  Billing Information "
	N IBDGCR,IBDGCRU1,IBDGCRU,IBAMNT,IBD,I
	S IBDGCR=$G(^DGCR(399,+$P(IBTRND,"^",11),0)),IBDGCRU1=$G(^("U1")),IBDGCRU=$G(^("U"))
	S IBAMNT=$$BILLD^IBTRED1(IBTRN)
	S IBD(1,1)="  Initial Bill: "_$P(IBDGCR,"^")
	S IBD(2,1)="   Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,"^",13)),1,14)
	S IBD(3,1)=" Total Charges: $ "_$J($P(IBAMNT,"^"),8)
	S IBD(4,1)="   Amount Paid: $ "_$J($P(IBAMNT,"^",2),8)
	;
	I $P(IBTRND,"^",19) S IBD(5,1)="Reason Not Billable: "_$$EXPAND^IBTRE(356,.19,$P(IBTRND,"^",19)),IBD(6,1)="Additional Comment: "_$P(IBTRND1,"^",8)
	;
	S IBD(1,2)="Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8)
	S IBD(2,2)="Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8)
	S IBD(3,2)="Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8)
	S IBD(4,2)="  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8)
	S I=0 F  S I=$O(IBD(I)) Q:'I  W !,$G(IBD(I,1)),?39,$E($G(IBD(I,2)),1,36)
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
SC	; -- print SC information
	I ($Y+7)>IOSL D HDR^IBTOBI Q:IBQUIT
	N VAEL,TAB,IBTRCSC
	D ELIG^VADPT
	W !,"  Eligibility Information"
	W !,"       Primary Eligibility: "_$P(VAEL(1),"^",2)
	W !,"         Means Test Status: "_$P(VAEL(9),"^",2)
	W !," Service Connected Percent: "_$S(+VAEL(3):+$P(VAEL(3),"^",2)_"%",1:"")
	I 'VAEL(3) W "Patient Not Service Connected",!! G SCQ
	S TAB=5,IBTRCSC=1 D SC^IBTOAT2
SCQ	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
COMM(DA)	; -- print comments from GROUP plans.
	Q:IBQUIT
	W !,"Group Plan Comments: "
	Q:'$D(^IBA(355.3,DA,11))
	K ^UTILITY($J,"W")
	S DIWL=10,DIWR=IOM-12,DIWF="W"
	S IBJ=0 F  S IBJ=$O(^IBA(355.3,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP I IOSL<($Y+3) Q:IBQUIT  D HDR^IBTOBI
	Q:IBQUIT
	D ^DIWW
	K ^UTILITY($J,"W")
	Q

IBTOBI2
IBTOBI2	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
IR	; -- print insurance review information
	Q:'$O(^IBT(356.2,"C",+IBTRN,0))  ; -no reivews
	I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
	W !,"  Insurance Review Information "
	N I,J,IBII,IBTRC,IBTRCD,IBACTION,TCODE
	S IBII="" F  S IBII=$O(^IBT(356.2,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBII,IBTRC)) Q:'IBTRC!(IBQUIT)  D
	.N IBJ,IBD
	.D IR1
	.D IR2
	.S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,39),?40,$E($G(IBD(IBJ,2)),1,39)
	.D COMM2(IBTRC) Q:IBQUIT
	.W !?30,"-----------------------------------"
	.I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
IR1	; -- print one review
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
	S IBD(1,1)="    Type Review: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4))
	S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
	Q
10	; -- pre-cert contact
15	; -- admission review
20	; -- urgent/emergent ins. contact
30	; -- continued stay contact
	S IBD(2,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
	S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
	S IBACTION=IBACTION+100 D @IBACTION
	Q
	;
40	; -- Discharge contact
100	; -- No type of action
	Q
50	; -- outpatient treatment
	S IBD(2,1)="  Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26))
	S IBD(3,1)="         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))
	S IBD(4,1)="   Auth. Number: "_$P(IBTRCD,"^",28)
	Q
60	; -- Appeal
65	; -- Nth appeal
	S IBD(2,1)="    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23))
	S IBD(3,1)="    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10))
	S IBD(4,1)="No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25))
	S IBD(5,1)="  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29))
	Q
70	; -- Patient
80	; -- Other
85	; -- Insurance verification
90	;
	Q
	;
110	; -- approval actions
	S IBD(3,1)="Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12)))
	S IBD(4,1)="  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13)))
	S IBD(5,1)="Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1)
	S IBD(6,1)="   Auth. Number: "_$P(IBTRCD,"^",28)
	Q
120	; -- denial actions
	S IBD(3,1)="    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15)))
	S IBD(4,1)="      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16)))
	S IBI=0,IBD=4 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  D
	.S IBD=IBD+1
	.S IBD(IBD,1)=" Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0)))
	Q
130	; -- penalty
	S IBI=0,IBD=2 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  D
	.S IBD=IBD+1
	.S IBD(IBD,1)="        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0)))
	Q
140	; -- case pending
	S IBD(3,1)="   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20))
	Q
150	; -- no coverage
	S IBD(3,1)="    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21))
	Q
	;
IR2	; -- contact information
	;N IBCDFN,IBCPOL
	;S IBCDFN=$P(IBTRCD1,"^",5),IBCPOL=$P(^DPT(DFN,.312,IBCDFN,0),"^",18)
	S IBD(1,2)="     Review Date: "_$E($$DAT1^IBOUTL(+IBTRCD,"2P"),1,20)
	S IBD(2,2)="   Insurance Co.: "_$E($P($G(^DIC(36,+$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0)),0)),"^"),1,20)
	S IBD(3,2)="Person Contacted: "_$E($P(IBTRCD,"^",6),1,20)
	S IBD(4,2)="  Contact Method: "_$E($$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)),1,20)
	S IBD(5,2)="Call Ref. Number: "_$E($P(IBTRCD,"^",9),1,20)
	S IBD(6,2)="          Status: "_$E($$EXPAND^IBTRE(356.2,.19,$P(IBTRCD,"^",19)),1,20)
	S IBD(7,2)="  Last Edited By: "_$E($$EXPAND^IBTRE(356.2,1.04,$P($G(^IBT(356.2,+$G(IBTRC),1)),"^",4)),1,20)
	I '$P(IBTRCD,"^",2) S IBD(2,2)="Patient Contacted: "_$E($P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"),1,20)
	Q
	;
COMM2(DA)	; -- print comments from ins. reviews.
	W !,"Comment: "
	Q:'$D(^IBT(356.2,DA,11))
	K ^UTILITY($J,"W")
	S DIWL=10,DIWR=IOM-12,DIWF="W"
	S IBJ=0 F  S IBJ=$O(^IBT(356.2,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP I IOSL<($Y+4) Q:IBQUIT  D HDR^IBTOBI
	Q:IBQUIT
	D ^DIWW
	K ^UTILITY($J,"W")
	Q

IBTOBI3
IBTOBI3	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
HR	; -- print hospital review information
	Q:'$O(^IBT(356.1,"C",+IBTRN,0))  ; -no reivews
	I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
	W !,"  Hospital Review Information "
	N I,J,IBII,IBTRV,IBTRVD
	S IBII="" F  S IBII=$O(^IBT(356.1,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBII,IBTRV)) Q:'IBTRV!(IBQUIT)  D
	.N IBD
	.D HR1
	.D HR2
	.S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,40),?40,$E($G(IBD(IBJ,2)),1,39)
	.D COMM1(IBTRV) Q:IBQUIT
	.W !?30,"-----------------------------------"
	.I ($Y+11)>IOSL D HDR^IBTOBI Q:IBQUIT
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
HR1	; -- print one review
	S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
	S IBTRTP=$P($G(^IBE(356.11,+$P($G(^IBT(356.1,IBTRV,0)),"^",22),0)),"^",2)
	D @IBTRTP
	Q
10	; -- precert review
15	; -- admission review
20	; -- urgent adm. review
	S IBD(1,2)=" Severity of Ill: "_$$SI^IBTRVD0($P(IBTRVD,"^",4))
	S IBD(2,2)="Intensity of Svc: "_$$SI^IBTRVD0($P(IBTRVD,"^",5))
	S IBD(3,2)="    Criteria Met: "_$$EXPAND^IBTRE(356.1,.06,$P(IBTRVD,"^",6))
	S IBD(4,2)=" Prov. Intervwed: "_$$EXPAND^IBTRE(356.1,.1,$P(IBTRVD,"^",10))
	S IBD(5,2)=" Dec. Influenced: "_$$EXPAND^IBTRE(356.1,.11,$P(IBTRVD,"^",11))
	S IBD=5
	S IBNAR=0 F  S IBNAR=+$O(^IBT(356.1,+IBTRV,12,IBNAR)) Q:'IBNAR  D
	.S IBNARD=$G(^IBT(356.1,+IBTRV,12,IBNAR,0))
	.S IBD=IBD+1
	.S IBD(IBD,2)="Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P(^(0),"^")
	Q
30	; -- concurrent review
	S IBD(1,2)="   Day of Review: "_$J($P(IBTRVD,"^",3),2)
	S IBD(2,2)=" Severity of Ill: "_$$SI^IBTRVD0($P(IBTRVD,"^",4))
	S IBD(3,2)="Intensity of Svc: "_$$SI^IBTRVD0($P(IBTRVD,"^",5))
	S IBD(4,2)="Dschg Screen Met: "_$$EXPAND^IBTRE(356.1,.12,$P(IBTRVD,"^",12))
	S IBD(5,2)="Acute Care Dschg: "_$$EXPAND^IBTRE(356.1,1.17,$P($G(^IBT(356.1,+IBTRV,1)),"^",17))
	S IBD=5
	S IBNAR=0 F  S IBNAR=+$O(^IBT(356.1,+IBTRV,13,IBNAR)) Q:'IBNAR  D
	.S IBNARD=$G(^IBT(356.1,+IBTRV,13,IBNAR,0))
	.S IBD=IBD+1
	.S IBD(IBD,2)="Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P(^(0),"^")
	Q
40	; -- discharge review
	S IBD(1,2)="Discharge Screen: "_$$SI^IBTRVD0($P(IBTRVD,"^",12))
	S IBD=1
	Q
	;
50	;
60	;
70	;
80	;
85	;
90	;
	Q
	;
UNIT	; -- Special unit information
	I IBTRTP=40 S IBD(IBD+1)=" D/C Screen Met: "_$$SI^IBTRVD0($P(IBTRVD,"^",13)) Q
	S IBD(IBD+1)="Special Unit SI: "_$$SI^IBTRVD0($P(IBTRVD,"^",8))
	S IBD(IBD+2)="Special Unit IS: "_$$SI^IBTRVD0($P(IBTRVD,"^",9))
	Q
	Q
	;
HR2	; -- contact information
	S IBD(1,1)="     Review Date: "_$$DAT1^IBOUTL(+IBTRVD,"2P")
	S IBD(2,1)="     Review Type: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",1)
	S IBD(3,1)="       Specialty: "_$P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^")
	S IBD(4,1)="     Methodology: "_$$EXPAND^IBTRE(356.1,.23,$P(IBTRVD,"^",23))
	S IBD(5,1)="          Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21))
	S IBD(6,1)="  Last Edited By: "_$E($$EXPAND^IBTRE(356.1,1.04,$P($G(^IBT(356.1,+$G(IBTRV),1)),"^",4)),1,20)
	S IBD(7,1)="Next Review Date: "_$$DAT1^IBOUTL($P(IBTRVD,"^",20))
	Q
	;
COMM1(DA)	; -- print comments from ins. reviews.
	W !,"Comment: "
	K ^UTILITY($J,"W")
	S DIWL=10,DIWR=IOM-12,DIWF="W"
	S IBJ=0 F  S IBJ=$O(^IBT(356.1,DA,11,IBJ)) Q:'IBJ  S X=^(IBJ,0) D ^DIWP  I IOSL<($Y+4) Q:IBQUIT  D HDR^IBTOBI
	Q:IBQUIT
	D ^DIWW
	Q

IBTOBI4
IBTOBI4	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
CLIN	; -- output clinical information
	N IBOE,DGPM
	Q:$D(IBCTHDR)
	;
	I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
	I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
	F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
	Q
	;
DIAG	; -- print diagnosis information
	I '$G(DGPM),('$G(IBOE)) Q
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
DIAG1	W !,"  Diagnosis Information "
	N IBXY,SDDXY
	I $G(DGPM) D SET^IBTRE3(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE3(.IBXY)
	I $G(IBOE) D SET^SDCO4(IBOE) W:'$D(SDDXY) !?6,"Nothing on File" D:$D(SDDXY) LIST^SDCO4(.SDDXY)
	; 
	D:$G(DGPM) DRG
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
PROC	; -- print procedure information
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
PROC1	W !,"  Procedure Information "
	;
	N IBXY,IBCNT S IBCNT=0
	I $G(DGPM) D SET^IBTRE4(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE4(.IBXY)
	I '$G(DGPM) D  W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST(.IBXY)
	.S IBDT=$P($P(IBTRND,"^",6),"."),IBI=IBDT-.000001
	.F  S IBI=$O(^SDV("C",DFN,IBI)) Q:'IBI!(IBI>(IBDT+.25))  D
	..S IBCS=0 F  S IBCS=$O(^SDV(IBI,"CS",IBCS)) Q:'IBCS  I $D(^SDV(IBI,"CS",IBCS,"PR")) S IBPR=^("PR") D
	...F IBJ=1:1:5 I $P(IBPR,"^",IBJ) S IBCNT=IBCNT+1,IBXY(IBCNT)=$P(IBPR,"^",IBJ)_"^"_IBI
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
PROV	; -- print provider information
	I '$G(DGPM),('$G(IBOE)) Q
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
PROV1	W !,"  Provider Information "
	N IBXY,SDPRY
	I $G(DGPM) D SET^IBTRE5(+IBTRN) W:'$D(IBXY) !?6,"Nothing on File" D:$D(IBXY) LIST^IBTRE5(.IBXY)
	I $G(IBOE) D SET^SDCO3(IBOE) W:'$D(SDPRY) !?6,"Nothing on File" D:$D(SDPRY) LIST^SDCO3(.SDPRY)
	W:'IBQUIT !?4,$TR($J(" ",IOM-8)," ","-"),!
	Q
	;
LIST(IBXY)	; -- list procedures array
	; Input  -- IBXY     Diagnosis Array Subscripted by a Number
	; Output -- List Diagnosis Array
	N I,IBXD
	W !
	S I=0 F  S I=$O(IBXY(I)) Q:'I  S IBXD=$G(^ICPT(+IBXY(I),0)) D
	.W !?2,I,"  ",$P(IBXD,"^"),?15,$E($P(IBXD,"^",2),1,40),?60,$$DAT1^IBOUTL($P(IBXY(I),"^",2),"2P")
	Q
	;
DRG	; -- print drgs.
	I '$G(DGPM) Q
	Q:$P(IBETYP,"^",3)>1
	I ($Y+9)>IOSL D HDR^IBTOBI Q:IBQUIT
DRG1	W !!,"  Associated Interim DRG Information "
	N IBX,IBDTE,IBDRG
	I $G(DGPM) D
	.I '$O(^IBT(356.93,"AMVD",DGPM,0)) W !?6,"Nothing on File" Q
	.S IBDTE=0 F  S IBDTE=$O(^IBT(356.93,"AMVD",DGPM,IBDTE)) Q:'IBDTE  S IBDRG=0 F  S IBDRG=$O(^IBT(356.93,"AMVD",DGPM,IBDTE,IBDRG)) Q:'IBDRG  D
	..S IBX=$G(^IBT(356.93,IBDRG,0)) Q:IBX=""
	..W !?5,$$DAT1^IBOUTL($P(IBX,"^",3)),?16,+IBX," - ",$G(^ICD(+IBX,1,1,0))
	..W !?21," Estimate ALOS: "_$J($P(IBX,"^",4),4,1)
	..W ?45," Days Remaining: "_$J($P(IBX,"^",5),2)
	Q
	;
4	; -- Visit region for prosthetics
	N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
	S IBD(2,1)="          Item: "_$G(IBRMPR(660,+IBDA,4,"E"))
	S IBD(3,1)="   Description: "_$G(IBRMPR(660,+IBDA,24,"E"))
	S IBD(4,1)="      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),4)
	S IBD(5,1)="    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E"))
	S IBD(6,1)="   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E"))
	S IBD(7,1)="        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E"))
	S IBD(8,1)="        Source: "_$G(IBRMPR(660,+IBDA,12,"E"))
	S IBD(9,1)=" Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E"))
	S IBD(10,1)="       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E"))
	S IBD(11,1)=" Return Status: "_$G(IBRMPR(660,+IBDA,17,"E"))
	Q

IBTODD
IBTODD	;ALB/AAS - CLAIMS TRACKING DENIED DAYS REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Denied Days Report",!!
	;
	S IBSORT="P"
	N DIR
	S DIR("?")="Answer YES if you only want to print a summary or answer NO if you want a detailed listing plus the summary."
	S DIR(0)="Y",DIR("A")="Print Summary Only",DIR("B")="YES" D ^DIR K DIR
	I $D(DIRUT) G END
	S IBSUM=Y
	G:IBSUM DATE
	;
SORT	; -- ask how they want it sorted
	W !!
	S DIR(0)="SOBA^P:PATIENT;A:ATTENDING;S:SERVICE"
	S DIR("A")="Print Report By [P]atient  [A]ttending  [S]ervice: "
	S DIR("B")="P"
	S DIR("?",1)="This report may be prepared by either Patient, Attending, or Service."
	S DIR("?",2)=""
	S DIR("?",3)=""
	S DIR("?",4)=""
	S DIR("?",5)=""
	S DIR("?",6)=""
	S DIR("?",7)=""
	S DIR("?",8)="  "
	S DIR("?")=""
	D ^DIR K DIR
	S IBSORT=Y I "PAS"'[Y!($D(DIRUT)) G END
	;
DATE	; -- select date range
	W ! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W !
	I 'IBSUM W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTODD",ZTSAVE("IB*")="",ZTDESC="IB - Denied Days Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	D DQ G END
	Q
	;
END	; -- Clean up
	W ! K ^TMP($J,"IBTODD")
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,X2,Y,DFN,%ZIS,DGPM,VA,IBI,IBJ,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,IBTRC,IBTRCD,IBDEN,IBDAY,IBTALL,IBADM,IBDISCH,IBMAX
	K IBAPL,IBBBS,IBBDT,IBC,IBCDT,IBCNT,IBDT,IBD,IBDATA,IBEDT,IBNAM,IBPRIM,IBPROV,IBRATE,IBSECN,IBSERV,IBSORT,IBSPEC,IBSUM,IBSUBT,IBTOTL
	D KVAR^VADPT
	Q
DQ	; -- entry print from taskman
	K ^TMP($J,"IBTODD")
	S X=132 X ^%ZOSF("RM")
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
	D BLD,PRINT^IBTODD1
	I $D(ZTQUEUED) G END
	Q
	;
BLD	; -- sort through data and build array to print from
	;
	S IBTRC=0
	F  S IBTRC=$O(^IBT(356.2,"ACT",IBDEN,IBTRC)) Q:'IBTRC  D
	.N IBTRN,IBTRND,IBTRCD,DFN
	.S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	.S IBTALL=$P($G(^IBT(356.2,+IBTRC,1)),"^",7)
	.I +IBTRCD<IBBDT!(+IBTRCD>(IBEDT+.9)) Q
	.S IBTRN=$P(IBTRCD,"^",2),IBTRND=$G(^IBT(356,+IBTRN,0))
	.I $P($G(^IBE(356.6,+$P(IBTRND,"^",18),0)),"^",3)'=1 Q  ; not an admission type event
	.S DFN=$P(IBTRCD,"^",5),IBNAM=$P($G(^DPT(+DFN,0)),"^") Q:IBNAM=""
	.S IBD=$$PROV(IBTRC),IBPROV=+IBD,IBSPEC=$P(IBD,"^",2),IBSERV=$P(IBD,"^",3)
	.S IBBBS=$$BBS^IBTOSUM1($P(IBD,"^",2))
	.S IBRATE=$$RATE^IBTOSUM1(IBBBS,+IBTRCD)
	.S IBMAX=$$DAY^IBTUTL3(IBBDT,IBEDT)+1
	.S IBCDT=$$CDT^IBTODD1(IBTRN)
	.I 'IBTALL S IBDAY=$$DAY^IBTUTL3(+$P(IBTRCD,"^",15),+$P(IBTRCD,"^",16),IBTRN)
	.I IBTALL S IBDAY=$$DAY^IBTUTL3(+IBCDT,$S($P(IBCDT,"^",2):$P(IBCDT,"^",2),1:DT),IBTRN)
	.I IBDAY>IBMAX S IBDAY=IBMAX
	.D SET
	Q
	;
SET	; -- set array to print from
	; -- ^tmp($j,"ibtodd",primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^ billing bed section ^ billing rate^ no. days denied
	S IBPRIM=$S(IBSORT="P":IBNAM,IBSORT="A":IBPROV,1:IBSERV)
	S IBSECN=$S(IBSORT="P":IBPROV,1:IBNAM)
	S:IBPRIM="" IBPRIM="UNKNOWN" S:IBSECN="" IBSECN="UNKNOWN"
	S ^TMP($J,"IBTODD",IBPRIM,IBSECN,IBTRC)=DFN_"^"_IBPROV_"^"_IBSPEC_"^"_IBSERV_"^"_IBBBS_"^"_IBRATE_"^"_IBDAY
	Q
	;
PROV(IBTRC)	; -- find attending for an inpt. stay
	N I,J,X,Y,DFN,DGPM,VA200,VAIN,VAERR
	;
	S VA200="",VAINDT=+$G(^IBT(356.2,+IBTRC,0)),DFN=$P($G(^(0)),"^",5) D INP^VADPT
	I VAIN(1)="" S VAINDT=+$G(^DGPM(+$P($G(^IBT(356,+$P($G(^IBT(356.2,+IBTRC,0)),"^",2),0)),"^",5),0)) S VAINDT=$P(VAINDT,".")+.24 D INP^VADPT
	;
	S X=+VAIN(11)
	S DGPM=$P($G(^IBT(356,+$P($G(^IBT(356.2,+IBTRC,0)),"^",2),0)),"^",5)
	S Y=$G(^IBT(356.94,+$O(^IBT(356.94,"ATP",+DGPM,1,0)),0))
	S:$P(Y,"^",3) X=$P(Y,"^",3)
PROVQ	Q X_"^"_+VAIN(3)_"^"_$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$G(VAIN(3)),0)),"^",2),0)),"^",3)
	;
	Q
	;
SUBH(Z)	; -- write sub header for report
	;    input z = subheader data
	;    requires ibsort = how report is sorted
	N X S X=""
	Q:IBSORT="P"  ; no sub header if sorting by patient
	I IBSORT="S" S X="Service: "_$$EXPAND^IBTRE(42.4,3,IBI)
	I IBSORT="A" S X="Attending: "_IBI
	I $L(X) W !!?15,X
	Q
	;
SUBT	; -- write out sub totals, initialize variable
	I '$G(IBSUBT) G SUBTQ
	W !?64,"------",!,?64,$J(IBSUBT,6)
SUBTQ	S IBSUBT=0
	Q

IBTODD1
IBTODD1	;ALB/AAS - CLAIMS TRACKING DENIED DAYS REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
PRINT	; -- print data
	; -- ^tmp($j,"ibtodd",primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^ billing bed section ^ billing rate
	;
	K IBCNT
	I 'IBSUM D HDR
	I 'IBSUM,$O(^TMP($J,"IBTODD",""))="" W !!,"No Denials Found in Date Range." G PRINTQ
	;
	S IBI="",IBISV=""
	F  S IBI=$O(^TMP($J,"IBTODD",IBI)) Q:IBI=""!(IBQUIT)  D
	.I IBSORT'="P",IBISV'=IBI D SUBT^IBTODD
	.S IBISV=IBI
	.D SUBH^IBTODD(IBI) S IBJ="" F  S IBJ=$O(^TMP($J,"IBTODD",IBI,IBJ)) Q:IBJ=""!(IBQUIT)  D
	..S IBTRC=""
	..F  S IBTRC=$O(^TMP($J,"IBTODD",IBI,IBJ,IBTRC)) Q:IBTRC=""!(IBQUIT)  S IBDATA=^(IBTRC) D ONE
	I 'IBSUM D SUBT^IBTODD
	D SUM
	;
PRINTQ	Q
	;
ONE	; -- print one entry
	; -- ^tmp($j,"ibtodd",primary sort,secondary sort,ibtrc)=DFN ^ attending ^ treating specialty ^ service ^ billing bed section ^ billing rate
	;
	S IBAPL=$$APPEAL(IBTRC)
	D CNTS
	S IBTALL=+$P($G(^IBT(356.2,+IBTRC,1)),"^",7) ;entire admission denied
	Q:IBSUM
	;
	I IOSL<($Y+4) D HDR
	S DFN=+IBDATA D PID^VADPT
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
L1	W !,$E($P(^DPT(DFN,0),"^"),1,22),?25,VA("PID")
	S IBCDT=$$CDT($P(IBTRCD,"^",2))
	W ?38,$$DAT1^IBOUTL(+IBCDT\1) W:$P(IBCDT,"^",2) " to"
	W ?50,$J($P(IBDATA,"^",2),8)
	I IBTALL W ?64,"ALL"
	I 'IBTALL W ?64,$$DAT1^IBOUTL($P(IBTRCD,"^",15),"2P") W:$P(IBTRCD,"^",16) " to"
	I IBTALL!('$P(IBTRCD,"^",16)) W " (",$P(IBDATA,"^",7),")"
	K IBDEN,IBC S IBDEN=0,IBC=0
	F  S IBDEN=$O(^IBT(356.2,+IBTRC,12,IBDEN)) Q:'IBDEN  S IBC=IBC+1,IBC(IBC)=^(IBDEN,0)
	W:$G(IBC(1)) ?78,$E($$EXPAND^IBTRE(356.212,.01,+IBC(1)),1,25)
	W ?110,$S(+$P(IBAPL,"^",2):"YES",1:"NO")
	W ?117,$J(+IBAPL,8)
	;
	;
L2	W !?38,$$DAT1^IBOUTL($P(IBCDT,"^",2)\1,"2P")
	W ?64,$$DAT1^IBOUTL($P(IBTRCD,"^",16),"2P")
	I 'IBTALL,$P(IBTRCD,"^",16) W " (",$P(IBDATA,"^",7),")"
	W ?78,$E($$EXPAND^IBTRE(356.212,.01,$G(IBC(2))),1,25)
	;
	I $O(IBC(2)) S IBDEN=2 F  S IBDEN=$O(IBC(IBDEN)) Q:'IBDEN  W !?78,$E($$EXPAND^IBTRE(356.212,.01,$G(IBC(IBDEN))),1,25)
ONEQ	W !
	Q
	;
SUM	; -- Print summary report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"MCCR/UR DENIED DAYS Summary Report for Reviews Dated ",$$FMTE^XLFDT(IBBDT),$S(IBBDT'=IBEDT:" to "_$$FMTE^XLFDT(IBEDT),1:""),"  "
	W ?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !!,?35,"Number",?50,"Days",?65,"Amount",?80,"Days won",?100,"Maximum"
	W !,"Service",?35,"Denials",?50,"Denied",?65,"Denied",?80,"on Appeal",?100,"Billing Rate"
	W !,$TR($J(" ",IOM)," ","-")
	;
	I $O(^TMP($J,"IBTODD",""))="" W !!,"No Denials Found in Date Range." G SUMQ
	;
	S IBSERV="" F  S IBSERV=$O(IBCNT(IBSERV)) Q:IBSERV=""  D
	.W !,$$EXPAND^IBTRE(42.4,3,IBSERV)
	.W ?32,$J($P(IBCNT(IBSERV),"^",3),8)
	.W ?46,$J(+IBCNT(IBSERV),8)
	.S X=$P(IBCNT(IBSERV),"^",2),X2="0$" D COMMA^%DTC W ?60,X
	.W ?81,$J($P(IBCNT(IBSERV),"^",4),6)
	.S X=$P(IBCNT(IBSERV),"^",6),X2="0$" D COMMA^%DTC W ?95,X
	;
	W !?48,"--------",!,?48,$J(IBTOTL,6)
SUMQ	;
	Q
	;
CNTS	; -- develop summary data
	S IBSERV=$P(IBDATA,"^",4)
	I IBSERV="" S IBSERV="UNKNOWN"
	S:'$D(IBCNT(IBSERV)) IBCNT(IBSERV)=""
	S $P(IBCNT(IBSERV),"^")=$P(IBCNT(IBSERV),"^")+$P(IBDATA,"^",7)
	S $P(IBCNT(IBSERV),"^",2)=$P(IBCNT(IBSERV),"^",2)+($P(IBDATA,"^",7)*$P(IBDATA,"^",6))
	S $P(IBCNT(IBSERV),"^",3)=$P(IBCNT(IBSERV),"^",3)+1
	S $P(IBCNT(IBSERV),"^",4)=$P(IBCNT(IBSERV),"^",4)+$G(IBAPL)
	S:$P(IBCNT(IBSERV),"^",6)<$P(IBDATA,"^",6) $P(IBCNT(IBSERV),"^",6)=$P(IBDATA,"^",6)
	S IBSUBT=$G(IBSUBT)+$P(IBDATA,"^",7)
	S IBTOTL=$G(IBTOTL)+$P(IBDATA,"^",7)
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"MCCR/UR DENIED DAYS Report for Reviews Dated ",$$FMTE^XLFDT(IBBDT),$S(IBBDT'=IBEDT:" to "_$$FMTE^XLFDT(IBEDT),1:""),"  "
	W ?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !!,?38,"Dates of",?64,"Dates",?117,"Days Approved"
	W !,"Patient",?25,"Pt. ID",?38,"Care",?50,"Attending",?64,"Denied",?78,"Denial Reason",?105,"Appealed",?117,"on Appeal"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
CDT(IBTRN)	; -- compute dates of care
	N X,Y S X=$G(^IBT(356,+IBTRN,0)),Y=""
	I $P(X,"^",5) S DGPM=$G(^DGPM($P(X,"^",5),0)) D
	.S Y=+DGPM
	.I $P(DGPM,"^",17) S Y=Y_"^"_+$G(^DGPM($P(DGPM,"^",17),0))
	I 'Y S Y=$P(X,"^",6)
	Q Y
	;
APPEAL(IBTRC)	; -- Find appeals
	N X,Y,IBAPEAL,IBTRN,IBTRSV S (Y,X)=0
	S IBTRSV=IBTRC
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AP",+IBTRSV,IBTRC)) Q:'IBTRC  S Y=1,X=X+$$AP(IBTRC)
	;
	Q X_"^"_Y
	;
AP(IBTRC)	; -- count days approved
	N X,Y,Z
	S (X,Z)=0
	F  S X=$O(^IBT(356.2,+IBTRC,14,X)) Q:'X  S Y=$G(^(X,0)),Z=Z+$$FMDIFF^XLFDT($P(Y,"^",2),+Y)+1
	Q Z

IBTOLR
IBTOLR	;ALB/AAS/BGA - LIST CLAIMS TRACKING LIST ENTRIES BEING TRACKED; 04-NOV-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	; -- fileman print of random sample cases, etc.
	W !!,"Print List of Visits Requiring Review",!!
	;
	W !!,"You will need a 132 column printer for this report!",!!
	D SORT G:$G(IBQUIT) END
	D ADM G:$G(IBQUIT) END
	D ASK G:$G(IBQUIT) END
	S DIC="^IBT(356,",FLDS="[IBT LIST VISITS]",BY="[IBT LIST VISITS]"
	;
	I $G(IBSORT)="H" S DIS(0)="N IBTRND S IBTRND=$G(^IBT(356,D0,0)) I $P(IBTRND,U,20) I $P(IBTRND,U,25)!($P(IBTRND,U,26))!($P(IBTRND,U,27))"
	I $G(IBSORT)="I" S DIS(0)="N IBTRND S IBTRND=$G(^IBT(356,D0,0)) I $P(IBTRND,U,20),$P(IBTRND,U,24)"
	I $G(IBSORT)="B" S DIS(0)="N IBTRND S IBTRND=$G(^IBT(356,D0,0)) I $P(IBTRND,U,20) I $P(IBTRND,U,24)!($P(IBTRND,U,25))!($P(IBTRND,U,26))!($P(IBTRND,U,27))"
	;
	I $G(IBADM) S DIS(1)="I $P($G(^IBE(356.6,+$P($G(^IBT(356,D0,0)),U,18),0)),U,3)=1"
	;
	;
	S IBCNT=0 F I=24:1:27 S IBCNT(I)=0 ;initialize count variable
	S DHIT="D SUB^IBTOLR"
	S DIOEND="D FNL^IBTOLR"
	S DHD="LIST OF VISITS FROM "_IBFR_" TO: "_IBTO_" REQUIRING REVIEWS"
	D EN1^DIP
	W !
	;
END	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K D,I,J,X,Y,DIC,FLDS,BY,TO,FR,DIS,IBSORT,IBQUIT,IBCNT,IBHIT,DIOEND
	K IBFR,IBTO
	Q
	;
SORT	; -- ask how they want it sorted
	N DIR
	S DIR(0)="SOBA^H:HOSPITAL REVIEWS;I:INSURANCE REVIEWS;B:BOTH"
	S DIR("A")="Include [H]ospital Reviews  [I]nsurance Reviews  [B]oth: "
	S DIR("B")="B"
	S DIR("?",1)="This report will list visits that are currently indicate that reviews"
	S DIR("?",2)="are required.  Indicate if you want visits that require Hospital Reviews, Insurance Reviews or Both"
	S DIR("?",3)=" ",DIR("?")="The default is Both."
	D ^DIR K DIR
	S IBSORT=Y I "HIB"'[Y!($D(DIRUT)) S IBQUIT=1 Q
	W !
	Q
	;
ADM	S DIR(0)="Y",DIR("A")="List Admissions Only",DIR("B")="YES"
	S DIR("?")="Answer Yes if you only want admissions listed, answer No if you want all visit types (outpatient, prescription, etc) listed"
	D ^DIR K DIR
	S IBADM=Y I $D(DIRUT) S IBQUIT=1
	Q
	;
ASK	N IBBDT,IBEDT
	D DATE^IBOUTL
	I (IBBDT<1)!(IBEDT<1) S IBQUIT=1 Q
	S FR=IBBDT_",?",TO=IBEDT_",?"
	S IBFR=$$DAT1^IBOUTL(IBBDT),IBTO=$$DAT1^IBOUTL(IBEDT)
	Q
	;
SUB	; -- do subcount
	N IBX,IBI
	S IBX=$G(^IBT(356,D0,0))
	F IBI=24:1:27 I $P(IBX,"^",IBI) S IBCNT(IBI)=IBCNT(IBI)+1
	S IBCNT=IBCNT+1
	Q
	;
FNL	; -- print sub counts
	Q:'IBCNT
	N IBPLUS
	I $G(IOM)<81 S IBPLUS=4
	W !?72,"----",?77," ---",?(86+$G(IBPLUS)),"----",?(94+$G(IBPLUS))," ---"
	W !,"COUNT",?72,$J(IBCNT(24),4),?77,$J(IBCNT(25),4),?(86+$G(IBPLUS)),$J(+IBCNT(26),4),?(94+$G(IBPLUS)),$J(+IBCNT(27),4)
	Q

IBTONB
IBTONB	;ALB/AAS - CLAIMS TRACKING NOT BILLED REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Unbilled Care from Claims Tracking"
	;
DATE	; -- select date
	W !! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W !
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTONB",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Unbilled Care from Claims Tracking" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	D DQ G END
	Q
	;
END	; -- Clean up
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG
	D KVAR^VADPT
	Q
DQ	; -- print one billing report from ct
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	W !!,"Not Done Yet"
	;
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"MCCR/UR ACTIVITY REPORT Report",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
	Q
PAT	; -- Select patient
	W !!
	S DIC="^DPT(",DIC(0)="AEQM"
	D ^DIC K DIC I +Y<1 G END
	S DFN=+Y
	;
VSIT	;
	; -- get claims tracking visit entry
	D TRAC^IBTRV
	I '$G(IBTRN) G END

IBTOPW
IBTOPW	;ALB/AAS - CLAIMS TRACKING PENDING REVIEWS REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Pending Reviews Report",!!!
	;
SORT	D SORT^IBTRPR0
	;
REVS	; -- ask if hospital review, insurance reviews or both
	N DIR W !
	S DIR(0)="SOBA^H:HOSPITAL REVIEWS;I:INSURANCE REVIEWS;B:BOTH;"
	S DIR("A")="Print [H]ospital Reviews  [I]Insurance Reviews  [B]oth: "
	S DIR("B")="B"
	S DIR("?",1)="Select if you would like to print pending Hospital Reviews, Insurance"
	S DIR("?",2)="Reviews or both."
	S DIR("?",3)=" ",DIR("?")="The default is both.  This will print first the hospital reviews, then the insurance reviews."
	D ^DIR K DIR
	I "HIB"'[Y!($D(DIRUT)) G END
	S IBTRPRF=$S(Y="B":12,Y="I":2,1:1)
	;
	S IBTWHO="A" I IBSORT="A" D WHOSE^IBTRPR0 G:$D(VALMQUIT) END
	S IBTPRT="B",VAUTD=1 I IBSORT="T" D TYPE^IBTRPR0 G:$D(VALMQUIT) END
	I IBSORT="T"!(IBSORT="W") W ! D PSDR^IBODIV G:Y<0 END
	;
DATE	; -- select date
	W !! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	S IBTPBDT=IBBDT,IBTPEDT=IBEDT
	;
DEV	; -- select device, run option
	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOPW",ZTSAVE("IB*")="",ZTSAVE("VAUTD")="",ZTSAVE("VAUTD(")="",ZTDESC="IB - Pending Reviews Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	D DQ G END
	Q
	;
END	; -- Clean up
	W !
	K ^TMP("IBSRT",$J),^TMP("IBSRT1",$J) W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,DUOUT,DIRUT,%ZIS,VA,VAERR,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,IBTRPRF,IBTSORT,IBTOPW,IBTWHO,IBTPRT,IBDIV
	K ENTRY,FILE,IBDATE,IBJ,IBNEXT,IBREV,IBSTATUS,IBTPEDT,IBTPBDT,IBTRC,IBTRV,TYPE,IBASSIGN,IBCNT,IBDATA,IBFLAG,IBK,IBL,IBSORT,IBWARD,IBEDT,IBBDT,IBDV,VAUTD
	Q
	;
DQ	; -- print one billing report from ct
	; -- run the scheduled admissions list
	;
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	;
	; -- put division in array by name
	I '$D(VAUTD) S VAUTD=1
	I VAUTD'=1 S I="" F  S I=$O(VAUTD(I)) Q:'I  S IBDIV(VAUTD(I))=I
	;
	; -- run the scheduled admissions list
	D ^IBTRKR2 ;W:'$D(ZTQUEUED) !!,"Building your work list..."
	U IO
	D BLD
	I IBCNT<1 D HDR W !!,"No Pending Reviews found."
	I $D(ZTQUEUED) G END
	Q
	;
HDR	; -- Print header for billing report
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stoped at user request"
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Pending Reviews Report for Division ",$G(IBDV),?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Period ",$$FMTE^XLFDT(IBBDT)," to ",$$FMTE^XLFDT(IBEDT)
	W !,"Patient",?23,"Pt. ID",?30,"Ward",?42,"Review Type",?65,"Due Date",?75,"Status",?85,"Assigned to",?105,"Visit",?115,"Date"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
BLD	; -- build list
	;  1.  build pending hospital reviews
	;  2.  build pending insurance reviews
	;
	K ^TMP("IBSRT",$J),^TMP("IBSRT1",$J)
	N IBI,IBJ
	S IBCNT=0,IBI="",IBTOPW=1
	I '$G(IBTRPRF) S IBTRPRF=12
	;
	D STOP G BLDQ:IBQUIT D:IBTRPRF[1 1^IBTRPR01 S IBQUIT=0
	;
	D STOP G BLDQ:IBQUIT D:IBTRPRF[2 2^IBTRPR01 S IBQUIT=0
	;
	; -- go through sorted list
	S IBDV="" F  S IBDV=$O(^TMP("IBSRT",$J,IBDV)) Q:IBDV=""!(IBQUIT)  D
	.I 'VAUTD,'$D(IBDIV(IBDV)) Q
	.D HDR
	.S TYPE="" F  S TYPE=$O(^TMP("IBSRT",$J,IBDV,TYPE)) Q:TYPE=""!(IBQUIT)  D
	..S IBI="" F  S IBI=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI)) Q:IBI=""!(IBQUIT)  S IBJ="" F  S IBJ=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ)) Q:IBJ=""!(IBQUIT)  D
	...S IBK="" F  S IBK=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK)) Q:IBK=""!(IBQUIT)  S IBL="" F  S IBL=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK,IBL)) Q:IBL=""!(IBQUIT)  D ONE
	;
BLDQ	Q
	;
ONE	; -- print one patients data
	I ($Y+5)>IOSL D HDR Q:IBQUIT
	S IBDATA=^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK,IBL)
	S IBTRN=+IBDATA,ENTRY=$P(IBDATA,"^",2)
	S DFN=$P(IBDATA,"^",4)
	S IBSTATUS=$P(IBDATA,"^",6),IBREV=$P(IBDATA,"^",7)
	S IBASSIGN=$P(IBDATA,"^",9)
	S IBFLAG=$O(^TMP("IBSRT1",$J,DFN,"")),IBFLAG=$O(^TMP("IBSRT1",$J,DFN,IBFLAG)) I IBFLAG'="" S IBFLAG="+"
	S FILE=$P(IBDATA,"^",8)
	D PID^VADPT
	S IBCNT=IBCNT+1
	W !,IBFLAG,$E($P(^DPT(DFN,0),"^"),1,20),?23,VA("BID"),?30,$E($G(^DPT(DFN,.1)),1,11)
	W ?42,$E(TYPE,1,11),"-",$P($G(^IBE(356.11,+IBREV,0)),"^",3)
	W ?65,$$DAT1^IBOUTL($P(IBDATA,"^",3)),?75,IBSTATUS,?85,$E(IBASSIGN,1,18)
	W ?105,$P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),U,18),0)),U,2)
	W ?115,$$DAT1^IBOUTL($P(^IBT(356,+IBTRN,0),U,6),"2P")
	Q
	;
STOP	; -- see if should stop
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stoped at user request"
	Q

IBTOSA
IBTOSA	;ALB/AAS - CLAIMS TRACKING SCHEDULED ADMISSION REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Scheduled Admissions Report"
	;
DATE	; -- select date
	W !! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOSA",ZTSAVE("IB*")="",ZTDESC="IB - scheduled Admissions Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	S X=132 X ^%ZOSF("RM")
DQ	D PRINT G END
	Q
	;
END	; -- Clean up
	K ^TMP($J) W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT
	Q
	;
PRINT	; -- print one billing report from ct
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	S IBTSBDT=IBBDT-.1,IBTSEDT=IBEDT+.9 D EN^IBTRKR2
	K ^TMP($J)
	;
	D FIX
	S IBDT=IBBDT-.1
	F  S IBDT=$O(^IBT(356,"D",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))!(IBQUIT)  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"D",IBDT,IBTRN)) Q:'IBTRN!(IBQUIT)  D
	.S IBTRND=$G(^IBT(356,IBTRN,0))
	.Q:'$P(IBTRND,"^",20)  ; inactive
	.Q:+IBDT<IBBDT
	.I $P($G(^IBE(356.6,+$P(IBTRND,"^",18),0)),"^",3)=1,$P(IBTRND,"^",7)=1,$$INSURED^IBCNS1($P(IBTRND,"^",2),IBDT),$$SCH(IBTRN) D SET
	;
PR	D HDR
	I '$D(^TMP($J,"IBSCH")) W !!,"No Scheduled Admission found in date range",! Q
	S IBNAM="",IBCNT=0
	F  S IBNAM=$O(^TMP($J,"IBSCH",IBNAM)) Q:IBNAM=""!(IBQUIT)  S IBDT=0 F  S IBDT=$O(^TMP($J,"IBSCH",IBNAM,IBDT)) Q:'IBDT!(IBQUIT)  S IBTRN=0 F  S IBTRN=$O(^TMP($J,"IBSCH",IBNAM,IBDT,IBTRN)) Q:'IBTRN!(IBQUIT)  S IBTRND=^(IBTRN) D ONE
	;
	Q:IBQUIT
	W !!,"------------------"
	W !,"TOTAL = ",IBCNT
	I $D(ZTQUEUED) G END
	Q
	;
ONE	; -- Print one patients data
	Q:IBQUIT
	I IOSL<($Y+5) D HDR Q:IBQUIT
	S IBCNT=IBCNT+1
	S DFN=$P(IBTRND,"^",2) D PID^VADPT
	W !,$E(IBNAM,1,27),?30,VA("PID"),?45,$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	W ?66,$S('$P(IBTRND,"^",19):"YES",1:$E("NO - "_$P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,27))
	W ?100,$E($P($G(^DPT(DFN,.1)),"^"),1,12),?115,$E($$EXPAND^IBTRE(356,.07,$P(IBTRND,"^",7)),1,15)
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Scheduled Admissions with Insurance",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Period beginning on ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !,"Patient",?30,"Pt. ID",?45,"Adm. Date",?66,"Billable",?100,"Ward",?115,"Type"
	W !,$TR($J(" ",IOM)," ","-")
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stop* ed at user request" Q
	Q
	;
SET	; -- set tmp array
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stop* ed at user request" Q
	S ^TMP($J,"IBSCH",$P(^DPT(+$P(IBTRND,"^",2),0),"^"),IBDT,IBTRN)=IBTRND
	Q
	;
SCH(IBTRN)	; -- is patient either admitted or still scheduled
	;
	N IBX,IBTRND S IBX=1
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	I '$P(IBTRND,"^",32) G SCHQ
	I $P(IBTRND,"^",5) G SCHQ
	S X=$G(^DGS(41.1,+$P(IBTRND,"^",32),0)) I X=""!($P(X,"^",13)) D  S IBX=0
	.N DA,DR,DIC,DIE
	.S DIE="^IBT(356,",DR=".2////0",DA=IBTRN
	.D ^DIE
SCHQ	Q IBX
	;
FIX	; -- find bad episode dates and fix
	S IBDT=DT
	F  S IBDT=$O(^IBT(356,"D",IBDT)) Q:'IBDT  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"D",IBDT,IBTRN)) Q:'IBTRN  D F1(IBTRN)
	Q
	;
F1(IBTRN)	; fix EPISODE DATE
	N IBDT,DA,DR,DIC,DIE
	Q:'$G(IBTRN)
	Q:$G(^IBT(356,+IBTRN,0))=""
	S IBDT=$P(^IBT(356,+IBTRN,0),"^",6)
	I +IBDT'=IBDT,$E(IBDT,$L(IBDT))=0 S IBDT=+IBDT,DA=IBTRN,DR=".06////"_IBDT,DIE="^IBT(356," D ^DIE
	Q

IBTOSUM
IBTOSUM	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 29-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"MCCR/UR Summary Report",!!
	S IBQUIT=0
	;
	; -- print either by admissions or discharges
SORT	; -- ask how they want it sorted
	N DIR
	S DIR(0)="SOBA^A:Admissions;D:Discharges"
	S DIR("A")="Print Report By [A]dmissions  [D]ischarges: "
	S DIR("B")="D"
	S DIR("?",1)="This summary report may be prepared by either Admissions or Discharges."
	S DIR("?",2)="If you choose by discharge the report will contain information on all"
	S DIR("?",3)="claims tracking information for the discharges that fall in the date"
	S DIR("?",4)="Range.  That is, all reviews for discharges found in the date range"
	S DIR("?",5)="will be included in the report.  If you choose by Admissions all"
	S DIR("?",6)="reviews found in the date range will be included but the reviews"
	S DIR("?",7)="may be for cases not related to the admissions."
	S DIR("?",8)="  "
	S DIR("?")="If you want to know the total reviews done during a date range sort by admissions.  If you want to know the total reviews done on the discharges for a date range sort by Discharges"
	D ^DIR K DIR
	S IBSORT=Y I "AD"'[Y!($D(DIRUT)) G END
	;
	; -- get date range
	W ! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W ! S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="RPT^IBTOSUM",ZTSAVE("IB*")="",ZTDESC="IB - MCCR/UR Summary Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	U IO
	;
RPT	; -- entry point from task man
	;    store data in ^tmp($j,"IBTOSUM",N)
	K ^TMP($J)
	S IBQUIT=0,IBPAG=0,Y=DT D D^DIQ S IBHDT=Y
	F I=0:1:13 S IBCNT(I)=0
	F I=20,21,80,81,82,99 S IBCNT(I)=0
	F I=0:1:4 S IBCNT(30+I)=0
	I IBSORT="A" D ADM
	I IBSORT="D" D DIS
	D CHK^IBTOSUM2
	I $G(ZTSTOP) G END
	;
	D PRINT^IBTOSUM2
	;
END	; -- Clean up
	W !
	I $D(IBCNT(1)),$E(IOST,1,2)="C-" D PAUSE^VALM1
	K ^TMP($J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K X,X1,X2,X3,Y,%ZIS,POP,DA,DIRUT,DUOUT,IBRATE,IBBBS,IBSORT,IBC,IBPCNT,IBDCNT,IBMAX,IBCDT
	K IBDT,IBBDT,IBEDT,IBQUIT,IBPAG,IBHDT,IBCNT,IBSPEC,IBINS,IBAC,IBPEN,IBPEND,IBTRN,IBTRND,IBTRC,IBTRCD,DFN,DGPM,IBNOD,IBDAY,IBFAC,IBSITE,IBSNM,X,Y,I,J
	Q
	;
ADM	; -- count admission
	D CHK^IBTOSUM2 I $G(ZTSTOP) Q
	S IBDT=IBBDT-.000000001
	F  S IBDT=$O(^DGPM("AMV1",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  D
	.S DFN=0 F  S DFN=$O(^DGPM("AMV1",IBDT,DFN)) Q:'DFN  D
	..S DA=0 F  S DA=$O(^DGPM("AMV1",IBDT,DFN,DA)) Q:'DA  D PROC
	..Q
	.Q
	Q
	;
DIS	; -- count discharges
	D CHK^IBTOSUM2 I $G(ZTSTOP) Q
	S IBDT=IBBDT-.000000001
	F  S IBDT=$O(^DGPM("AMV3",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  D
	.S DFN=0 F  S DFN=$O(^DGPM("AMV3",IBDT,DFN)) Q:'DFN  D
	..S DA=0 F  S DA=$O(^DGPM("AMV3",IBDT,DFN,DA)) Q:'DA  D PROC
	..Q
	.Q
	Q
	;
PROC	; -- Process each admission or discharge
	S DGPM=$P($G(^DGPM(DA,0)),"^",14)
	S IBCNT(1)=IBCNT(1)+1 ; count of admsisions or discharges
	S IBTRN=$O(^IBT(356,"AD",DGPM,0))
	Q:'IBTRN
	;
	S IBTRND=$G(^IBT(356,+IBTRN,0)) ;W !,IBTRND
	Q:'$P(IBTRND,"^",20)  ; must be an active visit
	;
	Q:'$$INSURED^IBCNS1(DFN,IBDT)  ; must be insured for visit to count
	;
	S IBCNT(2)=IBCNT(2)+1 ; count of insured admissions or discharges discharges
	;
	S IBCNT(3,+$P(IBTRND,"^",19))=$G(IBCNT(3,+$P(IBTRND,"^",19)))+1 ;count of billable
	;
	S X=$P($G(^IBT(356,+IBTRN,1)),"^",7) I X>3 S IBCNT(4)=IBCNT(4)+1
	I X="",$P(IBTRND,"^",24),'$P(IBTRND,"^",19) S IBCNT(4)=IBCNT(4)+1 ;reviews required
	;
	I $$APPEAL(IBTRN) S IBCNT(80)=IBCNT(80)+1
	;
	K IBDCNT,IBPCNT
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"C",IBTRN,IBTRC)) Q:'IBTRC  D RCNT^IBTOSUM1
	S:$D(IBPCNT(IBTRN)) IBCNT(99)=IBCNT(99)+1
	S:$O(IBPCNT(IBTRN,+$O(IBPCNT(IBTRN,0)))) IBCNT(13)=IBCNT(13)+1 ;more than one policy per case
	Q
	;
APPEAL(IBTRN)	; -- was this case appealed:
	;
	N A,X
	S A=0
	I 'IBTRN G APPEALQ
	S X=$O(^IBE(356.11,"ACODE",60,0)) ; initial appeal
	I $O(^IBT(356.2,"ATRTP",IBTRN,X,0)) S A=1 G APPEALQ
	S X=$O(^IBE(356.11,"ACODE",65,0)) ; subsequent appeal
	I $O(^IBT(356.2,"ATRTP",IBTRN,X,0)) S A=1 G APPEALQ
APPEALQ	Q A

IBTOSUM1
IBTOSUM1	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 29-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
REV	; -- count reviews
	D CHK^IBTOSUM2 I $G(ZTSTOP) Q
	; -- count review for same period
	S IBDT=IBBDT-.000000001
	F  S IBDT=$O(^IBT(356.2,"B",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"B",IBDT,IBTRC)) Q:'IBTRC  D RCNT
	;
RCNT	; -- process each review
	N IBDAY,IBETYP,IBAC,IBNOD,IBTALL,IBPEND
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
	I $P(IBETYP,"^",2)>65 Q  ;is a patient, other or an ins. verification call
	;
	I $P(IBETYP,"^",2)=60 D  Q  ; count initial appeals and quit
	.S IBCNT(81)=IBCNT(81)+1
	;
	I $P(IBETYP,"^",2)=65 D  Q  ; count subsequent appeals and quit
	.S IBCNT(82)=IBCNT(82)+1
	;
	I $P(IBTRCD,"^",19)'=10 Q  ;must be completed to included in report
	;
	S IBSPEC=$$SPEC(IBTRC)
	S IBBBS=$$BBS(+IBSPEC)
	S IBRATE=$$RATE(IBBBS,+IBTRCD)
	;
	S IBPCNT(IBTRN,+$P(^IBT(356.2,+IBTRC,1),"^",5))=""
	S IBCNT(5)=$G(IBCNT(5))+1 ;count of total reviews done
	S IBCNT(5,+IBSPEC)=$G(IBCNT(5,+IBSPEC))+1
	S IBAC=+$$ACTION(IBTRC),IBDAY=0
	;
	I IBAC=10 D
	.S IBTALL=+$P($G(^IBT(356.2,IBTRC,1)),"^",8) ;approved all days
	.S IBCDT=$$CDT^IBTODD1(IBTRN)
	.S IBMAX=$S($D(IBDCNT(IBTRN))#2:IBDCNT(IBTRN),1:$$DAY^IBTUTL3(+IBCDT,$S($P(IBCDT,"^",2):$P(IBCDT,"^",2),1:IBEDT))) ; max days approved for a visit
	.I '$D(IBDCNT(IBTRN))#2 S IBDCNT(IBTRN)=IBMAX
	.I 'IBTALL S IBDAY=$$DAY^IBTUTL3(+$P(IBTRCD,"^",12),+$P(IBTRCD,"^",13),IBTRN)
	.I IBTALL S IBDAY=$$DAY^IBTUTL3(+IBCDT,$S($P(IBCDT,"^",2):$P(IBCDT,"^",2),1:DT),IBTRN)
	.I IBDAY>IBMAX S IBDAY=IBMAX
	.S IBDCNT(IBTRN)=IBDCNT(IBTRN)-IBDAY ;count can't excede total days
	;
	I IBAC=20 D
	.S IBTALL=+$P($G(^IBT(356.2,IBTRC,1)),"^",7) ;denied all days
	.S IBCDT=$$CDT^IBTODD1(IBTRN)
	.S IBMAX=$S($D(IBDCNT(IBTRN))#2:IBDCNT(IBTRN),1:$$DAY^IBTUTL3(+IBCDT,$S($P(IBCDT,"^",2):$P(IBCDT,"^",2),1:IBEDT))) ; max days approved for a visit
	.I '$D(IBDCNT(IBTRN))#2 S IBDCNT(IBTRN)=IBMAX
	.I 'IBTALL S IBDAY=$$DAY^IBTUTL3(+$P(IBTRCD,"^",15),+$P(IBTRCD,"^",16),IBTRN)
	.I IBTALL S IBDAY=$$DAY^IBTUTL3(+IBCDT,$S($P(IBCDT,"^",2):$P(IBCDT,"^",2),1:DT),IBTRN)
	.I IBDAY>IBMAX S IBDAY=$S(IBMAX<0:0,1:IBMAX)
	.S IBDCNT(IBTRN)=IBDCNT(IBTRN)-IBDAY ;count can't excede total days
	;
	S IBCNT(IBAC)=$G(IBCNT(IBAC))+IBDAY,IBCNT(IBAC,+IBSPEC)=$G(IBCNT(IBAC,+IBSPEC))+IBDAY
	S IBCNT(IBAC+1)=$G(IBCNT(IBAC+1))+(IBDAY*IBRATE)
	S IBCNT(IBAC+1,+IBSPEC)=$G(IBCNT(IBAC+1,+IBSPEC))+(IBDAY*IBRATE)
	I IBAC=30 S IBPEN=0 F  S IBPEN=$O(^IBT(356.2,+IBTRC,13,IBPEN)) Q:'IBPEN  S IBPEND=$G(^(IBPEN,0)) D
	.S IBNOD=IBPEND+30
	.S $P(IBCNT(IBNOD),"^",1)=$P(IBCNT(IBNOD),"^",1)+1
	.S $P(IBCNT(IBNOD),"^",2)=$P(IBCNT(IBNOD),"^",2)+$P(IBPEND,"^",2)
	.S $P(IBCNT(IBNOD,+IBSPEC),"^",1)=+$G(IBCNT(IBNOD,+IBSPEC))+1
	.S $P(IBCNT(IBNOD,+IBSPEC),"^",2)=$P($G(IBCNT(IBNOD,+IBSPEC)),"^",2)+$P(IBPEND,"^",2)
	.Q
	Q
	;
ACTION(IBTRC)	; -- compute action code for a review
	Q $P($G(^IBE(356.7,+$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",11),0)),"^",3)
	;
SPEC(IBTRC)	; -- compute treating specialty on review date
	N VAERR,VAIN,VAINDT,X,Y,I,J,DFN,IBTRN,IBCDT
	S VAINDT=+$G(^IBT(356.2,+IBTRC,0))+.2359,DFN=$P(^(0),"^",5)
	S IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2),IBCDT=$$CDT^IBTODD1(IBTRN)
	I VAINDT,+IBCDT,VAINDT<(+IBCDT) S VAINDT=IBCDT+.2359
	I VAINDT,+$P(IBCDT,"^",2),VAINDT>$P(IBCDT,"^",2) S VAINDT=$P(IBCDT,"^",2)\1
	D:DFN INP^VADPT
	Q $G(VAIN(3))
	;
BBS(IBSPEC)	; -- compute billing bedsection from specialty
	N X
	S X=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$G(IBSPEC),0)),"^",2),0)),"^",5)
	I X'="" S X=$O(^DGCR(399.1,"B",X,0))
	Q X
	;
RATE(IBBBS,IBDT)	; -- compute daily bed section rate for date
	N DGREV,DGBR,IBIDT,DGBRN,DGFND,IBCHK,X,IBAMT
	S IBAMT=0 I '$G(IBBBS)!('$G(IBDT)) G RATEQ
	D SETREV
RATEQ	Q IBAMT
	;
SETREV	; -- find current active revenue codes for bedsection
	S (IBAMT,DGREV,DGBR)=0,IBIDT=-(IBDT+.01) K DGFND
	F  S IBIDT=$O(^DGCR(399.5,"AIVDT",IBBBS,IBIDT)) Q:'IBIDT!($D(DGFND))  D
	. F  S DGREV=$O(^DGCR(399.5,"AIVDT",IBBBS,IBIDT,DGREV)) Q:'DGREV  D
	.. F  S DGBR=$O(^DGCR(399.5,"AIVDT",IBBBS,IBIDT,DGREV,DGBR)) Q:'DGBR  D CHKREV I IBCHK S IBAMT=IBAMT+X
	Q
CHKREV	; -- check if billing rate (dgbr) is active and starndard.
	S IBCHK=0,X=0
	S DGBRN=^DGCR(399.5,DGBR,0) I '$P(DGBRN,"^",5) Q  ;quit if inactive
	I +$P(DGBRN,"^",7) Q  ;quit if non-standard rate
	;
	; -- use cat c rate as total for tortuously liable rates
	I $P(DGBRN,U,6)["c" S:'$D(DGFND) DGFND="" S IBCHK=1
	;
	S X=$P(^DGCR(399.5,DGBR,0),"^",4)
	Q

IBTOSUM2
IBTOSUM2	;ALB/AAS - CLAIMS TRACKING BILLING INFORMATION PRINT ; 29-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
PRINT	; -- print the report
	K X,X2,X3
	D HDR,MAIN
	D PENAL
	I $O(IBCNT(3,0)) D RNB
	I $O(IBCNT(10,0)) D APPROV
	I $O(IBCNT(20,0)) D DENIAL
	Q
	;
MAIN	; -- print main body of report
	W !?((IOM/2)-16),"Total ",$S(IBSORT="A":"Admissions",1:"Discharges"),": ",$J(IBCNT(1),11)
	W !?((IOM/2)-31),"Total ",$S(IBSORT="A":"Admissions",1:"Discharges")," with Insurance: ",$J(IBCNT(2),11)
	W !?((IOM/2)-25),"Total Billable ",$S(IBSORT="A":"Admissions",1:"Discharges"),": ",$J(+$G(IBCNT(3,0)),11)
	;
	W !?((IOM/2)-34),"Total ",$S(IBSORT="A":"Admissions",1:"Discharges")," Requiring Reviews: ",$J(IBCNT(4),11)
	W !?((IOM/2)-25),"Total ",$S(IBSORT="A":"Admissions",1:"Discharges")," Reviewed: ",$J(IBCNT(99),11)
	W !?((IOM/2)-40),"Total ",$S(IBSORT="A":"Admissions",1:"Discharges")," Reviewed, Multi Carrier: ",$J(IBCNT(13),11)
	;
	I $E(IOST,1,2)="C-" W ! D PAUSE^VALM1 Q:$D(DIRUT)  W @IOF
	;
	W !!?((IOM/2)-18),"Total Reviews Done: ",$J(IBCNT(5),11)
	W !?((IOM/2)-23),"Number of Days Approved: ",$J(IBCNT(10),11)
	S X=IBCNT(11),X2="0$" D COMMA^%DTC
	W !?((IOM/2)-39),"Amount Collectible Approved for Billing: ",X
	;
	W !!?((IOM/2)-21),"Number of Days Denied: ",$J(IBCNT(20),11)
	S X=IBCNT(21),X2="0$" D COMMA^%DTC
	W !?((IOM/2)-25),"Amount Denied for Billing: ",X
	;
	W !!?((IOM/2)-20),"Total Cases Appealed: ",$J(IBCNT(80),11)
	W !?((IOM/2)-25),"Number of Initial Appeals: ",$J(IBCNT(81),11)
	W !?((IOM/2)-28),"Number of Subsequent Appeals: ",$J(IBCNT(82),11)
	;
	Q
	;
PENAL	; -- penalty codes; variable; external form
	;   1; IBCNT(31);  NO PRE ADMISSION CERTIFICATION
	;   2; IBCNT(32);  UNTIMELY PRE ADMISSION CERTIFICATION
	;   3; IBCNT(33);  VA A NON-PROVIDER
	;
	W !!!?((IOM/2)-14),"Penalty Report:  Number of cases              Dollars"
	W !?((IOM/2)-14),"---------------  ------------------------------------"
	W !?((IOM/2)-30),"No Pre Admission Certification: ",$J($P(IBCNT(31),"^"),10),"                   " S X=+$P(IBCNT(31),"^",2),X3=9,X2="0$" D COMMA^%DTC W X
	W !?((IOM/2)-36),"Untimely Pre Admission Certification: ",$J($P(IBCNT(32),"^"),10),"                   " S X=+$P(IBCNT(32),"^",2),X3=9,X2="0$" D COMMA^%DTC W X
	W !?((IOM/2)-17),"VA a Non-Provider: ",$J($P(IBCNT(33),"^"),10),"                   " S X=+$P(IBCNT(33),"^",2),X3=9,X2="0$" D COMMA^%DTC W X
	Q
	;
RNB	; -- print reasons not billable
	D CNT(3)
	W !!!?((IOM/2)-26),"Reason Not Billable Report:  Reason                         Count"
	W !?((IOM/2)-26),"---------------------------  ------------------------------------"
	S I=0 F  S I=$O(IBCNT(3,I)) Q:'I  D
	.W !?((IOM/2)+3),$E($P($G(^IBE(356.8,+I,0)),"^")_"               ",1,27)
	.W ?((IOM/2)+30)," ",$J(IBCNT(3,I),8)
	Q
	;
	;
DENIAL	; -- print days denied by specialty
	D CNT(20)
	W !!!?((IOM/2)-24),"Days Denied by Specialty:  Specialty         No. Days   Dollars"
	W !?((IOM/2)-24),"-------------------------  ------------------------------------"
	S I=0 F  S I=$O(IBCNT(20,I)) Q:'I  D
	.W !?((IOM/2)+3),$E($P($G(^DIC(45.7,+I,0)),"^")_"       ",1,16)
	.W ?((IOM/2)+20)," ",$J(IBCNT(20,I),6)
	.S X=IBCNT(21,I),X2="0$" D COMMA^%DTC
	.W ?((IOM/2)+30)," ",X
	Q
	;
	;
APPROV	; -- print days approved by specialty
	D CNT(10)
	W !!!?((IOM/2)-26),"Days Approved by Specialty:  Specialty         No. Days   Dollars"
	W !?((IOM/2)-26),"---------------------------  ------------------------------------"
	S I=0 F  S I=$O(IBCNT(10,I)) Q:'I  D
	.W !?((IOM/2)+3),$E($P($G(^DIC(45.7,+I,0)),"^")_"       ",1,16)
	.W ?((IOM/2)+20)," ",$J(IBCNT(10,I),6)
	.S X=IBCNT(11,I),X2="0$" D COMMA^%DTC
	.W ?((IOM/2)+30)," ",X
	;
	Q
	;
HDR	; -- print report header
	W:$E(IOST,1,2)["C-"!(IBPAG>0) @IOF
	W !?((IOM-22)/2),"MCCR/UR SUMMARY REPORT"
	W !?((IOM-3)/2),"for"
	D SITE^IBAUTL S IBSNM=$S($D(^DIC(4,IBFAC,0)):$P(^(0),"^"),1:"")
	W !?((IOM-($L(IBSNM)+6))/2),IBSNM_" ("_IBSITE_")"
	W !!?((IOM-14)/2),"for "_$S(IBSORT="A":"Admissions",1:"Discharges")
	W !?(IOM-18/2),"From: " S Y=IBBDT D DT^DIQ
	W !?((IOM-16)/2)," To: " S Y=IBEDT D DT^DIQ
	W !!?(IOM-26/2),"Date Printed: ",IBHDT
	S IBPAG=IBPAG+1 W !?(IOM-8/2),"Page: ",IBPAG
	W !?(IOM-26/2),"--------------------------",!!
	Q
	;
CHK	; -- check task man stop flag
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 D HDR W !!,"....task stopped at user request."
	Q
	;
CNT(N)	; -- see if enought room on page for list
	Q:'$G(N)
	S (IBC,I)=0 F  S I=$O(IBCNT(N,I)) Q:'I  S IBC=IBC+1
	I IOSL<($Y+IBC+3),$E(IOST,1,2)="C-" D PAUSE^VALM1 S:$D(DIRUT) IBQUIT=1 W:'IBQUIT @IOF Q
	I IOSL<($Y+IBC+3) D HDR
	Q

IBTOTR
IBTOTR	;ALB/AAS - CLAIMS TRACKING INQUIRY ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Claims Tracking Inquiry"
	;
PAT	; -- Select patient
	W !! D END
	S DIC="^DPT(",DIC(0)="AEQM"
	D ^DIC K DIC I +Y<1 G END
	S DFN=+Y
	;
VSIT	;
	; -- get claims tracking visit entry
	D TRAC^IBTRV K IBY
	I '$G(IBTRN) G END
	;
DEV	; -- select device, run option
	W !
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOTR",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Inquire to Claims Tracking" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G PAT
	;
	U IO
	D ONE,END G PAT
	Q
	;
END	; -- Clean up
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,IBI,IBJ,IBII,IBTRTP,IBNAR,IBCNT
	D KVAR^VADPT
	Q
	;
DQ	; -- entry print from task man
	D ONE G END
	Q
	;
ONE	; -- print one billing report from ct
	I $D(ZTQUEUED) S ZTREQ="@"
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	D PID^VADPT
	S IBTRND=$G(^IBT(356,+IBTRN,0)),IBTRND1=$G(^(1))
	S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	D HDR,SECT1^IBTOBI
	W ! D BI1^IBTOBI1,CLIN
	;
	I ($Y+11)>IOSL D HDR Q:IBQUIT
	W !!,"  Insurance Review Information "
	N I,J,IBTRC,IBTRCD,IBD,IBACTION,TCODE
	S IBCNT=0
	S IBII="" F  S IBII=$O(^IBT(356.2,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBII,IBTRC)) Q:'IBTRC!(IBQUIT)  D
	.N IBD
	.S IBCNT=IBCNT+1
	.D IR1^IBTOBI2
	.D IR2^IBTOBI2
	.S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,39),?40,$E($G(IBD(IBJ,2)),1,39)
	.W !
	.I ($Y+9)>IOSL D HDR Q:IBQUIT
	I IBCNT<1 W !,"None on file.",!
	;
	I ($Y+11)>IOSL D HDR Q:IBQUIT
	W !,"  Hospital Review Information "
	N I,J,IBTRV,IBTRVD,IBD
	S IBCNT=0
	S IBII="" F  S IBII=$O(^IBT(356.1,"ATIDT",IBTRN,IBII)) Q:'IBII!(IBQUIT)  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBII,IBTRV)) Q:'IBTRV!(IBQUIT)  D
	.N IBD
	.S IBCNT=IBCNT+1
	.D HR1^IBTOBI3
	.D HR2^IBTOBI3
	.S IBJ=0 F  S IBJ=$O(IBD(IBJ)) Q:'IBJ  W !,$E($G(IBD(IBJ,1)),1,40),?40,$E($G(IBD(IBJ,2)),1,39)
	.W !
	.I ($Y+9)>IOSL D HDR Q:IBQUIT
	I IBCNT<1 W !,"None on file.",!
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Claim Tracking Inquiry",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,$E($P($G(^DPT(DFN,0)),"^"),1,25),?28,VA("PID"),?50,"DOB: ",$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3),1)
	W !,$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))," on ",$$FMTE^XLFDT($P(IBTRND,"^",6),1)
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
CLIN	; -- output clinical information
	N IBOE,DGPM
	;
	I $P(IBETYP,"^",3)=1 S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I 'DGPM Q
	I $P(IBETYP,"^",3)=2 S IBOE=$P(^IBT(356,+IBTRN,0),"^",4)
	F IBTAG="DIAG","PROC","PROV" D @IBTAG Q:IBQUIT
	Q
	;
DIAG	; -- print diagnosis information
	I '$G(DGPM),('$G(IBOE)) Q
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR Q:IBQUIT
	D DIAG1^IBTOBI4
	Q
	;
PROC	; -- print procedure information
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR Q:IBQUIT
	D PROC1^IBTOBI4
	Q
	;
PROV	; -- print provider information
	I '$G(DGPM),('$G(IBOE)) Q
	Q:$P(IBETYP,"^",3)>2
	I ($Y+9)>IOSL D HDR Q:IBQUIT
	D PROV1^IBTOBI4
	Q

IBTOUA
IBTOUA	;ALB/AAS - CLAIMS TRACKING UNSCHEDULED ADMISSION REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Unscheduled Admissions Report"
	;
DATE	; -- select date
	W !! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOUA",ZTSAVE("IB*")="",ZTDESC="IB - Unscheduled Admissions Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	S X=132 X ^%ZOSF("RM")
DQ	D PRINT G END
	Q
	;
END	; -- Clean up
	K ^TMP($J) W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBPAG,IBHDT,IBDT,IBBDT,IBEDT,IBQUIT
	Q
	;
PRINT	; -- print one billing report from ct
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	K ^TMP($J)
	;
	D FIX^IBTOSA
	S IBDT=IBBDT-.1
	F  S IBDT=$O(^IBT(356,"D",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))!(IBQUIT)  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"D",IBDT,IBTRN)) Q:'IBTRN!(IBQUIT)  S IBTRND=$G(^IBT(356,IBTRN,0)) D
	.Q:'$P(IBTRND,"^",20)  ; inactive
	.Q:+IBDT<IBEDT
	.I $P(IBTRND,"^",5),$P(IBTRND,"^",7)'=1,$$INSURED^IBCNS1($P(IBTRND,"^",2),IBDT) D SET
	;
PR	D HDR
	I '$D(^TMP($J,"IBSCH")) W !!,"No Unscheduled Admission found in date range.",! Q
	S IBNAM="",IBCNT=0
	F  S IBNAM=$O(^TMP($J,"IBSCH",IBNAM)) Q:IBNAM=""!(IBQUIT)  S IBDT=0 F  S IBDT=$O(^TMP($J,"IBSCH",IBNAM,IBDT)) Q:'IBDT!(IBQUIT)  S IBTRN=0 F  S IBTRN=$O(^TMP($J,"IBSCH",IBNAM,IBDT,IBTRN)) Q:'IBTRN!(IBQUIT)  S IBTRND=^(IBTRN) D ONE
	;
	Q:IBQUIT
	W !!,"------------------"
	W !,"TOTAL = ",IBCNT
	I $D(ZTQUEUED) G END
	Q
	;
ONE	; -- Print one patients data
	Q:IBQUIT
	I IOSL<($Y+5) D HDR Q:IBQUIT
	S IBCNT=IBCNT+1
	S DFN=$P(IBTRND,"^",2) D PID^VADPT
	W !,$E(IBNAM,1,27),?30,VA("PID"),?45,$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	W ?66,$S('$P(IBTRND,"^",19):"YES",1:$E("NO - "_$P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,27))
	W ?100,$E($P($G(^DPT(DFN,.1)),"^"),1,12),?115,$E($$EXPAND^IBTRE(356,.07,$P(IBTRND,"^",7)),1,15)
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"Unscheduled Admissions with Insurance",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Period beginning on ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !,"Patient",?30,"Pt. ID",?45,"Adm. Date",?66,"Billable",?100,"Ward",?115,"Type"
	W !,$TR($J(" ",IOM)," ","-")
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 W !!,"....task stoped at user request"
	Q
	;
SET	; -- set tmp array
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1,IBQUIT=1 D HDR W !!,"....task stoped at user request" Q
	S ^TMP($J,"IBSCH",$P(^DPT(+$P(IBTRND,"^",2),0),"^"),IBDT,IBTRN)=IBTRND
	Q

IBTOUR
IBTOUR	;ALB/AAS - CLAIMS TRACKING UR/ACTIVITY REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"UR Activity Report",!!
	;
	N DIR
	S IBQUIT=0
	D SORT^IBTOLR G:IBQUIT END
	;
SUM	S DIR("?")="Answer YES if you only want to print a summary or answer NO if you want a detailed listing plus the summary."
	S DIR(0)="Y",DIR("A")="Print Summary Only",DIR("B")="YES" D ^DIR K DIR
	I $D(DIRUT) G END
	S IBSUM=Y
	;
	I 'IBSUM W ! D HOW G:IBQUIT END
	;
DATE	; -- select date
	W ! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	I 'IBSUM W !!,"You will need a 132 column printer for this report!",!
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOUR",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - UR Activity Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	D DQ G END
	Q
	;
END	; -- Clean up
	K ^TMP($J)
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG,IBFOL,IBCNT,IBTRC,IBTRCD,IBSUM,IBDT,IBBDT,IBEDT,IBINS,IBCCODE,IBPCODE,DUOUT,DTOUT,DIRUT,IBC,MET,TYPE
	K IBFAC,IBSNM,IBHDRL,IBTRV,IBTRVD,IBHOW,DGPM,IBI,IBJ,IBSORT,IBAPL,IBCDT,IBP1,IBP2,IBP3,IBP4,IBADM,IBDAYS,IBDAYN,IBCLOSE,IBDA,IBDATA,IBH,IBDIF,IBPREV,IBSITE,IBSPEC,IBTNOD
	D KVAR^VADPT
	Q
	;
DQ	; -- print one billing report from ct
	K ^TMP($J)
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	S:$G(IBHOW)="" IBHOW="P"
	K IBCNT,^TMP($J)
	D BLD^IBTOUR1
	Q:$D(ZTSTOP)
	;
PRINT	; -- print report
	I IBSORT'="H" S IBHDRL="Insurance" D
	.I 'IBSUM D INS^IBTOUR4 ; insurance listing
	.Q:$D(ZTSTOP)
	.D INS^IBTOUR3 ; insurance summary
	I IBSORT'="I" S IBHDRL="Hospital" D
	.Q:$D(ZTSTOP)
	.I 'IBSUM D HOSP^IBTOUR4 ;hosp rev. listing
	.Q:$D(ZTSTOP)
	.D HOSP^IBTOUR3 ; hosp. rev. summary
	I $D(ZTQUEUED) G END
	Q
	;
HOW	; -- if not summary only ask how list is to be sorted
	N DIR
	S DIR(0)="SOBA^R:REVIEWER;S:SPECIALTY;P:PATIENT"
	S DIR("A")="Sort By [R]eviewer  [S]pecialty  [P]atient: "
	S DIR("B")="P"
	S DIR("?",1)="When printing the list of patients reviewed, how should this report be"
	S DIR("?",2)="sorted.  It can be sorted by Reviewer or by Specialty or by Patient.  "
	S DIR("?",3)="If sorted by Reviewer it will be sorted within reviewer by type of review."
	S DIR("?",4)=" ",DIR("?")="The default is Patient."
	D ^DIR K DIR
	S IBHOW=Y I "RSP"'[Y!($D(DIRUT)) S IBQUIT=1
	Q
	;
HDR1	; -- specialty report header
	I $E(IOST,1,2)="C-" W ! D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	W @IOF
	S IBPAG=IBPAG+1
	W !,"HOSPITAL REVIEW SPECIALTY SUMMARY REPORT",?IOM-32,IBHDT,"   Page ",IBPAG
	W !!,"For Hospital Reviews Dated ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !,?25,"Admissions",?42,"Admissions",?58,"Days",?74,"Days"
	W !,"Specialty",?25,"Met Criteria",?42,"Not Met Crit.",?58,"Met Criteria",?74,"Not Met Crit."
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
HSPEC	; -- Hospital Review specialty report
	D HDR1 Q:IBQUIT
	S (IBP1,IBP2,IBP3,IBP4)=0
	S IBSPEC="" F  S IBSPEC=$O(^TMP($J,"IBTOUR2",IBSPEC)) Q:IBSPEC=""  S IBDATA=^(IBSPEC) D
	.Q:IBDATA="0^0^0^0"
	.W !,$E(IBSPEC,1,20)
	.W ?23,$J($P(IBDATA,"^",1),8)
	.W ?40,$J($P(IBDATA,"^",2),8),?52,$J($P(IBDATA,"^",3),12)
	.W ?68,$J($P(IBDATA,"^",4),12)
	.S IBP1=IBP1+$P(IBDATA,"^",1),IBP2=IBP2+$P(IBDATA,"^",2),IBP3=IBP3+$P(IBDATA,"^",3),IBP4=IBP4+$P(IBDATA,"^",4)
	;
	W !,$TR($J(" ",80)," ","-")
	W !,?23,$J(IBP1,8),?40,$J(IBP2,8)
	W ?52,$J(IBP3,12)
	W ?68,$J(IBP4,12)
	Q
	;
IHDR	; -- specialty report header
	I $E(IOST,1,2)="C-" W ! D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	W @IOF
	S IBPAG=IBPAG+1
	W !,"INSURANCE REVIEW SPECIALTY SUMMARY REPORT",?IOM-32,IBHDT,"   Page ",IBPAG
	W !,"For Insurance Reviews Dated ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !!,?25,"Days",?42,"Days",?56,"Amount",?73,"Amount"
	W !,"Specialty",?25,"Approved",?42,"Denied",?56,"Approved",?73,"Denied"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
ISPEC	; -- Insurance Review specialty report
	D IHDR Q:IBQUIT
	S (IBP1,IBP2,IBP3,IBP4)=0
	S IBSPEC="" F  S IBSPEC=$O(^TMP($J,"IBTOUR1",IBSPEC)) Q:IBSPEC=""  S IBDATA=^(IBSPEC) D
	.Q:IBDATA="0^0^0^0"
	.W !,$E(IBSPEC,1,20)
	.W ?23,$J($P(IBDATA,"^",1),8)
	.W ?38,$J($P(IBDATA,"^",2),8)
	.S X=$P(IBDATA,"^",3),X2="0$" D COMMA^%DTC W ?50,X
	.S X=$P(IBDATA,"^",4),X2="0$" D COMMA^%DTC W ?67,X
	.S IBP1=IBP1+$P(IBDATA,"^",1),IBP2=IBP2+$P(IBDATA,"^",2),IBP3=IBP3+$P(IBDATA,"^",3),IBP4=IBP4+$P(IBDATA,"^",4)
	;
	W !,$TR($J(" ",80)," ","-")
	W !,?23,$J(IBP1,8),?38,$J(IBP2,8)
	S X=IBP3,X2="0$" D COMMA^%DTC W ?50,X
	S X=IBP4,X2="0$" D COMMA^%DTC W ?67,X
	Q

IBTOUR1
IBTOUR1	;ALB/AAS - CLAIMS TRACKING UR/ACTIVITY REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	; ibcnt(1) = total count of admissions
	; ibcnt(2) = total count of insured admissions
	; ibcnt(3,0) = total count of billable admissions
	; ibcnt(3,n) = count of non-billable admissions by reason (n)
	; ibcnt(4) = count of admissions requiring reviews
	; ibcnt(5) = admissions with pre-cert and follow-up
	; ibcnt(6) = no pre-cert but active monitoring required
	; ibcnt(7) = new closed cases = discharged, or no next rev. date, or ur not required
	; ibcnt(7,0) = new cases closed, billable
	; ibcnt(7,1) = new cases closed, not billable
	; ibcnt(8) = new cases open (not closed)
	;
	; ibcnt(9) = previous case (find in REV), adm prior to begin date
	; ibcnt(9,0) = cases closed billable
	; ibcnt(9,1) = cases closed non-billable
	; ibcnt(9,2) = previous cases still open
	;
	; ^tmp($j,"ibtour", $s(pt. name/specialty/review date) ,pt. name,sort3,ibtrc)=^ibt(ibtrc,0)
	; ^tmp($j,"ibtour1",specialty)=days approved, days denied, $approved, $denied)
	;
BLD	; -- build data
	;initialize summary array
	F I=1:1:11 S IBCNT(I)=0 I I=7!(I=9) F J=0:1:2 S IBCNT(I,J)=0
	F I=40:1:52 S IBCNT(I)=0 I I=45 F J=1:1:3 S IBCNT(I,J)=0
	;
	D ADM
	D:IBSORT'="H" IREV^IBTOUR2,ISUB
	D:IBSORT'="I" HREV^IBTOUR2,HSUB^IBTOUR5
	Q
	;
ADM	; -- count admission
	D CHK^IBTOSUM2 I $G(ZTSTOP) Q
	S IBDT=IBBDT-.000000001
	F  S IBDT=$O(^DGPM("AMV1",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.24))  D
	.S DFN=0 F  S DFN=$O(^DGPM("AMV1",IBDT,DFN)) Q:'DFN  D
	..S DGPM=0 F  S DGPM=$O(^DGPM("AMV1",IBDT,DFN,DGPM)) Q:'DGPM  D
	...S IBCNT(1)=IBCNT(1)+1 ; count of admissions
	...S IBTRN=$O(^IBT(356,"AD",DGPM,0))
	...Q:'IBTRN
	...S IBTRND=$G(^IBT(356,+IBTRN,0))
	...Q:'$P(IBTRND,"^",20)
	...S X=$P($G(^IBT(356,+IBTRN,1)),"^",7) I X>3 S IBCNT(4)=IBCNT(4)+1,^TMP($J,"IBTOUR0",IBTRN)=IBTRN ;reviews required
	...I X="",$P(IBTRND,"^",24),'$P(IBTRND,"^",19) S IBCNT(4)=IBCNT(4)+1,^TMP($J,"IBTOUR0",IBTRN)=IBTRN
	...;
	...S IBINS=$$INSURED^IBCNS1(DFN,IBDT) I IBINS S IBCNT(2)=IBCNT(2)+1 ; count of insured admissions
	...I IBINS S IBCNT(3,+$P(IBTRND,"^",19))=$G(IBCNT(3,+$P(IBTRND,"^",19)))+1 ;count of NOT Billable by reason billable
	Q
	;
ISUB	; -- count subtotals for cases reviewed
	N IBTRN,IBCLOS,DGPM,IBTPREV
	S IBTRN="" F  S IBTRN=$O(^TMP($J,"IBTOUR0",IBTRN)) Q:'IBTRN  D
	.S IBTRND=$G(^IBT(356,+IBTRN,0))
	.Q:'$P(IBTRND,"^",20)  ;inactive case
	.Q:$P(IBTRND,"^",8)  ;rx fill, don't count
	.S DGPM=$P($G(^IBT(356,+IBTRN,0)),"^",5)
	.S IBCLOS=$$CLOSED(DGPM,IBTRN)
	.S IBTPREV=0 I $P($G(^IBT(356,+IBTRN,0)),"^",6)<IBBDT S IBTPREV=1
	.I $P(IBTRND,"^",4) S IBCNT(10)=IBCNT(10)+1
	.D CASE
	.Q
	Q
	;
CASE	; -- figure out case summary
	N I,J,IBPRE,IBFOL
	I IBTPREV D PREV
	S (IBFOL,IBPRE)=0
	I $O(^IBT(356.2,"APRE",IBTRN))'="" S IBPRE=1 ; is precert number
	S IBPCODE=$O(^IBE(356.11,"ACODE",10,0)) ; precert tracking type
	S IBCCODE=$O(^IBE(356.11,"ACODE",30,0)) ; cont. stay tracking type
	;
	I 'IBPRE S IBTRC=$O(^IBT(356.2,"ATRTP",IBTRN,IBPCODE,0)) I IBTRC,$P($G(^IBT(356.2,+IBTRC,0)),"^",19)=10 S IBPRE=1
	;
	S IBX=$P($G(^IBT(356,+IBTRN,1)),"^",7) I 'IBX D
	.I $O(^IBT(356.2,"ATRTP",IBTRN,IBCCODE,0)) S IBFOL=1
	.I IBPRE,IBFOL S IBCNT(5)=IBCNT(5)+1 ; adm with precert and follow up
	.I 'IBPRE,IBFOL S IBCNT(6)=IBCNT(6)+1 ; adm w/o precert but cont. monitor
	I IBX>4 S IBCNT(5)=IBCNT(5)+1
	I IBX=4 S IBCNT(6)=IBCNT(6)=1
	;
	I IBCLOS S IBCNT(7,$S($P(IBTRND,"^",19):1,1:0))=IBCNT(7,$S($P(IBTRND,"^",19):1,1:0))+1,IBCNT(7)=IBCNT(7)+1
	;
	I 'IBTPREV S IBX=$P($G(^IBT(356,+IBTRN,1)),"^",7) I IBX,IBX<4 S IBCNT(4)=IBCNT(4)+1 ; new case rev not required, but done.
	;
	I 'IBCLOS,'IBTPREV S IBCNT(8)=IBCNT(8)+1 ;new cases still open
	I '$P(IBTRND,"^",5),$P(^IBE(356.6,+$P(IBTRND,"^",18),0),"^",8)=5 S IBCNT(11)=IBCNT(11)+1
CASEQ	Q
	;
CLOSED(DGPM,IBTRN)	; -- is case closed
	N IBI,IBJ,IBCLOSE
	S IBCLOSE=0
	I $P($G(^DGPM(+DGPM,0)),"^",17) S IBCLOSE=1 G CLOSEDQ ; - discharged
	I '$P($G(^IBT(356,+IBTRN,0)),"^",24) S IBCLOSE=1 G CLOSEDQ ; ur no longer required
	;
	; -- see if any reviews are still pending
	S IBCLOSE=1,IBI=0 F  S IBI=$O(^IBT(356.2,"C",+IBTRN,IBI)) Q:'IBI  I $P(^IBT(356.2,IBI,0),"^",24)>IBEDT S IBCLOSE=0 Q
	;
CLOSEDQ	Q IBCLOSE
	;
PREV	; -- previous case
	Q:'$G(IBTPREV)
	I $P(IBTRND,"^",4)!($P(IBTRND,"^",8))!($P(IBTRND,"^",9)) Q  ; only count previous admissions
	S IBCNT(9)=IBCNT(9)+1 ; number of previous cases
	I 'IBCLOS S IBCNT(9,2)=IBCNT(9,2)+1 ; still open
	I IBCLOS S IBCNT(9,$S($P(IBTRND,"^",19):1,1:0))=IBCNT(9,$S($P(IBTRND,"^",19):1,1:0))+1 ;closed and billable or not
	Q

IBTOUR2
IBTOUR2	;ALB/AAS - CLAIMS TRACKING UR/ACTIVITY REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
	; -- insurance: ^tmp($j,"ibtour", $s(pt. name/specialty/review date) ,pt. name,sort3,ibtrc)=^ibt(ibtrc,0)
	;               ^tmp($j,"ibtour0,ibtrn)=ibtrn (case list)
	;               ^tmp($j,"ibtour1",specialty)=days approved ^ days denied ^ $approved ^ $denied
	;
	; -- hospital: ^tmp($j,"ibtour3",$s...
	;              ^tmp($j,"ibtour2",specialty)= adm. met ^ adm not met ^ days met ^ days not met
	;              ^tmp($j,"ibtour4",ibtrn)=ibtrn (case list)
	;
	;
IREV	; -- count and sort reviews
	N IBDT,J
	S IBDT=IBBDT-.00001
	F  S IBDT=$O(^IBT(356.2,"B",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.9))!(IBQUIT)  D
	.S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"B",IBDT,IBTRC)) Q:'IBTRC!(IBQUIT)  D
	..S IBTRCD=$G(^IBT(356.2,+IBTRC,0)) Q:IBTRCD=""
	..S IBTRN=$P(IBTRCD,"^",2)
	..Q:$P(IBTRCD,"^",19)<10
	..D SET
	Q
	;
SET	; -- set utility array
	Q:'$G(IBTRN)
	N DFN,SORT1,SORT2,SORT3,IBSPEC,IBBBS,RATE,IBAC,IBDAY,IBDA,IBDD,IBCDT
	S DFN=+$P(IBTRCD,"^",5) Q:'DFN
	;
	S IBSPEC=$$SPEC^IBTOSUM1(IBTRC)
	S IBBBS=$$BBS^IBTOSUM1(+IBSPEC)
	S RATE=$$RATE^IBTOSUM1(IBBBS,+IBTRCD)
	S IBAC=$$ACTION^IBTOSUM1(IBTRC)
	S IBSPEC=$P(IBSPEC,"^",2) S:IBSPEC="" IBSPEC="Unknown"
	;
	I $P(^IBT(356,+$P(IBTRCD,"^",2),0),"^",4) S IBSPEC="OUTPATIENT VISIT",RATE=178
	;
	I $P(^IBT(356,+$P(IBTRCD,"^",2),0),"^",8) S IBSPEC="PRESCRIPTION",RATE=20
	I $P(^IBT(356,+$P(IBTRCD,"^",2),0),"^",9) S IBSPEC="PROSTHETICS",RATE=0
	;
	S SORT3=$P($G(^DPT(DFN,0)),"^")
	I IBHOW="P" S (SORT1,SORT2)=SORT3
	I IBHOW="S" S SORT1=IBSPEC,SORT2=SORT3
	I IBHOW="R" S SORT1=$P($G(^VA(200,+$P($G(^IBT(356.2,+IBTRC,1)),"^",4),0)),"^"),SORT2=$P($G(^IBE(356.11,+$P(IBTRCD,"^",4),0)),"^")
	S:SORT1="" SORT1="Unknown"
	S:SORT2="" SORT2="Unknown"
	S:SORT3="" SORT2="Unknown"
	S ^TMP($J,"IBTOUR",SORT1,SORT2,SORT3,IBTRC)=IBTRCD
	;
	S IBDAY=""
	I $P(^IBT(356,IBTRN,0),"^",5),$P(^IBT(356.2,+IBTRC,1),"^",7) S IBCDT=$$CDT^IBTODD1(IBTRN),IBDAY=$$DAY^IBTUTL3(+IBCDT,$S(+$P(IBCDT,"^",2):$P(IBCDT,"^",2),1:DT),IBTRN)
	I IBAC=10,'IBDAY S IBDAY=$$DAY^IBTUTL3(+$P(IBTRCD,"^",12),+$P(IBTRCD,"^",13),IBTRN)
	I IBAC=20,'IBDAY S IBDAY=$$DAY^IBTUTL3(+$P(IBTRCD,"^",15),+$P(IBTRCD,"^",16),IBTRN)
	I 'IBDAY,$P(^IBT(356,IBTRN,0),"^",4) S IBDAY=1 ;opt encounter =1 day
	S IBDA=$S(IBAC=10:IBDAY,1:0)
	S IBDD=$S(IBAC=20:IBDAY,1:0)
	S ^TMP($J,"IBTOUR0",+IBTRN)=IBTRN
	;
	I $P(^IBT(356,+IBTRN,0),"^",5),IBSPEC'="Unknown" D
	.I '$D(^TMP($J,"IBTOUR1",IBSPEC)) S ^TMP($J,"IBTOUR1",IBSPEC)="0^0^0^0^"
	.S X=$G(^TMP($J,"IBTOUR1",IBSPEC))
	.S ^TMP($J,"IBTOUR1",IBSPEC)=($P(X,"^")+IBDA)_"^"_($P(X,"^",2)+IBDD)_"^"_($P(X,"^",3)+(IBDA*RATE))_"^"_($P(X,"^",4)+(IBDD*RATE))
	Q
	;
HREV	; -- count and sort reviews
	N IBDT,J
	S IBDT=IBBDT-.00001
	F  S IBDT=$O(^IBT(356.1,"B",IBDT)) Q:'IBDT!(IBDT>(IBEDT+.9))!(IBQUIT)  D
	.S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"B",IBDT,IBTRV)) Q:'IBTRV!(IBQUIT)  D
	..S IBTRVD=$G(^IBT(356.1,+IBTRV,0)) Q:IBTRVD=""
	..S IBTRN=$P(IBTRVD,"^",2)
	..I $P(IBTRVD,"^",21)=10 D HSET
	Q
	;
HSET	; -- set up review cases
	S ^TMP($J,"IBTOUR4",IBTRN)=IBTRN
	Q
	;
HSET1	; -- build by specialy report for hosp. reviews.
	I $G(IBSPEC)="" D
	.N VAIN,DFN
	.S DFN=$P(^IBT(356,IBTRN,0),"^",2)
	.S VAINDT=$P(^IBT(356,IBTRN,0),"^",6)\1+.2359 D INP^VADPT S IBSPEC=$P(VAIN(3),"^",2)
	.I $G(IBSPEC)="" S IBSPEC="Unknown"
	I '$D(^TMP($J,"IBTOUR2",IBSPEC)) S ^TMP($J,"IBTOUR2",IBSPEC)="0^0^0^0^"
	S X=$G(^TMP($J,"IBTOUR2",IBSPEC))
	S ^TMP($J,"IBTOUR2",IBSPEC)=($P(X,"^")+IBP1)_"^"_($P(X,"^",2)+IBP2)_"^"_($P(X,"^",3)+IBP3)_"^"_($P(X,"^",4)+IBP4)
	Q
	;
HSET2	; -- set utility array
	N DFN,SORT1,SORT2,SORT3
	S DFN=+$P(IBTRND,"^",2) Q:'DFN
	;
	S SORT3=$P($G(^DPT(DFN,0)),"^")
	I IBHOW="P" S (SORT1,SORT2)=SORT3
	I IBHOW="S" S SORT1=IBSPEC,SORT2=SORT3
	I IBHOW="R" S SORT1=$P($G(^VA(200,+$P($G(^IBT(356,+IBTRN,1)),"^",5),0)),"^"),SORT2=$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")
	S:SORT1="" SORT1="Unknown"
	S:SORT2="" SORT2="Unknown"
	S:SORT3="" SORT2="Unknown"
	;
	S ^TMP($J,"IBTOUR3",SORT1,SORT2,SORT3,IBTRN)=IBADM_"^"_IBDAYS_"^"_IBDAYN
	Q

IBTOUR3
IBTOUR3	;ALB/AAS - CLAIMS TRACKING UR ACTIVITY REPORT PRINT ; 02-DEC-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
INS	; -- print the report
	Q:IBQUIT
	D HDR,MAIN
	Q:IBQUIT
	I $O(IBCNT(3,0)) D RNB Q:IBQUIT
	I $D(^TMP($J,"IBTOUR1")) D ISPEC^IBTOUR Q:IBQUIT
	I 'IBQUIT,IBSORT="I",$E(IOST,1,2)="C-" W ! D PAUSE^VALM1 Q:$D(DIRUT)
	Q
	;
HOSP	Q:IBQUIT
	D HDR,HOSPRV
	Q:IBQUIT
	I $D(^TMP($J,"IBTOUR2")) D HSPEC^IBTOUR Q:IBQUIT
	I 'IBQUIT,$E(IOST,1,2)="C-" W ! D PAUSE^VALM1 Q:$D(DIRUT)
	Q
	;
MAIN	; -- print main body of report
	W !?((IOM/2+6)-16),"Total Admissions: ",$J(IBCNT(1),10)
	W !?((IOM/2+6)-34),"Total Admissions Requiring Reviews: ",$J(IBCNT(4),10)
	W !?((IOM/2+6)-33),"Number of Scheduled Adm. Reviewed: ",$J(IBCNT(11),10)
	;
	W !!?((IOM/2+6)-31),"Total Admissions with Insurance: ",$J(IBCNT(2),10)
	W !?((IOM/2+6)-25),"Total Billable Admissions: ",$J(+$G(IBCNT(3,0)),10)
	;
	W !!?((IOM/2+6)-33),"Cases with Pre-Cert and Follow-up: ",$J(IBCNT(5),10)
	W !?((IOM/2+6)-32),"Cases with Pre-Cert no Follow-up: ",$J(IBCNT(6),10)
	;
	I $E(IOST,1,2)="C-" W ! D PAUSE^VALM1 W:'$D(DIRUT) @IOF I $D(DIRUT) S IBQUIT=1 Q
	;
	W !?((IOM/2+6)-22),"Number of Closed Cases: ",$J(IBCNT(7),10)
	W !?((IOM/2+6)-31),"Number of Billable Closed Cases: ",$J(IBCNT(7,0),10)
	W !?((IOM/2+6)-33),"Number of Unbillable Closed Cases: ",$J(IBCNT(7,1),10)
	;
	W !!?((IOM/2+6)-30),"Number of New Cases Still Open: ",$J(IBCNT(8),10)
	W !!?((IOM/2+6)-24),"Number of Previous Cases: ",$J(IBCNT(9),10)
	W !?((IOM/2+6)-44),"Number of Previous Cases Closed and Billable: ",$J(IBCNT(9,0),10)
	W !?((IOM/2+6)-45),"Number of Previous Cases Closed, not Billable: ",$J(IBCNT(9,1),10)
	W !?((IOM/2+6)-35),"Number of Previous Cases still Open: ",$J(IBCNT(9,2),10)
	;
	W !!?((IOM/2+6)-35),"Number of Outpatient Cases Reviewed: ",$J(IBCNT(10),10)
	;
	Q
	;
RNB	; -- print reasons not billable
	D CNT(4)
	W !!!?((IOM/2+6)-26),"Reason Not Billable Report:  Reason                   Count"
	W !?((IOM/2+6)-26),"---------------------------  ------------------------------"
	S I=0 F  S I=$O(IBCNT(3,I)) Q:'I  D
	.W !?((IOM/2)+9),$E($P($G(^IBE(356.8,+I,0)),"^")_"               ",1,22)
	.W ?((IOM/2)+31)," ",$J(IBCNT(3,I),6)
	Q
	;
HDR	; -- print report header
	W:$E(IOST,1,2)["C-"!(IBPAG>0) @IOF
	W !?((IOM-22)/2),"UR ACTIVITY SUMMARY REPORT"
	W !?((IOM-18)/2),"for "_$S($D(IBHDRL):IBHDRL_" Reviews")
	D SITE^IBAUTL S IBSNM=$S($D(^DIC(4,IBFAC,0)):$P(^(0),"^"),1:"")
	W !?((IOM-($L(IBSNM)+6))/2),IBSNM_" ("_IBSITE_")"
	W !!?(IOM-18/2),"From: " S Y=IBBDT D DT^DIQ
	W !?((IOM-16)/2),"To: " S Y=IBEDT D DT^DIQ
	W !!?(IOM-26/2),"Date Printed: ",IBHDT
	S IBPAG=IBPAG+1 W !?(IOM-8/2),"Page: ",IBPAG
	W !?(IOM-26/2),"--------------------------",!!
	Q
	;
CHK	; -- check task man stop flag
	I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 D HDR W !!,"....task stopped at user request."
	Q
	;
CNT(N)	; -- see if enought room on page for list
	Q:'$G(N)
	S (IBC,I)=0 F  S I=$O(IBCNT(N,I)) Q:'I  S IBC=IBC+1
	I IOSL<($Y+IBC+3),$E(IOST,1,2)="C-" D PAUSE^VALM1 S:$D(DIRUT) IBQUIT=1 W:'IBQUIT @IOF Q
	I IOSL<($Y+IBC+3) D HDR
	Q
	;
HOSPRV	; -- Hospital Review Summary
	W !?((IOM/2+6)-16),"Total Admissions: ",$J(IBCNT(1),10)
	W !!?((IOM/2+6)-20),"Total Cases Reviewed: ",$J(+$G(IBCNT(40)),10)
	W !?((IOM/2+6)-29),"Number of New Case Still Open: ",$J(IBCNT(41),10)
	W !?((IOM/2+6)-24),"Number of Previous Cases: ",$J(IBCNT(42),10)
	W !?((IOM/2+6)-35),"Number of Previous Cases still Open: ",$J(IBCNT(43),10)
	;
	W !!?((IOM/2+6)-25),"Total Random Sample Cases: ",$J(IBCNT(44),10)
	W !?((IOM/2+6)-29),"Total Special Condition Cases: ",$J(+$G(IBCNT(45)),10)
	W !?((IOM/2+6)-4),"COPD: ",$J(+$G(IBCNT(45,2)),10)
	W !?((IOM/2+6)-4)," CVD: ",$J(+$G(IBCNT(45,3)),10)
	W !?((IOM/2+6)-4),"TURP: ",$J(+$G(IBCNT(45,1)),10)
	W !?((IOM/2+6)-25),"Total Locally Added Cases: ",$J(IBCNT(46),10)
	;
	I $E(IOST,1,2)="C-" W ! D PAUSE^VALM1 W:'$D(DIRUT) @IOF I $D(DIRUT) S IBQUIT=1 Q
	;
	W !!?((IOM/2+6)-36),"Total Cases Meeting Criteria on Adm.: ",$J(+$G(IBCNT(47)),10)
	W !,?((IOM/2+6)-37),"Total Cases Not Meeting Crit. on Adm.: ",$J(+$G(IBCNT(51)),10)
	;
	W !!?((IOM/2+6)-19),"Total Days Reviewed: ",$J(+$G(IBCNT(48)),10)
	W !?((IOM/2+6)-27),"Total Days Meeting Criteria: ",$J(IBCNT(49),10)
	W !?((IOM/2+6)-31),"Total Days Not Meeting Criteria: ",$J(+$G(IBCNT(50)),10)
	Q

IBTOUR4
IBTOUR4	;ALB/AAS - CLAIMS TRACKING UR ACTIVITY REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
INS	; -- print data
	; -- ^tmp($j,"ibtour",primary sort,secondary sort,patient, ibtrc)=ibtrcd
	;
	N IBCNT
	D HDR
	I $O(^TMP($J,"IBTOUR",""))="" W !!,"No Insurance Reviews Found in Date Range." G PRINTQ
	;
	S IBH="" F  S IBH=$O(^TMP($J,"IBTOUR",IBH)) Q:IBH=""!(IBQUIT)  D
	.D SUBHDR^IBTOUR5
	.S IBI="" F  S IBI=$O(^TMP($J,"IBTOUR",IBH,IBI)) Q:IBI=""!(IBQUIT)  D
	..D SSUBHDR^IBTOUR5
	..S IBJ="" F  S IBJ=$O(^TMP($J,"IBTOUR",IBH,IBI,IBJ)) Q:IBJ=""!(IBQUIT)  D
	...S IBTRC="" F  S IBTRC=$O(^TMP($J,"IBTOUR",IBH,IBI,IBJ,IBTRC)) Q:IBTRC=""!(IBQUIT)  S IBTRCD=^(IBTRC) D ONE
	;
PRINTQ	I 'IBQUIT,$E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1
	Q
	;
ONE	; -- print one entry
	; -- ^tmp($j,"ibtour",primary sort,secondary sort,ibtrc)=^IBT(IBTRC)
	;
	S IBAPL=$$APPEAL^IBTODD1(IBTRC)
	;
	I IOSL<($Y+4) D HDR Q:IBQUIT
	S DFN=+$P(IBTRCD,"^",5) D PID^VADPT
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
L1	W !,$E($P(^DPT(DFN,0),"^"),1,22),?25,VA("PID")
	S IBCDT=$$CDT^IBTODD1($P(IBTRCD,"^",2))
	W ?38,$$DAT1^IBOUTL(+IBCDT\1) W:$P(IBCDT,"^",2) " to"
	W ?50,$P($G(^IBE(356.11,+$P(IBTRCD,"^",4),0)),"^",3) ;review type abbrev
	W ?64,$$DAT1^IBOUTL(+IBTRCD) ;review date
	W ?78,$E($$EXPAND^IBTRE(356.2,.08,$P(IBTRCD,"^",8)),1,20) ; ins co
	W ?100,$E($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),1,10) ;ins co action
	W ?112,$E($$EXPAND^IBTRE(356.2,1.04,$P($G(^IBT(356.2,+IBTRC,1)),"^",4)),1,19) ; last reviewer
	;
L2	W !?38,$$DAT1^IBOUTL($P(IBCDT,"^",2)\1,"2P")
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"UR Insurance Review Activity Report",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Insurance Reviews Dated ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !!,?38,"Dates of",?64,"Review"
	W !,"Patient",?25,"Pt. ID",?38,"Care",?50,"Review Type",?64,"Date",?78,"Ins. Co.",?100," Action",?112,"Last Reviewer"
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
HOSP	; -- print hospital report
	N IBCNT
	D HHDR
	I $O(^TMP($J,"IBTOUR3",""))="" W !!,"No Hospital Reviews Found in Date Range." G HOSPQ
	;
	S IBH="" F  S IBH=$O(^TMP($J,"IBTOUR3",IBH)) Q:IBH=""!(IBQUIT)  D
	.D SUBHDR^IBTOUR5
	.S IBI="" F  S IBI=$O(^TMP($J,"IBTOUR3",IBH,IBI)) Q:IBI=""!(IBQUIT)  D
	..D SSUBHDR^IBTOUR5
	..S IBJ="" F  S IBJ=$O(^TMP($J,"IBTOUR3",IBH,IBI,IBJ)) Q:IBJ=""!(IBQUIT)  D
	...S IBTRN="" F  S IBTRN=$O(^TMP($J,"IBTOUR3",IBH,IBI,IBJ,IBTRN)) Q:IBTRN=""!(IBQUIT)  S IBDATA=^(IBTRN) D HOSPONE
	;
HOSPQ	I 'IBQUIT,$E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1
	Q
	;
HOSPONE	; -print one case line
	I IOSL<($Y+4) D HHDR Q:IBQUIT
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	S DFN=+$P(IBTRND,"^",2) D PID^VADPT
HL1	W !,$E($P(^DPT(DFN,0),"^"),1,22),?25,VA("PID")
	S IBCDT=$$CDT^IBTODD1(IBTRN)
	W ?38,$$DAT1^IBOUTL(+IBCDT\1) W:$P(IBCDT,"^",2) " to"
	S TYPE="" I $P(IBTRND,"^",25) S TYPE="RANDOM"
	I $P(IBTRND,"^",26) S:$L(TYPE) TYPE=TYPE_"/" S TYPE=TYPE_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26))
	I $P(IBTRND,"^",27) S:$L(TYPE) TYPE=TYPE_"/LOCAL"
	W ?51,TYPE
	W ?70,$S($P(IBDATA,"^"):"YES",$P(IBDATA,"^")=0:"NO",1:"")
	W ?84,$J($P(IBDATA,"^",2),8)
	W ?98,$J($P(IBDATA,"^",3),8)
	;
	W ?112,$E($$EXPAND^IBTRE(356,1.05,$P($G(^IBT(356,+IBTRN,1)),"^",5)),1,19) ; last reviewer
	;
HL2	I $P(IBCDT,"^",2)'="" W !?38,$$DAT1^IBOUTL($P(IBCDT,"^",2)\1,"2P")
	W ! Q
	;
HHDR	; -- hospital review header
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"UR Hospital Review Activity Report",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,"For Hospital Reviews Dated ",$$DAT1^IBOUTL(IBBDT)," to ",$$DAT1^IBOUTL(IBEDT)
	W !!,?38,"Dates of",?69,"Admission",?84,"Days Met",?98,"Days Not Met"
	W !,"Patient",?25,"Pt. ID",?38,"Care",?51,"Review Type",?69,"Met Criteria",?84,"Criteria",?98,"Criteria",?112,"Assigned Reviewer"
	W !,$TR($J(" ",IOM)," ","-")
	Q

IBTOUR5
IBTOUR5	;ALB/AAS - CLAIMS TRACKING UR/ACTIVITY REPORT ; 14-FEB-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	;
HSUB	; -- compute subtotals for hospital reviews
	S IBTRN="" F  S IBTRN=$O(^TMP($J,"IBTOUR4",IBTRN)) Q:'IBTRN  D HSUB1
	Q
	;
HSUB1	; -- compute subtotals for 1 review
	S (IBDAYS,IBDAYN,IBPREV)=0,IBADM=""
	S IBCNT(40)=IBCNT(40)+1 ; cases reviewed
	S IBTRND=$G(^IBT(356,+IBTRN,0)),DGPM=$P(IBTRND,"^",5)
	I $P(IBTRND,"^",6)<IBBDT S IBPREV=1 S IBCNT(42)=IBCNT(42)+1 ;previous case
	S IBCLOSE=$$HCLOSE(DGPM,IBTRN)
	I 'IBPREV,'IBCLOSE S IBCNT(41)=IBCNT(41)+1 ; NEW case still open
	I IBPREV,'IBCLOSE S IBCNT(43)=IBCNT(43)+1 ;  Old case still open
	I $P(IBTRND,"^",25) S IBCNT(44)=IBCNT(44)+1
	I $P(IBTRND,"^",26) S IBCNT(45)=IBCNT(45)+1,IBCNT(45,$P(IBTRND,"^",26))=IBCNT(45,$P(IBTRND,"^",26))+1
	I $P(IBTRND,"^",27) S IBCNT(46)=IBCNT(46)+1 ; local cases
	S IBTRV="" F  S IBTRV=$O(^IBT(356.1,"C",IBTRN,IBTRV)) Q:'IBTRV  D
	.S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
	.S (IBP1,IBP2,IBP3,IBP4)=0
	.I $P(IBTRVD,"^",21)'=10 Q  ; review must be complete
	.I +IBTRVD<IBBDT!(+IBTRVD>IBEDT) Q  ; review date out of range
	.S IBSPEC=$P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^")
	.S IBCNT(48)=IBCNT(48)+1 ; count of days
	.I $P(IBTRVD,"^",3)<2 D
	..S MET=$O(^IBT(356.1,+IBTRV,12,0)) ; >0 means not met
	..I MET S IBCNT(50)=IBCNT(50)+1,IBCNT(51)=IBCNT(51)+1,(IBP2,IBP4)=1,IBADM=0,IBDAYN=IBDAYN+1
	..I 'MET S IBCNT(49)=IBCNT(49)+1,IBCNT(47)=IBCNT(47)+1,(IBP1,IBP3)=1,IBADM=1,IBDAYS=IBDAYS+1
	.I $P(IBTRVD,"^",3)>1 D
	..S MET=$O(^IBT(356.1,+IBTRV,13,0))
	..I MET S IBCNT(50)=IBCNT(50)+1,IBP4=1,IBDAYN=IBDAYN+1
	..I 'MET S IBCNT(49)=IBCNT(49)+1,IBP3=1,IBDAYS=IBDAYS+1
	.D HSET1^IBTOUR2
	D HSET2^IBTOUR2
	Q
	;
HCLOSE(DGPM,IBTRN)	; -- is case closed
	N IBI,IBJ,IBCLOSE
	S IBCLOSE=0
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	I $P($G(^DGPM(+DGPM,0)),"^",17) S IBCLOSE=1 G HCLOSEQ ; - discharged
	I '$P(IBTRND,"^",25),'$P(IBTRND,"^",26),'$P(IBTRND,"^",27) S IBCLOSE=1 G HCLOSEQ ; ur no longer required
	;
	; -- see if any reviews are still pending or if is a discharge date
	S IBCLOSE=1,IBI=0 F  S IBI=$O(^IBT(356.1,"C",IBTRN,IBI)) Q:'IBI  D  Q:'IBCLOSE
	.I $P(^IBT(356.1,IBI,0),"^",20)>IBEDT S IBCLOSE=0 Q
	;
HCLOSEQ	Q IBCLOSE
	;
SUBHDR	; -- sub header for detailed listings from ibtour4
	Q:IBHOW="P"
	W !,?15,$S(IBHOW="S":"Specialty: ",1:"Reviewer: "),IBH
	Q
SSUBHDR	; -- sub sub header for detailed listings from ibtour4
	Q:IBHOW'="R"
	W !,?18,"Type Review: ",IBI
	Q

IBTOVS
IBTOVS	;ALB/AAS - CLAIMS TRACKING VISIT REPORT ; 27-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;
%	I '$D(DT) D DT^DICRW
	W !!,"Visit Report"
	;
DATE	; -- select date
	W !! D DATE^IBOUTL
	I IBBDT=""!(IBEDT="") G END
	;
DEV	; -- select device, run option
	W !
	S %ZIS="QM" D ^%ZIS G:POP END
	I $D(IO("Q")) S ZTRTN="DQ^IBTOVS",ZTSAVE("IB*")="",ZTSAVE("DFN")="",ZTDESC="IB - Visit Report" D ^%ZTLOAD K IO("Q"),ZTSK D HOME^%ZIS G END
	;
	U IO
	D DQ G END
	Q
	;
END	; -- Clean up
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	K I,J,X,Y,DFN,%ZIS,VA,IBTRN,IBTRND,IBTRND1,IBPAG,IBHDT,IBDISDT,IBETYP,IBQUIT,IBTAG
	D KVAR^VADPT
	Q
DQ	; -- print one billing report from ct
	S IBPAG=0,IBHDT=$$HTE^XLFDT($H,1),IBQUIT=0
	W !!,"Not Done Yet"
	;
	Q
	;
HDR	; -- Print header for billing report
	Q:IBQUIT
	I $E(IOST,1,2)="C-",IBPAG D PAUSE^VALM1 I $D(DIRUT) S IBQUIT=1 Q
	I $E(IOST,1,2)="C-"!(IBPAG) W @IOF
	S IBPAG=IBPAG+1
	W !,"MCCR/UR ACTIVITY REPORT Report",?(IOM-33),"Page ",IBPAG,"  ",IBHDT
	W !,$TR($J(" ",IOM)," ","-")
	Q
	;
	Q
PAT	; -- Select patient
	W !!
	S DIC="^DPT(",DIC(0)="AEQM"
	D ^DIC K DIC I +Y<1 G END
	S DFN=+Y
	;
VSIT	;
	; -- get claims tracking visit entry
	D TRAC^IBTRV
	I '$G(IBTRN) G END

IBTRC
IBTRC	;ALB/AAS - CLAIMS TRACKING INSURANCE REVIEWS ; 27-JUN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT COMMUNICATIONS EDITOR from menu's
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,IBTRN,IBTRND,IBCNT,DFN,IBTRC,IBTRV,IBTRD,IBCNS,IBCDFN,IBFASTXT,VALMQUIT,VA,VAIN,VAERR
	;I '$D(IBTRN) D EN^IBTRE Q
	D PAT^IBCNSM I $D(VALMQUIT) G ENQ
	D TRAC^IBTRV I $D(VALMQUIT) G ENQ
	I '$G(IBTRPRF) S IBTRPRF="12"
	D EN^VALM("IBT COMMUNICATIONS EDITOR")
ENQ	K XQORS,VALMEVL,IBTRN,IBTRND,IBCNT,DFN,IBTRC,IBTRV,IBTRD,IBCNS,IBCDFN,IBFASTXT,VALMQUIT,IBTRPRF,VA,VAIN,VAERR,X,Y,I,J,IBETYP
	K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
	D KVAR^VADPT
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Insurance Review Entries for: "_$$PT^IBTUTL1(DFN)_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
	S VALMHDR(2)="                         for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	Q
	;
INIT	; -- init variables and list array
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
	K I,X,XQORNOD,DA,DR,DIE,DNM,DQ
	S IBTRND=$G(^IBT(356,IBTRN,0))
	D BLD
	Q
	;
BLD	; -- Build list of Insurnace contacts
	K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
	N IBI,J,IBTRC,IBTRCD,IBTRCD1
	S VALMSG=$$MSG^IBTUTL3(DFN)
	S (IBTRC,IBCNT,VALMCNT)=0,IBI=""
	F  S IBI=$O(^IBT(356.2,"ATIDT",IBTRN,IBI)) Q:'IBI  S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IBI,IBTRC)) Q:'IBTRC  D
	.S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	.S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
	.Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
	.S IBCNT=IBCNT+1
	.S IBETYP=$G(^IBE(356.11,+$P(IBTRCD,"^",4),0))
	.W "."
	.S X=""
	.S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	.S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
	.S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
	.S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
	.;
	.S X=$$SETFLD^VALM1($P(IBETYP,"^",3),X,"TYPE")
	.S X=$$SETFLD^VALM1($P(IBTRCD,"^",28),X,"PRE-CERT")
	.I $P(IBTRCD,"^",13) S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN),3),X,"DAYS")
	.I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)=20 S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
	.I $P(IBTRCD1,"^",7)!($P(IBTRCD1,"^",8)) S X=$$SETFLD^VALM1("ALL",X,"DAYS")
	.S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
	.S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
	.S X=$$SETFLD^VALM1($P(IBTRCD,"^",9),X,"REF NO")
	.I $P(IBETYP,"^",2)=60!($P(IBETYP,"^",2)=65) D APPEAL^IBTRC3
	.D SET(X)
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1
	S ^TMP("IBTRC",$J,VALMCNT,0)=X
	S ^TMP("IBTRC",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBTRCDX",$J,IBCNT)=VALMCNT_"^"_IBTRC
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
	K IBTRC
	D CLEAN^VALM10
	Q
	;
TYPE(IBTRC)	; -- compute default type of contact
	N TYPE,IBTRTP,IBTRN,IBSCHED
	S TYPE=""
	I '$P($G(^IBT(356.2,IBTRC,0)),"^",2) S TYPE=70 G TYPEQ ;no tracking id default is patient
	S IBTRN=$P($G(^IBT(356.2,IBTRC,0)),"^",2),IBTRTP=$$TRTP^IBTRE1(IBTRN)
	;
	; -- if from a review
	I $G(IBTRV) S TYPE=$$TRTP^IBTRV(IBTRV) G TYPEQ ; if from review use review type
	I IBTRTP>1 S TYPE=50 G TYPEQ ; outpatient
	S IBSCHED=$S($P($G(^DGPM(+$P($G(^IBT(356,IBTRN,0)),U,5),0)),U,25):10,1:20)
	I '$O(^IBT(356.2,"ATRTP",IBTRN,0)) S TYPE=IBSCHED G TYPEQ ; default for first is urgent admission
	S TYPE=30 ; default is continued stay
	;
TYPEQ	Q $P($G(^IBE(356.11,+$O(^IBE(356.11,"ACODE",+TYPE,0)),0)),"^")
	;
TCODE(IBTRC)	; -- return type code for entry
	Q $P($G(^IBE(356.11,+$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",4),0)),"^",2)
	;
CONTCT(DA,Y)	; -- screen for type of contact
	; -- called by dic(s) on lookup of type of contact field in 356.2
	;
	;"I ($P(^(0),U,2)>60&('$P(^IBT(356.2,DA,0),U,2)))!($P(^(0),U,2))"
	N IBOK,TCODE S IBOK=1
	S TCODE=$P(^(0),U,2)
	I TCODE=85 S IBOK=0 G CONTQ ;insurance verification from ins menu only
	I TCODE=15 S IBOK=0 G CONTQ ;Admission review only for hosp reviews
	I '$P($G(^IBT(356.2,DA,0)),U,2),TCODE<70 S IBOK=0 G CONTQ ;no tracking id, only patient or other
	I TCODE=60,'$P($G(^IBT(356.2,DA,0)),U,18) S IBOK=0 G CONTQ ;appeals must have an associated parent denial
	S IBTRTP=$$TRTP^IBTRE1($P($G(^IBT(356.2,DA,0)),U,2))
	I IBTRTP>1,TCODE<50 S IBOK=0 ; not inpatient care, not inpt codes
CONTQ	Q IBOK

IBTRC1
IBTRC1	;ALB/AAS - CLAIMS TRACKING -  INSURANCE ACTIONS ACTIONS ; 14-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRC
	;
AI	; -- Add ins. Action entry
	N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,IBQUIT,IBTRCDT,DIR,DIRUT,DUOUT
	;
	; -- select date
	S DIR(0)="356.2,.01",DIR("A")="Select Insurance Review or Contact Date",DIR("B")="NOW"
	D ^DIR K DIR
	I $D(DIRUT)!($D(DUOUT))!(+Y<1) G AIQ
	S IBTRCDT=+Y
	;
	; -- if not tracking id allow selecting
	I '$G(IBTRN) D
	.S DIC="^IBT(356,",DIC(0)="AEQ",D="ADFN"_DFN
	.D IX^DIC K DIC
	.I +Y>1 S IBTRN=+Y
	;
	; -- add entry
	D COM^IBTUTL3(IBTRCDT,$G(IBTRN),"",$G(IBTRV))
	;
	; -- edit based on type/action
	D QE1
	D BLD^IBTRC
	S VALMBCK="R"
AIQ	Q
	;
DT	; -- Delete Insurance Action entry
	I '$D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ)) D SORRY^IBTRE1 G DTQ
	N I,J,IBXX,DIR,DIRUT,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
	.I $O(^IBT(356.2,"AP",IBTRC,0)) W !,"Must first delete appeals associated with Denials" D PAUSE^VALM1 Q
	.;
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBXX
	.D ^DIR I Y'=1 W !,"Entry #",IBXX," not Deleted!" Q
	.D DP1
	.Q
DTQ	D BLD^IBTRC
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	N DA,DIC,DIK
	;
	; -- delete reviews, communications,
	S DA=IBTRC,DIK="^IBT(356.2," D ^DIK
	W !,"Entry ",IBXX," Deleted!"
	Q
	;
QE	; -- Quick edit Review entry
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
	.D QE1
QEQ	S VALMBCK="R"
	D BLD^IBTRC
	Q
	;
QE1	N X,Y,DA,DR,DIC,DIE,IBSEL,IBTLST
	D EDIT^IBTRCD1("[IBT QUICK EDIT]",1)
	Q
	I $$TRTP^IBTRE1(IBTRN)<3 D  ;clinical info only on inpt/outpt
	.; -- diagnosis edit
	.D EN^IBTRE3(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- procedure edit / only inpt. / outpt use add/edit
	.I $$TRTP^IBTRE1(IBTRN)<2 D EN^IBTRE4(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- provider edit
	.D EN^IBTRE5(IBTRN)
	Q
	;
NX(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N I,J,IBXXC,VALMY
	S IBTSAV("IBTRN")=IBTRN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXC=0 F  S IBXXC=$O(VALMY(IBXXC)) Q:'IBXXC  D
	.S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXXC,0)))),"^",2)
	.D EN^VALM(IBTMPNM)
	.K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,VAUTD
	.K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	.D KVAR^VADPT
	.Q
	S IBTRN=$G(IBTSAV("IBTRN"))
	I '$D(IBFASTXT) D BLD^IBTRC
	S VALMBCK="R"
	Q
	;
EDIT(IBTEMP)	; -- Edit entries
	N I,J,IBXX,VALMY
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRC=$P($G(^TMP("IBTRCDX",$J,+$O(^TMP("IBTRC",$J,"IDX",IBXX,0)))),"^",2)
	.W !!,"Editing Entry #",IBXX,!
	.D EDIT^IBTRCD1(IBTEMP,1)
	S VALMBCK="R"
	D BLD^IBTRC
	Q
	;
PRECRT(IBTRN)	; -- find precert number for a tracking entry
	; -- input ibtrn = internal entry of tracking id.
	;
	S PRECERT=""
	I '$G(IBTRN) G PRECQ
	S PRECERT=$O(^IBT(356.2,"APRE",IBTRN,0))
PRECQ	Q PRECERT
	;
SHOWSC	; -- display sc conditions
	N VAEL,TAB,IBTRCSC
	D FULL^VALM1
	D ELIG^VADPT
	W !!,"Patient: ",$$PT^IBTUTL1(DFN)
	I 'VAEL(3) W !,"Patient Not Service Connected",!! G SHOWQ
	W !,?5,"Service Connected Percent: "_+$P(VAEL(3),"^",2)_"%"
	S TAB=5,IBTRCSC=1 D SC^IBTOAT2
SHOWQ	D PAUSE^VALM1
	S VALMBCK="R"
	Q
	;
CP	; -- change patient from within insurance reviews
	N VALMQUIT,IBDFN,IBTRNOLD,IBY
	D FULL^VALM1
	S IBDFN=DFN D PAT^IBCNSM
	I $D(VALMQUIT) S DFN=IBDFN
	S IBTRNOLD=IBTRN K IBTRN
	D TRAC^IBTRV
	I '$G(IBTRN) S DFN=IBDFN,IBTRN=IBTRNOLD
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	D BLD^IBTRC,HDR^IBTRC
	S VALMBCK="R"
CPQ	Q
	;
SCREEN(ACODE,CTYPE)	; -- screen for action field of file 356.2
	; -- called by input transform
	;    input  ACODE = piece 3 (action code) of entry being screen in 356.7
	;           CTYPE = type of review, pointer to 356.11
	;
	S CTYPE=$P($G(^IBE(356.11,+CTYPE,0)),"^",2) I 'CTYPE Q 1
	Q $S(CTYPE=10:1,CTYPE=20:1,CTYPE=30:1,CTYPE=50&(ACODE<30):1,1:0)
	;Q $S(CTYPE=1:1,CTYPE=2&(ACODE'=30):1,CTYPE=3:1,CTYPE=5&(ACODE<30):1,1:0)

IBTRC2
IBTRC2	;ALB/AAS - INSURANCE POLICY CALLS FROM FILE 356.2 DD ; 22-JULY-91
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	Q
DD(IBX,IBDA)	;  - called from input transform for field 1.05
	; -- input   ibx = x from input transform
	;           ibda = internal entry in 356.2
	; -- output  returns x=internal entry in 2.3121 (ins. Mult.) if valid
	;   
	N DFN,INSDT,ACTIVE,IBDD,IBD,IBCDFN,DA,DR,DIC,DIE
	D VAR
	S X=$$SEL^IBCNS2(IBX,DFN,DT,ACTIVE)
	I +X<1 K X
DDQ	Q
	;
VAR	S DFN=$P(^IBT(356.2,IBDA,0),"^",5)
	I DFN="" S DFN=$P($G(^IBT(356,+$P(^IBT(356.2,IBDA,0),"^",2),0)),"^",2)
	S ACTIVE=2,INSDT=DT
	Q
	;
SEL(IBX,DFN,INSDT,ACTIVE)	; -- Select insurance policy
	; -- Input    IBX  = x from input transform
	;             DFN  = patient
	;           INSDT  = (optional) Active date of ins. (default = dt)
	;          ACTIVE  = (optional) 1 if want active (default)
	;                  = 2 if want all ins returned
	;
	; -- Output      =  pointer to 36 ^ pointer to 2.3121 ^ pointer to 355.3
	;
	N I,J,Y,DA,DE,DQ,DR,DIC,DIE,DIR,DIV,IBSEL,IBDD,IBD
	S IBSEL=1,Y=""
	I '$G(ACTIVE) S ACTIVE=2
	S:'$G(INSDT) INSDT=DT
	I '$G(DFN) G SELQ
	D BLD
	;
	; -- call DIC to choose from list
	S X=IBX
	S DIC="^DPT("_DFN_",.312,",DIC(0)="EQMN"
	S DIC("S")="I $D(IBDD(+Y))"
	S DIC("W")="W $P(^DIC(36,+^(0),0),U)_""  Group: ""_$$GRP^IBCNS($P(^DPT(DFN,.312,+Y,0),U,18))"
	D ^DIC
SELQ	Q +Y
	;
BLD	K IBD,IBDD
	S (IBDD,IBCDFN)=0 F  S IBCDFN=$O(^DPT(+DFN,.312,IBCDFN)) Q:'IBCDFN  I $D(^DPT(DFN,.312,+IBCDFN,0)) D CHK(IBCDFN,ACTIVE,INSDT)
	Q
	;
CHK(IBCDFN,ACTIVE,INSDT)	; -- see if active
	N X,X1
	S X=$G(^DPT(DFN,.312,IBCDFN,0))
	S IBDD(IBCDFN)=+X_"^"_IBCDFN_"^"_$P(X,"^",18)
	I ACTIVE=2 G CHKQ
	S X1=$G(^DIC(36,+X,0)) I X1="" G CQ ;ins co entry doesn't exist
	I $P(X,"^",8) G:INSDT<$P(X,"^",8) CQ ;effective date later than care
	I $P(X,"^",4) G:INSDT>$P(X,"^",4) CQ ;care after expiration date
	G:$P(X1,"^",5) CQ ;                  ;ins company inactive
	G:$P(X1,"^",2)="N" CQ ;              ;ins company will not reimburse
	G CHKQ
CQ	K IBDD(IBCDFN)
CHKQ	S:$D(IBDD(IBCDFN)) IBDD=IBDD+1,IBD(IBDD)=IBCDFN
	Q
	;
	;
DDHELP(IBDA)	; -- Executable help
	; -- write out list to choose from
	N DFN,INSDT,ACTIVE,IBDD,IBD,IBCDFN,I,IBINS
	D VAR,BLD
	;
	I $G(IBDD)=0 W !,"No Insurance Policies to Select From" G DDHQ
	;
	I '$D(IOM) D HOME^%ZIS
	W ! D HDR^IBCNS
	S I=0 F  S I=$O(IBD(I)) Q:'I  D
	.S IBINS=$G(^DPT(DFN,.312,$G(IBD(I)),0))
	.D D1^IBCNS
DDHQ	Q
	;
TRANS(IBDA,Y)	; -- output transform
	N DFN,INSDT,ACTIVE,IBDD,IBD,IBCDFN
	D VAR
	S Y=$P($G(^DIC(36,+$P($G(^DPT(DFN,.312,+$G(Y),0)),U),0)),U)
	Q Y
	;
INSCO(IBDA,IBCDFN)	; -- return pointer value of 36 from pt. file
	N DFN,INSDT,ACTIVE,IBDD,IBD
	D VAR
	S Y=+$G(^DPT(DFN,.312,IBCDFN,0))
	Q Y_$S(Y>0:"^"_$P($G(^DIC(36,+Y,0)),"^"),1:"")

IBTRC3
IBTRC3	;ALB/AAS - CLAIMS TRAINING INS. REV DEFAULTS ; 29-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
LAST(IBTRN,IBTRC)	; -- return last insurance review
	; -- Input  IBTRN  = claims tracking id
	;           IBTRC  = ins. review being edited (option)
	;                    (if hip is defined for ibtrc will use last review
	;                     for that policy)
	;
	N X,Y,IBHIP,IBQUIT
	S Y="",IBQUIT=0
	I '$G(IBTRN) G LASTQ
	S IBHIP=$P($G(^IBT(356.2,+$G(IBTRC),1)),"^",5)
	S X=-$G(^IBT(356.2,+IBTRC,0)) F  S X=$O(^IBT(356.2,"ATIDT",IBTRN,X)) Q:'X!(IBQUIT)  D
	.S Y="" F  S Y=$O(^IBT(356.2,"ATIDT",IBTRN,X,Y)) Q:'Y!('IBHIP)  D  Q:IBQUIT
	..I $P($G(^IBT(356.2,+Y,1)),"^",5)=IBHIP S IBQUIT=1 Q
LASTQ	Q $S(+Y<1:"",Y:Y,1:"")
	;
HIP(IBTRC)	; -- compute default health insurance policy for claims tracking
	; -- called by trigger on patient field (.05) of file 356.2
	; -- output pointer to subfile (2.312)^insurnace co name
	N X,IBDD,IBINDT,DFN
	S X=""
	S DFN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",5)
	G:'DFN HIPQ
	S IBINDT=$S($P($G(^IBT(356,+$P($G(^IBT(356.2,+IBTRC,0)),U,2),0)),U,6):$P(^(0),U,6),1:DT)
	D ALL^IBCNS1(DFN,"IBDD",1,IBINDT)
	I $G(IBDD(0))=1 S X=+$O(IBDD(0))
	;
	; -- if more than one look for primary
	I 'X,$G(IBDD(0))>1 D
	.S IBX=0
	.F  S IBX=$O(IBDD(IBX)) Q:'IBX  I $P($G(IBDD(IBX,0)),"^",20)=1 S X=IBX Q
	I X S X=X_"^"_$P($G(^DIC(36,+$G(IBDD(X,0)),0)),"^")
HIPQ	Q X
	;
HIPD(DA,IBTLST)	; -- compute default health insurance policy from last review
	; -- called from input templates
	;    input da     = current entry being edited
	;          ibtlst = last entry for this review as determine by $$LAST
	;
	N X,DFN
	S X="" I $P($G(^IBT(356.2,DA,1)),"^",5) G HIPDQ
	G:'$G(IBTLST) HIPDQ
	S X=$P($G(^IBT(356.2,+IBTLST,1)),"^",5),DFN=$P(^(0),"^",5)
HIPDQ	Q $S(+X<1:"",1:$P($G(^DIC(36,+$G(^DPT(DFN,.312,X,0)),0)),"^",1))
	;
PC(DA,IBTLST)	; -- compute default person contacted from last review
	; -- called from input templates
	;    input da     = current entry being edited
	;          ibtlst = last entry for this review as determine by $$LAST
	;
	Q $P($G(^IBT(356.2,+$G(IBTLST),0)),"^",6)
	;
MC(DA,IBTLST)	; -- compute default method of contact from last review
	; -- called from input templates
	;    input da     = current entry being edited
	;
	;          ibtlst = last entry for this review as determine by $$LAST
	;
	N X
	S X=$P($G(^IBT(356.2,+$G(IBTLST),0)),"^",17)
	Q $S(+X>0:$$EXPAND^IBTRE(356.2,.17,X),1:"PHONE")
	;
CP(DA,IBTLST)	; -- compute default contact phone number from last review
	; -- called from input templates
	;    input da     = current entry being edited
	;          ibtlst = last entry for this review as determine by $$LAST
	;
	Q $P($G(^IBT(356.2,+$G(IBTLST),0)),"^",7)
	;
AN(DA,IBTLST)	; -- compute default authorization number policy
	; -- called from input templates
	;    input da     = current entry being edited
	;          ibtlst = last entry for this review as determine by $$LAST
	N X
	S X=$P(^IBT(356.2,DA,0),"^",9)
	Q $E($S($L(X):X,1:$P($G(^IBT(356.2,+$G(IBTLST),0)),"^",28)),1,10)
	;
APPEAL	; -- called from IBTRC, needed more room to compute
	;    info if an appeal
	N DAYS S DAYS=""
	S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29)),X,"ACTION")
	S DAYS=$P(IBTRCD,"^",25) I $P(IBTRCD,"^",29)=1,$P(IBTRCD,"^",10)=3,$O(^IBT(356.2,+IBTRC,14,0)) S DAYS=$$AP^IBTODD1(IBTRC)
	S X=$$SETFLD^VALM1($J(DAYS,3),X,"DAYS")
	S X=$$SETFLD^VALM1($$TPE(),X,"TYPE")
	Q
	;
TPE()	; -- add appeal type to type of action
	N X
	S X=$P(IBETYP,"^",3)
	I $P(IBTRCD,"^",23) S X=X_"-"_$S($P(IBTRCD,"^",23)=1:"Clin",$P(IBTRCD,"^",23)=2:"Admin",1:"")
	Q X

IBTRC4
IBTRC4	;ALB/AAS - CLAIMS TRACKING - PRINT REVIEW WORKSHEET ; 14-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G RWM
	;
RW	; -- print Review Worksheet from lm action from ibtre
	D FULL^VALM1
	D PRINT(DFN)
RWQ	S VALMBCK="R" Q
	;
RWM	; -- print review worksheet from menu
	W !,"Print Insurance Review Worksheet",!
RWM1	;
	; -- select patient
	D PAT^IBCNSM I $D(VALMQUIT)!('$G(DFN)) G RWMQ
	;
	; -- print the sheet, reask patient
	I $G(DFN) D PRINT(DFN),RWMQ W !! G RWM1
	Q
	;
RWMQ	K I,J,X,Y,DIC,DFN,VALMQUIT
	Q
	;
PRINT(DFN)	; -- print one worksheet
	;
	N I,J,X,Y,VA,VA200,VAERR,VAIN,IBINS,IBCNT,IBX,TAB,TAB2,POP
	;
	S %ZIS="QM" D ^%ZIS G:POP PRINTQ
	I $D(IO("Q")) K IO("Q") S ZTRTN="DQ1^IBTRC4",ZTSAVE("DFN")="",ZTSAVE("IB*")="",ZTDESC="IB - Print Review Worksheet" D ^%ZTLOAD K ZTSK D HOME^%ZIS G PRINTQ
	;
	U IO
	;
DQ1	D DQ G RWMQ
	Q
DQ	; -- entry point from taskman
	S VA200="",TAB=3,TAB2=$S(IOM>120:80,1:44)
	D INP^VADPT,PID^VADPT,INS
	;
TOP	W !!,?(IOM-26/2),"INSURANCE REVIEW WORKSHEET",!?(IOM-22),$$HTE^XLFDT($H)
	W !!?TAB,"     Specialty: ",$E($P($G(VAIN(3)),"^",2),1,23)
	W ?TAB2+8,"Ward: ",$P($G(VAIN(4)),"^",2)
	W !!?TAB,"          Name: ",$E($P($G(^DPT(DFN,0)),"^",1),1,23)
	W ?TAB2,"Insurance Co: ",$G(IBX(1))
	W !?TAB,"         Pt ID: ",VA("PID"),?(TAB2+14),$G(IBX(2))
	W !?TAB,"           DOB: ",$$FMTE^XLFDT($P($G(^DPT(DFN,0)),"^",3)),?(TAB2+14),$G(IBX(3))
	W !!?TAB,"Admission Date: ",$P($G(VAIN(7)),"^",2)
	W ?TAB2,"     DC Date: ________  LOS: _____"
	W !!?TAB,"  Attending MD: ",$E($P($G(VAIN(11)),"^",2),1,20)
	W ?TAB2,"  Primary MD: ",$E($P($G(VAIN(2)),"^",2),1,20)
	W !!?TAB,"Complaint/Hist: ",$$LINE("_",IOM-TAB-17)
	W !!?TAB,"                ",$$LINE("_",IOM-TAB-17)
	W !!?TAB,"     Treatment: ",$$LINE("_",IOM-TAB-17)
	W !!?TAB,"                ",$$LINE("_",IOM-TAB-17)
	I $E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) G PRINTQ
	;
MID	;
	W !!?TAB,$$LINE("=",IOM-TAB-1)
	W !?TAB,"|Date",?12,"|Diagnosis",?37,"|Procedure",?64,"|DRG",?71,"|LOS   |" W:IOM>130 "Notes",?130,"|"
	I $E(IOST,1,2)'="C-" W $C(13),"   ",$$LINE("_",IOM-TAB-1)
	F I=1:1:8 D BLINE
	W !?TAB,$$LINE("=",IOM-TAB-1)
	I $E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) G PRINTQ
	;
BOT	;
	W !?TAB,"|Insurance Contact: ",$$LINE("_",26),"  Phone: ",$$LINE("_",20),"|"
	W !?TAB,"|",$$LINE("_",IOM-TAB-3),"|"
	W !?TAB,"|Date    |Comments (#day approved, next review date, etc.)",?IOM-2,"|"
	I $E(IOST,1,2)'="C-" W $C(13),"   ",$$LINE("_",IOM-TAB-1)
	F I=1:1:5 D BLINE2
	W !?TAB,$$LINE("=",IOM-TAB-1)
	W !!?TAB,"Reviewer: _____________________________________  Date: ____________________"
	I $E(IOST,1,2)="C-" D PAUSE^VALM1 I $D(DIRUT) G PRINTQ
	;
PRINTQ	W !
	I $D(ZTQUEUED) S ZTREQ="@" Q
	D ^%ZISC
	Q
	;
LINE(CHAR,LEN)	; -- return line of length len of character char
	I '$G(LEN) S LEN=IOM
	I $G(CHAR)="" S CHAR="-"
	Q $TR($J(" ",LEN)," ",CHAR)
	;
BLINE	; -- print line with bars
	W !?TAB,"|        |                        |                          |      |      |" W:IOM>130 "                                                   |"
	W !?TAB,"|________|________________________|__________________________|______|______|" W:IOM>130 "___________________________________________________|"
	Q
BLINE2	; -- print line with bars
	W !?TAB,"|        |                                                                 " W:IOM<130 "|" W:IOM>130 "                                                    |"
	W !?TAB,"|________|_________________________________________________________________" W:IOM<130 "|" W:IOM>130 "____________________________________________________|"
	Q
	;
INS	; -- print insurance info
	D ALL^IBCNS1(DFN,"IBINS",1,$S(+VAIN(8):+VAIN(8),1:DT))
	K IBX
	I $G(IBINS(0))<1 S IBX(1)="No Active Insurance" G INSQ
	S I=0,IBCNT=0 F  S I=$O(IBINS(I)) Q:'I  S IBCNT=$G(IBCNT)+1,IBX(IBCNT)=$E($P($G(^DIC(36,+IBINS(I,0),0)),"^"),1,20) Q:IBCNT>3
	;
INSQ	Q

IBTRCD
IBTRCD	;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN ; 02-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT EXPAND/EDIT COMMUNICATIONS
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,IBTRC,IBTRD,IBTRV,IBTRN,DFN
	I '$G(IBTRC) G EN^IBTRC
	D EN^VALM("IBT EXPAND/EDIT COMMUNICATIONS")
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Expanded Insurance Reviews for: "_$$PT^IBTUTL1(DFN)_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P($G(^IBT(356,+$G(IBTRN),0)),"^",31))
	S VALMHDR(2)="                           for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	Q
	;
INIT	; -- init variables and list array
	N IBTRCD,IBTRCD1
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	D BLD,HDR
	Q
	;
BLD	; -- build display
	K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
	D KILL^VALM10()
	S IBTRCD=$G(^IBT(356.2,IBTRC,0)),IBTRCD1=$G(^IBT(356.2,IBTRC,1))
	S IBTRND=$G(^IBT(356,IBTRN,0))
	F I=1:1:27 D BLANK^IBTRED(.I)
	S VALMCNT=27
	D ACTION,EN^IBTRCD0
	Q
	;
	;
ACTION	; -- Ins. Action infomation display
	N OFFSET,START,TCODE,IBACTION,IBLCNT
	S START=1,OFFSET=45,IBLCNT=0
	D SET^IBCNSP(START,OFFSET," Action Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"   Type Contact: "_$$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4)))
	S TCODE=$$TCODE^IBTRC(IBTRC) I TCODE D @TCODE
	Q
10	; -- pre-cert contact
15	; -- admission review
20	; -- urgent/emergent ins. contact
30	; -- continued stay contact
	S IBLCNT=2
	D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
	S IBACTION=$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)
	S IBACTION=IBACTION+100 D @IBACTION
	S IBLCNT=IBLCNT+1
	Q
	;
40	; -- Discharge contact
100	; -- No type of action
	Q
50	; -- outpatient treatment
	S IBLCNT=2
	D SET^IBCNSP(START+IBLCNT,OFFSET," Opt Treatment: "_$$EXPAND^IBTRE(356.2,.26,$P(IBTRCD,"^",26)))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"         Action: "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$P(IBTRCD,"^",28))
	;D SET^IBCNSP(START+IBLCNT,OFFSET,"Treatment Auth: "_$$EXPAND^IBTRE(356.2,.27,$P(IBTRCD,"^",27)))
	Q
60	; -- Appeal
65	; -- Nth appeal
	D SET^IBCNSP(START+2,OFFSET,"    Appeal Type: "_$$EXPAND^IBTRE(356.2,.23,$P(IBTRCD,"^",23)))
	D SET^IBCNSP(START+3,OFFSET,"    Case Status: "_$$EXPAND^IBTRE(356.2,.1,$P(IBTRCD,"^",10)))
	D SET^IBCNSP(START+4,OFFSET,"No Days Pending: "_$$EXPAND^IBTRE(356.2,.25,$P(IBTRCD,"^",25)))
	D SET^IBCNSP(START+5,OFFSET,"  Final Outcome: "_$$EXPAND^IBTRE(356.2,.29,$P(IBTRCD,"^",29)))
	Q
70	; -- Patient
80	; -- Other
85	; -- Insurance verification
	Q
	;
110	; -- approval actions
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized From: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",12))))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"  Authorized To: "_$S($P(IBTRCD1,"^",8):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",13))))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"Authorized Diag: "_$$DIAG^IBTRE6($P(IBTRCD,"^",14),1))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"   Auth. Number: "_$P(IBTRCD,"^",28))
	Q
120	; -- denial actions
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"    Denied From: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",15))))
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"      Denied To: "_$S($P(IBTRCD1,"^",7):"ENTIRE VISIT",1:$$DAT1^IBOUTL($P(IBTRCD,"^",16))))
	S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI!(IBLCNT>6)  D
	.S IBLCNT=IBLCNT+1
	.D SET^IBCNSP(START+IBLCNT,OFFSET," Denial Reasons: "_$$EXPAND^IBTRE(356.212,.01,+$G(^IBT(356.2,IBTRC,12,IBI,0))))
	Q
130	; -- penalty
	S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI!(IBLCNT>6)  D
	.S IBLCNT=IBLCNT+1
	.D SET^IBCNSP(START+IBLCNT,OFFSET,"        Penalty: "_$$EXPAND^IBTRE(356.213,.01,+$G(^IBT(356.2,IBTRC,13,IBI,0))))
	Q
140	; -- case pending
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"   Case Pending: "_$$EXPAND^IBTRE(356.2,.2,$P(IBTRCD,"^",20)))
	Q
150	; -- no coverage
	S IBLCNT=IBLCNT+1
	D SET^IBCNSP(START+IBLCNT,OFFSET,"    No Coverage: "_$$EXPAND^IBTRE(356.2,.21,$P(IBTRCD,"^",21)))
	Q
	;
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
	K ^TMP("IBTRCD",$J),^TMP("IBTRCDDX",$J)
	D CLEAN^VALM10,FULL^VALM1
	Q

IBTRCD0
IBTRCD0	;ALB/AAS - CLAIMS TRACKING - EXPAND CONTACTS SCREEN - CONT ; 02-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	D CONT,APPEAL,INS,COMM,USER
	Q
	;
CONT	; -- Contact infomation display
	N OFFSET,START
	S START=1,OFFSET=2
CON1	D SET^IBCNSP(START,OFFSET," Contact Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"    Contact Date: "_$$DAT1^IBOUTL(+IBTRCD,"2P"))
	D SET^IBCNSP(START+2,OFFSET,"Person Contacted: "_$E($P(IBTRCD,"^",6),1,20))
	D SET^IBCNSP(START+3,OFFSET,"  Contact Method: "_$$EXPAND^IBTRE(356.2,.17,$P(IBTRCD,"^",17)))
	D SET^IBCNSP(START+4,OFFSET,"Call Ref. Number: "_$E($P(IBTRCD,"^",9),1,20))
	D SET^IBCNSP(START+5,OFFSET,"     Review Date: "_$$DAT1^IBOUTL($P(IBTRCD,"^",24)))
	I '$P(IBTRCD,"^",2) D SET^IBCNSP(START+2,OFFSET,"Patient Contacted: "_$P($G(^DPT(+$P(IBTRCD,"^",5),0)),"^"))
	Q
	;
APPEAL	; -- Appeals address infomation display
	N OFFSET,START
	S START=15,OFFSET=2
AP1	D SET^IBCNSP(START,OFFSET," Appeal Address Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"  Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
	N APLAD S APLAD=$G(^DIC(36,+$P(IBTRCD,"^",8),.14))
	D SET^IBCNSP(START+2,OFFSET," Alternate Name: "_$P(APLAD,"^",7))
	D SET^IBCNSP(START+3,OFFSET,"  Street line 1: "_$P(APLAD,"^",1))
	D SET^IBCNSP(START+4,OFFSET,"  Street line 2: "_$P(APLAD,"^",2))
	D SET^IBCNSP(START+5,OFFSET,"  Street line 3: "_$P(APLAD,"^",3))
	D SET^IBCNSP(START+6,OFFSET," City/State/Zip: "_$P(APLAD,"^",4)_$S($P(APLAD,"^",4)]"":", ",1:"")_$P($G(^DIC(5,+$P(APLAD,"^",5),0)),"^",2)_"  "_$P(APLAD,"^",6))
	Q
	;
INS	; -- Ins. Co. infomation display
	N OFFSET,START,IBCDFND,IBPHONE
	S START=9,OFFSET=2
ENINS	; -- entry point, must set start and offset
	D SET^IBCNSP(START,OFFSET+25," Insurance Policy Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"   Ins. Co. Name: "_$E($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),1,24))
	S IBCDFND=$G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0))
	D SET^IBCNSP(START+2,OFFSET,"    Group Number: "_$$GRP^IBCNS($P(IBCDFND,"^",18)))
	D SET^IBCNSP(START+3,OFFSET," Whose Insurance: "_$$EXPAND^IBTRE(2.312,6,$P(IBCDFND,"^",6)))
	S IBPHONE=$G(^DIC(36,+$P(IBTRCD,"^",8),.13))
	S IBPHONE=$S($P(IBPHONE,"^",3)'="":$P(IBPHONE,"^",3),1:$P(IBPHONE,"^"))
	D SET^IBCNSP(START+4,OFFSET,"  Pre-Cert Phone: "_IBPHONE)
	D INS1
	Q
INS1	; -- second site of Ins. info
	S OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"Subscriber Name: "_$P(IBCDFND,"^",17))
	D SET^IBCNSP(START+2,OFFSET,"  Subscriber ID: "_$P(IBCDFND,"^",2))
	D SET^IBCNSP(START+3,OFFSET," Effective Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",8),"2P"))
	D SET^IBCNSP(START+4,OFFSET,"Expiration Date: "_$$DAT1^IBOUTL($P(IBCDFND,"^",4),"2P"))
	Q
	;
USER	; -- display user information
	N OFFSET,START
	S START=15,OFFSET=45
USER1	D SET^IBCNSP(START,OFFSET," User Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"    Entered By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",2),0)),"^"))
	D SET^IBCNSP(START+2,OFFSET,"    Entered On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^"),"2P"))
	D SET^IBCNSP(START+3,OFFSET,"Last Edited By: "_$P($G(^VA(200,+$P(IBTRCD1,"^",4),0)),"^"))
	D SET^IBCNSP(START+4,OFFSET,"Last Edited On: "_$$DAT1^IBOUTL(+$P(IBTRCD1,"^",3),"2P"))
	Q
	;
COMM	; -- Comment display
	N OFFSET,START,I,IBLCNT
	S START=23,OFFSET=2
COM1	D SET^IBCNSP(START,OFFSET," Comments ",IORVON,IORVOFF)
	S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.2,IBTRC,11,IBI)) Q:IBI<1  D
	.S IBLCNT=IBLCNT+1
	.D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.2,IBTRC,11,IBI,0)),1,80))
	D SC
	Q
	;
SC	; -- Service connected conditions
	S START=START+2+IBLCNT,OFFSET=2,IBCNT=0,IBLCNT=0
	D SC1^IBTRED01
	Q

IBTRCD1
IBTRCD1	;ALB/AAS - CLAIMS TRACKING INS ACTION EDIT ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRC
	;
QE	; -- Quick edit
	N IBXX,VALMY,DA,DR,DIC,DIE
	D QE1^IBTRC1
	D BLD^IBTRCD
	S VALMBCK="R"
	Q
	;
NX(IBTMPNM,BLD)	; -- edit next template
	N IBXX,VALMY
	D EN^VALM(IBTMPNM)
	I '$D(IBFASTXT) D:'$G(BLD) BLD^IBTRCD
	S VALMBCK="R"
	Q
	;
EDIT(DR,BLD)	; -- edit entry point for claims tracking reviews
	; -- Input   IBTEMP = template name or dr string
	;               BLD = any non-zero value if calling routine is doing own
	;                      rebuild
	;
	N IBDIF,DA,DIC,DIE,DIR,X,Y,IBTLST
	D FULL^VALM1 W !
	D SAVE
	S DIE="^IBT(356.2,",DA=IBTRC
	L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED G EDITQ
	D ^DIE K DA,DR,DIC,DIE
	I '$D(IBCON) D CON K IBCON
	D COMP
	I IBDIF=1 D UPDATE
	L -^IBT(356.2,+IBTRC)
	D BLD^IBTRCD:'$G(BLD)
EDITQ	K ^TMP($J,"IBT")
	S VALMBCK="R"
	Q
	;
SAVE	; -- Save the global before editing
	K ^TMP($J,"IBT")
	S ^TMP($J,"IBT",356.2,IBTRC,0)=$G(^IBT(356.2,IBTRC,0))
	S ^TMP($J,"IBT",356.2,IBTRC,1)=$G(^IBT(356.2,IBTRC,1))
	S ^TMP($J,"IBT",356.2,IBTRC,11,0)=$G(^IBT(356.2,IBTRC,11,0))
	S ^TMP($J,"IBT",356.2,IBTRC,12,0)=$G(^IBT(356.2,IBTRC,12,0))
	S ^TMP($J,"IBT",356.2,IBTRC,13,0)=$G(^IBT(356.2,IBTRC,13,0))
	Q
	;
COMP	; -- Compare before editing with globals
	S IBDIF=0
	I $G(^IBT(356.2,IBTRC,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,0)) S IBDIF=1 Q
	I $G(^IBT(356.2,IBTRC,1))'=$G(^TMP($J,"IBT",356.2,IBTRC,1)) S IBDIF=1 Q
	I $G(^IBT(356.2,IBTRC,11,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,11,0)) S IBDIF=1 Q
	I $G(^IBT(356.2,IBTRC,12,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,12,0)) S IBDIF=1 Q
	I $G(^IBT(356.2,IBTRC,13,0))'=$G(^TMP($J,"IBT",356.2,IBTRC,13,0)) S IBDIF=1 Q
	Q
	;
UPDATE	; -- enter date and user if editing has taken place
	;    entry locked during edit lock not needed here
	S DIE="^IBT(356.2,",DA=IBTRC
	S DR="1.03///NOW;1.04////"_DUZ
	D ^DIE K DA,DR,DIC,DIE
	Q
	;
LOCKED	; -- write locked message
	Q:$D(ZTQUEUED)
	W !!,"Sorry, another user currently editing this entry."
	W !,"Try again later."
	D PAUSE^VALM1
	Q
	;
CON	; -- consistency checker for insurance reviews
	N I,J,X,Y,DA,DR,DIC,DIE,IBI,IBDEL,IBACTION
	S IBCON=1
	S IBACTION=$P($G(^IBE(356.7,+$P(^IBT(356.2,IBTRC,0),"^",11),0)),"^",3)
	I $G(IBACTION)="" S IBACTION=99
	;
	; -- if action and type the same okay, check nxt rv. dates
	I $P($G(^IBT(356.2,IBTRC,0)),"^",4)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",4),$P($G(^IBT(356.2,IBTRC,0)),"^",11)=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) G NXRV
	;
	; -- if action different
	I $P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11)="" Q  ; no previous action
	I $P($G(^IBT(356.2,IBTRC,0)),"^",11)'=$P($G(^TMP($J,"IBT",356.2,IBTRC,0)),"^",11) D
	.S DR=$P($T(@(IBACTION)),";;",2,99)
	.I DR'="" D EDIT(DR,1)
	.I IBACTION'=10 S $P(^IBT(356.2,IBTRC,0),"^",12,13)="^"
	.I IBACTION'=20 S $P(^IBT(356.2,IBTRC,0),"^",15,16)="^"
	.W !,"WARNING: I detected you changed the Action on this review and deleted",!,"data associated with the previous action." H 3
	.Q
	; -- if not denial and denial reasons delete
	I $O(^IBT(356.2,IBTRC,12,0)),$G(IBACTION)'=20 D
	.S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,12,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",12," D ^DIK
	;
	; -- if not penalty and penalty reasons delete
	I $O(^IBT(356.2,IBTRC,13,0)),$G(IBACTION)'=30 D
	.S IBI=0 F  S IBI=$O(^IBT(356.2,IBTRC,13,IBI)) Q:'IBI  S DA=IBI,DA(1)=IBTRC,DIK="^IBT(356.2,"_IBTRC_",13," D ^DIK
	.Q
	;
NXRV	; -- check Next Review Dates
	I '$D(IBTRN) N IBTRN S IBTRN=$P($G(^IBT(356.2,+$G(IBTRC),0)),"^",2)
	Q:'$G(IBTRN)
	S IBI=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  I IBI'=IBTRC D
	.I $P($G(^IBT(356.2,IBI,0)),"^",24) S IBI(IBI)=""
	.Q
	I $O(IBI(0)) D ASKDEL I IBDEL D
	.I $P(^IBT(356.2,IBTRC,0),U,24) W !,"Warning: There are other reviews with Next Review Dates specified.",!,"Generally only the last review date should have a Next Review Date." H 3 Q
	.I $O(IBI(+$O(IBI(0)))) W !,"Warning:  More that one review has a Next Review Date Specified.",!,"Generally only the last review date should have a Next Review Date." H 3 Q
	.Q
	Q
	;
ASKDEL	; -- ask if okay to delete next review dates
	S IBDEL=1
	Q
	;
10	;;1.07///@;.2///@;.21///@
20	;;.14///@;1.08///@;.2///@;21///@;.28///@
30	;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@
40	;;.14///@;1.07///@;1.08///@;21///@;.28///@
50	;;.14///@;1.07///@;1.08///@;.2///@;.28///@
99	;;.14///@;1.07///@;1.08///@;.2///@;21///@;.28///@

IBTRD
IBTRD	;ALB/AAS - CLAIMS TRACKING - DENIAL/ APPEALS ; 10-AUG-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT APPEAL/DENAIL EDITOR
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,IBTRD,DFN,IBCNS,IBTRN,IBTRV,IBTRC,IBFASTXT,VALMQUIT
	D ASK
	G:$D(VALMQUIT) ENQ
	I IBTRD["DPT(" S IBTYPE="P",DFN=+IBTRD D EN^VALM("IBT APPEAL/DENIAL EDITOR")
	I IBTRD["DIC(" S IBTYPE="I",IBCNS=+IBTRD D EN^VALM("IBT APPEAL/DENIAL INS EDITOR")
ENQ	K XQORS,VALMEVL,IBTRD,DFN,IBCNS,IBTRN,IBTRV,IBTRC,IBFASTXT,VALMQUIT
	K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
	D KVAR^VADPT
	Q
	;
HDR	; -- header code
	I $G(IBTYPE)="P" D HDRP
	I $G(IBTYPE)="I" D HDRI
	Q
	;
HDRI	; -- header code for by ins. co.
	S VALMHDR(1)="Denials and Appeals for: "_$P(^DIC(36,+IBCNS,0),"^")
	S VALMHDR(2)=" "
	Q
	;
HDRP	; -- header code for by pat.
	D PID^VADPT
	S VALMHDR(1)="Denials and Appeals for: "_$$PT^IBTUTL1(DFN)
	S VALMHDR(2)=" "
	Q
	;
INIT	; -- init variables and list array
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBTRC",$J),^TMP("IBTRCDX",$J)
	K I,X,XQORNOD,DA,DR,DIE,DNM,DQ,IBTRC
	I '$G(IBTRD),$G(DFN) S IBTRD=DFN_";DPT("
	I '$G(IBTRD) S VALMQUIT=""
	S IBTRSV=""
	Q:$D(VALMQUIT)
	;
BLD	; -- build list
	K ^TMP("IBTRD",$J),^TMP("IBTRDDX",$J)
	N IBI,J,IBTRC,IBTRCD,IBTRCD1,IBTRN
	I IBTRD["DPT(" S IBTYPE="P",DFN=+IBTRD D BLDP
	I IBTRD["DIC(" S IBTYPE="I",IBCNS=+IBTRD D BLDI
	Q
	;
BLDI	; -- Build list of appeals/denials by ins. co.
	D HDRI
	S (IBTRC,IBCNT,VALMCNT)=0
	S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AIACT",IBCNS,IBDEN,IBTRC)) Q:'IBTRC  D 1
	S IBPEN=$O(^IBE(356.7,"ACODE",30,0))
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AIACT",IBCNS,IBPEN,IBTRC)) Q:'IBTRC  D 1
	Q
	;
BLDP	; -- Build list of appeals/denials by patient
	D HDRP
	S (IBTRC,IBCNT,VALMCNT)=0
	S VALMSG=$$MSG^IBTUTL3(DFN)
	S IBDEN=$O(^IBE(356.7,"ACODE",20,0))
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"APACT",DFN,IBDEN,IBTRC)) Q:'IBTRC  D 1
	S IBPEN=$O(^IBE(356.7,"ACODE",30,0))
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"APACT",DFN,IBPEN,IBTRC)) Q:'IBTRC  D 1
	Q
1	; -- first add denial, then add appeal
	S IBTRN=$P(^IBT(356.2,+IBTRC,0),"^",2)
	S IBTRSV=+IBTRC
	D 2
	N IBTRC,IBTRCD,IBTRCD1
	S IBAPEAL=$O(^IBE(356.11,"ACODE",60,0)) ; find appeals
	S IBTRC=0 F  S IBTRC=$O(^IBT(356.2,"AP",IBTRSV,IBTRC)) Q:'IBTRC  D 2
	;
	Q
2	; -- add items to list
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	S IBTRCD1=$G(^IBT(356.2,+IBTRC,1))
	Q:'+$P(IBTRCD,"^",19)  ;quit if inactive
	;
	; -- if not the denial, must be from parent
	I IBTRC'=IBTRSV&($P(IBTRCD,"^",18)'=IBTRSV) Q
	;
	S IBCNT=IBCNT+1
	W "."
	I IBTYPE="I" S DFN=$P(IBTRCD,"^",5) D PID^VADPT
	S X=""
	S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	;
	I IBTYPE="I" D
	.S X=$$SETFLD^VALM1($P(^DPT(DFN,0),"^"),X,"PATIENT")
	.S X=$$SETFLD^VALM1(VA("BID"),X,"ID")
	;
	I IBTYPE="P" D
	.S X=$$SETFLD^VALM1($P($G(^DIC(36,+$P(IBTRCD,"^",8),0)),"^"),X,"INS CO")
	.S X=$$SETFLD^VALM1($$GRP^IBCNS(+$P($G(^DPT(DFN,.312,+$P(IBTRCD1,"^",5),0)),"^",18)),X,"POLICY")
	;
	S X=$$SETFLD^VALM1($P($$DAT1^IBOUTL(+IBTRCD,"2P")," "),X,"DATE")
	I $P(IBTRCD,"^",11) S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11)),X,"ACTION")
	I $P(IBTRCD,"^",11)="" S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRCD,"^",4),0)),"^",3),X,"ACTION")
	;
	S X=$$SETFLD^VALM1($P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),"^",18),0)),"^",2),X,"EVENT")
	S X=$$SETFLD^VALM1($$DAT1^IBOUTL(+$P(^IBT(356,+IBTRN,0),"^",6),"2P"),X,"EV DATE")
	S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4)),X,"TYPE")
	S X=$$SETFLD^VALM1($J($$DAY^IBTUTL3($P(IBTRCD,"^",15),$P(IBTRCD,"^",16),IBTRN),3),X,"DAYS")
	S X=$$SETFLD^VALM1($$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31)),X,"ROI")
	S X=$$SETFLD^VALM1($P(IBTRCD,"^",6),X,"CONTACT")
	S X=$$SETFLD^VALM1($P(IBTRCD,"^",7),X,"PHONE")
	S X=$$SETFLD^VALM1($P(IBTRCD,"^",9),X,"REF NO")
	D SET(X)
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1
	S ^TMP("IBTRD",$J,VALMCNT,0)=X
	S ^TMP("IBTRD",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBTRDDX",$J,IBCNT)=VALMCNT_"^"_IBTRC
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBTRD",$J),^TMP("IBTRDDX",$J)
	D CLEAN^VALM10
	Q
	;
ASK	; -- ask for patient or ins. co.
	N DIR
	S DIR(0)="350.9,4.02",DIR("A")="Select Patient Name or Insurance Co."
	D ^DIR K DIR I $D(DIRUT) S VALMQUIT="" G ASKQ
	S IBTRD=Y
	I +IBTRD<1 S VALMQUIT=""
ASKQ	Q

IBTRD1
IBTRD1	;ALB/AAS - CLAIMS TRACKING - APPEAL/DENIAL ACTIONS ; 10-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRD
	;
AA	; -- Add Appeal entry
	N X,Y,I,J,DA,DR,DIC,DIE,DR,DD,DO,IBQUIT,IBTRCDT,IBXX,VALMY,IBTRN,IBTRC
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXX,0)))),"^",2)
	.; -- must be a denial or a penalty
	.S IBDENIAL=$O(^IBE(356.7,"ACODE",20,0))
	.S IBPENAL=$O(^IBE(356.7,"ACODE",30,0))
	.I '$D(^IBT(356.2,"ACT",IBDENIAL,IBTRC))&('$D(^IBT(356.2,"ACT",IBPENAL,IBTRC))) W !!,"You can only appeal a denial or an penalty." D PAUSE^VALM1 Q
	.D AA1
	D BLD^IBTRD
	S VALMBCK="R"
	Q
	;
AA1	; -- select date
	N DIR,IBTRCDT
	S DIR(0)="356.2,.01",DIR("A")="Select Appeal Date",DIR("B")="NOW"
	D ^DIR K DIR
	I $D(DIRUT)!($E(+Y,1,7)'?7N) G AA1Q
	S IBTRCDT=+Y
	;
	; -- if not tracking id allow selecting
	S IBTRDD=$G(^IBT(356.2,+IBTRC,0))
	S IBTRN=$P(IBTRDD,"^",2)
	S DFN=$P(IBTRDD,"^",5)
	S IBPARNT=IBTRC
	S IBCDFN=$P($G(^IBT(356.2,IBTRC,1)),"^",5)
	;
	; -- add entry
	S IBTCOD=$S('$D(^IBT(356.2,"AP",IBTRC)):60,1:65)
	D COM^IBTUTL3(IBTRCDT,$G(IBTRN),IBTCOD,$G(IBTRV))
	; -- ibtrc now entry of new appeal
	;
	; -- edit based on
	S DIE="^IBT(356.2,",DA=IBTRC
	L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED^IBTRCD1 G AA1Q
	S DR="[IBT ADD APPEAL]"
	;S DR=".18////"_IBPARNT_";1.05////"_IBCDFN_";.04;.23;.1;.25;11;.24;.19"
	D ^DIE K DIE
	L -^IBT(356.2,+IBTRC)
AA1Q	Q
	;
DT	; -- Delete Insurance Action entry
	I '$D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ)) D SORRY^IBTRE1 G DTQ
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX,DIR,DIRUT,IBTRN
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXX,0)))),"^",2),IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2)
	.I $O(^IBT(356.2,"AP",IBTRC,0)) W !,"Must first delete appeals associate* d with Denials" D PAUSE^VALM1 Q
	.;
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBXX
	.D ^DIR I Y'=1 W !,"Entry #",IBXX," not Deleted!" Q
	.D DP1^IBTRC1
	.Q
DTQ	D BLD^IBTRD
	S VALMBCK="R" Q
	;
QE	; -- Quick edit Review entry
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX,IBTRN,IBTRC
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXX,0)))),"^",2),IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2)
	.D QE1
QEQ	S VALMBCK="R"
	D BLD^IBTRD
	Q
	;
QE1	N X,Y,DA,DR,DIC,DIE
	D EDIT^IBTRCD1("[IBT QUICK EDIT]",1)
	Q
	;
NX(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N I,J,IBXXC,VALMY,IBTRN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXC=0 F  S IBXXC=$O(VALMY(IBXXC)) Q:'IBXXC  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXXC,0)))),"^",2),IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2)
	.S:'$D(DFN) DFN=$P($G(^IBT(356.2,+IBTRC,0)),"^",5)
	.S:'$D(IBCNS) IBCNS=$P($G(^IBT(356.2,+IBTRC,0)),"^",8)
	.D EN^VALM(IBTMPNM)
	.K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	.K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	.D KVAR^VADPT
	.Q
	I '$D(IBFASTXT) D BLD^IBTRD
	S VALMBCK="R"
	Q
	;
EDIT(IBTEMP)	; -- Edit entries
	N VALMY
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXX,0)))),"^",2)
	.W !!,"Editing Entry #",IBXX,!
	.D EDIT^IBTRCD1(IBTEMP,1)
	S VALMBCK="R"
	D BLD^IBTRD
	Q
SHOWSC	; -- show sc conditions
	N VALMY
	D FULL^VALM1
	I IBTRD["DPT",$D(DFN) D SHOWSC^IBTRC1 G SHOWQ
	;
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX,DFN,IBTRC
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRC=$P($G(^TMP("IBTRDDX",$J,+$O(^TMP("IBTRD",$J,"IDX",IBXX,0)))),"^",2)
	.S DFN=$P($G(^IBT(356.2,+IBTRC,0)),"^",5)
	.D SHOWSC^IBTRC1
SHOWQ	S VALMBCK="R"
	Q

IBTRDD
IBTRDD	;ALB/AAS - CLAIMS TRACKING, EXPANDED APPEALS - DENIALS ; 02-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT EXPAND/EDIT DENIALS
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL
	I '$G(IBTRC) G EN^IBTRD
	D EN^VALM("IBT EXPAND/EDIT DENIALS")
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Expanded Appeal/Denial for: "_$$PT^IBTUTL1(DFN)_"  ROI: "_$$EXPAND^IBTRE(356,.31,+$P($G(^IBT(356,+$G(IBTRN),0)),"^",31))
	S VALMHDR(2)="                       for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),2)
	Q
	;
INIT	; -- init variables and list array
	N IBTRCD,IBTRCD1,IBTRN,IBTRND,DFN
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	D BLD,HDR
	Q
	;
BLD	; -- build display
	K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
	D KILL^VALM10()
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0)),IBTRCD1=$G(^(1))
	S IBTRN=$P(IBTRCD,"^",2),DFN=$P(IBTRCD,"^",5)
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	F I=1:1:30 D BLANK^IBTRED(.I)
	S VALMCNT=30
	S VAINDT=+IBTRCD+.24
	S VA200="" D INP^VADPT
	D ACTION^IBTRCD,VISIT,CLIN,INS,USER,APADD,COMM,CONT
	Q
	;
COMM	; -- comment display
	N OFFEST,START
	S START=31,OFFSET=2
	D COM1^IBTRCD0
	Q
	;
CONT	; -- contact info display
	N OFFEST,START
	S START=23,OFFSET=45
	D CON1^IBTRCD0
	Q
	;
HIST	; --history display
	N OFFEST,START
	S START=31,OFFSET=2
	;
	Q
	;
CLIN	; -- clinical data display
	N OFFSET,START
	S START=9,OFFSET=2
	D CLIN1^IBTRED0
	Q
	;
APADD	; -- Appeals Address Display
	N OFFSET,START
	S START=9,OFFSET=45
	D AP1^IBTRCD0
	Q
	;
USER	; -- User display
	N OFFSET,START
	S START=23,OFFSET=2
	D USER1^IBTRCD0
	Q
	;
INS	; -- Ins. Co. Display
	N OFFSET,START,IBCDFND,IBPHONE
	S START=17,OFFSET=2
	D ENINS^IBTRCD0
	Q
	;
VISIT	; -- Visit information
	N OFFSET,START,VAIN,VAINDT,IBETYP
	;S VAINDT=+IBTRCD+.24
	;D INP^VADPT
	S START=1,OFFSET=2
	S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	D VISIT^IBTRED
	I $D(VAIN(11)) D SET^IBCNSP(START+5,OFFSET,"     Attending: "_$P(VAIN(11),"^",2))
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K VALMQUIT,IBTRC,IBTRCD,IBTRCD1
	K ^TMP("IBTRDD",$J),^TMP("IBTRDDX",$J)
	D CLEAN^VALM10,FULL^VALM1
	Q

IBTRDD1
IBTRDD1	;ALB/AAS - CLAIMS TRACKING DENIAL/APPEAL EDIT ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRD
	;
QE	; -- Appeal/denial edit
	N IBXX,VALMY,DA,DR,DIC,DIE
	D FULL^VALM1
	D QE1^IBTRD1
	D BLD^IBTRDD
	S VALMBCK="R"
	Q
	;
NX(IBTMPNM)	; -- edit next template
	N IBXX,VALMY
	D EN^VALM(IBTMPNM)
	I '$D(IBFASTXT) D BLD^IBTRDD
	S VALMBCK="R"
	Q
	;
EDIT(DR,BLD)	; -- edit entry point for claims tracking reviews
	; -- Input   IBTEMP = template name or dr string
	;               BLD = any non-zero value if calling routine is doing own
	;                      rebuild
	;
	N IBDIF,DA,DIC,DIE,DIR,X,Y
	D FULL^VALM1
	L +^IBT(356.2,+IBTRC):5 I '$T D LOCKED^IBTRCD1 G EDITQ
	D SAVE^IBTRCD1
	S DIE="^IBT(356.2,",DA=IBTRC
	D ^DIE K DA,DR,DIC,DIE
	D COMP^IBTRCD1
	I IBDIF=1 D UPDATE^IBTRCD1
	L -^IBT(356.2,+IBTRC)
	D BLD^IBTRDD:'$G(BLD)
EDITQ	K ^TMP($J,"IBT")
	S VALMBCK="R"
	Q

IBTRE
IBTRE	;ALB/AAS - CLAIMS TRACKING EDITOR ; 27-JUN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- main entry point for IBT CLAIMS TRACKING EDIT
EN	;
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,IBFASTXT,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,VAIN,VAEL
	D EN^VALM("IBT CLAIMS TRACKING EDITOR")
ENQ	K IBFASTXT,IBSCP,IBOTB,XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,IBTRPRF,VAEL,VAIN,PRECERT,IBAMNT,IBDGCR,IBDGCRU1,IBETYP,IBETYPD,IBLCNT,IBTEXT,IBTRND,X,Y,Z,IBTMPNM
	K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Claims Tracking Entries for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
	S VALMHDR(2)="    for Visits beginning on: "_$$DAT1^IBOUTL(IBTBDT)_" to "_$$DAT1^IBOUTL(IBTEDT)
	Q
	;
INIT	; -- init variables and list array
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
	K I,X,XQORNOD,DA,DR,DIE,DNM,DQ,IBTEDT,IBTBDT
	D PAT^IBCNSM I $D(VALMQUIT) G INITQ
	S IBTBDT=DT-10000 ; default start date 1 year in past
	S IBTEDT=$$FMADD^XLFDT(DT,14) ;default end date is 7 days in future.
	D BLD
INITQ	Q
	;
BLD	; -- Build list of tracking entries
	K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
	N IBII,J,IBTRN,IBTRND,IBTRND1,VAIN,IBCUR,IBSAV,IBSCP
	S IBCNT=0,VALMCNT=0
	I '$G(IBTRPRF) S IBTRPRF=123
	I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRE  HR MENU",IBTRPRF=2:"IBTRE  IR MENU",IBTRPRF=3:"IBTRE  BI MENU",1:"IBTRE  MENU") D PROT^IBTRPR(X)
	S VALMSG=$$MSG^IBTUTL3(DFN)
	K VAINDT S VA200="" D INP^VADPT I VAIN(1) D
	.S IBTRN=$O(^IBT(356,"AD",+VAIN(1),0)),IBCUR="*"
	.D:IBTRN 1
	.S IBSAV=IBTRN
	.S VALMSG=$G(VALMSG)_"    *=Current Admission "
	.K VAIN,VA200,VAINDT
	.Q
	;
	S IBCUR="",IBI=-(IBTEDT+.24)
	F  S IBI=$O(^IBT(356,"APTDT",DFN,IBI)) Q:IBI=""!(IBI>(-IBTBDT+.0001))  S IBTRN=0 F  S IBTRN=$O(^IBT(356,"APTDT",DFN,IBI,IBTRN)) Q:'IBTRN  D 1
BLDQ	Q
	;
1	; -- build the entry
	Q:$G(IBSAV)=IBTRN
	W "."
	S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1)) ; tracking data
	Q:+$P(IBTRND,"^",20)<1  ; quit if inactive
	S IBCNT=IBCNT+1
	S X=""
	S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	S X=$$SETFLD^VALM1(IBCUR_$P($G(^IBE(356.6,+$P(IBTRND,"^",18),0)),"^",2),X,"TYPE")
	S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRND,"^",6),2),X,"DATE")
	S X=$$SETFLD^VALM1($$EXPAND(356,.24,$P(IBTRND,"^",24)),X,"INSUR")
	S IBUR="" S:$P(IBTRND,"^",25) IBUR="R" S:$P(IBTRND,"^",26) IBUR=IBUR_"S" S:$P(IBTRND,"^",27) IBUR=IBUR_"L"
	S X=$$SETFLD^VALM1(IBUR,X,"UR")
	S X=$$SETFLD^VALM1($S(+$P(IBTRND,"^",19):"NO",1:"YES"),X,"BILLABLE")
	S X=$$SETFLD^VALM1($$EXPAND(356,.31,$P(IBTRND,"^",31)),X,"ROI")
	S X=$$SETFLD^VALM1($$ADMDIAG^IBTRE6(IBTRN),X,"DIAGNOSIS")
	S X=$$SETFLD^VALM1($S($P(IBTRND,"^",7)=3:"YES",1:"NO"),X,"URGENT")
	S X=$$SETFLD^VALM1($$DAY(IBTRN),X,"DAYS")
	S X=$$SETFLD^VALM1($P($G(^DGCR(399,+$P(IBTRND,"^",11),0)),U),X,"INITIAL")
	S X=$$SETFLD^VALM1($$PRECRT^IBTRC1(IBTRN),X,"PRECERT")
	S X=$$SETFLD^VALM1($E($$EXPAND(356,.12,$P(IBTRND,"^",12)),1,14),X,"SPECIAL")
	I $G(VAIN(4)) S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
	D SET(X)
BQ	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBTRE",$J),^TMP("IBTREDX",$J)
	K DFN
	D FULL^VALM1,CLEAN^VALM10
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1
	S ^TMP("IBTRE",$J,VALMCNT,0)=X
	S ^TMP("IBTRE",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBTREDX",$J,IBCNT)=VALMCNT_"^"_IBTRN
	Q
	;
EXPAND(FILE,FIELD,VALUE)	; -- return special conditions
	N Y,C S Y=VALUE
	I 'FILE!('FIELD)!(VALUE="") G EXPQ
	S Y=VALUE,C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
EXPQ	Q Y
	;
DAY(X)	; -- compute number of days approved for tracking id
	N IBI,IBTRC,IBTRCD,IBDAY,IBCDT,IBMAX
	;
	S (IBI,IBDAY)=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D  Q:IBDAY="ALL"
	.S IBTRCD=$G(^IBT(356.2,+IBI,0))
	.I $P(IBTRCD,"^",19)'=10 Q  ;review status must be complete
	.I $P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^",3)'=10 Q  ;must be an approval
	.I $P($G(^IBT(356.2,+IBI,1)),"^",8) S IBDAY="ALL" Q
	.S IBDAY=IBDAY+$$DAY^IBTUTL3($P(IBTRCD,"^",12),$P(IBTRCD,"^",13),IBTRN)
	I $P(^IBT(356,IBTRN,0),"^",5)  S IBCDT=$$CDT^IBTODD1(IBTRN) I +IBCDT,$P(IBCDT,"^",2) S IBMAX=$$FMDIFF^XLFDT($P(IBCDT,"^",2),+IBCDT)
	I $G(IBMAX),IBDAY>IBMAX S IBDAY=IBMAX
	Q IBDAY

IBTRE0
IBTRE0	;ALB/AAS - CLAIMS TRACKING - COMPUTE DEFAULTS, TRIGGERS ; 27-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRE
	;
ADT(IBTRN)	; -- compute default admission type
	; -- called from trigger from event type field
	;    returns default in internal 1 = scheduled, 2 = urgent 
	;
	N X,Y,IBX
	S X=""
	S IBX=$G(^IBE(356.6,+$P(^IBT(356,IBTRN,0),"^",18),0))
	I $P(IBX,"^",3)>1 G ADTQ
	I $P(IBX,"^")["SCHEDULED" S X=1 G ADTQ ;default = scheduled
	I $P(IBX,"^")["INPATIENT" S X=2 G ADTQ ;default = urgent
ADTQ	Q X

IBTRE1
IBTRE1	;ALB/AAS - CLAIMS TRACKING - ACTIONS ; 27-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRE
	;
NX(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,+$O(^TMP("IBTRE",$J,"IDX",IBXXT,0)))),"^",2)
	.I IBTRN D EN^VALM(IBTMPNM)
	.K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	.K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	.D KVAR^VADPT
	.Q
	I '$D(IBFASTXT) D HDR^IBTRE,BLD^IBTRE
	S VALMBCK="R"
	Q
	;
DT	; -- Delete tracking entry
	I '$D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ)) D SORRY G DTQ
	N I,J,IBXX,VALMY,DIRUT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,$O(^TMP("IBTRE",$J,"IDX",IBXX,0)))),"^",2)
	.; do some error checking here
	.I $O(^IBT(356.1,"C",IBTRN,0)) W !!,*7,"There are Hospital Reviews associated with this entry."
	.I $O(^IBT(356.2,"C",IBTRN,0)) W !!,*7,"There are Insurance Reviews associated with this entry."
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBXX
	.D ^DIR I Y'=1 W !,"Entry #",IBXX," not Deleted!" Q
	.D DP1
	.Q
DTQ	D BLD^IBTRE
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	N DA,DIC,DIK
	;
	; -- delete reviews, communications,
	N IBI,IBCNT
	S (IBI,IBCNT)=0 F  S IBI=$O(^IBT(356.1,"C",IBTRN,IBI)) Q:'IBI  D
	.S DA=IBI,DIK="^IBT(356.1," D ^DIK
	.S IBCNT=IBCNT+1
	I IBCNT W !,"Number of Hospital Reviews Deleted: ",IBCNT
	;
	S (IBI,IBCNT)=0 F  S IBI=$O(^IBT(356.2,"C",IBTRN,IBI)) Q:'IBI  D
	.S DA=IBI,DIK="^IBT(356.2," D ^DIK
	.S IBCNT=IBCNT+1
	I IBCNT W !,"Number of Insurance Reviews Deleted: ",IBCNT
	;
	; -- delete entry in claims tracking file
	S DA=IBTRN,DIK="^IBT(356," D ^DIK
	W !,"Entry ",IBXX," Deleted"
	Q
	;
CP	; -- change patient
	N VALMQUIT,IBDFN
	D FULL^VALM1
	S IBDFN=DFN D PAT^IBCNSM
	I $D(VALMQUIT) S DFN=IBDFN
	D HDR^IBTRE,BLD^IBTRE
	S VALMBCK="R"
CPQ	K IBDFN
	Q
	;
QE	; -- Quick edit tracking entry
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,$O(^TMP("IBTRE",$J,"IDX",IBXX,0)))),"^",2)
	.D QE1
QEQ	S VALMBCK="R"
	D BLD^IBTRE
	Q
	;
QE1	N X,Y,DA,DR,DIC,DIE,IBTRTP,IBSEL
	S DIE="^IBT(356,",DA=IBTRN
	D EDIT^IBTRED1("[IBT QUICK EDIT]",1)
	;
	I '$D(IBTATRK),$$TRTP^IBTRE1(IBTRN)<3 D  ;clinical info only on inpt/outpt
	.; -- diagnosis edit
	.D EN^IBTRE3(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- procedure edit / only inpt. / outpt use add/edit
	.I $$TRTP^IBTRE1(IBTRN)<2 D EN^IBTRE4(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- provider edit
	.D EN^IBTRE5(IBTRN)
	.;
	.; -- compute drg
	.I $P($G(^IBT(356,IBTRN,0)),"^",5) W !! D DRG^IBTRV2(IBTRN)
	Q
	;
CD	; -- Change Date range
	D FULL^VALM1
	S VALMB=IBTBDT D RANGE^VALM11
	I $S('VALMBEG:1,IBTBDT'=VALMBEG:0,1:IBTEDT=VALMEND) W !!,"Date range was not changed." D PAUSE^VALM1 S VALMBCK="" G CDQ
	S IBTBDT=VALMBEG,IBTEDT=VALMEND
	D HDR^IBTRE,BLD^IBTRE
CDQ	K VALMB,VALMBEG,VALMEND
	S VALMBCK="R"
	Q
	;
EDIT(IBTEMP)	; -- Edit visit
	; -- Input template name
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	;N I,J,IBXXT
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,+$O(^TMP("IBTRE",$J,"IDX",IBXXT,0)))),"^",2)
	.I IBTRN D EDIT^IBTRED1(IBTEMP,1)
	.Q
	D BLD^IBTRE
	S VALMBCK="R"
	Q
DIAG	; -- diagnosis editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,+$O(^TMP("IBTRE",$J,"IDX",IBXXT,0)))),"^",2)
	.I IBTRN D EN^IBTRE3(IBTRN)
	.I $P($G(^IBT(356,IBTRN,0)),"^",5) W !! D DRG^IBTRV2(IBTRN)
	.Q
	S VALMBCK="R"
	Q
	;
TRTP(X)	; -- compute tracking type code
	;    input x = internal entry in 356
	;    output  = code of tracking type from 356.6
	Q $P($G(^IBE(356.6,+$P($G(^IBT(356,+$G(X),0)),"^",18),0)),"^",3)
	;
SORRY	; -- can't delete, don't have key.
	W !!,"You do not have access to delete entries.  See your application coordinator.",!
	Q
	;
PU	; -- procedure editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,+$O(^TMP("IBTRE",$J,"IDX",IBXXT,0)))),"^",2)
	.I IBTRN D EN^IBTRE4(IBTRN)
	.Q
	S VALMBCK="R"
	Q
	;
PRV	; -- provider editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBTRN=$P($G(^TMP("IBTREDX",$J,+$O(^TMP("IBTRE",$J,"IDX",IBXXT,0)))),"^",2)
	.I IBTRN D EN^IBTRE5(IBTRN)
	.Q
	S VALMBCK="R"
	Q

IBTRE2
IBTRE2	;ALB/AAS - CLAIMS TRACKING - ACTIONS ; 27-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRE
	;
AT	; -- Add tracking entry
	D FULL^VALM1
	N X,Y,DIC,DA,DR,DD,DO,DIR,DIRUT,DTOUT,DUOUT,IBETYP,IBQUIT,IBTDT,VAIN,VAINDT,IBTRN,IBTDTE
	;
TEST	S IBQUIT=0
	S DIC(0)="AEQMNZ",DIC="^IBE(356.6,",DIC("S")="I $P(^(0),U,3)<3",DIC("A")="Select Tracking Type: "
	D ^DIC K DIC S IBETYP=+Y I +Y<0 G ATQ
	W !
	;
ADM	I IBETYP=$O(^IBE(356.6,"AC",1,0)) D  I IBQUIT G ATQ
	.N DIR
	.S DIR("?")="     "
	.S DIR("?",1)="    Enter any Date!"
	.S DIR("?",2)="  "
	.S DIR("?",3)="    If the patient was an inpatient on that date the system will use the"
	.S DIR("?",4)="    correct admission date.  If you are tracking an admissions at another"
	.S DIR("?",5)="    facility you may enter that date.  Enter '??' to get a list of the"
	.S DIR("?",6)="    last 10 admissions for this patient."
	.S DIR("??")="^D LISTA^IBTRE20"
	.S DIR(0)="DO^::AEXTP",DIR("A")="Admission Date"
	.D ^DIR K DIR S (IBTDT,VAINDT)=+Y I $P(VAINDT,".",2)="" S VAINDT=VAINDT+.24
	.I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
	.; -- check for valid admission
	.S VA200="" D INP^VADPT
	.I VAIN(1)="" D
	..W !!,*7,"WARNING: Patient does not appear to be an inpatient on this date!"
	..I VAIN(7)="" S VAIN(7)=IBTDT,Y=IBTDT D D^DIQ S $P(VAIN(7),"^",2)=Y
	.;
	.S DIR("?")="No admission was found for this date, enter 'Yes' if you want to add this anyway, or 'No' if you do not wish to track this date."
	.S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Admission Date "_$P(VAIN(7),"^",2),DIR("B")="NO"
	.D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
	.I VAIN(1) D ADM^IBTUTL(VAIN(1))
	.I 'VAIN(1) D OTH^IBTUTL(DFN,IBETYP,IBTDT)
	.Q
	;
OPT	I IBETYP=$O(^IBE(356.6,"AC",2,0)) D  I IBQUIT G ATQ
	.;
	.N DIR
	.S DIR("?")="Time is Required."
	.S DIR("?",1)="    Enter the Outpatient Visit Date."
	.S DIR("?",2)="    If no scheduled visit is found you will be given a warning.  Enter"
	.S DIR("?",3)="    '??' to get a list of scheduled visits between "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_"."
	.I '$D(IBTASS) S DIR("?",4)="    Use the change date range action to change listing of scheduled Visits."
	.S DIR("??")="^D LISTO^IBTRE20"
	.S DIR(0)="DO^::AEXTP",DIR("A")="Outpatient Visit Date"
	.D ^DIR K DIR S IBTDT=Y
	.I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
	.;
	.; check "s" node and encounters file for entries
	.S X=$D(^DPT(DFN,"S",IBTDT))
	.I 'X S Y=$O(^DPT(DFN,"S",$P(IBTDT,"."))) I $P(IBTDT,".")=$P(Y,".") S IBTDT=Y,X=1
	.
	.; if non say so
	.I 'X W !!,*7,"WARNING: No Visit information for this Patient for this date.",!
	.;
	.; ask if okay to add entry.
	.S Y=IBTDT D D^DIQ S IBTDTE=Y
	.S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Visit Date "_IBTDTE,DIR("B")="NO"
	.D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
	.D OPT^IBTUTL1(DFN,IBETYP,IBTDT)
	.Q
	;
SCH	I IBETYP=$O(^IBE(356.6,"AC",5,0)) D  I IBQUIT G ATQ
	.N DIR
	.S DIR("?")="   "
	.S DIR("?",1)="    Enter date of the scheduled admission."
	.S DIR("?",2)="    If you use the scheduled admission package to schedule admissions"
	.S DIR("?",3)="    you may enter '??' to get a list of scheduled admissions between"
	.S DIR("?",4)="    "_$$DAT1^IBOUTL(IBTBDT)_" and "_$$DAT1^IBOUTL(IBTEDT)_".  Use the change date range action"
	.S DIR("?",5)="    to change listing of scheduled admissions."
	.S DIR("?",5)="    This should be a future scheduled admission."
	.S DIR(0)="DO^::AEXTP",DIR("A")="Scheduled Admission Date"
	.S DIR("??")="^D LISTS^IBTRE20"
	.D ^DIR K DIR S IBTDT=+Y
	.I $D(DIRUT)!($P(IBTDT,".")'?7N) S IBQUIT=1 Q
	.; ask if okay to add entry.
	.D FINDS^IBTRE20
	.S Y=IBTDT D D^DIQ S IBTDTE=Y
	.S DIR(0)="Y",DIR("A")="Okay to Add Claims Tracking entry for Scheduled Adm. Date "_IBTDTE,DIR("B")="NO"
	.D ^DIR K DIR I $D(DIRUT)!('Y) S IBQUIT=1 Q
	.I IBTDT\1'>DT S VAINDT=IBTDT\1+.24 D INP^VADPT I $G(VAIN(1)) D  Q
	..W !!,"Patient an inpatient on this date, using inpatient admission."
	..D ADM^IBTUTL(VAIN(1))
	.D SCH^IBTUTL2(DFN,IBTDT)
	.Q
	I $G(IBQUIT) G ATQ
	I $D(IBTASS) Q  ; leave prematurely if from assign reason
	;
	I $G(IBTRN) N IBTATRK S IBTATRK=1 D QE1^IBTRE1
	;
	D BLD^IBTRE
ATQ	Q:$D(IBTASS)
	I $G(IBQUIT) W !,"Nothing Added",! D PAUSE^VALM1
	S VALMBCK="R"
	Q

IBTRE20
IBTRE20	;ALB/AAS - CLAIMS TRACKING EXECUTABLE HELP ; 13-OCT-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
	;
LISTA	; -- list inpatient admissions for patient
	N C,I,J,N,X,Y,IBX
	K ^TMP("IBM",$J)
	Q:'$D(DFN)
	S C=0 F I=0:0 S I=$O(^DGPM("ATID1",DFN,I)) Q:'I  S N=$O(^(I,0)) I $D(^DGPM(+N,0)) S D=^(0),C=C+1,^TMP("IBM",$J,C)=N_"^"_D
	;
	I C=0 W !!,"No Admissions to Choose From." Q
	;
	W !!,"CHOOSE FROM:" F IBI=1:1:10 Q:'$D(^TMP("IBM",$J,IBI))  D WRA
	K ^TMP("IBM",$J)
	Q
	;
WRA	S IBX=$P(^TMP("IBM",$J,IBI),"^",2,20),Y=+IBX X ^DD("DD")
	W !,"     ",Y
	W ?27,$S('$D(^DG(405.1,+$P(IBX,"^",4),0)):"",$P(^(0),"^",7)]"":$P(^(0),"^",7),1:$E($P(^(0),"^",1),1,20))
	;
	W ?50,"TO:  ",$E($P($G(^DIC(42,+$P(IBX,"^",6),0)),"^"),1,17)
	I $D(^DG(405.4,+$P(IBX,"^",7),0)) W " [",$E($P(^(0),"^",1),1,10),"]"
	I $P(IBX,"^",18)=9 W !?23,"FROM:  ",$P($G(^DIC(4,+$P(IBX,"^",5),0)),"^")
	Q
	;
LISTO	; -- list outpatient appointments
	N C,I,J,N,X,Y,IBX,IBI
	K ^TMP("IBM",$J)
	Q:'$D(DFN)
	S C=0 S I=$G(IBTBDT) F  S I=$O(^DPT(DFN,"S",I)) Q:'I!(I>(IBTEDT+.24))  I $D(^DPT(DFN,"S",I,0)) S D=^(0),C=C+1,^TMP("IBM",$J,C)=I_"^"_D
	;
	I C=0 W !!,"No Outpatient Visits to Choose From." Q
	;
	W !!,"CHOOSE FROM:" F IBI=1:1:12 Q:'$D(^TMP("IBM",$J,IBI))  D WRO
	K ^TMP("IBM",$J)
	Q
	;
WRO	S IBX=$G(^TMP("IBM",$J,IBI)),Y=+IBX,IBX=$P(IBX,"^",2,99) X ^DD("DD")
	W !,"     ",Y
	W ?27,"Clinic: ",$P($G(^SC(+IBX,0)),"^"),?60," Type: ",$E($P($G(^SD(409.1,+$P(IBX,"^",16),0)),"^"),1,12)
	;
	I $P(IBX,"^",2)]"" W !,?10," [Status: ",$$EXPAND^IBTRE(2.98,3,$P(IBX,"^",2)),"]"
	Q
LISTS	; -- list scheduled admissions
	N C,I,J,N,X,Y,IBX,IBI
	K ^TMP("IBM",$J)
	Q:'$D(DFN)
	S C=0 F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  I $D(^DGS(41.1,+I,0)) S D=$G(^DGS(41.1,+I,0)) I $P(D,"^",2)'<IBTBDT,$P(D,"^",2)'>IBTEDT S C=C+1,^TMP("IBM",$J,C)=I_"^"_D
	;
	I C=0 W !!,"No Scheduled Admissions to Choose From." Q
	;
	W !!,"CHOOSE FROM:" F IBI=1:1:12 Q:'$D(^TMP("IBM",$J,IBI))  D WRS
	K ^TMP("IBM",$J)
	Q
	;
WRS	S IBX=$P($G(^TMP("IBM",$J,IBI)),"^",2,20),Y=$P(IBX,"^",2) X ^DD("DD")
	W !,"     ",Y
	W ?27," Spec: ",$E($P($G(^DIC(45.7,+$P(IBX,"^",9),0)),"^"),1,25)
	;
	W ?58," To: ",$E($P($G(^DIC(42,+$P(IBX,"^",8),0)),"^"),1,16)
	Q
	;
FINDS	; -- match a scheduled admission
	Q:'$D(DFN)
	Q:'$D(IBTDT)
	N I,J
	S I=0 F  S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  S J=$P($G(^DGS(41.1,I,0)),"^",2) Q:IBTDT=J  I $P(IBTDT,".")=$P(J,".") S IBTDT=J Q
	Q
	;
ID	; -- write out identifier for entry, called by ^dd(356,0,"id","write")
	N IBOE
	S IBOE=$P(^(0),"^",4) I IBOE,$P($G(^SCE(+IBOE,0)),"^",4) W ?58,"["_$E($P($G(^SC(+$P($G(^SCE(+IBOE,0)),"^",4),0)),"^"),1,20),"]"
	Q

IBTRE3
IBTRE3	;ALB/AAS - CLAIMS TRACKING EDIT DIAGNOSIS ; 1-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRE
	;
EN(IBTRN)	; -- entry point for protocols
	;    must do own rebuild actions
	; -- Input - point to 356
	;
	N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
	D FULL^VALM1
	S VALMBCK=""
	S IBTRND=$G(^IBT(356,+IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
	;
	S IBETYP=$$TRTP^IBTRE1(IBTRN)
	I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
	;
	; -- outpatient diagnosis
	I IBETYP=2 D  G ENQ
	.I $P(IBTRND,"^",4) D ASK^SDCO4(+$P(IBTRND,"^",4)) K SDCOQUIT
	.I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
	.S VALMBCK="R"
	;
	; -- Inpatient diagnosis
	I IBETYP=1 D
	.Q:'IBDGPM
	.;
	.; -- ask admitting diagnosis if not already there
	.I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADIAG(IBTRN,IBETYP)
	.I $G(IBSEL)="^" Q
	.;
	.; -- edit other diagnosis
	.D DIAG(IBTRN,IBETYP)
	.S VALMBCK="R"
	;
ENQ	;
	Q
ADIAG(IBTRN,IBETYP)	; -- add admitting diagnosis
	;
	N IBADG,DA,DR,DIC,DIE,DD,DO,IOINHI,IOINORM
	S IBADG=""
	;
	;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
	I IBETYP'=1!('IBDGPM) W !!,"You can only enter and admitting diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
	;
	S X="IOINHI;IOINORM" D ENDR^%ZISS
	S IBADG=$O(^IBT(356.9,"ADG",IBDGPM,0)) I IBADG S IBDA=$O(^IBT(356.9,"ADG",IBDGPM,IBADG,0))
	W !!,"--- ",IOINHI,"Admitting Diagnosis",IOINORM," --- ",$S('IBADG:"Unspecified",1:$P($G(^ICD9(+IBADG,0)),"^")_" -"_$P(^(0),"^",3))
	I +IBADG D EDT(IBDA,".01;") W !
	I '$O(^IBT(356.9,"ADG",+IBDGPM,0)) D ADD(IBTRN,3)
	;
	W !
ADGQ	Q
	;
DIAG(IBTRN,IBETYP)	; -- add/edit diagnosis
	Q:'IBTRN
	I $G(IBETYP)'=1 Q
	N DA,DR,DIC,DIE
	S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
	I IBETYP'=1!('IBDGPM) W !!,"You can only enter a diagnosis for an admission",! D PAUSE^VALM1 G ADGQ
	;
	S X="IOINHI;IOINORM" D ENDR^%ZISS
	W !!,"--- ",IOINHI,"Diagnosis",IOINORM," --- "
	S IBSEL="Add"
	D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK^IBTRE4(IBCNT,"A")
	I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G DIAGQ
	I IBSEL="Add" D ADD(IBTRN)
	D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;.04")
DIAGQ	Q
	;
ADD(IBTRN,TYPE)	; -- Add a new diagnosis
	;
	N DTOUT,DUOUT,X,Y,DIC
	S IBCNT=0
	I '$G(TYPE) S TYPE=""
NXT	S DIC("A")=$S(TYPE=3:"Admitting Diagnosis: ",IBCNT<1:"Select Diagnosis: ",1:"Next Diagnosis: ")
	S DIC("S")="I '$P(^(0),U,9)"
	S DIC="^ICD9(",DIC(0)="AEMQ",X=""
	W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
	I $D(^IBT(356.9,"ADGPM",$$DGPM(IBTRN),+Y)) W !!,*7,$P(Y,"^",2)," is already a diagnosis.",! G NXT
	S IBCNT=IBCNT+1
	S IBADG=$$NEW(+Y,IBTRN,TYPE)
	I IBADG,TYPE'=3 D EDT(IBADG) G NXT
ADDQ	I $D(DTOUT)!($D(DUOUT)) S IBSEL="^"
	Q
	;
DGPM(IBTRN)	; -- return admission pointer
	Q $P(^IBT(356,+IBTRN,0),"^",5)
	;
NEW(ICDI,IBTRN,TYPE)	; -- file new entry
	;
	N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
	S X=ICDI,(DIC,DIK)="^IBT(356.9,",DIC(0)="L",DLAYGO=356.9
	D FILE^DICN S IBADG=+Y
	I IBADG>0 L +^IBT(356.9,IBADG) S $P(^IBT(356.9,IBADG,0),"^",2,4)=$$DGPM(IBTRN)_"^"_$P($P(^IBT(356,IBTRN,0),"^",6),".")_"^"_$G(TYPE),DA=IBADG D IX1^DIK L -^IBT(356.9,IBADG)
NEWQ	Q IBADG
	;
EDT(IBADG,IBDR)	; -- edit entry
	;
	N DR,DIE,DA
	S DR=$G(IBDR) I DR="" S DR=".03;.04"
	S DA=IBADG,DIE="^IBT(356.9,"
	L +^IBT(356.9,+IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
	Q:'$G(^IBT(356.9,DA,0))
	D ^DIE
	L -^IBT(356.9,+IBADG)
EDTQ	Q
	;
SET(IBTRN)	; -- set array
	N IBDGPM,IBICD
	S IBDGPM=$$DGPM(IBTRN)
	S (IBICD,IBCNT)=0
	F  S IBICD=$O(^IBT(356.9,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=$O(^(IBICD,0)) D
	.S IBCNT=IBCNT+1
	.S IBXY(IBCNT)=IBDA_"^"_IBICD
SETQ	Q
	;
LIST(IBXY)	;List Diagnosis Array
	; Input  -- IBXY     Diagnosis Array Subscripted by a Number
	; Output -- List Diagnosis Array
	N I,IBXD
	W !
	S I=0 F  S I=$O(IBXY(I)) Q:'I  S IBXD=$G(^ICD9(+$P(IBXY(I),"^",2),0)) D
	.S IBTNOD=$G(^IBT(356.9,+IBXY(I),0))
	.W !?2,I,"  ",$P(IBXD,"^"),?15,$E($P(IBXD,"^",3),1,30),?48,$$DAT1^IBOUTL($P($P(IBTNOD,"^",3),"."),2),?60,$$EXPAND^IBTRE(356.9,.04,$P(IBTNOD,"^",4))
	Q

IBTRE4
IBTRE4	;ALB/AAS - CLAIMS TRACKING EDIT PROCEDURE ; 1-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRE
	;
EN(IBTRN)	; -- entry point for protocols
	;    must do own rebuild actions
	; -- Input - point to 356
	;
	N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
	D FULL^VALM1
	S VALMBCK=""
	S IBTRND=$G(^IBT(356,IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
	;
	S IBETYP=$$TRTP^IBTRE1(IBTRN)
	I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
	;
	; -- outpatient procedure
	I IBETYP=2 D  G ENQ
	.W !!,*7,"You must use the add/edit action on Check-out to add procedures to Outpatient Encounters.",!
	.S VALMBCK="R"
	;
	; -- Inpatient procedure
	Q:'IBDGPM
	I IBETYP=1 D PROC(IBTRN,IBETYP) S VALMBCK="R"
	;
ENQ	;
	Q
	;
PROC(IBTRN,IBETYP)	; -- add/edit procedure
	Q:'IBTRN
	I $G(IBETYP)'=1 Q
	N DA,DR,DIC,DIE
	;S IBDGPM=$P(^IBT(356,+IBTRN,0),"^",5)
	I IBETYP'=1!('IBDGPM) W !!,"You can only enter a procedure for an admission",! D PAUSE^VALM1 G PROCQ
	;
	S X="IOINHI;IOINORM" D ENDR^%ZISS
	W !!,"--- ",IOINHI,"Procedure",IOINORM," --- "
	S IBSEL="Add"
	D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK(IBCNT,"A")
	I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G PROCQ
	I IBSEL="Add" D ADD(IBTRN)
	D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;")
PROCQ	Q
	;
ADD(IBTRN,TYPE)	; -- Add a new procedure
	;
	N DTOUT,DUTOU,X,Y,DIC
	S IBCNT=0
	I '$G(TYPE) S TYPE=""
NXT	S DIC("A")=$S(IBCNT<1:"Select Procedure: ",1:"Next Procedure: ")
	S DIC("S")="I '$P(^(0),U,9)"
	S DIC="^ICD0(",DIC(0)="AEMQ",X=""
	W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
	I $D(^IBT(356.91,"ADGPM",$$DGPM^IBTRE3(IBTRN),+Y)) W !!,*7,$P(Y,"^",2)," is already a procedure.",!
	S IBCNT=IBCNT+1
	S IBADG=$$NEW(+Y,IBTRN,TYPE)
	I IBADG,TYPE'=3 D EDT(IBADG) G NXT
ADDQ	Q
	;
NEW(ICDI,IBTRN,TYPE)	; -- file new entry
	;
	N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
	S X=ICDI,(DIC,DIK)="^IBT(356.91,",DIC(0)="L",DLAYGO=356.91
	D FILE^DICN S IBADG=+Y
	I IBADG>0 L +^IBT(356.91,IBADG) S $P(^IBT(356.91,IBADG,0),"^",2,4)=$$DGPM^IBTRE3(IBTRN)_"^"_$P($P(^IBT(356,IBTRN,0),"^",6),"."),DA=IBADG D IX1^DIK L -^IBT(356.91,IBADG)
NEWQ	Q IBADG
	;
EDT(IBADG,IBDR)	; -- edit entry
	;
	N DR,DIE,DA
	S DR=$G(IBDR) I DR="" S DR=".03;"
	S DA=IBADG,DIE="^IBT(356.91,"
	L +^IBT(356.91,IBADG):5 I '$T D LOCKED^IBTRCD1 G EDTQ
	Q:'$G(^IBT(356.91,DA,0))
	L -^IBT(356.91,IBADG)
	D ^DIE
EDTQ	Q
	;
SET(IBTRN)	; -- set array
	N IBDGPM,IBICD
	S IBDGPM=$$DGPM^IBTRE3(IBTRN)
	S (IBICD,IBCNT)=0
	F  S IBICD=$O(^IBT(356.91,"ADGPM",IBDGPM,IBICD)) Q:'IBICD  S IBDA=$O(^(IBICD,0)) D
	.S IBCNT=IBCNT+1
	.S IBXY(IBCNT)=IBDA_"^"_IBICD
SETQ	Q
	;
LIST(IBXY)	;List Diagnosis Array
	; Input  -- IBXY     Diagnosis Array Subscripted by a Number
	; Output -- List Diagnosis Array
	N I,IBXD
	W !
	S I=0 F  S I=$O(IBXY(I)) Q:'I  S IBXD=$G(^ICD0(+$P(IBXY(I),"^",2),0)) D
	.S IBTNOD=$G(^IBT(356.91,+IBXY(I),0))
	.W !?2,I,"  ",$P(IBXD,"^"),?15,$E($P(IBXD,"^",4),1,43),?60,$$DAT1^IBOUTL($P($P(IBTNOD,"^",3),"."),2)
	Q
	;
ASK(IBCNT,IBPAR,IBSELDF)	;Ask user to select from list
	; Input  -- SDCNT    Number of Entities
	;           SDPAR    Selection Parameters (A=Add)
	;           SDSELDF  Selection Default  [Optional]
	; Output -- Selection
	N DIR,DIRUT,DTOUT,DUOUT,X,Y
REASK	S DIR("?")="Enter "_$S($G(IBSELDF)]"":"<RETURN> for '"_IBSELDF_"', ",1:"")_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")
	S DIR("A")="Enter "_$S(IBCNT=1:"1",1:"1-"_IBCNT)_" to Edit"_$S(IBPAR["A":", or 'A' to Add",1:"")_": "_$S($G(IBSELDF)]"":IBSELDF_"// ",1:"")
	S DIR(0)="FAO^1:30"
	D ^DIR I $D(DTOUT)!($D(DUOUT)) S Y="^" G ASKQ
	S Y=$$UPPER^VALM1(Y)
	I Y?.N,Y,Y'>IBCNT G ASKQ
	I IBPAR["A",$E(Y)="A" S Y="Add" G ASKQ
	I Y="" S Y=$S($G(IBSELDF)]"":IBSELDF,1:"Return") G ASKQ
	W !!?5,DIR("?"),".",! G REASK
ASKQ	Q $G(Y)

IBTRE5
IBTRE5	;ALB/AAS - CLAIMS TRACKING EDIT PROVIDER ; 1-SEP-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRE
	;
EN(IBTRN)	; -- entry point for protocols
	;    must do own rebuild actions
	; -- Input - pointer to 356
	;
	N IBETYP,IBTRND,IBXY,IBCNT,IBDGPM
	D FULL^VALM1
	S VALMBCK=""
	S IBTRND=$G(^IBT(356,IBTRN,0)),IBDGPM=$P(IBTRND,"^",5)
	;
	S IBETYP=$$TRTP^IBTRE1(IBTRN)
	I IBETYP>2 W !!,"Clinical Information comes from the parent package." D PAUSE^VALM1 G ENQ
	;
	; -- outpatient provider
	I IBETYP=2 D  G ENQ
	.I $P(IBTRND,"^",4) D ASK^SDCO3(+$P(IBTRND,"^",4)) K SDCOQUIT
	.I '$P(IBTRND,"^",4) W !!,"Can not add provider to outpatient visits prior to Check-out.",! D PAUSE^VALM1
	.S VALMBCK="R"
	;
	; -- Inpatient provider
	I IBETYP=1 D
	.Q:'IBDGPM
	.; -- ask admitting provider
	.I '$O(^IBT(356.94,"ADG",IBDGPM,0)) D APRVD(IBTRN,IBETYP)
	.I $G(IBSEL)="^" Q
	.;
	.; -- edit other provider
	.D PRVD(IBTRN,IBETYP)
	.S VALMBCK="R"
	;
ENQ	;
	Q
APRVD(IBTRN,IBETYP)	; -- add admitting provider
	;
	N IBAPR,DA,DR,DIC,DIE,DD,DO,IOINHI,IOINORM
	S IBAPR=""
	;
	I IBETYP'=1!('IBDGPM) W !!,"You can only enter and admitting provider for an admission",! D PAUSE^VALM1 G APRVDQ
	;
	S X="IOINHI;IOINORM" D ENDR^%ZISS
	S IBAPR=$O(^IBT(356.94,"ADG",IBDGPM,0)) I IBAPR S IBDA=$O(^IBT(356.94,"ADG",IBDGPM,IBAPR,0))
	W !!,"--- ",IOINHI,"Admitting Physician",IOINORM," --- ",$S('IBAPR:"Unspecified",1:$P($G(^VA(200,+$P(IBAPR,"^",3),0)),"^"))
	I +IBAPR D EDT(IBDA,".03;") W !
	I '$O(^IBT(356.94,"ADG",IBDGPM,0)) D ADD(IBTRN,3)
	;
	W !
APRVDQ	Q
	;
PRVD(IBTRN,IBETYP)	; -- add/edit provider
	Q:'IBTRN
	I $G(IBETYP)'=1 Q
	N DA,DR,DIC,DIE
	I IBETYP'=1!('IBDGPM) W !!,"You can only enter a provider for an admission",! D PAUSE^VALM1 G PRVDQ
	;
	S X="IOINHI;IOINORM" D ENDR^%ZISS
	W !!,"--- ",IOINHI,"Provider",IOINORM," --- "
	S IBSEL="Add"
	D SET(IBTRN) I $D(IBXY) D LIST(.IBXY) S IBSEL=$$ASK^IBTRE4(IBCNT,"A")
	I IBSEL["^"!(IBSEL["Return") S:IBSEL["^" IBQUIT=1 G PRVDQ
	I IBSEL="Add" D ADD(IBTRN)
	D:IBSEL EDT(+$G(IBXY(+IBSEL)),".01;.03;.04")
PRVDQ	Q
	;
ADD(IBTRN,TYPE)	; -- Add a new provider
	;
	N DTOUT,DUTOU,X,Y,DIC
	S IBCNT=0
	I '$G(TYPE) S TYPE=""
NXT	S DIC("A")=$S(TYPE=3:"Admitting Provider: ",IBCNT<1:"Select Provider: ",1:"Next Provider: ")
	S DIC("S")="I $D(^VA(200,""AK.PROVIDER"",$P(^(0),U,1),+Y))"
	S DIC="^VA(200,",DIC(0)="AEMQ",X=""
	W:$G(IBCNT) ! D ^DIC K DIC G ADDQ:Y<0
	S IBCNT=IBCNT+1
	S IBAPR=$$NEW(+Y,IBTRN,TYPE)
	I IBAPR,TYPE'=3 D EDT(IBAPR) G NXT
ADDQ	I $D(DUOUT)!($D(DTOUT)) S IBSEL="^"
	Q
	;
NEW(VA200,IBTRN,TYPE)	; -- file new entry
	;
	N DA,DD,DO,DIC,DIK,DINUM,DLAYGO,X,Y,I,J
	;
	; -- default date = episode date
	S X=$P($P(^IBT(356,IBTRN,0),"^",6),".")
	S (DIC,DIK)="^IBT(356.94,",DIC(0)="L",DLAYGO=356.94
	D FILE^DICN S IBAPR=+Y
	I IBAPR>0 L +^IBT(356.94,IBAPR) S $P(^IBT(356.94,IBAPR,0),"^",2,4)=$$DGPM^IBTRE3(IBTRN)_"^"_VA200_"^"_$G(TYPE),DA=IBAPR D IX1^DIK L -^IBT(356.94,IBAPR)
NEWQ	Q IBAPR
	;
EDT(IBAPR,IBDR)	; -- edit entry
	;
	N DR,DIE,DA
	S DR=$G(IBDR) I DR="" S DR=".01;.03;.04"
	S DA=IBAPR,DIE="^IBT(356.94,"
	L +^IBT(356.94,IBAPR):5 I '$T D LOCKED^IBTRCD1 G EDTQ
	Q:'$G(^IBT(356.94,DA,0))
	D ^DIE
	L -^IBT(356.94,IBAPR)
EDTQ	Q
	;
SET(IBTRN)	; -- set array
	N IBDGPM,IBPRV
	S IBDGPM=$$DGPM^IBTRE3(IBTRN)
	S (IBPRV,IBCNT)=0
	F  S IBPRV=$O(^IBT(356.94,"ADGPM",IBDGPM,IBPRV)) Q:'IBPRV  S IBDA=0 F  S IBDA=$O(^IBT(356.94,"ADGPM",IBDGPM,IBPRV,IBDA)) Q:'IBDA  D
	.S IBCNT=IBCNT+1
	.S IBXY(IBCNT)=IBDA
SETQ	Q
	;
LIST(IBXY)	;List Provider Array
	; Input  -- IBXY     Provider Array Subscripted by a Number
	; Output -- List Provider Array
	N I,IBXD,IBTNOD
	W !
	S I=0 F  S I=$O(IBXY(I)) Q:'I  D
	.S IBTNOD=$G(^IBT(356.94,+IBXY(I),0))
	.S IBXD=$P($G(^VA(200,$P(IBTNOD,"^",3),0)),"^")
	.W !?2,I,"  ",IBXD,?40,$$DAT1^IBOUTL($P($P(IBTNOD,"^",1),"."),2),?60,$$EXPAND^IBTRE(356.94,.04,$P(IBTNOD,"^",4))
	Q
	;
DICS(Y)	; -- called by input transform and screen logic for type of provider
	N IBY
	S IBY=0
	I Y<3 S IBY=1 G DICSQ
	I Y=3 I '$D(^IBT(356.94,"ATP",+$P($G(^IBT(356.94,DA,0)),U,2),3))!($O(^IBT(356.94,"ATP",+$P($G(^IBT(356.94,DA,0)),U,2),3,0))=DA) S IBY=1
DICSQ	Q IBY
	;
DTCHK(DA,X)	; -- input transform for 356.94;.01.  date not before admission or after discharge
	N IBTRN,IBOK,IBCDT
	S IBOK=1
	G:'DA!($G(X)<1) DTCHKQ
	S IBTRN=+$O(^IBT(356,"AD",+$P(^IBT(356.94,DA,0),"^",2),0))
	G:'IBTRN DTCHKQ
	S IBCDT=$$CDT^IBTODD1(IBTRN)
	I X<$P(+IBCDT,".") S IBOK=0 G DTCHKQ ;before adm
	I $P(IBCDT,"^",2),X>$P(IBCDT,"^",2) S IBOK=0 G DTCHKQ ; after disch
	I X>$$FMADD^XLFDT(DT,7) S IBOK=0 G DTCHKQ
	;
DTCHKQ	Q IBOK

IBTRE6
IBTRE6	;ALB/AAS - CLAIMS TRACKING OUTPUT CLIN DATA ; 2-SEP-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADMDIAG(IBTRN)	; -- output admitting diagnosis (inpatient)
	;
	N X S X=""
	I '$G(IBTRN) G ADMDQ
	S IBETYP=$$TRTP^IBTRE1(IBTRN) I IBETYP>1 G ADMDQ
	S X=$$DIAG(+$O(^IBT(356.9,"ADG",+$P(^IBT(356,+IBTRN,0),"^",5),0)),1) I X'="" G ADMDQ
	I $D(VAIN(9)) S X=VAIN(9)
	I '$D(VAIN(9)) D
	.N VAIN,VAINDT
	.S VAINDT=$P(^IBT(356,IBTRN,0),U,6)
	.S VA200="" D INP^VADPT
	.S X=VAIN(9)
ADMDQ	Q X
	;
PDIAG(IBTRN)	; -- return primary diagnosis (inpatient)
	N X S X=""
	I '$G(IBTRN) G PDIAGQ
	S X=$$DIAG(+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)),0)),1)
PDIAGQ	Q X
	;
SDIAG	; -- return secondary diagnosis (inpatient
	Q
	;
ODIAG	; -- return outpatient diagnosis
	Q
	;
DIAG(X,Y)	; -- Expand diagnosis from pointer
	; -- input x = pointer to diag
	;          y = if want text added (zero = number only)
	I '$G(X) Q ""
	Q $P($G(^ICD9(+$G(X),0)),"^")_$S($G(Y):" - "_$P($G(^ICD9(+$G(X),0)),"^",3),1:"")
	;
	;
APROV(IBTRN)	; -- return  provider (inpatient)
	;
	N X S X=""
	I '$G(IBTRN) G APROVQ
	S X=$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),2,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
	S X=+$O(^IBT(356.94,"ATP",+$P(^IBT(356,+IBTRN,0),"^",5),1,0)) I X S X=$P($G(^IBT(356.94,+X,0)),"^",3) G APROVQ
	I $D(VAIN(2)) S X=VAIN(2) I 'X S X=$G(VAIN(11))
	I '$D(VAIN(2)) D
	.N VAIN,VAINDT
	.S VAINDT=$P(^IBT(356,IBTRN,0),U,6)
	.S VA200="" D INP^VADPT
	.S X=VAIN(2)
	.I 'X S X=VAIN(11)
APROVQ	Q $P($G(^VA(200,+X,0)),"^")
	;
ATTEND	; -- return attendings (inpatient)
	Q
	;
PROV	; -- return providers (inpatient)
	Q
	;
OPROV	; -- returns outpatient providers
	Q
	;
PROC(X,Y)	; -- Expand procedure from pointer
	; input x=proc^^date
	;       y= 1= exand
	;
	I '$G(Z) S Z=1
	I '+$G(X) Q ""
	Q $P($G(^ICD0(+X,0)),"^")_$S($G(Y):" - "_$P($G(^ICD0(+X,0)),"^",4),1:"")
	;
OPROC	; -- outpatient procedures
	Q
	;
IPROC	; -- inpatient procedures
	Q
	;
LISTP(IBTRN,IBXY)	; -- return last y  procedures for a tracking entry
	; -- input  ibtrn = tracking file pointer
	; -- output array of procedure by date - ibxy(date)=procedure node
	;
	N IBDGPM,IBDT,IBDA,IBX,IBCNT
	S (IBX,IBDT)="",IBXY=0
	I '$G(IBTRN) G LISTPQ
	S IBDGPM=$P($G(^IBT(356,IBTRN,0)),"^",5)
	Q:'IBDGPM
	F  S IBDT=$O(^IBT(356.91,"APP",IBDGPM,IBDT)) Q:'IBDT  S IBDA="" F  S IBDA=$O(^IBT(356.91,"APP",IBDGPM,IBDT,IBDA)) Q:'IBDA  D
	.S IBX(-IBDT,IBDA)=$G(^IBT(356.91,IBDA,0))
	;
	S IBDT="" F  S IBDT=$O(IBX(IBDT)) Q:'IBDT  S IBDA=0 F  S IBDA=$O(IBX(IBDT,IBDA)) Q:'IBDA  D
	.S IBXY=IBXY+1
	.S IBXY(IBXY)=IBX(IBDT,IBDA)
LISTPQ	Q
	;
LSTPDG(X,IBDT,Y)	; -- return current diagnosis for a tracking entry
	; -- input      X = tracking file pointer
	;            ibdt = date for current diagnosis (null = last)
	;               y = 1= primary (default)
	;                   2= secondary
	;
	N IBY,IBX S (IBY,IBX)=""
	I '$G(X) G LSTPDQ
	S:'$G(IBDT) IBDT=DT S IBDT=-(IBDT+.9)
	S:'$G(Y) Y=1 I Y'=1,Y'=2 S Y=1
	F  S IBDT=$O(^IBT(356.9,"APD",X,IBDT)) Q:'IBDT!($G(IBY))  S IBDA="" F  S IBDA=$O(^IBT(356.9,"APD",X,IBDT,IBDA)) Q:'IBDA!($G(IBY))  D
	.I $P(^IBT(356.9,IBDA,0),U,4)=Y S IBY=+^(0)
LSTPDQ	Q IBY
	;
DTCHK(DA,X)	; -- input transform for 356.94;.01.  date not before admission or after discharge
	N IBTRN,IBOK,IBCDT
	S IBOK=1
	G:'DA!($G(X)<1) DTCHKQ
	S IBTRN=+$O(^IBT(356,"AD",+$P(^IBT(356.94,DA,0),"^",2),0))
	G:'IBTRN DTCHKQ
	S IBCDT=$$CDT^IBTODD1(IBTRN)
	I X<$P(+IBCDT,".") S IBOK=0 G DTCHKQ ;before adm
	I $P(IBCDT,"^",2),X>$P(IBCDT,"^",2) S IBOK=0 G DTCHKQ ; after disch
	I X>$$FMADD^XLFDT(DT,7) S IBOK=0 G DTCHKQ
	;
DTCHKQ	Q IBOK

IBTRED
IBTRED	;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY ; 01-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT EXPAND/EDIT TRACKING
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD
	I '$G(IBTRN) G EN^IBTRE Q  ; entry from programmer mode
	D EN^VALM("IBT EXPAND/EDIT TRACKING")
	K IBFASTXT
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Expanded Claims Tracking Info for: "_$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
	S VALMHDR(2)="                              For: "_$$ETYP(IBTRN)
	Q
	;
INIT	; -- init variables and list array
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	D BLD,HDR
	Q
	;
BLD	; -- list builder
	N IBTRND,IBTRND1,IBTRND2,IBETYP
	K ^TMP("IBTRED",$J)
	F I=1:1:30 D BLANK(.I)
	I '$G(IBTRPRF) S IBTRPRF=123
	I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRED  HR MENU",IBTRPRF=2:"IBTRED  IR MENU",IBTRPRF=3:"IBTRED  BI MENU",1:"IBTRED  MENU") D PROT^IBTRPR(X)
	D KILL^VALM10()
	S IBTRND=$G(^IBT(356,IBTRN,0)),IBTRND1=$G(^(1))
	S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	S VALMCNT=30
	D VISIT,^IBTRED0,^IBTRED01
	Q
	;
VISIT	; -- Visit info Region
	N OFFSET,START,IBOE
	S START=1,OFFSET=2
	D SET^IBCNSP(START,OFFSET," Visit Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"    Visit Type: "_$P(IBETYP,"^"))
	I '$D(IBETYP) N IBETYP S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	S X=$P(IBETYP,"^",3) D @X
	Q
1	; -- visit region for admission or scheduled admission
	I $P($G(^DGPM(+$P(IBTRND,"^",5),0)),"^",17) S VAINDT=+$G(^DGPM(+$P(IBTRND,"^",5),0))
	I '$D(VAIN) S VA200="" D INP^VADPT
	I VAIN(7)="" S Y=$P(IBTRND,"^",6) D D^DIQ S $P(VAIN(7),"^",2)=Y
	D SET^IBCNSP(START+2,OFFSET,"Admission Date: "_$P(VAIN(7),"^",2))
	D SET^IBCNSP(START+3,OFFSET,"          Ward: "_$P(VAIN(4),"^",2))
	D SET^IBCNSP(START+4,OFFSET,"     Specialty: "_$P(VAIN(3),"^",2))
	Q
2	; -- visit region for  outpatient care
	S IBOE=$P(IBTRND,"^",4)
	D SET^IBCNSP(START+2,OFFSET,"    Visit Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P"))
	I +IBOE<1 D  Q
	.D SET^IBCNSP(START+3,OFFSET,"  No Outpatient Encounter Found") Q
	D SET^IBCNSP(START+3,OFFSET,"        Clinic: "_$P($G(^SC(+$P($G(^SCE(+IBOE,0)),"^",4),0)),"^"))
	D SET^IBCNSP(START+4,OFFSET,"  Appt. Status: "_$$EXPAND^IBTRE(409.68,.12,$P($G(^SCE(+IBOE,0)),"^",12)))
	D SET^IBCNSP(START+5,OFFSET,"    Appt. Type: "_$$EXPAND^IBTRE(409.68,.1,$P($G(^SCE(+IBOE,0)),"^",10)))
	D SET^IBCNSP(START+6,OFFSET,"  Special Cond: "_$$ENCL(IBOE))
	Q
	;
3	; -- visit region for rx refill
	N PSONTALK,PSOTMP
	S PSONTALK=1 ;PSORXN=+$P(IBTRND,"^",8),PSOFILL=+$P(IBTRND,"^",10)
	S X=+$P(IBTRND,"^",8)_"^"_+$P(IBTRND,"^",10) D EN^PSOCPVW
	D SET^IBCNSP(START+2,OFFSET,"Prescription #: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),.01,"E")))
	D SET^IBCNSP(START+3,OFFSET,"   Refill Date: "_$G(PSOTMP(52.1,+$P(IBTRND,"^",10),.01,"E")))
	D SET^IBCNSP(START+4,OFFSET,"          Drug: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),6,"E")))
	D SET^IBCNSP(START+5,OFFSET,"      Quantity: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),7,"E")),8))
	D SET^IBCNSP(START+6,OFFSET,"   Days Supply: "_$J($G(PSOTMP(52,+$P(IBTRND,"^",8),8,"E")),8))
	D SET^IBCNSP(START+7,OFFSET,"          NDC#: "_$P($G(^PSDRUG(+$P($G(^PSRX(+$P(IBTRND,"^",8),0)),"^",6),2)),"^",4))
	D SET^IBCNSP(START+8,OFFSET,"     Physician: "_$G(PSOTMP(52,+$P(IBTRND,"^",8),4,"E")))
	Q
	;
4	; -- Visit region for prosthetics
	D 4^IBTRED01
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K VALMQUIT,IBTRN
	D CLEAN^VALM10,FULL^VALM1
	Q
	;
BLANK(LINE)	; -- Build blank line
	D SET^VALM10(.LINE,$J("",80))
	Q
	;
ETYP(IBTRN)	; -- Expand type of epidose and date
	N IBY S IBY=""
	S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G ETYPQ
	S IBETYPD=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	I IBETYPD="" G ETYPQ
	S IBY=$P(IBETYPD,"^")_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
ETYPQ	Q IBY
	;
ENCL(IBOE)	; -- output format of classifications
	N I,X,IBCL,IBCL1 S IBCL=""
	I '$G(IBOE) G ENCLQ
	S IBCL1=$$ENCL^IBAMTS2(+IBOE)
	F I=1:1:4 S X=$P(IBCL1,"^",I) S:X IBCL=IBCL_$S(I=1:"AO",I=2:"SC",I=3:"IR",I=4:"EC",1:"")_"  "
ENCLQ	Q IBCL

IBTRED0
IBTRED0	;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT. ; 01-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
	D CLIN,BILL,PRE
	Q
	;
CLIN	; -- clinical data region
	N OFFSET,START,IBICD
	S START=7,OFFSET=2
	;
CLIN1	N IBETYP S IBETYP=$$TRTP^IBTRE1(IBTRN) I 'IBETYP!(IBETYP>2) Q
	D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
	I "12"[IBETYP D @IBETYP
	Q
	;
1	; -- inpatient clinical data
	;D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(VAIN(2)),"^",2),1,15))
	D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($$APROV^IBTRE6(IBTRN),1,15))
	D SET^IBCNSP(START+2,OFFSET,"Admitting Diag: "_$E($$ADMDIAG^IBTRE6(IBTRN),1,23))
	D SET^IBCNSP(START+3,OFFSET,"  Primary Diag: "_$E($$PDIAG^IBTRE6(IBTRN),1,23))
	D LISTP^IBTRE6(IBTRN,.IBICD)
	D SET^IBCNSP(START+4,OFFSET," 1st Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(1)),1),1,23))
	D SET^IBCNSP(START+5,OFFSET," 2nd Procedure: "_$E($$PROC^IBTRE6(+$G(IBICD(2)),1),1,23))
	Q
	;
2	; -- outpatient clinic data
	S IBOE=$P(IBTRND,"^",4)
	I +IBOE<1 D SET^IBCNSP(START+1,OFFSET,"  No Outpatient Encounter Found") Q
	N SDDXY,SDPRY D SET^SDCO3(+IBOE) S IBPCNT=SDCNT D SET^SDCO4(IBOE) S IBDCNT=SDCNT
	D SET^IBCNSP(START+1,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(1)),"^",2),0)),"^"),1,23)) ;sdd(409.44
	D SET^IBCNSP(START+2,OFFSET,"      Provider: "_$E($P($G(^VA(200,+$P($G(SDPRY(2)),"^",2),0)),"^"),1,23)) ;sdd(409.44
	D SET^IBCNSP(START+3,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(1)),"^",2),1),1,23)) ;sdd(409.43
	D SET^IBCNSP(START+4,OFFSET,"     Diagnosis: "_$E($$DIAG^IBTRE6(+$P($G(SDDXY(2)),"^",2),1),1,23)) ;sdd(409.43
	D SET^IBCNSP(START+5,OFFSET,"  Special Cond: "_$$ENCL^IBTRED(IBOE))
	Q
	;
BILL	; -- billing information region
	N OFFSET,START
	S START=15,OFFSET=2
	S IBDGCR=$G(^DGCR(399,+$P(IBTRND,"^",11),0)),IBDGCRU1=$G(^("U1"))
	S IBAMNT=$$BILLD^IBTRED1(IBTRN)
	D SET^IBCNSP(START,OFFSET+20," Billing Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"    Episode Billable: "_$S(+$P(IBTRND,"^",19):"NO",1:"YES"))
	D SET^IBCNSP(START+2,OFFSET," Non-Billable Reason: "_$E($P($G(^IBE(356.8,+$P(IBTRND,"^",19),0)),"^"),1,20))
	D SET^IBCNSP(START+3,OFFSET,"      Next Bill Date: "_$$DAT1^IBOUTL($P(IBTRND,"^",17)))
	D SET^IBCNSP(START+4,OFFSET,"Work. Comp/OWCP/Tort: "_$E($$EXPAND^IBTRE(356,.12,$P(IBTRND,"^",12)),1,14))
	D SET^IBCNSP(START+5,OFFSET,"        Initial Bill: "_$P(IBDGCR,"^"))
	D SET^IBCNSP(START+6,OFFSET,"         Bill Status: "_$E($$EXPAND^IBTRE(399,.13,$P(IBDGCR,"^",13)),1,14))
	I +$P(IBTRND,"^",19) D SET^IBCNSP(START+7,OFFSET," Additional Comment: "_$E($P(IBTRND1,"^",8),1,60))
	D BILL1
	Q
	;
BILL1	; -- other side of billing info
	N OFFSET,START
	S START=15,OFFSET=45
	D SET^IBCNSP(START+1,OFFSET,"       Total Charges: $ "_$J($P(IBAMNT,"^"),8))
	D SET^IBCNSP(START+2,OFFSET,"Estimated Recv (Pri): $ "_$J($P(IBTRND,"^",21),8))
	D SET^IBCNSP(START+3,OFFSET,"Estimated Recv (Sec): $ "_$J($P(IBTRND,"^",22),8))
	D SET^IBCNSP(START+4,OFFSET,"Estimated Recv (ter): $ "_$J($P(IBTRND,"^",23),8))
	D SET^IBCNSP(START+5,OFFSET,"  Means Test Charges: $ "_$J($P(IBTRND,"^",28),8))
	D SET^IBCNSP(START+6,OFFSET,"         Amount Paid: $ "_$J($P(IBAMNT,"^",2),8))
	Q
	;
PRE	; -- pre-certification region
	N OFFSET,START,IBTRC,IBTRCD
	;S START=15,OFFSET=45
	S START=1,OFFSET=45
	D SET^IBCNSP(START,OFFSET," Treatment Authorization Info ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"   Authorization Number: "_$$PRECRT^IBTRC1(IBTRN))
	D SET^IBCNSP(START+2,OFFSET,"      No. Days Approved: "_$J($$DAY^IBTRE(IBTRN),3))
	D SET^IBCNSP(START+3,OFFSET,"Second Opinion Required: "_$$EXPAND^IBTRE(356,.14,$P(IBTRND,"^",14)))
	D SET^IBCNSP(START+4,OFFSET,"Second Opinion Obtained: "_$$EXPAND^IBTRE(356,.15,$P(IBTRND,"^",15)))
	Q
	;
SPCOND(IBTRN)	; -- see if sc or other special condition for patient
	; -- if inpt. look in ptf. if opt look opt encounter file
	;
	Q ""

IBTRED01
IBTRED01	;ALB/AAS - EXPAND/EDIT CLAIMS TRACKING ENTRY - CONT; 01-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$G(IBTRN)!($G(IORVON)="") G ^IBTRED
	D UR,REVIEW,SC
	Q
REVIEW	; -- List Reviews done
	N OFFSET,START,IBTRV,IDT,IBTRVD,IBTRTP
	S START=24,OFFSET=2,IBLCNT=0
	D SET^IBCNSP(START,OFFSET," Hospital Reviews Entered ",IORVON,IORVOFF)
	S IDT="" F  S IDT=$O(^IBT(356.1,"ATIDT",IBTRN,IDT)) Q:'IDT  S IBTRV="" F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IDT,IBTRV)) Q:'IBTRV  D
	.S IBLCNT=$G(IBLCNT)+1
	.S IBTRVD=$G(^IBT(356.1,IBTRV,0))
	.S IBTRTP=$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")
	.;D SET^IBCNSP(START+IBLCNT,OFFSET,$J(IBLCNT,2)_".  "_$E(IBTRTP_"                        ",1,28)_"  on  "_$E($$DAT1^IBOUTL($P(IBTRVD,"^"),"2P")_"  ",1,8)_"  Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)))
	.S IBTEXT=$E(IBTRTP_"  Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21))_"                                ",1,50)
	.D SET^IBCNSP(START+IBLCNT,OFFSET,$J(IBLCNT,2)_".  "_IBTEXT_"  on  "_$$DAT1^IBOUTL($P(IBTRVD,"^"),"2P"))
	.Q
	D COMM
	Q
COMM	; -- List Communication Entries
	N OFFSET,START,IDT,IBTRCD,IBCNT
	S START=26+$G(IBLCNT),OFFSET=2
	D SET^IBCNSP(START,OFFSET," Insurance Reviews Entered ",IORVON,IORVOFF)
	S IDT="" F  S IDT=$O(^IBT(356.2,"ATIDT",IBTRN,IDT)) Q:'IDT  S IBTRC="" F  S IBTRC=$O(^IBT(356.2,"ATIDT",IBTRN,IDT,IBTRC)) Q:'IBTRC  D
	.S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1
	.S IBTRCD=$G(^IBT(356.2,IBTRC,0))
	.S IBTEXT=$E($$EXPAND^IBTRE(356.2,.04,$P(IBTRCD,"^",4))_" Contact  "_$$EXPAND^IBTRE(356.2,.11,$P(IBTRCD,"^",11))_"                                         ",1,50)
	.D SET^IBCNSP(START+IBCNT,OFFSET,$J(IBCNT,2)_".  "_IBTEXT_"  on  "_$$DAT1^IBOUTL(+IBTRCD,"2P"))
	.Q
	Q
	;
SC	; -- Show eligibility/sc conditions
	N OFFSET,START,IDT,IBTRCD,IBCNT,I1,I2,I3
	S START=28+$G(IBLCNT),OFFSET=2
SC1	D SET^IBCNSP(START,OFFSET," Service Connected Conditions: ",IORVON,IORVOFF)
	D ELIG^VADPT
	S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1,I3=0
	;
	D SET^IBCNSP(START+IBCNT,OFFSET,"Service Connected: "_$S('$G(VAEL(3)):"NO",1:$P(VAEL(3),"^",2)_"%"))
	;
	F I=0:0 S I=$O(^DPT(DFN,.372,I)) Q:'I  D
	.S I1=^DPT(DFN,.372,I,0)
	.Q:'$P(I1,"^",3)
	.S I2=$G(^DIC(31,+I1,0))
	.S:$P(I2,"^",4)'="" I2=$P(I2,"^",4)
	.S I2=$P(I2,"^")
	.S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1
	.D SET^IBCNSP(START+IBCNT,OFFSET,$J(IBCNT-1,2)_".  "_$E(I2_"                                               ",1,45)_$J($P(I1,"^",2),3)_"%")
	.S I3=I3+1
	.Q
	I 'I3 S IBLCNT=$G(IBLCNT)+1,IBCNT=$G(IBCNT)+1 D SET^IBCNSP(START+IBCNT,OFFSET,$S('$O(^DPT(DFN,.372,0)):"NONE STATED",1:"NO SC DISABILITIES LISTED")) S I3=1
SCQ	Q
	;
UR	; -- ur information region
	N OFFSET,START
	S START=7,OFFSET=51
	D SET^IBCNSP(START,OFFSET," Review Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"  Insurance Claim: "_$$EXPAND^IBTRE(356,.24,$P(IBTRND,"^",24)))
	D SET^IBCNSP(START+2,OFFSET,"   Follow-up Type: "_$$EXPAND^IBTRE(356,1.07,$P(IBTRND1,"^",7)))
	D SET^IBCNSP(START+3,OFFSET,"    Random Sample: "_$$EXPAND^IBTRE(356,.25,$P(IBTRND,"^",25)))
	D SET^IBCNSP(START+4,OFFSET,"Special Condition: "_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26)))
	D SET^IBCNSP(START+5,OFFSET,"   Local Addition: "_$$EXPAND^IBTRE(356,.27,$P(IBTRND,"^",27)))
	D SET^IBCNSP(START+6,OFFSET,"    Ins. Reviewer: "_$$EXPAND^IBTRE(356,1.06,$P(IBTRND1,"^",6)))
	D SET^IBCNSP(START+7,OFFSET,"Hospital Reviewer: "_$$EXPAND^IBTRE(356,1.05,$P(IBTRND1,"^",5)))
	Q
	;
4	; -- Visit region for prosthetics
	N IBDA,IBRMPR S IBDA=$P(IBTRND,"^",9) D PRODATA^IBTUTL1(IBDA)
	D SET^IBCNSP(START+2,OFFSET,"          Item: "_$G(IBRMPR(660,+IBDA,4,"E")))
	D SET^IBCNSP(START+3,OFFSET,"   Description: "_$G(IBRMPR(660,+IBDA,24,"E")))
	D SET^IBCNSP(START+4,OFFSET,"      Quantity: "_$J($G(IBRMPR(660,+IBDA,5,"E")),$L($G(IBRMPR(660,+IBDA,14,"E")))))
	D SET^IBCNSP(START+5,OFFSET,"    Total Cost: $"_$G(IBRMPR(660,+IBDA,14,"E")))
	D SET^IBCNSP(START+6,OFFSET,"   Transaction: "_$G(IBRMPR(660,+IBDA,2,"E")))
	D SET^IBCNSP(START+7,OFFSET,"        Vendor: "_$G(IBRMPR(660,+IBDA,7,"E")))
	D SET^IBCNSP(START+8,OFFSET,"        Source: "_$G(IBRMPR(660,+IBDA,12,"E")))
	D SET^IBCNSP(START+9,OFFSET," Delivery Date: "_$G(IBRMPR(660,+IBDA,10,"E")))
	D SET^IBCNSP(START+10,OFFSET,"       Remarks: "_$G(IBRMPR(660,+IBDA,16,"E")))
	D SET^IBCNSP(START+11,OFFSET," Return Status: "_$G(IBRMPR(660,+IBDA,17,"E")))
	Q

IBTRED1
IBTRED1	;ALB/AAS - CLAIMS TRACKING EDIT ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRE
	;
NX(IBTMPNM)	; -- edit next template
	N IBXX,VALMY,IBTRV,IBTRC
	D EN^VALM(IBTMPNM)
	I '$D(IBFASTXT) D BLD^IBTRED
	S VALMBCK="R"
	Q
	;
EDIT(IBTEMP,BLD)	; -- edit entry point for claims tracking
	; -- Input   IBTEMP = template name or dr string
	;               BLD = any non-zero value if calling routine is doing own
	;                      rebuild
	;
	D FULL^VALM1 W !
	L +^IBT(356,+IBTRN):5 I '$T D LOCKED^IBTRCD1 G EDITQ
	D SAVE
	S DIE="^IBT(356,",DA=IBTRN
	S DR=IBTEMP
	D ^DIE K DA,DR,DIC,DIE
	D COMP
	I IBDIF=1 D UPDATE,BLD^IBTRED:'$G(BLD)
	L -^IBT(356,+IBTRN)
EDITQ	K ^TMP($J,"IBT")
	S VALMBCK="R"
	Q
	;
SAVE	; -- Save the global before editing
	K ^TMP($J,"IBT")
	S ^TMP($J,"IBT",356,IBTRN,0)=$G(^IBT(356,IBTRN,0))
	S ^TMP($J,"IBT",356,IBTRN,1)=$G(^IBT(356,IBTRN,1))
	Q
	;
COMP	; -- Compare before editing with globals
	S IBDIF=0
	I $G(^IBT(356,IBTRN,0))'=$G(^TMP($J,"IBT",356,IBTRN,0)) S IBDIF=1
	I $G(^IBT(356,IBTRN,1))'=$G(^TMP($J,"IBT",356,IBTRN,1)) S IBDIF=1
	Q
	;
UPDATE	; -- enter date and user if editing has taken place
	;    entry locked by edit, locks not needed here
	S DIE="^IBT(356,",DA=IBTRN
	S DR="1.03///NOW;1.04////"_DUZ
	D ^DIE K DA,DR,DIC,DIE
	Q
	;
DICS(Y)	; -- called by input transform and screen logic for type of diagnois
	N IBY
	S IBY=0
	I Y=2 S IBY=1 G DICSQ
	I Y=1 I '$D(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),1))!($O(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),1,0))=DA) S IBY=1
	I Y=3 I '$D(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),3))!($O(^IBT(356.9,"ATP",+$P($G(^IBT(356.9,DA,0)),U,2),3,0))=DA) S IBY=1
	;I Y=3 I '$D(^IBT(356.9,"ADG",+$P($G(^IBT(356.9,DA,0)),U,2),+^(0)))!($O(^IBT(356.9,"ADG",+$P($G(^IBT(356.9,DA,0)),U,2),+^(0),0))=DA) S IBY=1
DICSQ	Q IBY
	;
BILLD(IBTRN)	; -- compute total amount billed and received for this visit
	; -- output total amount billed (minus offset) ^ total amount recieved
	N X,Y,Z,IBY,IBZ
	S (IBY,IBZ)=0
	I '$G(IBTRN) G BILLDQ
	;
	S (X,Y,Z)=0 F  S X=$O(^IBT(356.399,"ACB",IBTRN,X)) Q:X=""  D COMPUT
	;
	I 'IBY,'IBZ D  ;look to 399 if no ct pointer
	.N DGPM,IBEVDT
	.S IBEVDT=$P(^IBT(356,+IBTRN,0),"^",6)
	.;inpatient
	.S DGPM=$P(^IBT(356,+IBTRN,0),"^",5) I DGPM D
	..S (X,Y,Z)=0 F  S X=$O(^DGCR(399,"D",IBEVDT,X)) Q:'X  D COMPUT
	.;
	.;outpatient
	.I $P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),"^",18),0)),"^",8)=2 D
	..S IBEVDT=+$P(IBEVDT,"."),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	..S (X,Y,Z)=0 F  S X=$O(^DGCR(399,"AOPV",DFN,IBEVDT,X)) Q:'X  D COMPUT
	..;I IBY S IBY=IBY_" (May include multiple visit dates)"
	;
BILLDQ	I 'IBY,$P(^IBT(356,+IBTRN,0),"^",29) S IBY=$P(^IBT(356,+IBTRN,0),"^",29)_" (Estimated)"
	Q $G(IBY)_"^"_+$G(IBZ)
	;
COMPUT	; -- add up the numbers
	Q:$P($G(^DGCR(399,X,"S")),"^",17)
	S Y=$P($G(^DGCR(399,X,"U1")),"^",1)-$P($G(^("U1")),"^",2)
	I Y>0 S IBY=IBY+Y
	S Z=$$TPR^PRCAFN(X)
	I Z>0 S IBZ=IBZ+Y
	Q

IBTRED2
IBTRED2	;ALB/AAS - CLAIMS TRACKING EDIT BILLING INFORMATION; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$D(DT) D DT^DICRW
	I '$D(IOF) D HOME^%ZIS
	W @IOF,?15,"Assign Reason Not Billable to Claims Tracking Entry",!!
	S IBQUIT=0
	;
PAT	; -- select patient
	D END Q:IBQUIT
	D PAT^IBCNSM I '$G(DFN)!($D(VALMQUIT)) G END
	;
CT	; -- select claims tracking entry
	D TRAC^IBTRV
	I +IBY<1 D ADD G:IBQUIT END
	I '$G(IBTRN) G PAT
	D EDIT("[IBT BILLING INFO]")
	W !!
	G PAT
	;
END	K DFN,VALMQUIT,IBY,IBTRN
	Q
	;
EDIT(IBTEMP)	; -- edit without list manager
	; -- Input   IBTEMP = template name or dr string
	;
	N X,Y,I,J,DA,DR,DIC,DIE
	G:$G(IBTRN)<1 EDITQ
	L +^IBT(356,+IBTRN):5 I '$T D LOCKED^IBTRCD1 G EDITQ
	D SAVE^IBTRED1
	S DIE="^IBT(356,",DA=IBTRN
	S DR=IBTEMP
	D ^DIE
	D COMP^IBTRED1
	I IBDIF=1 D UPDATE^IBTRED1
	L -^IBT(356,+IBTRN)
EDITQ	K ^TMP($J,"IBT")
	Q
	;
ADD	; -- ask if want to add a new tracking id
	N DIR,IBOK K IBTRN
	G:'$D(DFN) ADDQ
	W !
	S DIR(0)="Y",DIR("A")="Add New Claims Tracking entry",DIR("B")="NO"
	S DIR("?")="Enter 'YES' if you wish to add a new claims tracking entry so that it can be assigned a reason not billable, answer 'NO' if you do not wish to add a new entry."
	D ^DIR K DIR S IBOK=Y
	G:'IBOK ADDQ
	;
	; -- set up required variable before call
	S IBTASS=1
	S IBTBDT=$$FMADD^XLFDT(DT,-720),IBTEDT=$$FMADD^XLFDT(DT,+45)
	W !
	D TEST^IBTRE2
ADDQ	W ! Q

IBTRKR
IBTRKR	;ALB/AAS - CLAIMS TRACKER - AUTO-ENROLLER ; 4-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
INP	; -- Inpatient Tracker
	;    called by ibamtd  from DGPM MOVEMENT EVENTS
	;
	W:'$D(IB20) !,"Updating Claims Tracking"
	;
	N X,Y,DA,DR,DIE,DIC,IBTRN,IBRANDOM,IBTRKR,IBMVTYP,IBMVA,IBMVP,IBMVDA
	S IBTRKR=$G(^IBE(350.9,1,6))
	G:'$P(IBTRKR,"^",2) INPQ ; tracking off
	I '$D(VAIN(1)) D INP^VADPT
	;
	S IBMVTP=$S($P(DGPMA,"^",2):$P(DGPMA,"^",2),1:$P(DGPMP,"^",2)) ;movement type
	S IBMVAD=$S(DGPMA'="":$P(DGPMA,"^",14),1:$P(DGPMP,"^",14)) ; admission movement
	Q:'IBMVTP!('IBMVAD)
	;
	I IBMVTP=1 D 1 ; is add/edit admission
	I IBMVTP=3 D 3
	I IBMVTP=6 D 6
INPQ	I $G(IBTRN) W:'$D(IB20) ".... Entry ",$S($G(IBNEW):"Added.",1:"Edited."),!
	Q
1	;
ADMIT	; -- process admission movements
	Q:IBMVTP'=1
	;
	I DGPMA="" D  G ADMITQ ; is deleted admission
	.S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0)) Q:'IBTRN
	.;inactivate record
	.S DA=IBTRN,DR=".2////0",DIE="^IBT(356,"
	.D ^DIE K DA,DR,DIC,DIE
	.Q
	;
	I DFN=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBMVAD,0)),0)),"^",2) D  G ADMITQ ;see if already there
	.; -- if different dates or inactive, update
	.S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0))
	.I $P($G(^IBT(356,+IBTRN,0)),U,6)'=+$E(+DGPMA,1,12)!('$P($G(^IBT(356,+IBTRN,0)),U,20)) D
	..N DA,DR,DIC,DIE
	..S DA=IBTRN,DIE="^IBT(356,",DR=".06////"_+$E(+DGPMA,1,12)_";.2////1"
	..D ^DIE
	;
	I +$G(VAIN(3)) S IBRANDOM=$$RANDOM^IBTRKR1(+VAIN(3))
	;
	I $P(IBTRKR,"^",2)=2 D ADM^IBTUTL(IBMVAD,+$E(+DGPMA,1,12),$G(IBRANDOM),$P(DGPMA,"^",27))
	I $P(IBTRKR,"^",2)=1,($$INSURED^IBCNS1(DFN,+DGPMA)!($G(IBRANDOM))) D ADM^IBTUTL(IBMVAD,+$E(+DGPMA,1,12),$G(IBRANDOM),$P(DGPMA,"^",27))
ADMITQ	Q
	;
3	; -- if discharge and is tracked, set up discharge reviews
	;I IBMVTP=3 D
	;.S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0)) Q:'IBTRN
	;.I '$P($G(^IBT(356,+IBTRN,0)),"^",16) Q  ;hospital ur not required
	;.I $O(^IBT(356,"AD",+IBMVAD,0)) D PRE^IBTUTL2($E(+DGPMA,1,7),IBTRN,30)
DSQ	Q
	;
6	; -- specialty change
	I DGPMA="" G SPQ ;is deleted movement, don't worry
	I +DGPMA<$$FMADD^XLFDT(+DT,-7) G SPQ ; past spec change don't worry
	;
	N IBTSA,IBTSP,IBTRN
	S IBTSA=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$P(DGPMA,"^",9),0)),"^",2),0)),"^",3)
	;
	I DGPMP'="" D  ;is changed
	.S IBTSP=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+$P(DGPMP,"^",9),0)),"^",2),0)),"^",3)
	.Q
	;
	I DGPMP="" D
	.N IBDT S IBDT=9999999.9999999-$P(DGPMA,"^")
	.S IBTSP=$P($G(^DIC(45.7,+$O(^(+$O(^DGPM("ATS",+DFN,+IBMVAD,+IBDT)),0)),0)),"^",2)
	.S IBTSP=$P($G(^DIC(42.4,+IBTSP,0)),"^",3)
	.Q
	;
	G:IBTSA=IBTSP SPQ ; is not a change in major bed section
	;
	; -- add hr and ir if it is being tracked
	S IBTRN=$O(^IBT(356,"AD",+IBMVAD,0))
	;
	I $O(^IBT(356.1,"C",+IBTRN,0)) D  ; tracked as a hosp. review
	.I $$ALREADY(356.1,+DGPMA) Q
	.D PRE^IBTUTL2($E(+DGPMA,1,7),IBTRN,30)
	.I $G(IBTRV) S DA=IBTRV,DIE="^IBT(356.1,",DR="11///Entry created by major change in specialty." D ^DIE K DA,DR,DIC,DIE
	.Q
	;
	I $O(^IBT(356.2,"C",+IBTRN,0)) D  ;tracked as an ins. review
	.I $$ALREADY(356.2,+DGPMA) Q
	.I $P($G(^IBT(356,+IBTRN,0)),"^",24) D COM^IBTUTL3($E(+DGPMA,1,12),IBTRN,30)
	.I $G(IBTRC) S DA=IBTRC,DIE="^IBT(356.2,",DR="11///Entry created by major change in specialty." D ^DIE K DA,DR,DIC,DIE
	.Q
SPQ	Q
	;
ALREADY(FILE,DATE)	; -- see if already is review for date
	N X,Y,IBX
	S IBX=0
	S X=$P(DATE,".")+.25
	S Y=$O(^IBT(FILE,"ATIDT",+IBTRN,-X)) S Y=-Y I Y,$P(Y,".")=$P(DATE,".") S IBX=1
	Q IBX
	;
NIGHTLY	; -- nightly job for claims tracking, called by IBAMTC
	;
	D UPDATE^IBTRKR1 ; update claims tracking site parameters (random sampler)
	D ^IBTRKR2 ;       add scheduled admissions to tracking
	D ^IBTRKR3 ;       add rx refill to outpatient encounters
	D ^IBTRKR4 ;       add outpatient encounters to tracking
	D ^IBTRKR5 ;       add outpatient prosthetics item to tracking
	Q

IBTRKR1
IBTRKR1	;ALB/AAS - CLAIMS TRACKER - AUTO-ENROLLER ; 4-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
RANDOM(IBSPEC)	; -- see if random sample
	; -- input  = treating specialty from 45.7 (piece 9 of dgpma)
	;    output = 1 if random sample
	;             0 if not random sample
	;
	N X,Y,RANDOM,IBTRKR,SVC
	S RANDOM=0
	I '$G(IBSPEC) G RQ
	S IBTRKR=$G(^IBE(350.9,1,6))
	I $$FMDIFF^XLFDT(DT,$P(IBTRKR,"^",7))>7 D UP1
	S SVC=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+IBSPEC,0)),"^",2),0)),"^",3)
	I SVC="" G RQ
	S X=$S(SVC="M":8,SVC="S":13,SVC="P":18,1:0)
	S NAME=$P($G(^DIC(42.4,+$P($G(^DIC(45.7,+IBSPEC,0)),"^",2),0)),"^")
	;
	; -- don't count drug and alcohol, substance abuse or intermediate specialties
	I NAME["ALCOHOL"!(NAME["DRUG")!(NAME["SUBSTANCE")!(NAME["ABUSE")!(NAME["INTERMEDIATE") G RQ
	;
	I X S RANDOM=$$PROC(X)
	;
RQ	Q RANDOM
	;
PROC(X)	; -- process random sample, x= Service="M":8,Service="S":13,Serv="P":18
	N SAMPLE,SAMPDT,COUNT,RANDNUM,RANDOM
	S RANDOM=0
	G:'$G(X) PQ
	G:$S(X=8:0,X=13:0,X=18:0,1:1) PQ
	S SAMPLE=$P(IBTRKR,"^",X) ;     sample size
	;I SAMPLE<1 S SAMPLE=1 ;         default sample size = 1
	S SAMPTD=+$P(IBTRKR,"^",X+3) ;  samples to date
	S COUNT=$P(IBTRKR,"^",X+4)+1 ;  increment service counter
	S $P(^IBE(350.9,1,6),"^",X+4)=COUNT
	I SAMPLE'>SAMPTD G PQ ;         sample size already met
	S RANDNUM=$P(IBTRKR,"^",X+2) ;  get random number
	I RANDNUM<1 S RANDNUM=3 ;       default randon number
	I COUNT#RANDNUM=0 S RANDOM=1 ;  if count mod random number = 0 then is random sample
	I RANDOM S $P(^IBE(350.9,1,6),"^",X+3)=SAMPTD+1
PQ	Q RANDOM
	;
UPDATE	; -- weekly update of random sampler called from nightly job
	;
	I $$DOW^XLFDT(DT,1)'=0 Q  ; run on sunday night only
	;
UP1	; -- enter here to force update, nightly job didn't update in over 7 days
	N IBX,IBTRKR,SAMPLE,COUNT,RANDNUM
	S $P(^IBE(350.9,1,6),"^",7)=DT
	S IBTRKR=$G(^IBE(350.9,1,6))
	F IBX=8,13,18 D
	.S SAMPLE=$P(IBTRKR,"^",IBX) ;   get sample size
	.I SAMPLE<1 S SAMPLE=1 ;       default = 1
	.S ADMNUM=$P(IBTRKR,"^",IBX+1) ; get ave. number of admissions
	.I ADMNUM<5 S ADMNUM=5 ;       default = 5
	.F  S RANDOM=$R(ADMNUM/SAMPLE)+1 I RANDOM>0,RANDOM'>ADMNUM Q
	.S $P(^IBE(350.9,1,6),"^",IBX,IBX+4)=SAMPLE_"^"_ADMNUM_"^"_RANDOM_"^0^0"
	Q
	;
CLEAR	; -- Clear random sampler
	;
	N IBX
	S $P(^IBE(350.9,1,6),"^",7)=DT
	F IBX=8,13,18 S $P(^IBE(350.9,1,6),"^",IBX,IBX+4)="2^5^1^0^0"

IBTRKR2
IBTRKR2	;ALB/AAS - ADD/TRACK SCHEDULED ADMISSION ; 9-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- add scheduled admissions to claims tracking file
	N I,J,X,Y,IBTRKR,IBI,IBJ,DFN,IBDATA
	S IBTRKR=$G(^IBE(350.9,1,6))
	G:'$P(IBTRKR,"^",2) ENQ ; inpatient tracking off
	S:'$G(IBTSBDT) IBTSBDT=$$FMADD^XLFDT(DT,-3)-.1
	S:'$G(IBTSEDT) IBTSEDT=$$FMADD^XLFDT(DT,7)+.9
	I IBTSBDT<+IBTRKR S IBTSBDT=+IBTRKR-.1 ; start date can't be before ct start date
	S IBI=IBTSBDT-.0001 F  S IBI=$O(^DGS(41.1,"C",IBI)) Q:'IBI!(IBI>IBTSEDT)  S IBJ="" F  S IBJ=$O(^DGS(41.1,"C",IBI,IBJ)) Q:'IBJ  D
	.S IBDATA=$G(^DGS(41.1,IBJ,0))
	.S DFN=+IBDATA
	.Q:'DFN  ;  no patient
	.Q:$P(IBDATA,"^",13)  ; canceled
	.Q:$P(IBDATA,"^",17)  ; already admitted
	.;if not in ct add
	.S IBTRN=$O(^IBT(356,"ASCH",IBJ,0))
	.I 'IBTRN D  Q
	..I $P(IBTRKR,"^",2)=2 D SCH^IBTUTL2(DFN,IBI,IBJ) Q
	..I $P(IBTRKR,"^",2)=1,$$INSURED^IBCNS1(DFN,+IBI) D SCH^IBTUTL2(DFN,IBI,IBJ)
	..Q
	.; -- if inactive re-activate
	.I '$P(^IBT(356,+IBTRN,0),"^",20) D
	..N X,Y,I,J,DA,DR,DIE,DIC
	..S DA=IBTRN,DR=".2////1",DIE="^IBT(356," D ^DIE
	.Q
	;
ENQ	K IBTSEDT,IBTSBDT
	Q
	;
SCH(DGPMCA)	; -- is this admission movement a scheduled admission
	; -- output scheduled admission pointer
	;
	N IBTSA S IBTSA=0
	I '$G(DGPMCA) G SCHQ
	S IBTSA=+$O(^DGS(41.1,"AMVT",DGPMCA,0))
SCHQ	Q IBTSA

IBTRKR3
IBTRKR3	;ALB/AAS - CLAIMS TRACKING - ADD/TRACK RX FILLS ; 13-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- entry point for nightly background job
	N IBTSBDT,IBTSEDT
	S IBTSBDT=$$FMADD^XLFDT(DT,-14)-.1
	S IBTSEDT=$$FMADD^XLFDT(DT,-7)+.9
	D EN1
	Q
	;
EN	; -- entry point to ask date range
	N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK,IBMESS
	S IBTALK=1
	I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prescription Refills is currrently turned off." G ENQ
	W !!!,"Select the Date Range of Rx Refills to Add to Claims Tracking.",!
	D DATE^IBOUTL
	I IBBDT<1!(IBEDT<1) G ENQ
	S IBTSBDT=IBBDT,IBTSEDT=IBEDT
	;
	; -- check selected dates
	S IBTRKR=$G(^IBE(350.9,1,6))
	; start date can't be before parameters
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
	; -- end date into future
	I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
	;
	W !!!,"I'm going to automatically queue this off and send you a"
	W !,"mail message when complete.",!
	S ZTIO="",ZTRTN="EN1^IBTRKR3",ZTSAVE("IB*")="",ZTDESC="IB - Add Rx Refills to Claims Tracking"
	D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
ENQ	K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
	D HOME^%ZIS
	Q
	;
EN1	; -- add rx refills to claims tracking file
	N I,J,X,Y,IBTRKR,IBDT,IBRXN,IBFILL,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2
	;
	; -- check parameters
	S IBTRKR=$G(^IBE(350.9,1,6))
	G:'$P(IBTRKR,"^",4) EN1Q ; quit if rx tracking off
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
	;
	; -- users can queue into future, make sure dates not after date run
	I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
	;
	S IBRXTYP=$O(^IBE(356.6,"AC",4,0)) ; event type pointer for rx billing
	;
	; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
	S (IBCNT,IBCNT1,IBCNT2)=0
	S IBDT=IBTSBDT-.0001
	F  S IBDT=$O(^PSRX("AD",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  S IBRXN="" F  S IBRXN=$O(^PSRX("AD",IBDT,IBRXN)) Q:'IBRXN  S IBFILL="" F  S IBFILL=$O(^PSRX("AD",IBDT,IBRXN,IBFILL)) Q:IBFILL=""  D RXCHK
	;
	I $G(IBTALK) D BULL^IBTRKR31
EN1Q	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
RXCHK	; -- check and add rx
	S IBCNT=IBCNT+1
	I IBFILL<1 G RXCHKQ ;       original fill
	I IBDT>(DT+.24) G RXCHKQ ;  future fill
	I '$D(ZTQUEUED),($G(IBTALK)) W "."
	;
	S IBRXDATA=$G(^PSRX(IBRXN,0)),IBRXSTAT=$P(IBRXDATA,"^",15)
	S DFN=$P(IBRXDATA,"^",2)
	;I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") G RXCHKQ ;scheduled appointment on same day as fill date
	I $$BABCSC^IBEFUNC(DFN,$P(IBDT,".",1)) G RXCHKQ ; is billable clinic stop in encounter file for data (allows telephone stops on same day, but not others)
	;
	; -- not already in claims tracking
	I $O(^IBT(356,"ARXFL",IBRXN,IBFILL,0)) G RXCHKQ ; already in claims tracking
	;
	; -- see if tracking only insured and pt is insured
	I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G RXCHKQ ; patient not insure
	;
	; -- check rx status (not deleted)
	I IBRXSTAT=13 G RXCHKQ
	;
	; -- Version 6 and refill not released or returned to stock
	I +$G(^PS(59.7,1,49.99))'<6,'$P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",18) G RXCHKQ
	I $P($G(^PSRX(IBRXN,1,IBFILL,0)),"^",16) G RXCHKQ
	;
	; -- check drug (not investigational, supply, or over the counter drug
	S IBDRUG=$P(IBRXDATA,"^",6)
	S IBDEA=$P($G(^PSDRUG(+$P(IBRXDATA,"^",6),0)),"^",3)
	I IBDEA["I"!(IBDEA["S")!(IBDEA["9") G RXCHKQ ; investigational drug, supply or otc
	;
	; -- check sc status
	D ELIG^VADPT
	I VAEL(3),'$G(^PSRX(IBRXN,"IB")) S IBRMARK="NEEDS SC DETERMINATION"
	;
	; -- ok to add to tracking module
	D REFILL^IBTUTL1(DFN,IBRXTYP,IBDT,IBRXN,IBFILL,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
	I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
	I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
	K IBRMARK,VAEL,VA,IBDEA,IBDRUG,IBRXSTAT,IBRXDATA,DFN,X,Y
RXCHKQ	Q

IBTRKR31
IBTRKR31	;ALB/AAS - CLAIMS TRACKING - DBLCHK RX FILLS ; 13-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- Double check rx data routine
DBLCHK(IBTRN)	; -- double check rx before billing, input tracking id
	N IBX,IBFILL,IBFILLD,IBRXN,IBTRND,IBRMARK,IBRXSTAT,IBDEA,IBDRUG,IBRXDATA,X,Y
	S IBX=0
	S IBTRND=$G(^IBT(356,+IBTRN,0)) I IBTRND="" G DBLCHKQ
	S IBRXN=$P(IBTRND,"^",8),IBFILL=$P(IBTRND,"^",10)
	S IBFILLD=$G(^PSRX(+IBRXN,1,+IBFILL,0))
	;
	I IBFILL<1!(IBRXN<1) S IBRMARK="INVALID PRESCRIPTION ENTRY" G DBLCHKQ
	;
	S IBRXDATA=$G(^PSRX(IBRXN,0)),IBRXSTAT=$P(IBRXDATA,"^",15)
	S DFN=+$P(IBRXDATA,"^",2),IBDT=+IBFILLD
	I IBDT=$P($O(^DPT(DFN,"S",(IBDT-.00001))),".") S IBRMARK="REFILL ON VISIT DATE" G DBLCHKQ
	;
	; -- check rx status (not  deleted)
	I IBRXSTAT=13 S IBRMARK="PRESCRIPTION DELETED" G DBLCHKQ
	;
	; -- Version 6 and refill not released or returned to stock
	I +$G(^PS(59.7,1,49.99))'<6,'$P(IBFILLD,"^",18) S IBRMARK=4 G DBLCHKQ
	I $P(IBFILLD,"^",16) S IBRMARK="PRESCRIPTION NOT RELEASED" G DBLCHKQ
	;
	; -- check drug (not investigational, supply, or over the counter drug
	S IBDRUG=$P(IBRXDATA,"^",6)
	S IBDEA=$P($G(^PSDRUG(+$P(IBRXDATA,"^",6),0)),"^",3)
	I IBDEA["I"!(IBDEA["S")!(IBDEA["9") S IBRMARK="DRUG NOT BILLABLE" G DBLCHKQ ; investigational drug, supply or otc
	;
	S IBX=1
	;
DBLCHKQ	I $G(IBRMARK) D
	.S IBRMARK=$O(^IBE(356.8,"B",IBRMARK,0)) I 'IBRMARK S IBRMARK=999
	.N DA,DR,DIC,DIE
	.L +^IBT(356,+IBTRN):5 I '$T Q
	.S DA=IBTRN,DIE="^IBT(356,",DR=".19////"_IBRMARK
	.D ^DIE
	.L -^IBT(356,+IBTRN)
	Q IBX
	;
	;
BULL	; -- send bulletin
	;
	S XMSUB="Rx Refills added to Claims Tracking Complete"
	S IBT(1)="The process to automatically add Rx Refills has successfully completed."
	S IBT(1.1)=""
	S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
	S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
	I $D(IBMESS) S IBT(3.1)=IBMESS
	S IBT(4)=""
	S IBT(5)="  Total Rx fills checked: "_$G(IBCNT)
	S IBT(6)="Total NSC Rx fills Added: "_$G(IBCNT1)
	S IBT(7)=" Total SC Rx fills Added: "_$G(IBCNT2)
	S IBT(8)=""
	S IBT(9)="*The fills added as SC require determination and editing to be billed"
	D SEND
BULLQ	Q
	;
SEND	S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
	K XMY S XMN=0
	S XMY(DUZ)=""
	D ^XMD
	K X,Y,IBI,IBT,IBGRP,XMDUZ,XMTEXT,XMY,XMSUB
	Q

IBTRKR4
IBTRKR4	;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ; 13-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- entry point for nightly background job
	N IBTSBDT,IBTSEDT
	S IBTSBDT=$$FMADD^XLFDT(DT,-20)-.1
	S IBTSEDT=$$FMADD^XLFDT(DT,-2)-.9
	D EN1
	Q
	;
EN	; -- entry point to ask date range
	N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
	S IBTALK=1
	I '$P($G(^IBE(350.9,1,6)),"^",3) W !!,"I'm sorry, Tracking of Outpatient Encounters is currrently turned off." G ENQ
	W !!!,"Select the Date Range of Opt. Encounters to Add to Claims Tracking.",!
	D DATE^IBOUTL
	I IBBDT<1!(IBEDT<1) G ENQ
	S IBTSBDT=IBBDT,IBTSEDT=IBEDT
	; -- check selected dates
	S IBTRKR=$G(^IBE(350.9,1,6))
	; start date can't be before parameters
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
	; -- end date into future
	I IBTSEDT>$$FMADD^XLFDT(DT,-1) W !!,"I'll automatically change the end date to 1 day prior to the date queued to run."
	W !!!,"I'm going to automatically queue this off and send you a"
	W !,"mail message when complete.",!
	S ZTIO="",ZTRTN="EN1^IBTRKR4",ZTSAVE("IB*")="",ZTDESC="IB - Add Opt Encounters to Claims Tracking"
	D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
ENQ	K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
	D HOME^%ZIS
	Q
	;
EN1	; -- add outpatient encounters to claims tracking file
	N I,J,X,Y,IBTRKR,IBDT,DFN,IBOETA,IBCNT,IBCNT1,IBCNT2
	;
	; -- check parameters
	S IBTRKR=$G(^IBE(350.9,1,6))
	G:'$P(IBTRKR,"^",3) EN1Q ; quit if opt tracking off
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
	;
	; -- users can queue into future, make sure dates not after date run
	;I IBTSEDT>DT S IBTSEDT=DT
	I IBTSEDT>$$FMADD^XLFDT(DT,-1) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-1))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-1)
	;
	S IBOETYP=$O(^IBE(356.6,"AC",2,0)) ;event type pointer for opt encounters
	;
	; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
	S (IBCNT,IBCNT1,IBCNT2)=0
	S IBDT=IBTSBDT-.0001
	F  S IBDT=$O(^SCE("B",IBDT)) Q:'IBDT!(IBDT>(IBTSEDT+.9))  S IBOE="" F  S IBOE=$O(^SCE("B",IBDT,IBOE)) Q:'IBOE  D OPCHK^IBTRKR41
	;
	I $G(IBTALK) D BULL^IBTRKR41
EN1Q	I $D(ZTQUEUED) S ZTREQ="@"
	Q

IBTRKR41
IBTRKR41	;ALB/AAS - CLAIMS TRACKING - ADD/TRACK OUTPATIENT ENCOUNTERS ; 13-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
OPCHK	; -- check and add rx
	S IBCNT=IBCNT+1
	K IBRMARK
	I '$D(ZTQUEUED),($G(IBTALK)) W "."
	;
	S IBOEDATA=$G(^SCE(IBOE,0)),IBOESTAT=$P(IBOEDATA,"^",15)
	S DFN=$P(IBOEDATA,"^",2)
	I 'DFN G OPCHKQ
	I $P(IBOEDATA,"^",5) S IBVSIT=$P(IBOEDATA,"^",5)
	;
	; -- not already in claims tracking
	I $O(^IBT(356,"AENC",+DFN,+IBOE,0)) G OPCHKQ ; already in claims tracking
	I $O(^IBT(356,"APTY",DFN,IBOETYP,IBDT,0)) G OPCHKQ ; already visit for same date time
	;
	; -- see if tracking only insured and pt is insured
	I $P(IBTRKR,"^",4)=1,'$$INSURED^IBCNS1(DFN,IBDT) G OPCHKQ ; patient not insure
	;
	; -- check visit status (checked in/out, inpatient, canceled, etc)
	I '$P(IBOEDATA,"^",7) G OPCHKQ ; check out not complete
	I $P($G(^DPT(DFN,"S",IBDT,0)),"^",2)'="" G OPCHKQ ;is canceled or inpatient or something
	;
	; -- see if appointment type is billable
	I '$$RPT^IBEFUNC($P(IBOEDATA,"^",10),+IBOEDATA) S IBRMARK="NON-BILLABLE APPOINTMENT TYPE"
	;
	; -- is it a primary visit
	I $P(IBOEDATA,"^",6),$P(IBOEDATA,"^",6)'=IBOE G OPCHKQ ; only store primary visits for now
	; -- get visit status
	I $P(IBOEDATA,"^",12)'=2 G OPCHKQ ;only checked out encounters can be added
	;
	; -- check sc status, special conditions etc.
	I $G(IBRMARK)="" S IBENCL=$$ENCL^IBAMTS2(IBOE) I IBENCL["1" D  ; return 1 in string if true "ao^ir^sc^ec"
	.I $P(IBENCL,"^",3) S IBRMARK="SC TREATMENT" Q
	.I $P(IBENCL,"^",1) S IBRMARK="AGENT ORANGE" Q
	.I $P(IBENCL,"^",2) S IBRMARK="IONIZING RADIATION" Q
	.I $P(IBENCL,"^",4) S IBRMARK="ENV. CONTAM." Q
	;
	; -- check for non-billable stops
	S X=$P(IBOEDATA,"^",3) I X,$$NBCSC^IBEFUNC(X,+IBOEDATA) S IBRMARK="NON-BILLABLE STOP CODE"
	;
	; -- ok to add to tracking module
	D OPT^IBTUTL1(DFN,IBOETYP,IBDT,IBOE,$G(IBRMARK),$G(IBVSIT)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
	I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
	I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
OPCHKQ	K IBRMARK,VAEL,VA,IBOEDATA,IBVSIT,DFN,X,Y
	Q
	;
BULL	; -- send bulletin
	;
	S XMSUB="Outpatient Encounters added to Claims Tracking Complete"
	S IBT(1)="The process to automatically add Opt Encounters has successfully completed."
	S IBT(1.1)=""
	S IBT(2)="              Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
	S IBT(3)="                End Date: "_$$DAT1^IBOUTL(IBTSEDT)
	I $D(IBMESS) S IBT(3.1)=IBMESS
	S IBT(4)=""
	S IBT(5)="            Total Encounters Checked: "_$G(IBCNT)
	S IBT(6)="              Total Encounters Added: "_$G(IBCNT1)
	S IBT(7)=" Total Non-billable Encounters Added: "_$G(IBCNT2)
	S IBT(8)=""
	S IBT(9)="*The SC, Agent Orange, Environmental Contaminate, and Ionizing "
	S IBT(10)="Radiation visits have been added for insured patients but"
	S IBT(11)="automatically indicated as not billable"
	D SEND^IBTRKR31
BULLQ	Q

IBTRKR5
IBTRKR5	;ALB/AAS - CLAIMS TRACKING - ADD/TRACK PROSTHETICS ; 13-JAN-94
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	; -- entry point for nightly background job
	N IBTSBDT,IBTSEDT
	S IBTSBDT=$$FMADD^XLFDT(DT,-30)-.1
	S IBTSEDT=$$FMADD^XLFDT(DT,-3)+.9
	D EN1
	Q
	;
EN	; -- entry point to ask date range
	N IBBDT,IBEDT,IBTSBDT,IBTSEDT,IBTALK
	S IBTALK=1
	I '$P($G(^IBE(350.9,1,6)),"^",4) W !!,"I'm sorry, Tracking of Prosthetics is currrently turned off." G ENQ
	W !!!,"Select the Date Range of Prosthetics to Add to Claims Tracking.",!
	D DATE^IBOUTL
	I IBBDT<1!(IBEDT<1) G ENQ
	S IBTSBDT=IBBDT,IBTSEDT=IBEDT
	;
	; -- check selected dates
	S IBTRKR=$G(^IBE(350.9,1,6))
	; start date can't be before parameters
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR W !!,"Begin date is before Claims Tracking Start Date, changed to ",$$DAT1^IBOUTL(IBTSBDT)
	; -- end date into future
	I IBTSEDT>$$FMADD^XLFDT(DT,-3) W !!,"I'll automatically change the end date to 3 days prior to the date queued to run."
	;
	W !!!,"I'm going to automatically queue this off and send you a"
	W !,"mail message when complete.",!
	S ZTIO="",ZTRTN="EN1^IBTRKR5",ZTSAVE("IB*")="",ZTDESC="IB - Add Prosthetics to Claims Tracking"
	D ^%ZTLOAD I $G(ZTSK) K ZTSK W !,"Request Queued"
ENQ	K ZTSK,ZTIO,ZTSAVE,ZTDESC,ZTRTN
	D HOME^%ZIS
	Q
	;
EN1	; -- add prostethics to claims tracking file
	N I,J,X,Y,IBTRKR,IBDT,DFN,IBDATA,IBCNT,IBCNT1,IBCNT2
	;
	; -- check parameters
	S IBTRKR=$G(^IBE(350.9,1,6))
	G:'$P(IBTRKR,"^",5) EN1Q ; quit if prothetics tracking off
	I +IBTRKR,IBTSBDT<+IBTRKR S IBTSBDT=IBTRKR ; start date can't be before parameters
	;
	; -- users can queue into future, make sure dates not after date run
	I IBTSEDT>$$FMADD^XLFDT(DT,-3) S IBMESS="(Selected end date of "_$$DAT1^IBOUTL(IBTSEDT)_" automatically changed to "_$$DAT1^IBOUTL($$FMADD^XLFDT(DT,-3))_".)",IBTSEDT=$$FMADD^XLFDT(DT,-3)
	;
	;S IBPRTYP=$O(^IBE(356.6,"AC",3,0)) ; this is the event type pointer for prosthetics
	;
	; -- cnt= total count, cnt1=count added nsc, cnt2=count of pending
	S (IBCNT,IBCNT1,IBCNT2)=0
	S IBDT=IBTSBDT-.0001
	F  S IBDT=$O(^RMPR(660,"B",IBDT)) Q:'IBDT!(IBDT>IBTSEDT)  S IBDA="" F  S IBDA=$O(^RMPR(660,"B",IBDT,IBDA)) Q:'IBDA  D PRCHK
	;
	I $G(IBTALK) D BULL ;^IBTRKR51
EN1Q	I $D(ZTQUEUED) S ZTREQ="@"
	Q
	;
PRCHK	; -- check and add item
	S IBCNT=IBCNT+1
	I '$D(ZTQUEUED),($G(IBTALK)) W "."
	;
	S IBDATA=$G(^RMPR(660,+IBDA,0)) Q:IBDATA=""
	S DFN=$P(IBDATA,"^",2)
	;
	; -- checks copied from rmprbil v2.0 /feb 2, 1994
	Q:'$D(^RMPR(660,+IBDA,"AM"))
	Q:$P(^RMPR(660,+IBDA,0),U,9)=""!($P(^(0),U,12)="")!($P(^(0),U,6)="")!($P(^(0),U,14)="V")!($P(^(0),U,2)="")!($P(^(0),U,15)="*")
	Q:($P(^RMPR(660,+IBDA,"AM"),U,3)=2)!($P(^("AM"),U,3)=3)
	;
	;
	I $O(^IBT(356,"APRO",IBDA,0)) G PRCHKQ ; already in claims tracking
	;
	; -- see if tracking only insured and pt is insured
	I $P(IBTRKR,"^",5)=1,'$$INSURED^IBCNS1(DFN,IBDT) G PRCHKQ ; patient not insure
	;
	; -- check sc status
	D ELIG^VADPT
	I +VAEL(3) S IBRMARK="NEEDS SC DETERMINATION"
	;
	; -- ok to add to tracking module
	D PRO^IBTUTL1(DFN,IBDT,IBDA,$G(IBRMARK)) I '$D(ZTQUEUED),$G(IBTALK) W "+"
	I $G(IBRMARK)'="" S IBCNT2=IBCNT2+1
	I $G(IBRMARK)="" S IBCNT1=IBCNT1+1
	K IBRMARK,VAEL,VA,IBDATA,DFN,X,Y
PRCHKQ	Q
	;
BULL	; -- send bulletin
	;
	S XMSUB="Prothetic Items added to Claims Tracking Complete"
	S IBT(1)="The process to automatically add Prosthetic Items has successfully completed."
	S IBT(1.1)=""
	S IBT(2)="                      Start Date: "_$$DAT1^IBOUTL(IBTSBDT)
	S IBT(3)="                        End Date: "_$$DAT1^IBOUTL(IBTSEDT)
	I $D(IBMESS) S IBT(3.1)=IBMESS
	S IBT(4)=""
	S IBT(5)=" Total Prosthetics Items checked: "_$G(IBCNT)
	S IBT(6)="Total NSC Prosthetic Items Added: "_$G(IBCNT1)
	S IBT(7)=" Total SC Prosthetic Items Added: "_$G(IBCNT2)
	S IBT(8)=""
	S IBT(9)="*The items added as SC require determination and editing to be billed"
	D SEND^IBTRKR31
BULLQ	Q

IBTRP
IBTRP	;ALB/AAS - CLAIMS TRACKING PARAMETER EDIT ; 27-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	D DISP
	L +^IBE(350.9,1):5 I '$T D LOCKED^IBTRCD1 G END
	S DIE="^IBE(350.9,",DA=1,DR="4.01;6.01;6.02;6.03;6.04;6.05;6.23;6.06;I 'X S Y=""@50"";5.01;5.02;5.03;@50;6.08;6.09;6.13;6.14;6.18;6.19"
	D ^DIE K DA,DR,DIE
	L -^IBE(350.9,1)
	D DISP,PAUSE^IBOUTL
END	Q
	;
DISP	; -- Display tracking parameters
	I '$D(IOF) D HOME^%ZIS
	S IBTRKR=$G(^IBE(350.9,1,6))
	W @IOF,?22,"Claims Tracking Parameter Enter Edit"
	W !,$TR($J(" ",IOM)," ","-")
	W !!,"Initialization Date: ",$$DAT1^IBOUTL(+IBTRKR)
	W !,"Use Admission Sheet: ",$$EXPAND^IBTRE(350.9,6.06,$P(IBTRKR,"^",6))
	W !,"      Header line 1: ",$P($G(^IBE(350.9,1,5)),"^")
	W !,"      Header line 2: ",$P($G(^IBE(350.9,1,5)),"^",2)
	W !,"      Header line 3: ",$P($G(^IBE(350.9,1,5)),"^",3)
	W !!,"    Track Inpatient: ",$$EXPAND^IBTRE(350.9,6.02,$P(IBTRKR,"^",2))
	W ?40,"    Track Outpatient: ",$$EXPAND^IBTRE(350.9,6.03,$P(IBTRKR,"^",3))
	W !,"           Track Rx: ",$$EXPAND^IBTRE(350.9,6.04,$P(IBTRKR,"^",4))
D	W ?40,"   Track Prosthetics: ",$$EXPAND^IBTRE(350.9,6.05,$P(IBTRKR,"^",5))
	W !," Reports can Add CT: ",$$EXPAND^IBTRE(350.9,6.23,$P(IBTRKR,"^",23))
	W !!,"    Medicine Sample: ",$J($P(IBTRKR,"^",8),3)
	W ?40,"      Surgery Sample: ",$J($P(IBTRKR,"^",13),3)
	W !,"Medicine Admissions: ",$J($P(IBTRKR,"^",9),3)
	W ?40,"  Surgery Admissions: ",$J($P(IBTRKR,"^",14),3)
	W !!,"       Psych Sample: ",$J($P(IBTRKR,"^",18),3)
	W !,"   Psych Admissions: ",$J($P(IBTRKR,"^",19),3)
	W !!!
	Q

IBTRPR
IBTRPR	;ALB/AAS - CLAIMS TRACKING - PENDING WORK SCREEN ; 22-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT EDIT PENDING REVIEW from menu's
	I '$D(DT) D DT^DICRW
	K XQORS,VALMQUIT,VALMEVL,IBTRN,IBTRV,IBTRC,IBTRD,DFN,IBCNS,IBFASTXT
	W !!,"Pending Reviews Option",!
	D DATE^IBTRPR0
	D SORT^IBTRPR0
	S IBTWHO="A" I IBSORT="A" D WHOSE^IBTRPR0
	S IBTPRT="B",VAUTD=1 I IBSORT="T" D TYPE^IBTRPR0
	I $D(VALMQUIT) G ENQ
	I '$G(IBTRPRF) S IBTRPRF=12
	D EN^VALM("IBT EDIT PENDING REVIEW")
ENQ	K IBFASTXT,VALMQUIT,IBSORT,IBTPBDT,IBTPEDT,DIR,DIRUT,DUOUT,X,Y,IBTRN,IBTRV,IBTRC,IBTRD,DFN,IBCNS,XQORS,IBTRPRF,IBQUIT,IBTWHO,IBTPRT,DIC,DR,DIE,DA,I,J
	K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	D KVAR^VADPT
	 K IBFASTXT,IBSCP,IBOTB,XQORS,VALMEVL,DFN,IBTRN,IBTRV,IBTRC,IBTRD,IBCNS,IBCDFN,VA,VAERR,VA200,IBCNT,IBI,IBTBDT,IBTEDT,IBUR,IBTRPRF,VAEL,VAIN,PRECERT,IBAMNT,IBDGCR,IBDGCRU1,IBETYP,IBETYPD,IBLCNT,IBTEXT,IBTRND,X,Y,Z,IBTMPNM
	Q
	;
HDR	; -- header code
	S VALMHDR(1)="List of PENDING WORK for: "_$$DAT1^IBOUTL(IBTPBDT,"2P")_"  to  "_$$DAT1^IBOUTL(IBTPEDT,"2P")
	S VALMHDR(2)=""
	Q
	;
INIT	; -- init variables and list array
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBTRPR",$J),^TMP("IBTRPRDX",$J)
	K I,X,XQORNOD,DA,DR,DNM,DQ
	;
	; -- run the scheduled admissions list
	D ^IBTRKR2 W !!,"Building your work list..."
	D BLD
	Q
	;
BLD	; -- build list
	;  1.  build pending hospital reviews
	;  2.  build pending insurance reviews
	;
	K ^TMP("IBTRPR",$J),^TMP("IBTRPRDX",$J),^TMP("IBSRT",$J),^TMP("IBSRT1",$J)
	N IBI,J
	S (IBCNT,VALMCNT)=0,IBI=""
	I '$D(IBTPRT) S IBTRPT="B"
	I '$D(IBTWHO) S IBTWHO="A"
	I '$G(IBTRPRF) S IBTRPRF=12
	I IBTRPRF<10 S X=$S(IBTRPRF=1:"IBTRPR  HR MENU",IBTRPRF=2:"IBTRPR  IR MENU",1:"IBTRPR  MENU") D PROT(X)
	D:IBTRPRF[1 1^IBTRPR01
	D:IBTRPRF[2 2^IBTRPR01
	;
	; -- go through sorted list
	S IBDV="" F  S IBDV=$O(^TMP("IBSRT",$J,IBDV)) Q:IBDV=""  S TYPE="" F  S TYPE=$O(^TMP("IBSRT",$J,IBDV,TYPE)) Q:TYPE=""  D
	.S IBI="" F  S IBI=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI)) Q:IBI=""  S IBJ="" F  S IBJ=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ)) Q:IBJ=""  D
	..S IBK="" F  S IBK=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK)) Q:IBK=""  S IBL="" F  S IBL=$O(^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK,IBL)) Q:IBL=""  D
	...S IBDATA=^TMP("IBSRT",$J,IBDV,TYPE,IBI,IBJ,IBK,IBL)
	...S IBTRN=+IBDATA,ENTRY=$P(IBDATA,"^",2)
	...S IBDATE=$P(IBDATA,"^",3),DFN=$P(IBDATA,"^",4),IBWARD=$P(IBDATA,"^",5)
	...S IBSTATUS=$P(IBDATA,"^",6),IBREV=$P(IBDATA,"^",7)
	...S IBASSIGN=$P(IBDATA,"^",9),IBNEXT=$P(IBDATA,"^",10)
	...S IBFLAG=$O(^TMP("IBSRT1",$J,DFN,"")),IBFLAG=$O(^TMP("IBSRT1",$J,DFN,IBFLAG)) I IBFLAG'="" S IBFLAG="+"
	...S FILE=$P(IBDATA,"^",8)
	...D PID^VADPT
	...S IBCNT=IBCNT+1 D BLD1^IBTRPR0
	...Q
	K ^TMP("IBSRT",$J),^TMP("IBSRT1",$J)
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBTRPR",$J),^TMP("IBTRPRDX",$J)
	K I,J,X,Y,ENTRY,FILE,IBDATE,IBJ,IBNEXT,IBREV,IBSTATUS,IBTPEDT,IBTPBDT,IBTRC,IBTRN,IBTRV,TYPE,VA,VAERR,IBASSIGN,IBCNT,IBDATA,IBFLAG,IBK,IBL,IBSORT,IBWARD,IBTSORT
	D FULL^VALM1,CLEAN^VALM10
	Q
	;
PROT(X)	; -- set protocol menu
	N DIC,Y
	I $G(X)'="" S DIC=101,DIC(0)="N" D ^DIC
	I +Y S VALM("PROTOCOL")=+Y_";ORD(101,"
PROTQ	Q

IBTRPR0
IBTRPR0	;ALB/AAS - CLAIMS TRACKING - PENDING WORK SCREEN ; 22-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRPR
	;
BLD1	N IBI,IBJ,IBL,IBK
	S X=""
	S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	S X=$$SETFLD^VALM1(TYPE,X,"TYPE")
	S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$G(IBREV),0)),"^",3),X,"REVIEW")
	S X=$$SETFLD^VALM1($$DAT1^IBOUTL(IBDATE,"2P"),X,"DATE")
	S X=$$SETFLD^VALM1(IBFLAG_$P(^DPT(+DFN,0),"^"),X,"PATIENT")
	S X=$$SETFLD^VALM1(VA("BID"),X,"ID")
	S X=$$SETFLD^VALM1(IBSTATUS,X,"STATUS")
	S X=$$SETFLD^VALM1(IBNEXT,X,"NEXT")
	S X=$$SETFLD^VALM1(IBWARD,X,"WARD")
	S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(^IBT(356,+IBTRN,0),U,6),"2P"),X,"EV DATE")
	S X=$$SETFLD^VALM1($P($G(^IBE(356.6,+$P(^IBT(356,+IBTRN,0),U,18),0)),U,2),X,"EVENT")
	S X=$$SETFLD^VALM1(IBASSIGN,X,"ASSIGNED TO")
	W "."
	D SET(X)
	I IBFLAG="+" S VALMSG="'+' indicates both Hosp. and Ins. Reviews on List"
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1
	S ^TMP("IBTRPR",$J,VALMCNT,0)=X
	S ^TMP("IBTRPR",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBTRPRDX",$J,IBCNT)=VALMCNT_"^"_FILE_"^"_ENTRY_"^"_IBTRN
	Q
	;
DATE	; -- compute initial date range
	;S IBTPEDT=$$FMADD^XLFDT(DT,27) ; initial end date 1 week in future
	S IBTPEDT=DT ; initial end date = today
	S IBTPBDT=$$FMADD^XLFDT(DT,-7) ; show only last weeks pending work.
	Q
	;
SORT	; -- ask how they want it sorted
	N DIR
	S DIR(0)="SOBA^A:ASSIGNED TO;D:DUE DATE;P:PATIENT;T:TYPE REVIEW;W:WARD"
	S DIR("A")="Sort Reviews By [A]ssigned to  [D]ue date  [P]atient  [T]ype  [W]ard: "
	S DIR("B")="P"
	S DIR("?",1)="Select how you would like your pending reviews sorted. The choices are by"
	S DIR("?",2)="who they are Assigned to, by Due date, by Patient, by Type of review, or"
	S DIR("?",3)="by current Ward of the patient."
	S DIR("?",4)=" ",DIR("?")="The default is by patient.  Normally if sorted by other than patient, the list will be sorted within your choice by patient."
	D ^DIR K DIR
	S IBSORT=Y I "ADPTW"'[Y!($D(DIRUT)) S VALMQUIT=""
	Q
	;
TYPE	; -- if by type, ask which type of reviews
	W !
	N DIR
	S DIR(0)="SOBA^A:ADMISSION REVIEWS;C:CONTINUED STAY REVIEWS;B:OTH"
	S DIR("A")="Print Pending [A]dmission Reviews  [C]ontinued Stay Reviews  [B]oth: "
	S DIR("B")="B"
	S DIR("?")="If you only want to list your pending Admission Reviews (pre-certs, urgent admissions etc.) enter 'A'.  If you want to list only your pending Continued Stay Reviews enter 'C', or enter 'B' to see all pending reviews."
	D ^DIR K DIR
	S IBTPRT=Y I "ACB"'[Y!($D(DIRUT)) S VALMQUIT=""
	Q
	;
WHOSE	; -- if by assigned to, ask assigned to who
	W !
	N DIR
	S DIR(0)="SOBA^Y:YOUR OWN;U:UNASSIGNED PLUS YOUR OWN;A:ALL"
	S DIR("A")="Print [Y]our own  [U]nassigned plus your own  [A]ll: "
	S DIR("B")="Y"
	S DIR("?")="If you only want to list Your own pending Reviews enter 'Y', if you want to list unassigned reviews plus your own pending Reviews enter 'U', or enter 'A' to see all pending reviews."
	D ^DIR K DIR
	S IBTWHO=Y I "AUY"'[Y!($D(DIRUT)) S VALMQUIT=""
	Q

IBTRPR01
IBTRPR01	;ALB/AAS - CLAIMS TRACKING - PENDING WORK SCREEN ; 22-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRPR
	;
	;
1	S (X,ENTRY)="",TYPE="Hosp Reviews",FILE=356.1,IBDV=1
	S IBI=IBTPBDT-.0001 F  S IBI=$O(^IBT(356.1,"APEND",IBI)) Q:'IBI!(IBI>(IBTPEDT+.9))  S IBJ="" F  S IBJ=$O(^IBT(356.1,"APEND",IBI,IBJ)) Q:'IBJ  D
	.S (ENTRY,IBTRV)=IBJ
	.I IBTPRT'="B" D  Q:IBQUIT
	..S IBQUIT=1
	..S IBTX=$P($G(^IBE(356.11,+$P($G(^IBT(356.1,+IBTRV,0)),"^",22),0)),"^",2)
	..I IBTPRT="C",IBTX>29 S IBQUIT=0 Q
	..I IBTPRT="A",IBTX<30 S IBQUIT=0
	.S IBDATE=IBI
	.S IBTRN=$P($G(^IBT(356.1,+IBTRV,0)),"^",2)
	.I $P($G(^IBT(356,+IBTRN,0)),"^",20)'=1 Q
	.S DFN=$P($G(^IBT(356,+IBTRN,0)),"^",2)
	.I $G(IBTOPW) S IBDV=$$DIV(IBTRN)
	.S IBWARD=$P($G(^DPT(DFN,.1)),"^")
	.S IBSTATUS=$P($G(^IBT(356.1,IBTRV,0)),"^",21)
	.S IBNEXT=$S(IBSTATUS=10:"ADD NEXT REV.",1:"EDIT REVIEW")
	.S IBSTATUS=$$EXPAND^IBTRE(356.1,.21,IBSTATUS)
	.S IBREV=$P($G(^IBT(356.1,IBTRV,0)),"^",22)
	.S IBASSIGN=$P($G(^VA(200,+$P($G(^IBT(356,IBTRN,1)),"^",5),0)),"^")
	.I IBTWHO'="A" D  Q:IBQUIT
	..S IBQUIT=1
	..I IBTWHO="Y",DUZ=$P($G(^IBT(356,+IBTRN,1)),"^",5) S IBQUIT=0 Q
	..I IBTWHO="U",IBASSIGN=""!(DUZ=$P($G(^IBT(356,+IBTRN,1)),"^",5)) S IBQUIT=0
	.I IBASSIGN="" S IBASSIGN="Unassigned"
	.D TEMP
	.Q
	S IBQUIT=0
	Q
	;
2	S (X,ENTRY)="",TYPE="Ins. Reviews",FILE=356.2,IBDV=1
	S IBI=IBTPBDT-.0001 F  S IBI=$O(^IBT(356.2,"APEND",IBI)) Q:'IBI!(IBI>(IBTPEDT+.9))  S IBJ="" F  S IBJ=$O(^IBT(356.2,"APEND",IBI,IBJ)) Q:'IBJ  D
	.S (ENTRY,IBTRC)=IBJ
	.I IBTPRT'="B" D  Q:IBQUIT
	..S IBQUIT=1
	..S IBTX=$P($G(^IBE(356.11,+$P($G(^IBT(356.2,+IBTRC,0)),"^",4),0)),"^",2)
	..I IBTPRT="C",IBTX>29 S IBQUIT=0
	..I IBTPRT="A",IBTX<30 S IBQUIT=0
	.S IBDATE=IBI
	.S IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2)
	.I $P($G(^IBT(356,+IBTRN,0)),"^",20)'=1 Q
	.S DFN=$P($G(^IBT(356,+IBTRN,0)),"^",2)
	.I $G(IBTOPW) S IBDV=$$DIV(IBTRN)
	.S IBREV=$P($G(^IBT(356.2,IBTRC,0)),"^",4)
	.S IBWARD=$P($G(^DPT(DFN,.1)),"^")
	.S IBSTATUS=$P($G(^IBT(356.2,IBTRC,0)),"^",19)
	.S IBNEXT=$S(IBSTATUS=10:"ADD NEXT REV.",1:"EDIT REVIEW")
	.S IBSTATUS=$$EXPAND^IBTRE(356.2,.19,IBSTATUS)
	.S IBASSIGN=$P($G(^VA(200,+$P($G(^IBT(356,IBTRN,1)),"^",6),0)),"^")
	.I IBTWHO'="A" D  Q:IBQUIT
	..S IBQUIT=1
	..I IBTWHO="Y",DUZ=$P($G(^IBT(356,+IBTRN,1)),"^",6) S IBQUIT=0 Q
	..I IBTWHO="U",IBASSIGN=""!(DUZ=$P($G(^IBT(356,+IBTRN,1)),"^",6)) S IBQUIT=0
	.I IBASSIGN="" S IBASSIGN="Unassigned"
	.D TEMP
	.Q
	S IBQUIT=0
	Q
	;
	;
TEMP	; -- build temp array
	;I '$G(IBTOPW) S IBDV=1
	S IBTSORT=$S(IBSORT="W":IBWARD,IBSORT="P":$P($G(^DPT(DFN,0)),"^"),IBSORT="T":$P($G(^IBE(356.11,+IBREV,0)),"^"),IBSORT="D":IBDATE,1:"")
	I IBTSORT="" S IBTSORT="ZZ!@#$%^&*()_+"
	S ^TMP("IBSRT",$J,IBDV,TYPE,IBTSORT,$P(^DPT(DFN,0),"^"),IBTRN,ENTRY)=IBTRN_"^"_ENTRY_"^"_IBDATE_"^"_DFN_"^"_IBWARD_"^"_IBSTATUS_"^"_IBREV_"^"_FILE_"^"_IBASSIGN_"^"_IBNEXT
	S ^TMP("IBSRT1",$J,DFN,TYPE)=""
	Q
	;
DIV(IBTRN)	; -- comput division of a tracking entry
	; -- input ien to 356
	; -- output name (.01) of entry in 40.8 or unknown
	N IBDV,DFN S IBDV=""
	I $G(^IBT(356,+$G(IBTRN),0))="" G DIVQ
	S DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	I $P($G(^IBT(356,+IBTRN,0)),"^",5) D  G DIVQ
	.S IBDV=+$P($G(^DIC(42,+$P($G(^DGPM(+$P($G(^IBT(356,+IBTRN,0)),"^",5),0)),"^",6),0)),"^",11) ;default is division of admission movement
	.I $G(^DPT(DFN,.1))'="",+$P(^IBT(356,+IBTRN,0),"^",5)=+$G(^DPT(DFN,.105)) S IBDV=+$P($G(^DIC(42,+$O(^DIC(42,"B",$P($G(^DPT(DFN,.1)),"^"),0)),0)),"^",11) ;if current adm=adm from movement compute current div
	;
	I $P($G(^IBT(356,+IBTRN,0)),"^",4) D  G DIVQ
	.S IBDV=+$P($G(^SCE(+$P($G(^IBT(356,+IBTRN,0)),"^",4),0)),"^",11)
	;
	I $P($G(^IBT(356,+IBTRN,0)),"^",32),'$P(^IBT(356,+IBTRN,0),"^",5) D
	.S IBDV=+$P($G(^DGS(41.1,+$P(^IBT(356,+IBTRN,0),"^",32),0)),"^",12)
	.I 'IBDV S IBDV=+$P($G(^DIC(42,+$P($G(^DGS(41.1,+$P(^IBT(356,+IBTRN,0),"^",32),0)),"^",8),0)),"^",11)
	;
DIVQ	I IBDV S IBDV=$P($G(^DG(40.8,+IBDV,0)),"^")
	E  S IBDV="UNKNOWN"
	Q IBDV

IBTRPR1
IBTRPR1	;ALB/AAS - CLAIMS TRACKING - PENDING WORK ACTIONS ; 9-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRPR
	;
NX(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N I,J,IBXX,VALMY,IBTRN,IBTRV,IBTRC,DFN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXX,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I IBTMPNM["REVIEW EDITOR"!(IBTMPNM["COMMUNICATIONS EDITOR") D
	..I $P(IBT,"^",2)=356.1 S IBTRV=$P(IBT,"^",3),IBTMPNM="IBT REVIEW EDITOR"
	..I $P(IBT,"^",2)=356.2 S IBTRC=$P(IBT,"^",3),IBTMPNM="IBT COMMUNICATIONS EDITOR"
	.D EN^VALM(IBTMPNM)
	.K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	.K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	.D KVAR^VADPT
	.Q
	I '$D(IBFASTXT) D BLD^IBTRPR
	S VALMBCK="R"
	Q
	;
CD	; -- Change Date range
	S VALMB=IBTPBDT D RANGE^VALM11
	I $S('VALMBEG:1,IBTPBDT'=VALMBEG:0,1:IBTPEDT=VALMEND) W !!,"Date range was not changed." D PAUSE^VALM1 S VALMBCK="" G CDQ
	S IBTPBDT=VALMBEG,IBTPEDT=VALMEND
	D BLD^IBTRPR
	D HDR^IBTRPR S VALMBG=1
CDQ	K VALMB,VALMBEG,VALMEND
	S VALMBCK="R"
	Q
	;
QE	; -- Quick Edit Entry
	N I,J,IBXX,VALMY,IBTRN,IBTRV,IBTRC,DFN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXX,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I $P(IBT,"^",2)=356.1 S IBTRV=$P(IBT,"^",3) D QE1^IBTRV1 Q
	.I $P(IBT,"^",2)=356.2 S IBTRC=$P(IBT,"^",3) D QE1^IBTRC1 Q
	.D EN^VALM(IBTMPNM)
	.Q
	D BLD^IBTRPR
	S VALMBCK="R"
	Q
	D BLD^IBTRPR
	S VALMBCK="R"
	Q
	;
VE	; -- View Edit entry
	N I,J,IBXX,VALMY,IBTRN,IBTRV,IBTRC,DFN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXX,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I $P(IBT,"^",2)=356.1 S IBTRV=$P(IBT,"^",3),IBTMPNM="IBT EXPAND/EDIT REVIEW"
	.I $P(IBT,"^",2)=356.2 S IBTRC=$P(IBT,"^",3),IBTMPNM="IBT EXPAND/EDIT COMMUNICATIONS"
	.D EN^VALM(IBTMPNM)
	.Q
	D BLD^IBTRPR
	S VALMBCK="R"
	Q
	;
SC	; -- Status Change
	N VALMY,I,J,IBT,IBXXT,IBTEMP
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXXT,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.S IBTEMP="[IBT STATUS CHANGE]"
	.I $P(IBT,"^",2)=356.1 S IBTRV=$P(IBT,"^",3) D EDIT^IBTRVD1(IBTEMP,1) Q
	.I $P(IBT,"^",2)=356.2 S IBTRC=$P(IBT,"^",3) D EDIT^IBTRCD1(IBTEMP,1) Q
	.Q
	D BLD^IBTRPR
	S VALMBCK="R"
	Q
	;
RL	; -- Remove from list
	;    Just delete Next review date
	N VALMY,I,J,IBT,IBXXT,IBTEMP
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXXT,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.S IBTEMP="[IBT REMOVE NEXT REVIEW]"
	.W !!,"Removing Next Review Date from entry #",IBXXT
	.I $P(IBT,"^",2)=356.1 S IBTRV=$P(IBT,"^",3) D EDIT^IBTRVD1(IBTEMP,1) Q
	.I $P(IBT,"^",2)=356.2 S IBTRC=$P(IBT,"^",3) D EDIT^IBTRCD1(IBTEMP,1) Q
	.Q
	D BLD^IBTRPR
	S VALMBCK="R"
	Q
	;
SHOWSC	; -- show sc conditions
	N I,J,IBXX,VALMY,IBTRN,IBTRV,IBTRC,DFN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXX,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.D SHOWSC^IBTRC1
	.Q
	S VALMBCK="R"
	Q
	;
PW	; -- Print worksheet
	N I,J,IBXX,VALMY,IBTRN,IBTRV,IBTRC,DFN
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXX,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.D RW^IBTRC4
	.Q
	S VALMBCK="R"
	Q

IBTRPR2
IBTRPR2	;ALB/AAS - CLAIMS TRACKING - PENDING WORK ACTIONS ; 9-AUG-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRPR
	;
PW(IBTRN)	; -- Print worksheet
	W !!,"worksheet not available",!
	D PAUSE^VALM1
	Q
	;
DIAG	; -- diagnosis editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXXT,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I IBTRN D EN^IBTRE3(IBTRN)
	.Q
	Q
	;
PU	; -- procedure editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXXT,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I IBTRN D EN^IBTRE4(IBTRN)
	.Q
	Q
	;
PRV	; -- provider editing
	N VALMY,I,J,IBXXT
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXT=0 F  S IBXXT=$O(VALMY(IBXXT)) Q:'IBXXT  D
	.S IBT=$G(^TMP("IBTRPRDX",$J,+$O(^TMP("IBTRPR",$J,"IDX",IBXXT,0))))
	.S IBTRN=$P(IBT,"^",4),DFN=$P(^IBT(356,+IBTRN,0),"^",2)
	.I IBTRN D EN^IBTRE5(IBTRN)
	.Q
	Q

IBTRV
IBTRV	;ALB/AAS - CLAIMS TRACKING REVIEWS (UR) ; 27-JUN-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	;
EN	; -- main entry point for IBT REVIEW EDITOR from menu's
	;
	I '$D(DT) D DT^DICRW
	K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT
	G:$D(VALMQUIT) ENQ
	D PAT^IBCNSM I $D(VALMQUIT) G ENQ
	D TRAC I $D(VALMQUIT) G ENQ
	I '$G(IBTRPRF) S IBTRPRF="12"
	D EN^VALM("IBT REVIEW EDITOR")
ENQ	K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD,IBFASTXT,VALMQUIT,IBI,IBICD,IBTRND,VA,VAERR,VA200,VAINDT,X,Y,IBTRPRF,IBCNT,VALMBCK,OFFSET,I1,I3,IBNEW,IBDENT,IBOE,Z1,T,SDCNT
	K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	D KVAR^VADPT
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)=" Hospital Review Entries for: "_$$PT^IBTUTL1(DFN)_"   ROI: "_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
	S VALMHDR(2)="                         for: "_$$EXPAND^IBTRE(356,.18,$P(IBTRND,"^",18))_" on "_$$DAT1^IBOUTL($P(IBTRND,"^",6),"2P")
	Q
	;
INIT	; -- init variables and list array
	S U="^",VALMCNT=0,VALMBG=1
	K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
	K I,X,XQORNOD,DA,DR,DIE,DNM,DQ
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	D BLD
	Q
	;
BLD	; -- Build list of Reviews
	K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
	N IBI,J,IBTRV,IBTRVD,IBUR
	S IBUR=$$IBUR(IBTRN)
	I IBUR'="" S VALMSG=IBUR
	S (IBTRV,IBCNT,VALMCNT)=0,IBI=""
	F  S IBI=$O(^IBT(356.1,"ATIDT",+IBTRN,IBI)) Q:'IBI  S IBTRV=0 F  S IBTRV=$O(^IBT(356.1,"ATIDT",IBTRN,IBI,IBTRV)) Q:'IBTRV  D
	.W "."
	.S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
	.Q:'+$P(IBTRVD,"^",21)  ;quit if inactive
	.N VAIN,VAINDT S VAINDT=$$VNDT(IBTRV) D INP^VADPT
	.S IBCNT=IBCNT+1
	.S X=""
	.S X=$$SETFLD^VALM1(IBCNT,X,"NUMBER")
	.S X=$$SETFLD^VALM1($$DAT1^IBOUTL(+IBTRVD,2),X,"RV DATE")
	.;S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^"),X,"TYPE")
	.S X=$$SETFLD^VALM1($P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",3),X,"TYPE")
	.S X=$$SETFLD^VALM1($E($$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)),1,8),X,"STATUS")
	.S X=$$SETFLD^VALM1($P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^"),X,"SPEC")
	.S X=$$SETFLD^VALM1($J($P(IBTRVD,"^",3),2),X,"DAY")
	.S X=$$SETFLD^VALM1($$DAT1^IBOUTL($P(IBTRVD,"^",20),2),X,"NEXT")
	.S X=$$SETFLD^VALM1($P(VAIN(4),"^",2),X,"WARD")
	.S X=$$SETFLD^VALM1(VAIN(5),X,"BED")
	.S X=$$SETFLD^VALM1(IBUR,X,"RV REASON")
	.D SET(X)
	Q
	;
SET(X)	; -- set arrays
	S VALMCNT=VALMCNT+1
	S ^TMP("IBTRV",$J,VALMCNT,0)=X
	S ^TMP("IBTRV",$J,"IDX",VALMCNT,IBCNT)=""
	S ^TMP("IBTRVDX",$J,IBCNT)=VALMCNT_"^"_IBTRV
	Q
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K ^TMP("IBTRV",$J),^TMP("IBTRVDX",$J)
	K IBTRV
	D CLEAN^VALM10
	Q
	;
TRAC	; -- Select tracking entry
	N X,Y,DIC
	I '$D(DFN) S VALMQUIT="" G TRACQ
	S DIC("A")="Select VISIT: ",D="ADFN"_DFN
	S DIC("S")="I $P(^(0),U,20)"
	S DIC="^IBT(356,",DIC(0)="EQ",X="???" D IX^DIC
	;
	S DIC("S")="I $P(^(0),U,2)=DFN,$P(^(0),U,20)"
	S DIC="^IBT(356,",DIC(0)="AEQNM"
	S X=$$DEFV(DFN) I X,$L(X) S DIC("B")=X
	;
	; -- return IBY = Y as returned by dic
	D ^DIC S IBY=Y I +Y<1 S VALMQUIT="" G TRACQ
	S IBTRN=+Y
TRACQ	Q
	;
DEFV(DFN)	; -- compute default visit for patient
	N X,IBA,IBJ,IBX,IBY S X=""
	I '+$G(DFN) G DEFVQ
	I '$O(^IBT(356,"C",DFN,0)) G DEFVQ
	; -- default = current inpt
	S IBA=+$G(^DPT(DFN,.105)),X="" I IBA S X=$P($G(^IBT(356,+$O(^IBT(356,"AD",+IBA,0)),0)),"^") I X G DEFVQ
	;
	S IBX=0 F  S IBX=$O(^IBT(356,"ADFN"_DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADFN"_DFN,IBX,0)) I $P(^IBT(356,+IBY,0),"^",20) D
	.I $P(^IBT(356,+IBY,0),"^",32),'$P(^(0),"^",5) S X=IBX
	.S IBJ=IBX
	I X G DEFVQ
	;
	S IBX=0 F  S IBX=$O(^IBT(356,"ADM",DFN,IBX)) Q:'IBX  S IBY=$O(^IBT(356,"ADM",DFN,IBX,0)) D
	.I $P(^IBT(356,+IBY,0),"^",20) S X=$P(^(0),"^")
	G:$L(X) DEFVQ
	S X=$G(IBJ)
	;
DEFVQ	Q X
	;
VNDT(X)	; -- compute vaindt for call to inp^vadtp
	; -- Input  x = internal entry of review
	;
	N Y S Y=""
	S Y=+$G(^IBT(356.1,+$G(X),0)) S:$$TRTP(+$G(X))'=40 Y=Y+.24
	Q Y
	;
TRTP(X)	; -- Compute Review type code
	;    Input x = internal entry of review
	;    output  = code for review from 356.11
	Q $P($G(^IBE(356.11,+$P($G(^IBT(356.1,+$G(X),0)),"^",22),0)),"^",2)
	;
IBUR(IBTRN)	; -- reason for review
	N IBUR,IBTRND
	S IBUR="",IBTRND=$G(^IBT(356,+$G(IBTRN),0))
	S:$P(IBTRND,"^",25) IBUR="Random Sample" S:$P(IBTRND,"^",26) IBUR=IBUR_$S(IBUR="":"",1:"/")_$$EXPAND^IBTRE(356,.26,$P(IBTRND,"^",26))
	S:$P(IBTRND,"^",27) IBUR=IBUR_$S(IBUR="":"",1:"/")_"Local Addition"
	Q IBUR

IBTRV1
IBTRV1	;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ; 14-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRV
	;
DT	; -- Delete tracking entry
	I '$D(^XUSEC("IB CLAIMS SUPERVISOR",DUZ)) D SORRY^IBTRE1 G DTQ
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX,DIR,DIRUT
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX!$D(DIRUT)  D
	.S IBTRV=$P($G(^TMP("IBTRVDX",$J,+$O(^TMP("IBTRV",$J,"IDX",IBXX,0)))),"^",2)
	.I $O(^IBT(356.2,"AD",IBTRV,0)) W !!,*7,"There are Insurance Reviews associated with this entry."
	.W ! S DIR(0)="Y",DIR("B")="NO",DIR("A")="Are You Sure you want to delete entry #"_IBXX
	.D ^DIR I Y'=1 W !,"Entry #",IBXX," not Deleted!" Q
	.D DP1
	.Q
DTQ	D BLD^IBTRV
	S VALMBCK="R" Q
	;
DP1	; -- actual deletion
	N DA,DIC,DIK
	;
	; -- delete reviews, communications,
	N IBI,IBCNT
	S (IBI,IBCNT)=0 F  S IBI=$O(^IBT(356.2,"AD",IBTRV,IBI)) Q:'IBI  D
	.S DA=IBI,DIK="^IBT(356.2," D ^DIK
	.S IBCNT=IBCNT+1
	I IBCNT W !,"Number of Insurance Reviews Deleted: ",IBCNT
	;
	; -- delete entry in review file
	S DA=IBTRV,DIK="^IBT(356.1," D ^DIK
	W !,"Entry ",IBXX," Deleted"
	Q
	;
QE	; -- Quick edit Review entry
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRV=$P($G(^TMP("IBTRVDX",$J,+$O(^TMP("IBTRV",$J,"IDX",IBXX,0)))),"^",2)
	.D QE1
QEQ	S VALMBCK="R"
	D BLD^IBTRV
	Q
	;
QE1	N X,Y,DA,DR,DIC,DIE,IBSPEC,IBPROV,IBUNIT,IBADT,IBSEL
	S DIE="^IBT(356.1,",DA=IBTRV
	S IBTRTP=$P($G(^IBE(356.11,+$P($G(^IBT(356.1,IBTRV,0)),"^",22),0)),"^",2)
	S IBPROV="",IBSPEC="",IBATD=""
	I 'IBTRTP Q
	D @(IBTRTP_"^IBTRV3") ;sets up dr string for review type
	S DR=DR_"1.15;1.17;.21////10;.21;.2;"
	D EDIT^IBTRVD1(.DR,1)
	Q  ; -- don't always ask clinical info
	I $$TRTP^IBTRE1(IBTRN)<3 D  ;clinical info only on inpt/outpt
	.; -- diagnosis edit
	.D EN^IBTRE3(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- procedure edit / only inpt. / outpt use add/edit
	.I $$TRTP^IBTRE1(IBTRN)<2 D EN^IBTRE4(IBTRN) Q:$G(IBSEL)["^"
	.;
	.; -- provider edit
	.D EN^IBTRE5(IBTRN)
	Q
	;
NX(IBTMPNM)	; -- Go to next template
	; -- Input template name
	N VALMY,I,J,IBXXV
	D EN^VALM2($G(XQORNOD(0)))
	I $D(VALMY) S IBXXV=0 F  S IBXXV=$O(VALMY(IBXXV)) Q:'IBXXV  D
	.S IBTRV=$P($G(^TMP("IBTRVDX",$J,$O(^TMP("IBTRV",$J,"IDX",IBXXV,0)))),"^",2)
	.D EN^VALM(IBTMPNM)
	.K IBAMT,IBAPR,IBADG,IBDA,IBDGCR,IBDGCRU1,IBDV,IBETYP,IBETYPD,IBI,IBICD,IBLCNT,IBSEL,IBT,IBTEXT,IBTNOD,IBTSAV,VAUTD
	.K IBAPEAL,IBCDFN,IBCNT,IBDEN,IBDENIAL,IBDENIAL,IBPARNT,IBPEN,IBPENAL,IBTCOD,IBTRDD,IBTRSV,IBTYPE,VAINDT,VA
	.D KVAR^VADPT
	.Q
	I '$D(IBFASTXT) D BLD^IBTRV
	S VALMBCK="R"
	Q
	;
EDIT(IBTEMP)	; -- Edit entries
	D EN^VALM2($G(XQORNOD(0)))
	N I,J,IBXX
	I $D(VALMY) D FULL^VALM1 S IBXX=0 F  S IBXX=$O(VALMY(IBXX)) Q:'IBXX  D
	.S IBTRV=$P($G(^TMP("IBTRVDX",$J,+$O(^TMP("IBTRV",$J,"IDX",IBXX,0)))),"^",2)
	.W !!,"Editing Entry #",IBXX,!
	.D EDIT^IBTRVD1(IBTEMP,1)
	S VALMBCK="R"
	D BLD^IBTRV
	Q
	;
CP	; -- change patient from within insurance reviews
	N VALMQUIT,IBDFN,IBY,IBTRNOLD
	D FULL^VALM1
	S IBDFN=DFN D PAT^IBCNSM
	I $D(VALMQUIT) S DFN=IBDFN
	S IBTRNOLD=IBTRN K IBTRN
	D TRAC^IBTRV
	I '$G(IBTRN) S DFN=IBDFN,IBTRN=IBTRNOLD
	S IBTRND=$G(^IBT(356,+IBTRN,0))
	D HDR^IBTRV,BLD^IBTRV
	S VALMBCK="R"
CPQ	Q

IBTRV2
IBTRV2	;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ; 19-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRV
	;
DA(IBTRN)	; -- Add Diagnosis
	; -- bld = non-zero means not from main tracking  entry.
	;
	N IBETYP
	D FULL^VALM1
	I IBETYP=2 D
	.I $P(IBTRND,"^",4) D ASK^SDCO4(+$P(IBTRND,"^",4)) K SDCOQUIT
	.I '$P(IBTRND,"^",4) W !!,"Can not add diagnosis to outpatient visits prior to Check-out.",! D PAUSE^VALM1
	I IBETYP=1 D EN^IBTRE3(IBTRN)
	I '$G(BLD) D DRG,BLD^IBTRV
	S VALMBCK="R"
	Q
	;
PROC(IBTRN,IBETYP,BLD)	; -- Add Procedures
	; -- bld = non-zero means not from main tracking  entry.
	;
	I '$G(BLD) D FULL^VALM1
	I IBETYP=2 W !!,"Outpatient Procedures should be entered using Add/Edit action in",!,"Appointment Management.",! D PAUSE^VALM1
	I IBETYP=1 D EN^IBTRE4(IBTRN)
	I '$G(BLD) D BLD^IBTRV
	S VALMBCK="R"
	Q
PROV(IBTRN,IBETYP,BLD)	; -- Add Procedures
	; -- bld = non-zero means not from main tracking  entry.
	;
	I '$G(BLD) D FULL^VALM1
	I IBETYP=1 D EN^IBTRE5(IBTRN)
	I IBETYP=2,$P(IBTRND,"^",4) D ASK^SDCO3(+$P(IBTRND,"^",4)) K SDCOQUIT
	I IBETYP=3 W !!,"Provider information for Prescriptions comes from the pharmacy package silly.",! D PAUSE^VALM1
	I IBETYP=4 W !!,"Provider information for Prosthetics comes from the prothetics package silly.",! D PAUSE^VALM1
	I '$G(BLD) D BLD^IBTRV
	S VALMBCK="R"
	Q
	;
DRG(IBTRN)	; -- entry point to compute drg
	;    generally called from ad or pr above caller does own rebuild
	N DIR,DA,DR,DIC,DIE,IBALOS,IBDRG,IBTRVD,DGPMCA,DX
	S DGPMCA=$P(^IBT(356,IBTRN,0),"^",5) Q:'DGPMCA
	;
	; -- can't compute drg if no primary(dxls) diagnosis
	S DX=$O(^IBT(356.9,"ATP",DGPMCA,1,0)) Q:'DX
	D DISPDRG(DGPMCA)
	;
	S DIR("?")="Answer 'Yes' to compute and store a new interim drg, answer 'No' to quit."
	S DIR("A")="Ready to compute New Interim DRG",DIR("B")="NO",DIR(0)="Y" D ^DIR K DIR
	I Y=1 D
	.S IBDRG=$$COMDRG(IBTRN) Q:+IBDRG<1
	.W !!,"DRG computes to: ",IBDRG,"  -  ",$G(^ICD(IBDRG,1,1,0))
	.;
	.S IBDA=$O(^IBT(356.93,"AMVD",DGPMCA,DT,0))
	.I +IBDA<1 D
	..K DD,DO
	..S X=IBDRG
	..S DIC="^IBT(356.93,",DIC(0)="L",DLAYGO=356.93
	..S DIC("DR")=".02////"_DGPMCA_";.03////"_DT
	..D FILE^DICN K DIC S IBDA=+Y
	.I +IBDA<1 Q
	.;
	.L +^IBT(356.93,IBDA):5 I '$T D LOCKED^IBTRCD1 Q
	.S DIE="^IBT(356.93,",DA=IBDA
	.S DR=".01////^S X=IBDRG;.01;S IBALOS=$$ALOS^IBTRV2(IBDRG,DT);.04//^S X=IBALOS;.05//^S X=$$DAYREM^IBTRV2(DGPMCA,IBALOS)"
	.D ^DIE W !
	.L -^IBT(356.93,+IBDA)
	Q
	;
DAYREM(DGPM,LOS)	; -- Compute days remaining
	N IBX,DIFF S IBX=LOS
	S DIFF=$$FMDIFF^XLFDT(DT,+$G(^DGPM(DGPM,0))) S:DIFF<0 DIFF=-DIFF
	S IBX=LOS-DIFF
	I IBX<0 S IBX=0
	Q IBX\1
	;
ALOS(X,Y)	; -- compute alos for drg for year
	;    input x = pointer to drg file
	;          y = date
	N IBDT,J
	S IBDT=0 F  S IBDT=$O(^IBE(356.5,"ADR",X,IBDT)) Q:'IBDT!(IBDT>Y)  D
	.S J=$O(^IBE(356.5,"ADR",X,IBDT,0))
	Q $P($G(^IBE(356.5,+$G(J),0)),"^",3)
	;
COMDRG(IBTRN)	; -- compute drg from tracking file
	;*********************************************************
	; -- needed variable
	;    SEX     = m or f
	;    AGE     = whole number 0-120
	;    ICDEXP  = patient died during this episode
	;    ICDTRS  = patient transfered to acute care facility
	;    ICDDMS  = patient had irregular discharge
	;    ICDDX(  = diagnosis codes
	;    ICDPRC( = procedure codes
	;*********************************************************
	N SEX,ICDEXP,ICDTRS,ICDDMS,ICDDX,ICDPRC,DX,PR,I,J,IBCNT,ICDMDC,ICDDRG
	S ICDDRG="",(ICDEXP,ICDTRS,ICDDMS,IBCNT)=0,DFN=$P(^IBT(356,IBTRN,0),"^",2)
	;
	S SEX=$P($G(^DPT(DFN,0)),U,2)
	S AGE=$$FMDIFF^XLFDT(DT,$P($G(^DPT(DFN,0)),U,3))\365.25
	S DGPMA=$P(^IBT(356,IBTRN,0),"^",5) G:'DGPMA COMDRGQ
	;
	S IBCNT=1,DX=0
	S ICDDX(1)=+$G(^IBT(356.9,+$O(^IBT(356.9,"ATP",DGPMA,+$O(^IBT(356.9,"ATP",DGPMA,0)),0)),0))
	F  S DX=$O(^IBT(356.9,"C",DGPMA,DX)) Q:'DX  S X=$G(^IBT(356.9,DX,0)) I $P(X,"^",4)=2 S IBCNT=IBCNT+1,ICDDX(IBCNT)=+X
	;
	S IBCNT=0,J=""
	F  S J=$O(^IBT(356.91,"APP",DGPMA,J)) Q:'J  S PR="" F  S PR=$O(^IBT(356.91,"APP",DGPMA,J,PR)) Q:'PR  S IBCNT=IBCNT+1,ICDPRC(IBCNT)=+$G(^IBT(356.91,PR,0))
	;
	I $D(ICDDX(1)) D ^ICDDRG
COMDRGQ	Q ICDDRG
	;
DISPDRG(DGPMCA)	; -- Display drg's
	N I,J,IBDRG
	W !!,"Current Interim DRGs on File:"
	S I=0,IBCNT=0 F  S I=$O(^IBT(356.93,"AMVD",DGPMCA,I)) Q:'I  S J=0 F  S J=$O(^IBT(356.93,"AMVD",DGPMCA,I,J)) Q:'J  D
	.S IBDRG=$G(^IBT(356.93,J,0))
	.W !?5,$$DAT1^IBOUTL($P(IBDRG,"^",3)),?16,+IBDRG," - ",$G(^ICD(+IBDRG,1,1,0))
	.S IBCNT=IBCNT+1
	I IBCNT<1 W !?5,"None on file."
	W !
	Q

IBTRV3
IBTRV3	;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ; 14-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRV
	;
ADNXT(IBTRN)	; -- Add next Hospital Review
	; -- Input  ibtrn = internal entry in claims tracking (356)
	;
	N IBETYP,IBTRTP,IBQUIT,IBDGPM,IBTRVDT,IBTRV,IBRDAY,IBMORE,IBSAME,IBSEL
	D FULL^VALM1
	S VALMBCK="R",IBQUIT=0
	S IBTRVDT=DT
	S IBETYP=$$TRTP^IBTRE1(IBTRN)
	I IBETYP>2 W !!,"This doesn't appear to be an admission or outpatient visit.",!,"I don't know how to review this.",! D PAUSE^VALM1 G ADNXTQ
	I IBETYP=2 D  I IBQUIT D PAUSE^VALM1 G ADNXTQ
	.S IBTDAY=1
	.S IBTRTP=50
	.I '$D(^IBT(356.1,"ATRTP",IBTRN,IBTRTP)) Q
	.W !!,"You have already entered a Review for this Outpatient Encounter.",!,"Use Quick Edit to Edit."
	.S IBQUIT=1
	.Q
	;
	; -- inpatient review type
	I IBETYP=1 S IBTRTP=15 I $D(^IBT(356.1,"ATRTP",IBTRN,15)) S IBTRTP=30
	S IBRDAY=$$RDAY^IBTRV31(IBTRN)
	;
INPT	D REV(IBTRN,IBTRTP)
	D:$G(IBSEL)'["^" EN^IBTRE3(IBTRN)
	D:$G(IBSEL)'["^" EN^IBTRE4(IBTRN)
	D:$G(IBSEL)'["^" EN^IBTRE5(IBTRN)
	D EDIT^IBTRVD1(".21////10;.21",1)
	G:$G(IBSEL)["^" ANOTHER
	I IBETYP'=1 G ADNXTQ
	;
ANOTHER	; -- ask if add another if no ask next review date/status
	S IBMORE=$$ASKMORE^IBTRV31()
	I IBMORE["^" D  G ADNXTQ
	.D EDIT^IBTRVD1("1.13////0;1.15////1;.2",1)
	.Q
	;
	; -- if yes ask set next review date ="" ask status
	I IBMORE D
	.D EDIT^IBTRVD1(".2///@",1) ;delete next review date
	.Q
	; -- if no g adnxtq
	I 'IBMORE S VALMBCK="R" D  G ADNXTQ
	.D EDIT^IBTRVD1("1.13////0;1.15;I 'X S Y=""@9"";.2//^S X=$$DAT1^IBOUTL($$NXTRVDT^IBTRV31(IBTRV));@9;1.17;S Y=""@99"";.2///@;@99",1)
	;
SAME	; -- ask if same
	S IBSAME=$$ASKSAME^IBTRV31()
	D EDIT^IBTRVD1("1.13////1;1.14////"_+IBSAME,1)
	;
	I IBSAME["^" G ADNXTQ
	;
	; -- if yes file / increment day ask status/clinical data g another
	I IBSAME D  G ANOTHER
	.S IBRDAY=IBRDAY+1
	.S IBTRTP=30
	.D MESS
	.D COPY^IBTRV31(IBTRV) ; after copy ibtrv will be value of new review
	.Q
	;
	; -- if no edit g another
	I 'IBSAME D  G INPT
	.S IBRDAY=IBRDAY+1
	.S IBTRTP=30
	;
ADNXTQ	Q
	;
REV(IBTRN,IBTRTP)	; -- Add review
	; -- input ibtrtp = tracking type code,
	;          ibtrn  = internal id of tracking entry
	I '$G(IBTRTP)!('$G(IBTRN)) W !!,"DUH, Nothing Added!" D PAUSE^VALM1 G REVQ ; only stupid programmers should get this message
	N IBQUIT,IBDGPMD,IBTRVDT
	S IBQUIT=0,IBTRVDT=$$RDT^IBTRV31(IBTRN)
	;
	I IBTRTP=30 D  G:IBQUIT REVQ
	.I '$D(^IBT(356.1,"ATRTP",IBTRN,15)) W !!,"There must be an admission review first" S IBQUIT=1 Q
	.Q
	;
	; -- reviews after discharge date don't make sense
	S IBDGPMD=$P($G(^DGPM(+$P(^IBT(356,IBTRN,0),"^",5),0)),"^",17)
	; finish this here
	;
	D PRE^IBTUTL2(+$P(IBTRVDT,"."),IBTRN,IBTRTP)
	D MESS
	I '$D(IBTRV) G REVQ
	S VA200="" D INP^VADPT
	D @IBTRTP D EDIT^IBTRVD1(.DR,1)
REVQ	Q
	;
15	; -- Initial edit of admission review
	S DR=".03////1;D UNIT^IBTRV3(IBTRV);.01;.07////^S X=IBSPEC;.07;.23//INTERQUAL;I X'=1 S Y=""@20"";.04;.05;.08;.09;.06;I X=1 S Y=""@20"";12;.1;I 'X S Y=""@20"";.11;@20;11;"
	Q
	;
30	; -- Initial edit for continued stay
	S DR=".01;.03//^S X=$$RDAY^IBTRV31(IBTRN);D UNIT^IBTRV3(IBTRV);.07////^S X=$G(IBSPEC);.07;.23//INTERQUAL;I X'=1 S Y=""@20"";.05;.04;.08;.09;I $P(^IBT(356.1,DA,0),U,4),$P(^(0),U,5) S Y=""@20"";.12;13;"
	S DR=DR_".1;I 'X S Y=""@20"";.11;@20;11;"
	;S DR="[IBTRV NEW CONT]"
	Q
	;
50	; -- outpatient review
	D 15
	Q
	;
UNIT(X)	; -- determine if specialty is a specialized unit
	;    input (review)
	;    output 1 if unit, 0 if not
	N Y,VAIN,VAINDT,VA200
	S IBUNIT=0,VA200=""
	I '$D(DA),$G(IBTRV) N DA S DA=IBTRV
	S VAINDT=$$VDT(IBTRN,DA),VA200="" D INP^VADPT
	I $P(VAIN(3),"^",2)["ICU"!$P(VAIN(3),"^",2)["CCU" S IBUNIT=1
	S IBSPEC=$P(VAIN(3),U),IBPROV=$P(VAIN(2),U),IBATD=$P(VAIN(11),U)
	Q
	;
INSURD(X)	; -- determine if this is tracked as an ins. claim
	Q +$P(^IBT(356,+$P(^IBT(356.1,X,0),"^",2),0),"^",24)
	;
VDT(IBTRN,IBTRV)	; compute vaindt for day of review
	N IBX,DAY
	S IBX=$P(^IBT(356,+IBTRN,0),"^",6)+.14 ; midnight of admission day
	I $G(IBTRV) S DAY=$P($G(^IBT(356.1,+IBTRV,0)),"^",3)
	I $G(DAY)>1 S IBX=$$FMADD^XLFDT(IBX,DAY-1)+.24 ; midnight of review day (day1 = admission day)
	Q IBX
	;
MESS	; -- add message
	W:IBTRTP=30 !!,"Adding a Continued Stay Review for Review Day ",$G(IBRDAY),".",!
	W:IBTRTP=15 !!,"Adding an Admission Review",!
	W:IBTRTP=50 !!,"Adding an Outpatient Visit Review",!
	Q

IBTRV31
IBTRV31	;ALB/AAS - CLAIMS TRACKING -  REVIEW ACTIONS ; 14-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G EN^IBTRV
	;
RDAY(IBTRN)	; -- compute next day for review
	N X,IBDAY S IBDAY=1
	I $O(^IBT(356.1,"ATRTP",IBTRN,15,0)) S IBDAY=2
	I $O(^IBT(356.1,"ATRTP",IBTRN,30,0)) D  S IBDAY=-$O(X(""))+1 S:IBDAY<2 IBDAY=2
	.S X=0
	.F  S X=$O(^IBT(356.1,"ATRTP",IBTRN,30,X)) Q:'X  I $P($G(^IBT(356.1,X,0)),"^",3)'="" S X(-$P(^IBT(356.1,X,0),"^",3))=""
	S:IBDAY<1 IBDAY=1
	;
	Q IBDAY
	;
RDT(IBTRN)	; -- Compute next review date
	N IBV,IBTRVDT
	S IBV=$O(^IBT(356.1,"ATIDT",IBTRN,"")),IBTRVDT=""
	I 'IBV S IBTRVDT=DT
	I IBV S:IBV<1 IBV=-IBV S IBTRVDT=$$FMADD^XLFDT(IBV,1)
	Q IBTRVDT
	;
ASKMORE()	; -- ask if addmore review
	N DIR,DIROUT,DUOUT,DTOUT,X,Y
	S DIR(0)="Y",DIR("A")="Add Next Review",DIR("B")="YES"
	S DIR("?")="Answer 'Yes' if you want to continue adding the review for the next day or answer 'No' if you are done for now."
	D ^DIR
	I $D(DIRUT)!($D(DUOUT))!($D(DTOUT)) S Y="^"
	Q $G(Y)
	;
ASKSAME()	; -- ask if next review is same as the last
	N DIR,DIROUT,DUOUT,DTOUT,X,Y
	S DIR(0)="Y",DIR("A")="Is next Review exactly the Same",DIR("B")="YES"
	S DIR("?")="Answer 'Yes' if you want the next review to be exactly the same (I'll update the day for review automatically) or answer 'No' if you wish to edit the review now."
	D ^DIR
	I $D(DIRUT)!($D(DUOUT))!($D(DTOUT)) S Y="^"
	Q $G(Y)
	;
COPY(IBTSAV)	; -- Copy a Review
	; -- input ibtsav = internal id or review to copy
	;
	; -- WARNING:  This changes the value of IBTRV to the value
	;              of the new review added
	;
	I '$G(IBTSAV)!('$G(^IBT(356.1,+$G(IBTSAV),0))) W !!,"DUH, Nothing Added!" D PAUSE^VALM1 G COPYQ ; only stupid programmers get this message
	N I,J,X,Y,DA,DIC,DIE,DR,DIK,IBQUIT,IBTRTP,IBTRN,IBTRVD,IBTRVDT,NODE,IEN
	S IBQUIT=0
	S IBTRVD=$G(^IBT(356.1,IBTSAV,0))
	S IBTRVDT=$$FMADD^XLFDT(+IBTRVD,1)
	S IBTRN=$P(IBTRVD,"^",2)
	S IBTRTP=30 K IBTRV
	D PRE^IBTUTL2(IBTRVDT,IBTRN,IBTRTP)
	I '$D(IBTRV) G COPYQ
	I '$G(IBRDAY) S IBRDAY=$P(IBTRVD,"^",3)+1
	;
	; -- copy the old review into the new one
	S $P(^IBT(356.1,IBTRV,0),"^",3,24)=$G(IBRDAY)_"^"_$P(IBTRVD,"^",4,23)_"^"_IBTSAV
	S $P(^IBT(356.1,IBTRV,0),"^",22)=$O(^IBE(356.11,"ACODE",30,0))
	S $P(^IBT(356.1,IBTRV,1),"^",3,12)=$P(^IBT(356.1,+IBTSAV,1),"^",3,12)
	F NODE=12,13 I $D(^IBT(356.1,IBTSAV,NODE,0)) D
	.S ^IBT(356.1,IBTRV,NODE,0)=$G(^IBT(356.1,IBTSAV,NODE,0))
	.S IEN=0 F  S IEN=$O(^IBT(356.1,IBTSAV,NODE,IEN)) Q:'IEN  I $G(^IBT(356.1,IBTSAV,NODE,IEN,0))'="" S ^IBT(356.1,IBTRV,NODE,IEN,0)=$G(^IBT(356.1,IBTSAV,NODE,IEN,0))
	;
	S DIK="^IBT(356.1,",DA=IBTRV D IX1^DIK ; index set and kill logic
COPYQ	Q
	;
NXTRVDT(IBTRV)	; -- compute next review date
	N X,X1,X2
	S X=$P($G(^IBT(356.1,+$G(IBTRV),0)),"^",3)
	I $G(X)<1 S X=1
	I X>8 S X2=7 ;review every 7 days after 14
	I X<9 S X2=3 ;do 3,6,9 day reviews
	S X1=DT D C^%DTC
	Q X

IBTRVD
IBTRVD	;ALB/AAS - CLAIMS TRACKING - EXPANDED REVIEW SCREEN ; 02-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
%	;
EN	; -- main entry point for IBT EXPAND/EDIT REVIEW from menus
	K XQORS,VALMEVL,IBTRV,IBTRN,DFN,IBTRC,IBTRD
	I '$D(IBTRV) G ^IBTRV
	D EN^VALM("IBT EXPAND/EDIT REVIEW")
	Q
	;
HDR	; -- header code
	D PID^VADPT
	S VALMHDR(1)="Expanded Review for: "_$$PT^IBTUTL1(DFN)_"   ROI:"_$$EXPAND^IBTRE(356,.31,$P(^IBT(356,IBTRN,0),"^",31))
	S VALMHDR(2)="                for: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^")_" on "_$$DAT1^IBOUTL(+IBTRVD)
	Q
	;
INIT	; -- init variables and list array
	N IBTRND,IBTRVD,IBTRVD1,IBTRTP,VAIN,VAINDT
	K VALMQUIT
	S VALMCNT=0,VALMBG=1
	D BLD,HDR
	Q
	;
BLD	; -- build dispaly
	K ^TMP("IBTRVD",$J),^TMP("IBTRVDDX",$J)
	S IBTRND=$G(^IBT(356,IBTRN,0))
	S IBTRVD=$G(^IBT(356.1,+IBTRV,0))
	S IBTRVD1=$G(^IBT(356.1,+IBTRV,1))
	S IBTRTP=$$TRTP^IBTRV(IBTRV)
	F I=1:1:28 D BLANK^IBTRED(.I)
	D KILL^VALM10()
	S VALMCNT=28
	D ^IBTRVD0,COMMENT,CLIN
	Q
	;
	;
CLIN	; -- Clinical info plus DRG/los information
	N OFFSET,START,DGPM,IBDT,IBDR
	S START=17,OFFSET=45
	;D SET^IBCNSP(START,OFFSET," Clinical Information ",IORVON,IORVOFF)
	D CLIN1^IBTRED0
	Q:$$TRTP^IBTRE1(IBTRN)>1
	S DGPM=+$P(^IBT(356,IBTRN,0),"^",5)
	S IBDT=0 F  S IBDT=$O(^IBT(356.93,"AMVD",+DGPM,IBDT)) Q:'IBDT  S IBDR=$O(^IBT(356.93,"AMVD",+DGPM,IBDT,0))
	S IBDR=$G(^IBT(356.93,+$G(IBDR),0))
	D SET^IBCNSP(START+6,OFFSET,"   Interim DRG: "_$S(+IBDR:+IBDR_" - "_$G(^ICD(+IBDR,1,1,0))_" on "_$$DAT1^IBOUTL($P(IBDR,"^",3)),1:""))
	D SET^IBCNSP(START+7,OFFSET," Estimate ALOS: "_$S(+IBDR:$J($P(IBDR,"^",4),6,1),1:""))
	D SET^IBCNSP(START+8,OFFSET,"Days Remaining: "_$S(+IBDR:$J($P(IBDR,"^",5),6),1:""))
	Q
	;
COMMENT	; -- Display Comment
	N OFFSET,START,I,IBLCNT
	S START=27,OFFSET=2
	D SET^IBCNSP(START,OFFSET," Review Comments ",IORVON,IORVOFF)
	S (IBLCNT,IBI)=0 F  S IBI=$O(^IBT(356.1,IBTRV,11,IBI)) Q:IBI<1  D
	.S IBLCNT=IBLCNT+1
	.D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^IBT(356.1,IBTRV,11,IBI,0)),1,80))
	Q
	;
HELP	; -- help code
	S X="?" D DISP^XQORM1 W !!
	Q
	;
EXIT	; -- exit code
	K VALMQUIT,IBTRV
	D CLEAN^VALM10,FULL^VALM1
	Q

IBTRVD0
IBTRVD0	;ALB/AAS - CLAIMS TRACKING - EXPANDED REVIEW SCREEN ; 02-JUL-1993
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	I '$G(IBTRV) G ^IBTRV
	D VISIT,REVIEW,STATUS,CRITER,UNIT
	Q
	;
VISIT	; -- Visit information
	N OFFSET,START,VAIN,VAINDT,IBETYP
	S VAINDT=$$VNDT^IBTRV(IBTRV)
	S VA200="" D INP^VADPT
	S IBETYP=$G(^IBE(356.6,+$P(IBTRND,"^",18),0))
	S START=1,OFFSET=2
	D VISIT^IBTRED
	Q
	;
REVIEW	; -- Review Information
	N OFFSET,START,IBI,IBTRC,IBTRCD
	S START=1,OFFSET=45
	; -- get related review information
	S (IBTRC,IBI)=0 F  S IBI=$O(^IBT(356.2,"AD",IBTRV,IBI)) Q:'IBI  S IBTRC=IBI
	S IBTRCD=$G(^IBT(356.2,+IBTRC,0))
	D SET^IBCNSP(START,OFFSET," Review Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"    Review Type: "_$P($G(^IBE(356.11,+$P(IBTRVD,"^",22),0)),"^",1))
	D SET^IBCNSP(START+2,OFFSET,"    Review Date: "_$$DAT1^IBOUTL(+IBTRVD,"2P"))
	D SET^IBCNSP(START+3,OFFSET,"      Specialty: "_$P($G(^DIC(45.7,+$P(IBTRVD,"^",7),0)),"^"))
	D SET^IBCNSP(START+4,OFFSET,"    Methodology: "_$$EXPAND^IBTRE(356.1,.23,$P(IBTRVD,"^",23)))
	D SET^IBCNSP(START+5,OFFSET,"    Ins. Action: "_$P($G(^IBE(356.7,+$P(IBTRCD,"^",11),0)),"^"))
	Q
	;
UNIT	; -- Special unit information
	N OFFSET,START
	S START=8,OFFSET=45
	D SET^IBCNSP(START,OFFSET," Special Unit Information ",IORVON,IORVOFF)
	I IBTRTP=40 D SET^IBCNSP(START+1,OFFSET," D/C Screen Met: "_$$SI($P(IBTRVD,"^",13))) Q
	D SET^IBCNSP(START+1,OFFSET,"Special Unit SI: "_$$SI($P(IBTRVD,"^",8)))
	D SET^IBCNSP(START+2,OFFSET,"Special Unit IS: "_$$SI($P(IBTRVD,"^",9)))
	Q
	;
STATUS	; -- Status/user information
	N OFFSET,START
	S START=17,OFFSET=2
	D SET^IBCNSP(START,OFFSET," Status Information ",IORVON,IORVOFF)
	D SET^IBCNSP(START+1,OFFSET,"   Review Status: "_$$EXPAND^IBTRE(356.1,.21,$P(IBTRVD,"^",21)))
	D SET^IBCNSP(START+2,OFFSET,"      Entered by: "_$P($G(^VA(200,+$P(IBTRVD1,"^",2),0)),"^"))
	D SET^IBCNSP(START+3,OFFSET,"      Entered on: "_$$DAT1^IBOUTL($P(IBTRVD1,"^",1),"2P"))
	D SET^IBCNSP(START+4,OFFSET,"    Completed by: "_$P($G(^VA(200,+$P(IBTRVD1,"^",4),0)),"^"))
	D SET^IBCNSP(START+5,OFFSET,"    Completed on: "_$$DAT1^IBOUTL($P(IBTRVD1,"^",3),"2P"))
	I $P(IBTRVD,"^",21)<3 D SET^IBCNSP(START+6,OFFSET,"Next Review Date: "_$$DAT1^IBOUTL($P(IBTRVD,"^",20),"2P")) G STATQ
STATQ	Q
	;
CRITER	; -- Criteria information
	N OFFSET,START,IBD,IBNAR,IBNARD
	S START=8,OFFSET=2
	D SET^IBCNSP(START,OFFSET," Criteria Information ",IORVON,IORVOFF)
	I IBTRTP D @IBTRTP
	Q
10	; -- precert review
15	; -- admission review
20	; -- urgent adm. review
50	;
60	;
65	;
70	;
80	;
85	;
90	;
100	;
	;
	D SET^IBCNSP(START+1,OFFSET," Severity of Ill: "_$E($$SI($P(IBTRVD,"^",4)),1,22))
	D SET^IBCNSP(START+2,OFFSET,"Intensity of Svc: "_$E($$SI($P(IBTRVD,"^",5)),1,22))
	D SET^IBCNSP(START+3,OFFSET,"    Criteria Met: "_$$EXPAND^IBTRE(356.1,.06,$P(IBTRVD,"^",6)))
	D SET^IBCNSP(START+4,OFFSET," Prov. Intervwed: "_$$EXPAND^IBTRE(356.1,.1,$P(IBTRVD,"^",10)))
	D SET^IBCNSP(START+5,OFFSET," Dec. Influenced: "_$$EXPAND^IBTRE(356.1,.11,$P(IBTRVD,"^",11)))
	D SET^IBCNSP(START+6,OFFSET,"Non-Acute Reason: ")
	S IBD=5
	;
	S IBNAR=0 F  S IBNAR=$O(^IBT(356.1,+IBTRV,12,IBNAR)) Q:'IBNAR  D
	.S IBNARD=$G(^IBT(356.1,+IBTRV,12,IBNAR,0))
	.S IBD=IBD+1 Q:IBD>8
	.D SET^IBCNSP(START+IBD,OFFSET,"Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P($G(^(0)),"^"))
	Q
	;
30	; -- concurrent review
	D SET^IBCNSP(START+1,OFFSET,"    Day of Review: "_$J($P(IBTRVD,"^",3),2))
	D SET^IBCNSP(START+2,OFFSET,"  Severity of Ill: "_$E($$SI($P(IBTRVD,"^",4)),1,22))
	D SET^IBCNSP(START+3,OFFSET," Intensity of Svc: "_$E($$SI($P(IBTRVD,"^",5)),1,22))
	D SET^IBCNSP(START+4,OFFSET," Dschg Screen Met: "_$E($$SI($P(IBTRVD,"^",12)),1,22))
	D SET^IBCNSP(START+5,OFFSET," Acute Care Dschg: "_$$EXPAND^IBTRE(356.1,1.17,$P(IBTRVD1,"^",17)))
	D SET^IBCNSP(START+6,OFFSET," Non-Acute Reason: ")
	S IBD=5
	;
	S IBNAR=0 F  S IBNAR=$O(^IBT(356.1,+IBTRV,13,IBNAR)) Q:'IBNAR  D
	.S IBNARD=$G(^IBT(356.1,+IBTRV,13,IBNAR,0))
	.S IBD=IBD+1 Q:IBD>8
	.D SET^IBCNSP(START+IBD,OFFSET," Non-Acute Reason: "_$P($G(^IBE(356.4,+IBNARD,0)),"^",2)_" - "_$P($G(^(0)),"^"))
	Q
40	; -- discharge review
	D SET^IBCNSP(START+1,OFFSET,"Discharge Screen: "_$$SI($P(IBTRVD,"^",12)))
	Q
	;
SI(X)	; -- output the name value of a si/is
	;    input the pointer to 356.3
	N Y S Y=$G(^IBE(356.3,+$G(X),0))
	;  Q $P($G(^IBE(356.3,+$G(X),0)),"^")
	Q $P(Y,"^",3)_$S(Y'="":" - ",1:"")_$P(Y,"^")

IBTRVD1
IBTRVD1	;ALB/AAS - CLAIMS TRACKING REVIEW EDIT ; 06-JUL-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
%	G ^IBTRV
	;
QE	; -- Review Criteria edit
	N IBXX,VALMY,DA,DR,DIC,DIE
	D QE1^IBTRV1
	D BLD^IBTRVD
	S VALMBCK="R"
	Q
	;
NX(IBTMPNM,BLD)	; -- edit next template
	N IBXX,VALMY,IBTRC
	D EN^VALM(IBTMPNM)
	I '$D(IBFASTXT),'$G(BLD) D BLD^IBTRVD
	S VALMBCK="R"
	Q
	;
EDIT(DR,BLD)	; -- edit entry point for claims tracking reviews
	; -- Input   IBTEMP = template name or dr string
	;               BLD = any non-zero value if calling routine is doing own
	;                      rebuild
	;
	N IBDIF,DA,DIC,DIE,DIR,X,Y
	D FULL^VALM1 W !
	L +^IBT(356.1,+IBTRV):5 I '$T D LOCKED^IBTRCD1 G EDITQ
	D SAVE
	S DIE="^IBT(356.1,",DA=IBTRV
	D ^DIE K DA,DR,DIC,DIE
	D COMP
	I '$D(IBCON) D CON K IBCON
	I IBDIF=1 D UPDATE,BLD^IBTRVD:'$G(BLD)
	L -^IBT(356.1,+IBTRN)
EDITQ	K ^TMP($J,"IBT")
	S VALMBCK="R"
	Q
	;
SAVE	; -- Save the global before editing
	K ^TMP($J,"IBT")
	S ^TMP($J,"IBT",356.1,IBTRV,0)=$G(^IBT(356.1,IBTRV,0))
	S ^TMP($J,"IBT",356.1,IBTRV,1)=$G(^IBT(356.1,IBTRV,1))
	S ^TMP($J,"IBT",356.1,IBTRV,11,0)=$G(^IBT(356.1,IBTRV,11,0))
	Q
	;
COMP	; -- Compare before editing with globals
	S IBDIF=0
	I $G(^IBT(356.1,IBTRV,0))'=$G(^TMP($J,"IBT",356.1,IBTRV,0)) S IBDIF=1 Q
	I $G(^IBT(356.1,IBTRV,1))'=$G(^TMP($J,"IBT",356.1,IBTRV,1)) S IBDIF=1 Q
	I $G(^IBT(356.1,IBTRV,11,0))'=$G(^TMP($J,"IBT",356.1,IBTRV,11,0)) S IBDIF=1 Q
	Q
	;
UPDATE	; -- enter date and user if editing has taken place
	;    entry locked by edit, locks not needed here
	S DIE="^IBT(356.1,",DA=IBTRV
	S DR="1.03///NOW;1.04////"_DUZ
	D ^DIE K DA,DR,DIC,DIE
	Q
	;
CON	; -- consistency checker for hospital reviews
	N I,J,X,Y,DA,DR,DIC,DIE,IBI,IBTRTP,IBDEL
	S IBCON=1
	S IBTRTP=$P($G(^IBE(356.11,+$P($G(^IBT(356.1,IBTRV,0)),"^",22),0)),"^",2)
	; -- if admission review
	I IBTRTP=15 D
	.S X=$G(^IBT(356.1,IBTRV,0))
	.I '$P(X,"^",4),'$P(X,"^",5),'$P(X,"^",6),'$O(^IBT(356.1,IBTRV,12,0)) W !!,*7,"Warning: Admission Criteria does NOT appear to be met but Reason for",!,"Non Acute Admission Missing." D EDIT("12",1)
	.I $P(X,"^",4)!($P(X,"^",5))!($P(X,"^",6)) I $O(^IBT(356.1,IBTRV,12,0)) W !!,*7,"Warning: Admission Criteria appears to be met but has Reason for ",!,"Non Acute Admission." D EDIT("12",1)
	.Q
	; -- if cont. stay review
	I IBTRTP=30 D
	.S X=$G(^IBT(356.1,IBTRV,0))
	.I '$P(X,"^",4),'$P(X,"^",5),$P(X,"^",12),'$O(^IBT(356.1,IBTRV,13,0)) W !!,*7,"Warning: Acute Care Criteria does NOT appear to be met but Reason for",!,"Non Acute Days Missing." D EDIT(13,1)
	.I $P(X,"^",4)!($P(X,"^",5)) I $O(^IBT(356.1,IBTRV,13,0)) W !!,*7,"Warning: Acute Care Criteria appears to be met but has Reason for ",!,"Non Acute Days." D EDIT(13,1)
	.Q
	; -- check Next Review Dates
	S IBI=0 F  S IBI=$O(^IBT(356.1,"C",IBTRN,IBI)) Q:'IBI  I IBI'=IBTRV D
	.I $P($G(^IBT(356.1,IBI,0)),"^",20) S IBI(IBI)=""
	.Q
	I $O(IBI(0)) D ASKDEL I IBDEL D
	.I $P(^IBT(356.1,IBTRV,0),U,20) D
	..W !,"   There are other reviews for this admission with a next review date"
	..W !,"   specified.  Generally, only the last review for an admission should"
	..W !,"   have a next review date.  Please check the reviews for this case and"
	..W !,"   delete all unnecessary 'next review dates'."
	..H 3 Q
	.I $O(IBI(+$O(IBI(0)))) D
	.;S IBI=0 F  S IBI=$O(IBI(IBI)) Q:'IBI  S DA=IBI,DR=".2///@",DIE="^IBT(356.1," D ^DIE
	.;W !,"Next Review Dates have all been deleted, except for this review"
	.Q
	Q
	;
ASKDEL	; -- ask if okay to delete next review dates
	S IBDEL=1
	Q
	;
IA(IBTRV,BLD)	; -- Insurance action
	; -- add/edit communications in bkgrnd for a review
	;    quick edit a communications entry.
	;
	I '$G(BLD) D BLD^IBTRVD
	S VALMBCK="R"
	Q

IBTUTL
IBTUTL	;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ; 21-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADM(DGPMCA,VAINDT,RANDOM,IBVSIT)	; -- set up info for adding a current admission
	; -- Input DGPMCA   = pointer for an admission to patient movement file
	;          VAINDT   = optional date for admission (default is dt)
	;          RANDOM   = whether or not this is a random sample
	;          IBVSIT   = Pointer to visit file (optional)
	;
	N DA,DIC,DIE,DR,X,VAIN,VA,IBSCHED,IBSCH
	I '$G(VAINDT) K VAINDT
	I '$G(DGPMCA) S VA200="" D INP^VADPT S DGPMCA=VAIN(1)
	Q:DGPMCA=""
	S RANDOM=$S($G(RANDOM):1,1:0)
	S X=$O(^IBT(356,"ADM",DFN,DGPMCA,0)) I X S IBTRN=X G ADMQ
	S IBADMDT=$P(^DGPM(DGPMCA,0),"^")
	;S IBETYP=+$O(^IBE(356.6,"B","INPATIENT ADMISSION",0))
	S IBETYP=+$O(^IBE(356.6,"AC",1,0))
	S (IBSCH,IBTRN)=$O(^IBT(356,"ASCH",+$$SCH^IBTRKR2(DGPMCA),0))
	D:'IBTRN ADDT
	I IBTRN<1 G ADMQ
	S DA=IBTRN,DIE="^IBT(356,"
	L +^IBT(356,+IBTRN):10 I '$T G ADMQ
	S DR=$$ADMDR(IBADMDT,IBETYP,DGPMCA,RANDOM)
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
	;
	S IBSCHED=$S($P(^DGPM(DGPMCA,0),U,25):10,1:20)
	;
	; -- if random sample add hospital review
	I $P(^IBT(356,IBTRN,0),U,25) D PRE^IBTUTL2(DT,IBTRN,IBSCHED)
	;
	; -- if scheduled admission entry converted to admission, don't add
	;    second insurance review
	I $G(IBSCH) G ADMQ
	;
	; -- if insured add ins review
	I $P(^IBT(356,IBTRN,0),U,24) D COM^IBTUTL3(DT,IBTRN,IBSCHED,$G(IBTRV))
	;
ADMQ	Q
	;
ADDT	; -- add new entry to tracking, ibt(356
	;
	N %DT,DD,DO,DIC,DR,DIE,DLAYGO,IBTR1
	L +^IBT(356,0):10 I '$T S Y="-1^IB014" G ADDTQ
	S X=$P($G(^IBT(356,0)),"^",3)+1 L -^IBT(356,0) I 'X S Y="-1^IB015" G ADDTQ
	K DD,DO,DIC,DR S DIC="^IBT(356,",DIC(0)="L",DLAYGO=356
	F X=X:1 L:$D(IBTR1) -^IBT(356,IBTR1) I X>0,'$D(^IBT(356,X)) S IBTR1=X L +^IBT(356,IBTR1):1 I $T,'$D(^IBT(356,X)) S DINUM=X,X=($$IBSITE())_X D FILE^DICN I +Y>0 Q
	L -^IBT(356,IBTR1)
ADDTQ	S IBTRN=+Y,IBNEW=1
	Q
	;
OTH(DFN,IBETYP,IBTDT)	; -- add miscellaneous entries, care may not be in data base
	; -- input   dfn  := patient pointer to 2
	;          ibetyp := pointer to type entry in 356.6
	;          ibtdt  := episode date
	;
	N X,Y,DA,DR,DIE,DIC
	S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G OTHQ
	D ADDT
	I IBTRN<1 G OTHQ
	S DA=IBTRN,DIE="^IBT(356,"
	S DR=".02////"_$G(DFN)_";.06////"_+$G(IBTDT)_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD(IBETYP,IBTDT)
	L +^IBT(356,+IBTRN):10 I '$T G OTHQ
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
OTHQ	Q
	;
IBSITE()	; -- calculate site from site parameters
	; --  output ibsite = station number
	;
	N IBFAC,IBSITE
	D SITE^IBAUTL
	Q IBSITE
	;
ADMDR(IBADMDT,IBETYP,DGPMCA,RANDOM)	; -- set up dr string for admissions
	S DR=""
	I '$G(IBETYP)!'$G(IBADMDT) G ADMDRQ
	S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.05////"_$G(DGPMCA)_";.06////"_+$G(IBADMDT)_";.18////"_$G(IBETYP)_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD(IBETYP,$G(IBADMDT)) D
	.I $G(DGPMCA),$G(RANDOM) S DR=DR_";.25////1" Q
ADMDRQ	Q DR
	;
EABD(IBETYP,IBTDT)	; -- compute earliest auto bill date: date entered plus days delay for event type
	; -- input   IBETYPE = pointer to type of entry file
	;            IBTDT   = episode date, if not passed in uses DT
	;
	N X,X1,X2,Y,IBETYPD S Y="" I '$G(IBETYP) G EABDQ
	S IBETYPD=$G(^IBE(356.6,+IBETYP,0)) I '$G(IBTDT) S IBTDT=DT
	I '$P(IBETYPD,"^",4) G EABDQ ; automated billing turned off
	S X2=+$P(IBETYPD,"^",6) ;set earliest autobill date to entered date plus days delay
	S X1=IBTDT D C^%DTC S Y=X\1
EABDQ	Q Y
	;
BILL(IBTRN)	;check if event is billable, return EABD if it is
	N X,Y,Z,IBTRND S (X,Y)="" S IBTRND=$G(^IBT(356,+$G(IBTRN),0)) I IBTRND="" G BILLQ
	;
	; -- billed and bill not cancelled and not inpt interim first or continuous
	I +$P(IBTRND,U,11) S Z=$$BILLED^IBCU8(IBTRN),Y=$P(Z,U,2) I +Z,'Y G BILLQ
	;
	; -- special type (not riem. ins), not billable, inactive
	I +$P(IBTRND,U,12)!(+$P(IBTRND,U,19))!('$P(IBTRND,U,20)) G BILLQ
	I 'Y S Y=+$G(^IBT(356,+$G(IBTRN),1)) I 'Y S Y=DT
	S X=$$EABD(+$P(IBTRND,U,18),Y)
BILLQ	Q X
	;
STOBIL	Q
KTOBIL	Q

IBTUTL1
IBTUTL1	;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ; 21-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
OPT(DFN,IBETYP,IBTDT,ENCTR,IBRMARK,IBVSIT)	; -- add outpatient care entries
	; -- input   dfn  := patient pointer to 2
	;          ibetyp := pointer to type entry in 356.6
	;          ibtdt  := episode date
	;          enctr  := pointer to opt. encounter file (optional)
	;        ibrmark  := text of reason not billable (optional)
	;         ibvsit  := pointer to visit file (optional)
	;
	N X,Y,DA,DR,DIE,DIC
	I $G(IBETYP) S IBETYP=$O(^IBE(356.6,"AC",2,0))
	S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G OPTQ
	D ADDT^IBTUTL
	I '$G(ENCTR) I $P($G(^DPT(DFN,"S",IBTDT,0)),"^",20) S ENCTR=$P(^(0),"^",20)
	S DA=IBTRN,DIE="^IBT(356,"
	I IBTRN<1 G OPTQ
	L +^IBT(356,+IBTRN):10 I '$T G OPTQ
	S DR=".02////"_$G(DFN)_";.03////"_$G(IBVSIT)_";.04////"_$G(ENCTR)_";.06////"_+IBTDT_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
	I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
OPTQ	Q
	;
REFILL(DFN,IBETYP,IBTDT,IBRXN,IBRXN1,IBRMARK)	; -- add refill
	; -- input   dfn   := patient pointer to 2
	;          ibetyp  := pointer to type entry in 356.6
	;          ibtdt   := episode date (refill date)
	;          ibrxn   := pointer to 52
	;          ibrxn1  := refill multiple entry
	;          ibrmark := non billable reason if unsure
	;
	N X,Y,DA,DR,DIE,DIC
	S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G REFILLQ
	D ADDT^IBTUTL
	I IBTRN<1 G REFILLQ
	S DA=IBTRN,DIE="^IBT(356,"
	L +^IBT(356,+IBTRN):10 I '$T G REFILLQ
	S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.08////"_IBRXN_";.1////"_IBRXN1_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
	I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
REFILLQ	Q
	;
PRO(DFN,IBTDT,IBPRO,IBRMARK)	; -- add prosthetic entries
	; -- input   dfn  := patient pointer to 2
	;          ibetyp := pointer to type entry in 356.6
	;          ibtdt  := episode date
	;
	N X,Y,DA,DR,DIE,DIC,IBETYP
	;S IBETYP=$O(^IBE(356.6,"ACODE",4,0))
	S IBETYP=$O(^IBE(356.6,"AC",3,0)) ;prosthetics type
	S X=$O(^IBT(356,"APRO",IBPRO,0)) I X S IBTRN=X G PROQ
	D ADDT^IBTUTL
	I IBTRN<1 G PROQ
	S DA=IBTRN,DIE="^IBT(356,"
	L +^IBT(356,+IBTRN):10 I '$T G PROQ
	S DR=".02////"_$G(DFN)_";.06////"_+IBTDT_";.09////"_IBPRO_";.18////"_IBETYP_";.2////1;.24////"_$$INSURED^IBCNS1(DFN)_";1.01///NOW;1.02////"_DUZ_";.17////"_$$EABD^IBTUTL(IBETYP)
	I $G(IBRMARK)'="" S DR=DR_";.19///"_IBRMARK
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
PROQ	Q
	;
PT(DFN)	; -- format patient name - last 4 for output
	S Y="" I '$G(DFN) G PTQ
	I '$D(VA("PID")) D PID^VADPT
	S Y=$E($P($G(^DPT(DFN,0)),"^"),1,20)_" "_$E($G(^(0)),1)_VA("BID")
PTQ	Q Y
	;
PRODATA(IBDA)	; -- return data from prosthetics file
	N IBDA0,DA,DIC,DIE,DR
	K IBRMPR ; only one array at a time
	I '$G(IBDA) G PRODAQ
	S IBDA0=$G(^RMPR(660,+IBDA,0))
	G:IBDA0="" PRODAQ
DIQ	S DIC="^RMPR(660,",DR=".01;1:5;7;10;12:17;24"
	S DIQ="IBRMPR",DIQ(0)="E",DA=IBDA
	D EN^DIQ1
PRODAQ	Q

IBTUTL2
IBTUTL2	;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ; 21-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADDR(IBTRVDT,IBTRN)	; -- add new entry to reviews file, ibt(356.1
	; -- Input  IBTRVDT :=  Review date (in internal fileman format)
	;             IBTRN :=  pointer to tracking module
	;
	N %DT,DD,DO,DIC,DR,DIE,DLAYGO
	S DIC="^IBT(356.1,",DIC(0)="L",DLAYGO=356.1
	S DIC("DR")=".02////"_IBTRN
	S X=IBTRVDT D FILE^DICN
	S IBTRV=+Y,IBNEW=1
ADDRQ	Q
	;
PRE(IBTRVDT,IBTRN,IBX)	; -- add a  review
	; -- Input  IBTRVDT :=  Review date (in internal fileman format)
	;             IBTRN :=  pointer to tracking module
	;               IBX :=  code for review
	;
	N X,Y,DA,DR,DIE,DIC,IBXIFN,IBNRVDT,IBDAYS
	D ADDR(IBTRVDT,IBTRN)
	I IBTRV<1 G PREQ
	;
	; -- don't differentiate between scheduled and unscheduled
	I IBX=10!(IBX=20) S IBX=15 ; just admission review
	;
	S IBDAYS=$S(IBX=15:1,1:$$RDAY^IBTRV31(IBTRN))
	S:'$G(IBX) IBX=30 S IBXIFN=$O(^IBE(356.11,"ACODE",IBX,0))
	;S X1=IBTRVDT,X2=$S(IBX=15:3,1:"") I X2 D C^%DTC S IBNRVDT=X
	S DA=IBTRV,DIE="^IBT(356.1,"
	L +^IBT(356.1,+IBTRV):10 I '$T G PREQ
	S DR=".19////1;.03////^S X=$G(IBDAYS);.2////^S X=$$NXTRVDT^IBTRV31(IBTRV);.21////1;.22////"_IBXIFN_";1.01///NOW;1.02////"_DUZ
	D ^DIE K DA,DR,DIE
	L -^IBT(356.1,+IBTRV)
PREQ	Q
	;
SCH(DFN,IBTDT,IBSCH)	; -- add scheduled admission entries
	; -- input   dfn  := patient pointer to 2
	;          ibtdt  := episode date
	;
	N X,Y,DA,DR,DIE,DIC
	;S IBETYP=+$O(^IBE(356.6,"B","SCHEDULED ADMISSION",0))
	S IBETYP=+$O(^IBE(356.6,"AC",5,0)) ;scheduled admission type
	S X=$O(^IBT(356,"APTY",DFN,IBETYP,IBTDT,0)) I X S IBTRN=X G SCHQ
	D ADDT^IBTUTL
	I IBTRN<1 G SCHQ
	S DA=IBTRN,DIE="^IBT(356,"
	I '$G(IBSCH) S X=0 F  S X=$O(^DGS(41.1,"B",DFN,X)) Q:'X  I $P(^DGS(41.1,+X,0),"^",2)=IBTDT S IBSCH=X Q
	L +^IBT(356,+IBTRN):5 I '$T G SCHQ
	S DR=$$ADMDR^IBTUTL(IBTDT,IBETYP,"",0)
	I $G(IBSCH) S DR=DR_";.32////"_IBSCH
	D ^DIE K DA,DR,DIE
	L -^IBT(356,+IBTRN)
	;
	; -- add required ins. action if insured
	I $P(^IBT(356,IBTRN,0),U,24) D COM^IBTUTL3(IBTDT,IBTRN,10)
SCHQ	Q

IBTUTL3
IBTUTL3	;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ; 21-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
ADDC(IBTRCDT,IBTRN)	; -- add new entry to reviews file, ibt(356.1
	; -- Input  IBTRVDT :=  Review date (in internal fileman format)
	;             IBTRN :=  pointer to tracking module
	;
	N %DT,DD,DO,DIC,DR,DIE,DLAYGO
	S DIC="^IBT(356.2,",DIC(0)="L",DLAYGO=356.2
	S DIC("DR")=".19////1;.02////"_$G(IBTRN)
	S X=IBTRCDT D FILE^DICN
	S IBTRC=+Y,IBNEW=1
ADDCQ	Q
	;
COM(IBTRCDT,IBTRN,IBX,IBTRV)	; -- add initial communication entry
	; -- Input  IBTRCDT :=  Communication date (in internal fileman format)
	;             IBTRN :=  pointer to tracking module
	;               IBX :=  code for type of contact (if null, will compute)
	;             IBTRV :=  pointer to initial review (if it exists)
	;
	N X,Y,DA,DR,DIE,DIC,IBXIFN,IBNXRV
	D ADDC(IBTRCDT,$G(IBTRN))
	;
	I $G(IBX) S IBXIFN=$O(^IBE(356.11,"ACODE",+IBX,0))
	I '$G(IBXIFN) S IBXIFN=$O(^IBE(356.11,"B",$$TYPE^IBTRC(+$G(IBTRC)),0))
	;
	S DA=IBTRC,DIE="^IBT(356.2,"
	S IBNXRV=DT
	I IBTRCDT>$$FMADD^XLFDT(DT,7) S IBNXRV=$$FMADD^XLFDT(IBTRCDT,-7)
	L +^IBT(356.2,+IBTRC):10 I '$T G COMQ
	S DR=".03////"_$G(IBTRV)_";.04////"_IBXIFN_";.05////"_DFN_";.24////"_IBNXRV_";1.01///NOW;1.02////"_DUZ
	D ^DIE K DA,DR,DIE
	L -^IBT(356.2,+IBTRC)
COMQ	Q
	;
DAY(X,X1,IBTRN)	; -- compute number of days approved for tracking id
	; -- if same date, difference = 1
	; -- input x  = beginning date (required)
	;          x1 = ending date (required)
	;       ibtrn = (optional) if defined will compute max days for episode
	;               and will not count discharge date
	N DIFF,IBCDT,IBBET,IBEND,IBMAX S DIFF=0
	I $E(X,1,7)'?7N G DAYQ
	I 'X1 S DIFF=1 G DAYQ
	I $E(X1,1,7)'?7N G DAYQ
	I X,$E(X,1,7)=$E(X1,1,7) S DIFF=1 G DAYQ
	I $G(IBTRN),$P($G(^IBT(356,+IBTRN,0)),"^",5) D
	.S IBCDT=$$CDT^IBTODD1(IBTRN)
	.S IBBEG=+IBCDT,IBEND=+$P(IBCDT,"^",2)\1 I IBEND="" S IBEND=DT
	.S IBMAX=$$FMDIFF^XLFDT(IBEND,IBBEG)
	.;I X1>IBEND S X1=IBEND
	.;I X<IBBEG S X=IBBEG
	S DIFF=$$FMDIFF^XLFDT(X1,X) I $G(IBCDT),$G(IBTRN) I $S('$P(IBCDT,"^",2):1,X1<($P(IBCDT,"^",2)\1):1,1:0) S DIFF=DIFF+1 ;add one if not include discharge date
	I $G(IBMAX),$P($G(IBCDT),"^",2),DIFF>IBMAX S DIFF=IBMAX
DAYQ	Q DIFF
	;
SCP(DFN)	; -- is patient sc, and percent
	N VAEL D ELIG^VADPT
	I '$G(VAEL(3)) S Y="NO"
	I $G(VAEL(3)) S Y=$P(VAEL(3),"^",2)_"%"
	Q Y
	;
OTB(DFN)	; -- did patient ever have other type of bill
	N I,J,Y S Y=""
	I '$O(^IBT(356,"ASPC",DFN,0)) G OTBQ
	S I=""
	F  S I=$O(^IBT(356,"ASPC",DFN,I)) Q:'I  D  ;S J="" F  S J=$O(^IBT(356,"ASPC",DFN,I,J)) Q:'J
	.S:Y'="" Y=Y_", "
	.S Y=$S(I=1:"TORT",I=2:"OWCP",I=3:"WORK COMP.",1:"OTHER")
	.; -- later add ability to find bills, dates, etc
OTBQ	Q Y
	;
MSG(DFN)	; -- set message for display in lower bar
	N Y,IBSCP,IBOTB S Y=""
	S IBSCP=$$SCP(DFN),IBOTB=$$OTB(DFN)
	S Y="Service Connected: "_IBSCP
	I IBOTB'="" S Y=Y_"   Previous Spec. Bills: "_IBOTB
MSGQ	Q Y
	;
ARRAY(IBTRC)	; -- see if other reviews have dates
	;
	I '$G(IBTRC) G ARRAYQ
	N I,IBTRN K ARRAY
	S IBTRN=$P($G(^IBT(356.2,+IBTRC,0)),"^",2) G:'IBTRN ARRAYQ
	S IBCNS=$P($G(^IBT(356.2,+IBTRC,0)),"^",8)
	S I=0 F  S I=$O(^IBT(356.2,"C",IBTRN,I)) Q:'I  D
	.Q:$P(^IBT(356.2,+I,0),"^",8)'=IBCNS  ; must be same ins. co.
	.I $P($G(^IBT(356.2,+I,1)),"^",8) S ARRAY=I Q  ; whole admission authorized
	.I $P($G(^IBT(356.2,+I,1)),"^",7) S ARRAY(0)=I Q  ;whole admission denied
	.I $P($G(^IBT(356.2,+I,0)),"^",12) S ARRAY(+$P(^IBT(356.2,+I,0),"^",12),+$P(^IBT(356.2,+I,0),"^",13))=I_"^"_1
	.I $P($G(^IBT(356.2,+I,0)),"^",15) S ARRAY(+$P(^IBT(356.2,+I,0),"^",15),+$P(^IBT(356.2,+I,0),"^",16))=I_"^"_2
ARRAYQ	Q
	;
HELP(IBTRC)	; -- dd help for dates authorized and denied.
	;
	N ARRAY,IBCNS D ARRAY(IBTRC)
	D WRITE
	Q
	;
WRITE	; -- write extended help
	;
	Q:$D(ZTQUEUED)
	N M,N,X W !
	I '$D(ARRAY) W !,"No Authorized or Denied Days on file for this Visit!",!! Q
	;
	W !,"For Insurance Company ",$P($G(^DIC(36,+IBCNS,0)),"^"),": "
	I $G(ARRAY) W !,"Care Authorized for entire Admission on ",$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY,0))),"."
	I $G(ARRAY(0)) W !,"Care Denied for entire Admission on ",$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY(0),0))),"."
	;
	S M=0 F  S M=$O(ARRAY(M)) Q:'M  S N="" F  S N=$O(ARRAY(M,N)) Q:N=""  D
	.W !,"Care ",$S($P(ARRAY(M,N),"^",2)=1:"Authorized",1:"Denied    "),"  from ",$$FMTE^XLFDT(M),"  to  ",$S('N:"Unspecified",1:$$FMTE^XLFDT(N))
	.W ?57," on ",$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY(M,N),0))),"."
	W ! Q

IBTUTL4
IBTUTL4	;ALB/AAS - CLAIMS TRACKING UTILITY ROUTINE ; 21-JUN-93
	;;Version 2.0 ; INTEGRATED BILLING ;; 21-MAR-94
	;;Per VHA Directive 10-93-142, this routine should not be modified.
	;
AEA(IBTRC,X)	; -- dd input call for authorize entire admission (field 1.08)
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	I X,$P($G(^IBT(356.2,+IBTRC,1)),"^",7) D NOTOK("Deny Entire Admission already answered 'YES'.") G AEAQ
	D ARRAY^IBTUTL3(IBTRC)
	I $G(ARRAY(0)) D NOTOK("Entired Admission already denied on "_$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY(0),0))))
	I $G(ARRAY),ARRAY'=IBTRC D NOTOK("Entire Admission has already be authorized on "_$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY,0))))
AEAQ	Q IBOK
	;
DEA(IBTRC,X)	; -- dd input call for deny entry admission (field 1.07)
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	I X,$P($G(^IBT(356.2,+IBTRC,1)),"^",8) D NOTOK("Authorize Entire Admission already answered 'YES'.") G DEAQ
	D ARRAY^IBTUTL3(IBTRC)
	I $G(ARRAY(0)),+ARRAY(0)'=IBTRC D NOTOK("Entired Admission already denied on "_$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY(0),0))))
	I $G(ARRAY) D NOTOK("Entire Admission has already be authorized on "_$$FMTE^XLFDT(+$G(^IBT(356.2,+ARRAY,0))))
DEAQ	Q IBOK
	;
AFDT(IBTRC,X)	; -- dd input call for check to approved from date (field .12)
	; -- returns 1 if date okay, 0 if not, let input transform kill x
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	;
	D CHK I 'IBOK G AFDTQ
	;
	I $P(^IBT(356.2,+IBTRC,0),U,13),X>$P(^(0),"^",13) D NOTOK("Care Authorized From Date must be before the Care Authorized To Date ("_$$FMTE^XLFDT($P(^IBT(356.2,+IBTRC,0),"^",13))_")!") G AFDTQ
	;
	D CHK2 I '$D(ARRAY) G AFDTQ
	S M=0 F  S M=$O(ARRAY(M)) Q:'M  S N=0 F  S N=$O(ARRAY(M,N)) Q:'N  I IBTRC'=+ARRAY(M,N),X'<M,X'>N D NOTOK("Date entered is already covered by another entry.")
AFDTQ	Q IBOK
	;
ATDT(IBTRC,X)	; -- dd input call for check to approved to date (field .13)
	; -- returns 1 if date okay, 0 if not, let input transform kill x
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	D CHK G:'IBOK ATDTQ
	;
	I $P(^IBT(356.2,+IBTRC,0),U,12),X<$P(^(0),"^",12) D NOTOK("Care Authorized To Date must not be before the Care Authorized From Date ("_$$FMTE^XLFDT($P(^IBT(356.2,+IBTRC,0),"^",13))_")!") G ATDTQ
	;
	D CHK2 I '$D(ARRAY) G ATDTQ
	S M=0 F  S M=$O(ARRAY(M)) Q:'M  S N=0 F  S N=$O(ARRAY(M,N)) Q:'N  I IBTRC'=+ARRAY(M,N),X'<M,X'>N D NOTOK("Date entered is already covered by another entry.")
ATDTQ	Q IBOK
	;
DFDT(IBTRC,X)	; -- dd input call for check to denied from date (field .15)
	; -- returns 1 if date okay, 0 if not, let input transform kill x
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	D CHK G:'IBOK DFDTQ
	;
	I $P(^IBT(356.2,+IBTRC,0),U,16),X>$P(^(0),"^",16) D NOTOK("Care Denied From Date must be before the Care Denied To Date ("_$$FMTE^XLFDT($P(^IBT(356.2,+IBTRC,0),"^",13))_")!") G DFDTQ
	;
	D CHK2 I '$D(ARRAY) G DFDTQ
	S M=0 F  S M=$O(ARRAY(M)) Q:'M  S N=0 F  S N=$O(ARRAY(M,N)) Q:'N  I IBTRC'=+ARRAY(M,N),X'<M,X'>N D NOTOK("Date entered is already covered by another entry.")
DFDTQ	Q IBOK
	;
DTDT(IBTRC,X)	; -- dd input call for check to denied  to date (field .16)
	; -- returns 1 if date okay, 0 if not, let input transform kill x
	N ARRAY,IBOK,IBTRN,IBTRND,Y,I,J,M,N S IBOK=1
	D CHK G:'IBOK DTDTQ
	;
	I $P(^IBT(356.2,+IBTRC,0),U,15),X<$P(^(0),"^",15) D NOTOK("Date must not be before the Care Denied From Date ("_$$FMTE^XLFDT($P(^IBT(356.2,+IBTRC,0),"^",13))_")!") G DTDTQ
	;
	D CHK2 I '$D(ARRAY) G DTDTQ
	S M=0 F  S M=$O(ARRAY(M)) Q:'M  S N=0 F  S N=$O(ARRAY(M,N)) Q:'N  I IBTRC'=+ARRAY(M,N),X'<M,X'>N D NOTOK("Date entered is already covered by another entry.")
DTDTQ	Q IBOK
	;
CHK	; -- generic check functions
	I '$G(X)!('$G(IBTRC))!($G(^IBT(356.2,+$G(IBTRC),0))="") S IBOK=0 Q
	S IBTRND=$G(^IBT(356,+$P($G(^IBT(356.2,+IBTRC,0)),"^",2),0))
	;
	I X<($P(IBTRND,"^",6)\1) D NOTOK("Date can't be before admission or visit date ("_$$FMTE^XLFDT($P(IBTRND,"^",6))_")!") Q
	;
	S Y=$$DISCH(+$P(IBTRND,"^",5)) I Y,X>Y D NOTOK("Date can not be after Discharge Date ("_$$FMTE^XLFDT(Y)_")!") Q
	Q
	;
CHK2	; -- if pass first set of check do these
	D ARRAY^IBTUTL3(IBTRC)
	I $G(ARRAY) D NOTOK("Whole Admission has already been Authorized, can not add partial dates!")
	I $G(ARRAY(0)) D NOTOK("Whole Admission has already been Denied, can not add partial dates!")
	Q
	;
NOTOK(MESS)	; -- process not okays
	S IBOK=0
	I '$D(ZTQUEUED),$G(MESS)'="" W !,MESS,!
	Q
	;
DISCH(DGPM)	; -- find discharge date for an admission
	;
	N X S X=""
	I '$G(^DGPM(+$G(DGPM),0)) G DISCHQ
	S X=+$G(^DGPM(+$P($G(^DGPM(DGPM,0)),"^",17),0))
DISCHQ	Q X


