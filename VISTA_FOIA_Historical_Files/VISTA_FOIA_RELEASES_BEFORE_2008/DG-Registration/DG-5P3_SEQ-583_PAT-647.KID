Released DG*5.3*647 SEQ #583
Extracted from mail message
**KIDS**:DG*5.3*647^

**INSTALL NAME**
DG*5.3*647
"BLD",6035,0)
DG*5.3*647^REGISTRATION^0^3050323^y
"BLD",6035,1,0)
^^4^4^3050218^
"BLD",6035,1,1,0)
This patch corrects a problem when timing out while registering collateral
"BLD",6035,1,2,0)
patients, when adding a patient using Fileman and updating the name
"BLD",6035,1,3,0)
components, and when processing address data returned from the query
"BLD",6035,1,4,0)
to the last site treated. 
"BLD",6035,4,0)
^9.64PA^^
"BLD",6035,"KRN",0)
^9.67PA^8989.52^19
"BLD",6035,"KRN",.4,0)
.4
"BLD",6035,"KRN",.401,0)
.401
"BLD",6035,"KRN",.402,0)
.402
"BLD",6035,"KRN",.403,0)
.403
"BLD",6035,"KRN",.5,0)
.5
"BLD",6035,"KRN",.84,0)
.84
"BLD",6035,"KRN",3.6,0)
3.6
"BLD",6035,"KRN",3.8,0)
3.8
"BLD",6035,"KRN",9.2,0)
9.2
"BLD",6035,"KRN",9.8,0)
9.8
"BLD",6035,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6035,"KRN",9.8,"NM",1,0)
DPTLK^^0^B65590603
"BLD",6035,"KRN",9.8,"NM",2,0)
DPTLK2^^0^B29020834
"BLD",6035,"KRN",9.8,"NM",3,0)
DGROHLR1^^0^B30562150
"BLD",6035,"KRN",9.8,"NM","B","DGROHLR1",3)

"BLD",6035,"KRN",9.8,"NM","B","DPTLK",1)

"BLD",6035,"KRN",9.8,"NM","B","DPTLK2",2)

"BLD",6035,"KRN",19,0)
19
"BLD",6035,"KRN",19.1,0)
19.1
"BLD",6035,"KRN",101,0)
101
"BLD",6035,"KRN",409.61,0)
409.61
"BLD",6035,"KRN",771,0)
771
"BLD",6035,"KRN",870,0)
870
"BLD",6035,"KRN",8989.51,0)
8989.51
"BLD",6035,"KRN",8989.52,0)
8989.52
"BLD",6035,"KRN",8994,0)
8994
"BLD",6035,"KRN","B",.4,.4)

"BLD",6035,"KRN","B",.401,.401)

"BLD",6035,"KRN","B",.402,.402)

"BLD",6035,"KRN","B",.403,.403)

"BLD",6035,"KRN","B",.5,.5)

"BLD",6035,"KRN","B",.84,.84)

"BLD",6035,"KRN","B",3.6,3.6)

"BLD",6035,"KRN","B",3.8,3.8)

"BLD",6035,"KRN","B",9.2,9.2)

"BLD",6035,"KRN","B",9.8,9.8)

"BLD",6035,"KRN","B",19,19)

"BLD",6035,"KRN","B",19.1,19.1)

"BLD",6035,"KRN","B",101,101)

"BLD",6035,"KRN","B",409.61,409.61)

"BLD",6035,"KRN","B",771,771)

"BLD",6035,"KRN","B",870,870)

"BLD",6035,"KRN","B",8989.51,8989.51)

"BLD",6035,"KRN","B",8989.52,8989.52)

"BLD",6035,"KRN","B",8994,8994)

"BLD",6035,"QUES",0)
^9.62^^
"BLD",6035,"REQB",0)
^9.611^3^3
"BLD",6035,"REQB",1,0)
DG*5.3*620^1
"BLD",6035,"REQB",2,0)
DG*5.3*622^1
"BLD",6035,"REQB",3,0)
DG*5.3*629^1
"BLD",6035,"REQB","B","DG*5.3*620",1)

"BLD",6035,"REQB","B","DG*5.3*622",2)

"BLD",6035,"REQB","B","DG*5.3*629",3)

"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
647^3050323^100850
"PKG",5,22,1,"PAH",1,1,0)
^^4^4^3050323
"PKG",5,22,1,"PAH",1,1,1,0)
This patch corrects a problem when timing out while registering collateral
"PKG",5,22,1,"PAH",1,1,2,0)
patients, when adding a patient using Fileman and updating the name
"PKG",5,22,1,"PAH",1,1,3,0)
components, and when processing address data returned from the query
"PKG",5,22,1,"PAH",1,1,4,0)
to the last site treated. 
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DGROHLR1")
0^3^B30562150
"RTN","DGROHLR1",1,0)
DGROHLR1 ;GTS - ROM HL7 RECEIVE DRIVERS ; 2/18/05 12:19pm
"RTN","DGROHLR1",2,0)
 ;;5.3;Registration;**572,622,647**;Aug 13, 1993
"RTN","DGROHLR1",3,0)
 ;
"RTN","DGROHLR1",4,0)
CONVFDA(DFN,DGDATA) ; LOOP THROUGH DATA TO FILE
"RTN","DGROHLR1",5,0)
 N DFNC,F,IEN,FIELD,DGROAR,FNUM,QVAR,INX
"RTN","DGROHLR1",6,0)
 ;
"RTN","DGROHLR1",7,0)
 ;*DGROAR: Indirect reference to DGROAYi where "i" is the ORDER INDEX
"RTN","DGROHLR1",8,0)
 ;* field value in 391.23.  ORDER INDEX defines order for a group of
"RTN","DGROHLR1",9,0)
 ;* fields loaded into the LST.
"RTN","DGROHLR1",10,0)
 ;* DGROAYi defined for each group maintaining proper order.
"RTN","DGROHLR1",11,0)
 ;*  DG*5.3*572
"RTN","DGROHLR1",12,0)
 ;
"RTN","DGROHLR1",13,0)
 S DFNC=DFN_","
"RTN","DGROHLR1",14,0)
 S INX=""
"RTN","DGROHLR1",15,0)
 F  S INX=$O(^DGRO(391.23,"D",INX)) Q:INX=""  D
"RTN","DGROHLR1",16,0)
 . S DGROAR="DGROAY"_INX
"RTN","DGROHLR1",17,0)
 . S QVAR=0
"RTN","DGROHLR1",18,0)
 . S F=""
"RTN","DGROHLR1",19,0)
 . F  S F=$O(@DGDATA@(F)) Q:F=""  D
"RTN","DGROHLR1",20,0)
 . . S IEN=""
"RTN","DGROHLR1",21,0)
 . . F  S IEN=$O(@DGDATA@(F,IEN)) Q:IEN=""  D
"RTN","DGROHLR1",22,0)
 . . . S FIELD=""
"RTN","DGROHLR1",23,0)
 . . . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:FIELD=""  D
"RTN","DGROHLR1",24,0)
 . . . . S ORDINX=$O(^DGRO(391.23,"E",F,FIELD,""))
"RTN","DGROHLR1",25,0)
 . . . . D:(ORDINX=INX) SETARY
"RTN","DGROHLR1",26,0)
 . . . . ;* Following line files Internal PEC, Rmv once Ext PEC is filed
"RTN","DGROHLR1",27,0)
 . . . . I (ORDINX=INX)&(F=2) DO
"RTN","DGROHLR1",28,0)
 . . . . .D:(FIELD=.361) FILEPEC
"RTN","DGROHLR1",29,0)
 . . . . .D:((FIELD=.117)!(FIELD=.12111)!(FIELD=.14111)) FILECNTY
"RTN","DGROHLR1",30,0)
 . . I (+$O(@DGROAR@(""))>0) S QVAR=1 D FILE
"RTN","DGROHLR1",31,0)
 Q
"RTN","DGROHLR1",32,0)
 ;
"RTN","DGROHLR1",33,0)
FILECNTY ;*Retrieve county IEN and file county
"RTN","DGROHLR1",34,0)
 ;*Retrieve State IEN corresponding to Temp, Conf, or Perm State
"RTN","DGROHLR1",35,0)
 I (FIELD=.117),($D(^DPT(DFN,.11))) S STATEIEN=$P(^DPT(DFN,.11),"^",5)
"RTN","DGROHLR1",36,0)
 I (FIELD=.12111),($D(^DPT(DFN,.121))) S STATEIEN=$P(^DPT(DFN,.121),"^",5)
"RTN","DGROHLR1",37,0)
 I (FIELD=.14111),($D(^DPT(DFN,.141))) S STATEIEN=$P(^DPT(DFN,.141),"^",5)
"RTN","DGROHLR1",38,0)
 ;
"RTN","DGROHLR1",39,0)
 ;*Retrieve County IEN for exact county returned from LST
"RTN","DGROHLR1",40,0)
 ; DG*647
"RTN","DGROHLR1",41,0)
 I $G(STATEIEN)="" G NOCNTY
"RTN","DGROHLR1",42,0)
 S DIC="^DIC(5,"_STATEIEN_",1,"
"RTN","DGROHLR1",43,0)
 S DIC(0)="XS"
"RTN","DGROHLR1",44,0)
 S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",45,0)
 D ^DIC
"RTN","DGROHLR1",46,0)
 S DGROCTY(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",47,0)
 D FILE^DIE("","DGROCTY","ERR") ;File County IEN
"RTN","DGROHLR1",48,0)
NOCNTY K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",49,0)
 K STATEIEN,DGROCTY
"RTN","DGROHLR1",50,0)
 Q
"RTN","DGROHLR1",51,0)
 ;
"RTN","DGROHLR1",52,0)
FILEPEC ;File Internal value of Prim Elig Code
"RTN","DGROHLR1",53,0)
 ;Called from CONVFDA^DGROHLR1
"RTN","DGROHLR1",54,0)
 ;Remove this call when fields required by PEC are received
"RTN","DGROHLR1",55,0)
 ; from LST
"RTN","DGROHLR1",56,0)
 I $D(@DGROAR@(F,DFNC,FIELD)) DO
"RTN","DGROHLR1",57,0)
 . S DIC="^DIC(8,"
"RTN","DGROHLR1",58,0)
 . S DIC(0)="MNSX"
"RTN","DGROHLR1",59,0)
 . S X=@DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",60,0)
 . D ^DIC
"RTN","DGROHLR1",61,0)
 . S DGROPEC(F,DFNC,FIELD)=+Y
"RTN","DGROHLR1",62,0)
 . D FILE^DIE("","DGROPEC","ERR")
"RTN","DGROHLR1",63,0)
 . K @DGROAR@(F,DFNC,FIELD)
"RTN","DGROHLR1",64,0)
 . K DGROPEC,DIC,X
"RTN","DGROHLR1",65,0)
 Q
"RTN","DGROHLR1",66,0)
 ;
"RTN","DGROHLR1",67,0)
FILE ;*Execute FILE or UPDATE per FNUM (1st subscpt) for file # according
"RTN","DGROHLR1",68,0)
 ;* to file/multiple record add or adding existing Patient data add
"RTN","DGROHLR1",69,0)
 S FNUM=$O(@DGROAR@(""))
"RTN","DGROHLR1",70,0)
 K %DT ;* Clean up leaks from Input transforms that set %DT(0)
"RTN","DGROHLR1",71,0)
 ;
"RTN","DGROHLR1",72,0)
 ;* Patient file processing
"RTN","DGROHLR1",73,0)
 I +FNUM=2 DO
"RTN","DGROHLR1",74,0)
 . D FILE^DIE("E","@DGROAR","ERR") ;*Add to existing Patient entry
"RTN","DGROHLR1",75,0)
 ;
"RTN","DGROHLR1",76,0)
 ;* Patient file multiples processing
"RTN","DGROHLR1",77,0)
 I (+FNUM=2.01)!(+FNUM=2.141) DO
"RTN","DGROHLR1",78,0)
 . D UPDATE^DIE("E","@DGROAR","","ERR")
"RTN","DGROHLR1",79,0)
 I (+FNUM=2.02)!(+FNUM=2.06) DO
"RTN","DGROHLR1",80,0)
 . N DGRODNUM,DGIEN,DNUMDATA,DGIEN2,DGROIEN
"RTN","DGROHLR1",81,0)
 . S DGRODNUM=0
"RTN","DGROHLR1",82,0)
 . F  S DGRODNUM=$O(@DGROAR@(+FNUM,DGRODNUM)) Q:DGRODNUM=""  D
"RTN","DGROHLR1",83,0)
 . . S DGIEN=$P(DGRODNUM,",")
"RTN","DGROHLR1",84,0)
 . . I DGIEN S DGIEN2=$P(DGIEN,"+",2)
"RTN","DGROHLR1",85,0)
 . . S DNUMDATA=$G(@DGROAR@(+FNUM,DGRODNUM,.01))
"RTN","DGROHLR1",86,0)
 . . I DGIEN2 S DGROIEN(DGIEN2)=DNUMDATA D
"RTN","DGROHLR1",87,0)
 . . . D UPDATE^DIE("","@DGROAR","DGROIEN","ERR") ;*Converted Ext to Int
"RTN","DGROHLR1",88,0)
 ;
"RTN","DGROHLR1",89,0)
 ;* Processing fields [indicated in 391.23] not part of Patient file.
"RTN","DGROHLR1",90,0)
 ;* Define IF section for each file not a Patient file field or
"RTN","DGROHLR1",91,0)
 ;* Multiple.
"RTN","DGROHLR1",92,0)
 I (+$P(FNUM,".")'=2) DO
"RTN","DGROHLR1",93,0)
 . I +FNUM=38.1 DO
"RTN","DGROHLR1",94,0)
 . . N DGROARBI
"RTN","DGROHLR1",95,0)
 . . S DGROARBI(1)=DFN ;*Set 38.1 IEN to DFN
"RTN","DGROHLR1",96,0)
 . . D UPDATE^DIE("E","@DGROAR","DGROARBI","ERR")
"RTN","DGROHLR1",97,0)
 ;
"RTN","DGROHLR1",98,0)
 K @DGROAR
"RTN","DGROHLR1",99,0)
 Q
"RTN","DGROHLR1",100,0)
 ;
"RTN","DGROHLR1",101,0)
SETARY ;* Setup arrays of data to be filed
"RTN","DGROHLR1",102,0)
 N U,D,DATA,NODE,NODE2,INENNUM
"RTN","DGROHLR1",103,0)
 ;
"RTN","DGROHLR1",104,0)
 I '$D(^DGRO(391.23,"C",F,FIELD)) Q
"RTN","DGROHLR1",105,0)
 ;
"RTN","DGROHLR1",106,0)
 S U="^"
"RTN","DGROHLR1",107,0)
 ;
"RTN","DGROHLR1",108,0)
 ;CHECK LOCAL PATIENT FILE FOR EXISTING DATA, DO NOT OVERWRITE
"RTN","DGROHLR1",109,0)
 S D=$$GET1^DIQ(F,DFNC,FIELD)
"RTN","DGROHLR1",110,0)
 I D'="" K @DGDATA@(F,IEN,FIELD) Q
"RTN","DGROHLR1",111,0)
 ;
"RTN","DGROHLR1",112,0)
 S DATA=$G(@DGDATA@(F,IEN,FIELD,"E"))
"RTN","DGROHLR1",113,0)
 Q:DATA=""
"RTN","DGROHLR1",114,0)
 ;
"RTN","DGROHLR1",115,0)
 ;* Design of this Subroutine:
"RTN","DGROHLR1",116,0)
 ;* Set array defining groups of date for Fileman filing in
"RTN","DGROHLR1",117,0)
 ;*  a predefined order.
"RTN","DGROHLR1",118,0)
 ;* Indirection defined various array names for different ordered
"RTN","DGROHLR1",119,0)
 ;*  data groups in CONVFDA.
"RTN","DGROHLR1",120,0)
 ;* File Ext. values returned from LST per ORDER INDEX.
"RTN","DGROHLR1",121,0)
 ;* DG*5.3*572
"RTN","DGROHLR1",122,0)
 ;
"RTN","DGROHLR1",123,0)
 ;* Get field entry IEN in ROM 391.23 file
"RTN","DGROHLR1",124,0)
 S INENNUM=INX
"RTN","DGROHLR1",125,0)
 ;
"RTN","DGROHLR1",126,0)
 I F=2 DO  Q
"RTN","DGROHLR1",127,0)
 . S @DGROAR@(F,DFNC,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",128,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",129,0)
 ;
"RTN","DGROHLR1",130,0)
 ;* Set array for all other files (not Patient or Security files)
"RTN","DGROHLR1",131,0)
 ;* This section is for new entries in files.  Not for Multiples.
"RTN","DGROHLR1",132,0)
 ;*  Code to process specific files needed in CONVFDA
"RTN","DGROHLR1",133,0)
 I (+$P(F,".")'=2),(F'=38.1) DO  Q
"RTN","DGROHLR1",134,0)
 . S @DGROAR@(F,"+1,",FIELD)=DATA
"RTN","DGROHLR1",135,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",136,0)
 ;
"RTN","DGROHLR1",137,0)
 ;SET ALIAS AND CONFIDENTIAL ADDRESS CAT. SUBFILE ARRAYS
"RTN","DGROHLR1",138,0)
 I (F=2.01)!(F=2.141) D  Q
"RTN","DGROHLR1",139,0)
 . S NODE2="+"
"RTN","DGROHLR1",140,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC
"RTN","DGROHLR1",141,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",142,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",143,0)
 ;
"RTN","DGROHLR1",144,0)
 ;SET RACE AND ETHNICITY ARRAYS
"RTN","DGROHLR1",145,0)
 I (F=2.02)!(F=2.06) D  Q
"RTN","DGROHLR1",146,0)
 . N REFILE,REIEN,DATA30,QFL,DATACOMP,TEST,ERR,INACTIVE
"RTN","DGROHLR1",147,0)
 . I (F=2.02),(FIELD=.01) S REFILE=10
"RTN","DGROHLR1",148,0)
 . I (F=2.06),(FIELD=.01) S REFILE=10.2
"RTN","DGROHLR1",149,0)
 . I FIELD=.02 S REFILE=10.3
"RTN","DGROHLR1",150,0)
 . S DATA30=$E(DATA,1,30) D
"RTN","DGROHLR1",151,0)
 . . S QFL=0,REIEN="",NODE=""
"RTN","DGROHLR1",152,0)
 . . D FIND^DIC(REFILE,"","@;.01;200","",DATA30,,"B","","","TEST","ERR")
"RTN","DGROHLR1",153,0)
 . . F  S NODE=$O(TEST("DILIST",2,NODE)) Q:'NODE  D  Q:$G(QFL)=1
"RTN","DGROHLR1",154,0)
 . . . S REIEN=$G(TEST("DILIST",2,NODE))
"RTN","DGROHLR1",155,0)
 . . . S INACTIVE=$G(TEST("DILIST","ID",NODE,200))
"RTN","DGROHLR1",156,0)
 . . . Q:INACTIVE="YES"  ;* QUIT if Race or Eth Inact
"RTN","DGROHLR1",157,0)
 . . . S DATACOMP=$G(TEST("DILIST","ID",NODE,.01))
"RTN","DGROHLR1",158,0)
 . . . I DATACOMP=DATA S QFL=1
"RTN","DGROHLR1",159,0)
 . Q:'QFL
"RTN","DGROHLR1",160,0)
 . Q:$G(INACTIVE)="YES"  ;* No entry for Inactive Race/Ethncty
"RTN","DGROHLR1",161,0)
 . S DATA=REIEN ;*Race/Ethncty/MOC (10/10.2/10.3) IEN for data recvd
"RTN","DGROHLR1",162,0)
 . ;
"RTN","DGROHLR1",163,0)
 . S NODE2="+" ;*+ for all fields, All fields added in one UPDATE
"RTN","DGROHLR1",164,0)
 . S NODE2=NODE2_$P(IEN,",")_","_DFNC ;*No + for DFNC, DPT record exists
"RTN","DGROHLR1",165,0)
 . S @DGROAR@(F,NODE2,FIELD)=DATA ;*Indirection to Patient Array
"RTN","DGROHLR1",166,0)
 . K @DGDATA@(F,IEN,FIELD)
"RTN","DGROHLR1",167,0)
 ;
"RTN","DGROHLR1",168,0)
 ;* Set all sensitive fields (38.1) in array
"RTN","DGROHLR1",169,0)
 I F=38.1 D  Q
"RTN","DGROHLR1",170,0)
 . Q:('$D(@DGDATA@(F)))  ;*Data already filed
"RTN","DGROHLR1",171,0)
 . S FIELD=.01
"RTN","DGROHLR1",172,0)
 . S @DGROAR@(F,"+1,",FIELD)=$$GET1^DIQ(2,DFN,.01)
"RTN","DGROHLR1",173,0)
 . F  S FIELD=$O(@DGDATA@(F,IEN,FIELD)) Q:'FIELD  D
"RTN","DGROHLR1",174,0)
 . . S @DGROAR@(F,"+1,",FIELD)=@DGDATA@(F,IEN,FIELD,"E")
"RTN","DGROHLR1",175,0)
 . K @DGDATA@(F,IEN)
"RTN","DGROHLR1",176,0)
 . S FIELD=999999 ;*Skip to end of 38.1 field list in @DGDATA
"RTN","DGROHLR1",177,0)
 Q
"RTN","DPTLK")
0^1^B65590603
"RTN","DPTLK",1,0)
DPTLK ;ALB/RMO,RTK - MAS Patient Look-up Main Routine ; 3/22/05 4:19pm
"RTN","DPTLK",2,0)
 ;;5.3;Registration;**32,72,93,73,136,157,197,232,265,277,223,327,244,513,528,541,576,600,485,633,629,647**;Aug 13, 1993
"RTN","DPTLK",3,0)
 ;
"RTN","DPTLK",4,0)
 ; mods made for magstripe read 12/96 - JFP
"RTN","DPTLK",5,0)
 ;
"RTN","DPTLK",6,0)
 ;Optional input: DPTNOFZY='1' to suppress fuzzy lookups implemented
"RTN","DPTLK",7,0)
 ;                by patch DG*5.3*244
"RTN","DPTLK",8,0)
 ;
"RTN","DPTLK",9,0)
EN ; -- Entry point
"RTN","DPTLK",10,0)
 N DIE,DR
"RTN","DPTLK",11,0)
 K DPTX,DPTDFN,DPTSAVX I $D(DIC(0)) G QK:DIC(0)["I"!(DIC(0)'["A"&('$D(X)))
"RTN","DPTLK",12,0)
 I '$D(^DD("VERSION")) W !!?3,"Unable to proceed. Fileman version node ^DD(""VERSION"") is undefined." G QK
"RTN","DPTLK",13,0)
 I '$D(^DPT(0))!(^DD("VERSION")<17.2) W !!?3,"Unable to proceed. ",$S('$D(^DPT(0)):"0th node of ^DPT missing",^DD("VERSION")<17.2:"Fileman version must be at least 17.2",1:""),"." G QK
"RTN","DPTLK",14,0)
EN2 K DO,DUOUT,DTOUT S U="^",DIC="^DPT(",DIC(0)=$S($D(DIC(0)):DIC(0),1:"AELMQ") S:DIC(0)'["A" (DPTX,DPTSAVX)=X
"RTN","DPTLK",15,0)
 S DPTSZ=1000 I $D(^DD("OS"))#2 S DPTSZ=$S(+$P(^DD("OS",^("OS"),0),U,2):$P(^(0),U,2),1:DPTSZ)
"RTN","DPTLK",16,0)
 ;
"RTN","DPTLK",17,0)
ASKPAT ; -- Prompt for patient
"RTN","DPTLK",18,0)
 I DIC(0)["A" D   G QK:'$T!($E(DPTX)["^")!(DPTX="")
"RTN","DPTLK",19,0)
 .K DTOUT,DUOUT
"RTN","DPTLK",20,0)
 .W !,$S($D(DIC("A")):DIC("A"),1:"Select PATIENT NAME: ") W:$D(DIC("B")) DIC("B"),"// "
"RTN","DPTLK",21,0)
 .R X:DTIME
"RTN","DPTLK",22,0)
 .S DPTX=X S:'$T DTOUT=1 S:$T&(DPTX="")&($D(DIC("B"))) DPTX=DIC("B") S:DPTX["^"&($E(DPTX)'="%") DUOUT=1
"RTN","DPTLK",23,0)
 ; -- Check for the IATA magnetic stripe input
"RTN","DPTLK",24,0)
 N MAG,GCHK
"RTN","DPTLK",25,0)
 S MAG=0
"RTN","DPTLK",26,0)
 I $E(DPTX)="%"!($E(DPTX)=";"),DPTX["?" S MAG=1,(X,DPTX)=$$IATA(DPTX)
"RTN","DPTLK",27,0)
 ;
"RTN","DPTLK",28,0)
CHKPAT ; -- Custom Patient Lookup
"RTN","DPTLK",29,0)
 D DO^DIC1
"RTN","DPTLK",30,0)
 S DIC("W")=$S($D(DIC("W")):DIC("W"),1:"")
"RTN","DPTLK",31,0)
 K DPTIFNS,DPTS,DPTSEL
"RTN","DPTLK",32,0)
 S DPTCNT=0
"RTN","DPTLK",33,0)
 ; -- Check input for format an length
"RTN","DPTLK",34,0)
 G CHKDFN:DPTX?1A!(DPTX'?.ANP)!($L(DPTX)>30)
"RTN","DPTLK",35,0)
 ; -- Check for null response or abort
"RTN","DPTLK",36,0)
 I DPTX=""!(DPTX["^") G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",37,0)
 ; -- Check for question mark
"RTN","DPTLK",38,0)
 I DPTX["?" D  G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",39,0)
 .S D="B"
"RTN","DPTLK",40,0)
 .S DZ=$S(DPTX?1"?":"",1:"??")
"RTN","DPTLK",41,0)
 .G CHKPAT1:DZ="??"
"RTN","DPTLK",42,0)
 .N %
"RTN","DPTLK",43,0)
 .W !,?1,"Answer with PATIENT NAME, or SOCIAL SECURITY NUMBER, or last 4 digits",!,?4,"of SOCIAL SECURITY NUMBER, or first initial of"
"RTN","DPTLK",44,0)
 .W " last name with last",!,?4,"4 digits of SOCIAL SECURITY NUMBER"
"RTN","DPTLK",45,0)
 .W !,?1,"Do you want the entire ",+$P($G(^DPT(0)),"^",4),"-Entry PATIENT List" S %=0 D YN^DICN
"RTN","DPTLK",46,0)
 .Q:%'=1
"RTN","DPTLK",47,0)
 .S DZ="??"
"RTN","DPTLK",48,0)
CHKPAT1 .S X=DPTX
"RTN","DPTLK",49,0)
 .D DQ^DICQ
"RTN","DPTLK",50,0)
 ; -- Check for space bar, return
"RTN","DPTLK",51,0)
 I DPTX=" " D  G CHKDFN
"RTN","DPTLK",52,0)
 .S Y=$S('($D(DUZ)#2):-1,$D(^DISV(DUZ,"^DPT(")):^("^DPT("),1:-1)
"RTN","DPTLK",53,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",54,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",55,0)
 ; -- Check for DFN look up
"RTN","DPTLK",56,0)
 I $E(DPTX)="`" D  G CHKDFN
"RTN","DPTLK",57,0)
 .S Y=$S($D(^DPT(+$P(DPTX,"`",2),0)):+$P(DPTX,"`",2),1:-1)
"RTN","DPTLK",58,0)
 .D SETDPT^DPTLK1:Y>0
"RTN","DPTLK",59,0)
 .S DPTDFN=$S($D(DPTS(Y)):Y,1:-1)
"RTN","DPTLK",60,0)
 ; -- Puts input in correct format
"RTN","DPTLK",61,0)
 G CHKDFN:DPTX=""
"RTN","DPTLK",62,0)
 ; -- Force new entry
"RTN","DPTLK",63,0)
 I $E(DPTX)="""",$E(DPTX,$L(DPTX))="""" G NOPAT
"RTN","DPTLK",64,0)
 ; -- Check for index lookups
"RTN","DPTLK",65,0)
 D ^DPTLK1 G QK:$D(DTOUT)!($D(DUOUT)&(DIC(0)'["A")),ASKPAT:$D(DUOUT),CHKPAT:DPTDFN<0,CHKDFN:DPTDFN>0 I DIC(0)["N",$D(^DPT(DPTX,0)) S Y=X D SETDPT^DPTLK1 S DPTDFN=$S($D(DPTS(Y)):Y,1:-1) G CHKDFN
"RTN","DPTLK",66,0)
MAG ; -- No patient found, check for mag stripe input, create stub
"RTN","DPTLK",67,0)
 I 'MAG G NOPAT
"RTN","DPTLK",68,0)
 ; -- Check for ADT option(s) only
"RTN","DPTLK",69,0)
 N DGOPT
"RTN","DPTLK",70,0)
 S DGOPT=$P($G(XQY0),"^",2)
"RTN","DPTLK",71,0)
 I DGOPT'="Load/Edit Patient Data",DGOPT'="Register a Patient" D  G EN2
"RTN","DPTLK",72,0)
 .W !,"    ...Patient not in database, use ADT options to load patient" D Q1
"RTN","DPTLK",73,0)
 ; -- Prompt for creation of stub
"RTN","DPTLK",74,0)
 S DIR(0)="Y",DIR("B")="NO",DIR("A")="Patient not found...Create stub entry: "
"RTN","DPTLK",75,0)
 S GCHK=$D(^TMP("DGVIC"))
"RTN","DPTLK",76,0)
 D ^DIR
"RTN","DPTLK",77,0)
 K DIR
"RTN","DPTLK",78,0)
 I 'Y D Q1 G EN2
"RTN","DPTLK",79,0)
 ; -- Parse IATA fields
"RTN","DPTLK",80,0)
 D FIELDS(IATA)
"RTN","DPTLK",81,0)
 ; -- Check for Duplicates
"RTN","DPTLK",82,0)
 D EP2^DPTLK3
"RTN","DPTLK",83,0)
 I DPTDFN<0 D Q1 G EN2
"RTN","DPTLK",84,0)
 ; -- Creates Stub entry in patient file
"RTN","DPTLK",85,0)
 S Y=$$FILE^DPTLK4(DGFLDS)
"RTN","DPTLK",86,0)
 I $P(Y,"^",3)'=1 W !,"Could not add patient to patient file" D QK1 Q
"RTN","DPTLK",87,0)
 D QK1
"RTN","DPTLK",88,0)
 Q
"RTN","DPTLK",89,0)
 ;
"RTN","DPTLK",90,0)
NOPAT ; -- No patient found, ask to add new
"RTN","DPTLK",91,0)
 I DIC(0)["L" D ^DPTLK2 S Y=DPTDFN G ASKPAT:DIC(0)["A"&(Y<0)&('$G(DTOUT)),QK1
"RTN","DPTLK",92,0)
 ;
"RTN","DPTLK",93,0)
CHKDFN ; -- 
"RTN","DPTLK",94,0)
 S:'$D(DPTDFN) DPTDFN=-1 I DPTDFN'>0!('$D(DPTS(+DPTDFN))) W:DIC(0)["Q" *7," ??" G ASKPAT:DIC(0)["A",QK
"RTN","DPTLK",95,0)
 I DIC(0)["E" D  W $S('$D(DPTSEL)&('$D(DIVP)):$P(DPTS(DPTDFN),U,2)_"  "_$P(DPTS(DPTDFN),U)_"  ",$D(^DPT(DPTDFN,0)):"  "_$P(^(0),U)_"  ",1:"") S Y=DPTDFN X:$D(^DPT(DPTDFN,0)) "N DDS X DIC(""W"")"
"RTN","DPTLK",96,0)
 .I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK",97,0)
 ;
"RTN","DPTLK",98,0)
 ; check for other patients in "BS5" xref on Patient file
"RTN","DPTLK",99,0)
 I '$G(DICR),DPTDFN>0,DIC(0)["E",$$BS5^DPTLK5(+DPTDFN) D  G ASKPAT:DIC(0)["A"&(%'=1),QK:DPTDFN<0
"RTN","DPTLK",100,0)
 .N DPTZERO,DPTLSNME,DPTSSN S DPTZERO=$G(^DPT(+DPTDFN,0)),DPTLSNME=$P($P(DPTZERO,U),","),DPTSSN=$E($P(DPTZERO,U,9),6,9)
"RTN","DPTLK",101,0)
 .W $C(7),!!,"There is more than one patient whose last name is '",DPTLSNME,"' and"
"RTN","DPTLK",102,0)
 .W !,"whose social security number ends with '",DPTSSN,"'."
"RTN","DPTLK",103,0)
 .W !,"Are you sure you wish to continue (Y/N)" S %=0 D YN^DICN
"RTN","DPTLK",104,0)
 .I %'=1 S DPTDFN=-1
"RTN","DPTLK",105,0)
 ;
"RTN","DPTLK",106,0)
 I '$G(DICR),DPTDFN>0 S Y=DPTDFN D ^DGSEC S DPTDFN=Y G ASKPAT:DIC(0)["A"&(DPTDFN<0),QK:DPTDFN<0
"RTN","DPTLK",107,0)
 S DPTX=DPTX_$P(DPTS(DPTDFN),U,2),DPTDFN=DPTDFN_U_$P(^DPT(DPTDFN,0),U)
"RTN","DPTLK",108,0)
 ;
"RTN","DPTLK",109,0)
Q ; -- 
"RTN","DPTLK",110,0)
 S Y=$S('$D(DPTDFN):-1,'$D(DPTS(+DPTDFN)):-1,1:DPTDFN),X=$S($D(DPTX)&(+Y>0):DPTX,$D(DPTSAVX):DPTSAVX,$D(DPTX):DPTX,1:"")
"RTN","DPTLK",111,0)
 I Y>0 S:DIC(0)'["F" ^DISV($S($D(DUZ)#2:DUZ,1:0),"^DPT(")=+Y S:DIC(0)["Z" Y(0)=^DPT(+Y,0),Y(0,0)=$P(^(0),U,1)
"RTN","DPTLK",112,0)
 ;DG*600
"RTN","DPTLK",113,0)
 ;I DIC(0)["E",$P($G(^DPT(+Y,0)),U,21) W *7,!,"Warning : You have selected a test patient."
"RTN","DPTLK",114,0)
 I DIC(0)["E",$$TESTPAT^VADPT(+Y) W *7,!,"WARNING : You may have selected a test patient."
"RTN","DPTLK",115,0)
 I DIC(0)["E",$$BADADR^DGUTL3(+Y) W *7,!,"WARNING : ** This patient has been flagged with a Bad Address Indicator."
"RTN","DPTLK",116,0)
 I DIC(0)["E",$$VAADV^DPTLK3(+Y) W *7,!,"** Patient is VA ADVANTAGE."
"RTN","DPTLK",117,0)
 ;DG*485
"RTN","DPTLK",118,0)
 I $D(^DPT("AXFFP",1,+Y)) D FFP^DPTLK5
"RTN","DPTLK",119,0)
 ;Display enrollment information
"RTN","DPTLK",120,0)
 I Y>0,DIC(0)["E" D ENR
"RTN","DPTLK",121,0)
 ;
"RTN","DPTLK",122,0)
 ;Call Combat Vet check
"RTN","DPTLK",123,0)
 I Y>0,DIC(0)["E" D CV
"RTN","DPTLK",124,0)
 ;
"RTN","DPTLK",125,0)
 ; check whether to display Means Test Required message
"RTN","DPTLK",126,0)
 D
"RTN","DPTLK",127,0)
 .N DPTDIV
"RTN","DPTLK",128,0)
 .I '$G(DUZ(2)) Q
"RTN","DPTLK",129,0)
 .I Y>0,DIC(0)["E" S DPTDIV=$$DMT^DPTLK5(+Y,DUZ(2)) I DPTDIV D
"RTN","DPTLK",130,0)
 ..W $C(7),!!,"MEANS TEST REQUIRED"
"RTN","DPTLK",131,0)
 ..W !,?3,$P($G(^DG(40.8,DPTDIV,"MT")),U,2)
"RTN","DPTLK",132,0)
 ..H 2
"RTN","DPTLK",133,0)
 ;
"RTN","DPTLK",134,0)
Q1 ; -- Clean up variables
"RTN","DPTLK",135,0)
 K D,DIC("W"),DO,DPTCNT,DPTDFN,DPTIFNS,DPTIX,DPTS
"RTN","DPTLK",136,0)
 K DPTSAVX,DPTSEL,DPTSZ,DPTX
"RTN","DPTLK",137,0)
 ;
"RTN","DPTLK",138,0)
 K:$D(IATA) IATA
"RTN","DPTLK",139,0)
 K:$D(DGFLDS) @DGFLDS,DGFLDS
"RTN","DPTLK",140,0)
 Q
"RTN","DPTLK",141,0)
 ;
"RTN","DPTLK",142,0)
QK K:'$D(DPTNOFZK) DPTNOFZY G Q
"RTN","DPTLK",143,0)
 ;
"RTN","DPTLK",144,0)
QK1 K:'$D(DPTNOFZK) DPTNOFZY G Q1
"RTN","DPTLK",145,0)
 ;
"RTN","DPTLK",146,0)
IX ; --
"RTN","DPTLK",147,0)
 I $D(D),$D(^DD(2,0,"IX",D)),($E(D)'="A") S DPTIX=D
"RTN","DPTLK",148,0)
 G DPTLK
"RTN","DPTLK",149,0)
 ;
"RTN","DPTLK",150,0)
IATA(X) ; --
"RTN","DPTLK",151,0)
 ;This function pulls off ssn from the IATA track
"RTN","DPTLK",152,0)
 ;
"RTN","DPTLK",153,0)
 ;Input:  X   -  what was read in
"RTN","DPTLK",154,0)
 ;Output: SSN -  social security number
"RTN","DPTLK",155,0)
 ;          Q -  quit
"RTN","DPTLK",156,0)
 ;
"RTN","DPTLK",157,0)
 ; Track            Start Sent     End Sent      Field Separator
"RTN","DPTLK",158,0)
 ; -----            ----------     --------      ---------------
"RTN","DPTLK",159,0)
 ;  IATA (alphanum)      %             ?          {   (Note: VA used ^)
"RTN","DPTLK",160,0)
 ;  ABA (numeric)        ;             ?          =    
"RTN","DPTLK",161,0)
 ;
"RTN","DPTLK",162,0)
 ;N IATA
"RTN","DPTLK",163,0)
 S (IATA)=""
"RTN","DPTLK",164,0)
 I $E(X)'="%" Q X ; no start sentinel
"RTN","DPTLK",165,0)
 I X'["?" Q "Q"
"RTN","DPTLK",166,0)
 ; -- Extract data from track
"RTN","DPTLK",167,0)
 S IATA=$$TRACK(X,"%","?")
"RTN","DPTLK",168,0)
 ; -- checks for no data
"RTN","DPTLK",169,0)
 I IATA="" Q "Q"
"RTN","DPTLK",170,0)
 ; -- Returns SSN
"RTN","DPTLK",171,0)
 I IATA'="" Q $P(IATA,"^")
"RTN","DPTLK",172,0)
 Q "Q"
"RTN","DPTLK",173,0)
 ;
"RTN","DPTLK",174,0)
TRACK(X,START,END) ; find track where start/end are sentinels
"RTN","DPTLK",175,0)
 ;
"RTN","DPTLK",176,0)
 Q $P($P($G(X),START,2),END,1)
"RTN","DPTLK",177,0)
 ;
"RTN","DPTLK",178,0)
FIELDS(IATA) ; -- Sets fields
"RTN","DPTLK",179,0)
 Q:'$D(IATA)
"RTN","DPTLK",180,0)
 N CNT,FIELD
"RTN","DPTLK",181,0)
 S DGFLDS="^TMP(""DGVIC"","_$J_")",CNT=1
"RTN","DPTLK",182,0)
 K @DGFLDS
"RTN","DPTLK",183,0)
 F  S FIELD=$P($G(IATA),"^",CNT)  Q:FIELD=""  D
"RTN","DPTLK",184,0)
 .S @DGFLDS@(CNT)=FIELD
"RTN","DPTLK",185,0)
 .S CNT=CNT+1
"RTN","DPTLK",186,0)
 ; -- Define fields for duplicate checker
"RTN","DPTLK",187,0)
 S DPTX=$G(@DGFLDS@(2)) ;NAME
"RTN","DPTLK",188,0)
 S DPTIDS(.03)=$G(@DGFLDS@(3)) ;DOB
"RTN","DPTLK",189,0)
 S DPTIDS(.09)=$G(@DGFLDS@(1)) ;SSN
"RTN","DPTLK",190,0)
 Q
"RTN","DPTLK",191,0)
ENR ;Display Enrollment information after patient selection
"RTN","DPTLK",192,0)
 N DGENCAT,DGENDFN,DGENR,DGEGTIEN,DGEGT
"RTN","DPTLK",193,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) Q
"RTN","DPTLK",194,0)
 S DGENCAT=$$CATEGORY^DGENA4(+DPTDFN)
"RTN","DPTLK",195,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DPTLK",196,0)
 W !?1,"Enrollment Priority: ",$S($G(DGENR("PRIORITY")):$$EXT^DGENU("PRIORITY",DGENR("PRIORITY")),1:""),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT^DGENU("SUBGRP",$G(DGENR("SUBGRP"))))
"RTN","DPTLK",197,0)
 W ?33,"Category: ",DGENCAT
"RTN","DPTLK",198,0)
 W ?57,"End Date: ",$S($G(DGENR("END")):$$FMTE^XLFDT(DGENR("END"),"5DZ"),1:""),!
"RTN","DPTLK",199,0)
 ;If patient is NOT ELIGIBLE, display Enrollment Status (Ineligible Project Phase I)
"RTN","DPTLK",200,0)
 I $G(DGENR("STATUS"))=10!($G(DGENR("STATUS"))=19)!($G(DGENR("STATUS"))=20) D
"RTN","DPTLK",201,0)
 . W ?1,"Enrollment Status: ",$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:"") ;H 5
"RTN","DPTLK",202,0)
 ;check for Combat Veteran Eligibility, if elig do not display EGT info
"RTN","DPTLK",203,0)
 I $$CVEDT^DGCV(+DPTDFN) Q
"RTN","DPTLK",204,0)
 ;Get Enrollment Group Threshold Priority and Subgroup
"RTN","DPTLK",205,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DPTLK",206,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DPTLK",207,0)
 Q:$G(DGENR("PRIORITY"))=""!($G(DGEGT("PRIORITY"))="")
"RTN","DPTLK",208,0)
 ;Compare Patient's Enrollment Priority to Enrollment Group Threshold
"RTN","DPTLK",209,0)
 I '$$ABOVE^DGENEGT1(+DPTDFN,DGENR("PRIORITY"),$G(DGENR("SUBGRP")),DGEGT("PRIORITY"),DGEGT("SUBGRP")) D
"RTN","DPTLK",210,0)
 .N X,IORVOFF,IORVON
"RTN","DPTLK",211,0)
 .S X="IORVOFF;IORVON"
"RTN","DPTLK",212,0)
 .D ENDR^%ZISS
"RTN","DPTLK",213,0)
 .W !?32 W:$D(IORVON) IORVON  W "*** WARNING ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",214,0)
 .I DGENR("END")'="" W !?14 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT END",$S(DT>+DGENR("END"):"ED",1:"S")," EFFECTIVE ",$$FMTE^XLFDT(DGENR("END"),"5DZ")," ***" W:$D(IORVOFF) IORVOFF Q
"RTN","DPTLK",215,0)
 .W !?5 W:$D(IORVON) IORVON W "*** PATIENT ENROLLMENT ENDING.  ENROLLMENT END DATE IS NOT KNOWN. ***" W:$D(IORVOFF) IORVOFF
"RTN","DPTLK",216,0)
 Q
"RTN","DPTLK",217,0)
CV ;check for Combat Vet status
"RTN","DPTLK",218,0)
 N DGCV
"RTN","DPTLK",219,0)
 S DGCV=$$CVEDT^DGCV(+DPTDFN)
"RTN","DPTLK",220,0)
 I $P(DGCV,U)=1 D  Q
"RTN","DPTLK",221,0)
 . I '$$GET^DGENA($$FINDCUR^DGENA(+DPTDFN),.DGENR) W !
"RTN","DPTLK",222,0)
 . W ?3,"Combat Vet Status: "_$S($P(DGCV,U,3)=1:"ELIGIBLE",1:"EXPIRED"),?57,"End Date: "_$$FMTE^XLFDT($P(DGCV,U,2),"5DZ")
"RTN","DPTLK",223,0)
 Q
"RTN","DPTLK2")
0^2^B29020834
"RTN","DPTLK2",1,0)
DPTLK2 ;ALB/RMO - MAS Patient Look-up Add New Patient ; 2/8/05 8:13am
"RTN","DPTLK2",2,0)
 ;;5.3;Registration;**32,197,214,244,532,578,615,620,647**;Aug 13, 1993
"RTN","DPTLK2",3,0)
 N DPTCT,DGVV,DPTLIDR,DGCOL S DGCOL=0
"RTN","DPTLK2",4,0)
 I $D(DDS) D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK2",5,0)
 I '$D(DUZ(0)) W:DIC(0)["Q" !?3,*7,"Unable to Add Patient. Your Fileman Access Code is undefined." S DPTDFN=-1 G Q
"RTN","DPTLK2",6,0)
 I $S($D(DLAYGO):2\1-(DLAYGO\1),1:1),DUZ(0)'="@",$D(^DIC(2,0,"LAYGO")) F I=1:1 I DUZ(0)[$E(^("LAYGO"),I) Q:I'>$L(^("LAYGO"))  S DPTDFN=-1 W:DIC(0)["Q" *7," ??" G Q
"RTN","DPTLK2",7,0)
 N DG20NAME S DG20NAME=DPTX,DPTX=$$FORMAT^XLFNAME7(.DG20NAME,3,30,,1)
"RTN","DPTLK2",8,0)
 S DPTX=$S($E(DPTX)[""""&($E(DPTX,$L(DPTX))[""""):$P(DPTX,"""",2),$E(DPTX)["""":$P(DPTX,"""",2),$E(DPTX,$L(DPTX))["""":$P(DPTX,"""",1),1:DPTX)
"RTN","DPTLK2",9,0)
 I $L(DPTX)<3!($L(DPTX)>30)!(DPTX?1P.E)!(DPTX'[",")!(DPTX'?1U.ANP) W:DIC(0)["Q" *7," ??" S DPTDFN=-1 G Q
"RTN","DPTLK2",10,0)
 ; DG*647
"RTN","DPTLK2",11,0)
 I $P($G(XQY0),U)="DG COLLATERAL PATIENT" S DGCOL=1,DGCOL("DR")=$P(DIC("DR"),";",5,8)
"RTN","DPTLK2",12,0)
 K DPTLID I DIC(0)["E" D ASKADD D  G Q:DPTDFN<0 I ('$D(DIC("DR")))!(DGCOL) D CHKID G Q:DPTDFN<0 D ^DPTLK3 G Q:DPTDFN<0 W !!?3,"...adding new patient"
"RTN","DPTLK2",13,0)
 .S:DPTDFN<1&('$D(DTOUT)) DUOUT=1
"RTN","DPTLK2",14,0)
 S X=DPTX,DPT("NO^")=$G(DIE("NO^")) K DD,DO,DPTX N DPTZNV
"RTN","DPTLK2",15,0)
 S:$D(DPT("DR")) DIC("DR")="S DIE(""NO^"")=""BACK"";"_DPT("DR")
"RTN","DPTLK2",16,0)
 I DGCOL S:$D(DPT("DR")) DIC("DR")=DPT("DR")_";"_DGCOL("DR")
"RTN","DPTLK2",17,0)
 D FILE^DICN K:$D(DPT("DR")) DIC("DR")
"RTN","DPTLK2",18,0)
 W ?24,"...new patient added",!?3
"RTN","DPTLK2",19,0)
 S DPTDFN=Y S:$L(DPT("NO^")) DIE("NO^")=DPT("NO^")
"RTN","DPTLK2",20,0)
 ;offer prompt of patient file components
"RTN","DPTLK2",21,0)
 S DIE="^DPT(",DA=+Y,DR="S DIE(""NO^"")=""BACK"";.01///^S (X,DPTZNV)=$$NCEDIT^DPTNAME(DA,1,.DG20NAME)"
"RTN","DPTLK2",22,0)
 D ^DIE K DR
"RTN","DPTLK2",23,0)
 ;look for other (local) identifiers
"RTN","DPTLK2",24,0)
 I '$D(DIC("DR")),DIC(0)["E",'DGCOL D
"RTN","DPTLK2",25,0)
 .F DPTID=0:0 S DPTID=$O(^DD(2,0,"ID",DPTID)) Q:'DPTID  D
"RTN","DPTLK2",26,0)
 ..I $F(DPTGID,U_DPTID_U) Q
"RTN","DPTLK2",27,0)
 ..I '$D(^DD(2,DPTID,0)) Q
"RTN","DPTLK2",28,0)
 ..S DPTLID=""
"RTN","DPTLK2",29,0)
 ..S DPTLIDR=$S('$D(DPTLIDR):DPTID,1:DPTLIDR_";"_DPTID)
"RTN","DPTLK2",30,0)
 I $D(DPTLID) W !!?3,"Please enter the following additional information:",!?3 S DIE="^DPT(",DA=+DPTDFN,DIE("NO^")="BACK",DR=DPTLIDR D ^DIE K DIE,DA,DR
"RTN","DPTLK2",31,0)
 ;
"RTN","DPTLK2",32,0)
Q K DFN,DPT("DR"),DPTLID,DPTGID,DPTID,DPTID0,DPTIDS
"RTN","DPTLK2",33,0)
 Q
"RTN","DPTLK2",34,0)
 ;
"RTN","DPTLK2",35,0)
ASKADD I $D(DDS) I $Y>21 D CLRMSG^DDS S DX=0,DY=DDSHBX+1 X DDXY
"RTN","DPTLK2",36,0)
 S Y=+$P(^DPT(0),U,4)+1 W !?3,*7,"ARE YOU ADDING ",$S(DPTX'?.N:"'"_DPTX_"' AS ",1:""),"A NEW PATIENT (THE ",Y,$S(Y#10=1&(Y#100-11):"ST",Y#10=2&(Y#100-12):"ND",Y#10=3&(Y#100-13):"RD",1:"TH"),")"
"RTN","DPTLK2",37,0)
 S %=2 D YN^DICN S DPTDFN=$S(%<0!(%=2):-1,%=1:1,1:0) I 'DPTDFN W !?6,"Enter 'YES' to add a new applicant, or 'NO' not to." G ASKADD
"RTN","DPTLK2",38,0)
 I %=1 S:$$CONF1^DPTNAME(DPTX)'=1 DPTDFN=-1
"RTN","DPTLK2",39,0)
 Q
"RTN","DPTLK2",40,0)
 ;
"RTN","DPTLK2",41,0)
CHKID K DFN S DPTDFN=1,DPTGID="^.02^.03^.09^391^1901^.301^994^" I DGCOL S DPTGID="^.03^.09^.02^.3601^"
"RTN","DPTLK2",42,0)
 F DPTCT=2:1 S DPTID=$P(DPTGID,U,DPTCT) Q:'DPTID!(DPTDFN<0)  D CHKID1
"RTN","DPTLK2",43,0)
 Q
"RTN","DPTLK2",44,0)
 ;
"RTN","DPTLK2",45,0)
CHKID1 I $D(^DD(2,DPTID,0)) S DPT("DR")=$S('$D(DPT("DR")):DPTID,1:DPT("DR")_";"_DPTID),DPTID0=^DD(2,DPTID,0) D ASKID S:'$D(X) DPTDFN=-1
"RTN","DPTLK2",46,0)
 Q
"RTN","DPTLK2",47,0)
 ;
"RTN","DPTLK2",48,0)
ASKID N DGREC W !?3,"PATIENT ",$P(DPTID0,U),": " R X:DTIME D  I $D(DTOUT)!$G(DUOUT)!($G(DGREC)=1) W !?6,*7,"<'",DPTX,"'> NOT ADDED" K X Q
"RTN","DPTLK2",49,0)
 .S:'$T DTOUT=U
"RTN","DPTLK2",50,0)
 .S:X="^" DUOUT=1
"RTN","DPTLK2",51,0)
 .Q:$D(DTOUT)!($G(DUOUT))
"RTN","DPTLK2",52,0)
 .I DPTID=.09 D
"RTN","DPTLK2",53,0)
 ..N DGNEWPT
"RTN","DPTLK2",54,0)
 ..S DGNEWPT=1
"RTN","DPTLK2",55,0)
 ..D REC^DGSEC
"RTN","DPTLK2",56,0)
 I X["^" W:$E(X)["^" !?6,*7,"Sorry, '^' not allowed!" W " ??" G ASKID
"RTN","DPTLK2",57,0)
 ; field 994 is not a required field
"RTN","DPTLK2",58,0)
 I DPTID=994 I X["?" D HLPID G ASKID
"RTN","DPTLK2",59,0)
 I DPTID=994 I X="" G SKIP
"RTN","DPTLK2",60,0)
 I X["?"!(X="") W:X="" *7," ??" D HLPID G ASKID
"RTN","DPTLK2",61,0)
 I $P(DPTID0,U,2)["S" F I=1:1 S Y=$P($P(DPTID0,U,3),";",I) K:Y="" X Q:Y=""  I $P(Y,":",1)=X!($E($P(Y,":",2),1,$L(X))=X) S X=$P(Y,":",1),DPTSET=$P(Y,":",2) Q
"RTN","DPTLK2",62,0)
SKIP I $P(DPTID0,U,2)["P" D P1 G ASKID:Y'>0 S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",63,0)
 I DPTID=.301,$D(X) D CHKIT Q:'$D(X)  I $D(X) W:$D(DPTSET) " ",DPTSET S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",64,0)
 I DPTID'=.301 X $P(DPTID0,U,5,99) I $D(X) W:$D(DPTSET) " ",DPTSET S DPTIDS(DPTID)=X,DPT("DR")=DPT("DR")_"///"_X K DPTSET Q
"RTN","DPTLK2",65,0)
 W:'$D(X)&($P(DPTID0,U,2)'["D") *7," ??" D HLPID G ASKID
"RTN","DPTLK2",66,0)
 ;
"RTN","DPTLK2",67,0)
HLPID W:$D(^DD(2,DPTID,.1)) !?5,^(.1) W:$D(^DD(2,DPTID,3)) !?5,^(3) I $D(X),X["?" F I=0:0 S I=$O(^DD(2,DPTID,21,I)) Q:'I!(I>3&(X?1"?"))  I $D(^(I,0)) W !?5,^(0) I I>2,X?1"?" W !?5,"..."
"RTN","DPTLK2",68,0)
 X:$D(^DD(2,DPTID,4)) ^(4) I $P(DPTID0,U,2)["D" S X="?",%DT="E" D ^%DT
"RTN","DPTLK2",69,0)
 I $P(DPTID0,U,2)["S" W !?7,"CHOOSE FROM: " F I=1:1 S Y=$P($P(DPTID0,U,3),";",I) Q:Y=""  W !?7,$P(Y,":",1),?15," ",$P(Y,":",2)
"RTN","DPTLK2",70,0)
 I $P(DPTID0,U,2)["P" D P1
"RTN","DPTLK2",71,0)
 Q
"RTN","DPTLK2",72,0)
P1 S DPTDIC=$G(DIC),DPTDIC(0)=$G(DIC(0)) S:$D(DIC("S")) DPTDIC("S")=DIC("S") S:$D(DIC("W")) DPTDIC("W")=DIC("W") S DIC="^"_$P(DPTID0,"^",3),DIC(0)="QEMZ",D="B" D IX^DIC
"RTN","DPTLK2",73,0)
 S DIC=DPTDIC,DIC(0)=DPTDIC(0) S:$D(DPTDIC("S")) DIC("S")=DPTDIC("S") S:$D(DPTDIC("W")) DIC("W")=DPTDIC("W") K DPTDIC D DO^DIC1 S:X["^" DPTDFN=-1 I X'["^",X'["?",Y'>0 S X="?" G P1
"RTN","DPTLK2",74,0)
 Q
"RTN","DPTLK2",75,0)
CHKIT ; do input transform for .301
"RTN","DPTLK2",76,0)
 I X'="Y" Q
"RTN","DPTLK2",77,0)
 S DGVV=DPTIDS(391),DGVV=$O(^DG(391,"B",DGVV,0))
"RTN","DPTLK2",78,0)
 S DGVV=$S($D(^DG(391,+DGVV,0)):$P(^(0),"^",2),1:"")
"RTN","DPTLK2",79,0)
 I DPTIDS(1901)'="Y",'DGVV D EN^DDIOL("Applicant is NOT a veteran!!","","!?4") K X W !?6,*7,"<'",DPTX,"'> NOT ADDED"
"RTN","DPTLK2",80,0)
 Q
"RTN","DPTLK2",81,0)
DEL ;Delete logic
"RTN","DPTLK2",82,0)
 N I,J,A,G,Q,ERR S Q="""",ERR=0 F I=0:0 S I=$O(^DD(2,0,"PT",I)) Q:'I  F J=0:0 S J=$O(^DD(2,0,"PT",I,J)) Q:'J  D
"RTN","DPTLK2",83,0)
  .F K=0:0 S K=$O(^DD(I,+J,1,K)) Q:'K  S A=$G(^(K,0)) I $L($P(A,U,2)),'$L($P(A,U,3)) D
"RTN","DPTLK2",84,0)
 ..S G=$G(^DIC(+I,0,"GL")) Q:'$L(G)  I $D(@(G_Q_$P(A,U,2)_Q_","_DA_")")) W !,"Entry in "_$P($G(^DIC(I,0)),U)_" ("_I_") refers to this patient" S ERR=1 Q
"RTN","DPTLK2",85,0)
 I ERR
"VER")
8.0^22.0
"BLD",6035,6)
^SEQ #583
**END**
**END**
