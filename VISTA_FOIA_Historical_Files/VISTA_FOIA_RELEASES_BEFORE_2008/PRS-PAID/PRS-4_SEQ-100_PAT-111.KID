Released PRS*4*111 SEQ #100
Extracted from mail message
**KIDS**:PRS*4.0*111^

**INSTALL NAME**
PRS*4.0*111
"BLD",6895,0)
PRS*4.0*111^PAID^0^3070131^y
"BLD",6895,1,0)
^^4^4^3070131^
"BLD",6895,1,1,0)
Public Law 108-445 modified the pay policies for VHA Physicians and 
"BLD",6895,1,2,0)
Dentists effective January 8, 2006.  This patch modifies VistA PAID/ETA in
"BLD",6895,1,3,0)
accordance with the new pay policies for leave accrual and charging of
"BLD",6895,1,4,0)
leave.
"BLD",6895,4,0)
^9.64PA^^
"BLD",6895,6.3)
2
"BLD",6895,"KRN",0)
^9.67PA^8989.52^19
"BLD",6895,"KRN",.4,0)
.4
"BLD",6895,"KRN",.401,0)
.401
"BLD",6895,"KRN",.402,0)
.402
"BLD",6895,"KRN",.403,0)
.403
"BLD",6895,"KRN",.5,0)
.5
"BLD",6895,"KRN",.84,0)
.84
"BLD",6895,"KRN",3.6,0)
3.6
"BLD",6895,"KRN",3.8,0)
3.8
"BLD",6895,"KRN",9.2,0)
9.2
"BLD",6895,"KRN",9.8,0)
9.8
"BLD",6895,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",6895,"KRN",9.8,"NM",1,0)
PRS8EX^^0^B42340152
"BLD",6895,"KRN",9.8,"NM",2,0)
PRS8EX0^^0^B17566874
"BLD",6895,"KRN",9.8,"NM",3,0)
PRS8MISC^^0^B19784550
"BLD",6895,"KRN",9.8,"NM",4,0)
PRS8MSC0^^0^B31114141
"BLD",6895,"KRN",9.8,"NM",5,0)
PRS8MSC1^^0^B5858740
"BLD",6895,"KRN",9.8,"NM",6,0)
PRSALVT^^0^B1975333
"BLD",6895,"KRN",9.8,"NM",7,0)
PRSATP0^^0^B6313343
"BLD",6895,"KRN",9.8,"NM",8,0)
PRSAPRT^^0^B6082523
"BLD",6895,"KRN",9.8,"NM",9,0)
PRS8DR^^0^B11848996
"BLD",6895,"KRN",9.8,"NM",10,0)
PRS8^^0^B32497290
"BLD",6895,"KRN",9.8,"NM","B","PRS8",10)

"BLD",6895,"KRN",9.8,"NM","B","PRS8DR",9)

"BLD",6895,"KRN",9.8,"NM","B","PRS8EX",1)

"BLD",6895,"KRN",9.8,"NM","B","PRS8EX0",2)

"BLD",6895,"KRN",9.8,"NM","B","PRS8MISC",3)

"BLD",6895,"KRN",9.8,"NM","B","PRS8MSC0",4)

"BLD",6895,"KRN",9.8,"NM","B","PRS8MSC1",5)

"BLD",6895,"KRN",9.8,"NM","B","PRSALVT",6)

"BLD",6895,"KRN",9.8,"NM","B","PRSAPRT",8)

"BLD",6895,"KRN",9.8,"NM","B","PRSATP0",7)

"BLD",6895,"KRN",19,0)
19
"BLD",6895,"KRN",19.1,0)
19.1
"BLD",6895,"KRN",101,0)
101
"BLD",6895,"KRN",409.61,0)
409.61
"BLD",6895,"KRN",771,0)
771
"BLD",6895,"KRN",870,0)
870
"BLD",6895,"KRN",8989.51,0)
8989.51
"BLD",6895,"KRN",8989.52,0)
8989.52
"BLD",6895,"KRN",8994,0)
8994
"BLD",6895,"KRN","B",.4,.4)

"BLD",6895,"KRN","B",.401,.401)

"BLD",6895,"KRN","B",.402,.402)

"BLD",6895,"KRN","B",.403,.403)

"BLD",6895,"KRN","B",.5,.5)

"BLD",6895,"KRN","B",.84,.84)

"BLD",6895,"KRN","B",3.6,3.6)

"BLD",6895,"KRN","B",3.8,3.8)

"BLD",6895,"KRN","B",9.2,9.2)

"BLD",6895,"KRN","B",9.8,9.8)

"BLD",6895,"KRN","B",19,19)

"BLD",6895,"KRN","B",19.1,19.1)

"BLD",6895,"KRN","B",101,101)

"BLD",6895,"KRN","B",409.61,409.61)

"BLD",6895,"KRN","B",771,771)

"BLD",6895,"KRN","B",870,870)

"BLD",6895,"KRN","B",8989.51,8989.51)

"BLD",6895,"KRN","B",8989.52,8989.52)

"BLD",6895,"KRN","B",8994,8994)

"BLD",6895,"QUES",0)
^9.62^^
"BLD",6895,"REQB",0)
^9.611^3^3
"BLD",6895,"REQB",1,0)
PRS*4.0*80^2
"BLD",6895,"REQB",2,0)
PRS*4.0*69^2
"BLD",6895,"REQB",3,0)
PRS*4.0*90^2
"BLD",6895,"REQB","B","PRS*4.0*69",2)

"BLD",6895,"REQB","B","PRS*4.0*80",1)

"BLD",6895,"REQB","B","PRS*4.0*90",3)

"MBREQ")
0
"PKG",408,-1)
1^1
"PKG",408,0)
PAID^PRS^PAID
"PKG",408,20,0)
^9.402P^^
"PKG",408,22,0)
^9.49I^1^1
"PKG",408,22,1,0)
4.0^2950912^2960130
"PKG",408,22,1,"PAH",1,0)
111^3070131
"PKG",408,22,1,"PAH",1,1,0)
^^4^4^3070131
"PKG",408,22,1,"PAH",1,1,1,0)
Public Law 108-445 modified the pay policies for VHA Physicians and 
"PKG",408,22,1,"PAH",1,1,2,0)
Dentists effective January 8, 2006.  This patch modifies VistA PAID/ETA in
"PKG",408,22,1,"PAH",1,1,3,0)
accordance with the new pay policies for leave accrual and charging of
"PKG",408,22,1,"PAH",1,1,4,0)
leave.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","PRS8")
0^10^B32497290^B23683720
"RTN","PRS8",1,0)
PRS8 ;HISC/MRL,WIRMFO/JAH-DECOMPOSITION, PROCESSOR ;01/30/2007
"RTN","PRS8",2,0)
 ;;4.0;PAID;**22,111**;Sep 21, 1995;Build 2
"RTN","PRS8",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8",4,0)
 ;
"RTN","PRS8",5,0)
 ;This is the routine which is used to start the decomposition
"RTN","PRS8",6,0)
 ;process.  There are several entry points which allow one to
"RTN","PRS8",7,0)
 ;process either an entire T&L, all entries or a single person.
"RTN","PRS8",8,0)
 ;Once the decision is made as to which entries to process the
"RTN","PRS8",9,0)
 ;routine ^PRS8DR is called and everything starts running.
"RTN","PRS8",10,0)
 ;
"RTN","PRS8",11,0)
 D DT^DICRW,HOME^%ZIS S DIK="^DOPT(""PRS8"","
"RTN","PRS8",12,0)
 G OPT:$D(^DOPT("PRS8",3)) K ^DOPT("PRS8")
"RTN","PRS8",13,0)
 S ^DOPT("PRS8",0)="PAID Decomposition Option"
"RTN","PRS8",14,0)
 F I=1:1 S X=$T(@I) Q:X']""  D
"RTN","PRS8",15,0)
 .S ^DOPT("PRS8",I,0)=$P(X,";",3)
"RTN","PRS8",16,0)
 .S ^DOPT("PRS8","B",$P(X,";",3),I)=""
"RTN","PRS8",17,0)
 D IXALL^DIK
"RTN","PRS8",18,0)
 ;
"RTN","PRS8",19,0)
OPT ; --- option selection
"RTN","PRS8",20,0)
 W !! S DIC="^DOPT(""PRS8"",",DIC(0)="EAQM" D ^DIC
"RTN","PRS8",21,0)
 I Y>0 S SEE=1 D @+Y G OPT
"RTN","PRS8",22,0)
 G ^PRS8CV
"RTN","PRS8",23,0)
 ;
"RTN","PRS8",24,0)
1 ;;EMPLOYEE
"RTN","PRS8",25,0)
 W @IOF,!?21,"DECOMPOSE TIME FOR A SPECIFIC EMPLOYEE",!
"RTN","PRS8",26,0)
11 S (SEE,SAVE)=1,DIC("A")="Select Desired PAY PERIOD:  "
"RTN","PRS8",27,0)
 D PY I 'OK D ^PRS8CV Q
"RTN","PRS8",28,0)
12 S DIC("A")="Decompose Time for which EMPLOYEE?  "
"RTN","PRS8",29,0)
 D EMP G 11:'OK,12:OK<0
"RTN","PRS8",30,0)
 S (OK,SEE)=1 D EXIST G 12:'OK
"RTN","PRS8",31,0)
 D PRINT
"RTN","PRS8",32,0)
 G 12 ;ask for another
"RTN","PRS8",33,0)
 ;
"RTN","PRS8",34,0)
2 ;;T&L DECOMPOSITION
"RTN","PRS8",35,0)
 W @IOF,!?35,"DECOMPOSE TIME FOR A T&L",!
"RTN","PRS8",36,0)
 D ^PRS8TL Q
"RTN","PRS8",37,0)
 ;
"RTN","PRS8",38,0)
3 ;;VIEW
"RTN","PRS8",39,0)
 W @IOF,!?22,"VIEW DECOMPOSED TIME FOR A SPECIFIC EMPLOYEE",!
"RTN","PRS8",40,0)
 S SAVE=0,SEE=1 G 11
"RTN","PRS8",41,0)
 ;
"RTN","PRS8",42,0)
DFN ; --- entry point where DFN and PY are defined
"RTN","PRS8",43,0)
 N %
"RTN","PRS8",44,0)
 S DFN=$G(DFN),PY=$G(PY)
"RTN","PRS8",45,0)
 D CKPY Q:'OK
"RTN","PRS8",46,0)
 D CKDFN Q:OK'>0
"RTN","PRS8",47,0)
 S SEE=+$G(SEE)
"RTN","PRS8",48,0)
 S SAVE=+$G(SAVE)
"RTN","PRS8",49,0)
 G ^PRS8DR
"RTN","PRS8",50,0)
 ;
"RTN","PRS8",51,0)
PY ; --- select pay period to decompose
"RTN","PRS8",52,0)
 W ! S DIC="^PRST(458,",DIC(0)="AEQMZ" D ^DIC
"RTN","PRS8",53,0)
 S PY=+Y K DIC
"RTN","PRS8",54,0)
 ;
"RTN","PRS8",55,0)
CKPY ; --- entry point for checking PY variable
"RTN","PRS8",56,0)
 S (E,OK)=0,PY=+$G(PY) D
"RTN","PRS8",57,0)
 .I '$D(^PRST(458,+PY,0)) S E=1 Q  ;no/invalid pp
"RTN","PRS8",58,0)
 .S PPD=$G(^PRST(458,+PY,1)) I 'PPD S E=2 Q  ;no/invalid days node
"RTN","PRS8",59,0)
 .S X1=+PPD,X2=-14 D C^%DTC S PRS8D=X
"RTN","PRS8",60,0)
 .S X=$G(^PRST(458,"AD",X)),PPD(0)=+X,PPD(1)=$G(^PRST(458,+X,1)) ;last pp dates
"RTN","PRS8",61,0)
 .S X1=+PPD,X2=14 D C^%DTC ;15th day
"RTN","PRS8",62,0)
 .S X=$G(^PRST(458,"AD",X)),PPD(15)=+X
"RTN","PRS8",63,0)
 .S OK=1 D EN^PRS8HD K HO,PRS8D
"RTN","PRS8",64,0)
 I 'OK,E,PY'=-1 D NOPE
"RTN","PRS8",65,0)
 Q
"RTN","PRS8",66,0)
 ;
"RTN","PRS8",67,0)
EMP ; --- select employee
"RTN","PRS8",68,0)
 W ! S DIC="^PRSPC(",DIC(0)="AEQMZ" D ^DIC
"RTN","PRS8",69,0)
 S OK=0,DFN=+Y K DIC Q:DFN'>0  S OK=1
"RTN","PRS8",70,0)
 ;
"RTN","PRS8",71,0)
CKDFN ; --- entry point for checking DFN
"RTN","PRS8",72,0)
 S E=0,DFN=+$G(DFN)
"RTN","PRS8",73,0)
 S:'$D(^PRSPC(+DFN,0)) E=3
"RTN","PRS8",74,0)
 S:'$D(^PRST(458,+PY,"E",+DFN,0)) E=4
"RTN","PRS8",75,0)
 I E,DFN'=-1 D NOPE
"RTN","PRS8",76,0)
 Q
"RTN","PRS8",77,0)
 ;
"RTN","PRS8",78,0)
ONE ; --- entry point for decomposing a single entry (non-inteactive)
"RTN","PRS8",79,0)
 N %,DA
"RTN","PRS8",80,0)
 S SEE=0,SAVE=1,PY=+$G(PPI)
"RTN","PRS8",81,0)
 D CKPY G END:'OK
"RTN","PRS8",82,0)
 D CKDFN G END:'OK
"RTN","PRS8",83,0)
 D ^PRS8DR G END
"RTN","PRS8",84,0)
 ;
"RTN","PRS8",85,0)
PRINT ; --- where do I display this
"RTN","PRS8",86,0)
 S PRS8("PGM")="1^PRS8DR",PRS8("VAR")="DFN^PY^SAVE^SEE^PPD^PPD(^HD(",PRS8("DES")="Single Employee Descomposition" D DEV^PRS8UT
"RTN","PRS8",87,0)
 K PRS8 Q
"RTN","PRS8",88,0)
 ;
"RTN","PRS8",89,0)
EXIST ; --- check to see if data exists and show
"RTN","PRS8",90,0)
 K VAL,VALOLD S VALOLD=$G(^PRST(458,+PY,"E",+DFN,5)) Q:VALOLD=""
"RTN","PRS8",91,0)
 D ^PRSAENT,^PRS8VW ;show existing data
"RTN","PRS8",92,0)
 S TMTD=$G(^PRST(458,+PY,"E",DFN,0)),TMTD=$S($P(TMTD,"^",2)="X":1,1:0)
"RTN","PRS8",93,0)
 W !!,"The above data already exists from a previous decomposition.  You may decompose"
"RTN","PRS8",94,0)
 W !,"again at this time to identify any changes.  Since this "
"RTN","PRS8",95,0)
 I TMTD W "record has been TRANSMITTED",!,"already the original record will not be overwritten!!" Q
"RTN","PRS8",96,0)
 E  W "is a",$S(SAVE:"n EDIT",1:" VIEW")," option",!,"running the decomposition WILL ",$S('SAVE:"NOT ",1:""),"overwrite existing information!"
"RTN","PRS8",97,0)
 ;
"RTN","PRS8",98,0)
DECOM ; --- decompose again
"RTN","PRS8",99,0)
 W !!,"Do you wish to run the decomposition" S %=2 D YN^DICN
"RTN","PRS8",100,0)
 I % S OK=$S(%=1:1,1:0) Q
"RTN","PRS8",101,0)
 W !?4,"Answer YES to rerun the decomposition process for this individual and ",$S('TMTD!('SAVE):"VIEW",1:"SAVE"),!?4,"the changes.  Respond NO to QUIT now!" G DECOM
"RTN","PRS8",102,0)
 ;
"RTN","PRS8",103,0)
NOPE ; --- can't process
"RTN","PRS8",104,0)
 Q:'E  S ER(+E)=$P($T(ER+E),";;",2) W:SEE !?4,ER(+E),$C(7) S OK=0 Q
"RTN","PRS8",105,0)
 ;
"RTN","PRS8",106,0)
END ; --- all done here/kill variables
"RTN","PRS8",107,0)
 Q
"RTN","PRS8",108,0)
 ;
"RTN","PRS8",109,0)
AUTOPINI(PPIEN,EMPIEN,PRIOR,PRVAL) ; initialize auto-posted data
"RTN","PRS8",110,0)
 ; This call backs out auto-posted data from the time card (if any)
"RTN","PRS8",111,0)
 ; inputs
"RTN","PRS8",112,0)
 ;   PPIEN  = pay period IEN (file 458)
"RTN","PRS8",113,0)
 ;   EMPIEN = employee IEN (file 450, sub-file 458.01)
"RTN","PRS8",114,0)
 ;   PRIOR  = optional flag, true (=1) to return original data
"RTN","PRS8",115,0)
 ;   PRVAL  = optional array, required if PRIOR true
"RTN","PRS8",116,0)
 ;            passed by reference
"RTN","PRS8",117,0)
 ;            contains the original data (before removal) in the format
"RTN","PRS8",118,0)
 ;              PRVAL(day number,node number)=value of node
"RTN","PRS8",119,0)
 ;            if no auto-posted data then array would be undefined
"RTN","PRS8",120,0)
 ;
"RTN","PRS8",121,0)
 N DAY,NODE,TOUR
"RTN","PRS8",122,0)
 I $G(PRIOR) K PRVAL
"RTN","PRS8",123,0)
 ;
"RTN","PRS8",124,0)
 ; loop thru days of employee time card
"RTN","PRS8",125,0)
 S DAY=0 F  S DAY=$O(^PRST(458,PPIEN,"E",EMPIEN,"D",DAY))  Q:DAY=""  D
"RTN","PRS8",126,0)
 . ; quit if day not auto-posted (DUZ not = .5 POSTMASTER)
"RTN","PRS8",127,0)
 . Q:$P($G(^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,10)),"^",2)'=.5
"RTN","PRS8",128,0)
 . ;
"RTN","PRS8",129,0)
 . ; if PRIOR true then save the current data
"RTN","PRS8",130,0)
 . I $G(PRIOR) F NODE=2,3,10 D
"RTN","PRS8",131,0)
 . . S PRVAL(DAY,NODE)=$G(^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,NODE))
"RTN","PRS8",132,0)
 . ;
"RTN","PRS8",133,0)
 . ; determine tour of duty
"RTN","PRS8",134,0)
 . S TOUR=$P($G(^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,0)),"^",2)
"RTN","PRS8",135,0)
 . ;
"RTN","PRS8",136,0)
 . ; if day off then delete auto-posted data else restore day to HX
"RTN","PRS8",137,0)
 . I TOUR=1 K ^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,2),^(3),^(10)
"RTN","PRS8",138,0)
 . E  D
"RTN","PRS8",139,0)
 . . S $P(^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,2),"^",3)="HX"
"RTN","PRS8",140,0)
 . . K ^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,3)
"RTN","PRS8",141,0)
 Q
"RTN","PRS8",142,0)
 ;
"RTN","PRS8",143,0)
AUTOPRES(PPIEN,EMPIEN,PRVAL) ; restore auto-posted data
"RTN","PRS8",144,0)
 ; This call restores original auto-posted data that was initialized
"RTN","PRS8",145,0)
 ; by AUTOPINI. See AUTOPINI for description of inputs.
"RTN","PRS8",146,0)
 ;
"RTN","PRS8",147,0)
 N DAY,NODE
"RTN","PRS8",148,0)
 ;
"RTN","PRS8",149,0)
 ; loop thru days with auto-posted data
"RTN","PRS8",150,0)
 S DAY=0 F  S DAY=$O(PRVAL(DAY)) Q:'DAY  D
"RTN","PRS8",151,0)
 . ; loop thru nodes and restore original data
"RTN","PRS8",152,0)
 . F NODE=2,3,10 I $D(PRVAL(DAY,NODE)) D
"RTN","PRS8",153,0)
 . . S ^PRST(458,PPIEN,"E",EMPIEN,"D",DAY,NODE)=PRVAL(DAY,NODE)
"RTN","PRS8",154,0)
 Q
"RTN","PRS8",155,0)
 ;
"RTN","PRS8",156,0)
ER ; error messages
"RTN","PRS8",157,0)
 ;;Invalid/Missing Pay Period passed (variable PY)
"RTN","PRS8",158,0)
 ;;The 1 node for the Pay Period is missing but needed to process
"RTN","PRS8",159,0)
 ;;Employee does not exist in Employee (450) file
"RTN","PRS8",160,0)
 ;;Employee has no timekeeping record for requested Pay Period
"RTN","PRS8DR")
0^9^B11848996^B10594635
"RTN","PRS8DR",1,0)
PRS8DR ;HISC/MRL,JAH/WCIOFO-DECOMPOSITION, DRIVER ;1/25/2007
"RTN","PRS8DR",2,0)
 ;;4.0;PAID;**22,29,56,90,111**;Sep 21, 1995;Build 2
"RTN","PRS8DR",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8DR",4,0)
 ;
"RTN","PRS8DR",5,0)
 ;This routine determines whether or not the parameters necessary
"RTN","PRS8DR",6,0)
 ;to decompose time are in existance.  The majority of variables
"RTN","PRS8DR",7,0)
 ;involving processing an individual employee are defined in this
"RTN","PRS8DR",8,0)
 ;routine.
"RTN","PRS8DR",9,0)
 ;
"RTN","PRS8DR",10,0)
 ;The following lines establish variables necessary to process a
"RTN","PRS8DR",11,0)
 ;specific employees time for the specified pay period.
"RTN","PRS8DR",12,0)
 ;
"RTN","PRS8DR",13,0)
 ;Called by Routines:  PRS8, PRS8DR (tag 1)
"RTN","PRS8DR",14,0)
 ;
"RTN","PRS8DR",15,0)
 N PRVAL,RESTORE
"RTN","PRS8DR",16,0)
 ;
"RTN","PRS8DR",17,0)
 D ONE^PRS8CV ;clean up variables
"RTN","PRS8DR",18,0)
 S SAVE=+$G(SAVE),SEE=+$G(SEE)
"RTN","PRS8DR",19,0)
 S TMTD=$G(^PRST(458,+PY,"E",DFN,0)),TMTD=$S($P(TMTD,"^",2)="X":1,1:0)
"RTN","PRS8DR",20,0)
 K WK F I=1,2,3 S WK(I)="" ;weekly totals (wk3=misc data)
"RTN","PRS8DR",21,0)
 D ^PRSAENT S VAL="" ;get entitlement (ENT)
"RTN","PRS8DR",22,0)
 I PP="S" G END ;manilla citizen/don't decompose/no stub
"RTN","PRS8DR",23,0)
 I $G(PB)["$" G STUB^PRS8CR ;don't decompose stipend/create stub
"RTN","PRS8DR",24,0)
 I "^P^X^"[(U_$P($G(^PRST(458,+PY,"E",DFN,0)),"^",2)_U) S RESTORE=1
"RTN","PRS8DR",25,0)
 D AUTOPINI^PRS8(+PY,+DFN,$G(RESTORE),.PRVAL) ; remove auto-posted data
"RTN","PRS8DR",26,0)
 S DOUB=0 I $E(ENT,26),$E(ENT,29) S DOUB=1 ;count standby & oncall same
"RTN","PRS8DR",27,0)
 S FLX="" S FLX=$P($G(^PRST(458,+PY,"E",DFN,0)),"^",6)
"RTN","PRS8DR",28,0)
 S (SST,TAL)="",X=$P(C0,"^",8) I X'="" D  ;T&L Unit
"RTN","PRS8DR",29,0)
 .S X=$O(^PRST(455.5,"B",X,0)) ;get ien
"RTN","PRS8DR",30,0)
 .S TAL=$G(^PRST(455.5,+X,0)),X=$P(TAL,"^",8) ;get sleep start time
"RTN","PRS8DR",31,0)
 .I $L(X) S (NDAY,LAST,Y,Y1)=0 D 15^PRS8SU
"RTN","PRS8DR",32,0)
 .S SST=$S(+X:X,1:93) K X,Y1,LAST,X ;sleep start time
"RTN","PRS8DR",33,0)
 .K SL,SB,ST ;make sure standby variable don't exist
"RTN","PRS8DR",34,0)
 S (CAMISC,CYA,CYA2806,WPCYA,LU)=0 ; << ADDED >> calendar year adjust./leave used in pp
"RTN","PRS8DR",35,0)
 S (NH(1),NH(2))=0 ;normal hrs/pp total/week(1)/week(2)
"RTN","PRS8DR",36,0)
 S (TH,TH(1),TH(2))=0 ;total hours
"RTN","PRS8DR",37,0)
 N CT S (CT(1),CT(2))=0 ; counter for compensatory time
"RTN","PRS8DR",38,0)
 K DWK S DWK=0 ;count of days worked - for intermittents
"RTN","PRS8DR",39,0)
 S NH=NH/.25 ;turn Norm hrs into 15min increments
"RTN","PRS8DR",40,0)
 K TOUR S (TOUR(1),TOUR(2))="" ;tour code for wg/week(1)/week(2)
"RTN","PRS8DR",41,0)
 K TYP S TYP="" I $E(ENT)="D"!($E(ENT,1,2)="0D") S TYP=TYP_"D" ;daily pay basis
"RTN","PRS8DR",42,0)
 I PP?1N.E!(PP="U") S TYP=TYP_"W" ;wagegrade
"RTN","PRS8DR",43,0)
 I PP'="","KM"[PP S TYP=TYP_"N" ;nurse
"RTN","PRS8DR",44,0)
 I +$E(AC,2)=1,NH=192 S TYP=TYP_"B" ;baylor plan
"RTN","PRS8DR",45,0)
 I $G(PMP)'="","EF"[PMP S TYP=TYP_"H" ;Nurse Hybrid
"RTN","PRS8DR",46,0)
 I $E($G(AC),2)=3 S TYP=TYP_"I" ;intermittent
"RTN","PRS8DR",47,0)
 I NH>320 S TYP=TYP_"F" I NH'>448 S TYP=TYP_"f" ;firefighter
"RTN","PRS8DR",48,0)
 I NH,NH'>319 S TYP=TYP_"P" ;part-time
"RTN","PRS8DR",49,0)
 I PP="L",$E(AC,2)=2 S TYP=TYP_"d" ;doctor
"RTN","PRS8DR",50,0)
 I PP="L",$E(AC,2)=1 S TYP=TYP_"dR" ;doctor/resident or intern
"RTN","PRS8DR",51,0)
 S (PTH,PTH(1),PTH(2))=0 ;part-time hours
"RTN","PRS8DR",52,0)
 K WKL S (WKL(1),WKL(2))=0 ;count leave used in week during ND hours
"RTN","PRS8DR",53,0)
 K MEAL S $P(MEAL,"1^",14)="",MEAL=MEAL_1 ;mealtime
"RTN","PRS8DR",54,0)
 S (MILV,WCMP)=0 ;ML and PC indicators
"RTN","PRS8DR",55,0)
 S (CBCK(1),CBCK(2))=0 ;call back hrs by week counter
"RTN","PRS8DR",56,0)
 I TYP="" S TYP="*"
"RTN","PRS8DR",57,0)
 K I,PB,PP,X,X1,X2
"RTN","PRS8DR",58,0)
 D ^PRS8SU ;set up employee variables and commence decomposing
"RTN","PRS8DR",59,0)
 D ^PRS8CR
"RTN","PRS8DR",60,0)
 D:$D(PRVAL) AUTOPRES^PRS8(+PY,+DFN,.PRVAL) ; restore auto-posted data
"RTN","PRS8DR",61,0)
 I SEE D ^PRS8VW
"RTN","PRS8DR",62,0)
 ;
"RTN","PRS8DR",63,0)
END ; --- This is where we end this process
"RTN","PRS8DR",64,0)
 G ONE^PRS8CV ;clean up
"RTN","PRS8DR",65,0)
 Q
"RTN","PRS8DR",66,0)
 ;
"RTN","PRS8DR",67,0)
1 ; --- enter here to print single entry and close device
"RTN","PRS8DR",68,0)
 D ^PRS8DR,^%ZISC Q
"RTN","PRS8EX")
0^1^B42340152^B42616288
"RTN","PRS8EX",1,0)
PRS8EX ;HISC/MRL,WCIOFO/SAB-DECOMPOSITION, EXCEPTIONS ;1/25/2007
"RTN","PRS8EX",2,0)
 ;;4.0;PAID;**2,40,56,69,111**;Sep 21, 1995;Build 2
"RTN","PRS8EX",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8EX",4,0)
 ;
"RTN","PRS8EX",5,0)
 ;This routine is used to process most exceptions to the normal
"RTN","PRS8EX",6,0)
 ;tod.  It is used, for example, to determine whether or not the
"RTN","PRS8EX",7,0)
 ;employee is entitled to such exceptions as Leave, OT, etc.,
"RTN","PRS8EX",8,0)
 ;and then calls ^PRS8AC to process them.
"RTN","PRS8EX",9,0)
 ;
"RTN","PRS8EX",10,0)
 ;Called by Routines:  PRS8ST
"RTN","PRS8EX",11,0)
 ;
"RTN","PRS8EX",12,0)
 S TT=$P(V,"^",3) ;type of time
"RTN","PRS8EX",13,0)
 I TT="OT",+$P(V,"^",4)=8,$E(ENT,18) S TT="TT" ;ot in travel status
"RTN","PRS8EX",14,0)
 I TT="CU",$P(V,"^",4)=6 Q  ;comp for religious purposes/don't code
"RTN","PRS8EX",15,0)
 I TT="HW",$E(ENT,1,2)="0D" S TT="RG"
"RTN","PRS8EX",16,0)
 I TT="OT",TYP["P",TYP'["B" S TT="RG" ;To convert Pt ot to RG
"RTN","PRS8EX",17,0)
 I TT="HW",TYP'["D",+V,+$P(V,"^",2) D
"RTN","PRS8EX",18,0)
 .I $P(V,"^",2)-V-1<8 D  ; <2 hrs HW
"RTN","PRS8EX",19,0)
 ..S ^TMP($J,"PRS8",DY,"HW")=$G(^TMP($J,"PRS8",DY,"HW"))_$P(V,U,1,2)_U
"RTN","PRS8EX",20,0)
 ..Q
"RTN","PRS8EX",21,0)
 .I TYP["P",$P(V,"^",2)>96 S LEN=$P(V,"^",2)-96 D  ;two day tour of HW for part timers
"RTN","PRS8EX",22,0)
 ..S ^TMP($J,"PRS8",DY+1,"HWK")=$G(^TMP($J,"PRS8",DY+1,"HWK"))_1_U_LEN_U
"RTN","PRS8EX",23,0)
 ..K LEN
"RTN","PRS8EX",24,0)
 ..Q
"RTN","PRS8EX",25,0)
 .I TYP["P",TYP["N"!(TYP["H"),'$E(DAY(DY,"W"),+V) D  ; part time nurses, uscheduled HW.
"RTN","PRS8EX",26,0)
 ..S ^TMP($J,"PRS8",DY,"HWK")=$G(^TMP($J,"PRS8",DY,"HWK"))_$P(V,U,1,2)_U
"RTN","PRS8EX",27,0)
 ..Q
"RTN","PRS8EX",28,0)
 .Q
"RTN","PRS8EX",29,0)
 S X="^AL^SL^WP^NP^AA^RL^CU^CT^CP^HX^ML^TR^TV^OT^RG^TT^SB^ON^NL^HW^CB^AD^DL" ;code
"RTN","PRS8EX",30,0)
 S X=($F(X,"^"_TT)\3)+4,(X,TT(1))=$P($T(ACT+X),";;",2) ;parameters
"RTN","PRS8EX",31,0)
 S GO=0 I '+X!($E(ENT,+X)) S GO=1 ;entitlement exists-continue
"RTN","PRS8EX",32,0)
 I TT="RG",$E(ENT,2)'=0 S GO=1 ;intermittent
"RTN","PRS8EX",33,0)
 I TT="RG"!(TT="CP"),$E(ENT,2)="D" S DAY(DY,"DWK")=1 ;intrmtnt-count days worked (for RG or CP)
"RTN","PRS8EX",34,0)
 I TT="OT",'GO,$E(ENT,13)!$E(ENT,14) S GO=1 ;entitled to ot
"RTN","PRS8EX",35,0)
 I TT="UN" S GO=1,VAR="-" ;unavailable
"RTN","PRS8EX",36,0)
 I TYP["W",TT="RG",$P(V,"^",4)=7 D
"RTN","PRS8EX",37,0)
 .;wage grade employee working regular unscheduled hours for
"RTN","PRS8EX",38,0)
 .;shift coverage (7) can get shift differential based on the higher
"RTN","PRS8EX",39,0)
 .;of the unscheduled tour's shift or their normal shift.
"RTN","PRS8EX",40,0)
 .;The unscheduled tour and corresponding differential will be saved
"RTN","PRS8EX",41,0)
 .;in the "SD" node and used by PRS8PP when differentials are
"RTN","PRS8EX",42,0)
 .;computed.
"RTN","PRS8EX",43,0)
 .N ST,EN,SD,MID
"RTN","PRS8EX",44,0)
 .S ST=$P(V,"^"),EN=$P(V,"^",2) Q:'ST!'EN
"RTN","PRS8EX",45,0)
 .S MID=ST+EN/2
"RTN","PRS8EX",46,0)
 .; check for 2day tour and if found use combined tour (recompute MID)
"RTN","PRS8EX",47,0)
 .; to determine appropriate shift differential.
"RTN","PRS8EX",48,0)
 .; if start is 1 (midnight) then check previous day for a similar tour
"RTN","PRS8EX",49,0)
 .; that ended at 96 (midnight).
"RTN","PRS8EX",50,0)
 . I ST=1 D
"RTN","PRS8EX",51,0)
 .. N PRSI,PRSX
"RTN","PRS8EX",52,0)
 .. S PRSX=$G(^TMP($J,"PRS8",DY-1,2))
"RTN","PRS8EX",53,0)
 .. F PRSI=1:1:7 Q:$P(PRSX,U,(PRSI-1)*4+1)=""  D
"RTN","PRS8EX",54,0)
 ... I $P(PRSX,U,(PRSI-1)*4+2)=96,$P(PRSX,U,(PRSI-1)*4+3)="RG",$P(PRSX,U,(PRSI-1)*4+4)=7 S MID=($P(PRSX,U,(PRSI-1)*4+1)+EN+96)/2
"RTN","PRS8EX",55,0)
 .; if end is 96 (midnight) then check next day for a similar tour that
"RTN","PRS8EX",56,0)
 .; starts at 1 (midnight).
"RTN","PRS8EX",57,0)
 . I EN=96 D
"RTN","PRS8EX",58,0)
 .. N PRSI,PRSX
"RTN","PRS8EX",59,0)
 .. S PRSX=$G(^TMP($J,"PRS8",DY+1,2))
"RTN","PRS8EX",60,0)
 .. F PRSI=1:1:7 Q:$P(PRSX,U,(PRSI-1)*4+1)=""  D
"RTN","PRS8EX",61,0)
 ... I $P(PRSX,U,(PRSI-1)*4+1)=1,$P(PRSX,U,(PRSI-1)*4+3)="RG",$P(PRSX,U,(PRSI-1)*4+4)=7 S MID=(ST+$P(PRSX,U,(PRSI-1)*4+2)+96)/2
"RTN","PRS8EX",62,0)
 .; determine shift differential (if any) based on unscheduled tour hours
"RTN","PRS8EX",63,0)
 .S SD=0
"RTN","PRS8EX",64,0)
 .I MID<32.5 S SD=3 ; majority of tour before 8a
"RTN","PRS8EX",65,0)
 .I MID>60.5,MID'>94.5 S SD=2 ; majority of tour after 3p, upto 11:30p
"RTN","PRS8EX",66,0)
 .I MID>94.5,MID<128.5 S SD=3 ; majority of tour after 11:30p, before 8a
"RTN","PRS8EX",67,0)
 .; use employee's normal shift if higher than shift based on hours
"RTN","PRS8EX",68,0)
 .I TOUR>1,TOUR>SD S SD=TOUR
"RTN","PRS8EX",69,0)
 .S:SD ^TMP($J,"PRS8",DY,"SD")=$G(^TMP($J,"PRS8",DY,"SD"))_ST_U_EN_U_SD_U
"RTN","PRS8EX",70,0)
 .Q
"RTN","PRS8EX",71,0)
 I (TT="OT"!(TT="RG")!(TT="CT")),"^13^14^"[("^"_$P(V,"^",4)_"^")!($P(V,"^",4)=12&(TYP["N"!(TYP["H"))) D
"RTN","PRS8EX",72,0)
 .S ^TMP($J,"PRS8",DY,"CB")=$G(^TMP($J,"PRS8",DY,"CB"))_$P(V,"^",1,2)_"^"
"RTN","PRS8EX",73,0)
 .Q
"RTN","PRS8EX",74,0)
 I TYP'["D",TT="HX"!(TT="HW") S GO=1 ;process holiday excused/worked
"RTN","PRS8EX",75,0)
 G END:'GO ;nothing to process
"RTN","PRS8EX",76,0)
 I TT'="UN" S VAR=$P(X,"^",3) ;increment time code
"RTN","PRS8EX",77,0)
 I '$S(VAR'="W":1,'CYA:1,DY<CYA:1,1:0) D
"RTN","PRS8EX",78,0)
 .S WPCY=1 ;flag to save WOP in hours from 1/1 for calander year adjustment
"RTN","PRS8EX",79,0)
 I TYP'["D" D  G END ;process hourly people and quit
"RTN","PRS8EX",80,0)
 .; The following 2 lines commented out because for Employees that are
"RTN","PRS8EX",81,0)
 .; non-daily tour (TYP'["D"), policy is has been described that all
"RTN","PRS8EX",82,0)
 .; ML/COP has to be posted by time-keeper.
"RTN","PRS8EX",83,0)
 .; If this changes, then uncomment these lines, remove the line adding
"RTN","PRS8EX",84,0)
 .; military leave and COP that follows, and refer to routine PRS8UP.
"RTN","PRS8EX",85,0)
 .; I VAR="M" S ^TMP($J,"PRS8",DY,"ML")=1,MILV=1 ;military leave taken
"RTN","PRS8EX",86,0)
 .; I VAR="V" S ^TMP($J,"PRS8",DY,"CP")=1,WCMP=1 ;cont of pay indicator
"RTN","PRS8EX",87,0)
 .I DY>0,DY<15 D
"RTN","PRS8EX",88,0)
 ..; Post ML for employees who are charged in days.
"RTN","PRS8EX",89,0)
 ..I VAR="M",$$MLINHRS^PRSAENT(DFN)=0 D
"RTN","PRS8EX",90,0)
 ...S X=$P(TT(1),"^",4) D SET ; military leave & auth. absence
"RTN","PRS8EX",91,0)
 ..I VAR="V",'$G(^TMP($J,"PRS8",DY,"CP")) S X="M",^TMP($J,"PRS8",DY,"CP")=1 D SET ; COP
"RTN","PRS8EX",92,0)
 ..Q
"RTN","PRS8EX",93,0)
 .D ^PRS8AC ;update activity string
"RTN","PRS8EX",94,0)
 .Q
"RTN","PRS8EX",95,0)
 ; Employees with daily tours (TYP["D")
"RTN","PRS8EX",96,0)
 I DY>0,DY<15,VAR="M" S X=$P(TT(1),"^",4) D SET S X=5 D SET G END ;military leave & auth. absence
"RTN","PRS8EX",97,0)
 I DY>0,DY<15,$$HOLIDAY^PRS8UT(PY,DFN,DY) D  G END ;holiday-no charge
"RTN","PRS8EX",98,0)
 .I TT="RG" S DAY(DY,"W")=VAR,X=$S('$E(ENT,TOUR+21):9,1:TOUR+28) D SET ; If worked on holiday count it.
"RTN","PRS8EX",99,0)
 .Q
"RTN","PRS8EX",100,0)
 S D=DY
"RTN","PRS8EX",101,0)
 I TT="NP"!($P(DAY(D,0),"^",2)'=1) S DAY(D,"W")=VAR,X=$P(TT(1),"^",4) I X'="",DY>0,DY<15 D SET I VAR="V" S X="M" D SET I VAR="V",TYP["DI",$E(ENT,2)="D" S X=9 D SET ; IF INT RESDNT PAID IN DAYS HAS COP POSTED PAY UN/US ALSO
"RTN","PRS8EX",102,0)
 D ENCAP^PRS8EX0
"RTN","PRS8EX",103,0)
 ;
"RTN","PRS8EX",104,0)
END ; --- all done here     
"RTN","PRS8EX",105,0)
 K A,D,DD,GO,TT,X,Z
"RTN","PRS8EX",106,0)
 Q
"RTN","PRS8EX",107,0)
 ;
"RTN","PRS8EX",108,0)
SET ; --- enter here to set without VAL defined
"RTN","PRS8EX",109,0)
 ; Quit if this day has already been counted through the encapsulation
"RTN","PRS8EX",110,0)
 ; check that is performed in ENCAP^PRS8EX0.
"RTN","PRS8EX",111,0)
 Q:$D(^TMP($J,"PRS8",DY,2,0))
"RTN","PRS8EX",112,0)
 ;
"RTN","PRS8EX",113,0)
 Q:X="K"&($P(V,"^",1)>96)!((X="K")&($D(^TMP($J,"PRS8",DY,"ML"))))  S ^TMP($J,"PRS8",DY,"ML")=1 ;stop counting ML twice for two day tours & split tours, but allow PC
"RTN","PRS8EX",114,0)
 I +X S $P(WK(WK),"^",+X)=$P(WK(WK),"^",+X)+1
"RTN","PRS8EX",115,0)
 E  S X=$A(X)-64,$P(WK(3),"^",+X)=$P(WK(3),"^",+X)+1
"RTN","PRS8EX",116,0)
 Q
"RTN","PRS8EX",117,0)
 ;
"RTN","PRS8EX",118,0)
ACT ; --- define variable X for action
"RTN","PRS8EX",119,0)
 ;     - piece 1 = entitlement (ENT) string $Extract to check
"RTN","PRS8EX",120,0)
 ;     -       2 = Literal name of exception
"RTN","PRS8EX",121,0)
 ;     -       3 = Time String code (DAY(X,"W"))
"RTN","PRS8EX",122,0)
 ;;
"RTN","PRS8EX",123,0)
 ;;30^Annual Leave^L^1
"RTN","PRS8EX",124,0)
 ;;31^Sick Leave^S^2
"RTN","PRS8EX",125,0)
 ;;33^Without Pay^W^3
"RTN","PRS8EX",126,0)
 ;;36^Non-Pay Status^n^4
"RTN","PRS8EX",127,0)
 ;;35^Authorized Absence^A^5
"RTN","PRS8EX",128,0)
 ;;30^Restored Leave^R^6
"RTN","PRS8EX",129,0)
 ;;28^Comp Used^U^8
"RTN","PRS8EX",130,0)
 ;;28^Comp Earned^E^7
"RTN","PRS8EX",131,0)
 ;;37^Continuation of Pay^V^33
"RTN","PRS8EX",132,0)
 ;;38^Holiday Excused^H
"RTN","PRS8EX",133,0)
 ;;34^Military Leave^M^K
"RTN","PRS8EX",134,0)
 ;;0^Training^X^43
"RTN","PRS8EX",135,0)
 ;;0^Travel^Y^42
"RTN","PRS8EX",136,0)
 ;;12^Overtime^O
"RTN","PRS8EX",137,0)
 ;;2^Unscheduled^4^9
"RTN","PRS8EX",138,0)
 ;;18^OT in Travel Status^T
"RTN","PRS8EX",139,0)
 ;;29^Standby^B
"RTN","PRS8EX",140,0)
 ;;26^On-Call^C
"RTN","PRS8EX",141,0)
 ;;36^Nonpay A/L^N^A
"RTN","PRS8EX",142,0)
 ;;38^Holiday Worked^h
"RTN","PRS8EX",143,0)
 ;;31^Care and Bereavement^F^44
"RTN","PRS8EX",144,0)
 ;;31^Adoption^G^45
"RTN","PRS8EX",145,0)
 ;;35^Donor Leave^D^46
"RTN","PRS8EX0")
0^2^B17566874^B16426747
"RTN","PRS8EX0",1,0)
PRS8EX0 ;HISC/MRL,WOIFO/JAH,SAB-DECOMP,EXCEPTIONS (cont'd) ;1/30/2007
"RTN","PRS8EX0",2,0)
 ;;4.0;PAID;**2,22,56,111**;Sep 21, 1995;Build 2
"RTN","PRS8EX0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8EX0",4,0)
 ;
"RTN","PRS8EX0",5,0)
ENCAP ;
"RTN","PRS8EX0",6,0)
 ; This routine checks if the current day encapsulates other days that
"RTN","PRS8EX0",7,0)
 ; should be automatically charged to WP or NP by the software. If so,
"RTN","PRS8EX0",8,0)
 ; appropriate encapsulated days are charged.  This routine is only
"RTN","PRS8EX0",9,0)
 ; called when the employee has a daily tour.
"RTN","PRS8EX0",10,0)
 ; inputs
"RTN","PRS8EX0",11,0)
 ;   PY - current pay period IEN
"RTN","PRS8EX0",12,0)
 ;   DY - current day number
"RTN","PRS8EX0",13,0)
 ;   TT - type of time posted on current day
"RTN","PRS8EX0",14,0)
 ;   TT(1) - data from ACT^PRS8EX for the type of time in TT
"RTN","PRS8EX0",15,0)
 ;   DFN - employee IEN
"RTN","PRS8EX0",16,0)
 ;
"RTN","PRS8EX0",17,0)
 ; day must be in pay period and posted with WP or NP
"RTN","PRS8EX0",18,0)
 Q:(DY<1)!(DY>14)
"RTN","PRS8EX0",19,0)
 Q:"^NP^WP^"'[(U_TT_U)
"RTN","PRS8EX0",20,0)
 ;
"RTN","PRS8EX0",21,0)
 N SCHDY,SCHEX,SCHPY,CHGDAY
"RTN","PRS8EX0",22,0)
 ;
"RTN","PRS8EX0",23,0)
 ; find prior scheduled work day that is not holiday excused
"RTN","PRS8EX0",24,0)
 D WORKDAY(DFN,PY,DY,-1,.SCHPY,.SCHDY,.SCHEX,.CHGDAY)
"RTN","PRS8EX0",25,0)
 ;
"RTN","PRS8EX0",26,0)
 ; If prior work day is in a previous pay period and has same exception
"RTN","PRS8EX0",27,0)
 ; as the current day then charge the encapsulated days found between.
"RTN","PRS8EX0",28,0)
 ; Note: If prior work day is in current pay period then no action
"RTN","PRS8EX0",29,0)
 ; needed since the look forward from that prior day would have
"RTN","PRS8EX0",30,0)
 ; already taken care of encapsulated days.
"RTN","PRS8EX0",31,0)
 I SCHEX=TT,$D(CHGDAY),SCHPY'=PY D SET(DFN,PY,TT,$P(TT(1),U,4),.CHGDAY)
"RTN","PRS8EX0",32,0)
 ;
"RTN","PRS8EX0",33,0)
 ; find next scheduled work day that is not holiday excused
"RTN","PRS8EX0",34,0)
 D WORKDAY(DFN,PY,DY,1,.SCHPY,.SCHDY,.SCHEX,.CHGDAY)
"RTN","PRS8EX0",35,0)
 ;
"RTN","PRS8EX0",36,0)
 ; If next work day has same exception as current day then charge
"RTN","PRS8EX0",37,0)
 ; encapsulated days found between.
"RTN","PRS8EX0",38,0)
 I SCHEX=TT,$D(CHGDAY) D SET(DFN,PY,TT,$P(TT(1),U,4),.CHGDAY)
"RTN","PRS8EX0",39,0)
 ;
"RTN","PRS8EX0",40,0)
 Q
"RTN","PRS8EX0",41,0)
 ;
"RTN","PRS8EX0",42,0)
WORKDAY(DFN,PY,DY,PRSDIR,SCHPY,SCHDY,SCHEX,CHGDAY) ; find work day
"RTN","PRS8EX0",43,0)
 ; inputs
"RTN","PRS8EX0",44,0)
 ;   DFN - employee IEN
"RTN","PRS8EX0",45,0)
 ;   PY  - current pay period IEN
"RTN","PRS8EX0",46,0)
 ;   DY  - current day number
"RTN","PRS8EX0",47,0)
 ;   PRSDIR - direction (-1 to look back or +1 to look forward)
"RTN","PRS8EX0",48,0)
 ; outputs
"RTN","PRS8EX0",49,0)
 ;   SCHPY - passed by reference, work day pay period or null
"RTN","PRS8EX0",50,0)
 ;   SCHDY - passed by reference, work day day number or null
"RTN","PRS8EX0",51,0)
 ;   SCHEX - passed by reference, work day exception or null
"RTN","PRS8EX0",52,0)
 ;   CHGDAY() - passed by reference, array of days in current pay period
"RTN","PRS8EX0",53,0)
 ;              that could be charged due to encapsulation and were
"RTN","PRS8EX0",54,0)
 ;              encounted during the search for the work day
"RTN","PRS8EX0",55,0)
 ;              format ENCDAY(day number)=null value
"RTN","PRS8EX0",56,0)
 ;
"RTN","PRS8EX0",57,0)
 N DONE,EXC,LOOPPY,LOOPDY,PPCNT,TOD
"RTN","PRS8EX0",58,0)
 ; init outputs
"RTN","PRS8EX0",59,0)
 S (SCHPY,SCHDY,SCHEX)=""
"RTN","PRS8EX0",60,0)
 K CHGDAY
"RTN","PRS8EX0",61,0)
 ;
"RTN","PRS8EX0",62,0)
 ; loop thru days to find the first scheduled work day that is
"RTN","PRS8EX0",63,0)
 ; not holiday excused
"RTN","PRS8EX0",64,0)
 S DONE=0,LOOPPY=PY,LOOPDY=DY,PPCNT=1
"RTN","PRS8EX0",65,0)
 F  D  I DONE Q
"RTN","PRS8EX0",66,0)
 . ; move one day in appropriate direction
"RTN","PRS8EX0",67,0)
 . S LOOPDY=LOOPDY+PRSDIR
"RTN","PRS8EX0",68,0)
 . ;
"RTN","PRS8EX0",69,0)
 . ; check if loop day moved into a different pay period
"RTN","PRS8EX0",70,0)
 . I LOOPDY<1 S LOOPPY=$O(^PRST(458,LOOPPY),-1),LOOPDY=14,PPCNT=PPCNT+1
"RTN","PRS8EX0",71,0)
 . I LOOPDY>14 S LOOPPY=$O(^PRST(458,LOOPPY),1),LOOPDY=1,PPCNT=PPCNT+1
"RTN","PRS8EX0",72,0)
 . ;
"RTN","PRS8EX0",73,0)
 . ; check for loop ending conditions (related to pay period/time card)
"RTN","PRS8EX0",74,0)
 . I PPCNT>2 S DONE=1 Q  ; only check current and one other pay period
"RTN","PRS8EX0",75,0)
 . I LOOPPY'>0 S DONE=1 Q  ; ran out of pay periods
"RTN","PRS8EX0",76,0)
 . I '$D(^PRST(458,LOOPPY,"E",DFN,0)) S DONE=1 Q  ; no empl. time card
"RTN","PRS8EX0",77,0)
 . ;
"RTN","PRS8EX0",78,0)
 . ; determine tour and exception for loop day
"RTN","PRS8EX0",79,0)
 . S TOD=$P($G(^PRST(458,LOOPPY,"E",DFN,"D",LOOPDY,0)),U,2)
"RTN","PRS8EX0",80,0)
 . S EXC=$P($G(^PRST(458,LOOPPY,"E",DFN,"D",LOOPDY,2)),U,3)
"RTN","PRS8EX0",81,0)
 . ;
"RTN","PRS8EX0",82,0)
 . ; check if work day found
"RTN","PRS8EX0",83,0)
 . I TOD'=1,EXC'="HX" S SCHPY=LOOPPY,SCHDY=LOOPDY,SCHEX=EXC,DONE=1 Q
"RTN","PRS8EX0",84,0)
 . ;
"RTN","PRS8EX0",85,0)
 . ; work day was not found yet
"RTN","PRS8EX0",86,0)
 . ; add this day to list if it could potentially be charged
"RTN","PRS8EX0",87,0)
 . Q:LOOPPY'=PY  ; not in current pay period
"RTN","PRS8EX0",88,0)
 . Q:$D(^TMP($J,"PRS8",LOOPDY,2,0))  ; day already charged
"RTN","PRS8EX0",89,0)
 . I TOD=1,"^CP^NP^"'[(U_EXC_U) S CHGDAY(LOOPDY)="" ; add day off to list
"RTN","PRS8EX0",90,0)
 . I TOD>1,EXC="HX" S CHGDAY(LOOPDY)="" ; add holiday to list
"RTN","PRS8EX0",91,0)
 Q
"RTN","PRS8EX0",92,0)
 ;
"RTN","PRS8EX0",93,0)
SET(DFN,PY,TT,PC,CHGDAY) ; automatically charge days
"RTN","PRS8EX0",94,0)
 ;
"RTN","PRS8EX0",95,0)
 ; inputs
"RTN","PRS8EX0",96,0)
 ;   DFN - employee IEN
"RTN","PRS8EX0",97,0)
 ;   PY - pay period IEN
"RTN","PRS8EX0",98,0)
 ;   TT - type of time to charge
"RTN","PRS8EX0",99,0)
 ;   PC - 4th piece of data from ACT^PRS8EX for TT
"RTN","PRS8EX0",100,0)
 ;   CHGDAY - array of days passed by reference, CHGDAY(day number)=""
"RTN","PRS8EX0",101,0)
 ;
"RTN","PRS8EX0",102,0)
 N LOOPDY,PC3,WEEK
"RTN","PRS8EX0",103,0)
 ;
"RTN","PRS8EX0",104,0)
 ; loop thru days in list
"RTN","PRS8EX0",105,0)
 S LOOPDY=0 F  S LOOPDY=$O(CHGDAY(LOOPDY)) Q:'LOOPDY  D
"RTN","PRS8EX0",106,0)
 . ;
"RTN","PRS8EX0",107,0)
 . ; increment WK() count
"RTN","PRS8EX0",108,0)
 . I +PC S WEEK=$S(LOOPDY>7:2,1:1),$P(WK(WEEK),"^",+PC)=$P(WK(WEEK),"^",+PC)+1
"RTN","PRS8EX0",109,0)
 . E  S PC3=$A(PC)-64,$P(WK(3),"^",+PC3)=$P(WK(3),"^",+PC3)+1
"RTN","PRS8EX0",110,0)
 . ;
"RTN","PRS8EX0",111,0)
 . ; track days have been automatically charged in ^TMP
"RTN","PRS8EX0",112,0)
 . S ^TMP($J,"PRS8",LOOPDY,2,0)=TT
"RTN","PRS8EX0",113,0)
 . ;
"RTN","PRS8EX0",114,0)
 . ; update time card if decomp called from pay period certification
"RTN","PRS8EX0",115,0)
 . I $G(APDT) D
"RTN","PRS8EX0",116,0)
 . . S $P(^PRST(458,PY,"E",DFN,"D",LOOPDY,2),"^",3)=TT
"RTN","PRS8EX0",117,0)
 . . S ^PRST(458,PY,"E",DFN,"D",LOOPDY,3)="Leave posted automatically"
"RTN","PRS8EX0",118,0)
 . . S $P(^PRST(458,PY,"E",DFN,"D",LOOPDY,10),"^",1,4)="T^.5^"_APDT_"^2"
"RTN","PRS8EX0",119,0)
 Q
"RTN","PRS8MISC")
0^3^B19784550^B26978501
"RTN","PRS8MISC",1,0)
PRS8MISC ;HISC/DAD,RM,RS-MISCELLANEOUS ADJUSTMENTS TO TIME CARD ;9/12/2006
"RTN","PRS8MISC",2,0)
 ;;4.0;PAID;**56,68,80,111**;Sep 21, 1995;Build 2
"RTN","PRS8MISC",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8MISC",4,0)
 N ABUT,D,DY,M,NOTIME,PEROWK,WEEK
"RTN","PRS8MISC",5,0)
 S (PEROWK,NOTIME,PEROT,NOOT)=0 F DY=0:1:15 D
"RTN","PRS8MISC",6,0)
 .S WEEK=$S(DY>7:2,1:1)
"RTN","PRS8MISC",7,0)
 .S X=$G(^TMP($J,"PRS8",DY,2)),Y=$G(^("W"))
"RTN","PRS8MISC",8,0)
 .F M=1:1:96 S X=$E(Y,M) Q:'$L(X)  D  ; check for CB/FF OT and sleep time
"RTN","PRS8MISC",9,0)
 ..I "4EO"'[X!(X="O"&($E($G(^TMP($J,"PRS8",DY,"HOL")),M)=2)) S NOOT=0 ; set up periods of OT for PPD
"RTN","PRS8MISC",10,0)
 ..E  D
"RTN","PRS8MISC",11,0)
 ...S:'NOOT PEROT=PEROT+1,PEROT(PEROT)=DY_"^"_M_"^",NOOT=1
"RTN","PRS8MISC",12,0)
 ...S PEROT(PEROT)=PEROT(PEROT)_X
"RTN","PRS8MISC",13,0)
 ...Q
"RTN","PRS8MISC",14,0)
 ..I (TYP'["Ff"),SST,$E(ENT,27) D  ; set up per. of work for sleep time
"RTN","PRS8MISC",15,0)
 ...I "123OmosEeBbCct"'[X S NOTIME=0
"RTN","PRS8MISC",16,0)
 ...E  D
"RTN","PRS8MISC",17,0)
 ....S:'NOTIME PEROWK=PEROWK+1,PEROWK(PEROWK)=DY_U_M_U_M_U,NOTIME=1
"RTN","PRS8MISC",18,0)
 ....S $P(PEROWK(PEROWK),U,3)=M+(96*(DY-PEROWK(PEROWK)))
"RTN","PRS8MISC",19,0)
 ....S PEROWK(PEROWK)=PEROWK(PEROWK)_X
"RTN","PRS8MISC",20,0)
 ....S:$L($P(PEROWK(PEROWK),"^",4))=96 NOTIME=0
"RTN","PRS8MISC",21,0)
 ....Q
"RTN","PRS8MISC",22,0)
 ...Q
"RTN","PRS8MISC",23,0)
 ..Q
"RTN","PRS8MISC",24,0)
 .;holiday worked < 2 hrs
"RTN","PRS8MISC",25,0)
 .I DY<15,$E(ENT,TOUR+21) S HW=$G(^TMP($J,"PRS8",DY,"HW")) I HW]"" D
"RTN","PRS8MISC",26,0)
 ..S W=$G(^TMP($J,"PRS8",DY,"W"))
"RTN","PRS8MISC",27,0)
 ..S W1=$G(^TMP($J,"PRS8",DY-1,"W"))
"RTN","PRS8MISC",28,0)
 ..S W2=$G(^TMP($J,"PRS8",DY+1,"W"))
"RTN","PRS8MISC",29,0)
 ..F X=1:2 S Y=$P(HW,"^",X,X+1) Q:Y'>0  D
"RTN","PRS8MISC",30,0)
 ...N X,START,STOP,T,TT,Z,DD
"RTN","PRS8MISC",31,0)
 ...S START=+Y,STOP=$P(Y,"^",2),T=START,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MISC",32,0)
 ...; Look back to determine if the segment of time currently being
"RTN","PRS8MISC",33,0)
 ...; checked abuts another segment of a Tour of Duty.  Ignore meals.
"RTN","PRS8MISC",34,0)
 ...S (ABUT,Z,X)=0
"RTN","PRS8MISC",35,0)
 ...I STOP-START+1<8 D
"RTN","PRS8MISC",36,0)
 ....F Z=1:1 D  Q:X=0
"RTN","PRS8MISC",37,0)
 .....S DD=Z I T>96 S X=0 Q
"RTN","PRS8MISC",38,0)
 .....I TT-DD>0 S X=$E(W,TT-DD)
"RTN","PRS8MISC",39,0)
 .....E  S X=$E(W1,96+T-DD)
"RTN","PRS8MISC",40,0)
 .....I "Cc123"[X,"01"[$E($G(^TMP($J,"PRS8",$S(TT-DD>0:DY,1:DY-1),"HOL")),$S(TT-DD>0:TT-DD,1:96+T-DD)) S X=0 ; Abuts HX
"RTN","PRS8MISC",41,0)
 .....I X="O",$E($G(^TMP($J,"PRS8",$S(TT-DD>0:DY,1:DY-1),"HOL")),$S(TT-DD>0:TT-DD,1:96+T-DD))=2 S X=0,ABUT=1 ; Abuts another segment of work
"RTN","PRS8MISC",42,0)
 ....;
"RTN","PRS8MISC",43,0)
 ....; Look forward to determine if the segment of time currently being
"RTN","PRS8MISC",44,0)
 ....; checked abuts another segment of a Tour of Duty.  Ignore meals.
"RTN","PRS8MISC",45,0)
 ....S ZZ=Z S:X=0&Z ZZ=ZZ-1 S X=0,T=STOP,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MISC",46,0)
 ....F Z=1:1 D  Q:X=0
"RTN","PRS8MISC",47,0)
 .....S DD=STOP-START+1+ZZ+Z
"RTN","PRS8MISC",48,0)
 .....I T+Z'>96 S X=$E(W,T+Z)
"RTN","PRS8MISC",49,0)
 .....E  S X=$E(W2,T-96+Z)
"RTN","PRS8MISC",50,0)
 .....I "Cc123"[X,"01"[$E($G(^TMP($J,"PRS8",$S(T+Z'>96:DY,1:DY+1),"HOL")),$S(T+Z'>96:T+Z,1:T-96+Z)) S X=0 ; Abuts HX
"RTN","PRS8MISC",51,0)
 .....I X="O",$E($G(^TMP($J,"PRS8",$S(T+Z'>96:DY,1:DY-1),"HOL")),$S(T+Z'>96:T+Z,1:T-96+Z))=2 S X=0,ABUT=1 Q  ; Abuts another segment of work
"RTN","PRS8MISC",52,0)
 ...;
"RTN","PRS8MISC",53,0)
 ...; Loops to determine how much time we might need to add.
"RTN","PRS8MISC",54,0)
 ...S START=+Y,STOP=$P(Y,"^",2),T=START,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MISC",55,0)
 ...S (Z,X)=0 F Z=1:1:8-(STOP-START+1) D  Q:X=0
"RTN","PRS8MISC",56,0)
 ....S DD=Z I T>96 S X=0 Q
"RTN","PRS8MISC",57,0)
 ....I TT-DD>0 S X=$E(W,TT-DD)
"RTN","PRS8MISC",58,0)
 ....E  S X=$E(W1,96+T-DD)
"RTN","PRS8MISC",59,0)
 ....I "Cc123m"[X,"01"[$E($G(^TMP($J,"PRS8",$S(TT-DD>0:DY,1:DY-1),"HOL")),$S(TT-DD>0:TT-DD,1:96+T-DD)) S X=0 ; HX becomes time off
"RTN","PRS8MISC",60,0)
 ....I X="O",$E($G(^TMP($J,"PRS8",$S(TT-DD>0:DY,1:DY-1),"HOL")),$S(TT-DD>0:TT-DD,1:96+T-DD))'=2 Q  ;S X=0,Z=8 ; non-holiday OT stops the check for <2hr HW
"RTN","PRS8MISC",61,0)
 ....I X="" S X=0
"RTN","PRS8MISC",62,0)
 ....Q
"RTN","PRS8MISC",63,0)
 ...S ZZ=Z S:X=0&Z ZZ=ZZ-1 S X=0,T=STOP,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MISC",64,0)
 ...F Z=1:1:8-(STOP-START+1+ZZ) D  Q:X=0
"RTN","PRS8MISC",65,0)
 ....S DD=STOP-START+1+ZZ+Z
"RTN","PRS8MISC",66,0)
 ....I T+Z'>96 S X=$E(W,T+Z)
"RTN","PRS8MISC",67,0)
 ....E  S X=$E(W2,T-96+Z),PLUS=1
"RTN","PRS8MISC",68,0)
 ....I "Cc123m"[X,"01"[$E($G(^TMP($J,"PRS8",$S(T+Z'>96:DY,1:DY+1),"HOL")),$S(T+Z'>96:T+Z,1:T-96+Z)) S X=0 ; HX becomes time off
"RTN","PRS8MISC",69,0)
 ....I X="O",$E($G(^TMP($J,"PRS8",$S(T+Z'>96:DY,1:DY-1),"HOL")),$S(T+Z'>96:T+Z,1:T-96+Z))'=2 Q  ;S X=0,Z=8 ; non-holiday OT stops the check for <2hr HW
"RTN","PRS8MISC",70,0)
 ....Q
"RTN","PRS8MISC",71,0)
 ...S Z=ZZ+Z-(X=0&Z)
"RTN","PRS8MISC",72,0)
 ...I STOP-START+1+Z<8,'ABUT D
"RTN","PRS8MISC",73,0)
 ....S D=DY,P=TOUR+28,Y=8-(STOP-START+1+Z)
"RTN","PRS8MISC",74,0)
 ....S TL=$G(^TMP($J,"PRS8",D,0)),TL=4*($P(TL,"^",8)+$P(TL,"^",14))
"RTN","PRS8MISC",75,0)
 ....I Y+$P(WK($S(D>7:2,1:1)),"^",P)>TL S Y=TL-$P(WK($S(D>7:2,1:1)),"^",P)
"RTN","PRS8MISC",76,0)
 ....I $D(PLUS),T>96 S D=D+1
"RTN","PRS8MISC",77,0)
 ....D:Y SET
"RTN","PRS8MISC",78,0)
 ....Q
"RTN","PRS8MISC",79,0)
 ...Q
"RTN","PRS8MISC",80,0)
 ..Q
"RTN","PRS8MISC",81,0)
 .Q
"RTN","PRS8MISC",82,0)
 K PLUS G ^PRS8MSC0
"RTN","PRS8MISC",83,0)
 ;
"RTN","PRS8MISC",84,0)
SET ; Set sleep time into WK arrary
"RTN","PRS8MISC",85,0)
 Q:D<1!(D>14)
"RTN","PRS8MISC",86,0)
 S WEEK=$S(D>7:2,1:1)
"RTN","PRS8MISC",87,0)
 S $P(WK(WEEK),"^",P)=$P(WK(WEEK),"^",P)+Y
"RTN","PRS8MISC",88,0)
 Q
"RTN","PRS8MSC0")
0^4^B31114141^B32077166
"RTN","PRS8MSC0",1,0)
PRS8MSC0 ;HISC/DAD,WCIOFO/JAH,SAB - MISC TIME CARD ADJUST(contd) ;1/25/2007
"RTN","PRS8MSC0",2,0)
 ;;4.0;PAID;**22,35,40,56,111**;Sep 21, 1995;Build 2
"RTN","PRS8MSC0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8MSC0",4,0)
 ;
"RTN","PRS8MSC0",5,0)
 ; for employee on daily tour check if no duty performed during week
"RTN","PRS8MSC0",6,0)
 I TYP["D" D NODUTY^PRS8MSC1
"RTN","PRS8MSC0",7,0)
 ;
"RTN","PRS8MSC0",8,0)
 S B="",Z0="" S $P(B,"B",97)="",$P(Z0,"0",97)="",FLAG=0
"RTN","PRS8MSC0",9,0)
 F X=1:1:PEROWK S Y=$P(PEROWK(X),"^",4),DAT=$P(PEROWK(X),"^",1,3),DY=$P(DAT,"^",1),BEG=$P(DAT,"^",2),END=$P(DAT,"^",3) D
"RTN","PRS8MSC0",10,0)
 .I $L(Y)'<96,TYP'["Ff",$E(ENT,27) D  ; slp for 24hr cvg
"RTN","PRS8MSC0",11,0)
 ..S SLMAX=32,(SLW,SLY,SLST,SLSTR,SLST1,SLY1,SL1,SL2,SL3)=""
"RTN","PRS8MSC0",12,0)
 ..I END=96 D
"RTN","PRS8MSC0",13,0)
 ...S SLST=$P($G(PEROWK(X)),"^",4),SL2=$E(SLST,SST,$L(SLST)),SL1=$E(SLST,1,SLMAX-$L(SL2)),SL3=$L(SL2)
"RTN","PRS8MSC0",14,0)
 ...S SLSTR=SL1_SL2
"RTN","PRS8MSC0",15,0)
 ...I DOUB S SLSTR=$TR(SLSTR,"Cct","Bbb") ; if PPC = W then OC = SB
"RTN","PRS8MSC0",16,0)
 ...S SLSTR=$TR(SLSTR,$TR(SLSTR,"Bb"),Z0)
"RTN","PRS8MSC0",17,0)
 ...S SLY=$L($TR(SLSTR,"b0")),SLW=$L($TR(SLSTR,"B0"))
"RTN","PRS8MSC0",18,0)
 ...I SLW>12 Q
"RTN","PRS8MSC0",19,0)
 ...I DY=0 S FLAG=SL3
"RTN","PRS8MSC0",20,0)
 ...S Y=$L(SLSTR)-SLW
"RTN","PRS8MSC0",21,0)
 ...I FLAG>0&(DY=1) S Y=Y-FLAG,FLAG=0
"RTN","PRS8MSC0",22,0)
 ...S D=DY,P=25 D SET Q
"RTN","PRS8MSC0",23,0)
 ..E  D
"RTN","PRS8MSC0",24,0)
 ...S SLST=$G(^TMP($J,"PRS8",DY,"W"))_$G(^TMP($J,"PRS8",DY+1,"W"))
"RTN","PRS8MSC0",25,0)
 ...S SLSTR=$E(SLST,1,SST+(SLMAX-1))
"RTN","PRS8MSC0",26,0)
 ...I DOUB S SLSTR=$TR(SLSTR,"Cct","Bbb") ; if PPC = W then OC = SB
"RTN","PRS8MSC0",27,0)
 ...S SLSTR=$TR(SLSTR,$TR(SLSTR,"Bb"),Z0)
"RTN","PRS8MSC0",28,0)
 ...S SLY=$E(SLSTR,SST,96),SLY1=$E(SLSTR,97,$L(SLSTR))
"RTN","PRS8MSC0",29,0)
 ...S SLSTR=SLY_SLY1,SLW=$L($TR(SLSTR,"B0"))
"RTN","PRS8MSC0",30,0)
 ...I SLW>12 Q
"RTN","PRS8MSC0",31,0)
 ...S D=DY,Y=$L($TR(SLY,"b0")),P=25 D SET
"RTN","PRS8MSC0",32,0)
 ...Q:DY=0  S D=DY+1,Y=$L($TR(SLY1,"b0")) D SET
"RTN","PRS8MSC0",33,0)
 ...Q
"RTN","PRS8MSC0",34,0)
 ..K BEG,DAT,END,NL,SLW,SLY,SLST,SLSTR,SLST1,SLY1,SL1,SL2,SL3 Q
"RTN","PRS8MSC0",35,0)
 .Q
"RTN","PRS8MSC0",36,0)
 S D="",(H,ROSS)=1 K OT,UN,DA,CT
"RTN","PRS8MSC0",37,0)
 F H=H:ROSS:PEROT D  ; calculate CB OT and FF OT/sleep time
"RTN","PRS8MSC0",38,0)
 .S Y=PEROT(H),Z=$P(Y,"^",3)
"RTN","PRS8MSC0",39,0)
 .I "Ff"[TYP D  ;K OT,UN,DA D  ; FF sleep time
"RTN","PRS8MSC0",40,0)
 ..F M=1:1:$L(Z) D  ; following FF OT per Mary Baker 4/1/93
"RTN","PRS8MSC0",41,0)
 ...I D'=+Y+(($P(Y,"^",2)+M-2)\96) D
"RTN","PRS8MSC0",42,0)
 ....S D=+Y+(($P(Y,"^",2)+M-2)\96),HT=0
"RTN","PRS8MSC0",43,0)
 ....Q
"RTN","PRS8MSC0",44,0)
 ...S HT=HT+1
"RTN","PRS8MSC0",45,0)
 ...I $E(Z,H)="E" S CT(D)=$G(CT(D))+1 Q
"RTN","PRS8MSC0",46,0)
 ...I M'>32 S:HT'>32 OT(D)=$G(OT(D))+1 S:HT>32 DA(D)=$G(DA(D))+1 ; FF OT
"RTN","PRS8MSC0",47,0)
 ...I M>32,$L(Z)'<96&(M'>64)!($L(Z)<96) S DA(D)=$G(DA(D))+1 ; FF hrs>8
"RTN","PRS8MSC0",48,0)
 ...I $L(Z)'<96,M>64 D  ; FF 2/3 rule
"RTN","PRS8MSC0",49,0)
 ....I M'>96 S UN(D)=$G(UN(D))+1 ; first 8 sleep time
"RTN","PRS8MSC0",50,0)
 ....E  S DA(D)=$G(DA(D))+1 ; rest hrs >8 
"RTN","PRS8MSC0",51,0)
 ....Q
"RTN","PRS8MSC0",52,0)
 ...Q
"RTN","PRS8MSC0",53,0)
 ..Q
"RTN","PRS8MSC0",54,0)
 .I $L(Z)<8 D  ; call back OT at least 2 hrs
"RTN","PRS8MSC0",55,0)
 ..S YY=Y,ZZ=Z N X,Y,START,STOP,T,TT,Z,DD,TL S Y=YY,Z=ZZ
"RTN","PRS8MSC0",56,0)
 ..S CB=$G(^TMP($J,"PRS8",+Y,"CB"))
"RTN","PRS8MSC0",57,0)
 ..;no call back OT today or send bulletin
"RTN","PRS8MSC0",58,0)
 ..Q:(CB="")!($$OTNXTPP(+Y,CB,$P(C0,"^",1),PY,$P(C0,"^",8)))
"RTN","PRS8MSC0",59,0)
 ..S Q=0 F ZZ=1:2 Q:'$P(CB,"^",ZZ)  I $P(Y,"^",2)=$P(CB,"^",ZZ) S Q=1
"RTN","PRS8MSC0",60,0)
 ..Q:'Q  ; this OT episode not call back
"RTN","PRS8MSC0",61,0)
 ..S OT=Y,START=$P(OT,"^",2),STOP=$P(OT,"^",2)+$L(Z)-1,T=START,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MSC0",62,0)
 ..S W=$G(^TMP($J,"PRS8",+OT,"W")),WEEK=$S(+OT>7:2,1:1)
"RTN","PRS8MSC0",63,0)
 ..S W1=$G(^TMP($J,"PRS8",OT-1,"W"))
"RTN","PRS8MSC0",64,0)
 ..S W2=$G(^TMP($J,"PRS8",OT+1,"W"))
"RTN","PRS8MSC0",65,0)
 ..S (Z,X)=0 F Z=1:1:8-(STOP-START+1) D  Q:X=0
"RTN","PRS8MSC0",66,0)
 ...S DD=Z
"RTN","PRS8MSC0",67,0)
 ...I TT-DD>0 S X=$E(W,TT-DD)
"RTN","PRS8MSC0",68,0)
 ...E  S X=$E(W1,96+T-DD)
"RTN","PRS8MSC0",69,0)
 ...I "123m"[X,$E($G(^TMP($J,"PRS8",$S(TT-DD>0:+OT,1:OT-1),"HOL")),$S(TT-DD>0:TT-DD,1:96+T-DD))=1 S X=0 ; HX becomes time off
"RTN","PRS8MSC0",70,0)
 ...Q
"RTN","PRS8MSC0",71,0)
 ..S ZZ=Z S:X=0&Z ZZ=ZZ-1 S X=0,T=STOP,TT=$S(T>96:T-96,1:T)
"RTN","PRS8MSC0",72,0)
 ..F Z=1:1:8-(STOP-START+1+ZZ) D  Q:X=0
"RTN","PRS8MSC0",73,0)
 ...S DD=STOP-START+1+ZZ+Z
"RTN","PRS8MSC0",74,0)
 ...I T+Z'>96 S X=$E(W,T+Z)
"RTN","PRS8MSC0",75,0)
 ...E  S X=$E(W2,T-96+Z)
"RTN","PRS8MSC0",76,0)
 ...I "123m"[X,$E($G(^TMP($J,"PRS8",$S(T+Z'>96:+OT,1:OT+1),"HOL")),$S(T+Z'>96:T+Z,1:T-96+Z))=1 S X=0 ; HX becomes time off
"RTN","PRS8MSC0",77,0)
 ...Q
"RTN","PRS8MSC0",78,0)
 ..S Z=ZZ+Z-(X=0&Z)
"RTN","PRS8MSC0",79,0)
 ..I STOP-START+1+Z<8 D
"RTN","PRS8MSC0",80,0)
 ...I TYP["W",$E($P(PEROT(H),"^",3))'="E"&($G(^TMP($J,"PRS8",$P(PEROT(H),"^",1),"OFF"))=0) S TOUR=$G(^TMP($J,"PRS8",$P(PEROT(H),"^",1),"TOUR"))
"RTN","PRS8MSC0",81,0)
 ...S D=+OT,P=$S($E($P(PEROT(H),"^",3))'="E":TOUR+19,1:7),Y=8-(STOP-START+1+Z)
"RTN","PRS8MSC0",82,0)
 ...I TYP["P",TYP'["B",P'=7 D
"RTN","PRS8MSC0",83,0)
 ....I $P($G(^TMP($J,"PRS8",$P(PEROT(H),"^",1),"OFF")),"^",1)=1&(TH(WEEK)'>160) S Y=0 Q
"RTN","PRS8MSC0",84,0)
 ....I $P(C0,"^",12)="E" S P=$S($L($TR(W,"0O"))>31&(TH(WEEK)'>160):TOUR+25,1:P) D:Y SET S Y=$S(TH(WEEK)'>160:Y,1:0) S P=9 D:Y SET S Y=0
"RTN","PRS8MSC0",85,0)
 ...I $P(C0,"^",12)="N",P'=7 S P=$S($L($TR(W,"0O"))>31:TOUR+15,1:P) D:Y SET S Y=0
"RTN","PRS8MSC0",86,0)
 ...D:Y SET
"RTN","PRS8MSC0",87,0)
 ..Q
"RTN","PRS8MSC0",88,0)
 .Q
"RTN","PRS8MSC0",89,0)
 F X="OT","DA","UN","CT" D  ; store FF OT into WK array
"RTN","PRS8MSC0",90,0)
 .N Y S P=$S(X="OT":TOUR+19,X="DA"&$E(ENT,TOUR+18):TOUR+15,X="DA":TOUR+19,X="CT":TOUR+6,1:9)
"RTN","PRS8MSC0",91,0)
 .F D=0:0 S D=$O(@(X_"("_D_")")) Q:D'>0  S Y=@(X_"("_D_")") D SET
"RTN","PRS8MSC0",92,0)
 .Q
"RTN","PRS8MSC0",93,0)
 ;
"RTN","PRS8MSC0",94,0)
 ; check/adjust night differential granted for leave
"RTN","PRS8MSC0",95,0)
 D LVND
"RTN","PRS8MSC0",96,0)
 Q
"RTN","PRS8MSC0",97,0)
SET ; Set sleep time into WK array
"RTN","PRS8MSC0",98,0)
 Q:D<1!(D>14)
"RTN","PRS8MSC0",99,0)
 S WEEK=$S(D>7:2,1:1)
"RTN","PRS8MSC0",100,0)
 S $P(WK(WEEK),"^",P)=$P(WK(WEEK),"^",P)+Y
"RTN","PRS8MSC0",101,0)
 Q
"RTN","PRS8MSC0",102,0)
OTNXTPP(DAY,CALLBK,EMPNM,PPIEN,TLU) ;
"RTN","PRS8MSC0",103,0)
 ;OT or CT connects to a tour of duty in the next pay period.
"RTN","PRS8MSC0",104,0)
 ;JAH-patch PRS*4*22
"RTN","PRS8MSC0",105,0)
 ;If OT or CT are worked in last 2 hours of pay period & 1st day 
"RTN","PRS8MSC0",106,0)
 ;of next pay period is missing a tour beginning at midnight, send
"RTN","PRS8MSC0",107,0)
 ;a bulletin warning that call back will be paid unless corrective
"RTN","PRS8MSC0",108,0)
 ;action is taken.
"RTN","PRS8MSC0",109,0)
 ;(i.e a nurse comes in before midnight on last saturday of 
"RTN","PRS8MSC0",110,0)
 ;pay period & works for a period less than 2 hrs. before her tour
"RTN","PRS8MSC0",111,0)
 ;that begins at midnight on Sunday, first day of the next pp)
"RTN","PRS8MSC0",112,0)
 ;
"RTN","PRS8MSC0",113,0)
 ; CALLBK  =   start and stop position in 96 char BCD string.
"RTN","PRS8MSC0",114,0)
 ; RECORD  =   pointer from employee's tour info to a record 
"RTN","PRS8MSC0",115,0)
 ;             in tour of duty file.
"RTN","PRS8MSC0",116,0)
 ; DAY  =      day of the pay period 
"RTN","PRS8MSC0",117,0)
 ; D1NXTPP  =  BOOLEAN; set to true if tour on day 1 of next pay period 
"RTN","PRS8MSC0",118,0)
 ;                      begins at midnight, otherwise false
"RTN","PRS8MSC0",119,0)
 ; NEXTP    =  next pay period in 97-05 format.
"RTN","PRS8MSC0",120,0)
 ; CURP     =  current pay period in 99-02 format.
"RTN","PRS8MSC0",121,0)
 ; TLU      = 3 digit time & leave unit of employee.
"RTN","PRS8MSC0",122,0)
 N D1NXTPP,RECORD,CURP,NEXTP,XMDUZ,XMB,XMY,XMDUZ
"RTN","PRS8MSC0",123,0)
 S (RTN,D1NXTPP)=0
"RTN","PRS8MSC0",124,0)
 S RECORD=$P($G(^TMP($J,"PRS8",15,0)),"^",2)
"RTN","PRS8MSC0",125,0)
 I RECORD'="" S D1NXTPP=($P($G(^PRST(457.1,RECORD,1)),"^")="MID")
"RTN","PRS8MSC0",126,0)
 I (DAY=14)&($P(CALLBK,"^",2)=96) D
"RTN","PRS8MSC0",127,0)
 . I (D1NXTPP) S RTN=1
"RTN","PRS8MSC0",128,0)
 . E  D
"RTN","PRS8MSC0",129,0)
 ..   S CURP=$P($G(^PRST(458,PPIEN,0)),"^",1)
"RTN","PRS8MSC0",130,0)
 ..   S NXTP=$E($$NXTPP^PRSAPPU(CURP),3,7)
"RTN","PRS8MSC0",131,0)
 ..;  Send bulletin to G.PAD
"RTN","PRS8MSC0",132,0)
 ..   S XMY("G.PAD@"_^XMB("NETNAME"))=""
"RTN","PRS8MSC0",133,0)
 ..   S XMDUZ="DHCP PAID package"
"RTN","PRS8MSC0",134,0)
 ..   S XMB="PRS LAST SAT OT/CT"
"RTN","PRS8MSC0",135,0)
 ..;
"RTN","PRS8MSC0",136,0)
 ..;  employee name, pay period number, next pay period
"RTN","PRS8MSC0",137,0)
 ..   S XMB(1)=EMPNM,XMB(2)=CURP,XMB(3)=NXTP,XMB(4)=TLU
"RTN","PRS8MSC0",138,0)
 ..   D ^XMB
"RTN","PRS8MSC0",139,0)
 Q RTN
"RTN","PRS8MSC0",140,0)
 ;
"RTN","PRS8MSC0",141,0)
LVND ; Leave Night Differential
"RTN","PRS8MSC0",142,0)
 ; back out ND granted for leave if employee took 8 or more hrs of leave
"RTN","PRS8MSC0",143,0)
 ;   a non-wage grade employee can receive night differential when
"RTN","PRS8MSC0",144,0)
 ;   on leave as long as the employee has taken less than 8 hours of
"RTN","PRS8MSC0",145,0)
 ;   leave during the pay period.
"RTN","PRS8MSC0",146,0)
 ; input (note: units are count of 15min time segments):
"RTN","PRS8MSC0",147,0)
 ;   LU     - leave taken during pay period (set in PRS8AC, PRS8MT)
"RTN","PRS8MSC0",148,0)
 ;   WK(#)  - piece 10 contains total shift-2 ND for week #
"RTN","PRS8MSC0",149,0)
 ;   WKL(#) - ND granted for leave during week # (set in PRS8PP)
"RTN","PRS8MSC0",150,0)
 ; output:
"RTN","PRS8MSC0",151,0)
 ;   WK(#)  - piece 10 may be modified
"RTN","PRS8MSC0",152,0)
 ;   WKL(#) - may be modified
"RTN","PRS8MSC0",153,0)
 N W
"RTN","PRS8MSC0",154,0)
 Q:TYP["W"  ;              Doesn't apply to Wage Grade
"RTN","PRS8MSC0",155,0)
 Q:LU'>31  ;               Didn't take 8hrs of leave
"RTN","PRS8MSC0",156,0)
 F W=1,2 D  ;              For each week subtract leave ND from total ND
"RTN","PRS8MSC0",157,0)
 . Q:'WKL(W)  ;                                 No leave ND to subtract
"RTN","PRS8MSC0",158,0)
 . S $P(WK(W),"^",10)=$P(WK(W),"^",10)-WKL(W) ; Subtract
"RTN","PRS8MSC0",159,0)
 . S WKL(W)=0 ;                                 Reset leave ND amount
"RTN","PRS8MSC0",160,0)
 Q
"RTN","PRS8MSC1")
0^5^B5858740^B4222791
"RTN","PRS8MSC1",1,0)
PRS8MSC1 ;HISC/DAD,WCIOFO/MGD,SAB-MISC TIME CARD ADJUST(contd) ;1/30/2007
"RTN","PRS8MSC1",2,0)
 ;;4.0;PAID;**56,68,111**;Sep 21, 1995;Build 2
"RTN","PRS8MSC1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRS8MSC1",4,0)
 ;
"RTN","PRS8MSC1",5,0)
 ; This routine may automatically charge days to WP (leave without pay)
"RTN","PRS8MSC1",6,0)
 ; if the employee has not performed any duty during the week.  This
"RTN","PRS8MSC1",7,0)
 ; routine is only called for employees on a daily tour.
"RTN","PRS8MSC1",8,0)
 ; The software does not automatically charge NP (Non Pay) since the
"RTN","PRS8MSC1",9,0)
 ; effective start or end day may be on a day off such that an entire
"RTN","PRS8MSC1",10,0)
 ; week should not be charged to NP.
"RTN","PRS8MSC1",11,0)
 ;
"RTN","PRS8MSC1",12,0)
 ; This routine is called from PRS8MSC0.
"RTN","PRS8MSC1",13,0)
 ;
"RTN","PRS8MSC1",14,0)
NODUTY ;
"RTN","PRS8MSC1",15,0)
 ; inputs
"RTN","PRS8MSC1",16,0)
 ;   PY - pay period IEN
"RTN","PRS8MSC1",17,0)
 ;   DFN - employee IEN
"RTN","PRS8MSC1",18,0)
 ;
"RTN","PRS8MSC1",19,0)
 N CHGDAY,DO,DW,DY,END,EXC,START,TOD,WEEK
"RTN","PRS8MSC1",20,0)
 ;
"RTN","PRS8MSC1",21,0)
 ; loop thru both weeks in pay period
"RTN","PRS8MSC1",22,0)
 F WEEK=1,2 D
"RTN","PRS8MSC1",23,0)
 . ; init week counts and list of days that could be charged
"RTN","PRS8MSC1",24,0)
 . S (DW,DW("WP"),DW("NP"),DW("HX"),DO("CP"))=0
"RTN","PRS8MSC1",25,0)
 . K CHGDAY
"RTN","PRS8MSC1",26,0)
 . ;
"RTN","PRS8MSC1",27,0)
 . ; loop thru days in week
"RTN","PRS8MSC1",28,0)
 . I WEEK=1 S START=1,END=7
"RTN","PRS8MSC1",29,0)
 . I WEEK=2 S START=8,END=14
"RTN","PRS8MSC1",30,0)
 . F DY=START:1:END D
"RTN","PRS8MSC1",31,0)
 . . ; get tour and how day was charged
"RTN","PRS8MSC1",32,0)
 . . S TOD=$P($G(^PRST(458,PY,"E",DFN,"D",DY,0)),U,2)
"RTN","PRS8MSC1",33,0)
 . . S EXC=$P($G(^PRST(458,PY,"E",DFN,"D",DY,2)),U,3)
"RTN","PRS8MSC1",34,0)
 . . ; update if day charged differently due to encapsulation
"RTN","PRS8MSC1",35,0)
 . . I $D(^TMP($J,"PRS8",DY,2,0)) S EXC=^TMP($J,"PRS8",DY,2,0)
"RTN","PRS8MSC1",36,0)
 . . ;
"RTN","PRS8MSC1",37,0)
 . . ; update week counts for the day
"RTN","PRS8MSC1",38,0)
 . . I TOD>1 D  ; scheduled work day
"RTN","PRS8MSC1",39,0)
 . . . S DW=DW+1
"RTN","PRS8MSC1",40,0)
 . . . I EXC="WP" S DW("WP")=DW("WP")+1
"RTN","PRS8MSC1",41,0)
 . . . I EXC="NP" S DW("NP")=DW("NP")+1
"RTN","PRS8MSC1",42,0)
 . . . I EXC="HX" S DW("HX")=DW("HX")+1,CHGDAY(DY)="" ; add HX to list
"RTN","PRS8MSC1",43,0)
 . . I TOD=1 D  ; day off
"RTN","PRS8MSC1",44,0)
 . . . I EXC="CP" S DO("CP")=DO("CP")+1
"RTN","PRS8MSC1",45,0)
 . . . I EXC="" S CHGDAY(DY)="" ; add not charged day off to list
"RTN","PRS8MSC1",46,0)
 . ;
"RTN","PRS8MSC1",47,0)
 . ; if all work days were counted as a combination of WP, NP, and HX
"RTN","PRS8MSC1",48,0)
 . ; and at least one day was counted as WP and no days off were counted
"RTN","PRS8MSC1",49,0)
 . ; as CP then automatically charge appropriate remaining days to WP.
"RTN","PRS8MSC1",50,0)
 . I DW("WP")+DW("NP")+DW("HX")'<DW,DW("WP")>0,DO("CP")=0 D
"RTN","PRS8MSC1",51,0)
 . . D SET^PRS8EX0(DFN,PY,"WP",3,.CHGDAY)
"RTN","PRS8MSC1",52,0)
 ;
"RTN","PRS8MSC1",53,0)
 Q
"RTN","PRSALVT")
0^6^B1975333^B1735263
"RTN","PRSALVT",1,0)
PRSALVT ; HISC/REL-Leave Increment ;9/12/2006
"RTN","PRSALVT",2,0)
 ;;4.0;PAID;**111**;Sep 21, 1995;Build 2
"RTN","PRSALVT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSALVT",4,0)
 S AINC="",SINC=""
"RTN","PRSALVT",5,0)
 S C0=^PRSPC(DFN,0),LVG=$P(C0,"^",15),NH=+$P(C0,"^",16),DB=$P(C0,"^",10)
"RTN","PRSALVT",6,0)
 Q:LVG'?1N!("12345"'[LVG)  G:NH>80 FF D @LVG G QT
"RTN","PRSALVT",7,0)
1 ; Leave Group 1
"RTN","PRSALVT",8,0)
 S AINC=$S(DB=1:4,1:NH+AINC/20\1),SINC=$S(DB=1:4,1:NH+SINC/20\1) Q
"RTN","PRSALVT",9,0)
2 ; Leave Group 2
"RTN","PRSALVT",10,0)
 S AINC=$S(DB=1:6,1:NH+AINC/13\1),SINC=$S(DB=1:4,1:NH+SINC/20\1) Q
"RTN","PRSALVT",11,0)
3 ; Leave Group 3
"RTN","PRSALVT",12,0)
 S AINC=$S(DB=1:8,1:NH+AINC/10\1),SINC=$S(DB=1:4,1:NH+SINC/20\1) Q
"RTN","PRSALVT",13,0)
4 ; Leave Group 4
"RTN","PRSALVT",14,0)
 S D1=$E(DT,1,3)_"1231" D PP^PRSAPPU S D1=$P(PPE,"-",2)
"RTN","PRSALVT",15,0)
 I D1=26 S AINC=1,SINC=.5 Q
"RTN","PRSALVT",16,0)
 S AINC=.963,SINC=.481 Q
"RTN","PRSALVT",17,0)
5 ; Leave Group 5
"RTN","PRSALVT",18,0)
 S D1=$E(DT,1,3)_"1231" D PP^PRSAPPU S D1=$P(PPE,"-",2)
"RTN","PRSALVT",19,0)
 S SINC=$S(D1=26:.5,1:.481) Q
"RTN","PRSALVT",20,0)
FF ; Firefighters
"RTN","PRSALVT",21,0)
 I LVG=1 S AINC=$S(NH=112:5,NH=120:6,1:7)
"RTN","PRSALVT",22,0)
 I LVG=2 S AINC=$S(NH=112:8,NH=120:9,1:11)
"RTN","PRSALVT",23,0)
 I LVG=3 S AINC=$S(NH=112:11,NH=120:12,1:14)
"RTN","PRSALVT",24,0)
 S SINC=$S(NH=112:5,NH=120:6,1:7)
"RTN","PRSALVT",25,0)
QT ; Check Non-Accrual Flag
"RTN","PRSALVT",26,0)
 S:$P($G(^PRSPC(DFN,"ANNUAL")),"^",1)="Y" AINC="" Q
"RTN","PRSAPRT")
0^8^B6082523^B5326851
"RTN","PRSAPRT",1,0)
PRSAPRT ; HISC/REL,WIRMFO/JAH-Return Record to TimeKeeper ;1/31/2007
"RTN","PRSAPRT",2,0)
 ;;4.0;PAID;**7,8,21,111**;Sep 21, 1995;Build 2
"RTN","PRSAPRT",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSAPRT",4,0)
 ;
"RTN","PRSAPRT",5,0)
 ; Comments & Modifications by JAH Washington IRMFO.
"RTN","PRSAPRT",6,0)
 ; Timecards are returned to Time Keeper 4 correction & 
"RTN","PRSAPRT",7,0)
 ; re-certification, only 4 pay period being processed & they
"RTN","PRSAPRT",8,0)
 ; must be returned be4 timecards have been transmitted to
"RTN","PRSAPRT",9,0)
 ; Austin.  Time cards 4 pay period just closed are to be 
"RTN","PRSAPRT",10,0)
 ; transmitted to Austin by 10 am on Wednesday of first week 
"RTN","PRSAPRT",11,0)
 ; of current pay period.  There may be a period in begining 
"RTN","PRSAPRT",12,0)
 ; of a new pay period in which an employee has been set up 
"RTN","PRSAPRT",13,0)
 ; with a new pay plan & their time card has not been 
"RTN","PRSAPRT",14,0)
 ; decomposed & transmitted.  If this is case Austin will reject 
"RTN","PRSAPRT",15,0)
 ; card due to conflicting pay plans.  
"RTN","PRSAPRT",16,0)
 ;
"RTN","PRSAPRT",17,0)
 N PPERIOD,OLDPP,PAYP
"RTN","PRSAPRT",18,0)
 ;
"RTN","PRSAPRT",19,0)
 ;Ask User for pay period
"RTN","PRSAPRT",20,0)
 S DIC="^PRST(458,",DIC(0)="AEQM"
"RTN","PRSAPRT",21,0)
 S DIC("A")="Select PAY PERIOD: "
"RTN","PRSAPRT",22,0)
 W !
"RTN","PRSAPRT",23,0)
 D ^DIC K DIC
"RTN","PRSAPRT",24,0)
 ;
"RTN","PRSAPRT",25,0)
 ;Quit if invalid pay period
"RTN","PRSAPRT",26,0)
 G:Y<1 EX
"RTN","PRSAPRT",27,0)
 S PPI=+Y,PPERIOD=$P(Y,"^",2)
"RTN","PRSAPRT",28,0)
 ;
"RTN","PRSAPRT",29,0)
NME ;ask for name of employee who's timecard is to be returned.
"RTN","PRSAPRT",30,0)
 K DIC
"RTN","PRSAPRT",31,0)
 S DIC("A")="Select EMPLOYEE: "
"RTN","PRSAPRT",32,0)
 S DIC(0)="AEQM"
"RTN","PRSAPRT",33,0)
 S DIC="^PRSPC("
"RTN","PRSAPRT",34,0)
 W !
"RTN","PRSAPRT",35,0)
 D ^DIC S DFN=+Y K DIC
"RTN","PRSAPRT",36,0)
 ;Quit if employees name not found in file 450 (PAID employee).
"RTN","PRSAPRT",37,0)
 G:DFN<1 EX
"RTN","PRSAPRT",38,0)
 ;
"RTN","PRSAPRT",39,0)
 I '$D(^PRST(458,PPI,"E",DFN,0)) W $C(7),!!,"No Record exists to return!" G EX
"RTN","PRSAPRT",40,0)
 ;
"RTN","PRSAPRT",41,0)
 ;Display message to payroll if employee has changed pay plans.  
"RTN","PRSAPRT",42,0)
 ;Austin will reject a timecard if pay plan is different.
"RTN","PRSAPRT",43,0)
 S GO=1
"RTN","PRSAPRT",44,0)
 S OLDPP=$$OLDPP^PRS8UT(PPERIOD,DFN)
"RTN","PRSAPRT",45,0)
 S PAYP=$P($G(^PRSPC(DFN,0)),"^",21)
"RTN","PRSAPRT",46,0)
 I OLDPP'=0,(OLDPP'=PAYP) D
"RTN","PRSAPRT",47,0)
 . W !,"PLEASE NOTE:  Employee has changed pay plans.  "
"RTN","PRSAPRT",48,0)
 . W !,"Current Pay Plan: ",PAYP
"RTN","PRSAPRT",49,0)
 . W !,"Pay Plan during Pay Period ",PPERIOD," ",OLDPP
"RTN","PRSAPRT",50,0)
 . S GO=$$CONTINUE^PRSAUTL
"RTN","PRSAPRT",51,0)
 I 'GO G EX
"RTN","PRSAPRT",52,0)
 ;
"RTN","PRSAPRT",53,0)
 S STAT=$P($G(^PRST(458,PPI,"E",DFN,0)),"^",2)
"RTN","PRSAPRT",54,0)
 I "T"[STAT W $C(7),!!,"TimeKeeper still has this Employee." G EX
"RTN","PRSAPRT",55,0)
 I STAT="P" D B W !!," . . . Returned to Timekeeper." G EX
"RTN","PRSAPRT",56,0)
 W $C(7),!!,"Warning! This Employee has already been Transmitted."
"RTN","PRSAPRT",57,0)
A R !!,"Return to Timekeeper Anyway? ",X:DTIME G:'$T!(X["^") EX S:X="" X="*" S X=$TR(X,"yesno","YESNO")
"RTN","PRSAPRT",58,0)
 I $P("YES",X,1)'="",$P("NO",X,1)'="" W $C(7)," Answer YES or NO" G A
"RTN","PRSAPRT",59,0)
 I X?1"Y".E D B W !!," . . . Returned to Timekeeper." G EX
"RTN","PRSAPRT",60,0)
 G EX
"RTN","PRSAPRT",61,0)
B S $P(^PRST(458,PPI,"E",DFN,0),"^",2)="T" K ^(5)
"RTN","PRSAPRT",62,0)
 D AUTOPINI^PRS8(PPI,DFN)
"RTN","PRSAPRT",63,0)
 Q
"RTN","PRSAPRT",64,0)
EX G KILL^XUSCLEAN
"RTN","PRSATP0")
0^7^B6313343^B6697142
"RTN","PRSATP0",1,0)
PRSATP0 ;HISC/REL-Timekeeper Post Absence ;01/25/2007
"RTN","PRSATP0",2,0)
 ;;4.0;PAID;**2,51,69,111**;Sep 21, 1995;Build 2
"RTN","PRSATP0",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","PRSATP0",4,0)
 S ZENT=""
"RTN","PRSATP0",5,0)
 I TC=1 S ZENT=ZENT_"NP CP "
"RTN","PRSATP0",6,0)
 E  D LV^PRSATP S:$P($G(^PRST(458,PPI,"E",DFN,"D",DAY,0)),"^",12)&(TC>4!(TC=2)) ZENT=ZENT_"HX " S:TC>5!(TC=2) ZENT=ZENT_"TV TR "
"RTN","PRSATP0",7,0)
A1 K DIC S DIC="^PRST(457.3,",DIC(0)="AEQM",DIC("S")="I ZENT[$P(^(0),U,1)" W ! D ^DIC K DIC S:$D(DTOUT) X="^" Q:X["^"  G:Y<1 A1 S LV=$P(^PRST(457.3,+Y,0),"^",1)
"RTN","PRSATP0",8,0)
ATR K DIC S DIC="^PRST(457.4,",DIC(0)="AEQM",DIC("A")="TIME REMARKS CODE: ",DIC("S")="I $P(^(0),U,3)[LV" D ^DIC S:$D(DTOUT) X="^" Q:X["^"  S RM=$S(Y>0:+Y,1:"")
"RTN","PRSATP0",9,0)
 I LV="CU",RM="" D  G ATR
"RTN","PRSATP0",10,0)
 .W !,*7,"TIME REMARKS CODE must be entered when CU is posted.",!
"RTN","PRSATP0",11,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,1)),PTY="" I Z="" S PTY=2,$P(^(2),"^",3)=LV S:RM $P(^(2),"^",4)=RM G A2
"RTN","PRSATP0",12,0)
 S ZS="",L1=1 F K=1:3:19 Q:$P(Z,"^",K)=""  D
"RTN","PRSATP0",13,0)
 .S ABS=LV I $P(Z,"^",K+2),"RG"'[$P($G(^PRST(457.2,+$P(Z,"^",K+2),0)),"^",2) Q:"TR TV"[LV  S ABS="UN"
"RTN","PRSATP0",14,0)
 .S $P(ZS,"^",L1)=$P(Z,"^",K),$P(ZS,"^",L1+1)=$P(Z,"^",K+1)
"RTN","PRSATP0",15,0)
 .S $P(ZS,"^",L1+2)=ABS S:RM&(ABS=LV) $P(ZS,"^",L1+3)=RM S L1=L1+4 Q
"RTN","PRSATP0",16,0)
 S Z=$G(^PRST(458,PPI,"E",DFN,"D",DAY,4)) I Z'="" F K=1:3:19 Q:$P(Z,"^",K)=""  D
"RTN","PRSATP0",17,0)
 .S ABS=LV I $P(Z,"^",K+2),"RG"'[$P($G(^PRST(457.2,+$P(Z,"^",K+2),0)),"^",2) Q:"TR TV"[LV  S ABS="UN"
"RTN","PRSATP0",18,0)
 .S $P(ZS,"^",L1)=$P(Z,"^",K),$P(ZS,"^",L1+1)=$P(Z,"^",K+1)
"RTN","PRSATP0",19,0)
 .S $P(ZS,"^",L1+2)=ABS S:RM&(ABS=LV) $P(ZS,"^",L1+3)=RM S L1=L1+4 Q
"RTN","PRSATP0",20,0)
 S:ZS'="" ^PRST(458,PPI,"E",DFN,"D",DAY,2)=ZS,PTY=2
"RTN","PRSATP0",21,0)
A2 S DIE="^PRST(458,PPI,""E"",DFN,""D"",",DA(2)=PPI,DA(1)=DFN,DA=DAY
"RTN","PRSATP0",22,0)
 S DR="70Remarks" D ^DIE S COM=$G(^PRST(458,PPI,"E",DFN,"D",DAY,3))
"RTN","PRSATP0",23,0)
 I LV="AA",COM="" W *7,!,"Must enter remarks when coding Authorized Absence." G A2
"RTN","PRSATP0",24,0)
 I LV="WP",RM=3,COM="" W *7,!,"Remarks must be entered for WP due to AWOL." G A2
"RTN","PRSATP0",25,0)
 S X="" Q
"VER")
8.0^22.0
"BLD",6895,6)
^100
**END**
**END**
