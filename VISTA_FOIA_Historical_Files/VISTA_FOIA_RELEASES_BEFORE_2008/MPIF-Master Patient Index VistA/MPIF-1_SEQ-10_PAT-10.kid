Released MPIF*1*10 SEQ #10
Extracted from mail message
**KIDS**:MPIF*1.0*10^

**INSTALL NAME**
MPIF*1.0*10
"BLD",1826,0)
MPIF*1.0*10^MASTER PATIENT INDEX VISTA^0^3001211^y
"BLD",1826,4,0)
^9.64PA^^
"BLD",1826,"ABNS",0)
^9.66A^^
"BLD",1826,"ABPKG")
n^y^G.CIRN DEV@FORUM.VA.GOV
"BLD",1826,"INID")
^
"BLD",1826,"INIT")

"BLD",1826,"KRN",0)
^9.67PA^19^17
"BLD",1826,"KRN",.4,0)
.4
"BLD",1826,"KRN",.401,0)
.401
"BLD",1826,"KRN",.402,0)
.402
"BLD",1826,"KRN",.403,0)
.403
"BLD",1826,"KRN",.5,0)
.5
"BLD",1826,"KRN",.84,0)
.84
"BLD",1826,"KRN",3.6,0)
3.6
"BLD",1826,"KRN",3.8,0)
3.8
"BLD",1826,"KRN",9.2,0)
9.2
"BLD",1826,"KRN",9.8,0)
9.8
"BLD",1826,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",1826,"KRN",9.8,"NM",1,0)
MPIFRES^^0^B10041288
"BLD",1826,"KRN",9.8,"NM",2,0)
MPIFBT2^^0^B42897025
"BLD",1826,"KRN",9.8,"NM",3,0)
MPIFBT3^^0^B21412832
"BLD",1826,"KRN",9.8,"NM","B","MPIFBT2",2)

"BLD",1826,"KRN",9.8,"NM","B","MPIFBT3",3)

"BLD",1826,"KRN",9.8,"NM","B","MPIFRES",1)

"BLD",1826,"KRN",19,0)
19
"BLD",1826,"KRN",19,"NM",0)
^9.68A^^0
"BLD",1826,"KRN",19.1,0)
19.1
"BLD",1826,"KRN",101,0)
101
"BLD",1826,"KRN",101,"NM",0)
^9.68A^^0
"BLD",1826,"KRN",409.61,0)
409.61
"BLD",1826,"KRN",771,0)
771
"BLD",1826,"KRN",771,"NM",0)
^9.68A^^0
"BLD",1826,"KRN",870,0)
870
"BLD",1826,"KRN",870,"NM",0)
^9.68A^^0
"BLD",1826,"KRN",8994,0)
8994
"BLD",1826,"KRN",8994,"NM",0)
^9.68A^^
"BLD",1826,"KRN","B",.4,.4)

"BLD",1826,"KRN","B",.401,.401)

"BLD",1826,"KRN","B",.402,.402)

"BLD",1826,"KRN","B",.403,.403)

"BLD",1826,"KRN","B",.5,.5)

"BLD",1826,"KRN","B",.84,.84)

"BLD",1826,"KRN","B",3.6,3.6)

"BLD",1826,"KRN","B",3.8,3.8)

"BLD",1826,"KRN","B",9.2,9.2)

"BLD",1826,"KRN","B",9.8,9.8)

"BLD",1826,"KRN","B",19,19)

"BLD",1826,"KRN","B",19.1,19.1)

"BLD",1826,"KRN","B",101,101)

"BLD",1826,"KRN","B",409.61,409.61)

"BLD",1826,"KRN","B",771,771)

"BLD",1826,"KRN","B",870,870)

"BLD",1826,"KRN","B",8994,8994)

"BLD",1826,"PRET")

"BLD",1826,"QUES",0)
^9.62^^
"BLD",1826,"REQB",0)
^9.611^5^4
"BLD",1826,"REQB",1,0)
MPIF*1.0*1^2
"BLD",1826,"REQB",3,0)
MPIF*1.0*5^2
"BLD",1826,"REQB",4,0)
MPIF*1.0*6^2
"BLD",1826,"REQB",5,0)
MPIF*1.0*3^2
"BLD",1826,"REQB","B","MPIF*1.0*1",1)

"BLD",1826,"REQB","B","MPIF*1.0*3",5)

"BLD",1826,"REQB","B","MPIF*1.0*5",3)

"BLD",1826,"REQB","B","MPIF*1.0*6",4)

"MBREQ")
0
"PKG",474,-1)
1^1
"PKG",474,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",474,20,0)
^9.402P^^
"PKG",474,22,0)
^9.49I^1^1
"PKG",474,22,1,0)
1.0^2990428^2990603^9139
"PKG",474,22,1,"PAH",1,0)
10^3001211
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","MPIFBT2")
0^2^B42897025
"RTN","MPIFBT2",1,0)
MPIFBT2 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10**;30 Apr 99
"RTN","MPIFBT2",3,0)
ADDPAT ;Called when response from MPI is received for messages sent.
"RTN","MPIFBT2",4,0)
 K ^XTMP($J,"MPIF") D NOW^%DTC S ST=%,X1=ST,X2=20 D C^%DTC
"RTN","MPIFBT2",5,0)
 S STP=X,^XTMP($J,"MPIF","MPIIN",0)=STP_"^"_ST_"^"_"MPI BATCH JOB"
"RTN","MPIFBT2",6,0)
 K %,X,Y,X1,X2,ST,STP N RGLOG,MPIMSG S MPIMSG=HLMTIEN
"RTN","MPIFBT2",7,0)
 D START^RGHLLOG(HLMTIEN,"","ADDPAT^MPIFBT2")
"RTN","MPIFBT2",8,0)
 D PREPMSG,PROCESS(MPIMSG),STOP^RGHLLOG(0)
"RTN","MPIFBT2",9,0)
 K ACK1,ACK2,ACK3,ACK4,HDR,MPICKG,MPIIN,MPIIPPF,MPIIT,MPINUM,MPIPPF,DA
"RTN","MPIFBT2",10,0)
 K CNTR,COM,ENC,ESC,LOCAL,MSHDR,PATID,REP,SCOM,SEP,SITE,MPIDTH,VISTDTH,MPITMP,MPICNTR,MPIFOK,^XTMP($J,"MPIF")
"RTN","MPIFBT2",11,0)
 Q
"RTN","MPIFBT2",12,0)
PREPMSG ;prepare for response
"RTN","MPIFBT2",13,0)
 N I,J,X F I=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFBT2",14,0)
 .S ^XTMP($J,"MPIF","MPIIN",I)=HLNODE,J=0
"RTN","MPIFBT2",15,0)
 .F  S J=$O(HLNODE(J))  Q:'J  S ^XTMP($J,"MPIF","MPIIN",I,J)=HLNODE(J)
"RTN","MPIFBT2",16,0)
 Q
"RTN","MPIFBT2",17,0)
PROCESS(MPIMSG) ;Process mesage out of array
"RTN","MPIFBT2",18,0)
 N HDR,MPICNTR S MPICNTR=1,HDR=^XTMP($J,"MPIF","MPIIN",1) ;check hdr here
"RTN","MPIFBT2",19,0)
 D CHDR(HDR,.SEP,MPICNTR,MPIMSG)
"RTN","MPIFBT2",20,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",21,0)
 F  S MPICNTR=$O(^XTMP($J,"MPIF","MPIIN",MPICNTR)) Q:'MPICNTR  D LOOPS(.MPICNTR,SEP,MPIMSG)
"RTN","MPIFBT2",22,0)
 Q
"RTN","MPIFBT2",23,0)
LOOPS(CNTR,SEP,MPIMSG) ;Loop in the batch
"RTN","MPIFBT2",24,0)
 K ^XTMP($J,"MPIF","MSHERR") N MSHDR,ACK1,ACK2,ACK3,ACK4,ACK5,PATID,LOCAL,MPITMP,LICN
"RTN","MPIFBT2",25,0)
 S MSHDR=^XTMP($J,"MPIF","MPIIN",+CNTR)
"RTN","MPIFBT2",26,0)
 D CHKMSH(MSHDR,.SITE,SEP,MPIMSG)
"RTN","MPIFBT2",27,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",28,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",29,0)
 S ACK1=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",30,0)
 I $P(ACK1,SEP)'="MSA" S ^XTMP($J,"MPIF","MSHERR")="NOT AN MSA SEGMENT" D EXC^RGHLLOG(203,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",31,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",32,0)
 I ACK1["AR" S ^XTMP($J,"MPIF","MSHERR")="APP REJECT ERROR" D EXC^RGHLLOG(207,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",33,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",34,0)
 I ACK1["AE" S ^XTMP($J,"MPIF","MSHERR")="APP ERROR" D EXC^RGHLLOG(208,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",35,0)
 ;ACK1 must be an AA
"RTN","MPIFBT2",36,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",37,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",38,0)
 S ACK2=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",39,0)
 I $P(ACK2,SEP)'="QAK" S ^XTMP($J,"MPIF","MSHERR")="NOT A QAK SEGMENT" D EXC^RGHLLOG(202,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",40,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",41,0)
 I ACK2["NO DATA" D
"RTN","MPIFBT2",42,0)
 .S ^XTMP($J,"MPIF","MSHERR")="NO DATA in MPI "
"RTN","MPIFBT2",43,0)
 .I ACK2["POTENTIAL MATCHES" D
"RTN","MPIFBT2",44,0)
 ..D EXC^RGHLLOG(218,"For Patient DFN="_$P(ACK2,SEP,2)_".  Use Single Patient Initialization to MPI option to manually process.",$P(ACK2,SEP,2))
"RTN","MPIFBT2",45,0)
 ..I $D(^DPT($P(ACK2,SEP,2),0)) S LICN=$$ICNLC^MPIF001($P(ACK2,SEP,2))
"RTN","MPIFBT2",46,0)
 ..; ^ create a local ICN
"RTN","MPIFBT2",47,0)
 .I ACK2'["POTENTIAL MATCHES" d
"RTN","MPIFBT2",48,0)
 ..D EXC^RGHLLOG(209,"For Patient DFN="_$P(ACK2,SEP,2)_".  Need required fields before patient can be processed again the MPI.",$P(ACK2,SEP,2))
"RTN","MPIFBT2",49,0)
 ..I $D(^DPT($P(ACK2,SEP,2),0)) S LICN=$$ICNLC^MPIF001($P(ACK2,SEP,2))
"RTN","MPIFBT2",50,0)
 ..; ^ create a local ICN
"RTN","MPIFBT2",51,0)
 .N TACK,TCNTR S TCNTR=CNTR,CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),TACK=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",52,0)
 .I $P(TACK,SEP)="MSH" S CNTR=TCNTR
"RTN","MPIFBT2",53,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",54,0)
 S PATID=$P(ACK2,SEP,2),LOCAL=$G(^DPT(PATID,0)) ;Verify patient is in database
"RTN","MPIFBT2",55,0)
 I LOCAL']"" S ^XTMP($J,"MPIF","MSHERR")="PATIENT DFN NOT IN DATABASE- BAD " D EXC^RGHLLOG(210,"Around line number "_(CNTR*2)_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT2",56,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",57,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",58,0)
 S ACK3=^XTMP($J,"MPIF","MPIIN",CNTR) ;RDF DEFINITION SEGMENT NO-OP
"RTN","MPIFBT2",59,0)
 I $P(ACK3,SEP)'="RDF" S ^XTMP($J,"MPIF","MSHERR")="NOT RDF SEGMENT" D EXC^RGHLLOG(204,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",60,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",61,0)
 S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:CNTR'>0
"RTN","MPIFBT2",62,0)
 S ACK4=^XTMP($J,"MPIF","MPIIN",CNTR)
"RTN","MPIFBT2",63,0)
 I $P(ACK4,SEP)'="RDT" S ^XTMP($J,"MPIF","MSHERR")="NOT RDT SEGMENT" D EXC^RGHLLOG(205,"Around line number "_(CNTR*2)_" of message "_MPIMSG_".")
"RTN","MPIFBT2",64,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",65,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",66,0)
 I MPITMP'>0 S:$E($G(^XTMP($J,"MPIF","MPIIN",MPITMP)),1,3)="BTS" CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",67,0)
 Q:CNTR'>0
"RTN","MPIFBT2",68,0)
 D VFYRDT^MPIFBT3(ACK4,SEP,CNTR,PATID,SITE,MPIMSG)
"RTN","MPIFBT2",69,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR))
"RTN","MPIFBT2",70,0)
 Q:MPITMP'>0
"RTN","MPIFBT2",71,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP)
"RTN","MPIFBT2",72,0)
 I $P(ACK5,SEP)="RDT" D MULT^MPIFBT3(.CNTR,ACK5,SEP,MPIMSG,PATID)
"RTN","MPIFBT2",73,0)
 Q
"RTN","MPIFBT2",74,0)
TFLIST(TFSITE,PATID) ;adding TFSITE site for patient to Treating Facility List (#391.91)
"RTN","MPIFBT2",75,0)
 I $G(TFSITE)="" S ^XTMP($J,"MPIF","MSHERR")="Treating Facility = null" D EXC^RGHLLOG(212,"DFN = "_PATID_" Treating Facility = Null",PATID) Q
"RTN","MPIFBT2",76,0)
 S TFSITE=$$LKUP^XUAF4(TFSITE)
"RTN","MPIFBT2",77,0)
 Q:+TFSITE'>0
"RTN","MPIFBT2",78,0)
 Q:$D(^DGCN(391.91,"APAT",PATID,TFSITE))
"RTN","MPIFBT2",79,0)
 K DD,DO N DIC,X,Y L +^DGCN(391.91,0):60
"RTN","MPIFBT2",80,0)
 I '$T D EXC^RGHLLOG(212,"Unable to Lock Treating Facility file to add patient DFN="_PATID_" Facility= "_TFSITE,PATID) Q
"RTN","MPIFBT2",81,0)
 S DIC="^DGCN(391.91,",DIC("DR")=".02///`"_TFSITE,X=PATID,DIC(0)="LQZ"
"RTN","MPIFBT2",82,0)
 I $D(^DGCN(391.91,"APAT",PATID,TFSITE)) L -^DGCN(391.91,0) Q
"RTN","MPIFBT2",83,0)
 D FILE^DICN L -^DGCN(391.91,0)
"RTN","MPIFBT2",84,0)
 I +Y=-1,'$D(^DGCN(391.91,"APAT",PATID,TFSITE)) S ^XTMP($J,"MPIF","MSHERR")="Treating Facility Add Failed" D EXC^RGHLLOG(212,"DFN= "_PATID_"  Treating Facility= "_TFSITE_"  failed when adding an entry to the Treating Facility file.",DFN)
"RTN","MPIFBT2",85,0)
 K DD,DO,DIC,X,Y
"RTN","MPIFBT2",86,0)
 Q
"RTN","MPIFBT2",87,0)
TFUPDT(PATID,MPIMSG,CNTR) ;treating facility update message to pivot file
"RTN","MPIFBT2",88,0)
 N ERR,TRANS,EVDT,X,Y,%
"RTN","MPIFBT2",89,0)
 D NOW^%DTC S EVDT=% K %,X,Y
"RTN","MPIFBT2",90,0)
 S ERR=$$PIVNW^VAFHPIVT(PATID,EVDT,5,PATID_";DPT(")
"RTN","MPIFBT2",91,0)
 I +ERR<1 D EXC^RGHLLOG(212,"When trying to add Patient (DFN)"_PATID_"   message# "_MPIMSG_" around line number "_(CNTR*2),DFN)
"RTN","MPIFBT2",92,0)
 Q:+ERR<1
"RTN","MPIFBT2",93,0)
 D XMITFLAG^VAFCDD01("",+ERR)
"RTN","MPIFBT2",94,0)
 Q
"RTN","MPIFBT2",95,0)
CHDR(HDR,SEP,CNTR,MPIMSG) ;Only process Batch message responses
"RTN","MPIFBT2",96,0)
 I $P(HDR,"^")'="BHS" S ^XTMP($J,"MPIF","MSHERR")="BHS SEGMENT MISSING" D EXC^RGHLLOG(200,"for message "_MPIMSG_".  The segment contains "_HDR)
"RTN","MPIFBT2",97,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",98,0)
 S SEP=$G(HL("FS")) ;get field sep, and encoding characters
"RTN","MPIFBT2",99,0)
 I SEP="" S ^XTMP($J,"MPIF","MSHERR")="Missing field seperator" D EXC^RGHLLOG(200,"Missing field seperator")
"RTN","MPIFBT2",100,0)
 Q
"RTN","MPIFBT2",101,0)
CHKMSH(MSHDR,SITE,SEP,MPIMSG) ;VERIFY MSH
"RTN","MPIFBT2",102,0)
 I $P(MSHDR,SEP)="BTS" S ^XTMP($J,"MPIF","MSHERR")="BTS FOUND" Q
"RTN","MPIFBT2",103,0)
 S:$P(MSHDR,SEP)'="MSH" ^XTMP($J,"MPIF","MSHERR")="NOT MSH HEADER   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",104,0)
 S:$E(MSHDR,4)'=SEP ^XTMP($J,"MPIF","MSHERR")="FIELD SEPARATOR MISMATCH   MESSAGE# "_MPIMSG
"RTN","MPIFBT2",105,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(201,$G(^XTMP($J,"MPIF","MSHERR")))
"RTN","MPIFBT2",106,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT2",107,0)
 S SITE=$P(MSHDR,SEP,6)
"RTN","MPIFBT2",108,0)
 I SITE="" S ^XTMP($J,"MPIF","MSHERR")="SITE NOT IN MSH"
"RTN","MPIFBT2",109,0)
 I $D(^XTMP($J,"MPIF","MSHERR")) D EXC^RGHLLOG(8,"MSH Doesn't Have SITE as 6th piece.   MESSAGE# "_MPIMSG)
"RTN","MPIFBT2",110,0)
 Q
"RTN","MPIFBT3")
0^3^B21412832
"RTN","MPIFBT3",1,0)
MPIFBT3 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10**;30 Apr 99
"RTN","MPIFBT3",3,0)
 ;
"RTN","MPIFBT3",4,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT3",5,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT3",6,0)
 ;D TFLIST^MPIFBT2(NEXTTF,PATID) stop updating TF list with data from MPI
"RTN","MPIFBT3",7,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT3",8,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT3",9,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT3",10,0)
 Q
"RTN","MPIFBT3",11,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT3",12,0)
 N MPIY,IEN,MPICMOR S DGSENFLG=""
"RTN","MPIFBT3",13,0)
 D FINDHM(PATID,ACK4,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT3",14,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",15,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X,MPIIPPF,MPIPPF
"RTN","MPIFBT3",16,0)
 S MPINUM=$P(ACK4,SEP,6),MPICKG=$P(MPINUM,"V",2),MPINUM=$P(MPINUM,"V",1)
"RTN","MPIFBT3",17,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT3",18,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT3",19,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT3",20,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT3",21,0)
 .D EXC^RGHLLOG(227,"Patient dfn "_PATID_" returned ICN "_MPINUM_" that is already in use for Patient dfn "_$O(^DPT("AICN",MPINUM,""))_" Checkout pair to determine if a Duplicate.",PATID)
"RTN","MPIFBT3",22,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",23,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",24,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT3",25,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT3",26,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT3",27,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",28,0)
 S MPIIPPF=""
"RTN","MPIFBT3",29,0)
 S MPIPPF=$P(ACK4,SEP,5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT3",30,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT3",31,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG,MPIIT)
"RTN","MPIFBT3",32,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT3",33,0)
 I '$$PATCH^XPDUTL("DG*5.3*261") D
"RTN","MPIFBT3",34,0)
 .D TFLIST^MPIFBT2(SITE,PATID)
"RTN","MPIFBT3",35,0)
 .I MPIPPF'=SITE D TFUPDT^MPIFBT2(PATID,MPIMSG,CNTR),INSERT^RGJCTS01(PATID)
"RTN","MPIFBT3",36,0)
 I $$PATCH^XPDUTL("DG*5.3*261") D FILE^VAFCTFU(PATID,+$$SITE^VASITE)
"RTN","MPIFBT3",37,0)
 Q
"RTN","MPIFBT3",38,0)
FINDHM(PATID,ACK4,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT3",39,0)
 N DIC,X,Y,NM,YTMP
"RTN","MPIFBT3",40,0)
 ;added I to DIC(0) allow processing of sensative patients when DUZ=0
"RTN","MPIFBT3",41,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OISZ",X="`"_PATID D ^DIC K DIC,DGSENFLG
"RTN","MPIFBT3",42,0)
 S YTMP=Y
"RTN","MPIFBT3",43,0)
 I YTMP=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(ACK4,SEP,3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),$P(ACK4,SEP,3))
"RTN","MPIFBT3",44,0)
 Q:YTMP=-1
"RTN","MPIFBT3",45,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT3",46,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT3",47,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT3",48,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",49,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT3",50,0)
 Q:$P(Y(0),"^",9)["P"&($P(ACK4,SEP,3)="")
"RTN","MPIFBT3",51,0)
 I $P(Y(0),"^",9)'=$P(ACK4,SEP,3) D
"RTN","MPIFBT3",52,0)
 .S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH"
"RTN","MPIFBT3",53,0)
 .D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(ACK4,SEP,3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",54,0)
 .N LICN S LICN=$$ICNLC^MPIF001(PATID) ; create local ICN
"RTN","MPIFBT3",55,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",56,0)
 I NM'[$P(ACK4,SEP,2) D
"RTN","MPIFBT3",57,0)
 .S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH"
"RTN","MPIFBT3",58,0)
 .D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_$P(ACK4,SEP,2)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",59,0)
 .N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",60,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT3",61,0)
 N MPIDTH,VISTDTH
"RTN","MPIFBT3",62,0)
 I $P(ACK4,SEP,9)'="" S MPIDTH=$P(ACK4,SEP,9),MPIDTH=$$FMDATE^HLFNC(MPIDTH)\1
"RTN","MPIFBT3",63,0)
 I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT3",64,0)
 I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT3",65,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y,Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",66,0)
 .D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",67,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT3",68,0)
 I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT3",69,0)
 .N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",70,0)
 .D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",71,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT3",72,0)
 I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT3",73,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT3",74,0)
 .D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",75,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT3",76,0)
 Q
"RTN","MPIFRES")
0^1^B10041288
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ;JUL 13, 1998
"RTN","MPIFRES",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,7,10**;30 Apr 99
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
BKG ;
"RTN","MPIFRES",5,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",6,0)
 D NOW^%DTC
"RTN","MPIFRES",7,0)
 S ZTIO="",ZTDTH=%
"RTN","MPIFRES",8,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",9,0)
 D ^%ZTLOAD
"RTN","MPIFRES",10,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",11,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",12,0)
 Q
"RTN","MPIFRES",13,0)
 ;
"RTN","MPIFRES",14,0)
GO ;ENTRY POINT
"RTN","MPIFRES",15,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",16,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",17,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",18,0)
 ;
"RTN","MPIFRES",19,0)
 K ^TMP("HLS",$J),STOP
"RTN","MPIFRES",20,0)
 D START^RGHLLOG()
"RTN","MPIFRES",21,0)
 D HLRDF
"RTN","MPIFRES",22,0)
 I $D(STOP) K STOP Q  ;patch 7 added to quit if init returned an error
"RTN","MPIFRES",23,0)
 D LOOP
"RTN","MPIFRES",24,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",25,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",26,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIHL,MPIMIDT,MPIMSH
"RTN","MPIFRES",27,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",28,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",29,0)
 Q
"RTN","MPIFRES",30,0)
 ;
"RTN","MPIFRES",31,0)
HLRDF ;
"RTN","MPIFRES",32,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",33,0)
 S MPIHL("ECH")="^~\&"
"RTN","MPIFRES",34,0)
 S MPIHL("FS")="|"
"RTN","MPIFRES",35,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.MPIHL)
"RTN","MPIFRES",36,0)
 I $O(MPIHL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") S STOP="" Q
"RTN","MPIFRES",37,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",38,0)
 Q
"RTN","MPIFRES",39,0)
LOOP ;
"RTN","MPIFRES",40,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",41,0)
 D MAKE
"RTN","MPIFRES",42,0)
 Q
"RTN","MPIFRES",43,0)
SEND ;ready to send
"RTN","MPIFRES",44,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",45,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",46,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",47,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",48,0)
 Q
"RTN","MPIFRES",49,0)
MAKE ;
"RTN","MPIFRES",50,0)
 N LOCAL,MPIIT,TICN,STOP
"RTN","MPIFRES",51,0)
 S LOCAL="",MPIIT=0,MPIFRES=""
"RTN","MPIFRES",52,0)
 ;local ICNs
"RTN","MPIFRES",53,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",54,0)
 .Q:$D(^RGHL7(991.1,"ADFN",218,MPIIT))
"RTN","MPIFRES",55,0)
 .; ^ checking if potential match exception
"RTN","MPIFRES",56,0)
 .D MAKE3
"RTN","MPIFRES",57,0)
 ;missing ICNs
"RTN","MPIFRES",58,0)
 S MPIIT=0
"RTN","MPIFRES",59,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",60,0)
 .K STOP
"RTN","MPIFRES",61,0)
 .S TICN=+$$GETICN^MPIF001(MPIIT)
"RTN","MPIFRES",62,0)
 .I TICN<0,'$D(STOP) D MAKE3
"RTN","MPIFRES",63,0)
 .I TICN>0 K ^DPT("AMPIMIS",MPIIT)
"RTN","MPIFRES",64,0)
 Q
"RTN","MPIFRES",65,0)
MAKE3 ;
"RTN","MPIFRES",66,0)
 K MPIOUT
"RTN","MPIFRES",67,0)
 S MPIFRES=""
"RTN","MPIFRES",68,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFRES",69,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.MPIHL,.MPIQRYNM)
"RTN","MPIFRES",70,0)
 I $P(MPIOUT(0),"^",1)<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D
"RTN","MPIFRES",71,0)
 .D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFRES",72,0)
 Q:$P(MPIOUT(0),"^",1)<0
"RTN","MPIFRES",73,0)
 ;call for HL7 header
"RTN","MPIFRES",74,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",75,0)
 D MSH^HLFNC2(.MPIHL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",76,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",77,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",78,0)
 S MPISEQ=0
"RTN","MPIFRES",79,0)
 F  S MPISEQ=$O(MPIOUT(MPISEQ)) Q:MPISEQ'>0  D
"RTN","MPIFRES",80,0)
 .S ^TMP("HLS",$J,MPICNT)=MPIOUT(MPISEQ)
"RTN","MPIFRES",81,0)
 .S MPICNT=MPICNT+1
"RTN","MPIFRES",82,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",83,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",84,0)
 .D SEND
"RTN","MPIFRES",85,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",86,0)
 .D HLRDF
"RTN","MPIFRES",87,0)
 Q
"VER")
8.0^22.0
**END**
**END**
