Released IB*2*320 SEQ #315
Extracted from mail message
**KIDS**:IB*2.0*320^

**INSTALL NAME**
IB*2.0*320
"BLD",5605,0)
IB*2.0*320^INTEGRATED BILLING^0^3060616^y
"BLD",5605,1,0)
^^1^1^3060324^
"BLD",5605,1,1,0)
eClaims Plus Iteration 2
"BLD",5605,4,0)
^9.64PA^355.96^14
"BLD",5605,4,36,0)
36
"BLD",5605,4,36,2,0)
^9.641^36.013^2
"BLD",5605,4,36,2,36,0)
INSURANCE COMPANY  (File-top level)
"BLD",5605,4,36,2,36,1,0)
^9.6411^4.08^19
"BLD",5605,4,36,2,36,1,.01,0)
NAME
"BLD",5605,4,36,2,36,1,.06,0)
ALLOW MULTIPLE BEDSECTIONS
"BLD",5605,4,36,2,36,1,.07,0)
DIFFERENT REVENUE CODES TO USE
"BLD",5605,4,36,2,36,1,.08,0)
ONE OPT. VISIT ON BILL ONLY
"BLD",5605,4,36,2,36,1,.13,0)
TYPE OF COVERAGE
"BLD",5605,4,36,2,36,1,.15,0)
PRESCRIPTION REFILL REV. CODE
"BLD",5605,4,36,2,36,1,3.01,0)
TRANSMIT ELECTRONICALLY
"BLD",5605,4,36,2,36,1,3.02,0)
EDI ID NUMBER - PROF
"BLD",5605,4,36,2,36,1,3.04,0)
EDI ID NUMBER - INST
"BLD",5605,4,36,2,36,1,3.09,0)
ELECTRONIC INSURANCE TYPE
"BLD",5605,4,36,2,36,1,3.13,0)
INS COMPANY LINK TYPE
"BLD",5605,4,36,2,36,1,3.14,0)
INS COMPANY LINK PARENT
"BLD",5605,4,36,2,36,1,4.01,0)
PERF PROV SECOND ID TYPE HCFA
"BLD",5605,4,36,2,36,1,4.02,0)
PERF PROV SECOND ID TYPE UB
"BLD",5605,4,36,2,36,1,4.04,0)
REF PROV SEC ID DEF HCFA
"BLD",5605,4,36,2,36,1,4.05,0)
REF PROV SEC ID REQ ON CLAIMS
"BLD",5605,4,36,2,36,1,4.06,0)
ATT/REND ID BILL SEC ID PROF
"BLD",5605,4,36,2,36,1,4.07,0)
USE PERF PRV ID AS FAC ID UB92
"BLD",5605,4,36,2,36,1,4.08,0)
ATT/REND ID BILL SEC ID INST
"BLD",5605,4,36,2,36.013,0)
PLAN TYPES NO BILL PRV SEC ID  (sub-file)
"BLD",5605,4,36,2,36.013,1,0)
^9.6411^^
"BLD",5605,4,36,222)
y^y^p^^^^n^^n
"BLD",5605,4,36,224)

"BLD",5605,4,350.8,0)
350.8
"BLD",5605,4,350.8,222)
n^n^f^^n^^y^o^n
"BLD",5605,4,350.8,224)
I $F(".IB235.IB303.IB236.IB237.IB238.IB239.IB240.IB241.IB242.IB243.IB244.IB245.IB246.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"BLD",5605,4,355.92,0)
355.92
"BLD",5605,4,355.92,2,0)
^9.641^355.92^1
"BLD",5605,4,355.92,2,355.92,0)
FACILITY BILLING ID  (File-top level)
"BLD",5605,4,355.92,2,355.92,1,0)
^9.6411^.11^6
"BLD",5605,4,355.92,2,355.92,1,.01,0)
INSURANCE COMPANY
"BLD",5605,4,355.92,2,355.92,1,.03,0)
CARE UNITS
"BLD",5605,4,355.92,2,355.92,1,.05,0)
DIVISION
"BLD",5605,4,355.92,2,355.92,1,.08,0)
ID TYPE FLAG
"BLD",5605,4,355.92,2,355.92,1,.1,0)
INDEX VALUE CARE UNIT
"BLD",5605,4,355.92,2,355.92,1,.11,0)
INDEX VALUE DIVISION
"BLD",5605,4,355.92,222)
y^y^p^^^^n^^n
"BLD",5605,4,355.92,224)

"BLD",5605,4,355.93,0)
355.93
"BLD",5605,4,355.93,2,0)
^9.641^355.93^1
"BLD",5605,4,355.93,2,355.93,0)
IB NON/OTHER VA BILLING PROVIDER  (File-top level)
"BLD",5605,4,355.93,2,355.93,1,0)
^9.6411^.13^4
"BLD",5605,4,355.93,2,355.93,1,.02,0)
PROVIDER TYPE
"BLD",5605,4,355.93,2,355.93,1,.09,0)
FACILITY DEFAULT ID NUMBER
"BLD",5605,4,355.93,2,355.93,1,.13,0)
PRIMARY ID QUALIFIER
"BLD",5605,4,355.93,2,355.93,1,.15,0)
MAMMOGRAPHY CERTIFICATION #
"BLD",5605,4,355.93,222)
y^y^p^^^^n^^n
"BLD",5605,4,355.93,224)

"BLD",5605,4,355.95,0)
355.95
"BLD",5605,4,355.95,2,0)
^9.641^355.95^1
"BLD",5605,4,355.95,2,355.95,0)
IB PROVIDER ID CARE UNIT  (File-top level)
"BLD",5605,4,355.95,2,355.95,1,0)
^9.6411^.04^1
"BLD",5605,4,355.95,2,355.95,1,.04,0)
DIVISION
"BLD",5605,4,355.95,222)
y^y^p^^^^n^^n
"BLD",5605,4,355.95,224)

"BLD",5605,4,355.96,0)
355.96
"BLD",5605,4,355.96,2,0)
^9.641^355.96^1
"BLD",5605,4,355.96,2,355.96,0)
IB INS CO PROVIDER ID CARE UNIT  (File-top level)
"BLD",5605,4,355.96,2,355.96,1,0)
^9.6411^.06^1
"BLD",5605,4,355.96,2,355.96,1,.06,0)
ID TYPE
"BLD",5605,4,355.96,222)
y^y^p^^^^n^^n
"BLD",5605,4,355.96,224)

"BLD",5605,4,355.97,0)
355.97
"BLD",5605,4,355.97,2,0)
^9.641^355.97^1
"BLD",5605,4,355.97,2,355.97,0)
IB PROVIDER ID # TYPE  (File-top level)
"BLD",5605,4,355.97,2,355.97,1,0)
^9.6411^.08^3
"BLD",5605,4,355.97,2,355.97,1,.03,0)
X12 CODE
"BLD",5605,4,355.97,2,355.97,1,.07,0)
ALLOWABLE FORM TYPE
"BLD",5605,4,355.97,2,355.97,1,.08,0)
ACTIVE
"BLD",5605,4,355.97,222)
y^y^p^^^^n^^n
"BLD",5605,4,355.97,224)

"BLD",5605,4,361,0)
361
"BLD",5605,4,361,2,0)
^9.641^361^1
"BLD",5605,4,361,2,361,0)
BILL STATUS MESSAGE  (File-top level)
"BLD",5605,4,361,2,361,1,0)
^9.6411^.16^2
"BLD",5605,4,361,2,361,1,.15,0)
MESSAGE CHECKSUM
"BLD",5605,4,361,2,361,1,.16,0)
DATE LAST PRINTED VIA MCS
"BLD",5605,4,361,222)
y^y^p^^^^n^^n
"BLD",5605,4,361,224)

"BLD",5605,4,361.2,0)
361.2
"BLD",5605,4,361.2,222)
n^n^f^^n^^y^o^n
"BLD",5605,4,361.2,224)
I $P($G(^IBE(361.2,Y,0)),U,1)="R0S2"
"BLD",5605,4,361.4,0)
361.4
"BLD",5605,4,361.4,2,0)
^9.641^361.41^1
"BLD",5605,4,361.4,2,361.41,0)
TRANSMIT DATE/TIME  (sub-file)
"BLD",5605,4,361.4,2,361.41,1,0)
^9.6411^.01^1
"BLD",5605,4,361.4,2,361.41,1,.01,0)
TRANSMIT DATE/TIME
"BLD",5605,4,361.4,222)
y^y^p^^^^n^^n
"BLD",5605,4,361.4,224)

"BLD",5605,4,364.5,0)
364.5
"BLD",5605,4,364.5,222)
n^n^f^^y^^y^o^n
"BLD",5605,4,364.5,224)
I $$INCLUDE^IBY320PR(5,Y)
"BLD",5605,4,364.6,0)
364.6
"BLD",5605,4,364.6,222)
n^n^f^^y^^y^o^n
"BLD",5605,4,364.6,224)
I $$INCLUDE^IBY320PR(6,Y)
"BLD",5605,4,364.7,0)
364.7
"BLD",5605,4,364.7,222)
n^n^f^^y^^y^o^n
"BLD",5605,4,364.7,224)
I $$INCLUDE^IBY320PR(7,Y)
"BLD",5605,4,399,0)
399
"BLD",5605,4,399,2,0)
^9.641^399.0222^2
"BLD",5605,4,399,2,399,0)
BILL/CLAIMS  (File-top level)
"BLD",5605,4,399,2,399,1,0)
^9.6411^.19^19
"BLD",5605,4,399,2,399,1,.19,0)
FORM TYPE
"BLD",5605,4,399,2,399,1,.22,0)
DEFAULT DIVISION
"BLD",5605,4,399,2,399,1,29,0)
BILL CLONED TO
"BLD",5605,4,399,2,399,1,30,0)
BILL CLONED FROM
"BLD",5605,4,399,2,399,1,31,0)
DATE BILL CLONED
"BLD",5605,4,399,2,399,1,32,0)
BILL CLONED BY
"BLD",5605,4,399,2,399,1,33,0)
REASON CLONED
"BLD",5605,4,399,2,399,1,101,0)
PRIMARY INSURANCE CARRIER
"BLD",5605,4,399,2,399,1,102,0)
SECONDARY INSURANCE CARRIER
"BLD",5605,4,399,2,399,1,103,0)
TERTIARY INSURANCE CARRIER
"BLD",5605,4,399,2,399,1,122,0)
PRIMARY PROVIDER #
"BLD",5605,4,399,2,399,1,123,0)
SECONDARY PROVIDER #
"BLD",5605,4,399,2,399,1,124,0)
TERTIARY PROVIDER #
"BLD",5605,4,399,2,399,1,128,0)
PRIMARY ID QUALIFIER
"BLD",5605,4,399,2,399,1,129,0)
SECONDARY ID QUALIFIER
"BLD",5605,4,399,2,399,1,130,0)
TERTIARY ID QUALIFIER
"BLD",5605,4,399,2,399,1,232,0)
NON-VA FACILITY
"BLD",5605,4,399,2,399,1,235,0)
LAB CLIA NUMBER
"BLD",5605,4,399,2,399,1,242,0)
MAMMOGRAPHY CERT NUMBER
"BLD",5605,4,399,2,399.0222,0)
PROVIDER  (sub-file)
"BLD",5605,4,399,2,399.0222,1,0)
^9.6411^.07^6
"BLD",5605,4,399,2,399.0222,1,.05,0)
PRIMARY INS CO ID NUMBER
"BLD",5605,4,399,2,399.0222,1,.06,0)
SECONDARY INS CO ID NUMBER
"BLD",5605,4,399,2,399.0222,1,.07,0)
TERTIARY INS CO ID NUMBER
"BLD",5605,4,399,2,399.0222,1,.12,0)
PRIM INS PROVIDER ID TYPE
"BLD",5605,4,399,2,399.0222,1,.13,0)
SEC INS PROVIDER ID TYPE
"BLD",5605,4,399,2,399.0222,1,.14,0)
TERT INS PROVIDER ID TYPE
"BLD",5605,4,399,222)
y^y^p^^^^n^^n
"BLD",5605,4,399,224)

"BLD",5605,4,"APDD",36,36)

"BLD",5605,4,"APDD",36,36,.01)

"BLD",5605,4,"APDD",36,36,.06)

"BLD",5605,4,"APDD",36,36,.07)

"BLD",5605,4,"APDD",36,36,.08)

"BLD",5605,4,"APDD",36,36,.13)

"BLD",5605,4,"APDD",36,36,.15)

"BLD",5605,4,"APDD",36,36,3.01)

"BLD",5605,4,"APDD",36,36,3.02)

"BLD",5605,4,"APDD",36,36,3.04)

"BLD",5605,4,"APDD",36,36,3.09)

"BLD",5605,4,"APDD",36,36,3.13)

"BLD",5605,4,"APDD",36,36,3.14)

"BLD",5605,4,"APDD",36,36,4.01)

"BLD",5605,4,"APDD",36,36,4.02)

"BLD",5605,4,"APDD",36,36,4.04)

"BLD",5605,4,"APDD",36,36,4.05)

"BLD",5605,4,"APDD",36,36,4.06)

"BLD",5605,4,"APDD",36,36,4.07)

"BLD",5605,4,"APDD",36,36,4.08)

"BLD",5605,4,"APDD",36,36.013)

"BLD",5605,4,"APDD",355.92,355.92)

"BLD",5605,4,"APDD",355.92,355.92,.01)

"BLD",5605,4,"APDD",355.92,355.92,.03)

"BLD",5605,4,"APDD",355.92,355.92,.05)

"BLD",5605,4,"APDD",355.92,355.92,.08)

"BLD",5605,4,"APDD",355.92,355.92,.1)

"BLD",5605,4,"APDD",355.92,355.92,.11)

"BLD",5605,4,"APDD",355.93,355.93)

"BLD",5605,4,"APDD",355.93,355.93,.02)

"BLD",5605,4,"APDD",355.93,355.93,.09)

"BLD",5605,4,"APDD",355.93,355.93,.13)

"BLD",5605,4,"APDD",355.93,355.93,.15)

"BLD",5605,4,"APDD",355.95,355.95)

"BLD",5605,4,"APDD",355.95,355.95,.04)

"BLD",5605,4,"APDD",355.96,355.96)

"BLD",5605,4,"APDD",355.96,355.96,.06)

"BLD",5605,4,"APDD",355.97,355.97)

"BLD",5605,4,"APDD",355.97,355.97,.03)

"BLD",5605,4,"APDD",355.97,355.97,.07)

"BLD",5605,4,"APDD",355.97,355.97,.08)

"BLD",5605,4,"APDD",361,361)

"BLD",5605,4,"APDD",361,361,.15)

"BLD",5605,4,"APDD",361,361,.16)

"BLD",5605,4,"APDD",361.4,361.41)

"BLD",5605,4,"APDD",361.4,361.41,.01)

"BLD",5605,4,"APDD",399,399)

"BLD",5605,4,"APDD",399,399,.19)

"BLD",5605,4,"APDD",399,399,.22)

"BLD",5605,4,"APDD",399,399,29)

"BLD",5605,4,"APDD",399,399,30)

"BLD",5605,4,"APDD",399,399,31)

"BLD",5605,4,"APDD",399,399,32)

"BLD",5605,4,"APDD",399,399,33)

"BLD",5605,4,"APDD",399,399,101)

"BLD",5605,4,"APDD",399,399,102)

"BLD",5605,4,"APDD",399,399,103)

"BLD",5605,4,"APDD",399,399,122)

"BLD",5605,4,"APDD",399,399,123)

"BLD",5605,4,"APDD",399,399,124)

"BLD",5605,4,"APDD",399,399,128)

"BLD",5605,4,"APDD",399,399,129)

"BLD",5605,4,"APDD",399,399,130)

"BLD",5605,4,"APDD",399,399,232)

"BLD",5605,4,"APDD",399,399,235)

"BLD",5605,4,"APDD",399,399,242)

"BLD",5605,4,"APDD",399,399.0222)

"BLD",5605,4,"APDD",399,399.0222,.05)

"BLD",5605,4,"APDD",399,399.0222,.06)

"BLD",5605,4,"APDD",399,399.0222,.07)

"BLD",5605,4,"APDD",399,399.0222,.12)

"BLD",5605,4,"APDD",399,399.0222,.13)

"BLD",5605,4,"APDD",399,399.0222,.14)

"BLD",5605,4,"B",36,36)

"BLD",5605,4,"B",350.8,350.8)

"BLD",5605,4,"B",355.92,355.92)

"BLD",5605,4,"B",355.93,355.93)

"BLD",5605,4,"B",355.95,355.95)

"BLD",5605,4,"B",355.96,355.96)

"BLD",5605,4,"B",355.97,355.97)

"BLD",5605,4,"B",361,361)

"BLD",5605,4,"B",361.2,361.2)

"BLD",5605,4,"B",361.4,361.4)

"BLD",5605,4,"B",364.5,364.5)

"BLD",5605,4,"B",364.6,364.6)

"BLD",5605,4,"B",364.7,364.7)

"BLD",5605,4,"B",399,399)

"BLD",5605,"ABPKG")
n
"BLD",5605,"INI")
IBY320PR
"BLD",5605,"INID")
^y^y
"BLD",5605,"INIT")
IBY320PO
"BLD",5605,"KRN",0)
^9.67PA^8989.52^19
"BLD",5605,"KRN",.4,0)
.4
"BLD",5605,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5605,"KRN",.401,0)
.401
"BLD",5605,"KRN",.402,0)
.402
"BLD",5605,"KRN",.402,"NM",0)
^9.68A^4^4
"BLD",5605,"KRN",.402,"NM",1,0)
IBEDIT INS CO1    FILE #36^36^0
"BLD",5605,"KRN",.402,"NM",2,0)
IB SCREEN82    FILE #399^399^0
"BLD",5605,"KRN",.402,"NM",3,0)
IB SCREEN8H    FILE #399^399^0
"BLD",5605,"KRN",.402,"NM",4,0)
IB SCREEN3    FILE #399^399^0
"BLD",5605,"KRN",.402,"NM","B","IB SCREEN3    FILE #399",4)

"BLD",5605,"KRN",.402,"NM","B","IB SCREEN82    FILE #399",2)

"BLD",5605,"KRN",.402,"NM","B","IB SCREEN8H    FILE #399",3)

"BLD",5605,"KRN",.402,"NM","B","IBEDIT INS CO1    FILE #36",1)

"BLD",5605,"KRN",.403,0)
.403
"BLD",5605,"KRN",.5,0)
.5
"BLD",5605,"KRN",.84,0)
.84
"BLD",5605,"KRN",3.6,0)
3.6
"BLD",5605,"KRN",3.8,0)
3.8
"BLD",5605,"KRN",9.2,0)
9.2
"BLD",5605,"KRN",9.8,0)
9.8
"BLD",5605,"KRN",9.8,"NM",0)
^9.68A^80^79
"BLD",5605,"KRN",9.8,"NM",1,0)
IBCEST^^0^B66454874
"BLD",5605,"KRN",9.8,"NM",2,0)
IBCC^^0^B36081690
"BLD",5605,"KRN",9.8,"NM",3,0)
IBCCC^^0^B14623718
"BLD",5605,"KRN",9.8,"NM",4,0)
IBCCC1^^0^B9434923
"BLD",5605,"KRN",9.8,"NM",5,0)
IBCNQ^^0^B25553746
"BLD",5605,"KRN",9.8,"NM",6,0)
IBJTCA2^^0^B23068552
"BLD",5605,"KRN",9.8,"NM",7,0)
IBCEF72^^0^B53776551
"BLD",5605,"KRN",9.8,"NM",8,0)
IBCECSA2^^0^B81703676
"BLD",5605,"KRN",9.8,"NM",9,0)
IBCECSA3^^0^B26519666
"BLD",5605,"KRN",9.8,"NM",10,0)
IBCECSA^^0^B60060653
"BLD",5605,"KRN",9.8,"NM",11,0)
IBCECSA1^^0^B39221878
"BLD",5605,"KRN",9.8,"NM",12,0)
IBCECSA4^^0^B56824408
"BLD",5605,"KRN",9.8,"NM",13,0)
IBCEMCA^^0^B50663666
"BLD",5605,"KRN",9.8,"NM",14,0)
IBCEMCA1^^0^B46309574
"BLD",5605,"KRN",9.8,"NM",15,0)
IBCEMCL^^0^B41449667
"BLD",5605,"KRN",9.8,"NM",16,0)
IBCC1^^0^B14613581
"BLD",5605,"KRN",9.8,"NM",17,0)
IBCEM3^^0^B11260075
"BLD",5605,"KRN",9.8,"NM",18,0)
IBCEMCA2^^0^B17866540
"BLD",5605,"KRN",9.8,"NM",19,0)
IBCCR^^0^B4318909
"BLD",5605,"KRN",9.8,"NM",20,0)
IBCEMCA3^^0^B52127720
"BLD",5605,"KRN",9.8,"NM",21,0)
IBCEMU2^^0^B34857625
"BLD",5605,"KRN",9.8,"NM",22,0)
IBCFP1^^0^B33631841
"BLD",5605,"KRN",9.8,"NM",23,0)
IBCEP4^^0^B23231941
"BLD",5605,"KRN",9.8,"NM",24,0)
IBCEP5^^0^B48276203
"BLD",5605,"KRN",9.8,"NM",25,0)
IBCEP5A^^0^B24226544
"BLD",5605,"KRN",9.8,"NM",26,0)
IBCEP5B^^0^B37504139
"BLD",5605,"KRN",9.8,"NM",27,0)
IBCEP6^^0^B11155166
"BLD",5605,"KRN",9.8,"NM",28,0)
IBCEP7^^0^B48424758
"BLD",5605,"KRN",9.8,"NM",29,0)
IBCEP8^^0^B54137838
"BLD",5605,"KRN",9.8,"NM",30,0)
IBCEPA^^0^B50476758
"BLD",5605,"KRN",9.8,"NM",31,0)
IBCNSC^^0^B21343309
"BLD",5605,"KRN",9.8,"NM",32,0)
IBCNSC1^^0^B69640933
"BLD",5605,"KRN",9.8,"NM",33,0)
IBCNSC02^^0^B55607158
"BLD",5605,"KRN",9.8,"NM",34,0)
IBCNSC01^^0^B50893102
"BLD",5605,"KRN",9.8,"NM",35,0)
IBCE837B^^0^B3184659
"BLD",5605,"KRN",9.8,"NM",36,0)
IBCEFG7^^0^B51790981
"BLD",5605,"KRN",9.8,"NM",37,0)
IBCEPTC^^0^B73154243
"BLD",5605,"KRN",9.8,"NM",38,0)
IBCEPTC0^^0^B19867534
"BLD",5605,"KRN",9.8,"NM",39,0)
IBCEPTC1^^0^B16490219
"BLD",5605,"KRN",9.8,"NM",40,0)
IBCEPTC2^^0^B47686748
"BLD",5605,"KRN",9.8,"NM",41,0)
IBCEPTC3^^0^B61167367
"BLD",5605,"KRN",9.8,"NM",42,0)
IBCBB2^^0^B42060195
"BLD",5605,"KRN",9.8,"NM",43,0)
IBCCC2^^0^B56568071
"BLD",5605,"KRN",9.8,"NM",44,0)
IBCEP8A^^0^B25216435
"BLD",5605,"KRN",9.8,"NM",45,0)
IBCSC8H^^0^B30414621
"BLD",5605,"KRN",9.8,"NM",46,0)
IBCEF71^^0^B63861982
"BLD",5605,"KRN",9.8,"NM",47,0)
IBCEPTR^^0^B101970593
"BLD",5605,"KRN",9.8,"NM",48,0)
IBCEFG4^^0^B25221487
"BLD",5605,"KRN",9.8,"NM",49,0)
IBJPS^^0^B5289854
"BLD",5605,"KRN",9.8,"NM",50,0)
IBJPS2^^0^B48143504
"BLD",5605,"KRN",9.8,"NM",51,0)
IBCU^^0^B57362986
"BLD",5605,"KRN",9.8,"NM",52,0)
IBCEPU^^0^B931985
"BLD",5605,"KRN",9.8,"NM",53,0)
IBCEP7A^^0^B8080264
"BLD",5605,"KRN",9.8,"NM",54,0)
IBCEP7B^^0^B7086017
"BLD",5605,"KRN",9.8,"NM",55,0)
IBCEP7C^^0^B59203324
"BLD",5605,"KRN",9.8,"NM",56,0)
IBCEP2^^0^B43180010
"BLD",5605,"KRN",9.8,"NM",57,0)
IBCEP2A^^0^B42808014
"BLD",5605,"KRN",9.8,"NM",58,0)
IBCEP2B^^0^B49897444
"BLD",5605,"KRN",9.8,"NM",59,0)
IBCEP5C^^0^B43626685
"BLD",5605,"KRN",9.8,"NM",60,0)
IBCEF73^^0^B54477454
"BLD",5605,"KRN",9.8,"NM",61,0)
IBCEP^^0^B21507760
"BLD",5605,"KRN",9.8,"NM",62,0)
IBCEP0^^0^B67697458
"BLD",5605,"KRN",9.8,"NM",63,0)
IBCEPC^^0^B5826861
"BLD",5605,"KRN",9.8,"NM",64,0)
IBCBB1^^0^B69487454
"BLD",5605,"KRN",9.8,"NM",65,0)
IBCEF74^^0^B56964899
"BLD",5605,"KRN",9.8,"NM",66,0)
IBCEF75^^0^B30617202
"BLD",5605,"KRN",9.8,"NM",67,0)
IBCEF76^^0^B34194204
"BLD",5605,"KRN",9.8,"NM",68,0)
IBCEPB^^0^B8186996
"BLD",5605,"KRN",9.8,"NM",69,0)
IBCSC3^^0^B36137301
"BLD",5605,"KRN",9.8,"NM",70,0)
IBCEP0A^^0^B41076613
"BLD",5605,"KRN",9.8,"NM",72,0)
IBCEF77^^0^B6621719
"BLD",5605,"KRN",9.8,"NM",73,0)
IBCEP5D^^0^B55561747
"BLD",5605,"KRN",9.8,"NM",74,0)
IBCEF74A^^0^B17345464
"BLD",5605,"KRN",9.8,"NM",75,0)
IBCEPCID^^0^B34815450
"BLD",5605,"KRN",9.8,"NM",76,0)
IBCEP9^^0^B73023776
"BLD",5605,"KRN",9.8,"NM",77,0)
IBCEP9B^^0^B57215054
"BLD",5605,"KRN",9.8,"NM",78,0)
IBCESRV^^0^B69133762
"BLD",5605,"KRN",9.8,"NM",79,0)
IBCEST1^^0^B1659665
"BLD",5605,"KRN",9.8,"NM",80,0)
IBCU1^^0^B42846592
"BLD",5605,"KRN",9.8,"NM","B","IBCBB1",64)

"BLD",5605,"KRN",9.8,"NM","B","IBCBB2",42)

"BLD",5605,"KRN",9.8,"NM","B","IBCC",2)

"BLD",5605,"KRN",9.8,"NM","B","IBCC1",16)

"BLD",5605,"KRN",9.8,"NM","B","IBCCC",3)

"BLD",5605,"KRN",9.8,"NM","B","IBCCC1",4)

"BLD",5605,"KRN",9.8,"NM","B","IBCCC2",43)

"BLD",5605,"KRN",9.8,"NM","B","IBCCR",19)

"BLD",5605,"KRN",9.8,"NM","B","IBCE837B",35)

"BLD",5605,"KRN",9.8,"NM","B","IBCECSA",10)

"BLD",5605,"KRN",9.8,"NM","B","IBCECSA1",11)

"BLD",5605,"KRN",9.8,"NM","B","IBCECSA2",8)

"BLD",5605,"KRN",9.8,"NM","B","IBCECSA3",9)

"BLD",5605,"KRN",9.8,"NM","B","IBCECSA4",12)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF71",46)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF72",7)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF73",60)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF74",65)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF74A",74)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF75",66)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF76",67)

"BLD",5605,"KRN",9.8,"NM","B","IBCEF77",72)

"BLD",5605,"KRN",9.8,"NM","B","IBCEFG4",48)

"BLD",5605,"KRN",9.8,"NM","B","IBCEFG7",36)

"BLD",5605,"KRN",9.8,"NM","B","IBCEM3",17)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMCA",13)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMCA1",14)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMCA2",18)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMCA3",20)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMCL",15)

"BLD",5605,"KRN",9.8,"NM","B","IBCEMU2",21)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP",61)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP0",62)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP0A",70)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP2",56)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP2A",57)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP2B",58)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP4",23)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP5",24)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP5A",25)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP5B",26)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP5C",59)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP5D",73)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP6",27)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP7",28)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP7A",53)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP7B",54)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP7C",55)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP8",29)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP8A",44)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP9",76)

"BLD",5605,"KRN",9.8,"NM","B","IBCEP9B",77)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPA",30)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPB",68)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPC",63)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPCID",75)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTC",37)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTC0",38)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTC1",39)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTC2",40)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTC3",41)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPTR",47)

"BLD",5605,"KRN",9.8,"NM","B","IBCEPU",52)

"BLD",5605,"KRN",9.8,"NM","B","IBCESRV",78)

"BLD",5605,"KRN",9.8,"NM","B","IBCEST",1)

"BLD",5605,"KRN",9.8,"NM","B","IBCEST1",79)

"BLD",5605,"KRN",9.8,"NM","B","IBCFP1",22)

"BLD",5605,"KRN",9.8,"NM","B","IBCNQ",5)

"BLD",5605,"KRN",9.8,"NM","B","IBCNSC",31)

"BLD",5605,"KRN",9.8,"NM","B","IBCNSC01",34)

"BLD",5605,"KRN",9.8,"NM","B","IBCNSC02",33)

"BLD",5605,"KRN",9.8,"NM","B","IBCNSC1",32)

"BLD",5605,"KRN",9.8,"NM","B","IBCSC3",69)

"BLD",5605,"KRN",9.8,"NM","B","IBCSC8H",45)

"BLD",5605,"KRN",9.8,"NM","B","IBCU",51)

"BLD",5605,"KRN",9.8,"NM","B","IBCU1",80)

"BLD",5605,"KRN",9.8,"NM","B","IBJPS",49)

"BLD",5605,"KRN",9.8,"NM","B","IBJPS2",50)

"BLD",5605,"KRN",9.8,"NM","B","IBJTCA2",6)

"BLD",5605,"KRN",19,0)
19
"BLD",5605,"KRN",19,"NM",0)
^9.68A^7^7
"BLD",5605,"KRN",19,"NM",1,0)
IBCE 837 EDI REPORTS^^2
"BLD",5605,"KRN",19,"NM",2,0)
IBCEMC MULT CSA MSG MANAGEMENT^^0
"BLD",5605,"KRN",19,"NM",3,0)
IBCE 837 EDI MENU^^2
"BLD",5605,"KRN",19,"NM",4,0)
IBCE PREV TRANSMITTED CLAIMS^^0
"BLD",5605,"KRN",19,"NM",5,0)
IBCE RESUBMIT BILL BATCH^^1^
"BLD",5605,"KRN",19,"NM",6,0)
IBCE RESUBMIT BILL^^1^
"BLD",5605,"KRN",19,"NM",7,0)
IBCN RESYNCH INS COMP^^0
"BLD",5605,"KRN",19,"NM","B","IBCE 837 EDI MENU",3)

"BLD",5605,"KRN",19,"NM","B","IBCE 837 EDI REPORTS",1)

"BLD",5605,"KRN",19,"NM","B","IBCE PREV TRANSMITTED CLAIMS",4)

"BLD",5605,"KRN",19,"NM","B","IBCE RESUBMIT BILL",6)

"BLD",5605,"KRN",19,"NM","B","IBCE RESUBMIT BILL BATCH",5)

"BLD",5605,"KRN",19,"NM","B","IBCEMC MULT CSA MSG MANAGEMENT",2)

"BLD",5605,"KRN",19,"NM","B","IBCN RESYNCH INS COMP",7)

"BLD",5605,"KRN",19.1,0)
19.1
"BLD",5605,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",5605,"KRN",19.1,"NM",1,0)
IB MESSAGE MANAGEMENT^^0
"BLD",5605,"KRN",19.1,"NM",2,0)
IB EDI INSURANCE EDIT^^0
"BLD",5605,"KRN",19.1,"NM","B","IB EDI INSURANCE EDIT",2)

"BLD",5605,"KRN",19.1,"NM","B","IB MESSAGE MANAGEMENT",1)

"BLD",5605,"KRN",101,0)
101
"BLD",5605,"KRN",101,"NM",0)
^9.68A^65^62
"BLD",5605,"KRN",101,"NM",1,0)
IBCEM CSA RE-SORT MESSAGES^^0
"BLD",5605,"KRN",101,"NM",2,0)
IBCEM CLAIMS STATUS AWAITING^^2
"BLD",5605,"KRN",101,"NM",3,0)
IBCEM CSA MSG MAN^^0
"BLD",5605,"KRN",101,"NM",4,0)
IBCEMC CANCEL^^0
"BLD",5605,"KRN",101,"NM",5,0)
IBCEMC CHANGE MESSAGE SEARCH CRITERIA^^0
"BLD",5605,"KRN",101,"NM",6,0)
IBCEMC COMMENT^^0
"BLD",5605,"KRN",101,"NM",7,0)
IBCEMC EXIT^^0
"BLD",5605,"KRN",101,"NM",8,0)
IBCEMC MENU^^0
"BLD",5605,"KRN",101,"NM",9,0)
IBCEMC PRINT^^0
"BLD",5605,"KRN",101,"NM",10,0)
IBCEMC RETRANSMIT^^0
"BLD",5605,"KRN",101,"NM",11,0)
IBCEMC REVIEW STATUS^^0
"BLD",5605,"KRN",101,"NM",12,0)
IBCEMC SELECT & DESELECT MESSAGES^^0
"BLD",5605,"KRN",101,"NM",14,0)
IBCE PRVNVA PROVINFO^^0
"BLD",5605,"KRN",101,"NM",15,0)
IBCE PRVNVA NONIND MAINT^^0
"BLD",5605,"KRN",101,"NM",16,0)
IBCE 2ND PRVCARE ADD^^0
"BLD",5605,"KRN",101,"NM",17,0)
IBCE 2ND PRVCARE EDIT^^0
"BLD",5605,"KRN",101,"NM",18,0)
IBCE 2ND PRVCARE MENU^^0
"BLD",5605,"KRN",101,"NM",19,0)
IBCE EXIT^^0
"BLD",5605,"KRN",101,"NM",20,0)
IBCNSC INS CO ASSOCIATION^^0
"BLD",5605,"KRN",101,"NM",21,0)
IBCNSC INS CO PAYER^^0
"BLD",5605,"KRN",101,"NM",22,0)
IBCNSC INS CO REMARKS^^0
"BLD",5605,"KRN",101,"NM",23,0)
IBCNSC INS CO SYNONYMS^^0
"BLD",5605,"KRN",101,"NM",24,0)
IBCNSC INSURANCE CO^^2
"BLD",5605,"KRN",101,"NM",25,0)
IBCNSC PROVIDER ID PARAMETERS^^0
"BLD",5605,"KRN",101,"NM",26,0)
IBCNSL EXIT^^0
"BLD",5605,"KRN",101,"NM",27,0)
IBCNSL LINK^^0
"BLD",5605,"KRN",101,"NM",28,0)
IBCNSL MENU^^0
"BLD",5605,"KRN",101,"NM",29,0)
IBCNSL UNLINK^^0
"BLD",5605,"KRN",101,"NM",30,0)
IBCE VIEW PREV TRANS^^0
"BLD",5605,"KRN",101,"NM",31,0)
IBCE VIEW PREV TRANS BTCH SEL^^0
"BLD",5605,"KRN",101,"NM",32,0)
IBCE VIEW PREV TRANS EXIT^^0
"BLD",5605,"KRN",101,"NM",33,0)
IBCE VIEW PREV TRANS REPORT^^0
"BLD",5605,"KRN",101,"NM",34,0)
IBCE VIEW PREV TRANS RESUB^^0
"BLD",5605,"KRN",101,"NM",35,0)
IBCE VIEW PREV TRANS SELECT^^0
"BLD",5605,"KRN",101,"NM",36,0)
IBCE PRVNVA LOF ADD^^0
"BLD",5605,"KRN",101,"NM",37,0)
IBCE PRVNVA LOF EDIT^^0
"BLD",5605,"KRN",101,"NM",38,0)
IBCE PRVNVA LOF DELETE^^0
"BLD",5605,"KRN",101,"NM",39,0)
IBCE PRVNVA LOF MAINT^^0
"BLD",5605,"KRN",101,"NM",40,0)
IBCE PRVNUM ADD^^0
"BLD",5605,"KRN",101,"NM",41,0)
IBCE PRVNUM DELETE^^0
"BLD",5605,"KRN",101,"NM",42,0)
IBCE PRVNUM EXIT^^0
"BLD",5605,"KRN",101,"NM",43,0)
IBCE PRVNUM EDIT^^0
"BLD",5605,"KRN",101,"NM",45,0)
IBCE 2ND PRVCARE DELETE^^0
"BLD",5605,"KRN",101,"NM",47,0)
IBCE PRVINS ID^^3
"BLD",5605,"KRN",101,"NM",48,0)
IBCE PRVINS MAINT^^0
"BLD",5605,"KRN",101,"NM",49,0)
IBCE PRVFAC ADD^^0
"BLD",5605,"KRN",101,"NM",50,0)
IBCE PRVFAC ADDIDS MAINT^^0
"BLD",5605,"KRN",101,"NM",51,0)
IBCE PRVFAC ADDITIONAL IDS^^0
"BLD",5605,"KRN",101,"NM",52,0)
IBCE PRVFAC DEL^^0
"BLD",5605,"KRN",101,"NM",53,0)
IBCE PRVFAC EDIT^^0
"BLD",5605,"KRN",101,"NM",54,0)
IBCE PRVFAC IDPARAM^^0
"BLD",5605,"KRN",101,"NM",55,0)
IBCE PRVFAC MAINT^^0
"BLD",5605,"KRN",101,"NM",56,0)
IBCE PRVFAC VALF MAINT^^0
"BLD",5605,"KRN",101,"NM",57,0)
IBCE PRVFAC VALFIDS^^0
"BLD",5605,"KRN",101,"NM",58,0)
IBCE PRVINS DISPLAY PARAMS^^0
"BLD",5605,"KRN",101,"NM",59,0)
IBCE INSCO BILL PROV MAINT ADD^^0
"BLD",5605,"KRN",101,"NM",60,0)
IBCE INSCO BILL PROV MAINT DEL^^0
"BLD",5605,"KRN",101,"NM",61,0)
IBCE INSCO BILL PROV MAINT MENU^^0
"BLD",5605,"KRN",101,"NM",62,0)
IBCE INSCO ID MAINT BILL PROV^^0
"BLD",5605,"KRN",101,"NM",63,0)
IBCE INSCO ID MAINT EDIT PARAMS^^0
"BLD",5605,"KRN",101,"NM",64,0)
IBCE INSCO ID MAINT MENU^^0
"BLD",5605,"KRN",101,"NM",65,0)
IBCE PRVNVA SECIDS^^0
"BLD",5605,"KRN",101,"NM","B","IBCE 2ND PRVCARE ADD",16)

"BLD",5605,"KRN",101,"NM","B","IBCE 2ND PRVCARE DELETE",45)

"BLD",5605,"KRN",101,"NM","B","IBCE 2ND PRVCARE EDIT",17)

"BLD",5605,"KRN",101,"NM","B","IBCE 2ND PRVCARE MENU",18)

"BLD",5605,"KRN",101,"NM","B","IBCE EXIT",19)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO BILL PROV MAINT ADD",59)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO BILL PROV MAINT DEL",60)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO BILL PROV MAINT MENU",61)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO ID MAINT BILL PROV",62)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO ID MAINT EDIT PARAMS",63)

"BLD",5605,"KRN",101,"NM","B","IBCE INSCO ID MAINT MENU",64)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC ADD",49)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC ADDIDS MAINT",50)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC ADDITIONAL IDS",51)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC DEL",52)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC EDIT",53)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC IDPARAM",54)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC MAINT",55)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC VALF MAINT",56)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVFAC VALFIDS",57)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVINS DISPLAY PARAMS",58)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVINS ID",47)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVINS MAINT",48)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNUM ADD",40)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNUM DELETE",41)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNUM EDIT",43)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNUM EXIT",42)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA LOF ADD",36)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA LOF DELETE",38)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA LOF EDIT",37)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA LOF MAINT",39)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA NONIND MAINT",15)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA PROVINFO",14)

"BLD",5605,"KRN",101,"NM","B","IBCE PRVNVA SECIDS",65)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS",30)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS BTCH SEL",31)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS EXIT",32)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS REPORT",33)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS RESUB",34)

"BLD",5605,"KRN",101,"NM","B","IBCE VIEW PREV TRANS SELECT",35)

"BLD",5605,"KRN",101,"NM","B","IBCEM CLAIMS STATUS AWAITING",2)

"BLD",5605,"KRN",101,"NM","B","IBCEM CSA MSG MAN",3)

"BLD",5605,"KRN",101,"NM","B","IBCEM CSA RE-SORT MESSAGES",1)

"BLD",5605,"KRN",101,"NM","B","IBCEMC CANCEL",4)

"BLD",5605,"KRN",101,"NM","B","IBCEMC CHANGE MESSAGE SEARCH CRITERIA",5)

"BLD",5605,"KRN",101,"NM","B","IBCEMC COMMENT",6)

"BLD",5605,"KRN",101,"NM","B","IBCEMC EXIT",7)

"BLD",5605,"KRN",101,"NM","B","IBCEMC MENU",8)

"BLD",5605,"KRN",101,"NM","B","IBCEMC PRINT",9)

"BLD",5605,"KRN",101,"NM","B","IBCEMC RETRANSMIT",10)

"BLD",5605,"KRN",101,"NM","B","IBCEMC REVIEW STATUS",11)

"BLD",5605,"KRN",101,"NM","B","IBCEMC SELECT & DESELECT MESSAGES",12)

"BLD",5605,"KRN",101,"NM","B","IBCNSC INS CO ASSOCIATION",20)

"BLD",5605,"KRN",101,"NM","B","IBCNSC INS CO PAYER",21)

"BLD",5605,"KRN",101,"NM","B","IBCNSC INS CO REMARKS",22)

"BLD",5605,"KRN",101,"NM","B","IBCNSC INS CO SYNONYMS",23)

"BLD",5605,"KRN",101,"NM","B","IBCNSC INSURANCE CO",24)

"BLD",5605,"KRN",101,"NM","B","IBCNSC PROVIDER ID PARAMETERS",25)

"BLD",5605,"KRN",101,"NM","B","IBCNSL EXIT",26)

"BLD",5605,"KRN",101,"NM","B","IBCNSL LINK",27)

"BLD",5605,"KRN",101,"NM","B","IBCNSL MENU",28)

"BLD",5605,"KRN",101,"NM","B","IBCNSL UNLINK",29)

"BLD",5605,"KRN",409.61,0)
409.61
"BLD",5605,"KRN",409.61,"NM",0)
^9.68A^13^13
"BLD",5605,"KRN",409.61,"NM",1,0)
IBCEM CSA LIST^^0
"BLD",5605,"KRN",409.61,"NM",2,0)
IBCEM CSA MSG^^0
"BLD",5605,"KRN",409.61,"NM",3,0)
IBCEMC MCS MESSAGE LIST^^0
"BLD",5605,"KRN",409.61,"NM",4,0)
IBCE PRVMAINT^^0
"BLD",5605,"KRN",409.61,"NM",5,0)
IBCE PRVNVA MAINT^^0
"BLD",5605,"KRN",409.61,"NM",6,0)
IBCE 2ND PRVID CARE UNIT MAINT^^0
"BLD",5605,"KRN",409.61,"NM",7,0)
IBCNS ASSOCIATIONS LIST^^0
"BLD",5605,"KRN",409.61,"NM",8,0)
IBCE VIEW PREV TRANS1^^0
"BLD",5605,"KRN",409.61,"NM",9,0)
IBCE VIEW PREV TRANS2^^0
"BLD",5605,"KRN",409.61,"NM",10,0)
IBCE PRVPRV MAINT^^0
"BLD",5605,"KRN",409.61,"NM",11,0)
IBCE PRVFAC MAINT^^0
"BLD",5605,"KRN",409.61,"NM",12,0)
IBCE INSCO ID MAINT^^0
"BLD",5605,"KRN",409.61,"NM",13,0)
IBCE INSCO BILL PROV MAINT^^0
"BLD",5605,"KRN",409.61,"NM","B","IBCE 2ND PRVID CARE UNIT MAINT",6)

"BLD",5605,"KRN",409.61,"NM","B","IBCE INSCO BILL PROV MAINT",13)

"BLD",5605,"KRN",409.61,"NM","B","IBCE INSCO ID MAINT",12)

"BLD",5605,"KRN",409.61,"NM","B","IBCE PRVFAC MAINT",11)

"BLD",5605,"KRN",409.61,"NM","B","IBCE PRVMAINT",4)

"BLD",5605,"KRN",409.61,"NM","B","IBCE PRVNVA MAINT",5)

"BLD",5605,"KRN",409.61,"NM","B","IBCE PRVPRV MAINT",10)

"BLD",5605,"KRN",409.61,"NM","B","IBCE VIEW PREV TRANS1",8)

"BLD",5605,"KRN",409.61,"NM","B","IBCE VIEW PREV TRANS2",9)

"BLD",5605,"KRN",409.61,"NM","B","IBCEM CSA LIST",1)

"BLD",5605,"KRN",409.61,"NM","B","IBCEM CSA MSG",2)

"BLD",5605,"KRN",409.61,"NM","B","IBCEMC MCS MESSAGE LIST",3)

"BLD",5605,"KRN",409.61,"NM","B","IBCNS ASSOCIATIONS LIST",7)

"BLD",5605,"KRN",771,0)
771
"BLD",5605,"KRN",771,"NM",0)
^9.68A^^
"BLD",5605,"KRN",870,0)
870
"BLD",5605,"KRN",870,"NM",0)
^9.68A^^
"BLD",5605,"KRN",8989.51,0)
8989.51
"BLD",5605,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",5605,"KRN",8989.52,0)
8989.52
"BLD",5605,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",5605,"KRN",8994,0)
8994
"BLD",5605,"KRN",8994,"NM",0)
^9.68A^^
"BLD",5605,"KRN","B",.4,.4)

"BLD",5605,"KRN","B",.401,.401)

"BLD",5605,"KRN","B",.402,.402)

"BLD",5605,"KRN","B",.403,.403)

"BLD",5605,"KRN","B",.5,.5)

"BLD",5605,"KRN","B",.84,.84)

"BLD",5605,"KRN","B",3.6,3.6)

"BLD",5605,"KRN","B",3.8,3.8)

"BLD",5605,"KRN","B",9.2,9.2)

"BLD",5605,"KRN","B",9.8,9.8)

"BLD",5605,"KRN","B",19,19)

"BLD",5605,"KRN","B",19.1,19.1)

"BLD",5605,"KRN","B",101,101)

"BLD",5605,"KRN","B",409.61,409.61)

"BLD",5605,"KRN","B",771,771)

"BLD",5605,"KRN","B",870,870)

"BLD",5605,"KRN","B",8989.51,8989.51)

"BLD",5605,"KRN","B",8989.52,8989.52)

"BLD",5605,"KRN","B",8994,8994)

"BLD",5605,"QUES",0)
^9.62^^
"BLD",5605,"REQB",0)
^9.611^10^10
"BLD",5605,"REQB",1,0)
IB*2.0*296^2
"BLD",5605,"REQB",2,0)
XU*8.0*390^2
"BLD",5605,"REQB",3,0)
IB*2.0*323^2
"BLD",5605,"REQB",4,0)
IB*2.0*291^2
"BLD",5605,"REQB",5,0)
IB*2.0*288^2
"BLD",5605,"REQB",6,0)
IB*2.0*200^2
"BLD",5605,"REQB",7,0)
IB*2.0*309^2
"BLD",5605,"REQB",8,0)
IB*2.0*159^2
"BLD",5605,"REQB",9,0)
XU*8.0*394^2
"BLD",5605,"REQB",10,0)
IB*2.0*276^2
"BLD",5605,"REQB","B","IB*2.0*159",8)

"BLD",5605,"REQB","B","IB*2.0*200",6)

"BLD",5605,"REQB","B","IB*2.0*276",10)

"BLD",5605,"REQB","B","IB*2.0*288",5)

"BLD",5605,"REQB","B","IB*2.0*291",4)

"BLD",5605,"REQB","B","IB*2.0*296",1)

"BLD",5605,"REQB","B","IB*2.0*309",7)

"BLD",5605,"REQB","B","IB*2.0*323",3)

"BLD",5605,"REQB","B","XU*8.0*390",2)

"BLD",5605,"REQB","B","XU*8.0*394",9)

"DATA",350.8,269,0)
IB303^Attending/rendering provider name is missing^IB303^1^3
"DATA",350.8,309,0)
IB235^Medicare claims for laboratory services require a CLIA #.^IB235^1^1
"DATA",350.8,310,0)
IB236^Required attending/rendering provider ID missing from Primary Insurance^IB236^1^1
"DATA",350.8,311,0)
IB239^Required referring provider ID missing from Primary Insurance^IB239^1^1
"DATA",350.8,312,0)
IB237^Required attending/rendering provider ID missing from Secondary Insurance^IB237^1^1
"DATA",350.8,313,0)
IB238^Required attending/rendering provider ID missing from Tertiary Insurance^IB238^1^1
"DATA",350.8,314,0)
IB240^Required referring provider ID missing from Secondary Insurance^IB240^1^1
"DATA",350.8,315,0)
IB241^Required referring provider ID missing from Tertiary Insurance^IB241^1^1
"DATA",350.8,316,0)
IB242^Referring provider name missing^IB242^1^1
"DATA",350.8,317,0)
IB243^No Lab or Facility Primary ID defined for the outside facility^IB243^1^1
"DATA",350.8,318,0)
IB244^No Billing Prov ID for primary payer.  Enter an Att/Rend ID to be used.^IB244^1^1
"DATA",350.8,319,0)
IB245^No Billing Prov ID for secondary payer.  Enter an Att/Rend ID to be used.^IB245
"DATA",350.8,320,0)
IB246^No Billing Prov ID for tertiary payer.  Enter an Att/Rend ID to be used.^IB246^1^1
"DATA",361.2,70,0)
R0S2^1^PRF GVT WEBMD/PAYER INFO/EDIT
"DATA",364.5,111,0)
N-MAMMOGRAPHY CERT#^N^F^I^399^MAMMOGRAPHY CERT NUMBER^I^
"DATA",364.5,111,1)

"DATA",364.5,111,3,0)
^^2^2^3060116^
"DATA",364.5,111,3,1,0)
Data element used to retrieve the mammography certification number for 
"DATA",364.5,111,3,2,0)
the claim.
"DATA",364.5,112,0)
N-LAB CLIA NUMBER^N^F^I^399^LAB CLIA NUMBER^E^
"DATA",364.5,112,1)

"DATA",364.5,112,3,0)
^364.53^2^2^3060111^^
"DATA",364.5,112,3,1,0)
This CLIA# data element replaces IEN 271 for SUB-8 processing.
"DATA",364.5,112,3,2,0)
Just retrieve the CLIA# from field 235 in file 399.
"DATA",364.5,113,0)
N-LAB OR FACILITY PRIMARY ID^N^E^I^399^^^
"DATA",364.5,113,1)
S IBXDATA=$$EIN^IBCEP8A(IBXIEN)
"DATA",364.5,113,3,0)
^^3^3^3060116^
"DATA",364.5,113,3,1,0)
This data element is the Federal tax ID for either the VA facility or the 
"DATA",364.5,113,3,2,0)
non-VA facility.  Used for 837 flat file SUB-9.  Also used as the data 
"DATA",364.5,113,3,3,0)
element for Hcfa-1500, Box 32, Line 4 printed form.
"DATA",364.6,169,0)
8^N^^5^1^^0^4^10^BATCH REFERENCE #^^1^0
"DATA",364.6,226,0)
8^N^^28^1^^0^2^2^BILLING PROV SECONDARY ID Q(1)^0^1^0
"DATA",364.6,227,0)
8^N^^28^1^^0^3^20^BILLING PROV SECONDARY ID #(1)^0^1^0
"DATA",364.6,968,0)
8^N^^15^1^^0^10^15^MOVED TO CI1A-3^0^1^0
"DATA",364.6,971,0)
8^N^^55^1^^0^9^10^LAB OR FACILITY PRIMARY ID^0^1
"DATA",364.6,1015,0)
8^N^^28^1^^0^6^2^BILLING PROV SECONDARY ID Q(3)^0^1
"DATA",364.6,1051,0)
8^N^^51^1^^0^9^2^MAMMOGRAPHY CERT# QUALIFIER^0^1^0
"DATA",364.6,1065,0)
8^N^^105^1^0^0^18^1^OTHER INS PAT SIG SOURCE CODE^0^1^0
"DATA",364.6,1094,0)
8^N^^28^1^^0^7^20^BILLING PROV SECONDARY ID #(3)^0^1
"DATA",364.6,1095,0)
8^N^^28^1^^0^8^2^BILLING PROV SECONDARY ID Q(4)^0^1
"DATA",364.6,1096,0)
8^N^^28^1^^0^9^20^BILLING PROV SECONDARY ID #(4)^0^1
"DATA",364.6,1097,0)
8^N^^28^1^^0^10^2^BILLING PROV SECONDARY ID Q(5)^0^1
"DATA",364.6,1098,0)
8^N^^28^1^^0^11^20^BILLING PROV SECONDARY ID #(5)^0^1
"DATA",364.6,1099,0)
8^N^^28^1^^0^12^2^BILLING PROV SECONDARY ID Q(6)^0^1
"DATA",364.6,1100,0)
8^N^^28^1^^0^13^20^BILLING PROV SECONDARY ID #(6)^0^1
"DATA",364.6,1101,0)
8^N^^28^1^^0^14^2^BILLING PROV SECONDARY ID Q(7)^0^1
"DATA",364.6,1102,0)
8^N^^28^1^^0^15^20^BILLING PROV SECONDARY ID #(7)^^1
"DATA",364.6,1103,0)
8^N^^28^1^^0^16^2^BILLING PROV SECONDARY ID Q(8)^0^1
"DATA",364.6,1104,0)
8^N^^28^1^^0^17^20^BILLING PROV SECONDARY ID #(8)^0^1
"DATA",364.6,1190,0)
8^N^^28^1^^0^1^4^RECORD ID 'CI1A'^0^1^1
"DATA",364.6,1191,0)
8^N^^28^1^^0^4^2^BILLING PROV SECONDARY ID Q(2)^0^1
"DATA",364.6,1192,0)
8^N^^28^1^^0^5^20^BILLING PROV SECONDARY ID #(2)^0^1^0
"DATA",364.6,1289,0)
8^N^^113^1^^0^4^45^OTH INS SUBSCR ADDRESS LINE 1^0^1
"DATA",364.6,1316,0)
8^N^^20^1^^0^7^20^CURRENT INS CO PROVIDER NUMBER^0^1
"DATA",364.6,1317,0)
8^N^^20^1^1^^13^2^FILLER^0^1
"DATA",364.7,12,0)
1015^N^5^^^^N
"DATA",364.7,12,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,3)),U,1)
"DATA",364.7,12,3,0)
^364.73^7^7^3041202^^^^
"DATA",364.7,12,3,1,0)
EI=Employer ID;SY=Social Security Number;0B=State License Number;
"DATA",364.7,12,3,2,0)
1A = Blue Cross Number;1B=Blue Shield Number;1C=Medicare Number;
"DATA",364.7,12,3,3,0)
1D = Medicaid Number;1G=UPIN Number;1H=TRICARE ID Number;
"DATA",364.7,12,3,4,0)
B3 = PPO Number;BQ=HMO Code Number;U3=USIN Number;G2=Commercial Number;
"DATA",364.7,12,3,5,0)
FH = Clinic Number;X5=State Industrial Accident Provider Number;
"DATA",364.7,12,3,6,0)
LU=Location Number
"DATA",364.7,12,3,7,0)
This is the X12 interpretation of the type of billing provider id for this insurance co.  It is calculated from the electronic type of plan. Refer to the 837 V4010 (professional) fields 2010BB/REF(2)/01 and 2000B/SBR/09 for details.
"DATA",364.7,156,0)
170^N^275^^^^N
"DATA",364.7,156,1)
N A,Z,Q S Q=IBXDATA,A=$P(Q,U,2),Z=$S(+Q=+$P($G(^IBE(350.9,1,0)),U,2):A'=1,1:0) K:'Q IBXDATA I $D(IBXDATA) S IBXSAVE("IBFAC")=Q,IBXDATA=$$GETFAC^IBCEP8(+IBXDATA,+A,0,"SUB")
"DATA",364.7,156,3,0)
^364.73^3^3^3041221^^^^
"DATA",364.7,156,3,1,0)
This returns the name of the INSTITUTION file entry for the non-VA or
"DATA",364.7,156,3,2,0)
remote site where care was rendered.  Save the ien and flag in 
"DATA",364.7,156,3,3,0)
IBXSAVE("IBFAC") for later use.
"DATA",364.7,157,0)
171^N^5^^^^N
"DATA",364.7,157,1)
K IBXSAVE("PSVC") K:'$G(IBXSAVE("IBFAC"))&'$P($G(IBXSAVE("IBFAC")),U,3) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("IBFAC"),+$P(IBXSAVE("IBFAC"),U,2),12,"SUB")
"DATA",364.7,157,3,0)
^364.73^3^3^3041217^^^^
"DATA",364.7,157,3,1,0)
Extract the street address for the rendering facility.  Relies on the
"DATA",364.7,157,3,2,0)
existence of the array IBXSAVE("IBFAC") extracted previously by the
"DATA",364.7,157,3,3,0)
rendering facility name field.
"DATA",364.7,159,0)
173^N^5^^^^N
"DATA",364.7,159,1)
K:'$G(IBXSAVE("IBFAC"))&'$P($G(IBXSAVE("IBFAC")),U,3) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("IBFAC"),+$P(IBXSAVE("IBFAC"),U,2),"3S","SUB")
"DATA",364.7,159,3,0)
^364.73^3^3^3041217^^^^
"DATA",364.7,159,3,1,0)
Extract the state abbreviation for the rendering facility.  Relies on the
"DATA",364.7,159,3,2,0)
existence of the array IBXSAVE("IBFAC") extracted previously by the
"DATA",364.7,159,3,3,0)
rendering facility name field.
"DATA",364.7,160,0)
174^N^5^^^^N
"DATA",364.7,160,1)
K:'$G(IBXSAVE("IBFAC"))&'$P($G(IBXSAVE("IBFAC")),U,3) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("IBFAC"),+$P(IBXSAVE("IBFAC"),U,2),"3Z","SUB")
"DATA",364.7,160,3,0)
^^3^3^3030827^^^^
"DATA",364.7,160,3,1,0)
Extract the zip code for the rendering facility.  Relies on the
"DATA",364.7,160,3,2,0)
existence of the array IBXSAVE("IBFAC") extracted previously by the
"DATA",364.7,160,3,3,0)
rendering facility name field.
"DATA",364.7,188,0)
195^N^5^^^^N
"DATA",364.7,188,1)
D CLEANUP^IBCEF75(.IBXSAVE) D ALLIDS^IBCEF75(IBXIEN,.IBXSAVE,1) K IBXDATA N Z F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"O",Z,2)),U,2)
"DATA",364.7,188,3,0)
^364.73^3^3^3060420^^^^
"DATA",364.7,188,3,1,0)
This is a group data element so more than 1 occurrence of a value is
"DATA",364.7,188,3,2,0)
possible for the data element in the IBXDATA array.  If any other insurance
"DATA",364.7,188,3,3,0)
provider # data is found, the data is output.
"DATA",364.7,196,0)
1036^N^111^^^^N^0
"DATA",364.7,196,1)
I $G(IBXDATA)'="" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA),IBXSAVE("MAMMO")=1
"DATA",364.7,196,3,0)
^^3^3^3060117^
"DATA",364.7,196,3,1,0)
Extract and format the mammo# cert number from the claim.  If a mammo# is 
"DATA",364.7,196,3,2,0)
present for the claim then save that fact in IBXSAVE for later usage for 
"DATA",364.7,196,3,3,0)
the mammo# qualifier field.
"DATA",364.7,203,0)
1039^N^5^^^^N^0
"DATA",364.7,203,1)
K:'$G(IBXSAVE("IBFAC"))&'$P($G(IBXSAVE("IBFAC")),U,3) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("IBFAC"),+$P(IBXSAVE("IBFAC"),U,2),2,"SUB")
"DATA",364.7,203,3,0)
^364.73^1^1^3041221^^^^
"DATA",364.7,203,3,1,0)
RENDERING PROVIDER FACILITY INFORMATION TO FIND THE SERVICE FACILITY ADDRESS LINE 2
"DATA",364.7,204,0)
1040^N^5^^^^N^0
"DATA",364.7,204,1)
D CLEANUP^IBCEF75(.IBXSAVE) D:$$SUB1OK^IBCEP8A(IBXIEN) ALLIDS^IBCEF75(IBXIEN,.IBXSAVE,1,"SUB1") S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,1)),U,1)
"DATA",364.7,204,3,0)
^364.73^12^12^3060320^^^^
"DATA",364.7,204,3,1,0)
If the bill is a professional bill, was performed at an 'outside' facility,
"DATA",364.7,204,3,2,0)
and the service was purchased THEN
"DATA",364.7,204,3,3,0)
   If the rendering provider is an outside provider:
"DATA",364.7,204,3,4,0)
      output the ids for the rendering provider here.
"DATA",364.7,204,3,5,0)
   If the rendering provider is NOT an outside provider:
"DATA",364.7,204,3,6,0)
      output the ids for the outside facility here.
"DATA",364.7,204,3,7,0)
Output if an ID exists for the 'current insurance'.  Must save the type
"DATA",364.7,204,3,8,0)
of provider (1 = person or 2 = facility) whose ids were extracted in
"DATA",364.7,204,3,9,0)
variable IBXSAVE("NVF") to be used later in this record.  It must be
"DATA",364.7,204,3,10,0)
killed in the last piece of the record.
"DATA",364.7,204,3,11,0)
The ids returned are screened for valid id qualifiers for the SUB1 record.
"DATA",364.7,204,3,12,0)
Output the first other id qualifier for the current insurance.
"DATA",364.7,208,0)
1044^N^5^^^^N^0
"DATA",364.7,208,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,1)),U,1)
"DATA",364.7,208,3,0)
^364.73^2^2^3041221^^^^
"DATA",364.7,208,3,1,0)
The ids returned are screened for valid id qualifiers for the SUB2 record.
"DATA",364.7,208,3,2,0)
Output the first 'other' id qualifier.
"DATA",364.7,209,0)
1045^N^5^^^^N^0
"DATA",364.7,209,1)
D CLEANUP^IBCEF75(.IBXSAVE) D ALLIDS^IBCEF75(IBXIEN,.IBXSAVE,1) S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,0)),U,1)
"DATA",364.7,209,3,0)
^364.73^2^2^3041221^^^^
"DATA",364.7,209,3,1,0)
Save the actual id in IBXSAVE("EIN") and output the tax id qualifier here
"DATA",364.7,209,3,2,0)
if id was found.
"DATA",364.7,211,0)
1046^N^5^^^^N^0
"DATA",364.7,211,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,0)),U,2)
"DATA",364.7,211,3,0)
^364.73^2^2^3041221^^^^
"DATA",364.7,211,3,1,0)
If the tax id for the outside facility exists, output it here and kill
"DATA",364.7,211,3,2,0)
IBXSAVE("EIN") to clean up.
"DATA",364.7,225,0)
1051^N^5^^^^N
"DATA",364.7,225,1)
S IBXDATA="" I $G(IBXSAVE("MAMMO")) S IBXDATA="EW" K IBXSAVE("MAMMO")
"DATA",364.7,225,3,0)
^^3^3^3060124^
"DATA",364.7,225,3,1,0)
This is the mammography certification number qualifier in CL1A-9.  If 
"DATA",364.7,225,3,2,0)
there is a mammo cert number on the claim and transmitted in CL1A-6 then 
"DATA",364.7,225,3,3,0)
this field will be sent as "EW".
"DATA",364.7,226,0)
226^N^5^^^^N
"DATA",364.7,226,1)
D CLEANUP^IBCEF75(.IBXSAVE) D ALLIDS^IBCEF75(IBXIEN,.IBXSAVE,1) S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,1)),U,1)
"DATA",364.7,226,3,0)
^^1^1^3060124^
"DATA",364.7,226,3,1,0)
CI1A-2 site suffix or facility ID qualifier.  This is hard-coded to be G5.
"DATA",364.7,227,0)
227^N^5^^^^N
"DATA",364.7,227,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,1)),U,2)
"DATA",364.7,227,3,0)
^^4^4^3060125^
"DATA",364.7,227,3,1,0)
Always output 4 characters containing the site suffix padded on the left 
"DATA",364.7,227,3,2,0)
by 0's if necessary.  
"DATA",364.7,227,3,3,0)
Examples:  For station# 528, this field is sent as "0000"
"DATA",364.7,227,3,4,0)
           For station# 605GC, this field is sent as "00GC"
"DATA",364.7,256,0)
1065^N^5^^^^N^0
"DATA",364.7,256,1)
N Z K IBXDATA F Z=1,2 I $D(^DGCR(399,IBXIEN,"I"_(Z+1))) S IBXDATA(Z)="B"
"DATA",364.7,256,3,0)
^^3^3^3060217^
"DATA",364.7,256,3,1,0)
Other insurance patient signature source code.  2320/OI/04.
"DATA",364.7,256,3,2,0)
This is group data element for the other insurances.  Currently, hard 
"DATA",364.7,256,3,3,0)
code a "B" for all other insurances.
"DATA",364.7,375,0)
1094^N^5^^^^N
"DATA",364.7,375,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,3)),U,2)
"DATA",364.7,375,3,0)
^364.73^2^2^3041202^^^^
"DATA",364.7,375,3,1,0)
Extract the 364.5 definition into an array. Then use piece 1, Blue Cross 
"DATA",364.7,375,3,2,0)
Number for 8,16 piece 3.. The array will be used for the remaining pieces.
"DATA",364.7,376,0)
1095^N^5^^^^N
"DATA",364.7,376,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,4)),U,1)
"DATA",364.7,377,0)
1096^N^5^^^^N
"DATA",364.7,377,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,4)),U,2)
"DATA",364.7,378,0)
1097^N^5^^^^N
"DATA",364.7,378,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,5)),U,1)
"DATA",364.7,379,0)
1098^N^5^^^^N
"DATA",364.7,379,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,5)),U,2)
"DATA",364.7,380,0)
1099^N^5^^^^N
"DATA",364.7,380,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,6)),U,1)
"DATA",364.7,381,0)
1100^N^5^^^^N
"DATA",364.7,381,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,6)),U,2)
"DATA",364.7,382,0)
1101^N^5^^^^N
"DATA",364.7,382,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,7)),U,1)
"DATA",364.7,383,0)
1102^N^5^^^^N
"DATA",364.7,383,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,7)),U,2)
"DATA",364.7,384,0)
1103^N^5^^^^N
"DATA",364.7,384,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,8)),U,1)
"DATA",364.7,385,0)
1104^N^5^^^^N
"DATA",364.7,385,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,8)),U,2) D CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,385,3,0)
^364.73^1^1^3031210^^^^
"DATA",364.7,385,3,1,0)
If header data has already been extracted, array ^TMP("IBHDR1",$J) will already exist.  Don't want to extract this field again, so kill data element so there is no output.
"DATA",364.7,387,0)
1190^N^131^^^^N
"DATA",364.7,387,1)
S IBXDATA="CI1A"
"DATA",364.7,387,3,0)
^^4^4^3060124^
"DATA",364.7,387,3,1,0)
Record ID CI1A (Sequence# 28) piece 1.  Hard code "CI1A" as the 
"DATA",364.7,387,3,2,0)
first piece.
"DATA",364.7,387,3,3,0)
IB patch 320 - the CI1A segment is a new segment basically replacing the 
"DATA",364.7,387,3,4,0)
PRV1 segment.  Billing provider secondary ID's.
"DATA",364.7,388,0)
1192^N^5^^^^N
"DATA",364.7,388,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,2)),U,2)
"DATA",364.7,388,3,0)
^364.73^2^2^3041202^^^^
"DATA",364.7,388,3,1,0)
Provider number for the current insurance company for bill entry 
"DATA",364.7,388,3,2,0)
IBXIEN.
"DATA",364.7,389,0)
1191^N^5^^^^N
"DATA",364.7,389,1)
S IBXDATA=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"C",1,2)),U,1)
"DATA",364.7,389,3,0)
^364.73^4^4^3041202^^^^
"DATA",364.7,389,3,1,0)
Kept N-CURRENT INS POLICY TYPE because didn't want to touch previous logic 
"DATA",364.7,389,3,2,0)
that may set array or TMP.
"DATA",364.7,389,3,3,0)
the format code sets array to string with QUALIF and ID for the first 
"DATA",364.7,389,3,4,0)
seven insurances in file #355.97 except some.
"DATA",364.7,390,0)
172^N^5^^^^N
"DATA",364.7,390,1)
K:'$G(IBXSAVE("IBFAC"))&'$P($G(IBXSAVE("IBFAC")),U,3) IBXDATA I $D(IBXDATA) S IBXDATA=$$GETFAC^IBCEP8(+IBXSAVE("IBFAC"),+$P(IBXSAVE("IBFAC"),U,2),"3C","SUB"),IBXDATA=$TR(IBXDATA,"-/.,()'","  ")
"DATA",364.7,390,3,0)
^^3^3^3040901^
"DATA",364.7,390,3,1,0)
Extract the city for the rendering facility.  Relies on the
"DATA",364.7,390,3,2,0)
existence of the array IBXSAVE("IBFAC") extracted previously by the
"DATA",364.7,390,3,3,0)
rendering facility name field.
"DATA",364.7,392,0)
1195^N^5^^^^N
"DATA",364.7,392,1)
S IBXDATA="" I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=24
"DATA",364.7,392,3,0)
^^2^2^3060303^
"DATA",364.7,392,3,1,0)
For purchased services, must pass checks in $$SUB1OK.  If true, then 
"DATA",364.7,392,3,2,0)
always 24 qualifer.
"DATA",364.7,393,0)
1196^N^5^^^^N
"DATA",364.7,393,1)
S IBXDATA="" I $$SUB1OK^IBCEP8A(IBXIEN) S IBXDATA=2
"DATA",364.7,393,3,0)
^^2^2^3060303^
"DATA",364.7,393,3,1,0)
For purchased services must pass checks in $$SUB1OK.  If true, this is 
"DATA",364.7,393,3,2,0)
always a "2" for non-person.
"DATA",364.7,395,0)
1198^N^5^^^^N
"DATA",364.7,395,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,1)),U,2)
"DATA",364.7,395,3,0)
^364.73^1^1^3030904^^^^
"DATA",364.7,395,3,1,0)
Output the first other id for the current insurance.
"DATA",364.7,396,0)
1199^N^5^^^^N
"DATA",364.7,396,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,2)),U,1)
"DATA",364.7,396,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,396,3,1,0)
Output the second id qualifier for the current insurance.
"DATA",364.7,397,0)
1200^N^5^^^^N
"DATA",364.7,397,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,2)),U,2)
"DATA",364.7,397,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,397,3,1,0)
Output the second id for the current insurance.
"DATA",364.7,398,0)
1201^N^5^^^^N
"DATA",364.7,398,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,3)),U,1)
"DATA",364.7,398,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,398,3,1,0)
Output the third other id qualifier for the current insurance.
"DATA",364.7,399,0)
1202^N^5^^^^N
"DATA",364.7,399,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,3)),U,2)
"DATA",364.7,399,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,399,3,1,0)
Output the third other id for the current insurance.
"DATA",364.7,400,0)
1203^N^5^^^^N
"DATA",364.7,400,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,4)),U,1)
"DATA",364.7,400,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,400,3,1,0)
Output the fourth other id qualifier for the current insurance.
"DATA",364.7,401,0)
1204^N^5^^^^N
"DATA",364.7,401,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,4)),U,2)
"DATA",364.7,401,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,401,3,1,0)
Output the fourth other id for the current insurance.
"DATA",364.7,402,0)
1205^N^5^^^^N
"DATA",364.7,402,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,5)),U,1)
"DATA",364.7,402,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,402,3,1,0)
Output the fifth other id qualifier for the current insurance.
"DATA",364.7,403,0)
1206^N^5^^^^N
"DATA",364.7,403,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,5)),U,2) D CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,403,3,0)
^364.73^3^3^3030904^^^^
"DATA",364.7,403,3,1,0)
Output the fifth other id for the current insurance.
"DATA",364.7,403,3,2,0)
Kill the IBXSAVE("NVF") and IBXSAVE("PROVINF",IBXIEN) or
"DATA",364.7,403,3,3,0)
IBXSAVE("PROVINF_FAC",IBXIEN) variables to clean up.
"DATA",364.7,405,0)
1209^N^5^^^^N
"DATA",364.7,405,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,1)),U,2)
"DATA",364.7,405,3,0)
^364.73^1^1^3041221^^^^
"DATA",364.7,405,3,1,0)
Output the first 'other' id.
"DATA",364.7,406,0)
1210^N^5^^^^N
"DATA",364.7,406,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,2)),U,1)
"DATA",364.7,406,3,0)
^364.73^1^1^3041221^^^^
"DATA",364.7,406,3,1,0)
Output the second 'other' id qualifier.
"DATA",364.7,407,0)
1211^N^5^^^^N
"DATA",364.7,407,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,2)),U,2)
"DATA",364.7,407,3,0)
^364.73^1^1^3030904^^^^
"DATA",364.7,407,3,1,0)
Output the second 'other' id.
"DATA",364.7,408,0)
1212^N^5^^^^N
"DATA",364.7,408,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,3)),U,1)
"DATA",364.7,408,3,0)
^364.73^1^1^3030904^^^^
"DATA",364.7,408,3,1,0)
Output the third 'other' id qualifier.
"DATA",364.7,409,0)
1213^N^5^^^^N
"DATA",364.7,409,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,3)),U,2)
"DATA",364.7,409,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,409,3,1,0)
Output the third 'other' id.
"DATA",364.7,410,0)
1214^N^5^^^^N
"DATA",364.7,410,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,4)),U,1)
"DATA",364.7,410,3,0)
^364.73^1^1^3030904^^^^
"DATA",364.7,410,3,1,0)
Output the fourth 'other' id qualifier.
"DATA",364.7,411,0)
1215^N^5^^^^N
"DATA",364.7,411,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,4)),U,2)
"DATA",364.7,411,3,0)
^364.73^1^1^3030904^^^
"DATA",364.7,411,3,1,0)
Output the fourth 'other' id.
"DATA",364.7,412,0)
1216^N^5^^^^N
"DATA",364.7,412,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,5)),U,1)
"DATA",364.7,412,3,0)
^364.73^1^1^3041221^^^^
"DATA",364.7,412,3,1,0)
Output the fifth 'other' id qualifier.
"DATA",364.7,413,0)
1217^N^5^^^^N
"DATA",364.7,413,1)
S IBXDATA=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"C",1,5)),U,2) D CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,413,3,0)
^364.73^2^2^3041221^^^^
"DATA",364.7,413,3,1,0)
Output the fifth 'other' id.
"DATA",364.7,413,3,2,0)
Delete the 'filtered' id array IBXSAVE("PROVINF_FAC",IBXIEN).
"DATA",364.7,552,0)
1128^N^5^^^^N^0
"DATA",364.7,552,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)=2
"DATA",364.7,552,3,0)
^^2^2^3060314^
"DATA",364.7,552,3,1,0)
OP3-4
"DATA",364.7,552,3,2,0)
Hard code "2".
"DATA",364.7,553,0)
1131^N^5^^^^N^0
"DATA",364.7,553,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,1)
"DATA",364.7,553,3,0)
^^2^2^3060314^
"DATA",364.7,553,3,1,0)
OP3-7
"DATA",364.7,553,3,2,0)
Lab/Facility, Other Payer, Qualifier #2
"DATA",364.7,554,0)
1129^N^5^^^^N^0
"DATA",364.7,554,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,1)
"DATA",364.7,554,3,0)
^^2^2^3060314^
"DATA",364.7,554,3,1,0)
OP3-5
"DATA",364.7,554,3,2,0)
Lab/Facility, Other Payer, Qualifier #1
"DATA",364.7,555,0)
1133^N^5^^^^N^0
"DATA",364.7,555,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,1)
"DATA",364.7,555,3,0)
^^2^2^3060314^
"DATA",364.7,555,3,1,0)
OP3-9
"DATA",364.7,555,3,2,0)
Lab/Facility, Other Payer, Qualifier #3
"DATA",364.7,556,0)
1130^N^5^^^^N^0
"DATA",364.7,556,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,2)
"DATA",364.7,556,3,0)
^^2^2^3060314^
"DATA",364.7,556,3,1,0)
OP3-6
"DATA",364.7,556,3,2,0)
Lab/Facility, Other Payer, ID #1
"DATA",364.7,557,0)
1132^N^5^^^^N^0
"DATA",364.7,557,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,2)
"DATA",364.7,557,3,0)
^^2^2^3060314^
"DATA",364.7,557,3,1,0)
OP3-8
"DATA",364.7,557,3,2,0)
Lab/Facility, Other Payer, ID #2
"DATA",364.7,558,0)
1134^N^5^^^^N^0
"DATA",364.7,558,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,2) D:Z=2 CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,558,3,0)
^^3^3^3060314^
"DATA",364.7,558,3,1,0)
OP3-10
"DATA",364.7,558,3,2,0)
Lab/Facility, Other Payer, ID #3
"DATA",364.7,558,3,3,0)
Clean up IBXSAVE array when done with this segment.
"DATA",364.7,559,0)
1127^N^5^^^^N^0
"DATA",364.7,559,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)="FA"
"DATA",364.7,559,3,0)
^^2^2^3060314^
"DATA",364.7,559,3,1,0)
OP3-3
"DATA",364.7,559,3,2,0)
Hard code "FA"
"DATA",364.7,576,0)
1155^N^5^^^^N^0
"DATA",364.7,576,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)=2
"DATA",364.7,576,3,0)
^^2^2^3060314^
"DATA",364.7,576,3,1,0)
Use the IBXSAVE array for all of the other payers and output a 2 for 
"DATA",364.7,576,3,2,0)
facility.
"DATA",364.7,577,0)
1156^N^5^^^^N^0
"DATA",364.7,577,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,1)
"DATA",364.7,577,3,0)
^364.73^2^2^3060314^^
"DATA",364.7,577,3,1,0)
OP6-5
"DATA",364.7,577,3,2,0)
lab/facility, other payer, secondary qualifier #1.
"DATA",364.7,578,0)
1154^N^5^^^^N^0
"DATA",364.7,578,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)="QB"
"DATA",364.7,578,3,0)
^^2^2^3060314^
"DATA",364.7,578,3,1,0)
Use the previously built IBXSAVE array to determine which other 
"DATA",364.7,578,3,2,0)
payers exist for the claim.  Output the qualifier 'QB'.
"DATA",364.7,579,0)
1158^N^5^^^^N^0
"DATA",364.7,579,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,1)
"DATA",364.7,579,3,0)
^364.73^2^2^3060314^^
"DATA",364.7,579,3,1,0)
OP6-7
"DATA",364.7,579,3,2,0)
lab/facility, other payer, secondary qualifier #2.
"DATA",364.7,580,0)
1160^N^5^^^^N^0
"DATA",364.7,580,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,1)
"DATA",364.7,580,3,0)
^^2^2^3060314^
"DATA",364.7,580,3,1,0)
OP6-9
"DATA",364.7,580,3,2,0)
lab/facility, other payer, secondary qualifier #3.
"DATA",364.7,581,0)
1157^N^5^^^^N^0
"DATA",364.7,581,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,2)
"DATA",364.7,581,3,0)
^364.73^2^2^3060314^^
"DATA",364.7,581,3,1,0)
OP6-6
"DATA",364.7,581,3,2,0)
lab/facility, other payer, secondary ID #1.
"DATA",364.7,582,0)
1159^N^5^^^^N^0
"DATA",364.7,582,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,2)
"DATA",364.7,582,3,0)
^^2^2^3060314^
"DATA",364.7,582,3,1,0)
OP6-8
"DATA",364.7,582,3,2,0)
lab/facility, other payer, secondary ID #2.
"DATA",364.7,583,0)
1161^N^5^^^^N^0
"DATA",364.7,583,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,2) D:Z=2 CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,583,3,0)
^^3^3^3060314^
"DATA",364.7,583,3,1,0)
OP6-10
"DATA",364.7,583,3,2,0)
lab/facility, other payer, secondary ID #3.  Clean up IBXSAVE array nodes 
"DATA",364.7,583,3,3,0)
used here.
"DATA",364.7,584,0)
1165^N^5^^^^N^0
"DATA",364.7,584,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,1)
"DATA",364.7,584,3,0)
^^2^2^3060314^
"DATA",364.7,584,3,1,0)
OP7-5
"DATA",364.7,584,3,2,0)
Lab/Facility, Other Payer, Qualifier #1
"DATA",364.7,585,0)
1167^N^5^^^^N^0
"DATA",364.7,585,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,1)
"DATA",364.7,585,3,0)
^^2^2^3060314^
"DATA",364.7,585,3,1,0)
OP7-7
"DATA",364.7,585,3,2,0)
Lab/Facility, Other Payer, Qualifier #2
"DATA",364.7,586,0)
1169^N^5^^^^N^0
"DATA",364.7,586,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,1)
"DATA",364.7,586,3,0)
^^2^2^3060314^
"DATA",364.7,586,3,1,0)
OP7-9
"DATA",364.7,586,3,2,0)
Lab/Facility, Other Payer, Qualifier #3
"DATA",364.7,587,0)
1166^N^5^^^^N^0
"DATA",364.7,587,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,1)),U,2)
"DATA",364.7,587,3,0)
^^2^2^3060314^
"DATA",364.7,587,3,1,0)
OP7-6
"DATA",364.7,587,3,2,0)
Lab/Facility, Other Payer, ID #1
"DATA",364.7,588,0)
1168^N^5^^^^N^0
"DATA",364.7,588,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,2)),U,2)
"DATA",364.7,588,3,0)
^^2^2^3060314^
"DATA",364.7,588,3,1,0)
OP7-8
"DATA",364.7,588,3,2,0)
Lab/Facility, Other Payer, ID #2
"DATA",364.7,589,0)
1170^N^5^^^^N^0
"DATA",364.7,589,1)
N Z K IBXDATA F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,3)),U,2) D:Z=2 CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,589,3,0)
^^3^3^3060314^
"DATA",364.7,589,3,1,0)
OP7-10
"DATA",364.7,589,3,2,0)
Lab/Facility, Other Payer, ID #3
"DATA",364.7,589,3,3,0)
Cleanup array when done with segment.
"DATA",364.7,590,0)
1164^N^5^^^^N^0
"DATA",364.7,590,1)
N Z K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)=2
"DATA",364.7,590,3,0)
^^2^2^3060314^
"DATA",364.7,590,3,1,0)
OP7-4
"DATA",364.7,590,3,2,0)
Default a 2 for non-person.
"DATA",364.7,591,0)
1163^N^5^^^^N^0
"DATA",364.7,591,1)
N Z,NVA,TYP S NVA=+$P($G(^DGCR(399,IBXIEN,"U2")),U,10),TYP="" S:NVA TYP=$P($G(^IBA(355.93,NVA,0)),U,11) S:TYP="" TYP="FA" K IBXDATA S Z=0 F  S Z=$O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z)) Q:'Z  I $O(IBXSAVE("LAB/FAC",IBXIEN,"O",Z,0)) S IBXDATA(Z)=TYP
"DATA",364.7,591,3,0)
^^3^3^3060314^
"DATA",364.7,591,3,1,0)
OP7-3
"DATA",364.7,591,3,2,0)
Determine if there is a non-VA facility on the claim.  If so, capture the 
"DATA",364.7,591,3,3,0)
.11 field from file 355.93 - X12 Type of Facility.  Default FA otherwise.
"DATA",364.7,646,0)
1256^N^312^^^^N
"DATA",364.7,646,1)
S IBXDATA=$P($G(IBXSAVE("PROVINF",IBXIEN,"C",1,1,2)),"^",3)
"DATA",364.7,646,3,0)
^^5^5^3030815^^
"DATA",364.7,646,3,1,0)
Refering Provider Secondary ID Qualifier.
"DATA",364.7,646,3,2,0)
EI=EMPLOYER, SY=SSN, 0B=STATE LICENSE NUMBER, 1A=BLUE CROSS, 1B=BLUE SHIELD,
"DATA",364.7,646,3,3,0)
1C=MEDICARE PARTA aqnd PARTB, 1D=MEDICAID, 1G=UPIN Number, 1H=TRICARE
"DATA",364.7,646,3,4,0)
G2=COMMERCAIL NUMBER, X5=STATE INDUSTRIAL ACCIDENT PROVIDER NUMBER
"DATA",364.7,646,3,5,0)
N5=PROVIDER PLAN NETWORK ID
"DATA",364.7,900,0)
804^N^5^^^^N
"DATA",364.7,900,1)
K IBXDATA N Z F Z=1,2 S IBXDATA(Z)=$P($G(IBXSAVE("BILLING PRV",IBXIEN,"O",Z,2,"PTQ")),U,1) D:Z=2 CLEANUP^IBCEF75(.IBXSAVE)
"DATA",364.7,900,3,0)
^364.73^4^4^3060420^^^^
"DATA",364.7,900,3,1,0)
If any 'other' insurance company data is found, the data is formatted
"DATA",364.7,900,3,2,0)
from the electronic type of plan of the insurance company policy in X12
"DATA",364.7,900,3,3,0)
format.  Refer to the 837 V4010 (professional) field 2330/REF(3)/01
"DATA",364.7,900,3,4,0)
for details.
"DATA",364.7,947,0)
970^N^112^^^^N
"DATA",364.7,947,1)
I $D(IBXDATA) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)
"DATA",364.7,947,3,0)
^^1^1^3060111^
"DATA",364.7,947,3,1,0)
Format code for the CLIA# in SUB-8.  Just remove any punctuation.
"DATA",364.7,948,0)
971^N^113^^^^N
"DATA",364.7,948,1)
I $D(IBXDATA) N IBZ D VAMCFD^IBCEF75(IBXIEN,.IBZ) K:$D(IBZ)&'$G(IBZ("C",1)) IBXDATA I $D(IBXDATA) S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA)
"DATA",364.7,948,3,0)
^^1^1^3060111^
"DATA",364.7,948,3,1,0)
Remove punctuation from the returned tax ID number.
"DATA",364.7,954,0)
968^N^5^^^^N
"DATA",364.7,954,1)
S IBXDATA=""
"DATA",364.7,954,3,0)
^364.73^1^1^3060125^^
"DATA",364.7,954,3,1,0)
IB patch 320.  Move the data in this field to CI1A-3.
"DATA",364.7,1009,0)
1008^N^113^^^^N
"DATA",364.7,1009,1)
D BOX324^IBCEP8A(IBXIEN,.IBXSAVE,.IBXDATA)
"DATA",364.7,1009,3,0)
^^3^3^3060116^
"DATA",364.7,1009,3,1,0)
HCFA-1500 form, Box 32, Line 4.
"DATA",364.7,1009,3,2,0)
Display mammography certification number if it exists.
"DATA",364.7,1009,3,3,0)
Otherwise, display the facility tax ID for remote VA site or non-VA site.
"DATA",364.7,1015,0)
1014^N^5
"DATA",364.7,1015,1)
S IBXDATA="320.0      "
"DATA",364.7,1015,3,0)
^364.73^1^1^3050113^^^^
"DATA",364.7,1015,3,1,0)
 
"DATA",364.7,1020,0)
1305^N^5^^^^N
"DATA",364.7,1020,1)
D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,($$FT^IBCEF(IBXIEN)=3),"OP3 ")
"DATA",364.7,1020,3,0)
^^3^3^3060314^
"DATA",364.7,1020,3,1,0)
OP3-2
"DATA",364.7,1020,3,2,0)
Call the provider ID function only if the claim is a UB claim.
"DATA",364.7,1020,3,3,0)
Output the other payer sequence.
"DATA",364.7,1022,0)
1308^N^5^^^^N
"DATA",364.7,1022,1)
D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,$$SUB1OK^IBCEP8A(IBXIEN),"OP6 ")
"DATA",364.7,1022,3,0)
^^4^4^3060314^
"DATA",364.7,1022,3,1,0)
OP6-2
"DATA",364.7,1022,3,2,0)
Call provider ID function only if claim is for professional purchased 
"DATA",364.7,1022,3,3,0)
services.  Loop through all other insurances and output the corresponding 
"DATA",364.7,1022,3,4,0)
payer sequence of that other insurance.
"DATA",364.7,1023,0)
1309^N^5^^^^N
"DATA",364.7,1023,1)
D OTH^IBCEF76(IBXIEN,.IBXSAVE,.IBXDATA,($$FT^IBCEF(IBXIEN)=2),"OP7 ")
"DATA",364.7,1023,3,0)
^^3^3^3060314^
"DATA",364.7,1023,3,1,0)
OP7-2
"DATA",364.7,1023,3,2,0)
other payer sequence.  Call provider ID function only when claim is a 
"DATA",364.7,1023,3,3,0)
HCFA-1500 claim.
"DATA",364.7,1031,0)
1315^N^5
"DATA",364.7,1031,1)
S IBXDATA=$P($G(IBZSAVE("BILLING PRV",IBXIEN,"C",1,2,"PTQ")),U,1) K IBZSAVE
"DATA",364.7,1031,3,0)
^364.73^2^2^3060420^^
"DATA",364.7,1031,3,1,0)
CI1-9.  This is the billing provider ID qualifier (#2).  It is found on 
"DATA",364.7,1031,3,2,0)
screen 3 for the current insurance company qualifier.  Same as CI1A-4.
"DATA",364.7,1032,0)
1316^N^5^^^^N
"DATA",364.7,1032,1)
K IBZSAVE D ALLIDS^IBCEF75(IBXIEN,.IBZSAVE,1) S IBXDATA=$P($G(IBZSAVE("BILLING PRV",IBXIEN,"C",1,2)),U,2)
"DATA",364.7,1032,3,0)
^^2^2^3060227^
"DATA",364.7,1032,3,1,0)
CI1-7:  This is the billing provider secondary ID (#2).  It is found on 
"DATA",364.7,1032,3,2,0)
billing screen 3 for the current insurance company.  Same as CI1A-5.
"DATA",364.7,1033,0)
1317^N^5
"DATA",364.7,1033,1)
S IBXDATA=""
"DATA",364.7,1033,3,0)
^^3^3^3060222^
"DATA",364.7,1033,3,1,0)
Prior to IB patch 320, this was the current insurance billing provider ID 
"DATA",364.7,1033,3,2,0)
qualifier (one of them).  All billing provider ID's and qualifiers are 
"DATA",364.7,1033,3,3,0)
now in the CI1A segment so this field has been removed.
"FIA",36)
INSURANCE COMPANY
"FIA",36,0)
^DIC(36,
"FIA",36,0,0)
36I
"FIA",36,0,1)
y^y^p^^^^n^^n
"FIA",36,0,10)

"FIA",36,0,11)

"FIA",36,0,"RLRO")

"FIA",36,0,"VR")
2.0^IB
"FIA",36,36)
1
"FIA",36,36,.01)

"FIA",36,36,.06)

"FIA",36,36,.07)

"FIA",36,36,.08)

"FIA",36,36,.13)

"FIA",36,36,.15)

"FIA",36,36,3.01)

"FIA",36,36,3.02)

"FIA",36,36,3.04)

"FIA",36,36,3.09)

"FIA",36,36,3.13)

"FIA",36,36,3.14)

"FIA",36,36,4.01)

"FIA",36,36,4.02)

"FIA",36,36,4.04)

"FIA",36,36,4.05)

"FIA",36,36,4.06)

"FIA",36,36,4.07)

"FIA",36,36,4.08)

"FIA",36,36,13)

"FIA",36,36.013)
0
"FIA",350.8)
IB ERROR
"FIA",350.8,0)
^IBE(350.8,
"FIA",350.8,0,0)
350.8I
"FIA",350.8,0,1)
n^n^f^^n^^y^o^n
"FIA",350.8,0,10)

"FIA",350.8,0,11)
I $F(".IB235.IB303.IB236.IB237.IB238.IB239.IB240.IB241.IB242.IB243.IB244.IB245.IB246.","."_$P($G(^IBE(350.8,+Y,0)),U,1)_".")
"FIA",350.8,0,"RLRO")

"FIA",350.8,0,"VR")
2.0^IB
"FIA",350.8,350.8)
0
"FIA",355.92)
FACILITY BILLING ID
"FIA",355.92,0)
^IBA(355.92,
"FIA",355.92,0,0)
355.92P
"FIA",355.92,0,1)
y^y^p^^^^n^^n
"FIA",355.92,0,10)

"FIA",355.92,0,11)

"FIA",355.92,0,"RLRO")

"FIA",355.92,0,"VR")
2.0^IB
"FIA",355.92,355.92)
1
"FIA",355.92,355.92,.01)

"FIA",355.92,355.92,.03)

"FIA",355.92,355.92,.05)

"FIA",355.92,355.92,.08)

"FIA",355.92,355.92,.1)

"FIA",355.92,355.92,.11)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^y^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.93,.02)

"FIA",355.93,355.93,.09)

"FIA",355.93,355.93,.13)

"FIA",355.93,355.93,.15)

"FIA",355.95)
IB PROVIDER ID CARE UNIT
"FIA",355.95,0)
^IBA(355.95,
"FIA",355.95,0,0)
355.95I
"FIA",355.95,0,1)
y^y^p^^^^n^^n
"FIA",355.95,0,10)

"FIA",355.95,0,11)

"FIA",355.95,0,"RLRO")

"FIA",355.95,0,"VR")
2.0^IB
"FIA",355.95,355.95)
1
"FIA",355.95,355.95,.04)

"FIA",355.96)
IB INS CO PROVIDER ID CARE UNIT
"FIA",355.96,0)
^IBA(355.96,
"FIA",355.96,0,0)
355.96IP
"FIA",355.96,0,1)
y^y^p^^^^n^^n
"FIA",355.96,0,10)

"FIA",355.96,0,11)

"FIA",355.96,0,"RLRO")

"FIA",355.96,0,"VR")
2.0^IB
"FIA",355.96,355.96)
1
"FIA",355.96,355.96,.06)

"FIA",355.97)
IB PROVIDER ID # TYPE
"FIA",355.97,0)
^IBE(355.97,
"FIA",355.97,0,0)
355.97I
"FIA",355.97,0,1)
y^y^p^^^^n^^n
"FIA",355.97,0,10)

"FIA",355.97,0,11)

"FIA",355.97,0,"RLRO")

"FIA",355.97,0,"VR")
2.0^IB
"FIA",355.97,355.97)
1
"FIA",355.97,355.97,.03)

"FIA",355.97,355.97,.07)

"FIA",355.97,355.97,.08)

"FIA",361)
BILL STATUS MESSAGE
"FIA",361,0)
^IBM(361,
"FIA",361,0,0)
361PI
"FIA",361,0,1)
y^y^p^^^^n^^n
"FIA",361,0,10)

"FIA",361,0,11)

"FIA",361,0,"RLRO")

"FIA",361,0,"VR")
2.0^IB
"FIA",361,361)
1
"FIA",361,361,.15)

"FIA",361,361,.16)

"FIA",361.2)
IB ELECTRONIC REPORT DISPOSITION
"FIA",361.2,0)
^IBE(361.2,
"FIA",361.2,0,0)
361.2I
"FIA",361.2,0,1)
n^n^f^^n^^y^o^n
"FIA",361.2,0,10)

"FIA",361.2,0,11)
I $P($G(^IBE(361.2,Y,0)),U,1)="R0S2"
"FIA",361.2,0,"RLRO")

"FIA",361.2,0,"VR")
2.0^IB
"FIA",361.2,361.2)
0
"FIA",361.4)
EDI TEST CLAIM STATUS MESSAGE
"FIA",361.4,0)
^IBM(361.4,
"FIA",361.4,0,0)
361.4P
"FIA",361.4,0,1)
y^y^p^^^^n^^n
"FIA",361.4,0,10)

"FIA",361.4,0,11)

"FIA",361.4,0,"RLRO")

"FIA",361.4,0,"VR")
2.0^IB
"FIA",361.4,361.4)
1
"FIA",361.4,361.4,1)

"FIA",361.4,361.41)
1
"FIA",361.4,361.41,.01)

"FIA",364.5)
IB DATA ELEMENT DEFINITION
"FIA",364.5,0)
^IBA(364.5,
"FIA",364.5,0,0)
364.5I
"FIA",364.5,0,1)
n^n^f^^y^^y^o^n
"FIA",364.5,0,10)

"FIA",364.5,0,11)
I $$INCLUDE^IBY320PR(5,Y)
"FIA",364.5,0,"RLRO")

"FIA",364.5,0,"VR")
2.0^IB
"FIA",364.5,364.5)
0
"FIA",364.5,364.53)
0
"FIA",364.6)
IB FORM SKELETON DEFINITION
"FIA",364.6,0)
^IBA(364.6,
"FIA",364.6,0,0)
364.6IP
"FIA",364.6,0,1)
n^n^f^^y^^y^o^n
"FIA",364.6,0,10)

"FIA",364.6,0,11)
I $$INCLUDE^IBY320PR(6,Y)
"FIA",364.6,0,"RLRO")

"FIA",364.6,0,"VR")
2.0^IB
"FIA",364.6,364.6)
0
"FIA",364.7)
IB FORM FIELD CONTENT
"FIA",364.7,0)
^IBA(364.7,
"FIA",364.7,0,0)
364.7IP
"FIA",364.7,0,1)
n^n^f^^y^^y^o^n
"FIA",364.7,0,10)

"FIA",364.7,0,11)
I $$INCLUDE^IBY320PR(7,Y)
"FIA",364.7,0,"RLRO")

"FIA",364.7,0,"VR")
2.0^IB
"FIA",364.7,364.7)
0
"FIA",364.7,364.73)
0
"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^y^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399,.19)

"FIA",399,399,.22)

"FIA",399,399,29)

"FIA",399,399,30)

"FIA",399,399,31)

"FIA",399,399,32)

"FIA",399,399,33)

"FIA",399,399,101)

"FIA",399,399,102)

"FIA",399,399,103)

"FIA",399,399,122)

"FIA",399,399,123)

"FIA",399,399,124)

"FIA",399,399,128)

"FIA",399,399,129)

"FIA",399,399,130)

"FIA",399,399,232)

"FIA",399,399,235)

"FIA",399,399,242)

"FIA",399,399.0222)
1
"FIA",399,399.0222,.05)

"FIA",399,399.0222,.06)

"FIA",399,399.0222,.07)

"FIA",399,399.0222,.12)

"FIA",399,399.0222,.13)

"FIA",399,399.0222,.14)

"INI")
IBY320PR
"INIT")
IBY320PO
"IX",355.92,355.92,"AID",0)
355.92^AID^Xref by insurance co and division^MU^^R^IR^I^355.92^^^^^A
"IX",355.92,355.92,"AID",1)
S ^IBA(355.92,"AID",+X(1),+X(2),DA)=""
"IX",355.92,355.92,"AID",2)
K ^IBA(355.92,"AID",+X(1),+X(2),DA)
"IX",355.92,355.92,"AID",2.5)
K ^IBA(355.92,"AID")
"IX",355.92,355.92,"AID",11.1,0)
^.114IA^2^2
"IX",355.92,355.92,"AID",11.1,1,0)
1^F^355.92^.01^^^F
"IX",355.92,355.92,"AID",11.1,1,3)
 
"IX",355.92,355.92,"AID",11.1,2,0)
2^F^355.92^.05^^^F
"IX",355.92,355.92,"AID",11.1,2,3)
 
"IX",355.92,355.92,"AUNIQ",0)
355.92^AUNIQ^Xref by ins co,care unit,form type,division,prov id type^MU^^R^IR^I^355.92^^^^^S
"IX",355.92,355.92,"AUNIQ",.1,0)
^^2^2^3060426^^^
"IX",355.92,355.92,"AUNIQ",.1,1,0)
This cross reference allows edits to the additonal provider id's to be 
"IX",355.92,355.92,"AUNIQ",.1,2,0)
replicated to linked insurance companies.
"IX",355.92,355.92,"AUNIQ",1)
S ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)=""
"IX",355.92,355.92,"AUNIQ",1.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"",$P($G(^IBA(355.92,DA,0)),U,8)="A" S X=1
"IX",355.92,355.92,"AUNIQ",2)
K ^IBA(355.92,"AUNIQ",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)
"IX",355.92,355.92,"AUNIQ",2.4)
S X=0 I X(1)]"",X(2)]"",X(3)]"",X(4)]"",X(5)]"" S X=1
"IX",355.92,355.92,"AUNIQ",2.5)
K ^IBA(355.92,"AUNIQ")
"IX",355.92,355.92,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.92,355.92,"AUNIQ",11.1,1,0)
1^F^355.92^.01^^^F
"IX",355.92,355.92,"AUNIQ",11.1,2,0)
2^F^355.92^.1^30^^F
"IX",355.92,355.92,"AUNIQ",11.1,3,0)
3^F^355.92^.04^^^F
"IX",355.92,355.92,"AUNIQ",11.1,4,0)
4^F^355.92^.11^^^F
"IX",355.92,355.92,"AUNIQ",11.1,5,0)
5^F^355.92^.06^^^F
"IX",355.96,355.96,"AC",0)
355.96^AC^Xref by insurance company, provider type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AC",.1,0)
^^2^2^3000925^
"IX",355.96,355.96,"AC",.1,1,0)
This cross reference is used to easily find all care units for an
"IX",355.96,355.96,"AC",.1,2,0)
insurance company and provider id type.
"IX",355.96,355.96,"AC",1)
S ^IBA(355.96,"AC",X(1),X(2),DA)=""
"IX",355.96,355.96,"AC",2)
K ^IBA(355.96,"AC",X(1),X(2),DA)
"IX",355.96,355.96,"AC",2.5)
K ^IBA(355.96,"AC")
"IX",355.96,355.96,"AC",11.1,0)
^.114IA^2^2
"IX",355.96,355.96,"AC",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AC",11.1,2,0)
2^F^355.96^.06^^2^F
"IX",355.96,355.96,"AD",0)
355.96^AD^Xref by insurance co, form type, bill care type, provider type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AD",1)
S ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)=""
"IX",355.96,355.96,"AD",2)
K ^IBA(355.96,"AD",X(1),X(2),X(3),X(4),DA)
"IX",355.96,355.96,"AD",2.5)
K ^IBA(355.96,"AD")
"IX",355.96,355.96,"AD",11.1,0)
^.114IA^4^4
"IX",355.96,355.96,"AD",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AD",11.1,1,3)

"IX",355.96,355.96,"AD",11.1,2,0)
2^F^355.96^.04^^2^F
"IX",355.96,355.96,"AD",11.1,2,3)

"IX",355.96,355.96,"AD",11.1,3,0)
3^F^355.96^.05^^3^F
"IX",355.96,355.96,"AD",11.1,3,3)

"IX",355.96,355.96,"AD",11.1,4,0)
4^F^355.96^.06^^4^F
"IX",355.96,355.96,"AD",11.1,4,3)

"IX",355.96,355.96,"AUNIQ",0)
355.96^AUNIQ^Xref by ins co,care unit,form type,pt stat,prov type^R^^R^IR^I^355.96^^^^^S
"IX",355.96,355.96,"AUNIQ",.1,0)
^^3^3^3010801^
"IX",355.96,355.96,"AUNIQ",.1,1,0)
This cross reference provides an index to insure that each record in this
"IX",355.96,355.96,"AUNIQ",.1,2,0)
file has a unique combination of insurance company, form type, bill type
"IX",355.96,355.96,"AUNIQ",.1,3,0)
and provider id type.
"IX",355.96,355.96,"AUNIQ",1)
S ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)=""
"IX",355.96,355.96,"AUNIQ",2)
K ^IBA(355.96,"AUNIQ",X(1),X(2),X(3),X(4),X(5),DA)
"IX",355.96,355.96,"AUNIQ",2.5)
K ^IBA(355.96,"AUNIQ")
"IX",355.96,355.96,"AUNIQ",11.1,0)
^.114IA^5^5
"IX",355.96,355.96,"AUNIQ",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"AUNIQ",11.1,2,0)
2^F^355.96^.01^^2^F
"IX",355.96,355.96,"AUNIQ",11.1,3,0)
3^F^355.96^.04^^3^F
"IX",355.96,355.96,"AUNIQ",11.1,4,0)
4^F^355.96^.05^^4^F
"IX",355.96,355.96,"AUNIQ",11.1,5,0)
5^F^355.96^.06^^5^F
"IX",355.96,355.96,"D",0)
355.96^D^Lookup xref by insurance co and provider id type^R^^R^IR^I^355.96^^^^^LS
"IX",355.96,355.96,"D",.1,0)
^^2^2^3000928^
"IX",355.96,355.96,"D",.1,1,0)
This xref provides an easy way to lookup the entries in this file by
"IX",355.96,355.96,"D",.1,2,0)
insurance co and provider id type.
"IX",355.96,355.96,"D",1)
S ^IBA(355.96,"D",X(1),X(2),DA)=""
"IX",355.96,355.96,"D",2)
K ^IBA(355.96,"D",X(1),X(2),DA)
"IX",355.96,355.96,"D",2.5)
K ^IBA(355.96,"D")
"IX",355.96,355.96,"D",11.1,0)
^.114IA^2^2
"IX",355.96,355.96,"D",11.1,1,0)
1^F^355.96^.03^^1^F
"IX",355.96,355.96,"D",11.1,2,0)
2^F^355.96^.06^^2^F^CARE UNIT: 
"IX",364.6,364.6,"ALL",0)
364.6^ALL^Allows for identification of local override fields that apply to ALL^MU^^F^IR^I^364.6^^^^^S
"IX",364.6,364.6,"ALL",1)
S ^IBA(364.7,"ALL",DA,X2(5))=""
"IX",364.6,364.6,"ALL",1.4)
I X2(4)'="L"!'X2(5)!(X2(2)'="")!(X2(3)'="")!'X2(1) S X=0
"IX",364.6,364.6,"ALL",2)
K ^IBA(364.7,"ALL",DA,X1(5))
"IX",364.6,364.6,"ALL",2.4)
I X1(4)'="L"!'X1(5)!(X1(2)'="")!(X1(3)'="")!'X1(1) S X=0
"IX",364.6,364.6,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.6,364.6,"ALL",11.1,0)
^.114IA^5^5
"IX",364.6,364.6,"ALL",11.1,1,0)
1^F^364.6^.03^^1^F
"IX",364.6,364.6,"ALL",11.1,1,1)
 
"IX",364.6,364.6,"ALL",11.1,2,0)
2^C
"IX",364.6,364.6,"ALL",11.1,2,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,5)
"IX",364.6,364.6,"ALL",11.1,3,0)
3^C
"IX",364.6,364.6,"ALL",11.1,3,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,6)
"IX",364.6,364.6,"ALL",11.1,4,0)
4^C
"IX",364.6,364.6,"ALL",11.1,4,1.5)
N Z S Z=+$O(^IBA(364.7,"B",DA,0)) I Z S X=$P($G(^IBA(364.7,Z,0)),U,2)
"IX",364.6,364.6,"ALL",11.1,5,0)
5^C
"IX",364.6,364.6,"ALL",11.1,5,1.5)
S X=+$O(^IBA(364.7,"B",DA,0))
"IX",364.6,364.6,"D",0)
364.6^D^XREF BY FORM,PAGE,LINE,COL TO SIMPLIFY DEVELOPMENT^MU^^R^IR^I^364.6^^^^^LS
"IX",364.6,364.6,"D",1)
S ^IBA(364.6,"D",X2(1)_","_X2(2)_","_X2(3)_","_X2(4),DA)=""
"IX",364.6,364.6,"D",1.4)
I X2(1)=""!(X2(2)="")!(X2(3)="")!(X2(4)="") S X=0
"IX",364.6,364.6,"D",2)
K ^IBA(364.6,"D",X1(1)_","_X1(2)_","_X1(3)_","_X1(4),DA)
"IX",364.6,364.6,"D",2.4)
I X1(1)=""!(X1(2)="")!(X1(3)="")!(X1(4)="") S X=0
"IX",364.6,364.6,"D",2.5)
K ^IBA(364.6,"D")
"IX",364.6,364.6,"D",11.1,0)
^.114IA^4^4
"IX",364.6,364.6,"D",11.1,1,0)
1^F^364.6^.01^^1^F
"IX",364.6,364.6,"D",11.1,2,0)
2^F^364.6^.04^^^F
"IX",364.6,364.6,"D",11.1,3,0)
3^F^364.6^.05^^^F
"IX",364.6,364.6,"D",11.1,4,0)
4^F^364.6^.08^^^F
"IX",364.7,364.7,"ALL",0)
364.7^ALL^Xref contains all local overrides defined for all insurance and type^MU^^F^IR^I^364.7^^^^^S
"IX",364.7,364.7,"ALL",1)
S ^IBA(364.7,"ALL",X2(2),DA)=""
"IX",364.7,364.7,"ALL",1.4)
I 'X2(2)!(X2(4)'="")!(X2(5)'="")!(X2(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2)
K ^IBA(364.7,"ALL",X1(2),DA)
"IX",364.7,364.7,"ALL",2.4)
I 'X1(2)!(X1(4)'="")!(X1(5)'="")!(X1(3)'="L") S X=0
"IX",364.7,364.7,"ALL",2.5)
K ^IBA(364.7,"ALL")
"IX",364.7,364.7,"ALL",11.1,0)
^.114IA^5^5
"IX",364.7,364.7,"ALL",11.1,1,0)
1^F^364.7^.01^15^^F
"IX",364.7,364.7,"ALL",11.1,1,3)
 
"IX",364.7,364.7,"ALL",11.1,2,0)
2^C^^^10^1
"IX",364.7,364.7,"ALL",11.1,2,1.5)
S X=$P($G(^IBA(364.6,+X(1),0)),U,3)
"IX",364.7,364.7,"ALL",11.1,3,0)
3^F^364.7^.02^10^^F
"IX",364.7,364.7,"ALL",11.1,3,3)
 
"IX",364.7,364.7,"ALL",11.1,4,0)
4^F^364.7^.05^20^^F
"IX",364.7,364.7,"ALL",11.1,4,3)
 
"IX",364.7,364.7,"ALL",11.1,5,0)
5^F^364.7^.06^20^^F
"IX",364.7,364.7,"ALL",11.1,5,3)
 
"IX",399,399,"AE",0)
399^AE^Index by patient and insurance company^MU^^R^IR^I^399^^^^^S
"IX",399,399,"AE",.1,0)
^^7^7^3041021^
"IX",399,399,"AE",.1,1,0)
Cross reference of patients and bills to payer responsible for the bill.
"IX",399,399,"AE",.1,2,0)
This will be used to prevent deletion of insurance policy entries from the
"IX",399,399,"AE",.1,3,0)
patient file if a bill has been created for this insurance company.
"IX",399,399,"AE",.1,4,0)
 
"IX",399,399,"AE",.1,5,0)
Created with patch IB*2.0*288 replacing traditional cross-reference #1 in 
"IX",399,399,"AE",.1,6,0)
field 135 of file 399.  Medicare is now a valid insurance company for 
"IX",399,399,"AE",.1,7,0)
this index file.
"IX",399,399,"AE",1)
N CURR S CURR=+$$COBN^IBCEF(DA) I $G(X(4)),$G(X(CURR)) S ^DGCR(399,"AE",X(4),X(CURR),DA)=""
"IX",399,399,"AE",2)
N G I $G(X(4)) F G=1,2,3 I $G(X(G)) K ^DGCR(399,"AE",X(4),X(G),DA)
"IX",399,399,"AE",2.5)
K ^DGCR(399,"AE")
"IX",399,399,"AE",11.1,0)
^.114IA^4^4
"IX",399,399,"AE",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AE",11.1,1,3)

"IX",399,399,"AE",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AE",11.1,2,3)

"IX",399,399,"AE",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AE",11.1,3,3)

"IX",399,399,"AE",11.1,4,0)
4^F^399^.02^^^F
"IX",399,399,"AE",11.1,4,3)

"IX",399,399,"AUPDID",0)
399^AUPDID^UPDATE PROVIDER ID WHEN DATA FIELDS CHANGE AT TOP LEVEL OF FILE^MU^^R^IR^I^399^^^^^A
"IX",399,399,"AUPDID",.1,0)
^^5^5^3010109^
"IX",399,399,"AUPDID",.1,1,0)
This cross reference maintains the integrity of the rendering or attending
"IX",399,399,"AUPDID",.1,2,0)
provider id whenever an insurance company is added, deleted or changed
"IX",399,399,"AUPDID",.1,3,0)
on the claim.  If either of these provider functions exist on the bill,
"IX",399,399,"AUPDID",.1,4,0)
this cross reference sets the default id data based on the insurance co's
"IX",399,399,"AUPDID",.1,5,0)
parameters.
"IX",399,399,"AUPDID",1)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) SETID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) SETID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) SETID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",1.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",2)
D:X1(1)'=X2(1)!(X1(5)'=X2(5)) DELID^IBCEP3(DA,1) D:X1(2)'=X2(2)!(X1(4)'=X2(4)) DELID^IBCEP3(DA,2) D:X1(3)'=X2(3)!(X1(6)'=X2(6)) DELID^IBCEP3(DA,3)
"IX",399,399,"AUPDID",2.4)
S X=$S($O(^DGCR(399,DA,"PRV",0)):1,1:0)
"IX",399,399,"AUPDID",11.1,0)
^.114IA^6^6
"IX",399,399,"AUPDID",11.1,1,0)
1^F^399^101^^^F
"IX",399,399,"AUPDID",11.1,2,0)
2^F^399^102^^^F
"IX",399,399,"AUPDID",11.1,3,0)
3^F^399^103^^^F
"IX",399,399,"AUPDID",11.1,4,0)
4^F^399^113^^^F
"IX",399,399,"AUPDID",11.1,5,0)
5^F^399^112^^^F
"IX",399,399,"AUPDID",11.1,5,3)
 
"IX",399,399,"AUPDID",11.1,6,0)
6^F^399^114^^^F
"IX",399,399,"AUPDID",11.1,6,3)
 
"KRN",.402,1080,-1)
0^3
"KRN",.402,1080,0)
IB SCREEN8H^3060222.1222^@^399^^@^3060515
"KRN",.402,1080,"%D",0)
^^1^1^3051227^
"KRN",.402,1080,"%D",1,0)
Billing screen 8 input template for form type HCFA-1500.
"KRN",.402,1080,"DIAB",1,0,399,1)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1080,"DIAB",1,0,399,3)
NON-VA FACILITY:
"KRN",.402,1080,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",8,0,399,0)
FORM LOCATOR 37A;T
"KRN",.402,1080,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1080,"DIAB",10,0,399,0)
FORM LOCATOR 37B;T
"KRN",.402,1080,"DIAB",10,0,399,4)
D ASK19^IBCEU3(DA);X
"KRN",.402,1080,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1080,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1080,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";166;167;@82;S:IBDR20'["82" Y="@83";215;453T~;S:'DIPA("I2") Y="@825";454T~;S:'DIPA("I3") Y="@825";455;@825;
"KRN",.402,1080,"DR",1,399,1)
163PRIMARY AUTHORIZATION CODE~;S:'DIPA("I2") Y="@83";230;S:'DIPA("I3") Y="@83";231;@83;S:IBDR20'["83" Y="@84";222;@84;S:IBDR20'["84" Y="@85";232;S DIPA("NVA_FC")=X S:X="" Y="@842";
"KRN",.402,1080,"DR",1,399,2)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@841";
"KRN",.402,1080,"DR",1,399,3)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@841;233;@842;S DIPA("OLDCLIA")=$P($G(^DGCR(399,DA,"U2")),U,13);235;
"KRN",.402,1080,"DR",1,399,4)
I X="",$G(DIPA("OLDCLIA"))'="" S IBMDOTCN=1;@843;I '$$XRAY^IBCEP8A(DA) S Y="@844";D MAMMODP^IBCEP8A(DA);242;@844;@85;S:IBDR20'["85" Y="@86";459;D ASK19^IBCEU3(DA);236;237;238//^S X=$S($$WNRBILL^IBEFUNC(DA):"31",1:"");@86;
"KRN",.402,1080,"DR",1,399,5)
S:IBDR20'["86" Y="@99";I $$NSAME^IBCSC8H(DA) S Y="@861";401;@861;I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@862";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@862";@8611;28//NO FORCED PRINT;@862;@99;
"KRN",.402,1080,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1080,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:X="" Y="@98";
"KRN",.402,1080,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");S DIPA("CRD")=$$CRED^IBCEU($P(^DGCR(399,DA(1),"PRV",DA,0),U,2));
"KRN",.402,1080,"DR",2,399.0222,2)
.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P(^DGCR(399,DA(1),"PRV",DA,0),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");I '$G(DIPA("I1")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,3)
D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8382",DIPA("EDIT")=1:"@8391",DIPA("EDIT")=2:"@8371",1:"");@8382;I '$G(DIPA("I2")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8383",DIPA("EDIT")=1:"@8392",DIPA("EDIT")=2:"@8372",1:"");@8383;I '$G(DIPA("I3")) S Y="@8305";
"KRN",.402,1080,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8305",DIPA("EDIT")=1:"@8393",DIPA("EDIT")=2:"@8373",1:"");S Y="@8305";@8391;.12R~T~;.05T~;S Y="@8382";@8392;.13R~T~;.06T~;S Y="@8383";@8393;.14R~T~;.07T~;S Y="@8305";@8371;
"KRN",.402,1080,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8382";@8372;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8383";@8373;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8305";@8305;@98;W @IOF;
"KRN",.402,1080,"ROUOLD")
IBXSC8H
"KRN",.402,1276)
 
"KRN",.402,1276,-1)
0^1
"KRN",.402,1276,0)
IBEDIT INS CO1^3060505.0006^^36^^^3060512
"KRN",.402,1276,"DIAB",1,0,36,1)
TRANSMIT ELECTRONICALLY;"EDI - Transmit?"
"KRN",.402,1276,"DIAB",1,0,36,5)
SECONDARY ID REQUIREMENTS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",1,0,36,6)
ATT/REND ID BILL SEC ID INST//NO;"Use Att/Rend ID as Billing Provider Sec. ID (UB92)?"
"KRN",.402,1276,"DIAB",1,1,36.03,0)
ALL
"KRN",.402,1276,"DIAB",3,0,36,4)
BIN NUMBER;"EDI - Bin Number"
"KRN",.402,1276,"DIAB",3,0,36,5)
REF PROV SEC ID DEF HCFA//UPIN;"Default ID (HCFA)"
"KRN",.402,1276,"DIAB",3,0,36,6)
SEND LAB OR FAC IDS FOR VAMC//YES;"Send VA Lab/Facility IDs or Facility Data for VAMC?"
"KRN",.402,1276,"DIAB",4,0,36,5)
REF PROV SEC ID REQ ON CLAIMS;"Require ID on Claim"
"KRN",.402,1276,"DIAB",4,0,36,9)
ANOTHER CO. PROCESS RX CLAIMS?;T
"KRN",.402,1276,"DIAB",5,0,36,4)
MAX NUMBER TEST BILLS PER DAY;"MAX # TEST BILLS TO TRANSMIT PER DAY"
"KRN",.402,1276,"DIAB",5,0,36,6)
REQUIRE SSN ID FOR HCFA PRINT;"Print on HCFA?"
"KRN",.402,1276,"DIAB",6,0,36,2)
EDI ID NUMBER - PROF;"EDI - Prof Payer ID"
"KRN",.402,1276,"DIAB",6,0,36,3)
ELECTRONIC INSURANCE TYPE;"EDI - Insurance Type"
"KRN",.402,1276,"DIAB",6,0,36,5)
ATT/REND ID BILL SEC ID PROF//NO;"Use Att/Rend ID as Billing Provider Sec. ID (HCFA)?"
"KRN",.402,1276,"DIAB",6,0,36,6)
REQUIRE SSN ID FOR UB92 PRINT;"Print on UB92?"
"KRN",.402,1276,"DIAB",7,0,36,12)
INS COMPANY LINK PARENT;T
"KRN",.402,1276,"DIAB",9,0,36,1)
EDI ID NUMBER - INST;"EDI - Inst Payer ID"
"KRN",.402,1276,"DIAB",9,0,36,4)
PERF PROV SECOND ID TYPE HCFA;"Default ID (HCFA)"
"KRN",.402,1276,"DIAB",10,0,36,4)
PERF PROV SECOND ID TYPE UB;"Default ID (UB92)"
"KRN",.402,1276,"DIAB",11,0,36,11)
INS COMPANY LINK TYPE;T
"KRN",.402,1276,"DIAB",15,0,36,8)
ANOTHER CO. PROCESS OP CLAIMS?;T
"KRN",.402,1276,"DIAB",18,0,36,0)
ANOTHER CO. PROCESS PRECERTS?;T
"KRN",.402,1276,"DIAB",18,0,36,7)
ANOTHER CO. PROCESS IP CLAIMS?;T
"KRN",.402,1276,"DIAB",19,0,36,10)
ANOTHER CO. PROCESS INQUIRIES?;T
"KRN",.402,1276,"DIAB",24,0,36,9)
ANOTHER CO. PROCESS APPEALS?;T
"KRN",.402,1276,"DR",1,36)
S:",6,"'[IBY Y="@0";.01;@0;S:",0,1,6,12,"'[IBY Y="@10";S:",12,"[IBY Y="@18";2;1;.06;.07;.08;.09;.15;.12;.13;.14;.132;.134;.178T~;S:'X Y="@11";.139;S Y="@16";@11;.133;@16;I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@171";
"KRN",.402,1276,"DR",1,36,1)
3.01EDI - Transmit?~;S DIPA("IBTX")=X;I X=$G(IBEDIKEY(1))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1721";3.01////^S X=$G(IBEDIKEY(1));I $$EDIKEY^IBCNSC();S Y="@171";@1721;I '$G(DIPA("IBTX")) S Y="@17";3.04EDI - Inst Payer ID~;
"KRN",.402,1276,"DR",1,36,2)
I X=$G(IBEDIKEY(4))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1722";3.04////^S X=$G(IBEDIKEY(4));I $$EDIKEY^IBCNSC();S Y="@171";@1722;3.02EDI - Prof Payer ID~;I X=$G(IBEDIKEY(2))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1723";
"KRN",.402,1276,"DR",1,36,3)
3.02////^S X=$G(IBEDIKEY(2));I $$EDIKEY^IBCNSC();S Y="@171";@1723;@17;3.09EDI - Insurance Type~;I X=$G(IBEDIKEY(9))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@1724";3.09////^S X=$G(IBEDIKEY(9));I $$EDIKEY^IBCNSC();S Y="@171";
"KRN",.402,1276,"DR",1,36,4)
@1724;@171;3.03EDI - Bin Number~;I $G(DIPA("IBTX"))'=2 S Y="@18";3.06MAX # TEST BILLS TO TRANSMIT PER DAY~;@18;S:",6,12,"'[IBY Y="@181";W !!,"Attending/Rendering Provider Secondary ID";4.01Default ID (HCFA)~;4.02Default ID (UB92)~;
"KRN",.402,1276,"DR",1,36,5)
4.03Require ID on Claim~;W !!,"Referring Provider Secondary ID";4.04Default ID (HCFA)~//UPIN;4.05Require ID on Claim~;W !!,"Billing Provider Secondary IDs";4.06Use Att/Rend ID as Billing Provider Sec. ID (HCFA)?~//NO;
"KRN",.402,1276,"DR",1,36,6)
4.08Use Att/Rend ID as Billing Provider Sec. ID (UB92)?~//NO;W !!,"VA-Laboratory or Facility IDs";4.07Send VA Lab/Facility IDs or Facility Data for VAMC?~//YES;W !!,"Print SSN on claim";3.11Print on HCFA?~;3.12Print on UB92?~;@181;
"KRN",.402,1276,"DR",1,36,7)
S:IBY["1" Y="@99";@10;S:",0,2,6,"'[IBY Y="@20";.111;S:X="" Y="@1";.112;S:X="" Y="@1";.113;@1;.114;.115;.116;.131;.119;S:(IBY["0")!(IBY["2") Y="@99";@20;S:",3,6,"'[IBY Y="@30";.128T~;S:'X Y="@21";.127;S Y="@26";@21;.121;
"KRN",.402,1276,"DR",1,36,8)
S:X="" Y="@2";.122;S:X="" Y="@2";.123;@2;.124;.125;.126;.135;.129;@26;S:IBY["3" Y="@99";@30;S:",10,6,"'[IBY Y="@80";.168T~;S:'X Y="@31";.167;S Y="@36";@31;.161;S:X="" Y="@5";.162;S:X="" Y="@5";.163;@5;.164;.165;.166;.136;.169;@36;
"KRN",.402,1276,"DR",1,36,9)
S:IBY["10" Y="@99";@80;S:",11,6,"'[IBY Y="@90";.188T~;S:'X Y="@81";.187;S Y="@86";@81;.181;S:X="" Y="@6";.182;S:X="" Y="@6";.183;@6;.184;.185;.186;.1311;.189;@86;S:IBY["11" Y="@99";@90;S:",4,6,"'[IBY Y="@40";.148T~;S:'X Y="@41";
"KRN",.402,1276,"DR",1,36,10)
.147;S Y="@46";@41;.141;S:X="" Y="@3";.142;S:X="" Y="@3";.143;@3;.144;.145;.146;.137;.149;@46;S:IBY["4" Y="@99";@40;S:",5,6,"'[IBY Y="@55";.158T~;S:'X Y="@51";.157;S Y="@56";@51;.151;S:X="" Y="@4";.152;S:X="" Y="@4";.153;@4;.154;
"KRN",.402,1276,"DR",1,36,11)
.155;.156;.138;.159;@56;S:IBY["5" Y="@99";@55;S:",13,6,"'[IBY Y="@60";I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@551";I $D(^DIC(36,"APC",+$G(DA))),$P($G(^DIC(36,+$G(DA),3)),U,13)="P" S Y="@551";3.13T~;S DIPA("IBLNK")=X;
"KRN",.402,1276,"DR",1,36,12)
I X=$G(IBEDIKEY(13))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@552";3.13////^S X=$G(IBEDIKEY(13));I $$EDIKEY^IBCNSC();S Y="@551";@552;I $G(DIPA("IBLNK"))'="C" S Y="@551";3.14T~;
"KRN",.402,1276,"DR",1,36,13)
I X=$G(IBEDIKEY(14))!$$KCHK^XUSRB("IB EDI INSURANCE EDIT") S Y="@553";3.14////^S X=$G(IBEDIKEY(14));I $$EDIKEY^IBCNSC();S Y="@551";@553;D COPY^IBCEPCID(+$G(DA));@551;S:IBY=",13," Y="@99";@60;S:",7,6,"'[IBY Y="@50";3.1;@50;
"KRN",.402,1276,"DR",1,36,14)
S:",8,6,"'[IBY Y="@70";11;S:IBY["8" Y="@99";@70;S:",9,6,"'[IBY Y="@99";10;@99;
"KRN",.402,1276,"DR",2,36.03)
.01
"KRN",.402,1297,-1)
0^4
"KRN",.402,1297,0)
IB SCREEN3^3060410.1453^@^399^^@^3060512
"KRN",.402,1297,"AR",399,85)
1^IBXSC39
"KRN",.402,1297,"DIAB",1,0,399,6)
PRIMARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",1,0,399,7)
PRIMARY ID QUALIFIER;"Primary ID Qualifier"
"KRN",.402,1297,"DIAB",1,0,399,10)
SECONDARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",1,0,399,11)
SECONDARY ID QUALIFIER;"Secondary ID Qualifier"
"KRN",.402,1297,"DIAB",3,0,399,14)
TERTIARY PROVIDER #//VAR("IBPSID")
"KRN",.402,1297,"DIAB",3,0,399,15)
TERTIARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",5,0,399,6)
PRIMARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",5,0,399,10)
SECONDARY ID QUALIFIER///VAR("IBPSQUAL")
"KRN",.402,1297,"DIAB",6,0,399,15)
TERTIARY ID QUALIFIER;"Tertiary ID Qualifier"
"KRN",.402,1297,"DR",1,399)
S:$G(IBCNRTN) Y="@313" K IBCNRTN;S:IBDR20'["31" Y="@31";.07;S:'+$P(^IBE(350.9,1,1),U,22) Y="@314";S DIPA("FT1")=$P($G(^DGCR(399,DA,0)),U,19);@5;.19;S DIPA("FT")=$P($G(^DGCR(399,DA,0)),U,19);
"KRN",.402,1297,"DR",1,399,1)
I $P($G(^IBE(353,+DIPA("FT"),2)),U,2)="P",$P($G(^(2)),U,4) S DIPA("FT1")=DIPA("FT") D CKFT^IBCIUT1(IBIFN) S Y="@10";W !,*7,"Must be a printable national form type";.19///^S X=$G(DIPA("FT1"));S Y="@5";@10;D FTPRV^IBCEU5(DA);@314;
"KRN",.402,1297,"DR",1,399,2)
S X=$P(^DGCR(399,DA,0),U,11);S Y="@"_$S(X']"":31,X="p":31,X="o":311,1:310);@310;D 1^IBCSCH1 S Y="@"_$S(IBADI=-1:31,'IBADI:312,1:33);@313;@312;112;I X'="" S:$E(IBVV,9) IBVV=$E(IBVV,1,8)_"0";S:X="" Y="@998";113;S:X="" Y="@998";114;
"KRN",.402,1297,"DR",1,399,3)
@998;S Y="@31";@311;D INST^IBCU;111;K DIC("DR"),DLAYGO;@31;.21;S:IBDR20'["32" Y="@33";@3211;I '$$SUPPPT^IBCEP7B(DA,1) S Y="@3212";122///@;128///@;W !,"No Billing Prov Secondary IDs will be sent for Primary Ins/Elect Plan Type.";
"KRN",.402,1297,"DR",1,399,4)
S Y="@3221";@3212;I '$$ATTREND^IBCEP7B(DA,1) S Y="@3213";I $P($G(^DGCR(399,DA,"M1")),U,2)]"" S Y="@3213";W !,"The Att/Rend ID will be sent as the primary ins. Billing Prov Sec ID.";S Y="@3221";@3213;
"KRN",.402,1297,"DR",1,399,5)
S IBPSDAT=$$GETID^IBCEP7B(DA,1),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@321";122///@;128///@;S DIE("NO^")=1;@321;S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,2),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,10);Q;
"KRN",.402,1297,"DR",1,399,6)
122//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3214";I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3214";Q;128///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3215";@3214;
"KRN",.402,1297,"DR",1,399,7)
128Primary ID Qualifier~;@3215;K DIE("NO^");@3221;I '$$SUPPPT^IBCEP7B(DA,2) S Y="@3222";123///@;129///@;W !,"No Billing Prov Secondary IDs will be sent for Secondary Ins/Elect Plan Type.";S Y="@3231";@3222;
"KRN",.402,1297,"DR",1,399,8)
I '$$ATTREND^IBCEP7B(DA,2) S Y="@3223";I $P($G(^DGCR(399,DA,"M1")),U,3)]"" S Y="@3223";W !,"The Att/Rend ID will be sent as the secondary ins. Billing Prov Sec ID.";S Y="@3231";@3223;
"KRN",.402,1297,"DR",1,399,9)
S IBPSDAT=$$GETID^IBCEP7B(DA,2),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@322";123///@;129///@;S DIE("NO^")=1;@322;S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,3),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,11);Q;
"KRN",.402,1297,"DR",1,399,10)
123//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3224";I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3224";Q;129///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3225";@3224;
"KRN",.402,1297,"DR",1,399,11)
129Secondary ID Qualifier~;@3225;K DIE("NO^");@3231;I '$$SUPPPT^IBCEP7B(DA,3) S Y="@3232";124///@;130///@;W !,"No Billing Prov Secondary IDs will be sent for Tertiary Ins/Elect Plan Type.";
"KRN",.402,1297,"DR",1,399,12)
D:(IBDRLP'[33&(IBDRLP'[34)) PAUSE^VALM1 S Y="@33";@3232;I '$$ATTREND^IBCEP7B(DA,3) S Y="@3233";I $P($G(^DGCR(399,DA,"M1")),U,4)]"" S Y="@3233";W !,"The Att/Rend ID will be sent as the tertiary ins. Billing Prov Sec ID.";
"KRN",.402,1297,"DR",1,399,13)
D:(IBDRLP'[33&(IBDRLP'[34)) PAUSE^VALM1 S Y="@33";@3233;S IBPSDAT=$$GETID^IBCEP7B(DA,3),IBPSID=$P(IBPSDAT,U),IBPSQUAL=$P(IBPSDAT,U,2) I IBPSID="" S Y="@323";124///@;130///@;S DIE("NO^")=1;@323;
"KRN",.402,1297,"DR",1,399,14)
S IBPSIDO=$P($G(^DGCR(399,DA,"M1")),U,4),IBPSQO=$P($G(^DGCR(399,DA,"M1")),U,12);Q;124//^S X="IBPSID" Q:X  Q:$NA(@X)[U  S X=$G(@X);I $G(IBPSQO)]"",X'=$G(IBPSID),X'=$G(IBPSIDO) S Y="@3234";
"KRN",.402,1297,"DR",1,399,15)
I $G(IBPSQO)="",$G(IBPSQUAL)="",X]"" S Y="@3234";Q;130///^S X="IBPSQUAL" Q:X  Q:$NA(@X)[U  S X=$G(@X);S Y="@3235";@3234;130Tertiary ID Qualifier~;@3235;K DIE("NO^");@33;S:IBDR20'["33" Y="@34";104;105;106;S:X="" Y=107;121;107;108;
"KRN",.402,1297,"DR",1,399,16)
109;@34;@999;
"KRN",.402,1297,"ROU")
^IBXSC3
"KRN",.402,1297,"ROUOLD")
IBXSC3
"KRN",.402,1316,-1)
0^2
"KRN",.402,1316,0)
IB SCREEN82^3060104.1318^@^399^^@^3060530
"KRN",.402,1316,"DIAB",1,0,399,5)
NON-VA FACILITY:
"KRN",.402,1316,"DIAB",4,0,399,0)
FORM LOCATOR 37A;T
"KRN",.402,1316,"DIAB",4,1,399.0222,5)
PRIM INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",5,1,399.0222,5)
PRIMARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",6,0,399,0)
FORM LOCATOR 37B;T
"KRN",.402,1316,"DIAB",8,0,399,0)
FORM LOCATOR 37C;T
"KRN",.402,1316,"DIAB",8,1,399.0222,5)
SEC INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",9,1,399.0222,5)
SECONDARY INS CO ID NUMBER;T
"KRN",.402,1316,"DIAB",10,0,399,0)
TREATMENT AUTHORIZATION CODE;"PRIMARY AUTHORIZATION CODE"
"KRN",.402,1316,"DIAB",12,1,399.0222,5)
TERT INS PROVIDER ID TYPE;T;REQ
"KRN",.402,1316,"DIAB",13,1,399.0222,5)
TERTIARY INS CO ID NUMBER;T
"KRN",.402,1316,"DR",1,399)
K DIPA S DIPA("I1")=$D(^DGCR(399,DA,"I1")),DIPA("I2")=$D(^("I2")),DIPA("I3")=$D(^("I3"));S:IBDR20'["81" Y="@82";208;453T~;S:'DIPA("I2") Y="@8111";454T~;S:'DIPA("I3") Y="@8111";455T~;@8111;163PRIMARY AUTHORIZATION CODE~;
"KRN",.402,1316,"DR",1,399,1)
S:'DIPA("I2") Y="@811";230;S:'DIPA("I3") Y="@811";231;@811;215;159;@82;S:IBDR20'["82" Y="@83";222;@83;S:IBDR20'["83" Y="@84";450;451;@84;S:IBDR20'["84" Y="@85";452;@85;S:IBDR20'["85" Y="@86";456;458;@86;S:IBDR20'["86" Y="@87";
"KRN",.402,1316,"DR",1,399,2)
I '$P($G(^DGCR(399,DA,"TX")),U,8),'$$TXMT^IBCEF4(DA) S Y="@861";I $$REQMRA^IBEFUNC(DA) S Y="@8611";27//NO FORCED PRINT;S Y="@87";@8611;28//NO FORCED PRINT;S Y="@87";@861;
"KRN",.402,1316,"DR",1,399,3)
N X,Y,DIR S DIR(0)="EA",DIR("A",1)="NO FIELDS AVAILABLE TO EDIT",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR;@87;S:IBDR20'["87" Y="@88";@88;S:IBDR20'["88" Y="@89";232;S DIPA("NVA_FC")=X S:DIPA("NVA_FC")="" Y="@882";
"KRN",.402,1316,"DR",1,399,4)
S DIPA("NVA_FC-0")=$G(^IBA(355.93,+DIPA("NVA_FC"),0)) S:$P(DIPA("NVA_FC-0"),U,5)'=""&($P(DIPA("NVA_FC-0"),U,6)'="")&($P(DIPA("NVA_FC-0"),U,7)'="") Y="@881";
"KRN",.402,1316,"DR",1,399,5)
^355.93^IBA(355.93,^^S I(0,0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,10),X=X S D(0)=+X S X=$S(D(0)>0:D(0),1:"");@881;233;@882;@89;
"KRN",.402,1316,"DR",2,355.93)
.05;.1;.06;.07;.08;
"KRN",.402,1316,"DR",2,399.0222)
.01;S DIPA("RF")=X S:$D(^XUSEC("IB PROVIDER EDIT",DUZ)) DLAYGO=355.93;.02;K DLAYGO S DIPA("PRF")=X S:DIPA("PRF")="" Y="@98";
"KRN",.402,1316,"DR",2,399.0222,1)
N Z S Z=$$EXPAND^IBTRE(399.0222,.08,$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,8)),DIPA("SPC")=$S(Z'="":Z,1:"UNSPECIFIED") W !,"    Prov Specialty On File: ",DIPA("SPC");
"KRN",.402,1316,"DR",2,399.0222,2)
S DIPA("CRD")=$$CRED^IBCEU($P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,2));.03;K DIPA("W1") S:$G(DIPA("CRD"))'=$P($G(^DGCR(399,DA(1),"PRV",DA,0)),U,3) DIPA("W1")=1;I $G(DIPA("W1")) D WRT1^IBCSC8H($G(DIPA("CRD")));K DIPA("W1");
"KRN",.402,1316,"DR",2,399.0222,3)
I '$G(DIPA("I1")) S Y="@8205";D PROVID^IBCEP2B(DA(1),DA,1,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8282",DIPA("EDIT")=1:"@8291",DIPA("EDIT")=2:"@8271",1:"");@8282;I '$G(DIPA("I2")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,4)
D PROVID^IBCEP2B(DA(1),DA,2,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8283",DIPA("EDIT")=1:"@8292",DIPA("EDIT")=2:"@8272",1:"");@8283;I '$G(DIPA("I3")) S Y="@8205";
"KRN",.402,1316,"DR",2,399.0222,5)
D PROVID^IBCEP2B(DA(1),DA,3,.DIPA) S Y=$S(DIPA("EDIT")<0:"@8205",DIPA("EDIT")=1:"@8293",DIPA("EDIT")=2:"@8273",1:"");S Y="@8205";@8291;.12R~T~;.05T~;S Y="@8282";@8292;.13R~T~;.06T~;S Y="@8283";@8293;.14R~T~;.07T~;S Y="@8205";@8271;
"KRN",.402,1316,"DR",2,399.0222,6)
.12////^S X=DIPA("PRIDT");.05////^S X=DIPA("PRID");S Y="@8282";@8272;.13////^S X=DIPA("PRIDT");.06////^S X=DIPA("PRID");S Y="@8283";@8273;.14////^S X=DIPA("PRIDT");.07////^S X=DIPA("PRID");S Y="@8205";@8205;@98;W @IOF;
"KRN",.402,1316,"ROU")
^IBXSC82
"KRN",.402,1316,"ROUOLD")
IBXSC82
"KRN",19,6409,-1)
2^3
"KRN",19,6409,0)
IBCE 837 EDI MENU^EDI Menu For Electronic Bills^^M^101001^^^^^^^200
"KRN",19,6409,10,0)
^19.01IP^19^19
"KRN",19,6409,10,6,0)
6412^MM^10
"KRN",19,6409,10,6,"^")
IBCE 837 EDI REPORTS
"KRN",19,6409,10,19,0)
12302^RCB^40
"KRN",19,6409,10,19,"^")
IBCE PREV TRANSMITTED CLAIMS
"KRN",19,6409,"U")
EDI MENU FOR ELECTRONIC BILLS
"KRN",19,6412,-1)
2^1
"KRN",19,6412,0)
IBCE 837 EDI REPORTS^EDI Return Message Management^^M^539^^^^^^^200
"KRN",19,6412,10,0)
^19.01IP^15^15
"KRN",19,6412,10,15,0)
12483^MCS
"KRN",19,6412,10,15,"^")
IBCEMC MULT CSA MSG MANAGEMENT
"KRN",19,6412,"U")
EDI RETURN MESSAGE MANAGEMENT
"KRN",19,12302,-1)
0^4
"KRN",19,12302,0)
IBCE PREV TRANSMITTED CLAIMS^View/Resubmit Claims - Live or Test^^R^^^^^^^^INTEGRATED BILLING
"KRN",19,12302,1,0)
^19.06^3^3^3051129^^
"KRN",19,12302,1,1,0)
This option allows a user to view or produce a report of claims that
"KRN",19,12302,1,2,0)
were previously transmitted as live claims or that were transmitted as
"KRN",19,12302,1,3,0)
test claims prior to turning EDI on for an insurance company.
"KRN",19,12302,25)
EN^IBCEPTC
"KRN",19,12302,"U")
VIEW/RESUBMIT CLAIMS - LIVE OR
"KRN",19,12483,-1)
0^2
"KRN",19,12483,0)
IBCEMC MULT CSA MSG MANAGEMENT^Multiple CSA Message Management^^R^^IB MESSAGE MANAGEMENT^^^^^^INTEGRATED BILLING
"KRN",19,12483,1,0)
^^3^3^3051003^
"KRN",19,12483,1,1,0)
This option allows users to see rejected claims status messages which are 
"KRN",19,12483,1,2,0)
not reviewed.  The users are able to take the same action on multiple 
"KRN",19,12483,1,3,0)
messages at the same time.
"KRN",19,12483,25)
EN^IBCEMCL
"KRN",19,12483,"U")
MULTIPLE CSA MESSAGE MANAGEMEN
"KRN",19,12545,-1)
0^7
"KRN",19,12545,0)
IBCN RESYNCH INS COMP^Re-synch Associated Insurance Companies^^R^^^^^^^^
"KRN",19,12545,1,0)
^^8^8^3060426^
"KRN",19,12545,1,1,0)
On the rare occasion that the associated insurance company provider 
"KRN",19,12545,1,2,0)
IDs get out of synch, this option is to be used by EVS or the IRM to get
"KRN",19,12545,1,3,0)
the parent and child insurance companies to be the same.  This option
"KRN",19,12545,1,4,0)
should not be linked to any menu.
"KRN",19,12545,1,5,0)
 
"KRN",19,12545,1,6,0)
This runs for all insurance companies and locks the insurance company 
"KRN",19,12545,1,7,0)
file before starting so no one can be editing an insurance company while
"KRN",19,12545,1,8,0)
it is running.
"KRN",19,12545,25)
RESYNCH^IBCEPCID()
"KRN",19,12545,"U")
RE-SYNCH ASSOCIATED INSURANCE 
"KRN",19,12581,-1)
1^5
"KRN",19,12581,0)
IBCE RESUBMIT BILL BATCH
"KRN",19,12582,-1)
1^6
"KRN",19,12582,0)
IBCE RESUBMIT BILL
"KRN",19.1,462,-1)
0^1
"KRN",19.1,462,0)
IB MESSAGE MANAGEMENT
"KRN",19.1,462,1,0)
^^3^3^3050920^
"KRN",19.1,462,1,1,0)
This security key enables access to the MCS option - Multiple CSA Message
"KRN",19.1,462,1,2,0)
Management.  This option enables the user to take action on multiple CSA 
"KRN",19.1,462,1,3,0)
status messages at the same time.
"KRN",19.1,469,-1)
0^2
"KRN",19.1,469,0)
IB EDI INSURANCE EDIT
"KRN",19.1,469,1,0)
^^2^2^3060203^
"KRN",19.1,469,1,1,0)
This key will allow users to edit the EDI billing parameters within
"KRN",19.1,469,1,2,0)
the insurance company entry/edit option.
"KRN",101,899,-1)
0^22
"KRN",101,899,0)
IBCNSC INS CO REMARKS^Remarks^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,899,4)
^^^RE
"KRN",101,899,15)
S VALMBG=$G(IB1ST("REM")) S:'VALMBG VALMBG=1
"KRN",101,899,20)
S IBY=",8," D EA^IBCNSC1
"KRN",101,899,99)
59435,30008
"KRN",101,900,-1)
0^23
"KRN",101,900,0)
IBCNSC INS CO SYNONYMS^Synonyms^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,900,4)
^^^ES
"KRN",101,900,10,0)
^101.01PA^0^0
"KRN",101,900,15)
S VALMBG=$G(IB1ST("SYN")) S:'VALMBG VALMBG=1
"KRN",101,900,20)
S IBY=",9," D EA^IBCNSC1
"KRN",101,900,99)
59435,30008
"KRN",101,923,-1)
2^24
"KRN",101,923,0)
IBCNSC INSURANCE CO^Insurance Company Edit^^M^101001^^^^^^^200
"KRN",101,923,10,0)
^101.01PA^35^35
"KRN",101,923,10,24,0)
899^RE^24^
"KRN",101,923,10,24,"^")
IBCNSC INS CO REMARKS
"KRN",101,923,10,25,0)
900^SY^25^
"KRN",101,923,10,25,"^")
IBCNSC INS CO SYNONYMS
"KRN",101,923,10,33,0)
3287^ID^23^
"KRN",101,923,10,33,"^")
IBCNSC PROVIDER ID PARAMETERS
"KRN",101,923,10,34,0)
3865^PA^23^
"KRN",101,923,10,34,"^")
IBCNSC INS CO PAYER
"KRN",101,923,10,35,0)
4288^AC^22^
"KRN",101,923,10,35,"^")
IBCNSC INS CO ASSOCIATION
"KRN",101,1734,-1)
0^19
"KRN",101,1734,0)
IBCE EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,1734,1,0)
^101.06^2^2^3060105^^
"KRN",101,1734,1,1,0)
Allows the user to exit the system without quitting through the hierarchy
"KRN",101,1734,1,2,0)
of screens, or the user can exit to the previous screen.
"KRN",101,1734,2,0)
^101.02A^1^1
"KRN",101,1734,2,1,0)
EX
"KRN",101,1734,2,"B","EX",1)

"KRN",101,1734,4)
^^^EX
"KRN",101,1734,20)
D FASTEXIT^IBCEFG4
"KRN",101,1734,28)

"KRN",101,1734,99)
59842,44682
"KRN",101,3018,-1)
2^2
"KRN",101,3018,0)
IBCEM CLAIMS STATUS AWAITING^^^M^101001^^^^^^^
"KRN",101,3018,10,0)
^101.01PA^8^8
"KRN",101,3018,10,7,0)
4247^^70^
"KRN",101,3018,10,7,"^")
IBCEM CSA RE-SORT MESSAGES
"KRN",101,3018,10,8,0)
4264^^85^
"KRN",101,3018,10,8,"^")
IBCEM CSA MSG MAN
"KRN",101,3280,-1)
0^43
"KRN",101,3280,0)
IBCE PRVNUM EDIT^Edit an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3280,20)
D CHG1^IBCEP5A
"KRN",101,3280,99)
60239,52388
"KRN",101,3281,-1)
0^40
"KRN",101,3281,0)
IBCE PRVNUM ADD^Add an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3281,20)
D NEW^IBCEP5A($G(IBPRV),$G(IBINS))
"KRN",101,3281,99)
60239,52407
"KRN",101,3282,-1)
0^41
"KRN",101,3282,0)
IBCE PRVNUM DELETE^Delete an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3282,20)
D DEL1^IBCEP5A
"KRN",101,3282,99)
60239,52432
"KRN",101,3287,-1)
0^25
"KRN",101,3287,0)
IBCNSC PROVIDER ID PARAMETERS^Prov IDs/ID Param^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3287,4)
^^^ID
"KRN",101,3287,15)
S VALMBG=$G(IB1ST("PROVID")) S:'VALMBG VALMBG=1
"KRN",101,3287,20)
S IBY=",12," D EA^IBCNSC1
"KRN",101,3287,99)
60220,1594
"KRN",101,3288,-1)
3^47
"KRN",101,3288,0)
IBCE PRVINS ID^Insurance Co Prov ID Maintenance^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,3288,4)
26
"KRN",101,3288,10,0)
^101.01PA^12^12
"KRN",101,3288,10,4,0)
1734^^100^
"KRN",101,3288,10,4,"^")
IBCE EXIT
"KRN",101,3288,10,11,0)
3299^^60^
"KRN",101,3288,10,11,"^")
IBCE PRVINS DISPLAY PARAMS
"KRN",101,3288,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,3288,24)
I $$SCREEN^IBCEP0("ID")
"KRN",101,3288,26)
D SHOW^VALM
"KRN",101,3288,28)
Select Action: 
"KRN",101,3288,99)
60339,86217
"KRN",101,3292,-1)
0^55
"KRN",101,3292,0)
IBCE PRVFAC MAINT^Facility Provider ID Defaults^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,3292,4)
26
"KRN",101,3292,10,0)
^101.01PA^10^10
"KRN",101,3292,10,4,0)
1734^^100^
"KRN",101,3292,10,4,"^")
IBCE EXIT
"KRN",101,3292,10,5,0)
3293^^10^
"KRN",101,3292,10,5,"^")
IBCE PRVFAC EDIT
"KRN",101,3292,10,6,0)
4297^^5^
"KRN",101,3292,10,6,"^")
IBCE PRVFAC ADD
"KRN",101,3292,10,7,0)
4298^^15^
"KRN",101,3292,10,7,"^")
IBCE PRVFAC DEL
"KRN",101,3292,10,8,0)
4299^^20^
"KRN",101,3292,10,8,"^")
IBCE PRVFAC ADDITIONAL IDS
"KRN",101,3292,10,9,0)
4300^^25^
"KRN",101,3292,10,9,"^")
IBCE PRVFAC IDPARAM
"KRN",101,3292,10,10,0)
4301^^30^
"KRN",101,3292,10,10,"^")
IBCE PRVFAC VALFIDS
"KRN",101,3292,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,3292,24)
I $$SCREEN^IBCEP0("Additional")
"KRN",101,3292,26)
D SHOW^VALM
"KRN",101,3292,28)
Select Action: 
"KRN",101,3292,99)
60240,65566
"KRN",101,3293,-1)
0^53
"KRN",101,3293,0)
IBCE PRVFAC EDIT^Edit an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3293,20)
D EDIT1^IBCEP7
"KRN",101,3293,99)
60240,6896
"KRN",101,3299,-1)
0^58
"KRN",101,3299,0)
IBCE PRVINS DISPLAY PARAMS^Display Ins Co Params^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3299,15)
Q
"KRN",101,3299,20)
D EN^IBCEPB
"KRN",101,3299,99)
58919,37012
"KRN",101,3865,-1)
0^21
"KRN",101,3865,0)
IBCNSC INS CO PAYER^Payer^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,3865,4)
^^^PA
"KRN",101,3865,15)
S VALMBG=$G(IB1ST("PAYER")) S:'VALMBG VALMBG=1
"KRN",101,3865,20)
S IBY=",7," D EA^IBCNSC1
"KRN",101,3865,99)
59435,30009
"KRN",101,4054,-1)
0^32
"KRN",101,4054,0)
IBCE VIEW PREV TRANS EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4054,1,0)
^^2^2^2960221^
"KRN",101,4054,1,1,0)
Allows the user to exit the system without quitting through the hierarchy
"KRN",101,4054,1,2,0)
of screens, or the user can exit to the previous screen.
"KRN",101,4054,2,0)
^101.02A^^0
"KRN",101,4054,4)
^^^EX
"KRN",101,4054,20)
D CKSENT^IBCEPTC3(.VALMBCK)
"KRN",101,4054,28)

"KRN",101,4054,99)
60255,45935
"KRN",101,4056,-1)
0^35
"KRN",101,4056,0)
IBCE VIEW PREV TRANS SELECT^Claim(s) Select/De-select^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4056,1,0)
^101.06^1^1^3050210^^^
"KRN",101,4056,1,1,0)
Allows selection of claims in the list to be resubmitted.
"KRN",101,4056,2,0)
^101.02A^^0
"KRN",101,4056,4)
^^^
"KRN",101,4056,20)
D SELECT^IBCEPTC3
"KRN",101,4056,99)
60255,45935
"KRN",101,4057,-1)
0^34
"KRN",101,4057,0)
IBCE VIEW PREV TRANS RESUB^Resubmit Claims^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4057,1,0)
^101.06^1^1^3050124^^^
"KRN",101,4057,1,1,0)
Resubmits previously transmitted claims selected from the list.
"KRN",101,4057,4)
^^^RC
"KRN",101,4057,20)
D RESUB^IBCEPTC3
"KRN",101,4057,99)
60255,45935
"KRN",101,4058,-1)
0^33
"KRN",101,4058,0)
IBCE VIEW PREV TRANS REPORT^Print Report^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4058,1,0)
^101.06^1^1^3050210^^^^
"KRN",101,4058,1,1,0)
Prints the report for the list of claims in the display.
"KRN",101,4058,4)
^^^
"KRN",101,4058,20)
D REPORT^IBCEPTC3
"KRN",101,4058,99)
60255,45935
"KRN",101,4059,-1)
0^30
"KRN",101,4059,0)
IBCE VIEW PREV TRANS^View Claims Selected^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4059,1,0)
^101.06^2^2^3050124^^^^
"KRN",101,4059,1,1,0)
Displays all claims already selected but not yet resubmitted.
"KRN",101,4059,1,2,0)
Allows deletion of claims that are no longer desired to be resubmitted.
"KRN",101,4059,4)
^^^VC
"KRN",101,4059,20)
D VIEW^IBCEPTC3
"KRN",101,4059,99)
60255,45935
"KRN",101,4060,-1)
0^31
"KRN",101,4060,0)
IBCE VIEW PREV TRANS BTCH SEL^Batch Select/De-select^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4060,1,0)
^101.06^2^2^3050210^^^
"KRN",101,4060,1,1,0)
Allows selection of a batch where all claims in the batch are automatically
"KRN",101,4060,1,2,0)
selected to be resubmitted.
"KRN",101,4060,4)
^^^
"KRN",101,4060,20)
D SELBATCH^IBCEPTC3
"KRN",101,4060,99)
60255,45935
"KRN",101,4247,-1)
0^1
"KRN",101,4247,0)
IBCEM CSA RE-SORT MESSAGES^ReSort Messages^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4247,1,0)
^^2^2^3050916^
"KRN",101,4247,1,1,0)
This action allows the user to re-sort the CSA status messages in the 
"KRN",101,4247,1,2,0)
list without exiting the option.  IB patch 320 added this.
"KRN",101,4247,20)
D RESORT^IBCECSA3
"KRN",101,4247,99)
60159,62949
"KRN",101,4248,-1)
0^5
"KRN",101,4248,0)
IBCEMC CHANGE MESSAGE SEARCH CRITERIA^Message Search^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4248,1,0)
^101.06^4^4^3050922^^
"KRN",101,4248,1,1,0)
This action provides the user the ability to modify the search/selection 
"KRN",101,4248,1,2,0)
criteria to limit the number of status messages that are 
"KRN",101,4248,1,3,0)
displayed and pre-selected by choosing specific status message 
"KRN",101,4248,1,4,0)
information.
"KRN",101,4248,20)
D SCREEN^IBCEMCA
"KRN",101,4248,99)
60200,51909
"KRN",101,4249,-1)
0^12
"KRN",101,4249,0)
IBCEMC SELECT & DESELECT MESSAGES^Select/Deselect Claims^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4249,1,0)
^^3^3^3050922^
"KRN",101,4249,1,1,0)
This action allows the users to toggle the selection and de-selection of 
"KRN",101,4249,1,2,0)
the status messages which are displayed in the list.  Selected messages 
"KRN",101,4249,1,3,0)
will have an asterisk next to the claim number.
"KRN",101,4249,20)
D TOGGLE^IBCEMCA
"KRN",101,4249,99)
60200,51909
"KRN",101,4250,-1)
0^7
"KRN",101,4250,0)
IBCEMC EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4250,1,0)
^^1^1^3050922^
"KRN",101,4250,1,1,0)
This action quits the list.
"KRN",101,4250,20)
S VALMBCK="Q"
"KRN",101,4250,99)
60200,51909
"KRN",101,4251,-1)
0^11
"KRN",101,4251,0)
IBCEMC REVIEW STATUS^Change Review Status^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4251,1,0)
^^2^2^3050922^
"KRN",101,4251,1,1,0)
This action allows the user to update the review status of multiple 
"KRN",101,4251,1,2,0)
claims status messages.
"KRN",101,4251,20)
D REVSTAT^IBCEMCA1
"KRN",101,4251,99)
60200,51909
"KRN",101,4252,-1)
0^4
"KRN",101,4252,0)
IBCEMC CANCEL^Cancel Claims^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4252,1,0)
^^1^1^3050922^
"KRN",101,4252,1,1,0)
This action allows the user to cancel multiple claims.
"KRN",101,4252,20)
D CANCEL^IBCEMCA2
"KRN",101,4252,99)
60200,51909
"KRN",101,4253,-1)
0^6
"KRN",101,4253,0)
IBCEMC COMMENT^Enter Comments^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4253,1,0)
^^2^2^3050922^
"KRN",101,4253,1,1,0)
This action allows the user to enter the same comment for multiple claims 
"KRN",101,4253,1,2,0)
status messages.
"KRN",101,4253,20)
D COMMENT^IBCEMCA1
"KRN",101,4253,99)
60200,51909
"KRN",101,4254,-1)
0^9
"KRN",101,4254,0)
IBCEMC PRINT^Resubmit by Print^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4254,1,0)
^^1^1^3050922^
"KRN",101,4254,1,1,0)
This action allows the user to Print multiple claims from the MCS list.
"KRN",101,4254,20)
D PRINT^IBCEMCA3
"KRN",101,4254,99)
60200,51909
"KRN",101,4255,-1)
0^10
"KRN",101,4255,0)
IBCEMC RETRANSMIT^Retransmit Claims^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4255,1,0)
^^2^2^3050922^
"KRN",101,4255,1,1,0)
This action allows the user to retransmit multiple claims from the MCS 
"KRN",101,4255,1,2,0)
list.
"KRN",101,4255,20)
D RETRAN^IBCEMCA1
"KRN",101,4255,99)
60200,51909
"KRN",101,4256,-1)
0^8
"KRN",101,4256,0)
IBCEMC MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4256,1,0)
^^2^2^3050922^
"KRN",101,4256,1,1,0)
This is the main menu protocol for the MCS - Multiple CSA Message 
"KRN",101,4256,1,2,0)
Management.
"KRN",101,4256,4)
26
"KRN",101,4256,10,0)
^101.01PA^8^8
"KRN",101,4256,10,1,0)
4248^^10^
"KRN",101,4256,10,1,"^")
IBCEMC CHANGE MESSAGE SEARCH CRITERIA
"KRN",101,4256,10,2,0)
4251^^20^
"KRN",101,4256,10,2,"^")
IBCEMC REVIEW STATUS
"KRN",101,4256,10,3,0)
4252^^30^
"KRN",101,4256,10,3,"^")
IBCEMC CANCEL
"KRN",101,4256,10,4,0)
4253^^40^
"KRN",101,4256,10,4,"^")
IBCEMC COMMENT
"KRN",101,4256,10,5,0)
4254^^50^
"KRN",101,4256,10,5,"^")
IBCEMC PRINT
"KRN",101,4256,10,6,0)
4255^^60^
"KRN",101,4256,10,6,"^")
IBCEMC RETRANSMIT
"KRN",101,4256,10,7,0)
4249^^70^
"KRN",101,4256,10,7,"^")
IBCEMC SELECT & DESELECT MESSAGES
"KRN",101,4256,10,8,0)
4250^^80^
"KRN",101,4256,10,8,"^")
IBCEMC EXIT
"KRN",101,4256,26)
D SHOW^VALM
"KRN",101,4256,28)
Select Action: 
"KRN",101,4256,99)
60200,51909
"KRN",101,4257,-1)
0^14
"KRN",101,4257,0)
IBCE PRVNVA PROVINFO^Provider Info^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4257,15)
Q
"KRN",101,4257,20)
D EDIT1^IBCEP8($G(IBNPRV))
"KRN",101,4257,99)
60184,47641
"KRN",101,4258,-1)
0^65
"KRN",101,4258,0)
IBCE PRVNVA SECIDS^Secondary ID Maint^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4258,15)
Q
"KRN",101,4258,20)
D EDITID^IBCEP8($G(IBNPRV))
"KRN",101,4258,99)
60184,47716
"KRN",101,4259,-1)
0^15
"KRN",101,4259,0)
IBCE PRVNVA NONIND MAINT^Non-VA Lab or Facility Maint^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4259,4)
25
"KRN",101,4259,10,0)
^101.01PA^3^3
"KRN",101,4259,10,1,0)
1734^^100^
"KRN",101,4259,10,1,"^")
IBCE EXIT
"KRN",101,4259,10,2,0)
4257^^2^
"KRN",101,4259,10,2,"^")
IBCE PRVNVA PROVINFO
"KRN",101,4259,10,3,0)
4258^^10^
"KRN",101,4259,10,3,"^")
IBCE PRVNVA SECIDS
"KRN",101,4259,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4259,26)
D SHOW^VALM
"KRN",101,4259,28)
Select Action: 
"KRN",101,4259,99)
60184,49308
"KRN",101,4260,-1)
0^36
"KRN",101,4260,0)
IBCE PRVNVA LOF ADD^Add Secondary ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4260,20)
D NEW^IBCEP5A($G(IBPRV),$G(IBINS))
"KRN",101,4260,99)
60184,58421
"KRN",101,4261,-1)
0^37
"KRN",101,4261,0)
IBCE PRVNVA LOF EDIT^Edit Secondary ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4261,20)
D CHG1^IBCEP5A
"KRN",101,4261,99)
60184,58494
"KRN",101,4262,-1)
0^38
"KRN",101,4262,0)
IBCE PRVNVA LOF DELETE^Delete Provider ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4262,20)
D DEL1^IBCEP5A
"KRN",101,4262,99)
60184,58548
"KRN",101,4263,-1)
0^39
"KRN",101,4263,0)
IBCE PRVNVA LOF MAINT^Secondary ID Maintenance^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4263,4)
35
"KRN",101,4263,10,0)
^101.01PA^4^4
"KRN",101,4263,10,1,0)
4260^^5^
"KRN",101,4263,10,1,"^")
IBCE PRVNVA LOF ADD
"KRN",101,4263,10,2,0)
4261^^10^
"KRN",101,4263,10,2,"^")
IBCE PRVNVA LOF EDIT
"KRN",101,4263,10,3,0)
4262^^15^
"KRN",101,4263,10,3,"^")
IBCE PRVNVA LOF DELETE
"KRN",101,4263,10,4,0)
1734^^100^
"KRN",101,4263,10,4,"^")
IBCE EXIT
"KRN",101,4263,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4263,26)
D SHOW^VALM
"KRN",101,4263,28)
Select Action: 
"KRN",101,4263,99)
60184,60618
"KRN",101,4264,-1)
0^3
"KRN",101,4264,0)
IBCEM CSA MSG MAN^Multiple Status Messages^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4264,20)
D MCS^IBCECSA3
"KRN",101,4264,99)
60200,51909
"KRN",101,4285,-1)
0^16
"KRN",101,4285,0)
IBCE 2ND PRVCARE ADD^Add^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4285,20)
D NEW^IBCEPA
"KRN",101,4285,99)
60197,48046
"KRN",101,4286,-1)
0^17
"KRN",101,4286,0)
IBCE 2ND PRVCARE EDIT^Edit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4286,20)
D CHANGE^IBCEPA
"KRN",101,4286,99)
60243,63838
"KRN",101,4287,-1)
0^18
"KRN",101,4287,0)
IBCE 2ND PRVCARE MENU^Provider Secondary ID Care Unit Menu^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4287,4)
35
"KRN",101,4287,10,0)
^101.01PA^4^4
"KRN",101,4287,10,1,0)
4285^^1^
"KRN",101,4287,10,1,"^")
IBCE 2ND PRVCARE ADD
"KRN",101,4287,10,2,0)
4286^^5^
"KRN",101,4287,10,2,"^")
IBCE 2ND PRVCARE EDIT
"KRN",101,4287,10,3,0)
1734^^50^
"KRN",101,4287,10,3,"^")
IBCE EXIT
"KRN",101,4287,10,4,0)
4302^^15^
"KRN",101,4287,10,4,"^")
IBCE 2ND PRVCARE DELETE
"KRN",101,4287,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4287,26)
D SHOW^VALM
"KRN",101,4287,28)
Select Action: 
"KRN",101,4287,99)
60243,64052
"KRN",101,4288,-1)
0^20
"KRN",101,4288,0)
IBCNSC INS CO ASSOCIATION^Associate Companies^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4288,15)
S VALMBG=54
"KRN",101,4288,20)
S IBY=",13," D EA^IBCNSC1
"KRN",101,4288,99)
60206,64348
"KRN",101,4289,-1)
0^26
"KRN",101,4289,0)
IBCNSL EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4289,20)
S VALMBCK="Q"
"KRN",101,4289,99)
60211,61335
"KRN",101,4290,-1)
0^28
"KRN",101,4290,0)
IBCNSL MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4290,4)
39
"KRN",101,4290,10,0)
^101.01PA^3^3
"KRN",101,4290,10,1,0)
4289^^30^
"KRN",101,4290,10,1,"^")
IBCNSL EXIT
"KRN",101,4290,10,2,0)
4291^^10^
"KRN",101,4290,10,2,"^")
IBCNSL LINK
"KRN",101,4290,10,3,0)
4292^^20^
"KRN",101,4290,10,3,"^")
IBCNSL UNLINK
"KRN",101,4290,26)
D SHOW^VALM
"KRN",101,4290,28)
Select Action: 
"KRN",101,4290,99)
60218,53884
"KRN",101,4291,-1)
0^27
"KRN",101,4291,0)
IBCNSL LINK^Associate Companies^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4291,20)
D LINK^IBCNSC02
"KRN",101,4291,99)
60218,53719
"KRN",101,4292,-1)
0^29
"KRN",101,4292,0)
IBCNSL UNLINK^Disassociate Companies^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4292,20)
D UNLINK^IBCNSC02
"KRN",101,4292,99)
60218,53779
"KRN",101,4295,-1)
0^42
"KRN",101,4295,0)
IBCE PRVNUM EXIT^Exit^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4295,20)
D FASTEXIT^IBCEFG4
"KRN",101,4295,99)
60234,51223
"KRN",101,4296,-1)
0^48
"KRN",101,4296,0)
IBCE PRVINS MAINT^Provide ID Maint by Insurance^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4296,4)
26
"KRN",101,4296,10,0)
^101.01PA^5^4
"KRN",101,4296,10,1,0)
3281^^5^
"KRN",101,4296,10,1,"^")
IBCE PRVNUM ADD
"KRN",101,4296,10,2,0)
3280^^10^
"KRN",101,4296,10,2,"^")
IBCE PRVNUM EDIT
"KRN",101,4296,10,3,0)
3282^^15^
"KRN",101,4296,10,3,"^")
IBCE PRVNUM DELETE
"KRN",101,4296,10,5,0)
4295^^100^
"KRN",101,4296,10,5,"^")
IBCE PRVNUM EXIT
"KRN",101,4296,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4296,26)
D SHOW^VALM
"KRN",101,4296,28)
Select Action: 
"KRN",101,4296,99)
60339,83974
"KRN",101,4297,-1)
0^49
"KRN",101,4297,0)
IBCE PRVFAC ADD^Add an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4297,20)
D ADD1^IBCEP7
"KRN",101,4297,99)
60240,6927
"KRN",101,4298,-1)
0^52
"KRN",101,4298,0)
IBCE PRVFAC DEL^Delete an ID^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4298,20)
D DEL1^IBCEP7
"KRN",101,4298,99)
60240,6997
"KRN",101,4299,-1)
0^51
"KRN",101,4299,0)
IBCE PRVFAC ADDITIONAL IDS^Additional IDs^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4299,20)
D ADDID^IBCEP7A
"KRN",101,4299,99)
60240,55687
"KRN",101,4300,-1)
0^54
"KRN",101,4300,0)
IBCE PRVFAC IDPARAM^ID Parameters^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4300,20)
D IDPARAM^IBCEP7A
"KRN",101,4300,99)
60240,65309
"KRN",101,4301,-1)
0^57
"KRN",101,4301,0)
IBCE PRVFAC VALFIDS^VA-Lab/Facilitiy IDs^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4301,20)
D VALFIDS^IBCEP7A
"KRN",101,4301,99)
60240,65393
"KRN",101,4302,-1)
0^45
"KRN",101,4302,0)
IBCE 2ND PRVCARE DELETE^Delete^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4302,20)
D DEL^IBCEPA
"KRN",101,4302,99)
60243,63908
"KRN",101,4304,-1)
0^50
"KRN",101,4304,0)
IBCE PRVFAC ADDIDS MAINT^Additional Facility Secondary IDs^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4304,4)
38
"KRN",101,4304,10,0)
^101.01PA^4^4
"KRN",101,4304,10,1,0)
4297^^5^
"KRN",101,4304,10,1,"^")
IBCE PRVFAC ADD
"KRN",101,4304,10,2,0)
3293^^10^
"KRN",101,4304,10,2,"^")
IBCE PRVFAC EDIT
"KRN",101,4304,10,3,0)
4298^^15^
"KRN",101,4304,10,3,"^")
IBCE PRVFAC DEL
"KRN",101,4304,10,4,0)
1734^^100^
"KRN",101,4304,10,4,"^")
IBCE EXIT
"KRN",101,4304,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4304,24)

"KRN",101,4304,26)
D SHOW^VALM
"KRN",101,4304,28)
Select Action: 
"KRN",101,4304,99)
60341,932
"KRN",101,4305,-1)
0^64
"KRN",101,4305,0)
IBCE INSCO ID MAINT MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4305,4)
35
"KRN",101,4305,10,0)
^101.01PA^3^3
"KRN",101,4305,10,1,0)
4306^^5^
"KRN",101,4305,10,1,"^")
IBCE INSCO ID MAINT EDIT PARAMS
"KRN",101,4305,10,2,0)
1734^^99^
"KRN",101,4305,10,2,"^")
IBCE EXIT
"KRN",101,4305,10,3,0)
4310^^10^
"KRN",101,4305,10,3,"^")
IBCE INSCO ID MAINT BILL PROV
"KRN",101,4305,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4305,26)
D SHOW^VALM
"KRN",101,4305,28)
Select Action: 
"KRN",101,4305,99)
60256,12092
"KRN",101,4306,-1)
0^63
"KRN",101,4306,0)
IBCE INSCO ID MAINT EDIT PARAMS^Edit Params^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4306,20)
D IDPARAM^IBCEPB
"KRN",101,4306,99)
60256,9206
"KRN",101,4307,-1)
0^59
"KRN",101,4307,0)
IBCE INSCO BILL PROV MAINT ADD^Add Plan^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4307,20)
D ADD^IBCEPC
"KRN",101,4307,99)
60256,11231
"KRN",101,4308,-1)
0^60
"KRN",101,4308,0)
IBCE INSCO BILL PROV MAINT DEL^Delete Plan^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4308,20)
D DEL^IBCEPC
"KRN",101,4308,99)
60256,11302
"KRN",101,4309,-1)
0^61
"KRN",101,4309,0)
IBCE INSCO BILL PROV MAINT MENU^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4309,4)
25
"KRN",101,4309,10,0)
^101.01PA^3^3
"KRN",101,4309,10,1,0)
4307^^5^
"KRN",101,4309,10,1,"^")
IBCE INSCO BILL PROV MAINT ADD
"KRN",101,4309,10,2,0)
4308^^10^
"KRN",101,4309,10,2,"^")
IBCE INSCO BILL PROV MAINT DEL
"KRN",101,4309,10,3,0)
1734^^99^
"KRN",101,4309,10,3,"^")
IBCE EXIT
"KRN",101,4309,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4309,26)
D SHOW^VALM
"KRN",101,4309,28)
Select Action: 
"KRN",101,4309,99)
60256,12098
"KRN",101,4310,-1)
0^62
"KRN",101,4310,0)
IBCE INSCO ID MAINT BILL PROV^Edit Billing Prov Params^^A^^^^^^^^INTEGRATED BILLING
"KRN",101,4310,20)
D BILLPRVP^IBCEPB
"KRN",101,4310,99)
60256,11839
"KRN",101,4311,-1)
0^56
"KRN",101,4311,0)
IBCE PRVFAC VALF MAINT^^^M^^^^^^^^INTEGRATED BILLING
"KRN",101,4311,4)
38
"KRN",101,4311,10,0)
^101.01PA^4^4
"KRN",101,4311,10,1,0)
4297^^5^
"KRN",101,4311,10,1,"^")
IBCE PRVFAC ADD
"KRN",101,4311,10,2,0)
3293^^10^
"KRN",101,4311,10,2,"^")
IBCE PRVFAC EDIT
"KRN",101,4311,10,3,0)
4298^^15^
"KRN",101,4311,10,3,"^")
IBCE PRVFAC DEL
"KRN",101,4311,10,4,0)
1734^^99^
"KRN",101,4311,10,4,"^")
IBCE EXIT
"KRN",101,4311,15)
I $G(IBFASTXT) S VALMBCK="Q"
"KRN",101,4311,26)
D SHOW^VALM
"KRN",101,4311,28)
Select Action: 
"KRN",101,4311,99)
60261,71352
"KRN",409.61,506,-1)
0^1
"KRN",409.61,506,0)
IBCEM CSA LIST^1^^80^4^20^1^1^Claims Status^IBCEM CLAIMS STATUS AWAITING^Claims Status Awaiting List^^^
"KRN",409.61,506,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,506,"ARRAY")
 ^TMP("IBCECSA",$J)
"KRN",409.61,506,"COL",0)
^409.621^7^7
"KRN",409.61,506,"COL",1,0)
NUMBER^1^4^^^0
"KRN",409.61,506,"COL",2,0)
BILL^6^8^Bill #^^0
"KRN",409.61,506,"COL",3,0)
PNAME^15^18^Payer Name^^0
"KRN",409.61,506,"COL",4,0)
PANAME^35^20^Patient Name^^0
"KRN",409.61,506,"COL",5,0)
SSN^56^4^ SSN^^0
"KRN",409.61,506,"COL",6,0)
SERVICE^62^8^Svc Date^^0
"KRN",409.61,506,"COL",7,0)
CURBAL^71^10^  Curr Bal^^0
"KRN",409.61,506,"COL","AIDENT",0,1)

"KRN",409.61,506,"COL","AIDENT",0,2)

"KRN",409.61,506,"COL","AIDENT",0,3)

"KRN",409.61,506,"COL","AIDENT",0,4)

"KRN",409.61,506,"COL","AIDENT",0,5)

"KRN",409.61,506,"COL","AIDENT",0,6)

"KRN",409.61,506,"COL","AIDENT",0,7)

"KRN",409.61,506,"COL","B","BILL",2)

"KRN",409.61,506,"COL","B","CURBAL",7)

"KRN",409.61,506,"COL","B","NUMBER",1)

"KRN",409.61,506,"COL","B","PANAME",4)

"KRN",409.61,506,"COL","B","PNAME",3)

"KRN",409.61,506,"COL","B","SERVICE",6)

"KRN",409.61,506,"COL","B","SSN",5)

"KRN",409.61,506,"FNL")
D EXIT^IBCECSA
"KRN",409.61,506,"HDR")
D HDR^IBCECSA
"KRN",409.61,506,"HLP")
D HELP^IBCECSA
"KRN",409.61,506,"INIT")
D INIT^IBCECSA
"KRN",409.61,507,-1)
0^2
"KRN",409.61,507,0)
IBCEM CSA MSG^1^^80^6^18^1^1^Claims Status^IBCEM CSA MSG MENU^Claims Status Awaiting^1^^1
"KRN",409.61,507,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,507,"ARRAY")
 ^TMP("IBCECSC",$J)
"KRN",409.61,507,"COL",0)
^409.621^6^6
"KRN",409.61,507,"COL",1,0)
BILL^6^8^Bill #
"KRN",409.61,507,"COL",2,0)
PNAME^15^18^Payer Name
"KRN",409.61,507,"COL",3,0)
PANAME^35^20^Patient Name
"KRN",409.61,507,"COL",4,0)
SSN^56^4^ SSN
"KRN",409.61,507,"COL",5,0)
SERVICE^62^8^Svc Date
"KRN",409.61,507,"COL",6,0)
CURBAL^71^10^  Curr Bal
"KRN",409.61,507,"COL","B","BILL",1)

"KRN",409.61,507,"COL","B","CURBAL",6)

"KRN",409.61,507,"COL","B","PANAME",3)

"KRN",409.61,507,"COL","B","PNAME",2)

"KRN",409.61,507,"COL","B","SERVICE",5)

"KRN",409.61,507,"COL","B","SSN",4)

"KRN",409.61,507,"FNL")
D EXIT^IBCECSA2
"KRN",409.61,507,"HDR")
D HDR^IBCECSA2
"KRN",409.61,507,"HLP")
D HELP^IBCECSA2
"KRN",409.61,507,"INIT")
D INIT^IBCECSA2
"KRN",409.61,543,-1)
0^10
"KRN",409.61,543,0)
IBCE PRVPRV MAINT^1^^80^6^18^1^1^Performing Provider ID^IBCE PRVPRV MAINT^Performing Provider ID^1^^1
"KRN",409.61,543,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,543,"ARRAY")
 ^TMP("IBPRV_",$J)
"KRN",409.61,543,"COL",0)
^409.621^6^5
"KRN",409.61,543,"COL",1,0)
IDTYPE^6^20^ID Qualifier
"KRN",409.61,543,"COL",2,0)
FORMTYPE^28^5^Form
"KRN",409.61,543,"COL",3,0)
CARETYPE^35^10^Care Type
"KRN",409.61,543,"COL",5,0)
PROVID^64^15^ID #
"KRN",409.61,543,"COL",6,0)
CAREUNIT^48^15^Care Unit
"KRN",409.61,543,"COL","B","CARETYPE",3)

"KRN",409.61,543,"COL","B","CAREUNIT",6)

"KRN",409.61,543,"COL","B","FORMTYPE",2)

"KRN",409.61,543,"COL","B","IDTYPE",1)

"KRN",409.61,543,"COL","B","PROVID",5)

"KRN",409.61,543,"EXP")
D EXPND^IBCEP5
"KRN",409.61,543,"FNL")
D EXIT^IBCEP5
"KRN",409.61,543,"HDR")
D HDR^IBCEP5
"KRN",409.61,543,"HLP")
D HELP^IBCEP5
"KRN",409.61,543,"INIT")
D INIT^IBCEP5
"KRN",409.61,545,-1)
0^4
"KRN",409.61,545,0)
IBCE PRVMAINT^1^^80^3^19^1^1^EDIT OPTION^IBCE PRVMAINT^Provider ID Maintenance^1^^1
"KRN",409.61,545,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,545,"ARRAY")
 ^TMP("IBCE_PRVMAINT_MENU",$J)
"KRN",409.61,545,"FNL")
D EXIT^IBCEP6
"KRN",409.61,545,"HDR")
D HDR^IBCEP6
"KRN",409.61,545,"HLP")
D HELP^IBCEP6
"KRN",409.61,545,"INIT")
D INIT^IBCEP6
"KRN",409.61,546,-1)
0^11
"KRN",409.61,546,0)
IBCE PRVFAC MAINT^1^^80^5^18^1^1^Billing Provider IDs^IBCE PRVFAC MAINT^Billing Provider IDs^1^^1
"KRN",409.61,546,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,546,"ARRAY")
 ^TMP("IBCE_PRVFAC_MAINT",$J)
"KRN",409.61,546,"COL",0)
^409.621^3^3
"KRN",409.61,546,"COL",1,0)
PTYPE^6^25^ID Qualifier
"KRN",409.61,546,"COL",2,0)
PID^34^15^ID #
"KRN",409.61,546,"COL",3,0)
SPEC^51^28^Form Type
"KRN",409.61,546,"COL","B","PID",2)

"KRN",409.61,546,"COL","B","PTYPE",1)

"KRN",409.61,546,"COL","B","SPEC",3)

"KRN",409.61,546,"EXP")
D EXPND^IBCEP7
"KRN",409.61,546,"FNL")
D EXIT^IBCEP7
"KRN",409.61,546,"HDR")
D HDR^IBCEP7
"KRN",409.61,546,"HLP")
D HELP^IBCEP7
"KRN",409.61,546,"INIT")
D INIT^IBCEP7
"KRN",409.61,547,-1)
0^5
"KRN",409.61,547,0)
IBCE PRVNVA MAINT^1^^80^4^18^1^1^Non-VA Provider^IBCE PRVNVA MAINT^NON-VA PROVIDER INFORMATION^1^^1
"KRN",409.61,547,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,547,"ARRAY")
 ^TMP("IBPRV_PRVNVA_MAINT",$J)
"KRN",409.61,547,"COL",0)
^409.621^^0
"KRN",409.61,547,"EXP")
D EXPND^IBCEP8
"KRN",409.61,547,"FNL")
D EXIT^IBCEP8
"KRN",409.61,547,"HDR")
D HDR^IBCEP8
"KRN",409.61,547,"HLP")
D HELP^IBCEP8
"KRN",409.61,547,"INIT")
D INIT^IBCEP8
"KRN",409.61,714,-1)
0^9
"KRN",409.61,714,0)
IBCE VIEW PREV TRANS2^1^^126^7^19^1^1^CLAIM^IBCE VIEW PREV TRANS MENU^PREVIOUSLY TRANSMITTED CLAIMS^1^^1
"KRN",409.61,714,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,714,"ARRAY")
 ^TMP("IB_PREV_CLAIM_LIST",$J)
"KRN",409.61,714,"COL",0)
^409.621^11^11
"KRN",409.61,714,"COL",1,0)
CLAIM^7^9^Claim #^^1
"KRN",409.61,714,"COL",2,0)
FORM^17^4^Form
"KRN",409.61,714,"COL",3,0)
TYPE^22^5^Type
"KRN",409.61,714,"COL",4,0)
SEQ^27^3^Seq
"KRN",409.61,714,"COL",5,0)
STATUS^32^11^Status
"KRN",409.61,714,"COL",6,0)
OTHER_PAYERS^51^18^Other Payer(s)
"KRN",409.61,714,"COL",7,0)
LAST_TRANSMIT^93^13^Last Transmit
"KRN",409.61,714,"COL",8,0)
BATCH^110^12^Batch Number
"KRN",409.61,714,"COL",9,0)
NUMBER^1^6^ #
"KRN",409.61,714,"COL",10,0)
ARSTAT^44^4^A/R
"KRN",409.61,714,"COL",11,0)
PATIENTNAME^71^18^Patient Name
"KRN",409.61,714,"COL","AIDENT",1,1)

"KRN",409.61,714,"COL","B","ARSTAT",10)

"KRN",409.61,714,"COL","B","BATCH",8)

"KRN",409.61,714,"COL","B","CLAIM",1)

"KRN",409.61,714,"COL","B","FORM",2)

"KRN",409.61,714,"COL","B","LAST_TRANSMIT",7)

"KRN",409.61,714,"COL","B","NUMBER",9)

"KRN",409.61,714,"COL","B","OTHER_PAYERS",6)

"KRN",409.61,714,"COL","B","PATIENTNAME",11)

"KRN",409.61,714,"COL","B","SEQ",4)

"KRN",409.61,714,"COL","B","STATUS",5)

"KRN",409.61,714,"COL","B","TYPE",3)

"KRN",409.61,714,"FNL")
D EXIT^IBCEPTC2
"KRN",409.61,714,"HDR")
D HDR^IBCEPTC2
"KRN",409.61,714,"HLP")
Q
"KRN",409.61,714,"INIT")
D INIT^IBCEPTC2
"KRN",409.61,715,-1)
0^8
"KRN",409.61,715,0)
IBCE VIEW PREV TRANS1^1^^143^6^19^1^1^CLAIM^IBCE VIEW PREV TRANS MENU^PREVIOUSLY TRANSMITTED CLAIMS^1^^1
"KRN",409.61,715,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,715,"ARRAY")
 ^TMP("IB_PREV_CLAIM_LIST",$J)
"KRN",409.61,715,"COL",0)
^409.621^11^11
"KRN",409.61,715,"COL",1,0)
CLAIM^7^9^Claim #^^1
"KRN",409.61,715,"COL",2,0)
FORM^17^4^Form
"KRN",409.61,715,"COL",3,0)
TYPE^22^5^Type
"KRN",409.61,715,"COL",4,0)
SEQ^27^3^Seq
"KRN",409.61,715,"COL",5,0)
STATUS^32^11^Status
"KRN",409.61,715,"COL",6,0)
CURRENT_PAYER^49^25^Current Payer
"KRN",409.61,715,"COL",7,0)
PAYER_ADDRESS^75^29^Payer Address
"KRN",409.61,715,"COL",8,0)
OTHER_PAYERS^105^15^Other Payer(s)
"KRN",409.61,715,"COL",9,0)
NUMBER^1^6^ #
"KRN",409.61,715,"COL",10,0)
ARSTAT^44^4^A/R
"KRN",409.61,715,"COL",11,0)
PATIENTNAME^121^18^Patient Name
"KRN",409.61,715,"COL","AIDENT",1,1)

"KRN",409.61,715,"COL","B","ARSTAT",10)

"KRN",409.61,715,"COL","B","CLAIM",1)

"KRN",409.61,715,"COL","B","CURRENT_PAYER",6)

"KRN",409.61,715,"COL","B","FORM",2)

"KRN",409.61,715,"COL","B","NUMBER",9)

"KRN",409.61,715,"COL","B","OTHER_PAYERS",8)

"KRN",409.61,715,"COL","B","PATIENTNAME",11)

"KRN",409.61,715,"COL","B","PAYER_ADDRESS",7)

"KRN",409.61,715,"COL","B","SEQ",4)

"KRN",409.61,715,"COL","B","STATUS",5)

"KRN",409.61,715,"COL","B","TYPE",3)

"KRN",409.61,715,"FNL")
D EXIT^IBCEPTC2
"KRN",409.61,715,"HDR")
D HDR^IBCEPTC2
"KRN",409.61,715,"HLP")
Q
"KRN",409.61,715,"INIT")
D INIT^IBCEPTC2
"KRN",409.61,744,-1)
0^3
"KRN",409.61,744,0)
IBCEMC MCS MESSAGE LIST^1^^80^5^19^1^1^EDI Status Message^IBCEMC MENU^Multiple CSA Msg Management^1^^1
"KRN",409.61,744,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,744,"ARRAY")
 ^TMP($J,"IBCEMCL",2)
"KRN",409.61,744,"COL",0)
^409.621^8^8
"KRN",409.61,744,"COL",1,0)
NUMBER^1^5
"KRN",409.61,744,"COL",2,0)
SELECTED^6^1
"KRN",409.61,744,"COL",3,0)
BILL^7^8^Bill #
"KRN",409.61,744,"COL",4,0)
PAYER^16^18^Payer Name
"KRN",409.61,744,"COL",5,0)
PATIENT^36^19^Patient Name
"KRN",409.61,744,"COL",6,0)
SSN^56^4^ SSN
"KRN",409.61,744,"COL",7,0)
SERVICE^62^8^Svc Date
"KRN",409.61,744,"COL",8,0)
CURBAL^71^10^  Curr Bal
"KRN",409.61,744,"COL","B","BILL",3)

"KRN",409.61,744,"COL","B","CURBAL",8)

"KRN",409.61,744,"COL","B","NUMBER",1)

"KRN",409.61,744,"COL","B","PATIENT",5)

"KRN",409.61,744,"COL","B","PAYER",4)

"KRN",409.61,744,"COL","B","SELECTED",2)

"KRN",409.61,744,"COL","B","SERVICE",7)

"KRN",409.61,744,"COL","B","SSN",6)

"KRN",409.61,744,"FNL")
D EXIT^IBCEMCL
"KRN",409.61,744,"HDR")
D HDR^IBCEMCL
"KRN",409.61,744,"HLP")
D HELP^IBCEMCL
"KRN",409.61,744,"INIT")
D INIT^IBCEMCL
"KRN",409.61,749,-1)
0^6
"KRN",409.61,749,0)
IBCE 2ND PRVID CARE UNIT MAINT^1^^80^6^18^0^1^CARE UNITS^IBCE 2ND PRVCARE MENU^Care Units - Billing Provider^1^^1
"KRN",409.61,749,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,749,"COL",0)
^409.621^3^2
"KRN",409.61,749,"COL",1,0)
Care Unit Name^3^35^Care Unit Name
"KRN",409.61,749,"COL",3,0)
Description^40^35^Description
"KRN",409.61,749,"COL","B","Care Unit Name",1)

"KRN",409.61,749,"COL","B","Description",3)

"KRN",409.61,749,"FNL")
D EXIT^IBCEPA
"KRN",409.61,749,"HDR")
D HDR^IBCEPA
"KRN",409.61,749,"HLP")
D HELP^IBCEPA
"KRN",409.61,749,"INIT")
D INIT^IBCEPA
"KRN",409.61,750,-1)
0^7
"KRN",409.61,750,0)
IBCNS ASSOCIATIONS LIST^1^^80^6^20^1^1^^IBCNSL MENU^Associated Insurance Co's^1^^1
"KRN",409.61,750,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,750,"ARRAY")
 ^TMP($J,"IBCNSL",2)
"KRN",409.61,750,"COL",0)
^409.621^3^3
"KRN",409.61,750,"COL",1,0)
INSCO^6^30^Ins Company Name
"KRN",409.61,750,"COL",2,0)
ADDRESS^33^26^Address
"KRN",409.61,750,"COL",3,0)
CITY^59^20^City
"KRN",409.61,750,"COL","B","ADDRESS",2)

"KRN",409.61,750,"COL","B","CITY",3)

"KRN",409.61,750,"COL","B","INSCO",1)

"KRN",409.61,750,"FNL")

"KRN",409.61,750,"HDR")
D HDR^IBCNSC02
"KRN",409.61,750,"HLP")
S X="?" D DISP^XQORM1 W !!
"KRN",409.61,750,"INIT")
D BLD^IBCNSC02
"KRN",409.61,751,-1)
0^12
"KRN",409.61,751,0)
IBCE INSCO ID MAINT^1^^80^4^18^0^1^^IBCE INSCO ID MAINT MENU^IB Parameter Maint.^1^^1
"KRN",409.61,751,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,751,"FNL")
D EXIT^IBCEPB
"KRN",409.61,751,"HDR")
D HDR^IBCEPB
"KRN",409.61,751,"HLP")
D HELP^IBCEPB
"KRN",409.61,751,"INIT")
D INIT^IBCEPB
"KRN",409.61,752,-1)
0^13
"KRN",409.61,752,0)
IBCE INSCO BILL PROV MAINT^1^^80^4^18^0^1^^IBCE INSCO BILL PROV MAINT MENU^Billing Provider Parameters^1^^1
"KRN",409.61,752,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,752,"ARRAY")
 ^TMP("IBCE INSCO BILL PROV MAINT",$J)
"KRN",409.61,752,"FNL")
D EXIT^IBCEPC
"KRN",409.61,752,"HDR")
D HDR^IBCEPC
"KRN",409.61,752,"HLP")
D HELP^IBCEPC
"KRN",409.61,752,"INIT")
D INIT^IBCEPC
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",364.6,0,3,.03)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"PGL",364.7,0,5,.05)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
320^3060616
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3060616
"PKG",200,22,1,"PAH",1,1,1,0)
eClaims Plus Iteration 2
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
81
"RTN","IBCBB1")
0^64^B69487454^B58004272
"RTN","IBCBB1",1,0)
IBCBB1 ;ALB/AAS - CONTINUATION OF EDIT CHECK ROUTINE ;2-NOV-89
"RTN","IBCBB1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,80,93,106,51,151,148,153,137,232,280,155,320**;21-MAR-94
"RTN","IBCBB1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB1",4,0)
 ;
"RTN","IBCBB1",5,0)
 ;MAP TO DGCRBB1
"RTN","IBCBB1",6,0)
 ;
"RTN","IBCBB1",7,0)
% ;Bill Status
"RTN","IBCBB1",8,0)
 N Z,Z0,Z1
"RTN","IBCBB1",9,0)
 I $S(+IBST=0:1,1:"^1^2^3^4^7^"'[(U_IBST_U)) S IBER=IBER_"IB045;"
"RTN","IBCBB1",10,0)
 ;
"RTN","IBCBB1",11,0)
 ;Statement Covers From
"RTN","IBCBB1",12,0)
 I IBFDT="" S IBER=IBER_"IB061;"
"RTN","IBCBB1",13,0)
 I IBFDT]"",IBFDT'?7N&(IBFDT'?7N1".".N) S IBER=IBER_"IB061;"
"RTN","IBCBB1",14,0)
 I IBFDT>IBTDT S IBER=IBER_"IB061;" ; from must be on or before the to date 
"RTN","IBCBB1",15,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",16,0)
 ; if inpat - from date must not be prior to admit date.
"RTN","IBCBB1",17,0)
 I $$INPAT^IBCEF(IBIFN,1),(IBFDT<($P($G(^DGPT(+$P(IBND0,U,8),0)),U,2)\1))  S IBER=IBER_"IB061;"
"RTN","IBCBB1",18,0)
 ;
"RTN","IBCBB1",19,0)
 ;Statement Covers To
"RTN","IBCBB1",20,0)
 I IBTDT="" S IBER=IBER_"IB062;"
"RTN","IBCBB1",21,0)
 I IBTDT]"",IBTDT'?7N&(IBTDT'?7N1".".N) S IBER=IBER_"IB062;"
"RTN","IBCBB1",22,0)
 I IBTDT>DT!(IBTDT<IBFDT) S IBER=IBER_"IB062;"  ; to date must not be >than today's date
"RTN","IBCBB1",23,0)
 S IBTFY=$$FY^IBOUTL(IBTDT)
"RTN","IBCBB1",24,0)
 ;
"RTN","IBCBB1",25,0)
 ;Statement crosses fiscal years
"RTN","IBCBB1",26,0)
 ;I IBTFY'=IBFFY S IBER=IBER_"IB047;"
"RTN","IBCBB1",27,0)
 ;
"RTN","IBCBB1",28,0)
 ;Statement crosses calendar years
"RTN","IBCBB1",29,0)
 ;I $E(IBTDT,1,3)'=$E(IBFDT,1,3) S IBER=IBER_"IB046;"
"RTN","IBCBB1",30,0)
 ;
"RTN","IBCBB1",31,0)
 ;Total Charges
"RTN","IBCBB1",32,0)
 I +IBTC'>0!(+IBTC'=IBTC) S IBER=IBER_"IB064;"
"RTN","IBCBB1",33,0)
 ;
"RTN","IBCBB1",34,0)
 ;Billable charges for secondary claim
"RTN","IBCBB1",35,0)
 I $$MCRONBIL^IBEFUNC(IBIFN)&(($P(IBNDU1,U,1)-$P(IBNDU1,U,2))'>0) S IBER=IBER_"IB094;"
"RTN","IBCBB1",36,0)
 ;Fiscal Year 1
"RTN","IBCBB1",37,0)
 S IBFFY=$$FY^IBOUTL(IBFDT)
"RTN","IBCBB1",38,0)
 ;
"RTN","IBCBB1",39,0)
 ;Check provider link for current user, enterer, reviewer and Authorizor
"RTN","IBCBB1",40,0)
 I '$D(^VA(200,DUZ,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",41,0)
 I IBEU]"",'$D(^VA(200,IBEU,0)) S IBER=IBER_"IB048;"
"RTN","IBCBB1",42,0)
 I IBRU]"",'$D(^VA(200,IBRU,0)) S IBER=IBER_"IB060;"
"RTN","IBCBB1",43,0)
 I IBAU]"",'$D(^VA(200,IBAU,0)) S IBER=IBER_"IB041;"
"RTN","IBCBB1",44,0)
 ;
"RTN","IBCBB1",45,0)
 ;Bill exists and not already new bill
"RTN","IBCBB1",46,0)
 ;I $S('$D(^PRCA(430,IBIFN,0)):1,$P($P(^PRCA(430,IBIFN,0),"^"),"-",2)'=IBBNO:1,1:0) S IBER=IBER_"IB056;"
"RTN","IBCBB1",47,0)
 ;I $P($$BN^PRCAFN(IBIFN),"-",2)'=IBBNO S IBER=IBER_"IB056;"
"RTN","IBCBB1",48,0)
 ;I IBER="",$P(^PRCA(430,IBIFN,0),"^",8)=$O(^PRCA(430.3,"AC",104,"")) S IBER=IBER_"IB040;"
"RTN","IBCBB1",49,0)
 I IBER="",+$$STA^PRCAFN(IBIFN)=104 S IBER=IBER_"IB040;"
"RTN","IBCBB1",50,0)
 ; If ins bill, must have valid COB sequence
"RTN","IBCBB1",51,0)
 I $P(IBND0,U,11)="i",$S($P(IBND0,U,21)="":1,1:"PST"'[$P(IBND0,U,21)) S IBER=IBER_"IB324;"
"RTN","IBCBB1",52,0)
 ;
"RTN","IBCBB1",53,0)
 ; Check for valid sec provider id for current ins
"RTN","IBCBB1",54,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)),Z1=+$$COBN^IBCEF(IBIFN) I $P(Z0,U,4+Z1)'="",$P(Z0,U,11+Z1)'="" D
"RTN","IBCBB1",55,0)
 . I '$$SECIDCK^IBCEF74(IBIFN,Z1,$P(Z0,U,11+Z1),Z) D WARN^IBCBB11("Prov secondary id type for the "_$P("PRIMARY^SECONDARY^TERTIARY",U,Z1)_" "_$$EXTERNAL^DILFD(399.0222,.01,,+Z0)_" is invalid/won't transmit")
"RTN","IBCBB1",56,0)
 ;
"RTN","IBCBB1",57,0)
 ; Check for Physician Name
"RTN","IBCBB1",58,0)
 K IBXDATA D F^IBCEF("N-ATT/REND PHYSICIAN NAME",,,IBIFN)
"RTN","IBCBB1",59,0)
 I $P($G(IBXDATA),U)="" S IBER=IBER_"IB303;"
"RTN","IBCBB1",60,0)
 ;
"RTN","IBCBB1",61,0)
 N FUNCTION,IBINS
"RTN","IBCBB1",62,0)
 S FUNCTION=$S($$FT^IBCEF(IBIFN)=3:4,1:3)
"RTN","IBCBB1",63,0)
 I IBER'["IB303;" D
"RTN","IBCBB1",64,0)
 . F IBINS=1:1:3 D
"RTN","IBCBB1",65,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS)
"RTN","IBCBB1",66,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB1",67,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB1",68,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB1",69,0)
 ... S IBOK=0
"RTN","IBCBB1",70,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB1",71,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB236;",IBINS=2:"IB237;",IBINS=3:"IB238;",1:"")
"RTN","IBCBB1",72,0)
 . I $$TXMT^IBCEF4(IBIFN) D
"RTN","IBCBB1",73,0)
 .. D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ",,IBIFN)
"RTN","IBCBB1",74,0)
 .. I $P(IBZ,U,3)=""&($P(IBZ,U,4)="") S IBER=IBER_"IB321;" ; SSN/IEN required for rend/att
"RTN","IBCBB1",75,0)
 ;
"RTN","IBCBB1",76,0)
 N IBM,IBM1
"RTN","IBCBB1",77,0)
 S IBM=$G(^DGCR(399,IBIFN,"M"))
"RTN","IBCBB1",78,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCBB1",79,0)
 I $P(IBM,U),$P($G(^DIC(36,$P(IBM,U),4)),U,6),$P(IBM1,U,2)="" S IBER=IBER_"IB244;"
"RTN","IBCBB1",80,0)
 I $P(IBM,U,2),$P($G(^DIC(36,$P(IBM,U,2),4)),U,6),$P(IBM1,U,3)="" S IBER=IBER_"IB245;"
"RTN","IBCBB1",81,0)
 I $P(IBM,U,3),$P($G(^DIC(36,$P(IBM,U,3),4)),U,6),$P(IBM1,U,4)="" S IBER=IBER_"IB246;"
"RTN","IBCBB1",82,0)
 ;
"RTN","IBCBB1",83,0)
 ; If outside facility, check for ID and qualifier in 355.93
"RTN","IBCBB1",84,0)
 ; 5/15/06 - esg - hard error IB243 turned into warning message instead
"RTN","IBCBB1",85,0)
 S Z=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCBB1",86,0)
 I Z D
"RTN","IBCBB1",87,0)
 . I $P($G(^IBA(355.93,Z,0)),U,9)=""!($P($G(^IBA(355.93,Z,0)),U,13)="") D
"RTN","IBCBB1",88,0)
 .. N Z1,Z2
"RTN","IBCBB1",89,0)
 .. S Z1="Missing Lab or Facility Primary ID for non-VA facility, "
"RTN","IBCBB1",90,0)
 .. S Z2=$$EXTERNAL^DILFD(399,232,,Z)
"RTN","IBCBB1",91,0)
 .. I $L(Z2)'>19 D WARN^IBCBB11(Z1_Z2) Q
"RTN","IBCBB1",92,0)
 .. D WARN^IBCBB11(Z1),WARN^IBCBB11("     "_Z2)
"RTN","IBCBB1",93,0)
 .. Q
"RTN","IBCBB1",94,0)
 . Q
"RTN","IBCBB1",95,0)
 ;
"RTN","IBCBB1",96,0)
 ; Must be one and only one division on bill
"RTN","IBCBB1",97,0)
 S IBZ=$$MULTDIV^IBCBB11(IBIFN,IBND0)
"RTN","IBCBB1",98,0)
 I IBZ S IBER=IBER_$S(IBZ=1:"IB095;",IBZ=2:"IB104;",1:"IB105;")
"RTN","IBCBB1",99,0)
 ; Division address must be defined in institution file
"RTN","IBCBB1",100,0)
 I $P(IBND0,U,22) D
"RTN","IBCBB1",101,0)
 . N Z,Z0,Z1
"RTN","IBCBB1",102,0)
 . S Z0=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),0))
"RTN","IBCBB1",103,0)
 . S Z1=$G(^DIC(4,+$P($G(^DG(40.8,+$P(IBND0,U,22),0)),U,7),1))
"RTN","IBCBB1",104,0)
 . I $P(Z0,U,2)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",105,0)
 . F Z=1,3,4 I $P(Z1,U,Z)="" S IBER=IBER_"IB097;" Q
"RTN","IBCBB1",106,0)
 ;
"RTN","IBCBB1",107,0)
 ;CHAMPVA Rate Type and Primary Insurance Carriers Type of Coverage must match
"RTN","IBCBB1",108,0)
 S (IBRTCHV,IBPICHV)=0
"RTN","IBCBB1",109,0)
 I $P($G(^DGCR(399.3,+IBAT,0)),U,1)="CHAMPVA" S IBRTCHV=1
"RTN","IBCBB1",110,0)
 I $P($G(^IBE(355.2,+$P($G(^DIC(36,+IBNDMP,0)),U,13),0)),U,1)="CHAMPVA" S IBPICHV=1
"RTN","IBCBB1",111,0)
 I (+IBRTCHV!+IBPICHV)&('IBRTCHV!'IBPICHV) S IBER=IBER_"IB085;"
"RTN","IBCBB1",112,0)
 ;
"RTN","IBCBB1",113,0)
 N IBZPRC,IBZPRC92
"RTN","IBCBB1",114,0)
 D F^IBCEF("N-ALL PROCEDURES","IBZPRC",,IBIFN)
"RTN","IBCBB1",115,0)
 ; Procedure Clinic is required for Surgical Procedures Outpt Facility Charges
"RTN","IBCBB1",116,0)
 I +$P(IBND0,U,27)'=2,$$BILLRATE^IBCRU3(IBAT,IBCL,IBEVDT,"RC OUTPATIENT") D
"RTN","IBCBB1",117,0)
 . N Z,Z0,Z1,ZE S (ZE,Z)=0 F  S Z=$O(^DGCR(399,IBIFN,"CP",Z)) Q:'Z  D  I +ZE S IBER=IBER_"IB320;" Q
"RTN","IBCBB1",118,0)
 .. S Z0=$G(^DGCR(399,IBIFN,"CP",Z,0)),Z1=+Z0 I Z0'[";ICPT(" Q
"RTN","IBCBB1",119,0)
 .. I '((Z1'<10000)&(Z1'>69999))&'((Z1'<93501)&(Z1'>93533)) Q
"RTN","IBCBB1",120,0)
 .. I '$P(Z0,U,7) S ZE=1
"RTN","IBCBB1",121,0)
 ;
"RTN","IBCBB1",122,0)
 ; Extract procedures for UB92
"RTN","IBCBB1",123,0)
 D F^IBCEF("N-UB92 PROCEDURES","IBZPRC92",,IBIFN)
"RTN","IBCBB1",124,0)
 ; Does this bill have ANY prescriptions associated with it?
"RTN","IBCBB1",125,0)
 ; Must bill prescriptions separately from other charges
"RTN","IBCBB1",126,0)
 ;
"RTN","IBCBB1",127,0)
 I $$ISRX^IBCEF1(IBIFN) D
"RTN","IBCBB1",128,0)
 . N IBZ,IBRXDEF
"RTN","IBCBB1",129,0)
 . S IBRXDEF=$P($G(^IBE(350.9,1,1)),U,30),IBZ=0
"RTN","IBCBB1",130,0)
 . F  S IBZ=$O(IBZPRC92(IBZ)) Q:'IBZ  I IBZPRC92(IBZ),+$P(IBZPRC92(IBZ),U)'=IBRXDEF S IBER=IBER_"IB102;" Q
"RTN","IBCBB1",131,0)
 . K IBZ
"RTN","IBCBB1",132,0)
 ;
"RTN","IBCBB1",133,0)
 ; Check that COB sequences are not skipped
"RTN","IBCBB1",134,0)
 K Z
"RTN","IBCBB1",135,0)
 F Z=1:1:3 S:+$G(^DGCR(399,IBIFN,"I"_Z)) Z(Z)=""
"RTN","IBCBB1",136,0)
 F Z=0:1:2 S Z0=$O(Z(Z)) Q:'Z0  I Z0'=(Z+1) S IBER=IBER_"IB322;" Q
"RTN","IBCBB1",137,0)
 K Z
"RTN","IBCBB1",138,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,21)="" S IBER=IBER_"IB323;"
"RTN","IBCBB1",139,0)
 K IBXDATA D F^IBCEF("N-PROCEDURE CODING METHD",,,IBIFN)
"RTN","IBCBB1",140,0)
 ; Coding method should agree with types of procedure codes
"RTN","IBCBB1",141,0)
 S IBOK=$S('$O(IBZPRC(0))!(IBXDATA=""):1,1:0)
"RTN","IBCBB1",142,0)
 I 'IBOK S IBOK=1,IBZ=0 F  S IBZ=$O(IBZPRC(IBZ)) Q:'IBZ  I IBZPRC(IBZ),$P(IBZPRC(IBZ),U)'[$S(IBXDATA=9:"ICD",1:"ICP") S IBOK=0 Q
"RTN","IBCBB1",143,0)
 I 'IBOK D WARN^IBCBB11("Coding Method does not agree with all procedure codes found on bill")
"RTN","IBCBB1",144,0)
 D EDITMRA^IBCBB3(.IBQUIT,.IBER,IBIFN,IBFT)
"RTN","IBCBB1",145,0)
 Q:$G(IBQUIT)
"RTN","IBCBB1",146,0)
 ;
"RTN","IBCBB1",147,0)
 ;Other things that could be added:  Rev Code - calculating charges
"RTN","IBCBB1",148,0)
 ;        Diagnosis Coding, if MT copay - check for other co-payments
"RTN","IBCBB1",149,0)
 ;
"RTN","IBCBB1",150,0)
 I $P(IBNDTX,U,8),$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB121;"   ; can't force MRAs to print
"RTN","IBCBB1",151,0)
 I $P(IBNDTX,U,8)!$P(IBNDTX,U,9) D WARN^IBCBB11($S($$REQMRA^IBEFUNC(IBIFN)&($P(IBNDTX,U,9)):"MRA Secondary ",1:"")_"Bill has been forced to print "_$S($P(IBNDTX,U,8)=1!($P(IBNDTX,U,9)=1):"locally",1:"at clearinghouse"))
"RTN","IBCBB1",152,0)
 I IBFT'=2,$P(IBNDM,U,10)="" D WARN^IBCBB11("Patient Short Address has no value")
"RTN","IBCBB1",153,0)
 N IBXZ,IBIZ F IBIZ=12,13,14 S IBXZ=$P(IBNDM,U,IBIZ) I +IBXZ S IBXZ=$P($G(^DPT(DFN,.312,IBXZ,0)),U,18) I +IBXZ S IBXZ=$G(^IBA(355.3,+IBXZ,0)) I +$P(IBXZ,U,12) D
"RTN","IBCBB1",154,0)
 . D WARN^IBCBB11($P($G(^DIC(36,+IBXZ,0)),U,1)_" requires Amb Care Certification")
"RTN","IBCBB1",155,0)
 ;
"RTN","IBCBB1",156,0)
 ;Build AR array if no errors and MRA not needed or already rec'd
"RTN","IBCBB1",157,0)
 I IBER="",$S($$NEEDMRA^IBEFUNC(IBIFN)!($$REQMRA^IBEFUNC(IBIFN)):0,1:1) D ARRAY
"RTN","IBCBB1",158,0)
 ;
"RTN","IBCBB1",159,0)
END ;Don't kill IBIFN, IBER, DFN
"RTN","IBCBB1",160,0)
 I $O(^TMP($J,"BILL-WARN",0)),$G(IBER)="" S IBER="WARN" ;Warnings only
"RTN","IBCBB1",161,0)
 K IBBNO,IBEVDT,IBLOC,IBCL,IBTF,IBAT,IBWHO,IBST,IBFDT,IBTDT,IBTC,IBFY,IBFY1,IBAU,IBRU,IBEU,IBARTP,IBFYC,IBMRA,IBTOB,IBTOB12,IBNDU2,IBNDUF3,IBNDUF31,IBNDTX
"RTN","IBCBB1",162,0)
 K IBNDS,IBND0,IBNDU,IBNDM,IBNDMP,IBNDU1,IBFFY,IBTFY,IBFT,IBRTCHV,IBPICHV,IBXDATA,IBOK
"RTN","IBCBB1",163,0)
 I $D(IBER),IBER="" W !,"No Errors found for National edits"
"RTN","IBCBB1",164,0)
 Q
"RTN","IBCBB1",165,0)
 ;
"RTN","IBCBB1",166,0)
ARRAY ;Build PRCASV(array)
"RTN","IBCBB1",167,0)
 N IBCOBN,X
"RTN","IBCBB1",168,0)
 K PRCASV
"RTN","IBCBB1",169,0)
 Q:$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN))
"RTN","IBCBB1",170,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCBB1",171,0)
 S X=IBIFN
"RTN","IBCBB1",172,0)
 S PRCASV("BDT")=DT,PRCASV("ARREC")=IBIFN
"RTN","IBCBB1",173,0)
 S PRCASV("APR")=DUZ
"RTN","IBCBB1",174,0)
 S PRCASV("PAT")=DFN,PRCASV("CAT")=$P(^DGCR(399.3,IBAT,0),"^",6)
"RTN","IBCBB1",175,0)
 I IBWHO="i" S PRCASV("DEBTOR")=+IBNDMP_";DIC(36,"
"RTN","IBCBB1",176,0)
 S PRCASV("DEBTOR")=$S(IBWHO="p":DFN_";DPT(",IBWHO="o":$P(IBNDM,"^",11)_";DIC(4,",IBWHO="i":PRCASV("DEBTOR"),1:"")
"RTN","IBCBB1",177,0)
 S PRCASV("CARE")=$E($$TOB^IBCEF1(IBIFN),1,2)
"RTN","IBCBB1",178,0)
 S PRCASV("FY")=$$FY^IBOUTL(DT)_U_($P(IBNDU1,U)-$P(IBNDU1,U,2))
"RTN","IBCBB1",179,0)
 ;S PRCASV("FY")=$P(IBNDU1,U,9)_U_$S($P(IBNDU1,U,2)]"":($P(IBNDU1,U,10)-$P(IBNDU1,U,2)),1:$P(IBNDU1,U,10))_$S($P(IBNDU1,U,11)]"":U_$P(IBNDU1,U,11)_U_$P(IBNDU1,U,12),1:"")
"RTN","IBCBB1",180,0)
PLUS I IBWHO="i",$P(IBNDM,"^",2),$D(^DIC(36,$P(IBNDM,"^",2),0)) S PRCASV("2NDINS")=$P(IBNDM,"^",2)
"RTN","IBCBB1",181,0)
 I IBWHO="i",$P(IBNDM,"^",3),$D(^DIC(36,$P(IBNDM,"^",3),0)) S PRCASV("3RDINS")=$P(IBNDM,"^",3)
"RTN","IBCBB1",182,0)
 ;
"RTN","IBCBB1",183,0)
 N IBX S IBX=$P(IBND0,U,21),IBX=$S(IBX="P":"I1",IBX="S":"I2",IBX="T":"I3",1:"") Q:IBX=""
"RTN","IBCBB1",184,0)
 N IBNDI1
"RTN","IBCBB1",185,0)
 Q:'$D(^DGCR(399,IBIFN,IBX))  S IBNDI1=^(IBX)
"RTN","IBCBB1",186,0)
 S:$P(IBNDI1,"^",3)]"" PRCASV("GPNO")=$P(IBNDI1,"^",3)
"RTN","IBCBB1",187,0)
 S:$P(IBNDI1,"^",15)]"" PRCASV("GPNM")=$P(IBNDI1,"^",15)
"RTN","IBCBB1",188,0)
 S:$P(IBNDI1,"^",17)]"" PRCASV("INPA")=$P(IBNDI1,"^",17)
"RTN","IBCBB1",189,0)
 S:$P(IBNDI1,"^",2)]"" PRCASV("IDNO")=$P(IBNDI1,"^",2),PRCASV("INID")=PRCASV("IDNO")
"RTN","IBCBB1",190,0)
 ; Check that this is a secondary or tertiary bill and insurance for previous
"RTN","IBCBB1",191,0)
 ; COB sequence is Medicare WNR and MRA is active --> send data elements to AR
"RTN","IBCBB1",192,0)
 I IBCOBN>1,$$WNRBILL^IBEFUNC(IBIFN,IBCOBN-1),$$EDIACTV^IBCEF4(2) D MRA
"RTN","IBCBB1",193,0)
 Q
"RTN","IBCBB1",194,0)
 ;
"RTN","IBCBB1",195,0)
MRA N IBEOB S IBEOB=0
"RTN","IBCBB1",196,0)
 ;
"RTN","IBCBB1",197,0)
 K PRCASV("MEDURE"),PRCASV("MEDCA")
"RTN","IBCBB1",198,0)
 ; Get EOB data
"RTN","IBCBB1",199,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCBB1",200,0)
 . D MRACALC^IBCEMU2(IBEOB,IBIFN,1,.PRCASV)
"RTN","IBCBB1",201,0)
 Q  ;MRA
"RTN","IBCBB1",202,0)
 ;
"RTN","IBCBB1",203,0)
 ;; PREGNANCY DX CODES: V22**-V24**, V27**-V28**, 630**-677**
"RTN","IBCBB1",204,0)
 ;; FLU SHOTS PROCEDURE CODES: 90724, G0008, 90732, G0009
"RTN","IBCBB2")
0^42^B42060195^B35010938
"RTN","IBCBB2",1,0)
IBCBB2 ;ALB/ARH - CONTINUATION OF EDIT CHECKS ROUTINE (HCFA 1500) ;04/14/92
"RTN","IBCBB2",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,210,245,232,296,320**;21-MAR-94
"RTN","IBCBB2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCBB2",4,0)
 ;
"RTN","IBCBB2",5,0)
 ;MAP TO DGCRBB2
"RTN","IBCBB2",6,0)
 ;
"RTN","IBCBB2",7,0)
EN ;
"RTN","IBCBB2",8,0)
 N IBI,IBJ,IBN,IBY,IBDX,IBDXO,IBDXL,IBCPT,IBCPTL,IBOLAB,Z,IBXSAVE,IBLOC,IBTX,IBPS,IBSP,IBLCT
"RTN","IBCBB2",9,0)
 I '$D(IBER) S IBER=""
"RTN","IBCBB2",10,0)
 S IBTX=$$TXMT^IBCEF4(IBIFN)
"RTN","IBCBB2",11,0)
 ;
"RTN","IBCBB2",12,0)
 ; Warn if no group provider id (MCRWNR is a default)
"RTN","IBCBB2",13,0)
 ; I '$$WNRBILL^IBEFUNC(IBIFN) D
"RTN","IBCBB2",14,0)
 ; . S Z=$P($G(^DGCR(399,IBIFN,"M1")),U,$$COBN^IBCEF(IBIFN)+1)
"RTN","IBCBB2",15,0)
 ; . I Z="" D WARN^IBCBB11("No group prov # for the current ins co - site tax id will be used")
"RTN","IBCBB2",16,0)
 ; Max 4 modifiers per CPT code allowed before warning
"RTN","IBCBB2",17,0)
 K IBXDATA
"RTN","IBCBB2",18,0)
 D F^IBCEF("N-HCFA 1500 MODIFIERS",,,IBIFN) ;Get modifiers
"RTN","IBCBB2",19,0)
 ;
"RTN","IBCBB2",20,0)
 S Z=0 F  S Z=$O(IBZPRC92(Z)) Q:'Z  I $P(IBZPRC92(Z),U)["ICPT(",$L($P(IBZPRC92(Z),U,15),",")>4 S IBI="Proc "_$$PRCD^IBCEF1($P(IBZPRC92(Z),U))_" has > 4 modifiers - only first 4 will be used" D WARN^IBCBB11(IBI)
"RTN","IBCBB2",21,0)
 ; ICD-9 diagnosis, at least 1 required
"RTN","IBCBB2",22,0)
 D SET^IBCSC4D(IBIFN,.IBDX,.IBDXO) I '$P(IBDX,U,2) S IBER=IBER_"IB071;"
"RTN","IBCBB2",23,0)
 S IBI=$O(IBDXO(0))
"RTN","IBCBB2",24,0)
 I IBI,$$INPAT^IBCEF(IBIFN,1),$E($$ICD9^IBACSV(+$P(IBDXO(IBI),U)))="V" S Z="Principal Dx V-code may not be valid" D WARN^IBCBB11(Z)
"RTN","IBCBB2",25,0)
 ;
"RTN","IBCBB2",26,0)
 ; CPT procs must be associated with a dx, must have a defined provider
"RTN","IBCBB2",27,0)
 S (IBLOC,IBN,IBI,IBY)=0 F  S IBI=$O(^DGCR(399,IBIFN,"CP",IBI)) Q:IBI'?1N.N  S IBCPT=^(IBI,0) D  I +IBY S IBN=1
"RTN","IBCBB2",28,0)
 . ;I IBER'["IB089",$P(IBCPT,U,10)=7,$S('$P(IBCPT,U,16):1,1:$P(IBCPT,U,16)#15) S IBER=IBER_"IB089;" ;anesthesia needs minutes in multiple of 15
"RTN","IBCBB2",29,0)
 . I 'IBLOC,$P(IBCPT,U,15)'="",IBTX S Z="At least 1 charge has local box 24K data that will not be transmitted - " S IBLOC=1 D WARN^IBCBB11(Z) S Z="  This data will only print locally" D WARN^IBCBB11(Z)
"RTN","IBCBB2",30,0)
 . I $P(IBCPT,U)'["ICPT(" S:IBER'["IB092" IBER=IBER_"IB092;" Q
"RTN","IBCBB2",31,0)
 . S IBY=1 F IBJ=11:1:14 I +$P(IBCPT,"^",IBJ) S IBCPTL(+$P(IBCPT,"^",IBJ))="",IBY=0
"RTN","IBCBB2",32,0)
 . ;I '$P(IBCPT,U,18) S:IBER'["IB094;" IBER=IBER_"IB094;" Q
"RTN","IBCBB2",33,0)
 I +IBN S IBER=IBER_"IB072;"
"RTN","IBCBB2",34,0)
 ;
"RTN","IBCBB2",35,0)
 I '$$OCC10(IBIFN,.IBDX,2) S IBER=IBER_"IB093;"
"RTN","IBCBB2",36,0)
 ; HCFA 1500: dxs associated with procs must be defined dxs for the bill
"RTN","IBCBB2",37,0)
 S IBI=0 F  S IBI=$O(IBDX(IBI))  Q:'IBI  S IBDXL(IBDX(IBI))=""
"RTN","IBCBB2",38,0)
 S (IBN,IBI)=0 F  S IBI=$O(IBCPTL(IBI)) Q:'IBI  I '$D(IBDXL(IBI)) S IBN=1 Q
"RTN","IBCBB2",39,0)
 I +IBN S IBER=IBER_"IB073;"
"RTN","IBCBB2",40,0)
 ; ejk *296* Change # of diagnoses codes from 4 to 8 on HCFA Claims. 
"RTN","IBCBB2",41,0)
 I IBTX S IBI=8 F  S IBI=$O(IBDXO(IBI)) Q:'IBI  S Z=+$G(IBDX(+$G(IBDXO(IBI)))) I Z,$D(IBCPTL(Z)) D WARN^IBCBB11("Too many diagnoses for claim & will be rejected - consider printing locally")
"RTN","IBCBB2",42,0)
 ;
"RTN","IBCBB2",43,0)
 I $$WNRBILL^IBEFUNC(IBIFN),$$MRATYPE^IBEFUNC(IBIFN)'="B" S IBER=IBER_"IB087;"
"RTN","IBCBB2",44,0)
 ;
"RTN","IBCBB2",45,0)
 ; IB*320 - CLIA# error/warning - error msg for MRA claims, else warning
"RTN","IBCBB2",46,0)
 I $P(IBNDU2,U,13)="",$$CLIAREQ^IBCEP8A(IBIFN) D
"RTN","IBCBB2",47,0)
 . I $$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB235;" Q
"RTN","IBCBB2",48,0)
 . D WARN^IBCBB11("Claim contains laboratory services. The payer may require a CLIA #.")
"RTN","IBCBB2",49,0)
 . Q
"RTN","IBCBB2",50,0)
 ;
"RTN","IBCBB2",51,0)
 ; Only one occurrence code can be present for event date for box 14
"RTN","IBCBB2",52,0)
 S Z=$$EVENT^IBCF22(IBIFN,.IBXSAVE,.IBI)
"RTN","IBCBB2",53,0)
 I IBI S IBER=IBER_"IB099;"
"RTN","IBCBB2",54,0)
 ; unit/charge limits
"RTN","IBCBB2",55,0)
 K IBXDATA
"RTN","IBCBB2",56,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN) ;Get charge lines
"RTN","IBCBB2",57,0)
 S (IBLCT,IBOLAB)=0,IBPS="",IBSP=$$BILLSPEC^IBCEU3(IBIFN)
"RTN","IBCBB2",58,0)
 S IBI=0 F  S IBI=$O(IBXDATA(IBI)) Q:'IBI  D  Q:IBER["IB310"!(IBER["IB311")
"RTN","IBCBB2",59,0)
 . S IBLCT=IBLCT+1
"RTN","IBCBB2",60,0)
 . I $P(IBNDU2,U,11) D
"RTN","IBCBB2",61,0)
 .. I '$P(IBXDATA(IBI),U,11) S IBPS=IBPS_$S(IBPS'="":",",1:"")_IBI Q
"RTN","IBCBB2",62,0)
 .. I $P(IBXDATA(IBI),U,14),"24"'[$P(IBNDU2,U,11) D WARN^IBCBB11("Outside lab charges exist on a non-lab NON-VA bill")
"RTN","IBCBB2",63,0)
 . I '$P(IBNDU2,U,11),$P(IBXDATA(IBI),U,11) D WARN^IBCBB11("Purchased service amounts are invalid unless this is a NON-VA bill")
"RTN","IBCBB2",64,0)
 . I $D(IBXDATA(IBI,"A")) S IBER=IBER_"IB310;" Q
"RTN","IBCBB2",65,0)
 . I $D(IBXDATA(IBI,"ARX")),IBER'["311;" S IBER=IBER_"IB311;" Q
"RTN","IBCBB2",66,0)
 . I $P(IBXDATA(IBI),U,14) S IBOLAB=IBOLAB+1
"RTN","IBCBB2",67,0)
 . ; Place of service required
"RTN","IBCBB2",68,0)
 . I $G(IBER)'["IB314;",$P(IBXDATA(IBI),U,3)="" S IBER=IBER_"IB314;"
"RTN","IBCBB2",69,0)
 . ; Type of service required
"RTN","IBCBB2",70,0)
 . I $G(IBER)'["IB313;",$P(IBXDATA(IBI),U,4)="" S IBER=IBER_"IB313;"
"RTN","IBCBB2",71,0)
 . ; 43 and 53 are invalid types of service
"RTN","IBCBB2",72,0)
 . I $G(IBER)'["IB110;",($P(IBXDATA(IBI),U,4)=43!($P(IBXDATA(IBI),U,4)=53)) S IBER=IBER_"IB110;"
"RTN","IBCBB2",73,0)
 . ; Units for the line item must be less than 100/1000
"RTN","IBCBB2",74,0)
 . I IBER'["IB088",$P(IBXDATA(IBI),U,9)'<100 D
"RTN","IBCBB2",75,0)
 .. I $P(IBXDATA(IBI),U,4)'=7 S IBER=IBER_"IB088;" Q
"RTN","IBCBB2",76,0)
 .. I $P(IBXDATA(IBI),U,9)'<1000 S IBER=IBER_"IB088;"
"RTN","IBCBB2",77,0)
 . ; Line item total charge must be less than $10,000.00, greater than 0
"RTN","IBCBB2",78,0)
 . I IBER'["IB090",$P(IBXDATA(IBI),U,9)'<10000 S IBER=IBER_"IB090;"
"RTN","IBCBB2",79,0)
 . I '($P(IBXDATA(IBI),U,9)*$P(IBXDATA(IBI),U,8)),$$COBN^IBCEF(IBIFN)'>1 S Z="Procedure "_$P(IBXDATA(IBI),U,5)_" has a 0-charge and will not be transmitted" D WARN^IBCBB11(Z)
"RTN","IBCBB2",80,0)
 . I $G(IBXDATA(IBI,"AUX"))'="",'$G(IBSP(1)),+IBSP'=35,$TR($P(IBXDATA(IBI,"AUX"),U,4,6)_$P(IBXDATA(IBI,"AUX"),U,2),U)'="" S IBSP(1)=1
"RTN","IBCBB2",81,0)
 I IBTX,IBLCT>50 D
"RTN","IBCBB2",82,0)
 . I '$$REQMRA^IBEFUNC(IBIFN) S IBER=IBER_"IB308;" Q
"RTN","IBCBB2",83,0)
 . I '$P(IBNDTX,U,9) S IBER=IBER_"IB325;"
"RTN","IBCBB2",84,0)
 I $G(IBSP(1)) D WARN^IBCBB11("Chiropractic service details only valid if provider specialty is '35'")
"RTN","IBCBB2",85,0)
 I IBPS'="" D WARN^IBCBB11("NON-VA facility indicated, but no purchased service charge on line item"_$S(IBPS[",":"s",1:"")_" #"_IBPS)
"RTN","IBCBB2",86,0)
 I $P(IBNDU2,U,11),$P(IBNDU2,U,11)=4,IBOLAB>1 D WARN^IBCBB11("For proper payment, you must bill each outside lab on a separate claim form")
"RTN","IBCBB2",87,0)
 K IBXDATA
"RTN","IBCBB2",88,0)
 ;
"RTN","IBCBB2",89,0)
 ;       ; Check for Physician Name
"RTN","IBCBB2",90,0)
 D F^IBCEF("N-REFERRING PROVIDER NAME",,,IBIFN)
"RTN","IBCBB2",91,0)
 I $P($G(IBXDATA),U)]"" D
"RTN","IBCBB2",92,0)
 .N IBZ,FUNCTION,IBINS
"RTN","IBCBB2",93,0)
 .S FUNCTION=1
"RTN","IBCBB2",94,0)
 .F IBINS=1:1:3 D
"RTN","IBCBB2",95,0)
 .. S Z=$$GETTYP^IBCEP2A(IBIFN,IBINS,FUNCTION)
"RTN","IBCBB2",96,0)
 .. I Z,$P(Z,U,2) D  ; Rendering/attending prov secondary id required
"RTN","IBCBB2",97,0)
 ... N IBID,IBOK,Q0
"RTN","IBCBB2",98,0)
 ... D PROVINF^IBCEF74(IBIFN,IBINS,.IBID,1,"C")  ; check all as though they were current
"RTN","IBCBB2",99,0)
 ... S IBOK=0
"RTN","IBCBB2",100,0)
 ... S Q0=0 F  S Q0=$O(IBID(1,FUNCTION,Q0)) Q:'Q0  I $P(IBID(1,FUNCTION,Q0),U,9)=+Z S IBOK=1 Q
"RTN","IBCBB2",101,0)
 ... I 'IBOK S IBER=IBER_$S(IBINS=1:"IB239;",IBINS=2:"IB240;",IBINS=3:"IB241;",1:"")
"RTN","IBCBB2",102,0)
 ;
"RTN","IBCBB2",103,0)
 Q
"RTN","IBCBB2",104,0)
 ;
"RTN","IBCBB2",105,0)
OCC10(IBIFN,IBARR,IBFT) ; Determine if occurrence code 10 exists for pregnancy dx
"RTN","IBCBB2",106,0)
 ; IBARR=array subscripted by ien of DX code if IBFT=2 (HCFA form)
"RTN","IBCBB2",107,0)
 ;                         by seq # and = ien of DX code if IBFT'=2
"RTN","IBCBB2",108,0)
 ;
"RTN","IBCBB2",109,0)
 N IBN,IBI,IBXDATA,IBXSAVE,IBDX,Z
"RTN","IBCBB2",110,0)
 S IBN=1
"RTN","IBCBB2",111,0)
 ;
"RTN","IBCBB2",112,0)
 I '$D(^TMP($J,"LMD")) D
"RTN","IBCBB2",113,0)
 . D F^IBCEF("N-OCCURRENCE CODES",,,IBIFN)
"RTN","IBCBB2",114,0)
 . S ^TMP($J,"LMD")=""
"RTN","IBCBB2",115,0)
 . S Z=0 F  S Z=$O(IBXSAVE("OCC",Z)) Q:'Z  I +IBXSAVE("OCC",Z)=10 S ^TMP($J,"LMD")=1 Q
"RTN","IBCBB2",116,0)
 ;
"RTN","IBCBB2",117,0)
 I '^TMP($J,"LMD") S IBI=0 F  S IBI=$O(IBARR(IBI))  Q:'IBI  D  Q:'IBN
"RTN","IBCBB2",118,0)
 . N Z,Z1
"RTN","IBCBB2",119,0)
 . ; If a pregnancy DX exists, must be an occurrence code 10 for LMP date
"RTN","IBCBB2",120,0)
 . ; dx ranges are: V22*-V24*, V27*-V28*, 630*-677*
"RTN","IBCBB2",121,0)
 . S IBDX=$S($G(IBFT)'=2:+IBARR(IBI),1:IBI)
"RTN","IBCBB2",122,0)
 . S Z=$E($P($$ICD9^IBACSV(IBDX),U),1,3),Z1=$E(Z,2,3)
"RTN","IBCBB2",123,0)
 . I $S(Z'<630&(Z<678):1,$E(Z)="V":$S(Z1'<22&(Z1<25):1,1:Z1'<27&(Z1<28)),1:0) S IBN=0 ;Pregnancy Dx exists
"RTN","IBCBB2",124,0)
 ;
"RTN","IBCBB2",125,0)
OCC10Q K ^TMP($J,"LMD")
"RTN","IBCBB2",126,0)
 Q IBN
"RTN","IBCBB2",127,0)
 ;
"RTN","IBCC")
0^2^B36081690^B35414312
"RTN","IBCC",1,0)
IBCC ;ALB/MJB - CANCEL UB-82 THIRD PARTY BILL ;14 JUN 88  10:12
"RTN","IBCC",2,0)
 ;;2.0;INTEGRATED BILLING;**2,19,77,80,51,142,137,161,199,241,155,276,320**;21-MAR-94
"RTN","IBCC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCC",4,0)
 ;
"RTN","IBCC",5,0)
 ;MAP TO DGCRC
"RTN","IBCC",6,0)
 ;
"RTN","IBCC",7,0)
 I '$D(IBCAN) S IBCAN=1
"RTN","IBCC",8,0)
ASK ;
"RTN","IBCC",9,0)
 ;***
"RTN","IBCC",10,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",11,0)
 ;S XRTL=$ZU(0),XRTN="IBCC-1" D T0^%ZOSV ;start rt clock
"RTN","IBCC",12,0)
 ;
"RTN","IBCC",13,0)
 ; If called at entry point PROCESS, variable IBNOASK will exist.
"RTN","IBCC",14,0)
 ; First time through, IBNOASK=1
"RTN","IBCC",15,0)
 ; Second time through, IBNOASK=2 and it will quit
"RTN","IBCC",16,0)
 I $G(IBNOASK)=2 G Q
"RTN","IBCC",17,0)
 I $G(IBNOASK)=1 S IBNOASK=2
"RTN","IBCC",18,0)
 ;
"RTN","IBCC",19,0)
 G Q:$G(IBCE("EDI"))
"RTN","IBCC",20,0)
 D Q
"RTN","IBCC",21,0)
 S IBQUIT=0
"RTN","IBCC",22,0)
 N DPTNOFZY S DPTNOFZY=1  ;Suppress PATIENT file fuzzy lookups
"RTN","IBCC",23,0)
 I '$G(IBNOASK) S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " W !! D ^DIC I Y<1 S IBQUIT=1 G Q1
"RTN","IBCC",24,0)
 K IB364
"RTN","IBCC",25,0)
NOPTF ; Note if IB364 is >0 it will be used as the ien to update in file 364
"RTN","IBCC",26,0)
 N DA,I
"RTN","IBCC",27,0)
 I '$G(IBNOASK) S IBIFN=+$G(Y)
"RTN","IBCC",28,0)
 I '$G(IBIFN) G ASK
"RTN","IBCC",29,0)
 I IBCAN>1 D NOPTF^IBCB2 I 'IBAC1 D NOPTF1^IBCB2 G ASK
"RTN","IBCC",30,0)
 ; Check if bill has been referred to Counsel
"RTN","IBCC",31,0)
 I $P($G(^PRCA(430,IBIFN,6)),U,4) D  G ASK
"RTN","IBCC",32,0)
 . W !,"This bill has been referred to Regional Counsel and cannot be 'CANCELLED' in"
"RTN","IBCC",33,0)
 . W !,"Integrated Billing.  Please use the option 'TP Referred Follow-up'"
"RTN","IBCC",34,0)
 . W !,"[PRCA RC ACTION MENU] in Accounts Receivable to request that Regional"
"RTN","IBCC",35,0)
 . W !,"Counsel return the bill to your facility."
"RTN","IBCC",36,0)
 . Q
"RTN","IBCC",37,0)
 ;
"RTN","IBCC",38,0)
 F I=0,"S","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCC",39,0)
 S IBSTAT=$P(IB(0),U,13)
"RTN","IBCC",40,0)
 ;
"RTN","IBCC",41,0)
 ; Restrict access to this process for REQUEST MRA bills
"RTN","IBCC",42,0)
 I IBSTAT=2,'$G(IBCE("EDI")),$$MRAWL^IBCEMU2(IBIFN) D  G ASK
"RTN","IBCC",43,0)
 . W !!?4,"This bill is in a status of REQUEST MRA and it does appear on the"
"RTN","IBCC",44,0)
 . W !?4,"MRA Management Work List.  Please use the 'MRA Management Menu' options"
"RTN","IBCC",45,0)
 . W !?4,"for all processing related to this bill."
"RTN","IBCC",46,0)
 . Q
"RTN","IBCC",47,0)
 ;
"RTN","IBCC",48,0)
 ; Warning message if in a REQUEST MRA status with no MRA on file
"RTN","IBCC",49,0)
 I IBSTAT=2,'$$MRACNT^IBCEMU1(IBIFN) D
"RTN","IBCC",50,0)
 . N REJ
"RTN","IBCC",51,0)
 . D TXSTS^IBCEMU2(IBIFN,,.REJ)
"RTN","IBCC",52,0)
 . W *7,!!?4,"Warning!  This bill is in a status of REQUEST MRA."
"RTN","IBCC",53,0)
 . W !?4,"No MRAs have been received"
"RTN","IBCC",54,0)
 . I REJ W ", but the most recent transmission of this",!?4,"MRA request bill was rejected."
"RTN","IBCC",55,0)
 . I 'REJ W " and there are no rejection messages on file",!?4,"for the most recent transmission of this MRA request bill."
"RTN","IBCC",56,0)
 . Q
"RTN","IBCC",57,0)
 ;
"RTN","IBCC",58,0)
 I IBCAN=2,IB("S")]"",+$P(IB("S"),U,16),$P(IB("S"),U,17)]"" D  G 1
"RTN","IBCC",59,0)
 . W !!,"This bill was cancelled on " S Y=$P(IB("S"),U,17) X ^DD("DD") W Y," by ",$S($P(IB("S"),U,18)']"":IBU,$D(^VA(200,$P(IB("S"),U,18),0)):$P(^(0),U,1),1:IBU),"."
"RTN","IBCC",60,0)
 . S IBQUIT=1
"RTN","IBCC",61,0)
 ; Notify if a payment has been posted to this bill before cancel
"RTN","IBCC",62,0)
 N PRCABILL
"RTN","IBCC",63,0)
 S PRCABILL=$$TPR^PRCAFN(IBIFN)
"RTN","IBCC",64,0)
 I PRCABILL=-1 W !!,"Please note: PRCA was unable to determine if a payment has been posted."
"RTN","IBCC",65,0)
 I PRCABILL>0 W !!,"Please note a PAYMENT of **$"_$$TPR^PRCAFN(IBIFN)_"** has been POSTED to this bill."
"RTN","IBCC",66,0)
 ;
"RTN","IBCC",67,0)
 ; If bill was created via Electronic claims process then notify
"RTN","IBCC",68,0)
 ; user that cancellation should occur using ECME package
"RTN","IBCC",69,0)
 I $$GET1^DIQ(399,IBIFN_",",460)]"" D  G:'Y ASK
"RTN","IBCC",70,0)
 . W !!!?5,"This bill was created by the"
"RTN","IBCC",71,0)
 . W !?5,"Electronic Claims Management Engine (ECME)."
"RTN","IBCC",72,0)
 . W !?5,"Cancellation needs to occur in the ECME package by"
"RTN","IBCC",73,0)
 . W !?5,"submitting a REVERSAL to the Payer.",!!
"RTN","IBCC",74,0)
 . K DIR S DIR("A",1)="Has a REVERSAL for this e-Claim already been",DIR("A")="submitted to the payer via the ECME package (Y/N)",DIR(0)="Y",DIR("B")="NO" D ^DIR
"RTN","IBCC",75,0)
 . I Y=0 W !!,"<PLEASE SUBMIT A REVERSAL USING THE APPROPRIATE OPTION IN THE ECME PACKAGE>",$C(7)
"RTN","IBCC",76,0)
 ;
"RTN","IBCC",77,0)
CHK S (IBCCCC,IBQUIT)=0 I '$G(IBCEAUTO),'$G(IBMCSCAN) W !!,"ARE YOU SURE YOU WANT TO CANCEL THIS BILL" S %=2 D YN^DICN G:%=0 HELP I %'=1 S IBQUIT=1 G NO
"RTN","IBCC",78,0)
 ;
"RTN","IBCC",79,0)
 I '$G(IBCEAUTO) W !!,"LAST CHANCE TO CHANGE YOUR MIND..."
"RTN","IBCC",80,0)
 S DIE=399,DA=IBIFN,DIE("NO^")=""
"RTN","IBCC",81,0)
 S DR="16;S:'X Y=0;19;S IBCCCC=1;"
"RTN","IBCC",82,0)
 I $G(IBCEAUTO) S DR="16////1;19////EDI/MRA TURNED OFF;S IBCCCC=1;"
"RTN","IBCC",83,0)
 I $G(IBMCSRSC)'="" S DR="16;S:'X Y=0;19//"_IBMCSRSC_";S IBCCCC=1;"
"RTN","IBCC",84,0)
 D ^DIE K DIE,DR
"RTN","IBCC",85,0)
 ;
"RTN","IBCC",86,0)
NO I 'IBCCCC W !!,"<NO ACTION TAKEN>",*7 S IBQUIT=1 G ASK:IBCAN<2,Q
"RTN","IBCC",87,0)
 S IBCCR=$P($G(^DGCR(399,IBIFN,"S")),U,19)
"RTN","IBCC",88,0)
 W !!,"...Bill has been cancelled..." D BULL^IBCBULL,BSTAT^IBCDC(IBIFN),PRIOR^IBCCC2(IBIFN)
"RTN","IBCC",89,0)
 ;
"RTN","IBCC",90,0)
 ; cancelling in ingenix claimsmanager if ingenix is running
"RTN","IBCC",91,0)
 ; clean-up of variables is OK if not coming in from ListMan screen
"RTN","IBCC",92,0)
 I $$CM^IBCIUT1(IBIFN) S IBCISNT=4 D ST2^IBCIST I '$G(IBCICNCL) K IBCISNT,IBCISTAT,IBCIREDT,IBCIERR
"RTN","IBCC",93,0)
 ;
"RTN","IBCC",94,0)
 S IBEDI=$G(IB364)
"RTN","IBCC",95,0)
 I 'IBEDI S IBEDI=+$$LAST364^IBCEF4(IBIFN)
"RTN","IBCC",96,0)
 I IBEDI D UPDEDI^IBCEM(IBEDI,"C") ;Update EDI files, if needed
"RTN","IBCC",97,0)
 ;
"RTN","IBCC",98,0)
 F I="S","U1" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):^(I),1:"")
"RTN","IBCC",99,0)
 S PRCASV("ARREC")=IBIFN,PRCASV("AMT")=$S(IB("U1")']"":0,1:$P(IB("U1"),"^")),PRCASV("DATE")=$P(IB("S"),"^",17),PRCASV("BY")=$P(IB("S"),"^",18)
"RTN","IBCC",100,0)
 S PRCASV("COMMENT")=$S($P(IB("S"),U,19)]"":$P(IB("S"),U,19),$P(^IBE(350.9,1,2),"^",7)]"":$P(^(2),"^",7),1:"BILL CANCELLED IN MAS")
"RTN","IBCC",101,0)
 S PRCASV("BY")=$S($P(IB("S"),U,18)]"":$P(IB("S"),U,18),1:"")
"RTN","IBCC",102,0)
 S X=$$CANCEL^RCBEIB($G(PRCASV("ARREC")),$G(PRCASV("DATE")),$G(PRCASV("BY")),$G(PRCASV("AMT")),$G(PRCASV("COMMENT")))
"RTN","IBCC",103,0)
 W !,$S(X:">> The receivable associated with the claim was cancelled.",1:">> The receivable associated with the claim was not cancelled.")
"RTN","IBCC",104,0)
 I $P(X,U,2)]"" W !,">>> ",$P(X,U,2) ; The reason why the claim can not be cancelled.
"RTN","IBCC",105,0)
 I IBCAN<2 D RNB^IBCC1 ;assign a reason not billable
"RTN","IBCC",106,0)
 G ASK:IBCAN<2,Q
"RTN","IBCC",107,0)
 ;
"RTN","IBCC",108,0)
HELP W !,?3,"Answer 'YES' or 'Y' if you wish to cancel this bill.",!,?3,"Answer 'NO' or 'N' if you want to abort." G CHK
"RTN","IBCC",109,0)
 Q
"RTN","IBCC",110,0)
1 I $P(IB(0),U,13)=1 W !,"This record was re-opened on " S Y=$P(IB(0),U,14) X ^DD("DD") W Y,"." G CHK
"RTN","IBCC",111,0)
 G ASK
"RTN","IBCC",112,0)
Q1 K:IBCAN=1 IBQUIT K IBCAN
"RTN","IBCC",113,0)
Q K %,IBEPAR,IBSTAT,IBARST,IBAC1,IB,DFN,IBX,IBZ,DIC,DIE,DR,PRCASV,PRCASVC,X,Y,IBEDI
"RTN","IBCC",114,0)
 ;***
"RTN","IBCC",115,0)
 ;I $D(XRT0) S:'$D(XRTN) XRTN="IBCC" D T1^%ZOSV ;stop rt clock
"RTN","IBCC",116,0)
 Q
"RTN","IBCC",117,0)
 ;
"RTN","IBCC",118,0)
PROCESS(IBIFN,IBCAN) ;
"RTN","IBCC",119,0)
 ; Entry point when the bill number is already known.  Use this when
"RTN","IBCC",120,0)
 ; you just want to try to cancel this bill and this bill only.
"RTN","IBCC",121,0)
 ; Input:
"RTN","IBCC",122,0)
 ;   IBIFN - Internal bill# (Required)
"RTN","IBCC",123,0)
 ;   IBCAN - Cancel Flag (optional, defaults to 1 if not included)
"RTN","IBCC",124,0)
 ;
"RTN","IBCC",125,0)
 NEW IBNOASK
"RTN","IBCC",126,0)
 S IBNOASK=1
"RTN","IBCC",127,0)
 S IBCAN=$G(IBCAN,1)
"RTN","IBCC",128,0)
 G ASK
"RTN","IBCC",129,0)
 ;
"RTN","IBCC",130,0)
 ;IBCC
"RTN","IBCC1")
0^16^B14613581^B12774729
"RTN","IBCC1",1,0)
IBCC1 ;ALB/MJB - CANCEL UB-82 THIRD PARTY BILL ;10-OCT-94
"RTN","IBCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**19,95,160,159,320**;21-MAR-94
"RTN","IBCC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCC1",4,0)
 ;
"RTN","IBCC1",5,0)
RNB ; -- Add a reason not billable to claims tracking
"RTN","IBCC1",6,0)
 N X,Y,DIC,DIE,I,J,DA,DR,IBTYP,IBTRE,IB,IBAPPT,IBDT,IBTALK,IBCODE,IBTRED,IBTSAV,FILL,IBRX,IBDATA,IBD,IBDT,IBQUIT,IBPRO,IBDD
"RTN","IBCC1",7,0)
 Q:'$G(IBIFN)
"RTN","IBCC1",8,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IBTYP=$P(IB(0),"^",5),IBQUIT=0
"RTN","IBCC1",9,0)
 I '$D(DFN) S DFN=$P(IB(0),"^",2)
"RTN","IBCC1",10,0)
 ;
"RTN","IBCC1",11,0)
 ; -- is inpt find entry in dgpm, then in ibt(356, s da=ibtre then edit
"RTN","IBCC1",12,0)
INPT I IBTYP<3 D
"RTN","IBCC1",13,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",14,0)
 .S DGPM=$O(^DGPM("APTT1",DFN,DATE,0)) ; double check for asih
"RTN","IBCC1",15,0)
 .I DGPM S (IBTRE,IBTSAV)=$O(^IBT(356,"AD",DGPM,0))
"RTN","IBCC1",16,0)
 .I $G(IBTRE) D RNBEDIT
"RTN","IBCC1",17,0)
 .Q:IBQUIT
"RTN","IBCC1",18,0)
 .;
"RTN","IBCC1",19,0)
 .; -- alternate inpt method
"RTN","IBCC1",20,0)
 .S IBCODE=$O(^IBE(356.6,"ACODE",1,0))
"RTN","IBCC1",21,0)
 .S DATE=$P(IB(0),"^",3),DFN=$P(IB(0),"^",2)
"RTN","IBCC1",22,0)
 .S IBDT=(DATE-.25) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(DATE+.24))  D
"RTN","IBCC1",23,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D:$G(IBTSAV)'=IBTRE RNBEDIT
"RTN","IBCC1",24,0)
 .Q
"RTN","IBCC1",25,0)
 ;
"RTN","IBCC1",26,0)
OPT ; -- is opt-find entries in IBT(356, for opt dates and then edit
"RTN","IBCC1",27,0)
 I IBTYP>2 S IBCODE=$O(^IBE(356.6,"ACODE",2,0)) D
"RTN","IBCC1",28,0)
 .S IBAPPT=0 F  S IBAPPT=$O(^DGCR(399,IBIFN,"OP",IBAPPT)) Q:'IBAPPT!(IBQUIT)  D
"RTN","IBCC1",29,0)
 ..S IBDT=(IBAPPT-.01) F  S IBDT=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT)) Q:'IBDT!(IBDT>(IBAPPT+.24))  D
"RTN","IBCC1",30,0)
 ...S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APTY",DFN,IBCODE,IBDT,IBTRE)) Q:IBTRE=""!(IBQUIT)  D RNBEDIT
"RTN","IBCC1",31,0)
 .Q
"RTN","IBCC1",32,0)
 ;
"RTN","IBCC1",33,0)
RX ; -- find rx's on bill
"RTN","IBCC1",34,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.4,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",35,0)
 .S IBDATA=$G(^IBA(362.4,IBD,0)),IBRX=$P(IBDATA,"^",5),IBDT=$P(IBDATA,"^",3)
"RTN","IBCC1",36,0)
 .I '$G(IBRX) S IBRX=$O(^PSRX("B",$P(IBDATA,"^",1),0)) Q:'IBRX
"RTN","IBCC1",37,0)
 .S FILL="" F  S FILL=$O(^IBT(356,"ARXFL",IBRX,FILL)) Q:FILL=""!(IBQUIT)  D
"RTN","IBCC1",38,0)
 ..S IBTRE=0 F  S IBTRE=$O(^IBT(356,"ARXFL",IBRX,FILL,IBTRE)) Q:'IBTRE!(IBQUIT)  I $P(^IBT(356,+IBTRE,0),"^",6)=IBDT D RNBEDIT
"RTN","IBCC1",39,0)
 ;
"RTN","IBCC1",40,0)
PRO ; -- find prosthetics on bill
"RTN","IBCC1",41,0)
 S IBDD=0 F  S IBDD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD)) Q:'IBDD  S IBD=0 F  S IBD=$O(^IBA(362.5,"AIFN"_IBIFN,IBDD,IBD)) Q:'IBD!(IBQUIT)  D
"RTN","IBCC1",42,0)
 .S IBDATA=$G(^IBA(362.5,IBD,0)),IBPRO=$P(IBDATA,"^",4)
"RTN","IBCC1",43,0)
 .Q:'$G(IBPRO)
"RTN","IBCC1",44,0)
 .S IBTRE=0 F  S IBTRE=$O(^IBT(356,"APRO",+IBPRO,IBTRE)) Q:'IBTRE!(IBQUIT)  D RNBEDIT
"RTN","IBCC1",45,0)
 Q
"RTN","IBCC1",46,0)
 ;
"RTN","IBCC1",47,0)
RNBEDIT ;
"RTN","IBCC1",48,0)
 Q:IBQUIT
"RTN","IBCC1",49,0)
 W:'$D(IBTALK) !!,"Since you have canceled this bill, you may enter a Reason Not Billable",!,"into Claims Tracking.  This will take the care off of the UNBILLED lists"
"RTN","IBCC1",50,0)
 S IBTALK=1
"RTN","IBCC1",51,0)
 ;
"RTN","IBCC1",52,0)
 N %,IBTRED S IBTRED=$G(^IBT(356,IBTRE,0))
"RTN","IBCC1",53,0)
 W !!,"Claims Tracking entry: ",+IBTRED,"  ",$$EXPAND^IBTRE(356,.18,$P(IBTRED,"^",18)),"  ",$$FMTE^XLFDT($P(IBTRED,"^",6))
"RTN","IBCC1",54,0)
 I $G(IBMCSRNB)'="",$P(IBTRED,U,19) W !," Note:  A Reason Not Billable has been previously entered",!?8,"for this Claims Tracking record."
"RTN","IBCC1",55,0)
 S DA=IBTRE,DIE="^IBT(356,",DR=".19"
"RTN","IBCC1",56,0)
 I $G(IBMCSRNB)'="" S DR=".19//"_$P(IBMCSRNB,U,2)    ; IB*320 MCS cancel
"RTN","IBCC1",57,0)
 D ^DIE
"RTN","IBCC1",58,0)
 ;
"RTN","IBCC1",59,0)
 ; - if the RNB changed, update the user and date/time last edited
"RTN","IBCC1",60,0)
 I $P(IBTRED,"^",19)'=$P($G(^IBT(356,IBTRE,0)),"^",19) D NOW^%DTC S DR="1.03///"_%_";1.04////"_DUZ D ^DIE
"RTN","IBCC1",61,0)
 ;
"RTN","IBCC1",62,0)
 ; $D(Y) indicates an up-arrow exit from the DIE call (??)
"RTN","IBCC1",63,0)
 I $D(Y) S DFN=+$P(^IBT(356,IBTRE,0),"^",2) D FIND^IBOHCT(DFN,IBTRE) S IBQUIT=1
"RTN","IBCC1",64,0)
 Q
"RTN","IBCCC")
0^3^B14623718^B13302732
"RTN","IBCCC",1,0)
IBCCC ;ALB/AAS - CANCEL AND CLONE A BILL ;25-JAN-90
"RTN","IBCCC",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320**;21-MAR-94
"RTN","IBCCC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC",4,0)
 ;
"RTN","IBCCC",5,0)
 ;MAP TO DGCRCC
"RTN","IBCCC",6,0)
 ;
"RTN","IBCCC",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancel)
"RTN","IBCCC",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC",14,0)
 ;STEP 6 - go to screens, come out to IBB1 
"RTN","IBCCC",15,0)
EN ;
"RTN","IBCCC",16,0)
 N IBBCF,IBBCT,IBBCB,IBCCR,IBDBC
"RTN","IBCCC",17,0)
 S IBDBC=DT    ;date claim was cloned
"RTN","IBCCC",18,0)
 S IBBCB=DUZ   ;user-id of person cloning the claim.
"RTN","IBCCC",19,0)
 S IBCNCOPY=1 ; flag indicating this function is entered as the copy/cancel option
"RTN","IBCCC",20,0)
 ;
"RTN","IBCCC",21,0)
STEP1 I $G(IBCE("EDI"))>1 G END1
"RTN","IBCCC",22,0)
 S IBCAN=2,IBQUIT=0,IBAC=6,IBU="UNSPECIFIED"
"RTN","IBCCC",23,0)
 I '$G(IBCE("EDI")) D ASK^IBCC
"RTN","IBCCC",24,0)
 I $G(IBCE("EDI"))=1 S IB364="" D NOPTF^IBCC
"RTN","IBCCC",25,0)
 G:IBQUIT END1
"RTN","IBCCC",26,0)
 I 'IBCCCC!('$D(IBIFN)) G STEP1:'$G(IBCE("EDI")),END1
"RTN","IBCCC",27,0)
 I $G(IBCE("EDI")) S IBCE("EDI")=2
"RTN","IBCCC",28,0)
EN1 ;
"RTN","IBCCC",29,0)
STEP1P5 I '$D(IBIFN) S IBCAN=2,IBQUIT=0,IBAC=6 W !,"Copy Previously Cancelled Bill.",!! S DIC="^DGCR(399,",DIC("S")="I $P(^(0),U,13)=7",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or Patient NAME: " D ^DIC G:Y<1 END S IBIFN=+Y
"RTN","IBCCC",30,0)
 ;
"RTN","IBCCC",31,0)
 S IBBCF=IBIFN    ;this is the claim we are copying FROM
"RTN","IBCCC",32,0)
 S IBIDS(.15)=IBIFN K IBIFN
"RTN","IBCCC",33,0)
STEP2 S IBND0=^DGCR(399,IBIDS(.15),0) I $D(^("U")) S IBNDU=^("U")
"RTN","IBCCC",34,0)
 ; *** Note - all these fields should also be included in WHERE^IBCCC1
"RTN","IBCCC",35,0)
 F I=2:1:12 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",36,0)
 F I=16:1:19,21:1:27 S:$P(IBND0,"^",I)]"" IBIDS(I/100)=$P(IBND0,"^",I)
"RTN","IBCCC",37,0)
 F I=151,152,155 S IBIDS(I)=$P(IBNDU,"^",(I-150))
"RTN","IBCCC",38,0)
 S IBIDS(159.5)=$P(IBNDU,U,20)
"RTN","IBCCC",39,0)
 ; ***
"RTN","IBCCC",40,0)
 D HOME^%ZIS
"RTN","IBCCC",41,0)
 S DFN=IBIDS(.02) D DEM^VADPT
"RTN","IBCCC",42,0)
 I +$G(IBCTCOPY)!$G(IBCE("EDI")) G STEP3
"RTN","IBCCC",43,0)
 D ^IBCA1
"RTN","IBCCC",44,0)
ASK S IBYN=0 W !!,"IS THE ABOVE INFORMATION CORRECT AS SHOWN" S %=1 D YN^DICN G END:%=2,STEP3:%=1 I % G END
"RTN","IBCCC",45,0)
 W !!?4,"YES - If this information is correct as shown and you wish to file the bill.",!?4,"NO  - If you wish to change this information prior to filing."
"RTN","IBCCC",46,0)
 W !?4,"'^' - Enter the up-arrow character to DELETE this Bill at this time." G ASK
"RTN","IBCCC",47,0)
 ;
"RTN","IBCCC",48,0)
STEP3 ;
"RTN","IBCCC",49,0)
 S PRCASV("SER")=$P($G(^IBE(350.9,1,1)),"^",14)
"RTN","IBCCC",50,0)
 S PRCASV("SITE")=$P($$SITE^VASITE,"^",3),IBNWBL=""
"RTN","IBCCC",51,0)
 W !,"Passing bill to Accounts Receivable Module..." D SETUP^PRCASVC3 I $S($P(PRCASV("ARREC"),"^")=-1:1,$P(PRCASV("ARBIL"),"^")=-1:1,1:0) W *7,"  ",$P(PRCASV("ARREC"),"^",2),$P(PRCASV("ARBIL"),"^",2) G END
"RTN","IBCCC",52,0)
 S IBIDS(.01)=$P(PRCASV("ARBIL"),"-",2),IBIDS(.17)=$S($D(IBIDS(.17)):IBIDS(.17),1:PRCASV("ARREC"))
"RTN","IBCCC",53,0)
 I '$G(IBCE("EDI")) W !,"Billing Record #",IBIDS(.01)," being established for '",VADM(1),"'..." S IBIDS(.02)=DFN,IBHV("IBIFN")=$S($G(IBIFN):IBIFN,1:$G(IBIDS(.15)))
"RTN","IBCCC",54,0)
 G ^IBCCC1 ;go to step4
"RTN","IBCCC",55,0)
 Q
"RTN","IBCCC",56,0)
 ;
"RTN","IBCCC",57,0)
END W !!,"No Billing Record Set up.  You must manually enter the bill."
"RTN","IBCCC",58,0)
END1 K %,%DT,IBCAN,IBAC,IBND0,IBNDU,IBYN,IBCCCC,IBIFN,IB,IBA,IBNWBL,IBBT,IBIDS,IBU,I,J,VA,VADM,X,X1,X2,X3,X4,D,Y
"RTN","IBCCC",59,0)
 I '$G(IBQUIT),$S(+$G(IBCNCOPY):1,1:'$G(IBCE("EDI"))) G STEP1
"RTN","IBCCC",60,0)
 K IBQUIT,IBCNCOPY
"RTN","IBCCC",61,0)
 Q
"RTN","IBCCC",62,0)
 ;
"RTN","IBCCC1")
0^4^B9434923^B7566189
"RTN","IBCCC1",1,0)
IBCCC1 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;25-JAN-90
"RTN","IBCCC1",2,0)
 ;;2.0;INTEGRATED BILLING;**80,109,106,51,320**;21-MAR-94
"RTN","IBCCC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC1",4,0)
 ;
"RTN","IBCCC1",5,0)
 ;MAP TO DGCRCC1
"RTN","IBCCC1",6,0)
 ;
"RTN","IBCCC1",7,0)
 ;STEP 1 - cancel bill
"RTN","IBCCC1",8,0)
 ;STEP 1.5 - entry to clone previously cancelled bill.  (must be cancell)
"RTN","IBCCC1",9,0)
 ;STEP 2 - build array of IBIDS call screen that asks ok
"RTN","IBCCC1",10,0)
 ;STEP 3 - pass stub entry to ar
"RTN","IBCCC1",11,0)
 ;STEP 4 - store stub data in MCCR then x-ref
"RTN","IBCCC1",12,0)
 ;STEP 4.5 - store claim clone info on "S1" node.
"RTN","IBCCC1",13,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC1",14,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC1",15,0)
 ;
"RTN","IBCCC1",16,0)
STEP4 S X=$P($T(WHERE),";;",2) F I=0:0 S I=$O(IBIDS(I)) Q:'I  S X1=$P($E(X,$F(X,I)+1,999),";",1),$P(IBDR($P(X1,"^",1)),"^",$P(X1,"^",2))=IBIDS(I)
"RTN","IBCCC1",17,0)
 S IBIFN=PRCASV("ARREC") F I=0,"C","M","M1","S","U","U1" I $D(IBDR(I)) S ^DGCR(399,IBIFN,I)=IBDR(I)
"RTN","IBCCC1",18,0)
 D  ; Protect variables;index entry;replace FT if copy/clone and it chngs
"RTN","IBCCC1",19,0)
 . N IBHOLD,DIE,DR,DA,X,Y
"RTN","IBCCC1",20,0)
 . S IBHOLD("FT")=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC1",21,0)
 . S $P(^DGCR(399,0),"^",3)=IBIFN,$P(^(0),"^",4)=$P(^(0),"^",4)+1 W !,"Cross-referencing new billing entry..." D INDEX^IBCCC2
"RTN","IBCCC1",22,0)
 . I $G(IBCNCOPY),IBHOLD("FT"),IBHOLD("FT")'=$P($G(^DGCR(399,IBIFN,0)),U,19) S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBHOLD("FT") D ^DIE
"RTN","IBCCC1",23,0)
 S IBYN=1 W !!,*7,"Billing Record #",$P(^DGCR(399,+IBIFN,0),"^",1)," established for '",VADM(1),"'..."
"RTN","IBCCC1",24,0)
 S:$G(IBCE("EDI")) IBCE("EDI","NEW")=IBIFN
"RTN","IBCCC1",25,0)
 I $G(IBCE("EDI"))!($G(IBCTCOPY)=1) S IBHV("IBIFN1")=IBIFN ; New bill #
"RTN","IBCCC1",26,0)
 S IBBCT=IBIFN   ;bill the old claim was cloned TO.
"RTN","IBCCC1",27,0)
END K %,%DT,IB,IBA,IBNWBL,IBBT,IBIDS,I,J,VADM,X,X1,X2,X3,X4,Y
"RTN","IBCCC1",28,0)
 ;
"RTN","IBCCC1",29,0)
STEP4P5 ;added in patch 320
"RTN","IBCCC1",30,0)
 ;first, put the TO data on the FROM bill
"RTN","IBCCC1",31,0)
 ;
"RTN","IBCCC1",32,0)
 I '$G(IBCNCOPY) G STEP45X
"RTN","IBCCC1",33,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="29////"_$G(IBBCT) D ^DIE
"RTN","IBCCC1",34,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="31////"_$G(IBDBC) D ^DIE
"RTN","IBCCC1",35,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="32////"_$G(IBBCB) D ^DIE
"RTN","IBCCC1",36,0)
 S DIE="^DGCR(399,",DA=IBBCF,DR="33////"_$G(IBCCR) D ^DIE
"RTN","IBCCC1",37,0)
 ;
"RTN","IBCCC1",38,0)
 ;now, put the FROM data on the TO bill
"RTN","IBCCC1",39,0)
 ;
"RTN","IBCCC1",40,0)
 S DIE="^DGCR(399,",DA=IBBCT,DR="30////"_$G(IBBCF) D ^DIE
"RTN","IBCCC1",41,0)
 ;
"RTN","IBCCC1",42,0)
STEP45X G ^IBCCC2 ;go to step 5
"RTN","IBCCC1",43,0)
 ;
"RTN","IBCCC1",44,0)
 ;
"RTN","IBCCC1",45,0)
XREF F IBI1=0:0 S IBI1=$O(^DD(399,IBI,1,IBI1)) Q:'IBI1  I $D(^DD(399,IBI,1,IBI1,1)) S DA=IBIFN,X=IBIDS(IBI) I X]"" X ^DD(399,IBI,1,IBI1,1)
"RTN","IBCCC1",46,0)
 Q
"RTN","IBCCC1",47,0)
 ;
"RTN","IBCCC1",48,0)
WHERE ;;.01^0^1;.02^0^2;.03^0^3;.04^0^4;.05^0^5;.06^0^6;.07^0^7;.08^0^8;.09^0^9;.11^0^11;.12^0^12;.17^0^17;.18^0^18;.19^0^19;.15^0^15;.16^0^16;.21^0^21;.22^0^22;.23^0^23;.24^0^24;.25^0^25;.26^0^26;.27^0^27;151^U^1;152^U^2;155^U^5;159.5^U^20;
"RTN","IBCCC1",49,0)
 ;
"RTN","IBCCC2")
0^43^B56568071^B55435831
"RTN","IBCCC2",1,0)
IBCCC2 ;ALB/AAS - CANCEL AND CLONE A BILL - CONTINUED ;6/6/03 9:56am
"RTN","IBCCC2",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,124,138,51,151,137,161,182,211,245,155,296,320**;21-MAR-94
"RTN","IBCCC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCC2",4,0)
 ;
"RTN","IBCCC2",5,0)
 ;MAP TO DGCRCC2
"RTN","IBCCC2",6,0)
 ;
"RTN","IBCCC2",7,0)
 ;STEP 5 - get remainder of data to move and store in MCCR then x-ref
"RTN","IBCCC2",8,0)
 ;STEP 6 - go to screens, come out to IBB1 or something like that
"RTN","IBCCC2",9,0)
 ;
"RTN","IBCCC2",10,0)
STEP5 S IBIFN1=$P(^DGCR(399,IBIFN,0),"^",15) G END:$S(IBIFN1="":1,'$D(^DGCR(399,IBIFN1,0)):1,1:0)
"RTN","IBCCC2",11,0)
 ;
"RTN","IBCCC2",12,0)
 ;move pure data nodes
"RTN","IBCCC2",13,0)
 F I="I1","I2","I3","M1" I $D(^DGCR(399,IBIFN1,I)) S ^DGCR(399,IBIFN,I)=^DGCR(399,IBIFN1,I)
"RTN","IBCCC2",14,0)
 ;
"RTN","IBCCC2",15,0)
 ;move top level data node. ;Do not move 'TX' node
"RTN","IBCCC2",16,0)
 F I="U","U1","U2","U3","UF2","UF3","UF31","C","M" I $D(^DGCR(399,IBIFN1,I)) S IBND(I)=^(I) D @I
"RTN","IBCCC2",17,0)
 ;
"RTN","IBCCC2",18,0)
 ;move multiple level data
"RTN","IBCCC2",19,0)
 F I="CC","OC","OP","OT","RC","CP","CV","PRV" I $D(^DGCR(399,IBIFN1,I,0)) D @I
"RTN","IBCCC2",20,0)
 ;
"RTN","IBCCC2",21,0)
 D FTPRV^IBCEU5(IBIFN) ; Ask change prov type if form type not the same
"RTN","IBCCC2",22,0)
 D COBCHG(IBIFN,,.IBCOB)
"RTN","IBCCC2",23,0)
 ;
"RTN","IBCCC2",24,0)
 D ^IBCCC3 ; copy table files (362.3)
"RTN","IBCCC2",25,0)
 ;
"RTN","IBCCC2",26,0)
 S I=$G(^DGCR(399,IBIFN1,0)) I $P(I,U,13)=7,$P(I,U,20)=1 D COPYB^IBCDC(IBIFN1,IBIFN) ; update auto bill files
"RTN","IBCCC2",27,0)
 D PRIOR(IBIFN) ; add new bill to previous bills in series, primary/secondary
"RTN","IBCCC2",28,0)
 I +$G(IBCTCOPY) N IBAUTO S IBAUTO=1 D PROC^IBCU7A(IBIFN),BILL^IBCRBC(IBIFN),CPTMOD26^IBCU73(IBIFN) D RECALL^DILFD(399,IBIFN_",",DUZ) G END
"RTN","IBCCC2",29,0)
 ;
"RTN","IBCCC2",30,0)
STEP6 N IBGOEND
"RTN","IBCCC2",31,0)
 I '$G(IBCE("EDI"))!$G(IBCE("EDI","NEW")),'$G(IBCEAUTO) D IBSCEDT G END:$G(IBGOEND)
"RTN","IBCCC2",32,0)
 ;
"RTN","IBCCC2",33,0)
 ;
"RTN","IBCCC2",34,0)
END K DFN,IB,IBA,IBA2,IBAD,IBADD1,IBBNO,IBCAN,IBCCC,IBDA,IBDPT,IBDR,IBDT,IBI,IBI1,IBIDS,IBIFN,IBIFN1,IBND,IBQUIT,IBU,IBUN,IBARST,IBCOB,IBCNCOPY,IBCBCOPY
"RTN","IBCCC2",35,0)
 K IBV,IBV1,IBW,IBWW,IBYN,IBZZ,PRCASV,PRCAERCD,PRCAERR,PRCASVC,PRCAT,IBBT,IBCH,IBNDS,IBOA,IBREV,IBX,DGXRF1,VAEL,VAERR,IBAC,IBCCC,IBDD1,IBIN,DGREV,DGREV00,DGREVHDR,IBCHK
"RTN","IBCCC2",36,0)
 K IBBS,IBLS,DGPCM,IBIP,IBND0,IBNDU,IBO,IBPTF,IBST,IBUC,IBDD,D,%,%DT,DIC,VA,VADM,X,X1,X2,X3,X4,Y,I,J,K,DGRVRCAL,DDH,DGACTDT,DGAMNT,DGBR,DGBRN,DGBSI,DGBSLOS,IBA1,IBOD,IBINS,IBN,IBPROC,DGFUNC,DGIFN
"RTN","IBCCC2",37,0)
 Q
"RTN","IBCCC2",38,0)
 ;
"RTN","IBCCC2",39,0)
 ;
"RTN","IBCCC2",40,0)
IBSCEDT ; call the IB bill edit screens and validate the data
"RTN","IBCCC2",41,0)
 N IBV,IBPAR,IBAC,IBHV,IBH,IBCIREDT
"RTN","IBCCC2",42,0)
 D RECALL^DILFD(399,IBIFN_",",DUZ)
"RTN","IBCCC2",43,0)
ST1 S IBV=0 D ^IBCSCU,^IBCSC1 I $G(IBPOPOUT) S IBGOEND=1 G IBSCX
"RTN","IBCCC2",44,0)
 S IBAC=1
"RTN","IBCCC2",45,0)
 D ^IBCB1
"RTN","IBCCC2",46,0)
 I $G(IBCIREDT) G ST1
"RTN","IBCCC2",47,0)
IBSCX ;
"RTN","IBCCC2",48,0)
 Q
"RTN","IBCCC2",49,0)
 ;
"RTN","IBCCC2",50,0)
 ;
"RTN","IBCCC2",51,0)
U F J=3,4,6:1:17,20 I $P(IBND("U"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U"),"^",J)=$P(IBND("U"),"^",J)
"RTN","IBCCC2",52,0)
 Q
"RTN","IBCCC2",53,0)
U1 F J=1:1:9,13,14 I $P(IBND("U1"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U1"),"^",J)=$P(IBND("U1"),"^",J)
"RTN","IBCCC2",54,0)
 Q
"RTN","IBCCC2",55,0)
U2 F J=1:1:19 I $P(IBND("U2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U2"),"^",J)=$P(IBND("U2"),"^",J)
"RTN","IBCCC2",56,0)
 Q
"RTN","IBCCC2",57,0)
U3 F J=1 I $P(IBND("U3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"U3"),"^",J)=$P(IBND("U3"),"^",J)
"RTN","IBCCC2",58,0)
 Q
"RTN","IBCCC2",59,0)
UF2 F J=1 I $P(IBND("UF2"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF2"),"^",J)=$P(IBND("UF2"),"^",J)
"RTN","IBCCC2",60,0)
 Q
"RTN","IBCCC2",61,0)
UF3 F J=1:1:7 I $P(IBND("UF3"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF3"),"^",J)=$P(IBND("UF3"),"^",J)
"RTN","IBCCC2",62,0)
 Q
"RTN","IBCCC2",63,0)
UF31 F J=1:1:3 I $P(IBND("UF31"),"^",J)]"" S $P(^DGCR(399,IBIFN,"UF31"),"^",J)=$P(IBND("UF31"),"^",J)
"RTN","IBCCC2",64,0)
 Q
"RTN","IBCCC2",65,0)
C F J=10 I $P(IBND("C"),"^",J)]"" S $P(^DGCR(399,IBIFN,"C"),"^",J)=$P(IBND("C"),"^",J)
"RTN","IBCCC2",66,0)
 I '$D(^DGCR(399,IBIFN1,"CP")) D CP1
"RTN","IBCCC2",67,0)
 Q
"RTN","IBCCC2",68,0)
M F J=1:1:14 I $P(IBND("M"),"^",J)]"" S $P(^DGCR(399,IBIFN,"M"),"^",J)=$P(IBND("M"),"^",J)
"RTN","IBCCC2",69,0)
 Q
"RTN","IBCCC2",70,0)
CC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",71,0)
 S IBDD=399.04 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",72,0)
OP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",73,0)
 S IBDD=399.043 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",74,0)
 Q
"RTN","IBCCC2",75,0)
OC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",76,0)
 S IBDD=399.041 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",77,0)
 Q
"RTN","IBCCC2",78,0)
OT S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",79,0)
 S IBDD=399.048 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",80,0)
 Q
"RTN","IBCCC2",81,0)
CV ; Don't copy value codes from inpatient inst to inpatient prof bills
"RTN","IBCCC2",82,0)
 I $$FT^IBCEF(IBIFN1)'=2,$$FT^IBCEF(IBIFN)=2 Q
"RTN","IBCCC2",83,0)
 S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",84,0)
 S IBDD=399.047 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",85,0)
 Q
"RTN","IBCCC2",86,0)
RC S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",87,0)
 S IBDD=399.042 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("RC")=^(0) F K=1:1:15 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("RC"),"^",K),X=$P(IBND("RC"),"^",K)
"RTN","IBCCC2",88,0)
 Q
"RTN","IBCCC2",89,0)
CP S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",90,0)
 I +$G(IBNOCPT) Q
"RTN","IBCCC2",91,0)
 S IBDD=399.0304 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) S IBND("CP")=^(0),IBND("CP-AUX")=$G(^("AUX")) D
"RTN","IBCCC2",92,0)
 . F K=1:1:7,9:1:14,16:1:22 S $P(^DGCR(399,IBIFN,I,J,0),"^",K)=$P(IBND("CP"),"^",K)
"RTN","IBCCC2",93,0)
 . I IBND("CP-AUX")'="" F K=1:1:8 S $P(^DGCR(399,IBIFN,I,J,"AUX"),"^",K)=$P(IBND("CP-AUX"),"^",K)
"RTN","IBCCC2",94,0)
 . I $D(^DGCR(399,IBIFN1,I,J,"MOD",0)) S ^DGCR(399,IBIFN,I,J,"MOD",0)=^DGCR(399,IBIFN1,I,J,"MOD",0) D
"RTN","IBCCC2",95,0)
 .. S K=0 F  S K=$O(^DGCR(399,IBIFN1,I,J,"MOD",K)) Q:'K  D
"RTN","IBCCC2",96,0)
 ... I $G(IBNOTC),$P($$MOD^ICPTMOD(+$P($G(^DGCR(399,IBIFN1,I,J,"MOD",K,0)),U,2),"I"),U,2)="TC" Q  ; Don't copy TC modifier from inst to prof bill
"RTN","IBCCC2",97,0)
 ... S ^DGCR(399,IBIFN,I,J,"MOD",K,0)=^DGCR(399,IBIFN1,I,J,"MOD",K,0)
"RTN","IBCCC2",98,0)
CP1 S IBCOD=$P($G(^DGCR(399,IBIFN,0)),"^",9) Q:IBCOD=""!('$D(^DGCR(399,IBIFN1,"C")))
"RTN","IBCCC2",99,0)
 I IBCOD=9 F DGI=4,5,6 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICD0(",DGPROCDT=$P(^("C"),"^",DGI+7) D FILE
"RTN","IBCCC2",100,0)
 I IBCOD=4 F DGI=1,2,3 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+10) D FILE
"RTN","IBCCC2",101,0)
 I IBCOD=5 F DGI=7,8,9 I $P(^DGCR(399,IBIFN1,"C"),"^",DGI) S X=$P(^("C"),"^",DGI)_";ICPT(",DGPROCDT=$P(^("C"),"^",DGI+4) D FILE
"RTN","IBCCC2",102,0)
 Q
"RTN","IBCCC2",103,0)
 ;
"RTN","IBCCC2",104,0)
PRV S ^DGCR(399,IBIFN,I,0)=^DGCR(399,IBIFN1,I,0)
"RTN","IBCCC2",105,0)
 N Z,Z0
"RTN","IBCCC2",106,0)
 S Z=$P($G(^DGCR(399,IBIFN,0)),U,19),Z0=$P($G(^DGCR(399,IBIFN1,0)),U,19)
"RTN","IBCCC2",107,0)
 S IBDD=399.0222 F J=0:0 S J=$O(^DGCR(399,IBIFN1,I,J)) Q:'J  I $D(^(J,0)) D
"RTN","IBCCC2",108,0)
 . S ^DGCR(399,IBIFN,I,J,0)=^DGCR(399,IBIFN1,I,J,0),X=$P(^(0),"^")
"RTN","IBCCC2",109,0)
 . I Z'=Z0,$S(X=3:Z0=3,X=4:Z0=2,1:0) S $P(^DGCR(399,IBIFN,I,J,0),U)=(Z0+1)
"RTN","IBCCC2",110,0)
 Q
"RTN","IBCCC2",111,0)
 ;
"RTN","IBCCC2",112,0)
COB S J=0 F  S J=$O(IBCOB(I,J)) Q:'J  S $P(^DGCR(399,IBIFN,I),U,J)=IBCOB(I,J)
"RTN","IBCCC2",113,0)
 Q
"RTN","IBCCC2",114,0)
 ;
"RTN","IBCCC2",115,0)
FILE N DIC,DIE,DR,DA,X,Y,DLAYGO,DD,DO
"RTN","IBCCC2",116,0)
 I '$D(^DGCR(399,IBIFN,"CP",0)) S DIC("P")=$$GETSPEC^IBEFUNC(399,304)
"RTN","IBCCC2",117,0)
 S DIC(0)="L",DLAYGO=399,DA(1)=IBIFN,DIC="^DGCR(399,"_DA(1)_",""CP""," Q:X=""  D FILE^DICN K DO,DD Q:+Y<1  S DA=+Y
"RTN","IBCCC2",118,0)
 S DIE="^DGCR(399,"_DA(1)_",""CP"",",DR="1///"_DGPROCDT D ^DIE
"RTN","IBCCC2",119,0)
 K DGPROCDT
"RTN","IBCCC2",120,0)
 Q
"RTN","IBCCC2",121,0)
 ;
"RTN","IBCCC2",122,0)
INDEX ;index entire file (set logic)
"RTN","IBCCC2",123,0)
 S DIK="^DGCR(399,",DA=IBIFN D IX1^DIK K DA,DIK
"RTN","IBCCC2",124,0)
 Q
"RTN","IBCCC2",125,0)
 ;
"RTN","IBCCC2",126,0)
PRIOR(IBIFN) ; set Secondary/Tertiary Bill #s on prior bills, if the bill is cancelled remove it from prior bills
"RTN","IBCCC2",127,0)
 N IBSEQ,IBSEQN,IBM1,I,IBIFN1
"RTN","IBCCC2",128,0)
 S IBSEQ=$$COB^IBCEF(IBIFN)
"RTN","IBCCC2",129,0)
 S IBSEQN=$S(IBSEQ="S":6,IBSEQ="T":7,1:"") Q:'IBSEQN
"RTN","IBCCC2",130,0)
 ;
"RTN","IBCCC2",131,0)
 S IBM1=$G(^DGCR(399,IBIFN,"M1")) I +$P(^DGCR(399,IBIFN,0),U,13)=7 S IBIFN=""
"RTN","IBCCC2",132,0)
 F I=5,6 I I<IBSEQN  S IBIFN1=+$P(IBM1,U,I) I +IBIFN1,$D(^DGCR(399,+IBIFN1,0)) S $P(^DGCR(399,IBIFN1,"M1"),U,IBSEQN)=IBIFN
"RTN","IBCCC2",133,0)
 Q
"RTN","IBCCC2",134,0)
 ;
"RTN","IBCCC2",135,0)
COBCHG(IBIFN,IBINS,IBCOB) ; Make changes for a new COB payer for bill
"RTN","IBCCC2",136,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCCC2",137,0)
 ; IBINS = ien of bill's current insurance (optional)
"RTN","IBCCC2",138,0)
 ; IBCOB = array subscripted by node,piece of COB data field change
"RTN","IBCCC2",139,0)
 ;
"RTN","IBCCC2",140,0)
 N I,IBFRMTYP
"RTN","IBCCC2",141,0)
 ; Subtract the Prior Payments from the bill's Offset (these are re-added by triggers)
"RTN","IBCCC2",142,0)
 F I=4,5,6  S $P(^DGCR(399,IBIFN,"U1"),U,2)=$P($G(^DGCR(399,IBIFN,"U1")),U,2)-$P($G(^DGCR(399,IBIFN,"U2")),U,I)
"RTN","IBCCC2",143,0)
 ;
"RTN","IBCCC2",144,0)
 I $G(IBINS),$$MCRWNR^IBEFUNC(IBINS) D
"RTN","IBCCC2",145,0)
 . ;MCRWNR is current insurance ... move payer only
"RTN","IBCCC2",146,0)
 . N IBCOBN,IBX
"RTN","IBCCC2",147,0)
 . S IBCOBN=$$COBN^IBCEF(IBIFN)
"RTN","IBCCC2",148,0)
 . S IBCOB(0,21)=$P("S^T^",U,IBCOBN)
"RTN","IBCCC2",149,0)
 . S IBCOB("M1",IBCOBN+4)=IBIFN
"RTN","IBCCC2",150,0)
 . S IBCOB("TX",1)="",IBCOB("TX",2)=""
"RTN","IBCCC2",151,0)
 . S IBX=$$REQMRA^IBEFUNC(IBIFN)
"RTN","IBCCC2",152,0)
 . I IBX=0 S IBCOB("TX",5)=0                         ; MRA not needed
"RTN","IBCCC2",153,0)
 . I IBX["R" S IBCOB("TX",5)="A"                     ; MRA skipped
"RTN","IBCCC2",154,0)
 . I IBX=1,$$CHK^IBCEMU1(IBIFN) S IBCOB("TX",5)="C"  ; MRA on file
"RTN","IBCCC2",155,0)
 . I $G(IBPRCOB) S IBCOB("TX",5)="C"                 ; MRA being proc'd
"RTN","IBCCC2",156,0)
 . D PRIOR(IBIFN)
"RTN","IBCCC2",157,0)
 . Q
"RTN","IBCCC2",158,0)
 ;
"RTN","IBCCC2",159,0)
 ;reset fields for next Sequence Payer
"RTN","IBCCC2",160,0)
 F I=0,"M1","U2","TX" I $D(IBCOB(I)) D COB
"RTN","IBCCC2",161,0)
 ;
"RTN","IBCCC2",162,0)
 ; IB*2.0*211
"RTN","IBCCC2",163,0)
 ; save off Form Type
"RTN","IBCCC2",164,0)
 S IBFRMTYP=$P($G(^DGCR(399,IBIFN,0)),U,19)
"RTN","IBCCC2",165,0)
 ;
"RTN","IBCCC2",166,0)
 ; fire xrefs set logic
"RTN","IBCCC2",167,0)
 D INDEX
"RTN","IBCCC2",168,0)
 ;
"RTN","IBCCC2",169,0)
 ; Restore Form Type if changed, but don't restore Form Type if
"RTN","IBCCC2",170,0)
 ;   creating HCFA bill from CTCOPY1^IBCCCB
"RTN","IBCCC2",171,0)
 I $G(IBCTCOPY)'=1,IBFRMTYP'=$P($G(^DGCR(399,IBIFN,0)),U,19) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR=".19////"_IBFRMTYP D ^DIE
"RTN","IBCCC2",172,0)
 ;
"RTN","IBCCC2",173,0)
 ; Restore Claim MRA Status field since triggers in fields 101 & 102
"RTN","IBCCC2",174,0)
 ;   will overwrite the correct value when processing the MRA/EOB.
"RTN","IBCCC2",175,0)
 ; If we're processing the MRA/EOB, then a valid MRA has been received.
"RTN","IBCCC2",176,0)
 I $G(IBPRCOB) N DA,DIE,DR S DA=IBIFN,DIE="^DGCR(399,",DR="24////C" D ^DIE
"RTN","IBCCC2",177,0)
 ;
"RTN","IBCCC2",178,0)
 K IBCOB("TX")
"RTN","IBCCC2",179,0)
 Q
"RTN","IBCCC2",180,0)
 ;
"RTN","IBCCR")
0^19^B4318909
"RTN","IBCCR",1,0)
IBCCR ;ALB/EJK - CLAIM CANCEL AND RESUBMIT INFORMATION ;23-FEB-2005
"RTN","IBCCR",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCCR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCCR",4,0)
 ;
"RTN","IBCCR",5,0)
 ;This routine can be invoked from any function that displays
"RTN","IBCCR",6,0)
 ;or reviews claim information. Using the current IBIFN,
"RTN","IBCCR",7,0)
 ;cancelled bill information and new bill information is returned.
"RTN","IBCCR",8,0)
 ;
"RTN","IBCCR",9,0)
 ;OUTPUT:
"RTN","IBCCR",10,0)
 ;  IBCCR array (pass by reference)
"RTN","IBCCR",11,0)
 ;  IBCCR(FM date cloned,bill#) [1] FM date cloned
"RTN","IBCCR",12,0)
 ;                              [2] external claim#
"RTN","IBCCR",13,0)
 ;                              [3] user who cloned (external)
"RTN","IBCCR",14,0)
 ;                              [4] reason cloned
"RTN","IBCCR",15,0)
 ;   old bill and new bill information is returned.
"RTN","IBCCR",16,0)
 ;   As much as possible in both directions.
"RTN","IBCCR",17,0)
 ;
"RTN","IBCCR",18,0)
EN(IBIFN,IBCCR) ;
"RTN","IBCCR",19,0)
 N IBOB,IBUSER,IBBCT,IBRSN,IBXDATA,IBDBC
"RTN","IBCCR",20,0)
 KILL IBCCR
"RTN","IBCCR",21,0)
 S IBXDATA("S1")=$G(^DGCR(399,IBIFN,"S1"))
"RTN","IBCCR",22,0)
 I $P($G(IBXDATA("S1")),U,2)'="" S IBOB=$P($G(IBXDATA("S1")),U,2) D OBINFO      ;THIS BILL IS A CLONE.
"RTN","IBCCR",23,0)
 I $P($G(IBXDATA("S1")),U,1)'="" S IBBCT=$P($G(^DGCR(399,IBIFN,"S1")),U,1) D CLONE       ;GET CLONE INFO.
"RTN","IBCCR",24,0)
 Q
"RTN","IBCCR",25,0)
 ;
"RTN","IBCCR",26,0)
OBINFO ;This claim is a clone of an old one. 
"RTN","IBCCR",27,0)
 ;Per E-Claims+ Iteration II requirement 3.2.12
"RTN","IBCCR",28,0)
 ;we want to find and return the entire cloning history as far back
"RTN","IBCCR",29,0)
 ;as we can go. 
"RTN","IBCCR",30,0)
 ;
"RTN","IBCCR",31,0)
 S IBDBC=$P($G(^DGCR(399,IBOB,"S1")),U,3)
"RTN","IBCCR",32,0)
 S IBUSER=+$P($G(^DGCR(399,IBOB,"S1")),U,4)
"RTN","IBCCR",33,0)
 S IBUSER=$P($G(^VA(200,IBUSER,0)),U,1)
"RTN","IBCCR",34,0)
 S IBRSN=$P($G(^DGCR(399,IBOB,"S1")),U,5)
"RTN","IBCCR",35,0)
 S IBCCR(+IBDBC,IBOB)=IBDBC_U_$P($G(^DGCR(399,IBOB,0)),U,1)_U_IBUSER_U_IBRSN
"RTN","IBCCR",36,0)
 I $P($G(^DGCR(399,IBOB,"S1")),U,2) S IBOB=$P($G(^DGCR(399,IBOB,"S1")),U,2) G OBINFO      ;THIS BILL IS A CLONE.
"RTN","IBCCR",37,0)
 Q
"RTN","IBCCR",38,0)
 ;
"RTN","IBCCR",39,0)
CLONE ;This claim has been cancelled and cloned to a newer claim.
"RTN","IBCCR",40,0)
 ;This function gets all pertinent data of who, why and when the
"RTN","IBCCR",41,0)
 ;current claim was cancelled, then jumps forward to the next claim
"RTN","IBCCR",42,0)
 ;to see if that was copy/cancelled as well. 
"RTN","IBCCR",43,0)
 ;
"RTN","IBCCR",44,0)
 S IBDBC=$P($G(^DGCR(399,IBIFN,"S1")),U,3)
"RTN","IBCCR",45,0)
 S IBUSER=+$P($G(^DGCR(399,IBIFN,"S1")),U,4)
"RTN","IBCCR",46,0)
 S IBUSER=$P($G(^VA(200,IBUSER,0)),U,1)
"RTN","IBCCR",47,0)
 S IBRSN=$P($G(^DGCR(399,IBIFN,"S1")),U,5)
"RTN","IBCCR",48,0)
 S IBCCR(+IBDBC,IBBCT)=IBDBC_U_$P($G(^DGCR(399,IBBCT,0)),U,1)_U_IBUSER_U_IBRSN
"RTN","IBCCR",49,0)
 S IBIFN=IBBCT
"RTN","IBCCR",50,0)
 S IBBCT=$P($G(^DGCR(399,IBIFN,"S1")),U,1)
"RTN","IBCCR",51,0)
 I IBIFN<IBBCT G CLONE
"RTN","IBCCR",52,0)
 Q
"RTN","IBCCR",53,0)
 ;
"RTN","IBCE837B")
0^35^B3184659^B2951786
"RTN","IBCE837B",1,0)
IBCE837B ;ALB/TMP - OUTPUT FOR 837 TRANSMISSION (cont) ;24-APR-01
"RTN","IBCE837B",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,197,320**;21-MAR-94
"RTN","IBCE837B",3,0)
 ;
"RTN","IBCE837B",4,0)
QTXMT(IBSITE8) ; Run now or queue EDI bill transmit (part of nightly job)
"RTN","IBCE837B",5,0)
 ; IBSITE8 = the '8' node of the site parameters file (350.9)
"RTN","IBCE837B",6,0)
 I $P(IBSITE8,U,6)="" D
"RTN","IBCE837B",7,0)
 . D EN1("",1)
"RTN","IBCE837B",8,0)
 E  D
"RTN","IBCE837B",9,0)
 . N Z,Z0
"RTN","IBCE837B",10,0)
 . F Z=1:1:4 S Z0=$P($P(IBSITE8,U,6),";",Z) Q:Z0=""  D
"RTN","IBCE837B",11,0)
 .. S IBQDT=$S($E(($$NOW^XLFDT()#1*10000\1)_"0000",1,4)>Z0:$$FMADD^XLFDT(DT,1),1:DT)_"."_Z0  ; If time to queue is after the current time, queue for the next day
"RTN","IBCE837B",12,0)
 .. D EN1("",1,+IBQDT)
"RTN","IBCE837B",13,0)
 Q
"RTN","IBCE837B",14,0)
 ;
"RTN","IBCE837B",15,0)
EN1(IBZTSK,IBNOASK,IBQDT,IBABORT) ;Txmit 837's for bills waiting transmission
"RTN","IBCE837B",16,0)
 ; Pass IBZTSK by ref to get task # if job is tasked
"RTN","IBCE837B",17,0)
 ; IBNOASK = flag: 0 = ask to queue,  1 = no ask to queue
"RTN","IBCE837B",18,0)
 ; IBQDT = if IBNOASK=1, this can be the date/time to queue the job
"RTN","IBCE837B",19,0)
 ; Pass IBABORT by reference to determine if user aborted process
"RTN","IBCE837B",20,0)
 N Z S Z=$O(^IBE(353,"B","IB 837 TRANSMISSION",0)),Z=$S($P($G(^IBE(353,+Z,2)),U,8):$P(^(2),U,8),1:Z)
"RTN","IBCE837B",21,0)
 I Z D
"RTN","IBCE837B",22,0)
 . I $D(^TMP("IBRESUBMIT",$J))!($G(IBNOASK)) D FORM^IBCEFG7(Z,$P($G(^IBE(350.9,1,8)),U),+$G(IBNOASK),$S($G(IBNOASK):$G(IBQDT),1:""),.IBZTSK,.IBABORT) Q
"RTN","IBCE837B",23,0)
 . D FORM^IBCEFG7(Z,$P($G(^IBE(350.9,1,8)),U),+$G(IBNOASK),$S($G(IBNOASK):$G(IBQDT),1:""),"",.IBABORT)
"RTN","IBCE837B",24,0)
 Q
"RTN","IBCE837B",25,0)
 ;
"RTN","IBCECSA")
0^10^B60060653^B19274445
"RTN","IBCECSA",1,0)
IBCECSA ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;28-JUL-1999
"RTN","IBCECSA",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320**;21-MAR-1994
"RTN","IBCECSA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA",4,0)
 ;
"RTN","IBCECSA",5,0)
EN ; -- main entry point for claims status awaiting resolution
"RTN","IBCECSA",6,0)
 N IBSORT,IBSORT1,IBSORT2,IBSORT3,IBSORTOR,IBDAYS
"RTN","IBCECSA",7,0)
 D EN^VALM("IBCEM CSA LIST")
"RTN","IBCECSA",8,0)
 Q
"RTN","IBCECSA",9,0)
 ;
"RTN","IBCECSA",10,0)
HDR ; -- header code
"RTN","IBCECSA",11,0)
 S VALMSG="* Indicates CSA review in progress"
"RTN","IBCECSA",12,0)
 Q
"RTN","IBCECSA",13,0)
 ;
"RTN","IBCECSA",14,0)
INIT ; -- init variables and list array
"RTN","IBCECSA",15,0)
 N DIC,DIR,DIRUT,DIROUT,DTOUT,DUOUT,Y,X,IBFIRST
"RTN","IBCECSA",16,0)
 K ^TMP("IBBIL",$J),^TMP("IBDIV",$J),VALMQUIT
"RTN","IBCECSA",17,0)
 S VALMCNT=0
"RTN","IBCECSA",18,0)
 ;
"RTN","IBCECSA",19,0)
 S DIR(0)="NA^0:999",DIR("B")=0,DIR("A")="MINIMUM # OF DAYS MSGS WAITING TO BE RESOLVED: ",DIR("?")="Enter the minimum number of days you want a message to have been waiting to be resolved before it will be displayed on this screen."
"RTN","IBCECSA",20,0)
 D ^DIR K DIR
"RTN","IBCECSA",21,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",22,0)
 S IBDAYS=Y
"RTN","IBCECSA",23,0)
 ;
"RTN","IBCECSA",24,0)
 S IBFIRST=1
"RTN","IBCECSA",25,0)
 F  S DIC="^VA(200,",DIC(0)="AEQM",DIC("A")=$S(IBFIRST:"",1:" Another ")_"AUTHORIZING BILLER: "_$S(IBFIRST:"ALL// ",1:"") D ^DIC K DIC Q:Y<0  D
"RTN","IBCECSA",26,0)
 . I $D(^TMP("IBBIL",$J,+Y)) W !,"This biller has already been selected" Q
"RTN","IBCECSA",27,0)
 . S ^TMP("IBBIL",$J,+Y)="",IBFIRST=0
"RTN","IBCECSA",28,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",29,0)
 ;
"RTN","IBCECSA",30,0)
 S IBFIRST=1
"RTN","IBCECSA",31,0)
 F  S DIC="^DG(40.8,",DIC(0)="AEQMN",DIC("A")=$S(IBFIRST:"",1:" Another ")_"DIVISION: "_$S(IBFIRST:"ALL//",1:"") D ^DIC K DIC Q:Y<0  S ^TMP("IBDIV",$J,+Y)="",IBFIRST=0
"RTN","IBCECSA",32,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",33,0)
 ;
"RTN","IBCECSA",34,0)
 ; IB*320 - new sorting
"RTN","IBCECSA",35,0)
 W !
"RTN","IBCECSA",36,0)
 K IBSORTOR
"RTN","IBCECSA",37,0)
 D SORT(1) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",38,0)
 D SORT(2) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",39,0)
 I $G(IBSORT2)'="" D SORT(3) I $G(VALMQUIT) G INITQ
"RTN","IBCECSA",40,0)
 ;
"RTN","IBCECSA",41,0)
 S DIR(0)="SA^R:REJECTS ONLY;B:BOTH INFORMATIONAL AND REJECTS",DIR("A")="(R)ejects only OR (B)oth informational and rejects?: "
"RTN","IBCECSA",42,0)
 S DIR("?",1)="YOU MAY CHOOSE TO SEE JUST THOSE MESSAGES WE KNOW ARE REJECTS OR YOU MAY",DIR("?")="  CHOOSE TO SEE ALL MESSAGES MEETING YOUR SELECTION CRITERIA",DIR("B")="REJECTS ONLY" W !! D ^DIR K DIR
"RTN","IBCECSA",43,0)
 I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 G INITQ
"RTN","IBCECSA",44,0)
 S IBSEV=Y
"RTN","IBCECSA",45,0)
 D BLD^IBCECSA1
"RTN","IBCECSA",46,0)
INITQ Q
"RTN","IBCECSA",47,0)
 ;
"RTN","IBCECSA",48,0)
HELP ; -- help code
"RTN","IBCECSA",49,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA",50,0)
 S VALMSG="* Indicates review in progress"
"RTN","IBCECSA",51,0)
 Q
"RTN","IBCECSA",52,0)
 ;
"RTN","IBCECSA",53,0)
EXIT ; -- exit code
"RTN","IBCECSA",54,0)
 K IBDAYS,IBSORT1,IBSORT2,IBSORT3,IBSORTOR
"RTN","IBCECSA",55,0)
 K ^TMP("IBCECSA",$J),^TMP("IBDIV",$J),^TMP("IBBIL",$J)
"RTN","IBCECSA",56,0)
 K ^TMP("IBCECSB",$J),^TMP("IBCECSC",$J),^TMP("IBCECSD",$J)
"RTN","IBCECSA",57,0)
 D CLEAN^VALM10
"RTN","IBCECSA",58,0)
 Q
"RTN","IBCECSA",59,0)
 ;
"RTN","IBCECSA",60,0)
SORT(LVL,IBDEFSRT) ; CSA sort
"RTN","IBCECSA",61,0)
 ; LVL - sort level 1,2,or,3
"RTN","IBCECSA",62,0)
 ; IBDEFSRT - default sort value (optional)
"RTN","IBCECSA",63,0)
 NEW DIR,X,Y,LVLD,G,LN,S,SC,SCP,DTOUT,DUOUT,DIRUT,DIROUT,IBZ
"RTN","IBCECSA",64,0)
 K IBSORT3 I LVL<3 K IBSORT2 I LVL=1 K IBSORT1
"RTN","IBCECSA",65,0)
 I '$F(".1.2.3.","."_$G(LVL)_".") G SORTX
"RTN","IBCECSA",66,0)
 I $G(VALMQUIT) G SORTX
"RTN","IBCECSA",67,0)
 ;
"RTN","IBCECSA",68,0)
 I LVL>1,$G(IBSORT1)="" D SORT(1) I $G(IBSORT1)="" G SORTX
"RTN","IBCECSA",69,0)
 I LVL=3,$G(IBSORT2)="" D SORT(2) I $G(IBSORT2)="" G SORTX
"RTN","IBCECSA",70,0)
 ;
"RTN","IBCECSA",71,0)
 S LVLD=$S(LVL=2:"Secondary",LVL=3:"Tertiary",1:"Primary")
"RTN","IBCECSA",72,0)
 ;
"RTN","IBCECSA",73,0)
 S DIR("A")=LVLD_" Sort"
"RTN","IBCECSA",74,0)
 I LVL=1 S DIR("B")=$$SD("E")
"RTN","IBCECSA",75,0)
 I LVL>1 K DIR("B")
"RTN","IBCECSA",76,0)
 I LVL=2,IBSORT1=$G(IBDEFSRT) K IBDEFSRT
"RTN","IBCECSA",77,0)
 I LVL=3,IBSORT1=$G(IBDEFSRT)!(IBSORT2=$G(IBDEFSRT)) K IBDEFSRT
"RTN","IBCECSA",78,0)
 I $G(IBDEFSRT)'="" S DIR("B")=$$SD(IBDEFSRT)   ; passed in default sort
"RTN","IBCECSA",79,0)
 ;
"RTN","IBCECSA",80,0)
 S DIR("?")="Enter a code from the list to indicate the "_LVLD_" sort order."
"RTN","IBCECSA",81,0)
 I LVL>1 S DIR("?",1)="  Primary Sort is "_$$SD($G(IBSORT1)),DIR("?",LVL)=""
"RTN","IBCECSA",82,0)
 I LVL=3 S DIR("?",2)="Secondary Sort is "_$$SD($G(IBSORT2))
"RTN","IBCECSA",83,0)
 ;
"RTN","IBCECSA",84,0)
 I LVL=1 S DIR(0)="SB"    ; primary sort required
"RTN","IBCECSA",85,0)
 I LVL>1 S DIR(0)="SOB"   ; optional sorts
"RTN","IBCECSA",86,0)
 ;
"RTN","IBCECSA",87,0)
 S G=""
"RTN","IBCECSA",88,0)
 F LN=1:1 S S=$P($T(ZZ+LN),";",3) Q:S=""  D
"RTN","IBCECSA",89,0)
 . S SC=$P(S,":",1)     ; sort code letter
"RTN","IBCECSA",90,0)
 . I LVL=2,IBSORT1=SC Q
"RTN","IBCECSA",91,0)
 . I LVL=3,IBSORT1=SC!(IBSORT2=SC) Q
"RTN","IBCECSA",92,0)
 . S SCP=$P(S,":",1,2)  ; sort code:desc pair
"RTN","IBCECSA",93,0)
 . S G=$S(G="":SCP,1:G_";"_SCP)
"RTN","IBCECSA",94,0)
 . Q
"RTN","IBCECSA",95,0)
 ;
"RTN","IBCECSA",96,0)
 S $P(DIR(0),U,2)=G
"RTN","IBCECSA",97,0)
 ;
"RTN","IBCECSA",98,0)
 D ^DIR K DIR
"RTN","IBCECSA",99,0)
 I $D(DTOUT) S VALMQUIT=1 G SORTX         ; timeout
"RTN","IBCECSA",100,0)
 I $D(DIRUT) S:LVL=1 VALMQUIT=1 G SORTX   ; ^ or nil response
"RTN","IBCECSA",101,0)
 S @("IBSORT"_LVL)=Y,IBZ=Y
"RTN","IBCECSA",102,0)
 ;
"RTN","IBCECSA",103,0)
 I IBZ="N" D  G SORTX    ; number of days pending
"RTN","IBCECSA",104,0)
 . S IBSORTOR(IBZ)="D"   ; this sort is always descending
"RTN","IBCECSA",105,0)
 . Q
"RTN","IBCECSA",106,0)
 ;
"RTN","IBCECSA",107,0)
 I IBZ="C" D  G SORTX    ; current balance question
"RTN","IBCECSA",108,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",109,0)
 . S DIR("A")="Display Highest Balances First",DIR("B")="Yes"
"RTN","IBCECSA",110,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",111,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",112,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",113,0)
 . S DIR("?",3)="Yes, I want to see the large balances first at the top of the list and the"
"RTN","IBCECSA",114,0)
 . S DIR("?",4)="small balances last at the bottom of the list."
"RTN","IBCECSA",115,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",116,0)
 . S DIR("?",6)="No, I want to see the small balances first at the top of the list and the"
"RTN","IBCECSA",117,0)
 . S DIR("?")="large balances last at the bottom of the list."
"RTN","IBCECSA",118,0)
 . D ^DIR K DIR
"RTN","IBCECSA",119,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",120,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",121,0)
 . I Y S IBSORTOR(IBZ)="D"    ; yes, large first, descending
"RTN","IBCECSA",122,0)
 . I 'Y S IBSORTOR(IBZ)="A"   ; no, small first, ascending
"RTN","IBCECSA",123,0)
 . Q
"RTN","IBCECSA",124,0)
 ;
"RTN","IBCECSA",125,0)
 I IBZ="S" D  G SORTX    ; Date of Service question
"RTN","IBCECSA",126,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",127,0)
 . S DIR("A")="Display Oldest Claims First",DIR("B")="Yes"
"RTN","IBCECSA",128,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",129,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",130,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",131,0)
 . S DIR("?",3)="Yes, I want to see claims with old dates of service at the top of the list"
"RTN","IBCECSA",132,0)
 . S DIR("?",4)="and claims with recent dates of service at the bottom of the list."
"RTN","IBCECSA",133,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",134,0)
 . S DIR("?",6)="No, I want to see claims with recent dates of service at the top of the list"
"RTN","IBCECSA",135,0)
 . S DIR("?")="and older claims at the bottom of the list."
"RTN","IBCECSA",136,0)
 . D ^DIR K DIR
"RTN","IBCECSA",137,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",138,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",139,0)
 . I Y S IBSORTOR(IBZ)="A"    ; yes, old first, ascending sort
"RTN","IBCECSA",140,0)
 . I 'Y S IBSORTOR(IBZ)="D"   ; no, new first, descending sort
"RTN","IBCECSA",141,0)
 . Q
"RTN","IBCECSA",142,0)
 ;
"RTN","IBCECSA",143,0)
 I IBZ="R" D  G SORTX    ; review status question
"RTN","IBCECSA",144,0)
 . S DIR(0)="Y"
"RTN","IBCECSA",145,0)
 . S DIR("A")="Display 'Review in Process' Messages Last",DIR("B")="Yes"
"RTN","IBCECSA",146,0)
 . S DIR("A",1)=""
"RTN","IBCECSA",147,0)
 . S DIR("?",1)="Enter Yes or No."
"RTN","IBCECSA",148,0)
 . S DIR("?",2)=""
"RTN","IBCECSA",149,0)
 . S DIR("?",3)="Yes, I want to group together status messages under review at the bottom of"
"RTN","IBCECSA",150,0)
 . S DIR("?",4)="the list."
"RTN","IBCECSA",151,0)
 . S DIR("?",5)=""
"RTN","IBCECSA",152,0)
 . S DIR("?",6)="No, I want to group together status messages under review at the top of the"
"RTN","IBCECSA",153,0)
 . S DIR("?")="list."
"RTN","IBCECSA",154,0)
 . D ^DIR K DIR
"RTN","IBCECSA",155,0)
 . I $D(DTOUT) S VALMQUIT=1 Q    ; timeout
"RTN","IBCECSA",156,0)
 . I $D(DIRUT) S:LVL=1 VALMQUIT=1 K @("IBSORT"_LVL) Q   ; ^ or nil resp
"RTN","IBCECSA",157,0)
 . I Y S IBSORTOR(IBZ)="A"    ; yes, 1 at bottom, 0 at top, ascending
"RTN","IBCECSA",158,0)
 . I 'Y S IBSORTOR(IBZ)="D"   ; no, 1 at top, 0 at bottom, descending
"RTN","IBCECSA",159,0)
 . Q
"RTN","IBCECSA",160,0)
 ;
"RTN","IBCECSA",161,0)
SORTX ;
"RTN","IBCECSA",162,0)
 Q
"RTN","IBCECSA",163,0)
 ;
"RTN","IBCECSA",164,0)
SD(SORT) ; sort description given the sort code letter
"RTN","IBCECSA",165,0)
 Q $P($P($T(@("ZZ"_$G(SORT))),";",3),":",2)
"RTN","IBCECSA",166,0)
 ;
"RTN","IBCECSA",167,0)
SV(SORT) ; sort value given the sort code letter
"RTN","IBCECSA",168,0)
 NEW S,VAR,VALUE
"RTN","IBCECSA",169,0)
 S S=$P($T(@("ZZ"_$G(SORT))),";",3)
"RTN","IBCECSA",170,0)
 S VAR=$P(S,":",4)   ; variable name
"RTN","IBCECSA",171,0)
 S VALUE=$G(@VAR)    ; value of variable
"RTN","IBCECSA",172,0)
 I VALUE="" S VALUE="~" G SVX    ; get out if undefined
"RTN","IBCECSA",173,0)
 I '$P(S,":",3) G SVX            ; non-numeric
"RTN","IBCECSA",174,0)
 I $G(IBSORTOR(SORT))="D" S VALUE=-VALUE   ; descending sort
"RTN","IBCECSA",175,0)
SVX Q VALUE
"RTN","IBCECSA",176,0)
 ;
"RTN","IBCECSA",177,0)
ZZ ; List of allowable sort criteria
"RTN","IBCECSA",178,0)
ZZA ;;A:Authorizing Biller:0:IBUER;
"RTN","IBCECSA",179,0)
ZZB ;;B:Bill Number:0:IB;
"RTN","IBCECSA",180,0)
ZZC ;;C:Current Balance:1:IBOAM;
"RTN","IBCECSA",181,0)
ZZS ;;S:Date of Service:1:IBSER;
"RTN","IBCECSA",182,0)
ZZD ;;D:Division:0:IBDIV;
"RTN","IBCECSA",183,0)
ZZE ;;E:Error Code Text:0:IBERR;
"RTN","IBCECSA",184,0)
ZZN ;;N:Number of Days Pending:1:IBPEN;
"RTN","IBCECSA",185,0)
ZZM ;;M:Patient Name:0:IBPAT;
"RTN","IBCECSA",186,0)
ZZP ;;P:Payer:0:IBPAY;
"RTN","IBCECSA",187,0)
ZZR ;;R:Review in Process:1:IBREV;
"RTN","IBCECSA",188,0)
ZZL ;;L:SSN Last 4:0:IBSSN;
"RTN","IBCECSA",189,0)
 ;
"RTN","IBCECSA1")
0^11^B39221878^B30430348
"RTN","IBCECSA1",1,0)
IBCECSA1 ;ALB/CXW - IB STATUS AWAITING RESOLUTION SCREEN ;28-JUL-99
"RTN","IBCECSA1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,283,288,320**;21-MAR-94
"RTN","IBCECSA1",3,0)
 ; DBIA for $$BN1^PRCAFN()
"RTN","IBCECSA1",4,0)
 ;
"RTN","IBCECSA1",5,0)
BLD ; Build list entrypoint
"RTN","IBCECSA1",6,0)
 N IBDA,IBREV,IBIFN,IBPAY,IBSSN,IBSER,IB399,IBLOC,IBDIV,IBUER,IBMSG,IBERR,IBPEN,SEVERITY,A,IBOAM,IBPAT,IBSTSMSG,SV1,SV2,SV3
"RTN","IBCECSA1",7,0)
 K ^TMP("IBCECSA",$J),^TMP("IBCECSB",$J),^TMP("IBCECSD",$J)
"RTN","IBCECSA1",8,0)
 W !!,"Compiling CSA status messages ... "
"RTN","IBCECSA1",9,0)
 S IBSEV=$G(IBSEV,"R")
"RTN","IBCECSA1",10,0)
 S VALMCNT=0,IB364=""
"RTN","IBCECSA1",11,0)
 S SEVERITY=""
"RTN","IBCECSA1",12,0)
 F  S SEVERITY=$O(^IBM(361,"ACSA",SEVERITY)) Q:SEVERITY=""  I SEVERITY="R"!(IBSEV="B") S IBREV="" F  S IBREV=$O(^IBM(361,"ACSA",SEVERITY,IBREV)) Q:IBREV=""  I IBREV<2 S IBDA=0 F  S IBDA=$O(^IBM(361,"ACSA",SEVERITY,IBREV,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",13,0)
 . S IB=$G(^IBM(361,IBDA,0)),IBIFN=+IB
"RTN","IBCECSA1",14,0)
 . S IBPEN=$$FMDIFF^XLFDT(DT,$P(IB,U,2),1)
"RTN","IBCECSA1",15,0)
 . ;quit if not pending for at least the minimum # of days requested
"RTN","IBCECSA1",16,0)
 . Q:IBDAYS>IBPEN
"RTN","IBCECSA1",17,0)
 . S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECSA1",18,0)
 . ;
"RTN","IBCECSA1",19,0)
 . ; no cancelled claims allowed on the CSA screen
"RTN","IBCECSA1",20,0)
 . ; if we find one, then update the appropriate EDI files
"RTN","IBCECSA1",21,0)
 . I $P(IB399,U,13)=7 D UPDEDI^IBCEM(+$P(IB,U,11),"C") Q
"RTN","IBCECSA1",22,0)
 . ;
"RTN","IBCECSA1",23,0)
 . ; automatically review this message if the claim was last printed on
"RTN","IBCECSA1",24,0)
 . ; or after the MCS - 'Resubmit by Print' date
"RTN","IBCECSA1",25,0)
 . I $P(IB,U,16),($P($G(^DGCR(399,IBIFN,"S")),U,14)\1)'<$P(IB,U,16) D UPDEDI^IBCEM(+$P(IB,U,11),"P") Q
"RTN","IBCECSA1",26,0)
 . ;
"RTN","IBCECSA1",27,0)
 . S IBDIV=+$P(IB399,U,22)
"RTN","IBCECSA1",28,0)
 . S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,11)
"RTN","IBCECSA1",29,0)
 . ;
"RTN","IBCECSA1",30,0)
 . ; If Request MRA bill, pull the MRA Requestor user instead
"RTN","IBCECSA1",31,0)
 . I 'IBUER,$P(IB399,U,13)=2 S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,8)
"RTN","IBCECSA1",32,0)
 . I $D(^TMP("IBBIL",$J)),'$D(^TMP("IBBIL",$J,IBUER)) Q  ; User not selected
"RTN","IBCECSA1",33,0)
 . I $D(^TMP("IBDIV",$J)),'$D(^TMP("IBDIV",$J,IBDIV)) Q  ; Div not selected
"RTN","IBCECSA1",34,0)
 . ;
"RTN","IBCECSA1",35,0)
 . S IBPAY=$P($G(^DIC(36,+$P($G(^DGCR(399,IBIFN,"MP")),U),0)),U)
"RTN","IBCECSA1",36,0)
 . I IBPAY="" S IBPAY=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCECSA1",37,0)
 . I IBPAY="" S IBPAY="UNKNOWN PAYER"
"RTN","IBCECSA1",38,0)
 . S IBPAT=$G(^DPT(+$P(IB399,U,2),0))
"RTN","IBCECSA1",39,0)
 . S IBSSN=$E($P(IBPAT,U,9),6,9) I IBSSN="" S IBSSN="~unk"
"RTN","IBCECSA1",40,0)
 . S IBPAT=$P(IBPAT,U,1) I IBPAT="" S IBPAT="~UNKNOWN PATIENT NAME"
"RTN","IBCECSA1",41,0)
 . S IBSER=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECSA1",42,0)
 . S IBLOC=$P(IB399,U,4)
"RTN","IBCECSA1",43,0)
 . S IBLOC=$S(IBLOC=1:"HOSPITAL",IBLOC=2:"SKILLED NURSING",1:"CLINIC")
"RTN","IBCECSA1",44,0)
 . I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBCECSA1",45,0)
 . I IBDIV=""!(IBDIV=0) S IBDIV="UNSPECIFIED"
"RTN","IBCECSA1",46,0)
 . S IBMSG=$S($P(IB,U,8):"PAYER",1:"NON-PAYER")
"RTN","IBCECSA1",47,0)
 . S IBUER=$S(IBUER:$P($G(^VA(200,IBUER,0)),U),1:"UNKNOWN")_"~"_IBUER
"RTN","IBCECSA1",48,0)
 . S IB364=$P(IB,U,11)
"RTN","IBCECSA1",49,0)
 . S IBOAM=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCECSA1",50,0)
 . S IBOAM=$P(IBOAM,U,1)-$P(IBOAM,U,2)     ; current balance (total charges - offset)
"RTN","IBCECSA1",51,0)
 . ;
"RTN","IBCECSA1",52,0)
 . S IBSTSMSG=$$TXT(IBDA)       ; status message text
"RTN","IBCECSA1",53,0)
 . S IBERR=$E(IBSTSMSG,1,30)
"RTN","IBCECSA1",54,0)
 . I IBERR="" S IBERR="-"
"RTN","IBCECSA1",55,0)
 . ;
"RTN","IBCECSA1",56,0)
 . S IB=$$BN1^PRCAFN(IBIFN)     ; external bill#
"RTN","IBCECSA1",57,0)
 . S A=IBIFN_U_IBPAY_U_IBPAT_U_IBSSN_U_IBSER_U_IBOAM_U_IBLOC_U_IBDIV_U_IBUER_U_IBMSG_U_IBPEN_U_$S(IBREV:"*",1:"")_U_IB364_U_IB
"RTN","IBCECSA1",58,0)
 . ;
"RTN","IBCECSA1",59,0)
 . S SV1=$$SRTV($G(IBSORT1),IBDA)
"RTN","IBCECSA1",60,0)
 . S SV2=$$SRTV($G(IBSORT2),IBDA)
"RTN","IBCECSA1",61,0)
 . S SV3=$$SRTV($G(IBSORT3),IBDA)
"RTN","IBCECSA1",62,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA)=A
"RTN","IBCECSA1",63,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA,"MSG")=IBSTSMSG
"RTN","IBCECSA1",64,0)
 . Q
"RTN","IBCECSA1",65,0)
 ;
"RTN","IBCECSA1",66,0)
 I '$D(^TMP("IBCECSB",$J)) D NMAT Q
"RTN","IBCECSA1",67,0)
 D SCRN
"RTN","IBCECSA1",68,0)
 Q
"RTN","IBCECSA1",69,0)
 ;
"RTN","IBCECSA1",70,0)
NMAT ;No CSA list
"RTN","IBCECSA1",71,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECSA1",72,0)
 S ^TMP("IBCECSA",$J,1,0)=" "
"RTN","IBCECSA1",73,0)
 S ^TMP("IBCECSA",$J,2,0)="No Messages Matching Selection Criteria Found"
"RTN","IBCECSA1",74,0)
 Q
"RTN","IBCECSA1",75,0)
 ;
"RTN","IBCECSA1",76,0)
SRTV(SORT,IBDA) ; sort value calculation given the sort code letter
"RTN","IBCECSA1",77,0)
 I SORT="" Q IBDA
"RTN","IBCECSA1",78,0)
 Q $$SV^IBCECSA(SORT)
"RTN","IBCECSA1",79,0)
 ;
"RTN","IBCECSA1",80,0)
SCRN ;
"RTN","IBCECSA1",81,0)
 NEW IBSRT1,IBSRT2,IBSRT3,IBX,IBCNT,IBIFN,IBDA,IB,INFX,DAT,X
"RTN","IBCECSA1",82,0)
 W !,"Building the CSA list display ... "
"RTN","IBCECSA1",83,0)
 S IBCNT=0,IBSRT1=""
"RTN","IBCECSA1",84,0)
 F  S IBSRT1=$O(^TMP("IBCECSB",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCECSA1",85,0)
 . D SRTBRK(1,$G(IBSORT1),IBSRT1)
"RTN","IBCECSA1",86,0)
 . S IBSRT2=""
"RTN","IBCECSA1",87,0)
 . F  S IBSRT2=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCECSA1",88,0)
 .. D SRTBRK(2,$G(IBSORT2),IBSRT2)
"RTN","IBCECSA1",89,0)
 .. S IBSRT3=""
"RTN","IBCECSA1",90,0)
 .. F  S IBSRT3=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3)) Q:IBSRT3=""  D
"RTN","IBCECSA1",91,0)
 ... D SRTBRK(3,$G(IBSORT3),IBSRT3)
"RTN","IBCECSA1",92,0)
 ... S IBDA=0
"RTN","IBCECSA1",93,0)
 ... F  S IBDA=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",94,0)
 .... S IB=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA))
"RTN","IBCECSA1",95,0)
 .... S IBSTSMSG=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA,"MSG"))
"RTN","IBCECSA1",96,0)
 .... S IBIFN=+IB
"RTN","IBCECSA1",97,0)
 .... S IB364=$P(IB,U,13)
"RTN","IBCECSA1",98,0)
 .... S DAT=IBIFN_U_IBDA_U_IBSRT1_U_IBSRT2_U_IB364_U_IBSRT3
"RTN","IBCECSA1",99,0)
 .... ;
"RTN","IBCECSA1",100,0)
 .... S IBCNT=IBCNT+1
"RTN","IBCECSA1",101,0)
 .... S X=$$SETFLD^VALM1($J(IBCNT,3),"","NUMBER")
"RTN","IBCECSA1",102,0)
 .... D SETL1(IB,.X)
"RTN","IBCECSA1",103,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",104,0)
 .... ;
"RTN","IBCECSA1",105,0)
 .... S X=$$SETSTR^VALM1(IBSTSMSG,"",6,75)
"RTN","IBCECSA1",106,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",107,0)
 .... Q
"RTN","IBCECSA1",108,0)
 ... Q
"RTN","IBCECSA1",109,0)
 .. Q
"RTN","IBCECSA1",110,0)
 . Q
"RTN","IBCECSA1",111,0)
 Q
"RTN","IBCECSA1",112,0)
 ;
"RTN","IBCECSA1",113,0)
SRTBRK(LVL,SORT,IBSRT) ; sort break for display of certain sort data
"RTN","IBCECSA1",114,0)
 ; LVL   - sort level
"RTN","IBCECSA1",115,0)
 ; SORT  - sort letter code
"RTN","IBCECSA1",116,0)
 ; IBSRT - subscript data
"RTN","IBCECSA1",117,0)
 ;
"RTN","IBCECSA1",118,0)
 NEW IBS,DSPDATA
"RTN","IBCECSA1",119,0)
 I '$F(".A.D.N.","."_$G(SORT)_".") G SRTBRKX
"RTN","IBCECSA1",120,0)
 S IBS=$$SD^IBCECSA(SORT)
"RTN","IBCECSA1",121,0)
 S DSPDATA=IBSRT
"RTN","IBCECSA1",122,0)
 I SORT="A" S DSPDATA=$P(DSPDATA,"~",1)      ; biller name
"RTN","IBCECSA1",123,0)
 I SORT="N" S DSPDATA=-DSPDATA               ; number of days pending
"RTN","IBCECSA1",124,0)
 D SET($J("",LVL-1)_IBS_": "_DSPDATA,IBCNT,"")
"RTN","IBCECSA1",125,0)
SRTBRKX ;
"RTN","IBCECSA1",126,0)
 Q
"RTN","IBCECSA1",127,0)
 ;
"RTN","IBCECSA1",128,0)
SET(X,CNT,DAT) ;set up list manager screen array
"RTN","IBCECSA1",129,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECSA1",130,0)
 I 'CNT S CNT=1
"RTN","IBCECSA1",131,0)
 S ^TMP("IBCECSA",$J,VALMCNT,0)=X
"RTN","IBCECSA1",132,0)
 S ^TMP("IBCECSA",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA1",133,0)
 I DAT'="" S ^TMP("IBCECSA",$J,CNT)=VALMCNT_U_DAT
"RTN","IBCECSA1",134,0)
 Q
"RTN","IBCECSA1",135,0)
 ;
"RTN","IBCECSA1",136,0)
SETL1(IB,X) ;
"RTN","IBCECSA1",137,0)
 S X=$$SETFLD^VALM1($P($G(^DGCR(399,+IB,0)),U,1)_$P(IB,U,12),X,"BILL")
"RTN","IBCECSA1",138,0)
 S X=$$SETFLD^VALM1($P(IB,U,2),X,"PNAME")
"RTN","IBCECSA1",139,0)
 S X=$$SETFLD^VALM1($P(IB,U,3),X,"PANAME")
"RTN","IBCECSA1",140,0)
 S X=$$SETFLD^VALM1($P(IB,U,4),X,"SSN")
"RTN","IBCECSA1",141,0)
 S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB,U,5),"2Z"),X,"SERVICE")
"RTN","IBCECSA1",142,0)
 S X=$$SETFLD^VALM1($J("$"_$FN($P(IB,U,6),"",2),10),X,"CURBAL")
"RTN","IBCECSA1",143,0)
 Q
"RTN","IBCECSA1",144,0)
 ;
"RTN","IBCECSA1",145,0)
TXT(IBDA,LEN) ; Return a string of status message text
"RTN","IBCECSA1",146,0)
 ; IBDA - ien to file 361
"RTN","IBCECSA1",147,0)
 ;  LEN - desired maximum length of combined text string
"RTN","IBCECSA1",148,0)
 NEW MSG,LN,STOP,TX,HLN,REFN,DELIM
"RTN","IBCECSA1",149,0)
 S MSG="",LN=0,LEN=$G(LEN,75),STOP=0
"RTN","IBCECSA1",150,0)
 F  S LN=$O(^IBM(361,+$G(IBDA),1,LN)) Q:'LN  D  Q:STOP
"RTN","IBCECSA1",151,0)
 . S TX=$G(^IBM(361,IBDA,1,LN,0))
"RTN","IBCECSA1",152,0)
 . I $E(TX,1,5)="Error" S TX=$E(TX,6,999)
"RTN","IBCECSA1",153,0)
 . S TX=$$TRIM^XLFSTR(TX)
"RTN","IBCECSA1",154,0)
 . I $E(TX,1,8)="Patient:" S STOP=1 Q
"RTN","IBCECSA1",155,0)
 . I $E(TX,1,14)="Service Dates:" S STOP=1 Q
"RTN","IBCECSA1",156,0)
 . I $E(TX,1,11)="Payer Name:" S STOP=1 Q
"RTN","IBCECSA1",157,0)
 . I $E(TX,1,7)="Source:" S STOP=1 Q
"RTN","IBCECSA1",158,0)
 . I $E(TX,1,11)="Claim Line:" S STOP=1 Q
"RTN","IBCECSA1",159,0)
 . I $E(TX,1,13)="Service Type:" S STOP=1 Q
"RTN","IBCECSA1",160,0)
 . I TX["HL=" S HLN=+$P(TX,"HL=",2),DELIM="HL="_HLN,TX=$P(TX,DELIM,1)_"HL= "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",161,0)
 . I TX["ENVOY REF: " S REFN=$E($P(TX,"ENVOY REF: ",2),1,14),DELIM="ENVOY REF: "_REFN,TX=$P(TX,DELIM,1)_"ENVOY REF: "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",162,0)
 . I ($L(MSG)+$L(TX))>500 S STOP=1 Q
"RTN","IBCECSA1",163,0)
 . S MSG=MSG_$S(MSG="":"",1:" ")_TX
"RTN","IBCECSA1",164,0)
 . I $L(MSG)>LEN S STOP=1
"RTN","IBCECSA1",165,0)
 . Q
"RTN","IBCECSA1",166,0)
 Q $E(MSG,1,LEN)
"RTN","IBCECSA1",167,0)
 ;
"RTN","IBCECSA2")
0^8^B81703676^B78300535
"RTN","IBCECSA2",1,0)
IBCECSA2 ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;28-JUL-1999
"RTN","IBCECSA2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,197,320**;21-MAR-1994
"RTN","IBCECSA2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA2",4,0)
 ;
"RTN","IBCECSA2",5,0)
EN ; -- claims status awaiting resolution detail
"RTN","IBCECSA2",6,0)
 D EN^VALM("IBCEM CSA MSG")
"RTN","IBCECSA2",7,0)
 Q
"RTN","IBCECSA2",8,0)
 ;
"RTN","IBCECSA2",9,0)
HDR ; -- header code
"RTN","IBCECSA2",10,0)
 ; IBA - EOB ien from summary selection
"RTN","IBCECSA2",11,0)
 N IBST,IBST0
"RTN","IBCECSA2",12,0)
 Q:'$G(IBA)
"RTN","IBCECSA2",13,0)
 S IBST0=$G(^IBM(361,+$P(IBA,U,2),0)),IBST=$P(IBST0,U,9)
"RTN","IBCECSA2",14,0)
 S VALMHDR(2)="Message Status = "_$$EXPAND^IBTRE(361,.09,IBST)
"RTN","IBCECSA2",15,0)
 I $P(IBST0,U,14) S VALMHDR(2)=VALMHDR(2)_"  (AUTOMATICALLY REVIEWED)"
"RTN","IBCECSA2",16,0)
 S VALMHDR(1)=$J("",23)_"CLAIMS STATUS AWAITING RESOLUTION-DETAIL"
"RTN","IBCECSA2",17,0)
 Q
"RTN","IBCECSA2",18,0)
 ;
"RTN","IBCECSA2",19,0)
INIT ; -- init variables and list array
"RTN","IBCECSA2",20,0)
 N I,X,Y,Z,ZZ,IBZ,IBZ0,IBX,IBCNT
"RTN","IBCECSA2",21,0)
 K ^TMP("IBCECSC",$J)
"RTN","IBCECSA2",22,0)
SCR S VALMCNT=0,IBCNT=1
"RTN","IBCECSA2",23,0)
 S IBA=+$O(IBDAX(0)),IBA=$G(IBDAX(IBA))
"RTN","IBCECSA2",24,0)
 Q:IBA=""
"RTN","IBCECSA2",25,0)
 S X=""
"RTN","IBCECSA2",26,0)
 S IBX=$S($D(^TMP("IBCECSB",$J)):$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2))),1:"")
"RTN","IBCECSA2",27,0)
 D SETL1^IBCECSA1(IBX,.X)
"RTN","IBCECSA2",28,0)
 D SET(X,IBCNT)
"RTN","IBCECSA2",29,0)
 D SET("",IBCNT)    ; blank line
"RTN","IBCECSA2",30,0)
 ;
"RTN","IBCECSA2",31,0)
 S X=$E("     Svc Loc: "_$P(IBX,U,7)_$J("",30),1,30)_$J("",14)_"Division: "_$E($P(IBX,U,8),1,26)
"RTN","IBCECSA2",32,0)
 D SET(X,IBCNT)
"RTN","IBCECSA2",33,0)
 S X=$E(" Biller Name: "_$P($P(IBX,U,9),"~")_$J("",30),1,30)_$J("",10)_"Days Pending: "_$P(IBX,U,11)
"RTN","IBCECSA2",34,0)
 D SET(X,IBCNT)
"RTN","IBCECSA2",35,0)
 S IBZ=$P(IBA,U,2),IBZ0=$G(^IBM(361,IBZ,0))
"RTN","IBCECSA2",36,0)
 S X=$E("  Date Rec'd: "_$$FMTE^XLFDT($P(IBZ0,U,2),"2Z")_$J("",30),1,30)_$J("",10)_"Dt Generated: "_$S($P(IBZ0,U,12):$$FMTE^XLFDT($P(IBZ0,U,12),"2Z"),1:"")
"RTN","IBCECSA2",37,0)
 D SET(X,IBCNT),SET("",IBCNT)
"RTN","IBCECSA2",38,0)
 ;
"RTN","IBCECSA2",39,0)
 D SET("Message Text:",IBCNT)
"RTN","IBCECSA2",40,0)
 S X=0 F  S X=$O(^IBM(361,IBZ,1,X)) Q:'X  D
"RTN","IBCECSA2",41,0)
 . S Y="  "_$G(^IBM(361,IBZ,1,X,0))
"RTN","IBCECSA2",42,0)
 . D SET(Y,IBCNT)
"RTN","IBCECSA2",43,0)
 . Q
"RTN","IBCECSA2",44,0)
 D SET("",IBCNT)
"RTN","IBCECSA2",45,0)
 ;
"RTN","IBCECSA2",46,0)
 S ZZ="" F  S ZZ=$O(^IBM(361,IBZ,2,"B",ZZ),-1) Q:ZZ=""  S Z=0 F  S Z=$O(^IBM(361,IBZ,2,"B",ZZ,Z)) Q:'Z  D
"RTN","IBCECSA2",47,0)
 . S I=$G(^IBM(361,IBZ,2,Z,0))
"RTN","IBCECSA2",48,0)
 . S Y=$$SETSTR^VALM1("Review Date: "_$$EXTERNAL^DILFD(361.02,.01,,ZZ),"",2,40)
"RTN","IBCECSA2",49,0)
 . D SET(Y,IBCNT)
"RTN","IBCECSA2",50,0)
 . I $P(I,U,2) S Y=$$SETSTR^VALM1("Reviewed By: "_$P($G(^VA(200,+$P(I,U,2),0)),U,1),"",2,70) D SET(Y,IBCNT)
"RTN","IBCECSA2",51,0)
 . D SET("    Comments:",IBCNT)
"RTN","IBCECSA2",52,0)
 . S X=0 F  S X=$O(^IBM(361,IBZ,2,Z,1,X)) Q:'X  D
"RTN","IBCECSA2",53,0)
 .. S Y="    "_$G(^IBM(361,IBZ,2,Z,1,X,0))
"RTN","IBCECSA2",54,0)
 .. D SET(Y,IBCNT)
"RTN","IBCECSA2",55,0)
 .. Q
"RTN","IBCECSA2",56,0)
 . D SET("",IBCNT)
"RTN","IBCECSA2",57,0)
 . Q
"RTN","IBCECSA2",58,0)
INITQ Q
"RTN","IBCECSA2",59,0)
 ;
"RTN","IBCECSA2",60,0)
HELP ; help code
"RTN","IBCECSA2",61,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCECSA2",62,0)
 Q
"RTN","IBCECSA2",63,0)
 ;
"RTN","IBCECSA2",64,0)
EXIT ; exit code
"RTN","IBCECSA2",65,0)
 K ^TMP("IBCECSC",$J)
"RTN","IBCECSA2",66,0)
 D CLEAN^VALM10
"RTN","IBCECSA2",67,0)
 Q
"RTN","IBCECSA2",68,0)
 ;
"RTN","IBCECSA2",69,0)
SET(X,CNT) ;
"RTN","IBCECSA2",70,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECSA2",71,0)
 S ^TMP("IBCECSC",$J,VALMCNT,0)=X
"RTN","IBCECSA2",72,0)
 S ^TMP("IBCECSC",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA2",73,0)
 S ^TMP("IBCECSC",$J,CNT)=VALMCNT
"RTN","IBCECSA2",74,0)
 Q
"RTN","IBCECSA2",75,0)
 ;
"RTN","IBCECSA2",76,0)
UPDTX(IBDA,IBST) ; Update transmit bill record
"RTN","IBCECSA2",77,0)
 ; IBDA = ien of entry in 364
"RTN","IBCECSA2",78,0)
 ; IBST = status to stuff
"RTN","IBCECSA2",79,0)
 N X,Y,DR,DIE,DA
"RTN","IBCECSA2",80,0)
 S DR=".03////"_IBST_";.04///NOW",DA=IBDA,DIE="^IBA(364," D:DA ^DIE
"RTN","IBCECSA2",81,0)
 Q
"RTN","IBCECSA2",82,0)
 ;
"RTN","IBCECSA2",83,0)
STATUS ; Edit rev stat
"RTN","IBCECSA2",84,0)
 ;IBA - EOB ien
"RTN","IBCECSA2",85,0)
 N DA,DIE,DR,IBOLD,DIC,DO,DD,DLAYGO,IBDA,IBFINAL,IBO,IBNEW,IBFACT
"RTN","IBCECSA2",86,0)
 D FULL^VALM1
"RTN","IBCECSA2",87,0)
 S DIE="^IBM(361,"
"RTN","IBCECSA2",88,0)
 S (IBDA,DA)=$P(IBA,U,2)
"RTN","IBCECSA2",89,0)
 G:'DA STATUSQ
"RTN","IBCECSA2",90,0)
 S IBOLD=$P($G(^IBM(361,DA,0)),U,9),IBFINAL=0,IBO=$S(IBOLD'="":"/"_IBOLD,1:"@")
"RTN","IBCECSA2",91,0)
 S DR="@1;.09;I +X<2 S IBFINAL=0,Y=""@99"";S IBFINAL=1;.1;I X="""" W !,""For a final status, this field is required"" S Y=""@98"";S Y=""@99"";@98;.09///"_IBO_";S Y=""@1"";@99"
"RTN","IBCECSA2",92,0)
 L +^IBM(361,IBDA):3 I '$T D  G STATUSQ
"RTN","IBCECSA2",93,0)
 . W !,"Sorry, another user currently editing this entry (#"_IBDA_")."
"RTN","IBCECSA2",94,0)
 D ^DIE
"RTN","IBCECSA2",95,0)
 ;
"RTN","IBCECSA2",96,0)
 I $G(IBFINAL) D  ;Final status selected - enter remarks
"RTN","IBCECSA2",97,0)
 . N Z
"RTN","IBCECSA2",98,0)
 . S Z=IBDA
"RTN","IBCECSA2",99,0)
 . N IBDA,Q,DIE,DR,DA,X,Y
"RTN","IBCECSA2",100,0)
 . S IBDA(1)=Z,IBDA=""
"RTN","IBCECSA2",101,0)
 . D ADDCOM(.IBDA,.DUZ,.IBCOM)
"RTN","IBCECSA2",102,0)
 . I $P($G(^IBM(361,IBDA(1),0)),U,10)="O",'$O(^IBM(361,IBDA(1),2,+IBDA,0)) D   ; Require remarks for 'OTHER ACTION' final status
"RTN","IBCECSA2",103,0)
 .. W !,"Since OTHER ACTION final status was selected, you must enter a",!,"   comment explaining the OTHER ACTION" D ADDCOM(.IBDA,.DUZ,.IBCOM,1)
"RTN","IBCECSA2",104,0)
 .. I IBDA D
"RTN","IBCECSA2",105,0)
 ... ; Delete entry without a comment
"RTN","IBCECSA2",106,0)
 ... D KILLREV(.IBDA)
"RTN","IBCECSA2",107,0)
 .. I '$O(^IBM(361,IBDA(1),2,+IBDA,0)) S DIE="^IBM(361,",DA=IBDA(1),DR=".20///@;.09///"_IBO D ^DIE W !,"The review status was not changed because no comment was entered",! Q
"RTN","IBCECSA2",108,0)
 S IBNEW=$P($G(^IBM(361,DA,0)),U,9)
"RTN","IBCECSA2",109,0)
 ;if time out-no change in review status
"RTN","IBCECSA2",110,0)
 S IBFACT=$P($G(^IBM(361,DA,0)),U,10)
"RTN","IBCECSA2",111,0)
 I $G(IBFINAL),IBFACT="",IBNEW>1 D  G STATUSQ
"RTN","IBCECSA2",112,0)
 . W !,"The review status was not changed because no final status was selected"
"RTN","IBCECSA2",113,0)
 . S DR=".09////"_IBOLD,DIE="^IBM(361," D ^DIE
"RTN","IBCECSA2",114,0)
 I IBNEW>1,$P(^IBM(361,DA,0),U,11) D
"RTN","IBCECSA2",115,0)
 . I "CR"'[IBFACT D
"RTN","IBCECSA2",116,0)
 .. W !,"NO FURTHER ACTION WILL BE ALLOWED REGARDING THIS ELECTRONIC MESSAGE"
"RTN","IBCECSA2",117,0)
 .. I $$PRINTUPD^IBCEU0("",$P(^IBM(361,DA,0),U,11)) D  Q
"RTN","IBCECSA2",118,0)
 ... W !," SINCE THIS CLAIM WAS PRINTED AT THE CLEARINGHOUSE"
"RTN","IBCECSA2",119,0)
 ... S IBFACT="N"
"RTN","IBCECSA2",120,0)
 .. S DIR(0)="YA",DIR("A")="IS THIS THE FINAL ELECTRONIC MESSAGE YOU EXPECT TO RECEIVE FOR THIS BILL?: ",DIR("B")="NO"
"RTN","IBCECSA2",121,0)
 .. S DIR("?",1)="If you respond YES to this prompt, the transmit status of this bill will",DIR("?",2)="  be set to CLOSED.  No further electronic processing of this bill will be"
"RTN","IBCECSA2",122,0)
 ..S DIR("?",3)="  allowed.  If you respond NO to this prompt, this electronic message will",DIR("?",4)="  be filed as reviewed, but the bill's transmit status will not be changed."
"RTN","IBCECSA2",123,0)
 .. S DIR("?",5)="  You may wish to periodically print a list of bills with a non-final",DIR("?",6)="  (closed/cancelled/etc) status to ensure the electronic processing of all"
"RTN","IBCECSA2",124,0)
 .. S DIR("?",7)="  bills has been completed.  Closing the transmit bill record here will",DIR("?")="  eliminate the bill from this list."
"RTN","IBCECSA2",125,0)
 .. W ! D ^DIR K DIR W !
"RTN","IBCECSA2",126,0)
 .. Q:Y'=1
"RTN","IBCECSA2",127,0)
 .. S DIR("A",1)="SINCE YOU HAVE INDICATED THIS BILL HAS RECEIVED ITS FINAL ELECTRONIC MESSAGE",DIR("A",2)="  AND NO FURTHER ACTION WILL BE TAKEN ON IT, THE STATUS OF THE TRANSMIT",DIR("A",3)="  RECORD FOR THIS BILL WILL BE CHANGED TO CLOSED"
"RTN","IBCECSA2",128,0)
 .. S DIR("A")="IS THIS WHAT YOU MEANT TO DO?: ",DIR("B")="YES",DIR(0)="YA" W ! D ^DIR W ! K DIR
"RTN","IBCECSA2",129,0)
 .. Q:Y'=1
"RTN","IBCECSA2",130,0)
 .. S IBFACT="N"
"RTN","IBCECSA2",131,0)
 . I "NCR"[IBFACT D UPDEDI^IBCEM(+$P(^IBM(361,DA,0),U,11),IBFACT) Q
"RTN","IBCECSA2",132,0)
 S $P(IBX,U,12)=$S(IBNEW=1:"*",1:"")
"RTN","IBCECSA2",133,0)
 I IBOLD'=IBNEW D  ;Note the change and who made it
"RTN","IBCECSA2",134,0)
 . D NOTECHG(IBDA,0),HDR,INIT
"RTN","IBCECSA2",135,0)
 L -^IBM(361,DA)
"RTN","IBCECSA2",136,0)
 S VALMBCK="R"
"RTN","IBCECSA2",137,0)
 Q
"RTN","IBCECSA2",138,0)
 ;
"RTN","IBCECSA2",139,0)
NOTECHG(IBDA,IBAUTO,IBNTEXT,IBUSER) ; Enter who/when review stat change was entered
"RTN","IBCECSA2",140,0)
 ; IBDA = ien of entry in file 361
"RTN","IBCECSA2",141,0)
 ; IBAUTO = flag to say auto-review was used (1=used, 0=not used)
"RTN","IBCECSA2",142,0)
 ; IBNTEXT = array containing the lines of text to store if not using the
"RTN","IBCECSA2",143,0)
 ;           default text  IBNTEXT = # of lines
"RTN","IBCECSA2",144,0)
 ; IBUSER = flag which says to also stuff the .02 reviewed by field
"RTN","IBCECSA2",145,0)
 N IBIEN,IBTEXT,DA,X,Y,DIC,DO,DLAYGO,DD
"RTN","IBCECSA2",146,0)
 S DA(1)=IBDA,DIC="^IBM(361,"_DA(1)_",2,",DIC(0)="L",DLAYGO=361.02
"RTN","IBCECSA2",147,0)
 S X=$$NOW^XLFDT
"RTN","IBCECSA2",148,0)
 I $G(IBUSER),$G(DUZ) S DIC("DR")=".02////"_$G(DUZ)
"RTN","IBCECSA2",149,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECSA2",150,0)
 Q:Y'>0
"RTN","IBCECSA2",151,0)
 S DA(2)=DA(1),DA(1)=+Y,IBIEN=DA(1)_","_DA(2)_","
"RTN","IBCECSA2",152,0)
 I $G(IBNTEXT) D
"RTN","IBCECSA2",153,0)
 . M IBTEXT=IBNTEXT
"RTN","IBCECSA2",154,0)
 E  D
"RTN","IBCECSA2",155,0)
 . S IBTEXT(1)="REVIEW STATUS "_$S($G(IBAUTO):"AUTOMATICALLY ",1:"")_"CHANGED TO '"_$$EXTERNAL^DILFD(361,.09,,$P(^IBM(361,DA(2),0),U,9))_"'  BY: "_$$EXTERNAL^DILFD(361.02,.02,,+$G(DUZ))
"RTN","IBCECSA2",156,0)
 D WP^DIE(361.02,IBIEN,.03,,"IBTEXT") K ^TMP("DIERR",$J)
"RTN","IBCECSA2",157,0)
 Q
"RTN","IBCECSA2",158,0)
 ;
"RTN","IBCECSA2",159,0)
STATUSQ ;
"RTN","IBCECSA2",160,0)
 D PAUSE^VALM1
"RTN","IBCECSA2",161,0)
 S VALMBCK="R"
"RTN","IBCECSA2",162,0)
 Q
"RTN","IBCECSA2",163,0)
 ;
"RTN","IBCECSA2",164,0)
COM ; Enter/Edit Review Comments
"RTN","IBCECSA2",165,0)
 ; IBA - EOB ien
"RTN","IBCECSA2",166,0)
 N DA,DIC,X,Y,DO,DD,DLAYGO,IBDA,IB0,IBNEW,IBCOM
"RTN","IBCECSA2",167,0)
 D FULL^VALM1
"RTN","IBCECSA2",168,0)
 W !
"RTN","IBCECSA2",169,0)
 S (IBDA(1),DA(1))=+$P(IBA,U,2)
"RTN","IBCECSA2",170,0)
 L +^IBM(361,IBDA(1)):3 I '$T D  G COMQ
"RTN","IBCECSA2",171,0)
 . W !,*7,"Sorry, another user currently editing this entry."
"RTN","IBCECSA2",172,0)
 . D PAUSE^VALM1
"RTN","IBCECSA2",173,0)
 ;
"RTN","IBCECSA2",174,0)
 S Z=0 F  S Z=$O(^IBM(361,IBDA(1),2,Z)) Q:'Z  I $P($G(^(Z,0)),U,2)=DUZ S IBCOM(DUZ,Z)=""
"RTN","IBCECSA2",175,0)
 S IBNEW=0
"RTN","IBCECSA2",176,0)
 I '$D(IBCOM(DUZ)) D
"RTN","IBCECSA2",177,0)
 . N DO,DD,DIC,DLAYGO,DIR,X,Y
"RTN","IBCECSA2",178,0)
 . S DIR(0)="YA",DIR("B")="YES",DIR("A",1)="There are no comments previously entered by you",DIR("A")="Do you want to add a new comment?: "
"RTN","IBCECSA2",179,0)
 . S DIR("?",1)="You are only allowed to edit your own comments."
"RTN","IBCECSA2",180,0)
 . S DIR("?")="You may enter a new comment here."
"RTN","IBCECSA2",181,0)
 . D ^DIR K DIR
"RTN","IBCECSA2",182,0)
 . W !
"RTN","IBCECSA2",183,0)
 . I Y'=1 S IBDA=-1 Q
"RTN","IBCECSA2",184,0)
 . D ADDCOM(.IBDA,.DUZ,.IBCOM)
"RTN","IBCECSA2",185,0)
 ;
"RTN","IBCECSA2",186,0)
 E  D
"RTN","IBCECSA2",187,0)
 . S DIC="^IBM(361,"_IBDA(1)_",2,",DIC("S")="I $P(^(0),U,2)=DUZ",DIC(0)="AEMQ",DIC("A")="Select REVIEW DATE to edit or press ENTER to add a new comment: " D ^DIC K DIC S IBDA=+Y
"RTN","IBCECSA2",188,0)
 . I IBDA>0 D  Q  ;User selected an existing entry
"RTN","IBCECSA2",189,0)
 .. D ADDCOM(.IBDA,.DUZ,.IBCOM,1)
"RTN","IBCECSA2",190,0)
 .. I $D(^IBM(361,IBDA(1),2,IBDA)),'$O(^IBM(361,IBDA(1),2,IBDA,1,0)) D KILLREV(.IBDA)
"RTN","IBCECSA2",191,0)
 . S DIR(0)="YAO",DIR("A")="DO YOU WANT TO ADD A NEW REVIEW COMMENT?: ",DIR("B")="NO" D ^DIR K DIR Q:Y'=1
"RTN","IBCECSA2",192,0)
 . D ADDCOM(.IBDA,.DUZ,.IBCOM)
"RTN","IBCECSA2",193,0)
 L -^IBM(361,IBDA(1))
"RTN","IBCECSA2",194,0)
 G:IBDA'>0 COMQ
"RTN","IBCECSA2",195,0)
 D PAUSE^VALM1
"RTN","IBCECSA2",196,0)
 D HDR,INIT
"RTN","IBCECSA2",197,0)
COMQ S VALMBCK="R"
"RTN","IBCECSA2",198,0)
 Q
"RTN","IBCECSA2",199,0)
 ;
"RTN","IBCECSA2",200,0)
ADDCOM(IBDA,DUZ,IBCOM,ADD) ; Add review comment to file 361
"RTN","IBCECSA2",201,0)
 ; IBDA = array containing the DA references for the file add -
"RTN","IBCECSA2",202,0)
 ;        pass by reference
"RTN","IBCECSA2",203,0)
 ; DUZ = ien of the user
"RTN","IBCECSA2",204,0)
 ; ADD = flag when set to 1 says the review date exists,
"RTN","IBCECSA2",205,0)
 ;       just allow comment entry
"RTN","IBCECSA2",206,0)
 ; Returns IBDA = the entry # of the comment
"RTN","IBCECSA2",207,0)
 ;          and IBCOM array referencing any comments added by the user
"RTN","IBCECSA2",208,0)
 ;
"RTN","IBCECSA2",209,0)
 N DA,DIC,DD,DO,DLAYGO,X,Y
"RTN","IBCECSA2",210,0)
 S DR=$S($G(DUZ):".02////"_DUZ_";",1:"")_".03"
"RTN","IBCECSA2",211,0)
 I '$G(ADD) D
"RTN","IBCECSA2",212,0)
 . K DO,DD
"RTN","IBCECSA2",213,0)
 . S DIC="^IBM(361,"_IBDA(1)_",2,",DA(1)=IBDA(1),X=$$NOW^XLFDT
"RTN","IBCECSA2",214,0)
 . W !,"New Review Date: "_$$FMTE^XLFDT(X,"2Z")
"RTN","IBCECSA2",215,0)
 . S DIC("DR")=DR,DLAYGO=361.02
"RTN","IBCECSA2",216,0)
 . S DIC(0)="L",DIC("P")=$$GETSPEC^IBEFUNC(361,2)
"RTN","IBCECSA2",217,0)
 . D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCECSA2",218,0)
 . S IBDA=+Y
"RTN","IBCECSA2",219,0)
 I IBDA>0 D
"RTN","IBCECSA2",220,0)
 . I $G(ADD) S DIE="^IBM(361,"_IBDA(1)_",2,",DA(1)=IBDA(1),DA=IBDA D ^DIE
"RTN","IBCECSA2",221,0)
 . I '$O(^IBM(361,IBDA(1),2,IBDA,0)) D KILLREV(.IBDA) Q
"RTN","IBCECSA2",222,0)
 . S IBCOM(DUZ,IBDA)=""
"RTN","IBCECSA2",223,0)
 Q
"RTN","IBCECSA2",224,0)
 ;
"RTN","IBCECSA2",225,0)
KILLREV(IBDA) ; Deletes a review date if no comments entered
"RTN","IBCECSA2",226,0)
 N DA,DIK
"RTN","IBCECSA2",227,0)
 S DA=IBDA,DA(1)=IBDA(1),DIK="^IBM(361,"_IBDA(1)_",2,"
"RTN","IBCECSA2",228,0)
 K IBCOM(DUZ,IBDA)
"RTN","IBCECSA2",229,0)
 D ^DIK
"RTN","IBCECSA2",230,0)
 Q
"RTN","IBCECSA2",231,0)
 ;
"RTN","IBCECSA3")
0^9^B26519666^B14798186
"RTN","IBCECSA3",1,0)
IBCECSA3 ;ALB/CXW - CLAIMS STATUS AWAITING RESOLUTION REPORT ;23-JUL-99
"RTN","IBCECSA3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320**;21-MAR-94
"RTN","IBCECSA3",3,0)
 Q
"RTN","IBCECSA3",4,0)
EN ; Report of claims status awaiting resolution
"RTN","IBCECSA3",5,0)
 D FULL^VALM1
"RTN","IBCECSA3",6,0)
 W !!,"You will need a 132 column printer for this report!",!
"RTN","IBCECSA3",7,0)
 ;
"RTN","IBCECSA3",8,0)
 N %ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCECSA3",9,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCECSA3",10,0)
 I $D(IO("Q")) K IO("Q") D  Q
"RTN","IBCECSA3",11,0)
 . S ZTRTN="LIST^IBCECSA3"
"RTN","IBCECSA3",12,0)
 . S ZTSAVE("IBSORT1")=""
"RTN","IBCECSA3",13,0)
 . S ZTSAVE("IBSORT2")=""
"RTN","IBCECSA3",14,0)
 . S ZTSAVE("IBSORT3")=""
"RTN","IBCECSA3",15,0)
 . S ZTSAVE("IBSORTOR")=""
"RTN","IBCECSA3",16,0)
 . S ZTSAVE("^TMP(""IBCECSB"",$J,")=""
"RTN","IBCECSA3",17,0)
 . S ZTDESC="IB -Claims Status Awaiting Resolution Report" D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCECSA3",18,0)
 U IO
"RTN","IBCECSA3",19,0)
LIST ; display
"RTN","IBCECSA3",20,0)
 N IBSTOP,X,IBPAGE,IBX,IBDIV,IBDA,IBPAY,IB,IBZ,IBZFT,IBFST,IBX2
"RTN","IBCECSA3",21,0)
 W:$E(IOST,1,2)["C-" @IOF ;Only initial form feed for print to screen
"RTN","IBCECSA3",22,0)
 S (IBSTOP,IBPAGE,IBFST,IBDIV)=0
"RTN","IBCECSA3",23,0)
 I IBSORT1="D" S IBDIV=1
"RTN","IBCECSA3",24,0)
 I '$D(^TMP("IBCECSB",$J)) D  G LISTQ
"RTN","IBCECSA3",25,0)
 . D HDR1 W !,"No entries found for this report"
"RTN","IBCECSA3",26,0)
 S IBX="" F  S IBX=$O(^TMP("IBCECSB",$J,IBX)) Q:IBX=""!IBSTOP  S IBX2="" F  S IBX2=$O(^TMP("IBCECSB",$J,IBX,IBX2)) Q:IBX2=""!IBSTOP  S IBX3="" F  S IBX3=$O(^TMP("IBCECSB",$J,IBX,IBX2,IBX3)) Q:IBX3=""!IBSTOP  D
"RTN","IBCECSA3",27,0)
 . I 'IBFST S IBPAY=$$IBPAY(IBX,IBX2,IBX3) D HDR1 S:'IBDIV IBFST=1 Q:IBSTOP
"RTN","IBCECSA3",28,0)
 . S IBDA=0 F  S IBDA=$O(^TMP("IBCECSB",$J,IBX,IBX2,IBX3,IBDA)) Q:'IBDA!IBSTOP  S IB=$G(^TMP("IBCECSB",$J,IBX,IBX2,IBX3,IBDA)) D
"RTN","IBCECSA3",29,0)
 .. I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCECSA3",30,0)
 .. W $$BN1^PRCAFN(+IB),?13,$E($P(IB,U,2),1,25),?40,$E($P(IB,U,3),1,30),?72,$P($P(IB,U,4),"~"),?78,$$DAT1^IBOUTL($P(IB,U,5)),?88,$E($P(IB,U,7),1,10),?100,"$"_$J($P(IB,U,6),0,2),?110,$P(IB,U,10),?122,$P(IB,U,11),!
"RTN","IBCECSA3",31,0)
 .. W " FORM TYPE: "_$P($G(^IBE(353,$P($G(^DGCR(399,+IB,0)),U,19),0)),U),!
"RTN","IBCECSA3",32,0)
 .. I 'IBDIV S X=" DIVISION: "_$P(IB,U,8) W X,$J(" ",40-$L(X))_"AUTHORIZING BILLER: "_$P($P(IB,U,9),"~",1),!
"RTN","IBCECSA3",33,0)
 .. W " MESSAGE TEXT: " S IBZFT=0
"RTN","IBCECSA3",34,0)
 .. S IBZ=0 F  S IBZ=$O(^IBM(361,IBDA,1,IBZ)) Q:'IBZ  D  Q:IBSTOP
"RTN","IBCECSA3",35,0)
 ... W:'IBZFT ?15 S X=$G(^IBM(361,IBDA,1,IBZ,0))
"RTN","IBCECSA3",36,0)
 ... F I=1:131:$L(X) W " "_$E(X,I,I+130),!
"RTN","IBCECSA3",37,0)
 ... S IBZFT=1
"RTN","IBCECSA3",38,0)
 ... I ($Y+5)>IOSL D HDR1 Q:IBSTOP
"RTN","IBCECSA3",39,0)
 .. W !
"RTN","IBCECSA3",40,0)
 G:IBSTOP LISTQ
"RTN","IBCECSA3",41,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCECSA3",42,0)
LISTQ I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBCECSA3",43,0)
 W ! D ^%ZISC
"RTN","IBCECSA3",44,0)
 Q
"RTN","IBCECSA3",45,0)
IBPAY(IBX,IBX2,IBX3) ; return biller name
"RTN","IBCECSA3",46,0)
 N X
"RTN","IBCECSA3",47,0)
 S X=$O(^TMP("IBCECSB",$J,IBX,IBX2,IBX3,0))
"RTN","IBCECSA3",48,0)
 S X=$G(^TMP("IBCECSB",$J,IBX,IBX2,IBX3,X))
"RTN","IBCECSA3",49,0)
 Q $P($P(X,U,9),"~",1)
"RTN","IBCECSA3",50,0)
HDR1 ;
"RTN","IBCECSA3",51,0)
 N DIR,Y
"RTN","IBCECSA3",52,0)
 I IBPAGE D  Q:IBSTOP
"RTN","IBCECSA3",53,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) Q:IBSTOP
"RTN","IBCECSA3",54,0)
 . W @IOF
"RTN","IBCECSA3",55,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCECSA3",56,0)
 W !,"Sort 1: ",$$SD^IBCECSA(IBSORT1)
"RTN","IBCECSA3",57,0)
 W ?46,"Claims Status Awaiting Resolution Report",?120,$J("Page: "_IBPAGE,11)
"RTN","IBCECSA3",58,0)
 W !,"Sort 2: ",$S($G(IBSORT2)'="":$$SD^IBCECSA(IBSORT2),1:"n/a")
"RTN","IBCECSA3",59,0)
 W ?104,$J("Run Date: "_$$HTE^XLFDT($H,"2Z"),27)
"RTN","IBCECSA3",60,0)
 W !,"Sort 3: ",$S($G(IBSORT3)'="":$$SD^IBCECSA(IBSORT3),1:"n/a")
"RTN","IBCECSA3",61,0)
 I IBDIV W !!,"Division: "_$S($G(IBX)=0:"",1:$G(IBX)),!,"Authorizing Biller: "_$G(IBPAY)
"RTN","IBCECSA3",62,0)
 W !,?72,"Last",?78,"Date of",?88,"Location",?100,"Current",?110,"Source of",?122,"Days Msg"
"RTN","IBCECSA3",63,0)
 W !,"Bill #",?13,"Payer Name",?40,"Patient Name",?72,"4 SSN",?78,"Service",?88,"of Service",?100,"Balance",?110,"Message",?122,"Pending"
"RTN","IBCECSA3",64,0)
 W !,$TR($J("",132)," ","-"),!
"RTN","IBCECSA3",65,0)
 Q
"RTN","IBCECSA3",66,0)
 ;
"RTN","IBCECSA3",67,0)
 ;
"RTN","IBCECSA3",68,0)
RESORT ; CSA screen re-sort action
"RTN","IBCECSA3",69,0)
 NEW DIR,X,Y,Z,IBSAVE,VALMQUIT,IBCURR
"RTN","IBCECSA3",70,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECSA3",71,0)
 W !!?2,"The CSA screen is currently sorted in the following manner:"
"RTN","IBCECSA3",72,0)
 W !!?9,"Primary Sort:  ",$S($G(IBSORT1)'="":$$SD^IBCECSA(IBSORT1),1:"n/a")
"RTN","IBCECSA3",73,0)
 W !?7,"Secondary Sort:  ",$S($G(IBSORT2)'="":$$SD^IBCECSA(IBSORT2),1:"n/a")
"RTN","IBCECSA3",74,0)
 W !?8,"Tertiary Sort:  ",$S($G(IBSORT3)'="":$$SD^IBCECSA(IBSORT3),1:"n/a")
"RTN","IBCECSA3",75,0)
 ;
"RTN","IBCECSA3",76,0)
 W !
"RTN","IBCECSA3",77,0)
 S DIR(0)="Y",DIR("A")="Would you like to change the sort criteria"
"RTN","IBCECSA3",78,0)
 S DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCECSA3",79,0)
 I 'Y G RESORTX
"RTN","IBCECSA3",80,0)
 ;
"RTN","IBCECSA3",81,0)
 ; save the old sort criteria
"RTN","IBCECSA3",82,0)
 S IBSAVE=$G(IBSORT1)_U_$G(IBSORT2)_U_$G(IBSORT3)
"RTN","IBCECSA3",83,0)
 S Z="" F  S Z=$O(IBSORTOR(Z)) Q:Z=""  S IBSAVE=IBSAVE_U_Z_U_IBSORTOR(Z)
"RTN","IBCECSA3",84,0)
 ;
"RTN","IBCECSA3",85,0)
 W !
"RTN","IBCECSA3",86,0)
 K IBSORTOR
"RTN","IBCECSA3",87,0)
 D SORT^IBCECSA(1,$P(IBSAVE,U,1)) I $G(VALMQUIT) G RES1
"RTN","IBCECSA3",88,0)
 D SORT^IBCECSA(2) I $G(VALMQUIT) G RES1
"RTN","IBCECSA3",89,0)
 I $G(IBSORT2)'="" D SORT^IBCECSA(3) I $G(VALMQUIT) G RES1
"RTN","IBCECSA3",90,0)
RES1 ;
"RTN","IBCECSA3",91,0)
 I $G(IBSORT1)="" S IBSORT1=$P(IBSAVE,U,1)   ; need at least one
"RTN","IBCECSA3",92,0)
 ;
"RTN","IBCECSA3",93,0)
 ; see if the sort criteria changed
"RTN","IBCECSA3",94,0)
 S IBCURR=$G(IBSORT1)_U_$G(IBSORT2)_U_$G(IBSORT3)
"RTN","IBCECSA3",95,0)
 S Z="" F  S Z=$O(IBSORTOR(Z)) Q:Z=""  S IBCURR=IBCURR_U_Z_U_IBSORTOR(Z)
"RTN","IBCECSA3",96,0)
 I IBSAVE=IBCURR G RESORTX    ; no sort changes made at all
"RTN","IBCECSA3",97,0)
 ;
"RTN","IBCECSA3",98,0)
 ; time to rebuild the list because sorts have changed
"RTN","IBCECSA3",99,0)
 I $G(IBDAYS)="" S IBDAYS=0
"RTN","IBCECSA3",100,0)
 I $G(IBSEV)="" S IBSEV="R"
"RTN","IBCECSA3",101,0)
 D BLD^IBCECSA1
"RTN","IBCECSA3",102,0)
 S VALMBCK="R",VALMBG=1
"RTN","IBCECSA3",103,0)
 ;
"RTN","IBCECSA3",104,0)
RESORTX ;
"RTN","IBCECSA3",105,0)
 Q
"RTN","IBCECSA3",106,0)
 ;
"RTN","IBCECSA3",107,0)
MCS ; Link to the Multiple CSA Message Management option
"RTN","IBCECSA3",108,0)
 NEW IBCSAMCS S IBCSAMCS=1
"RTN","IBCECSA3",109,0)
 D FULL^VALM1 S VALMBCK="R"
"RTN","IBCECSA3",110,0)
 I '$$KCHK^XUSRB("IB MESSAGE MANAGEMENT") D  G MCSX
"RTN","IBCECSA3",111,0)
 . W !!?5,"You must hold the IB MESSAGE MANAGEMENT key to access this option."
"RTN","IBCECSA3",112,0)
 . D PAUSE^VALM1
"RTN","IBCECSA3",113,0)
 . Q
"RTN","IBCECSA3",114,0)
 ;
"RTN","IBCECSA3",115,0)
 D      ; call the MCS screen
"RTN","IBCECSA3",116,0)
 . NEW IBSORT1,IBSORT2,IBSORT3,IBDAYS,IBSEV     ; protect CSA vars
"RTN","IBCECSA3",117,0)
 . D EN^IBCEMCL
"RTN","IBCECSA3",118,0)
 . Q
"RTN","IBCECSA3",119,0)
 ;
"RTN","IBCECSA3",120,0)
 I $G(IBCSAMCS)=2 D BLD^IBCECSA1 S VALMBG=1     ; rebuild CSA
"RTN","IBCECSA3",121,0)
 S VALMBCK="R"
"RTN","IBCECSA3",122,0)
MCSX ;
"RTN","IBCECSA3",123,0)
 Q
"RTN","IBCECSA3",124,0)
 ;
"RTN","IBCECSA4")
0^12^B56824408^B55019134
"RTN","IBCECSA4",1,0)
IBCECSA4 ;ALB/CXW - IB CLAIMS STATUS AWAITING RESOLUTION SCREEN ;5-AUG-1999
"RTN","IBCECSA4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,320**;21-MAR-1994
"RTN","IBCECSA4",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCECSA4",4,0)
 ;
"RTN","IBCECSA4",5,0)
SMSG ;select message
"RTN","IBCECSA4",6,0)
 N IBCOM,IBX,IBDAX,IBA
"RTN","IBCECSA4",7,0)
 D SEL(.IBDAX,1)
"RTN","IBCECSA4",8,0)
 I $O(IBDAX(""))="" G SMSGQ
"RTN","IBCECSA4",9,0)
 S IBDAX=+$O(IBDAX(0)),IBA=$G(IBDAX(IBDAX))
"RTN","IBCECSA4",10,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2)))
"RTN","IBCECSA4",11,0)
 I IBX'="" D
"RTN","IBCECSA4",12,0)
 . Q:'$$LOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",13,0)
 . D EN^VALM("IBCEM CSA MSG")
"RTN","IBCECSA4",14,0)
 . D UNLOCK^IBCEU0(361,$P(IBA,U,2))
"RTN","IBCECSA4",15,0)
SMSGQ S VALMBCK="R"
"RTN","IBCECSA4",16,0)
 D:$O(IBDAX(0)) BLD^IBCECSA1
"RTN","IBCECSA4",17,0)
 Q
"RTN","IBCECSA4",18,0)
 ;
"RTN","IBCECSA4",19,0)
COB ; COB management link from CSA
"RTN","IBCECSA4",20,0)
 N IBA,IBX
"RTN","IBCECSA4",21,0)
 ;IBX,IBA are killed during cancel execution
"RTN","IBCECSA4",22,0)
 D FULL^VALM1
"RTN","IBCECSA4",23,0)
 D EN^IBCECOB
"RTN","IBCECSA4",24,0)
 I $D(IBFASTXT) K IBFASTXT
"RTN","IBCECSA4",25,0)
 S VALMBCK="R"
"RTN","IBCECSA4",26,0)
 Q
"RTN","IBCECSA4",27,0)
 ;
"RTN","IBCECSA4",28,0)
EDI ;History detail display
"RTN","IBCECSA4",29,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",30,0)
 D FULL^VALM1
"RTN","IBCECSA4",31,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",32,0)
 D EDI2^IBCECOB2(IBIFN)
"RTN","IBCECSA4",33,0)
 S VALMBCK="R"
"RTN","IBCECSA4",34,0)
 Q
"RTN","IBCECSA4",35,0)
EOB ;View an EOB
"RTN","IBCECSA4",36,0)
 N IBIFN,IBA,IBX
"RTN","IBCECSA4",37,0)
 D FULL^VALM1
"RTN","IBCECSA4",38,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",39,0)
 D EN^VALM("IBCEM VIEW EOB")
"RTN","IBCECSA4",40,0)
 Q
"RTN","IBCECSA4",41,0)
 ;
"RTN","IBCECSA4",42,0)
TPJI ;Third Party joint Inquiry
"RTN","IBCECSA4",43,0)
 N IBIFN,IBX,IBA
"RTN","IBCECSA4",44,0)
 D FULL^VALM1
"RTN","IBCECSA4",45,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",46,0)
 D TPJI1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",47,0)
 S VALMBCK="R"
"RTN","IBCECSA4",48,0)
 Q
"RTN","IBCECSA4",49,0)
 ;
"RTN","IBCECSA4",50,0)
PBILL ;Print bill - not for resubmit
"RTN","IBCECSA4",51,0)
 ; IB*320 - allow action for MRA request claims
"RTN","IBCECSA4",52,0)
 N IBIFN,IBX,IBA,IBRESUB
"RTN","IBCECSA4",53,0)
 D FULL^VALM1
"RTN","IBCECSA4",54,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",55,0)
 I "234"'[$P($G(^DGCR(399,IBIFN,0)),U,13) W !!,"Bill status must be REQUEST MRA, AUTHORIZED or PRNT/TX to print the bill." D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",56,0)
 ;
"RTN","IBCECSA4",57,0)
 ; don't update review status for MRA's
"RTN","IBCECSA4",58,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 S IBRESUB=1
"RTN","IBCECSA4",59,0)
 E  S IBRESUB=$$RESUB(IBIFN,1,"PX")
"RTN","IBCECSA4",60,0)
 I IBRESUB'>0 W !,*7,"This is not a transmittable bill or review not needed" D PAUSE^VALM1 G PB1
"RTN","IBCECSA4",61,0)
 I IBRESUB=2 D  G PB1
"RTN","IBCECSA4",62,0)
 . N IB364
"RTN","IBCECSA4",63,0)
 . S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",64,0)
 . D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364)
"RTN","IBCECSA4",65,0)
 D PBILL1^IBCECOB2(IBIFN)
"RTN","IBCECSA4",66,0)
PB1 ;
"RTN","IBCECSA4",67,0)
 S VALMBCK="R"
"RTN","IBCECSA4",68,0)
 Q
"RTN","IBCECSA4",69,0)
 ;
"RTN","IBCECSA4",70,0)
CANCEL ;Cancel bill
"RTN","IBCECSA4",71,0)
 N IBIFN,IB364,IBX,IBA,MRACHK
"RTN","IBCECSA4",72,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",73,0)
 D FULL^VALM1
"RTN","IBCECSA4",74,0)
 S IBDAX=$O(IBDAX(0)),IBIFN=+$G(IBDAX(+IBDAX))
"RTN","IBCECSA4",75,0)
 ; Check for security key
"RTN","IBCECSA4",76,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELQ
"RTN","IBCECSA4",77,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",78,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",79,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",80,0)
 . Q
"RTN","IBCECSA4",81,0)
 D MRACHK I MRACHK G CANCELQ
"RTN","IBCECSA4",82,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",83,0)
 D CANCEL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",84,0)
CANCELQ S VALMBCK="R"
"RTN","IBCECSA4",85,0)
 Q
"RTN","IBCECSA4",86,0)
 ;
"RTN","IBCECSA4",87,0)
CLONE ;'Copy/cancel bill' protocol action
"RTN","IBCECSA4",88,0)
 N IBX,IBA,IB364,MRACHK,IBIFN
"RTN","IBCECSA4",89,0)
 ; IBX,IBA will be killed during execution - need to protect them
"RTN","IBCECSA4",90,0)
 D FULL^VALM1
"RTN","IBCECSA4",91,0)
 S IBDAX=$O(IBDAX("")),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",92,0)
 I IBDAX="" G CLONEQ
"RTN","IBCECSA4",93,0)
 ; Check for security key
"RTN","IBCECSA4",94,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CLONEQ
"RTN","IBCECSA4",95,0)
 . W !!?5,"You don't hold the proper security key to access this function."
"RTN","IBCECSA4",96,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCECSA4",97,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",98,0)
 . Q
"RTN","IBCECSA4",99,0)
 D MRACHK I MRACHK G CLONEQ
"RTN","IBCECSA4",100,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",101,0)
 D COPYCLON^IBCECOB2(+$G(IBDAX(IBDAX)),IB364,.IBDAX)
"RTN","IBCECSA4",102,0)
CLONEQ S VALMBCK="R"
"RTN","IBCECSA4",103,0)
 Q
"RTN","IBCECSA4",104,0)
 ;
"RTN","IBCECSA4",105,0)
PRO ; Copy for secondary/tertiary bill
"RTN","IBCECSA4",106,0)
 N IBIFNH,IBIFN,IB364,IBX,IBA,Z,IBCBASK,IBCBCOPY,IBCAN
"RTN","IBCECSA4",107,0)
 D FULL^VALM1
"RTN","IBCECSA4",108,0)
 ;IBDAX - array from selection of message
"RTN","IBCECSA4",109,0)
 S IBA=$G(IBDAX(+$G(IBDAX)))
"RTN","IBCECSA4",110,0)
 G:'IBA PROQ
"RTN","IBCECSA4",111,0)
 S IBX=$G(^TMP("IBCECSB",$J,$P(IBA,U,3),$P(IBA,U,4),$P(IBA,U,6),$P(IBA,U,2))),IBIFN=$P(IBA,U)
"RTN","IBCECSA4",112,0)
 S IB364=+$P(IBA,U,5)
"RTN","IBCECSA4",113,0)
 G:'IBIFN PROQ
"RTN","IBCECSA4",114,0)
 ;
"RTN","IBCECSA4",115,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2 D  G PROQ
"RTN","IBCECSA4",116,0)
 . W !!?4,"This bill is in a status of REQUEST MRA."
"RTN","IBCECSA4",117,0)
 . I $$CHK^IBCEMU1(IBIFN) W !?4,"MRA EOBs must be processed from the MRA management worklist."
"RTN","IBCECSA4",118,0)
 . E  W !?4,"There are no MRA EOBs on file."
"RTN","IBCECSA4",119,0)
 . D PAUSE^VALM1
"RTN","IBCECSA4",120,0)
 . Q
"RTN","IBCECSA4",121,0)
 ;
"RTN","IBCECSA4",122,0)
 D COBCOPY^IBCECOB2(IBIFN,IB364,1,$P(IBA,U,2),"INIT^IBCECSA2")
"RTN","IBCECSA4",123,0)
PROQ S VALMBCK="R"
"RTN","IBCECSA4",124,0)
 Q
"RTN","IBCECSA4",125,0)
 ;
"RTN","IBCECSA4",126,0)
RES ;Resubmit bill by print
"RTN","IBCECSA4",127,0)
 N IBTMP,IB364,IBIFN,IBX,IBA
"RTN","IBCECSA4",128,0)
 D FULL^VALM1
"RTN","IBCECSA4",129,0)
 S (IBTMP,IBDAX)=$O(IBDAX(0)),IBTMP(IBTMP)=IBDAX(IBDAX)
"RTN","IBCECSA4",130,0)
 S IBIFN=$P($G(IBDAX(+IBDAX)),U)
"RTN","IBCECSA4",131,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",132,0)
 I IBIFN D PRINT1^IBCEM03(IBIFN,.IBDAX,IB364),PAUSE^VALM1,INIT^IBCECSA2
"RTN","IBCECSA4",133,0)
 S IBDAX(IBTMP)=IBTMP(IBTMP)
"RTN","IBCECSA4",134,0)
 S VALMBCK="R"
"RTN","IBCECSA4",135,0)
 Q
"RTN","IBCECSA4",136,0)
 ;
"RTN","IBCECSA4",137,0)
EBI ;Edit bill
"RTN","IBCECSA4",138,0)
 N IBFLG,IBIFN,IB364,IBX,IBA
"RTN","IBCECSA4",139,0)
 K ^TMP($J,"IBBILL")
"RTN","IBCECSA4",140,0)
 D FULL^VALM1
"RTN","IBCECSA4",141,0)
 S IBDAX=$O(IBDAX(""))
"RTN","IBCECSA4",142,0)
 I IBDAX="" G EDITQ
"RTN","IBCECSA4",143,0)
 S IBIFN=$P(IBDAX(IBDAX),U)
"RTN","IBCECSA4",144,0)
 S IBFLG=1 D  I IBFLG S IBDAX="" D PAUSE^VALM1 G EDITQ
"RTN","IBCECSA4",145,0)
 . I $P($G(^DGCR(399,IBIFN,0)),U,13)>2 W !,*7,"An authorized bill can not be edited." Q
"RTN","IBCECSA4",146,0)
 . I '$D(^XUSEC("IB EDIT",DUZ)) W !,*7,"You are not authorized to edit a bill" Q
"RTN","IBCECSA4",147,0)
 . S IBFLG=0
"RTN","IBCECSA4",148,0)
 S IBIFN=+$G(IBDAX(IBDAX))
"RTN","IBCECSA4",149,0)
 S IB364=+$P($G(IBDAX(IBDAX)),U,5)
"RTN","IBCECSA4",150,0)
 D EBILL^IBCEM3(.IBDAX,IBIFN,IB364)
"RTN","IBCECSA4",151,0)
EDITQ S VALMBCK="R"
"RTN","IBCECSA4",152,0)
 Q
"RTN","IBCECSA4",153,0)
 ;
"RTN","IBCECSA4",154,0)
SEL(IBDA,ONE) ; Select entry(s) from list
"RTN","IBCECSA4",155,0)
 ; IBDA = array returned if selections made
"RTN","IBCECSA4",156,0)
 ;    IBDAX(n)=ien of bill selected (file 399)
"RTN","IBCECSA4",157,0)
 ; ONE = if set to 1, only one selection can be made at a time
"RTN","IBCECSA4",158,0)
 N IB
"RTN","IBCECSA4",159,0)
 K IBDA
"RTN","IBCECSA4",160,0)
 D EN^VALM2($G(XQORNOD(0)),$S('$G(ONE):"",1:"S"))
"RTN","IBCECSA4",161,0)
 S IBDA=0 F  S IBDA=$O(VALMY(IBDA)) Q:'IBDA  D
"RTN","IBCECSA4",162,0)
 . S IBDA(IBDA)=$P($G(^TMP("IBCECSA",$J,IBDA)),U,2,7)
"RTN","IBCECSA4",163,0)
 Q
"RTN","IBCECSA4",164,0)
 ;
"RTN","IBCECSA4",165,0)
RESUB(IBIFN,TXMT,IBFUNC,IBTBA) ; Function asks if resubmit as resolution to a
"RTN","IBCECSA4",166,0)
 ;   message is the intention
"RTN","IBCECSA4",167,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCECSA4",168,0)
 ; TXMT = flag if = 1, assume it's transmittable, don't have to check
"RTN","IBCECSA4",169,0)
 ; IBFUNC = code to say where the code is called from
"RTN","IBCECSA4",170,0)
 ;  'E'=edit/authorize  'P'=print 'PX'= print/not to resubmit  'C'=cancel
"RTN","IBCECSA4",171,0)
 ; IBTBA = transmit bill array returned to calling routine.  Optional
"RTN","IBCECSA4",172,0)
 ;    parameter to be passed by reference.
"RTN","IBCECSA4",173,0)
 ;    IBTBA(364ptr)=""
"RTN","IBCECSA4",174,0)
 ;
"RTN","IBCECSA4",175,0)
 ; Returns:
"RTN","IBCECSA4",176,0)
 ; -1 = ^ or timeout at prompt
"RTN","IBCECSA4",177,0)
 ;  0 = not a transmittable bill or review not needed
"RTN","IBCECSA4",178,0)
 ;  1 = don't update the review status (user choice)
"RTN","IBCECSA4",179,0)
 ;  2 = Yes, update the review status (user choice), or resubmit by print
"RTN","IBCECSA4",180,0)
 ;
"RTN","IBCECSA4",181,0)
 NEW DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,STAT
"RTN","IBCECSA4",182,0)
 KILL IBTBA
"RTN","IBCECSA4",183,0)
 I '$G(TXMT),'$$TXMT^IBCEF4(IBIFN) S Y=0 G RESUB1   ; not transmittable
"RTN","IBCECSA4",184,0)
 ;
"RTN","IBCECSA4",185,0)
 ; Check for any messages or EOB's needing review
"RTN","IBCECSA4",186,0)
 S STAT=$$STATUS^IBCEF4(IBIFN)
"RTN","IBCECSA4",187,0)
 I '$TR(STAT,U) S Y=0 G RESUB1                ; no unreviewed items
"RTN","IBCECSA4",188,0)
 I $P(STAT,U,1) S IBTBA($P(STAT,U,1))=""      ; 364 ien for 361 data
"RTN","IBCECSA4",189,0)
 I $P(STAT,U,2) S IBTBA($P(STAT,U,2))=""      ; 364 ien for 361.1 data
"RTN","IBCECSA4",190,0)
 ;
"RTN","IBCECSA4",191,0)
 I IBFUNC'="P" D
"RTN","IBCECSA4",192,0)
 . S DIR(0)="YA",DIR("A",1)="",DIR("A",2)="This bill is in need of review due to receipt of a status msg or EOB",DIR("A")="OK to update the review status to 'REVIEW COMPLETE' based on this action?: ",DIR("B")="NO"
"RTN","IBCECSA4",193,0)
 . S DIR("?",1)="You have just "_$S(IBFUNC="E":"requested re-transmission of",IBFUNC="C":"cancelled",1:"")_" the bill"
"RTN","IBCECSA4",194,0)
 . S DIR("?",2)="You can update the review status of the unreviewed message to ",DIR("?",3)=" 'REVIEW COMPLETE' if you say YES here"
"RTN","IBCECSA4",195,0)
 . S DIR("?")="Press ENTER to continue "
"RTN","IBCECSA4",196,0)
 . D ^DIR K DIR
"RTN","IBCECSA4",197,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-1 Q
"RTN","IBCECSA4",198,0)
 . S Y=Y+1
"RTN","IBCECSA4",199,0)
 E  D
"RTN","IBCECSA4",200,0)
 . W !,"The review status of this message will be updated to 'REVIEW COMPLETE'",!,"  based on this action"
"RTN","IBCECSA4",201,0)
 . S Y=2
"RTN","IBCECSA4",202,0)
 ;
"RTN","IBCECSA4",203,0)
RESUB1 Q +Y
"RTN","IBCECSA4",204,0)
 ;
"RTN","IBCECSA4",205,0)
RETXMT ;
"RTN","IBCECSA4",206,0)
 N IB364,IBIFN
"RTN","IBCECSA4",207,0)
 D FULL^VALM1
"RTN","IBCECSA4",208,0)
 S IBDAX=$O(IBDAX(0)),IB364=+$P($G(IBDAX(IBDAX)),U,5),IBIFN=+$P($G(IBDAX(IBDAX)),U)
"RTN","IBCECSA4",209,0)
 I 'IB364!('IBIFN) G RETXMTQ
"RTN","IBCECSA4",210,0)
 D MRACHK I MRACHK G RETXMTQ
"RTN","IBCECSA4",211,0)
 D RESUB^IBCE(IB364)
"RTN","IBCECSA4",212,0)
RETXMTQ S VALMBCK="R"
"RTN","IBCECSA4",213,0)
 Q
"RTN","IBCECSA4",214,0)
 ;
"RTN","IBCECSA4",215,0)
MRACHK ; Restrict access to process REQUEST MRA claims
"RTN","IBCECSA4",216,0)
 S MRACHK=0
"RTN","IBCECSA4",217,0)
 ; At least one MRA EOB appears on the MRA management worklist
"RTN","IBCECSA4",218,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)=2,$$MRAWL^IBCEMU2(IBIFN) S MRACHK=1 D  D PAUSE^VALM1
"RTN","IBCECSA4",219,0)
 . W !,?4,"This bill is in a status of REQUEST MRA and it does appear on"
"RTN","IBCECSA4",220,0)
 . W !,?4,"the MRA Management Worklist.  Please use the MRA Management Menu"
"RTN","IBCECSA4",221,0)
 . W !,?4,"options for all processing related to this bill."
"RTN","IBCECSA4",222,0)
 Q
"RTN","IBCEF71")
0^46^B63861982^B62140517
"RTN","IBCEF71",1,0)
IBCEF71 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF71",2,0)
 ;;2.0;INTEGRATED BILLING;**232,155,288,320**;21-MAR-94
"RTN","IBCEF71",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF71",4,0)
 ;
"RTN","IBCEF71",5,0)
 ;---------
"RTN","IBCEF71",6,0)
 ;OTHPAYC - from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",7,0)
 ;Input:
"RTN","IBCEF71",8,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",9,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",10,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",11,0)
 ;IBFUNC - FUNCTION from #399 (1-refering,2-operating,etc)
"RTN","IBCEF71",12,0)
 ;IBVAL - output value
"RTN","IBCEF71",13,0)
 ;Output:
"RTN","IBCEF71",14,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",15,0)
OTHPAYC(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBVAL) ;
"RTN","IBCEF71",16,0)
 N IB1,IB2,IBINS,IBFL
"RTN","IBCEF71",17,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",18,0)
 F IB1=1,2 D
"RTN","IBCEF71",19,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if no such insurance
"RTN","IBCEF71",20,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF71",21,0)
 . S:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) IBDATA(IB1)=IBVAL
"RTN","IBCEF71",22,0)
 Q
"RTN","IBCEF71",23,0)
 ;----
"RTN","IBCEF71",24,0)
 ;OTHPAYV - called from FORMAT code for OP1,OP2 ...
"RTN","IBCEF71",25,0)
 ;Input:
"RTN","IBCEF71",26,0)
 ;IBXIEN - ien #399
"RTN","IBCEF71",27,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF71",28,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF71",29,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2-operating, etc)
"RTN","IBCEF71",30,0)
 ;IBSEQN - seq # of ID/QUAL
"RTN","IBCEF71",31,0)
 ;IBFLDTYP
"RTN","IBCEF71",32,0)
 ; "I" - ID  "Q" - ID QUAL
"RTN","IBCEF71",33,0)
 ;Output:
"RTN","IBCEF71",34,0)
 ; IBDATA with formatted output
"RTN","IBCEF71",35,0)
OTHPAYV(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBFLDTYP,IBSEQN) ;
"RTN","IBCEF71",36,0)
 N IB1,IB2,IBPIECE,IBINS,IBFL
"RTN","IBCEF71",37,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF71",38,0)
 S IBPIECE=$S(IBFLDTYP="I":4,IBFLDTYP="Q":3,1:3)
"RTN","IBCEF71",39,0)
 F IB1=1,2 D
"RTN","IBCEF71",40,0)
 . Q:'$$ISINSUR($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if there is no such insurance
"RTN","IBCEF71",41,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4),IBFL=0
"RTN","IBCEF71",42,0)
 . S IBDATA(IB1)=$P($G(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,IBSEQN)),"^",IBPIECE)
"RTN","IBCEF71",43,0)
 Q
"RTN","IBCEF71",44,0)
 ;
"RTN","IBCEF71",45,0)
 ;chk for ins
"RTN","IBCEF71",46,0)
 ;Input:
"RTN","IBCEF71",47,0)
 ; IBINS = "P","S","T"
"RTN","IBCEF71",48,0)
 ; IBXIEN - ien file #399
"RTN","IBCEF71",49,0)
 ;Output:
"RTN","IBCEF71",50,0)
 ; returns 1-exists , 0-doesn't
"RTN","IBCEF71",51,0)
ISINSUR(IBINS,IBXIEN) ;
"RTN","IBCEF71",52,0)
 N IBINSNOD
"RTN","IBCEF71",53,0)
 S IBINSNOD=$S(IBINS="P":"I1",IBINS="S":"I2",IBINS="T":"I3",1:"")
"RTN","IBCEF71",54,0)
 I IBINSNOD="" Q 0
"RTN","IBCEF71",55,0)
 Q $D(^DGCR(399,IBXIEN,IBINSNOD))
"RTN","IBCEF71",56,0)
 ;
"RTN","IBCEF71",57,0)
 ;---PRACT----
"RTN","IBCEF71",58,0)
 ;Get list of all 355.9 or 355.93 records for prov
"RTN","IBCEF71",59,0)
 ;Input: 
"RTN","IBCEF71",60,0)
 ;IB399INS - ins co for bill to match PRACTIONER from 355.9
"RTN","IBCEF71",61,0)
 ;IB399FRM - form type (0=unknwn/both,1=UB92,2=HCFA 1500) to 
"RTN","IBCEF71",62,0)
 ;   match PRACTIONER from 355.9
"RTN","IBCEF71",63,0)
 ;IB399CAR - BILL CARE (0=unknwn or both inp/outp,1=inpatient,
"RTN","IBCEF71",64,0)
 ;   2=outpatient/3=Rx) to match PROV from 355.9
"RTN","IBCEF71",65,0)
 ;    OR   - DIVISION PTR to file 40.8 for entries in file 355.92
"RTN","IBCEF71",66,0)
 ;IBPROV - VARIABLE PTR VA prov
"RTN","IBCEF71",67,0)
 ;IBARR - array by reference for result
"RTN","IBCEF71",68,0)
 ;IBPROVTP- function (2-operating, 3-RENDERING,etc 0-facility)
"RTN","IBCEF71",69,0)
 ;IBINSTP - "C" -current ins , "O"-other
"RTN","IBCEF71",70,0)
 ;IBFILE - 355.92 for facility ids or 355.9 (default) for provider ids
"RTN","IBCEF71",71,0)
 ;IBINS - 1 if to include ids for the ins co for all provs
"RTN","IBCEF71",72,0)
 ;Ouput:
"RTN","IBCEF71",73,0)
 ;IBARR - array by ref for result
"RTN","IBCEF71",74,0)
 ; prov var ptr^ins ptr^X12 id cd^ID^form typ^care typ or division ptr^st ptr^id rec ptr^id type ptr
"RTN","IBCEF71",75,0)
PRACT(IB399INS,IB399FRM,IB399CAR,IBPROV,IBARR,IBPROVTP,IBINSTP,IBFILE,IBINS) ;
"RTN","IBCEF71",76,0)
 N IB1,IB2,IBDAT,IBF,IBFX,IB3559,IBINSCO,IBFRMTYP,IBIDTYP,IBID,IBIDT,IBDIV,IBQ,IBS1,IBS2,IBARRX,Z,Z1,Z2,IBCARE
"RTN","IBCEF71",77,0)
 I $G(IBFILE)="" S IBFILE=355.9
"RTN","IBCEF71",78,0)
 S IBINS=$G(IBINS)
"RTN","IBCEF71",79,0)
 S (IBARR,IB3559,IB1)=0
"RTN","IBCEF71",80,0)
 F IBF="",1 Q:IBF=1&$S(IBFILE'=355.9:1,1:'IBINS)  S IBFX=IBFILE_IBF F IB2=1:1 S IB3559=$O(^IBA(IBFX,"B",$S(IBFILE=355.9&(IBF=""):IBPROV,1:IB399INS),IB3559)) Q:IB3559=""  D
"RTN","IBCEF71",81,0)
 . S IBINSCO=$P($G(^IBA(IBFX,IB3559,0)),"^",$S(IBFILE=355.9&(IBF=""):2,1:1)) ;ins co. ptr
"RTN","IBCEF71",82,0)
 . I IBINSCO'="" I IBINSCO'=IB399INS Q  ;exclude if different ins
"RTN","IBCEF71",83,0)
 . S:IBINSCO="" IBINSCO="NONE" ;NONE will be included in the array
"RTN","IBCEF71",84,0)
 . S IBFRMTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",4) ;form type (0=both,1=UB92,2=HCFA 1500)
"RTN","IBCEF71",85,0)
 . I '(IBFRMTYP=0!(IB399FRM=0)) Q:IBFRMTYP'=IB399FRM  ;exclude if not "both" and different
"RTN","IBCEF71",86,0)
 . S IBCARE=+$P($G(^IBA(IBFX,IB3559,0)),"^",5) ;0=both(inp and outp),1=inp,2=outp,3=prescr  -- OR -- division ptr
"RTN","IBCEF71",87,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=3) I IB399CAR'=3 Q  ; Id is only for Rx
"RTN","IBCEF71",88,0)
 . I $S(IBFILE=355.92:0,1:IBCARE=1!(IBCARE=2)) I IB399CAR=1!(IB399CAR=2) Q:IBCARE'=IB399CAR  ;both is OK
"RTN","IBCEF71",89,0)
 . I IBFILE=355.92,IBCARE Q:IB399CAR'=IBCARE  ; Division doesn't match
"RTN","IBCEF71",90,0)
 . S IBIDTYP=+$P($G(^IBA(IBFX,IB3559,0)),"^",6) ;prov ID type
"RTN","IBCEF71",91,0)
 . I IBFILE=355.9,IBIDTYP=$$TAXID^IBCEP8(),$S(IBPROV["VA(200":1,1:$P($G(^IBA(355.93,+IBPROV,0)),U,2)=2) Q  ; Don't extract tax id # id for indiv prov
"RTN","IBCEF71",92,0)
 . S IBIDT=IBIDTYP
"RTN","IBCEF71",93,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF71",94,0)
 . Q:$P($G(^IBE(355.97,+IBIDT,1)),U,9)
"RTN","IBCEF71",95,0)
 . Q:IBFILE=355.9&(IBIDTYP="X4")  ;exclude CLIA #
"RTN","IBCEF71",96,0)
 . S IBID=$P($G(^IBA(IBFX,IB3559,0)),"^",7) ;prov ID value
"RTN","IBCEF71",97,0)
 . I $G(IBPROVTP)'="",$G(IBINSTP)'="",IBPROVTP'=0 I '$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) Q  ; No qualifier chk for fac
"RTN","IBCEF71",98,0)
 . I IBID'="" S IBDAT=IBPROV_"^"_IBINSCO_"^"_IBIDTYP_"^"_IBID_"^"_IBFRMTYP_"^"_IBCARE_"^"_"^"_IB3559_U_IBIDT,IBS2=$S(IBFX'=355.91:"",1:"INS DEF^")_IB3559
"RTN","IBCEF71",99,0)
 . I IBFILE'=355.92,IBID'="",IB399CAR=3 S IBQ=0 D  Q:IBQ
"RTN","IBCEF71",100,0)
 .. I $G(IBARRX(IBIDT))!(IBCARE=1) S IBQ=1 Q
"RTN","IBCEF71",101,0)
 .. I IBCARE=3&(IB399CAR=3) S IBARRX(IBIDT)=1 Q  ; Rx match
"RTN","IBCEF71",102,0)
 .. I IBCARE=0!(IBCARE=2) S IBARRX(IBIDT,IBINSCO,IBS2)=IBDAT,IBQ=1 Q
"RTN","IBCEF71",103,0)
 . I IBID'="" S IBARR(IBINSCO,IBS2)=IBDAT
"RTN","IBCEF71",104,0)
 ;
"RTN","IBCEF71",105,0)
 I IB399CAR=3 S Z=0 F  S Z=$O(IBARRX(Z)) Q:'Z  I '$G(IBARRX(Z)) D
"RTN","IBCEF71",106,0)
 . S Z1="" F  S Z1=$O(IBARRX(Z,Z1)) Q:Z1=""  S Z2="" F  S Z2=$O(IBARRX(Z,Z1,Z2)) Q:Z2=""  S IBARR(Z1,Z2)=IBARRX(Z,Z1,Z2)
"RTN","IBCEF71",107,0)
 ;
"RTN","IBCEF71",108,0)
 I IBPROV["VA(200," D  ; Get lic #s from file 2 for VA providers
"RTN","IBCEF71",109,0)
 . N Z,IBLIC
"RTN","IBCEF71",110,0)
 . S IBLIC=+IBPROV,IBLIC=$$GETLIC^IBCEP5D(.IBLIC)
"RTN","IBCEF71",111,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",112,0)
 . S Z=0 F  S Z=$O(IBLIC(Z)) Q:'Z  S:$$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) IBARR("NONE","LIC"_Z_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_IBLIC(Z)_U_"0"_U_"0"_U_Z_U_U_+$$STLIC^IBCEP8()
"RTN","IBCEF71",113,0)
 I IBPROV["IBA(355.93" D
"RTN","IBCEF71",114,0)
 . Q:$P($G(^IBA(355.93,+IBPROV,0)),U,12)=""
"RTN","IBCEF71",115,0)
 . S IBIDTYP=$P($G(^IBE(355.97,+$$STLIC^IBCEP8(),0)),U,3)
"RTN","IBCEF71",116,0)
 . I $$CHCKSEC^IBCEF73(IB399FRM,IBPROVTP,IBINSTP,IBIDTYP) D
"RTN","IBCEF71",117,0)
 . . S IBARR("NONE","LIC"_$P($G(^DIC(5,+$P(^IBA(355.93,+IBPROV,0),U,7),0)),U,2)_"^"_IBPROV)=IBPROV_U_"NONE"_U_IBIDTYP_U_$P(^IBA(355.93,+IBPROV,0),U,12)_U_"0"_U_"0"_U_$P(^IBA(355.93,+IBPROV,0),U,7)_U_U_+IBPROV
"RTN","IBCEF71",118,0)
 Q
"RTN","IBCEF71",119,0)
 ;
"RTN","IBCEF71",120,0)
ALLPRFAC(IBXIEN,IBXSAVE) ; Return all non-VA/outside facility prov ids
"RTN","IBCEF71",121,0)
 ; and all VA alternate prov ids
"RTN","IBCEF71",122,0)
 ; IBXIEN = ien file 399
"RTN","IBCEF71",123,0)
 ; IBXSAVE = subscripted array returned
"RTN","IBCEF71",124,0)
 N IBPROV,IBFRMTYP,IBCARE,IBRETARR,IBRET1,IBCOBN,Z,Z0,Z1,ZZ
"RTN","IBCEF71",125,0)
 K IBXSAVE("PROVINF_FAC",IBXIEN) ; Always rebuild this
"RTN","IBCEF71",126,0)
 S IBCOBN=+$$COBN^IBCEF(IBXIEN)
"RTN","IBCEF71",127,0)
 S IBFRMTYP=$$FT^IBCEF(IBXIEN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF71",128,0)
 S IBPROV=$P($G(^DGCR(399,IBXIEN,"U2")),U,10)
"RTN","IBCEF71",129,0)
 ; IB patch 320 - Build IBPROV variable better when a non-VA facility exists
"RTN","IBCEF71",130,0)
 I IBPROV S IBPROV=IBPROV_";IBA(355.93,"
"RTN","IBCEF71",131,0)
 I 'IBPROV S IBCARE=$P($G(^DGCR(399,IBXIEN,0)),U,22)
"RTN","IBCEF71",132,0)
 I IBPROV D
"RTN","IBCEF71",133,0)
 . S IBCARE=$S($$ISRX^IBCEF1(IBXIEN):3,1:0) ;if Rx refill bill
"RTN","IBCEF71",134,0)
 . S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBXIEN,1) S:'IBCARE IBCARE=2 ;1-inp, 2-out
"RTN","IBCEF71",135,0)
 F Z=1:1:3 K IBRETARR I $G(^DGCR(399,IBXIEN,"I"_Z)) D
"RTN","IBCEF71",136,0)
 . D PRACT(+^DGCR(399,IBXIEN,"I"_Z),IBFRMTYP,IBCARE,IBPROV,.IBRETARR,0,$S(Z=IBCOBN:"C",1:"O"),$S('IBPROV:355.92,1:355.9))
"RTN","IBCEF71",137,0)
 . K IBRET1
"RTN","IBCEF71",138,0)
 . S Z0="" F  S Z0=$O(IBRETARR(Z0)) Q:Z0=""  S Z1="" F  S Z1=$O(IBRETARR(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",139,0)
 .. ; Sort by div/id type
"RTN","IBCEF71",140,0)
 .. S IBRET1($S(IBPROV:0,1:+$P(IBRETARR(Z0,Z1),U,6)),+$P(IBRETARR(Z0,Z1),U,9))=IBRETARR(Z0,Z1)
"RTN","IBCEF71",141,0)
 .. Q
"RTN","IBCEF71",142,0)
 . ;
"RTN","IBCEF71",143,0)
 . S Z0=$O(IBRET1(""),-1) Q:Z0=""  D
"RTN","IBCEF71",144,0)
 .. ; IB patch 320 - loop thru all ID's
"RTN","IBCEF71",145,0)
 .. S Z1="" F  S Z1=$O(IBRET1(Z0,Z1)) Q:Z1=""  D
"RTN","IBCEF71",146,0)
 ... I Z=IBCOBN S IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"C",1,0," "),-1)+1)=IBRET1(Z0,Z1) Q
"RTN","IBCEF71",147,0)
 ... S ZZ=$S(Z=1:1,Z=2:(IBCOBN=3)+1,1:2)
"RTN","IBCEF71",148,0)
 ... S IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0,$O(IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ,0," "),-1)+1)=IBRET1(Z0,Z1),IBXSAVE("PROVINF_FAC",IBXIEN,"O",ZZ)=$E("PST",Z)
"RTN","IBCEF71",149,0)
 ... Q
"RTN","IBCEF71",150,0)
 .. Q
"RTN","IBCEF71",151,0)
 . Q
"RTN","IBCEF71",152,0)
 ;
"RTN","IBCEF71",153,0)
 S IBXSAVE("PROVINF_FAC",IBXIEN)=IBXIEN,IBXSAVE("PROVINF_FAC",IBXIEN,"C",1)=$E("PST",IBCOBN)
"RTN","IBCEF71",154,0)
 Q
"RTN","IBCEF71",155,0)
 ;
"RTN","IBCEF71",156,0)
OTHID(IBXSAVE,IBXDATA,IBXIEN,PRIDSEQ,PRTYP,IBQ,IBFAC) ; From data in IBXSAVE,
"RTN","IBCEF71",157,0)
 ;  determine id or qualifier to output in the 837 records OP*
"RTN","IBCEF71",158,0)
 ; Returns IBXDATA array IBXDATA(n)=data
"RTN","IBCEF71",159,0)
 ; IBXIEN = ien of the bill-file 399
"RTN","IBCEF71",160,0)
 ; PRIDSEQ = sequence of the payer id needed
"RTN","IBCEF71",161,0)
 ; PRTYP = provider type to check for data
"RTN","IBCEF71",162,0)
 ; IBQ = 1 if qualifier needed, 0/null if id needed
"RTN","IBCEF71",163,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",164,0)
 ; 
"RTN","IBCEF71",165,0)
 N Z,Z0,Z1
"RTN","IBCEF71",166,0)
 S Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC"),Z1=$S($G(IBQ):3,1:4)
"RTN","IBCEF71",167,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  D
"RTN","IBCEF71",168,0)
 . I $P($G(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ))),U,4)'="" S IBXDATA(IBXSAVE("OSQ",Z))=$P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),+$G(PRIDSEQ)),U,Z1)
"RTN","IBCEF71",169,0)
 Q
"RTN","IBCEF71",170,0)
 ;
"RTN","IBCEF71",171,0)
SETSEQ(IBXIEN,IBXSAVE,IBXDATA,PRTYP,IBFAC,IBOP) ; Sets up IBXSAVE("OSQ")
"RTN","IBCEF71",172,0)
 ;  array for other id seq in 837 records OP*
"RTN","IBCEF71",173,0)
 ; Returns IBXDATA(n)=cob seq indicator for ids
"RTN","IBCEF71",174,0)
 ; IBXIEN = ien of bill-399
"RTN","IBCEF71",175,0)
 ; PRTYP = the provider type to check for data for indiv provider
"RTN","IBCEF71",176,0)
 ; IBFAC = 1 if facility id, 0 for individual provider id
"RTN","IBCEF71",177,0)
 ; IBOP = segement # in OP being output
"RTN","IBCEF71",178,0)
 N C,Z,Z0,Z1,OK
"RTN","IBCEF71",179,0)
 S C=0,Z0="PROVINF"_$S('$G(IBFAC):"",1:"_FAC")
"RTN","IBCEF71",180,0)
 S:$G(IBFAC) PRTYP=0
"RTN","IBCEF71",181,0)
 S Z=0 F  S Z=$O(IBXSAVE(Z0,IBXIEN,"O",Z)) Q:'Z  S OK=0 D
"RTN","IBCEF71",182,0)
 . N Z1 F Z1=1:1 Q:'$D(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1))  I $P(IBXSAVE(Z0,IBXIEN,"O",Z,+$G(PRTYP),Z1),U,4)'="""" S OK=1 Q
"RTN","IBCEF71",183,0)
 . I OK S C=C+1,IBXSAVE("OSQ",Z)=C
"RTN","IBCEF71",184,0)
 S Z=0 F  S Z=$O(IBXSAVE("OSQ",Z)) Q:'Z  S IBXDATA(IBXSAVE("OSQ",Z))=$G(IBXSAVE(Z0,IBXIEN,"O",Z)) D:IBXSAVE("OSQ",Z)>1 ID^IBCEF2(IBXSAVE("OSQ",Z),"OP"_$G(IBOP)_" ")
"RTN","IBCEF71",185,0)
 Q
"RTN","IBCEF71",186,0)
 ;
"RTN","IBCEF71",187,0)
PSPRV(IBIFN) ;
"RTN","IBCEF71",188,0)
 Q $$PSPRV^IBCEF7(IBIFN) ; Moved
"RTN","IBCEF71",189,0)
 ;
"RTN","IBCEF72")
0^7^B53776551^B52208201
"RTN","IBCEF72",1,0)
IBCEF72 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF72",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320**;21-MAR-94
"RTN","IBCEF72",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF72",4,0)
 ;
"RTN","IBCEF72",5,0)
 ;
"RTN","IBCEF72",6,0)
 ;Input:
"RTN","IBCEF72",7,0)
 ;IBINSCO - ptr to #36
"RTN","IBCEF72",8,0)
 ;IBFRMTYP 0=unknwn/both,1=UB92,2=HCFA 1500
"RTN","IBCEF72",9,0)
 ;IBCARE - 0=unknwn or both inp/outp,1=inpatient, 2=outpatient, 3 -RX
"RTN","IBCEF72",10,0)
 ;Output: X12 IDtype^ID^ID TYPE ptr to file 355.97
"RTN","IBCEF72",11,0)
CH35591(IBINSCO,IBFRMTYP,IBCARE) ;
"RTN","IBCEF72",12,0)
 N IB35591,IBRET,IB1
"RTN","IBCEF72",13,0)
 S IB35591=0,IBRET=""
"RTN","IBCEF72",14,0)
 F  S IB35591=$O(^IBA(355.91,"B",IBINSCO,IB35591)) Q:+IB35591=0  Q:IBRET'=""  D
"RTN","IBCEF72",15,0)
 . S IB1=$G(^IBA(355.91,IB35591,0))
"RTN","IBCEF72",16,0)
 . I '($P(IB1,"^",4)=0!(IBFRMTYP=0)) Q:$P(IB1,"^",4)'=IBFRMTYP  ;if wrong form type
"RTN","IBCEF72",17,0)
 . I ($P(IB1,"^",5)=3)!(IBCARE=3) Q:IBCARE'=$P(IB1,"^",5)  ;if not RX
"RTN","IBCEF72",18,0)
 . I ($P(IB1,"^",5)=1)!($P(IB1,"^",5)=2) I (IBCARE=1)!(IBCARE=2) Q:$P(IB1,"^",5)'=IBCARE  ;if wrong care type
"RTN","IBCEF72",19,0)
 . S IBRET=$P($G(^IBE(355.97,+$P(IB1,"^",6),0)),"^",3)_"^"_$P(IB1,"^",7)_U_+$P(IB1,U,6)
"RTN","IBCEF72",20,0)
 Q IBRET
"RTN","IBCEF72",21,0)
 ;
"RTN","IBCEF72",22,0)
FINDEIN(IBXIEN,IBPROV,IBFAC,IBS) ; find EIN for facility/ SSN for person
"RTN","IBCEF72",23,0)
 ; IBXIEN = ien of bill entry file 399
"RTN","IBCEF72",24,0)
 ; IBFAC = 1 if facility, 0 if individual provider
"RTN","IBCEF72",25,0)
 ; IBPROV = ien of provider (vp format)
"RTN","IBCEF72",26,0)
 ; IBS = 1 if person's EIN should be returned if there, otherwise SSN
"RTN","IBCEF72",27,0)
 ; FUNCTION RETURNS 
"RTN","IBCEF72",28,0)
 ;    EIN or SSN ^ 24 for EIN, 34 for SSN or null if none found
"RTN","IBCEF72",29,0)
 N Z,Z0,IBARR,IBEIN,IBSSN
"RTN","IBCEF72",30,0)
 S (IBEIN,IBSSN)=""
"RTN","IBCEF72",31,0)
 D ALLID^IBCEP8(IBPROV,"",.IBARR)
"RTN","IBCEF72",32,0)
 S Z=0 F  S Z=$O(IBARR(Z)) Q:'Z  D  Q:IBEIN'=""
"RTN","IBCEF72",33,0)
 . I $G(IBFAC) Q:$P(IBARR(Z),U,7)'="EI"  S IBEIN=$P(IBARR(Z),U,2)_U_24 Q
"RTN","IBCEF72",34,0)
 . I $P(IBARR(Z),U,7)="SY" D  Q
"RTN","IBCEF72",35,0)
 .. I $G(IBS) S IBSSN=$P(IBARR(Z),U,2)_U_34 Q
"RTN","IBCEF72",36,0)
 . S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",37,0)
 . I $G(IBS),$P(IBARR(Z),U,7)="EI" S IBEIN=$P(IBARR(Z),U,2)_U_24
"RTN","IBCEF72",38,0)
 I $G(IBS),IBEIN="" S IBEIN=IBSSN
"RTN","IBCEF72",39,0)
 Q IBEIN
"RTN","IBCEF72",40,0)
 ;
"RTN","IBCEF72",41,0)
 ;
"RTN","IBCEF72",42,0)
NONVAID(IBXIEN,IBX,IBFAC,IBS) ; Find the non-VA provider default id
"RTN","IBCEF72",43,0)
 ; IBXIEN = the ien of the bill (file 399)
"RTN","IBCEF72",44,0)
 ; IBX = id data returned if passed by reference
"RTN","IBCEF72",45,0)
 ; IBFAC = 1 if getting the id for the facility or 0 for rendering prov
"RTN","IBCEF72",46,0)
 ; IBS = 1 if getting id for person, but need the EIN if there
"RTN","IBCEF72",47,0)
 ; Function returns the id^type of id^person/facility flag:
"RTN","IBCEF72",48,0)
 ;   Type of id: 1 = SSN    2 = EIN   0 = not found
"RTN","IBCEF72",49,0)
 ;   person/facility: 1 = person   2 = facility
"RTN","IBCEF72",50,0)
 N Z,IBXSAVE,IBU2,IBTYPE,IBZ,IBF,IBPROV,Q,Q0
"RTN","IBCEF72",51,0)
 S IBTYPE=2,IBU2=$G(^DGCR(399,IBXIEN,"U2")),IBF=2,IBPROV=""
"RTN","IBCEF72",52,0)
 ;
"RTN","IBCEF72",53,0)
 S Z=$P(IBU2,U,10)
"RTN","IBCEF72",54,0)
 I 'Z S IBX="",IBTYPE=0 G NONVAQ ; Not a non-VA facility
"RTN","IBCEF72",55,0)
 S IBPROV=Z_";IBA(355.93,"
"RTN","IBCEF72",56,0)
 ;
"RTN","IBCEF72",57,0)
 ; Get EIN
"RTN","IBCEF72",58,0)
 I $G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",59,0)
 . S IBX=$P($$FINDEIN(IBXIEN,IBPROV,IBFAC),U),IBTYPE=2
"RTN","IBCEF72",60,0)
 ;
"RTN","IBCEF72",61,0)
 ; Get EIN/SSN
"RTN","IBCEF72",62,0)
 I '$G(IBFAC) D  G NONVAQ
"RTN","IBCEF72",63,0)
 . S IBX="",IBF=1
"RTN","IBCEF72",64,0)
 . S Q0=($$FT^IBCEF(IBXIEN)=3)+3 ; 3 for rendering/4 for attending
"RTN","IBCEF72",65,0)
 . S Q=+$O(^DGCR(399,IBXIEN,"PRV","B",Q0,0))
"RTN","IBCEF72",66,0)
 . S IBPROV=$P($G(^DGCR(399,IBXIEN,"PRV",Q,0)),U,2)
"RTN","IBCEF72",67,0)
 . I IBPROV S IBX=$$FINDEIN(IBXIEN,IBPROV,IBFAC,$G(IBS)),IBTYPE=$S($P(IBX,U,2)=24:2,$P(IBX,U,2)=34:1,1:0),IBX=$P(IBX,U)
"RTN","IBCEF72",68,0)
 ;
"RTN","IBCEF72",69,0)
NONVAQ I IBTYPE,IBX="",$P(IBU2,U,12)'="" S IBX=$P(IBU2,U,12) ; pull from 399
"RTN","IBCEF72",70,0)
 S IBX=$G(IBX)
"RTN","IBCEF72",71,0)
 Q IBX_U_IBTYPE_U_IBF
"RTN","IBCEF72",72,0)
 ;----
"RTN","IBCEF72",73,0)
 ;checks if there is data for OP* segments and 
"RTN","IBCEF72",74,0)
 ;then populates PROV COB SEQ
"RTN","IBCEF72",75,0)
 ;Input:
"RTN","IBCEF72",76,0)
 ;IBXIEN - ien in #399
"RTN","IBCEF72",77,0)
 ;IBSAVE - "in" array (i.e. IBXSAVE)
"RTN","IBCEF72",78,0)
 ;IBDATA - "out" array (i.e. IBXDATA)
"RTN","IBCEF72",79,0)
 ;IBFUNC - FUNCTION from #399 (1-refering, 2 -operating, etc)
"RTN","IBCEF72",80,0)
 ;IBSEGM - segment record ID, optional
"RTN","IBCEF72",81,0)
 ;Output:
"RTN","IBCEF72",82,0)
 ; IBDATA with formatted output
"RTN","IBCEF72",83,0)
PROVSEQ(IBXIEN,IBSAVE,IBDATA,IBFUNC,IBSEGM) ;
"RTN","IBCEF72",84,0)
 N IB1,IB2,IBINS,IBFL
"RTN","IBCEF72",85,0)
 S IBFL=$S(IBFUNC=3!(IBFUNC=4):1,1:0)
"RTN","IBCEF72",86,0)
 F IB1=1,2 D
"RTN","IBCEF72",87,0)
 . Q:'$$ISINSUR^IBCEF71($G(IBSAVE("PROVINF",IBXIEN,"O",IB1)),IBXIEN)  ;don't create anything if there is no such insurance
"RTN","IBCEF72",88,0)
 . I IBFL S IBFUNC=$S($O(IBSAVE("PROVINF",IBXIEN,"O",IB1,3,0)):3,1:4)
"RTN","IBCEF72",89,0)
 . S:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) IBDATA(IB1)=$G(IBSAVE("PROVINF",IBXIEN,"O",IB1))
"RTN","IBCEF72",90,0)
 . I $G(IBSEGM)'="" D:$O(IBSAVE("PROVINF",IBXIEN,"O",IB1,IBFUNC,0)) ID^IBCEF2(IB1,IBSEGM)
"RTN","IBCEF72",91,0)
 Q
"RTN","IBCEF72",92,0)
 ;
"RTN","IBCEF72",93,0)
OUTPRVID(IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",94,0)
 ; into IBXSAVE array
"RTN","IBCEF72",95,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",96,0)
 N Z,IBXDATA,IBPERSON,TAG
"RTN","IBCEF72",97,0)
 ;WCJ;11/1/2005 Extract the first 3 chars of Z instead.
"RTN","IBCEF72",98,0)
 S Z=$E($$PSPRV^IBCEF7(IBXIEN),1,3),IBPERSON=""
"RTN","IBCEF72",99,0)
 ;EJK 8/23/05 IB*320 - CHANGED Z=101 TO Z=1010. Z WILL ALWAYS BE A 4 DIGIT #. 
"RTN","IBCEF72",100,0)
 ; WCJ 11/1/2005 ; Removed EJK's change and added above change
"RTN","IBCEF72",101,0)
 I Z=111!(Z=101) S TAG=$S(Z=101:"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO") D F^IBCEF("N-ALL "_TAG) S IBPERSON=$S('$E(Z,2):2,1:1)
"RTN","IBCEF72",102,0)
 Q IBPERSON
"RTN","IBCEF72",103,0)
 ;
"RTN","IBCEF72",104,0)
OUTPRV(IBREC,IBXIEN,IBXSAVE) ; Extract the outside provider or facility ids
"RTN","IBCEF72",105,0)
 ; into IBXSAVE array
"RTN","IBCEF72",106,0)
 ; Function returns 1 if person or 2 if facility ids or "" if neither
"RTN","IBCEF72",107,0)
 ; IBREC = the record whose ids should be returned
"RTN","IBCEF72",108,0)
 N IBPERSON,IBFRM,IBTYPE,IBFAC
"RTN","IBCEF72",109,0)
 I IBREC="SUB1"!(IBREC="OP6") D
"RTN","IBCEF72",110,0)
 . K IBXSAVE("PROVINF",IBXIEN),IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",111,0)
 . S IBPERSON=$$OUTPRVID(IBXIEN,.IBXSAVE),IBFAC=$S(IBPERSON=1:0,1:1)
"RTN","IBCEF72",112,0)
 E  D
"RTN","IBCEF72",113,0)
 . K IBXSAVE("PROVINF_FAC",IBXIEN)
"RTN","IBCEF72",114,0)
 . D F^IBCEF("N-ALL OUTSIDE FAC PROVIDER INF")
"RTN","IBCEF72",115,0)
 . S IBPERSON=2,IBFAC=1
"RTN","IBCEF72",116,0)
 S IBFRM=$$FT^IBCEF(IBXIEN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEF72",117,0)
 S IBTYPE=$S(IBREC["SUB":"C",1:"O")
"RTN","IBCEF72",118,0)
 D CHCKSUB^IBCEF73(IBFRM,IBREC,IBFAC,IBTYPE,.IBXSAVE)
"RTN","IBCEF72",119,0)
 Q IBPERSON
"RTN","IBCEF72",120,0)
 ;
"RTN","IBCEF72",121,0)
 ;get IENs in file #36 for other insurances
"RTN","IBCEF72",122,0)
OTHINS(IB399,IBRES) ;
"RTN","IBCEF72",123,0)
 N IBFRMTYP,Z,Z1,Z2,Z4
"RTN","IBCEF72",124,0)
 S Z=$$COBN^IBCEF(IB399),Z0=0
"RTN","IBCEF72",125,0)
 F Z1=1:1:3 I Z1'=Z,$D(^DGCR(399,IB399,"I"_Z1)) S Z0=Z0+1,IBRES(Z0)=+$G(^DGCR(399,IB399,"I"_Z1))
"RTN","IBCEF72",126,0)
 Q
"RTN","IBCEF72",127,0)
 ;get other insurance EDI ID NUMBERs
"RTN","IBCEF72",128,0)
OTHINSID(IB399,IBRES) ;insurance EDI 
"RTN","IBCEF72",129,0)
 N IBFRMTYP,IBZ,Z0,Z1,Z4
"RTN","IBCEF72",130,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF72",131,0)
 S Z4=$S(IBFRMTYP=1:4,1:2) ;UB2 - piece4,HCFA or BOTH -piece 2
"RTN","IBCEF72",132,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",133,0)
 S Z1=0
"RTN","IBCEF72",134,0)
 F Z0=1:1:2 I $G(IBZ(Z0)) S IBRES(Z0)=$S($$MCRWNR^IBEFUNC(+IBZ(Z0)):$S(IBFRMTYP=1:"12M61",1:"SMTX1"),1:$P($G(^DIC(36,+IBZ(Z0),3)),U,Z4))
"RTN","IBCEF72",135,0)
 Q
"RTN","IBCEF72",136,0)
 ;
"RTN","IBCEF72",137,0)
 ;get other insurance addresses
"RTN","IBCEF72",138,0)
OTHINADR(IB399,IBRES,IBADDFLD) ;insurance EDI
"RTN","IBCEF72",139,0)
 N IBZ,Z0,Z1,Z4
"RTN","IBCEF72",140,0)
 D OTHINS(IB399,.IBZ)
"RTN","IBCEF72",141,0)
 S Z1=0
"RTN","IBCEF72",142,0)
 I IBADDFLD=18 D  Q
"RTN","IBCEF72",143,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",144,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",145,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",146,0)
 I IBADDFLD=18.9 D  Q
"RTN","IBCEF72",147,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",148,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,1)
"RTN","IBCEF72",149,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",150,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,3) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",151,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",152,0)
 . . S Z4=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",153,0)
 . . S Z4=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6) S:Z4'="" IBRES(Z0)=IBRES(Z0)_", "_Z4
"RTN","IBCEF72",154,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,157)
"RTN","IBCEF72",155,0)
 I IBADDFLD=19 D  Q
"RTN","IBCEF72",156,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",157,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,2)
"RTN","IBCEF72",158,0)
 . . S IBRES(Z0)=IBRES(Z0)_" "_$P($G(^DIC(36,+IBZ(Z0),.11)),U,3)
"RTN","IBCEF72",159,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,55)
"RTN","IBCEF72",160,0)
 I IBADDFLD=20 D  Q
"RTN","IBCEF72",161,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",162,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,4)
"RTN","IBCEF72",163,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,30)
"RTN","IBCEF72",164,0)
 I IBADDFLD=21 D  Q
"RTN","IBCEF72",165,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",166,0)
 . . S IBRES(Z0)=$P($G(^DIC(5,+$P($G(^DIC(36,+IBZ(Z0),.11)),U,5),0)),U,2)
"RTN","IBCEF72",167,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,2)
"RTN","IBCEF72",168,0)
 I IBADDFLD=22 D  Q
"RTN","IBCEF72",169,0)
 . F Z0=1:1:2 I $G(IBZ(Z0)) D
"RTN","IBCEF72",170,0)
 . . S IBRES(Z0)=$P($G(^DIC(36,+IBZ(Z0),.11)),U,6)
"RTN","IBCEF72",171,0)
 . . S IBRES(Z0)=$E(IBRES(Z0),1,15)
"RTN","IBCEF72",172,0)
 Q
"RTN","IBCEF72",173,0)
 ;
"RTN","IBCEF72",174,0)
SFIDQ(IBXIEN,IBXSAVE,IBXDATA) ; Find the service facility id qualifier for
"RTN","IBCEF72",175,0)
 ; 837 record SUB2-5
"RTN","IBCEF72",176,0)
 ;IBXIEN = ien of 399
"RTN","IBCEF72",177,0)
 ;Pass by reference: IBXSAVE (input/output)  IBXDATA (output)
"RTN","IBCEF72",178,0)
 N B,Z
"RTN","IBCEF72",179,0)
 K IBXSAVE("NVID")
"RTN","IBCEF72",180,0)
 D  ; protect IBXDATA
"RTN","IBCEF72",181,0)
 . N IBXDATA
"RTN","IBCEF72",182,0)
 . D F^IBCEF("N-RENDERING INSTITUTION")
"RTN","IBCEF72",183,0)
 . S:IBXDATA'="" IBXSAVE("IBFAC")=IBXDATA
"RTN","IBCEF72",184,0)
 I $P($G(IBXSAVE("IBFAC")),U,2)'=1 K IBXDATA Q
"RTN","IBCEF72",185,0)
 S Z=$$PSPRV^IBCEF7(IBXIEN)
"RTN","IBCEF72",186,0)
 ;WCJ 11/04/2005 If a Non-VA facility 
"RTN","IBCEF72",187,0)
 I $E(Z) D
"RTN","IBCEF72",188,0)
 . S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,$E(Z),1)
"RTN","IBCEF72",189,0)
 .; S IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1)
"RTN","IBCEF72",190,0)
 . S IBXDATA=$P("^34^24",U,$P(IBXSAVE("NVID"),U,2)+1)
"RTN","IBCEF72",191,0)
 ;S Z=$$PSPRV^IBCEF7(IBXIEN),IBXSAVE("NVID")=$$NONVAID^IBCEF72(IBXIEN,.B,'$E(Z,2),1),IBXDATA=24
"RTN","IBCEF72",192,0)
 Q
"RTN","IBCEF72",193,0)
 ;
"RTN","IBCEF72",194,0)
OTHP36(IBXIEN,IBZOUT)   ;
"RTN","IBCEF72",195,0)
 N Z,Z0,Z1,IBZ
"RTN","IBCEF72",196,0)
 D F^IBCEF("N-ALL INSURANCE CO 837 ID","IBZ")
"RTN","IBCEF72",197,0)
 F Z=1,2,3 S IBZOUT(Z)=+$$POLICY^IBCEF(IBXIEN,1,$E("PST",Z))
"RTN","IBCEF72",198,0)
 Q
"RTN","IBCEF72",199,0)
 ;
"RTN","IBCEF72",200,0)
 ;---------SORT-----------
"RTN","IBCEF72",201,0)
 ;IBPRNUM - seq #
"RTN","IBCEF72",202,0)
 ;IBPRTYP - type of provider (use FUNCTION value from file 399, fld 222)
"RTN","IBCEF72",203,0)
 ;IB399 = ien file 399
"RTN","IBCEF72",204,0)
 ;IBSRC,IBDST - source,destination arrays
"RTN","IBCEF72",205,0)
 ;IBN - starting #
"RTN","IBCEF72",206,0)
 ;Output:
"RTN","IBCEF72",207,0)
 ; IBDST(1-primary/2-secondary provider,Provider type(FUNCTION),N)=
"RTN","IBCEF72",208,0)
 ; =provider/VARIABLEPTR^Insurance PTR #36 or NONE^ID type^ID^Form type^Care type^state ptr #5 for state license #
"RTN","IBCEF72",209,0)
 ; where N is numeration (1 for ID1, 2 for ID2, etc)
"RTN","IBCEF72",210,0)
GETSSN(IBPTR)   ;look for SSN in #200 first and if not found then look at #355.9
"RTN","IBCEF72",211,0)
 ;if in file #200
"RTN","IBCEF72",212,0)
 I $P(IBPTR,";",2)="VA(200," Q $$SSN200^IBCEF73(IBPTR)
"RTN","IBCEF72",213,0)
 ;if in 355.93 then use 355.9
"RTN","IBCEF72",214,0)
 Q $$SSN3559^IBCEF73(IBPTR)
"RTN","IBCEF72",215,0)
 ;--
"RTN","IBCEF72",216,0)
 ;SSN3559
"RTN","IBCEF72",217,0)
 ;Find SSN from 355.9
"RTN","IBCEF72",218,0)
 ;Input:
"RTN","IBCEF72",219,0)
 ; Variable pointer to ^VA(200 or ^IBA(355.93
"RTN","IBCEF72",220,0)
 ;Output:
"RTN","IBCEF72",221,0)
 ; SSN or null
"RTN","IBCEF72",222,0)
 ;
"RTN","IBCEF72",223,0)
PADNDC(Z) ;PAD LEADING ZERO'S INTO A NON 5-4-2 FORMAT NDC NUMBER
"RTN","IBCEF72",224,0)
 ;Z IS ITERATION, ONLY PAD CURRENT NDC NUMBER
"RTN","IBCEF72",225,0)
 N NDC
"RTN","IBCEF72",226,0)
 S NDC=$P(IBXSAVE("OUTPT",Z,"RX"),"^",3)
"RTN","IBCEF72",227,0)
 Q:$L(NDC)=13
"RTN","IBCEF72",228,0)
 I $L(NDC)=14 D  Q
"RTN","IBCEF72",229,0)
 . S $P(NDC,"-",1)=$E($P(NDC,"-",1),2,$L($P(NDC,"-",1)))
"RTN","IBCEF72",230,0)
 . S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",231,0)
 I $L($P(NDC,"-",1))'=5 S $P(NDC,"-",1)="0"_$P(NDC,"-",1)
"RTN","IBCEF72",232,0)
 I $L($P(NDC,"-",2))'=4 S $P(NDC,"-",2)="0"_$P(NDC,"-",2)
"RTN","IBCEF72",233,0)
 I $L($P(NDC,"-",3))'=2 S $P(NDC,"-",3)="0"_$P(NDC,"-",3)
"RTN","IBCEF72",234,0)
 S $P(IBXSAVE("OUTPT",Z,"RX"),"^",3)=NDC
"RTN","IBCEF72",235,0)
 Q
"RTN","IBCEF72",236,0)
 ;
"RTN","IBCEF73")
0^60^B54477454^B55011921
"RTN","IBCEF73",1,0)
IBCEF73 ;WOIFO/SS - FORMATTER AND EXTRACTOR SPECIFIC BILL FUNCTIONS ;8/6/03 10:56am
"RTN","IBCEF73",2,0)
 ;;2.0;INTEGRATED BILLING;**232,296,320**;21-MAR-94
"RTN","IBCEF73",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF73",4,0)
 ;
"RTN","IBCEF73",5,0)
 ;check qualifier
"RTN","IBCEF73",6,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",7,0)
 ;IBPROV - function in #399 (1-referring, 2-operating,etc)
"RTN","IBCEF73",8,0)
 ;IBTYPE - "C"-current insurance, "O"-other insurance
"RTN","IBCEF73",9,0)
 ;IBVAL - value to check
"RTN","IBCEF73",10,0)
CHCKSEC(IBFRM,IBPROV,IBTYPE,IBVAL) ;
"RTN","IBCEF73",11,0)
 I IBFRM=0 Q:$$CHSEC(1,IBPROV,IBTYPE,IBVAL) 1  Q $$CHSEC(2,IBPROV,IBTYPE,IBVAL)
"RTN","IBCEF73",12,0)
 Q $$CHSEC(IBFRM,IBPROV,IBTYPE,IBVAL)
"RTN","IBCEF73",13,0)
 ;
"RTN","IBCEF73",14,0)
CHSEC(IBFRM,IBPROV,IBTYPE,IBVAL) ;
"RTN","IBCEF73",15,0)
 N IBSTR S IBSTR=""
"RTN","IBCEF73",16,0)
 ;referring
"RTN","IBCEF73",17,0)
 I IBPROV=1 S IBSTR=$S(IBTYPE="C":$$OPR5(IBFRM),IBTYPE="O":$$OP4(IBFRM),1:"")
"RTN","IBCEF73",18,0)
 ;operating
"RTN","IBCEF73",19,0)
 I IBPROV=2 S IBSTR=$S(IBTYPE="C":$$OPR3(IBFRM),IBTYPE="O":$$OP2(IBFRM),1:"")
"RTN","IBCEF73",20,0)
 ;rendering
"RTN","IBCEF73",21,0)
 I IBPROV=3 S IBSTR=$S(IBTYPE="C":$$OPR2(IBFRM),IBTYPE="O":$$OP1(IBFRM),1:"")
"RTN","IBCEF73",22,0)
 ;attending
"RTN","IBCEF73",23,0)
 I IBPROV=4 S IBSTR=$S(IBTYPE="C":$$OPR2(IBFRM),IBTYPE="O":$$OP1(IBFRM),1:"")
"RTN","IBCEF73",24,0)
 ;supervising
"RTN","IBCEF73",25,0)
 I IBPROV=5 S IBSTR=$S(IBTYPE="C":$$OPR8(IBFRM),IBTYPE="O":$$OP8(IBFRM),1:"")
"RTN","IBCEF73",26,0)
 ;other
"RTN","IBCEF73",27,0)
 I IBPROV=9 S IBSTR=$S(IBTYPE="C":$$OPR4(IBFRM),IBTYPE="O":$$OP9(IBFRM),1:"")
"RTN","IBCEF73",28,0)
 Q:IBPROV=0!(IBSTR="") 1  ;if "" or facility id always return 1
"RTN","IBCEF73",29,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",30,0)
 ;
"RTN","IBCEF73",31,0)
 ;Filter invalid qualifier entries for records SUB1,SUB2,OP6,OP7,OP3
"RTN","IBCEF73",32,0)
 ; Rebuild the IBXSAVE("PROVINF" or IBXSAVE("PROVINF_FAC" array with
"RTN","IBCEF73",33,0)
 ;  only ids that have valid qualifiers
"RTN","IBCEF73",34,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",35,0)
 ;IBREC record ID whose ids are being filtered (SUB1,SUB2,etc)
"RTN","IBCEF73",36,0)
 ;IBFAC - 1 if facility check, 0 if attending/rendering check
"RTN","IBCEF73",37,0)
 ;IBTYPE - "C"-current insurance, "O"-other insurance
"RTN","IBCEF73",38,0)
 ;IBXSAVE - the array of provider ids extracted, returned filtered -
"RTN","IBCEF73",39,0)
 ;   passed by reference
"RTN","IBCEF73",40,0)
CHCKSUB(IBFRM,IBREC,IBFAC,IBTYPE,IBXSAVE) ;
"RTN","IBCEF73",41,0)
 N Z,Z0,Z1,Z2,CT,IBSAVE
"RTN","IBCEF73",42,0)
 S Z="PROVINF"_$P("^_FAC",U,$G(IBFAC)+1)
"RTN","IBCEF73",43,0)
 I '$G(IBXSAVE(Z,IBXIEN)) D
"RTN","IBCEF73",44,0)
 . D F^IBCEF("N-ALL "_$S($G(IBFAC):"OUTSIDE FAC PROVIDER INF",1:"CUR/OTH PROVIDER INFO"))
"RTN","IBCEF73",45,0)
 M IBSAVE(Z,IBXIEN,IBTYPE)=IBXSAVE(Z,IBXIEN,IBTYPE) K IBXSAVE(Z,IBXIEN,IBTYPE)
"RTN","IBCEF73",46,0)
 S Z0=0 F  S Z0=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0)) Q:'Z0  S Z1="" F  S Z1=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1)) Q:Z1=""  S (Z2,CT)=0 F  S Z2=$O(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)) Q:'Z2  D
"RTN","IBCEF73",47,0)
 . N IBVAL
"RTN","IBCEF73",48,0)
 . S IBVAL=$P(IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2),U,3)
"RTN","IBCEF73",49,0)
 . I IBFRM=0 D  Q
"RTN","IBCEF73",50,0)
 .. I $S($$CHSUB(1,IBREC,IBVAL):1,1:$$CHSUB(2,IBPROV,IBTYPE,IBVAL)) D
"RTN","IBCEF73",51,0)
 ... S CT=CT+1,IBXSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,CT)=IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)
"RTN","IBCEF73",52,0)
 ... I $G(IBXSAVE(Z,IBXIEN,IBTYPE,Z0))="",$G(IBSAVE(Z,IBXIEN,IBTYPE,Z0))'="" S IBXSAVE(Z,IBXIEN,IBTYPE,Z0)=IBSAVE(Z,IBXIEN,IBTYPE,Z0)
"RTN","IBCEF73",53,0)
 . I $$CHSUB(IBFRM,IBREC,IBVAL) D
"RTN","IBCEF73",54,0)
 .. S CT=CT+1,IBXSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,CT)=IBSAVE(Z,IBXIEN,IBTYPE,Z0,Z1,Z2)
"RTN","IBCEF73",55,0)
 .. I $G(IBXSAVE(Z,IBXIEN,IBTYPE,Z0))="",$G(IBSAVE(Z,IBXIEN,IBTYPE,Z0))'="" S IBXSAVE(Z,IBXIEN,IBTYPE,Z0)=IBSAVE(Z,IBXIEN,IBTYPE,Z0)
"RTN","IBCEF73",56,0)
 Q
"RTN","IBCEF73",57,0)
 ;
"RTN","IBCEF73",58,0)
 ; Check if valid qualifier
"RTN","IBCEF73",59,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",60,0)
 ;IBREC record ID whose ids are being filtered (SUB1,SUB2,etc)
"RTN","IBCEF73",61,0)
 ;IBVAL - value to check
"RTN","IBCEF73",62,0)
CHSUB(IBFRM,IBREC,IBVAL) ;
"RTN","IBCEF73",63,0)
 N IBSTR
"RTN","IBCEF73",64,0)
 I IBREC="SUB1" S IBSTR=$$SUB1(IBFRM)
"RTN","IBCEF73",65,0)
 I IBREC="SUB2" S IBSTR=$$SUB2(IBFRM)
"RTN","IBCEF73",66,0)
 I IBREC="OP7" S IBSTR=$$OP7(IBFRM)
"RTN","IBCEF73",67,0)
 I IBREC="OP3" S IBSTR=$$OP3(IBFRM)
"RTN","IBCEF73",68,0)
 I IBREC="OP6" S IBSTR=$$OP6(IBFRM)
"RTN","IBCEF73",69,0)
 Q:$G(IBSTR)="" 1  ;if "" always return 1
"RTN","IBCEF73",70,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",71,0)
 ;
"RTN","IBCEF73",72,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",73,0)
OPR2(IBFRM) ;
"RTN","IBCEF73",74,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",75,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",76,0)
 Q ""
"RTN","IBCEF73",77,0)
 ;
"RTN","IBCEF73",78,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",79,0)
OP1(IBFRM) ;
"RTN","IBCEF73",80,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",81,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^LU^N5^"
"RTN","IBCEF73",82,0)
 Q ""
"RTN","IBCEF73",83,0)
 ;
"RTN","IBCEF73",84,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",85,0)
OPR3(IBFRM) ;
"RTN","IBCEF73",86,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",87,0)
 Q ""
"RTN","IBCEF73",88,0)
 ;
"RTN","IBCEF73",89,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",90,0)
OP2(IBFRM) ;
"RTN","IBCEF73",91,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",92,0)
 Q ""
"RTN","IBCEF73",93,0)
 ;
"RTN","IBCEF73",94,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",95,0)
SUB1(IBFRM) ;
"RTN","IBCEF73",96,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",97,0)
 Q:IBFRM=2 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^U3^SY^X5^"
"RTN","IBCEF73",98,0)
 Q ""
"RTN","IBCEF73",99,0)
 ;
"RTN","IBCEF73",100,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",101,0)
OPR4(IBFRM) ;
"RTN","IBCEF73",102,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",103,0)
 Q ""
"RTN","IBCEF73",104,0)
 ;
"RTN","IBCEF73",105,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",106,0)
OP9(IBFRM) ;
"RTN","IBCEF73",107,0)
 Q:IBFRM=1 "^1A^1B^1C^1D^1G^1H^EI^G2^LU^N5^"
"RTN","IBCEF73",108,0)
 Q ""
"RTN","IBCEF73",109,0)
 ;
"RTN","IBCEF73",110,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",111,0)
SUB2(IBFRM) ;
"RTN","IBCEF73",112,0)
 Q:IBFRM=1 "^0B^1A^1B^1C^1G^1H^1J^EI^FH^G2^G5^LU^N5^X5^TJ^B3^BQ^SY^U3^"
"RTN","IBCEF73",113,0)
 Q:IBFRM=2 "^0B^X4^1A^1B^1C^1G^1H^G2^LU^X5^TJ^B3^BQ^SY^U3^"
"RTN","IBCEF73",114,0)
 Q ""
"RTN","IBCEF73",115,0)
 ;
"RTN","IBCEF73",116,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",117,0)
OP3(IBFRM) ;
"RTN","IBCEF73",118,0)
 Q:IBFRM=1 "^1B^1C^EI^G2^LU^N5^"
"RTN","IBCEF73",119,0)
 Q ""
"RTN","IBCEF73",120,0)
 ;
"RTN","IBCEF73",121,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",122,0)
OPR5(IBFRM) ;
"RTN","IBCEF73",123,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",124,0)
 Q ""
"RTN","IBCEF73",125,0)
 ;
"RTN","IBCEF73",126,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",127,0)
OPR8(IBFRM) ;
"RTN","IBCEF73",128,0)
 Q:IBFRM=2 "^0B^1B^1C^1D^1G^1H^EI^G2^LU^N5^SY^X5^"
"RTN","IBCEF73",129,0)
 Q ""
"RTN","IBCEF73",130,0)
 ;
"RTN","IBCEF73",131,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",132,0)
OP4(IBFRM) ;
"RTN","IBCEF73",133,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^LU^N5^"
"RTN","IBCEF73",134,0)
 Q ""
"RTN","IBCEF73",135,0)
 ;
"RTN","IBCEF73",136,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",137,0)
OP8(IBFRM) ;
"RTN","IBCEF73",138,0)
 Q:IBFRM=2 "^1B^1C^1D^EI^G2^N5^"
"RTN","IBCEF73",139,0)
 Q ""
"RTN","IBCEF73",140,0)
 ;
"RTN","IBCEF73",141,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",142,0)
OP6(IBFRM) ;
"RTN","IBCEF73",143,0)
 Q:IBFRM=2 "^1A^1B^1C^G2^LU^N5^"
"RTN","IBCEF73",144,0)
 Q ""
"RTN","IBCEF73",145,0)
 ;
"RTN","IBCEF73",146,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",147,0)
OP7(IBFRM) ;
"RTN","IBCEF73",148,0)
 Q:IBFRM=2 "^1A^1B^1C^G2^LU^N5^"
"RTN","IBCEF73",149,0)
 Q ""
"RTN","IBCEF73",150,0)
 ;
"RTN","IBCEF73",151,0)
 ;check qualifier for PRV1
"RTN","IBCEF73",152,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",153,0)
 ;IBVAL - value to check
"RTN","IBCEF73",154,0)
CHCKPRV1(IBFRM,IBVAL) ;
"RTN","IBCEF73",155,0)
 I IBFRM=0 Q:$$CHPRV1(1,IBVAL) 1  Q $$CHPRV1(2,IBVAL)
"RTN","IBCEF73",156,0)
 Q $$CHPRV1(IBFRM,IBVAL)
"RTN","IBCEF73",157,0)
 ;IBFRM 0-both, 1=UB92,2=HCFA 1500
"RTN","IBCEF73",158,0)
CHPRV1(IBFRM,IBVAL) ;
"RTN","IBCEF73",159,0)
 N IBSTR S IBSTR=""
"RTN","IBCEF73",160,0)
 S IBSTR=$$PRV1(IBFRM)
"RTN","IBCEF73",161,0)
 Q:IBSTR="" 1
"RTN","IBCEF73",162,0)
 Q IBSTR[("^"_IBVAL_"^")
"RTN","IBCEF73",163,0)
 ;
"RTN","IBCEF73",164,0)
PRV1(IBFRM) ;
"RTN","IBCEF73",165,0)
 Q:IBFRM=1 "^1A^1C^1D^1G^1H^1J^B3^BQ^EI^FH^G2^G5^LU^SY^X5^"
"RTN","IBCEF73",166,0)
 Q:IBFRM=2 "^1B^1C^1D^1G^1H^1J^B3^BQ^EI^FH^G2^G5^LU^U3^SY^X5^"
"RTN","IBCEF73",167,0)
 Q ""
"RTN","IBCEF73",168,0)
 ;
"RTN","IBCEF73",169,0)
PTSELF ;This tag is for the CI2 segment. If the IBXSAVE("IADR") is empty
"RTN","IBCEF73",170,0)
 ;check to see if the relationship to pt is 18 (self) if so pull info
"RTN","IBCEF73",171,0)
 ;from PT1 calls
"RTN","IBCEF73",172,0)
 ;See if relationship to insured is 18 if not or if "" quit
"RTN","IBCEF73",173,0)
 N IBZ
"RTN","IBCEF73",174,0)
 D F^IBCEF("N-ALL INSURED PT RELATION","IBZ",,IBXIEN)
"RTN","IBCEF73",175,0)
 S IBZ=$G(IBZ(+$$COBN^IBCEF(IBXIEN)))
"RTN","IBCEF73",176,0)
 S IBZ=$$RELATION^IBCEFG1(IBZ)
"RTN","IBCEF73",177,0)
 I IBZ'="18" S IBXDATA="" Q
"RTN","IBCEF73",178,0)
 N IBZ D F^IBCEF("N-PATIENT STREET ADDRESS 1-3","IBZ",,IBXIEN)
"RTN","IBCEF73",179,0)
 S IBXDATA="18"
"RTN","IBCEF73",180,0)
 Q
"RTN","IBCEF73",181,0)
 ;
"RTN","IBCEF73",182,0)
NOPUNCT(X,SPACE,EXC) ; Strip punctuation from data in X
"RTN","IBCEF73",183,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF73",184,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF73",185,0)
 ;
"RTN","IBCEF73",186,0)
 N PUNCT,Z
"RTN","IBCEF73",187,0)
 S PUNCT=".,-+(){}[]\/><:;?|=_*&%$#@!~`^'"""
"RTN","IBCEF73",188,0)
 I $G(SPACE) S PUNCT=PUNCT_" "
"RTN","IBCEF73",189,0)
 I $G(EXC)'="" S PUNCT=$TR(PUNCT,EXC)
"RTN","IBCEF73",190,0)
 N L S L=""
"RTN","IBCEF73",191,0)
 F  S L=$O(X(L)) Q:L=""  D
"RTN","IBCEF73",192,0)
 . S X(L)=$TR(X(L),PUNCT)
"RTN","IBCEF73",193,0)
 I $G(X)'="" D
"RTN","IBCEF73",194,0)
 . S X=$TR(X,PUNCT)
"RTN","IBCEF73",195,0)
 Q
"RTN","IBCEF73",196,0)
 ;
"RTN","IBCEF73",197,0)
PROVID(IBXIEN) ;This modified version of prov id call is to acquire the SSN
"RTN","IBCEF73",198,0)
 ;first, if the ssn is not available then we need to get the tax id.
"RTN","IBCEF73",199,0)
 ;we also need to provide the modifier for which value it is
"RTN","IBCEF73",200,0)
 Q:+$G(IBXIEN)=0 ""
"RTN","IBCEF73",201,0)
 S IBXSAVE("ID")=""
"RTN","IBCEF73",202,0)
 S IBXSAVE=""
"RTN","IBCEF73",203,0)
 S IBXSAVE=$$PROVSSN^IBCEF7(IBXIEN)
"RTN","IBCEF73",204,0)
 N I
"RTN","IBCEF73",205,0)
 F I=1:1:9 D
"RTN","IBCEF73",206,0)
 . I $P(IBXSAVE,"^",I)]"" S $P(IBXSAVE("ID"),U,I)="34"
"RTN","IBCEF73",207,0)
 ;If no ibxdata go look in 355.97 for 24 
"RTN","IBCEF73",208,0)
 N IBRETVAL S IBRETVAL=""
"RTN","IBCEF73",209,0)
 N IBPTR,IBFT
"RTN","IBCEF73",210,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73",211,0)
 . Q:$P(IBXSAVE,U,IBFT)]""
"RTN","IBCEF73",212,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBXIEN,IBFT)
"RTN","IBCEF73",213,0)
 . S $P(IBRETVAL,"^",IBFT)=$$TAX3559(IBPTR)
"RTN","IBCEF73",214,0)
 . I $P(IBRETVAL,U,IBFT)]"" D
"RTN","IBCEF73",215,0)
 . . S $P(IBXSAVE,U,IBFT)=$P(IBRETVAL,U,IBFT)
"RTN","IBCEF73",216,0)
 . . S $P(IBXSAVE("ID"),U,IBFT)="24"
"RTN","IBCEF73",217,0)
 Q IBXSAVE
"RTN","IBCEF73",218,0)
 ;
"RTN","IBCEF73",219,0)
TAX3559(IBPROV) ;
"RTN","IBCEF73",220,0)
 I $P(IBPROV,";",2)'["IBA(355.9" Q ""
"RTN","IBCEF73",221,0)
 N IB2,IB3559,IBIDTYP,IBID,IBQFL
"RTN","IBCEF73",222,0)
 S (IB3559,IBQFL)=0
"RTN","IBCEF73",223,0)
 S IBID=""
"RTN","IBCEF73",224,0)
 Q:+$G(IBPROV)=0 ""
"RTN","IBCEF73",225,0)
 F IB2=1:1 S IB3559=$O(^IBA(355.9,"B",IBPROV,IB3559)) Q:IB3559=""!IBQFL  D
"RTN","IBCEF73",226,0)
 . S IBIDTYP=+$P($G(^IBA(355.9,IB3559,0)),"^",6) ;provider ID type, ptr to #355.97
"RTN","IBCEF73",227,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF73",228,0)
 . S:IBIDTYP=24 IBID=$P($G(^IBA(355.9,IB3559,0)),"^",7),IBQFL=1
"RTN","IBCEF73",229,0)
 Q $$NOPUNCT^IBCEF(IBID)
"RTN","IBCEF73",230,0)
 ;
"RTN","IBCEF73",231,0)
 ;IBFULL-full name
"RTN","IBCEF73",232,0)
 ;IBEL - Name element : "FAMILY","GIVEN","MIDDLE","SUFFIX"
"RTN","IBCEF73",233,0)
 ;
"RTN","IBCEF73",234,0)
SSN200(IBPTR)   ;
"RTN","IBCEF73",235,0)
 I $P(IBPTR,";",2)'="VA(200," Q ""
"RTN","IBCEF73",236,0)
 Q $$NOPUNCT^IBCEF($$GET1^DIQ(200,+$P(IBPTR,";")_",",9))
"RTN","IBCEF73",237,0)
 ;
"RTN","IBCEF73",238,0)
 ;Input:
"RTN","IBCEF73",239,0)
 ; IBIEN399 - ien in #399
"RTN","IBCEF73",240,0)
 ;Output:
"RTN","IBCEF73",241,0)
 ; returns a string with "^" delimiters that contains SSNs (if any)
"RTN","IBCEF73",242,0)
 ; in the position that equal to FUNCTION number
"RTN","IBCEF73",243,0)
 ; i.e. if RENDERING function # is 3 then SSN will be
"RTN","IBCEF73",244,0)
 ; in $P(return value,"^",3), etc.
"RTN","IBCEF73",245,0)
 ;
"RTN","IBCEF73",246,0)
SSN3559(IBPROV) ;
"RTN","IBCEF73",247,0)
 N IB2,IB3559,IBIDTYP,IBID,IBQFL
"RTN","IBCEF73",248,0)
 S (IB3559,IBQFL)=0
"RTN","IBCEF73",249,0)
 S IBID=""
"RTN","IBCEF73",250,0)
 Q:+$G(IBPROV)=0 ""
"RTN","IBCEF73",251,0)
 F IB2=1:1 S IB3559=$O(^IBA(355.9,"B",IBPROV,IB3559)) Q:IB3559=""!IBQFL  D
"RTN","IBCEF73",252,0)
 . S IBIDTYP=+$P($G(^IBA(355.9,IB3559,0)),"^",6)
"RTN","IBCEF73",253,0)
 . S IBIDTYP=$P($G(^IBE(355.97,IBIDTYP,0)),"^",3)
"RTN","IBCEF73",254,0)
 . S:IBIDTYP="SY" IBID=$P($G(^IBA(355.9,IB3559,0)),"^",7),IBQFL=1
"RTN","IBCEF73",255,0)
 Q $$NOPUNCT^IBCEF(IBID)
"RTN","IBCEF73",256,0)
 ;
"RTN","IBCEF73",257,0)
 ;IBIDTYP-provider ID type, ptr to #355.97
"RTN","IBCEF73",258,0)
 ;IBFULL-full name
"RTN","IBCEF73",259,0)
 ;IBEL - Name element : "FAMILY","GIVEN","MIDDLE","SUFFIX"
"RTN","IBCEF73",260,0)
 ;
"RTN","IBCEF73",261,0)
PRV1FMT(P) ;FORMAT CODE FOR PRV1 SEGMENT THAT WON'T FIT ON LINE
"RTN","IBCEF73",262,0)
 K IBXDATA
"RTN","IBCEF73",263,0)
 S:'$D(IBXSAVE("BIL-PROV-SEC")) IBXSAVE("BIL-PROV-SEC")=$$PRV1^IBCEF7(IBXIEN)
"RTN","IBCEF73",264,0)
 S IBXDATA=$P($G(IBXSAVE("BIL-PROV-SEC")),"^",P)
"RTN","IBCEF73",265,0)
 I $G(IBXDATA)'="" S IBXDATA=$$NOPUNCT^IBCEF(IBXDATA,1)
"RTN","IBCEF73",266,0)
 Q
"RTN","IBCEF73",267,0)
 ;
"RTN","IBCEF74")
0^65^B56964899^B71820469
"RTN","IBCEF74",1,0)
IBCEF74 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF74",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320**;21-MAR-94
"RTN","IBCEF74",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74",4,0)
 ;
"RTN","IBCEF74",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF74",6,0)
 D SORT^IBCEF77($G(IBPRNUM),$G(IBPRTYP),$G(IB399),.IBSRC,.IBDST,$G(IBN),$G(IBEXC),$G(IBSEQ),$G(IBLIMIT))
"RTN","IBCEF74",7,0)
 Q
"RTN","IBCEF74",8,0)
 ;
"RTN","IBCEF74",9,0)
 ;-- PROVINF --
"RTN","IBCEF74",10,0)
 ;Create array with prov info
"RTN","IBCEF74",11,0)
 ;Input:
"RTN","IBCEF74",12,0)
 ; IB399 - ien #399
"RTN","IBCEF74",13,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEF74",14,0)
 ; IBRES - for results
"RTN","IBCEF74",15,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEF74",16,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEF74",17,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEF74",18,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEF74",19,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEF74",20,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEF74",21,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEF74",22,0)
 ;Output:
"RTN","IBCEF74",23,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF74",24,0)
 ; where:(see PROVIDER)
"RTN","IBCEF74",25,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF74",26,0)
 I +$G(IBSORT)=0 S IBSORT=IBPRNUM
"RTN","IBCEF74",27,0)
 N IBPRTYP,IBINSCO,IBPROV,IBFRMTYP,IBCARE,IB35591,IBN,IBCURR,IBEXC,IBALLSSN,IBSSNIEN,IBLIMIT
"RTN","IBCEF74",28,0)
 S IBN=0
"RTN","IBCEF74",29,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBALLSSN",,IB399)
"RTN","IBCEF74",30,0)
 S Q=0 F  S Q=$O(^IBE(355.97,Q)) Q:'Q  I $P($G(^(Q,0)),U,3)="SY" S IBSSNIEN=Q Q
"RTN","IBCEF74",31,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEF74",32,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF74",33,0)
 S IBCARE=$S($$ISRX^IBCEF1(IB399):3,1:0) ;if an Rx refill bill
"RTN","IBCEF74",34,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IB399,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF74",35,0)
 S IBLIMIT=$S($G(IBINSTP)="C":5,1:3)  ; Limits on secondary IDs
"RTN","IBCEF74",36,0)
 F IBPRTYP=1:1:9 D
"RTN","IBCEF74",37,0)
 . N Z,IB355OV
"RTN","IBCEF74",38,0)
 . S IBPROV=$$PROVPTR^IBCEF7(IB399,IBPRTYP)
"RTN","IBCEF74",39,0)
 . Q:+IBPROV=0
"RTN","IBCEF74",40,0)
 . ;don't create anything if form type not HCFA or UB
"RTN","IBCEF74",41,0)
 . Q:IBFRMTYP=0
"RTN","IBCEF74",42,0)
 . N IBRETARR S IBRETARR=0
"RTN","IBCEF74",43,0)
 . D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEF74",44,0)
 . S IB355OV="",IBEXC=""
"RTN","IBCEF74",45,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0))
"RTN","IBCEF74",46,0)
 . I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0)) D
"RTN","IBCEF74",47,0)
 .. I $P(Z,U,IBPRNUM+4)'="",$P(Z,U,IBPRNUM+11)'="" S IB355OV=$P(Z,U,IBPRNUM+4)_U_$P(Z,U,IBPRNUM+11)
"RTN","IBCEF74",48,0)
 . S IBCURR=$$COB^IBCEF(IB399)
"RTN","IBCEF74",49,0)
 . S IBN=0,IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEF74",50,0)
 . I $G(IBINSTP)="C","34"[$G(IBPRTYP),"P"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12"
"RTN","IBCEF74",51,0)
 . I $G(IBINSTP)="O","34"[$G(IBPRTYP),"ST"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12" ;Calculate MEDICARE (WNR) specific provider qualifier and ID for HCFA 1500 secondary claims
"RTN","IBCEF74",52,0)
 . I $P(IB355OV,U,2) D
"RTN","IBCEF74",53,0)
 .. I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEF74",54,0)
 ... S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEF74",55,0)
 . I IB35591'="",IBEXC'=$P(IB35591,U,3) S:$$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEF74",56,0)
 . I IBFRMTYP=2,$P($G(^DIC(36,IBINSCO,3)),U,11),$P(IBALLSSN,U,IBPRTYP)'="",IBSSNIEN,$G(IBINSTP)="C" D  ; Force SSN as secondary id for HCFA 1500
"RTN","IBCEF74",57,0)
 .. S IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="REQUIRED^"_IBINSCO_"^SY^"_$P(IBALLSSN,U,IBPRTYP),$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=IBSSNIEN
"RTN","IBCEF74",58,0)
 . D SORT(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM,IBLIMIT)
"RTN","IBCEF74",59,0)
 . S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEF74",60,0)
 S IBRES(IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEF74",61,0)
 Q
"RTN","IBCEF74",62,0)
 ;
"RTN","IBCEF74",63,0)
SECIDCK(IBIFN,IBSEQ,IBTYP,IBIFN1) ; Function returns 1 if ID type ptr in
"RTN","IBCEF74",64,0)
 ;  IBTYP is valid X12 code for the claim/prov function (IBPROVF)
"RTN","IBCEF74",65,0)
 ;  as a sec id
"RTN","IBCEF74",66,0)
 ; IBSEQ = COB seq being checked
"RTN","IBCEF74",67,0)
 ; IBIFN1 = entry # in PRV multiple being checked
"RTN","IBCEF74",68,0)
 ;  Called from input transform of fields .12-.14, subfile 399.0222
"RTN","IBCEF74",69,0)
 N IBOK,IBFRM,IBCOBN,IBX12,IBPROVF
"RTN","IBCEF74",70,0)
 S IBPROVF=+$G(^DGCR(399,IBIFN,"PRV",IBIFN1,0))
"RTN","IBCEF74",71,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2) ; Form type
"RTN","IBCEF74",72,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) S:'IBCOBN IBCOBN=1 ; Current COB seq
"RTN","IBCEF74",73,0)
 S IBX12=$P($G(^IBE(355.97,+IBTYP,0)),U,3) ; X12 code for prov id typ
"RTN","IBCEF74",74,0)
 Q $$CHSEC^IBCEF73(IBFRM,IBPROVF,$S(IBSEQ=IBCOBN:"C",1:"O"),IBX12)
"RTN","IBCEF74",75,0)
 ;
"RTN","IBCEF74",76,0)
DEFID(IBIFN,IBPRV) ;
"RTN","IBCEF74",77,0)
 ; IBIFN = ien of bill
"RTN","IBCEF74",78,0)
 ; IBPRV = ien of entry subfile 399.0222
"RTN","IBCEF74",79,0)
 ;  Function returns default ids: prim id def^sec id def^tert id def
"RTN","IBCEF74",80,0)
 ;  SSN cannot be the default ID
"RTN","IBCEF74",81,0)
 N Z,Z1,ID,IBZ,IBINS,IBINS4,IBUB
"RTN","IBCEF74",82,0)
 S IBZ=""
"RTN","IBCEF74",83,0)
 S IBUB=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEF74",84,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",85,0)
 S Z=$G(^DGCR(399,IBIFN,"PRV",IBPRV,0)),ID=$P(Z,U,5,7)
"RTN","IBCEF74",86,0)
 F Z1=1:1:3 I $P(ID,U,Z1)="" D
"RTN","IBCEF74",87,0)
 . Q:'$G(^DGCR(399,IBIFN,"I"_Z1))  S IBINS=+^("I"_Z1)
"RTN","IBCEF74",88,0)
 . S $P(ID,U,Z1)=$$GETID^IBCEP2(IBIFN,2,$P(Z,U,2),Z1)
"RTN","IBCEF74",89,0)
 . ; Set default if null - based on parameter for require print SSN
"RTN","IBCEF74",90,0)
 . I $P(ID,U,Z1)="" S $P(ID,U,Z1)=$S('$P($G(^DIC(36,IBINS,3)),U,11+IBUB):"VAD000",1:$P(IBZ,U,+Z))
"RTN","IBCEF74",91,0)
 Q ID
"RTN","IBCEF74",92,0)
 ;
"RTN","IBCEF74",93,0)
DISPID(IBXIEN) ; Display list of all prov and fac ids that will
"RTN","IBCEF74",94,0)
 ; extract for this bill if transmitted electronically
"RTN","IBCEF74",95,0)
 N IBID,IBID1,IBZ,IBCT,IBFRM,IBCOBN,IBATT,IBQUIT,IBTYP,DIR,IBIFN,X,Y,Z,Z0,Z1
"RTN","IBCEF74",96,0)
 S IBIFN=IBXIEN
"RTN","IBCEF74",97,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBCOBN=$$COBN^IBCEF(IBIFN),IBATT=$S(IBFRM=2:3,1:4)
"RTN","IBCEF74",98,0)
 W @IOF
"RTN","IBCEF74",99,0)
 W !,"If this bill is transmitted electronically, the following IDs will be sent:"
"RTN","IBCEF74",100,0)
 ; Returns all prov sec ids to be transmitted in indicated segments
"RTN","IBCEF74",101,0)
 S Z=+$G(^DGCR(399,IBIFN,"I1")) I Z W !,"  Primary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=1 W ?54,"<<<Current Ins"
"RTN","IBCEF74",102,0)
 S Z=+$G(^DGCR(399,IBIFN,"I2")) I Z W !,"Secondary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=2 W ?54,"<<<Current Ins"
"RTN","IBCEF74",103,0)
 S Z=+$G(^DGCR(399,IBIFN,"I3")) I Z W !," Tertiary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=3 W ?54,"<<<Current Ins"
"RTN","IBCEF74",104,0)
 W !!,"Provider IDs: (VistA Records OP1,OP2,OP4,OP8,OP9,OPR2,OPR3,OPR4,OPR5,OPR8):"
"RTN","IBCEF74",105,0)
 F Z=1:1:3 I $G(^DGCR(399,IBIFN,"I"_Z)) D PROVINF(IBIFN,Z,.IBID,"",$S(IBCOBN=Z:"C",1:"O"))
"RTN","IBCEF74",106,0)
 S Z=0 F  S Z=$O(IBID(Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBID(Z,Z0)) Q:'Z0  S IBID1(Z0,Z)="",Z1=0 F  S Z1=$O(IBID(Z,Z0,Z1)) Q:'Z1  I $P(IBID(Z,Z0,Z1),U,9) S IBID1(Z0,Z,Z1)=IBID(Z,Z0,Z1)
"RTN","IBCEF74",107,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",IBATT,0))
"RTN","IBCEF74",108,0)
 I Z S Z=$P($G(^DGCR(399,IBIFN,"PRV",Z,0)),U,2)
"RTN","IBCEF74",109,0)
 W !,?5,"ATTENDING/RENDERING: ",$$EXTERNAL^DILFD(399.0222,.02,"",Z)
"RTN","IBCEF74",110,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",111,0)
 W !,?8,"SSN: ",?40,$S($P(IBZ,U,IBATT)'="":$P(IBZ,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",112,0)
 I $O(IBID1(IBATT,0)) W !,?8,"Secondary IDs"
"RTN","IBCEF74",113,0)
 S IBQUIT=0
"RTN","IBCEF74",114,0)
 ;
"RTN","IBCEF74",115,0)
 ; Attending/Rendering (4/3) secondary IDs
"RTN","IBCEF74",116,0)
 S Z0=0 F  S Z0=$O(IBID1(IBATT,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(IBATT,Z0,Z1)) Q:'Z1  D  Q:IBQUIT
"RTN","IBCEF74",117,0)
 . Q:$D(IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9)))  ;1st of each type transmits
"RTN","IBCEF74",118,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",119,0)
 . S IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9))=""
"RTN","IBCEF74",120,0)
 . W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(IBATT,Z0,Z1),U,9)),?40,$P(IBID1(IBATT,Z0,Z1),U,4)
"RTN","IBCEF74",121,0)
 . Q
"RTN","IBCEF74",122,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",123,0)
 ;
"RTN","IBCEF74",124,0)
 ; Referring(1), Operating(2), Supervising(5), Other(9) secondary IDs
"RTN","IBCEF74",125,0)
 S Z=0 F  S Z=$O(IBID1(Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",126,0)
 . N Q
"RTN","IBCEF74",127,0)
 . S Q=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF74",128,0)
 . W !!,?5,$$EXTERNAL^DILFD(399.0222,.01,"",Z),": "_$$EXTERNAL^DILFD(399.0222,.02,"",$P($G(^DGCR(399,IBIFN,"PRV",Q,0)),U,2))
"RTN","IBCEF74",129,0)
 . S Z0=0 F  S Z0=$O(IBID1(Z,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(Z,Z0,Z1)) Q:'Z1!IBQUIT  D
"RTN","IBCEF74",130,0)
 .. Q:$D(IBTYP(+$P(IBID1(Z,Z0,Z1),U,9)))  ; 1st of each type transmits
"RTN","IBCEF74",131,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",132,0)
 .. S IBTYP(+$P(IBID1(Z,Z0,Z1),U,9))=""
"RTN","IBCEF74",133,0)
 .. W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(Z,Z0,Z1),U,9)),?40,$P(IBID1(Z,Z0,Z1),U,4)
"RTN","IBCEF74",134,0)
 .. Q
"RTN","IBCEF74",135,0)
 . Q
"RTN","IBCEF74",136,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",137,0)
 ;
"RTN","IBCEF74",138,0)
 ; IB*2*320 - display additional IDs for ?ID
"RTN","IBCEF74",139,0)
 D EN^IBCEF74A(IBIFN,.IBQUIT)
"RTN","IBCEF74",140,0)
 ;
"RTN","IBCEF74",141,0)
DISPIDX ;
"RTN","IBCEF74",142,0)
 I '$G(IBQUIT) S DIR(0)="EA",DIR("A")="Press RETURN to continue " W ! D ^DIR K DIR
"RTN","IBCEF74",143,0)
 Q
"RTN","IBCEF74",144,0)
 ;
"RTN","IBCEF74",145,0)
NOMORE() ;
"RTN","IBCEF74",146,0)
 S DIR(0)="EA",DIR("A")="Press RETURN for more IDs or '^' to exit: " W ! D ^DIR
"RTN","IBCEF74",147,0)
 W @IOF
"RTN","IBCEF74",148,0)
 Q (Y'=1)
"RTN","IBCEF74",149,0)
 ;
"RTN","IBCEF74",150,0)
DEFSEC(IBIFN,IBARR) ; Returns array in IBARR for default prov sec ids for ien IBIFN
"RTN","IBCEF74",151,0)
 ; IBARR if passed by ref is returned   IBARR(prov function,COBN)=def id
"RTN","IBCEF74",152,0)
 N IBCAR,IBCOBN,IBPC,IBINS,IBARRX,Q,Z,Z0,ZINS,X
"RTN","IBCEF74",153,0)
 K IBARR
"RTN","IBCEF74",154,0)
 S ZINS="",IBCOBN=$$COBN^IBCEF(IBIFN),IBPC=$S($$FT^IBCEF(IBIFN)=3:2,1:1)
"RTN","IBCEF74",155,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEF74",156,0)
 F Z=1:1:3 S ZINS=ZINS_+$G(^DGCR(399,IBIFN,"I"_Z))_U
"RTN","IBCEF74",157,0)
 F Z=1:1:3 I $P(ZINS,U,Z),'$P($G(^DIC(36,+$P(ZINS,U,Z),4)),U,IBPC) S $P(ZINS,U,Z)=""
"RTN","IBCEF74",158,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEF74",159,0)
 . F Q=1:1:3 D
"RTN","IBCEF74",160,0)
 .. I $P(Z0,U,Q+4)'="" S IBARR(+Z0,Q)=$P(Z0,U,Q+4) Q  ; Override
"RTN","IBCEF74",161,0)
 .. S IBINS=$P(ZINS,U,Q)
"RTN","IBCEF74",162,0)
 .. Q:'IBINS
"RTN","IBCEF74",163,0)
 .. S X=$$IDFIND^IBCEP2(IBIFN,"",$P(Z0,U,2),Q,1)
"RTN","IBCEF74",164,0)
 .. I X'="" S IBARR(+Z0,Q)=X
"RTN","IBCEF74",165,0)
 Q
"RTN","IBCEF74",166,0)
 ;
"RTN","IBCEF74A")
0^74^B17345464
"RTN","IBCEF74A",1,0)
IBCEF74A ;ALB/ESG - Provider ID maint ?ID continuation ;7 Mar 2006
"RTN","IBCEF74A",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEF74A",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74A",4,0)
 ;
"RTN","IBCEF74A",5,0)
 Q
"RTN","IBCEF74A",6,0)
 ;
"RTN","IBCEF74A",7,0)
EN(IBIFN,IBQUIT) ; Display billing provider and service provider IDs as part
"RTN","IBCEF74A",8,0)
 ; of the ?ID display/help in the billing screens.
"RTN","IBCEF74A",9,0)
 ; Called from DISPID^IBCEF74.
"RTN","IBCEF74A",10,0)
 NEW IBID,IBX,Z,ZI,ZN,SEQ,PSIN,DATA,QUALNM,IDNUM,FACNAME,IBZ,IBXIEN,IBSSFI
"RTN","IBCEF74A",11,0)
 ;
"RTN","IBCEF74A",12,0)
 D ALLIDS^IBCEF75(IBIFN,.IBID)
"RTN","IBCEF74A",13,0)
 ;
"RTN","IBCEF74A",14,0)
 ; Re-sort array by insurance sequence (P/S/T)
"RTN","IBCEF74A",15,0)
 K IBX
"RTN","IBCEF74A",16,0)
 F Z="BILLING PRV","LAB/FAC" F ZI="C","O" S ZN=0 F  S ZN=$O(IBID(Z,IBIFN,ZI,ZN)) Q:'ZN  D
"RTN","IBCEF74A",17,0)
 . S SEQ=$P($G(IBID(Z,IBIFN,ZI,ZN)),U,1) Q:SEQ=""
"RTN","IBCEF74A",18,0)
 . S IBX(Z,SEQ,ZI,ZN)=""
"RTN","IBCEF74A",19,0)
 . Q
"RTN","IBCEF74A",20,0)
 ;
"RTN","IBCEF74A",21,0)
 ; Display billing provider secondary ID's (current ins only)
"RTN","IBCEF74A",22,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",23,0)
 S Z="BILLING PRV"
"RTN","IBCEF74A",24,0)
 I $D(IBX(Z)) W !!,"Billing Provider Secondary IDs (VistA Record CI1A):"
"RTN","IBCEF74A",25,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",26,0)
 I IBQUIT G EX
"RTN","IBCEF74A",27,0)
 ;
"RTN","IBCEF74A",28,0)
 ; Now display the lab or facility primary and secondary IDs
"RTN","IBCEF74A",29,0)
 ; This is the service facility information
"RTN","IBCEF74A",30,0)
 ;
"RTN","IBCEF74A",31,0)
 ; Facility name, same code as found in SUB-2
"RTN","IBCEF74A",32,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",33,0)
 W !!,"Service Facility Name and ID Information"
"RTN","IBCEF74A",34,0)
 S IBXIEN=IBIFN
"RTN","IBCEF74A",35,0)
 D F^IBCEF("N-RENDERING INSTITUTION","IBZ",,IBIFN)
"RTN","IBCEF74A",36,0)
 S FACNAME=$$GETFAC^IBCEP8(+IBZ,+$P(IBZ,U,2),0,"SUB")
"RTN","IBCEF74A",37,0)
 S Z="LAB/FAC"
"RTN","IBCEF74A",38,0)
 ;
"RTN","IBCEF74A",39,0)
 ; determine if flag to suppress lab/fac data is set
"RTN","IBCEF74A",40,0)
 D VAMCFD^IBCEF75(IBIFN,.IBSSFI)
"RTN","IBCEF74A",41,0)
 I $D(IBSSFI),'$G(IBSSFI("C",1)) D  I IBQUIT G EX
"RTN","IBCEF74A",42,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",43,0)
 . W !!,"Note:  Service Facility Data not sent for Current Insurance"
"RTN","IBCEF74A",44,0)
 . W !,"       'Send VA Lab/Facility IDs or Facility Data for VAMC?' is set to NO",!
"RTN","IBCEF74A",45,0)
 . Q
"RTN","IBCEF74A",46,0)
 ;
"RTN","IBCEF74A",47,0)
 ; facility name
"RTN","IBCEF74A",48,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",49,0)
 I FACNAME="" S FACNAME="n/a"
"RTN","IBCEF74A",50,0)
 W !,"Facility:  ",FACNAME
"RTN","IBCEF74A",51,0)
 ;
"RTN","IBCEF74A",52,0)
 ; primary ID
"RTN","IBCEF74A",53,0)
 S DATA=$G(IBID(Z,IBIFN,"C",1,0))   ; lab/facility current ins primary
"RTN","IBCEF74A",54,0)
 S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",55,0)
 S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",56,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",57,0)
 W !?5,"Lab or Facility Primary ID (VistA Record SUB):"
"RTN","IBCEF74A",58,0)
 I DATA'="" W !?8,"(",$P($G(IBID(Z,IBIFN,"C",1)),U,1),") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",59,0)
 I DATA="" W !?8,"(-) None Found"
"RTN","IBCEF74A",60,0)
 ;
"RTN","IBCEF74A",61,0)
 ; secondary IDs
"RTN","IBCEF74A",62,0)
 I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() I IBQUIT G EX
"RTN","IBCEF74A",63,0)
 W !?5,"Lab or Facility Secondary IDs (VistA Records SUB1,SUB2,OP3,OP6,OP7):"
"RTN","IBCEF74A",64,0)
 D SECID(Z,.IBQUIT)
"RTN","IBCEF74A",65,0)
 I IBQUIT G EX
"RTN","IBCEF74A",66,0)
 ;
"RTN","IBCEF74A",67,0)
EX ;
"RTN","IBCEF74A",68,0)
 Q
"RTN","IBCEF74A",69,0)
 ;
"RTN","IBCEF74A",70,0)
QUAL(Z,FORMTYPE) ; turn the qualifier code into a qualifier description
"RTN","IBCEF74A",71,0)
 NEW QUAL,IEN
"RTN","IBCEF74A",72,0)
 S QUAL=""
"RTN","IBCEF74A",73,0)
 I $G(Z)="" G QUALX
"RTN","IBCEF74A",74,0)
 I Z="1C" D  G QUALX   ; qualifier for Medicare Part ?
"RTN","IBCEF74A",75,0)
 . I $G(FORMTYPE)=2 S QUAL="MEDICARE PART B"   ; hcfa
"RTN","IBCEF74A",76,0)
 . I $G(FORMTYPE)=3 S QUAL="MEDICARE PART A"   ; ub
"RTN","IBCEF74A",77,0)
 . Q
"RTN","IBCEF74A",78,0)
 I Z=34 S Z="SY"       ; qualifier for SSN
"RTN","IBCEF74A",79,0)
 S IEN=+$O(^IBE(355.97,"C",Z,"")) I 'IEN G QUALX
"RTN","IBCEF74A",80,0)
 S QUAL=$P($G(^IBE(355.97,IEN,0)),U,1)
"RTN","IBCEF74A",81,0)
QUALX ;
"RTN","IBCEF74A",82,0)
 Q QUAL
"RTN","IBCEF74A",83,0)
 ;
"RTN","IBCEF74A",84,0)
SECID(Z,IBQUIT) ; Display secondary ID and qualifier information
"RTN","IBCEF74A",85,0)
 ; Z is the type of IDs passed in; either BILLING PRV or LAB/FAC
"RTN","IBCEF74A",86,0)
 ; IBQUIT is returned if passed by reference
"RTN","IBCEF74A",87,0)
 NEW SEQ,ZI,ZN,PSIN,DATA,QUALNM,IDNUM,NODATA
"RTN","IBCEF74A",88,0)
 S IBQUIT=0,NODATA=1
"RTN","IBCEF74A",89,0)
 F SEQ="P","S","T" D  Q:IBQUIT
"RTN","IBCEF74A",90,0)
 . ;
"RTN","IBCEF74A",91,0)
 . ; current ins only for billing provider secondary IDs
"RTN","IBCEF74A",92,0)
 . I Z="BILLING PRV",SEQ'=$$COB^IBCEF(IBIFN) Q
"RTN","IBCEF74A",93,0)
 . S ZI=""
"RTN","IBCEF74A",94,0)
 . F  S ZI=$O(IBX(Z,SEQ,ZI)) Q:ZI=""  D  Q:IBQUIT
"RTN","IBCEF74A",95,0)
 .. S ZN=0
"RTN","IBCEF74A",96,0)
 .. F  S ZN=$O(IBX(Z,SEQ,ZI,ZN)) Q:'ZN  D  Q:IBQUIT
"RTN","IBCEF74A",97,0)
 ... S PSIN=0   ; start at 0 to skip primary IDs
"RTN","IBCEF74A",98,0)
 ... F  S PSIN=$O(IBID(Z,IBIFN,ZI,ZN,PSIN)) Q:PSIN=""  D  Q:IBQUIT
"RTN","IBCEF74A",99,0)
 .... S DATA=$G(IBID(Z,IBIFN,ZI,ZN,PSIN))
"RTN","IBCEF74A",100,0)
 .... S QUALNM=$$QUAL($P(DATA,U,1),$$FT^IBCEF(IBIFN))
"RTN","IBCEF74A",101,0)
 .... S IDNUM=$P(DATA,U,2)
"RTN","IBCEF74A",102,0)
 .... I ($Y+5)>IOSL S IBQUIT=$$NOMORE^IBCEF74() Q:IBQUIT
"RTN","IBCEF74A",103,0)
 .... S NODATA=0
"RTN","IBCEF74A",104,0)
 .... W !?8,"(",SEQ,") ",QUALNM,?40,IDNUM
"RTN","IBCEF74A",105,0)
 .... I Z="LAB/FAC",$D(^DGCR(399,IBIFN,"I2")),SEQ=$$COB^IBCEF(IBIFN) W ?54,"<<<Current Ins"
"RTN","IBCEF74A",106,0)
 .... I Z="BILLING PRV",PSIN=1 W ?54,"<<<System Generated ID"
"RTN","IBCEF74A",107,0)
 .... Q
"RTN","IBCEF74A",108,0)
 ... Q
"RTN","IBCEF74A",109,0)
 .. Q
"RTN","IBCEF74A",110,0)
 . Q
"RTN","IBCEF74A",111,0)
 I NODATA,'IBQUIT W !?8,"(-) None Found"
"RTN","IBCEF74A",112,0)
SECIDX ;
"RTN","IBCEF74A",113,0)
 Q
"RTN","IBCEF74A",114,0)
 ;
"RTN","IBCEF75")
0^66^B30617202
"RTN","IBCEF75",1,0)
IBCEF75 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF75",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEF75",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF75",4,0)
 ;
"RTN","IBCEF75",5,0)
 G AWAY
"RTN","IBCEF75",6,0)
AWAY Q
"RTN","IBCEF75",7,0)
 ;
"RTN","IBCEF75",8,0)
ALLIDS(IBIFN,IBXSAVE,IBSTRIP,SEG) ; Return all of the Provider IDS 
"RTN","IBCEF75",9,0)
 I '$D(IBSTRIP) S IBSTRIP=0
"RTN","IBCEF75",10,0)
 I '$D(SEG) S SEG=""
"RTN","IBCEF75",11,0)
 N IBXIEN,ARINFO,ARID,ARQ,IBFRMTYP,ARIEN,ARINS,Z0,DAT,I,SORT1,SORT2,SORT3,COB,IBCCOB
"RTN","IBCEF75",12,0)
 ;
"RTN","IBCEF75",13,0)
 S IBXIEN=IBIFN
"RTN","IBCEF75",14,0)
 D ALLPROV^IBCEF7    ; Get the Person ID's (Returns IBXSAVE)
"RTN","IBCEF75",15,0)
 S DAT=$$PROVID^IBCEF73(IBIFN)
"RTN","IBCEF75",16,0)
 S DAT("QUAL")=IBXSAVE("ID")  ; this value was also passed back by above function
"RTN","IBCEF75",17,0)
 S SORT1="" F  S SORT1=$O(IBXSAVE("PROVINF",IBIFN,SORT1)) Q:SORT1=""  D
"RTN","IBCEF75",18,0)
 . S SORT2=0 F  S SORT2=$O(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2)) Q:SORT2=""  D
"RTN","IBCEF75",19,0)
 .. S SORT3=0 F  S SORT3=$O(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3))  Q:SORT3=""  D
"RTN","IBCEF75",20,0)
 ... S IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,0)="PRIMARY"_U_U_$$STRIP^IBCEF76($P(DAT("QUAL"),U,SORT3)_U_$P(DAT,U,SORT3),1,U,IBSTRIP)
"RTN","IBCEF75",21,0)
 ... F I=1:1 Q:'$D(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I))  D
"RTN","IBCEF75",22,0)
 .... S $P(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I),U,3,4)=$$STRIP^IBCEF76($P(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,SORT3,I),U,3,4),1,U,IBSTRIP)
"RTN","IBCEF75",23,0)
 ;
"RTN","IBCEF75",24,0)
 D LFIDS^IBCEF76(IBIFN,.IBXSAVE,IBSTRIP,SEG)   ; Get the Lab/Facility IDs
"RTN","IBCEF75",25,0)
 ;
"RTN","IBCEF75",26,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN)
"RTN","IBCEF75",27,0)
 S ARIEN=$S(IBFRMTYP=2:3,1:4)
"RTN","IBCEF75",28,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEF75",29,0)
 F COB=1:1:3 D
"RTN","IBCEF75",30,0)
 . S SORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF75",31,0)
 . S SORT2=$S(SORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF75",32,0)
 . S ARINFO=$G(IBXSAVE("PROVINF",IBIFN,SORT1,SORT2,ARIEN,1))
"RTN","IBCEF75",33,0)
 . ;
"RTN","IBCEF75",34,0)
 . D BPIDS(IBIFN,.IBXSAVE,SORT1,SORT2,COB,IBSTRIP,SEG)
"RTN","IBCEF75",35,0)
 Q
"RTN","IBCEF75",36,0)
 ; 
"RTN","IBCEF75",37,0)
BPIDS(IBIFN,IDS,SORT1,SORT2,COB,IBSTRIP,SEG) ; Get all the billing provider IDs and qualifiers from the claim and file 355.92
"RTN","IBCEF75",38,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,MAIN,IBCCOB,USED,PLANTYPE,I,CNT,QUAL,ARF,M1,DEF,IDDIV,IBLIMIT,IEN,ID,IB2
"RTN","IBCEF75",39,0)
 ;
"RTN","IBCEF75",40,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF75",41,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF75",42,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF75",43,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF75",44,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF75",45,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF75",46,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)  ; Current Insurance
"RTN","IBCEF75",47,0)
 S IBINS=$P($G(^DGCR(399,IBIFN,"I"_COB)),U)
"RTN","IBCEF75",48,0)
 Q:IBINS=""
"RTN","IBCEF75",49,0)
 ;
"RTN","IBCEF75",50,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF75",51,0)
 ;
"RTN","IBCEF75",52,0)
 ; Primary ID
"RTN","IBCEF75",53,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,0)=$$STRIP^IBCEF76($$TAXID(),1,U,IBSTRIP)
"RTN","IBCEF75",54,0)
 S USED($P(IDS("BILLING PRV",IBIFN,SORT1,SORT2,0),U))=""
"RTN","IBCEF75",55,0)
 ;
"RTN","IBCEF75",56,0)
 ; Secondary #1 - This is the ID Emdeon uses for sorting
"RTN","IBCEF75",57,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,1)=$$STRIP^IBCEF76($$BPSID1(IBDIV),1,U,IBSTRIP)
"RTN","IBCEF75",58,0)
 S USED($P(IDS("BILLING PRV",IBIFN,SORT1,SORT2,1),U))=""
"RTN","IBCEF75",59,0)
 ;
"RTN","IBCEF75",60,0)
 ; Check if this is a plan type which gets no secondary IDs
"RTN","IBCEF75",61,0)
 S M1=$G(^DGCR(399,IBIFN,"M1"))
"RTN","IBCEF75",62,0)
 ; the following check is the current value of the flag, not when the claim was created. 
"RTN","IBCEF75",63,0)
 S PLANTYPE=$$POLTYP^IBCEF3(IBIFN,COB)
"RTN","IBCEF75",64,0)
 I PLANTYPE]"",$D(^DIC(36,IBINS,13,"B",PLANTYPE)) Q 
"RTN","IBCEF75",65,0)
 ;
"RTN","IBCEF75",66,0)
 ; Secondary #2
"RTN","IBCEF75",67,0)
 ; If there is a ID  send with quailifer (stored or computed)
"RTN","IBCEF75",68,0)
 I $P(M1,U,COB+1)]"" D
"RTN","IBCEF75",69,0)
 . S QUAL=""
"RTN","IBCEF75",70,0)
 . S DAT=$P(M1,U,COB+9)
"RTN","IBCEF75",71,0)
 . I DAT S QUAL=$$STRIP^IBCEF76($P($G(^IBE(355.97,DAT,0)),U,3),1,,IBSTRIP)
"RTN","IBCEF75",72,0)
 . ; the null check is needed to be backwards compatible
"RTN","IBCEF75",73,0)
 . I QUAL=""!(QUAL="1J") S QUAL=$$STRIP^IBCEF76($$OLDWAY(IBIFN,COB),1,,IBSTRIP)
"RTN","IBCEF75",74,0)
 . S IB2=QUAL_U_$$STRIP^IBCEF76($P(M1,U,COB+1),1,,IBSTRIP)
"RTN","IBCEF75",75,0)
 ;
"RTN","IBCEF75",76,0)
 I $P(M1,U,COB+1)="" S IB2=$$STRIP^IBCEF76($$OLDWAY(IBIFN,COB),1,,IBSTRIP)_U_$$STRIP^IBCEF76($$GET1^DIQ(350.9,1,1.05),1,,IBSTRIP)
"RTN","IBCEF75",77,0)
 ;
"RTN","IBCEF75",78,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,2)=IB2
"RTN","IBCEF75",79,0)
 S IDS("BILLING PRV",IBIFN,SORT1,SORT2,2,"PTQ")=$$OLDWAY(IBIFN,COB)
"RTN","IBCEF75",80,0)
 S USED($P(IB2,U))=""
"RTN","IBCEF75",81,0)
 ;
"RTN","IBCEF75",82,0)
 S CNT=$S('$D(IDS("BILLING PRV",IBIFN,SORT1,SORT2,2)):2,1:3)
"RTN","IBCEF75",83,0)
 S IBLIMIT=8
"RTN","IBCEF75",84,0)
 S IEN=0 F  S IEN=$O(^IBA(355.92,"B",IBINS,IEN)) Q:IEN=""  D  Q:CNT>IBLIMIT
"RTN","IBCEF75",85,0)
 . S DAT=$G(^IBA(355.92,IEN,0))
"RTN","IBCEF75",86,0)
 . Q:$P(DAT,U,8)'="A"   ; only allow additional IDs
"RTN","IBCEF75",87,0)
 . Q:$P(DAT,U,7)=""  ; No Provider ID
"RTN","IBCEF75",88,0)
 . Q:$P(DAT,U,6)=""  ; No ID Qualifier
"RTN","IBCEF75",89,0)
 . I IBFRMTYP=1 Q:$P(DAT,U,4)=2
"RTN","IBCEF75",90,0)
 . I IBFRMTYP=2 Q:$P(DAT,U,4)=1
"RTN","IBCEF75",91,0)
 . ;
"RTN","IBCEF75",92,0)
 . ; Check if we already have one of these
"RTN","IBCEF75",93,0)
 . S QUAL=$$STRIP^IBCEF76($P(DAT,U,6),1,,IBSTRIP)
"RTN","IBCEF75",94,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF75",95,0)
 . Q:QUAL=""
"RTN","IBCEF75",96,0)
 . Q:$D(USED(QUAL))
"RTN","IBCEF75",97,0)
 . ;
"RTN","IBCEF75",98,0)
 . S IDS("BILLING PRV",IBIFN,SORT1,SORT2,CNT)=QUAL_U_$$STRIP^IBCEF76($P(DAT,U,7),1,,IBSTRIP)
"RTN","IBCEF75",99,0)
 . S CNT=CNT+1,USED(QUAL)=""
"RTN","IBCEF75",100,0)
 ;
"RTN","IBCEF75",101,0)
 Q
"RTN","IBCEF75",102,0)
 ;
"RTN","IBCEF75",103,0)
OLDWAY(IBIFN,COB) ; Figure out the qualifier the old way if it's not stored with the claim.
"RTN","IBCEF75",104,0)
 ; It's based on the plan type.  This is used for Billing Provider Secondary ID #2
"RTN","IBCEF75",105,0)
 N PLANTYPE
"RTN","IBCEF75",106,0)
 S PLANTYPE=$$POLTYP^IBCEF3(IBIFN,COB)
"RTN","IBCEF75",107,0)
 Q $$SOP^IBCEP2B(IBIFN,PLANTYPE)
"RTN","IBCEF75",108,0)
 ;
"RTN","IBCEF75",109,0)
BPSID1(DIV) ; Return the Billing Provider Secondary ID #1 and qualifier which Emdeon uses to sort IBIFNs
"RTN","IBCEF75",110,0)
 N DATA
"RTN","IBCEF75",111,0)
 S DATA=$P($$SITE^VASITE(DT,$S(DIV:DIV,1:+$$SITE^VASITE())),U,3)
"RTN","IBCEF75",112,0)
 S DATA=$E("0000",1,7-$L(DATA))_$E(DATA,4,7)
"RTN","IBCEF75",113,0)
 Q "G5"_U_DATA
"RTN","IBCEF75",114,0)
 ;
"RTN","IBCEF75",115,0)
TAXID() ; Return the Billing Provider Primary ID and qualifier which is the TAXID for the site and also the qualifier
"RTN","IBCEF75",116,0)
 N DATA
"RTN","IBCEF75",117,0)
 S DATA=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCEF75",118,0)
 S DATA=$$NOPUNCT^IBCEF(DATA,1)
"RTN","IBCEF75",119,0)
 Q 24_U_DATA
"RTN","IBCEF75",120,0)
 ;
"RTN","IBCEF75",121,0)
VAMCFD(IBIFN,IBRET) ;
"RTN","IBCEF75",122,0)
 ;
"RTN","IBCEF75",123,0)
 ; This procedure returns data based on flag in insurance company file which is set in the insurance co editor
"RTN","IBCEF75",124,0)
 ; Send VA Lab/Facility IDs or Facility Data for VAMC?
"RTN","IBCEF75",125,0)
 ; The return value will be set to 1 (yes) if the division in the claim is not the main division (VAMC) or
"RTN","IBCEF75",126,0)
 ; if the flag in the dictionary for that insurance company says to send the data.
"RTN","IBCEF75",127,0)
 ; 
"RTN","IBCEF75",128,0)
 ; Input - IBFN - IEN 399
"RTN","IBCEF75",129,0)
 ; Output - IBRET(IBSORT1,IBSORT2)=FLAG
"RTN","IBCEF75",130,0)
 ;    IBSORT1 = "C"urrent or "O"ther insurance
"RTN","IBCEF75",131,0)
 ;    IBSORT2 = order with IBSORT1
"RTN","IBCEF75",132,0)
 ;    FLAG = 0 No or 1 Yes
"RTN","IBCEF75",133,0)
 ;
"RTN","IBCEF75",134,0)
 N IBDIV,MAIN,IBCCOB,IBSORT1,IBSORT2,DAT,IBINS,COB,OUTFAC
"RTN","IBCEF75",135,0)
 S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)
"RTN","IBCEF75",136,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF75",137,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF75",138,0)
 F COB=1:1:3 D
"RTN","IBCEF75",139,0)
 . S IBSORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF75",140,0)
 . S IBSORT2=$S(IBSORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF75",141,0)
 . S IBINS=+$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCEF75",142,0)
 . Q:'IBINS
"RTN","IBCEF75",143,0)
 . S IBRET(IBSORT1,IBSORT2)=1
"RTN","IBCEF75",144,0)
 . S OUTFAC=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCEF75",145,0)
 . Q:OUTFAC]""
"RTN","IBCEF75",146,0)
 . Q:IBDIV'=MAIN
"RTN","IBCEF75",147,0)
 . ; [7] Send VA Lab/Facility IDs or Facility Data for VAMC?(0 - NO, 1 - YES)
"RTN","IBCEF75",148,0)
 . S DAT(3647)=$P($G(^DIC(36,IBINS,4)),U,7)
"RTN","IBCEF75",149,0)
 . I DAT(3647) Q
"RTN","IBCEF75",150,0)
 . S IBRET(IBSORT1,IBSORT2)=0
"RTN","IBCEF75",151,0)
 Q
"RTN","IBCEF75",152,0)
 ;
"RTN","IBCEF75",153,0)
CLEANUP(IBXSAVE) ; Clean up 
"RTN","IBCEF75",154,0)
 K IBXSAVE("PROVINF")
"RTN","IBCEF75",155,0)
 K IBXSAVE("LAB/FAC")
"RTN","IBCEF75",156,0)
 K IBXSAVE("BILLING PRV")
"RTN","IBCEF75",157,0)
 K IBXSAVE("ID")
"RTN","IBCEF75",158,0)
 Q
"RTN","IBCEF76")
0^67^B34194204
"RTN","IBCEF76",1,0)
IBCEF76 ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEF76",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEF76",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF76",4,0)
 ;
"RTN","IBCEF76",5,0)
 G AWAY
"RTN","IBCEF76",6,0)
AWAY Q
"RTN","IBCEF76",7,0)
 ; 
"RTN","IBCEF76",8,0)
LFIDS(IBIFN,IDS,IBSTRIP,SEG) ;
"RTN","IBCEF76",9,0)
 ;  Pass in the the internal claim number and return the array of IDS.
"RTN","IBCEF76",10,0)
 ;  IDS("C"urrent or "O"ther, Order of Insurance within subscript 1, order of ID within subscript 2)
"RTN","IBCEF76",11,0)
 ;  IDS("C",1)="P"
"RTN","IBCEF76",12,0)
 ;  IDS("C",1,0)=Qualifier^Primary ID
"RTN","IBCEF76",13,0)
 ;  IDS("C",1,1)=Qualifier^Sec ID #1
"RTN","IBCEF76",14,0)
 ;  IDS("C",1,2)=Qualifier^Sec ID #2
"RTN","IBCEF76",15,0)
 ;
"RTN","IBCEF76",16,0)
 N DAT,IBFRMTYP,IBCARE,IBDIV,IBINS,OUTFAC,MAIN,IBCCOB,TMPIDS,COB,IBSORT1,IBSORT2,IBLIMIT
"RTN","IBCEF76",17,0)
 ;
"RTN","IBCEF76",18,0)
 S DAT=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEF76",19,0)
 S IBFRMTYP=$$FT^IBCEF(IBIFN),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF76",20,0)
 S IBCARE=$S($$ISRX^IBCEF1(IBIFN):3,1:0) ;if an Rx refill bill
"RTN","IBCEF76",21,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IBIFN,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF76",22,0)
 S IBDIV=+$P(DAT,U,22)
"RTN","IBCEF76",23,0)
 S OUTFAC=$P($G(^DGCR(399,IBIFN,"U2")),U,10)
"RTN","IBCEF76",24,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",25,0)
 ;
"RTN","IBCEF76",26,0)
 S IBCCOB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEF76",27,0)
 F COB=1:1:3 D
"RTN","IBCEF76",28,0)
 . S IBSORT1=$S(COB=IBCCOB:"C",1:"O")
"RTN","IBCEF76",29,0)
 . S IBSORT2=$S(IBSORT1="C":1,COB=1:1,COB=2&(IBCCOB=1):1,1:2)
"RTN","IBCEF76",30,0)
 . S IBLIMIT=$S(IBSORT1="C":5,1:3)  ; Limit secondary IDs
"RTN","IBCEF76",31,0)
 . S DAT=$G(^DGCR(399,IBIFN,"I"_COB))
"RTN","IBCEF76",32,0)
 .;
"RTN","IBCEF76",33,0)
 . S IBINS=$P(DAT,U)  ; insurance PTR 36
"RTN","IBCEF76",34,0)
 . Q:IBINS=""
"RTN","IBCEF76",35,0)
 .;
"RTN","IBCEF76",36,0)
 . I OUTFAC]"" D  Q
"RTN","IBCEF76",37,0)
 .. D NONVALF(IBIFN,OUTFAC_";IBA(355.93,",IBINS,IBFRMTYP,IBCARE,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",38,0)
 . ;
"RTN","IBCEF76",39,0)
 . I OUTFAC="" D
"RTN","IBCEF76",40,0)
 .. ; [7] Send VA Lab/Facility IDs or Facility Data for VAMC?(0 - NO, 1 - YES)
"RTN","IBCEF76",41,0)
 .. S DAT(3647)=$P($G(^DIC(36,IBINS,4)),U,7)
"RTN","IBCEF76",42,0)
 .. I 'DAT(3647),IBDIV=MAIN Q
"RTN","IBCEF76",43,0)
 .. S IDS("LAB/FAC",IBIFN,IBSORT1,IBSORT2,0)=$$STRIP($$TAXID^IBCEF75(),1,U,IBSTRIP)
"RTN","IBCEF76",44,0)
 .. D VALF(IBIFN,IBINS,IBFRMTYP,IBDIV,.IDS,IBSORT1,IBSORT2,COB,IBLIMIT,IBSTRIP,SEG)
"RTN","IBCEF76",45,0)
 Q
"RTN","IBCEF76",46,0)
 ;
"RTN","IBCEF76",47,0)
VALF(IBIFN,INS,FT,DIV,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get VA Lab/Fac Secondary IDs
"RTN","IBCEF76",48,0)
 ; Pass in INS - IEN to file 36
"RTN","IBCEF76",49,0)
 ; FT - 1 UB92 2 HCFA
"RTN","IBCEF76",50,0)
 ; DIV - PTR to 40.8
"RTN","IBCEF76",51,0)
 ;
"RTN","IBCEF76",52,0)
 N Z,Z0,ID,QUAL,MAIN,IDTBL,CNT,Z
"RTN","IBCEF76",53,0)
 S MAIN=$$MAIN^IBCEP2B()  ; get the IEN for main Division
"RTN","IBCEF76",54,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",INS,Z)) Q:'Z  D
"RTN","IBCEF76",55,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEF76",56,0)
 . Q:$P(Z0,U,8)'="LF"   ; Screen out anything other than Lab or Facility
"RTN","IBCEF76",57,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both
"RTN","IBCEF76",58,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",59,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",60,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",61,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",62,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",63,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",64,0)
 . I $P(Z0,U,5)=""!($P(Z0,U,5)=0)!($P(Z0,U,5)=MAIN) S IDTBL("DEF",QUAL)=ID  ; set up default for main division
"RTN","IBCEF76",65,0)
 . I $P(Z0,U,5)=DIV S IDTBL("DIV",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",66,0)
 S CNT=0
"RTN","IBCEF76",67,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)
"RTN","IBCEF76",68,0)
 I $D(IDTBL("DIV")) D  Q
"RTN","IBCEF76",69,0)
 . S Z="" F  S Z=$O(IDTBL("DIV",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DIV",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",70,0)
 I $D(IDTBL("DEF")) D  Q
"RTN","IBCEF76",71,0)
 . S Z="" F  S Z=$O(IDTBL("DEF",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("DEF",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",72,0)
 Q
"RTN","IBCEF76",73,0)
 ;
"RTN","IBCEF76",74,0)
NONVALF(IBIFN,PRV,INS,FT,PT,IDS,SORT1,SORT2,COB,IBLIMIT,IBSTRIP,SEG) ; Get Non VA Lab/Fac Secondary IDs
"RTN","IBCEF76",75,0)
 ; Pass in PRV - VPTR - PTR to 355.93 (in format of variabel pointer IEN;IBA(355.93,
"RTN","IBCEF76",76,0)
 ; Pass in INS - PTR to 36 of null (not provide by insurance company)
"RTN","IBCEF76",77,0)
 ; FT - 1 UB92 2 HCFA
"RTN","IBCEF76",78,0)
 ; PT - Patient Type - 1 inpatient 2 outpatient
"RTN","IBCEF76",79,0)
 ; IDS array being returned
"RTN","IBCEF76",80,0)
 ; SORT1 - "C"urrent or "O"ther
"RTN","IBCEF76",81,0)
 ; SORT2 - 1 if current or (1 or 2 if other)
"RTN","IBCEF76",82,0)
 N Z,Z0,ID,QUAL,IDTBL,CNT
"RTN","IBCEF76",83,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",PRV,Z)) Q:'Z  D
"RTN","IBCEF76",84,0)
 . S Z0=$G(^IBA(355.9,Z,0))
"RTN","IBCEF76",85,0)
 . I +$P(Z0,U,4) Q:$P(Z0,U,4)'=FT   ; Form type must match that passed in or be a 0 which allows both UB and HCFA
"RTN","IBCEF76",86,0)
 . I +$P(Z0,U,5) Q:$P(Z0,U,5)'=PT   ; Patient type must match that passed in or be a 0 which allows both in patient and outpatient
"RTN","IBCEF76",87,0)
 . I INS]"",$P(Z0,U,2)]"",INS'=$P(Z0,U,2) Q
"RTN","IBCEF76",88,0)
 . S ID=$$STRIP($P(Z0,U,7),1,,IBSTRIP)
"RTN","IBCEF76",89,0)
 . Q:ID=""
"RTN","IBCEF76",90,0)
 . S QUAL=$$STRIP($P(Z0,U,6),1,,IBSTRIP)
"RTN","IBCEF76",91,0)
 . Q:QUAL=""   ; Needs a qualifier
"RTN","IBCEF76",92,0)
 . S QUAL=$P($G(^IBE(355.97,QUAL,0)),U,3)
"RTN","IBCEF76",93,0)
 . Q:QUAL=""
"RTN","IBCEF76",94,0)
 . I FT=1,SORT1="O" Q:$$OP3^IBCEF73(FT)'[(U_QUAL_U)   ; Institutional
"RTN","IBCEF76",95,0)
 . I FT=2,SORT1="O" Q:$$OP7^IBCEF73(FT)'[(U_QUAL_U)   ; Professional
"RTN","IBCEF76",96,0)
 . I $G(SEG)="SUB1" Q:$$SUB1^IBCEF73(FT)'[(U_QUAL_U)
"RTN","IBCEF76",97,0)
 . I $P(Z0,U,2)="" S IDTBL("OWN",QUAL)=ID  ; set up default of lab or facilities own ids
"RTN","IBCEF76",98,0)
 . I $P(Z0,U,2)=INS S IDTBL("INS",QUAL)=ID  ; set up default for division
"RTN","IBCEF76",99,0)
 ;
"RTN","IBCEF76",100,0)
 S CNT=0
"RTN","IBCEF76",101,0)
 S IDS("LAB/FAC",IBIFN,SORT1,SORT2)=$E("PST",COB)_U_PRV
"RTN","IBCEF76",102,0)
 ; get primary
"RTN","IBCEF76",103,0)
 S Z0=$G(^IBA(355.93,+PRV,0))
"RTN","IBCEF76",104,0)
 I $P(Z0,U,9)]"",$P(Z0,U,13)]"" S IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=$$STRIP($P($G(^IBE(355.97,$P(Z0,U,13),0)),U,3)_U_$P(Z0,U,9),1,U,IBSTRIP)
"RTN","IBCEF76",105,0)
 ; get secondarys in order
"RTN","IBCEF76",106,0)
 I $D(IDTBL("INS")) D
"RTN","IBCEF76",107,0)
 . N Z S Z="" F  S Z=$O(IDTBL("INS",Z)) Q:Z=""  S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("INS",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",108,0)
 I $D(IDTBL("OWN")),CNT'=IBLIMIT D
"RTN","IBCEF76",109,0)
 . N Z S Z="" F  S Z=$O(IDTBL("OWN",Z)) Q:Z=""  I '$D(IDTBL("INS",Z)) S CNT=CNT+1,IDS("LAB/FAC",IBIFN,SORT1,SORT2,CNT)=Z_U_IDTBL("OWN",Z) Q:CNT=IBLIMIT
"RTN","IBCEF76",110,0)
 Q
"RTN","IBCEF76",111,0)
 ;
"RTN","IBCEF76",112,0)
STRIP(X,SPACE,EXC,IBSTRIP) ;
"RTN","IBCEF76",113,0)
 ; Strip punctuation from data in X
"RTN","IBCEF76",114,0)
 ; SPACE = flag if 1 strip SPACES
"RTN","IBCEF76",115,0)
 ; EXC = list of punct not to strip
"RTN","IBCEF76",116,0)
 ; 
"RTN","IBCEF76",117,0)
 Q:'$G(IBSTRIP) X
"RTN","IBCEF76",118,0)
 Q $$NOPUNCT^IBCEF(X,$G(SPACE),$G(EXC))
"RTN","IBCEF76",119,0)
 ;
"RTN","IBCEF76",120,0)
OTH(IBIFN,IBXSAVE,IBXDATA,COND,SEG) ; Procedure used in piece 2 of some output
"RTN","IBCEF76",121,0)
 ; formatter segments for other insurance
"RTN","IBCEF76",122,0)
 ; COND = 0/1 value passed in that determines whether or not to call the
"RTN","IBCEF76",123,0)
 ;        provider ID function
"RTN","IBCEF76",124,0)
 ;  SEG = name of segment for use in calling ID^IBCEF2 (4 characters)
"RTN","IBCEF76",125,0)
 ;
"RTN","IBCEF76",126,0)
 N Z
"RTN","IBCEF76",127,0)
 D CLEANUP^IBCEF75(.IBXSAVE)
"RTN","IBCEF76",128,0)
 I COND D ALLIDS^IBCEF75(IBIFN,.IBXSAVE,1)
"RTN","IBCEF76",129,0)
 ;
"RTN","IBCEF76",130,0)
 ; Special Check:  if Other Insurance #2 has secondary ID's while Other
"RTN","IBCEF76",131,0)
 ; Insurance #1 does not, then move up #2 to be #1 here.  This is to
"RTN","IBCEF76",132,0)
 ; ensure the output formatter IBXDATA array is built properly.
"RTN","IBCEF76",133,0)
 ;
"RTN","IBCEF76",134,0)
 I $O(IBXSAVE("LAB/FAC",IBIFN,"O",2,0)),'$O(IBXSAVE("LAB/FAC",IBIFN,"O",1,0)) D
"RTN","IBCEF76",135,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",1)
"RTN","IBCEF76",136,0)
 . M IBXSAVE("LAB/FAC",IBIFN,"O",1)=IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",137,0)
 . K IBXSAVE("LAB/FAC",IBIFN,"O",2)
"RTN","IBCEF76",138,0)
 . Q
"RTN","IBCEF76",139,0)
 ;
"RTN","IBCEF76",140,0)
 K IBXDATA
"RTN","IBCEF76",141,0)
 S Z=0
"RTN","IBCEF76",142,0)
 F  S Z=$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z)) Q:'Z  D
"RTN","IBCEF76",143,0)
 . I '$O(IBXSAVE("LAB/FAC",IBIFN,"O",Z,0)) Q
"RTN","IBCEF76",144,0)
 . S IBXDATA(Z)=$P($G(IBXSAVE("LAB/FAC",IBIFN,"O",Z)),U,1)
"RTN","IBCEF76",145,0)
 . I Z>1 D ID^IBCEF2(Z,SEG)
"RTN","IBCEF76",146,0)
 . Q
"RTN","IBCEF76",147,0)
OTHX ;
"RTN","IBCEF76",148,0)
 Q
"RTN","IBCEF76",149,0)
 ;
"RTN","IBCEF77")
0^72^B6621719
"RTN","IBCEF77",1,0)
IBCEF77 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF77",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320**;21-MAR-94
"RTN","IBCEF77",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF77",4,0)
 ;
"RTN","IBCEF77",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF77",6,0)
 N IBXIEN,IBXDATA,IBNET,IBTRI,IB1,IB2,IBID,Z,IBZ,IBZ1,IBSVP
"RTN","IBCEF77",7,0)
 S (IB1,IB2,IBZ,IBZ1,IBTRI)=""
"RTN","IBCEF77",8,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBZ",,IB399)
"RTN","IBCEF77",9,0)
 S IBZ1=$$ALLPTYP^IBCEF3(IB399)
"RTN","IBCEF77",10,0)
 F Z=1:1:3 S $P(IBZ1,U,Z)=$S($P(IBZ1,U,Z)="CH":1,1:"") S:$P(IBZ1,U,Z) IBTRI=1
"RTN","IBCEF77",11,0)
 S IBNET=$$NETID^IBCEP() ; netwrk id type
"RTN","IBCEF77",12,0)
 I $G(IBN) D
"RTN","IBCEF77",13,0)
 . S Z=0 F  S Z=$O(IBDST(IBPRNUM,IBPRTYP,Z)) Q:'Z  S IBID(+$P(IBDST(IBPRNUM,IBPRTYP,Z),U,9))=""
"RTN","IBCEF77",14,0)
 F  S IB1=$O(IBSRC(IB1)) Q:IB1=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",15,0)
 . N OK,IBSTLIC
"RTN","IBCEF77",16,0)
 . S IBSTLIC=""
"RTN","IBCEF77",17,0)
 . F  S IB2=$O(IBSRC(IB1,IB2)) Q:IB2=""  D  Q:IBN=IBLIMIT
"RTN","IBCEF77",18,0)
 . . S IBSVP=$P(IBSRC(IB1,IB2),U)
"RTN","IBCEF77",19,0)
 . . ; If ID overridden, output no others of this type
"RTN","IBCEF77",20,0)
 . . I $G(IBEXC),$P($G(IBSRC(IB1,IB2)),U,9)=IBEXC Q
"RTN","IBCEF77",21,0)
 . . ; Ck state of care/lic match if st lic#
"RTN","IBCEF77",22,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="0B" S OK=1 D  Q:'OK
"RTN","IBCEF77",23,0)
 . . . I +$$CAREST^IBCEP2A(IB399)'=$P(IBSRC(IB1,IB2),U,7) S IBSTLIC=1 Q
"RTN","IBCEF77",24,0)
 . . . I $G(IBSTLIC(0))'="" S OK=0 Q
"RTN","IBCEF77",25,0)
 . . . S IBSTLIC(0)=$G(IBSRC(IB1,IB2)),OK=0
"RTN","IBCEF77",26,0)
 . . ; Exclude SSN from sec ids unless required
"RTN","IBCEF77",27,0)
 . . I $P($G(IBSRC(IB1,IB2)),U,3)="SY" Q
"RTN","IBCEF77",28,0)
 . . ; Only 1 of each prov id type
"RTN","IBCEF77",29,0)
 . . Q:$D(IBID(+$P($G(IBSRC(IB1,IB2)),U,9)))
"RTN","IBCEF77",30,0)
 . . S IBN=IBN+1,IBID(+$P($G(IBSRC(IB1,IB2)),U,9))=""
"RTN","IBCEF77",31,0)
 . . S IBDST(IBPRNUM,IBPRTYP,IBN)=$G(IBSRC(IB1,IB2))
"RTN","IBCEF77",32,0)
 . I IBN'=IBLIMIT,'$G(IBSTLIC),$G(IBSTLIC(0))'="" S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=IBSTLIC(0)
"RTN","IBCEF77",33,0)
 ;I $$FT^IBCEF(IBIFN)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D
"RTN","IBCEF77",34,0)
 I $$FT^IBCEF(IB399)=2,$G(IBID(IBNET))="",IBTRI,$P(IBZ1,U,IBSEQ) D    ; WCJ 02/13/2006
"RTN","IBCEF77",35,0)
 . Q:$P(IBZ,U,IBPRTYP)=""
"RTN","IBCEF77",36,0)
 . ; here, no network id & TRICARE ins co.
"RTN","IBCEF77",37,0)
 . N Z
"RTN","IBCEF77",38,0)
 . S Z=+$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0)),Z=$P($G(^DGCR(399,IB399,"PRV",Z,0)),U,2)
"RTN","IBCEF77",39,0)
 . S IBN=IBN+1,IBDST(IBPRNUM,IBPRTYP,IBN)=Z_U_+$$POLICY^IBCEF(IB399,1,IBSEQ)_U_$P($G(^IBE(355.97,IBNET,0)),U,3)_U_$P(IBZ,U,IBPRTYP)_U_"0^0^^^"_IBNET
"RTN","IBCEF77",40,0)
 Q
"RTN","IBCEFG4")
0^48^B25221487^B23779170
"RTN","IBCEFG4",1,0)
IBCEFG4 ;ALB/TMP - OUTPUT FORMATTER MAINTENANCE - FORM ACTION PROCESSING ;22-JAN-96
"RTN","IBCEFG4",2,0)
 ;;2.0;INTEGRATED BILLING;**52,51,320**;21-MAR-94
"RTN","IBCEFG4",3,0)
 ;
"RTN","IBCEFG4",4,0)
ADDL ; Add a new local form
"RTN","IBCEFG4",5,0)
 N IBCT,IBDA,IBNAME,IBTYPE,IBBASE,IBNEW6,IBNEW7,IBOLD,IBOLD6,IBOLD7,LAST6,LAST7,DIR,X,Y,DD,DO,DIE,DR,DA,Z,Z0,Z1
"RTN","IBCEFG4",6,0)
 D FULL^VALM1
"RTN","IBCEFG4",7,0)
 S DIR("A")="Enter a new LOCAL FORM NAME: ",DIR(0)="FA^1:30^D @(""DUPNM""_$C(94)_""IBCEFG4"")",DIR("?")="Enter the name that you want your new local form to be referenced by" D ^DIR K DIR
"RTN","IBCEFG4",8,0)
 G:$D(DIRUT) ADDLQ
"RTN","IBCEFG4",9,0)
 S IBNAME=Y
"RTN","IBCEFG4",10,0)
ADDL1 S DIR("A")="Enter form number (must be > 9999): ",DIR(0)="NA^9999:999999999^D @(""DUPNUM""_$C(94)_""IBCEFG4"")"
"RTN","IBCEFG4",11,0)
 S DIR("?")="Enter the internal entry number that will be assigned to this form",DIR("B")=$O(^IBE(353,"A"),-1)+1 S:DIR("B")<10000 DIR("B")=10000 D ^DIR K DIR
"RTN","IBCEFG4",12,0)
 G:$D(DIRUT) ADDLQ
"RTN","IBCEFG4",13,0)
 S IBDA=+Y L +^IBE(353,IBDA):5 I '$T W !,*7,"Another user has taken this number ... please select a new one." G ADDL1
"RTN","IBCEFG4",14,0)
 K DD,DO
"RTN","IBCEFG4",15,0)
 S DIC="^IBE(353,",DIC(0)="L",DLAYGO=353,DIC("DR")="2.04////0;@10;2.01;I X="""" W !,*7,""MUST HAVE A BASE FILE!!"" S Y=""@10"";@20;2.02;I X="""" W !,*7,""MUST HAVE A FORMAT TYPE!!"" S Y=""@20""",DINUM=IBDA,X=IBNAME D FILE^DICN K DO,DD,DLAYGO
"RTN","IBCEFG4",16,0)
 S $P(^IBE(353,0),U,3)=$O(^IBE(353,9999),-1) L -^IBE(353,IBDA)
"RTN","IBCEFG4",17,0)
 G:Y<0 ADDLQ
"RTN","IBCEFG4",18,0)
 W !!,"WANT TO ASSOCIATE THIS FORM WITH A NATIONAL FORM" S %=2 D YN^DICN G:'(%+1#3) ADDL2
"RTN","IBCEFG4",19,0)
 K % W !
"RTN","IBCEFG4",20,0)
 S DIE="^IBE(353,",DR="2.05",DA=IBDA D ^DIE W !
"RTN","IBCEFG4",21,0)
 I '$P($G(^IBE(353,IBDA,2)),U,5) W !,*7,"FORM NOT ASSOCIATED WITH ANY NATIONAL FORM"
"RTN","IBCEFG4",22,0)
 G ADDLQ
"RTN","IBCEFG4",23,0)
ADDL2 W !!,"WANT TO COPY ALL FIELDS FROM AN EXISTING FORM" S %=2 D YN^DICN G:'(%+1#3) ADDLQ
"RTN","IBCEFG4",24,0)
 S DIC="^IBE(353,",DIC(0)="AEMQ",DIC("A")="Select FORM TO COPY FROM: ",DIC("S")="I $P($G(^(2)),U,5)="""",$P($G(^IBE(353,"_IBDA_",2)),U,2)=$P($G(^IBE(353,Y,2)),U,2),+$G(^IBE(353,"_IBDA_",2))=+$G(^IBE(353,Y,2)),Y'="_IBDA D ^DIC K DIC
"RTN","IBCEFG4",25,0)
 G:Y<0 ADDL2 S IBOLD=+Y
"RTN","IBCEFG4",26,0)
 W !,"ARE YOU SURE YOU WANT TO MAKE THIS COPY" S %=2 D YN^DICN G:'(%+1#3) ADDLQ
"RTN","IBCEFG4",27,0)
 W !!,"This may take a little while ... please be patient while I build your new form"
"RTN","IBCEFG4",28,0)
 ;
"RTN","IBCEFG4",29,0)
 ; IB*2*320
"RTN","IBCEFG4",30,0)
 ; Make sure files 364.6 and 364.7 are set-up to add new entries in the
"RTN","IBCEFG4",31,0)
 ; local number range (greater than 10000).  We cannot allow these local
"RTN","IBCEFG4",32,0)
 ; entries to get added into the national number range.
"RTN","IBCEFG4",33,0)
 F Z=364.6,364.7 I $P($G(^IBA(Z,0)),U,3)<10000 D
"RTN","IBCEFG4",34,0)
 . N IBLAST S IBLAST=$O(^IBA(Z," "),-1)
"RTN","IBCEFG4",35,0)
 . I IBLAST<10000 S IBLAST=10000
"RTN","IBCEFG4",36,0)
 . S $P(^IBA(Z,0),U,3)=IBLAST
"RTN","IBCEFG4",37,0)
 . Q
"RTN","IBCEFG4",38,0)
 ;
"RTN","IBCEFG4",39,0)
 K ^TMP("IBX",$J)
"RTN","IBCEFG4",40,0)
 S Z=0 F  S Z=$O(^IBA(364.6,"APAR",IBOLD,Z)) Q:'Z  S Z0=0 F  S Z0=$O(^IBA(364.6,"APAR",IBOLD,Z,Z0)) Q:'Z0  S ^TMP("IBX",$J,1,Z0)=Z,^TMP("IBX",$J,2,Z)=Z0 ;Save off overrides
"RTN","IBCEFG4",41,0)
 ;
"RTN","IBCEFG4",42,0)
 S LAST6=+$O(^DD(364.6,"GL",0,""),-1),LAST7=+$O(^DD(364.7,"GL",0,""),-1),IBCT=0
"RTN","IBCEFG4",43,0)
 S IBOLD6=0 F  S IBOLD6=$O(^IBA(364.6,"B",IBOLD,IBOLD6)) Q:'IBOLD6  S IBNEW6=$$NEW(6,IBDA) I IBNEW6 S IBCT=IBCT+1,Z=$G(^IBA(364.6,IBOLD6,0)) D
"RTN","IBCEFG4",44,0)
 .S $P(^IBA(364.6,IBNEW6,0),U,4,LAST6)=$P(Z,U,4,LAST6)
"RTN","IBCEFG4",45,0)
 .;
"RTN","IBCEFG4",46,0)
 .I $D(^TMP("IBX",$J,2,IBOLD6)) S Z0=^(IBOLD6) D  ;parent record
"RTN","IBCEFG4",47,0)
 ..I '$D(^TMP("IBX",$J,1,+Z0,1)) S ^TMP("IBX",$J,2,IBOLD6,1)=IBNEW6 Q
"RTN","IBCEFG4",48,0)
 ..S Z1=^TMP("IBX",$J,1,+Z0,1),$P(^IBA(364.6,Z1,0),U,3)=IBNEW6,DIK="^IBA(364.6,",DA=Z1,DIK(1)=.03 D EN^DIK K DIK
"RTN","IBCEFG4",49,0)
 .I $P(Z,U,3) D  ;child record
"RTN","IBCEFG4",50,0)
 ..I $G(^TMP("IBX",$J,2,$P(Z,U,3),1)) S $P(^IBA(364.6,IBNEW6,0),U,3)=^TMP("IBX",$J,2,$P(Z,U,3),1) Q
"RTN","IBCEFG4",51,0)
 ..S ^TMP("IBX",$J,1,IBOLD6,1)=IBNEW6
"RTN","IBCEFG4",52,0)
 .;
"RTN","IBCEFG4",53,0)
 .S DA=IBNEW6,DIK="^IBA(364.6," D IX1^DIK
"RTN","IBCEFG4",54,0)
 .S IBOLD7=$O(^IBA(364.7,"B",IBOLD6,"")) Q:'IBOLD7
"RTN","IBCEFG4",55,0)
 .S IBNEW7=$$NEW(7,IBNEW6) Q:'IBNEW7
"RTN","IBCEFG4",56,0)
 .S $P(^IBA(364.7,IBNEW7,0),U,3,LAST7)=$P(^IBA(364.7,IBOLD7,0),U,3,LAST7)
"RTN","IBCEFG4",57,0)
 .I $G(^IBA(364.7,IBOLD7,1))'="" S ^IBA(364.7,IBNEW7,1)=^IBA(364.7,IBOLD7,1)
"RTN","IBCEFG4",58,0)
 .S DA=IBNEW7,DIK="^IBA(364.7," D IX1^DIK
"RTN","IBCEFG4",59,0)
 K ^TMP("IBX",$J)
"RTN","IBCEFG4",60,0)
 W !!,"Field copy completed - ",IBCT," fields copied",!!
"RTN","IBCEFG4",61,0)
ADDLQ I $G(IBDA) D EDITL(IBDA),BLD^IBCEFG3
"RTN","IBCEFG4",62,0)
 S VALMBCK="R"
"RTN","IBCEFG4",63,0)
 Q
"RTN","IBCEFG4",64,0)
 ;
"RTN","IBCEFG4",65,0)
NEW(FILE,KEY) ; Add a new local entry to file 364.FILE whose .01 field is KEY
"RTN","IBCEFG4",66,0)
 ; RETURN IEN OF NEW ENTRY OR 0 IF NONE ADDED
"RTN","IBCEFG4",67,0)
 K DO,DD
"RTN","IBCEFG4",68,0)
 S DLAYGO=364_"."_FILE,DIC="^IBA(364."_FILE_",",DIC("DR")=".02////L",X=KEY,DIC(0)="L"
"RTN","IBCEFG4",69,0)
 D FILE^DICN K DIC,DD,DO,DLAYGO
"RTN","IBCEFG4",70,0)
 W "."
"RTN","IBCEFG4",71,0)
 Q $S(Y>0:+Y,1:0)
"RTN","IBCEFG4",72,0)
 ;
"RTN","IBCEFG4",73,0)
EDIT ; Edit a local form
"RTN","IBCEFG4",74,0)
 D FULL^VALM1
"RTN","IBCEFG4",75,0)
 D:$G(IBCEXDA) EDITL(IBCEXDA),BLDX^IBCEFG3
"RTN","IBCEFG4",76,0)
 S VALMBCK=$S($D(^IBE(353,+$G(IBCEXDA))):"R",1:"Q")
"RTN","IBCEFG4",77,0)
 Q
"RTN","IBCEFG4",78,0)
 ;
"RTN","IBCEFG4",79,0)
EDITL(DA) ; Edit a local form whose entry number is DA
"RTN","IBCEFG4",80,0)
 S DIE="^IBE(353,",DR="[IBCE ADD/EDIT LOCAL FORM]" D ^DIE
"RTN","IBCEFG4",81,0)
 Q
"RTN","IBCEFG4",82,0)
 ;
"RTN","IBCEFG4",83,0)
FFLDS ; Edit Local Form Fields
"RTN","IBCEFG4",84,0)
 D FULL^VALM1
"RTN","IBCEFG4",85,0)
 D EN^VALM("IBCE FORM FIELDS LIST")
"RTN","IBCEFG4",86,0)
 S VALMBCK="R"
"RTN","IBCEFG4",87,0)
 Q
"RTN","IBCEFG4",88,0)
 ; 
"RTN","IBCEFG4",89,0)
CHGFORM ; Select a new form without going back a screen
"RTN","IBCEFG4",90,0)
 N DIC,DA
"RTN","IBCEFG4",91,0)
 D FULL^VALM1
"RTN","IBCEFG4",92,0)
 S DIC="^IBE(353,",DIC("S")="I $P($G(^(2)),U,4)=0",DIC(0)="AEMQ" D ^DIC
"RTN","IBCEFG4",93,0)
 I Y>0 S IBCEXDA=+Y D HDRX^IBCEFG3,BLDX^IBCEFG3
"RTN","IBCEFG4",94,0)
 S VALMBCK="R"
"RTN","IBCEFG4",95,0)
 Q
"RTN","IBCEFG4",96,0)
 ;
"RTN","IBCEFG4",97,0)
FASTEXIT ; Sets a flag that system should be exited
"RTN","IBCEFG4",98,0)
 S VALMBCK="Q"
"RTN","IBCEFG4",99,0)
 I $G(VALMEVL) D  ;Ask this for all but the last level
"RTN","IBCEFG4",100,0)
 .D FULL^VALM1
"RTN","IBCEFG4",101,0)
 .K DIR S DIR(0)="Y",DIR("A")="Exit option entirely",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEFG4",102,0)
 .I $D(DIRUT)!(Y) S IBFASTXT=1
"RTN","IBCEFG4",103,0)
 Q
"RTN","IBCEFG4",104,0)
 ;
"RTN","IBCEFG4",105,0)
DUPNM ;
"RTN","IBCEFG4",106,0)
 I $D(^IBE(353,"B",X)) K X W !,*7,"A form with this name already exists"
"RTN","IBCEFG4",107,0)
 Q
"RTN","IBCEFG4",108,0)
 ;
"RTN","IBCEFG4",109,0)
DUPNUM ;
"RTN","IBCEFG4",110,0)
 I $D(^IBE(353,X)) K X W !,*7,"A form with this number already exists"
"RTN","IBCEFG4",111,0)
 Q
"RTN","IBCEFG7")
0^36^B51790981^B48661830
"RTN","IBCEFG7",1,0)
IBCEFG7 ;ALB/TMP - OUTPUT FORMATTER GENERIC FORM PROCESSING ;06-MAR-96
"RTN","IBCEFG7",2,0)
 ;;2.0;INTEGRATED BILLING;**52,84,96,51,137,191,320**;21-MAR-94
"RTN","IBCEFG7",3,0)
 ;
"RTN","IBCEFG7",4,0)
 Q
"RTN","IBCEFG7",5,0)
 ;
"RTN","IBCEFG7",6,0)
FORM(IBFORM,IBQUE,IBNOASK,IBQDT,ZTSK,IBABORT) ;For ien IBFORM, extract data using
"RTN","IBCEFG7",7,0)
 ;    output generater
"RTN","IBCEFG7",8,0)
 ; IBQUE = the output queue for transmitted forms or the printer queue
"RTN","IBCEFG7",9,0)
 ;          for printed output
"RTN","IBCEFG7",10,0)
 ; IBNOASK = flag that says user interaction for queuing is not needed
"RTN","IBCEFG7",11,0)
 ;           0 or null = ask, 1 = don't ask
"RTN","IBCEFG7",12,0)
 ; IBQDT = the date/time to queue the job (optional)
"RTN","IBCEFG7",13,0)
 ;
"RTN","IBCEFG7",14,0)
 ; Sets ZTSK only if job is queued
"RTN","IBCEFG7",15,0)
 ;
"RTN","IBCEFG7",16,0)
 ; IBABORT = output parameter which says user aborted forms output.
"RTN","IBCEFG7",17,0)
 ;           Pass by reference.  The $$QUEUE function returned false.
"RTN","IBCEFG7",18,0)
 ;
"RTN","IBCEFG7",19,0)
 N IBF2,IBTYP,POP,ZTIO,ZTRTN,ZTDESC,ZTSAVE,ZTREQ,ZTDTH,ZTREQ
"RTN","IBCEFG7",20,0)
 S IBTYP=$P($G(^IBE(353,IBFORM,2)),U,2),IBQUE=$G(IBQUE),IBABORT=0
"RTN","IBCEFG7",21,0)
 G:$S(IBTYP'="S":$G(^IBE(353,IBFORM,"EXT"))=""&($G(^IBE(353,+$P($G(^IBE(353,IBFORM,2)),U,5),"EXT"))=""),1:'$G(IBIFN)) FORMQ
"RTN","IBCEFG7",22,0)
 I IBTYP="P",IBQUE="" D DEV(IBFORM) G:$G(POP) FORMQ
"RTN","IBCEFG7",23,0)
 I IBTYP="T" D:$G(IBNOASK)  Q:$G(IBNOASK)  I '$$QUEUE(IBFORM) S:$O(^TMP("IBRESUBMIT",$J,0)) ^TMP("IBRESUBMIT",$J)="ABORT" S IBABORT=1 Q
"RTN","IBCEFG7",24,0)
 . S ZTRTN="FORMOUT^IBCEFG7",ZTIO="",ZTDESC="OUTPUT FORMATTER - FORM: "_$P($G(^IBE(353,IBFORM,0)),U),ZTSAVE("IB*")="",ZTDTH=$S($G(IBQDT):IBQDT,1:$$NOW^XLFDT())
"RTN","IBCEFG7",25,0)
 . S:$D(^TMP("IBRESUBMIT",$J)) ZTSAVE("^TMP(""IBRESUBMIT"",$J)")="",ZTSAVE("^TMP(""IBNOT"",$J)")="",ZTSAVE("^TMP(""IBRESUBMIT"",$J,")="",ZTSAVE("^TMP(""IBNOT"",$J,")=""
"RTN","IBCEFG7",26,0)
 . I $D(^TMP("IBSELX",$J)) S ZTSAVE("^TMP(""IBSELX"",$J,")="",ZTSAVE("^TMP(""IBSELX"",$J)")=""
"RTN","IBCEFG7",27,0)
 . S:'$G(DUZ) DUZ=.5
"RTN","IBCEFG7",28,0)
 . D ^%ZTLOAD
"RTN","IBCEFG7",29,0)
 I '$G(ZTSK) D FORMOUT
"RTN","IBCEFG7",30,0)
FORMQ Q
"RTN","IBCEFG7",31,0)
 ;
"RTN","IBCEFG7",32,0)
FORMOUT ; Queued job entrypoint - IBFORM needs to be defined
"RTN","IBCEFG7",33,0)
 ; IBQUE needs to be defined if using default transmission output
"RTN","IBCEFG7",34,0)
 N IB2,IBTYP,IBPAR
"RTN","IBCEFG7",35,0)
 K ^TMP("IBXDATA",$J)
"RTN","IBCEFG7",36,0)
 S ZTREQ="@"
"RTN","IBCEFG7",37,0)
 S IB2=$G(^IBE(353,IBFORM,2)),IBPAR=+$P(IB2,U,5),IBTYP=$P(IB2,U,2)
"RTN","IBCEFG7",38,0)
 ;
"RTN","IBCEFG7",39,0)
 ; Execute PRE-PROCESSOR
"RTN","IBCEFG7",40,0)
 I IBTYP'="S" D FPRE(IBFORM,IBPAR,.IBXERR)
"RTN","IBCEFG7",41,0)
 G:$G(IBXERR)'="" FOUTQ
"RTN","IBCEFG7",42,0)
 ;
"RTN","IBCEFG7",43,0)
 ; Extract records - this should include call(s) to $$EXTRACT^IBCEFG()
"RTN","IBCEFG7",44,0)
 I IBTYP'="S" D
"RTN","IBCEFG7",45,0)
 .I $G(^IBE(353,IBFORM,"EXT"))'="" X ^("EXT") ;Form extract
"RTN","IBCEFG7",46,0)
 .I $G(^IBE(353,IBFORM,"EXT"))="",$G(^IBE(353,IBPAR,"EXT"))'="" X ^("EXT") ;Parent form extract
"RTN","IBCEFG7",47,0)
 I IBTYP="S" D  G Q1
"RTN","IBCEFG7",48,0)
 .N PARAM,Z,Z0
"RTN","IBCEFG7",49,0)
 .S PARAM(1)="BILL-SEARCH",Z0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEFG7",50,0)
 .S Z=$P(Z0,U,21) S:Z="" Z="P" S PARAM(2)=$P($G(^DGCR(399,IBIFN,"I"_($F("PST",Z)-1))),U),PARAM(3)=$S($P(Z0,U,5)<3:"I",1:"O")
"RTN","IBCEFG7",51,0)
 .S Z=$$EXTRACT^IBCEFG(IBFORM,IBIFN,1,.PARAM)
"RTN","IBCEFG7",52,0)
 ;
"RTN","IBCEFG7",53,0)
 G:'$D(^TMP("IBXDATA",$J)) FOUTQ
"RTN","IBCEFG7",54,0)
 ;
"RTN","IBCEFG7",55,0)
 ; If an output routine exists, use it, otherwise use the generic ones
"RTN","IBCEFG7",56,0)
 I $G(^IBE(353,IBFORM,"OUT"))'="" X ^("OUT") G FOUTQ
"RTN","IBCEFG7",57,0)
 I $G(^IBE(353,IBFORM,"OUT"))="",$G(^IBE(353,IBPAR,"OUT"))'="" X ^("OUT") G FOUTQ
"RTN","IBCEFG7",58,0)
 ;
"RTN","IBCEFG7",59,0)
 I IBTYP="P" D PRINT(IBFORM) D:'$D(ZTQUEUED) ^%ZISC G FOUTQ
"RTN","IBCEFG7",60,0)
 I IBTYP="T" D:$G(IBQUE)'="" TRANSMIT(IBFORM,IBQUE) G FOUTQ
"RTN","IBCEFG7",61,0)
 ;
"RTN","IBCEFG7",62,0)
FOUTQ D FPOST(IBFORM,IBPAR,.IBXERR) ; Execute POST-PROCESSOR, if any
"RTN","IBCEFG7",63,0)
 K ^TMP("IBXDATA",$J),^TMP("IBXEDIT",$J)
"RTN","IBCEFG7",64,0)
Q1 Q
"RTN","IBCEFG7",65,0)
 ;
"RTN","IBCEFG7",66,0)
PRINT(IBFORM) ; Print data from extract global for form IBFORM
"RTN","IBCEFG7",67,0)
 ; Extract records - this should include call(s) to $$EXTRACT^IBCEFG()
"RTN","IBCEFG7",68,0)
 N IB1,IB2,IB3,IBREC
"RTN","IBCEFG7",69,0)
 ;LOOP THROUGH RECORD/PAGE/LINE/COL
"RTN","IBCEFG7",70,0)
 S IBREC="" F  S IBREC=$O(^TMP("IBXDATA",$J,IBREC)) Q:IBREC=""  D  ;Rec
"RTN","IBCEFG7",71,0)
 . ;Page/line
"RTN","IBCEFG7",72,0)
 . F IB1=1:1:+$O(^TMP("IBXDATA",$J,IBREC,""),-1) W:IB1>1 @IOF W ?0 F IB2=1:1:+$O(^TMP("IBXDATA",$J,IBREC,IB1,""),-1) W:IB2>1 ! S IB3="" D
"RTN","IBCEFG7",73,0)
 .. ; Column
"RTN","IBCEFG7",74,0)
 .. F  S IB3=$O(^TMP("IBXDATA",$J,IBREC,IB1,IB2,IB3)) Q:IB3=""  W ?(IB3-1),^(IB3)
"RTN","IBCEFG7",75,0)
 . ;Only print form feed if more records to print - not on last record
"RTN","IBCEFG7",76,0)
 . I $O(^TMP("IBXDATA",$J,IBREC))'="" W @IOF
"RTN","IBCEFG7",77,0)
 Q
"RTN","IBCEFG7",78,0)
 ;
"RTN","IBCEFG7",79,0)
TRANSMIT(IBFORM,IBQUE) ; Send data from extract global to queue IBQUE
"RTN","IBCEFG7",80,0)
 ;IBFORM = ien of the form to be transmitted (required)
"RTN","IBCEFG7",81,0)
 N IB1,IB2,IB3,IBREC,IBOUT,IBCT,IBSUB,Z,XMDUZ,XMSUBJ,XMBODY,XMTO
"RTN","IBCEFG7",82,0)
 K ^TMP("IBXTXMT",$J),^TMP("IBX",$J)
"RTN","IBCEFG7",83,0)
 Q:$G(IBQUE)=""
"RTN","IBCEFG7",84,0)
 ;
"RTN","IBCEFG7",85,0)
 S IBDELIM=$P($G(^IBE(353,+$S($P($G(^IBE(353,IBFORM,2)),U,5):$P(^(2),U,5),1:IBFORM),2)),U,7)
"RTN","IBCEFG7",86,0)
 S:IBDELIM="" IBDELIM="^"
"RTN","IBCEFG7",87,0)
 ;Loop through record/page/line/column
"RTN","IBCEFG7",88,0)
 S IBREC="",(IBSIZE,IBCT)=0,IBMSG=1
"RTN","IBCEFG7",89,0)
 F  S IBREC=$O(^TMP("IBXDATA",$J,IBREC)) Q:IBREC=""  D
"RTN","IBCEFG7",90,0)
 .S ^TMP("IBX",$J,IBREC)=IBCT
"RTN","IBCEFG7",91,0)
 .S IB1="" F  S IB1=$O(^TMP("IBXDATA",$J,IBREC,IB1)) Q:IB1=""  D
"RTN","IBCEFG7",92,0)
 ..S (IB2,IBOUT)=""
"RTN","IBCEFG7",93,0)
 ..F  S IB2=$O(^TMP("IBXDATA",$J,IBREC,IB1,IB2)) D:IB2=""&$L(IBOUT) MSG(IBREC,IBOUT,.IBMSG,.IBSIZE,.IBCT) Q:IB2=""  D
"RTN","IBCEFG7",94,0)
 ...S IB3="" F  S IB3=$O(^TMP("IBXDATA",$J,IBREC,IB1,IB2,IB3)) Q:IB3=""  S IBP=^(IB3) S:IBP?.E1L.E IBP=$$UP^XLFSTR(IBP) S $P(IBOUT,IBDELIM,IB3)=IBP
"RTN","IBCEFG7",95,0)
 ;
"RTN","IBCEFG7",96,0)
 ;Send mail message(s) for extract
"RTN","IBCEFG7",97,0)
 S XMDUZ=DUZ,XMTO(IBQUE)="",IBSUB="OUTPUT FORMATTER: "_$P($G(^IBE(353,IBFORM,0)),U)
"RTN","IBCEFG7",98,0)
 S Z="" F  S Z=$O(^TMP("IBXTXMT",$J,Z)) Q:'Z  S XMBODY="^TMP(""IBXTXMT"","_$J_","_Z_")",XMSUBJ=IBSUB_" ("_Z_")" D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEFG7",99,0)
 ;
"RTN","IBCEFG7",100,0)
 K ^TMP("IBXTXMT",$J),^TMP("IBX",$J)
"RTN","IBCEFG7",101,0)
 Q
"RTN","IBCEFG7",102,0)
 ;
"RTN","IBCEFG7",103,0)
MSG(IBREC,LINE,MSG,SIZE,CT) ; Set up global for transmission line
"RTN","IBCEFG7",104,0)
 ; IBREC = record number being processed
"RTN","IBCEFG7",105,0)
 ; LINE = actual text to be output in mail message line
"RTN","IBCEFG7",106,0)
 ; MSG  = the message seq # to output this record in (pass by reference)
"RTN","IBCEFG7",107,0)
 ; SIZE = current size of the message (pass by reference)
"RTN","IBCEFG7",108,0)
 ; CT   = the last line # in message for the text (pass by reference)
"RTN","IBCEFG7",109,0)
 N Z,Z0,LLEN
"RTN","IBCEFG7",110,0)
 S LLEN=$L(LINE)
"RTN","IBCEFG7",111,0)
 I (LLEN+SIZE)>30000 D
"RTN","IBCEFG7",112,0)
 .Q:'$G(^TMP("IBX",$J,IBREC))  ;Record itself is > 30000 - let it go
"RTN","IBCEFG7",113,0)
 .S (SIZE,CT)=0,Z=$G(^TMP("IBX",$J,IBREC)),^(IBREC)=0
"RTN","IBCEFG7",114,0)
 .F  S Z=$O(^TMP("IBXTXMT",$J,MSG,Z)) Q:'Z  S CT=CT+1,Z0=^(Z),^TMP("IBXTXMT",$J,MSG+1,CT)=Z0,SIZE=SIZE+$L(Z0) K ^TMP("IBXTXMT",$J,MSG,Z)
"RTN","IBCEFG7",115,0)
 .S MSG=MSG+1
"RTN","IBCEFG7",116,0)
 S CT=CT+1,^TMP("IBXTXMT",$J,MSG,CT)=LINE,SIZE=SIZE+LLEN
"RTN","IBCEFG7",117,0)
 Q
"RTN","IBCEFG7",118,0)
 ;
"RTN","IBCEFG7",119,0)
DEV(IBFORM,NOQ) ;
"RTN","IBCEFG7",120,0)
 N IBFTYPE
"RTN","IBCEFG7",121,0)
 S:'$G(NOQ) %ZIS="Q" S %ZIS("A")="Output Device: "
"RTN","IBCEFG7",122,0)
 S %ZIS("B")=$P($G(^IBE(353,IBFORM,0)),"^",2)
"RTN","IBCEFG7",123,0)
 D ^%ZIS
"RTN","IBCEFG7",124,0)
 G:POP DEVQ
"RTN","IBCEFG7",125,0)
 I $D(IO("Q")) D  G DEVQ
"RTN","IBCEFG7",126,0)
 .S ZTRTN="FORMOUT^IBCEFG7",ZTDESC="PRINT FORM: "_$P($G(^IBE(353,IBFORM,0)),U),ZTSAVE("IB*")="" K ZTIO
"RTN","IBCEFG7",127,0)
 .I $D(^TMP("IBQONE",$J)) D
"RTN","IBCEFG7",128,0)
 ..S IBJ="",IBFTYPE="IBCFP"_$S($P($G(^IBE(353,IBFORM,2)),U,5):$P(^(2),U,5),1:IBFORM)
"RTN","IBCEFG7",129,0)
 ..S ZTSAVE("^XTMP(IBFTYPE,$J,")=""
"RTN","IBCEFG7",130,0)
 .D ^%ZTLOAD K IO("Q") D HOME^%ZIS
"RTN","IBCEFG7",131,0)
 .I $G(IBFTYPE)'="" K ^XTMP(IBFTYPE,$J)
"RTN","IBCEFG7",132,0)
 .I $D(ZTSK) W !!,"This job has been queued.  The task number is "_ZTSK_"."
"RTN","IBCEFG7",133,0)
 U IO
"RTN","IBCEFG7",134,0)
DEVQ Q
"RTN","IBCEFG7",135,0)
 ;
"RTN","IBCEFG7",136,0)
QUEUE(IBFORM) ; Ask to queue transmission
"RTN","IBCEFG7",137,0)
 N Y,DIR,OKAY
"RTN","IBCEFG7",138,0)
 S OKAY=1
"RTN","IBCEFG7",139,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to queue this transmission" W !
"RTN","IBCEFG7",140,0)
 D ^DIR K DIR
"RTN","IBCEFG7",141,0)
 I $D(DTOUT)!$D(DUOUT) S OKAY=0 G QUEQ
"RTN","IBCEFG7",142,0)
 I 'Y D  G QUEQ
"RTN","IBCEFG7",143,0)
 .S DIR(0)="Y",DIR("B")="YES",DIR("A")="Do you want to run this job without queuing it now"
"RTN","IBCEFG7",144,0)
 .W ! D ^DIR K DIR
"RTN","IBCEFG7",145,0)
 .I 'Y S OKAY=0
"RTN","IBCEFG7",146,0)
 ; - queue job to run
"RTN","IBCEFG7",147,0)
 W !!,"Please enter the date and time to execute this job...",!
"RTN","IBCEFG7",148,0)
 S ZTRTN="FORMOUT^IBCEFG7",ZTIO="",ZTDESC="OUTPUT FORMATTER - FORM: "_$P($G(^IBE(353,IBFORM,0)),U),ZTSAVE("IB*")=""
"RTN","IBCEFG7",149,0)
 S:$D(^TMP("IBRESUBMIT",$J)) ZTSAVE("^TMP(""IBRESUBMIT"",$J)")="",ZTSAVE("^TMP(""IBNOT"",$J)")="",ZTSAVE("^TMP(""IBRESUBMIT"",$J,")="",ZTSAVE("^TMP(""IBNOT"",$J,")=""
"RTN","IBCEFG7",150,0)
 I $D(^TMP("IBSELX",$J)) S ZTSAVE("^TMP(""IBSELX"",$J,")="",ZTSAVE("^TMP(""IBSELX"",$J)")=""
"RTN","IBCEFG7",151,0)
 D ^%ZTLOAD
"RTN","IBCEFG7",152,0)
 I $G(ZTSK) W !!,"This job has been queued.  The task number is "_ZTSK_"."
"RTN","IBCEFG7",153,0)
QUEQ Q OKAY
"RTN","IBCEFG7",154,0)
 ;
"RTN","IBCEFG7",155,0)
FPRE(IBFORM,IBPAR,IBXERR) ; Executes pre-processor
"RTN","IBCEFG7",156,0)
 I $G(^IBE(353,IBFORM,"FPRE"))'="" X ^("FPRE") ;Form pre-processor
"RTN","IBCEFG7",157,0)
 I $G(^IBE(353,IBFORM,"FPRE"))="",$G(^IBE(353,IBPAR,"FPRE"))'="" X ^("FPRE") ;Parent form pre-processor
"RTN","IBCEFG7",158,0)
 Q
"RTN","IBCEFG7",159,0)
 ;
"RTN","IBCEFG7",160,0)
FPOST(IBFORM,IBPAR,IBXERR) ; Executes post-processor
"RTN","IBCEFG7",161,0)
 I $G(^IBE(353,IBFORM,"FPOST"))'="" X ^("FPOST") ;Form post-processor
"RTN","IBCEFG7",162,0)
 I $G(^IBE(353,IBFORM,"FPOST"))="",$G(^IBE(353,IBPAR,"FPOST"))'="" X ^("FPOST") ;Parent form post-processor
"RTN","IBCEFG7",163,0)
 Q
"RTN","IBCEFG7",164,0)
 ;
"RTN","IBCEFG7",165,0)
FMFLD(IBDA) ;Return the file#field for fileman field referenced as a data
"RTN","IBCEFG7",166,0)
 ; element in file 364.7's IBDA entry.
"RTN","IBCEFG7",167,0)
 N Z,Z0,ND0
"RTN","IBCEFG7",168,0)
 S Z0=+$P($G(^IBA(364.7,IBDA,0)),U,3),ND0=$G(^IBA(364.5,+Z0,0))
"RTN","IBCEFG7",169,0)
 I $P(ND0,U,3)'="F"!($P(ND0,U,6)="") S Z="" G FLDQ
"RTN","IBCEFG7",170,0)
 S Z=$P(ND0,U,5),Z1=$P(ND0,U,6)
"RTN","IBCEFG7",171,0)
 I Z1[":" D  ;Navigation
"RTN","IBCEFG7",172,0)
 . S Z2=$O(^DD(+Z,"B",$P(Z1,":"),"")) Q:'Z2
"RTN","IBCEFG7",173,0)
 . S Z=+$P($P($G(^DD(399,Z2,0)),U,2),"P",2)
"RTN","IBCEFG7",174,0)
 . I Z S Z1=$P(Z1,":",2)
"RTN","IBCEFG7",175,0)
 I Z S Z=Z_"#"_$O(^DD(+Z,"B",Z1,""))
"RTN","IBCEFG7",176,0)
FLDQ Q Z
"RTN","IBCEFG7",177,0)
 ;
"RTN","IBCEM3")
0^17^B11260075^B10722375
"RTN","IBCEM3",1,0)
IBCEM3 ;ALB/TMP - IB ELECTRONIC MESSAGE MGMNT ACTIONS ;18-AUG-1999
"RTN","IBCEM3",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,320**;21-MAR-1994
"RTN","IBCEM3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEM3",4,0)
 ;
"RTN","IBCEM3",5,0)
CANCEL(IBDA,IBIFN,IB364) ; Generic cancel bill action
"RTN","IBCEM3",6,0)
 ; IBDA = entry selected from list (pass by reference-value is returned)
"RTN","IBCEM3",7,0)
 ; IBIFN = ien of bill entry in file 399
"RTN","IBCEM3",8,0)
 ; IB364 = ien of transmitted bill entry in file 364
"RTN","IBCEM3",9,0)
 ;
"RTN","IBCEM3",10,0)
 N Y,IBCAN,IBCE,IBTDA,IB0
"RTN","IBCEM3",11,0)
 I 'IBDA!'IBIFN S IBDA="" G CANCELQ
"RTN","IBCEM3",12,0)
 I '$$CANCKS("C",IBIFN) S IBDA="" G CANCELQ
"RTN","IBCEM3",13,0)
 ;
"RTN","IBCEM3",14,0)
 S (IBCAN,IBCE("EDI"))=1,Y=IBIFN
"RTN","IBCEM3",15,0)
 I $G(IBCEAUTO) S IBCAN=2
"RTN","IBCEM3",16,0)
 N IBQUIT
"RTN","IBCEM3",17,0)
 D NOPTF^IBCC S:$P($G(^DGCR(399,IBIFN,0)),U,13)'=7 IBDA=""
"RTN","IBCEM3",18,0)
 I '$G(IBCEAUTO) D PAUSE^VALM1
"RTN","IBCEM3",19,0)
CANCELQ Q
"RTN","IBCEM3",20,0)
 ;
"RTN","IBCEM3",21,0)
CANCKS(FUNC,IBIFN)      ; Check validity of cancel or cancel/clone function
"RTN","IBCEM3",22,0)
 ;FUNC = "C" for cancel "CC" for cancel/clone
"RTN","IBCEM3",23,0)
 ;IBIFN = bill internal entry #
"RTN","IBCEM3",24,0)
 N ERR
"RTN","IBCEM3",25,0)
 S ERR=""
"RTN","IBCEM3",26,0)
 I '$$DISP(IBIFN,"cancel"_$S(FUNC="C":"",1:"/clone")) S ERR="<No action taken>"
"RTN","IBCEM3",27,0)
 I ERR'="" W !,*7,ERR D PAUSE^VALM1
"RTN","IBCEM3",28,0)
 Q (ERR="")
"RTN","IBCEM3",29,0)
 ;
"RTN","IBCEM3",30,0)
EBILL(IBDA,IBIFN,IB364) ;Generic edit bill action
"RTN","IBCEM3",31,0)
 N IBAC,IBBDA,IBTDA,IB0,IBV,DFN,IBDA1,IBELOOP,IB399,IBDAB,IBHOLD,IB399TX,IBNEED,IBPOPOUT,IBTXPRT
"RTN","IBCEM3",32,0)
 S IB399=$G(^DGCR(399,+IBIFN,0))
"RTN","IBCEM3",33,0)
 S IB399TX=$G(^DGCR(399,+IBIFN,"TX")),IBNEED=$$NEEDMRA^IBEFUNC(IBIFN)
"RTN","IBCEM3",34,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,13)'<3 D  G EBILLQ
"RTN","IBCEM3",35,0)
 . N DIR
"RTN","IBCEM3",36,0)
 . S DIR(0)="EA",DIR("A",1)="You cannot edit a bill with a status of "_$$EXPAND^IBTRE(399,.13,$P($G(^DGCR(399,IBIFN,0)),U,13))
"RTN","IBCEM3",37,0)
 . S DIR("A")="Enter RETURN to continue or '^' to exit:"
"RTN","IBCEM3",38,0)
 . D ^DIR
"RTN","IBCEM3",39,0)
 . S IBDA=""
"RTN","IBCEM3",40,0)
 I '$$DISP(IBIFN,"edit") S IBDA="" G EBILLQ
"RTN","IBCEM3",41,0)
 S IBAC=1,DFN=$P($G(^DGCR(399,IBIFN,0)),U,2),IBV=0
"RTN","IBCEM3",42,0)
 S IBHOLD("IBIFN")=IBIFN,IBHOLD("IBDA")=$G(IBDA)
"RTN","IBCEM3",43,0)
 ; Warning - do not use IBH variable when calling the following routine
"RTN","IBCEM3",44,0)
 D ST^IBCB,ENS^%ZISS
"RTN","IBCEM3",45,0)
 D:$D(IBIFN) PAUSE^VALM1
"RTN","IBCEM3",46,0)
 S IBIFN=IBHOLD("IBIFN"),IBDA=IBHOLD("IBDA")
"RTN","IBCEM3",47,0)
 I $S(IBNEED:$P($G(^DGCR(399,IBIFN,0)),U,13)'=2,1:$P($G(^DGCR(399,IBIFN,0)),U,13)'=3) S IBDA=""
"RTN","IBCEM3",48,0)
 I IBDA D
"RTN","IBCEM3",49,0)
 . S $P(^DGCR(399,IBIFN,"S"),U,10,11)=(DT_U_DUZ)
"RTN","IBCEM3",50,0)
 . S DIK="^DGCR(399,",DA=IBIFN F DIK(1)=10,11 D EN1^DIK
"RTN","IBCEM3",51,0)
 . D UPDEDI^IBCEM(IB364,"E")
"RTN","IBCEM3",52,0)
EBILLQ Q
"RTN","IBCEM3",53,0)
 ;
"RTN","IBCEM3",54,0)
DISP(IBIFN,FUNC,DISP,IBDEF,DIRUT)   ;Display bill detail
"RTN","IBCEM3",55,0)
 ;  Returns 1 if function should continue, 0 if function should not
"RTN","IBCEM3",56,0)
 ; IBIFN = Bill #
"RTN","IBCEM3",57,0)
 ; FUNC = Text (lower case) to describe function to perform
"RTN","IBCEM3",58,0)
 ; DISP = flag = 1 for return data, no display
"RTN","IBCEM3",59,0)
 ;               format:  1^BILL #^PATIENT^BILL TYPE^DATES
"RTN","IBCEM3",60,0)
 ; IBDEF = Default answer for Yes/No question here (1=Yes)
"RTN","IBCEM3",61,0)
 ; DIRUT = output parameter is defined if passed by reference,
"RTN","IBCEM3",62,0)
 ;       = this will be defined if the user enters a leading up-arrow
"RTN","IBCEM3",63,0)
 ;       = or times out or enters a null response
"RTN","IBCEM3",64,0)
 ;
"RTN","IBCEM3",65,0)
 ; Function returns Y and DIRUT - used by IBCEMCA2 - DO NOT NEW THESE
"RTN","IBCEM3",66,0)
 ;
"RTN","IBCEM3",67,0)
 N IBB0,IBBU,IBNO,STAT,DIR,DTOUT,DUOUT,IBV
"RTN","IBCEM3",68,0)
 S IBB0=$G(^DGCR(399,IBIFN,0)),IBBU=$G(^("U")),IBNO=$P(IBB0,U)
"RTN","IBCEM3",69,0)
 S IBV(1)=$P($G(^DPT(+$P(IBB0,U,2),0)),U)_$S($P($G(^(0)),U,9)'="":" ("_$P(^(0),U,9)_")",1:"")
"RTN","IBCEM3",70,0)
 S IBV(2)=$$EXPAND^IBTRE(399,.05,$P(IBB0,U,5))
"RTN","IBCEM3",71,0)
 S IBV(3)=$$EXPAND^IBTRE(399,151,$P(IBBU,U))_" - "_$$EXPAND^IBTRE(399,151,$P(IBBU,U,2))
"RTN","IBCEM3",72,0)
 ;
"RTN","IBCEM3",73,0)
 I '$G(DISP) D  G DISPQ
"RTN","IBCEM3",74,0)
 . S (DIR("A",1),DIR("A",6))=" ",STAT=1
"RTN","IBCEM3",75,0)
 . S DIR("A",2)="    Bill #: "_IBNO
"RTN","IBCEM3",76,0)
 . S DIR("A",3)="   Patient: "_IBV(1)
"RTN","IBCEM3",77,0)
 . S DIR("A",4)=" Bill Type: "_IBV(2)
"RTN","IBCEM3",78,0)
 . S DIR("A",5)="Bill Dates: "_IBV(3)
"RTN","IBCEM3",79,0)
 . S DIR("A")="Are you sure this is the bill you want to "_FUNC_"? "
"RTN","IBCEM3",80,0)
 . S DIR("B")="NO"
"RTN","IBCEM3",81,0)
 . I $G(IBDEF) S DIR("B")="Yes"
"RTN","IBCEM3",82,0)
 . S DIR(0)="YA" D ^DIR K DIR
"RTN","IBCEM3",83,0)
 . I $D(DTOUT)!$D(DUOUT)!'Y S STAT=0
"RTN","IBCEM3",84,0)
 S STAT="1^"_IBNO_U_IBV(1)_U_IBV(2)_U_IBV(3)
"RTN","IBCEM3",85,0)
DISPQ ;
"RTN","IBCEM3",86,0)
 Q STAT
"RTN","IBCEM3",87,0)
 ;
"RTN","IBCEMCA")
0^13^B50663666
"RTN","IBCEMCA",1,0)
IBCEMCA ;ALB/ESG - Multiple CSA Message Management ;20-SEP-2005
"RTN","IBCEMCA",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCEMCA",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMCA",4,0)
 ;
"RTN","IBCEMCA",5,0)
 Q
"RTN","IBCEMCA",6,0)
 ;
"RTN","IBCEMCA",7,0)
SCREEN ; Change the message selection criteria
"RTN","IBCEMCA",8,0)
 NEW DIC,DIR,DIROUT,DIRUT,DTOUT,DUOUT,EDI,IBDONE,IBPAYER,INST,PROF,RESET,X,Y
"RTN","IBCEMCA",9,0)
 S VALMBCK="R",RESET=0
"RTN","IBCEMCA",10,0)
 D FULL^VALM1
"RTN","IBCEMCA",11,0)
 W !
"RTN","IBCEMCA",12,0)
 S DIR(0)="Y",DIR("A")="Do you want to change the MCS selection criteria"
"RTN","IBCEMCA",13,0)
 S DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEMCA",14,0)
 I 'Y G SCREENX          ; get out; no list rebuild
"RTN","IBCEMCA",15,0)
 K ^TMP($J,"IBCEMCA")    ; kill selection area and rebuild below
"RTN","IBCEMCA",16,0)
 K VALMHDR               ; recalculate totals in header area
"RTN","IBCEMCA",17,0)
 S VALMBG=1              ; begin new list display at line 1
"RTN","IBCEMCA",18,0)
 ;
"RTN","IBCEMCA",19,0)
Q1 ; payer
"RTN","IBCEMCA",20,0)
 W !!,"PAYER SELECTION:"
"RTN","IBCEMCA",21,0)
 S IBPAYER=""
"RTN","IBCEMCA",22,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEMCA",23,0)
 S DIR("A")="Include All Payers or Selected Payers? "
"RTN","IBCEMCA",24,0)
 S DIR("B")="All"
"RTN","IBCEMCA",25,0)
 D ^DIR K DIR
"RTN","IBCEMCA",26,0)
 I $D(DIROUT)!$D(DIRUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",27,0)
 I Y="A" K ^TMP($J,"IBCEMCA","INS") G Q2
"RTN","IBCEMCA",28,0)
 W !
"RTN","IBCEMCA",29,0)
 S DIR(0)="Y"
"RTN","IBCEMCA",30,0)
 S DIR("A")="   Include all payers with the same electronic Payer ID"
"RTN","IBCEMCA",31,0)
 S DIR("B")="Yes"
"RTN","IBCEMCA",32,0)
 D ^DIR K DIR
"RTN","IBCEMCA",33,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild the list
"RTN","IBCEMCA",34,0)
 I $D(DIRUT) G Q1
"RTN","IBCEMCA",35,0)
 S IBPAYER=Y
"RTN","IBCEMCA",36,0)
 W !
"RTN","IBCEMCA",37,0)
 ;
"RTN","IBCEMCA",38,0)
 S IBDONE=0
"RTN","IBCEMCA",39,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",40,0)
 . S DIC=36,DIC(0)="AEMQ",DIC("A")="   Select Insurance Company: "
"RTN","IBCEMCA",41,0)
 . I $O(^TMP($J,"IBCEMCA","INS",1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEMCA",42,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEMCA",43,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCEMCA",44,0)
 . I X="^^" S IBDONE=2 Q       ; user entered ^^
"RTN","IBCEMCA",45,0)
 . I +Y'>0 S IBDONE=1 Q        ; user is done
"RTN","IBCEMCA",46,0)
 . S ^TMP($J,"IBCEMCA","INS",1,+Y)=$P(Y,U,2)
"RTN","IBCEMCA",47,0)
 . I 'IBPAYER Q
"RTN","IBCEMCA",48,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEMCA",49,0)
 . S PROF=$P(EDI,U,2)
"RTN","IBCEMCA",50,0)
 . S INST=$P(EDI,U,4)
"RTN","IBCEMCA",51,0)
 . I PROF'="",PROF'["PRNT" S ^TMP($J,"IBCEMCA","INS",2,PROF,+Y)=""
"RTN","IBCEMCA",52,0)
 . I INST'="",INST'["PRNT" S ^TMP($J,"IBCEMCA","INS",2,INST,+Y)=""
"RTN","IBCEMCA",53,0)
 . Q
"RTN","IBCEMCA",54,0)
 ;
"RTN","IBCEMCA",55,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",56,0)
 ;
"RTN","IBCEMCA",57,0)
 I '$O(^TMP($J,"IBCEMCA","INS",1,"")) D  G Q1
"RTN","IBCEMCA",58,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEMCA",59,0)
 . Q
"RTN","IBCEMCA",60,0)
 ;
"RTN","IBCEMCA",61,0)
Q2 ; division
"RTN","IBCEMCA",62,0)
 W !!,"DIVISION SELECTION:"
"RTN","IBCEMCA",63,0)
 S DIR(0)="SA^A:All Divisions;S:Selected Divisions"
"RTN","IBCEMCA",64,0)
 S DIR("A")="Include All Divisions or Selected Divisions? "
"RTN","IBCEMCA",65,0)
 S DIR("B")="All"
"RTN","IBCEMCA",66,0)
 D ^DIR K DIR
"RTN","IBCEMCA",67,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",68,0)
 I $D(DIRUT) G Q1
"RTN","IBCEMCA",69,0)
 I Y="A" K ^TMP($J,"IBCEMCA","DIV") G Q3
"RTN","IBCEMCA",70,0)
 ;
"RTN","IBCEMCA",71,0)
 W !
"RTN","IBCEMCA",72,0)
 S IBDONE=0
"RTN","IBCEMCA",73,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",74,0)
 . S DIC=40.8,DIC(0)="AEMQ",DIC("A")="   Select Division: "
"RTN","IBCEMCA",75,0)
 . I $O(^TMP($J,"IBCEMCA","DIV","")) S DIC("A")="   Select Another Division: "
"RTN","IBCEMCA",76,0)
 . D ^DIC K DIC                ; lookup
"RTN","IBCEMCA",77,0)
 . I X="^^" S IBDONE=2 Q       ; user entered ^^
"RTN","IBCEMCA",78,0)
 . I +Y'>0 S IBDONE=1 Q        ; user is done
"RTN","IBCEMCA",79,0)
 . S ^TMP($J,"IBCEMCA","DIV",+Y)=$P(Y,U,2)
"RTN","IBCEMCA",80,0)
 . Q
"RTN","IBCEMCA",81,0)
 ;
"RTN","IBCEMCA",82,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",83,0)
 ;
"RTN","IBCEMCA",84,0)
 I '$O(^TMP($J,"IBCEMCA","DIV","")) D  G Q2
"RTN","IBCEMCA",85,0)
 . W *7,!!?3,"No divisions have been selected.  Please try again."
"RTN","IBCEMCA",86,0)
 . Q
"RTN","IBCEMCA",87,0)
 ;
"RTN","IBCEMCA",88,0)
Q3 ; message text
"RTN","IBCEMCA",89,0)
 W !!,"ERROR MESSAGE TEXT SELECTION:"
"RTN","IBCEMCA",90,0)
 S DIR(0)="SA^A:All Error Message Text;S:Select Error Message Text"
"RTN","IBCEMCA",91,0)
 S DIR("A")="Include All Error Message Text or Select Error Message Text? "
"RTN","IBCEMCA",92,0)
 S DIR("B")="All"
"RTN","IBCEMCA",93,0)
 D ^DIR K DIR
"RTN","IBCEMCA",94,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",95,0)
 I $D(DIRUT) G Q2
"RTN","IBCEMCA",96,0)
 I Y="A" K ^TMP($J,"IBCEMCA","TEXT") G Q4
"RTN","IBCEMCA",97,0)
 ;
"RTN","IBCEMCA",98,0)
 W !
"RTN","IBCEMCA",99,0)
 S IBDONE=0
"RTN","IBCEMCA",100,0)
 F  D  Q:IBDONE
"RTN","IBCEMCA",101,0)
 . S DIR(0)="FAOU"
"RTN","IBCEMCA",102,0)
 . S DIR("A")="   Text String: "
"RTN","IBCEMCA",103,0)
 . I $O(^TMP($J,"IBCEMCA","TEXT",""))'="" S DIR("A")="   Another Text String: "
"RTN","IBCEMCA",104,0)
 . D ^DIR K DIR                ; user response
"RTN","IBCEMCA",105,0)
 . I $D(DIROUT) S IBDONE=2 Q   ; user entered ^^
"RTN","IBCEMCA",106,0)
 . I $D(DIRUT) S IBDONE=1 Q    ; leading up-arrow or time-out
"RTN","IBCEMCA",107,0)
 . I Y="" S IBDONE=1 Q         ; null response
"RTN","IBCEMCA",108,0)
 . S ^TMP($J,"IBCEMCA","TEXT",Y)=""
"RTN","IBCEMCA",109,0)
 . Q
"RTN","IBCEMCA",110,0)
 ;
"RTN","IBCEMCA",111,0)
 I IBDONE=2 S RESET=1 G QX      ;kill scratch and rebuild the list
"RTN","IBCEMCA",112,0)
 ;
"RTN","IBCEMCA",113,0)
 I $O(^TMP($J,"IBCEMCA","TEXT",""))="" D  G Q3
"RTN","IBCEMCA",114,0)
 . W *7,!!?3,"No text has been selected.  Please try again."
"RTN","IBCEMCA",115,0)
 . Q
"RTN","IBCEMCA",116,0)
 ;
"RTN","IBCEMCA",117,0)
Q4 ; date range for when message received
"RTN","IBCEMCA",118,0)
 W !!,"DATE MESSAGE RECEIVED SELECTION:"
"RTN","IBCEMCA",119,0)
 S DIR(0)="SA^A:All Dates;S:Select Date Range"
"RTN","IBCEMCA",120,0)
 S DIR("A")="Include All Dates or Select a Date Range? "
"RTN","IBCEMCA",121,0)
 S DIR("B")="All"
"RTN","IBCEMCA",122,0)
 D ^DIR K DIR
"RTN","IBCEMCA",123,0)
 I $D(DIROUT) S RESET=1 G QX  ; kill scratch and rebuild list
"RTN","IBCEMCA",124,0)
 I $D(DIRUT) G Q3
"RTN","IBCEMCA",125,0)
 I Y="A" K ^TMP($J,"IBCEMCA","DATE") G QX
"RTN","IBCEMCA",126,0)
 ;
"RTN","IBCEMCA",127,0)
Q4A ; beginning date
"RTN","IBCEMCA",128,0)
 W !
"RTN","IBCEMCA",129,0)
 S DIR(0)="DAO^:"_DT_":AEX",DIR("A")="   Enter the beginning date: "
"RTN","IBCEMCA",130,0)
 D ^DIR K DIR
"RTN","IBCEMCA",131,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild list
"RTN","IBCEMCA",132,0)
 I $D(DIRUT)!'Y G Q4
"RTN","IBCEMCA",133,0)
 S $P(^TMP($J,"IBCEMCA","DATE"),U,1)=Y
"RTN","IBCEMCA",134,0)
 ;
"RTN","IBCEMCA",135,0)
Q4B ; ending date
"RTN","IBCEMCA",136,0)
 W !
"RTN","IBCEMCA",137,0)
 S DIR(0)="DAO^"_Y_":"_DT_":AEX",DIR("A")="   Enter the ending date: "
"RTN","IBCEMCA",138,0)
 D ^DIR K DIR
"RTN","IBCEMCA",139,0)
 I $D(DIROUT) S RESET=1 G QX   ; kill scratch and rebuild list
"RTN","IBCEMCA",140,0)
 I $D(DIRUT)!'Y G Q4A
"RTN","IBCEMCA",141,0)
 S $P(^TMP($J,"IBCEMCA","DATE"),U,2)=Y
"RTN","IBCEMCA",142,0)
 ;
"RTN","IBCEMCA",143,0)
QX ; end of questions, rebuild the list with user supplied selections
"RTN","IBCEMCA",144,0)
 I RESET KILL ^TMP($J,"IBCEMCA")
"RTN","IBCEMCA",145,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA",146,0)
 ;
"RTN","IBCEMCA",147,0)
SCREENX ;
"RTN","IBCEMCA",148,0)
 Q
"RTN","IBCEMCA",149,0)
 ;
"RTN","IBCEMCA",150,0)
TOGGLE ; Select/De-select entries in the list
"RTN","IBCEMCA",151,0)
 NEW IBSEL,DIR,X,Y,DIRUT,DIROUT,DTOUT,DUOUT,IBCEMLST,IBCEMSUB,IBCEMPCE,IBZ,IBIFN,IBDA,IBVALM,Z,RSTA
"RTN","IBCEMCA",152,0)
 D FULL^VALM1
"RTN","IBCEMCA",153,0)
 I '$D(^TMP($J,"IBCEMCL",3)) D  G TOGGLEX
"RTN","IBCEMCA",154,0)
 . W !!?5,"There are no messages to select." D PAUSE^VALM1
"RTN","IBCEMCA",155,0)
 . Q
"RTN","IBCEMCA",156,0)
 S DIR(0)="LO^1:"_+$O(^TMP($J,"IBCEMCL",3,""),-1)
"RTN","IBCEMCA",157,0)
 S DIR("A")="Select EDI Status Messages"
"RTN","IBCEMCA",158,0)
 W ! D ^DIR K DIR
"RTN","IBCEMCA",159,0)
 I $D(DIRUT) G TOGGLEX
"RTN","IBCEMCA",160,0)
 M IBCEMLST=Y
"RTN","IBCEMCA",161,0)
 F IBCEMSUB=0:1 Q:'$D(IBCEMLST(IBCEMSUB))  F IBCEMPCE=1:1 S IBSEL=$P(IBCEMLST(IBCEMSUB),",",IBCEMPCE) Q:'IBSEL  D
"RTN","IBCEMCA",162,0)
 . S IBZ=$G(^TMP($J,"IBCEMCL",3,IBSEL))
"RTN","IBCEMCA",163,0)
 . S IBIFN=+IBZ,IBDA=+$P(IBZ,U,2),IBVALM=+$P(IBZ,U,4)
"RTN","IBCEMCA",164,0)
 . I 'IBIFN Q
"RTN","IBCEMCA",165,0)
 . I 'IBDA Q
"RTN","IBCEMCA",166,0)
 . I 'IBVALM Q
"RTN","IBCEMCA",167,0)
 . I '$D(^TMP($J,"IBCEMCL",2,IBVALM,0)) Q
"RTN","IBCEMCA",168,0)
 . D MARK^IBCEMCL(IBDA,IBIFN,IBVALM,IBSEL,.Z)
"RTN","IBCEMCA",169,0)
 . I Z'="" S RSTA(Z)=$G(RSTA(Z))+1
"RTN","IBCEMCA",170,0)
 . Q
"RTN","IBCEMCA",171,0)
 ;
"RTN","IBCEMCA",172,0)
 I $G(RSTA("L")) D   ; display results only if some could not be selected
"RTN","IBCEMCA",173,0)
 . W !!?8,"Number of messages selected:  ",+$G(RSTA("S"))
"RTN","IBCEMCA",174,0)
 . W !?5,"Number of messages de-selected:  ",+$G(RSTA("D"))
"RTN","IBCEMCA",175,0)
 . W !?2,"Number of messages that could not"
"RTN","IBCEMCA",176,0)
 . W !?4,"be selected because other users"
"RTN","IBCEMCA",177,0)
 . W !?12,"have them locked in CSA:  ",+$G(RSTA("L"))
"RTN","IBCEMCA",178,0)
 . D PAUSE^VALM1
"RTN","IBCEMCA",179,0)
 . Q
"RTN","IBCEMCA",180,0)
TOGGLEX ;
"RTN","IBCEMCA",181,0)
 S VALMBCK="R"
"RTN","IBCEMCA",182,0)
 Q
"RTN","IBCEMCA",183,0)
 ;
"RTN","IBCEMCA",184,0)
INSLIST(INS) ; lister for DIC call.  INS is ien to file 36.
"RTN","IBCEMCA",185,0)
 NEW AD,L1,CITY,ST,EDI,PROF,INST,PYRID
"RTN","IBCEMCA",186,0)
 S AD=$G(^DIC(36,INS,.11))
"RTN","IBCEMCA",187,0)
 S L1=$P(AD,U,1),CITY=$P(AD,U,4),ST=$P(AD,U,5)
"RTN","IBCEMCA",188,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEMCA",189,0)
 S CITY=$E(CITY,1,15)
"RTN","IBCEMCA",190,0)
 I CITY'="",ST'="" S CITY=CITY_","
"RTN","IBCEMCA",191,0)
 S CITY=CITY_$E(ST,1,2)
"RTN","IBCEMCA",192,0)
 ;
"RTN","IBCEMCA",193,0)
 S EDI=$G(^DIC(36,INS,3))
"RTN","IBCEMCA",194,0)
 S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEMCA",195,0)
 S PYRID=$E(PROF,1,5)
"RTN","IBCEMCA",196,0)
 I PROF'="",INST'="" S PYRID=PYRID_"/"
"RTN","IBCEMCA",197,0)
 S PYRID=PYRID_$E(INST,1,5)
"RTN","IBCEMCA",198,0)
 ;
"RTN","IBCEMCA",199,0)
 W ?27,$E(L1,1,20)        ; address line 1
"RTN","IBCEMCA",200,0)
 W ?47,"  ",CITY          ; city,state
"RTN","IBCEMCA",201,0)
 W ?67,"  ",PYRID         ; payer IDs
"RTN","IBCEMCA",202,0)
INSLISTX ;
"RTN","IBCEMCA",203,0)
 Q
"RTN","IBCEMCA",204,0)
 ;
"RTN","IBCEMCA1")
0^14^B46309574
"RTN","IBCEMCA1",1,0)
IBCEMCA1 ;ALB/ESG - Multiple CSA Message Management - Actions ;20-SEP-2005
"RTN","IBCEMCA1",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCEMCA1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMCA1",4,0)
 ;
"RTN","IBCEMCA1",5,0)
 Q
"RTN","IBCEMCA1",6,0)
REVSTAT ; change review status
"RTN","IBCEMCA1",7,0)
 NEW DIR,X,Y,DA,DIRUT,DIROUT,DTOUT,DUOUT,NS,IBRVUST,IBFNRVAC,IBRVCMT
"RTN","IBCEMCA1",8,0)
 NEW DIC,DWLW,DWPK,DIWESUB,DIWETXT,LN,IBDA,IBOLD,DIE,DA,DR
"RTN","IBCEMCA1",9,0)
 D FULL^VALM1
"RTN","IBCEMCA1",10,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA1",11,0)
 I 'NS D  G REVSTATX
"RTN","IBCEMCA1",12,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA1",13,0)
 . Q
"RTN","IBCEMCA1",14,0)
 ;
"RTN","IBCEMCA1",15,0)
 W !!?5,"Number of messages selected:  ",NS,!
"RTN","IBCEMCA1",16,0)
 ;
"RTN","IBCEMCA1",17,0)
 ; reader call for the new review status field
"RTN","IBCEMCA1",18,0)
 S DIR(0)="361,.09"
"RTN","IBCEMCA1",19,0)
 S DIR("A")="Enter the REVIEW STATUS for the selected message"_$S(NS>1:"s",1:"")
"RTN","IBCEMCA1",20,0)
 D ^DIR K DIR
"RTN","IBCEMCA1",21,0)
 I $D(DIRUT) G REVSTATX
"RTN","IBCEMCA1",22,0)
 M IBRVUST=Y
"RTN","IBCEMCA1",23,0)
 I IBRVUST'=2 G RVCQ    ; skip down to the confirmation
"RTN","IBCEMCA1",24,0)
 ;
"RTN","IBCEMCA1",25,0)
RSQ2 ; Reader call for the final review action field
"RTN","IBCEMCA1",26,0)
 W !
"RTN","IBCEMCA1",27,0)
 S DIR(0)="361,.1"
"RTN","IBCEMCA1",28,0)
 S DIR("A")="Enter the FINAL REVIEW ACTION for the selected message"_$S(NS>1:"s",1:"")
"RTN","IBCEMCA1",29,0)
 D ^DIR K DIR
"RTN","IBCEMCA1",30,0)
 I X="",Y="" W !!?5,"This field is required when the review has been completed." G RSQ2
"RTN","IBCEMCA1",31,0)
 I $D(DIRUT) G REVSTATX
"RTN","IBCEMCA1",32,0)
 M IBFNRVAC=Y
"RTN","IBCEMCA1",33,0)
 ;
"RTN","IBCEMCA1",34,0)
RSQ3 ; review comment text
"RTN","IBCEMCA1",35,0)
 W !
"RTN","IBCEMCA1",36,0)
 K ^TMP($J,"IBCEMCA1-COMMENTS"),IBRVCMT
"RTN","IBCEMCA1",37,0)
 S DIC="^TMP($J,""IBCEMCA1-COMMENTS"","
"RTN","IBCEMCA1",38,0)
 S DWLW=75,DWPK=1,DIWESUB="REVIEW COMMENTS"
"RTN","IBCEMCA1",39,0)
 S DIWETXT="These comments are optional"
"RTN","IBCEMCA1",40,0)
 I IBFNRVAC="O" S DIWETXT="These comments are required because OTHER ACTION was selected."
"RTN","IBCEMCA1",41,0)
 D EN^DIWE
"RTN","IBCEMCA1",42,0)
 M IBRVCMT=^TMP($J,"IBCEMCA1-COMMENTS")
"RTN","IBCEMCA1",43,0)
 K ^TMP($J,"IBCEMCA1-COMMENTS")
"RTN","IBCEMCA1",44,0)
 I IBFNRVAC="O",'$D(IBRVCMT(0)) D  G RSQ3
"RTN","IBCEMCA1",45,0)
 . W !!?5,"Comments are required when the Final Review Action is OTHER ACTION."
"RTN","IBCEMCA1",46,0)
 . D PAUSE^VALM1
"RTN","IBCEMCA1",47,0)
 . Q
"RTN","IBCEMCA1",48,0)
 I $P($G(IBRVCMT(0)),U,4) S IBRVCMT=$P($G(IBRVCMT(0)),U,4)
"RTN","IBCEMCA1",49,0)
 ;
"RTN","IBCEMCA1",50,0)
RVCQ ; display a summary of the user responses and get confirmation
"RTN","IBCEMCA1",51,0)
 W !!,"  Number of selected",!,"     Status Messages:  ",NS
"RTN","IBCEMCA1",52,0)
 W !?7,"Review Status:  ",$G(IBRVUST(0))
"RTN","IBCEMCA1",53,0)
 I IBRVUST=2 D
"RTN","IBCEMCA1",54,0)
 . W !," Final Review Action:  ",$G(IBFNRVAC(0))
"RTN","IBCEMCA1",55,0)
 . W !?5,"Review Comments:  "
"RTN","IBCEMCA1",56,0)
 . I '$D(IBRVCMT(0)) W "<none>"
"RTN","IBCEMCA1",57,0)
 . E  S LN=0 F  S LN=$O(IBRVCMT(LN)) Q:'LN  W !?5,IBRVCMT(LN,0)
"RTN","IBCEMCA1",58,0)
 . Q
"RTN","IBCEMCA1",59,0)
 W !
"RTN","IBCEMCA1",60,0)
 S DIR(0)="YO"
"RTN","IBCEMCA1",61,0)
 S DIR("A")="OK to proceed",DIR("B")="No"
"RTN","IBCEMCA1",62,0)
 D ^DIR K DIR
"RTN","IBCEMCA1",63,0)
 I Y'=1 G REVSTATX
"RTN","IBCEMCA1",64,0)
 ;
"RTN","IBCEMCA1",65,0)
 ; Loop thru selected status messages and update them
"RTN","IBCEMCA1",66,0)
 S IBDA=0
"RTN","IBCEMCA1",67,0)
 F  S IBDA=$O(^TMP($J,"IBCEMCL",4,1,IBDA)) Q:'IBDA  D
"RTN","IBCEMCA1",68,0)
 . S IBOLD=$P($G(^IBM(361,IBDA,0)),U,9)    ; old review status
"RTN","IBCEMCA1",69,0)
 . S DIE=361,DA=IBDA
"RTN","IBCEMCA1",70,0)
 . S DR=".09////"_IBRVUST
"RTN","IBCEMCA1",71,0)
 . I $G(IBFNRVAC)'="" S DR=DR_";.1////"_$G(IBFNRVAC)
"RTN","IBCEMCA1",72,0)
 . D ^DIE
"RTN","IBCEMCA1",73,0)
 . I $D(IBRVCMT(0)) D NOTECHG^IBCECSA2(IBDA,0,.IBRVCMT,1)
"RTN","IBCEMCA1",74,0)
 . I IBOLD'=IBRVUST D NOTECHG^IBCECSA2(IBDA,0)
"RTN","IBCEMCA1",75,0)
 . L -^IBM(361,IBDA)       ; unlock
"RTN","IBCEMCA1",76,0)
 . Q
"RTN","IBCEMCA1",77,0)
 W "   ... Done!"
"RTN","IBCEMCA1",78,0)
 ;
"RTN","IBCEMCA1",79,0)
 ; rebuild the list
"RTN","IBCEMCA1",80,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA1",81,0)
 S VALMBG=1
"RTN","IBCEMCA1",82,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA1",83,0)
 I $G(IBCSAMCS)=1 S IBCSAMCS=2   ; flag to rebuild CSA
"RTN","IBCEMCA1",84,0)
 ;
"RTN","IBCEMCA1",85,0)
REVSTATX ;
"RTN","IBCEMCA1",86,0)
 S VALMBCK="R"
"RTN","IBCEMCA1",87,0)
 Q
"RTN","IBCEMCA1",88,0)
 ;
"RTN","IBCEMCA1",89,0)
COMMENT ; enter review comments
"RTN","IBCEMCA1",90,0)
 NEW NS,DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT,IBRVCMT,DIC,DWLW,DWPK,DIWESUB,IBDA,LN
"RTN","IBCEMCA1",91,0)
 D FULL^VALM1
"RTN","IBCEMCA1",92,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA1",93,0)
 I 'NS D  G COMMX
"RTN","IBCEMCA1",94,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA1",95,0)
 . Q
"RTN","IBCEMCA1",96,0)
 ;
"RTN","IBCEMCA1",97,0)
 W !!?5,"Number of messages selected:  ",NS,!
"RTN","IBCEMCA1",98,0)
 ;
"RTN","IBCEMCA1",99,0)
 S DIR(0)="YO",DIR("B")="Yes"
"RTN","IBCEMCA1",100,0)
 S DIR("A")="Do you want to add a new Review Comment for all of these messages"
"RTN","IBCEMCA1",101,0)
 I NS=1 S DIR("A")="Do you want to add a new Review Comment for this message"
"RTN","IBCEMCA1",102,0)
 D ^DIR K DIR
"RTN","IBCEMCA1",103,0)
 I Y'=1 G COMMX
"RTN","IBCEMCA1",104,0)
 ;
"RTN","IBCEMCA1",105,0)
 ; review comment text
"RTN","IBCEMCA1",106,0)
 W !
"RTN","IBCEMCA1",107,0)
 K ^TMP($J,"IBCEMCA1-COMMENTS"),IBRVCMT
"RTN","IBCEMCA1",108,0)
 S DIC="^TMP($J,""IBCEMCA1-COMMENTS"","
"RTN","IBCEMCA1",109,0)
 S DWLW=75,DWPK=1,DIWESUB="REVIEW COMMENTS"
"RTN","IBCEMCA1",110,0)
 D EN^DIWE
"RTN","IBCEMCA1",111,0)
 M IBRVCMT=^TMP($J,"IBCEMCA1-COMMENTS")
"RTN","IBCEMCA1",112,0)
 K ^TMP($J,"IBCEMCA1-COMMENTS")
"RTN","IBCEMCA1",113,0)
 I $P($G(IBRVCMT(0)),U,4) S IBRVCMT=$P($G(IBRVCMT(0)),U,4)
"RTN","IBCEMCA1",114,0)
 I '$D(IBRVCMT(0)) G COMMX    ; no comments entered
"RTN","IBCEMCA1",115,0)
 ;
"RTN","IBCEMCA1",116,0)
 ; final confirmation
"RTN","IBCEMCA1",117,0)
 W !
"RTN","IBCEMCA1",118,0)
 S LN=0 F  S LN=$O(IBRVCMT(LN)) Q:'LN  W !?5,IBRVCMT(LN,0)
"RTN","IBCEMCA1",119,0)
 W !
"RTN","IBCEMCA1",120,0)
 S DIR(0)="YO"
"RTN","IBCEMCA1",121,0)
 S DIR("A")="OK to add this comment for all selected status messages",DIR("B")="No"
"RTN","IBCEMCA1",122,0)
 I NS=1 S DIR("A")="OK to add this comment for the selected status message"
"RTN","IBCEMCA1",123,0)
 D ^DIR K DIR
"RTN","IBCEMCA1",124,0)
 I Y'=1 G COMMX
"RTN","IBCEMCA1",125,0)
 ;
"RTN","IBCEMCA1",126,0)
 ; Loop thru selected status messages and update them
"RTN","IBCEMCA1",127,0)
 S IBDA=0
"RTN","IBCEMCA1",128,0)
 F  S IBDA=$O(^TMP($J,"IBCEMCL",4,1,IBDA)) Q:'IBDA  D
"RTN","IBCEMCA1",129,0)
 . D NOTECHG^IBCECSA2(IBDA,0,.IBRVCMT,1)
"RTN","IBCEMCA1",130,0)
 . L -^IBM(361,IBDA)       ; unlock
"RTN","IBCEMCA1",131,0)
 . Q
"RTN","IBCEMCA1",132,0)
 W "   ... Done!"
"RTN","IBCEMCA1",133,0)
 ;
"RTN","IBCEMCA1",134,0)
 ; rebuild the list
"RTN","IBCEMCA1",135,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA1",136,0)
 S VALMBG=1
"RTN","IBCEMCA1",137,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA1",138,0)
 ;
"RTN","IBCEMCA1",139,0)
COMMX ;
"RTN","IBCEMCA1",140,0)
 S VALMBCK="R"
"RTN","IBCEMCA1",141,0)
 Q
"RTN","IBCEMCA1",142,0)
 ;
"RTN","IBCEMCA1",143,0)
RETRAN ; retransmit claims
"RTN","IBCEMCA1",144,0)
 NEW NS,IBIFN,NSC,DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,IBDA,IB364
"RTN","IBCEMCA1",145,0)
 D FULL^VALM1
"RTN","IBCEMCA1",146,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA1",147,0)
 I 'NS D  G RETRANX
"RTN","IBCEMCA1",148,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA1",149,0)
 . Q
"RTN","IBCEMCA1",150,0)
 ;
"RTN","IBCEMCA1",151,0)
 ; count number of claims too
"RTN","IBCEMCA1",152,0)
 S IBIFN=0 F NSC=0:1 S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN
"RTN","IBCEMCA1",153,0)
 ;
"RTN","IBCEMCA1",154,0)
 W !!?5,"Number of messages selected:  ",NS
"RTN","IBCEMCA1",155,0)
 W !?7,"Number of claims selected:  ",NSC,!
"RTN","IBCEMCA1",156,0)
 ;
"RTN","IBCEMCA1",157,0)
 S DIR("A",1)="In order to retransmit these claims, the transmission status for all of these"
"RTN","IBCEMCA1",158,0)
 S DIR("A",2)="claims will be reset to be ""READY FOR EXTRACT"".  These claims will then be"
"RTN","IBCEMCA1",159,0)
 S DIR("A",3)="sent with the next regularly scheduled claims transmission process."
"RTN","IBCEMCA1",160,0)
 S DIR("A",4)=""
"RTN","IBCEMCA1",161,0)
 S DIR("A")="Do you want to retransmit these claims"
"RTN","IBCEMCA1",162,0)
 I NSC=1 D
"RTN","IBCEMCA1",163,0)
 . S DIR("A",1)="In order to retransmit this claim, the transmission status for this claim will"
"RTN","IBCEMCA1",164,0)
 . S DIR("A",2)="be reset to be ""READY FOR EXTRACT"".  This claim will then be sent with the"
"RTN","IBCEMCA1",165,0)
 . S DIR("A",3)="next regularly scheduled claims transmission process."
"RTN","IBCEMCA1",166,0)
 . S DIR("A")="Do you want to retransmit this claim"
"RTN","IBCEMCA1",167,0)
 . Q
"RTN","IBCEMCA1",168,0)
 S DIR(0)="YO",DIR("B")="No" D ^DIR K DIR
"RTN","IBCEMCA1",169,0)
 I Y'=1 G RETRANX
"RTN","IBCEMCA1",170,0)
 ;
"RTN","IBCEMCA1",171,0)
 ; Loop thru selected claims and add new transmission records in a
"RTN","IBCEMCA1",172,0)
 ; "Ready to Extract" status
"RTN","IBCEMCA1",173,0)
 S IBIFN=0
"RTN","IBCEMCA1",174,0)
 F  S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN  D
"RTN","IBCEMCA1",175,0)
 . S IBDA=+$O(^TMP($J,"IBCEMCL",4,2,IBIFN,""),-1)  ; most recent 361 ien
"RTN","IBCEMCA1",176,0)
 . S IB364=+$P($G(^IBM(361,IBDA,0)),U,11)          ; transmit bill 364 ien
"RTN","IBCEMCA1",177,0)
 . I 'IBDA!'IB364 Q
"RTN","IBCEMCA1",178,0)
 . D UPDEDI^IBCEM(IB364,"R")        ; update EDI files for transmission
"RTN","IBCEMCA1",179,0)
 . S Y=$$ADDTBILL^IBCB1(IBIFN,1)    ; add new transmission record
"RTN","IBCEMCA1",180,0)
 . Q
"RTN","IBCEMCA1",181,0)
 W "   ... Done!"
"RTN","IBCEMCA1",182,0)
 ;
"RTN","IBCEMCA1",183,0)
 ; rebuild the list
"RTN","IBCEMCA1",184,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA1",185,0)
 S VALMBG=1
"RTN","IBCEMCA1",186,0)
 D UNLOCK^IBCEMCL
"RTN","IBCEMCA1",187,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA1",188,0)
 I $G(IBCSAMCS)=1 S IBCSAMCS=2   ; flag to rebuild CSA
"RTN","IBCEMCA1",189,0)
 ;
"RTN","IBCEMCA1",190,0)
RETRANX ;
"RTN","IBCEMCA1",191,0)
 S VALMBCK="R"
"RTN","IBCEMCA1",192,0)
 Q
"RTN","IBCEMCA1",193,0)
 ;
"RTN","IBCEMCA2")
0^18^B17866540
"RTN","IBCEMCA2",1,0)
IBCEMCA2 ;ALB/ESG - Multiple CSA Message Management - Actions ;20-SEP-2005
"RTN","IBCEMCA2",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCEMCA2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMCA2",4,0)
 ;
"RTN","IBCEMCA2",5,0)
 Q
"RTN","IBCEMCA2",6,0)
 ;
"RTN","IBCEMCA2",7,0)
CANCEL ; mass claim cancel
"RTN","IBCEMCA2",8,0)
 NEW NS,IBIFN,NSC,DIR,X,Y,DUOUT,DTOUT,DIRUT,DIROUT,IBDA,IB364,DISP,IBCE
"RTN","IBCEMCA2",9,0)
 NEW IBMCSRSC,IBMCSRNB,IBMCSCNT,IBMCSTOT,IBMCSTOP,IBMCSCAN,MRACHK,IBCAN
"RTN","IBCEMCA2",10,0)
 D FULL^VALM1
"RTN","IBCEMCA2",11,0)
 ;
"RTN","IBCEMCA2",12,0)
 I '$$KCHK^XUSRB("IB AUTHORIZE") D  G CANCELX
"RTN","IBCEMCA2",13,0)
 . W !!?5,"You don't hold the proper security key to access this option."
"RTN","IBCEMCA2",14,0)
 . W !?5,"The necessary key is IB AUTHORIZE.  Please see your manager."
"RTN","IBCEMCA2",15,0)
 . D PAUSE^VALM1
"RTN","IBCEMCA2",16,0)
 . Q
"RTN","IBCEMCA2",17,0)
 ;
"RTN","IBCEMCA2",18,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA2",19,0)
 I 'NS D  G CANCELX
"RTN","IBCEMCA2",20,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA2",21,0)
 . Q
"RTN","IBCEMCA2",22,0)
 ;
"RTN","IBCEMCA2",23,0)
 ; count number of claims too
"RTN","IBCEMCA2",24,0)
 S IBIFN=0 F NSC=0:1 S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN
"RTN","IBCEMCA2",25,0)
 ;
"RTN","IBCEMCA2",26,0)
 W !!?5,"Number of messages selected:  ",NS
"RTN","IBCEMCA2",27,0)
 W !?7,"Number of claims selected:  ",NSC
"RTN","IBCEMCA2",28,0)
 W !!,"In order to cancel "
"RTN","IBCEMCA2",29,0)
 W $S(NSC=1:"this claim",1:"these claims")
"RTN","IBCEMCA2",30,0)
 W ", you must supply the Reason Cancelled and"
"RTN","IBCEMCA2",31,0)
 W !,"the Reason Not Billable.  These will be the default responses for "
"RTN","IBCEMCA2",32,0)
 W $S(NSC=1:"this claim",1:"all claims")
"RTN","IBCEMCA2",33,0)
 W "."
"RTN","IBCEMCA2",34,0)
 ;
"RTN","IBCEMCA2",35,0)
CANQ1 ; reader call for the Reason Cancelled field
"RTN","IBCEMCA2",36,0)
 W !
"RTN","IBCEMCA2",37,0)
 S DIR(0)="399,19"
"RTN","IBCEMCA2",38,0)
 S DIR("A")="Reason Cancelled"
"RTN","IBCEMCA2",39,0)
 D ^DIR K DIR
"RTN","IBCEMCA2",40,0)
 I X="",Y="" W *7,!,"This is a required response. Enter '^' to exit." G CANQ1
"RTN","IBCEMCA2",41,0)
 I $D(DIRUT) G CANCELX
"RTN","IBCEMCA2",42,0)
 M IBMCSRSC=Y           ; save the entered text for reason cancelled
"RTN","IBCEMCA2",43,0)
 ;
"RTN","IBCEMCA2",44,0)
CANQ2 ; reader call for the reason not billable field
"RTN","IBCEMCA2",45,0)
 W !
"RTN","IBCEMCA2",46,0)
 S DIR(0)="356,.19"
"RTN","IBCEMCA2",47,0)
 S DIR("A")="Reason Not Billable"
"RTN","IBCEMCA2",48,0)
 D ^DIR K DIR
"RTN","IBCEMCA2",49,0)
 I X="",Y="" W *7,!,"This is a required response. Enter '^' to exit." G CANQ2
"RTN","IBCEMCA2",50,0)
 I $D(DIRUT) G CANCELX
"RTN","IBCEMCA2",51,0)
 M IBMCSRNB=Y           ; save the reason not billable code/desc
"RTN","IBCEMCA2",52,0)
 ;
"RTN","IBCEMCA2",53,0)
 W !
"RTN","IBCEMCA2",54,0)
 S DIR(0)="YO"
"RTN","IBCEMCA2",55,0)
 S DIR("A")="OK to proceed into the cancel claim loop",DIR("B")="No"
"RTN","IBCEMCA2",56,0)
 D ^DIR K DIR
"RTN","IBCEMCA2",57,0)
 I Y'=1 G CANCELX
"RTN","IBCEMCA2",58,0)
 ;
"RTN","IBCEMCA2",59,0)
 S IBIFN=0,IBMCSCNT=0,IBMCSTOT=NSC,IBMCSTOP=0
"RTN","IBCEMCA2",60,0)
 F  S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN  D  Q:IBMCSTOP
"RTN","IBCEMCA2",61,0)
 . S IBMCSCNT=IBMCSCNT+1
"RTN","IBCEMCA2",62,0)
 . S IBDA=+$O(^TMP($J,"IBCEMCL",4,2,IBIFN,""),-1)  ; most recent 361 ien
"RTN","IBCEMCA2",63,0)
 . S IB364=+$P($G(^IBM(361,IBDA,0)),U,11)          ; transmit bill 364 ien
"RTN","IBCEMCA2",64,0)
 . W !!," *** Processing MCS claim# ",IBMCSCNT," of ",IBMCSTOT," ***"
"RTN","IBCEMCA2",65,0)
 . S DISP=$$DISP^IBCEM3(IBIFN,"cancel","",1,.DIRUT)
"RTN","IBCEMCA2",66,0)
 . ;
"RTN","IBCEMCA2",67,0)
 . I $D(DIRUT) D  Q       ; up arrow or time-out
"RTN","IBCEMCA2",68,0)
 .. N DIR,X,Y,DTOUT,DUOUT,DIRUT,DIROUT
"RTN","IBCEMCA2",69,0)
 .. S DIR(0)="YO"
"RTN","IBCEMCA2",70,0)
 .. S DIR("A")="Do you want to Exit this MCS cancel claim loop"
"RTN","IBCEMCA2",71,0)
 .. S DIR("B")="Yes"
"RTN","IBCEMCA2",72,0)
 .. W ! D ^DIR K DIR
"RTN","IBCEMCA2",73,0)
 .. I Y=1 S IBMCSTOP=1    ; Yes, exit out altogether
"RTN","IBCEMCA2",74,0)
 .. Q
"RTN","IBCEMCA2",75,0)
 . ;
"RTN","IBCEMCA2",76,0)
 . I 'DISP Q              ; user said No to cancel
"RTN","IBCEMCA2",77,0)
 . ;
"RTN","IBCEMCA2",78,0)
 . I 'IBDA!'IB364 D  Q
"RTN","IBCEMCA2",79,0)
 .. W !?4,"Cannot determine the EDI transmission record."
"RTN","IBCEMCA2",80,0)
 .. W !?4,"This claim can't be cancelled here."
"RTN","IBCEMCA2",81,0)
 .. D PAUSE^VALM1
"RTN","IBCEMCA2",82,0)
 .. Q
"RTN","IBCEMCA2",83,0)
 . ;
"RTN","IBCEMCA2",84,0)
 . D MRACHK^IBCECSA4 I MRACHK Q
"RTN","IBCEMCA2",85,0)
 . ;
"RTN","IBCEMCA2",86,0)
 . ; set-up required variables for main call to cancel this claim
"RTN","IBCEMCA2",87,0)
 . S IBCAN=1,IBMCSCAN=1
"RTN","IBCEMCA2",88,0)
 . S IBCE("EDI")=1
"RTN","IBCEMCA2",89,0)
 . S Y=IBIFN
"RTN","IBCEMCA2",90,0)
 . D
"RTN","IBCEMCA2",91,0)
 .. ; protect variables to be restored after call to IBCC and
"RTN","IBCEMCA2",92,0)
 .. ; leftover junk variables from IBCC
"RTN","IBCEMCA2",93,0)
 .. NEW IBIFN,IBMCSTOP,IBMCSCNT,IBMCSTOT,IBCSAMCS
"RTN","IBCEMCA2",94,0)
 .. NEW IBCCCC,IBCCR,IBQUIT,NAME,POP,RDATES,COL,CTRLCOL,FINISH
"RTN","IBCEMCA2",95,0)
 .. D NOPTF^IBCC
"RTN","IBCEMCA2",96,0)
 .. Q
"RTN","IBCEMCA2",97,0)
 . Q
"RTN","IBCEMCA2",98,0)
 ;
"RTN","IBCEMCA2",99,0)
 I IBMCSTOP W !!?5,"MCS cancel loop aborted."
"RTN","IBCEMCA2",100,0)
 I 'IBMCSTOP W !!?5,"Done with MCS cancel loop!"
"RTN","IBCEMCA2",101,0)
 D PAUSE^VALM1
"RTN","IBCEMCA2",102,0)
 ;
"RTN","IBCEMCA2",103,0)
 ; rebuild the list
"RTN","IBCEMCA2",104,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA2",105,0)
 S VALMBG=1
"RTN","IBCEMCA2",106,0)
 D UNLOCK^IBCEMCL
"RTN","IBCEMCA2",107,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA2",108,0)
 I $G(IBCSAMCS)=1 S IBCSAMCS=2   ; flag to rebuild CSA
"RTN","IBCEMCA2",109,0)
 ;
"RTN","IBCEMCA2",110,0)
CANCELX ;
"RTN","IBCEMCA2",111,0)
 S VALMBCK="R"
"RTN","IBCEMCA2",112,0)
 Q
"RTN","IBCEMCA2",113,0)
 ;
"RTN","IBCEMCA3")
0^20^B52127720
"RTN","IBCEMCA3",1,0)
IBCEMCA3 ;ALB/ESG - Multiple CSA Message Management - Actions ;20-SEP-2005
"RTN","IBCEMCA3",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCEMCA3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMCA3",4,0)
 ;
"RTN","IBCEMCA3",5,0)
 Q
"RTN","IBCEMCA3",6,0)
 ;
"RTN","IBCEMCA3",7,0)
PRINT ; resubmit by print
"RTN","IBCEMCA3",8,0)
 NEW DFN,DIR,DIROUT,DIRUT,DTOUT,DUOUT,FC,FORM,IB0,IB364,IBDA,IBFT,IBFTP
"RTN","IBCEMCA3",9,0)
 NEW IBH,IBIFN,IBJ,IBMCSPNT,IBQUIT,IBS,IBS1,IBS2,IBS3,IBTASK,IBX,IBXP,IBY,IBZ
"RTN","IBCEMCA3",10,0)
 NEW INS,NS,NSC,PATNAME,PAYER,X,Y,ZIP,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","IBCEMCA3",11,0)
 D FULL^VALM1
"RTN","IBCEMCA3",12,0)
 ;
"RTN","IBCEMCA3",13,0)
 S NS=+$G(^TMP($J,"IBCEMCL",4))
"RTN","IBCEMCA3",14,0)
 I 'NS D  G PRINTX
"RTN","IBCEMCA3",15,0)
 . W !!?5,"There are no selected messages." D PAUSE^VALM1
"RTN","IBCEMCA3",16,0)
 . Q
"RTN","IBCEMCA3",17,0)
 ;
"RTN","IBCEMCA3",18,0)
 ; count number of claims too
"RTN","IBCEMCA3",19,0)
 S IBIFN=0 F NSC=0:1 S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN
"RTN","IBCEMCA3",20,0)
 ;
"RTN","IBCEMCA3",21,0)
 W !!?5,"Number of messages selected:  ",NS
"RTN","IBCEMCA3",22,0)
 W !?7,"Number of claims selected:  ",NSC
"RTN","IBCEMCA3",23,0)
 ;
"RTN","IBCEMCA3",24,0)
 ; check certain form types for a default printer
"RTN","IBCEMCA3",25,0)
 K FC S FC=0
"RTN","IBCEMCA3",26,0)
 F FORM=2,3,6 D
"RTN","IBCEMCA3",27,0)
 . N X S X=$G(^IBE(353,FORM,0))
"RTN","IBCEMCA3",28,0)
 . I $P(X,U,2)'="" Q   ; billing printer defined
"RTN","IBCEMCA3",29,0)
 . S FC=FC+1,FC($P(X,U,1)_" ")=""
"RTN","IBCEMCA3",30,0)
 . Q
"RTN","IBCEMCA3",31,0)
 I FC D  I IBQUIT G PRINTX
"RTN","IBCEMCA3",32,0)
 . N NM
"RTN","IBCEMCA3",33,0)
 . S IBQUIT=0
"RTN","IBCEMCA3",34,0)
 . W !!,*7,"Warning!  The default billing printer is missing for the following form type",$S(FC>1:"s",1:""),":",!
"RTN","IBCEMCA3",35,0)
 . S NM="" F  S NM=$O(FC(NM)) Q:NM=""  W !?4,NM
"RTN","IBCEMCA3",36,0)
 . W !!,"Nothing will print for ",$S(FC>1:"these form types",1:"this form type"),".  Printers are maintained in the option"
"RTN","IBCEMCA3",37,0)
 . W !,"'Select Default Device for Forms' on the System Manager's IB Menu."
"RTN","IBCEMCA3",38,0)
 . W ! S DIR(0)="Y",DIR("A")="Do you want to continue",DIR("B")="No"
"RTN","IBCEMCA3",39,0)
 . D ^DIR K DIR
"RTN","IBCEMCA3",40,0)
 . I 'Y S IBQUIT=1   ; No, don't continue quit out
"RTN","IBCEMCA3",41,0)
 . Q
"RTN","IBCEMCA3",42,0)
 ;
"RTN","IBCEMCA3",43,0)
 ; Ask the user for the 3 sort levels
"RTN","IBCEMCA3",44,0)
 W !
"RTN","IBCEMCA3",45,0)
 S IBS=""
"RTN","IBCEMCA3",46,0)
 S IBZ="Z:ZIP;I:INSURANCE COMPANY NAME;P:PATIENT NAME;"
"RTN","IBCEMCA3",47,0)
 S IBH="This Resubmit by Print action attempts to print all selected claims in the order requested.  The printed claims may be sorted by: Zip Code, Insurance Company Name, and Patient name."
"RTN","IBCEMCA3",48,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",49,0)
 S DIR("A")="First Sort Claims By"
"RTN","IBCEMCA3",50,0)
 S DIR(0)="SB^"_IBZ
"RTN","IBCEMCA3",51,0)
 D ^DIR K DIR I $D(DIRUT) G PRINTX                   ; primary sort
"RTN","IBCEMCA3",52,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",53,0)
 S IBX=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCEMCA3",54,0)
 ;
"RTN","IBCEMCA3",55,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",56,0)
 S DIR("?",1)="Enter the field that the claims should be sorted on within "_IBX_"."
"RTN","IBCEMCA3",57,0)
 S DIR("?",2)="Press return if the order already entered is sufficient."
"RTN","IBCEMCA3",58,0)
 S DIR("?",3)=""
"RTN","IBCEMCA3",59,0)
 S DIR("A")="Then Sort Claims By"
"RTN","IBCEMCA3",60,0)
 S DIR(0)="SOB^"_IBZ
"RTN","IBCEMCA3",61,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G PRINTX             ; secondary sort
"RTN","IBCEMCA3",62,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",63,0)
 I Y="" G P1
"RTN","IBCEMCA3",64,0)
 S IBY=$P($P(IBZ,Y_":",2),";",1)
"RTN","IBCEMCA3",65,0)
 ;
"RTN","IBCEMCA3",66,0)
 S DIR("?")=IBH
"RTN","IBCEMCA3",67,0)
 S DIR("?",1)="Enter the field that the claims should be sorted on within "_IBX_" and "_IBY_"."
"RTN","IBCEMCA3",68,0)
 S DIR("?",2)="Press return if the order already entered is sufficient."
"RTN","IBCEMCA3",69,0)
 S DIR("?",3)=""
"RTN","IBCEMCA3",70,0)
 S DIR("A")="Then Sort Claims By"
"RTN","IBCEMCA3",71,0)
 S DIR(0)="SOB^"_IBZ
"RTN","IBCEMCA3",72,0)
 D ^DIR K DIR I Y'="",$D(DIRUT) G PRINTX             ; tertiary sort
"RTN","IBCEMCA3",73,0)
 S IBS=IBS_$S(Y="Z":1,Y="I":2,Y="P":3,1:0)
"RTN","IBCEMCA3",74,0)
 ;
"RTN","IBCEMCA3",75,0)
P1 ;
"RTN","IBCEMCA3",76,0)
 ;
"RTN","IBCEMCA3",77,0)
 W !
"RTN","IBCEMCA3",78,0)
 S DIR(0)="S^2:2nd Notice;3:3rd Notice;C:Copy;O:Original"
"RTN","IBCEMCA3",79,0)
 S DIR("A")="(2)nd Notice, (3)rd Notice, (C)opy or (O)riginal"
"RTN","IBCEMCA3",80,0)
 S DIR("B")="C"
"RTN","IBCEMCA3",81,0)
 D ^DIR K DIR
"RTN","IBCEMCA3",82,0)
 I $D(DIRUT) G PRINTX
"RTN","IBCEMCA3",83,0)
 I Y="C" S Y=0   ; copy
"RTN","IBCEMCA3",84,0)
 I Y="O" S Y=1   ; original
"RTN","IBCEMCA3",85,0)
 S IBMCSPNT=Y
"RTN","IBCEMCA3",86,0)
 ;
"RTN","IBCEMCA3",87,0)
 W !!,"Note:  Any selected claims in a REQUEST MRA status will not be printed."
"RTN","IBCEMCA3",88,0)
 W !
"RTN","IBCEMCA3",89,0)
 S DIR(0)="Y"
"RTN","IBCEMCA3",90,0)
 S DIR("A")="OK to begin printing claims"
"RTN","IBCEMCA3",91,0)
 S DIR("B")="No"
"RTN","IBCEMCA3",92,0)
 S DIR("?",1)="   Enter YES to immediately begin printing the selected claims."
"RTN","IBCEMCA3",93,0)
 S DIR("?")="   Enter NO to quit this option."
"RTN","IBCEMCA3",94,0)
 D ^DIR K DIR
"RTN","IBCEMCA3",95,0)
 I 'Y G PRINTX
"RTN","IBCEMCA3",96,0)
 ;
"RTN","IBCEMCA3",97,0)
 ; kill ^XTMP scratch global
"RTN","IBCEMCA3",98,0)
 S IBX="IBCFP" F  S IBX=$O(^XTMP(IBX)) Q:IBX'?1"IBCFP"1.N  K ^XTMP(IBX,$J)
"RTN","IBCEMCA3",99,0)
 S IBXP=$$FMADD^XLFDT(DT,1)_U_DT_U_"MCS BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCEMCA3",100,0)
 ;
"RTN","IBCEMCA3",101,0)
 ; Loop thru selected claims, queue them and print them
"RTN","IBCEMCA3",102,0)
 S IBIFN=0
"RTN","IBCEMCA3",103,0)
 F  S IBIFN=$O(^TMP($J,"IBCEMCL",4,2,IBIFN)) Q:'IBIFN  D
"RTN","IBCEMCA3",104,0)
 . S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEMCA3",105,0)
 . I $P($G(^IBE(353,IBFT,0)),U,2)="" Q    ; no printer defined
"RTN","IBCEMCA3",106,0)
 . S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMCA3",107,0)
 . I $P(IB0,U,13)=2 Q    ; don't include MRA requests here
"RTN","IBCEMCA3",108,0)
 . S DFN=+$P(IB0,U,2)
"RTN","IBCEMCA3",109,0)
 . S PATNAME=$P($G(^DPT(DFN,0)),U,1)
"RTN","IBCEMCA3",110,0)
 . S ZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9)   ; field 109 - curr ins zip
"RTN","IBCEMCA3",111,0)
 . ; payer
"RTN","IBCEMCA3",112,0)
 . S INS=+$P($G(^DGCR(399,IBIFN,"MP")),U,1)
"RTN","IBCEMCA3",113,0)
 . I 'INS S INS=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCEMCA3",114,0)
 . S PAYER=$P($G(^DIC(36,INS,0)),U,1)
"RTN","IBCEMCA3",115,0)
 . ;
"RTN","IBCEMCA3",116,0)
 . S IBX=ZIP_U_PAYER_U_PATNAME
"RTN","IBCEMCA3",117,0)
 . S IBS1=$P(IBX,U,$E(IBS,1))_" "     ; primary sort data
"RTN","IBCEMCA3",118,0)
 . S IBS2=$P(IBX,U,$E(IBS,2))_" "     ; secondary sort data
"RTN","IBCEMCA3",119,0)
 . S IBS3=$P(IBX,U,$E(IBS,3))_" "     ; tertiary sort data
"RTN","IBCEMCA3",120,0)
 . ;
"RTN","IBCEMCA3",121,0)
 . S ^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",122,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP
"RTN","IBCEMCA3",123,0)
 . S IBDA=0
"RTN","IBCEMCA3",124,0)
 . F  S IBDA=$O(^TMP($J,"IBCEMCL",4,2,IBIFN,IBDA)) Q:'IBDA  D
"RTN","IBCEMCA3",125,0)
 .. N DIE,DA,DR,TXT
"RTN","IBCEMCA3",126,0)
 .. S DIE=361,DA=IBDA,DR=".16////"_DT D ^DIE
"RTN","IBCEMCA3",127,0)
 .. S TXT(1)="Claim queued for printing by the MCS - 'Resubmit by Print' action",TXT=1
"RTN","IBCEMCA3",128,0)
 .. D NOTECHG^IBCECSA2(IBDA,0,.TXT,1)
"RTN","IBCEMCA3",129,0)
 .. Q
"RTN","IBCEMCA3",130,0)
 . ;
"RTN","IBCEMCA3",131,0)
 . ; if this is an MRA secondary claim and MRA's are on file and
"RTN","IBCEMCA3",132,0)
 . ; there is a printer defined for MRAs, then include them too
"RTN","IBCEMCA3",133,0)
 . I $$MRAEXIST^IBCEMU1(IBIFN),$P($G(^IBE(353,6,0)),U,2)'="" D
"RTN","IBCEMCA3",134,0)
 .. S ^XTMP("IBCFP6",$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",135,0)
 .. S ^XTMP("IBCFP6",0)=IBXP
"RTN","IBCEMCA3",136,0)
 .. Q
"RTN","IBCEMCA3",137,0)
 . ;
"RTN","IBCEMCA3",138,0)
 . ; if the claim's form type is a HCFA-1500 and there is a printer
"RTN","IBCEMCA3",139,0)
 . ; defined for Bill Addendums, then include them too
"RTN","IBCEMCA3",140,0)
 . I IBFT=2,$P($G(^IBE(353,4,0)),U,2)'="" D
"RTN","IBCEMCA3",141,0)
 .. S ^XTMP("IBCFP4",$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCEMCA3",142,0)
 .. S ^XTMP("IBCFP4",0)=IBXP
"RTN","IBCEMCA3",143,0)
 .. Q
"RTN","IBCEMCA3",144,0)
 . ;
"RTN","IBCEMCA3",145,0)
 . Q
"RTN","IBCEMCA3",146,0)
 ;
"RTN","IBCEMCA3",147,0)
 ; loop thru the ^XTMP scatch global and queue off form type job
"RTN","IBCEMCA3",148,0)
 S IBX="IBCFP" K IBTASK
"RTN","IBCEMCA3",149,0)
 F  S IBX=$O(^XTMP(IBX)) Q:IBX'?1"IBCFP"1.N  D
"RTN","IBCEMCA3",150,0)
 . I '$D(^XTMP(IBX,$J)) Q
"RTN","IBCEMCA3",151,0)
 . S IBFT=+$E(IBX,6,99)
"RTN","IBCEMCA3",152,0)
 . S ZTIO=$P($G(^IBE(353,IBFT,0)),U,2)  ; printer
"RTN","IBCEMCA3",153,0)
 . S IBFTP=IBX                          ; 1st subscript
"RTN","IBCEMCA3",154,0)
 . S IBJ=$J                             ; 2nd subscript
"RTN","IBCEMCA3",155,0)
 . S ZTDTH=$H
"RTN","IBCEMCA3",156,0)
 . S ZTSAVE("IBFTP")=""
"RTN","IBCEMCA3",157,0)
 . S ZTSAVE("IBFT")=""
"RTN","IBCEMCA3",158,0)
 . S ZTSAVE("IBJ")=""
"RTN","IBCEMCA3",159,0)
 . S ZTSAVE("IBMCSPNT")=""
"RTN","IBCEMCA3",160,0)
 . S ZTDESC="MCS BATCH PRINTING "_$$FTN^IBCU3(IBFT)
"RTN","IBCEMCA3",161,0)
 . S ZTRTN="QBILL^IBCFP1"
"RTN","IBCEMCA3",162,0)
 . I IBFT=6 S ZTRTN="QMRA^IBCEMU2"      ; MRA print rtn
"RTN","IBCEMCA3",163,0)
 . D ^%ZTLOAD
"RTN","IBCEMCA3",164,0)
 . S IBTASK(IBFT)=+$G(ZTSK)
"RTN","IBCEMCA3",165,0)
 . Q
"RTN","IBCEMCA3",166,0)
 ;
"RTN","IBCEMCA3",167,0)
 ; Display the queued task#'s
"RTN","IBCEMCA3",168,0)
 I '$D(IBTASK) W !!?5,"Nothing was printed"
"RTN","IBCEMCA3",169,0)
 I $D(IBTASK) D
"RTN","IBCEMCA3",170,0)
 . W !
"RTN","IBCEMCA3",171,0)
 . S IBFT=0 F  S IBFT=$O(IBTASK(IBFT)) Q:'IBFT  D
"RTN","IBCEMCA3",172,0)
 .. W !,$J($$FTN^IBCU3(IBFT),15)," form type printing started with TaskMan task# ",IBTASK(IBFT),"."
"RTN","IBCEMCA3",173,0)
 .. Q
"RTN","IBCEMCA3",174,0)
 . ;
"RTN","IBCEMCA3",175,0)
 . W !!?1,"Please Note:  These EDI status messages will be removed from the CSA screen"
"RTN","IBCEMCA3",176,0)
 . W !?15,"and the MCS screen once it has been confirmed that these claims"
"RTN","IBCEMCA3",177,0)
 . W !?15,"have been successfully printed."
"RTN","IBCEMCA3",178,0)
 . Q
"RTN","IBCEMCA3",179,0)
 ;
"RTN","IBCEMCA3",180,0)
 D PAUSE^VALM1
"RTN","IBCEMCA3",181,0)
 ;
"RTN","IBCEMCA3",182,0)
 ; rebuild the list
"RTN","IBCEMCA3",183,0)
 KILL ^TMP($J,"IBCEMCA"),VALMHDR
"RTN","IBCEMCA3",184,0)
 S VALMBG=1
"RTN","IBCEMCA3",185,0)
 D UNLOCK^IBCEMCL
"RTN","IBCEMCA3",186,0)
 D INIT^IBCEMCL
"RTN","IBCEMCA3",187,0)
 I $G(IBCSAMCS)=1 S IBCSAMCS=2   ; flag to rebuild CSA
"RTN","IBCEMCA3",188,0)
 ;
"RTN","IBCEMCA3",189,0)
PRINTX ;
"RTN","IBCEMCA3",190,0)
 S VALMBCK="R"
"RTN","IBCEMCA3",191,0)
 Q
"RTN","IBCEMCA3",192,0)
 ;
"RTN","IBCEMCL")
0^15^B41449667
"RTN","IBCEMCL",1,0)
IBCEMCL ;ALB/ESG - Multiple CSA Message Management ;20-SEP-2005
"RTN","IBCEMCL",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCEMCL",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMCL",4,0)
 ;
"RTN","IBCEMCL",5,0)
 Q
"RTN","IBCEMCL",6,0)
EN ; -- main entry point
"RTN","IBCEMCL",7,0)
 L +^IBM("MCS"):0 I '$T D  Q    ; option level lock
"RTN","IBCEMCL",8,0)
 . W !!?2,"Sorry, another user is currently using the MCS option."
"RTN","IBCEMCL",9,0)
 . W !?2,"Please try again later."
"RTN","IBCEMCL",10,0)
 . D PAUSE^VALM1
"RTN","IBCEMCL",11,0)
 . Q
"RTN","IBCEMCL",12,0)
 ;
"RTN","IBCEMCL",13,0)
 K ^TMP($J,"IBCEMCA"),^TMP($J,"IBCEMCL")
"RTN","IBCEMCL",14,0)
 D EN^VALM("IBCEMC MCS MESSAGE LIST")
"RTN","IBCEMCL",15,0)
 L -^IBM("MCS")                            ; option level unlock
"RTN","IBCEMCL",16,0)
 Q
"RTN","IBCEMCL",17,0)
 ;
"RTN","IBCEMCL",18,0)
HDR ; -- header code
"RTN","IBCEMCL",19,0)
 NEW Z,NUMSEL,TOT
"RTN","IBCEMCL",20,0)
 S NUMSEL=+$G(^TMP($J,"IBCEMCL",4))      ; number selected
"RTN","IBCEMCL",21,0)
 S TOT=+$O(^TMP($J,"IBCEMCL",3,""),-1)   ; total number in list
"RTN","IBCEMCL",22,0)
 S Z="Number of Claims Selected: "
"RTN","IBCEMCL",23,0)
 S Z=Z_$$FO^IBCNEUT1(NUMSEL,8)
"RTN","IBCEMCL",24,0)
 S Z=Z_$$FO^IBCNEUT1(" ",10)
"RTN","IBCEMCL",25,0)
 S Z=Z_"Total Number in this List: "
"RTN","IBCEMCL",26,0)
 S Z=Z_$$FO^IBCNEUT1(TOT,8)
"RTN","IBCEMCL",27,0)
 S VALMHDR(1)=Z
"RTN","IBCEMCL",28,0)
 Q
"RTN","IBCEMCL",29,0)
 ;
"RTN","IBCEMCL",30,0)
INIT ; -- init variables and list array
"RTN","IBCEMCL",31,0)
 NEW A,CLAIM,DATA,EDI,IB,IB0,IB361,IB364,IBCNT,IBCURBAL,IBDA,IBDATE
"RTN","IBCEMCL",32,0)
 NEW IBDIV,IBIFN,IBPAT,IBREV,IBSSN,IBSTSMSG,IBSVC,IBU1,INCLUDE,INS
"RTN","IBCEMCL",33,0)
 NEW INSTID,PAYER,PROFID,SELTXT,TXT,X
"RTN","IBCEMCL",34,0)
 W !!,"Compiling MCS Data ... "
"RTN","IBCEMCL",35,0)
 KILL ^TMP($J,"IBCEMCL")     ; List related scratch global
"RTN","IBCEMCL",36,0)
 S IBREV=""
"RTN","IBCEMCL",37,0)
 F  S IBREV=$O(^IBM(361,"ACSA","R",IBREV)) Q:IBREV=""  I IBREV<2 S IBDA=0 F  S IBDA=$O(^IBM(361,"ACSA","R",IBREV,IBDA)) Q:'IBDA  D
"RTN","IBCEMCL",38,0)
 . S IB361=$G(^IBM(361,IBDA,0)),IBIFN=+IB361
"RTN","IBCEMCL",39,0)
 . S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMCL",40,0)
 . ;
"RTN","IBCEMCL",41,0)
 . ; no cancelled claims
"RTN","IBCEMCL",42,0)
 . I $P(IB0,U,13)=7 D UPDEDI^IBCEM(+$P(IB361,U,11),"C") Q
"RTN","IBCEMCL",43,0)
 . ;
"RTN","IBCEMCL",44,0)
 . ; automatically review this message if the claim was last printed on
"RTN","IBCEMCL",45,0)
 . ; or after the MCS - 'Resubmit by Print' date
"RTN","IBCEMCL",46,0)
 . I $P(IB361,U,16),($P($G(^DGCR(399,IBIFN,"S")),U,14)\1)'<$P(IB361,U,16) D UPDEDI^IBCEM(+$P(IB361,U,11),"P") Q
"RTN","IBCEMCL",47,0)
 . ;
"RTN","IBCEMCL",48,0)
 . ; payer
"RTN","IBCEMCL",49,0)
 . S INS=+$P($G(^DGCR(399,IBIFN,"MP")),U,1)
"RTN","IBCEMCL",50,0)
 . I 'INS S INS=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCEMCL",51,0)
 . I INS S PAYER=$P($G(^DIC(36,INS,0)),U,1)
"RTN","IBCEMCL",52,0)
 . I 'INS S PAYER="~unknown payer"
"RTN","IBCEMCL",53,0)
 . ;
"RTN","IBCEMCL",54,0)
 . ; screen for user selected payers
"RTN","IBCEMCL",55,0)
 . I $D(^TMP($J,"IBCEMCA","INS")) D  Q:'INCLUDE
"RTN","IBCEMCL",56,0)
 .. S INCLUDE=0
"RTN","IBCEMCL",57,0)
 .. I 'INS Q     ; don't include if the payer can't be found
"RTN","IBCEMCL",58,0)
 .. I $D(^TMP($J,"IBCEMCA","INS",1,INS)) S INCLUDE=1 Q
"RTN","IBCEMCL",59,0)
 .. I '$D(^TMP($J,"IBCEMCA","INS",2)) Q
"RTN","IBCEMCL",60,0)
 .. S EDI=$$UP^XLFSTR($G(^DIC(36,INS,3)))
"RTN","IBCEMCL",61,0)
 .. S PROFID=$P(EDI,U,2),INSTID=$P(EDI,U,4)
"RTN","IBCEMCL",62,0)
 .. I PROFID'="",$D(^TMP($J,"IBCEMCA","INS",2,PROFID)) S INCLUDE=1 Q
"RTN","IBCEMCL",63,0)
 .. I INSTID'="",$D(^TMP($J,"IBCEMCA","INS",2,INSTID)) S INCLUDE=1 Q
"RTN","IBCEMCL",64,0)
 .. Q
"RTN","IBCEMCL",65,0)
 . ;
"RTN","IBCEMCL",66,0)
 . ; screen for user selected divisions
"RTN","IBCEMCL",67,0)
 . I $D(^TMP($J,"IBCEMCA","DIV")) D  Q:'INCLUDE
"RTN","IBCEMCL",68,0)
 .. S INCLUDE=0
"RTN","IBCEMCL",69,0)
 .. S IBDIV=+$P(IB0,U,22) I 'IBDIV Q
"RTN","IBCEMCL",70,0)
 .. I $D(^TMP($J,"IBCEMCA","DIV",IBDIV)) S INCLUDE=1 Q
"RTN","IBCEMCL",71,0)
 .. Q
"RTN","IBCEMCL",72,0)
 . ;
"RTN","IBCEMCL",73,0)
 . S IBSTSMSG=$$TXT^IBCECSA1(IBDA,300)           ; status message text
"RTN","IBCEMCL",74,0)
 . I IBSTSMSG="" S IBSTSMSG="~no error text"
"RTN","IBCEMCL",75,0)
 . ;
"RTN","IBCEMCL",76,0)
 . ; screen for user selected error message text
"RTN","IBCEMCL",77,0)
 . I $D(^TMP($J,"IBCEMCA","TEXT")) D  Q:'INCLUDE
"RTN","IBCEMCL",78,0)
 .. S INCLUDE=0
"RTN","IBCEMCL",79,0)
 .. S SELTXT="" F  S SELTXT=$O(^TMP($J,"IBCEMCA","TEXT",SELTXT)) Q:SELTXT=""  I IBSTSMSG[SELTXT S INCLUDE=1 Q
"RTN","IBCEMCL",80,0)
 .. Q
"RTN","IBCEMCL",81,0)
 . ;
"RTN","IBCEMCL",82,0)
 . ; screen for user selected date range
"RTN","IBCEMCL",83,0)
 . I $D(^TMP($J,"IBCEMCA","DATE")) D  Q:'INCLUDE
"RTN","IBCEMCL",84,0)
 .. S INCLUDE=0,A=^TMP($J,"IBCEMCA","DATE")
"RTN","IBCEMCL",85,0)
 .. S IBDATE=$P(IB361,U,2)    ; date message received
"RTN","IBCEMCL",86,0)
 .. I ($P(A,U,1)'>IBDATE),(IBDATE'>$P(A,U,2)) S INCLUDE=1 Q
"RTN","IBCEMCL",87,0)
 .. Q
"RTN","IBCEMCL",88,0)
 . ;
"RTN","IBCEMCL",89,0)
 . ; patient and ssn
"RTN","IBCEMCL",90,0)
 . S IBPAT=$G(^DPT(+$P(IB0,U,2),0))
"RTN","IBCEMCL",91,0)
 . S IBSSN=$E($P(IBPAT,U,9),6,9)
"RTN","IBCEMCL",92,0)
 . S IBPAT=$P(IBPAT,U,1)
"RTN","IBCEMCL",93,0)
 . ;
"RTN","IBCEMCL",94,0)
 . S IBSVC=$P($G(^DGCR(399,IBIFN,"U")),U,1)  ; statement covers from
"RTN","IBCEMCL",95,0)
 . S IB364=$P(IB361,U,11)                    ; transmission file entry
"RTN","IBCEMCL",96,0)
 . S IBU1=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCEMCL",97,0)
 . S IBCURBAL=$P(IBU1,U,1)-$P(IBU1,U,2)      ; current balance
"RTN","IBCEMCL",98,0)
 . S CLAIM=$P(IB0,U,1)                       ; external bill#
"RTN","IBCEMCL",99,0)
 . ;
"RTN","IBCEMCL",100,0)
 . S DATA=IBIFN_U_IB364_U_CLAIM_U_PAYER_U_IBPAT_U_IBSSN_U_IBSVC_U_IBCURBAL
"RTN","IBCEMCL",101,0)
 . S ^TMP($J,"IBCEMCL",1,$E(IBSTSMSG,1,80),IBDA)=DATA
"RTN","IBCEMCL",102,0)
 . Q
"RTN","IBCEMCL",103,0)
 ;
"RTN","IBCEMCL",104,0)
 I '$D(^TMP($J,"IBCEMCL",1)) D  G INITX
"RTN","IBCEMCL",105,0)
 . S VALMCNT=2
"RTN","IBCEMCL",106,0)
 . S ^TMP($J,"IBCEMCL",2,1,0)=""
"RTN","IBCEMCL",107,0)
 . S ^TMP($J,"IBCEMCL",2,2,0)="  No Status Message Data to Display"
"RTN","IBCEMCL",108,0)
 . Q
"RTN","IBCEMCL",109,0)
 ;
"RTN","IBCEMCL",110,0)
BLD ; Build the display area of the list
"RTN","IBCEMCL",111,0)
 ;
"RTN","IBCEMCL",112,0)
 W !,"Building the MCS list display ... "
"RTN","IBCEMCL",113,0)
 S TXT="",IBCNT=0,VALMCNT=0
"RTN","IBCEMCL",114,0)
 F  S TXT=$O(^TMP($J,"IBCEMCL",1,TXT)) Q:TXT=""  D
"RTN","IBCEMCL",115,0)
 . D SET("")
"RTN","IBCEMCL",116,0)
 . D SET(TXT)
"RTN","IBCEMCL",117,0)
 . S IBDA=0
"RTN","IBCEMCL",118,0)
 . F  S IBDA=$O(^TMP($J,"IBCEMCL",1,TXT,IBDA)) Q:'IBDA  D
"RTN","IBCEMCL",119,0)
 .. S IB=$G(^TMP($J,"IBCEMCL",1,TXT,IBDA)),IBIFN=+IB,IB364=$P(IB,U,2)
"RTN","IBCEMCL",120,0)
 .. S IBCNT=IBCNT+1,DATA=IBIFN_U_IBDA_U_IB364
"RTN","IBCEMCL",121,0)
 .. S X=$$SETFLD^VALM1($J(IBCNT,3),"","NUMBER")
"RTN","IBCEMCL",122,0)
 .. S X=$$SETFLD^VALM1($P(IB,U,3),X,"BILL")
"RTN","IBCEMCL",123,0)
 .. S X=$$SETFLD^VALM1($P(IB,U,4),X,"PAYER")
"RTN","IBCEMCL",124,0)
 .. S X=$$SETFLD^VALM1($P(IB,U,5),X,"PATIENT")
"RTN","IBCEMCL",125,0)
 .. S X=$$SETFLD^VALM1($P(IB,U,6),X,"SSN")
"RTN","IBCEMCL",126,0)
 .. S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB,U,7),"2Z"),X,"SERVICE")
"RTN","IBCEMCL",127,0)
 .. S X=$$SETFLD^VALM1($J("$"_$FN($P(IB,U,8),"",2),10),X,"CURBAL")
"RTN","IBCEMCL",128,0)
 .. D SET(X,IBCNT,DATA)
"RTN","IBCEMCL",129,0)
 .. Q
"RTN","IBCEMCL",130,0)
 . Q
"RTN","IBCEMCL",131,0)
 ;
"RTN","IBCEMCL",132,0)
INITX ;
"RTN","IBCEMCL",133,0)
 Q
"RTN","IBCEMCL",134,0)
 ;
"RTN","IBCEMCL",135,0)
SET(X,CNT,DATA) ; Set an entry into the display array and scratch global
"RTN","IBCEMCL",136,0)
 ; X - visual line to display
"RTN","IBCEMCL",137,0)
 ; CNT - current record counter
"RTN","IBCEMCL",138,0)
 ; DATA - 3 piece string IBIFN^IBDA^IB364 (optional)
"RTN","IBCEMCL",139,0)
 I X="",'VALMCNT G SETX    ; don't start list with a blank line
"RTN","IBCEMCL",140,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEMCL",141,0)
 I '$G(CNT) S CNT=$G(IBCNT)+1
"RTN","IBCEMCL",142,0)
 S ^TMP($J,"IBCEMCL",2,VALMCNT,0)=X
"RTN","IBCEMCL",143,0)
 S ^TMP($J,"IBCEMCL",2,"IDX",VALMCNT,CNT)=""
"RTN","IBCEMCL",144,0)
 I $G(DATA)="" G SETX
"RTN","IBCEMCL",145,0)
 ;
"RTN","IBCEMCL",146,0)
 S ^TMP($J,"IBCEMCL",3,CNT)=DATA_U_VALMCNT
"RTN","IBCEMCL",147,0)
 ;
"RTN","IBCEMCL",148,0)
 ; When building the list and the ^TMP($J,"IBCEMCA") area is defined,
"RTN","IBCEMCL",149,0)
 ; then automatically pre-select all entries in the list.
"RTN","IBCEMCL",150,0)
 I $D(^TMP($J,"IBCEMCA")) D MARK(+$P(DATA,U,2),+DATA,VALMCNT,CNT)
"RTN","IBCEMCL",151,0)
SETX ;
"RTN","IBCEMCL",152,0)
 Q
"RTN","IBCEMCL",153,0)
 ;
"RTN","IBCEMCL",154,0)
HELP ; -- help code
"RTN","IBCEMCL",155,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEMCL",156,0)
 Q
"RTN","IBCEMCL",157,0)
 ;
"RTN","IBCEMCL",158,0)
EXIT ; -- exit code
"RTN","IBCEMCL",159,0)
 D UNLOCK
"RTN","IBCEMCL",160,0)
 KILL ^TMP($J,"IBCEMCL"),^TMP($J,"IBCEMCA")
"RTN","IBCEMCL",161,0)
 Q
"RTN","IBCEMCL",162,0)
 ;
"RTN","IBCEMCL",163,0)
UNLOCK ; unlock any entries that may still be selected
"RTN","IBCEMCL",164,0)
 N IBDA S IBDA=0
"RTN","IBCEMCL",165,0)
 F  S IBDA=$O(^TMP($J,"IBCEMCL",4,1,IBDA)) Q:'IBDA  L -^IBM(361,IBDA)
"RTN","IBCEMCL",166,0)
UNLOCKX ;
"RTN","IBCEMCL",167,0)
 Q
"RTN","IBCEMCL",168,0)
 ;
"RTN","IBCEMCL",169,0)
MARK(IBDA,IBIFN,VALMCNT,INDEX,RESULT) ; Select/De-select Entry in List.
"RTN","IBCEMCL",170,0)
 ; This procedure toggles the selection of a status message either
"RTN","IBCEMCL",171,0)
 ; ON or OFF.  It also adds or removes the "*" to the list display.
"RTN","IBCEMCL",172,0)
 ; If a selection can't be locked, then it will not be selected.
"RTN","IBCEMCL",173,0)
 ; VALMHDR is killed so ListManager will invoke the header code.
"RTN","IBCEMCL",174,0)
 ;
"RTN","IBCEMCL",175,0)
 ; RESULT is returned if passed by reference
"RTN","IBCEMCL",176,0)
 ;   "D" message was de-selected and unlocked
"RTN","IBCEMCL",177,0)
 ;   "S" message was selected and locked
"RTN","IBCEMCL",178,0)
 ;   "L" message could not be locked nor selected
"RTN","IBCEMCL",179,0)
 ;
"RTN","IBCEMCL",180,0)
 I $D(^TMP($J,"IBCEMCL",4,1,IBDA)) D  G MARKX   ; already selected
"RTN","IBCEMCL",181,0)
 . ;
"RTN","IBCEMCL",182,0)
 . ; de-select action
"RTN","IBCEMCL",183,0)
 . KILL ^TMP($J,"IBCEMCL",4,1,IBDA)
"RTN","IBCEMCL",184,0)
 . KILL ^TMP($J,"IBCEMCL",4,2,IBIFN,IBDA)
"RTN","IBCEMCL",185,0)
 . S ^TMP($J,"IBCEMCL",4)=$G(^TMP($J,"IBCEMCL",4))-1
"RTN","IBCEMCL",186,0)
 . S $E(^TMP($J,"IBCEMCL",2,VALMCNT,0),6)=" "
"RTN","IBCEMCL",187,0)
 . KILL VALMHDR
"RTN","IBCEMCL",188,0)
 . L -^IBM(361,IBDA)    ; unlock
"RTN","IBCEMCL",189,0)
 . S RESULT="D"
"RTN","IBCEMCL",190,0)
 . Q
"RTN","IBCEMCL",191,0)
 ;
"RTN","IBCEMCL",192,0)
 ; lock attempt prior to selection
"RTN","IBCEMCL",193,0)
 L +^IBM(361,IBDA):0 I '$T D  G MARKX
"RTN","IBCEMCL",194,0)
 . S RESULT="L"
"RTN","IBCEMCL",195,0)
 . Q
"RTN","IBCEMCL",196,0)
 ;
"RTN","IBCEMCL",197,0)
 ; select action
"RTN","IBCEMCL",198,0)
 S ^TMP($J,"IBCEMCL",4,1,IBDA)=IBIFN_U_VALMCNT_U_INDEX
"RTN","IBCEMCL",199,0)
 S ^TMP($J,"IBCEMCL",4,2,IBIFN,IBDA)=""
"RTN","IBCEMCL",200,0)
 S ^TMP($J,"IBCEMCL",4)=$G(^TMP($J,"IBCEMCL",4))+1
"RTN","IBCEMCL",201,0)
 S $E(^TMP($J,"IBCEMCL",2,VALMCNT,0),6)="*"
"RTN","IBCEMCL",202,0)
 KILL VALMHDR
"RTN","IBCEMCL",203,0)
 S RESULT="S"
"RTN","IBCEMCL",204,0)
MARKX ;
"RTN","IBCEMCL",205,0)
 Q
"RTN","IBCEMCL",206,0)
 ;
"RTN","IBCEMU2")
0^21^B34857625^B34074055
"RTN","IBCEMU2",1,0)
IBCEMU2 ;ALB/DSM - IB MRA Utility ;01-MAY-2003
"RTN","IBCEMU2",2,0)
 ;;2.0;INTEGRATED BILLING;**155,320**;21-MAR-94
"RTN","IBCEMU2",3,0)
 ;
"RTN","IBCEMU2",4,0)
 Q
"RTN","IBCEMU2",5,0)
 ;
"RTN","IBCEMU2",6,0)
QMRA ; This is a background procedure that is spun off of the IB BATCH
"RTN","IBCEMU2",7,0)
 ; Print option. This process scans a queue in ^XTMP("IBMRA"_#,$J) and checks
"RTN","IBCEMU2",8,0)
 ; each Bill to see if a printable MRA exist, if so, prints them. MRA's print
"RTN","IBCEMU2",9,0)
 ; on the device associated with the 'Bill Addendum' Form Type.
"RTN","IBCEMU2",10,0)
 ; This process doesn't interact with users.
"RTN","IBCEMU2",11,0)
 ;
"RTN","IBCEMU2",12,0)
 ; IB*2*320:  MCS - Resubmit by Print produces a scratch global also
"RTN","IBCEMU2",13,0)
 ;            ^XTMP("IBCFP6",$J,.... for MRA's to print here
"RTN","IBCEMU2",14,0)
 ;
"RTN","IBCEMU2",15,0)
 ; Input:
"RTN","IBCEMU2",16,0)
 ;      IBJ   = $J of starting job
"RTN","IBCEMU2",17,0)
 ;      IBFTP = "IBMRA"_# (ien of form type) or "IBCFP6"
"RTN","IBCEMU2",18,0)
 ;
"RTN","IBCEMU2",19,0)
 N IBS1,IBS2,IBS3,IBIFN,IBQ,IBPGN
"RTN","IBCEMU2",20,0)
 S (IBS1,IBIFN,IBQ)=0
"RTN","IBCEMU2",21,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""  D  I IBQ Q
"RTN","IBCEMU2",22,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""  D  I IBQ Q
"RTN","IBCEMU2",23,0)
 . . S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""  D  I IBQ Q
"RTN","IBCEMU2",24,0)
 . . . S IBIFN=0 F  S IBIFN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBIFN)) Q:IBIFN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCEMU2",25,0)
 . . . . I $$MRAEXIST^IBCEMU1(IBIFN) D PROC^IBCEMRAA W @IOF ;must have IBIFN set
"RTN","IBCEMU2",26,0)
 K ^XTMP(IBFTP,IBJ) S ZTREQ="@"
"RTN","IBCEMU2",27,0)
 Q  ;QMRA
"RTN","IBCEMU2",28,0)
 ;
"RTN","IBCEMU2",29,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCEMU2",30,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCEMU2",31,0)
 Q +$G(ZTSTOP)
"RTN","IBCEMU2",32,0)
 ;
"RTN","IBCEMU2",33,0)
 ;
"RTN","IBCEMU2",34,0)
STAT(IBIFN,STATUS,MRAONLY) ; Update the review status in the EOB file
"RTN","IBCEMU2",35,0)
 ; This procedure updates field .16 in file 361.1 for all EOB's for
"RTN","IBCEMU2",36,0)
 ; the given bill#
"RTN","IBCEMU2",37,0)
 ; 
"RTN","IBCEMU2",38,0)
 ;   IBIFN   - Internal Bill# (required)
"RTN","IBCEMU2",39,0)
 ;   STATUS  - Internal Value of the Review Status field (required)
"RTN","IBCEMU2",40,0)
 ;   MRAONLY - Optional Flag with a default of 0 if not passed in
"RTN","IBCEMU2",41,0)
 ;             1:only update MRA EOB's for this bill
"RTN","IBCEMU2",42,0)
 ;             0:update all EOB's for this bill
"RTN","IBCEMU2",43,0)
 ;
"RTN","IBCEMU2",44,0)
 NEW RESULT,IBEOB,IBM
"RTN","IBCEMU2",45,0)
 NEW DIE,DA,DR,D,D0,DI,DIC,DICR,DIG,DIH,DISYS,DIU,DIV,DIW,DQ,DIERR,X,Y
"RTN","IBCEMU2",46,0)
 S IBIFN=+$G(IBIFN),STATUS=$G(STATUS)
"RTN","IBCEMU2",47,0)
 S MRAONLY=$G(MRAONLY,0)
"RTN","IBCEMU2",48,0)
 ;
"RTN","IBCEMU2",49,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G STATX    ; no EOB's for this bill
"RTN","IBCEMU2",50,0)
 D CHK^DIE(361.1,.16,,STATUS,.RESULT)
"RTN","IBCEMU2",51,0)
 I RESULT="^" G STATX                    ; invalid status passed in
"RTN","IBCEMU2",52,0)
 ;
"RTN","IBCEMU2",53,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",54,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D
"RTN","IBCEMU2",55,0)
 . S IBM=$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEMU2",56,0)
 . I $P(IBM,U,16)=STATUS Q           ; no change
"RTN","IBCEMU2",57,0)
 . I MRAONLY,'$P(IBM,U,4) Q          ; skip because of parameter
"RTN","IBCEMU2",58,0)
 . S DIE=361.1,DA=IBEOB,DR=".16////"_STATUS D ^DIE
"RTN","IBCEMU2",59,0)
 . Q
"RTN","IBCEMU2",60,0)
 ;
"RTN","IBCEMU2",61,0)
STATX ;
"RTN","IBCEMU2",62,0)
 Q
"RTN","IBCEMU2",63,0)
 ;
"RTN","IBCEMU2",64,0)
MRAWL(IBIFN) ; Do any MRA EOB's for this bill appear on the worklist?
"RTN","IBCEMU2",65,0)
 ;
"RTN","IBCEMU2",66,0)
 ; This function returns 1 if at least one MRA EOB for the given bill
"RTN","IBCEMU2",67,0)
 ; appears on the MRA management worklist.  Otherwise, this function
"RTN","IBCEMU2",68,0)
 ; returns 0.
"RTN","IBCEMU2",69,0)
 ;
"RTN","IBCEMU2",70,0)
 NEW OK,IBEOB
"RTN","IBCEMU2",71,0)
 S OK=0,IBIFN=+$G(IBIFN)
"RTN","IBCEMU2",72,0)
 I '$D(^IBM(361.1,"B",IBIFN)) G MRAWLX     ; no EOB's for this bill
"RTN","IBCEMU2",73,0)
 S IBEOB=0        ; loop thru all EOB's for the bill
"RTN","IBCEMU2",74,0)
 F  S IBEOB=$O(^IBM(361.1,"B",IBIFN,IBEOB)) Q:'IBEOB  D  Q:OK
"RTN","IBCEMU2",75,0)
 . I $$ELIG^IBCECOB1(IBEOB) S OK=1
"RTN","IBCEMU2",76,0)
 . Q
"RTN","IBCEMU2",77,0)
MRAWLX ;
"RTN","IBCEMU2",78,0)
 Q OK
"RTN","IBCEMU2",79,0)
 ;
"RTN","IBCEMU2",80,0)
TXSTS(IBIFN,IB364,REJFLG,IBZ) ; Claim transmission status information
"RTN","IBCEMU2",81,0)
 ; Input   IBIFN - required
"RTN","IBCEMU2",82,0)
 ;         IB364 - optional (defaults to most recent transmission#)
"RTN","IBCEMU2",83,0)
 ; Output  REJFLG (pass by reference) - 1/0 flag if any rejection status
"RTN","IBCEMU2",84,0)
 ;                                      messages on file
"RTN","IBCEMU2",85,0)
 ;         IBZ (pass by reference) - array of information
"RTN","IBCEMU2",86,0)
 ;
"RTN","IBCEMU2",87,0)
 NEW IEN,SMCNT,SEV,BCH,BCHD0,BCHD1
"RTN","IBCEMU2",88,0)
 S REJFLG=0 K IBZ
"RTN","IBCEMU2",89,0)
 S IBIFN=+$G(IBIFN) I 'IBIFN G TXSTSX
"RTN","IBCEMU2",90,0)
 S IB364=+$G(IB364)
"RTN","IBCEMU2",91,0)
 I 'IB364 S IB364=$$LAST364^IBCEF4(IBIFN) I 'IB364 G TXSTSX
"RTN","IBCEMU2",92,0)
 I $P($G(^IBA(364,IB364,0)),U,1)'=IBIFN G TXSTSX
"RTN","IBCEMU2",93,0)
 S IEN=0,SMCNT=0
"RTN","IBCEMU2",94,0)
 F  S IEN=$O(^IBM(361,"AERR",IB364,IEN)) Q:'IEN  D
"RTN","IBCEMU2",95,0)
 . S SMCNT=SMCNT+1
"RTN","IBCEMU2",96,0)
 . S SEV=$P($G(^IBM(361,IEN,0)),U,3)   ; status message severity
"RTN","IBCEMU2",97,0)
 . I SEV="R" S REJFLG=1
"RTN","IBCEMU2",98,0)
 . Q
"RTN","IBCEMU2",99,0)
 S BCH=+$P($G(^IBA(364,IB364,0)),U,2)  ; batch ien
"RTN","IBCEMU2",100,0)
 S BCHD0=$G(^IBA(364.1,BCH,0))
"RTN","IBCEMU2",101,0)
 S BCHD1=$G(^IBA(364.1,BCH,1))
"RTN","IBCEMU2",102,0)
 S IBZ("DATE LAST SENT")=$P(BCHD1,U,3)
"RTN","IBCEMU2",103,0)
 S IBZ("NUMBER OF STATUS MESSAGES")=SMCNT
"RTN","IBCEMU2",104,0)
 S IBZ("BATCH NUMBER")=$P(BCHD0,U,1)
"RTN","IBCEMU2",105,0)
 S IBZ("TRANSMISSION STATUS")=$P($G(^IBA(364,IB364,0)),U,3)
"RTN","IBCEMU2",106,0)
TXSTSX ;
"RTN","IBCEMU2",107,0)
 Q
"RTN","IBCEMU2",108,0)
 ;
"RTN","IBCEMU2",109,0)
MRACALC(IBEOB,IBIFN,AR,PRCASV) ; Calculates Two Amounts:
"RTN","IBCEMU2",110,0)
 ;  Unreimbursable Medicare Expense and Medicare Contract Adjustment
"RTN","IBCEMU2",111,0)
 ;  Amount for a given EOB.
"RTN","IBCEMU2",112,0)
 ;
"RTN","IBCEMU2",113,0)
 ; Input   IBIFN= ien of Claim file 399 - Required
"RTN","IBCEMU2",114,0)
 ;         IBEOB= ien of EOB file 361.1 - Required
"RTN","IBCEMU2",115,0)
 ;         AR=    Flag indicating this was called from AR function
"RTN","IBCEMU2",116,0)
 ; Input/Output  PRCASV= array with the two calculated values
"RTN","IBCEMU2",117,0)
 ;         PRCASV("MEDURE")=Unreimbursable Medicare Expense
"RTN","IBCEMU2",118,0)
 ;         PRCASV("MEDCA")=Medicare Contract Adjustment Amount
"RTN","IBCEMU2",119,0)
 ;
"RTN","IBCEMU2",120,0)
 ; For multiple EOB's, add up the calculated values across EOB's
"RTN","IBCEMU2",121,0)
 ;
"RTN","IBCEMU2",122,0)
 N I,LNLVL,EOBADJ,IBCOBN,INPAT,FRMTYP
"RTN","IBCEMU2",123,0)
 ;
"RTN","IBCEMU2",124,0)
 S FRMTYP=$$FT^IBCEF(IBIFN)       ;Form Type 2=HCFA 1500; 3=UB92
"RTN","IBCEMU2",125,0)
 S INPAT=$$INPAT^IBCEF(IBIFN)     ;Inpat/Outpat Flag
"RTN","IBCEMU2",126,0)
 S AR=$G(AR,0)    ;initialize AR flag
"RTN","IBCEMU2",127,0)
 F I=0,1,2 S IBEOB(I)=$G(^IBM(361.1,IBEOB,I))
"RTN","IBCEMU2",128,0)
 I $P(IBEOB(0),U,4)'=1 Q  ;make sure it's an MRA
"RTN","IBCEMU2",129,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) ;get current bill sequence
"RTN","IBCEMU2",130,0)
 ; Make sure we're on the right insurance sequence when AR flag is on
"RTN","IBCEMU2",131,0)
 I AR I $P(IBEOB(0),U,15)'=(IBCOBN-1) Q
"RTN","IBCEMU2",132,0)
 ;
"RTN","IBCEMU2",133,0)
 ; Unreimburseable Medicare Expense (same calc regardless of form type)
"RTN","IBCEMU2",134,0)
 ; For multiple EOB's, add up the amounts across EOB's
"RTN","IBCEMU2",135,0)
 S PRCASV("MEDURE")=$G(PRCASV("MEDURE"))+IBEOB(1)
"RTN","IBCEMU2",136,0)
 ;
"RTN","IBCEMU2",137,0)
 ; Handle HCFA 1500 Form Type Next:
"RTN","IBCEMU2",138,0)
 I FRMTYP=2 D MEDCARE(IBEOB,.PRCASV) Q
"RTN","IBCEMU2",139,0)
 ;
"RTN","IBCEMU2",140,0)
 ; Handle UB92 Form Type Next:
"RTN","IBCEMU2",141,0)
 ; If Inpatient Calculate from Claim level data
"RTN","IBCEMU2",142,0)
 I INPAT D  Q  ;
"RTN","IBCEMU2",143,0)
 . K EOBADJ M EOBADJ=^IBM(361.1,IBEOB,10)
"RTN","IBCEMU2",144,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",145,0)
 ;
"RTN","IBCEMU2",146,0)
 ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",147,0)
 D MEDCARE(IBEOB,.PRCASV)
"RTN","IBCEMU2",148,0)
 Q  ;MRACALC
"RTN","IBCEMU2",149,0)
 ;
"RTN","IBCEMU2",150,0)
MEDCARE(IBEOB,PRCASV) ; If Outpatient Calculate from Service Line level data
"RTN","IBCEMU2",151,0)
 N LNLVL,EOBADJ
"RTN","IBCEMU2",152,0)
 S LNLVL=0
"RTN","IBCEMU2",153,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  D  ;
"RTN","IBCEMU2",154,0)
 . K EOBADJ
"RTN","IBCEMU2",155,0)
 . M EOBADJ=^IBM(361.1,IBEOB,15,LNLVL,1)
"RTN","IBCEMU2",156,0)
 . ; Total up the Medicare Contract Adjustment across ALL Service Lines
"RTN","IBCEMU2",157,0)
 . S PRCASV("MEDCA")=$G(PRCASV("MEDCA"))+$$CALCMCA(.EOBADJ)
"RTN","IBCEMU2",158,0)
 Q  ;MEDCARE
"RTN","IBCEMU2",159,0)
 ;
"RTN","IBCEMU2",160,0)
CALCMCA(EOBADJ) ; FUNCTION - Calculate Medicare Contract Adjustment
"RTN","IBCEMU2",161,0)
 ; Sums up Amounts on ALL Reason Codes under ALL Group Codes = 'CO' and
"RTN","IBCEMU2",162,0)
 ; returns that value (which is Medicare Contract Adjustment).
"RTN","IBCEMU2",163,0)
 ;
"RTN","IBCEMU2",164,0)
 ; Input  EOBADJ = Array of Group Codes & Reason Codes from either the Claim 
"RTN","IBCEMU2",165,0)
 ;                 Level (10) or Service Line Level (15) of EOB file (#361.1)
"RTN","IBCEMU2",166,0)
 ; Output  returns Medicare Contract Adjustment
"RTN","IBCEMU2",167,0)
 ;
"RTN","IBCEMU2",168,0)
 N GRPLVL,RSNLVL,RSNAMT,MCA
"RTN","IBCEMU2",169,0)
 S (GRPLVL,MCA)=0
"RTN","IBCEMU2",170,0)
 F  S GRPLVL=$O(EOBADJ(GRPLVL)) Q:'GRPLVL  D  ;
"RTN","IBCEMU2",171,0)
 . I $P($G(EOBADJ(GRPLVL,0)),U)'="CO" Q
"RTN","IBCEMU2",172,0)
 . S RSNLVL=0
"RTN","IBCEMU2",173,0)
 . F  S RSNLVL=$O(EOBADJ(GRPLVL,1,RSNLVL)) Q:'RSNLVL  D  ;
"RTN","IBCEMU2",174,0)
 . . S RSNAMT=$P($G(EOBADJ(GRPLVL,1,RSNLVL,0)),U,2)
"RTN","IBCEMU2",175,0)
 . . S MCA=MCA+RSNAMT
"RTN","IBCEMU2",176,0)
 Q MCA  ;CALCMCA
"RTN","IBCEMU2",177,0)
 ;
"RTN","IBCEMU2",178,0)
ALLOWED(IBEOB) ; Returns Total Allowed Amount by summing up all Allowed Amounts 
"RTN","IBCEMU2",179,0)
 ; from Line Level Adjustment
"RTN","IBCEMU2",180,0)
 ; Input: IBEOB = ien of EOB file (361.1)
"RTN","IBCEMU2",181,0)
 ; 
"RTN","IBCEMU2",182,0)
 N LNLVL,LNLVLD,ALWD,TOTALWD
"RTN","IBCEMU2",183,0)
 S (LNLVL,TOTALWD)=0
"RTN","IBCEMU2",184,0)
 F  S LNLVL=$O(^IBM(361.1,IBEOB,15,LNLVL)) Q:'LNLVL  S LNLVLD=^(LNLVL,0) D
"RTN","IBCEMU2",185,0)
 . S ALWD=$P(LNLVLD,U,13),TOTALWD=TOTALWD+ALWD   ; Allowed Amount
"RTN","IBCEMU2",186,0)
 Q TOTALWD  ;ALLOWED
"RTN","IBCEMU2",187,0)
 ;
"RTN","IBCEMU2",188,0)
MRATYPE(BILL,ARDATE) ; Function - determines the MRA Receivable Type for a Third
"RTN","IBCEMU2",189,0)
 ; Party Receivable. This is accomplished by comparing DATE MRA FIRST ACTIVATED
"RTN","IBCEMU2",190,0)
 ; with AR Activation Date for the Bill.
"RTN","IBCEMU2",191,0)
 ; 
"RTN","IBCEMU2",192,0)
 ; Input     BILL= ien of a given Bill Number (Required)
"RTN","IBCEMU2",193,0)
 ;         ARDATE= Date Account Receivable was Activated - date only  (Required)
"RTN","IBCEMU2",194,0)
 ;
"RTN","IBCEMU2",195,0)
 ; Output - Possible Types:
"RTN","IBCEMU2",196,0)
 ;          1 = Pre-MRA implementation
"RTN","IBCEMU2",197,0)
 ;          2 = Post MRA Medicare Receivable
"RTN","IBCEMU2",198,0)
 ;          3 = Post MRA non-Medicare Receivable
"RTN","IBCEMU2",199,0)
 ;
"RTN","IBCEMU2",200,0)
 N MRADTACT,MRAMT
"RTN","IBCEMU2",201,0)
 I '$G(ARDATE)!'$G(BILL) Q 1
"RTN","IBCEMU2",202,0)
 ;
"RTN","IBCEMU2",203,0)
 ; get DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",204,0)
 S MRADTACT=$$MRADTACT()
"RTN","IBCEMU2",205,0)
 ;
"RTN","IBCEMU2",206,0)
 ; MRA not Activated at site
"RTN","IBCEMU2",207,0)
 I MRADTACT="" Q 1 ;MRATYPE
"RTN","IBCEMU2",208,0)
 ; 
"RTN","IBCEMU2",209,0)
 ; Bill from pre-MRA implementation era
"RTN","IBCEMU2",210,0)
 I ARDATE<MRADTACT Q 1 ;MRATYPE
"RTN","IBCEMU2",211,0)
 ;
"RTN","IBCEMU2",212,0)
 ; Post-MRA Medicare bill; get Medicare amounts
"RTN","IBCEMU2",213,0)
 S MRAMT=$G(^PRCA(430,BILL,13))
"RTN","IBCEMU2",214,0)
 ; check Medicare Contractual Adjustment Amount
"RTN","IBCEMU2",215,0)
 I $P(MRAMT,U,1) Q 2 ;MRATYPE
"RTN","IBCEMU2",216,0)
 ; check Medicare Unreimburseable Amout
"RTN","IBCEMU2",217,0)
 I $P(MRAMT,U,2) Q 2 ;MRATYPE
"RTN","IBCEMU2",218,0)
 ; check if bill is a Medicare one
"RTN","IBCEMU2",219,0)
 I $$MRAEXIST^IBCEMU1(BILL) Q 2 ;MRATYPE
"RTN","IBCEMU2",220,0)
 ; check if bill is a Medicare Supplemental one
"RTN","IBCEMU2",221,0)
 I $P($$CRIT^IBRFN2(BILL),U)=2 Q 2 ;MRATYPE
"RTN","IBCEMU2",222,0)
 ;
"RTN","IBCEMU2",223,0)
 ; all others are Post-MRA non-Medicare bills
"RTN","IBCEMU2",224,0)
 Q 3 ;MRATYPE
"RTN","IBCEMU2",225,0)
 ;
"RTN","IBCEMU2",226,0)
MRADTACT() ; Function - returns DATE MRA FIRST ACTIVATED at site
"RTN","IBCEMU2",227,0)
 Q $P($G(^IBE(350.9,1,8)),U,13)
"RTN","IBCEMU2",228,0)
 ;
"RTN","IBCEP")
0^61^B21507760^B21365949
"RTN","IBCEP",1,0)
IBCEP ;ALB/TMP - Functions for PROVIDER ID MAINT - INS CO PARAMS ;11-02-00
"RTN","IBCEP",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP",3,0)
 ;
"RTN","IBCEP",4,0)
EN ; -- main entry point for IBCE PRV INS PARAMS
"RTN","IBCEP",5,0)
 N IBINS,IBCUINC ; Variable should be available throughout actions
"RTN","IBCEP",6,0)
 D FULL^VALM1
"RTN","IBCEP",7,0)
 D EN^VALM("IBCE PRV INS PARAMS")
"RTN","IBCEP",8,0)
 Q
"RTN","IBCEP",9,0)
 ;
"RTN","IBCEP",10,0)
HDR ; -- header code
"RTN","IBCEP",11,0)
 K VALMHDR
"RTN","IBCEP",12,0)
 I $G(IBINS) S VALMHDR(1)="INSURANCE CO: "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEP",13,0)
 Q
"RTN","IBCEP",14,0)
 ;
"RTN","IBCEP",15,0)
INIT ; Initialization
"RTN","IBCEP",16,0)
 N DIR,DIC,DA,X,Y,DTOUT,DUOUT
"RTN","IBCEP",17,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP",18,0)
 I Y'>0 D
"RTN","IBCEP",19,0)
 . S VALMQUIT=1
"RTN","IBCEP",20,0)
 E  D
"RTN","IBCEP",21,0)
 . S DIR="YA",DIR("A")="DO YOU WANT TO INCLUDE ANY CARE UNIT DETAIL?: ",DIR("?",1)="If you want to see the specific care unit defined for the insurance co",DIR("?")="you should respond yes here"
"RTN","IBCEP",22,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP",23,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP",24,0)
 . S IBCUINC=(Y=1)
"RTN","IBCEP",25,0)
 . S IBINS=+Y D BLD(IBINS,IBCUINC)
"RTN","IBCEP",26,0)
 Q
"RTN","IBCEP",27,0)
 ;
"RTN","IBCEP",28,0)
BLD(IBINS,IBCUINC) ; Build display for ins co level provider ID parameters
"RTN","IBCEP",29,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP",30,0)
 ; IBCUINC = flag:
"RTN","IBCEP",31,0)
 ;    = 1 if care unit list should be included  or 0 if not
"RTN","IBCEP",32,0)
 N A,A0,A1,A2,A3,Z0,IB1,IB12,IB4,IBLCT,IBPTYP
"RTN","IBCEP",33,0)
 S IBLCT=0
"RTN","IBCEP",34,0)
 S IB4=$G(^DIC(36,IBINS,4))
"RTN","IBCEP",35,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",36,0)
 ;
"RTN","IBCEP",37,0)
 S Z0="Perf Prov Secondary ID Type (HCFA): "_$E($$EXPAND^IBTRE(36,4.01,+$P(IB4,U))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",38,0)
 S Z0="Perf Prov Secondary ID Type (UB92): "_$E($$EXPAND^IBTRE(36,4.02,+$P(IB4,U,2))_$J("",20),1,20) D SET1(.IBLCT,Z0)
"RTN","IBCEP",39,0)
 S Z0=$J("",20)_"Required: "_$$EXPAND^IBTRE(36,4.03,$P(IB4,U,3)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",40,0)
 S Z0=$J("",10)_"Care Unit Name: "_$$EXPAND^IBTRE(36,4.09,$P(IB4,U,9)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",41,0)
 S Z0=""  D SET1(.IBLCT,Z0)
"RTN","IBCEP",42,0)
 ;
"RTN","IBCEP",43,0)
 I '$D(^IBA(355.96,"D",IBINS)) D  G BLDQ ;No care unit needed
"RTN","IBCEP",44,0)
 . S Z0=$J("",7)_"*** NO CARE UNITS DEFINED FOR THIS INS CO PROVIDER SECONDARY ID ***" D SET1(.IBLCT,Z0)
"RTN","IBCEP",45,0)
 ;
"RTN","IBCEP",46,0)
 S Z0=$J("",17)_"VALID CARE UNITS FOR THIS INSURANCE COMPANY" D SET1(.IBLCT,Z0),CNTRL^VALM10(IBLCT,18,46,IORVON,IORVOFF)
"RTN","IBCEP",47,0)
 S A=0
"RTN","IBCEP",48,0)
 F  S A=$O(^IBA(355.96,"AC",IBINS,A)) Q:'A  S IBPTYP=$P($G(^IBA(355.97,A,0)),U) I IBPTYP'="" D
"RTN","IBCEP",49,0)
 . S A2=IBPTYP_U_A,^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2)=""
"RTN","IBCEP",50,0)
 . S A0=0 F  S A0=$O(^IBA(355.96,"AC",IBINS,A,A0)) Q:'A0  S A1=$G(^IBA(355.96,A0,0)) D
"RTN","IBCEP",51,0)
 .. I '$G(IBCUINC) S:'$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5))) ^($P(A1,U,4)_U_$P(A1,U,5))="" Q
"RTN","IBCEP",52,0)
 .. I $P(A1,U,4)'="",$P(A1,U,5)'="" D
"RTN","IBCEP",53,0)
 ... S A3=$E($P($G(^IBE(355.95,+A1,0)),U)_$J("",1,30),1,30)_U_$S($P($G(^(0)),U,2)'="":$P(^(0),U,2),1:"<No description available>")
"RTN","IBCEP",54,0)
 ... I '$D(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A2,$P(A1,U,4)_U_$P(A1,U,5),$P(A3,U))) S ^($P(A3,U))=$P(A3,U,2)
"RTN","IBCEP",55,0)
 . ; records are fully sorted
"RTN","IBCEP",56,0)
 S A=""
"RTN","IBCEP",57,0)
 F  S A=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A)) Q:'A  S A2="PROVIDER ID TYPE: "_$P(A,U),IB1=1 D:'IB1 SET1(.IBLCT,"") D SET1(.IBLCT,A2) S IB12=1 S:$G(IBCUINC) IB1=0 D
"RTN","IBCEP",58,0)
 . S A0="" F  S A0=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0)) Q:A0=""  D
"RTN","IBCEP",59,0)
 .. S Z0=$J("",5)_"FORM TYPE: "_$E($$EXPAND^IBTRE(355.96,.04,$P(A0,U))_$J("",25),1,25)_"  CARE TYPE: "_$E($$EXPAND^IBTRE(355.96,.05,$P(A0,U,2))_$J("",25),1,25)
"RTN","IBCEP",60,0)
 .. D:'IB12 SET1(.IBLCT,"") D SET1(.IBLCT,Z0)
"RTN","IBCEP",61,0)
 .. Q:'$G(IBCUINC)
"RTN","IBCEP",62,0)
 .. S IB12=0
"RTN","IBCEP",63,0)
 .. S A1="" F  S A1=$O(^TMP("IBPRV_INS_ID_PARAMS_SORT",$J,A,A0,A1)) Q:A1=""  S Z0=$J("",10)_A1_$G(^(A1)) D SET1(.IBLCT,Z0)
"RTN","IBCEP",64,0)
 ;
"RTN","IBCEP",65,0)
BLDQ K ^TMP("IBPRV_INS_ID_PARAMS_SORT",$J)
"RTN","IBCEP",66,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP",67,0)
 Q
"RTN","IBCEP",68,0)
 ;
"RTN","IBCEP",69,0)
SET1(IBLCT,Z0) ;
"RTN","IBCEP",70,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,Z0)
"RTN","IBCEP",71,0)
 Q
"RTN","IBCEP",72,0)
 ;
"RTN","IBCEP",73,0)
EXPND ;
"RTN","IBCEP",74,0)
 Q
"RTN","IBCEP",75,0)
 ;
"RTN","IBCEP",76,0)
HELP ;
"RTN","IBCEP",77,0)
 Q
"RTN","IBCEP",78,0)
 ;
"RTN","IBCEP",79,0)
EXIT ;
"RTN","IBCEP",80,0)
 K ^TMP("IBPRV_INS_ID_PARAMS",$J)
"RTN","IBCEP",81,0)
 D CLEAN^VALM10
"RTN","IBCEP",82,0)
 Q
"RTN","IBCEP",83,0)
 ;
"RTN","IBCEP",84,0)
EDIT ; Entrypoint called from IBCSCE to invoke provider id edit functions
"RTN","IBCEP",85,0)
 Q
"RTN","IBCEP",86,0)
 ;
"RTN","IBCEP",87,0)
EDIT1 ; Edit parameters
"RTN","IBCEP",88,0)
 N IB,IBY,IBCNS,DIE,DR,X,Y
"RTN","IBCEP",89,0)
 D FULL^VALM1
"RTN","IBCEP",90,0)
 S IBCNS=IBINS,IBY=12
"RTN","IBCEP",91,0)
 D MAIN^IBCNSC1
"RTN","IBCEP",92,0)
 S VALMBCK="R"
"RTN","IBCEP",93,0)
 Q
"RTN","IBCEP",94,0)
 ;
"RTN","IBCEP",95,0)
NETID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",96,0)
 ; NETWORK ID
"RTN","IBCEP",97,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,6)
"RTN","IBCEP",98,0)
 Q Z
"RTN","IBCEP",99,0)
 ;
"RTN","IBCEP",100,0)
EMCID() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",101,0)
 ; EMC ID
"RTN","IBCEP",102,0)
 N Z S Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  Q:$P($G(^(Z,1)),U,5)
"RTN","IBCEP",103,0)
 Q Z
"RTN","IBCEP",104,0)
 ;
"RTN","IBCEP",105,0)
UPIN() ; Returns the ien of the entry in file 355.97 that is designated as the
"RTN","IBCEP",106,0)
 ; UPIN ID
"RTN","IBCEP",107,0)
 Q +$O(^IBE(355.97,"B","UPIN",0))
"RTN","IBCEP",108,0)
 ;
"RTN","IBCEP",109,0)
EDITID(IBCNS) ; Edit provider id's from insurance co enter/edit
"RTN","IBCEP",110,0)
 ; IBCNS = ien of file 36
"RTN","IBCEP",111,0)
 Q   ; WCJ 12/30/2005
"RTN","IBCEP",112,0)
 N X,Y,Z4,DIR
"RTN","IBCEP",113,0)
 S Z4=$G(^DIC(36,IBCNS,4))
"RTN","IBCEP",114,0)
 I 'Z4,'$P(Z4,U,2) Q
"RTN","IBCEP",115,0)
 S DIR("A",1)="USE PROVIDER ID MAINTENANCE TO ENTER/EDIT PROV SECONDARY ID'S FOR THIS CO.",DIR("A")="PRESS RETURN TO CONTINUE: ",DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP",116,0)
 Q
"RTN","IBCEP",117,0)
 ;
"RTN","IBCEP0")
0^62^B67697458^B58196901
"RTN","IBCEP0",1,0)
IBCEP0 ;ALB/TMP - Functions for PROVIDER ID MAINTENANCE ;13-DEC-99
"RTN","IBCEP0",2,0)
 ;;2.0;INTEGRATED BILLING;**137,191,239,232,320**;21-MAR-94
"RTN","IBCEP0",3,0)
 ;
"RTN","IBCEP0",4,0)
EN ; -- main entry point for IBCE PRV INS ID
"RTN","IBCEP0",5,0)
 N IBINS,IBDSP,IBSORT,IBPRV ; Variables should be available throughout actions
"RTN","IBCEP0",6,0)
 K IBFASTXT
"RTN","IBCEP0",7,0)
 D FULL^VALM1
"RTN","IBCEP0",8,0)
 D EN^VALM("IBCE PRVINS ID")
"RTN","IBCEP0",9,0)
 Q
"RTN","IBCEP0",10,0)
 ;
"RTN","IBCEP0",11,0)
EN1(IBINS) ; Entrypoint from insurance co maintenance
"RTN","IBCEP0",12,0)
 N IBDSP,IBSORT ; Variables should be available throughout actions
"RTN","IBCEP0",13,0)
 D FULL^VALM1
"RTN","IBCEP0",14,0)
 D EN^VALM("IBCE PRVINS ID FROM INS MAINT")
"RTN","IBCEP0",15,0)
 Q
"RTN","IBCEP0",16,0)
 ;
"RTN","IBCEP0",17,0)
HDR ; -- header code
"RTN","IBCEP0",18,0)
 N Z,Z0,Z1,IBCT,IBPPTYP,IBEMCTYP
"RTN","IBCEP0",19,0)
 S IBCT=1
"RTN","IBCEP0",20,0)
 K VALMHDR
"RTN","IBCEP0",21,0)
 I $G(IBINS) D
"RTN","IBCEP0",22,0)
 . N PCF,PCDISP
"RTN","IBCEP0",23,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",24,0)
 . S PCDISP=$S(PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP0",25,0)
 . S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP0",26,0)
 . ; Get performing provider id type for insurance co
"RTN","IBCEP0",27,0)
 . S IBPPTYP=$$PPTYP(IBINS)
"RTN","IBCEP0",28,0)
 . ; Get ien of EMC ID from file 355.97
"RTN","IBCEP0",29,0)
 . S IBEMCTYP=+$$EMCID^IBCEP()
"RTN","IBCEP0",30,0)
 . I $G(IBSORT)="ALL"!($G(IBDSP)="I")!($G(IBSORT)=IBPPTYP)!($G(IBSORT)=IBEMCTYP) D
"RTN","IBCEP0",31,0)
 .. ; Look for care unit in either of these id types - if there, report on line 2 of header
"RTN","IBCEP0",32,0)
 .. I $G(IBSORT)=IBPPTYP S IBEMCTYP=0
"RTN","IBCEP0",33,0)
 .. I $G(IBSORT)=IBEMCTYP S IBPPTYP=0
"RTN","IBCEP0",34,0)
 .. F Z0=IBPPTYP_"P",IBEMCTYP_"E" S Z1="" F  S Z1=$O(^IBA(355.96,"D",+IBINS,+Z0,Z1)) Q:Z1=""  I Z1'="*N/A*" S Z($E(Z0,$L(Z0)))=1 Q
"RTN","IBCEP0",35,0)
 .. I $D(Z("P"))!$D(Z("E")) D
"RTN","IBCEP0",36,0)
 ... S IBCT=IBCT+1
"RTN","IBCEP0",37,0)
 ... S VALMHDR(IBCT)="  "_$S($D(Z("P")):"PERFORMING PROV ID"_$S($D(Z("E")):" AND ",1:""),1:"")_$S($D(Z("E")):"EMC PROV ID",1:"")_" MAY REQUIRE CARE UNIT"
"RTN","IBCEP0",38,0)
 . I $D(Z("P"))!$D(Z("E")) S IBCT=IBCT+1,VALMHDR(IBCT)=" "
"RTN","IBCEP0",39,0)
 . S IBCT=IBCT+1,VALMHDR(IBCT)="     PROVIDER "_$S($G(IBDSP)="I":"ID TYPE",1:"NAME   ")_$J("",6)_"FORM   CARE TYPE    CARE UNIT       ID#"
"RTN","IBCEP0",40,0)
 Q
"RTN","IBCEP0",41,0)
 ;
"RTN","IBCEP0",42,0)
INIT ; Initialization
"RTN","IBCEP0",43,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP0",44,0)
 D INSID(.IBINS,.IBDSP,.IBSORT)
"RTN","IBCEP0",45,0)
 I $G(IBDSP)="I",$G(IBSORT) S IBPRV=IBSORT
"RTN","IBCEP0",46,0)
 I '$G(IBINS) S VALMQUIT=1
"RTN","IBCEP0",47,0)
 Q
"RTN","IBCEP0",48,0)
 ;
"RTN","IBCEP0",49,0)
INSID(IBINS,IBDSP,IBSORT) ;
"RTN","IBCEP0",50,0)
 N DIC,DIR,DA,X,Y,IBOK,DTOUT,DUOUT
"RTN","IBCEP0",51,0)
 S IBOK=1
"RTN","IBCEP0",52,0)
 I '$G(IBINS) D
"RTN","IBCEP0",53,0)
 . S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP0",54,0)
 . I Y'>0 S IBOK=0 Q
"RTN","IBCEP0",55,0)
 . S IBINS=+Y
"RTN","IBCEP0",56,0)
 I '$G(IBINS) S IBOK=0
"RTN","IBCEP0",57,0)
 I 'IBOK G INSIDQ
"RTN","IBCEP0",58,0)
 ;
"RTN","IBCEP0",59,0)
 S DIR(0)="SA^D:INSURANCE CO DEFAULT IDS;I:INDIVIDUAL PROVIDER IDS FURNISHED BY THE INS CO;A:ALL IDS FURNISHED BY THE INS CO BY PROVIDER TYPE"
"RTN","IBCEP0",60,0)
 S DIR("A")="SELECT DISPLAY CONTENT: ",DIR("B")="A"
"RTN","IBCEP0",61,0)
 S DIR("?",1)="(D) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED AS DEFAULTS TO THE FACILITY BY",DIR("?",2)="    THE INSURANCE COMPANY"
"RTN","IBCEP0",62,0)
 S DIR("?",3)="(I) DISPLAY CONTAINS ONLY THOSE IDS ASSIGNED TO INDIVIDUAL PROVIDERS BY THE",DIR("?",4)="    INSURANCE COMPANY"
"RTN","IBCEP0",63,0)
 S DIR("?",5)="(A) DISPLAY CONTAINS ALL IDS ASSIGNED BY THE INSURANCE COMPANY FOR ONE OR ALL",DIR("?")="    PROVIDER ID TYPES"
"RTN","IBCEP0",64,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP0",65,0)
 I $D(DTOUT)!$D(DUOUT)!("DIA"'[Y) S IBOK=0 G INSIDQ
"RTN","IBCEP0",66,0)
 S IBDSP=Y,IBSORT=""
"RTN","IBCEP0",67,0)
 I IBDSP="A"!(IBDSP="I") F  D  Q:'IBOK!(IBSORT'="")
"RTN","IBCEP0",68,0)
 . N Z
"RTN","IBCEP0",69,0)
 . S Z=$S(IBDSP="I":"",1:" ID TYPE")
"RTN","IBCEP0",70,0)
 . S DIR("A")="DO YOU WANT TO DISPLAY IDS FOR A SPECIFIC PROVIDER"_Z_"?: ",DIR("B")="NO",DIR(0)="YA"
"RTN","IBCEP0",71,0)
 . S DIR("?",1)="IF YOU ANSWER YES TO THIS QUESTION, YOU MAY SELECT A SPECIFIC PROVIDER"_Z,DIR("?")="  TO DISPLAY, OTHERWISE, ALL PROVIDER"_Z_"S FOUND WILL BE DISPLAYED"
"RTN","IBCEP0",72,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0",73,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",74,0)
 . I Y'=1 S IBSORT="ALL" Q
"RTN","IBCEP0",75,0)
 . ;
"RTN","IBCEP0",76,0)
 . I IBDSP="A" D  Q
"RTN","IBCEP0",77,0)
 .. S DIC(0)="AEMQ",DIC="^IBE(355.97,",DIC("S")="I $S('$P(^(0),U,2):1,1:$P(^(0),U,2)=3)" D ^DIC K DIC
"RTN","IBCEP0",78,0)
 .. I Y>0 S IBSORT=+Y Q
"RTN","IBCEP0",79,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0
"RTN","IBCEP0",80,0)
 . ;
"RTN","IBCEP0",81,0)
 . I IBDSP="I" D  Q
"RTN","IBCEP0",82,0)
 .. N DA
"RTN","IBCEP0",83,0)
 .. S DIR(0)="399.0222,.02A",DIR("A")="SELECT PROVIDER: "
"RTN","IBCEP0",84,0)
 .. W ! D ^DIR K DIR W !
"RTN","IBCEP0",85,0)
 .. I Y>0 S IBSORT=Y Q
"RTN","IBCEP0",86,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEP0",87,0)
 . S IBOK=0 Q
"RTN","IBCEP0",88,0)
 ;
"RTN","IBCEP0",89,0)
 G:'IBOK INSIDQ
"RTN","IBCEP0",90,0)
 D BLD(IBINS,IBDSP,IBSORT)
"RTN","IBCEP0",91,0)
INSIDQ I 'IBOK S VALMQUIT=1
"RTN","IBCEP0",92,0)
 Q
"RTN","IBCEP0",93,0)
 ;
"RTN","IBCEP0",94,0)
BLD(IBINS,IBDSP,IBSORT) ; Build display for Insurance co level provider ID's
"RTN","IBCEP0",95,0)
 N IB,IBENT,IBLCT,IBCT,IBPRV,IBSRT1,IBSRT2,IBOSRT1,IBOSRT2,CU,FT,PT,CT,Z,Z0
"RTN","IBCEP0",96,0)
 K ^TMP("IBPRV_INS_ID",$J),^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",97,0)
 ;
"RTN","IBCEP0",98,0)
 S (IBENT,IBCT,IBLCT)=0
"RTN","IBCEP0",99,0)
 ;
"RTN","IBCEP0",100,0)
 I "DA"[$G(IBDSP) D
"RTN","IBCEP0",101,0)
 . S CU="" F  S CU=$O(^IBA(355.91,"AUNIQ",IBINS,CU)) Q:CU=""  S FT="" F  S FT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT)) Q:FT=""  D
"RTN","IBCEP0",102,0)
 .. S CT="" F  S CT=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$S(IBDSP="A"&IBSORT:IBSORT,1:$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT))) Q:'PT  D  Q:IBDSP="A"&IBSORT
"RTN","IBCEP0",103,0)
 ... S Z=0 F  S Z=$O(^IBA(355.91,"AUNIQ",IBINS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.91,Z,0)) S ^TMP("IBPRV_INS_SORT",$J,PT,"^<<INS CO DEFAULT>>",FT,CT,CU,Z)=$P(IB,U,7)_U
"RTN","IBCEP0",104,0)
 ;
"RTN","IBCEP0",105,0)
 I "IA"[$G(IBDSP) D
"RTN","IBCEP0",106,0)
 . S IBPRV=""
"RTN","IBCEP0",107,0)
 . N IB1,IB2
"RTN","IBCEP0",108,0)
 . F  S IBPRV=$O(^IBA(355.9,"AE",IBINS,IBPRV)) Q:'IBPRV  S Z=0 F  S Z=$O(^IBA(355.9,"AE",IBINS,IBPRV,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP0",109,0)
 .. Q:$P(IB,U,4)=""!($P(IB,U,5)="")!($P(IB,U,6)="")!($P(IB,U,16)="")
"RTN","IBCEP0",110,0)
 .. I IBSORT,$S(IBDSP="I":IBPRV'=IBSORT,1:$P(IB,U,6)'=IBSORT) Q
"RTN","IBCEP0",111,0)
 .. S IB1=$S(IBDSP="A":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",112,0)
 .. S IB2=$S(IBDSP="I":$P(IB,U,6),1:U_$$EXPAND^IBTRE(355.9,.01,IBPRV)_U_IBPRV)
"RTN","IBCEP0",113,0)
 .. S ^TMP("IBPRV_INS_SORT",$J,IB1,IB2,$P(IB,U,4),$P(IB,U,5),$P(IB,U,16),Z)=$P(IB,U,7)_U_IBPRV
"RTN","IBCEP0",114,0)
 ;
"RTN","IBCEP0",115,0)
 S IBOSRT1=""
"RTN","IBCEP0",116,0)
 S IBSRT1="" F  S IBSRT1=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCEP0",117,0)
 . S IBSRT2="",IBOSRT2=""
"RTN","IBCEP0",118,0)
 . F  S IBSRT2=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCEP0",119,0)
 .. I IBOSRT1'=IBSRT1 D
"RTN","IBCEP0",120,0)
 ... I IBOSRT1'="" S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT+1)
"RTN","IBCEP0",121,0)
 ... S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,$S(IBDSP'="I":"ID Qualifier",1:"Provider")_": "_$S(IBDSP'="I":$$EXPAND^IBTRE(355.91,.06,IBSRT1),1:$P(IBSRT1,U,2_$S($P(IBSRT2,U,3)["VA(200":" (VA)",1:"(NON-VA)"))),IBCT+1)
"RTN","IBCEP0",122,0)
 ... S IBOSRT1=IBSRT1
"RTN","IBCEP0",123,0)
 .. ;
"RTN","IBCEP0",124,0)
 .. S FT="" F  S FT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT)) Q:CT=""  D
"RTN","IBCEP0",125,0)
 ... S CU="" F  S CU=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU)) Q:CU=""  S Z=0 F  S Z=$O(^TMP("IBPRV_INS_SORT",$J,IBSRT1,IBSRT2,FT,CT,CU,Z)) Q:'Z  S IB=$G(^(Z)) D
"RTN","IBCEP0",126,0)
 .... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP0",127,0)
 .... S Z0=$E(IBCT_$J("",4),1,4)_" "
"RTN","IBCEP0",128,0)
 .... I IBDSP'="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$P(IBSRT2,U,2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",129,0)
 .... I IBDSP="I" S Z0=Z0_$E($S(IBOSRT2'=IBSRT2:$$EXPAND^IBTRE(355.9,.06,IBSRT2),1:"")_$J("",20),1,20)
"RTN","IBCEP0",130,0)
 .... S IBOSRT2=IBSRT2
"RTN","IBCEP0",131,0)
 .... S Z0=Z0_"  "_$S(FT=1:"UB-92",FT=2:"HCFA ",1:"BOTH ")_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$P($G(^IBA(355.96,+CU,0)),U),0)),U),1:"")_$J("",15),1,15)
"RTN","IBCEP0",132,0)
 .... D SET^VALM10(IBLCT,Z0_" "_$P(IB,U),IBCT)
"RTN","IBCEP0",133,0)
 .... S ^TMP("IBPRV_INS_ID",$J,"ZIDX",IBCT)=Z,^(IBCT,"PRV")=$P(IB,U,2)
"RTN","IBCEP0",134,0)
 .... I '$D(^TMP("IBPRV_INS_ID",$J,$S(IBDSP="I":"ZXPRV",1:"ZXPTYP"),IBSRT1)) S ^(IBSRT1)=IBLCT-1
"RTN","IBCEP0",135,0)
 K ^TMP("IBPRV_INS_SORT",$J)
"RTN","IBCEP0",136,0)
 ;
"RTN","IBCEP0",137,0)
 I IBLCT=0 D  G BLDQ ; No entries found
"RTN","IBCEP0",138,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP0",139,0)
 . S Z="  No "_$S(IBDSP="D":"default ",1:"")
"RTN","IBCEP0",140,0)
 . S Z=Z_"ID's found for "_$S(IBDSP="I":"provider "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.01,IBSORT)_") ",1:"")_"and ",IBDSP="A":"provider type "_$S(IBSORT:"("_$$EXPAND^IBTRE(355.9,.06,IBSORT)_") ",1:"")_"and ",1:"")_"insurance co"
"RTN","IBCEP0",141,0)
 . D SET^VALM10(2,Z)
"RTN","IBCEP0",142,0)
 . S IBLCT=2
"RTN","IBCEP0",143,0)
 ;
"RTN","IBCEP0",144,0)
BLDQ S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP0",145,0)
 Q
"RTN","IBCEP0",146,0)
 ;
"RTN","IBCEP0",147,0)
EXPND ;
"RTN","IBCEP0",148,0)
 Q
"RTN","IBCEP0",149,0)
 ;
"RTN","IBCEP0",150,0)
HELP ;
"RTN","IBCEP0",151,0)
 Q
"RTN","IBCEP0",152,0)
 ;
"RTN","IBCEP0",153,0)
EXIT ;
"RTN","IBCEP0",154,0)
 K IBFASTXT
"RTN","IBCEP0",155,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP0",156,0)
 K ^TMP("IBPRV_INS_ID",$J)
"RTN","IBCEP0",157,0)
 D CLEAN^VALM10
"RTN","IBCEP0",158,0)
 Q
"RTN","IBCEP0",159,0)
 ;
"RTN","IBCEP0",160,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP0",161,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP0",162,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP0",163,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP0",164,0)
 N Z
"RTN","IBCEP0",165,0)
 S IBDA=0
"RTN","IBCEP0",166,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP0",167,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_INS_ID",$J,"ZIDX",Z))_U_$G(^(Z,"PRV"))
"RTN","IBCEP0",168,0)
 Q
"RTN","IBCEP0",169,0)
 ;
"RTN","IBCEP0",170,0)
ENX(IBINS1) ; Insurance co level defaults for all providers or
"RTN","IBCEP0",171,0)
 ; for all providers by care unit
"RTN","IBCEP0",172,0)
 N DIC,DIE,DR,DA,X,Y,DLAYGO
"RTN","IBCEP0",173,0)
 I '$G(IBINS1) D  G:'$G(IBINS1) ENQ
"RTN","IBCEP0",174,0)
 . S DIC="^IBA(355.91,",DIC(0)="AELMQ",DLAYGO=355.91 D ^DIC
"RTN","IBCEP0",175,0)
 . I Y>0 S IBINS1=+Y
"RTN","IBCEP0",176,0)
 S DIE="^IBA(355.91,",DA=IBINS1,DR=".01;.06;.04;.05;.03;.07" D ^DIE
"RTN","IBCEP0",177,0)
 ;
"RTN","IBCEP0",178,0)
ENQ Q
"RTN","IBCEP0",179,0)
 ;
"RTN","IBCEP0",180,0)
PPTYP(IBINS) ; Returns the ien of the default performing provider type for 
"RTN","IBCEP0",181,0)
 ;  insurance company IBINS (ien file 36)
"RTN","IBCEP0",182,0)
 Q +$G(^DIC(36,+IBINS,4))
"RTN","IBCEP0",183,0)
 ;
"RTN","IBCEP0",184,0)
SCREEN(WHICH) ; This screen is used the menu protocol to screen out the ID functions if it is a child ins co
"RTN","IBCEP0",185,0)
 Q:'$G(DA) 0
"RTN","IBCEP0",186,0)
 Q:'$G(DA(1)) 0
"RTN","IBCEP0",187,0)
 N FILE,IENS,FIELD,FLAG,TARGET
"RTN","IBCEP0",188,0)
 S FILE=101.01,IENS=DA_","_DA(1),FIELD=".01",FLAG="I"
"RTN","IBCEP0",189,0)
 D GETS^DIQ(FILE,IENS,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",190,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",191,0)
 N IEN
"RTN","IBCEP0",192,0)
 S IEN=$G(TARGET(FILE,IENS_",",FIELD,FLAG))
"RTN","IBCEP0",193,0)
 Q:'+IEN 0
"RTN","IBCEP0",194,0)
 S FILE=101,FIELD=1,FLAG="E"
"RTN","IBCEP0",195,0)
 K TARGET
"RTN","IBCEP0",196,0)
 D GETS^DIQ(FILE,IEN,FIELD,FLAG,"TARGET")
"RTN","IBCEP0",197,0)
 Q:'$D(TARGET) 0
"RTN","IBCEP0",198,0)
 I $G(TARGET(FILE,IEN_",",FIELD,FLAG))'[WHICH Q 1
"RTN","IBCEP0",199,0)
 Q:'$G(IBINS) 0
"RTN","IBCEP0",200,0)
 N PCF
"RTN","IBCEP0",201,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEP0",202,0)
 I PCF="C" Q 0
"RTN","IBCEP0",203,0)
 Q 1
"RTN","IBCEP0A")
0^70^B41076613^B40805968
"RTN","IBCEP0A",1,0)
IBCEP0A ;ALB/TMP - EDI UTILITIES for insurance assigned provider ID ;01-NOV-00
"RTN","IBCEP0A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP0A",3,0)
 ;
"RTN","IBCEP0A",4,0)
NEW(IBINS,IBPRV,IBPTYP,IBDEF) ; Add new insurance co assigned id
"RTN","IBCEP0A",5,0)
 ; IBDEF = flag sent as 1 if only insurance co defaults are being added
"RTN","IBCEP0A",6,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,IBQ,IBIEN,IBCUND,DTOUT,DUOUT
"RTN","IBCEP0A",7,0)
 D FULL^VALM1
"RTN","IBCEP0A",8,0)
 S IBQ=0
"RTN","IBCEP0A",9,0)
 I $G(IBDEF)="D" W !!,"YOU ARE ADDING A PROVIDER ID THAT WILL BE THE INSURANCE CO DEFAULT",!
"RTN","IBCEP0A",10,0)
 I '$G(IBPRV),$G(IBDEF)'="D" D  G:IBQ NEWQ
"RTN","IBCEP0A",11,0)
 . N DA,IBO
"RTN","IBCEP0A",12,0)
 . S IBO=($G(IBDSP)'="I")
"RTN","IBCEP0A",13,0)
 . S DIR(0)="355.9,.01A"_$S(IBO:"O",1:""),DIR("A")="Select PROVIDER"_$S(IBO:" (optional)",1:"")_": "
"RTN","IBCEP0A",14,0)
 . S DIR("?")="Select the PROVIDER to be assigned a provider ID"
"RTN","IBCEP0A",15,0)
 . I IBO S DIR("?",1)=DIR("?"),DIR("?")="Or    Press ENTER to add an insurance co level default id (all providers)"
"RTN","IBCEP0A",16,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0A",17,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQ=1 Q
"RTN","IBCEP0A",18,0)
 . S IBPRV=$S(Y>0:$P(Y,U),1:"")
"RTN","IBCEP0A",19,0)
 . Q:IBPRV
"RTN","IBCEP0A",20,0)
 . S DIR(0)="YA",DIR("B")="YES",DIR("A",1)="YOU ARE ADDING A PROVIDER ID THAT WILL BE THE INSURANCE CO DEFAULT",DIR("A")="IS THIS OK?: "
"RTN","IBCEP0A",21,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0A",22,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y'=1) S IBQ=1
"RTN","IBCEP0A",23,0)
 . Q
"RTN","IBCEP0A",24,0)
 ;
"RTN","IBCEP0A",25,0)
 I '$G(IBPTYP) D  G:IBQ NEWQ
"RTN","IBCEP0A",26,0)
 . S DIR(0)="PAr^355.97:AEMQ",DIR("A")="Select Provider ID Qualifier: "
"RTN","IBCEP0A",27,0)
 . S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP0A",28,0)
 . S DIR("S")="I $$RAINS^IBCEPU(Y)"   ; Rendering/Attending IDs provided by ins
"RTN","IBCEP0A",29,0)
 . S DA=0
"RTN","IBCEP0A",30,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0A",31,0)
 . I $D(DTOUT)!$D(DUOUT)!'Y S IBQ=1 Q
"RTN","IBCEP0A",32,0)
 . S IBPTYP=+Y
"RTN","IBCEP0A",33,0)
 ;
"RTN","IBCEP0A",34,0)
 S IBQ=$$ADDID(IBINS,IBPRV,IBPTYP)
"RTN","IBCEP0A",35,0)
 ;
"RTN","IBCEP0A",36,0)
NEWQ D:'$G(IBQ) BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT))
"RTN","IBCEP0A",37,0)
 S VALMBCK="R"
"RTN","IBCEP0A",38,0)
 Q
"RTN","IBCEP0A",39,0)
 ;
"RTN","IBCEP0A",40,0)
DEL1 ; Delete Insurance Co assigned provider ID's
"RTN","IBCEP0A",41,0)
 ; IBPRV = vp ien of provider if editing entry in file 355.9
"RTN","IBCEP0A",42,0)
 ;         otherwise, null
"RTN","IBCEP0A",43,0)
 N IB1,IBDA,IBFILE
"RTN","IBCEP0A",44,0)
 D FULL^VALM1
"RTN","IBCEP0A",45,0)
 D SEL^IBCEP0(.IBDA)
"RTN","IBCEP0A",46,0)
 G:'$O(IBDA(0)) DEL1Q
"RTN","IBCEP0A",47,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP0A",48,0)
 G:'IBDA DEL1Q
"RTN","IBCEP0A",49,0)
 S IB1=$P(IBDA,U,2),IBDA=+IBDA
"RTN","IBCEP0A",50,0)
 S IBFILE=$S(IB1:355.9,1:355.91)
"RTN","IBCEP0A",51,0)
 I IBDA>0 D DEL^IBCEP5B(IBFILE,IBDA,1),BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT))
"RTN","IBCEP0A",52,0)
 ;
"RTN","IBCEP0A",53,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP0A",54,0)
 Q
"RTN","IBCEP0A",55,0)
 ;
"RTN","IBCEP0A",56,0)
CHG1 ; Edit Provider ID's
"RTN","IBCEP0A",57,0)
 N IBDA,IB1,IBFILE
"RTN","IBCEP0A",58,0)
 D FULL^VALM1
"RTN","IBCEP0A",59,0)
 D SEL^IBCEP0(.IBDA)
"RTN","IBCEP0A",60,0)
 G:'$O(IBDA(0)) CHG1Q
"RTN","IBCEP0A",61,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP0A",62,0)
 G:'IBDA CHG1Q
"RTN","IBCEP0A",63,0)
 S IB1=$P(IBDA,U,2),IBDA=+IBDA
"RTN","IBCEP0A",64,0)
 S IBFILE=$S(IB1:355.9,1:355.91)
"RTN","IBCEP0A",65,0)
 I IBDA>0 D
"RTN","IBCEP0A",66,0)
 . I IBFILE=355.9 W !!,"PROVIDER: ",$$EXPAND^IBTRE(355.9,.01,IB1)
"RTN","IBCEP0A",67,0)
 . I IBFILE'=355.9 W !!,"  <<INS CO DEFAULT>>"
"RTN","IBCEP0A",68,0)
 . D CHG^IBCEP5B(IBFILE,IBDA),BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT))
"RTN","IBCEP0A",69,0)
 ;
"RTN","IBCEP0A",70,0)
CHG1Q S VALMBCK="R"
"RTN","IBCEP0A",71,0)
 Q
"RTN","IBCEP0A",72,0)
 ;
"RTN","IBCEP0A",73,0)
PRVJMP(IBDSP) ; Navigate to a specific sort level in current LM list
"RTN","IBCEP0A",74,0)
 ;   (from insurance co option)
"RTN","IBCEP0A",75,0)
 ; IBDSP = 'I', 'A' or 'D' to indicate format selected for display
"RTN","IBCEP0A",76,0)
 ;        ([P]ROVIDER, PROVIDER [T]YPE OR [I]NSURANCE DEFAULT)
"RTN","IBCEP0A",77,0)
 ; Sets VALMBG = LINE # if a provider in list selected
"RTN","IBCEP0A",78,0)
 ;
"RTN","IBCEP0A",79,0)
 I $G(IBDSP)="I" D PRVNJMP(.VALMBG)
"RTN","IBCEP0A",80,0)
 I $G(IBDSP)="D"!($G(IBDSP)="A") D PRVTJMP(.VALMBG)
"RTN","IBCEP0A",81,0)
 S VALMBCK="R"
"RTN","IBCEP0A",82,0)
 Q
"RTN","IBCEP0A",83,0)
 ;
"RTN","IBCEP0A",84,0)
PRVNJMP(VALMBG) ; Navigate to a specific provider name (from insurance co
"RTN","IBCEP0A",85,0)
 ;  option)
"RTN","IBCEP0A",86,0)
 ;
"RTN","IBCEP0A",87,0)
 N DIR,X,Y,DA
"RTN","IBCEP0A",88,0)
 D FULL^VALM1
"RTN","IBCEP0A",89,0)
 S DIR(0)="355.9,.01AO^^I '$D(^TMP(""IBPRV_INS_ID"",$J,""ZXPRV"",U_$$EXPAND^IBTRE(355.9,.01,Y)_U_$P(Y,U))) K X"
"RTN","IBCEP0A",90,0)
 S DIR("?",1)="*** YOU MAY ONLY SELECT PROVIDERS INCLUDED IN THE CURRENT LIST ***",DIR("?",2)=" ",DIR("?",3)="SELECTING A PROVIDER WILL FORCE THE DISPLAY TO SKIP TO THE DATA FOR THAT",DIR("?")="   PROVIDER"
"RTN","IBCEP0A",91,0)
 S DIR("A")="SELECT PROVIDER: "
"RTN","IBCEP0A",92,0)
 S DIR("S")="N Z S Z=$P(^(0),U) I $D(^TMP(""IBPRV_INS_ID"",$J,""ZXPRV"",U_$$EXPAND^IBTRE(355.9,.01,Z)_U_Z))"
"RTN","IBCEP0A",93,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP0A",94,0)
 I Y>0,'$D(DTOUT),'$D(DUOUT) D
"RTN","IBCEP0A",95,0)
 . N Z
"RTN","IBCEP0A",96,0)
 . S Z=$G(^TMP("IBPRV_INS_ID",$J,"ZXPRV",U_$$EXPAND^IBTRE(355.9,.01,$P(Y,U))_U_$P(Y,U)))
"RTN","IBCEP0A",97,0)
 . I Z S VALMBG=Z Q
"RTN","IBCEP0A",98,0)
 . S DIR(0)="EA",DIR("A",1)="THIS PROVIDER DOES NOT EXIST IN THE CURRENT DISPLAY",DIR("A")="PRESS THE ENTER KEY TO CONTINUE"
"RTN","IBCEP0A",99,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0A",100,0)
 Q
"RTN","IBCEP0A",101,0)
 ;
"RTN","IBCEP0A",102,0)
PRVTJMP(VALMBG) ; Navigate to a specific provider id type (from ins co option)
"RTN","IBCEP0A",103,0)
 ;
"RTN","IBCEP0A",104,0)
 N DIR,X,Y
"RTN","IBCEP0A",105,0)
 D FULL^VALM1
"RTN","IBCEP0A",106,0)
 S DIR(0)="PAO^355.97:AEMQ",DIR("A")="SELECT PROVIDER ID TYPE: ",DIR("?",1)="SELECTING A PROVIDER ID TYPE WILL FORCE THE DISPLAY TO SKIP TO THE DATA FOR ",DIR("?")="  THAT PROVIDER ID TYPE"
"RTN","IBCEP0A",107,0)
 S DIR("S")="I $D(^TMP(""IBPRV_INS_ID"",$J,""ZXPTYP"",+Y))"
"RTN","IBCEP0A",108,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP0A",109,0)
 I Y>0,'$D(DTOUT),'$D(DUOUT) D
"RTN","IBCEP0A",110,0)
 . N Z
"RTN","IBCEP0A",111,0)
 . S Z=$G(^TMP("IBPRV_INS_ID",$J,"ZXPTYP",+Y))
"RTN","IBCEP0A",112,0)
 . I Z S VALMBG=Z Q
"RTN","IBCEP0A",113,0)
 . S DIR(0)="EA",DIR("A",1)="THIS PROVIDER ID TYPE DOES NOT EXIST IN THE CURRENT DISPLAY",DIR("A")="PRESS THE ENTER KEY TO CONTINUE"
"RTN","IBCEP0A",114,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP0A",115,0)
 Q
"RTN","IBCEP0A",116,0)
 ;
"RTN","IBCEP0A",117,0)
CHGINS ; Change insurance co being displayed, using the same or new params
"RTN","IBCEP0A",118,0)
 ; Assumes IBINS exists = IEN of insurance co (file 36)
"RTN","IBCEP0A",119,0)
 N IBINEW,IBSAVE,DIC,DA,Y,X,DIR
"RTN","IBCEP0A",120,0)
 D FULL^VALM1
"RTN","IBCEP0A",121,0)
 S DIC="^DIC(36,",DIC(0)="AEMQ" D ^DIC
"RTN","IBCEP0A",122,0)
 S IBINEW=+Y
"RTN","IBCEP0A",123,0)
 ;
"RTN","IBCEP0A",124,0)
 I IBINEW>0,IBINS'=IBINEW D
"RTN","IBCEP0A",125,0)
 . D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP0A",126,0)
 . S DIR(0)="YA",DIR("?")="IF YOU WANT TO CHANGE THE FORMAT OF THE DISPLAY, RESPOND NO HERE"
"RTN","IBCEP0A",127,0)
 . S DIR("A")="DO YOU WANT TO DISPLAY THE NEW INS. CO IDS USING THE CURRENT DISPLAY FORMAT?: ",DIR("B")="YES" W ! D ^DIR W ! K DIR
"RTN","IBCEP0A",128,0)
 . Q:Y'=1
"RTN","IBCEP0A",129,0)
 . S IBSAVE("IBINS")=IBINS
"RTN","IBCEP0A",130,0)
 . K ^TMP("IBPRV_INS_ID",$J),VALMHDR S VALMBG=1,IBINS=IBINEW
"RTN","IBCEP0A",131,0)
 . I Y=1 D BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT)) Q
"RTN","IBCEP0A",132,0)
 . D INIT^IBCEP0
"RTN","IBCEP0A",133,0)
 . I '$G(VALMQUIT) Q
"RTN","IBCEP0A",134,0)
 . S IBINS=IBSAVE("IBINS") D BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT))
"RTN","IBCEP0A",135,0)
 S VALMBCK="R"
"RTN","IBCEP0A",136,0)
 Q
"RTN","IBCEP0A",137,0)
 ;
"RTN","IBCEP0A",138,0)
CHGFMT ; Change format parameters for display
"RTN","IBCEP0A",139,0)
 N IBSAVE
"RTN","IBCEP0A",140,0)
 S IBSAVE("IBINS")=$G(IBINS)
"RTN","IBCEP0A",141,0)
 D INIT^IBCEP0
"RTN","IBCEP0A",142,0)
 I '$G(VALMQUIT) G CHGFMTQ
"RTN","IBCEP0A",143,0)
 S IBINS=IBSAVE("IBINS") D BLD^IBCEP0($G(IBINS),$G(IBDSP),$G(IBSORT))
"RTN","IBCEP0A",144,0)
CHGFMTQ S VALMBCK="R"
"RTN","IBCEP0A",145,0)
 Q
"RTN","IBCEP0A",146,0)
 ;
"RTN","IBCEP0A",147,0)
IPARAM ; Display Insurance co parameters and care unit requirements
"RTN","IBCEP0A",148,0)
 ; Assumes IBINS exists = IEN of insurance co
"RTN","IBCEP0A",149,0)
 N IBDSP,IBSORT,IBHOLD
"RTN","IBCEP0A",150,0)
 D FULL^VALM1
"RTN","IBCEP0A",151,0)
 S IBHOLD("IBINS")=$G(IBINS)
"RTN","IBCEP0A",152,0)
 D EN^VALM("IBCE PRVINS PARAM DISPLAY")
"RTN","IBCEP0A",153,0)
 S:$G(IBHOLD("IBINS"))'="" IBINS=IBHOLD("IBINS")
"RTN","IBCEP0A",154,0)
 K VALMQUIT
"RTN","IBCEP0A",155,0)
 S VALMBCK="R"
"RTN","IBCEP0A",156,0)
 Q
"RTN","IBCEP0A",157,0)
 ;
"RTN","IBCEP0A",158,0)
ADDID(IBINS,IBPRV,IBPTYP) ; Adds a new ID for the provider and/or ins co
"RTN","IBCEP0A",159,0)
 ; IBINS = ien of file 36
"RTN","IBCEP0A",160,0)
 ; IBPRV = vp ien of file 355.9
"RTN","IBCEP0A",161,0)
 ; IBPTYP = ien of file 355.97
"RTN","IBCEP0A",162,0)
 ; FUNCTION returns 1 if record not added, 0 if filed OK
"RTN","IBCEP0A",163,0)
 N IBIEN,IBQ,DIC,DA,DO,DD,DLAYGO,X,Y
"RTN","IBCEP0A",164,0)
 S IBQ=0
"RTN","IBCEP0A",165,0)
 I $G(IBPRV) D  G:IBQ ADDIDQ
"RTN","IBCEP0A",166,0)
 . ; Provider specific for insurance co - add to file 355.9
"RTN","IBCEP0A",167,0)
 . S DIC(0)="L",DLAYGO=355.9,DIC="^IBA(355.9,",X=IBPRV
"RTN","IBCEP0A",168,0)
 . S:$G(IBINS) DIC("DR")=".02////"_IBINS
"RTN","IBCEP0A",169,0)
 . D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","IBCEP0A",170,0)
 . I Y'>0!$D(DUOUT)!$D(DTOUT) S IBIEN=0,IBQ=1 Q
"RTN","IBCEP0A",171,0)
 . S IBIEN=+Y
"RTN","IBCEP0A",172,0)
 . D NEWID^IBCEP5B(355.9,IBINS,IBPRV,IBPTYP,IBIEN,"")
"RTN","IBCEP0A",173,0)
 E  D
"RTN","IBCEP0A",174,0)
 . ; Insurance co default - add to file 355.91
"RTN","IBCEP0A",175,0)
 . S DIC(0)="L",DLAYGO=355.91,DIC="^IBA(355.91,",X=IBINS
"RTN","IBCEP0A",176,0)
 . D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","IBCEP0A",177,0)
 . I Y'>0!$D(DUOUT)!$D(DTOUT) S IBIEN=0,IBQ=1 Q
"RTN","IBCEP0A",178,0)
 . S IBIEN=+Y
"RTN","IBCEP0A",179,0)
 . D NEWID^IBCEP5B(355.91,IBINS,"",IBPTYP,IBIEN,1)
"RTN","IBCEP0A",180,0)
ADDIDQ Q IBQ
"RTN","IBCEP2")
0^56^B43180010^B67570854
"RTN","IBCEP2",1,0)
IBCEP2 ;ALB/TMP - EDI UTILITIES for provider ID ;13-DEC-99
"RTN","IBCEP2",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,232,280,320**;21-MAR-94
"RTN","IBCEP2",3,0)
 ; DBIA for access to fields 53.2,54.1,54.2 in file 200: 224
"RTN","IBCEP2",4,0)
 ;
"RTN","IBCEP2",5,0)
GETID(IBIFN,IBTYPE,IBPROV,IBSEQ,IBT,IBT1,IBFUNC) ; Extract IBTYPE id for the bill
"RTN","IBCEP2",6,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEP2",7,0)
 ; IBTYPE = 2:PERFORMING PROVIDER ID (1 and 3 deleted)
"RTN","IBCEP2",8,0)
 ; IBSEQ = numeric COB sequence of the insurance on bill
"RTN","IBCEP2",9,0)
 ; IBFUNC = 1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER;
"RTN","IBCEP2",10,0)
 ; Returns IBT = ien of the provider id type^ien of entry^file # for id
"RTN","IBCEP2",11,0)
 ;
"RTN","IBCEP2",12,0)
 S IBT=0
"RTN","IBCEP2",13,0)
 Q:IBTYPE'=2 ""
"RTN","IBCEP2",14,0)
 N IBID,IBPTYP
"RTN","IBCEP2",15,0)
 S IBID=$$IDFIND(IBIFN,"",IBPROV,IBSEQ,1,.IBT,$G(IBFUNC))
"RTN","IBCEP2",16,0)
 I IBID="" S IBT=""
"RTN","IBCEP2",17,0)
 ;
"RTN","IBCEP2",18,0)
 Q IBID
"RTN","IBCEP2",19,0)
 ;
"RTN","IBCEP2",20,0)
IDFIND(IBIFN,IBPTYP,IBPROV,IBSEQ,IBPERF,IBT,IBFUNC) ;Loop thru source levels
"RTN","IBCEP2",21,0)
 ;   (if id definition allows) to find correct ID
"RTN","IBCEP2",22,0)
 ; IBIFN = bill ien (file 399)
"RTN","IBCEP2",23,0)
 ; IBPTYP = ien of the provider id type in file 355.97 or if null,
"RTN","IBCEP2",24,0)
 ;          the default performing provider ID type for the ins co. in
"RTN","IBCEP2",25,0)
 ;          COB sequence IBSEQ will be calculated
"RTN","IBCEP2",26,0)
 ; IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",27,0)
 ; IBSEQ = numeric COB sequence of the bill
"RTN","IBCEP2",28,0)
 ; IBPERF = 1 if the performing provider id is needed
"RTN","IBCEP2",29,0)
 ; IBFUNC = 1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER;
"RTN","IBCEP2",30,0)
 ; Returns IBT = ptr to file 355.97^entry #^file #
"RTN","IBCEP2",31,0)
 ;
"RTN","IBCEP2",32,0)
 S IBT=+$G(IBPTYP)
"RTN","IBCEP2",33,0)
 Q:'$G(IBPERF)!'$G(IBPROV) ""
"RTN","IBCEP2",34,0)
 N IBSPEC,IBINS,IBINS4,IBSRC,IBUP,IBID,IBALT,IBPROF,Z
"RTN","IBCEP2",35,0)
 I $G(IBSEQ)="" S IBSEQ=+$$COBN^IBCEF(IBIFN) ; Default to current COB seq
"RTN","IBCEP2",36,0)
 S IBINS=+$P($G(^DGCR(399,IBIFN,"I"_IBSEQ)),U),IBINS4=$G(^DIC(36,+IBINS,4))
"RTN","IBCEP2",37,0)
 S IBPROF=($$FT^IBCEF(IBIFN)=2) S:'IBPROF IBPROF=2
"RTN","IBCEP2",38,0)
 ; form type is HCFA (prof)=1, UB92 (inst)=2
"RTN","IBCEP2",39,0)
 I $G(IBPTYP)="",$G(IBFUNC)=1,IBPROF=1 S (IBT,IBPTYP)=+$P(IBINS4,U,4) ; Referring Default ID on HCFA
"RTN","IBCEP2",40,0)
 I $G(IBPTYP)="" S (IBT,IBPTYP)=+$P(IBINS4,U,IBPROF) ; Def to perf prv typ for form
"RTN","IBCEP2",41,0)
 I 'IBPTYP Q ""  ; No default id type
"RTN","IBCEP2",42,0)
 S IBSPEC=$G(^IBE(355.97,IBPTYP,1)),IBSRC=$P($G(^IBE(355.97,+IBPTYP,0)),U,2),IBSRC=$S('IBSRC:5,1:IBSRC),IBUP=1
"RTN","IBCEP2",43,0)
 S IBALT=0
"RTN","IBCEP2",44,0)
 ;
"RTN","IBCEP2",45,0)
 F  D  Q:'IBUP!($G(IBID)'="")  S IBSRC=IBSRC-1 Q:'IBSRC
"RTN","IBCEP2",46,0)
 . ;
"RTN","IBCEP2",47,0)
 . I IBSRC=1,$TR($P(IBSPEC,U,1,3),"^0")'="" D  Q  ; Indiv prov default
"RTN","IBCEP2",48,0)
 .. N IBSTATE
"RTN","IBCEP2",49,0)
 .. I $P(IBSPEC,U,2) D  Q  ; Federal DEA # from field 53.2 file 200
"RTN","IBCEP2",50,0)
 ... S IBID=$P($G(^VA(200,+IBPROV,"PS")),U,2) ; DBIA224
"RTN","IBCEP2",51,0)
 ... S $P(IBT,U,2,3)=(IBPROV_U_200)
"RTN","IBCEP2",52,0)
 .. S IBSTATE=+$$CAREST^IBCEP2A(IBIFN)
"RTN","IBCEP2",53,0)
 .. I $P(IBSPEC,U) D  Q  ; State issued DEA # needed
"RTN","IBCEP2",54,0)
 ... Q:'IBSTATE
"RTN","IBCEP2",55,0)
 ... ; Extract the state issuing DEA # from field 54.2 file 200
"RTN","IBCEP2",56,0)
 ... S Z=+$O(^VA(200,+IBPROV,"PS2","B",IBSTATE,0)),IBID=$P($G(^VA(200,+IBPROV,"PS2",Z,0)),U,2) ; DBIA224
"RTN","IBCEP2",57,0)
 ... S $P(IBT,U,2,3)=(+IBPROV_";"_Z_U_200)
"RTN","IBCEP2",58,0)
 .. I $P(IBSPEC,U,3) D  Q  ; State license # needed
"RTN","IBCEP2",59,0)
 ... Q:'IBSTATE
"RTN","IBCEP2",60,0)
 ... ; Extract the state license # from field 54.1 file 200
"RTN","IBCEP2",61,0)
 ... I IBPROV["VA(200" S Z=+$O(^VA(200,+IBPROV,"PS1","B",IBSTATE,0)),IBID=$P($G(^VA(200,+IBPROV,"PS1",Z,0)),U,2),$P(IBT,U,2,3)=(+IBPROV_";"_IBSTATE_U_200) ; DBIA224
"RTN","IBCEP2",62,0)
 ... I IBPROV["IBA(355.93" S IBID=$P($G(^IBA(355.93,+IBPROV,0)),U,12),$P(IBT,U,2,3)=(+IBPROV_U_355.93)
"RTN","IBCEP2",63,0)
 . ;
"RTN","IBCEP2",64,0)
 . I IBSRC=2,$P(IBSPEC,U,4) D  Q  ; FACILITY FED TAX ID #
"RTN","IBCEP2",65,0)
 .. N IBXDATA
"RTN","IBCEP2",66,0)
 .. D F^IBCEF("N-FEDERAL TAX ID",,,IBIFN)
"RTN","IBCEP2",67,0)
 .. S IBID=IBXDATA,$P(IBT,U,2,3)=(U_350.9)
"RTN","IBCEP2",68,0)
 . ;
"RTN","IBCEP2",69,0)
 . I IBSRC=1 S IBID=$$SRC1(IBIFN,"*ALL*",IBPTYP,IBPROV,.IBT) Q
"RTN","IBCEP2",70,0)
 . ;
"RTN","IBCEP2",71,0)
 . I IBSRC=2 S IBID=$$SRC2(IBPTYP,.IBT) Q
"RTN","IBCEP2",72,0)
 . ;
"RTN","IBCEP2",73,0)
 . I IBSRC=3 S IBID=$$SRC3(IBIFN,IBINS,IBPTYP,.IBT) Q
"RTN","IBCEP2",74,0)
 . ; 
"RTN","IBCEP2",75,0)
 . I IBSRC=4 S IBID=$$SRC4(IBIFN,IBINS,IBPTYP,IBPROV,.IBT) Q
"RTN","IBCEP2",76,0)
 . ;
"RTN","IBCEP2",77,0)
 . I IBSRC=5 S IBID=$$SRC5(IBIFN,IBINS,IBPTYP,IBSEQ,.IBT,$G(IBFUNC)) Q
"RTN","IBCEP2",78,0)
 . ;
"RTN","IBCEP2",79,0)
 . I IBSRC=6 S IBID=$$SRC6(IBIFN,IBINS,IBPTYP,IBPROV,IBSEQ,.IBT) Q
"RTN","IBCEP2",80,0)
 ;
"RTN","IBCEP2",81,0)
 Q $G(IBID)
"RTN","IBCEP2",82,0)
 ;
"RTN","IBCEP2",83,0)
GETALL(IBTYPE,IBIFN,IBPROV,IBPID) ; Extract all performing prov id's for a
"RTN","IBCEP2",84,0)
 ; provider (IBPROV - vp format) on bill IBIFN
"RTN","IBCEP2",85,0)
 ; IBTYPE = type of ID to return (see GETID above)
"RTN","IBCEP2",86,0)
 ;
"RTN","IBCEP2",87,0)
 ; Returns array IBPID(COB SEQ #)=id (pass by reference) AND
"RTN","IBCEP2",88,0)
 ;   IBPID(COB SEQ #,1)=ien of id type (ptr to 355.97)
"RTN","IBCEP2",89,0)
 ;   IBPID = current insurance co's id
"RTN","IBCEP2",90,0)
 ;
"RTN","IBCEP2",91,0)
 N Z,COB,Z1,IBT
"RTN","IBCEP2",92,0)
 S COB=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2",93,0)
 F Z=1:1:3 Q:'$D(^DGCR(399,IBIFN,"I"_Z))  S IBPID(Z)=$$GETID(IBTYPE,IBIFN,IBPROV,Z,.IBT),IBPID(Z,1)=IBT I Z=COB S Z1=IBPID(Z)
"RTN","IBCEP2",94,0)
 Q $G(Z1)
"RTN","IBCEP2",95,0)
 ;
"RTN","IBCEP2",96,0)
SRC1(IBIFN,IBINS,IBPTYP,IBPROV,IBT) ; Licensing/gov't issued # - provider specific
"RTN","IBCEP2",97,0)
 ; Parameter definitions for SRC1, SRC3, SRC4, SRC5, SRC6:
"RTN","IBCEP2",98,0)
 ;   IBIFN = ien of bill (file 399)
"RTN","IBCEP2",99,0)
 ;   IBINS = ien of insurance co (file 36) or *ALL* for all insurance
"RTN","IBCEP2",100,0)
 ;           (always *ALL* for SRC1)
"RTN","IBCEP2",101,0)
 ;   IBPTYP = ien of the provider id type in file 355.97
"RTN","IBCEP2",102,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",103,0)
 ;   IBT = returned as type ien^file ien^file #
"RTN","IBCEP2",104,0)
 ;
"RTN","IBCEP2",105,0)
 N IBID,IB,IBRX,IBIDSV
"RTN","IBCEP2",106,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",107,0)
 I $G(IBPROV) F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",108,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,"",IB)
"RTN","IBCEP2",109,0)
 . I IBRX,$P($G(^IBA(355.9,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",110,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",111,0)
 Q IBID
"RTN","IBCEP2",112,0)
 ;
"RTN","IBCEP2",113,0)
SRC2(IB35597,IBT) ; Facility default - all providers
"RTN","IBCEP2",114,0)
 ; IB35597 = ien of the provider id type entry in file 355.97
"RTN","IBCEP2",115,0)
 ; IBT = returned as type ien^file ien^file #
"RTN","IBCEP2",116,0)
 ;
"RTN","IBCEP2",117,0)
 S $P(IBT,U,2,3)=(+IB35597_U_355.97)
"RTN","IBCEP2",118,0)
 Q $P($G(^IBE(355.97,+IB35597,0)),U,4)
"RTN","IBCEP2",119,0)
 ;
"RTN","IBCEP2",120,0)
SRC3(IBIFN,IBINS,IBPTYP,IBT) ; Ins co/all providers
"RTN","IBCEP2",121,0)
 ; See SRC1 for parameter definitions
"RTN","IBCEP2",122,0)
 N IB,IBID,IBRX,IBIDSV
"RTN","IBCEP2",123,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",124,0)
 F  S IB=$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*",IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",125,0)
 . S IBID=$$UNIQ2(IBIFN,IBINS,IBPTYP,"",IB,.IBT)
"RTN","IBCEP2",126,0)
 . I IBRX,$P($G(^IBA(355.91,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",127,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",128,0)
 Q IBID
"RTN","IBCEP2",129,0)
 ;
"RTN","IBCEP2",130,0)
SRC4(IBIFN,IBINS,IBPTYP,IBPROV,IBT) ;  Insurance co/individual provider
"RTN","IBCEP2",131,0)
 ; See SRC1 for parameter definitions
"RTN","IBCEP2",132,0)
 ;
"RTN","IBCEP2",133,0)
 N IBID,IB,IBRX,IBIDSV
"RTN","IBCEP2",134,0)
 S IBID="",IB=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",135,0)
 I $G(IBPROV) F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",136,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,"",IB,.IBT)
"RTN","IBCEP2",137,0)
 . I IBRX,$P($G(^IBA(355.9,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",138,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",139,0)
 Q IBID
"RTN","IBCEP2",140,0)
 ;
"RTN","IBCEP2",141,0)
SRC5(IBIFN,IBINS,IBPTYP,IBSEQ,IBT,IBFUNC) ; Ins co/all providers/care unit
"RTN","IBCEP2",142,0)
 ; See SRC1 for missing parameter definitions
"RTN","IBCEP2",143,0)
 ; IBSEQ = the numeric COB sequence of the insurance on the bill
"RTN","IBCEP2",144,0)
 ;
"RTN","IBCEP2",145,0)
 N IBP,IBUNIT,IBID,IB,Z,IBIDSV,IBRX
"RTN","IBCEP2",146,0)
 S IBID="",Z=0,IBRX=$$ISRX^IBCEF1(IBIFN),IBIDSV=""
"RTN","IBCEP2",147,0)
 S IBP=+$O(^DGCR(399,IBIFN,"PRV","B",$S($G(IBFUNC)=1:1,$$FT^IBCEF(IBIFN)=3:4,1:3),0)),IBUNIT=$P($G(^DGCR(399,IBIFN,"PRV",IBP,0)),U,8+IBSEQ)
"RTN","IBCEP2",148,0)
 I IBUNIT'="" F  S Z=$O(^IBA(355.96,"AC",IBINS,IBPTYP,Z)) Q:'Z  D  Q:IBID'=""
"RTN","IBCEP2",149,0)
 . S IB=0 F  S IB=$O(^IBA(355.91,"ACARE",Z,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",150,0)
 .. S IBID=$$UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IB,.IBT)
"RTN","IBCEP2",151,0)
 .. I IBRX,$P($G(^IBA(355.91,IB,0)),U,5)'=3 S:IBIDSV="" IBIDSV=IBID S IBID="" ; Save 1st 'match' if no rx specific id
"RTN","IBCEP2",152,0)
 I IBID="",IBIDSV'="" S IBID=IBIDSV
"RTN","IBCEP2",153,0)
 Q IBID
"RTN","IBCEP2",154,0)
 ;
"RTN","IBCEP2",155,0)
SRC6(IBIFN,IBINS,IBPTYP,IBPROV,IBSEQ,IBT) ; Ins co/ind provider/care unit
"RTN","IBCEP2",156,0)
 ; See SRC1 for missing parameter definitions
"RTN","IBCEP2",157,0)
 ; IBSEQ = the numeric COB sequence of the insurance on the bill
"RTN","IBCEP2",158,0)
 ;
"RTN","IBCEP2",159,0)
 N IBUNIT,IBP,IBID,IB
"RTN","IBCEP2",160,0)
 S IBID="",IB=0
"RTN","IBCEP2",161,0)
 S IBP=+$O(^DGCR(399,"PRV","B",$S($$FT^IBCEF(IBIFN)=3:3,1:4),0)),IBUNIT=$P($G(^DGCR(399,IBIFN,"PRV",IBP,0)),U,8+IBSEQ)
"RTN","IBCEP2",162,0)
 I $G(IBPROV),IBUNIT'="" F  S IB=$O(^IBA(355.9,"AD",IBPTYP,IBPROV,IBINS,IB)) Q:'IB  D  Q:IBID'=""
"RTN","IBCEP2",163,0)
 . S IBID=$$UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IB,.IBT)
"RTN","IBCEP2",164,0)
 Q IBID
"RTN","IBCEP2",165,0)
 ;
"RTN","IBCEP2",166,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2",167,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2",168,0)
 ;
"RTN","IBCEP2",169,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2",170,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2",171,0)
 ;
"RTN","IBCEP2",172,0)
 Q $$UNIQ1^IBCEP2A($G(IBIFN),$G(IBINS),$G(IBPTYP),$G(IBPROV),$G(IBUNIT),$G(IBCU),$G(IBT))
"RTN","IBCEP2",173,0)
 ;
"RTN","IBCEP2",174,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2",175,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2",176,0)
 ;
"RTN","IBCEP2",177,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2",178,0)
 ;
"RTN","IBCEP2",179,0)
 Q $$UNIQ2^IBCEP2A($G(IBIFN),$G(IBINS),$G(IBPTYP),$G(IBUNIT),$G(IBCU),$G(IBT))
"RTN","IBCEP2A")
0^57^B42808014^B17487545
"RTN","IBCEP2A",1,0)
IBCEP2A ;ALB/TMP - EDI UTILITIES for provider ID ;25-APR-01
"RTN","IBCEP2A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP2A",3,0)
 ;
"RTN","IBCEP2A",4,0)
ALT(IBPERF,IBSRC,IBALT,IBINS4,IBPTYP) ; set source level to next higher level 
"RTN","IBCEP2A",5,0)
 ; or set the alternate type and source if performing provider id
"RTN","IBCEP2A",6,0)
 ; alternate type and source exist
"RTN","IBCEP2A",7,0)
 ; IBPERF = 1 if performing provider id is requested
"RTN","IBCEP2A",8,0)
 ; IBINS4 = '4' node of insurance co (file 36)
"RTN","IBCEP2A",9,0)
 ; Pass IBPTYP by reference to get alternate provider id type
"RTN","IBCEP2A",10,0)
 ; Pass IBALT by reference.  Set to 1 if alternate id is to be used next
"RTN","IBCEP2A",11,0)
 ;
"RTN","IBCEP2A",12,0)
 I '$G(IBPERF)!($P(IBINS4,U,3)=1) S IBSRC=IBSRC-1 G ALTQ
"RTN","IBCEP2A",13,0)
 S IBSRC=""
"RTN","IBCEP2A",14,0)
 I '$G(IBALT),$P(IBINS4,U,3)=2,$P(IBINS4,U,10),$P(IBINS4,U,11) S IBALT=1,IBSRC=$P(IBINS4,U,11),IBPTYP=$P(IBINS4,U,10) S:IBPTYP="" IBPTYP=$P(IBINS4,U)
"RTN","IBCEP2A",15,0)
 ;
"RTN","IBCEP2A",16,0)
ALTQ Q IBSRC
"RTN","IBCEP2A",17,0)
 ;
"RTN","IBCEP2A",18,0)
IDSET(IBPTYP,IBINS4,IBPERF,IBSPEC,IBSRC,IBUP) ; set variables for provider id type search
"RTN","IBCEP2A",19,0)
 N Z
"RTN","IBCEP2A",20,0)
 S IBSPEC=$G(^IBE(355.97,+IBPTYP,1))
"RTN","IBCEP2A",21,0)
 S Z=$S($G(IBPERF):2,$P(IBSPEC,U,5):6,$P(IBSPEC,U,6):4,1:2)
"RTN","IBCEP2A",22,0)
 S IBSRC=$P(IBINS4,U,Z),IBUP=$P(IBINS4,U,$S(IBSRC:Z+1,1:0))
"RTN","IBCEP2A",23,0)
 Q
"RTN","IBCEP2A",24,0)
 ;
"RTN","IBCEP2A",25,0)
CAREST(IBIFN) ; Return state file ien of state where care was performed
"RTN","IBCEP2A",26,0)
 ; IBIFN = ien of bill in file 399
"RTN","IBCEP2A",27,0)
 ; Get it from rendering facility or if none, the billing facility
"RTN","IBCEP2A",28,0)
 N Z,IBXDATA,STATE
"RTN","IBCEP2A",29,0)
 S STATE=""
"RTN","IBCEP2A",30,0)
 D F^IBCEF("N-RENDERING INSTITUTION",,,IBIFN)
"RTN","IBCEP2A",31,0)
 I IBXDATA D
"RTN","IBCEP2A",32,0)
 . I '$P(IBXDATA,U,2) S STATE=+$P($G(^DIC(4,+IBXDATA,0)),U,2) Q
"RTN","IBCEP2A",33,0)
 . S STATE=+$P($G(^IBA(355.93,+IBXDATA,0)),U,7)
"RTN","IBCEP2A",34,0)
 E  D
"RTN","IBCEP2A",35,0)
 . D F^IBCEF("N-AGENT CASHIER STATE",,,IBIFN)
"RTN","IBCEP2A",36,0)
 . S STATE=IBXDATA
"RTN","IBCEP2A",37,0)
 Q STATE
"RTN","IBCEP2A",38,0)
 ;
"RTN","IBCEP2A",39,0)
RECALCA(IBIFN) ; Recalculate all performing provider id's on bill IBIFN
"RTN","IBCEP2A",40,0)
 ; IBIFN = ien of bill entry (file 399)
"RTN","IBCEP2A",41,0)
 N IBZ,IBZ0,IBX,IBP,IBSEQ,DA,DIE,DR,DIR,X,Y
"RTN","IBCEP2A",42,0)
 ;
"RTN","IBCEP2A",43,0)
 D EN^DDIOL("THIS FUNCTION HAS BEEN DISABLED",,"!") Q
"RTN","IBCEP2A",44,0)
 ;
"RTN","IBCEP2A",45,0)
 S DA(1)=IBIFN
"RTN","IBCEP2A",46,0)
 I '$D(^XUSEC("IB SUPERVISOR",DUZ)) D EN^DDIOL("YOU ARE NOT AUTHORIZED TO PERFORM THIS FUNCTION",,"!")
"RTN","IBCEP2A",47,0)
 S IBZ=0 F  S IBZ=$O(^DGCR(399,IBIFN,"PRV",IBZ)) Q:'IBZ  S IBP=$G(^(IBZ,0)) I $P(IBP,U,2)'="" D
"RTN","IBCEP2A",48,0)
 . S DA=IBZ
"RTN","IBCEP2A",49,0)
 . F IBZ0=5:1:7 Q:'$G(^DGCR(399,IBIFN,"I"_(IBZ0-4)))  D
"RTN","IBCEP2A",50,0)
 .. S IBSEQ=$$EXPAND^IBTRE(399.0222,.01,+IBP)_" "_$P("PRIMARY^SECONDARY^TERTIARY",U,IBZ0-4)_" PROVIDER ID "
"RTN","IBCEP2A",51,0)
 .. S IBX=$$RECALC(.DA,IBZ0-4,$P(IBP,U,IBZ0),1)
"RTN","IBCEP2A",52,0)
 .. I IBX'="",IBX=$P(IBP,U,IBZ0) D EN^DDIOL(IBSEQ_"NO CHANGE NEEDED",,"!") Q
"RTN","IBCEP2A",53,0)
 .. I IBX'="",IBX'=$P(IBP,U,IBZ0) D  Q
"RTN","IBCEP2A",54,0)
 ... S DR=(IBZ0/100)_"////"_IBX,DIE="^DGCR(399,"_DA(1)_",""PRV""," D ^DIE
"RTN","IBCEP2A",55,0)
 ... D EN^DDIOL(IBSEQ_"CHANGED TO "_IBX,,"!")
"RTN","IBCEP2A",56,0)
 .. D EN^DDIOL(IBSEQ_"NOT FOUND",,"!")
"RTN","IBCEP2A",57,0)
 Q
"RTN","IBCEP2A",58,0)
 ;
"RTN","IBCEP2A",59,0)
RECALC(IBDA,IBSEQ,IBX,IBD) ; Recalculate id #, if possible - called
"RTN","IBCEP2A",60,0)
 ;   from input transforms in subfile 399.0222, fields .05-.07
"RTN","IBCEP2A",61,0)
 ; IBDA = DA array of the provider entry (file 399.0222)
"RTN","IBCEP2A",62,0)
 ; IBSEQ = the numeric COB sequence of the provider id (1-3)
"RTN","IBCEP2A",63,0)
 ; IBX = the current value of the id in the subfile
"RTN","IBCEP2A",64,0)
 ; IBD = flag that if set to 1 will suppress the display text
"RTN","IBCEP2A",65,0)
 ;
"RTN","IBCEP2A",66,0)
 N IBPN,IBZ
"RTN","IBCEP2A",67,0)
 S IBPN=$P($G(^DGCR(399,IBDA(1),"PRV",IBDA,0)),U,2)
"RTN","IBCEP2A",68,0)
 I IBPN="" D:'$G(IBD) EN^DDIOL("   CAN'T CALCULATE WITHOUT A PROVIDER NAME","","?0") G RECALCQ
"RTN","IBCEP2A",69,0)
 S IBZ=$$GETID^IBCEP2(IBDA(1),2,IBPN,IBSEQ)
"RTN","IBCEP2A",70,0)
 I IBZ="" D:'$G(IBD) EN^DDIOL("   ID COULD NOT BE DETERMINED","","?0") G RECALCQ
"RTN","IBCEP2A",71,0)
 D:'$G(IBD) EN^DDIOL("  "_IBZ_$S(IBZ'=IBX:"",1:" (no change)"),"","?0")
"RTN","IBCEP2A",72,0)
 S IBX=IBZ
"RTN","IBCEP2A",73,0)
 ;
"RTN","IBCEP2A",74,0)
RECALCQ Q IBX
"RTN","IBCEP2A",75,0)
 ;
"RTN","IBCEP2A",76,0)
PERFPRV(IBIFN) ; Returns the variable pointer of the 'performing provider'
"RTN","IBCEP2A",77,0)
 ; (attending or rendering) for a bill IBIFN
"RTN","IBCEP2A",78,0)
 N IBP,IBPT,IBQ,Z
"RTN","IBCEP2A",79,0)
 S Z=$$FT^IBCEF(IBIFN),IBPT=$S(Z=2:3,Z=3:4,1:0)
"RTN","IBCEP2A",80,0)
 D GETPRV^IBCEU(IBIFN,IBPT,.IBP)
"RTN","IBCEP2A",81,0)
 Q $P($G(IBP(IBPT,1)),U,3)
"RTN","IBCEP2A",82,0)
 ;
"RTN","IBCEP2A",83,0)
INSPAR(IBIFN,SEQ) ;
"RTN","IBCEP2A",84,0)
 N Z,Z4,Z0
"RTN","IBCEP2A",85,0)
 Q:$G(X)'="??"
"RTN","IBCEP2A",86,0)
 S:'$G(SEQ) SEQ=$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2A",87,0)
 S Z=+$G(^DGCR(399,IBIFN,"I"_SEQ)),Z4=$G(^DIC(36,Z,4))
"RTN","IBCEP2A",88,0)
 I Z D
"RTN","IBCEP2A",89,0)
 . D EN^DDIOL(">"_$J("",20)_"-- PERFORMING PROVIDER ID PARAMETERS --",,"!")
"RTN","IBCEP2A",90,0)
 . S Z0=$P("  PRIMARY^SECONDARY^ TERTIARY",U,SEQ)_" INSURANCE: "_$P($G(^DIC(36,Z,0)),U)
"RTN","IBCEP2A",91,0)
 . D EN^DDIOL(">"_$J("",(80-$L(Z0))\2)_Z0,,"!")
"RTN","IBCEP2A",92,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (HCFA): "_$$EXPAND^IBTRE(36,4.01,+Z4),,"!")
"RTN","IBCEP2A",93,0)
 . D EN^DDIOL(">  Secondary Perf Prov ID Type (UB92): "_$$EXPAND^IBTRE(36,4.02,$P(Z4,U,2)),,"!")
"RTN","IBCEP2A",94,0)
 . D EN^DDIOL(">    Secondary Perf Prov IDs Required: "_$$EXPAND^IBTRE(36,4.03,$P(Z4,U,3)),,"!")
"RTN","IBCEP2A",95,0)
 . D EN^DDIOL(" ",,"!")
"RTN","IBCEP2A",96,0)
 Q
"RTN","IBCEP2A",97,0)
 ;
"RTN","IBCEP2A",98,0)
GETTYP(IBXIEN,IBCOBN,IBFUNC) ; Function returns provider id type for insurance co
"RTN","IBCEP2A",99,0)
 ; with COB of IBCOBN on claim ien IBXIEN in first ^ pc and 1 in second
"RTN","IBCEP2A",100,0)
 ; ^ piece if the id is required
"RTN","IBCEP2A",101,0)
 ; 
"RTN","IBCEP2A",102,0)
 ; IBFUNC=1:REFERRING;2:OPERATING;3:RENDERING;4:ATTENDING;5:SUPERVISING;9:OTHER
"RTN","IBCEP2A",103,0)
 ; 
"RTN","IBCEP2A",104,0)
 N A,R,Z,Z0
"RTN","IBCEP2A",105,0)
 S A="",R=0
"RTN","IBCEP2A",106,0)
 S:'$G(IBCOBN)!(IBCOBN>3) IBCOBN=$$COBN^IBCEF(IBXIEN)
"RTN","IBCEP2A",107,0)
 S Z=+$G(^DGCR(399,IBXIEN,"I"_+IBCOBN))
"RTN","IBCEP2A",108,0)
 I Z D
"RTN","IBCEP2A",109,0)
 . S Z0=$$FT^IBCEF(IBXIEN)
"RTN","IBCEP2A",110,0)
 . S A=+$P($G(^DIC(36,Z,4)),U,$S(Z0=2&($G(IBFUNC)=1):4,Z0=2:1,1:2))
"RTN","IBCEP2A",111,0)
 . I A,$G(IBFUNC)'=1 S R=$P($G(^DIC(36,Z,4)),U,3),R=$S('R:0,R=3:1,R=1:Z0=2,R=2:Z0=3,1:0)
"RTN","IBCEP2A",112,0)
 . I A,$G(IBFUNC)=1 S R=+$P($G(^DIC(36,Z,4)),U,5),R=$S('R:0,Z0'=2:0,1:1)
"RTN","IBCEP2A",113,0)
 Q A_U_R
"RTN","IBCEP2A",114,0)
 ;
"RTN","IBCEP2A",115,0)
UNIQ1(IBIFN,IBINS,IBPTYP,IBPROV,IBUNIT,IBCU,IBT) ; Match most-least specific
"RTN","IBCEP2A",116,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",117,0)
 ;
"RTN","IBCEP2A",118,0)
 ; Start in file 355.9 (Specific Provider)
"RTN","IBCEP2A",119,0)
 ;   IBPROV = (variable pointer syntax) provider on bill IBIFN
"RTN","IBCEP2A",120,0)
 ;
"RTN","IBCEP2A",121,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",122,0)
 S IBID=""
"RTN","IBCEP2A",123,0)
 S IBX=$P($G(^IBA(355.9,+IBCU,0)),U,3) S:"0"[IBX IBX="*N/A*"
"RTN","IBCEP2A",124,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",125,0)
 ;
"RTN","IBCEP2A",126,0)
 ; Match all elements
"RTN","IBCEP2A",127,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",128,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",129,0)
 ;
"RTN","IBCEP2A",130,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",131,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",132,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",133,0)
 ;
"RTN","IBCEP2A",134,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",135,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",136,0)
 G:IBID'="" UNIQ1Q
"RTN","IBCEP2A",137,0)
 ;
"RTN","IBCEP2A",138,0)
 ; Match both form types, both I/O element or Rx
"RTN","IBCEP2A",139,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.9,"AUNIQ",IBPROV,IBINS,IBX,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.9,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.9) Q
"RTN","IBCEP2A",140,0)
 ;
"RTN","IBCEP2A",141,0)
UNIQ1Q Q IBID
"RTN","IBCEP2A",142,0)
 ;
"RTN","IBCEP2A",143,0)
UNIQ2(IBIFN,IBINS,IBPTYP,IBUNIT,IBCU,IBT) ; Match on most-least specific
"RTN","IBCEP2A",144,0)
 ; *** SEE PARAMETER DEFINITIONS IN IBCEP3 ***
"RTN","IBCEP2A",145,0)
 ;
"RTN","IBCEP2A",146,0)
 ; Start in file 355.91 (Specific Insurance)
"RTN","IBCEP2A",147,0)
 ;
"RTN","IBCEP2A",148,0)
 N Q,Z0,Z1,Z2,IBID,IBX
"RTN","IBCEP2A",149,0)
 S IBID="" S:"0"[$G(IBUNIT) IBUNIT="*N/A*"
"RTN","IBCEP2A",150,0)
 S Z0=$$FT^IBCEF(IBIFN),Z0=$S(Z0=2:2,Z0=3:1,1:0),Z1=$$INPAT^IBCEF(IBIFN,1) S:'Z1 Z1=2 S Z2=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP2A",151,0)
 ;
"RTN","IBCEP2A",152,0)
 ; Match all elements
"RTN","IBCEP2A",153,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",154,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",155,0)
 ;
"RTN","IBCEP2A",156,0)
 ; Match both form types,specific I/O element
"RTN","IBCEP2A",157,0)
 F Q=$S(Z2:3,1:Z1),$S(Z2:Z1,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",158,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",159,0)
 ;
"RTN","IBCEP2A",160,0)
 ; Match specific form type, both I/O element or Rx
"RTN","IBCEP2A",161,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,Z0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",162,0)
 G:IBID'="" UNIQ2Q
"RTN","IBCEP2A",163,0)
 ;
"RTN","IBCEP2A",164,0)
 ; Match both form types, both I/O elements or Rx
"RTN","IBCEP2A",165,0)
 F Q=$S(Z2:3,1:0),$S(Z2:0,1:"") I Q'="",$D(^IBA(355.91,"AUNIQ",IBINS,IBUNIT,0,Q,IBPTYP,IBCU)) S IBID=$P($G(^IBA(355.91,IBCU,0)),U,7),$P(IBT,U,2,3)=(IBCU_U_355.91) Q
"RTN","IBCEP2A",166,0)
 ;
"RTN","IBCEP2A",167,0)
UNIQ2Q Q IBID
"RTN","IBCEP2A",168,0)
 ;
"RTN","IBCEP2B")
0^58^B49897444^B43061345
"RTN","IBCEP2B",1,0)
IBCEP2B ;ALB/TMP - EDI UTILITIES for provider ID ;18-MAY-04
"RTN","IBCEP2B",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320**;21-MAR-94
"RTN","IBCEP2B",3,0)
 ;
"RTN","IBCEP2B",4,0)
PROVID(IBIFN,IBPRIEN,IBCOBN,DIPA) ; Provider id entry on billing screen 8
"RTN","IBCEP2B",5,0)
 ; IBIFN = ien file 399
"RTN","IBCEP2B",6,0)
 ; IBPRIEN = ien file 399.0222
"RTN","IBCEP2B",7,0)
 ; IBCOBN = the COB number of the id being edited
"RTN","IBCEP2B",8,0)
 ; DIPA = passed by ref, returned with id data
"RTN","IBCEP2B",9,0)
 ; DIPA("EDIT")=-1 if no id editing  = 1 if edit id   = 2 if stuff id
"RTN","IBCEP2B",10,0)
 ; DIPA("PRID")= id to stuff   DIPA("PRIDT")= id type to stuff
"RTN","IBCEP2B",11,0)
 N PRN0,Z
"RTN","IBCEP2B",12,0)
 Q:'$G(^DGCR(399,IBIFN,"I1"))
"RTN","IBCEP2B",13,0)
 S PRN0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",14,0)
 S DIPA("EDIT")=1,(DIPA("PRID"),DIPA("PRIDT"))=""
"RTN","IBCEP2B",15,0)
 W @IOF
"RTN","IBCEP2B",16,0)
 W !,?19,"**** SECONDARY PERFORMING PROVIDER IDs ****"
"RTN","IBCEP2B",17,0)
 W !!,$P("PRIMARY^SECONDARY^TERTIARY",U,IBCOBN)_" INSURANCE CO: "_$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"I"_IBCOBN)),0)),U)
"RTN","IBCEP2B",18,0)
 W !,"PROVIDER: "_$$EXTERNAL^DILFD(399.0222,.02,"",$P(PRN0,U,2))_" ("_$$EXTERNAL^DILFD(399.0222,.01,"",+PRN0)_")",!
"RTN","IBCEP2B",19,0)
 ;
"RTN","IBCEP2B",20,0)
 I $P(PRN0,U,4+IBCOBN)="" K DIPA("PRID"),DIPA("PRIDT") D NEWID(IBIFN,IBPRIEN,IBCOBN,.DIPA) ; No id currently exists for the ins seq/prov
"RTN","IBCEP2B",21,0)
 ;
"RTN","IBCEP2B",22,0)
 Q
"RTN","IBCEP2B",23,0)
 ;
"RTN","IBCEP2B",24,0)
NEWID(IBIFN,IBPRIEN,IBCOBN,DIPA) ;
"RTN","IBCEP2B",25,0)
 N IBDEF,IBCT,IBNUM,IBINS,IBFRM,IBCAR,IBARR,IBARRS,IB0,IBM,IBQUIT,IBSEL,PRN,PRT,PRN,PRN0,DIR,X,Y,Z,Z0,IBZ,IBZ1,IBTYP,IBREQ,IBREQT,IBTYPN,IBID,IBUSED
"RTN","IBCEP2B",26,0)
 S IBREQ=0,IBREQT=""
"RTN","IBCEP2B",27,0)
 S PRN0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",28,0)
 S Z(IBCOBN)=$S($G(DIPA("I"_IBCOBN)):$$GETTYP^IBCEP2A(IBIFN,IBCOBN,$P(PRN0,U)),1:"")
"RTN","IBCEP2B",29,0)
 S IBINS=+$G(^DGCR(399,IBIFN,"I"_IBCOBN)),IB0=$G(^DGCR(399,IBIFN,"PRV",IBPRIEN,0))
"RTN","IBCEP2B",30,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEP2B",31,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=2:2,1:1)
"RTN","IBCEP2B",32,0)
 I $P(Z(IBCOBN),U) D
"RTN","IBCEP2B",33,0)
 . W !,"INS. COMPANY'S DEFAULT SECONDARY ID TYPE IS: "_$$EXTERNAL^DILFD(36,4.01,"",$P(Z(IBCOBN),U)) S IBREQT=+Z(IBCOBN)
"RTN","IBCEP2B",34,0)
 . I $P(Z(IBCOBN),U,2) W !,?2," AND IS REQUIRED TO BE ENTERED FOR THIS CLAIM" S IBREQ=1
"RTN","IBCEP2B",35,0)
 I $$CUNEED^IBCEP3(IBIFN,IBCOBN) W !,"CARE UNITS ARE DEFINED"_$S($P($G(^DIC(36,IBINS,4)),U,9)'="":" AS "_$P(^(4),U,9),1:"")_" FOR THESE IDs"
"RTN","IBCEP2B",36,0)
 D PRACT^IBCEF71(IBINS,IBFRM,IBCAR,$P(IB0,U,2),.IBARR,$P(IB0,U),$S($$COBN^IBCEF(IBIFN)=IBCOBN:"C",1:"O"),355.9,1)
"RTN","IBCEP2B",37,0)
 S (IBNUM,IBCT)=0,IBDEF=""
"RTN","IBCEP2B",38,0)
 I $O(IBARR(""))="" S IBCT=IBCT+1,DIR("A",IBCT)="NO SECONDARY IDS ARE DEFINED FOR THIS PROV THAT ARE VALID FOR THIS CLAIM"
"RTN","IBCEP2B",39,0)
 S IBCT=IBCT+1,DIR("A",IBCT)="SELECT A SECONDARY ID OR ACTION FROM THE LIST BELOW: ",IBCT=IBCT+1,DIR("A",IBCT)=" "
"RTN","IBCEP2B",40,0)
 ;
"RTN","IBCEP2B",41,0)
 S IBCT=IBCT+1,IBNUM=IBNUM+1,DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  NO SECONDARY ID NEEDED",IBNUM=IBNUM+1,IBCT=IBCT+1,DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  ADD AN ID FOR THIS CLAIM ONLY"
"RTN","IBCEP2B",42,0)
 I $O(IBARR(""))="" S IBDEF=1,DIPA("EDIT")=$$SELID(.DIR,IBDEF,.IBID,.DIPA,IBNUM) Q
"RTN","IBCEP2B",43,0)
 ;
"RTN","IBCEP2B",44,0)
 S PRN=$$GETID^IBCEP2(IBIFN,2,$P(PRN0,U,2),IBCOBN,.PRT,,$P(PRN0,U)),IBDEF=""
"RTN","IBCEP2B",45,0)
 ;
"RTN","IBCEP2B",46,0)
 I PRN'="",PRT D
"RTN","IBCEP2B",47,0)
 . N PRT1
"RTN","IBCEP2B",48,0)
 . S PRT1=$P($G(^IBE(355.97,+PRT,0)),U)
"RTN","IBCEP2B",49,0)
 . I $P($G(^IBE(355.97,+PRT,1)),U,3) S PRT1="ST LIC("_$P($G(^DIC(5,+$$CAREST^IBCEP2A(IBIFN),0)),U,2)_")"
"RTN","IBCEP2B",50,0)
 . S IBCT=IBCT+1,IBNUM=IBNUM+1
"RTN","IBCEP2B",51,0)
 . S DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  "_$E("<DEFAULT> "_PRN_$J("",29),1,29)_"  "_$E(PRT1_$J("",15),1,15)
"RTN","IBCEP2B",52,0)
 . S DIR("A",IBCT)=DIR("A",IBCT)_"  "_$S($P(PRT,U,3)'["355.9":"",$P($G(^IBA(+$P(PRT,U,3),+$P(PRT,U,2),0)),U,3)'="":$$EXTERNAL^DILFD(355.9,.03,"",$P($G(^IBA(+$P(PRT,U,3),+$P(PRT,U,2),0)),U,3)),1:"")
"RTN","IBCEP2B",53,0)
 . S IBID(IBNUM)=PRN_U_+PRT,IBDEF=IBNUM,IBID(IBNUM,1)=DIR("A",IBCT),IBDEF=IBNUM,IBDEF("IEN")=$P(PRT,U,2,3)
"RTN","IBCEP2B",54,0)
 . S IBUSED(PRT,PRN,0)=""
"RTN","IBCEP2B",55,0)
 ;
"RTN","IBCEP2B",56,0)
 S IBQUIT=0,IBSEL=1
"RTN","IBCEP2B",57,0)
 ; Sort ids by id type
"RTN","IBCEP2B",58,0)
 S IBZ="" F  S IBZ=$O(IBARR(IBZ)) Q:IBZ=""  S IBZ1="" F  S IBZ1=$O(IBARR(IBZ,IBZ1)) Q:IBZ1=""  D
"RTN","IBCEP2B",59,0)
 . S IBTYP=+$P(IBARR(IBZ,IBZ1),U,9)
"RTN","IBCEP2B",60,0)
 . I $P(IBARR(IBZ,IBZ1),U,4)]"" Q:$D(IBUSED(IBTYP,$P(IBARR(IBZ,IBZ1),U,4),+$P(IBARR(IBZ,IBZ1),U,7)))
"RTN","IBCEP2B",61,0)
 . I $P($G(IBDEF("IEN")),U,2)["355.9",$P(IBARR(IBZ,IBZ1),U,8),$P(IBARR(IBZ,IBZ1),U,8)=+$G(IBDEF("IEN")) Q:$S($P(IBZ1,U)'["INS DEF":$P($G(IBDEF("IEN")),U,2)=355.9,1:$P($G(IBDEF("IEN")),U,2)=355.91)
"RTN","IBCEP2B",62,0)
 . S IBARRS(IBTYP,IBZ,IBZ1)=IBARR(IBZ,IBZ1)
"RTN","IBCEP2B",63,0)
 . I $P(IBARR(IBZ,IBZ1),U,4)]"" S IBUSED(IBTYP,$P(IBARR(IBZ,IBZ1),U,4),+$P(IBARR(IBZ,IBZ1),U,7))=""
"RTN","IBCEP2B",64,0)
 S IBTYP="" F  S IBTYP=$O(IBARRS(IBTYP)) Q:IBTYP=""  S IBZ="" F  S IBZ=$O(IBARRS(IBTYP,IBZ)) Q:IBZ=""  D  Q:IBQUIT
"RTN","IBCEP2B",65,0)
 . S IBZ1="" F  S IBZ1=$O(IBARRS(IBTYP,IBZ,IBZ1)) Q:IBZ1=""  S IBCT=IBCT+1,IBNUM=IBNUM+1 D  Q:IBQUIT
"RTN","IBCEP2B",66,0)
 .. S Z0=IBARRS(IBTYP,IBZ,IBZ1)
"RTN","IBCEP2B",67,0)
 .. S IBARR=$S($P(Z0,U,8)&(IBZ1'["LIC"):$G(^IBA("355.9"_$S($P(IBZ1,U)'="INS DEF":"",1:1),+$P(Z0,U,8),0)),1:"")
"RTN","IBCEP2B",68,0)
 .. S IBTYPN=$S(IBTYP=+$$STLIC^IBCEP8():"ST LIC ("_$P($G(^DIC(5,+$P(Z0,U,7),0)),U,2)_")",1:$P($G(^IBE(355.97,IBTYP,0)),U))
"RTN","IBCEP2B",69,0)
 .. S DIR("A",IBCT)="  "_$E(IBNUM_$J("",3),1,3)_" -  "_$E($S($P(IBZ1,U)="INS DEF":"<INS DEF> ",1:"")_$P(Z0,U,4)_$J("",29),1,29)_"  "_$E(IBTYPN_$J("",15),1,15)_"  "_$S($P(IBARR,U,3):$$EXTERNAL^DILFD(355.9,.03,"",$P(IBARR,U,3)),1:"")
"RTN","IBCEP2B",70,0)
 .. S IBID(IBNUM,1)=DIR("A",IBCT),IBID(IBNUM)=$P(Z0,U,4)_U_IBTYP
"RTN","IBCEP2B",71,0)
 .. I (IBNUM#15)=0 S IBM=$$MORE(.DIR) D  Q:IBQUIT
"RTN","IBCEP2B",72,0)
 ... I IBM<0 S IBQUIT=1,IBSEL=0 Q  ; User aborted list
"RTN","IBCEP2B",73,0)
 ... I 'IBM S IBQUIT=1 Q  ; User wants to select
"RTN","IBCEP2B",74,0)
 ... W ! K DIR S IBCT=1
"RTN","IBCEP2B",75,0)
 I 'IBSEL S DIPA("EDIT")=-1
"RTN","IBCEP2B",76,0)
 I IBSEL S:IBDEF=""&$G(IBREQ) IBDEF=2 S DIPA("EDIT")=$$SELID(.DIR,IBDEF,.IBID,.DIPA,IBNUM)
"RTN","IBCEP2B",77,0)
 Q
"RTN","IBCEP2B",78,0)
 ;
"RTN","IBCEP2B",79,0)
SELID(DIR,IBDEF,IBID,DIPA,IBNUM) ; Returns the selection from the array of possible IDs/ID actions
"RTN","IBCEP2B",80,0)
 N IDACT,IDSEL,X,Y
"RTN","IBCEP2B",81,0)
 S IDACT=""
"RTN","IBCEP2B",82,0)
 S DIR("B")=$S('$G(IBDEF):1,1:IBDEF),DIR("A",+$O(DIR("A",""),-1)+1)=" "
"RTN","IBCEP2B",83,0)
 S DIR(0)="NA^1:"_IBNUM,DIR("A")="Selection: " W ! D ^DIR K DIR
"RTN","IBCEP2B",84,0)
 I $D(DTOUT)!$D(DUOUT)!(Y=1) S IDACT=-1 G SELIDQ
"RTN","IBCEP2B",85,0)
 I Y=2 S IDACT=1 G SELIDQ
"RTN","IBCEP2B",86,0)
 S IDSEL=Y
"RTN","IBCEP2B",87,0)
 S DIR("A",1)="ID SELECTED:",DIR("A",2)="  "_$G(IBID(+Y,1)),DIR("A")="IS THIS CORRECT?: ",DIR("B")="YES",DIR(0)="YA" W ! D ^DIR K DIR
"RTN","IBCEP2B",88,0)
 I Y'=1 S IDACT=-1 G SELIDQ
"RTN","IBCEP2B",89,0)
 S DIPA("PRID")=$P(IBID(IDSEL),U),DIPA("PRIDT")=$P(IBID(IDSEL),U,2),IDACT=2
"RTN","IBCEP2B",90,0)
 ;
"RTN","IBCEP2B",91,0)
SELIDQ Q IDACT
"RTN","IBCEP2B",92,0)
 ;
"RTN","IBCEP2B",93,0)
MORE(DIR) ;
"RTN","IBCEP2B",94,0)
 N DIR,X,Y,DUOUT,DTOUT
"RTN","IBCEP2B",95,0)
 S DIR(0)="YA",DIR("A")="MORE?: ",DIR("B")="NO" W ! D ^DIR K DIR("B")
"RTN","IBCEP2B",96,0)
 Q $S($D(DTOUT)!$D(DUOUT):-1,1:Y)
"RTN","IBCEP2B",97,0)
 ;
"RTN","IBCEP2B",98,0)
 ; IBFIDFL = E = Electronic Form Type
"RTN","IBCEP2B",99,0)
 ;           A = Additional ID's
"RTN","IBCEP2B",100,0)
 ;           LF - VA Lab/Facility
"RTN","IBCEP2B",101,0)
FACID(IBINS,IBFIDFL) ; Enter/edit billing facility ids
"RTN","IBCEP2B",102,0)
 ; IBINS = ien of ins co (file 36)
"RTN","IBCEP2B",103,0)
 N IBID,Z,Z0,Y
"RTN","IBCEP2B",104,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",105,0)
 W @IOF
"RTN","IBCEP2B",106,0)
 D GETBPNUM(IBINS)
"RTN","IBCEP2B",107,0)
 K ^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP2B",108,0)
 S ^TMP("IBCE_PRVFAC_MAINT_INS",$J)=IBFIDFL_U_IBINS_U_"1"
"RTN","IBCEP2B",109,0)
 D EN^VALM("IBCE PRVFAC MAINT")
"RTN","IBCEP2B",110,0)
 K ^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP2B",111,0)
 W @IOF
"RTN","IBCEP2B",112,0)
 D FULL^VALM1
"RTN","IBCEP2B",113,0)
 Q
"RTN","IBCEP2B",114,0)
 ;
"RTN","IBCEP2B",115,0)
GETBPNUM(IBINS) ;
"RTN","IBCEP2B",116,0)
 N Z,Z0,IBID,IBMAIN
"RTN","IBCEP2B",117,0)
 S IBMAIN=$$MAIN(),^TMP($J,"IBBF_ID")=IBMAIN
"RTN","IBCEP2B",118,0)
 S IBID=$$BF^IBCU()
"RTN","IBCEP2B",119,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP2B",120,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP2B",121,0)
 . Q:$P(Z0,U,8)'="E"  ; WCJ 1/13/06  There are several ID types in this file 
"RTN","IBCEP2B",122,0)
 . Q:$P(Z0,U,3)]""
"RTN","IBCEP2B",123,0)
 .; I $P(Z0,U,6)=IBID S ^TMP($J,"IBBF_ID",$S($P(Z0,U,5)=IBMAIN:0,1:+$P(Z0,U,5)),+$P(Z0,U,4))=$P(Z0,U,7)
"RTN","IBCEP2B",124,0)
 . S ^TMP($J,"IBBF_ID",$S($P(Z0,U,5)=IBMAIN:0,1:+$P(Z0,U,5)),+$P(Z0,U,4))=$P(Z0,U,7)
"RTN","IBCEP2B",125,0)
 . S ^TMP($J,"IBBF_ID",$S($P(Z0,U,5)=IBMAIN:0,1:+$P(Z0,U,5)),+$P(Z0,U,4),"QUAL")=$P(Z0,U,6)
"RTN","IBCEP2B",126,0)
 Q
"RTN","IBCEP2B",127,0)
 ;
"RTN","IBCEP2B",128,0)
MAIN() ; Returns ien of default division or the main division for facility if
"RTN","IBCEP2B",129,0)
 ; no IB DEFAULT DIVISION set
"RTN","IBCEP2B",130,0)
 N IBMAIN
"RTN","IBCEP2B",131,0)
 S IBMAIN=$P($G(^IBE(350.9,1,1)),U,25) S:'IBMAIN IBMAIN=+$$PRIM^VASITE()
"RTN","IBCEP2B",132,0)
 Q IBMAIN
"RTN","IBCEP2B",133,0)
 ;
"RTN","IBCEP2B",134,0)
FACNUM(IBIFN,IBCOB,IBQF) ; Function returns the current division's fac billing
"RTN","IBCEP2B",135,0)
 ; prov id for the COB insurance sequence from file 355.92
"RTN","IBCEP2B",136,0)
 ; IBIFN = ien file 399
"RTN","IBCEP2B",137,0)
 ; IBCOB = # of COB ins seq or if "", current assumed
"RTN","IBCEP2B",138,0)
 ; IBQF - 1 if qualifier is to be returned instead of ID
"RTN","IBCEP2B",139,0)
 N Z,IBDIV,IBFT,X
"RTN","IBCEP2B",140,0)
 S X=""
"RTN","IBCEP2B",141,0)
 S IBDIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)
"RTN","IBCEP2B",142,0)
 S:'IBDIV IBDIV=$$MAIN()
"RTN","IBCEP2B",143,0)
 S IBFT=$$FT^IBCEF(IBIFN),IBFT=$S(IBFT=3:1,1:2)
"RTN","IBCEP2B",144,0)
 S:'$G(IBCOB) IBCOB=+$$COBN^IBCEF(IBIFN)
"RTN","IBCEP2B",145,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",146,0)
 D GETBPNUM(+$P($G(^DGCR(399,IBIFN,"M")),U,IBCOB))
"RTN","IBCEP2B",147,0)
 I IBDIV=+$G(^TMP($J,"IBBF_ID")) S IBDIV=0
"RTN","IBCEP2B",148,0)
 I '$G(IBQF) S X=$S($D(^TMP($J,"IBBF_ID",IBDIV,IBFT)):^(IBFT),1:$G(^TMP($J,"IBBF_ID",0,IBFT)))
"RTN","IBCEP2B",149,0)
 I $G(IBQF) S X=$S($D(^TMP($J,"IBBF_ID",IBDIV,IBFT,"QUAL")):^("QUAL"),1:$G(^TMP($J,"IBBF_ID",0,IBFT,"QUAL")))
"RTN","IBCEP2B",150,0)
 K ^TMP($J,"IBBF_ID")
"RTN","IBCEP2B",151,0)
 Q X
"RTN","IBCEP2B",152,0)
 ;
"RTN","IBCEP2B",153,0)
SOP(IBIFN,IBZD) ; Returns X12 current source of pay code for bill ien IBIFN
"RTN","IBCEP2B",154,0)
 ; IBZD = the current ins policy type, if known
"RTN","IBCEP2B",155,0)
 N IBZ
"RTN","IBCEP2B",156,0)
 S IBZ=""
"RTN","IBCEP2B",157,0)
 I $G(IBZD)="" D F^IBCEF("N-CURRENT INS POLICY TYPE","IBZD",,IBIFN)
"RTN","IBCEP2B",158,0)
 S IBZ=$S($G(IBZD)="":"G2","MAMB16"[IBZD:"1C",IBZD="TV"!(IBZD="MC"):"1D",IBZD="CH":"1H",IBZD="BL":$S($$FT^IBCEF(IBIFN)=2:"1B",1:"1A"),1:"G2")
"RTN","IBCEP2B",159,0)
 Q IBZ
"RTN","IBCEP2B",160,0)
 ;
"RTN","IBCEP4")
0^23^B23231941^B19640490
"RTN","IBCEP4",1,0)
IBCEP4 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320**;21-MAR-94
"RTN","IBCEP4",3,0)
 ;
"RTN","IBCEP4",4,0)
EN ; -- main entry point
"RTN","IBCEP4",5,0)
 N IBINS,IBALL,IB95
"RTN","IBCEP4",6,0)
 D ENX
"RTN","IBCEP4",7,0)
 Q
"RTN","IBCEP4",8,0)
 ;
"RTN","IBCEP4",9,0)
EN1(IBINS) ; -- Entry point from provider number maintenence
"RTN","IBCEP4",10,0)
 N IBPRV,IBALL,IB95
"RTN","IBCEP4",11,0)
 D ENX
"RTN","IBCEP4",12,0)
 Q
"RTN","IBCEP4",13,0)
 ;
"RTN","IBCEP4",14,0)
ENX ; Common call to list template for dual entry points
"RTN","IBCEP4",15,0)
 N IBSLEV,DIR,Y
"RTN","IBCEP4",16,0)
 K IBFASTXT
"RTN","IBCEP4",17,0)
 D FULL^VALM1
"RTN","IBCEP4",18,0)
 S DIR(0)="SA^1:Care Units for Performing Provider IDs;2:Care Units for Billing Provider Secondary IDs"
"RTN","IBCEP4",19,0)
 S DIR("A")="Enter Type of Care Unit: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP4",20,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP4",21,0)
 I Y'>0 Q
"RTN","IBCEP4",22,0)
 S IBSLEV=+Y
"RTN","IBCEP4",23,0)
 I IBSLEV=2 D EN^VALM("IBCE 2ND PRVID CARE UNIT MAINT") Q
"RTN","IBCEP4",24,0)
 D EN^VALM("IBCE PRVCARE UNIT MAINT")
"RTN","IBCEP4",25,0)
 Q
"RTN","IBCEP4",26,0)
 ;
"RTN","IBCEP4",27,0)
HDR ; -- header
"RTN","IBCEP4",28,0)
 K VALMHDR
"RTN","IBCEP4",29,0)
 S VALMHDR(1)=" "
"RTN","IBCEP4",30,0)
 S VALMHDR(2)="Insurance Co: "_$S('$G(IBALL)&$G(IBINS):$P($G(^DIC(36,+IBINS,0)),U),1:"ALL")
"RTN","IBCEP4",31,0)
 Q
"RTN","IBCEP4",32,0)
 ;
"RTN","IBCEP4",33,0)
INIT ; -- init variables, list array
"RTN","IBCEP4",34,0)
 N Z,IB,IBLCT,IBENT,IBNM,IB0,Z0,Z1,IBQ,DIR,Y,X
"RTN","IBCEP4",35,0)
 I $G(IBINS) S Y=IBINS ; For entrypoint from provider number maintenance
"RTN","IBCEP4",36,0)
 ;
"RTN","IBCEP4",37,0)
 I '$G(IBINS) D
"RTN","IBCEP4",38,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select an INSURANCE CO to display its care units"
"RTN","IBCEP4",39,0)
 . D ^DIR K DIR
"RTN","IBCEP4",40,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-2 Q
"RTN","IBCEP4",41,0)
 . I Y>0 S IBINS=+Y Q
"RTN","IBCEP4",42,0)
 ;
"RTN","IBCEP4",43,0)
 I Y'=-2 D
"RTN","IBCEP4",44,0)
 . D BLD
"RTN","IBCEP4",45,0)
 E  D
"RTN","IBCEP4",46,0)
 . S VALMQUIT=1
"RTN","IBCEP4",47,0)
 Q
"RTN","IBCEP4",48,0)
 ;
"RTN","IBCEP4",49,0)
BLD ;  Bld display  - IBINS must = ien of file 36
"RTN","IBCEP4",50,0)
 K ^TMP("IBPRV_CU",$J)
"RTN","IBCEP4",51,0)
 ;
"RTN","IBCEP4",52,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",53,0)
 ;
"RTN","IBCEP4",54,0)
 S (IBENT,IBLCT)=0,IBNM=""
"RTN","IBCEP4",55,0)
 F  S IBNM=$O(^IBA(355.95,"C",IBINS,IBNM)) Q:IBNM=""  S Z=0 F  S Z=$O(^IBA(355.95,"C",IBINS,IBNM,Z)) Q:'Z  S IB=$G(^IBA(355.95,Z,0)) I IB'="",$P(IB,U,4)="" D
"RTN","IBCEP4",56,0)
 . S IBLCT=IBLCT+1,IBENT=IBENT+1
"RTN","IBCEP4",57,0)
 . I '$D(^IBA(355.96,"AUNIQ",IBINS,Z)) D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20)_" (NO COMBINATIONS FOUND)",IBENT) Q
"RTN","IBCEP4",58,0)
 . D SET^VALM10(IBLCT,$E(IBENT_"    ",1,4)_$E($P(IB,U)_$J("",30),1,30)_"  "_$E($P(IB,U,2)_$J("",20),1,20),IBENT)
"RTN","IBCEP4",59,0)
 . S ^TMP("IBPRV_CU",$J,"ZIDX",IBENT)=Z
"RTN","IBCEP4",60,0)
 . S Z0=0 F  S Z0=$O(^IBA(355.96,"AE",Z,Z0)) Q:'Z0  S Z1=0 F  S Z1=$O(^IBA(355.96,"AE",Z,Z0,Z1)) Q:'Z1  S IB0=$G(^IBA(355.96,Z1,0)) I IB0'="" D
"RTN","IBCEP4",61,0)
 .. S IBLCT=IBLCT+1
"RTN","IBCEP4",62,0)
 .. S IBQ=$J("",28)_"o "_$E($$EXPAND^IBTRE(355.96,.06,+$P(IB0,U,6))_$J("",20),1,20)
"RTN","IBCEP4",63,0)
 .. S IBQ=IBQ_"  "_$E($P("Both form types^UB92 Only^HCFA 1500 Only",U,$P(IB0,U,4)+1)_$J("",15),1,15)_"  "_$E($P("Inpt/Outpt^Inpt Only^Outpt Only^RX Only",U,+$P(IB0,U,5)+1)_$J("",10),1,10)
"RTN","IBCEP4",64,0)
 .. D SET^VALM10(IBLCT,IBQ,IBENT)
"RTN","IBCEP4",65,0)
 ;
"RTN","IBCEP4",66,0)
 I 'IBLCT D SET^VALM10(1,"No CARE UNITs Found"_$S('$G(IBINS):"",1:" for Insurance Co"))
"RTN","IBCEP4",67,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP4",68,0)
 Q
"RTN","IBCEP4",69,0)
 ;
"RTN","IBCEP4",70,0)
HELP ; -- help
"RTN","IBCEP4",71,0)
 ;
"RTN","IBCEP4",72,0)
 I $G(IBSLEV)=2 Q
"RTN","IBCEP4",73,0)
 ;
"RTN","IBCEP4",74,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP4",75,0)
 Q
"RTN","IBCEP4",76,0)
 ;
"RTN","IBCEP4",77,0)
EXIT ; -- exit
"RTN","IBCEP4",78,0)
 K IBFASTXT
"RTN","IBCEP4",79,0)
 D CLEAN^VALM10
"RTN","IBCEP4",80,0)
 K ^TMP("IBPRV_CU",$J),IBINS,IBALL
"RTN","IBCEP4",81,0)
 Q
"RTN","IBCEP4",82,0)
 ;
"RTN","IBCEP4",83,0)
EXPND ;
"RTN","IBCEP4",84,0)
 Q
"RTN","IBCEP4",85,0)
 ;
"RTN","IBCEP4",86,0)
SEL(IBDA,MANY) ; Select from care unit list
"RTN","IBCEP4",87,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP4",88,0)
 ;  ien's of the care unit selected (file 355.95).
"RTN","IBCEP4",89,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP4",90,0)
 N Z
"RTN","IBCEP4",91,0)
 S IBDA=0
"RTN","IBCEP4",92,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP4",93,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=+$G(^TMP("IBPRV_CU",$J,"ZIDX",Z))
"RTN","IBCEP4",94,0)
 Q
"RTN","IBCEP4",95,0)
 ;
"RTN","IBCEP4",96,0)
DISP(IBVAR,IBINS,IBPTYP,IBFT,IBCT,START,END) ; Set up display array for
"RTN","IBCEP4",97,0)
 ; provider id
"RTN","IBCEP4",98,0)
 N Z
"RTN","IBCEP4",99,0)
 S START=$S($G(START):START,1:1)
"RTN","IBCEP4",100,0)
 S (Z,END)=$G(START)
"RTN","IBCEP4",101,0)
 S @IBVAR@(START)="INSURANCE: "_$S(IBINS:$P($G(^DIC(36,+IBINS,0)),U),1:"ALL INSURANCE")
"RTN","IBCEP4",102,0)
 S @IBVAR@(START+1)="PROV TYPE: "_$$EXPAND^IBTRE(355.96,.06,IBPTYP)
"RTN","IBCEP4",103,0)
 S @IBVAR@(START+2)="FORM TYPE: "_$$EXPAND^IBTRE(355.96,.04,IBFT)
"RTN","IBCEP4",104,0)
 S @IBVAR@(START+3)="CARE TYPE: "_$$EXPAND^IBTRE(355.96,.05,IBCT)
"RTN","IBCEP4",105,0)
 S END=$G(START)+3
"RTN","IBCEP4",106,0)
 Q
"RTN","IBCEP4",107,0)
 ;
"RTN","IBCEP4",108,0)
CAREUOK(IBIFN,IBCU,IBTYPE,IBSEQ) ; Returns 1 if care unit is appropriate 
"RTN","IBCEP4",109,0)
 ; for bill based on provider type, care type, bill type and insurance co
"RTN","IBCEP4",110,0)
 ; IBIFN = ien of bill (file 399)
"RTN","IBCEP4",111,0)
 ; IBCU = the ien of the care unit (file 355.96)
"RTN","IBCEP4",112,0)
 ; IBTYPE = type of ID being checked (1=performing, 2=EMC)
"RTN","IBCEP4",113,0)
 ; IBSEQ = the COB seq being checked (1-3)
"RTN","IBCEP4",114,0)
 N Z,IBOK,IBINS,IBCT,IBFT,IBPTYP,IBRX
"RTN","IBCEP4",115,0)
 S IBOK=0
"RTN","IBCEP4",116,0)
 S IBINS=+$$FINDINS^IBCEF1(IBIFN,+IBSEQ),IBFT=$S($$FT^IBCEF(IBIFN)=2:2,1:1)
"RTN","IBCEP4",117,0)
 S IBPTYP=+$S(IBTYPE=1:$$PPTYP^IBCEP0(IBINS),1:$$EMCID^IBCEP())
"RTN","IBCEP4",118,0)
 S IBRX=$$ISRX^IBCEF1(IBIFN)
"RTN","IBCEP4",119,0)
 S IBCT=$S('IBRX:$S($$INPAT^IBCEF(IBIFN,1):1,1:2),1:3)
"RTN","IBCEP4",120,0)
 ;Check from most general to most specific
"RTN","IBCEP4",121,0)
 I $D(^IBA(355.96,"AD",IBINS,0,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",122,0)
 I 'IBRX,$D(^IBA(355.96,"AD",IBINS,IBFT,0,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",123,0)
 I $D(^IBA(355.96,"AD",IBINS,0,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",124,0)
 I $D(^IBA(355.96,"AD",IBINS,IBFT,IBCT,IBPTYP,IBCU)) S IBOK=1 G CAREOKQ
"RTN","IBCEP4",125,0)
 ;
"RTN","IBCEP4",126,0)
CAREOKQ Q IBOK
"RTN","IBCEP4",127,0)
 ;
"RTN","IBCEP5")
0^24^B48276203^B30947898
"RTN","IBCEP5",1,0)
IBCEP5 ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP5",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP5",3,0)
 ;
"RTN","IBCEP5",4,0)
EN ; -- main entry point for IBCE PRV MAINT
"RTN","IBCEP5",5,0)
 N IBPRV,IBINS
"RTN","IBCEP5",6,0)
EN1 ; Entrypoint for non-VA provider ID maintenance hook
"RTN","IBCEP5",7,0)
 N IBSLEV,DIR,Y,X,IBPRMPT,IBNVAFL,IBIF
"RTN","IBCEP5",8,0)
 K IBFASTXT
"RTN","IBCEP5",9,0)
 S IBIF="" I $G(IBPRV) S IBIF=$$GET1^DIQ(355.93,IBPRV,.02,"I")
"RTN","IBCEP5",10,0)
 D FULL^VALM1
"RTN","IBCEP5",11,0)
 S IBPRMPT=$S(IBIF=1:"LAB OR FACILITY",1:"PROVIDER")
"RTN","IBCEP5",12,0)
 S DIR(0)="SA^1:"_IBPRMPT_"'S OWN IDS;2:"_IBPRMPT_" IDS FURNISHED BY AN INSURANCE COMPANY"
"RTN","IBCEP5",13,0)
 S DIR("A")="SELECT SOURCE OF ID: ",DIR("B")=$P($P(DIR(0),":",2),";")
"RTN","IBCEP5",14,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5",15,0)
 I Y'>0 Q
"RTN","IBCEP5",16,0)
 S IBSLEV=+Y
"RTN","IBCEP5",17,0)
 D EN^VALM("IBCE PRVPRV MAINT")
"RTN","IBCEP5",18,0)
 Q
"RTN","IBCEP5",19,0)
 ;
"RTN","IBCEP5",20,0)
HDR ; -- header code
"RTN","IBCEP5",21,0)
 N IBC,Z,IBIF
"RTN","IBCEP5",22,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",23,0)
 K VALMHDR
"RTN","IBCEP5",24,0)
 S IBC=1
"RTN","IBCEP5",25,0)
 S IBPRMPT=$S(IBIF=1:"Lab or Facility",1:"Performing Provider")
"RTN","IBCEP5",26,0)
 S Z="** "_$S($G(IBSLEV)=1:IBPRMPT_"'s Own IDs (No Specific Insurance Co)",1:IBPRMPT_" IDs from Insurance Co")_" **"
"RTN","IBCEP5",27,0)
 S VALMHDR(IBC)=$J("",80-$L(Z)\2)_Z,IBC=IBC+1
"RTN","IBCEP5",28,0)
 I $G(IBPRV),'+IBIF S VALMHDR(IBC)="PROVIDER   : "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBPRV["VA(200":" (VA PROVIDER)",1:" (NON-VA PROVIDER)"),IBC=IBC+1
"RTN","IBCEP5",29,0)
 I $G(IBPRV),+IBIF S VALMHDR(IBC)="Provider: "_$$EXPAND^IBTRE(355.9,.01,IBPRV)_$S(IBIF=1:"(Non-VA Lab or Facility)",1:""),IBC=IBC+1
"RTN","IBCEP5",30,0)
 I $G(IBINS) D
"RTN","IBCEP5",31,0)
 . N PCF,PCDISP
"RTN","IBCEP5",32,0)
 . S PCF=$P($G(^DIC(36,+IBINS,3)),"^",13)
"RTN","IBCEP5",33,0)
 . S PCDISP=$S($G(IBSLEV)'=2!($G(IBPRV)'["VA(200,"):"",PCF="C":"(Child)",PCF="P":"(Parent)",1:"")
"RTN","IBCEP5",34,0)
 . S VALMHDR(IBC)=$S(IBIF:"Insurance Co: ",1:"INSURANCE CO: ")_$P($G(^DIC(36,+IBINS,0)),U)_" "_PCDISP
"RTN","IBCEP5",35,0)
 Q
"RTN","IBCEP5",36,0)
 ;
"RTN","IBCEP5",37,0)
INIT ; -- init variables and list array
"RTN","IBCEP5",38,0)
 N IBFILE,DIR,DIC,Y,X,DTOUT,DUOUT,IBIF,AGAIN
"RTN","IBCEP5",39,0)
 ;
"RTN","IBCEP5",40,0)
 K ^TMP("IB_EDITED_IDS",$J)  ; This will be to keep track of ID's edited during this session
"RTN","IBCEP5",41,0)
 S IBIF="" I $G(IBNPRV) S IBIF=$$GET1^DIQ(355.93,IBNPRV,.02,"I")
"RTN","IBCEP5",42,0)
 ;
"RTN","IBCEP5",43,0)
 ; Removing Care Unit under certain conditions
"RTN","IBCEP5",44,0)
 ; This list is used for multiple purposes and not all have Care Units Associated with them
"RTN","IBCEP5",45,0)
 ; Also, a different protocol menu is used with these
"RTN","IBCEP5",46,0)
 ; IBNPRV is a non VA provider
"RTN","IBCEP5",47,0)
 ; IBIF = 1 means this is a group or facility, not an individual.
"RTN","IBCEP5",48,0)
 ; 
"RTN","IBCEP5",49,0)
 I $G(IBNPRV),$G(IBIF)=1 D
"RTN","IBCEP5",50,0)
 . S VALM("TITLE")="Secondary Provider ID"
"RTN","IBCEP5",51,0)
 . K VALMDDF("CAREUNIT")
"RTN","IBCEP5",52,0)
 . I VALMCAP["Care Unit" S VALMCAP=$P(VALMCAP,"Care Unit")_"         "_$P(VALMCAP,"Care Unit",2)
"RTN","IBCEP5",53,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP5",54,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA LOF MAINT")
"RTN","IBCEP5",55,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP5",56,0)
 ;
"RTN","IBCEP5",57,0)
 I $G(IBPRV) S IBFILE="IBA(355.93,",IBPRV=+IBPRV_";"_IBFILE
"RTN","IBCEP5",58,0)
 I '$G(IBPRV) D  G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",59,0)
 . S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA provider: ",DIR("B")="V"
"RTN","IBCEP5",60,0)
 . D ^DIR K DIR
"RTN","IBCEP5",61,0)
 . I "NV"'[Y!(Y="") S VALMQUIT=1 Q
"RTN","IBCEP5",62,0)
 . S IBFILE=$S(Y="V":"VA(200,",1:"IBA(355.93,")
"RTN","IBCEP5",63,0)
 . S DIC=U_IBFILE,DIC(0)="AEMQ"_$S(IBFILE["355.93":"L",1:"")
"RTN","IBCEP5",64,0)
 . S DIC("A")="Select "_$S(IBFILE["355.93":"NON-",1:"")_"V.A. PROVIDER NAME: "
"RTN","IBCEP5",65,0)
 . S:IBFILE["355.93" DIC("DR")=".02////2;.03;.04"
"RTN","IBCEP5",66,0)
 . F  D  I $G(IBPRV)!$G(VALMQUIT) K DIC Q
"RTN","IBCEP5",67,0)
 .. D ^DIC
"RTN","IBCEP5",68,0)
 .. I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",69,0)
 .. I Y'>0 W !,*7,"This is a required response. Enter '^' to exit" Q
"RTN","IBCEP5",70,0)
 .. S IBPRV=+Y_";"_IBFILE
"RTN","IBCEP5",71,0)
 ;
"RTN","IBCEP5",72,0)
AGAIN I $G(IBSLEV)=2 D  G:$G(AGAIN) AGAIN G:$G(VALMQUIT) INITQ
"RTN","IBCEP5",73,0)
 . S AGAIN=0
"RTN","IBCEP5",74,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?",1)="Select an INSURANCE CO to display its provider ID's"
"RTN","IBCEP5",75,0)
 . D ^DIR K DIR
"RTN","IBCEP5",76,0)
 . I $D(DTOUT)!$D(DUOUT) S VALMQUIT=1 Q
"RTN","IBCEP5",77,0)
 . S IBINS=$S(Y>0:+Y,1:"NO")
"RTN","IBCEP5",78,0)
 . I $G(IBPRV)'["VA(200," Q    ; Only VA providers
"RTN","IBCEP5",79,0)
 . I $P($G(^DIC(36,+IBINS,3)),"^",13)="C" D  S AGAIN=1 Q
"RTN","IBCEP5",80,0)
 .. W !,*7,"This is a Child Insurance Company.  Editing IDs is not permitted."
"RTN","IBCEP5",81,0)
 ;
"RTN","IBCEP5",82,0)
 E  D
"RTN","IBCEP5",83,0)
 . S IBINS="NO"
"RTN","IBCEP5",84,0)
 D BLD
"RTN","IBCEP5",85,0)
INITQ Q
"RTN","IBCEP5",86,0)
 ;
"RTN","IBCEP5",87,0)
BLD ;  Build initial display
"RTN","IBCEP5",88,0)
 ; Assumes IBPRV = the variable ptr for prov id file (355.9)
"RTN","IBCEP5",89,0)
 ;         IBINS = the ien of the ins co or if null, ALL is assumed
"RTN","IBCEP5",90,0)
 ;         IBSLEV = 1 to display only provider default ids
"RTN","IBCEP5",91,0)
 ;                = 2 to display all provider/insurance co ids
"RTN","IBCEP5",92,0)
 N IB,IBLCT,IBCT,CT,PT,CU,INS,FT,Z,IBENT,IB1,IBIF
"RTN","IBCEP5",93,0)
 ;
"RTN","IBCEP5",94,0)
 S IBIF="" I $G(IBPRV)[355.93 S IBIF=$$GET1^DIQ(355.93,+IBPRV,.02,"I")
"RTN","IBCEP5",95,0)
 ;
"RTN","IBCEP5",96,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",97,0)
 K Z0
"RTN","IBCEP5",98,0)
 S (IBENT,IBCT,IBLCT)=0,INS="",IB1=1
"RTN","IBCEP5",99,0)
 F  S INS=$S($G(IBINS):IBINS,IBSLEV=1:"*ALL*",1:$O(^IBA(355.9,"AUNIQ",IBPRV,INS))) Q:$S(INS="":1,$G(IBINS)!(IBSLEV=1):$D(CU),1:0)  S CU="",IB1=0 F  S CU=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU)) Q:CU=""  D
"RTN","IBCEP5",100,0)
 . S FT="" F  S FT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT)) Q:FT=""  S CT="" F  S CT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT)) Q:CT=""  S PT=0 F  S PT=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT)) Q:'PT  D
"RTN","IBCEP5",101,0)
 .. S Z=0 F  S Z=$O(^IBA(355.9,"AUNIQ",IBPRV,INS,CU,FT,CT,PT,Z)) Q:'Z  S IB=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP5",102,0)
 ... S ^TMP("IBPRV_SORT",$J,$S(INS:$P($G(^DIC(36,+INS,0)),U)_" ",1:" ALL"),PT,FT,CT,CU,Z)=$P(IB,U,7)
"RTN","IBCEP5",103,0)
 ;
"RTN","IBCEP5",104,0)
 I IBSLEV=1,IBPRV["IBA(355.93",$P($G(^IBA(355.93,+IBPRV,0)),U,12)'="" S ^TMP("IBPRV_SORT",$J," ALL",+$$STLIC^IBCEP8(),0,0,"*N/A*",0)=$P(^IBA(355.93,+IBPRV,0),U,12)
"RTN","IBCEP5",105,0)
 S INS="" F  S INS=$O(^TMP("IBPRV_SORT",$J,INS)) Q:INS=""  D
"RTN","IBCEP5",106,0)
 . I '$G(IBINS),'IBIF D:IBLCT SET^VALM10(IBLCT+1," ",IBCT) S IBLCT=$S(IBLCT:IBLCT+2,1:1) D SET^VALM10(IBLCT,"INSURANCE CO: "_$S($E(INS)=" ":"ALL INSURANCE",1:INS),$S(IBCT:IBCT,1:1))
"RTN","IBCEP5",107,0)
 . S PT=""
"RTN","IBCEP5",108,0)
 . F  S PT=$O(^TMP("IBPRV_SORT",$J,INS,PT)) Q:PT=""  S FT="" F  S FT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT)) Q:FT=""  S CT="" F  S CT=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT)) Q:CT=""  D
"RTN","IBCEP5",109,0)
 .. S CU="" F  S CU=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU)) Q:CU=""  S Z="" F  S Z=$O(^TMP("IBPRV_SORT",$J,INS,PT,FT,CT,CU,Z)) Q:Z=""  S IB=$G(^(Z)) D
"RTN","IBCEP5",110,0)
 ... S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",111,0)
 ... S Z0=$E(IBCT_"     ",1,4)_" "_$E($$EXPAND^IBTRE(355.9,.06,PT)_$S(PT=$$STLIC^IBCEP8():"("_$P($G(^DIC(5,+$P($G(^IBA(355.93,+IBPRV,0)),U,7),0)),U,2)_")",1:"")_$J("",20),1,20)_"  "_$S(FT=1:"UB-92",FT=2:"HCFA ",1:"BOTH ")
"RTN","IBCEP5",112,0)
 ... S Z0=Z0_"  "_$E($S(CT=3:"RX",CT=1:"INPT",CT=2:"OUTPT",1:"INPT/OUTPT")_$J("",11),1,11)
"RTN","IBCEP5",113,0)
 ... S Z0=Z0_"  "_$E($S(CU'="*N/A*":$P($G(^IBA(355.95,+$G(^IBA(355.96,CU,0)),0)),U),1:"")_$J("",15),1,15) I Z0["MEDICINE" X "*"
"RTN","IBCEP5",114,0)
 ... D SET^VALM10(IBLCT,Z0_" "_IB,IBCT)
"RTN","IBCEP5",115,0)
 ... S ^TMP("IBPRV_",$J,"ZIDX",IBCT)=$S(Z'=0:Z,1:"LIC^"_IBPRV)
"RTN","IBCEP5",116,0)
 I IBSLEV=1,IBPRV["VA(200" D
"RTN","IBCEP5",117,0)
 . N IBP
"RTN","IBCEP5",118,0)
 . S IBP=+IBPRV
"RTN","IBCEP5",119,0)
 . Q:'$$GETLIC^IBCEP5D(.IBP)
"RTN","IBCEP5",120,0)
 . I IBCT S IBLCT=IBLCT+1 D SET^VALM10(IBLCT," ",IBCT)
"RTN","IBCEP5",121,0)
 . S Z=0 F  S Z=$O(IBP(Z)) Q:'Z  D
"RTN","IBCEP5",122,0)
 .. S IBLCT=IBLCT+1,IBCT=IBCT+1
"RTN","IBCEP5",123,0)
 .. D SET^VALM10(IBLCT,$E(IBCT_"     ",1,4)_$E($P($G(^DIC(5,+Z,0)),U,2)_" STATE LICENSE #"_$J("",20),1,20)_$J("",39)_IBP(Z),IBCT)
"RTN","IBCEP5",124,0)
 .. S ^TMP("IBPRV_",$J,"ZIDX",IBCT)="LIC^"_+IBPRV
"RTN","IBCEP5",125,0)
 K ^TMP("IBPRV_SORT",$J)
"RTN","IBCEP5",126,0)
 ;
"RTN","IBCEP5",127,0)
 I IBLCT=0 D  G BLDQ ; No entries for ins co selected
"RTN","IBCEP5",128,0)
 . D SET^VALM10(1," ")
"RTN","IBCEP5",129,0)
 . D SET^VALM10(2,"  No ID's found for provider "_$S('$G(IBINS):"",1:"and selected insurance co"))
"RTN","IBCEP5",130,0)
 . S IBLCT=2
"RTN","IBCEP5",131,0)
 ;
"RTN","IBCEP5",132,0)
BLDQ K VALMCNT,VALMBG
"RTN","IBCEP5",133,0)
 S VALMCNT=IBLCT,VALMBG=1
"RTN","IBCEP5",134,0)
 Q
"RTN","IBCEP5",135,0)
 ;
"RTN","IBCEP5",136,0)
HELP ; -- help code
"RTN","IBCEP5",137,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEP5",138,0)
 Q
"RTN","IBCEP5",139,0)
 ;
"RTN","IBCEP5",140,0)
EXIT ; -- exit code
"RTN","IBCEP5",141,0)
 K IBFASTXT
"RTN","IBCEP5",142,0)
 D COPYPROV^IBCEP5A(IBINS)
"RTN","IBCEP5",143,0)
 K IBPRV
"RTN","IBCEP5",144,0)
 D CLEAN^VALM10
"RTN","IBCEP5",145,0)
 K ^TMP("IBPRV_",$J),^TMP("IBPRV_SORT",$J),IBINS,IBALL
"RTN","IBCEP5",146,0)
 Q
"RTN","IBCEP5",147,0)
 ;
"RTN","IBCEP5",148,0)
EXPND ; -- expand code
"RTN","IBCEP5",149,0)
 Q
"RTN","IBCEP5",150,0)
 ;
"RTN","IBCEP5",151,0)
SEL(IBDA,MANY) ; Select from provider id list
"RTN","IBCEP5",152,0)
 ; IBDA is passed by reference and IBDA(1) returned containing
"RTN","IBCEP5",153,0)
 ;  ien's of the provider id records selected (file 355.9).
"RTN","IBCEP5",154,0)
 ; If > 1 entry can be selected, MANY is set to 1
"RTN","IBCEP5",155,0)
 N Z
"RTN","IBCEP5",156,0)
 S IBDA=0
"RTN","IBCEP5",157,0)
 D EN^VALM2($G(XQORNOD(0)),$S($G(MANY):"",1:"S"))
"RTN","IBCEP5",158,0)
 S Z=0 F  S Z=$O(VALMY(Z)) Q:'Z  S IBDA=IBDA+1,IBDA(IBDA)=$G(^TMP("IBPRV_",$J,"ZIDX",Z))
"RTN","IBCEP5",159,0)
 Q
"RTN","IBCEP5",160,0)
 ;
"RTN","IBCEP5A")
0^25^B24226544^B17570421
"RTN","IBCEP5A",1,0)
IBCEP5A ;ALB/TMP - EDI UTILITIES for provider ID ;29-SEP-00
"RTN","IBCEP5A",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP5A",3,0)
 ;
"RTN","IBCEP5A",4,0)
NEW(IBPRV,IBINS) ; Add new prov id
"RTN","IBCEP5A",5,0)
 D FULL^VALM1
"RTN","IBCEP5A",6,0)
 N DIC,DIR,X,Y,DA,DO,DD,DLAYGO,IBQ,IBIEN,IBPRV0,DTOUT,DUOUT,IBIF,IBSIC
"RTN","IBCEP5A",7,0)
 S IBQ=0,IBPRV0=$S(IBPRV'["355.93":"",1:$G(^IBA(355.93,+IBPRV,0)))
"RTN","IBCEP5A",8,0)
 ;
"RTN","IBCEP5A",9,0)
 ; Only 5 secondary providers allowed for lab/facilities
"RTN","IBCEP5A",10,0)
 S IBIF=$P(IBPRV0,U,2)
"RTN","IBCEP5A",11,0)
 S IBSIC=$O(^TMP("IBPRV_",$J,"ZIDX",""),-1)
"RTN","IBCEP5A",12,0)
 I IBIF=1,IBSIC>4 D  G NEWQ
"RTN","IBCEP5A",13,0)
 . S DIR(0)="EA",DIR("A",1)="A maximum of 5 secondary IDs are allowed for a lab/facility.",DIR("A")="PRESS ENTER TO CONTINUE " D ^DIR K DIR W !
"RTN","IBCEP5A",14,0)
 ;
"RTN","IBCEP5A",15,0)
 S DIR(0)="PAr^355.97:AEMQ"
"RTN","IBCEP5A",16,0)
 S DIR("A")="Enter Provider ID Qualifier: "
"RTN","IBCEP5A",17,0)
 S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP5A",18,0)
 ;
"RTN","IBCEP5A",19,0)
 ;S DIR("S")=$S($G(IBINS):"I ""04""[+$P($G(^(0)),U,2)",1:"I +$P($G(^(1)),U,7)&'$G(^(1))&$S($P(IBPRV0,U,2)'=1:1,1:$P(^(0),U,3)'=""SY"")")
"RTN","IBCEP5A",20,0)
 I $G(IBINS) D
"RTN","IBCEP5A",21,0)
 . I $P(IBPRV0,U,2)=1 S DIR("S")="I $$LFINS^IBCEPU(Y)" Q   ; Lab or Facility ID provided by ins
"RTN","IBCEP5A",22,0)
 . S DIR("S")="I $$RAINS^IBCEPU(Y)" Q   ; Non VA Ind provided by ins
"RTN","IBCEP5A",23,0)
 I '$G(IBINS) D
"RTN","IBCEP5A",24,0)
 . I $P(IBPRV0,U,2)=1 D  Q
"RTN","IBCEP5A",25,0)
 .. I IBPRV["VA(200," S DIR("S")="I $$LFINS^IBCEPU(Y)" Q   ; VA facility own IDS
"RTN","IBCEP5A",26,0)
 .. S DIR("S")="I $$NVALFOWN^IBCEPU(Y)" Q   ; Non -VA facility own
"RTN","IBCEP5A",27,0)
 . S DIR("S")="I $$RAOWN^IBCEPU(Y)"   ; FACILITY/GROUP;PROVIDER'S OWN PERSONAL NUMBER
"RTN","IBCEP5A",28,0)
 ;
"RTN","IBCEP5A",29,0)
 D ^DIR K DIR
"RTN","IBCEP5A",30,0)
 I $D(DTOUT)!$D(DUOUT) S IBQ=1 G NEWQ
"RTN","IBCEP5A",31,0)
 I $P($G(^IBE(355.97,+Y,1)),U,3),IBPRV["355.93" D  G NEWQ
"RTN","IBCEP5A",32,0)
 . K DIE,DR
"RTN","IBCEP5A",33,0)
 . S DIE="^IBA(355.93,",DA=+IBPRV
"RTN","IBCEP5A",34,0)
 . S DR="S Y=""@5"";@1;.07;@5;I $P($G(^IBA(355.93,DA,0)),U,7)'="""" S Y=""@2"";W !!,""YOU MUST HAVE A STATE TO USE LICENSE # AS AN ID!!"",! S Y=""@1"";@2;W !!,""LICENSING STATE: "",$P($G(^DIC(5,+$P($G(^IBA(355.93,DA,0)),U,7),0)),U,2);.12"
"RTN","IBCEP5A",35,0)
 . D ^DIE
"RTN","IBCEP5A",36,0)
 . I '$D(Y) D BLD^IBCEP5
"RTN","IBCEP5A",37,0)
 K IB3559(.06)
"RTN","IBCEP5A",38,0)
 S IB3559(.06)=+Y
"RTN","IBCEP5A",39,0)
 ;
"RTN","IBCEP5A",40,0)
 I $G(IBINS)'="NO",'$G(IBINS),'$P($G(^IBE(355.97,IB3559(.06),1)),U,8) D  G:IBQ NEWQ
"RTN","IBCEP5A",41,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select the INSURANCE CO that is furnishing you with the provider ID"
"RTN","IBCEP5A",42,0)
 . D ^DIR K DIR
"RTN","IBCEP5A",43,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQ=1 Q
"RTN","IBCEP5A",44,0)
 . S IBINS=$S(Y>0:+Y,1:"")
"RTN","IBCEP5A",45,0)
 S IB3559(.02)=$S($G(IBINS):IBINS,1:"*ALL*")
"RTN","IBCEP5A",46,0)
 ;
"RTN","IBCEP5A",47,0)
 I '$P($G(^IBE(355.97,IB3559(.06),1)),U,8) D  G:'IBIEN NEWQ
"RTN","IBCEP5A",48,0)
 . S DIC(0)="L",DLAYGO=355.9,DIC="^IBA(355.9,",X=IBPRV
"RTN","IBCEP5A",49,0)
 . S:$G(IBINS) DIC("DR")=".02////"_IBINS
"RTN","IBCEP5A",50,0)
 . D FILE^DICN K DIC,DLAYGO,DD,DO
"RTN","IBCEP5A",51,0)
 . I Y'>0!$D(DUOUT)!$D(DTOUT) S IBIEN=0 Q
"RTN","IBCEP5A",52,0)
 . S IBIEN=+Y
"RTN","IBCEP5A",53,0)
 . D NEWID^IBCEP5B(355.9,IB3559(.02),IBPRV,IB3559(.06),IBIEN,1)
"RTN","IBCEP5A",54,0)
 ;
"RTN","IBCEP5A",55,0)
 E  D  ; Provider-specific id stored outside of billing
"RTN","IBCEP5A",56,0)
 . N DIR,X,Y,Z
"RTN","IBCEP5A",57,0)
 . ; State License # is stored in file 200
"RTN","IBCEP5A",58,0)
 . ; DEA# may not be edited in IB
"RTN","IBCEP5A",59,0)
 . S Z=$G(^IBE(355.97,IB3559(.06),1))
"RTN","IBCEP5A",60,0)
 . I +Z D  Q
"RTN","IBCEP5A",61,0)
 .. W ! S DIR(0)="EA",DIR("A",1)="DEA # CANNOT BE EDITED WITHIN THE BILLING SOFTWARE",DIR("A")="PRESS ENTER TO CONTINUE " D ^DIR K DIR W !
"RTN","IBCEP5A",62,0)
 . I $P(Z,U,3) D
"RTN","IBCEP5A",63,0)
 .. D PRVED(+IBPRV)
"RTN","IBCEP5A",64,0)
 D BLD^IBCEP5
"RTN","IBCEP5A",65,0)
NEWQ K VALMBCK
"RTN","IBCEP5A",66,0)
 S VALMBCK="R"
"RTN","IBCEP5A",67,0)
 Q
"RTN","IBCEP5A",68,0)
 ;
"RTN","IBCEP5A",69,0)
DEL1 ; Delete Provider specific ID's
"RTN","IBCEP5A",70,0)
 N IBDA,DA,DIE,DR
"RTN","IBCEP5A",71,0)
 D FULL^VALM1
"RTN","IBCEP5A",72,0)
 D SEL^IBCEP5(.IBDA)
"RTN","IBCEP5A",73,0)
 G:'$O(IBDA(0)) DEL1Q
"RTN","IBCEP5A",74,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP5A",75,0)
 G:'IBDA&($E($P(IBDA,U),1,3)'="LIC") DEL1Q
"RTN","IBCEP5A",76,0)
 I IBDA>0 D DEL^IBCEP5B(355.9,IBDA,""),BLD^IBCEP5
"RTN","IBCEP5A",77,0)
 E  D  ; check for state license
"RTN","IBCEP5A",78,0)
 . Q:$E($P(IBDA,U),1,3)'="LIC"
"RTN","IBCEP5A",79,0)
 . I $P(IBDA,U,2)["IBA(355.93" D
"RTN","IBCEP5A",80,0)
 .. S DA=+$P(IBDA,U,2),DR=".12///@",DIE="^IBA(355.93," D ^DIE
"RTN","IBCEP5A",81,0)
 . E  D
"RTN","IBCEP5A",82,0)
 .. D PRVED(+$P(IBDA,U,2))
"RTN","IBCEP5A",83,0)
 . D BLD^IBCEP5
"RTN","IBCEP5A",84,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP5A",85,0)
 Q
"RTN","IBCEP5A",86,0)
 ;
"RTN","IBCEP5A",87,0)
CHG1 ; Edit Provider ID's
"RTN","IBCEP5A",88,0)
 N IBDA,DIR,DA,DIE,DR,Z
"RTN","IBCEP5A",89,0)
 D FULL^VALM1
"RTN","IBCEP5A",90,0)
 D SEL^IBCEP5(.IBDA)
"RTN","IBCEP5A",91,0)
 G:'$O(IBDA(0)) CHG1Q
"RTN","IBCEP5A",92,0)
 S IBDA=+$O(IBDA("")),IBDA=$G(IBDA(IBDA))
"RTN","IBCEP5A",93,0)
 I IBDA>0 D
"RTN","IBCEP5A",94,0)
 . S Z=$G(^IBA(355.97,+$P($G(^IBA(355.96,+$P($G(^IBA(355.9,IBDA,0)),U,6),0)),U,6),1))
"RTN","IBCEP5A",95,0)
 . I $P(Z,U)!$P(Z,U,2)!$P(Z,U,4) D  G CHG1Q
"RTN","IBCEP5A",96,0)
 .. S DIR("A",1)="SORRY, YOU ARE NOT ALLOWED TO EDIT THIS TYPE OF PROVIDER ID # HERE",DIR("A")="PRESS ENTER TO CONTINUE"
"RTN","IBCEP5A",97,0)
 .. S DIR(0)="AE" W ! D ^DIR K DIR W !
"RTN","IBCEP5A",98,0)
 . D CHG^IBCEP5B(355.9,IBDA),BLD^IBCEP5
"RTN","IBCEP5A",99,0)
 ; check for state license
"RTN","IBCEP5A",100,0)
 E  D
"RTN","IBCEP5A",101,0)
 . Q:$E($P(IBDA,U),1,3)'="LIC"
"RTN","IBCEP5A",102,0)
 . I $P(IBDA,U,2)["IBA(355.93" D
"RTN","IBCEP5A",103,0)
 .. S DA=+$P(IBDA,U,2),DIE="^IBA(355.93,"
"RTN","IBCEP5A",104,0)
 .. S DR="S Y=""@5"";@1;.07;@5;I $P($G(^IBA(355.93,DA,0)),U,7)'="""" S Y=""@2"";W !,""YOU MUST HAVE A STATE TO USE LICENSE # AS AN ID!!"" S Y=""@1"";@2;W !!,""LICENSING STATE: "",$P($G(^DIC(5,+$P($G(^IBA(355.93,DA,0)),U,7),0)),U,2);.12"
"RTN","IBCEP5A",105,0)
 .. D ^DIE
"RTN","IBCEP5A",106,0)
 . E  D
"RTN","IBCEP5A",107,0)
 .. D PRVED(+$P(IBDA,U,2))
"RTN","IBCEP5A",108,0)
 . D BLD^IBCEP5
"RTN","IBCEP5A",109,0)
CHG1Q S VALMBCK="R"
"RTN","IBCEP5A",110,0)
 Q
"RTN","IBCEP5A",111,0)
 ;
"RTN","IBCEP5A",112,0)
PRVED(IBPRV) ; Maintain license #'s for VA provider ien IBPRV
"RTN","IBCEP5A",113,0)
 S IBPRV=IBPRV_";VA(200,"
"RTN","IBCEP5A",114,0)
 D EN^IBCEP5D
"RTN","IBCEP5A",115,0)
 Q
"RTN","IBCEP5A",116,0)
 ;
"RTN","IBCEP5A",117,0)
COPYPROV(IBINS) ; Check if any ID's were edited and this is a parent insurance company
"RTN","IBCEP5A",118,0)
 ; IBINS = IEN into Insurance co file
"RTN","IBCEP5A",119,0)
 ; 
"RTN","IBCEP5A",120,0)
 Q:'$D(^TMP("IB_EDITED_IDS",$J))
"RTN","IBCEP5A",121,0)
 K ^TMP("IB_EDITED_IDS",$J)
"RTN","IBCEP5A",122,0)
 D COPY^IBCEPCID(IBINS)
"RTN","IBCEP5A",123,0)
 Q
"RTN","IBCEP5A",124,0)
 ;
"RTN","IBCEP5A",125,0)
 ; Get the next number so that the edits can be replicated in order for other providers/insurance companies
"RTN","IBCEP5A",126,0)
NEXTONE() ;
"RTN","IBCEP5A",127,0)
 Q $O(^TMP("IB_EDITED_IDS",$J,""),-1)+1
"RTN","IBCEP5B")
0^26^B37504139^B72371827
"RTN","IBCEP5B",1,0)
IBCEP5B ;ALB/TMP - EDI UTILITIES for prov ID ;29-SEP-00
"RTN","IBCEP5B",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320**;21-MAR-94
"RTN","IBCEP5B",3,0)
 ;
"RTN","IBCEP5B",4,0)
NEWID(IBFILE,IBINS,IBPRV,IBPTYP,IBIEN,IBF) ; Generic add prov id
"RTN","IBCEP5B",5,0)
 ; at both prov (file 355.9) and ins co levels (355.91)
"RTN","IBCEP5B",6,0)
 ; IBFILE = 355.9 or 355.91 - the file being edited
"RTN","IBCEP5B",7,0)
 ; IBINS = ien of ins co (36) or *ALL* for all ins co
"RTN","IBCEP5B",8,0)
 ; IBPRV = vp ien of billing prov
"RTN","IBCEP5B",9,0)
 ; IBPTYP = ien of prov type (file 355.96)
"RTN","IBCEP5B",10,0)
 ; IBIEN = ien of entry being added (req'd)
"RTN","IBCEP5B",11,0)
 ; IBF = 1 if deleting from ins-related options, "" from prov-related
"RTN","IBCEP5B",12,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,DTOUT,DUOUT,IBQ,IBCUND,IB3559,IB35591,Q,IBDR,IBID,AFT
"RTN","IBCEP5B",13,0)
 S IB35591(.03)="",IBPTYP=$G(IBPTYP)
"RTN","IBCEP5B",14,0)
 F Z=.04,.05,.03 D  G:Z="" NEWQ
"RTN","IBCEP5B",15,0)
 . I $S(Z'=.03:1,1:$S('$G(IBINS):0,1:$G(IBCUND))) D  Q:Z=""
"RTN","IBCEP5B",16,0)
 .. N DA
"RTN","IBCEP5B",17,0)
 .. I Z'=.03 S DIR(0)=IBFILE_","_Z
"RTN","IBCEP5B",18,0)
 .. I Z=.03 D
"RTN","IBCEP5B",19,0)
 ... S DIR(0)="PAO^355.95:AEMQ"
"RTN","IBCEP5B",20,0)
 ... S DIR("S")="I $O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_","_$G(IB3559(.05))_","_IBPTYP_",0))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,"_$G(IB3559(.04))_",0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",21,0)
 ... S DIR("S")=DIR("S")_"!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,"_$G(IB3559(.05))_","_IBPTYP_",0)))!($O(^IBA(355.96,""AUNIQ"","_IBINS_",Y,0,0,"_IBPTYP_",0)))"
"RTN","IBCEP5B",22,0)
 ... S DIR("?",1)="Care unit describes areas of service and is assigned by the payer, if",DIR("?")="  applicable.  Use Care Unit Maintenance to add or modify care units."
"RTN","IBCEP5B",23,0)
 .. ;
"RTN","IBCEP5B",24,0)
 .. I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5B",25,0)
 ... N AFT
"RTN","IBCEP5B",26,0)
 ... S AFT=$$GET1^DIQ(355.97,IBPTYP,.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5B",27,0)
 ... I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_Y_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q
"RTN","IBCEP5B",28,0)
 ... I AFT="P" S $P(DIR(0),U,3)="K:Y'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS/HCFA type) forms" Q
"RTN","IBCEP5B",29,0)
 ... I AFT="I" S $P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5B",30,0)
 .. ;
"RTN","IBCEP5B",31,0)
 .. S DA=0
"RTN","IBCEP5B",32,0)
 .. I Z=.04,$P($G(^IBE(355.97,+IBPTYP,0)),U,3)="1A" D SETDIR(.DIR)
"RTN","IBCEP5B",33,0)
 .. D ^DIR K DIR
"RTN","IBCEP5B",34,0)
 .. I $D(DTOUT)!$D(DUOUT) S Z="" K IB3559,IB35591 Q
"RTN","IBCEP5B",35,0)
 .. S IB3559(Z)=$S(Z'=.03:$P(Y,U),1:$S($P(Y,U)>0:$P(Y,U),1:"*N/A*"))
"RTN","IBCEP5B",36,0)
 . I Z=.05 D
"RTN","IBCEP5B",37,0)
 .. S IBCUND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IB3559(.04),IB3559(.05),IB3559(.05)=3)
"RTN","IBCEP5B",38,0)
 .. S:'IBCUND!($G(IB3559(.03))=0) IB3559(.03)="*N/A*"
"RTN","IBCEP5B",39,0)
 .. I '$G(IBINS) S IBINS="*ALL*"
"RTN","IBCEP5B",40,0)
 . I Z=.03 D CAREUN^IBCEP5C
"RTN","IBCEP5B",41,0)
 ;
"RTN","IBCEP5B",42,0)
 I $D(IB3559) D
"RTN","IBCEP5B",43,0)
 . N Q,Z2,Z3,Z4,Z5,Z6,IBLAST,IBOK,DIR,Y,X
"RTN","IBCEP5B",44,0)
 . S IBLAST=0
"RTN","IBCEP5B",45,0)
 . D DISP^IBCEP4("Q",IBINS,IBPTYP,IB3559(.04),IB3559(.05),1)
"RTN","IBCEP5B",46,0)
 . W !!,"THE FOLLOWING WAS CHOSEN:"
"RTN","IBCEP5B",47,0)
 . S Q=0 F  S Q=$O(Q(Q)) Q:'Q  W !,?3,Q(Q)
"RTN","IBCEP5B",48,0)
 . I IBCUND W !,?3,"CARE UNIT: "_$$EXPAND^IBTRE(355.96,.01,IB3559(.03))
"RTN","IBCEP5B",49,0)
 . S Z2=IBINS,Z3=IB35591(.03),Z4=IB3559(.04),Z5=IB3559(.05),Z6=IBPTYP
"RTN","IBCEP5B",50,0)
 . S IBOK=1
"RTN","IBCEP5B",51,0)
 . ; If both forms, chk for specific
"RTN","IBCEP5B",52,0)
 . I 'Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",53,0)
 . ; If specific form, chk for all
"RTN","IBCEP5B",54,0)
 . I IBOK,Z4 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_4_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",55,0)
 . ; If both care types, chk for specific
"RTN","IBCEP5B",56,0)
 . I IBOK,'Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,1,$G(IBFILE)=355.91)
"RTN","IBCEP5B",57,0)
 . ; If specific care type, chk for all
"RTN","IBCEP5B",58,0)
 . I IBOK,Z5 S IBOK=$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_5_U_Z2_U_Z3_U_Z4_U_Z5_U_Z6,0,$G(IBFILE)=355.91)
"RTN","IBCEP5B",59,0)
 . I 'IBOK K IB3559,IB35591
"RTN","IBCEP5B",60,0)
 . I IBOK D
"RTN","IBCEP5B",61,0)
 .. S DIR(0)=IBFILE_",.07"
"RTN","IBCEP5B",62,0)
 .. W ! D ^DIR K DIR
"RTN","IBCEP5B",63,0)
 .. S IBID=Y
"RTN","IBCEP5B",64,0)
 .. I $D(DTOUT)!$D(DUOUT) K IB3559,IB35591 S IBOK=0 Q
"RTN","IBCEP5B",65,0)
 .. S IBDR=$S(IBFILE=355.9:$S($G(IBINS):".02////"_IBINS_";",1:""),1:"")_$S($G(IBCUND):".03////"_$S(IB35591(.03):IB35591(.03),1:"*N/A*")_";",1:"")_".04////"_IB3559(.04)_";.05////"_IB3559(.05)_";.06////"_IBPTYP_$S(IBID'="":";.07////"_IBID,1:"")
"RTN","IBCEP5B",66,0)
 .. ;
"RTN","IBCEP5B",67,0)
 .. I $G(IBIEN) D
"RTN","IBCEP5B",68,0)
 ... S DR=IBDR,DA=IBIEN,DIE="^IBA("_IBFILE_","
"RTN","IBCEP5B",69,0)
 ... D ^DIE
"RTN","IBCEP5B",70,0)
 ... I $D(Y) K IB3559,IB35591 S IBOK=0
"RTN","IBCEP5B",71,0)
 ;
"RTN","IBCEP5B",72,0)
NEWQ ;
"RTN","IBCEP5B",73,0)
 I '$D(IB3559),$G(IBIEN) D  Q
"RTN","IBCEP5B",74,0)
 . N DIR,DIK,DA,X,Y
"RTN","IBCEP5B",75,0)
 . S DA=IBIEN,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5B",76,0)
 . S DIR(0)="EA",DIR("A",1)=$S('$G(IBOK):"",1:"PROBLEM ENCOUNTERED FILING THE RECORD - ")_"RECORD NOT ADDED",DIR("A")="PRESS ENTER to continue " W ! D ^DIR K DIR
"RTN","IBCEP5B",77,0)
 ;
"RTN","IBCEP5B",78,0)
 ; Save this for Copy ID actions
"RTN","IBCEP5B",79,0)
 I $G(IBIEN) D
"RTN","IBCEP5B",80,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBIEN,0)),U)["VA(200,")) D
"RTN","IBCEP5B",81,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",82,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBIEN_U_"ADD"_U_IBFILE
"RTN","IBCEP5B",83,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBIEN,0))
"RTN","IBCEP5B",84,0)
 Q
"RTN","IBCEP5B",85,0)
 ;
"RTN","IBCEP5B",86,0)
CHG(IBFILE,IBDA) ; Generic call - edit prov id
"RTN","IBCEP5B",87,0)
 ; IBFILE = 355.9 or 355.91 (file being edited)
"RTN","IBCEP5B",88,0)
 ; IBDA = ien in file
"RTN","IBCEP5B",89,0)
 ;
"RTN","IBCEP5B",90,0)
 N DIR,DIE,DA,DR,IBCUCHK,IBOK,IB0,IBOLD,X,Y,Z
"RTN","IBCEP5B",91,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T  W !,"Attempting to lock record"
"RTN","IBCEP5B",92,0)
 I '$T D  G CHGQ
"RTN","IBCEP5B",93,0)
 . W !,"RECORD LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5B",94,0)
 . D ENTER(.DIR)
"RTN","IBCEP5B",95,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5B",96,0)
 S (IB0,IBOLD)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5B",97,0)
 G:IB0="" CHGQ
"RTN","IBCEP5B",98,0)
 F Z=.04,.05,.06,.03 S IBOK=$$EDIT(IBFILE,Z,IB0,IBOLD,IBDA,0) S:IBOK="*ALL*" IBOK="" Q:$P(IBOK,U,2)  S $P(IB0,U,Z*100)=$P(IBOK,U)
"RTN","IBCEP5B",99,0)
 I $P(IBOK,U,2) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",100,0)
 S IBOK=$$EDIT(IBFILE,.07,IB0,IBOLD,IBDA,1)
"RTN","IBCEP5B",101,0)
 I '$P(IBOK,U,2) S $P(IB0,U,7)=$P(IBOK,U)
"RTN","IBCEP5B",102,0)
 I $P(IBOK,U,2)!(IB0=IBOLD) S DIR(0)="EA",DIR("A")="NO CHANGES MADE, PRESS ENTER TO CONTINUE: " W ! D ^DIR K DIR W ! G CHGQ
"RTN","IBCEP5B",103,0)
 S IBCUCHK=$$CUCHK^IBCEP5C(IBDA,IB0) G:IBCUCHK CHGQ
"RTN","IBCEP5B",104,0)
 S DR=""
"RTN","IBCEP5B",105,0)
 F Z=2,4:1:7,3 I $P(IB0,U,Z)'=$P(IBOLD,U,Z) S DR=DR_$S(DR'="":";",1:"")_(Z/100)_"///"_$S($P(IB0,U,Z)'="@":"/",1:"")_$P(IB0,U,Z)
"RTN","IBCEP5B",106,0)
 I DR'="" D
"RTN","IBCEP5B",107,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P(IB0,U)["VA(200,")) D
"RTN","IBCEP5B",108,0)
 .. N NEXTONE
"RTN","IBCEP5B",109,0)
 .. S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5B",110,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_IBFILE_U_IBDA
"RTN","IBCEP5B",111,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=IBOLD
"RTN","IBCEP5B",112,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IB0
"RTN","IBCEP5B",113,0)
 . S DIE="^IBA("_IBFILE_",",DA=IBDA D ^DIE
"RTN","IBCEP5B",114,0)
CHGQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5B",115,0)
 Q
"RTN","IBCEP5B",116,0)
 ;
"RTN","IBCEP5B",117,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5B",118,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5B",119,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5B",120,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5B",121,0)
 ;       from prov-related options
"RTN","IBCEP5B",122,0)
 D DEL^IBCEP5C(IBFILE,IBDA,$G(IBF))
"RTN","IBCEP5B",123,0)
 Q
"RTN","IBCEP5B",124,0)
 ;
"RTN","IBCEP5B",125,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5B",126,0)
 Q $$EDIT^IBCEP5D($G(IBFILE),$G(IBFLD),$G(IB0),$G(IBOLD),$G(IBIEN),$G(IBCK1))
"RTN","IBCEP5B",127,0)
 ;
"RTN","IBCEP5B",128,0)
SETDIR(DIR) ; Sets dir for BLUE CROSS only UB92 form type
"RTN","IBCEP5B",129,0)
 S DIR("B")="UB92",$P(DIR(0),U,3)="K:Y'=1 X",DIR("?")="ONLY UB92 FORM TYPE IS VALID FOR BLUE CROSS ID"
"RTN","IBCEP5B",130,0)
 Q
"RTN","IBCEP5B",131,0)
 ;
"RTN","IBCEP5B",132,0)
ENTER(DIR) ;
"RTN","IBCEP5B",133,0)
 S DIR(0)="EA",DIR("A")="PRESS ENTER TO CONTINUE: "
"RTN","IBCEP5B",134,0)
 Q
"RTN","IBCEP5C")
0^59^B43626685^B41166821
"RTN","IBCEP5C",1,0)
IBCEP5C ;ALB/TMP - EDI UTILITIES for provider ID ;02-NOV-00
"RTN","IBCEP5C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,239,232,320**;21-MAR-94
"RTN","IBCEP5C",3,0)
 ;
"RTN","IBCEP5C",4,0)
COMBOK(IBFILE,IBDAT,IBALL,IBF) ; Generic ask if conflict, should id rec still
"RTN","IBCEP5C",5,0)
 ;  be added?
"RTN","IBCEP5C",6,0)
 ; IBFILE = 355.9 or 355.91 for the file being edited
"RTN","IBCEP5C",7,0)
 ; IBDAT = var ptr prov ien (355.9) ^ pc to check ^
"RTN","IBCEP5C",8,0)
 ;           ins co ien or *ALL* ^ care unit or *N/A* ^
"RTN","IBCEP5C",9,0)
 ;           form type code ^ care type code ^ prov id type ptr
"RTN","IBCEP5C",10,0)
 ; IBALL = flag:
"RTN","IBCEP5C",11,0)
 ;   0 = Individual entry selected - check for existing ALL entry
"RTN","IBCEP5C",12,0)
 ;   1 = 'ALL' selected - check for existing individual ones
"RTN","IBCEP5C",13,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",14,0)
 ;       from provider-related options
"RTN","IBCEP5C",15,0)
 ; Returns 1 if ok to continue, 0 if not
"RTN","IBCEP5C",16,0)
 ;
"RTN","IBCEP5C",17,0)
 N X,Y,Q,DIR,Z,IBD,IBDD,IBOK,IBSPEC
"RTN","IBCEP5C",18,0)
 S IBALL=$G(IBALL),IBOK=1
"RTN","IBCEP5C",19,0)
 S IBD=+$P(IBDAT,U,2),IBDD=$S(IBD=4:5,1:4)
"RTN","IBCEP5C",20,0)
 F Z=2:1:6 D
"RTN","IBCEP5C",21,0)
 . I IBD'=Z,$P(IBDAT,U,Z+1)'="" S Z(Z)=$P(IBDAT,U,Z+1) Q
"RTN","IBCEP5C",22,0)
 . I IBD=Z S IBD(Z)=$P(IBDAT,U,Z+1)
"RTN","IBCEP5C",23,0)
 K IBSPEC
"RTN","IBCEP5C",24,0)
 I IBALL D  ; Check for specific
"RTN","IBCEP5C",25,0)
 . N X0,X1
"RTN","IBCEP5C",26,0)
 . S X1=0
"RTN","IBCEP5C",27,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  S X0=$G(^IBA(IBFILE,X1,0)) I $S(IBFILE=355.9:$P(X0,U,3)=Z(3),1:1) D
"RTN","IBCEP5C",28,0)
 .. I $P(X0,U,IBD)'=IBD(IBD),"12"[$P(X0,U,IBD),($P(X0,U,IBDD)=Z(IBDD)!($P(X0,U,IBDD)=0)!(Z(IBDD)=0&(IBD(IBD)=0))) S X1($P(X0,U,IBD))=X1 Q
"RTN","IBCEP5C",29,0)
 .. I IBD(IBD)=0,Z(IBDD)=0 S X1(0)=X1
"RTN","IBCEP5C",30,0)
 . S X0=0 F  S X0=$O(X1(X0)) Q:X0=""  D
"RTN","IBCEP5C",31,0)
 .. S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$P($S(IBD=4:"UB92^HCFA 1500",1:"INPT^OUTPT"),U,X0)_" ONLY"
"RTN","IBCEP5C",32,0)
 . I $D(X1(0)) S IBSPEC=$S($G(IBSPEC)'="":IBSPEC_"  ",1:"")_$S(IBD=4:"BOTH UB92 and HCFA 1500 form type  AND  BOTH INPT and OUTPT care type",1:"BOTH INPT and OUTPT care type  AND  BOTH UB92 and HCFA 1500 form type")
"RTN","IBCEP5C",33,0)
 . ;
"RTN","IBCEP5C",34,0)
 I 'IBALL D
"RTN","IBCEP5C",35,0)
 . N X0,X1
"RTN","IBCEP5C",36,0)
 . S X1=0
"RTN","IBCEP5C",37,0)
 . F  S X1=$O(^IBA(IBFILE,"AC",$S(IBFILE=355.9:Z(6),1:Z(2)),$S(IBFILE=355.9:Z(2),1:Z(6)),$S(IBFILE=355.9:$P(IBDAT,U),1:Z(3)),X1)) Q:'X1  D
"RTN","IBCEP5C",38,0)
 .. S X0=$G(^IBA(IBFILE,X1,0))
"RTN","IBCEP5C",39,0)
 .. I $S(IBFILE=355.9:$P(X0,U,16)=Z(3),1:1),$P(X0,U,IBD)=0,$S($P(X0,U,IBDD)=Z(IBDD):1,1:$P(X0,U,IBDD)=0) S IBSPEC=""
"RTN","IBCEP5C",40,0)
 ;
"RTN","IBCEP5C",41,0)
 I $D(IBSPEC) D
"RTN","IBCEP5C",42,0)
 . N X0,X1,TEXT,IBWHAT
"RTN","IBCEP5C",43,0)
 . S IBWHAT=$S(IBFILE=355.9:$S($G(IBF):"INS CO AND PROVIDER",1:"PROVIDER"),1:"INSURANCE CO")
"RTN","IBCEP5C",44,0)
 . S X0=$S($D(IBD(4)):"UB-92^HCFA 1500",1:"INPT^OUTPT")
"RTN","IBCEP5C",45,0)
 . S X1=$S($D(IBD(4)):"FORM TYPE",1:"CARE TYPE")
"RTN","IBCEP5C",46,0)
 . S DIR(0)="YA"
"RTN","IBCEP5C",47,0)
 . S TEXT(1)="WARNING ... POTENTIAL CONFLICT DETECTED!!"
"RTN","IBCEP5C",48,0)
 . S TEXT(2)=" YOUR NEW COMBINATION APPLIES TO "_$S(IBALL:"BOTH "_$S(IBD=4:"FORM ",1:"INPT AND OUTPT CARE ")_"TYPES",1:"ONLY "_$P(X0,U,IBD(IBD))_" "_X1)
"RTN","IBCEP5C",49,0)
 . S TEXT(3)=" THIS SAME COMBINATION ALREADY EXISTS FOR THE "_IBWHAT_" & "_$S('IBALL:"ALL "_X1_"S",1:"SPECIFIC "_X1_"(S):")
"RTN","IBCEP5C",50,0)
 . S:IBSPEC'="" TEXT(4)=$J("",4)_IBSPEC
"RTN","IBCEP5C",51,0)
 . S TEXT($S($D(TEXT(4)):5,1:4))=" "
"RTN","IBCEP5C",52,0)
 . S DIR("A")="ARE YOU SURE YOU STILL WANT TO ADD THIS RECORD?: "
"RTN","IBCEP5C",53,0)
 . S DIR("?",1)=" "
"RTN","IBCEP5C",54,0)
 . S DIR("?",2)="This combination appears to be conflicting with one(s) already on file."
"RTN","IBCEP5C",55,0)
 . S DIR("?",3)="It has already been defined for the "_$$LOW^XLFSTR(IBWHAT)_" for "_$S(IBALL:"at least 1 specific ",1:"ALL ")_$S(IBD=4:"form",1:"care")_" type"_$S(IBALL:".",1:"s.")
"RTN","IBCEP5C",56,0)
 . S DIR("?")="Respond NO to reject this conflicting record or YES to continue on to add it in spite of the apparent conflict.",DIR("B")="NO"
"RTN","IBCEP5C",57,0)
 . W !! F Q=1:1 Q:'$D(TEXT(Q))  W TEXT(Q),!
"RTN","IBCEP5C",58,0)
 . D ^DIR K DIR W !
"RTN","IBCEP5C",59,0)
 . S IBOK=(Y=1)
"RTN","IBCEP5C",60,0)
 Q IBOK
"RTN","IBCEP5C",61,0)
 ;
"RTN","IBCEP5C",62,0)
CAREUN ;Called from NEWID^IBCEP5B to check for existing record combination
"RTN","IBCEP5C",63,0)
 N DIR
"RTN","IBCEP5C",64,0)
 I IBFILE'=355.9 D
"RTN","IBCEP5C",65,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",66,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",67,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",68,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",69,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",70,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",71,0)
 . I $D(^IBA(355.91,"AUNIQ",IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",72,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",73,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",74,0)
 . S IB35591(.03)=IB3559(.03)
"RTN","IBCEP5C",75,0)
 . I "0"[IB35591(.03) S IB35591(.03)="*N/A*"
"RTN","IBCEP5C",76,0)
 . I IB35591(.03)'="*N/A*" S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",77,0)
 .. S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),IB3559(.04),0,IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",78,0)
 ... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,IB3559(.05),IBPTYP,"")) I 'IB35591(.03) D
"RTN","IBCEP5C",79,0)
 .... S IB35591(.03)=$O(^IBA(355.96,"AUNIQ",IBINS,IB3559(.03),0,0,IBPTYP,""))
"RTN","IBCEP5C",80,0)
 . I $D(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IB35591(.03),IB3559(.04),IB3559(.05),IBPTYP)) D  Q
"RTN","IBCEP5C",81,0)
 .. S DIR(0)="EA",DIR("A",1)="This record already exists - NOT ADDED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR,IB3559,IB35591 W !
"RTN","IBCEP5C",82,0)
 Q
"RTN","IBCEP5C",83,0)
 ;
"RTN","IBCEP5C",84,0)
DEL(IBFILE,IBDA,IBF) ; Delete prov specific ID's
"RTN","IBCEP5C",85,0)
 ; IBFILE = 355.9 or 355.91 for the file
"RTN","IBCEP5C",86,0)
 ; IBDA = ien of entry in file IBFILE
"RTN","IBCEP5C",87,0)
 ; IBF = 1 if deleting from ins co-related options, ""
"RTN","IBCEP5C",88,0)
 ;       from prov-related options
"RTN","IBCEP5C",89,0)
 N IB0,IBLAST,IBX,DIK,DA,DIR,X,Y,Z
"RTN","IBCEP5C",90,0)
 F Z=1:1:3 L +^IBA(IBFILE,IBDA):5 Q:$T
"RTN","IBCEP5C",91,0)
 I '$T D  G DELQ
"RTN","IBCEP5C",92,0)
 . W !,"RECORD IS LOCKED BY ANOTHER USER - TRY AGAIN LATER"
"RTN","IBCEP5C",93,0)
 . D ENTER^IBCEP5B(.DIR)
"RTN","IBCEP5C",94,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5C",95,0)
 S IB0=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",96,0)
 S IBX=0
"RTN","IBCEP5C",97,0)
 S IBX=IBX+1,DIR("A",IBX)=" PROVIDER: "_$S(IBFILE=355.9:$$EXPAND^IBTRE(355.9,.01,$P(IB0,U)),1:"*ALL*")
"RTN","IBCEP5C",98,0)
 D DISP^IBCEP4("DIR(""A"")",$P(IB0,U,$S(IBFILE=355.9:2,1:1)),$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),IBX+1,.IBLAST)
"RTN","IBCEP5C",99,0)
 I $P(IB0,U,3)'="" S DIR("A",IBLAST+1)="CARE UNIT: "_$$EXPAND^IBTRE(355.91,.03,$P(IB0,U,3))
"RTN","IBCEP5C",100,0)
 S DIR("A",IBLAST+2)="  PROV ID: "_$P(IB0,U,7),DIR("A",IBLAST+3)=" "
"RTN","IBCEP5C",101,0)
 S DIR("A")="OK TO DELETE THIS "_$S($G(IBF):"INSURANCE COMPANY ",1:"")_"PROVIDER ID RECORD?: ",DIR("B")="NO"
"RTN","IBCEP5C",102,0)
 S DIR(0)="YA"
"RTN","IBCEP5C",103,0)
 W ! D ^DIR K DIR W !
"RTN","IBCEP5C",104,0)
 I Y'=1 G DELQ
"RTN","IBCEP5C",105,0)
 I IBDA>0 D
"RTN","IBCEP5C",106,0)
 . I IBFILE=355.91!(IBFILE=355.9&($P($G(^IBA(IBFILE,IBDA,0)),U)["VA(200,")) D
"RTN","IBCEP5C",107,0)
 .. N NEXTONE S NEXTONE=$$NEXTONE^IBCEP5A()
"RTN","IBCEP5C",108,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_IBFILE_U_IBDA
"RTN","IBCEP5C",109,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=$G(^IBA(IBFILE,IBDA,0))
"RTN","IBCEP5C",110,0)
 . S DA=IBDA,DIK="^IBA("_IBFILE_"," D ^DIK
"RTN","IBCEP5C",111,0)
DELQ L -^IBA(IBFILE,IBDA)
"RTN","IBCEP5C",112,0)
 Q
"RTN","IBCEP5C",113,0)
 ;
"RTN","IBCEP5C",114,0)
CUCHK(IBDA,IB0) ;Called from CHG^IBCEP5B to check for existing combination
"RTN","IBCEP5C",115,0)
 ; during edit 
"RTN","IBCEP5C",116,0)
 ; IBDA = the ien of the record being edited
"RTN","IBCEP5C",117,0)
 ; IB0 = Proposed changed 0 node of the entry in the file
"RTN","IBCEP5C",118,0)
 ; FUNCTION RETURNS 0 if no duplicate found, 1 if record already exists
"RTN","IBCEP5C",119,0)
 N Z,IBCUCHK,DIR,X,Y
"RTN","IBCEP5C",120,0)
 S IBCUCHK=0
"RTN","IBCEP5C",121,0)
 I IBFILE=355.91 S Z=+$O(^IBA(355.91,"AUNIQ",$P(IB0,U,1),$S($P(IB0,U,3)="@":"*N/A*",$P(IB0,U,3):$P(IB0,U,3),1:$P(IB0,U,10)),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",122,0)
 I IBFILE=355.9 D
"RTN","IBCEP5C",123,0)
 . N X,X1
"RTN","IBCEP5C",124,0)
 . S X=$S($P(IB0,U,2):$P(IB0,U,2),1:$P(IB0,U,15)) S:X="" X="*ALL*"
"RTN","IBCEP5C",125,0)
 . S X1=$S($P(IB0,U,3):$P(IB0,U,3),$P(IB0,U,3)="@":"",1:$P(IB0,U,16)) S:X1="" X1="*N/A*"
"RTN","IBCEP5C",126,0)
 . S Z=+$O(^IBA(355.9,"AUNIQ",$P(IB0,U,1),X,X1,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0)) I Z,Z'=IBDA S IBCUCHK=1
"RTN","IBCEP5C",127,0)
 I IBCUCHK D
"RTN","IBCEP5C",128,0)
 . S DIR(0)="EA",DIR("A",1)="This combination already exists - RECORD NOT CHANGED",DIR("A")="PRESS the ENTER key to continue" W ! D ^DIR K DIR W !
"RTN","IBCEP5C",129,0)
 Q IBCUCHK
"RTN","IBCEP5C",130,0)
 ;
"RTN","IBCEP5D")
0^73^B55561747^B3445050
"RTN","IBCEP5D",1,0)
IBCEP5D ;ALB/JEH - EDI UTILITIES - for State License ;29-MAR-01
"RTN","IBCEP5D",2,0)
 ;;2.0;INTEGRATED BILLING;**137,320**;21-MAR-94
"RTN","IBCEP5D",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEP5D",4,0)
 ;
"RTN","IBCEP5D",5,0)
 ; STATE LICENSE # ADD/EDIT DBIA ==> DBIA 224
"RTN","IBCEP5D",6,0)
EN ;Add/edit state and license number
"RTN","IBCEP5D",7,0)
 N IBDA,DIR,DIC,DD,DA,DR,IBSTAT,IBLIC,IBQ,Y
"RTN","IBCEP5D",8,0)
 D FULL^VALM1
"RTN","IBCEP5D",9,0)
 I '$G(IBPRV) D  G:IBQ STATQ
"RTN","IBCEP5D",10,0)
 . S IBQ=0
"RTN","IBCEP5D",11,0)
 . S DIC="^VA(200,",DIC(0)="AEMQ",DIC("A")="Select VA Provider: " D ^DIC K DIC
"RTN","IBCEP5D",12,0)
 . I $D(DTOUT)!$D(DUOUT)!(Y<0) S IBQ=1 Q
"RTN","IBCEP5D",13,0)
 . S IBDA=+Y
"RTN","IBCEP5D",14,0)
 I $G(IBPRV)["VA" S IBDA=+IBPRV
"RTN","IBCEP5D",15,0)
 I $G(IBPRV),$G(IBPRV)'["VA" D  G STATQ
"RTN","IBCEP5D",16,0)
 . S DIR("A",1)="You have selected a Non-VA provider"
"RTN","IBCEP5D",17,0)
 . S DIR("A",2)="State license # can only be entered for VA providers"
"RTN","IBCEP5D",18,0)
 . S DIR("A",3)=""
"RTN","IBCEP5D",19,0)
 . S DIR("A")="Press enter to continue"
"RTN","IBCEP5D",20,0)
 . S DIR(0)="EA" W ! D ^DIR K DIR W !
"RTN","IBCEP5D",21,0)
STALIC ;Add/edit file 200 field 54.1 multiple,state(.01) and license#(1) - DBIA 224
"RTN","IBCEP5D",22,0)
 ;
"RTN","IBCEP5D",23,0)
 S DA(1)=IBDA,DIC="^VA(200,"_DA(1)_",""PS1"",",DIC(0)="QEAL"
"RTN","IBCEP5D",24,0)
 D ^DIC I Y=-1 K DIC,DA G STATQ
"RTN","IBCEP5D",25,0)
 F Z=1:1:3 L +^VA(200,IBDA):5 Q:$T
"RTN","IBCEP5D",26,0)
 I '$T D  G STATQ
"RTN","IBCEP5D",27,0)
 . W !,"Another user is editing this entry.  Try again later"
"RTN","IBCEP5D",28,0)
 . S DIR(0)="EA",DIR("A")="Press enter to continue"
"RTN","IBCEP5D",29,0)
 . W ! D ^DIR K DIR W !
"RTN","IBCEP5D",30,0)
 S DIE=DIC K DIC S DA=+Y,DR=".01;1"
"RTN","IBCEP5D",31,0)
 D ^DIE K DIE,DR,DA,Y
"RTN","IBCEP5D",32,0)
 L -^VA(200,IBDA)
"RTN","IBCEP5D",33,0)
STATQ ;
"RTN","IBCEP5D",34,0)
 S VALMBCK="R"
"RTN","IBCEP5D",35,0)
 Q
"RTN","IBCEP5D",36,0)
 ;
"RTN","IBCEP5D",37,0)
GETLIC(IBPRV) ; Get license # for provider in file 200 IBPRV
"RTN","IBCEP5D",38,0)
 ; Pass IBPRV by reference to retrieve #'s by state
"RTN","IBCEP5D",39,0)
 ; IBPRV(state ien)=id
"RTN","IBCEP5D",40,0)
 ; Returns 0 if no license # found
"RTN","IBCEP5D",41,0)
 N Z
"RTN","IBCEP5D",42,0)
 S Z=0 F  S Z=$O(^VA(200,IBPRV,"PS1",Z)) Q:'Z  S Z0=$G(^(Z,0)) I $P(Z0,U,2)'="" S IBPRV(+Z0)=$P(Z0,U,2)
"RTN","IBCEP5D",43,0)
 Q +$O(IBPRV(0))
"RTN","IBCEP5D",44,0)
 ;
"RTN","IBCEP5D",45,0)
EDIT(IBFILE,IBFLD,IB0,IBOLD,IBIEN,IBCK1) ; Generic edit flds
"RTN","IBCEP5D",46,0)
 N DIR,Y,X,IB,IB1,IBCUVAL,IBCUY,IBFLD0,IBNEW,IBPRV,IBVAL,IBIVAL,IBINS,IBCUCHK,IBOK,DUOUT,DTOUT
"RTN","IBCEP5D",47,0)
 I IBFILE=355.91,IBFLD=.02 S IBNEW="" G EDITQ ; No .02 in file 355.91
"RTN","IBCEP5D",48,0)
 S IBCUCHK=1,IBCUVAL=""
"RTN","IBCEP5D",49,0)
 S IBFLD0=IBFLD*100,IBPRV=$S(IBFILE=355.9:$P(IB0,U),1:""),IBNEW=""
"RTN","IBCEP5D",50,0)
 S IBPRV0=$S(IBPRV'["355.93":"",1:$G(^IBA(355.93,+IBPRV,0)))
"RTN","IBCEP5D",51,0)
 S IBINS=$P(IB0,U,$S(IBFILE=355.9:2,1:1))
"RTN","IBCEP5D",52,0)
 I IBFLD'=.03 S IBVAL=$$EXPAND^IBTRE(IBFILE,IBFLD,$P(IB0,U,IBFLD0)),IBIVAL=$P(IB0,U,IBFLD0)
"RTN","IBCEP5D",53,0)
 I IBFLD=.03,$S('IBINS:1,1:'$$CAREUN^IBCEP3(IBINS,$P(IB0,U,6),$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,5)=3)) S:$P(IB0,U,3) IBNEW="@" G EDITQ
"RTN","IBCEP5D",54,0)
 I IBFLD=.03 S IBVAL=$P($G(^IBA(355.95,+$G(^IBA(355.96,+$P(IB0,U,3),0)),0)),U),IBIVAL=$P(IB0,U,3) D
"RTN","IBCEP5D",55,0)
 . S IBCUCHK=0,IBCUVAL=$P($G(^IBA(355.96,+IBIVAL,0)),U,1) I IBCUVAL="" Q
"RTN","IBCEP5D",56,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",57,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),""))  S IBCUCHK=1 Q
"RTN","IBCEP5D",58,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",59,0)
 . I $O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),"")) S IBCUCHK=1 Q
"RTN","IBCEP5D",60,0)
 . S IBIVAL="@"
"RTN","IBCEP5D",61,0)
 ;
"RTN","IBCEP5D",62,0)
 I IBFLD'=.02 D
"RTN","IBCEP5D",63,0)
 . N DA
"RTN","IBCEP5D",64,0)
 . S DIR(0)=$S(IBFLD'=.03:IBFILE_","_IBFLD_"AO",1:"PAO^355.95:AEMQ")
"RTN","IBCEP5D",65,0)
 . I IBFLD=.03 D  Q:$P(IB0,U,4)=""!($P(IB0,U,5)="")!($P(IB0,U,6)="")
"RTN","IBCEP5D",66,0)
 .. S DIR("A")="CARE UNIT: "
"RTN","IBCEP5D",67,0)
 .. S DIR("S")="I $D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6)))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,$P(IB0,U,4),0,$P(IB0,U,6))))"
"RTN","IBCEP5D",68,0)
 .. S DIR("S")=DIR("S")_"!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,$P(IB0,U,5),$P(IB0,U,6))))!($D(^IBA(355.96,""AUNIQ"",IBINS,Y,0,0,$P(IB0,U,6))))"
"RTN","IBCEP5D",69,0)
 . I IBFLD'=.03 S DIR("A")=$$GET1^DID(IBFILE,IBFLD,,"LABEL")_": "
"RTN","IBCEP5D",70,0)
 . S:IBVAL'=""&(IBCUCHK) DIR("A")=DIR("A")_IBVAL_"// "
"RTN","IBCEP5D",71,0)
 .; If field .04, Set DIR(0)[3] up to make sure the form type selected is allowed for this ID type.
"RTN","IBCEP5D",72,0)
 . I Z=.04,IBPRV["355.93",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1 D
"RTN","IBCEP5D",73,0)
 .. N AFT
"RTN","IBCEP5D",74,0)
 .. S AFT=$$GET1^DIQ(355.97,$P(IB0,U,6),.07,"I")  ; get allowable form type for this Provider ID Type
"RTN","IBCEP5D",75,0)
 .. I AFT="B" S $P(DIR(0),U,3)="K:"".0.1.2.""'[("".""_X_""."") X",DIR("?")="Provider ID Qualifier selected allows institutional, professional or both" Q   ; allow proff, inst, or both
"RTN","IBCEP5D",76,0)
 .. I AFT="I" S $P(DIR(0),U,3)="K:X'=1 X",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q  ; allow institutional
"RTN","IBCEP5D",77,0)
 .. I AFT="P" S $P(DIR(0),U,3)="K:X'=2 X",DIR("?")="Provider ID Qualifier selected only allows professional (CMS/HCFA type) forms" Q  ; allow professional
"RTN","IBCEP5D",78,0)
 . ;
"RTN","IBCEP5D",79,0)
 . ; field .06 (ID qualifier)
"RTN","IBCEP5D",80,0)
 . I Z=.06 D   ;,IBPRV["355.93" D
"RTN","IBCEP5D",81,0)
 .. S DIR(0)="PAOr^355.97:AEMQ"
"RTN","IBCEP5D",82,0)
 .. S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP5D",83,0)
 .. N TAG
"RTN","IBCEP5D",84,0)
 .. S TAG=$S($G(IBSLEV)=1&($$GET1^DIQ(355.93,+IBPRV,.02,"I")=1):"NVALFOWN",$G(IBSLEV)=1:"RAOWN",$$GET1^DIQ(355.93,+IBPRV,.02,"I")=1:"LFINS",1:"RAINS")
"RTN","IBCEP5D",85,0)
 .. N AFT
"RTN","IBCEP5D",86,0)
 .. S AFT=$S($P(IB0,U,4)]"":$P(IB0,U,4),1:$P(IBOLD,U,4))
"RTN","IBCEP5D",87,0)
 .. I AFT=1 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""P""",DIR("?")="Provider ID Qualifier selected only allows institutional (UB type) forms" Q
"RTN","IBCEP5D",88,0)
 .. I AFT=2 S DIR("S")="I $$"_TAG_"^IBCEPU(Y),$$GET1^DIQ(355.97,+Y,.07,""I"")'=""I""",DIR("?")="Provider ID Qualifier selected only allows professional (CMS/HCFA type) forms" Q
"RTN","IBCEP5D",89,0)
 .. S DIR("S")="I $$"_TAG_"^IBCEPU(Y)"
"RTN","IBCEP5D",90,0)
 . ;
"RTN","IBCEP5D",91,0)
 . S DA=0
"RTN","IBCEP5D",92,0)
 . F  D ^DIR S IBOK=0 D  Q:IBOK
"RTN","IBCEP5D",93,0)
 .. I $D(DUOUT)!$D(DTOUT) S IBOK=1 Q
"RTN","IBCEP5D",94,0)
 .. I X="",$P(IB0,U,(IBFLD*100))'="" S (X,Y)=$P(IB0,U,(IBFLD*100))
"RTN","IBCEP5D",95,0)
 .. I IBFLD=.06,$P(IB0,U,4)'=1,$P($G(^IBE(355.97,$S(+Y:+Y,1:+$P(IB0,U,6)),0)),U,3)="1A" W !,"BLUE CROSS IS ONLY ALLOWED FOR UB92 ONLY" Q
"RTN","IBCEP5D",96,0)
 .. S IBOK=1
"RTN","IBCEP5D",97,0)
 . K DIR
"RTN","IBCEP5D",98,0)
 . I IBFLD=.03,'$D(DTOUT),'$D(DUOUT) D  S Y=IBCUY
"RTN","IBCEP5D",99,0)
 .. S IBCUVAL=+$G(^IBA(355.96,+Y,0))
"RTN","IBCEP5D",100,0)
 .. S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",101,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,$P(IB0,U,4),0,$P(IB0,U,6),0))
"RTN","IBCEP5D",102,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,$P(IB0,U,5),$P(IB0,U,6),0))
"RTN","IBCEP5D",103,0)
 .. I 'IBCUY S IBCUY=+$O(^IBA(355.96,"AUNIQ",IBINS,IBCUVAL,0,0,$P(IB0,U,6),0))
"RTN","IBCEP5D",104,0)
 .. I 'IBCUY S IBCUY="@"
"RTN","IBCEP5D",105,0)
 . I IBIVAL'="",IBCUCHK,($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",106,0)
 . I 'IBCUCHK,X="" S IBNEW=IBIVAL Q
"RTN","IBCEP5D",107,0)
 . I X'="@",($S(X="":IBIVAL'="",1:0)!$D(DTOUT)!$D(DUOUT)) S IBNEW="^1" Q
"RTN","IBCEP5D",108,0)
 . S IBNEW=$S(X'="@":$P(Y,U),1:X)
"RTN","IBCEP5D",109,0)
 . I IBFLD=.03,X="" S IBNEW="" ; No care unit selected
"RTN","IBCEP5D",110,0)
 I IBFLD=.02 D  ; Only file 355.9
"RTN","IBCEP5D",111,0)
 . N DIR,X,Y,DIC,DA,IBIT
"RTN","IBCEP5D",112,0)
 . S IBIT=$$GET1^DID(355.9,.02,,"INPUT TRANSFORM")
"RTN","IBCEP5D",113,0)
 . S DIR(0)="FAO^1:30"
"RTN","IBCEP5D",114,0)
 . S DIR("A")="INSURANCE CO: "_$S(IBVAL'="":IBVAL_"// ",1:" "),DIR("?")="^N IBHELP,Z D HELP^DIE(355.9,,.02,""A"",""IBHELP"") S Z=0 F  S Z=$O(IBHELP(""DIHELP"",Z)) Q:'Z  W !,IBHELP(""DIHELP"",Z)"
"RTN","IBCEP5D",115,0)
 . F  W ! D ^DIR D  I IBNEW'="" K DIR Q
"RTN","IBCEP5D",116,0)
 .. I $D(DTOUT)!$D(DUOUT) S IBNEW="^1" Q
"RTN","IBCEP5D",117,0)
 .. I IBIVAL'="",($P(Y,U)=IBIVAL!(X="")) S IBNEW=IBIVAL Q
"RTN","IBCEP5D",118,0)
 .. I X="@" S IBNEW="@" Q
"RTN","IBCEP5D",119,0)
 .. I X="",IBIVAL="" S IBNEW="*ALL*" Q
"RTN","IBCEP5D",120,0)
 .. S DIC="^DIC(36,",DIC(0)="EMQ",DIC("S")="X IBIT I $D(X)" D ^DIC
"RTN","IBCEP5D",121,0)
 .. I Y>0 S IBNEW=$P(Y,U) Q
"RTN","IBCEP5D",122,0)
 .. S Y="",IBNEW="^1"
"RTN","IBCEP5D",123,0)
 G:IBNEW="^1"!(IBNEW=IBIVAL)!(IBFLD=.07) EDITQ
"RTN","IBCEP5D",124,0)
 I $G(IBCK1) D
"RTN","IBCEP5D",125,0)
 . N X1,X2,X3,X4,X5,X6
"RTN","IBCEP5D",126,0)
 . S X1=$S(IBFILE=355.9:$S(IBFLD'=.01:IBPRV,1:IBNEW),1:"")
"RTN","IBCEP5D",127,0)
 . S X2=$S(IBFILE=355.9:$S(IBFLD'=.02:$P(IB0,U,2),1:IBNEW),1:$S(IBFLD'=.01:$P(IB0,U),1:IBNEW))
"RTN","IBCEP5D",128,0)
 . S X3=$S(IBFLD'=.03:$P(IB0,U,3),1:IBNEW),X4=$S(IBFLD'=.04:$P(IB0,U,4),1:IBNEW),X5=$S(IBFLD'=.05:$P(IB0,U,5),1:IBNEW),X6=$S(IBFLD'=.06:$P(IB0,U,6),1:IBNEW)
"RTN","IBCEP5D",129,0)
 . I X2="" S X2="*ALL*"
"RTN","IBCEP5D",130,0)
 . I X3="" S X3="*N/A*"
"RTN","IBCEP5D",131,0)
 . I IBFILE=355.9,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.9,"AUNIQ",X1,X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",132,0)
 . I IBFILE=355.91,$S(X4=""!(X5="")!(X6=""):1,$O(^IBA(355.91,"AUNIQ",X2,X3,X4,X5,X6,0)):$O(^(0))'=IBIEN,1:0) S IBNEW=IBNEW_"^2" Q
"RTN","IBCEP5D",133,0)
 . F IB=2,3 D  Q:$P(IBNEW,U,3)=3
"RTN","IBCEP5D",134,0)
 .. S IB1=(X2="*ALL*"!(X3="*N/A*"))
"RTN","IBCEP5D",135,0)
 .. I IBFILE=355.9,IB=2,$S($P(IBOLD,U,2)="":X2'="*ALL*",1:$P(IBOLD,U,2)'=X2) S X2=""
"RTN","IBCEP5D",136,0)
 .. I IB=3,$S($P(IBOLD,U,3)="":X3'="*N/A*",1:$P(IBOLD,U,3)'=X3) S X3=""
"RTN","IBCEP5D",137,0)
 .. I '$$COMBOK^IBCEP5C(IBFILE,IBPRV_U_(IBFLD*100)_U_X2_U_X3_U_X4_U_X5_U_X6,IB1) S IBNEW="^3"
"RTN","IBCEP5D",138,0)
 ;
"RTN","IBCEP5D",139,0)
EDITQ Q IBNEW
"RTN","IBCEP6")
0^27^B11155166^B9434133
"RTN","IBCEP6",1,0)
IBCEP6 ;ALB/TMP - PROVIDER ID MAINT menu and INS CO EDIT hook ;11-02-00
"RTN","IBCEP6",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP6",3,0)
 ;
"RTN","IBCEP6",4,0)
EN ; -- main entry point for IBCE PRV INS PARAMS
"RTN","IBCEP6",5,0)
 D FULL^VALM1
"RTN","IBCEP6",6,0)
 D EN^VALM("IBCE PRVMAINT")
"RTN","IBCEP6",7,0)
ENQ Q
"RTN","IBCEP6",8,0)
 ;
"RTN","IBCEP6",9,0)
HDR ; -- header code
"RTN","IBCEP6",10,0)
 K VALMHDR
"RTN","IBCEP6",11,0)
 Q
"RTN","IBCEP6",12,0)
 ;
"RTN","IBCEP6",13,0)
INIT ; Initialization
"RTN","IBCEP6",14,0)
 N IBLCT,IBCT,Z,Z0
"RTN","IBCEP6",15,0)
 S (IBLCT,IBCT)=0,XQORM("B")="Select"
"RTN","IBCEP6",16,0)
 K ^TMP("IBCE_PRVMAINT_MENU",$J)
"RTN","IBCEP6",17,0)
 F Z=1:1:2 S Z0=$J("",10) D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",18,0)
 S Z0=$J("",17)_"-- PROVIDER ID EDITS --" D SET1(.IBLCT,Z0,1),CNTRL^VALM10(IBLCT,18,23,IORVON,IORVOFF)
"RTN","IBCEP6",19,0)
 S Z0=$J("",10)_"1 > PROVIDER SPECIFIC IDS" D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",20,0)
 S Z0=$J("",14)_"o PROVIDER'S OWN IDS" D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",21,0)
 S Z0=$J("",14)_"o PROVIDER IDS FURNISHED BY INSURANCE CO" D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",22,0)
 S Z0=$J("",10)_"2 > INSURANCE CO IDS" D SET1(.IBLCT,Z0,2)
"RTN","IBCEP6",23,0)
 ;S Z0=$J("",10)_"3 > FACILITY IDS" D SET1(.IBLCT,Z0,3)  ;WCJ removed
"RTN","IBCEP6",24,0)
 S Z0=$J("",10)_"4 > CARE UNIT MAINTENANCE" D SET1(.IBLCT,Z0,4)
"RTN","IBCEP6",25,0)
 S Z0=$J("",14)_"o Care Units for Performing Provider IDs" D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",26,0)
 S Z0=$J("",14)_"o Care Units for Billing Provider Secondary IDs" D SET1(.IBLCT,Z0,1)
"RTN","IBCEP6",27,0)
 S Z0=$J("",10)_"5 > INS CO BATCH ID ENTRY" D SET1(.IBLCT,Z0,5)
"RTN","IBCEP6",28,0)
 F Z=1:1:2 S Z0=$J("",10) D SET1(.IBLCT,Z0,6)
"RTN","IBCEP6",29,0)
 S Z0=$J("",14)_"-- NON/OTHER VA ENTITY EDITS --" D SET1(.IBLCT,Z0,6),CNTRL^VALM10(IBLCT,15,31,IORVON,IORVOFF)
"RTN","IBCEP6",30,0)
 S Z0=$J("",10)_"6 > NON/OTHER VA PROVIDER ID INFORMATION" D SET1(.IBLCT,Z0,6)
"RTN","IBCEP6",31,0)
 K VALMBG,VALMCNT
"RTN","IBCEP6",32,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP6",33,0)
 Q
"RTN","IBCEP6",34,0)
 ;
"RTN","IBCEP6",35,0)
SET1(IBLCT,Z0,IBCT) ;
"RTN","IBCEP6",36,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,Z0,$G(IBCT))
"RTN","IBCEP6",37,0)
 Q
"RTN","IBCEP6",38,0)
 ;
"RTN","IBCEP6",39,0)
EXPND ;
"RTN","IBCEP6",40,0)
 Q
"RTN","IBCEP6",41,0)
 ;
"RTN","IBCEP6",42,0)
HELP ;
"RTN","IBCEP6",43,0)
 Q
"RTN","IBCEP6",44,0)
 ;
"RTN","IBCEP6",45,0)
EXIT ;
"RTN","IBCEP6",46,0)
 K ^TMP("IBCE_PRVMAINT_MENU",$J)
"RTN","IBCEP6",47,0)
 D CLEAN^VALM10
"RTN","IBCEP6",48,0)
 Q
"RTN","IBCEP6",49,0)
 ;
"RTN","IBCEP6",50,0)
SEL ;
"RTN","IBCEP6",51,0)
 N Z,Z1,DIR
"RTN","IBCEP6",52,0)
 D FULL^VALM1
"RTN","IBCEP6",53,0)
 D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEP6",54,0)
 S Z=+$O(VALMY(0))
"RTN","IBCEP6",55,0)
 I Z,Z<6,'$D(^XUSEC("IB PROVIDER EDIT",DUZ)) S DIR(0)="EA",DIR("A",1)="YOU ARE NOT AUTHORIZED TO EDIT PROVIDER IDS",DIR("A")="Press ENTER to continue" W ! D ^DIR K DIR W ! G SELQ
"RTN","IBCEP6",56,0)
 I Z=3 D  G SELQ
"RTN","IBCEP6",57,0)
 . S DIR(0)="EA",DIR("A",1)="This Action is no longer available",DIR("A")="Press ENTER to continue"
"RTN","IBCEP6",58,0)
 . D ^DIR K DIR
"RTN","IBCEP6",59,0)
 I Z S Z1=$P($T(ACT+Z),U,2,3) I Z1'="" D @Z1
"RTN","IBCEP6",60,0)
SELQ K VALMBCK,XQORM("B")
"RTN","IBCEP6",61,0)
 S VALMBCK="R",XQORM("B")="Quit"
"RTN","IBCEP6",62,0)
 Q
"RTN","IBCEP6",63,0)
 ;
"RTN","IBCEP6",64,0)
EN1 ; Provider maintenance from the billing screen 8
"RTN","IBCEP6",65,0)
 N DIR,X,Y,IBEDIT
"RTN","IBCEP6",66,0)
 ;S IBEDIT=1
"RTN","IBCEP6",67,0)
 W !
"RTN","IBCEP6",68,0)
 ;S DIR(0)="YA",DIR("B")="NO",DIR("A",1)="WANT TO ATTEMPT TO RESET ALL PROVIDER IDS TO THE CALCULATED",DIR("A")="DEFAULTS FOR THIS BILL?: " D ^DIR K DIR
"RTN","IBCEP6",69,0)
 ;Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP6",70,0)
 ;I Y=1 S IBEDIT=0 D RECALCA^IBCEP2A(IBIFN) W !
"RTN","IBCEP6",71,0)
 ;
"RTN","IBCEP6",72,0)
 I '$D(^XUSEC("IB PROVIDER EDIT",DUZ)) S DIR(0)="EA",DIR("A")="Press ENTER to continue: ",DIR("A",1)="YOU LACK THE SECURITY KEY FOR THIS ACTION" D ^DIR K DIR Q
"RTN","IBCEP6",73,0)
 ;I 'IBEDIT D
"RTN","IBCEP6",74,0)
 ;. S DIR(0)="YA",DIR("A")="WANT TO CONTINUE WITH GENERAL PROVIDER ID MAINTENANCE?: ",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP6",75,0)
 ;. I $D(DTOUT)!$D(DUOUT)!'Y Q
"RTN","IBCEP6",76,0)
 ;. S IBEDIT=1
"RTN","IBCEP6",77,0)
 D EN
"RTN","IBCEP6",78,0)
 Q
"RTN","IBCEP6",79,0)
 ;
"RTN","IBCEP6",80,0)
ACT ; Actions available
"RTN","IBCEP6",81,0)
 ;;PROVIDER LEVEL ID EDIT^EN^IBCEP5
"RTN","IBCEP6",82,0)
 ;;INS CO LEVEL ID EDIT^EN^IBCEP0
"RTN","IBCEP6",83,0)
 ;;
"RTN","IBCEP6",84,0)
 ;;CARE UNIT EDIT^EN^IBCEP4
"RTN","IBCEP6",85,0)
 ;;BATCH ID ENTRY BY INS CO^EN^IBCEP9
"RTN","IBCEP6",86,0)
 ;;NON-VA PROVIDER EDIT^EN^IBCEP8
"RTN","IBCEP6",87,0)
 ;
"RTN","IBCEP6",88,0)
 ;
"RTN","IBCEP6",89,0)
 ;
"RTN","IBCEP6",90,0)
 ;;SITE LEVEL ID EDIT^EN^IBCEP7
"RTN","IBCEP7")
0^28^B48424758^B81966703
"RTN","IBCEP7",1,0)
IBCEP7 ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP7",3,0)
 ;
"RTN","IBCEP7",4,0)
HDR ; -- hdr code
"RTN","IBCEP7",5,0)
 I '$D(^TMP("IBCE_PRVFAC_MAINT",$J)) D INIT
"RTN","IBCEP7",6,0)
 N IBINS,PCF,PCDISP,IBPARAM,IBEFTFL
"RTN","IBCEP7",7,0)
 K VALMHDR
"RTN","IBCEP7",8,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",9,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",10,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",11,0)
 S PCF=$P($G(^DIC(36,+IBINS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEP7",12,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBINS,0)),U)_PCDISP
"RTN","IBCEP7",13,0)
 S VALMHDR(1)=VALMHDR(1)_$S(IBEFTFL="E":"   Billing Provider Secondary IDs",IBEFTFL="A":"   Additional Billing Provider Sec. IDs",IBEFTFL="LF":"   VA-Lab/Facility Secondary IDs",1:"")
"RTN","IBCEP7",14,0)
 I IBEFTFL="LF" S VALMHDR(2)="VA-Lab/Facility Primary ID: Federal Tax ID"
"RTN","IBCEP7",15,0)
 Q
"RTN","IBCEP7",16,0)
 ;
"RTN","IBCEP7",17,0)
INIT ; Initialize
"RTN","IBCEP7",18,0)
 N IBCT,IBD,Z,Z0,Z00,Z1,IBS,IBX,IBDIV,IBEFTFL,IBINS,IBPARAM,IBLCT,IBCU
"RTN","IBCEP7",19,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEP7",20,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",21,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",22,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",23,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",24,0)
 ;
"RTN","IBCEP7",25,0)
 I IBEFTFL="A" D
"RTN","IBCEP7",26,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",27,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC ADDIDS MAINT")
"RTN","IBCEP7",28,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",29,0)
 ;
"RTN","IBCEP7",30,0)
 I IBEFTFL="LF" D
"RTN","IBCEP7",31,0)
 . S VALM("TITLE")="VA-Lab/Facility IDs"
"RTN","IBCEP7",32,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP7",33,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVFAC VALF MAINT")
"RTN","IBCEP7",34,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP7",35,0)
 ;
"RTN","IBCEP7",36,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7",37,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7",38,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7",39,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCEP7",40,0)
 . Q:'($P(Z0,U,8)=IBEFTFL)
"RTN","IBCEP7",41,0)
 . ;Q:$S($P(IBPARAM,U,3)=1:'$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9),1:$P($G(^IBE(355.97,+$P(Z0,U,6),1)),U,9))
"RTN","IBCEP7",42,0)
 . S Z1=$G(^IBE(355.97,+$P(Z0,U,6),0))
"RTN","IBCEP7",43,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z1,U,2)_";"_Z,$P(Z1,U))=+$P(Z0,U,6)_U_$P(Z0,U,7)_U_Z
"RTN","IBCEP7",44,0)
 ;
"RTN","IBCEP7",45,0)
 S IBD="" F  S IBD=$O(IBS(IBD)) Q:IBD=""  D
"RTN","IBCEP7",46,0)
 . D:IBCT SET1(.IBLCT," ",IBCT+1)
"RTN","IBCEP7",47,0)
 . D SET1(.IBLCT,"Division: "_$$DIV(IBD),IBCT+1)
"RTN","IBCEP7",48,0)
 . S IBCU="" F  S IBCU=$O(IBS(IBD,IBCU)) Q:IBCU=""  D
"RTN","IBCEP7",49,0)
 .. I IBCU D SET1(.IBLCT,"  Care Unit: "_$$EXTERNAL^DILFD(355.92,.03,"",IBCU),IBCT+1)
"RTN","IBCEP7",50,0)
 .. S Z="" F  S Z=$O(IBS(IBD,IBCU,Z),-1) Q:Z=""  D
"RTN","IBCEP7",51,0)
 ... S Z0="" F  S Z0=$O(IBS(IBD,IBCU,Z,Z0)) Q:Z0=""  S IBX=IBS(IBD,IBCU,Z,Z0) D
"RTN","IBCEP7",52,0)
 .... S IBCT=IBCT+1
"RTN","IBCEP7",53,0)
 .... I $P(Z,";",2) D  Q
"RTN","IBCEP7",54,0)
 ..... S Z00=$G(^IBA(355.92,+$P(Z,";",2),0))
"RTN","IBCEP7",55,0)
 ..... S Z1=$E(IBCT_$J("",3),1,3)_"  "_$E(Z0_$J("",25),1,25)_"   "_$E($S($P(IBX,U,2)'="":$P(IBX,U,2),1:$$IDNUM^IBCEP7A(+IBX))_$J("",15),1,15)_"  "_$P("BOTH^UB92^HCFA^RX",U,$P(Z00,U,4)+1)
"RTN","IBCEP7",56,0)
 ..... D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP7",57,0)
 ..... S ^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",IBCT)=+$P(Z,";",2)
"RTN","IBCEP7",58,0)
 ;
"RTN","IBCEP7",59,0)
 I 'IBLCT D
"RTN","IBCEP7",60,0)
 . D SET1(1," ")
"RTN","IBCEP7",61,0)
 . N TEXT
"RTN","IBCEP7",62,0)
 . I IBEFTFL="E" S TEXT="No Billing Provider Secondary IDs found"
"RTN","IBCEP7",63,0)
 . I IBEFTFL="A" S TEXT="No Billing Provider Additional IDs found"
"RTN","IBCEP7",64,0)
 . I IBEFTFL="LF" S TEXT="No VA Lab/Facility IDs found"
"RTN","IBCEP7",65,0)
 . D SET1(2,TEXT)
"RTN","IBCEP7",66,0)
 . S IBLCT=2
"RTN","IBCEP7",67,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP7",68,0)
 Q
"RTN","IBCEP7",69,0)
 ;
"RTN","IBCEP7",70,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP7",71,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP7",72,0)
 Q
"RTN","IBCEP7",73,0)
 ;
"RTN","IBCEP7",74,0)
DIV(IBD) ; Returns 'ALL/DEFAULT' or div NAME whose ien=IBD
"RTN","IBCEP7",75,0)
 N MAIN
"RTN","IBCEP7",76,0)
 I IBD Q $$EXTERNAL^DILFD(355.92,.05,"",IBD)
"RTN","IBCEP7",77,0)
 S MAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7",78,0)
 S MAIN=$$EXTERNAL^DILFD(355.92,.05,"",MAIN)
"RTN","IBCEP7",79,0)
 S MAIN=MAIN_"/Default for All Divisions"
"RTN","IBCEP7",80,0)
 Q MAIN
"RTN","IBCEP7",81,0)
 ;
"RTN","IBCEP7",82,0)
EDIT1 ;
"RTN","IBCEP7",83,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL
"RTN","IBCEP7",84,0)
 D FULL^VALM1
"RTN","IBCEP7",85,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",86,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",87,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",88,0)
 S IBFUNC="E"
"RTN","IBCEP7",89,0)
 D SEL
"RTN","IBCEP7",90,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",91,0)
 ;
"RTN","IBCEP7",92,0)
EDIT1Q S VALMBCK="R"
"RTN","IBCEP7",93,0)
 Q
"RTN","IBCEP7",94,0)
EXPND ;
"RTN","IBCEP7",95,0)
 Q
"RTN","IBCEP7",96,0)
HELP ;
"RTN","IBCEP7",97,0)
 Q
"RTN","IBCEP7",98,0)
EXIT ;
"RTN","IBCEP7",99,0)
 N IBPARAM,IBEFTFL
"RTN","IBCEP7",100,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",101,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",102,0)
 I IBEFTFL="A" D COPYPROV^IBCEP5A(0)
"RTN","IBCEP7",103,0)
 ;
"RTN","IBCEP7",104,0)
 S (IBLCT,IBCT)=0
"RTN","IBCEP7",105,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J),^TMP("IBCE_PRVFAC_MAINT_INS",$J)
"RTN","IBCEP7",106,0)
 D CLEAN^VALM10
"RTN","IBCEP7",107,0)
 Q
"RTN","IBCEP7",108,0)
SEL ;
"RTN","IBCEP7",109,0)
 N Z
"RTN","IBCEP7",110,0)
 K IBDA
"RTN","IBCEP7",111,0)
 D FULL^VALM1,EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEP7",112,0)
 S Z=+$O(VALMY(0)) Q:'Z
"RTN","IBCEP7",113,0)
 ; fac/ins co default
"RTN","IBCEP7",114,0)
 S IBDA=$G(^TMP("IBCE_PRVFAC_MAINT",$J,"ZIDX",Z))
"RTN","IBCEP7",115,0)
 Q
"RTN","IBCEP7",116,0)
 ;
"RTN","IBCEP7",117,0)
EDITFAC(IBDA,IBFUNC,IBEFTFL) ; edits ins co facility id (355.92), entry IBDA
"RTN","IBCEP7",118,0)
 N IBRBLD,Z,Z0,DIK,DIE,DP,DA,DR,DIR,X,Y,IBDA0,IBDIV,IBITYP,IBFORM,IBCAREUN,NEXTONE
"RTN","IBCEP7",119,0)
 S IBRBLD=0 S:$G(IBDA) IBDA0=$G(^IBA(355.92,+IBDA,0))
"RTN","IBCEP7",120,0)
 ; "E"diting 355.92 entry
"RTN","IBCEP7",121,0)
 I IBFUNC="E" D
"RTN","IBCEP7",122,0)
 . S Z0=$TR(IBDA0,U)
"RTN","IBCEP7",123,0)
 . Q:'$$FACFLDS^IBCEP7C(IBDA,IBINS,.IBITYP,.IBFORM,.IBDIV,"E",.IBCAREUN,IBEFTFL)
"RTN","IBCEP7",124,0)
 . S DIE="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",125,0)
 . S DR=".03////"_$S($G(IBCAREUN)]""&($G(IBCAREUN)'="*N/A*"):IBCAREUN,1:"")_";.04////"_IBFORM_$S(IBDIV:";.05////"_IBDIV,1:"")_";.06////"_IBITYP_";"
"RTN","IBCEP7",126,0)
 . S DR=DR_".07"_$S(IBEFTFL="E"!(IBEFTFL="A"):"Billing Provider Secondary ID",1:"VA Lab or Facility Secondary ID")
"RTN","IBCEP7",127,0)
 . I IBEFTFL="A" D
"RTN","IBCEP7",128,0)
 .. S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",129,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"MOD"_U_355.92
"RTN","IBCEP7",130,0)
 .. S ^TMP("IB_EDITED_IDS",$J,NEXTONE,"OLD0")=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",131,0)
 . D ^DIE
"RTN","IBCEP7",132,0)
 . I IBEFTFL="A" S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=^IBA(355.92,IBDA,0)
"RTN","IBCEP7",133,0)
 . I $TR($G(^IBA(355.92,IBDA,0)),U)'=Z0 S IBRBLD=1
"RTN","IBCEP7",134,0)
 ;
"RTN","IBCEP7",135,0)
 ; "D"eleting 355.92 entry
"RTN","IBCEP7",136,0)
 I IBFUNC="D" D
"RTN","IBCEP7",137,0)
 . W !!," Insurance Co: ",$P($G(^DIC(36,+IBDA0,0)),U)
"RTN","IBCEP7",138,0)
 . W !,"     Division: ",$$DIV($P(IBDA0,U,5))
"RTN","IBCEP7",139,0)
 . W:$P(IBDA0,U,3)]"" !,"    Care Unit: ",$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7",140,0)
 . W !," ID Qualifier: ",$$EXTERNAL^DILFD(355.92,.06,"",$P(IBDA0,U,6))
"RTN","IBCEP7",141,0)
 . W !,"    Form Type: ",$$EXTERNAL^DILFD(355.92,.04,"",$P(IBDA0,U,4))
"RTN","IBCEP7",142,0)
 . W !,"           ID: ",$P(IBDA0,U,7),!
"RTN","IBCEP7",143,0)
 . S DIR(0)="YA",DIR("A")="ARE YOU SURE YOU WANT TO DELETE THIS ID RECORD?: ",DIR("B")="NO" D ^DIR K DIR
"RTN","IBCEP7",144,0)
 . S DIR("A")="NOTHING DELETED - PRESS RETURN TO CONTINUE: "
"RTN","IBCEP7",145,0)
 . I Y=1 D
"RTN","IBCEP7",146,0)
 .. S DIK="^IBA(355.92,",DA=IBDA
"RTN","IBCEP7",147,0)
 .. D ^DIK
"RTN","IBCEP7",148,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7",149,0)
 ... N NEXTONE
"RTN","IBCEP7",150,0)
 ... S NEXTONE=$$NEXTONE()
"RTN","IBCEP7",151,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBDA_U_"DEL"_U_355.92
"RTN","IBCEP7",152,0)
 ... S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=IBDA0
"RTN","IBCEP7",153,0)
 .. S DIR("A")="ID DELETED - PRESS RETURN TO CONTINUE: ",IBRBLD=1
"RTN","IBCEP7",154,0)
 .. S DIR(0)="EA" W ! D ^DIR K DIR
"RTN","IBCEP7",155,0)
 ;
"RTN","IBCEP7",156,0)
 Q IBRBLD
"RTN","IBCEP7",157,0)
 ;
"RTN","IBCEP7",158,0)
FACID(Y) ;
"RTN","IBCEP7",159,0)
 N Z,Z1,Z2
"RTN","IBCEP7",160,0)
 S Z=U_$P($G(^IBE(355.97,+Y,0)),U,3)_U,Z1=$$SUB2^IBCEF73(1),Z2=$$SUB2^IBCEF73(2)
"RTN","IBCEP7",161,0)
 I Z1[Z!(Z2[Z) Q 1
"RTN","IBCEP7",162,0)
 Q 0
"RTN","IBCEP7",163,0)
 ;
"RTN","IBCEP7",164,0)
ADD1 ;
"RTN","IBCEP7",165,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTFL,IBINS
"RTN","IBCEP7",166,0)
 D FULL^VALM1
"RTN","IBCEP7",167,0)
 ;
"RTN","IBCEP7",168,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",169,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",170,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co        ;
"RTN","IBCEP7",171,0)
 ;
"RTN","IBCEP7",172,0)
 S Z=$$ADDFAC^IBCEP7A(IBINS,IBEFTFL) I Z D INIT
"RTN","IBCEP7",173,0)
 ;
"RTN","IBCEP7",174,0)
ADD1Q S VALMBCK="R"
"RTN","IBCEP7",175,0)
 Q
"RTN","IBCEP7",176,0)
 ;
"RTN","IBCEP7",177,0)
DEL1 ;
"RTN","IBCEP7",178,0)
 N IBFUNC,IBINS,IBDA,Z,DIR,X,Y,DTOUT,DUOUT,DP,IBPARAM,IBEFTDL,IBINS
"RTN","IBCEP7",179,0)
 D FULL^VALM1
"RTN","IBCEP7",180,0)
 ;       
"RTN","IBCEP7",181,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7",182,0)
 S IBEFTFL=$P(IBPARAM,U)  ; Electronic Form type flag
"RTN","IBCEP7",183,0)
 S IBINS=+$P(IBPARAM,U,2)  ; Insurance co
"RTN","IBCEP7",184,0)
 ;
"RTN","IBCEP7",185,0)
 S IBFUNC="D"
"RTN","IBCEP7",186,0)
 D SEL
"RTN","IBCEP7",187,0)
 I $G(IBDA) S Z=$$EDITFAC(IBDA,IBFUNC,IBEFTFL) I Z D INIT
"RTN","IBCEP7",188,0)
 ;
"RTN","IBCEP7",189,0)
DEL1Q S VALMBCK="R"
"RTN","IBCEP7",190,0)
 Q
"RTN","IBCEP7",191,0)
 ;
"RTN","IBCEP7",192,0)
 ; Get the next number so that the edits can be replicated in order for other providers/insurance companies
"RTN","IBCEP7",193,0)
NEXTONE() ;
"RTN","IBCEP7",194,0)
 Q $O(^TMP("IB_EDITED_IDS",$J,""),-1)+1
"RTN","IBCEP7A")
0^53^B8080264^B3300559
"RTN","IBCEP7A",1,0)
IBCEP7A ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7A",2,0)
 ;;2.0;INTEGRATED BILLING;**232,320**;21-MAR-94
"RTN","IBCEP7A",3,0)
 ;
"RTN","IBCEP7A",4,0)
IDNUM(IBIEN) ; Find site-default id # for id type
"RTN","IBCEP7A",5,0)
 ; IBIEN = ien of prov ID type (file 355.97)
"RTN","IBCEP7A",6,0)
 N IBID,Z0,Z1
"RTN","IBCEP7A",7,0)
 S IBID=""
"RTN","IBCEP7A",8,0)
 S Z0=$G(^IBE(355.97,IBIEN,0)),Z1=$G(^(1))
"RTN","IBCEP7A",9,0)
 I $P(Z1,U,9) G IDNUMQ
"RTN","IBCEP7A",10,0)
 I $P(Z0,U,4)'="" S IBID=$P(Z0,U,4) G IDNUMQ
"RTN","IBCEP7A",11,0)
 I $P(Z1,U,4) S IBID=$P($G(^IBE(350.9,1,1)),U,5)
"RTN","IBCEP7A",12,0)
 ;
"RTN","IBCEP7A",13,0)
IDNUMQ Q IBID
"RTN","IBCEP7A",14,0)
 ;
"RTN","IBCEP7A",15,0)
ADDFAC(IBINS,IBEFTFL) ; Add a new fac id for an ins co
"RTN","IBCEP7A",16,0)
 N IB,IBDIV,IBY,IBOK,IBRBLD,IBITYP,IBFORM,DIC,DIR,X,Y,DTOUT,DUOUT,DLAYGO,DO,DD,Z,Z0,DIE,DIK,DA,IBCAREUN,DR,I
"RTN","IBCEP7A",17,0)
 S IBRBLD=0,IBY=-1
"RTN","IBCEP7A",18,0)
 S IBOK=$$FACFLDS^IBCEP7C("",IBINS,.IBITYP,.IBFORM,.IBDIV,"A",.IBCAREUN,IBEFTFL)
"RTN","IBCEP7A",19,0)
 I 'IBOK G ADDFQ
"RTN","IBCEP7A",20,0)
 ;
"RTN","IBCEP7A",21,0)
 S X=IBINS,DIC(0)="L",DIC="^IBA(355.92,"
"RTN","IBCEP7A",22,0)
 S DIC("DR")=".04////"_IBFORM_$S($G(IBDIV):";.05////"_IBDIV,1:"")_";.06////"_IBITYP_$S($G(IBCAREUN)]""&($G(IBCAREUN)'="*N/A*"):";.03////"_IBCAREUN,1:"")_";.08////"_$G(IBEFTFL)
"RTN","IBCEP7A",23,0)
 S DLAYGO=355.92
"RTN","IBCEP7A",24,0)
 D FILE^DICN
"RTN","IBCEP7A",25,0)
 K DIC,DLAYGO,DO,DD
"RTN","IBCEP7A",26,0)
 S IBY=+Y
"RTN","IBCEP7A",27,0)
 ;
"RTN","IBCEP7A",28,0)
 ; Below is a very convoluted way to get the proper prompt on the screen.  Tried using DIC("DR") above but
"RTN","IBCEP7A",29,0)
 ; the file name was being added to the prompt.
"RTN","IBCEP7A",30,0)
 S DIE=355.92
"RTN","IBCEP7A",31,0)
 S DA=IBY
"RTN","IBCEP7A",32,0)
 F I=1:1:3 L +^IBA(355.92,DA):5 Q:$T
"RTN","IBCEP7A",33,0)
 E  G ADDFQ
"RTN","IBCEP7A",34,0)
 S DR=".07"_$S(IBEFTFL="E"!(IBEFTFL="A"):"Billing Provider Secondary ID",1:"VA Lab or Facility Secondary ID")
"RTN","IBCEP7A",35,0)
 D ^DIE
"RTN","IBCEP7A",36,0)
 I $G(DTOUT)!$G(DUOUT) D
"RTN","IBCEP7A",37,0)
 . S DIK=355.92
"RTN","IBCEP7A",38,0)
 . S DA=+IBY
"RTN","IBCEP7A",39,0)
 . S IBY=0
"RTN","IBCEP7A",40,0)
 . D ^DIK
"RTN","IBCEP7A",41,0)
 L -^IBA(355.92,DA)
"RTN","IBCEP7A",42,0)
 ;
"RTN","IBCEP7A",43,0)
ADDFQ I IBY>0,$P($G(^IBA(355.92,IBY,0)),U,7)="" S DIK="^IBA(355.92,",DA=IBY D ^DIK S IBY=-1
"RTN","IBCEP7A",44,0)
 I IBY'>0 S DIR("A",+$O(DIR("A"," "),-1)+1)="A NEW ID WAS NOT ADDED",IBRBLD=0
"RTN","IBCEP7A",45,0)
 I IBY>0 S DIR("A",1)="A NEW ID WAS ADDED SUCCESSFULLY",IBRBLD=1 D
"RTN","IBCEP7A",46,0)
 . Q:IBEFTFL'="A"
"RTN","IBCEP7A",47,0)
 . N NEXTONE
"RTN","IBCEP7A",48,0)
 . S NEXTONE=$$NEXTONE^IBCEP7()
"RTN","IBCEP7A",49,0)
 . S ^TMP("IB_EDITED_IDS",$J,NEXTONE)=IBY_U_"ADD"_U_355.92
"RTN","IBCEP7A",50,0)
 . S ^TMP("IB_EDITED_IDS",$J,NEXTONE,0)=^IBA(355.92,IBY,0)
"RTN","IBCEP7A",51,0)
 S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","IBCEP7A",52,0)
 Q IBRBLD
"RTN","IBCEP7A",53,0)
 ;       
"RTN","IBCEP7A",54,0)
ADDID ;
"RTN","IBCEP7A",55,0)
 N IBSAVTMP
"RTN","IBCEP7A",56,0)
 S IBSAVTMP=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7A",57,0)
 D FACID^IBCEP2B(+IBCNS,"A")
"RTN","IBCEP7A",58,0)
 S ^TMP("IBCE_PRVFAC_MAINT_INS",$J)=$G(IBSAVTMP)
"RTN","IBCEP7A",59,0)
 S VALMBCK="R"
"RTN","IBCEP7A",60,0)
 Q
"RTN","IBCEP7A",61,0)
 ;
"RTN","IBCEP7A",62,0)
IDPARAM ;
"RTN","IBCEP7A",63,0)
 D FULL^VALM1
"RTN","IBCEP7A",64,0)
 D EN^IBCEPB
"RTN","IBCEP7A",65,0)
 S VALMBCK="R"
"RTN","IBCEP7A",66,0)
 Q
"RTN","IBCEP7A",67,0)
 ;
"RTN","IBCEP7A",68,0)
VALFIDS ;
"RTN","IBCEP7A",69,0)
 N IBSAVTMP
"RTN","IBCEP7A",70,0)
 S IBSAVTMP=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7A",71,0)
 D FACID^IBCEP2B(+IBCNS,"LF")
"RTN","IBCEP7A",72,0)
 S ^TMP("IBCE_PRVFAC_MAINT_INS",$J)=$G(IBSAVTMP)
"RTN","IBCEP7A",73,0)
 S VALMBCK="R"
"RTN","IBCEP7A",74,0)
 Q
"RTN","IBCEP7B")
0^54^B7086017
"RTN","IBCEP7B",1,0)
IBCEP7B ;ALB/TMP - Functions for PROVIDER ID ;1-16-05
"RTN","IBCEP7B",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;16-JAN-2005
"RTN","IBCEP7B",3,0)
 Q
"RTN","IBCEP7B",4,0)
 ;
"RTN","IBCEP7B",5,0)
GETID(CLAIM,COB) ;
"RTN","IBCEP7B",6,0)
 N DIR,X,Y,DTOUT,DUOUT,WHICH,ID,IBMAIN,IBDIV,DIC,IBINS,DA,DIC,Z,Z0,IBCU,OK,IBCU
"RTN","IBCEP7B",7,0)
 ;
"RTN","IBCEP7B",8,0)
 S ID=""
"RTN","IBCEP7B",9,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",10,0)
 I IBINS="" Q ID
"RTN","IBCEP7B",11,0)
 ;
"RTN","IBCEP7B",12,0)
 ; Make sure they have careunits IDS defined for this insurance company before we bother asking
"RTN","IBCEP7B",13,0)
 S OK=0
"RTN","IBCEP7B",14,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:OK
"RTN","IBCEP7B",15,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",16,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",17,0)
 . Q:$P(Z0,U,3)=""
"RTN","IBCEP7B",18,0)
 . S OK=1
"RTN","IBCEP7B",19,0)
 I 'OK Q ID
"RTN","IBCEP7B",20,0)
 ;
"RTN","IBCEP7B",21,0)
 S WHICH=$S(COB=1:"Primary",COB=2:"Secondary",1:"Tertiary")
"RTN","IBCEP7B",22,0)
 S DIR("A")="Define "_WHICH_" Payer ID by Care Unit? "
"RTN","IBCEP7B",23,0)
 S DIR("B")="No"
"RTN","IBCEP7B",24,0)
 S DIR(0)="YA"
"RTN","IBCEP7B",25,0)
 S DIR("?",1)="Enter No to select "_WHICH_" Provider # by Division."
"RTN","IBCEP7B",26,0)
 S DIR("?")="Enter Yes to select "_WHICH_" Provider # for a specific Care Unit."
"RTN","IBCEP7B",27,0)
 D ^DIR
"RTN","IBCEP7B",28,0)
 I Y'=1 Q ID
"RTN","IBCEP7B",29,0)
 ;
"RTN","IBCEP7B",30,0)
 ; Get the Division
"RTN","IBCEP7B",31,0)
 S IB=$$MAIN^IBCEP2B()
"RTN","IBCEP7B",32,0)
 S IBDIV=$$EXTERNAL^DILFD(399,.22,"",$P($G(^DGCR(399,CLAIM,0)),U,22))
"RTN","IBCEP7B",33,0)
 S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7B",34,0)
 ; Default Division
"RTN","IBCEP7B",35,0)
 S DIR("B")=$S(IBDIV]"":IBDIV,1:IBMAIN)
"RTN","IBCEP7B",36,0)
 D ^DIR K DIR
"RTN","IBCEP7B",37,0)
 S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7B",38,0)
 I Y<0 Q ID
"RTN","IBCEP7B",39,0)
 ;
"RTN","IBCEP7B",40,0)
 ; Get the Care Unit
"RTN","IBCEP7B",41,0)
 S DIC("A")="Care Unit: "
"RTN","IBCEP7B",42,0)
 S DIC("W")="W ""   "",$P(^(0),U,2)"
"RTN","IBCEP7B",43,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7B",44,0)
 D ^DIC
"RTN","IBCEP7B",45,0)
 I Y<0 Q ID
"RTN","IBCEP7B",46,0)
 S IBCU=+Y
"RTN","IBCEP7B",47,0)
 ;
"RTN","IBCEP7B",48,0)
 ; Compile the appropriate list of IDs
"RTN","IBCEP7B",49,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D  Q:ID]""
"RTN","IBCEP7B",50,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7B",51,0)
 . Q:$P(Z0,U,8)'="E"
"RTN","IBCEP7B",52,0)
 . Q:$P(Z0,U,3)'=IBCU
"RTN","IBCEP7B",53,0)
 . S ID=$P(Z0,U,7)_U_$P(Z0,U,6)
"RTN","IBCEP7B",54,0)
 Q ID
"RTN","IBCEP7B",55,0)
 ;
"RTN","IBCEP7B",56,0)
 ; See if the insurance company flag is set to send the ATT/REND ID as the Billing Provider
"RTN","IBCEP7B",57,0)
ATTREND(CLAIM,COB) ;
"RTN","IBCEP7B",58,0)
 N ID,IBINS
"RTN","IBCEP7B",59,0)
 S ID=""
"RTN","IBCEP7B",60,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",61,0)
 I IBINS="" Q 0
"RTN","IBCEP7B",62,0)
 ;
"RTN","IBCEP7B",63,0)
 I $$FT^IBCEF(CLAIM)=2,$$GET1^DIQ(36,IBINS,4.06,"I") Q 1   ; hcfa
"RTN","IBCEP7B",64,0)
 I $$FT^IBCEF(CLAIM)=3,$$GET1^DIQ(36,IBINS,4.08,"I") Q 1   ; ub
"RTN","IBCEP7B",65,0)
 Q 0
"RTN","IBCEP7B",66,0)
 ;
"RTN","IBCEP7B",67,0)
 ; Get a list of the plan types that supress Billing Provider Secondary IDs for this  Insurance Co
"RTN","IBCEP7B",68,0)
 ; and see if the current plan type is one of them.
"RTN","IBCEP7B",69,0)
SUPPPT(CLAIM,COB) ;
"RTN","IBCEP7B",70,0)
 N IBINS,SUPPFL
"RTN","IBCEP7B",71,0)
 S SUPPFL=0
"RTN","IBCEP7B",72,0)
 S IBINS=$P($G(^DGCR(399,CLAIM,"I"_COB)),U)
"RTN","IBCEP7B",73,0)
 I IBINS="" Q SUPPFL
"RTN","IBCEP7B",74,0)
 ;
"RTN","IBCEP7B",75,0)
 I $D(^DIC(36,IBINS,13)) D
"RTN","IBCEP7B",76,0)
 . N PLAN,PLANTYPE
"RTN","IBCEP7B",77,0)
 . S PLAN=$P($G(^DGCR(399,CLAIM,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCEP7B",78,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:PLANTYPE=""
"RTN","IBCEP7B",79,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCEP7B",80,0)
 . S SUPPFL=1
"RTN","IBCEP7B",81,0)
 Q SUPPFL
"RTN","IBCEP7C")
0^55^B59203324
"RTN","IBCEP7C",1,0)
IBCEP7C ;ALB/TMP - Functions for fac level PROVIDER ID MAINT ;11-07-00
"RTN","IBCEP7C",2,0)
 ;;2.0;INTEGRATED BILLING;**137,232,320**;21-MAR-94
"RTN","IBCEP7C",3,0)
 ;
"RTN","IBCEP7C",4,0)
 G AWAY
"RTN","IBCEP7C",5,0)
AWAY Q
"RTN","IBCEP7C",6,0)
 ;
"RTN","IBCEP7C",7,0)
 ; IBDA - IEN for file 355.92
"RTN","IBCEP7C",8,0)
 ; IBFUNC = "A"dd or "E"dit
"RTN","IBCEP7C",9,0)
FACFLDS(IBDA,IBINS,IBITYP,IBFORM,IBDIV,IBFUNC,IBCAREUN,IBEFTFL) ; Chk for dups on fac id fld combos
"RTN","IBCEP7C",10,0)
 ;
"RTN","IBCEP7C",11,0)
 N IB,IBOK,DIC,DIR,X,Y,DTOUT,DUOUT,Z,Z0,DIE,DA,IBMAIN,IBQUIT,IBPARAM,IBCUF,IBDA0,IBCNTADD,I,IBLIMIT
"RTN","IBCEP7C",12,0)
 ;
"RTN","IBCEP7C",13,0)
 S IBOK=0,IBDA0=""
"RTN","IBCEP7C",14,0)
 I $G(IBDA) S IBDA0=$G(^IBA(355.92,IBDA,0))
"RTN","IBCEP7C",15,0)
 S IBPARAM=$G(^TMP("IBCE_PRVFAC_MAINT_INS",$J))
"RTN","IBCEP7C",16,0)
 S IBCUF=$S($P(IBDA0,U,3)]"":1,1:0)  ; Care Unit Flag
"RTN","IBCEP7C",17,0)
 ;
"RTN","IBCEP7C",18,0)
 I IBEFTFL="E",IBFUNC="A" D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",19,0)
 . K DIR
"RTN","IBCEP7C",20,0)
 . S DIR("A")="Define Billing Provider Secondary IDs by Care Units? "
"RTN","IBCEP7C",21,0)
 . S DIR("B")="No"
"RTN","IBCEP7C",22,0)
 . S DIR(0)="YAO"
"RTN","IBCEP7C",23,0)
 . S DIR("?",1)="Enter No to define a Billing Provider Secondary ID for the Division."
"RTN","IBCEP7C",24,0)
 . S DIR("?",2)="Enter Yes to define a Billing Provider Secondary ID for a specific Care Unit."
"RTN","IBCEP7C",25,0)
 . S DIR("?",3)="If no Care Unit is entered on Billing Screen 3, the Billing Provider"
"RTN","IBCEP7C",26,0)
 . S DIR("?")="Secondary ID defined for the Division will be transmitted in the claim."
"RTN","IBCEP7C",27,0)
 . D ^DIR
"RTN","IBCEP7C",28,0)
 . S IBCUF=$G(Y)  ; Care Unit Flag
"RTN","IBCEP7C",29,0)
 ;
"RTN","IBCEP7C",30,0)
 ; Get the Division
"RTN","IBCEP7C",31,0)
 S IBMAIN=$$MAIN^IBCEP2B()
"RTN","IBCEP7C",32,0)
 S IBDIV=0
"RTN","IBCEP7C",33,0)
 I IBEFTFL="E"!(IBEFTFL="LF") D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",34,0)
 . K DIR
"RTN","IBCEP7C",35,0)
 . S (IBQUIT,IBOK)=0,DA=$G(IBDA)
"RTN","IBCEP7C",36,0)
 . S DIR("A")="Division: ",DIR(0)="355.92,.05AOr"
"RTN","IBCEP7C",37,0)
 . ; Default Division - Main if adding or Existing if editing
"RTN","IBCEP7C",38,0)
 . I IBFUNC="E" S DIR("B")=$P($$DIV^IBCEP7($P(IBDA0,U,5)),"/")
"RTN","IBCEP7C",39,0)
 . I IBFUNC="A" S DIR("B")=$P($$EXTERNAL^DILFD(355.92,.05,"",IBMAIN),"/")
"RTN","IBCEP7C",40,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",41,0)
 . Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEP7C",42,0)
 . S IBDIV=+$S(Y>0:+Y,1:0)
"RTN","IBCEP7C",43,0)
 ;
"RTN","IBCEP7C",44,0)
 ; See if there are any Care Units
"RTN","IBCEP7C",45,0)
 S IBCAREUN="*N/A*"
"RTN","IBCEP7C",46,0)
 I IBEFTFL="E",IBCUF D
"RTN","IBCEP7C",47,0)
 . N TAR
"RTN","IBCEP7C",48,0)
 . D LIST^DIC(355.95,,.01,,,,,,"I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",,"TAR")
"RTN","IBCEP7C",49,0)
 . Q:+$G(TAR("DILIST",0))
"RTN","IBCEP7C",50,0)
 . S IBCUF=0
"RTN","IBCEP7C",51,0)
 . W !!,"There are no Care Units defined for this Division.",!
"RTN","IBCEP7C",52,0)
 ;
"RTN","IBCEP7C",53,0)
 ; Get the Care Unit
"RTN","IBCEP7C",54,0)
 I IBEFTFL="E",IBCUF D  I Y<1 G FLDSQ
"RTN","IBCEP7C",55,0)
 . K DIC
"RTN","IBCEP7C",56,0)
 . S DIC("A")="Care Unit: "
"RTN","IBCEP7C",57,0)
 . I IBFUNC="E" D  ; default only if editing
"RTN","IBCEP7C",58,0)
 .. Q:IBDIV'=$P(IBDA0,U,5)  ; don't default if division has changed
"RTN","IBCEP7C",59,0)
 .. S DIC("B")=$$EXTERNAL^DILFD(355.92,.03,"",$P(IBDA0,U,3))
"RTN","IBCEP7C",60,0)
 . S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEP7C",61,0)
 . D ^DIC
"RTN","IBCEP7C",62,0)
 . I Y>0 S IBCAREUN=+Y
"RTN","IBCEP7C",63,0)
 ;
"RTN","IBCEP7C",64,0)
 ; Think this is done for sorting purposes.  Makes the main division first
"RTN","IBCEP7C",65,0)
 I IBDIV=IBMAIN S IBDIV=0
"RTN","IBCEP7C",66,0)
 ;
"RTN","IBCEP7C",67,0)
 ; Get the Provider ID Type
"RTN","IBCEP7C",68,0)
 K DIR
"RTN","IBCEP7C",69,0)
 S IBQUIT=0
"RTN","IBCEP7C",70,0)
 I $P(IBPARAM,U,3)'=1 D
"RTN","IBCEP7C",71,0)
 . S DIR("?")="Can NOT be State LIC # or Billing Facility Primary"
"RTN","IBCEP7C",72,0)
 . S DIR("A")="ID Qualifier: "
"RTN","IBCEP7C",73,0)
 . S DIR(0)="355.92,.06A^^K:'$$FACID^IBCEP7(+Y)!$P($G(^IBE(355.97,+Y,1)),U,9)!($P($G(^(0)),U,3)=""0B"") X"
"RTN","IBCEP7C",74,0)
 . W ! D ^DIR K DIR
"RTN","IBCEP7C",75,0)
 . I $D(DTOUT)!$D(DUOUT) S IBQUIT=1
"RTN","IBCEP7C",76,0)
 E  D  G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",77,0)
 . S DIR("A")="ID Qualifier: "    ;,DIR(0)="355.92,.06Ar"
"RTN","IBCEP7C",78,0)
 . S DIR(0)="PAr^355.97:AEMQ"
"RTN","IBCEP7C",79,0)
 . S DIR("?")="Enter a Qualifier to indentify the type of ID number you are entering."
"RTN","IBCEP7C",80,0)
 . ; Default Type of ID - Electronic Plan Type if adding or Existing if editing
"RTN","IBCEP7C",81,0)
 . N PITIEN S PITIEN=$S(IBFUNC="A"&(IBEFTFL="E"):$$BF^IBCU(),IBFUNC="E":$P(IBDA0,U,6),1:"")
"RTN","IBCEP7C",82,0)
 . I PITIEN]"" S DIR("B")=$P($G(^IBE(355.97,PITIEN,0)),U)
"RTN","IBCEP7C",83,0)
 . I IBEFTFL="E" D
"RTN","IBCEP7C",84,0)
 .. S DIR("?",1)=" The current default ID Qualifier is based upon the Electronic Plan Type."
"RTN","IBCEP7C",85,0)
 .. S DIR("?",2)=" You may change the ID Qualifier and the change will apply to all Plan"
"RTN","IBCEP7C",86,0)
 .. S DIR("?")=" Types."
"RTN","IBCEP7C",87,0)
 .. S DIR("S")="I ($P($G(^(0)),U,3)=$P($G(^IBE(355.97,PITIEN,0)),U,3))!$$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",88,0)
 . I IBEFTFL="A" S DIR("S")="I $$BPS^IBCEPU(Y)"
"RTN","IBCEP7C",89,0)
 . I IBEFTFL="LF" S DIR("S")="I $$LFINS^IBCEPU(Y)"
"RTN","IBCEP7C",90,0)
 . D ^DIR K DIR
"RTN","IBCEP7C",91,0)
 G:IBQUIT FLDSQ
"RTN","IBCEP7C",92,0)
 S IBITYP=$P(Y,U)
"RTN","IBCEP7C",93,0)
 ;
"RTN","IBCEP7C",94,0)
 ; Get Form Type
"RTN","IBCEP7C",95,0)
 K DIR
"RTN","IBCEP7C",96,0)
 S DIR("A")="Form Type: "
"RTN","IBCEP7C",97,0)
 ;S DIR(0)=$S(IBEFTFL="LF":"355.92,.04A",1:"SA^1:UB92;2:HCFA 1500")
"RTN","IBCEP7C",98,0)
 S DIR(0)=$S(IBEFTFL="LF":"SA^0:BOTH;1:UB92;2:HCFA 1500",1:"SA^1:UB92;2:HCFA 1500")
"RTN","IBCEP7C",99,0)
 ;
"RTN","IBCEP7C",100,0)
 I $G(IBDA) S DIR("B")=$S(+$P($G(^IBA(355.92,IBDA,0)),U,4)=0:"BOTH",1:$P("UB92^HCFA 1500",U,+$P($G(^IBA(355.92,IBDA,0)),U,4)))
"RTN","IBCEP7C",101,0)
 ;
"RTN","IBCEP7C",102,0)
 D ^DIR K DIR
"RTN","IBCEP7C",103,0)
 G:$D(DTOUT)!$D(DUOUT) FLDSQ
"RTN","IBCEP7C",104,0)
 S IBFORM=$P(Y,U)
"RTN","IBCEP7C",105,0)
 ;
"RTN","IBCEP7C",106,0)
 ; Set up array of exisiting IDs by form type, divison, and care units to avoid duplications
"RTN","IBCEP7C",107,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",IBINS,Z)) Q:'Z  D
"RTN","IBCEP7C",108,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCEP7C",109,0)
 . I '(IBFUNC="E"&(Z=IBDA)) D
"RTN","IBCEP7C",110,0)
 .. I IBEFTFL="LF",$P(Z0,U,8)'="LF" Q   ; If lab/facility ID, it only needs to be unique among lab/facility IDs
"RTN","IBCEP7C",111,0)
 .. I IBEFTFL'="LF",$P(Z0,U,8)="LF" Q   ; If not lab/facility ID, it must be unigue for the others (secondary and additional)
"RTN","IBCEP7C",112,0)
 .. I IBEFTFL="A",$P(Z0,U,8)="E" Q
"RTN","IBCEP7C",113,0)
 .. I $P(Z0,U,8)="E",IBEFTFL'="A" S IB("*N/A*",$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",114,0)
 .. S IB($P(Z0,U,6),$P(Z0,U,4),+$P(Z0,U,5),$S($P(Z0,U,3)]"":$P(Z0,U,3),1:"*N/A*"))=Z
"RTN","IBCEP7C",115,0)
 . ;
"RTN","IBCEP7C",116,0)
 . ; count them
"RTN","IBCEP7C",117,0)
 . I IBFUNC="A",$P(Z0,U,8)=IBEFTFL,IBDIV=$P(Z0,U,5)!(IBDIV=0&($P(Z0,U,5)="")) D
"RTN","IBCEP7C",118,0)
 .. I ".1.2."[("."_$P(Z0,U,4)_".") S IBCNTADD($P(Z0,U,4))=$G(IBCNTADD($P(Z0,U,4)))+1 Q
"RTN","IBCEP7C",119,0)
 .. N I
"RTN","IBCEP7C",120,0)
 .. F I=1,2 S IBCNTADD(I)=$G(IBCNTADD(I))+1
"RTN","IBCEP7C",121,0)
 ; Check for duplications
"RTN","IBCEP7C",122,0)
 S IBOK=1
"RTN","IBCEP7C",123,0)
 ; Don't check if nothing is being changed.  The ID itself can be changed after return to calling program.
"RTN","IBCEP7C",124,0)
 I IBFUNC="E" S Z0=$G(^IBA(355.92,IBDA,0)) I $P(Z0,U,3)=IBCAREUN!($P(Z0,U,3)=""&(IBCAREUN="*N/A*")),IBFORM=$P(Z0,U,4),IBDIV=$P(Z0,U,5),IBITYP=$P(Z0,U,6) G FLDSQ
"RTN","IBCEP7C",125,0)
 I $G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN)) D
"RTN","IBCEP7C",126,0)
 . N Z,ZPC8 S Z=$G(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),IBFORM,IBDIV,IBCAREUN))
"RTN","IBCEP7C",127,0)
 . S ZPC8=""
"RTN","IBCEP7C",128,0)
 . I +Z S ZPC8=$P($G(^IBA(355.92,Z,0)),U,8)
"RTN","IBCEP7C",129,0)
 . S IBOK="0^DUPLICATE"_U_ZPC8
"RTN","IBCEP7C",130,0)
 I IBOK,IBFORM=0,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),1,IBDIV,IBCAREUN))!$D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),2,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^SPECIFIC"
"RTN","IBCEP7C",131,0)
 I IBOK,IBFORM'=0,IBFORM'=3,$S($D(IB($S(IBEFTFL="E":"*N/A*",1:IBITYP),0,IBDIV,IBCAREUN)):1,1:0) S IBOK="0^FORM^BOTH"
"RTN","IBCEP7C",132,0)
 ;
"RTN","IBCEP7C",133,0)
 S IBLIMIT=$S(IBEFTFL="A":6,IBEFTFL="LF":5,1:"")
"RTN","IBCEP7C",134,0)
 I IBOK,IBFUNC="A",IBEFTFL'="E" D
"RTN","IBCEP7C",135,0)
 . I ".1.2."[("."_IBFORM_".") D  Q
"RTN","IBCEP7C",136,0)
 .. I $G(IBCNTADD(IBFORM))>(IBLIMIT-1) S IBOK="0^LIMIT"
"RTN","IBCEP7C",137,0)
 . N I
"RTN","IBCEP7C",138,0)
 . I IBFORM=0 F I=1,2 I $G(IBCNTADD(I))>IBLIMIT S IBOK="0^LIMIT" Q
"RTN","IBCEP7C",139,0)
 ;
"RTN","IBCEP7C",140,0)
 I 'IBOK D
"RTN","IBCEP7C",141,0)
 . I $P(IBOK,U,2)="DUPLICATE" D  Q
"RTN","IBCEP7C",142,0)
 .. S DIR("A",1)="This ID combination is already defined",DIR("A",2)=""
"RTN","IBCEP7C",143,0)
 .. ; under "_$S($P(IBOK,U,3)="A":" Additonal IDs",$P(IBOK,U,3)="E":"Billing Provider Secondary ID",1:"VA Lab/Facility IDs")_$S(IBFUNC="A":" - try editing it instead",1:""),DIR("A",2)=" "
"RTN","IBCEP7C",144,0)
 . ;
"RTN","IBCEP7C",145,0)
 . I $P(IBOK,U,2)="BOTH" D  Q
"RTN","IBCEP7C",146,0)
 .. S DIR("A",1)="An ID combination for both form types already exists.  Delete this one",DIR("A",2)="before defining and form specific IDs"_$S(IBDIV:" for this division"),DIR("A",4)=" "
"RTN","IBCEP7C",147,0)
 . ;
"RTN","IBCEP7C",148,0)
 . I $P(IBOK,U,2)="FORM" D  Q
"RTN","IBCEP7C",149,0)
 .. I $P(IBOK,U,3)="BOTH" S DIR("A",1)="This ID already exists for both form types - Delete it to enter this ID for",DIR("A",2)=" a specific form type",DIR("A",3)=" " Q
"RTN","IBCEP7C",150,0)
 .. S DIR("A",1)="This ID already exists for a specific form type - Delete specific form type",DIR("A",2)=" ID(s) before entering one for both form types",DIR("A",3)=" "
"RTN","IBCEP7C",151,0)
 . ;     
"RTN","IBCEP7C",152,0)
 . I $P(IBOK,U,2)="LIMIT" D  Q
"RTN","IBCEP7C",153,0)
 .. S DIR("A",1)="Limit is "_IBLIMIT_" IDs for each form type",DIR("A",2)=" "
"RTN","IBCEP7C",154,0)
 .. I IBEFTFL="A" D
"RTN","IBCEP7C",155,0)
 ... S DIR("A",1)="A maximum of 6 Additional Billing Provider Sec IDs can be entered for each Form"
"RTN","IBCEP7C",156,0)
 ... S DIR("A",2)="Type.  Before you can add another ID, you must delete an existing ID."
"RTN","IBCEP7C",157,0)
 ... S DIR("A",3)=" "
"RTN","IBCEP7C",158,0)
 ;
"RTN","IBCEP7C",159,0)
 I 'IBOK S DIR(0)="EA",DIR("A")="PRESS RETURN TO CONTINUE: " W ! D ^DIR K DIR
"RTN","IBCEP7C",160,0)
 ;
"RTN","IBCEP7C",161,0)
FLDSQ Q +IBOK
"RTN","IBCEP8")
0^29^B54137838^B35023903
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320**;21-MAR-94
"RTN","IBCEP8",3,0)
 ;
"RTN","IBCEP8",4,0)
EN ; -- main entry point
"RTN","IBCEP8",5,0)
 N IBNPRV
"RTN","IBCEP8",6,0)
 K IBFASTXT
"RTN","IBCEP8",7,0)
 D FULL^VALM1
"RTN","IBCEP8",8,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",9,0)
 Q
"RTN","IBCEP8",10,0)
 ;
"RTN","IBCEP8",11,0)
HDR ; -- header code
"RTN","IBCEP8",12,0)
 K VALMHDR
"RTN","IBCEP8",13,0)
 Q
"RTN","IBCEP8",14,0)
 ;
"RTN","IBCEP8",15,0)
INIT ; Initialization
"RTN","IBCEP8",16,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",17,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",18,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",19,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",20,0)
 S IBIF=Y
"RTN","IBCEP8",21,0)
 ;
"RTN","IBCEP8",22,0)
 I IBIF="F" D
"RTN","IBCEP8",23,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",24,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",25,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",26,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",27,0)
 ;
"RTN","IBCEP8",28,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02////"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",29,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",30,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",31,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",32,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",33,0)
 S IBNPRV=+Y
"RTN","IBCEP8",34,0)
 D BLD
"RTN","IBCEP8",35,0)
INITQ Q
"RTN","IBCEP8",36,0)
 ;
"RTN","IBCEP8",37,0)
BLD ; Build/Rebuild display
"RTN","IBCEP8",38,0)
 N IBLCT,IBCT,Z,Z1,Z2
"RTN","IBCEP8",39,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8",40,0)
 S IBCT=IBCT+1
"RTN","IBCEP8",41,0)
 S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",42,0)
 I $P(Z,U,2)=2 D
"RTN","IBCEP8",43,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",44,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",45,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",46,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",47,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",48,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",49,0)
 E  D
"RTN","IBCEP8",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",51,0)
 . S Z1=$J("Address: ",15)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",52,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8",53,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",54,0)
 .. S Z1=$J("",15)_$P(Z,U,10)
"RTN","IBCEP8",55,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",56,0)
 . S Z1=$J("",15)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8",57,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",58,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",59,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",60,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",61,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8",62,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",63,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",64,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8",65,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",66,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",67,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8",68,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",69,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",70,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8",71,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",72,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8",73,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8",74,0)
 Q
"RTN","IBCEP8",75,0)
 ;
"RTN","IBCEP8",76,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8",77,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8",78,0)
 Q
"RTN","IBCEP8",79,0)
EXPND ;
"RTN","IBCEP8",80,0)
 Q
"RTN","IBCEP8",81,0)
 ;
"RTN","IBCEP8",82,0)
HELP ;
"RTN","IBCEP8",83,0)
 Q
"RTN","IBCEP8",84,0)
 ;
"RTN","IBCEP8",85,0)
EXIT ;
"RTN","IBCEP8",86,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",87,0)
 D CLEAN^VALM10
"RTN","IBCEP8",88,0)
 K IBFASTXT
"RTN","IBCEP8",89,0)
 Q
"RTN","IBCEP8",90,0)
 ;
"RTN","IBCEP8",91,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",92,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",93,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",94,0)
 ;
"RTN","IBCEP8",95,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",96,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",97,0)
 I IBNPRV D
"RTN","IBCEP8",98,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",99,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",100,0)
 . S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")
"RTN","IBCEP8",101,0)
 . D ^DIE
"RTN","IBCEP8",102,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",103,0)
 . D BLD
"RTN","IBCEP8",104,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",105,0)
 Q
"RTN","IBCEP8",106,0)
 ;
"RTN","IBCEP8",107,0)
EDITID(IBNPRV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",108,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",109,0)
 N IBPRV
"RTN","IBCEP8",110,0)
 D FULL^VALM1
"RTN","IBCEP8",111,0)
 D CLEAR^VALM1
"RTN","IBCEP8",112,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",113,0)
 D EN1^IBCEP5
"RTN","IBCEP8",114,0)
 K VALMQUIT
"RTN","IBCEP8",115,0)
 S VALMBCK="R"
"RTN","IBCEP8",116,0)
 Q
"RTN","IBCEP8",117,0)
 ;
"RTN","IBCEP8",118,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",119,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",120,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02////1"
"RTN","IBCEP8",121,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",122,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",123,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",124,0)
 S IBNPRV=+Y
"RTN","IBCEP8",125,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",126,0)
 ;
"RTN","IBCEP8",127,0)
NVAFACQ Q
"RTN","IBCEP8",128,0)
 ;
"RTN","IBCEP8",129,0)
GETFAC(IB,IBFILE,IBELE,IBSFD) ; Returns facility name,address lines or city-state-zip
"RTN","IBCEP8",130,0)
 ; IB = ien of entry in file
"RTN","IBCEP8",131,0)
 ; IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",132,0)
 ; If IBELE=0, returns name
"RTN","IBCEP8",133,0)
 ;         =1, returns address line 1
"RTN","IBCEP8",134,0)
 ;         =2, returns address line 2
"RTN","IBCEP8",135,0)
 ;         =3, returns city, state zip
"RTN","IBCEP8",136,0)
 ;         = "3C", returns city  = "3S", state    = "3Z", zip
"RTN","IBCEP8",137,0)
 ; IBSFD (optional) = Output formatter segment name if the output needs
"RTN","IBCEP8",138,0)
 ;       to be screened thru the VAMCFD^IBCEF75 procedure for the flag
"RTN","IBCEP8",139,0)
 ;       in the insurance company file
"RTN","IBCEP8",140,0)
 ;
"RTN","IBCEP8",141,0)
 N Z,IBX,IBZ
"RTN","IBCEP8",142,0)
 S IBX=""
"RTN","IBCEP8",143,0)
 ;
"RTN","IBCEP8",144,0)
 I $G(IBSFD)="SUB" D VAMCFD^IBCEF75(+$G(IBXIEN),.IBZ) I $D(IBZ),'$G(IBZ("C",1)) G GETFACX
"RTN","IBCEP8",145,0)
 ;
"RTN","IBCEP8",146,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",147,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",148,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",149,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",150,0)
 ;
"RTN","IBCEP8",151,0)
 I +IBELE=3,'IBFILE D
"RTN","IBCEP8",152,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,3) Q:IBELE["C"
"RTN","IBCEP8",153,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)) Q:IBELE["S"
"RTN","IBCEP8",154,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,4)
"RTN","IBCEP8",155,0)
 . Q
"RTN","IBCEP8",156,0)
 ;
"RTN","IBCEP8",157,0)
 I +IBELE=3,IBFILE D
"RTN","IBCEP8",158,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,6) Q:IBELE["C"
"RTN","IBCEP8",159,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P(Z,U,7))
"RTN","IBCEP8",160,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,8)
"RTN","IBCEP8",161,0)
 . Q
"RTN","IBCEP8",162,0)
GETFACX ;
"RTN","IBCEP8",163,0)
 Q IBX
"RTN","IBCEP8",164,0)
 ;
"RTN","IBCEP8",165,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",166,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",167,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",168,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",169,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",170,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form typ^bill care typ^care un^X12 code for id type
"RTN","IBCEP8",171,0)
 N Z,Z0
"RTN","IBCEP8",172,0)
 K IBZ
"RTN","IBCEP8",173,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",174,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",175,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",176,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",177,0)
 ;
"RTN","IBCEP8",178,0)
ALLIDQ Q
"RTN","IBCEP8",179,0)
 ;
"RTN","IBCEP8",180,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",181,0)
 N Z,IBZ
"RTN","IBCEP8",182,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",183,0)
 Q IBZ
"RTN","IBCEP8",184,0)
 ;
"RTN","IBCEP8",185,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",186,0)
 N Z,IBZ
"RTN","IBCEP8",187,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",188,0)
 Q IBZ
"RTN","IBCEP8",189,0)
 ;
"RTN","IBCEP8",190,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",191,0)
 N Z,IBZ
"RTN","IBCEP8",192,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",193,0)
 Q IBZ
"RTN","IBCEP8",194,0)
 ;
"RTN","IBCEP8",195,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",196,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",197,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",198,0)
 I IBZ D
"RTN","IBCEP8",199,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",200,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",201,0)
 Q IBCLIA
"RTN","IBCEP8",202,0)
 ;
"RTN","IBCEP8",203,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",204,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",205,0)
 N OK,VAL
"RTN","IBCEP8",206,0)
 S OK=1
"RTN","IBCEP8",207,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",208,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",209,0)
 Q OK
"RTN","IBCEP8",210,0)
 ;
"RTN","IBCEP8",211,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",212,0)
 ; X = data to be examined
"RTN","IBCEP8",213,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",214,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",215,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",216,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",217,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",218,0)
 N Z
"RTN","IBCEP8",219,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",220,0)
 . N Z0
"RTN","IBCEP8",221,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",222,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",223,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",224,0)
 . N Z0
"RTN","IBCEP8",225,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",226,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",227,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",228,0)
 . N Z0
"RTN","IBCEP8",229,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",230,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",231,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",232,0)
 Q (X="")
"RTN","IBCEP8",233,0)
 ;
"RTN","IBCEP8",234,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",235,0)
 ; 
"RTN","IBCEP8",236,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",237,0)
 ;
"RTN","IBCEP8",238,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",239,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",240,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",241,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",242,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",243,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",244,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",245,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",246,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",247,0)
 ; Found just one
"RTN","IBCEP8",248,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",249,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP8A")
0^44^B25216435
"RTN","IBCEP8A",1,0)
IBCEP8A ;ALB/ESG - Functions for provider ID maint ;12/27/2005
"RTN","IBCEP8A",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEP8A",3,0)
 ;
"RTN","IBCEP8A",4,0)
 Q
"RTN","IBCEP8A",5,0)
 ;
"RTN","IBCEP8A",6,0)
CLIA(IBIFN) ; Default CLIA# for claim
"RTN","IBCEP8A",7,0)
 NEW CLIA,NONVA,DIV,INST
"RTN","IBCEP8A",8,0)
 S CLIA="",IBIFN=+$G(IBIFN)
"RTN","IBCEP8A",9,0)
 S NONVA=+$P($G(^DGCR(399,IBIFN,"U2")),U,10)    ; non-VA facility ptr
"RTN","IBCEP8A",10,0)
 I NONVA S CLIA=$$CLIANVA^IBCEP8(IBIFN) G CLIAX
"RTN","IBCEP8A",11,0)
 ;
"RTN","IBCEP8A",12,0)
 ; retrieve the default VA clia# based on claim data
"RTN","IBCEP8A",13,0)
 S DIV=+$P($G(^DGCR(399,IBIFN,0)),U,22)         ; claim's division
"RTN","IBCEP8A",14,0)
 I 'DIV G CLIAX
"RTN","IBCEP8A",15,0)
 S INST=+$P($G(^DG(40.8,DIV,0)),U,7)            ; inst file pointer
"RTN","IBCEP8A",16,0)
 I 'INST G CLIAX
"RTN","IBCEP8A",17,0)
 S CLIA=$$ID^XUAF4("CLIA",INST)                 ; API for clia#
"RTN","IBCEP8A",18,0)
CLIAX ;
"RTN","IBCEP8A",19,0)
 Q CLIA
"RTN","IBCEP8A",20,0)
 ;
"RTN","IBCEP8A",21,0)
LAB(IBIFN) ; Function determines if LAB type of service is on claim
"RTN","IBCEP8A",22,0)
 ; Claim must be a HCFA-1500 claim form type
"RTN","IBCEP8A",23,0)
 NEW LAB,LN,IBXDATA
"RTN","IBCEP8A",24,0)
 S LAB=0
"RTN","IBCEP8A",25,0)
 I $$FT^IBCEF(IBIFN)'=2 G LABX    ;hcfa 1500 form types only
"RTN","IBCEP8A",26,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCEP8A",27,0)
 S LN=0
"RTN","IBCEP8A",28,0)
 F  S LN=$O(IBXDATA(LN)) Q:'LN  I $P(IBXDATA(LN),U,4)=5 S LAB=1 Q
"RTN","IBCEP8A",29,0)
LABX ;
"RTN","IBCEP8A",30,0)
 Q LAB
"RTN","IBCEP8A",31,0)
 ;
"RTN","IBCEP8A",32,0)
CLIAREQ(IBIFN) ; Function determines if the CLIA# is required for claim
"RTN","IBCEP8A",33,0)
 ; Return value=1 Yes, the CLIA# is required; otherwise 0.
"RTN","IBCEP8A",34,0)
 NEW REQ S REQ=0
"RTN","IBCEP8A",35,0)
 I $$FT^IBCEF(IBIFN)'=2 G CLIAREQX        ; hcfa-1500 claim
"RTN","IBCEP8A",36,0)
 I '$$LAB(IBIFN) G CLIAREQX               ; lab type of service
"RTN","IBCEP8A",37,0)
 ;
"RTN","IBCEP8A",38,0)
 ; this is required for VA facility
"RTN","IBCEP8A",39,0)
 I '$P($G(^DGCR(399,IBIFN,"U2")),U,10) S REQ=1 G CLIAREQX
"RTN","IBCEP8A",40,0)
 ;
"RTN","IBCEP8A",41,0)
 ; for non-VA facility, further check non-VA care type
"RTN","IBCEP8A",42,0)
 ;     Codes 1 and 3 are specifically Non-Lab
"RTN","IBCEP8A",43,0)
 I '$F(".1.3.","."_$P($G(^DGCR(399,IBIFN,"U2")),U,11)_".") S REQ=1
"RTN","IBCEP8A",44,0)
CLIAREQX ;
"RTN","IBCEP8A",45,0)
 Q REQ
"RTN","IBCEP8A",46,0)
 ;
"RTN","IBCEP8A",47,0)
MAMMO(IBIFN,IBMC) ; Function to determine the default mammography certification
"RTN","IBCEP8A",48,0)
 ; number for the claim
"RTN","IBCEP8A",49,0)
 ; Array IBMC is returned if passed by reference
"RTN","IBCEP8A",50,0)
 ;   IBMC = # of associated mammo#'s
"RTN","IBCEP8A",51,0)
 ;   IBMC(n) = [1] coding system or "" for Non-VA Facilities
"RTN","IBCEP8A",52,0)
 ;             [2] mammo cert#
"RTN","IBCEP8A",53,0)
 NEW MAMMO,NONVA,INST,CODSYS,IBMCID,CDSYS
"RTN","IBCEP8A",54,0)
 S MAMMO="",IBIFN=+$G(IBIFN),IBMC=0
"RTN","IBCEP8A",55,0)
 S NONVA=+$P($G(^DGCR(399,IBIFN,"U2")),U,10)    ; non-VA facility ptr
"RTN","IBCEP8A",56,0)
 I NONVA D  G MAMMOX
"RTN","IBCEP8A",57,0)
 . S MAMMO=$P($G(^IBA(355.93,NONVA,0)),U,15) Q:MAMMO=""
"RTN","IBCEP8A",58,0)
 . S IBMC=1,IBMC(1)=""_U_MAMMO
"RTN","IBCEP8A",59,0)
 . Q
"RTN","IBCEP8A",60,0)
 ;
"RTN","IBCEP8A",61,0)
 ; retrieve the default VA mammo# based on claim data
"RTN","IBCEP8A",62,0)
 S INST=+$$SITE^VASITE()                            ; inst file pointer
"RTN","IBCEP8A",63,0)
 I 'INST G MAMMOX
"RTN","IBCEP8A",64,0)
 ;
"RTN","IBCEP8A",65,0)
 ; Kernel API from XU*8*394 to get a list of coding systems
"RTN","IBCEP8A",66,0)
 D LCDSYS^XUAF4(.CDSYS)
"RTN","IBCEP8A",67,0)
 S CODSYS="MAMMO"
"RTN","IBCEP8A",68,0)
 F  S CODSYS=$O(CDSYS(CODSYS)) Q:$E(CODSYS,1,5)'="MAMMO"  D
"RTN","IBCEP8A",69,0)
 . S IBMCID=$$ID^XUAF4(CODSYS,INST) Q:IBMCID=""
"RTN","IBCEP8A",70,0)
 . S IBMC=IBMC+1
"RTN","IBCEP8A",71,0)
 . S IBMC(IBMC)=$P(CODSYS,"-",2)_U_IBMCID
"RTN","IBCEP8A",72,0)
 . I $P(CODSYS,"-",2)="FDA" S MAMMO=IBMCID    ; FDA is default ID#
"RTN","IBCEP8A",73,0)
 . Q
"RTN","IBCEP8A",74,0)
 I IBMC,MAMMO="" S MAMMO=$P(IBMC(1),U,2)
"RTN","IBCEP8A",75,0)
MAMMOX ;
"RTN","IBCEP8A",76,0)
 Q MAMMO
"RTN","IBCEP8A",77,0)
 ;
"RTN","IBCEP8A",78,0)
MAMMODP(IBIFN) ; Procedure to display a listing of default mammo cert#'s
"RTN","IBCEP8A",79,0)
 ; Used during input template on screen 8 HCFA
"RTN","IBCEP8A",80,0)
 NEW IBMC,IBZ
"RTN","IBCEP8A",81,0)
 I $$MAMMO(IBIFN,.IBMC)
"RTN","IBCEP8A",82,0)
 I 'IBMC W !!?3,"No default mammography certification numbers on file.",! G MAMMODPX
"RTN","IBCEP8A",83,0)
 W !!?3,"The Mammography Certification #" W:IBMC>1 "'s"
"RTN","IBCEP8A",84,0)
 W " defined for this " W:$P($G(^DGCR(399,IBIFN,"U2")),U,10) "non-"
"RTN","IBCEP8A",85,0)
 W "VA facility " W:IBMC>1 "are:" W:IBMC'>1 "is:"
"RTN","IBCEP8A",86,0)
 S IBZ=0
"RTN","IBCEP8A",87,0)
 F  S IBZ=$O(IBMC(IBZ)) Q:'IBZ  W !?7,$P(IBMC(IBZ),U,2),?21,$P(IBMC(IBZ),U,1)
"RTN","IBCEP8A",88,0)
 W !?3,"If you enter a different number it will be sent with this claim only."
"RTN","IBCEP8A",89,0)
 I $P($G(^DGCR(399,IBIFN,"U2")),U,10) W !?3,"To change the defined Mammography Certification #, use Prov ID Maint."
"RTN","IBCEP8A",90,0)
 W !
"RTN","IBCEP8A",91,0)
MAMMODPX ;
"RTN","IBCEP8A",92,0)
 Q
"RTN","IBCEP8A",93,0)
 ;
"RTN","IBCEP8A",94,0)
XRAY(IBIFN) ; Function determines if X-RAY type of service is on claim
"RTN","IBCEP8A",95,0)
 ; Claim must be a HCFA-1500 claim form type
"RTN","IBCEP8A",96,0)
 NEW XRAY,LN,IBXDATA
"RTN","IBCEP8A",97,0)
 S XRAY=0
"RTN","IBCEP8A",98,0)
 I $$FT^IBCEF(IBIFN)'=2 G XRAYX    ;hcfa 1500 form types only
"RTN","IBCEP8A",99,0)
 D F^IBCEF("N-HCFA 1500 SERVICES (PRINT)",,,IBIFN)
"RTN","IBCEP8A",100,0)
 S LN=0
"RTN","IBCEP8A",101,0)
 F  S LN=$O(IBXDATA(LN)) Q:'LN  I $P(IBXDATA(LN),U,4)=4 S XRAY=1 Q
"RTN","IBCEP8A",102,0)
XRAYX ;
"RTN","IBCEP8A",103,0)
 Q XRAY
"RTN","IBCEP8A",104,0)
 ;
"RTN","IBCEP8A",105,0)
EIN(IBIFN) ; Function to return the EIN/tax ID for either the VA facility
"RTN","IBCEP8A",106,0)
 ; or the non-VA facility.  Used for SUB-9.
"RTN","IBCEP8A",107,0)
 NEW ID,IBU2,NONVA
"RTN","IBCEP8A",108,0)
 S ID="",IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEP8A",109,0)
 S NONVA=+$P(IBU2,U,10)                         ; non-VA facility ptr
"RTN","IBCEP8A",110,0)
 I NONVA D  G EINX
"RTN","IBCEP8A",111,0)
 . S ID=$P($G(^IBA(355.93,NONVA,0)),U,9)        ; ID# from file 355.93
"RTN","IBCEP8A",112,0)
 . ;
"RTN","IBCEP8A",113,0)
 . ; if not defined in file 355.93, then use legacy field# 234 in file
"RTN","IBCEP8A",114,0)
 . ; 399 - non-va care id#.  See NONVAID^IBCEF72.
"RTN","IBCEP8A",115,0)
 . I ID="",$P(IBU2,U,12)'="" S ID=$P(IBU2,U,12)
"RTN","IBCEP8A",116,0)
 . Q
"RTN","IBCEP8A",117,0)
 ;
"RTN","IBCEP8A",118,0)
 ; VA facility
"RTN","IBCEP8A",119,0)
 S ID=$P($G(^IBE(350.9,1,1)),U,5)    ; Federal tax id from site params
"RTN","IBCEP8A",120,0)
EINX ;
"RTN","IBCEP8A",121,0)
 Q ID
"RTN","IBCEP8A",122,0)
 ;
"RTN","IBCEP8A",123,0)
BOX324(IBIFN,IBXSAVE,IBXDATA) ; Procedure which further defines and formats
"RTN","IBCEP8A",124,0)
 ; form HCFA-1500, box 32, line 4.
"RTN","IBCEP8A",125,0)
 ; This is either the facility Tax ID or it is the mammography
"RTN","IBCEP8A",126,0)
 ; certification number.
"RTN","IBCEP8A",127,0)
 ;  Input:  IBIFN, IBXSAVE array (pass by ref), IBXDATA (pass by ref)
"RTN","IBCEP8A",128,0)
 ; Output:  IBXDATA (pass by ref)
"RTN","IBCEP8A",129,0)
 ;
"RTN","IBCEP8A",130,0)
 NEW IBZ
"RTN","IBCEP8A",131,0)
 ;
"RTN","IBCEP8A",132,0)
 ; retrieve the mammo# if it exists into variable IBZ
"RTN","IBCEP8A",133,0)
 D F^IBCEF("N-MAMMOGRAPHY CERT#","IBZ",,IBIFN)
"RTN","IBCEP8A",134,0)
 ;
"RTN","IBCEP8A",135,0)
 ; If the claim is for the main VAMC and there is no mammo# then print
"RTN","IBCEP8A",136,0)
 ; nothing here.  See 364.7 iens# 348, 319, 327 for similar
"RTN","IBCEP8A",137,0)
 I '$G(IBXSAVE("REMOTE")),IBZ="" KILL IBXDATA G BOX32X
"RTN","IBCEP8A",138,0)
 ;
"RTN","IBCEP8A",139,0)
 ; If the mammo# exists, then display that
"RTN","IBCEP8A",140,0)
 I IBZ'="" S IBXDATA="Mammography Cert# "_IBZ G BOX32X
"RTN","IBCEP8A",141,0)
 ;
"RTN","IBCEP8A",142,0)
 ; Otherwise, display the facility tax id
"RTN","IBCEP8A",143,0)
 S IBXDATA="FAC. ID:"_$G(IBXDATA)
"RTN","IBCEP8A",144,0)
BOX32X ;
"RTN","IBCEP8A",145,0)
 KILL IBXSAVE("OFAC"),IBXSAVE("REMOTE")   ; cleanup
"RTN","IBCEP8A",146,0)
 Q
"RTN","IBCEP8A",147,0)
 ;
"RTN","IBCEP8A",148,0)
SUB1OK(IBIFN) ; This function determines if the claim meets the criteria
"RTN","IBCEP8A",149,0)
 ; for being eligible to output a SUB1 segment which is for professional
"RTN","IBCEP8A",150,0)
 ; purchased services.  Must be HCFA, non-VA facility, and Fee Basis.
"RTN","IBCEP8A",151,0)
 ;
"RTN","IBCEP8A",152,0)
 NEW OK,IBU2
"RTN","IBCEP8A",153,0)
 S OK=0,IBU2=$G(^DGCR(399,IBIFN,"U2"))
"RTN","IBCEP8A",154,0)
 ;
"RTN","IBCEP8A",155,0)
 I $$FT^IBCEF(IBIFN)'=2 G SX                      ; must be hcfa-1500
"RTN","IBCEP8A",156,0)
 I '$P(IBU2,U,10) G SX                            ; must be non-VA fac
"RTN","IBCEP8A",157,0)
 I '$F(".1.2.","."_$P(IBU2,U,11)_".") G SX        ; must be FEE services
"RTN","IBCEP8A",158,0)
 ;
"RTN","IBCEP8A",159,0)
 S OK=1    ; all checks passed, OK for SUB1 output
"RTN","IBCEP8A",160,0)
SX ;
"RTN","IBCEP8A",161,0)
 Q OK
"RTN","IBCEP8A",162,0)
 ;
"RTN","IBCEP9")
0^76^B73023776^B82786820
"RTN","IBCEP9",1,0)
IBCEP9 ;ALB/TMP - MASS UPDATE OF PROVIDER ID FROM FILE OR MANUAL ;08-NOV-00
"RTN","IBCEP9",2,0)
 ;;2.0;INTEGRATED BILLING;**137,200,320**;21-MAR-94
"RTN","IBCEP9",3,0)
 ;
"RTN","IBCEP9",4,0)
EN ; Get parameters and mass input provider id by ins co
"RTN","IBCEP9",5,0)
 N A,DA,DIC,DIE,DIK,DIR,DR,POP,Q,Q0,X,Y,Y3,Z,Z0
"RTN","IBCEP9",6,0)
 N IBCND,IBCU,IBCT,IBDELIM,IBFILE,IBFILEN,IBFILEP,IBFORMAT
"RTN","IBCEP9",7,0)
 N IBFT,IBINFILE,IBINS,IBL,IBN,IBOK,IBOPEN,IBPOS,IBPT,IBQUIT
"RTN","IBCEP9",8,0)
 N IBQUIT1,IBQUOTES,IBRA,IBS,IBSA,IBSTART,IBSRC,IBVERIFY,IBVNAME
"RTN","IBCEP9",9,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",10,0)
 S IBQUIT=0
"RTN","IBCEP9",11,0)
1 ; Select INSURANCE COMPANY NAME:
"RTN","IBCEP9",12,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",13,0)
 S IBQUIT1=0
"RTN","IBCEP9",14,0)
 S DIC("S")="I $P($G(^DIC(36,+Y,3)),U,13)'=""C"""
"RTN","IBCEP9",15,0)
 S DIC(0)="AEMQ",DIC="^DIC(36," D ^DIC
"RTN","IBCEP9",16,0)
 I Y'>0 G ENQ
"RTN","IBCEP9",17,0)
 S IBINS=+Y
"RTN","IBCEP9",18,0)
 S IBQUIT=$$LOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",19,0)
 I IBQUIT,$G(IBINS) D  G 1
"RTN","IBCEP9",20,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",21,0)
 . S IBINS="",IBQUIT=0
"RTN","IBCEP9",22,0)
 . W !!,"Unable to lock all associated insurance companies.",!,"Please try again later.",!!
"RTN","IBCEP9",23,0)
 ;
"RTN","IBCEP9",24,0)
2 ; get data source
"RTN","IBCEP9",25,0)
 S IBQUIT1=0
"RTN","IBCEP9",26,0)
 S DIR(0)="SA^M:Manual Entry;F:Entry from file"
"RTN","IBCEP9",27,0)
 S DIR("A")="PROVIDER ID DATA SOURCE: ",DIR("B")="Manual Entry"
"RTN","IBCEP9",28,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",29,0)
 I Y=""!("FM"'[Y)!IBQUIT1 D UNLOCK^IBCEP9B(IBINS) G 1
"RTN","IBCEP9",30,0)
 S IBSRC=Y,IBVERIFY=0
"RTN","IBCEP9",31,0)
 S IBVERIFY=(Y="M")
"RTN","IBCEP9",32,0)
 I 'IBVERIFY D  G:IBQUIT ENQ G:IBQUIT 2
"RTN","IBCEP9",33,0)
 . S DIR(0)="YA",DIR("A")="DO YOU WANT TO VIEW/VERIFY EACH ENTRY BEFORE IT GETS UPDATED?: "
"RTN","IBCEP9",34,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",35,0)
 . I Y=1 S IBVERIFY=1
"RTN","IBCEP9",36,0)
 ;
"RTN","IBCEP9",37,0)
 G:IBSRC="M" 4
"RTN","IBCEP9",38,0)
21 ; get parameters for file type
"RTN","IBCEP9",39,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",40,0)
 S IBQUIT1=0
"RTN","IBCEP9",41,0)
 S DIR(0)="SA^D:DELIMITED;F:FIXED LENGTH",DIR("B")="D",DIR("A")="SELECT FILE FORMAT: "
"RTN","IBCEP9",42,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",43,0)
 I IBQUIT1 G 2
"RTN","IBCEP9",44,0)
 S IBPOS=Y
"RTN","IBCEP9",45,0)
 I IBPOS="D" D  G:IBQUIT1 21
"RTN","IBCEP9",46,0)
 . S DIR(0)="FA^1:1",DIR("B")=",",DIR("A")="DELIMITER CHARACTER: "
"RTN","IBCEP9",47,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",48,0)
 . Q:IBQUIT1
"RTN","IBCEP9",49,0)
 . S $P(IBPOS,U,2)=Y
"RTN","IBCEP9",50,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("A")="ARE QUOTES WITHIN A FIELD DOUBLE QUOTED?: "
"RTN","IBCEP9",51,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",52,0)
 . Q:IBQUIT1
"RTN","IBCEP9",53,0)
 . S $P(IBPOS,U,3)=Y
"RTN","IBCEP9",54,0)
3 ; select external file name
"RTN","IBCEP9",55,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",56,0)
 S IBQUIT1=0
"RTN","IBCEP9",57,0)
 G:IBSRC="M" 2
"RTN","IBCEP9",58,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",59,0)
 S DIR("A")="FILE NAME PATH: ",DIR("B")=$$PWD^%ZISH
"RTN","IBCEP9",60,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",61,0)
 G:IBQUIT1 2
"RTN","IBCEP9",62,0)
 S IBFILEP=$P(Y,U)
"RTN","IBCEP9",63,0)
 S DIR(0)="FA^1:60"
"RTN","IBCEP9",64,0)
 S DIR("A")="FILE NAME: "
"RTN","IBCEP9",65,0)
 S IBSA("*")=""
"RTN","IBCEP9",66,0)
 S DIR("?")="^S Y3=$$LIST^%ZISH(IBFILEP,""IBSA"",""IBRA"") I Y3=1 S Y3="""" F  S Y3=$O(IBRA(Y3)) Q:Y3=""""  W !,Y3"
"RTN","IBCEP9",67,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,,1)
"RTN","IBCEP9",68,0)
 G:IBQUIT1 2
"RTN","IBCEP9",69,0)
 S IBFILEN=$P(Y,U)
"RTN","IBCEP9",70,0)
 K ^TMP($J),IBRA,Y3
"RTN","IBCEP9",71,0)
 N Y S Y=$$FTG^%ZISH(IBFILEP,IBFILEN,$NA(^TMP($J,1)),2)
"RTN","IBCEP9",72,0)
 I Y=0 W !,"FILE ",IBFILEP,IBFILEN," COULD NOT BE FOUND OR COULD NOT BE OPENED",! G 3
"RTN","IBCEP9",73,0)
 S IBFILE=IO
"RTN","IBCEP9",74,0)
4 ; select Provider ID Type
"RTN","IBCEP9",75,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",76,0)
 S IBQUIT1=0
"RTN","IBCEP9",77,0)
 S DIR(0)="355.9,.06"
"RTN","IBCEP9",78,0)
 I IBSRC="M" S Z=$P($G(^IBE(355.97,+$$PPTYP^IBCEP0(IBINS),0)),U) S:Z'="" DIR("B")=Z
"RTN","IBCEP9",79,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",80,0)
 G:Y=""!IBQUIT1 3
"RTN","IBCEP9",81,0)
 S IBPTYP=$P(Y,U)
"RTN","IBCEP9",82,0)
5 ; select Forms Type
"RTN","IBCEP9",83,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",84,0)
 S IBQUIT1=0
"RTN","IBCEP9",85,0)
 S DIR(0)="355.9,.04r",DIR("B")="BOTH UB92 AND HCFA 1500 FORMS"
"RTN","IBCEP9",86,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",87,0)
 G:IBQUIT1 4
"RTN","IBCEP9",88,0)
 I Y=""!("012"'[Y) G 5
"RTN","IBCEP9",89,0)
 S IBFT=$P(Y,U)
"RTN","IBCEP9",90,0)
6 ; select Bill Care Type
"RTN","IBCEP9",91,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",92,0)
 S IBQUIT1=0
"RTN","IBCEP9",93,0)
 S DIR(0)="355.9,.05r",DIR("B")="BOTH INPATIENT AND OUTPATIENT"
"RTN","IBCEP9",94,0)
 S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",95,0)
 G:IBQUIT1 5
"RTN","IBCEP9",96,0)
 I Y=""!("0123"'[$P(Y,U)) G 6
"RTN","IBCEP9",97,0)
 S IBCT=$P(Y,U)
"RTN","IBCEP9",98,0)
 ;
"RTN","IBCEP9",99,0)
 S IBCND=$$CAREUN^IBCEP3(IBINS,IBPTYP,IBFT,IBCT,IBCT=3)
"RTN","IBCEP9",100,0)
7 ; get Care Unit
"RTN","IBCEP9",101,0)
 G:IBQUIT ENQ
"RTN","IBCEP9",102,0)
 S IBQUIT1=0
"RTN","IBCEP9",103,0)
 I IBCND D  G:IBQUIT1 6
"RTN","IBCEP9",104,0)
 . S DIR(0)="355.9,.03O"
"RTN","IBCEP9",105,0)
 . S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",106,0)
 . Q:IBQUIT1
"RTN","IBCEP9",107,0)
 . S IBCU=$P(Y,U)
"RTN","IBCEP9",108,0)
 . I IBCU="" W !!,$J("",22),"***** WARNING *****",!," YOU WILL NEED TO MANUALLY ENTER THE CARE UNIT FOR EACH PROVIDER",!!
"RTN","IBCEP9",109,0)
 ;
"RTN","IBCEP9",110,0)
 ; Manual entry to get providers from VistA
"RTN","IBCEP9",111,0)
 I IBSRC="M" D MANUAL^IBCEP9B G:IBQUIT1 6
"RTN","IBCEP9",112,0)
 ; For 'OTHER' files ask position/length or delimiter/piece for data
"RTN","IBCEP9",113,0)
 I IBSRC="F" D  I IBQUIT1 G:'IBCND 6 G 7
"RTN","IBCEP9",114,0)
 . F Z="PROV. SSN^SSN^15^1","PROV. NAME^NAM^30","PROV. HCFA ID^PROF_ID^15","PROV. UB-92 ID^INST_ID^15" D  Q:IBQUIT1
"RTN","IBCEP9",115,0)
 .. I $P(IBPOS,U)'="D" D
"RTN","IBCEP9",116,0)
 ... N X
"RTN","IBCEP9",117,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",118,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",119,0)
 ... S DIR("A")="START POSITION OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",120,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")_"^1:250"
"RTN","IBCEP9",121,0)
 ... W ! S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",122,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",123,0)
 ... I X>0 D
"RTN","IBCEP9",124,0)
 .... S IBPOS($P(Z,U,2))=X
"RTN","IBCEP9",125,0)
 .... S DIR("A")="LENGTH OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",126,0)
 .... S DIR(0)="NA"_$S($P(Z,U,3):"^1:"_$P(Z,U,3),1:"")
"RTN","IBCEP9",127,0)
 .... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",128,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",129,0)
 .... S $P(IBPOS($P(Z,U,2)),U,2)=IBPOS($P(Z,U,2))+X-1
"RTN","IBCEP9",130,0)
 .. ;
"RTN","IBCEP9",131,0)
 .. I $P(IBPOS,U)="D" D
"RTN","IBCEP9",132,0)
 ... I IBFT=0!(IBFT=1) Q:Z["PROF_ID"  I Z["INST_ID" S $P(Z,U)="PROV. ID"
"RTN","IBCEP9",133,0)
 ... I IBFT=2 Q:Z["INST_ID"
"RTN","IBCEP9",134,0)
 ... W ! S DIR("A")="STARTING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",135,0)
 ... S DIR(0)="NA"_$S($P(Z,U,4)!($P(Z,U)["PROV. ID")!($P(Z,U)["_ID"):"",1:"O")
"RTN","IBCEP9",136,0)
 ... S X=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",137,0)
 ... Q:IBQUIT1
"RTN","IBCEP9",138,0)
 ... I X>0 D
"RTN","IBCEP9",139,0)
 .... S (DIR("B"),IBPOS($P(Z,U,2)))=X
"RTN","IBCEP9",140,0)
 .... S DIR("A")="ENDING '"_$P(IBPOS,U,2)_"' PIECE # OF "_$P(Z,U)_" FIELD: "
"RTN","IBCEP9",141,0)
 .... S DIR(0)="NA"_$S($P(Z,U,4):"",1:"O")_U_(IBPOS($P(Z,U,2)))_":99"
"RTN","IBCEP9",142,0)
 .... S DIR("?")="JUST PRESS THE ENTER KEY IF THIS FIELD IS CONTAINED IN ONLY 1 PIECE"
"RTN","IBCEP9",143,0)
 .... S Y=$$DIR1^IBCEP9B(.DIR,Z,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9",144,0)
 .... Q:IBQUIT1
"RTN","IBCEP9",145,0)
 .... W ! I Y>0,Y'=IBPOS($P(Z,U,2)) S $P(IBPOS($P(Z,U,2)),U,2)=Y
"RTN","IBCEP9",146,0)
 .. ;
"RTN","IBCEP9",147,0)
 . Q:IBQUIT1
"RTN","IBCEP9",148,0)
 . D READFILE^IBCEP9B
"RTN","IBCEP9",149,0)
 . ;
"RTN","IBCEP9",150,0)
P1 ;
"RTN","IBCEP9",151,0)
 S Z="" F  S Z=$O(^TMP("IBPID_IN",$J,Z)) Q:Z=""  S Z0=0 F  S Z0=$O(^TMP("IBPID_IN",$J,Z,Z0)) Q:'Z0  S Q=$G(^(Z0)) D  G:IBQUIT ENQ
"RTN","IBCEP9",152,0)
 . ;
"RTN","IBCEP9",153,0)
 . I IBSRC="M" D  Q
"RTN","IBCEP9",154,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",155,0)
 .. ; Manually add IDs
"RTN","IBCEP9",156,0)
 .. S IBN=$$DUP(+Z0_";VA(200,",IBINS,$S($G(IBCU)'="":IBCU,1:"*N/A*"),IBFT,IBCT,IBPTYP)
"RTN","IBCEP9",157,0)
 .. I 'IBN D  Q:IBQUIT!(IBN'>0)
"RTN","IBCEP9",158,0)
 ... S IBN=$$ADDID^IBCEP9B(Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",159,0)
 .. S DIE="^IBA(355.9,",DR=".07",DA=+IBN D ^DIE
"RTN","IBCEP9",160,0)
 .. I $D(Y)!($P($G(^IBA(355.9,+IBN,0)),U,7)="") D
"RTN","IBCEP9",161,0)
 ... I $P(IBN,U,3) S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",162,0)
 ... S DIR(0)="YA",DIR("B")="NO",DIR("A")="DO YOU WANT TO STOP ENTERING PROVIDER IDs?: "
"RTN","IBCEP9",163,0)
 ... S Y=$$DIR(.DIR,.IBQUIT,.IBQUIT1,,1,1)
"RTN","IBCEP9",164,0)
 ... I Y=1 S IBQUIT=1
"RTN","IBCEP9",165,0)
 .. S IBID=$P($G(^IBA(355.9,+IBN,0)),U,7)
"RTN","IBCEP9",166,0)
 .. S:$L(IBID) ^TMP("IBPID_IN",$J,U,Z0,"INST_ID")=IBID
"RTN","IBCEP9",167,0)
 .. I IBID="" K ^TMP("IBPID_IN",$J,U,Z0)
"RTN","IBCEP9",168,0)
 .. I IBQUIT=1 F  S Z0=$O(^TMP("IBPID_IN",$J,U,Z0)) Q:Z0=""  K ^TMP("IBPID_IN",$J,U,Z0) ; user wants to stop, remove all remaining names from list
"RTN","IBCEP9",169,0)
 . ;
"RTN","IBCEP9",170,0)
 . S IBOK=1
"RTN","IBCEP9",171,0)
 . N IBX,IBID
"RTN","IBCEP9",172,0)
 . M IBX=^TMP("IBPID_IN",$J,Z,Z0)
"RTN","IBCEP9",173,0)
 . I IBSRC="F" S IBID=$S(IBFT=0!(IBFT=1):$G(IBX("INST_ID")),1:$G(IBX("PROF_ID")))
"RTN","IBCEP9",174,0)
 . I $G(IBVERIFY) D  ; Display record, ask OK to file id's
"RTN","IBCEP9",175,0)
 .. D DISP^IBCEP9B(Q,0,IBINS,IBPTYP,IBFT,IBCT,$G(IBCU),,IBSRC)
"RTN","IBCEP9",176,0)
 .. W !,"PROVIDER ID: ",IBID
"RTN","IBCEP9",177,0)
 .. S DIR("A")="OK TO FILE THIS ID FOR THIS PROVIDER?: ",DIR(0)="YA",DIR("B")="NO"
"RTN","IBCEP9",178,0)
 .. S Y=$$DIR(.DIR,,,,1,1)
"RTN","IBCEP9",179,0)
 .. I Y'=1 D  Q  ; Send to error array
"RTN","IBCEP9",180,0)
 ... S IBOK=0
"RTN","IBCEP9",181,0)
 ... S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ","PROV ID")=IBID
"RTN","IBCEP9",182,0)
 ... S ^TMP("IBPID_IN",$J,U,Z0,0)="NO PRINT"
"RTN","IBCEP9",183,0)
 ... N Z1
"RTN","IBCEP9",184,0)
 ... S Z1="" F  S Z1=$O(IBX(Z1)) Q:Z1=""  I $G(IBX(Z1))'="",Z1'["_ID" S ^TMP("IBPID-ERR",$J,2,$P(IBX,U),$P(IBX,U,2)_" ",Z1)=IBX(Z1)
"RTN","IBCEP9",185,0)
 . I IBOK D  ; Add/update the record
"RTN","IBCEP9",186,0)
 .. I IBSRC="F" D
"RTN","IBCEP9",187,0)
 ... I IBID'="" D
"RTN","IBCEP9",188,0)
 .... S IBN=$$ADDID^IBCEP9B(+Z0,IBINS,$G(IBCU),IBFT,IBCT,IBPTYP,,.IBQUIT)
"RTN","IBCEP9",189,0)
 .... I IBQUIT D:IBN>0  Q
"RTN","IBCEP9",190,0)
 ..... S DA=+IBN,DIK="^IBA(355.9," D ^DIK
"RTN","IBCEP9",191,0)
 .... I IBN>0 S DIE="^IBA(355.9,",DA=+IBN,DR=".07////"_IBID D ^DIE
"RTN","IBCEP9",192,0)
 .. ;
"RTN","IBCEP9",193,0)
 ;
"RTN","IBCEP9",194,0)
ENQ ; Print report, exit
"RTN","IBCEP9",195,0)
 I $G(IBINS) D
"RTN","IBCEP9",196,0)
 . D COPY^IBCEPCID(IBINS)
"RTN","IBCEP9",197,0)
 . D UNLOCK^IBCEP9B(IBINS)
"RTN","IBCEP9",198,0)
 ;
"RTN","IBCEP9",199,0)
 I ($D(^TMP("IBPID-ERR",$J)))!($D(^TMP("IBPID_IN",$J))) D
"RTN","IBCEP9",200,0)
 . N %ZIS,ZTSAVE,ZTRTN,ZTDESC,IBDUZ
"RTN","IBCEP9",201,0)
 . S IBDUZ=$G(DUZ)
"RTN","IBCEP9",202,0)
 . S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCEP9",203,0)
 . I $D(IO("Q")) K IO("Q") D  D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
"RTN","IBCEP9",204,0)
 .. S ZTRTN="PRTERR^IBCEP9B",ZTSAVE("^TMP(""IBPID-ERR"",$J,")=""
"RTN","IBCEP9",205,0)
 .. S ZTSAVE("^TMP(""IBPID_IN"",$J,")="",ZTSAVE("IB*")=""
"RTN","IBCEP9",206,0)
 .. S ZTDESC="IB - PROVIDER ID BATCH UPDATE ERROR LOG"
"RTN","IBCEP9",207,0)
 . U IO
"RTN","IBCEP9",208,0)
 . D PRTERR^IBCEP9B
"RTN","IBCEP9",209,0)
 K ^TMP("IBPID_IN",$J),^TMP("IBPID-ERR",$J),^TMP("IBPID",$J)
"RTN","IBCEP9",210,0)
 U IO(0)
"RTN","IBCEP9",211,0)
 Q
"RTN","IBCEP9",212,0)
 ;
"RTN","IBCEP9",213,0)
DUP(IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP) ; Check if provider id record already exists in file 355.9
"RTN","IBCEP9",214,0)
 Q +$O(^IBA(355.9,"AUNIQ",IBPRV,IBINS,IBCU,IBFT,IBCT,IBPTYP,0))
"RTN","IBCEP9",215,0)
 ;
"RTN","IBCEP9",216,0)
ERREOF ; Traps EOF error on file read for non-DSM systems
"RTN","IBCEP9",217,0)
 N IBERROR S IBERROR=$$EC^%ZOSV
"RTN","IBCEP9",218,0)
 I IBERROR["ENDOFFILE" D CLOSE(.IBOPEN) G ENQ
"RTN","IBCEP9",219,0)
 D ^%ZTER
"RTN","IBCEP9",220,0)
 Q
"RTN","IBCEP9",221,0)
 ;
"RTN","IBCEP9",222,0)
CLOSE(IBOPEN) ; Close file
"RTN","IBCEP9",223,0)
 D CLOSE^%ZISH("IBINFILE") S IBOPEN=0
"RTN","IBCEP9",224,0)
 Q
"RTN","IBCEP9",225,0)
 ;
"RTN","IBCEP9",226,0)
DIR(DIR,IBQUIT,IBQUIT1,X,IBW1,IBW2) ; Standard call to ^DIR
"RTN","IBCEP9",227,0)
 ;  Inputs DIR array
"RTN","IBCEP9",228,0)
 ;  Returns IBQUIT,IBQUIT1,X if passed by reference
"RTN","IBCEP9",229,0)
 ;    AND
"RTN","IBCEP9",230,0)
 ;      FUNCTION returns the value of Y
"RTN","IBCEP9",231,0)
 ;  IBW1 = 1 if initial write ! should be done
"RTN","IBCEP9",232,0)
 ;  IBW2 = 1 if last write ! should be done
"RTN","IBCEP9",233,0)
 N DIROUT,DTOUT,DUOUT,DA
"RTN","IBCEP9",234,0)
 W:$G(IBW1) ! D ^DIR K DIR W:$G(IBW2) !
"RTN","IBCEP9",235,0)
 S (IBQUIT,IBQUIT1)=0
"RTN","IBCEP9",236,0)
 S DIR("?")="Enter '^' to back up one prompt or '^^' to exit the option"
"RTN","IBCEP9",237,0)
 I $D(DIROUT) S (IBQUIT,IBQUIT1)=1
"RTN","IBCEP9",238,0)
 I $D(DTOUT)!$D(DUOUT) S IBQUIT1=1
"RTN","IBCEP9",239,0)
 Q Y
"RTN","IBCEP9",240,0)
 ;
"RTN","IBCEP9",241,0)
ERR ; Error list
"RTN","IBCEP9",242,0)
 ;; INVALID OR MISSING SSN - NO PROVIDER MATCH FOUND
"RTN","IBCEP9",243,0)
 ;; NO UPDATE PER USER REQUEST
"RTN","IBCEP9",244,0)
 ;;
"RTN","IBCEP9B")
0^77^B57215054^B40515997
"RTN","IBCEP9B",1,0)
IBCEP9B ;ALB/TMP - UPDATE OF PROVIDER ID FROM FILE UTILITIES ;14-NOV-00
"RTN","IBCEP9B",2,0)
 ;;2.0;INTEGRATED BILLING;**137,200,320**;21-MAR-94
"RTN","IBCEP9B",3,0)
 ;
"RTN","IBCEP9B",4,0)
 Q
"RTN","IBCEP9B",5,0)
 ;
"RTN","IBCEP9B",6,0)
READFILE ; Read records stored in ^TMP($J
"RTN","IBCEP9B",7,0)
 ;
"RTN","IBCEP9B",8,0)
 N D,DA,DIC,IBCT,IBP,IBQUIT,IBS,IBX,P,P3,X,Y,Z
"RTN","IBCEP9B",9,0)
 S (IBCT,IBQUIT,IBQUIT1,IBS)=0
"RTN","IBCEP9B",10,0)
 U IO(0)
"RTN","IBCEP9B",11,0)
 ;
"RTN","IBCEP9B",12,0)
 F  S IBCT=$O(^TMP($J,IBCT)) Q:'IBCT  S X=$G(^(IBCT)) I X'="" D  Q:IBQUIT
"RTN","IBCEP9B",13,0)
 . D  Q:IBQUIT
"RTN","IBCEP9B",14,0)
 .. I $P($G(IBPOS),U)="D" D
"RTN","IBCEP9B",15,0)
 ... D CSV(X,.IBX,$P(IBPOS,U,2),$P(IBPOS,U,3))
"RTN","IBCEP9B",16,0)
 ... D DSETUP(.IBX,.IBPOS,.P) K IBX
"RTN","IBCEP9B",17,0)
 .. I $P($G(IBPOS),U)'="D" D FSETUP(X,.IBPOS,.P)
"RTN","IBCEP9B",18,0)
 . ;
"RTN","IBCEP9B",19,0)
 . I $G(P(1))'="" S P(1)=$$NOPUNCT^IBCEF(P(1),1),X=P(1),D="SSN",DIC="^VA(200,",DIC(0)="" D IX^DIC
"RTN","IBCEP9B",20,0)
 . S IBP=+Y,IBVNAME=$P(Y,U,2)
"RTN","IBCEP9B",21,0)
 . I $S($G(P(1))="":1,1:Y'>0) D  Q
"RTN","IBCEP9B",22,0)
 .. S ^TMP("IBPID-ERR",$J,1,$S($G(P(1))'="":P(1),1:"NO SSN"),$G(P(2))_" ","??")=""
"RTN","IBCEP9B",23,0)
 .. N IBID
"RTN","IBCEP9B",24,0)
 .. S IBID=$S(IBFT=0!(IBFT=1):$G(P("INST_ID")),1:$G(P("PROF_ID")))
"RTN","IBCEP9B",25,0)
 .. S ^TMP("IBPID-ERR",$J,1,$S($G(P(1))'="":P(1),1:"NO SSN"),$G(P(2))_" ","PROV ID")=IBID
"RTN","IBCEP9B",26,0)
 . ;
"RTN","IBCEP9B",27,0)
 . S ^TMP("IBPID_IN",$J,U,IBP)=P(1)_U_P(2)_U_IBVNAME
"RTN","IBCEP9B",28,0)
 . F Q0=0,"TID","UPIN","INST_ID","PROF_ID","CU","CRED" S ^TMP("IBPID_IN",$J,U,IBP,Q0)=$G(P(Q0))
"RTN","IBCEP9B",29,0)
 Q
"RTN","IBCEP9B",30,0)
 ;
"RTN","IBCEP9B",31,0)
CSV(X,IBX,IBDEL,IBQUOTES) ; Parse out fields from a delimited file
"RTN","IBCEP9B",32,0)
 ; X = data string in CSV format to be parsed
"RTN","IBCEP9B",33,0)
 ; IBX = array returned if passed by reference, subscripted by field #
"RTN","IBCEP9B",34,0)
 ; IBDEL = the delimiter
"RTN","IBCEP9B",35,0)
 ; If IBQUOTES=1, quoted strings are double quoted within a field
"RTN","IBCEP9B",36,0)
 N FC,I,PC,QCT,QM,QM2,QM4,STR,TPC
"RTN","IBCEP9B",37,0)
 S FC=0,TPC=$L(X,IBDEL),QM=$C(34),QM2=QM_QM,QM4=QM2_QM2
"RTN","IBCEP9B",38,0)
 F PC=1:1:TPC D
"RTN","IBCEP9B",39,0)
 . S STR=$P(X,IBDEL,PC)
"RTN","IBCEP9B",40,0)
 . S FC=FC+1
"RTN","IBCEP9B",41,0)
 . I (STR=QM2)!(STR=QM4) S IBX(FC)="" Q
"RTN","IBCEP9B",42,0)
 . I $E(STR,1)=QM D
"RTN","IBCEP9B",43,0)
 .. F QCT=0:1 Q:$E(STR,QCT+1)'=QM
"RTN","IBCEP9B",44,0)
 .. F  Q:($E(STR,1,QCT)=$E(STR,$L(STR)-(QCT-1),$L(STR)))  S PC=PC+1 Q:PC>TPC  S STR=STR_IBDEL_$P(X,IBDEL,PC)
"RTN","IBCEP9B",45,0)
 .. I PC>TPC S IBX(0)="-1^UNMATCHED QUOTE MARKS" Q
"RTN","IBCEP9B",46,0)
 .. F  Q:$E(STR,1)'=QM  I $E(STR,$L(STR))=QM S STR=$E(STR,2,$L(STR)-1)
"RTN","IBCEP9B",47,0)
 . I IBQUOTES,STR[QM2 D
"RTN","IBCEP9B",48,0)
 .. F I=1:1:$L(STR) I $E(STR,I,I+1)=QM2 S STR=$E(STR,1,I)_$E(STR,I+2,9999)
"RTN","IBCEP9B",49,0)
 . S IBX(FC)=STR
"RTN","IBCEP9B",50,0)
 Q
"RTN","IBCEP9B",51,0)
 ;
"RTN","IBCEP9B",52,0)
MANUAL ; Manual entry to get providers from VistA
"RTN","IBCEP9B",53,0)
 N IBCRED,IBDA,IBNAM,IBSSN
"RTN","IBCEP9B",54,0)
 ; S IBCNT=0 ; this looks like extraneous code, IBCNT not used anywhere.
"RTN","IBCEP9B",55,0)
 F  D  I X=""!(X["^") Q
"RTN","IBCEP9B",56,0)
 . S Y=$$LOOKUP^XUSER Q:X=""  I X["^" S IBQUIT1=1 Q
"RTN","IBCEP9B",57,0)
 . S IBDA=+Y,IBNAM=$P(Y,U,2)
"RTN","IBCEP9B",58,0)
 . S IBSSN=$$GET1^DIQ(200,IBDA_",",9,"I")
"RTN","IBCEP9B",59,0)
 . S IBCRED=$$GET1^DIQ(200,IBDA_",",10.6,"I")
"RTN","IBCEP9B",60,0)
 . S ^TMP("IBPID_IN",$J,U,IBDA)=IBSSN_U_IBNAM_" "_IBCRED
"RTN","IBCEP9B",61,0)
 Q
"RTN","IBCEP9B",62,0)
 ;
"RTN","IBCEP9B",63,0)
DIR1(DIR,Z,IBQUIT,IBQUIT1) ; Ask position
"RTN","IBCEP9B",64,0)
 N X,Y
"RTN","IBCEP9B",65,0)
 S Y=$$DIR^IBCEP9(.DIR,.IBQUIT,.IBQUIT1)
"RTN","IBCEP9B",66,0)
 I IBQUIT1 S Y="" G DIRQ
"RTN","IBCEP9B",67,0)
 I $P(Z,U,4),Y'>0 S Y="",(IBQUIT1,IBQUIT)=1
"RTN","IBCEP9B",68,0)
 I Y'>0 S Y=""
"RTN","IBCEP9B",69,0)
DIRQ Q Y
"RTN","IBCEP9B",70,0)
 ;
"RTN","IBCEP9B",71,0)
DISP(Q,IBID,IBINS,IBPTYP,IBFT,IBCT,IBCU,IBPID,IBSRC) ; Display provider data
"RTN","IBCEP9B",72,0)
 ;  includes ID data if IBID=1
"RTN","IBCEP9B",73,0)
 ; Q = SSN^provider name from input^provider name from file #200
"RTN","IBCEP9B",74,0)
 ; IBPID = array of id numbers to be stored
"RTN","IBCEP9B",75,0)
 N A,IBL,Q0,Z
"RTN","IBCEP9B",76,0)
 S $P(Q,U,2)=$$FLEN($P(Q,U,2))
"RTN","IBCEP9B",77,0)
 S Q0(1)="PROVIDER : "_$P(Q,U)_$S($P(Q,U,2)'="":" ("_$P(Q,U,2)_")",1:"")_$S(IBSRC="F":" <- input file data",1:"")
"RTN","IBCEP9B",78,0)
 S Q0(2)="" S:IBSRC="F" Q0(2)=$J("("_$P(Q,U,3),22+$L($P(Q,U,3)))_") <- VA match"
"RTN","IBCEP9B",79,0)
 S IBL=0
"RTN","IBCEP9B",80,0)
 D DISP^IBCEP4("Q0",IBINS,IBPTYP,IBFT,IBCT,3,.IBL)
"RTN","IBCEP9B",81,0)
 I $G(IBCU)'="" S Q0(IBL+1)="CARE UNIT: "_IBCU
"RTN","IBCEP9B",82,0)
 W !
"RTN","IBCEP9B",83,0)
 S A=0 F  S A=$O(Q0(A)) Q:'A  W !,Q0(A)
"RTN","IBCEP9B",84,0)
 I $G(IBID),$O(IBPID(""))'="" D  ; Display id's to be filed
"RTN","IBCEP9B",85,0)
 . W ! S Z="" F  S Z=$O(IBPID(Z)) Q:Z=""  I IBPID(Z)'="" D
"RTN","IBCEP9B",86,0)
 .. W !,$S(Z="TID":"TAX ID NUMBER",Z="INST_ID":"INSTITUTIONAL ID",Z="PROF_ID":"PROFESSIONAL ID",Z="UPIN":"UPIN",1:"PROV ID"),": ",IBPID(Z)
"RTN","IBCEP9B",87,0)
 Q
"RTN","IBCEP9B",88,0)
 ;
"RTN","IBCEP9B",89,0)
DSETUP(IBX,IBPOS,P) ; Set up the subscripted array P with the correct data
"RTN","IBCEP9B",90,0)
 ; from IBX(pc #) based on the parameters in array IBPOS
"RTN","IBCEP9B",91,0)
 ; RETURNED: P(data index)=data value (pass by reference)
"RTN","IBCEP9B",92,0)
 N Q,Z,Z0
"RTN","IBCEP9B",93,0)
 S Z=$G(IBPOS("SSN")),P(1)=""
"RTN","IBCEP9B",94,0)
 F Z0=+Z:1:$S('$P(Z,U,2):Z,1:$P(Z,U,2)) S P(1)=P(1)_$S(P(1)'=""&($G(IBX(Z0))'=""):" ",1:"")_$G(IBX(Z0))
"RTN","IBCEP9B",95,0)
 S Z=$G(IBPOS("NAM")),P(2)=""
"RTN","IBCEP9B",96,0)
 F Z0=+Z:1:$S('$P(Z,U,2):Z,1:$P(Z,U,2)) S P(2)=P(2)_$S(P(2)'=""&($G(IBX(Z0))'=""):" ",1:"")_$G(IBX(Z0))
"RTN","IBCEP9B",97,0)
 F Q="TID","UPIN","INST_ID","PROF_ID","CRED","CU","LIC" D
"RTN","IBCEP9B",98,0)
 . S Z=$G(IBPOS(Q)),P(Q)=""
"RTN","IBCEP9B",99,0)
 . Q:'Z
"RTN","IBCEP9B",100,0)
 . F Z0=+Z:1:$S('$P(Z,U,2):Z,1:$P(Z,U,2)) S P(Q)=P(Q)_$S(P(Q)'=""&($G(IBX(Z0))'=""):" ",1:"")_$G(IBX(Z0))
"RTN","IBCEP9B",101,0)
 Q
"RTN","IBCEP9B",102,0)
 ;
"RTN","IBCEP9B",103,0)
FSETUP(X,IBPOS,P) ;Set up the subscripted array P with the correct data
"RTN","IBCEP9B",104,0)
 ; from record data in X, based on the parameters in array IBPOS for a
"RTN","IBCEP9B",105,0)
 ; fixed length data field format
"RTN","IBCEP9B",106,0)
 ; RETURNED: P(data index)=data value (pass by reference)
"RTN","IBCEP9B",107,0)
 ;
"RTN","IBCEP9B",108,0)
 N Q,Z
"RTN","IBCEP9B",109,0)
 S Z=$G(IBPOS("SSN")),P(1)=""
"RTN","IBCEP9B",110,0)
 S P(1)=$E(X,+Z,$S($P(Z,U,2):$P(Z,U,2),1:+Z))
"RTN","IBCEP9B",111,0)
 S Z=$G(IBPOS("NAM")),P(2)=""
"RTN","IBCEP9B",112,0)
 S P(2)=$E(X,+Z,$S($P(Z,U,2):$P(Z,U,2),1:+Z))
"RTN","IBCEP9B",113,0)
 F Q="TID","UPIN","INST_ID","PROF_ID","CRED","CU","LIC" D
"RTN","IBCEP9B",114,0)
 . S Z=$G(IBPOS(Q)),P(Q)=""
"RTN","IBCEP9B",115,0)
 . Q:'Z
"RTN","IBCEP9B",116,0)
 . S P(Q)=$$FLEN($E(X,+Z,$S($P(Z,U,2):$P(Z,U,2),1:+Z)))
"RTN","IBCEP9B",117,0)
 Q
"RTN","IBCEP9B",118,0)
 ;
"RTN","IBCEP9B",119,0)
FLEN(IBX) ; Strip out trailing spaces from field
"RTN","IBCEP9B",120,0)
 ; FUNCTION returns stripped data
"RTN","IBCEP9B",121,0)
 N Z,IB,IB1
"RTN","IBCEP9B",122,0)
 S IB1=IBX,IB=$TR(IB1," ")
"RTN","IBCEP9B",123,0)
 I IB'="" F Z=$L(IB1):-1:1 I $E(IB1,Z)'=" " S IB=$E(IB1,1,Z) Q
"RTN","IBCEP9B",124,0)
 Q IB
"RTN","IBCEP9B",125,0)
 ;
"RTN","IBCEP9B",126,0)
ADDID(IB200,IBINS,IBCU,IBFT,IBCT,IBPTYP,IBQUIT,IBQUIT1) ; Add ID record (file 355.9) if not already there
"RTN","IBCEP9B",127,0)
 N DIC,X,Y,DO,DD,DLAYGO,DIR
"RTN","IBCEP9B",128,0)
 S X=IB200_";VA(200,"
"RTN","IBCEP9B",129,0)
 S Y=+$O(^IBA(355.9,"AUNIQ",X,$S(IBINS:IBINS,1:"*ALL*"),$S($G(IBCU)'="":IBCU,1:"*N/A*"),IBFT,IBCT,IBPTYP,0))
"RTN","IBCEP9B",130,0)
 I 'Y D
"RTN","IBCEP9B",131,0)
 . S DIC(0)="L",DIC="^IBA(355.9,",DLAYGO=355.9,DIC("DR")=".02////"_IBINS_$S($G(IBCU)'="":";.03////"_IBCU,1:"")_";.04////"_IBFT_";.05////"_IBCT_";.06////"_IBPTYP
"RTN","IBCEP9B",132,0)
 . D FILE^DICN K DIC,DO,DD,DLAYGO
"RTN","IBCEP9B",133,0)
 I Y'>0 D  Q
"RTN","IBCEP9B",134,0)
 . S DIR(0)="AE",DIR("A",1)="A PROBLEM WAS ENCOUNTERED ADDING THIS PROVIDER ID RECORD - NO RECORD ADDED",DIR("A")="PRESS ENTER TO CONTINUE "
"RTN","IBCEP9B",135,0)
 . S Y=$$DIR^IBCEP9(.DIR,.IBQUIT,.IBQUIT1,,1,1)
"RTN","IBCEP9B",136,0)
 S IBN=Y
"RTN","IBCEP9B",137,0)
 Q $S(IBN>0:IBN,1:0)
"RTN","IBCEP9B",138,0)
 ;
"RTN","IBCEP9B",139,0)
PRTERR ; Prints error report
"RTN","IBCEP9B",140,0)
 N IBPAGE,Z,Z0,Z1,Z2,Z3,IBLCT,IBSTOP,IBHDT
"RTN","IBCEP9B",141,0)
 W:$E(IOST,1,2)["C-" @IOF
"RTN","IBCEP9B",142,0)
 I $D(^TMP("IBPID-ERR",$J)) D
"RTN","IBCEP9B",143,0)
 . S IBSTOP=0,IBLCT=$$HDR(.IBPAGE,.IBSTOP,.IBHDT)
"RTN","IBCEP9B",144,0)
 . S Z=0 F  S Z=$O(^TMP("IBPID-ERR",$J,Z)) Q:'Z  W !!,$P($T(ERR+Z^IBCEP9),";;",2)_":" D
"RTN","IBCEP9B",145,0)
 .. S Z0=""
"RTN","IBCEP9B",146,0)
 .. F  S Z0=$O(^TMP("IBPID-ERR",$J,Z,Z0)) Q:Z0=""  S IBLCT=IBLCT+1 S:(IBLCT+5)>IOSL IBLCT=$$HDR(.IBPAGE,.IBSTOP) Q:IBSTOP  D
"RTN","IBCEP9B",147,0)
 ... S Z1="" F  S Z1=$O(^TMP("IBPID-ERR",$J,Z,Z0,Z1)) Q:Z1=""  W !,$E(Z0_$J("",9),1,9) W:$P(Z1,U)'="" "  "_$E($P(Z1,U)_$J("",40),1,40) D
"RTN","IBCEP9B",148,0)
 .... S Z2="" F  S Z2=$O(^TMP("IBPID-ERR",$J,Z,Z0,Z1,Z2)) Q:Z2=""  S Z3=$G(^(Z2)) I Z3'="" D
"RTN","IBCEP9B",149,0)
 ..... W "  "_$S(Z2="CU":"CARE UNIT",Z2="CRED":"CREDENTIALS",Z2="TID":"TAX ID #",Z2="LIC_ST":"LICENSE STATE",Z2="LIC":"LICENSE",Z2="UPIN":"UPIN",1:Z2)_": "_Z3
"RTN","IBCEP9B",150,0)
FILED ; Prints all filed records
"RTN","IBCEP9B",151,0)
 I $D(^TMP("IBPID_IN",$J)) D
"RTN","IBCEP9B",152,0)
 . S IBSTOP=0,IBLCT=$$HDR(.IBPAGE,.IBSTOP,.IBHDT)
"RTN","IBCEP9B",153,0)
 . W !!," RECORDS SELECTED FOR FILING:"
"RTN","IBCEP9B",154,0)
 . S Z0=""
"RTN","IBCEP9B",155,0)
 . F  S Z0=$O(^TMP("IBPID_IN",$J,U,Z0)) Q:Z0=""  S IBLCT=IBLCT+1 S:(IBLCT+5)>IOSL IBLCT=$$HDR(.IBPAGE,.IBSTOP) Q:IBSTOP  D
"RTN","IBCEP9B",156,0)
 .. I $G(^TMP("IBPID_IN",$J,U,Z0,0))="NO PRINT" S:IBLCT>6 IBLCT=IBLCT-1 Q
"RTN","IBCEP9B",157,0)
 .. S Z=^TMP("IBPID_IN",$J,U,Z0)
"RTN","IBCEP9B",158,0)
 .. W !,$P(Z,U,1),?12,$P(Z,U,2),?52,$G(^TMP("IBPID_IN",$J,U,Z0,"INST_ID"))
"RTN","IBCEP9B",159,0)
 ;
"RTN","IBCEP9B",160,0)
 I $E(IOST,1,2)["C-",'IBSTOP K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEP9B",161,0)
 W @IOF
"RTN","IBCEP9B",162,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCEP9B",163,0)
 I '$D(ZTQUEUED) W ! D ^%ZISC
"RTN","IBCEP9B",164,0)
 Q
"RTN","IBCEP9B",165,0)
HDR(PG,IBSTOP,IBHDT) ; Prints error report header, function returns # of lines used
"RTN","IBCEP9B",166,0)
 ; PG = the last page # printed
"RTN","IBCEP9B",167,0)
 ; IBHDT = the run date of the report
"RTN","IBCEP9B",168,0)
 N Z,IBLCT
"RTN","IBCEP9B",169,0)
 S IBLCT=0
"RTN","IBCEP9B",170,0)
 I '$G(PG) S IBHDT="RUN DATE: "_$$FMTE^XLFDT($$NOW^XLFDT(),2)_U_"RUN BY: "_$P($G(^VA(200,+$G(IBDUZ),0)),U)
"RTN","IBCEP9B",171,0)
 I $G(PG),$E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) G:IBSTOP HDRQ  W @IOF
"RTN","IBCEP9B",172,0)
 S PG=$G(PG)+1
"RTN","IBCEP9B",173,0)
 W $J("",23)_"BATCH UPDATE OF PROVIDER ID REPORT"_$J("",13)_"PAGE: ",PG
"RTN","IBCEP9B",174,0)
 W !,$J("",(80-$L($P($G(IBHDT),U)))\2),$P($G(IBHDT),U)
"RTN","IBCEP9B",175,0)
 W !,$J("",(80-$L($P($G(IBHDT),U,2)))\2),$P($G(IBHDT),U,2)
"RTN","IBCEP9B",176,0)
 W !!,"    INSURANCE CO: "_$P($G(^DIC(36,+$G(IBINS),0)),U)
"RTN","IBCEP9B",177,0)
 W !,"PROVIDER ID TYPE: "_$P($G(^IBE(355.97,+$G(IBPTYP),0)),U)
"RTN","IBCEP9B",178,0)
 W !,"       FORM TYPE: "_$$EXPAND^IBTRE(355.91,.04,$G(IBFT))
"RTN","IBCEP9B",179,0)
 W !,"       CARE TYPE: "_$$EXPAND^IBTRE(355.91,.05,$G(IBCT))
"RTN","IBCEP9B",180,0)
 S IBLCT=7
"RTN","IBCEP9B",181,0)
 I $G(IBCU)'="" W !,$J("",7)_"CARE UNIT: "_IBCU S IBLCT=IBLCT+1
"RTN","IBCEP9B",182,0)
 S Z="",$P(Z,"=",81)="",IBLCT=IBLCT+1
"RTN","IBCEP9B",183,0)
 W !,Z
"RTN","IBCEP9B",184,0)
HDRQ Q $G(IBLCT)
"RTN","IBCEP9B",185,0)
 ;
"RTN","IBCEP9B",186,0)
LOCK(IBINS) ; Lock Parent and Children up
"RTN","IBCEP9B",187,0)
 N IBQUIT
"RTN","IBCEP9B",188,0)
 S IBQUIT=0
"RTN","IBCEP9B",189,0)
 I $P($G(^DIC(36,IBINS,3)),U,13)="P" D
"RTN","IBCEP9B",190,0)
 . L +^DIC(36,IBINS):5 E  S IBQUIT=1 Q
"RTN","IBCEP9B",191,0)
 . N CHILD
"RTN","IBCEP9B",192,0)
 . S CHILD="" F  S CHILD=$O(^DIC(36,"APC",IBINS,CHILD)) Q:'+CHILD  D  Q:IBQUIT
"RTN","IBCEP9B",193,0)
 .. L +^DIC(36,CHILD):5 E  S IBQUIT=1
"RTN","IBCEP9B",194,0)
 Q IBQUIT
"RTN","IBCEP9B",195,0)
 ;
"RTN","IBCEP9B",196,0)
UNLOCK(IBINS) ; Unlock the family
"RTN","IBCEP9B",197,0)
 I $P($G(^DIC(36,IBINS,3)),U,13)="P" D
"RTN","IBCEP9B",198,0)
 . L -^DIC(36,IBINS)
"RTN","IBCEP9B",199,0)
 . N CHILD
"RTN","IBCEP9B",200,0)
 . S CHILD="" F  S CHILD=$O(^DIC(36,"APC",IBINS,CHILD)) Q:'+CHILD  D
"RTN","IBCEP9B",201,0)
 .. L -^DIC(36,CHILD)
"RTN","IBCEP9B",202,0)
 Q
"RTN","IBCEP9B",203,0)
 ;
"RTN","IBCEPA")
0^30^B50476758
"RTN","IBCEPA",1,0)
IBCEPA ; ; 21-OCT-2005
"RTN","IBCEPA",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPA",3,0)
EN ; -- main entry point for IBCE 2ND PRVID CARE UNIT MAINT
"RTN","IBCEPA",4,0)
 D EN^VALM("IBCE 2ND PRVID CARE UNIT MAINT")
"RTN","IBCEPA",5,0)
 Q
"RTN","IBCEPA",6,0)
 ;
"RTN","IBCEPA",7,0)
HDR ; -- header code
"RTN","IBCEPA",8,0)
 K VALMHDR
"RTN","IBCEPA",9,0)
 S VALMHDR(1)=" "
"RTN","IBCEPA",10,0)
 S VALMHDR(2)="Insurance Co: "_$S('$G(IBALL)&$G(IBINS):$P($G(^DIC(36,+IBINS,0)),U),1:"ALL")
"RTN","IBCEPA",11,0)
 Q
"RTN","IBCEPA",12,0)
 ;
"RTN","IBCEPA",13,0)
INIT ; -- init variables and list array
"RTN","IBCEPA",14,0)
 N DIR,Y
"RTN","IBCEPA",15,0)
 I '$G(IBINS) D  I +Y<0 S VALMQUIT=1 Q
"RTN","IBCEPA",16,0)
 . S DIR(0)="PA^DIC(36,:AEMQ",DIR("A")="Select INSURANCE CO: ",DIR("?")="Select an INSURANCE CO to display its care units"
"RTN","IBCEPA",17,0)
 . D ^DIR K DIR
"RTN","IBCEPA",18,0)
 . I $D(DTOUT)!$D(DUOUT) S Y=-2 Q
"RTN","IBCEPA",19,0)
 . I Y>0 S IBINS=+Y Q
"RTN","IBCEPA",20,0)
 ;
"RTN","IBCEPA",21,0)
 D BLD
"RTN","IBCEPA",22,0)
 Q
"RTN","IBCEPA",23,0)
 ;
"RTN","IBCEPA",24,0)
BLD ;
"RTN","IBCEPA",25,0)
 D CLEAN^VALM10
"RTN","IBCEPA",26,0)
 K ^TMP("IBPRV_CU",$J)
"RTN","IBCEPA",27,0)
 N TAR,MSG,I,D0,IBLCT,Z,DIV,SCREEN
"RTN","IBCEPA",28,0)
 ;
"RTN","IBCEPA",29,0)
 S VALMBG=1
"RTN","IBCEPA",30,0)
 ;
"RTN","IBCEPA",31,0)
 ; Get all care units for this insurance company that have a division
"RTN","IBCEPA",32,0)
 ; If there is no division, then it is part of the other care units code (IBCEP4)
"RTN","IBCEPA",33,0)
 ; 
"RTN","IBCEPA",34,0)
 S SCREEN="I $P(^(0),U,4)'="""",$P(^(0),U,3)=IBINS"
"RTN","IBCEPA",35,0)
 D LIST^DIC(355.95,,"@;.01;.02;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",36,0)
 ;
"RTN","IBCEPA",37,0)
 I '+TAR("DILIST",0) D
"RTN","IBCEPA",38,0)
 . D SET^VALM10(1,"No CARE UNITs found for this Insurance Company")
"RTN","IBCEPA",39,0)
 ;
"RTN","IBCEPA",40,0)
 I +TAR("DILIST",0) D
"RTN","IBCEPA",41,0)
 . S IBCT=0
"RTN","IBCEPA",42,0)
 . F VALMCNT=1:1:+TAR("DILIST",0) D
"RTN","IBCEPA",43,0)
 .. S ^TMP("IBPRV_CU",$J,"SORT",TAR("DILIST","ID",VALMCNT,.04),TAR("DILIST",2,VALMCNT))=VALMCNT
"RTN","IBCEPA",44,0)
 . S DIV="" F  S DIV=$O(^TMP("IBPRV_CU",$J,"SORT",DIV)) Q:DIV=""  D
"RTN","IBCEPA",45,0)
 .. S Z="Division: "_DIV
"RTN","IBCEPA",46,0)
 .. S IBCT=IBCT+1
"RTN","IBCEPA",47,0)
 .. D SET^VALM10(IBCT,Z)
"RTN","IBCEPA",48,0)
 .. S D0=0 F  S D0=$O(^TMP("IBPRV_CU",$J,"SORT",DIV,D0)) Q:'D0  D
"RTN","IBCEPA",49,0)
 ... S IN=^TMP("IBPRV_CU",$J,"SORT",DIV,D0)
"RTN","IBCEPA",50,0)
 ... S Z=$J("",2)
"RTN","IBCEPA",51,0)
 ... S Z=Z_$E(TAR("DILIST","ID",IN,.01),1,36)
"RTN","IBCEPA",52,0)
 ... S Z=Z_$J("",40-$L(Z))
"RTN","IBCEPA",53,0)
 ... S Z=Z_$E(TAR("DILIST","ID",IN,.02),1,38)
"RTN","IBCEPA",54,0)
 ... S IBCT=IBCT+1
"RTN","IBCEPA",55,0)
 ... D SET^VALM10(IBCT,Z)
"RTN","IBCEPA",56,0)
 Q
"RTN","IBCEPA",57,0)
 ;
"RTN","IBCEPA",58,0)
HELP ; -- help code
"RTN","IBCEPA",59,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCEPA",60,0)
 Q
"RTN","IBCEPA",61,0)
 ;
"RTN","IBCEPA",62,0)
EXIT ; -- exit code
"RTN","IBCEPA",63,0)
 D CLEAN^VALM10
"RTN","IBCEPA",64,0)
 Q
"RTN","IBCEPA",65,0)
 ;
"RTN","IBCEPA",66,0)
EXPND ; -- expand code
"RTN","IBCEPA",67,0)
 Q
"RTN","IBCEPA",68,0)
 ;
"RTN","IBCEPA",69,0)
NEW ; Add care unit
"RTN","IBCEPA",70,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",71,0)
 ; IB = 0 or null if called from list manager, 1 if not
"RTN","IBCEPA",72,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,IB95,IBADD,IBOK,IBDIV,MAIN,IBDIVNM
"RTN","IBCEPA",73,0)
 ;
"RTN","IBCEPA",74,0)
 D FULL^VALM1
"RTN","IBCEPA",75,0)
 ; Add an entry - either new care unit/ins co or a combination for
"RTN","IBCEPA",76,0)
 ; existing care unit/ins co
"RTN","IBCEPA",77,0)
 ;
"RTN","IBCEPA",78,0)
 S MAIN=$$MAIN^IBCEP2B()
"RTN","IBCEPA",79,0)
 S MAIN=$$EXTERNAL^DILFD(355.92,.05,"",MAIN)
"RTN","IBCEPA",80,0)
 S DIC=40.8,DIC("A")="Enter the Division for this Care Unit: ",DIC("B")=MAIN,DIC(0)="AEMQ"
"RTN","IBCEPA",81,0)
 D ^DIC
"RTN","IBCEPA",82,0)
 I Y'>0 G NEWQ
"RTN","IBCEPA",83,0)
 S IBDIV=+Y
"RTN","IBCEPA",84,0)
 S IBDIVNM=$$EXTERNAL^DILFD(355.92,.05,"",IBDIV)
"RTN","IBCEPA",85,0)
 ;
"RTN","IBCEPA",86,0)
 N SCREEN,TAR,MESS,I
"RTN","IBCEPA",87,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)"
"RTN","IBCEPA",88,0)
 D LIST^DIC(355.95,,.01,,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",89,0)
 ;
"RTN","IBCEPA",90,0)
ACU K DIR
"RTN","IBCEPA",91,0)
 S I=0
"RTN","IBCEPA",92,0)
 I $G(TAR("DILIST",0)) D 
"RTN","IBCEPA",93,0)
 . S DIR("?",1)="Current Entries are:"
"RTN","IBCEPA",94,0)
 . F I=2:1 Q:'$D(TAR("DILIST",1,I-1))  S DIR("?",I)="     "_TAR("DILIST",1,I-1)
"RTN","IBCEPA",95,0)
 . S DIR("?",I)=" "
"RTN","IBCEPA",96,0)
 ;
"RTN","IBCEPA",97,0)
 S DIR("?",I+1)="You may enter the name of a new Care Unit for this Insurance Company."
"RTN","IBCEPA",98,0)
 S DIR("?",I+2)="You can then define a Billing Provider Secondary ID - Billing Screen 3 - for"
"RTN","IBCEPA",99,0)
 S DIR("?")="this Care Unit and Insurance Company using the Insurance Company Editor."
"RTN","IBCEPA",100,0)
 S DIR("A")="Enter the Care Unit name"
"RTN","IBCEPA",101,0)
 S DIR(0)="FO^1:30"
"RTN","IBCEPA",102,0)
 D ^DIR
"RTN","IBCEPA",103,0)
 I X=""!$G(DUOUT)!$G(DTOUT)!$G(DIROUT) G NEWQ
"RTN","IBCEPA",104,0)
 S CAREUNIT=X
"RTN","IBCEPA",105,0)
 ; 
"RTN","IBCEPA",106,0)
 ; At this point, we have X and it'a not a ? or ^
"RTN","IBCEPA",107,0)
 ;
"RTN","IBCEPA",108,0)
 K DIC
"RTN","IBCEPA",109,0)
 S DIC="^IBA(355.95,",DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="EX"
"RTN","IBCEPA",110,0)
 D ^DIC
"RTN","IBCEPA",111,0)
 ;
"RTN","IBCEPA",112,0)
 ; Check if we have an exisitng entry and if so, get out of Dodge (This option was for new care units)
"RTN","IBCEPA",113,0)
 I Y>0 D  G ACU
"RTN","IBCEPA",114,0)
 . D DISPMESS("This action is for adding new entries, not editing existing entries.")
"RTN","IBCEPA",115,0)
 ;
"RTN","IBCEPA",116,0)
 ; New entry , validate field
"RTN","IBCEPA",117,0)
 N TAR2
"RTN","IBCEPA",118,0)
 D FIELD^DID(355.95,.01,"N","INPUT TRANSFORM","TAR2")
"RTN","IBCEPA",119,0)
 S X=CAREUNIT
"RTN","IBCEPA",120,0)
 X TAR2("INPUT TRANSFORM")
"RTN","IBCEPA",121,0)
 I '$D(X) D  G ACU  ; Failed input transform
"RTN","IBCEPA",122,0)
 . D DISPMESS("Invalid Format.")
"RTN","IBCEPA",123,0)
 ;
"RTN","IBCEPA",124,0)
 K DIR
"RTN","IBCEPA",125,0)
 S DIR("A")="Are you adding '"_X_"' as a new Care Unit for '"_IBDIVNM_"'"
"RTN","IBCEPA",126,0)
 S DIR("B")="N"
"RTN","IBCEPA",127,0)
 S DIR(0)="Y"
"RTN","IBCEPA",128,0)
 D ^DIR
"RTN","IBCEPA",129,0)
 I Y=0 G ACU
"RTN","IBCEPA",130,0)
 I Y["^" G NEWQ
"RTN","IBCEPA",131,0)
 ;
"RTN","IBCEPA",132,0)
 ; If it got this far, we have an exact match or a new entry.   
"RTN","IBCEPA",133,0)
 S X=CAREUNIT
"RTN","IBCEPA",134,0)
 S DIC="^IBA(355.95,",DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="XL",DLAYGO=355.95
"RTN","IBCEPA",135,0)
 S DIC("DR")=".03////"_+$G(IBINS)_";.04////"_$G(IBDIV)
"RTN","IBCEPA",136,0)
 D ^DIC
"RTN","IBCEPA",137,0)
 I Y>0 D
"RTN","IBCEPA",138,0)
 . S DA=+Y,DIE="^IBA(355.95,"
"RTN","IBCEPA",139,0)
 . S DR=".02Enter the Care Unit Description"
"RTN","IBCEPA",140,0)
 . D ^DIE
"RTN","IBCEPA",141,0)
 D BLD
"RTN","IBCEPA",142,0)
 ;
"RTN","IBCEPA",143,0)
NEWQ S VALMBCK="R"
"RTN","IBCEPA",144,0)
 Q
"RTN","IBCEPA",145,0)
 ;
"RTN","IBCEPA",146,0)
CHANGE ; Edit care unit
"RTN","IBCEPA",147,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",148,0)
 ; 
"RTN","IBCEPA",149,0)
 D FULL^VALM1
"RTN","IBCEPA",150,0)
 ;
"RTN","IBCEPA",151,0)
 N X,Y,Z,DA,DD,DIC,DIK,DIR,IBDIV,CAREUNIT,SCREEN,TAR,DIVISION
"RTN","IBCEPA",152,0)
 ;
"RTN","IBCEPA",153,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)]"""""
"RTN","IBCEPA",154,0)
 D LIST^DIC(355.95,,".01;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",155,0)
 ;
"RTN","IBCEPA",156,0)
 I '+$G(TAR("DILIST",0)) D  G CHANGEQ
"RTN","IBCEPA",157,0)
 .D DISPMESS("No Care Units Defined for this insurance company.")
"RTN","IBCEPA",158,0)
 ;
"RTN","IBCEPA",159,0)
 ; Store all Divisons with at least one care unit in DIVISION array
"RTN","IBCEPA",160,0)
 F I=1:1 Q:'$D(TAR("DILIST","ID",I,.04))  D
"RTN","IBCEPA",161,0)
 . S DIVISION(TAR("DILIST","ID",I,.04))=""
"RTN","IBCEPA",162,0)
 ;
"RTN","IBCEPA",163,0)
 ; Only allow divisions that have care units to be selected
"RTN","IBCEPA",164,0)
 S DIC=40.8
"RTN","IBCEPA",165,0)
 S DIC("A")="Enter the Division for this Care Unit: "
"RTN","IBCEPA",166,0)
 S DIC(0)="AEMQ"
"RTN","IBCEPA",167,0)
 S DIC("S")="I $D(DIVISION($P(^(0),U)))"
"RTN","IBCEPA",168,0)
 D ^DIC
"RTN","IBCEPA",169,0)
 I Y'>0 G CHANGEQ
"RTN","IBCEPA",170,0)
 S IBDIV=+Y
"RTN","IBCEPA",171,0)
 ;
"RTN","IBCEPA",172,0)
 S DIC("A")="Enter the Care Unit name: "
"RTN","IBCEPA",173,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEPA",174,0)
 D ^DIC
"RTN","IBCEPA",175,0)
 I Y<1 G CHANGEQ
"RTN","IBCEPA",176,0)
 ;
"RTN","IBCEPA",177,0)
 S DA=+Y,DIE=355.95
"RTN","IBCEPA",178,0)
 S DR=".01Care Unit;.04Division;.02Description"
"RTN","IBCEPA",179,0)
 D ^DIE
"RTN","IBCEPA",180,0)
 ;
"RTN","IBCEPA",181,0)
 D BLD
"RTN","IBCEPA",182,0)
 ;
"RTN","IBCEPA",183,0)
CHANGEQ S VALMBCK="R"
"RTN","IBCEPA",184,0)
 Q
"RTN","IBCEPA",185,0)
 ;
"RTN","IBCEPA",186,0)
DEL ; Delete a Care Unit
"RTN","IBCEPA",187,0)
 ; Assumes IBINS is defined as ins co ien (file 36)
"RTN","IBCEPA",188,0)
 ; 
"RTN","IBCEPA",189,0)
 D FULL^VALM1
"RTN","IBCEPA",190,0)
 N X,Y,Z,DA,DD,DIC,DIK,DIR,IBDIV,CAREUNIT,SCREEN,TAR,DIVISION
"RTN","IBCEPA",191,0)
 ;
"RTN","IBCEPA",192,0)
 S SCREEN="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)]"""""
"RTN","IBCEPA",193,0)
 D LIST^DIC(355.95,,".01;.04",,,,,,SCREEN,,"TAR")
"RTN","IBCEPA",194,0)
 ;
"RTN","IBCEPA",195,0)
 I '+$G(TAR("DILIST",0)) D  G DELQ
"RTN","IBCEPA",196,0)
 .D DISPMESS("No Care Units Defined for this insurance company.")
"RTN","IBCEPA",197,0)
 ;
"RTN","IBCEPA",198,0)
 ; Store all Divisons with at least one care unit in DIVISION array
"RTN","IBCEPA",199,0)
 F I=1:1 Q:'$D(TAR("DILIST","ID",I,.04))  D
"RTN","IBCEPA",200,0)
 . S DIVISION(TAR("DILIST","ID",I,.04))=""
"RTN","IBCEPA",201,0)
 ;
"RTN","IBCEPA",202,0)
 ; Only allow divisions that have care units to be selected
"RTN","IBCEPA",203,0)
 S DIC=40.8
"RTN","IBCEPA",204,0)
 S DIC("A")="Enter the Division for this Care Unit: "
"RTN","IBCEPA",205,0)
 S DIC(0)="AEMQ"
"RTN","IBCEPA",206,0)
 S DIC("S")="I $D(DIVISION($P(^(0),U)))"
"RTN","IBCEPA",207,0)
 D ^DIC
"RTN","IBCEPA",208,0)
 I Y'>0 G DELQ
"RTN","IBCEPA",209,0)
 S IBDIV=+Y
"RTN","IBCEPA",210,0)
 ;
"RTN","IBCEPA",211,0)
 K DIC
"RTN","IBCEPA",212,0)
 S DIC("A")="Enter the Care Unit name: "
"RTN","IBCEPA",213,0)
 S DIC=355.95,DIC("S")="I $P(^(0),U,3)=+$G(IBINS),$P(^(0),U,4)=+$G(IBDIV)",DIC(0)="AEMQ"
"RTN","IBCEPA",214,0)
 D ^DIC
"RTN","IBCEPA",215,0)
 I Y<1 G DELQ
"RTN","IBCEPA",216,0)
 S CAREUNIT=+Y
"RTN","IBCEPA",217,0)
 ;
"RTN","IBCEPA",218,0)
 I $D(^IBA(355.92,"AC",+Y)) D  G DELQ
"RTN","IBCEPA",219,0)
 . S DIR(0)="EA"
"RTN","IBCEPA",220,0)
 . S DIR("A",1)="IDs that are assigned to the Care Unit in the Insurance Company Editor must be"
"RTN","IBCEPA",221,0)
 . S DIR("A",2)="deleted before deleting the Care Unit."
"RTN","IBCEPA",222,0)
    . S DIR("A")="Press return to continue "
"RTN","IBCEPA",223,0)
    . W ! D ^DIR K DIR
"RTN","IBCEPA",224,0)
 ;
"RTN","IBCEPA",225,0)
 S DIR("A")="OK to Delete: "
"RTN","IBCEPA",226,0)
 S DIR("B")="No"
"RTN","IBCEPA",227,0)
 S DIR(0)="YAO"
"RTN","IBCEPA",228,0)
 D ^DIR
"RTN","IBCEPA",229,0)
 I '$G(Y) G DELQ
"RTN","IBCEPA",230,0)
 K DIR
"RTN","IBCEPA",231,0)
 ;
"RTN","IBCEPA",232,0)
 S DA=CAREUNIT
"RTN","IBCEPA",233,0)
 S DIK="^IBA("_355.95_","
"RTN","IBCEPA",234,0)
 D ^DIK
"RTN","IBCEPA",235,0)
 ;
"RTN","IBCEPA",236,0)
 D BLD
"RTN","IBCEPA",237,0)
 ;
"RTN","IBCEPA",238,0)
DELQ S VALMBCK="R"
"RTN","IBCEPA",239,0)
 Q
"RTN","IBCEPA",240,0)
 ;
"RTN","IBCEPA",241,0)
DISPMESS(MESS) ;
"RTN","IBCEPA",242,0)
 N DIR,X,Y
"RTN","IBCEPA",243,0)
 S DIR(0)="EA",DIR("A",1)=MESS
"RTN","IBCEPA",244,0)
 S DIR("A")="PRESS ENTER to continue "
"RTN","IBCEPA",245,0)
 D ^DIR
"RTN","IBCEPA",246,0)
 Q
"RTN","IBCEPA",247,0)
 ;
"RTN","IBCEPB")
0^68^B8186996
"RTN","IBCEPB",1,0)
IBCEPB ; ; 22-DEC-2005
"RTN","IBCEPB",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPB",3,0)
EN ; -- main entry point for IBCE INSCO ID MAINT
"RTN","IBCEPB",4,0)
 D EN^VALM("IBCE INSCO ID MAINT")
"RTN","IBCEPB",5,0)
 Q
"RTN","IBCEPB",6,0)
 ;
"RTN","IBCEPB",7,0)
HDR ; -- header code
"RTN","IBCEPB",8,0)
 N PCF,PCDISP
"RTN","IBCEPB",9,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",10,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPB",11,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPB",12,0)
 Q
"RTN","IBCEPB",13,0)
 ;
"RTN","IBCEPB",14,0)
INIT ; Initialize
"RTN","IBCEPB",15,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",16,0)
 N IBLCT
"RTN","IBCEPB",17,0)
 S IBLCT=0
"RTN","IBCEPB",18,0)
 ; Display the list
"RTN","IBCEPB",19,0)
 D SET1(.IBLCT,"Attending/Rendering Provider Secondary ID")
"RTN","IBCEPB",20,0)
 D SET1(.IBLCT,"Default ID (HCFA): "_$$GET1^DIQ(36,IBCNS,4.01))
"RTN","IBCEPB",21,0)
 D SET1(.IBLCT,"Default ID (UB92): "_$$GET1^DIQ(36,IBCNS,4.02))
"RTN","IBCEPB",22,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.03))
"RTN","IBCEPB",23,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",24,0)
 D SET1(.IBLCT,"Referring Provider Secondary ID")
"RTN","IBCEPB",25,0)
 D SET1(.IBLCT,"Default ID (HCFA): "_$$GET1^DIQ(36,IBCNS,4.04))
"RTN","IBCEPB",26,0)
 D SET1(.IBLCT,"Require ID on Claim: "_$$GET1^DIQ(36,IBCNS,4.05))
"RTN","IBCEPB",27,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",28,0)
 D SET1(.IBLCT,"Billing Provider Secondary IDs")
"RTN","IBCEPB",29,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (HCFA)?: "_$$GET1^DIQ(36,IBCNS,4.06))
"RTN","IBCEPB",30,0)
 D SET1(.IBLCT,"Use Att/Rend ID as Billing Provider Sec. ID (UB92)?: "_$$GET1^DIQ(36,IBCNS,4.08))
"RTN","IBCEPB",31,0)
 D SET1(.IBLCT,"Transmit no Billing Provider Sec ID for the following Electronic Plan Types:")
"RTN","IBCEPB",32,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPB",33,0)
 F I=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPB",34,0)
 . D SET1(.IBLCT,TAR("DILIST",1,I))
"RTN","IBCEPB",35,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",36,0)
 D SET1(.IBLCT,"VA-Laboratory or Facility IDs")
"RTN","IBCEPB",37,0)
 D SET1(.IBLCT,"Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$GET1^DIQ(36,IBCNS,4.07))
"RTN","IBCEPB",38,0)
 D SET1(.IBLCT," ")
"RTN","IBCEPB",39,0)
 D SET1(.IBLCT,"Print SSN on claim")
"RTN","IBCEPB",40,0)
 D SET1(.IBLCT,"Print on HCFA?: "_$$GET1^DIQ(36,IBCNS,3.11))
"RTN","IBCEPB",41,0)
 D SET1(.IBLCT,"Print on UB92?: "_$$GET1^DIQ(36,IBCNS,3.12))
"RTN","IBCEPB",42,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPB",43,0)
 Q
"RTN","IBCEPB",44,0)
 ;
"RTN","IBCEPB",45,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPB",46,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT)
"RTN","IBCEPB",47,0)
 Q
"RTN","IBCEPB",48,0)
 ;
"RTN","IBCEPB",49,0)
EXPND ;
"RTN","IBCEPB",50,0)
 Q
"RTN","IBCEPB",51,0)
HELP ;
"RTN","IBCEPB",52,0)
 Q
"RTN","IBCEPB",53,0)
EXIT ;
"RTN","IBCEPB",54,0)
 D CLEAN^VALM10
"RTN","IBCEPB",55,0)
 Q
"RTN","IBCEPB",56,0)
 ;
"RTN","IBCEPB",57,0)
IDPARAM ;
"RTN","IBCEPB",58,0)
 D FULL^VALM1
"RTN","IBCEPB",59,0)
 N DIE,DA,DR
"RTN","IBCEPB",60,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPB",61,0)
 S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]"
"RTN","IBCEPB",62,0)
 I '$D(IBY) N IBY S IBY=",12,"
"RTN","IBCEPB",63,0)
 D ^DIE K DIE
"RTN","IBCEPB",64,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",65,0)
 D INIT
"RTN","IBCEPB",66,0)
 S VALMBCK="R"
"RTN","IBCEPB",67,0)
 Q
"RTN","IBCEPB",68,0)
 ;
"RTN","IBCEPB",69,0)
BILLPRVP ;
"RTN","IBCEPB",70,0)
 D FULL^VALM1
"RTN","IBCEPB",71,0)
 D EN^IBCEPC
"RTN","IBCEPB",72,0)
 D INIT
"RTN","IBCEPB",73,0)
 K ^TMP("IBCE_PRVFAC_MAINT",$J)
"RTN","IBCEPB",74,0)
 S VALMBCK="R"
"RTN","IBCEPB",75,0)
 Q
"RTN","IBCEPC")
0^63^B5826861
"RTN","IBCEPC",1,0)
IBCEPC ; ; 22-DEC-2005
"RTN","IBCEPC",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPC",3,0)
EN ; -- main entry point for IBCE INSCO BILL PROV MAINT
"RTN","IBCEPC",4,0)
 D EN^VALM("IBCE INSCO BILL PROV MAINT")
"RTN","IBCEPC",5,0)
 Q
"RTN","IBCEPC",6,0)
 ;
"RTN","IBCEPC",7,0)
HDR ; -- header code
"RTN","IBCEPC",8,0)
 N PCF,PCDISP
"RTN","IBCEPC",9,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",10,0)
 S PCF=$P($G(^DIC(36,+IBCNS,3)),U,13),PCDISP=$S(PCF="P":"(Parent)",1:"")
"RTN","IBCEPC",11,0)
 S VALMHDR(1)="Insurance Co: "_$P($G(^DIC(36,+IBCNS,0)),U)_PCDISP
"RTN","IBCEPC",12,0)
 Q
"RTN","IBCEPC",13,0)
 ;
"RTN","IBCEPC",14,0)
INIT ; Initialize
"RTN","IBCEPC",15,0)
 N IBLCT,IBCT
"RTN","IBCEPC",16,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",17,0)
 S (IBCT,IBLCT)=0
"RTN","IBCEPC",18,0)
 ; Display the list
"RTN","IBCEPC",19,0)
 D SET1(.IBLCT,"Transmit no billing Provider Sec ID for the following Electronic Plan Types:",IBCT+1)
"RTN","IBCEPC",20,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCEPC",21,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCEPC",22,0)
 . D SET1(.IBLCT,IBCT_"   "_TAR("DILIST",1,IBCT),IBCT)
"RTN","IBCEPC",23,0)
 . S ^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX",IBCT)=TAR("DILIST",2,IBCT)_U_TAR("DILIST",1,IBCT)
"RTN","IBCEPC",24,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEPC",25,0)
 Q
"RTN","IBCEPC",26,0)
 ;
"RTN","IBCEPC",27,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEPC",28,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEPC",29,0)
 Q
"RTN","IBCEPC",30,0)
 ;
"RTN","IBCEPC",31,0)
EXPND ;
"RTN","IBCEPC",32,0)
 Q
"RTN","IBCEPC",33,0)
HELP ;
"RTN","IBCEPC",34,0)
 Q
"RTN","IBCEPC",35,0)
EXIT ;
"RTN","IBCEPC",36,0)
 D CLEAN^VALM10
"RTN","IBCEPC",37,0)
 Q
"RTN","IBCEPC",38,0)
ADD ;
"RTN","IBCEPC",39,0)
 D FULL^VALM1
"RTN","IBCEPC",40,0)
 S VALMBCK="R"
"RTN","IBCEPC",41,0)
 N DIR,X,Y,DIC,DA
"RTN","IBCEPC",42,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",43,0)
 S DIR("A")="Plan Type: ",DIR(0)="36.013,.01AOr"
"RTN","IBCEPC",44,0)
 D ^DIR K DIR
"RTN","IBCEPC",45,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEPC",46,0)
 ;
"RTN","IBCEPC",47,0)
 S X=Y
"RTN","IBCEPC",48,0)
 S DIC(0)="L",DA(1)=IBCNS
"RTN","IBCEPC",49,0)
 S DIC="^DIC(36,"_DA(1)_",13,"
"RTN","IBCEPC",50,0)
 D ^DIC
"RTN","IBCEPC",51,0)
 K ^TMP("IBCE INSCO BILL PROV MAINT",$J)
"RTN","IBCEPC",52,0)
 D INIT
"RTN","IBCEPC",53,0)
 ;
"RTN","IBCEPC",54,0)
 Q
"RTN","IBCEPC",55,0)
DEL ;
"RTN","IBCEPC",56,0)
 S VALMBCK="R"
"RTN","IBCEPC",57,0)
 I '$D(^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX")) Q    ;nothing to delete
"RTN","IBCEPC",58,0)
 N IBDA
"RTN","IBCEPC",59,0)
 I '$D(IBCNS) N IBCNS S IBCNS=IBINS
"RTN","IBCEPC",60,0)
 D SEL
"RTN","IBCEPC",61,0)
 Q:'$G(IBDA)
"RTN","IBCEPC",62,0)
 N DA,DIK,X,Y
"RTN","IBCEPC",63,0)
 S DA=+IBDA,DA(1)=IBCNS
"RTN","IBCEPC",64,0)
 S DIK="^DIC(36,"_IBCNS_",13,"
"RTN","IBCEPC",65,0)
 D ^DIK
"RTN","IBCEPC",66,0)
 K ^TMP("IBCE INSCO BILL PROV MAINT",$J)
"RTN","IBCEPC",67,0)
 D INIT
"RTN","IBCEPC",68,0)
 Q
"RTN","IBCEPC",69,0)
 ;
"RTN","IBCEPC",70,0)
SEL ;
"RTN","IBCEPC",71,0)
 N Z
"RTN","IBCEPC",72,0)
 K IBDA
"RTN","IBCEPC",73,0)
 D FULL^VALM1
"RTN","IBCEPC",74,0)
 D EN^VALM2($G(XQORNOD(0)),"OS")
"RTN","IBCEPC",75,0)
 S Z=+$O(VALMY(0)) Q:'Z
"RTN","IBCEPC",76,0)
 ; fac/ins co default
"RTN","IBCEPC",77,0)
 S IBDA=$G(^TMP("IBCE INSCO BILL PROV MAINT",$J,"ZIDX",Z))
"RTN","IBCEPC",78,0)
 Q
"RTN","IBCEPCID")
0^75^B34815450
"RTN","IBCEPCID",1,0)
IBCEPCID ;ALB/WCJ - Provider ID functions ;13 Feb 2006
"RTN","IBCEPCID",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPCID",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEPCID",4,0)
 ;
"RTN","IBCEPCID",5,0)
 G AWAY
"RTN","IBCEPCID",6,0)
AWAY Q
"RTN","IBCEPCID",7,0)
 ;
"RTN","IBCEPCID",8,0)
COPY(IBINS) ;  The purpose of this routine is to sync up insurance company IDs
"RTN","IBCEPCID",9,0)
 ; It is passed an insurance company.  If the insurance company is a stand alone company,
"RTN","IBCEPCID",10,0)
 ; it quits.  If it is passed a child, it synchs up with the parent.  If it is passed a parent, it syncs
"RTN","IBCEPCID",11,0)
 ; up with all it's children.
"RTN","IBCEPCID",12,0)
 ; 
"RTN","IBCEPCID",13,0)
 ; The IDs that synched up are Provider ID's defined for providers by an insurance company, default IDs for all
"RTN","IBCEPCID",14,0)
 ; Providers for and an insurance company, and additonal billing providers IDs for an insuracne company.
"RTN","IBCEPCID",15,0)
 ; 
"RTN","IBCEPCID",16,0)
 ;
"RTN","IBCEPCID",17,0)
 N TYPE,PARENT,CHILD,COPYINS
"RTN","IBCEPCID",18,0)
 Q:$G(IBINS)=""
"RTN","IBCEPCID",19,0)
 S TYPE=$$TYPE(IBINS)
"RTN","IBCEPCID",20,0)
 Q:TYPE=""
"RTN","IBCEPCID",21,0)
 I TYPE="P" S PARENT=IBINS,CHILD=""
"RTN","IBCEPCID",22,0)
 I TYPE="C" S CHILD=IBINS,PARENT=$P($G(^DIC(36,IBINS,3)),U,14) Q:PARENT=""
"RTN","IBCEPCID",23,0)
 D COPYTO(PARENT,CHILD,.COPYINS)
"RTN","IBCEPCID",24,0)
 D LOOPTRNS(.COPYINS)
"RTN","IBCEPCID",25,0)
 Q
"RTN","IBCEPCID",26,0)
 ;
"RTN","IBCEPCID",27,0)
TYPE(IBINS) ;
"RTN","IBCEPCID",28,0)
 Q $P($G(^DIC(36,+IBINS,3)),U,13)
"RTN","IBCEPCID",29,0)
 ;
"RTN","IBCEPCID",30,0)
COPYTO(PARENT,CHILD,COPYINS) ; Figure out who to copy to:
"RTN","IBCEPCID",31,0)
 I CHILD]"" S COPYINS(PARENT,CHILD)="" Q
"RTN","IBCEPCID",32,0)
 F  S CHILD=$O(^DIC(36,"APC",PARENT,CHILD)) Q:'CHILD   S COPYINS(PARENT,CHILD)=""
"RTN","IBCEPCID",33,0)
 Q
"RTN","IBCEPCID",34,0)
 ;
"RTN","IBCEPCID",35,0)
LOOPTRNS(COPYINS) ;
"RTN","IBCEPCID",36,0)
 N PARENT,CHILD,IBFILE
"RTN","IBCEPCID",37,0)
 S PARENT=$O(COPYINS(""))
"RTN","IBCEPCID",38,0)
 Q:PARENT=""   ; just in case
"RTN","IBCEPCID",39,0)
 ;
"RTN","IBCEPCID",40,0)
 S CHILD=""  F  S CHILD=$O(COPYINS(PARENT,CHILD)) Q:CHILD=""  D
"RTN","IBCEPCID",41,0)
 .F IBFILE=355.9,355.91,355.92 D
"RTN","IBCEPCID",42,0)
 .. I IBFILE=355.9 D  Q
"RTN","IBCEPCID",43,0)
 ... N IBPRV,CU,FT,CT,QUAL,CDA,PDA
"RTN","IBCEPCID",44,0)
 ... ;
"RTN","IBCEPCID",45,0)
 ... ; File 355.9
"RTN","IBCEPCID",46,0)
 ... ; Delete IDs in child but not parent
"RTN","IBCEPCID",47,0)
 ... ; Edit IDs that are in both 
"RTN","IBCEPCID",48,0)
 ... S IBPRV="" F  S IBPRV=$O(^IBA(IBFILE,"AUNIQ",IBPRV)) Q:IBPRV=""  D
"RTN","IBCEPCID",49,0)
 .... Q:IBPRV'[";VA(200,"    ; only copying VA providers
"RTN","IBCEPCID",50,0)
 .... Q:'$D(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD))
"RTN","IBCEPCID",51,0)
 .... S CU="" F  S CU=$O(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU)) Q:CU=""  D
"RTN","IBCEPCID",52,0)
 ..... S FT="" F  S FT=$O(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU,FT)) Q:FT=""  D
"RTN","IBCEPCID",53,0)
 ...... S CT=""  F  S CT=$O(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU,FT,CT)) Q:CT=""  D
"RTN","IBCEPCID",54,0)
 ....... S QUAL=""  F  S QUAL=$O(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU,FT,CT,QUAL)) Q:QUAL=""  D
"RTN","IBCEPCID",55,0)
 ........ S CDA=$O(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU,FT,CT,QUAL,0))
"RTN","IBCEPCID",56,0)
 ........ Q:'CDA
"RTN","IBCEPCID",57,0)
 ........ I '$D(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT,CT,QUAL)) D DEL(IBFILE,CDA) Q
"RTN","IBCEPCID",58,0)
 ........ S PDA=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT,CT,QUAL,0))
"RTN","IBCEPCID",59,0)
 ........ Q:PDA=""
"RTN","IBCEPCID",60,0)
 ........ D MOD(IBFILE,CDA,PDA) Q
"RTN","IBCEPCID",61,0)
 ... ;
"RTN","IBCEPCID",62,0)
 ... ; File 355.9
"RTN","IBCEPCID",63,0)
 ... ; Add IDs in parent but not child
"RTN","IBCEPCID",64,0)
 ... S IBPRV="" F  S IBPRV=$O(^IBA(IBFILE,"AUNIQ",IBPRV)) Q:IBPRV=""  D
"RTN","IBCEPCID",65,0)
 .... Q:IBPRV'[";VA(200,"    ; only copying VA providers
"RTN","IBCEPCID",66,0)
 .... Q:'$D(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT))
"RTN","IBCEPCID",67,0)
 .... S CU="" F  S CU=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU)) Q:CU=""  D
"RTN","IBCEPCID",68,0)
 ..... S FT="" F  S FT=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT)) Q:FT=""  D
"RTN","IBCEPCID",69,0)
 ...... S CT=""  F  S CT=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT,CT)) Q:CT=""  D
"RTN","IBCEPCID",70,0)
 ....... S QUAL=""  F  S QUAL=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT,CT,QUAL)) Q:QUAL=""  D
"RTN","IBCEPCID",71,0)
 ........ S PDA=$O(^IBA(IBFILE,"AUNIQ",IBPRV,PARENT,CU,FT,CT,QUAL,0))
"RTN","IBCEPCID",72,0)
 ........ Q:'PDA
"RTN","IBCEPCID",73,0)
 ........ I '$D(^IBA(IBFILE,"AUNIQ",IBPRV,CHILD,CU,FT,CT,QUAL)) D ADD(IBFILE,PDA,CHILD) Q
"RTN","IBCEPCID",74,0)
 .. ;
"RTN","IBCEPCID",75,0)
 .. ; Files 355.91 and 355.92
"RTN","IBCEPCID",76,0)
 .. ; Delete IDs in Child but not parent
"RTN","IBCEPCID",77,0)
 .. ; Edit IDs that are in both
"RTN","IBCEPCID",78,0)
 .. I $D(^IBA(IBFILE,"AUNIQ",CHILD)) D
"RTN","IBCEPCID",79,0)
 ... N CU,FT,CTORD,QUAL,PDA,CDA,DELFL
"RTN","IBCEPCID",80,0)
 ... S CU="" F  S CU=$O(^IBA(IBFILE,"AUNIQ",CHILD,CU)) Q:CU=""  D
"RTN","IBCEPCID",81,0)
 .... S FT="" F  S FT=$O(^IBA(IBFILE,"AUNIQ",CHILD,CU,FT)) Q:FT=""  D
"RTN","IBCEPCID",82,0)
 ..... S CTORD=""  F  S CTORD=$O(^IBA(IBFILE,"AUNIQ",CHILD,CU,FT,CTORD)) Q:CTORD=""  D
"RTN","IBCEPCID",83,0)
 ...... S QUAL=""  F  S QUAL=$O(^IBA(IBFILE,"AUNIQ",CHILD,CU,FT,CTORD,QUAL)) Q:QUAL=""  D
"RTN","IBCEPCID",84,0)
 ....... S CDA=""  F  S CDA=$O(^IBA(IBFILE,"AUNIQ",CHILD,CU,FT,CTORD,QUAL,CDA)) Q:CDA=""  D
"RTN","IBCEPCID",85,0)
 ........ S PDA=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT,CTORD,QUAL,0))
"RTN","IBCEPCID",86,0)
 ........ S DELFL=1
"RTN","IBCEPCID",87,0)
 ........ I PDA,IBFILE=355.91,$D(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT,CTORD,QUAL)) S DELFL=0
"RTN","IBCEPCID",88,0)
 ........ I PDA,IBFILE=355.92 S DELFL=0
"RTN","IBCEPCID",89,0)
 ........ D:DELFL DEL(IBFILE,CDA)
"RTN","IBCEPCID",90,0)
 ........ D:'DELFL MOD(IBFILE,CDA,PDA)
"RTN","IBCEPCID",91,0)
 .. ;
"RTN","IBCEPCID",92,0)
 .. ; Files 355.91 and 355.92
"RTN","IBCEPCID",93,0)
 .. ; Add IDs that are in parent but not child
"RTN","IBCEPCID",94,0)
 .. I $D(^IBA(IBFILE,"AUNIQ",PARENT)) D
"RTN","IBCEPCID",95,0)
 ... N CU,FT,CTORD,QUAL,PDA
"RTN","IBCEPCID",96,0)
 ... S CU="" F  S CU=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU)) Q:CU=""  D
"RTN","IBCEPCID",97,0)
 .... S FT="" F  S FT=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT)) Q:FT=""  D
"RTN","IBCEPCID",98,0)
 ..... S CTORD=""  F  S CTORD=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT,CTORD)) Q:CTORD=""  D
"RTN","IBCEPCID",99,0)
 ...... S QUAL=""  F  S QUAL=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT,CTORD,QUAL)) Q:QUAL=""  D
"RTN","IBCEPCID",100,0)
 ....... S PDA="" F  S PDA=$O(^IBA(IBFILE,"AUNIQ",PARENT,CU,FT,CTORD,QUAL,PDA)) Q:PDA=""  D
"RTN","IBCEPCID",101,0)
 ........ Q:$O(^IBA(IBFILE,"AUNIQ",CHILD,CU,FT,CTORD,QUAL,0))
"RTN","IBCEPCID",102,0)
 ........ D ADD(IBFILE,PDA,CHILD) Q
"RTN","IBCEPCID",103,0)
 Q
"RTN","IBCEPCID",104,0)
 ;
"RTN","IBCEPCID",105,0)
ADD(IBFILE,IEN,INS) ; Add a provider ID
"RTN","IBCEPCID",106,0)
 N DIC,DIR,X,Y,Z,DA,DR,DIE,DO,DD,DLAYGO,DTOUT,DUOUT
"RTN","IBCEPCID",107,0)
 N ZERO,CU,FT,CTORD,QUAL,ID
"RTN","IBCEPCID",108,0)
 S ZERO=$G(^IBA(IBFILE,IEN,0))
"RTN","IBCEPCID",109,0)
 Q:ZERO=""
"RTN","IBCEPCID",110,0)
 S CU=$P(ZERO,U,3)
"RTN","IBCEPCID",111,0)
 S FT=$P(ZERO,U,4)
"RTN","IBCEPCID",112,0)
 S CTORD=$P(ZERO,U,5)
"RTN","IBCEPCID",113,0)
 S QUAL=$P(ZERO,U,6)
"RTN","IBCEPCID",114,0)
 S ID=$P(ZERO,U,7)
"RTN","IBCEPCID",115,0)
 ;
"RTN","IBCEPCID",116,0)
 I IBFILE=355.91!(IBFILE=355.92) D
"RTN","IBCEPCID",117,0)
 . S X=INS
"RTN","IBCEPCID",118,0)
 . S DIC("DR")=".03////"_CU_";.04////"_FT_";.05////"_CTORD_";.06////"_QUAL_";.07////"_ID
"RTN","IBCEPCID",119,0)
 . I IBFILE=355.92 S DIC("DR")=DIC("DR")_";.08////A"
"RTN","IBCEPCID",120,0)
 ;
"RTN","IBCEPCID",121,0)
 I IBFILE=355.9 D
"RTN","IBCEPCID",122,0)
 . S DIC("DR")=".02////"_INS_";.03////"_CU_";.04////"_FT_";.05////"_CTORD_";.06////"_QUAL_";.07////"_ID
"RTN","IBCEPCID",123,0)
 . S X=$P(ZERO,U)
"RTN","IBCEPCID",124,0)
 ;
"RTN","IBCEPCID",125,0)
 S DIC(0)="L",(DIC,DLAYGO)=IBFILE
"RTN","IBCEPCID",126,0)
 D FILE^DICN
"RTN","IBCEPCID",127,0)
 Q
"RTN","IBCEPCID",128,0)
 ;
"RTN","IBCEPCID",129,0)
DEL(IBFILE,DA) ; Delete a Provider ID
"RTN","IBCEPCID",130,0)
 N DIK,DIR,X,Y,Z,I
"RTN","IBCEPCID",131,0)
 S DIK="^IBA("_IBFILE_","
"RTN","IBCEPCID",132,0)
 F I=1:1 L +^IBA(IBFILE,DA):5 I  Q
"RTN","IBCEPCID",133,0)
 D ^DIK
"RTN","IBCEPCID",134,0)
 L -^IBA(IBFILE,DA)
"RTN","IBCEPCID",135,0)
 Q
"RTN","IBCEPCID",136,0)
 ;
"RTN","IBCEPCID",137,0)
MOD(IBFILE,IEN,PIEN) ; Modify an existing Provider ID
"RTN","IBCEPCID",138,0)
 N I,ZERO,ID,PID,PZERO,FDAROOT
"RTN","IBCEPCID",139,0)
 S ZERO=$G(^IBA(IBFILE,IEN,0))
"RTN","IBCEPCID",140,0)
 Q:ZERO=""
"RTN","IBCEPCID",141,0)
 S PZERO=$G(^IBA(IBFILE,PIEN,0))
"RTN","IBCEPCID",142,0)
 Q:PZERO=""
"RTN","IBCEPCID",143,0)
 S ID=$P(ZERO,U,7)
"RTN","IBCEPCID",144,0)
 S PID=$P(PZERO,U,7)
"RTN","IBCEPCID",145,0)
 Q:ID=PID
"RTN","IBCEPCID",146,0)
 S FDAROOT(IBFILE,IEN_",",.07)=PID
"RTN","IBCEPCID",147,0)
 F I=1:1 L +^IBA(IBFILE,IEN):5 I  Q
"RTN","IBCEPCID",148,0)
 D FILE^DIE(,"FDAROOT")
"RTN","IBCEPCID",149,0)
 L -^IBA(IBFILE,IEN)
"RTN","IBCEPCID",150,0)
 Q
"RTN","IBCEPCID",151,0)
 ;
"RTN","IBCEPCID",152,0)
RESYNCH() ; Resynch everything
"RTN","IBCEPCID",153,0)
 L +^DIC(36):5 E  W *7,!!,"Can not lock insurance company file, please try later.",!! Q
"RTN","IBCEPCID",154,0)
 N INS
"RTN","IBCEPCID",155,0)
 S INS="" F  S INS=$O(^DIC(36,"APC",INS)) Q:INS=""  D COPY(INS)
"RTN","IBCEPCID",156,0)
 L -^DIC(36)
"RTN","IBCEPCID",157,0)
 Q
"RTN","IBCEPTC")
0^37^B73154243^B76107532
"RTN","IBCEPTC",1,0)
IBCEPTC ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS ; 4/12/05 11:15am
"RTN","IBCEPTC",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320**;21-MAR-94
"RTN","IBCEPTC",3,0)
 ;
"RTN","IBCEPTC",4,0)
EN ; Main entrypoint
"RTN","IBCEPTC",5,0)
 ; IBDT1,IBDT2 = last transmit date range to use
"RTN","IBCEPTC",6,0)
 ; IBSORT = primary sort criteria to use B=BATCH #,I=INS CO NAME
"RTN","IBCEPTC",7,0)
 ; IBFORM = form type to limit selection to U=UB92,H=HCFA 1500,B=BOTH
"RTN","IBCEPTC",8,0)
 ; IBCRIT = the additional sort criteria needed
"RTN","IBCEPTC",9,0)
 ; IBPTCCAN = whether or not to include cancelled claims
"RTN","IBCEPTC",10,0)
 ; IBRCBFPC = whether or not to include force print @ clearinghouse
"RTN","IBCEPTC",11,0)
 ; ^TMP("IB_PREV_CLAIM_INS",$J) = 1 for specific ins co/null for all
"RTN","IBCEPTC",12,0)
 ;                        ^($J,1,ien)="" for ien of each ins co selected
"RTN","IBCEPTC",13,0)
 ;                        ^($J,2,payer ID,ien)="" if selected
"RTN","IBCEPTC",14,0)
 ; IBREP = format output should be put in R=report,S=Listman
"RTN","IBCEPTC",15,0)
 ;
"RTN","IBCEPTC",16,0)
 N DIR,DIC,X,Y,Z,Z0,Z1,IBHOW,IBACT,IBCT,IBREP,IBCRIT,IBDT1,IBDT2
"RTN","IBCEPTC",17,0)
 N IBFORM,IBOK,IBQUIT,IBSORT,IBY,DTOUT,DUOUT,%ZIS,ZTSAVE,ZTRTN,ZTDESC
"RTN","IBCEPTC",18,0)
 N POP,IBPAYER,EDI,INST,PROF,IBPTCCAN,DIROUT,DIRUT,DTOUT,DUOUT,IBRCBFPC
"RTN","IBCEPTC",19,0)
 ;
"RTN","IBCEPTC",20,0)
Q1 ;
"RTN","IBCEPTC",21,0)
 W !!,"*** Please Note ***"
"RTN","IBCEPTC",22,0)
 W ?20,"2 '^' are needed to abort this option (^^)"
"RTN","IBCEPTC",23,0)
 W !?20,"1 '^' brings you back to the previous prompt (^)"
"RTN","IBCEPTC",24,0)
 W !
"RTN","IBCEPTC",25,0)
 ;
"RTN","IBCEPTC",26,0)
 S DIR(0)="SA^C:Claim;B:Batch;L:List",DIR("A")="Select By: (C)laim, (B)atch or see a (L)ist to pick from?: ",DIR("B")="List"
"RTN","IBCEPTC",27,0)
 D ^DIR K DIR
"RTN","IBCEPTC",28,0)
 I $D(DTOUT)!$D(DUOUT) G ENQ
"RTN","IBCEPTC",29,0)
 S IBHOW=Y
"RTN","IBCEPTC",30,0)
 I IBHOW="L" G Q1A
"RTN","IBCEPTC",31,0)
 ;
"RTN","IBCEPTC",32,0)
 S IBQUIT=0,IBCT=0
"RTN","IBCEPTC",33,0)
 K ^TMP($J,IBHOW)
"RTN","IBCEPTC",34,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",35,0)
 . I IBHOW="C" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Claim: ",DIR(0)="PA^364:AEMQZ",DIR("S")="I '$P(^(0),U,7),'$O(^IBA(364,""B"",+^(0),Y))"
"RTN","IBCEPTC",36,0)
 . I IBHOW="B" S DIR("A")="Select a"_$S(IBCT:"nother",1:"")_" Batch: ",DIR(0)="PA^IBA(364.1,:AEMQ^W ""  "",$P(^(0),U,3),"" Claims""",DIR("S")="I '$P(^(0),U,14)"
"RTN","IBCEPTC",37,0)
 . S DIR("?")="^D SELDSP^IBCEPTC(IBHOW)"
"RTN","IBCEPTC",38,0)
 . S:IBCT $P(DIR(0),U)=$P(DIR(0),U)_"O" ; Optional prompt after one is selected
"RTN","IBCEPTC",39,0)
 . D ^DIR K DIR
"RTN","IBCEPTC",40,0)
 . I Y'>0 S IBQUIT=$S(X="^":2,X="^^":3,1:1) Q
"RTN","IBCEPTC",41,0)
 . S IBY=$S(IBHOW="C":+Y,1:""),Y=$S(IBHOW="C":+Y(0),1:Y)
"RTN","IBCEPTC",42,0)
 . I '$D(^TMP($J,IBHOW,+Y)) S IBCT=IBCT+1,^TMP($J,IBHOW,+Y)=IBY
"RTN","IBCEPTC",43,0)
 ;
"RTN","IBCEPTC",44,0)
 G:IBQUIT=3 ENQ
"RTN","IBCEPTC",45,0)
 G:IBQUIT=2!'$O(^TMP($J,IBHOW,0)) Q1
"RTN","IBCEPTC",46,0)
 S Z=0
"RTN","IBCEPTC",47,0)
 I IBHOW="C" F  S Z=$O(^TMP($J,"C",Z)) Q:'Z  S ^TMP("IB_PREV_CLAIM_SELECT",$J,Z,0)=^TMP($J,"C",Z)
"RTN","IBCEPTC",48,0)
 I IBHOW="B" S (Z,IBCT)=0 F  S Z=$O(^TMP($J,"B",Z)) Q:'Z  D
"RTN","IBCEPTC",49,0)
 . S Z0=0 F  S Z0=$O(^IBA(364,"C",Z,Z0)) Q:'Z0  S Z1=+$G(^IBA(364,Z0,0)) I Z1,'$D(^TMP("IB_PREV_CLAIM_SELECT",$J,Z1,0)) S ^(0)=Z0,IBCT=IBCT+1
"RTN","IBCEPTC",50,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J)=IBCT
"RTN","IBCEPTC",51,0)
 D RESUB^IBCEPTC3
"RTN","IBCEPTC",52,0)
 G ENQ
"RTN","IBCEPTC",53,0)
 ;
"RTN","IBCEPTC",54,0)
Q1A K ^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC",55,0)
 S DIR(0)="SA^A:All Payers;S:Selected Payers"
"RTN","IBCEPTC",56,0)
 S DIR("A")="Run for (A)ll Payers or (S)elected Payers?: " S DIR("B")="Selected Payers"
"RTN","IBCEPTC",57,0)
 W !!,"PAYER SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",58,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",59,0)
 I $D(DTOUT)!$D(DUOUT) G Q1
"RTN","IBCEPTC",60,0)
 ;
"RTN","IBCEPTC",61,0)
 I Y="A" S ^TMP("IB_PREV_CLAIM_INS",$J)="" G Q2
"RTN","IBCEPTC",62,0)
 ;
"RTN","IBCEPTC",63,0)
 ; esg - 11/21/05 - patch 320 question
"RTN","IBCEPTC",64,0)
 W !
"RTN","IBCEPTC",65,0)
 S DIR(0)="Y",DIR("A")="   Include all payers with the same electronic Payer ID",DIR("B")="Yes" D ^DIR K DIR
"RTN","IBCEPTC",66,0)
 I $D(DIROUT) G ENQ
"RTN","IBCEPTC",67,0)
 I $D(DIRUT) G Q1A
"RTN","IBCEPTC",68,0)
 S IBPAYER=Y
"RTN","IBCEPTC",69,0)
 W !
"RTN","IBCEPTC",70,0)
 ;
"RTN","IBCEPTC",71,0)
 S ^TMP("IB_PREV_CLAIM_INS",$J)=1
"RTN","IBCEPTC",72,0)
 S IBQUIT=0
"RTN","IBCEPTC",73,0)
 F  D  Q:IBQUIT
"RTN","IBCEPTC",74,0)
 . S DIC(0)="AEMQ",DIC=36,DIC("A")="   Select Insurance Company: "
"RTN","IBCEPTC",75,0)
 . I $O(^TMP("IB_PREV_CLAIM_INS",$J,1,"")) S DIC("A")="   Select Another Insurance Company: "
"RTN","IBCEPTC",76,0)
 . S DIC("W")="D INSLIST^IBCEMCA(Y)"
"RTN","IBCEPTC",77,0)
 . D ^DIC K DIC                   ; lookup
"RTN","IBCEPTC",78,0)
 . I X="^^" S IBQUIT=2 Q          ; user entered "^^"
"RTN","IBCEPTC",79,0)
 . I +Y'>0 S IBQUIT=1 Q           ; user is done
"RTN","IBCEPTC",80,0)
 . W !
"RTN","IBCEPTC",81,0)
 . S ^TMP("IB_PREV_CLAIM_INS",$J,1,+Y)=""
"RTN","IBCEPTC",82,0)
 . I 'IBPAYER Q
"RTN","IBCEPTC",83,0)
 . S EDI=$$UP^XLFSTR($G(^DIC(36,+Y,3)))
"RTN","IBCEPTC",84,0)
 . S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)
"RTN","IBCEPTC",85,0)
 . I PROF'="",PROF'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,PROF,+Y)=""
"RTN","IBCEPTC",86,0)
 . I INST'="",INST'["PRNT" S ^TMP("IB_PREV_CLAIM_INS",$J,2,INST,+Y)=""
"RTN","IBCEPTC",87,0)
 . Q
"RTN","IBCEPTC",88,0)
 ;
"RTN","IBCEPTC",89,0)
 I IBQUIT=2 G ENQ
"RTN","IBCEPTC",90,0)
 ;
"RTN","IBCEPTC",91,0)
 I '$O(^TMP("IB_PREV_CLAIM_INS",$J,1,0)) D  G Q1A
"RTN","IBCEPTC",92,0)
 . W *7,!!?3,"No payers have been selected.  Please try again."
"RTN","IBCEPTC",93,0)
 . Q
"RTN","IBCEPTC",94,0)
 ;
"RTN","IBCEPTC",95,0)
Q2 S DIR(0)="SA^H:HCFA 1500;U:UB92;B:Both",DIR("B")="Both"
"RTN","IBCEPTC",96,0)
 S DIR("A")="Run for (U)B92, (H)CFA 1500 or (B)oth: "
"RTN","IBCEPTC",97,0)
 W !!,"BILL FORM TYPE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",98,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",99,0)
 I $D(DTOUT)!$D(DUOUT) G Q1A
"RTN","IBCEPTC",100,0)
 S IBFORM=Y
"RTN","IBCEPTC",101,0)
 ;
"RTN","IBCEPTC",102,0)
Q3 S DIR(0)="DA^0:9999999:EPX",DIR("A")="Start with Date Last Transmitted: "
"RTN","IBCEPTC",103,0)
 S DIR("?",1)="This is the earliest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",104,0)
 W !!,"LAST BATCH TRANSMIT DATE RANGE SELECTION:" D ^DIR K DIR
"RTN","IBCEPTC",105,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",106,0)
 I $D(DTOUT)!$D(DUOUT) G Q2
"RTN","IBCEPTC",107,0)
 S IBDT1=Y
"RTN","IBCEPTC",108,0)
 S IBDT2=$$FMADD^XLFDT(IBDT1,90) I IBDT2>DT S IBDT2=DT
"RTN","IBCEPTC",109,0)
 S DIR("?",1)="This is the latest date on which a batch that you want to include on this",DIR("?",2)=" report was last transmitted. You may choose a maximum date range of 90 days.",DIR("?")=" "
"RTN","IBCEPTC",110,0)
 S DIR("B")=$$FMTE^XLFDT(IBDT2,2),DIR(0)="DA^"_IBDT1_":"_IBDT2_":EPX"
"RTN","IBCEPTC",111,0)
 S DIR("A")="Go to Date Last Transmitted:("_$$FMTE^XLFDT(IBDT1,2)_"-"_$$FMTE^XLFDT(IBDT2,2)_"): " D ^DIR K DIR
"RTN","IBCEPTC",112,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",113,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",114,0)
 S IBDT2=Y
"RTN","IBCEPTC",115,0)
 ;
"RTN","IBCEPTC",116,0)
Q4 ; Additional selection criteria
"RTN","IBCEPTC",117,0)
 S DIR(0)="SAO^1:MRA Secondary Only;2:Primary Claims Only;3:Secondary Claims Only;4:Claims Previously Printed at Clearinghouse"
"RTN","IBCEPTC",118,0)
 S DIR("A",1)="ADDITIONAL SELECTION CRITERIA:",DIR("A",2)=" ",DIR("A",3)="1 - MRA Secondary Only",DIR("A",4)="2 - Primary Claims Only",DIR("A",5)="3 - Secondary Claims Only"
"RTN","IBCEPTC",119,0)
 S DIR("A",6)="4 - Claims Sent to Print at Clearinghouse Only",DIR("A",7)=" ",DIR("A")="Select Additional Limiting Criteria (optional): "
"RTN","IBCEPTC",120,0)
 S DIR("?")="Select one of the listed criteria to further limit the claims to include"
"RTN","IBCEPTC",121,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",122,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",123,0)
 I $D(DTOUT)!$D(DUOUT) G Q3
"RTN","IBCEPTC",124,0)
 S IBCRIT=Y
"RTN","IBCEPTC",125,0)
 ;
"RTN","IBCEPTC",126,0)
Q41 ; Ask user if they want to include cancelled claims
"RTN","IBCEPTC",127,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include cancelled claims"
"RTN","IBCEPTC",128,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",129,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",130,0)
 I $D(DIRUT) G Q4
"RTN","IBCEPTC",131,0)
 S IBPTCCAN=Y
"RTN","IBCEPTC",132,0)
 ;
"RTN","IBCEPTC",133,0)
Q42 ; Include claims that are forced to print at clearinghouse?
"RTN","IBCEPTC",134,0)
 S DIR(0)="Y",DIR("B")="No",DIR("A")="Would you like to include claims Forced to Print at the Clearinghouse"
"RTN","IBCEPTC",135,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",136,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",137,0)
 I $D(DIRUT) G Q41
"RTN","IBCEPTC",138,0)
 S IBRCBFPC=Y
"RTN","IBCEPTC",139,0)
 ;
"RTN","IBCEPTC",140,0)
Q5 S DIR("L",1)="Select one of the following: ",DIR("L",2)=" ",DIR("L",3)=$J("",10)_"1         Batch By Last Transmitted Date (Claims within a Batch)",DIR("L",4)=$J("",10)_"2         Current Payer (Insurance Company)"
"RTN","IBCEPTC",141,0)
 S DIR("L",5)=" "
"RTN","IBCEPTC",142,0)
 S DIR(0)="SA^1:Batch By Last Transmitted Date (Claims within a Batch);2:Current Payer (Insurance Company)",DIR("B")="Current Payer"
"RTN","IBCEPTC",143,0)
 S DIR("A")="Sort By: "
"RTN","IBCEPTC",144,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",145,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",146,0)
 I $D(DTOUT)!$D(DUOUT) G Q42
"RTN","IBCEPTC",147,0)
 S IBSORT=Y
"RTN","IBCEPTC",148,0)
 ;
"RTN","IBCEPTC",149,0)
Q6 S DIR(0)="SA^R:Report;S:Screen List"
"RTN","IBCEPTC",150,0)
 S DIR("A")="Do you want a (R)eport or a (S)creen List format?: "
"RTN","IBCEPTC",151,0)
 S DIR("B")="Screen List"
"RTN","IBCEPTC",152,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC",153,0)
 I X="^^" G ENQ
"RTN","IBCEPTC",154,0)
 I $D(DTOUT)!$D(DUOUT) G Q5
"RTN","IBCEPTC",155,0)
 S IBREP=Y
"RTN","IBCEPTC",156,0)
 ;
"RTN","IBCEPTC",157,0)
 I IBREP="S" D LIST^IBCEPTC0 G ENQ
"RTN","IBCEPTC",158,0)
 ;
"RTN","IBCEPTC",159,0)
Q7 ; Select device
"RTN","IBCEPTC",160,0)
 F  S IBACT=0 D DEVSEL(.IBACT) Q:IBACT
"RTN","IBCEPTC",161,0)
 I IBACT=99 G ENQ
"RTN","IBCEPTC",162,0)
 U IO
"RTN","IBCEPTC",163,0)
 D LIST^IBCEPTC0
"RTN","IBCEPTC",164,0)
 ;
"RTN","IBCEPTC",165,0)
ENQ K ^TMP("IB_PREV_CLAIM_INS",$J),^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC",166,0)
 Q
"RTN","IBCEPTC",167,0)
 ;
"RTN","IBCEPTC",168,0)
DEVSEL(IBACT) ;
"RTN","IBCEPTC",169,0)
 N DIR,POP,X,Y,ZTRTN,ZTSAVE
"RTN","IBCEPTC",170,0)
 W !!,"You will need a 132 column printer for this report!"
"RTN","IBCEPTC",171,0)
 S %ZIS="QM" D ^%ZIS I POP S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",172,0)
 I $G(IOM),IOM<132 S IBOK=1 D  I 'IBOK S IBACT=0 G DEVSELQ
"RTN","IBCEPTC",173,0)
 . S DIR(0)="YA",DIR("A",1)="This report requires output to a 132 column device.",DIR("A",2)="The device you have chosen is only set for "_IOM_".",DIR("A")="Are you sure you want to continue?: ",DIR("B")="No"
"RTN","IBCEPTC",174,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC",175,0)
 . I Y'=1 S IBOK=0 W !
"RTN","IBCEPTC",176,0)
 I $D(IO("Q")) D  S IBACT=99 G DEVSELQ
"RTN","IBCEPTC",177,0)
 . K IO("Q")
"RTN","IBCEPTC",178,0)
 . S ZTRTN="LIST^IBCEPTC0",ZTSAVE("IBCRIT(")="",ZTSAVE("IB*")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J)")="",ZTSAVE("^TMP(""IB_PREV_CLAIM_INS"",$J,")="",ZTDESC="IB - Previously Transmitted Claims Report"
"RTN","IBCEPTC",179,0)
 . D ^%ZTLOAD K ZTSK D HOME^%ZIS
"RTN","IBCEPTC",180,0)
 S IBACT=1
"RTN","IBCEPTC",181,0)
DEVSELQ Q
"RTN","IBCEPTC",182,0)
 ;
"RTN","IBCEPTC",183,0)
SELDSP(IBHOW) ; Display list of selected claims/batches
"RTN","IBCEPTC",184,0)
 ; IBHOW = "C" for claims   "B" for batches
"RTN","IBCEPTC",185,0)
 N Z,DIR,CT,QUIT
"RTN","IBCEPTC",186,0)
 I '$O(^TMP($J,IBHOW,0)) Q
"RTN","IBCEPTC",187,0)
 S (CT,QUIT)=0
"RTN","IBCEPTC",188,0)
 W !!,$S(IBHOW="C":"Claims",1:"Batches")," Already Selected:"
"RTN","IBCEPTC",189,0)
 S Z=0 F  S Z=$O(^TMP($J,IBHOW,Z)) Q:'Z!QUIT  S Z0=$G(^(Z)) D  Q:QUIT
"RTN","IBCEPTC",190,0)
 . I IBHOW="C" W !,?3,$P($G(^DGCR(399,Z,0)),U) Q
"RTN","IBCEPTC",191,0)
 . W !,?3,$P($G(^IBA(364.1,Z,0)),U),"  ",$P(^(0),U,3)," Claims"
"RTN","IBCEPTC",192,0)
 . S CT=CT+1
"RTN","IBCEPTC",193,0)
 . I '(CT#10),$O(^TMP($J,IBHOW,Z)) S DIR("A")="Press return for more or '^' to exit ",DIR(0)="EA" W ! D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S QUIT=1
"RTN","IBCEPTC",194,0)
 W !
"RTN","IBCEPTC",195,0)
 Q
"RTN","IBCEPTC",196,0)
 ;
"RTN","IBCEPTC0")
0^38^B19867534
"RTN","IBCEPTC0",1,0)
IBCEPTC0 ;ALB/ESG - EDI PREVIOUSLY TRANSMITTED CLAIMS CONT; 12/19/05
"RTN","IBCEPTC0",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPTC0",3,0)
 ;
"RTN","IBCEPTC0",4,0)
 Q
"RTN","IBCEPTC0",5,0)
 ;
"RTN","IBCEPTC0",6,0)
LIST ; Queued report format entrypoint
"RTN","IBCEPTC0",7,0)
 ; variables pre-defined: IBREP,IBSORT,IBFORM,IBDT1,IBDT2,
"RTN","IBCEPTC0",8,0)
 ;                        IBCRIT,IBPTCCAN,IBRCBFPC
"RTN","IBCEPTC0",9,0)
 ;  ^TMP("IB_PREV_CLAIM_INS,$J) global
"RTN","IBCEPTC0",10,0)
 K ^TMP("IB_PREV_CLAIM",$J)
"RTN","IBCEPTC0",11,0)
 N IBBDA,IBBDA0,IBCURI,IBDA,IBDT,IBFT,IBIFN,IBS1,IBS2,IBDTX
"RTN","IBCEPTC0",12,0)
 N INCLUDE,EDI,PROF,INST,IB0,IBZ1,DATA,IB364,CURSEQ,IBZ,IBZDAT
"RTN","IBCEPTC0",13,0)
 I IBREP="R" N IBPAGE,IBSTOP,IBHDRDT S (IBPAGE,IBSTOP)=0
"RTN","IBCEPTC0",14,0)
 ;
"RTN","IBCEPTC0",15,0)
 ; evaluate claim transmission data from files 364.1 and 364
"RTN","IBCEPTC0",16,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",17,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT!((IBDT\1)>IBDT2)  S IBBDA=0 F  S IBBDA=$O(^IBA(364.1,"ALT",IBDT,IBBDA)) Q:'IBBDA  D
"RTN","IBCEPTC0",18,0)
 . S IBDTX=IBDT\1
"RTN","IBCEPTC0",19,0)
 . S IBDA=0 F  S IBDA=$O(^IBA(364,"C",IBBDA,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC0",20,0)
 .. D STORE(IBDA,IBBDA,IBDTX,$P($G(^IBA(364,IBDA,0)),U,7)+1)
"RTN","IBCEPTC0",21,0)
 .. Q
"RTN","IBCEPTC0",22,0)
 . Q
"RTN","IBCEPTC0",23,0)
 ;
"RTN","IBCEPTC0",24,0)
 ; evaluate the test transmissions from file 361.4 (SRS 3.2.10.3)
"RTN","IBCEPTC0",25,0)
 S IBDT=IBDT1-.1
"RTN","IBCEPTC0",26,0)
 F  S IBDT=$O(^IBM(361.4,"ALT",IBDT)) Q:'IBDT!(IBDT>IBDT2)  S IBIFN=0 F  S IBIFN=$O(^IBM(361.4,"ALT",IBDT,IBIFN)) Q:'IBIFN  S IBZ1=0 F  S IBZ1=$O(^IBM(361.4,IBIFN,1,IBZ1)) Q:'IBZ1  D
"RTN","IBCEPTC0",27,0)
 . S DATA=$G(^IBM(361.4,IBIFN,1,IBZ1,0)) Q:DATA=""
"RTN","IBCEPTC0",28,0)
 . S IBDTX=$P(DATA,U,1)\1    ; transmit date
"RTN","IBCEPTC0",29,0)
 . Q:IBDTX<IBDT1             ;  too early
"RTN","IBCEPTC0",30,0)
 . Q:IBDTX>IBDT2             ;  too late
"RTN","IBCEPTC0",31,0)
 . S IBBDA=+$P(DATA,U,2)     ; batch ien
"RTN","IBCEPTC0",32,0)
 . Q:'IBBDA
"RTN","IBCEPTC0",33,0)
 . ;
"RTN","IBCEPTC0",34,0)
 . ; attempt to find the corresponding entry in file 364 for this one
"RTN","IBCEPTC0",35,0)
 . S IB364="",CURSEQ=$TR(+$P(DATA,U,4),"123","PST")
"RTN","IBCEPTC0",36,0)
 . S IBZ=" " F  S IBZ=$O(^IBA(364,"B",IBIFN,IBZ),-1) Q:'IBZ  D  Q:IB364
"RTN","IBCEPTC0",37,0)
 .. S IBZDAT=$G(^IBA(364,IBZ,0))
"RTN","IBCEPTC0",38,0)
 .. I $P(IBZDAT,U,8)'=CURSEQ Q      ; no match on payer sequence
"RTN","IBCEPTC0",39,0)
 .. I $F(".X.P.","."_$P(IBZDAT,U,3)_".") Q    ; transmission status must be farther than this
"RTN","IBCEPTC0",40,0)
 .. S IB364=IBZ Q
"RTN","IBCEPTC0",41,0)
 .. Q
"RTN","IBCEPTC0",42,0)
 . ;
"RTN","IBCEPTC0",43,0)
 . I 'IB364 Q      ; need to have an entry in file 364 to proceed
"RTN","IBCEPTC0",44,0)
 . ;
"RTN","IBCEPTC0",45,0)
 . D STORE(IB364,IBBDA,IBDTX,3)
"RTN","IBCEPTC0",46,0)
 . Q
"RTN","IBCEPTC0",47,0)
 ;
"RTN","IBCEPTC0",48,0)
 I IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2) G END  ; Output report
"RTN","IBCEPTC0",49,0)
 ;
"RTN","IBCEPTC0",50,0)
 D EN^VALM("IBCE VIEW PREV TRANS"_IBSORT) ; List Manager
"RTN","IBCEPTC0",51,0)
 ;
"RTN","IBCEPTC0",52,0)
END K ^TMP("IB_PREV_CLAIM",$J),^TMP("IB_PREV_CLAIM_INS",$J)
"RTN","IBCEPTC0",53,0)
 Q
"RTN","IBCEPTC0",54,0)
 ;
"RTN","IBCEPTC0",55,0)
STORE(IB364,IBBDA,IBDTX,IBTYP) ; Check and store transmission data
"RTN","IBCEPTC0",56,0)
 ; Parameters
"RTN","IBCEPTC0",57,0)
 ; IB364 - ien to file 364 (claim transmission ien)
"RTN","IBCEPTC0",58,0)
 ; IBBDA - ien to file 364.1 (batch ien)
"RTN","IBCEPTC0",59,0)
 ; IBDTX - fm transmit date (no time) (either from 364.1 or 361.41)
"RTN","IBCEPTC0",60,0)
 ; IBTYP - 1 = transmission data from file 364 (field .07 is live)
"RTN","IBCEPTC0",61,0)
 ;         2 = transmission data from file 364 (field .07 is test)
"RTN","IBCEPTC0",62,0)
 ;         3 = transmission data from file 361.41 (test always)
"RTN","IBCEPTC0",63,0)
 ; Note:
"RTN","IBCEPTC0",64,0)
 ; Variables IBFORM, IBCRIT, IBPTCCAN, IBRCBFPC, and IBSORT are
"RTN","IBCEPTC0",65,0)
 ;     assumed to exist here in this procedure.
"RTN","IBCEPTC0",66,0)
 ;
"RTN","IBCEPTC0",67,0)
 NEW IBIFN,IB0,IBFT,IBCURI,INCLUDE,EDI,PROF,INST,IBBDA0,IBS1,IBS2
"RTN","IBCEPTC0",68,0)
 ;
"RTN","IBCEPTC0",69,0)
 S IBIFN=+$G(^IBA(364,IB364,0))
"RTN","IBCEPTC0",70,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC0",71,0)
 S IBFT=$$FT^IBCEF(IBIFN)   ; form type of claim
"RTN","IBCEPTC0",72,0)
 I IBFORM'="B",$S(IBFT=3:IBFORM="H",IBFT=2:IBFORM="U",1:1) G STOREX
"RTN","IBCEPTC0",73,0)
 S IBCURI=$$CURR^IBCEF2(IBIFN) I 'IBCURI G STOREX   ; current ins ien
"RTN","IBCEPTC0",74,0)
 S EDI=$$UP^XLFSTR($G(^DIC(36,IBCURI,3)))           ; 3 node EDI data
"RTN","IBCEPTC0",75,0)
 S PROF=$P(EDI,U,2),INST=$P(EDI,U,4)                ; payer IDs
"RTN","IBCEPTC0",76,0)
 ;
"RTN","IBCEPTC0",77,0)
 ; screen for user selected insurance companies/payers
"RTN","IBCEPTC0",78,0)
 I +$G(^TMP("IB_PREV_CLAIM_INS",$J)) D  I 'INCLUDE G STOREX
"RTN","IBCEPTC0",79,0)
 . S INCLUDE=0
"RTN","IBCEPTC0",80,0)
 . I $D(^TMP("IB_PREV_CLAIM_INS",$J,1,IBCURI)) S INCLUDE=1 Q
"RTN","IBCEPTC0",81,0)
 . I '$D(^TMP("IB_PREV_CLAIM_INS",$J,2)) Q
"RTN","IBCEPTC0",82,0)
 . I PROF'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,PROF)) S INCLUDE=1 Q
"RTN","IBCEPTC0",83,0)
 . I INST'="",$D(^TMP("IB_PREV_CLAIM_INS",$J,2,INST)) S INCLUDE=1 Q
"RTN","IBCEPTC0",84,0)
 . Q
"RTN","IBCEPTC0",85,0)
 ;
"RTN","IBCEPTC0",86,0)
 I IBCRIT=1,'$$MRASEC^IBCEF4(IBIFN) G STOREX
"RTN","IBCEPTC0",87,0)
 I IBCRIT=2,($$COBN^IBCEF(IBIFN)>1) G STOREX
"RTN","IBCEPTC0",88,0)
 I IBCRIT=3,($$COBN^IBCEF(IBIFN)=1) G STOREX
"RTN","IBCEPTC0",89,0)
 I IBCRIT=4,'$P($G(^DGCR(399,IBIFN,"TX")),U,7) G STOREX
"RTN","IBCEPTC0",90,0)
 ;
"RTN","IBCEPTC0",91,0)
 ; skip cancelled claims conditionally
"RTN","IBCEPTC0",92,0)
 I $P(IB0,U,13)=7,'IBPTCCAN G STOREX
"RTN","IBCEPTC0",93,0)
 ;
"RTN","IBCEPTC0",94,0)
 ; skip claims forced to print at clearinghouse (claim check)
"RTN","IBCEPTC0",95,0)
 I $P($G(^DGCR(399,IBIFN,"TX")),U,8)=2,'IBRCBFPC G STOREX
"RTN","IBCEPTC0",96,0)
 ;
"RTN","IBCEPTC0",97,0)
 ; skip claims forced to print at clearinghouse (payer check)
"RTN","IBCEPTC0",98,0)
 I IBFT=2,PROF["PRNT",'IBRCBFPC G STOREX    ; hcfa, prof payer ID
"RTN","IBCEPTC0",99,0)
 I IBFT=3,INST["PRNT",'IBRCBFPC G STOREX    ;   ub, inst payer ID
"RTN","IBCEPTC0",100,0)
 ;
"RTN","IBCEPTC0",101,0)
 S IBBDA0=$G(^IBA(364.1,+IBBDA,0))             ; 0 node of batch
"RTN","IBCEPTC0",102,0)
 ;
"RTN","IBCEPTC0",103,0)
 S IBS1=$S(IBSORT=1:(99999999-IBDTX)_U_$P(IBBDA0,U)_U_$P(IBBDA0,U,14)_U_+$P(IBBDA0,U,5),1:$P($G(^DIC(36,+IBCURI,0)),U)_U_+IBCURI)
"RTN","IBCEPTC0",104,0)
 S IBS2=$S(IBSORT=1:$P(IB0,U,1),1:99999999-IBDTX)
"RTN","IBCEPTC0",105,0)
 ;
"RTN","IBCEPTC0",106,0)
 ; Meets all selection criteria - extract to sort global
"RTN","IBCEPTC0",107,0)
 S:IBS1="" IBS1=" " S:IBS2="" IBS2=" "
"RTN","IBCEPTC0",108,0)
 I '$D(^TMP("IB_PREV_CLAIM",$J,IBS1)) S ^TMP("IB_PREV_CLAIM",$J,IBS1)=$S(IBSORT=1:$$FMTE^XLFDT(IBDTX,"1"),1:IBIFN)
"RTN","IBCEPTC0",109,0)
 S ^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IB364)=IBTYP
"RTN","IBCEPTC0",110,0)
 ;
"RTN","IBCEPTC0",111,0)
STOREX ;
"RTN","IBCEPTC0",112,0)
 Q
"RTN","IBCEPTC0",113,0)
 ;
"RTN","IBCEPTC1")
0^39^B16490219^B16175723
"RTN","IBCEPTC1",1,0)
IBCEPTC1 ;ALB/TMK - EDI PREV TRANSMITTED CLAIMS REPORT OUTPUT ;01/20/05
"RTN","IBCEPTC1",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320**;21-MAR-94
"RTN","IBCEPTC1",3,0)
 ;
"RTN","IBCEPTC1",4,0)
RPT(IBSORT,IBDT1,IBDT2) ; Output transmitted claims report
"RTN","IBCEPTC1",5,0)
 ; global ^TMP("IB_PREV_CLAIM",$J,srt1,srt2,ien of entry file 364)=""
"RTN","IBCEPTC1",6,0)
 N IBDA,IBIFN,IBPAGE,IBSTOP,IBHDR,IBS1,IBS2,Z,IBZ,IBREP
"RTN","IBCEPTC1",7,0)
 S (IBPAGE,IBSTOP)=0,IBPAGE(0)="",IBPAGE(1)="",IBREP="R"
"RTN","IBCEPTC1",8,0)
 S IBHDR="Transmitted Claims Report for period covering "_$$FMTE^XLFDT(IBDT1,1)_" thru "_$$FMTE^XLFDT(IBDT2,1)_$J("",14)_$$HTE^XLFDT($H,"1M"),IBHDR=IBHDR_$J("",124-$L(IBHDR))_"Page"
"RTN","IBCEPTC1",9,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D  Q:IBSTOP
"RTN","IBCEPTC1",10,0)
 . ; First level sort
"RTN","IBCEPTC1",11,0)
 . D:($Y+6)>IOSL!'IBPAGE HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",12,0)
 . S IBPAGE(1)=IBS1,IBPAGE(0)="" ; Hold data for hdr repeated on new pg
"RTN","IBCEPTC1",13,0)
 . D HDR1(IBSORT,IBS1,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",14,0)
 . ;
"RTN","IBCEPTC1",15,0)
 . S IBPAGE(0)=1
"RTN","IBCEPTC1",16,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""!IBSTOP  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA!IBSTOP  D
"RTN","IBCEPTC1",17,0)
 .. S IBIFN=+$G(^IBA(364,+IBDA,0))
"RTN","IBCEPTC1",18,0)
 .. ;
"RTN","IBCEPTC1",19,0)
 .. D:($Y+5)>IOSL!'IBPAGE HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",20,0)
 .. D WRT^IBCEPTC2(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,"",.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",21,0)
 . S IBPAGE(0)=""
"RTN","IBCEPTC1",22,0)
 ;
"RTN","IBCEPTC1",23,0)
 G:IBSTOP STOP
"RTN","IBCEPTC1",24,0)
 I 'IBPAGE D WRT^IBCEPTC2("NO PREVIOUSLY TRANSMITTED CLAIMS EXIST TO MATCH THE SEARCH CRITERIA SELECTED","",0,0,IBSORT,IBREP,IBHDR,0,0)
"RTN","IBCEPTC1",25,0)
 ;
"RTN","IBCEPTC1",26,0)
 I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC1",27,0)
 ;
"RTN","IBCEPTC1",28,0)
STOP I $D(ZTQUEUED) S ZTREQ="@"
"RTN","IBCEPTC1",29,0)
 I '$D(ZTQUEUED) W ! D ^%ZISC
"RTN","IBCEPTC1",30,0)
 ;
"RTN","IBCEPTC1",31,0)
 Q
"RTN","IBCEPTC1",32,0)
 ;
"RTN","IBCEPTC1",33,0)
HDR1(IBSORT,IBDATA,IBPAGE,IBSTOP) ; First level report sort headers
"RTN","IBCEPTC1",34,0)
 ; IBSORT = sort type
"RTN","IBCEPTC1",35,0)
 ; IBDATA = data at the 1st sort level
"RTN","IBCEPTC1",36,0)
 I ($Y+11)>IOSL D HDR(IBHDR,IBSORT,.IBPAGE,.IBSTOP) Q:IBSTOP
"RTN","IBCEPTC1",37,0)
 N Z,X,Y,Q
"RTN","IBCEPTC1",38,0)
 I IBSORT=1 D
"RTN","IBCEPTC1",39,0)
 . S Q="Batch Number: "_$P(IBDATA,U,2)_$S('$P(IBDATA,U,4):"",1:"  ** This batch was rejected **")_$S('$P(IBDATA,U,3):"",1:"  ** This batch was a test batch **")
"RTN","IBCEPTC1",40,0)
 . W !!,Q W:$G(IBPAGE(0)) $J("",120-$L(Q)),"(Continued)" W !,"Date Last Transmitted: ",$$FMTE^XLFDT(99999999-IBDATA,1)
"RTN","IBCEPTC1",41,0)
 . S Z="",$P(Z,"=",133)="" W !,Z
"RTN","IBCEPTC1",42,0)
 . W !,"Claim #   Form Type Seq  Status      A/R  Current Payer",$J("",13),"Payer Address",$J("",17),"Other Payer(s)  Patient Name",!
"RTN","IBCEPTC1",43,0)
 ;
"RTN","IBCEPTC1",44,0)
 I IBSORT=2 D
"RTN","IBCEPTC1",45,0)
 . N IBZ,IBIFN
"RTN","IBCEPTC1",46,0)
 . S IBIFN=""
"RTN","IBCEPTC1",47,0)
 . I IBDATA'="" S IBIFN=+$G(^TMP("IB_PREV_CLAIM",$J,IBDATA))
"RTN","IBCEPTC1",48,0)
 . S Q="Current Payer: "_$P(IBDATA,U)
"RTN","IBCEPTC1",49,0)
 . D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC1",50,0)
 . S Q=Q_"  "_$G(IBZ(1))_$S($G(IBZ(1))'="":",",1:"")_" "_$G(IBZ(4))_$S($G(IBZ(4))'="":",",1:"")_" "_$P($G(^DIC(5,+$G(IBZ(5)),0)),U,2)
"RTN","IBCEPTC1",51,0)
 . W !!,Q
"RTN","IBCEPTC1",52,0)
 . I $G(IBPAGE(0)) D
"RTN","IBCEPTC1",53,0)
 .. I $L(Q)>119 S Q="" W !
"RTN","IBCEPTC1",54,0)
 .. W $J("",120-$L(Q)),"(Continued)"
"RTN","IBCEPTC1",55,0)
 . S Z="",$P(Z,"=",133)="" W !,Z
"RTN","IBCEPTC1",56,0)
 . W !,"Claim #   Form Type Seq  Status      A/R    Other Payer(s)",$J("",6),"Patient Name",$J("",10),"Last Transmit    Batch Number",!
"RTN","IBCEPTC1",57,0)
 ;
"RTN","IBCEPTC1",58,0)
 Q
"RTN","IBCEPTC1",59,0)
 ;
"RTN","IBCEPTC1",60,0)
HDR(IBHDR,IBSORT,IBPAGE,IBSTOP) ; Report header
"RTN","IBCEPTC1",61,0)
 ;
"RTN","IBCEPTC1",62,0)
 N Z,DIR,X,Y
"RTN","IBCEPTC1",63,0)
 I IBPAGE D  Q:IBSTOP
"RTN","IBCEPTC1",64,0)
 . I $E(IOST,1,2)["C-" K DIR S DIR(0)="E" D ^DIR K DIR S IBSTOP=('Y) Q:IBSTOP
"RTN","IBCEPTC1",65,0)
 . W @IOF
"RTN","IBCEPTC1",66,0)
 S IBPAGE=IBPAGE+1,Z=IBHDR_$J(IBPAGE,4)
"RTN","IBCEPTC1",67,0)
 W !,Z
"RTN","IBCEPTC1",68,0)
 W !,"** A claim may appear on this report multiple times if it has been transmitted more than once. **"
"RTN","IBCEPTC1",69,0)
 I IBSORT=2 D
"RTN","IBCEPTC1",70,0)
 . W !,"** T indicates the claim was transmitted as a test claim prior to turning on EDI live for the payer. **"
"RTN","IBCEPTC1",71,0)
 . W !,"** R indicates that the batch was rejected. **"
"RTN","IBCEPTC1",72,0)
 I IBPAGE>1,$G(IBPAGE(0)) D HDR1(IBSORT,IBPAGE(1),.IBPAGE,.IBSTOP)
"RTN","IBCEPTC1",73,0)
 Q
"RTN","IBCEPTC1",74,0)
 ;
"RTN","IBCEPTC2")
0^40^B47686748^B95600462
"RTN","IBCEPTC2",1,0)
IBCEPTC2 ;ALB/TMK - EDI PREVIOUSLY TRANSMITTED CLAIMS LIST MGR ;01/20/05
"RTN","IBCEPTC2",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320**;21-MAR-94
"RTN","IBCEPTC2",3,0)
 ; IA 3337 for file 430.3
"RTN","IBCEPTC2",4,0)
 ;
"RTN","IBCEPTC2",5,0)
HDR ;
"RTN","IBCEPTC2",6,0)
 K VALMHDR
"RTN","IBCEPTC2",7,0)
 S VALMHDR(1)="** A claim may appear multiple times if transmitted more than once. **"
"RTN","IBCEPTC2",8,0)
 ;
"RTN","IBCEPTC2",9,0)
 I $G(IBSORT)=1 D
"RTN","IBCEPTC2",10,0)
 . S VALMHDR(2)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",11,0)
 . Q
"RTN","IBCEPTC2",12,0)
 ;
"RTN","IBCEPTC2",13,0)
 I $G(IBSORT)=2 D
"RTN","IBCEPTC2",14,0)
 . S VALMHDR(2)="** T = Test Claim   ** R = Batch Rejected"
"RTN","IBCEPTC2",15,0)
 . S VALMHDR(3)="Claims Selected: "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" (marked with *)"
"RTN","IBCEPTC2",16,0)
 . Q
"RTN","IBCEPTC2",17,0)
 ;
"RTN","IBCEPTC2",18,0)
 Q
"RTN","IBCEPTC2",19,0)
 ;
"RTN","IBCEPTC2",20,0)
INIT ;
"RTN","IBCEPTC2",21,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCEPTC2",22,0)
 D BLD
"RTN","IBCEPTC2",23,0)
 Q
"RTN","IBCEPTC2",24,0)
 ;
"RTN","IBCEPTC2",25,0)
BLD ; Build display lines
"RTN","IBCEPTC2",26,0)
 N IBDA,IBS1,IBS2,IBIFN,IB0,IBX,IBCNT,IBLEV1,IBBDA
"RTN","IBCEPTC2",27,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J),^TMP("IB_PREV_CLAIM_SELECT",$J),^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",28,0)
 S IBCNT=0
"RTN","IBCEPTC2",29,0)
 I $O(^TMP("IB_PREV_CLAIM",$J,""))="" D  G BLDQ
"RTN","IBCEPTC2",30,0)
 . S IBX=" ** NO PREVIOUSLY TRANSMITTED CLAIMS EXIST FOR SEARCH CRITERIA SELECTED **"
"RTN","IBCEPTC2",31,0)
 . D WRT(IBX,"",0,0,"","S","",.IBCNT,0)
"RTN","IBCEPTC2",32,0)
 ;
"RTN","IBCEPTC2",33,0)
 S IBS1="" F  S IBS1=$O(^TMP("IB_PREV_CLAIM",$J,IBS1)) Q:IBS1=""  D
"RTN","IBCEPTC2",34,0)
 . ; First level sort
"RTN","IBCEPTC2",35,0)
 . ; for sort by batch, display batch ID and transmit date
"RTN","IBCEPTC2",36,0)
 . I IBSORT=1 D
"RTN","IBCEPTC2",37,0)
 .. S IBLEV1="  Batch: "_$P(IBS1,U,2)_"  Last Transmitted: "_$G(^TMP("IB_PREV_CLAIM",$J,IBS1))
"RTN","IBCEPTC2",38,0)
 .. S IBBDA=+$O(^IBA(364.1,"B",$P(IBS1,U,2),0))
"RTN","IBCEPTC2",39,0)
 .. I $P(IBS1,U,3) S IBLEV1=IBLEV1_" ** Test"
"RTN","IBCEPTC2",40,0)
 .. I $P(IBS1,U,4) S IBLEV1=IBLEV1_" ** Rejected"
"RTN","IBCEPTC2",41,0)
 .. Q
"RTN","IBCEPTC2",42,0)
 . ;
"RTN","IBCEPTC2",43,0)
 . ; for sort by payer, display ins co name and payer address
"RTN","IBCEPTC2",44,0)
 . I IBSORT=2 D
"RTN","IBCEPTC2",45,0)
 .. S IBLEV1="  "_$P(IBS1,U)_"  "_$$CURRINS(+$G(^TMP("IB_PREV_CLAIM",$J,IBS1)),0)
"RTN","IBCEPTC2",46,0)
 .. Q
"RTN","IBCEPTC2",47,0)
 . ;
"RTN","IBCEPTC2",48,0)
 . ; output sort header line
"RTN","IBCEPTC2",49,0)
 . D WRT(IBLEV1,"",0,0,IBSORT,"S","",IBCNT,0) ; Add header line
"RTN","IBCEPTC2",50,0)
 . ;
"RTN","IBCEPTC2",51,0)
 . I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA)=VALMCNT
"RTN","IBCEPTC2",52,0)
 . S IBS2="" F  S IBS2=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2)) Q:IBS2=""  S IBDA=0 F  S IBDA=$O(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA)) Q:'IBDA  D
"RTN","IBCEPTC2",53,0)
 .. N IBX,IBTEST
"RTN","IBCEPTC2",54,0)
 .. S IBIFN=+$G(^IBA(364,+IBDA,0)),IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",55,0)
 .. S IBX=$P(^TMP("IB_PREV_CLAIM",$J,IBS1,IBS2,IBDA),U,1)
"RTN","IBCEPTC2",56,0)
 .. I IBX=1 S IBTEST=0    ; live 364 transmission
"RTN","IBCEPTC2",57,0)
 .. I IBX=2 S IBTEST=1    ; test 364 transmission
"RTN","IBCEPTC2",58,0)
 .. I IBX=3 S IBTEST=1    ; test 361.4 transmission
"RTN","IBCEPTC2",59,0)
 .. D WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,"S","",.IBCNT,0,IBTEST)
"RTN","IBCEPTC2",60,0)
 .. I IBSORT=1,IBBDA S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBBDA,VALMCNT)=IBIFN_U_IBCNT
"RTN","IBCEPTC2",61,0)
 .. Q
"RTN","IBCEPTC2",62,0)
 . Q
"RTN","IBCEPTC2",63,0)
 ;
"RTN","IBCEPTC2",64,0)
BLDQ Q
"RTN","IBCEPTC2",65,0)
 ;
"RTN","IBCEPTC2",66,0)
EXIT ; Clean up code
"RTN","IBCEPTC2",67,0)
 ;
"RTN","IBCEPTC2",68,0)
 K ^TMP("IB_PREV_CLAIM_LIST",$J)
"RTN","IBCEPTC2",69,0)
 K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC2",70,0)
 K ^TMP("IB_PREV_CLAIM_LIST_DX",$J)
"RTN","IBCEPTC2",71,0)
 K ^TMP("IB_PREV_CLAIM_BATCH",$J)
"RTN","IBCEPTC2",72,0)
 D CLEAR^VALM1
"RTN","IBCEPTC2",73,0)
 Q
"RTN","IBCEPTC2",74,0)
 ;
"RTN","IBCEPTC2",75,0)
WRT(IBS1,IBS2,IBDA,IBIFN,IBSORT,IBREP,IBHDR,IBPAGE,IBSTOP,IBTEST) ; Wrt/output
"RTN","IBCEPTC2",76,0)
 ;
"RTN","IBCEPTC2",77,0)
 N IBX,IB0,Z,IBCNT,ARSTAT
"RTN","IBCEPTC2",78,0)
 S IBCNT=IBPAGE
"RTN","IBCEPTC2",79,0)
 ;
"RTN","IBCEPTC2",80,0)
 I 'IBIFN D  G WRTQ
"RTN","IBCEPTC2",81,0)
 . ;
"RTN","IBCEPTC2",82,0)
 . ; for report output
"RTN","IBCEPTC2",83,0)
 . I IBREP="R" D  Q
"RTN","IBCEPTC2",84,0)
 .. S Z="",$P(Z,"=",133)=""
"RTN","IBCEPTC2",85,0)
 .. D SET(Z,1,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",86,0)
 .. D SET(IBS1,2,IBDA,IBREP,IBHDR,1,0,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",87,0)
 .. Q
"RTN","IBCEPTC2",88,0)
 . ;
"RTN","IBCEPTC2",89,0)
 . ; for ListMan screen output
"RTN","IBCEPTC2",90,0)
 . D SET(IBS1,0,IBDA,IBREP,IBHDR,IBCNT+1,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",91,0)
 . Q
"RTN","IBCEPTC2",92,0)
 ;
"RTN","IBCEPTC2",93,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTC2",94,0)
 S IBX=$$FO^IBCNEUT1($P(IB0,U,1),8)        ; claim#
"RTN","IBCEPTC2",95,0)
 S IBX=IBX_$S(IBSORT=2&$G(IBTEST):"T",1:" ")_" "
"RTN","IBCEPTC2",96,0)
 S IBX=IBX_$S($P(IB0,U,19)=2:"HCFA",1:"UB92")_" "
"RTN","IBCEPTC2",97,0)
 S Z=$$INPAT^IBCEF(IBIFN) S IBX=IBX_$S(Z:"INPT ",1:"OUTPT")
"RTN","IBCEPTC2",98,0)
 S IBX=IBX_$J($P(IB0,U,21),3)_"  "
"RTN","IBCEPTC2",99,0)
 S Z=$$EXTERNAL^DILFD(399,.13,"",$P(IB0,U,13))
"RTN","IBCEPTC2",100,0)
 S IBX=IBX_$$FO^IBCNEUT1(Z,11)_"  "             ; claim status
"RTN","IBCEPTC2",101,0)
 S ARSTAT=+$P($$BILL^RCJIBFN2(IBIFN),U,2)       ; ien
"RTN","IBCEPTC2",102,0)
 S ARSTAT=$P($G(^PRCA(430.3,ARSTAT,0)),U,2)     ; abbreviation
"RTN","IBCEPTC2",103,0)
 S IBX=IBX_$$FO^IBCNEUT1(ARSTAT,4)              ; a/r status display
"RTN","IBCEPTC2",104,0)
 ;
"RTN","IBCEPTC2",105,0)
 I IBSORT=1 D                    ; sort by batch
"RTN","IBCEPTC2",106,0)
 . N Z,IBZ,IBXDATA
"RTN","IBCEPTC2",107,0)
 . ; Print current payer, payer address, other payers, pat name
"RTN","IBCEPTC2",108,0)
 . D F^IBCEF("N-CURR INSURANCE COMPANY NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",109,0)
 . S IBX=IBX_$$FO^IBCNEUT1(IBZ,25)_" "                     ; ins co name
"RTN","IBCEPTC2",110,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$CURRINS(IBIFN,1),29)_" "      ; address
"RTN","IBCEPTC2",111,0)
 . K IBZ D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",112,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),15)_" "      ; other payer
"RTN","IBCEPTC2",113,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",114,0)
 . S IBX=IBX_$E(Z,1,18)                       ; patient name
"RTN","IBCEPTC2",115,0)
 . ;
"RTN","IBCEPTC2",116,0)
 . ; set line into list
"RTN","IBCEPTC2",117,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",118,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",119,0)
 . S IBX=""
"RTN","IBCEPTC2",120,0)
 . ;
"RTN","IBCEPTC2",121,0)
 . I $G(IBZ(2))'="" D    ; other payer #2 if it exists
"RTN","IBCEPTC2",122,0)
 .. S IBX=$J("",98)_$E($P(IBZ(2),U,1),1,15)
"RTN","IBCEPTC2",123,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",124,0)
 .. Q
"RTN","IBCEPTC2",125,0)
 . Q
"RTN","IBCEPTC2",126,0)
 ;
"RTN","IBCEPTC2",127,0)
 I IBSORT=2 D                    ; sort by payer
"RTN","IBCEPTC2",128,0)
 . N Z,IBZ
"RTN","IBCEPTC2",129,0)
 . S IBX=IBX_"  "
"RTN","IBCEPTC2",130,0)
 . ; Print other payers, patient name, date last trans, batch #, reject flag
"RTN","IBCEPTC2",131,0)
 . D F^IBCEF("N-OTH INSURANCE CO. NAME","IBZ",,IBIFN)
"RTN","IBCEPTC2",132,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(IBZ(1)),U,1),18)_"  "   ; oth payer#1
"RTN","IBCEPTC2",133,0)
 . S Z=$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTC2",134,0)
 . S IBX=IBX_$$FO^IBCNEUT1(Z,18)_"    "                  ; patient name
"RTN","IBCEPTC2",135,0)
 . ;
"RTN","IBCEPTC2",136,0)
 . S Z=+$P($G(^IBA(364,+IBDA,0)),U,2) ; Batch ptr
"RTN","IBCEPTC2",137,0)
 . S IBX=IBX_$$FO^IBCNEUT1($$FMTE^XLFDT($P($G(^IBA(364.1,+Z,1)),U,3)\1,"1"),17)     ; date last transmitted
"RTN","IBCEPTC2",138,0)
 . S IBX=IBX_$$FO^IBCNEUT1($P($G(^IBA(364.1,Z,0)),U,1),10)   ; batch#
"RTN","IBCEPTC2",139,0)
 . S IBX=IBX_$S($P($G(^IBA(364.1,Z,0)),U,5):" R",1:"")  ; batch rejected flag
"RTN","IBCEPTC2",140,0)
 . ;
"RTN","IBCEPTC2",141,0)
 . ; set line into list
"RTN","IBCEPTC2",142,0)
 . S IBCNT=IBCNT+1
"RTN","IBCEPTC2",143,0)
 . D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",144,0)
 . S IBX=""
"RTN","IBCEPTC2",145,0)
 . ;
"RTN","IBCEPTC2",146,0)
 . I $G(IBZ(2))'="" D       ; other payer#2 if it exists
"RTN","IBCEPTC2",147,0)
 .. S IBX=$J("",44)_$E($P(IBZ(2),U),1,18)
"RTN","IBCEPTC2",148,0)
 .. D SET(.IBX,1,IBDA,IBREP,IBHDR,IBCNT,.VALMCNT,.IBPAGE,.IBSTOP)
"RTN","IBCEPTC2",149,0)
 .. Q
"RTN","IBCEPTC2",150,0)
 . Q
"RTN","IBCEPTC2",151,0)
 ;
"RTN","IBCEPTC2",152,0)
WRTQ I IBREP="S" S IBPAGE=IBCNT
"RTN","IBCEPTC2",153,0)
 Q
"RTN","IBCEPTC2",154,0)
 ;
"RTN","IBCEPTC2",155,0)
SET(IBX,IBLINE,IBDA,IBREP,IBHDR,IBCNT,VALMCNT,IBPAGE,IBSTOP) ;
"RTN","IBCEPTC2",156,0)
 N Q,Z,IBZ
"RTN","IBCEPTC2",157,0)
 S IBZ=IBX,IBX=""
"RTN","IBCEPTC2",158,0)
 I IBREP="R" D  Q
"RTN","IBCEPTC2",159,0)
 . D:($Y+5)>IOSL!'IBPAGE HDR^IBCEPTC1(IBHDR,IBSORT,.IBPAGE,.IBSTOP) D
"RTN","IBCEPTC2",160,0)
 . I IBLINE F Z=1:1:IBLINE W !
"RTN","IBCEPTC2",161,0)
 . W:'IBSTOP IBZ
"RTN","IBCEPTC2",162,0)
 . Q
"RTN","IBCEPTC2",163,0)
 ;
"RTN","IBCEPTC2",164,0)
 ; only display the counter if we have a line with the claim#
"RTN","IBCEPTC2",165,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCEPTC2",166,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S IBZ=$$FO^IBCNEUT1($J(IBCNT,3),6)_IBZ
"RTN","IBCEPTC2",167,0)
 I IBDA,$TR($E(IBZ,1,8)," ")="" S IBZ="      "_IBZ
"RTN","IBCEPTC2",168,0)
 ;
"RTN","IBCEPTC2",169,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,VALMCNT,0)=IBZ
"RTN","IBCEPTC2",170,0)
 S ^TMP("IB_PREV_CLAIM_LIST",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEPTC2",171,0)
 I IBDA,$TR($E(IBZ,1,8)," ")'="" S ^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBCNT)=VALMCNT_U_IBDA
"RTN","IBCEPTC2",172,0)
 Q
"RTN","IBCEPTC2",173,0)
 ;
"RTN","IBCEPTC2",174,0)
CURRINS(IBIFN,TRUNC) ; Returns Current insurance address for given claim
"RTN","IBCEPTC2",175,0)
 ; TRUNC = truncate flag; 1 to truncate the address and city
"RTN","IBCEPTC2",176,0)
 N IBX,IBZ,L1,CITY,ST
"RTN","IBCEPTC2",177,0)
 D F^IBCEF("N-CURR INS CO FULL ADDRESS","IBZ",,IBIFN)
"RTN","IBCEPTC2",178,0)
 S L1=$G(IBZ(1)) I +$G(TRUNC) S L1=$E(L1,1,15)
"RTN","IBCEPTC2",179,0)
 S CITY=$G(IBZ(4)) I +$G(TRUNC) S CITY=$E(CITY,1,10)
"RTN","IBCEPTC2",180,0)
 S ST=$G(IBZ(5))
"RTN","IBCEPTC2",181,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCEPTC2",182,0)
 S IBX=L1_" "_CITY
"RTN","IBCEPTC2",183,0)
 I CITY'="",ST'="" S IBX=IBX_","_ST
"RTN","IBCEPTC2",184,0)
 E  S IBX=IBX_" "_ST
"RTN","IBCEPTC2",185,0)
 Q IBX
"RTN","IBCEPTC2",186,0)
 ;
"RTN","IBCEPTC3")
0^41^B61167367
"RTN","IBCEPTC3",1,0)
IBCEPTC3 ;ALB/ESG - EDI PREVIOUSLY TRANSMITTED CLAIMS ACTIONS ;12/19/05
"RTN","IBCEPTC3",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPTC3",3,0)
 ;
"RTN","IBCEPTC3",4,0)
 Q
"RTN","IBCEPTC3",5,0)
 ;
"RTN","IBCEPTC3",6,0)
SELECT ; Select claims to resubmit
"RTN","IBCEPTC3",7,0)
 N IBIFN,IBZ,IBI,IBQ,DIR,VALMY,X,Y
"RTN","IBCEPTC3",8,0)
 D FULL^VALM1
"RTN","IBCEPTC3",9,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBCEPTC3",10,0)
 S IBZ=0 F  S IBZ=$O(VALMY(IBZ)) Q:'IBZ  D
"RTN","IBCEPTC3",11,0)
 . S IBQ=$G(^TMP("IB_PREV_CLAIM_LIST_DX",$J,IBZ)),IBI=+$P(IBQ,U,2),IBQ=+IBQ
"RTN","IBCEPTC3",12,0)
 . S IBIFN=+$G(^IBA(364,IBI,0))
"RTN","IBCEPTC3",13,0)
 . Q:'IBIFN
"RTN","IBCEPTC3",14,0)
 . D MARK(IBIFN,IBZ,IBQ,IBI,1,.VALMHDR)
"RTN","IBCEPTC3",15,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",16,0)
 Q
"RTN","IBCEPTC3",17,0)
 ;
"RTN","IBCEPTC3",18,0)
SELBATCH ; Select a batch to resubmit
"RTN","IBCEPTC3",19,0)
 ; Assumes IBSORT is defined
"RTN","IBCEPTC3",20,0)
 N DIC,DIR,X,Y,Z,IBQ,IBZ,IBI,IBDX,IBASK,IBOK,IBY,DTOUT,DUOUT
"RTN","IBCEPTC3",21,0)
 D FULL^VALM1
"RTN","IBCEPTC3",22,0)
 I IBSORT'=1 D  G SELBQ
"RTN","IBCEPTC3",23,0)
 . S DIR(0)="EA",DIR("A",1)="This action is not available unless you chose to sort by batch",DIR("A")="Press return to continue: "
"RTN","IBCEPTC3",24,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",25,0)
 S DIC="^IBA(364.1,",DIC(0)="AEMQ",DIC("S")="I $D(^TMP(""IB_PREV_CLAIM_BATCH"",$J,+Y))"
"RTN","IBCEPTC3",26,0)
 D ^DIC K DIC
"RTN","IBCEPTC3",27,0)
 I Y'>0 G SELBQ
"RTN","IBCEPTC3",28,0)
 S IBY=+Y,VALMBG=+$G(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY))
"RTN","IBCEPTC3",29,0)
 ;
"RTN","IBCEPTC3",30,0)
 S (IBOK,IBASK)=1
"RTN","IBCEPTC3",31,0)
 I $G(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")) D  G:'IBOK SELBQ
"RTN","IBCEPTC3",32,0)
 . S DIR(0)="YA",DIR("A",1)="This batch was previously selected.",DIR("A")="Do you want to de-select all claims in this batch?: ",DIR("B")="No"
"RTN","IBCEPTC3",33,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",34,0)
 . I $D(DTOUT)!$D(DUOUT) S IBOK=0 Q
"RTN","IBCEPTC3",35,0)
 . I Y S IBASK=0 K ^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")
"RTN","IBCEPTC3",36,0)
 ;
"RTN","IBCEPTC3",37,0)
 S IBQ=0      ; last screen row# for claim
"RTN","IBCEPTC3",38,0)
 F  S IBQ=$O(^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,IBQ)) Q:'IBQ  D
"RTN","IBCEPTC3",39,0)
 . S IBZ=$G(^(IBQ))      ; IBIFN^selection#
"RTN","IBCEPTC3",40,0)
 . S Z=$P(IBZ,U,2)       ; selection#
"RTN","IBCEPTC3",41,0)
 . S IBDX=$G(^TMP("IB_PREV_CLAIM_LIST_DX",$J,+Z))   ; 1st screen row# for claim^364 ien
"RTN","IBCEPTC3",42,0)
 . S IBI=$P(IBDX,U,2)    ; 364 ien
"RTN","IBCEPTC3",43,0)
 . D MARK(+IBZ,Z,+IBDX,IBI,IBASK,.VALMHDR)
"RTN","IBCEPTC3",44,0)
 ;
"RTN","IBCEPTC3",45,0)
 I IBASK S ^TMP("IB_PREV_CLAIM_BATCH",$J,IBY,"SEL")=1
"RTN","IBCEPTC3",46,0)
 ;
"RTN","IBCEPTC3",47,0)
SELBQ S VALMBCK="R"
"RTN","IBCEPTC3",48,0)
 Q
"RTN","IBCEPTC3",49,0)
 ;
"RTN","IBCEPTC3",50,0)
MARK(IBIFN,IBZ,IBQ,IBI,IBASK,VALMHDR) ; Mark claim as selected for resubmit
"RTN","IBCEPTC3",51,0)
 ; Returns VALMHDR killed if any selections/de-selections made
"RTN","IBCEPTC3",52,0)
 N DIR,X,Y
"RTN","IBCEPTC3",53,0)
 I $D(^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)) D  Q
"RTN","IBCEPTC3",54,0)
 . S Y=1
"RTN","IBCEPTC3",55,0)
 . I IBASK D
"RTN","IBCEPTC3",56,0)
 .. S DIR(0)="YA",DIR("B")="No",DIR("A",1)="Claim "_$P($G(^DGCR(399,IBIFN,0)),U)_" for entry # "_IBZ_" has already been selected",DIR("A")="Do you want to de-select it?: " W ! D ^DIR K DIR
"RTN","IBCEPTC3",57,0)
 . I Y=1 K ^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN) S $E(^TMP("IB_PREV_CLAIM_LIST",$J,IBQ,0),6)=" ",^TMP("IB_PREV_CLAIM_SELECT",$J)=^TMP("IB_PREV_CLAIM_SELECT",$J)-1 K VALMHDR
"RTN","IBCEPTC3",58,0)
 ;
"RTN","IBCEPTC3",59,0)
 S ^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)=IBQ,^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN,0)=IBI,^TMP("IB_PREV_CLAIM_SELECT",$J)=$G(^TMP("IB_PREV_CLAIM_SELECT",$J))+1
"RTN","IBCEPTC3",60,0)
 S $E(^TMP("IB_PREV_CLAIM_LIST",$J,IBQ,0),6)="*" K VALMHDR
"RTN","IBCEPTC3",61,0)
 Q
"RTN","IBCEPTC3",62,0)
 ;
"RTN","IBCEPTC3",63,0)
VIEW ; View claims selected
"RTN","IBCEPTC3",64,0)
 N IBCT,IBQUIT,DIR,X,Y,Z,Z0
"RTN","IBCEPTC3",65,0)
 D FULL^VALM1
"RTN","IBCEPTC3",66,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D  G VIEWQ
"RTN","IBCEPTC3",67,0)
 . S DIR(0)="EA",DIR("A")="No claims have been selected - Press return to continue " D ^DIR K DIR
"RTN","IBCEPTC3",68,0)
 W @IOF
"RTN","IBCEPTC3",69,0)
 S (IBQUIT,IBCT)=0
"RTN","IBCEPTC3",70,0)
 W !,+^TMP("IB_PREV_CLAIM_SELECT",$J)," claims selected:"
"RTN","IBCEPTC3",71,0)
 S Z="" F  S Z=$O(^TMP("IB_PREV_CLAIM_SELECT",$J,Z)) Q:'Z  S Z0=+$G(^(Z)) D
"RTN","IBCEPTC3",72,0)
 . Q:'$D(^TMP("IB_PREV_CLAIM_LIST",$J,Z0,0))
"RTN","IBCEPTC3",73,0)
 . S IBCT=IBCT+1
"RTN","IBCEPTC3",74,0)
 . I '(IBCT#15) S IBQUIT=0 D  Q:IBQUIT
"RTN","IBCEPTC3",75,0)
 .. S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC3",76,0)
 .. I 'Y S IBQUIT=1
"RTN","IBCEPTC3",77,0)
 . W !,"  ",$E(^TMP("IB_PREV_CLAIM_LIST",$J,Z0,0),7,47)
"RTN","IBCEPTC3",78,0)
 ;
"RTN","IBCEPTC3",79,0)
 G:IBQUIT VIEWQ
"RTN","IBCEPTC3",80,0)
 S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTC3",81,0)
 ;
"RTN","IBCEPTC3",82,0)
VIEWQ S VALMBCK="R"
"RTN","IBCEPTC3",83,0)
 Q
"RTN","IBCEPTC3",84,0)
 ;
"RTN","IBCEPTC3",85,0)
RESUB ; Resubmit selected claims
"RTN","IBCEPTC3",86,0)
 N DIR,X,Y,IBIFN,IB364,Z1,IBTYPPTC,DIRUT,DIROUT,DTOUT,DUOUT,IBFSKIP,IBABORT
"RTN","IBCEPTC3",87,0)
 D FULL^VALM1
"RTN","IBCEPTC3",88,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D  G RESUBQ
"RTN","IBCEPTC3",89,0)
 . N DIR,X,Y
"RTN","IBCEPTC3",90,0)
 . S DIR(0)="EA",DIR("A")="No claims have been selected - Press return to continue " D ^DIR K DIR
"RTN","IBCEPTC3",91,0)
 ;
"RTN","IBCEPTC3",92,0)
 ; Ask user if resubmit as production or as test
"RTN","IBCEPTC3",93,0)
 S DIR(0)="SA^P:Production;T:Test Only"
"RTN","IBCEPTC3",94,0)
 S DIR("A")="Resubmit Claims: "
"RTN","IBCEPTC3",95,0)
 S DIR("B")="Production"
"RTN","IBCEPTC3",96,0)
 S DIR("?",1)="  Select Production to resubmit the claims to the payer for payment."
"RTN","IBCEPTC3",97,0)
 S DIR("?")="  Select Test to resubmit the claims as Test claims only."
"RTN","IBCEPTC3",98,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC3",99,0)
 I $D(DIRUT) G RESUBQ
"RTN","IBCEPTC3",100,0)
 S IBTYPPTC="TEST"
"RTN","IBCEPTC3",101,0)
 I Y="P" S IBTYPPTC="PRODUCTION"
"RTN","IBCEPTC3",102,0)
 ;
"RTN","IBCEPTC3",103,0)
 S DIR(0)="YA",DIR("B")="No"
"RTN","IBCEPTC3",104,0)
 S DIR("A",1)="You are about to resubmit "_+^TMP("IB_PREV_CLAIM_SELECT",$J)_" claims as "_IBTYPPTC_" claims."
"RTN","IBCEPTC3",105,0)
 S DIR("A")="Are you sure you want to continue?: "
"RTN","IBCEPTC3",106,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC3",107,0)
 I Y'=1 G RESUBQ
"RTN","IBCEPTC3",108,0)
 ;
"RTN","IBCEPTC3",109,0)
 ; OK to proceed and resubmit
"RTN","IBCEPTC3",110,0)
 W !!,"Resubmission in process ... "
"RTN","IBCEPTC3",111,0)
 ;
"RTN","IBCEPTC3",112,0)
 ; loop thru selected claims and set into scratch globals
"RTN","IBCEPTC3",113,0)
 S IBFSKIP=0
"RTN","IBCEPTC3",114,0)
 KILL ^TMP("IBRCBOLD",$J)
"RTN","IBCEPTC3",115,0)
 S IBIFN=0 F  S IBIFN=$O(^TMP("IB_PREV_CLAIM_SELECT",$J,IBIFN)) Q:'IBIFN  S Z1=+$G(^(IBIFN)),IB364=+$G(^(IBIFN,0)) I IB364 D
"RTN","IBCEPTC3",116,0)
 . ;
"RTN","IBCEPTC3",117,0)
 . I IBTYPPTC="TEST" D
"RTN","IBCEPTC3",118,0)
 .. S ^TMP("IBEDI_TEST_BATCH",$J,IB364)=""
"RTN","IBCEPTC3",119,0)
 .. S ^TMP("IBRESUBMIT",$J,IB364)=""
"RTN","IBCEPTC3",120,0)
 .. I Z1 D MARK(IBIFN,"",Z1,IB364,0,.VALMHDR)
"RTN","IBCEPTC3",121,0)
 .. Q
"RTN","IBCEPTC3",122,0)
 . ;
"RTN","IBCEPTC3",123,0)
 . I IBTYPPTC="PRODUCTION" D
"RTN","IBCEPTC3",124,0)
 .. I '$$TXOK(IBIFN) S IBFSKIP=IBFSKIP+1 Q    ; transmission not allowed
"RTN","IBCEPTC3",125,0)
 .. N Y S Y=$$ADDTBILL^IBCB1(IBIFN)  ; new entry in file 364 - "X" status
"RTN","IBCEPTC3",126,0)
 .. I '$P(Y,U,3) Q                   ; quit if new entry didn't get added
"RTN","IBCEPTC3",127,0)
 .. S ^TMP("IBSELX",$J,+Y)=""
"RTN","IBCEPTC3",128,0)
 .. S ^TMP("IBRCBOLD",$J,IB364)=""   ; save list of old transmit bills
"RTN","IBCEPTC3",129,0)
 .. I Z1 D MARK(IBIFN,"",Z1,IB364,0,.VALMHDR)
"RTN","IBCEPTC3",130,0)
 .. Q
"RTN","IBCEPTC3",131,0)
 . ;
"RTN","IBCEPTC3",132,0)
 . Q
"RTN","IBCEPTC3",133,0)
 ;
"RTN","IBCEPTC3",134,0)
 ; set top level of scratch globals based on test or production
"RTN","IBCEPTC3",135,0)
 I IBTYPPTC="TEST" S ^TMP("IBRESUBMIT",$J)="^^0^1",^TMP("IBEDI_TEST_BATCH",$J)=1
"RTN","IBCEPTC3",136,0)
 E  KILL ^TMP("IBRESUBMIT",$J),^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBONE",$J) S ^TMP("IBSELX",$J)=0
"RTN","IBCEPTC3",137,0)
 ;
"RTN","IBCEPTC3",138,0)
 ; resubmit call
"RTN","IBCEPTC3",139,0)
 D EN1^IBCE837B("","","",.IBABORT)
"RTN","IBCEPTC3",140,0)
 ;
"RTN","IBCEPTC3",141,0)
 ; if user aborted at the last minute, then get rid of the new entries
"RTN","IBCEPTC3",142,0)
 ; in file 364 that were added for production claim sending
"RTN","IBCEPTC3",143,0)
 I IBABORT D
"RTN","IBCEPTC3",144,0)
 . N IB,DIK,DA
"RTN","IBCEPTC3",145,0)
 . S IB=0 F  S IB=$O(^TMP("IBSELX",$J,IB)) Q:'IB  S DIK="^IBA(364,",DA=IB D ^DIK
"RTN","IBCEPTC3",146,0)
 . Q
"RTN","IBCEPTC3",147,0)
 ;
"RTN","IBCEPTC3",148,0)
 ; update EDI files for the old transmit bills
"RTN","IBCEPTC3",149,0)
 I 'IBABORT D
"RTN","IBCEPTC3",150,0)
 . N IB
"RTN","IBCEPTC3",151,0)
 . S IB=0 F  S IB=$O(^TMP("IBRCBOLD",$J,IB)) Q:'IB  D UPDEDI^IBCEM(IB,"R")
"RTN","IBCEPTC3",152,0)
 . Q
"RTN","IBCEPTC3",153,0)
 ;
"RTN","IBCEPTC3",154,0)
 ; cleanup
"RTN","IBCEPTC3",155,0)
 K ^TMP("IBEDI_TEST_BATCH",$J),^TMP("IBRESUBMIT",$J),^TMP("IBSELX",$J),^TMP("IBRCBOLD",$J)
"RTN","IBCEPTC3",156,0)
 I '$O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) K ^TMP("IB_PREV_CLAIM_SELECT",$J)
"RTN","IBCEPTC3",157,0)
 S DIR(0)="EA"
"RTN","IBCEPTC3",158,0)
 S DIR("A",1)="Selected claims have been resubmitted as "_IBTYPPTC_"."
"RTN","IBCEPTC3",159,0)
 I IBFSKIP D
"RTN","IBCEPTC3",160,0)
 . S DIR("A",2)="Please note: Some claims were not eligible to be resubmitted as live claims."
"RTN","IBCEPTC3",161,0)
 . S DIR("A",3)="             These claims are still indicated as being selected."
"RTN","IBCEPTC3",162,0)
 . Q
"RTN","IBCEPTC3",163,0)
 I IBABORT K DIR("A") S DIR("A",1)="No claims were resubmitted."
"RTN","IBCEPTC3",164,0)
 S DIR("A")="Press return to continue "
"RTN","IBCEPTC3",165,0)
 W ! D ^DIR K DIR
"RTN","IBCEPTC3",166,0)
 K VALMHDR
"RTN","IBCEPTC3",167,0)
 ;
"RTN","IBCEPTC3",168,0)
RESUBQ ;
"RTN","IBCEPTC3",169,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",170,0)
 Q
"RTN","IBCEPTC3",171,0)
 ;
"RTN","IBCEPTC3",172,0)
REPORT ; Print report
"RTN","IBCEPTC3",173,0)
 ; Assumes IBSORT, IBDT1, IBDT2 defined
"RTN","IBCEPTC3",174,0)
 N IBACT,Z
"RTN","IBCEPTC3",175,0)
 D FULL^VALM1
"RTN","IBCEPTC3",176,0)
 F  S IBACT=0 D DEVSEL^IBCEPTC(.IBACT) Q:IBACT 
"RTN","IBCEPTC3",177,0)
 I IBACT'=99 D
"RTN","IBCEPTC3",178,0)
 . N IBREP
"RTN","IBCEPTC3",179,0)
 . S IBREP="R" D RPT^IBCEPTC1(IBSORT,IBDT1,IBDT2)
"RTN","IBCEPTC3",180,0)
 ;
"RTN","IBCEPTC3",181,0)
 D HOME^%ZIS
"RTN","IBCEPTC3",182,0)
 S VALMBCK="R"
"RTN","IBCEPTC3",183,0)
 Q
"RTN","IBCEPTC3",184,0)
 ;
"RTN","IBCEPTC3",185,0)
CKSENT(VALMBCK) ; Make sure selected entries are transmitted
"RTN","IBCEPTC3",186,0)
 ;
"RTN","IBCEPTC3",187,0)
 N IBOK,DIR,X,Y
"RTN","IBCEPTC3",188,0)
 S IBOK=1
"RTN","IBCEPTC3",189,0)
 I $O(^TMP("IB_PREV_CLAIM_SELECT",$J,0)) D
"RTN","IBCEPTC3",190,0)
 . D FULL^VALM1
"RTN","IBCEPTC3",191,0)
 . S DIR(0)="YA",DIR("A",1)="You have selected "_+$G(^TMP("IB_PREV_CLAIM_SELECT",$J))_" claims, but have not resubmitted them",DIR("A")="Are you sure you want to quit before you resubmit them?: ",DIR("B")="No"
"RTN","IBCEPTC3",192,0)
 . W ! D ^DIR K DIR
"RTN","IBCEPTC3",193,0)
 . I Y'=1 S VALMBCK="R",IBOK=0
"RTN","IBCEPTC3",194,0)
 I IBOK S VALMBCK="Q"
"RTN","IBCEPTC3",195,0)
 Q
"RTN","IBCEPTC3",196,0)
 ;
"RTN","IBCEPTC3",197,0)
TXOK(IBIFN) ; Function determines if claim is OK for live resubmission
"RTN","IBCEPTC3",198,0)
 NEW OK,IB364,IBD,IBSTAT
"RTN","IBCEPTC3",199,0)
 S OK=0
"RTN","IBCEPTC3",200,0)
 I '$P($G(^DGCR(399,+$G(IBIFN),"TX")),U,2) G TXOKX                  ; last electronic extract date
"RTN","IBCEPTC3",201,0)
 I '$F(".2.3.4.","."_$P($G(^DGCR(399,IBIFN,0)),U,13)_".") G TXOKX   ; claim status
"RTN","IBCEPTC3",202,0)
 S IB364=+$$LAST364^IBCEF4(+$G(IBIFN)) I 'IB364 G TXOKX             ; transmit bill exists
"RTN","IBCEPTC3",203,0)
 S IBD=$G(^IBA(364,IB364,0)) I IBD="" G TXOKX
"RTN","IBCEPTC3",204,0)
 S IBSTAT=$P(IBD,U,3) I IBSTAT="X" G TXOKX                          ; already awaiting extract
"RTN","IBCEPTC3",205,0)
 S OK=1
"RTN","IBCEPTC3",206,0)
TXOKX ;
"RTN","IBCEPTC3",207,0)
 Q OK
"RTN","IBCEPTC3",208,0)
 ;
"RTN","IBCEPTR")
0^47^B101970593^B75024492
"RTN","IBCEPTR",1,0)
IBCEPTR ;ALB/ESG - Test Claim Messages Report ;28-JAN-2005
"RTN","IBCEPTR",2,0)
 ;;2.0;INTEGRATED BILLING;**296,320**;21-MAR-94
"RTN","IBCEPTR",3,0)
 ;
"RTN","IBCEPTR",4,0)
 ; eClaims Plus
"RTN","IBCEPTR",5,0)
 ; Report on Test Claim Transmissions and Status Messages
"RTN","IBCEPTR",6,0)
 ;
"RTN","IBCEPTR",7,0)
EN ; Entry Point
"RTN","IBCEPTR",8,0)
 NEW STOP,IBRMETH,IBRDATA
"RTN","IBCEPTR",9,0)
 D SELECT I STOP G EXIT
"RTN","IBCEPTR",10,0)
 D DEVICE
"RTN","IBCEPTR",11,0)
EXIT ; Exit Point
"RTN","IBCEPTR",12,0)
 Q
"RTN","IBCEPTR",13,0)
 ;
"RTN","IBCEPTR",14,0)
SELECT ; Determine which claim#'s or batch#'s to report on
"RTN","IBCEPTR",15,0)
 NEW DIC,DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT,D
"RTN","IBCEPTR",16,0)
 S STOP=0
"RTN","IBCEPTR",17,0)
 W @IOF
"RTN","IBCEPTR",18,0)
 W !!?23,"Test Claim EDI Transmission Report"
"RTN","IBCEPTR",19,0)
 W !!?7,"This report will display EDI transmission data and returned status"
"RTN","IBCEPTR",20,0)
 W !?7,"message data for selected test claims.  You may select test claims"
"RTN","IBCEPTR",21,0)
 W !?7,"by claim number or by batch number or you may search for claims that"
"RTN","IBCEPTR",22,0)
 W !?7,"were transmitted within a date range.",!
"RTN","IBCEPTR",23,0)
 S DIR(0)="SO^C:Claim;B:Batch;D:Date Range (Date Transmitted)"
"RTN","IBCEPTR",24,0)
 S DIR("A")="Selection Method",DIR("B")="D"
"RTN","IBCEPTR",25,0)
 D ^DIR K DIR
"RTN","IBCEPTR",26,0)
 I $D(DIRUT) S STOP=1 G SELECTX
"RTN","IBCEPTR",27,0)
 S IBRMETH=Y
"RTN","IBCEPTR",28,0)
 I IBRMETH'="C",IBRMETH'="B",IBRMETH'="D" S STOP=1 G SELECTX
"RTN","IBCEPTR",29,0)
 ;
"RTN","IBCEPTR",30,0)
 K IBRDATA
"RTN","IBCEPTR",31,0)
 I IBRMETH="C" D
"RTN","IBCEPTR",32,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",33,0)
 .. W !
"RTN","IBCEPTR",34,0)
 .. S DIC("A")="Test Claim: "
"RTN","IBCEPTR",35,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Claim: "
"RTN","IBCEPTR",36,0)
 .. S DIC("W")="D CLMLST^IBCEPTR(Y)"
"RTN","IBCEPTR",37,0)
 .. S DIC=361.4,DIC(0)="AEMQ",D="B" D MIX^DIC1
"RTN","IBCEPTR",38,0)
 .. Q:Y'>0
"RTN","IBCEPTR",39,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",40,0)
 .. Q
"RTN","IBCEPTR",41,0)
 . Q
"RTN","IBCEPTR",42,0)
 ;
"RTN","IBCEPTR",43,0)
 I IBRMETH="B" D
"RTN","IBCEPTR",44,0)
 . F  D  Q:Y'>0
"RTN","IBCEPTR",45,0)
 .. W !
"RTN","IBCEPTR",46,0)
 .. S DIC("A")="Test Batch: "
"RTN","IBCEPTR",47,0)
 .. I $O(IBRDATA("")) S DIC("A")="Another Test Batch: "
"RTN","IBCEPTR",48,0)
 .. S DIC("S")="I $P(^(0),U,14),$O(^IBM(361.4,""C"",+Y,0))"
"RTN","IBCEPTR",49,0)
 .. S DIC=364.1,DIC(0)="AEMQ",D="B^C" D MIX^DIC1
"RTN","IBCEPTR",50,0)
 .. Q:Y'>0
"RTN","IBCEPTR",51,0)
 .. S IBRDATA(+Y)=""
"RTN","IBCEPTR",52,0)
 .. Q
"RTN","IBCEPTR",53,0)
 . Q
"RTN","IBCEPTR",54,0)
 ;
"RTN","IBCEPTR",55,0)
 I IBRMETH="D" D
"RTN","IBCEPTR",56,0)
 . W !
"RTN","IBCEPTR",57,0)
 . S DIR(0)="DAO^:"_DT_":AEX",DIR("A")="  Earliest Date Claims Transmitted: "
"RTN","IBCEPTR",58,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",59,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",60,0)
 . S IBRDATA(1)=Y
"RTN","IBCEPTR",61,0)
 . W !
"RTN","IBCEPTR",62,0)
 . S DIR(0)="DAO^"_Y_":"_DT_":AEX",DIR("A")="    Latest Date Claims Transmitted: ",DIR("B")="Today"
"RTN","IBCEPTR",63,0)
 . D ^DIR K DIR
"RTN","IBCEPTR",64,0)
 . I $D(DIRUT)!'Y Q
"RTN","IBCEPTR",65,0)
 . S IBRDATA(2)=Y
"RTN","IBCEPTR",66,0)
 . Q
"RTN","IBCEPTR",67,0)
 ;
"RTN","IBCEPTR",68,0)
 I '$O(IBRDATA("")) S STOP=1 G SELECTX
"RTN","IBCEPTR",69,0)
 I IBRMETH="D",'$G(IBRDATA(1)) S STOP=1 G SELECTX
"RTN","IBCEPTR",70,0)
 I IBRMETH="D",'$G(IBRDATA(2)) S STOP=1 G SELECTX
"RTN","IBCEPTR",71,0)
 ;
"RTN","IBCEPTR",72,0)
SELECTX ;
"RTN","IBCEPTR",73,0)
 Q
"RTN","IBCEPTR",74,0)
 ;
"RTN","IBCEPTR",75,0)
DEVICE ; standard device selection
"RTN","IBCEPTR",76,0)
 NEW ZTRTN,ZTDESC,ZTSAVE,POP
"RTN","IBCEPTR",77,0)
 W !!!,"This report is 80 characters wide.",!
"RTN","IBCEPTR",78,0)
 S ZTRTN="COMPILE^IBCEPTR"
"RTN","IBCEPTR",79,0)
 S ZTDESC="Test Claim EDI Transmission Report"
"RTN","IBCEPTR",80,0)
 S ZTSAVE("IBRMETH")=""
"RTN","IBCEPTR",81,0)
 S ZTSAVE("IBRDATA")=""
"RTN","IBCEPTR",82,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE,"QM")
"RTN","IBCEPTR",83,0)
DEVX ;
"RTN","IBCEPTR",84,0)
 Q
"RTN","IBCEPTR",85,0)
 ;
"RTN","IBCEPTR",86,0)
COMPILE ; compile the data into a scratch global
"RTN","IBCEPTR",87,0)
 NEW RTN,EXTBCH,IBIFN,BCHIEN,TXDATM
"RTN","IBCEPTR",88,0)
 S RTN="IBCEPTR"
"RTN","IBCEPTR",89,0)
 KILL ^TMP($J,RTN)  ; init scratch global
"RTN","IBCEPTR",90,0)
 ;
"RTN","IBCEPTR",91,0)
 I IBRMETH="C" D    ; claim search
"RTN","IBCEPTR",92,0)
 . S EXTBCH=0
"RTN","IBCEPTR",93,0)
 . S IBIFN=0
"RTN","IBCEPTR",94,0)
 . F  S IBIFN=$O(IBRDATA(IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",95,0)
 . Q
"RTN","IBCEPTR",96,0)
 ;
"RTN","IBCEPTR",97,0)
 I IBRMETH="B" D    ; batch search
"RTN","IBCEPTR",98,0)
 . S BCHIEN=0
"RTN","IBCEPTR",99,0)
 . F  S BCHIEN=$O(IBRDATA(BCHIEN)) Q:'BCHIEN  D
"RTN","IBCEPTR",100,0)
 .. S EXTBCH=$P($G(^IBA(364.1,BCHIEN,0)),U,1)
"RTN","IBCEPTR",101,0)
 .. I EXTBCH="" S EXTBCH="~unknown"
"RTN","IBCEPTR",102,0)
 .. S IBIFN=0
"RTN","IBCEPTR",103,0)
 .. F  S IBIFN=$O(^IBM(361.4,"C",BCHIEN,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",104,0)
 .. Q
"RTN","IBCEPTR",105,0)
 . Q
"RTN","IBCEPTR",106,0)
 ;
"RTN","IBCEPTR",107,0)
 I IBRMETH="D" D    ; date range search
"RTN","IBCEPTR",108,0)
 . S EXTBCH=0
"RTN","IBCEPTR",109,0)
 . S TXDATM=$O(^IBM(361.4,"ATD",IBRDATA(1)),-1)
"RTN","IBCEPTR",110,0)
 . F  S TXDATM=$O(^IBM(361.4,"ATD",TXDATM)) Q:'TXDATM  Q:(TXDATM\1)>IBRDATA(2)  D
"RTN","IBCEPTR",111,0)
 .. S IBIFN=0
"RTN","IBCEPTR",112,0)
 .. F  S IBIFN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN)) Q:'IBIFN  D STORE(IBIFN)
"RTN","IBCEPTR",113,0)
 .. Q
"RTN","IBCEPTR",114,0)
 . Q
"RTN","IBCEPTR",115,0)
 ;
"RTN","IBCEPTR",116,0)
 D PRINT                           ; print the report
"RTN","IBCEPTR",117,0)
 D ^%ZISC                          ; close the device
"RTN","IBCEPTR",118,0)
 KILL ^TMP($J,RTN)                 ; clean up scratch global
"RTN","IBCEPTR",119,0)
 I $D(ZTQUEUED) S ZTREQ="@"        ; purge the task record
"RTN","IBCEPTR",120,0)
COMPX ;
"RTN","IBCEPTR",121,0)
 Q
"RTN","IBCEPTR",122,0)
 ;
"RTN","IBCEPTR",123,0)
STORE(IBIFN) ; Input = internal bill#; continue compilation
"RTN","IBCEPTR",124,0)
 NEW IB0,CLAIM,IBRTXD0,TXIEN,SMIEN,DATA,TXDTM
"RTN","IBCEPTR",125,0)
 S IB0=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEPTR",126,0)
 S CLAIM=$P(IB0,U,1)  ; external claim#
"RTN","IBCEPTR",127,0)
 I CLAIM="" S CLAIM="~unknown"
"RTN","IBCEPTR",128,0)
 S IBRTXD0=99999999   ; initial value for earliest transmission date
"RTN","IBCEPTR",129,0)
 ;
"RTN","IBCEPTR",130,0)
 I IBRMETH="C" D   ; claim search for transmission data (all)
"RTN","IBCEPTR",131,0)
 . S TXIEN=0
"RTN","IBCEPTR",132,0)
 . F  S TXIEN=$O(^IBM(361.4,IBIFN,1,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",133,0)
 . Q
"RTN","IBCEPTR",134,0)
 ;
"RTN","IBCEPTR",135,0)
 I IBRMETH="B" D   ; batch search for transmission data ("C" x-ref)
"RTN","IBCEPTR",136,0)
 . S TXIEN=0
"RTN","IBCEPTR",137,0)
 . F  S TXIEN=$O(^IBM(361.4,"C",BCHIEN,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",138,0)
 . Q
"RTN","IBCEPTR",139,0)
 ;
"RTN","IBCEPTR",140,0)
 I IBRMETH="D" D   ; date range search for transmission data ("ATD" xref)
"RTN","IBCEPTR",141,0)
 . S TXIEN=0
"RTN","IBCEPTR",142,0)
 . F  S TXIEN=$O(^IBM(361.4,"ATD",TXDATM,IBIFN,TXIEN)) Q:'TXIEN  D STORETX(IBIFN,TXIEN)
"RTN","IBCEPTR",143,0)
 . Q
"RTN","IBCEPTR",144,0)
 ;
"RTN","IBCEPTR",145,0)
 ; loop thru all returned messages for claim
"RTN","IBCEPTR",146,0)
 S SMIEN=0
"RTN","IBCEPTR",147,0)
 F  S SMIEN=$O(^IBM(361.4,IBIFN,2,SMIEN)) Q:'SMIEN  D
"RTN","IBCEPTR",148,0)
 . S DATA=$G(^IBM(361.4,IBIFN,2,SMIEN,0)) Q:DATA=""   ; received msg data
"RTN","IBCEPTR",149,0)
 . S TXDTM=$P(DATA,U,1) Q:'TXDTM    ; msg rec'd date/time
"RTN","IBCEPTR",150,0)
 . ;
"RTN","IBCEPTR",151,0)
 . ; Batch only: if this status message was received before the
"RTN","IBCEPTR",152,0)
 . ; earliest transmission for this batch, then don't include it
"RTN","IBCEPTR",153,0)
 . I IBRMETH="B",TXDTM'>IBRTXD0 Q
"RTN","IBCEPTR",154,0)
 . ;
"RTN","IBCEPTR",155,0)
 . ; Date range search only:  make sure the date/time the status message
"RTN","IBCEPTR",156,0)
 . ; was received is inside the user specified date range for this report
"RTN","IBCEPTR",157,0)
 . I IBRMETH="D",(TXDTM\1)<IBRDATA(1) Q    ; rec'd too early
"RTN","IBCEPTR",158,0)
 . I IBRMETH="D",(TXDTM\1)>IBRDATA(2) Q    ; rec'd too late
"RTN","IBCEPTR",159,0)
 . ;
"RTN","IBCEPTR",160,0)
 . ; store it
"RTN","IBCEPTR",161,0)
 . M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,2,SMIEN)=^IBM(361.4,IBIFN,2,SMIEN)
"RTN","IBCEPTR",162,0)
 . Q
"RTN","IBCEPTR",163,0)
STOREX ;
"RTN","IBCEPTR",164,0)
 Q
"RTN","IBCEPTR",165,0)
 ;
"RTN","IBCEPTR",166,0)
STORETX(IBIFN,TXIEN) ; store transmission info
"RTN","IBCEPTR",167,0)
 NEW DATA,TXDTM
"RTN","IBCEPTR",168,0)
 S DATA=$G(^IBM(361.4,IBIFN,1,TXIEN,0))
"RTN","IBCEPTR",169,0)
 I DATA="" G STTXXX
"RTN","IBCEPTR",170,0)
 S TXDTM=$P(DATA,U,1)   ; transmit date/time
"RTN","IBCEPTR",171,0)
 I 'TXDTM G STTXXX
"RTN","IBCEPTR",172,0)
 I TXDTM<IBRTXD0 S IBRTXD0=TXDTM
"RTN","IBCEPTR",173,0)
 ;
"RTN","IBCEPTR",174,0)
 ; store it
"RTN","IBCEPTR",175,0)
 M ^TMP($J,RTN,EXTBCH,CLAIM,TXDTM,1,TXIEN)=^IBM(361.4,IBIFN,1,TXIEN)
"RTN","IBCEPTR",176,0)
STTXXX ;
"RTN","IBCEPTR",177,0)
 Q
"RTN","IBCEPTR",178,0)
 ;
"RTN","IBCEPTR",179,0)
PRINT ; print the report to the specified device
"RTN","IBCEPTR",180,0)
 NEW MAXCNT,CRT,PAGECNT,STOP,DIR,X,Y,DIRUT,DUOUT,DTOUT,DIROUT
"RTN","IBCEPTR",181,0)
 NEW BATCH,CLAIM,IBIFN,CLMD,TXD,TYPE,IEN
"RTN","IBCEPTR",182,0)
 I IOST["C-" S MAXCNT=IOSL-3,CRT=1
"RTN","IBCEPTR",183,0)
 E  S MAXCNT=IOSL-6,CRT=0
"RTN","IBCEPTR",184,0)
 S PAGECNT=0,STOP=0
"RTN","IBCEPTR",185,0)
 ;
"RTN","IBCEPTR",186,0)
 I '$D(^TMP($J,RTN)) D HEADER W !!!?5,"No Data Found"
"RTN","IBCEPTR",187,0)
 ;
"RTN","IBCEPTR",188,0)
 S BATCH=""
"RTN","IBCEPTR",189,0)
 F  S BATCH=$O(^TMP($J,RTN,BATCH)) Q:BATCH=""  D  Q:STOP
"RTN","IBCEPTR",190,0)
 . D HEADER Q:STOP
"RTN","IBCEPTR",191,0)
 . I BATCH'=0 W !!,"Batch#:  ",BATCH
"RTN","IBCEPTR",192,0)
 . S CLAIM=""
"RTN","IBCEPTR",193,0)
 . F  S CLAIM=$O(^TMP($J,RTN,BATCH,CLAIM)) Q:CLAIM=""  D  Q:STOP
"RTN","IBCEPTR",194,0)
 .. I $Y+2>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",195,0)
 .. I BATCH=0 W !
"RTN","IBCEPTR",196,0)
 .. W !,"Claim#:  ",CLAIM
"RTN","IBCEPTR",197,0)
 .. S IBIFN=+$O(^DGCR(399,"B",CLAIM,""))
"RTN","IBCEPTR",198,0)
 .. I IBIFN S CLMD=$$BT(IBIFN) W ?18,$E($P(CLMD,U,3),1,20),?40,"(",$P(CLMD,U,1),")"
"RTN","IBCEPTR",199,0)
 .. W !,$$RJ^XLFSTR("",80,"-")
"RTN","IBCEPTR",200,0)
 .. ;
"RTN","IBCEPTR",201,0)
 .. S TXD=0
"RTN","IBCEPTR",202,0)
 .. F  S TXD=$O(^TMP($J,RTN,BATCH,CLAIM,TXD)) Q:'TXD!STOP  S TYPE=0 F  S TYPE=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE)) Q:'TYPE!STOP  S IEN=0 F  S IEN=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN)) Q:'IEN!STOP  D  Q:STOP
"RTN","IBCEPTR",203,0)
 ... I TYPE=1 D TXPRT
"RTN","IBCEPTR",204,0)
 ... I TYPE=2 D SMPRT
"RTN","IBCEPTR",205,0)
 ... Q
"RTN","IBCEPTR",206,0)
 .. Q
"RTN","IBCEPTR",207,0)
 . Q
"RTN","IBCEPTR",208,0)
 ;
"RTN","IBCEPTR",209,0)
 I STOP G PRINTX
"RTN","IBCEPTR",210,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G PRINTX
"RTN","IBCEPTR",211,0)
 W !!?5,"*** End of Report ***"
"RTN","IBCEPTR",212,0)
 I CRT,'$D(ZTQUEUED) S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",213,0)
PRINTX ;
"RTN","IBCEPTR",214,0)
 Q
"RTN","IBCEPTR",215,0)
 ;
"RTN","IBCEPTR",216,0)
TXPRT ; print transmission information
"RTN","IBCEPTR",217,0)
 NEW DATA,TXDTM,EXTBCH,TXBY,INSIEN,PAYER,PSEQ,INZ
"RTN","IBCEPTR",218,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G TXPRTX
"RTN","IBCEPTR",219,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",220,0)
 S EXTBCH=$$EXTERNAL^DILFD(361.41,.02,,$P(DATA,U,2))  ; batch
"RTN","IBCEPTR",221,0)
 S TXBY=$$EXTERNAL^DILFD(361.41,.03,,$P(DATA,U,3))    ; who tx
"RTN","IBCEPTR",222,0)
 S INSIEN=+$$FINDINS^IBCEF1(IBIFN,$P(DATA,U,4))       ; insurance
"RTN","IBCEPTR",223,0)
 S INZ=$$INSADD^IBCNSC02(INSIEN)                      ; ins name/addr
"RTN","IBCEPTR",224,0)
 S PAYER=$P(INZ,U,1)                                  ; ins name
"RTN","IBCEPTR",225,0)
 S PSEQ=$TR($P(DATA,U,4),"123","PST")                 ; payer seq
"RTN","IBCEPTR",226,0)
 ;
"RTN","IBCEPTR",227,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G TXPRTX
"RTN","IBCEPTR",228,0)
 W !,"Transmission Information"
"RTN","IBCEPTR",229,0)
 W !?1,TXDTM,?22,"Bch#",+$E(EXTBCH,4,99),?33,$E(TXBY,1,15),?50,$E(PAYER,1,20),"  (",PSEQ,")"
"RTN","IBCEPTR",230,0)
 ; display address info if not Medicare
"RTN","IBCEPTR",231,0)
 I '$$MCRWNR^IBEFUNC(INSIEN) W !?50,$E($P(INZ,U,2),1,15),",",$E($P(INZ,U,3),1,11),",",$E($P(INZ,U,4),1,2)
"RTN","IBCEPTR",232,0)
 W !
"RTN","IBCEPTR",233,0)
TXPRTX ;
"RTN","IBCEPTR",234,0)
 Q
"RTN","IBCEPTR",235,0)
 ;
"RTN","IBCEPTR",236,0)
SMPRT ; print returned status message information
"RTN","IBCEPTR",237,0)
 NEW DATA,TXDTM,SEVERITY,Z
"RTN","IBCEPTR",238,0)
 S DATA=$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,0)) I DATA="" G SMPRTX
"RTN","IBCEPTR",239,0)
 S TXDTM=$$FMTE^XLFDT($P(DATA,U,1),"5Z")
"RTN","IBCEPTR",240,0)
 S SEVERITY=$$EXTERNAL^DILFD(361.42,.02,,$P(DATA,U,2))  ; msg severity
"RTN","IBCEPTR",241,0)
 ;
"RTN","IBCEPTR",242,0)
 I $Y+2>MAXCNT!'PAGECNT D HEADER I STOP G SMPRTX
"RTN","IBCEPTR",243,0)
 W !,"Status Message Information"
"RTN","IBCEPTR",244,0)
 W !?1,TXDTM,?22,SEVERITY,?65,"Msg#",$P(DATA,U,3)
"RTN","IBCEPTR",245,0)
 S Z=0
"RTN","IBCEPTR",246,0)
 F  S Z=$O(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z)) Q:'Z  D  Q:STOP
"RTN","IBCEPTR",247,0)
 . I $Y+1>MAXCNT!'PAGECNT D HEADER Q:STOP
"RTN","IBCEPTR",248,0)
 . W !?2,$G(^TMP($J,RTN,BATCH,CLAIM,TXD,TYPE,IEN,1,Z,0))
"RTN","IBCEPTR",249,0)
 . Q
"RTN","IBCEPTR",250,0)
 W !
"RTN","IBCEPTR",251,0)
SMPRTX ;
"RTN","IBCEPTR",252,0)
 Q
"RTN","IBCEPTR",253,0)
 ;
"RTN","IBCEPTR",254,0)
HEADER ; page break and header
"RTN","IBCEPTR",255,0)
 NEW LIN,HDR,TAB
"RTN","IBCEPTR",256,0)
 S STOP=0
"RTN","IBCEPTR",257,0)
 I CRT,PAGECNT>0,'$D(ZTQUEUED) D  I STOP G HEADX
"RTN","IBCEPTR",258,0)
 . I MAXCNT<51 F LIN=1:1:(MAXCNT-$Y) W !
"RTN","IBCEPTR",259,0)
 . S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEPTR",260,0)
 . I 'Y S STOP=1 Q
"RTN","IBCEPTR",261,0)
 . Q
"RTN","IBCEPTR",262,0)
 ;
"RTN","IBCEPTR",263,0)
 S PAGECNT=PAGECNT+1
"RTN","IBCEPTR",264,0)
 W @IOF,!
"RTN","IBCEPTR",265,0)
 ;
"RTN","IBCEPTR",266,0)
 W "Test Claim EDI Transmission Report"
"RTN","IBCEPTR",267,0)
 S HDR="Page: "_PAGECNT,TAB=80-$L(HDR)-1
"RTN","IBCEPTR",268,0)
 W ?TAB,HDR
"RTN","IBCEPTR",269,0)
 W !,"Selected ",$S(IBRMETH="B":"Batches",IBRMETH="C":"Claims",1:"Date Range")
"RTN","IBCEPTR",270,0)
 S HDR=$$FMTE^XLFDT($$NOW^XLFDT,"1Z"),TAB=80-$L(HDR)-1
"RTN","IBCEPTR",271,0)
 W ?TAB,HDR
"RTN","IBCEPTR",272,0)
 W !,$$RJ^XLFSTR("",80,"=")
"RTN","IBCEPTR",273,0)
 ;
"RTN","IBCEPTR",274,0)
 ; check for a stop request
"RTN","IBCEPTR",275,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD() D  G HEADX
"RTN","IBCEPTR",276,0)
 . S (ZTSTOP,STOP)=1
"RTN","IBCEPTR",277,0)
 . W !!!?5,"*** Report Halted by TaskManager Request ***"
"RTN","IBCEPTR",278,0)
 . Q
"RTN","IBCEPTR",279,0)
 ;
"RTN","IBCEPTR",280,0)
HEADX ;
"RTN","IBCEPTR",281,0)
 Q
"RTN","IBCEPTR",282,0)
 ;
"RTN","IBCEPTR",283,0)
BT(IBIFN) ; bill type and info
"RTN","IBCEPTR",284,0)
 ; [1] TYPE (form type, charge type, inp/outp)
"RTN","IBCEPTR",285,0)
 ; [2] claim#
"RTN","IBCEPTR",286,0)
 ; [3] patient name
"RTN","IBCEPTR",287,0)
 NEW TYPE,IB0,F,C,S S TYPE=""
"RTN","IBCEPTR",288,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)) I IB0="" Q ""
"RTN","IBCEPTR",289,0)
 S F=$P(IB0,U,19),F=$S(F=2:"Hcfa",1:"UB92")
"RTN","IBCEPTR",290,0)
 S C=$P(IB0,U,27),C=$S(C=1:"Inst",1:"Prof")
"RTN","IBCEPTR",291,0)
 S S=$$INPAT^IBCEF(IBIFN),S=$S(S=1:"Inpat",1:"Outpat")
"RTN","IBCEPTR",292,0)
 S TYPE=F_", "_C_", "_S
"RTN","IBCEPTR",293,0)
 Q TYPE_U_$P(IB0,U,1)_U_$P($G(^DPT(+$P(IB0,U,2),0)),U,1)
"RTN","IBCEPTR",294,0)
 ;
"RTN","IBCEPTR",295,0)
CLMLST(IBIFN) ; DIC lister
"RTN","IBCEPTR",296,0)
 NEW TYPE,LTD,N1,N2
"RTN","IBCEPTR",297,0)
 S TYPE=$P($$BT(IBIFN),U,1)
"RTN","IBCEPTR",298,0)
 S LTD=$$FMTE^XLFDT($P($G(^IBM(361.4,IBIFN,0)),U,2),"2Z")
"RTN","IBCEPTR",299,0)
 S N1=+$P($G(^IBM(361.4,IBIFN,1,0)),U,4)  ; # transmissions
"RTN","IBCEPTR",300,0)
 S N2=+$P($G(^IBM(361.4,IBIFN,2,0)),U,4)  ; # return messages
"RTN","IBCEPTR",301,0)
 W " ",TYPE,?34," ",LTD,?45," ",N1," Transmission",$S(N1'=1:"s",1:"")
"RTN","IBCEPTR",302,0)
 W ?63," ",N2," Message",$S(N2'=1:"s",1:"")
"RTN","IBCEPTR",303,0)
CLMLSTX ;
"RTN","IBCEPTR",304,0)
 Q
"RTN","IBCEPTR",305,0)
 ;
"RTN","IBCEPU")
0^52^B931985
"RTN","IBCEPU",1,0)
IBCEPU ;ALB/TMP - Functions for PROVIDER ID MAINTENANCE ;13-DEC-99
"RTN","IBCEPU",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEPU",3,0)
 G AWAY
"RTN","IBCEPU",4,0)
AWAY Q
"RTN","IBCEPU",5,0)
 ; This routine is used by various input transforms to make sure the qualifiers 
"RTN","IBCEPU",6,0)
 ; comply with the spreadsheet of valid qualiers provided by CBO.
"RTN","IBCEPU",7,0)
 ;
"RTN","IBCEPU",8,0)
LFINS(Y) ; Lab or Facility provided by insuance
"RTN","IBCEPU",9,0)
 Q $$CHECK("^1A^1B^1C^1H^G2^LU^N5^X5^",Y)
"RTN","IBCEPU",10,0)
 ;
"RTN","IBCEPU",11,0)
NVALFOWN(Y) ; Non-VA Lab or Facility provided by Lab or Facility 
"RTN","IBCEPU",12,0)
 Q $$CHECK("^0B^TJ^X4^X5^1G^",Y)
"RTN","IBCEPU",13,0)
 ;
"RTN","IBCEPU",14,0)
BPS(Y) ; Billing Provider Secodnary IDs
"RTN","IBCEPU",15,0)
 Q $$CHECK("^0B^1A^1B^1C^1G^1H^B3^BQ^EI^FH^G2^LU^U3^X5^",Y)
"RTN","IBCEPU",16,0)
 ;
"RTN","IBCEPU",17,0)
RAOWN(Y) ; Rendering/Attending et al own IDs
"RTN","IBCEPU",18,0)
 Q $$CHECK("^0B^1G^EI^X5^SY^",Y)
"RTN","IBCEPU",19,0)
 ;
"RTN","IBCEPU",20,0)
RAINS(Y) ; Rendering/Attending et al provided by insurance
"RTN","IBCEPU",21,0)
 Q $$CHECK("^1A^1B^1C^1G^1H^G2^LU^N5^",Y)
"RTN","IBCEPU",22,0)
 ;
"RTN","IBCEPU",23,0)
EPT(Y) ; Electronic Plan Type (used to calculate ID based on plan type)
"RTN","IBCEPU",24,0)
 Q $$CHECK("^1J^",Y)
"RTN","IBCEPU",25,0)
CHECK(X,Y) ;
"RTN","IBCEPU",26,0)
 I '$P($G(^IBE(355.97,+Y,0)),U,8) Q 0
"RTN","IBCEPU",27,0)
 N X12
"RTN","IBCEPU",28,0)
 S X12=$P($G(^IBE(355.97,+Y,0)),U,3)
"RTN","IBCEPU",29,0)
 Q:X12="" 0
"RTN","IBCEPU",30,0)
 S X12=U_X12_U
"RTN","IBCEPU",31,0)
 I X[X12 Q 1
"RTN","IBCEPU",32,0)
 Q 0
"RTN","IBCESRV")
0^78^B69133762^B67439456
"RTN","IBCESRV",1,0)
IBCESRV ;ALB/TMP - Server interface to IB from Austin ;8/6/03 10:04am
"RTN","IBCESRV",2,0)
 ;;2.0;INTEGRATED BILLING;**137,181,196,232,296,320**;21-MAR-94
"RTN","IBCESRV",3,0)
 ;
"RTN","IBCESRV",4,0)
SERVER ; Entry point for server option to process EDI msgs received from Austin
"RTN","IBCESRV",5,0)
 ;
"RTN","IBCESRV",6,0)
 N IBEFLG,IBERR,IBTDA,XMER,IBXMZ,IBHOLDCT
"RTN","IBCESRV",7,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",8,0)
 S IBXMZ=$G(XMZ)
"RTN","IBCESRV",9,0)
 S IBEFLG=$$MSG(.XMER,.IBTDA,IBXMZ)
"RTN","IBCESRV",10,0)
 D:$G(IBEFLG) PERROR^IBCESRV1(.IBERR,.IBTDA,"G.IB EDI",IBXMZ)
"RTN","IBCESRV",11,0)
 N ZTREQ
"RTN","IBCESRV",12,0)
 D DKILL^IBCESRV1(IBXMZ) S ZTREQ="@"
"RTN","IBCESRV",13,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J),^TMP("IBMSG-H",$J)
"RTN","IBCESRV",14,0)
 Q
"RTN","IBCESRV",15,0)
 ;
"RTN","IBCESRV",16,0)
MSG(XMER,IBTDA,IBXMZ) ; Read/Store message lines
"RTN","IBCESRV",17,0)
 ;     Return message formats:
"RTN","IBCESRV",18,0)
 ;        Ref:  Your <queue name> message #<msg#> with Austin ID #<id #>,
"RTN","IBCESRV",19,0)
 ;              is assigned confirmation number <confirmation #>.
"RTN","IBCESRV",20,0)
 ;              Generates an 837REC0 message
"RTN","IBCESRV",21,0)
 ;        277STAT - claim status messages - Generates one or more 837REC1
"RTN","IBCESRV",22,0)
 ;                                          837REC2 or 837REJ1 messages
"RTN","IBCESRV",23,0)
 ;        837DEL - bill entry # from File 364
"RTN","IBCESRV",24,0)
 ;        835EOB - Explanation of Benefits messages
"RTN","IBCESRV",25,0)
 ;        REPORT - Free text Envoy report file - may contain one or more
"RTN","IBCESRV",26,0)
 ;                 reports that are turned into bulletins
"RTN","IBCESRV",27,0)
 ;
"RTN","IBCESRV",28,0)
 ; OUTPUT:
"RTN","IBCESRV",29,0)
 ;  Function returns flag ... 0 = no errors    1 = errors
"RTN","IBCESRV",30,0)
 ;  IBTDA - array subscripted by ien of message file entries created
"RTN","IBCESRV",31,0)
 ;          If array entry = 1, the message was only partially stored
"RTN","IBCESRV",32,0)
 ;
"RTN","IBCESRV",33,0)
 N IBLAST,IBTYP,IBTYP1,IB0,IBBTCH,IBDATE,IBHD,IBMG,IBRTN,IBTXN,IBTXND,XMDUZ,IBGBL,IBD,IBEFLG,IBHOLDCT,IBWANT,X,Y,Z
"RTN","IBCESRV",34,0)
 K ^TMP("IBERR",$J),^TMP("IBMSG",$J),^TMP("IBMSGH",$J),^TMP("IB-HOLD",$J)
"RTN","IBCESRV",35,0)
 ;
"RTN","IBCESRV",36,0)
 S (IBEFLG,IBERR,IBTXN)="",IBGBL="IBTXN",IBLAST=0
"RTN","IBCESRV",37,0)
 S IBD("MSG#")=IBXMZ
"RTN","IBCESRV",38,0)
 S IBHD=$$NET^XMRENT(IBXMZ)
"RTN","IBCESRV",39,0)
 S IBD("SUBJ")=$P(IBHD,U,6)
"RTN","IBCESRV",40,0)
 S (X,IBDATE)=$P(IBHD,U)
"RTN","IBCESRV",41,0)
 I X'="" D  ;Reformat date, if needed
"RTN","IBCESRV",42,0)
 . I X'["@" S X=$P(X," ",1,3)_"@"_$P(X," ",4)
"RTN","IBCESRV",43,0)
 . N %DT
"RTN","IBCESRV",44,0)
 . S %DT="XTS" D ^%DT S:Y>0 IBDATE=Y\.0001*.0001
"RTN","IBCESRV",45,0)
 ;
"RTN","IBCESRV",46,0)
 K ^TMP("IB-HOLD",$J) N IBHOLDCT S IBHOLDCT=0
"RTN","IBCESRV",47,0)
 S IBD("Q")=$E(IBD("SUBJ"),1,3)
"RTN","IBCESRV",48,0)
 I $G(IBD("SUBJ"))?.E1(1" MCR",1" MCT",1" MCH")1" Confirmation" D  G MSGQ:$G(IBERR),MSG1
"RTN","IBCESRV",49,0)
 . S IBD("Q")="MC"_$E($P(IBD("SUBJ")," MC",2))
"RTN","IBCESRV",50,0)
 . ;Austin confirmation
"RTN","IBCESRV",51,0)
 . X XMREC ; Line 1 of message
"RTN","IBCESRV",52,0)
 . S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",53,0)
 . I XMER<0 D  Q
"RTN","IBCESRV",54,0)
 .. S IBERR=3
"RTN","IBCESRV",55,0)
 .. S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",56,0)
 .. S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",57,0)
 . S IBTXN=XMRG
"RTN","IBCESRV",58,0)
 . S IBBTCH=+$O(^IBA(364.1,"MSG",+$P(IBTXN,"#",2)\1,""))
"RTN","IBCESRV",59,0)
 . I 'IBBTCH S IBERR=6 D REST(.IBTXN,IBGBL) Q  ;No msgs match conf recpt
"RTN","IBCESRV",60,0)
 . S IBTXN("BATCH",IBBTCH,0)="837REC0^"_IBD("MSG#")_U_+$E($P(IBD("SUBJ")," "),4,14)_"^^"_IBBTCH_U_IBDATE
"RTN","IBCESRV",61,0)
 . ;
"RTN","IBCESRV",62,0)
 . X XMREC ;Get second line of the message
"RTN","IBCESRV",63,0)
 . I XMER<0 S IBERR=2 Q
"RTN","IBCESRV",64,0)
 . S IBTXN("BATCH",IBBTCH,1)=IBTXN_" "_XMRG_"$",IBTXN=IBTXN("BATCH",IBBTCH,0)
"RTN","IBCESRV",65,0)
 . S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",66,0)
 . S IBLAST=1
"RTN","IBCESRV",67,0)
 ;
"RTN","IBCESRV",68,0)
 ; Read header line of non-confirmation message (line 1)
"RTN","IBCESRV",69,0)
 F  X XMREC Q:$S(XMER<0:1,1:$E(XMRG,1,13)'="RACUBOTH RUCH")
"RTN","IBCESRV",70,0)
 S:XMER'<0 IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",71,0)
 I XMER<0 D  G MSGQ
"RTN","IBCESRV",72,0)
 . S IBERR=3
"RTN","IBCESRV",73,0)
 . S ^TMP("IBERR",$J,"MSG",1)=IBHD
"RTN","IBCESRV",74,0)
 . S ^TMP("IBERR",$J,"MSG",2)=$G(XMRG)
"RTN","IBCESRV",75,0)
 ;
"RTN","IBCESRV",76,0)
 S IBTXN=XMRG
"RTN","IBCESRV",77,0)
MSG1 I $E(IBTXN,$L(IBTXN)-3,$L(IBTXN))?3A1"."!(IBTXN="NNNN"),IBHOLDCT>1 S XMER=-1,IBLAST=1 G MSGQ
"RTN","IBCESRV",78,0)
 ;
"RTN","IBCESRV",79,0)
 S IBTYP1=$S($P(IBTXN,U)="277STAT":"837REC1",1:$P(IBTXN,U))
"RTN","IBCESRV",80,0)
 S IBTYP=$S(IBTYP1="":"",1:$O(^IBE(364.3,"B",IBTYP1,"")))
"RTN","IBCESRV",81,0)
 I IBTYP="" S IBERR=1 D REST(.IBTXN,IBGBL) G MSGQ ;Bad msg type
"RTN","IBCESRV",82,0)
 ;
"RTN","IBCESRV",83,0)
 S IB0=$G(^IBE(364.3,IBTYP,0)),IBRTN=$P(IB0,U,3,4),IBMG=$P(IB0,U,2)
"RTN","IBCESRV",84,0)
 I $TR(IBRTN,U)="" S IBERR=5 D REST(.IBTXN,IBGBL) G MSGQ ;No routine defined
"RTN","IBCESRV",85,0)
 ;
"RTN","IBCESRV",86,0)
 S IBWANT=1
"RTN","IBCESRV",87,0)
 I 'IBLAST,XMER'<0 D  G:IBLAST&(XMER<0) MSGQ ;Message is other than Austin confirmation
"RTN","IBCESRV",88,0)
 . S IBGBL="^TMP(""IBMSG"","_$J_")"
"RTN","IBCESRV",89,0)
 . S @IBGBL=$P(IBTXN,U),^TMP("IBMSGH",$J,0)=IBTXN
"RTN","IBCESRV",90,0)
 . ;
"RTN","IBCESRV",91,0)
 . I $P(IBTXN,U)="277STAT" D  Q  ;Claim status message
"RTN","IBCESRV",92,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",93,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",94,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",95,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE277(.IBD)"
"RTN","IBCESRV",96,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",97,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",98,0)
 ... D @Z
"RTN","IBCESRV",99,0)
 . ;
"RTN","IBCESRV",100,0)
 . I $P(IBTXN,U)="835EOB" D  Q  ;Explanation of Benefits message
"RTN","IBCESRV",101,0)
 .. F  X XMREC Q:XMER<0  D  Q:IBLAST  ;Extract rest of message
"RTN","IBCESRV",102,0)
 ... S IBHOLDCT=IBHOLDCT+1,^TMP("IB-HOLD",$J,IBHOLDCT)=XMRG
"RTN","IBCESRV",103,0)
 ... I +XMRG=99,$P(XMRG,U,2)="$" S IBLAST=1 Q
"RTN","IBCESRV",104,0)
 ... S IBD=XMRG,Z=+XMRG_"^IBCE835(.IBD)"
"RTN","IBCESRV",105,0)
 ... S IBTXN=XMRG
"RTN","IBCESRV",106,0)
 ... I '$$CKLABEL(Z,.IBTXN,IBGBL) S IBLAST=1,IBWANT=0,XMER=-1,IBERR=7 Q
"RTN","IBCESRV",107,0)
 ... D @Z
"RTN","IBCESRV",108,0)
 . ;
"RTN","IBCESRV",109,0)
 . I $P(IBTXN,U)="REPORT" D  Q  ; Report file
"RTN","IBCESRV",110,0)
 .. D REPORT^IBCERPT(IBHD,IBDATE,.IBD,IBTXN)
"RTN","IBCESRV",111,0)
 .. I '$O(^TMP("IBMSG",$J,"REPORT",0,"D",0,0)) S IBWANT=0
"RTN","IBCESRV",112,0)
 . ;
"RTN","IBCESRV",113,0)
 . ; ****** Insert code for additional message types here and in ^IBCEM
"RTN","IBCESRV",114,0)
 ;
"RTN","IBCESRV",115,0)
 I IBLAST,IBWANT D ADD(IBGBL,.IBTDA,.IBERR)
"RTN","IBCESRV",116,0)
 ;
"RTN","IBCESRV",117,0)
 I 'IBLAST,'$G(IBERR) K @IBGBL S IBERR=2 ;No $ as last character of message
"RTN","IBCESRV",118,0)
MSGQ I $G(IBERR) D ERRUPD^IBCESRV1(IBGBL,.IBERR) S IBEFLG=1
"RTN","IBCESRV",119,0)
 Q IBEFLG
"RTN","IBCESRV",120,0)
 ;
"RTN","IBCESRV",121,0)
REST(IBTXN,IBGBL) ;Extract raw message data if not id-ed or can't process
"RTN","IBCESRV",122,0)
 N CT,Z
"RTN","IBCESRV",123,0)
 S CT=0
"RTN","IBCESRV",124,0)
 S Z=0 F  S Z=$O(^TMP("IB-HOLD",$J,Z)) Q:'Z  S CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_$G(^TMP("IB-HOLD",$J,Z))
"RTN","IBCESRV",125,0)
 F  X XMREC Q:XMER<0  S:XMRG'="" CT=CT+1,@IBGBL@("BATCH",0,"D",0,CT)="##RAW DATA: "_XMRG
"RTN","IBCESRV",126,0)
 Q
"RTN","IBCESRV",127,0)
 ;
"RTN","IBCESRV",128,0)
ADD(IBGBL,IBTDA,IBERR) ; Add message(s) in @IBGBL to file #364.2
"RTN","IBCESRV",129,0)
 ;   Errors returned in IBERR
"RTN","IBCESRV",130,0)
 ;   Message entry #'s are returned in IBTDA(ien)=""
"RTN","IBCESRV",131,0)
 ;
"RTN","IBCESRV",132,0)
 N IB,IBA,IBB,IBC,IBDATA,IBHDR,IBLINE,IBTYP,IBRTN
"RTN","IBCESRV",133,0)
 S IBA="" F  S IBA=$O(@IBGBL@(IBA)) Q:IBA=""!(IBERR=3)  S IBB="" F  S IBB=$O(@IBGBL@(IBA,IBB)) Q:IBB=""!(IBERR=3)  D
"RTN","IBCESRV",134,0)
 . S IBHDR=$G(@IBGBL@(IBA,IBB,0))
"RTN","IBCESRV",135,0)
 . Q:IBHDR=""
"RTN","IBCESRV",136,0)
 . S IBTYP=$S($P(IBHDR,U)="":"",1:$O(^IBE(364.3,"B",$P(IBHDR,U),""))),IBRTN=$P($G(^IBE(364.3,IBTYP,0)),U,3,4)
"RTN","IBCESRV",137,0)
 . S IBTDA=$$ADDTXN(IBHDR) ;File message hdr data
"RTN","IBCESRV",138,0)
 . I IBTDA'>0 S IBERR=3 Q  ;msg hdr can't be filed
"RTN","IBCESRV",139,0)
 . S IBTDA(IBTDA)=""
"RTN","IBCESRV",140,0)
 . D LOADDET(IBA,IBB,.IBTDA,IBGBL,.IBERR,$P(IBHDR,U,1))
"RTN","IBCESRV",141,0)
 . Q:$G(IBERR)  ;Message not completely filed
"RTN","IBCESRV",142,0)
 . D TRTN^IBCESRV1(IBTDA):$TR(IBRTN,U)'="" ;Task update to run
"RTN","IBCESRV",143,0)
 Q
"RTN","IBCESRV",144,0)
 ;
"RTN","IBCESRV",145,0)
ADDTXN(IBDATA,REPORT) ; Add a trxn for msg in IBDATA to file 364.2
"RTN","IBCESRV",146,0)
 ; REPORT = 1 if storing a report format message
"RTN","IBCESRV",147,0)
 ;Function returns ien of the new entry in file 364.2 or "" if an error
"RTN","IBCESRV",148,0)
 ;
"RTN","IBCESRV",149,0)
 N A,IBDA,IBBTCH,IBBILL,IBDT,IBTEST,DLAYGO,DIC,DD,DO,X,Y,Z,IBIFN
"RTN","IBCESRV",150,0)
 ;
"RTN","IBCESRV",151,0)
 S IBDA="",IBBTCH=$P(IBDATA,U,5),IBBILL=$P(IBDATA,U,4),IBIFN=0
"RTN","IBCESRV",152,0)
 I IBBILL S IBIFN=+$G(^IBA(364,IBBILL,0))
"RTN","IBCESRV",153,0)
 S IBDT=$P(IBDATA,U,6)
"RTN","IBCESRV",154,0)
 S IBTEST=0
"RTN","IBCESRV",155,0)
 I $E($G(IBD("Q")),1,3)="MCT" D
"RTN","IBCESRV",156,0)
 . I IBBILL,'$P($G(^IBA(364,IBBILL,0)),U,7),$D(^IBM(361.4,IBIFN,0)) S IBTEST=1 Q  ; Resubmit live claim for test (make sure 361.4 exists)
"RTN","IBCESRV",157,0)
 . I IBBTCH,$O(^IBM(361.4,"C",IBBTCH,0)) S IBTEST=1 Q  ; Resubmit live claim as test batch
"RTN","IBCESRV",158,0)
 ;
"RTN","IBCESRV",159,0)
 S (X,A)=$G(IBD("MSG#")) ; Use msg ID for .01 field
"RTN","IBCESRV",160,0)
 F Z=1:1 Q:'$D(^IBA(364.2,"B",A))  S A=X_"."_Z
"RTN","IBCESRV",161,0)
 S X=A
"RTN","IBCESRV",162,0)
 S DIC(0)="L",DIC="^IBA(364.2,",DLAYGO=364.2
"RTN","IBCESRV",163,0)
 S DIC("DR")=".02///"_$P(IBDATA,U)_";.03///^S X=""NOW"";.08////"_($P(IBDATA,U,7)="Y")_";.13////"_$P(IBDATA,U,8)_$S(IBBILL="":"",1:";.05////"_IBBILL)_";.06////P;.1////"_IBDT_$S(IBBTCH="":"",1:";.04////"_IBBTCH)_";.14////"_IBTEST
"RTN","IBCESRV",164,0)
 D FILE^DICN
"RTN","IBCESRV",165,0)
 S:Y>0 IBDA=+Y
"RTN","IBCESRV",166,0)
 ;
"RTN","IBCESRV",167,0)
 Q IBDA
"RTN","IBCESRV",168,0)
 ;
"RTN","IBCESRV",169,0)
LOADDET(IB1,IB2,IBTDA,IBGBL,IBERR,IBTNM) ; Load the rest of the message text into the message
"RTN","IBCESRV",170,0)
 ; IB1 = "BATCH" or "CLAIM" or "REPORT"
"RTN","IBCESRV",171,0)
 ; IB2 = batch # or claim # or 0
"RTN","IBCESRV",172,0)
 ; IBTDA = ien in file 364.2 being updated
"RTN","IBCESRV",173,0)
 ; IBGBL = name of the array holding the detail message text to be loaded
"RTN","IBCESRV",174,0)
 ; IBTNM = message name (i.e. "835EOB","837REC0","REPORT",etc.)
"RTN","IBCESRV",175,0)
 ;
"RTN","IBCESRV",176,0)
 ; OUTPUT: IBERR if any errors found, pass by reference
"RTN","IBCESRV",177,0)
 ;         IBTDA(IBTDA)=1 if errors - pass by reference
"RTN","IBCESRV",178,0)
 ;
"RTN","IBCESRV",179,0)
 S IBTDA=+$G(IBTDA)
"RTN","IBCESRV",180,0)
 N CT,IB3,IBE,IBZ,Q
"RTN","IBCESRV",181,0)
 ;
"RTN","IBCESRV",182,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",183,0)
 ;
"RTN","IBCESRV",184,0)
 S (CT,IB3)=0 ;Put formatted data into msg
"RTN","IBCESRV",185,0)
 F  S IB3=$O(@IBGBL@(IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,IB3)
"RTN","IBCESRV",186,0)
 ; Add identifying data from hdr record
"RTN","IBCESRV",187,0)
 S IB3=0 F  S IB3=$O(^TMP("IBMSG-H",$J,IB1,IB2,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=^TMP("IBMSG-H",$J,IB1,IB2,IB3)
"RTN","IBCESRV",188,0)
 ;
"RTN","IBCESRV",189,0)
 ; Put raw data into msg
"RTN","IBCESRV",190,0)
 I $G(IBTNM)'="835EOB" D
"RTN","IBCESRV",191,0)
 . S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D",IBZ)) Q:IBZ=""  S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D",IBZ,IB3)) Q:'IB3  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D",IBZ,IB3)
"RTN","IBCESRV",192,0)
 I $G(IBTNM)="835EOB" D
"RTN","IBCESRV",193,0)
 . S IB3=0 F  S IB3=$O(@IBGBL@(IB1,IB2,"D1",IB3)) Q:'IB3  S IBZ="" F  S IBZ=$O(@IBGBL@(IB1,IB2,"D1",IB3,IBZ)) Q:IBZ=""  S CT=CT+1,^TMP("IBTEXT",$J,CT)=@IBGBL@(IB1,IB2,"D1",IB3,IBZ)
"RTN","IBCESRV",194,0)
 ;
"RTN","IBCESRV",195,0)
 D STOREM^IBCESRV2(IBTDA,"^TMP(""IBTEXT"",$J)",.IBE)
"RTN","IBCESRV",196,0)
 ;
"RTN","IBCESRV",197,0)
 I $D(IBE("DIERR")) D  S:$L($G(IBE)) IBERR(IBTDA,IB1,IB2)=IBE ; Extract error
"RTN","IBCESRV",198,0)
 . D EXTERR^IBCESRV1(.IBERR,.IBTDA,.IBE)
"RTN","IBCESRV",199,0)
 K ^TMP("IBTEXT",$J)
"RTN","IBCESRV",200,0)
 Q
"RTN","IBCESRV",201,0)
 ;
"RTN","IBCESRV",202,0)
CKLABEL(Z,IBTXN,IBGBL) ;  Checks to be sure label in Z exists.
"RTN","IBCESRV",203,0)
 ; If it doesn't exist, files an error and returns 0 
"RTN","IBCESRV",204,0)
 ;  OR  returns 1 if it does exist
"RTN","IBCESRV",205,0)
 N X,LAB
"RTN","IBCESRV",206,0)
 S X=1,LAB=$P(Z,"(")
"RTN","IBCESRV",207,0)
 I $S('LAB!($L($P(LAB,U))>8):1,1:$T(@LAB)="") S X=0 D REST(.IBTXN,IBGBL)
"RTN","IBCESRV",208,0)
 Q X
"RTN","IBCESRV",209,0)
 ;
"RTN","IBCESRV",210,0)
ERROR ; Error condition messages
"RTN","IBCESRV",211,0)
 ;;Message code does not exist in IB MESSAGE ROUTER file (364.3).
"RTN","IBCESRV",212,0)
 ;;This message has no ending $.
"RTN","IBCESRV",213,0)
 ;;Message file problem - no message stored.
"RTN","IBCESRV",214,0)
 ;;Message file problem - message partially stored.
"RTN","IBCESRV",215,0)
 ;;Routine to process this message type does not exist.
"RTN","IBCESRV",216,0)
 ;;Batch does not exist for this confirmation message.
"RTN","IBCESRV",217,0)
 ;;Bad message format found - cannot store message.
"RTN","IBCESRV",218,0)
 ;
"RTN","IBCEST")
0^1^B66454874^B65571445
"RTN","IBCEST",1,0)
IBCEST ;ALB/TMP - 837 EDI STATUS MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEST",2,0)
 ;;2.0;INTEGRATED BILLING;**137,189,197,135,283,320**;21-MAR-94
"RTN","IBCEST",3,0)
 ; IA 4042 for call to AUDITX^PRCAUDT
"RTN","IBCEST",4,0)
 Q
"RTN","IBCEST",5,0)
 ;
"RTN","IBCEST",6,0)
UPD361(IBTDA) ; Update IB BILL STATUS MESSAGES file
"RTN","IBCEST",7,0)
 ; IBTDA = ien of return message in file 364.2
"RTN","IBCEST",8,0)
 ;
"RTN","IBCEST",9,0)
 N IB,IB0,IBSEQ,IB00,IBBILL,IBBTCH,IBMNUM
"RTN","IBCEST",10,0)
 ;
"RTN","IBCEST",11,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock message in file 364.2
"RTN","IBCEST",12,0)
 ;
"RTN","IBCEST",13,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEST",14,0)
 S IBMNUM=$P(IB0,U) ; Message number
"RTN","IBCEST",15,0)
 S IB00=$G(^IBA(364,+$P(IB0,U,5),0)) ; Transmit bill entry
"RTN","IBCEST",16,0)
 S IBBILL=+IB00 ; Actual bill ien in file 399
"RTN","IBCEST",17,0)
 S IBBTCH=$P(IB0,U,4) ; Batch #
"RTN","IBCEST",18,0)
 ;
"RTN","IBCEST",19,0)
 ; Auto-audit bills based on status code on '10' record of status msg
"RTN","IBCEST",20,0)
 ; flat file
"RTN","IBCEST",21,0)
 I IBBILL,$P($T(PRCAUDT+1^PRCAUDT),"**",2)[",173" D
"RTN","IBCEST",22,0)
 . N Z,Z0,Z1,OK
"RTN","IBCEST",23,0)
 . Q:+$$STA^PRCAFN(IBBILL)'=104
"RTN","IBCEST",24,0)
 . S (Z,OK)=0
"RTN","IBCEST",25,0)
 . F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),"##RAW DATA: ",2) I +Z0=10 S Z0=$P(Z0,U,5) D  Q:OK
"RTN","IBCEST",26,0)
 .. ; Strip leading spaces
"RTN","IBCEST",27,0)
 .. F  S Z0=$P(Z0," ",2,99) Q:$E(Z0)'=" "
"RTN","IBCEST",28,0)
 .. Q:Z0=""
"RTN","IBCEST",29,0)
 .. I "A3^AC^A7^A8^AA^2P^10^11"[Z0,$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBBILL,0)),U,7),0)),U,11) D AUDITX^PRCAUDT(IBBILL) S OK=1 ; IA 4042
"RTN","IBCEST",30,0)
 ;
"RTN","IBCEST",31,0)
 I $S(IBMNUM="":1,1:'IBBILL&(IBBTCH="")) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEST",32,0)
 ;
"RTN","IBCEST",33,0)
 ; Individual bill
"RTN","IBCEST",34,0)
 I IBBILL D  G UPDQ
"RTN","IBCEST",35,0)
 . N IBA1,IBMSG0,IBPID
"RTN","IBCEST",36,0)
 . S IBPID="",IBA1=0
"RTN","IBCEST",37,0)
 . F  S IBA1=$O(^IBA(364.2,IBTDA,2,IBA1)) Q:'IBA1  S IBMSG0=$P($G(^(IBA1,0)),"##RAW DATA: ",2) I +IBMSG0=277,$P(IBMSG0,U,5)="N" S IBPID=$P(IBMSG0,U,11) Q
"RTN","IBCEST",38,0)
 . S IBSEQ=$P(IB00,U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",39,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,1)
"RTN","IBCEST",40,0)
 ;
"RTN","IBCEST",41,0)
 ; Batch - update each bill separately
"RTN","IBCEST",42,0)
 S IBBILL=""
"RTN","IBCEST",43,0)
 F  S IBBILL=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL)) Q:'IBBILL  D
"RTN","IBCEST",44,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCEST",45,0)
 . S IB=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL,0)) Q:'IB
"RTN","IBCEST",46,0)
 . S IBSEQ=$P($G(^IBA(364,IB,0)),U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",47,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,"",0)
"RTN","IBCEST",48,0)
 ;
"RTN","IBCEST",49,0)
 Q
"RTN","IBCEST",50,0)
 ;
"RTN","IBCEST",51,0)
STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,IB1) ;
"RTN","IBCEST",52,0)
 ;
"RTN","IBCEST",53,0)
 ; IB0 = 0-node of message in file 364.2
"RTN","IBCEST",54,0)
 ; IBBTCH = ien of batch in file 364.1
"RTN","IBCEST",55,0)
 ; IBMNUM = actual message number
"RTN","IBCEST",56,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCEST",57,0)
 ; IBBILL = ien of bill in 399
"RTN","IBCEST",58,0)
 ; IBSEQ = P/S/T/ for COB sequence related to message
"RTN","IBCEST",59,0)
 ; IBPID = the payer id returned from clearinghouse for the claim
"RTN","IBCEST",60,0)
 ; IB1 = flag that says if the message was for a single bill or a batch.
"RTN","IBCEST",61,0)
 ;       Batch statuses have an additional standard text entry.
"RTN","IBCEST",62,0)
 ;       1 = single bill 0 = batch
"RTN","IBCEST",63,0)
 ; 
"RTN","IBCEST",64,0)
 N DA,DIK,DIE,DIC,X,Y,DR,DO,DD,DLAYGO,Z,Z0,Z1,IBT,IBDUP,IBFLDS,IBY,IBAUTO
"RTN","IBCEST",65,0)
 ;
"RTN","IBCEST",66,0)
 S X=IBBILL,IBDUP=0
"RTN","IBCEST",67,0)
 ;
"RTN","IBCEST",68,0)
 I $D(^IBM(361,"AC",IBMNUM\1)) D  ; Message already there for bill
"RTN","IBCEST",69,0)
 . S Z=0 F  S Z=$O(^IBM(361,"AC",IBMNUM\1,Z)) Q:'Z  I +$G(^IBM(361,Z,0))=IBBILL S IBDUP=Z Q
"RTN","IBCEST",70,0)
 ;
"RTN","IBCEST",71,0)
 S IBFLDS=".02////"_$P(IB0,U,3)
"RTN","IBCEST",72,0)
 S IBFLDS=IBFLDS_";.03////"_$S($$EXTERNAL^DILFD(364.2,.02,"U",$P(IB0,U,2))["REJ":"R",1:"I")_";.05////"_IBBTCH_";.06////"_IBMNUM_";.04////"_+$P(IB0,U,8)_";.07////"_IBSEQ_$S($P(IB0,U,5):";.11////"_$P(IB0,U,5),1:"")
"RTN","IBCEST",73,0)
 S IBFLDS=IBFLDS_";.12////"_$P(IB0,U,10)_";.09////0"
"RTN","IBCEST",74,0)
 S IBFLDS=IBFLDS_";.15////"_$$CHKSUM^IBCEST1("^IBA(364.2,"_IBTDA_",2)")
"RTN","IBCEST",75,0)
 I IBPID'="" D
"RTN","IBCEST",76,0)
 . S IBPID("TYPE")=$S($$FT^IBCEF(IBBILL)=2:"P",1:"I")
"RTN","IBCEST",77,0)
 . D UPDINS(.IBPID,$$POLICY^IBCEF(IBBILL,1,$TR(IBSEQ,"PST","123")),IBBILL)
"RTN","IBCEST",78,0)
 ;
"RTN","IBCEST",79,0)
 I IBDUP D  I $D(Y) G UPDQ
"RTN","IBCEST",80,0)
 . ; Stuff fields into existing entry
"RTN","IBCEST",81,0)
 . ; (may be needed for reprocessing of aborted updates)
"RTN","IBCEST",82,0)
 . S DIE="^IBM(361,",DA=IBDUP,DR=IBFLDS_";1///@"
"RTN","IBCEST",83,0)
 . D ^DIE
"RTN","IBCEST",84,0)
 . I $D(Y) S IBY=-1 Q  ;Update not successful
"RTN","IBCEST",85,0)
 . S IBY=IBDUP
"RTN","IBCEST",86,0)
 ;
"RTN","IBCEST",87,0)
 K IBT
"RTN","IBCEST",88,0)
 I 'IBDUP D  ; Create new entry and stuff fields
"RTN","IBCEST",89,0)
 . S DIC(0)="L",DIC="^IBM(361,",DLAYGO=361
"RTN","IBCEST",90,0)
 . S DIC("DR")=IBFLDS
"RTN","IBCEST",91,0)
 . D FILE^DICN
"RTN","IBCEST",92,0)
 . K DO,DD,DLAYGO,DIC
"RTN","IBCEST",93,0)
 . S IBY=+Y
"RTN","IBCEST",94,0)
 . Q:IBY'>0
"RTN","IBCEST",95,0)
 . ;
"RTN","IBCEST",96,0)
 . ; IB*2*320 - Check for duplicate status message
"RTN","IBCEST",97,0)
 . NEW IBNEW,IBOLD,PCE,Z,DIK,DA
"RTN","IBCEST",98,0)
 . S IBNEW=""
"RTN","IBCEST",99,0)
 . F PCE=3,4,5,7,8,11,15 S IBNEW=IBNEW_$P($G(^IBM(361,IBY,0)),U,PCE)_U
"RTN","IBCEST",100,0)
 . S Z=0
"RTN","IBCEST",101,0)
 . F  S Z=$O(^IBM(361,"B",IBBILL,Z)) Q:'Z  I Z'=IBY D  Q:IBY'>0
"RTN","IBCEST",102,0)
 .. S IBOLD=""
"RTN","IBCEST",103,0)
 .. F PCE=3,4,5,7,8,11,15 S IBOLD=IBOLD_$P($G(^IBM(361,Z,0)),U,PCE)_U
"RTN","IBCEST",104,0)
 .. I IBNEW'=IBOLD Q   ; no duplicate so get the next one
"RTN","IBCEST",105,0)
 .. S DIK="^IBM(361,",DA=IBY,IBY=-1 D ^DIK D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",106,0)
 .. Q
"RTN","IBCEST",107,0)
 . Q
"RTN","IBCEST",108,0)
 ;
"RTN","IBCEST",109,0)
 I IBY>0 D  ;Move text over
"RTN","IBCEST",110,0)
 . K IBT
"RTN","IBCEST",111,0)
 . ;
"RTN","IBCEST",112,0)
 . D BLDMSG(IB1,IBTDA,.IBT,.IBAUTO)
"RTN","IBCEST",113,0)
 . ;
"RTN","IBCEST",114,0)
 . ; IB*2*320 - esg - 2Q messages will be filed as informational
"RTN","IBCEST",115,0)
 . I $P($G(^IBM(361,+IBY,0)),U,3)="R",$G(IBT(1))["2Q  CLAIM REJECTED BY CLEARINGHOUSE" D
"RTN","IBCEST",116,0)
 .. S IBAUTO=1
"RTN","IBCEST",117,0)
 .. S DIE=361,DA=+IBY,DR=".03////I" D ^DIE
"RTN","IBCEST",118,0)
 .. Q
"RTN","IBCEST",119,0)
 . ;
"RTN","IBCEST",120,0)
 . ; if info msg, ck for no review needed based on first line of text
"RTN","IBCEST",121,0)
 . I $G(IBAUTO),$P($G(^IBM(361,+IBY,0)),U,3)="I" D
"RTN","IBCEST",122,0)
 .. S DIE="^IBM(361,",DR=".09////2;.14////1;.1////F",DA=+IBY D ^DIE
"RTN","IBCEST",123,0)
 .. I IB1,$P($G(^IBM(361,+IBY,0)),U,11),$$PRINTUPD^IBCEU0($G(IBT(1)),$P($G(^IBM(361,+IBY,0)),U,11))
"RTN","IBCEST",124,0)
 . ;
"RTN","IBCEST",125,0)
 . D WP^DIE(361,+IBY_",",1,"A","IBT")    ; file message text
"RTN","IBCEST",126,0)
 . ;
"RTN","IBCEST",127,0)
 . ; Delete message after it successfully updates the database.
"RTN","IBCEST",128,0)
 . D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",129,0)
 . Q
"RTN","IBCEST",130,0)
 ;
"RTN","IBCEST",131,0)
UPDQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEST",132,0)
 Q
"RTN","IBCEST",133,0)
 ;
"RTN","IBCEST",134,0)
BLDMSG(IB1,IBTDA,IBT,IBAUTO) ; Builds message text
"RTN","IBCEST",135,0)
 ; IB1 = flag for batch message
"RTN","IBCEST",136,0)
 ; IBTDA = ien of entry in file 364.2
"RTN","IBCEST",137,0)
 ; IBT = array returned with message text
"RTN","IBCEST",138,0)
 ; IBAUTO = if passed by reference, returns 1 if text indicates review
"RTN","IBCEST",139,0)
 ;          not needed
"RTN","IBCEST",140,0)
 N IBDATA,IBCK,IBZ,IBZ0,IBZ1,Z
"RTN","IBCEST",141,0)
 S (IBZ,IBZ0,IBDATA,IBAUTO,IBCK)=0
"RTN","IBCEST",142,0)
 I 'IB1 S IBT(1)="Status message received for batch "_$P($G(^IBA(364.1,IBBTCH,0)),U)_" dated "_$$FMTE^XLFDT($P($G(^IBA(364.2,IBTDA,0)),U,10),2),IBZ0=1
"RTN","IBCEST",143,0)
 ; Don't move the raw data over, just move the text of the message
"RTN","IBCEST",144,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IBZ1=$G(^(IBZ,0)) S IBDATA=($E(IBZ1,1,2)="##") Q:IBDATA  S IBZ0=IBZ0+1,IBT(IBZ0)=IBZ1 I 'IBCK S Z=$$CKREVU^IBCEM4(IBZ1,,,.IBCK),IBAUTO=$S(IBCK:0,Z:1,1:IBAUTO)
"RTN","IBCEST",145,0)
 ;
"RTN","IBCEST",146,0)
 ; Convert Message Lines in IBT to be no longer than 70 chars
"RTN","IBCEST",147,0)
 D MSGLNSZ(.IBT)
"RTN","IBCEST",148,0)
 Q
"RTN","IBCEST",149,0)
 ;
"RTN","IBCEST",150,0)
UPDINS(IBPID,IBINS,IBIFN) ; Update the insurance id or the bill printed at
"RTN","IBCEST",151,0)
 ;    the EDI contractor's print shop and mailed to the ins co.
"RTN","IBCEST",152,0)
 ; IBPID = the id returned from the EDI contractor for the ins co
"RTN","IBCEST",153,0)
 ;      ("TYPE") = P if professional id or I if institutional id
"RTN","IBCEST",154,0)
 ; IBINS = the ien of the insurance co it was sent to (file 36)
"RTN","IBCEST",155,0)
 ; IBIFN = the ien of the claim (file 399)
"RTN","IBCEST",156,0)
 ;
"RTN","IBCEST",157,0)
 N IBID,IBIDFLD,IBPRT,IBLOOK,DA,DR,DIE,X,Y,Z
"RTN","IBCEST",158,0)
 ;
"RTN","IBCEST",159,0)
 Q:'$G(IBINS)!($G(IBPID)="")
"RTN","IBCEST",160,0)
 ;
"RTN","IBCEST",161,0)
 ; Strip spaces off the end of data
"RTN","IBCEST",162,0)
 S IBLOOK=""
"RTN","IBCEST",163,0)
 I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBLOOK=$E(IBPID,1,Z) Q
"RTN","IBCEST",164,0)
 ;
"RTN","IBCEST",165,0)
 S IBPRT=($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",166,0)
 I IBPRT D  ; Set printed via EDI field on bill
"RTN","IBCEST",167,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="26////1" D ^DIE
"RTN","IBCEST",168,0)
 ;
"RTN","IBCEST",169,0)
 S IBLOOK=$E($S('IBPRT:$P(IBLOOK,"PAYID=",2),1:""),1,5)
"RTN","IBCEST",170,0)
 Q:IBLOOK=""!($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",171,0)
 S IBIDFLD="3.0"_$S($G(IBPID("TYPE"))="I":4,1:2)
"RTN","IBCEST",172,0)
 S IBID=$P($G(^DIC(36,+IBINS,3)),U,IBIDFLD*100#100)
"RTN","IBCEST",173,0)
 Q:IBID=IBLOOK
"RTN","IBCEST",174,0)
 I IBID="" D  G UPDINSQ ; Update insurance co electronic id # if blank
"RTN","IBCEST",175,0)
 . S DIE="^DIC(36,",DR=IBIDFLD_"////"_IBLOOK,DA=IBINS D ^DIE
"RTN","IBCEST",176,0)
 I IBID'="",IBLOOK'="" D  ; Bulletin that the id on file and id returned
"RTN","IBCEST",177,0)
 . ; are different
"RTN","IBCEST",178,0)
 . N XMTO,XMDUZ,XMBODY,IBXM,XMSUBJ,XMZ
"RTN","IBCEST",179,0)
 . S XMTO("I:G.IB EDI")=""
"RTN","IBCEST",180,0)
 . S XMDUZ="",XMBODY="IBXM",XMSUBJ="PAYER ID RETURNED IS DIFFERENT THAN PAYER ID ON FILE"
"RTN","IBCEST",181,0)
 . S IBXM(1)="BILL #     : "_$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEST",182,0)
 . S IBXM(2)="PAYER      : "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEST",183,0)
 . S IBXM(3)="BILL TYPE  : "_$S($G(IBPID("TYPE"))="I":"INSTITUT",1:"PROFESS")_"IONAL"
"RTN","IBCEST",184,0)
 . S IBXM(4)="ID ON FILE : "_IBID
"RTN","IBCEST",185,0)
 . S IBXM(5)="ID RETURNED: "_IBLOOK
"RTN","IBCEST",186,0)
 . S IBXM(6)=" ",IBXM(7)="   Please determine which id number is correct and correct the id in the",IBXM(8)="insurance file for this payer, if needed"
"RTN","IBCEST",187,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEST",188,0)
 ;
"RTN","IBCEST",189,0)
UPDINSQ Q
"RTN","IBCEST",190,0)
 ;
"RTN","IBCEST",191,0)
MSGLNSZ(MSG) ; Change Input Message Lines to be no more than 70 characters long each
"RTN","IBCEST",192,0)
 ;
"RTN","IBCEST",193,0)
 ; Input/Output:   MSG  - array of Input Message Lines; this is also the Output Message
"RTN","IBCEST",194,0)
 ; which is an array of Converted Message Lines (with lines no more than 70 chars each)
"RTN","IBCEST",195,0)
 ;
"RTN","IBCEST",196,0)
 N LN,XARY,XARYLN,CNT,OUTMSG,TMPMSG,LDNGSP
"RTN","IBCEST",197,0)
 S LN="",CNT=0
"RTN","IBCEST",198,0)
 F  S LN=$O(MSG(LN)) Q:LN=""  D  ;
"RTN","IBCEST",199,0)
 . ;
"RTN","IBCEST",200,0)
 . ; Find any leading spaces in original message line, 
"RTN","IBCEST",201,0)
 . ; to be used if line got split below
"RTN","IBCEST",202,0)
 . S TMPMSG=$$TRIM^XLFSTR(MSG(LN),"L"," ")  ;Trim Leading Spaces
"RTN","IBCEST",203,0)
 . S LDNGSP=$P(MSG(LN),TMPMSG,1)  ;get leading spaces if any
"RTN","IBCEST",204,0)
 . ;
"RTN","IBCEST",205,0)
 . ; Converts a single line to multiple lines with a maximum width of 70 each
"RTN","IBCEST",206,0)
 . ; If line is 70 chars or less, this call returns the exact line
"RTN","IBCEST",207,0)
 . K XARY D FSTRNG^IBJU1(MSG(LN),70,.XARY)
"RTN","IBCEST",208,0)
 . ;
"RTN","IBCEST",209,0)
 . ; Scan lines and merge them into the final output array (OUTMSG)
"RTN","IBCEST",210,0)
 . ; On lines 2 and higher, add Leading Spaces found above, if any.
"RTN","IBCEST",211,0)
 . S XARYLN=""
"RTN","IBCEST",212,0)
 . F  S XARYLN=$O(XARY(XARYLN)) Q:XARYLN=""  S CNT=CNT+1,OUTMSG(CNT)=$S(XARYLN=1:XARY(XARYLN),1:LDNGSP_XARY(XARYLN))
"RTN","IBCEST",213,0)
 ;
"RTN","IBCEST",214,0)
 ; Move the final Message Lines (OUTMSG) into MSG array to be returned
"RTN","IBCEST",215,0)
 K MSG M MSG=OUTMSG
"RTN","IBCEST",216,0)
 Q  ;MSGLNSZ
"RTN","IBCEST",217,0)
 ;
"RTN","IBCEST1")
0^79^B1659665
"RTN","IBCEST1",1,0)
IBCEST1 ;ALB/ESG - IB 837 EDI Status Message Processing Cont ;18-JUL-2005
"RTN","IBCEST1",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBCEST1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEST1",4,0)
 ;
"RTN","IBCEST1",5,0)
 Q
"RTN","IBCEST1",6,0)
 ;
"RTN","IBCEST1",7,0)
CHKSUM(IBARRAY) ; Incoming 277STAT status message checksum calculation
"RTN","IBCEST1",8,0)
 ; This function calculates the checksum of the raw 277stat data from
"RTN","IBCEST1",9,0)
 ; the data in array IBARRAY.  This is done to prevent duplicates.
"RTN","IBCEST1",10,0)
 ; Input parameter IBARRAY is the array reference where the data exists
"RTN","IBCEST1",11,0)
 ;    at @IBARRAY@(n,0) where n is a sequential #
"RTN","IBCEST1",12,0)
 ; For file 364.2, IBARRAY = "^IBA(364.2,IBTDA,2)" where IBTDA = the ien
"RTN","IBCEST1",13,0)
 ;    of the entry in file 364.2 being evaluated
"RTN","IBCEST1",14,0)
 ;
"RTN","IBCEST1",15,0)
 NEW Y,LN,DATA,IBREC,POS,STSFLG
"RTN","IBCEST1",16,0)
 S Y=0,STSFLG=0
"RTN","IBCEST1",17,0)
 S LN=0
"RTN","IBCEST1",18,0)
 F  S LN=$O(@IBARRAY@(LN)) Q:'LN  D
"RTN","IBCEST1",19,0)
 . S DATA=$$EXT($G(@IBARRAY@(LN,0))) Q:DATA=""
"RTN","IBCEST1",20,0)
 . S IBREC=$P(DATA,U,1)
"RTN","IBCEST1",21,0)
 . I IBREC="277STAT" S STSFLG=1 Q      ; set the STS flag
"RTN","IBCEST1",22,0)
 . I IBREC<1 Q             ; rec# too low
"RTN","IBCEST1",23,0)
 . I IBREC'<99 Q           ; rec# too high
"RTN","IBCEST1",24,0)
 . F POS=1:1:$L(DATA) S Y=Y+($A(DATA,POS)*POS)
"RTN","IBCEST1",25,0)
 . Q
"RTN","IBCEST1",26,0)
 ;
"RTN","IBCEST1",27,0)
 I 'STSFLG S Y=0   ; if this array is not a 277stat message
"RTN","IBCEST1",28,0)
 Q Y
"RTN","IBCEST1",29,0)
 ;
"RTN","IBCEST1",30,0)
EXT(DATA) ; Extracts from the text in DATA if the text contains 
"RTN","IBCEST1",31,0)
 ;  "##RAW DATA: "
"RTN","IBCEST1",32,0)
 Q $S(DATA["##RAW DATA: ":$P(DATA,"##RAW DATA: ",2,99),1:DATA)
"RTN","IBCEST1",33,0)
 ;
"RTN","IBCFP1")
0^22^B33631841^B33019277
"RTN","IBCFP1",1,0)
IBCFP1 ;ALB/ARH - PRINT AUTHORIZED BILLS IN ORDER ;6-DEC-94
"RTN","IBCFP1",2,0)
 ;;2.0;INTEGRATED BILLING;**54,52,80,121,51,137,155,320**;21-MAR-94
"RTN","IBCFP1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCFP1",4,0)
 ;
"RTN","IBCFP1",5,0)
 ;
"RTN","IBCFP1",6,0)
QTASK ; 1st part sorts authorized bills into order requested by bill form type then queues off 1 job for each type to print bills
"RTN","IBCFP1",7,0)
 ;
"RTN","IBCFP1",8,0)
 D GCLEAN S IBXP=$$FMADD^XLFDT(DT,1)_"^"_DT_"^BATCH PRINT BILLS "_$$HTE^XLFDT($H)_" by "_$S($D(^VA(200,+$G(DUZ),0)):$P(^(0),"^"),1:"Unknown User")
"RTN","IBCFP1",9,0)
SORT ;sort authorized bills by form type and requested sort order (notice bill addendums only print for HCFA 1500's)
"RTN","IBCFP1",10,0)
 S (IBQ,IBIFN)=0 F  S IBIFN=$O(^DGCR(399,"AST",3,IBIFN)) Q:'IBIFN!IBQ  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",11,0)
 . Q:+$$TXMT^IBCEF4(IBIFN)=1  ;Exclude transmittable bills
"RTN","IBCFP1",12,0)
 . S IBFT=$$FT^IBCU3(IBIFN) Q:$P($G(^IBE(353,+IBFT,0)),U,2)=""  I IBFT'?1N Q  ;No device for form type
"RTN","IBCFP1",13,0)
 . S IBX=$G(^DGCR(399,IBIFN,0)),IBPAT=$P($G(^DPT(+$P(IBX,U,2),0)),U,1) Q:$P(IBX,U,13)'=3
"RTN","IBCFP1",14,0)
 . S IBZIP=$P($G(^DGCR(399,IBIFN,"M")),U,9),IBINS=$P($G(^DIC(36,+$G(^DGCR(399,IBIFN,"MP")),0)),U,1)
"RTN","IBCFP1",15,0)
 . S IBX=IBZIP_U_IBINS_U_IBPAT,IBS1=$P(IBX,U,$E(IBS,1))_" ",IBS2=$P(IBX,U,$E(IBS,2))_" ",IBS3=$P(IBX,U,$E(IBS,3))_" "
"RTN","IBCFP1",16,0)
 . S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",17,0)
 . S XIBFT=IBFT  ;save off curent value of IBFT
"RTN","IBCFP1",18,0)
 . ;
"RTN","IBCFP1",19,0)
 . ; set MRA queue to print
"RTN","IBCFP1",20,0)
 . S IBFT=$$FNT^IBCU3("MRA")
"RTN","IBCFP1",21,0)
 . ; Merge the data from ^XTMP("IBCFP" queue, into "IBMRA" queue
"RTN","IBCFP1",22,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBMRA"_IBFT,0)=IBXP M ^XTMP("IBMRA"_IBFT,$J)=^XTMP("IBCFP"_XIBFT,$J)
"RTN","IBCFP1",23,0)
 . ;
"RTN","IBCFP1",24,0)
 . ; Print Bill Addendums only for HCFA 1500's
"RTN","IBCFP1",25,0)
 . I $$FTN^IBCU3(XIBFT)'["HCFA 1500" Q
"RTN","IBCFP1",26,0)
 . S IBFT=$$FNT^IBCU3("BILL ADDENDUM")
"RTN","IBCFP1",27,0)
 . I +IBFT,$P($G(^IBE(353,+IBFT,0)),U,2)'="" S ^XTMP("IBCFP"_IBFT,0)=IBXP,^XTMP("IBCFP"_IBFT,$J,IBS1,IBS2,IBS3,IBIFN)=""
"RTN","IBCFP1",28,0)
 . Q
"RTN","IBCFP1",29,0)
 K IBIFN,IBFT,XIBFT,IBX,IBY,IBPAT,IBZIP,IBINS,IBS1,IBS2,IBS3,IBS,IBXP
"RTN","IBCFP1",30,0)
 ;
"RTN","IBCFP1",31,0)
QUEUE ; starts a queued job for each form type that an authorized bill was found for
"RTN","IBCFP1",32,0)
 ; no form types without defined device
"RTN","IBCFP1",33,0)
 I IBQ D GCLEAN ;queued job stopped
"RTN","IBCFP1",34,0)
 I 'IBQ D
"RTN","IBCFP1",35,0)
 . ; queue a job for each form type
"RTN","IBCFP1",36,0)
 . S IBIX="IBCFP" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBCFP"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",37,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",38,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",39,0)
 . . S ZTDESC="BATCH PRINTING "_$$FTN^IBCU3(+IBFT),ZTRTN="QBILL^IBCFP1" D ^%ZTLOAD
"RTN","IBCFP1",40,0)
 . ; Also queue a job to print MRA's, if any, for each bill
"RTN","IBCFP1",41,0)
 . S IBIX="IBMRA" F  S IBIX=$O(^XTMP(IBIX)) Q:(IBIX'?1"IBMRA"1N)  I $D(^XTMP(IBIX,$J)) S IBFT=$E(IBIX,6) D
"RTN","IBCFP1",42,0)
 . . S ZTIO=$P($G(^IBE(353,+IBFT,0)),U,2),IBFTP=IBIX,IBJ=$J
"RTN","IBCFP1",43,0)
 . . S ZTDTH=$H,ZTSAVE("IBFTP")="",ZTSAVE("IBFT")="",ZTSAVE("IBJ")=""
"RTN","IBCFP1",44,0)
 . . S ZTDESC="BATCH PRINTING MRA'S",ZTRTN="QMRA^IBCEMU2" D ^%ZTLOAD
"RTN","IBCFP1",45,0)
 K IBIX,IBY,IBFTP,IBJ ; end of first queued part
"RTN","IBCFP1",46,0)
 Q
"RTN","IBCFP1",47,0)
 ;
"RTN","IBCFP1",48,0)
GCLEAN ; Clean up XTMP global for $J of IBCFP and IBMRA entries
"RTN","IBCFP1",49,0)
 N I
"RTN","IBCFP1",50,0)
 S I="IBCFP" F  S I=$O(^XTMP(I)) Q:I'?1"IBCFP"1N.N  K ^XTMP(I)
"RTN","IBCFP1",51,0)
 S I="IBMRA" F  S I=$O(^XTMP(I)) Q:I'?1"IBMRA"1N.N  K ^XTMP(I)
"RTN","IBCFP1",52,0)
 Q
"RTN","IBCFP1",53,0)
 ;
"RTN","IBCFP1",54,0)
QBILL ; 2nd queued part will print all authorized bills for a specific form type
"RTN","IBCFP1",55,0)
 N IBF,IBFORM,IBPNT
"RTN","IBCFP1",56,0)
 S IBF=$P($G(^IBE(353,+IBFT,2)),U,8),IBPNT=1
"RTN","IBCFP1",57,0)
 I $D(IBMCSPNT) S IBPNT=IBMCSPNT    ; IB*320 - MCS resubmit by print
"RTN","IBCFP1",58,0)
 I IBF'="" S IBFORM=IBF D FORMOUT^IBCEFG7 Q  ;call formatter
"RTN","IBCFP1",59,0)
 ;
"RTN","IBCFP1",60,0)
QB1 ; Entrypoint for output logic of formatter
"RTN","IBCFP1",61,0)
 ; pass in "^XTMP(IBFTP,IBJ)" sorted array of bills to print
"RTN","IBCFP1",62,0)
 ;         IBFTP = "IBCFP"_(form type) subscript indicating which part of array to print
"RTN","IBCFP1",63,0)
 ;         IBPNT = reprint status of bill (1-original, 0-copy, etc)
"RTN","IBCFP1",64,0)
 ;         IBFT  = IFN of bill form type to be printed
"RTN","IBCFP1",65,0)
 ;         IBJ   = $J of starting job (for when multiple print jobs might be queued)
"RTN","IBCFP1",66,0)
 ;                 if a single bill printed and queued, IBJ will be null
"RTN","IBCFP1",67,0)
 S:$G(IBJ)="" IBJ=$J
"RTN","IBCFP1",68,0)
 S:'$D(IBPNT) IBPNT=1
"RTN","IBCFP1",69,0)
 N IBCT,IBBN,IBS1,IBS2,IBS3,IBQ,IBIFN
"RTN","IBCFP1",70,0)
 S (IBCT,IBQ,IBS1)=0
"RTN","IBCFP1",71,0)
 S ZTREQ="@"
"RTN","IBCFP1",72,0)
 F  S IBS1=$O(^XTMP(IBFTP,IBJ,IBS1)) Q:IBS1=""!IBQ  D
"RTN","IBCFP1",73,0)
 . S IBS2=0 F  S IBS2=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2)) Q:IBS2=""!IBQ  D
"RTN","IBCFP1",74,0)
 .. S IBS3=0 F  S IBS3=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3)) Q:IBS3=""!IBQ  D
"RTN","IBCFP1",75,0)
 ... S IBBN=0 F  S IBBN=$O(^XTMP(IBFTP,IBJ,IBS1,IBS2,IBS3,IBBN)) Q:IBBN=""  D  I $$STOP S IBQ=1 Q
"RTN","IBCFP1",76,0)
 .... D ROUT(IBFT,IBPNT,IBBN,.IBCT)
"RTN","IBCFP1",77,0)
 K ^XTMP(IBFTP,IBJ) ; end of last queued part
"RTN","IBCFP1",78,0)
 Q
"RTN","IBCFP1",79,0)
 ;
"RTN","IBCFP1",80,0)
ROUT(IBFT,IBPNT,IBIFN,IBCT,IBF) ; sub procedure to protect variables with new
"RTN","IBCFP1",81,0)
 N IBBN,IBS1,IBS2,IBS3,IBQ,IBFTP,IBJ,IBXPARM,Z
"RTN","IBCFP1",82,0)
 D BILLPARM^IBCEFG0(IBIFN,.IBXPARM)
"RTN","IBCFP1",83,0)
 S IBF=$S($G(IBF)'="":IBF,1:$P($G(^IBE(353,+IBFT,2)),U,8)),IBCT=$G(IBCT)+1
"RTN","IBCFP1",84,0)
 I IBF'="" S Z=$$EXTRACT^IBCEFG(IBF,IBIFN,.IBCT,.IBXPARM) G REX
"RTN","IBCFP1",85,0)
 I IBFT=1 S DFN=$P($G(^DGCR(399,+IBIFN,0)),U,2) D ENP^IBCF1 W @IOF G REX
"RTN","IBCFP1",86,0)
 I IBFT=2 D EN^IBCF2 W @IOF G REX
"RTN","IBCFP1",87,0)
 I $$FTN^IBCU3(+IBFT)="UB-92" D EN^IBCF3 W @IOF G REX
"RTN","IBCFP1",88,0)
 I $$FTN^IBCU3(+IBFT)="BILL ADDENDUM" I +$$BILLAD^IBCF4(IBIFN) D EN^IBCF4 W @IOF G REX
"RTN","IBCFP1",89,0)
REX Q
"RTN","IBCFP1",90,0)
 ;
"RTN","IBCFP1",91,0)
DATE(X) Q $E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBCFP1",92,0)
 ;
"RTN","IBCFP1",93,0)
STOP() ;determine if user has requested the queued report to stop
"RTN","IBCFP1",94,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S ZTSTOP=1 K ZTREQ I +$G(IBPGN) W !,"***TASK STOPPED BY USER***"
"RTN","IBCFP1",95,0)
 Q +$G(ZTSTOP)
"RTN","IBCFP1",96,0)
 ;
"RTN","IBCFP1",97,0)
FORMPRE ; Set up environment for bill message
"RTN","IBCFP1",98,0)
 K ^TMP("IBXMSG",$J),^TMP("IBXERR",$J),IBXERR,^TMP("IBXDATA",$J)
"RTN","IBCFP1",99,0)
 Q
"RTN","IBCFP1",100,0)
 ;
"RTN","IBCFP1",101,0)
FORMPOST ; Clean up
"RTN","IBCFP1",102,0)
 I $O(^TMP("IBXERR",$J,"")) D  ;Error messages to mail group
"RTN","IBCFP1",103,0)
 .N XMTO,XMBODY,XMDUZ,XMSUBJ,IBCT,IBERR
"RTN","IBCFP1",104,0)
 .K ^TMP("IBXMSG",$J)
"RTN","IBCFP1",105,0)
 .S ^TMP("IBXMSG",$J,1)="The following bill(s) were not printed due to errors indicated.",^(2)="Once the errors are corrected, the bill(s) can be printed again.",^(3)=" "
"RTN","IBCFP1",106,0)
 .;
"RTN","IBCFP1",107,0)
 .S IBERR=0,IBCT=3
"RTN","IBCFP1",108,0)
 .F  S IBERR=$O(^TMP("IBXERR",$J,IBERR)) Q:'IBERR  S IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)="Bill #: "_$P($G(^DGCR(399,IBERR,0)),U),IBCT=IBCT+1,^TMP("IBXMSG",$J,IBCT)=$J("",5)_^TMP("IBXERR",$J,IBERR)
"RTN","IBCFP1",109,0)
 .S XMBODY="^TMP(""IBXMSG"","_$J_")" D ERRMSG(XMBODY)
"RTN","IBCFP1",110,0)
 .K ^TMP("IBXMSG",$J),^TMP($J,"IBICT")
"RTN","IBCFP1",111,0)
 ;
"RTN","IBCFP1",112,0)
 K ^TMP("IBXERR",$J),IBXERR
"RTN","IBCFP1",113,0)
 D CLEAN^DILF
"RTN","IBCFP1",114,0)
 Q
"RTN","IBCFP1",115,0)
 ;
"RTN","IBCFP1",116,0)
ENTPRE ; Run before processing a bill entry
"RTN","IBCFP1",117,0)
 K IBXSAVE,IBXERR,^UTILITY("VAPA",$J),^TMP("IBXSAVE",$J),^TMP($J),^TMP("DIERR",$J)
"RTN","IBCFP1",118,0)
 Q
"RTN","IBCFP1",119,0)
 ;
"RTN","IBCFP1",120,0)
ENTPOST ; Run after processing a bill entry
"RTN","IBCFP1",121,0)
 N IBIFN
"RTN","IBCFP1",122,0)
 I $G(IBXERR)'="" S ^TMP("IBXERR",$J,IBXIEN)=IBXERR K ^TMP("IBXDATA",$J)
"RTN","IBCFP1",123,0)
 S IBIFN=IBXIEN D END^IBCF2
"RTN","IBCFP1",124,0)
 K IBXSAVE,^UTILITY("VAPA",$J),^TMP($J),^TMP("IBXSAVE",$J)
"RTN","IBCFP1",125,0)
 D CLEAN^DILF
"RTN","IBCFP1",126,0)
 Q
"RTN","IBCFP1",127,0)
 ;
"RTN","IBCFP1",128,0)
ERRMSG(XMBODY) ; Send bulletin for error message
"RTN","IBCFP1",129,0)
 N XMTO,XMSUBJ
"RTN","IBCFP1",130,0)
 S XMTO($G(DUZ))="",XMSUBJ="PRINT BILL ERRORS"
"RTN","IBCFP1",131,0)
 ;
"RTN","IBCFP1",132,0)
 D SENDMSG^XMXAPI(,XMSUBJ,XMBODY,.XMTO)
"RTN","IBCFP1",133,0)
 D ALERT("One or more bills were not printed.  Check your mail for details",$G(DUZ))
"RTN","IBCFP1",134,0)
 Q
"RTN","IBCFP1",135,0)
 ;
"RTN","IBCFP1",136,0)
ALERT(XQAMSG,IBGRP) ; Send alert message
"RTN","IBCFP1",137,0)
 N XQA
"RTN","IBCFP1",138,0)
 S XQA(IBGRP)=""
"RTN","IBCFP1",139,0)
 D SETUP^XQALERT
"RTN","IBCFP1",140,0)
 Q
"RTN","IBCNQ")
0^5^B25553746^B19965912
"RTN","IBCNQ",1,0)
IBCNQ ;ALB/MJB - MCCR PATIENT BILLING INQUIRY ;13 JUN 88 13:52
"RTN","IBCNQ",2,0)
 ;;2.0;INTEGRATED BILLING;**51,320**;21-MAR-94
"RTN","IBCNQ",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNQ",4,0)
 ;
"RTN","IBCNQ",5,0)
 ;MAP TO DGCRNQ
"RTN","IBCNQ",6,0)
 ;
"RTN","IBCNQ",7,0)
 D HOME^%ZIS
"RTN","IBCNQ",8,0)
ASKPAT S DIC="^DGCR(399,",DIC(0)="AEMQZ",DIC("A")="Enter BILL NUMBER or PATIENT NAME: " W !! D ^DIC G:X=""!(X["^") Q
"RTN","IBCNQ",9,0)
 ;
"RTN","IBCNQ",10,0)
 S IBIFN=+Y,IBQUIT=0,IBAC=7
"RTN","IBCNQ",11,0)
VIEW ;
"RTN","IBCNQ",12,0)
 ;***
"RTN","IBCNQ",13,0)
 ;S XRTL=$ZU(0),XRTN="IBCNQ-2" D T0^%ZOSV ;start rt clock
"RTN","IBCNQ",14,0)
 F I=0,"S","U","U1" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCNQ",15,0)
 S DFN=$P(IB(0),"^",2),IBSTAT=$P(IB(0),"^",13),IBBNO=$$BN^PRCAFN(IBIFN),IBPAGE=0 S:IBBNO=-1 IBBNO=$S($D(IBIL):IBIL,1:$P(IB(0),"^"))
"RTN","IBCNQ",16,0)
 ;
"RTN","IBCNQ",17,0)
 D NOW^%DTC S Y=$E(%,1,12) D D^DIQ S IBNOW=Y,IBPT=$$PT^IBEFUNC(DFN) D HDR1
"RTN","IBCNQ",18,0)
 ;
"RTN","IBCNQ",19,0)
 S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
"RTN","IBCNQ",20,0)
 W !,"Bill Status",?15,": ",$S(IBSTAT=1:"ENTERED/NOT REVIEWED",IBSTAT=2:"MRA REQUESTED",IBSTAT=3:"AUTHORIZED",IBSTAT=4:"PRINTED/TRANSMITTED",IBSTAT=7:"CANCELLED",1:IBUN)," - RECORD IS ",$S(IBSTAT<3:"",1:"UN"),"EDITABLE"
"RTN","IBCNQ",21,0)
 W !,"Rate Type",?15,": ",$S($P(IB(0),"^",7)="":IBUN,'$D(^DGCR(399.3,$P(IB(0),"^",7),0)):IBUN,1:$P(^DGCR(399.3,$P(IB(0),"^",7),0),"^"))
"RTN","IBCNQ",22,0)
 W:+$P(^IBE(350.9,1,1),"^",22) !,"Form Type",?15,": ",$S($P($G(^IBE(353,+$P(IB(0),"^",19),0)),"^")]"":$P(^(0),"^"),1:IBUN)
"RTN","IBCNQ",23,0)
 W:IBSTAT=7 !,"Reason Canceled",?15,": ",$S($P(IB("S"),"^",19)]"":$P(IB("S"),"^",19),1:IBUN)
"RTN","IBCNQ",24,0)
 I $$INPAT^IBCEF(IBIFN) S Y=$P(IB(0),"^",3) D D^DIQ W !!,"Admission Date : ",Y
"RTN","IBCNQ",25,0)
 E  D OPDATE
"RTN","IBCNQ",26,0)
 W !!,"Charges",?15,": " S X=$P(IB("U1"),U,1),X2="2$" D:X]"" COMMA^%DTC W $S(X]"":X,1:IBUN)
"RTN","IBCNQ",27,0)
 I $P(IB("U1"),U,2)]"" W !,"LESS Offset",?15,": " S X=$P(IB("U1"),U,2),X2="2$" D COMMA^%DTC W X,"   [",$P(IB("U1"),U,3),"]",!,"Bill Total",?15,": " S X=($P(IB("U1"),U,1)-$P(IB("U1"),U,2)),X2="2$" D COMMA^%DTC W X
"RTN","IBCNQ",28,0)
 S X=$$TPR^PRCAFN(IBIFN) I X>0 S X2="2$" D COMMA^%DTC W !,"Amount Paid",?15,": ",X
"RTN","IBCNQ",29,0)
 S X=$$STA^PRCAFN(IBIFN) I X>0 W !,"AR Status",?15,": ",$P(X,"^",2)
"RTN","IBCNQ",30,0)
 I $P(IB("U"),U)]"" S Y=$P(IB("U"),U) D D^DIQ W !!,"Statement From",?15,": ",Y S Y=$P(IB("U"),"^",2) D D^DIQ W !,"Statement To",?15,": ",Y,!
"RTN","IBCNQ",31,0)
 I $P(IB("U"),U)']"" W !!,"Statement From",?15,": ",IBUN,!,"Statement To",?15,": ",IBUN,!
"RTN","IBCNQ",32,0)
 D DISP I IBQUIT Q:IBAC[8  G Q
"RTN","IBCNQ",33,0)
 I IBSTAT<5 D NOPTF^IBCB2 I 'IBAC1 D:$Y>(IOSL-6) HDR Q:IBQUIT&(IBAC[8)  G Q:IBQUIT D NOPTF1^IBCB2
"RTN","IBCNQ",34,0)
 D PAUSE,^IBOLK1:$G(IBFULL)&('IBQUIT) Q:IBAC[8  ; Called from Outpatient Visit Date Inquiry
"RTN","IBCNQ",35,0)
 G Q:IBQUIT,ASKPAT
"RTN","IBCNQ",36,0)
 ;
"RTN","IBCNQ",37,0)
DISP ; The variable IBAC must be defined as input to this sub-routine.
"RTN","IBCNQ",38,0)
 G:'$D(IBAC) DISPQ
"RTN","IBCNQ",39,0)
 S IBUN="UNSPECIFIED",IBUK="UNKNOWN USER"
"RTN","IBCNQ",40,0)
 I IB("S")']"" W !,"Past actions of this billing record unspecified." G DISPQ
"RTN","IBCNQ",41,0)
 S IBX="Entered^^^^^^MRA Requested^^^Authorized^^^^Last Printed^^^Cancelled"
"RTN","IBCNQ",42,0)
 F I=1,10,14,17 I $P(IB("S"),U,I)]"" D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  D DISP1
"RTN","IBCNQ",43,0)
 ;
"RTN","IBCNQ",44,0)
 ;Patch 320 - Added call to retrieve claim clone history.
"RTN","IBCNQ",45,0)
 N IBCCR,IBCURR,IBNEXT,IBBCH,IBINDENT
"RTN","IBCNQ",46,0)
 S IBINDENT=0
"RTN","IBCNQ",47,0)
 D EN^IBCCR(IBIFN,.IBCCR)   ; utility to pull cloning history
"RTN","IBCNQ",48,0)
 ;
"RTN","IBCNQ",49,0)
 ; attempt to go one claim forward from the current claim
"RTN","IBCNQ",50,0)
 S IBCURR="IBCCR("_+$P(IB("S"),U,1)_","_IBIFN_")"
"RTN","IBCNQ",51,0)
 S IBNEXT=$Q(@IBCURR)
"RTN","IBCNQ",52,0)
 I IBNEXT'="" D
"RTN","IBCNQ",53,0)
 . N IBX S IBX=@IBNEXT
"RTN","IBCNQ",54,0)
 . W !,"Copied"
"RTN","IBCNQ",55,0)
 . W ?15,": ",$$FMTE^XLFDT($P(IBX,U,1),"1Z")_" by "_$P(IBX,U,3)
"RTN","IBCNQ",56,0)
 . W !,"Copied To",?15,": ",$P(IBX,U,2)
"RTN","IBCNQ",57,0)
 . S IBINDENT=1
"RTN","IBCNQ",58,0)
 . Q
"RTN","IBCNQ",59,0)
 ;
"RTN","IBCNQ",60,0)
 ; now go backwards for claim cloning history all the way back
"RTN","IBCNQ",61,0)
 S IBBCH=IBCURR
"RTN","IBCNQ",62,0)
 F  S IBBCH=$Q(@IBBCH,-1) Q:IBBCH=""  D
"RTN","IBCNQ",63,0)
 . N IBX,TS1,TS2 S IBX=@IBBCH
"RTN","IBCNQ",64,0)
 . I IBINDENT S TS1=4,TS2=19     ; set tab stops
"RTN","IBCNQ",65,0)
 . E  S TS1=0,TS2=15
"RTN","IBCNQ",66,0)
 . W !?TS1,"Copied",?TS2,": "
"RTN","IBCNQ",67,0)
 . W $$FMTE^XLFDT($P(IBX,U,1),"1Z")_" by "_$P(IBX,U,3)
"RTN","IBCNQ",68,0)
 . W !?TS1,"Copied From",?TS2,": ",$P(IBX,U,2)
"RTN","IBCNQ",69,0)
 . W !?TS1,"Reason Copied",?TS2,": ",$P(IBX,U,4)
"RTN","IBCNQ",70,0)
 . S IBINDENT=1
"RTN","IBCNQ",71,0)
 . Q
"RTN","IBCNQ",72,0)
 ;
"RTN","IBCNQ",73,0)
 I $D(^DGCR(399,IBIFN,"R","AC",1)) S IB=0 F I=0:0 S IB=$O(^DGCR(399,IBIFN,"R","AC",1,IB)) Q:'IB  D:IBAC[7&($Y>(IOSL-4)) HDR Q:$S(IBAC'[7:0,1:IBQUIT)  W !,"Returned to AR : " D RETN
"RTN","IBCNQ",74,0)
DISPQ Q
"RTN","IBCNQ",75,0)
 ;
"RTN","IBCNQ",76,0)
DISP1 W !,$P(IBX,U,I) S Y=$P(IB("S"),U,I) D D^DIQ W ?15,": ",Y,?28," by " S IBN=$P(IB("S"),U,(I+1)) W $S(IBN']"":IBUK,$D(^VA(200,IBN,0)):$P(^(0),U,1),1:IBUK)
"RTN","IBCNQ",77,0)
 Q
"RTN","IBCNQ",78,0)
 ;
"RTN","IBCNQ",79,0)
Q K DFN,IB,IBAC,IBBNO,IBN,IBNOW,IBPAGE,IBPT,IBU,IBQUIT,IBUK,IBUN,IBX,IBSTAT,IBAC1,IBIFN,IBOPD,DIC,X,X2,Y
"RTN","IBCNQ",80,0)
 Q
"RTN","IBCNQ",81,0)
 ;
"RTN","IBCNQ",82,0)
RETN I $D(^DGCR(399,IBIFN,"R",IB,0)) S IBN=^(0),Y=$P($P(IBN,"^"),".") D D^DIQ W Y,?28," by " S IBN=$P(IBN,"^",2) I IBN]"",$D(^VA(200,IBN,0)) W $P(^VA(200,IBN,0),"^")
"RTN","IBCNQ",83,0)
 Q
"RTN","IBCNQ",84,0)
 ;
"RTN","IBCNQ",85,0)
HDR D PAUSE Q:IBQUIT
"RTN","IBCNQ",86,0)
HDR1 S L="",$P(L,"=",80)="",IBPAGE=IBPAGE+1
"RTN","IBCNQ",87,0)
 W:$E(IOST,1,2)["C-"!(IBPAGE>1) @IOF
"RTN","IBCNQ",88,0)
 W $E($P(IBPT,"^"),1,20),"   ",$P(IBPT,"^",2),?38,IBBNO,?51,IBNOW,?72,"PAGE: ",IBPAGE,!,L
"RTN","IBCNQ",89,0)
 K L Q
"RTN","IBCNQ",90,0)
 ;
"RTN","IBCNQ",91,0)
OPDATE ; List Outpatient Visit Dates.
"RTN","IBCNQ",92,0)
 Q:'$O(^DGCR(399,IBIFN,"OP",0))
"RTN","IBCNQ",93,0)
 W !!,"OP Visit Dates :" S IBOPD=0
"RTN","IBCNQ",94,0)
 F I=1:1 S IBOPD=$O(^DGCR(399,IBIFN,"OP",IBOPD)) Q:'IBOPD  D
"RTN","IBCNQ",95,0)
 . W:'((I-1)#4)&(I>1) !
"RTN","IBCNQ",96,0)
 . S Y=IBOPD D D^DIQ W ?($S(I#4:I#4,1:4)*14+3),Y
"RTN","IBCNQ",97,0)
 Q
"RTN","IBCNQ",98,0)
 ;
"RTN","IBCNQ",99,0)
PAUSE Q:$E(IOST,1,2)'="C-"
"RTN","IBCNQ",100,0)
 F I=$Y:1:(IOSL-3) W !
"RTN","IBCNQ",101,0)
 S DIR(0)="E" D ^DIR K DIR I $D(DIRUT)!($D(DUOUT)) S IBQUIT=1 K DIRUT,DTOUT,DUOUT
"RTN","IBCNQ",102,0)
 Q
"RTN","IBCNSC")
0^31^B21343309^B16200717
"RTN","IBCNSC",1,0)
IBCNSC ;ALB/NLR - INSURANCE COMPANY EDIT ; 6/1/05 9:42am
"RTN","IBCNSC",2,0)
 ;;2.0;INTEGRATED BILLING;**46,137,184,276,320**;21-MAR-94
"RTN","IBCNSC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC",4,0)
 ;
"RTN","IBCNSC",5,0)
 ;also used for IA #4694
"RTN","IBCNSC",6,0)
 ;
"RTN","IBCNSC",7,0)
EN ; -- main entry point for IBCNS INSURANCE COMPANY, IBCNS VIEW INS CO
"RTN","IBCNSC",8,0)
 NEW IB1ST
"RTN","IBCNSC",9,0)
 K IBFASTXT,VALMQUIT,VALMEVL,XQORS,^TMP("XQORS",$J),IBCNS
"RTN","IBCNSC",10,0)
 S IBCHANGE="OKAY"
"RTN","IBCNSC",11,0)
 I '$G(IBVIEW) D EN^VALM("IBCNS INSURANCE COMPANY") G ENQ
"RTN","IBCNSC",12,0)
 D EN^VALM("IBCNS VIEW INS CO")
"RTN","IBCNSC",13,0)
ENQ Q
"RTN","IBCNSC",14,0)
 ;
"RTN","IBCNSC",15,0)
HDR ; -- header code
"RTN","IBCNSC",16,0)
 S VALMHDR(1)="Insurance Company Information for: "_$E($P(^DIC(36,IBCNS,0),"^"),1,30)
"RTN","IBCNSC",17,0)
 S VALMHDR(2)="Type of Company: "_$E($P($G(^IBE(355.2,+$P($G(^DIC(36,+IBCNS,0)),"^",13),0)),"^"),1,20)_"                     Currently "_$S(+($P($G(^DIC(36,+IBCNS,0)),"^",5)):"Inactive",1:"Active")
"RTN","IBCNSC",18,0)
 Q
"RTN","IBCNSC",19,0)
 ;
"RTN","IBCNSC",20,0)
INIT ; -- init variables and list array
"RTN","IBCNSC",21,0)
 K VALMQUIT
"RTN","IBCNSC",22,0)
 S VALMCNT=0,VALMBG=1
"RTN","IBCNSC",23,0)
 I '$D(IBCNS) D INSCO Q:$D(VALMQUIT)
"RTN","IBCNSC",24,0)
 D BLD,HDR
"RTN","IBCNSC",25,0)
 Q
"RTN","IBCNSC",26,0)
BLD ; -- list builder
"RTN","IBCNSC",27,0)
 NEW BLNKI
"RTN","IBCNSC",28,0)
 K ^TMP("IBCNSC",$J)
"RTN","IBCNSC",29,0)
 D KILL^VALM10()    ; delete all video attributes
"RTN","IBCNSC",30,0)
 F BLNKI=1:1:54 D BLANK(.BLNKI)     ; 54 blank lines to start with
"RTN","IBCNSC",31,0)
 D PARAM^IBCNSC01      ; billing parameters
"RTN","IBCNSC",32,0)
 D MAIN^IBCNSC01       ; main mailing address
"RTN","IBCNSC",33,0)
 D CLAIMS1^IBCNSC0     ; inpatient claims office
"RTN","IBCNSC",34,0)
 D CLAIMS2^IBCNSC0     ; outpatient claims office
"RTN","IBCNSC",35,0)
 D PRESCR^IBCNSC1      ; prescription claims office
"RTN","IBCNSC",36,0)
 D APPEALS             ; appeals office
"RTN","IBCNSC",37,0)
 D INQUIRY             ; inquiry office
"RTN","IBCNSC",38,0)
 D DISP^IBCNSC02       ; parent/child associations (ESG 11/3/05)
"RTN","IBCNSC",39,0)
 D PROVID^IBCNSC1      ; provider IDs
"RTN","IBCNSC",40,0)
 D PAYER^IBCNSC01      ; payer/payer apps (ESG 7/29/02 IIV project)
"RTN","IBCNSC",41,0)
 D REMARKS^IBCNSC01    ; remarks
"RTN","IBCNSC",42,0)
 D SYN^IBCNSC01        ; synonyms
"RTN","IBCNSC",43,0)
 S VALMCNT=+$O(^TMP("IBCNSC",$J,""),-1)
"RTN","IBCNSC",44,0)
 Q
"RTN","IBCNSC",45,0)
 ;
"RTN","IBCNSC",46,0)
APPEALS ;
"RTN","IBCNSC",47,0)
 N OFFSET,START,IBCNS14,IBADD
"RTN","IBCNSC",48,0)
 S IBCNS14=$$ADDRESS^IBCNSC0(IBCNS,.14,7)
"RTN","IBCNSC",49,0)
 S START=40,OFFSET=2
"RTN","IBCNSC",50,0)
 D SET^IBCNSP(START,OFFSET+25," Appeals Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",51,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS14,"^",7),0)),"^",1))
"RTN","IBCNSC",52,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS14,"^",1))
"RTN","IBCNSC",53,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS14,"^",2))
"RTN","IBCNSC",54,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",55,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS14,"^",3)) S IBADD=1
"RTN","IBCNSC",56,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS14,"^",4),1,15)_$S($P(IBCNS14,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS14,"^",5),0)),"^",2)_" "_$E($P(IBCNS14,"^",6),1,5))
"RTN","IBCNSC",57,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS14,"^",8))
"RTN","IBCNSC",58,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS14,"^",9))
"RTN","IBCNSC",59,0)
 Q
"RTN","IBCNSC",60,0)
 ;
"RTN","IBCNSC",61,0)
INQUIRY ;
"RTN","IBCNSC",62,0)
 ;
"RTN","IBCNSC",63,0)
 N OFFSET,START,IBCNS15,IBADD
"RTN","IBCNSC",64,0)
 S IBCNS15=$$ADDRESS^IBCNSC0(IBCNS,.15,8)
"RTN","IBCNSC",65,0)
 S START=47,OFFSET=2
"RTN","IBCNSC",66,0)
 D SET^IBCNSP(START,OFFSET+25," Inquiry Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC",67,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS15,"^",7),0)),"^",1))
"RTN","IBCNSC",68,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS15,"^"))
"RTN","IBCNSC",69,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS15,"^",2))
"RTN","IBCNSC",70,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC",71,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS15,"^",3)) S IBADD=1
"RTN","IBCNSC",72,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS15,"^",4),1,15)_$S($P(IBCNS15,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS15,"^",5),0)),"^",2)_" "_$E($P(IBCNS15,"^",6),1,5))
"RTN","IBCNSC",73,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS15,"^",8))
"RTN","IBCNSC",74,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS15,"^",9))
"RTN","IBCNSC",75,0)
 Q
"RTN","IBCNSC",76,0)
 ;
"RTN","IBCNSC",77,0)
HELP ; -- help code
"RTN","IBCNSC",78,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBCNSC",79,0)
 Q
"RTN","IBCNSC",80,0)
 ;
"RTN","IBCNSC",81,0)
EXIT ; -- exit code
"RTN","IBCNSC",82,0)
 K VALMQUIT,IBCNS,IBCHANGE,IBFASTXT
"RTN","IBCNSC",83,0)
 D CLEAN^VALM10
"RTN","IBCNSC",84,0)
 Q
"RTN","IBCNSC",85,0)
 ;
"RTN","IBCNSC",86,0)
INSCO ; -- select insurance company
"RTN","IBCNSC",87,0)
 NEW DLAYGO,DIC,X,Y,DTOUT,DUOUT
"RTN","IBCNSC",88,0)
 I '$D(IBCNS) D  G:$D(VALMQUIT) INSCOQ
"RTN","IBCNSC",89,0)
 .S DIC="^DIC(36,",DIC(0)="AEQMZ",DIC("S")="I '$G(^(5))"
"RTN","IBCNSC",90,0)
 .I '$G(IBVIEW) S DLAYGO=36,DIC(0)=DIC(0)_"L"
"RTN","IBCNSC",91,0)
 .D ^DIC K DIC
"RTN","IBCNSC",92,0)
 .S IBCNS=+Y
"RTN","IBCNSC",93,0)
 I $G(IBCNS)<1 K IBCNS S VALMQUIT="" G INSCOQ
"RTN","IBCNSC",94,0)
INSCOQ ;
"RTN","IBCNSC",95,0)
 K DIC
"RTN","IBCNSC",96,0)
 Q
"RTN","IBCNSC",97,0)
 ;
"RTN","IBCNSC",98,0)
BLANK(LINE) ; -- Build blank line
"RTN","IBCNSC",99,0)
 D SET^VALM10(.LINE,$J("",80))
"RTN","IBCNSC",100,0)
 Q
"RTN","IBCNSC",101,0)
 ;
"RTN","IBCNSC",102,0)
EDIKEY() ; input transform code to determine if user is allowed to edit
"RTN","IBCNSC",103,0)
 ; certain fields in the insurance company file
"RTN","IBCNSC",104,0)
 NEW OK S OK=0
"RTN","IBCNSC",105,0)
 I $$KCHK^XUSRB("IB EDI INSURANCE EDIT") S OK=1 G EDIKEYX
"RTN","IBCNSC",106,0)
 D EN^DDIOL("You must hold the IB EDI INSURANCE EDIT security key to edit this field.",,"!!")
"RTN","IBCNSC",107,0)
 D EN^DDIOL("",,"!!?5")
"RTN","IBCNSC",108,0)
EDIKEYX ;
"RTN","IBCNSC",109,0)
 Q OK
"RTN","IBCNSC",110,0)
 ;
"RTN","IBCNSC01")
0^34^B50893102^B49699490
"RTN","IBCNSC01",1,0)
IBCNSC01 ;ALB/NLR - INSURANCE COMPANY EDIT ; 6/1/05 10:06am
"RTN","IBCNSC01",2,0)
 ;;2.0;INTEGRATED BILLING;**52,137,191,184,232,320**;21-MAR-94
"RTN","IBCNSC01",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC01",4,0)
 ;
"RTN","IBCNSC01",5,0)
PARAM ; -- Insurance company parameters region
"RTN","IBCNSC01",6,0)
 N OFFSET,START,IBCNS0,IBCNS03,IBCNS06,IBCNS08,IBCNS13,IBCNS3
"RTN","IBCNSC01",7,0)
 S IBCNS0=$G(^DIC(36,+IBCNS,0)),IBCNS3=$G(^(3))
"RTN","IBCNSC01",8,0)
 S IBCNS03=$P(IBCNS0,"^",3),IBCNS06=$P(IBCNS0,"^",6),IBCNS08=$P(IBCNS0,"^",8)
"RTN","IBCNSC01",9,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",10,0)
 S START=1,OFFSET=2
"RTN","IBCNSC01",11,0)
 D SET^IBCNSP(START,OFFSET+25," Billing Parameters ",IORVON,IORVOFF)
"RTN","IBCNSC01",12,0)
 ;
"RTN","IBCNSC01",13,0)
 D SET^IBCNSP(START+1,OFFSET+1,"Signature Required?: "_$S(+IBCNS03:"YES",1:"NO"))
"RTN","IBCNSC01",14,0)
 D SET^IBCNSP(START+2,OFFSET+10,"Reimburse?: "_$E($$EXPAND^IBTRE(36,1,$P(IBCNS0,"^",2)),1,21))
"RTN","IBCNSC01",15,0)
 D SET^IBCNSP(START+3,OFFSET+3,"Mult. Bedsections: "_$S(+IBCNS06:"YES",IBCNS06=0:"NO",1:""))
"RTN","IBCNSC01",16,0)
 D SET^IBCNSP(START+4,OFFSET+4,"Diff. Rev. Codes: "_$P(IBCNS0,"^",7))
"RTN","IBCNSC01",17,0)
 D SET^IBCNSP(START+5,OFFSET+6,"One Opt. Visit: "_$S(+IBCNS08:"YES",1:"NO"))
"RTN","IBCNSC01",18,0)
 D SET^IBCNSP(START+6,OFFSET+1,"Amb. Sur. Rev. Code: "_$P(IBCNS0,"^",9))
"RTN","IBCNSC01",19,0)
 D SET^IBCNSP(START+7,OFFSET+1,"Rx Refill Rev. Code: "_$P(IBCNS0,"^",15))
"RTN","IBCNSC01",20,0)
 D SET^IBCNSP(START+8,OFFSET+3,"Filing Time Frame: "_$P(IBCNS0,"^",12))
"RTN","IBCNSC01",21,0)
 D SET^IBCNSP(START+9,OFFSET+4,"Type Of Coverage: "_$$EXPAND^IBTRE(36,.13,+$P(IBCNS0,U,13)))
"RTN","IBCNSC01",22,0)
 D SET^IBCNSP(START+10,OFFSET+3,"Primary Form Type: "_$$EXPAND^IBTRE(36,.14,$P(IBCNS0,"^",14)))
"RTN","IBCNSC01",23,0)
 ;;;;K ^TMP($J,"IBBF_ID")
"RTN","IBCNSC01",24,0)
 ;;;;D GETBPNUM^IBCEP2B(+IBCNS)
"RTN","IBCNSC01",25,0)
 ;;;;D SET^IBCNSP(START+10,OFFSET," Def. Div UB92 Prov #: "_$E($G(^TMP($J,"IBBF_ID",0,1)),1,15))
"RTN","IBCNSC01",26,0)
 ;;;;D SET^IBCNSP(START+11,OFFSET," Def. Div HCFA Prov #: "_$E($G(^TMP($J,"IBBF_ID",0,2)),1,15))
"RTN","IBCNSC01",27,0)
 ;;;;K ^TMP($J,"IBBF_ID")
"RTN","IBCNSC01",28,0)
 N START,OFFSET
"RTN","IBCNSC01",29,0)
 S START=1,OFFSET=45
"RTN","IBCNSC01",30,0)
 D SET^IBCNSP(START+1,OFFSET+7,"Billing Phone: "_$P(IBCNS13,"^",2))
"RTN","IBCNSC01",31,0)
 D SET^IBCNSP(START+2,OFFSET+2,"Verification Phone: "_$P(IBCNS13,"^",4))
"RTN","IBCNSC01",32,0)
 D SET^IBCNSP(START+3,OFFSET+2,"Precert Comp. Name: "_$P($G(^DIC(36,+$P(IBCNS13,"^",9),0)),"^",1))
"RTN","IBCNSC01",33,0)
 D SET^IBCNSP(START+4,OFFSET+7,"Precert Phone: "_$$PHONE(IBCNS13))
"RTN","IBCNSC01",34,0)
 D SET^IBCNSP(START+5,OFFSET+6,"   *** EDI Parameters ***   ",IOINHI,IOINORM)
"RTN","IBCNSC01",35,0)
 D SET^IBCNSP(START+6,OFFSET+11,"Transmit?: "_$S(+IBCNS3=1:"YES-LIVE",+IBCNS3=2:"TEST ONLY",1:"NO"))
"RTN","IBCNSC01",36,0)
 D SET^IBCNSP(START+7,OFFSET+7,"Inst Payer ID: "_$P(IBCNS3,U,4))
"RTN","IBCNSC01",37,0)
 D SET^IBCNSP(START+8,OFFSET+7,"Prof Payer ID: "_$P(IBCNS3,U,2))
"RTN","IBCNSC01",38,0)
 D SET^IBCNSP(START+9,OFFSET+6,"Insurance Type: "_$$EXPAND^IBTRE(36,3.09,+$P(IBCNS3,U,9)))
"RTN","IBCNSC01",39,0)
 D SET^IBCNSP(START+10,OFFSET+10,"Bin Number: "_$P($G(^DIC(36,+IBCNS,3)),"^",3))
"RTN","IBCNSC01",40,0)
 I +IBCNS3=2 D SET^IBCNSP(START+11,OFFSET,"Max # Test Bills/Day: "_$P(IBCNS3,U,6))
"RTN","IBCNSC01",41,0)
 Q
"RTN","IBCNSC01",42,0)
 ;
"RTN","IBCNSC01",43,0)
PHONE(IBCNS13) ; -- Compute precert company phone
"RTN","IBCNSC01",44,0)
 N IBX,IBSAVE,IBCNT S IBX=""
"RTN","IBCNSC01",45,0)
 I '$P(IBCNS13,"^",9) S IBX=$P(IBCNS13,"^",3) G PHONEQ
"RTN","IBCNSC01",46,0)
REDOX S IBSAVE=+$P(IBCNS13,"^",9)
"RTN","IBCNSC01",47,0)
 S IBCNT=$G(IBCNT)+1
"RTN","IBCNSC01",48,0)
 ; -- if you process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",49,0)
 I $D(IBCNT(IBCNS)) G PHONEQ
"RTN","IBCNSC01",50,0)
 S IBCNT(IBCNS)=""
"RTN","IBCNSC01",51,0)
 S IBCNS13=$G(^DIC(36,+$P(IBCNS13,"^",9),.13))
"RTN","IBCNSC01",52,0)
 S IBX=$P(IBCNS13,"^") S:$L($P(IBCNS13,"^",3)) IBX=$P(IBCNS13,"^",3)
"RTN","IBCNSC01",53,0)
 ; -- if process the same co. more than once you are in an infinite loop
"RTN","IBCNSC01",54,0)
 I $P(IBCNS13,"^",9),$P(IBCNS13,"^",9)'=IBSAVE G REDOX
"RTN","IBCNSC01",55,0)
PHONEQ Q IBX
"RTN","IBCNSC01",56,0)
 ;
"RTN","IBCNSC01",57,0)
MAIN ; -- Insurance company main address
"RTN","IBCNSC01",58,0)
 N OFFSET,START,IBCNS11,IBCNS13,IBADD
"RTN","IBCNSC01",59,0)
 S IBCNS11=$G(^DIC(36,+IBCNS,.11))
"RTN","IBCNSC01",60,0)
 S IBCNS13=$G(^DIC(36,+IBCNS,.13))
"RTN","IBCNSC01",61,0)
 S START=15,OFFSET=25
"RTN","IBCNSC01",62,0)
 D SET^IBCNSP(START,OFFSET," Main Mailing Address ",IORVON,IORVOFF)
"RTN","IBCNSC01",63,0)
 N OFFSET S OFFSET=2
"RTN","IBCNSC01",64,0)
 D SET^IBCNSP(START+1,OFFSET,"       Street: "_$P(IBCNS11,"^",1)) S IBADD=1
"RTN","IBCNSC01",65,0)
 D SET^IBCNSP(START+2,OFFSET,"     Street 2: "_$P(IBCNS11,"^",2)) S IBADD=2
"RTN","IBCNSC01",66,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 3: "_$P(IBCNS11,"^",3)) S IBADD=3
"RTN","IBCNSC01",67,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS11,U,11))
"RTN","IBCNSC01",68,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC01",69,0)
 D SET^IBCNSP(START+1,OFFSET,"   City/State: "_$E($P(IBCNS11,"^",4),1,15)_$S($P(IBCNS11,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS11,"^",5),0)),"^",2)_" "_$E($P(IBCNS11,"^",6),1,5))
"RTN","IBCNSC01",70,0)
 D SET^IBCNSP(START+2,OFFSET,"        Phone: "_$P(IBCNS13,"^",1))
"RTN","IBCNSC01",71,0)
 D SET^IBCNSP(START+3,OFFSET,"          Fax: "_$P(IBCNS11,"^",9))
"RTN","IBCNSC01",72,0)
 Q
"RTN","IBCNSC01",73,0)
 ;
"RTN","IBCNSC01",74,0)
 ;
"RTN","IBCNSC01",75,0)
PAYER ; This procedure builds the display for the payer associated with
"RTN","IBCNSC01",76,0)
 ; this insurance company.
"RTN","IBCNSC01",77,0)
 ; ESG - 7/29/02 - IIV project
"RTN","IBCNSC01",78,0)
 ;
"RTN","IBCNSC01",79,0)
 NEW PAYERIEN,PAYR,APPDATA,APP,DATA,APPNAME,A1,A2,A3,A4,A5,A6,A7,A8
"RTN","IBCNSC01",80,0)
 NEW START,TITLE,OFFSET,IBLINE
"RTN","IBCNSC01",81,0)
 S PAYERIEN=$P($G(^DIC(36,+IBCNS,3)),U,10),PAYR="",APPDATA=0
"RTN","IBCNSC01",82,0)
 I PAYERIEN D
"RTN","IBCNSC01",83,0)
 . S PAYR=$G(^IBE(365.12,PAYERIEN,0))
"RTN","IBCNSC01",84,0)
 . S APP=0
"RTN","IBCNSC01",85,0)
 . F  S APP=$O(^IBE(365.12,PAYERIEN,1,APP)) Q:'APP  D
"RTN","IBCNSC01",86,0)
 .. S DATA=$G(^IBE(365.12,PAYERIEN,1,APP,0))
"RTN","IBCNSC01",87,0)
 .. S APPNAME=$$EXTERNAL^DILFD(365.121,.01,"",$P(DATA,U,1))
"RTN","IBCNSC01",88,0)
 .. I APPNAME="" Q
"RTN","IBCNSC01",89,0)
 .. I $D(APPDATA(APPNAME)) Q
"RTN","IBCNSC01",90,0)
 .. S (A1,A2,A3,A4,A5,A6,A7)="NO",A8=""
"RTN","IBCNSC01",91,0)
 .. I $P(DATA,U,2) S A1="YES"      ; national active
"RTN","IBCNSC01",92,0)
 .. I $P(DATA,U,3) S A2="YES"      ; local active
"RTN","IBCNSC01",93,0)
 .. I $P(DATA,U,7) S A3="YES"      ; auto-accept
"RTN","IBCNSC01",94,0)
 .. I $P(DATA,U,8) S A4="YES"      ; ident inquiries require subscr ID
"RTN","IBCNSC01",95,0)
 .. I $P(DATA,U,9) S A5="YES"      ; use SSN for subscriber ID
"RTN","IBCNSC01",96,0)
 .. I $P(DATA,U,10) S A6="YES"     ; transmit SSN
"RTN","IBCNSC01",97,0)
 .. I $P(DATA,U,11) S A7="YES"     ; deactivated?
"RTN","IBCNSC01",98,0)
 .. ; A8 = deactivation date
"RTN","IBCNSC01",99,0)
 .. I $P(DATA,U,12) S A8=$P($$FMTE^XLFDT($P(DATA,U,12),"5Z"),"@",1)
"RTN","IBCNSC01",100,0)
 .. S APPDATA(APPNAME)=A1_U_A2_U_A3_U_A4_U_A5_U_A6_U_A7_U_A8
"RTN","IBCNSC01",101,0)
 .. S APPDATA=APPDATA+1
"RTN","IBCNSC01",102,0)
 .. Q
"RTN","IBCNSC01",103,0)
 . Q
"RTN","IBCNSC01",104,0)
 ;
"RTN","IBCNSC01",105,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC01",106,0)
 S IB1ST("PAYER")=START
"RTN","IBCNSC01",107,0)
 S TITLE=" Payer Information/Electronic Insurance Verification "
"RTN","IBCNSC01",108,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC01",109,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC01",110,0)
 D SET^IBCNSP(START+1,9,"Payer Name: "_$P(PAYR,U,1))
"RTN","IBCNSC01",111,0)
 D SET^IBCNSP(START+2,5,"VA National ID: "_$P(PAYR,U,2))
"RTN","IBCNSC01",112,0)
 D SET^IBCNSP(START+2,51,"CMS National ID: "_$P(PAYR,U,3))
"RTN","IBCNSC01",113,0)
 S IBLINE=START+2
"RTN","IBCNSC01",114,0)
 ;
"RTN","IBCNSC01",115,0)
 ; Handle the case where no application data is defined
"RTN","IBCNSC01",116,0)
 I 'APPDATA D  G PAYERX
"RTN","IBCNSC01",117,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",118,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",119,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",120,0)
 . D SET^IBCNSP(IBLINE,16,"Payer Application data is not defined!")
"RTN","IBCNSC01",121,0)
 . Q
"RTN","IBCNSC01",122,0)
 ;
"RTN","IBCNSC01",123,0)
 ; Display all the applications
"RTN","IBCNSC01",124,0)
 S APPNAME=""
"RTN","IBCNSC01",125,0)
 F  S APPNAME=$O(APPDATA(APPNAME)) Q:APPNAME=""  D
"RTN","IBCNSC01",126,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",127,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",128,0)
 . ;
"RTN","IBCNSC01",129,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",130,0)
 . D SET^IBCNSP(IBLINE,2,"Payer Application: "_APPNAME)
"RTN","IBCNSC01",131,0)
 . D SET^IBCNSP(IBLINE,50,"Auto-Accept Info: "_$P(APPDATA(APPNAME),U,3))
"RTN","IBCNSC01",132,0)
 . ;
"RTN","IBCNSC01",133,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",134,0)
 . D SET^IBCNSP(IBLINE,4,"National Active: "_$P(APPDATA(APPNAME),U,1))
"RTN","IBCNSC01",135,0)
 . D SET^IBCNSP(IBLINE,47,"Ident Req Subscr ID: "_$P(APPDATA(APPNAME),U,4))
"RTN","IBCNSC01",136,0)
 . ;
"RTN","IBCNSC01",137,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",138,0)
 . D SET^IBCNSP(IBLINE,7,"Local Active: "_$P(APPDATA(APPNAME),U,2))
"RTN","IBCNSC01",139,0)
 . D SET^IBCNSP(IBLINE,51,"SSN = Subscr ID: "_$P(APPDATA(APPNAME),U,5))
"RTN","IBCNSC01",140,0)
 . ;
"RTN","IBCNSC01",141,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",142,0)
 . D SET^IBCNSP(IBLINE,8,"Deactivated: "_$P(APPDATA(APPNAME),U,7))
"RTN","IBCNSC01",143,0)
 . D SET^IBCNSP(IBLINE,54,"Transmit SSN: "_$P(APPDATA(APPNAME),U,6))
"RTN","IBCNSC01",144,0)
 . ;
"RTN","IBCNSC01",145,0)
 . ; If no deactivated date, then exit
"RTN","IBCNSC01",146,0)
 . I $P(APPDATA(APPNAME),U,8)="" Q
"RTN","IBCNSC01",147,0)
 . ;
"RTN","IBCNSC01",148,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC01",149,0)
 . D SET^IBCNSP(IBLINE,13,"D-Date: "_$P(APPDATA(APPNAME),U,8))
"RTN","IBCNSC01",150,0)
 . ;
"RTN","IBCNSC01",151,0)
 . Q
"RTN","IBCNSC01",152,0)
PAYERX ;
"RTN","IBCNSC01",153,0)
 ; Two trailing blank lines after payer information display
"RTN","IBCNSC01",154,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",155,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",156,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC01",157,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC01",158,0)
 Q
"RTN","IBCNSC01",159,0)
 ;
"RTN","IBCNSC01",160,0)
 ;
"RTN","IBCNSC01",161,0)
REMARKS ;
"RTN","IBCNSC01",162,0)
 ;
"RTN","IBCNSC01",163,0)
 N OFFSET,START,IBLCNT,IBI
"RTN","IBCNSC01",164,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",165,0)
 S IB1ST("REM")=START
"RTN","IBCNSC01",166,0)
 ;
"RTN","IBCNSC01",167,0)
 D SET^IBCNSP(START,OFFSET," Remarks ",IORVON,IORVOFF)
"RTN","IBCNSC01",168,0)
 S (IBLCNT,IBI)=0 F  S IBI=$O(^DIC(36,+IBCNS,11,IBI)) Q:IBI<1  D
"RTN","IBCNSC01",169,0)
 . S IBLCNT=IBLCNT+1
"RTN","IBCNSC01",170,0)
 . D SET^IBCNSP(START+IBLCNT,OFFSET,"  "_$E($G(^DIC(36,+IBCNS,11,IBI,0)),1,80))
"RTN","IBCNSC01",171,0)
 . Q
"RTN","IBCNSC01",172,0)
 D SET^IBCNSP(START+IBLCNT+1,OFFSET," ")   ; blank line after remarks
"RTN","IBCNSC01",173,0)
 Q
"RTN","IBCNSC01",174,0)
 ;
"RTN","IBCNSC01",175,0)
SYN ;
"RTN","IBCNSC01",176,0)
 N OFFSET,START,SYN,SYNOI
"RTN","IBCNSC01",177,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1,OFFSET=2
"RTN","IBCNSC01",178,0)
 S IB1ST("SYN")=START
"RTN","IBCNSC01",179,0)
 D SET^IBCNSP(START,OFFSET," Synonyms ",IORVON,IORVOFF)
"RTN","IBCNSC01",180,0)
 S SYN="" F SYNOI=1:1:8 S SYN=$O(^DIC(36,+IBCNS,10,"B",SYN)) Q:SYN=""  D SET^IBCNSP(START+SYNOI,OFFSET,$S(SYNOI>7:"  ...edit to see more...",1:"  "_SYN))
"RTN","IBCNSC01",181,0)
 Q
"RTN","IBCNSC01",182,0)
 ;
"RTN","IBCNSC02")
0^33^B55607158
"RTN","IBCNSC02",1,0)
IBCNSC02 ;ALB/ESG - Insurance Company parent/child management ;01-NOV-2005
"RTN","IBCNSC02",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-1994
"RTN","IBCNSC02",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC02",4,0)
 ;
"RTN","IBCNSC02",5,0)
 Q
"RTN","IBCNSC02",6,0)
 ;
"RTN","IBCNSC02",7,0)
DISP ; entry point for display of parent/child companies
"RTN","IBCNSC02",8,0)
 NEW PCFLG,PARENT,PCDESC,TITLE,START,IBLINE,OFFSET,INSDATA,CNT,TXT
"RTN","IBCNSC02",9,0)
 S PCFLG=$P($G(^DIC(36,+IBCNS,3)),U,13),PARENT=""
"RTN","IBCNSC02",10,0)
 I PCFLG="C" S PARENT=$P($G(^DIC(36,+IBCNS,3)),U,14),PCDESC="Child"
"RTN","IBCNSC02",11,0)
 I PCFLG="P" S PCDESC="Parent"
"RTN","IBCNSC02",12,0)
 S TITLE=" Associated Insurance Companies "
"RTN","IBCNSC02",13,0)
 S (START,IBLINE)=54
"RTN","IBCNSC02",14,0)
 S OFFSET=(40-($L(TITLE)/2))\1+1
"RTN","IBCNSC02",15,0)
 D SET^IBCNSP(START,OFFSET,TITLE,IORVON,IORVOFF)
"RTN","IBCNSC02",16,0)
 ;
"RTN","IBCNSC02",17,0)
 ; no link - display this and get out
"RTN","IBCNSC02",18,0)
 I PCFLG="" D  G DISPX
"RTN","IBCNSC02",19,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",20,0)
 . D SET^IBCNSP(IBLINE,3,"This insurance company is not defined as either a Parent or a Child.")
"RTN","IBCNSC02",21,0)
 . Q
"RTN","IBCNSC02",22,0)
 ;
"RTN","IBCNSC02",23,0)
 ; display for either parent or child
"RTN","IBCNSC02",24,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",25,0)
 D SET^IBCNSP(IBLINE,3,"This insurance company is defined as a "_PCDESC_" Insurance Company.")
"RTN","IBCNSC02",26,0)
 ;
"RTN","IBCNSC02",27,0)
 ; child display
"RTN","IBCNSC02",28,0)
 I PCFLG="C" D  G DISPX
"RTN","IBCNSC02",29,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",30,0)
 . D SET^IBCNSP(IBLINE,3,"It is associated with the following Parent Insurance Company:")
"RTN","IBCNSC02",31,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",32,0)
 . D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",33,0)
 . S INSDATA=""
"RTN","IBCNSC02",34,0)
 . I 'PARENT S INSDATA="*** Parent Insurance Company not defined ***"
"RTN","IBCNSC02",35,0)
 . I PARENT D
"RTN","IBCNSC02",36,0)
 .. N AD S AD=$$INSADD(PARENT)   ; get parent ins co data
"RTN","IBCNSC02",37,0)
 .. S INSDATA=$P(AD,U,1)_"  "_$P(AD,U,2)_"  "_$P(AD,U,6)
"RTN","IBCNSC02",38,0)
 .. Q
"RTN","IBCNSC02",39,0)
 . S IBLINE=IBLINE+1
"RTN","IBCNSC02",40,0)
 . D SET^IBCNSP(IBLINE,8,INSDATA)
"RTN","IBCNSC02",41,0)
 . Q
"RTN","IBCNSC02",42,0)
 ;
"RTN","IBCNSC02",43,0)
 ; parent display
"RTN","IBCNSC02",44,0)
 S CNT=$$PCNT(IBCNS)    ; count # of children
"RTN","IBCNSC02",45,0)
 S TXT="There are "_CNT_" Child Insurance Companies"
"RTN","IBCNSC02",46,0)
 I CNT=1 S TXT="There is 1 Child Insurance Company"
"RTN","IBCNSC02",47,0)
 S TXT=TXT_" associated with it."
"RTN","IBCNSC02",48,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",49,0)
 D SET^IBCNSP(IBLINE,3,TXT)
"RTN","IBCNSC02",50,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",51,0)
 D SET^IBCNSP(IBLINE,3,"Select the ""AC  Associate Companies"" action to enter/edit the children.")
"RTN","IBCNSC02",52,0)
 ;
"RTN","IBCNSC02",53,0)
DISPX ; end with 2 blank lines
"RTN","IBCNSC02",54,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",55,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",56,0)
 S IBLINE=IBLINE+1
"RTN","IBCNSC02",57,0)
 D SET^IBCNSP(IBLINE,2," ")    ; blank line
"RTN","IBCNSC02",58,0)
 Q
"RTN","IBCNSC02",59,0)
 ;
"RTN","IBCNSC02",60,0)
PARENT(IBCNS) ; Insurance company parent/child management
"RTN","IBCNSC02",61,0)
 ; Calls ListMan screen for parent insurance companies
"RTN","IBCNSC02",62,0)
 NEW PCFLG
"RTN","IBCNSC02",63,0)
 I '$G(IBCNS) G PARENTX
"RTN","IBCNSC02",64,0)
 S PCFLG=$P($G(^DIC(36,IBCNS,3)),U,13)
"RTN","IBCNSC02",65,0)
 ;
"RTN","IBCNSC02",66,0)
 ; special check to remove 3.13 field if 3.14 field is nil
"RTN","IBCNSC02",67,0)
 I PCFLG="C",'$P($G(^DIC(36,IBCNS,3)),U,14) D
"RTN","IBCNSC02",68,0)
 . N DIE,DA,DR S DIE=36,DA=IBCNS,DR="3.13////@" D ^DIE
"RTN","IBCNSC02",69,0)
 . Q
"RTN","IBCNSC02",70,0)
 ;
"RTN","IBCNSC02",71,0)
 ; get out if not a parent insurance company
"RTN","IBCNSC02",72,0)
 I PCFLG'="P" G PARENTX
"RTN","IBCNSC02",73,0)
 ;
"RTN","IBCNSC02",74,0)
 ; call ListMan for parent/children management
"RTN","IBCNSC02",75,0)
 D EN^VALM("IBCNS ASSOCIATIONS LIST")
"RTN","IBCNSC02",76,0)
 KILL ^TMP($J,"IBCNSL")
"RTN","IBCNSC02",77,0)
PARENTX ;
"RTN","IBCNSC02",78,0)
 Q
"RTN","IBCNSC02",79,0)
 ;
"RTN","IBCNSC02",80,0)
HDR ; List header info
"RTN","IBCNSC02",81,0)
 S VALMHDR(1)="Parent Insurance Company:"
"RTN","IBCNSC02",82,0)
 S VALMHDR(2)="     "_$$INSCO(IBCNS)
"RTN","IBCNSC02",83,0)
 S VALMHDR(3)=""
"RTN","IBCNSC02",84,0)
HDRX ;
"RTN","IBCNSC02",85,0)
 Q
"RTN","IBCNSC02",86,0)
 ;
"RTN","IBCNSC02",87,0)
BLD ; Build list contents
"RTN","IBCNSC02",88,0)
 NEW C,INSDATA,INSNAME,STCITY,ENTRY,NM,ST,IEN,X
"RTN","IBCNSC02",89,0)
 KILL ^TMP($J,"IBCNSL")
"RTN","IBCNSC02",90,0)
 S C=0
"RTN","IBCNSC02",91,0)
 F  S C=$O(^DIC(36,"APC",IBCNS,C)) Q:'C  D
"RTN","IBCNSC02",92,0)
 . S INSDATA=$$INSADD(C)
"RTN","IBCNSC02",93,0)
 . S INSNAME=$P(INSDATA,U,1)
"RTN","IBCNSC02",94,0)
 . I INSNAME="" S INSNAME="~UNKNOWN"
"RTN","IBCNSC02",95,0)
 . S STCITY=$P(INSDATA,U,7)
"RTN","IBCNSC02",96,0)
 . I STCITY="" S STCITY="~UNKNOWN"
"RTN","IBCNSC02",97,0)
 . S ^TMP($J,"IBCNSL",1,INSNAME,STCITY,C)=""
"RTN","IBCNSC02",98,0)
 . Q
"RTN","IBCNSC02",99,0)
 ;
"RTN","IBCNSC02",100,0)
 I '$D(^TMP($J,"IBCNSL",1)) D  G BLDX
"RTN","IBCNSC02",101,0)
 . ; no children insurance companies found
"RTN","IBCNSC02",102,0)
 . S ^TMP($J,"IBCNSL",2,1,0)=""
"RTN","IBCNSC02",103,0)
 . S ^TMP($J,"IBCNSL",2,2,0)="     No Children Insurance Companies Found"
"RTN","IBCNSC02",104,0)
 . S VALMCNT=2
"RTN","IBCNSC02",105,0)
 . Q
"RTN","IBCNSC02",106,0)
 ;
"RTN","IBCNSC02",107,0)
 S VALMCNT=0,ENTRY=0
"RTN","IBCNSC02",108,0)
 S NM=""
"RTN","IBCNSC02",109,0)
 F  S NM=$O(^TMP($J,"IBCNSL",1,NM)) Q:NM=""  D
"RTN","IBCNSC02",110,0)
 . S ST=""
"RTN","IBCNSC02",111,0)
 . F  S ST=$O(^TMP($J,"IBCNSL",1,NM,ST)) Q:ST=""  D
"RTN","IBCNSC02",112,0)
 .. S IEN=0
"RTN","IBCNSC02",113,0)
 .. F  S IEN=$O(^TMP($J,"IBCNSL",1,NM,ST,IEN)) Q:'IEN  D
"RTN","IBCNSC02",114,0)
 ... S VALMCNT=VALMCNT+1,ENTRY=ENTRY+1
"RTN","IBCNSC02",115,0)
 ... S X=$$FO^IBCNEUT1($J(ENTRY,3),5)_$$INSCO(IEN)
"RTN","IBCNSC02",116,0)
 ... S ^TMP($J,"IBCNSL",2,VALMCNT,0)=X
"RTN","IBCNSC02",117,0)
 ... S ^TMP($J,"IBCNSL",2,"IDX",VALMCNT,ENTRY)=""
"RTN","IBCNSC02",118,0)
 ... S ^TMP($J,"IBCNSL",3,ENTRY)=IEN_U_VALMCNT
"RTN","IBCNSC02",119,0)
 ... Q
"RTN","IBCNSC02",120,0)
 .. Q
"RTN","IBCNSC02",121,0)
 . Q
"RTN","IBCNSC02",122,0)
BLDX ;
"RTN","IBCNSC02",123,0)
 Q
"RTN","IBCNSC02",124,0)
 ;
"RTN","IBCNSC02",125,0)
LINK ; action protocol IBCNSL LINK used to associate children insurance
"RTN","IBCNSC02",126,0)
 ; companies to the current parent ins co for the list
"RTN","IBCNSC02",127,0)
 NEW DIC,X,Y,DIE,DR,DA,NEWINS,IBSTOP,PAR,DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","IBCNSC02",128,0)
 D FULL^VALM1
"RTN","IBCNSC02",129,0)
 I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G LINKX
"RTN","IBCNSC02",130,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC02",131,0)
 . D PAUSE^VALM1
"RTN","IBCNSC02",132,0)
 . Q
"RTN","IBCNSC02",133,0)
 ;
"RTN","IBCNSC02",134,0)
 ; lookup ins company
"RTN","IBCNSC02",135,0)
 W !
"RTN","IBCNSC02",136,0)
 S DIC=36,DIC(0)="AEMQ",DIC("A")="Select Insurance Company: "
"RTN","IBCNSC02",137,0)
 S DIC("W")="D INSLIST^IBCNSC02(Y)"
"RTN","IBCNSC02",138,0)
 ; screen - ins co Y is not a parent and also it is not already in the list of children
"RTN","IBCNSC02",139,0)
 S DIC("S")="I $P($G(^DIC(36,Y,3)),U,13)'=""P""&'$D(^DIC(36,""APC"",IBCNS,Y))"
"RTN","IBCNSC02",140,0)
 D ^DIC K DIC
"RTN","IBCNSC02",141,0)
 I +Y'>0 G LINKX
"RTN","IBCNSC02",142,0)
 S NEWINS=+Y
"RTN","IBCNSC02",143,0)
 ;
"RTN","IBCNSC02",144,0)
 ; check to see if this selected insurance company is already a child
"RTN","IBCNSC02",145,0)
 ; for some other parent
"RTN","IBCNSC02",146,0)
 S PAR=+$P($G(^DIC(36,NEWINS,3)),U,14),IBSTOP=0
"RTN","IBCNSC02",147,0)
 I PAR,PAR'=IBCNS D
"RTN","IBCNSC02",148,0)
 . W !
"RTN","IBCNSC02",149,0)
 . S DIR(0)="YO",DIR("B")="No"
"RTN","IBCNSC02",150,0)
 . S DIR("A",1)="Please Note:  The insurance company you selected is currently identified"
"RTN","IBCNSC02",151,0)
 . S DIR("A",2)="as a Child insurance company associated with the following Parent:"
"RTN","IBCNSC02",152,0)
 . S DIR("A",3)=""
"RTN","IBCNSC02",153,0)
 . S DIR("A",4)="     "_$$INSCO(PAR)
"RTN","IBCNSC02",154,0)
 . S DIR("A",5)=""
"RTN","IBCNSC02",155,0)
 . S DIR("A")="OK to proceed and make this switch"
"RTN","IBCNSC02",156,0)
 . D ^DIR K DIR
"RTN","IBCNSC02",157,0)
 . I Y'=1 S IBSTOP=1 Q
"RTN","IBCNSC02",158,0)
 . Q
"RTN","IBCNSC02",159,0)
 I IBSTOP G LINKX
"RTN","IBCNSC02",160,0)
 ;
"RTN","IBCNSC02",161,0)
 ; lock the potential new child ins company
"RTN","IBCNSC02",162,0)
 L +^DIC(36,NEWINS):0 I '$T D LOCKED^IBTRCD1 G LINKX
"RTN","IBCNSC02",163,0)
 ;
"RTN","IBCNSC02",164,0)
 ; update selected child
"RTN","IBCNSC02",165,0)
 S DIE=36,DA=NEWINS,DR="3.13////C;3.14////"_IBCNS D ^DIE
"RTN","IBCNSC02",166,0)
 ;
"RTN","IBCNSC02",167,0)
 ; Copy the IDs from the parent
"RTN","IBCNSC02",168,0)
 D COPY^IBCEPCID(NEWINS)
"RTN","IBCNSC02",169,0)
 ;
"RTN","IBCNSC02",170,0)
 ; unlock
"RTN","IBCNSC02",171,0)
 L -^DIC(36,NEWINS)
"RTN","IBCNSC02",172,0)
 ;
"RTN","IBCNSC02",173,0)
 D BLD   ; rebuild list of children
"RTN","IBCNSC02",174,0)
LINKX ;
"RTN","IBCNSC02",175,0)
 S VALMBCK="R"
"RTN","IBCNSC02",176,0)
 Q
"RTN","IBCNSC02",177,0)
 ;
"RTN","IBCNSC02",178,0)
UNLINK ; action protocol IBCNSL UNLINK used to disassociate selected children
"RTN","IBCNSC02",179,0)
 ; insurance companies from the list.
"RTN","IBCNSC02",180,0)
 NEW DIR,X,Y,DIRUT,DTOUT,DUOUT,DIROUT,IBLST,IBSUB,IBPCE,IBSEL,DA,DIE,DR
"RTN","IBCNSC02",181,0)
 D FULL^VALM1
"RTN","IBCNSC02",182,0)
 I '$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G UNLINKX
"RTN","IBCNSC02",183,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC02",184,0)
 . D PAUSE^VALM1
"RTN","IBCNSC02",185,0)
 . Q
"RTN","IBCNSC02",186,0)
 ;
"RTN","IBCNSC02",187,0)
 I '$D(^TMP($J,"IBCNSL",3)) D  G UNLINKX
"RTN","IBCNSC02",188,0)
 . W !!?5,"There are no insurance companies to select." D PAUSE^VALM1
"RTN","IBCNSC02",189,0)
 . Q
"RTN","IBCNSC02",190,0)
 S DIR(0)="LO^1:"_+$O(^TMP($J,"IBCNSL",3,""),-1)
"RTN","IBCNSC02",191,0)
 S DIR("A")="Select Insurance Company(s)"
"RTN","IBCNSC02",192,0)
 W ! D ^DIR K DIR
"RTN","IBCNSC02",193,0)
 I $D(DIRUT) G UNLINKX
"RTN","IBCNSC02",194,0)
 M IBLST=Y
"RTN","IBCNSC02",195,0)
 ;
"RTN","IBCNSC02",196,0)
 W !
"RTN","IBCNSC02",197,0)
 S DIR(0)="YO"
"RTN","IBCNSC02",198,0)
 S DIR("A")="OK to proceed",DIR("B")="No"
"RTN","IBCNSC02",199,0)
 D ^DIR K DIR
"RTN","IBCNSC02",200,0)
 I Y'=1 G UNLINKX
"RTN","IBCNSC02",201,0)
 ;
"RTN","IBCNSC02",202,0)
 F IBSUB=0:1 Q:'$D(IBLST(IBSUB))  F IBPCE=1:1 S IBSEL=$P(IBLST(IBSUB),",",IBPCE) Q:'IBSEL  D
"RTN","IBCNSC02",203,0)
 . S DA=+$G(^TMP($J,"IBCNSL",3,IBSEL)) I 'DA Q
"RTN","IBCNSC02",204,0)
 . S DIE=36,DR="3.13////@;3.14////@" D ^DIE
"RTN","IBCNSC02",205,0)
 . Q
"RTN","IBCNSC02",206,0)
 ;
"RTN","IBCNSC02",207,0)
 D BLD   ; rebuild list of children
"RTN","IBCNSC02",208,0)
UNLINKX ;
"RTN","IBCNSC02",209,0)
 S VALMBCK="R"
"RTN","IBCNSC02",210,0)
 Q
"RTN","IBCNSC02",211,0)
 ;
"RTN","IBCNSC02",212,0)
PCNT(Z) ; count number of children for parent ins co Z
"RTN","IBCNSC02",213,0)
 NEW C,CNT
"RTN","IBCNSC02",214,0)
 S C=0,Z=+$G(Z)
"RTN","IBCNSC02",215,0)
 F CNT=0:1 S C=$O(^DIC(36,"APC",Z,C)) Q:'C
"RTN","IBCNSC02",216,0)
 Q CNT
"RTN","IBCNSC02",217,0)
 ;
"RTN","IBCNSC02",218,0)
INSADD(Z) ; function to return ins co address components
"RTN","IBCNSC02",219,0)
 NEW INSDATA,AD,NM,L1,CITY,ST,ZIP,CITYST,STCITY
"RTN","IBCNSC02",220,0)
 S INSDATA=""
"RTN","IBCNSC02",221,0)
 S AD=$G(^DIC(36,+$G(Z),.11))
"RTN","IBCNSC02",222,0)
 S NM=$P($G(^DIC(36,Z,0)),U,1)
"RTN","IBCNSC02",223,0)
 S L1=$P(AD,U,1),CITY=$P(AD,U,4),ST=$P(AD,U,5),ZIP=$P(AD,U,6)
"RTN","IBCNSC02",224,0)
 I ST S ST=$P($G(^DIC(5,ST,0)),U,2)
"RTN","IBCNSC02",225,0)
 S CITYST=$E(CITY,1,15)_" "_ST
"RTN","IBCNSC02",226,0)
 I CITY'="",ST'="" S CITYST=$E(CITY,1,15)_","_ST
"RTN","IBCNSC02",227,0)
 ;
"RTN","IBCNSC02",228,0)
 S $P(STCITY,"|",1)=ST
"RTN","IBCNSC02",229,0)
 I ST="" S $P(STCITY,"|",1)="~~"
"RTN","IBCNSC02",230,0)
 S $P(STCITY,"|",2)=CITY
"RTN","IBCNSC02",231,0)
 I CITY="" S $P(STCITY,"|",2)="~~~~"
"RTN","IBCNSC02",232,0)
 ;
"RTN","IBCNSC02",233,0)
 S INSDATA=NM_U_L1_U_CITY_U_ST_U_ZIP_U_CITYST_U_STCITY
"RTN","IBCNSC02",234,0)
 ;         1    2    3      4    5     6        7
"RTN","IBCNSC02",235,0)
INSADDX ;
"RTN","IBCNSC02",236,0)
 Q INSDATA
"RTN","IBCNSC02",237,0)
 ;
"RTN","IBCNSC02",238,0)
INSCO(Z) ; return display data for ins co Z
"RTN","IBCNSC02",239,0)
 NEW X,Y
"RTN","IBCNSC02",240,0)
 S Y=$$INSADD(Z)
"RTN","IBCNSC02",241,0)
 S X=$$FO^IBCNEUT1($P(Y,U,1),27)
"RTN","IBCNSC02",242,0)
 S X=X_$$FO^IBCNEUT1($P(Y,U,2),26)
"RTN","IBCNSC02",243,0)
 S X=X_$$FO^IBCNEUT1($P(Y,U,6),18)
"RTN","IBCNSC02",244,0)
INSCOX ;
"RTN","IBCNSC02",245,0)
 Q X
"RTN","IBCNSC02",246,0)
 ;
"RTN","IBCNSC02",247,0)
INSLIST(INS) ; insurance company lister for ^DIC call
"RTN","IBCNSC02",248,0)
 NEW Z
"RTN","IBCNSC02",249,0)
 S Z=$$INSADD(INS)
"RTN","IBCNSC02",250,0)
 W ?27,$E($P(Z,U,2),1,20)   ; address line 1
"RTN","IBCNSC02",251,0)
 W ?47,"  ",$P(Z,U,6)       ; city, state
"RTN","IBCNSC02",252,0)
INSLISTX ;
"RTN","IBCNSC02",253,0)
 Q
"RTN","IBCNSC02",254,0)
 ;
"RTN","IBCNSC1")
0^32^B69640933^B17304683
"RTN","IBCNSC1",1,0)
IBCNSC1 ;ALB/NLR - IBCNS INSURANCE COMPANY ;23-MAR-93
"RTN","IBCNSC1",2,0)
 ;;2.0;INTEGRATED BILLING;**62,137,232,291,320**;21-MAR-94
"RTN","IBCNSC1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCNSC1",4,0)
 ;
"RTN","IBCNSC1",5,0)
% G EN^IBCNSC
"RTN","IBCNSC1",6,0)
 ;
"RTN","IBCNSC1",7,0)
AI ; -- (In)Activate Company
"RTN","IBCNSC1",8,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",9,0)
 I '$D(^XUSEC("IB INSURANCE SUPERVISOR",DUZ)) D SORRY G EXIT
"RTN","IBCNSC1",10,0)
 D ^IBCNSC2
"RTN","IBCNSC1",11,0)
 G EXIT
"RTN","IBCNSC1",12,0)
CC ; -- Change Insurance Company
"RTN","IBCNSC1",13,0)
 D FULL^VALM1 W !!
"RTN","IBCNSC1",14,0)
 S IBCNS1=IBCNS K IBCNS D INSCO^IBCNSC
"RTN","IBCNSC1",15,0)
 I '$D(IBCNS) S IBCNS=IBCNS1
"RTN","IBCNSC1",16,0)
 K IBCNS1,VALMQUIT
"RTN","IBCNSC1",17,0)
 G EXIT
"RTN","IBCNSC1",18,0)
EA ; -- Billing,Claims,Appeals,Inquiry,Telephone,Main,Remarks,Synonyms
"RTN","IBCNSC1",19,0)
 D FULL^VALM1
"RTN","IBCNSC1",20,0)
 ;
"RTN","IBCNSC1",21,0)
 ; IB*2*320 - check key for associate company action
"RTN","IBCNSC1",22,0)
 I $G(IBY)=",13,",'$$KCHK^XUSRB("IB EDI INSURANCE EDIT") D  G EXIT
"RTN","IBCNSC1",23,0)
 . W !!?5,"You must hold the IB EDI INSURANCE EDIT key to access this option."
"RTN","IBCNSC1",24,0)
 . D PAUSE^VALM1
"RTN","IBCNSC1",25,0)
 . Q
"RTN","IBCNSC1",26,0)
 ;
"RTN","IBCNSC1",27,0)
 W !!
"RTN","IBCNSC1",28,0)
 D MAIN
"RTN","IBCNSC1",29,0)
 ;
"RTN","IBCNSC1",30,0)
 ; -- was company deleted
"RTN","IBCNSC1",31,0)
 I '$D(^DIC(36,IBCNS)) W !!,"<DELETED>",!! S VALMQUIT="" Q
"RTN","IBCNSC1",32,0)
 ;
"RTN","IBCNSC1",33,0)
EXIT ;
"RTN","IBCNSC1",34,0)
 D HDR^IBCNSC,BLD^IBCNSC
"RTN","IBCNSC1",35,0)
 S VALMBCK="R"
"RTN","IBCNSC1",36,0)
 Q
"RTN","IBCNSC1",37,0)
MAIN ; -- Call edit template
"RTN","IBCNSC1",38,0)
 N IBEDIKEY,Z
"RTN","IBCNSC1",39,0)
 L +^DIC(36,+IBCNS):5 I '$T D LOCKED^IBTRCD1 G MAINQ
"RTN","IBCNSC1",40,0)
 I $G(IBY)=",12," D FACID
"RTN","IBCNSC1",41,0)
 F Z=1,2,4,9,13,14 S IBEDIKEY(Z)=$P($G(^DIC(36,+IBCNS,3)),U,Z)   ; save EDI data fields
"RTN","IBCNSC1",42,0)
 I $G(IBY)'=",12," N DIE,DA,DR S DIE="^DIC(36,",(DA,Y)=IBCNS,DR="[IBEDIT INS CO1]" D ^DIE K DIE I $D(Y) S IB("^")=1
"RTN","IBCNSC1",43,0)
 I $G(IBY)=",12," D EDITID^IBCEP(+IBCNS)
"RTN","IBCNSC1",44,0)
 I $F(",6,13,",$G(IBY)) D PARENT^IBCNSC02(+IBCNS)   ; parent/child management
"RTN","IBCNSC1",45,0)
 L -^DIC(36,+IBCNS)
"RTN","IBCNSC1",46,0)
MAINQ Q
"RTN","IBCNSC1",47,0)
 ;
"RTN","IBCNSC1",48,0)
FACID ; -- Edit facility ids
"RTN","IBCNSC1",49,0)
 D FACID^IBCEP2B(+IBCNS,"E")
"RTN","IBCNSC1",50,0)
 Q
"RTN","IBCNSC1",51,0)
 ;
"RTN","IBCNSC1",52,0)
SORRY ; -- can't inactivate, don't have key
"RTN","IBCNSC1",53,0)
 W !!,"You do not have access to Inactivate entries.  See your application coordinator.",! D PAUSE^VALM1
"RTN","IBCNSC1",54,0)
 Q
"RTN","IBCNSC1",55,0)
PRESCR ;
"RTN","IBCNSC1",56,0)
 N OFFSET,START,IBCNS18,IBADD
"RTN","IBCNSC1",57,0)
 S IBCNS18=$$ADDRESS^IBCNSC0(IBCNS,.18,11)
"RTN","IBCNSC1",58,0)
 S START=34,OFFSET=2
"RTN","IBCNSC1",59,0)
 D SET^IBCNSP(START,OFFSET+19," Prescription Claims Office Information ",IORVON,IORVOFF)
"RTN","IBCNSC1",60,0)
 D SET^IBCNSP(START+1,OFFSET," Company Name: "_$P($G(^DIC(36,+$P(IBCNS18,"^",7),0)),"^",1))
"RTN","IBCNSC1",61,0)
 D SET^IBCNSP(START+2,OFFSET,"       Street: "_$P(IBCNS18,"^",1))
"RTN","IBCNSC1",62,0)
 D SET^IBCNSP(START+3,OFFSET,"     Street 2: "_$P(IBCNS18,"^",2))
"RTN","IBCNSC1",63,0)
 ; D SET^IBCNSP(START+4,OFFSET,"Claim Off. ID: "_$P(IBCNS18,"^",11))
"RTN","IBCNSC1",64,0)
 N OFFSET S OFFSET=45
"RTN","IBCNSC1",65,0)
 D SET^IBCNSP(START+1,OFFSET,"     Street 3: "_$P(IBCNS18,"^",3)) S IBADD=1
"RTN","IBCNSC1",66,0)
 D SET^IBCNSP(START+1+IBADD,OFFSET,"   City/State: "_$E($P(IBCNS18,"^",4),1,15)_$S($P(IBCNS18,"^",4)="":"",1:", ")_$P($G(^DIC(5,+$P(IBCNS18,"^",5),0)),"^",2)_" "_$E($P(IBCNS18,"^",6),1,5))
"RTN","IBCNSC1",67,0)
 D SET^IBCNSP(START+2+IBADD,OFFSET,"        Phone: "_$P(IBCNS18,"^",8))
"RTN","IBCNSC1",68,0)
 D SET^IBCNSP(START+3+IBADD,OFFSET,"          Fax: "_$P(IBCNS18,"^",9))
"RTN","IBCNSC1",69,0)
 Q
"RTN","IBCNSC1",70,0)
 ;
"RTN","IBCNSC1",71,0)
PROVID N OFFSET,START,IBCNS4,IBCNS3,IBDISP,Z,LINE
"RTN","IBCNSC1",72,0)
 S START=$O(^TMP("IBCNSC",$J,""),-1)+1
"RTN","IBCNSC1",73,0)
 S (IB1ST("PROVID"),LINE)=START
"RTN","IBCNSC1",74,0)
 S OFFSET=2,IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3))
"RTN","IBCNSC1",75,0)
 ;       
"RTN","IBCNSC1",76,0)
 D SET^IBCNSP(LINE,OFFSET+25,"Provider IDs",IORVON,IORVOFF)
"RTN","IBCNSC1",77,0)
 N OFFSET
"RTN","IBCNSC1",78,0)
 S LINE=LINE+1,OFFSET=1
"RTN","IBCNSC1",79,0)
 D SET^IBCNSP(LINE,OFFSET,"Billing Provider Secondary ID")
"RTN","IBCNSC1",80,0)
 ;
"RTN","IBCNSC1",81,0)
 N Z,Z0,Z1,IBS,I,DIV,FT,CU,CUF,DIVISION,FORMTYPE,PIDT
"RTN","IBCNSC1",82,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",83,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",84,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",85,0)
 . Q:'($P(Z0,U,8)="E")
"RTN","IBCNSC1",86,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,3),+$P(Z0,U,4))=$P(Z0,U,6)_U_$P(Z0,U,7)
"RTN","IBCNSC1",87,0)
 ;
"RTN","IBCNSC1",88,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",89,0)
 . S DIVISION=$$DIV^IBCEP7(DIV)
"RTN","IBCNSC1",90,0)
 . S CU="",CUF=0 F  S CU=$O(IBS(DIV,CU)) Q:CU=""  D
"RTN","IBCNSC1",91,0)
 .. S FT="" F  S FT=$O(IBS(DIV,CU,FT)) Q:FT=""  D
"RTN","IBCNSC1",92,0)
 ... S FORMTYPE=$S(FT=1:"UB92",FT=2:"HCFA",1:"UNKNOWN")
"RTN","IBCNSC1",93,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",94,0)
 ... I 'CUF,+CU S CUF=1 S TEXT=$P(DIVISION,"/")_" Care Units :",OFFSET=5 D SET^IBCNSP(LINE,OFFSET,TEXT) S LINE=LINE+1
"RTN","IBCNSC1",95,0)
 ... I CU=0 S TEXT=DIVISION_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=2
"RTN","IBCNSC1",96,0)
 ... I +CU S TEXT=$$EXPAND^IBTRE(355.92,.03,CU)_"/"_FORMTYPE_": "_$$GET1^DIQ(355.97,$P(IBS(DIV,CU,FT),U),.03,"E")_" "_$P(IBS(DIV,CU,FT),U,2),OFFSET=5
"RTN","IBCNSC1",97,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",98,0)
 ;
"RTN","IBCNSC1",99,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",100,0)
 ;
"RTN","IBCNSC1",101,0)
 K IBS
"RTN","IBCNSC1",102,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",103,0)
 D SET^IBCNSP(LINE,OFFSET,"Additional Billing Provider Secondary IDs")
"RTN","IBCNSC1",104,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",105,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",106,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",107,0)
 . Q:'($P(Z0,U,8)="A")
"RTN","IBCNSC1",108,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",109,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",110,0)
 ;
"RTN","IBCNSC1",111,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",112,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",113,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",114,0)
 .. S FORMTYPE=$S(FT=1:"UB92",FT=2:"HCFA",1:"UNKNOWN")
"RTN","IBCNSC1",115,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",116,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",117,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",118,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",119,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",120,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",121,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",122,0)
 ;
"RTN","IBCNSC1",123,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",124,0)
 ;
"RTN","IBCNSC1",125,0)
 K IBS
"RTN","IBCNSC1",126,0)
 S OFFSET=1,LINE=LINE+1
"RTN","IBCNSC1",127,0)
 D SET^IBCNSP(LINE,OFFSET,"VA-Laboratory or Facility Secondary IDs")
"RTN","IBCNSC1",128,0)
 S Z=0 F  S Z=$O(^IBA(355.92,"B",+IBCNS,Z)) Q:'Z  D
"RTN","IBCNSC1",129,0)
 . S Z0=$G(^IBA(355.92,Z,0))
"RTN","IBCNSC1",130,0)
 . Q:'$P(Z0,U,6)!($P(Z0,U,7)="")  ; Quit if no provider id or id type
"RTN","IBCNSC1",131,0)
 . Q:'($P(Z0,U,8)="LF")
"RTN","IBCNSC1",132,0)
 . ; IBS(DIVISION,FORMTYPE,IDTYPE)=ID
"RTN","IBCNSC1",133,0)
 . S IBS(+$P(Z0,U,5),+$P(Z0,U,4),+$P(Z0,U,6))=$P(Z0,U,7)
"RTN","IBCNSC1",134,0)
 ;
"RTN","IBCNSC1",135,0)
 S DIVISION=$$DIV^IBCEP7(0)
"RTN","IBCNSC1",136,0)
 S DIV="" F  S DIV=$O(IBS(DIV)) Q:DIV=""  D
"RTN","IBCNSC1",137,0)
 . S FT="" F  S FT=$O(IBS(DIV,FT)) Q:FT=""  D
"RTN","IBCNSC1",138,0)
 .. S FORMTYPE=$S(FT=1:"UB92",FT=2:"HCFA",1:"UNKNOWN")
"RTN","IBCNSC1",139,0)
 .. S TEXT=DIVISION_"/"_FORMTYPE_": "
"RTN","IBCNSC1",140,0)
 .. S LINE=LINE+1,OFFSET=2
"RTN","IBCNSC1",141,0)
 .. D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",142,0)
 .. S PIDT="" F  S PIDT=$O(IBS(DIV,FT,PIDT)) Q:PIDT=""  D
"RTN","IBCNSC1",143,0)
 ... S LINE=LINE+1
"RTN","IBCNSC1",144,0)
 ... ;S TEXT=$$EXPAND^IBTRE(355.92,.06,PIDT)_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",145,0)
 ... S TEXT=$$GET1^DIQ(355.97,PIDT,.03,"E")_" "_IBS(DIV,FT,PIDT),OFFSET=5
"RTN","IBCNSC1",146,0)
 ... D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",147,0)
 ;
"RTN","IBCNSC1",148,0)
 ;
"RTN","IBCNSC1",149,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",150,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",151,0)
 S OFFSET=2
"RTN","IBCNSC1",152,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,OFFSET+25,"ID Parameters",IORVON,IORVOFF)
"RTN","IBCNSC1",153,0)
 ;
"RTN","IBCNSC1",154,0)
 S IBCNS4=$G(^DIC(36,IBCNS,4)),IBCNS3=$G(^(3)),OFFSET=1
"RTN","IBCNSC1",155,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (HCFA): "_$$EXPAND^IBTRE(36,4.01,+$P(IBCNS4,U))
"RTN","IBCNSC1",156,0)
 S LINE=LINE+1
"RTN","IBCNSC1",157,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",158,0)
 ;
"RTN","IBCNSC1",159,0)
 S TEXT="Attending/Rendering Provider Secondary ID Qualifier (UB92): "_$$EXPAND^IBTRE(36,4.02,+$P(IBCNS4,U,2))
"RTN","IBCNSC1",160,0)
 S LINE=LINE+1
"RTN","IBCNSC1",161,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",162,0)
 ;
"RTN","IBCNSC1",163,0)
 S TEXT="Attending/Rendering Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.03,+$P(IBCNS4,U,3))
"RTN","IBCNSC1",164,0)
 S LINE=LINE+1
"RTN","IBCNSC1",165,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",166,0)
 ;
"RTN","IBCNSC1",167,0)
 S TEXT="Referring Provider Secondary ID Qualifier (HCFA): "_$$EXPAND^IBTRE(36,4.04,+$P(IBCNS4,U,4))
"RTN","IBCNSC1",168,0)
 S LINE=LINE+1
"RTN","IBCNSC1",169,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",170,0)
 ;
"RTN","IBCNSC1",171,0)
 S TEXT="Referring Provider Secondary ID Requirement: "_$$EXPAND^IBTRE(36,4.05,+$P(IBCNS4,U,5))
"RTN","IBCNSC1",172,0)
 S LINE=LINE+1
"RTN","IBCNSC1",173,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",174,0)
 ;
"RTN","IBCNSC1",175,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (HCFA): "_$$EXPAND^IBTRE(36,4.06,+$P(IBCNS4,U,6))
"RTN","IBCNSC1",176,0)
 S LINE=LINE+1
"RTN","IBCNSC1",177,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",178,0)
 ;
"RTN","IBCNSC1",179,0)
 S TEXT="Use Att/Rend ID as Billing Provider Sec. ID (UB92): "_$$EXPAND^IBTRE(36,4.08,+$P(IBCNS4,U,8))
"RTN","IBCNSC1",180,0)
 S LINE=LINE+1
"RTN","IBCNSC1",181,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",182,0)
 ;
"RTN","IBCNSC1",183,0)
 S TEXT="Send VA Lab/Facility IDs or Facility Data for VAMC?: "_$$EXPAND^IBTRE(36,4.07,+$P(IBCNS4,U,7))
"RTN","IBCNSC1",184,0)
 S LINE=LINE+1
"RTN","IBCNSC1",185,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",186,0)
 ;
"RTN","IBCNSC1",187,0)
 S TEXT="Transmit no Billing Provider Sec. ID for the Electronic Plan Types: "
"RTN","IBCNSC1",188,0)
 S LINE=LINE+1
"RTN","IBCNSC1",189,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",190,0)
 ;
"RTN","IBCNSC1",191,0)
 N TAR,ERR,IBCT
"RTN","IBCNSC1",192,0)
 D LIST^DIC(36.013,","_IBCNS_",",".01",,10,,,,,,"TAR","ERR")
"RTN","IBCNSC1",193,0)
 F IBCT=1:1:+$G(TAR("DILIST",0)) D
"RTN","IBCNSC1",194,0)
 . S TEXT=TAR("DILIST",1,IBCT)
"RTN","IBCNSC1",195,0)
 . S LINE=LINE+1
"RTN","IBCNSC1",196,0)
 . D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",197,0)
 ;
"RTN","IBCNSC1",198,0)
 S TEXT="Require Provider's SSN To Print (HCFA): "_$$EXPAND^IBTRE(36,3.11,+$P(IBCNS3,U,11))
"RTN","IBCNSC1",199,0)
 S LINE=LINE+1
"RTN","IBCNSC1",200,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",201,0)
 ;
"RTN","IBCNSC1",202,0)
 S TEXT="Require Provider's SSN To Print (UB92): "_$$EXPAND^IBTRE(36,3.12,+$P(IBCNS3,U,12))
"RTN","IBCNSC1",203,0)
 S LINE=LINE+1
"RTN","IBCNSC1",204,0)
 D SET^IBCNSP(LINE,OFFSET,TEXT)
"RTN","IBCNSC1",205,0)
 ;
"RTN","IBCNSC1",206,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",207,0)
 S LINE=LINE+1 D SET^IBCNSP(LINE,2," ")
"RTN","IBCNSC1",208,0)
 Q
"RTN","IBCNSC1",209,0)
 ;       
"RTN","IBCNSC1",210,0)
INSDEF(IBINS,IBPTYP) ; Returns the default id # for an ins co, if possible
"RTN","IBCNSC1",211,0)
 N X
"RTN","IBCNSC1",212,0)
 S X=""
"RTN","IBCNSC1",213,0)
 I IBINS,IBPTYP S X=$P($G(^IBA(355.91,+$O(^IBA(355.91,"AC",IBINS,IBPTYP,"*N/A*","")),0)),U,7)
"RTN","IBCNSC1",214,0)
 Q X
"RTN","IBCSC3")
0^69^B36137301^B31826832
"RTN","IBCSC3",1,0)
IBCSC3 ;ALB/MJB - MCCR SCREEN 3 (PAYER/MAILING ADDRESS) ;27 MAY 88 10:15
"RTN","IBCSC3",2,0)
 ;;2.0;INTEGRATED BILLING;**8,43,52,80,82,51,137,232,320**;21-MAR-94
"RTN","IBCSC3",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC3",4,0)
 ;
"RTN","IBCSC3",5,0)
 ;MAP TO DGCRSC3
"RTN","IBCSC3",6,0)
 ;
"RTN","IBCSC3",7,0)
EN N IB,IBX,IBINS,Y,Z
"RTN","IBCSC3",8,0)
 I $D(DGRVRCAL) D ^IBCU6 K DGRVRCAL
"RTN","IBCSC3",9,0)
 D ^IBCSCU S IBSR=3,IBSR1="",IBV1="000" I IBV S IBV1="111"
"RTN","IBCSC3",10,0)
 D H^IBCSCU
"RTN","IBCSC3",11,0)
 D:$D(^DGCR(399,IBIFN,"AIC")) 3^IBCVA0
"RTN","IBCSC3",12,0)
 D:'$D(^DGCR(399,IBIFN,"AIC")) 123^IBCVA
"RTN","IBCSC3",13,0)
 D POL^IBCNSU41(DFN)
"RTN","IBCSC3",14,0)
 F I=0,"M","M1","U","U2" S IB(I)=$S($D(^DGCR(399,IBIFN,I)):(^(I)),1:"")
"RTN","IBCSC3",15,0)
 S IBOUTP=2,IBINDT=$S(+$G(IB("U")):+IB("U"),1:DT)
"RTN","IBCSC3",16,0)
 ;S Z=1,IBW=1 X IBWW W " Rate Type  : ",$S($P(IB(0),U,7)']"":IBU,$D(^DGCR(399.3,$P(IB(0),U,7),0)):$P(^(0),U),1:IBUN)
"RTN","IBCSC3",17,0)
 ;
"RTN","IBCSC3",18,0)
 S X=" Rate Type  : "_$S($P(IB(0),U,7)']"":IBU,$D(^DGCR(399.3,$P(IB(0),U,7),0)):$P(^(0),U),1:IBUN)
"RTN","IBCSC3",19,0)
 S Z=1,IBW=1 X IBWW W X
"RTN","IBCSC3",20,0)
 I +$P($G(^IBE(350.9,1,1)),U,22) W $J("",(42-$L(X))),"Form Type: ",$P($G(^IBE(353,+$P(IB(0),U,19),0)),U,1)
"RTN","IBCSC3",21,0)
 W !?4,"Responsible: ",$S($P(IB(0),U,11)']"":IBU,$P(IB(0),U,11)="p":"PATIENT",$P(IB(0),U,11)="i":"INSURER",1:"OTHER")
"RTN","IBCSC3",22,0)
 W ?45,"Payer Sequence: " S IBX=$P(IB(0),U,21) W $S(IBX="P":"Primary",IBX="S":"Secondary",IBX="T":"Tertiary",IBX="A":"Patient",1:"")
"RTN","IBCSC3",23,0)
 I $P(IB(0),U,11)="i" D
"RTN","IBCSC3",24,0)
 . W !?4,"Bill Payer : " S X=$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCSC3",25,0)
 . W $S(+X:$P($G(^DIC(36,+X,0)),U,1),$$MCRWNR^IBEFUNC($$CURR^IBCEF2(IBIFN)):"MRA NEEDED FROM MEDICARE",1:IBU)
"RTN","IBCSC3",26,0)
 . W ?45,"Transmit: " S Z=0,X=$$TXMT^IBCEF4(IBIFN,.Z)
"RTN","IBCSC3",27,0)
 . W $S(X:"Yes",1:"No-"_$S(Z=1:"Forced to print local",Z=2&($$WNRBILL^IBEFUNC(IBIFN)):"MRA not active",Z=2:"EDI not active",Z=3:"Rate typ transmit off",Z=4:"Ins. co transmit off",Z=5:"Failed RULE #"_$G(Z(0)),Z=6:"Invalid NDC code type",1:"??"))
"RTN","IBCSC3",28,0)
 I $P(IB(0),U,11)']"" G MAIL
"RTN","IBCSC3",29,0)
 I $P(IB(0),U,11)="p" G MAIL
"RTN","IBCSC3",30,0)
 I $P(IB(0),U,11)="o" W !?4,"Inst. Name : ",$S($P(IB("M"),U,11)']"":IBU,$D(^DIC(4,$P(IB("M"),U,11),0)):$P(^(0),U,1),1:"UNKNOWN INSTITUTION") G MAIL
"RTN","IBCSC3",31,0)
 I $P(IB(0),U,11)="i" I $D(IBDD)>1,$D(^DGCR(399,IBIFN,"AIC")) G SHW
"RTN","IBCSC3",32,0)
 D UP G LST:$D(IBDD)>1 W !?4,"Insurance : NO REIMBURSABLE INSURANCE INFORMATION ON FILE",!?17,"[Add Insurance Information by entering '1' at the prompt below]" G MAIL
"RTN","IBCSC3",33,0)
 ;W !?4,"Insurance Carrier",?40,"Whose",?66,"Relationship" S X="",$P(X,"=",81)="" W !,X
"RTN","IBCSC3",34,0)
LST N IBDTIN,IBICT
"RTN","IBCSC3",35,0)
 S IBDTIN=+$G(IB("U")),IBICT=0
"RTN","IBCSC3",36,0)
 W ! D HDR^IBCNS
"RTN","IBCSC3",37,0)
 S I=0 F  S I=$O(IBDD("S",I)) Q:'I  D  Q:IBICT'<5
"RTN","IBCSC3",38,0)
 .S IBX=0 F  S IBX=$O(IBDD("S",I,IBX)) Q:'IBX  S IBINS=$G(IBDD(IBX,0)) I IBINS'="" S IBICT=IBICT+1 D:IBICT<5 D1^IBCNS I IBICT'<5 W !,?1,"**Patient has additional insurance - use ?INS to see the entire list" Q
"RTN","IBCSC3",39,0)
 G MAIL
"RTN","IBCSC3",40,0)
LST1 W !?4,$S($D(^DIC(36,+IBDD(IBX,0),0)):$E($P(^(0),"^",1),1,20),1:"UNKNOWN") S X=$P(IBDD(IBX,0),"^",6) W ?26,$S(X="v":"VETERAN",X="s":"SPOUSE",1:"OTHER") S X=$P(IBDD(IBX,0),"^",16)
"RTN","IBCSC3",41,0)
 S X=$S(+X=1:"PATIENT",+X=2:"SPOUSE",+X=3:"CHILD",+X=8:"EMPLOYEE",+X=11:"ORGAN DONOR",+X=18:"PARENT",+X=15:"PLANTIFF",1:"UNKNOWN")
"RTN","IBCSC3",42,0)
 I X="UNKNOWN" S X1=$S($D(IBDD(IBX,0)):$P(IBDD(IBX,0),"^",6),1:""),X=$S(X1="v":"PATIENT",X1="s":"SPOUSE",1:X)
"RTN","IBCSC3",43,0)
 W ?37,X,?49 S Y=$P(IBDD(IBX,0),"^",8) X ^DD("DD") W Y,?64 S Y=$P(IBDD(IBX,0),"^",4) X ^DD("DD") W Y
"RTN","IBCSC3",44,0)
 Q
"RTN","IBCSC3",45,0)
SHW I $D(IBDD) S I="" F  S I=$O(IBDD(I)) Q:'I  D SHW1
"RTN","IBCSC3",46,0)
MAIL I $$BUFFER^IBCNBU1(DFN) W !!,?17,"***  Patient has Insurance Buffer entries  ***"
"RTN","IBCSC3",47,0)
 S IB("M")=$S($D(^DGCR(399,IBIFN,"M")):^("M"),1:""),IB("M1")=$S($D(^DGCR(399,IBIFN,"M1")):^("M1"),1:""),IB(0)=^DGCR(399,IBIFN,0)
"RTN","IBCSC3",48,0)
 S Z=2,IBW=1 W ! X IBWW
"RTN","IBCSC3",49,0)
 N IBRAMS S IBRAMS=4.06
"RTN","IBCSC3",50,0)
 I $$FT^IBCEF(IBIFN)=3 S IBRAMS=4.08
"RTN","IBCSC3",51,0)
 S IB("RAFLAG",1)=$S($P(IB("M"),U,1)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,1),IBRAMS,"I"))
"RTN","IBCSC3",52,0)
 S IB("RAFLAG",2)=$S($P(IB("M"),U,2)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,2),IBRAMS,"I"))
"RTN","IBCSC3",53,0)
 S IB("RAFLAG",3)=$S($P(IB("M"),U,3)="":0,1:$$GET1^DIQ(36,$P(IB("M"),U,3),IBRAMS,"I"))
"RTN","IBCSC3",54,0)
 S X=0 I $P(IB("M1"),U,2)="",'IB("RAFLAG",1),$P(IB("M1"),U,3)="",'IB("RAFLAG",2),$P(IB("M1"),U,4)="",'IB("RAFLAG",3) S X=1 W " Facility ID #s: ",IBUN
"RTN","IBCSC3",55,0)
 I 'X D
"RTN","IBCSC3",56,0)
 . W " Primary Payer: ",$S($P(IB("M1"),U,2)]"":$P(IB("M1"),U,2),IB("RAFLAG",1):"ATT/REND ID",1:"")
"RTN","IBCSC3",57,0)
 . W !?4,"Secondary Payer: ",$S($P(IB("M1"),U,3)]"":$P(IB("M1"),U,3),IB("RAFLAG",2):"ATT/REND ID",1:"")
"RTN","IBCSC3",58,0)
 . W ?45,"Tertiary Payer: ",$S($P(IB("M1"),U,4)]"":$P(IB("M1"),U,4),IB("RAFLAG",3):"ATT/REND ID",1:"")
"RTN","IBCSC3",59,0)
 S Z=3,IBW=1 W ! X IBWW
"RTN","IBCSC3",60,0)
 W " Mailing Address : "
"RTN","IBCSC3",61,0)
 S X=+$G(^DGCR(399,IBIFN,"MP"))
"RTN","IBCSC3",62,0)
 I 'X,$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IBIFN)) S X=+$$CURR^IBCEF2(IBIFN)
"RTN","IBCSC3",63,0)
 I X,+$G(^DIC(36,X,3)) S I=$P(^(3),U,$S($$FT^IBCEF(IBIFN)=2:2,1:4)) W ?56,"Electronic ID: ",$S(I'="":I,1:"<NONE>")
"RTN","IBCSC3",64,0)
 S X="" I IB("M")]"" F I=4:1:9 Q:X]""  S X=$P(IB("M"),"^",I)
"RTN","IBCSC3",65,0)
 I X']"" W !?4,"NO MAILING ADDRESS HAS BEEN SPECIFIED!",?45,$$UP1,!?4,"Send Bill to PAYER listed above." G ENDSCR
"RTN","IBCSC3",66,0)
 S X=IB("M") W !,?4,$S($P(X,"^",4)]"":$P(X,"^",4),1:"'MAIL TO' PERSON/PLACE UNSPECIFIED"),?45,$$UP1
"RTN","IBCSC3",67,0)
 W !?4,$S($P(X,"^",5)]"":$P(X,"^",5),1:"STREET ADDRESS UNSPECIFIED") W:$P(X,"^",6)]"" ", ",$P(X,"^",6)
"RTN","IBCSC3",68,0)
 W ! W:$P(IB("M1"),"^",1)]"" ?4,$P(IB("M1"),"^",1),", "
"RTN","IBCSC3",69,0)
 W ?4,$S($P(X,"^",7)]"":$P(X,"^",7),1:"CITY UNSPECIFIED"),", ",$S($D(^DIC(5,+$P(X,"^",8),0)):$P(^(0),"^",2),1:"STATE UNSPECIFIED"),"  ",$S($P(X,"^",9)]"":$P(X,"^",9),1:"ZIP UNSPECIFIED")
"RTN","IBCSC3",70,0)
 ;
"RTN","IBCSC3",71,0)
ENDSCR K IBADI,IBDD,IBOUTP,IBINDT,I,X,X1
"RTN","IBCSC3",72,0)
 G ^IBCSCP
"RTN","IBCSC3",73,0)
 ;
"RTN","IBCSC3",74,0)
SHW1 S X=IBDD(I,0),Z=$G(^DIC(36,+X,0))
"RTN","IBCSC3",75,0)
 W !!?4,"Ins ",I,": " W $E($S($P(Z,U,1)'="":$P(Z,U,1),1:IBU),1,16)
"RTN","IBCSC3",76,0)
 I $P(Z,U,2)="N" W ?30,"WILL NOT REIMBURSE"
"RTN","IBCSC3",77,0)
 W ?51,"Policy #: ",$E($S($P(X,"^",2)]"":$P(X,"^",2),1:IBU),1,18)
"RTN","IBCSC3",78,0)
 W !?4,"Grp #: ",$E($S($P(X,"^",3)]"":$P(X,"^",3),1:IBU),1,16)
"RTN","IBCSC3",79,0)
 W ?30,"Whose: ",$S($P(X,"^",6)="v":"VETERAN",$P(X,"^",6)="s":"SPOUSE",1:"OTHER")
"RTN","IBCSC3",80,0)
 W ?51,"Rel to Insd: ",IBIR(I)
"RTN","IBCSC3",81,0)
 W !?4,"Grp Nm: ",$E($S($P(X,"^",15)]"":$P(X,"^",15),1:IBU),1,16)
"RTN","IBCSC3",82,0)
 W ?30,"Insd Sex: ",$S($D(IBISEX(I)):IBISEX(I),1:IBU)
"RTN","IBCSC3",83,0)
 W ?51,"Insured: ",$E($P(X,"^",17),1,19)
"RTN","IBCSC3",84,0)
 Q
"RTN","IBCSC3",85,0)
 ;
"RTN","IBCSC3",86,0)
UP K IBDD D ALL^IBCNS1(DFN,"IBDD",2,IBINDT,1)
"RTN","IBCSC3",87,0)
 I $D(IBDD("S",.5)) D  ; At least 1 MCR WNR insurance policy exists
"RTN","IBCSC3",88,0)
 . ;try to put correct part (A for institution and B for facility)
"RTN","IBCSC3",89,0)
 . N Z,IBAB
"RTN","IBCSC3",90,0)
 . S IBAB=$S($$FT^IBCEF(IBIFN)=3:"A",1:"B")
"RTN","IBCSC3",91,0)
 . S Z=0 F  S Z=$O(IBDD("S",.5,Z)) Q:'Z  D
"RTN","IBCSC3",92,0)
 .. I $P($G(IBDD(Z,355.3)),U,14)=IBAB S IBDD("S",.1,Z,0)="" K IBDD("S",.5,Z)
"RTN","IBCSC3",93,0)
 Q
"RTN","IBCSC3",94,0)
 ;
"RTN","IBCSC3",95,0)
UP1() ;check if patient has medicare so can print a flag for the user
"RTN","IBCSC3",96,0)
 N IBDD,IBX,IBY S IBY="" D ALL^IBCNS1(DFN,"IBDD",2,IBINDT)
"RTN","IBCSC3",97,0)
 S IBX=0 F  S IBX=$O(IBDD(IBX)) Q:'IBX  I $P($G(IBDD(IBX,355.3)),U,9)=33 S IBY="(Patient has Medicare)"
"RTN","IBCSC3",98,0)
 Q IBY
"RTN","IBCSC3",99,0)
 ;IBCSC3
"RTN","IBCSC8H")
0^45^B30414621^B22724982
"RTN","IBCSC8H",1,0)
IBCSC8H ;ALB/ARH - MCCR SCREEN 8 (BILL SPECIFIC INFO) HCFA 1500 ;4/21/92
"RTN","IBCSC8H",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,207,210,232,155,320**;21-MAR-94
"RTN","IBCSC8H",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSC8H",4,0)
 ; HCFA 1500 screen 8
"RTN","IBCSC8H",5,0)
 ;
"RTN","IBCSC8H",6,0)
 ; MAP TO DGCRSC8H
"RTN","IBCSC8H",7,0)
 ;
"RTN","IBCSC8H",8,0)
EN N I,IB,Y,Z
"RTN","IBCSC8H",9,0)
 D ^IBCSCU S IBSR=8,IBSR1="H",IBV1="0000000" S:IBV IBV1="1111111" F I="U","U1","UF2","UF3","U2","M","TX",0,"U3" S IB(I)=$G(^DGCR(399,IBIFN,I))
"RTN","IBCSC8H",10,0)
 N IBZ,IBPRV,IBDATE,IBREQ,IBMRASEC,IBZ1
"RTN","IBCSC8H",11,0)
 ;
"RTN","IBCSC8H",12,0)
 S IBDATE=$$BDATE^IBACSV(IBIFN) ; Date of service for the bill
"RTN","IBCSC8H",13,0)
 S IBPRV=""
"RTN","IBCSC8H",14,0)
 D GETPRV^IBCEU(IBIFN,"ALL",.IBPRV)
"RTN","IBCSC8H",15,0)
 K IB("PRV")
"RTN","IBCSC8H",16,0)
 S IBZ=0 F  S IBZ=$O(IBPRV(IBZ)) Q:'IBZ  I $O(IBPRV(IBZ,0))!$D(IBPRV(IBZ,"NOTOPT")) M IB("PRV",IBZ)=IBPRV(IBZ)
"RTN","IBCSC8H",17,0)
 ;
"RTN","IBCSC8H",18,0)
 D H^IBCSCU
"RTN","IBCSC8H",19,0)
 S Z=1,IBW=1 X IBWW W " Unable To Work From: " S Y=$P(IB("U"),U,16) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",20,0)
 W !?4,"Unable To Work To  : " S Y=$P(IB("U"),U,17) X ^DD("DD") W $S(Y'="":Y,1:IBUN)
"RTN","IBCSC8H",21,0)
 S Z=2,IBW=1 X IBWW W " Admitting Dx       : " S IBZ=$$ICD9^IBACSV(+IB("U2"),IBDATE) W $S(IBZ'="":$P(IBZ,U)_" - "_$P(IBZ,U,3),1:IBUN)
"RTN","IBCSC8H",22,0)
 S IBZ="",IBZ=$S($P(IB("UF3"),U,4)]"":"Pri: "_$P(IB("UF3"),U,4),1:"")_$S($P(IB("UF3"),U,5)'="":"  Sec: "_$P(IB("UF3"),U,5),1:"")_$S($P(IB("UF3"),U,6)'="":" Ter: "_$P(IB("UF3"),U,6),1:"")
"RTN","IBCSC8H",23,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",24,0)
 W !,?4,"ICN/DCN(s)         : ",IBZ
"RTN","IBCSC8H",25,0)
 S IBZ=$$CKPROV^IBCEU(IBIFN,3)
"RTN","IBCSC8H",26,0)
 S IBZ="",IBZ=$S($P(IB("U"),U,13)]"":"Pri: "_$P(IB("U"),U,13),1:"")_$S($P(IB("U2"),U,8)'="":"  Sec: "_$P(IB("U2"),U,8),1:"")_$S($P(IB("U2"),U,9)'="":"  Ter: "_$P(IB("U2"),U,9),1:"")
"RTN","IBCSC8H",27,0)
 S:IBZ="" IBZ=IBUN
"RTN","IBCSC8H",28,0)
 W !?4,"Tx Auth. Code(s)   : ",IBZ
"RTN","IBCSC8H",29,0)
 S Z=3,IBW=1 X IBWW
"RTN","IBCSC8H",30,0)
 W " Providers          : ",$S('$O(IB("PRV",0)):IBU,1:"")
"RTN","IBCSC8H",31,0)
 I $D(IB("PRV")) D  ; at least 1 provider found
"RTN","IBCSC8H",32,0)
 . N IBQ,A,A1,IBARR
"RTN","IBCSC8H",33,0)
 . S IBZ=0
"RTN","IBCSC8H",34,0)
 . D DEFSEC^IBCEF74(IBIFN,.IBARR)
"RTN","IBCSC8H",35,0)
 . F  S IBZ=$O(IB("PRV",IBZ)) Q:'IBZ  D
"RTN","IBCSC8H",36,0)
 .. S IBQ=""
"RTN","IBCSC8H",37,0)
 .. W !,?5,"- "
"RTN","IBCSC8H",38,0)
 .. S A=$$EXPAND^IBTRE(399.0222,.01,IBZ)
"RTN","IBCSC8H",39,0)
 .. I $P($G(IB("PRV",IBZ,1)),U,4)'="" S A1=" ("_$E($P(IB("PRV",IBZ,1),U,4),1,3)_")",A=$E(A,1,16-$L(A1))_A1
"RTN","IBCSC8H",40,0)
 .. W $E(A_$J("",16),1,16),": "
"RTN","IBCSC8H",41,0)
 .. I '$P($G(IB("PRV",IBZ,1)),U,3),$P($G(IB("PRV",IBZ,1)),U)="" W IBU Q
"RTN","IBCSC8H",42,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)'="" W:'$G(IB("PRV",IBZ)) $E($P(IB("PRV",IBZ,1),U)_$J("",16),1,16) W:$G(IB("PRV",IBZ)) "(OLD BOX 31 DATA) "_$P(IB("PRV",IBZ,1),U)
"RTN","IBCSC8H",43,0)
 .. I $P($G(IB("PRV",IBZ,1)),U)="",$P($G(IB("PRV",IBZ)),U)'="" W $E($P(IB("PRV",IBZ),U)_$J("",16),1,16)
"RTN","IBCSC8H",44,0)
 .. F A=1:1:3 I $G(IBARR(IBZ,A))'="" S IBQ=IBQ_"["_$E("PST",A)_"]"_IBARR(IBZ,A)_" "
"RTN","IBCSC8H",45,0)
 .. I $L(IBQ) W $E(IBQ,1,39)
"RTN","IBCSC8H",46,0)
 ;
"RTN","IBCSC8H",47,0)
 K IB("PRV")
"RTN","IBCSC8H",48,0)
 ;
"RTN","IBCSC8H",49,0)
 S Z=4,IBW=1 X IBWW
"RTN","IBCSC8H",50,0)
 W " Other Facility (VA/non): " S IBZ=$$EXPAND^IBTRE(399,232,+$P(IB("U2"),U,10))
"RTN","IBCSC8H",51,0)
 W $S(IBZ'="":IBZ,$$PSRV^IBCEU(IBIFN):IBU,1:IBUN)
"RTN","IBCSC8H",52,0)
 ;
"RTN","IBCSC8H",53,0)
 ; clia# display - IB patch 320
"RTN","IBCSC8H",54,0)
 S (IBZ,IBZ1)=$P(IB("U2"),U,13)     ; retrieve CLIA# from database
"RTN","IBCSC8H",55,0)
 ;
"RTN","IBCSC8H",56,0)
 I IBZ="" D
"RTN","IBCSC8H",57,0)
 . NEW CLIAREQ,DEFCLIA,DIE,DA,DR
"RTN","IBCSC8H",58,0)
 . S CLIAREQ=$$CLIAREQ^IBCEP8A(IBIFN)
"RTN","IBCSC8H",59,0)
 . I 'CLIAREQ S IBZ1=IBUN Q          ; clia# not needed
"RTN","IBCSC8H",60,0)
 . S DEFCLIA=$$CLIA^IBCEP8A(IBIFN)   ; default clia# for claim
"RTN","IBCSC8H",61,0)
 . I DEFCLIA="" S IBZ1=IBU Q         ; no default found
"RTN","IBCSC8H",62,0)
 . I $G(IBMDOTCN) K IBMDOTCN S IBZ1=IBU Q     ; user @-deleted clia#
"RTN","IBCSC8H",63,0)
 . S IBZ1=DEFCLIA                    ; display and stuff default clia#
"RTN","IBCSC8H",64,0)
 . S DIE=399,DA=IBIFN,DR="235///"_DEFCLIA D ^DIE    ; stuff in default
"RTN","IBCSC8H",65,0)
 . Q
"RTN","IBCSC8H",66,0)
 ;
"RTN","IBCSC8H",67,0)
 W !,?4,"Lab CLIA #         : ",IBZ1
"RTN","IBCSC8H",68,0)
 ;
"RTN","IBCSC8H",69,0)
 ; Mammo# display IB patch 320
"RTN","IBCSC8H",70,0)
 S (IBZ,IBZ1)=$P(IB("U3"),U,1)    ; retrieve mammo# from database
"RTN","IBCSC8H",71,0)
 ;
"RTN","IBCSC8H",72,0)
 ; If mammo# is there, but should not be, then blank it out
"RTN","IBCSC8H",73,0)
 I IBZ'="",'$$XRAY^IBCEP8A(IBIFN) D
"RTN","IBCSC8H",74,0)
 . NEW DIE,DA,DR
"RTN","IBCSC8H",75,0)
 . S IBZ1=IBUN        ; mammo# not needed
"RTN","IBCSC8H",76,0)
 . S DIE=399,DA=IBIFN,DR="242////@" D ^DIE
"RTN","IBCSC8H",77,0)
 . Q
"RTN","IBCSC8H",78,0)
 ;
"RTN","IBCSC8H",79,0)
 I IBZ="" S IBZ1=IBUN
"RTN","IBCSC8H",80,0)
 W !?4,"Mammography Cert # : ",IBZ1
"RTN","IBCSC8H",81,0)
 ;
"RTN","IBCSC8H",82,0)
 S Z=5,IBW=1 X IBWW
"RTN","IBCSC8H",83,0)
 W " Form Locator 19    : " S IBZ=$P($G(^DGCR(399,IBIFN,"UF31")),U,3) W $S(IBZ'="":IBZ,1:IBUN)
"RTN","IBCSC8H",84,0)
 I $P(IB("U2"),U,14)'="" W !,?4,"Homebound          : ",$$EXPAND^IBTRE(399,236,$P(IB("U2"),U,14))
"RTN","IBCSC8H",85,0)
 I $P(IB("U2"),U,15)'="" W !,?4,"Date Last Seen     : ",$$EXPAND^IBTRE(399,237,$P(IB("U2"),U,15))
"RTN","IBCSC8H",86,0)
 I $P(IB("U2"),U,16)'="" W !,?4,"Spec Prog Indicator: " S IBZ=$$EXPAND^IBTRE(399,238,$P(IB("U2"),U,16)) W $S(IBZ'="":IBZ,$$WNRBILL^IBEFUNC(IBIFN):"31",1:"")
"RTN","IBCSC8H",87,0)
 S Z=6,IBW=1 X IBWW
"RTN","IBCSC8H",88,0)
 W " Print Main Facility Box 32: ",$S($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(IB(0),U,22),0)),U,7):"[DOES NOT APPLY]",$P(IB("UF2"),U,2):$$EXPAND^IBTRE(399,401,$P(IB("UF2"),U,2)),1:IBUN)
"RTN","IBCSC8H",89,0)
 S IBREQ=+$$REQMRA^IBEFUNC(IBIFN) S:IBREQ IBREQ=1
"RTN","IBCSC8H",90,0)
 S IBMRASEC=$$MRASEC^IBCEF4(IBIFN)
"RTN","IBCSC8H",91,0)
 W !,?4,$S('IBREQ:"Force To Print?    : ",1:"Force MRA Sec Prt? : ")
"RTN","IBCSC8H",92,0)
 S IBZ=$$EXTERNAL^DILFD(399,27+IBREQ,,+$P(IB("TX"),U,8+IBREQ))
"RTN","IBCSC8H",93,0)
 I IBMRASEC,'$P(IB("TX"),U,8),$P(IB("TX"),U,9) S IBZ="FORCED TO PRINT BY MRA PRIMARY",$P(IB("TX"),U,8)=0
"RTN","IBCSC8H",94,0)
 W $S(IBZ'=""&($P(IB("TX"),U,8+IBREQ)'=""):IBZ,'$$TXMT^IBCEF4(IBIFN):"[NOT APPLICABLE - NOT TRANSMITTABLE]",IBREQ:"NO FORCED PRINT",1:IBZ)
"RTN","IBCSC8H",95,0)
 S Z=7,IBW=1 X IBWW
"RTN","IBCSC8H",96,0)
 W " Provider ID Maint  : (Edit Provider ID information)",!
"RTN","IBCSC8H",97,0)
 G ^IBCSCP
"RTN","IBCSC8H",98,0)
Q Q
"RTN","IBCSC8H",99,0)
 ;
"RTN","IBCSC8H",100,0)
WRT1(IBCRED) ; Write credentials mismatch
"RTN","IBCSC8H",101,0)
 W !,*7,"  **Warning** Credentials differ from those found in NEW PERSON or IB NON VA",!,$J("",14),"BILLING PROVIDER file (",$S(IBCRED="":"none",1:IBCRED),")"
"RTN","IBCSC8H",102,0)
 W !,$J("",14),"Changes will print local, but only credentials on file transmit"
"RTN","IBCSC8H",103,0)
 Q
"RTN","IBCSC8H",104,0)
 ;
"RTN","IBCSC8H",105,0)
NSAME(DA) ; Returns 1 if div on bill is not the default billing facility
"RTN","IBCSC8H",106,0)
 Q ($P($G(^IBE(350.9,1,0)),U,2)'=$P($G(^DG(40.8,+$P(^DGCR(399,DA,0),U,22),0)),U,7))
"RTN","IBCSC8H",107,0)
 ;
"RTN","IBCSC8H",108,0)
 ;IBCSC8H
"RTN","IBCU")
0^51^B57362986^B37317111
"RTN","IBCU",1,0)
IBCU ;ALB/MRL - BILLING UTILITY ROUTINE ;01 JUN 88 12:00
"RTN","IBCU",2,0)
 ;;2.0;INTEGRATED BILLING;**52,106,51,191,232,323,320**;21-MAR-94
"RTN","IBCU",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU",4,0)
 ;
"RTN","IBCU",5,0)
 ;MAP TO DGCRU
"RTN","IBCU",6,0)
 ;
"RTN","IBCU",7,0)
ARSTAT ;find status of bill in file 430.3 (ar) return status number
"RTN","IBCU",8,0)
 S IBARST=$$STA^PRCAFN(IBIFN)
"RTN","IBCU",9,0)
 Q
"RTN","IBCU",10,0)
 ;
"RTN","IBCU",11,0)
ARCAT ;Trigger logic to set who's responsible in 399.3 from AR Category
"RTN","IBCU",12,0)
 S X=$P($$CATN^PRCAFN($P(^DGCR(399.3,DA,0),"^",6)),"^",3)
"RTN","IBCU",13,0)
 S:X'="" X=$S("PC"[X:"p",X="N":"o",X="T":"i",1:"")
"RTN","IBCU",14,0)
 Q
"RTN","IBCU",15,0)
 ;
"RTN","IBCU",16,0)
PTF ;Screen for appropriate PTF records
"RTN","IBCU",17,0)
 K IBDD1 S DFN=+$P(^DGCR(399,+DA,0),"^",2) Q:'$D(^DPT(+DFN,0))  S IB05=$P(^(0),"^",1),IB03=$P(^DGCR(399,+DA,0),"^",3)
"RTN","IBCU",18,0)
 S IB01="",IB02=0 F IB02=0:0 S IB01=$O(^DD(45,0,"ID",IB01)) Q:'IB01  S IB02=IB02+1,IBDD(IB02)=^(IB01)
"RTN","IBCU",19,0)
 F IB01=0:0 S IB01=$O(^DGPT("B",+DFN,IB01)) Q:'IB01  I $D(^DGPT(+IB01,0)) S IB04=$P(^(0),"^",2),Y=+IB01 I $P(IB03,".",1)=$P(IB04,".",1) S IBDD1(+Y)="" I $S('$D(X):0,X["?":1,1:0) D PTFW
"RTN","IBCU",20,0)
 G PTFQ:X'["?" I '$O(IBDD1(0)) W !,"Patient has no ACTIVE PTF RECORDS for this event date.",!,"A 'PTF NUMBER' is required for inpatient billing records."
"RTN","IBCU",21,0)
 E  W !!,"Select the appropriate billing record from the above listing by number."
"RTN","IBCU",22,0)
PTFQ W ! K IB01,IB02,IB03,IB04,IB05,IBDD Q
"RTN","IBCU",23,0)
PTFW W !,Y,?15,IB05 F IB02=0:0 S IB02=$O(IBDD(IB02)) Q:'IB02  X IBDD(IB02)
"RTN","IBCU",24,0)
 Q
"RTN","IBCU",25,0)
 ;
"RTN","IBCU",26,0)
AGE ;Input Transform for Condition Code 17
"RTN","IBCU",27,0)
 I X=18 G SEX
"RTN","IBCU",28,0)
 I X=17 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I VADM(4)<100 W !!,"This patient is only ",VADM(4)," years old!!",!! K IBC Q
"RTN","IBCU",29,0)
 I $D(IBC) S X=IBC
"RTN","IBCU",30,0)
 Q
"RTN","IBCU",31,0)
 ;
"RTN","IBCU",32,0)
SEX ;Input Transform for Condition Code 18
"RTN","IBCU",33,0)
 I X=18 S IBC=X,DFN=$P(^DGCR(399,D0,0),"^",2) D DEM^VADPT I $E(VADM(5))="M" W !!,"This patient is a MALE!! Condition code 18 applies only to FEMALES!!",!! K IBC,X
"RTN","IBCU",34,0)
 I $D(IBC) S X=IBC
"RTN","IBCU",35,0)
 Q
"RTN","IBCU",36,0)
 ;
"RTN","IBCU",37,0)
REV ;Input Transform for Revenue Code
"RTN","IBCU",38,0)
 I X=-1 W !!,"Choose only ACTIVE Revenue Codes!!",!! S D="AC" ;S X="" S X=$O(^DGCR(399.2,"AC",X)) Q:X=""  W !,$P(^DGCR(399.2,X,0),"^",1),?30,$P(^(0),"^",2) K X Q
"RTN","IBCU",39,0)
 I '$D(IBC) I $D(^DGCR(399.2,X,0)) I '$P(^DGCR(399.2,X,0),"^",3) W !!,"Only ACTIVE Revenue Codes may be selected!!",!! K X Q
"RTN","IBCU",40,0)
 Q
"RTN","IBCU",41,0)
 ;
"RTN","IBCU",42,0)
YN S X=$E(X),X=$S(X=1:X,X=0:X,X="Y":1,X="y":1,X="n":0,X="N":0,1:2) I X'=2 W "  (",$S(X:"YES",1:"NO"),")" Q
"RTN","IBCU",43,0)
 W !?4,"NOT A VALID CHOICE!",*7 K X Q
"RTN","IBCU",44,0)
 Q
"RTN","IBCU",45,0)
 ;
"RTN","IBCU",46,0)
NOPTF ; Input transform for file 399, field 159.5 (NON-VA ADMIT TIME)
"RTN","IBCU",47,0)
 N %DT
"RTN","IBCU",48,0)
 I X>24 K:X'=99 X Q
"RTN","IBCU",49,0)
 I $P($G(^DGCR(399,DA,0)),U,8) K X Q  ; PTF pointer exists 
"RTN","IBCU",50,0)
 S X=$TR(X,"M ") S:X=0 X="12A" S:X<12 X=$TR(X,"A")
"RTN","IBCU",51,0)
 S:X?1N.N&($L(X)<3) Y="."_$E("0",$L(X))_X S:X'?1.2N %DT="TPR",X=DT_"@"_X D:$L(X)>2 ^%DT S X=$E($P(Y,".",2)_"00",1,2)#24 K:Y=-1 X
"RTN","IBCU",52,0)
 Q
"RTN","IBCU",53,0)
 ;
"RTN","IBCU",54,0)
DIS ;Determine Billing Discharge status from PTF
"RTN","IBCU",55,0)
 ;Called from triggers on fields .08 and 161
"RTN","IBCU",56,0)
 N A
"RTN","IBCU",57,0)
 I '$D(^DGCR(399,DA,0)) S X="" G DISQ
"RTN","IBCU",58,0)
 S X=$P(^DGCR(399,DA,0),"^",6) I X=2!(X=3) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",59,0)
 S X=$P(^DGCR(399,DA,0),"^",8) I $S(X="":1,'$D(^DGPT(X)):1,1:0) S X="" G DISQ
"RTN","IBCU",60,0)
 I '+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",61,0)
 S A=$P($G(^DGCR(399,DA,"U")),"^",2) I A,(A+.24)<+$G(^DGPT(X,70)) S X=$O(^DGCR(399.1,"B","STILL PATIENT",0)) G DISQ
"RTN","IBCU",62,0)
 S X=+$P($G(^DGPT(X,70)),"^",3)
"RTN","IBCU",63,0)
 I X=1 S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO HOME OR SELF CARE",1,30),0)) G DISQ
"RTN","IBCU",64,0)
 I X=4 S X=$O(^DGCR(399.1,"B",$E("LEFT AGAINST MEDICAL ADVICE",1,30),0)) G DISQ
"RTN","IBCU",65,0)
 I X=6!(X=7) S X=$O(^DGCR(399.1,"B","EXPIRED",0)) G DISQ
"RTN","IBCU",66,0)
 I X=5!(X=2) S X=$O(^DGCR(399.1,"B",$E("DISCHARGED TO ANOTHER SHORT-TERM GENERAL HOSPITAL",1,30),0)) G DISQ
"RTN","IBCU",67,0)
 S X=""
"RTN","IBCU",68,0)
DISQ Q
"RTN","IBCU",69,0)
 ;
"RTN","IBCU",70,0)
INST ;Ask Institutution address info
"RTN","IBCU",71,0)
 S DIC("DR")="1.01;1.02;1.03;.02;1.04" I $D(^XUSEC("IB SUPERVISOR",DUZ)) S DLAYGO=4
"RTN","IBCU",72,0)
 Q
"RTN","IBCU",73,0)
 ;
"RTN","IBCU",74,0)
PTADD(DFN,MAXL) ; outputs patient address for the trigger on Patient Short Address (399,110)
"RTN","IBCU",75,0)
 N IBX,IBY,IBI,IBDPT S (IBX,IBDPT)="" I $G(MAXL)="PSA" S MAXL=47
"RTN","IBCU",76,0)
 I +$G(DFN) S IBDPT=$G(^DPT(DFN,.11)) F IBI=1:1:4 S IBY=$P(IBDPT,U,IBI) I IBY'="" S IBX=IBX_IBY_","
"RTN","IBCU",77,0)
 I +$P(IBDPT,U,5) S IBY=$P($G(^DIC(5,+$P(IBDPT,U,5),0)),U,2),IBX=IBX_IBY
"RTN","IBCU",78,0)
 I $P(IBDPT,U,12)'="" S IBX=IBX_" "_$P(IBDPT,U,12)
"RTN","IBCU",79,0)
 I +$G(MAXL),$L(IBX)>+MAXL S IBX=""
"RTN","IBCU",80,0)
 Q IBX
"RTN","IBCU",81,0)
 ;
"RTN","IBCU",82,0)
SM ;Flag for printing medicare statment on UB-82
"RTN","IBCU",83,0)
 ;DGSM=0 means figure out which statement, DGSM=1 means no statements
"RTN","IBCU",84,0)
 S DGSM=0 Q
"RTN","IBCU",85,0)
 ;IBCU
"RTN","IBCU",86,0)
 ;
"RTN","IBCU",87,0)
CHGTYP(IBIFN,ARR) ; sets up array of all charge types defined on a bill:  ARR(TYPE, COMPONENT)=""
"RTN","IBCU",88,0)
 N IBI,IBX,IBT K ARR
"RTN","IBCU",89,0)
 I +$O(^DGCR(399,+$G(IBIFN),"RC",0)) S IBI=0 F  S IBI=$O(^DGCR(399,+IBIFN,"RC",IBI))  Q:'IBI  D
"RTN","IBCU",90,0)
 . S IBX=$G(^DGCR(399,+IBIFN,"RC",IBI,0)),IBT=$P(IBX,U,10) I +IBT S ARR(IBT,+$P(IBX,U,12))=""
"RTN","IBCU",91,0)
 Q
"RTN","IBCU",92,0)
 ;
"RTN","IBCU",93,0)
CHGTYPE(IBIFN) ; returns list of charge types on a bill: TYPE ^ TYPE ^ ... ; EXTERNAL TYPE , EXTERNAL TYPE , ...
"RTN","IBCU",94,0)
 N IBAR,IBY,IBS,IBI,IBC,IBJ,IBX
"RTN","IBCU",95,0)
 D CHGTYP($G(IBIFN),.IBAR)
"RTN","IBCU",96,0)
 S (IBX,IBY,IBS)="",IBI=0 F  S IBI=$O(IBAR(IBI)) Q:'IBI  D
"RTN","IBCU",97,0)
 . S IBX=IBX_IBI_U
"RTN","IBCU",98,0)
 . S IBC="INPT" I IBI=1 S IBJ=$O(IBAR(IBI,0)),IBC=$S(IBJ=1:"INST",IBJ=2:"PF",1:"INPT") I +$O(IBAR(IBI,IBJ)) S IBC="INPT"
"RTN","IBCU",99,0)
 . S IBY=IBY_IBS_$S(IBI=1:IBC,IBI=2:"VST",IBI=3:"RX",IBI=4:"CPT",IBI=5:"PI",IBI=6:"DRG",IBI=9:"UN",1:""),IBS=","
"RTN","IBCU",100,0)
 S IBY=IBX_";"_IBY
"RTN","IBCU",101,0)
 Q IBY
"RTN","IBCU",102,0)
 ;
"RTN","IBCU",103,0)
BCHGTYPE(IBIFN) ; returns type of bill and charges: (CLASS (.05): TYPE, TYPE, ...)
"RTN","IBCU",104,0)
 N IBCLASS,IBTYPE,IBY S IBY=""
"RTN","IBCU",105,0)
 S IBCLASS=$P($G(^DGCR(399,+$G(IBIFN),0)),U,5)
"RTN","IBCU",106,0)
 S IBTYPE=$P($$CHGTYPE(+$G(IBIFN)),";",2) I IBTYPE="INPT" S IBTYPE=""
"RTN","IBCU",107,0)
 I +IBCLASS S IBY=$S(IBCLASS<3:"Inpt",1:"Opt") I IBTYPE'="" S IBY=IBY_" ("_IBTYPE_")"
"RTN","IBCU",108,0)
 Q IBY
"RTN","IBCU",109,0)
 ;
"RTN","IBCU",110,0)
CLNSCRN(IBDT,CLIFN) ; screen for a Procedures Associated Clinic  (399, 304, 6), returns true if clinic can be used
"RTN","IBCU",111,0)
 ; clinic must be defined as a 'Clinic' and it must be active on date of procedure
"RTN","IBCU",112,0)
 ;
"RTN","IBCU",113,0)
 N IBCL0,IBCLI,IBX S IBX=0
"RTN","IBCU",114,0)
 S IBCL0=$G(^SC(+$G(CLIFN),0)),IBCLI=$G(^SC(+$G(CLIFN),"I"))
"RTN","IBCU",115,0)
 S IBX=$S($P(IBCL0,U,3)'="C":0,'$G(IBDT):0,'IBCLI:1,+IBCLI>+IBDT:1,'$P(IBCLI,U,2):0,1:$P(IBCLI,U,2)'>IBDT)
"RTN","IBCU",116,0)
 Q IBX
"RTN","IBCU",117,0)
 ;
"RTN","IBCU",118,0)
PRVNUM(IBIFN,IBINS,COB) ; Trigger code (399:122,123,124)
"RTN","IBCU",119,0)
 ; on Primary Secondary/Tertiary Carrier (399:101,102,103)
"RTN","IBCU",120,0)
 ; returns the Provider Number for the Insurance Company
"RTN","IBCU",121,0)
 ;         Hospital Provider Number for prov id in file 355.92
"RTN","IBCU",122,0)
 ;         or Medicare A provider Number (psych/non-psych) if Medicare A
"RTN","IBCU",123,0)
 ;
"RTN","IBCU",124,0)
 ; Input   IBIFN - bill ifn
"RTN","IBCU",125,0)
 ;         IBINS - insurance company ifn (opt)
"RTN","IBCU",126,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary
"RTN","IBCU",127,0)
 ;
"RTN","IBCU",128,0)
 N IBX,IBB0,IBBF,IBFT,Z,Z0
"RTN","IBCU",129,0)
 S:'$G(COB) COB=1
"RTN","IBCU",130,0)
 S IBX=$P($G(^DGCR(399,+$G(IBIFN),"M1")),U,COB+1),IBB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU",131,0)
 I $G(IBINS)="" S IBINS=+$G(^DGCR(399,+$G(IBIFN),"I"_COB))
"RTN","IBCU",132,0)
 G:'IBINS PRVNQ
"RTN","IBCU",133,0)
 ;
"RTN","IBCU",134,0)
 ; OEC - 12/21/05 - If an MRA is being processed into an MRA secondary
"RTN","IBCU",135,0)
 ; claim and the billing provider # already exists, then leave it
"RTN","IBCU",136,0)
 I $G(IBPRCOB),IBX'="" G PRVNQ
"RTN","IBCU",137,0)
 ;
"RTN","IBCU",138,0)
 I +$G(IBIFN),COB N DA S DA=IBIFN I $$MCRACK^IBCBB3(+IBIFN,$P($G(^DGCR(399,+IBIFN,"TX")),U,5),+COB) S IBX=$$MCRANUM^IBCBB3(+IBIFN) G PRVNQ
"RTN","IBCU",139,0)
 ;
"RTN","IBCU",140,0)
 ; WCJ - 1/17/06 - Some Insurances require certain electronic plan types to have no secondary ID
"RTN","IBCU",141,0)
 ; Check if this plan type requires a blank sec id to go out for this insurance
"RTN","IBCU",142,0)
 N NOSEC S NOSEC=0
"RTN","IBCU",143,0)
 I $D(^DIC(36,IBINS,13)),$G(IBIFN) D
"RTN","IBCU",144,0)
 . N PLAN,PLANTYPE
"RTN","IBCU",145,0)
 . S PLAN=$P($G(^DGCR(399,IBIFN,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCU",146,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:'PLANTYPE
"RTN","IBCU",147,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCU",148,0)
 . S NOSEC=1,IBX=""
"RTN","IBCU",149,0)
 I NOSEC G PRVNQ
"RTN","IBCU",150,0)
 ;
"RTN","IBCU",151,0)
 ; If using attending/rendering secondary ID, don't do anything
"RTN","IBCU",152,0)
 I $$FT^IBCEF(IBIFN)=2,$$GET1^DIQ(36,IBINS,4.06,"I") G PRVNQ
"RTN","IBCU",153,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(36,IBINS,4.08,"I") G PRVNQ
"RTN","IBCU",154,0)
 ;
"RTN","IBCU",155,0)
 S IBX=$$FACNUM^IBCEP2B(IBIFN,COB)
"RTN","IBCU",156,0)
 ;
"RTN","IBCU",157,0)
 I IBX="" S IBX=$$GET1^DIQ(350.9,1,1.05)
"RTN","IBCU",158,0)
 ;
"RTN","IBCU",159,0)
PRVNQ Q IBX
"RTN","IBCU",160,0)
 ;
"RTN","IBCU",161,0)
BF() ; Returns ien of billing fac primary id type
"RTN","IBCU",162,0)
 N Z,IBX
"RTN","IBCU",163,0)
 S IBX="",Z=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,9) S IBX=Z Q
"RTN","IBCU",164,0)
 Q IBX
"RTN","IBCU",165,0)
 ;
"RTN","IBCU",166,0)
BILLPNS(IBIFN) ; Trigger Code that sets all Bill P/S/T Prov# and QUAL (399: .122,123,124,128,129,130)
"RTN","IBCU",167,0)
 ; on Bill Form Type (399:.19)
"RTN","IBCU",168,0)
 N IBDR
"RTN","IBCU",169,0)
 ;
"RTN","IBCU",170,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I1")) S IBDR(399,IBIFN_",",122)=$$PRVNUM(IBIFN,"",1),IBDR(399,IBIFN_",",128)=$$PRVQUAL(IBIFN,"",1)
"RTN","IBCU",171,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I2")) S IBDR(399,IBIFN_",",123)=$$PRVNUM(IBIFN,"",2),IBDR(399,IBIFN_",",129)=$$PRVQUAL(IBIFN,"",2)
"RTN","IBCU",172,0)
 I +$G(^DGCR(399,+$G(IBIFN),"I3")) S IBDR(399,IBIFN_",",124)=$$PRVNUM(IBIFN,"",3),IBDR(399,IBIFN_",",130)=$$PRVQUAL(IBIFN,"",3)
"RTN","IBCU",173,0)
 ;
"RTN","IBCU",174,0)
 I $O(IBDR(0)) D FILE^DIE("","IBDR")
"RTN","IBCU",175,0)
 Q
"RTN","IBCU",176,0)
 ;
"RTN","IBCU",177,0)
PRVQUAL(IBIFN,IBINS,COB) ; Trigger code for Bill P/S/T Prov QUAL (399:128,129,130)
"RTN","IBCU",178,0)
 ; on P/S/T Carrier (399: 101,102,103)
"RTN","IBCU",179,0)
 ; returns the Provider ID QUALIFIER
"RTN","IBCU",180,0)
 ;
"RTN","IBCU",181,0)
 ; Input   IBIFN - bill ifn
"RTN","IBCU",182,0)
 ;         IBINS - insurance company ifn (opt)
"RTN","IBCU",183,0)
 ;         COB   - 1 for primary, 2 for secondary, 3 for tertiary
"RTN","IBCU",184,0)
 ;
"RTN","IBCU",185,0)
 N IBX,IBB0,IBBF,IBFT,Z,Z0
"RTN","IBCU",186,0)
 S:'$G(COB) COB=1
"RTN","IBCU",187,0)
 S IBX=$P($G(^DGCR(399,+$G(IBIFN),"M1")),U,COB+9),IBB0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU",188,0)
 I $G(IBINS)="" S IBINS=+$G(^DGCR(399,+$G(IBIFN),"I"_COB))
"RTN","IBCU",189,0)
 G:'IBINS PRVQUALQ
"RTN","IBCU",190,0)
 ;
"RTN","IBCU",191,0)
 ; If an MRA is being processed into an MRA secondary claim and the
"RTN","IBCU",192,0)
 ; billing provider qualifier already exists, then leave it alone
"RTN","IBCU",193,0)
 I $G(IBPRCOB),IBX'="" G PRVQUALQ
"RTN","IBCU",194,0)
 ;
"RTN","IBCU",195,0)
 I +$G(IBIFN),COB N DA S DA=IBIFN I $$MCRACK^IBCBB3(+IBIFN,$P($G(^DGCR(399,+IBIFN,"TX")),U,5),+COB) S IBX=$$FIND1^DIC(355.97,,"MX","MEDICARE PART A") G PRVQUALQ
"RTN","IBCU",196,0)
 ;
"RTN","IBCU",197,0)
 ; Some Insurances require certain electronic plan types to have no secondary ID
"RTN","IBCU",198,0)
 ; If this is the case, there is no qualifier
"RTN","IBCU",199,0)
 N NOSEC S NOSEC=0
"RTN","IBCU",200,0)
 I $D(^DIC(36,IBINS,13)),$G(IBIFN) D
"RTN","IBCU",201,0)
 . N PLAN,PLANTYPE
"RTN","IBCU",202,0)
 . S PLAN=$P($G(^DGCR(399,IBIFN,"I"_COB)),U,18) Q:'PLAN
"RTN","IBCU",203,0)
 . S PLANTYPE=$P($G(^IBA(355.3,PLAN,0)),U,15) Q:'PLANTYPE
"RTN","IBCU",204,0)
 . Q:'$D(^DIC(36,IBINS,13,"B",PLANTYPE))
"RTN","IBCU",205,0)
 . S NOSEC=1,IBX=""
"RTN","IBCU",206,0)
 I NOSEC G PRVQUALQ
"RTN","IBCU",207,0)
 ;
"RTN","IBCU",208,0)
 ; Leave qualifer blank if sending REND/ATT ID
"RTN","IBCU",209,0)
 I $$FT^IBCEF(IBIFN)=2,$$GET1^DIQ(36,IBINS,4.06,"I") G PRVQUALQ
"RTN","IBCU",210,0)
 I $$FT^IBCEF(IBIFN)=3,$$GET1^DIQ(36,IBINS,4.08,"I") G PRVQUALQ
"RTN","IBCU",211,0)
 ;
"RTN","IBCU",212,0)
 S IBX=$$FACNUM^IBCEP2B(IBIFN,COB,1)
"RTN","IBCU",213,0)
 ;
"RTN","IBCU",214,0)
 I IBX="",$$GET1^DIQ(350.9,1,1.05)=$P($G(^DGCR(399,IBIFN,"M1")),U,COB+1) S IBX=$$FIND1^DIC(355.97,,"MX","1J")
"RTN","IBCU",215,0)
 ;
"RTN","IBCU",216,0)
PRVQUALQ Q IBX
"RTN","IBCU1")
0^80^B42846592^B25353879
"RTN","IBCU1",1,0)
IBCU1 ;ALB/MRL - BILLING UTILITY ROUTINE (CONTINUED) ;01 JUN 88 12:00
"RTN","IBCU1",2,0)
 ;;2.0;INTEGRATED BILLING;**27,52,106,138,51,182,210,266,309,320**;21-MAR-94
"RTN","IBCU1",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU1",4,0)
 ;
"RTN","IBCU1",5,0)
 ;MAP TO DGCRU1
"RTN","IBCU1",6,0)
 ;
"RTN","IBCU1",7,0)
 ;procedure doesn't appear to be used (6/4/93), if it is used, what for??
"RTN","IBCU1",8,0)
 ;where would multiple provider numbers comde from?  ARH
"RTN","IBCU1",9,0)
 ;BCH    ;Blue Cross/Shield Help
"RTN","IBCU1",10,0)
 W ! S IB01=$P($G(^IBE(350.9,1,1)),"^",6)
"RTN","IBCU1",11,0)
 I IB01]"" W "CHOOSE FROM",!!?4,"1 - ",$P(IB01,"^",6) F IB00=2,3 I $P(IB01,"^",$S(IB00=2:14,1:15))]"" W !?4,IB00," - ",$P(IB01,"^",$S(IB00=2:14,1:15))
"RTN","IBCU1",12,0)
 W:IB01']"" "NO BLUE CROSS/SHIELD PROVIDER NUMBERS IDENTIFIED TO SELECT FROM!" W ! W:IB01]"" !,"OR " W "ENTER BLUE CROSS/SHIELD PROVIDER # (BETWEEN 3-13 CHARACTERS)",! K IB00,IB01 Q
"RTN","IBCU1",13,0)
 ;
"RTN","IBCU1",14,0)
RCD ;Revenue Code Display
"RTN","IBCU1",15,0)
 Q:'$D(^DGCR(399,IBIFN,"RC"))
"RTN","IBCU1",16,0)
 W @IOF,!,"Revenue Code Listing",?34,"Units",?45,"Charge" W:$$FT^IBCEF(IBIFN)=3 ?56,"Non-Cov"
"RTN","IBCU1",17,0)
 S DGIFN=0 F IBI=0:0 S DGIFN=$O(^DGCR(399,IBIFN,"RC",DGIFN)) Q:'DGIFN  I $D(^DGCR(399,IBIFN,"RC",DGIFN,0)) S Z=^(0) D DISRC
"RTN","IBCU1",18,0)
 W !
"RTN","IBCU1",19,0)
 I $D(DIC(0)) S DIC(0)=DIC(0)_"N"
"RTN","IBCU1",20,0)
 Q
"RTN","IBCU1",21,0)
DISRC N Z0 W !?1,DGIFN,?4,$P(^DGCR(399.2,+Z,0),"^"),"-",$E($P(^DGCR(399.2,+Z,0),"^",2),1,19)
"RTN","IBCU1",22,0)
 I +$P(Z,U,6) W ?28,$P($$CPT^ICPTCOD(+$P(Z,U,6)),U,2)
"RTN","IBCU1",23,0)
 W ?36,$P(Z,"^",3),?40 S X=$P(Z,"^",2),X2="2$" D COMMA^%DTC W X
"RTN","IBCU1",24,0)
 I $$FT^IBCEF(IBIFN)=3,$P(Z,U,9)'="" S X=$P(Z,U,9),X2="2$" D COMMA^%DTC W ?51,X
"RTN","IBCU1",25,0)
 I $D(^DGCR(399.1,+$P(Z,"^",5),0)) W ?64,$E($P(^(0),"^"),1,15)
"RTN","IBCU1",26,0)
 I $S($P(Z,U,15):1,1:$P(Z,U,10)=3) D
"RTN","IBCU1",27,0)
 . W !,?5,"(Rx: ",$S($P(Z,U,11):$P($G(^IBA(362.4,$P(Z,U,11),0)),U),1:"Link Missing"),"  Procedure "_$S($P(Z,U,15):"#"_$P(Z,U,15)_" "_$$CPTNM^IBCRBH1(IBIFN,4,$P(Z,U,15)),1:"Link Missing"),")"
"RTN","IBCU1",28,0)
 Q
"RTN","IBCU1",29,0)
 ;
"RTN","IBCU1",30,0)
RVCPRC(IBIFN,IBD0) ; returns 1 if CHAMPVA rate type + 2 if HCFA 1500, 0 otherwise
"RTN","IBCU1",31,0)
 ; IBD0 - zero node of bill if available, not required
"RTN","IBCU1",32,0)
 N X S X=0
"RTN","IBCU1",33,0)
 I $G(IBD0)="" S IBD0=$G(^DGCR(399,+$G(IBIFN),0))
"RTN","IBCU1",34,0)
 I $P($G(^DGCR(399.3,+$P(IBD0,U,7),0)),U,1)="CHAMPVA" S X=X+1
"RTN","IBCU1",35,0)
 I $P(IBD0,U,19)=2 S X=X+2
"RTN","IBCU1",36,0)
 Q X
"RTN","IBCU1",37,0)
 ;
"RTN","IBCU1",38,0)
ORDNXT(IFN) ;CALLED BY TRIGGER ON (362.3,.02) THAT SETS DX PRINT ORDER (362.3,.03),
"RTN","IBCU1",39,0)
 ;returns the highest print order used on the bill plus 3, returns 3 if no existing print order
"RTN","IBCU1",40,0)
 ;used for the default print order so that dx's can be printed in order of entry without any input by the user,
"RTN","IBCU1",41,0)
 ;3 is added to allow spaces for additions, changes, moves
"RTN","IBCU1",42,0)
 N X,Y S X="" I $D(^DGCR(399,+$G(IFN),0)) S X=3,Y=0 F  S Y=$O(^IBA(362.3,"AO",+IFN,Y)) Q:'Y  S X=Y+3
"RTN","IBCU1",43,0)
 Q X
"RTN","IBCU1",44,0)
 ;
"RTN","IBCU1",45,0)
ORDDUP(ORD,DIFN) ;returns true if print order ORD is already defined for a bill (not same entry)
"RTN","IBCU1",46,0)
 N IBX,IBY S IBY=0
"RTN","IBCU1",47,0)
 I +$G(ORD) S IBX=$G(^IBA(362.3,+$G(DIFN),0)) I +IBX,+$P(IBX,U,3)'=ORD,$D(^IBA(362.3,"AO",+$P(IBX,U,2),+ORD)) S IBY=1
"RTN","IBCU1",48,0)
 Q IBY
"RTN","IBCU1",49,0)
 ;
"RTN","IBCU1",50,0)
DXDUP(DX,DIFN,IFN) ;returns true if DX is already defined for a bill (not same entry)
"RTN","IBCU1",51,0)
 ;either DIFN or IFN can be passed, both are not needed, DIFN is needed during edit so can reenter the same dx
"RTN","IBCU1",52,0)
 N IBX,IBY S IBY=0 I +$G(DX),'$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",53,0)
 I +$G(DX),$D(^IBA(362.3,"AIFN"_+IFN,+DX)),$O(^IBA(362.3,"AIFN"_+IFN,+DX,0))'=+$G(DIFN) S IBY=1
"RTN","IBCU1",54,0)
 Q IBY
"RTN","IBCU1",55,0)
 ;
"RTN","IBCU1",56,0)
DXBSTAT(DIFN,IFN) ;returns a diagnosis' bill status (either DIFN or IFN can be passed, both are not needed)
"RTN","IBCU1",57,0)
 N IBX,IBY I '$G(IFN) S IBX=$G(^IBA(362.3,+$G(DIFN),0)),IFN=+$P(IBX,U,2)
"RTN","IBCU1",58,0)
 S IBY=+$P($G(^DGCR(399,+IFN,0)),U,13)
"RTN","IBCU1",59,0)
 Q IBY
"RTN","IBCU1",60,0)
 ;
"RTN","IBCU1",61,0)
RXSTAT(DRUG,PIFN,FILLDT) ; returns status/definition of rx
"RTN","IBCU1",62,0)
 ; returns: ORIGINAL ^ RELEASED/RETURNED TO STOCK ^ DRUG DEA
"RTN","IBCU1",63,0)
 N IBX,IBY,IBZ,IBLN S IBLN="",DRUG=+$G(DRUG),PIFN=+$G(PIFN),FILLDT=+$G(FILLDT)
"RTN","IBCU1",64,0)
 ;
"RTN","IBCU1",65,0)
 S IBX=$G(^PSRX(PIFN,2)),IBZ="" I IBX'="",$P(IBX,U,2)=$G(FILLDT) D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",66,0)
 . S IBLN="ORG"
"RTN","IBCU1",67,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",68,0)
 . I '$P(IBX,U,13) S IBZ="NR"
"RTN","IBCU1",69,0)
 . I +$P(IBX,U,15) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",70,0)
 ;
"RTN","IBCU1",71,0)
 I IBLN="" S IBX=$O(^PSRX(PIFN,1,"B",FILLDT,0)),IBX=$G(^PSRX(PIFN,1,+IBX,0)),IBZ="" I IBX'="" D  I IBZ'="" S $P(IBLN,U,2)=IBZ
"RTN","IBCU1",72,0)
 . ;I +$G(^PS(59.7,1,49.99))<6 Q
"RTN","IBCU1",73,0)
 . I '$P(IBX,U,18) S IBZ="NR"
"RTN","IBCU1",74,0)
 . I +$P(IBX,U,16) S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"RTS"
"RTN","IBCU1",75,0)
 ;
"RTN","IBCU1",76,0)
 D ZERO^IBRXUTL(DRUG)
"RTN","IBCU1",77,0)
 S IBX=$G(^TMP($J,"IBDRUG",0)) I IBX'="" S IBY=$G(^TMP($J,"IBDRUG",DRUG,3)),IBZ="" D  I IBZ'="" S $P(IBLN,U,3)=IBZ
"RTN","IBCU1",78,0)
 . I IBY["9" S IBZ="OTC"
"RTN","IBCU1",79,0)
 . I IBY["I" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"INV"
"RTN","IBCU1",80,0)
 . I IBY["S" S:IBZ'="" IBZ=IBZ_"-" S IBZ=IBZ_"SUP"
"RTN","IBCU1",81,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCU1",82,0)
 Q IBLN
"RTN","IBCU1",83,0)
 ;
"RTN","IBCU1",84,0)
PRVLIC(NPIFN,IBDT,ARR,STIFN) ; returns the Provider License data from the New Person file active on a date
"RTN","IBCU1",85,0)
 ; Input:   NPIFN = pointer to file 200,              IBDT = date to check (if none passed then all returned)
"RTN","IBCU1",86,0)
 ;          ARR = array pass by reference (optional), STIFN = state to return as value of function (optional)
"RTN","IBCU1",87,0)
 ; Output:  ARR(X) = license state (ifn) ^ license ^ expiration date (200,541)
"RTN","IBCU1",88,0)
 ;          return value = license data of state requested or if no state passed in then count found
"RTN","IBCU1",89,0)
 N IBX,IBY,IBLN,IBCNT S IBX=0,IBCNT=0 K ARR
"RTN","IBCU1",90,0)
 I +$G(NPIFN) S IBY=0 F  S IBY=$O(^VA(200,NPIFN,"PS1",IBY)) Q:'IBY  D
"RTN","IBCU1",91,0)
 . S IBLN=$G(^VA(200,NPIFN,"PS1",IBY,0))
"RTN","IBCU1",92,0)
 . I +$G(IBDT),+$P(IBLN,U,3),$P(IBLN,U,3)<IBDT Q
"RTN","IBCU1",93,0)
 . I +$G(STIFN),+STIFN=+IBLN S IBX=IBLN
"RTN","IBCU1",94,0)
 . S IBCNT=IBCNT+1,ARR(IBCNT)=IBLN
"RTN","IBCU1",95,0)
 S ARR=IBCNT I '$G(STIFN) S IBX=IBCNT
"RTN","IBCU1",96,0)
 Q IBX
"RTN","IBCU1",97,0)
 ;
"RTN","IBCU1",98,0)
DELPR(IB,IBX) ; Deletes the corresponding RX proc when the RX pointer is
"RTN","IBCU1",99,0)
 ; deleted
"RTN","IBCU1",100,0)
 ; IB = the ien of the bill in file 399
"RTN","IBCU1",101,0)
 ; IBX = the ien of the entry in the procedure multiple to be deleted
"RTN","IBCU1",102,0)
 ;
"RTN","IBCU1",103,0)
 N DA,DIK,X,Y
"RTN","IBCU1",104,0)
 S DA(1)=IB,DA=IBX
"RTN","IBCU1",105,0)
 I $D(^DGCR(399,DA(1),"CP",DA,0)) S DIK="^DGCR(399,"_DA(1)_",""CP""," D ^DIK
"RTN","IBCU1",106,0)
 Q
"RTN","IBCU1",107,0)
 ;
"RTN","IBCU1",108,0)
MODHLP(DA) ; Executable modifier help 399.042  .14
"RTN","IBCU1",109,0)
 ; DA = iens of the current entry DA(1) = file 399 ien
"RTN","IBCU1",110,0)
 ;                                DA    = file 399.042 ien
"RTN","IBCU1",111,0)
 N Z,IBZ,DIC,IBDATE
"RTN","IBCU1",112,0)
 S IBDATE=$$BDATE^IBACSV(+$G(DA(1))) ; The date of service
"RTN","IBCU1",113,0)
 I $P($G(^DGCR(399,+$G(DA(1)),"RC",+$G(DA),0)),U,14)'="" S Z=$P(^(0),U,14) D
"RTN","IBCU1",114,0)
 . N Q
"RTN","IBCU1",115,0)
 . S Q=1
"RTN","IBCU1",116,0)
 . S IBZ(1)="Current modifier"_$S($P(Z,";",2)'="":"s are:",1:"is:")
"RTN","IBCU1",117,0)
 . I $P(Z,";")'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";")_"  "_$P($$MOD^ICPTMOD($P(Z,";"),"E",IBDATE),U,3)
"RTN","IBCU1",118,0)
 . I $P(Z,";",2)'="" S Q=Q+1,IBZ(Q)="  "_$P(Z,";",2)_"  "_$P($$MOD^ICPTMOD($P(Z,";",2),"E",IBDATE),U,3)
"RTN","IBCU1",119,0)
 . S Q=Q+1,IBZ(Q)=" "
"RTN","IBCU1",120,0)
 . D EN^DDIOL(.IBZ)
"RTN","IBCU1",121,0)
 ;
"RTN","IBCU1",122,0)
 S DIC="^DIC(81.3,",DIC(0)="E"
"RTN","IBCU1",123,0)
 S DIC("S")="I $$MODP^ICPTMOD($P($G(^DGCR(399,DA(1),""RC"",DA,0)),U,6),Y,""I"",IBDATE)>0"
"RTN","IBCU1",124,0)
 S DIC("W")="W ?14,$P($$MOD^ICPTMOD(Y,""I"",IBDATE),U,3)"
"RTN","IBCU1",125,0)
 D ^DIC
"RTN","IBCU1",126,0)
 Q
"RTN","IBCU1",127,0)
 ;
"RTN","IBCU1",128,0)
QMED(IBRTN,IBIFN) ; DSS QuadraMed Interface: DSS/QuadraMed Available
"RTN","IBCU1",129,0)
 ; return 1 if QuadraMed Interface is On and available for the type of bill
"RTN","IBCU1",130,0)
 ; - routine must exist on the system (interface is 'On')
"RTN","IBCU1",131,0)
 ; Input: IBRTN = tag^routine, if it exists then Interface is 'On'
"RTN","IBCU1",132,0)
 ;        IBIFN = Bill IFN, bill to check if appropriate for sending to QuadraMed
"RTN","IBCU1",133,0)
 ;
"RTN","IBCU1",134,0)
 N IBON S IBON=0
"RTN","IBCU1",135,0)
 I +$G(IBIFN),$G(IBRTN)'="",$T(@IBRTN)'="" S IBON=1
"RTN","IBCU1",136,0)
 Q IBON
"RTN","IBCU1",137,0)
 ;
"RTN","IBCU1",138,0)
ATTREND(IBIFN,IBIFN1,FIELD) ; This function is called from Mumps Cross References in the claim file 399 and 
"RTN","IBCU1",139,0)
 ; also the PROVIDER subfile 399.0222.
"RTN","IBCU1",140,0)
 ;
"RTN","IBCU1",141,0)
 ; IBIFN = IEN to claim file
"RTN","IBCU1",142,0)
 ; IBIFN1 = IEN to provider sub-file in claim file
"RTN","IBCU1",143,0)
 ; FIELD = Field in sub-file being modified (the triggering event).  If field has no value, all 6 fields are
"RTN","IBCU1",144,0)
 ; possibly updated
"RTN","IBCU1",145,0)
 ;  
"RTN","IBCU1",146,0)
 ; The following fields are the "triggering" events
"RTN","IBCU1",147,0)
 ; File 399
"RTN","IBCU1",148,0)
 ; #19 FORM TYPE - This triggers all 6 fields (122, 123, 124, 128, 129, 130).
"RTN","IBCU1",149,0)
 ; 
"RTN","IBCU1",150,0)
 ; Sub-File 399.0222
"RTN","IBCU1",151,0)
 ; #.05 PRIMARY INS CO ID NUMBER triggers 122
"RTN","IBCU1",152,0)
 ; #.06 SECONDARY INS CO ID NUMBER triggers 123
"RTN","IBCU1",153,0)
 ; #.07 TERTIARY INS CO ID NUMBER triggers 124
"RTN","IBCU1",154,0)
 ; #.12 PRIM INS PROVIDER ID TYPE triggers 128
"RTN","IBCU1",155,0)
 ; #.13 SEC INS PROVIDER ID TYPE triggers 129
"RTN","IBCU1",156,0)
 ; #.14 TERT INS PROVIDER ID TYPE triggers 130
"RTN","IBCU1",157,0)
 ; 
"RTN","IBCU1",158,0)
 ; The following fields are the ones being "triggered"
"RTN","IBCU1",159,0)
 ; #122 PRIMARY PROVIDER #
"RTN","IBCU1",160,0)
 ; #123 SECONDARY PROVIDER #
"RTN","IBCU1",161,0)
 ; #124 TERTIARY PROVIDER #
"RTN","IBCU1",162,0)
 ; #128 PRIMARY ID QUALIFER
"RTN","IBCU1",163,0)
 ; #129 SECONDARY ID QUALIFIER
"RTN","IBCU1",164,0)
 ; #130 TERTIARY ID QUALIFIER
"RTN","IBCU1",165,0)
 ;
"RTN","IBCU1",166,0)
 Q:$G(IBPRCOB)  ; this is set when creating an MRA scondary claim.  Don't want to be changing the data on
"RTN","IBCU1",167,0)
 ; a secondary claim
"RTN","IBCU1",168,0)
 ;
"RTN","IBCU1",169,0)
 N FT,DATA,I,PC,INS,IFUNC,ATTRENDD,IBDR
"RTN","IBCU1",170,0)
 S FT=$$FT^IBCEF(IBIFN)
"RTN","IBCU1",171,0)
 Q:'FT
"RTN","IBCU1",172,0)
 ;
"RTN","IBCU1",173,0)
 S IFUNC=$O(^DGCR(399,IBIFN,"PRV","B",$S(FT=3:4,1:3),""))
"RTN","IBCU1",174,0)
 I $G(IBIFN1),$G(IFUNC)'=IBIFN1 Q   ; if called from subfile, quits if att/rend provider was not the one being modified
"RTN","IBCU1",175,0)
 S ATTRENDD=$S('$G(IFUNC):"",1:$G(^DGCR(399,IBIFN,"PRV",IFUNC,0)))
"RTN","IBCU1",176,0)
 ;
"RTN","IBCU1",177,0)
 S PC=$S(FT=2:6,FT=3:8,1:"")  ; get the correct piece from the ins co dictionary
"RTN","IBCU1",178,0)
 Q:'+PC
"RTN","IBCU1",179,0)
 ;
"RTN","IBCU1",180,0)
 F I="I1","I2","I3" D
"RTN","IBCU1",181,0)
 . S INS=$P($G(^DGCR(399,IBIFN,I)),U)
"RTN","IBCU1",182,0)
 . Q:'+INS
"RTN","IBCU1",183,0)
 . Q:'$P($G(^DIC(36,INS,4)),U,PC)
"RTN","IBCU1",184,0)
 . D:I="I1"
"RTN","IBCU1",185,0)
 .. S:".05"[FIELD IBDR(399,IBIFN_",",122)=$S($P(ATTRENDD,U,5)]"":$P(ATTRENDD,U,5),1:"@")
"RTN","IBCU1",186,0)
 .. S:".12"[FIELD IBDR(399,IBIFN_",",128)=$S($P(ATTRENDD,U,12)]"":$P(ATTRENDD,U,12),1:"@")
"RTN","IBCU1",187,0)
 . D:I="I2"
"RTN","IBCU1",188,0)
 .. S:".06"[FIELD IBDR(399,IBIFN_",",123)=$S($P(ATTRENDD,U,6)]"":$P(ATTRENDD,U,6),1:"@")
"RTN","IBCU1",189,0)
 .. S:".13"[FIELD IBDR(399,IBIFN_",",129)=$S($P(ATTRENDD,U,13)]"":$P(ATTRENDD,U,13),1:"@")
"RTN","IBCU1",190,0)
 . D:I="I3"
"RTN","IBCU1",191,0)
 .. S:".07"[FIELD IBDR(399,IBIFN_",",124)=$S($P(ATTRENDD,U,7)]"":$P(ATTRENDD,U,7),1:"@")
"RTN","IBCU1",192,0)
 .. S:".14"[FIELD IBDR(399,IBIFN_",",130)=$S($P(ATTRENDD,U,14)]"":$P(ATTRENDD,U,14),1:"@")
"RTN","IBCU1",193,0)
 ;
"RTN","IBCU1",194,0)
 I $O(IBDR(0)) D FILE^DIE("","IBDR")
"RTN","IBCU1",195,0)
 Q
"RTN","IBJPS")
0^49^B5289854^B5742162
"RTN","IBJPS",1,0)
IBJPS ;ALB/MAF,ARH - IBSP IB SITE PARAMETER SCREEN ;22-DEC-1995
"RTN","IBJPS",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,70,115,143,51,137,161,155,320**;21-MAR-94
"RTN","IBJPS",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS",4,0)
 ;
"RTN","IBJPS",5,0)
EN ; -- main entry point for IBJP IB SITE PARAMETERS, display IB site parameters
"RTN","IBJPS",6,0)
 D EN^VALM("IBJP IB SITE PARAMETERS")
"RTN","IBJPS",7,0)
 Q
"RTN","IBJPS",8,0)
 ;
"RTN","IBJPS",9,0)
HDR ; -- header code
"RTN","IBJPS",10,0)
 S VALMHDR(1)="Only authorized persons may edit this data."
"RTN","IBJPS",11,0)
 Q
"RTN","IBJPS",12,0)
 ;
"RTN","IBJPS",13,0)
INIT ; -- init variables and list array
"RTN","IBJPS",14,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",15,0)
 D BLD^IBJPS1
"RTN","IBJPS",16,0)
 Q
"RTN","IBJPS",17,0)
 ;
"RTN","IBJPS",18,0)
HELP ; -- help code
"RTN","IBJPS",19,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","IBJPS",20,0)
 Q
"RTN","IBJPS",21,0)
 ;
"RTN","IBJPS",22,0)
EXIT ; -- exit code
"RTN","IBJPS",23,0)
 K ^TMP("IBJPS",$J),^TMP("IBJPSAX",$J)
"RTN","IBJPS",24,0)
 D CLEAR^VALM1
"RTN","IBJPS",25,0)
 Q
"RTN","IBJPS",26,0)
 ;
"RTN","IBJPS",27,0)
NXEDIT ; -- IBJP IB SITE PARAMETER EDIT ACTION (EP): Select data set to edit, do edit
"RTN","IBJPS",28,0)
 N VALMY,IBSELN,IBSET
"RTN","IBJPS",29,0)
 D EN^VALM2($G(XQORNOD(0)))
"RTN","IBJPS",30,0)
 I $D(VALMY) S IBSELN=0 F  S IBSELN=$O(VALMY(IBSELN)) Q:'IBSELN  D
"RTN","IBJPS",31,0)
 . S IBSET=$P($G(^TMP("IBJPSAX",$J,IBSELN)),U,1) Q:'IBSET
"RTN","IBJPS",32,0)
 . D EDIT(IBSET)
"RTN","IBJPS",33,0)
 S VALMBCK="R"
"RTN","IBJPS",34,0)
 Q
"RTN","IBJPS",35,0)
 ;
"RTN","IBJPS",36,0)
EDIT(IBSET) ; edit IB Site Parameters
"RTN","IBJPS",37,0)
 D FULL^VALM1
"RTN","IBJPS",38,0)
 I IBSET'="" S DR=$P($T(@IBSET),";;",2,999)
"RTN","IBJPS",39,0)
 I DR'="" S DIE="^IBE(350.9,",DA=1 D ^DIE K DA,DR,DIE,DIC,X,Y
"RTN","IBJPS",40,0)
 D INIT^IBJPS S VALMBCK="R"
"RTN","IBJPS",41,0)
 Q
"RTN","IBJPS",42,0)
 ;
"RTN","IBJPS",43,0)
1 ;;.09;.13;.14
"RTN","IBJPS",44,0)
2 ;;1.2;.15;.11;.12;7.04
"RTN","IBJPS",45,0)
3 ;;1.09;1.07;2.07
"RTN","IBJPS",46,0)
4 ;;4.04;6.25;6.24
"RTN","IBJPS",47,0)
5 ;;.02;1.14;1.25;1.08
"RTN","IBJPS",48,0)
6 ;;1.23;1.16;1.22;1.19;1.15;1.17
"RTN","IBJPS",49,0)
7 ;;1.26;1.1;1.31;1.27
"RTN","IBJPS",50,0)
8 ;;1.29;1.3;1.18;1.28
"RTN","IBJPS",51,0)
9 ;;1.01;1.02;1.05;1.04
"RTN","IBJPS",52,0)
10 ;;2.12;2.1;2.02;2.03;2.04;2.05;2.06;2.01
"RTN","IBJPS",53,0)
11 ;;2.08;2.09
"RTN","IBJPS",54,0)
12 ;;9.01;9.02;9.03;9.11;9.12;9.13;9.14;9.15
"RTN","IBJPS",55,0)
13 ;;10.02;10.03;10.04;10.05;D INIT^IBATFILE
"RTN","IBJPS",56,0)
14 ;;2.11;8.01;8.09;8.03;8.06;8.04;8.07;8.02;8.12T;8.11T
"RTN","IBJPS",57,0)
15 ;;50.01;50.02;50.05;50.06;50.03;50.04;50.07
"RTN","IBJPS",58,0)
 ;
"RTN","IBJPS",59,0)
 ;
"RTN","IBJPS",60,0)
ADD(IBLN,LNG,ARR) ; output array of address in X, line length=LNG
"RTN","IBJPS",61,0)
 N IBCNT,IBI,IBY,IBX,IBZ K ARR S IBCNT=1
"RTN","IBJPS",62,0)
 F IBI=2:1:4 S IBY=$P(IBLN,U,IBI) I IBY'="" D  S ARR(IBCNT)=IBY
"RTN","IBJPS",63,0)
 . S IBX=$G(ARR(IBCNT)) I IBI=4 S IBY=$P($G(^DIC(5,+IBY,0)),U,2)_" "_$P(IBLN,U,5)
"RTN","IBJPS",64,0)
 . S IBZ=$S(IBX'="":IBX_", ",1:"")_IBY I $L(IBZ)'>LNG S IBY=IBZ Q
"RTN","IBJPS",65,0)
 . S IBCNT=IBCNT+1
"RTN","IBJPS",66,0)
 Q
"RTN","IBJPS2")
0^50^B48143504^B51439573
"RTN","IBJPS2",1,0)
IBJPS2 ;ALB/MAF,ARH - IBSP IB SITE PARAMETER BUILD (cont) ;22-DEC-1995
"RTN","IBJPS2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,52,115,143,51,137,161,155,320**;21-MAR-94
"RTN","IBJPS2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJPS2",4,0)
 ;
"RTN","IBJPS2",5,0)
BLD2 ; - continue build screen array for IB parameters
"RTN","IBJPS2",6,0)
 ;
"RTN","IBJPS2",7,0)
 N Z,Z0
"RTN","IBJPS2",8,0)
 D RIGHT(1,1,1) ; - facility/med center  (new line for each)
"RTN","IBJPS2",9,0)
 S IBLN=$$SET("Medical Center",$$EXSET^IBJU1($P(IBPD0,U,2),350.9,.02),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",10,0)
 S IBLN=$$SET("MAS Service",$$EXSET^IBJU1($P(IBPD1,U,14),350.9,1.14),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",11,0)
 ;
"RTN","IBJPS2",12,0)
 D LEFT(2)
"RTN","IBJPS2",13,0)
 S IBLN=$$SET("Default Division",$$EXSET^IBJU1($P(IBPD1,U,25),350.9,1.25),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",14,0)
 S IBLN=$$SET("Billing Supervisor",$$EXSET^IBJU1($P(IBPD1,U,8),350.9,1.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",15,0)
 ;
"RTN","IBJPS2",16,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",17,0)
 S IBLN=$$SET("Initiator Authorize",$$YN(+$P(IBPD1,U,23)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",18,0)
 S IBLN=$$SET("Ask HINQ in MCCR",$$YN(+$P(IBPD1,U,16)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",19,0)
 S IBLN=$$SET("Multiple Form Types",$$YN(+$P(IBPD1,U,22)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",20,0)
 ;
"RTN","IBJPS2",21,0)
 D LEFT(2)
"RTN","IBJPS2",22,0)
 S IBLN=$$SET("Xfer Proc to Sched",$$YN(+$P(IBPD1,U,19)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",23,0)
 S IBLN=$$SET("Use Non-PTF Codes",$$YN(+$P(IBPD1,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",24,0)
 S IBLN=$$SET("Use OP CPT screen",$$YN(+$P(IBPD1,U,17)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",25,0)
 ;
"RTN","IBJPS2",26,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",27,0)
 S IBLN=$$SET("Default Form Type",$$EXSET^IBJU1($P(IBPD1,U,26),350.9,1.26),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",28,0)
 S IBLN=$$SET("'001' for Total",$$YN(+$P(IBPD1,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",29,0)
 ;
"RTN","IBJPS2",30,0)
 D LEFT(2)
"RTN","IBJPS2",31,0)
 S IBLN=$$SET("UB-92 Address Col",$P(IBPD1,U,31),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",32,0)
 S IBLN=$$SET("HCFA 1500 Addr Col",$P(IBPD1,U,27),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",33,0)
 ;
"RTN","IBJPS2",34,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",35,0)
 S IBLN=$$SET("Default RX DX Cd",$$EXSET^IBJU1($P(IBPD1,U,29),350.9,1.29),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",36,0)
 S IBLN=$$SET("Default RX CPT Cd",$$EXSET^IBJU1($P(IBPD1,U,30),350.9,1.30),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",37,0)
 ;
"RTN","IBJPS2",38,0)
 D LEFT(2)
"RTN","IBJPS2",39,0)
 S IBLN=$$SET("Default ASC Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,18),350.9,1.18),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",40,0)
 S IBLN=$$SET("Default RX Rev Cd",$$EXSET^IBJU1($P(IBPD1,U,28),350.9,1.28),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",41,0)
 ;
"RTN","IBJPS2",42,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",43,0)
 S IBLN=$$SET("Bill Signer Name","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",44,0)
 S IBLN=$$SET("Bill Signer Title","<No longer used>",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",45,0)
 ;
"RTN","IBJPS2",46,0)
 D LEFT(2)
"RTN","IBJPS2",47,0)
 S IBLN=$$SET("Federal Tax #",$P(IBPD1,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",48,0)
 ;
"RTN","IBJPS2",49,0)
 D RIGHT(3,"","")
"RTN","IBJPS2",50,0)
 S IBLN=$$SET("Remark on Each Bill",$P(IBPD1,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",51,0)
 ;
"RTN","IBJPS2",52,0)
 D RIGHT(3,1,1) ; - Remittance/Agent Cashier Address
"RTN","IBJPS2",53,0)
 S IBLN=$$SET("Billing Facility is Another Facility",$$EXPAND^IBTRE(350.9,2.12,+$P(IBPD2,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",54,0)
 S IBLN=$$SET("Billing Facility Name",$P(IBPD2,U,10),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",55,0)
 D ADD^IBJPS(IBPD2,IBSW(3),.IBX) D  K IBX
"RTN","IBJPS2",56,0)
 . S IBT="Remittance Address",IBX=0 F  S IBX=$O(IBX(IBX)) Q:'IBX  D
"RTN","IBJPS2",57,0)
 .. S IBLN=$$SET(IBT,IBX(IBX),IBLN,IBLR,IBSEL),IBT=""
"RTN","IBJPS2",58,0)
 S IBLN=$$SET("Phone",$P(IBPD2,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",59,0)
 ;
"RTN","IBJPS2",60,0)
 D RIGHT(3,1,1)
"RTN","IBJPS2",61,0)
 S IBLN=$$SET("Inpt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,8),350.9,2.08),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",62,0)
 S IBLN=$$SET("Opt Health Summary",$$EXSET^IBJU1($P(IBPD2,U,9),350.9,2.09),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",63,0)
 ;
"RTN","IBJPS2",64,0)
 D RIGHT(5,1,1)
"RTN","IBJPS2",65,0)
 S IBLN=$$SET("Rx Billing Port",$P(IBPD9,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",66,0)
 S IBLN=$$SET("AWP Update Port",$P(IBPD9,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",67,0)
 S IBLN=$$SET("TCP/IP Address",$P(IBPD9,U,3),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",68,0)
 S IBLN=$$SET("Task UCI/VOL",$P(IBPD9,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",69,0)
 S IBLN=$$SET("AWP Charge Set",$$EXSET^IBJU1($P(IBPD9,U,12),350.9,9.12),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",70,0)
 S IBLN=$$SET("Prescriber ID",$P(IBPD9,U,13),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",71,0)
 S IBLN=$$SET("DEA vs Presc.ID",$$YN($P(IBPD9,U,14)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",72,0)
 S IBLN=$$SET("Calc comp code",$$YN($P(IBPD9,U,15)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",73,0)
 ;
"RTN","IBJPS2",74,0)
 D LEFT(6)
"RTN","IBJPS2",75,0)
 S IBLN=$$SET("Prim Billing Task",$P(IBPD9,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",76,0)
 S IBLN=$$SET("Sec Billing Task",$P(IBPD9,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",77,0)
 S IBLN=$$SET("Prim AWP Upd Task",$P(IBPD9,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",78,0)
 S IBLN=$$SET("Sec AWP Upd Task",$P(IBPD9,U,7),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",79,0)
 S IBLN=$$SET("Task Started",$$DAT1^IBOUTL($P(IBPD9,U,8),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",80,0)
 S IBLN=$$SET("Task Last Ran",$$DAT1^IBOUTL($P(IBPD9,U,9),1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",81,0)
 S IBLN=$$SET("Shutdown Tasks?",$$YN($P(IBPD9,U,10)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",82,0)
 ;
"RTN","IBJPS2",83,0)
 ; transfer pricing
"RTN","IBJPS2",84,0)
 D RIGHT(1,1,1)
"RTN","IBJPS2",85,0)
 S IBLN=$$SET("Inpatient TP Active ",$$YN(+$P(IBPD10,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",86,0)
 S IBLN=$$SET("Outpatient TP Active",$$YN(+$P(IBPD10,U,3)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",87,0)
 S IBLN=$$SET("Pharmacy TP Active  ",$$YN(+$P(IBPD10,U,4)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",88,0)
 S IBLN=$$SET("Prosthetic TP Active",$$YN(+$P(IBPD10,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",89,0)
 ;
"RTN","IBJPS2",90,0)
 ; EDI/MRA parameters
"RTN","IBJPS2",91,0)
 D RIGHT(7,1,1)
"RTN","IBJPS2",92,0)
 N IBZ S IBZ=$P(IBPD8,U,3)
"RTN","IBJPS2",93,0)
 S IBLN=$$SET(" EDI/MRA Activated",$$EXSET^IBJU1(+$P(IBPD8,U,10),350.9,8.1),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",94,0)
 S IBLN=$$SET(" EDI Contact Phone",$P(IBPD2,U,11),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",95,0)
 S IBLN=$$SET(" EDI 837 Live Transmit Queue",$P(IBPD8,U),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",96,0)
 S IBLN=$$SET(" EDI 837 Test Transmit Queue",$P(IBPD8,U,9),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",97,0)
 S IBLN=$$SET(" Auto-Txmt Bill Frequency",$S(IBZ:"Every"_$S(IBZ>1:" "_$P(IBPD8,U,3),1:""),1:"")_$S(IBZ:" Day"_$S(IBZ=1:"",1:"s"),1:"Never Run"),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",98,0)
 S IBLN=$$SET(" Hours To Auto-Transmit",$P(IBPD8,U,6),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",99,0)
 S IBLN=$$SET(" Max # Bills Per Batch",$P(IBPD8,U,4),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",100,0)
 S IBLN=$$SET(" Only Allow 1 Ins Co/Claim Batch?",$$EXPAND^IBTRE(350.9,8.07,+$P(IBPD8,U,7)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",101,0)
 S IBLN=$$SET(" Last Auto-Txmt Run Date",$$DATE^IBJU1($P(IBPD8,U,5)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",102,0)
 S IBLN=$$SET(" Days To Wait To Purge Msgs",$P(IBPD8,U,2),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",103,0)
 S IBLN=$$SET(" Allow MRA Processing?",$$YN(+$P(IBPD8,U,12)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",104,0)
 S IBLN=$$SET(" Enable Automatic MRA Processing?",$$YN(+$P(IBPD8,U,11)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",105,0)
 ;
"RTN","IBJPS2",106,0)
 ; Ingenix ClaimsManager Information
"RTN","IBJPS2",107,0)
 D RIGHT(9,1,1)
"RTN","IBJPS2",108,0)
 S IBLN=$$SET("Are we using ClaimsManager?",$$YN(+$P(IBPD50,U,1)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",109,0)
 S IBLN=$$SET("Is ClaimsManager working OK?",$$YN(+$P(IBPD50,U,2)),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",110,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Address",$P(IBPD50,U,5),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",111,0)
 S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",""))
"RTN","IBJPS2",112,0)
 S IBLN=$$SET("ClaimsManager TCP/IP Ports",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",113,0)
 F  S IBCISOCK=$O(^IBE(350.9,1,50.06,"B",IBCISOCK)) Q:IBCISOCK=""  D
"RTN","IBJPS2",114,0)
 . S IBLN=$$SET("",IBCISOCK,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",115,0)
 . Q
"RTN","IBJPS2",116,0)
 S IBLN=$$SET("General Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,3),350.9,50.03),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",117,0)
 S IBLN=$$SET("Communication Error MailGroup",$$EXSET^IBJU1($P(IBPD50,U,4),350.9,50.04),IBLN,IBLR,IBSEL)
"RTN","IBJPS2",118,0)
 S IBCIMFLG=$$EXTERNAL^DILFD(350.9,50.07,"",$P(IBPD50,U,7))
"RTN","IBJPS2",119,0)
 I IBCIMFLG="" S IBCIMFLG="PRIORITY"
"RTN","IBJPS2",120,0)
 S IBLN=$$SET("MailMan Messages",IBCIMFLG,IBLN,IBLR,IBSEL)
"RTN","IBJPS2",121,0)
 ;
"RTN","IBJPS2",122,0)
 Q
"RTN","IBJPS2",123,0)
 ;
"RTN","IBJPS2",124,0)
SET(TTL,DATA,LN,LR,SEL,HDR) ;
"RTN","IBJPS2",125,0)
 N IBY,IBX,IBC S IBC=": " I TTL="" S IBC="  "
"RTN","IBJPS2",126,0)
 S IBY=TTL_$J("",(IBTW(LR)-$L(TTL)-2))_$S('$G(HDR):IBC_DATA,1:""),IBX=$G(^TMP("IBJPS",$J,LN,0))
"RTN","IBJPS2",127,0)
 S IBX=$$SETSTR^VALM1(IBY,IBX,IBTC(LR),(IBTW(LR)+IBSW(LR)))
"RTN","IBJPS2",128,0)
 D SET1(IBX,LN,SEL)
"RTN","IBJPS2",129,0)
 S LN=LN+1
"RTN","IBJPS2",130,0)
 Q LN
"RTN","IBJPS2",131,0)
 ;
"RTN","IBJPS2",132,0)
SET1(STR,LN,SEL,HI) ; set up TMP array with screen data
"RTN","IBJPS2",133,0)
 S ^TMP("IBJPS",$J,LN,0)=STR
"RTN","IBJPS2",134,0)
 S ^TMP("IBJPS",$J,"IDX",LN,SEL)=""
"RTN","IBJPS2",135,0)
 S ^TMP("IBJPSAX",$J,SEL)=SEL
"RTN","IBJPS2",136,0)
 I $G(HI)'="" D CNTRL^VALM10(LN,1,4,IOINHI,IOINORM)
"RTN","IBJPS2",137,0)
 ;I $G(RV) D CNTRL^VALM10(LN,6,19,IOUON,IOUOFF)
"RTN","IBJPS2",138,0)
 Q
"RTN","IBJPS2",139,0)
 ;
"RTN","IBJPS2",140,0)
YN(X) Q $S(+X:"YES",1:"NO")
"RTN","IBJPS2",141,0)
 ;
"RTN","IBJPS2",142,0)
RIGHT(LR,SEL,BL) ; - reset control variables for right side of screen
"RTN","IBJPS2",143,0)
 S IBLN=$S(IBLN>IBGRPE:IBLN,1:IBGRPE) I $G(BL) S IBLN=$$SET("","",IBLN,IBLR,IBSEL)
"RTN","IBJPS2",144,0)
 S IBLR=$G(LR),IBGRPB=IBLN I +$G(SEL) S IBSEL=IBSEL+1 D SET1("["_IBSEL_"]",IBLN,IBSEL,1)
"RTN","IBJPS2",145,0)
 Q
"RTN","IBJPS2",146,0)
 ;
"RTN","IBJPS2",147,0)
LEFT(LR) ; - reset control variables for left side of screen
"RTN","IBJPS2",148,0)
 S IBLR=$G(LR),IBGRPE=IBLN,IBLN=IBGRPB
"RTN","IBJPS2",149,0)
 Q
"RTN","IBJTCA2")
0^6^B23068552^B15221038
"RTN","IBJTCA2",1,0)
IBJTCA2 ;ALB/ARH - TPI CLAIMS INFO BUILD (CONT) ;16-FEB-1995
"RTN","IBJTCA2",2,0)
 ;;2.0;INTEGRATED BILLING;**39,80,155,320**;21-MAR-94
"RTN","IBJTCA2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBJTCA2",4,0)
 ;
"RTN","IBJTCA2",5,0)
CONT ; Continuation of Claim Information Screen Build
"RTN","IBJTCA2",6,0)
 ; reason cancelled
"RTN","IBJTCA2",7,0)
 I $P(IBD0,U,13)=7 D
"RTN","IBJTCA2",8,0)
 . S (IBNC(1),IBTC(1))=2,(IBNC(2),IBTC(2))=0,IBNC(3)=28,IBTW(1)=29,IBTW(2)=0,IBSW(1)=49,IBSW(2)=0
"RTN","IBJTCA2",9,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",10,0)
 . ;
"RTN","IBJTCA2",11,0)
 . S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",12,0)
 . K IBY D RCANC^IBJTU2(IBIFN,.IBY,50)
"RTN","IBJTCA2",13,0)
 . S IBT="Reason Cancelled by ("_$P(IBY,U,3)_"): "
"RTN","IBJTCA2",14,0)
 . S IBI=0 F  S IBI=$O(IBY(IBI)) Q:'IBI  S IBD=IBY(IBI) S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",15,0)
 ;
"RTN","IBJTCA2",16,0)
 S (IBLN,VALMCNT)=$S(IBLN>IBGRPE:IBLN,1:IBGRPE)
"RTN","IBJTCA2",17,0)
 S (IBNC(1),IBTC(1))=2,IBTW(1)=16,IBSW(1)=50
"RTN","IBJTCA2",18,0)
 S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",19,0)
 ;
"RTN","IBJTCA2",20,0)
 S IBGRPB=IBLN,IBLR=1
"RTN","IBJTCA2",21,0)
 ;
"RTN","IBJTCA2",22,0)
 I +$P(IBDS,U,1) S IBT="Entered: ",IBD=$$EXT(IBDS,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",23,0)
 I +$P(IBDS,U,4) S IBT="Initial Review: ",IBD=$$EXT(IBDS,4,5) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",24,0)
 I +$P(IBDS,U,7) S IBT="MRA Request: ",IBD=$$EXT(IBDS,7,8) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",25,0)
 I +$P(IBDS,U,10) S IBT="Authorized: ",IBD=$$EXT(IBDS,10,11) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",26,0)
 I +$P(IBDS,U,12) S IBT="First Printed: ",IBD=$$EXT(IBDS,12,13) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",27,0)
 I $P(IBDS,U,14)>$P(IBDS,U,12) S IBT="Last Printed: ",IBD=$$EXT(IBDS,14,15) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",28,0)
 I +$P(IBDS,U,17) S IBT="Cancelled: ",IBD=$$EXT(IBDS,17,18) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",29,0)
 ;
"RTN","IBJTCA2",30,0)
 ; Patch 320 - added bill cloning history to TPJI report. 
"RTN","IBJTCA2",31,0)
 N IBCCR,IBCURR,IBNEXT,IBBCH,IBINDENT
"RTN","IBJTCA2",32,0)
 S IBINDENT=0
"RTN","IBJTCA2",33,0)
 D EN^IBCCR(IBIFN,.IBCCR)   ; utility to pull cloning history
"RTN","IBJTCA2",34,0)
 ;
"RTN","IBJTCA2",35,0)
 ; attempt to go one claim forward from the current claim
"RTN","IBJTCA2",36,0)
 S IBCURR="IBCCR("_+$P(IBDS,U,1)_","_IBIFN_")"
"RTN","IBJTCA2",37,0)
 S IBNEXT=$Q(@IBCURR)
"RTN","IBJTCA2",38,0)
 I IBNEXT'="" D
"RTN","IBJTCA2",39,0)
 . N IBX S IBX=@IBNEXT
"RTN","IBJTCA2",40,0)
 . S IBT="Copied: "
"RTN","IBJTCA2",41,0)
 . S IBD=$$FMTE^XLFDT($P(IBX,U,1),"2Z")_"  by  "_$P(IBX,U,3)
"RTN","IBJTCA2",42,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",43,0)
 . S IBT="Copied To: ",IBD=$P(IBX,U,2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",44,0)
 . S IBINDENT=1
"RTN","IBJTCA2",45,0)
 . Q
"RTN","IBJTCA2",46,0)
 ;
"RTN","IBJTCA2",47,0)
 ; now go backwards for claim cloning history all the way back
"RTN","IBJTCA2",48,0)
 S IBBCH=IBCURR
"RTN","IBJTCA2",49,0)
 F  S IBBCH=$Q(@IBBCH,-1) Q:IBBCH=""  D
"RTN","IBJTCA2",50,0)
 . N IBX S IBX=@IBBCH
"RTN","IBJTCA2",51,0)
 . S IBT="Copied: " I IBINDENT S IBT="                  "_IBT
"RTN","IBJTCA2",52,0)
 . S IBD=$$FMTE^XLFDT($P(IBX,U,1),"2Z")_"  by  "_$P(IBX,U,3)
"RTN","IBJTCA2",53,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",54,0)
 . S IBT="Copied From: " I IBINDENT S IBT="             "_IBT
"RTN","IBJTCA2",55,0)
 . S IBD=$P(IBX,U,2),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",56,0)
 . S IBT="Reason Copied: " I IBINDENT S IBT="           "_IBT
"RTN","IBJTCA2",57,0)
 . S IBD=$P(IBX,U,4),IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",58,0)
 . S IBINDENT=1
"RTN","IBJTCA2",59,0)
 . Q
"RTN","IBJTCA2",60,0)
 ;
"RTN","IBJTCA2",61,0)
 I $D(^DGCR(399,IBIFN,"R","AC",1)) S IBT="Returned to AR: ",X=0 F  S X=$O(^DGCR(399,IBIFN,"R","AC",1,X)) Q:'X  D
"RTN","IBJTCA2",62,0)
 . S IBY=$G(^DGCR(399,IBIFN,"R",X,0)),IBD=$$EXT(IBY,1,2) S IBLN=$$SET(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",63,0)
 ;
"RTN","IBJTCA2",64,0)
 N IBCOB,IBX,IBY,IBI,IBJ,IBK D BCOB^IBCU3(IBIFN,.IBCOB) I $O(IBCOB(0)) D
"RTN","IBJTCA2",65,0)
 . S IBTC(1)=2,IBTW(1)=12,IBSW(1)=68,IBLR=1,IBNC(1)=26
"RTN","IBJTCA2",66,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",67,0)
 . S IBT="Payers and Related Bills" S IBLN=$$SETN^IBJTCA1(IBT,IBLN,IBLR,1)
"RTN","IBJTCA2",68,0)
 . S (IBT,IBD)="" S IBLN=$$SET(IBT,IBD,IBLN,1)
"RTN","IBJTCA2",69,0)
 . S IBT="",IBD="Insurance Co.    Bill #     Status   Original  Collected    Balance"
"RTN","IBJTCA2",70,0)
 . S IBLN=$$SET(IBT,IBD,IBLN,IBLR) D CNTRL^VALM10(IBLN-1,(IBTC(1)+IBTW(1)),IBSW(1),IOUON,IOUOFF)
"RTN","IBJTCA2",71,0)
 . S IBI=0 F  S IBI=$O(IBCOB(IBI)) Q:'IBI  D
"RTN","IBJTCA2",72,0)
 .. S IBT=$S(IBI=1:"Primary",IBI=2:"Secondary",IBI=3:"Tertiary",1:"Other")_":  "
"RTN","IBJTCA2",73,0)
 .. S IBJ=0 F  S IBJ=$O(IBCOB(IBI,IBJ)) Q:'IBJ  S IBK="" F  S IBK=$O(IBCOB(IBI,IBJ,IBK)) Q:IBK=""  D
"RTN","IBJTCA2",74,0)
 ... S IBD="",IBY=$$BILL^RCJIBFN2(IBK)
"RTN","IBJTCA2",75,0)
 ... S IBX=$P($G(^DIC(36,+IBJ,0)),U,1) S IBD=$$SLINE(IBD,IBX,0,15)
"RTN","IBJTCA2",76,0)
 ... I +IBK D
"RTN","IBJTCA2",77,0)
 .... S IBX=$P($G(^DGCR(399,+IBK,0)),U,1) S IBD=$$SLINE(IBD,IBX,17,10)
"RTN","IBJTCA2",78,0)
 .... S IBX=$P($$STNO^RCJIBFN2(+$P(IBY,U,2)),U,2) ;bill status
"RTN","IBJTCA2",79,0)
 .... ; if MRA active & bill pyr seq >1 & dsply'g prmry & prmry ins is WNR
"RTN","IBJTCA2",80,0)
 .... I $$EDIACTV^IBCEF4(2),$$COBN^IBCEF(+IBK)>1,IBI=1,$$MCRWNR^IBEFUNC(+IBJ) D
"RTN","IBJTCA2",81,0)
 ..... S IBX=" ",IBY="0^^0^0^0" ;blank out status & reset WNR amounts
"RTN","IBJTCA2",82,0)
 .... S IBD=$$SLINE(IBD,IBX,30,3)
"RTN","IBJTCA2",83,0)
 .... S IBX=$J($P(IBY,U,1),10,2) S IBD=$$SLINE(IBD,IBX,35,10)
"RTN","IBJTCA2",84,0)
 .... S IBX=$J($P(IBY,U,4),10,2) S IBD=$$SLINE(IBD,IBX,46,10)
"RTN","IBJTCA2",85,0)
 .... S IBX=$J($P(IBY,U,3),10,2) S IBD=$$SLINE(IBD,IBX,57,10)
"RTN","IBJTCA2",86,0)
 ... S IBLN=$$SET(IBT,IBD,IBLN,IBLR),IBT=""
"RTN","IBJTCA2",87,0)
 Q
"RTN","IBJTCA2",88,0)
 ;
"RTN","IBJTCA2",89,0)
EXT(STR,DT,USER) ; returns external form of user and date, given their position in the string
"RTN","IBJTCA2",90,0)
 N X,Y S Y="",STR=$G(STR),DT=+$G(DT),USER=+$G(USER)
"RTN","IBJTCA2",91,0)
 S X=$P(STR,U,DT),DT="" I +X S DT=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","IBJTCA2",92,0)
 S X=$P(STR,U,USER),USER="" I +X S USER=$P($G(^VA(200,+X,0)),U,1)
"RTN","IBJTCA2",93,0)
 S Y=DT_"  by  "_$S(USER="":"UNKNOWN",1:USER)
"RTN","IBJTCA2",94,0)
 Q Y
"RTN","IBJTCA2",95,0)
 ;
"RTN","IBJTCA2",96,0)
SET(IBT,IBD,IBLN,IBLR) ;
"RTN","IBJTCA2",97,0)
 N LN S LN=$$SET^IBJTCA1(IBT,IBD,IBLN,IBLR)
"RTN","IBJTCA2",98,0)
 Q LN
"RTN","IBJTCA2",99,0)
 ;
"RTN","IBJTCA2",100,0)
SLINE(IBD,DATA,COL,WD) ; format a single line with multiple data fields
"RTN","IBJTCA2",101,0)
 S IBD=$E(IBD,1,(COL-1)),IBD=IBD_$J("",(COL-$L(IBD))),IBD=IBD_$E(DATA,1,WD)
"RTN","IBJTCA2",102,0)
 Q IBD
"RTN","IBY320PO")
0^^B97753326
"RTN","IBY320PO",1,0)
IBY320PO ;ALB/ESG - Post Install for IB patch 320 ;28-JUL-2005
"RTN","IBY320PO",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBY320PO",3,0)
 ;
"RTN","IBY320PO",4,0)
EN ;
"RTN","IBY320PO",5,0)
 N XPDIDTOT S XPDIDTOT=9
"RTN","IBY320PO",6,0)
 D TWOQ         ; 1. get rid of 2Q status messages on CSA
"RTN","IBY320PO",7,0)
 D RCB          ; 2. change one EDI menu mnemonic
"RTN","IBY320PO",8,0)
 D ATD          ; 3. create regular style x-ref for file 361.4
"RTN","IBY320PO",9,0)
 D MCRWNR       ; 4. create 2 new entries in file 355.92 for Medicare
"RTN","IBY320PO",10,0)
 D TRIGGERS     ; 5. Trigger defaults in 36 and 355.93
"RTN","IBY320PO",11,0)
 D IBEFTFLG     ; 6. Set flag in 355.9 for what kind of ID it is
"RTN","IBY320PO",12,0)
 D AUNIQ        ; 7. create new style x-ref IBA(355.92,"AUNIQ")
"RTN","IBY320PO",13,0)
 D F35597       ; 8. Update file 355.97
"RTN","IBY320PO",14,0)
 D RIT          ; 9. Recompile input templates
"RTN","IBY320PO",15,0)
 ;
"RTN","IBY320PO",16,0)
EX ;
"RTN","IBY320PO",17,0)
 Q
"RTN","IBY320PO",18,0)
 ;
"RTN","IBY320PO",19,0)
TWOQ ; Remove 2Q rejection messages from the current CSA screen
"RTN","IBY320PO",20,0)
 NEW DATA,TXT,DO,DA,DIC,X,Y,IBRS,IEN
"RTN","IBY320PO",21,0)
 D BMES^XPDUTL(" STEP 1 of "_XPDIDTOT)
"RTN","IBY320PO",22,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",23,0)
 D MES^XPDUTL("Removing 2Q rejection messages from the CSA screen ....")
"RTN","IBY320PO",24,0)
 F IBRS=0,1 S IEN=0 F  S IEN=$O(^IBM(361,"ACSA","R",IBRS,IEN)) Q:'IEN  D
"RTN","IBY320PO",25,0)
 . I $G(^IBM(361,IEN,1,1,0))'["2Q  CLAIM REJECTED BY CLEARINGHOUSE" Q
"RTN","IBY320PO",26,0)
 . S DIE=361,DA=IEN
"RTN","IBY320PO",27,0)
 . ; Change the status message
"RTN","IBY320PO",28,0)
 . ; .03 - informational; .09 - review complete; .14 - auto filed
"RTN","IBY320PO",29,0)
 . ;  .1 - final review action (filed - no action)
"RTN","IBY320PO",30,0)
 . S DR=".03////I;.09////2;.14////1;.1////F"
"RTN","IBY320PO",31,0)
 . D ^DIE
"RTN","IBY320PO",32,0)
 . Q
"RTN","IBY320PO",33,0)
 ;
"RTN","IBY320PO",34,0)
TWOQX ;
"RTN","IBY320PO",35,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",36,0)
 D UPDATE^XPDID(1)
"RTN","IBY320PO",37,0)
 Q
"RTN","IBY320PO",38,0)
 ;
"RTN","IBY320PO",39,0)
RCB ; Change the menu mnemonic on the EDI menu for RCB
"RTN","IBY320PO",40,0)
 NEW MENUIEN,ITEMIEN,STOP,IBX,DIE,DA,DR
"RTN","IBY320PO",41,0)
 D BMES^XPDUTL(" STEP 2 of "_XPDIDTOT)
"RTN","IBY320PO",42,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",43,0)
 D MES^XPDUTL("Updating EDI menu mnemonics ....")
"RTN","IBY320PO",44,0)
 ;
"RTN","IBY320PO",45,0)
 S MENUIEN=$O(^DIC(19,"B","IBCE 837 EDI MENU",0)) I 'MENUIEN G RCBX
"RTN","IBY320PO",46,0)
 S ITEMIEN=0,STOP=0
"RTN","IBY320PO",47,0)
 F  S ITEMIEN=$O(^DIC(19,MENUIEN,10,ITEMIEN)) Q:'ITEMIEN  D  Q:STOP
"RTN","IBY320PO",48,0)
 . S IBX=$P($G(^DIC(19,MENUIEN,10,ITEMIEN,0)),U,1) Q:'IBX
"RTN","IBY320PO",49,0)
 . I $P($G(^DIC(19,IBX,0)),U,1)'="IBCE PREV TRANSMITTED CLAIMS" Q
"RTN","IBY320PO",50,0)
 . S DIE="^DIC(19,"_MENUIEN_",10,"
"RTN","IBY320PO",51,0)
 . S DA=ITEMIEN,DA(1)=MENUIEN
"RTN","IBY320PO",52,0)
 . S DR="2////RCB;3////40"
"RTN","IBY320PO",53,0)
 . D ^DIE
"RTN","IBY320PO",54,0)
 . S STOP=1
"RTN","IBY320PO",55,0)
 . Q
"RTN","IBY320PO",56,0)
RCBX ;
"RTN","IBY320PO",57,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",58,0)
 D UPDATE^XPDID(2)
"RTN","IBY320PO",59,0)
 Q
"RTN","IBY320PO",60,0)
 ;
"RTN","IBY320PO",61,0)
ATD ; create ATD x-ref on file 361.4
"RTN","IBY320PO",62,0)
 NEW IBIFN,DA,DIK
"RTN","IBY320PO",63,0)
 D BMES^XPDUTL(" STEP 3 of "_XPDIDTOT)
"RTN","IBY320PO",64,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",65,0)
 D MES^XPDUTL("Creating 'ATD' x-ref for File 361.4 ....")
"RTN","IBY320PO",66,0)
 KILL ^IBM(361.4,"ATD")
"RTN","IBY320PO",67,0)
 S IBIFN=0
"RTN","IBY320PO",68,0)
 F  S IBIFN=$O(^IBM(361.4,IBIFN)) Q:'IBIFN  D
"RTN","IBY320PO",69,0)
 . S DA(1)=IBIFN
"RTN","IBY320PO",70,0)
 . S DIK="^IBM(361.4,"_DA(1)_",1,"
"RTN","IBY320PO",71,0)
 . S DIK(1)=".01^ATD"
"RTN","IBY320PO",72,0)
 . D ENALL^DIK
"RTN","IBY320PO",73,0)
 . Q
"RTN","IBY320PO",74,0)
ATDX ;
"RTN","IBY320PO",75,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",76,0)
 D UPDATE^XPDID(3)
"RTN","IBY320PO",77,0)
 Q
"RTN","IBY320PO",78,0)
 ;
"RTN","IBY320PO",79,0)
MCRWNR ; Medicare (WNR) clean up file 355.92 entries and add 2 new entries
"RTN","IBY320PO",80,0)
 NEW DA,DIK,INSCO,MCRWNR,DO,DIC,X,Y,DFN,OK,IBIFN,BPID,DIE,DR
"RTN","IBY320PO",81,0)
 D BMES^XPDUTL(" STEP 4 of "_XPDIDTOT)
"RTN","IBY320PO",82,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",83,0)
 D MES^XPDUTL("Updating Billing Provider IDs for MEDICARE (WNR) ....")
"RTN","IBY320PO",84,0)
 ;
"RTN","IBY320PO",85,0)
 ; First, find the MEDICARE (WNR) ins co ien
"RTN","IBY320PO",86,0)
 S INSCO=0
"RTN","IBY320PO",87,0)
 F  S INSCO=$O(^DIC(36,"B","MEDICARE (WNR)",INSCO)) Q:'INSCO  D
"RTN","IBY320PO",88,0)
 . I $$MCRWNR^IBEFUNC(INSCO) S MCRWNR(INSCO)="" Q
"RTN","IBY320PO",89,0)
 . D MES^XPDUTL("ERROR: Insurance company on file named 'MEDICARE (WNR)' incorrectly set-up.")
"RTN","IBY320PO",90,0)
 . Q
"RTN","IBY320PO",91,0)
 ;
"RTN","IBY320PO",92,0)
 I '$D(MCRWNR) D MES^XPDUTL("ERROR: Insurance company 'MEDICARE (WNR)' not found.") G MCRX
"RTN","IBY320PO",93,0)
 ;
"RTN","IBY320PO",94,0)
 I $O(MCRWNR(""))'=$O(MCRWNR(""),-1) D MES^XPDUTL("ERROR: Multiple insurance companies named 'MEDICARE (WNR)' found.")
"RTN","IBY320PO",95,0)
 ;
"RTN","IBY320PO",96,0)
 ; Next, get rid of any entries in this file for Medicare (clean-up)
"RTN","IBY320PO",97,0)
 S INSCO=0,DIK="^IBA(355.92,"
"RTN","IBY320PO",98,0)
 F  S INSCO=$O(MCRWNR(INSCO)) Q:'INSCO  D
"RTN","IBY320PO",99,0)
 . S DA=0
"RTN","IBY320PO",100,0)
 . F  S DA=$O(^IBA(355.92,"B",INSCO,DA)) Q:'DA  D ^DIK
"RTN","IBY320PO",101,0)
 . Q
"RTN","IBY320PO",102,0)
 ;
"RTN","IBY320PO",103,0)
 ; Next, add 2 entries for each Medicare (wnr) (should only be one)
"RTN","IBY320PO",104,0)
 S INSCO=0
"RTN","IBY320PO",105,0)
 F  S INSCO=$O(MCRWNR(INSCO)) Q:'INSCO  D
"RTN","IBY320PO",106,0)
 . K DO
"RTN","IBY320PO",107,0)
 . S DIC="^IBA(355.92,",DIC(0)="",X=INSCO
"RTN","IBY320PO",108,0)
 . S DIC("DR")=".04///1;.06///MEDICARE PART A;.07///670899;.08///E"
"RTN","IBY320PO",109,0)
 . D FILE^DICN
"RTN","IBY320PO",110,0)
 . K DO
"RTN","IBY320PO",111,0)
 . S DIC="^IBA(355.92,",DIC(0)="",X=INSCO
"RTN","IBY320PO",112,0)
 . S DIC("DR")=".04///2;.06///MEDICARE PART B;.07///VA0"_$P($$SITE^VASITE,U,3)_";.08///E"
"RTN","IBY320PO",113,0)
 . D FILE^DICN
"RTN","IBY320PO",114,0)
 . Q
"RTN","IBY320PO",115,0)
 ;
"RTN","IBY320PO",116,0)
 ; Correct billing provider secondary IDs for Medicare (current ins only)
"RTN","IBY320PO",117,0)
 S DFN=0
"RTN","IBY320PO",118,0)
 ; "AOP" x-ref lists bills by patient with claim status 1 or 2
"RTN","IBY320PO",119,0)
 F  S DFN=$O(^DGCR(399,"AOP",DFN)) Q:'DFN  D
"RTN","IBY320PO",120,0)
 . S INSCO=0,OK=0
"RTN","IBY320PO",121,0)
 . F  S INSCO=$O(MCRWNR(INSCO)) Q:'INSCO  I $D(^DGCR(399,"AE",DFN,INSCO)) S OK=1 Q
"RTN","IBY320PO",122,0)
 . ; OK=1: claims exist for this patient in which MCRWNR is curr ins
"RTN","IBY320PO",123,0)
 . I 'OK Q
"RTN","IBY320PO",124,0)
 . S IBIFN=0
"RTN","IBY320PO",125,0)
 . F  S IBIFN=$O(^DGCR(399,"AOP",DFN,IBIFN)) Q:'IBIFN  D
"RTN","IBY320PO",126,0)
 .. I $$COBN^IBCEF(IBIFN)'=1 Q      ; current payer seq must be primary
"RTN","IBY320PO",127,0)
 .. I '$$WNRBILL^IBEFUNC(IBIFN) Q   ; and payer must be Medicare
"RTN","IBY320PO",128,0)
 .. S BPID=670899
"RTN","IBY320PO",129,0)
 .. I $$FT^IBCEF(IBIFN)=2 S BPID="VA0"_$P($$SITE^VASITE,U,3)
"RTN","IBY320PO",130,0)
 .. ; BPID = what the billing provider ID should be
"RTN","IBY320PO",131,0)
 .. I $P($G(^DGCR(399,IBIFN,"M1")),U,2)=BPID Q    ; it is OK
"RTN","IBY320PO",132,0)
 .. S DIE=399,DA=IBIFN,DR="122///"_BPID D ^DIE    ; change it
"RTN","IBY320PO",133,0)
 .. Q
"RTN","IBY320PO",134,0)
 . Q
"RTN","IBY320PO",135,0)
 ;
"RTN","IBY320PO",136,0)
MCRX ;
"RTN","IBY320PO",137,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",138,0)
 D UPDATE^XPDID(4)
"RTN","IBY320PO",139,0)
 Q
"RTN","IBY320PO",140,0)
 ;
"RTN","IBY320PO",141,0)
TRIGGERS ;
"RTN","IBY320PO",142,0)
 D BMES^XPDUTL(" STEP 5 of "_XPDIDTOT)
"RTN","IBY320PO",143,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",144,0)
 D MES^XPDUTL("Firing Triggers for default values file 36 and 355.93 and indexing new xrefs")
"RTN","IBY320PO",145,0)
 ;
"RTN","IBY320PO",146,0)
 S DIK="^DIC(36,"
"RTN","IBY320PO",147,0)
 S DIK(1)=".01^2^3^4^5^6"
"RTN","IBY320PO",148,0)
 D ENALL^DIK
"RTN","IBY320PO",149,0)
 ;
"RTN","IBY320PO",150,0)
 S DIK="^IBA(355.93,"
"RTN","IBY320PO",151,0)
 S DIK(1)=".09^1"
"RTN","IBY320PO",152,0)
 D ENALL^DIK
"RTN","IBY320PO",153,0)
 ;
"RTN","IBY320PO",154,0)
 S DIK="^IBA(355.93,"
"RTN","IBY320PO",155,0)
 S DIK(1)=".02^8"
"RTN","IBY320PO",156,0)
 D ENALL^DIK
"RTN","IBY320PO",157,0)
 ;
"RTN","IBY320PO",158,0)
 S DIK="^IBE(355.97,"
"RTN","IBY320PO",159,0)
 S DIK(1)=".03^1"
"RTN","IBY320PO",160,0)
 D ENALL^DIK
"RTN","IBY320PO",161,0)
 ;
"RTN","IBY320PO",162,0)
 ;
"RTN","IBY320PO",163,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",164,0)
 D UPDATE^XPDID(5)
"RTN","IBY320PO",165,0)
 Q
"RTN","IBY320PO",166,0)
 ;
"RTN","IBY320PO",167,0)
IBEFTFLG ;
"RTN","IBY320PO",168,0)
 ;
"RTN","IBY320PO",169,0)
 D BMES^XPDUTL(" STEP 6 of "_XPDIDTOT)
"RTN","IBY320PO",170,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",171,0)
 D MES^XPDUTL("Setting ID Type flag for 355.92")
"RTN","IBY320PO",172,0)
 N DA,N0,Q,DIC,DR,DA
"RTN","IBY320PO",173,0)
 S DA=0 F  S DA=$O(^IBA(355.92,DA)) Q:'+DA  D
"RTN","IBY320PO",174,0)
 . S N0=$G(^IBA(355.92,DA,0))
"RTN","IBY320PO",175,0)
 . Q:N0=""
"RTN","IBY320PO",176,0)
 . Q:$P(N0,U,8)]""   ; already been done
"RTN","IBY320PO",177,0)
 . S Q=$P(N0,U,6)
"RTN","IBY320PO",178,0)
 . Q:Q=""    ; no qualifier
"RTN","IBY320PO",179,0)
 . S DR=".08////"_$S(Q=29:"E",1:"LF")
"RTN","IBY320PO",180,0)
 . S DIE="^IBA(355.92,"
"RTN","IBY320PO",181,0)
 . D ^DIE
"RTN","IBY320PO",182,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",183,0)
 D UPDATE^XPDID(6)
"RTN","IBY320PO",184,0)
 Q
"RTN","IBY320PO",185,0)
 ;
"RTN","IBY320PO",186,0)
AUNIQ ;xxxx/WCJ-CREATE NEW-STYLE XREF ;1:27 PM  30 Dec 2005
"RTN","IBY320PO",187,0)
 ;;1.0
"RTN","IBY320PO",188,0)
 ;
"RTN","IBY320PO",189,0)
 N ZZWJXR,ZZWJRES,ZZWJOUT
"RTN","IBY320PO",190,0)
 D BMES^XPDUTL(" STEP 7 of "_XPDIDTOT)
"RTN","IBY320PO",191,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",192,0)
 D MES^XPDUTL("Create cross reference for file 355.92 ....")
"RTN","IBY320PO",193,0)
 S ZZWJXR("FILE")=355.92
"RTN","IBY320PO",194,0)
 S ZZWJXR("NAME")="AUNIQ"
"RTN","IBY320PO",195,0)
 S ZZWJXR("TYPE")="MU"
"RTN","IBY320PO",196,0)
 S ZZWJXR("USE")="S"
"RTN","IBY320PO",197,0)
 S ZZWJXR("EXECUTION")="R"
"RTN","IBY320PO",198,0)
 S ZZWJXR("ACTIVITY")="IR"
"RTN","IBY320PO",199,0)
 S ZZWJXR("SHORT DESCR")="Xref by ins co,care unit,form type,division,prov id type"
"RTN","IBY320PO",200,0)
 S ZZWJXR("DESCR",1)="This cross reference allows edits to the additonal provider id's to be "
"RTN","IBY320PO",201,0)
 S ZZWJXR("DESCR",2)="replicated to linked insurance companies."
"RTN","IBY320PO",202,0)
 S ZZWJXR("SET")="S ^IBA(355.92,""AUNIQ"",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)="""""
"RTN","IBY320PO",203,0)
 S ZZWJXR("KILL")="K ^IBA(355.92,""AUNIQ"",X(1),$E(X(2),1,30),X(3),X(4),X(5),DA)"
"RTN","IBY320PO",204,0)
 S ZZWJXR("WHOLE KILL")="K ^IBA(355.92,""AUNIQ"")"
"RTN","IBY320PO",205,0)
 S ZZWJXR("SET CONDITION")="S X=0 I X(1)]"""",X(2)]"""",X(3)]"""",X(4)]"""",X(5)]"""",$P($G(^IBA(355.92,DA,0)),U,8)=""A"" S X=1"
"RTN","IBY320PO",206,0)
 S ZZWJXR("KILL CONDITION")="S X=0 I X(1)]"""",X(2)]"""",X(3)]"""",X(4)]"""",X(5)]"""" S X=1"
"RTN","IBY320PO",207,0)
 S ZZWJXR("VAL",1)=.01
"RTN","IBY320PO",208,0)
 S ZZWJXR("VAL",1,"COLLATION")="F"
"RTN","IBY320PO",209,0)
 S ZZWJXR("VAL",2)=.1
"RTN","IBY320PO",210,0)
 S ZZWJXR("VAL",2,"LENGTH")=30
"RTN","IBY320PO",211,0)
 S ZZWJXR("VAL",2,"COLLATION")="F"
"RTN","IBY320PO",212,0)
 S ZZWJXR("VAL",3)=.04
"RTN","IBY320PO",213,0)
 S ZZWJXR("VAL",3,"COLLATION")="F"
"RTN","IBY320PO",214,0)
 S ZZWJXR("VAL",4)=.11
"RTN","IBY320PO",215,0)
 S ZZWJXR("VAL",4,"COLLATION")="F"
"RTN","IBY320PO",216,0)
 S ZZWJXR("VAL",5)=.06
"RTN","IBY320PO",217,0)
 S ZZWJXR("VAL",5,"COLLATION")="F"
"RTN","IBY320PO",218,0)
 D CREIXN^DDMOD(.ZZWJXR,"SW",.ZZWJRES,"ZZWJOUT")
"RTN","IBY320PO",219,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",220,0)
 D UPDATE^XPDID(7)
"RTN","IBY320PO",221,0)
 Q
"RTN","IBY320PO",222,0)
 ;
"RTN","IBY320PO",223,0)
F35597 ;
"RTN","IBY320PO",224,0)
 ;
"RTN","IBY320PO",225,0)
 D BMES^XPDUTL(" STEP 8 of "_XPDIDTOT)
"RTN","IBY320PO",226,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",227,0)
 D MES^XPDUTL("Updating 355.97 ....")
"RTN","IBY320PO",228,0)
 ;
"RTN","IBY320PO",229,0)
 N IEN,CNV,NEW,OLD,DR,DIC,DIE,DA,X,DAT0,DAT1
"RTN","IBY320PO",230,0)
 ;
"RTN","IBY320PO",231,0)
 S CNV("BLUE CROSS ID")="BLUE CROSS^B"
"RTN","IBY320PO",232,0)
 S CNV("BLUE SHIELD ID")="BLUE SHIELD^B"
"RTN","IBY320PO",233,0)
 S CNV("TRICARE ID")="CHAMPUS^P"
"RTN","IBY320PO",234,0)
 S CNV("COMMERCIAL ID")="COMMERCIAL^B"
"RTN","IBY320PO",235,0)
 S CNV("CLIA #")="^P"
"RTN","IBY320PO",236,0)
 S CNV("MEDICARE PART A")="^B"
"RTN","IBY320PO",237,0)
 S CNV("MEDICARE PART B")="^B"
"RTN","IBY320PO",238,0)
 S CNV("FACILITY FED TAX ID #")="EMPLOYER'S IDENTIFICATION #"
"RTN","IBY320PO",239,0)
 S CNV("NETWORK ID")="PROVIDER PLAN NETWORK^B"
"RTN","IBY320PO",240,0)
 S CNV("PROVIDER FED TAX ID #")="FEDERAL TAXPAYER'S #^^TJ"
"RTN","IBY320PO",241,0)
 S CNV("UPIN")="^P"
"RTN","IBY320PO",242,0)
 S CNV("STATE LICENSE")="^B"
"RTN","IBY320PO",243,0)
 S CNV("HMO NUMBER")="HMO"
"RTN","IBY320PO",244,0)
 S CNV("STATE INDUSTRIAL ACCIDENT PRV")="ACCIDENT PROVIDER NUMBER^B"
"RTN","IBY320PO",245,0)
 S CNV("BILLING FACILITY PRIMARY ID")="ELECTRONIC PLAN TYPE^I"
"RTN","IBY320PO",246,0)
 S CNV("LOCATION NUMBER")="^B"
"RTN","IBY320PO",247,0)
 ;
"RTN","IBY320PO",248,0)
 S IEN=0 F  S IEN=$O(^IBE(355.97,IEN)) Q:'+IEN  D
"RTN","IBY320PO",249,0)
 . S OLD=$P($G(^IBE(355.97,IEN,0)),U)
"RTN","IBY320PO",250,0)
 . Q:OLD=""
"RTN","IBY320PO",251,0)
 . S DATA=$G(CNV(OLD))
"RTN","IBY320PO",252,0)
 . N FLAG
"RTN","IBY320PO",253,0)
 . S FLAG=$S(".1.2.3.6.8.11.12.16.18.20.21.22.23.24.25.26.27.28.29.30.31.32.33.34."[("."_IEN_"."):1,1:0)
"RTN","IBY320PO",254,0)
 . S DA=IEN
"RTN","IBY320PO",255,0)
 . S DIE=355.97
"RTN","IBY320PO",256,0)
 . S DR=""
"RTN","IBY320PO",257,0)
 . S:$P(DATA,U)]"" DR=DR_".01///"_$P(DATA,U)_";"
"RTN","IBY320PO",258,0)
 . S:$P(DATA,U,2)]"" DR=DR_".07///"_$P(DATA,U,2)_";"
"RTN","IBY320PO",259,0)
 . S:$P(DATA,U,3)]"" DR=DR_".03///"_$P(DATA,U,3)_";"
"RTN","IBY320PO",260,0)
 . S DR=DR_".04////@;.08////"_FLAG
"RTN","IBY320PO",261,0)
 . D ^DIE
"RTN","IBY320PO",262,0)
 . Q
"RTN","IBY320PO",263,0)
 ;
"RTN","IBY320PO",264,0)
 S NEW(30,0)="MEDICAID^0^1D^^^^B^1"
"RTN","IBY320PO",265,0)
 S NEW(30,1)="^^^^^^1"
"RTN","IBY320PO",266,0)
 S NEW(31,0)="USIN^0^U3^^^1^P^1"
"RTN","IBY320PO",267,0)
 S NEW(31,1)="^^^^^^0"
"RTN","IBY320PO",268,0)
 S NEW(32,0)="EIN^0^EI^^^1^B^1"
"RTN","IBY320PO",269,0)
 S NEW(33,0)="CLINIC NUMBER^0^FH^^^1^B^1"
"RTN","IBY320PO",270,0)
 S NEW(34,0)="PROVIDER SITE NUMBER^0^G5^^^1^B^1"
"RTN","IBY320PO",271,0)
 ;
"RTN","IBY320PO",272,0)
 S NEW="" F  S NEW=$O(NEW(NEW)) Q:NEW=""  D
"RTN","IBY320PO",273,0)
 . K DO
"RTN","IBY320PO",274,0)
 . S DAT0=$G(NEW(NEW,0))
"RTN","IBY320PO",275,0)
 . S DAT1=$G(NEW(NEW,1))
"RTN","IBY320PO",276,0)
 . S DIC="^IBE(355.97,"
"RTN","IBY320PO",277,0)
 . S DIC(0)=""
"RTN","IBY320PO",278,0)
 . S X=$P(DAT0,U)
"RTN","IBY320PO",279,0)
 . Q:X=""
"RTN","IBY320PO",280,0)
 . Q:$D(^IBE(355.97,"B",X))   ; already there (for running multiple times)
"RTN","IBY320PO",281,0)
 . S DIC("DR")=".02////0;.03////"_$P(DAT0,U,3)_$S($P(DAT0,U,6)]"":";.06////"_$P(DAT0,U,6),1:"")_";.07////"_$P(DAT0,U,7)_$S($P(DAT1,U,7)]"":";1.07////"_$P(DAT1,U,7),1:"")_";.08////"_$P(DAT0,U,8)
"RTN","IBY320PO",282,0)
 . D FILE^DICN
"RTN","IBY320PO",283,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",284,0)
 D UPDATE^XPDID(8)
"RTN","IBY320PO",285,0)
 Q
"RTN","IBY320PO",286,0)
 ;
"RTN","IBY320PO",287,0)
RIT ; Recompile input templates for billing screens
"RTN","IBY320PO",288,0)
 NEW X,Y,DMAX
"RTN","IBY320PO",289,0)
 D BMES^XPDUTL(" STEP 9 of "_XPDIDTOT)
"RTN","IBY320PO",290,0)
 D MES^XPDUTL("-------------")
"RTN","IBY320PO",291,0)
 D MES^XPDUTL("Recompiling Input Templates for Billing Screens 6 & 7....")
"RTN","IBY320PO",292,0)
 S X="IBXSC6",Y=$$FIND1^DIC(.402,,"X","IB SCREEN6","B"),DMAX=8000
"RTN","IBY320PO",293,0)
 I Y D EN^DIEZ
"RTN","IBY320PO",294,0)
 S X="IBXSC7",Y=$$FIND1^DIC(.402,,"X","IB SCREEN7","B"),DMAX=8000
"RTN","IBY320PO",295,0)
 I Y D EN^DIEZ
"RTN","IBY320PO",296,0)
RITX ;
"RTN","IBY320PO",297,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY320PO",298,0)
 D UPDATE^XPDID(9)
"RTN","IBY320PO",299,0)
 Q
"RTN","IBY320PO",300,0)
 ;
"RTN","IBY320PR")
0^^B90464501
"RTN","IBY320PR",1,0)
IBY320PR ;ALB/ESG - Pre-Install for IB patch 320 ;05-JAN-2006
"RTN","IBY320PR",2,0)
 ;;2.0;INTEGRATED BILLING;**320**;21-MAR-94
"RTN","IBY320PR",3,0)
 ;
"RTN","IBY320PR",4,0)
 D DELLOC      ; delete local output formatter overrides
"RTN","IBY320PR",5,0)
 D DELOF       ; delete output formatter entries
"RTN","IBY320PR",6,0)
 D DELLIST     ; delete modified list templates
"RTN","IBY320PR",7,0)
 D DELXREFS    ; Delete XREFS added in ealier version of this patch
"RTN","IBY320PR",8,0)
 D EMAIL       ; generate message with existing provider ID types
"RTN","IBY320PR",9,0)
 ;
"RTN","IBY320PR",10,0)
 Q
"RTN","IBY320PR",11,0)
 ;
"RTN","IBY320PR",12,0)
DELOF ; Delete included output formatter entries
"RTN","IBY320PR",13,0)
 NEW FILE,DIK,LN,TAG,DATA,PCE,DA,Y
"RTN","IBY320PR",14,0)
 F FILE=5,6,7 S DIK="^IBA(364."_FILE_"," F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  D
"RTN","IBY320PR",15,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA("364."_FILE,DA,0)) D ^DIK
"RTN","IBY320PR",16,0)
 . Q
"RTN","IBY320PR",17,0)
 ;
"RTN","IBY320PR",18,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY320PR",19,0)
 ; re-added later.  These are erroneous entries in file 364.6.
"RTN","IBY320PR",20,0)
 S DIK="^IBA(364.6,",TAG="DEL6+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY320PR",21,0)
 I DATA'="" D
"RTN","IBY320PR",22,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.6,DA,0)) D ^DIK
"RTN","IBY320PR",23,0)
 . Q
"RTN","IBY320PR",24,0)
 ;
"RTN","IBY320PR",25,0)
 ; Also delete output formatter entries which are not going to be
"RTN","IBY320PR",26,0)
 ; re-added later.  These are erroneous entries in file 364.7.
"RTN","IBY320PR",27,0)
 S DIK="^IBA(364.7,",TAG="DEL7+2",DATA=$P($T(@TAG),";;",2)
"RTN","IBY320PR",28,0)
 I DATA'="" D
"RTN","IBY320PR",29,0)
 . F PCE=2:1 S DA=$P(DATA,U,PCE) Q:'DA  I $D(^IBA(364.7,DA,0)) D ^DIK
"RTN","IBY320PR",30,0)
 . Q
"RTN","IBY320PR",31,0)
DELOFX ;
"RTN","IBY320PR",32,0)
 Q
"RTN","IBY320PR",33,0)
 ;
"RTN","IBY320PR",34,0)
INCLUDE(FILE,Y) ; function to determine if output formatter entry should be
"RTN","IBY320PR",35,0)
 ; included in the build
"RTN","IBY320PR",36,0)
 ; FILE=5,6,7 indicating file 364.x
"RTN","IBY320PR",37,0)
 ; Y=ien to file
"RTN","IBY320PR",38,0)
 ;
"RTN","IBY320PR",39,0)
 NEW OK,LN,TAG,DATA
"RTN","IBY320PR",40,0)
 S OK=0
"RTN","IBY320PR",41,0)
 F LN=2:1 S TAG="ENT"_FILE_"+"_LN,DATA=$P($T(@TAG),";;",2) Q:DATA=""  I $F(DATA,U_Y_U) S OK=1 Q
"RTN","IBY320PR",42,0)
INCLUDEX ;
"RTN","IBY320PR",43,0)
 Q OK
"RTN","IBY320PR",44,0)
 ;
"RTN","IBY320PR",45,0)
ENT5 ; output formatter entries in file 364.5 to be included
"RTN","IBY320PR",46,0)
 ;
"RTN","IBY320PR",47,0)
 ;;^111^112^113^
"RTN","IBY320PR",48,0)
 ;;
"RTN","IBY320PR",49,0)
 ;
"RTN","IBY320PR",50,0)
ENT6 ; output formatter entries in file 364.6 to be included
"RTN","IBY320PR",51,0)
 ;
"RTN","IBY320PR",52,0)
 ;;^169^226^227^968^971^1015^1051^1065^1094^1095^1096^1097^
"RTN","IBY320PR",53,0)
 ;;^1098^1099^1100^1101^1102^1103^1104^1190^1191^1192^1289^1316^1317^
"RTN","IBY320PR",54,0)
 ;;
"RTN","IBY320PR",55,0)
 ;
"RTN","IBY320PR",56,0)
ENT7 ; output formatter entries in file 364.7 to be included
"RTN","IBY320PR",57,0)
 ;
"RTN","IBY320PR",58,0)
 ;;^12^156^157^159^160^188^196^203^204^208^209^211^225^226^227^256^
"RTN","IBY320PR",59,0)
 ;;^375^376^377^378^379^380^381^382^383^384^
"RTN","IBY320PR",60,0)
 ;;^385^387^388^389^390^392^393^395^396^397^398^399^400^401^402^
"RTN","IBY320PR",61,0)
 ;;^403^405^406^407^408^409^410^411^412^413^552^553^554^555^556^557^558^
"RTN","IBY320PR",62,0)
 ;;^559^576^577^578^579^580^581^582^583^584^585^586^587^588^589^590^591^
"RTN","IBY320PR",63,0)
 ;;^646^900^947^948^954^1009^1015^1020^1022^1023^1031^1032^1033^
"RTN","IBY320PR",64,0)
 ;;
"RTN","IBY320PR",65,0)
 ;
"RTN","IBY320PR",66,0)
DEL6 ; remove output formatter entries in file 364.6 (not re-added)
"RTN","IBY320PR",67,0)
 ;
"RTN","IBY320PR",68,0)
 ;;^1066^1067^1068^1069^1071^1013^1302^
"RTN","IBY320PR",69,0)
 ;;
"RTN","IBY320PR",70,0)
 ;
"RTN","IBY320PR",71,0)
DEL7 ; remove output formatter entries in file 364.7 (not re-added)
"RTN","IBY320PR",72,0)
 ;
"RTN","IBY320PR",73,0)
 ;;^187^214^249^302^316^324^325^353^468^568^570^571^572^573^574^575^899^1014^1017^
"RTN","IBY320PR",74,0)
 ;;
"RTN","IBY320PR",75,0)
 ;
"RTN","IBY320PR",76,0)
 Q
"RTN","IBY320PR",77,0)
 ;
"RTN","IBY320PR",78,0)
DELLOC ; This procedure removes certain local output formatter overrides
"RTN","IBY320PR",79,0)
 ;
"RTN","IBY320PR",80,0)
 NEW FORM,IBX2,NI6,NI7,LI6,LI7,DIK,DA,DIE,DR,IBY,XMDUZ,XMSUBJ,XMBODY,XMTO
"RTN","IBY320PR",81,0)
 ;
"RTN","IBY320PR",82,0)
 S DIE=353,DA=8,DR="2.08///@;2.05///@" D ^DIE   ; to make sure EDI uses #8
"RTN","IBY320PR",83,0)
 ;
"RTN","IBY320PR",84,0)
 S IBY="P320-LOFO"   ; patch 320 local output formatter override
"RTN","IBY320PR",85,0)
 KILL ^TMP($J,IBY)
"RTN","IBY320PR",86,0)
 S ^TMP($J,IBY)=0
"RTN","IBY320PR",87,0)
 ;
"RTN","IBY320PR",88,0)
 S FORM=8   ; start here to skip over the normal national form types
"RTN","IBY320PR",89,0)
 F  S FORM=$O(^IBE(353,FORM)) Q:'FORM  D
"RTN","IBY320PR",90,0)
 . S IBX2=$G(^IBE(353,FORM,2))
"RTN","IBY320PR",91,0)
 . I $P(IBX2,U,2)'="T" Q      ; only deal with transmitted forms
"RTN","IBY320PR",92,0)
 . I $P(IBX2,U,4) Q           ; don't mess with national form types
"RTN","IBY320PR",93,0)
 . I '$P(IBX2,U,5) D DELFRM(FORM) Q    ; no parent form type
"RTN","IBY320PR",94,0)
 . ;
"RTN","IBY320PR",95,0)
 . ; Check local overrides one by one
"RTN","IBY320PR",96,0)
 . S NI6=0 F  S NI6=$O(^IBA(364.6,"APAR",FORM,NI6)) Q:'NI6  D
"RTN","IBY320PR",97,0)
 .. S NI7=$O(^IBA(364.7,"B",NI6,0)) Q:'NI7
"RTN","IBY320PR",98,0)
 .. I '$$INCLUDE(6,NI6),'$$INCLUDE(7,NI7) Q    ; not included with patch
"RTN","IBY320PR",99,0)
 .. S LI6=0 F  S LI6=$O(^IBA(364.6,"APAR",FORM,NI6,LI6)) Q:'LI6  D
"RTN","IBY320PR",100,0)
 ... S LI7=0 F  S LI7=$O(^IBA(364.7,"B",LI6,LI7)) Q:'LI7  D
"RTN","IBY320PR",101,0)
 .... D DISP(LI6,LI7)    ; display data before deletion
"RTN","IBY320PR",102,0)
 .... S DIK="^IBA(364.7,",DA=LI7 D ^DIK
"RTN","IBY320PR",103,0)
 .... Q
"RTN","IBY320PR",104,0)
 ... S DIK="^IBA(364.6,",DA=LI6 D ^DIK
"RTN","IBY320PR",105,0)
 ... Q
"RTN","IBY320PR",106,0)
 .. Q
"RTN","IBY320PR",107,0)
 . ;
"RTN","IBY320PR",108,0)
 . ; delete the local form if there are no more overrides
"RTN","IBY320PR",109,0)
 . I '$D(^IBA(364.6,"APAR",FORM)) S DIK="^IBE(353,",DA=FORM D ^DIK
"RTN","IBY320PR",110,0)
 . Q
"RTN","IBY320PR",111,0)
 ;
"RTN","IBY320PR",112,0)
 I '$G(^TMP($J,IBY)) G DELLOCX    ; no message data to send
"RTN","IBY320PR",113,0)
 ;
"RTN","IBY320PR",114,0)
 ; send message
"RTN","IBY320PR",115,0)
 S XMDUZ=DUZ
"RTN","IBY320PR",116,0)
 S XMSUBJ="Removal of local output formatter overrides (IB*2*320)"
"RTN","IBY320PR",117,0)
 S XMBODY="^TMP($J,"""_IBY_""")"
"RTN","IBY320PR",118,0)
 S XMTO(DUZ)=""
"RTN","IBY320PR",119,0)
 S XMTO("G.IB EDI SUPERVISOR")=""
"RTN","IBY320PR",120,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO)
"RTN","IBY320PR",121,0)
 KILL ^TMP($J,IBY)
"RTN","IBY320PR",122,0)
DELLOCX ;
"RTN","IBY320PR",123,0)
 Q
"RTN","IBY320PR",124,0)
 ;
"RTN","IBY320PR",125,0)
DISP(LI6,LI7) ; Display output formatter data on screen and in install file
"RTN","IBY320PR",126,0)
 ; LI6 - local ien to file 364.6
"RTN","IBY320PR",127,0)
 ; LI7 - local ien to file 364.7
"RTN","IBY320PR",128,0)
 NEW LD6,NI6,ND6,LD70,LD71,INS,LDC,MSG,Q,ZLN,FIEN,FL,GG
"RTN","IBY320PR",129,0)
 S LD6=$G(^IBA(364.6,LI6,0)),NI6=+$P(LD6,U,3),ND6=$G(^IBA(364.6,NI6,0))
"RTN","IBY320PR",130,0)
 S LD70=$G(^IBA(364.7,LI7,0)),LD71=$G(^IBA(364.7,LI7,1))
"RTN","IBY320PR",131,0)
 S INS=$$INSCO^IBCNSC02(+$P(LD70,U,5)),FIEN=+$P(LD6,U,1)
"RTN","IBY320PR",132,0)
 M LDC=^IBA(364.7,LI7,3)
"RTN","IBY320PR",133,0)
 S MSG(1)="Removing local output formatter field:  Sequence# "
"RTN","IBY320PR",134,0)
 S MSG(1)=MSG(1)_$P(ND6,U,4)_", Piece# "_$P(ND6,U,8)
"RTN","IBY320PR",135,0)
 S MSG(2)=$$FO^IBCNEUT1("  Local 364.6 ien="_LI6,25)
"RTN","IBY320PR",136,0)
 S MSG(2)=MSG(2)_"- "_$P(LD6,U,10)
"RTN","IBY320PR",137,0)
 S MSG(3)=$$FO^IBCNEUT1("  Nat'l 364.6 ien="_NI6,25)
"RTN","IBY320PR",138,0)
 S MSG(3)=MSG(3)_"- "_$P(ND6,U,10)
"RTN","IBY320PR",139,0)
 S MSG(4)="  Local 364.7 ien="_LI7
"RTN","IBY320PR",140,0)
 S MSG(5)="          Form:  "_$$EXTERNAL^DILFD(364.6,.01,,$P(LD6,U,1))_"  ("_$P(LD6,U,1)_")"
"RTN","IBY320PR",141,0)
 S MSG(6)="  Data Element:  "_$$EXTERNAL^DILFD(364.7,.03,,$P(LD70,U,3))
"RTN","IBY320PR",142,0)
 S MSG(7)="  Ins. Company:  "_$E(INS,1,53)
"RTN","IBY320PR",143,0)
 S MSG(8)=$J("",44)_$E(INS,54,99)
"RTN","IBY320PR",144,0)
 S MSG(9)="     Bill Type:  "_$$EXTERNAL^DILFD(364.7,.06,,$P(LD70,U,6))
"RTN","IBY320PR",145,0)
 S MSG(10)="   Format Code:  "_LD71
"RTN","IBY320PR",146,0)
 S MSG(11)="   Description:  "_$G(LDC(1,0))
"RTN","IBY320PR",147,0)
 S Q=1,ZLN=11 F  S Q=$O(LDC(Q)) Q:'Q  S ZLN=ZLN+1,MSG(ZLN)="                 "_$G(LDC(Q,0))
"RTN","IBY320PR",148,0)
 S ZLN=ZLN+1,MSG(ZLN)="--------------------------------------------------------------------------"
"RTN","IBY320PR",149,0)
 S ZLN=ZLN+1,MSG(ZLN)=""
"RTN","IBY320PR",150,0)
 ;
"RTN","IBY320PR",151,0)
 ; update mailman message array
"RTN","IBY320PR",152,0)
 S GG=+$G(^TMP($J,IBY))
"RTN","IBY320PR",153,0)
 F FL=1:1:ZLN S GG=GG+1,^TMP($J,IBY,GG)=$G(MSG(FL)),^TMP($J,IBY)=GG
"RTN","IBY320PR",154,0)
 ;
"RTN","IBY320PR",155,0)
 D MES^XPDUTL(.MSG)
"RTN","IBY320PR",156,0)
DISPX ;
"RTN","IBY320PR",157,0)
 Q
"RTN","IBY320PR",158,0)
 ;
"RTN","IBY320PR",159,0)
DELFRM(FORM) ; Delete the local form and all entries in files 364.6 & 364.7
"RTN","IBY320PR",160,0)
 NEW I6,I7,DIK,DA
"RTN","IBY320PR",161,0)
 I '$G(FORM) G DELFRMX
"RTN","IBY320PR",162,0)
 S I6=0 F  S I6=$O(^IBA(364.6,"B",FORM,I6)) Q:'I6  D
"RTN","IBY320PR",163,0)
 . S I7=0 F  S I7=$O(^IBA(364.7,"B",I6,I7)) Q:'I7  D
"RTN","IBY320PR",164,0)
 .. D DISP(I6,I7)   ; display data before deletion
"RTN","IBY320PR",165,0)
 .. S DIK="^IBA(364.7,",DA=I7 D ^DIK
"RTN","IBY320PR",166,0)
 .. Q
"RTN","IBY320PR",167,0)
 . S DIK="^IBA(364.6,",DA=I6 D ^DIK
"RTN","IBY320PR",168,0)
 . Q
"RTN","IBY320PR",169,0)
 S DIK="^IBE(353,",DA=FORM D ^DIK
"RTN","IBY320PR",170,0)
DELFRMX ;
"RTN","IBY320PR",171,0)
 Q
"RTN","IBY320PR",172,0)
 ;
"RTN","IBY320PR",173,0)
DELLIST ; delete existing list templates which are included in the build
"RTN","IBY320PR",174,0)
 NEW LST,DIK,DA
"RTN","IBY320PR",175,0)
 S DIK="^SD(409.61,"
"RTN","IBY320PR",176,0)
 S LST="IBCE PRVFAC MAINT",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",177,0)
 S LST="IBCE PRVMAINT",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",178,0)
 S LST="IBCE PRVNVA MAINT",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",179,0)
 S LST="IBCE PRVPRV MAINT",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",180,0)
 S LST="IBCE VIEW PREV TRANS1",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",181,0)
 S LST="IBCE VIEW PREV TRANS2",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",182,0)
 S LST="IBCEM CSA LIST",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",183,0)
 S LST="IBCEM CSA MSG",DA=$O(^SD(409.61,"B",LST,0)) I DA D ^DIK
"RTN","IBY320PR",184,0)
DELLISTX ;
"RTN","IBY320PR",185,0)
 Q
"RTN","IBY320PR",186,0)
 ;
"RTN","IBY320PR",187,0)
EMAIL ; This procedure generates and sends a message about the pre-patch 320
"RTN","IBY320PR",188,0)
 ; entries in file 355.97 - provider ID types
"RTN","IBY320PR",189,0)
 NEW IEN,DATA,Z1,Z2,Z4,IBX,ZLN,MSG,XMDUZ,XMSUBJ,XMBODY,XMTO,BFLG,IBZ
"RTN","IBY320PR",190,0)
 S IEN=0,BFLG=0
"RTN","IBY320PR",191,0)
 F  S IEN=$O(^IBE(355.97,IEN)) Q:'IEN  D
"RTN","IBY320PR",192,0)
 . S DATA=$G(^IBE(355.97,IEN,0))
"RTN","IBY320PR",193,0)
 . I $P($G(^IBE(355.97,IEN,1)),U,4) S $P(DATA,U,4)=$P($G(^IBE(350.9,1,1)),U,5)    ; federal tax id#
"RTN","IBY320PR",194,0)
 . S Z2=$S($P(DATA,U,2)=0:0,$P(DATA,U,2)=2:2,1:"OTHER")
"RTN","IBY320PR",195,0)
 . S Z1=$P(DATA,U,1) I Z1="" S Z1="~Unknown"
"RTN","IBY320PR",196,0)
 . S Z4=" "_$P(DATA,U,4)
"RTN","IBY320PR",197,0)
 . S IBX(Z2,Z1,Z4)=""
"RTN","IBY320PR",198,0)
 . I $O(^IBE(355.97,"B",Z1,""))'=$O(^IBE(355.97,"B",Z1,""),-1) S BFLG=1
"RTN","IBY320PR",199,0)
 . Q
"RTN","IBY320PR",200,0)
 ;
"RTN","IBY320PR",201,0)
 S MSG(1)="This message is generated by the pre-install routine for IB patch 320 which"
"RTN","IBY320PR",202,0)
 S MSG(2)="is eClaims Plus Iteration 2."
"RTN","IBY320PR",203,0)
 S MSG(3)=""
"RTN","IBY320PR",204,0)
 S MSG(4)="This patch removes the ability to view or edit the IDs that were previously"
"RTN","IBY320PR",205,0)
 S MSG(5)="defined in Set #14 of the IB Site Parameters and also in the Provider ID"
"RTN","IBY320PR",206,0)
 S MSG(6)="Maintenance option, Selection #3."
"RTN","IBY320PR",207,0)
 S MSG(7)=""
"RTN","IBY320PR",208,0)
 S MSG(8)="This message is being generated to capture a snapshot of what this data"
"RTN","IBY320PR",209,0)
 S MSG(9)="looked like prior to the installation of IB patch 320."
"RTN","IBY320PR",210,0)
 S MSG(10)=""
"RTN","IBY320PR",211,0)
 S MSG(11)="If any of these IDs are still needed, then they may be defined by using the"
"RTN","IBY320PR",212,0)
 S MSG(12)="Additional IDs screen in the Insurance Company Editor --> Provider IDs/ID"
"RTN","IBY320PR",213,0)
 S MSG(13)="Parameters.   The correct Medicare numbers will be automatically populated"
"RTN","IBY320PR",214,0)
 S MSG(14)="by the software.  The default UPIN for Medicare can be defined in the"
"RTN","IBY320PR",215,0)
 S MSG(15)="Provider ID Maintenance option, Selection #2 as the insurance company"
"RTN","IBY320PR",216,0)
 S MSG(16)="default if it is not already there."
"RTN","IBY320PR",217,0)
 S MSG(17)=""
"RTN","IBY320PR",218,0)
 S MSG(18)="Provider ID Type                Provider ID"
"RTN","IBY320PR",219,0)
 S MSG(19)="----------------------------------------------------------------"
"RTN","IBY320PR",220,0)
 ;
"RTN","IBY320PR",221,0)
 S ZLN=19
"RTN","IBY320PR",222,0)
 F Z2=2,0,"OTHER" S Z1="" F  S Z1=$O(IBX(Z2,Z1)) Q:Z1=""  S Z4="" F  S Z4=$O(IBX(Z2,Z1,Z4)) Q:Z4=""  D
"RTN","IBY320PR",223,0)
 . S ZLN=ZLN+1,MSG(ZLN)=$$FO^IBCNEUT1(Z1,30)_":"_Z4
"RTN","IBY320PR",224,0)
 . Q
"RTN","IBY320PR",225,0)
 ;
"RTN","IBY320PR",226,0)
 ; send message
"RTN","IBY320PR",227,0)
 S XMDUZ=DUZ
"RTN","IBY320PR",228,0)
 S XMSUBJ="Legacy Billing Provider Secondary IDs and ID Types (IB*2*320)"
"RTN","IBY320PR",229,0)
 S XMBODY="MSG"
"RTN","IBY320PR",230,0)
 S XMTO(DUZ)=""
"RTN","IBY320PR",231,0)
 S XMTO("G.IB EDI SUPERVISOR")=""
"RTN","IBY320PR",232,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO)
"RTN","IBY320PR",233,0)
 ;
"RTN","IBY320PR",234,0)
 ; send another msg if duplicate data found
"RTN","IBY320PR",235,0)
 I 'BFLG G EMAILX
"RTN","IBY320PR",236,0)
 ;
"RTN","IBY320PR",237,0)
 K MSG,XMTO S MSG(1)="Site Identification:  "_$$SITE^VASITE(),MSG(2)=""
"RTN","IBY320PR",238,0)
 ;
"RTN","IBY320PR",239,0)
 S IBZ="^IBE(355.97)",ZLN=2
"RTN","IBY320PR",240,0)
 F  S IBZ=$Q(@IBZ) Q:IBZ'[355.97  D
"RTN","IBY320PR",241,0)
 . I $P(IBZ,",",3)="1)" Q
"RTN","IBY320PR",242,0)
 . S ZLN=ZLN+1
"RTN","IBY320PR",243,0)
 . S MSG(ZLN)=IBZ_" = "_$G(@IBZ)
"RTN","IBY320PR",244,0)
 . Q
"RTN","IBY320PR",245,0)
 ;
"RTN","IBY320PR",246,0)
 ; send message
"RTN","IBY320PR",247,0)
 S XMDUZ=DUZ
"RTN","IBY320PR",248,0)
 S XMSUBJ="Duplicate Data found in file 355.97 (IB*2*320)"
"RTN","IBY320PR",249,0)
 S XMBODY="MSG"
"RTN","IBY320PR",250,0)
 S XMTO("Bill.Jutzi@va.gov")=""
"RTN","IBY320PR",251,0)
 S XMTO("Eric.Gustafson@va.gov")=""
"RTN","IBY320PR",252,0)
 D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO)
"RTN","IBY320PR",253,0)
 ;
"RTN","IBY320PR",254,0)
EMAILX ;
"RTN","IBY320PR",255,0)
 Q
"RTN","IBY320PR",256,0)
 ;
"RTN","IBY320PR",257,0)
DELXREFS ;
"RTN","IBY320PR",258,0)
 D BMES^XPDUTL("Removing triggers")
"RTN","IBY320PR",259,0)
 D DELIX^DDMOD(399.0222,.05,2)
"RTN","IBY320PR",260,0)
 N III F III=.06,.07,.12,.13,.14 D DELIX^DDMOD(399.0222,III,1)
"RTN","IBY320PR",261,0)
 D MES^XPDUTL("Done")
"RTN","IBY320PR",262,0)
 ;
"UP",36,36.013,-1)
36^13
"UP",36,36.013,0)
36.013
"UP",361.4,361.41,-1)
361.4^1
"UP",361.4,361.41,0)
361.41
"UP",399,399.0222,-1)
399^PRV
"UP",399,399.0222,0)
399.0222
"VER")
8.0^22.0
"^DD",36,36,.01,0)
NAME^RFX^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",36,36,.01,.1)
INSURANCE COMPANY FILE
"^DD",36,36,.01,1,0)
^.1
"^DD",36,36,.01,1,1,0)
36^B
"^DD",36,36,.01,1,1,1)
S ^DIC(36,"B",$E(X,1,30),DA)=""
"^DD",36,36,.01,1,1,2)
K ^DIC(36,"B",$E(X,1,30),DA)
"^DD",36,36,.01,1,2,0)
^^TRIGGER^36^4.04
"^DD",36,36,.01,1,2,1)
X ^DD(36,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="22" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,4)=DIV,DIH=36,DIG=4.04 D ^DICR
"^DD",36,36,.01,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($G(^IBE(355.97,+$P(Y(1),U,4),0)),U)=""
"^DD",36,36,.01,1,2,2)
Q
"^DD",36,36,.01,1,2,"CREATE CONDITION")
REF PROV SEC ID DEF HCFA=""
"^DD",36,36,.01,1,2,"CREATE VALUE")
"22"
"^DD",36,36,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,2,"DT")
3060308
"^DD",36,36,.01,1,2,"FIELD")
REF PROV SEC ID DEF HCFA
"^DD",36,36,.01,1,3,0)
^^TRIGGER^36^4.05
"^DD",36,36,.01,1,3,1)
X ^DD(36,.01,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,5)=DIV,DIH=36,DIG=4.05 D ^DICR
"^DD",36,36,.01,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.05,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,5)_":",2),$C(59))=""
"^DD",36,36,.01,1,3,2)
Q
"^DD",36,36,.01,1,3,"CREATE CONDITION")
REF PROV SEC ID REQ ON CLAIMS=""
"^DD",36,36,.01,1,3,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,3,"DT")
3060308
"^DD",36,36,.01,1,3,"FIELD")
REF PROV SEC ID REQ ON CLAIMS
"^DD",36,36,.01,1,4,0)
^^TRIGGER^36^4.06
"^DD",36,36,.01,1,4,1)
X ^DD(36,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,6)=DIV,DIH=36,DIG=4.06 D ^DICR
"^DD",36,36,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.06,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,6)_":",2),$C(59))=""
"^DD",36,36,.01,1,4,2)
Q
"^DD",36,36,.01,1,4,"CREATE CONDITION")
#4.06=""
"^DD",36,36,.01,1,4,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,4,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,4,"DT")
3060504
"^DD",36,36,.01,1,4,"FIELD")
ATT/REND ID BILL SEC ID PROF
"^DD",36,36,.01,1,5,0)
^^TRIGGER^36^4.07
"^DD",36,36,.01,1,5,1)
X ^DD(36,.01,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X=DIV S X="1" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,7)=DIV,DIH=36,DIG=4.07 D ^DICR
"^DD",36,36,.01,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.07,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,7)_":",2),$C(59))=""
"^DD",36,36,.01,1,5,2)
Q
"^DD",36,36,.01,1,5,"CREATE CONDITION")
SEND LAB OR FAC IDS FOR VAMC=""
"^DD",36,36,.01,1,5,"CREATE VALUE")
"1"
"^DD",36,36,.01,1,5,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,5,"DT")
3060308
"^DD",36,36,.01,1,5,"FIELD")
SEND LAB OR FAC IDS FOR VAMC
"^DD",36,36,.01,1,6,0)
^^TRIGGER^36^4.08
"^DD",36,36,.01,1,6,1)
X ^DD(36,.01,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X=DIV S X="0" S DIH=$G(^DIC(36,DIV(0),4)),DIV=X S $P(^(4),U,8)=DIV,DIH=36,DIG=4.08 D ^DICR
"^DD",36,36,.01,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$C(59)_$P($G(^DD(36,4.08,0)),U,3),Y(1)=$S($D(^DIC(36,D0,4)):^(4),1:"") S X=$P($P(Y(2),$C(59)_$P(Y(1),U,8)_":",2),$C(59))=""
"^DD",36,36,.01,1,6,2)
Q
"^DD",36,36,.01,1,6,"CREATE CONDITION")
#4.08=""
"^DD",36,36,.01,1,6,"CREATE VALUE")
"0"
"^DD",36,36,.01,1,6,"DELETE VALUE")
NO EFFECT
"^DD",36,36,.01,1,6,"DT")
3060504
"^DD",36,36,.01,1,6,"FIELD")
ATT/REND ID BILL SEC ID INST
"^DD",36,36,.01,3)
ANSWER MUST BE 3-30 CHARACTERS IN LENGTH
"^DD",36,36,.01,21,0)
^^5^5^2941201^^^^
"^DD",36,36,.01,21,1,0)
Enter the name of the insurance carrier which at least one patient seen
"^DD",36,36,.01,21,2,0)
at your facility has.  This information must be updated using the 'Insurance
"^DD",36,36,.01,21,3,0)
Company Entry/Edit' option, NOT using VA FileMan.  Editing of this data
"^DD",36,36,.01,21,4,0)
through a filemanager option could cause negative impacts on the MAS and
"^DD",36,36,.01,21,5,0)
IB software modules in addition to other DHCP modules.
"^DD",36,36,.01,"DEL",1,0)
I 1 W !!,"You must use the 'Delete Company' action to delete a company... "
"^DD",36,36,.01,"DT")
3060504
"^DD",36,36,.06,0)
ALLOW MULTIPLE BEDSECTIONS^S^0:NO;1:YES;^0;6^Q
"^DD",36,36,.06,3)
Enter whether or not this Insurance Company will accept multiple bedsections on a claim form.  If left blank a NO is assumed.
"^DD",36,36,.06,21,0)
^^7^7^3051117^
"^DD",36,36,.06,21,1,0)
This field determines whether this insurance company will accept
"^DD",36,36,.06,21,2,0)
multiple bedsections on one claim form.  If answered 'YES' then
"^DD",36,36,.06,21,3,0)
selection of the PRIMARY INSURANCE CARRIER in MCCR will trigger
"^DD",36,36,.06,21,4,0)
revenue codes for all bedsections within the STATEMENT COVERS FROM
"^DD",36,36,.06,21,5,0)
and STATEMENT COVERS TO dates.
"^DD",36,36,.06,21,6,0)
If this is answered 'NO' or left blank then only the first
"^DD",36,36,.06,21,7,0)
bedsection in the date range will be used.
"^DD",36,36,.06,"DT")
3051117
"^DD",36,36,.07,0)
DIFFERENT REVENUE CODES TO USE^FX^^0;7^K:$L(X)>40!($L(X)<3) X I $D(X) X "F DGII=1:1:10 S DGINX=$P(X,"","",DGII) Q:DGINX=""""  I DGINX'?3N."":""3N K X Q" K DGII,DGINX
"^DD",36,36,.07,3)
Answer must be 3-40 characters in length.  Enter the 3 digit rev code that is being replaced followed by a ':' followed by the rev code to be used for this Ins Company.  (old RC:new RC,old RC:new RC)
"^DD",36,36,.07,21,0)
^^15^15^3051117^
"^DD",36,36,.07,21,1,0)
This field is used to replace standard revenue codes used on a
"^DD",36,36,.07,21,2,0)
bill with revenue codes requested by an insurance company.
"^DD",36,36,.07,21,3,0)
 
"^DD",36,36,.07,21,4,0)
The standard revenue codes are those codes found in the
"^DD",36,36,.07,21,5,0)
Charge Master and are used for most bills.
"^DD",36,36,.07,21,6,0)
 
"^DD",36,36,.07,21,7,0)
Enter the standard revenue code to be replaced followed by ':'
"^DD",36,36,.07,21,8,0)
followed by the revenue code the insurance company requires:
"^DD",36,36,.07,21,9,0)
 
"^DD",36,36,.07,21,10,0)
  500:510  will result in revenue code 500 being replaced
"^DD",36,36,.07,21,11,0)
           by 510 on this insurance company bills
"^DD",36,36,.07,21,12,0)
 
"^DD",36,36,.07,21,13,0)
Separate multiple revenue code replacement sets by a comma:
"^DD",36,36,.07,21,14,0)
 
"^DD",36,36,.07,21,15,0)
           101:240,500:510
"^DD",36,36,.07,"DT")
3051117
"^DD",36,36,.08,0)
ONE OPT. VISIT ON BILL ONLY^S^0:NO;1:YES;^0;8^Q
"^DD",36,36,.08,3)
Enter whether or not claom form's to this Insurance Company should allow only 1 outpatient visit per bill.
"^DD",36,36,.08,21,0)
^^5^5^3051117^
"^DD",36,36,.08,21,1,0)
If this field is answered 'YES' then only one outpatient visit
"^DD",36,36,.08,21,2,0)
will be allowed per claim form for this Insurance Company.
"^DD",36,36,.08,21,3,0)
 
"^DD",36,36,.08,21,4,0)
If it is unanswered or answered 'NO' then multiple (up to 10)
"^DD",36,36,.08,21,5,0)
outpatient bills will be allowed per claim form.
"^DD",36,36,.08,"DT")
3051117
"^DD",36,36,.13,0)
TYPE OF COVERAGE^P355.2'^IBE(355.2,^0;13^Q
"^DD",36,36,.13,21,0)
^^11^11^3051117^
"^DD",36,36,.13,21,1,0)
If this insurance carrier provides only one type of coverage then select
"^DD",36,36,.13,21,2,0)
the entry that best describes this carriers type of coverage.  If this
"^DD",36,36,.13,21,3,0)
carrier provides more than one type of coverage then select HEALTH
"^DD",36,36,.13,21,4,0)
INSURANCE.  The default answer if left unanswered is Health Insurance.
"^DD",36,36,.13,21,5,0)
 
"^DD",36,36,.13,21,6,0)
This is useful information when contacting carriers, when creating 
"^DD",36,36,.13,21,7,0)
claims for reimbursement, and when estimating if the payment
"^DD",36,36,.13,21,8,0)
received is appropriate.
"^DD",36,36,.13,21,9,0)
 
"^DD",36,36,.13,21,10,0)
If this field is answered it may affect choices that can be selected
"^DD",36,36,.13,21,11,0)
when entering policy or benefit information.
"^DD",36,36,.13,"DT")
3051117
"^DD",36,36,.15,0)
PRESCRIPTION REFILL REV. CODE^*P399.2'^DGCR(399.2,^0;15^S DIC("S")="I $P(^(0),U,3)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",36,36,.15,3)
Enter revenue code to be used for Rx refills.
"^DD",36,36,.15,12)
This is the Revenue Code that will automatically be generated for this insurance company if a prescription refill is listed on this bill.
"^DD",36,36,.15,12.1)
S DIC("S")="I $P(^(0),U,3)"
"^DD",36,36,.15,21,0)
^^3^3^3051117^
"^DD",36,36,.15,21,1,0)
This is the Revenue Code that will automatically be generated
"^DD",36,36,.15,21,2,0)
for this insurance company if a prescription refill is listed
"^DD",36,36,.15,21,3,0)
on this bill.
"^DD",36,36,.15,"DT")
3051117
"^DD",36,36,3.01,0)
TRANSMIT ELECTRONICALLY^SX^0:NO;1:YES-LIVE;2:YES-TEST;^3;1^K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.01,3)
Enter 1 to bill electronically; 0 to print bills for this insurance co; 2 to only transmit for testing
"^DD",36,36,3.01,21,0)
^^2^2^2990825^^^^
"^DD",36,36,3.01,21,1,0)
This is the flag that says whether or not an insurance company is ready
"^DD",36,36,3.01,21,2,0)
to be billed electronically via 837/EDI functions.
"^DD",36,36,3.01,"DT")
3060203
"^DD",36,36,3.02,0)
EDI ID NUMBER - PROF^FX^^3;2^K:$L(X)>30!($L(X)<1) X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.02,3)
Answer must be 1-30 characters in length.
"^DD",36,36,3.02,21,0)
^^2^2^2990907^^^^
"^DD",36,36,3.02,21,1,0)
This is the ID number used to identify the insurance company for
"^DD",36,36,3.02,21,2,0)
professional claim transmissions.
"^DD",36,36,3.02,"DT")
3060203
"^DD",36,36,3.04,0)
EDI ID NUMBER - INST^FX^^3;4^K:$L(X)>30!($L(X)<1) X I $D(X) K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.04,3)
Answer must be 1-30 characters in length.
"^DD",36,36,3.04,21,0)
^.001^2^2^3000512^^^
"^DD",36,36,3.04,21,1,0)
This is the id number used to identify the insurance company for
"^DD",36,36,3.04,21,2,0)
institutional claim transmissions.
"^DD",36,36,3.04,"DT")
3060203
"^DD",36,36,3.09,0)
ELECTRONIC INSURANCE TYPE^SX^1:HMO;2:COMMERCIAL;3:MEDICARE;4:MEDICAID;5:GROUP POLICY;9:OTHER;^3;9^K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.09,3)
ENTER THE TYPE OF INSURANCE FOR ELECTRONIC TRANSMISSION PURPOSES
"^DD",36,36,3.09,21,0)
^^6^6^3051117^
"^DD",36,36,3.09,21,1,0)
This field contains the code to be used in the electronic
"^DD",36,36,3.09,21,2,0)
transmission of claims to identify the type of insurance
"^DD",36,36,3.09,21,3,0)
company the claim is for.
"^DD",36,36,3.09,21,4,0)
The default, if this field is blank, is Group Policy.
"^DD",36,36,3.09,21,5,0)
If you select GROUP POLICY, this will force a check in the
"^DD",36,36,3.09,21,6,0)
GROUP insurance box of the HCFA 1500/BOX 1.
"^DD",36,36,3.09,"DT")
3060203
"^DD",36,36,3.13,0)
INS COMPANY LINK TYPE^SX^P:PARENT;C:CHILD;^3;13^K:$D(^DIC(36,"APC",DA))&(X'="P") X K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.13,.1)
Define Insurance Company as Parent or Child
"^DD",36,36,3.13,1,0)
^.1
"^DD",36,36,3.13,1,1,0)
^^TRIGGER^36^3.14
"^DD",36,36,3.13,1,1,1)
Q
"^DD",36,36,3.13,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=$P(Y(1),U,13),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X="" X ^DD(36,3.13,1,1,2.4)
"^DD",36,36,3.13,1,1,2.4)
S DIH=$G(^DIC(36,DIV(0),3)),DIV=X S $P(^(3),U,14)=DIV,DIH=36,DIG=3.14 D ^DICR
"^DD",36,36,3.13,1,1,"CREATE VALUE")
NO EFFECT
"^DD",36,36,3.13,1,1,"DELETE CONDITION")
INTERNAL(INS COMPANY LINK TYPE)'="C"
"^DD",36,36,3.13,1,1,"DELETE VALUE")
@
"^DD",36,36,3.13,1,1,"DT")
3051118
"^DD",36,36,3.13,1,1,"FIELD")
INS COMPANY LINK PARENT
"^DD",36,36,3.13,3)

"^DD",36,36,3.13,5,1,0)
36^3.14^2
"^DD",36,36,3.13,21,0)
^^10^10^3051114^
"^DD",36,36,3.13,21,1,0)
This field indicates if the insurance company is identified
"^DD",36,36,3.13,21,2,0)
as a Parent insurance company or a Child insurance company.
"^DD",36,36,3.13,21,3,0)
This linkage between parent insurance companies and children
"^DD",36,36,3.13,21,4,0)
insurance companies allows for easier maintenance of billing
"^DD",36,36,3.13,21,5,0)
provider secondary ID's.
"^DD",36,36,3.13,21,6,0)
 
"^DD",36,36,3.13,21,7,0)
If this insurance company is currently defined as a Parent
"^DD",36,36,3.13,21,8,0)
insurance company and there are Children insurance companies
"^DD",36,36,3.13,21,9,0)
associated with it, then this field cannot be changed.
"^DD",36,36,3.13,21,10,0)
You must first disassociate the Children from the Parent.
"^DD",36,36,3.13,"DT")
3060504
"^DD",36,36,3.14,0)
INS COMPANY LINK PARENT^*P36'X^DIC(36,^3;14^S DIC("S")="I $P($G(^DIC(36,Y,3)),U,13)=""P"",$P($G(^DIC(36,DA,3)),U,13)=""C""" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X K:'$$EDIKEY^IBCNSC X
"^DD",36,36,3.14,.1)
Associate with which Parent Insurance Company
"^DD",36,36,3.14,1,0)
^.1
"^DD",36,36,3.14,1,1,0)
36^APC
"^DD",36,36,3.14,1,1,1)
S ^DIC(36,"APC",$E(X,1,30),DA)=""
"^DD",36,36,3.14,1,1,2)
K ^DIC(36,"APC",$E(X,1,30),DA)
"^DD",36,36,3.14,1,1,"%D",0)
^.101^1^1^3050623^^
"^DD",36,36,3.14,1,1,"%D",1,0)
Cross reference by Parent insurance company.
"^DD",36,36,3.14,1,1,"DT")
3050623
"^DD",36,36,3.14,1,2,0)
^^TRIGGER^36^3.13
"^DD",36,36,3.14,1,2,1)
X ^DD(36,3.14,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^DIC(36,DIV(0),3)),DIV=X S $P(^(3),U,13)=DIV,DIH=36,DIG=3.13 D ^DICR
"^DD",36,36,3.14,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(3)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=Y(0),X=X S X=X="",Y(1)=$G(X),Y(2)=$G(X) S X=$P(Y(3),U,13),X=X S X=X="C",Y=X,X=Y(1),X=X&Y
"^DD",36,36,3.14,1,2,2)
X ^DD(36,3.14,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^DIC(36,DIV(0),3)),DIV=X S $P(^(3),U,13)=DIV,DIH=36,DIG=3.13 D ^DICR
"^DD",36,36,3.14,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DIC(36,D0,3)):^(3),1:"") S X=$P(Y(1),U,14),X=X S X=X="",Y(2)=$G(X),Y(3)=$G(X) S X=$P(Y(1),U,13),X=X S X=X="C",Y=X,X=Y(2),X=X&Y
"^DD",36,36,3.14,1,2,"CREATE CONDITION")
INTERNAL(INS COMPANY LINK PARENT)=""&(INTERNAL(INS COMPANY LINK TYPE)="C")
"^DD",36,36,3.14,1,2,"CREATE VALUE")
@
"^DD",36,36,3.14,1,2,"DELETE CONDITION")
INTERNAL(INS COMPANY LINK PARENT)=""&(INTERNAL(INS COMPANY LINK TYPE)="C")
"^DD",36,36,3.14,1,2,"DELETE VALUE")
@
"^DD",36,36,3.14,1,2,"DT")
3051118
"^DD",36,36,3.14,1,2,"FIELD")
INS COMPANY LINK TYPE
"^DD",36,36,3.14,5,1,0)
36^3.13^1
"^DD",36,36,3.14,12)
Only parent insurance companies may be selected.
"^DD",36,36,3.14,12.1)
S DIC("S")="I $P($G(^DIC(36,Y,3)),U,13)=""P"",$P($G(^DIC(36,DA,3)),U,13)=""C"""
"^DD",36,36,3.14,21,0)
^^4^4^3050623^
"^DD",36,36,3.14,21,1,0)
This field identifies the parent insurance company link for
"^DD",36,36,3.14,21,2,0)
maintenance of billing provider secondary ID's.
"^DD",36,36,3.14,21,3,0)
This field is only valid for insurance companies identified
"^DD",36,36,3.14,21,4,0)
as children.
"^DD",36,36,3.14,"DT")
3060504
"^DD",36,36,4.01,0)
PERF PROV SECOND ID TYPE HCFA^*P355.97'^IBE(355.97,^4;1^S DIC("S")="I $P(^(0),U,3)'=""1A"",$P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",36,36,4.01,1,0)
^.1^^0
"^DD",36,36,4.01,3)
Enter the type of performing provider id # the insurance co requires on its HCFA 1500 bills
"^DD",36,36,4.01,12)
Must be valid id type for performing provider id
"^DD",36,36,4.01,12.1)
S DIC("S")="I $P(^(0),U,3)'=""1A"",$P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.01,21,0)
^^5^5^3060322^
"^DD",36,36,4.01,21,1,0)
This is the type of performing provider secondary id # that the 
"^DD",36,36,4.01,21,2,0)
insurance company expects on HCFA 1500 bills received from the 
"^DD",36,36,4.01,21,3,0)
V.A.  When the payer-specific provider id is extracted, this field
"^DD",36,36,4.01,21,4,0)
is used to determine where to get the default data from if another
"^DD",36,36,4.01,21,5,0)
secondary id is not entered for the claim.
"^DD",36,36,4.01,"DT")
3060417
"^DD",36,36,4.02,0)
PERF PROV SECOND ID TYPE UB^*P355.97'^IBE(355.97,^4;2^S DIC("S")="I $P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",36,36,4.02,3)
Enter the type of performing provider id # the insurance co requires on its UB92 bills
"^DD",36,36,4.02,12)
Must be valid id type for performing provider id.
"^DD",36,36,4.02,12.1)
S DIC("S")="I $P(^(0),U,3)'=""TJ"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.02,21,0)
^^4^4^3060322^
"^DD",36,36,4.02,21,1,0)
This is the type of performing provider id # that the insurance
"^DD",36,36,4.02,21,2,0)
company expects on UB92 bills received from the V.A.  When the
"^DD",36,36,4.02,21,3,0)
payer-specific provider id is extracted, this field is used to 
"^DD",36,36,4.02,21,4,0)
determine where to get the data from.
"^DD",36,36,4.02,"DT")
3060417
"^DD",36,36,4.04,0)
REF PROV SEC ID DEF HCFA^*P355.97'^IBE(355.97,^4;4^S DIC("S")="I $P(^(0),U,3)'=""1A"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",36,36,4.04,3)
Enter the referring providers secondary ID type to be used on outgoing claims
"^DD",36,36,4.04,5,1,0)
36^.01^2
"^DD",36,36,4.04,12)
Must be an allowable ID for a person
"^DD",36,36,4.04,12.1)
S DIC("S")="I $P(^(0),U,3)'=""1A"",$$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",36,36,4.04,21,0)
^^2^2^3060322^^
"^DD",36,36,4.04,21,1,0)
This is the default qualifier for a referring provider if there is a 
"^DD",36,36,4.04,21,2,0)
referring provider and the form type is HCFA.
"^DD",36,36,4.04,"DT")
3060418
"^DD",36,36,4.05,0)
REF PROV SEC ID REQ ON CLAIMS^S^1:HCFA;0:NONE;^4;5^Q
"^DD",36,36,4.05,3)
Enter 1 if this qualifier is required on HCFA claims that have a referring provider
"^DD",36,36,4.05,5,1,0)
36^.01^3
"^DD",36,36,4.05,21,0)
^^4^4^3060309^
"^DD",36,36,4.05,21,1,0)
This is a flag to determine if this qualifier is required on a HCFA.  If 
"^DD",36,36,4.05,21,2,0)
the flag is set to be required and there is a referring provider on the 
"^DD",36,36,4.05,21,3,0)
claim, then the referring provider must have the default qualifier
"^DD",36,36,4.05,21,4,0)
defined in REF PROV SEC ID DEF HCFA.
"^DD",36,36,4.05,"DT")
3060309
"^DD",36,36,4.06,0)
ATT/REND ID BILL SEC ID PROF^S^0:NO;1:YES;^4;6^Q
"^DD",36,36,4.06,.1)
For HCFA claims, use the Rendering ID as a Billing Provider secondary ID
"^DD",36,36,4.06,3)
Enter 1 if att/rend ID should be used as Billing Provider's secondary ID for HCFA claims
"^DD",36,36,4.06,5,1,0)
36^.01^4
"^DD",36,36,4.06,21,0)
^^3^3^3060504^
"^DD",36,36,4.06,21,1,0)
This flag is set for insurance companies that wish to have the 
"^DD",36,36,4.06,21,2,0)
attending/rendering provider secondary ID used as a billing provider 
"^DD",36,36,4.06,21,3,0)
secondary ID.  This applies to HCFA claims.
"^DD",36,36,4.06,"DT")
3060504
"^DD",36,36,4.07,0)
SEND LAB OR FAC IDS FOR VAMC^S^0:NO;1:YES;^4;7^Q
"^DD",36,36,4.07,.1)
 
"^DD",36,36,4.07,3)
Enter a 1 (YES) if Lab or Facility IDs should be sent for procedures performed at VAMC
"^DD",36,36,4.07,5,1,0)
36^.01^5
"^DD",36,36,4.07,21,0)
^^4^4^3060309^
"^DD",36,36,4.07,21,1,0)
This flag determines whether to send the lab/facility IDs if the services 
"^DD",36,36,4.07,21,2,0)
are performed at the VAMC.  Some insurances do not which to receive them 
"^DD",36,36,4.07,21,3,0)
because they are the same as the billing provider secondary IDs when the 
"^DD",36,36,4.07,21,4,0)
work is performed at the VAMC.
"^DD",36,36,4.07,"DT")
3060309
"^DD",36,36,4.08,0)
ATT/REND ID BILL SEC ID INST^S^0:NO;1:YES;^4;8^Q
"^DD",36,36,4.08,.1)
For UB claims, use the Attending ID as a Billing Provider secondary ID
"^DD",36,36,4.08,3)
Enter 1 if att/rend ID should be used as Billing Provider's secondary ID for UB claims
"^DD",36,36,4.08,5,1,0)
36^.01^6
"^DD",36,36,4.08,21,0)
^^3^3^3060504^
"^DD",36,36,4.08,21,1,0)
This flag is set for insurance companies that wish to have the
"^DD",36,36,4.08,21,2,0)
attending/rendering provider secondary ID used as a billing provider
"^DD",36,36,4.08,21,3,0)
secondary ID.  This applies to UB claims.
"^DD",36,36,4.08,"DT")
3060504
"^DD",36,36,13,0)
PLAN TYPES NO BILL PRV SEC ID^36.013SA^^13;0
"^DD",36,36,13,21,0)
^^2^2^3060307^
"^DD",36,36,13,21,1,0)
Enter all the Electronic plan types which will suppress Billing Provider 
"^DD",36,36,13,21,2,0)
Secondary and Additional IDs from being sent.
"^DD",36,36.013,0)
PLAN TYPES NO BILL PRV SEC ID SUB-FIELD^^.01^1
"^DD",36,36.013,0,"DT")
3051228
"^DD",36,36.013,0,"IX","B",36.013,.01)

"^DD",36,36.013,0,"NM","PLAN TYPES NO BILL PRV SEC ID")

"^DD",36,36.013,0,"UP")
36
"^DD",36,36.013,.01,0)
PLAN TYPES NO BILL PRV SEC ID^MS^16:HMO MEDICARE;MX:MEDICARE A OR B;TV:TITLE V;MC:MEDICAID;BL:BC/BS;CH:TRICARE;15:INDEMNITY;CI:COMMERCIAL;HM:HMO;DS:DISABILITY;12:PPO;13:POS;ZZ:OTHER;^0;1^Q
"^DD",36,36.013,.01,1,0)
^.1
"^DD",36,36.013,.01,1,1,0)
36.013^B
"^DD",36,36.013,.01,1,1,1)
S ^DIC(36,DA(1),13,"B",$E(X,1,30),DA)=""
"^DD",36,36.013,.01,1,1,2)
K ^DIC(36,DA(1),13,"B",$E(X,1,30),DA)
"^DD",36,36.013,.01,3)
Enter all the Electronic plan types which will suppress Billing Provider Secondary and Additional IDs from being sent.
"^DD",36,36.013,.01,21,0)
^^2^2^3060309^
"^DD",36,36.013,.01,21,1,0)
These are electronic plan types which cause the billing provider 
"^DD",36,36.013,.01,21,2,0)
secondary ids to be suppressed on the claim.
"^DD",36,36.013,.01,"DT")
3060309
"^DD",350.8,350.8,0)
FIELD^^10^7
"^DD",350.8,350.8,0,"DDA")
N
"^DD",350.8,350.8,0,"DT")
2930322
"^DD",350.8,350.8,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",350.8,350.8,0,"IX","AC",350.8,.03)

"^DD",350.8,350.8,0,"IX","B",350.8,.01)

"^DD",350.8,350.8,0,"IX","C",350.8,.03)

"^DD",350.8,350.8,0,"NM","IB ERROR")
 
"^DD",350.8,350.8,0,"VRPK")
IB
"^DD",350.8,350.8,.01,0)
NAME^RF^^0;1^K:$L(X)>30!(X?.N)!($L(X)<3)!'(X'?1P.E) X
"^DD",350.8,350.8,.01,1,0)
^.1
"^DD",350.8,350.8,.01,1,1,0)
350.8^B
"^DD",350.8,350.8,.01,1,1,1)
S ^IBE(350.8,"B",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.01,1,1,2)
K ^IBE(350.8,"B",$E(X,1,30),DA)
"^DD",350.8,350.8,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",350.8,350.8,.01,21,0)
^^2^2^2910305^^
"^DD",350.8,350.8,.01,21,1,0)
This is a free text name of the entry.  It should be namespaced with
"^DD",350.8,350.8,.01,21,2,0)
the namespace of the package reporting the error.
"^DD",350.8,350.8,.02,0)
ERROR MESSAGE^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",350.8,350.8,.02,3)
Answer must be 3-80 characters in length.
"^DD",350.8,350.8,.02,21,0)
^^3^3^2940209^^^^
"^DD",350.8,350.8,.02,21,1,0)
This is the text of the message as it will be displayed to a user or
"^DD",350.8,350.8,.02,21,2,0)
posted in a bulletin.  It should be as meaningful as possible to the
"^DD",350.8,350.8,.02,21,3,0)
person seeing the message.
"^DD",350.8,350.8,.03,0)
ERROR CODE^F^^0;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>9!($L(X)<1) X
"^DD",350.8,350.8,.03,1,0)
^.1
"^DD",350.8,350.8,.03,1,1,0)
350.8^AC
"^DD",350.8,350.8,.03,1,1,1)
S ^IBE(350.8,"AC",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,1,2)
K ^IBE(350.8,"AC",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,1,2,0)
350.8^C
"^DD",350.8,350.8,.03,1,2,1)
S ^IBE(350.8,"C",$E(X,1,30),DA)=""
"^DD",350.8,350.8,.03,1,2,2)
K ^IBE(350.8,"C",$E(X,1,30),DA)
"^DD",350.8,350.8,.03,3)
Answer must be 1-9 characters in length.
"^DD",350.8,350.8,.03,21,0)
^^9^9^2920219^^^^
"^DD",350.8,350.8,.03,21,1,0)
This is the error code that will be passed to or determined by
"^DD",350.8,350.8,.03,21,2,0)
Integrated Billing.  The format for the Error Code should be
"^DD",350.8,350.8,.03,21,3,0)
nnxxx, where nn is the reporting package namespace and xxx are numeric
"^DD",350.8,350.8,.03,21,4,0)
values.
"^DD",350.8,350.8,.03,21,5,0)
 
"^DD",350.8,350.8,.03,21,6,0)
This is the error code that will be passed as the second piece of
"^DD",350.8,350.8,.03,21,7,0)
the variable Y to IB when +Y=-1.  More than one error code can be
"^DD",350.8,350.8,.03,21,8,0)
placed in the second ^ piece of Y delimited by semi-colons.  Applications
"^DD",350.8,350.8,.03,21,9,0)
may call ^IBAERR to display the error message(s).
"^DD",350.8,350.8,.03,"DT")
2920219
"^DD",350.8,350.8,.04,0)
PACKAGE REPORTING ERROR^S^1:INTEGRATED BILLING;2:ACCOUNTS RECEIVABLE;3:PHARMACY;^0;4^Q
"^DD",350.8,350.8,.04,21,0)
^^2^2^2920415^^^
"^DD",350.8,350.8,.04,21,1,0)
This is the package that requested this entry in this file and will
"^DD",350.8,350.8,.04,21,2,0)
report it to IB as an error if the conditions are detected.
"^DD",350.8,350.8,.05,0)
ERROR ACTION^S^1:DISPLAY MESSAGE;2:SEND BULLETIN;3:EDIT FILE;^0;5^Q
"^DD",350.8,350.8,.05,21,0)
^^6^6^2910227^
"^DD",350.8,350.8,.05,21,1,0)
This is the type of action that should be taken when this error is
"^DD",350.8,350.8,.05,21,2,0)
reported to IB.  If action other than displaying a message is indicated
"^DD",350.8,350.8,.05,21,3,0)
then the MUMPS code in the ERROR ACTION field will be executed.
"^DD",350.8,350.8,.05,21,4,0)
 
"^DD",350.8,350.8,.05,21,5,0)
Currently only display actions are implemented.  Please contact the 
"^DD",350.8,350.8,.05,21,6,0)
developing ISC if other action types are desired.
"^DD",350.8,350.8,.06,0)
CORRESPONDING ALERT^P354.5'^IBE(354.5,^0;6^Q
"^DD",350.8,350.8,.06,21,0)
^^1^1^2940209^
"^DD",350.8,350.8,.06,21,1,0)
This is the type of alert that should be sent when this error occurs.
"^DD",350.8,350.8,.06,"DT")
2930322
"^DD",350.8,350.8,10,0)
EXECUTABLE LOGIC^K^^10;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",350.8,350.8,10,3)
This is Standard MUMPS code.
"^DD",350.8,350.8,10,21,0)
^^2^2^2910227^
"^DD",350.8,350.8,10,21,1,0)
This is the MUMPS code that will be executed if an error is reported
"^DD",350.8,350.8,10,21,2,0)
with an ERROR ACTION of other than to display a message.
"^DD",355.92,355.92,.01,0)
INSURANCE COMPANY^RP36'^DIC(36,^0;1^Q
"^DD",355.92,355.92,.01,1,0)
^.1^^-1
"^DD",355.92,355.92,.01,1,1,0)
355.92^B
"^DD",355.92,355.92,.01,1,1,1)
S ^IBA(355.92,"B",$E(X,1,30),DA)=""
"^DD",355.92,355.92,.01,1,1,2)
K ^IBA(355.92,"B",$E(X,1,30),DA)
"^DD",355.92,355.92,.01,1,2,0)
^^TRIGGER^355.92^.1
"^DD",355.92,355.92,.01,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,10)="" I X S X=DIV S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X="*N/A*" X ^DD(355.92,.01,1,2,1.4)
"^DD",355.92,355.92,.01,1,2,1.4)
S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=355.92,DIG=.1 D ^DICR
"^DD",355.92,355.92,.01,1,2,2)
Q
"^DD",355.92,355.92,.01,1,2,3)
This field is trigger on a new entry to the file and can not be edited.
"^DD",355.92,355.92,.01,1,2,"CREATE CONDITION")
INDEX VALUE CARE UNIT=""
"^DD",355.92,355.92,.01,1,2,"CREATE VALUE")
"*N/A*"
"^DD",355.92,355.92,.01,1,2,"DELETE VALUE")
NO EFFECT
"^DD",355.92,355.92,.01,1,2,"DT")
3051227
"^DD",355.92,355.92,.01,1,2,"FIELD")
INDE
"^DD",355.92,355.92,.01,1,3,0)
^^TRIGGER^355.92^.11
"^DD",355.92,355.92,.01,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,11)="" I X S X=DIV S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X="*N/A*" X ^DD(355.92,.01,1,3,1.4)
"^DD",355.92,355.92,.01,1,3,1.4)
S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=355.92,DIG=.11 D ^DICR
"^DD",355.92,355.92,.01,1,3,2)
Q
"^DD",355.92,355.92,.01,1,3,3)
This field is trigger on a new entry to the file and can not be edited.
"^DD",355.92,355.92,.01,1,3,"CREATE CONDITION")
INDEX VALUE DIVISION=""
"^DD",355.92,355.92,.01,1,3,"CREATE VALUE")
"*N/A*"
"^DD",355.92,355.92,.01,1,3,"DELETE VALUE")
NO EFFECT
"^DD",355.92,355.92,.01,1,3,"DT")
3051227
"^DD",355.92,355.92,.01,1,3,"FIELD")
INDEX VALUE DIVISION
"^DD",355.92,355.92,.01,3)
Enter the name of the insurance company that is providing the id.
"^DD",355.92,355.92,.01,21,0)
^^1^1^3040511^
"^DD",355.92,355.92,.01,21,1,0)
This is the insurance company that is providing the facility id.
"^DD",355.92,355.92,.01,"DT")
3060307
"^DD",355.92,355.92,.03,0)
CARE UNITS^P355.95'^IBA(355.95,^0;3^Q
"^DD",355.92,355.92,.03,1,0)
^.1
"^DD",355.92,355.92,.03,1,1,0)
^^TRIGGER^355.92^.1
"^DD",355.92,355.92,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X I X S X=DIV S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=DIV,X=X X ^DD(355.92,.03,1,1,1.4)
"^DD",355.92,355.92,.03,1,1,1.4)
S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=355.92,DIG=.1 D ^DICR
"^DD",355.92,355.92,.03,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X="*N/A*" S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,10)=DIV,DIH=355.92,DIG=.1 D ^DICR
"^DD",355.92,355.92,.03,1,1,"CREATE CONDITION")
INTERNAL(CARE UNITS)
"^DD",355.92,355.92,.03,1,1,"CREATE VALUE")
INTERNAL(CARE UNITS)
"^DD",355.92,355.92,.03,1,1,"DELETE VALUE")
"*N/A*"
"^DD",355.92,355.92,.03,1,1,"FIELD")
IND
"^DD",355.92,355.92,.03,1,2,0)
355.92^AC
"^DD",355.92,355.92,.03,1,2,1)
S ^IBA(355.92,"AC",$E(X,1,30),DA)=""
"^DD",355.92,355.92,.03,1,2,2)
K ^IBA(355.92,"AC",$E(X,1,30),DA)
"^DD",355.92,355.92,.03,1,2,"%D",0)
^^2^2^3060321^
"^DD",355.92,355.92,.03,1,2,"%D",1,0)
This cross reference will determine whether a care unit is in use before 
"^DD",355.92,355.92,.03,1,2,"%D",2,0)
it can be deleted
"^DD",355.92,355.92,.03,1,2,"DT")
3060321
"^DD",355.92,355.92,.03,21,0)
^^2^2^3060309^
"^DD",355.92,355.92,.03,21,1,0)
This is the care unit for which this ID is being defined.  Care Units are 
"^DD",355.92,355.92,.03,21,2,0)
only used for Billing Provider Secondary ID #2 .
"^DD",355.92,355.92,.03,"DT")
3060321
"^DD",355.92,355.92,.05,0)
DIVISION^P40.8'^DG(40.8,^0;5^Q
"^DD",355.92,355.92,.05,1,0)
^.1
"^DD",355.92,355.92,.05,1,1,0)
^^TRIGGER^355.92^.11
"^DD",355.92,355.92,.05,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X I X S X=DIV S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=DIV,X=X X ^DD(355.92,.05,1,1,1.4)
"^DD",355.92,355.92,.05,1,1,1.4)
S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=355.92,DIG=.11 D ^DICR
"^DD",355.92,355.92,.05,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.92,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X="*N/A*" S DIH=$G(^IBA(355.92,DIV(0),0)),DIV=X S $P(^(0),U,11)=DIV,DIH=355.92,DIG=.11 D ^DICR
"^DD",355.92,355.92,.05,1,1,"CREATE CONDITION")
INTERNAL(DIVISION)
"^DD",355.92,355.92,.05,1,1,"CREATE VALUE")
INTERNAL(DIVISION)
"^DD",355.92,355.92,.05,1,1,"DELETE VALUE")
"*N/A*"
"^DD",355.92,355.92,.05,1,1,"FIELD")
INDEX VALUE DIVISION
"^DD",355.92,355.92,.05,3)
Enter the specific division this id will be used for.
"^DD",355.92,355.92,.05,21,0)
^.001^1^1^3040610^^
"^DD",355.92,355.92,.05,21,1,0)
This designates which division this id number should be used for.
"^DD",355.92,355.92,.05,"DT")
3051227
"^DD",355.92,355.92,.08,0)
ID TYPE FLAG^S^E:ELECTRONIC PLAN TYPE;A:ADDITIONAL IDS;LF:VA LAB/FACILITY ID;^0;8^Q
"^DD",355.92,355.92,.08,21,0)
^^2^2^3060309^
"^DD",355.92,355.92,.08,21,1,0)
This is the flag that enables the code to tell the 3 types of IDs in 
"^DD",355.92,355.92,.08,21,2,0)
this file apart. 
"^DD",355.92,355.92,.08,"DT")
3060309
"^DD",355.92,355.92,.1,0)
INDEX VALUE CARE UNIT^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",355.92,355.92,.1,3)
Answer must be 1-30 characters in length
"^DD",355.92,355.92,.1,5,1,0)
355.92^.01^2
"^DD",355.92,355.92,.1,5,2,0)
355.92^.03^1
"^DD",355.92,355.92,.1,9)
^
"^DD",355.92,355.92,.1,21,0)
^^4^4^3051227^
"^DD",355.92,355.92,.1,21,1,0)
This field contains the value for the care unit
"^DD",355.92,355.92,.1,21,2,0)
or '*N/A*' if no care unit is selected.  
"^DD",355.92,355.92,.1,21,3,0)
This is to assure uniqueness in the records in
"^DD",355.92,355.92,.1,21,4,0)
the file even if the care unit is blank.
"^DD",355.92,355.92,.1,23,0)
^^1^1^3051227^
"^DD",355.92,355.92,.1,23,1,0)
Triggered on entry of the record by the .01 field to *N/A*
"^DD",355.92,355.92,.1,"DT")
3051230
"^DD",355.92,355.92,.11,0)
INDEX VALUE DIVISION^F^^0;11^K:$L(X)>30!($L(X)<1) X
"^DD",355.92,355.92,.11,3)
Answer must be 1-30 characters in length.
"^DD",355.92,355.92,.11,5,1,0)
355.92^.01^3
"^DD",355.92,355.92,.11,5,2,0)
355.92^.05^1
"^DD",355.92,355.92,.11,9)
^
"^DD",355.92,355.92,.11,21,0)
^^3^3^3051227^
"^DD",355.92,355.92,.11,21,1,0)
This field contains the value for the division or '*N/A*' if no division
"^DD",355.92,355.92,.11,21,2,0)
is selected.  This is to assure uniqueness in the records in the file even
"^DD",355.92,355.92,.11,21,3,0)
if the division is blank.
"^DD",355.92,355.92,.11,23,0)
^^1^1^3051227^
"^DD",355.92,355.92,.11,23,1,0)
Triggered on entry of the record by the .01 field to *N/A*
"^DD",355.92,355.92,.11,"DT")
3051230
"^DD",355.93,355.93,.02,0)
PROVIDER TYPE^SX^1:FACILITY/GROUP;2:INDIVIDUAL;^0;2^N Z,Z0 S Z0=X,Z=$P($G(^IBA(355.93,DA,0)),U) I $S(X=1:Z[",",1:Z'[",") D EN^DDIOL($S(Z0=1:"FACILITY NAMES MUST NOT CONTAIN A COMMA",1:"INDIVIDUAL NAMES REQUIRE LAST,FIRST MI FORMAT")) K X
"^DD",355.93,355.93,.02,1,0)
^.1
"^DD",355.93,355.93,.02,1,1,0)
^^TRIGGER^355.93^.03
"^DD",355.93,355.93,.02,1,1,1)
Q
"^DD",355.93,355.93,.02,1,1,2)
X ^DD(355.93,.02,1,1,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=355.93,DIG=.03 D ^DICR
"^DD",355.93,355.93,.02,1,1,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=2
"^DD",355.93,355.93,.02,1,1,3)
Do not delete
"^DD",355.93,355.93,.02,1,1,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,1,"%D",1,0)
This trigger deletes the value of the CREDENTIALS field if the type is no
"^DD",355.93,355.93,.02,1,1,"%D",2,0)
longer an individual provider type.
"^DD",355.93,355.93,.02,1,1,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,1,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=2
"^DD",355.93,355.93,.02,1,1,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,1,"FIELD")
CREDENTIALS
"^DD",355.93,355.93,.02,1,2,0)
^^TRIGGER^355.93^.04
"^DD",355.93,355.93,.02,1,2,1)
Q
"^DD",355.93,355.93,.02,1,2,2)
X ^DD(355.93,.02,1,2,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,4)=DIV,DIH=355.93,DIG=.04 D ^DICR
"^DD",355.93,355.93,.02,1,2,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=2
"^DD",355.93,355.93,.02,1,2,3)
Do not delete
"^DD",355.93,355.93,.02,1,2,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,2,"%D",1,0)
This trigger deletes the value of the SPECIALTY field if the type is no
"^DD",355.93,355.93,.02,1,2,"%D",2,0)
longer an individual provider type.
"^DD",355.93,355.93,.02,1,2,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,2,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=2
"^DD",355.93,355.93,.02,1,2,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,2,"DT")
3000905
"^DD",355.93,355.93,.02,1,2,"FIELD")
SPECIALTY
"^DD",355.93,355.93,.02,1,3,0)
^^TRIGGER^355.93^.05
"^DD",355.93,355.93,.02,1,3,1)
Q
"^DD",355.93,355.93,.02,1,3,2)
X ^DD(355.93,.02,1,3,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,5)=DIV,DIH=355.93,DIG=.05 D ^DICR
"^DD",355.93,355.93,.02,1,3,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,3,3)
Do not delete
"^DD",355.93,355.93,.02,1,3,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,3,"%D",1,0)
This trigger deletes the value of the STREET ADDRESS field if the type is
"^DD",355.93,355.93,.02,1,3,"%D",2,0)
no longer a facility type provider.
"^DD",355.93,355.93,.02,1,3,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,3,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,3,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,3,"DT")
3000905
"^DD",355.93,355.93,.02,1,3,"FIELD")
STREET ADDRESS
"^DD",355.93,355.93,.02,1,4,0)
^^TRIGGER^355.93^.06
"^DD",355.93,355.93,.02,1,4,1)
Q
"^DD",355.93,355.93,.02,1,4,2)
X ^DD(355.93,.02,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,6)=DIV,DIH=355.93,DIG=.06 D ^DICR
"^DD",355.93,355.93,.02,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,4,3)
Do not delete
"^DD",355.93,355.93,.02,1,4,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,4,"%D",1,0)
This trigger deletes the value of the CITY field if the type is no
"^DD",355.93,355.93,.02,1,4,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,4,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,4,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,4,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,4,"DT")
3000905
"^DD",355.93,355.93,.02,1,4,"FIELD")
CITY
"^DD",355.93,355.93,.02,1,5,0)
^^TRIGGER^355.93^.07
"^DD",355.93,355.93,.02,1,5,1)
Q
"^DD",355.93,355.93,.02,1,5,2)
X ^DD(355.93,.02,1,5,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,7)=DIV,DIH=355.93,DIG=.07 D ^DICR
"^DD",355.93,355.93,.02,1,5,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,5,3)
Do not delete
"^DD",355.93,355.93,.02,1,5,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,5,"%D",1,0)
This trigger deletes the value of the STATE field if the type is no
"^DD",355.93,355.93,.02,1,5,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,5,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,5,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,5,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,5,"DT")
3000905
"^DD",355.93,355.93,.02,1,5,"FIELD")
STATE
"^DD",355.93,355.93,.02,1,6,0)
^^TRIGGER^355.93^.08
"^DD",355.93,355.93,.02,1,6,1)
Q
"^DD",355.93,355.93,.02,1,6,2)
X ^DD(355.93,.02,1,6,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,8)=DIV,DIH=355.93,DIG=.08 D ^DICR
"^DD",355.93,355.93,.02,1,6,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,6,3)
Do not delete
"^DD",355.93,355.93,.02,1,6,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,6,"%D",1,0)
This trigger deletes the value of the ZIP CODE field if the type is no
"^DD",355.93,355.93,.02,1,6,"%D",2,0)
longer a facility type provider.
"^DD",355.93,355.93,.02,1,6,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,6,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,6,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,6,"DT")
3000905
"^DD",355.93,355.93,.02,1,6,"FIELD")
ZIP CODE
"^DD",355.93,355.93,.02,1,7,0)
^^TRIGGER^355.93^.09
"^DD",355.93,355.93,.02,1,7,1)
Q
"^DD",355.93,355.93,.02,1,7,2)
X ^DD(355.93,.02,1,7,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,9)=DIV,DIH=355.93,DIG=.09 D ^DICR
"^DD",355.93,355.93,.02,1,7,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$C(59)_$P($G(^DD(355.93,.02,0)),U,3) S X=$P($P(Y(1),$C(59)_X_":",2),$C(59),1),X=X S X=X=1
"^DD",355.93,355.93,.02,1,7,3)
Do not delete
"^DD",355.93,355.93,.02,1,7,"%D",0)
^^2^2^3000905^
"^DD",355.93,355.93,.02,1,7,"%D",1,0)
This trigger deletes the value of the FACILITY DEFAULT ID NUMBER field
"^DD",355.93,355.93,.02,1,7,"%D",2,0)
if the type is no longer a facility type provider.
"^DD",355.93,355.93,.02,1,7,"CREATE VALUE")
NO EFFECT
"^DD",355.93,355.93,.02,1,7,"DELETE CONDITION")
INTERNAL(OLD PROVIDER TYPE)=1
"^DD",355.93,355.93,.02,1,7,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,7,"DT")
3000905
"^DD",355.93,355.93,.02,1,7,"FIELD")
FACILITY DEFAULT ID NUMBER
"^DD",355.93,355.93,.02,1,8,0)
^^TRIGGER^355.93^.13
"^DD",355.93,355.93,.02,1,8,1)
X ^DD(355.93,.02,1,8,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X="16" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,8,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(2)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=Y(0),X=X S X=X="1",Y(1)=$G(X) S X=$P(Y(2),U,9)]"",Y=X,X=Y(1),X=X&Y
"^DD",355.93,355.93,.02,1,8,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.02,1,8,"CREATE CONDITION")
INTERNAL(PROVIDER TYPE)="1"&(FACILITY DEFAULT ID NUMBER]"")
"^DD",355.93,355.93,.02,1,8,"CREATE VALUE")
"16"
"^DD",355.93,355.93,.02,1,8,"DELETE VALUE")
@
"^DD",355.93,355.93,.02,1,8,"DT")
3060314
"^DD",355.93,355.93,.02,1,8,"FIELD")
PRIMARY ID QUALIFIER
"^DD",355.93,355.93,.02,3)
Enter 1 or 2 to designate this entry as a facility or an individual.
"^DD",355.93,355.93,.02,5,1,0)
355.93^.01^2
"^DD",355.93,355.93,.02,5,2,0)
355.93^.01^3
"^DD",355.93,355.93,.02,21,0)
^.001^9^9^3040518^^^^
"^DD",355.93,355.93,.02,21,1,0)
This field identifies the type of provider being defined.  Facility
"^DD",355.93,355.93,.02,21,2,0)
providers can be used to fill in the name and address of the non-VA
"^DD",355.93,355.93,.02,21,3,0)
facility where services were rendered (box 32 on the HCFA 1500).  An
"^DD",355.93,355.93,.02,21,4,0)
individual provider can be selected as the rendering, attending,
"^DD",355.93,355.93,.02,21,5,0)
referring or operating provider on a bill.
"^DD",355.93,355.93,.02,21,6,0)
 
"^DD",355.93,355.93,.02,21,7,0)
For name standarization purposes, individual provider names must be
"^DD",355.93,355.93,.02,21,8,0)
entered in LAST,FIRST MIDDLE format and facility names must not contain
"^DD",355.93,355.93,.02,21,9,0)
a comma.
"^DD",355.93,355.93,.02,"DT")
3060314
"^DD",355.93,355.93,.09,0)
FACILITY DEFAULT ID NUMBER^FX^^0;9^K:$L(X)>10!($L(X)<1) X I $D(X),$P($G(^IBA(355.93,DA,0)),U,2)'=1 K X
"^DD",355.93,355.93,.09,1,0)
^.1^^-1
"^DD",355.93,355.93,.09,1,1,0)
^^TRIGGER^355.93^.13
"^DD",355.93,355.93,.09,1,1,1)
X ^DD(355.93,.09,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X="16" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.09,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S X=X="1",Y(2)=$G(X) S X=Y(0)]"",Y=X,X=Y(2),X=X&Y
"^DD",355.93,355.93,.09,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(355.93,DIV(0),0)),DIV=X S $P(^(0),U,13)=DIV,DIH=355.93,DIG=.13 D ^DICR
"^DD",355.93,355.93,.09,1,1,"CREATE CONDITION")
INTERNAL(PROVIDER TYPE)="1"&(FACILITY DEFAULT ID NUMBER]"")
"^DD",355.93,355.93,.09,1,1,"CREATE VALUE")
"16"
"^DD",355.93,355.93,.09,1,1,"DELETE VALUE")
@
"^DD",355.93,355.93,.09,1,1,"DT")
3060314
"^DD",355.93,355.93,.09,1,1,"FIELD")
PRIMARY ID QUALIFIER
"^DD",355.93,355.93,.09,3)
Enter the Federal Tax ID of the outside facility.
"^DD",355.93,355.93,.09,5,1,0)
355.93^.02^7
"^DD",355.93,355.93,.09,21,0)
^^1^1^3060322^
"^DD",355.93,355.93,.09,21,1,0)
Enter the Federal Tax ID of the outside facility.
"^DD",355.93,355.93,.09,"DT")
3060328
"^DD",355.93,355.93,.13,0)
PRIMARY ID QUALIFIER^*P355.97'^IBE(355.97,^0;13^S DIC("S")="I $P($G(^(1)),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",355.93,355.93,.13,3)
The only Qualifier allowed is the TAX ID.
"^DD",355.93,355.93,.13,5,1,0)
355.93^.09^1
"^DD",355.93,355.93,.13,5,2,0)
355.93^.02^8
"^DD",355.93,355.93,.13,12)
Only TAX ID allowed
"^DD",355.93,355.93,.13,12.1)
S DIC("S")="I $P($G(^(1)),U,4)"
"^DD",355.93,355.93,.13,21,0)
^^1^1^3060309^
"^DD",355.93,355.93,.13,21,1,0)
This is the Qualifier associated with the FACILITY DEFAULT ID NUMBER. 
"^DD",355.93,355.93,.13,"DT")
3060309
"^DD",355.93,355.93,.15,0)
MAMMOGRAPHY CERTIFICATION #^F^^0;15^K:$L(X)>15!($L(X)<3) X
"^DD",355.93,355.93,.15,3)
Enter the Mammography Certification Number for this facility.   Must be 3-15 characters.
"^DD",355.93,355.93,.15,21,0)
^^3^3^3060309^
"^DD",355.93,355.93,.15,21,1,0)
This is the mammography certification number for the non-VA facility which
"^DD",355.93,355.93,.15,21,2,0)
is used as a default on the claim when mammography services are performed.
"^DD",355.93,355.93,.15,21,3,0)
It is required by some insurance companies.
"^DD",355.93,355.93,.15,"DT")
3060309
"^DD",355.95,355.95,.04,0)
DIVISION^P40.8'^DG(40.8,^0;4^Q
"^DD",355.95,355.95,.04,1,0)
^.1^^0
"^DD",355.95,355.95,.04,3)
Enter the Division that this Care Unit is associated with.
"^DD",355.95,355.95,.04,21,0)
^^4^4^3060309^
"^DD",355.95,355.95,.04,21,1,0)
This is the division for which the care unit is being defined for this 
"^DD",355.95,355.95,.04,21,2,0)
insurance company.  Entries with divisions are for billing provider 
"^DD",355.95,355.95,.04,21,3,0)
secondary IDs while those with out divisions are used for people providers
"^DD",355.95,355.95,.04,21,4,0)
(rendering/attending, referring, etc)   
"^DD",355.95,355.95,.04,"DT")
3060309
"^DD",355.96,355.96,.06,0)
ID TYPE^R*P355.97'^IBE(355.97,^0;6^S DIC("S")="I $$RAINS^IBCEPU(Y)" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",355.96,355.96,.06,1,0)
^.1
"^DD",355.96,355.96,.06,1,1,0)
355.96^C
"^DD",355.96,355.96,.06,1,1,1)
S ^IBA(355.96,"C",$E(X,1,30),DA)=""
"^DD",355.96,355.96,.06,1,1,2)
K ^IBA(355.96,"C",$E(X,1,30),DA)
"^DD",355.96,355.96,.06,1,1,3)
Do not delete
"^DD",355.96,355.96,.06,1,1,"%D",0)
^^1^1^3000928^
"^DD",355.96,355.96,.06,1,1,"%D",1,0)
Allow lookup by provider id type
"^DD",355.96,355.96,.06,1,1,"DT")
3000928
"^DD",355.96,355.96,.06,3)
Enter the provider id type that this care unit is to apply to.
"^DD",355.96,355.96,.06,12)
Must be for a type that includes insurance co
"^DD",355.96,355.96,.06,12.1)
S DIC("S")="I $$RAINS^IBCEPU(Y)"
"^DD",355.96,355.96,.06,21,0)
^.001^2^2^3000911^^
"^DD",355.96,355.96,.06,21,1,0)
This is the type of provider ID that the set of care unit is being
"^DD",355.96,355.96,.06,21,2,0)
defined for.
"^DD",355.96,355.96,.06,"DT")
3060418
"^DD",355.97,355.97,.03,0)
X12 CODE^F^^0;3^K:$L(X)>2!($L(X)<1) X
"^DD",355.97,355.97,.03,1,0)
^.1
"^DD",355.97,355.97,.03,1,1,0)
355.97^C
"^DD",355.97,355.97,.03,1,1,1)
S ^IBE(355.97,"C",$E(X,1,30),DA)=""
"^DD",355.97,355.97,.03,1,1,2)
K ^IBE(355.97,"C",$E(X,1,30),DA)
"^DD",355.97,355.97,.03,1,1,"DT")
3051208
"^DD",355.97,355.97,.03,3)
Answer must be 1-2 characters in length.
"^DD",355.97,355.97,.03,21,0)
^^2^2^3000831^
"^DD",355.97,355.97,.03,21,1,0)
This is the X12 code that determines the qualifier to be output in the
"^DD",355.97,355.97,.03,21,2,0)
X12 data stream when reporting this type of provider ID number.
"^DD",355.97,355.97,.03,"DT")
3051208
"^DD",355.97,355.97,.07,0)
ALLOWABLE FORM TYPE^S^I:INSTITUTIONAL;P:PROFESSIONAL;B:BOTH INSTITUTIONAL AND PROFESSIONAL;^0;7^Q
"^DD",355.97,355.97,.07,3)
Enter I if this is used on UB type forms, P if used on CMS/HCFA type forms, or B if used on either type.
"^DD",355.97,355.97,.07,21,0)
^^2^2^3060309^
"^DD",355.97,355.97,.07,21,1,0)
This is a flag used to determine what type of form this qualifier is 
"^DD",355.97,355.97,.07,21,2,0)
valid for.  It is used to validate provider id file set-up.
"^DD",355.97,355.97,.07,"DT")
3060309
"^DD",355.97,355.97,.08,0)
ACTIVE^S^1:YES;0:NO;^0;8^Q
"^DD",355.97,355.97,.08,3)
Enter YES if this entry is Active or NO if it is In-Active
"^DD",355.97,355.97,.08,21,0)
^^2^2^3060419^
"^DD",355.97,355.97,.08,21,1,0)
This field must be set to YES to allow this qualifier to be selected.  Old
"^DD",355.97,355.97,.08,21,2,0)
entries that are no longer allowed should be set to NO.
"^DD",355.97,355.97,.08,"DT")
3060419
"^DD",361,361,.15,0)
MESSAGE CHECKSUM^F^^0;15^K:$L(X)>18!($L(X)<1) X
"^DD",361,361,.15,3)
Answer must be 1-18 characters in length
"^DD",361,361,.15,21,0)
^^5^5^3050531^
"^DD",361,361,.15,21,1,0)
This field contains the calculated checksum value of the status
"^DD",361,361,.15,21,2,0)
message text.  It is a unique number which is mathematically
"^DD",361,361,.15,21,3,0)
generated based on the actual data in the 277STAT flat file data
"^DD",361,361,.15,21,4,0)
received from Austin.  This checksum value is used to eliminate
"^DD",361,361,.15,21,5,0)
duplicate status message transmissions into VistA.
"^DD",361,361,.15,23,0)
^^1^1^3050722^
"^DD",361,361,.15,23,1,0)
This field should never be set manually.
"^DD",361,361,.15,"DT")
3050722
"^DD",361,361,.16,0)
DATE LAST PRINTED VIA MCS^D^^0;16^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",361,361,.16,3)
(No range limit on date)
"^DD",361,361,.16,21,0)
^^2^2^3051026^
"^DD",361,361,.16,21,1,0)
This is the date that the associated claim was most recently printed by 
"^DD",361,361,.16,21,2,0)
the MCS option - Resubmit by Print.
"^DD",361,361,.16,"DT")
3051026
"^DD",361.2,361.2,0)
FIELD^^.03^3
"^DD",361.2,361.2,0,"DDA")
N
"^DD",361.2,361.2,0,"DT")
3001019
"^DD",361.2,361.2,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",361.2,361.2,0,"IX","B",361.2,.01)

"^DD",361.2,361.2,0,"NM","IB ELECTRONIC REPORT DISPOSITION")

"^DD",361.2,361.2,0,"VRPK")
IB
"^DD",361.2,361.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",361.2,361.2,.01,1,0)
^.1
"^DD",361.2,361.2,.01,1,1,0)
361.2^B
"^DD",361.2,361.2,.01,1,1,1)
S ^IBE(361.2,"B",$E(X,1,30),DA)=""
"^DD",361.2,361.2,.01,1,1,2)
K ^IBE(361.2,"B",$E(X,1,30),DA)
"^DD",361.2,361.2,.01,3)
Answer must be 1-30 characters in length.
"^DD",361.2,361.2,.01,21,0)
^^1^1^3001019^
"^DD",361.2,361.2,.01,21,1,0)
This is the name of the electronic billing report.
"^DD",361.2,361.2,.01,"DT")
3001019
"^DD",361.2,361.2,.02,0)
DISPOSITION^S^0:IGNORE THE REPORT;1:MAIL REPORT TO MAIL GROUP;^0;2^Q
"^DD",361.2,361.2,.02,3)
Enter 0 to ignore this report, 1 to save it in a mail message
"^DD",361.2,361.2,.02,21,0)
^.001^3^3^3001019^^
"^DD",361.2,361.2,.02,21,1,0)
This is the indicator that tells the system what to do when it receives 
"^DD",361.2,361.2,.02,21,2,0)
an electronic message identified as this report.  It can either be
"^DD",361.2,361.2,.02,21,3,0)
ignored or saved via a mail message to the IB EDI SUPERVISOR mail group.
"^DD",361.2,361.2,.02,"DT")
3001019
"^DD",361.2,361.2,.03,0)
SHORT DESCRIPTION^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",361.2,361.2,.03,3)
Answer must be 1-30 characters in length.
"^DD",361.2,361.2,.03,21,0)
^.001^2^2^3001019^^
"^DD",361.2,361.2,.03,21,1,0)
This is the description of the report that will be displayed when the
"^DD",361.2,361.2,.03,21,2,0)
report name is.
"^DD",361.2,361.2,.03,"DT")
3001019
"^DD",361.4,361.4,1,0)
TRANSMIT DATE/TIME^361.41D^^1;0
"^DD",361.4,361.4,1,21,0)
^^2^2^3050126^
"^DD",361.4,361.4,1,21,1,0)
This multiple contains the date/time, batch and user information for the 
"^DD",361.4,361.4,1,21,2,0)
transmission of previously transmitted claims for test purposes.
"^DD",361.4,361.41,0)
TRANSMIT DATE/TIME SUB-FIELD^^.04^4
"^DD",361.4,361.41,0,"NM","TRANSMIT DATE/TIME")

"^DD",361.4,361.41,.01,0)
TRANSMIT DATE/TIME^MD^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",361.4,361.41,.01,1,0)
^.1
"^DD",361.4,361.41,.01,1,1,0)
361.41^B
"^DD",361.4,361.41,.01,1,1,1)
S ^IBM(361.4,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",361.4,361.41,.01,1,1,2)
K ^IBM(361.4,DA(1),1,"B",$E(X,1,30),DA)
"^DD",361.4,361.41,.01,1,2,0)
^^TRIGGER^361.4^.02
"^DD",361.4,361.41,.01,1,2,1)
X ^DD(361.41,.01,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBM(361.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=DIV,X=$P(X,".",1) S DIH=$G(^IBM(361.4,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=361.4,DIG=.02 D ^DICR
"^DD",361.4,361.41,.01,1,2,1.3)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(0)=X S Y(1)=$S($D(^IBM(361.4,D0,0)):^(0),1:"") S X=Y(0),X=$P(X,".",1) S X=X>$P(Y(1),U,2)
"^DD",361.4,361.41,.01,1,2,2)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA S Y(1)=$S($D(^IBM(361.4,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$LASTDT^IBCEPTU(.DA) X ^DD(361.41,.01,1,2,2.4)
"^DD",361.4,361.41,.01,1,2,2.4)
S DIH=$G(^IBM(361.4,DIV(0),0)),DIV=X S $P(^(0),U,2)=DIV,DIH=361.4,DIG=.02 D ^DICR
"^DD",361.4,361.41,.01,1,2,"CREATE CONDITION")
DATE(TRANSMIT DATE)>LAST TRANSMIT DATE
"^DD",361.4,361.41,.01,1,2,"CREATE VALUE")
DATE(TRANSMIT DATE)
"^DD",361.4,361.41,.01,1,2,"DELETE VALUE")
S X=$$LASTDT^IBCEPTU(.DA)
"^DD",361.4,361.41,.01,1,2,"DIC")

"^DD",361.4,361.41,.01,1,2,"DT")
3050126
"^DD",361.4,361.41,.01,1,2,"FIELD")
LAST TRANSMIT DATE
"^DD",361.4,361.41,.01,1,3,0)
361.41^ALTD^MUMPS
"^DD",361.4,361.41,.01,1,3,1)
S ^IBM(361.4,DA(1),1,"ALTD",X\1,DA)=""
"^DD",361.4,361.41,.01,1,3,2)
K ^IBM(361.4,DA(1),1,"ALTD",X\1,DA)
"^DD",361.4,361.41,.01,1,3,3)
Do not delete
"^DD",361.4,361.41,.01,1,3,"%D",0)
^.101^2^2^3050128^^
"^DD",361.4,361.41,.01,1,3,"%D",1,0)
This xref is used to determine the last transmit date as it is date
"^DD",361.4,361.41,.01,1,3,"%D",2,0)
without time.
"^DD",361.4,361.41,.01,1,3,"DT")
3050128
"^DD",361.4,361.41,.01,1,4,0)
361.4^ATD
"^DD",361.4,361.41,.01,1,4,1)
S ^IBM(361.4,"ATD",$E(X,1,30),DA(1),DA)=""
"^DD",361.4,361.41,.01,1,4,2)
K ^IBM(361.4,"ATD",$E(X,1,30),DA(1),DA)
"^DD",361.4,361.41,.01,1,4,"DT")
3060118
"^DD",361.4,361.41,.01,3)
Enter the date and time the claim was transmitted as test.
"^DD",361.4,361.41,.01,21,0)
^.001^1^1^3050126^^
"^DD",361.4,361.41,.01,21,1,0)
This is the date and time the claim was transmitted as test.
"^DD",361.4,361.41,.01,"DT")
3060118
"^DD",364.5,364.5,0)
FIELD^^3^11
"^DD",364.5,364.5,0,"DDA")
N
"^DD",364.5,364.5,0,"DT")
2960311
"^DD",364.5,364.5,0,"ID",.05)
S %I=Y,Y=$S('$D(^(0)):"",$D(^DIC(+$P(^(0),U,5),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(1,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.5,364.5,0,"IX","B",364.5,.01)

"^DD",364.5,364.5,0,"NM","IB DATA ELEMENT DEFINITION")

"^DD",364.5,364.5,0,"PT",364.7,.03)

"^DD",364.5,364.5,0,"VRPK")
IB
"^DD",364.5,364.5,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",364.5,364.5,.01,1,0)
^.1
"^DD",364.5,364.5,.01,1,1,0)
364.5^B
"^DD",364.5,364.5,.01,1,1,1)
S ^IBA(364.5,"B",$E(X,1,30),DA)=""
"^DD",364.5,364.5,.01,1,1,2)
K ^IBA(364.5,"B",$E(X,1,30),DA)
"^DD",364.5,364.5,.01,3)
Answer must be 3-30 characters in length.
"^DD",364.5,364.5,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.01,21,1,0)
The name to be used to uniquely identify this data element.
"^DD",364.5,364.5,.01,"DT")
2951219
"^DD",364.5,364.5,.02,0)
SECURITY LEVEL^RS^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.5,364.5,.02,21,0)
^^2^2^2960215^^^^
"^DD",364.5,364.5,.02,21,1,0)
If this field is set to N (NATIONAL,NO EDIT), this is a secured data
"^DD",364.5,364.5,.02,21,2,0)
element and will not be allowed to be edited or deleted.
"^DD",364.5,364.5,.02,"DT")
2960215
"^DD",364.5,364.5,.03,0)
TYPE OF ELEMENT^RS^F:NON-MULTIPLE FILEMAN FIELD;E:EXTRACTED VIA CODE;C:CONSTANT VALUE;^0;3^Q
"^DD",364.5,364.5,.03,1,0)
^.1
"^DD",364.5,364.5,.03,1,1,0)
^^TRIGGER^364.5^.04
"^DD",364.5,364.5,.03,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X="FC",Y(1)=X S X=Y(0),X=X S Y=X,X=Y(1),X=X S X=X[Y I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X="I" X ^DD(364.5,.03,1,1,1.4)
"^DD",364.5,364.5,.03,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.5,DIG=.04 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,1,2)
Q
"^DD",364.5,364.5,.03,1,1,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,1,"%D",0)
^^1^1^2960215^
"^DD",364.5,364.5,.03,1,1,"%D",1,0)
If TYPE OF ELEMENT is 'F' or 'C' then ELEMENT CATEGORY must be 'I'. 
"^DD",364.5,364.5,.03,1,1,"CREATE CONDITION")
"FC"[INTERNAL(TYPE OF ELEMENT)
"^DD",364.5,364.5,.03,1,1,"CREATE VALUE")
S X="I"
"^DD",364.5,364.5,.03,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,1,"DT")
2960215
"^DD",364.5,364.5,.03,1,1,"FIELD")
ELEMENT CATEGORY
"^DD",364.5,364.5,.03,1,2,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.03,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="F" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,2,1.4)
"^DD",364.5,364.5,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,2,2)
Q
"^DD",364.5,364.5,.03,1,2,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,2,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,2,"%D",1,0)
This triggers the FILEMAN FIELD REFERENCE field to null if the element type
"^DD",364.5,364.5,.03,1,2,"%D",2,0)
is not FILEMAN field type of element.
"^DD",364.5,364.5,.03,1,2,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="F"
"^DD",364.5,364.5,.03,1,2,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,2,"DT")
2960215
"^DD",364.5,364.5,.03,1,2,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.03,1,3,0)
^^TRIGGER^364.5^.08
"^DD",364.5,364.5,.03,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="C" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,3,1.4)
"^DD",364.5,364.5,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.5,DIG=.08 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,3,2)
Q
"^DD",364.5,364.5,.03,1,3,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,3,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,3,"%D",1,0)
This triggers the CONSTANT VALUE field to null if the element type is not
"^DD",364.5,364.5,.03,1,3,"%D",2,0)
CONSTANT type of element.
"^DD",364.5,364.5,.03,1,3,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="C"
"^DD",364.5,364.5,.03,1,3,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,3,"DT")
2960215
"^DD",364.5,364.5,.03,1,3,"FIELD")
CONSTANT VALUE
"^DD",364.5,364.5,.03,1,4,0)
^^TRIGGER^364.5^1
"^DD",364.5,364.5,.03,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X'="E" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,1)):^(1),1:"") S X=$E(Y(1),1,245),X=X S DIU=X K Y S X="" X ^DD(364.5,.03,1,4,1.4)
"^DD",364.5,364.5,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),1)):^(1),1:""),DIV=X S DE=0-$L(DIH),DIU=$E(DIH,1,245),Y=$E(DIH,246,999),^(1)=$J("",$S(DE>0:DE,1:0))_DIV_$S(Y?." ":"",1:$J("",245-$L(DIV))_Y),DIH=364.5,DIG=1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.03,1,4,2)
Q
"^DD",364.5,364.5,.03,1,4,3)
DO NOT DELETE
"^DD",364.5,364.5,.03,1,4,"%D",0)
^^2^2^2960215^
"^DD",364.5,364.5,.03,1,4,"%D",1,0)
This triggers the EXTRACT CODE field to null if the element type is not an
"^DD",364.5,364.5,.03,1,4,"%D",2,0)
EXTRACTED VIA CODE type of element.
"^DD",364.5,364.5,.03,1,4,"CREATE CONDITION")
INTERNAL(TYPE OF ELEMENT)'="E"
"^DD",364.5,364.5,.03,1,4,"CREATE VALUE")
@
"^DD",364.5,364.5,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.03,1,4,"DT")
2960215
"^DD",364.5,364.5,.03,1,4,"FIELD")
EXTRACT CODE
"^DD",364.5,364.5,.03,21,0)
^^3^3^2951207^^
"^DD",364.5,364.5,.03,21,1,0)
The type of data element being defined as needed by one or more forms.  This
"^DD",364.5,364.5,.03,21,2,0)
field determines the type of retrieval needed to get the actual data element's
"^DD",364.5,364.5,.03,21,3,0)
value for a given bill.
"^DD",364.5,364.5,.03,"DT")
2960215
"^DD",364.5,364.5,.04,0)
ELEMENT CATEGORY^RSX^I:INDIVIDUAL ELEMENT;G:GROUP ELEMENT;^0;4^I $P($G(^IBA(364.5,DA,0)),U,3)="F",$G(X)="G" K X
"^DD",364.5,364.5,.04,1,0)
^.1
"^DD",364.5,364.5,.04,1,1,0)
^^TRIGGER^364.5^.06
"^DD",364.5,364.5,.04,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0),X=X S X=X="G" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.5,.04,1,1,1.4)
"^DD",364.5,364.5,.04,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.5,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.04,1,1,2)
Q
"^DD",364.5,364.5,.04,1,1,"CREATE CONDITION")
INTERNAL(ELEMENT CATEGORY)="G"
"^DD",364.5,364.5,.04,1,1,"CREATE VALUE")
""
"^DD",364.5,364.5,.04,1,1,"DELETE VALUE")
NO EFFECT
"^DD",364.5,364.5,.04,1,1,"FIELD")
FILEMAN FIELD REFERENCE
"^DD",364.5,364.5,.04,3)
This indicates an INDIVIDUAL or GROUP of elements will be returned.  Group is not valid for Fileman type elements.
"^DD",364.5,364.5,.04,5,1,0)
364.5^.03^1
"^DD",364.5,364.5,.04,21,0)
^^3^3^2951205^
"^DD",364.5,364.5,.04,21,1,0)
This defines whether the data element to be extracted is a single piece of data
"^DD",364.5,364.5,.04,21,2,0)
or is a string of related data.  Fileman field references must be designated as
"^DD",364.5,364.5,.04,21,3,0)
individual elements.
"^DD",364.5,364.5,.04,"DT")
2960215
"^DD",364.5,364.5,.05,0)
BASE FILE^P1'^DIC(^0;5^Q
"^DD",364.5,364.5,.05,3)
Enter the Fileman file to be used as a 'base' to extract the data from.
"^DD",364.5,364.5,.05,21,0)
^^2^2^2960311^
"^DD",364.5,364.5,.05,21,1,0)
This is the number of the Fileman file to be used as a 'base' to extract
"^DD",364.5,364.5,.05,21,2,0)
data for this field.
"^DD",364.5,364.5,.05,"DT")
2960311
"^DD",364.5,364.5,.06,0)
FILEMAN FIELD REFERENCE^FX^^0;6^K:$L(X)>65!($L(X)<1) X I $D(X),$P($G(^IBA(364.5,DA,0)),U,4)="G" K X
"^DD",364.5,364.5,.06,1,0)
^.1
"^DD",364.5,364.5,.06,1,1,0)
^^TRIGGER^364.5^.07
"^DD",364.5,364.5,.06,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)="" I X S X=DIV S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,1.4)
"^DD",364.5,364.5,.06,1,1,1.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.5,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y S X="" X ^DD(364.5,.06,1,1,2.4)
"^DD",364.5,364.5,.06,1,1,2.4)
S DIH=$S($D(^IBA(364.5,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=364.5,DIG=.07 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.5,364.5,.06,1,1,"CREATE CONDITION")
FILEMAN FIELD REFERENCE=""
"^DD",364.5,364.5,.06,1,1,"CREATE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"DELETE VALUE")
@
"^DD",364.5,364.5,.06,1,1,"FIELD")
#.07
"^DD",364.5,364.5,.06,3)
Must be a valid Fileman reference and ELEMENT CATEGORY must not be GROUP.
"^DD",364.5,364.5,.06,5,1,0)
364.5^.04^1
"^DD",364.5,364.5,.06,5,2,0)
364.5^.03^2
"^DD",364.5,364.5,.06,21,0)
^^6^6^2951221^^^
"^DD",364.5,364.5,.06,21,1,0)
The valid Fileman field reference or simple Fileman navigation to be used
"^DD",364.5,364.5,.06,21,2,0)
to extract using the $$GET^DIQ utility. Note this will not return true
"^DD",364.5,364.5,.06,21,3,0)
multiple entries.  Word-processing type fields are able to be retrieved,
"^DD",364.5,364.5,.06,21,4,0)
however.  No syntax check is made on this field so the user must be careful
"^DD",364.5,364.5,.06,21,5,0)
to type a valid Fileman expression.  This must be designated as an
"^DD",364.5,364.5,.06,21,6,0)
INDIVIDUAL element, not a group element.
"^DD",364.5,364.5,.06,"DT")
2951221
"^DD",364.5,364.5,.07,0)
FILEMAN RETURN FORMAT^S^I:INTERNAL;E:EXTERNAL;^0;7^Q
"^DD",364.5,364.5,.07,5,1,0)
364.5^.06^1
"^DD",364.5,364.5,.07,21,0)
^^5^5^2951205^
"^DD",364.5,364.5,.07,21,1,0)
This is the format for the retrieved data for Fileman-type data elements.  It
"^DD",364.5,364.5,.07,21,2,0)
is recommended to use Internal format whenever possible to keep the data
"^DD",364.5,364.5,.07,21,3,0)
element definitions in this file as generic as possible to avoid duplication.  
"^DD",364.5,364.5,.07,21,4,0)
The format capabilities of the forms generator should be used to interpret and
"^DD",364.5,364.5,.07,21,5,0)
reformat the data element when needed.
"^DD",364.5,364.5,.07,"DT")
2951205
"^DD",364.5,364.5,.08,0)
CONSTANT VALUE^F^^0;8^K:$L(X)>80!($L(X)<1) X
"^DD",364.5,364.5,.08,3)
Answer must be 1-80 characters in length.
"^DD",364.5,364.5,.08,5,1,0)
364.5^.03^3
"^DD",364.5,364.5,.08,21,0)
^^1^1^2951205^
"^DD",364.5,364.5,.08,21,1,0)
The specific value that this data element should return for this data element.
"^DD",364.5,364.5,.08,"DT")
2951205
"^DD",364.5,364.5,1,0)
EXTRACT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.5,364.5,1,3)
This is Standard MUMPS code.
"^DD",364.5,364.5,1,5,1,0)
364.5^.03^4
"^DD",364.5,364.5,1,9)
@
"^DD",364.5,364.5,1,21,0)
^^7^7^2951207^^^
"^DD",364.5,364.5,1,21,1,0)
The code to be executed by the forms generator to return the value(s) of the
"^DD",364.5,364.5,1,21,2,0)
data element.  If no ARRAY ROOT field is completed for this data element, the
"^DD",364.5,364.5,1,21,3,0)
code should set the variable IBXDATA or the array IBXDATA(1) through IBXDATA(n)
"^DD",364.5,364.5,1,21,4,0)
where n=the total # of iterations of the data element retrieved.  If the ARRAY 
"^DD",364.5,364.5,1,21,5,0)
ROOT field has been completed for this data element, this code should set the
"^DD",364.5,364.5,1,21,6,0)
variable referenced there.  IBXIEN is assumed to be the internal entry number
"^DD",364.5,364.5,1,21,7,0)
of the  file (referenced by the variable IBXFILE) entry.
"^DD",364.5,364.5,1,"DT")
2951205
"^DD",364.5,364.5,2,0)
ARRAY ROOT^F^^2;E1,50^K:$L(X)>50!($L(X)<1) X
"^DD",364.5,364.5,2,3)
Answer must be a valid array root name.
"^DD",364.5,364.5,2,21,0)
^^3^3^2960117^^
"^DD",364.5,364.5,2,21,1,0)
 The local or global base root where multiple-valued output or word processing
"^DD",364.5,364.5,2,21,2,0)
data is to be stored for this data element.  IBXDATA is the default if there
"^DD",364.5,364.5,2,21,3,0)
is no data in this field.  Example of a global array: ^TMP($J)
"^DD",364.5,364.5,2,"DT")
2960117
"^DD",364.5,364.5,3,0)
DESCRIPTION^364.53^^3;0
"^DD",364.5,364.53,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.5,364.53,0,"DT")
2951205
"^DD",364.5,364.53,0,"NM","DESCRIPTION")

"^DD",364.5,364.53,0,"UP")
364.5
"^DD",364.5,364.53,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",364.5,364.53,.01,3)
Enter a description of the data element being defined.
"^DD",364.5,364.53,.01,21,0)
^^1^1^2951205^
"^DD",364.5,364.53,.01,21,1,0)
This is a free text description of the data that this data element represents.
"^DD",364.5,364.53,.01,"DT")
2951205
"^DD",364.6,364.6,0)
FIELD^^.13^13
"^DD",364.6,364.6,0,"DDA")
N
"^DD",364.6,364.6,0,"DT")
3050504
"^DD",364.6,364.6,0,"ID",.04)
W "   ",$P(^(0),U,4)
"^DD",364.6,364.6,0,"ID",.05)
W "   ",$P(^(0),U,5)
"^DD",364.6,364.6,0,"ID",.08)
W "   ",$P(^(0),U,8)
"^DD",364.6,364.6,0,"ID",.1)
W "   ",$P(^(0),U,10)
"^DD",364.6,364.6,0,"IX","APAR",364.6,.01)

"^DD",364.6,364.6,0,"IX","APAR1",364.6,.03)

"^DD",364.6,364.6,0,"IX","ASEQ",364.6,.01)

"^DD",364.6,364.6,0,"IX","ASEQ1",364.6,.04)

"^DD",364.6,364.6,0,"IX","ASEQ2",364.6,.05)

"^DD",364.6,364.6,0,"IX","ASEQ3",364.6,.08)

"^DD",364.6,364.6,0,"IX","B",364.6,.01)

"^DD",364.6,364.6,0,"IX","C",364.6,.1)

"^DD",364.6,364.6,0,"NM","IB FORM SKELETON DEFINITION")
 
"^DD",364.6,364.6,0,"PT",364.6,.03)

"^DD",364.6,364.6,0,"PT",364.7,.01)

"^DD",364.6,364.6,0,"VRPK")
IB
"^DD",364.6,364.6,.01,0)
BILL FORM^RP353'X^IBE(353,^0;1^I $$DUP^IBCEFG0($G(DA),X,1) K X
"^DD",364.6,364.6,.01,1,0)
^.1
"^DD",364.6,364.6,.01,1,1,0)
364.6^B
"^DD",364.6,364.6,.01,1,1,1)
S ^IBA(364.6,"B",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.01,1,1,2)
K ^IBA(364.6,"B",$E(X,1,30),DA)
"^DD",364.6,364.6,.01,1,2,0)
364.6^ASEQ^MUMPS
"^DD",364.6,364.6,.01,1,2,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)=""
"^DD",364.6,364.6,.01,1,2,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=$P(Z0,U,4),Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",+X,Z1,Z2,Z3,DA)
"^DD",364.6,364.6,.01,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,2,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.01,1,2,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.01,1,2,"DT")
2960116
"^DD",364.6,364.6,.01,1,3,0)
364.6^APAR^MUMPS
"^DD",364.6,364.6,.01,1,3,1)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X S ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)=""
"^DD",364.6,364.6,.01,1,3,2)
N Z0 S Z0=$P($G(^IBA(364.6,DA,0)),U,3) I Z0,Z0'=X K ^IBA(364.6,"APAR",$E(X,1,30),Z0,DA)
"^DD",364.6,364.6,.01,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,3,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.01,1,3,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.01,1,3,"DT")
2960117
"^DD",364.6,364.6,.01,1,4,0)
^^TRIGGER^364.6^.03
"^DD",364.6,364.6,.01,1,4,1)
X ^DD(364.6,.01,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$S('$D(D0):"",D0<0:"",1:D0) X ^DD(364.6,.01,1,4,1.4)
"^DD",364.6,364.6,.01,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,69.2) S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,1.4)
S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2)
X ^DD(364.6,.01,1,4,2.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X="" S DIH=$G(^IBA(364.6,DIV(0),0)),DIV=X S $P(^(0),U,3)=DIV,DIH=364.6,DIG=.03 D ^DICR
"^DD",364.6,364.6,.01,1,4,2.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.01,1,4,79.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.01,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.01,1,4,69.2)
S I(0,0)=$G(D0),D0=Y(0) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3),Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"")
"^DD",364.6,364.6,.01,1,4,79.2)
S I(0,0)=$G(D0),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'D0!'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$P($G(^DD(353,2.02,0)),U,3)
"^DD",364.6,364.6,.01,1,4,"%D",0)
^^1^1^3000613^
"^DD",364.6,364.6,.01,1,4,"%D",1,0)
This trigger is needed for the local screen 9 logic to work correctly.
"^DD",364.6,364.6,.01,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"CREATE VALUE")
NUMBER
"^DD",364.6,364.6,.01,1,4,"DELETE CONDITION")
BILL FORM:FORMAT TYPE="BILLING SCREEN"
"^DD",364.6,364.6,.01,1,4,"DELETE VALUE")
@
"^DD",364.6,364.6,.01,1,4,"DT")
3000613
"^DD",364.6,364.6,.01,1,4,"FIELD")
ASSOCIATED FORM DEFINITION
"^DD",364.6,364.6,.01,3)
Enter a BILLING FORM that the data element will appear on.
"^DD",364.6,364.6,.01,21,0)
^^2^2^2960318^^^^
"^DD",364.6,364.6,.01,21,1,0)
Identifies a billing 'form' or 'screen' where the data element is used.
"^DD",364.6,364.6,.01,21,2,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.01,"DT")
3000613
"^DD",364.6,364.6,.02,0)
SECURITY LEVEL^SX^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^I X="N",$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.02,3)
Enter an N if no editing is allowed, L if editing is OK because this entry is associated with a locally defined form.
"^DD",364.6,364.6,.02,5,1,0)
364.6^.03^7
"^DD",364.6,364.6,.02,21,0)
^.001^4^4^3001030^^
"^DD",364.6,364.6,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  If
"^DD",364.6,364.6,.02,21,2,0)
the security level of the entry is NATIONAL (N), no local editing is
"^DD",364.6,364.6,.02,21,3,0)
allowed.  If the security level of the entry is LOCAL (L), it may be
"^DD",364.6,364.6,.02,21,4,0)
edited.
"^DD",364.6,364.6,.02,"DT")
2960117
"^DD",364.6,364.6,.03,0)
ASSOCIATED FORM DEFINITION^P364.6'^IBA(364.6,^0;3^Q
"^DD",364.6,364.6,.03,1,0)
^.1
"^DD",364.6,364.6,.03,1,1,0)
364.6^APAR1^MUMPS
"^DD",364.6,364.6,.03,1,1,1)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X S ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.03,1,1,2)
N Z0 S Z0=+$G(^IBA(364.6,DA,0)) I Z0,Z0'=X K ^IBA(364.6,"APAR",Z0,$E(X,1,30),DA)
"^DD",364.6,364.6,.03,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,1,1,"%D",1,0)
Xref by bill form and associated form field definition.
"^DD",364.6,364.6,.03,1,1,"DT")
2960117
"^DD",364.6,364.6,.03,1,2,0)
^^TRIGGER^364.6^.04
"^DD",364.6,364.6,.03,1,2,1)
X ^DD(364.6,.03,1,2,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,2,1.4)
"^DD",364.6,364.6,.03,1,2,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,2,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,4)=DIV,DIH=364.6,DIG=.04 D ^DICR
"^DD",364.6,364.6,.03,1,2,2)
Q
"^DD",364.6,364.6,.03,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,2,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,2,"%D",0)
^.101^2^2^3000424^^
"^DD",364.6,364.6,.03,1,2,"%D",1,0)
If an associated form that is not a screen form, page is taken from the
"^DD",364.6,364.6,.03,1,2,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,2,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,2,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,2,"DT")
3000405
"^DD",364.6,364.6,.03,1,2,"FIELD")
PAGE OR SEQUENCE
"^DD",364.6,364.6,.03,1,3,0)
^^TRIGGER^364.6^.05
"^DD",364.6,364.6,.03,1,3,1)
X ^DD(364.6,.03,1,3,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,3,1.4)
"^DD",364.6,364.6,.03,1,3,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,3,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,3,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,5)=DIV,DIH=364.6,DIG=.05 D ^DICR
"^DD",364.6,364.6,.03,1,3,2)
Q
"^DD",364.6,364.6,.03,1,3,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,3,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,3,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,3,"%D",1,0)
If an associated form that is not a screen form, line is taken from the
"^DD",364.6,364.6,.03,1,3,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,3,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,3,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,3,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,3,"DT")
3000405
"^DD",364.6,364.6,.03,1,3,"FIELD")
FIRST LINE NUMBER
"^DD",364.6,364.6,.03,1,4,0)
^^TRIGGER^364.6^.08
"^DD",364.6,364.6,.03,1,4,1)
X ^DD(364.6,.03,1,4,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,4,1.4)
"^DD",364.6,364.6,.03,1,4,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,4,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,4,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,8)=DIV,DIH=364.6,DIG=.08 D ^DICR
"^DD",364.6,364.6,.03,1,4,2)
Q
"^DD",364.6,364.6,.03,1,4,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,4,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,4,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,4,"%D",1,0)
If an associated form that is not a screen form, column is taken from the
"^DD",364.6,364.6,.03,1,4,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,4,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,4,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,4,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,4,"DT")
3000405
"^DD",364.6,364.6,.03,1,4,"FIELD")
STARTING COLUMN
"^DD",364.6,364.6,.03,1,5,0)
^^TRIGGER^364.6^.09
"^DD",364.6,364.6,.03,1,5,1)
X ^DD(364.6,.03,1,5,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,5,1.4)
"^DD",364.6,364.6,.03,1,5,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,5,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,5,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=364.6,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,5,2)
Q
"^DD",364.6,364.6,.03,1,5,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,5,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,5,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,5,"%D",1,0)
If an associated form that is not a screen form, length is taken from the
"^DD",364.6,364.6,.03,1,5,"%D",2,0)
associated with field definition.
"^DD",364.6,364.6,.03,1,5,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,5,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,5,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,5,"DT")
3000405
"^DD",364.6,364.6,.03,1,5,"FIELD")
LENGTH
"^DD",364.6,364.6,.03,1,6,0)
^^TRIGGER^364.6^.06
"^DD",364.6,364.6,.03,1,6,1)
X ^DD(364.6,.03,1,6,1.3) I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,6),X=X S DIU=X K Y S X="" X ^DD(364.6,.03,1,6,1.4)
"^DD",364.6,364.6,.03,1,6,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(364.6,.03,1,6,69.2) S Y(101)=$S($D(^IBE(353,D0,2)):^(2),1:"") S X=$P($P(Y(102),$C(59)_$P(Y(101),U,2)_":",2),$C(59),1)'="BILLING SCREEN" S D0=I(0,0)
"^DD",364.6,364.6,.03,1,6,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,6)=DIV,DIH=364.6,DIG=.06 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,6,2)
Q
"^DD",364.6,364.6,.03,1,6,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,6,69.2)
S I(0,0)=$S($D(D0):D0,1:""),Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:""),D0=$P(Y(1),U,1) S:'$D(^IBE(353,+D0,0)) D0=-1 S Y(102)=$C(59)_$S($D(^DD(353,2.02,0)):$P(^(0),U,3),1:"")
"^DD",364.6,364.6,.03,1,6,"%D",0)
^^2^2^3000405^
"^DD",364.6,364.6,.03,1,6,"%D",1,0)
If associated form that is not a screen form, the max number lines is taken
"^DD",364.6,364.6,.03,1,6,"%D",2,0)
from the associated with field definition.
"^DD",364.6,364.6,.03,1,6,"CREATE CONDITION")
BILL FORM:FORMAT TYPE'="BILLING SCREEN"
"^DD",364.6,364.6,.03,1,6,"CREATE VALUE")
@
"^DD",364.6,364.6,.03,1,6,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,6,"DT")
3000405
"^DD",364.6,364.6,.03,1,6,"FIELD")
MAX NUMBER LINES
"^DD",364.6,364.6,.03,1,7,0)
^^TRIGGER^364.6^.02
"^DD",364.6,364.6,.03,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X="L" X ^DD(364.6,.03,1,7,1.4)
"^DD",364.6,364.6,.03,1,7,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=364.6,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.03,1,7,2)
Q
"^DD",364.6,364.6,.03,1,7,3)
DO NOT DELETE
"^DD",364.6,364.6,.03,1,7,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.03,1,7,"%D",1,0)
Only local entries can be associated.
"^DD",364.6,364.6,.03,1,7,"CREATE VALUE")
"L"
"^DD",364.6,364.6,.03,1,7,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.03,1,7,"DT")
2960117
"^DD",364.6,364.6,.03,1,7,"FIELD")
SECURITY LEVEL
"^DD",364.6,364.6,.03,3)
Enter the form definition record this definition will override.
"^DD",364.6,364.6,.03,5,1,0)
364.6^.01^4
"^DD",364.6,364.6,.03,21,0)
^^1^1^2960117^^
"^DD",364.6,364.6,.03,21,1,0)
The form definition record this definition will override.
"^DD",364.6,364.6,.03,"DT")
3000414
"^DD",364.6,364.6,.04,0)
PAGE OR SEQUENCE^FX^^0;4^K:$L(X)>20!($L(X)<1) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,2) K X
"^DD",364.6,364.6,.04,1,0)
^.1^^-1
"^DD",364.6,364.6,.04,1,1,0)
364.6^ASEQ1^MUMPS
"^DD",364.6,364.6,.04,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 S ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)=""
"^DD",364.6,364.6,.04,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,5),Z3=$P(Z0,U,8) I Z1,Z2,Z3 K ^IBA(364.6,"ASEQ",Z1,$E(X,1,30),Z2,Z3,DA)
"^DD",364.6,364.6,.04,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.04,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.04,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.04,1,1,"DT")
2960117
"^DD",364.6,364.6,.04,3)
This data must be 1-20 char long, can't be an assoc form, and must be a unique form/page/line/column.
"^DD",364.6,364.6,.04,5,1,0)
364.6^.03^2
"^DD",364.6,364.6,.04,21,0)
^^4^4^2960318^^^^
"^DD",364.6,364.6,.04,21,1,0)
This field is used to specify the page, section, transaction segment, etc.
"^DD",364.6,364.6,.04,21,2,0)
that the data element is to be associated with.  This field will be used as
"^DD",364.6,364.6,.04,21,3,0)
the second-level sort field when extracting data fields for this form.
"^DD",364.6,364.6,.04,21,4,0)
The combination of form/page/line/column must be unique.
"^DD",364.6,364.6,.04,"DT")
3000428
"^DD",364.6,364.6,.05,0)
FIRST LINE NUMBER^NJ4,0X^^0;5^K:+X'=X!(X>9999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,3) K X
"^DD",364.6,364.6,.05,.1)
LINE
"^DD",364.6,364.6,.05,1,0)
^.1
"^DD",364.6,364.6,.05,1,1,0)
364.6^ASEQ2^MUMPS
"^DD",364.6,364.6,.05,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)=""
"^DD",364.6,364.6,.05,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,8) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,$E(X,1,30),Z3,DA)
"^DD",364.6,364.6,.05,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.05,1,1,"%D",0)
^^1^1^2960117^^^^
"^DD",364.6,364.6,.05,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.05,1,1,"DT")
2960117
"^DD",364.6,364.6,.05,3)
Type a # 0-9999, 0 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.05,5,1,0)
364.6^.03^3
"^DD",364.6,364.6,.05,21,0)
^^5^5^2960318^^^
"^DD",364.6,364.6,.05,21,1,0)
If this is a printed form, this is the first line number that this data
"^DD",364.6,364.6,.05,21,2,0)
element will appear on.  For transmitted forms, this is assumed to always
"^DD",364.6,364.6,.05,21,3,0)
be a 1.  This will be used as the third-level sort field when extracting
"^DD",364.6,364.6,.05,21,4,0)
data fields for this form.  The combination of form/page/line/column must
"^DD",364.6,364.6,.05,21,5,0)
be unique.
"^DD",364.6,364.6,.05,"DT")
3000428
"^DD",364.6,364.6,.06,0)
MAX NUMBER LINES^NJ3,0X^^0;6^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3) K X
"^DD",364.6,364.6,.06,3)
Type a Number between 0 and 999, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.06,5,1,0)
364.6^.03^6
"^DD",364.6,364.6,.06,21,0)
^^2^2^2951205^
"^DD",364.6,364.6,.06,21,1,0)
If a printed form, this is the highest numbered line number that this data
"^DD",364.6,364.6,.06,21,2,0)
element is allowed to print on.
"^DD",364.6,364.6,.06,"DT")
2960117
"^DD",364.6,364.6,.07,0)
LOCAL OVERRIDE ALLOWED^S^0:NO;1:YES;^0;7^Q
"^DD",364.6,364.6,.07,3)
Enter 0 (NO) to prevent local override, 1 to allow local override.
"^DD",364.6,364.6,.07,21,0)
^.001^2^2^3020822^^
"^DD",364.6,364.6,.07,21,1,0)
This controls whether or not the output forms generator will allow for a
"^DD",364.6,364.6,.07,21,2,0)
redefinition of this record via a local override.
"^DD",364.6,364.6,.07,"DT")
2960311
"^DD",364.6,364.6,.08,0)
STARTING COLUMN OR PIECE^NJ3,1X^^0;8^K:+X'=X!(X>999)!(X<0)!($S(X[".":X'?.E1"."1.2N,1:0)) X I $D(X),$S($P($G(^IBE(353,+$G(^IBA(364.6,+DA,0)),2)),U,2)="S":0,1:$P($G(^IBA(364.6,DA,0)),U,3))!$$DUP^IBCEFG0(DA,X,4) K X
"^DD",364.6,364.6,.08,.1)
COLUMN
"^DD",364.6,364.6,.08,1,0)
^.1
"^DD",364.6,364.6,.08,1,1,0)
364.6^ASEQ3^MUMPS
"^DD",364.6,364.6,.08,1,1,1)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 S ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)=""
"^DD",364.6,364.6,.08,1,1,2)
N Z0,Z1,Z2,Z3 S Z0=$G(^IBA(364.6,DA,0)),Z1=+Z0,Z2=$P(Z0,U,4),Z3=$P(Z0,U,5) I Z1,Z2'="",Z3 K ^IBA(364.6,"ASEQ",Z1,Z2,Z3,$E(X,1,30),DA)
"^DD",364.6,364.6,.08,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,1,"%D",0)
^^1^1^2960117^
"^DD",364.6,364.6,.08,1,1,"%D",1,0)
This xref contains the sequence to use to extract or print the form fields.
"^DD",364.6,364.6,.08,1,1,"DT")
2960117
"^DD",364.6,364.6,.08,1,2,0)
^^TRIGGER^364.6^.11
"^DD",364.6,364.6,.08,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=Y(0)["." I X S X=DIV S Y(1)=$S($D(^IBA(364.6,D0,0)):^(0),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=1 X ^DD(364.6,.08,1,2,1.4)
"^DD",364.6,364.6,.08,1,2,1.4)
S DIH=$S($D(^IBA(364.6,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,11)=DIV,DIH=364.6,DIG=.11 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",364.6,364.6,.08,1,2,2)
Q
"^DD",364.6,364.6,.08,1,2,3)
DO NOT DELETE
"^DD",364.6,364.6,.08,1,2,"%D",0)
^^2^2^2960126^^^
"^DD",364.6,364.6,.08,1,2,"%D",1,0)
If the starting column or piece is not a whole number, this must be a
"^DD",364.6,364.6,.08,1,2,"%D",2,0)
calculate only field - no output.
"^DD",364.6,364.6,.08,1,2,"CREATE CONDITION")
STARTING COLUMN OR PIECE["."
"^DD",364.6,364.6,.08,1,2,"CREATE VALUE")
S X=1
"^DD",364.6,364.6,.08,1,2,"DELETE VALUE")
NO EFFECT
"^DD",364.6,364.6,.08,1,2,"DT")
2960126
"^DD",364.6,364.6,.08,1,2,"FIELD")
#.11
"^DD",364.6,364.6,.08,3)
Type a # 0-9999, 1-2 Decimals, can't be assoc form, need unique form/pg/line/col.
"^DD",364.6,364.6,.08,5,1,0)
364.6^.03^4
"^DD",364.6,364.6,.08,21,0)
^^5^5^2960318^^^^
"^DD",364.6,364.6,.08,21,1,0)
This is the column on the form, position in the data string (for non-printed
"^DD",364.6,364.6,.08,21,2,0)
forms) -  starting at position 1, or delimited piece that this data element
"^DD",364.6,364.6,.08,21,3,0)
is to be printed or stored in.  This will be used as the fourth-level sort
"^DD",364.6,364.6,.08,21,4,0)
field when extracting data fields for this form.  The combination of
"^DD",364.6,364.6,.08,21,5,0)
form/page/line/column must be unique.
"^DD",364.6,364.6,.08,"DT")
3000428
"^DD",364.6,364.6,.09,0)
LENGTH^NJ3,0X^^0;9^K:+X'=X!(X>250)!(X<1)!(X?.E1"."1N.N) X I $D(X),$P($G(^IBA(364.6,DA,0)),U,3),$P($G(^IBE(353,+^IBA(364.6,DA,0),2)),U,2)'="S" K X
"^DD",364.6,364.6,.09,3)
Type a Number between 1 and 250, 0 Decimal Digits (can't be an associated form).
"^DD",364.6,364.6,.09,5,1,0)
364.6^.03^5
"^DD",364.6,364.6,.09,21,0)
^^3^3^2951205^
"^DD",364.6,364.6,.09,21,1,0)
The length desired for the data element.  If present, this field will be used
"^DD",364.6,364.6,.09,21,2,0)
to truncate or pad the data element to this length after the element has been
"^DD",364.6,364.6,.09,21,3,0)
passed through the routine identified in the FORMAT ROUTINE field.
"^DD",364.6,364.6,.09,"DT")
3000111
"^DD",364.6,364.6,.1,0)
SHORT DESCRIPTION^F^^0;10^K:$L(X)>30!($L(X)<1) X
"^DD",364.6,364.6,.1,1,0)
^.1
"^DD",364.6,364.6,.1,1,1,0)
364.6^C
"^DD",364.6,364.6,.1,1,1,1)
S ^IBA(364.6,"C",$E(X,1,30),DA)=""
"^DD",364.6,364.6,.1,1,1,2)
K ^IBA(364.6,"C",$E(X,1,30),DA)
"^DD",364.6,364.6,.1,1,1,3)
DO NOT DELETE
"^DD",364.6,364.6,.1,1,1,"%D",0)
^^1^1^2960123^
"^DD",364.6,364.6,.1,1,1,"%D",1,0)
Field name lookup
"^DD",364.6,364.6,.1,1,1,"DT")
2960123
"^DD",364.6,364.6,.1,3)
Answer must be 1-30 characters in length.
"^DD",364.6,364.6,.1,21,0)
^^2^2^2951207^
"^DD",364.6,364.6,.1,21,1,0)
This is a short description of the field that is used as an identifier to
"^DD",364.6,364.6,.1,21,2,0)
make lookups on this file meaningful.
"^DD",364.6,364.6,.1,"DT")
2960123
"^DD",364.6,364.6,.11,0)
CALCULATE ONLY OR OUTPUT^S^1:CALCULATE ONLY;0:OUTPUT;^0;11^Q
"^DD",364.6,364.6,.11,3)
Enter 1 if this field is used for calculation purposes and is not meant to be output
"^DD",364.6,364.6,.11,5,1,0)
364.6^.08^2
"^DD",364.6,364.6,.11,21,0)
^^4^4^2960715^^^^
"^DD",364.6,364.6,.11,21,1,0)
This field is set to 1 if there is a need to do a special extract or
"^DD",364.6,364.6,.11,21,2,0)
calculation at some point in the processing, but no output is desired
"^DD",364.6,364.6,.11,21,3,0)
from the field's code execution.  Used to set up arrays for group elements
"^DD",364.6,364.6,.11,21,4,0)
then the individual elements are output separately.
"^DD",364.6,364.6,.11,"DT")
2960715
"^DD",364.6,364.6,.12,0)
TRANSMIT IGNORES IF NULL^S^0:FALSE;1:TRUE;^0;12^Q
"^DD",364.6,364.6,.12,3)
Enter 1 (TRUE) if there should be no entry made in the output global if the data value of the element is null.
"^DD",364.6,364.6,.12,21,0)
^.001^5^5^3001030^^^
"^DD",364.6,364.6,.12,21,1,0)
This field can be used to suppress output of a field if its value is null.
"^DD",364.6,364.6,.12,21,2,0)
If not suppressed, an entry is made in the output global used by the
"^DD",364.6,364.6,.12,21,3,0)
formatter, regardless of the contents of the data for this field.
"^DD",364.6,364.6,.12,21,4,0)
Supressing the value results in no output to the formatter's output
"^DD",364.6,364.6,.12,21,5,0)
global if the value of the data for this field is determined to be null.
"^DD",364.6,364.6,.12,"DT")
2991006
"^DD",364.6,364.6,.13,0)
DATA REQUIRED FOR FIELD^S^1:YES;0:NO;^0;13^Q
"^DD",364.6,364.6,.13,3)
Enter yes if there should always be data in this field.
"^DD",364.6,364.6,.13,21,0)
^^2^2^3000216^
"^DD",364.6,364.6,.13,21,1,0)
This field is a flag that will stop the output of a record if this field
"^DD",364.6,364.6,.13,21,2,0)
indicates data is required and the data extracted is null.
"^DD",364.6,364.6,.13,"DT")
3000216
"^DD",364.7,364.7,0)
FIELD^^3^12
"^DD",364.7,364.7,0,"DDA")
N
"^DD",364.7,364.7,0,"DT")
2960710
"^DD",364.7,364.7,0,"ID",.03)
S %I=Y,Y=$S('$D(^(0)):"",$D(^IBA(364.5,+$P(^(0),U,3),0))#2:$P(^(0),U,1),1:""),C=$P(^DD(364.5,.01,0),U,2) D Y^DIQ:Y]"" W "   ",Y,@("$E("_DIC_"%I,0),0)") S Y=%I K %I
"^DD",364.7,364.7,0,"IX","AINS",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINS1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP",364.7,.01)

"^DD",364.7,364.7,0,"IX","AINTYP1",364.7,.05)

"^DD",364.7,364.7,0,"IX","AINTYP2",364.7,.06)

"^DD",364.7,364.7,0,"IX","ATYPE",364.7,.01)

"^DD",364.7,364.7,0,"IX","ATYPE1",364.7,.06)

"^DD",364.7,364.7,0,"IX","B",364.7,.01)

"^DD",364.7,364.7,0,"IX","C",364.7,.03)

"^DD",364.7,364.7,0,"NM","IB FORM FIELD CONTENT")
 
"^DD",364.7,364.7,0,"VRPK")
IB
"^DD",364.7,364.7,.01,0)
FORM FIELD REFERENCE^RP364.6'^IBA(364.6,^0;1^Q
"^DD",364.7,364.7,.01,1,0)
^.1
"^DD",364.7,364.7,.01,1,1,0)
364.7^B
"^DD",364.7,364.7,.01,1,1,1)
S ^IBA(364.7,"B",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.01,1,1,2)
K ^IBA(364.7,"B",$E(X,1,30),DA)
"^DD",364.7,364.7,.01,1,2,0)
364.7^ATYPE^MUMPS
"^DD",364.7,364.7,.01,1,2,1)
N Z1,Z0 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3),'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,2,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,6) I Z1'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"ATYPE",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,2,"%D",0)
^^1^1^2980104^^^^
"^DD",364.7,364.7,.01,1,2,"%D",1,0)
Xref by form and bill type
"^DD",364.7,364.7,.01,1,2,"DT")
2960117
"^DD",364.7,364.7,.01,1,3,0)
364.7^AINTYP^MUMPS
"^DD",364.7,364.7,.01,1,3,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) S ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)=""
"^DD",364.7,364.7,.01,1,3,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5),Z2=$P(Z0,U,6) I Z1,Z2'="",$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINTYP",$P(^IBA(364.6,+X,0),U,3),Z1,Z2,DA)
"^DD",364.7,364.7,.01,1,3,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,3,"%D",0)
^^1^1^2971231^^^
"^DD",364.7,364.7,.01,1,3,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.01,1,3,"DT")
2960117
"^DD",364.7,364.7,.01,1,4,0)
364.7^AINS^MUMPS
"^DD",364.7,364.7,.01,1,4,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3),$P(Z0,U,6)="" S ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)=""
"^DD",364.7,364.7,.01,1,4,2)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P(Z0,U,5) I Z1,$P($G(^IBA(364.6,+X,0)),U,3) K ^IBA(364.7,"AINS",$P(^IBA(364.6,+X,0),U,3),Z1,DA)
"^DD",364.7,364.7,.01,1,4,3)
DO NOT DELETE
"^DD",364.7,364.7,.01,1,4,"%D",0)
^^1^1^2971231^^
"^DD",364.7,364.7,.01,1,4,"%D",1,0)
Xref by form field and insurance company
"^DD",364.7,364.7,.01,1,4,"DT")
2960118
"^DD",364.7,364.7,.01,3)
Enter the billing form that this field is associated with
"^DD",364.7,364.7,.01,21,0)
^^2^2^2951207^^^^
"^DD",364.7,364.7,.01,21,1,0)
This is a pointer to the billing form field that this field is associated
"^DD",364.7,364.7,.01,21,2,0)
with.
"^DD",364.7,364.7,.01,"DT")
3000428
"^DD",364.7,364.7,.02,0)
SECURITY LEVEL^S^N:NATIONAL,NO EDIT;L:LOCAL;^0;2^Q
"^DD",364.7,364.7,.02,3)
Enter N for nationally released fields (no edit) or L for locally added fields.
"^DD",364.7,364.7,.02,21,0)
^^3^3^2951219^^^
"^DD",364.7,364.7,.02,21,1,0)
This field determines whether or not editing of the entry is allowed.  For
"^DD",364.7,364.7,.02,21,2,0)
NATIONAL (N) field, no local editing is allowed.  If LOCAL (L) field is
"^DD",364.7,364.7,.02,21,3,0)
created, editing is allowed.
"^DD",364.7,364.7,.02,"DT")
3000428
"^DD",364.7,364.7,.03,0)
DATA ELEMENT^P364.5'^IBA(364.5,^0;3^Q
"^DD",364.7,364.7,.03,1,0)
^.1
"^DD",364.7,364.7,.03,1,1,0)
364.7^C
"^DD",364.7,364.7,.03,1,1,1)
S ^IBA(364.7,"C",$E(X,1,30),DA)=""
"^DD",364.7,364.7,.03,1,1,2)
K ^IBA(364.7,"C",$E(X,1,30),DA)
"^DD",364.7,364.7,.03,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.03,1,1,"%D",0)
^^1^1^2960702^
"^DD",364.7,364.7,.03,1,1,"%D",1,0)
Xref by DATA ELEMENT NAME
"^DD",364.7,364.7,.03,1,1,"DT")
2960702
"^DD",364.7,364.7,.03,3)
Enter the data element that will define this form field.  If used on a screen, it must be a fileman type.
"^DD",364.7,364.7,.03,21,0)
^^1^1^2960627^^^^
"^DD",364.7,364.7,.03,21,1,0)
This identifies the data element that be extracted for this entry.
"^DD",364.7,364.7,.03,23,0)
^^4^4^2960627^^^^
"^DD",364.7,364.7,.03,23,1,0)
This is the data element that will be allowed to be displayed/edited on a
"^DD",364.7,364.7,.03,23,2,0)
screen, extracted for a transmit, or printed on a printed form.  If used on
"^DD",364.7,364.7,.03,23,3,0)
a screen, the data element must be a fileman type and a local field (>10000
"^DD",364.7,364.7,.03,23,4,0)
for ifn and on a node >10000) to be editable.
"^DD",364.7,364.7,.03,"DT")
2960702
"^DD",364.7,364.7,.04,0)
SCREEN PROMPT^FX^^0;4^K:$L(X)>70!($L(X)<1) X I $D(X),$P($G(^IBE(353,+$G(^IBA(364.6,+$G(^IBA(364.7,DA,0)),0)),2)),U,2)'="S" K X
"^DD",364.7,364.7,.04,.1)
 
"^DD",364.7,364.7,.04,1,0)
^.1^^0
"^DD",364.7,364.7,.04,3)
Answer must be 1-70 characters in length.
"^DD",364.7,364.7,.04,21,0)
3^^2^2^2960321^^^^
"^DD",364.7,364.7,.04,21,1,0)
This is used only by screen-type forms to place a prompt on the screen
"^DD",364.7,364.7,.04,21,2,0)
for a particular field.
"^DD",364.7,364.7,.04,23,0)
^^3^3^2960321^^^^
"^DD",364.7,364.7,.04,23,1,0)
This is the prompt that will preceed the data element defined for this
"^DD",364.7,364.7,.04,23,2,0)
entry.  If no data element, this prompt will display.  This field is only
"^DD",364.7,364.7,.04,23,3,0)
used for screen-type forms.
"^DD",364.7,364.7,.04,"DT")
2960321
"^DD",364.7,364.7,.05,0)
INSURANCE COMPANY^P36'^DIC(36,^0;5^Q
"^DD",364.7,364.7,.05,1,0)
^.1
"^DD",364.7,364.7,.05,1,1,0)
364.7^AINS1^MUMPS
"^DD",364.7,364.7,.05,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,$P(Z0,U,6)="" S ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.05,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K ^IBA(364.7,"AINS",Z1,$E(X,1,30),DA) I Z2'="",$D(^IBA(364.7,"AINTYP",Z1,X,Z2,DA)) S ^IBA(364.7,"ATYPE",Z1,Z2,DA)=""
"^DD",364.7,364.7,.05,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,1,"%D",0)
^^1^1^2960118^
"^DD",364.7,364.7,.05,1,1,"%D",1,0)
Xref by form field and insurance company.
"^DD",364.7,364.7,.05,1,1,"DT")
2960118
"^DD",364.7,364.7,.05,1,2,0)
364.7^AINTYP1^MUMPS
"^DD",364.7,364.7,.05,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) I Z1,Z2'="" S ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)="" K ^IBA(364.7,"ATYPE",Z1,Z2,DA),^IBA(364.7,"AINS",Z1,X,DA)
"^DD",364.7,364.7,.05,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,6) K:Z1&(Z2'="") ^IBA(364.7,"AINTYP",Z1,$E(X,1,30),Z2,DA)
"^DD",364.7,364.7,.05,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.05,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.05,1,2,"%D",1,0)
Xref by insurance company and bill type
"^DD",364.7,364.7,.05,1,2,"DT")
2960117
"^DD",364.7,364.7,.05,3)
Enter the name of the insurance company that this field is associated with.
"^DD",364.7,364.7,.05,21,0)
^^2^2^2951207^
"^DD",364.7,364.7,.05,21,1,0)
This is the insurance company who has a need for other than the standard
"^DD",364.7,364.7,.05,21,2,0)
data in this field.
"^DD",364.7,364.7,.05,"DT")
3000428
"^DD",364.7,364.7,.06,0)
BILL TYPE^S^I:INPATIENT;O:OUTPATIENT;^0;6^Q
"^DD",364.7,364.7,.06,1,0)
^.1
"^DD",364.7,364.7,.06,1,1,0)
364.7^ATYPE1^MUMPS
"^DD",364.7,364.7,.06,1,1,1)
N Z0,Z1 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3) I Z1,'$P(Z0,U,5) S ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,1,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1 K ^IBA(364.7,"ATYPE",Z1,$E(X,1,30),DA) I Z2,$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) S ^IBA(364.7,"AINS",Z1,Z2,DA)=""
"^DD",364.7,364.7,.06,1,1,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,1,"%D",0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,1,1,"%D",1,0)
Xref by form and bill type.
"^DD",364.7,364.7,.06,1,1,"DT")
2960117
"^DD",364.7,364.7,.06,1,2,0)
364.7^AINTYP2^MUMPS
"^DD",364.7,364.7,.06,1,2,1)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) I Z1,Z2 K:'$D(^IBA(364.7,"AINTYP",Z1,Z2,X,DA)) ^IBA(364.7,"AINS",Z1,Z2,DA) S ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)=""
"^DD",364.7,364.7,.06,1,2,2)
N Z0,Z1,Z2 S Z0=$G(^IBA(364.7,DA,0)),Z1=+$P($G(^IBA(364.6,+Z0,0)),U,3),Z2=$P(Z0,U,5) K:Z1&Z2 ^IBA(364.7,"AINTYP",Z1,Z2,$E(X,1,30),DA)
"^DD",364.7,364.7,.06,1,2,3)
DO NOT DELETE
"^DD",364.7,364.7,.06,1,2,"%D",0)
^^1^1^2960117^^^^
"^DD",364.7,364.7,.06,1,2,"%D",1,0)
Xref by form, insurance company and bill type
"^DD",364.7,364.7,.06,1,2,"DT")
2960117
"^DD",364.7,364.7,.06,3)
Enter the type of the bill.
"^DD",364.7,364.7,.06,21,0)
^^1^1^2960117^^
"^DD",364.7,364.7,.06,21,1,0)
This is the type of bill that requires this field.
"^DD",364.7,364.7,.06,"DT")
3000428
"^DD",364.7,364.7,.07,0)
PAD CHARACTER^S^ZL:ZERO PAD ON LEFT;ZR:ZERO PAD ON RIGHT;SL:SPACE PAD ON LEFT;SR:SPACE PAD ON RIGHT;N:NO PAD REQUIRED;^0;7^Q
"^DD",364.7,364.7,.07,3)
Enter the code that corresponds to the format and pad character to use for the data output in this field.
"^DD",364.7,364.7,.07,21,0)
^^3^3^2960126^^
"^DD",364.7,364.7,.07,21,1,0)
If present, this defines the character to be used to pad the DATA
"^DD",364.7,364.7,.07,21,2,0)
ELEMENT to its desired length and the orientation of the padding characters
"^DD",364.7,364.7,.07,21,3,0)
to the left or right of the data.  The default is space pad to the right.
"^DD",364.7,364.7,.07,"DT")
2960126
"^DD",364.7,364.7,.08,0)
REQUIRED^S^0:NO;1:YES;^0;8^Q
"^DD",364.7,364.7,.08,3)
Enter 1 (YES) if this data element is on a local screen 9 form and the data is required for the bill to be authorized.
"^DD",364.7,364.7,.08,21,0)
^.001^4^4^3001030^^
"^DD",364.7,364.7,.08,21,1,0)
This field controls the required/not required status of a data element
"^DD",364.7,364.7,.08,21,2,0)
on a local screen 9 form.  If this field is 1 (YES), this data element
"^DD",364.7,364.7,.08,21,3,0)
is always required to have data (not null) in order for a bill to be
"^DD",364.7,364.7,.08,21,4,0)
authorized.
"^DD",364.7,364.7,.08,"DT")
2951207
"^DD",364.7,364.7,.09,0)
EDIT STATUS^S^E:EDITABLE;D:DISPLAY ONLY;^0;9^Q
"^DD",364.7,364.7,.09,3)
Enter 'E' to enable editing for this field, 'D' for a display only field.
"^DD",364.7,364.7,.09,21,0)
^^2^2^2960320^
"^DD",364.7,364.7,.09,21,1,0)
This field is used to control whether or not a data element on a screen is
"^DD",364.7,364.7,.09,21,2,0)
editable or for display-only purposes.
"^DD",364.7,364.7,.09,"DT")
2960320
"^DD",364.7,364.7,.1,0)
EDIT GROUP NUMBER^NJ2,0^^0;10^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",364.7,364.7,.1,3)
 Enter the edit group # that this field will be included in.  Valid #'s are 1-99.
"^DD",364.7,364.7,.1,21,0)
^^6^6^2960321^^
"^DD",364.7,364.7,.1,21,1,0)
This field contains the # of the edit group that the screen data element
"^DD",364.7,364.7,.1,21,2,0)
will be included with.  When this group # is selected on an edit screen,
"^DD",364.7,364.7,.1,21,3,0)
all data elements assigned to this group # on this screen will be presented
"^DD",364.7,364.7,.1,21,4,0)
for editing.  If no # is entered here, this field will not be available for
"^DD",364.7,364.7,.1,21,5,0)
editing.  This field will only apply to screen-type forms' editable data
"^DD",364.7,364.7,.1,21,6,0)
element descriptions.
"^DD",364.7,364.7,.1,"DT")
2960321
"^DD",364.7,364.7,1,0)
FORMAT CODE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",364.7,364.7,1,3)
This is Standard MUMPS code.
"^DD",364.7,364.7,1,9)
@
"^DD",364.7,364.7,1,21,0)
^^8^8^2951207^
"^DD",364.7,364.7,1,21,1,0)
This is the code that will be xecuted to format the 'raw' data element
"^DD",364.7,364.7,1,21,2,0)
value that is returned from the execution of the DATA ELEMENT's definition.
"^DD",364.7,364.7,1,21,3,0)
This code can assume the variable/array IBXDATA is available as input and
"^DD",364.7,364.7,1,21,4,0)
should set this variable/array as its output.  Standard calls for data
"^DD",364.7,364.7,1,21,5,0)
formatting have been provided.  The variables IBXPG, IBXLN, IBXCOL are the
"^DD",364.7,364.7,1,21,6,0)
only IBX* variables that should be changed in this routine.  These represent
"^DD",364.7,364.7,1,21,7,0)
the page, line, column as the first 3 levels of subscript for the output
"^DD",364.7,364.7,1,21,8,0)
array.
"^DD",364.7,364.7,1,"DT")
2951207
"^DD",364.7,364.7,3,0)
FORMAT CODE DESCRIPTION^364.73^^3;0
"^DD",364.7,364.7,3,21,0)
^.001^1^1^3010102^^
"^DD",364.7,364.7,3,21,1,0)
This field describes the function of the format code entered.
"^DD",364.7,364.7,3,"DT")
2960710
"^DD",364.7,364.73,0)
FORMAT CODE DESCRIPTION SUB-FIELD^^.01^1
"^DD",364.7,364.73,0,"DT")
2960710
"^DD",364.7,364.73,0,"NM","FORMAT CODE DESCRIPTION")
 
"^DD",364.7,364.73,0,"UP")
364.7
"^DD",364.7,364.73,.01,0)
FORMAT CODE DESCRIPTION^W^^0;1^Q
"^DD",364.7,364.73,.01,3)
Enter a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,21,0)
^.001^1^1^3010102^^^^
"^DD",364.7,364.73,.01,21,1,0)
This is a description of the processing logic of the format code.
"^DD",364.7,364.73,.01,"DT")
2960710
"^DD",399,399,.19,0)
FORM TYPE^RP353'^IBE(353,^0;19^Q
"^DD",399,399,.19,1,0)
^.1
"^DD",399,399,.19,1,1,0)
^^TRIGGER^399^.09
"^DD",399,399,.19,1,1,1)
X ^DD(399,.19,1,1,1.3) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$P(Y(1),U,9),X=X S DIU=X K Y S X=DIV S X=5 X ^DD(399,.19,1,1,1.4)
"^DD",399,399,.19,1,1,1.3)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X X ^DD(399,.19,1,1,69.2) S Y(1)=X S X=$P($P(Y(3),$C(59)_$P(Y(2),U,9)_":",2),$C(59),1)="",Y=X,X=Y(1),X=X&Y
"^DD",399,399,.19,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,9)=DIV,DIH=399,DIG=.09 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,.19,1,1,2)
Q
"^DD",399,399,.19,1,1,69.2)
S Y(3)=$C(59)_$S($D(^DD(399,.09,0)):$P(^(0),U,3),1:""),Y(2)=$S($D(^DGCR(399,D0,0)):^(0),1:"") S X=$S('$D(^IBE(353,+Y(0),0)):"",1:$P(^(0),U,1))="HCFA 1500"
"^DD",399,399,.19,1,1,"%D",0)
^^2^2^2920430^
"^DD",399,399,.19,1,1,"%D",1,0)
If the HCFA 1500 claim form is used and no coding method defined, then
"^DD",399,399,.19,1,1,"%D",2,0)
set coding method to HCPCS.
"^DD",399,399,.19,1,1,"CREATE CONDITION")
FORM TYPE="HCFA 1500"&(PROCEDURE CODING METHOD="")
"^DD",399,399,.19,1,1,"CREATE VALUE")
S X=5
"^DD",399,399,.19,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.19,1,1,"DT")
2920430
"^DD",399,399,.19,1,1,"FIELD")
PROCEDURE CODING METHOD
"^DD",399,399,.19,1,2,0)
399^AREV7^MUMPS
"^DD",399,399,.19,1,2,1)
S DGRVRCAL=1
"^DD",399,399,.19,1,2,2)
S DGRVRCAL=2
"^DD",399,399,.19,1,2,3)
DO NOT DELETE
"^DD",399,399,.19,1,2,"%D",0)
^^2^2^2940214^
"^DD",399,399,.19,1,2,"%D",1,0)
Variable causes revenue codes and chrges to be re-calculated on return
"^DD",399,399,.19,1,2,"%D",2,0)
to the enter/edit billing screens.
"^DD",399,399,.19,1,2,"DT")
2920428
"^DD",399,399,.19,1,3,0)
399^AH^MUMPS
"^DD",399,399,.19,1,3,1)
D ALLID^IBCEP3(DA,.19,1)
"^DD",399,399,.19,1,3,2)
D ALLID^IBCEP3(DA,.19,2)
"^DD",399,399,.19,1,3,3)
Do not delete
"^DD",399,399,.19,1,3,"%D",0)
^.101^3^3^3000926^^^
"^DD",399,399,.19,1,3,"%D",1,0)
This cross reference determines if the change of form type requires the
"^DD",399,399,.19,1,3,"%D",2,0)
provider id's to be updated or deleted.  If it does, the update/deletion
"^DD",399,399,.19,1,3,"%D",3,0)
is performed for the claim.
"^DD",399,399,.19,1,3,"DT")
3000926
"^DD",399,399,.19,1,4,0)
399^AI^MUMPS
"^DD",399,399,.19,1,4,1)
D BILLPNS^IBCU(DA)
"^DD",399,399,.19,1,4,2)
Q
"^DD",399,399,.19,1,4,3)
Do Not Delete
"^DD",399,399,.19,1,4,"%D",0)
^.101^2^2^3050822^^
"^DD",399,399,.19,1,4,"%D",1,0)
This cross reference updates all Bill Provider #s based on the Form Type,  
"^DD",399,399,.19,1,4,"%D",2,0)
using the Insurance Companies Hospital or Professional Provider Number.  
"^DD",399,399,.19,1,4,"DT")
3020820
"^DD",399,399,.19,1,5,0)
399^AJ^MUMPS
"^DD",399,399,.19,1,5,1)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,2)
D ATTREND^IBCU1(DA,"","")
"^DD",399,399,.19,1,5,3)
Do Not Delete
"^DD",399,399,.19,1,5,"%D",0)
^^14^14^3060509^
"^DD",399,399,.19,1,5,"%D",1,0)
This Mumps cross reference is used to potentially trigger 6 other fields 
"^DD",399,399,.19,1,5,"%D",2,0)
in file 399.  The fields are triggered when the insurance companies in the
"^DD",399,399,.19,1,5,"%D",3,0)
claim have flags set to use the attending or rendering physicians as the 
"^DD",399,399,.19,1,5,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06 
"^DD",399,399,.19,1,5,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID 
"^DD",399,399,.19,1,5,"%D",6,0)
INST).
"^DD",399,399,.19,1,5,"%D",7,0)
 
"^DD",399,399,.19,1,5,"%D",8,0)
The following fields are the ones being "triggered":
"^DD",399,399,.19,1,5,"%D",9,0)
#122 PRIMARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",10,0)
#123 SECONDARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",11,0)
#124 TERTIARY PROVIDER #
"^DD",399,399,.19,1,5,"%D",12,0)
#128 PRIMARY ID QUALIFER
"^DD",399,399,.19,1,5,"%D",13,0)
#129 SECONDARY ID QUALIFIER
"^DD",399,399,.19,1,5,"%D",14,0)
#130 TERTIARY ID QUALIFIER 
"^DD",399,399,.19,1,5,"DT")
3060508
"^DD",399,399,.19,3)
Enter the type of claim form to be used.
"^DD",399,399,.19,5,1,0)
399^.01^7
"^DD",399,399,.19,5,2,0)
399^.27^1
"^DD",399,399,.19,5,3,0)
399^135^2
"^DD",399,399,.19,21,0)
^^1^1^2991112^^^^
"^DD",399,399,.19,21,1,0)
The form type that the bill is printed on.
"^DD",399,399,.19,"DT")
3060508
"^DD",399,399,.22,0)
DEFAULT DIVISION^P40.8'^DG(40.8,^0;22^Q
"^DD",399,399,.22,1,0)
^.1
"^DD",399,399,.22,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,.22,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",1) X ^DD(399,.22,1,1,1.4)
"^DD",399,399,.22,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,.22,1,1,2)
Q
"^DD",399,399,.22,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",1)
"^DD",399,399,.22,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,.22,1,2,0)
^^TRIGGER^399^123
"^DD",399,399,.22,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",2) X ^DD(399,.22,1,2,1.4)
"^DD",399,399,.22,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR
"^DD",399,399,.22,1,2,2)
Q
"^DD",399,399,.22,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",2)
"^DD",399,399,.22,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,2,"DT")
3040611
"^DD",399,399,.22,1,2,"FIELD")
SECONDARY PROVIDER #
"^DD",399,399,.22,1,3,0)
^^TRIGGER^399^124
"^DD",399,399,.22,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,"",3) X ^DD(399,.22,1,3,1.4)
"^DD",399,399,.22,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,4)=DIV,DIH=399,DIG=124 D ^DICR
"^DD",399,399,.22,1,3,2)
Q
"^DD",399,399,.22,1,3,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,"",3)
"^DD",399,399,.22,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,3,"DT")
3040611
"^DD",399,399,.22,1,3,"FIELD")
TERTIARY PROVIDER #
"^DD",399,399,.22,1,4,0)
^^TRIGGER^399^128
"^DD",399,399,.22,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",1) X ^DD(399,.22,1,4,1.4)
"^DD",399,399,.22,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,.22,1,4,2)
Q
"^DD",399,399,.22,1,4,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",1)
"^DD",399,399,.22,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,4,"DT")
3060219
"^DD",399,399,.22,1,4,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,.22,1,5,0)
^^TRIGGER^399^129
"^DD",399,399,.22,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",2) X ^DD(399,.22,1,5,1.4)
"^DD",399,399,.22,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,.22,1,5,2)
Q
"^DD",399,399,.22,1,5,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",2)
"^DD",399,399,.22,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,5,"DT")
3060219
"^DD",399,399,.22,1,5,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,.22,1,6,0)
^^TRIGGER^399^130
"^DD",399,399,.22,1,6,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,"",3) X ^DD(399,.22,1,6,1.4)
"^DD",399,399,.22,1,6,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,.22,1,6,2)
Q
"^DD",399,399,.22,1,6,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,"",3)
"^DD",399,399,.22,1,6,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,6,"DT")
3060219
"^DD",399,399,.22,1,6,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,.22,1,7,0)
^^TRIGGER^399^235
"^DD",399,399,.22,1,7,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,.22,1,7,1.4)
"^DD",399,399,.22,1,7,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,.22,1,7,2)
Q
"^DD",399,399,.22,1,7,"%D",0)
^^3^3^3060614^
"^DD",399,399,.22,1,7,"%D",1,0)
This trigger will set the LAB CLIA NUMBER field to the default CLIA# for 
"^DD",399,399,.22,1,7,"%D",2,0)
the division when the division field is entered or changed.  The trigger 
"^DD",399,399,.22,1,7,"%D",3,0)
condition ensures that lab services are on the claim.
"^DD",399,399,.22,1,7,"CREATE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,.22,1,7,"CREATE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,.22,1,7,"DELETE VALUE")
NO EFFECT
"^DD",399,399,.22,1,7,"DT")
3060614
"^DD",399,399,.22,1,7,"FIELD")
LAB CLIA NUMBER
"^DD",399,399,.22,3)
Enter the default division that should be used in charge calculations.
"^DD",399,399,.22,21,0)
^^2^2^2960724^
"^DD",399,399,.22,21,1,0)
For rates specific to a division, this division will be used to
"^DD",399,399,.22,21,2,0)
determine the charges for all CPT's that do not have a division specified.
"^DD",399,399,.22,"DT")
3060614
"^DD",399,399,29,0)
BILL CLONED TO^P399'^DGCR(399,^S1;1^Q
"^DD",399,399,29,3)
Select the Bill Number for which the new claim is being created. 
"^DD",399,399,29,21,0)
^.001^1^1^3050712^^
"^DD",399,399,29,21,1,0)
This is the Bill Number for which the new claim is being created.
"^DD",399,399,29,"DT")
3050712
"^DD",399,399,30,0)
BILL CLONED FROM^P399'^DGCR(399,^S1;2^Q
"^DD",399,399,30,3)
Select the Bill Number from which this claim was cloned. 
"^DD",399,399,30,21,0)
^.001^1^1^3050712^^
"^DD",399,399,30,21,1,0)
This is the bill number to which this claim is being cloned. 
"^DD",399,399,30,"DT")
3050711
"^DD",399,399,31,0)
DATE BILL CLONED^D^^S1;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",399,399,31,3)
Enter the date this bill was cloned. 
"^DD",399,399,31,21,0)
^^1^1^3050712^
"^DD",399,399,31,21,1,0)
This is the date this bill was cloned. 
"^DD",399,399,31,"DT")
3050711
"^DD",399,399,32,0)
BILL CLONED BY^P200'^VA(200,^S1;4^Q
"^DD",399,399,32,3)
Enter the name of the person who is cloning the claim. 
"^DD",399,399,32,21,0)
^^1^1^3050712^
"^DD",399,399,32,21,1,0)
This is the user who cloned the claim. 
"^DD",399,399,32,"DT")
3050711
"^DD",399,399,33,0)
REASON CLONED^F^^S1;5^K:$L(X)>30!($L(X)<3) X
"^DD",399,399,33,3)
Answer must be 3-30 characters in length.
"^DD",399,399,33,21,0)
^^1^1^3050712^
"^DD",399,399,33,21,1,0)
This is the reason why the old claim was cloned to a new one. 
"^DD",399,399,33,"DT")
3050711
"^DD",399,399,101,0)
PRIMARY INSURANCE CARRIER^R*P36'X^DIC(36,^M;1^D DD^IBCNS S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))" D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,101,1,0)
^.1
"^DD",399,399,101,1,1,0)
^^TRIGGER^399^122
"^DD",399,399,101,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,1) X ^DD(399,101,1,1,1.4)
"^DD",399,399,101,1,1,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,2)=DIV,DIH=399,DIG=122 D ^DICR
"^DD",399,399,101,1,1,2)
Q
"^DD",399,399,101,1,1,3)
Do Not Delete
"^DD",399,399,101,1,1,"%D",0)
^.101^3^3^3020819^^
"^DD",399,399,101,1,1,"%D",1,0)
This trigger sets the Bill Primary Provider # based on the Form Type,  
"^DD",399,399,101,1,1,"%D",2,0)
using the Primary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,101,1,1,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,101,1,1,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,1)
"^DD",399,399,101,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,1,"DT")
3020819
"^DD",399,399,101,1,1,"FIELD")
PRIMARY PROVIDER #
"^DD",399,399,101,1,2,0)
^^TRIGGER^399^24
"^DD",399,399,101,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,101,1,2,1.1) X ^DD(399,101,1,2,1.4)
"^DD",399,399,101,1,2,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=1 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,101,1,2,2.4)
"^DD",399,399,101,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,101,1,2,3)
DO NOT DELETE
"^DD",399,399,101,1,2,"%D",0)
^^2^2^2990628^
"^DD",399,399,101,1,2,"%D",1,0)
This triggers the CLAIM MRA STATUS to 'MRA NEEDED' (1N) if the primary
"^DD",399,399,101,1,2,"%D",2,0)
insurance is the current insurance and the current insurance = MEDICARE WNR.
"^DD",399,399,101,1,2,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,101,1,2,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=1
"^DD",399,399,101,1,2,"DELETE VALUE")
@
"^DD",399,399,101,1,2,"DT")
2990628
"^DD",399,399,101,1,2,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,101,1,3,0)
^^TRIGGER^399^27
"^DD",399,399,101,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,101,1,3,1.4)
"^DD",399,399,101,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,101,1,3,2)
Q
"^DD",399,399,101,1,3,3)
Do not delete
"^DD",399,399,101,1,3,"%D",0)
^^3^3^3041119^
"^DD",399,399,101,1,3,"%D",1,0)
When the current insurance is the primary insurance and the primary
"^DD",399,399,101,1,3,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,101,1,3,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,101,1,3,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=1,1:0)
"^DD",399,399,101,1,3,"CREATE VALUE")
@
"^DD",399,399,101,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,3,"DT")
3041119
"^DD",399,399,101,1,3,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,101,1,4,0)
^^TRIGGER^399^128
"^DD",399,399,101,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,1) X ^DD(399,101,1,4,1.4)
"^DD",399,399,101,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,101,1,4,2)
Q
"^DD",399,399,101,1,4,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,1)
"^DD",399,399,101,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,101,1,4,"DT")
3060219
"^DD",399,399,101,1,4,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,101,3)
Enter name of insurance carrier to which this bill is to be sent.
"^DD",399,399,101,5,1,0)
399^112^1
"^DD",399,399,101,12)
Only valid insurance companies for this date of care.
"^DD",399,399,101,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,101,21,0)
^^2^2^2990503^^^^
"^DD",399,399,101,21,1,0)
This is the name of the insurance carrier to which this bill is to be sent.
"^DD",399,399,101,21,2,0)
This is from the entries in this patient's file of insurance companies. 
"^DD",399,399,101,23,0)
^^3^3^2990503^^^
"^DD",399,399,101,23,1,0)
Only valid/active insurance companies for this patient can be choosen,
"^DD",399,399,101,23,2,0)
as defined by DD^IBCNS.  Company must not already be defined as a carrier 
"^DD",399,399,101,23,3,0)
(399,102-103) for this bill.
"^DD",399,399,101,"DT")
3060219
"^DD",399,399,102,0)
SECONDARY INSURANCE CARRIER^*P36'X^DIC(36,^M;2^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,102,1,0)
^.1
"^DD",399,399,102,1,1,0)
399^AI2^MUMPS
"^DD",399,399,102,1,1,1)
Q
"^DD",399,399,102,1,1,2)
Q
"^DD",399,399,102,1,1,"DT")
2931220
"^DD",399,399,102,1,2,0)
^^TRIGGER^399^123
"^DD",399,399,102,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,2) X ^DD(399,102,1,2,1.4)
"^DD",399,399,102,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,3)=DIV,DIH=399,DIG=123 D ^DICR
"^DD",399,399,102,1,2,2)
Q
"^DD",399,399,102,1,2,3)
Do Not Delete
"^DD",399,399,102,1,2,"%D",0)
^^3^3^3020819^
"^DD",399,399,102,1,2,"%D",1,0)
This trigger sets the Bill Secondary Provider # based on the Form Type,  
"^DD",399,399,102,1,2,"%D",2,0)
using the Secondary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,102,1,2,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,102,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,2)
"^DD",399,399,102,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,2,"DT")
3020819
"^DD",399,399,102,1,2,"FIELD")
SECONDARY PROVIDER 
"^DD",399,399,102,1,3,0)
^^TRIGGER^399^24
"^DD",399,399,102,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y X ^DD(399,102,1,3,1.1) X ^DD(399,102,1,3,1.4)
"^DD",399,399,102,1,3,1.1)
S X=DIV S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X I $$COBN^IBCEF(DA)=2 I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,5),X=X S DIU=X K Y S X="" X ^DD(399,102,1,3,2.4)
"^DD",399,399,102,1,3,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"TX")):^("TX"),1:""),DIV=X S $P(^("TX"),U,5)=DIV,DIH=399,DIG=24 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,102,1,3,3)
DO NOT DELETE
"^DD",399,399,102,1,3,"%D",0)
^^3^3^2990628^
"^DD",399,399,102,1,3,"%D",1,0)
This trigger forces the CLAIM MRA STATUS field to be set appropriately if
"^DD",399,399,102,1,3,"%D",2,0)
the current insurance is the secondary insurance company and it will require
"^DD",399,399,102,1,3,"%D",3,0)
an MRA request.
"^DD",399,399,102,1,3,"CREATE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"CREATE VALUE")
S X=$S($$REQMRA^IBEFUNC(DA):"1N",1:"")
"^DD",399,399,102,1,3,"DELETE CONDITION")
I $$COBN^IBCEF(DA)=2
"^DD",399,399,102,1,3,"DELETE VALUE")
@
"^DD",399,399,102,1,3,"DT")
2990628
"^DD",399,399,102,1,3,"FIELD")
CLAIM MRA STATUS
"^DD",399,399,102,1,4,0)
^^TRIGGER^399^27
"^DD",399,399,102,1,4,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"TX")):^("TX"),1:"") S X=$P(Y(1),U,8),X=X S DIU=X K Y S X="" X ^DD(399,102,1,4,1.4)
"^DD",399,399,102,1,4,1.4)
S DIH=$G(^DGCR(399,DIV(0),"TX")),DIV=X S $P(^("TX"),U,8)=DIV,DIH=399,DIG=27 D ^DICR
"^DD",399,399,102,1,4,2)
Q
"^DD",399,399,102,1,4,3)
Do not delete
"^DD",399,399,102,1,4,"%D",0)
^^3^3^3041119^
"^DD",399,399,102,1,4,"%D",1,0)
When the current insurance is the secondary insurance and the secondary
"^DD",399,399,102,1,4,"%D",2,0)
insurance is MEDICARE WNR, delete the FORCE CLAIM TO PRINT field as it
"^DD",399,399,102,1,4,"%D",3,0)
is not valid to print an MRA request.
"^DD",399,399,102,1,4,"CREATE CONDITION")
S X=$S($$MCRWNR^IBEFUNC(X):$$COBN^IBCEF(DA)=2,1:0)
"^DD",399,399,102,1,4,"CREATE VALUE")
@
"^DD",399,399,102,1,4,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,4,"DT")
3041119
"^DD",399,399,102,1,4,"FIELD")
FORCE CLAIM TO PRINT
"^DD",399,399,102,1,5,0)
^^TRIGGER^399^129
"^DD",399,399,102,1,5,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,2) X ^DD(399,102,1,5,1.4)
"^DD",399,399,102,1,5,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,102,1,5,2)
Q
"^DD",399,399,102,1,5,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,2)
"^DD",399,399,102,1,5,"DELETE VALUE")
NO EFFECT
"^DD",399,399,102,1,5,"DT")
3060219
"^DD",399,399,102,1,5,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,102,3)
Enter name of secondary insurance carrier from which the provider might expect some payment for this bill.
"^DD",399,399,102,5,1,0)
399^113^1
"^DD",399,399,102,12)
Only valid insurance companies for this date of care.
"^DD",399,399,102,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,102,21,0)
^^2^2^2880831^
"^DD",399,399,102,21,1,0)
This is the name of the secondary insurance carrier from which the provider
"^DD",399,399,102,21,2,0)
might expect some payment for this bill.
"^DD",399,399,102,"DT")
3060219
"^DD",399,399,103,0)
TERTIARY INSURANCE CARRIER^*P36'X^DIC(36,^M;3^D ^DIC K DIC,IBDD S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,103,1,0)
^.1
"^DD",399,399,103,1,1,0)
399^AI3^MUMPS
"^DD",399,399,103,1,1,1)
Q
"^DD",399,399,103,1,1,2)
Q
"^DD",399,399,103,1,1,"DT")
2931220
"^DD",399,399,103,1,2,0)
^^TRIGGER^399^124
"^DD",399,399,103,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4),X=X S DIU=X K Y S X=DIV S X=$$PRVNUM^IBCU(DA,X,3) X ^DD(399,103,1,2,1.4)
"^DD",399,399,103,1,2,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,4)=DIV,DIH=399,DIG=124 D ^DICR
"^DD",399,399,103,1,2,2)
Q
"^DD",399,399,103,1,2,3)
Do Not Delete
"^DD",399,399,103,1,2,"%D",0)
^^3^3^3020819^
"^DD",399,399,103,1,2,"%D",1,0)
This trigger sets the Bill Tertiary Provider # based on the Form Type,  
"^DD",399,399,103,1,2,"%D",2,0)
using the Tertiary Insurance Companies Hospital or Professional Provider 
"^DD",399,399,103,1,2,"%D",3,0)
Number.  Special case for Medicare Part A.
"^DD",399,399,103,1,2,"CREATE VALUE")
S X=$$PRVNUM^IBCU(DA,X,3)
"^DD",399,399,103,1,2,"DELETE VALUE")
NO EFFECT
"^DD",399,399,103,1,2,"DT")
3020819
"^DD",399,399,103,1,2,"FIELD")
TERTIARY PROVIDER
"^DD",399,399,103,1,3,0)
^^TRIGGER^399^130
"^DD",399,399,103,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X=DIV S X=$$PRVQUAL^IBCU(DA,X,3) X ^DD(399,103,1,3,1.4)
"^DD",399,399,103,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,103,1,3,2)
Q
"^DD",399,399,103,1,3,"CREATE VALUE")
S X=$$PRVQUAL^IBCU(DA,X,3)
"^DD",399,399,103,1,3,"DELETE VALUE")
NO EFFECT
"^DD",399,399,103,1,3,"DT")
3060219
"^DD",399,399,103,1,3,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,103,3)
Enter name of tertiary insurance carrier from which the provider might expect some payment for this bill.
"^DD",399,399,103,5,1,0)
399^114^1
"^DD",399,399,103,12)
Only valid insurance companies for this date of care.
"^DD",399,399,103,12.1)
S DIC("S")="I $D(IBDD(+Y)),'$D(^DGCR(399,DA,""AIC"",+Y))"
"^DD",399,399,103,21,0)
^^2^2^2880831^
"^DD",399,399,103,21,1,0)
This is the name of the tertiary insurance carrier from which the provider
"^DD",399,399,103,21,2,0)
might expect some payment for this bill.
"^DD",399,399,103,"DT")
3060219
"^DD",399,399,122,0)
PRIMARY PROVIDER #^F^^M1;2^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,122,1,0)
^.1
"^DD",399,399,122,1,1,0)
^^TRIGGER^399^128
"^DD",399,399,122,1,1,1)
Q
"^DD",399,399,122,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,2)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,10),X=X S DIU=X K Y S X="" X ^DD(399,122,1,1,2.4)
"^DD",399,399,122,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,10)=DIV,DIH=399,DIG=128 D ^DICR
"^DD",399,399,122,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,122,1,1,"%D",1,0)
This trigger will delete the PRIMARY ID QUALIFIER when the PRIMARY 
"^DD",399,399,122,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,122,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,122,1,1,"DELETE CONDITION")
PRIMARY PROVIDER #=""
"^DD",399,399,122,1,1,"DELETE VALUE")
@
"^DD",399,399,122,1,1,"FIELD")
PRIMARY ID QUALIFIER
"^DD",399,399,122,3)
Answer must be 3-13 characters in length.
"^DD",399,399,122,5,1,0)
399^101^1
"^DD",399,399,122,5,2,0)
399^.22^1
"^DD",399,399,122,21,0)
^^2^2^2990210^^^
"^DD",399,399,122,21,1,0)
This is the number assigned to the provider by the primary payer.
"^DD",399,399,122,21,2,0)
Printed in Form Locator 51 for the Primary Insurance Carrier on the UB-92.
"^DD",399,399,122,23,0)
^^2^2^2990210^^^
"^DD",399,399,122,23,1,0)
Loaded with Hospital Provider Number (36,.11) of the Primary Insurance
"^DD",399,399,122,23,2,0)
Carrier, if defined.
"^DD",399,399,122,"DT")
3060410
"^DD",399,399,123,0)
SECONDARY PROVIDER #^F^^M1;3^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,123,1,0)
^.1
"^DD",399,399,123,1,1,0)
^^TRIGGER^399^129
"^DD",399,399,123,1,1,1)
Q
"^DD",399,399,123,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,3)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(399,123,1,1,2.4)
"^DD",399,399,123,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,11)=DIV,DIH=399,DIG=129 D ^DICR
"^DD",399,399,123,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,123,1,1,"%D",1,0)
This trigger will delete the SECONDARY ID QUALIFIER when the SECONDARY
"^DD",399,399,123,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,123,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,123,1,1,"DELETE CONDITION")
SECONDARY PROVIDER #=""
"^DD",399,399,123,1,1,"DELETE VALUE")
@
"^DD",399,399,123,1,1,"FIELD")
SECONDARY ID QUALIFIER
"^DD",399,399,123,3)
Answer must be 3-13 characters in length.
"^DD",399,399,123,5,1,0)
399^102^2
"^DD",399,399,123,5,2,0)
399^.22^2
"^DD",399,399,123,21,0)
^^2^2^2940201^
"^DD",399,399,123,21,1,0)
This is the number assigned to the provider by the secondary payer.
"^DD",399,399,123,21,2,0)
Printed in Form Locator 51 for the Secondary Insurance Carrier on the UB-92.
"^DD",399,399,123,23,0)
^^2^2^2940201^
"^DD",399,399,123,23,1,0)
Loaded with Hospital Provider Number (36,.11) of the Secondary Insurance
"^DD",399,399,123,23,2,0)
Carrier, if defined.
"^DD",399,399,123,"DT")
3060410
"^DD",399,399,124,0)
TERTIARY PROVIDER #^F^^M1;4^K:$L(X)>13!($L(X)<3) X
"^DD",399,399,124,1,0)
^.1
"^DD",399,399,124,1,1,0)
^^TRIGGER^399^130
"^DD",399,399,124,1,1,1)
Q
"^DD",399,399,124,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,4)="" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"M1")):^("M1"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,124,1,1,2.4)
"^DD",399,399,124,1,1,2.4)
S DIH=$G(^DGCR(399,DIV(0),"M1")),DIV=X S $P(^("M1"),U,12)=DIV,DIH=399,DIG=130 D ^DICR
"^DD",399,399,124,1,1,"%D",0)
^^2^2^3060410^
"^DD",399,399,124,1,1,"%D",1,0)
This trigger will delete the TERTIARY ID QUALIFIER when the TERTIARY
"^DD",399,399,124,1,1,"%D",2,0)
PROVIDER # is deleted
"^DD",399,399,124,1,1,"CREATE VALUE")
NO EFFECT
"^DD",399,399,124,1,1,"DELETE CONDITION")
TERTIARY PROVIDER #=""
"^DD",399,399,124,1,1,"DELETE VALUE")
@
"^DD",399,399,124,1,1,"FIELD")
TERTIARY ID QUALIFIER
"^DD",399,399,124,3)
Answer must be 3-13 characters in length.
"^DD",399,399,124,5,1,0)
399^103^2
"^DD",399,399,124,5,2,0)
399^.22^3
"^DD",399,399,124,21,0)
^^2^2^2940201^
"^DD",399,399,124,21,1,0)
This is the number assigned to the provider by the tertiary payer.
"^DD",399,399,124,21,2,0)
Printed in Form Locator 51 for the Tertiary Insurance Carrier on the UB-92.
"^DD",399,399,124,23,0)
^^2^2^2940201^
"^DD",399,399,124,23,1,0)
Loaded with Hospital Provider Number (36,.11) of the Tertiary Insurance
"^DD",399,399,124,23,2,0)
Carrier, if defined.
"^DD",399,399,124,"DT")
3060410
"^DD",399,399,128,0)
PRIMARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;10^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,128,3)
Enter the Qualifier for the Primary Insurance ID #
"^DD",399,399,128,5,1,0)
399^101^4
"^DD",399,399,128,5,2,0)
399^.22^4
"^DD",399,399,128,5,4,0)
399^122^1
"^DD",399,399,128,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,128,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,128,21,0)
^^1^1^3060309^
"^DD",399,399,128,21,1,0)
This is the qualifier for PRIMARY PROVIDER #.
"^DD",399,399,128,"DT")
3060417
"^DD",399,399,129,0)
SECONDARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;11^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,129,3)
Enter the Qualifier for the Secondary Insurance ID #
"^DD",399,399,129,5,1,0)
399^102^5
"^DD",399,399,129,5,2,0)
399^.22^5
"^DD",399,399,129,5,4,0)
399^123^1
"^DD",399,399,129,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,129,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,129,21,0)
^^1^1^3060309^
"^DD",399,399,129,21,1,0)
This is the qualifier for the SECONDARY PROVIDER #.
"^DD",399,399,129,"DT")
3060417
"^DD",399,399,130,0)
TERTIARY ID QUALIFIER^*P355.97'^IBE(355.97,^M1;12^S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,130,3)
Enter the Qualifier for the Tertiary Insurance ID #
"^DD",399,399,130,5,1,0)
399^103^3
"^DD",399,399,130,5,2,0)
399^.22^6
"^DD",399,399,130,5,4,0)
399^124^1
"^DD",399,399,130,12)
Only Billing Provider Secondary IDs allowed
"^DD",399,399,130,12.1)
S DIC("S")="I $$BPS^IBCEPU(Y)!($$EPT^IBCEPU(Y))"
"^DD",399,399,130,21,0)
^.001^1^1^3060309^^
"^DD",399,399,130,21,1,0)
This is the qualifier for the TERTIARY PROVIDER #.
"^DD",399,399,130,"DT")
3060417
"^DD",399,399,232,0)
NON-VA FACILITY^*P355.93X^IBA(355.93,^U2;10^S DIC("S")="I $P(^(0),U,2)=1,$P(^(0),U)'["",""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399,232,1,0)
^.1
"^DD",399,399,232,1,1,0)
^^TRIGGER^399^234
"^DD",399,399,232,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y X ^DD(399,232,1,1,1.1) X ^DD(399,232,1,1,1.4)
"^DD",399,399,232,1,1,1.1)
S X=DIV S I(0,0)=$S($D(D0):D0,1:""),D0=DIV S:'$D(^IBA(355.93,+D0,0)) D0=-1 S Y(101)=$S($D(^IBA(355.93,D0,0)):^(0),1:"") S X=$P(Y(101),U,9) S D0=I(0,0)
"^DD",399,399,232,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,12)=DIV,DIH=399,DIG=234 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,12),X=X S DIU=X K Y S X="" X ^DD(399,232,1,1,2.4)
"^DD",399,399,232,1,1,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,12)=DIV,DIH=399,DIG=234 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,1,"CREATE VALUE")
NON-VA FACILITY:FACILITY DEFAULT ID NUMBER
"^DD",399,399,232,1,1,"DELETE VALUE")
@
"^DD",399,399,232,1,1,"DT")
3010102
"^DD",399,399,232,1,1,"FIELD")
NON-VA CARE ID #
"^DD",399,399,232,1,2,0)
^^TRIGGER^399^233
"^DD",399,399,232,1,2,1)
Q
"^DD",399,399,232,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,11),X=X S DIU=X K Y S X="" X ^DD(399,232,1,2,2.4)
"^DD",399,399,232,1,2,2.4)
S DIH=$S($D(^DGCR(399,DIV(0),"U2")):^("U2"),1:""),DIV=X S $P(^("U2"),U,11)=DIV,DIH=399,DIG=233 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399,232,1,2,3)
Do not delete
"^DD",399,399,232,1,2,"%D",0)
^^2^2^3010110^
"^DD",399,399,232,1,2,"%D",1,0)
This cross reference deletes the NON-VA CARE TYPE field when the NON-VA
"^DD",399,399,232,1,2,"%D",2,0)
Facility value is deleted.
"^DD",399,399,232,1,2,"CREATE VALUE")
NO EFFECT
"^DD",399,399,232,1,2,"DELETE VALUE")
@
"^DD",399,399,232,1,2,"DT")
3010110
"^DD",399,399,232,1,2,"FIELD")
NON-VA CARE TYPE
"^DD",399,399,232,1,3,0)
^^TRIGGER^399^235
"^DD",399,399,232,1,3,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,232,1,3,1.4)
"^DD",399,399,232,1,3,1.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,232,1,3,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(0)=X S X=$$CLIAREQ^IBCEP8A(DA) I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"U2")):^("U2"),1:"") S X=$P(Y(1),U,13),X=X S DIU=X K Y S X=DIV S X=$$CLIA^IBCEP8A(DA) X ^DD(399,232,1,3,2.4)
"^DD",399,399,232,1,3,2.4)
S DIH=$G(^DGCR(399,DIV(0),"U2")),DIV=X S $P(^("U2"),U,13)=DIV,DIH=399,DIG=235 D ^DICR
"^DD",399,399,232,1,3,"%D",0)
^^3^3^3060104^
"^DD",399,399,232,1,3,"%D",1,0)
This trigger will set the LAB CLIA NUMBER field to the default
"^DD",399,399,232,1,3,"%D",2,0)
CLIA# for the facility - either VA facility or non-VA facility.
"^DD",399,399,232,1,3,"%D",3,0)
The trigger condition ensures that lab services are on the claim.
"^DD",399,399,232,1,3,"CREATE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,232,1,3,"CREATE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DELETE CONDITION")
S X=$$CLIAREQ^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DELETE VALUE")
S X=$$CLIA^IBCEP8A(DA)
"^DD",399,399,232,1,3,"DT")
3060104
"^DD",399,399,232,1,3,"FIELD")
LAB CLIA NUMBER
"^DD",399,399,232,3)
Enter the non-VA/other VA facility where care was given.  Facility name cannot contain a comma.
"^DD",399,399,232,12)
Must be a facility provider type entry without a comma in the name
"^DD",399,399,232,12.1)
S DIC("S")="I $P(^(0),U,2)=1,$P(^(0),U)'["","""
"^DD",399,399,232,21,0)
^.001^2^2^3030807^^^^
"^DD",399,399,232,21,1,0)
The is the name of the non-VA or outside VA facility where the services
"^DD",399,399,232,21,2,0)
were rendered.
"^DD",399,399,232,"DT")
3060104
"^DD",399,399,235,0)
LAB CLIA NUMBER^F^^U2;13^K:$L(X)>15!($L(X)<1) X
"^DD",399,399,235,3)
Answer must be 1-15 characters in length.
"^DD",399,399,235,5,1,0)
399^232^3
"^DD",399,399,235,5,2,0)
399^.22^7
"^DD",399,399,235,21,0)
^^9^9^3051228^
"^DD",399,399,235,21,1,0)
Enter the CLIA number for the VA Division if the service was 
"^DD",399,399,235,21,2,0)
performed by the VA.
"^DD",399,399,235,21,3,0)
Enter the CLIA number for the Other Facility if the service was 
"^DD",399,399,235,21,4,0)
performed by a non-VA facility.
"^DD",399,399,235,21,5,0)
 
"^DD",399,399,235,21,6,0)
You can define a CLIA number as a secondary ID for a non-VA
"^DD",399,399,235,21,7,0)
Facility through Provider ID Maint.  If you enter a CLIA number
"^DD",399,399,235,21,8,0)
here that is not defined in Provider ID Maint (non-VA) or the
"^DD",399,399,235,21,9,0)
Institution file (VA), it will be sent with this claim only.
"^DD",399,399,235,"DT")
3051228
"^DD",399,399,242,0)
MAMMOGRAPHY CERT NUMBER^F^^U3;1^K:$L(X)>15!($L(X)<1) X
"^DD",399,399,242,3)
Answer must be 1-15 characters in length
"^DD",399,399,242,21,0)
^^10^10^3051228^
"^DD",399,399,242,21,1,0)
Enter the Mammography Certification number for the VAMC if the 
"^DD",399,399,242,21,2,0)
service was performed by the VA.
"^DD",399,399,242,21,3,0)
Enter the Mammography Certification number for the Other Facility 
"^DD",399,399,242,21,4,0)
if the service was performed by a non-VA facility.
"^DD",399,399,242,21,5,0)
 
"^DD",399,399,242,21,6,0)
You can define a Mammography Certification number for a non-VA 
"^DD",399,399,242,21,7,0)
Facility through Provider ID Maint.  If you enter a Mammography
"^DD",399,399,242,21,8,0)
Certification number here that is not defined in Provider ID
"^DD",399,399,242,21,9,0)
Maint (non-VA) or the Institution file (VA), it will be sent
"^DD",399,399,242,21,10,0)
with this claim only.
"^DD",399,399,242,"DT")
3051228
"^DD",399,399.0222,.05,0)
PRIMARY INS CO ID NUMBER^FX^^0;5^I $D(DA) N Z S Z=$G(^DGCR(399,DA(1),"PRV",DA,0)) S:X="/ID" X=$$RECALC^IBCEP2A(.DA,1,$P(Z,U,5)) K:$L(X)>15!'$L(X) X I $D(X),$P(Z,U,2)="",$S($$INPAT^IBCEF(DA(1),1):1,1:X'="SLF000") K X
"^DD",399,399.0222,.05,.1)
PRIM INS PERF PROV SECONDARY ID
"^DD",399,399.0222,.05,1,0)
^.1
"^DD",399,399.0222,.05,1,1,0)
^^TRIGGER^399.0222^.02
"^DD",399,399.0222,.05,1,1,1)
K DIV S DIV=X,D0=DA(1),DIV(0)=D0,D1=DA,DIV(1)=D1 S Y(0)=X S X=Y(0)="SLF000" I X S X=DIV S Y(1)=$S($D(^DGCR(399,D0,"PRV",D1,0)):^(0),1:"") S X=$P(Y(1),U,2),X=X S DIU=X K Y S X="" X ^DD(399.0222,.05,1,1,1.4)
"^DD",399,399.0222,.05,1,1,1.4)
S DIH=$S($D(^DGCR(399,DIV(0),"PRV",DIV(1),0)):^(0),1:""),DIV=X S $P(^(0),U,2)=DIV,DIH=399.0222,DIG=.02 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",399,399.0222,.05,1,1,2)
Q
"^DD",399,399.0222,.05,1,1,3)
Do not delete
"^DD",399,399.0222,.05,1,1,"%D",0)
^.101^1^1^3000330^^
"^DD",399,399.0222,.05,1,1,"%D",1,0)
This erases the provider name if the id is SLF000.
"^DD",399,399.0222,.05,1,1,"CREATE CONDITION")
PRIMARY INS CO ID NUMBER="SLF000"
"^DD",399,399.0222,.05,1,1,"CREATE VALUE")
@
"^DD",399,399.0222,.05,1,1,"DELETE VALUE")
NO EFFECT
"^DD",399,399.0222,.05,1,1,"FIELD")
PERFORMED BY
"^DD",399,399.0222,.05,1,2,0)
399.0222^AC^MUMPS
"^DD",399,399.0222,.05,1,2,1)
D ATTREND^IBCU1(DA(1),DA,.05)
"^DD",399,399.0222,.05,1,2,2)
D ATTREND^IBCU1(DA(1),DA,.05)
"^DD",399,399.0222,.05,1,2,3)
Do Not Delete
"^DD",399,399.0222,.05,1,2,"%D",0)
^.101^6^6^3060509^^
"^DD",399,399.0222,.05,1,2,"%D",1,0)
This Mumps cross reference is used to trigger #122 PRIMARY PROVIDER #.
"^DD",399,399.0222,.05,1,2,"%D",2,0)
The field is triggered when the primary insurance company in the
"^DD",399,399.0222,.05,1,2,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.05,1,2,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.05,1,2,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.05,1,2,"%D",6,0)
INST).
"^DD",399,399.0222,.05,1,2,"DT")
3060508
"^DD",399,399.0222,.05,3)
Enter the # the primary ins co uses for the provider.  If outpatient and self-referred, use SLF000.
"^DD",399,399.0222,.05,4)
D INSPAR^IBCEP2A(DA(1),1)
"^DD",399,399.0222,.05,5,1,0)
399.0222^.02^1
"^DD",399,399.0222,.05,5,2,0)
399.0222^.02^4
"^DD",399,399.0222,.05,21,0)
^.001^1^1^3040521^^^^
"^DD",399,399.0222,.05,21,1,0)
This is the primary insurance co specific provider's secondary id number.
"^DD",399,399.0222,.05,"DT")
3060508
"^DD",399,399.0222,.06,0)
SECONDARY INS CO ID NUMBER^FX^^0;6^I $D(DA) N Z S Z=$G(^DGCR(399,DA(1),"PRV",DA,0)) S:X="/ID" X=$$RECALC^IBCEP2A(.DA,2,$P(Z,U,6)) K:$L(X)>15!'$L(X) X I $D(X),$P(Z,U,2)="",$S($$INPAT^IBCEF(DA(1),1):1,1:X'="SLF000") K X
"^DD",399,399.0222,.06,.1)
SECOND INS PERF PROV SECONDARY ID
"^DD",399,399.0222,.06,1,0)
^.1
"^DD",399,399.0222,.06,1,1,0)
399.0222^AD^MUMPS
"^DD",399,399.0222,.06,1,1,1)
D ATTREND^IBCU1(DA(1),DA,.06)
"^DD",399,399.0222,.06,1,1,2)
D ATTREND^IBCU1(DA(1),DA,.06)
"^DD",399,399.0222,.06,1,1,3)
Do Not Delete
"^DD",399,399.0222,.06,1,1,"%D",0)
^.101^6^6^3060509^^
"^DD",399,399.0222,.06,1,1,"%D",1,0)
This Mumps cross reference is used to trigger #123 SECONDARY PROVIDER #.
"^DD",399,399.0222,.06,1,1,"%D",2,0)
The field is triggered when the secondary insurance company in the
"^DD",399,399.0222,.06,1,1,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.06,1,1,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.06,1,1,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.06,1,1,"%D",6,0)
INST).
"^DD",399,399.0222,.06,1,1,"DT")
3060508
"^DD",399,399.0222,.06,3)
Enter the # the secondary ins co uses for the provider.  If outpatient and self-referred, use SLF000.
"^DD",399,399.0222,.06,4)
D INSPAR^IBCEP2A(DA(1),2)
"^DD",399,399.0222,.06,5,1,0)
399.0222^.02^5
"^DD",399,399.0222,.06,21,0)
^.001^1^1^3040521^^^^
"^DD",399,399.0222,.06,21,1,0)
This is the secondary ins company's specific secondary provider id number.
"^DD",399,399.0222,.06,"DT")
3060508
"^DD",399,399.0222,.07,0)
TERTIARY INS CO ID NUMBER^FX^^0;7^I $D(DA) N Z S Z=$G(^DGCR(399,DA(1),"PRV",DA,0)) S:X="/ID" X=$$RECALC^IBCEP2A(.DA,3,$P(Z,U,7)) K:$L(X)>15!'$L(X) X I $D(X),$P(Z,U,2)="",$S($$INPAT^IBCEF(DA(1),1):1,1:X'="SLF000") K X
"^DD",399,399.0222,.07,.1)
TERTIARY INS PERF PROV SECONDARY ID
"^DD",399,399.0222,.07,1,0)
^.1
"^DD",399,399.0222,.07,1,1,0)
399.0222^AE^MUMPS
"^DD",399,399.0222,.07,1,1,1)
D ATTREND^IBCU1(DA(1),DA,.07)
"^DD",399,399.0222,.07,1,1,2)
D ATTREND^IBCU1(DA(1),DA,.07)
"^DD",399,399.0222,.07,1,1,3)
Do Not Delete
"^DD",399,399.0222,.07,1,1,"%D",0)
^^6^6^3060509^
"^DD",399,399.0222,.07,1,1,"%D",1,0)
This Mumps cross reference is used to trigger #124 TERTIARY PROVIDER #.
"^DD",399,399.0222,.07,1,1,"%D",2,0)
The field is triggered when the tertiary insurance company in the
"^DD",399,399.0222,.07,1,1,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.07,1,1,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.07,1,1,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.07,1,1,"%D",6,0)
INST).
"^DD",399,399.0222,.07,1,1,"DT")
3060508
"^DD",399,399.0222,.07,3)
Enter the # the tertiary ins co uses for the provider.  If outpatient and self-referred, use SLF000.
"^DD",399,399.0222,.07,4)
D INSPAR^IBCEP2A(DA(1),3)
"^DD",399,399.0222,.07,5,1,0)
399.0222^.02^6
"^DD",399,399.0222,.07,21,0)
^.001^1^1^3040521^^^^
"^DD",399,399.0222,.07,21,1,0)
This is the tertiary ins company's specific secondary provider id number.
"^DD",399,399.0222,.07,"DT")
3060508
"^DD",399,399.0222,.12,0)
PRIM INS PROVIDER ID TYPE^*P355.97'^IBE(355.97,^0;12^S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0222,.12,.1)
PRIM INS PERF PROV SECONDARY ID TYPE
"^DD",399,399.0222,.12,1,0)
^.1
"^DD",399,399.0222,.12,1,1,0)
399.0222^AF^MUMPS
"^DD",399,399.0222,.12,1,1,1)
D ATTREND^IBCU1(DA(1),DA,.12)
"^DD",399,399.0222,.12,1,1,2)
D ATTREND^IBCU1(DA(1),DA,.12)
"^DD",399,399.0222,.12,1,1,3)
Do Not Delete
"^DD",399,399.0222,.12,1,1,"%D",0)
^^6^6^3060509^
"^DD",399,399.0222,.12,1,1,"%D",1,0)
This Mumps cross reference is used to trigger #128 PRIMARY ID QUALIFIER.
"^DD",399,399.0222,.12,1,1,"%D",2,0)
The field is triggered when the primary insurance company in the
"^DD",399,399.0222,.12,1,1,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.12,1,1,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.12,1,1,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.12,1,1,"%D",6,0)
INST).
"^DD",399,399.0222,.12,1,1,"DT")
3060508
"^DD",399,399.0222,.12,3)
Enter the type of id the primary payer requires as a secondary id.
"^DD",399,399.0222,.12,12)
Must be valid for transmission.
"^DD",399,399.0222,.12,12.1)
S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",399,399.0222,.12,21,0)
^.001^1^1^3040517^^
"^DD",399,399.0222,.12,21,1,0)
This is the type of id the primary payer uses as a secondary id.
"^DD",399,399.0222,.12,"DT")
3060508
"^DD",399,399.0222,.13,0)
SEC INS PROVIDER ID TYPE^*P355.97'^IBE(355.97,^0;13^S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0222,.13,.1)
SECOND INS PERF PROV SECONDARY ID TYPE
"^DD",399,399.0222,.13,1,0)
^.1
"^DD",399,399.0222,.13,1,1,0)
399.0222^AG^MUMPS
"^DD",399,399.0222,.13,1,1,1)
D ATTREND^IBCU1(DA(1),DA,.13)
"^DD",399,399.0222,.13,1,1,2)
D ATTREND^IBCU1(DA(1),DA,.13)
"^DD",399,399.0222,.13,1,1,3)
Do Not Delete
"^DD",399,399.0222,.13,1,1,"%D",0)
^^6^6^3060509^
"^DD",399,399.0222,.13,1,1,"%D",1,0)
This Mumps cross reference is used to trigger #129 SECONDARY ID QUALIFIER.
"^DD",399,399.0222,.13,1,1,"%D",2,0)
The field is triggered when the secondary insurance company in the
"^DD",399,399.0222,.13,1,1,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.13,1,1,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.13,1,1,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.13,1,1,"%D",6,0)
INST).
"^DD",399,399.0222,.13,1,1,"DT")
3060508
"^DD",399,399.0222,.13,3)
Enter the type of id the secondary payer requires as a secondary id.
"^DD",399,399.0222,.13,12)
Must be valid for transmission.
"^DD",399,399.0222,.13,12.1)
S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",399,399.0222,.13,"DT")
3060508
"^DD",399,399.0222,.14,0)
TERT INS PROVIDER ID TYPE^*P355.97'^IBE(355.97,^0;14^S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0222,.14,.1)
TERTIARY INS PERF PROV SECONDARY ID TYPE
"^DD",399,399.0222,.14,1,0)
^.1
"^DD",399,399.0222,.14,1,1,0)
399.0222^AH^MUMPS
"^DD",399,399.0222,.14,1,1,1)
D ATTREND^IBCU1(DA(1),DA,.14)
"^DD",399,399.0222,.14,1,1,2)
D ATTREND^IBCU1(DA(1),DA,.14)
"^DD",399,399.0222,.14,1,1,3)
Do Not Delete
"^DD",399,399.0222,.14,1,1,"%D",0)
^^6^6^3060509^
"^DD",399,399.0222,.14,1,1,"%D",1,0)
This Mumps cross reference is used to trigger #130 TERTIARY ID QUALIFIER.
"^DD",399,399.0222,.14,1,1,"%D",2,0)
The field is triggered when the tertiary insurance company in the
"^DD",399,399.0222,.14,1,1,"%D",3,0)
claim has flags set to use the attending or rendering physicians as the
"^DD",399,399.0222,.14,1,1,"%D",4,0)
billing provider secondary IDs.  The flags in file 36 are field #4.06
"^DD",399,399.0222,.14,1,1,"%D",5,0)
(ATT/REND ID BILL SEC ID PROF) and field 4.08 (ATT/REND ID BILL SEC ID
"^DD",399,399.0222,.14,1,1,"%D",6,0)
INST).
"^DD",399,399.0222,.14,1,1,"DT")
3060508
"^DD",399,399.0222,.14,3)
Enter the type of id the tertiary payer requires as a secondary id.
"^DD",399,399.0222,.14,12)
Must be valid for transmission.
"^DD",399,399.0222,.14,12.1)
S DIC("S")="I $$RAINS^IBCEPU(Y)!($$RAOWN^IBCEPU(Y))"
"^DD",399,399.0222,.14,21,0)
^.001^1^1^3040517^^
"^DD",399,399.0222,.14,21,1,0)
This is the type of id the tertiary payer uses as a secondary id.
"^DD",399,399.0222,.14,"DT")
3060508
"^DIC",350.8,350.8,0)
IB ERROR
"^DIC",350.8,350.8,0,"GL")
^IBE(350.8,
"^DIC",350.8,350.8,"%D",0)
^^11^11^2940214^^^^
"^DIC",350.8,350.8,"%D",1,0)
This file contains errors for billing functions.  It may be used by
"^DIC",350.8,350.8,"%D",2,0)
applications, IB or AR.  The normal format for a routine to return
"^DIC",350.8,350.8,"%D",3,0)
an error is to return the variable:
"^DIC",350.8,350.8,"%D",4,0)
  Y=1^... a successful event occured
"^DIC",350.8,350.8,"%D",5,0)
  Y=-1^error code[;error code;error code...]^additional text
"^DIC",350.8,350.8,"%D",6,0)
The error messages can be displayed by calling routine ^IBAERR.  If
"^DIC",350.8,350.8,"%D",7,0)
the error occurs in a tasked job ($D(ZTQUEUED)'=0) the routine will
"^DIC",350.8,350.8,"%D",8,0)
put the error message in a bulletin and post it to the group defined
"^DIC",350.8,350.8,"%D",9,0)
in the IB SITE PARAMETER FILE.
"^DIC",350.8,350.8,"%D",10,0)
 
"^DIC",350.8,350.8,"%D",11,0)
Per VHA Directive 10-93-142, this file definition should not be modified.
"^DIC",350.8,"B","IB ERROR",350.8)

"^DIC",361.2,361.2,0)
IB ELECTRONIC REPORT DISPOSITION^361.2
"^DIC",361.2,361.2,0,"GL")
^IBE(361.2,
"^DIC",361.2,361.2,"%",0)
^1.005^^0
"^DIC",361.2,361.2,"%D",0)
^^4^4^3010502^
"^DIC",361.2,361.2,"%D",1,0)
This file contains a record for each electronic report that can be
"^DIC",361.2,361.2,"%D",2,0)
returned to the site by the V.A's clearinghouse.  The puropse of the file
"^DIC",361.2,361.2,"%D",3,0)
is to allow the sites to determine which of these reports should be
"^DIC",361.2,361.2,"%D",4,0)
forwarded to the appropriate mail group and which ones should be ignored.
"^DIC",361.2,"B","IB ELECTRONIC REPORT DISPOSITION",361.2)

"^DIC",364.5,364.5,0)
IB DATA ELEMENT DEFINITION^364.5
"^DIC",364.5,364.5,0,"GL")
^IBA(364.5,
"^DIC",364.5,364.5,"%D",0)
^^8^8^2970606^^^^
"^DIC",364.5,364.5,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.5,364.5,"%D",2,0)
 
"^DIC",364.5,364.5,"%D",3,0)
This file contains the definition of all data elements that are needed for
"^DIC",364.5,364.5,"%D",4,0)
various forms throughout the MCCR DHCP system.  It contains the 'blueprint'
"^DIC",364.5,364.5,"%D",5,0)
for how to extract the data for each data element entry.
"^DIC",364.5,364.5,"%D",6,0)
 
"^DIC",364.5,364.5,"%D",7,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.5,364.5,"%D",8,0)
NATIONAL should not be deleted or edited.
"^DIC",364.5,"B","IB DATA ELEMENT DEFINITION",364.5)

"^DIC",364.6,364.6,0)
IB FORM SKELETON DEFINITION^364.6P
"^DIC",364.6,364.6,0,"GL")
^IBA(364.6,
"^DIC",364.6,364.6,"%D",0)
^^10^10^2970606^^^^
"^DIC",364.6,364.6,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.6,364.6,"%D",2,0)
 
"^DIC",364.6,364.6,"%D",3,0)
This file contains records that define the skeleton makeup of forms for
"^DIC",364.6,364.6,"%D",4,0)
the IB system.  This definition includes the absolute position of every
"^DIC",364.6,364.6,"%D",5,0)
field that can be output on the form, the length each field must be limited
"^DIC",364.6,364.6,"%D",6,0)
to, and some descriptive information.   This includes printed forms,
"^DIC",364.6,364.6,"%D",7,0)
transmittable output files, and special local billing screens.
"^DIC",364.6,364.6,"%D",8,0)
 
"^DIC",364.6,364.6,"%D",9,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.6,364.6,"%D",10,0)
NATIONAL should not be deleted or edited.
"^DIC",364.6,"B","IB FORM SKELETON DEFINITION",364.6)

"^DIC",364.7,364.7,0)
IB FORM FIELD CONTENT^364.7P
"^DIC",364.7,364.7,0,"GL")
^IBA(364.7,
"^DIC",364.7,364.7,"%D",0)
^1.001^9^9^3030331^^^^
"^DIC",364.7,364.7,"%D",1,0)
DO NOT delete entries or edit data in this file with VA File Manager.
"^DIC",364.7,364.7,"%D",2,0)
 
"^DIC",364.7,364.7,"%D",3,0)
This is the file that contains the specific fields to be used to produce
"^DIC",364.7,364.7,"%D",4,0)
the associated form or screen.  If there is no insurance company or bill
"^DIC",364.7,364.7,"%D",5,0)
type specified for an entry, this is assumed to be the default definition
"^DIC",364.7,364.7,"%D",6,0)
of the field.
"^DIC",364.7,364.7,"%D",7,0)
 
"^DIC",364.7,364.7,"%D",8,0)
Entries in this file that are designated as having a SECURITY LEVEL of
"^DIC",364.7,364.7,"%D",9,0)
NATIONAL should not be deleted or edited.
"^DIC",364.7,"B","IB FORM FIELD CONTENT",364.7)

"BLD",5605,6)
^315
**END**
**END**
