Released IB*2*374 SEQ #343
Extracted from mail message
**KIDS**:IB*2.0*374^

**INSTALL NAME**
IB*2.0*374
"BLD",6857,0)
IB*2.0*374^INTEGRATED BILLING^0^3070928^y
"BLD",6857,1,0)
^^1^1^3070613^^
"BLD",6857,1,1,0)
IB ENHANCEMENTS
"BLD",6857,4,0)
^9.64PA^355.93^1
"BLD",6857,4,355.93,0)
355.93
"BLD",6857,4,355.93,2,0)
^9.641^355.9301^1
"BLD",6857,4,355.93,2,355.9301,0)
DATE/TIME OF LAST NPI CHANGE  (sub-file)
"BLD",6857,4,355.93,2,355.9301,1,0)
^9.6411^.02^1
"BLD",6857,4,355.93,2,355.9301,1,.02,0)
STATUS
"BLD",6857,4,355.93,222)
y^y^p^^^^n^^n
"BLD",6857,4,355.93,224)

"BLD",6857,4,"APDD",355.93,355.9301)

"BLD",6857,4,"APDD",355.93,355.9301,.02)

"BLD",6857,4,"B",355.93,355.93)

"BLD",6857,6.3)
16
"BLD",6857,"ABPKG")
n
"BLD",6857,"INI")
EN^IBY374PR
"BLD",6857,"INID")
^n^n
"BLD",6857,"INIT")
EN^IBY374PO
"BLD",6857,"KRN",0)
^9.67PA^8989.52^19
"BLD",6857,"KRN",.4,0)
.4
"BLD",6857,"KRN",.401,0)
.401
"BLD",6857,"KRN",.402,0)
.402
"BLD",6857,"KRN",.403,0)
.403
"BLD",6857,"KRN",.5,0)
.5
"BLD",6857,"KRN",.84,0)
.84
"BLD",6857,"KRN",3.6,0)
3.6
"BLD",6857,"KRN",3.8,0)
3.8
"BLD",6857,"KRN",9.2,0)
9.2
"BLD",6857,"KRN",9.8,0)
9.8
"BLD",6857,"KRN",9.8,"NM",0)
^9.68A^16^8
"BLD",6857,"KRN",9.8,"NM",9,0)
IBCSCH^^0^B61198859
"BLD",6857,"KRN",9.8,"NM",10,0)
IBCSCH2^^0^B35721054
"BLD",6857,"KRN",9.8,"NM",11,0)
IBY374PR^^0^B111237
"BLD",6857,"KRN",9.8,"NM",12,0)
IBY374PO^^0^B2927425
"BLD",6857,"KRN",9.8,"NM",13,0)
IBCEP8^^0^B72198572
"BLD",6857,"KRN",9.8,"NM",14,0)
IBCEP82^^0^B24437621
"BLD",6857,"KRN",9.8,"NM",15,0)
IBCEF74^^0^B57770095
"BLD",6857,"KRN",9.8,"NM",16,0)
IBCEF73A^^0^B18483698
"BLD",6857,"KRN",9.8,"NM","B","IBCEF73A",16)

"BLD",6857,"KRN",9.8,"NM","B","IBCEF74",15)

"BLD",6857,"KRN",9.8,"NM","B","IBCEP8",13)

"BLD",6857,"KRN",9.8,"NM","B","IBCEP82",14)

"BLD",6857,"KRN",9.8,"NM","B","IBCSCH",9)

"BLD",6857,"KRN",9.8,"NM","B","IBCSCH2",10)

"BLD",6857,"KRN",9.8,"NM","B","IBY374PO",12)

"BLD",6857,"KRN",9.8,"NM","B","IBY374PR",11)

"BLD",6857,"KRN",19,0)
19
"BLD",6857,"KRN",19,"NM",0)
^9.68A^^
"BLD",6857,"KRN",19.1,0)
19.1
"BLD",6857,"KRN",101,0)
101
"BLD",6857,"KRN",409.61,0)
409.61
"BLD",6857,"KRN",771,0)
771
"BLD",6857,"KRN",870,0)
870
"BLD",6857,"KRN",8989.51,0)
8989.51
"BLD",6857,"KRN",8989.52,0)
8989.52
"BLD",6857,"KRN",8994,0)
8994
"BLD",6857,"KRN","B",.4,.4)

"BLD",6857,"KRN","B",.401,.401)

"BLD",6857,"KRN","B",.402,.402)

"BLD",6857,"KRN","B",.403,.403)

"BLD",6857,"KRN","B",.5,.5)

"BLD",6857,"KRN","B",.84,.84)

"BLD",6857,"KRN","B",3.6,3.6)

"BLD",6857,"KRN","B",3.8,3.8)

"BLD",6857,"KRN","B",9.2,9.2)

"BLD",6857,"KRN","B",9.8,9.8)

"BLD",6857,"KRN","B",19,19)

"BLD",6857,"KRN","B",19.1,19.1)

"BLD",6857,"KRN","B",101,101)

"BLD",6857,"KRN","B",409.61,409.61)

"BLD",6857,"KRN","B",771,771)

"BLD",6857,"KRN","B",870,870)

"BLD",6857,"KRN","B",8989.51,8989.51)

"BLD",6857,"KRN","B",8989.52,8989.52)

"BLD",6857,"KRN","B",8994,8994)

"BLD",6857,"QUES",0)
^9.62^^
"BLD",6857,"REQB",0)
^9.611^1^1
"BLD",6857,"REQB",1,0)
IB*2.0*349^2
"BLD",6857,"REQB","B","IB*2.0*349",1)

"FIA",355.93)
IB NON/OTHER VA BILLING PROVIDER
"FIA",355.93,0)
^IBA(355.93,
"FIA",355.93,0,0)
355.93I
"FIA",355.93,0,1)
y^y^p^^^^n^^n
"FIA",355.93,0,10)

"FIA",355.93,0,11)

"FIA",355.93,0,"RLRO")

"FIA",355.93,0,"VR")
2.0^IB
"FIA",355.93,355.93)
1
"FIA",355.93,355.9301)
1
"FIA",355.93,355.9301,.02)

"INI")
EN^IBY374PR
"INIT")
EN^IBY374PO
"MBREQ")
0
"PKG",179,-1)
1^1
"PKG",179,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",179,20,0)
^9.402P^1^1
"PKG",179,20,1,0)
2^^IBAXDR
"PKG",179,20,1,1)

"PKG",179,20,"B",2,1)

"PKG",179,22,0)
^9.49I^1^1
"PKG",179,22,1,0)
2.0^2940321^2940528
"PKG",179,22,1,"PAH",1,0)
374^3070928
"PKG",179,22,1,"PAH",1,1,0)
^^1^1^3070928
"PKG",179,22,1,"PAH",1,1,1,0)
IB ENHANCEMENTS
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","IBCEF73A")
0^16^B18483698^B18056830
"RTN","IBCEF73A",1,0)
IBCEF73A ;ALB/KJH - FORMATTER AND EXTRACTOR SPECIFIC (NPI) BILL FUNCTIONS ; 30 Aug 2006  10:38 AM
"RTN","IBCEF73A",2,0)
 ;;2.0;INTEGRATED BILLING;**343,374**;21-MAR-94;Build 16
"RTN","IBCEF73A",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF73A",4,0)
 ;
"RTN","IBCEF73A",5,0)
PROVNPI(IBIEN399,IBNONPI) ;
"RTN","IBCEF73A",6,0)
 ;Retrieves NPIs from #200 or 355.93
"RTN","IBCEF73A",7,0)
 ; Input:
"RTN","IBCEF73A",8,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",9,0)
 ;       IBNONPI - variable to pass info on missing NPI to calling routine.  Pass by reference
"RTN","IBCEF73A",10,0)
 ; Output:
"RTN","IBCEF73A",11,0)
 ;       NPI codes for all providers
"RTN","IBCEF73A",12,0)
 ;       IBNONPI - U-delimited list of provider types with missing NPIs
"RTN","IBCEF73A",13,0)
 N IBRETVAL,IBPTR,IBFT
"RTN","IBCEF73A",14,0)
 S IBRETVAL="",IBNONPI=""
"RTN","IBCEF73A",15,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",16,0)
 . S IBPTR=$$PROVPTR^IBCEF7(IBIEN399,IBFT)
"RTN","IBCEF73A",17,0)
 . I IBPTR S $P(IBRETVAL,"^",IBFT)=$$GETNPI(IBPTR)
"RTN","IBCEF73A",18,0)
 Q IBRETVAL
"RTN","IBCEF73A",19,0)
GETNPI(IBPTR) ;look for NPI in #200 or #355.93
"RTN","IBCEF73A",20,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",21,0)
 ;Output: NPI
"RTN","IBCEF73A",22,0)
 ;if in file #200
"RTN","IBCEF73A",23,0)
 N NPI
"RTN","IBCEF73A",24,0)
 S NPI=""
"RTN","IBCEF73A",25,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",26,0)
 I $P(IBPTR,";",2)="VA(200," S NPI=$P($$NPI^XUSNPI("Individual_ID",$P(IBPTR,";")),U) S:NPI=-1 NPI=""
"RTN","IBCEF73A",27,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",28,0)
 I $P(IBPTR,";",2)="IBA(355.93," S NPI=$$NPIGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",29,0)
 I NPI="",$D(IBNONPI) S IBNONPI=$S(IBNONPI="":IBFT,1:IBNONPI_U_IBFT)
"RTN","IBCEF73A",30,0)
 Q NPI
"RTN","IBCEF73A",31,0)
 ;
"RTN","IBCEF73A",32,0)
SPECTAX(IBIEN399,IBNOSPEC) ;
"RTN","IBCEF73A",33,0)
 ;Retrieves Specialty Codes from Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",34,0)
 ; Input:
"RTN","IBCEF73A",35,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",36,0)
 ;       IBNOSPEC - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",37,0)
 ; Output:
"RTN","IBCEF73A",38,0)
 ;       Taxonomy Specialty Codes for all providers
"RTN","IBCEF73A",39,0)
 ;       IBNOSPEC - U-delimited list of provider types with missing Taxonomy Specialty codes
"RTN","IBCEF73A",40,0)
 N IBRETVAL,IBN,IBFT,IBSPEC,SPEC
"RTN","IBCEF73A",41,0)
 S IBRETVAL="",IBNOSPEC=""
"RTN","IBCEF73A",42,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",43,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",44,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",45,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",46,0)
 . S IBSPEC=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",47,0)
 . S SPEC=$$GET1^DIQ(8932.1,IBSPEC,"SPECIALTY CODE")
"RTN","IBCEF73A",48,0)
 . S $P(IBRETVAL,"^",IBFT)=SPEC
"RTN","IBCEF73A",49,0)
 . I SPEC="",$D(IBNOSPEC) S IBNOSPEC=$S(IBNOSPEC="":IBFT,1:IBNOSPEC_U_IBFT)
"RTN","IBCEF73A",50,0)
 Q IBRETVAL
"RTN","IBCEF73A",51,0)
 ;
"RTN","IBCEF73A",52,0)
PROVTAX(IBIEN399,IBNOTAX) ;
"RTN","IBCEF73A",53,0)
 ;Retrieves Current Taxonomy entries for a claim from #399
"RTN","IBCEF73A",54,0)
 ; Input:
"RTN","IBCEF73A",55,0)
 ;       IBIEN399 - IEN of record in BILL/CLAIMS file 399
"RTN","IBCEF73A",56,0)
 ;       IBNOTAX - variable to pass info on missing taxonomies to calling routine.  Pass by reference
"RTN","IBCEF73A",57,0)
 ; Output:
"RTN","IBCEF73A",58,0)
 ;       Taxonomy X12 codes for all providers
"RTN","IBCEF73A",59,0)
 ;       IBNOTAX - U-delimited list of provider types with missing Taxonomy X12 codes
"RTN","IBCEF73A",60,0)
 N IBRETVAL,IBN,IBFT,IBTAX,TAX
"RTN","IBCEF73A",61,0)
 S IBRETVAL="",IBNOTAX=""
"RTN","IBCEF73A",62,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",63,0)
 F IBFT=1:1:9 D
"RTN","IBCEF73A",64,0)
 . S IBN=$O(^DGCR(399,IBIEN399,"PRV","B",IBFT,0))
"RTN","IBCEF73A",65,0)
 . I +IBN=0 Q
"RTN","IBCEF73A",66,0)
 . S IBTAX=$P($G(^DGCR(399,IBIEN399,"PRV",+IBN,0)),"^",15)
"RTN","IBCEF73A",67,0)
 . S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",68,0)
 . S $P(IBRETVAL,"^",IBFT)=TAX
"RTN","IBCEF73A",69,0)
 . I TAX="",$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":IBFT,1:IBNOTAX_U_IBFT)
"RTN","IBCEF73A",70,0)
 Q IBRETVAL
"RTN","IBCEF73A",71,0)
GETTAX(IBPTR) ;look for Taxonomy in #200 or #355.93
"RTN","IBCEF73A",72,0)
 ;Input: IBPTR from 399.0222, field .02
"RTN","IBCEF73A",73,0)
 ;Output: Taxonomy X12 code_"^"_IEN
"RTN","IBCEF73A",74,0)
 N TAX
"RTN","IBCEF73A",75,0)
 S TAX="^"
"RTN","IBCEF73A",76,0)
 ;if in 200 then get it from 200
"RTN","IBCEF73A",77,0)
 I $P(IBPTR,";",2)="VA(200," S TAX=$$TAXIND^XUSTAX($P(IBPTR,";"))
"RTN","IBCEF73A",78,0)
 ;if in 355.93 then use 355.93
"RTN","IBCEF73A",79,0)
 I $P(IBPTR,";",2)="IBA(355.93," S TAX=$$TAXGET^IBCEP81($P(IBPTR,";"))
"RTN","IBCEF73A",80,0)
 Q TAX
"RTN","IBCEF73A",81,0)
 ;
"RTN","IBCEF73A",82,0)
ORGNPI(IBIEN399,IBNONPI) ; Extract NPIs for organizations on this claim
"RTN","IBCEF73A",83,0)
 ; Input
"RTN","IBCEF73A",84,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",85,0)
 ;       IBNONPI - Variable to pass info on missing NPI back to calling routine.  Pass by reference.
"RTN","IBCEF73A",86,0)
 ; Output - NPI codes for facilities
"RTN","IBCEF73A",87,0)
 ;        Piece 1) Division (Responsible Institution) NPI code
"RTN","IBCEF73A",88,0)
 ;        Piece 2) Non-VA Service Facility NPI code
"RTN","IBCEF73A",89,0)
 ;        Piece 3) Billing Provider NPI code (main VA division)
"RTN","IBCEF73A",90,0)
 N IBRETVAL,IBORG,IBEVDT,IBDIV,NPI
"RTN","IBCEF73A",91,0)
 S IBNONPI=""
"RTN","IBCEF73A",92,0)
 I $G(IBIEN399)="" Q ""
"RTN","IBCEF73A",93,0)
 S IBRETVAL=""
"RTN","IBCEF73A",94,0)
 S IBEVDT=$$GET1^DIQ(399,IBIEN399_",",.03,"I")
"RTN","IBCEF73A",95,0)
 I IBEVDT="" S IBEVDT=DT
"RTN","IBCEF73A",96,0)
 S IBDIV=$$GET1^DIQ(399,IBIEN399_",",.22,"I")
"RTN","IBCEF73A",97,0)
 I IBDIV="" S IBDIV=$$PRIM^VASITE(IBEVDT)
"RTN","IBCEF73A",98,0)
 S IBORG=$P($$SITE^VASITE(IBEVDT,IBDIV),U),NPI=""
"RTN","IBCEF73A",99,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U) S:NPI'=-1 $P(IBRETVAL,U)=NPI
"RTN","IBCEF73A",100,0)
 I NPI<1,$D(IBNONPI) S IBNONPI=1
"RTN","IBCEF73A",101,0)
 S IBORG=$$GET1^DIQ(399,IBIEN399_",",232,"I")
"RTN","IBCEF73A",102,0)
 I IBORG S NPI=$$NPIGET^IBCEP81(IBORG),$P(IBRETVAL,U,2)=NPI I 'NPI,$D(IBNONPI) S IBNONPI=$S(IBNONPI="":2,1:IBNONPI_U_2)
"RTN","IBCEF73A",103,0)
 S IBORG=$P($$SITE^VASITE,U),NPI=""
"RTN","IBCEF73A",104,0)
 I IBORG S NPI=$P($$NPI^XUSNPI("Organization_ID",IBORG),U) S:NPI'=-1 $P(IBRETVAL,U,3)=NPI
"RTN","IBCEF73A",105,0)
 I NPI<1,$D(IBNONPI) S IBNONPI=$S(IBNONPI="":3,1:IBNONPI_U_3)
"RTN","IBCEF73A",106,0)
 Q IBRETVAL
"RTN","IBCEF73A",107,0)
 ;
"RTN","IBCEF73A",108,0)
ORGTAX(IBIEN399,IBNOTAX) ; Extract Taxonomies for organizations on this claim
"RTN","IBCEF73A",109,0)
 ; Input
"RTN","IBCEF73A",110,0)
 ;       IBIEN399 - Claim IEN in file 399
"RTN","IBCEF73A",111,0)
 ;       IBNOTAX - Variable to pass info on missing taxonomies back to calling routine.  Pass by reference.
"RTN","IBCEF73A",112,0)
 ; Output - Taxonomy X12 codes for facilities
"RTN","IBCEF73A",113,0)
 ;        Piece 1) Division (Responsible Institution) Taxonomy X12 code
"RTN","IBCEF73A",114,0)
 ;        Piece 2) Non-VA Service Facility Taxonomy X12 code
"RTN","IBCEF73A",115,0)
 ;        Piece 3) Billing Provider Taxonomy X12 code (main VA division)
"RTN","IBCEF73A",116,0)
 N IBRETVAL,IBTAX,TAX
"RTN","IBCEF73A",117,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",243,"I")
"RTN","IBCEF73A",118,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",119,0)
 S $P(IBRETVAL,U)=TAX
"RTN","IBCEF73A",120,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=1
"RTN","IBCEF73A",121,0)
 S IBTAX=$$GET1^DIQ(399,IBIEN399_",",244,"I")
"RTN","IBCEF73A",122,0)
 S TAX=$$GET1^DIQ(8932.1,IBTAX,"X12 CODE")
"RTN","IBCEF73A",123,0)
 S $P(IBRETVAL,U,2)=TAX
"RTN","IBCEF73A",124,0)
 I '$L(TAX),$$GET1^DIQ(399,IBIEN399_",",232,"I"),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":2,1:IBNOTAX_U_2)
"RTN","IBCEF73A",125,0)
 S IBORG=$P($$SITE^VASITE,U)
"RTN","IBCEF73A",126,0)
 S TAX=$P($$TAXORG^XUSTAX(IBORG),U)
"RTN","IBCEF73A",127,0)
 S $P(IBRETVAL,U,3)=TAX
"RTN","IBCEF73A",128,0)
 I '$L(TAX),$D(IBNOTAX) S IBNOTAX=$S(IBNOTAX="":3,1:IBNOTAX_U_3)
"RTN","IBCEF73A",129,0)
 Q IBRETVAL
"RTN","IBCEF74")
0^15^B57770095^B56167229
"RTN","IBCEF74",1,0)
IBCEF74 ;WOIFO/SS - FORMATTER/EXTRACT BILL FUNCTIONS ;31-JUL-03
"RTN","IBCEF74",2,0)
 ;;2.0;INTEGRATED BILLING;**232,280,155,290,291,320,358,343,374**;21-MAR-94;Build 16
"RTN","IBCEF74",3,0)
 ;; Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEF74",4,0)
 ;
"RTN","IBCEF74",5,0)
SORT(IBPRNUM,IBPRTYP,IB399,IBSRC,IBDST,IBN,IBEXC,IBSEQ,IBLIMIT) ;
"RTN","IBCEF74",6,0)
 D SORT^IBCEF77($G(IBPRNUM),$G(IBPRTYP),$G(IB399),.IBSRC,.IBDST,$G(IBN),$G(IBEXC),$G(IBSEQ),$G(IBLIMIT))
"RTN","IBCEF74",7,0)
 Q
"RTN","IBCEF74",8,0)
 ;
"RTN","IBCEF74",9,0)
 ;-- PROVINF --
"RTN","IBCEF74",10,0)
 ;Create array with prov info
"RTN","IBCEF74",11,0)
 ;Input:
"RTN","IBCEF74",12,0)
 ; IB399 - ien #399
"RTN","IBCEF74",13,0)
 ; IBPRNUM - 1=prim ins, 2= sec, 3 -tert
"RTN","IBCEF74",14,0)
 ; IBRES - for results
"RTN","IBCEF74",15,0)
 ; IBSORT - to sort OTHER INSURANCE data 
"RTN","IBCEF74",16,0)
 ;  if PROVINF is called for "C" mode of PROVIDER subroutine then 
"RTN","IBCEF74",17,0)
 ;    IBSORT can be any (say 1)
"RTN","IBCEF74",18,0)
 ;  if PROVINF is called for "O" mode then can be more than set of data
"RTN","IBCEF74",19,0)
 ;    - need to sort array to use it (like IBXDATA(1) and IBXDATA(2))
"RTN","IBCEF74",20,0)
 ;    for mode "O" it should be 1 or 2 (see PROVIDER section)
"RTN","IBCEF74",21,0)
 ;IBINSTP -  "C" -current ins, "O"-other
"RTN","IBCEF74",22,0)
 ;Output:
"RTN","IBCEF74",23,0)
 ; IBRES(PRNUM,PRTYPE,SEQ#)=PROV^INSUR^IDTYPE^ID^FORMTYP^CARETYP
"RTN","IBCEF74",24,0)
 ; where:(see PROVIDER)
"RTN","IBCEF74",25,0)
PROVINF(IB399,IBPRNUM,IBRES,IBSORT,IBINSTP) ;
"RTN","IBCEF74",26,0)
 I $G(IB399)="" Q
"RTN","IBCEF74",27,0)
 I +$G(IBSORT)=0 S IBSORT=$G(IBPRNUM)
"RTN","IBCEF74",28,0)
 N IBPRTYP,IBINSCO,IBPROV,IBFRMTYP,IBCARE,IB35591,IBN,IBCURR,IBEXC,IBALLSSN,IBSSNIEN,IBLIMIT
"RTN","IBCEF74",29,0)
 S IBN=0
"RTN","IBCEF74",30,0)
 D F^IBCEF("N-ALL ATT/RENDERING PROV SSN","IBALLSSN",,IB399)
"RTN","IBCEF74",31,0)
 S Q=0 F  S Q=$O(^IBE(355.97,Q)) Q:'Q  I $P($G(^(Q,0)),U,3)="SY" S IBSSNIEN=Q Q
"RTN","IBCEF74",32,0)
 S IBINSCO=+$P($G(^DGCR(399,IB399,"M")),"^",IBPRNUM)
"RTN","IBCEF74",33,0)
 S IBFRMTYP=$$FT^IBCEF(IB399),IBFRMTYP=$S(IBFRMTYP=2:2,IBFRMTYP=3:1,1:0)
"RTN","IBCEF74",34,0)
 S IBCARE=$S($$ISRX^IBCEF1(IB399):3,1:0) ;if an Rx refill bill
"RTN","IBCEF74",35,0)
 S:IBCARE=0 IBCARE=$$INPAT^IBCEF(IB399,1) S:'IBCARE IBCARE=2 ;1-inp,2-out
"RTN","IBCEF74",36,0)
 S IBLIMIT=$S($G(IBINSTP)="C":5,1:3)  ; Limits on secondary IDs
"RTN","IBCEF74",37,0)
 F IBPRTYP=1:1:9 D
"RTN","IBCEF74",38,0)
 . N Z,IB355OV
"RTN","IBCEF74",39,0)
 . S IBPROV=$$PROVPTR^IBCEF7(IB399,IBPRTYP)
"RTN","IBCEF74",40,0)
 . Q:+IBPROV=0
"RTN","IBCEF74",41,0)
 . ;don't create anything if form type not CMS-1500 or UB
"RTN","IBCEF74",42,0)
 . Q:IBFRMTYP=0
"RTN","IBCEF74",43,0)
 . N IBRETARR S IBRETARR=0
"RTN","IBCEF74",44,0)
 . D PRACT^IBCEF71(IBINSCO,IBFRMTYP,IBCARE,IBPROV,.IBRETARR,IBPRTYP,$G(IBINSTP))
"RTN","IBCEF74",45,0)
 . S IB355OV="",IBEXC=""
"RTN","IBCEF74",46,0)
 . S Z=$O(^DGCR(399,IB399,"PRV","B",IBPRTYP,0))
"RTN","IBCEF74",47,0)
 . I Z S Z=$G(^DGCR(399,IB399,"PRV",Z,0)) D
"RTN","IBCEF74",48,0)
 .. I $P(Z,U,IBPRNUM+4)'="",$P(Z,U,IBPRNUM+11)'="" S IB355OV=$P(Z,U,IBPRNUM+4)_U_$P(Z,U,IBPRNUM+11)
"RTN","IBCEF74",49,0)
 . S IBCURR=$$COB^IBCEF(IB399)
"RTN","IBCEF74",50,0)
 . S IBN=0,IB35591=$$CH35591^IBCEF72(IBINSCO,IBFRMTYP,IBCARE)
"RTN","IBCEF74",51,0)
 . I $G(IBINSTP)="C",$G(IBPRNUM)=1,"34"[$G(IBPRTYP),"P"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12"
"RTN","IBCEF74",52,0)
 . I $G(IBINSTP)="O","34"[$G(IBPRTYP),"ST"[$G(IBCURR),$G(IBFRMTYP)=2,$$MCRONBIL^IBEFUNC(IB399) S IB355OV=$$MCR24K^IBCEU3(IB399)_"^12" ;Calculate MEDICARE (WNR) specific provider qualifier and ID for CMS-1500 secondary claims
"RTN","IBCEF74",53,0)
 . I $P(IB355OV,U,2) D
"RTN","IBCEF74",54,0)
 .. I $$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P($G(^IBE(355.97,+$P(IB355OV,U,2),0)),U,3)) D
"RTN","IBCEF74",55,0)
 ... S IBEXC=$P(IB355OV,U,2),IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="OVERRIDE^"_IBINSCO_U_$P($G(^IBE(355.97,+IBEXC,0)),U,3)_U_$P(IB355OV,U)_"^^^^^"_+IBEXC
"RTN","IBCEF74",56,0)
 . I IB35591'="",IBEXC'=$P(IB35591,U,3) S:$$CHCKSEC^IBCEF73(IBFRMTYP,IBPRTYP,$G(IBINSTP),$P(IB35591,"^")) IBN=IBN+1,IBRES(IBSORT,IBPRTYP,IBN)="DEFAULT^"_IBINSCO_"^"_IB35591_"^^",$P(IBRES(IBSORT,IBPRTYP,IBN),U,9)=$P(IB35591,U,3)
"RTN","IBCEF74",57,0)
 . D SORT(IBSORT,IBPRTYP,IB399,.IBRETARR,.IBRES,IBN,IBEXC,IBPRNUM,IBLIMIT)
"RTN","IBCEF74",58,0)
 . S IBRES(IBSORT,IBPRTYP)=IBPROV
"RTN","IBCEF74",59,0)
 S IBRES(IBSORT)=$S(IBPRNUM=3:"T",IBPRNUM=2:"S",1:"P")
"RTN","IBCEF74",60,0)
 Q
"RTN","IBCEF74",61,0)
 ;
"RTN","IBCEF74",62,0)
SECIDCK(IBIFN,IBSEQ,IBTYP,IBIFN1) ; Function returns 1 if ID type ptr in
"RTN","IBCEF74",63,0)
 ;  IBTYP is valid X12 code for the claim/prov function (IBPROVF)
"RTN","IBCEF74",64,0)
 ;  as a sec id
"RTN","IBCEF74",65,0)
 ; IBSEQ = COB seq being checked
"RTN","IBCEF74",66,0)
 ; IBIFN1 = entry # in PRV multiple being checked
"RTN","IBCEF74",67,0)
 ;  Called from input transform of fields .12-.14, subfile 399.0222
"RTN","IBCEF74",68,0)
 I $G(IBIFN)="" Q
"RTN","IBCEF74",69,0)
 N IBOK,IBFRM,IBCOBN,IBX12,IBPROVF
"RTN","IBCEF74",70,0)
 S IBPROVF=+$G(^DGCR(399,IBIFN,"PRV",IBIFN1,0))
"RTN","IBCEF74",71,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBFRM=$S(IBFRM=3:1,1:2) ; Form type
"RTN","IBCEF74",72,0)
 S IBCOBN=$$COBN^IBCEF(IBIFN) S:'IBCOBN IBCOBN=1 ; Current COB seq
"RTN","IBCEF74",73,0)
 S IBX12=$P($G(^IBE(355.97,+IBTYP,0)),U,3) ; X12 code for prov id typ
"RTN","IBCEF74",74,0)
 Q $$CHSEC^IBCEF73(IBFRM,IBPROVF,$S(IBSEQ=IBCOBN:"C",1:"O"),IBX12)
"RTN","IBCEF74",75,0)
 ;
"RTN","IBCEF74",76,0)
DEFID(IBIFN,IBPRV) ;
"RTN","IBCEF74",77,0)
 ; IBIFN = ien of bill
"RTN","IBCEF74",78,0)
 ; IBPRV = ien of entry subfile 399.0222
"RTN","IBCEF74",79,0)
 ;  Function returns default ids: prim id def^sec id def^tert id def
"RTN","IBCEF74",80,0)
 ;  SSN cannot be the default ID
"RTN","IBCEF74",81,0)
 I $G(IBIFN)="" Q ""
"RTN","IBCEF74",82,0)
 N Z,Z1,ID,IBZ,IBINS,IBINS4,IBUB
"RTN","IBCEF74",83,0)
 S IBZ=""
"RTN","IBCEF74",84,0)
 S IBUB=($$FT^IBCEF(IBIFN)=3)
"RTN","IBCEF74",85,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",86,0)
 S Z=$G(^DGCR(399,IBIFN,"PRV",IBPRV,0)),ID=$P(Z,U,5,7)
"RTN","IBCEF74",87,0)
 F Z1=1:1:3 I $P(ID,U,Z1)="" D
"RTN","IBCEF74",88,0)
 . Q:'$G(^DGCR(399,IBIFN,"I"_Z1))  S IBINS=+^("I"_Z1)
"RTN","IBCEF74",89,0)
 . S $P(ID,U,Z1)=$$GETID^IBCEP2(IBIFN,2,$P(Z,U,2),Z1)
"RTN","IBCEF74",90,0)
 . ; Set default if null
"RTN","IBCEF74",91,0)
 . I $P(ID,U,Z1)="" S $P(ID,U,Z1)="VAD000"
"RTN","IBCEF74",92,0)
 Q ID
"RTN","IBCEF74",93,0)
 ;
"RTN","IBCEF74",94,0)
DISPID(IBXIEN) ; Display list of all prov and fac ids that will
"RTN","IBCEF74",95,0)
 ; extract for this bill if transmitted electronically
"RTN","IBCEF74",96,0)
 I $G(IBXIEN)="" Q
"RTN","IBCEF74",97,0)
 N IBID,IBID1,IBZ,IBCT,IBFRM,IBCOBN,IBATT,IBQUIT,IBTYP,DIR,IBIFN,X,Y,Z,Z0,Z1
"RTN","IBCEF74",98,0)
 N IBNPI,IBNONPI
"RTN","IBCEF74",99,0)
 S IBIFN=IBXIEN
"RTN","IBCEF74",100,0)
 S IBFRM=$$FT^IBCEF(IBIFN),IBCOBN=$$COBN^IBCEF(IBIFN),IBATT=$S(IBFRM=2:3,1:4)
"RTN","IBCEF74",101,0)
 W @IOF
"RTN","IBCEF74",102,0)
 W !,"If this bill is transmitted electronically, the following IDs will be sent:"
"RTN","IBCEF74",103,0)
 ; Returns all prov sec ids to be transmitted in indicated segments
"RTN","IBCEF74",104,0)
 S Z=+$G(^DGCR(399,IBIFN,"I1")) I Z W !,"  Primary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=1 W ?54,"<<<Current Ins"
"RTN","IBCEF74",105,0)
 S Z=+$G(^DGCR(399,IBIFN,"I2")) I Z W !,"Secondary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=2 W ?54,"<<<Current Ins"
"RTN","IBCEF74",106,0)
 S Z=+$G(^DGCR(399,IBIFN,"I3")) I Z W !," Tertiary Ins Co: ",$$EXTERNAL^DILFD(399,101,"",Z) I IBCOBN=3 W ?54,"<<<Current Ins"
"RTN","IBCEF74",107,0)
 W !!,"Provider IDs: (VistA Records OP1,OP2,OP4,OP8,OP9,OPR2,OPR3,OPR4,OPR5,OPR8):"
"RTN","IBCEF74",108,0)
 F Z=1:1:3 I $G(^DGCR(399,IBIFN,"I"_Z)) D PROVINF(IBIFN,Z,.IBID,"",$S(IBCOBN=Z:"C",1:"O"))
"RTN","IBCEF74",109,0)
 S Z=0 F  S Z=$O(IBID(Z)) Q:'Z  S Z0=0 F  S Z0=$O(IBID(Z,Z0)) Q:'Z0  S IBID1(Z0,Z)="",Z1=0 F  S Z1=$O(IBID(Z,Z0,Z1)) Q:'Z1  I $P(IBID(Z,Z0,Z1),U,9) S IBID1(Z0,Z,Z1)=IBID(Z,Z0,Z1)
"RTN","IBCEF74",110,0)
 ; PRXM/KJH - Add NPI to display for patch 343.
"RTN","IBCEF74",111,0)
 S IBNPI=$$PROVNPI^IBCEF73A(IBIFN,.IBNONPI)
"RTN","IBCEF74",112,0)
 S Z=+$O(^DGCR(399,IBIFN,"PRV","B",IBATT,0))
"RTN","IBCEF74",113,0)
 I Z S Z=$P($G(^DGCR(399,IBIFN,"PRV",Z,0)),U,2)
"RTN","IBCEF74",114,0)
 W !,?5,"ATTENDING/RENDERING: ",$$EXTERNAL^DILFD(399.0222,.02,"",Z)
"RTN","IBCEF74",115,0)
 D F^IBCEF("N-ALL ATT/REND PROV SSN/EI","IBZ","",IBIFN)
"RTN","IBCEF74",116,0)
 W !,?8,"NPI: ",?40,$S($P(IBNPI,U,IBATT)'="":$P(IBNPI,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",117,0)
 W !,?8,"SSN: ",?40,$S($P(IBZ,U,IBATT)'="":$P(IBZ,U,IBATT),1:"***MISSING***")
"RTN","IBCEF74",118,0)
 I $O(IBID1(IBATT,0)) W !,?8,"Secondary IDs"
"RTN","IBCEF74",119,0)
 S IBQUIT=0
"RTN","IBCEF74",120,0)
 ;
"RTN","IBCEF74",121,0)
 ; Attending/Rendering (4/3) secondary IDs
"RTN","IBCEF74",122,0)
 S Z0=0 F  S Z0=$O(IBID1(IBATT,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(IBATT,Z0,Z1)) Q:'Z1  D  Q:IBQUIT
"RTN","IBCEF74",123,0)
 . Q:$D(IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9)))  ;1st of each type transmits
"RTN","IBCEF74",124,0)
 . I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",125,0)
 . S IBTYP(+$P(IBID1(IBATT,Z0,Z1),U,9))=""
"RTN","IBCEF74",126,0)
 . W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(IBATT,Z0,Z1),U,9)),?40,$P(IBID1(IBATT,Z0,Z1),U,4)
"RTN","IBCEF74",127,0)
 . Q
"RTN","IBCEF74",128,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",129,0)
 ;
"RTN","IBCEF74",130,0)
 ; Referring(1), Operating(2), Supervising(5), Other(9) secondary IDs
"RTN","IBCEF74",131,0)
 ; PRXM/KJH - Patch 343. Modified first loop so it will always display provider and NPI and conditionally display other data.
"RTN","IBCEF74",132,0)
 ; S Z=0 F  S Z=$O(IBID1(Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",133,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV","B",Z)) Q:'Z  I Z<3!(Z>4) D  Q:IBQUIT
"RTN","IBCEF74",134,0)
 . N Q
"RTN","IBCEF74",135,0)
 . S Q=+$O(^DGCR(399,IBIFN,"PRV","B",Z,0))
"RTN","IBCEF74",136,0)
 . W !!,?5,$$EXTERNAL^DILFD(399.0222,.01,"",Z),": "_$$EXTERNAL^DILFD(399.0222,.02,"",$P($G(^DGCR(399,IBIFN,"PRV",Q,0)),U,2))
"RTN","IBCEF74",137,0)
 . W !,?8,"NPI: ",?40,$S($P(IBNPI,U,Z)'="":$P(IBNPI,U,Z),1:"***MISSING***")
"RTN","IBCEF74",138,0)
 . S Z0=0 F  S Z0=$O(IBID1(Z,Z0)) Q:'Z0!IBQUIT  K IBTYP S Z1=0 F  S Z1=$O(IBID1(Z,Z0,Z1)) Q:'Z1!IBQUIT  D
"RTN","IBCEF74",139,0)
 .. Q:$D(IBTYP(+$P(IBID1(Z,Z0,Z1),U,9)))  ; 1st of each type transmits
"RTN","IBCEF74",140,0)
 .. I ($Y+5)>IOSL S IBQUIT=$$NOMORE() Q:IBQUIT
"RTN","IBCEF74",141,0)
 .. S IBTYP(+$P(IBID1(Z,Z0,Z1),U,9))=""
"RTN","IBCEF74",142,0)
 .. W !,?8,"(",$E("PST",Z0),") ",$$EXTERNAL^DILFD(36,4.01,"",$P(IBID1(Z,Z0,Z1),U,9)),?40,$P(IBID1(Z,Z0,Z1),U,4)
"RTN","IBCEF74",143,0)
 .. Q
"RTN","IBCEF74",144,0)
 . Q
"RTN","IBCEF74",145,0)
 I IBQUIT G DISPIDX
"RTN","IBCEF74",146,0)
 ;
"RTN","IBCEF74",147,0)
 ; IB*2*320 - display additional IDs for ?ID
"RTN","IBCEF74",148,0)
 D EN^IBCEF74A(IBIFN,.IBQUIT)
"RTN","IBCEF74",149,0)
 ;
"RTN","IBCEF74",150,0)
DISPIDX ;
"RTN","IBCEF74",151,0)
 I '$G(IBQUIT) S DIR(0)="EA",DIR("A")="Press RETURN to continue " W ! D ^DIR K DIR
"RTN","IBCEF74",152,0)
 Q
"RTN","IBCEF74",153,0)
 ;
"RTN","IBCEF74",154,0)
NOMORE() ;
"RTN","IBCEF74",155,0)
 S DIR(0)="EA",DIR("A")="Press RETURN for more IDs or '^' to exit: " W ! D ^DIR
"RTN","IBCEF74",156,0)
 W @IOF
"RTN","IBCEF74",157,0)
 Q (Y'=1)
"RTN","IBCEF74",158,0)
 ;
"RTN","IBCEF74",159,0)
DEFSEC(IBIFN,IBARR) ; Returns array in IBARR for default prov sec ids for ien IBIFN
"RTN","IBCEF74",160,0)
 ; IBARR if passed by ref is returned   IBARR(prov function,COBN)=def id
"RTN","IBCEF74",161,0)
 I $G(IBIFN)=""
"RTN","IBCEF74",162,0)
 N IBCAR,IBCOBN,IBPC,IBINS,IBARRX,Q,Z,Z0,ZINS,X
"RTN","IBCEF74",163,0)
 K IBARR
"RTN","IBCEF74",164,0)
 S ZINS="",IBCOBN=$$COBN^IBCEF(IBIFN),IBPC=$S($$FT^IBCEF(IBIFN)=3:2,1:1)
"RTN","IBCEF74",165,0)
 S IBCAR=$$INPAT^IBCEF(IBIFN,1),IBCAR=$S('IBCAR:2,1:1)
"RTN","IBCEF74",166,0)
 F Z=1:1:3 S ZINS=ZINS_+$G(^DGCR(399,IBIFN,"I"_Z))_U
"RTN","IBCEF74",167,0)
 F Z=1:1:3 I $P(ZINS,U,Z),'$P($G(^DIC(36,+$P(ZINS,U,Z),4)),U,IBPC) S $P(ZINS,U,Z)=""
"RTN","IBCEF74",168,0)
 S Z=0 F  S Z=$O(^DGCR(399,IBIFN,"PRV",Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEF74",169,0)
 . F Q=1:1:3 D
"RTN","IBCEF74",170,0)
 .. I $P(Z0,U,Q+4)'="" S IBARR(+Z0,Q)=$P(Z0,U,Q+4) Q  ; Override
"RTN","IBCEF74",171,0)
 .. S IBINS=$P(ZINS,U,Q)
"RTN","IBCEF74",172,0)
 .. Q:'IBINS
"RTN","IBCEF74",173,0)
 .. S X=$$IDFIND^IBCEP2(IBIFN,"",$P(Z0,U,2),Q,1)
"RTN","IBCEF74",174,0)
 .. I X'="" S IBARR(+Z0,Q)=X
"RTN","IBCEF74",175,0)
 Q
"RTN","IBCEF74",176,0)
 ;
"RTN","IBCEP8")
0^13^B72198572^B72198572
"RTN","IBCEP8",1,0)
IBCEP8 ;ALB/TMP - Functions for NON-VA PROVIDER ;11-07-00
"RTN","IBCEP8",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,232,288,320,343,374**;21-MAR-94;Build 16
"RTN","IBCEP8",3,0)
 ;
"RTN","IBCEP8",4,0)
EN ; -- main entry point
"RTN","IBCEP8",5,0)
 N IBNPRV
"RTN","IBCEP8",6,0)
 K IBFASTXT
"RTN","IBCEP8",7,0)
 D FULL^VALM1
"RTN","IBCEP8",8,0)
 D EN^VALM("IBCE PRVNVA MAINT")
"RTN","IBCEP8",9,0)
 Q
"RTN","IBCEP8",10,0)
 ;
"RTN","IBCEP8",11,0)
HDR ; -- header code
"RTN","IBCEP8",12,0)
 K VALMHDR
"RTN","IBCEP8",13,0)
 Q
"RTN","IBCEP8",14,0)
 ;
"RTN","IBCEP8",15,0)
INIT ; Initialization
"RTN","IBCEP8",16,0)
 N DIC,DA,X,Y,DLAYGO,IBIF,DIR,DTOUT,DUOUT
"RTN","IBCEP8",17,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",18,0)
 S DIR("A")="(I)NDIVIDUAL OR (F)ACILITY?: ",DIR(0)="SA^I:INDIVIDUAL;F:FACILITY" D ^DIR K DIR
"RTN","IBCEP8",19,0)
 I $D(DUOUT)!$D(DTOUT) S VALMQUIT=1 G INITQ
"RTN","IBCEP8",20,0)
 S IBIF=Y
"RTN","IBCEP8",21,0)
 ;
"RTN","IBCEP8",22,0)
 I IBIF="F" D
"RTN","IBCEP8",23,0)
 . S VALM("TITLE")="Non-VA Lab or Facility Info"
"RTN","IBCEP8",24,0)
 . K VALM("PROTOCOL")
"RTN","IBCEP8",25,0)
 . S Y=$$FIND1^DIC(101,,,"IBCE PRVNVA NONIND MAINT")
"RTN","IBCEP8",26,0)
 . I Y S VALM("PROTOCOL")=+Y_";ORD(101,"
"RTN","IBCEP8",27,0)
 ;
"RTN","IBCEP8",28,0)
 S DIC="^IBA(355.93,",DIC("DR")=".02////"_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",29,0)
 S DIC("S")="I $P(^(0),U,2)="_$S(IBIF'="F":2,1:1)
"RTN","IBCEP8",30,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON"_$S(IBIF="I":"-",1:"/OTHER ")_"VA PROVIDER: "
"RTN","IBCEP8",31,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",32,0)
 I Y'>0 S VALMQUIT=1 G INITQ
"RTN","IBCEP8",33,0)
 S IBNPRV=+Y
"RTN","IBCEP8",34,0)
 D BLD
"RTN","IBCEP8",35,0)
INITQ Q
"RTN","IBCEP8",36,0)
 ;
"RTN","IBCEP8",37,0)
BLD ; Build/Rebuild display
"RTN","IBCEP8",38,0)
 N IBLCT,IBCT,IBLST,IBPRI,IBIEN,Z,Z1,Z2
"RTN","IBCEP8",39,0)
 K @VALMAR
"RTN","IBCEP8",40,0)
 S (IBLCT,IBCT)=0,Z=$G(^IBA(355.93,IBNPRV,0))
"RTN","IBCEP8",41,0)
 S IBCT=IBCT+1
"RTN","IBCEP8",42,0)
 S Z1=$J("Name: ",15)_$P(Z,U) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",43,0)
 I $P(Z,U,2)=2 D
"RTN","IBCEP8",44,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",45,0)
 . S Z1=$J("Type: ",15)_$S($P(Z,U,2)=2:"INDIVIDUAL PROVIDER",1:"OUTSIDE OR OTHER VA FACILITY") D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",46,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",47,0)
 . S Z1=$J("Credentials: ",15)_$P(Z,U,3) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",48,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",49,0)
 . S Z1=$J("Specialty: ",15)_$P(Z,U,4) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",50,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",51,0)
 . S Z1=$J("NPI: ",15)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",52,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",53,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8",54,0)
 . S Z1=$J("Taxonomy Code: ",15)_$P(IBPRI,U)
"RTN","IBCEP8",55,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",56,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",57,0)
 . S IBIEN=""
"RTN","IBCEP8",58,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8",59,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8",60,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",61,0)
 .. S Z1=$J("",15)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",62,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",63,0)
 E  D
"RTN","IBCEP8",64,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",65,0)
 . S Z1=$J("Address: ",15)_$P(Z,U,5) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",66,0)
 . I $P(Z,U,10) D
"RTN","IBCEP8",67,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",68,0)
 .. S Z1=$J("",15)_$P(Z,U,10)
"RTN","IBCEP8",69,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",70,0)
 . S Z1=$J("",15)_$P(Z,U,6)_$S($P(Z,U,6)'="":", ",1:"")_$S($P(Z,U,7):$$EXTERNAL^DILFD(355.93,.07,"",$P(Z,U,7))_"  ",1:"")_$P(Z,U,8)
"RTN","IBCEP8",71,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",72,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",73,0)
 . S Z1=" " D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",74,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",75,0)
 . S Z1=$J("Type of Facility: ",30)_$$EXTERNAL^DILFD(355.93,.11,,$P(Z,U,11))
"RTN","IBCEP8",76,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",77,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",78,0)
 . S Z1=$J("Primary ID: ",30)_$P(Z,U,9)
"RTN","IBCEP8",79,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",80,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",81,0)
 . S Z1=$J("ID Qualifier: ",30)_$$GET1^DIQ(355.97,$P(Z,U,13),.03) I $P(Z,U,13)]"" S Z1=Z1_" - "_$$GET1^DIQ(355.97,$P(Z,U,13),.01)
"RTN","IBCEP8",82,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",83,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",84,0)
 . S Z1=$J("Mammography Certification #: ",30)_$P(Z,U,15)
"RTN","IBCEP8",85,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",86,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",87,0)
 . S Z1=$J("NPI: ",30)_$$NPIGET^IBCEP81(IBNPRV) D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",88,0)
 . S IBCT=IBCT+1
"RTN","IBCEP8",89,0)
 . S IBPRI=$$TAXGET^IBCEP81(IBNPRV,.IBLST)
"RTN","IBCEP8",90,0)
 . S Z1=$J("Taxonomy Code: ",30)_$P(IBPRI,U)
"RTN","IBCEP8",91,0)
 . I $D(IBLST) S Z1=Z1_" ("_$S($P(IBLST(IBLST),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",92,0)
 . D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",93,0)
 . S IBIEN=""
"RTN","IBCEP8",94,0)
 . F  S IBIEN=$O(IBLST(IBIEN)) Q:IBIEN=""  D
"RTN","IBCEP8",95,0)
 .. I IBIEN=IBLST Q
"RTN","IBCEP8",96,0)
 .. S IBCT=IBCT+1
"RTN","IBCEP8",97,0)
 .. S Z1=$J("",30)_$P(IBLST(IBIEN),U)_" ("_$S($P(IBLST(IBIEN),U,3)=1:"Primary",1:"Secondary")_")"
"RTN","IBCEP8",98,0)
 .. D SET1(.IBLCT,Z1,IBCT)
"RTN","IBCEP8",99,0)
 K VALMBG,VALMCNT
"RTN","IBCEP8",100,0)
 S VALMBG=1,VALMCNT=IBLCT
"RTN","IBCEP8",101,0)
 Q
"RTN","IBCEP8",102,0)
 ;
"RTN","IBCEP8",103,0)
SET1(IBLCT,TEXT,IBCT) ;
"RTN","IBCEP8",104,0)
 S IBLCT=IBLCT+1 D SET^VALM10(IBLCT,TEXT,$G(IBCT))
"RTN","IBCEP8",105,0)
 Q
"RTN","IBCEP8",106,0)
EXPND ;
"RTN","IBCEP8",107,0)
 Q
"RTN","IBCEP8",108,0)
 ;
"RTN","IBCEP8",109,0)
HELP ;
"RTN","IBCEP8",110,0)
 Q
"RTN","IBCEP8",111,0)
 ;
"RTN","IBCEP8",112,0)
EXIT ;
"RTN","IBCEP8",113,0)
 K ^TMP("IBCE_PRVNVA_MAINT",$J)
"RTN","IBCEP8",114,0)
 D CLEAN^VALM10
"RTN","IBCEP8",115,0)
 K IBFASTXT
"RTN","IBCEP8",116,0)
 Q
"RTN","IBCEP8",117,0)
 ;
"RTN","IBCEP8",118,0)
EDIT1(IBNPRV,IBNOLM) ; Edit non-VA provider/facility demographics
"RTN","IBCEP8",119,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",120,0)
 ; IBNOLM = 1 if not called from list manager
"RTN","IBCEP8",121,0)
 ;
"RTN","IBCEP8",122,0)
 N DA,X,Y,DIE,DR,IBP
"RTN","IBCEP8",123,0)
 I '$G(IBNOLM) D FULL^VALM1
"RTN","IBCEP8",124,0)
 I IBNPRV D
"RTN","IBCEP8",125,0)
 . I '$G(IBNOLM) D CLEAR^VALM1
"RTN","IBCEP8",126,0)
 . S DIE="^IBA(355.93,",DA=IBNPRV,IBP=($P($G(^IBA(355.93,IBNPRV,0)),U,2)=2)
"RTN","IBCEP8",127,0)
 . ; PRXM/KJH - Added NPI and Taxonomy to the list of fields to be edited. Put a "NO^" around the Taxonomy multiple (#42) since some of the sub-field entries are 'required'.
"RTN","IBCEP8",128,0)
 . S DR=".01;"_$S(IBP:".03;.04",1:".05;.1;.06;.07;.08;.13///24;W !,""ID Qualifier: 24 - EMPLOYER'S IDENTIFICATION #"";.09Lab or Facility Primary ID;.11;.15")_";D EN^IBCEP82;S DIE(""NO^"")="""";42;K DIE(""NO^"")"
"RTN","IBCEP8",129,0)
 . D ^DIE
"RTN","IBCEP8",130,0)
 . Q:$G(IBNOLM)
"RTN","IBCEP8",131,0)
 . D BLD
"RTN","IBCEP8",132,0)
 I '$G(IBNOLM) K VALMBCK S VALMBCK="R"
"RTN","IBCEP8",133,0)
 Q
"RTN","IBCEP8",134,0)
 ;
"RTN","IBCEP8",135,0)
EDITID(IBNPRV) ; Link from this list template to maintain provider-specific ids
"RTN","IBCEP8",136,0)
 ; IBNPRV = ien of entry in file 355.93
"RTN","IBCEP8",137,0)
 N IBPRV
"RTN","IBCEP8",138,0)
 D FULL^VALM1
"RTN","IBCEP8",139,0)
 D CLEAR^VALM1
"RTN","IBCEP8",140,0)
 S IBPRV=IBNPRV
"RTN","IBCEP8",141,0)
 D EN1^IBCEP5
"RTN","IBCEP8",142,0)
 K VALMQUIT
"RTN","IBCEP8",143,0)
 S VALMBCK="R"
"RTN","IBCEP8",144,0)
 Q
"RTN","IBCEP8",145,0)
 ;
"RTN","IBCEP8",146,0)
NVAFAC ; Enter/edit Non-VA facility information
"RTN","IBCEP8",147,0)
 N X,Y,DA,DIC,IBNPRV,DLAYGO
"RTN","IBCEP8",148,0)
 S DIC="^IBA(355.93,",DIC("S")="I $P(^(0),U,2)=1",DIC("DR")=".02////1"
"RTN","IBCEP8",149,0)
 S DLAYGO=355.93,DIC(0)="AELMQ",DIC("A")="Select a NON/Other VA FACILITY: "
"RTN","IBCEP8",150,0)
 D ^DIC K DIC,DLAYGO
"RTN","IBCEP8",151,0)
 I Y'>0 S VALMQUIT=1 G NVAFACQ
"RTN","IBCEP8",152,0)
 S IBNPRV=+Y
"RTN","IBCEP8",153,0)
 D EDIT1(IBNPRV,1)
"RTN","IBCEP8",154,0)
 ;
"RTN","IBCEP8",155,0)
NVAFACQ Q
"RTN","IBCEP8",156,0)
 ;
"RTN","IBCEP8",157,0)
GETFAC(IB,IBFILE,IBELE,IBSFD) ; Returns facility name,address lines or city-state-zip
"RTN","IBCEP8",158,0)
 ; IB = ien of entry in file
"RTN","IBCEP8",159,0)
 ; IBFILE = 0 for retrieval from file 4, 1 for retrieval from file 355.93
"RTN","IBCEP8",160,0)
 ; If IBELE=0, returns name
"RTN","IBCEP8",161,0)
 ;         =1, returns address line 1
"RTN","IBCEP8",162,0)
 ;         =2, returns address line 2
"RTN","IBCEP8",163,0)
 ;         =3, returns city, state zip
"RTN","IBCEP8",164,0)
 ;         = "3C", returns city  = "3S", state    = "3Z", zip
"RTN","IBCEP8",165,0)
 ; IBSFD (optional) = Output formatter segment name if the output needs
"RTN","IBCEP8",166,0)
 ;       to be screened thru the VAMCFD^IBCEF75 procedure for the flag
"RTN","IBCEP8",167,0)
 ;       in the insurance company file
"RTN","IBCEP8",168,0)
 ;
"RTN","IBCEP8",169,0)
 N Z,IBX,IBZ
"RTN","IBCEP8",170,0)
 S IBX=""
"RTN","IBCEP8",171,0)
 ;
"RTN","IBCEP8",172,0)
 I $G(IBSFD)="SUB" D VAMCFD^IBCEF75(+$G(IBXIEN),.IBZ) I $D(IBZ),'$G(IBZ("C",1)) G GETFACX
"RTN","IBCEP8",173,0)
 ;
"RTN","IBCEP8",174,0)
 S Z=$S('IBFILE:$G(^DIC(4,+IB,1)),1:$G(^IBA(355.93,+IB,0)))
"RTN","IBCEP8",175,0)
 I +IBELE=0 S IBX=$S('IBFILE:$P($G(^DIC(4,+IB,0)),U),1:$P($G(^IBA(355.93,+IB,0)),U))
"RTN","IBCEP8",176,0)
 I IBELE=1!(IBELE=12) S IBX=$S('IBFILE:$P(Z,U),1:$P(Z,U,5))
"RTN","IBCEP8",177,0)
 I IBELE=2!(IBELE=12) S IBX=$S(IBELE=12:IBX_" ",1:"")_$S('IBFILE:$P(Z,U,2),1:$P(Z,U,10))
"RTN","IBCEP8",178,0)
 ;
"RTN","IBCEP8",179,0)
 I +IBELE=3,'IBFILE D
"RTN","IBCEP8",180,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,3) Q:IBELE["C"
"RTN","IBCEP8",181,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P($G(^DIC(4,+IB,0)),U,2)) Q:IBELE["S"
"RTN","IBCEP8",182,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,4)
"RTN","IBCEP8",183,0)
 . Q
"RTN","IBCEP8",184,0)
 ;
"RTN","IBCEP8",185,0)
 I +IBELE=3,IBFILE D
"RTN","IBCEP8",186,0)
 . S:IBELE=3!(IBELE["C") IBX=$P(Z,U,6) Q:IBELE["C"
"RTN","IBCEP8",187,0)
 . S:IBELE=3 IBX=IBX_$S(IBX'="":", ",1:"") S:IBELE=3!(IBELE["S") IBX=IBX_$$STATE^IBCEFG1($P(Z,U,7))
"RTN","IBCEP8",188,0)
 . S:IBELE=3 IBX=IBX_" " S:IBELE=3!(IBELE["Z") IBX=IBX_$P(Z,U,8)
"RTN","IBCEP8",189,0)
 . Q
"RTN","IBCEP8",190,0)
GETFACX ;
"RTN","IBCEP8",191,0)
 Q IBX
"RTN","IBCEP8",192,0)
 ;
"RTN","IBCEP8",193,0)
ALLID(IBPRV,IBPTYP,IBZ) ; Returns array IBZ for all ids for provider IBPRV
"RTN","IBCEP8",194,0)
 ; for all provider id types or for id type in IBPTYP
"RTN","IBCEP8",195,0)
 ; IBPRV = vp ien of provider
"RTN","IBCEP8",196,0)
 ; IBPTYP = ien of provider id type to return or "" for all
"RTN","IBCEP8",197,0)
 ; IBZ = array returned with internal data:
"RTN","IBCEP8",198,0)
 ;  IBZ(file 355.9 ien)=ID type^ID#^ins co^form type^bill care type^care un^X12 code for id type
"RTN","IBCEP8",199,0)
 N Z,Z0
"RTN","IBCEP8",200,0)
 K IBZ
"RTN","IBCEP8",201,0)
 G:'$G(IBPRV) ALLIDQ
"RTN","IBCEP8",202,0)
 S IBPTYP=$G(IBPTYP)
"RTN","IBCEP8",203,0)
 S Z=0 F  S Z=$O(^IBA(355.9,"B",IBPRV,Z)) Q:'Z  S Z0=$G(^IBA(355.9,Z,0)) D
"RTN","IBCEP8",204,0)
 . I $S(IBPTYP="":1,1:($P(Z0,U,6)=IBPTYP)) S IBZ(Z)=($P(Z0,U,6)_U_$P(Z0,U,7)_U_$P(Z0,U,2)_U_$P(Z0,U,4)_U_$P(Z0,U,5)_U_$P(Z0,U,3))_U_$P($G(^IBE(355.97,+$P(Z0,U,6),0)),U,3)
"RTN","IBCEP8",205,0)
 ;
"RTN","IBCEP8",206,0)
ALLIDQ Q
"RTN","IBCEP8",207,0)
 ;
"RTN","IBCEP8",208,0)
CLIA() ; Returns ien of CLIA # provider id type
"RTN","IBCEP8",209,0)
 N Z,IBZ
"RTN","IBCEP8",210,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,0)),U,3)="X4",$P(^(0),U)["CLIA" S IBZ=Z Q
"RTN","IBCEP8",211,0)
 Q IBZ
"RTN","IBCEP8",212,0)
 ;
"RTN","IBCEP8",213,0)
STLIC() ; Returns ien of STLIC# provider id type
"RTN","IBCEP8",214,0)
 N Z,IBZ
"RTN","IBCEP8",215,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,3) S IBZ=Z Q
"RTN","IBCEP8",216,0)
 Q IBZ
"RTN","IBCEP8",217,0)
 ;
"RTN","IBCEP8",218,0)
TAXID() ; Returns ien of Fed tax id provider id type
"RTN","IBCEP8",219,0)
 N Z,IBZ
"RTN","IBCEP8",220,0)
 S (IBZ,Z)=0 F  S Z=$O(^IBE(355.97,Z)) Q:'Z  I $P($G(^(Z,1)),U,4) S IBZ=Z Q
"RTN","IBCEP8",221,0)
 Q IBZ
"RTN","IBCEP8",222,0)
 ;
"RTN","IBCEP8",223,0)
CLIANVA(IBIFN) ; Returns CLIA # for a non-VA facility on bill ien IBIFN
"RTN","IBCEP8",224,0)
 N IBCLIA,IBZ,IBNVA,Z
"RTN","IBCEP8",225,0)
 S IBCLIA="",IBZ=$$CLIA()
"RTN","IBCEP8",226,0)
 I IBZ D
"RTN","IBCEP8",227,0)
 . S IBNVA=$P($G(^DGCR(399,IBIFN,"U2")),U,10) Q:'IBNVA
"RTN","IBCEP8",228,0)
 . S IBCLIA=$$IDFIND^IBCEP2(IBIFN,IBZ,IBNVA_";IBA(355.93,","",1)
"RTN","IBCEP8",229,0)
 Q IBCLIA
"RTN","IBCEP8",230,0)
 ;
"RTN","IBCEP8",231,0)
VALFAC(X) ; Function returns 1 if format is valid for X12 facility name
"RTN","IBCEP8",232,0)
 ; Alpha/numeric/certain punctuation valid.  Must start with an Alpha
"RTN","IBCEP8",233,0)
 N OK,VAL
"RTN","IBCEP8",234,0)
 S OK=1
"RTN","IBCEP8",235,0)
 S VAL("A")="",VAL("N")="",VAL=",.- "
"RTN","IBCEP8",236,0)
 I $E(X)'?1A!'$$VALFMT(X,.VAL) S OK=0
"RTN","IBCEP8",237,0)
 Q OK
"RTN","IBCEP8",238,0)
 ;
"RTN","IBCEP8",239,0)
VALFMT(X,VAL) ; Returns 1 if format of X is valid, 0 if not
"RTN","IBCEP8",240,0)
 ; X = data to be examined
"RTN","IBCEP8",241,0)
 ; VAL = a 'string' of valid characters AND/OR (passed by reference)
"RTN","IBCEP8",242,0)
 ;    if VAL("A") defined ==> Alpha
"RTN","IBCEP8",243,0)
 ;    if VAL("A") defined ==> Numeric valid
"RTN","IBCEP8",244,0)
 ;    if VAL("A") defined ==> Punctuation valid
"RTN","IBCEP8",245,0)
 ;   any other character included in the string is checked individually
"RTN","IBCEP8",246,0)
 N Z
"RTN","IBCEP8",247,0)
 I $D(VAL("A")) D
"RTN","IBCEP8",248,0)
 . N Z0
"RTN","IBCEP8",249,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1A S Z0(Z)=""
"RTN","IBCEP8",250,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",251,0)
 I $D(VAL("N")) D
"RTN","IBCEP8",252,0)
 . N Z0
"RTN","IBCEP8",253,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1N S Z0(Z)=""
"RTN","IBCEP8",254,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",255,0)
 I $D(VAL("P")) D
"RTN","IBCEP8",256,0)
 . N Z0
"RTN","IBCEP8",257,0)
 . F Z=1:1:$L(X) I $E(X,Z)?1P S Z0(Z)=""
"RTN","IBCEP8",258,0)
 . S Z0="" F  S Z0=$O(Z0(Z0),-1) Q:'Z0  S $E(X,Z0)=""
"RTN","IBCEP8",259,0)
 I $G(VAL)'="" S X=$TR(X,VAL,"")
"RTN","IBCEP8",260,0)
 Q (X="")
"RTN","IBCEP8",261,0)
 ;
"RTN","IBCEP8",262,0)
PS(IBXSAVE) ; Returns 1 if IBXSAVE("PSVC") indicates the svc was non-lab
"RTN","IBCEP8",263,0)
 ; 
"RTN","IBCEP8",264,0)
 Q $S($G(IBXSAVE("PSVC"))="":0,1:"13"[IBXSAVE("PSVC"))
"RTN","IBCEP8",265,0)
 ;
"RTN","IBCEP8",266,0)
 ; Pass in the Internal Entry number to File 355.93
"RTN","IBCEP8",267,0)
 ; Return the Primary ID and Qualifier (ID Type) from 355.9
"RTN","IBCEP8",268,0)
PRIMID(IEN35593) ; Return External Primary ID and ID Quailier
"RTN","IBCEP8",269,0)
 N INDXVAL,LIST,MSG,IDCODE
"RTN","IBCEP8",270,0)
 S INDXVAL=IEN35593_";IBA(355.93,"
"RTN","IBCEP8",271,0)
 N SCREEN S SCREEN="I $P(^(0),U,8)"
"RTN","IBCEP8",272,0)
 D FIND^DIC(355.9,,"@;.06EI;.07","Q",INDXVAL,,,SCREEN,,"LIST","MSG")
"RTN","IBCEP8",273,0)
 I '+$G(LIST("DILIST",0)) Q ""   ; No Primary ID
"RTN","IBCEP8",274,0)
 I +$G(LIST("DILIST",0))>1 Q "***ERROR***^***ERROR***"  ; Bad.  More than one. 
"RTN","IBCEP8",275,0)
 ; Found just one
"RTN","IBCEP8",276,0)
 S IDCODE=$$GET1^DIQ(355.97,LIST("DILIST","ID",1,.06,"I"),.03)
"RTN","IBCEP8",277,0)
 Q $G(LIST("DILIST","ID",1,.07))_U_IDCODE_" - "_$G(LIST("DILIST","ID",1,.06,"E"))
"RTN","IBCEP82")
0^14^B24437621^B27027320
"RTN","IBCEP82",1,0)
IBCEP82 ;ALB/CLT, Special cross references and data entry for fields in file 355.93 ; 14 Apr 2006  9:41 AM
"RTN","IBCEP82",2,0)
 ;;2.0;INTEGRATED BILLING;**343,374**;21-MAR-94;Build 16
"RTN","IBCEP82",3,0)
 ;
"RTN","IBCEP82",4,0)
 ; Call at tags only
"RTN","IBCEP82",5,0)
 Q
"RTN","IBCEP82",6,0)
 ;This routine will ask for the NPI, check for duplicate entries, and check for proper
"RTN","IBCEP82",7,0)
 ;format using the double-add-double formula.  If the NPI is being deleted it will ask
"RTN","IBCEP82",8,0)
 ;the user why it is being deleted.
"RTN","IBCEP82",9,0)
 ;If it is being deleted because of an erroneous entry it will be completely deleted.
"RTN","IBCEP82",10,0)
 ;If it is a valid NPI being deleted because of possible inappropriate usage it will be
"RTN","IBCEP82",11,0)
 ;maintained in the history cross reference to preclude anyone from using this NPI again.
"RTN","IBCEP82",12,0)
 ;
"RTN","IBCEP82",13,0)
EN ;Routine primary entry point
"RTN","IBCEP82",14,0)
 N DTOUT,DUOUT,DIR,DIE,DIC,DR,X,Y
"RTN","IBCEP82",15,0)
 N IBIEN,IBNPI,IBCHECK,IBOLDNPI,IBRBNPI,IBRB
"RTN","IBCEP82",16,0)
 S IBIEN=DA,IBOLDNPI=""
"RTN","IBCEP82",17,0)
EN1 ;
"RTN","IBCEP82",18,0)
 K DIR
"RTN","IBCEP82",19,0)
 S DIR(0)="FO^10:10",DIR("A")="NPI",DIR("?")="Enter a 10 digit National Provider Identifier"
"RTN","IBCEP82",20,0)
 I $G(DA) S:$P($G(^IBA(355.93,DA,0)),U,14)'="" (DIR("B"),IBOLDNPI)=$P($G(^IBA(355.93,DA,0)),U,14)
"RTN","IBCEP82",21,0)
 D ^DIR S IBCHECK=0
"RTN","IBCEP82",22,0)
 I X="^" W *7,!,"   EXIT NOT ALLOWED ??" G EN1
"RTN","IBCEP82",23,0)
 I $E(X)="^" W *7,!,"   JUMPING NOT ALLOWED ??" G EN1
"RTN","IBCEP82",24,0)
 I X="@" G:IBOLDNPI'="" DEL W *7,"??" G EN1
"RTN","IBCEP82",25,0)
 I $G(DUOUT)!$G(DTOUT)!(X="")!(Y=IBOLDNPI) G XIT
"RTN","IBCEP82",26,0)
 S IBNPI=Y
"RTN","IBCEP82",27,0)
 I '$$CHKDGT^XUSNPI(IBNPI) W !,*7,"Not a valid NPI.  Please try again.",! G EN1
"RTN","IBCEP82",28,0)
 I $$NPIUSED^IBCEP81(IBNPI) G EN1
"RTN","IBCEP82",29,0)
 S IBCHECK=1
"RTN","IBCEP82",30,0)
 I IBOLDNPI="" D ACTI
"RTN","IBCEP82",31,0)
 I IBOLDNPI'="" D:IBNPI'=IBOLDNPI INACT
"RTN","IBCEP82",32,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI,^IBA(355.93,"NPI",IBNPI,IBIEN)="",^IBA(355.93,"NPIHISTORY",IBNPI,IBIEN)=""
"RTN","IBCEP82",33,0)
 G XIT
"RTN","IBCEP82",34,0)
 ;
"RTN","IBCEP82",35,0)
ACTI ;CREATE AN ACTIVATED ENTRY IN MULTIPLE NPISTATUS FIELD
"RTN","IBCEP82",36,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",37,0)
 S DIC("DR")=".02////^S X=1;.03////^S X=IBNPI;.04////^S X=DUZ"
"RTN","IBCEP82",38,0)
 D FILE^DICN
"RTN","IBCEP82",39,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBNPI
"RTN","IBCEP82",40,0)
 Q
"RTN","IBCEP82",41,0)
 ;
"RTN","IBCEP82",42,0)
DEL ;NPI HAS BEEN DELETED
"RTN","IBCEP82",43,0)
 ;If the user deletes the NPI this subroutine will determine why it was deleted and if it was because it was found
"RTN","IBCEP82",44,0)
 ;in a false identity situation will mark it in history to never be used again.
"RTN","IBCEP82",45,0)
 S IBNPI=DIR("B")
"RTN","IBCEP82",46,0)
 K DIR
"RTN","IBCEP82",47,0)
 S DIR(0)="Y"
"RTN","IBCEP82",48,0)
 S DIR("A")="Are you sure you wish to delete this NPI"
"RTN","IBCEP82",49,0)
 S DIR("?")="You have indicated you wish to delete the NPI.  This is a second chance check."
"RTN","IBCEP82",50,0)
 D ^DIR
"RTN","IBCEP82",51,0)
 G:Y(0)="NO" XIT
"RTN","IBCEP82",52,0)
 S DIR(0)="S^E:ERROR;V:VALID",DIR("A")="Was this a Valid NPI or an NPI entered in Error"
"RTN","IBCEP82",53,0)
 S DIR("?",1)="An example of an NPI entered in error is if the entry person transposed numbers,"
"RTN","IBCEP82",54,0)
 S DIR("?",2)="or if the NPI for one provider is accidentally assigned to a different provider."
"RTN","IBCEP82",55,0)
 S DIR("?")="Enter an 'E' for Error or a 'V' for Valid."
"RTN","IBCEP82",56,0)
 D ^DIR
"RTN","IBCEP82",57,0)
 I Y="E" D COMP W !,"The NPI has been deleted.",!
"RTN","IBCEP82",58,0)
 I Y="V" S IBCHECK=2 D INACT W !,"The NPI is now inactive.",!
"RTN","IBCEP82",59,0)
 Q
"RTN","IBCEP82",60,0)
 ;
"RTN","IBCEP82",61,0)
COMP ;COMPLETELY DELETE THE NPI
"RTN","IBCEP82",62,0)
 ;This subroutine will delete the NPI from the file 355.93.
"RTN","IBCEP82",63,0)
 S OIEN=$O(^IBA(355.93,IBIEN,"NPISTATUS","C",IBOLDNPI,"A"),-1)
"RTN","IBCEP82",64,0)
 D DELNPI(IBIEN,OIEN)
"RTN","IBCEP82",65,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA),^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA)
"RTN","IBCEP82",66,0)
 S IBRB=0
"RTN","IBCEP82",67,0)
 D  ; Find the most recent status '0' (inactive) NPI entry in the list.
"RTN","IBCEP82",68,0)
 . N IBRBLST,IBRBTMP
"RTN","IBCEP82",69,0)
 . ; Don't want to roll back to the same number you are deleting.
"RTN","IBCEP82",70,0)
 . S IBRBLST(IBOLDNPI)=""
"RTN","IBCEP82",71,0)
 . S IBRBTMP="A"
"RTN","IBCEP82",72,0)
 . ; Go through each entry in reverse order
"RTN","IBCEP82",73,0)
 . F  S IBRBTMP=$O(^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP),-1) Q:'IBRBTMP  D  Q:IBRB'=0
"RTN","IBCEP82",74,0)
 .. S IBRBLST=^IBA(355.93,IBIEN,"NPISTATUS",IBRBTMP,0)
"RTN","IBCEP82",75,0)
 .. ; If this is an 'active' entry then ignore it.
"RTN","IBCEP82",76,0)
 .. I $P(IBRBLST,U,2)=1 Q
"RTN","IBCEP82",77,0)
 .. ; If this entry does not have an NPI then ignore it.
"RTN","IBCEP82",78,0)
 .. I $P(IBRBLST,U,3)="" Q
"RTN","IBCEP82",79,0)
 .. ;If this is an inactive entry then report it.
"RTN","IBCEP82",80,0)
 .. I $P(IBRBLST,U,2)=0 S IBRB=IBRBTMP Q
"RTN","IBCEP82",81,0)
 .. Q
"RTN","IBCEP82",82,0)
 . Q
"RTN","IBCEP82",83,0)
 I IBRB>0 D ROLLBACK
"RTN","IBCEP82",84,0)
 Q
"RTN","IBCEP82",85,0)
 ;
"RTN","IBCEP82",86,0)
DELNPI(IEN,OIEN) ;DELETE-INVALID removes NPI from file.
"RTN","IBCEP82",87,0)
 NEW DIE,DIK,DIC,DA,DR,D,D0,DI,DIC,DQ,X
"RTN","IBCEP82",88,0)
 NEW DP,DM,DK,DL,DIEL
"RTN","IBCEP82",89,0)
 S DIE="^IBA(355.93,",DA=IEN,DR="41.01////@"
"RTN","IBCEP82",90,0)
 D ^DIE
"RTN","IBCEP82",91,0)
 S DA(1)=IEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DA=OIEN
"RTN","IBCEP82",92,0)
 D ^DIK
"RTN","IBCEP82",93,0)
 Q
"RTN","IBCEP82",94,0)
 ;
"RTN","IBCEP82",95,0)
INACT ;INACTIVATE AN ENTRY
"RTN","IBCEP82",96,0)
 ;This subroutine makes two entries in the NPI multiple field.
"RTN","IBCEP82",97,0)
 ;One for the deactivation of the old NPI and the second
"RTN","IBCEP82",98,0)
 ;for the activation of a new NPI.
"RTN","IBCEP82",99,0)
 S DA(1)=IBIEN,DIC="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DIC(0)="L",X=$$NOW^XLFDT()
"RTN","IBCEP82",100,0)
 S DIC("DR")=".02////^S X=0;.03////^S X=IBOLDNPI;.04////^S X=DUZ"
"RTN","IBCEP82",101,0)
 D FILE^DICN
"RTN","IBCEP82",102,0)
 S ^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA(1))=""
"RTN","IBCEP82",103,0)
 K ^IBA(355.93,"NPI",IBOLDNPI,DA(1))
"RTN","IBCEP82",104,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=""
"RTN","IBCEP82",105,0)
 I $G(IBCHECK)<2 D ACTI
"RTN","IBCEP82",106,0)
 S ^IBA(355.93,"NPIHISTORY",IBNPI,DA(1))=""
"RTN","IBCEP82",107,0)
 Q
"RTN","IBCEP82",108,0)
 ;
"RTN","IBCEP82",109,0)
ROLLBACK ;Rollback or delete NPI
"RTN","IBCEP82",110,0)
 S IBRBNPI=$P(^IBA(355.93,IBIEN,"NPISTATUS",IBRB,0),U,3)
"RTN","IBCEP82",111,0)
 NEW DIE,DIK,DIC,DA,DR,D,D0,DI,DIC,DQ,X
"RTN","IBCEP82",112,0)
 NEW DP,DM,DK,DL,DIEL
"RTN","IBCEP82",113,0)
 S DA(1)=IBIEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DA=IBRB
"RTN","IBCEP82",114,0)
 D ^DIK
"RTN","IBCEP82",115,0)
 S $P(^IBA(355.93,IBIEN,0),U,14)=IBRBNPI,^IBA(355.93,"NPI",IBRBNPI,IBIEN)=""
"RTN","IBCEP82",116,0)
 Q
"RTN","IBCEP82",117,0)
 ;
"RTN","IBCEP82",118,0)
XIT ;CLEAN AND EXIT
"RTN","IBCEP82",119,0)
 Q
"RTN","IBCEP82",120,0)
 ;
"RTN","IBCEP82",121,0)
XR ;Set the primary taxonomy code cross reference for field 42
"RTN","IBCEP82",122,0)
 N ATAX S ATAX=""
"RTN","IBCEP82",123,0)
 I $D(^IBA(355.93,DA(1),"TAXONOMY","D")) D:X=1
"RTN","IBCEP82",124,0)
 . F  S ATAX=$O(^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)) Q:ATAX=""  D
"RTN","IBCEP82",125,0)
 .. K ^IBA(355.93,DA(1),"TAXONOMY","D",1,ATAX)
"RTN","IBCEP82",126,0)
 .. I ATAX'=DA S $P(^IBA(355.93,DA(1),"TAXONOMY",ATAX,0),U,2)=0,^IBA(355.93,DA(1),"TAXONOMY","D",0,ATAX)=""
"RTN","IBCEP82",127,0)
 S ^IBA(355.93,DA(1),"TAXONOMY","D",X,DA)=""
"RTN","IBCEP82",128,0)
 Q
"RTN","IBCEP82",129,0)
 ;
"RTN","IBCEP82",130,0)
KXR ;Kill primary taxonomy code cross reference for field 42
"RTN","IBCEP82",131,0)
 N K
"RTN","IBCEP82",132,0)
 F K=0,1 K ^IBA(355.93,DA(1),"TAXONOMY","D",K,DA)
"RTN","IBCEP82",133,0)
 Q
"RTN","IBCSCH")
0^9^B61198859^B74472704
"RTN","IBCSCH",1,0)
IBCSCH ;ALB/MJB - MCCR HELP ROUTINE ;03 JUN 88 15:25
"RTN","IBCSCH",2,0)
 ;;2.0;INTEGRATED BILLING;**52,80,106,124,138,51,148,137,161,245,232,287,348,349,374**;21-MAR-94;Build 16
"RTN","IBCSCH",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCSCH",4,0)
 ;
"RTN","IBCSCH",5,0)
 ;MAP TO DGCRSCH
"RTN","IBCSCH",6,0)
 ;
"RTN","IBCSCH",7,0)
 N I,C,IBSCNNZ,IBQ,IBPRNT,Z S IBSCNNZ=$$UP^XLFSTR($G(IBSCNN)),IBQ=0
"RTN","IBCSCH",8,0)
 I '$D(IBPAR) D  Q:IBQ
"RTN","IBCSCH",9,0)
 . I $F(".?1500.?HCFA.","."_$G(IBSCNNZ)_"."),$$FT^IBCEF(IBIFN)=2 S IBQ=1,IBPRNT=2 D BL24(IBIFN,0) Q
"RTN","IBCSCH",10,0)
 . I $G(IBSCNNZ)="?SC" S IBQ=1 D DISPSC(IBIFN) Q
"RTN","IBCSCH",11,0)
 . I $G(IBSCNNZ)="?INS" S IBQ=1 D INSDSPL(IBIFN) Q
"RTN","IBCSCH",12,0)
 . I $G(IBSCNNZ)="?INX" S IBQ=1 D INSDSPLX(IBIFN) Q
"RTN","IBCSCH",13,0)
 . I $G(IBSCNNZ)="?PRV" S IBQ=1 D DISPROPT(IBIFN) Q
"RTN","IBCSCH",14,0)
 . I $G(IBSCNNZ)="?CHG" S IBQ=1 D DISPCHG^IBCRBH1(IBIFN) Q
"RTN","IBCSCH",15,0)
 . I $G(IBSCNNZ)="?PRC" S IBQ=1 D DISPPRC^IBCSCH1(IBIFN) Q
"RTN","IBCSCH",16,0)
 . I $G(IBSCNNZ)="?CPT" S IBQ=1 D BCPTCHG^IBCRBH2(IBIFN) Q
"RTN","IBCSCH",17,0)
 . I $G(IBSCNNZ)="?INC" S IBQ=1 D EDIT^IBCBB(IBIFN) Q
"RTN","IBCSCH",18,0)
 . I $G(IBSCNNZ)="?CLA",$$CK0^IBCIUT1() S IBQ=1 D CLA^IBCISC(IBIFN) Q
"RTN","IBCSCH",19,0)
 . I $G(IBSCNNZ)="?MRA",$$MCRONBIL^IBEFUNC(IBIFN),$T(SCR^IBCEMVU)'="" S IBQ=1 D SCR^IBCEMVU(IBIFN) Q
"RTN","IBCSCH",20,0)
 . I $G(IBSCNNZ)="?ID" S IBQ=1 D DISPID^IBCEF74(IBIFN) Q
"RTN","IBCSCH",21,0)
 . Q
"RTN","IBCSCH",22,0)
 ;
"RTN","IBCSCH",23,0)
 S IBH("HELP")="" D ^IBCSCU,H^IBCSCU K IBH("HELP") W !,"Enter '^' to stop the display ",$S(IBV:"",1:"and edit "),"of data,"
"RTN","IBCSCH",24,0)
 W:'$D(IBPAR) " '^N' to jump to screen #N (see",!,"listing below), <RET> to continue on to the next available screen" I IBV W "." G M
"RTN","IBCSCH",25,0)
 W " or enter",!,"the field group number(s) you wish to edit using commas and dashes as",!,"delimiters.  Those groups enclosed in brackets ""[]"" are editable while those"
"RTN","IBCSCH",26,0)
 W !,"enclosed in arrows ""<>"" are not."
"RTN","IBCSCH",27,0)
 G:$D(IBPAR) M1
"RTN","IBCSCH",28,0)
M W "  Special help screens:"
"RTN","IBCSCH",29,0)
 W !,?5,"Enter '?SC' to view SC Status and Rated Disabilities."
"RTN","IBCSCH",30,0)
 W !,?5,"Enter '?INS' to view the patients insurance policies."
"RTN","IBCSCH",31,0)
 W !,?5,"Enter '?INX' to view the patients insurance policies with comments."
"RTN","IBCSCH",32,0)
 W !,?5,"Enter '?PRV' to view provider specific information."
"RTN","IBCSCH",33,0)
 W !,?5,"Enter '?PRC' to view all procedures on the bill and related data."
"RTN","IBCSCH",34,0)
 W !,?5,"Enter '?CHG' to view all items on the bill with potential charges."
"RTN","IBCSCH",35,0)
 W !,?5,"Enter '?CPT' to view all charges for selected CPT codes and bill type."
"RTN","IBCSCH",36,0)
 I $$FT^IBCEF(IBIFN)=2 W !,?5,"Enter '?1500' to view how block 24 will print on a CMS-1500."
"RTN","IBCSCH",37,0)
 W !,?5,"Enter '?INC' to execute the edits & view the bill inconsistencies."
"RTN","IBCSCH",38,0)
 I $$CK0^IBCIUT1() W !?5,"Enter '?CLA' to view the ClaimsManager options."
"RTN","IBCSCH",39,0)
 I $$MCRONBIL^IBEFUNC(IBIFN) W !?5,"Enter '?MRA' to view Medicare Remittance Advice EOB's on file."
"RTN","IBCSCH",40,0)
 W !,?5,"Enter '?ID' to view all IDs to be electronically transmitted on this claim."
"RTN","IBCSCH",41,0)
 ;
"RTN","IBCSCH",42,0)
 I +IBSR'=9 S Z="DATA GROUPS ON SCREEN "_+IBSR W ! X IBWW D @(IBSR1_IBSR) D W
"RTN","IBCSCH",43,0)
 D S W ! F I=$Y:1:20 W !
"RTN","IBCSCH",44,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to SCREEN ",+IBSR R X:DTIME Q
"RTN","IBCSCH",45,0)
M1 N I,Z S Z="DATA GROUPS ON PARAMETER SCREEN" W !! X IBWW D @(IBSR1_IBSR) D W W ! F I=$Y:1:20 W !
"RTN","IBCSCH",46,0)
 S Z="PRESS <RETURN> KEY" X IBWW W " to RETURN to PARAMETER SCREEN" R X:DTIME Q
"RTN","IBCSCH",47,0)
1 S X="DOB^Alias Name^Sex, Marital Status^Veteran Status, Eligibility^Address, Temporary Address^SC at Time of Care" Q
"RTN","IBCSCH",48,0)
2 S X="Patient Employer Name, Address^Spouse Employer Name, Address" Q
"RTN","IBCSCH",49,0)
3 S X="Payer Information^Provider Numbers^Mailing Address" Q
"RTN","IBCSCH",50,0)
4 S X="Admission Information^Discharge Information^Diagnosis Code(s)^Coding Method, Inpt Proc Code(s)^Occurrence Code(s)^Condition Code(s)^Value Code(s)" Q
"RTN","IBCSCH",51,0)
5 S X="Event Date^Outpatient Diagnosis^Outpatient Visits^Coding Method, Opt. Pro. Code(s)^Occurrence Code(s)^Condition Code(s)" Q
"RTN","IBCSCH",52,0)
6 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Bedsection, Length of Stay^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",53,0)
7 S X="Bill Type, Covered/Non-Covered Days^R.O.I., Assignment of Benefits^Statement Covers Period^Outpatient Visits^Revenue Code(s), Offset, Total^Rate Schedule(s)^Prior Payments/Claims" Q
"RTN","IBCSCH",54,0)
8 S X="Bill Remark^Form Locator 2^Form Locator 9^Form Locator 27^Form Locator 45^Form Locator 92^Form Locator 93^Tx Auth. Code" Q
"RTN","IBCSCH",55,0)
9 S X="Locally defined fields" Q
"RTN","IBCSCH",56,0)
28 S X="Bill Remark, ICN/DCN's, Tx Auth. Code, Admit Diagnosis/Source ^Providers^Force to Print^Provider ID Maintenance^Other Facility (VA/non)" Q
"RTN","IBCSCH",57,0)
H8 S X="Period Unable to Work^Admit Dx, ICN/DCN, Tx/Prior Auth. Code^Providers^Non-VA Facility^Form Locator 19^Force to Print" Q
"RTN","IBCSCH",58,0)
PAR S X="Fed Tax #, BC/BS #, MAS Svc Pointer^Bill Signer, Billing Supervisor^Security Parameters, Outpatient CPT parameters ^Remarks, Mailgroups^Agent Cashier Address/Phone" Q
"RTN","IBCSCH",59,0)
S N C,I,Z,J W !! S Z="AVAILABLE SCREENS" X IBWW
"RTN","IBCSCH",60,0)
 S X="Demographic^Employment^Payer^Inpatient Event^Outpatient Event^Inpatient Billing - General^Outpatient Billing - General^Billing - Specific^Locally Defined"
"RTN","IBCSCH",61,0)
 S C=0 F I=1:1 S J=$P(X,"^",I) Q:J=""  I '$E(IBVV,I) S C=C+1,Z="^"_I,IBW=(C#2) W:'(C#2) ?41 X IBWW S Z=$S(I?1N:" ",1:" ")_J_" Data" W Z
"RTN","IBCSCH",62,0)
 Q
"RTN","IBCSCH",63,0)
W N I,J,Z
"RTN","IBCSCH",64,0)
 F I=1:1 S J=$P(X,"^",I) Q:J=""  S Z=I,IBW=(I#2) W:'(I#2) ?42 X IBWW W " "_J
"RTN","IBCSCH",65,0)
 W:'(I-1)#2 ! Q
"RTN","IBCSCH",66,0)
 Q
"RTN","IBCSCH",67,0)
 ;IBCSCH
"RTN","IBCSCH",68,0)
 ;
"RTN","IBCSCH",69,0)
 ;
"RTN","IBCSCH",70,0)
BL24(IBIFN,IBNOSHOW) ; display block 24 of CMS-1500
"RTN","IBCSCH",71,0)
 ; IBNOSHOW = 1 for not to show error/warning text line
"RTN","IBCSCH",72,0)
 N X,Y,DIR,IBPG,IBLN,IBCOL,IBX,IBQ,IBLC,IBLIN,IBPFORM,IBD,IBC1,Z,Z0,IBXDATA,IBXSAVE,IBNXPG
"RTN","IBCSCH",73,0)
 K ^TMP("IBXSAVE",$J)
"RTN","IBCSCH",74,0)
 S IBQ=0,IBLC=9 Q:'$G(IBIFN)  K ^TMP("IBXDISP",$J)
"RTN","IBCSCH",75,0)
 ;
"RTN","IBCSCH",76,0)
 S IBLIN=$$BOX24D^IBCEF11()
"RTN","IBCSCH",77,0)
 S IBPFORM=$S($P($G(^IBE(353,2,2)),U,8):$P(^(2),U,8),1:2)
"RTN","IBCSCH",78,0)
 S IBX=$$BILLN^IBCEFG0(0,"1^99",IBLIN,+IBIFN,IBPFORM)
"RTN","IBCSCH",79,0)
 ;
"RTN","IBCSCH",80,0)
 W @IOF,!,"Example of diagnoses, procedures and charges printing on the CMS-1500"
"RTN","IBCSCH",81,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",82,0)
 ;
"RTN","IBCSCH",83,0)
 ; box 19 - lines 36-37
"RTN","IBCSCH",84,0)
 F Z=+IBLIN,IBLIN+1 I $D(^TMP("IBXDISP",$J,1,Z)) S Z0=$G(^TMP("IBXDISP",$J,1,Z,+$O(^TMP("IBXDISP",$J,1,Z,20),-1))) I Z0'="" S:Z=+IBLIN Z0="BOX 19 DATA: "_Z0 W !,Z0
"RTN","IBCSCH",85,0)
 ;
"RTN","IBCSCH",86,0)
 ; box 21 - lines 39-41
"RTN","IBCSCH",87,0)
 W !,"21. diagnosis"
"RTN","IBCSCH",88,0)
 I $D(^TMP("IBXDISP",$J,2,IBLIN+3)) W ?16,"(1st 4 only)"
"RTN","IBCSCH",89,0)
 W !,?5,"1. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,3)),?25,"3. ",$G(^TMP("IBXDISP",$J,1,IBLIN+3,30))
"RTN","IBCSCH",90,0)
 W !,?5,"2. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,3)),?25,"4. ",$G(^TMP("IBXDISP",$J,1,IBLIN+5,30))
"RTN","IBCSCH",91,0)
 ;
"RTN","IBCSCH",92,0)
 ; box 24 - lines 44-55
"RTN","IBCSCH",93,0)
 D PG
"RTN","IBCSCH",94,0)
 S IBPG=0 F  S IBPG=$O(^TMP("IBXDISP",$J,IBPG)) Q:'IBPG  D  Q:IBQ
"RTN","IBCSCH",95,0)
 . I '$D(^TMP("IBXDISP",$J,IBPG,IBLIN+9)) Q   ; no line's on this page
"RTN","IBCSCH",96,0)
 . F IBLN=IBLIN+8:1:+$P(IBLIN,U,2) S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,0)) Q:'IBCOL&'$O(^TMP("IBXDISP",$J,IBPG,IBLN))  S IBLC=IBLC+1 I IBCOL D  Q:IBQ
"RTN","IBCSCH",97,0)
 .. S IBCOL=0,IBC1=1 F  S IBCOL=$O(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL)) Q:'IBCOL  I $TR($G(^(IBCOL))," ")'="" D
"RTN","IBCSCH",98,0)
 ... W:IBC1 ! S IBC1=0 W ?(IBCOL-1),$G(^TMP("IBXDISP",$J,IBPG,IBLN,IBCOL))
"RTN","IBCSCH",99,0)
 . S IBNXPG=$O(^TMP("IBXDISP",$J,IBPG))   ; next page
"RTN","IBCSCH",100,0)
 . I 'IBQ,IBNXPG,$D(^TMP("IBXDISP",$J,IBNXPG,IBLIN+9)) S IBLIN=$$BOX24D^IBCEF11(),IBQ=$$PAUSE^IBCSCH1(IBLC) Q:IBQ  S IBLC=9 W @IOF D PG
"RTN","IBCSCH",101,0)
 . Q
"RTN","IBCSCH",102,0)
 ;
"RTN","IBCSCH",103,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",104,0)
 I 'IBPG,'IBQ S IBQ=$$PAUSE^IBCSCH1(IBLC)
"RTN","IBCSCH",105,0)
 K ^TMP("IBXDISP",$J),^TMP("IBXSAVE",$J)
"RTN","IBCSCH",106,0)
 Q
"RTN","IBCSCH",107,0)
 ;
"RTN","IBCSCH",108,0)
PG ; Display box 24 letters at top of charge list
"RTN","IBCSCH",109,0)
 W !,"24. A             B  C    D                 E         F     G H I    J"
"RTN","IBCSCH",110,0)
 W !,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",111,0)
 Q
"RTN","IBCSCH",112,0)
 ;
"RTN","IBCSCH",113,0)
INSDSPL(IBIFN) ; Display patient's policies
"RTN","IBCSCH",114,0)
 N DIR,X,Y,IBX,DFN,IBDTIN,IBCOVEXT W @IOF
"RTN","IBCSCH",115,0)
 S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDTIN=$P(IBX,U,3),IBCOVEXT=1
"RTN","IBCSCH",116,0)
 I +DFN D DISPDT^IBCNS W ! S DIR("A")="Press RETURN to continue",DIR(0)="E" D ^DIR K DIR
"RTN","IBCSCH",117,0)
 Q
"RTN","IBCSCH",118,0)
 ;
"RTN","IBCSCH",119,0)
INSDSPLX(IBIFN) ; Display patient's policies extended (?INX)
"RTN","IBCSCH",120,0)
 N IBX,DFN,IBDATE S IBX=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IBX,U,2),IBDATE=$P(IBX,U,3) D DISP^IBCNS3(DFN,IBDATE,123)
"RTN","IBCSCH",121,0)
 Q
"RTN","IBCSCH",122,0)
 ;
"RTN","IBCSCH",123,0)
DISPSC(IBIFN) ; display patients SC Status and Rated Disabilities
"RTN","IBCSCH",124,0)
 N IB0,DFN,IBSC,IBX,VAEL,VAERR
"RTN","IBCSCH",125,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),DFN=$P(IB0,U,2),IBSC=$P(IB0,U,18)
"RTN","IBCSCH",126,0)
 W !,@IOF,!,"SC Status and Rated Disabilities for ",$P($G(^DPT(+$G(DFN),0)),U,1)
"RTN","IBCSCH",127,0)
 W !,"--------------------------------------------------------------------------------",!
"RTN","IBCSCH",128,0)
 I +$G(IBIFN) W !," SC At Time Of Care: ",$S(IBSC=1:"Yes",IBSC=0:"No",1:"")
"RTN","IBCSCH",129,0)
 I +$G(DFN) D ELIG^VADPT D DIS^DGRPDB
"RTN","IBCSCH",130,0)
 W !!,"--------------------------------------------------------------------------------"
"RTN","IBCSCH",131,0)
 S IBX=$$PAUSE^IBCSCH1(19)
"RTN","IBCSCH",132,0)
 Q
"RTN","IBCSCH",133,0)
 ;
"RTN","IBCSCH",134,0)
DISPROPT(IBIFN) ; prompt for VA or Non-VA provider.
"RTN","IBCSCH",135,0)
 N X,Y,DIR
"RTN","IBCSCH",136,0)
 S DIR(0)="SAO^V:VA PROVIDER;N:NON-VA PROVIDER",DIR("A")="(V)A or (N)on-VA Provider: ",DIR("B")="V"
"RTN","IBCSCH",137,0)
 D ^DIR
"RTN","IBCSCH",138,0)
 I Y="V" D DISPPRV^IBCSCH2(IBIFN) Q
"RTN","IBCSCH",139,0)
 I Y="N" D DISPNVA^IBCSCH2(IBIFN)
"RTN","IBCSCH",140,0)
 Q
"RTN","IBCSCH",141,0)
 ;
"RTN","IBCSCH2")
0^10^B35721054^n/a
"RTN","IBCSCH2",1,0)
IBCSCH2 ;ALB/DLS - Continuation of routine IBCSCH ;12 JUN 2007
"RTN","IBCSCH2",2,0)
 ;;2.0;INTEGRATED BILLING;**374**;21-MAR-94;Build 16
"RTN","IBCSCH2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCSCH2",4,0)
 Q
"RTN","IBCSCH2",5,0)
 ;
"RTN","IBCSCH2",6,0)
DISPPRV(IBIFN) ; Display provider information: interactive - user selects provider
"RTN","IBCSCH2",7,0)
 N DIC,DA,X,Y,IBI,IBJ,IBW,IBPRV,IBPX,IBDT,IBARR,IBNPISTR,IBNPI,IBPRVTAX,IBTAXFLG
"RTN","IBCSCH2",8,0)
 N IBPRVDAT,IBTAXID,IBTAXEFF,IBTAXTRM,IBTAXX12
"RTN","IBCSCH2",9,0)
 W !!,"This is a display of provider specific information."
"RTN","IBCSCH2",10,0)
 D SPECIFIC^IBCEU5(IBIFN)
"RTN","IBCSCH2",11,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH2",12,0)
 ;
"RTN","IBCSCH2",13,0)
 F IBI=1:1 W ! S DIC("A")="Select PROVIDER NAME: ",DIC="^VA(200,",DIC(0)="AEQM" D ^DIC Q:Y'>0  D
"RTN","IBCSCH2",14,0)
 . S IBPRV=Y
"RTN","IBCSCH2",15,0)
 . W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",16,0)
 . S IBPX=$$ESBLOCK^XUSESIG1(+IBPRV)
"RTN","IBCSCH2",17,0)
 . W !," Signature Name: ",$P(IBPX,U,1)
"RTN","IBCSCH2",18,0)
 . W !,"Signature Title: ",$P(IBPX,U,3)
"RTN","IBCSCH2",19,0)
 . W !,"         Degree: ",$P(IBPX,U,2)
"RTN","IBCSCH2",20,0)
 . ;
"RTN","IBCSCH2",21,0)
 . ; PRXM/DLS - Patch 374. Adding NPI to Signature information.
"RTN","IBCSCH2",22,0)
 . S IBNPISTR=$$NPI^XUSNPI("Individual_ID",+IBPRV)                               ; Get NPI information.
"RTN","IBCSCH2",23,0)
 . S IBNPI=$P(IBNPISTR,U)                                                        ; Get NPI.
"RTN","IBCSCH2",24,0)
 . W !,"            NPI: ",$S(IBNPI>0:IBNPI,1:"")                                ; Write NPI.
"RTN","IBCSCH2",25,0)
 . ;
"RTN","IBCSCH2",26,0)
 . S IBPX=$$PRVLIC^IBCU1(+IBPRV,IBDT,.IBARR)                                     ; Get License Info.
"RTN","IBCSCH2",27,0)
 . W !!,"     License(s): " D
"RTN","IBCSCH2",28,0)
 . . I IBPX'>0 W "None Active on ",$$FMTE^XLFDT(IBDT,2) Q
"RTN","IBCSCH2",29,0)
 . . S IBJ=0,IBW=0 F  S IBJ=$O(IBARR(IBJ)) Q:'IBJ  D
"RTN","IBCSCH2",30,0)
 . . . S IBPX=IBARR(IBJ),IBPX=$P($G(^DIC(5,+IBPX,0)),U,2)_": "_$P(IBPX,U,2)
"RTN","IBCSCH2",31,0)
 . . . I (IBW+$L(IBPX))>61 W !,?17 S IBW=0
"RTN","IBCSCH2",32,0)
 . . . W IBPX,"  " S IBW=IBW+$L(IBPX)+2
"RTN","IBCSCH2",33,0)
 . ;
"RTN","IBCSCH2",34,0)
 . ; PRXM/DLS - Display Person Class/Taxonomy Information.
"RTN","IBCSCH2",35,0)
 . S IBTAXFLG=0                                                                  ; Init to 0, set to 1 if Person Class info found.
"RTN","IBCSCH2",36,0)
 . S IBPRVTAX=0                                                                  ; Loop through prov's Person Class entries.
"RTN","IBCSCH2",37,0)
 . F  S IBPRVTAX=$O(^VA(200,+IBPRV,"USC1",IBPRVTAX)) Q:'IBPRVTAX  D
"RTN","IBCSCH2",38,0)
 . . ; Get Basic Information
"RTN","IBCSCH2",39,0)
 . . S IBTAXID=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",.01,"I") Q:IBTAXID=""   ; Person Class IEN.
"RTN","IBCSCH2",40,0)
 . . S IBTAXEFF=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",2,"I")                 ; Person Class Eff Date.
"RTN","IBCSCH2",41,0)
 . . S IBTAXTRM=$$GET1^DIQ(200.05,IBPRVTAX_","_+IBPRV_",",3,"I") ;I IBTAXTRM=""   ; Person Class Term Date.
"RTN","IBCSCH2",42,0)
 . . I IBTAXTRM="" S IBTAXTRM=9999999
"RTN","IBCSCH2",43,0)
 . . ; See if claim beginning service date falls within Eff date range. If so, proceed.
"RTN","IBCSCH2",44,0)
 . . I (IBTAXEFF'>IBDT),(IBTAXTRM>IBDT) D
"RTN","IBCSCH2",45,0)
 . . . S IBTAXFLG=1                                                              ; A Person Class found, set flag to 1.
"RTN","IBCSCH2",46,0)
 . . . ; Get Detailed Information and Display.
"RTN","IBCSCH2",47,0)
 . . . S IBPX=$$IEN2DATA^XUA4A72(IBTAXID)                                        ; Person Class Details.
"RTN","IBCSCH2",48,0)
 . . . S IBTAXX12=$$GET1^DIQ(8932.1,IBTAXID_",",6)                               ; Get X12 Code.
"RTN","IBCSCH2",49,0)
 . . . W !
"RTN","IBCSCH2",50,0)
 . . . W !,"   Person Class: ",$P(IBPX,U,6)                                      ; Display Person Class Name.
"RTN","IBCSCH2",51,0)
 . . . W !,"  PROVIDER TYPE: ",$P(IBPX,U)                                        ; Display Provider Type.
"RTN","IBCSCH2",52,0)
 . . . W !," CLASSIFICATION: ",$P(IBPX,U,2)                                      ; Display Classification.
"RTN","IBCSCH2",53,0)
 . . . W !," SPECIALIZATION: ",$P(IBPX,U,3)                                      ; Display Specialization.
"RTN","IBCSCH2",54,0)
 . . . W !,"       TAXONOMY: ",IBTAXX12,$S(IBTAXX12'="":" ("_IBTAXID_")",1:"")   ; Display X12 Code and Internal Code (IEN).
"RTN","IBCSCH2",55,0)
 . . . W !,"      EFFECTIVE: ",$$FMTE^XLFDT(IBTAXEFF,2)                          ; Display EFF Date.
"RTN","IBCSCH2",56,0)
 . . . I IBTAXTRM'=9999999 W " - ",$$FMTE^XLFDT(IBTAXTRM,2)                      ; Display TRM Date, if it exists.
"RTN","IBCSCH2",57,0)
 . ; If no Person Class entries exists for this Provider, notate it.
"RTN","IBCSCH2",58,0)
 . I 'IBTAXFLG W !!,"   Person Class: None Active on ",$$FMTE^XLFDT(IBDT,2)
"RTN","IBCSCH2",59,0)
 . S IBPX=$$PRVTYP^IBCRU6(+IBPRV,+IBDT)
"RTN","IBCSCH2",60,0)
 . W !!,"RC Provider Group: ",$S(+IBPX:$P(IBPX,U,3)_", "_$P(IBPX,U,5)_"%",1:"None")
"RTN","IBCSCH2",61,0)
 . W !,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",62,0)
 Q
"RTN","IBCSCH2",63,0)
 ;
"RTN","IBCSCH2",64,0)
DISPNVA(IBIFN) ; Display Non-VA individual provider information.
"RTN","IBCSCH2",65,0)
 N IBDT,IBI,IBNVFLG,IBNVID,IBNVTX,IBNVTX2,IBNVTXID,IBNVSL,X,Y,DIC,DA,IBTAXX12,IBPX
"RTN","IBCSCH2",66,0)
 S IBDT=+$G(^DGCR(399,+$G(IBIFN),"U")) I 'IBDT S IBDT=DT
"RTN","IBCSCH2",67,0)
 ; Select Non-VA Provider
"RTN","IBCSCH2",68,0)
 F IBI=1:1 W ! S DIC("A")="Select NON-VA PROVIDER NAME: ",DIC="^IBA(355.93,",DIC(0)="AEQM",DIC("S")="I $P(^(0),U,2)=2" D ^DIC Q:Y'>0  D
"RTN","IBCSCH2",69,0)
 . S IBNVID=+Y W !!,$TR($J(" ",IOM)," ","-")
"RTN","IBCSCH2",70,0)
 . W !," Signature Name: ",$$GET1^DIQ(355.93,IBNVID_",",.01)
"RTN","IBCSCH2",71,0)
 . W !,"            NPI: ",$$GET1^DIQ(355.93,IBNVID_",",41.01)
"RTN","IBCSCH2",72,0)
 . W !
"RTN","IBCSCH2",73,0)
 . S IBNVSL=$$GET1^DIQ(355.93,IBNVID_",",.12)                                        ; Get and Display License info.
"RTN","IBCSCH2",74,0)
 . W !,"     License(s): ",$S(IBNVSL'="":IBNVSL,1:"None Active on "_$$FMTE^XLFDT(IBDT,2))
"RTN","IBCSCH2",75,0)
 . W !
"RTN","IBCSCH2",76,0)
 . S IBNVTX=""
"RTN","IBCSCH2",77,0)
 . S IBNVFLG=0
"RTN","IBCSCH2",78,0)
 . F  S IBNVTX=$O(^IBA(355.93,IBNVID,"TAXONOMY","D",IBNVTX),-1) Q:IBNVTX=""  D       ; Loop through prov's Person Class X-Ref.
"RTN","IBCSCH2",79,0)
 . . S IBNVTX2=""
"RTN","IBCSCH2",80,0)
 . . F  S IBNVTX2=$O(^IBA(355.93,IBNVID,"TAXONOMY","D",IBNVTX,IBNVTX2)) Q:'IBNVTX2  D
"RTN","IBCSCH2",81,0)
 . . . I $$GET1^DIQ(355.9342,IBNVTX2_","_IBNVID_",",.03,"I")="A" D                   ; Proceed if the Person Class is Active.
"RTN","IBCSCH2",82,0)
 . . . . S IBNVFLG=1
"RTN","IBCSCH2",83,0)
 . . . . S IBNVTXID=$$GET1^DIQ(355.9342,IBNVTX2_","_IBNVID_",",.01,"I")
"RTN","IBCSCH2",84,0)
 . . . . ; Get Detailed Information and Display.
"RTN","IBCSCH2",85,0)
 . . . . S IBPX=$$IEN2DATA^XUA4A72(IBNVTXID)                                         ; Person Class Details.
"RTN","IBCSCH2",86,0)
 . . . . S IBTAXX12=$$GET1^DIQ(8932.1,IBNVTXID_",",6)                                ; Get X12 Code.
"RTN","IBCSCH2",87,0)
 . . . . W !,"   Person Class: ",$P(IBPX,U,6)                                        ; Display Person Class Name.
"RTN","IBCSCH2",88,0)
 . . . . W $S($G(IBNVTX)=1:" (Primary)",1:" (Secondary)")
"RTN","IBCSCH2",89,0)
 . . . . W !,"  PROVIDER TYPE: ",$P(IBPX,U)                                          ; Display Provider Type.
"RTN","IBCSCH2",90,0)
 . . . . W !," CLASSIFICATION: ",$P(IBPX,U,2)                                        ; Display Classification.
"RTN","IBCSCH2",91,0)
 . . . . W !," SPECIALIZATION: ",$P(IBPX,U,3)                                        ; Display Specialization.
"RTN","IBCSCH2",92,0)
 . . . . W !,"       TAXONOMY: ",IBTAXX12,$S(IBTAXX12'="":" ("_IBNVTXID_")",1:""),!  ; Display X12 Code and Internal Code (IEN).
"RTN","IBCSCH2",93,0)
 . I 'IBNVFLG W !,"   Person Class: None Active on ",$$FMTE^XLFDT(IBDT,2),!
"RTN","IBCSCH2",94,0)
 . W $TR($J(" ",IOM)," ","-"),!
"RTN","IBCSCH2",95,0)
 Q
"RTN","IBY374PO")
0^12^B2927425^n/a
"RTN","IBY374PO",1,0)
IBY374PO ;PRXM/CMW - Post install routine for patch 374 ; 10 May 2007  9:41 AM
"RTN","IBY374PO",2,0)
 ;;2.0;INTEGRATED BILLING;**374**;21-MAR-94;Build 16
"RTN","IBY374PO",3,0)
 ;
"RTN","IBY374PO",4,0)
 ; Call at tags only
"RTN","IBY374PO",5,0)
 Q
"RTN","IBY374PO",6,0)
 ; This routine will clean up entries in the file with NPIs delete status (2)
"RTN","IBY374PO",7,0)
 ;
"RTN","IBY374PO",8,0)
EN ; Post Install Routine primary entry point
"RTN","IBY374PO",9,0)
 ;
"RTN","IBY374PO",10,0)
 D DEL
"RTN","IBY374PO",11,0)
 D CLEAN
"RTN","IBY374PO",12,0)
 Q
"RTN","IBY374PO",13,0)
 ;
"RTN","IBY374PO",14,0)
DEL ; Look for NPI with delete status of "2"
"RTN","IBY374PO",15,0)
 N IBIEN,STA,DA,IBOLDNPI
"RTN","IBY374PO",16,0)
 S IBIEN=0
"RTN","IBY374PO",17,0)
 F  S IBIEN=$O(^IBA(355.93,IBIEN)) Q:'IBIEN  D
"RTN","IBY374PO",18,0)
 . S DA="A"
"RTN","IBY374PO",19,0)
 . ; Loop through deleted NPIs (Status "2")
"RTN","IBY374PO",20,0)
 . S STA=2
"RTN","IBY374PO",21,0)
 . F  S DA=$O(^IBA(355.93,IBIEN,"NPISTATUS","NPISTATUS",STA,DA),-1) Q:'DA  D
"RTN","IBY374PO",22,0)
 . . S IBOLDNPI=$P(^IBA(355.93,IBIEN,"NPISTATUS",DA,0),U,3)
"RTN","IBY374PO",23,0)
 . . D COMP
"RTN","IBY374PO",24,0)
 Q
"RTN","IBY374PO",25,0)
 ;
"RTN","IBY374PO",26,0)
COMP ;COMPLETELY DELETE THE NPI
"RTN","IBY374PO",27,0)
 ;If NPI has status of "2" remove all entries related to this NPI.
"RTN","IBY374PO",28,0)
 N OIEN
"RTN","IBY374PO",29,0)
 S OIEN="A"
"RTN","IBY374PO",30,0)
 F  S OIEN=$O(^IBA(355.93,IBIEN,"NPISTATUS","C",IBOLDNPI,OIEN),-1) Q:'OIEN  D
"RTN","IBY374PO",31,0)
 . NEW DIE,DIK,DIC,DA,DR,D,D0,DI,DIC,DQ,X
"RTN","IBY374PO",32,0)
 . NEW DP,DM,DK,DL,DIEL
"RTN","IBY374PO",33,0)
 . S DA(1)=IBIEN,DIK="^IBA(355.93,"_DA(1)_",""NPISTATUS"",",DA=OIEN
"RTN","IBY374PO",34,0)
 . D ^DIK
"RTN","IBY374PO",35,0)
 . ; kill 41.01 references
"RTN","IBY374PO",36,0)
 . K ^IBA(355.93,"NPI",IBOLDNPI,DA),^IBA(355.93,"NPIHISTORY",IBOLDNPI,DA)
"RTN","IBY374PO",37,0)
 Q
"RTN","IBY374PO",38,0)
 ;
"RTN","IBY374PO",39,0)
CLEAN ; Clean up ^IBA(355.93,IEN,"NPISTATUS",0) if there are no multiples in the sub-file.
"RTN","IBY374PO",40,0)
 N IBIEN
"RTN","IBY374PO",41,0)
 S IBIEN=0
"RTN","IBY374PO",42,0)
 F  S IBIEN=$O(^IBA(355.93,IBIEN)) Q:'IBIEN  D
"RTN","IBY374PO",43,0)
 . Q:$G(^IBA(355.93,IBIEN,"NPISTATUS",0))=""
"RTN","IBY374PO",44,0)
 . I +$P($G(^IBA(355.93,IBIEN,"NPISTATUS",0)),U,4)=0 D
"RTN","IBY374PO",45,0)
 . . K ^IBA(355.93,IBIEN,"NPISTATUS",0)
"RTN","IBY374PO",46,0)
 Q
"RTN","IBY374PR")
0^11^B111237^n/a
"RTN","IBY374PR",1,0)
IBY374PR ;PRXM/CMW - Pre install routine for  patch 374 ; 10 May 2007  9:41 AM
"RTN","IBY374PR",2,0)
 ;;2.0;INTEGRATED BILLING;**374**;21-MAR-94;Build 16
"RTN","IBY374PR",3,0)
 ;
"RTN","IBY374PR",4,0)
 ; Call at tags only
"RTN","IBY374PR",5,0)
 Q
"RTN","IBY374PR",6,0)
 ; This routine will clean up entries in the file with NPIs delete status (2)
"RTN","IBY374PR",7,0)
 ;
"RTN","IBY374PR",8,0)
EN ; PRE Install Routine primary entry point
"RTN","IBY374PR",9,0)
 ; Delete NPI EFFECTIVE DATE; STATUS codes fields
"RTN","IBY374PR",10,0)
 ; Status codes will be reloaded during install of patch 374
"RTN","IBY374PR",11,0)
 S DIK="^DD(355.9301,",DA(1)=355.9301,DA=.02 D ^DIK
"RTN","IBY374PR",12,0)
 ;
"RTN","IBY374PR",13,0)
 Q
"UP",355.93,355.9301,-1)
355.93^NPISTATUS
"UP",355.93,355.9301,0)
355.9301
"VER")
8.0^22.0
"^DD",355.93,355.9301,.02,0)
STATUS^S^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",355.93,355.9301,.02,1,0)
^.1
"^DD",355.93,355.9301,.02,1,1,0)
355.9301^NPISTATUS
"^DD",355.93,355.9301,.02,1,1,1)
S ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)=""
"^DD",355.93,355.9301,.02,1,1,2)
K ^IBA(355.93,DA(1),"NPISTATUS","NPISTATUS",$E(X,1,30),DA)
"^DD",355.93,355.9301,.02,1,1,"%D",0)
^^1^1^3061218^
"^DD",355.93,355.9301,.02,1,1,"%D",1,0)
This cross reference is for identifying active, inactive, or deleted NPIs.
"^DD",355.93,355.9301,.02,1,1,"DT")
3061218
"^DD",355.93,355.9301,.02,3)
Enter a 1 for 'ACTIVE', 0 for 'INACTIVE'
"^DD",355.93,355.9301,.02,21,0)
^.001^4^4^3070511^^^^
"^DD",355.93,355.9301,.02,21,1,0)
The Status of an NPI is either 'ACTIVE' or 'INACTIVE'.
"^DD",355.93,355.9301,.02,21,2,0)
If 'ACTIVE', then the NPI will be accessible by end-users to document a 
"^DD",355.93,355.9301,.02,21,3,0)
particular provider. If 'INACTIVE', then the NPI will only be accessible 
"^DD",355.93,355.9301,.02,21,4,0)
by the application to display legacy data.
"^DD",355.93,355.9301,.02,"DT")
3061218
"BLD",6857,6)
^343
**END**
**END**
