KIDS Distribution saved on Dec 06, 2005@16:51:16
ENROLLMENT VISTA CHANGES EARLY RELEASE (12/6/05)
**KIDS**:DG*5.3*672^IVM*2.0*109^EAS*1.0*62^SD*5.3*451^

**INSTALL NAME**
DG*5.3*672
"BLD",6347,0)
DG*5.3*672^REGISTRATION^0^3051206^y
"BLD",6347,4,0)
^9.64PA^27.11^2
"BLD",6347,4,2,0)
2
"BLD",6347,4,2,2,0)
^9.641^2^1
"BLD",6347,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",6347,4,2,2,2,1,0)
^9.6411^.3603^2
"BLD",6347,4,2,2,2,1,.3602,0)
MILITARY DISABILITY RETIREMENT
"BLD",6347,4,2,2,2,1,.3603,0)
DISCHARGE DUE TO DISABILITY
"BLD",6347,4,2,222)
y^n^p^^^^n^^n
"BLD",6347,4,2,224)

"BLD",6347,4,27.11,0)
27.11
"BLD",6347,4,27.11,2,0)
^9.641^27.11^1
"BLD",6347,4,27.11,2,27.11,0)
PATIENT ENROLLMENT  (File-top level)
"BLD",6347,4,27.11,2,27.11,1,0)
^9.6411^50.2^1
"BLD",6347,4,27.11,2,27.11,1,50.2,0)
DISCHARGED DUE TO DISABILITY
"BLD",6347,4,27.11,222)
y^n^p^^^^n^^n
"BLD",6347,4,27.11,224)

"BLD",6347,4,"APDD",2,2)

"BLD",6347,4,"APDD",2,2,.3602)

"BLD",6347,4,"APDD",2,2,.3603)

"BLD",6347,4,"APDD",27.11,27.11)

"BLD",6347,4,"APDD",27.11,27.11,50.2)

"BLD",6347,4,"B",2,2)

"BLD",6347,4,"B",27.11,27.11)

"BLD",6347,"ABNS",0)
^9.66A^^
"BLD",6347,"ABPKG")
y^n
"BLD",6347,"INI")
PRE^DG53672E
"BLD",6347,"INIT")
QUE^DG53672C
"BLD",6347,"KRN",0)
^9.67PA^8989.52^19
"BLD",6347,"KRN",.4,0)
.4
"BLD",6347,"KRN",.401,0)
.401
"BLD",6347,"KRN",.402,0)
.402
"BLD",6347,"KRN",.402,"NM",0)
^9.68A^^
"BLD",6347,"KRN",.403,0)
.403
"BLD",6347,"KRN",.5,0)
.5
"BLD",6347,"KRN",.84,0)
.84
"BLD",6347,"KRN",3.6,0)
3.6
"BLD",6347,"KRN",3.8,0)
3.8
"BLD",6347,"KRN",9.2,0)
9.2
"BLD",6347,"KRN",9.8,0)
9.8
"BLD",6347,"KRN",9.8,"NM",0)
^9.68A^30^25
"BLD",6347,"KRN",9.8,"NM",1,0)
DG53672C^^0^B7457981
"BLD",6347,"KRN",9.8,"NM",2,0)
DG53672D^^0^B16608793
"BLD",6347,"KRN",9.8,"NM",3,0)
DG53672E^^0^B46138376
"BLD",6347,"KRN",9.8,"NM",5,0)
DG53672R^^0^B13802911
"BLD",6347,"KRN",9.8,"NM",6,0)
DGENA^^0^B17884165
"BLD",6347,"KRN",9.8,"NM",7,0)
DGENA1A^^0^B13128537
"BLD",6347,"KRN",9.8,"NM",9,0)
DGENELA4^^0^B43140907
"BLD",6347,"KRN",9.8,"NM",10,0)
DGENL1^^0^B60652220
"BLD",6347,"KRN",9.8,"NM",11,0)
DGENL2^^0^B13612542
"BLD",6347,"KRN",9.8,"NM",12,0)
DGENU^^0^B37061085
"BLD",6347,"KRN",9.8,"NM",13,0)
DGLOCK^^0^B28148924
"BLD",6347,"KRN",9.8,"NM",14,0)
DGMTR^^0^B52342818
"BLD",6347,"KRN",9.8,"NM",15,0)
DGENUPL2^^0^B61657350
"BLD",6347,"KRN",9.8,"NM",16,0)
DGRP6^^0^B21696130
"BLD",6347,"KRN",9.8,"NM",17,0)
DGRPE^^0^B49313400
"BLD",6347,"KRN",9.8,"NM",18,0)
DGRPV^^0^B17077361
"BLD",6347,"KRN",9.8,"NM",19,0)
DGRPU^^0^B61271859
"BLD",6347,"KRN",9.8,"NM",21,0)
DGENELA1^^0^B76882824
"BLD",6347,"KRN",9.8,"NM",22,0)
DGENELA^^0^B24017259
"BLD",6347,"KRN",9.8,"NM",23,0)
DGENEGT1^^0^B56378610
"BLD",6347,"KRN",9.8,"NM",24,0)
DGENUPLA^^0^B35703117
"BLD",6347,"KRN",9.8,"NM",26,0)
DGENA6^^0^B20843063
"BLD",6347,"KRN",9.8,"NM",28,0)
VAFHLZE1^^0^B24942395
"BLD",6347,"KRN",9.8,"NM",29,0)
DGENUPL^^0^B28511656
"BLD",6347,"KRN",9.8,"NM",30,0)
DGEEREIM^^0^B8913958
"BLD",6347,"KRN",9.8,"NM","B","DG53672C",1)

"BLD",6347,"KRN",9.8,"NM","B","DG53672D",2)

"BLD",6347,"KRN",9.8,"NM","B","DG53672E",3)

"BLD",6347,"KRN",9.8,"NM","B","DG53672R",5)

"BLD",6347,"KRN",9.8,"NM","B","DGEEREIM",30)

"BLD",6347,"KRN",9.8,"NM","B","DGENA",6)

"BLD",6347,"KRN",9.8,"NM","B","DGENA1A",7)

"BLD",6347,"KRN",9.8,"NM","B","DGENA6",26)

"BLD",6347,"KRN",9.8,"NM","B","DGENEGT1",23)

"BLD",6347,"KRN",9.8,"NM","B","DGENELA",22)

"BLD",6347,"KRN",9.8,"NM","B","DGENELA1",21)

"BLD",6347,"KRN",9.8,"NM","B","DGENELA4",9)

"BLD",6347,"KRN",9.8,"NM","B","DGENL1",10)

"BLD",6347,"KRN",9.8,"NM","B","DGENL2",11)

"BLD",6347,"KRN",9.8,"NM","B","DGENU",12)

"BLD",6347,"KRN",9.8,"NM","B","DGENUPL",29)

"BLD",6347,"KRN",9.8,"NM","B","DGENUPL2",15)

"BLD",6347,"KRN",9.8,"NM","B","DGENUPLA",24)

"BLD",6347,"KRN",9.8,"NM","B","DGLOCK",13)

"BLD",6347,"KRN",9.8,"NM","B","DGMTR",14)

"BLD",6347,"KRN",9.8,"NM","B","DGRP6",16)

"BLD",6347,"KRN",9.8,"NM","B","DGRPE",17)

"BLD",6347,"KRN",9.8,"NM","B","DGRPU",19)

"BLD",6347,"KRN",9.8,"NM","B","DGRPV",18)

"BLD",6347,"KRN",9.8,"NM","B","VAFHLZE1",28)

"BLD",6347,"KRN",19,0)
19
"BLD",6347,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",6347,"KRN",19,"NM",1,0)
DG REIMBURSABLE PRIM EC RPT^^0
"BLD",6347,"KRN",19,"NM",2,0)
DG SUPERVISOR MENU^^2
"BLD",6347,"KRN",19,"NM","B","DG REIMBURSABLE PRIM EC RPT",1)

"BLD",6347,"KRN",19,"NM","B","DG SUPERVISOR MENU",2)

"BLD",6347,"KRN",19.1,0)
19.1
"BLD",6347,"KRN",101,0)
101
"BLD",6347,"KRN",409.61,0)
409.61
"BLD",6347,"KRN",771,0)
771
"BLD",6347,"KRN",870,0)
870
"BLD",6347,"KRN",8989.51,0)
8989.51
"BLD",6347,"KRN",8989.52,0)
8989.52
"BLD",6347,"KRN",8994,0)
8994
"BLD",6347,"KRN","B",.4,.4)

"BLD",6347,"KRN","B",.401,.401)

"BLD",6347,"KRN","B",.402,.402)

"BLD",6347,"KRN","B",.403,.403)

"BLD",6347,"KRN","B",.5,.5)

"BLD",6347,"KRN","B",.84,.84)

"BLD",6347,"KRN","B",3.6,3.6)

"BLD",6347,"KRN","B",3.8,3.8)

"BLD",6347,"KRN","B",9.2,9.2)

"BLD",6347,"KRN","B",9.8,9.8)

"BLD",6347,"KRN","B",19,19)

"BLD",6347,"KRN","B",19.1,19.1)

"BLD",6347,"KRN","B",101,101)

"BLD",6347,"KRN","B",409.61,409.61)

"BLD",6347,"KRN","B",771,771)

"BLD",6347,"KRN","B",870,870)

"BLD",6347,"KRN","B",8989.51,8989.51)

"BLD",6347,"KRN","B",8989.52,8989.52)

"BLD",6347,"KRN","B",8994,8994)

"BLD",6347,"QUES",0)
^9.62^^
"BLD",6347,"REQB",0)
^9.611^6^5
"BLD",6347,"REQB",1,0)
DG*5.3*564^2
"BLD",6347,"REQB",2,0)
DG*5.3*624^2
"BLD",6347,"REQB",3,0)
DG*5.3*631^2
"BLD",6347,"REQB",5,0)
DG*5.3*677^2
"BLD",6347,"REQB",6,0)
DG*5.3*675^2
"BLD",6347,"REQB","B","DG*5.3*564",1)

"BLD",6347,"REQB","B","DG*5.3*624",2)

"BLD",6347,"REQB","B","DG*5.3*631",3)

"BLD",6347,"REQB","B","DG*5.3*675",6)

"BLD",6347,"REQB","B","DG*5.3*677",5)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^n^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.3602)

"FIA",2,2,.3603)

"FIA",27.11)
PATIENT ENROLLMENT
"FIA",27.11,0)
^DGEN(27.11,
"FIA",27.11,0,0)
27.11OID
"FIA",27.11,0,1)
y^n^p^^^^n^^n
"FIA",27.11,0,10)

"FIA",27.11,0,11)

"FIA",27.11,0,"RLRO")

"FIA",27.11,0,"VR")
5.3^DG
"FIA",27.11,27.11)
1
"FIA",27.11,27.11,50.2)

"INI")
PRE^DG53672E
"INIT")
QUE^DG53672C
"KRN",19,1922,-1)
2^2
"KRN",19,1922,0)
DG SUPERVISOR MENU^Supervisor ADT Menu^^M^.5^DG SUPERVISOR^^^^^^47
"KRN",19,1922,10,0)
^19.01PI^33^33
"KRN",19,1922,10,33,0)
10498
"KRN",19,1922,10,33,"^")
DG REIMBURSABLE PRIM EC RPT
"KRN",19,1922,"U")
SUPERVISOR ADT MENU
"KRN",19,10498,-1)
0^1
"KRN",19,10498,0)
DG REIMBURSABLE PRIM EC RPT^Reimbursable Insurance Primary EC Report^^R^^^^^^^^REGISTRATION^y
"KRN",19,10498,1,0)
^^3^3^3050708^
"KRN",19,10498,1,1,0)
This report will allow a user to identify patients who have Reimbursable
"KRN",19,10498,1,2,0)
Insurance as a Primary Eligibility Code. Please review the report and
"KRN",19,10498,1,3,0)
manually assign a new Primary Eligibility Code. 
"KRN",19,10498,25)
QUETASK^DGEEREIM
"KRN",19,10498,"U")
REIMBURSABLE INSURANCE PRIMARY
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",47,-1)
1^1
"PKG",47,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",47,20,0)
^9.402P^^
"PKG",47,22,0)
^9.49I^1^1
"PKG",47,22,1,0)
5.3^2930813^2960613
"PKG",47,22,1,"PAH",1,0)
672^3051206^123456971
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","DG53672C")
0^1^B7457981
"RTN","DG53672C",1,0)
DG53672C ;ALB/BRM,LBD,ERC;DG*5.3*672 CLEAN-UP UTILITIES ; 8/16/05 12:12pm
"RTN","DG53672C",2,0)
 ;;5.3;Registration;**672**;Aug 13,1993
"RTN","DG53672C",3,0)
 ;;
"RTN","DG53672C",4,0)
 ; This routine will be used to loop through Patient File (#2) entries
"RTN","DG53672C",5,0)
 ; and will call all necessary clean-up routines.
"RTN","DG53672C",6,0)
 ;
"RTN","DG53672C",7,0)
QUE ; Que job to run
"RTN","DG53672C",8,0)
 N ZTRTN,ZTDESC,ZTSAVE,ZTSK,ZTDTH,ZTQUEUED,ZTIO
"RTN","DG53672C",9,0)
 ;
"RTN","DG53672C",10,0)
 D BMES^XPDUTL("This process will perform the following clean-up activities:")
"RTN","DG53672C",11,0)
 D BMES^XPDUTL("   1) Find and delete all Reimbursable Insurance Other Eligibility")
"RTN","DG53672C",12,0)
 D MES^XPDUTL("      Codes on patients that are not deceased.  A Mailman message")
"RTN","DG53672C",13,0)
 D MES^XPDUTL("      will be sent upon completion of this job containing a summary")
"RTN","DG53672C",14,0)
 D MES^XPDUTL("      of the clean-up results.")
"RTN","DG53672C",15,0)
 ;
"RTN","DG53672C",16,0)
 ;
"RTN","DG53672C",17,0)
 D BMES^XPDUTL("   2) Convert data in Patient file field 1010.58, Disability Discharge on 1010EZ")
"RTN","DG53672C",18,0)
 D MES^XPDUTL("      to the corresponding value in field .3603, Discharge Due to Disability.")
"RTN","DG53672C",19,0)
 D MES^XPDUTL("      Convert data in Patient file field .362, Disability Ret. from Military")
"RTN","DG53672C",20,0)
 D MES^XPDUTL("      if the value is 1 or 2 to a 1 (YES) in field .3602, Military Disability")
"RTN","DG53672C",21,0)
 D MES^XPDUTL("      Retirement and field .3603, Discharge Due to Disability.")
"RTN","DG53672C",22,0)
 ;
"RTN","DG53672C",23,0)
 D MES^XPDUTL("      ")
"RTN","DG53672C",24,0)
 ; 
"RTN","DG53672C",25,0)
 S ZTRTN="FIND^DG53672C",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","DG53672C",26,0)
 S ZTDESC="DG*5.3*672 CLEAN-UP PROCESSES"
"RTN","DG53672C",27,0)
 D ^%ZTLOAD,HOME^%ZIS
"RTN","DG53672C",28,0)
 I '$G(ZTSK) D BMES^XPDUTL("Clean-up was not tasked.") Q
"RTN","DG53672C",29,0)
 D BMES^XPDUTL("Clean-up has been tasked as Task #"_ZTSK)
"RTN","DG53672C",30,0)
 Q
"RTN","DG53672C",31,0)
 ;
"RTN","DG53672C",32,0)
FIND ; entry point
"RTN","DG53672C",33,0)
 ;
"RTN","DG53672C",34,0)
 N DFN,RIELIG,X1,X2,X
"RTN","DG53672C",35,0)
 ;
"RTN","DG53672C",36,0)
 K ^XTMP("DG53672C")
"RTN","DG53672C",37,0)
 S X1=DT,X2=90 D C^%DTC
"RTN","DG53672C",38,0)
 S ^XTMP("DG53672C",0)=X_"^"_$$NOW^XLFDT_"^DG*5.3*672 CLEAN-UP JOBS"
"RTN","DG53672C",39,0)
 S ^XTMP("DG53672C",0,"TASK")=$G(ZTSK)
"RTN","DG53672C",40,0)
 ; Reimbursible Other EC Clean-up Process Setup
"RTN","DG53672C",41,0)
 D RSETUP^DG53672R(.RIELIG)
"RTN","DG53672C",42,0)
 ;
"RTN","DG53672C",43,0)
 S DFN=0
"RTN","DG53672C",44,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","DG53672C",45,0)
 .S ^XTMP("DG53672C","TCNT")=$G(^XTMP("DG53672C","TCNT"))+1
"RTN","DG53672C",46,0)
 .;
"RTN","DG53672C",47,0)
 .; process reimbursable insurance other EC deletions
"RTN","DG53672C",48,0)
 .D REIM^DG53672R(DFN,.RIELIG)
"RTN","DG53672C",49,0)
 .;
"RTN","DG53672C",50,0)
 .;convert Disability Discharge on 1010EZ
"RTN","DG53672C",51,0)
 .D EN^DG53672D(DFN)
"RTN","DG53672C",52,0)
 ;
"RTN","DG53672C",53,0)
 S $P(^XTMP("DG53672C",0),"^",4)=$$NOW^XLFDT
"RTN","DG53672C",54,0)
 ;
"RTN","DG53672C",55,0)
 ; send message for Reimbursable Insur. Job
"RTN","DG53672C",56,0)
 D SNDMSG^DG53672R
"RTN","DG53672C",57,0)
 ;send message for disability discharge data conversion
"RTN","DG53672C",58,0)
 D SNDMSG^DG53672D
"RTN","DG53672C",59,0)
 Q
"RTN","DG53672D")
0^2^B16608793
"RTN","DG53672D",1,0)
DG53672D ;ALB/ERC - PATCH INSTALL UTILITIES FOR DG 672 ; 9/21/05 4:32pm
"RTN","DG53672D",2,0)
 ;;5.3;Registration;**672**; Aug 13, 1993
"RTN","DG53672D",3,0)
 ;convert values from Patient file, field .362 (Disability Retirement 
"RTN","DG53672D",4,0)
 ;from the Military) and 1010.158 (Disability Discharge on 1010EZ)
"RTN","DG53672D",5,0)
 ;to two new fields, Military Disability Retirement (.3602) and 
"RTN","DG53672D",6,0)
 ;Discharge Due to Disability? (.3603)
"RTN","DG53672D",7,0)
 ;
"RTN","DG53672D",8,0)
 ;for field .362 values converted to .3602
"RTN","DG53672D",9,0)
 ;  0 (NO)  not converted
"RTN","DG53672D",10,0)
 ;  1 (YES, RECEIVING MILITARY RETIREMENT) converted to 1(yes)
"RTN","DG53672D",11,0)
 ;  2 (YES, RECEIVING MILITARY RETIREMENT IN LIEU OF VA COMPENSATION) 
"RTN","DG53672D",12,0)
 ;    converted to 1(yes)
"RTN","DG53672D",13,0)
 ;  3 (UNKNOWN) not converted
"RTN","DG53672D",14,0)
 ;for field 1010.158 to .3603
"RTN","DG53672D",15,0)
 ;  0 (NO) to 0
"RTN","DG53672D",16,0)
 ;  1 (YES) to 1
"RTN","DG53672D",17,0)
 ;
"RTN","DG53672D",18,0)
 ;this routine is called from DG53672C
"RTN","DG53672D",19,0)
 ;
"RTN","DG53672D",20,0)
EN(DFN) ;entry from DG53672C
"RTN","DG53672D",21,0)
 N DGD,DGFDA,DGDIS,DGERR,DGLOD,DGRAND
"RTN","DG53672D",22,0)
 D GETS^DIQ(2,DFN_",",".362;1010.158","I","DGD","DGERR")
"RTN","DG53672D",23,0)
 S DGDIS=$G(DGD(2,DFN_",",.362,"I"))
"RTN","DG53672D",24,0)
 S DGLOD=$G(DGD(2,DFN_",",1010.158,"I"))
"RTN","DG53672D",25,0)
 I $G(DGLOD)]"" D
"RTN","DG53672D",26,0)
 . D LOD
"RTN","DG53672D",27,0)
 . S ^XTMP("DG53672C","DG53672D",1010.158,"CNT")=$G(^XTMP("DG53672C","DG53672D",1010.158,"CNT"))+1
"RTN","DG53672D",28,0)
 I $G(DGDIS)=1!($G(DGDIS)=2) D
"RTN","DG53672D",29,0)
 . D DIS
"RTN","DG53672D",30,0)
 . S ^XTMP("DG53672C","DG53672D",.362,"CNT")=$G(^XTMP("DG53672C","DG53672D",.362,"CNT"))+1
"RTN","DG53672D",31,0)
FILE ;
"RTN","DG53672D",32,0)
 D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672D",33,0)
 I $G(DGERR)']"" D
"RTN","DG53672D",34,0)
 .I $G(DGDIS)]"" D
"RTN","DG53672D",35,0)
 . . S ^XTMP("DG53672C","DG53672D","DATA",.362,DGDIS)=$G(^XTMP("DG53672C","DG53672D","DATA",".362",DGDIS))+1
"RTN","DG53672D",36,0)
 . I $G(DGLOD)]"" D
"RTN","DG53672D",37,0)
 . . S ^XTMP("DG53672C","DG53672D","DATA",1010.158,DGLOD)=$G(^XTMP("DG53672C","DG53672D","DATA","1010.158",DGLOD))+1
"RTN","DG53672D",38,0)
 Q
"RTN","DG53672D",39,0)
 ;
"RTN","DG53672D",40,0)
DIS ;convert Disability Retirement to new fields
"RTN","DG53672D",41,0)
 S DGFDA(2,DFN_",",.3602)=1
"RTN","DG53672D",42,0)
 I $G(DGFDA(2,DFN_",",.3603))']"" S DGFDA(2,DFN_",",.3603)=1
"RTN","DG53672D",43,0)
 Q
"RTN","DG53672D",44,0)
 ;
"RTN","DG53672D",45,0)
LOD ;Discharge Due to Disability is populated
"RTN","DG53672D",46,0)
 S DGFDA(2,DFN_",",.3603)=DGLOD
"RTN","DG53672D",47,0)
 Q
"RTN","DG53672D",48,0)
 ;
"RTN","DG53672D",49,0)
SNDMSG ; Send Mailman bulletin when process completes
"RTN","DG53672D",50,0)
 N SITE,STATN,SITENM,XMDUZ,XMSUB,XMY,XMTEXT,MSG
"RTN","DG53672D",51,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),U,3),SITENM=$P($G(SITE),U,2)
"RTN","DG53672D",52,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","DG53672D",53,0)
 S XMDUZ="DISABILITY RETIREMENT DATA CONVERSION",XMSUB=XMDUZ_" - "_STATN
"RTN","DG53672D",54,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),U,3),SITENM=$P($G(SITE),U,2)
"RTN","DG53672D",55,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","DG53672D",56,0)
 S XMDUZ="DISABILITY RETIREMENT DATA CONVERSION",XMSUB=XMDUZ_" - "_STATN
"RTN","DG53672D",57,0)
 S XMY(DUZ)=""
"RTN","DG53672D",58,0)
 S XMY("CURTIN,EDNA@MNTVMM.FO-ALBANY")=""
"RTN","DG53672D",59,0)
 S XMTEXT="MSG("
"RTN","DG53672D",60,0)
 S MSG(1)="The Disability Retirement Data Conversion has completed successfully."
"RTN","DG53672D",61,0)
 S MSG(2)="Fields .362 (DISABILITY RET. FROM MILITARY?) and 1010.158 (DISABILITY"
"RTN","DG53672D",62,0)
 S MSG(3)="DISCHARGE ON 1010EZ), both in the Patient file, have been converted"
"RTN","DG53672D",63,0)
 S MSG(4)="to fields .3602 (MILITARY DISABILITY RETIREMENT) and .3603 (DISCHARGE DUE"
"RTN","DG53672D",64,0)
 S MSG(5)="TO DISABILITY), according to the following algorithm:"
"RTN","DG53672D",65,0)
 S MSG(6)="      value of 'Yes' in 1010.158 is now 'Yes' in field .3603"
"RTN","DG53672D",66,0)
 S MSG(7)="      value of 'No' in 1010.158 is now 'No' in field .3603"
"RTN","DG53672D",67,0)
 S MSG(8)=""
"RTN","DG53672D",68,0)
 S MSG(9)="      value of 1 or 2 in .362 is now 'Yes' in .3602 and .3603"
"RTN","DG53672D",69,0)
 S MSG(10)="      value of 0 or 3 in .362 was not converted"
"RTN","DG53672D",70,0)
 S MSG(12)=""
"RTN","DG53672D",71,0)
 S MSG(13)="Task: "_$G(^XTMP("DG53672C",0,"TASK"))
"RTN","DG53672D",72,0)
 S MSG(14)="Site Station Number: "_STATN
"RTN","DG53672D",73,0)
 S MSG(15)="Site Name: "_SITENM
"RTN","DG53672D",74,0)
 S MSG(16)=""
"RTN","DG53672D",75,0)
 S MSG(17)="Process started   : "_$$FMTE^XLFDT($P($G(^XTMP("DG53672C",0)),U,2))
"RTN","DG53672D",76,0)
 S MSG(18)="Process completed : "_$$FMTE^XLFDT($P($G(^XTMP("DG53672C",0)),"^",4))
"RTN","DG53672D",77,0)
 S MSG(19)=""
"RTN","DG53672D",78,0)
 S MSG(20)="Total Patients processed             : "_+$G(^XTMP("DG53672C","TCNT"))
"RTN","DG53672D",79,0)
 S MSG(21)="Total with 'Yes' in 1010.158: "_+$G(^XTMP("DG53672C","DG53672D","DATA","1010.158",1))
"RTN","DG53672D",80,0)
 S MSG(22)="Total with 'No' in 1010.158: "_+$G(^XTMP("DG53672C","DG53672D","DATA","1010.158",0))
"RTN","DG53672D",81,0)
 S MSG(23)="Total with 1 in .362: "_+$G(^XTMP("DG53672C","DG53672D","DATA",".362",1))
"RTN","DG53672D",82,0)
 S MSG(24)="Total with 2 in .362: "_+$G(^XTMP("DG53672C","DG53672D","DATA",".362",2))
"RTN","DG53672D",83,0)
 D ^XMD
"RTN","DG53672D",84,0)
 Q
"RTN","DG53672E")
0^3^B46138376
"RTN","DG53672E",1,0)
DG53672E ;ALB/BRM,ERC - DG*5.3*672 Post-install Updates ; 8/19/05 1:48pm
"RTN","DG53672E",2,0)
 ;;5.3;Registration;**672**;Aug 13, 1993
"RTN","DG53672E",3,0)
 ;
"RTN","DG53672E",4,0)
PRE ; Rename/Inactivate eligibility codes and enrollment statuses
"RTN","DG53672E",5,0)
 ;
"RTN","DG53672E",6,0)
 N ELCODE,ENSTAT,NEWSTAT,NEWCODE
"RTN","DG53672E",7,0)
 K XPDABORT
"RTN","DG53672E",8,0)
 S ENSTAT="PENDING; NO ELIGIBILITY CODE IN VIVA"
"RTN","DG53672E",9,0)
 S NEWSTAT="PENDING; NO ELIGIBILITY CODE"
"RTN","DG53672E",10,0)
 D RENAM(ENSTAT,NEWSTAT,1)
"RTN","DG53672E",11,0)
 D CHKIEN("PENDING; NO ELIGIBILITY CODE",15) Q:$G(XPDABORT)
"RTN","DG53672E",12,0)
 D CHKIEN("PENDING; ELIGIBILITY STATUS IS UNVERIFIED",17) Q:$G(XPDABORT)
"RTN","DG53672E",13,0)
 S ELCODE="TRICARE/CHAMPUS",NEWCODE="TRICARE"
"RTN","DG53672E",14,0)
 D RENAM(ELCODE,NEWCODE,0)
"RTN","DG53672E",15,0)
 S ELCODE="MEXICAN BORDER WAR" D INACT(ELCODE)
"RTN","DG53672E",16,0)
 S ELCODE="REIMBURSABLE INSURANCE" D INACT(ELCODE)
"RTN","DG53672E",17,0)
 D MAP1010
"RTN","DG53672E",18,0)
 Q
"RTN","DG53672E",19,0)
 ;
"RTN","DG53672E",20,0)
RENAM(OLD,NEW,FLG) ; Rename Eligibility Code or Enrollment Status Code
"RTN","DG53672E",21,0)
 ;
"RTN","DG53672E",22,0)
 ;  OLD - Old Name for Enrollment Status or Eligibility Code
"RTN","DG53672E",23,0)
 ;  NEW - New Name for Enrollment Status or Eligibility Code
"RTN","DG53672E",24,0)
 ;  FLG - Positive value if renaming Enrollment Status (optional)
"RTN","DG53672E",25,0)
 ;
"RTN","DG53672E",26,0)
 N NAMEX,NAMEX1
"RTN","DG53672E",27,0)
 I $G(FLG) D  Q  ;rename enrollment status
"RTN","DG53672E",28,0)
 .S NAMEX=$E(OLD,1,30),NAMEX1=$E(NEW,1,30),DGIEN=""
"RTN","DG53672E",29,0)
 .I '$O(^DGEN(27.15,"B",NAMEX,"")),'$O(^DGEN(27.15,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" does not exist in file #27.15 - Please contact EVS for assistance.") Q
"RTN","DG53672E",30,0)
 .I '$O(^DIC(27.15,"B",NAMEX,"")),$O(^DIC(27.15,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" has already been renamed in file #27.15") Q
"RTN","DG53672E",31,0)
 .F  S DGIEN=$O(^DGEN(27.15,"B",NAMEX,DGIEN)) Q:'DGIEN  D
"RTN","DG53672E",32,0)
 ..I $P($G(^DGEN(27.15,DGIEN,0)),"^")=NEW D BMES^XPDUTL(OLD_" has already been renamed in file #27.15.") Q
"RTN","DG53672E",33,0)
 ..S DGFDA(27.15,DGIEN_",",.01)=NEW
"RTN","DG53672E",34,0)
 ..D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",35,0)
 ..I $D(DGERR) D ERRDISP(.DGERR,"Failed to Rename "_OLD_" in ENROLLMENT STATUS file (#27.15).") Q
"RTN","DG53672E",36,0)
 ..D BMES^XPDUTL(OLD_" renamed to "_NEW_" in file #27.15")
"RTN","DG53672E",37,0)
 ;
"RTN","DG53672E",38,0)
 ; rename eligibility code in file #8
"RTN","DG53672E",39,0)
 S NAMEX=$E(OLD,1,30),NAMEX1=$E(NEW,1,30),DGIEN=""
"RTN","DG53672E",40,0)
 D  ; attempt rename in file #8.1 even if file #8 fails
"RTN","DG53672E",41,0)
 .I '$O(^DIC(8,"B",NAMEX,"")),'$O(^DIC(8,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" does not exist in file #8 - Please contact EVS for assistance.") Q
"RTN","DG53672E",42,0)
 .I '$O(^DIC(8,"B",NAMEX,"")),$O(^DIC(8,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" has already been renamed in file #8") Q
"RTN","DG53672E",43,0)
 .F  S DGIEN=$O(^DIC(8,"B",NAMEX,DGIEN)) Q:'DGIEN  D
"RTN","DG53672E",44,0)
 ..I $P($G(^DIC(8,DGIEN,0)),"^")=NEW D BMES^XPDUTL(OLD_" has already been renamed in file #8") Q
"RTN","DG53672E",45,0)
 ..S DGFDA(8,DGIEN_",",.01)=NEW
"RTN","DG53672E",46,0)
 ..D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",47,0)
 ..I $D(DGERR) D ERRDISP(.DGERR,"Failed to Rename "_OLD_" in ELIGIBILITY CODE file (#8).") Q
"RTN","DG53672E",48,0)
 ..D BMES^XPDUTL(OLD_" renamed to "_NEW_" in file #8")
"RTN","DG53672E",49,0)
 ;
"RTN","DG53672E",50,0)
 ; rename eligibility code in file #8.1
"RTN","DG53672E",51,0)
 K DGFDA,DGERR
"RTN","DG53672E",52,0)
 I '$O(^DIC(8.1,"B",NAMEX,"")),'$O(^DIC(8.1,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" does not exist in file #8.1 - Please contact EVS for assistance.") Q
"RTN","DG53672E",53,0)
 I '$O(^DIC(8.1,"B",NAMEX,"")),$O(^DIC(8.1,"B",NAMEX1,"")) D BMES^XPDUTL(OLD_" has already been renamed in file #8.1") Q
"RTN","DG53672E",54,0)
 S DGIEN="" F  S DGIEN=$O(^DIC(8.1,"B",NAMEX,DGIEN)) Q:'DGIEN  D
"RTN","DG53672E",55,0)
 .I $P($G(^DIC(8.1,DGIEN,0)),"^")=NEW D BMES^XPDUTL(OLD_" has already been renamed in file #8.1") Q
"RTN","DG53672E",56,0)
 .S DGFDA(8.1,DGIEN_",",.01)=NEW
"RTN","DG53672E",57,0)
 .D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",58,0)
 .I $D(DGERR) D ERRDISP(.DGERR,"Failed to Rename "_OLD_" in MAS ELIGIBILITY CODE file (#8.1).") Q
"RTN","DG53672E",59,0)
 .D BMES^XPDUTL(OLD_" renamed to "_NEW_" in file #8.1")
"RTN","DG53672E",60,0)
 Q
"RTN","DG53672E",61,0)
CHKIEN(ENSTAT,ENIEN) ; Verify IEN of records in the Enrollment Status file (#27.15)
"RTN","DG53672E",62,0)
 Q:$G(ENSTAT)=""  Q:$G(ENIEN)=""
"RTN","DG53672E",63,0)
 I $O(^DGEN(27.15,"B",$E(ENSTAT,1,30),""))=ENIEN Q
"RTN","DG53672E",64,0)
 ; The enrollment status is missing or has the wrong IEN, abort install
"RTN","DG53672E",65,0)
 S XPDABORT=2
"RTN","DG53672E",66,0)
 D BMES^XPDUTL(">>> ERROR IN ENROLLMENT STATUS FILE #27.15 <<<")
"RTN","DG53672E",67,0)
 D BMES^XPDUTL("Enrollment Status '"_ENSTAT_"' should be record #"_ENIEN)
"RTN","DG53672E",68,0)
 D BMES^XPDUTL("Please contact EVS for assistance")
"RTN","DG53672E",69,0)
 D BMES^XPDUTL(">>>>>> INSTALLATION ABORTED <<<<<<")
"RTN","DG53672E",70,0)
 Q
"RTN","DG53672E",71,0)
INACT(ELCODE) ; Inactivate Eligibility Codes
"RTN","DG53672E",72,0)
 N DGIEN,DGERR,DGFDA,NAMEX
"RTN","DG53672E",73,0)
 ; This code is in the ELIGIBILITY CODE file (#8).
"RTN","DG53672E",74,0)
 D  ;  allow file #8.1 checks to occur even if error msg for file #8
"RTN","DG53672E",75,0)
 .S NAMEX=$E(ELCODE,1,30),DGIEN=""
"RTN","DG53672E",76,0)
 .I '$O(^DIC(8,"B",NAMEX,"")) D BMES^XPDUTL(ELCODE_" does not exist in file #8 - Please contact EVS for assistance.")
"RTN","DG53672E",77,0)
 .F  S DGIEN=$O(^DIC(8,"B",NAMEX,DGIEN)) Q:'DGIEN  D
"RTN","DG53672E",78,0)
 ..I $P($G(^DIC(8,DGIEN,0)),"^",7) D BMES^XPDUTL(ELCODE_" has already been deactivated in file #8.") Q
"RTN","DG53672E",79,0)
 ..S DGFDA(8,DGIEN_",",6)=1
"RTN","DG53672E",80,0)
 ..D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",81,0)
 ..I $D(DGERR) D ERRDISP(.DGERR,"Failed to Inactivate "_ELCODE_" in ELIGIBILITY CODE file (#8).") Q
"RTN","DG53672E",82,0)
 ..D BMES^XPDUTL(ELCODE_" successfully deactivated in file #8")
"RTN","DG53672E",83,0)
 ;
"RTN","DG53672E",84,0)
 ; This code is in the MAS ELIGIBILITY CODE file (#8.1).
"RTN","DG53672E",85,0)
 K DGFDA,DGERR
"RTN","DG53672E",86,0)
 I '$O(^DIC(8.1,"B",NAMEX,"")) D BMES^XPDUTL(ELCODE_" does not exist in #8.1 - Please contact EVS for assistance.") Q
"RTN","DG53672E",87,0)
 S DGIEN="" F  S DGIEN=$O(^DIC(8.1,"B",NAMEX,DGIEN)) Q:'DGIEN  D
"RTN","DG53672E",88,0)
 .D OTHR8(DGIEN)
"RTN","DG53672E",89,0)
 .I $P($G(^DIC(8.1,DGIEN,0)),"^",7) D BMES^XPDUTL(ELCODE_" has already been deactivated in file #8.1.") Q
"RTN","DG53672E",90,0)
 .S DGFDA(8.1,DGIEN_",",6)=1
"RTN","DG53672E",91,0)
 .D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",92,0)
 .I $D(DGERR) D ERRDISP(.DGERR,"Failed to Inactivate "_ELCODE_" in MAS ELIGIBILITY CODE file (#8.1).") Q
"RTN","DG53672E",93,0)
 .D BMES^XPDUTL(ELCODE_" successfully deactivated in file #8.1")
"RTN","DG53672E",94,0)
 Q
"RTN","DG53672E",95,0)
 ;
"RTN","DG53672E",96,0)
OTHR8(IEN) ; find all site-specific eligibility codes pointing to ELCODE
"RTN","DG53672E",97,0)
 ;
"RTN","DG53672E",98,0)
 Q:'$G(IEN)
"RTN","DG53672E",99,0)
 N IEN2,NAME,DGFDA,DGERR
"RTN","DG53672E",100,0)
 S IEN2="" F  S IEN2=$O(^DIC(8,"D",IEN,IEN2)) Q:'IEN2  D
"RTN","DG53672E",101,0)
 .S NAME=$P($G(^DIC(8,IEN2,0)),"^")
"RTN","DG53672E",102,0)
 .Q:NAME=$P($G(^DIC(8.1,IEN,0)),"^")
"RTN","DG53672E",103,0)
 .I $P($G(^DIC(8,IEN2,0)),"^",7) D BMES^XPDUTL(NAME_" has already been deactivated in file #8.") Q
"RTN","DG53672E",104,0)
 .S DGFDA(8,IEN2_",",6)=1
"RTN","DG53672E",105,0)
 .D FILE^DIE("K","DGFDA","DGERR")
"RTN","DG53672E",106,0)
 .I $D(DGERR) D ERRDISP(.DGERR,"Failed to Inactivate "_NAME_" in ELIGIBILITY CODE file (#8).") Q
"RTN","DG53672E",107,0)
 .D BMES^XPDUTL(NAME_" successfully deactivated in file #8")
"RTN","DG53672E",108,0)
 Q
"RTN","DG53672E",109,0)
ERRDISP(DGERR,TXT) ; Display FM error message.
"RTN","DG53672E",110,0)
 N ERR,LINE
"RTN","DG53672E",111,0)
 S (ERR,LINE)=0
"RTN","DG53672E",112,0)
 D BMES^XPDUTL(TXT)
"RTN","DG53672E",113,0)
 F  S ERR=$O(DGERR("DIERR",ERR)) Q:'ERR  F  S LINE=$O(DGERR("DIERR",ERR,"TEXT",LINE)) Q:LINE']""  D BMES^XPDUTL("     "_DGERR("DIERR",ERR,"TEXT",LINE))
"RTN","DG53672E",114,0)
 D BMES^XPDUTL("Please contact EVS for assistance")
"RTN","DG53672E",115,0)
 Q
"RTN","DG53672E",116,0)
MAP1010 ;the 1010EZ Mapping file (#711) links a 1010EZ field with the Patient
"RTN","DG53672E",117,0)
 ;file field to which it maps.  DG*5.3*672 changes the mapping of the
"RTN","DG53672E",118,0)
 ;DISABILITY RETIREMENT FROM MILITARY field from .362 - DISABILITY RET. 
"RTN","DG53672E",119,0)
 ;FROM MILITARY? to .3602 - REC'ING MILITARY RETIREMENT? and from 
"RTN","DG53672E",120,0)
 ;1010.158 - DISABILITY DISCHARGE ON 1010EZ to .3603 - DISCH. DUE TO 
"RTN","DG53672E",121,0)
 ;DISABILITY?
"RTN","DG53672E",122,0)
 N DG1010,DG362,DGFDA,DGFLD,DGMES,DGPARAM,ERR
"RTN","DG53672E",123,0)
 S DG1010=$O(^EAS(711,"B","DISABILITY DISCHARGE CLAIMED",0))
"RTN","DG53672E",124,0)
 S DG362=$O(^EAS(711,"B","DISABILITY RETIREMENT FROM MIL",0))
"RTN","DG53672E",125,0)
 I $G(DG362)]"" S DGFDA(711,DG362_",",4)=.3602
"RTN","DG53672E",126,0)
 I $G(DG1010)]"" S DGFDA(711,DG1010_",",4)=.3603
"RTN","DG53672E",127,0)
 D FILE^DIE("S","DGFDA","DGERR")
"RTN","DG53672E",128,0)
 S ERR=""
"RTN","DG53672E",129,0)
 F  S ERR=$O(DGERR("DIERR",ERR)) Q:'ERR  D
"RTN","DG53672E",130,0)
 . F  S LINE=$O(DGERR("DIERR",ERR,"TEXT",LINE)) Q:LINE']""  D
"RTN","DG53672E",131,0)
 . . D BMES^XPDUTL("     "_DGERR("DIERR",ERR,"TEXT",LINE))
"RTN","DG53672E",132,0)
 . . D BMES^XPDUTL("Please contact EVS for assistance")
"RTN","DG53672E",133,0)
 . . S DGPARAM(ERR)=$G(DGERR("DIERR",ERR,"PARAM",1))
"RTN","DG53672E",134,0)
 I $G(DGPARAM(2)) Q  ;if there are 2 params, then both failed
"RTN","DG53672E",135,0)
 I '$D(DGPARAM) D FLD3602,FLD3603 ;if there are no params, then neither failed
"RTN","DG53672E",136,0)
 ;only one field failed, so determine which one and send success message
"RTN","DG53672E",137,0)
 ;for the other
"RTN","DG53672E",138,0)
 I $G(DGPARAM(1))=.3602 D FLD3603
"RTN","DG53672E",139,0)
 I $G(DGPARAM(1))=.3603 D FLD3602
"RTN","DG53672E",140,0)
 I $D(DGMES) D BMES^XPDUTL(.DGMES)
"RTN","DG53672E",141,0)
 Q
"RTN","DG53672E",142,0)
FLD3602 ;
"RTN","DG53672E",143,0)
 S DGFLD="DISABILITY RETIREMENT FROM MILITARY"
"RTN","DG53672E",144,0)
 S DGMES(1)="Changed mapping of "_DGFLD_" in file #711 from .362 to .3602"
"RTN","DG53672E",145,0)
 Q
"RTN","DG53672E",146,0)
FLD3603 ;
"RTN","DG53672E",147,0)
 S DGFLD="DISABILITY DISCHARGE CLAIMED"
"RTN","DG53672E",148,0)
 S DGMES(2)="Changed mapping of "_DGFLD_" in file #711 from 1010.158 to .3603"
"RTN","DG53672E",149,0)
 Q
"RTN","DG53672R")
0^5^B13802911
"RTN","DG53672R",1,0)
DG53672R ;ALB/BRM;Clean-up Other EC of Reimbursable Insurance ; 9/6/05 7:39am
"RTN","DG53672R",2,0)
 ;;5.3;Registration;**672**;Aug 13,1993
"RTN","DG53672R",3,0)
 ;;
"RTN","DG53672R",4,0)
 ;
"RTN","DG53672R",5,0)
 ; Called from inside Patient File (#2) loop in DG53672C.
"RTN","DG53672R",6,0)
 ;
"RTN","DG53672R",7,0)
RSETUP(ELIG) ; entry point
"RTN","DG53672R",8,0)
 N EC81,EC8
"RTN","DG53672R",9,0)
 ; get local codes assigned to the national Reimbursable code
"RTN","DG53672R",10,0)
 S EC81=$O(^DIC(8.1,"B","REIMBURSABLE INSURANCE",""))
"RTN","DG53672R",11,0)
 S EC8=""
"RTN","DG53672R",12,0)
 F  S EC8=$O(^DIC(8,"D",EC81,EC8)) Q:'EC8  S ELIG(EC8)=""
"RTN","DG53672R",13,0)
 Q
"RTN","DG53672R",14,0)
 ;
"RTN","DG53672R",15,0)
REIM(DFN,RIELIG) ;check for Eligibility Code of Reimbursable Insurance
"RTN","DG53672R",16,0)
 N EC8,IEN,QFLG,PRIMEC,DOD
"RTN","DG53672R",17,0)
 S DOD=$P($G(^DPT(DFN,.35)),"^")  ;Date of Death
"RTN","DG53672R",18,0)
 S PRIMEC=$P($G(^DPT(DFN,.36)),"^"),EC8=""
"RTN","DG53672R",19,0)
 F  S EC8=$O(RIELIG(EC8)) Q:'EC8  D
"RTN","DG53672R",20,0)
 .Q:'$D(^DPT(DFN,"E","B",EC8))
"RTN","DG53672R",21,0)
 .S IEN="",QFLG=0
"RTN","DG53672R",22,0)
 .F  S IEN=$O(^DPT(DFN,"E","B",EC8,IEN)) Q:'IEN  D
"RTN","DG53672R",23,0)
 ..I PRIMEC=EC8,'$G(QFLG) S QFLG=1 S:'DOD ^XTMP("DG53672C","DG53672R","PRIMCNT")=$G(^XTMP("DG53672C","DG53672R","PRIMCNT"))+1 Q
"RTN","DG53672R",24,0)
 ..S ^XTMP("DG53672C","DG53672R","CNT")=$G(^XTMP("DG53672C","DG53672R","CNT"))+1
"RTN","DG53672R",25,0)
 ..S ^XTMP("DG53672C","DG53672R","DATA",DFN)=EC8_"^"_$$EXTERNAL^DILFD(2.0361,.01,"",EC8)
"RTN","DG53672R",26,0)
 ..D KILL(DFN,IEN)
"RTN","DG53672R",27,0)
 Q
"RTN","DG53672R",28,0)
 ;
"RTN","DG53672R",29,0)
KILL(DFN,IEN) ;
"RTN","DG53672R",30,0)
 ; Delete Reimbursable Insurance entry.
"RTN","DG53672R",31,0)
 N DA,DATA,DIK
"RTN","DG53672R",32,0)
 S DA(1)=DFN,DA=IEN,DIK="^DPT("_DA(1)_",""E"","
"RTN","DG53672R",33,0)
 D ^DIK
"RTN","DG53672R",34,0)
 Q
"RTN","DG53672R",35,0)
SNDMSG ; Send Mailman bulletin when process completes
"RTN","DG53672R",36,0)
 N DIFROM,SITE,STATN,SITENM,XMDUZ,XMSUB,XMY,XMTEXT,MSG
"RTN","DG53672R",37,0)
 S SITE=$$SITE^VASITE,STATN=$P($G(SITE),U,3),SITENM=$P($G(SITE),U,2)
"RTN","DG53672R",38,0)
 S:$$GET1^DIQ(869.3,"1,",.03,"I")'="P" STATN=STATN_" [TEST]"
"RTN","DG53672R",39,0)
 S XMDUZ="REIMBURSABLE INS OTHER EC CLEANUP",XMSUB=XMDUZ_" - "_STATN
"RTN","DG53672R",40,0)
 S (XMY(DUZ),XMY("HECDQSUPPORT@med.va.gov"))=""
"RTN","DG53672R",41,0)
 S XMTEXT="MSG("
"RTN","DG53672R",42,0)
 S MSG(1)="The Reimbursable Insurance Other Eligibility clean-up process has completed successfully."
"RTN","DG53672R",43,0)
 S MSG(2)="This process searched for patient records with an other eligibility code of"
"RTN","DG53672R",44,0)
 S MSG(3)="Reimbursable Insurance, and deleted it as the code is no longer active."
"RTN","DG53672R",45,0)
 S MSG(4)=""
"RTN","DG53672R",46,0)
 S MSG(5)="Task: "_$G(^XTMP("DG53672C",0,"TASK"))
"RTN","DG53672R",47,0)
 S MSG(6)="Site Station Number: "_STATN
"RTN","DG53672R",48,0)
 S MSG(7)="Site Name: "_SITENM
"RTN","DG53672R",49,0)
 S MSG(8)=""
"RTN","DG53672R",50,0)
 S MSG(9)="Process started   : "_$$FMTE^XLFDT($P($G(^XTMP("DG53672C",0)),U,2))
"RTN","DG53672R",51,0)
 S MSG(10)="Process completed : "_$$FMTE^XLFDT($P($G(^XTMP("DG53672C",0)),"^",4))
"RTN","DG53672R",52,0)
 S MSG(10.5)=""
"RTN","DG53672R",53,0)
 S MSG(11)="Total Patients processed             : "_+$G(^XTMP("DG53672C","TCNT"))
"RTN","DG53672R",54,0)
 S MSG(12)="Total non-Primary Reimbursable ECs Removed : "_+$G(^XTMP("DG53672C","DG53672R","CNT"))
"RTN","DG53672R",55,0)
 S MSG(12.1)="Total Reimbursable Primary ECs*      : "_+$G(^XTMP("DG53672C","DG53672R","PRIMCNT"))
"RTN","DG53672R",56,0)
 S MSG(12.2)="  *Primary Reimbursable ECs were not removed, and sites must review"
"RTN","DG53672R",57,0)
 S MSG(12.3)=" and fix manually by assigning a new Primary EC."
"RTN","DG53672R",58,0)
 S MSG(12.5)=""
"RTN","DG53672R",59,0)
 S MSG(13)="To identify patients at the site for whom the non-Primary Reimbursable"
"RTN","DG53672R",60,0)
 S MSG(14)=" Insurance Eligibility Code was removed, the IRM or person(s) responsible"
"RTN","DG53672R",61,0)
 S MSG(14.5)=" for installing the patch can review the following global:"
"RTN","DG53672R",62,0)
 S MSG(15)="    ^XTMP(""DG53672C"",""DG536572R"",""DATA"",DFN)"
"RTN","DG53672R",63,0)
 S MSG(16)=" DFN = internal entry number of the Patient file (#2)."
"RTN","DG53672R",64,0)
 D ^XMD
"RTN","DG53672R",65,0)
 Q
"RTN","DGEEREIM")
0^30^B8913958
"RTN","DGEEREIM",1,0)
DGEEREIM ;ALB/BRM;Reimbursable Primary Eligibility Code Report ; 5/23/05 11:04am
"RTN","DGEEREIM",2,0)
 ;;5.3;Registration;**672**;Aug 13,1993
"RTN","DGEEREIM",3,0)
 ;;
"RTN","DGEEREIM",4,0)
 ; This routine will identify and report any veteran whom has a
"RTN","DGEEREIM",5,0)
 ; Reimbursable Insurance Primary Eligibility Code and who is not
"RTN","DGEEREIM",6,0)
 ; deceased.
"RTN","DGEEREIM",7,0)
 ;
"RTN","DGEEREIM",8,0)
QUETASK ; Queue the DMZ/Reimbursable Stats job
"RTN","DGEEREIM",9,0)
 N TXT,ZTRTN,ZTDESC,ZTSK,ZTIO,ZTDTH,POP,IO,IOBS,IOF,IOHG,IOM,ION,IOPAR
"RTN","DGEEREIM",10,0)
 N IOS,IOSL,IOST,IOT,IOUPAR,IOXY,%ZIS,ZTSAVE
"RTN","DGEEREIM",11,0)
 K ^TMP($J,"DGEEREIM")
"RTN","DGEEREIM",12,0)
 S %ZIS="QM" D ^%ZIS I $G(POP) W !,"Job Terminated!" Q
"RTN","DGEEREIM",13,0)
 I $D(IO("Q")) D  Q
"RTN","DGEEREIM",14,0)
 .S ZTRTN="LOOP^DGEEREIM",ZTIO="",ZTDTH=$$NOW^XLFDT()
"RTN","DGEEREIM",15,0)
 .S ZTDESC="REIMBURSABLE INSURANCE PRIMARY ELIG CODE JOB"
"RTN","DGEEREIM",16,0)
 .D ^%ZTLOAD
"RTN","DGEEREIM",17,0)
 .S TXT=$S($G(ZTSK):"Task: "_ZTSK_" Queued.",1:"Error: Process not queued!")
"RTN","DGEEREIM",18,0)
 .D HOME^%ZIS
"RTN","DGEEREIM",19,0)
 .W !,TXT
"RTN","DGEEREIM",20,0)
 ;
"RTN","DGEEREIM",21,0)
LOOP ; entry point
"RTN","DGEEREIM",22,0)
 N QFLG,DFN,ELIG,QUIT,RCNT,RDT,ZZ
"RTN","DGEEREIM",23,0)
 N X,X1,X2,EC81,PRIMEC,%,CRT,DATA,DIRUT,EC8,LINE,NAME,PAGE
"RTN","DGEEREIM",24,0)
 ; get local codes assigned to the national Reimbursible code
"RTN","DGEEREIM",25,0)
 S EC8=$O(^DIC(8.1,"B","REIMBURSABLE INSURANCE",""))
"RTN","DGEEREIM",26,0)
 S EC81=""
"RTN","DGEEREIM",27,0)
 F  S EC81=$O(^DIC(8,"D",EC8,EC81)) Q:'EC81  S ELIG(EC81)=""
"RTN","DGEEREIM",28,0)
 ; loop through patient records
"RTN","DGEEREIM",29,0)
 S DFN=0
"RTN","DGEEREIM",30,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","DGEEREIM",31,0)
 .; quit if deceased
"RTN","DGEEREIM",32,0)
 .Q:$P($G(^DPT(DFN,.35)),"^")
"RTN","DGEEREIM",33,0)
 .;check for Primary EC of Reimbursable Insurance
"RTN","DGEEREIM",34,0)
 .S PRIMEC=$P($G(^DPT(DFN,.36)),"^"),EC81="",QFLG=0
"RTN","DGEEREIM",35,0)
 .F  S EC81=$O(ELIG(EC81)) Q:(QFLG!'EC81)  D
"RTN","DGEEREIM",36,0)
 ..Q:PRIMEC'=EC81
"RTN","DGEEREIM",37,0)
 ..S ^TMP($J,"DGEEREIM","RCNT")=$G(^TMP($J,"DGEEREIM","RCNT"))+1,QFLG=1
"RTN","DGEEREIM",38,0)
 ..S SSN=$P($G(^DPT(DFN,0)),"^",9),NAME=$P($G(^DPT(DFN,0)),"^")
"RTN","DGEEREIM",39,0)
 ..S ^TMP($J,"DGEEREIM","DATA",SSN)=NAME_"^"_$$EXTERNAL^DILFD(2,.361,"",PRIMEC)
"RTN","DGEEREIM",40,0)
 U IO
"RTN","DGEEREIM",41,0)
 D PSET,REPORT
"RTN","DGEEREIM",42,0)
 Q
"RTN","DGEEREIM",43,0)
PSET ; set up printer variables
"RTN","DGEEREIM",44,0)
 N ZZ
"RTN","DGEEREIM",45,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","DGEEREIM",46,0)
 S (RDT,Y)=""
"RTN","DGEEREIM",47,0)
 F ZZ=1:1:IOM S $P(LINE,"-",ZZ)=""
"RTN","DGEEREIM",48,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","DGEEREIM",49,0)
 S RDT=$P(Y,"@",1)_" @ "_$P($P(Y,"@",2),":",1,2)
"RTN","DGEEREIM",50,0)
 S RCNT=+$G(^TMP($J,"DGEEREIM","RCNT"))
"RTN","DGEEREIM",51,0)
 Q
"RTN","DGEEREIM",52,0)
HDR ; Report Header
"RTN","DGEEREIM",53,0)
 W !,?((IOM-40)\2),"Reimbursable Insurance Primary EC Report"
"RTN","DGEEREIM",54,0)
 W !,?((IOM-22-$L(RDT))\2),"Date/Time Report Run: ",RDT
"RTN","DGEEREIM",55,0)
 W !!,?((IOM-35-$L(RCNT))\2),"Total Patients with RI Primary EC: ",RCNT
"RTN","DGEEREIM",56,0)
 W !,LINE
"RTN","DGEEREIM",57,0)
 W !!,?5,"SSN",?17,"NAME",?50,"PRIMARY ELIG. CODE"
"RTN","DGEEREIM",58,0)
 W !,?5,"---------",?17,"------------------------------"
"RTN","DGEEREIM",59,0)
 W ?50,"-------------------"
"RTN","DGEEREIM",60,0)
 Q
"RTN","DGEEREIM",61,0)
REPORT ;report results
"RTN","DGEEREIM",62,0)
 N SSN
"RTN","DGEEREIM",63,0)
 I CRT,+$G(PAGE)=0 W @IOF
"RTN","DGEEREIM",64,0)
 S PAGE=1 D HDR
"RTN","DGEEREIM",65,0)
 S SSN="" F  S SSN=$O(^TMP($J,"DGEEREIM","DATA",SSN)) Q:SSN']""!($G(QUIT))  D
"RTN","DGEEREIM",66,0)
 .S DATA=$G(^TMP($J,"DGEEREIM","DATA",SSN))
"RTN","DGEEREIM",67,0)
 .I $Y>(IOSL-5) W:'$G(CRT) !,?68,"Page: "_PAGE D:$G(CRT) PAUSE Q:$G(QUIT)  W @IOF D HDR S PAGE=PAGE+1
"RTN","DGEEREIM",68,0)
 .W !?5,SSN,?17,$P(DATA,"^"),?50,$P(DATA,"^",2)
"RTN","DGEEREIM",69,0)
 Q
"RTN","DGEEREIM",70,0)
 ;
"RTN","DGEEREIM",71,0)
PAUSE ;  Screen pause.  Sets QUIT=1 if user decides to quit.        
"RTN","DGEEREIM",72,0)
 N DIR,X,Y
"RTN","DGEEREIM",73,0)
 F  Q:$Y>(IOSL-5)  W !
"RTN","DGEEREIM",74,0)
 W !,?68,"Page: "_PAGE,!
"RTN","DGEEREIM",75,0)
 S DIR(0)="E" D ^DIR I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","DGEEREIM",76,0)
 Q
"RTN","DGENA")
0^6^B17884165
"RTN","DGENA",1,0)
DGENA ;ALB/CJM,ISA/KWP,Zoltan,LBD,CKN - Enrollment API - Retrieve Data; 12/11/00 4:19pm ; 7/8/05 3:12pm
"RTN","DGENA",2,0)
 ;;5.3;Registration;**121,122,147,232,314,564,672**;Aug 13, 1993
"RTN","DGENA",3,0)
 ;
"RTN","DGENA",4,0)
FINDCUR(DFN) ;
"RTN","DGENA",5,0)
 ;Description: Used to find a patients current enrollment.
"RTN","DGENA",6,0)
 ;Input :
"RTN","DGENA",7,0)
 ;  DFN - Patient IEN
"RTN","DGENA",8,0)
 ;Output:
"RTN","DGENA",9,0)
 ;  Function Value - returns the internal entry number of the patient's
"RTN","DGENA",10,0)
 ;     current enrollment if there is one, NULL otherwise. Checks that
"RTN","DGENA",11,0)
 ;     current enrollment actually belongs to the patient.
"RTN","DGENA",12,0)
 ;
"RTN","DGENA",13,0)
 Q:'$G(DFN) ""
"RTN","DGENA",14,0)
 ;
"RTN","DGENA",15,0)
 N CUR
"RTN","DGENA",16,0)
 S CUR=$P($G(^DPT(DFN,"ENR")),"^")
"RTN","DGENA",17,0)
 I CUR,$P($G(^DGEN(27.11,CUR,0)),"^",2)'=DFN S CUR=""
"RTN","DGENA",18,0)
 Q CUR
"RTN","DGENA",19,0)
 ;
"RTN","DGENA",20,0)
FINDPRI(DGENRIEN) ;
"RTN","DGENA",21,0)
 ;Description: Used to obtain a patient's  enrollment record that was
"RTN","DGENA",22,0)
 ;     prior to the enrollment identified by DGENRIEN.
"RTN","DGENA",23,0)
 ;Input :
"RTN","DGENA",24,0)
 ;  DGENRIEN - this is the internal entry number of a PATIENT ENROLLMENT
"RTN","DGENA",25,0)
 ;     record
"RTN","DGENA",26,0)
 ;Output:
"RTN","DGENA",27,0)
 ;  Function Value - returns the internal entry number of the prior
"RTN","DGENA",28,0)
 ;     enrollment for the patient if there is one, NULL otherwise.
"RTN","DGENA",29,0)
 ;
"RTN","DGENA",30,0)
 Q:'$G(DGENRIEN) ""
"RTN","DGENA",31,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",9)
"RTN","DGENA",32,0)
 ;
"RTN","DGENA",33,0)
ENROLLED(DFN) ;
"RTN","DGENA",34,0)
 ;Description: Returns whether the patient is currently enrolled.
"RTN","DGENA",35,0)
 ;Input:
"RTN","DGENA",36,0)
 ;  DFN - Patient IEN
"RTN","DGENA",37,0)
 ;Output:
"RTN","DGENA",38,0)
 ;  Function Value - returns 1 if the patient is currently enrolled with
"RTN","DGENA",39,0)
 ;     a status of VERIFIED, 0 otherwise
"RTN","DGENA",40,0)
 ;
"RTN","DGENA",41,0)
 N STATUS
"RTN","DGENA",42,0)
 S STATUS=$$STATUS($G(DFN))
"RTN","DGENA",43,0)
 I (STATUS=2) Q 1
"RTN","DGENA",44,0)
 Q 0
"RTN","DGENA",45,0)
 ;
"RTN","DGENA",46,0)
STATUS(DFN) ;
"RTN","DGENA",47,0)
 ;Description: Returns ENROLLMENT STATUS from the patient's current
"RTN","DGENA",48,0)
 ;     enrollment.
"RTN","DGENA",49,0)
 ;Input:
"RTN","DGENA",50,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",51,0)
 ;Output:
"RTN","DGENA",52,0)
 ;  Function Value - If the patient has a current ENROLLMENT STATUS this
"RTN","DGENA",53,0)
 ;     function will return its value, otherwise it returns NULL.
"RTN","DGENA",54,0)
 N DGENRIEN
"RTN","DGENA",55,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",56,0)
 Q:'DGENRIEN ""
"RTN","DGENA",57,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",4)
"RTN","DGENA",58,0)
 ;
"RTN","DGENA",59,0)
PRIORITY(DFN) ;
"RTN","DGENA",60,0)
 ;Description: Returns ENROLLMENT PRIORITY from the patient's current
"RTN","DGENA",61,0)
 ;     enrollment.
"RTN","DGENA",62,0)
 ;Input:
"RTN","DGENA",63,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",64,0)
 ;Output:
"RTN","DGENA",65,0)
 ;  Function Value - If the patient has a current ENROLLMENT PRIORITY
"RTN","DGENA",66,0)
 ;     this function will return its value, otherwise it returns NULL.
"RTN","DGENA",67,0)
 N DGENRIEN
"RTN","DGENA",68,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",69,0)
 Q:'DGENRIEN ""
"RTN","DGENA",70,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",7)
"RTN","DGENA",71,0)
 ;
"RTN","DGENA",72,0)
SOURCE(DFN) ;
"RTN","DGENA",73,0)
 ;Description: Returns SOURCE OF ENROLLMENT from the patient's current
"RTN","DGENA",74,0)
 ;     enrollment.
"RTN","DGENA",75,0)
 ;Input:
"RTN","DGENA",76,0)
 ;  DFN -  Patient IEN
"RTN","DGENA",77,0)
 ;Output:
"RTN","DGENA",78,0)
 ;  Function Value - If the patient has a current ENROLLMENT 
"RTN","DGENA",79,0)
 ;     this function will return the SOURCE OF ENROLLMENT, otherwise
"RTN","DGENA",80,0)
 ;     it returns NULL.
"RTN","DGENA",81,0)
 ;
"RTN","DGENA",82,0)
 N DGENRIEN
"RTN","DGENA",83,0)
 S DGENRIEN=$$FINDCUR($G(DFN))
"RTN","DGENA",84,0)
 Q:'DGENRIEN ""
"RTN","DGENA",85,0)
 Q $P($G(^DGEN(27.11,DGENRIEN,0)),"^",3)
"RTN","DGENA",86,0)
 ;
"RTN","DGENA",87,0)
GET(DGENRIEN,DGENR) ;
"RTN","DGENA",88,0)
 ;Description: Used to obtain a record from the Patient Enrollment file
"RTN","DGENA",89,0)
 ;     into the local DGENR array.
"RTN","DGENA",90,0)
 ;Input :
"RTN","DGENA",91,0)
 ;  DGENRIEN - this is the internal entry number of a PATIENT ENROLLMENT record
"RTN","DGENA",92,0)
 ;Output:
"RTN","DGENA",93,0)
 ;  Function  Value - returns 1 on success, 0 on failure.
"RTN","DGENA",94,0)
 ;  DGENR - this is the name of  a local array, it should be passed by
"RTN","DGENA",95,0)
 ;     reference. If the function is successful this array will
"RTN","DGENA",96,0)
 ;     contain the enrollment.
"RTN","DGENA",97,0)
 ;
"RTN","DGENA",98,0)
 ;      subscript      field name
"RTN","DGENA",99,0)
 ;     "APP"           Enrollment Applicaiton Date
"RTN","DGENA",100,0)
 ;     "DATE"          Enrollment Date
"RTN","DGENA",101,0)
 ;     "END"          Enrollment End Date
"RTN","DGENA",102,0)
 ;     "DFN"           Patient IEN
"RTN","DGENA",103,0)
 ;     "SOURCE"        Enrollment Source
"RTN","DGENA",104,0)
 ;     "STATUS"        Enrollment Status
"RTN","DGENA",105,0)
 ;     "REASON"        Reason Canceled/Declined
"RTN","DGENA",106,0)
 ;     "REMARKS"       Canceled/Declined Remarks
"RTN","DGENA",107,0)
 ;     "FACREC"        Facility Received
"RTN","DGENA",108,0)
 ;     "PRIORITY"      Enrollment Priority
"RTN","DGENA",109,0)
 ;     "SUBGRP"        Enrollment Sub-Group
"RTN","DGENA",110,0)
 ;     "EFFDATE"       Effective Date
"RTN","DGENA",111,0)
 ;     "PRIORREC"      Prior Enrollment Record
"RTN","DGENA",112,0)
 ;     "ELIG","CODE"            Primary Eligibility Code
"RTN","DGENA",113,0)
 ;     "ELIG","CODE",<code ien> Eligibility Codes
"RTN","DGENA",114,0)
 ;     "ELIG","SC"              Service Connected
"RTN","DGENA",115,0)
 ;     "ELIG","SCPER"           Service Connected Percentage
"RTN","DGENA",116,0)
 ;     "ELIG","POW"             POW Status Indicated
"RTN","DGENA",117,0)
 ;     "ELIG","A&A"             Receiving A&A Benefits
"RTN","DGENA",118,0)
 ;     "ELIG","HB"              Receiving Housebound Benefits
"RTN","DGENA",119,0)
 ;     "ELIG","VAPEN"           Receiving a VA Pension
"RTN","DGENA",120,0)
 ;     "ELIG","VACKAMT"         Total Annual VA Check Amount
"RTN","DGENA",121,0)
 ;     "ELIG","DISRET"          Military Disability Retirement
"RTN","DGENA",122,0)
 ;     "ELIG","DISLOD"          Discharged Due to Disability
"RTN","DGENA",123,0)
 ;     "ELIG","MEDICAID"        Medicaid
"RTN","DGENA",124,0)
 ;     "ELIG","AO"              Exposed to Agent Orange
"RTN","DGENA",125,0)
 ;     "ELIG","IR"              Radiation Exposure Indicated
"RTN","DGENA",126,0)
 ;     "ELIG","EC"              Environmental Contaminants
"RTN","DGENA",127,0)
 ;     "ELIG","MTSTA"           Means Test Status
"RTN","DGENA",128,0)
 ;     "ELIG","VCD"             Veteran Catastrophically Disabled?
"RTN","DGENA",129,0)
 ;     "ELIG","PH"              Purple Heart Indicated?
"RTN","DGENA",130,0)
 ;     "ELIG","UNEMPLOY"        Unemployable
"RTN","DGENA",131,0)
 ;     "ELIG","CVELEDT"         Combat Veteran End Date
"RTN","DGENA",132,0)
 ;     "DATETIME"      Date/Time Entered
"RTN","DGENA",133,0)
 ;     "USER"          Entered By
"RTN","DGENA",134,0)
 ;    
"RTN","DGENA",135,0)
 N SUB,NODE
"RTN","DGENA",136,0)
 I '$G(DGENRIEN) Q 0
"RTN","DGENA",137,0)
 I '$D(^DGEN(27.11,DGENRIEN,0)) Q 0
"RTN","DGENA",138,0)
 K DGENR
"RTN","DGENA",139,0)
 S DGENR=""
"RTN","DGENA",140,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,0))
"RTN","DGENA",141,0)
 S DGENR("APP")=$P(NODE,"^")
"RTN","DGENA",142,0)
 S DGENR("DATE")=$P(NODE,"^",10)
"RTN","DGENA",143,0)
 S DGENR("END")=$P(NODE,"^",11)
"RTN","DGENA",144,0)
 S DGENR("DFN")=$P(NODE,"^",2)
"RTN","DGENA",145,0)
 S DGENR("SOURCE")=$P(NODE,"^",3)
"RTN","DGENA",146,0)
 S DGENR("STATUS")=$P(NODE,"^",4)
"RTN","DGENA",147,0)
 S DGENR("REASON")=$P(NODE,"^",5)
"RTN","DGENA",148,0)
 S DGENR("FACREC")=$P(NODE,"^",6)
"RTN","DGENA",149,0)
 S DGENR("PRIORITY")=$P(NODE,"^",7)
"RTN","DGENA",150,0)
 S DGENR("EFFDATE")=$P(NODE,"^",8)
"RTN","DGENA",151,0)
 S DGENR("PRIORREC")=$P(NODE,"^",9)
"RTN","DGENA",152,0)
 ;Phase II Get enrollment sub-grp (SRS 6.4)
"RTN","DGENA",153,0)
 S DGENR("SUBGRP")=$P(NODE,"^",12)
"RTN","DGENA",154,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"R"))
"RTN","DGENA",155,0)
 S DGENR("REMARKS")=$P(NODE,"^")
"RTN","DGENA",156,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"E"))
"RTN","DGENA",157,0)
 S DGENR("ELIG","CODE")=$P(NODE,"^")
"RTN","DGENA",158,0)
 S DGENR("ELIG","SC")=$P(NODE,"^",2)
"RTN","DGENA",159,0)
 S DGENR("ELIG","SCPER")=$P(NODE,"^",3)
"RTN","DGENA",160,0)
 S DGENR("ELIG","POW")=$P(NODE,"^",4)
"RTN","DGENA",161,0)
 S DGENR("ELIG","A&A")=$P(NODE,"^",5)
"RTN","DGENA",162,0)
 S DGENR("ELIG","HB")=$P(NODE,"^",6)
"RTN","DGENA",163,0)
 S DGENR("ELIG","VAPEN")=$P(NODE,"^",7)
"RTN","DGENA",164,0)
 S DGENR("ELIG","VACKAMT")=$P(NODE,"^",8)
"RTN","DGENA",165,0)
 S DGENR("ELIG","DISRET")=$P(NODE,"^",9)
"RTN","DGENA",166,0)
 S DGENR("ELIG","DISLOD")=$P(NODE,"^",20) ;added with DG 672
"RTN","DGENA",167,0)
 S DGENR("ELIG","MEDICAID")=$P(NODE,"^",10)
"RTN","DGENA",168,0)
 S DGENR("ELIG","AO")=$P(NODE,"^",11)
"RTN","DGENA",169,0)
 S DGENR("ELIG","IR")=$P(NODE,"^",12)
"RTN","DGENA",170,0)
 S DGENR("ELIG","EC")=$P(NODE,"^",13)
"RTN","DGENA",171,0)
 S DGENR("ELIG","MTSTA")=$P(NODE,"^",14)
"RTN","DGENA",172,0)
 S DGENR("ELIG","VCD")=$P(NODE,"^",15)
"RTN","DGENA",173,0)
 S DGENR("ELIG","PH")=$P(NODE,"^",16)
"RTN","DGENA",174,0)
 S DGENR("ELIG","UNEMPLOY")=$P(NODE,"^",17)
"RTN","DGENA",175,0)
 S DGENR("ELIG","CVELEDT")=$P(NODE,"^",18)
"RTN","DGENA",176,0)
 ;S DGENCDZZ=1 ; for CD Testing (disabled).
"RTN","DGENA",177,0)
 S NODE=$G(^DGEN(27.11,DGENRIEN,"U"))
"RTN","DGENA",178,0)
 S DGENR("DATETIME")=$P(NODE,"^")
"RTN","DGENA",179,0)
 S DGENR("USER")=$P(NODE,"^",2)
"RTN","DGENA",180,0)
 Q 1
"RTN","DGENA",181,0)
 ;
"RTN","DGENA1A")
0^7^B13128537
"RTN","DGENA1A",1,0)
DGENA1A ;ALB/CJM,ISA/KWP,Zoltan,LBD - Enrollment API - File Data Continued; 12/11/00 3:47pm ; 8/30/05 2:45pm
"RTN","DGENA1A",2,0)
 ;;5.3;Registration;**121,147,232,314,564,672**;Aug 13,1993
"RTN","DGENA1A",3,0)
 ;
"RTN","DGENA1A",4,0)
KILLALL(DGENRIEN) ;
"RTN","DGENA1A",5,0)
 ;kills all x-refs on the record in the Patient Enrollment file
"RTN","DGENA1A",6,0)
 ;pointed to by DGENRIEN
"RTN","DGENA1A",7,0)
 ;
"RTN","DGENA1A",8,0)
 N DGENR,SUB,VALUE
"RTN","DGENA1A",9,0)
 Q:'$G(DGENRIEN)
"RTN","DGENA1A",10,0)
 Q:'$$GET^DGENA(DGENRIEN,.DGENR)
"RTN","DGENA1A",11,0)
 S SUB=""
"RTN","DGENA1A",12,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  D
"RTN","DGENA1A",13,0)
 .Q:(SUB="ELIG")
"RTN","DGENA1A",14,0)
 .Q:DGENR(SUB)=""
"RTN","DGENA1A",15,0)
 .D KILL(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR(SUB))
"RTN","DGENA1A",16,0)
 S SUB=""
"RTN","DGENA1A",17,0)
 F  S SUB=$O(DGENR("ELIG",SUB)) Q:SUB=""  D
"RTN","DGENA1A",18,0)
 .Q:DGENR("ELIG",SUB)=""
"RTN","DGENA1A",19,0)
 .D KILL(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR("ELIG",SUB))
"RTN","DGENA1A",20,0)
 Q
"RTN","DGENA1A",21,0)
 ;
"RTN","DGENA1A",22,0)
SETALL(DGENRIEN,DGENR) ;
"RTN","DGENA1A",23,0)
 ;Sets all x-refs on the record in the Patient Enrollment file.
"RTN","DGENA1A",24,0)
 ;Inputs:
"RTN","DGENA1A",25,0)
 ;  DGENRIEN - ptr to PATIENT ENROLLMENT file
"RTN","DGENA1A",26,0)
 ;  DGENR - array containing the record, pass by reference
"RTN","DGENA1A",27,0)
 ;
"RTN","DGENA1A",28,0)
 N SUB,VALUE
"RTN","DGENA1A",29,0)
 Q:'$G(DGENRIEN)
"RTN","DGENA1A",30,0)
 Q:'$D(DGENR)
"RTN","DGENA1A",31,0)
 ;
"RTN","DGENA1A",32,0)
 S SUB=""
"RTN","DGENA1A",33,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  D
"RTN","DGENA1A",34,0)
 .Q:(SUB="ELIG")
"RTN","DGENA1A",35,0)
 .Q:DGENR(SUB)=""
"RTN","DGENA1A",36,0)
 .D SET(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR(SUB))
"RTN","DGENA1A",37,0)
 S SUB=""
"RTN","DGENA1A",38,0)
 F  S SUB=$O(DGENR("ELIG",SUB)) Q:SUB=""  D
"RTN","DGENA1A",39,0)
 .Q:DGENR("ELIG",SUB)=""
"RTN","DGENA1A",40,0)
 .D SET(27.11,DGENRIEN,$$FIELD^DGENU(SUB),DGENR("ELIG",SUB))
"RTN","DGENA1A",41,0)
 Q
"RTN","DGENA1A",42,0)
 ;
"RTN","DGENA1A",43,0)
KILL(FILE,IEN,FIELD,VALUE) ;
"RTN","DGENA1A",44,0)
 ;executes all the kill logic for x-refs on the field=FIELD for the
"RTN","DGENA1A",45,0)
 ;record=DGENRIEN for the file=FILE for the field value=VALUE
"RTN","DGENA1A",46,0)
 ;
"RTN","DGENA1A",47,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGENA1A",48,0)
 S DA=IEN,X=VALUE,DGIX=0
"RTN","DGENA1A",49,0)
 F  S DGIX=$O(^DD(FILE,FIELD,1,DGIX)) Q:'DGIX  X ^(DGIX,2) S X=VALUE
"RTN","DGENA1A",50,0)
 Q
"RTN","DGENA1A",51,0)
 ;
"RTN","DGENA1A",52,0)
SET(FILE,IEN,FIELD,VALUE) ;
"RTN","DGENA1A",53,0)
 ;executes all the set logic for x-refs on the field=FIELD for the
"RTN","DGENA1A",54,0)
 ;record=DGENRIEN for the file=FILE for the field value=VALUE
"RTN","DGENA1A",55,0)
 ;
"RTN","DGENA1A",56,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGENA1A",57,0)
 S DA=IEN,X=VALUE,DGIX=0
"RTN","DGENA1A",58,0)
 F  S DGIX=$O(^DD(FILE,FIELD,1,DGIX)) Q:'DGIX  X ^(DGIX,1)
"RTN","DGENA1A",59,0)
 Q
"RTN","DGENA1A",60,0)
 ;
"RTN","DGENA1A",61,0)
EDIT(DA,DGENR) ;
"RTN","DGENA1A",62,0)
 ;Description: Overlays a currently existing record, ien=DA, with values
"RTN","DGENA1A",63,0)
 ;     from DGENR array
"RTN","DGENA1A",64,0)
 ;Input -
"RTN","DGENA1A",65,0)
 ;  DA - ien of record in Patient Enrollment file
"RTN","DGENA1A",66,0)
 ;  DGENR - array containing an enrollment, pass by reference
"RTN","DGENA1A",67,0)
 ;Output - 1 on success, 0 on failure
"RTN","DGENA1A",68,0)
 ;
"RTN","DGENA1A",69,0)
 ; *** NOTE: This is called from within FM.  There is a problem in ***
"RTN","DGENA1A",70,0)
 ; *** that ^DIE can not be used.  Instead, the fields             ***
"RTN","DGENA1A",71,0)
 ; *** are hard-set and cross-referenced.                          ***
"RTN","DGENA1A",72,0)
 ;
"RTN","DGENA1A",73,0)
 N NODE
"RTN","DGENA1A",74,0)
 Q:'$G(DA) 0
"RTN","DGENA1A",75,0)
 S NODE=$G(^DGEN(27.11,$G(DA),0))
"RTN","DGENA1A",76,0)
 Q:NODE="" 0
"RTN","DGENA1A",77,0)
 ;
"RTN","DGENA1A",78,0)
 ;kill off all the cross-references (FM doesn't have an API to do this)
"RTN","DGENA1A",79,0)
 D KILLALL(DA)
"RTN","DGENA1A",80,0)
 ;
"RTN","DGENA1A",81,0)
 ;now hand-set all the fields
"RTN","DGENA1A",82,0)
 ;Phase II Add subgroup to the 12 piece (SRS 6.4)
"RTN","DGENA1A",83,0)
 S NODE=DGENR("APP")_U_DGENR("DFN")_U_DGENR("SOURCE")_U_DGENR("STATUS")_U_DGENR("REASON")_U_DGENR("FACREC")_U_DGENR("PRIORITY")_U_DGENR("EFFDATE")_U_DGENR("PRIORREC")_U_DGENR("DATE")_U_DGENR("END")_U_DGENR("SUBGRP")
"RTN","DGENA1A",84,0)
 S ^DGEN(27.11,DA,0)=NODE
"RTN","DGENA1A",85,0)
 S ^DGEN(27.11,DA,"R")=DGENR("REMARKS")
"RTN","DGENA1A",86,0)
 S NODE=DGENR("ELIG","CODE")
"RTN","DGENA1A",87,0)
 S NODE=NODE_U_DGENR("ELIG","SC")
"RTN","DGENA1A",88,0)
 S NODE=NODE_U_DGENR("ELIG","SCPER")
"RTN","DGENA1A",89,0)
 S NODE=NODE_U_DGENR("ELIG","POW")
"RTN","DGENA1A",90,0)
 S NODE=NODE_U_DGENR("ELIG","A&A")
"RTN","DGENA1A",91,0)
 S NODE=NODE_U_DGENR("ELIG","HB")
"RTN","DGENA1A",92,0)
 S NODE=NODE_U_DGENR("ELIG","VAPEN")
"RTN","DGENA1A",93,0)
 S NODE=NODE_U_DGENR("ELIG","VACKAMT")
"RTN","DGENA1A",94,0)
 S NODE=NODE_U_DGENR("ELIG","DISRET")
"RTN","DGENA1A",95,0)
 S NODE=NODE_U_DGENR("ELIG","MEDICAID")
"RTN","DGENA1A",96,0)
 S NODE=NODE_U_DGENR("ELIG","AO")
"RTN","DGENA1A",97,0)
 S NODE=NODE_U_DGENR("ELIG","IR")
"RTN","DGENA1A",98,0)
 S NODE=NODE_U_DGENR("ELIG","EC")
"RTN","DGENA1A",99,0)
 S NODE=NODE_U_DGENR("ELIG","MTSTA")
"RTN","DGENA1A",100,0)
 S NODE=NODE_U_DGENR("ELIG","VCD")
"RTN","DGENA1A",101,0)
 S NODE=NODE_U_DGENR("ELIG","PH")
"RTN","DGENA1A",102,0)
 S NODE=NODE_U_DGENR("ELIG","UNEMPLOY")
"RTN","DGENA1A",103,0)
 S NODE=NODE_U_DGENR("ELIG","CVELEDT")
"RTN","DGENA1A",104,0)
 S NODE=NODE_U ;place holder for SHAD
"RTN","DGENA1A",105,0)
 S NODE=NODE_U_DGENR("ELIG","DISLOD") ;field added with DG*5.3*672
"RTN","DGENA1A",106,0)
 S ^DGEN(27.11,DA,"E")=NODE
"RTN","DGENA1A",107,0)
 S ^DGEN(27.11,DA,"U")=DGENR("DATETIME")_U_DGENR("USER")
"RTN","DGENA1A",108,0)
 ;
"RTN","DGENA1A",109,0)
 ;set the x-refs
"RTN","DGENA1A",110,0)
 D SETALL(DA,.DGENR)
"RTN","DGENA1A",111,0)
 Q 1
"RTN","DGENA6")
0^26^B20843063
"RTN","DGENA6",1,0)
DGENA6 ;ALB/CJM,ISA,KWP,RTK,LBD,CKN - Enrollment API to create enrollment record; 04/24/03 ; 8/31/05 2:44pm
"RTN","DGENA6",2,0)
 ;;5.3;Registration;**232,327,417,491,513,672**;Aug 13, 1993
"RTN","DGENA6",3,0)
 ;
"RTN","DGENA6",4,0)
 ;CREATE line tag moved from DGENA in DG*5.3*232.;MM  
"RTN","DGENA6",5,0)
 ;
"RTN","DGENA6",6,0)
CREATE(DFN,APP,EFFDATE,REASON,REMARKS,DGENR,ENRDATE,END) ;
"RTN","DGENA6",7,0)
 ;Description: Creates a local enrollment as a local array.
"RTN","DGENA6",8,0)
 ;Input :
"RTN","DGENA6",9,0)
 ;  DFN- Patient IEN
"RTN","DGENA6",10,0)
 ;  APP - the Enrollment Application Date to use
"RTN","DGENA6",11,0)
 ;  EFFDATE - the Effective Date, if  NULL assume the same as the
"RTN","DGENA6",12,0)
 ;     Enrollment Date
"RTN","DGENA6",13,0)
 ;  REASON - used to create an enrollment with CANCELLED/DECLINED status,
"RTN","DGENA6",14,0)
 ;     pass in the code for REASON CANCELED/DECLINED
"RTN","DGENA6",15,0)
 ;  REMARKS - if creating an enrollment with CANCELLED/DECLINED status,
"RTN","DGENA6",16,0)
 ;     and the reason is can optionally pass in textual remarks for
"RTN","DGENA6",17,0)
 ;     CANCELED/DECLINED REMARKS 
"RTN","DGENA6",18,0)
 ;  ENRDATE - the Enrollment Date to use (optional)
"RTN","DGENA6",19,0)
 ;  END - the Enrollment End Date to use (optional)
"RTN","DGENA6",20,0)
 ;Output:
"RTN","DGENA6",21,0)
 ;  Function Value - returns 1 if successful, 0 otherwise
"RTN","DGENA6",22,0)
 ;  DGENR - a local array where the enrollment object will be stored,
"RTN","DGENA6",23,0)
 ;     pass by reference
"RTN","DGENA6",24,0)
 ;
"RTN","DGENA6",25,0)
 K DGENR
"RTN","DGENA6",26,0)
 S DGENR=""
"RTN","DGENA6",27,0)
 N DGELGSUB,PRIORITY,DEATH,PRIGRP,DODUPD
"RTN","DGENA6",28,0)
 ;Re-Enrollment - var PRIGRP contains priority and subgroup
"RTN","DGENA6",29,0)
 S PRIGRP=$$PRIORITY^DGENELA4(DFN,,.DGELGSUB,$G(ENRDATE),$G(APP))
"RTN","DGENA6",30,0)
 S PRIORITY=$P(PRIGRP,"^")  ; Re-Enrollment - Priority is first piece
"RTN","DGENA6",31,0)
 S DGENR("APP")=$G(APP)
"RTN","DGENA6",32,0)
 S DGENR("DATE")=$G(ENRDATE)
"RTN","DGENA6",33,0)
 S DGENR("END")=$G(END)
"RTN","DGENA6",34,0)
 S DGENR("DFN")=DFN
"RTN","DGENA6",35,0)
 S DGENR("SOURCE")=1
"RTN","DGENA6",36,0)
 D  ;drops out of block when status is determined
"RTN","DGENA6",37,0)
 .I $G(REASON) D  Q
"RTN","DGENA6",38,0)
 ..S DGENR("STATUS")=7,DGENR("REMARKS")=$G(REMARKS),DGENR("REASON")=REASON ;CANCELED/DECLINED
"RTN","DGENA6",39,0)
 .E  S DGENR("REMARKS")="",DGENR("REASON")=""
"RTN","DGENA6",40,0)
 .S DEATH=$$DEATH^DGENPTA(DFN)
"RTN","DGENA6",41,0)
 .I DEATH D  Q
"RTN","DGENA6",42,0)
 ..S DGENR("STATUS")=6 ;DECEASED
"RTN","DGENA6",43,0)
 ..S DGENR("END")=DEATH
"RTN","DGENA6",44,0)
 ..S DODUPD=$P($G(^DPT(DFN,.35)),"^",4) ;Get Date of Death last updated date
"RTN","DGENA6",45,0)
 ..;S EFFDATE=DEATH ;Removed - DG*5.3*672
"RTN","DGENA6",46,0)
 ..S EFFDATE=$S($G(DODUPD)'="":DODUPD,1:DT) ;DG*5.3*672
"RTN","DGENA6",47,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",48,0)
 ..N DGENRIEN,DGENRC
"RTN","DGENA6",49,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",50,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",51,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",52,0)
 .I '$$VET^DGENPTA(DFN) D  Q  ;NOT ELIGIBLE
"RTN","DGENA6",53,0)
 ..N DGPAT,DGENRIEN,DGENRC
"RTN","DGENA6",54,0)
 ..S DGENR("STATUS")=20 ;new status for Ineligible Project
"RTN","DGENA6",55,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",56,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",57,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",58,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",59,0)
 ..;Phase II The TESTVAL was moved from DGENA1 to DGENA3 (SRS 6.5.2.1)
"RTN","DGENA6",60,0)
 ..;if vet has an Ineligible Date then the Effective Date should be the later of the Ineligible Date or App Date
"RTN","DGENA6",61,0)
 ..I $$GET^DGENPTA(DFN,.DGENPTA),DGENPTA("INELDATE"),$$TESTVAL^DGENA3("EFFDATE",DGENPTA("INELDATE")),DGENRC=1 S EFFDATE=$G(DGENPTA("INELDATE"))
"RTN","DGENA6",62,0)
 ..I '$G(EFFDATE) S EFFDATE=$G(APP)
"RTN","DGENA6",63,0)
 ..;If currently enrolled, set end date = ineligible date
"RTN","DGENA6",64,0)
 ..I DGENRC=1 S DGENR("END")=$G(DGENPTA("INELDATE"))
"RTN","DGENA6",65,0)
 ..;If not currently enrolled or no ineligible date, set end date = application date
"RTN","DGENA6",66,0)
 ..I '$G(DGENR("END")) S DGENR("END")=$G(APP)
"RTN","DGENA6",67,0)
 .;Determine preliminary enrollment status based on enrollment group threshold
"RTN","DGENA6",68,0)
 .;Get enrollment group threshold
"RTN","DGENA6",69,0)
 .N DGEGTIEN,DGEGT,DGENRC,DGENRIEN
"RTN","DGENA6",70,0)
 .S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGENA6",71,0)
 .S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGENA6",72,0)
 .;If patient's enrollment status not above enrollment group threshold 
"RTN","DGENA6",73,0)
 .;set status to Rejected:  Initial Application by VAMC)
"RTN","DGENA6",74,0)
 .I $G(PRIORITY)'="",'$$ABOVE2^DGENEGT1(DFN,$G(APP),PRIORITY,$P(PRIGRP,U,2)) D  Q
"RTN","DGENA6",75,0)
 ..;Find patient's current enrollment record
"RTN","DGENA6",76,0)
 ..S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENA6",77,0)
 ..S DGENRC=$$GET^DGENA(DGENRIEN,.DGENRC)
"RTN","DGENA6",78,0)
 ..S DGENR("DATE")=$S($G(DGENRC("DATE"))'="":DGENRC("DATE"),1:"")  ;enrollment date
"RTN","DGENA6",79,0)
 ..S DGENR("END")=$G(APP)  ;enrollment end date = application date
"RTN","DGENA6",80,0)
 ..S EFFDATE=$G(APP)  ; effective date = application date
"RTN","DGENA6",81,0)
 ..S DGENR("STATUS")=14  ;Rejected: Initial Application by VAMC
"RTN","DGENA6",82,0)
 .S DGENR("STATUS")=1 Q  ;UNVERIFIED
"RTN","DGENA6",83,0)
 S DGENR("FACREC")=$$INST^DGENU()
"RTN","DGENA6",84,0)
 S DGENR("PRIORITY")=PRIORITY
"RTN","DGENA6",85,0)
 ;Phase II add subgroup (SRS 6.4)
"RTN","DGENA6",86,0)
 S DGENR("SUBGRP")=$P(PRIGRP,"^",2)
"RTN","DGENA6",87,0)
 S DGENR("EFFDATE")=$S($G(EFFDATE):EFFDATE,$G(ENRDATE):$G(ENRDATE),1:$G(APP))
"RTN","DGENA6",88,0)
 S DGENR("USER")=$G(DUZ)
"RTN","DGENA6",89,0)
 S DGENR("DATETIME")=$$NOW^XLFDT ;Moved to top of the routine DG*5.3*672
"RTN","DGENA6",90,0)
 S DGENR("PRIORREC")=""
"RTN","DGENA6",91,0)
 M DGENR("ELIG")=DGELGSUB
"RTN","DGENA6",92,0)
 ;
"RTN","DGENA6",93,0)
 Q 1
"RTN","DGENEGT1")
0^23^B56378610
"RTN","DGENEGT1",1,0)
DGENEGT1 ;ALB/KCL,ISA/KWP,LBD,RGL,BRM - Enrollment Group Threshold API's ; 7/28/04 12:54pm
"RTN","DGENEGT1",2,0)
 ;;5.3;Registration;**232,417,454,491,513,451,564,672**;Aug 13, 1993
"RTN","DGENEGT1",3,0)
 ;
"RTN","DGENEGT1",4,0)
 ;
"RTN","DGENEGT1",5,0)
NOTIFY(DGEGT,OLDEGT) ;
"RTN","DGENEGT1",6,0)
 ; Description: This is used to send a message to local mail group.
"RTN","DGENEGT1",7,0)
 ; The notification is used to communicate changes in the Enrollment
"RTN","DGENEGT1",8,0)
 ; Group Threshold (EGT) setting to users at the local site.
"RTN","DGENEGT1",9,0)
 ;
"RTN","DGENEGT1",10,0)
 ;  Input:
"RTN","DGENEGT1",11,0)
 ;    DGEGT - the new Enrollment Group Threshold array, passed by reference
"RTN","DGENEGT1",12,0)
 ;   OLDEGT - the previous Enrollment Group Threshold array, passed by reference
"RTN","DGENEGT1",13,0)
 ;
"RTN","DGENEGT1",14,0)
 ; Output: None
"RTN","DGENEGT1",15,0)
 ;
"RTN","DGENEGT1",16,0)
 N TEXT,XMDUN,XMDUZ,XMTEXT,XMROU,XMSTRIP,XMSUB,XMY,XMZ,OLDPRI
"RTN","DGENEGT1",17,0)
 ;
"RTN","DGENEGT1",18,0)
 ; init subject and sender
"RTN","DGENEGT1",19,0)
 S XMSUB="Enrollment Group Threshold (EGT) Changed"
"RTN","DGENEGT1",20,0)
 S (XMDUN,XMDUZ)="Registration Enrollment Module"
"RTN","DGENEGT1",21,0)
 ;
"RTN","DGENEGT1",22,0)
 ; recipient
"RTN","DGENEGT1",23,0)
 S XMY("G.DGEN EGT UPDATES")=""
"RTN","DGENEGT1",24,0)
 ;
"RTN","DGENEGT1",25,0)
 ; get old EGT priority
"RTN","DGENEGT1",26,0)
 S OLDPRI=$G(OLDEGT("PRIORITY"))
"RTN","DGENEGT1",27,0)
 ;
"RTN","DGENEGT1",28,0)
 S XMTEXT="TEXT("
"RTN","DGENEGT1",29,0)
 S TEXT(1)="The Secretary of the VA has officially changed the enrollment priority"
"RTN","DGENEGT1",30,0)
 S TEXT(2)="grouping of veterans who shall receive care.  This change may place"
"RTN","DGENEGT1",31,0)
 S TEXT(3)="veterans under your facilities care into a 'Not Enrolled' category."
"RTN","DGENEGT1",32,0)
 S TEXT(4)=""
"RTN","DGENEGT1",33,0)
 S TEXT(5)=""
"RTN","DGENEGT1",34,0)
 S TEXT(6)="           Prior EGT Priority:  "_$S($G(OLDPRI):$$EXTERNAL^DILFD(27.16,.02,"F",OLDPRI),1:"N/A")_$S($G(OLDEGT("SUBGRP")):$$EXTERNAL^DILFD(27.16,.03,"F",OLDEGT("SUBGRP")),1:"")
"RTN","DGENEGT1",35,0)
 S TEXT(7)=""
"RTN","DGENEGT1",36,0)
 S TEXT(8)=""
"RTN","DGENEGT1",37,0)
 S TEXT(9)="  New Enrollment Group Threshold (EGT) Settings:"
"RTN","DGENEGT1",38,0)
 S TEXT(10)=""
"RTN","DGENEGT1",39,0)
 S TEXT(11)="                 EGT Priority:  "_$$EXTERNAL^DILFD(27.16,.02,"F",DGEGT("PRIORITY"))_$S($G(DGEGT("SUBGRP")):$$EXTERNAL^DILFD(27.16,.03,"F",DGEGT("SUBGRP")),1:"")
"RTN","DGENEGT1",40,0)
 S TEXT(12)="                     EGT Type:  "_$$EXTERNAL^DILFD(27.16,.04,"F",DGEGT("TYPE"))
"RTN","DGENEGT1",41,0)
 S TEXT(13)="           EGT Effective Date:  "_$$EXTERNAL^DILFD(27.16,.01,"F",DGEGT("EFFDATE"))
"RTN","DGENEGT1",42,0)
 ;
"RTN","DGENEGT1",43,0)
 ; mailman deliverey
"RTN","DGENEGT1",44,0)
 D ^XMD
"RTN","DGENEGT1",45,0)
 ;
"RTN","DGENEGT1",46,0)
 Q
"RTN","DGENEGT1",47,0)
 ;
"RTN","DGENEGT1",48,0)
 ;
"RTN","DGENEGT1",49,0)
DISPLAY() ;
"RTN","DGENEGT1",50,0)
 ; Description: Display Enrollment Group Threshold (EGT) settings.
"RTN","DGENEGT1",51,0)
 ;
"RTN","DGENEGT1",52,0)
 ;  Input: None
"RTN","DGENEGT1",53,0)
 ;
"RTN","DGENEGT1",54,0)
 ; Output: None
"RTN","DGENEGT1",55,0)
 ;
"RTN","DGENEGT1",56,0)
 N DGEGT
"RTN","DGENEGT1",57,0)
 ;
"RTN","DGENEGT1",58,0)
 W !
"RTN","DGENEGT1",59,0)
 I '$$GET^DGENEGT($$FINDCUR^DGENEGT(),.DGEGT) W !,"Enrollment Group Threshold (EGT) settings not found."
"RTN","DGENEGT1",60,0)
 E  D
"RTN","DGENEGT1",61,0)
 .W !,?3,"Enrollment Group Threshold (EGT) Settings"
"RTN","DGENEGT1",62,0)
 .W !,?3,"========================================="
"RTN","DGENEGT1",63,0)
 .W !
"RTN","DGENEGT1",64,0)
 .W !?5,"Date Entered",?25,": ",$S('$G(DGEGT("ENTERED")):"-none-",1:$$EXTERNAL^DILFD(27.16,.01,"F",DGEGT("ENTERED")))
"RTN","DGENEGT1",65,0)
 .W !?5,"EGT Priority",?25,": ",$S('$G(DGEGT("PRIORITY")):"-none-",1:$$EXTERNAL^DILFD(27.16,.02,"F",DGEGT("PRIORITY")))_$S($G(DGEGT("SUBGRP"))="":"",1:$$EXTERNAL^DILFD(27.16,.03,"F",DGEGT("SUBGRP")))
"RTN","DGENEGT1",66,0)
 .W !?5,"EGT Type",?25,": ",$S($G(DGEGT("TYPE"))="":"-none-",1:$$EXTERNAL^DILFD(27.16,.04,"F",DGEGT("TYPE")))
"RTN","DGENEGT1",67,0)
 .W !?5,"EGT Effective Date",?25,": ",$S('$G(DGEGT("EFFDATE")):"-none-",1:$$EXTERNAL^DILFD(27.16,.05,"F",DGEGT("EFFDATE")))
"RTN","DGENEGT1",68,0)
 ;
"RTN","DGENEGT1",69,0)
 Q
"RTN","DGENEGT1",70,0)
 ;
"RTN","DGENEGT1",71,0)
ABOVE(DPTDFN,ENRPRI,ENRGRP,EGTPRI,EGTGRP,EGTFLG) ;
"RTN","DGENEGT1",72,0)
 ; Description: This function will determine if the enrollment is above
"RTN","DGENEGT1",73,0)
 ; the threshold.
"RTN","DGENEGT1",74,0)
 ;
"RTN","DGENEGT1",75,0)
 ;Input:
"RTN","DGENEGT1",76,0)
 ; DPTDFN - Patient File IEN
"RTN","DGENEGT1",77,0)
 ; ENRPRI - Enrollment Priority
"RTN","DGENEGT1",78,0)
 ; ENRGRP - Enrollment Sub-Group
"RTN","DGENEGT1",79,0)
 ; EGTPRI - EGT Priority (optional) - not used
"RTN","DGENEGT1",80,0)
 ; EGTGRP - EGT Sub-Group (optional) - not used
"RTN","DGENEGT1",81,0)
 ; EGTFLG - Flag to bypass additional EGT type 2 check (optional)
"RTN","DGENEGT1",82,0)
 ;          It is used by $$ABOVE2 to prevent re-entering the
"RTN","DGENEGT1",83,0)
 ;          sub-priority API ($$SUBPRI^DGENELA4)
"RTN","DGENEGT1",84,0)
 ; Output:
"RTN","DGENEGT1",85,0)
 ; Returns 1 if above 0 below. 
"RTN","DGENEGT1",86,0)
 ;
"RTN","DGENEGT1",87,0)
 I $G(ENRGRP)="" S ENRGRP=""
"RTN","DGENEGT1",88,0)
 I $G(ENRPRI)="" S ENRPRI=""
"RTN","DGENEGT1",89,0)
 N ABOVE,EGT,TODAY,X
"RTN","DGENEGT1",90,0)
 I '$$GET^DGENEGT($$FINDCUR^DGENEGT(),.EGT) Q 1
"RTN","DGENEGT1",91,0)
 D NOW^%DTC S TODAY=X
"RTN","DGENEGT1",92,0)
 I TODAY<EGT("EFFDATE") Q 1
"RTN","DGENEGT1",93,0)
 ;
"RTN","DGENEGT1",94,0)
 ;EGT type 2 - Stop New Enrollments
"RTN","DGENEGT1",95,0)
 ; or EGT type 4 - Enrollment Decision (ESP DG*5.3*491)
"RTN","DGENEGT1",96,0)
 I EGT("TYPE")=2!(EGT("TYPE")=4) D  Q ABOVE
"RTN","DGENEGT1",97,0)
 .S ABOVE=0
"RTN","DGENEGT1",98,0)
 .I ENRPRI<7 D  Q
"RTN","DGENEGT1",99,0)
 ..I ENRPRI'>EGT("PRIORITY") S ABOVE=1 Q
"RTN","DGENEGT1",100,0)
 .;do check for priorities 7 and 8
"RTN","DGENEGT1",101,0)
 .I ENRPRI<EGT("PRIORITY") S ABOVE=1 Q
"RTN","DGENEGT1",102,0)
 .I ENRGRP'>EGT("SUBGRP") S ABOVE=1 Q
"RTN","DGENEGT1",103,0)
 .I $$OVRRIDE(.DPTDFN,.EGT) S ABOVE=1
"RTN","DGENEGT1",104,0)
 ;
"RTN","DGENEGT1",105,0)
 ;EGT types 1 & 3
"RTN","DGENEGT1",106,0)
 ;do check for priorities 7 and 8
"RTN","DGENEGT1",107,0)
 I ENRPRI>6&(ENRPRI=EGT("PRIORITY")) S ABOVE=0 D  Q ABOVE
"RTN","DGENEGT1",108,0)
 .I ENRGRP'>(EGT("SUBGRP")) S ABOVE=1
"RTN","DGENEGT1",109,0)
 I ENRPRI'>(EGT("PRIORITY")) Q 1
"RTN","DGENEGT1",110,0)
 Q 0
"RTN","DGENEGT1",111,0)
 ;
"RTN","DGENEGT1",112,0)
ABOVE2(DPTDFN,ENRDT,PRIORITY,SUBGRP) ;
"RTN","DGENEGT1",113,0)
 ;
"RTN","DGENEGT1",114,0)
 ; Input: DPTDFN    - Patient File IEN
"RTN","DGENEGT1",115,0)
 ;        ENRDT     - enrollment effective date
"RTN","DGENEGT1",116,0)
 ;        PRIORITY  - enrollment priority
"RTN","DGENEGT1",117,0)
 ;        SUBGRP    - enrollment sub-priority (internal numeric value)
"RTN","DGENEGT1",118,0)
 ;
"RTN","DGENEGT1",119,0)
 ; Output: 1 or 0 for above or below EGT threshold
"RTN","DGENEGT1",120,0)
 ;
"RTN","DGENEGT1",121,0)
 N ABOVE,TODAY,X,EGT
"RTN","DGENEGT1",122,0)
 S ABOVE=1
"RTN","DGENEGT1",123,0)
 S:'$G(SUBGRP) SUBGRP=""
"RTN","DGENEGT1",124,0)
 S:'$G(PRIORITY) PRIORITY=""
"RTN","DGENEGT1",125,0)
 S:'$G(ENRDT) ENRDT=""
"RTN","DGENEGT1",126,0)
 D NOW^%DTC S TODAY=X
"RTN","DGENEGT1",127,0)
 Q:'$$GET^DGENEGT($$FINDCUR^DGENEGT(ENRDT),.EGT) 1
"RTN","DGENEGT1",128,0)
 Q:'$G(EGT("EFFDATE")) 1
"RTN","DGENEGT1",129,0)
 Q:TODAY<EGT("EFFDATE") 1
"RTN","DGENEGT1",130,0)
 Q:EGT("TYPE")#2 $$ABOVE(DPTDFN,PRIORITY,SUBGRP,"","",1)  ;If EGT type 1 or 3
"RTN","DGENEGT1",131,0)
 I '$$ABOVE(DPTDFN,PRIORITY,SUBGRP,"","",1) Q 0
"RTN","DGENEGT1",132,0)
 ;I PRIORITY=EGT("PRIORITY"),ENRDT,ENRDT'<EGT("EFFDATE") D
"RTN","DGENEGT1",133,0)
 ;.I $$OVRRIDE(.DPTDFN,.EGT) S ABOVE=1 Q
"RTN","DGENEGT1",134,0)
 ;.I EGT("TYPE")=4 S ABOVE=0 Q
"RTN","DGENEGT1",135,0)
 ;.I SUBGRP=EGT("SUBGRP") S ABOVE=0
"RTN","DGENEGT1",136,0)
 Q ABOVE
"RTN","DGENEGT1",137,0)
 ;
"RTN","DGENEGT1",138,0)
OVRRIDE(DPTDFN,EGT) ;check for previous EGT override by HEC and new rules
"RTN","DGENEGT1",139,0)
 N CVDT,ENRCAT,ENRDT,EGTENR,ENRIEN,RTN,CUR,I,DGPAT
"RTN","DGENEGT1",140,0)
 S RTN=0
"RTN","DGENEGT1",141,0)
 I '$$GET^DGENELA(DPTDFN,.DGPAT) Q 0  ;Get current Patient file data
"RTN","DGENEGT1",142,0)
 S ENRIEN=$$FINDCUR^DGENA(.DPTDFN)
"RTN","DGENEGT1",143,0)
 F CUR=1:1 Q:RTN  D
"RTN","DGENEGT1",144,0)
 .I 'ENRIEN S RTN=-1 Q  ;cannot check if no current enrollment
"RTN","DGENEGT1",145,0)
 .I '$$GET^DGENA(ENRIEN,.EGTENR) S RTN=-1 Q  ;need enr info to proceed
"RTN","DGENEGT1",146,0)
 .S ENRIEN=$$FINDPRI^DGENA(ENRIEN)
"RTN","DGENEGT1",147,0)
 .S ENRDT=$G(EGTENR("APP")) S:'ENRDT ENRDT=$G(EGTENR("EFFDATE"))
"RTN","DGENEGT1",148,0)
 .S ENRCAT=$P($G(^DGEN(27.15,+EGTENR("STATUS"),0)),"^",2)
"RTN","DGENEGT1",149,0)
 .; If enrollment status was overridden at HEC, then cont. enroll.
"RTN","DGENEGT1",150,0)
 .I EGTENR("SOURCE")=2,ENRDT'<EGT("EFFDATE"),ENRCAT="E" S RTN=1 Q
"RTN","DGENEGT1",151,0)
 .; If status is Rejected or Cancelled/Declined, quit (no cont. enroll.)
"RTN","DGENEGT1",152,0)
 .I "^4^7^11^12^13^22^"[(U_EGTENR("STATUS")_U) S RTN=-1 Q
"RTN","DGENEGT1",153,0)
 .; If status is Pending, Deceased, or Not Eligible; Ineligible Date,
"RTN","DGENEGT1",154,0)
 .; ignore record and get previous
"RTN","DGENEGT1",155,0)
 .I "^6^15^16^17^18^20^21^"[(U_EGTENR("STATUS")_U) Q
"RTN","DGENEGT1",156,0)
 .; If Application Date and Effective Date of Change are prior to the
"RTN","DGENEGT1",157,0)
 .; EGT Effective Date then cont. enroll.
"RTN","DGENEGT1",158,0)
 .I ENRDT<EGT("EFFDATE"),$G(EGTENR("EFFDATE"))<EGT("EFFDATE") S RTN=1 Q
"RTN","DGENEGT1",159,0)
 .; If status of current enrollment record is Not Eligible; Refused to
"RTN","DGENEGT1",160,0)
 .; Pay Copay AND Agreed to Pay Deductible is now YES, then enroll
"RTN","DGENEGT1",161,0)
 .I CUR=1,EGTENR("STATUS")=19 D  Q:RTN
"RTN","DGENEGT1",162,0)
 ..N DGMT S DGMT=+$$LST^DGMTU(DFN) Q:'DGMT
"RTN","DGENEGT1",163,0)
 ..I $P($G(^DGMT(408.31,DGMT,0)),U,11)=1 S RTN=1
"RTN","DGENEGT1",164,0)
 .I ENRCAT="E" S RTN=$$RULES(DPTDFN,.EGTENR,.EGT,.DGPAT)
"RTN","DGENEGT1",165,0)
 Q RTN>0
"RTN","DGENEGT1",166,0)
 ;
"RTN","DGENEGT1",167,0)
RULES(DPTDFN,EGTENR,EGT,DGPAT) ;check for new cont enrollment rules (DG*5.3*672)
"RTN","DGENEGT1",168,0)
 N RTN
"RTN","DGENEGT1",169,0)
 S RTN=0
"RTN","DGENEGT1",170,0)
 ; If veteran ever had a verified enrollment with SC 10%+ and is now
"RTN","DGENEGT1",171,0)
 ; SC 0% non-compensable then cont. enroll
"RTN","DGENEGT1",172,0)
 I EGTENR("ELIG","VACKAMT")&(EGTENR("ELIG","SCPER")>9)&(DGPAT("SCPER")=0)&(DGPAT("VACKAMT")'>0) S RTN=1 Q RTN
"RTN","DGENEGT1",173,0)
 ; If veteran ever had a verified enrollment with one of these
"RTN","DGENEGT1",174,0)
 ; eligibilities then cont. enroll:  AA, HB, VA Pension
"RTN","DGENEGT1",175,0)
 I EGTENR("ELIG","VACKAMT")&((EGTENR("ELIG","A&A")="Y")!(EGTENR("ELIG","HB")="Y")!(EGTENR("ELIG","VAPEN")="Y")) S RTN=1 Q RTN
"RTN","DGENEGT1",176,0)
 ; If AO Exposure Location = Korean DMZ prior to ESR implementation,
"RTN","DGENEGT1",177,0)
 ; then cont. enroll.
"RTN","DGENEGT1",178,0)
 ; **** NOTE: For patch DG*5.3*672 the ESR implementation date will
"RTN","DGENEGT1",179,0)
 ; be set to 12/29/2040.  This will be changed to the actual ESR
"RTN","DGENEGT1",180,0)
 ; implementation date in a later patch.
"RTN","DGENEGT1",181,0)
 I DGPAT("AO")="Y" D  I RTN Q RTN
"RTN","DGENEGT1",182,0)
 .I $S($D(EGTENR("ELIG","AOEXPLOC")):EGTENR("ELIG","AOEXPLOC"),1:DGPAT("AOEXPLOC"))="K",EGTENR("EFFDATE"),EGTENR("EFFDATE")<3401229 S RTN=1
"RTN","DGENEGT1",183,0)
 ; If combat vet end date is before application date, cont. enroll
"RTN","DGENEGT1",184,0)
 I $G(EGTENR("ELIG","CVELEDT"))'<ENRDT S RTN=1 Q RTN
"RTN","DGENEGT1",185,0)
 ; If veteran is enrolled due to MT status or Medicaid, cont. enroll
"RTN","DGENEGT1",186,0)
 ; UNLESS first verified enrollment record is due to MT status or
"RTN","DGENEGT1",187,0)
 ; Medicaid and the primary MT of that income year was changed to a
"RTN","DGENEGT1",188,0)
 ; status that would not enroll (e.g. due to IVM converted test,
"RTN","DGENEGT1",189,0)
 ; Hardship removal, or Medicaid removal).
"RTN","DGENEGT1",190,0)
 I ((EGTENR("PRIORITY")=7)&("^2^16^"[(U_EGTENR("ELIG","MTSTA")_U)))!((EGTENR("PRIORITY")=5)&((EGTENR("ELIG","MTSTA")=4)!(EGTENR("ELIG","MEDICAID")=1))) S RTN=1 D
"RTN","DGENEGT1",191,0)
 .N ENIEN,ENR,MTDT,MTIEN
"RTN","DGENEGT1",192,0)
 .S ENIEN=0 F  S ENIEN=$O(^DGEN(27.11,"C",+DPTDFN,ENIEN)) Q:'ENIEN  I $P($G(^DGEN(27.11,+ENIEN,0)),U,4)=2 D  Q
"RTN","DGENEGT1",193,0)
 ..I '$$GET^DGENA(ENIEN,.ENR) Q
"RTN","DGENEGT1",194,0)
 ..I ((ENR("PRIORITY")=7)&("^2^16^"[(U_ENR("ELIG","MTSTA")_U)))!((ENR("PRIORITY")=5)&(ENR("ELIG","VAPEN")'="Y")&((ENR("ELIG","MTSTA")=4)!(ENR("ELIG","MEDICAID")=1))) D
"RTN","DGENEGT1",195,0)
 ...S MTDT=$E(ENR("APP"),1,3)_"1231",MTIEN=$$LST^DGMTU(MTDT) Q:'MTIEN
"RTN","DGENEGT1",196,0)
 ...I $P($G(^DGMT(408.31,MTIEN,0)),U,3)=6 S RTN=-1
"RTN","DGENEGT1",197,0)
 Q RTN
"RTN","DGENEGT1",198,0)
 ;
"RTN","DGENELA")
0^22^B24017259
"RTN","DGENELA",1,0)
DGENELA ;ALB/CJM,KCL,Zoltan/PJR,RGL,LBD,EG - Patient Eligibility API ; 10/6/05 1:13pm
"RTN","DGENELA",2,0)
 ;;5.3;Registration;**121,147,232,314,451,564,631,672**;Aug 13,1993
"RTN","DGENELA",3,0)
 ;
"RTN","DGENELA",4,0)
GET(DFN,DGELG) ;
"RTN","DGENELA",5,0)
 ;Description: Used to obtain the patient eligibility data.
"RTN","DGENELA",6,0)
 ;  The data is placed in the local DGELG array.
"RTN","DGENELA",7,0)
 ;Input:
"RTN","DGENELA",8,0)
 ;  DFN - internal entry number of a record in the PATIENT file
"RTN","DGENELA",9,0)
 ;Output:
"RTN","DGENELA",10,0)
 ;  Function Value - returns 1 on success, 0 on failure
"RTN","DGENELA",11,0)
 ;  DGELG - this is  a local array that will be used to return patient eligibility data. The array subscripts and the fields mapped to are defined below. (pass by reference)
"RTN","DGENELA",12,0)
 ;
"RTN","DGENELA",13,0)
 ;subscript             field name
"RTN","DGENELA",14,0)
 ;"DFN"                ien Patient record
"RTN","DGENELA",15,0)
 ;"ELIG","CODE"        Primary Eligibility Code
"RTN","DGENELA",16,0)
 ;"ELIG","CODE",<ien>  Patient Eligibilities
"RTN","DGENELA",17,0)
 ;"SC"                 Service Connected
"RTN","DGENELA",18,0)
 ;"SCPER"              Service Connected Percentage
"RTN","DGENELA",19,0)
 ;"EFFDT"              SC Combined Effective Date
"RTN","DGENELA",20,0)
 ;"POW"                POW Status Indicated
"RTN","DGENELA",21,0)
 ;"A&A"                Receiving A&A Benefits
"RTN","DGENELA",22,0)
 ;"HB"                 Receiving Housebound Benefits
"RTN","DGENELA",23,0)
 ;"VAPEN"              Receiving a VA Pension
"RTN","DGENELA",24,0)
 ;"VACKAMT"            Total Annual VA Check Amount
"RTN","DGENELA",25,0)
 ;"DISRET"             Military Disability Retirement
"RTN","DGENELA",26,0)
 ;"DISLOD"             Discharge Due to Disability (added with DG 672)
"RTN","DGENELA",27,0)
 ;"MEDICAID"           Medicaid
"RTN","DGENELA",28,0)
 ;"AO"                 Exposed to Agent Orange
"RTN","DGENELA",29,0)
 ;"IR"                 Radiation Exposure Indicated
"RTN","DGENELA",30,0)
 ;"EC"                 Environmental Contaminants
"RTN","DGENELA",31,0)
 ;"MTSTA"              Means Test Status
"RTN","DGENELA",32,0)
 ;P&T                  P&T
"RTN","DGENELA",33,0)
 ;POS                  PERIOD OF SERVICE
"RTN","DGENELA",34,0)
 ;UNEMPLOY             UNEMPLOYABLE
"RTN","DGENELA",35,0)
 ;SCAWDATE             SC AWARD DATE
"RTN","DGENELA",36,0)
 ;RATEINC              RATED INCOMPETENT
"RTN","DGENELA",37,0)
 ;CLAIMNUM             CLAIM NUMBER
"RTN","DGENELA",38,0)
 ;** removed ***     CLAIMLOC             *CLAIM FOLDER LOCATION
"RTN","DGENELA",39,0)
 ;VADISAB              RECEIVING VA DISABILITY?
"RTN","DGENELA",40,0)
 ;ELIGSTA              ELIGIBILITY STATUS
"RTN","DGENELA",41,0)
 ;ELIGSTADATE          ELIGIBILITY STATUS DATE
"RTN","DGENELA",42,0)
 ;ELIGVERIF            ELIGIBILITY VERIF. METHOD
"RTN","DGENELA",43,0)
 ;ELIGVSITE            ELIGIBILITY VERIFICATION SITE
"RTN","DGENELA",44,0)
 ;ELIGENTBY            ELIGIBILITY STATUS ENTERED BY
"RTN","DGENELA",45,0)
 ;RATEDIS
"RTN","DGENELA",46,0)
 ;  <COUNT>,"RD"      RATED DISABILITY
"RTN","DGENELA",47,0)
 ;  <COUNT>,"PER"      DISABILITY %
"RTN","DGENELA",48,0)
 ;  <COUNT>,"RDSC"     SERVICE CONNECTED
"RTN","DGENELA",49,0)
 ;  <COUNT>,"RDEXT"    EXTREMITY
"RTN","DGENELA",50,0)
 ;  <COUNT>,"RDORIG"   ORIGINAL RD EFFECTIVE DATE
"RTN","DGENELA",51,0)
 ;  <COUNT>."RDCURR"   CURRENT RD EFFECTIVE DATE
"RTN","DGENELA",52,0)
 ;"VCD"               Veteran Catastrophically Disabled? (#.39)
"RTN","DGENELA",53,0)
 ;"PH"                PURPLE HEART INDICATED
"RTN","DGENELA",54,0)
 ;"AOEXPLOC"          AGENT ORANGE EXPOSURE LOCATION
"RTN","DGENELA",55,0)
 ;"CVELEDT"           COMBAT VETERAN END DATE
"RTN","DGENELA",56,0)
 ;
"RTN","DGENELA",57,0)
 K DGELG
"RTN","DGENELA",58,0)
 S DGELG=""
"RTN","DGENELA",59,0)
 Q:'$D(^DPT(DFN)) 0
"RTN","DGENELA",60,0)
 N NODE,SUBREC,COUNT,CODE,IEN
"RTN","DGENELA",61,0)
 ;
"RTN","DGENELA",62,0)
 S DGELG("DFN")=DFN
"RTN","DGENELA",63,0)
 S DGELG("VCD")=$$VCD^DGENA5(DFN)
"RTN","DGENELA",64,0)
 ;
"RTN","DGENELA",65,0)
 ;
"RTN","DGENELA",66,0)
 S NODE=$G(^DPT(DFN,.29))
"RTN","DGENELA",67,0)
 S DGELG("RATEINC")=$P(NODE,"^",12)
"RTN","DGENELA",68,0)
 ;
"RTN","DGENELA",69,0)
 S NODE=$G(^DPT(DFN,.3))
"RTN","DGENELA",70,0)
 S DGELG("SC")=$P(NODE,"^")
"RTN","DGENELA",71,0)
 S DGELG("SCPER")=$P(NODE,"^",2)
"RTN","DGENELA",72,0)
 S DGELG("P&T")=$P(NODE,"^",4)
"RTN","DGENELA",73,0)
 S DGELG("UNEMPLOY")=$P(NODE,"^",5)
"RTN","DGENELA",74,0)
 S DGELG("SCAWDATE")=$P(NODE,"^",12)
"RTN","DGENELA",75,0)
 S DGELG("VADISAB")=$P(NODE,"^",11)
"RTN","DGENELA",76,0)
 S DGELG("EFFDT")=$P(NODE,"^",14)
"RTN","DGENELA",77,0)
 ;
"RTN","DGENELA",78,0)
 S NODE=$G(^DPT(DFN,.31))
"RTN","DGENELA",79,0)
 S DGELG("CLAIMNUM")=$P(NODE,"^",3)
"RTN","DGENELA",80,0)
 ;S DGELG("CLAIMLOC")=$P(NODE,"^",2) ;removed
"RTN","DGENELA",81,0)
 ;
"RTN","DGENELA",82,0)
 S NODE=$G(^DPT(DFN,.32))
"RTN","DGENELA",83,0)
 S DGELG("POS")=$P(NODE,"^",3)
"RTN","DGENELA",84,0)
 ;
"RTN","DGENELA",85,0)
 S NODE=$G(^DPT(DFN,.36))
"RTN","DGENELA",86,0)
 S DGELG("ELIG","CODE")=$P(NODE,"^") ;primary eligibility
"RTN","DGENELA",87,0)
 S DGELG("DISRET")=$P(NODE,"^",12)
"RTN","DGENELA",88,0)
 S DGELG("DISLOD")=$P(NODE,"^",13)
"RTN","DGENELA",89,0)
 ;
"RTN","DGENELA",90,0)
 S NODE=$G(^DPT(DFN,.38))
"RTN","DGENELA",91,0)
 S DGELG("MEDICAID")=$P(NODE,"^")
"RTN","DGENELA",92,0)
 ;
"RTN","DGENELA",93,0)
 S NODE=$G(^DPT(DFN,.361))
"RTN","DGENELA",94,0)
 S DGELG("ELIGSTA")=$P(NODE,"^")
"RTN","DGENELA",95,0)
 S DGELG("ELIGSTADATE")=$P(NODE,"^",2)
"RTN","DGENELA",96,0)
 S DGELG("ELIGVERIF")=$P(NODE,"^",5)
"RTN","DGENELA",97,0)
 S DGELG("ELIGENTBY")=$P(NODE,"^",6)
"RTN","DGENELA",98,0)
 ;
"RTN","DGENELA",99,0)
 S NODE=$G(^DPT(DFN,.362))
"RTN","DGENELA",100,0)
 S DGELG("VACKAMT")=$P(NODE,"^",20)
"RTN","DGENELA",101,0)
 S DGELG("VAPEN")=$P(NODE,"^",14)
"RTN","DGENELA",102,0)
 S DGELG("A&A")=$P(NODE,"^",12)
"RTN","DGENELA",103,0)
 S DGELG("HB")=$P(NODE,"^",13)
"RTN","DGENELA",104,0)
 ;
"RTN","DGENELA",105,0)
 ;
"RTN","DGENELA",106,0)
 S NODE=$G(^DPT(DFN,.321))
"RTN","DGENELA",107,0)
 S DGELG("AO")=$P(NODE,"^",2)
"RTN","DGENELA",108,0)
 S DGELG("IR")=$P(NODE,"^",3)
"RTN","DGENELA",109,0)
 S DGELG("AOEXPLOC")=$P(NODE,"^",13)
"RTN","DGENELA",110,0)
 ;
"RTN","DGENELA",111,0)
 S NODE=$G(^DPT(DFN,.322))
"RTN","DGENELA",112,0)
 S DGELG("EC")=$P(NODE,"^",13)
"RTN","DGENELA",113,0)
 ;
"RTN","DGENELA",114,0)
 S NODE=$G(^DPT(DFN,.52))
"RTN","DGENELA",115,0)
 S DGELG("POW")=$P(NODE,"^",5)
"RTN","DGENELA",116,0)
 S DGELG("CVELEDT")=$P(NODE,"^",15)
"RTN","DGENELA",117,0)
 ;
"RTN","DGENELA",118,0)
 ; Purple Heart Indicator
"RTN","DGENELA",119,0)
 S NODE=$G(^DPT(DFN,.53))
"RTN","DGENELA",120,0)
 S DGELG("PH")=$P(NODE,"^")
"RTN","DGENELA",121,0)
 ;
"RTN","DGENELA",122,0)
 ;means test category
"RTN","DGENELA",123,0)
 S DGELG("MTSTA")=""
"RTN","DGENELA",124,0)
 S IEN=$P($$LST^DGMTU(DFN),"^")
"RTN","DGENELA",125,0)
 I IEN S DGELG("MTSTA")=$P($G(^DGMT(408.31,IEN,0)),"^",3)
"RTN","DGENELA",126,0)
 ;
"RTN","DGENELA",127,0)
 ;get the other eligibilities multiple
"RTN","DGENELA",128,0)
 S SUBREC=0
"RTN","DGENELA",129,0)
 F  S SUBREC=$O(^DPT(DFN,"E",SUBREC)) Q:'SUBREC  D
"RTN","DGENELA",130,0)
 .S CODE=+$G(^DPT(DFN,"E",SUBREC,0))
"RTN","DGENELA",131,0)
 .;
"RTN","DGENELA",132,0)
 .;need to check the "B" x-ref, because when a code is deleted from the multiple, the kill logic is executed BEFORE the data is actually removed - but the "B" x-ref has been deleted at this point
"RTN","DGENELA",133,0)
 .I CODE,$D(^DPT(DFN,"E","B",CODE)) S DGELG("ELIG","CODE",CODE)=SUBREC
"RTN","DGENELA",134,0)
 ;
"RTN","DGENELA",135,0)
 ;rated disability multiple
"RTN","DGENELA",136,0)
 S SUBREC=0,COUNT=0
"RTN","DGENELA",137,0)
 F  S SUBREC=$O(^DPT(DFN,.372,SUBREC)) Q:'SUBREC  D
"RTN","DGENELA",138,0)
 .S NODE=$G(^DPT(DFN,.372,SUBREC,0))
"RTN","DGENELA",139,0)
 .Q:'$P(NODE,"^")
"RTN","DGENELA",140,0)
 .S COUNT=COUNT+1
"RTN","DGENELA",141,0)
 .S DGELG("RATEDIS",COUNT,"RD")=$P(NODE,"^")
"RTN","DGENELA",142,0)
 .S DGELG("RATEDIS",COUNT,"PER")=$P(NODE,"^",2)
"RTN","DGENELA",143,0)
 .S DGELG("RATEDIS",COUNT,"RDSC")=$P(NODE,"^",3)
"RTN","DGENELA",144,0)
 .S DGELG("RATEDIS",COUNT,"RDEXT")=$P(NODE,"^",4)
"RTN","DGENELA",145,0)
 .S DGELG("RATEDIS",COUNT,"RDORIG")=$P(NODE,"^",5)
"RTN","DGENELA",146,0)
 .S DGELG("RATEDIS",COUNT,"RDCURR")=$P(NODE,"^",6)
"RTN","DGENELA",147,0)
 ;
"RTN","DGENELA",148,0)
 Q 1
"RTN","DGENELA",149,0)
 ;
"RTN","DGENELA",150,0)
NATNAME(CODE) ;
"RTN","DGENELA",151,0)
 ;Description: Given an entry in file #8, Eligibility Code file,
"RTN","DGENELA",152,0)
 ;  finds the corresponding entry in file 8.1, MAS Eligbility Code file,
"RTN","DGENELA",153,0)
 ;  and returns the name
"RTN","DGENELA",154,0)
 ;Input:
"RTN","DGENELA",155,0)
 ;  CODE - pointer to file #8
"RTN","DGENELA",156,0)
 ;Output:
"RTN","DGENELA",157,0)
 ;  Function Value - name of corresponding code in file #8.1
"RTN","DGENELA",158,0)
 ;
"RTN","DGENELA",159,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",160,0)
 Q $$CODENAME($P($G(^DIC(8,CODE,0)),"^",9))
"RTN","DGENELA",161,0)
 ;
"RTN","DGENELA",162,0)
NATCODE(CODE) ;
"RTN","DGENELA",163,0)
 ;Description: Given an entry in file #8, Eligibility Code file,
"RTN","DGENELA",164,0)
 ;  finds the corresponding entry in file 8.1, MAS Eligbility Code file
"RTN","DGENELA",165,0)
 ;Input:
"RTN","DGENELA",166,0)
 ;  CODE - pointer to file #8
"RTN","DGENELA",167,0)
 ;Output:
"RTN","DGENELA",168,0)
 ;  Function Value - pointer to file #8.1
"RTN","DGENELA",169,0)
 ;
"RTN","DGENELA",170,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",171,0)
 Q $P($G(^DIC(8,CODE,0)),"^",9)
"RTN","DGENELA",172,0)
 ;
"RTN","DGENELA",173,0)
CODENAME(CODE) ;
"RTN","DGENELA",174,0)
 ;Description: Given a pointer to file #8.1, MAS Eligibility Code file,
"RTN","DGENELA",175,0)
 ;  it returns the name of the code 
"RTN","DGENELA",176,0)
 ;Input:
"RTN","DGENELA",177,0)
 ;  CODE - pointer to file #8.1
"RTN","DGENELA",178,0)
 ;Output:
"RTN","DGENELA",179,0)
 ;  Function Value - name of the code pointed to
"RTN","DGENELA",180,0)
 ;
"RTN","DGENELA",181,0)
 Q:'$G(CODE) ""
"RTN","DGENELA",182,0)
 Q $P($G(^DIC(8.1,CODE,0)),"^")
"RTN","DGENELA",183,0)
 ;
"RTN","DGENELA",184,0)
ELIGSTAT(DFN,DGELG) ;
"RTN","DGENELA",185,0)
 ;Description: Used to get the ELIGIBILITY STATUS and the 
"RTN","DGENELA",186,0)
 ;ELIGIBILITY STATUS DATE of the patient.
"RTN","DGENELA",187,0)
 ;
"RTN","DGENELA",188,0)
 ;Input:
"RTN","DGENELA",189,0)
 ;  DFN - ien of patient record
"RTN","DGENELA",190,0)
 ;
"RTN","DGENELA",191,0)
 ;Ouput:
"RTN","DGENELA",192,0)
 ;  Function Value - 1 on success, 0 on failure
"RTN","DGENELA",193,0)
 ;  DGELG array (pass by reference)
"RTN","DGENELA",194,0)
 ;    "ELIGSTA" - ELIGIBILITY STATUS
"RTN","DGENELA",195,0)
 ;    "ELIGSTADATE" - ELIGIBILITY STATUS DATE
"RTN","DGENELA",196,0)
 ;
"RTN","DGENELA",197,0)
 N NODE,SUCCESS
"RTN","DGENELA",198,0)
 D
"RTN","DGENELA",199,0)
 .S SUCCESS=1
"RTN","DGENELA",200,0)
 .I '$G(DFN) S SUCCESS=0 Q
"RTN","DGENELA",201,0)
 .S NODE=$G(^DPT(DFN,.361))
"RTN","DGENELA",202,0)
 .S DGELG("ELIGSTA")=$P(NODE,"^")
"RTN","DGENELA",203,0)
 .S DGELG("ELIGSTADATE")=$P(NODE,"^",2)
"RTN","DGENELA",204,0)
 Q SUCCESS
"RTN","DGENELA1")
0^21^B76882824
"RTN","DGENELA1",1,0)
DGENELA1 ;ALB/CJM,RTK,TDM,PJR,RGL,LBD,EG - Patient Eligibility API ; 10/6/05 1:20pm
"RTN","DGENELA1",2,0)
 ;;5.3;Registration;**147,327,314,367,497,451,564,631,672**;Aug 13,1993
"RTN","DGENELA1",3,0)
 ;
"RTN","DGENELA1",4,0)
CHECK(DGELG,DGPAT,DGCDIS,ERRMSG) ;
"RTN","DGENELA1",5,0)
 ;Does validation checks on the eligibility contained in the DGELG array.
"RTN","DGENELA1",6,0)
 ;
"RTN","DGENELA1",7,0)
 ;Input:
"RTN","DGENELA1",8,0)
 ;  DGELG - array containing eligibility data (pass by reference)
"RTN","DGENELA1",9,0)
 ;  DGPAT - array containing patient data (pass by reference)
"RTN","DGENELA1",10,0)
 ;  DGCDIS - array containing catastrophic disability determination (pass by reference)
"RTN","DGENELA1",11,0)
 ;
"RTN","DGENELA1",12,0)
 ;Output:
"RTN","DGENELA1",13,0)
 ;  Function Value - returns 1 if all validation checks passed, 0 otherwise
"RTN","DGENELA1",14,0)
 ;  ERRMSG - returns a message if validations fail (pass by reference)
"RTN","DGENELA1",15,0)
 ;
"RTN","DGENELA1",16,0)
 N SUCCESS,NATCODE,BAD,SUB,CODE,DGONV,DGTEXT,INELDATE
"RTN","DGENELA1",17,0)
 S SUCCESS=0
"RTN","DGENELA1",18,0)
 S ERRMSG=""
"RTN","DGENELA1",19,0)
 ;
"RTN","DGENELA1",20,0)
 D  ;drops out of block on failure
"RTN","DGENELA1",21,0)
 .;
"RTN","DGENELA1",22,0)
 .;get optional arrays if not there
"RTN","DGENELA1",23,0)
 .I '$D(DGPAT),'$$GET^DGENPTA(DGELG("DFN"),.DGPAT) S ERRMSG="PATIENT NOT FOUND" Q
"RTN","DGENELA1",24,0)
 .I '$D(DGCDIS),'$$GET^DGENCDA(DGELG("DFN"),.DGCDIS) S ERRMSG="PATIENT NOT FOUND" Q
"RTN","DGENELA1",25,0)
 .;
"RTN","DGENELA1",26,0)
 .;do field level checks
"RTN","DGENELA1",27,0)
 .S SUB="" F  S SUB=$O(DGELG(SUB)) Q:(SUB="")  I SUB'="ELIG",SUB'="RATEDIS",'$$CHKFIELD(SUB,DGELG(SUB)) S ERRMSG="BAD VALUE, FIELD = "_$$GET1^DID(2,$$FIELD(SUB),"","LABEL") Q
"RTN","DGENELA1",28,0)
 .;
"RTN","DGENELA1",29,0)
 .Q:(SUB'="")  ;didn't finish the loop
"RTN","DGENELA1",30,0)
 .;
"RTN","DGENELA1",31,0)
 .;also check SC % field of Rated Disabilities
"RTN","DGENELA1",32,0)
 .S SUB="" F  S SUB=$O(DGELG("RATEDIS",SUB)) Q:(SUB="")  I '$$CHKFIELD("PER",DGELG("RATEDIS",SUB,"PER")) S ERRMSG="BAD VALUE, FIELD = DISABILITY % OF THE RATED DISABILITIES MULTIPLE" Q
"RTN","DGENELA1",33,0)
 .Q:(SUB'="")  ;didn't finish the loop
"RTN","DGENELA1",34,0)
 .;
"RTN","DGENELA1",35,0)
 .I DGELG("SC")="Y",DGELG("SCPER")="" S ERRMSG="SC% UNSPECIFIED FOR SC VET" Q
"RTN","DGENELA1",36,0)
 .;
"RTN","DGENELA1",37,0)
 .;!! put this check back when POS is added to the Z11 message
"RTN","DGENELA1",38,0)
 .;I DGPAT("VETERAN")="Y",'DGELG("POS") S ERRMSG="POS UNSPECIFIED" Q 
"RTN","DGENELA1",39,0)
 .;
"RTN","DGENELA1",40,0)
 .I 'DGELG("ELIG","CODE") S ERRMSG="PRIMARY ELIGIBILITY IS UNSPECIFIED" Q
"RTN","DGENELA1",41,0)
 .;
"RTN","DGENELA1",42,0)
 .I (DGELG("VACKAMT")>0),(DGELG("A&A")_DGELG("HB")_DGELG("VAPEN")_DGELG("VADISAB")'["Y") S ERRMSG="VA CHECK AMOUNT > 0 BUT INCOME INDICATORS ALL SHOW 'NO'" Q
"RTN","DGENELA1",43,0)
 .;
"RTN","DGENELA1",44,0)
 .;
"RTN","DGENELA1",45,0)
 .;
"RTN","DGENELA1",46,0)
 .I (DGELG("SC")="N"),(DGELG("VADISAB")="Y") S ERRMSG="NSC VETERANS CAN NOT BE RECEIVING VA DISABILITY BENEFITS" Q
"RTN","DGENELA1",47,0)
 .;
"RTN","DGENELA1",48,0)
 .S BAD=1 D  Q:BAD  ;check primary eligibility
"RTN","DGENELA1",49,0)
 ..S NATCODE=$$NATCODE^DGENELA(DGELG("ELIG","CODE"))
"RTN","DGENELA1",50,0)
 ..Q:'NATCODE
"RTN","DGENELA1",51,0)
 ..;
"RTN","DGENELA1",52,0)
 ..I NATCODE=21 S ERRMSG="CATASTROPHICALLY DISABLED NOT ALLOWED AS PRIMARY ELIGIBILITY" Q
"RTN","DGENELA1",53,0)
 ..;
"RTN","DGENELA1",54,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(DGELG("SCPER")<50),(NATCODE'=3) S ERRMSG="PRIMARY ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTED PERCENTAGE" Q
"RTN","DGENELA1",55,0)
 ..;
"RTN","DGENELA1",56,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(DGELG("SCPER")>49),(NATCODE'=1) S ERRMSG="PRIMARY ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTED PERCENTAGE" Q
"RTN","DGENELA1",57,0)
 ..;
"RTN","DGENELA1",58,0)
 ..S DGONV=$O(^DIC(21,"B","OTHER NON-VETERANS","")),INELDATE=$P($G(^DPT(DFN,.15)),"^",2)
"RTN","DGENELA1",59,0)
 ..I INELDATE'="",DGPAT("INELDATE")'>0,DGELG("POS"),DGELG("POS")=DGONV,'$D(^DIC(21,DGELG("POS"),"E",DGELG("ELIG","CODE"))) D
"RTN","DGENELA1",60,0)
 ...S DGTEXT="Patient was previously determined to be ineligible for VA health care.  Upon review, the individual is now determined to be eligible for "
"RTN","DGENELA1",61,0)
 ...S DGTEXT=DGTEXT_"VA care.  Please update period of service and complete a new application for enrollment in VistA."
"RTN","DGENELA1",62,0)
 ...D ADDMSG^DGENUPL3(.MSGS,DGTEXT,0)
"RTN","DGENELA1",63,0)
 ..;
"RTN","DGENELA1",64,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("SC")="Y"),(NATCODE=1)!(NATCODE=3) S BAD=0 Q  ;primary eligibility OK
"RTN","DGENELA1",65,0)
 ..;
"RTN","DGENELA1",66,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("POW")="Y"),NATCODE'=18 S ERRMSG="PRIMARY ELIGIBILITY SHOULD BE PRISONER OF WAR" Q
"RTN","DGENELA1",67,0)
 ..;
"RTN","DGENELA1",68,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("POW")="Y"),NATCODE=18 S BAD=0 Q
"RTN","DGENELA1",69,0)
 ..;
"RTN","DGENELA1",70,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("PH")="Y"),NATCODE'=22 S ERRMSG="PRIMARY ELIGIBILITY SHOULD BE PURPLE HEART RECIPIENT" Q
"RTN","DGENELA1",71,0)
 ..;
"RTN","DGENELA1",72,0)
 ..I (DGPAT("VETERAN")="Y"),(DGELG("PH")="Y"),NATCODE=22 S BAD=0 Q
"RTN","DGENELA1",73,0)
 ..;
"RTN","DGENELA1",74,0)
 ..; disabled DG*5.3*367, for Inel
"RTN","DGENELA1",75,0)
 ..;I (DGPAT("VETERAN")'=$P($G(^DIC(8.1,NATCODE,0)),"^",5)) S ERRMSG="PRIMARY ELIGIBILTY NOT CONSISTENT WITH VETERAN STATUS" Q
"RTN","DGENELA1",76,0)
 ..;
"RTN","DGENELA1",77,0)
 ..I DGELG("A&A")'="Y",NATCODE=2 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH A&A INDICATOR" Q
"RTN","DGENELA1",78,0)
 ..;
"RTN","DGENELA1",79,0)
 ..I DGELG("HB")'="Y",NATCODE=15 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH HOUSEBOUND INDICATOR" Q
"RTN","DGENELA1",80,0)
 ..;
"RTN","DGENELA1",81,0)
 ..I DGELG("VAPEN")'="Y",NATCODE=4 S ERRMSG="PRIMARY ELIGIBILITY INCONSISTENT WITH VA PENSION INDICATOR" Q
"RTN","DGENELA1",82,0)
 ..;
"RTN","DGENELA1",83,0)
 ..I DGELG("SC")="Y",((NATCODE=4)!(NATCODE=5)) S ERRMSG="NSC ELIGIBILITY CODE INCONSISTENT WITH SERVICE CONNECTION INDICATOR" Q
"RTN","DGENELA1",84,0)
 ..;
"RTN","DGENELA1",85,0)
 ..I (DGPAT("DOB")>2061231),(NATCODE=16) S ERRMSG="DOB IS INCONSISTENT WITH ELIGIBILITY OF MEXICAN BORDER WAR" Q
"RTN","DGENELA1",86,0)
 ..;
"RTN","DGENELA1",87,0)
 ..I (DGPAT("DOB")>2071231),(NATCODE=17) S ERRMSG="DOB IS INCONSISTENT WITH ELIGIBILITY OF WORLD WAR I" Q
"RTN","DGENELA1",88,0)
 ..;
"RTN","DGENELA1",89,0)
 ..;primary eligibility is good
"RTN","DGENELA1",90,0)
 ..S BAD=0
"RTN","DGENELA1",91,0)
 .;
"RTN","DGENELA1",92,0)
 .S SUCCESS=1
"RTN","DGENELA1",93,0)
 .;check eligibilities multiple
"RTN","DGENELA1",94,0)
 .S CODE=0 F  S CODE=$O(DGELG("ELIG","CODE",CODE)) Q:'CODE  D  Q:('SUCCESS)
"RTN","DGENELA1",95,0)
 ..S NATCODE=$$NATCODE^DGENELA(CODE)
"RTN","DGENELA1",96,0)
 ..Q:'NATCODE
"RTN","DGENELA1",97,0)
 ..I NATCODE=21,'DGCDIS("DATE") S SUCCESS=0,ERRMSG="CATASTROPHICALLY DISABLED ELIGIBILITY REQUIRES CATASTROPHICALLY DISABLED DETERMINATION DATE" Q
"RTN","DGENELA1",98,0)
 .;
"RTN","DGENELA1",99,0)
 Q SUCCESS
"RTN","DGENELA1",100,0)
 ;
"RTN","DGENELA1",101,0)
STORE(DGELG,DGPAT,DGCDIS,ERROR,SKIPCHK) ;
"RTN","DGENELA1",102,0)
 ;Stores an eligibility record for a patient. The patient record must
"RTN","DGENELA1",103,0)
 ;already exist. A lock on the Patient record is required, and is
"RTN","DGENELA1",104,0)
 ;released upon completion.
"RTN","DGENELA1",105,0)
 ;
"RTN","DGENELA1",106,0)
 ;Input:
"RTN","DGENELA1",107,0)
 ;  DGELG - eligibility array (pass by reference)
"RTN","DGENELA1",108,0)
 ;  DGPAT - patient array (optional, pass by reference)
"RTN","DGENELA1",109,0)
 ;  DGCDIS - array containing the catastrophic disability determination (optional, pass by reference)
"RTN","DGENELA1",110,0)
 ;  SKIPCHK - flag, set to 1 means that the consistency checks
"RTN","DGENELA1",111,0)
 ;            were already done & should be skipped
"RTN","DGENELA1",112,0)
 ;
"RTN","DGENELA1",113,0)
 ;Output:
"RTN","DGENELA1",114,0)
 ;  Function Value - returns 1 if successful, otherwise 0
"RTN","DGENELA1",115,0)
 ;  ERROR - in event of failure returns an error message (pass by reference, optional)
"RTN","DGENELA1",116,0)
 ;
"RTN","DGENELA1",117,0)
 N SUCCESS,DATA,FIELD,DA,DFN,COUNT
"RTN","DGENELA1",118,0)
 S DFN=$G(DGELG("DFN"))
"RTN","DGENELA1",119,0)
 S SUCCESS=0
"RTN","DGENELA1",120,0)
 S ERROR=""
"RTN","DGENELA1",121,0)
 ;
"RTN","DGENELA1",122,0)
 D  ;drops out of block on failure
"RTN","DGENELA1",123,0)
 .I '$$LOCK^DGENPTA1(DFN) S ERROR="UNABLE TO LOCK PATIENT RECORD" Q
"RTN","DGENELA1",124,0)
 .I $G(SKIPCHK)'=1,'$$CHECK(.DGELG,.DGPAT,.DGCDIS,.ERROR) Q
"RTN","DGENELA1",125,0)
 .S SUB="" F  S SUB=$O(DGELG(SUB)) Q:SUB=""  D
"RTN","DGENELA1",126,0)
 ..I SUB'="ELIG",SUB'="RATEDIS",SUB'="DFN" S FIELD=$$FIELD(SUB) I FIELD S DATA(FIELD)=DGELG(SUB)
"RTN","DGENELA1",127,0)
 .;
"RTN","DGENELA1",128,0)
 .;don't add the Primary Eligibility unless different, so as to not
"RTN","DGENELA1",129,0)
 .;fire off x-refs unless necessary
"RTN","DGENELA1",130,0)
 .I $P($G(^DPT(DFN,.36)),"^")'=DGELG("ELIG","CODE") S DATA(.361)=DGELG("ELIG","CODE")
"RTN","DGENELA1",131,0)
 .;
"RTN","DGENELA1",132,0)
 .; Only update User Enrollee fields if the incoming UE status is
"RTN","DGENELA1",133,0)
 .; greater than the USER ENROLLEE VALID THROUGH on file.
"RTN","DGENELA1",134,0)
 .I $G(DATA(.3617))<$P($G(^DPT(DFN,.361)),"^",7) K DATA(.3617),DATA(.3618)
"RTN","DGENELA1",135,0)
 .;
"RTN","DGENELA1",136,0)
 .I '$$UPD^DGENDBS(2,DFN,.DATA) S ERROR="FILEMAN FAILED TO UPDATE THE PATIENT RECORD" Q
"RTN","DGENELA1",137,0)
 .;
"RTN","DGENELA1",138,0)
 .;
"RTN","DGENELA1",139,0)
 .;delete eligibilities that do not belong
"RTN","DGENELA1",140,0)
 .D DELELIG^DGENELA2(DFN,.DGELG)
"RTN","DGENELA1",141,0)
 .;
"RTN","DGENELA1",142,0)
 .;overlay Rated Disabilities
"RTN","DGENELA1",143,0)
 .Q:'$$OVERLAY()
"RTN","DGENELA1",144,0)
 .;
"RTN","DGENELA1",145,0)
 .;Add the new Patient Eligibilities
"RTN","DGENELA1",146,0)
 .;Don't add the an eligibility unless different - so as to not
"RTN","DGENELA1",147,0)
 .;fire off the x-refs unless necessary.
"RTN","DGENELA1",148,0)
 .;Also, try to assign ien = the code (see input tranform of the field).
"RTN","DGENELA1",149,0)
 .K DA,DATA
"RTN","DGENELA1",150,0)
 .S DA(1)=DFN
"RTN","DGENELA1",151,0)
 .S DATA(.01)=0
"RTN","DGENELA1",152,0)
 .F  S DATA(.01)=$O(DGELG("ELIG","CODE",DATA(.01))) Q:'DATA(.01)  I '$D(^DPT(DFN,"E","B",DATA(.01))) I '$$ADD^DGENDBS(2.0361,.DA,.DATA,,$S($D(^DPT(DFN,"E",DATA(.01))):0,1:DATA(.01))) S ERROR="FILEMAN FAILED TO ADD PATIENT ELIGIBILITY" Q
"RTN","DGENELA1",153,0)
 .;
"RTN","DGENELA1",154,0)
 .S SUCCESS=1
"RTN","DGENELA1",155,0)
 ;
"RTN","DGENELA1",156,0)
 D UNLOCK^DGENPTA1(DFN)
"RTN","DGENELA1",157,0)
 Q SUCCESS
"RTN","DGENELA1",158,0)
 ;
"RTN","DGENELA1",159,0)
FIELD(SUB) ;
"RTN","DGENELA1",160,0)
 ;given a subscript from the ELIGIBILITY array, returns the field number
"RTN","DGENELA1",161,0)
 ;
"RTN","DGENELA1",162,0)
 Q:SUB="CODE" .361
"RTN","DGENELA1",163,0)
 Q:SUB="SC" .301
"RTN","DGENELA1",164,0)
 Q:SUB="SCPER" .302
"RTN","DGENELA1",165,0)
 Q:SUB="EFFDT" .3014
"RTN","DGENELA1",166,0)
 Q:SUB="POW" .525
"RTN","DGENELA1",167,0)
 Q:SUB="PH" .531
"RTN","DGENELA1",168,0)
 Q:SUB="A&A" .36205
"RTN","DGENELA1",169,0)
 Q:SUB="HB" .36215
"RTN","DGENELA1",170,0)
 Q:SUB="VAPEN" .36235
"RTN","DGENELA1",171,0)
 Q:SUB="VACKAMT" .36295
"RTN","DGENELA1",172,0)
 Q:SUB="DISRET" .3602
"RTN","DGENELA1",173,0)
 Q:SUB="DISLOD" .3603
"RTN","DGENELA1",174,0)
 Q:SUB="MEDICAID" .381
"RTN","DGENELA1",175,0)
 Q:SUB="AO" .32102
"RTN","DGENELA1",176,0)
 Q:SUB="IR" .32103
"RTN","DGENELA1",177,0)
 Q:SUB="EC" .322013
"RTN","DGENELA1",178,0)
 Q:SUB="MTSTA" ""  ;don't map Means Test Category
"RTN","DGENELA1",179,0)
 Q:SUB="P&T" .304
"RTN","DGENELA1",180,0)
 Q:SUB="POS" .323
"RTN","DGENELA1",181,0)
 Q:SUB="UNEMPLOY" .305
"RTN","DGENELA1",182,0)
 Q:SUB="SCAWDATE" .3012
"RTN","DGENELA1",183,0)
 Q:SUB="RATEINC" .293
"RTN","DGENELA1",184,0)
 Q:SUB="CLAIMNUM" .313
"RTN","DGENELA1",185,0)
 ;Q:SUB="CLAIMLOC" .312 ; ** removed **
"RTN","DGENELA1",186,0)
 Q:SUB="VADISAB" .3025
"RTN","DGENELA1",187,0)
 Q:SUB="ELIGSTA" .3611
"RTN","DGENELA1",188,0)
 Q:SUB="ELIGSTADATE" .3612
"RTN","DGENELA1",189,0)
 Q:SUB="ELIGVERIF" .3615
"RTN","DGENELA1",190,0)
 Q:SUB="ELIGENTBY" .3616
"RTN","DGENELA1",191,0)
 Q:SUB="RD" .01
"RTN","DGENELA1",192,0)
 Q:SUB="PER" 2
"RTN","DGENELA1",193,0)
 Q:SUB="RDSC" 3
"RTN","DGENELA1",194,0)
 Q:SUB="RDEXT" 4
"RTN","DGENELA1",195,0)
 Q:SUB="RDORIG" 5
"RTN","DGENELA1",196,0)
 Q:SUB="RDCURR" 6
"RTN","DGENELA1",197,0)
 Q:SUB="UEYEAR" .3617
"RTN","DGENELA1",198,0)
 Q:SUB="UESITE" .3618
"RTN","DGENELA1",199,0)
 Q:SUB="AOEXPLOC" .3213
"RTN","DGENELA1",200,0)
 Q:SUB="CVELEDT" .5295
"RTN","DGENELA1",201,0)
 ;
"RTN","DGENELA1",202,0)
 Q ""
"RTN","DGENELA1",203,0)
 ;
"RTN","DGENELA1",204,0)
CHKFIELD(SUB,VAL) ;
"RTN","DGENELA1",205,0)
 ;Description: Does field level validation of the value. Returns 1
"RTN","DGENELA1",206,0)
 ;if the value is good, 0 otherwise.
"RTN","DGENELA1",207,0)
 ;
"RTN","DGENELA1",208,0)
 Q:($G(VAL)="") 1  ;for now, all NULL values assumed okay
"RTN","DGENELA1",209,0)
 ;
"RTN","DGENELA1",210,0)
 N BAD S BAD=0
"RTN","DGENELA1",211,0)
 I (SUB="SCPER")!(SUB="PER"),(+VAL'=VAL)!(VAL>100)!(VAL<0)!(VAL?.E1"."1N.N) S BAD=1
"RTN","DGENELA1",212,0)
 I SUB="VACKAMT",+VAL'=VAL&(VAL'?.N1"."2N)!(VAL>99999)!(VAL<0) S BAD=1
"RTN","DGENELA1",213,0)
 I SUB="DISRET",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",214,0)
 I SUB="DISLOD",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",215,0)
 I SUB="MEDICAID",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",216,0)
 I SUB="RATEINC",VAL'=0,VAL'=1 S BAD=1
"RTN","DGENELA1",217,0)
 I SUB="CLAIMLOC",(VAL["""")!($A(VAL)=45)!($L(VAL)>40)!($L(VAL)<2) S BAD=1
"RTN","DGENELA1",218,0)
 I SUB="ELIGSTA",VAL'="P",VAL'="R",VAL'="V" S BAD=1
"RTN","DGENELA1",219,0)
 I SUB="POW",VAL'="Y",VAL'="N",VAL'="U" S BAD=1
"RTN","DGENELA1",220,0)
 Q 'BAD
"RTN","DGENELA1",221,0)
 ;
"RTN","DGENELA1",222,0)
 ;
"RTN","DGENELA1",223,0)
OVERLAY() ;
"RTN","DGENELA1",224,0)
 ;Description: Overlay the local Rated Disabilities with whatever HEC
"RTN","DGENELA1",225,0)
 ;sent.
"RTN","DGENELA1",226,0)
 ;
"RTN","DGENELA1",227,0)
 N SUCCESS S SUCCESS=1
"RTN","DGENELA1",228,0)
 ;
"RTN","DGENELA1",229,0)
 ;delete the rated disabilties multiple
"RTN","DGENELA1",230,0)
 D DELRDIS^DGENELA2(DFN)
"RTN","DGENELA1",231,0)
 ;
"RTN","DGENELA1",232,0)
 ;add the rated disabilities
"RTN","DGENELA1",233,0)
 K DATA,DA
"RTN","DGENELA1",234,0)
 S DA(1)=DFN
"RTN","DGENELA1",235,0)
 S COUNT=0
"RTN","DGENELA1",236,0)
 F  S COUNT=$O(DGELG("RATEDIS",COUNT)) Q:'COUNT  D
"RTN","DGENELA1",237,0)
 .S DATA(.01)=DGELG("RATEDIS",COUNT,"RD")
"RTN","DGENELA1",238,0)
 .I DATA(.01) D
"RTN","DGENELA1",239,0)
 ..S DATA(2)=DGELG("RATEDIS",COUNT,"PER")
"RTN","DGENELA1",240,0)
 ..S DATA(3)=DGELG("RATEDIS",COUNT,"RDSC")
"RTN","DGENELA1",241,0)
 ..S DATA(4)=DGELG("RATEDIS",COUNT,"RDEXT")
"RTN","DGENELA1",242,0)
 ..S DATA(5)=DGELG("RATEDIS",COUNT,"RDORIG")
"RTN","DGENELA1",243,0)
 ..S DATA(6)=DGELG("RATEDIS",COUNT,"RDCURR")
"RTN","DGENELA1",244,0)
 ..I '$$ADD^DGENDBS(2.04,.DA,.DATA) S ERROR="FILEMAN FAILED TO ADD RATED DISABILTIES",SUCCESS=0
"RTN","DGENELA1",245,0)
 Q SUCCESS
"RTN","DGENELA4")
0^9^B43140907
"RTN","DGENELA4",1,0)
DGENELA4 ;ALB/CJM,KCL,RTK,LBD - Patient Eligibility API ; 8/29/05 2:16pm
"RTN","DGENELA4",2,0)
 ;;5.3;Registration;**232,275,306,327,314,367,417,437,456,491,451,564,672**;Aug 13,1993
"RTN","DGENELA4",3,0)
 ;
"RTN","DGENELA4",4,0)
 ;
"RTN","DGENELA4",5,0)
PRIORITY(DFN,DGELG,DGELGSUB,ENRDATE,APPDATE) ;
"RTN","DGENELA4",6,0)
 ; Description: Used to compute the priority group and subgroup for a
"RTN","DGENELA4",7,0)
 ; patient, also returning the subset of the eligibility data on which 
"RTN","DGENELA4",8,0)
 ; the priority subgroup is based.
"RTN","DGENELA4",9,0)
 ;
"RTN","DGENELA4",10,0)
 ;Input:
"RTN","DGENELA4",11,0)
 ;      DFN - ien of patient
"RTN","DGENELA4",12,0)
 ;    DGELG - ELIGIBILITY object array (optional, pass by reference)
"RTN","DGENELA4",13,0)
 ;  ENRDATE - The Enrollment Date. This date is used in the priority
"RTN","DGENELA4",14,0)
 ;            determination only if the application date is not passed.
"RTN","DGENELA4",15,0)
 ;  APPDATE - The Enrollment Application Date.  This date is used
"RTN","DGENELA4",16,0)
 ;            to determine the priority. If the application date
"RTN","DGENELA4",17,0)
 ;            is not passed then the enrollment date (ENRDATE) is used.
"RTN","DGENELA4",18,0)
 ;
"RTN","DGENELA4",19,0)
 ;Output:
"RTN","DGENELA4",20,0)
 ;  Function Value - returns the priority and subgroup computed by the
"RTN","DGENELA4",21,0)
 ;    function as a 2 piece string 'PRIORITY^SUBGROUP'
"RTN","DGENELA4",22,0)
 ;  DGELGSUB - this local array will contain the eligibility data on
"RTN","DGENELA4",23,0)
 ;    which the priority determination was based, pass by reference
"RTN","DGENELA4",24,0)
 ;    if needed.
"RTN","DGENELA4",25,0)
 ;
"RTN","DGENELA4",26,0)
 N CODE,HICODE,PRI,HIPRI,PRIORITY,SUBGRP,HISUB,SUB,DGPAT
"RTN","DGENELA4",27,0)
 K DGELGSUB S DGELGSUB=""
"RTN","DGENELA4",28,0)
 S (HICODE,HIPRI,SUBGRP,HISUB)=""
"RTN","DGENELA4",29,0)
 D
"RTN","DGENELA4",30,0)
 .I '$D(DGELG),'$$GET^DGENELA(DFN,.DGELG) Q  ;can not proceed with eligibility
"RTN","DGENELA4",31,0)
 .; can't proceed without an Enrollment Date or Application Date
"RTN","DGENELA4",32,0)
 .I '$G(ENRDATE),'$G(APPDATE) Q
"RTN","DGENELA4",33,0)
 .I $$GET^DGENPTA(DFN,.DGPAT)
"RTN","DGENELA4",34,0)
 .; determine priority/subgroup based on primary eligibility
"RTN","DGENELA4",35,0)
 .S HICODE=$$NATCODE^DGENELA(DGELG("ELIG","CODE"))
"RTN","DGENELA4",36,0)
 .S PRIORITY=$$PRI(HICODE,.DGELG,$G(ENRDATE),$G(APPDATE))
"RTN","DGENELA4",37,0)
 .S HIPRI=$P(PRIORITY,"^"),HISUB=$P(PRIORITY,"^",2)
"RTN","DGENELA4",38,0)
 .S CODE=""
"RTN","DGENELA4",39,0)
 .;
"RTN","DGENELA4",40,0)
 .; determine if other eligibilities result in higher priority/subgroup
"RTN","DGENELA4",41,0)
 .F  S CODE=$O(DGELG("ELIG","CODE",CODE)) Q:('CODE!(HIPRI=1))  D
"RTN","DGENELA4",42,0)
 ..S PRIORITY=$$PRI($$NATCODE^DGENELA(CODE),.DGELG,$G(ENRDATE),$G(APPDATE))
"RTN","DGENELA4",43,0)
 ..S PRI=$P(PRIORITY,"^"),SUB=$P(PRIORITY,"^",2)
"RTN","DGENELA4",44,0)
 ..S:((PRI>0)&((PRI<HIPRI)!(HIPRI=""))) HIPRI=PRI,HICODE=$$NATCODE^DGENELA(CODE),HISUB=SUB
"RTN","DGENELA4",45,0)
 ..S:((PRI=HIPRI)&((SUB>0)&(SUB<HISUB))) HIPRI=PRI,HICODE=$$NATCODE^DGENELA(CODE),HISUB=SUB
"RTN","DGENELA4",46,0)
 .;
"RTN","DGENELA4",47,0)
 .;set the DGELGSUB() array with the eligibility information used in the
"RTN","DGENELA4",48,0)
 .;priority determination
"RTN","DGENELA4",49,0)
 .S DGELGSUB("CODE")=HICODE,DGELGSUB("SC")=DGELG("SC"),DGELGSUB("SCPER")=DGELG("SCPER"),DGELGSUB("POW")=DGELG("POW"),DGELGSUB("A&A")=DGELG("A&A"),DGELGSUB("HB")=DGELG("HB")
"RTN","DGENELA4",50,0)
 .S DGELGSUB("VAPEN")=DGELG("VAPEN"),DGELGSUB("VACKAMT")=DGELG("VACKAMT"),DGELGSUB("DISRET")=DGELG("DISRET"),DGELGSUB("DISLOD")=DGELG("DISLOD")
"RTN","DGENELA4",51,0)
 .S DGELGSUB("MEDICAID")=DGELG("MEDICAID"),DGELGSUB("AO")=DGELG("AO"),DGELGSUB("IR")=DGELG("IR"),DGELGSUB("EC")=DGELG("EC"),DGELGSUB("MTSTA")=DGELG("MTSTA")
"RTN","DGENELA4",52,0)
 .;Purple Heart Added to DGELGSUB
"RTN","DGENELA4",53,0)
 .S DGELGSUB("VCD")=DGELG("VCD"),DGELGSUB("PH")=DGELG("PH")
"RTN","DGENELA4",54,0)
 .;Added for HVE Phase III (DG*5.3*564)
"RTN","DGENELA4",55,0)
 .S DGELGSUB("UNEMPLOY")=DGELG("UNEMPLOY"),DGELGSUB("CVELEDT")=DGELG("CVELEDT")
"RTN","DGENELA4",56,0)
 .;
"RTN","DGENELA4",57,0)
 .I $G(DGPAT("INELDATE"))'="" S (HIPRI,HISUB)=""
"RTN","DGENELA4",58,0)
 ;
"RTN","DGENELA4",59,0)
 Q HIPRI_$S(HIPRI:"^"_HISUB,1:"")
"RTN","DGENELA4",60,0)
 ;
"RTN","DGENELA4",61,0)
 ;
"RTN","DGENELA4",62,0)
PRI(CODE,DGELG,ENRDATE,APPDATE) ;
"RTN","DGENELA4",63,0)
 ; Description: Returns the priority group and subgroup based on a
"RTN","DGENELA4",64,0)
 ; single eligibility code.
"RTN","DGENELA4",65,0)
 ;Input -
"RTN","DGENELA4",66,0)
 ;  CODE - pointer to file #8.1, MAS Eligibility Code
"RTN","DGENELA4",67,0)
 ;  DGELG - local array obtained by calling $$GET, pass by reference
"RTN","DGENELA4",68,0)
 ;  ENRDATE - The Enrollment Date. This date is used in the priority
"RTN","DGENELA4",69,0)
 ;            determination only if the application date is not passed.
"RTN","DGENELA4",70,0)
 ;  APPDATE - The Enrollment Application Date.  This date is used
"RTN","DGENELA4",71,0)
 ;            to determine the priority. If the application date
"RTN","DGENELA4",72,0)
 ;            is not passed then the enrollment date (ENRDATE) is used.
"RTN","DGENELA4",73,0)
 ;
"RTN","DGENELA4",74,0)
 ;Output -
"RTN","DGENELA4",75,0)
 ;  Function Value - returns the priority and subgroup computed by the
"RTN","DGENELA4",76,0)
 ;   function as a 2 piece string 'PRIORITY^SUBGROUP'
"RTN","DGENELA4",77,0)
 ;
"RTN","DGENELA4",78,0)
 N CODENAME,PRIORITY,MTSTA,SUBGRP,DGEGT,PRISUB,DGMTI,MTTHR,GMTTHR
"RTN","DGENELA4",79,0)
 S SUBGRP=""
"RTN","DGENELA4",80,0)
 ;
"RTN","DGENELA4",81,0)
 ; use the Application Date when determining the priority, otherwise use
"RTN","DGENELA4",82,0)
 ; the Enrollment Date (ESP DG*5,3*491)
"RTN","DGENELA4",83,0)
 S ENRDATE=$S($G(APPDATE):APPDATE,1:$G(ENRDATE))
"RTN","DGENELA4",84,0)
 ;
"RTN","DGENELA4",85,0)
 ;get the name of the national eligibility code
"RTN","DGENELA4",86,0)
 S CODENAME=$$CODENAME^DGENELA(CODE)
"RTN","DGENELA4",87,0)
 ;
"RTN","DGENELA4",88,0)
 ;get the means test code
"RTN","DGENELA4",89,0)
 S MTSTA=""
"RTN","DGENELA4",90,0)
 I DGELG("MTSTA") S MTSTA=$P($G(^DG(408.32,DGELG("MTSTA"),0)),"^",2)
"RTN","DGENELA4",91,0)
 ;
"RTN","DGENELA4",92,0)
 ;get MT and GMT thresholds
"RTN","DGENELA4",93,0)
 S DGMTI=$P($$LST^DGMTU(DFN),"^")
"RTN","DGENELA4",94,0)
 S MTTHR=$P($G(^DGMT(408.31,+DGMTI,0)),"^",12)
"RTN","DGENELA4",95,0)
 S GMTTHR=$P($G(^DGMT(408.31,+DGMTI,0)),"^",27)
"RTN","DGENELA4",96,0)
 ;
"RTN","DGENELA4",97,0)
 ;get the Enrollment Group Threshold (EGT) setting
"RTN","DGENELA4",98,0)
 S DGEGT=""
"RTN","DGENELA4",99,0)
 I $$GET^DGENEGT($$FINDCUR^DGENEGT(),.DGEGT)
"RTN","DGENELA4",100,0)
 ;
"RTN","DGENELA4",101,0)
 D  ;drops out when priority determined
"RTN","DGENELA4",102,0)
 .S PRIORITY=""
"RTN","DGENELA4",103,0)
 .I ((DGELG("SC")="Y")&(DGELG("SCPER")>49))!(CODENAME="SERVICE CONNECTED 50% to 100%") S PRIORITY=1 Q
"RTN","DGENELA4",104,0)
 .I (DGELG("SC")="Y")&(DGELG("SCPER")>0)&(DGELG("UNEMPLOY")="Y")&(DGELG("VACKAMT")>0)&(DGELG("VAPEN")'="Y")&(DGELG("A&A")'="Y")&(DGELG("HB")'="Y") S PRIORITY=1 Q
"RTN","DGENELA4",105,0)
 .I ((DGELG("SC")="Y")&(DGELG("SCPER")>29)&(CODENAME="SC LESS THAN 50%")) S PRIORITY=2 Q
"RTN","DGENELA4",106,0)
 .I ((DGELG("SC")="Y")&(DGELG("SCPER")>9)&(CODENAME="SC LESS THAN 50%"))!(DGELG("POW")="Y")!(CODENAME="PRISONER OF WAR")!(DGELG("DISRET")=1)!(DGELG("DISLOD")=1)!(CODENAME="PURPLE HEART RECIPIENT")!(DGELG("PH")="Y") S PRIORITY=3 Q
"RTN","DGENELA4",107,0)
 .I (DGELG("A&A")="Y")!(CODENAME="AID & ATTENDANCE")!(DGELG("HB")="Y")!(CODENAME="HOUSEBOUND")!(DGELG("VCD")="Y") S PRIORITY=4 Q
"RTN","DGENELA4",108,0)
 .I (MTSTA="A")!(DGELG("MEDICAID")=1)!(DGELG("VAPEN")="Y")!(CODENAME="NSC, VA PENSION") S PRIORITY=5 Q
"RTN","DGENELA4",109,0)
 .I (CODENAME="WORLD WAR I")!(CODENAME="MEXICAN BORDER WAR")!(DGELG("AO")="Y")!(DGELG("EC")="Y")!(DGELG("IR")="Y")!(DGELG("VACKAMT")>0)!((DGELG("CVELEDT"))&(DGELG("CVELEDT")'<DT)) S PRIORITY=6 Q
"RTN","DGENELA4",110,0)
 .I (MTSTA="G")!((MTSTA="P")&(GMTTHR>MTTHR)) S PRIORITY=7 D  Q
"RTN","DGENELA4",111,0)
 ..I ((DGELG("SC")="Y")&(DGELG("SCPER")=0)&(DGELG("VACKAMT")<1)&(CODENAME="SC LESS THAN 50%")) S SUBGRP=$$SUBPRI(DFN,.PRIORITY,1) Q
"RTN","DGENELA4",112,0)
 ..S SUBGRP=$$SUBPRI(DFN,.PRIORITY,3)
"RTN","DGENELA4",113,0)
 .I ((DGELG("SC")="Y")&(DGELG("SCPER")=0)&(DGELG("VACKAMT")<1)&(CODENAME="SC LESS THAN 50%")) S PRIORITY=8,SUBGRP=$$SUBPRI(DFN,.PRIORITY,1) Q
"RTN","DGENELA4",114,0)
 .I ((MTSTA="C")!(MTSTA="P")) S PRIORITY=8,SUBGRP=$$SUBPRI(DFN,PRIORITY,3) Q
"RTN","DGENELA4",115,0)
 ;
"RTN","DGENELA4",116,0)
 Q PRIORITY_$S(PRIORITY:"^"_SUBGRP,1:"")
"RTN","DGENELA4",117,0)
 ;
"RTN","DGENELA4",118,0)
SUBPRI(DFN,PRIORITY,SUBGRP) ;calculate sub-priority if under EGT
"RTN","DGENELA4",119,0)
 ;
"RTN","DGENELA4",120,0)
 N PRVPRI,DONE,PRVENST,ENRDT,DGENRIEN,EGT,DGENRC,TODAY,X
"RTN","DGENELA4",121,0)
 Q:'$G(DFN)
"RTN","DGENELA4",122,0)
 S U="^"
"RTN","DGENELA4",123,0)
 S:$G(PRIORITY)="" PRIORITY=""
"RTN","DGENELA4",124,0)
 S:$G(SUBGRP)="" SUBGRP=""
"RTN","DGENELA4",125,0)
 D NOW^%DTC S TODAY=X
"RTN","DGENELA4",126,0)
 Q:'$$GET^DGENEGT($$FINDCUR^DGENEGT(),.EGT) SUBGRP  ;EGT isn't set
"RTN","DGENELA4",127,0)
 Q:TODAY<EGT("EFFDATE") SUBGRP  ;EGT is not in effect
"RTN","DGENELA4",128,0)
 I "^1^3^"[(U_EGT("TYPE")_U) Q SUBGRP
"RTN","DGENELA4",129,0)
 I EGT("TYPE")=2,(PRIORITY+(SUBGRP*.01))<(EGT("PRIORITY")+(EGT("SUBGRP")*.01)) Q SUBGRP
"RTN","DGENELA4",130,0)
 I EGT("TYPE")=4 Q:(PRIORITY<EGT("PRIORITY")) SUBGRP  Q:(PRIORITY>EGT("PRIORITY")) $$SUBCNV(SUBGRP)
"RTN","DGENELA4",131,0)
 ;I $G(ENRDATE) Q:$$ABOVE2^DGENEGT1(ENRDATE,PRIORITY,SUBGRP) SUBGRP
"RTN","DGENELA4",132,0)
 S DGENRIEN=$$FINDCUR^DGENA(DFN)
"RTN","DGENELA4",133,0)
 I 'DGENRIEN,$G(ENRDATE),ENRDATE<EGT("EFFDATE") Q SUBGRP
"RTN","DGENELA4",134,0)
 S DONE=0
"RTN","DGENELA4",135,0)
 F  Q:DONE  D
"RTN","DGENELA4",136,0)
 .I 'DGENRIEN S DONE=2 Q
"RTN","DGENELA4",137,0)
 .I '$$GET^DGENA(DGENRIEN,.DGENRC) S DONE=2 Q
"RTN","DGENELA4",138,0)
 .S DGENRIEN=$$FINDPRI^DGENA(DGENRIEN)
"RTN","DGENELA4",139,0)
 .Q:DGENRC("STATUS")=6   ;deceased
"RTN","DGENELA4",140,0)
 .I $P($G(^DGEN(27.15,+DGENRC("STATUS"),0)),"^",2)="N" S DONE=2 Q
"RTN","DGENELA4",141,0)
 .S ENRDT=$G(DGENRC("APP")) S:'ENRDT ENRDT=$G(DGENRC("EFFDATE"))
"RTN","DGENELA4",142,0)
 .I ENRDT,ENRDT<EGT("EFFDATE") S DONE=1 Q
"RTN","DGENELA4",143,0)
 .; HEC is the authoritative source on continuous enrollment
"RTN","DGENELA4",144,0)
 .I $$OVRRIDE^DGENEGT1(DFN,.EGT) S DONE=1
"RTN","DGENELA4",145,0)
 ;
"RTN","DGENELA4",146,0)
 Q $S(DONE=2:$$SUBCNV(SUBGRP),1:SUBGRP)
"RTN","DGENELA4",147,0)
 ;
"RTN","DGENELA4",148,0)
SUBCNV(SUBGRP) ;return new subgrp
"RTN","DGENELA4",149,0)
 I SUBGRP=1 Q 5
"RTN","DGENELA4",150,0)
 I SUBGRP=3 Q 7
"RTN","DGENELA4",151,0)
 Q SUBGRP
"RTN","DGENL1")
0^10^B60652220
"RTN","DGENL1",1,0)
DGENL1 ;ALB/RMO,ISA/KWP,Zoltan,ALB/BRM,LBD,ERC - Patient Enrollment - Build List Area; 10/23/00 9:49am ; 10/6/05 12:51pm
"RTN","DGENL1",2,0)
 ;;5.3;Registration;**121,147,232,266,343,564,672**;Aug 13,1993
"RTN","DGENL1",3,0)
 ;
"RTN","DGENL1",4,0)
EN(DGARY,DFN,DGENRIEN,DGCNT) ;Entry point to build list area
"RTN","DGENL1",5,0)
 ; for patient enrollment and patient enrollment history
"RTN","DGENL1",6,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",7,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",8,0)
 ;           DGENRIEN Enrollment IEN
"RTN","DGENL1",9,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",10,0)
 N DGENCAT,DGENR,DGLINE
"RTN","DGENL1",11,0)
 I DGENRIEN,$$GET^DGENA(DGENRIEN,.DGENR) ;set-up enrollment array
"RTN","DGENL1",12,0)
 S DGENCAT=$$CATEGORY^DGENA4(,$G(DGENR("STATUS")))  ;enrollment category
"RTN","DGENL1",13,0)
 S DGENCAT=$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)
"RTN","DGENL1",14,0)
 S DGLINE=1,DGCNT=0
"RTN","DGENL1",15,0)
 D ENR(DGARY,DFN,.DGENR,.DGLINE,.DGCNT) ;enrollment
"RTN","DGENL1",16,0)
 D PF(DGARY,DFN,.DGENR,.DGLINE,.DGCNT) ;priority factors
"RTN","DGENL1",17,0)
 D HIS^DGENL2(DGARY,DFN,DGENRIEN,.DGLINE,.DGCNT) ;history
"RTN","DGENL1",18,0)
 Q
"RTN","DGENL1",19,0)
 ;
"RTN","DGENL1",20,0)
ENR(DGARY,DFN,DGENR,DGLINE,DGCNT) ;Enrollment 
"RTN","DGENL1",21,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",22,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",23,0)
 ;           DGENR    Enrollment array
"RTN","DGENL1",24,0)
 ;           DGLINE   Line number
"RTN","DGENL1",25,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",26,0)
 N DGSTART
"RTN","DGENL1",27,0)
 ;
"RTN","DGENL1",28,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGENL1",29,0)
 D SET(DGARY,DGLINE,"Enrollment",31,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",30,0)
 ;
"RTN","DGENL1",31,0)
 ;Enrollment Date
"RTN","DGENL1",32,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",33,0)
 D SET(DGARY,DGLINE,"Enrollment Date: "_$S($G(DGENR("DATE")):$$EXT^DGENU("DATE",DGENR("DATE")),1:""),11,,,,,,.DGCNT)
"RTN","DGENL1",34,0)
 ;
"RTN","DGENL1",35,0)
 ;
"RTN","DGENL1",36,0)
 ;Enrollment End Date
"RTN","DGENL1",37,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",38,0)
 D SET(DGARY,DGLINE,"Enrollment End Date: "_$S($G(DGENR("END")):$$EXT^DGENU("END",DGENR("END")),1:""),7,,,,,,.DGCNT)
"RTN","DGENL1",39,0)
 ;
"RTN","DGENL1",40,0)
 ;Enrollment Application Date
"RTN","DGENL1",41,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",42,0)
 D SET(DGARY,DGLINE,"Application Date: "_$S($G(DGENR("APP")):$$EXT^DGENU("APP",DGENR("APP")),1:""),10,,,,,,.DGCNT)
"RTN","DGENL1",43,0)
 ;
"RTN","DGENL1",44,0)
 ;Source
"RTN","DGENL1",45,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",46,0)
 D SET(DGARY,DGLINE,"Source of Enrollment: "_$S($G(DGENR("SOURCE")):$$EXT^DGENU("SOURCE",DGENR("SOURCE")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",47,0)
 ;
"RTN","DGENL1",48,0)
 ;Category
"RTN","DGENL1",49,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",50,0)
 D SET(DGARY,DGLINE,"Enrollment Category: "_DGENCAT,7,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",51,0)
 ;
"RTN","DGENL1",52,0)
 ;Status
"RTN","DGENL1",53,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",54,0)
 D SET(DGARY,DGLINE,"Enrollment Status: "_$S($G(DGENR("STATUS")):$$EXT^DGENU("STATUS",DGENR("STATUS")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",55,0)
 ;
"RTN","DGENL1",56,0)
 ;Priority
"RTN","DGENL1",57,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",58,0)
 D SET(DGARY,DGLINE,"Enrollment Priority: "_$S($G(DGENR("PRIORITY")):DGENR("PRIORITY"),1:"")_$S($G(DGENR("SUBGRP")):$$EXT^DGENU("SUBGRP",DGENR("SUBGRP")),1:""),7,,,,,,.DGCNT)
"RTN","DGENL1",59,0)
 ;
"RTN","DGENL1",60,0)
 ;
"RTN","DGENL1",61,0)
 ;Effective date
"RTN","DGENL1",62,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",63,0)
 D SET(DGARY,DGLINE,"Effective Date: "_$S($G(DGENR("EFFDATE")):$$EXT^DGENU("EFFDATE",DGENR("EFFDATE")),1:""),12,,,,,,.DGCNT)
"RTN","DGENL1",64,0)
 ;
"RTN","DGENL1",65,0)
 ;Reason canceled/declined
"RTN","DGENL1",66,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",67,0)
 D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",68,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",69,0)
 D SET(DGARY,DGLINE,"Reason Canceled/Declined: "_$S($G(DGENR("REASON")):$$EXT^DGENU("REASON",DGENR("REASON")),1:""),2,,,,,,.DGCNT)
"RTN","DGENL1",70,0)
 ;
"RTN","DGENL1",71,0)
 ;Canceled/declined remarks
"RTN","DGENL1",72,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",73,0)
 D SET(DGARY,DGLINE,"Canceled/Declined Remarks: "_$S($G(DGENR("REASON"))'="":$$EXT^DGENU("REMARKS",DGENR("REMARKS")),1:""),1,,,,,,.DGCNT)
"RTN","DGENL1",74,0)
 ;
"RTN","DGENL1",75,0)
 ;Entered by
"RTN","DGENL1",76,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",77,0)
 D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",78,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",79,0)
 D SET(DGARY,DGLINE,"Entered By: "_$S($G(DGENR("USER")):$$EXT^DGENU("USER",DGENR("USER")),1:""),16,,,,,,.DGCNT)
"RTN","DGENL1",80,0)
 ;
"RTN","DGENL1",81,0)
 ;Date/time entered
"RTN","DGENL1",82,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",83,0)
 D SET(DGARY,DGLINE,"Date/Time Entered: "_$S($G(DGENR("DATETIME")):$$EXT^DGENU("DATETIME",DGENR("DATETIME")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",84,0)
 ;
"RTN","DGENL1",85,0)
 ;Set line to start on next page
"RTN","DGENL1",86,0)
 F DGLINE=DGLINE+1:1:DGSTART+VALM("LINES") D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",87,0)
 Q
"RTN","DGENL1",88,0)
 ;
"RTN","DGENL1",89,0)
PF(DGARY,DFN,DGENR,DGLINE,DGCNT) ;Priority factors 
"RTN","DGENL1",90,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL1",91,0)
 ;           DFN      Patient IEN
"RTN","DGENL1",92,0)
 ;           DGENR    Enrollment array
"RTN","DGENL1",93,0)
 ;           DGLINE   Line number
"RTN","DGENL1",94,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL1",95,0)
 N DGSTART
"RTN","DGENL1",96,0)
 ;
"RTN","DGENL1",97,0)
 S DGSTART=DGLINE ; starting line number
"RTN","DGENL1",98,0)
 D SET(DGARY,DGLINE,"Priority Factors",31,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL1",99,0)
 ;
"RTN","DGENL1",100,0)
 ;POW
"RTN","DGENL1",101,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",102,0)
 D SET(DGARY,DGLINE,"POW: "_$S($G(DGENR("ELIG","POW"))'="":$$EXT^DGENU("POW",DGENR("ELIG","POW")),1:""),19,,,,,,.DGCNT)
"RTN","DGENL1",103,0)
 ;
"RTN","DGENL1",104,0)
 ;Purple Heart - added for patch 343;brm;10/23/00
"RTN","DGENL1",105,0)
 N PHDAT
"RTN","DGENL1",106,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",107,0)
 S PHDAT=$$PHEART(DFN,$G(DGENRIEN),$G(DGENR("DATETIME")))
"RTN","DGENL1",108,0)
 D SET(DGARY,DGLINE,"Purple Hrt: "_$P(PHDAT,U),12,,,,,,.DGCNT)
"RTN","DGENL1",109,0)
 D:$P(PHDAT,U)="YES" SET(DGARY,DGLINE,"Status: "_$P(PHDAT,U,2),32,,,,,,.DGCNT)
"RTN","DGENL1",110,0)
 D:$P(PHDAT,U)="NO" SET(DGARY,DGLINE,"Remarks: "_$P(PHDAT,U,3),31,,,,,,.DGCNT)
"RTN","DGENL1",111,0)
 ;
"RTN","DGENL1",112,0)
 ;Agent orange
"RTN","DGENL1",113,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",114,0)
 D SET(DGARY,DGLINE,"A/O Exp.: "_$S($G(DGENR("ELIG","AO"))'="":$$EXT^DGENU("AO",DGENR("ELIG","AO")),1:""),14,,,,,,.DGCNT)
"RTN","DGENL1",115,0)
 ;
"RTN","DGENL1",116,0)
 ;Ionizing radiation
"RTN","DGENL1",117,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",118,0)
 D SET(DGARY,DGLINE,"ION Rad.: "_$S($G(DGENR("ELIG","IR"))'="":$$EXT^DGENU("IR",DGENR("ELIG","IR")),1:""),14,,,,,,.DGCNT)
"RTN","DGENL1",119,0)
 ;
"RTN","DGENL1",120,0)
 ;Environmental contaminants
"RTN","DGENL1",121,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",122,0)
 D SET(DGARY,DGLINE,"Env Contam: "_$S($G(DGENR("ELIG","EC"))'="":$$EXT^DGENU("EC",DGENR("ELIG","EC")),1:""),12,,,,,,.DGCNT)
"RTN","DGENL1",123,0)
 ;
"RTN","DGENL1",124,0)
 ;Military retirement - new fields added with DG*5.3*672
"RTN","DGENL1",125,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",126,0)
 S DGRET=$G(DGENR("ELIG","DISRET"))
"RTN","DGENL1",127,0)
 D SET(DGARY,DGLINE,"Mil Disab Retirement: "_$S($G(DGRET)=0:"NO",$G(DGRET)=1:"YES",$G(DGRET)=2:"YES",$G(DGRET)=3:"UNK",1:""),2,,,,,,.DGCNT)
"RTN","DGENL1",128,0)
 D SET(DGARY,DGLINE,"Dischrg Due to Disab: "_$S($G(DGENR("ELIG","DISLOD"))'="":$$EXT^DGENU("DISLOD",DGENR("ELIG","DISLOD")),1:""),42,,,,,,.DGCNT)
"RTN","DGENL1",129,0)
 ;
"RTN","DGENL1",130,0)
 ;Combat Vet End Date (added for DG*5.3*564 - HVE Phase III)
"RTN","DGENL1",131,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",132,0)
 D SET(DGARY,DGLINE,"Combat Vet End Date: "_$S($G(DGENR("ELIG","CVELEDT"))'="":$$EXT^DGENU("CVELEDT",DGENR("ELIG","CVELEDT")),1:""),3,,,,,,.DGCNT)
"RTN","DGENL1",133,0)
 ;
"RTN","DGENL1",134,0)
 ;Eligible for medicaid
"RTN","DGENL1",135,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",136,0)
 D SET(DGARY,DGLINE,"Eligible for MEDICAID: "_$S($G(DGENR("ELIG","MEDICAID"))'="":$$EXT^DGENU("MEDICAID",DGENR("ELIG","MEDICAID")),1:""),1,,,,,,.DGCNT)
"RTN","DGENL1",137,0)
 ;
"RTN","DGENL1",138,0)
 ;Service connected and percentage
"RTN","DGENL1",139,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",140,0)
 D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",141,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",142,0)
 D SET(DGARY,DGLINE,"Svc Connected: "_$S($G(DGENR("ELIG","SC"))'="":$$EXT^DGENU("SC",DGENR("ELIG","SC")),1:""),9,,,,,,.DGCNT)
"RTN","DGENL1",143,0)
 D SET(DGARY,DGLINE,"SC Percent: "_$S($G(DGENR("ELIG","SCPER"))'="":$$EXT^DGENU("SCPER",DGENR("ELIG","SCPER"))_"%",1:""),52,,,,,,.DGCNT)
"RTN","DGENL1",144,0)
 ;
"RTN","DGENL1",145,0)
 ;Aid & attendance and housebound
"RTN","DGENL1",146,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",147,0)
 D SET(DGARY,DGLINE,"Aid & Attendance: "_$S($G(DGENR("ELIG","A&A"))'="":$$EXT^DGENU("A&A",DGENR("ELIG","A&A")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",148,0)
 D SET(DGARY,DGLINE,"Housebound: "_$S($G(DGENR("ELIG","HB"))'="":$$EXT^DGENU("HB",DGENR("ELIG","HB")),1:""),52,,,,,,.DGCNT)
"RTN","DGENL1",149,0)
 ;
"RTN","DGENL1",150,0)
 ;VA Pension
"RTN","DGENL1",151,0)
 ;Unemployable (added for DG*5.3*564 - HVE Phase III)
"RTN","DGENL1",152,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",153,0)
 D SET(DGARY,DGLINE,"VA Pension: "_$S($G(DGENR("ELIG","VAPEN"))'="":$$EXT^DGENU("VAPEN",DGENR("ELIG","VAPEN")),1:""),12,,,,,,.DGCNT)
"RTN","DGENL1",154,0)
 D SET(DGARY,DGLINE,"Unemployable: "_$S($G(DGENR("ELIG","UNEMPLOY"))'="":$$EXT^DGENU("UNEMPLOY",DGENR("ELIG","UNEMPLOY")),1:""),50,,,,,,.DGCNT)
"RTN","DGENL1",155,0)
 ;
"RTN","DGENL1",156,0)
 ;Total check amount
"RTN","DGENL1",157,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",158,0)
 D SET(DGARY,DGLINE,"Total Check Amount: "_$S($G(DGENR("ELIG","VACKAMT"))'="":$$EXT^DGENU("VACKAMT",DGENR("ELIG","VACKAMT")),1:""),4,,,,,,.DGCNT)
"RTN","DGENL1",159,0)
 ;
"RTN","DGENL1",160,0)
 ;Eligibility code
"RTN","DGENL1",161,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",162,0)
 D SET(DGARY,DGLINE,"Eligibility Code: "_$S($G(DGENR("ELIG","CODE"))'="":$$EXT^DGENU("CODE",DGENR("ELIG","CODE")),1:""),6,,,,,,.DGCNT)
"RTN","DGENL1",163,0)
 ;
"RTN","DGENL1",164,0)
 ;Means test
"RTN","DGENL1",165,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",166,0)
 D SET(DGARY,DGLINE,"Means Test Status: "_$S($G(DGENR("ELIG","MTSTA"))'="":$$EXT^DGENU("MTSTA",DGENR("ELIG","MTSTA")),1:""),5,,,,,,.DGCNT)
"RTN","DGENL1",167,0)
 ;
"RTN","DGENL1",168,0)
 ;Veteran Catastrophically Disabled
"RTN","DGENL1",169,0)
 S DGLINE=DGLINE+1
"RTN","DGENL1",170,0)
 D SET(DGARY,DGLINE,"Veteran CD Status: "_$S($G(DGENR("ELIG","VCD"))'="":$$EXT^DGENU("VCD",DGENR("ELIG","VCD")),1:""),5,,,,,,.DGCNT)
"RTN","DGENL1",171,0)
 ;
"RTN","DGENL1",172,0)
 ;Set line to start on next page
"RTN","DGENL1",173,0)
 F DGLINE=DGLINE+1:1:DGSTART+VALM("LINES") D SET(DGARY,DGLINE,"",1,,,,,,.DGCNT)
"RTN","DGENL1",174,0)
 Q
"RTN","DGENL1",175,0)
 ;
"RTN","DGENL1",176,0)
SET(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGSUB,DGNUM,DGDATA,DGCNT) ; moved to
"RTN","DGENL1",177,0)
 ;DGENL2 as DGENL1 was getting too big
"RTN","DGENL1",178,0)
 I $G(DGCOL)']"" S DGCOL=""
"RTN","DGENL1",179,0)
 I $G(DGON)']"" S DGON=""
"RTN","DGENL1",180,0)
 I $G(DGOFF)']"" S DGOFF=""
"RTN","DGENL1",181,0)
 I $G(DGSUB)']"" S DGSUB=""
"RTN","DGENL1",182,0)
 I $G(DGNUM)']"" S DGNUM=""
"RTN","DGENL1",183,0)
 I $G(DGDATA)']"" S DGDATA=""
"RTN","DGENL1",184,0)
 D SET^DGENL2(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGSUB,DGNUM,DGDATA,.DGCNT)
"RTN","DGENL1",185,0)
 Q
"RTN","DGENL1",186,0)
PHEART(DFN,DGENRIEN,PHENRDT) ;move to DGENL2
"RTN","DGENL1",187,0)
 S PHDAT=$$PHEART^DGENL2(DFN,$G(DGENRIEN),$G(DGENR("DATETIME")))
"RTN","DGENL1",188,0)
 I ($G(PHI)]""!($G(PHST)]"")!($G(PHRR)]"")) Q $G(PHI)_"^"_$G(PHST)_"^"_$G(PHRR)
"RTN","DGENL1",189,0)
 Q ""
"RTN","DGENL2")
0^11^B13612542
"RTN","DGENL2",1,0)
DGENL2 ;ALB/RMO - Patient Enrollment - Build List Area Cont.;16 JUN 1997 ; 7/8/05 1:37pm
"RTN","DGENL2",2,0)
 ;;5.3;Registration;**121,147,232,306,417,672**;Aug 13,1993
"RTN","DGENL2",3,0)
 ;
"RTN","DGENL2",4,0)
HIS(DGARY,DFN,DGENRIEN,DGLINE,DGCNT) ;Enrollment history 
"RTN","DGENL2",5,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL2",6,0)
 ;           DFN      Patient IEN
"RTN","DGENL2",7,0)
 ;           DGENRIEN Enrollment IEN
"RTN","DGENL2",8,0)
 ;           DGLINE   Line number
"RTN","DGENL2",9,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL2",10,0)
 N DGENR,DGNUM,DGPRIEN,DGSTART
"RTN","DGENL2",11,0)
 ;
"RTN","DGENL2",12,0)
 S DGSTART=DGLINE ;starting line number
"RTN","DGENL2",13,0)
 S DGNUM=0 ;selection number
"RTN","DGENL2",14,0)
 D SET(DGARY,DGLINE,"Enrollment History",31,IORVON,IORVOFF,,,,.DGCNT)
"RTN","DGENL2",15,0)
 ;
"RTN","DGENL2",16,0)
 ;Enrollment date, status, priority, date/time entered
"RTN","DGENL2",17,0)
 S DGLINE=DGLINE+1
"RTN","DGENL2",18,0)
 D SET(DGARY,DGLINE," Effective Date     Status              Priority    Date/Time Entered",5,,,,,,.DGCNT)
"RTN","DGENL2",19,0)
 S DGLINE=DGLINE+1
"RTN","DGENL2",20,0)
 D SET(DGARY,DGLINE,"===============================================================================",1,,,,,,.DGCNT)
"RTN","DGENL2",21,0)
 S DGPRIEN=DGENRIEN
"RTN","DGENL2",22,0)
 F  S DGPRIEN=$$FINDPRI^DGENA(DGPRIEN) Q:'DGPRIEN  D
"RTN","DGENL2",23,0)
 . I $$GET^DGENA(DGPRIEN,.DGENR) D
"RTN","DGENL2",24,0)
 . . S DGNUM=DGNUM+1
"RTN","DGENL2",25,0)
 . . S DGLINE=DGLINE+1
"RTN","DGENL2",26,0)
 . . D SET(DGARY,DGLINE,DGNUM,1,,,"EH",DGNUM,DGPRIEN,.DGCNT)
"RTN","DGENL2",27,0)
 . . D SET(DGARY,DGLINE,$S($G(DGENR("EFFDATE")):$$EXT^DGENU("EFFDATE",DGENR("EFFDATE")),1:""),5,,,,,,.DGCNT)
"RTN","DGENL2",28,0)
 . . D SET(DGARY,DGLINE,$S($G(DGENR("STATUS")):$E($$EXT^DGENU("STATUS",DGENR("STATUS")),1,19),1:""),25,,,,,,.DGCNT)
"RTN","DGENL2",29,0)
 . . D SET(DGARY,DGLINE,$S($G(DGENR("PRIORITY")):DGENR("PRIORITY")_$$EXTERNAL^DILFD(27.11,.12,"F",$G(DGENR("SUBGRP"))),1:""),45,,,,,,.DGCNT)
"RTN","DGENL2",30,0)
 . . D SET(DGARY,DGLINE,$S($G(DGENR("DATETIME")):$$EXT^DGENU("DATETIME",DGENR("DATETIME")),1:""),57,,,,,,.DGCNT)
"RTN","DGENL2",31,0)
 Q
"RTN","DGENL2",32,0)
 ;this SET subroutine is being moved to DGENL2 from DGENL1, which has 
"RTN","DGENL2",33,0)
 ;gotten too big.  patch DG*5.3*653
"RTN","DGENL2",34,0)
SET(DGARY,DGLINE,DGTEXT,DGCOL,DGON,DGOFF,DGSUB,DGNUM,DGDATA,DGCNT) ; -- set display array
"RTN","DGENL2",35,0)
 ; Input  -- DGARY    Global array subscript
"RTN","DGENL2",36,0)
 ;           DGLINE   Line number
"RTN","DGENL2",37,0)
 ;           DGTEXT   Text
"RTN","DGENL2",38,0)
 ;           DGCOL    Column to start at              (optional)
"RTN","DGENL2",39,0)
 ;           DGON     Highlighting on                 (optional)
"RTN","DGENL2",40,0)
 ;           DGOFF    Highlighting off                (optional)
"RTN","DGENL2",41,0)
 ;           DGSUB    Secondary list subscript        (optional)
"RTN","DGENL2",42,0)
 ;           DGNUM    Selection number                (optional)
"RTN","DGENL2",43,0)
 ;           DGDATA   Data associated with selection  (optional)
"RTN","DGENL2",44,0)
 ; Output -- DGCNT    Number of lines in the list
"RTN","DGENL2",45,0)
 N X
"RTN","DGENL2",46,0)
 S:DGLINE>DGCNT DGCNT=DGLINE
"RTN","DGENL2",47,0)
 S X=$S($D(^TMP(DGARY,$J,DGLINE,0)):^(0),1:"")
"RTN","DGENL2",48,0)
 S ^TMP(DGARY,$J,DGLINE,0)=$$SETSTR^VALM1(DGTEXT,X,DGCOL,$L(DGTEXT))
"RTN","DGENL2",49,0)
 D:$G(DGON)]""!($G(DGOFF)]"") CNTRL^VALM10(DGLINE,DGCOL,$L(DGTEXT),$G(DGON),$G(DGOFF))
"RTN","DGENL2",50,0)
 ;Set-up special index for secondary selection list
"RTN","DGENL2",51,0)
 S:$G(DGSUB)]"" ^TMP(DGARY_"IDX",$J,DGSUB,DGNUM,DGLINE)=DGDATA,^TMP(DGARY_"IDX",$J,DGSUB,0)=DGNUM
"RTN","DGENL2",52,0)
 Q
"RTN","DGENL2",53,0)
PHEART(DFN,DGENRIEN,PHENRDT) ;find Purple Heart information based on enrollment date
"RTN","DGENL2",54,0)
 N NXTENR,NXTENDT,PRVENR,PRVENDT,PHARY,PHI,PHST,PHRR,PHDIERR
"RTN","DGENL2",55,0)
 N NXTDIF,NXTENTM,NXTPHDT,NXTPHTM,PHENTM,PHREC,PRVDIF,PRVPHDT
"RTN","DGENL2",56,0)
 S U="^",(PRVDIF,NXTDIF)=""
"RTN","DGENL2",57,0)
 Q:'(PHENRDT&DGENRIEN) ""
"RTN","DGENL2",58,0)
 S PRVENDT=0,NXTENDT=9999999
"RTN","DGENL2",59,0)
 S PRVENR=$O(^DGEN(27.11,"C",DFN,DGENRIEN),-1)
"RTN","DGENL2",60,0)
 S:PRVENR PRVENDT=$P($G(^DGEN(27.11,PRVENR,"U")),U)
"RTN","DGENL2",61,0)
 S PRVPHDT=$O(^DPT(DFN,"PH","B",PHENRDT),-1)
"RTN","DGENL2",62,0)
 S NXTENR=$O(^DGEN(27.11,"C",DFN,DGENRIEN))
"RTN","DGENL2",63,0)
 S:NXTENR NXTENDT=$P($G(^DGEN(27.11,NXTENR,"U")),U)
"RTN","DGENL2",64,0)
 S NXTPHDT=$O(^DPT(DFN,"PH","B",PHENRDT-.0000001))
"RTN","DGENL2",65,0)
 I NXTPHDT<NXTENDT,$P(PHENRDT,".")=$P(NXTPHDT,".")  D
"RTN","DGENL2",66,0)
 .I $P(NXTENDT,".")=$P(NXTPHDT,".")  D
"RTN","DGENL2",67,0)
 ..S NXTPHTM=$P(NXTPHDT,".",2),NXTENTM=$P(NXTENDT,".",2),PHENTM=$P(PHENRDT,".",2)
"RTN","DGENL2",68,0)
 ..S NXTDIF=NXTENTM-NXTPHTM,PRVDIF=NXTPHTM-PHENTM
"RTN","DGENL2",69,0)
 ..S:PRVDIF<NXTDIF PHREC=$O(^DPT(DFN,"PH","B",NXTPHDT,""))
"RTN","DGENL2",70,0)
 .E  S PHREC=$O(^DPT(DFN,"PH","B",NXTPHDT,""))
"RTN","DGENL2",71,0)
 Q:'$D(PHREC)&('PRVPHDT) ""
"RTN","DGENL2",72,0)
 S:'$D(PHREC) PHREC=$O(^DPT(DFN,"PH","B",PRVPHDT,""))
"RTN","DGENL2",73,0)
 Q:'$D(PHREC) ""
"RTN","DGENL2",74,0)
 S PHARY=$G(^DPT(DFN,"PH",PHREC,0))
"RTN","DGENL2",75,0)
 S PHI=$$EXTERNAL^DILFD(2,.531,,$P(PHARY,U,2),.PHDIERR)
"RTN","DGENL2",76,0)
 S PHST=$$EXTERNAL^DILFD(2,.532,,$P(PHARY,U,3),.PHDIERR)
"RTN","DGENL2",77,0)
 S PHRR=$$EXTERNAL^DILFD(2,.533,,$P(PHARY,U,4),.PHDIERR)
"RTN","DGENL2",78,0)
 Q PHI_"^"_PHST_"^"_PHRR
"RTN","DGENU")
0^12^B37061085
"RTN","DGENU",1,0)
DGENU ;ALB/CJM,ISA/KWP,Zoltan,LBD - Enrollment Utilities; 12/11/00 4:33pm ; 8/11/05 1:05pm
"RTN","DGENU",2,0)
 ;;5.3;Registration;**121,122,147,232,314,564,624,672**;Aug 13,1993
"RTN","DGENU",3,0)
 ;
"RTN","DGENU",4,0)
DISPLAY(DFN) ;
"RTN","DGENU",5,0)
 ;Description: Display status message, current enrollment and
"RTN","DGENU",6,0)
 ;     preferred facility information
"RTN","DGENU",7,0)
 ;Input:
"RTN","DGENU",8,0)
 ;  DFN - Patient IEN
"RTN","DGENU",9,0)
 ;  Output:     none
"RTN","DGENU",10,0)
 ;
"RTN","DGENU",11,0)
 N STATUS
"RTN","DGENU",12,0)
 S STATUS=$$STATUS^DGENA(DFN)
"RTN","DGENU",13,0)
 I 'STATUS W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",14,0)
 E  I STATUS=2 D
"RTN","DGENU",15,0)
 .W !!,"Patient is enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",16,0)
 ; Purple Heart added status 21
"RTN","DGENU",17,0)
 E  I (STATUS=9)!(STATUS=1)!(STATUS=15)!(STATUS=16)!(STATUS=17)!(STATUS=18)!(STATUS=21) D
"RTN","DGENU",18,0)
 .W !!,"Application is pending for enrollment in the VA Patient Enrollment System..."
"RTN","DGENU",19,0)
 E  D
"RTN","DGENU",20,0)
 .W !!,"Patient is NOT enrolled in the VA Patient Enrollment System..."
"RTN","DGENU",21,0)
 D CUR(DFN)
"RTN","DGENU",22,0)
 Q
"RTN","DGENU",23,0)
 ;
"RTN","DGENU",24,0)
CUR(DFN) ;
"RTN","DGENU",25,0)
 ;Description - displays current enrollment, category, enrollment group threshold, and preferred facility
"RTN","DGENU",26,0)
 ;
"RTN","DGENU",27,0)
 N FACNAME,PREFAC,DGEGT,DGEGTIEN,DGENCAT,DGENR,IORVON,IORVOFF
"RTN","DGENU",28,0)
 I $$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR)
"RTN","DGENU",29,0)
 ;Get enrollment category
"RTN","DGENU",30,0)
 S DGENCAT=$$CATEGORY^DGENA4(DFN)
"RTN","DGENU",31,0)
 ;Display Category in reverse video
"RTN","DGENU",32,0)
 D REV
"RTN","DGENU",33,0)
 ;Get enrollment group threshold
"RTN","DGENU",34,0)
 S DGEGTIEN=$$FINDCUR^DGENEGT
"RTN","DGENU",35,0)
 S DGEGT=$$GET^DGENEGT(DGEGTIEN,.DGEGT)
"RTN","DGENU",36,0)
 ;Preferred facility
"RTN","DGENU",37,0)
 S PREFAC=$$PREF^DGENPTA(DFN,.FACNAME)
"RTN","DGENU",38,0)
 W !?3,"Enrollment Date",?35,": ",$S('$G(DGENR("DATE")):"-none-",1:$$EXT^DGENU("DATE",DGENR("DATE")))
"RTN","DGENU",39,0)
 W !?3,"Enrollment Application Date",?35,": ",$S('$G(DGENR("APP")):"-none-",1:$$EXT^DGENU("DATE",DGENR("APP")))
"RTN","DGENU",40,0)
 W !?3,IORVON,"Enrollment Category             : ",$S($G(DGENCAT)="":"-none-",1:$$EXTERNAL^DILFD(27.15,.02,"",DGENCAT)),IORVOFF
"RTN","DGENU",41,0)
 W !?3,"Enrollment Status",?35,": ",$S($G(DGENR("STATUS"))="":"-none-",1:$$EXT^DGENU("STATUS",DGENR("STATUS")))
"RTN","DGENU",42,0)
 W !?3,"Enrollment Priority",?35,": ",$S($G(DGENR("PRIORITY"))="":"-none-",1:DGENR("PRIORITY")),$S($G(DGENR("SUBGRP"))="":"",1:$$EXT("SUBGRP",DGENR("SUBGRP")))
"RTN","DGENU",43,0)
 W !?3,"Preferred Facility",?35,": ",$S($G(FACNAME)'="":FACNAME,1:"-none-")
"RTN","DGENU",44,0)
 W !?3,"Enrollment Group Threshold",?35,": ",$S($G(DGEGT("PRIORITY"))="":"-none-",1:$$EXTERNAL^DILFD(27.16,.02,"",$G(DGEGT("PRIORITY")))),$S($G(DGEGT("SUBGRP"))="":"",1:$$EXTERNAL^DILFD(27.16,.03,"",$G(DGEGT("SUBGRP"))))
"RTN","DGENU",45,0)
 W !
"RTN","DGENU",46,0)
 Q
"RTN","DGENU",47,0)
REV ;Get variables to display text in reverse video
"RTN","DGENU",48,0)
 N X
"RTN","DGENU",49,0)
 S X="IORVON;IORVOFF"
"RTN","DGENU",50,0)
 D ENDR^%ZISS
"RTN","DGENU",51,0)
 Q
"RTN","DGENU",52,0)
PATID(DFN) ;
"RTN","DGENU",53,0)
 ;Description - Called by FileMan as an identifier for the Patient file.
"RTN","DGENU",54,0)
 ;Displays current enrollment status, priority, and preferred facility.
"RTN","DGENU",55,0)
 ;
"RTN","DGENU",56,0)
 ;Input:
"RTN","DGENU",57,0)
 ;  DFN - ien to Patient file
"RTN","DGENU",58,0)
 ;
"RTN","DGENU",59,0)
 N PREFAC,DGENR,OUTPUT
"RTN","DGENU",60,0)
 I '$$GET^DGENA($$FINDCUR^DGENA(DFN),.DGENR) D
"RTN","DGENU",61,0)
 .S OUTPUT="NO ENROLLMENT APPLICATION ON FILE "
"RTN","DGENU",62,0)
 E  D
"RTN","DGENU",63,0)
 .S OUTPUT=$E("PRIORITY:"_DGENR("PRIORITY")_"   ",1,12)_$E("STATUS:"_$$EXT^DGENU("STATUS",DGENR("STATUS"))_"         ",1,26)
"RTN","DGENU",64,0)
 S PREFAC=$$PREF^DGENPTA(DFN)
"RTN","DGENU",65,0)
 S:PREFAC OUTPUT=OUTPUT_"PREFERRED FACILITY:"_$P($G(^DIC(4,PREFAC,99)),"^")
"RTN","DGENU",66,0)
 I $G(IOM) I ($X#$G(IOM))<6 D
"RTN","DGENU",67,0)
 .D EN^DDIOL(OUTPUT,,"?($X+(10-($X#IOM)))")
"RTN","DGENU",68,0)
 E  D
"RTN","DGENU",69,0)
 .D EN^DDIOL(OUTPUT,,"!?10")
"RTN","DGENU",70,0)
 Q
"RTN","DGENU",71,0)
 ;
"RTN","DGENU",72,0)
EXT(SUB,VAL) ;
"RTN","DGENU",73,0)
 ;Description: Given the subscript used in the PATIENT ENROLLMENT array,
"RTN","DGENU",74,0)
 ;     and a field value, returns the external representation of the
"RTN","DGENU",75,0)
 ;     value, as defined in the fields output transform of the PATIENT
"RTN","DGENU",76,0)
 ;     ENROLLMENT file.
"RTN","DGENU",77,0)
 ;Input: 
"RTN","DGENU",78,0)
 ;  SUB - subscript in the array defined by the PATIENT ENROLLMENT object
"RTN","DGENU",79,0)
 ;  VAL - value of the PATIENT ENROLLMENT object attribute named by SUB
"RTN","DGENU",80,0)
 ;Output:
"RTN","DGENU",81,0)
 ;  Function Value - returns the external value of the attribute as
"RTN","DGENU",82,0)
 ;     defined by the PATIENT ENROLLMENT file
"RTN","DGENU",83,0)
 ;
"RTN","DGENU",84,0)
 Q:(($G(SUB)="")!($G(VAL)="")) ""
"RTN","DGENU",85,0)
 ;
"RTN","DGENU",86,0)
 N FLD
"RTN","DGENU",87,0)
 S FLD=$$FIELD(SUB)
"RTN","DGENU",88,0)
 ;
"RTN","DGENU",89,0)
 Q:(FLD="") ""
"RTN","DGENU",90,0)
 Q $$EXTERNAL^DILFD(27.11,FLD,"F",VAL)
"RTN","DGENU",91,0)
 ;
"RTN","DGENU",92,0)
FIELD(SUB) ;
"RTN","DGENU",93,0)
 ;Description: given a subscript in the enrollment array, returns the
"RTN","DGENU",94,0)
 ;     corresponding field number
"RTN","DGENU",95,0)
 N FLD S FLD=""
"RTN","DGENU",96,0)
 D  ;drops out of block once SUB is determined
"RTN","DGENU",97,0)
 .I SUB="APP" S FLD=.01 Q
"RTN","DGENU",98,0)
 .I SUB="DATE" S FLD=.1 Q
"RTN","DGENU",99,0)
 .I SUB="END" S FLD=.11 Q
"RTN","DGENU",100,0)
 .I SUB="DFN" S FLD=.02 Q
"RTN","DGENU",101,0)
 .I SUB="SOURCE" S FLD=.03 Q
"RTN","DGENU",102,0)
 .I SUB="STATUS" S FLD=.04 Q
"RTN","DGENU",103,0)
 .I SUB="REASON" S FLD=.05 Q
"RTN","DGENU",104,0)
 .I SUB="REMARKS" S FLD=25 Q
"RTN","DGENU",105,0)
 .I SUB="FACREC" S FLD=.06 Q
"RTN","DGENU",106,0)
 .I SUB="PRIORITY" S FLD=.07 Q
"RTN","DGENU",107,0)
 .I SUB="EFFDATE" S FLD=.08 Q
"RTN","DGENU",108,0)
 .I SUB="PRIORREC" S FLD=.09 Q
"RTN","DGENU",109,0)
 .I SUB="SUBGRP" S FLD=.12 Q
"RTN","DGENU",110,0)
 .I SUB="CODE" S FLD=50.01 Q
"RTN","DGENU",111,0)
 .I SUB="SC" S FLD=50.02 Q
"RTN","DGENU",112,0)
 .I SUB="SCPER" S FLD=50.03 Q
"RTN","DGENU",113,0)
 .I SUB="POW" S FLD=50.04 Q
"RTN","DGENU",114,0)
 .I SUB="A&A" S FLD=50.05 Q
"RTN","DGENU",115,0)
 .I SUB="HB" S FLD=50.06 Q
"RTN","DGENU",116,0)
 .I SUB="VAPEN" S FLD=50.07 Q
"RTN","DGENU",117,0)
 .I SUB="VACKAMT" S FLD=50.08 Q
"RTN","DGENU",118,0)
 .I SUB="DISRET" S FLD=50.09 Q
"RTN","DGENU",119,0)
 .I SUB="DISLOD" S FLD=50.2 Q  ;field added with DG*5.3*672
"RTN","DGENU",120,0)
 .I SUB="MEDICAID" S FLD=50.1 Q
"RTN","DGENU",121,0)
 .I SUB="AO" S FLD=50.11 Q
"RTN","DGENU",122,0)
 .I SUB="IR" S FLD=50.12 Q
"RTN","DGENU",123,0)
 .I SUB="EC" S FLD=50.13 Q
"RTN","DGENU",124,0)
 .I SUB="MTSTA" S FLD=50.14 Q
"RTN","DGENU",125,0)
 .I SUB="VCD" S FLD=50.15 Q
"RTN","DGENU",126,0)
 .I SUB="PH" S FLD=50.16 Q
"RTN","DGENU",127,0)
 .I SUB="UNEMPLOY" S FLD=50.17 Q
"RTN","DGENU",128,0)
 .I SUB="CVELEDT" S FLD=50.18 Q
"RTN","DGENU",129,0)
 .I SUB="DATETIME" S FLD=75.01 Q
"RTN","DGENU",130,0)
 .I SUB="USER" S FLD=75.02 Q
"RTN","DGENU",131,0)
 Q FLD
"RTN","DGENU",132,0)
 ;
"RTN","DGENU",133,0)
PROMPT(FILE,FIELD,DEFAULT,RESPONSE,REQUIRE,PRMPTNM) ;
"RTN","DGENU",134,0)
 ;Description: requests user to enter a single field value.
"RTN","DGENU",135,0)
 ;Input:
"RTN","DGENU",136,0)
 ;  FILE - the file #
"RTN","DGENU",137,0)
 ;  FIELD - the field #
"RTN","DGENU",138,0)
 ;  DEFAULT - default value, internal form
"RTN","DGENU",139,0)
 ;  REQUIRE - a flag, (+value)'=0 means to require a value to be
"RTN","DGENU",140,0)
 ;            entered and to return failure otherwise (optional)
"RTN","DGENU",141,0)
 ;  PRMPTNM - Optional
"RTN","DGENU",142,0)
 ;             0 - display field LABEL
"RTN","DGENU",143,0)
 ;             1 - Prompt field TITLE
"RTN","DGENU",144,0)
 ;Output:
"RTN","DGENU",145,0)
 ;  Function Value - 0 on failure, 1 on success
"RTN","DGENU",146,0)
 ;  RESPONSE - value entered by user, pass by reference
"RTN","DGENU",147,0)
 ;
"RTN","DGENU",148,0)
 Q:(('$G(FILE))!('$G(FIELD))) 0
"RTN","DGENU",149,0)
 S REQUIRE=$G(REQUIRE)
"RTN","DGENU",150,0)
 S PRMPTNM=$G(PRMPTNM)
"RTN","DGENU",151,0)
 N DIR,DA,QUIT,AGAIN
"RTN","DGENU",152,0)
 ;
"RTN","DGENU",153,0)
 S DIR(0)=FILE_","_FIELD_$S($G(REQUIRE):"",1:"O")_"AO"
"RTN","DGENU",154,0)
 I $G(DEFAULT)'="" DO
"RTN","DGENU",155,0)
 . S:+$G(PRMPTNM)=0 DIR("A")=$$GET1^DID(FILE,FIELD,"","LABEL")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",156,0)
 . S:+$G(PRMPTNM)>0 DIR("A")=$$GET1^DID(FILE,FIELD,"","TITLE")_": "_$$EXTERNAL^DILFD(FILE,FIELD,"F",DEFAULT)_"// "
"RTN","DGENU",157,0)
 S QUIT=0
"RTN","DGENU",158,0)
 F  D  Q:QUIT
"RTN","DGENU",159,0)
 . D ^DIR
"RTN","DGENU",160,0)
 . I $D(DTOUT)!$D(DUOUT) S QUIT=1 Q
"RTN","DGENU",161,0)
 . I X="@" D  Q:AGAIN
"RTN","DGENU",162,0)
 . . S AGAIN=0
"RTN","DGENU",163,0)
 . . I 'REQUIRE,"Yy"'[$E($$YN^DGENCD1("  Are you sure")_"X") S AGAIN=1 Q
"RTN","DGENU",164,0)
 . . S RESPONSE="" ; This might trigger the "required" message below.
"RTN","DGENU",165,0)
 . E  I X="" S RESPONSE=$G(DEFAULT)
"RTN","DGENU",166,0)
 . E  S RESPONSE=$P(Y,"^")
"RTN","DGENU",167,0)
 . ;
"RTN","DGENU",168,0)
 . ; quit this loop if the user entered value OR value not required
"RTN","DGENU",169,0)
 . I RESPONSE'="" S QUIT=1 Q
"RTN","DGENU",170,0)
 . I 'REQUIRE S QUIT=1 Q
"RTN","DGENU",171,0)
 . W !,"This is a required response. Enter '^' to exit"
"RTN","DGENU",172,0)
 I $D(DTOUT)!$D(DUOUT) Q 0
"RTN","DGENU",173,0)
 Q 1
"RTN","DGENU",174,0)
 ;
"RTN","DGENU",175,0)
INST() ;
"RTN","DGENU",176,0)
 ; Description: Determine the institution affiliation associated with a user.
"RTN","DGENU",177,0)
 ;
"RTN","DGENU",178,0)
 ;  Input:
"RTN","DGENU",179,0)
 ;     DUZ(2) - Pointer to the INSTITUTION (#4) file (institution
"RTN","DGENU",180,0)
 ;              affiliated with user, prompted at Kernel sign-on)
"RTN","DGENU",181,0)
 ;
"RTN","DGENU",182,0)
 ; Output:
"RTN","DGENU",183,0)
 ;   Function Value - Returns pointer to the INSTITUTION (#4) file
"RTN","DGENU",184,0)
 ;    entry that is associated with the user, otherwise the pointer
"RTN","DGENU",185,0)
 ;    to the INSTITUTION (#4) file entry of the primary VA Medical
"RTN","DGENU",186,0)
 ;    Center division is returned.
"RTN","DGENU",187,0)
 ;
"RTN","DGENU",188,0)
 Q $S($G(DUZ(2)):DUZ(2),1:$P($$SITE^VASITE(),"^"))
"RTN","DGENU",189,0)
 ;
"RTN","DGENU",190,0)
GETINST(DGPREFAC,DGINST) ;Get Institution file data
"RTN","DGENU",191,0)
 ; Input  -- DGPREFAC Institution file IEN
"RTN","DGENU",192,0)
 ; Output -- 1=Successful and 0=Failure
"RTN","DGENU",193,0)
 ;           DGINST - Institution file Array
"RTN","DGENU",194,0)
 N DGINST0,DGINST99,DGOKF
"RTN","DGENU",195,0)
 S DGINST0=$G(^DIC(4,DGPREFAC,0)) G GETQ:DGINST0=""
"RTN","DGENU",196,0)
 S DGINST("NAME")=$P(DGINST0,U)
"RTN","DGENU",197,0)
 S DGINST99=$G(^DIC(4,DGPREFAC,99))
"RTN","DGENU",198,0)
 S DGINST("STANUM")=$P(DGINST99,U)
"RTN","DGENU",199,0)
 S DGOKF=1
"RTN","DGENU",200,0)
GETQ Q +$G(DGOKF)
"RTN","DGENUPL")
0^29^B28511656
"RTN","DGENUPL",1,0)
DGENUPL ;ALB/CJM,ISA/KWP,TDM - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 8/11/05 5:21pm
"RTN","DGENUPL",2,0)
 ;;5.3;REGISTRATION;**147,222,232,363,472,497,564,677,672**;Aug 13,1993
"RTN","DGENUPL",3,0)
 ;Phase II Moved Z11 to DGENUPL7
"RTN","DGENUPL",4,0)
ORUZ11(MSGIEN,ERRCOUNT) ;
"RTN","DGENUPL",5,0)
 ;Description:  This procedure is used to process a batch of ORU~Z11
"RTN","DGENUPL",6,0)
 ;messages or a single ORU~Z11 message.The processing consists of
"RTN","DGENUPL",7,0)
 ;uploading the patient enrollment and eligibility data.
"RTN","DGENUPL",8,0)
 ;
"RTN","DGENUPL",9,0)
 ;Input:
"RTN","DGENUPL",10,0)
 ;  MSGIEN - the ien of the HL7 message in the HL7 MESSAGE TEXT file
"RTN","DGENUPL",11,0)
 ;Output:
"RTN","DGENUPL",12,0)
 ;  ERRCOUNT - count of messages that were not processed due to
"RTN","DGENUPL",13,0)
 ;    errors encountered  (pass by reference)
"RTN","DGENUPL",14,0)
 ;
"RTN","DGENUPL",15,0)
 N CURLINE,SSN,DOB,SEX,SEG,MSGID,SSN,DFN,ERRMSG,SEG
"RTN","DGENUPL",16,0)
 ;
"RTN","DGENUPL",17,0)
 K ^TMP("IVM","HLS",$J)
"RTN","DGENUPL",18,0)
 ;
"RTN","DGENUPL",19,0)
 ;initialize HL7 variable
"RTN","DGENUPL",20,0)
 S HLSDT="IVMQ" ;location of error message
"RTN","DGENUPL",21,0)
 ;
"RTN","DGENUPL",22,0)
 S CURLINE=1
"RTN","DGENUPL",23,0)
 D ADVANCE(MSGIEN,.CURLINE)
"RTN","DGENUPL",24,0)
 Q:'CURLINE
"RTN","DGENUPL",25,0)
 F  Q:'CURLINE  D  D ADVANCE(MSGIEN,.CURLINE)
"RTN","DGENUPL",26,0)
 .D GETSEG(MSGIEN,CURLINE,.SEG)
"RTN","DGENUPL",27,0)
 .S MSGID=SEG(10)
"RTN","DGENUPL",28,0)
 .D NXTSEG(MSGIEN,CURLINE,.SEG)
"RTN","DGENUPL",29,0)
 .I SEG("TYPE")'="PID" D ADDERROR(MSGID,,"PID SEGMENT MISSING",.ERRCOUNT) Q
"RTN","DGENUPL",30,0)
 .S DFN=$$LOOKUP^DGENPTA(SEG(19),$$FMDATE^HLFNC(SEG(7)),SEG(8),.ERRMSG)
"RTN","DGENUPL",31,0)
 .I 'DFN D ADDERROR(MSGID,SEG(19),ERRMSG,.ERRCOUNT) Q
"RTN","DGENUPL",32,0)
 .D Z11^DGENUPL7(MSGIEN,MSGID,.CURLINE,DFN,.ERRCOUNT)
"RTN","DGENUPL",33,0)
 S HLEVN=+$G(ERRCOUNT) ;# of events included in the reply
"RTN","DGENUPL",34,0)
 M ^TMP("HLS",$J)=^TMP("IVM","HLS",$J)                     ;DG*5.3*472
"RTN","DGENUPL",35,0)
 K ^TMP("IVM","HLS",$J)
"RTN","DGENUPL",36,0)
 Q
"RTN","DGENUPL",37,0)
 ;
"RTN","DGENUPL",38,0)
ORFZ11(MSGIEN,MSGID) ;
"RTN","DGENUPL",39,0)
 ;Description:  This procedure is used to process an ORF~Z11 message
"RTN","DGENUPL",40,0)
 ;It uploads the patient enrollment and eligibility data.
"RTN","DGENUPL",41,0)
 ;An acknowledgment is returned.
"RTN","DGENUPL",42,0)
 ;
"RTN","DGENUPL",43,0)
 ;Input:
"RTN","DGENUPL",44,0)
 ;  MSGIEN - the internal entry number of the HL7 message in the HL7 MESSAGE TEXT file (772)
"RTN","DGENUPL",45,0)
 ;  MSGID - the message control id from the MSH segment
"RTN","DGENUPL",46,0)
 ;
"RTN","DGENUPL",47,0)
 ;Output: none
"RTN","DGENUPL",48,0)
 ;
"RTN","DGENUPL",49,0)
 N CURLINE,DFN,QUERYIEN,QARRAY,QRYMSGID,ERRCOUNT,HECERROR,SEG,DGRESENT
"RTN","DGENUPL",50,0)
 ;CURLINE tracks current line in the message
"RTN","DGENUPL",51,0)
 ;QUERYIEN  the ien of query in the ENROLLMENT QUERY LOG
"RTN","DGENUPL",52,0)
 ;QRYMSGID  the Message Controll ID of the query
"RTN","DGENUPL",53,0)
 ;QARRAY  array containing the ENROLLMENT QUERY LOG record
"RTN","DGENUPL",54,0)
 ;HECERROR  error message returned by HEC in response to query
"RTN","DGENUPL",55,0)
 ;DGRESENT  flag=1 if query was resent
"RTN","DGENUPL",56,0)
 ;
"RTN","DGENUPL",57,0)
 S (QUERYIEN,ERRCOUNT)=0
"RTN","DGENUPL",58,0)
 ;
"RTN","DGENUPL",59,0)
 ;initialize HL7 variable
"RTN","DGENUPL",60,0)
 S HLSDT="IVMQ" ;subscript in ^TMP( global for ACK message
"RTN","DGENUPL",61,0)
 ;
"RTN","DGENUPL",62,0)
 K ^TMP("IVM","HLS",$J)
"RTN","DGENUPL",63,0)
 ;
"RTN","DGENUPL",64,0)
 S CURLINE=1
"RTN","DGENUPL",65,0)
 S HECERROR=""
"RTN","DGENUPL",66,0)
 ;
"RTN","DGENUPL",67,0)
 D  ;drops out on error
"RTN","DGENUPL",68,0)
 .D NXTSEG(MSGIEN,.CURLINE,.SEG)
"RTN","DGENUPL",69,0)
 .I SEG("TYPE")'="MSA" D ADDERROR(MSGID,,"MISSING MSA SEGMENT",.ERRCOUNT) Q
"RTN","DGENUPL",70,0)
 .;trace the reply back to the query
"RTN","DGENUPL",71,0)
 .S QRYMSGID=SEG(2)
"RTN","DGENUPL",72,0)
 .S QUERYIEN=$$FINDMSG^DGENQRY(QRYMSGID)
"RTN","DGENUPL",73,0)
 .I 'QUERYIEN D ADDERROR(MSGID,,"NO RECORD OF QUERY",.ERRCOUNT) Q
"RTN","DGENUPL",74,0)
 .I QUERYIEN,'$$GET^DGENQRY(QUERYIEN,.QARRAY) D ADDERROR(MSGID,,"NO RECORD OF QUERY",.ERRCOUNT) Q
"RTN","DGENUPL",75,0)
 .S DFN=QARRAY("DFN")
"RTN","DGENUPL",76,0)
 .I (SEG(1)="AR")!(SEG(1)="AE") D  Q
"RTN","DGENUPL",77,0)
 ..;HEC was unable to reply to the query. If due to incorrect patient
"RTN","DGENUPL",78,0)
 ..;info, then resend the query, otherwise just log it as unsuccessful
"RTN","DGENUPL",79,0)
 ..N SSN,DOB,SEX,DGPAT,HECMSG
"RTN","DGENUPL",80,0)
 ..S HECMSG=SEG(3)
"RTN","DGENUPL",81,0)
 ..D NXTSEG(MSGIEN,.CURLINE,.SEG)
"RTN","DGENUPL",82,0)
 ..Q:(SEG("TYPE")'="QRD")
"RTN","DGENUPL",83,0)
 ..S SSN=SEG(8)
"RTN","DGENUPL",84,0)
 ..D NXTSEG(MSGIEN,.CURLINE,.SEG)
"RTN","DGENUPL",85,0)
 ..Q:(SEG("TYPE")'="QRF")
"RTN","DGENUPL",86,0)
 ..S DOB=$$FMDATE^HLFNC(SEG(4))
"RTN","DGENUPL",87,0)
 ..S SEX=SEG(5)
"RTN","DGENUPL",88,0)
 ..;if patient id info incorrect, resend the query
"RTN","DGENUPL",89,0)
 ..I $$GET^DGENPTA(DFN,.DGPAT),((DOB'=DGPAT("DOB"))!(SEX'=DGPAT("SEX"))!(SSN'=DGPAT("SSN"))) I $$RESEND^DGENQRY1(QUERYIEN) S DGRESENT=1 Q
"RTN","DGENUPL",90,0)
 ..S HECERROR="HEC UNABLE TO RESPOND TO QUERY- "_HECMSG Q
"RTN","DGENUPL",91,0)
 .;
"RTN","DGENUPL",92,0)
 .F SEG="QRD","QRF","PID" D NXTSEG(MSGIEN,.CURLINE,.SEG) I SEG("TYPE")'=SEG D ADDERROR(MSGID,,SEG_" SEGMENT MISSING",.ERRCOUNT) Q
"RTN","DGENUPL",93,0)
 .S CURLINE=CURLINE-1 ;should point to line before PID
"RTN","DGENUPL",94,0)
 .I $$SSN^DGENPTA(DFN)'=SEG(19) D ADDERROR(MSGID,,"SSN DOES NOT MATCH",.ERRCOUNT) Q
"RTN","DGENUPL",95,0)
 .D Z11^DGENUPL7(MSGIEN,MSGID,.CURLINE,DFN,.ERRCOUNT)
"RTN","DGENUPL",96,0)
 ;
"RTN","DGENUPL",97,0)
 ;update the query log
"RTN","DGENUPL",98,0)
 I $G(HECERROR)="",ERRCOUNT S HECERROR="UPLOAD FAILED DUE TO CONSISTENCY CHECKS"
"RTN","DGENUPL",99,0)
 I '$G(DGRESENT),$$RECEIVE^DGENQRY1(QUERYIEN,HECERROR,MSGID)
"RTN","DGENUPL",100,0)
 ;
"RTN","DGENUPL",101,0)
 S HLEVN=+$G(ERRCOUNT) ;# of events included in the reply
"RTN","DGENUPL",102,0)
 ;
"RTN","DGENUPL",103,0)
 ;if there was no error, create an 'AA' ack
"RTN","DGENUPL",104,0)
 ;I 'ERRCOUNT D ACCEPT^DGENUPL1(MSGID)                  ;DG*5.3*472
"RTN","DGENUPL",105,0)
 ;D MVERRORS^DGENUPL1                                   ;DG*5.3*472
"RTN","DGENUPL",106,0)
 ;transmit the ack
"RTN","DGENUPL",107,0)
 ;********************************************************
"RTN","DGENUPL",108,0)
 ;7.12.01;KSD; COMMENTED OUT. DON'T SEND ACK TO ORF
"RTN","DGENUPL",109,0)
 ;I $D(HLTRANS) S HLARYTYP="GB",HLFORMAT=1 D GENACK^HLMA1(HLEID,HLMTIENS,HLEIDS,HLARYTYP,HLFORMAT,.HLRESLTA,HLMTIEN)
"RTN","DGENUPL",110,0)
 ;
"RTN","DGENUPL",111,0)
 Q
"RTN","DGENUPL",112,0)
 ;
"RTN","DGENUPL",113,0)
ADDERROR(MSGID,SSN,ERRMSG,ERRCOUNT) ;
"RTN","DGENUPL",114,0)
 ;Description - writes an error message to a global. It will be
"RTN","DGENUPL",115,0)
 ;transmitted in the ack later.
"RTN","DGENUPL",116,0)
 ;
"RTN","DGENUPL",117,0)
 ;Inputs:
"RTN","DGENUPL",118,0)
 ;  MSGID -message control id of HL7 msg in the MSH segment
"RTN","DGENUPL",119,0)
 ;  SSN - patient social security number
"RTN","DGENUPL",120,0)
 ;  ERRMSG - the error message
"RTN","DGENUPL",121,0)
 ;  ERRCOUNT - count of errors written so far
"RTN","DGENUPL",122,0)
 ;
"RTN","DGENUPL",123,0)
 ;Outputs: none
"RTN","DGENUPL",124,0)
 ;
"RTN","DGENUPL",125,0)
 S ERRCOUNT=+$G(ERRCOUNT)
"RTN","DGENUPL",126,0)
 ;
"RTN","DGENUPL",127,0)
 I (ERRCOUNT*2)+1=1 D
"RTN","DGENUPL",128,0)
 . K HL,HLMID,HLMTIEN,HLDT,HLDT1
"RTN","DGENUPL",129,0)
 . D INIT^HLFNC2(HLEID,.HL)
"RTN","DGENUPL",130,0)
 . D CREATE^HLTF(.HLMID,.HLMTIEN,.HLDT,.HLDT1)
"RTN","DGENUPL",131,0)
 K HLRES
"RTN","DGENUPL",132,0)
 S MID=HLMID_"-"_((ERRCOUNT*2)+1)
"RTN","DGENUPL",133,0)
 D MSH^HLFNC2(.HL,MID,.HLRES)
"RTN","DGENUPL",134,0)
 S ^TMP("IVM","HLS",$J,(ERRCOUNT*2)+1)=HLRES
"RTN","DGENUPL",135,0)
 S ^TMP("IVM","HLS",$J,(ERRCOUNT*2)+2)="MSA"_HLFS_"AE"_HLFS_MSGID_HLFS_ERRMSG_" - SSN "_$S($L($G(SSN)):SSN,1:"NOT FOUND")
"RTN","DGENUPL",136,0)
 S ERRCOUNT=ERRCOUNT+1
"RTN","DGENUPL",137,0)
 ;Put in error message in HECERROR to be included in the NOTIFY message for a solicited query
"RTN","DGENUPL",138,0)
 I $D(HECERROR) S HECERROR=ERRMSG
"RTN","DGENUPL",139,0)
 Q
"RTN","DGENUPL",140,0)
 ;
"RTN","DGENUPL",141,0)
NXTSEG(MSGIEN,CURLINE,SEG) ;
"RTN","DGENUPL",142,0)
 ;Description: Returns the next segment
"RTN","DGENUPL",143,0)
 ;
"RTN","DGENUPL",144,0)
 ;Input:
"RTN","DGENUPL",145,0)
 ;  MSGIEN - ien in HL7 MESSAGE TEXT file
"RTN","DGENUPL",146,0)
 ;  CURLINE - subscript of the current segment
"RTN","DGENUPL",147,0)
 ;
"RTN","DGENUPL",148,0)
 ;Output:
"RTN","DGENUPL",149,0)
 ;  SEG - an array with the fields of the segment (pass by reference)
"RTN","DGENUPL",150,0)
 ;  CURLINE - upon exiting, will be the subscript of the next segment
"RTN","DGENUPL",151,0)
 ;
"RTN","DGENUPL",152,0)
 S CURLINE=CURLINE+1
"RTN","DGENUPL",153,0)
 D GETSEG(MSGIEN,CURLINE,.SEG)
"RTN","DGENUPL",154,0)
 Q
"RTN","DGENUPL",155,0)
 ;
"RTN","DGENUPL",156,0)
GETSEG(MSGIEN,CURLINE,SEG) ;
"RTN","DGENUPL",157,0)
 ;returns the current segment
"RTN","DGENUPL",158,0)
 ;
"RTN","DGENUPL",159,0)
 ;Input:
"RTN","DGENUPL",160,0)
 ;  MSGIEN - ien in HL7 MESSAGE TEXT file
"RTN","DGENUPL",161,0)
 ;  CURLINE - subscript of the current segment
"RTN","DGENUPL",162,0)
 ;
"RTN","DGENUPL",163,0)
 ;Output:
"RTN","DGENUPL",164,0)
 ;  SEG - an array with the fields of the segment (pass by reference)
"RTN","DGENUPL",165,0)
 ;
"RTN","DGENUPL",166,0)
 N SEGMENT,I
"RTN","DGENUPL",167,0)
 S:$G(HLFS)="" HLFS=$G(HL("FS")) S:HLFS="" HLFS="^"
"RTN","DGENUPL",168,0)
 S SEGMENT=$G(^TMP($J,IVMRTN,CURLINE,0))
"RTN","DGENUPL",169,0)
 S SEG("TYPE")=$E(SEGMENT,1,3)
"RTN","DGENUPL",170,0)
 ;
"RTN","DGENUPL",171,0)
 ;the MSH & BHS segs contain as their first piece the field separator, which makes breaKing the seqment into fields a bit different
"RTN","DGENUPL",172,0)
 I (SEG("TYPE")="MSH")!(SEG("TYPE")="BHS") D
"RTN","DGENUPL",173,0)
 .S SEG(1)=$E(SEGMENT,4)
"RTN","DGENUPL",174,0)
 .F I=2:1:30 S SEG(I)=$P(SEGMENT,HLFS,I)
"RTN","DGENUPL",175,0)
 E  D
"RTN","DGENUPL",176,0)
 .F I=2:1:41 S SEG(I-1)=$P(SEGMENT,HLFS,I)
"RTN","DGENUPL",177,0)
 Q
"RTN","DGENUPL",178,0)
 ;
"RTN","DGENUPL",179,0)
ADVANCE(MSGIEN,CURLINE) ;
"RTN","DGENUPL",180,0)
 ;Description: Used to find the begining of the next message in the batch.
"RTN","DGENUPL",181,0)
 ;
"RTN","DGENUPL",182,0)
 ;Input:
"RTN","DGENUPL",183,0)
 ;  MSGIEN - ien of message in the HL7 MESSAGE TEXT file.
"RTN","DGENUPL",184,0)
 ;  CURLINE - current position in the message
"RTN","DGENUPL",185,0)
 ;Output:
"RTN","DGENUPL",186,0)
 ;  CURLINE - starting position of next message in the batch, or 0 if 
"RTN","DGENUPL",187,0)
 ;    the end of the message is reached
"RTN","DGENUPL",188,0)
 ;
"RTN","DGENUPL",189,0)
 Q:'CURLINE
"RTN","DGENUPL",190,0)
 F  S CURLINE=$O(^TMP($J,IVMRTN,CURLINE)) Q:'CURLINE  Q:$E($G(^TMP($J,IVMRTN,CURLINE,0)),1,3)="MSH"
"RTN","DGENUPL",191,0)
 S CURLINE=+CURLINE
"RTN","DGENUPL",192,0)
 Q
"RTN","DGENUPL2")
0^15^B61657350
"RTN","DGENUPL2",1,0)
DGENUPL2 ;ALB/CJM,RTK,ISA/KWP/RMM/CKN,EG - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 10/19/05 4:37pm
"RTN","DGENUPL2",2,0)
 ;;5.3;REGISTRATION;**147,222,232,310,314,367,397,677,631,675,672**;Aug 13,1993
"RTN","DGENUPL2",3,0)
 ;
"RTN","DGENUPL2",4,0)
 ;
"RTN","DGENUPL2",5,0)
 ;***************************************************************
"RTN","DGENUPL2",6,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPL2",7,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPL2",8,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGCDIS(),DGNTR(),ERROR
"RTN","DGENUPL2",9,0)
 ;***************************************************************
"RTN","DGENUPL2",10,0)
 ;
"RTN","DGENUPL2",11,0)
PID ;
"RTN","DGENUPL2",12,0)
 S DGPAT("SSN")=SEG(19)
"RTN","DGENUPL2",13,0)
 Q
"RTN","DGENUPL2",14,0)
 ;
"RTN","DGENUPL2",15,0)
ZPD ;
"RTN","DGENUPL2",16,0)
 S DGELG("RATEINC")=$$CONVERT^DGENUPL1(SEG(8))
"RTN","DGENUPL2",17,0)
 S DGPAT("DEATH")=$$CONVERT^DGENUPL1(SEG(9),"TS",.ERROR)
"RTN","DGENUPL2",18,0)
 I ERROR D  Q
"RTN","DGENUPL2",19,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZPD SEGMENT, SEQ 9",.ERRCOUNT)
"RTN","DGENUPL2",20,0)
 S DGELG("MEDICAID")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",21,0)
 S DGELG("POW")=$$CONVERT^DGENUPL1(SEG(17))
"RTN","DGENUPL2",22,0)
 S DGPAT("EMGRES")=$$CONVERT^DGENUPL1(SEG(40))   ;DG*5.3*677
"RTN","DGENUPL2",23,0)
 Q
"RTN","DGENUPL2",24,0)
 ;
"RTN","DGENUPL2",25,0)
ZIE ;
"RTN","DGENUPL2",26,0)
 S DGPAT("INELDATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",27,0)
 I ERROR D  Q
"RTN","DGENUPL2",28,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZIE SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",29,0)
 S DGPAT("INELREA")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",30,0)
 S DGPAT("INELDEC")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",31,0)
 Q
"RTN","DGENUPL2",32,0)
 ;
"RTN","DGENUPL2",33,0)
ZEL(COUNT) ;
"RTN","DGENUPL2",34,0)
 D ZEL^DGENUPLA(COUNT)  ;code for ZEL segment has moved to DGENUPLA
"RTN","DGENUPL2",35,0)
 Q
"RTN","DGENUPL2",36,0)
 ;
"RTN","DGENUPL2",37,0)
ZEN ;
"RTN","DGENUPL2",38,0)
 N SUB
"RTN","DGENUPL2",39,0)
 S DGENR("DATE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",40,0)
 I ERROR D  Q
"RTN","DGENUPL2",41,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",42,0)
 S DGENR("SOURCE")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",43,0)
 S DGENR("STATUS")=$$CONVERT^DGENUPL1(SEG(4))
"RTN","DGENUPL2",44,0)
 S ERROR=$$PEND(DFN,DGENR("STATUS"))
"RTN","DGENUPL2",45,0)
 I ERROR D  Q
"RTN","DGENUPL2",46,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ENROLLMENT STATUS PENDING-ELIGIBILITY IS VERIFIED",.ERRCOUNT)
"RTN","DGENUPL2",47,0)
 S DGENR("REASON")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPL2",48,0)
 S DGENR("REMARKS")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPL2",49,0)
 S DGENR("FACREC")=$$CONVERT^DGENUPL1(SEG(7),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",50,0)
 I ERROR D  Q
"RTN","DGENUPL2",51,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY RECEIVED "_SEG(7)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",52,0)
 S DGPAT("PREFAC")=$$CONVERT^DGENUPL1(SEG(8),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",53,0)
 I ERROR D  Q
"RTN","DGENUPL2",54,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"PREFERRED FACILITY "_SEG(8)_" NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",55,0)
 ;
"RTN","DGENUPL2",56,0)
 S DGENR("PRIORITY")=$$CONVERT^DGENUPL1(SEG(9))
"RTN","DGENUPL2",57,0)
 S DGENR("EFFDATE")=$$CONVERT^DGENUPL1(SEG(10),"DATE",.ERROR)
"RTN","DGENUPL2",58,0)
 I ERROR D  Q
"RTN","DGENUPL2",59,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 10",.ERRCOUNT)
"RTN","DGENUPL2",60,0)
 S DGENR("APP")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",61,0)
 I ERROR D  Q
"RTN","DGENUPL2",62,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",63,0)
 ;
"RTN","DGENUPL2",64,0)
 ;!!!!!!!!! take this next line out when HEC begins transmitting the applicatizon date
"RTN","DGENUPL2",65,0)
 I DGENR("APP")="" S DGENR("APP")=DGENR("DATE")
"RTN","DGENUPL2",66,0)
 I DGENR("APP")="" S DGENR("APP")=DGENR("EFFDATE")
"RTN","DGENUPL2",67,0)
 ;
"RTN","DGENUPL2",68,0)
 S DGENR("END")=$$CONVERT^DGENUPL1(SEG(12),"DATE",.ERROR)
"RTN","DGENUPL2",69,0)
 I ERROR D  Q
"RTN","DGENUPL2",70,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEN SEGMENT, SEQ 12",.ERRCOUNT)
"RTN","DGENUPL2",71,0)
 ;Phase II Parse out Sub-Group (SRS 6.4)
"RTN","DGENUPL2",72,0)
 S DGENR("SUBGRP")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPL2",73,0)
 ;
"RTN","DGENUPL2",74,0)
 ;want to ignore double quotes sent for enrollment fields
"RTN","DGENUPL2",75,0)
 S SUB=""
"RTN","DGENUPL2",76,0)
 F  S SUB=$O(DGENR(SUB)) Q:SUB=""  I DGENR(SUB)="@" S DGENR(SUB)=""
"RTN","DGENUPL2",77,0)
 ;
"RTN","DGENUPL2",78,0)
 Q
"RTN","DGENUPL2",79,0)
 ;
"RTN","DGENUPL2",80,0)
ZMT ;
"RTN","DGENUPL2",81,0)
 I SEG(1)>1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ZMT SEGMENT, SEQ 1, SHOULD SPECIFY MEANS TEST",.ERRCOUNT) S ERROR=1 Q
"RTN","DGENUPL2",82,0)
 S DGELG("MTSTA")=$$CONVERT^DGENUPL1(SEG(3),"MT",.ERROR)
"RTN","DGENUPL2",83,0)
 I ERROR D  Q
"RTN","DGENUPL2",84,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZMT SEGMENT, SEQ 3",.ERRCOUNT)
"RTN","DGENUPL2",85,0)
 Q
"RTN","DGENUPL2",86,0)
 ;
"RTN","DGENUPL2",87,0)
ZCD ;
"RTN","DGENUPL2",88,0)
 ;Phase II for multiple ZCD's
"RTN","DGENUPL2",89,0)
 I SEG(1)>1 G SKIP
"RTN","DGENUPL2",90,0)
 S DGCDIS("BY")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",91,0)
 S DGCDIS("DATE")=$$CONVERT^DGENUPL1(SEG(5),"DATE",.ERROR)
"RTN","DGENUPL2",92,0)
 I ERROR D  Q
"RTN","DGENUPL2",93,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPL2",94,0)
 S DGCDIS("FACDET")=$$CONVERT^DGENUPL1(SEG(4),"INSTITUTION",.ERROR)
"RTN","DGENUPL2",95,0)
 I ERROR D  Q
"RTN","DGENUPL2",96,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"FACILITY "_SEG(4)_" MAKING CATASTROPHIC DISABILITY DETERMINATION NOT FOUND IN THE INSTITUTION FILE",.ERRCOUNT)
"RTN","DGENUPL2",97,0)
 S DGCDIS("REVDTE")=$$CONVERT^DGENUPL1(SEG(2),"DATE",.ERROR)
"RTN","DGENUPL2",98,0)
 I ERROR D  Q
"RTN","DGENUPL2",99,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZCD SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",100,0)
 S DGCDIS("METDET")=$$CONVERT^DGENUPL1($P(SEG(6),$E(HLECH)))
"RTN","DGENUPL2",101,0)
 S DGCDIS("VCD")=$$CONVERT^DGENUPL1(SEG(12))
"RTN","DGENUPL2",102,0)
SKIP ;
"RTN","DGENUPL2",103,0)
 ;Phase II Parse out additional fields.  CONVERT type of RSN converts the code to IEN for diagnosis,procedure and condition (HL7TORSN^DGENA5).
"RTN","DGENUPL2",104,0)
 S DGCDIS("DIAG",SEG(1))=$$CONVERT^DGENUPL1(SEG(7),"CDRSN")
"RTN","DGENUPL2",105,0)
 S DGCDIS("PROC",SEG(1))=$$CONVERT^DGENUPL1(SEG(8),"CDRSN")
"RTN","DGENUPL2",106,0)
 S DGCDIS("EXT",SEG(1),1)=$$CONVERT^DGENUPL1($P(SEG(9),$E(HLECH)),"EXT")
"RTN","DGENUPL2",107,0)
 S DGCDIS("COND",SEG(1))=$$CONVERT^DGENUPL1(SEG(10),"CDRSN")
"RTN","DGENUPL2",108,0)
 S DGCDIS("SCORE",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(11),$E(HLECH)))
"RTN","DGENUPL2",109,0)
 S DGCDIS("PERM",SEG(1))=$$CONVERT^DGENUPL1($P(SEG(13),$E(HLECH)))
"RTN","DGENUPL2",110,0)
 I DGCDIS("VCD")="Y",'DGCDIS("DIAG",SEG(1)),'DGCDIS("PROC",SEG(1)),'DGCDIS("COND",SEG(1)) D  Q
"RTN","DGENUPL2",111,0)
 .S ERROR=1 D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"NO VALID DIAGNOSIS,PROCEDURE, OR CONDITION IN THE ZCD SEGMENT",.ERRCOUNT)
"RTN","DGENUPL2",112,0)
 Q
"RTN","DGENUPL2",113,0)
 ;
"RTN","DGENUPL2",114,0)
ZSP ;
"RTN","DGENUPL2",115,0)
 S DGELG("SC")=$$CONVERT^DGENUPL1(SEG(2),"Y/N",.ERROR)
"RTN","DGENUPL2",116,0)
 I ERROR D  Q
"RTN","DGENUPL2",117,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 2",.ERRCOUNT)
"RTN","DGENUPL2",118,0)
 S DGELG("SCPER")=$$CONVERT^DGENUPL1(SEG(3))
"RTN","DGENUPL2",119,0)
 S DGELG("EFFDT")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPL2",120,0)
 I ERROR D  Q
"RTN","DGENUPL2",121,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGELG("EFFDT")),"BAD VALUE, ZSP SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPL2",122,0)
 ;if effective date is null, set update value to "@" (delete)
"RTN","DGENUPL2",123,0)
 I DGELG("EFFDT")="" S DGELG("EFFDT")="@"
"RTN","DGENUPL2",124,0)
 ;
"RTN","DGENUPL2",125,0)
 ;added 8/3/98 to reduce #rejects
"RTN","DGENUPL2",126,0)
 ;if HEC sends SC=NO, SC% not sent, and site has value for SC% then delete it
"RTN","DGENUPL2",127,0)
 I DGELG("SC")="N",DGELG("SCPER")="" S DGELG("SCPER")="@"
"RTN","DGENUPL2",128,0)
 ;
"RTN","DGENUPL2",129,0)
 S DGELG("P&T")=$$CONVERT^DGENUPL1(SEG(6),"Y/N",.ERROR)
"RTN","DGENUPL2",130,0)
 I ERROR D  Q
"RTN","DGENUPL2",131,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 6",.ERRCOUNT)
"RTN","DGENUPL2",132,0)
 S DGELG("UNEMPLOY")=$$CONVERT^DGENUPL1(SEG(7),"Y/N",.ERROR)
"RTN","DGENUPL2",133,0)
 I ERROR D  Q
"RTN","DGENUPL2",134,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 7",.ERRCOUNT)
"RTN","DGENUPL2",135,0)
 S DGELG("SCAWDATE")=$$CONVERT^DGENUPL1(SEG(8),"DATE",.ERROR)
"RTN","DGENUPL2",136,0)
 I ERROR D  Q
"RTN","DGENUPL2",137,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZSP SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPL2",138,0)
 Q
"RTN","DGENUPL2",139,0)
 ;
"RTN","DGENUPL2",140,0)
ZMH ; Purple Heart
"RTN","DGENUPL2",141,0)
 Q:SEG(2)'="PH"      ;ONLY PROCESS PURPLE HEART FROM ZMH
"RTN","DGENUPL2",142,0)
 S DGPAT("PHI")=$P(SEG(3),$E(HLECH))
"RTN","DGENUPL2",143,0)
 S DGELG("PH")=$$CONVERT^DGENUPL1($P(SEG(3),$E(HLECH)))
"RTN","DGENUPL2",144,0)
 S DGPAT("PHST")=$P(SEG(3),$E(HLECH),2)
"RTN","DGENUPL2",145,0)
 S DGPAT("PHRR")=$P(SEG(3),$E(HLECH),3)
"RTN","DGENUPL2",146,0)
 Q
"RTN","DGENUPL2",147,0)
 ;
"RTN","DGENUPL2",148,0)
ZRD ;
"RTN","DGENUPL2",149,0)
 N COUNT,DXCODE,NAME,COND
"RTN","DGENUPL2",150,0)
 S DXCODE=$P(SEG(2),$E(HLECH))
"RTN","DGENUPL2",151,0)
 I DXCODE="""""" S DXCODE=""
"RTN","DGENUPL2",152,0)
 S NAME=$P(SEG(2),$E(HLECH),2)
"RTN","DGENUPL2",153,0)
 Q:DXCODE=""  ;segment does not contain a disability condition
"RTN","DGENUPL2",154,0)
 ;
"RTN","DGENUPL2",155,0)
 S COUNT=1+(+$G(DGELG("RATEDIS")))
"RTN","DGENUPL2",156,0)
 S (COND,DGELG("RATEDIS",COUNT,"RD"))=$$DCLOOKUP(DXCODE,NAME)
"RTN","DGENUPL2",157,0)
 S DGELG("RATEDIS",COUNT,"PER")=SEG(3),DGELG("RATEDIS")=COUNT
"RTN","DGENUPL2",158,0)
 S DGELG("RATEDIS",COUNT,"RDEXT")=SEG(12)
"RTN","DGENUPL2",159,0)
 S DGELG("RATEDIS",COUNT,"RDORIG")=$$CONVERT^DGENUPL1(SEG(13),"DATE",.ERROR)
"RTN","DGENUPL2",160,0)
 I ERROR D  Q
"RTN","DGENUPL2",161,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 13",.ERRCOUNT)
"RTN","DGENUPL2",162,0)
 S DGELG("RATEDIS",COUNT,"RDCURR")=$$CONVERT^DGENUPL1(SEG(14),"DATE",.ERROR)
"RTN","DGENUPL2",163,0)
 I ERROR D  Q
"RTN","DGENUPL2",164,0)
 . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, S 14",.ERRCOUNT)
"RTN","DGENUPL2",165,0)
 I 'COND D  Q
"RTN","DGENUPL2",166,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZRD SEGMENT, SEQ 2 - DISABILTY CONDITION LOOKUP FAILED",.ERRCOUNT)
"RTN","DGENUPL2",167,0)
 .S ERROR=1
"RTN","DGENUPL2",168,0)
 Q
"RTN","DGENUPL2",169,0)
OBX ;
"RTN","DGENUPL2",170,0)
 D OBX^DGENUPLA  ;code for OBX segment has moved to DGENUPLA
"RTN","DGENUPL2",171,0)
 Q
"RTN","DGENUPL2",172,0)
 ;
"RTN","DGENUPL2",173,0)
 ;******************end of segment parsers*********************
"RTN","DGENUPL2",174,0)
 ;
"RTN","DGENUPL2",175,0)
DCLOOKUP(DGCODE,DGNAME) ;
"RTN","DGENUPL2",176,0)
 ;Description: Returns the ien of an Disability Condition (file #31) based on the DXCODE and NAME
"RTN","DGENUPL2",177,0)
 ;
"RTN","DGENUPL2",178,0)
 ;Input:
"RTN","DGENUPL2",179,0)
 ;  DXCODE - the DX Code of the Disability Condition
"RTN","DGENUPL2",180,0)
 ;  NAME - the name of the Disability Condition
"RTN","DGENUPL2",181,0)
 ;Output:
"RTN","DGENUPL2",182,0)
 ;  Function Value: the ien of the entry found, or 0 otherwise
"RTN","DGENUPL2",183,0)
 ;
"RTN","DGENUPL2",184,0)
 Q:(DXCODE="") 0
"RTN","DGENUPL2",185,0)
 N NODE,IEN,FOUND
"RTN","DGENUPL2",186,0)
 S (FOUND,IEN)=0
"RTN","DGENUPL2",187,0)
 F  S IEN=$O(^DIC(31,"C",DXCODE,IEN)) Q:'IEN  D  Q:FOUND
"RTN","DGENUPL2",188,0)
 .S NODE=$G(^DIC(31,IEN,0))
"RTN","DGENUPL2",189,0)
 .I NAME=$P(NODE,"^"),DXCODE=$P(NODE,"^",3) S FOUND=1
"RTN","DGENUPL2",190,0)
 I 'FOUND S IEN=$O(^DIC(31,"C",DXCODE,0))
"RTN","DGENUPL2",191,0)
 Q +IEN
"RTN","DGENUPL2",192,0)
 ;
"RTN","DGENUPL2",193,0)
REGCHECK(DFN) ;
"RTN","DGENUPL2",194,0)
 ;Description: passes patient through the registration consistency checker
"RTN","DGENUPL2",195,0)
 ;Input -
"RTN","DGENUPL2",196,0)
 ;  DFN is a pointer to the Patient File
"RTN","DGENUPL2",197,0)
 ;
"RTN","DGENUPL2",198,0)
 N DGCD,DGCHK,DGDAY,DGEDCN,DGER,DGLST,DGNCK,DGRPCOLD,DGSC,DGTYPE,DGVT,VA,X
"RTN","DGENUPL2",199,0)
 ;
"RTN","DGENUPL2",200,0)
 S DGEDCN=0
"RTN","DGENUPL2",201,0)
 D ^DGRPC
"RTN","DGENUPL2",202,0)
 Q
"RTN","DGENUPL2",203,0)
PEND(DFN,DGSTAT) ;
"RTN","DGENUPL2",204,0)
 N DGARR,DGEC,DGERR,DGX
"RTN","DGENUPL2",205,0)
 I $P($G(^DPT(DFN,.361)),U)'="V" Q 0
"RTN","DGENUPL2",206,0)
 I $G(DGSTAT)']"" Q 0
"RTN","DGENUPL2",207,0)
 S DGSTAT="^"_DGSTAT_"^"
"RTN","DGENUPL2",208,0)
 Q:"^15^17^"'[DGSTAT 0
"RTN","DGENUPL2",209,0)
 D GETS^DIQ(2,DFN_",",".301;.302;.361;.36295","IE","DGARR","DGERR")
"RTN","DGENUPL2",210,0)
 I $D(DGERR) Q 0
"RTN","DGENUPL2",211,0)
 S DGEC=$G(DGARR(2,DFN_",",.361,"E"))
"RTN","DGENUPL2",212,0)
 I $G(DGEC)']"" Q 0
"RTN","DGENUPL2",213,0)
 I DGEC="NSC" Q 1
"RTN","DGENUPL2",214,0)
 I DGEC="SC LESS THAN 50%" D  Q DGX
"RTN","DGENUPL2",215,0)
 . S DGX=1
"RTN","DGENUPL2",216,0)
 . I $G(DGARR(2,DFN_",",.301,"I"))'="Y" S DGX=0 Q
"RTN","DGENUPL2",217,0)
 . I +$G(DGARR(2,DFN_",",.302,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",218,0)
 . I +$G(DGARR(2,DFN_",",.36295,"I"))>0 S DGX=0 Q
"RTN","DGENUPL2",219,0)
 Q 0
"RTN","DGENUPLA")
0^24^B35703117
"RTN","DGENUPLA",1,0)
DGENUPLA ;ALB/CKN,TDM,PJR,RGL - PROCESS INCOMING (Z11 EVENT TYPE) HL7 MESSAGES ; 10/6/05 1:44pm
"RTN","DGENUPLA",2,0)
 ;;5.3;REGISTRATION;**397,379,497,451,564,672**;Aug 13,1993
"RTN","DGENUPLA",3,0)
 ;
"RTN","DGENUPLA",4,0)
 ;***************************************************************
"RTN","DGENUPLA",5,0)
 ; This routine was created because DGENUPL2 had reached it's
"RTN","DGENUPLA",6,0)
 ; maximum size, therefore no new code could not be added.  All
"RTN","DGENUPLA",7,0)
 ; code that existed in the ZEL and OBX tags of DGENUPL2 has
"RTN","DGENUPLA",8,0)
 ; been moved to the ZEL and OBX tags of DGENUPLA.  A line of code
"RTN","DGENUPLA",9,0)
 ; was placed in ZEL^DGENUPL2 to call ZEL^DGENUPLA.  A line of
"RTN","DGENUPLA",10,0)
 ; code was placed in OBX^DGENUPL2 to call OBX^DGENUPLA.
"RTN","DGENUPLA",11,0)
 ; Any routine that calls ZEL^DGENUPL2 or OBX^DGENUPL2 will not
"RTN","DGENUPLA",12,0)
 ; be affected by this change.
"RTN","DGENUPLA",13,0)
 ;***************************************************************
"RTN","DGENUPLA",14,0)
 ;
"RTN","DGENUPLA",15,0)
 ;***************************************************************
"RTN","DGENUPLA",16,0)
 ;The following procedures parse particular segment types.
"RTN","DGENUPLA",17,0)
 ;Input:SEG(),MSGID
"RTN","DGENUPLA",18,0)
 ;Output:DGPAT(),DGELG(),DGENR(),DGNTR(),DGMST(),ERROR
"RTN","DGENUPLA",19,0)
 ;***************************************************************
"RTN","DGENUPLA",20,0)
 ;
"RTN","DGENUPLA",21,0)
 ;
"RTN","DGENUPLA",22,0)
ZEL(COUNT) ;
"RTN","DGENUPLA",23,0)
 N CODE
"RTN","DGENUPLA",24,0)
 S CODE=$$CONVERT^DGENUPL1(SEG(2),"ELIGIBILITY",.ERROR)
"RTN","DGENUPLA",25,0)
 I ERROR D  Q
"RTN","DGENUPLA",26,0)
 .D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"ELIGIBILITY CODE "_SEG(2)_" NOT FOUND IN ELIGIBILTIY CODE FILE",.ERRCOUNT)
"RTN","DGENUPLA",27,0)
 I COUNT=1 D
"RTN","DGENUPLA",28,0)
 .S DGELG("ELIG","CODE")=CODE
"RTN","DGENUPLA",29,0)
 .;S DGELG("DISRET")=$$CONVERT^DGENUPL1(SEG(5))
"RTN","DGENUPLA",30,0)
 .S DGELG("DISRET")=$$DISCONV(SEG(5)) ;DG*5.3*672
"RTN","DGENUPLA",31,0)
 .I ERROR D  Q
"RTN","DGENUPLA",32,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPLA",33,0)
 .S DGELG("CLAIMNUM")=$$CONVERT^DGENUPL1(SEG(6))
"RTN","DGENUPLA",34,0)
 .;
"RTN","DGENUPLA",35,0)
 .;** removed **
"RTN","DGENUPLA",36,0)
 .;S DGELG("CLAIMLOC")=$$CONVERT^DGENUPL1(SEG(7))
"RTN","DGENUPLA",37,0)
 .;
"RTN","DGENUPLA",38,0)
 .S DGPAT("VETERAN")=$$CONVERT^DGENUPL1(SEG(8),"Y/N",.ERROR)
"RTN","DGENUPLA",39,0)
 .I ERROR D  Q
"RTN","DGENUPLA",40,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 8",.ERRCOUNT)
"RTN","DGENUPLA",41,0)
 .S DGELG("ELIGSTA")=$$CONVERT^DGENUPL1(SEG(10))
"RTN","DGENUPLA",42,0)
 .S DGELG("ELIGSTADATE")=$$CONVERT^DGENUPL1(SEG(11),"DATE",.ERROR)
"RTN","DGENUPLA",43,0)
 .I ERROR D  Q
"RTN","DGENUPLA",44,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 11",.ERRCOUNT)
"RTN","DGENUPLA",45,0)
 .S DGELG("ELIGVERIF")=$$CONVERT^DGENUPL1(SEG(13))
"RTN","DGENUPLA",46,0)
 .S DGELG("A&A")=$$CONVERT^DGENUPL1(SEG(14),"Y/N",.ERROR)
"RTN","DGENUPLA",47,0)
 .I ERROR D  Q
"RTN","DGENUPLA",48,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 14",.ERRCOUNT)
"RTN","DGENUPLA",49,0)
 .S DGELG("HB")=$$CONVERT^DGENUPL1(SEG(15),"Y/N",.ERROR)
"RTN","DGENUPLA",50,0)
 .I ERROR D  Q
"RTN","DGENUPLA",51,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 15",.ERRCOUNT)
"RTN","DGENUPLA",52,0)
 .S DGELG("VAPEN")=$$CONVERT^DGENUPL1(SEG(16),"Y/N",.ERROR)
"RTN","DGENUPLA",53,0)
 .I ERROR D  Q
"RTN","DGENUPLA",54,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 16",.ERRCOUNT)
"RTN","DGENUPLA",55,0)
 .S DGELG("VADISAB")=$$CONVERT^DGENUPL1(SEG(17),"Y/N",.ERROR)
"RTN","DGENUPLA",56,0)
 .I ERROR D  Q
"RTN","DGENUPLA",57,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 17",.ERRCOUNT)
"RTN","DGENUPLA",58,0)
 .S DGELG("AO")=$$CONVERT^DGENUPL1(SEG(18),"Y/N",.ERROR)
"RTN","DGENUPLA",59,0)
 .N AOERR S AOERR=ERROR            ;  See SEG(29) below.
"RTN","DGENUPLA",60,0)
 .I ERROR D  Q
"RTN","DGENUPLA",61,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 18",.ERRCOUNT)
"RTN","DGENUPLA",62,0)
 .S DGELG("IR")=$$CONVERT^DGENUPL1(SEG(19),"Y/N",.ERROR)
"RTN","DGENUPLA",63,0)
 .I ERROR D  Q
"RTN","DGENUPLA",64,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 19",.ERRCOUNT)
"RTN","DGENUPLA",65,0)
 .S DGELG("EC")=$$CONVERT^DGENUPL1(SEG(20),"Y/N",.ERROR)
"RTN","DGENUPLA",66,0)
 .I ERROR D  Q
"RTN","DGENUPLA",67,0)
 ..D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 20",.ERROR)
"RTN","DGENUPLA",68,0)
 .;
"RTN","DGENUPLA",69,0)
 .S DGELG("VACKAMT")=$$CONVERT^DGENUPL1(SEG(21))
"RTN","DGENUPLA",70,0)
 .;
"RTN","DGENUPLA",71,0)
 .;Parse MST data into DGMST array from sequences 23, 24, 25 of ZEL segment
"RTN","DGENUPLA",72,0)
 . S DGMST("MSTSTAT")=SEG(23)
"RTN","DGENUPLA",73,0)
 . S DGMST("MSTDT")=$$CONVERT^DGENUPL1(SEG(24),"TS",.ERROR)
"RTN","DGENUPLA",74,0)
 . I ERROR D  Q
"RTN","DGENUPLA",75,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 24",.ERROR)
"RTN","DGENUPLA",76,0)
 . S DGMST("MSTST")=$$CONVERT^DGENUPL1(SEG(25),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",77,0)
 . I ERROR D  Q
"RTN","DGENUPLA",78,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 25",.ERROR)
"RTN","DGENUPLA",79,0)
 .;
"RTN","DGENUPLA",80,0)
 . S DGELG("AOEXPLOC")=SEG(29)
"RTN","DGENUPLA",81,0)
 .; Logic enhanced during SQA of patch 451.  AOERR from SEG(18) above.
"RTN","DGENUPLA",82,0)
 . I 'AOERR,DGELG("AO")'="Y",DGELG("AOEXPLOC")="" S DGELG("AOEXPLOC")="@"
"RTN","DGENUPLA",83,0)
 . S DGELG("UEYEAR")=$$CONVERT^DGENUPL1(SEG(34),"DATE",.ERROR)
"RTN","DGENUPLA",84,0)
 . I ERROR D  Q
"RTN","DGENUPLA",85,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 34",.ERRCOUNT)
"RTN","DGENUPLA",86,0)
 . S DGELG("UESITE")=$$CONVERT^DGENUPL1(SEG(35),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",87,0)
 . I ERROR D  Q
"RTN","DGENUPLA",88,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 35",.ERRCOUNT)
"RTN","DGENUPLA",89,0)
 . S DGELG("CVELEDT")=$$CONVERT^DGENUPL1(SEG(38),"DATE",.ERROR)
"RTN","DGENUPLA",90,0)
 . I ERROR D  Q
"RTN","DGENUPLA",91,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 38",.ERRCOUNT)
"RTN","DGENUPLA",92,0)
 . I $G(DGELG("DISLOD"))="" S DGELG("DISLOD")=$$CONVERT^DGENUPL1(SEG(39),"1/0",.ERROR) ;Discharge due to Disability - DG*5.3*672
"RTN","DGENUPLA",93,0)
 . I ERROR D  Q
"RTN","DGENUPLA",94,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, ZEL SEGMENT, SEQ 39",.ERRCOUNT)
"RTN","DGENUPLA",95,0)
 ;
"RTN","DGENUPLA",96,0)
 I COUNT>1 D
"RTN","DGENUPLA",97,0)
 .S DGELG("ELIG","CODE",CODE)=""
"RTN","DGENUPLA",98,0)
 Q
"RTN","DGENUPLA",99,0)
 ;
"RTN","DGENUPLA",100,0)
OBX ;
"RTN","DGENUPLA",101,0)
 N OBXPCE,OBXVAL,OBXTBL,I,CS,SS,RS
"RTN","DGENUPLA",102,0)
 I $G(HLECH)'="~|\&" N HLECH S HLECH="~|\&"
"RTN","DGENUPLA",103,0)
 I $G(HLFS)="" N HLFS S HLFS="^"
"RTN","DGENUPLA",104,0)
 S CS=$E(HLECH,1),SS=$E(HLECH,4),RS=$E(HLECH,2)
"RTN","DGENUPLA",105,0)
 I $G(SEG(3))=("38.1"_$E(HLECH)_"SECURITY LOG") D
"RTN","DGENUPLA",106,0)
 . N LEVEL
"RTN","DGENUPLA",107,0)
 . S LEVEL=$P(SEG(5),$E(HLECH))
"RTN","DGENUPLA",108,0)
 . S DGSEC("LEVEL")=$$CONVERT^DGENUPL1(LEVEL,"1/0",.ERROR)
"RTN","DGENUPLA",109,0)
 . I ERROR D  Q
"RTN","DGENUPLA",110,0)
 . . D ADDERROR^DGENUPL(MSGID,$G(DGPAT("SSN")),"BAD VALUE, OBX SEGMENT, SEQ 5",.ERRCOUNT)
"RTN","DGENUPLA",111,0)
 . S DGSEC("SOURCE")=$$CONVERT^DGENUPL1(SEG(16))
"RTN","DGENUPLA",112,0)
 ;
"RTN","DGENUPLA",113,0)
 I $G(SEG(3))=("VISTA"_CS_"28.11") D
"RTN","DGENUPLA",114,0)
 . S OBXTBL(1)="NTR^Y",OBXTBL(2)="AVI^Y",OBXTBL(3)="SUB^Y"
"RTN","DGENUPLA",115,0)
 . S OBXTBL(4)="HNC^Y",OBXTBL(5)="NTR^N",OBXTBL(6)="AVI^N"
"RTN","DGENUPLA",116,0)
 . S OBXTBL(7)="SUB^N",OBXTBL(8)="HNC^N",OBXTBL(9)="NTR^U"
"RTN","DGENUPLA",117,0)
 . F I=1:1:$L($G(SEG(5)),RS) D
"RTN","DGENUPLA",118,0)
 . . S OBXPCE=$P($G(SEG(5)),RS,I),OBXVAL=$P($G(OBXPCE),CS)
"RTN","DGENUPLA",119,0)
 . . S DGNTR($P($G(OBXTBL(OBXVAL)),"^"))=$P($G(OBXTBL(OBXVAL)),"^",2)
"RTN","DGENUPLA",120,0)
 . I $G(SEG(12))'="" S DGNTR("HDT")=$$CONVERT^DGENUPL1(SEG(12),"TS",.ERROR)
"RTN","DGENUPLA",121,0)
 . S DGNTR("VDT")=$$CONVERT^DGENUPL1(SEG(14),"TS",.ERROR)
"RTN","DGENUPLA",122,0)
 . S DGNTR("VSIT")=$$CONVERT^DGENUPL1(SEG(15),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",123,0)
 . S DGNTR("HSIT")=$P($P($G(SEG(16)),CS,14),SS,2)
"RTN","DGENUPLA",124,0)
 . I DGNTR("HSIT")'="" S DGNTR("HSIT")=$$CONVERT^DGENUPL1($G(DGNTR("HSIT")),"INSTITUTION",.ERROR)
"RTN","DGENUPLA",125,0)
 . S DGNTR("VER")=$P($G(SEG(17)),CS)
"RTN","DGENUPLA",126,0)
 Q
"RTN","DGENUPLA",127,0)
DISCONV(VAL,ERROR) ;
"RTN","DGENUPLA",128,0)
 ;DG*5.3*672 - Military Disability conversion to new values
"RTN","DGENUPLA",129,0)
 N DISRET
"RTN","DGENUPLA",130,0)
 S ERROR=0
"RTN","DGENUPLA",131,0)
 I VAL="" Q VAL
"RTN","DGENUPLA",132,0)
 I VAL="""""" S VAL="@" Q VAL
"RTN","DGENUPLA",133,0)
 I ((VAL="Y")!(VAL="N")) D  Q DISRET
"RTN","DGENUPLA",134,0)
 . S DISRET=$$CONVERT^DGENUPL1(VAL,"1/0",.ERROR)
"RTN","DGENUPLA",135,0)
 S (DISRET,DGELG("DISLOD"))=$S(VAL=0:0,VAL=1:1,VAL=2:1,VAL=3:0,1:"")
"RTN","DGENUPLA",136,0)
 I DISRET="" S ERROR=1 Q VAL
"RTN","DGENUPLA",137,0)
 Q DISRET
"RTN","DGLOCK")
0^13^B28148924
"RTN","DGLOCK",1,0)
DGLOCK ;ALB/MRL - PATIENT FILE DATA EDIT CHECKS ; 8/11/05 1:31pm
"RTN","DGLOCK",2,0)
 ;;5.3;Registration;**108,161,247,485,672**;Aug 13, 1993
"RTN","DGLOCK",3,0)
FFP ; DGFFP Access key required
"RTN","DGLOCK",4,0)
 I '$D(^XUSEC("DGFFP ACCESS",DUZ)) D EN^DDIOL("Fugitive Felon Key required to edit this field.","","!!?4") K X
"RTN","DGLOCK",5,0)
 Q
"RTN","DGLOCK",6,0)
EK ;EKey Rqrd
"RTN","DGLOCK",7,0)
 I '$D(^XUSEC("DG ELIGIBILITY",DUZ)) W !?4,$C(7),"Eligibility Key required to edit this field." K X
"RTN","DGLOCK",8,0)
 Q
"RTN","DGLOCK",9,0)
EV ;EK rqrd if Elig Ver
"RTN","DGLOCK",10,0)
 I '$D(^XUSEC("DG ELIGIBILITY",DUZ)),$D(^DPT(DFN,.361)) I $P(^(.361),U,1)="V" D EN^DDIOL("Eligibility verified...Eligibility Key required to edit this field.","","!?4") K X
"RTN","DGLOCK",11,0)
 Q
"RTN","DGLOCK",12,0)
EV2 ;if elig is ver Discharged Due to Disability can't be edited - DG 672
"RTN","DGLOCK",13,0)
 I $D(^DPT(DFN,.361)) I $P(^(.361),U,1)="V" D
"RTN","DGLOCK",14,0)
 . I $P(^DPT(DFN,.361),U,3)'="H" Q
"RTN","DGLOCK",15,0)
 . D EN^DDIOL("Eligibility verified at the HEC...NO EDITING!","","!?4") K X
"RTN","DGLOCK",16,0)
 Q
"RTN","DGLOCK",17,0)
SV ;EK Rqrd if Svc Rcrd Ver
"RTN","DGLOCK",18,0)
 I "NU"'[$E(X) D VET Q:'$D(X)
"RTN","DGLOCK",19,0)
SV1 I '$D(^XUSEC("DG ELIGIBILITY",DUZ)),$D(^DPT(DFN,.32)) I $P(^(.32),U,2)]"" D EN^DDIOL("Service Record verfied...Eligibility Key required to edit this field.","","!?4") K X
"RTN","DGLOCK",20,0)
 Q
"RTN","DGLOCK",21,0)
MV ;EK Rqrd if Money Ver
"RTN","DGLOCK",22,0)
 I "NU"'[$E(X) D VET Q:'$D(X)
"RTN","DGLOCK",23,0)
 I '$D(^XUSEC("DG ELIGIBILITY",DUZ)),$D(^DPT(DFN,.3)) I $P(^(.3),U,6)]"" W !?4,$C(7),"Monetary Benefits verified...Eligibility Key required to edit this field." K X
"RTN","DGLOCK",24,0)
 Q
"RTN","DGLOCK",25,0)
VET ;Veteran
"RTN","DGLOCK",26,0)
 S DGVV=$S($D(^DPT(DFN,"TYPE")):^("TYPE"),1:""),DGVV=$S($D(^DG(391,+DGVV,0)):$P(^(0),"^",2),1:"")
"RTN","DGLOCK",27,0)
 I $D(^DPT(DFN,"VET")),^("VET")'="Y",'DGVV D EN^DDIOL("Applicant is NOT a veteran!!","","!?4") K X
"RTN","DGLOCK",28,0)
 K DGVV Q
"RTN","DGLOCK",29,0)
VAGE ;Vet Age
"RTN","DGLOCK",30,0)
 S DGDATA=X,X1=DT,X2=$S($D(DFN):$P(^DPT(DFN,0),U,3),1:DPTIDS(.03)) S X=$E(X1,1,3)-$E(X2,1,3)-($E(X1,4,7)<$E(X2,4,7))
"RTN","DGLOCK",31,0)
 I X<17 W !?4,$C(7),"Applicant is TOO YOUNG to be a veteran...ONLY ",X," YEARS OLD!!",!?4,"See your supervisor if you require assistance." K X,X1,X2,DGDATA Q
"RTN","DGLOCK",32,0)
 S X=DGDATA K X1,X2,DGDATA Q
"RTN","DGLOCK",33,0)
AO ;Agent Orange
"RTN","DGLOCK",34,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.321)):1,$P(^(.321),U,2)'="Y":1,1:0) W !?4,$C(7),"Exposure to Agent Orange not indicated...NO EDITING!" K X
"RTN","DGLOCK",35,0)
 Q
"RTN","DGLOCK",36,0)
EC ;Environmental Contaminants
"RTN","DGLOCK",37,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.322)):1,$P(^(.322),U,13)'="Y":1,1:0) W !?4,$C(7),"Exposure to Environmental Contaminants not indicated...NO EDITING!" K X
"RTN","DGLOCK",38,0)
 I $D(X) I X<2900802 K X W !?4,$C(7),"Date must be on or after 8/2/1992!"
"RTN","DGLOCK",39,0)
 Q
"RTN","DGLOCK",40,0)
COM ;Combat
"RTN","DGLOCK",41,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.52)):1,$P(^(.52),U,11)'="Y":1,1:0) W !?4,$C(7),"Service in Combat Zone not indicated...NO EDITING!" K X
"RTN","DGLOCK",42,0)
 Q
"RTN","DGLOCK",43,0)
INE ;Ineligible
"RTN","DGLOCK",44,0)
 D EK I $D(X),$S('$D(^DPT(DFN,.15)):1,$P(^(.15),U,2)']"":1,1:0) W !?4,$C(7),"Requirement for 'Ineligible patient' data not indicated...NO EDITING!" K X
"RTN","DGLOCK",45,0)
 Q
"RTN","DGLOCK",46,0)
IR ;ION Rad
"RTN","DGLOCK",47,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.321)):1,$P(^(.321),U,3)'="Y":1,1:0) W !?4,$C(7),"Exposure to Ionizing Radiation is not indicated...NO EDITING!" K X
"RTN","DGLOCK",48,0)
 Q
"RTN","DGLOCK",49,0)
POW ;Prisoner of War
"RTN","DGLOCK",50,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.52)):1,$P(^(.52),U,5)'="Y":1,1:0) W !?5,$C(7),"Not identified as a former Prisoner of War...NO EDITING!" K X
"RTN","DGLOCK",51,0)
 Q
"RTN","DGLOCK",52,0)
SER1 ;NTL Svc
"RTN","DGLOCK",53,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.32)):1,$P(^(.32),U,19)'="Y":1,X="N":0,1:0) W !?4,$C(7),"Other Periods of Service are not indicated...NO EDITING!" K X
"RTN","DGLOCK",54,0)
 Q
"RTN","DGLOCK",55,0)
SER2 ;NNTL
"RTN","DGLOCK",56,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.32)):1,$P(^(.32),U,20)'="Y":1,X="N":0,1:0) W !?4,$C(7),"Third Period of Service is not indicated...NO EDITING!" K X
"RTN","DGLOCK",57,0)
 Q
"RTN","DGLOCK",58,0)
TAD ;Temp Add Edit
"RTN","DGLOCK",59,0)
 I $S('$D(^DPT(DFN,.121)):1,$P(^(.121),U,9)'="Y":1,1:0) W !?4,$C(7),"Requirement for Temporary Address data not indicated...NO EDITING!" K X
"RTN","DGLOCK",60,0)
 Q
"RTN","DGLOCK",61,0)
TADD ;Temp Address Delete?
"RTN","DGLOCK",62,0)
 Q:'$D(^DPT(DFN,.121))  I $P(^(.121),"^",9)="N"!($P(^(.121),"^",1,6)="^^^^^") Q
"RTN","DGLOCK",63,0)
ASK W !,"Do you want to delete all temporary address data" S %=2 D YN^DICN I %Y["?" W !,"Answer 'Y'es to remove temporary address information, 'N'o to leave data in file" G ASK
"RTN","DGLOCK",64,0)
 Q:%'=1  S DGTEMPH=$P(^DPT(DFN,.121),"^",7,8),^(.121)="^^^^^^"_DGTEMPH_"^N^^" K DGTEMPH Q
"RTN","DGLOCK",65,0)
VN ;Viet Svc
"RTN","DGLOCK",66,0)
 D SV I $D(X),$S('$D(^DPT(DFN,.321)):1,$P(^(.321),U,1)'="Y":1,1:0) I "UN"'[$E(X) W !?4,$C(7),"Service in Republic of Vietnam not indicated...NO EDITING!" K X
"RTN","DGLOCK",67,0)
 Q
"RTN","DGLOCK",68,0)
SVED ;Lebanon, Grenada, Panama, Persian Gulf & Yugoslavia svc edit
"RTN","DGLOCK",69,0)
 ;      (from and to dates)
"RTN","DGLOCK",70,0)
 ;DGX = piece position of corresponding service indicated? field
"RTN","DGLOCK",71,0)
 ;      for multiple serv indicated dgx=sv1^sv2^...
"RTN","DGLOCK",72,0)
 ;DGSV= service (sv1, sv2 from above)
"RTN","DGLOCK",73,0)
 ;DGOK= 1=YES,at least one of the required sv indicated is yes,0=NO
"RTN","DGLOCK",74,0)
 D SV I '$D(X) K DGX Q
"RTN","DGLOCK",75,0)
 N DGSV,DGOK,DGPC,PC
"RTN","DGLOCK",76,0)
 S DGOK=0
"RTN","DGLOCK",77,0)
 F PC=1:1 S DGSV=$P(DGX,U,PC) Q:DGSV']""  S:$P($G(^DPT(DFN,.322)),U,DGSV)="Y" DGOK=1
"RTN","DGLOCK",78,0)
 S PC=PC-1
"RTN","DGLOCK",79,0)
 I DGOK=0 D
"RTN","DGLOCK",80,0)
 .I "UN"'[$E(X) D
"RTN","DGLOCK",81,0)
 ..W !?4,$C(7),"Service in "
"RTN","DGLOCK",82,0)
 ..F DGPC=1:1:PC D
"RTN","DGLOCK",83,0)
 ...S DGSV=$P(DGX,U,DGPC) W $S(DGSV=1:"Lebanon",DGSV=4:"Grenada",DGSV=7:"Panama",DGSV=10:"Persian Gulf",DGSV=16:"Somalia",DGSV=19:"Yugoslavia",1:"")
"RTN","DGLOCK",84,0)
 ...W:(DGPC<PC) " or "
"RTN","DGLOCK",85,0)
 ..W " not indicated...NO EDITING!" K X
"RTN","DGLOCK",86,0)
 K DGX
"RTN","DGLOCK",87,0)
 Q
"RTN","DGMTR")
0^14^B52342818
"RTN","DGMTR",1,0)
DGMTR ;ALB/RMO,CAW,SCG,AEG,SCG,AEG,LBD - Check Means Test Requirements ; 7/8/05 2:30pm
"RTN","DGMTR",2,0)
 ;;5.3;Registration;**45,93,114,137,141,147,177,182,146,305,326,314,344,402,426,456,495,672**;Aug 13, 1993
"RTN","DGMTR",3,0)
 ;A patient requires a means test under the following conditions:
"RTN","DGMTR",4,0)
 ;  - Primary Eligibility is NSC OR patient is SC 0% non-compensable
"RTN","DGMTR",5,0)
 ;  - who is NOT receiving disability retirement from the military
"RTN","DGMTR",6,0)
 ;  - who is NOT eligible for medicaid
"RTN","DGMTR",7,0)
 ;  - who is NOT on a DOM ward
"RTN","DGMTR",8,0)
 ;  - who has NOT been means tested in the past year
"RTN","DGMTR",9,0)
 ;  - who is NOT a Purple Heart recipient
"RTN","DGMTR",10,0)
 ; Input  -- DFN     Patient IEN
"RTN","DGMTR",11,0)
 ;           DGADDF  Means Test Add Flag  (Optional- default none)
"RTN","DGMTR",12,0)
 ;                   (1 if using the 'Add a New Means Test' option)
"RTN","DGMTR",13,0)
 ;           DGMSGF  Means Test Msg Flag  (Optional- default none)
"RTN","DGMTR",14,0)
 ;                   (1 to suppress messages)
"RTN","DGMTR",15,0)
 ; Output -- DGREQF  Means Test Require Flag
"RTN","DGMTR",16,0)
 ;                   (1 if required and 0 if not required)
"RTN","DGMTR",17,0)
 ;           DGDOM1  DOM Patient Flag (defined and set to 1 if
"RTN","DGMTR",18,0)
 ;                               patient currently on a DOM ward)
"RTN","DGMTR",19,0)
 ;           DGNOCOPF = 1 to suppress copay test prompt 0 otherwise
"RTN","DGMTR",20,0)
 ;                      used in CP^DG10.  Killed there as well.
"RTN","DGMTR",21,0)
 ;           If NOT using the 'Add a New Means Test' option,
"RTN","DGMTR",22,0)
 ;           a REQUIRED date of test will be added for the
"RTN","DGMTR",23,0)
 ;           patient if it is required.
"RTN","DGMTR",24,0)
 ;           If a means test is required and the current
"RTN","DGMTR",25,0)
 ;           status is NO LONGER REQUIRED, the last date of
"RTN","DGMTR",26,0)
 ;           test and current means test status will be
"RTN","DGMTR",27,0)
 ;           updated to REQUIRED.
"RTN","DGMTR",28,0)
 ;           If a means test is no longer required the
"RTN","DGMTR",29,0)
 ;           last date of test and the current means test
"RTN","DGMTR",30,0)
 ;           status will also be updated to NO LONGER REQUIRED.
"RTN","DGMTR",31,0)
EN N DGCS,DGDOM,DGMT0,DGMTI,DGMTYPT,OLD,DGRGAUTO,DGQSENT,DGMTLTD,DGMDOD,DGMTDT
"RTN","DGMTR",32,0)
 ;DG*5.3*146 change to exit if during patient merge process
"RTN","DGMTR",33,0)
 Q:$G(VAFCA08)=1
"RTN","DGMTR",34,0)
 ;DGMTCOR is needed if uploading copay test
"RTN","DGMTR",35,0)
 I $G(RXPRIME)'="DGMTU4" N DGMTCOR
"RTN","DGMTR",36,0)
 S (DGQSENT,DGREQF)=0,(OLD,DGMTYPT)=1
"RTN","DGMTR",37,0)
 I $D(^DPT(DFN,.36)) S X=^(.36) D
"RTN","DGMTR",38,0)
 . I $P($G(^DIC(8,+X,0)),"^",9)=5!($$SC(DFN)) S DGREQF=1
"RTN","DGMTR",39,0)
 . I $P(X,"^",12)=1 S DGREQF=0 ;new field, DG 672
"RTN","DGMTR",40,0)
 . I $P(X,"^",13)=1 S DGREQF=0 ;new field, DG 672 
"RTN","DGMTR",41,0)
 S (DGMTI,DGMT0)="",DGMTI=+$$LST^DGMTU(DFN)
"RTN","DGMTR",42,0)
 S:DGMTI DGMT0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTR",43,0)
 ;Added with DG*5.3*344
"RTN","DGMTR",44,0)
 S:DGMTI DGMTDT=$P(DGMT0,U)
"RTN","DGMTR",45,0)
 S DGMDOD=$P($G(^DPT(DFN,.35)),U)
"RTN","DGMTR",46,0)
 I 'DGMTI,$G(DGMDOD) D EN^DGMTCOR S DGREQF=0 Q
"RTN","DGMTR",47,0)
 I DGREQF S:$G(^DPT(DFN,.38)) DGREQF=0
"RTN","DGMTR",48,0)
 I DGREQF D DOM S:$G(DGDOM) DGREQF=0
"RTN","DGMTR",49,0)
 S DGCS=$P(DGMT0,"^",3)
"RTN","DGMTR",50,0)
 S DGMTLTD=+DGMT0,DGNOCOPF=0
"RTN","DGMTR",51,0)
 I +$G(DGMDOD) S DGNOCOPF=1
"RTN","DGMTR",52,0)
 I DGCS S OLD=$$OLD^DGMTU4(+DGMT0)
"RTN","DGMTR",53,0)
 ;Purple Heart Recipient ;brm 10/02/00 added 1 line below
"RTN","DGMTR",54,0)
 I $P($G(^DPT(DFN,.53)),U)="Y" S DGREQF=0
"RTN","DGMTR",55,0)
 D
"RTN","DGMTR",56,0)
 .I DGREQF,DGCS=3,'OLD D REQ Q
"RTN","DGMTR",57,0)
 .I DGREQF,'$G(DGADDF),((DGCS=6)!(DGCS=2)),$P(DGMT0,U,11)=1,DGMTLTD>2991005 S DGREQF=0,DGNOCOPF=1 Q
"RTN","DGMTR",58,0)
 .; next line added 2/19/02 - DG*5.3*426
"RTN","DGMTR",59,0)
 .I DGREQF,'$G(DGADDF),$G(DGCS)=6,+$P(DGMT0,U,14),+$P(DGMT0,U,11) S DGREQF=0,DGNOCOPF=1 Q
"RTN","DGMTR",60,0)
 .I DGREQF,'$G(DGADDF),(('DGCS)!(OLD)),'$G(DGMDOD) D ADD Q
"RTN","DGMTR",61,0)
 .I 'DGREQF,DGCS,DGCS'=3,'$G(DGDOM),'$G(DGMDOD),'+$G(IVMZ10F) D NOL Q
"RTN","DGMTR",62,0)
 ;be sure to check whether or not patient is subject to RX copay!
"RTN","DGMTR",63,0)
 D EN^DGMTCOR
"RTN","DGMTR",64,0)
 Q
"RTN","DGMTR",65,0)
 ;Check if patient is in a DOM
"RTN","DGMTR",66,0)
 ;  call to DOM checks if patient currently on a DOM ward
"RTN","DGMTR",67,0)
 ;                                     (called from EN)
"RTN","DGMTR",68,0)
 ;  call to DOM1 checks if patient on a DOM ward for a specific date
"RTN","DGMTR",69,0)
 ;    before call to DOM1 - N VAINDT,VADMVT,DGDOM,DGDOM1
"RTN","DGMTR",70,0)
 ;                          S VAINDT=specific date
"RTN","DGMTR",71,0)
 ;                          S DFN=Patient IEN
"RTN","DGMTR",72,0)
 ;                 output - DGDOM & DGDOM1 (defined and set to 1 if
"RTN","DGMTR",73,0)
 ;                          patient on a DOM ward for specific date)
"RTN","DGMTR",74,0)
DOM N VAINDT,VADMVT
"RTN","DGMTR",75,0)
DOM1 D ADM^VADPT2
"RTN","DGMTR",76,0)
 I VADMVT,$P($G(^DG(43,1,0)),"^",21),$D(^DIC(42,+$P($G(^DGPM(VADMVT,0)),"^",6),0)),$P(^(0),"^",3)="D" S (DGDOM,DGDOM1)=1
"RTN","DGMTR",77,0)
 Q
"RTN","DGMTR",78,0)
SC(DFN) ;Check if patient is SC 0% non-compensable
"RTN","DGMTR",79,0)
 ; Input  -- DFN     Patient IEN
"RTN","DGMTR",80,0)
 ; Output -- 1=Yes and 0=No
"RTN","DGMTR",81,0)
 ;     No if:
"RTN","DGMTR",82,0)
 ;        No total annual VA check amount
"RTN","DGMTR",83,0)
 ;        POW STATUS INDICATOR is yes
"RTN","DGMTR",84,0)
 ;        Secondary Eligibility is one of the following:
"RTN","DGMTR",85,0)
 ;           A&A, NSC, VA PENSION
"RTN","DGMTR",86,0)
 ;           HOUSEBOUND, MEXICAN BORDER WAR, WWI, POW
"RTN","DGMTR",87,0)
 N DG,DGE,DGF,Y
"RTN","DGMTR",88,0)
 S Y=0
"RTN","DGMTR",89,0)
 ;Primary eligibility is SC LESS THAN 50%
"RTN","DGMTR",90,0)
 I $D(^DPT(DFN,.36)),$P($G(^DIC(8,+^(.36),0)),"^",9)=3 S Y=1
"RTN","DGMTR",91,0)
 G:'Y SCQ
"RTN","DGMTR",92,0)
 ;Service connected percentage is 0
"RTN","DGMTR",93,0)
 I $P($G(^DPT(DFN,.3)),"^",2)'=0 S Y=0 G SCQ
"RTN","DGMTR",94,0)
 ;No Total annual VA check amount
"RTN","DGMTR",95,0)
 I $P($G(^DPT(DFN,.362)),"^",20) S Y=0 G SCQ
"RTN","DGMTR",96,0)
 ;POW STATUS INDICATOR
"RTN","DGMTR",97,0)
 I $P($G(^DPT(DFN,.52)),"^",5)="Y" S Y=0 G SCQ
"RTN","DGMTR",98,0)
 ;Purple Heart Indicator
"RTN","DGMTR",99,0)
 I $P($G(^DPT(DFN,.53)),"^")="Y" S Y=0 G SCQ
"RTN","DGMTR",100,0)
 ;Secondary Eligibility
"RTN","DGMTR",101,0)
 F DG=2,4,15:1:18 S DGE(DG)=""
"RTN","DGMTR",102,0)
 S DG=0 F  S DG=$O(^DPT(DFN,"E","B",DG)) Q:'DG  D SELIG I DGF,$D(DGE(+DGF)) S Y=0 Q
"RTN","DGMTR",103,0)
SCQ Q +$G(Y)
"RTN","DGMTR",104,0)
ADD ;Add a required means test
"RTN","DGMTR",105,0)
 N DGMTA,DGMTACT,DGMTDT,DGMTI,DGMTP,ERROR
"RTN","DGMTR",106,0)
 W:'$G(DGMSGF) !,"MEANS TEST REQUIRED"
"RTN","DGMTR",107,0)
 S DGMTACT="ADD" D PRIOR^DGMTEVT
"RTN","DGMTR",108,0)
 S DGMTDT=DT D ADD^DGMTA
"RTN","DGMTR",109,0)
 I DGMTI>0 S DGMTYPT=1 D
"RTN","DGMTR",110,0)
 .N DATA S DATA(.03)=$$GETSTAT^DGMTH("R",1) I $$UPD^DGENDBS(408.31,DGMTI,.DATA)
"RTN","DGMTR",111,0)
 .D GETINCOM^DGMTU4(DFN,DT)
"RTN","DGMTR",112,0)
 .D QUE
"RTN","DGMTR",113,0)
 I $G(IVMZ10)'="UPLOAD IN PROGRESS",'$$OPEN^IVMCQ2(DFN),'$$SENT^IVMCQ2(DFN) D QRYQUE2^IVMCQ2(DFN,$G(DUZ),0,$G(XQY)) S DGQSENT=1 I '$D(ZTQUEUED),'$G(DGMSGF) W !!,"Financial query queued to be sent to HEC..."
"RTN","DGMTR",114,0)
 Q
"RTN","DGMTR",115,0)
REQ ;Update means test status to REQUIRED
"RTN","DGMTR",116,0)
 N DGMTA,AUTOCOMP,DGMTE,ERROR
"RTN","DGMTR",117,0)
 ;may have set prior MT for means test upload
"RTN","DGMTR",118,0)
 I $G(MTPRIME)'="DGMTU4" N DGMTP,DGMTACT S DGMTACT="STA" D PRIOR^DGMTEVT
"RTN","DGMTR",119,0)
 S AUTOCOMP=$$AUTOCOMP(DGMTI)
"RTN","DGMTR",120,0)
 ;if a test were auto-completed, don't want another being added inadvertently
"RTN","DGMTR",121,0)
 I AUTOCOMP,$G(DGADDF) S DGADDF=0
"RTN","DGMTR",122,0)
 I AUTOCOMP S DGCS=$P($G(^DGMT(408.31,DGMTI,0)),"^",3)
"RTN","DGMTR",123,0)
 I $G(IVMZ10)'="UPLOAD IN PROGRESS",'AUTOCOMP,'$$OPEN^IVMCQ2(DFN),'$$SENT^IVMCQ2(DFN) D QRYQUE2^IVMCQ2(DFN,$G(DUZ),0,$G(XQY)) S DGQSENT=1 I '$D(ZTQUEUED),'$G(DGMSGF) W !!,"Financial query queued to be sent to HEC..."
"RTN","DGMTR",124,0)
 I ('AUTOCOMP),('$G(DGMSGF)) W !,"MEANS TEST REQUIRED"
"RTN","DGMTR",125,0)
 I (AUTOCOMP),('$G(DGMSGF)) W !,"CURRENT MEANS TEST STATUS IS ",$$GETNAME^DGMTH(DGCS)
"RTN","DGMTR",126,0)
 S DGMTYPT=1
"RTN","DGMTR",127,0)
 D QUE
"RTN","DGMTR",128,0)
 Q
"RTN","DGMTR",129,0)
AUTOCOMP(DGMTI) ;
"RTN","DGMTR",130,0)
 ;Will either automatically complete the test (RX copay or means test) 
"RTN","DGMTR",131,0)
 ;based on the Test Determined Status, or will change the status to
"RTN","DGMTR",132,0)
 ;Required for means tests or Incomplete for Rx copay tests
"RTN","DGMTR",133,0)
 ;Input:
"RTN","DGMTR",134,0)
 ;  DGMTI - the ien of the test
"RTN","DGMTR",135,0)
 ;Output:
"RTN","DGMTR",136,0)
 ;  Function value - 1 if the test was completed, 0 otherwise
"RTN","DGMTR",137,0)
 N NODE0,NODE2,DATA,RET,LINKIEN,DGINR,DGINI,ERROR,CODE,TYPE,DFN,TDATE
"RTN","DGMTR",138,0)
 S RET=0
"RTN","DGMTR",139,0)
 Q:'$G(DGMTI) RET
"RTN","DGMTR",140,0)
 S NODE0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTR",141,0)
 Q:(NODE0="") RET
"RTN","DGMTR",142,0)
 S TYPE=$P(NODE0,"^",19)
"RTN","DGMTR",143,0)
 S DFN=$P(NODE0,"^",2)
"RTN","DGMTR",144,0)
 S TDATE=+NODE0
"RTN","DGMTR",145,0)
 S NODE2=$G(^DGMT(408.31,DGMTI,2))
"RTN","DGMTR",146,0)
 ;get test-determined status code
"RTN","DGMTR",147,0)
 S CODE=$$GETCODE^DGMTH($P(NODE2,"^",3))
"RTN","DGMTR",148,0)
 ;if means test
"RTN","DGMTR",149,0)
 I TYPE=1 D
"RTN","DGMTR",150,0)
 .S DATA(.03)=$$GETSTAT^DGMTH("R",1),DATA(.17)=""
"RTN","DGMTR",151,0)
 .I (CODE'=""),"ACGP"[CODE D
"RTN","DGMTR",152,0)
 ..S RET=1
"RTN","DGMTR",153,0)
 ..S DATA(.03)=$P(NODE2,"^",3)
"RTN","DGMTR",154,0)
 ..;determine status if there is a hardship
"RTN","DGMTR",155,0)
 ..I $P(NODE0,"^",20) D
"RTN","DGMTR",156,0)
 ...S DATA(.03)=$$GETSTAT^DGMTH($S(CODE="P":"P",CODE="C"&($P(NODE0,U,27)>$P(NODE0,U,12)):"G",1:"A"),1)
"RTN","DGMTR",157,0)
 ;RX copay test
"RTN","DGMTR",158,0)
 I TYPE=2 D
"RTN","DGMTR",159,0)
 .S DATA(.03)=$$GETSTAT^DGMTH("I",2),DATA(.17)=""
"RTN","DGMTR",160,0)
 .I (CODE'=""),"EM"[CODE D
"RTN","DGMTR",161,0)
 ..S RET=1
"RTN","DGMTR",162,0)
 ..S DATA(.03)=$P(NODE2,"^",3)
"RTN","DGMTR",163,0)
 I '$$UPD^DGENDBS(408.31,DGMTI,.DATA,.ERROR) W:'$G(DGMSGF) ERROR
"RTN","DGMTR",164,0)
 ;restore the pointers from the Income Relation file (408.22) to this
"RTN","DGMTR",165,0)
 ;test, using the linked test
"RTN","DGMTR",166,0)
 S LINKIEN=$P(NODE2,"^",6)
"RTN","DGMTR",167,0)
 I LINKIEN D
"RTN","DGMTR",168,0)
 .S DGINI=0 F  S DGINI=$O(^DGMT(408.22,"AMT",LINKIEN,DFN,DGINI)) Q:'DGINI  S DGINR=$O(^DGMT(408.22,"AMT",LINKIEN,DFN,DGINI,"")) I $P($G(^DGMT(408.22,+DGINR,"MT")),"^")]"" D
"RTN","DGMTR",169,0)
 ..K DATA
"RTN","DGMTR",170,0)
 ..S DATA(31)=DGMTI
"RTN","DGMTR",171,0)
 ..I $$UPD^DGENDBS(408.22,+DGINR,.DATA)
"RTN","DGMTR",172,0)
 D GETINCOM^DGMTU4(DFN,TDATE)
"RTN","DGMTR",173,0)
 Q RET
"RTN","DGMTR",174,0)
NOL ;Update means test status to NO LONGER REQUIRED
"RTN","DGMTR",175,0)
 N DGMTA,DGINI,DGINR,DGMTDT,DATA
"RTN","DGMTR",176,0)
 W:'$G(DGMSGF) !,"MEANS TEST NO LONGER REQUIRED"
"RTN","DGMTR",177,0)
 ;may have set prior MT for means test upload
"RTN","DGMTR",178,0)
 I $G(MTPRIME)'="DGMTU4" N DGMTP,DGMTACT S DGMTACT="STA" D PRIOR^DGMTEVT
"RTN","DGMTR",179,0)
 ;save the Test Determined Status
"RTN","DGMTR",180,0)
 D SAVESTAT^DGMTU4(DGMTI)
"RTN","DGMTR",181,0)
 S DATA(.03)=3,DATA(.17)=DT I $$UPD^DGENDBS(408.31,DGMTI,.DATA)
"RTN","DGMTR",182,0)
 D QUE
"RTN","DGMTR",183,0)
 ;create a Rx copay test based on MT if needed
"RTN","DGMTR",184,0)
 D COPYRX^DGMTR1(DFN,DGMTI)
"RTN","DGMTR",185,0)
NOLQ Q
"RTN","DGMTR",186,0)
SET ;Set Cross-reference
"RTN","DGMTR",187,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGMTR",188,0)
 S DA=DGIEN,X=DGVAL,DGIX=0
"RTN","DGMTR",189,0)
 F  S DGIX=$O(^DD(DGFL,DGFLD,1,DGIX)) Q:'DGIX  X ^(DGIX,1) S X=DGVAL
"RTN","DGMTR",190,0)
 Q
"RTN","DGMTR",191,0)
KILL ;Kill Cross-reference
"RTN","DGMTR",192,0)
 N D0,DA,DIV,DGIX,X
"RTN","DGMTR",193,0)
 S DA=DGIEN,X=DGVAL,DGIX=0
"RTN","DGMTR",194,0)
 F  S DGIX=$O(^DD(DGFL,DGFLD,1,DGIX)) Q:'DGIX  X ^(DGIX,2) S X=DGVAL
"RTN","DGMTR",195,0)
 Q
"RTN","DGMTR",196,0)
QUE ;Queue means test event driver
"RTN","DGMTR",197,0)
 D AFTER^DGMTEVT
"RTN","DGMTR",198,0)
 S ZTDESC="MEANS TEST EVENT DRIVER",ZTDTH=$H,ZTRTN="EN^DGMTEVT"
"RTN","DGMTR",199,0)
 F I="DFN","DGMTACT","DGMTI","DGMTP","DGMTA","DGMTYPT" S ZTSAVE(I)=""
"RTN","DGMTR",200,0)
 S ZTSAVE("DGMTINF")=1
"RTN","DGMTR",201,0)
 I $D(IVMZ10) S ZTSAVE("IVMZ10")=""
"RTN","DGMTR",202,0)
 I $D(DGENUPLD) S ZTSAVE("DGENUPLD")=""
"RTN","DGMTR",203,0)
 S ZTIO="" D ^%ZTLOAD
"RTN","DGMTR",204,0)
 K ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","DGMTR",205,0)
 Q
"RTN","DGMTR",206,0)
SELIG ;Check if secondary eligibility code missing from ELIGIBILITY CODE
"RTN","DGMTR",207,0)
 ;file (#8) or entry in file #8 not pointing to MAS ELIGIBILITY
"RTN","DGMTR",208,0)
 ;CODE file (#8.1)
"RTN","DGMTR",209,0)
 N DGTXT
"RTN","DGMTR",210,0)
 S DGF=$G(^DIC(8,+DG,0)) I DGF="" D  Q
"RTN","DGMTR",211,0)
 .S DGTXT(4)="Entry with an IEN OF "_DG_" missing from"
"RTN","DGMTR",212,0)
 .S DGTXT(5)="the ELIGIBILITY CODE file (#8)"
"RTN","DGMTR",213,0)
 .D MAIL^DGMTR1
"RTN","DGMTR",214,0)
 .Q
"RTN","DGMTR",215,0)
 S DGF=$P(DGF,"^",9) I DGF=""!('$D(^DIC(8.1,+DGF,0))) D
"RTN","DGMTR",216,0)
 .S DGTXT(4)="ELIGIBILITY CODE file (#8) entry with an IEN OF "_DG_" doesn't"
"RTN","DGMTR",217,0)
 .S DGTXT(5)="have a valid pointer to the MAS ELIGIBILITY CODE file (#8.1)"
"RTN","DGMTR",218,0)
 .D MAIL^DGMTR1
"RTN","DGMTR",219,0)
 .S DGF=""
"RTN","DGMTR",220,0)
 .Q
"RTN","DGMTR",221,0)
 Q
"RTN","DGRP6")
0^16^B21696130
"RTN","DGRP6",1,0)
DGRP6 ;ALB/MRL,LBD - REGISTRATION SCREEN 6/SERVICE INFORMATION ; 9/1/05 7:28am
"RTN","DGRP6",2,0)
 ;;5.3;Registration;**161,247,343,397,342,451,672**;Aug 13, 1993
"RTN","DGRP6",3,0)
 S DGRPS=6 D H^DGRPU F I=.32,.321,.322,.36,.52,.53 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP6",4,0)
 S (DGRPW,Z)=1 D WW^DGRPV S Z=" Service Branch",Z1=24 D WW1^DGRPV S Z="Service #",Z1=19 D WW1^DGRPV S Z="Entered",Z1=12 D WW1^DGRPV S Z="Separated",Z1=12 D WW1^DGRPV W "Discharge"
"RTN","DGRP6",5,0)
 W !?4,"--------------",?27,"---------",?46,"-------",?58,"---------",?70,"---------"
"RTN","DGRP6",6,0)
 S DGRPX=DGRP(.32),DGRPSV=4 D S I $P(DGRPX,"^",19)="Y" S DGRPSV=9 D S I $P(DGRPX,"^",20)="Y" S DGRPSV=14 D S
"RTN","DGRP6",7,0)
 S Z=2,DGRPX=DGRP(.52) D WW^DGRPV W "           POW: " S X=5,Z1=6 D YN W "From: " S X=7,Z1=13 D DAT W "To: " S X=8,Z1=12 D DAT W "War: ",$S($D(^DIC(22,+$P(DGRPX,"^",6),0)):$P(^(0),"^",2),1:"")
"RTN","DGRP6",8,0)
 S Z=3 D WW^DGRPV W "        Combat: " S X=11,Z1=6 D YN W "From: " S X=13,Z1=13 D DAT W "To: " S X=14,Z1=12 D DAT W "Loc: ",$S($D(^DIC(22,+$P(DGRPX,"^",12),0)):$P(^(0),"^",2),1:"")
"RTN","DGRP6",9,0)
 S Z=4,DGRPX=DGRP(.321) D WW^DGRPV W "       Vietnam: " S X=1,Z1=6 D YN W "From: " S X=4,Z1=13 D DAT W "To: " S X=5,Z1=13 D DAT
"RTN","DGRP6",10,0)
 S Z=5 D WW^DGRPV W "      A/O Exp.: " S X=2,Z1=7 D YN W "Reg: " S X=7,Z1=11 D DAT W "Exam: " S X=9,Z1=11 D DAT W "A/O#: " S Z=$P(DGRPX,"^",10),Z1=8 D WW1^DGRPV S Z=$P(DGRPX,"^",13) W $S(Z="K":" DMZ",Z="V":"VIET",1:"")
"RTN","DGRP6",11,0)
 S Z=6 D WW^DGRPV W "      ION Rad.: " S X=3,Z1=7 D YN W "Reg: " S X=11,Z1=9 D DAT W "Method: " S X=$P(DGRPX,"^",12) W $S(X="B":"BOTH",X="T":"NUCLEAR TESTING",X="N":"NAGASAKI/HIROSHIMA",1:"")
"RTN","DGRP6",12,0)
 S DGRPX=DGRP(.322)
"RTN","DGRP6",13,0)
 F DGX=1,4,7,10 S X=DGX,Z=DGX-1/3+7 D WW^DGRPV W:DGX<10 " " W $S(DGX=1:"      Lebanon",DGX=4:"      Grenada",DGX=7:"       Panama",1:"     Gulf War"),": " S Z1=6 D YN W "From: " S X=DGX+1,Z1=13 D DAT W "To: " S X=DGX+2,Z1=12 D DAT
"RTN","DGRP6",14,0)
 S Z=11 D WW^DGRPV W "      Somalia: " S (DGX,X)=16,Z1=6 D YN W "From: " S X=17,Z1=13 D DAT W "To: " S X=18,Z1=12 D DAT
"RTN","DGRP6",15,0)
 S Z=12 D WW^DGRPV W "   Env Contam: " S X=13,Z1=7 D YN W "Reg: " S X=14,Z1=11 D DAT W "Exam: " S X=15,Z1=10 D DAT
"RTN","DGRP6",16,0)
 S Z=13 D WW^DGRPV S X=$P(DGRP(.36),"^",12),XX=$P(DGRP(.36),"^",13)
"RTN","DGRP6",17,0)
 N DGSPACE
"RTN","DGRP6",18,0)
 S DGSPACE=$S($G(X)="0":" ",$G(X)="1":"",1:"   ")
"RTN","DGRP6",19,0)
 W "     Mil Disab Retirement: ",$S(X=0:"NO",X=1:"YES",1:"") W DGSPACE_"        Dischrg Due to Disab: ",$S(XX=0:"NO",XX=1:"YES",1:"")
"RTN","DGRP6",20,0)
 ;W !
"RTN","DGRP6",21,0)
 S Z=14 D WW^DGRPV W "     Dent Inj: " S DGRPX=DGRP(.36),X=8,Z1=28 D YN W "Teeth Extracted: " S X=9,Z1=9 D YN S DGRPD=0 I $P(DGRPX,"^",8)="Y",$P(DGRPX,"^",9)="Y" S DGRPD=1
"RTN","DGRP6",22,0)
 I DGRPD S I1="" F I=0:0 S I=$O(^DPT(DFN,.37,I)) Q:'I  S I1=1,DGRPX=^(I,0) D DEN
"RTN","DGRP6",23,0)
 S DGRPX=DGRP(.322)
"RTN","DGRP6",24,0)
 S Z=15 D WW^DGRPV W "   Yugoslavia: " S (DGX,X)=19,Z1=6 D YN W "From: " S X=20,Z1=13 D DAT W "To: " S X=21,Z1=12 D DAT
"RTN","DGRP6",25,0)
 S Z=16 D WW^DGRPV W " Purple Heart: " S DGRPX=DGRP(.53),X=1 D YN D
"RTN","DGRP6",26,0)
 . I $P($G(DGRPX),U)="Y",($P($G(DGRPX),U,2)]"") W ?26,"PH Status: "_$S($P($G(DGRPX),U,2)="1":"Pending",$P($G(DGRPX),U,2)="2":"In Process",$P($G(DGRPX),U,2)="3":"Confirmed",1:"")
"RTN","DGRP6",27,0)
 I $P($G(DGRPX),U)="N" D
"RTN","DGRP6",28,0)
 . S DGX=$P(DGRPX,U,3)
"RTN","DGRP6",29,0)
 . S DGX=$S($G(DGX)=1:"UNACCEPTABLE DOCUMENTATION",$G(DGX)=2:"NO DOCUMENTATION REC'D",$G(DGX)=3:"ENTERED IN ERROR",$G(DGX)=4:"UNSUPPORTED PURPLE HEART",$G(DGX)=5:"VAMC",$G(DGX)=6:"UNDELIVERABLE MAIL",1:"")
"RTN","DGRP6",30,0)
 . I $G(DGX)]"" W ?26,"PH Remarks: "_$S($G(DGX)]"":$G(DGX),1:"")
"RTN","DGRP6",31,0)
 S Z=17 D WW^DGRPV W "   N/T Radium: " D     ;N/T Radium Treatment expos.
"RTN","DGRP6",32,0)
 . N DGNT S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT") W $G(DGNT("INTRP"))
"RTN","DGRP6",33,0)
Q K DGRPD,DGRPSV
"RTN","DGRP6",34,0)
 G ^DGRPP
"RTN","DGRP6",35,0)
YN S Z=$S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNK",1:"") D WW1^DGRPV Q
"RTN","DGRP6",36,0)
DAT S Z=$P(DGRPX,"^",X) I Z']"" S Z=""
"RTN","DGRP6",37,0)
 E  S Z=$$FMTE^XLFDT(Z,"5DZ")
"RTN","DGRP6",38,0)
 D WW1^DGRPV Q
"RTN","DGRP6",39,0)
DEN W !?3," Trt Date: " S X=1,Z1=10 D DAT W "Cond.: ",$E($P(DGRPX,"^",2),1,45) Q
"RTN","DGRP6",40,0)
S N DGRPSB S DGRPSB=+$P(DGRPX,U,DGRPSV+1)  ;Service Branch
"RTN","DGRP6",41,0)
 W !?4,$S($D(^DIC(23,DGRPSB,0)):$E($P(^(0),"^",1),1,15),1:DGRPU) W:$$FV^DGRPMS(DGRPSB)=1 ?20,"("_$P(DGRP(.321),U,14)_")"
"RTN","DGRP6",42,0)
 W ?27,$S($P(DGRPX,"^",DGRPSV+4)]"":$P(DGRPX,"^",DGRPSV+4),1:DGRPU)
"RTN","DGRP6",43,0)
 F I=2,3 S X=$P(DGRPX,"^",DGRPSV+I),X=$S(X]"":$$FMTE^XLFDT(X,"5DZ"),1:"UNKNOWN") W ?$S(I=2:46,1:58),X
"RTN","DGRP6",44,0)
 W ?70,$S($D(^DIC(25,+$P(DGRPX,"^",DGRPSV),0)):$E($P(^(0),"^",1),1,9),1:"UNKNOWN") Q
"RTN","DGRP6",45,0)
MR W !?19,"Receiving Military retirement in lieu of VA Compensation." Q
"RTN","DGRPE")
0^17^B49313400
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL,LBD,BRM - REGISTRATIONS EDITS ; 8/11/05 1:02pm
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506,244,547,522,528,555,508,451,626,638,624,677,672**;Aug 13, 1993
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=1,DGDR["101," D CEDITS^DGRPECE(DFN)
"RTN","DGRPE",9,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",10,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",11,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",12,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",13,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",14,0)
 .Q
"RTN","DGRPE",15,0)
 ;-- Tricare screen #15
"RTN","DGRPE",16,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",17,0)
 ;
"RTN","DGRPE",18,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",19,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",20,0)
 G ^DGRPE1:DGRPS>6
"RTN","DGRPE",21,0)
 I DGRPS=4 D ^DGRPE4
"RTN","DGRPE",22,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0
"RTN","DGRPE",23,0)
 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  F J1=J,J*1000,J*1000+1,J*1000+2 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",24,0)
 D ^DIE
"RTN","DGRPE",25,0)
 ;check for Combat Vet status
"RTN","DGRPE",26,0)
 I $G(DGCVFLG)=1,($P($$CVEDT^DGCV(DFN),U,2)']"") D
"RTN","DGRPE",27,0)
 . W !!,"**NOTE-Change(s) made in this session deleted the veteran's Combat Vet status!"
"RTN","DGRPE",28,0)
 . S DIR(0)="EA" D ^DIR K DIR
"RTN","DGRPE",29,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",30,0)
Q K DA,DIE,DR,DGCT,DGCVFLG,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1,DGCOMLOC
"RTN","DGRPE",31,0)
 Q
"RTN","DGRPE",32,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",33,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",34,0)
 Q
"RTN","DGRPE",35,0)
 ;
"RTN","DGRPE",36,0)
101 ;;
"RTN","DGRPE",37,0)
102 ;;1;
"RTN","DGRPE",38,0)
103 ;;.091;
"RTN","DGRPE",39,0)
104 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);
"RTN","DGRPE",40,0)
105 ;;.12105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,$C(7),"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,$C(7),"But I need at least one line of a Temporary address." S Y=.12105;
"RTN","DGRPE",41,0)
105000 ;;.1212;S:X']"" Y=.1214;.1213:.1215;.12112;Q;.12111;.1219;@15;K DIE("NO^");
"RTN","DGRPE",42,0)
109 ;;N FLG S (FLG(1),FLG(2))=1 D EN^DGREGAED(DFN,.FLG);.02;D DR109^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",43,0)
111 ;;.14105//NO;S:X="N" Y="@111" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",44,0)
111000 ;;K DR(2,2.141);.1411;I X']"" W !?4,$C(7),"I need at least one line of Address." S Y=.14105;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;@111;K DIE("NO^");
"RTN","DGRPE",45,0)
112 ;;.134;.135;.133
"RTN","DGRPE",46,0)
201 ;;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",47,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",48,0)
203 ;;D DR203^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",49,0)
205 ;;.181;
"RTN","DGRPE",50,0)
301 ;;.211;S:X']"" Y="@31";.212;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;.219;.21011;@31;
"RTN","DGRPE",51,0)
302 ;;.2191;S:X']"" Y="@32";.2192;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y=.211011;
"RTN","DGRPE",52,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;.2199;.211011;@32;
"RTN","DGRPE",53,0)
303 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@33";.3305//NO;I X="Y" S Y="@34",DGX1=1;@33;S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);.331;S:X']"" DGX1=2,Y="@34";.332;@34;
"RTN","DGRPE",54,0)
303000 ;;S:$G(DGX1) Y="@341";.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=2;@341;
"RTN","DGRPE",55,0)
303001 ;;S:$G(DGX1)=2 Y="@35";S DGX2=$G(^DPT(DA,.21));.331///^S X=$P(DGX2,U);.332///^S X=$P(DGX2,U,2);.333////^S X=$P(DGX2,U,3);.334///^S X=$P(DGX2,U,4);@35;
"RTN","DGRPE",56,0)
303002 ;;S:$G(DGX1)=2 Y="@351";.335///^S X=$P(DGX2,U,5);.336///^S X=$P(DGX2,U,6);.337///^S X=$P(DGX2,U,7);.338///^S X=$P(DGX2,U,8);.339///^S X=$P(DGX2,U,9);.33011///^S X=$P(DGX2,U,11);@351;K DGX1,DGX2;
"RTN","DGRPE",57,0)
304 ;;.3311;S:X']"" Y="@36";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@36;        
"RTN","DGRPE",58,0)
305 ;;N DGX1,DGX2;I '$L($P($G(^DPT(DFN,.21)),U)) S Y="@37";.3405//NO;I X="Y" S DGX1=1,Y="@371";@37;S:$D(^DPT(DFN,.22)) $P(^(.22),U,2)=$P(^(.22),U,7);.341;S:X']"" DGX1=2,Y="@371";.342;@371;
"RTN","DGRPE",59,0)
305000 ;;S:$G(DGX1) Y="@38";.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=2;@38;
"RTN","DGRPE",60,0)
305001 ;;S:$G(DGX1)=2 Y="@381";S DGX2=$G(^DPT(DA,.21));.341///^S X=$P(DGX2,U);.342///^S X=$P(DGX2,U,2);.343///^S X=$P(DGX2,U,3);.344///^S X=$P(DGX2,U,4);@381
"RTN","DGRPE",61,0)
305002 ;;S:$G(DGX1)=2 Y="@39";.345///^S X=$P(DGX2,U,5);.346///^S X=$P(DGX2,U,6);.347///^S X=$P(DGX2,U,7);.348///^S X=$P(DGX2,U,8);.349///^S X=$P(DGX2,U,9);.34011///^S X=$P(DGX2,U,11);@39;K DGX1,DGX2;
"RTN","DGRPE",62,0)
401 ;;.01;.31115;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@41" S:(X'=5) Y=.3111;.31116;.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",63,0)
402 ;;.2514;.2515;S:($S(X']"":1,X=3:1,X=9:1,1:0)) Y="@42" S:(X'=5) Y=.251;.2516;.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",64,0)
501 ;;
"RTN","DGRPE",65,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",66,0)
503 ;;.383;
"RTN","DGRPE",67,0)
601 ;;.325;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".328";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".325";.328;.326;.327;.324;
"RTN","DGRPE",68,0)
601000 ;;.3285//NO;S:X'="Y" Y="@61";.3291;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".3294";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3291";.3294;.3292;.3293;.329;
"RTN","DGRPE",69,0)
601001 ;;.32945//NO;S:X'="Y" Y="@61";.3296;S:X']"" Y="@61";S:$$FV^DGRPMS(X)'=1 Y=".3299";.3214;I X']"" W !?4,$C(7),"Proof is required for Filipino Vet." S Y=".3296";.3299;.3297;.3298;.3295;@61;
"RTN","DGRPE",70,0)
602 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",71,0)
603 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",72,0)
604 ;;.32101//NO;S:X'="Y" Y="@64";.32104;.32105;@64;
"RTN","DGRPE",73,0)
605 ;;.32102//NO;S:X'="Y" Y="@65";.32107;.32109;.3211;.3213;@65;
"RTN","DGRPE",74,0)
606 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRPE",75,0)
607 ;;.3221//NO;S:X'="Y" Y="@67";.3222;Q;.3223;@67;
"RTN","DGRPE",76,0)
608 ;;.3224//NO;S:X'="Y" Y="@68";.3225;Q;.3226;@68;
"RTN","DGRPE",77,0)
609 ;;.3227//NO;S:X'="Y" Y="@69";.3228;Q;.3229;@69;
"RTN","DGRPE",78,0)
610 ;;.32201//NO;S:X'="Y" Y="@610";.322011;Q;.322012;@610;
"RTN","DGRPE",79,0)
611 ;;.322016//NO;S:X'="Y" Y="@611";.322017;Q;.322018;@611;
"RTN","DGRPE",80,0)
612 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRPE",81,0)
613 ;;I $P($G(^DPT(DFN,.361)),U,3)="H" S Y="@6131";.3602//NO;.3603//NO;S Y="@6132";@6131;.3602;.3603;@6132;
"RTN","DGRPE",82,0)
614 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",83,0)
615 ;;.322019//NO;S:X'="Y" Y="@615";.32202;Q;.322021;@615;
"RTN","DGRPE",84,0)
616 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",85,0)
617 ;;D REG^DGNTQ(DFN);
"RTN","DGRPE",86,0)
AD N DGZ4,DGPC
"RTN","DGRPE",87,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",88,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",89,0)
 K DGADD,DGPHONE Q
"RTN","DGRPE",90,0)
DR109 ;Drop through (use same logic as DR203)
"RTN","DGRPE",91,0)
DR203 S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",92,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",93,0)
 Q
"RTN","DGRPE",94,0)
DR111 ;Set DR string for Confidential Address categories
"RTN","DGRPE",95,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",96,0)
 Q
"RTN","DGRPU")
0^19^B61271859
"RTN","DGRPU",1,0)
DGRPU ;ALB/MRL - REGISTRATION UTILITY ROUTINE ; 8/30/05 9:58am
"RTN","DGRPU",2,0)
 ;;5.3;Registration;**33,114,489,624,672**;Aug 13, 1993
"RTN","DGRPU",3,0)
H ;Screen Header
"RTN","DGRPU",4,0)
 I (DGRPS'=1.1)&(DGRPS'=6.1) W @IOF S Z=$P($T(H1+DGRPS),";;",2)_", SCREEN <"_DGRPS_">"_$S($D(DGRPH):" HELP",1:""),X=79-$L(Z)\2 D W
"RTN","DGRPU",5,0)
 I DGRPS=1.1 W @IOF S Z="ADDITIONAL PATIENT DEMOGRAPHIC DATA, SCREEN <"_DGRPS_">"_$S($D(DGRPH):" HELP",1:""),X=79-$L(Z)\2 D W
"RTN","DGRPU",6,0)
 I DGRPS=6.1 W @IOF S Z="ADDITIONAL MILITARY SERVICE DATA, SCREEN <"_DGRPS_">"_$S($D(DGRPH):" HELP",1:""),X=79-$L(Z)\2 D W
"RTN","DGRPU",7,0)
 S X=$S($D(^DPT(+DFN,0)):^(0),1:""),SSN=$P(X,"^",9),SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,10)
"RTN","DGRPU",8,0)
 I '$D(DGRPH) W !,$P(X,"^",1),"; ",SSN S X=$S($D(DGRPTYPE):$P(DGRPTYPE,"^",1),1:"PATIENT TYPE UNKNOWN"),X1=79-$L(X) W ?X1,X
"RTN","DGRPU",9,0)
 S X="",$P(X,"=",80)="" W !,X Q
"RTN","DGRPU",10,0)
 Q
"RTN","DGRPU",11,0)
AL(DGLEN) ;DGLEN= Available length of line
"RTN","DGRPU",12,0)
A ;Format address(es)
"RTN","DGRPU",13,0)
 I '$D(DGLEN) N DGLEN S DGLEN=29
"RTN","DGRPU",14,0)
 N DGX
"RTN","DGRPU",15,0)
 F I=DGA1:1:DGA1+2 I $P(DGRP(DGAD),U,I)]"" S DGA(DGA2)=$P(DGRP(DGAD),U,I),DGA2=DGA2+2
"RTN","DGRPU",16,0)
 I DGA2=1 S DGA(1)="STREET ADDRESS UNKNOWN",DGA2=DGA2+2
"RTN","DGRPU",17,0)
 S J=$S('$D(^DIC(5,+$P(DGRP(DGAD),U,DGA1+4),0)):"",('$L($P(^(0),U,2))):$P(^(0),U,1),1:$P(^(0),U,2)),J(1)=$P(DGRP(DGAD),U,DGA1+3),J(2)=$P(DGRP(DGAD),U,DGA1+5),DGA(DGA2)=$S(J(1)]""&(J]""):J(1)_","_J,J(1)]"":J(1),J]"":J,1:"UNK. CITY/STATE")
"RTN","DGRPU",18,0)
 I ".33^.34^.211^.331^.311^.25^.21"[DGAD D
"RTN","DGRPU",19,0)
 .F I=1:1:7 I $P(".33^.34^.211^.331^.311^.25^.21",U,I)=DGAD S DGX=$P($G(^DPT(DFN,.22)),U,I)
"RTN","DGRPU",20,0)
 E  D
"RTN","DGRPU",21,0)
 .I DGAD=.141 S DGX=$P(DGRP(.141),U,6) Q
"RTN","DGRPU",22,0)
 .S DGX=$P(DGRP(DGAD),U,DGA1+11)
"RTN","DGRPU",23,0)
 S:$L(DGX)>5 DGX=$E(DGX,1,5)_"-"_$E(DGX,6,9)
"RTN","DGRPU",24,0)
 S DGA(DGA2)=$E($P(DGA(DGA2),",",1),1,(DGLEN-($L(DGX)+4)))_$S($L($P(DGA(DGA2),",",2)):",",1:"")_$P(DGA(DGA2),",",2)_" "_DGX
"RTN","DGRPU",25,0)
 F I=0:0 S I=$O(DGA(I)) Q:'I  S DGA(I)=$E(DGA(I),1,DGLEN)
"RTN","DGRPU",26,0)
 K DGA1,I,J
"RTN","DGRPU",27,0)
 Q
"RTN","DGRPU",28,0)
 ;
"RTN","DGRPU",29,0)
W I IOST="C-QUME",$L(DGVI)'=2 W ?X,Z Q
"RTN","DGRPU",30,0)
 W ?X,@DGVI,Z,@DGVO
"RTN","DGRPU",31,0)
 Q
"RTN","DGRPU",32,0)
 ;
"RTN","DGRPU",33,0)
H1 ;
"RTN","DGRPU",34,0)
 ;;PATIENT DEMOGRAPHIC DATA
"RTN","DGRPU",35,0)
 ;;PATIENT DATA
"RTN","DGRPU",36,0)
 ;;EMERGENCY CONTACT DATA
"RTN","DGRPU",37,0)
 ;;APPLICANT/SPOUSE EMPLOYMENT DATA
"RTN","DGRPU",38,0)
 ;;INSURANCE DATA
"RTN","DGRPU",39,0)
 ;;MILITARY SERVICE DATA
"RTN","DGRPU",40,0)
 ;;ELIGIBILITY STATUS DATA
"RTN","DGRPU",41,0)
 ;;FAMILY DEMOGRAPHIC DATA
"RTN","DGRPU",42,0)
 ;;INCOME SCREENING DATA
"RTN","DGRPU",43,0)
 ;;INELIGIBLE/MISSING DATA
"RTN","DGRPU",44,0)
 ;;ELIGIBILITY VERIFICATION DATA
"RTN","DGRPU",45,0)
 ;;ADMISSION INFORMATION
"RTN","DGRPU",46,0)
 ;;APPLICATION INFORMATION
"RTN","DGRPU",47,0)
 ;;APPOINTMENT INFORMATION
"RTN","DGRPU",48,0)
 ;;SPONSOR DEMOGRAPHIC INFORMATION
"RTN","DGRPU",49,0)
 ;
"RTN","DGRPU",50,0)
 ;
"RTN","DGRPU",51,0)
INCOME(DFN,DGDT) ; compute income for veteran...if not in 408.21, pass back file 2 data
"RTN","DGRPU",52,0)
 ; (called by PTF)
"RTN","DGRPU",53,0)
 ;
"RTN","DGRPU",54,0)
 ;
"RTN","DGRPU",55,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPU",56,0)
 ;          DGDT as date to return income as of
"RTN","DGRPU",57,0)
 ;
"RTN","DGRPU",58,0)
 ; Output:  total income (computed function)
"RTN","DGRPU",59,0)
 ;          (from 408.21 if available...otherwise from file 2)
"RTN","DGRPU",60,0)
 ;
"RTN","DGRPU",61,0)
 ;
"RTN","DGRPU",62,0)
 N DGDEP,DGINC,DGREL,DGTOT,DGX,I S DGTOT=0
"RTN","DGRPU",63,0)
 D ALL^DGMTU21(DFN,"V",DGDT,"I")
"RTN","DGRPU",64,0)
 S DGX=$G(^DGMT(408.21,+$G(DGINC("V")),0)) I DGX]"" F I=8:1:17 S DGTOT=DGTOT+$P(DGX,"^",I)
"RTN","DGRPU",65,0)
 I DGX']"" S DGTOT=$P($G(^DPT(DFN,.362)),U,20)
"RTN","DGRPU",66,0)
 Q DGTOT
"RTN","DGRPU",67,0)
 ;
"RTN","DGRPU",68,0)
 ;
"RTN","DGRPU",69,0)
MTCOMP(DFN,DGDT) ; is current means test OR COPAY complete?
"RTN","DGRPU",70,0)
 ;
"RTN","DGRPU",71,0)
 ;  Input:  DFN as IEN of PATIENT file
"RTN","DGRPU",72,0)
 ;          DGDT as 'as of' date
"RTN","DGRPU",73,0)
 ;
"RTN","DGRPU",74,0)
 ; Output:  1 if means test/COPAY for year prior to DT passed is complete
"RTN","DGRPU",75,0)
 ;          0 otherwise
"RTN","DGRPU",76,0)
 ;          DGMTYPT 1=MT;2=CP;0=NONE
"RTN","DGRPU",77,0)
 ;
"RTN","DGRPU",78,0)
 N COMP,MT,X,YR
"RTN","DGRPU",79,0)
 S YR=$$LYR^DGMTSCU1(DGDT),MT=$$LST^DGMTCOU1(DFN,DGDT)
"RTN","DGRPU",80,0)
 S DGMTYPT=+$P(MT,U,5)
"RTN","DGRPU",81,0)
 S COMP=1
"RTN","DGRPU",82,0)
 I DGMTYPT=1 D  ;MT
"RTN","DGRPU",83,0)
 .I $P(MT,"^",4)']""!("^R^N^"[("^"_$P(MT,"^",4)_"^")) S COMP=0
"RTN","DGRPU",84,0)
 I DGMTYPT=2 D  ;CP
"RTN","DGRPU",85,0)
 .I $P(MT,"^",4)']""!("^I^L^"[("^"_$P(MT,"^",4)_"^")) S COMP=0
"RTN","DGRPU",86,0)
 S X=+$P(MT,"^",2) I ($E(X,1,3)-1)*10000<YR S COMP=0
"RTN","DGRPU",87,0)
 Q COMP
"RTN","DGRPU",88,0)
 ;
"RTN","DGRPU",89,0)
HLP1010 ;* This is called by the Executable Help for Patient field #1010.159
"RTN","DGRPU",90,0)
 ;   (APPOINTMENT REQUEST ON 1010EZ)
"RTN","DGRPU",91,0)
 W !!,"    Enter a 'Y' if the veteran applicant has requested an"
"RTN","DGRPU",92,0)
 W !,"    appointment with a VA doctor or provider and wants to be"
"RTN","DGRPU",93,0)
 W !,"    seen as soon as one becomes available  Enter a 'N'"
"RTN","DGRPU",94,0)
 W !,"    if the veteran applicant has not requested an appointment."
"RTN","DGRPU",95,0)
 W !!,"    This question may ONLY be entered ONCE for the veteran."
"RTN","DGRPU",96,0)
 W !,"    The answer to this question CANNOT be changed after the"
"RTN","DGRPU",97,0)
 W !,"    initial entry.",!
"RTN","DGRPU",98,0)
 Q
"RTN","DGRPU",99,0)
 ;
"RTN","DGRPU",100,0)
HLPCS ; * This is called by the Executable Help for Income Relation field #.1
"RTN","DGRPU",101,0)
 Q:X="?"
"RTN","DGRPU",102,0)
 N DIR,DGRDVAR
"RTN","DGRPU",103,0)
 W !?8,"Enter in this field a Yes or No to indicate whether the veteran"
"RTN","DGRPU",104,0)
 W !?8,"contributed any dollar amount to the child's support last calendar"
"RTN","DGRPU",105,0)
 W !?8,"year.  The contributions do not have to be in regular set amounts."
"RTN","DGRPU",106,0)
 W !?8,"For example, a veteran who paid a child's school tuition or"
"RTN","DGRPU",107,0)
 W !?8,"medical bills would be contributing to the child's support.",!
"RTN","DGRPU",108,0)
 W !,"Enter RETURN to continue:" R DGRDVAR:DTIME W !
"RTN","DGRPU",109,0)
 Q
"RTN","DGRPU",110,0)
 ;
"RTN","DGRPU",111,0)
HLP1823 ;*This is called by the Executable Help for Patient Relation field #.18
"RTN","DGRPU",112,0)
 N DIR,DGRDVAR
"RTN","DGRPU",113,0)
 W !?7,"Enter 'Y' if the child is currently 18 to 23 years old and the child"
"RTN","DGRPU",114,0)
 W !?7,"attended school last calendar year.  Enter 'N' if the child is currently"
"RTN","DGRPU",115,0)
 W !?7,"18 to 23 years old but the child did not attend school last calendar"
"RTN","DGRPU",116,0)
 W !?7,"year.  Enter 'N' if the child is not currently 18 to 23 years old.",!
"RTN","DGRPU",117,0)
 I $G(DA) W !,"Enter RETURN to continue:" R DGRDVAR:DTIME W !
"RTN","DGRPU",118,0)
 Q
"RTN","DGRPU",119,0)
 ;
"RTN","DGRPU",120,0)
HLPMLDS ;* This is called by the Executable Help for Patient field #.362
"RTN","DGRPU",121,0)
 ;   (DISABILITY RET. FROM MILITARY?)
"RTN","DGRPU",122,0)
 N X,Y,DIR
"RTN","DGRPU",123,0)
 W !!,"  Enter '0' or 'NO' if the veteran:"
"RTN","DGRPU",124,0)
 W !,"    -- Is NOT retired from the military OR"
"RTN","DGRPU",125,0)
 W !,"    -- Is retired from the military due to length of service AND"
"RTN","DGRPU",126,0)
 W !,"       does NOT have a disability confirmed by the Military Branch"
"RTN","DGRPU",127,0)
 W !,"       to have been incurred in or aggravated while on active duty."
"RTN","DGRPU",128,0)
 W !!,"  Enter '1' or 'YES, RECEIVING MILITARY RETIREMENT' if the veteran:"
"RTN","DGRPU",129,0)
 W !,"    -- Is confirmed by the Military Branch to have been discharged"
"RTN","DGRPU",130,0)
 W !,"       or released due to a disability incurred in or aggravated"
"RTN","DGRPU",131,0)
 W !,"       while on active duty AND"
"RTN","DGRPU",132,0)
 W !,"       -- Has NOT filed a claim for VA compensation benefits OR"
"RTN","DGRPU",133,0)
 W !,"       -- Has been rated by the VA to be NSC OR"
"RTN","DGRPU",134,0)
 W !,"       -- Has been rated by the VA to have noncompensable 0%"
"RTN","DGRPU",135,0)
 W !,"          SC conditions."
"RTN","DGRPU",136,0)
 S DIR(0)="E" D ^DIR Q:+Y<1
"RTN","DGRPU",137,0)
 W !!,"  Enter '2' or 'YES, RECEIVING MILITARY RETIREMENT IN LIEU OF VA"
"RTN","DGRPU",138,0)
 W !,"                COMPENSATION' if the veteran:"
"RTN","DGRPU",139,0)
 W !,"       -- Is confirmed by the Military Branch to have been discharged"
"RTN","DGRPU",140,0)
 W !,"          or released due to a disability incurred in or aggravated"
"RTN","DGRPU",141,0)
 W !,"          while on active duty AND"
"RTN","DGRPU",142,0)
 W !,"       -- Is receiving military disability retirement pay AND"
"RTN","DGRPU",143,0)
 W !,"       -- Has been rated by VA to have compensable SC conditions"
"RTN","DGRPU",144,0)
 W !,"          but is NOT receiving compensation from the VA"
"RTN","DGRPU",145,0)
 W !!,"          Once eligibility has been verified, this field will no longer"
"RTN","DGRPU",146,0)
 W !,"          be editable to any user who does not hold the designated security"
"RTN","DGRPU",147,0)
 W !,"          key."
"RTN","DGRPU",148,0)
 Q
"RTN","DGRPU",149,0)
HLP3602 ;help text for field .3602, Rec'ing Disability in Lieu of VA Comp
"RTN","DGRPU",150,0)
 W !,"     Enter 'Y' if this veteran applicant is receiving disability"
"RTN","DGRPU",151,0)
 W !,"     retirement pay from the Military instead of VA compensation."
"RTN","DGRPU",152,0)
 W !,"     Enter 'N' if this veteran applicant is not receiving disability"
"RTN","DGRPU",153,0)
 W !,"     retirement pay from the Military instead of VA compensation."
"RTN","DGRPU",154,0)
 W !,"     Once eligibility has been verified by HEC this field will no longer "
"RTN","DGRPU",155,0)
 W !,"     be editable by VistA users. Send updates and/or requests to HEC."
"RTN","DGRPU",156,0)
 Q
"RTN","DGRPU",157,0)
HLP3603 ;help text for field .3603, Discharge Due to LOD Disability
"RTN","DGRPU",158,0)
 W !,"     Enter 'Y' if this veteran applicant was discharged from the"
"RTN","DGRPU",159,0)
 W !,"     military for a disability incurred or aggravated in the line "
"RTN","DGRPU",160,0)
 W !,"     of duty.  Enter 'N' if this veteran applicant was not discharged"
"RTN","DGRPU",161,0)
 W !,"     from the military for a disability incurred or aggravated in the"
"RTN","DGRPU",162,0)
 W !,"     line of duty. Once eligibility has been verified by HEC this field"
"RTN","DGRPU",163,0)
 W !,"     will no longer be editable by VistA users. Send updates and/or requests"
"RTN","DGRPU",164,0)
 W !,"     to HEC."
"RTN","DGRPU",165,0)
 Q
"RTN","DGRPV")
0^18^B17077361
"RTN","DGRPV",1,0)
DGRPV ;ALB/MRL,RTK,PJR,BRM - REGISTRATION DEFINE VARIABLES ON ENTRY ; 8/11/05 12:56pm
"RTN","DGRPV",2,0)
 ;;5.3;Registration;**109,114,247,190,327,365,343,397,415,489,546,545,451,624,677,672**;Aug 13, 1993
"RTN","DGRPV",3,0)
 ;
"RTN","DGRPV",4,0)
 ;
"RTN","DGRPV",5,0)
 ;set up variables for registration screen processing
"RTN","DGRPV",6,0)
 ;
"RTN","DGRPV",7,0)
 ;DGRPVV   :string of 15 ones and zeros each character corresponding to
"RTN","DGRPV",8,0)
 ;          a particular screen (0 means allow edit, 1 means don't)
"RTN","DGRPV",9,0)
 ;
"RTN","DGRPV",10,0)
 ;DGRPVV(n):where n=screen number.  String of x ones and zeros where
"RTN","DGRPV",11,0)
 ;          x is the number of elements on screen n (0=edit, 1=don't)
"RTN","DGRPV",12,0)
 ;
"RTN","DGRPV",13,0)
 ;DGVI     :Turn on high intensity
"RTN","DGRPV",14,0)
 ;DGVO     :Turn off high intensity
"RTN","DGRPV",15,0)
 ;
"RTN","DGRPV",16,0)
EN D DT^DICRW I '$D(DVBGUI) D HOME^%ZIS
"RTN","DGRPV",17,0)
 S (DGVI,DGVO)="""""" I $S('$D(IOST(0)):1,'$D(^DG(43,1,0)):1,'$P(^DG(43,1,0),"^",36):1,$D(^DG(43,1,"TERM",IOST(0))):1,1:0) G M ;goto M if not high intensity
"RTN","DGRPV",18,0)
 I $D(^%ZIS(2,IOST(0),7)) S I=^(7),X=$S($P(I,"^",3)]"":3,1:2) I $L($P(I,"^",1)),$L($P(I,"^",X)) S DGVI=$P(I,"^",1),DGVO=$P(I,"^",X)
"RTN","DGRPV",19,0)
M I $L(DGVI_DGVO)>4 S X=132 X ^%ZOSF("RM")
"RTN","DGRPV",20,0)
 S DGRPW=1,DGRPCM=0,DGRPU="UNANSWERED",DGRPNA="NOT APPLICABLE",DGRPV=$S($D(DGRPV):DGRPV,1:1)
"RTN","DGRPV",21,0)
SC7 S X=$S('$D(^DPT(DFN,"TYPE")):0,1:+^("TYPE")) S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",22,0)
 S DGRPTYPE=$S($D(^DG(391,+X,0)):^(0),1:""),(DGRPSC,DGRPSCE,DGRPSCE1)="" S:'$D(DGELVER) DGELVER=0
"RTN","DGRPV",23,0)
 I DGRPTYPE'="" S DGRPSC=$G(^DG(391,+X,"S")),DGRPSCE=$G(^("E")),DGRPSCE1=$G(^("E10"))
"RTN","DGRPV",24,0)
 ;
"RTN","DGRPV",25,0)
 S DGPH=$P($G(^DPT(DFN,.53)),U)  ;Purple Heart Indicator
"RTN","DGRPV",26,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRPV",27,0)
 . S DGRPVV="000001111111111"
"RTN","DGRPV",28,0)
 E  D
"RTN","DGRPV",29,0)
 . S DGRPVV="000000000000000"
"RTN","DGRPV",30,0)
 S X="5^3^5^2^3^17^4^2^10^2^4^5^5^2^1"
"RTN","DGRPV",31,0)
 F I=1:1:15 S J=+$P(X,"^",I),DGRPVV(I)=$S((I<12)!(I=15):$E("00000000000000000",1,J),1:$E("11111111111111111",1,J))
"RTN","DGRPV",32,0)
 S DGRPVV(1.1)="00"
"RTN","DGRPV",33,0)
 S DGRPVV(2)="00010"
"RTN","DGRPV",34,0)
 I $G(DGPH)]"" S $E(DGRPVV(6),16)=1
"RTN","DGRPV",35,0)
 I $$GETSTAT^DGNTAPI1(DFN)>2,'$D(^XUSEC("DGNT VERIFY",DUZ)) D
"RTN","DGRPV",36,0)
 . S $E(DGRPVV(6),17)=1
"RTN","DGRPV",37,0)
 ;
"RTN","DGRPV",38,0)
 F I=3,6,8,9,10,11 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",39,0)
 ;
"RTN","DGRPV",40,0)
 ;-- if patient type is TRICARE then turn off screens 2,4
"RTN","DGRPV",41,0)
 ;
"RTN","DGRPV",42,0)
 ;-- modified 08/20/2003 for NOIS Calls MAC-0400-61574 & AMA-0700-71769 
"RTN","DGRPV",43,0)
 ;-- commented the line to allow screens 2 & 4 to display for Tricare
"RTN","DGRPV",44,0)
 ;I DGRPTYPE["TRICARE" F I=2,4 S J=+$P(DGRPSC,"^",I) I 'J S DGRPVV=$E(DGRPVV,0,I-1)_1_$E(DGRPVV,I+1,99)
"RTN","DGRPV",45,0)
 ;
"RTN","DGRPV",46,0)
 F I=31:0 S I=$O(^DD(391,I)) Q:I=""!(I>99)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE,"^",I) S X1=$E(I),X2=$E(I,2) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",47,0)
 I $G(^DPT(DFN,.35)),(^(.35)<+($E(DT,1,3)_"0000")) S DGRPVV=$E(DGRPVV,0,7)_11_$E(DGRPVV,10,99)
"RTN","DGRPV",48,0)
 K DIRUT,DUOUT,DTOUT
"RTN","DGRPV",49,0)
 ;
"RTN","DGRPV",50,0)
 ;Fields are numbered screen_item and put in that piece position.
"RTN","DGRPV",51,0)
 ;Because FM does not allow more than 100 pieces on a node, it was
"RTN","DGRPV",52,0)
 ;necessary to start a new node E10 for fields on screens 10 or higher.
"RTN","DGRPV",53,0)
 ;In these instances, the piece position will be screen_item-100 so,
"RTN","DGRPV",54,0)
 ;for example, screen 11, item 2 would be field 112, but piece 12.
"RTN","DGRPV",55,0)
 ;Items on screens <10 will be found on node E.
"RTN","DGRPV",56,0)
 ;
"RTN","DGRPV",57,0)
 F I=100:0 S I=$O(^DD(391,I)) Q:I=""!(I>150)  I $D(^(I,0)),($E(^(0),1)'="*"),'+$P(DGRPSCE1,"^",I-100) S X1=$E(I,1,2),X2=$E(I,3) I +X1 S DGRPVV(X1)=$E(DGRPVV(X1),0,X2-1)_1_$E(DGRPVV(X1),X2+1,99)
"RTN","DGRPV",58,0)
 ;
"RTN","DGRPV",59,0)
 I $S('($D(DUZ)#2):0,'$D(^XUSEC("DG ELIGIBILITY",DUZ)):0,1:1) G ELVER ;if user holds eligibility key, skip
"RTN","DGRPV",60,0)
 F I=.3,.32,.361 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPV",61,0)
 S DGRPVV(10)=11 I $P(DGRP(.361),"^",1)="V" S DGRPVV(7)=111,DGRPVV(1)=1_$E(DGRPVV(1),2,99) ;if elig verified, can't edit elig data, name, ssn, or dob
"RTN","DGRPV",62,0)
 I $P(DGRP(.3),"^",6)]"" S DGRPVV(8)=11 ;if monetary ben. verified, can't edit income screening data
"RTN","DGRPV",63,0)
 I $P(DGRP(.32),"^",2)]"" S DGRPVV(6)=11111111111111111 ;if service data verified, can't edit service screen
"RTN","DGRPV",64,0)
 ;
"RTN","DGRPV",65,0)
ELVER ;set up variables for eligibility verification
"RTN","DGRPV",66,0)
 ;if elig ver option, only edit screens 1, 2, and 7 (and 6, 8, 9, 10,
"RTN","DGRPV",67,0)
 ;   and 11 if they're turned on).
"RTN","DGRPV",68,0)
 ;
"RTN","DGRPV",69,0)
 S DGRP(.361)=$G(^DPT(DFN,.361))
"RTN","DGRPV",70,0)
 I $P(DGRP(.361),U,3)="H" S DGRPVV(10)=10,DGRPVV(11)=1000
"RTN","DGRPV",71,0)
 I $P($G(DGRP(.361)),U)="V",($P(DGRP(.361),U,3)="H") S DGRPVV(6)=$E(DGRPVV(6),1,12)_1_$E(DGRPVV(6),14,99)
"RTN","DGRPV",72,0)
 S:'DGELVER DGRPLAST=$S($G(DGPRFLG)=1:5,1:15)
"RTN","DGRPV",73,0)
 I DGELVER S DGRPVV="00111"_$E(DGRPVV,6,11)_"1111" F I=1:1:11 S J=$E(DGRPVV,I) I 'J S DGRPLAST=I
"RTN","DGRPV",74,0)
Q K DGRPSC,DGRPSCE
"RTN","DGRPV",75,0)
 Q
"RTN","DGRPV",76,0)
 ;
"RTN","DGRPV",77,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","DGRPV",78,0)
 W:DGRPW ! S Z=$S(DGRPCM:Z,DGRPV:"<"_Z_">",$E(DGRPVV(DGRPS),Z):"<"_Z_">",1:"["_Z_"]")
"RTN","DGRPV",79,0)
 I DGRPCM!($E(Z)="[") W @DGVI,Z,@DGVO
"RTN","DGRPV",80,0)
 I 'DGRPCM&($E(Z)'="[") W Z
"RTN","DGRPV",81,0)
 Q
"RTN","DGRPV",82,0)
 ;
"RTN","DGRPV",83,0)
WW1 ;spacing for screen display (Z=item to print)
"RTN","DGRPV",84,0)
 F Z2=1:1:(Z1-$L(Z)) S Z=Z_" "
"RTN","DGRPV",85,0)
 W Z K Z2
"RTN","DGRPV",86,0)
 Q
"RTN","VAFHLZE1")
0^28^B24942395
"RTN","VAFHLZE1",1,0)
VAFHLZE1 ;BPFO/JRP,TDM - Data extractor for ZEL segment ; 8/11/05 9:51am
"RTN","VAFHLZE1",2,0)
 ;;5.3;Registration;**342,497,602,672**;Aug 13, 1993
"RTN","VAFHLZE1",3,0)
 ;
"RTN","VAFHLZE1",4,0)
GETDATA ;Get information needed to build ZEL  segment
"RTN","VAFHLZE1",5,0)
 ;Input: Existance of the following variables is assumed
"RTN","VAFHLZE1",6,0)
 ;   DFN - Pointer to Patient (#2) file
"RTN","VAFHLZE1",7,0)
 ;   VAFPELIG - Primary Eligibility string (.36 node)
"RTN","VAFHLZE1",8,0)
 ;   VAFSTR - Fields to extract (padded with commas)
"RTN","VAFHLZE1",9,0)
 ;   VAFNODE - Eligibility Node (node from Elig. ["E"] mult)
"RTN","VAFHLZE1",10,0)
 ;   VAFMSTDT - Date to use when getting MST status (optional)
"RTN","VAFHLZE1",11,0)
 ;   VAFSETID - Value to use for Set ID (optional)
"RTN","VAFHLZE1",12,0)
 ;   HL7 encoding characters (HLFS, HLENC, HLQ)
"RTN","VAFHLZE1",13,0)
 ;
"RTN","VAFHLZE1",14,0)
 ;Output: VAFHLZEL(SeqNum) = Value
"RTN","VAFHLZE1",15,0)
 ;
"RTN","VAFHLZE1",16,0)
 ;Notes: VAFHLZEL is initialized (KILLed) on entry
"RTN","VAFHLZE1",17,0)
 ;     : If not passed, sequence 1 (Set ID) will have a value of '1'
"RTN","VAFHLZE1",18,0)
 ;       if getting data for the primary eligibility and '2' if getting
"RTN","VAFHLZE1",19,0)
 ;       data for other eligibility
"RTN","VAFHLZE1",20,0)
 ;     : All requested fields will be returned with the primary
"RTN","VAFHLZE1",21,0)
 ;       eligibility.  The Set ID (seq 1), eligibility code (seq 2)
"RTN","VAFHLZE1",22,0)
 ;       long ID (seq 3), and short ID (seq 4) will be the only fields
"RTN","VAFHLZE1",23,0)
 ;       returned for all other eligibilities.
"RTN","VAFHLZE1",24,0)
 ;
"RTN","VAFHLZE1",25,0)
 N PRIME,VAF,VAFMST,X
"RTN","VAFHLZE1",26,0)
 K VAFHLZEL
"RTN","VAFHLZE1",27,0)
 ;If true, primary eligibility (return all fields)
"RTN","VAFHLZE1",28,0)
 S PRIME=+VAFNODE=+VAFPELIG
"RTN","VAFHLZE1",29,0)
 ;Set ID
"RTN","VAFHLZE1",30,0)
 I VAFSTR[",1," S VAFHLZEL(1)=$S($G(VAFSETID):VAFSETID,PRIME:1,1:2)
"RTN","VAFHLZE1",31,0)
 ;Eligibility Code
"RTN","VAFHLZE1",32,0)
 I VAFSTR[",2," S X=$P($G(^DIC(8,+VAFNODE,0)),"^",9),VAFHLZEL(2)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",33,0)
 ;Long ID
"RTN","VAFHLZE1",34,0)
 I VAFSTR[",3," S X=$P(VAFNODE,"^",3),VAFHLZEL(3)=$S(X]"":$$M10^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",35,0)
 ;Short ID
"RTN","VAFHLZE1",36,0)
 I VAFSTR[",4," S X=$P(VAFNODE,"^",4),VAFHLZEL(4)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",37,0)
 ;Done if not getting primary eligibility information
"RTN","VAFHLZE1",38,0)
 I 'PRIME D  Q
"RTN","VAFHLZE1",39,0)
 .N Y,Z
"RTN","VAFHLZE1",40,0)
 .S Y=$L(VAFSTR,",")
"RTN","VAFHLZE1",41,0)
 .F X=1:1:Y S Z=$P(VAFSTR,",",X) I Z S:(Z>4) VAFHLZEL(Z)=HLQ
"RTN","VAFHLZE1",42,0)
 ;Get needed nodes in Patient file (#2)
"RTN","VAFHLZE1",43,0)
 N VAF
"RTN","VAFHLZE1",44,0)
 F X=.3,.31,.321,.322,.362,.361 S VAF(X)=$G(^DPT(DFN,X))
"RTN","VAFHLZE1",45,0)
 ;Disability ret. from military code
"RTN","VAFHLZE1",46,0)
 I VAFSTR[",5," S X=$P(VAFPELIG,"^",12),VAFHLZEL(5)=$S(X=0:"N",X=1:"Y",1:HLQ)
"RTN","VAFHLZE1",47,0)
 ;Claim Number
"RTN","VAFHLZE1",48,0)
 I VAFSTR[",6," S X=$P(VAF(.31),"^",3),VAFHLZEL(6)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",49,0)
 ;Claim Folder Loc
"RTN","VAFHLZE1",50,0)
 I VAFSTR[",7," S X=$P(VAF(.31),"^",2),VAFHLZEL(7)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",51,0)
 ;Veteran?
"RTN","VAFHLZE1",52,0)
 I VAFSTR[",8," S X=$P($G(^DPT(DFN,"VET")),"^"),VAFHLZEL(8)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",53,0)
 ;Type
"RTN","VAFHLZE1",54,0)
 I VAFSTR[",9," S X=$P($G(^DG(391,+$P($G(^DPT(DFN,"TYPE")),"^"),0)),"^"),VAFHLZEL(9)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",55,0)
 ;Elig Status
"RTN","VAFHLZE1",56,0)
 I VAFSTR[10 S X=$P(VAF(.361),"^",1),VAFHLZEL(10)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",57,0)
 ;Elig Status Date
"RTN","VAFHLZE1",58,0)
 I VAFSTR[11 S X=$P(VAF(.361),"^",2),VAFHLZEL(11)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",59,0)
 ;Elig Interim Response
"RTN","VAFHLZE1",60,0)
 I VAFSTR[12 S X=$P(VAF(.361),"^",4),VAFHLZEL(12)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",61,0)
 ;Elig Verif. Method
"RTN","VAFHLZE1",62,0)
 I VAFSTR[13 S X=$P(VAF(.361),"^",5),VAFHLZEL(13)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",63,0)
 ;Rec A&A Benefits?
"RTN","VAFHLZE1",64,0)
 I VAFSTR[14 S X=$P(VAF(.362),"^",12),VAFHLZEL(14)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",65,0)
 ;Rec Housebound Benefits?
"RTN","VAFHLZE1",66,0)
 I VAFSTR[15 S X=$P(VAF(.362),"^",13),VAFHLZEL(15)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",67,0)
 ;Rec VA Pension?
"RTN","VAFHLZE1",68,0)
 I VAFSTR[16 S X=$P(VAF(.362),"^",14),VAFHLZEL(16)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",69,0)
 ;Rec VA Disability?
"RTN","VAFHLZE1",70,0)
 I VAFSTR[17 S X=$P(VAF(.3),"^",11),VAFHLZEL(17)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",71,0)
 ;Agent Orange Expos. Indicated?
"RTN","VAFHLZE1",72,0)
 I VAFSTR[18 S X=$P(VAF(.321),"^",2),VAFHLZEL(18)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",73,0)
 ;Radiation Expos. Indicated?
"RTN","VAFHLZE1",74,0)
 I VAFSTR[19 S X=$P(VAF(.321),"^",3),VAFHLZEL(19)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",75,0)
 ;Environmental Contaminants?
"RTN","VAFHLZE1",76,0)
 I VAFSTR[20 S X=$P(VAF(.322),"^",13),VAFHLZEL(20)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",77,0)
 ;Total Annual VA Check Amount
"RTN","VAFHLZE1",78,0)
 I VAFSTR[21 S X=$P(VAF(.362),"^",20),VAFHLZEL(21)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",79,0)
 ;Radiation Exposure Method
"RTN","VAFHLZE1",80,0)
 I (VAFSTR[22) D
"RTN","VAFHLZE1",81,0)
 .S X=$P(VAF(.321),"^",12)
"RTN","VAFHLZE1",82,0)
 .S:(X="")!($L(X)>1) X=HLQ
"RTN","VAFHLZE1",83,0)
 .S:(X'=HLQ) X=$TR(X,"NTB","234")
"RTN","VAFHLZE1",84,0)
 .S VAFHLZEL(22)=X
"RTN","VAFHLZE1",85,0)
 ;Call MST status API
"RTN","VAFHLZE1",86,0)
 S VAFMST=$$GETSTAT^DGMSTAPI(DFN,$G(VAFMSTDT))
"RTN","VAFHLZE1",87,0)
 I $P(VAFMST,"^",1)<0 D  I 1
"RTN","VAFHLZE1",88,0)
 .F J=23,24,25 I VAFSTR[J S VAFHLZEL(J)=HLQ
"RTN","VAFHLZE1",89,0)
 E  D
"RTN","VAFHLZE1",90,0)
 .;Current MST status
"RTN","VAFHLZE1",91,0)
 .I VAFSTR[23 S X=$P(VAFMST,"^",2),VAFHLZEL(23)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",92,0)
 .;MST status change date
"RTN","VAFHLZE1",93,0)
 .I VAFSTR[24 S X=$P(VAFMST,"^",3),VAFHLZEL(24)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",94,0)
 .;Site determining MST status
"RTN","VAFHLZE1",95,0)
 .I VAFSTR[25 S X=$P(VAFMST,"^",7) S X=$$GET1^DIQ(4,(+X)_",",99) S VAFHLZEL(25)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",96,0)
 ;Agent Orange Registration Date
"RTN","VAFHLZE1",97,0)
 I VAFSTR[26 S X=$P(VAF(.321),"^",7),VAFHLZEL(26)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",98,0)
 ;Agent Orange Exam Date
"RTN","VAFHLZE1",99,0)
 I VAFSTR[27 S X=$P(VAF(.321),"^",9),VAFHLZEL(27)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",100,0)
 ;Agent Orange Registration #
"RTN","VAFHLZE1",101,0)
 I VAFSTR[28 S X=$P(VAF(.321),"^",10),VAFHLZEL(28)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",102,0)
 ;Agent Orange Exposure Location
"RTN","VAFHLZE1",103,0)
 I VAFSTR[29 S X=$P(VAF(.321),"^",13),VAFHLZEL(29)=$S(X]"":X,$P(VAF(.321),U,2)="Y":"U",1:HLQ)
"RTN","VAFHLZE1",104,0)
 ;Radiation Registration Date
"RTN","VAFHLZE1",105,0)
 I VAFSTR[30 S X=$P(VAF(.321),"^",11),VAFHLZEL(30)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",106,0)
 ;Envir. Cont. Exam Date
"RTN","VAFHLZE1",107,0)
 I VAFSTR[31 S X=$P(VAF(.322),"^",15),VAFHLZEL(31)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",108,0)
 ;Envir. Cont. Registration date
"RTN","VAFHLZE1",109,0)
 I VAFSTR[32 S X=$P(VAF(.322),"^",14),VAFHLZEL(32)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",110,0)
 ;Monetary Ben. Verify Date
"RTN","VAFHLZE1",111,0)
 I VAFSTR[33 S X=$P(VAF(.3),"^",6),VAFHLZEL(33)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",112,0)
 ;User Enrollee Valid Through
"RTN","VAFHLZE1",113,0)
 I VAFSTR[34 S X=$P(VAF(.361),"^",7),VAFHLZEL(34)=$S(X]"":$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",114,0)
 ;User Enrollee Site
"RTN","VAFHLZE1",115,0)
 I VAFSTR[35 S X=$P(VAF(.361),"^",8),X=$$GET1^DIQ(4,+X,99),VAFHLZEL(35)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZE1",116,0)
 ;Combat Vet
"RTN","VAFHLZE1",117,0)
 I (VAFSTR[37)!(VAFSTR[38) D
"RTN","VAFHLZE1",118,0)
 .N CVET
"RTN","VAFHLZE1",119,0)
 .S CVET=$$CVEDT^DGCV(DFN)
"RTN","VAFHLZE1",120,0)
 .;Eligible
"RTN","VAFHLZE1",121,0)
 .I VAFSTR[37 D
"RTN","VAFHLZE1",122,0)
 ..S X=+CVET
"RTN","VAFHLZE1",123,0)
 ..S:X<0 X=""
"RTN","VAFHLZE1",124,0)
 ..S VAFHLZEL(37)=$S(X]"":$$YN^VAFHLFNC(X),1:HLQ)
"RTN","VAFHLZE1",125,0)
 .;End Date
"RTN","VAFHLZE1",126,0)
 .I VAFSTR[38 D
"RTN","VAFHLZE1",127,0)
 ..S X=+$P(CVET,"^",2)
"RTN","VAFHLZE1",128,0)
 ..S VAFHLZEL(38)=$S(X:$$HLDATE^HLFNC(X),1:HLQ)
"RTN","VAFHLZE1",129,0)
 ;Discharge Due To Disability
"RTN","VAFHLZE1",130,0)
 I VAFSTR[39 S X=$P(VAFPELIG,"^",13),VAFHLZEL(39)=$S(X=0:"N",X=1:"Y",1:HLQ)
"RTN","VAFHLZE1",131,0)
 ;Done
"RTN","VAFHLZE1",132,0)
 Q
"VER")
8.0^22.0
"^DD",2,2,.3602,0)
MILITARY DISABILITY RETIREMENT^SX^1:YES;0:NO;^.36;12^S DFN=DA D EV2^DGLOCK
"^DD",2,2,.3602,1,0)
^.1
"^DD",2,2,.3602,1,1,0)
2^AV^MUMPS
"^DD",2,2,.3602,1,1,1)
S DFN=DA D EN^DGMTR K DGREQF
"^DD",2,2,.3602,1,1,2)
Q
"^DD",2,2,.3602,1,1,"DT")
3050708
"^DD",2,2,.3602,1,2,0)
2^AENR3602^MUMPS
"^DD",2,2,.3602,1,2,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.3602,1,2,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.3602,1,2,3)
DO NOT DELETE
"^DD",2,2,.3602,1,2,"%D",0)
^^2^2^3050829^
"^DD",2,2,.3602,1,2,"%D",1,0)
This cross-reference will be used to update the patient's current Patient
"^DD",2,2,.3602,1,2,"%D",2,0)
Enrollment Record.
"^DD",2,2,.3602,1,2,"DT")
3050829
"^DD",2,2,.3602,3)
Answer Yes if the Veteran receives disability pay in lieu of VA Compensation.
"^DD",2,2,.3602,4)
D HLP3602^DGRPU
"^DD",2,2,.3602,23,0)
^.001^2^2^3050922^^
"^DD",2,2,.3602,23,1,0)
This field will replace Disability Discharge from the Military (field 
"^DD",2,2,.3602,23,2,0)
#.362).
"^DD",2,2,.3602,"DT")
3050829
"^DD",2,2,.3603,0)
DISCHARGE DUE TO DISABILITY^SX^1:YES;0:NO;^.36;13^S DFN=DA D EV2^DGLOCK
"^DD",2,2,.3603,1,0)
^.1
"^DD",2,2,.3603,1,1,0)
2^AU^MUMPS
"^DD",2,2,.3603,1,1,1)
S DFN=DA D EN^DGMTR K DGREQF
"^DD",2,2,.3603,1,1,2)
Q
"^DD",2,2,.3603,1,1,"DT")
3050708
"^DD",2,2,.3603,1,2,0)
2^AENR3603^MUMPS
"^DD",2,2,.3603,1,2,1)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.3603,1,2,2)
D AUTOUPD^DGENA2(DA)
"^DD",2,2,.3603,1,2,3)
DO NOT DELETE
"^DD",2,2,.3603,1,2,"%D",0)
^.101^2^2^3050829^^^^
"^DD",2,2,.3603,1,2,"%D",1,0)
This cross-reference will be used to update the patient's current 
"^DD",2,2,.3603,1,2,"%D",2,0)
Patient Enrollment record.
"^DD",2,2,.3603,1,2,"DT")
3050816
"^DD",2,2,.3603,3)
Was the Veteran discharged due to a disability incurred in the Line of Duty?
"^DD",2,2,.3603,4)
D HLP3603^DGRPU
"^DD",2,2,.3603,"DT")
3050816
"^DD",27.11,27.11,50.2,0)
DISCHARGED DUE TO DISABILITY^S^1:YES;0:NO;^E;20^Q
"^DD",27.11,27.11,50.2,3)
Line of Duty disability discharge?
"^DD",27.11,27.11,50.2,21,0)
^.001^2^2^3050708^^
"^DD",27.11,27.11,50.2,21,1,0)
Indicates whether or not discharge was due to a disability incurred in 
"^DD",27.11,27.11,50.2,21,2,0)
the Line of Duty.
"^DD",27.11,27.11,50.2,"DT")
3050708
**INSTALL NAME**
IVM*2.0*109
"BLD",6348,0)
IVM*2.0*109^INCOME VERIFICATION MATCH^0^3051206^y
"BLD",6348,4,0)
^9.64PA^^
"BLD",6348,"KRN",0)
^9.67PA^8989.52^19
"BLD",6348,"KRN",.4,0)
.4
"BLD",6348,"KRN",.401,0)
.401
"BLD",6348,"KRN",.402,0)
.402
"BLD",6348,"KRN",.403,0)
.403
"BLD",6348,"KRN",.5,0)
.5
"BLD",6348,"KRN",.84,0)
.84
"BLD",6348,"KRN",3.6,0)
3.6
"BLD",6348,"KRN",3.8,0)
3.8
"BLD",6348,"KRN",9.2,0)
9.2
"BLD",6348,"KRN",9.8,0)
9.8
"BLD",6348,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6348,"KRN",9.8,"NM",1,0)
IVMUFNC5^^0^B8215758
"BLD",6348,"KRN",9.8,"NM",2,0)
IVMPTRN8^^0^B53803616
"BLD",6348,"KRN",9.8,"NM","B","IVMPTRN8",2)

"BLD",6348,"KRN",9.8,"NM","B","IVMUFNC5",1)

"BLD",6348,"KRN",19,0)
19
"BLD",6348,"KRN",19.1,0)
19.1
"BLD",6348,"KRN",101,0)
101
"BLD",6348,"KRN",409.61,0)
409.61
"BLD",6348,"KRN",771,0)
771
"BLD",6348,"KRN",870,0)
870
"BLD",6348,"KRN",8989.51,0)
8989.51
"BLD",6348,"KRN",8989.52,0)
8989.52
"BLD",6348,"KRN",8994,0)
8994
"BLD",6348,"KRN","B",.4,.4)

"BLD",6348,"KRN","B",.401,.401)

"BLD",6348,"KRN","B",.402,.402)

"BLD",6348,"KRN","B",.403,.403)

"BLD",6348,"KRN","B",.5,.5)

"BLD",6348,"KRN","B",.84,.84)

"BLD",6348,"KRN","B",3.6,3.6)

"BLD",6348,"KRN","B",3.8,3.8)

"BLD",6348,"KRN","B",9.2,9.2)

"BLD",6348,"KRN","B",9.8,9.8)

"BLD",6348,"KRN","B",19,19)

"BLD",6348,"KRN","B",19.1,19.1)

"BLD",6348,"KRN","B",101,101)

"BLD",6348,"KRN","B",409.61,409.61)

"BLD",6348,"KRN","B",771,771)

"BLD",6348,"KRN","B",870,870)

"BLD",6348,"KRN","B",8989.51,8989.51)

"BLD",6348,"KRN","B",8989.52,8989.52)

"BLD",6348,"KRN","B",8994,8994)

"BLD",6348,"QUES",0)
^9.62^^
"BLD",6348,"REQB",0)
^9.611^2^2
"BLD",6348,"REQB",1,0)
IVM*2.0*104^2
"BLD",6348,"REQB",2,0)
IVM*2.0*113^2
"BLD",6348,"REQB","B","IVM*2.0*104",1)

"BLD",6348,"REQB","B","IVM*2.0*113",2)

"MBREQ")
0
"PKG",120,-1)
1^1
"PKG",120,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",120,20,0)
^9.402P^^
"PKG",120,22,0)
^9.49I^1^1
"PKG",120,22,1,0)
2.0^2941021^2960823
"PKG",120,22,1,"PAH",1,0)
109^3051206^123456971
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMPTRN8")
0^2^B53803616
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM/TDM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 8/11/05 9:56am
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76,75,79,85,89,98,56,97,104,113,109**; 21-OCT-94
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06,ZMHSQ,SETID
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 S IVMSEQ="3,5,7,8,11,12,13,14,19"
"RTN","IVMPTRN8",54,0)
 ; do not transmit seq 11 and 12 if the Bad Address Indicator is set
"RTN","IVMPTRN8",55,0)
 ; or other address filters do not pass
"RTN","IVMPTRN8",56,0)
 S:$$FILTER^IVMPTRN9(DFN) IVMSEQ="3,5,7,8,13,14,19"
"RTN","IVMPTRN8",57,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,"_IVMSEQ)        ;add SEQ 1 for PID
"RTN","IVMPTRN8",58,0)
 ;
"RTN","IVMPTRN8",59,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",60,0)
 S IVMCMOR="1,2"
"RTN","IVMPTRN8",61,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",62,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",63,0)
 .I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMPID=$$EN^VAFCPID(DFN,"1,2,"_IVMSEQ),IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",64,0)
 ;
"RTN","IVMPTRN8",65,0)
 I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN8",66,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",67,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",68,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN8",69,0)
 I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN8",70,0)
 ;
"RTN","IVMPTRN8",71,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",72,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",73,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",74,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",75,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",76,0)
 ;
"RTN","IVMPTRN8",77,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",78,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN1^VAFHLZPD(DFN,"1,8,9,11,12,13,17,19,31,32,33,40"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",79,0)
 ;
"RTN","IVMPTRN8",80,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",81,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",82,0)
 ;
"RTN","IVMPTRN8",83,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",84,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",85,0)
 ;
"RTN","IVMPTRN8",86,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",87,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",88,0)
 D EN1^VAFHLZEL(DFN,"1,2,5,6,7,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,29,34,35,37,38,39",2,.VAFZEL)
"RTN","IVMPTRN8",89,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(1))  ; Primary Eligibility
"RTN","IVMPTRN8",90,0)
 I $D(VAFZEL(1,1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=VAFZEL(1,1)
"RTN","IVMPTRN8",91,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",92,0)
 F IVMSUB=1:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",93,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",94,0)
 ;
"RTN","IVMPTRN8",95,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",96,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",97,0)
 ;
"RTN","IVMPTRN8",98,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",99,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",100,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",101,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",102,0)
 ;
"RTN","IVMPTRN8",103,0)
 ; Optionally create (ZMH) Military History segments
"RTN","IVMPTRN8",104,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH")
"RTN","IVMPTRN8",105,0)
 S (ZMHSQ,SETID)=0
"RTN","IVMPTRN8",106,0)
 I $D(IVMZMH) F  S ZMHSQ=$O(IVMZMH(ZMHSQ)) Q:ZMHSQ=""  D
"RTN","IVMPTRN8",107,0)
 .Q:$TR($P(IVMZMH(ZMHSQ,0),HLFS,4,5),"""^~")=""
"RTN","IVMPTRN8",108,0)
 .S SETID=SETID+1,IVMCT=IVMCT+1
"RTN","IVMPTRN8",109,0)
 .S ^TMP("HLS",$J,IVMCT)="ZMH"_HLFS_SETID_HLFS_$P(IVMZMH(ZMHSQ,0),HLFS,3,5)
"RTN","IVMPTRN8",110,0)
 ;
"RTN","IVMPTRN8",111,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",112,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",113,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",114,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",115,0)
 ;
"RTN","IVMPTRN8",116,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",117,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",118,0)
 ;
"RTN","IVMPTRN8",119,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",120,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3")
"RTN","IVMPTRN8",121,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3",2,2)
"RTN","IVMPTRN8",122,0)
 ;
"RTN","IVMPTRN8",123,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",124,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",125,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",126,0)
 ;
"RTN","IVMPTRN8",127,0)
 ; Income Year requiring transmission from IVM Patient File (301.5)
"RTN","IVMPTRN8",128,0)
 S IVMIY=$S($D(IVMIY):IVMIY,1:(IVMMTDT-10000))
"RTN","IVMPTRN8",129,0)
 N MTINFO S MTINFO=$$FUT^DGMTU(DFN)
"RTN","IVMPTRN8",130,0)
 I ($E(IVMIY,1,3)+1)=$E($P(MTINFO,U,2),1,3) S IVMMTDT=$P(MTINFO,U,2)
"RTN","IVMPTRN8",131,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",132,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",133,0)
 ;
"RTN","IVMPTRN8",134,0)
 ; The following function call returns:
"RTN","IVMPTRN8",135,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",136,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",137,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",138,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",139,0)
 ;
"RTN","IVMPTRN8",140,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",141,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",142,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",143,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",144,0)
 ;use IVMIY not IVMMTDT. For LTC copay exemption, IVMMTDT is not correct
"RTN","IVMPTRN8",145,0)
 S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC(IVMIY)
"RTN","IVMPTRN8",146,0)
 ;
"RTN","IVMPTRN8",147,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",148,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",149,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",150,0)
 ;
"RTN","IVMPTRN8",151,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",152,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9")
"RTN","IVMPTRN8",153,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",154,0)
 .; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",155,0)
 .S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",156,0)
 ;
"RTN","IVMPTRN8",157,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",158,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",159,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",160,0)
 ;
"RTN","IVMPTRN8",161,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",162,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",163,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",164,0)
 ;
"RTN","IVMPTRN8",165,0)
 ;
"RTN","IVMPTRN8",166,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",167,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",168,0)
 .;
"RTN","IVMPTRN8",169,0)
 .; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",170,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9")
"RTN","IVMPTRN8",171,0)
 .I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",172,0)
 ..; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",173,0)
 ..S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",174,0)
 .;
"RTN","IVMPTRN8",175,0)
 .; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",176,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",177,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",178,0)
 .;
"RTN","IVMPTRN8",179,0)
 .; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",180,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,6,7,8,9")
"RTN","IVMPTRN8",181,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",182,0)
 .; 
"RTN","IVMPTRN8",183,0)
 ;
"RTN","IVMPTRN8",184,0)
 ; create (ZIO) Inpatient/Outpatient segment for veteran
"RTN","IVMPTRN8",185,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="ZIO^1^"_$$EN^IVMUFNC1(DFN,IVMMTDT,.IVMQUERY)_"^"_$$LTD^IVMUFNC(DFN,.IVMQUERY)
"RTN","IVMPTRN8",186,0)
 ;
"RTN","IVMPTRN8",187,0)
 ; create (NTE) Notes and Comments segment
"RTN","IVMPTRN8",188,0)
 D NTE^IVMUFNC4(DFN,.IVMNTE,IVMMTDT)
"RTN","IVMPTRN8",189,0)
 I '$D(IVMNTE) D
"RTN","IVMPTRN8",190,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="NTE^1"
"RTN","IVMPTRN8",191,0)
 I $D(IVMNTE) D
"RTN","IVMPTRN8",192,0)
 .; - get notes and comments
"RTN","IVMPTRN8",193,0)
 .F IVMSUB=0:0 S IVMSUB=$O(IVMNTE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",194,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMNTE(IVMSUB)
"RTN","IVMPTRN8",195,0)
 ;
"RTN","IVMPTRN8",196,0)
 ; create (IN1) Insurance segment(s) for all active insurance
"RTN","IVMPTRN8",197,0)
 K ^TMP("VAFIN1",$J)
"RTN","IVMPTRN8",198,0)
 D EN^VAFHLIN1(DFN,"1,4,5,7,8,9,12,13,15,16,17,28,36")
"RTN","IVMPTRN8",199,0)
 F IVMSUB=0:0 S IVMSUB=$O(^TMP("VAFIN1",$J,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",200,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=^TMP("VAFIN1",$J,+IVMSUB,0)
"RTN","IVMPTRN8",201,0)
 ;
"RTN","IVMPTRN8",202,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",203,0)
 Q
"RTN","IVMUFNC5")
0^1^B8215758
"RTN","IVMUFNC5",1,0)
IVMUFNC5 ;ALB/AEG - IVM UTILITIES CONTINUED ; 8/10/05 1:39pm
"RTN","IVMUFNC5",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**55,109**;5-10-2002
"RTN","IVMUFNC5",3,0)
 ;
"RTN","IVMUFNC5",4,0)
AGE(DT) ;
"RTN","IVMUFNC5",5,0)
 N Y
"RTN","IVMUFNC5",6,0)
 S Y=$E(DT,1,3)-1_"0000",Y=Y-10000
"RTN","IVMUFNC5",7,0)
 Q Y
"RTN","IVMUFNC5",8,0)
 ;
"RTN","IVMUFNC5",9,0)
INCY(IVMMTDT) ;
"RTN","IVMUFNC5",10,0)
 N Y
"RTN","IVMUFNC5",11,0)
 S Y=$E(IVMMTDT,1,3)_"0000",Y=Y-10000
"RTN","IVMUFNC5",12,0)
 Q Y
"RTN","IVMUFNC5",13,0)
 ;
"RTN","IVMUFNC5",14,0)
CATC(DATA) ;
"RTN","IVMUFNC5",15,0)
 ; Extrinsic function to determine is incoming ZMT1 segment meets 
"RTN","IVMUFNC5",16,0)
 ; one of the following groups:
"RTN","IVMUFNC5",17,0)
 ;     1.  Cat C or Pending Adj. / Provided income info / test date
"RTN","IVMUFNC5",18,0)
 ;         is 10/6/99 or later and Agreed to Pay is YES.
"RTN","IVMUFNC5",19,0)
 ;     OR
"RTN","IVMUFNC5",20,0)
 ;
"RTN","IVMUFNC5",21,0)
 ;     2.  Category C based upon declination to provide income info
"RTN","IVMUFNC5",22,0)
 ;         but agreed to pay deductible.
"RTN","IVMUFNC5",23,0)
 ;
"RTN","IVMUFNC5",24,0)
 ; Input(s):  $G(^TMP($J,"IVMCM","ZMT1")) global node - Incoming ZMT
"RTN","IVMUFNC5",25,0)
 ;            segment.
"RTN","IVMUFNC5",26,0)
 ;
"RTN","IVMUFNC5",27,0)
 ; Output(s):  Function Value. 1 = Yes patient meets one of the criteria
"RTN","IVMUFNC5",28,0)
 ;                             0 = NO test does not meet criteria.
"RTN","IVMUFNC5",29,0)
 N MTDAT,RETV
"RTN","IVMUFNC5",30,0)
 S RETV=0
"RTN","IVMUFNC5",31,0)
 Q:'$D(DATA) 0
"RTN","IVMUFNC5",32,0)
 S MTDAT("DT")=$P($G(DATA),U,2),MTDAT("MTS")=$P($G(DATA),U,3)
"RTN","IVMUFNC5",33,0)
 S MTDAT("APD")=$P($G(DATA),U,7),MTDAT("DCLI")=$P($G(DATA),U,16)
"RTN","IVMUFNC5",34,0)
 ; Patient Provided income information.
"RTN","IVMUFNC5",35,0)
 I '+$G(MTDAT("DCLI")) D
"RTN","IVMUFNC5",36,0)
 .; If Cat C or Pending Adjudication test date on or after 10/6/99
"RTN","IVMUFNC5",37,0)
 .; Provided Income info and Agreed to Pay.
"RTN","IVMUFNC5",38,0)
 .;
"RTN","IVMUFNC5",39,0)
 .I $G(MTDAT("MTS"))="C",$G(MTDAT("DT"))'<2991006,$G(MTDAT("APD"))=1 S RETV=1 Q
"RTN","IVMUFNC5",40,0)
 .I $G(MTDAT("MTS"))="P",$G(MTDAT("DT"))'<2991006,$G(MTDAT("APD"))=1 S RETV=1 Q
"RTN","IVMUFNC5",41,0)
 ;
"RTN","IVMUFNC5",42,0)
 ; Patient Declined to provide income information.
"RTN","IVMUFNC5",43,0)
 I +$G(MTDAT("DCLI")) D
"RTN","IVMUFNC5",44,0)
 .; Cat C and Agreed to Pay - No date restriction
"RTN","IVMUFNC5",45,0)
 .I $G(MTDAT("MTS"))="C",+$G(MTDAT("APD")) S RETV=1 Q
"RTN","IVMUFNC5",46,0)
 ;
"RTN","IVMUFNC5",47,0)
 Q RETV
"RTN","IVMUFNC5",48,0)
 ;
"RTN","IVMUFNC5",49,0)
ELIG(DFN) ; Eligibility Check for Cat C uploads older than previous
"RTN","IVMUFNC5",50,0)
 ;         income year data.
"RTN","IVMUFNC5",51,0)
 ;
"RTN","IVMUFNC5",52,0)
 ; Input: DFN - Patient IEN
"RTN","IVMUFNC5",53,0)
 ; Output: Function Value 0 if Z10 upload not appropriate
"RTN","IVMUFNC5",54,0)
 ;
"RTN","IVMUFNC5",55,0)
 N IVMELI
"RTN","IVMUFNC5",56,0)
 S IVMELI=0
"RTN","IVMUFNC5",57,0)
 ; Check primary eligibility
"RTN","IVMUFNC5",58,0)
 I $D(^DPT(DFN,.36)) S X=^(.36) D
"RTN","IVMUFNC5",59,0)
 .; If NSC or SC < 50 0% appropriate to upload old test.
"RTN","IVMUFNC5",60,0)
 .I $P($G(^DIC(8,+X,0)),U,9)=5!($$SC(DFN)) S IVMELI=1
"RTN","IVMUFNC5",61,0)
 .I $P(X,U,12)=1 S IVMELI=0
"RTN","IVMUFNC5",62,0)
 .I $P(X,U,13)=1 S IVMELI=0
"RTN","IVMUFNC5",63,0)
 .K X
"RTN","IVMUFNC5",64,0)
 ; If deceased patient --- don't upload.
"RTN","IVMUFNC5",65,0)
 I +$$GET1^DIQ(2,DFN_",",.351,"I") S IVMELI=0
"RTN","IVMUFNC5",66,0)
 ; If eligible for medicaid, don't upload.
"RTN","IVMUFNC5",67,0)
 I +$$GET1^DIQ(2,DFN_",",.381,"I") S IVMELI=0
"RTN","IVMUFNC5",68,0)
 ; Check PH status.
"RTN","IVMUFNC5",69,0)
 I $P($G(^DPT(DFN,.53)),U)="Y" S IVMELI=0
"RTN","IVMUFNC5",70,0)
 Q IVMELI
"RTN","IVMUFNC5",71,0)
 ;
"RTN","IVMUFNC5",72,0)
SC(DFN) ; Check to see if patient is SC 0% non-compensable.
"RTN","IVMUFNC5",73,0)
 ; Input -- DFN Patient IEN
"RTN","IVMUFNC5",74,0)
 ; Output -- Function value 1=Yes or 0=No
"RTN","IVMUFNC5",75,0)
 ;
"RTN","IVMUFNC5",76,0)
 N IVMG,IVME,IVMF,IVMY
"RTN","IVMUFNC5",77,0)
 S IVMY=0
"RTN","IVMUFNC5",78,0)
 ; Primary Eligibility is SC < 50 %
"RTN","IVMUFNC5",79,0)
 I $D(^DPT(DFN,.36)),$P($G(^DIC(8,+X,0)),U,9)=3 S IVMY=1
"RTN","IVMUFNC5",80,0)
 G:'IVMY SCQ
"RTN","IVMUFNC5",81,0)
 ; Service Connected percentage = 0
"RTN","IVMUFNC5",82,0)
 I $P($G(^DPT(DFN,.3)),U,2)'=0 S IVMY=0 G SCQ
"RTN","IVMUFNC5",83,0)
 ; No Total annual VA Check amount
"RTN","IVMUFNC5",84,0)
 I $P($G(^DPT(DFN,.362)),U,20) S IVMY=0 G SCQ
"RTN","IVMUFNC5",85,0)
 ; POW Status indicated.
"RTN","IVMUFNC5",86,0)
 I $P($G(^DPT(DFN,.52)),U,5)="Y" S IVMY=0 G SCQ
"RTN","IVMUFNC5",87,0)
 ; Purple Heart Indicated.
"RTN","IVMUFNC5",88,0)
 I $P($G(^DPT(DFN,.53)),U)="Y" S IVMY=0 G SCQ
"RTN","IVMUFNC5",89,0)
 ; Check Secondary Eligibilities.
"RTN","IVMUFNC5",90,0)
 F IVMG=2,4,15:1:18 S IVME(IVMG)=""
"RTN","IVMUFNC5",91,0)
 S IVMG=0 F  S IVMG=$O(^DPT(DFN,"E","B",IVMG)) Q:'IVMG  D SEL I IVMF,$D(IVME(+IVMF)) S IVMY=0 Q
"RTN","IVMUFNC5",92,0)
SCQ Q +$G(IVMY)
"RTN","IVMUFNC5",93,0)
 ;
"RTN","IVMUFNC5",94,0)
SEL ;
"RTN","IVMUFNC5",95,0)
 S IVMF=$G(^DIC(8,+IVMG,0)) I IVMF="" Q
"RTN","IVMUFNC5",96,0)
 S IVMF=$P(IVMF,U,9)
"RTN","IVMUFNC5",97,0)
 I IVMF=""!('$D(^DIC(8.1,+IVMF,0))) D
"RTN","IVMUFNC5",98,0)
 .S IVMF=""
"RTN","IVMUFNC5",99,0)
 .Q
"RTN","IVMUFNC5",100,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
EAS*1.0*62
"BLD",6349,0)
EAS*1.0*62^ENROLLMENT APPLICATION SYSTEM^0^3051206^y
"BLD",6349,4,0)
^9.64PA^^
"BLD",6349,"ABPKG")
n
"BLD",6349,"KRN",0)
^9.67PA^8989.52^19
"BLD",6349,"KRN",.4,0)
.4
"BLD",6349,"KRN",.401,0)
.401
"BLD",6349,"KRN",.402,0)
.402
"BLD",6349,"KRN",.403,0)
.403
"BLD",6349,"KRN",.5,0)
.5
"BLD",6349,"KRN",.84,0)
.84
"BLD",6349,"KRN",3.6,0)
3.6
"BLD",6349,"KRN",3.8,0)
3.8
"BLD",6349,"KRN",9.2,0)
9.2
"BLD",6349,"KRN",9.8,0)
9.8
"BLD",6349,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6349,"KRN",9.8,"NM",1,0)
EASEZF1^^0^B48932487
"BLD",6349,"KRN",9.8,"NM",2,0)
EASECSC1^^0^B29731222
"BLD",6349,"KRN",9.8,"NM","B","EASECSC1",2)

"BLD",6349,"KRN",9.8,"NM","B","EASEZF1",1)

"BLD",6349,"KRN",19,0)
19
"BLD",6349,"KRN",19.1,0)
19.1
"BLD",6349,"KRN",101,0)
101
"BLD",6349,"KRN",409.61,0)
409.61
"BLD",6349,"KRN",771,0)
771
"BLD",6349,"KRN",870,0)
870
"BLD",6349,"KRN",8989.51,0)
8989.51
"BLD",6349,"KRN",8989.52,0)
8989.52
"BLD",6349,"KRN",8994,0)
8994
"BLD",6349,"KRN","B",.4,.4)

"BLD",6349,"KRN","B",.401,.401)

"BLD",6349,"KRN","B",.402,.402)

"BLD",6349,"KRN","B",.403,.403)

"BLD",6349,"KRN","B",.5,.5)

"BLD",6349,"KRN","B",.84,.84)

"BLD",6349,"KRN","B",3.6,3.6)

"BLD",6349,"KRN","B",3.8,3.8)

"BLD",6349,"KRN","B",9.2,9.2)

"BLD",6349,"KRN","B",9.8,9.8)

"BLD",6349,"KRN","B",19,19)

"BLD",6349,"KRN","B",19.1,19.1)

"BLD",6349,"KRN","B",101,101)

"BLD",6349,"KRN","B",409.61,409.61)

"BLD",6349,"KRN","B",771,771)

"BLD",6349,"KRN","B",870,870)

"BLD",6349,"KRN","B",8989.51,8989.51)

"BLD",6349,"KRN","B",8989.52,8989.52)

"BLD",6349,"KRN","B",8994,8994)

"BLD",6349,"QUES",0)
^9.62^^
"BLD",6349,"REQB",0)
^9.611^1^1
"BLD",6349,"REQB",1,0)
EAS*1.0*57^2
"BLD",6349,"REQB","B","EAS*1.0*57",1)

"MBREQ")
0
"PKG",189,-1)
1^1
"PKG",189,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",189,20,0)
^9.402P^1^1
"PKG",189,20,1,0)
2^^EASXDR
"PKG",189,20,1,1)
 
"PKG",189,20,"B",2,1)

"PKG",189,22,0)
^9.49I^1^1
"PKG",189,22,1,0)
1.0^3010315^3010321^66481
"PKG",189,22,1,"PAH",1,0)
62^3051206^123456971
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","EASECSC1")
0^2^B29731222
"RTN","EASECSC1",1,0)
EASECSC1 ;ALB/PHH,LBD - LTC Co-Pay Test Screen Military Service ; 9/19/05 3:05pm
"RTN","EASECSC1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**5,7,38,62**;Mar 15, 2001
"RTN","EASECSC1",3,0)
 ;
"RTN","EASECSC1",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","EASECSC1",5,0)
 ;           DGMTACT  LTC Co-Pay Test Action
"RTN","EASECSC1",6,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","EASECSC1",7,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","EASECSC1",8,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","EASECSC1",9,0)
 ; Output -- None
"RTN","EASECSC1",10,0)
 ;
"RTN","EASECSC1",11,0)
EN ;Entry point
"RTN","EASECSC1",12,0)
 N DGLTCEX,DGLTC,IORVON,IORVOFF
"RTN","EASECSC1",13,0)
 D ^DGRPV
"RTN","EASECSC1",14,0)
 D EASECRP6
"RTN","EASECSC1",15,0)
 S X="IORVON;IORVOFF" D ENDR^%ZISS K X
"RTN","EASECSC1",16,0)
 I $G(DGLTCEX) W !?2,$G(IORVON)," * VETERAN MAY BE EXEMPT FROM COPAY IF LTC EPISODE IS DUE TO THIS CONDITION.",$G(IORVOFF)
"RTN","EASECSC1",17,0)
 S X="^2"
"RTN","EASECSC1",18,0)
 S:$$PAUSE(0) X="^"
"RTN","EASECSC1",19,0)
 G EN1^EASECSCR
"RTN","EASECSC1",20,0)
 Q
"RTN","EASECSC1",21,0)
PAUSE(RESP) ; Prompt user for next page or quit
"RTN","EASECSC1",22,0)
 N DIR,DIRUT,DUOUT,DTOUT,U,X,Y
"RTN","EASECSC1",23,0)
 S DIR(0)="E"
"RTN","EASECSC1",24,0)
 D ^DIR
"RTN","EASECSC1",25,0)
 I 'Y S RESP=1
"RTN","EASECSC1",26,0)
 Q RESP
"RTN","EASECSC1",27,0)
 ;
"RTN","EASECSC1",28,0)
EASECRP6 ; Display the screen
"RTN","EASECSC1",29,0)
 ; Note: This section was copied from ^DGRP6 and modified specifically
"RTN","EASECSC1",30,0)
 ;       to work with LTC.
"RTN","EASECSC1",31,0)
 ;
"RTN","EASECSC1",32,0)
 S (DGRPS,DGMTSCI)=1 D HD^EASECSCU F I=.32,.321,.322,.36,.52,.53 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","EASECSC1",33,0)
 S (DGRPW,Z)=1 D WW S Z="    Service Branch",Z1=24 D WW1^DGRPV S Z="   Service #",Z1=19 D WW1^DGRPV S Z="   Entered",Z1=12 D WW1^DGRPV S Z="   Separated",Z1=12 D WW1^DGRPV W "   Discharge"
"RTN","EASECSC1",34,0)
 W !?4,"--------------",?27,"---------",?46,"-------",?58,"---------",?70,"---------"
"RTN","EASECSC1",35,0)
 S DGRPX=DGRP(.32),DGRPSV=4 D S I $P(DGRPX,"^",19)="Y" S DGRPSV=9 D S I $P(DGRPX,"^",20)="Y" S DGRPSV=14 D S
"RTN","EASECSC1",36,0)
 S Z=2,DGRPX=DGRP(.52) D WW W "           POW: " S X=5,Z1=6 D YN W "From: " S X=7,Z1=13 D DAT W "To: " S X=8,Z1=12 D DAT W "War: ",$S($D(^DIC(22,+$P(DGRPX,"^",6),0)):$P(^(0),"^",2),1:"")
"RTN","EASECSC1",37,0)
 S Z=3 D WW W "        Combat: " S X=11,Z1=6 D YN W "From: " S X=13,Z1=13 D DAT W "To: " S X=14,Z1=12 D DAT W "Loc: ",$S($D(^DIC(22,+$P(DGRPX,"^",12),0)):$P(^(0),"^",2),1:"")
"RTN","EASECSC1",38,0)
 S Z=4,DGRPX=DGRP(.321) D WW W "       Vietnam: " S X=1,Z1=6 D YN W "From: " S X=4,Z1=13 D DAT W "To: " S X=5,X1=13 D DAT
"RTN","EASECSC1",39,0)
 S Z=5 D WW W "      A/O Exp.: " S X=2,Z1=7,DGLTC=1 D YN W "Reg: " S X=7,Z1=11 D DAT W "Exam: " S X=9,Z1=11 D DAT W "A/O#: " S Z=$P(DGRPX,"^",10),Z1=8 D WW1^DGRPV S Z=$P(DGRPX,"^",13) W $S(Z="K":" DMZ",Z="V":"VIET",1:"")
"RTN","EASECSC1",40,0)
 S Z=6 D WW W "      ION Rad.: " S X=3,Z1=7,DGLTC=1 D YN W "Reg: " S X=11,Z1=9 D DAT W "Method: " S X=$P(DGRPX,"^",12) W $S(X="B":"BOTH",X="T":"NUCLEAR TESTING",X="N":"NAGASAKI/HIROSHIMA",1:"")
"RTN","EASECSC1",41,0)
 S DGRPX=DGRP(.322)
"RTN","EASECSC1",42,0)
 F DGX=1,4,7,10 S X=DGX,Z=DGX-1/3+7 D WW W:DGX<10 " " W $S(DGX=1:"      Lebanon",DGX=4:"      Grenada",DGX=7:"       Panama",1:"      Gulf War"),": " S Z1=6 D YN W "From: " S X=DGX+1,Z1=13 D DAT W "To: " S X=DGX+2,Z1=12 D DAT
"RTN","EASECSC1",43,0)
 S Z=11 D WW W "       Somalia: " S (DGX,X)=16,Z1=6 D YN W "From: " S X=17,Z1=13 D DAT W "To: " S X=18,Z1=12 D DAT
"RTN","EASECSC1",44,0)
 S Z=12 D WW W "    Env Contam: " S X=13,Z1=7,DGLTC=1 D YN W "Reg: " S X=14,Z1=11 D DAT W "Exam: " S X=15,Z1=10 D DAT
"RTN","EASECSC1",45,0)
 S Z=13 D WW S X=$P(DGRP(.36),"^",12)
"RTN","EASECSC1",46,0)
 W "      Mil Disab Retirement: ",$S(X=0:"NO",X=1:"YES",1:"")
"RTN","EASECSC1",47,0)
 S Z=21 S X=$P(DGRP(.36),U,13)
"RTN","EASECSC1",48,0)
 W "           Dischrg Due to Disab: ",$S(X=1:"YES",X=0:"NO",1:"")
"RTN","EASECSC1",49,0)
 S Z=14 D WW W "      Dent Inj: " S DGRPX=DGRP(.36),X=8,Z1=28 D YN W "Teeth Extracted: " S X=9,Z1=9 D YN S DGRPD=0 I $P(DGRPX,"^",8)="Y",$P(DGRPX,"^",9)="Y" S DGRPD=1
"RTN","EASECSC1",50,0)
 I DGRPD S I1="" F I=0:0 S I=$O(^DPT(DFN,.37,I)) Q:'I  S I1=1,DGRPX=^(I,0) D DEN
"RTN","EASECSC1",51,0)
 S DGRPX=DGRP(.322)
"RTN","EASECSC1",52,0)
 S Z=15 D WW W "    Yugoslavia: " S (DGX,X)=19,Z1=6 D YN W "From: " S X=20,Z1=13 D DAT W "To: " S X=21,Z1=12 D DAT
"RTN","EASECSC1",53,0)
 S Z=16 D WW W "  Purple Heart: " S DGRPX=DGRP(.53),X=1 D YN D
"RTN","EASECSC1",54,0)
 . I $P($G(DGRPX),U)="Y",($P($G(DGRPX),U,2)]"") W ?26,"PH Status: "_$S($P($G(DGRPX),U,2)="1":"Pending",$P($G(DGRPX),U,2)="2":"In Process",$P($G(DGRPX),U,2)="3":"Confirmed",1:"")
"RTN","EASECSC1",55,0)
 I $P($G(DGRPX),U)="N" D
"RTN","EASECSC1",56,0)
 . S DGX=$P(DGRPX,U,3)
"RTN","EASECSC1",57,0)
 . S DGX=$S($G(DGX)=1:"UNACCEPTABLE DOCUMENTATION",$G(DGX)=2:"NO DOCUMENTATION REC'D",$G(DGX)=3:"ENTERED IN ERROR",$G(DGX)=4:"UNSUPPORTED PURPLE HEART",$G(DGX)=5:"VAMC",$G(DGX)=6:"UNDELIVERABLE MAIL",1:"")
"RTN","EASECSC1",58,0)
 . I $G(DGX)]"" W ?26,"PH Remarks: "_$S($G(DGX)]"":$G(DGX),1:"")
"RTN","EASECSC1",59,0)
 S Z=17 D WW W "    N/T Radium: " D     ;N/T Radium Treatment expos.
"RTN","EASECSC1",60,0)
 . N DGNT S DGRPX=$$GETCUR^DGNTAPI(DFN,"DGNT") W $G(DGNT("INTRP")) I $G(DGNT("INTRP"))["YES" W "*" S DGLTCEX=1
"RTN","EASECSC1",61,0)
Q K DGRPD,DGRPSV
"RTN","EASECSC1",62,0)
 Q
"RTN","EASECSC1",63,0)
YN S Z=$S($P(DGRPX,"^",X)="Y":"YES",$P(DGRPX,"^",X)="N":"NO",$P(DGRPX,"^",X)="U":"UNK",1:"") S:Z="YES"&($G(DGLTC)) Z=Z_"*",DGLTCEX=1 D WW1^DGRPV K DGLTC Q
"RTN","EASECSC1",64,0)
DAT S Z=$P(DGRPX,"^",X) I Z']"" S Z=""
"RTN","EASECSC1",65,0)
 E  S Z=$$FMTE^XLFDT(Z,"5DZ")
"RTN","EASECSC1",66,0)
 D WW1^DGRPV Q
"RTN","EASECSC1",67,0)
DEN W !?3," Trt Date: " S X=1,Z1=10 D DAT W "Cond.: ",$E($P(DGRPX,"^",2),1,45) Q
"RTN","EASECSC1",68,0)
S N DGRPSB S DGRPSB=+$P(DGRPX,U,DGRPSV+1)  ;Service Branch
"RTN","EASECSC1",69,0)
 W !?4,$S($D(^DIC(23,DGRPSB,0)):$E($P(^(0),"^",1),1,15),1:DGRPU) W:$$FV^DGRPMS(DGRPSB)=1 ?20,"("_$P(DGRP(.321),U,14)_")"
"RTN","EASECSC1",70,0)
 W ?27,$S($P(DGRPX,"^",DGRPSV+4)]"":$P(DGRPX,"^",DGRPSV+4),1:DGRPU)
"RTN","EASECSC1",71,0)
 F I=2,3 S X=$P(DGRPX,"^",DGRPSV+I),X=$S(X]"":$$FMTE^XLFDT(X,"5DZ"),1:"UNKNOWN") W ?$S(I=2:46,1:58),X
"RTN","EASECSC1",72,0)
 W ?70,$S($D(^DIC(25,+$P(DGRPX,"^",DGRPSV),0)):$E($P(^(0),"^",1),1,9),1:"UNKNOWN") Q
"RTN","EASECSC1",73,0)
MR W !?19,"Receiving Military retirement in lieu of VA Compensation." Q
"RTN","EASECSC1",74,0)
WW ;Write number on screens for display and/or edit (Z=number)
"RTN","EASECSC1",75,0)
 ; NOTE: This section was copied from WW^DGRPV and modified specifically
"RTN","EASECSC1",76,0)
 ;       for LTC.  The code calling ^DGRPV has been redirected here.
"RTN","EASECSC1",77,0)
 W:DGRPW !
"RTN","EASECSC1",78,0)
 Q
"RTN","EASEZF1")
0^1^B48932487
"RTN","EASEZF1",1,0)
EASEZF1 ;ALB/jap - Filing 1010EZ Data to Patient Database ; 8/11/05 1:50pm
"RTN","EASEZF1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**1,51,57,62**;Mar 15, 2001
"RTN","EASEZF1",3,0)
 ;
"RTN","EASEZF1",4,0)
F2(EASAPP,EASDFN) ;file to Patient record in #2
"RTN","EASEZF1",5,0)
 ;input EASDFN = ien to #2
"RTN","EASEZF1",6,0)
 N KEYIEN,FILE,SUBFILE,FLD,DATAKEY,MULTIPLE,SECT,QUES,SUBIEN,ACCEPT,EZDATA,PTDATA,LINK,EROOT,EAS,ERR,IENS,ARRAY,ELIGVER
"RTN","EASEZF1",7,0)
 N DIC,DIQ,DA,DR,X,Y
"RTN","EASEZF1",8,0)
 Q:'$G(EASDFN)
"RTN","EASEZF1",9,0)
 L +^DPT(EASDFN)
"RTN","EASEZF1",10,0)
 I '$G(EASVRSN) S EASVRSN=$$VERSION^EASEZU4(EASAPP)
"RTN","EASEZF1",11,0)
 S KEYIEN=0
"RTN","EASEZF1",12,0)
 F  S KEYIEN=$O(^TMP("EZDATA",$J,KEYIEN)) Q:'KEYIEN  D
"RTN","EASEZF1",13,0)
 .S LN=^TMP("EZDATA",$J,KEYIEN),FILE=$P(LN,U,1)
"RTN","EASEZF1",14,0)
 .Q:FILE'=2
"RTN","EASEZF1",15,0)
 .S SUBFILE=$P(LN,U,2),FLD=$P(LN,U,3),DATAKEY=$P(LN,U,4)
"RTN","EASEZF1",16,0)
 .S SECT=$P(DATAKEY,";",1),QUES=$P(DATAKEY,";",2)
"RTN","EASEZF1",17,0)
 .;call to suppress may be redundant
"RTN","EASEZF1",18,0)
 .Q:$$SUPPRESS^EASEZU4(EASAPP,DATAKEY,1,EASVRSN)
"RTN","EASEZF1",19,0)
 .;in file #2, multiple is always 1
"RTN","EASEZF1",20,0)
 .S MULTIPLE=1
"RTN","EASEZF1",21,0)
 .Q:'$D(^TMP("EZDATA",$J,KEYIEN,MULTIPLE,1))
"RTN","EASEZF1",22,0)
 .S X=$G(^TMP("EZTEMP",$J,SECT,MULTIPLE,QUES))
"RTN","EASEZF1",23,0)
 .Q:$P(X,U,1)'=KEYIEN
"RTN","EASEZF1",24,0)
 .S EZDATA=$P(X,U,2),ACCEPT=$P(X,U,3),SUBIEN=$P(X,U,4),PTDATA=$P(X,U,5)
"RTN","EASEZF1",25,0)
 .Q:EZDATA=""
"RTN","EASEZF1",26,0)
 .Q:'SUBIEN
"RTN","EASEZF1",27,0)
 .;special handling for Designee
"RTN","EASEZF1",28,0)
 .I FLD=.3405 S EZDATA=$S(EZDATA="NEXT OF KIN":"YES",1:"NO")
"RTN","EASEZF1",29,0)
 .;strip off code display from county
"RTN","EASEZF1",30,0)
 .I SECT="I",QUES="9E." S EZDATA=$P(EZDATA," (",1)
"RTN","EASEZF1",31,0)
 .;get file #2 ien; always same as EASDFN
"RTN","EASEZF1",32,0)
 .S LINK=EASDFN
"RTN","EASEZF1",33,0)
 .;don't continue if data item not accepted
"RTN","EASEZF1",34,0)
 .Q:ACCEPT<1
"RTN","EASEZF1",35,0)
 .;process subfile data elsewhere
"RTN","EASEZF1",36,0)
 .I SUBFILE=2.01 Q
"RTN","EASEZF1",37,0)
 .I SUBFILE=2.101 Q
"RTN","EASEZF1",38,0)
 .I SUBFILE=2.02 D F202^EASEZF1(SUBFILE,DATAKEY,EZDATA,SUBIEN,KEYIEN) Q
"RTN","EASEZF1",39,0)
 .I SUBFILE=2.06 D F206^EASEZF1(SUBFILE,DATAKEY,EZDATA,SUBIEN) Q
"RTN","EASEZF1",40,0)
 .;special conversion to file data to field #.328
"RTN","EASEZF1",41,0)
 .I FLD=.328 D
"RTN","EASEZF1",42,0)
 ..S X=$$UC^EASEZT1(EZDATA) I X="SSN" D
"RTN","EASEZF1",43,0)
 ...;allow SSN as Service Number only if field #.328 in patient record is null;
"RTN","EASEZF1",44,0)
 ...S PTSSN=$$GETANY^EASEZU1(EASAPP,EASDFN,SUBIEN)
"RTN","EASEZF1",45,0)
 ...I PTSSN="" S EZDATA="SS" Q
"RTN","EASEZF1",46,0)
 ...;otherwise Applicant SSN must match Patient SSN
"RTN","EASEZF1",47,0)
 ...S KK=$$KEY711^EASEZU1("APPLICANT SOCIAL SECURITY NUMBER")
"RTN","EASEZF1",48,0)
 ...S EZSSN=$P($G(^TMP("EZDATA",$J,KK,1,1)),U,1),EZSSN=$TR(EZSSN,"-","")
"RTN","EASEZF1",49,0)
 ...I EZSSN=PTSSN S EZDATA="SS" Q
"RTN","EASEZF1",50,0)
 ...S EZDATA="ssn"
"RTN","EASEZF1",51,0)
 ..K KK,PTSSN,EZSSN
"RTN","EASEZF1",52,0)
 .;special for fields #.092 & #.093
"RTN","EASEZF1",53,0)
 .I FILE=2,((FLD=.092)!(FLD=.093)) D FPOB(DATAKEY,EZDATA,SUBIEN,PTDATA) Q
"RTN","EASEZF1",54,0)
 .;don't need these lines after 672
"RTN","EASEZF1",55,0)
 .;special for field #.362
"RTN","EASEZF1",56,0)
 .;I FILE=2,FLD=.362,EASVRSN>5.99 I (EZDATA="Y")!(EZDATA="YES") S EZDATA="YES, RECEIVING MILITARY RETIREMENT IN LIEU OF VA COMPENSATION"
"RTN","EASEZF1",57,0)
 .Q:EZDATA=PTDATA
"RTN","EASEZF1",58,0)
 .;repeat check for verified eligibility;
"RTN","EASEZF1",59,0)
 .;do not file certain fields if eligibility verified
"RTN","EASEZF1",60,0)
 .K ARRAY
"RTN","EASEZF1",61,0)
 .S DA=EASDFN,DIC="^DPT(",DR=".3611;.3613",DIQ(0)="I",DIQ="ARRAY"
"RTN","EASEZF1",62,0)
 .D EN^DIQ1 K DA,DIC,DIQ,DR
"RTN","EASEZF1",63,0)
 .I $G(ARRAY(2,EASDFN,.3611,"I"))="V",$G(ARRAY(2,EASDFN,.3613,"I"))="H" S ELIGVER=1
"RTN","EASEZF1",64,0)
 .I FLD=.313,$G(ARRAY(2,EASDFN,.3611,"I"))="V" Q
"RTN","EASEZF1",65,0)
 .I $G(ELIGVER),((FLD=.301)!(FLD=.302)!(FLD=.36235)) Q
"RTN","EASEZF1",66,0)
 .;special for field #.32102 - Agent Orange Exposure . DATAKEY = I;14F
"RTN","EASEZF1",67,0)
 .I FLD=.32102 D F32102^EASEZF1A(EASAPP,EASDFN,EZDATA)
"RTN","EASEZF1",68,0)
 .;setup to call FM database server using EASDFN as file #2 record
"RTN","EASEZF1",69,0)
 .K EAS,ERR
"RTN","EASEZF1",70,0)
 .S IENS=EASDFN_","
"RTN","EASEZF1",71,0)
 .S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",72,0)
 .D VAL^DIE(2,IENS,FLD,"F",EZDATA,,EROOT,"ERR")
"RTN","EASEZF1",73,0)
 .;try to resolve possible invalid input for free text fields due to length
"RTN","EASEZF1",74,0)
 .I $D(ERR) D RESOLVE
"RTN","EASEZF1",75,0)
 .I $D(ERR) D ERROR^EASEZF2("AP",MULTIPLE,.ERR,"LINK")
"RTN","EASEZF1",76,0)
 .;file to database if input is valid
"RTN","EASEZF1",77,0)
 .I '$D(ERR) D
"RTN","EASEZF1",78,0)
 ..;2/1/2001 - don't attempt to file Name, SSN, DOB; too many complications;
"RTN","EASEZF1",79,0)
 ..;  example: if system assigns pseudo-SSN to new patient, user could overwrite;
"RTN","EASEZF1",80,0)
 ..;  example: if applicant matched to existing patient, all critical identifying
"RTN","EASEZF1",81,0)
 ..;           data could be overwritten; could impact HEC as well
"RTN","EASEZF1",82,0)
 ..D FILE^DIE("S",EROOT,"ERR")
"RTN","EASEZF1",83,0)
 ..;set any replaced data into subfile #712.01 for audit
"RTN","EASEZF1",84,0)
 ..S ^EAS(712,EASAPP,10,SUBIEN,2)=PTDATA_U_LINK
"RTN","EASEZF1",85,0)
 ;
"RTN","EASEZF1",86,0)
 L -^DPT(EASDFN)
"RTN","EASEZF1",87,0)
 Q
"RTN","EASEZF1",88,0)
 ;
"RTN","EASEZF1",89,0)
RESOLVE ;try to resolve invalid input for free text fields only
"RTN","EASEZF1",90,0)
 ;see if mapped to free text field
"RTN","EASEZF1",91,0)
 N FDEF,FTYPE,MAX
"RTN","EASEZF1",92,0)
 I (SUBFILE=FILE)!(SUBFILE="") S FDEF=FILE
"RTN","EASEZF1",93,0)
 E  S FDEF=SUBFILE
"RTN","EASEZF1",94,0)
 S FTYPE=$$GET1^DID(FDEF,FLD,"","TYPE")
"RTN","EASEZF1",95,0)
 Q:FTYPE'="FREE TEXT"
"RTN","EASEZF1",96,0)
 S MAX=$$GET1^DID(FDEF,FLD,"","FIELD LENGTH")
"RTN","EASEZF1",97,0)
 S EZDATA=$E(EZDATA,1,MAX)
"RTN","EASEZF1",98,0)
 K ERR
"RTN","EASEZF1",99,0)
 D VAL^DIE(2,IENS,FLD,"F",EZDATA,,EROOT,"ERR")
"RTN","EASEZF1",100,0)
 ;if still sets ERR array then won't be filed to database
"RTN","EASEZF1",101,0)
 Q
"RTN","EASEZF1",102,0)
 ;
"RTN","EASEZF1",103,0)
F202(SUBFILE,DATAKEY,EZDATA,SUBIEN,KEYIEN) ;add or edit subrecord in subfile #2.02
"RTN","EASEZF1",104,0)
 ;input SUBFILE = 2.02
"RTN","EASEZF1",105,0)
 ;      DATAKEY = data item identifier, e.g., I;4B.
"RTN","EASEZF1",106,0)
 ;      EZDATA  = in these cases, either "N(o)" or "Y(es)"
"RTN","EASEZF1",107,0)
 ;      SUBIEN  = subrecord # for data in #712/#10
"RTN","EASEZF1",108,0)
 ;      KEYIEN  = record # for data element in #711
"RTN","EASEZF1",109,0)
 N X,N,DATANM,EROOT,EAS,EIEN,ERR,FLD,IENS,EASARRAY,LINK,OUT,K1,K3
"RTN","EASEZF1",110,0)
 Q:EZDATA'["Y"
"RTN","EASEZF1",111,0)
 Q:SUBFILE'=2.02
"RTN","EASEZF1",112,0)
 ;covert data to corresponding file #10 pointer
"RTN","EASEZF1",113,0)
 S X=$$KEY711^EASEZU1(DATAKEY)
"RTN","EASEZF1",114,0)
 S K1=$P(X,U,1),DATANM=$P(X,U,2),K3=$P(X,U,3)
"RTN","EASEZF1",115,0)
 Q:(DATANM="")
"RTN","EASEZF1",116,0)
 Q:(K1'=KEYIEN)
"RTN","EASEZF1",117,0)
 Q:(K3'=DATAKEY)
"RTN","EASEZF1",118,0)
 S DATANM=$P(DATANM," - ",2),DATANM=$E(DATANM,1,30)
"RTN","EASEZF1",119,0)
 I DATANM["UNANSWERED" S DATANM="UNKNOWN BY PATIENT"
"RTN","EASEZF1",120,0)
 S EZDATA=$O(^DIC(10,"B",DATANM,0))
"RTN","EASEZF1",121,0)
 Q:EZDATA=""
"RTN","EASEZF1",122,0)
 D I202^EASEZI(EASDFN,.EASARRAY)
"RTN","EASEZF1",123,0)
 ;if matching race already exists, edit method only
"RTN","EASEZF1",124,0)
 S OUT=0,N=0 F  S N=$O(EASARRAY(N)) Q:'N  D
"RTN","EASEZF1",125,0)
 .Q:($P(EASARRAY(N),";",2)'=EZDATA)
"RTN","EASEZF1",126,0)
 .K EAS,ERR
"RTN","EASEZF1",127,0)
 .S IENS=EZDATA_","_EASDFN_","
"RTN","EASEZF1",128,0)
 .S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",129,0)
 .S FLD=.02,EAS(EASAPP,SUBFILE,IENS,FLD)=1
"RTN","EASEZF1",130,0)
 .D FILE^DIE("S",EROOT,"ERR")
"RTN","EASEZF1",131,0)
 .S OUT=1
"RTN","EASEZF1",132,0)
 ;no matching race in patient record, add new subrecord
"RTN","EASEZF1",133,0)
 I 'OUT D
"RTN","EASEZF1",134,0)
 .K ERR
"RTN","EASEZF1",135,0)
 .S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",136,0)
 .S IENS="+1,"_EASDFN_",",EIEN(1)=EZDATA
"RTN","EASEZF1",137,0)
 .S FLD=.01,EAS(EASAPP,SUBFILE,IENS,FLD)=EZDATA
"RTN","EASEZF1",138,0)
 .S FLD=.02,EAS(EASAPP,SUBFILE,IENS,FLD)=1
"RTN","EASEZF1",139,0)
 .D UPDATE^DIE("S",EROOT,"EIEN","ERR")
"RTN","EASEZF1",140,0)
 .I $D(ERR) D ERROR^EASEZF2("AP",1,.ERR,"LINK") Q
"RTN","EASEZF1",141,0)
 .S LINK=EASDFN_";"_EZDATA
"RTN","EASEZF1",142,0)
 .S ^EAS(712,EASAPP,10,SUBIEN,2)=U_LINK
"RTN","EASEZF1",143,0)
 Q
"RTN","EASEZF1",144,0)
 ;
"RTN","EASEZF1",145,0)
F206(SUBFILE,DATAKEY,EZDATA,SUBIEN) ;add subrecord in subfile #2.06 
"RTN","EASEZF1",146,0)
 ;input SUBFILE = 2.06
"RTN","EASEZF1",147,0)
 ;      DATAKEY = data item identifier, e.g., I;4A.
"RTN","EASEZF1",148,0)
 ;      EZDATA  = in these cases, either "N(o)" or "Y(es)"
"RTN","EASEZF1",149,0)
 N X,EROOT,EAS,EIEN,ERR,FLD,EASARRAY,IENS,LINK,PTDATA
"RTN","EASEZF1",150,0)
 Q:SUBFILE'=2.06
"RTN","EASEZF1",151,0)
 D I206^EASEZI(EASDFN,.EASARRAY)
"RTN","EASEZF1",152,0)
 S LINK=$P($G(EASARRAY(1)),";",2),PTDATA="" I LINK S PTDATA=$P(^DPT(EASDFN,.06,LINK,0),U,1)
"RTN","EASEZF1",153,0)
 I DATAKEY="I;4A." S EZDATA=$S(EZDATA["Y":"H",$E(EZDATA,1)="N":"N",1:"U") D
"RTN","EASEZF1",154,0)
 .S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",155,0)
 .S IENS="+1,"_EASDFN_","
"RTN","EASEZF1",156,0)
 .S FLD=.01,EAS(EASAPP,SUBFILE,IENS,FLD)=EZDATA
"RTN","EASEZF1",157,0)
 .S FLD=.02,EAS(EASAPP,SUBFILE,IENS,FLD)="SELF IDENTIFICATION"
"RTN","EASEZF1",158,0)
 .D UPDATE^DIE("ES",EROOT,"EIEN","ERR")
"RTN","EASEZF1",159,0)
 .S LINK=EASDFN_";"_$G(EIEN(1))
"RTN","EASEZF1",160,0)
 .S ^EAS(712,EASAPP,10,SUBIEN,2)=PTDATA_U_LINK
"RTN","EASEZF1",161,0)
 Q
"RTN","EASEZF1",162,0)
 ;
"RTN","EASEZF1",163,0)
FPOB(DATAKEY,EZDATA,SUBIEN,PTDATA) ;add or edit pob city & state
"RTN","EASEZF1",164,0)
 ;input DATAKEY = data item identifier, either, I;8A. or I;8B.
"RTN","EASEZF1",165,0)
 ;      EZDATA  = free text if city or 
"RTN","EASEZF1",166,0)
 ;                state abbrv if state
"RTN","EASEZF1",167,0)
 ;filing for both city & state only done when datakey=I;8A.
"RTN","EASEZF1",168,0)
 N X,EROOT,EAS,EIEN,ERR,FLD,EASARRAY,IENS,LINK,SECT,QUES,XIEN,XDATA
"RTN","EASEZF1",169,0)
 Q:(DATAKEY'="I;8A.")
"RTN","EASEZF1",170,0)
 Q:(EZDATA="")
"RTN","EASEZF1",171,0)
 Q:(EZDATA=PTDATA)
"RTN","EASEZF1",172,0)
 ;file pob city
"RTN","EASEZF1",173,0)
 K EAS,ERR
"RTN","EASEZF1",174,0)
 S FLD=.092,LINK=EASDFN
"RTN","EASEZF1",175,0)
 S IENS=EASDFN_","
"RTN","EASEZF1",176,0)
 S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",177,0)
 D VAL^DIE(2,IENS,FLD,"F",EZDATA,,EROOT,"ERR")
"RTN","EASEZF1",178,0)
 I $D(ERR) D RESOLVE
"RTN","EASEZF1",179,0)
 I $D(ERR) D ERROR^EASEZF2("AP",1,.ERR,"LINK") Q
"RTN","EASEZF1",180,0)
 D FILE^DIE("ES",EROOT,"ERR")
"RTN","EASEZF1",181,0)
 ;set any replaced data into subfile #712.01 for audit
"RTN","EASEZF1",182,0)
 S ^EAS(712,EASAPP,10,SUBIEN,2)=PTDATA_U_LINK
"RTN","EASEZF1",183,0)
 ;file pob state
"RTN","EASEZF1",184,0)
 S (EZDATA,XDATA)=""
"RTN","EASEZF1",185,0)
 S DATAKEY="I;8B.",SECT=$P(DATAKEY,";",1),QUES=$P(DATAKEY,";",2)
"RTN","EASEZF1",186,0)
 S X=$G(^TMP("EZTEMP",$J,SECT,1,QUES)),EZDATA=$P(X,U,2),XIEN=$P(X,U,4),XDATA=$P(X,U,5)
"RTN","EASEZF1",187,0)
 Q:(EZDATA="")
"RTN","EASEZF1",188,0)
 Q:(EZDATA=XDATA)
"RTN","EASEZF1",189,0)
 I (EZDATA["FOREIGN")!(EZDATA="FC")!(EZDATA="FG") S EZDATA="FOREIGN"
"RTN","EASEZF1",190,0)
 K EAS,ERR
"RTN","EASEZF1",191,0)
 S FLD=.093
"RTN","EASEZF1",192,0)
 S IENS=EASDFN_","
"RTN","EASEZF1",193,0)
 S EROOT="EAS("_EASAPP_")"
"RTN","EASEZF1",194,0)
 D VAL^DIE(2,IENS,FLD,"F",EZDATA,,EROOT,"ERR")
"RTN","EASEZF1",195,0)
 I $D(ERR) D ERROR^EASEZF2("AP",1,.ERR,"LINK") Q
"RTN","EASEZF1",196,0)
 D FILE^DIE("ES",EROOT,"ERR")
"RTN","EASEZF1",197,0)
 S ^EAS(712,EASAPP,10,XIEN,2)=XDATA_U_LINK
"RTN","EASEZF1",198,0)
 Q
"VER")
8.0^22.0
**INSTALL NAME**
SD*5.3*451
"BLD",6350,0)
SD*5.3*451^SCHEDULING^0^3051206^y
"BLD",6350,1,0)
^^1^1^3050809^
"BLD",6350,1,1,0)
PMS VISTA CHANGES TO SUPPORT EDB (EVC1 Early release)
"BLD",6350,4,0)
^9.64PA^^
"BLD",6350,6)
1^
"BLD",6350,"ABPKG")
n
"BLD",6350,"KRN",0)
^9.67PA^8989.52^19
"BLD",6350,"KRN",.4,0)
.4
"BLD",6350,"KRN",.401,0)
.401
"BLD",6350,"KRN",.402,0)
.402
"BLD",6350,"KRN",.403,0)
.403
"BLD",6350,"KRN",.5,0)
.5
"BLD",6350,"KRN",.84,0)
.84
"BLD",6350,"KRN",3.6,0)
3.6
"BLD",6350,"KRN",3.8,0)
3.8
"BLD",6350,"KRN",9.2,0)
9.2
"BLD",6350,"KRN",9.8,0)
9.8
"BLD",6350,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6350,"KRN",9.8,"NM",1,0)
SCDXUTL0^^0^B34864784
"BLD",6350,"KRN",9.8,"NM","B","SCDXUTL0",1)

"BLD",6350,"KRN",19,0)
19
"BLD",6350,"KRN",19.1,0)
19.1
"BLD",6350,"KRN",101,0)
101
"BLD",6350,"KRN",409.61,0)
409.61
"BLD",6350,"KRN",771,0)
771
"BLD",6350,"KRN",870,0)
870
"BLD",6350,"KRN",8989.51,0)
8989.51
"BLD",6350,"KRN",8989.52,0)
8989.52
"BLD",6350,"KRN",8994,0)
8994
"BLD",6350,"KRN","B",.4,.4)

"BLD",6350,"KRN","B",.401,.401)

"BLD",6350,"KRN","B",.402,.402)

"BLD",6350,"KRN","B",.403,.403)

"BLD",6350,"KRN","B",.5,.5)

"BLD",6350,"KRN","B",.84,.84)

"BLD",6350,"KRN","B",3.6,3.6)

"BLD",6350,"KRN","B",3.8,3.8)

"BLD",6350,"KRN","B",9.2,9.2)

"BLD",6350,"KRN","B",9.8,9.8)

"BLD",6350,"KRN","B",19,19)

"BLD",6350,"KRN","B",19.1,19.1)

"BLD",6350,"KRN","B",101,101)

"BLD",6350,"KRN","B",409.61,409.61)

"BLD",6350,"KRN","B",771,771)

"BLD",6350,"KRN","B",870,870)

"BLD",6350,"KRN","B",8989.51,8989.51)

"BLD",6350,"KRN","B",8989.52,8989.52)

"BLD",6350,"KRN","B",8994,8994)

"BLD",6350,"QUES",0)
^9.62^^
"BLD",6350,"REQB",0)
^9.611^1^1
"BLD",6350,"REQB",1,0)
SD*5.3*325^2
"BLD",6350,"REQB","B","SD*5.3*325",1)

"MBREQ")
0
"PKG",48,-1)
1^1
"PKG",48,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",48,22,0)
^9.49I^1^1
"PKG",48,22,1,0)
5.3^2930813^2960613
"PKG",48,22,1,"PAH",1,0)
451^3051206^123456971
"PKG",48,22,1,"PAH",1,1,0)
^^1^1^3051206
"PKG",48,22,1,"PAH",1,1,1,0)
PMS VISTA CHANGES TO SUPPORT EDB (EVC1 Early release)
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","SCDXUTL0")
0^1^B34864784
"RTN","SCDXUTL0",1,0)
SCDXUTL0 ;ALB/ESD - Generic functions for Amb Care HL7 Interface ; 5/31/05 11:23am
"RTN","SCDXUTL0",2,0)
 ;;5.3;Scheduling;**44,55,69,77,85,110,122,94,66,132,180,235,256,258,325,451**;Aug 13, 1993
"RTN","SCDXUTL0",3,0)
 ;
"RTN","SCDXUTL0",4,0)
 ; This routine contains functions used with the Ambulatory Care
"RTN","SCDXUTL0",5,0)
 ; Reporting Project (ACRP).
"RTN","SCDXUTL0",6,0)
 ;
"RTN","SCDXUTL0",7,0)
MTI(DFN,DATE,EC,AT,SDOE) ;Calculate Means Test Indicator
"RTN","SCDXUTL0",8,0)
 ;
"RTN","SCDXUTL0",9,0)
 ;    Input:     DFN   =  Patient IEN
"RTN","SCDXUTL0",10,0)
 ;               Date  =  Encounter Date/Time
"RTN","SCDXUTL0",11,0)
 ;               EC    =  Eligibility (Code) of Encounter
"RTN","SCDXUTL0",12,0)
 ;               AT    =  Appointment Type of Encounter
"RTN","SCDXUTL0",13,0)
 ;               SDOE  =  Outpatient Encounter IEN
"RTN","SCDXUTL0",14,0)
 ;
"RTN","SCDXUTL0",15,0)
 ;   Output:     MTI   =  Means Test Indicator
"RTN","SCDXUTL0",16,0)
 ;
"RTN","SCDXUTL0",17,0)
 N MT,MTI,SDVD1,SDINPT,SDANS,SDANS1,SDINPT,SDMT,VET,X
"RTN","SCDXUTL0",18,0)
 S MTI=""
"RTN","SCDXUTL0",19,0)
 S DFN=$G(DFN),DATE=$G(DATE),EC=$G(EC),AT=$G(AT),SDOE=$G(SDOE)
"RTN","SCDXUTL0",20,0)
 I (DFN="")!(DATE="")!(EC="")!(EC=0)!(AT="")!(SDOE="") G MTQ
"RTN","SCDXUTL0",21,0)
 ;
"RTN","SCDXUTL0",22,0)
 ;- VA Code (get from MAS Eligibility Code IEN)
"RTN","SCDXUTL0",23,0)
 S X=$G(^DIC(8.1,$P($G(^DIC(8,+EC,0)),"^",9),0))
"RTN","SCDXUTL0",24,0)
 S EC=$P(X,"^",4),VET=$P(X,"^",5)
"RTN","SCDXUTL0",25,0)
 ;- Non-Veteran
"RTN","SCDXUTL0",26,0)
 I $P($G(^DPT(DFN,"VET")),"^")="N"!(VET="N") S MTI="N" G MTQ
"RTN","SCDXUTL0",27,0)
 ;- Dom patient
"RTN","SCDXUTL0",28,0)
 I EC=6 S MTI="X" G MTQ
"RTN","SCDXUTL0",29,0)
 ;- Inpatient status
"RTN","SCDXUTL0",30,0)
 S SDVD1=DATE D INPT^SDOPC1 I SDMT="X0" S MTI="X" G MTQ
"RTN","SCDXUTL0",31,0)
 ;- Service Connected > 50 %
"RTN","SCDXUTL0",32,0)
 I EC=1 S MTI="AS" G MTQ
"RTN","SCDXUTL0",33,0)
 ;-- Service Connected < 50 %
"RTN","SCDXUTL0",34,0)
 I EC=3,$$SC^DGMTR(DFN) D  I MTI'="" G MTQ
"RTN","SCDXUTL0",35,0)
 .; 'AS' if seen for SC condition
"RTN","SCDXUTL0",36,0)
 .I $P($G(^SDD(409.42,+$O(^SDD(409.42,"AO",+SDOE,3,0)),0)),U,3) S MTI="AS"
"RTN","SCDXUTL0",37,0)
 ;-Military Disability Retiree
"RTN","SCDXUTL0",38,0)
 ;S X=$P($G(^DPT(DFN,.36)),"^",2) I X,(X<3) S MTI="AS" G MTQ
"RTN","SCDXUTL0",39,0)
 ;-Military Disability Retirement OR Discharge Due To Disability
"RTN","SCDXUTL0",40,0)
 I $P($G(^DPT(DFN,.36)),"^",12)!($P($G(^DPT(DFN,.36)),"^",13)) S MTI="AS" G MTQ
"RTN","SCDXUTL0",41,0)
 ;
"RTN","SCDXUTL0",42,0)
 I EC=2 D  I MTI'="" G MTQ
"RTN","SCDXUTL0",43,0)
 .;- Mexican Border Period or World War I
"RTN","SCDXUTL0",44,0)
 .I $P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)=1!($P($G(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)),"^",3)=3) S MTI="AS" Q
"RTN","SCDXUTL0",45,0)
 .;- Prisoner of War (POW)
"RTN","SCDXUTL0",46,0)
 .I $P($G(^DPT(DFN,.52)),"^",5)="Y" S MTI="AS" Q
"RTN","SCDXUTL0",47,0)
 .;- Purple Heart Recipient
"RTN","SCDXUTL0",48,0)
 .I $P($G(^DPT(DFN,.53)),"^")="Y" S MTI="AS" Q
"RTN","SCDXUTL0",49,0)
 .;- Aid and Attendance
"RTN","SCDXUTL0",50,0)
 .I $P($G(^DPT(DFN,.362)),"^",12)="Y" S MTI="AN" Q
"RTN","SCDXUTL0",51,0)
 .;- Housebound
"RTN","SCDXUTL0",52,0)
 .I $P($G(^DPT(DFN,.362)),"^",13)="Y" S MTI="AN" Q
"RTN","SCDXUTL0",53,0)
 ;- Receiving VA Pension
"RTN","SCDXUTL0",54,0)
 I EC=4,$P($G(^DPT(DFN,.362)),"^",14)="Y" S MTI="AN" G MTQ
"RTN","SCDXUTL0",55,0)
 ;
"RTN","SCDXUTL0",56,0)
 I EC=5!(EC=3) D  I MTI'="" G MTQ
"RTN","SCDXUTL0",57,0)
 .;- Eligible for Medicaid
"RTN","SCDXUTL0",58,0)
 .I $P($G(^DPT(DFN,.38)),"^")=1 S MTI="AN" Q
"RTN","SCDXUTL0",59,0)
 .;- Appt types with ignore billing set to 1 (except comp gen)
"RTN","SCDXUTL0",60,0)
 .I AT'=10,$P($G(^SD(409.1,+AT,0)),"^",2) S MTI="X" Q
"RTN","SCDXUTL0",61,0)
 .;- Treatment for AO, IR, EC, MST, HNC
"RTN","SCDXUTL0",62,0)
 .F SDANS1=1,2,4,5,6 S SDANS=$S('$D(^SDD(409.42,"AO",+SDOE,SDANS1)):"",$P($G(^SDD(409.42,$O(^(SDANS1,0)),0)),"^",3):1,1:0) I SDANS=1 S MTI="AS" Q
"RTN","SCDXUTL0",63,0)
 .I MTI]"" Q
"RTN","SCDXUTL0",64,0)
 .;- Means Test Code A, C, or G  (also Pending Adj = Code C or Code G)
"RTN","SCDXUTL0",65,0)
 .S MT=$$LST^DGMTU(DFN,DATE)
"RTN","SCDXUTL0",66,0)
 .I $P(MT,"^",4)="A" S MTI="AN" Q
"RTN","SCDXUTL0",67,0)
 .I $P(MT,"^",4)="C" S MTI="C" Q
"RTN","SCDXUTL0",68,0)
 .I $P(MT,"^",4)="G" S MTI="G" Q
"RTN","SCDXUTL0",69,0)
 .I $P(MT,"^",4)="P" D  Q
"RTN","SCDXUTL0",70,0)
 . .S MTI=$$PA^DGMTUTL($P(MT,"^")),MTI=$S('$D(MTI):"U",MTI="MT":"C",MTI="GMT":"G",1:"U")
"RTN","SCDXUTL0",71,0)
 .;- no means test status or no longer required...check current eligibility data
"RTN","SCDXUTL0",72,0)
 .S X=+$G(^DPT(DFN,.36)),X=+$P($G(^DIC(8,X,0)),U,9) ; get MAS eligibility
"RTN","SCDXUTL0",73,0)
 .;- Service connected > 50 %
"RTN","SCDXUTL0",74,0)
 .I X=1 S MTI="AS" Q
"RTN","SCDXUTL0",75,0)
 .;- Service connected < 50 %
"RTN","SCDXUTL0",76,0)
 .I EC=3,'$$SC^DGMTR(DFN) S MTI="AS" Q
"RTN","SCDXUTL0",77,0)
 .;- mex border or WWI or POW
"RTN","SCDXUTL0",78,0)
 .I X=16!(X=17)!(X=18)!(X=22) S MTI="AS" Q
"RTN","SCDXUTL0",79,0)
 .;- A&A or Pension or HB
"RTN","SCDXUTL0",80,0)
 .I X=2!(X=4)!(X=15) S MTI="AN" Q
"RTN","SCDXUTL0",81,0)
 ;- Means Test required and not done/completed
"RTN","SCDXUTL0",82,0)
 S MTI="U"
"RTN","SCDXUTL0",83,0)
MTQ Q MTI
"RTN","SCDXUTL0",84,0)
 ;
"RTN","SCDXUTL0",85,0)
 ;
"RTN","SCDXUTL0",86,0)
PATCLASS(DFN,SDOE) ; - Return classification questions from PATIENT (#2) file
"RTN","SCDXUTL0",87,0)
 ;           (Agent Orange, Radiation Exposure, Service Connected,
"RTN","SCDXUTL0",88,0)
 ;            Environmental Contaminants, Military Sexual Trauma and
"RTN","SCDXUTL0",89,0)
 ;            Head/Neck Cancer questions)
"RTN","SCDXUTL0",90,0)
 ;
"RTN","SCDXUTL0",91,0)
 ;   Input:  DFN  = Patient IEN (from file #2)
"RTN","SCDXUTL0",92,0)
 ;           SDOE = Outpatient Encounter File IEN [Optional]
"RTN","SCDXUTL0",93,0)
 ;
"RTN","SCDXUTL0",94,0)
 ;  Output:  String containing Y if classification question = YES, N if 
"RTN","SCDXUTL0",95,0)
 ;           = NO, null otherwise (classifications separated by "^")
"RTN","SCDXUTL0",96,0)
 ;
"RTN","SCDXUTL0",97,0)
 N NODE,PATCLASS,SDTEMP,X
"RTN","SCDXUTL0",98,0)
 S SDTEMP(1)=$$AO^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",99,0)
 S SDTEMP(2)=$$IR^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",100,0)
 S SDTEMP(3)=$$SC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",101,0)
 S SDTEMP(4)=$$EC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",102,0)
 S SDTEMP(5)=$$MST^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",103,0)
 S SDTEMP(6)=$$HNC^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",104,0)
 S SDTEMP(7)=$$CV^SDCO22(DFN,$G(SDOE))
"RTN","SCDXUTL0",105,0)
 F X=1:1:7 S $P(PATCLASS,U,X)=$S(SDTEMP(X)=1:"Y",1:"N")
"RTN","SCDXUTL0",106,0)
 Q PATCLASS
"RTN","SCDXUTL0",107,0)
 ;
"RTN","SCDXUTL0",108,0)
 ;
"RTN","SCDXUTL0",109,0)
CLASS(SDOE,SCDXARRY) ; - Return array of classification types for encounter
"RTN","SCDXUTL0",110,0)
 ;
"RTN","SCDXUTL0",111,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",112,0)
 ;
"RTN","SCDXUTL0",113,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",114,0)
 ;           Classification Type^Value
"RTN","SCDXUTL0",115,0)
 ;
"RTN","SCDXUTL0",116,0)
 N CLASS,I,X
"RTN","SCDXUTL0",117,0)
 S CLASS="",(I,X)=0
"RTN","SCDXUTL0",118,0)
 S SDOE=+$G(SDOE)
"RTN","SCDXUTL0",119,0)
 F  S CLASS=+$O(^SDD(409.42,"OE",SDOE,CLASS)) Q:'CLASS  D
"RTN","SCDXUTL0",120,0)
 . S I=$P($G(^SDD(409.42,CLASS,0)),"^"),X=X+1
"RTN","SCDXUTL0",121,0)
 . S @SCDXARRY@(I)=$P($G(^SDD(409.42,CLASS,0)),"^")_"^"_$P($G(^SDD(409.42,CLASS,0)),"^",3)
"RTN","SCDXUTL0",122,0)
CLASSQ S @SCDXARRY@(0)=X
"RTN","SCDXUTL0",123,0)
 Q
"RTN","SCDXUTL0",124,0)
 ;
"RTN","SCDXUTL0",125,0)
 ;
"RTN","SCDXUTL0",126,0)
CHKCLASS(DFN,SDOE) ; - Get classification data for HL7 VAFHLZCL segment
"RTN","SCDXUTL0",127,0)
 ;
"RTN","SCDXUTL0",128,0)
 ;   Input:  DFN = Patient IEN (from file #2)
"RTN","SCDXUTL0",129,0)
 ;          SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",130,0)
 ;
"RTN","SCDXUTL0",131,0)
 ;  Output:  String separated by "^" containing: 
"RTN","SCDXUTL0",132,0)
 ;           1 (patient class = YES and encounter class = YES)
"RTN","SCDXUTL0",133,0)
 ;           0 (patient class = YES and encounter class = NO)
"RTN","SCDXUTL0",134,0)
 ;           HLQ ("""""") otherwise
"RTN","SCDXUTL0",135,0)
 ;
"RTN","SCDXUTL0",136,0)
EN N OECLASS,OUT,PATCLASS,TYPE,ENCVAL,CLCNT,PATVAL
"RTN","SCDXUTL0",137,0)
 S PATCLASS=$$PATCLASS(DFN,SDOE)
"RTN","SCDXUTL0",138,0)
 D CLASS(SDOE,"OECLASS")
"RTN","SCDXUTL0",139,0)
 S CLCNT=$L(PATCLASS,"^")
"RTN","SCDXUTL0",140,0)
 F TYPE=1:1:CLCNT D
"RTN","SCDXUTL0",141,0)
 .S ENCVAL=$P($G(OECLASS(TYPE)),"^",2)
"RTN","SCDXUTL0",142,0)
 .S PATVAL=$P(PATCLASS,"^",TYPE)
"RTN","SCDXUTL0",143,0)
 .S $P(OUT,"^",TYPE)=""""""
"RTN","SCDXUTL0",144,0)
 .I PATVAL="Y" S $P(OUT,"^",TYPE)=ENCVAL
"RTN","SCDXUTL0",145,0)
ENQ Q OUT
"RTN","SCDXUTL0",146,0)
 ;
"RTN","SCDXUTL0",147,0)
 ;
"RTN","SCDXUTL0",148,0)
POV(DFN,DATE,CLINIC,APTYP) ; - Determine Purpose of Visit for encounter
"RTN","SCDXUTL0",149,0)
 ;
"RTN","SCDXUTL0",150,0)
 ;   Input:  DFN = Patient IEN
"RTN","SCDXUTL0",151,0)
 ;          DATE = Appointment Date/Time
"RTN","SCDXUTL0",152,0)
 ;        CLINIC = Clinic
"RTN","SCDXUTL0",153,0)
 ;         APTYP = Appointment Type
"RTN","SCDXUTL0",154,0)
 ;
"RTN","SCDXUTL0",155,0)
 ;  Output:  Purpose of Visit value (combination of Purpose of Visit
"RTN","SCDXUTL0",156,0)
 ;           and Appointment Type)
"RTN","SCDXUTL0",157,0)
 ;
"RTN","SCDXUTL0",158,0)
 N POV,SCDXPOV
"RTN","SCDXUTL0",159,0)
 I (DFN=""!(DATE="")!(CLINIC="")!(APTYP="")) G POVQ
"RTN","SCDXUTL0",160,0)
 I $P($G(^DPT(DFN,"S",+DATE,0)),"^")'=CLINIC G POVQ
"RTN","SCDXUTL0",161,0)
 S POV=$P($G(^DPT(DFN,"S",+DATE,0)),"^",7),POV=$S($L(POV)=1:"0"_POV,1:POV)
"RTN","SCDXUTL0",162,0)
 S APTYP=$S($L(APTYP)=1:"0"_APTYP,1:APTYP)
"RTN","SCDXUTL0",163,0)
 S SCDXPOV=POV_APTYP
"RTN","SCDXUTL0",164,0)
POVQ Q $G(SCDXPOV)
"RTN","SCDXUTL0",165,0)
 ;
"RTN","SCDXUTL0",166,0)
 ;
"RTN","SCDXUTL0",167,0)
SCODE(SDOE,SCDXARRY) ; Return array of stop codes for encounter
"RTN","SCDXUTL0",168,0)
 ;
"RTN","SCDXUTL0",169,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",170,0)
 ;
"RTN","SCDXUTL0",171,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",172,0)
 ;           stop codes
"RTN","SCDXUTL0",173,0)
 ;
"RTN","SCDXUTL0",174,0)
 ;
"RTN","SCDXUTL0",175,0)
 N CNT,I,SDOE0,SDOEC,SDOEC0
"RTN","SCDXUTL0",176,0)
 S CNT=1,(I,SDOEC)=0
"RTN","SCDXUTL0",177,0)
 S SDOE=+$G(SDOE)
"RTN","SCDXUTL0",178,0)
 I '$D(^SCE(SDOE,0)) G SCODEQ
"RTN","SCDXUTL0",179,0)
 I '$P($G(^SCE(SDOE,0)),"^",3) G SCODEQ
"RTN","SCDXUTL0",180,0)
 S SDOE0=$G(^SCE(SDOE,0))
"RTN","SCDXUTL0",181,0)
 ;
"RTN","SCDXUTL0",182,0)
 ;- Get stop code from parent encounter
"RTN","SCDXUTL0",183,0)
 I $P(SDOE0,"^",3) S @SCDXARRY@(CNT)=$P(SDOE0,"^",3),I=CNT
"RTN","SCDXUTL0",184,0)
 ;
"RTN","SCDXUTL0",185,0)
 ;- Get stop code from child encounter (credit stop)
"RTN","SCDXUTL0",186,0)
 F  S SDOEC=+$O(^SCE("APAR",SDOE,SDOEC)) Q:('SDOEC)!(CNT=2)  D
"RTN","SCDXUTL0",187,0)
 . S SDOEC0=$G(^SCE(SDOEC,0))
"RTN","SCDXUTL0",188,0)
 . I $P(SDOEC0,"^",3),($P(SDOEC0,"^",8)=4) D
"RTN","SCDXUTL0",189,0)
 .. S CNT=CNT+1,I=CNT
"RTN","SCDXUTL0",190,0)
 .. S @SCDXARRY@(CNT)=$P(SDOEC0,"^",3)
"RTN","SCDXUTL0",191,0)
SCODEQ S @SCDXARRY@(0)=I
"RTN","SCDXUTL0",192,0)
 Q
"RTN","SCDXUTL0",193,0)
 ;
"RTN","SCDXUTL0",194,0)
 ;
"RTN","SCDXUTL0",195,0)
PROC(SDOE,SCDXARRY) ; Return array of procedures for encounter
"RTN","SCDXUTL0",196,0)
 ;
"RTN","SCDXUTL0",197,0)
 ;
"RTN","SCDXUTL0",198,0)
 ;   Input:  SDOE = Outpatient Encounter IEN (from file #409.68)
"RTN","SCDXUTL0",199,0)
 ;
"RTN","SCDXUTL0",200,0)
 ;  Output:  Array (pass desired name as parameter) containing
"RTN","SCDXUTL0",201,0)
 ;           procedures
"RTN","SCDXUTL0",202,0)
 ;
"RTN","SCDXUTL0",203,0)
 N CNT
"RTN","SCDXUTL0",204,0)
 S CNT=0,SDOE=+$G(SDOE)
"RTN","SCDXUTL0",205,0)
 I '$D(^SCE(SDOE,0)) G PROCQ
"RTN","SCDXUTL0",206,0)
 ;
"RTN","SCDXUTL0",207,0)
 D GETPROC(.CNT,SDOE,SCDXARRY) G PROCQ
"RTN","SCDXUTL0",208,0)
 ;
"RTN","SCDXUTL0",209,0)
 ;- Array of procedures
"RTN","SCDXUTL0",210,0)
PROCQ S @SCDXARRY@(0)=CNT
"RTN","SCDXUTL0",211,0)
 Q
"RTN","SCDXUTL0",212,0)
 ;
"RTN","SCDXUTL0",213,0)
 ;
"RTN","SCDXUTL0",214,0)
GETPROC(CNT,ENC,SCDXARRY) ;Get procedures from Scheduling Visits file
"RTN","SCDXUTL0",215,0)
 ;
"RTN","SCDXUTL0",216,0)
 N CPTS,VCPT
"RTN","SCDXUTL0",217,0)
 D GETCPT^SDOE(ENC,"CPTS")
"RTN","SCDXUTL0",218,0)
 N CPT,QTY,I
"RTN","SCDXUTL0",219,0)
 S VCPT=0
"RTN","SCDXUTL0",220,0)
 F  S VCPT=$O(CPTS(VCPT)) Q:'VCPT  D
"RTN","SCDXUTL0",221,0)
 . S CPT=$G(CPTS(VCPT))
"RTN","SCDXUTL0",222,0)
 . S QTY=+$P(CPT,U,16)
"RTN","SCDXUTL0",223,0)
 . F I=1:1:QTY S CNT=CNT+1,@SCDXARRY@(CNT)=+CPT
"RTN","SCDXUTL0",224,0)
 Q
"VER")
8.0^22.0
**END**
**END**
