Released DG*5.3*721 SEQ #642
Extracted from mail message
**KIDS**:DG*5.3*721^

**INSTALL NAME**
DG*5.3*721
"BLD",6904,0)
DG*5.3*721^REGISTRATION^0^3060926^y
"BLD",6904,4,0)
^9.64PA^405^1
"BLD",6904,4,405,0)
405
"BLD",6904,4,405,2,0)
^9.641^405^1
"BLD",6904,4,405,2,405,0)
PATIENT MOVEMENT  (File-top level)
"BLD",6904,4,405,2,405,1,0)
^9.6411^.09^1
"BLD",6904,4,405,2,405,1,.09,0)
FACILITY TREATING SPECIALTY
"BLD",6904,4,405,222)
y^y^p^^^^n^^n
"BLD",6904,4,405,224)

"BLD",6904,4,"APDD",405,405)

"BLD",6904,4,"APDD",405,405,.09)

"BLD",6904,4,"B",405,405)

"BLD",6904,6.3)
3
"BLD",6904,"INID")
^n
"BLD",6904,"INIT")
DG53721P
"BLD",6904,"KRN",0)
^9.67PA^8989.52^19
"BLD",6904,"KRN",.4,0)
.4
"BLD",6904,"KRN",.401,0)
.401
"BLD",6904,"KRN",.402,0)
.402
"BLD",6904,"KRN",.403,0)
.403
"BLD",6904,"KRN",.5,0)
.5
"BLD",6904,"KRN",.84,0)
.84
"BLD",6904,"KRN",3.6,0)
3.6
"BLD",6904,"KRN",3.8,0)
3.8
"BLD",6904,"KRN",9.2,0)
9.2
"BLD",6904,"KRN",9.8,0)
9.8
"BLD",6904,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",6904,"KRN",9.8,"NM",1,0)
DGRUADT^^0^B60481831
"BLD",6904,"KRN",9.8,"NM",2,0)
DGRUGA08^^0^B22077652
"BLD",6904,"KRN",9.8,"NM","B","DGRUADT",1)

"BLD",6904,"KRN",9.8,"NM","B","DGRUGA08",2)

"BLD",6904,"KRN",19,0)
19
"BLD",6904,"KRN",19.1,0)
19.1
"BLD",6904,"KRN",101,0)
101
"BLD",6904,"KRN",409.61,0)
409.61
"BLD",6904,"KRN",771,0)
771
"BLD",6904,"KRN",870,0)
870
"BLD",6904,"KRN",8989.51,0)
8989.51
"BLD",6904,"KRN",8989.52,0)
8989.52
"BLD",6904,"KRN",8994,0)
8994
"BLD",6904,"KRN","B",.4,.4)

"BLD",6904,"KRN","B",.401,.401)

"BLD",6904,"KRN","B",.402,.402)

"BLD",6904,"KRN","B",.403,.403)

"BLD",6904,"KRN","B",.5,.5)

"BLD",6904,"KRN","B",.84,.84)

"BLD",6904,"KRN","B",3.6,3.6)

"BLD",6904,"KRN","B",3.8,3.8)

"BLD",6904,"KRN","B",9.2,9.2)

"BLD",6904,"KRN","B",9.8,9.8)

"BLD",6904,"KRN","B",19,19)

"BLD",6904,"KRN","B",19.1,19.1)

"BLD",6904,"KRN","B",101,101)

"BLD",6904,"KRN","B",409.61,409.61)

"BLD",6904,"KRN","B",771,771)

"BLD",6904,"KRN","B",870,870)

"BLD",6904,"KRN","B",8989.51,8989.51)

"BLD",6904,"KRN","B",8989.52,8989.52)

"BLD",6904,"KRN","B",8994,8994)

"BLD",6904,"QUES",0)
^9.62^^
"BLD",6904,"REQB",0)
^9.611^2^2
"BLD",6904,"REQB",1,0)
DG*5.3*464^1
"BLD",6904,"REQB",2,0)
DG*5.3*683^1
"BLD",6904,"REQB","B","DG*5.3*464",1)

"BLD",6904,"REQB","B","DG*5.3*683",2)

"FIA",405)
PATIENT MOVEMENT
"FIA",405,0)
^DGPM(
"FIA",405,0,0)
405ID
"FIA",405,0,1)
y^y^p^^^^n^^n
"FIA",405,0,10)

"FIA",405,0,11)

"FIA",405,0,"RLRO")

"FIA",405,0,"VR")
5.3^DG
"FIA",405,405)
1
"FIA",405,405,.09)

"INIT")
DG53721P
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
721^3060926
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DG53721P")
0^^B888389^n/a
"RTN","DG53721P",1,0)
DG53721P ;ALB/MHG - post-install for DG*5.3*721
"RTN","DG53721P",2,0)
 ;;5.3;Registration;**721**;Aug 13, 1993;Build 3
"RTN","DG53721P",3,0)
EN ;
"RTN","DG53721P",4,0)
 ;recompile input templates
"RTN","DG53721P",5,0)
 N X,Y,DMAX,MESS
"RTN","DG53721P",6,0)
 S X="DGPMX6"
"RTN","DG53721P",7,0)
 S Y=$$FIND1^DIC(.402,"","MX","DGPM SPECIALTY TRANSFER")
"RTN","DG53721P",8,0)
 I Y<0 S MESS="Error in re-compiling DGPM SPECIALTY TRANSFER input template." D MESS Q
"RTN","DG53721P",9,0)
 S DMAX=8000
"RTN","DG53721P",10,0)
 D EN^DIEZ
"RTN","DG53721P",11,0)
 S MESS="DGPM SPECIALTY TRANSFER input template has been re-compiled."
"RTN","DG53721P",12,0)
 D MESS
"RTN","DG53721P",13,0)
 Q
"RTN","DG53721P",14,0)
 ;
"RTN","DG53721P",15,0)
MESS ;
"RTN","DG53721P",16,0)
 D MES^XPDUTL("")
"RTN","DG53721P",17,0)
 D BMES^XPDUTL(MESS)
"RTN","DG53721P",18,0)
 Q
"RTN","DGRUADT")
0^1^B60481831^B60421732
"RTN","DGRUADT",1,0)
DGRUADT ;ALB/SCK - MAIN DRIVER FOR RAI/MDS ADT MESSAGING; 7-8-99 ; 29 Aug 2006  9:07 AM
"RTN","DGRUADT",2,0)
 ;;5.3;Registration;**190,312,328,373,430,464,721**;Aug 13, 1993;Build 3
"RTN","DGRUADT",3,0)
 ;
"RTN","DGRUADT",4,0)
EN ; Main entry point for generating an HL7 ADT message to the COTS system
"RTN","DGRUADT",5,0)
 ; The message builder is tasked off to taskManager to build and transmit
"RTN","DGRUADT",6,0)
 ; the ADT message to the vendor.
"RTN","DGRUADT",7,0)
 ; Input:
"RTN","DGRUADT",8,0)
 ;      DGPMP   - 0 node of the primary movement BEFORE the ADT action
"RTN","DGRUADT",9,0)
 ;      DGPMA   - 0 node of the primary movement AFTER the ADT action
"RTN","DGRUADT",10,0)
 ;      DFN     - Ien of the patient in the PATIENT File (#2)
"RTN","DGRUADT",11,0)
 ;      DGPMDA  - Ien of the movement
"RTN","DGRUADT",12,0)
 ;      DGQUIET - Flag to suppress read/writes if set
"RTN","DGRUADT",13,0)
 ;      DGADT   - Data array for processing ADT events
"RTN","DGRUADT",14,0)
 ;      DGTRACE - Debugging parameter
"RTN","DGRUADT",15,0)
 ;      DGPDIV  - Division for prior Ward
"RTN","DGRUADT",16,0)
 ;      DGCDIV  - Division for current Ward
"RTN","DGRUADT",17,0)
 ;      DGINTEG - Integration Database flag
"RTN","DGRUADT",18,0)
 ;                0 - Not Integrated Site
"RTN","DGRUADT",19,0)
 ;                1 - Integrated, Single Database
"RTN","DGRUADT",20,0)
 ;                2 - Integrated, Multiple Databases
"RTN","DGRUADT",21,0)
 ;      DGPMVI  - Array where results from call to IN5^VADPT returned
"RTN","DGRUADT",22,0)
 ;
"RTN","DGRUADT",23,0)
 N DGTRACE,VAFH
"RTN","DGRUADT",24,0)
 ;
"RTN","DGRUADT",25,0)
 ; Test for ADT on/off parameter
"RTN","DGRUADT",26,0)
 Q:'$P($$SEND^VAFHUTL(),"^",2)
"RTN","DGRUADT",27,0)
 ;
"RTN","DGRUADT",28,0)
 M VAFH=^UTILITY("DGPM",$J)
"RTN","DGRUADT",29,0)
 ;
"RTN","DGRUADT",30,0)
 I '($G(DGQUIET)) D
"RTN","DGRUADT",31,0)
 . W !,"Executing HL7 ADT Messaging (RAI/MDS)"
"RTN","DGRUADT",32,0)
 . I $D(^TMP("DGRUADT1")) S DGTRACE=1
"RTN","DGRUADT",33,0)
 I $D(DGTRACE) D  G EXIT
"RTN","DGRUADT",34,0)
 . D INIT
"RTN","DGRUADT",35,0)
 ;
"RTN","DGRUADT",36,0)
 N ZTDESC,ZTRTN,ZTSAVE,ZTIO,ZTDTH,X,ZTQUEUED,ZTREQ
"RTN","DGRUADT",37,0)
 S ZTDESC="HL7 ADT MESSAGE (RAI/MDS)",ZTRTN="EVENT^DGRUADT"
"RTN","DGRUADT",38,0)
 F X="DGPMP","DGPMA","DGPMDA","DFN","DGPMAN","VAFH(" S ZTSAVE(X)=""
"RTN","DGRUADT",39,0)
 S ZTIO="",ZTDTH=$H
"RTN","DGRUADT",40,0)
 D ^%ZTLOAD
"RTN","DGRUADT",41,0)
EXIT ;
"RTN","DGRUADT",42,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGRUADT",43,0)
 D KILL^HLTRANS
"RTN","DGRUADT",44,0)
 K ^TMP("HLS",$J)
"RTN","DGRUADT",45,0)
 Q
"RTN","DGRUADT",46,0)
 ;
"RTN","DGRUADT",47,0)
INIT ;
"RTN","DGRUADT",48,0)
 D EVENT,EXIT
"RTN","DGRUADT",49,0)
 Q
"RTN","DGRUADT",50,0)
 ;
"RTN","DGRUADT",51,0)
EVENT ;
"RTN","DGRUADT",52,0)
 N DGTYPE,DGMOVE,DGADMSN,VAFHDT,DGEVENT,VAIP
"RTN","DGRUADT",53,0)
 ;
"RTN","DGRUADT",54,0)
 ; Check for valid movements
"RTN","DGRUADT",55,0)
 I $G(DGPMP)=""&($G(DGPMA)="") Q
"RTN","DGRUADT",56,0)
 ;
"RTN","DGRUADT",57,0)
 ; Determine the event transaction type.  The events are: 
"RTN","DGRUADT",58,0)
 ;
"RTN","DGRUADT",59,0)
 ; If DGPMP is null and DGPMA is not, then adding a new ADT event
"RTN","DGRUADT",60,0)
 I (DGPMP="")&(DGPMA'="") D  G EVENTQ
"RTN","DGRUADT",61,0)
 . D SETVAR(DGPMA)
"RTN","DGRUADT",62,0)
 . ;
"RTN","DGRUADT",63,0)
 . ; If DGTYPE=6, then this a treating specialty change, check if this is for
"RTN","DGRUADT",64,0)
 . ; a provider change.
"RTN","DGRUADT",65,0)
 . I (DGTYPE=6) D  Q
"RTN","DGRUADT",66,0)
 . . N VAIN,VAINDT
"RTN","DGRUADT",67,0)
 . . S VAINDT=+DGPMA
"RTN","DGRUADT",68,0)
 . . D INP^VADPT
"RTN","DGRUADT",69,0)
 . . ; I (+VAIN(2)=+$G(DGPMVI(7)))&(+VAIN(11)=+$G(DGPMVI(18))) Q p-721
"RTN","DGRUADT",70,0)
 . . Q:'$$CHKWARD^DGRUUTL(+$G(DGPMVI(5)))
"RTN","DGRUADT",71,0)
 . . W:$D(DGTRACE) !,1.6
"RTN","DGRUADT",72,0)
 . . D BLDMSG^DGRUADT1(DFN,"A08",DGPMDA,+DGPMA,+DGPMVI(5))
"RTN","DGRUADT",73,0)
 . ;
"RTN","DGRUADT",74,0)
 . ; If DGTYPE=1, then it means an admission
"RTN","DGRUADT",75,0)
 . I (DGTYPE=1) S DGEVENT="A01" D  Q
"RTN","DGRUADT",76,0)
 . . W:$D(DGTRACE) !,1.1
"RTN","DGRUADT",77,0)
 . . Q:'$$CHKWARD^DGRUUTL(+$P(DGPMA,"^",6))
"RTN","DGRUADT",78,0)
 . . D BLDMSG^DGRUADT1(DFN,"A01",DGPMDA,+DGPMA,+$P(DGPMA,"^",6))
"RTN","DGRUADT",79,0)
 . ;
"RTN","DGRUADT",80,0)
 . ; If DGTYPE=3, then it means a discharge
"RTN","DGRUADT",81,0)
 . I (DGTYPE=3) S DGEVENT="A03" D  Q
"RTN","DGRUADT",82,0)
 . . W:$D(DGTRACE) !,1.3
"RTN","DGRUADT",83,0)
 . . S DGMOVE=$$MOVETYPE(DGPMA)
"RTN","DGRUADT",84,0)
 . . ;
"RTN","DGRUADT",85,0)
 . . ;If Movement type "From ASIH" create A22 and send to COTS
"RTN","DGRUADT",86,0)
 . . I DGMOVE=41!(DGMOVE=14) D MV41^DGRUADT0(DFN) Q
"RTN","DGRUADT",87,0)
 . . ;
"RTN","DGRUADT",88,0)
 . . ; Get ward discharged from, if RAI/MDS, then process message
"RTN","DGRUADT",89,0)
 . . N VAIP S VAIP("D")="LAST"
"RTN","DGRUADT",90,0)
 . . D IN5^VADPT
"RTN","DGRUADT",91,0)
 . . ;If Movement type "Death" must check to see if patient was ASIH
"RTN","DGRUADT",92,0)
 . . ;If patient was ASIH, create and send A03 to COTS
"RTN","DGRUADT",93,0)
 . . I $P($G(DGPMAN),"^",21)]"" N DGASIH D MV1238^DGRUADT0(DFN) Q:$G(DGASIH)=1  ;modified p-373
"RTN","DGRUADT",94,0)
 . . ;
"RTN","DGRUADT",95,0)
 . . Q:'$$CHKWARD^DGRUUTL(+VAIP(17,4))
"RTN","DGRUADT",96,0)
 . . D BLDMSG^DGRUADT1(DFN,"A03",DGPMDA,+DGPMA,+VAIP(17,4))
"RTN","DGRUADT",97,0)
 . ;
"RTN","DGRUADT",98,0)
 . ; If DGTYPE=2, then it means a transfer
"RTN","DGRUADT",99,0)
 . I (DGTYPE=2) S DGEVENT="A02" D  Q
"RTN","DGRUADT",100,0)
 . . W:$D(DGTRACE) !,1.2
"RTN","DGRUADT",101,0)
 . . S DGMOVE=$$MOVETYPE(DGPMA)
"RTN","DGRUADT",102,0)
 . . ;
"RTN","DGRUADT",103,0)
 . . ; If transfer to ASIH
"RTN","DGRUADT",104,0)
 . . I DGMOVE=13!(DGMOVE=43)!(DGMOVE=40) D MV40^DGRUADT0(DFN) Q
"RTN","DGRUADT",105,0)
 . . ;
"RTN","DGRUADT",106,0)
 . . ;If transfer From ASIH
"RTN","DGRUADT",107,0)
 . . I DGMOVE=14!(DGMOVE=41) D MV41^DGRUADT0(DFN) Q
"RTN","DGRUADT",108,0)
 . . ; If transfer is to Leave of absence
"RTN","DGRUADT",109,0)
 . . I DGMOVE=1!(DGMOVE=2)!(DGMOVE=3) D  Q  ;modified p-328
"RTN","DGRUADT",110,0)
 . . . Q:'$$CHKWARD^DGRUUTL(+$P(DGPMA,"^",6))
"RTN","DGRUADT",111,0)
 . . . D BLDMSG^DGRUADT1(DFN,"A21",DGPMDA,+DGPMA,+$P(DGPMA,"^",6))
"RTN","DGRUADT",112,0)
 . . ;
"RTN","DGRUADT",113,0)
 . . ; If transfer is from Leave of absence
"RTN","DGRUADT",114,0)
 . . I DGMOVE=23!(DGMOVE=24)!(DGMOVE=22) D  Q
"RTN","DGRUADT",115,0)
 . . . Q:'$$CHKWARD^DGRUUTL(+$P(DGPMA,"^",6))
"RTN","DGRUADT",116,0)
 . . . D BLDMSG^DGRUADT1(DFN,"A22",DGPMDA,+DGPMA,+$P(DGPMA,"^",6))
"RTN","DGRUADT",117,0)
 . . ;
"RTN","DGRUADT",118,0)
 . . I DGMOVE=4 D MV4^DGRUADT0(DFN,DGPMA)
"RTN","DGRUADT",119,0)
 . ;
"RTN","DGRUADT",120,0)
 ;
"RTN","DGRUADT",121,0)
 ; If DGPMP and DGPMA are both NOT null, then editing an ADT event
"RTN","DGRUADT",122,0)
 I (DGPMP'="")&(DGPMA'="") D EDITADT^DGRUADT2 G EVENTQ
"RTN","DGRUADT",123,0)
 ;
"RTN","DGRUADT",124,0)
 ; If DGPMP is not null and DGPMA is, then deleting an ADT event
"RTN","DGRUADT",125,0)
 I (DGPMP'="")&(DGPMA="") D  G EVENTQ
"RTN","DGRUADT",126,0)
 . D SETVAR(DGPMP)
"RTN","DGRUADT",127,0)
 . S DGMOVE=$$MOVETYPE(DGPMP)
"RTN","DGRUADT",128,0)
 . ;
"RTN","DGRUADT",129,0)
 . ; If DGTYPE=1, then deleting an admission
"RTN","DGRUADT",130,0)
 . I (DGTYPE=1) S DGEVENT="A11" D  Q
"RTN","DGRUADT",131,0)
 . . W:$D(DGTRACE) !,3.1
"RTN","DGRUADT",132,0)
 . . ;Check if deleting an admission for an ASIH event
"RTN","DGRUADT",133,0)
 . . I DGMOVE=13!(DGMOVE=43)!(DGMOVE=40) D CN40^DGRUADT0(DFN) Q
"RTN","DGRUADT",134,0)
 . . Q:'$$CHKWARD^DGRUUTL(+$P(DGPMP,"^",6))  ;Quit if not RAI/MDS ward
"RTN","DGRUADT",135,0)
 . . ;
"RTN","DGRUADT",136,0)
 . . D BLDMSG^DGRUADT1(DFN,"A11",DGPMDA,+DGPMP,+$P(DGPMP,"^",6))
"RTN","DGRUADT",137,0)
 . ;
"RTN","DGRUADT",138,0)
 . ; If DGTYPE=3, then deleting a discharge
"RTN","DGRUADT",139,0)
 . I (DGTYPE=3) S DGEVENT="A13" D  Q
"RTN","DGRUADT",140,0)
 . . W:$D(DGTRACE) !,3.3
"RTN","DGRUADT",141,0)
 . . S VAIP("D")="LAST",VAIP("M")=1
"RTN","DGRUADT",142,0)
 . . D IN5^VADPT
"RTN","DGRUADT",143,0)
 . . ; Get ward. Use last movement if it exists, if not use the current movement.
"RTN","DGRUADT",144,0)
 . . N DGWARD S DGWARD=(+VAIP(14,4))
"RTN","DGRUADT",145,0)
 . . I $P($G(DGPMAN),"^",21)]"" N DGASIH D  Q:$G(DGASIH)=3  ;Deleting discharge which relates to ASIH (312), modified p-373
"RTN","DGRUADT",146,0)
 . . . N DGOMDT,DGOWARD,DGOIEN
"RTN","DGRUADT",147,0)
 . . . S DGOMDT=+$G(DGPMAN) Q:DGOMDT'>0
"RTN","DGRUADT",148,0)
 . . . S DGOMDT=$O(^DGPM("APRD",DFN,DGOMDT),-1) Q:DGOMDT'>0  ;Get movement prior to ASIH
"RTN","DGRUADT",149,0)
 . . . S DGOIEN=$O(^DGPM("APRD",DFN,DGOMDT,0)) ;Get IEN of movement
"RTN","DGRUADT",150,0)
 . . . S DGOWARD=$$GET1^DIQ(405,DGOIEN,".06","I") Q:DGOWARD=""
"RTN","DGRUADT",151,0)
 . . . Q:'$$CHKWARD^DGRUUTL(DGOWARD)  ;Quit if not RAI/MDS flag
"RTN","DGRUADT",152,0)
 . . . N DGLDDAT S DGLDDAT=$O(^DGPM("APTT3",DFN,""),-1) ;p-430
"RTN","DGRUADT",153,0)
 . . . I $G(DGLDDAT)]"",DGLDDAT>+$P($G(DGPMAN),"^"),DGLDDAT<+$G(DGNOW) Q  ;p-430
"RTN","DGRUADT",154,0)
 . . . K DGLDDAT ;p-430
"RTN","DGRUADT",155,0)
 . . . S DGASIH=3 ;Set flag to identify ASIH (used by DGRUGA13)
"RTN","DGRUADT",156,0)
 . . . D BLDMSG^DGRUADT1(DFN,"A13",DGOIEN,+DGPMP,DGOWARD)
"RTN","DGRUADT",157,0)
 . . . N DGSTAT,DGIEN S DGSTAT="A" ;p-430
"RTN","DGRUADT",158,0)
 . . . S DGIEN=$O(^DGRU(46.14,DFN,1,"B",+$G(DGPMAN),0)) Q:DGIEN=""  ;p-430
"RTN","DGRUADT",159,0)
 . . . D UPSTAT^DGRUASIH(DFN,DGIEN,DGSTAT) ;p-430
"RTN","DGRUADT",160,0)
 . . S:'DGWARD DGWARD=+VAIP(5)
"RTN","DGRUADT",161,0)
 . . Q:'$$CHKWARD^DGRUUTL(DGWARD)
"RTN","DGRUADT",162,0)
 . . D BLDMSG^DGRUADT1(DFN,"A13",DGPMDA,+DGPMP,DGWARD)
"RTN","DGRUADT",163,0)
 . ;
"RTN","DGRUADT",164,0)
 . ; If DGTYPE=2, then deleting a transfer
"RTN","DGRUADT",165,0)
 . I (DGTYPE=2) S DGEVENT="A12" D  Q
"RTN","DGRUADT",166,0)
 . . W:$D(DGTRACE) !,3.2
"RTN","DGRUADT",167,0)
 . . N DGWARDP,DGWARDA,VAIP
"RTN","DGRUADT",168,0)
 . . S DGWARDP=+$P(DGPMP,"^",6)
"RTN","DGRUADT",169,0)
 . . N VAIP S VAIP("D")="LAST",VAIP("M")=1
"RTN","DGRUADT",170,0)
 . . D IN5^VADPT
"RTN","DGRUADT",171,0)
 . . S DGWARDA=+VAIP(5)
"RTN","DGRUADT",172,0)
 . . I 'DGWARDP!('DGWARDA) D  Q
"RTN","DGRUADT",173,0)
 . . . W !,"Unable to determine wards for transfer cancellation"
"RTN","DGRUADT",174,0)
 . . ;
"RTN","DGRUADT",175,0)
 . . ;Get Division for prior Ward
"RTN","DGRUADT",176,0)
 . . S DGPDIV=+$$GETDIV^DGRUUTL1(DGWARDP)
"RTN","DGRUADT",177,0)
 . . ;
"RTN","DGRUADT",178,0)
 . . ;Get Division for current Ward
"RTN","DGRUADT",179,0)
 . . S DGCDIV=+$$GETDIV^DGRUUTL1(DGWARDA)
"RTN","DGRUADT",180,0)
 . . ;
"RTN","DGRUADT",181,0)
 . . ;Get Integration flag
"RTN","DGRUADT",182,0)
 . . S DGINTEG=+$$GET1^DIQ(43,1,391.705,"I")
"RTN","DGRUADT",183,0)
 . . ;
"RTN","DGRUADT",184,0)
 . . ; If cancel transfer mds to mds ward: A12
"RTN","DGRUADT",185,0)
 . . I $$CHKWARD^DGRUUTL(DGWARDP)&($$CHKWARD^DGRUUTL(DGWARDA)) D  Q
"RTN","DGRUADT",186,0)
 . . . I DGINTEG=1!(DGINTEG=2),DGPDIV'=DGCDIV D
"RTN","DGRUADT",187,0)
 . . . . D BLDMSG^DGRUADT1(DFN,"A11",DGPMDA,+DGPMP,DGWARDP)
"RTN","DGRUADT",188,0)
 . . . . D BLDMSG^DGRUADT1(DFN,"A13",DGPMDA,+DGPMP,DGWARDA)
"RTN","DGRUADT",189,0)
 . . . E  D  ;
"RTN","DGRUADT",190,0)
 . . . . D BLDMSG^DGRUADT1(DFN,"A12",DGPMDA,+DGPMP,DGWARDP)
"RTN","DGRUADT",191,0)
 . . . . I DGMOVE=43 D DELASIH^DGRUASIH(DFN,VAFHDT) ;p-464
"RTN","DGRUADT",192,0)
 . . ; If cancel transfer to non-mds ward from an mds ward: A13
"RTN","DGRUADT",193,0)
 . . I '$$CHKWARD^DGRUUTL(DGWARDP)&($$CHKWARD^DGRUUTL(DGWARDA)) D  Q
"RTN","DGRUADT",194,0)
 . . . D BLDMSG^DGRUADT1(DFN,"A13",DGPMDA,+DGPMP,DGWARDP)
"RTN","DGRUADT",195,0)
 . . ; If cancel transfer to mds ward from an non-mds ward: A11
"RTN","DGRUADT",196,0)
 . . I $$CHKWARD^DGRUUTL(DGWARDP)&('$$CHKWARD^DGRUUTL(DGWARDA)) D  Q
"RTN","DGRUADT",197,0)
 . . . D BLDMSG^DGRUADT1(DFN,"A11",DGPMDA,+DGPMP,DGWARDP)
"RTN","DGRUADT",198,0)
 ;
"RTN","DGRUADT",199,0)
EVENTQ Q
"RTN","DGRUADT",200,0)
 ;
"RTN","DGRUADT",201,0)
SETVAR(NODE) ;
"RTN","DGRUADT",202,0)
 S DGTYPE=$P(NODE,"^",2),VAFHDT=$P(NODE,"^",1),DGADMSN=$P(NODE,"^",14)
"RTN","DGRUADT",203,0)
 Q
"RTN","DGRUADT",204,0)
 ;
"RTN","DGRUADT",205,0)
MOVETYPE(NODE) ;
"RTN","DGRUADT",206,0)
 N TYPE
"RTN","DGRUADT",207,0)
 S TYPE=$P(NODE,"^",18)
"RTN","DGRUADT",208,0)
 Q +$G(TYPE)
"RTN","DGRUGA08")
0^2^B22077652^B21535297
"RTN","DGRUGA08",1,0)
DGRUGA08 ;ALB/GRR - HL7 ADT A08 MESSAGE BUILDER ; 21 Sep 2006  8:24 AM
"RTN","DGRUGA08",2,0)
 ;;5.3;Registration;**190,312,328,721**;Aug 13, 1993;Build 3
"RTN","DGRUGA08",3,0)
 ;
"RTN","DGRUGA08",4,0)
 ;This routine will build a ADT A08 (Patient Update) HL7 message for an inpatient.
"RTN","DGRUGA08",5,0)
 ;
"RTN","DGRUGA08",6,0)
EN(DFN,DGMIEN,DGARRAY,DGDC,DGSSNC) ;Entry point of routine
"RTN","DGRUGA08",7,0)
 ;DFN - Patient Internal Entry Number
"RTN","DGRUGA08",8,0)
 ;DGMIEN - Patient Movement Internal Entry Number
"RTN","DGRUGA08",9,0)
 ;DGARRAY - Name of output array by reference where built message will be contained.
"RTN","DGRUGA08",10,0)
 ;DGDC - date type~prior date (date type is A, T, or D) (Required for date change only) [Optional]
"RTN","DGRUGA08",11,0)
 ;DGSSNC - Prior SSN (Required for SSN Change only) [Optional]
"RTN","DGRUGA08",12,0)
 ;
"RTN","DGRUGA08",13,0)
 ;The HL7 variables must be initialized before calling this routine!
"RTN","DGRUGA08",14,0)
 ;HL("FS"),HL("ECH"),HLFS,HLECH, and HLQ are used by segment builders called by this routine
"RTN","DGRUGA08",15,0)
 ;
"RTN","DGRUGA08",16,0)
 N DGPV1,DGHOLD,DGCNT,DGMDT,DGCDT,DGOADT,DGIN1,DGLMT,DGZEL,DGICD,DGICDCNT,DGIN,DGINCNT S DGCNT=0
"RTN","DGRUGA08",17,0)
 Q:DGARRAY=""  ;Required output variable name was not passed
"RTN","DGRUGA08",18,0)
 K @DGARRAY ;Kill output array to insure erronuous data does not exist
"RTN","DGRUGA08",19,0)
 I DGMIEN="" N VAIP D NOW^%DTC S VAIP("D")=% D IN5^VADPT S DGMIEN=$G(VAIP(1)) K VAIP Q:DGMIEN=""  ;changed p-328
"RTN","DGRUGA08",20,0)
 D NOW^%DTC S DGCDT=$$HLDATE^HLFNC(%) ;Get current date/time and convert to HL7 format
"RTN","DGRUGA08",21,0)
 S DGMDT=$$GET1^DIQ(405,DGMIEN,".01","I")
"RTN","DGRUGA08",22,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for first segment
"RTN","DGRUGA08",23,0)
 S @DGARRAY@(DGCNT)=$$EVN^VAFHLEVN("A08","05",DGMDT) ;Create Event segment and store in output array
"RTN","DGRUGA08",24,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",25,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFCPID(DFN,",2,5,7,8,10,11,13,16,17,19,23,29",1) ;Create PID segment using segment sequence numbers passed and store in output array
"RTN","DGRUGA08",26,0)
 S DGHOLD=$$EN^VAFHLNK1(DFN,DGMIEN,",2,3,4,5,") ;Create the NK1 segment using the segment sequence numbers passed, and store in output array
"RTN","DGRUGA08",27,0)
 I DGHOLD]"" S DGCNT=DGCNT+1,@DGARRAY@(DGCNT)=DGHOLD
"RTN","DGRUGA08",28,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one to store next segment
"RTN","DGRUGA08",29,0)
 S DGPV1=$$IN^VAFHLPV1(DFN,DGMDT,",2,3,6,7,10,17,44,45,",DGMIEN,"","") ;Create the PV1 segment based on sequence numbers passed
"RTN","DGRUGA08",30,0)
 S DGOADT=$$CKADMIT^DGRUUTL1(DFN) ;check if integrated site get original admit date/time
"RTN","DGRUGA08",31,0)
 I DGOADT]"" S $P(DGPV1,HL("FS"),45)=$$HLDATE^HLFNC(DGOADT)
"RTN","DGRUGA08",32,0)
 S DGPV1=$$DOCID^DGRUUTL(DGPV1)
"RTN","DGRUGA08",33,0)
 I $G(DGLMT)=1,$E($G(DGDC))="D" S $P(DGPV1,HL("FS"),4)=$P(DGPV1,HL("FS"),7) ;This is a change to a prior HL7, move prior location to current
"RTN","DGRUGA08",34,0)
 N VAIP D IN5^VADPT S $P(DGPV1,HL("FS"),11)=$$GET1^DIQ(45.7,+VAIP(8),1,"I") K VAIP ; p-721
"RTN","DGRUGA08",35,0)
 S @DGARRAY@(DGCNT)=$$LOCTRAN^DGRUUTL1(DGPV1)
"RTN","DGRUGA08",36,0)
 S DGCNT=DGCNT+1 ;Increment node counter to store next segment
"RTN","DGRUGA08",37,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFHLPV2(DFN,DGMIEN,",3,") ;Create PV2 segment
"RTN","DGRUGA08",38,0)
 D IN^VAFHLDG1(DFN,DGMIEN,",2,3,5,","DGICD") ;Create the DG1 segment(s) and store in a temporary array
"RTN","DGRUGA08",39,0)
 I $O(DGICD(0))>0 D  ;DG1 segment were built
"RTN","DGRUGA08",40,0)
 .S DGICDCNT=0 F  S DGICDCNT=$O(DGICD(DGICDCNT)) Q:DGICDCNT=""  S DGCNT=DGCNT+1,@DGARRAY@(DGCNT)=DGICD(DGICDCNT,0) ;Loop through temporary array and store DG1 segment(s) in output array
"RTN","DGRUGA08",41,0)
 S DGIN1=$$IN1^DGRUUTL1(DFN)
"RTN","DGRUGA08",42,0)
 S DGCNT=DGCNT+1,@DGARRAY@(DGCNT)=DGIN1
"RTN","DGRUGA08",43,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",44,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFHLIN2(DFN,DGMIEN,",2,3,6,8,") ;Create and store IN2 segment in output array
"RTN","DGRUGA08",45,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",46,0)
 S DGZEL=$$EN^VAFHLZEL(DFN,",1,8,",1) ;Create ZEL segment (only primary eligibility - param 3 = 1)
"RTN","DGRUGA08",47,0)
 I $P(DGZEL,HL("FS"),9)'=0&($P(DGZEL,HL("FS"),9)'=1) S $P(DGZEL,HL("FS"),9)=1 ;stuff patient as veteran
"RTN","DGRUGA08",48,0)
 S @DGARRAY@(DGCNT)=DGZEL
"RTN","DGRUGA08",49,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",50,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFHLZEM(DFN,",1,5,",1,1) ;Create ZEM segment for Patient (param 3 = 1)
"RTN","DGRUGA08",51,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",52,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFHLZEN(DFN,",1,9,",1,"",HL("FS")) ;Create ZEN segment and add to message array
"RTN","DGRUGA08",53,0)
 S DGCNT=DGCNT+1 ;Increment node counter by one for next segment
"RTN","DGRUGA08",54,0)
 S @DGARRAY@(DGCNT)=$$EN^VAFHLZMH(DFN,DGMIEN,",4,") ;Create the ZMH segment and store in the output array
"RTN","DGRUGA08",55,0)
 S DGDC=$G(DGDC),DGSSNC=$G(DGSSNC)
"RTN","DGRUGA08",56,0)
 I DGDC]""!(DGSSNC]"") D  ;date or ssn change
"RTN","DGRUGA08",57,0)
 .I DGDC]""&'("ADT"[$E(DGDC)) Q
"RTN","DGRUGA08",58,0)
 .S DGCNT=DGCNT+1
"RTN","DGRUGA08",59,0)
 .S @DGARRAY@(DGCNT)=$$EN^DGRUGZDC(DFN,DGDC,DGSSNC,DGMDT)
"RTN","DGRUGA08",60,0)
 Q
"VER")
8.0^22.0
"^DD",405,405,.09,0)
FACILITY TREATING SPECIALTY^R*P45.7'a^DIC(45.7,^0;9^S DIC("S")="I $$ACTIVE^DGACT(45.7,Y,$P($G(^DGPM(DA,0)),U))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",405,405,.09,1,0)
^.1
"^DD",405,405,.09,1,1,0)
405^ATS^MUMPS
"^DD",405,405,.09,1,1,1)
S DGPMDDF=9 D ^DGPMDD1
"^DD",405,405,.09,1,1,2)
S DGPMDDF=9 D ^DGPMDD2
"^DD",405,405,.09,1,2,0)
405^ATR^MUMPS
"^DD",405,405,.09,1,2,1)
S DGPMDDF=9,DGPMDDT=1 D ^DGPMDDCN
"^DD",405,405,.09,1,2,2)
S DGPMDDF=9,DGPMDDT=0 D ^DGPMDDCN
"^DD",405,405,.09,1,3,0)
405^AODS3S^MUMPS
"^DD",405,405,.09,1,3,1)
I $D(^DGPM(+$P(^DGPM(DA,0),"^",24),0)),($P(^(0),"^",2)=1) S A1B2TAG="ADM1" D ^A1B2XFR
"^DD",405,405,.09,1,3,2)
I $D(^DGPM(+$P(^DGPM(DA,0),"^",24),0)),($P(^(0),"^",2)=1) S A1B2TAG="ADM1" D ^A1B2XFR
"^DD",405,405,.09,1,4,0)
405^AGL9^MUMPS
"^DD",405,405,.09,1,4,1)
S Y=^DGPM(DA,0) I +Y,Y<DT S Y=$P(Y,U,2) I Y=6,X'=$P(Y,U,9) S DGHNYT=13 D ^DGPMGLC
"^DD",405,405,.09,1,4,2)
S Y=^DGPM(DA,0) I +Y,Y<DT S Y=$P(Y,U,2) I Y=6,X'=$P(Y,U,9) S DGHNYT=14 D ^DGPMGLC
"^DD",405,405,.09,1,4,"%D",0)
^^5^5^2930430^^^^
"^DD",405,405,.09,1,4,"%D",1,0)
This is set to trigger the G&L Corrections routine to create an entry in
"^DD",405,405,.09,1,4,"%D",2,0)
the G&L Corrections File if there is a facility treating specialty change,
"^DD",405,405,.09,1,4,"%D",3,0)
needed to set recalc date for the Treating Specialty Report accurancy.
"^DD",405,405,.09,1,4,"%D",4,0)
If Facility TS change, NOT just a provider change will cause this to
"^DD",405,405,.09,1,4,"%D",5,0)
create and entry in the G&L Corrections File.
"^DD",405,405,.09,1,4,"DT")
2930430
"^DD",405,405,.09,1,5,0)
405^ADGRU09^MUMPS
"^DD",405,405,.09,1,5,1)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DFN)
"^DD",405,405,.09,1,5,2)
D:($T(ADGRU^DGRUDD01)'="") ADGRU^DGRUDD01(DFN)
"^DD",405,405,.09,1,5,"%D",0)
^.101^9^9^3060822^^^^
"^DD",405,405,.09,1,5,"%D",1,0)
This cross reference is used to remember that changes were made to a
"^DD",405,405,.09,1,5,"%D",2,0)
monitored data field in the PATIENT MOVEMENT File (#405) required for a
"^DD",405,405,.09,1,5,"%D",3,0)
vendor RAI/MDS COTS system.  Execution of this cross reference will create
"^DD",405,405,.09,1,5,"%D",4,0)
an entry in the ADT/HL7 PIVOT file (#391.71) and mark it as requiring
"^DD",405,405,.09,1,5,"%D",5,0)
transmission of an HL7 demographic A08 update message to the COTS
"^DD",405,405,.09,1,5,"%D",6,0)
interface.  
"^DD",405,405,.09,1,5,"%D",7,0)
                     
"^DD",405,405,.09,1,5,"%D",8,0)
The local variable DGRUGA08 will be set to 1 if the 
"^DD",405,405,.09,1,5,"%D",9,0)
cross reference is not to be executed as part of a re-indexing.
"^DD",405,405,.09,1,5,"DT")
3060822
"^DD",405,405,.09,3)
Enter the TREATING SPECIALTY assigned to this patient with this movement.  This must be an active treating specialty.
"^DD",405,405,.09,12)
Allows only active treating specialties.
"^DD",405,405,.09,12.1)
S DIC("S")="I $$ACTIVE^DGACT(45.7,Y,$P($G(^DGPM(DA,0)),U))"
"^DD",405,405,.09,21,0)
^.001^4^4^3060821^^^^
"^DD",405,405,.09,21,1,0)
When entering a movement with a TRANSACTION TYPE of SPECIALTY
"^DD",405,405,.09,21,2,0)
CHANGE, you will be asked to provide the treating specialty assigned to
"^DD",405,405,.09,21,3,0)
this patient.  Choose an entry from the FACILITY TREATING SPECIALTY
"^DD",405,405,.09,21,4,0)
file which best describes the care this patient is receiving.
"^DD",405,405,.09,"AUDIT")
y
"^DD",405,405,.09,"DT")
3060822
"BLD",6904,6)
^642
**END**
**END**
