EMERGENCY Released DG*5.3*707 SEQ #665
Extracted from mail message
**KIDS**:DG*5.3*707^

**INSTALL NAME**
DG*5.3*707
"BLD",2361,0)
DG*5.3*707^REGISTRATION^0^3070605^y
"BLD",2361,1,0)
^^3^3^3070605^
"BLD",2361,1,1,0)
ENHANCEMENT TO VISTA PATIENT UPDATE MESSAGING
"BLD",2361,1,2,0)
Refer to patch DG*5.3*707 in the FORUM Patch Module for a complete 
"BLD",2361,1,3,0)
description.
"BLD",2361,4,0)
^9.64PA^^
"BLD",2361,6.3)
14
"BLD",2361,"ABNS",0)
^9.66A^^
"BLD",2361,"ABPKG")
^^
"BLD",2361,"KRN",0)
^9.67PA^8989.52^19
"BLD",2361,"KRN",.4,0)
.4
"BLD",2361,"KRN",.4,"NM",0)
^9.68A^^
"BLD",2361,"KRN",.401,0)
.401
"BLD",2361,"KRN",.402,0)
.402
"BLD",2361,"KRN",.403,0)
.403
"BLD",2361,"KRN",.5,0)
.5
"BLD",2361,"KRN",.84,0)
.84
"BLD",2361,"KRN",3.6,0)
3.6
"BLD",2361,"KRN",3.8,0)
3.8
"BLD",2361,"KRN",9.2,0)
9.2
"BLD",2361,"KRN",9.8,0)
9.8
"BLD",2361,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",2361,"KRN",9.8,"NM",1,0)
VAFCQRY1^^0^B65006931
"BLD",2361,"KRN",9.8,"NM",2,0)
VAFCQRY3^^0^B54545905
"BLD",2361,"KRN",9.8,"NM",3,0)
VAFCQRY4^^0^B12814510
"BLD",2361,"KRN",9.8,"NM",4,0)
VAFCQRY^^0^B12975534
"BLD",2361,"KRN",9.8,"NM",5,0)
VAFCPDAT^^0^B37914186
"BLD",2361,"KRN",9.8,"NM",6,0)
VAFCSB^^0^B7574512
"BLD",2361,"KRN",9.8,"NM",7,0)
VAFCTFIN^^0^B22721949
"BLD",2361,"KRN",9.8,"NM",8,0)
DGFCPROT^^0^B4864093
"BLD",2361,"KRN",9.8,"NM","B","DGFCPROT",8)

"BLD",2361,"KRN",9.8,"NM","B","VAFCPDAT",5)

"BLD",2361,"KRN",9.8,"NM","B","VAFCQRY",4)

"BLD",2361,"KRN",9.8,"NM","B","VAFCQRY1",1)

"BLD",2361,"KRN",9.8,"NM","B","VAFCQRY3",2)

"BLD",2361,"KRN",9.8,"NM","B","VAFCQRY4",3)

"BLD",2361,"KRN",9.8,"NM","B","VAFCSB",6)

"BLD",2361,"KRN",9.8,"NM","B","VAFCTFIN",7)

"BLD",2361,"KRN",19,0)
19
"BLD",2361,"KRN",19.1,0)
19.1
"BLD",2361,"KRN",101,0)
101
"BLD",2361,"KRN",101,"NM",0)
^9.68A^11^11
"BLD",2361,"KRN",101,"NM",1,0)
VAFC EXCPT MERGE MENU^^0
"BLD",2361,"KRN",101,"NM",2,0)
VAFC EXCPT MERGE ALL^^0
"BLD",2361,"KRN",101,"NM",3,0)
VAFC EXCPT MERGE SELECTED^^0
"BLD",2361,"KRN",101,"NM",4,0)
VAFC EXCPT MERGE REJECT^^0
"BLD",2361,"KRN",101,"NM",5,0)
VAFC EXCPT MERGE COMPLETE^^0
"BLD",2361,"KRN",101,"NM",6,0)
VAFC EXCPT HINQ INQUIRY^^0
"BLD",2361,"KRN",101,"NM",7,0)
VAFC EXCPT PATIENT AUDIT^^0
"BLD",2361,"KRN",101,"NM",8,0)
VAFC EXCPT MERGE UNDO^^0
"BLD",2361,"KRN",101,"NM",9,0)
VAFC EXCPT PATIENT INQUIRY^^0
"BLD",2361,"KRN",101,"NM",10,0)
VAFC EXCPT DISPLAY ONLY QUERY^^0
"BLD",2361,"KRN",101,"NM",11,0)
VAFC EXCPT MPI/PD DATA^^0
"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT DISPLAY ONLY QUERY",10)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT HINQ INQUIRY",6)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE ALL",2)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE COMPLETE",5)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE MENU",1)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE REJECT",4)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE SELECTED",3)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MERGE UNDO",8)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT MPI/PD DATA",11)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT PATIENT AUDIT",7)

"BLD",2361,"KRN",101,"NM","B","VAFC EXCPT PATIENT INQUIRY",9)

"BLD",2361,"KRN",409.61,0)
409.61
"BLD",2361,"KRN",771,0)
771
"BLD",2361,"KRN",870,0)
870
"BLD",2361,"KRN",8989.51,0)
8989.51
"BLD",2361,"KRN",8989.52,0)
8989.52
"BLD",2361,"KRN",8994,0)
8994
"BLD",2361,"KRN","B",.4,.4)

"BLD",2361,"KRN","B",.401,.401)

"BLD",2361,"KRN","B",.402,.402)

"BLD",2361,"KRN","B",.403,.403)

"BLD",2361,"KRN","B",.5,.5)

"BLD",2361,"KRN","B",.84,.84)

"BLD",2361,"KRN","B",3.6,3.6)

"BLD",2361,"KRN","B",3.8,3.8)

"BLD",2361,"KRN","B",9.2,9.2)

"BLD",2361,"KRN","B",9.8,9.8)

"BLD",2361,"KRN","B",19,19)

"BLD",2361,"KRN","B",19.1,19.1)

"BLD",2361,"KRN","B",101,101)

"BLD",2361,"KRN","B",409.61,409.61)

"BLD",2361,"KRN","B",771,771)

"BLD",2361,"KRN","B",870,870)

"BLD",2361,"KRN","B",8989.51,8989.51)

"BLD",2361,"KRN","B",8989.52,8989.52)

"BLD",2361,"KRN","B",8994,8994)

"BLD",2361,"QUES",0)
^9.62^^
"BLD",2361,"REQB",0)
^9.611^5^4
"BLD",2361,"REQB",2,0)
DG*5.3*639^2
"BLD",2361,"REQB",3,0)
DG*5.3*505^2
"BLD",2361,"REQB",4,0)
DG*5.3*711^2
"BLD",2361,"REQB",5,0)
DG*5.3*526^2
"BLD",2361,"REQB","B","DG*5.3*505",3)

"BLD",2361,"REQB","B","DG*5.3*526",5)

"BLD",2361,"REQB","B","DG*5.3*639",2)

"BLD",2361,"REQB","B","DG*5.3*711",4)

"KRN",101,1059,-1)
0^1
"KRN",101,1059,0)
VAFC EXCPT MERGE MENU^PIMS EXCEPTION MERGE MENU^^M^^^^^^^^REGISTRATION
"KRN",101,1059,1,0)
^101.06^2^2^3070402^^^^
"KRN",101,1059,1,1,0)
This protocol is the Clinical Information Resource Network (CIRN) 
"KRN",101,1059,1,2,0)
Patient Data Review [VAFC EXCEPTION HANDLER] option merge menu.
"KRN",101,1059,4)
26^4
"KRN",101,1059,10,0)
^101.01PAI^11^11
"KRN",101,1059,10,1,0)
1060^MA^21^
"KRN",101,1059,10,1,"^")
VAFC EXCPT MERGE ALL
"KRN",101,1059,10,2,0)
1061^MS^11^
"KRN",101,1059,10,2,"^")
VAFC EXCPT MERGE SELECTED
"KRN",101,1059,10,3,0)
1062^RJ^12^
"KRN",101,1059,10,3,"^")
VAFC EXCPT MERGE REJECT
"KRN",101,1059,10,4,0)
1063^MC^22^
"KRN",101,1059,10,4,"^")
VAFC EXCPT MERGE COMPLETE
"KRN",101,1059,10,5,0)
1198^HI^30^
"KRN",101,1059,10,5,"^")
VAFC EXCPT HINQ INQUIRY
"KRN",101,1059,10,6,0)
1201^AUD^35^
"KRN",101,1059,10,6,"^")
VAFC EXCPT PATIENT AUDIT
"KRN",101,1059,10,7,0)
1248^UN^23^
"KRN",101,1059,10,7,"^")
VAFC EXCPT MERGE UNDO
"KRN",101,1059,10,8,0)
1728^PI^40^
"KRN",101,1059,10,8,"^")
VAFC EXCPT PATIENT INQUIRY
"KRN",101,1059,10,9,0)
1753^DO^45^
"KRN",101,1059,10,9,"^")
VAFC EXCPT DISPLAY ONLY QUERY
"KRN",101,1059,10,11,0)
1864^DI^55^
"KRN",101,1059,10,11,"^")
VAFC EXCPT MPI/PD DATA
"KRN",101,1059,24)
I 1 X:$D(^ORD(101,+$P(^ORD(101,DA(1),10,DA,0),"^",1),24)) ^(24)
"KRN",101,1059,26)
D SHOW^VALM
"KRN",101,1059,28)
Select Action: 
"KRN",101,1059,99)
60722,38725
"KRN",101,1060,-1)
0^2
"KRN",101,1060,0)
VAFC EXCPT MERGE ALL^Merge All Differences^^A^^^^^^^^REGISTRATION
"KRN",101,1060,1,0)
^^3^3^2990212^^^^
"KRN",101,1060,1,1,0)
This protocol allows the user to merge all differences for a selected 
"KRN",101,1060,1,2,0)
patient in the Clinical Information Resource Network (CIRN) Patient Data 
"KRN",101,1060,1,3,0)
Review [VAFC EXCEPTION HANDLER] option.
"KRN",101,1060,15)

"KRN",101,1060,20)
D MRGALL^VAFCMGA
"KRN",101,1060,99)
59401,53996
"KRN",101,1061,-1)
0^3
"KRN",101,1061,0)
VAFC EXCPT MERGE SELECTED^Selective Merge^^A^^^^^^^^REGISTRATION
"KRN",101,1061,1,0)
^^3^3^2990212^^^^
"KRN",101,1061,1,1,0)
This protocol allows the user to choose selected fields so that they 
"KRN",101,1061,1,2,0)
will merge in the Clinical Information Resource Network (CIRN) Patient 
"KRN",101,1061,1,3,0)
Data Review [VAFC EXCEPTION HANDLER] option.
"KRN",101,1061,15)

"KRN",101,1061,20)
D MRGSLCT^VAFCMGA
"KRN",101,1061,24)
I VALMPGE'=3
"KRN",101,1061,99)
59401,53996
"KRN",101,1062,-1)
0^4
"KRN",101,1062,0)
VAFC EXCPT MERGE REJECT^Reject Merge^^A^^^^^^^^REGISTRATION
"KRN",101,1062,1,0)
^^4^4^2990212^^^^
"KRN",101,1062,1,1,0)
This protocol allows the user to reject differences for a selected 
"KRN",101,1062,1,2,0)
patient so that they will not merge. This is done using the Clinical 
"KRN",101,1062,1,3,0)
Information Resource Network (CIRN) Patient Data Review [VAFC EXCEPTION 
"KRN",101,1062,1,4,0)
HANDLER] option.
"KRN",101,1062,20)
D REJECT^VAFCMGA
"KRN",101,1062,24)
I $D(@VALMAR@("E2F"))
"KRN",101,1062,99)
59401,53996
"KRN",101,1063,-1)
0^5
"KRN",101,1063,0)
VAFC EXCPT MERGE COMPLETE^Merge Completed^^A^^^^^^^^REGISTRATION
"KRN",101,1063,1,0)
^^3^3^2990212^^^^
"KRN",101,1063,1,1,0)
This protocol allows the user to verify that the merge is complete 
"KRN",101,1063,1,2,0)
for a selected patient in the Clinical Information Resource Network 
"KRN",101,1063,1,3,0)
(CIRN) Patient Data Review [VAFC EXCEPTION HANDLER] option.
"KRN",101,1063,20)
D COMPLETE^VAFCMGA
"KRN",101,1063,99)
59401,53996
"KRN",101,1198,-1)
0^6
"KRN",101,1198,0)
VAFC EXCPT HINQ INQUIRY^Hinq Inquiry^^A^^^^^^^^REGISTRATION
"KRN",101,1198,1,0)
^^3^3^2990212^^^^
"KRN",101,1198,1,1,0)
This protocol allows the user to do a HINQ inquiry for a selected 
"KRN",101,1198,1,2,0)
patient in the Clinical Information Resource Network (CIRN) Patient 
"KRN",101,1198,1,3,0)
Data Review [VAFC EXCEPTION HANDLER] option.
"KRN",101,1198,20)
D HI^VAFCMGA
"KRN",101,1198,99)
59401,53996
"KRN",101,1201,-1)
0^7
"KRN",101,1201,0)
VAFC EXCPT PATIENT AUDIT^Patient Audit^^A^^^^^^^^REGISTRATION
"KRN",101,1201,1,0)
^^3^3^2990212^^^^
"KRN",101,1201,1,1,0)
This protocol allows the user to audit the differences made in the 
"KRN",101,1201,1,2,0)
Clinical Information Resource Network (CIRN) Patient Data Review 
"KRN",101,1201,1,3,0)
[VAFC EXCEPTION HANDLER] option.
"KRN",101,1201,20)
D RAUD^VAFCMGA1
"KRN",101,1201,99)
59401,53996
"KRN",101,1248,-1)
0^8
"KRN",101,1248,0)
VAFC EXCPT MERGE UNDO^Undo Merge^^A^^^^^^^^REGISTRATION
"KRN",101,1248,1,0)
^^3^3^2990212^^^^
"KRN",101,1248,1,1,0)
This protocol allows the user to undo selected merges in the Clinical 
"KRN",101,1248,1,2,0)
Information Resource Network (CIRN) Patient Data Review [VAFC EXCEPTION 
"KRN",101,1248,1,3,0)
HANDLER] option.
"KRN",101,1248,20)
D UNDO^VAFCMGA1
"KRN",101,1248,24)
I $D(^TMP("VAFC-UNDO"))
"KRN",101,1248,99)
59401,53996
"KRN",101,1728,-1)
0^9
"KRN",101,1728,0)
VAFC EXCPT PATIENT INQUIRY^Patient Inquiry^^A^^^^^^^^REGISTRATION
"KRN",101,1728,1,0)
^101.06^2^2^3001207^^
"KRN",101,1728,1,1,0)
This protocol allows the user to do a Patient Inquiry from the
"KRN",101,1728,1,2,0)
Patient Data Review option [VAFC EXCEPTION HANDLER].
"KRN",101,1728,20)
D INQ^VAFCEHLM
"KRN",101,1728,99)
59401,53996
"KRN",101,1753,-1)
0^10
"KRN",101,1753,0)
VAFC EXCPT DISPLAY ONLY QUERY^MPI Display Only Query^^A^^^^^^^^REGISTRATION
"KRN",101,1753,1,0)
^101.06^3^3^3030204^^
"KRN",101,1753,1,1,0)
This protocol permits the user to perform a Display Only Query
"KRN",101,1753,1,2,0)
to the MPI from the Patient Data Review option [VAFC EXCEPTION
"KRN",101,1753,1,3,0)
HANDLER].
"KRN",101,1753,20)
D DISP^VAFCEHLM
"KRN",101,1753,99)
59401,53996
"KRN",101,1864,-1)
0^11
"KRN",101,1864,0)
VAFC EXCPT MPI/PD DATA^MPI/PD Data Inquiry^^A^^^^^^^^REGISTRATION
"KRN",101,1864,1,0)
^101.06^2^2^3030909^^
"KRN",101,1864,1,1,0)
This protocol displays Master Patient Index/Patient
"KRN",101,1864,1,2,0)
Demographics (MPI/PD) information for the selected patient.
"KRN",101,1864,2,0)
^101.02A^1^1
"KRN",101,1864,2,1,0)
DI
"KRN",101,1864,2,"B","DI",1)

"KRN",101,1864,20)
D PDAT^VAFCMGA1
"KRN",101,1864,99)
59401,53996
"MBREQ")
0
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813^2970721^12541
"PKG",5,22,1,"PAH",1,0)
707^3070605^12584
"PKG",5,22,1,"PAH",1,1,0)
^^3^3^3070605
"PKG",5,22,1,"PAH",1,1,1,0)
ENHANCEMENT TO VISTA PATIENT UPDATE MESSAGING
"PKG",5,22,1,"PAH",1,1,2,0)
Refer to patch DG*5.3*707 in the FORUM Patch Module for a complete 
"PKG",5,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
8
"RTN","DGFCPROT")
0^8^B4864093^B4428496
"RTN","DGFCPROT",1,0)
DGFCPROT ;FLB/ALB-DG Field Monitor cross-reference initialing routine. ; 01 AUG 2000 ; 6/18/03 9:08am
"RTN","DGFCPROT",2,0)
 ;;5.3;Registration;**273,526,707**;AUG 13, 1993;Build 14
"RTN","DGFCPROT",3,0)
 ;
"RTN","DGFCPROT",4,0)
FC(DGDA,DGFILE,DGFIELD,DGTYPE,DGDTH,DGUSER,DGX,DGX1,DGX2,DGOPT) ; Field change listener
"RTN","DGFCPROT",5,0)
 ;Input: DGDA = DA array as exists during Fileman editing
"RTN","DGFCPROT",6,0)
 ;Input: DGFILE = File or subfile number where changed field resides
"RTN","DGFCPROT",7,0)
 ;Input: DGFIELD = Number of changed field
"RTN","DGFCPROT",8,0)
 ;Input: DGTYPE = Type of cross reference action ("SET" or "KILL")
"RTN","DGFCPROT",9,0)
 ;Input: DGDTH = date/time of change in $Horolog format
"RTN","DGFCPROT",10,0)
 ;Input: DGUSER = DUZ of user that made the change
"RTN","DGFCPROT",11,0)
 ;Input: DGX = X array as documented for Fileman new style x-refs
"RTN","DGFCPROT",12,0)
 ;Input: DGX1 = X1 array as documented for Fileman new style x-refs
"RTN","DGFCPROT",13,0)
 ;Input: DGX2 = X2 array as documented for Fileman new style x-refs
"RTN","DGFCPROT",14,0)
 ;Input: DGOPT = current option in "option_name^menu_text" format
"RTN","DGFCPROT",15,0)
 ;
"RTN","DGFCPROT",16,0)
 ;This utility invokes the DG FIELD MONITOR event point protocol.
"RTN","DGFCPROT",17,0)
 ;The DG variables as described above are made available to the
"RTN","DGFCPROT",18,0)
 ;subscribers of this event point.
"RTN","DGFCPROT",19,0)
 ;
"RTN","DGFCPROT",20,0)
 ;NOTE: This event point is not invoked if the action type is "KILL"
"RTN","DGFCPROT",21,0)
 ;      and the old field value is null or the new value is not null.
"RTN","DGFCPROT",22,0)
 ;      It is not invoked if the action type is "SET" and the new 
"RTN","DGFCPROT",23,0)
 ;      field value is null.
"RTN","DGFCPROT",24,0)
 ;
"RTN","DGFCPROT",25,0)
 Q:DGX=""  ;Quit if setting or killing null value
"RTN","DGFCPROT",26,0)
 ;
"RTN","DGFCPROT",27,0)
 I DGTYPE="KILL",DGX2]"" Q  ;Skip kill action on data update
"RTN","DGFCPROT",28,0)
 ;
"RTN","DGFCPROT",29,0)
 ;Manipulate DGTYPE value
"RTN","DGFCPROT",30,0)
 S DGTYPE=$S(DGTYPE="KILL":"DELETE",DGTYPE="SET":"ADD",1:DGTYPE)
"RTN","DGFCPROT",31,0)
 I DGX1]"",DGX2]"" S DGTYPE="UPDATE"
"RTN","DGFCPROT",32,0)
 ;
"RTN","DGFCPROT",33,0)
 S DGOPT=$P(DGOPT,U,1,2) S:DGOPT="" DGOPT="-1^Unknown"  ;Current option
"RTN","DGFCPROT",34,0)
 ;
"RTN","DGFCPROT",35,0)
 ;Task off (Taskman) driver routine.
"RTN","DGFCPROT",36,0)
 N ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,ZTSK,DGVAR,BXREF,SUBSCR,ZTREQ
"RTN","DGFCPROT",37,0)
 S ZTRTN="INIT^DGFCPROT",ZTDESC="DG Field monitor task"
"RTN","DGFCPROT",38,0)
 S ZTIO="DG FIELD MONITOR",ZTDTH=$$NOW^XLFDT
"RTN","DGFCPROT",39,0)
 F DGVAR="DGDA","DGDA(","DGFILE","DGFIELD","DGTYPE","DGDTH","DGUSER","DGX","DGX(","DGX1","DGX1(","DGX2","DGX2(","DGOPT" S ZTSAVE(DGVAR)=""
"RTN","DGFCPROT",40,0)
 ;If there are no subscribers, do not call Taskman
"RTN","DGFCPROT",41,0)
 I $D(VAFCA08) S ZTSAVE("VAFCA08")=VAFCA08 ;**707
"RTN","DGFCPROT",42,0)
 I $D(VAFHCA08) S ZTSAVE("VAFHCA08")=VAFHCA08 ;**707
"RTN","DGFCPROT",43,0)
 S BXREF=0,BXREF=$O(^ORD(101,"B","DG FIELD MONITOR",BXREF))
"RTN","DGFCPROT",44,0)
 S SUBSCR=0,SUBSCR=$O(^ORD(101,BXREF,10,SUBSCR))
"RTN","DGFCPROT",45,0)
 I 'SUBSCR Q
"RTN","DGFCPROT",46,0)
 D ^%ZTLOAD
"RTN","DGFCPROT",47,0)
 Q
"RTN","DGFCPROT",48,0)
 ;
"RTN","DGFCPROT",49,0)
INIT N X
"RTN","DGFCPROT",50,0)
 S X=$O(^ORD(101,"B","DG FIELD MONITOR",0))_";ORD(101," D EN1^XQOR
"RTN","DGFCPROT",51,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGFCPROT",52,0)
 K DGDA,DGFILE,DGFIELD,DGTYPE,DGDTH,DGUSER,DGX,DGX1,DGX2,DGOPT
"RTN","DGFCPROT",53,0)
 Q
"RTN","VAFCPDAT")
0^5^B37914186^B37000539
"RTN","VAFCPDAT",1,0)
VAFCPDAT ;BIR/CML/ALS-DISPLAY MPI/PD INFORMATION FOR SELECTED PATIENT ;10/24/02  13:13
"RTN","VAFCPDAT",2,0)
 ;;5.3;Registration;**333,414,474,505,707**;Aug 13, 1993;Build 14
"RTN","VAFCPDAT",3,0)
 ;Registration has IA #3299 for MPI/PD to call START^VAFCPDAT
"RTN","VAFCPDAT",4,0)
 ;
"RTN","VAFCPDAT",5,0)
 ;variable DFN is not NEWed or KILLed in this routine as that variable is passed in
"RTN","VAFCPDAT",6,0)
 ;
"RTN","VAFCPDAT",7,0)
MAIN ; Entry point with device call
"RTN","VAFCPDAT",8,0)
 S NOTRPC=1
"RTN","VAFCPDAT",9,0)
 K ZTSAVE S ZTSAVE("DFN")=""
"RTN","VAFCPDAT",10,0)
 D EN^XUTMDEVQ("START^VAFCPDAT","Print MPI/PD Patient Data",.ZTSAVE)
"RTN","VAFCPDAT",11,0)
 K NOTRPC
"RTN","VAFCPDAT",12,0)
 Q
"RTN","VAFCPDAT",13,0)
 ;
"RTN","VAFCPDAT",14,0)
START ;Entry point without device call, used for RPC calls
"RTN","VAFCPDAT",15,0)
 S $P(LN,"=",80)="",$P(LN2,"=",60)="",QFLG=0
"RTN","VAFCPDAT",16,0)
 D NOW^%DTC S HDT=$$FMTE^XLFDT($E(%,1,12))
"RTN","VAFCPDAT",17,0)
 S SITE=$$SITE^VASITE(),SITENAM=$P(SITE,"^",2),SITENUM=$P(SITE,"^",3),SITEIEN=$P(SITE,"^")
"RTN","VAFCPDAT",18,0)
 I +DFN<0 D  Q
"RTN","VAFCPDAT",19,0)
 .I $D(NOTRPC) W @IOF,!," "
"RTN","VAFCPDAT",20,0)
 .W !,"ICN ",$G(ICN)," does not exist at ",SITENAM,"."
"RTN","VAFCPDAT",21,0)
 .W !,"Search date: ",HDT,!,LN
"RTN","VAFCPDAT",22,0)
 S DIC=2,DR=".01;.02;.03;.09;.111;.112;.113;.114;.115;.1112;.131;.313;.351;994;.0907;.0906",DA=DFN,DIQ(0)="EI",DIQ="DNODE"  ;**707
"RTN","VAFCPDAT",23,0)
 N NAME,SSN,DOB,SEX,CLAIM,DOD,ICN,STR1,STR2,STR3,CTY,ST,ZIP,PHN,MBI,SSNVER,PREAS  ;**707
"RTN","VAFCPDAT",24,0)
 D EN^DIQ1 K DIC,DR,DA,DIQ
"RTN","VAFCPDAT",25,0)
 S NAME=$G(DNODE(2,DFN,.01,"E")),SSN=$G(DNODE(2,DFN,.09,"E"))
"RTN","VAFCPDAT",26,0)
 S DOB=$$FMTE^XLFDT($G(DNODE(2,DFN,.03,"I")))
"RTN","VAFCPDAT",27,0)
 S MBI=$G(DNODE(2,DFN,994,"I")),MBI=$S(MBI="Y":"YES",MBI="N":"NO",1:"NULL")  ;**707
"RTN","VAFCPDAT",28,0)
 S SEX=$G(DNODE(2,DFN,.02,"E")),DOD=$G(DNODE(2,DFN,.351,"E"))
"RTN","VAFCPDAT",29,0)
 S CLAIM=$G(DNODE(2,DFN,.313,"E")) S:CLAIM="" CLAIM="None"
"RTN","VAFCPDAT",30,0)
 S STR1=$G(DNODE(2,DFN,.111,"E")),STR2=$G(DNODE(2,DFN,.112,"E")),STR3=$G(DNODE(2,DFN,.113,"E"))
"RTN","VAFCPDAT",31,0)
 S CTY=$G(DNODE(2,DFN,.114,"E")),ST=$G(DNODE(2,DFN,.115,"E")),ZIP=$G(DNODE(2,DFN,.1112,"E"))
"RTN","VAFCPDAT",32,0)
 S PHN=$G(DNODE(2,DFN,.131,"E"))
"RTN","VAFCPDAT",33,0)
 S SSNVER=$G(DNODE(2,DFN,.0907,"E"))  ;**707
"RTN","VAFCPDAT",34,0)
 S PREAS=$G(DNODE(2,DFN,.0906,"E"))  ;**707
"RTN","VAFCPDAT",35,0)
 S MNODE=$$MPINODE^MPIFAPI(DFN) I +MNODE=-1 S MNODE="^^^^^"
"RTN","VAFCPDAT",36,0)
 S (ICN,CMOR,SCN,SCORE,SCRDT,DIFF)=""
"RTN","VAFCPDAT",37,0)
 S ICN=$P($G(MNODE),"^") S:ICN="" ICN="None"
"RTN","VAFCPDAT",38,0)
 S CMOR=$$GET1^DIQ(4,+$P($G(MNODE),"^",3)_",",.01) S:CMOR="" CMOR="None"
"RTN","VAFCPDAT",39,0)
 I $E(ICN,1,3)=SITENUM S GOT=0 D
"RTN","VAFCPDAT",40,0)
 . I $P($G(MNODE),"^",4)=""!('$D(^DPT("AICNL",1,DFN))) S ICN=ICN_"**"
"RTN","VAFCPDAT",41,0)
 ;
"RTN","VAFCPDAT",42,0)
 I $D(NOTRPC) W @IOF,!
"RTN","VAFCPDAT",43,0)
 W !,"MPI/PD Data for: ",NAME,"  (DFN #",DFN,")"
"RTN","VAFCPDAT",44,0)
 ; check for patient sensitivity and user security
"RTN","VAFCPDAT",45,0)
 N RESULT,RGSENS,SENSTV,DA,DR,DIC,DIQ,VAFCSEN
"RTN","VAFCPDAT",46,0)
 D PTSEC^DGSEC4(.RESULT,DFN,0,"MPI/PD Patient Inquiry^MPI/PD Patient Inquiry")
"RTN","VAFCPDAT",47,0)
 I RESULT(1)=-1 W !!,"Access denied: Required parameters not defined" G QUIT
"RTN","VAFCPDAT",48,0)
 I RESULT(1)>0 W ?50,"***PATIENT MARKED SENSITIVE***"
"RTN","VAFCPDAT",49,0)
 I RESULT(1)=3 W !!,"Access not allowed on your own PATIENT (#2) file entry" G QUIT
"RTN","VAFCPDAT",50,0)
 I RESULT(1)=4 W !!,"Access denied: Your SSN is not defined" G QUIT
"RTN","VAFCPDAT",51,0)
 I RESULT(1)<3 D
"RTN","VAFCPDAT",52,0)
 . I RESULT(1)=1 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",2) ;IA #3027
"RTN","VAFCPDAT",53,0)
 . I RESULT(1)=2 D NOTICE^DGSEC4(.VAFCSEN,DFN,"RPC - VAFC REMOTE PDAT FROM THE MPI^MPI/PD Patient Inquiry (Remote)",3) ;IA #3027
"RTN","VAFCPDAT",54,0)
 W !,"Printed ",HDT," at ",SITENAM,!,LN
"RTN","VAFCPDAT",55,0)
 S $Y=$Y+1
"RTN","VAFCPDAT",56,0)
 ;next 7 lines modified for **707
"RTN","VAFCPDAT",57,0)
 W !,"ICN    : ",ICN,?40,"CMOR: ",CMOR
"RTN","VAFCPDAT",58,0)
 W !,"SSN    : ",SSN
"RTN","VAFCPDAT",59,0)
 I SSNVER]"" W !?9,"SSN Verification Status: ",SSNVER
"RTN","VAFCPDAT",60,0)
 I SSNVER="",PREAS]"" W !?9,"Pseudo SSN Reason: ",PREAS
"RTN","VAFCPDAT",61,0)
 I SSNVER]"",PREAS]"" W !?9,"Pseudo SSN Reason      : ",PREAS
"RTN","VAFCPDAT",62,0)
 W !,"Sex    : ",SEX
"RTN","VAFCPDAT",63,0)
 W !,"Claim #: ",CLAIM
"RTN","VAFCPDAT",64,0)
 W !,"Date of Birth: ",DOB
"RTN","VAFCPDAT",65,0)
 I DOD]"" W !,"Date of Death: ",DOD
"RTN","VAFCPDAT",66,0)
 I MBI]"" W !,"Multiple Birth Indicator: ",MBI  ;**707
"RTN","VAFCPDAT",67,0)
 W !,"Address: ",STR1
"RTN","VAFCPDAT",68,0)
 I STR2'="" W !?9,STR2
"RTN","VAFCPDAT",69,0)
 I STR3'="" W !?9,STR3
"RTN","VAFCPDAT",70,0)
 I CTY'="" W !?9,$E(CTY,1,20)_", "_$G(ST)_" "_$G(ZIP)
"RTN","VAFCPDAT",71,0)
 I PHN'="" W !,"Phone #: ",PHN
"RTN","VAFCPDAT",72,0)
 I $G(IOSL)<30&($E(IOST,1,2)="C-") D
"RTN","VAFCPDAT",73,0)
 .I $Y>23 D
"RTN","VAFCPDAT",74,0)
 ..S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",75,0)
 ...S SS=22-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",76,0)
 ..S $Y=0
"RTN","VAFCPDAT",77,0)
 I QFLG=1 G QUIT
"RTN","VAFCPDAT",78,0)
 ;
"RTN","VAFCPDAT",79,0)
TF ;List Treating Facilities for this patient
"RTN","VAFCPDAT",80,0)
 D TFHDR
"RTN","VAFCPDAT",81,0)
 K TFARR
"RTN","VAFCPDAT",82,0)
 S TF=0 F  S TF=$O(^DGCN(391.91,"APAT",DFN,TF)) Q:'TF  D
"RTN","VAFCPDAT",83,0)
 .S TFIEN=$O(^DGCN(391.91,"APAT",DFN,TF,0))
"RTN","VAFCPDAT",84,0)
 . S DIC="^DGCN(391.91,",DR=".02;.03;.07",DA=TFIEN,DIQ(0)="EI",DIQ="TFDATA"
"RTN","VAFCPDAT",85,0)
 . D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",86,0)
 . S INST="",STATION=""
"RTN","VAFCPDAT",87,0)
 . S INST=$G(TFDATA(391.91,TFIEN,.02,"I"))
"RTN","VAFCPDAT",88,0)
 . I INST'="" D
"RTN","VAFCPDAT",89,0)
 .. S DIC=4,DR="99",DA=INST,DIQ(0)="E",DIQ="STA"
"RTN","VAFCPDAT",90,0)
 .. D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",91,0)
 .. S STATION=$G(STA(4,INST,99,"E"))
"RTN","VAFCPDAT",92,0)
 . S TFNM=$G(TFDATA(391.91,TFIEN,.02,"E"))
"RTN","VAFCPDAT",93,0)
 . S LSTDT=$G(TFDATA(391.91,TFIEN,.03,"I")) S:LSTDT="" LSTDT="none found"
"RTN","VAFCPDAT",94,0)
 . S LSTSORT=9999999
"RTN","VAFCPDAT",95,0)
 . I +LSTDT S LSTSORT=9999999-LSTDT,LSTDT=$$FMTE^XLFDT($E(LSTDT,1,12))
"RTN","VAFCPDAT",96,0)
 . S REACODE=$G(TFDATA(391.91,TFIEN,.07,"E")) S REASON="none found"
"RTN","VAFCPDAT",97,0)
 . I REACODE'="" D
"RTN","VAFCPDAT",98,0)
 .. S DIC="^VAT(391.72,",DIC(0)="Z",X=REACODE D ^DIC K DIC,X
"RTN","VAFCPDAT",99,0)
 .. S REASON=$P($G(Y(0)),"^",4)
"RTN","VAFCPDAT",100,0)
 . S TFARR(LSTSORT,TFNM)=TFIEN_"^"_REASON_"^"_$G(STATION)_"^"_LSTDT
"RTN","VAFCPDAT",101,0)
 I '$D(TFARR) W !,"No Treating Facilities found." G SUB
"RTN","VAFCPDAT",102,0)
 S LSTSORT=0 F  S LSTSORT=$O(TFARR(LSTSORT)) Q:'LSTSORT  D  G:QFLG QUIT
"RTN","VAFCPDAT",103,0)
 .S TFNM="" F  S TFNM=$O(TFARR(LSTSORT,TFNM)) Q:TFNM=""  D  Q:QFLG
"RTN","VAFCPDAT",104,0)
 ..S REASON=$P(TFARR(LSTSORT,TFNM),"^",2)
"RTN","VAFCPDAT",105,0)
 ..S STATION=$P(TFARR(LSTSORT,TFNM),"^",3)
"RTN","VAFCPDAT",106,0)
 ..S LSTDT=$P(TFARR(LSTSORT,TFNM),"^",4)
"RTN","VAFCPDAT",107,0)
 ..I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",108,0)
 ...S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",109,0)
 ...W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D TFHDR
"RTN","VAFCPDAT",110,0)
 ..W !,$E(TFNM,1,20),?22,$G(STATION),?32,LSTDT,?54,REASON
"RTN","VAFCPDAT",111,0)
SUB ;removed listing of subscribers for RG*1.0*23
"RTN","VAFCPDAT",112,0)
HIS ;find ICN history
"RTN","VAFCPDAT",113,0)
 I '$O(^DPT(DFN,"MPIFHIS",0)) G CONT
"RTN","VAFCPDAT",114,0)
 ;
"RTN","VAFCPDAT",115,0)
 I $Y+4>IOSL&($E(IOST,1,2)="C-") D  G:QFLG QUIT
"RTN","VAFCPDAT",116,0)
 .S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",117,0)
 .W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2
"RTN","VAFCPDAT",118,0)
 D ICNHDR
"RTN","VAFCPDAT",119,0)
 S HIS=0 F  S HIS=$O(^DPT(DFN,"MPIFHIS",HIS)) Q:'HIS  D  G:QFLG QUIT
"RTN","VAFCPDAT",120,0)
 .S DIC=2,DR="992",DR(2.0992)=".01;3",DA=DFN,DA(2.0992)=HIS
"RTN","VAFCPDAT",121,0)
 .S DIQ(0)="E",DIQ="HISNODE"
"RTN","VAFCPDAT",122,0)
 .D EN^DIQ1 K DIC,DA,DR,DIQ
"RTN","VAFCPDAT",123,0)
 .S HISICN=$G(HISNODE(2.0992,HIS,.01,"E"))
"RTN","VAFCPDAT",124,0)
 .S HISDT=$G(HISNODE(2.0992,HIS,3,"E"))
"RTN","VAFCPDAT",125,0)
 .I $Y+3>IOSL&($E(IOST,1,2)="C-") D  Q:QFLG
"RTN","VAFCPDAT",126,0)
 ..S LNQ=22 D SS Q:QFLG
"RTN","VAFCPDAT",127,0)
 ..W @IOF,!,"MPI/PD data for: ",NAME,"  (DFN #",DFN,")",!,LN2 D ICNHDR
"RTN","VAFCPDAT",128,0)
 .W !,HISICN I HISDT]"" W "  - changed ",HISDT
"RTN","VAFCPDAT",129,0)
 ;
"RTN","VAFCPDAT",130,0)
CONT ;Continue to VAFCPDT2 for CMOR data and extended data
"RTN","VAFCPDAT",131,0)
 D CMORHIS^VAFCPDT2
"RTN","VAFCPDAT",132,0)
DONE ;
"RTN","VAFCPDAT",133,0)
 I QFLG G QUIT
"RTN","VAFCPDAT",134,0)
 I ($E(IOST,1,2)="C-") S LNQ=24 D SS
"RTN","VAFCPDAT",135,0)
 ;
"RTN","VAFCPDAT",136,0)
QUIT ;
"RTN","VAFCPDAT",137,0)
 K %,CMOR,DIC,DIR,DIRUT,DNODE,GOT,HDT,HIS,HISDT,HISICN,JJ,LIEN,LINST
"RTN","VAFCPDAT",138,0)
 K LN,LSTDT,MNODE,REACODE,REASON,SCN,SCORE,SITE,SITEIEN,SITENAM,SITENUM
"RTN","VAFCPDAT",139,0)
 K SS,SUBN,SUBARR,TERM,TERMDT,TF,TFARR,TFDATA,TFIEN,TFNM,Y,D,CHG,CHGNODE
"RTN","VAFCPDAT",140,0)
 K HISNODE,DIFF,INST,RGDFN,SCRDT,STATION,STA,LN2,NAME,LSTSORT,LNQ,QFLG,MBI
"RTN","VAFCPDAT",141,0)
 Q
"RTN","VAFCPDAT",142,0)
TFHDR ;
"RTN","VAFCPDAT",143,0)
 W !!,"Treating Facilities:",?22,"Station:",?32,"DT Last Treated",?54,"Event Reason"
"RTN","VAFCPDAT",144,0)
 W !,"--------------------",?22,"--------",?32,"---------------",?54,"------------"
"RTN","VAFCPDAT",145,0)
 Q
"RTN","VAFCPDAT",146,0)
ICNHDR  W !!,"ICN History:",!,"------------"
"RTN","VAFCPDAT",147,0)
 Q
"RTN","VAFCPDAT",148,0)
 ;
"RTN","VAFCPDAT",149,0)
SS S DIR(0)="E" D  D ^DIR K DIR I 'Y S QFLG=1
"RTN","VAFCPDAT",150,0)
 .S SS=LNQ-$Y F JJ=1:1:SS W !
"RTN","VAFCPDAT",151,0)
 Q
"RTN","VAFCQRY")
0^4^B12975534^B10987185
"RTN","VAFCQRY",1,0)
VAFCQRY ;BIR/DLR-Query for patient demographics ;10/18/2000
"RTN","VAFCQRY",2,0)
 ;;5.3;Registration;**428,575,627,707**;Aug 13, 1993;Build 14
"RTN","VAFCQRY",3,0)
 ;   
"RTN","VAFCQRY",4,0)
IN ;process in the patient query
"RTN","VAFCQRY",5,0)
 N IEN,HLA,VAFCCNT,ICN,CLAIM,SG,VAFCER,VAFC,DFN,STATE,CITY,SUBCOMP,COMP,REP,LVL,LVL2,VAFC,SSN
"RTN","VAFCQRY",6,0)
 S VAFCCNT=1,VAFCER=1
"RTN","VAFCQRY",7,0)
 F VAFC=1:1 X HLNEXT Q:HLQUIT'>0  S SG=$E(HLNODE,1,3) D:$T(@SG)]"" @SG
"RTN","VAFCQRY",8,0)
 D CHKID^VAFCQRY2(.ICN,.SSN,.DFN)
"RTN","VAFCQRY",9,0)
 I $G(DFN)'>0 S VAFCER="-1^Unknown ICN#"_$G(ICN)_" and SSN#"_$G(SSN)
"RTN","VAFCQRY",10,0)
 S ^TMP("HLA",$J,VAFCCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(VAFCER)'>0:$P(VAFCER,"^",2),1:""),VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",11,0)
 S ^TMP("HLA",$J,VAFCCNT)=VAFCQRD,VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",12,0)
 I $G(VAFCER)>0 D BLDRSP(DFN,.VAFCCNT)
"RTN","VAFCQRY",13,0)
 D LINK^HLUTIL3(SITE,.VAFC) S IEN=$O(VAFC(0)) S HLL("LINKS",1)="^"_VAFC(IEN)
"RTN","VAFCQRY",14,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"GM",1,.HLRESLTA,"",.HL)
"RTN","VAFCQRY",15,0)
 K VAFCER,VAFCID,COMP,SITE,VAFCFS,VAFCRCV,VAFCQRD,^TMP("HLA",$J)
"RTN","VAFCQRY",16,0)
 Q
"RTN","VAFCQRY",17,0)
RESP ;Response processing initiated from the MPI.
"RTN","VAFCQRY",18,0)
 Q
"RTN","VAFCQRY",19,0)
ROUTE ;Routine logic initiated from the MPI.
"RTN","VAFCQRY",20,0)
 Q
"RTN","VAFCQRY",21,0)
BLDRSP(DFN,VAFCCNT) ;
"RTN","VAFCQRY",22,0)
 N EVN,PID,PD1,SEQ,ERR,CNT,X,PV2,RADE,LABE,PRES
"RTN","VAFCQRY",23,0)
 ;construct EVN (for TF Event Type AND Last Treatment Date)
"RTN","VAFCQRY",24,0)
 S SEQ="1,2" D BLDEVN(DFN,.SEQ,.EVN,.HL,"A19",.ERR) S ^TMP("HLA",$J,VAFCCNT)=EVN(1) S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",25,0)
 ;construct PID
"RTN","VAFCQRY",26,0)
 S SEQ="ALL" D BLDPID(DFN,1,.SEQ,.PID,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PID(1) S X=1,CNT=1 F  S X=$O(PID(X)) Q:'X  I $D(PID(X)) S ^TMP("HLA",$J,VAFCCNT,CNT)=PID(X),CNT=CNT+1
"RTN","VAFCQRY",27,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",28,0)
 ;construct PD1 **707
"RTN","VAFCQRY",29,0)
 ;S SEQ="3" D BLDPD1(DFN,.SEQ,.PD1,.HL,.ERR) S ^TMP("HLA",$J,VAFCCNT)=PD1(1)
"RTN","VAFCQRY",30,0)
 S PD1=$$PD1^VAFCSB I PD1'="" S ^TMP("HLA",$J,VAFCCNT)=PD1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",31,0)
 S PV1=$$PV1^VAFCSB I PV1'="" S ^TMP("HLA",$J,VAFCCNT)=PV1,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",32,0)
 S PV2=$$PV2^VAFCSB I PV2'="" S ^TMP("HLA",$J,VAFCCNT)=PV2,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",33,0)
 S PRES=$$PHARA^VAFCSB I PRES'="" S ^TMP("HLA",$J,VAFCCNT)=PRES,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",34,0)
 S LABE=$$LABE^VAFCSB I LABE'="" S ^TMP("HLA",$J,VAFCCNT)=LABE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",35,0)
 S RADE=$$RADE^VAFCSB I RADE'="" S ^TMP("HLA",$J,VAFCCNT)=RADE,VAFCCNT=VAFCCNT+1 ;**707
"RTN","VAFCQRY",36,0)
 ;** PATCH 575
"RTN","VAFCQRY",37,0)
 ;construct ZPD segment
"RTN","VAFCQRY",38,0)
 S SEQ="1,17,21,34" ;**707 Added 1, 21 and 34 to ZPD fields
"RTN","VAFCQRY",39,0)
 S ^TMP("HLA",$J,VAFCCNT)=$$EN1^VAFHLZPD(DFN,SEQ)
"RTN","VAFCQRY",40,0)
 S VAFCCNT=VAFCCNT+1
"RTN","VAFCQRY",41,0)
 Q
"RTN","VAFCQRY",42,0)
MSH ;process MSH segment
"RTN","VAFCQRY",43,0)
 S VAFCFS=HL("FS")
"RTN","VAFCQRY",44,0)
 S HLQ=HL("Q"),HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","VAFCQRY",45,0)
 S VAFCID=HL("MID")
"RTN","VAFCQRY",46,0)
 S COMP=$E(HL("ECH"),1)
"RTN","VAFCQRY",47,0)
 S REP=$E(HL("ECH"),2)
"RTN","VAFCQRY",48,0)
 S SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCQRY",49,0)
 S SITE=$$LKUP^XUAF4($P($P(HLNODE,HL("FS"),4),COMP))
"RTN","VAFCQRY",50,0)
 Q
"RTN","VAFCQRY",51,0)
QRD ;process QRD segment
"RTN","VAFCQRY",52,0)
 N QRD,X,IDS,WSF,ID,QRDAA,QRDNTC
"RTN","VAFCQRY",53,0)
 S VAFCQRD=HLNODE
"RTN","VAFCQRY",54,0)
 S VAFCRCV=$P(VAFCQRD,HL("FS"),5)
"RTN","VAFCQRY",55,0)
 S IDS=$P(VAFCQRD,HL("FS"),9)
"RTN","VAFCQRY",56,0)
 F X=1:1:$L(IDS,REP) S WSF=$P(IDS,REP,X) D
"RTN","VAFCQRY",57,0)
 . ;get id, assigning authority, and name type code
"RTN","VAFCQRY",58,0)
 . S ID=$P(WSF,COMP),QRDAA=$P($P(WSF,COMP,9),SUBCOMP),QRDNTC=$P(WSF,COMP,10)
"RTN","VAFCQRY",59,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","VAFCQRY",60,0)
 . I QRDAA="USVHA" D
"RTN","VAFCQRY",61,0)
 .. I QRDNTC="NI" S ICN=ID  ;National unique individual identifier
"RTN","VAFCQRY",62,0)
 .. I QRDNTC="PI" S DFN=ID  ;Patient internal identifier
"RTN","VAFCQRY",63,0)
 . I QRDAA="USSSA" D
"RTN","VAFCQRY",64,0)
 .. I QRDNTC="SS" S SSN=ID  ;Social Security number
"RTN","VAFCQRY",65,0)
 Q
"RTN","VAFCQRY",66,0)
BLDEVN(DFN,SEQ,EVN,HL,EVR,ERR) ;build EVN for TF last treatment date and event reason
"RTN","VAFCQRY",67,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",68,0)
 ; Variable list
"RTN","VAFCQRY",69,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",70,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",71,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",72,0)
 ;  EVN (passed by reference) - array location to place EVN segment result, the array can have existing values when passed.
"RTN","VAFCQRY",73,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",74,0)
 ;  EVR - event reason that triggered this message
"RTN","VAFCQRY",75,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",76,0)
 ;
"RTN","VAFCQRY",77,0)
 D BLDEVN^VAFCQRY2(DFN,SEQ,.EVN,.HL,EVR,.ERR)
"RTN","VAFCQRY",78,0)
 Q
"RTN","VAFCQRY",79,0)
BLDPD1(DFN,SEQ,PD1,HL,ERR) ;
"RTN","VAFCQRY",80,0)
 ; At this point only sequence 3 is supported
"RTN","VAFCQRY",81,0)
 ; Variable list
"RTN","VAFCQRY",82,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",83,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",84,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",85,0)
 ;  PD1 (passed by reference) - array location to place PD1 segment result, the array can have existing values when passed.
"RTN","VAFCQRY",86,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",87,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",88,0)
 ;
"RTN","VAFCQRY",89,0)
 D BLDPD1^VAFCQRY2(DFN,SEQ,.PD1,.HL,.ERR)
"RTN","VAFCQRY",90,0)
 Q
"RTN","VAFCQRY",91,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY",92,0)
 ;The required sequences 3 and 5 will be returned and at this point
"RTN","VAFCQRY",93,0)
 ;sequences 1-3,5-8,10-14,16,17,19,22-24 and 29 are supported
"RTN","VAFCQRY",94,0)
 ;
"RTN","VAFCQRY",95,0)
 ; At this point only sequence one and two are supported
"RTN","VAFCQRY",96,0)
 ; Variable list
"RTN","VAFCQRY",97,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY",98,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY",99,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY",100,0)
 ;        that will be used to build the message
"RTN","VAFCQRY",101,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY",102,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY",103,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY",104,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY",105,0)
 ;
"RTN","VAFCQRY",106,0)
 ;if this is a mismatch a null or """" should be passed in, so that
"RTN","VAFCQRY",107,0)
 ;the ICN will be removed at the site
"RTN","VAFCQRY",108,0)
 ;
"RTN","VAFCQRY",109,0)
 D BLDPID^VAFCQRY1(DFN,CNT,SEQ,.PID,.HL,.ERR)
"RTN","VAFCQRY",110,0)
 Q
"RTN","VAFCQRY1")
0^1^B65006931^B64681125
"RTN","VAFCQRY1",1,0)
VAFCQRY1 ;BIR/DLR-Query for patient demographics ;10/30/02  13:58
"RTN","VAFCQRY1",2,0)
 ;;5.3;Registration;**428,474,477,575,627,648,698,711,707**;Aug 13, 1993;Build 14
"RTN","VAFCQRY1",3,0)
 ;
"RTN","VAFCQRY1",4,0)
 ;Reference to $$GETDFNS^MPIF002 supported by IA #3634.
"RTN","VAFCQRY1",5,0)
 ;
"RTN","VAFCQRY1",6,0)
BLDPID(DFN,CNT,SEQ,PID,HL,ERR) ;build PID from File #2
"RTN","VAFCQRY1",7,0)
 ; Variable list
"RTN","VAFCQRY1",8,0)
 ;  DFN - internal PATIENT (#2) number
"RTN","VAFCQRY1",9,0)
 ;  CNT - value to be place in PID seq#1 (SET ID)
"RTN","VAFCQRY1",10,0)
 ;  SEQ - variable consisting of sequence numbers delimited by commas
"RTN","VAFCQRY1",11,0)
 ;        that will be used to build the message (default is ALL)
"RTN","VAFCQRY1",12,0)
 ;  PID (passed by reference) - array location to place PID segment
"RTN","VAFCQRY1",13,0)
 ;        result, the array can have existing values when passed.
"RTN","VAFCQRY1",14,0)
 ;   HL - array that contains the necessary HL variables (init^hlsub)
"RTN","VAFCQRY1",15,0)
 ;  ERR - array that is used to return an error
"RTN","VAFCQRY1",16,0)
 ;
"RTN","VAFCQRY1",17,0)
 N VAFCMN,VAFCMMN,SITE,VAFCZN,SSN,SITE,APID,HIST,HISTDT,VAFCHMN,NXT,NXTC,COMP,REP,SUBCOMP,STATE,CITY,CLAIM,HLECH,HLFS,HLQ,STATEIEN,SARY,LVL,LNGTH,X,STN,SITA,HLES
"RTN","VAFCQRY1",18,0)
 I '$D(SEQ) S SEQ="ALL"
"RTN","VAFCQRY1",19,0)
 I SEQ="" S SEQ="ALL"
"RTN","VAFCQRY1",20,0)
 I SEQ'="ALL" D
"RTN","VAFCQRY1",21,0)
 .; setting up temp array to hold fields to be included in message
"RTN","VAFCQRY1",22,0)
 .N POS,EN S POS=1 F  S EN=$P(SEQ,",",POS) Q:EN=""  S SARY(EN)="",POS=POS+1
"RTN","VAFCQRY1",23,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),HLQ=HL("Q"),(COMP,HL("COMP"))=$E(HL("ECH"),1)
"RTN","VAFCQRY1",24,0)
 S (SUBCOMP,HL("SUBCOMP"))=$E(HL("ECH"),4),(REP,HL("REP"))=$E(HL("ECH"),2),HLES=$E(HL("ECH"),3)
"RTN","VAFCQRY1",25,0)
 ;get Patient File MPI node
"RTN","VAFCQRY1",26,0)
 S VAFCMN=""
"RTN","VAFCQRY1",27,0)
 N X S X="MPIFAPI" X ^%ZOSF("TEST") I $T S VAFCMN=$$MPINODE^MPIFAPI(DFN)
"RTN","VAFCQRY1",28,0)
 I +VAFCMN<0 S VAFCMN=""
"RTN","VAFCQRY1",29,0)
 S VAFCZN=^DPT(DFN,0),SSN=$P(^DPT(DFN,0),"^",9)
"RTN","VAFCQRY1",30,0)
 N VAFCA,VAFCA1 D GETS^DIQ(2,DFN_",","1*","E","VAFCA") ;**698 GETTING ALIAS INFO
"RTN","VAFCQRY1",31,0)
 ;** 707 reformat alias information to include ALIAS SSN in PID-3 with a location reference to the name in PID-5
"RTN","VAFCQRY1",32,0)
 I $D(VAFCA) N CT,ENT S CT=0,ENT="" F  S ENT=$O(VAFCA(2.01,ENT)) Q:ENT=""  D
"RTN","VAFCQRY1",33,0)
 .S CT=CT+1
"RTN","VAFCQRY1",34,0)
 .S VAFCA1(CT,"NAME")=$G(VAFCA(2.01,ENT,.01,"E"))
"RTN","VAFCQRY1",35,0)
 .;I $G(VAFCA(2.01,ENT,1,"E"))'="" S VAFCA1("SSN")="",VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"E"))
"RTN","VAFCQRY1",36,0)
 .S VAFCA1(CT,"SSN")=$G(VAFCA(2.01,ENT,1,"E"))
"RTN","VAFCQRY1",37,0)
 S SITE=$$SITE^VASITE,STN=$P($$SITE^VASITE,"^",3)
"RTN","VAFCQRY1",38,0)
 N TMP F TMP=1:1:31 S APID(TMP)=""
"RTN","VAFCQRY1",39,0)
 S APID(2)=CNT
"RTN","VAFCQRY1",40,0)
 ;list of fields used for backwards compatibility with HDR
"RTN","VAFCQRY1",41,0)
 I $D(SARY(2))!(SEQ="ALL") I VAFCMN'="" S APID(3)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)  ;Patient ID
"RTN","VAFCQRY1",42,0)
 ;repeat patient ID list including ICN (NI),SSN (SS),CLAIM# (PN) AND DFN (PI)
"RTN","VAFCQRY1",43,0)
 I $D(SARY(3))!(SEQ="ALL") D
"RTN","VAFCQRY1",44,0)
 .S APID(4)=""
"RTN","VAFCQRY1",45,0)
 .;National Identifier (ICN)
"RTN","VAFCQRY1",46,0)
 .I VAFCMN'="",+VAFCMN>0 D
"RTN","VAFCQRY1",47,0)
 ..I $E($P(VAFCMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",48,0)
 ..I $E($P(VAFCMN,"^"),1,3)'=STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",49,0)
 ..S APID(4)=$P(VAFCMN,"^")_"V"_$P(VAFCMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L" D
"RTN","VAFCQRY1",50,0)
 ..;Assumption that if this is a local ICN at this point send the message with an expiration date of today, so that it will be treated as a deprecated ID and stored on the MPI as such
"RTN","VAFCQRY1",51,0)
 ..I $E($P(VAFCMN,"^"),1,3)=$P($$SITE^VASITE,"^",3) S APID(4)=APID(4)_COMP_COMP_$$HLDATE^HLFNC(DT,"DT") ;**707 TO ONLY SEND DATE NO TIME
"RTN","VAFCQRY1",52,0)
 .I $G(SSN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_SSN_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","VAFCQRY1",53,0)
 .I $G(DFN)'="" S APID(4)=APID(4)_$S(APID(4)'="":REP,1:"")_DFN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PI"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L" D
"RTN","VAFCQRY1",54,0)
 ..;CLAIM# **707 moved dfn and claim number up here since Alias SSN could be many
"RTN","VAFCQRY1",55,0)
 ..I $D(^DPT(DFN,.31)) S CLAIM=$P(^DPT(DFN,.31),"^",3) I +CLAIM>0 S APID(4)=APID(4)_REP_CLAIM_COMP_COMP_COMP_"USVBA"_SUBCOMP_SUBCOMP_"0363"_COMP_"PN"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"
"RTN","VAFCQRY1",56,0)
 .S NXTC=0,LVL=0
"RTN","VAFCQRY1",57,0)
 .I $D(VAFCA1) D
"RTN","VAFCQRY1",58,0)
 ..;Have Alias SSNs
"RTN","VAFCQRY1",59,0)
 ..S CT=0 F  S CT=$O(VAFCA1(CT)) Q:+CT<1  D
"RTN","VAFCQRY1",60,0)
 ...S NXT=$S($G(VAFCA1(CT,"SSN"))="":HL("Q"),1:$G(VAFCA1(CT,"SSN")))_COMP_COMP_COMP_"USSSA"_SUBCOMP_SUBCOMP_"0363"_COMP_"SS"_COMP_"VA FACILITY ID"_SUBCOMP_$$STA^XUAF4(+SITE)_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(DT,"DT")
"RTN","VAFCQRY1",61,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",62,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",63,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",64,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",65,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",66,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",67,0)
 ...I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",68,0)
 .I $D(^DPT(DFN,"MPIFHIS")) N HIST S HIST=0  F  S HIST=$O(^DPT(DFN,"MPIFHIS",HIST)) Q:'HIST  S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) D
"RTN","VAFCQRY1",69,0)
 ..;**477 due to a timing issue if checksum and D/T of deprication of ICN is not present hang two seconds and try again if still not able to get ICN set D/T to DT
"RTN","VAFCQRY1",70,0)
 ..I $G(HISTDT)="" H 2 S VAFCHMN=^DPT(DFN,"MPIFHIS",HIST,0) S HISTDT=$P(VAFCHMN,"^",4) I HISTDT="" S HISTDT=DT
"RTN","VAFCQRY1",71,0)
 ..I APID(4)'="" D
"RTN","VAFCQRY1",72,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",73,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=STN S SITA="200M" ; **707 update assigning authority for national ICNs to 200M for MPI
"RTN","VAFCQRY1",74,0)
 ...S NXT=$P(VAFCHMN,"^")_"V"_$P(VAFCHMN,"^",2)_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**648 only send date not time
"RTN","VAFCQRY1",75,0)
 ...I LVL=0 D
"RTN","VAFCQRY1",76,0)
 ....I $L(APID(4)_NXT)'>244 S APID(4)=APID(4)_REP_NXT Q
"RTN","VAFCQRY1",77,0)
 ....I $L(APID(4)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(4)),APID(4)=APID(4)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),NXTC=1
"RTN","VAFCQRY1",78,0)
 ...I LVL>0 D
"RTN","VAFCQRY1",79,0)
 ....I $L($G(APID(4,LVL))_NXT)'>245 S APID(4,LVL)=$G(APID(4,LVL))_$S(NXTC=0:REP,1:"")_NXT Q
"RTN","VAFCQRY1",80,0)
 ....I $L($G(APID(4,LVL))_NXT)>245 S LNGTH=244-$L(APID(4,LVL)),APID(4,LVL)=APID(4,LVL)_REP_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(4,LVL)=NXT
"RTN","VAFCQRY1",81,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",82,0)
 ..I APID(4)="" D
"RTN","VAFCQRY1",83,0)
 ...I $E($P(VAFCHMN,"^"),1,3)=STN S SITA=STN
"RTN","VAFCQRY1",84,0)
 ...I $E($P(VAFCHMN,"^"),1,3)'=STN S SITA="200M"
"RTN","VAFCQRY1",85,0)
 ...S APID(4)=$P(VAFCHMN,"^")_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITA_SUBCOMP_"L"_COMP_COMP_$$HLDATE^HLFNC(HISTDT,"DT") ;**707 ONLY DATE NOT TIME
"RTN","VAFCQRY1",86,0)
NAMEPID ;patient name (last^first^middle^suffix^prefix^^"L" for legal)
"RTN","VAFCQRY1",87,0)
 I $D(SARY(5))!(SEQ="ALL") D
"RTN","VAFCQRY1",88,0)
 .;**711 code REMOVED PREFIX due to issues with existing PATIENT Name Standardization functionality
"RTN","VAFCQRY1",89,0)
 .N X S X=$P(VAFCZN,"^") D NAME^VAFCPID2(DFN,.X) S APID(6)=$$HLNAME^XLFNAME(X,"",$E(HL("ECH"),1)) I $P(APID(6),$E(HL("ECH"),1),7)'="L" S $P(APID(6),$E(HL("ECH"),1),7)="L"
"RTN","VAFCQRY1",90,0)
ALIAS .;patient alias (last^first^middle^suffice^prefix^^"A" for alias - can be multiple)
"RTN","VAFCQRY1",91,0)
 .N ALIAS,ALIEN,LVL6,NXTC,LNGTH S NXTC=0,LVL6=0
"RTN","VAFCQRY1",92,0)
 .I $D(VAFCA1) S ALIEN=0 F  S ALIEN=$O(VAFCA1(ALIEN)) Q:'ALIEN  D
"RTN","VAFCQRY1",93,0)
 ..S ALIAS=$$HLNAME^XLFNAME(VAFCA1(ALIEN,"NAME"),"",$E(HL("ECH"),1))
"RTN","VAFCQRY1",94,0)
 ..Q:ALIAS=""
"RTN","VAFCQRY1",95,0)
 ..S $P(ALIAS,$E(HL("ECH"),1),7)="A"
"RTN","VAFCQRY1",96,0)
 ..I LVL6=0 D
"RTN","VAFCQRY1",97,0)
 ...I $L(APID(6)_ALIAS)'>244 S APID(6)=APID(6)_REP_ALIAS Q
"RTN","VAFCQRY1",98,0)
 ...I $L(APID(6)_ALIAS)>244 S LVL6=1 S LNGTH=244-$L(APID(6)),APID(6)=APID(6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)),NXTC=1
"RTN","VAFCQRY1",99,0)
 ..I LVL6>0 D
"RTN","VAFCQRY1",100,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)'>245 S APID(6,LVL6)=$G(APID(6,LVL6))_$S(NXTC=0:REP,1:"")_ALIAS Q
"RTN","VAFCQRY1",101,0)
 ...I $L($G(APID(6,LVL6))_ALIAS)>245 S LNGTH=244-$L(APID(6,LVL6)),APID(6,LVL6)=APID(6,LVL6)_REP_$E(ALIAS,1,LNGTH) S LNGTH=LNGTH+1,ALIAS=$E(ALIAS,LNGTH,$L(ALIAS)) S LVL6=LVL6+1 S APID(6,LVL6)=ALIAS
"RTN","VAFCQRY1",102,0)
 ..I NXTC=1 S NXTC=0
"RTN","VAFCQRY1",103,0)
 . I APID(6)="" S APID(6)=HL("Q")
"RTN","VAFCQRY1",104,0)
MOTHER ;mother's maiden name  (last^first^middle^suffix^prefix^^"M" for maiden name)
"RTN","VAFCQRY1",105,0)
 I $D(SARY(6))!(SEQ="ALL") D
"RTN","VAFCQRY1",106,0)
 .S APID(7)=HL("Q")
"RTN","VAFCQRY1",107,0)
 .I $D(^DPT(DFN,.24)) S VAFCMMN=$P(^DPT(DFN,.24),"^",3) D
"RTN","VAFCQRY1",108,0)
 ..S APID(7)=$$HLNAME^XLFNAME(VAFCMMN,"",$E(HL("ECH"),1)) I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",109,0)
 ..I $P(APID(7),$E(HL("ECH"),1),7)'="M" S $P(APID(7),$E(HL("ECH"),1),7)="M"
"RTN","VAFCQRY1",110,0)
 .I APID(7)="" S APID(7)=HL("Q")
"RTN","VAFCQRY1",111,0)
 I $D(SARY(7))!(SEQ="ALL") S APID(8)=$$HLDATE^HLFNC($P(VAFCZN,"^",3)) I APID(8)="" S APID(8)=HL("Q") ;date/time of birth
"RTN","VAFCQRY1",112,0)
 I $D(SARY(8))!(SEQ="ALL") S APID(9)=$P(VAFCZN,"^",2) I APID(9)="" S APID(9)=HL("Q") ;sex
"RTN","VAFCQRY1",113,0)
 ;place of birth city and state
"RTN","VAFCQRY1",114,0)
 ;split into 2 routines **707
"RTN","VAFCQRY1",115,0)
 D CONT^VAFCQRY3(DFN,.APID,.PID,.HL,HLES,.SARY,SEQ,.ERR,REP,COMP,SSN,VAFCMN)
"RTN","VAFCQRY1",116,0)
 D KVA^VADPT
"RTN","VAFCQRY1",117,0)
 Q
"RTN","VAFCQRY1",118,0)
HL7TXT(HL7STRG,HL,HLES) ; Replace occurrences of embedded HL7 delimiters with
"RTN","VAFCQRY1",119,0)
 ; HL7 escape sequence
"RTN","VAFCQRY1",120,0)
 ;
"RTN","VAFCQRY1",121,0)
 ; Inputs: HL7STRG - Data string to be checked
"RTN","VAFCQRY1",122,0)
 ;        HL("ECH") - HL7 delimiter string
"RTN","VAFCQRY1",123,0)
 ;              Delimiters MUST be in the following order,
"RTN","VAFCQRY1",124,0)
 ;              Escape, Field, Component, Repeat, Subcomponent
"RTN","VAFCQRY1",125,0)
 ;              Example: \^~|&
"RTN","VAFCQRY1",126,0)
 ;
"RTN","VAFCQRY1",127,0)
 ; Output: HL7XTRG - Data string with escape sequence added (if needed)
"RTN","VAFCQRY1",128,0)
 ;
"RTN","VAFCQRY1",129,0)
 N OCHR,RCHR,RCHRI,TYPE,I,HLES2
"RTN","VAFCQRY1",130,0)
 ;
"RTN","VAFCQRY1",131,0)
 I $G(HL("COMP"))="" S HL("COMP")=$E(HL("ECH"),1),HL("REP")=$E(HL("ECH"),2),HL("SUBCOMP")=$E(HL("ECH"),4)
"RTN","VAFCQRY1",132,0)
 ; Set HL7 escape char
"RTN","VAFCQRY1",133,0)
 S HLES2=HLES_HL("FS")_HL("COMP")_HL("REP")_HL("SUBCOMP")
"RTN","VAFCQRY1",134,0)
 ;
"RTN","VAFCQRY1",135,0)
 ; Search for occurrence of each delimiter and replace it with "\<type>\"
"RTN","VAFCQRY1",136,0)
 F TYPE="E","F","C","R","S" D
"RTN","VAFCQRY1",137,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","VAFCQRY1",138,0)
 . ;
"RTN","VAFCQRY1",139,0)
 . ; OCHR=original char, RCHR=replacement char
"RTN","VAFCQRY1",140,0)
 . S OCHR=$E(HLES2,RCHRI),RCHR=$E("EFSRT",RCHRI) Q:'$F(HL7STRG,OCHR)
"RTN","VAFCQRY1",141,0)
 . F I=1:1 Q:$E(HL7STRG,I)=""  I $E(HL7STRG,I)=OCHR S HL7STRG=$E(HL7STRG,1,I-1)_HLES_RCHR_HLES_$E(HL7STRG,I+1,999),I=I+2
"RTN","VAFCQRY1",142,0)
 Q
"RTN","VAFCQRY1",143,0)
 Q
"RTN","VAFCQRY3")
0^2^B54545905^B13092523
"RTN","VAFCQRY3",1,0)
VAFCQRY3 ;BIR/CMC-CONT TO BLD PID 2.4 SEGMENT ;3/2/04
"RTN","VAFCQRY3",2,0)
 ;;5.3;Registration;**575,707**;Aug 13, 1993;Build 14
"RTN","VAFCQRY3",3,0)
 ;
"RTN","VAFCQRY3",4,0)
CONT(DFN,APID,PID,HL,HLES,SARY,SEQ,ERROR,REP,COMP,SSN,VAFCMN) ; continue to bld pid segment
"RTN","VAFCQRY3",5,0)
ADDR ;had to split routine
"RTN","VAFCQRY3",6,0)
 I $D(SARY(11))!(SEQ="ALL") S APID(12)="" D
"RTN","VAFCQRY3",7,0)
 .I $D(^DPT(DFN,0)) D
"RTN","VAFCQRY3",8,0)
 ..;address info
"RTN","VAFCQRY3",9,0)
 ..N COUNTY K HL7STRG
"RTN","VAFCQRY3",10,0)
 ..S HL7STRG=$$GET1^DIQ(2,DFN_",",.111) D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES)
"RTN","VAFCQRY3",11,0)
 ..S $P(APID(12),COMP)=HL7STRG I $P(APID(12),COMP)="" S $P(APID(12),COMP)=HL("Q") K HL7STRG
"RTN","VAFCQRY3",12,0)
 ..K HL7STRG S HL7STRG=$$GET1^DIQ(2,DFN_",",.112) D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) ;**707 add HL7TXT call
"RTN","VAFCQRY3",13,0)
 ..S $P(APID(12),COMP,2)=HL7STRG I $P(APID(12),COMP,2)="" S $P(APID(12),COMP,2)=HL("Q")
"RTN","VAFCQRY3",14,0)
 ..K HL7STRG S HL7STRG=$$GET1^DIQ(2,DFN_",",.113) D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) ;**707 add HL7TXT call
"RTN","VAFCQRY3",15,0)
 ..S $P(APID(12),COMP,8)=HL7STRG I $P(APID(12),COMP,8)="" S $P(APID(12),COMP,8)=HL("Q")
"RTN","VAFCQRY3",16,0)
 ..K HL7STRG
"RTN","VAFCQRY3",17,0)
 ..; **707 changes to include foreign address
"RTN","VAFCQRY3",18,0)
 ..N CNTRY S CNTRY=$$GET1^DIQ(2,DFN_",",.1173) ;RETURN EXTERNAL VALUE from country code file #779.004 field .01
"RTN","VAFCQRY3",19,0)
 ..I CNTRY="US" S CNTRY="USA"
"RTN","VAFCQRY3",20,0)
 ..S HL7STRG=$$GET1^DIQ(2,DFN_",",.114) D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S $P(APID(12),COMP,3)=HL7STRG  I $P(APID(12),COMP,3)="" S $P(APID(12),COMP,3)=HL("Q")
"RTN","VAFCQRY3",21,0)
 ..I CNTRY=""!(CNTRY="USA") D
"RTN","VAFCQRY3",22,0)
 ...;have USA address
"RTN","VAFCQRY3",23,0)
 ...S STATEIEN=$$GET1^DIQ(2,DFN_",",.115,"I") S $P(APID(12),COMP,4)=$$GET1^DIQ(5,+STATEIEN_",",1)
"RTN","VAFCQRY3",24,0)
 ...I $P(APID(12),COMP,4)="" S $P(APID(12),COMP,4)=HL("Q")
"RTN","VAFCQRY3",25,0)
 ...S $P(APID(12),COMP,5)=$$GET1^DIQ(2,DFN_",",.1112) I $P(APID(12),COMP,5)="" S $P(APID(12),COMP,5)=HL("Q")
"RTN","VAFCQRY3",26,0)
 ...S $P(APID(12),COMP,6)=CNTRY I CNTRY="" S $P(APID(12),COMP,6)=HL("Q") ;country
"RTN","VAFCQRY3",27,0)
 ..I CNTRY'="",(CNTRY'="USA") D
"RTN","VAFCQRY3",28,0)
 ...;Check for foreign address fields
"RTN","VAFCQRY3",29,0)
 ...S $P(APID(12),COMP,4)=$P($G(^DPT(DFN,.11)),"^",8) I $P(APID(12),COMP,4)="" S $P(APID(12),COMP,4)=HL("Q") ;province
"RTN","VAFCQRY3",30,0)
 ...S $P(APID(12),COMP,5)=$P($G(^DPT(DFN,.11)),"^",9) I $P(APID(12),COMP,5)="" S $P(APID(12),COMP,5)=HL("Q") ;postal code
"RTN","VAFCQRY3",31,0)
 ...S $P(APID(12),COMP,6)=CNTRY I CNTRY="" S $P(APID(12),COMP,6)=HL("Q") ;COUNTRY
"RTN","VAFCQRY3",32,0)
 ...; ***707 end of code
"RTN","VAFCQRY3",33,0)
 ..S $P(APID(12),COMP,7)="P"
"RTN","VAFCQRY3",34,0)
BADADDR ..;BAD ADDRESS INDICATOR (if present overwrite the "P" ermanent type with the Bad Address type
"RTN","VAFCQRY3",35,0)
 ..I $D(^DPT(DFN,.11)) N BADADR S BADADR=$P(^DPT(DFN,.11),"^",16) I BADADR'="" S $P(APID(12),COMP,7)="VAB"_BADADR
"RTN","VAFCQRY3",36,0)
 ..S COUNTY=$$GET1^DIQ(2,DFN_",",.117) I COUNTY="" S COUNTY=HL("Q") ;**648 add COUNTY Code to PID-11, retained in PID-12 also
"RTN","VAFCQRY3",37,0)
 ..S $P(APID(12),COMP,9)=COUNTY ;county code
"RTN","VAFCQRY3",38,0)
 ..;place of birth information
"RTN","VAFCQRY3",39,0)
 ..S CITY=$$GET1^DIQ(2,DFN_",",.092) S HL7STRG=CITY D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S CITY=HL7STRG D
"RTN","VAFCQRY3",40,0)
 ...N X
"RTN","VAFCQRY3",41,0)
 ...I $G(CITY)'="" S $P(X,COMP,3)=CITY
"RTN","VAFCQRY3",42,0)
 ...I $G(CITY)="" S $P(X,COMP,3)=HL("Q")
"RTN","VAFCQRY3",43,0)
 ...S STATEIEN=$$GET1^DIQ(2,DFN_",",.093,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1) D
"RTN","VAFCQRY3",44,0)
 ....I $G(STATE)'="" S $P(X,COMP,4)=STATE
"RTN","VAFCQRY3",45,0)
 ....I $G(STATE)="" S $P(X,COMP,4)=HL("Q")
"RTN","VAFCQRY3",46,0)
 ... S $P(X,COMP,7)="N",APID(12)=$G(APID(12))_REP_X
"RTN","VAFCQRY3",47,0)
CONF .;CONFIDENTIAL ADDRESS
"RTN","VAFCQRY3",48,0)
 .I $D(^DPT(DFN,.141)) N CNFADD S CNFADD=$$GET1^DIQ(2,DFN_",",.14105) D
"RTN","VAFCQRY3",49,0)
 ..N LINE1,LINE2,LINE3,STATEIEN,STATE,CNTRY,ZIP,LVL,LNGTH,NXT,CNFEND,CNFSTRT,SUBCOMP,CNTY,CITY
"RTN","VAFCQRY3",50,0)
 ..S SUBCOMP=$E(HL("ECH"),4)
"RTN","VAFCQRY3",51,0)
 ..S LINE1=$$GET1^DIQ(2,DFN_",",.1411) S HL7STRG=LINE1 D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S LINE1=HL7STRG
"RTN","VAFCQRY3",52,0)
 ..S LINE2=$$GET1^DIQ(2,DFN_",",.1412) S HL7STRG=LINE2 D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S LINE2=HL7STRG
"RTN","VAFCQRY3",53,0)
 ..S LINE3=$$GET1^DIQ(2,DFN_",",.1413) S HL7STRG=LINE3 D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S LINE3=HL7STRG
"RTN","VAFCQRY3",54,0)
 ..S CNFSTRT=$$FMTHL7^XLFDT($$GET1^DIQ(2,DFN_",",.1417,"I")),CNFEND=$$FMTHL7^XLFDT($$GET1^DIQ(2,DFN_",",.1418,"I"))
"RTN","VAFCQRY3",55,0)
 ..S CITY=$$GET1^DIQ(2,DFN_",",.1414) S HL7STRG=CITY D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S CITY=HL7STRG
"RTN","VAFCQRY3",56,0)
 ..S CNTRY=$$GET1^DIQ(2,DFN_",",.14116)
"RTN","VAFCQRY3",57,0)
 ..;if foriegn address
"RTN","VAFCQRY3",58,0)
 ..I CNTRY=""!(CNTRY="USA")!(CNTRY="US") S:CNTRY="US" CNTRY="USA" S STATEIEN=$$GET1^DIQ(2,DFN_",",.1415,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1),CNTY=$$GET1^DIQ(2,DFN_",",.14111),ZIP=$$GET1^DIQ(2,DFN_",",.1416)
"RTN","VAFCQRY3",59,0)
 ..E  S STATE=$$GET1^DIQ(2,DFN_",",.14114),ZIP=$$GET1^DIQ(2,DFN_",",.14115)  ;if USA address or null assume USA address
"RTN","VAFCQRY3",60,0)
 ..S LVL=0,LNGTH=$L(APID(12))
"RTN","VAFCQRY3",61,0)
 ..I $D(^DPT(DFN,.14,0)) N CNFTYP S CNFTYP=0 F  S CNFTYP=$O(^DPT(DFN,.14,CNFTYP)) Q:'CNFTYP  N CNFTYPA S CNFTYPA=$P(^DPT(DFN,.14,CNFTYP,0),"^",2) I CNFTYPA="Y" S CNFTYPA=$P(^DPT(DFN,.14,CNFTYP,0),"^") D
"RTN","VAFCQRY3",62,0)
 ...S NXT=""
"RTN","VAFCQRY3",63,0)
 ...S $P(NXT,COMP)=$S(LINE1'="":LINE1,1:HL("Q"))
"RTN","VAFCQRY3",64,0)
 ...S $P(NXT,COMP,2)=$S(LINE2'="":LINE2,1:HL("Q"))
"RTN","VAFCQRY3",65,0)
 ...S $P(NXT,COMP,8)=$S(LINE3'="":LINE3,1:HL("Q"))
"RTN","VAFCQRY3",66,0)
 ...S $P(NXT,COMP,3)=$S(CITY'="":CITY,1:HL("Q"))
"RTN","VAFCQRY3",67,0)
 ...S $P(NXT,COMP,4)=$S($G(STATE)'="":STATE,1:HL("Q"))
"RTN","VAFCQRY3",68,0)
 ...S $P(NXT,COMP,5)=$S(ZIP'="":ZIP,1:HL("Q"))
"RTN","VAFCQRY3",69,0)
 ...S $P(NXT,COMP,6)=$S(CNTRY'="":CNTRY,1:HL("Q"))
"RTN","VAFCQRY3",70,0)
 ...S $P(NXT,COMP,7)=$S(CNFTYPA=1:"VACAE",CNFTYPA=2:"VACAA",CNFTYPA=3:"VACAC",CNFTYPA=4:"VACAM",CNFTYPA=5:"VACAO",1:HL("Q"))
"RTN","VAFCQRY3",71,0)
 ...S $P(NXT,COMP,9)=$S($G(CNTY)'="":CNTY,1:HL("Q"))
"RTN","VAFCQRY3",72,0)
 ...S $P(NXT,COMP,12)=CNFSTRT_SUBCOMP_CNFEND
"RTN","VAFCQRY3",73,0)
 ...S NXT=REP_NXT
"RTN","VAFCQRY3",74,0)
 ...I LVL=0 D
"RTN","VAFCQRY3",75,0)
 ....I $L(APID(12)_NXT)'>244 S APID(12)=APID(12)_NXT Q
"RTN","VAFCQRY3",76,0)
 ....I $L(APID(12)_NXT)>244 S LVL=1 S LNGTH=244-$L(APID(12)),APID(12)=APID(12)_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT))
"RTN","VAFCQRY3",77,0)
 ...I LVL>0 D
"RTN","VAFCQRY3",78,0)
 ....I $L($G(APID(12,LVL))_NXT)'>245 S APID(12,LVL)=$G(APID(12,LVL))_NXT Q
"RTN","VAFCQRY3",79,0)
 ....I $L($G(APID(12,LVL))_NXT)>245 S LNGTH=244-$L(APID(12,LVL)),APID(12,LVL)=APID(12,LVL)_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)) S LVL=LVL+1 S APID(12,LVL)=NXT
"RTN","VAFCQRY3",80,0)
 I $D(SARY(12))!(SEQ="ALL") S APID(13)=$$GET1^DIQ(2,DFN_",",.117) I APID(13)="" S APID(13)=HL("Q")  ;county code **648 backwards compatibility only
"RTN","VAFCQRY3",81,0)
PHONE I $D(SARY(13))!($D(SARY(14)))!(SEQ="ALL") D
"RTN","VAFCQRY3",82,0)
 .;**707 change PID-13 to have home and work phones, cell, pager and e-mail address with the components
"RTN","VAFCQRY3",83,0)
 .N PHONEN,HNUM,WNUM,EMAIL,CELL,PAGER
"RTN","VAFCQRY3",84,0)
 .S PHONEN=$G(^DPT(DFN,.13))
"RTN","VAFCQRY3",85,0)
 .; **707 change to ensure that null doesn't end up for any of these fields cmc 12/7/06
"RTN","VAFCQRY3",86,0)
 .S HNUM=$P(PHONEN,"^") I HNUM'="" S HNUM=$$HLPHONE^HLFNC(HNUM) I HNUM'="" S HL7STRG=HNUM D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S HNUM=HL7STRG_COMP_"PRN"_COMP_"PH"
"RTN","VAFCQRY3",87,0)
 .S WNUM=$P(PHONEN,"^",2) I WNUM'="" S WNUM=$$HLPHONE^HLFNC(WNUM) I WNUM'="" S HL7STRG=WNUM D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S WNUM=HL7STRG_COMP_"WPN"_COMP_"PH"
"RTN","VAFCQRY3",88,0)
 .S CELL=$P(PHONEN,"^",4) I CELL'="" S CELL=$$HLPHONE^HLFNC(CELL) I CELL'="" S HL7STRG=CELL D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S CELL=HL7STRG_COMP_"ORN"_COMP_"CP"
"RTN","VAFCQRY3",89,0)
 .S PAGER=$P(PHONEN,"^",5) I PAGER'="" S PAGER=$$HLPHONE^HLFNC(PAGER) I PAGER'="" S HL7STRG=PAGER D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S PAGER=HL7STRG_COMP_"BPN"_COMP_"BP"
"RTN","VAFCQRY3",90,0)
 .S EMAIL=$P(PHONEN,"^",3) I EMAIL'="" S HL7STRG=EMAIL D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S EMAIL=COMP_"NET"_COMP_"INTERNET"_COMP_HL7STRG
"RTN","VAFCQRY3",91,0)
 .I HNUM'="" S APID(14)=HNUM
"RTN","VAFCQRY3",92,0)
 .I WNUM'="",APID(14)'="" S APID(14)=APID(14)_REP_WNUM
"RTN","VAFCQRY3",93,0)
 .I WNUM'="",APID(14)="" S APID(14)=WNUM
"RTN","VAFCQRY3",94,0)
 .I CELL'="",APID(14)'="" S APID(14)=APID(14)_REP_CELL
"RTN","VAFCQRY3",95,0)
 .I CELL'="",APID(14)="" S APID(14)=CELL
"RTN","VAFCQRY3",96,0)
 .I PAGER'="",APID(14)'="" S APID(14)=APID(14)_REP_PAGER
"RTN","VAFCQRY3",97,0)
 .I PAGER'="",APID(14)="" S APID(14)=PAGER
"RTN","VAFCQRY3",98,0)
 .I EMAIL'="",APID(14)'="" S APID(14)=APID(14)_REP_EMAIL
"RTN","VAFCQRY3",99,0)
 .I EMAIL'="",APID(14)="" S APID(14)=EMAIL
"RTN","VAFCQRY3",100,0)
 .I APID(14)="" S APID(14)=HL("Q")
"RTN","VAFCQRY3",101,0)
 I $D(SARY(14))!(SEQ="ALL") N WNUM S WNUM=$P($G(^DPT(DFN,.13)),"^",2) S WNUM=$$HLPHONE^HLFNC(WNUM) S HL7STRG=WNUM D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S APID(15)=HL7STRG I APID(15)="" S APID(15)=HL("Q")
"RTN","VAFCQRY3",102,0)
 ;**707 keep work# in PID-14 for backwards compatability but should use PID-13 to get work#
"RTN","VAFCQRY3",103,0)
 I $D(SARY(19))!(SEQ="ALL") S APID(20)=SSN  ;ssn passed in PID-3
"RTN","VAFCQRY3",104,0)
 I $D(SARY(23))!(SEQ="ALL") D
"RTN","VAFCQRY3",105,0)
 .S CITY=$$GET1^DIQ(2,DFN_",",.092) S HL7STRG=CITY D HL7TXT^VAFCQRY1(.HL7STRG,.HL,HLES) S CITY=HL7STRG
"RTN","VAFCQRY3",106,0)
 .S STATEIEN=$$GET1^DIQ(2,DFN_",",.093,"I") S STATE=$$GET1^DIQ(5,+STATEIEN_",",1) D
"RTN","VAFCQRY3",107,0)
 .I CITY'=""&(STATE'="") S APID(24)=CITY_" "_STATE  ;place of birth (not used) use PID-11 with an 'N' instead
"RTN","VAFCQRY3",108,0)
 .I CITY=""&(STATE="") S APID(24)=HL("Q")
"RTN","VAFCQRY3",109,0)
 D CONT^VAFCQRY4(DFN,.APID,.PID,.HL,HLES,.SARY,SEQ,.ERROR,REP,COMP)
"RTN","VAFCQRY3",110,0)
 ;**707 had to break routine
"RTN","VAFCQRY3",111,0)
 Q
"RTN","VAFCQRY4")
0^3^B12814510^n/a
"RTN","VAFCQRY4",1,0)
VAFCQRY4 ;BIR/CMC-CONT TO BLD PID 2.4 SEGMENT ;1/23/06
"RTN","VAFCQRY4",2,0)
 ;;5.3;Registration;**707**;Aug 13, 1993;Build 14
"RTN","VAFCQRY4",3,0)
 ;
"RTN","VAFCQRY4",4,0)
CONT(DFN,APID,PID,HL,HLES,SARY,SEQ,ERROR,REP,COMP) ; continue to bld pid segment
"RTN","VAFCQRY4",5,0)
 N X,LVL,LVL2,PDOD,NXT,LNGTH
"RTN","VAFCQRY4",6,0)
 D DEM^VADPT
"RTN","VAFCQRY4",7,0)
 I $D(SARY(10))!(SEQ="ALL") D
"RTN","VAFCQRY4",8,0)
 .N RACE,IEN
"RTN","VAFCQRY4",9,0)
 .;**575 ADDING RACE FROM THE NEW RACE INFORMATION MULTIPLE
"RTN","VAFCQRY4",10,0)
 .I VADM(12)>0 D
"RTN","VAFCQRY4",11,0)
 ..S RACE="",IEN=0
"RTN","VAFCQRY4",12,0)
 ..D SEQ10^VAFHLPI1("N",HL("Q"))
"RTN","VAFCQRY4",13,0)
 ..F  S IEN=$O(VAFY(10,IEN)) Q:IEN=""  D
"RTN","VAFCQRY4",14,0)
 ...I IEN>1 S RACE=RACE_REP
"RTN","VAFCQRY4",15,0)
 ...S RACE=RACE_VAFY(10,IEN,1)_COMP_VAFY(10,IEN,2)_COMP_VAFY(10,IEN,3)_COMP_$P(VAFY(10,IEN,1),"-",1,2)_COMP_COMP_"CDC"
"RTN","VAFCQRY4",16,0)
 .I VADM(12)=0 S RACE=HL("Q")
"RTN","VAFCQRY4",17,0)
 .K VAFY(10)
"RTN","VAFCQRY4",18,0)
 .S APID(11)=RACE
"RTN","VAFCQRY4",19,0)
 I $D(SARY(22))!(SEQ="ALL") D
"RTN","VAFCQRY4",20,0)
 .;**575 ADDING ETHNICITY FROM THE NEW ETHNICITY INFORMATION MULTIPLE
"RTN","VAFCQRY4",21,0)
 .I $G(VADM(11))'=0 D
"RTN","VAFCQRY4",22,0)
 ..D SEQ22^VAFHLPI1("N",HL("Q"))
"RTN","VAFCQRY4",23,0)
 ..S APID(23)=VAFY(22,1,1)_COMP_VAFY(22,1,2)_COMP_VAFY(22,1,3)_COMP_$P(VAFY(22,1,1),"-",1,2)_COMP_COMP_"CDC"
"RTN","VAFCQRY4",24,0)
 .I $G(VADM(11))=0 S APID(23)=HL("Q")  ;ethnic group
"RTN","VAFCQRY4",25,0)
 .K VAFY(22)
"RTN","VAFCQRY4",26,0)
 I $D(SARY(16))!(SEQ="ALL") D
"RTN","VAFCQRY4",27,0)
 .S APID(17)="" I +VADM(10)>0 S X=$P($G(^DIC(11,+VADM(10),0)),"^",3),APID(17)=$S(X="S":"A",X="N":"S",X="U":"",X="":HL("Q"),1:X) ;marital status (DHCP N=HL7 S, DHCP S=HL7 A, U="") ;**477 **575
"RTN","VAFCQRY4",28,0)
 .I APID(17)="" S APID(17)=HL("Q")
"RTN","VAFCQRY4",29,0)
 I $D(SARY(17))!(SEQ="ALL") D
"RTN","VAFCQRY4",30,0)
 .S APID(18)="" I +VADM(9)>0 S APID(18)=$P($G(^DIC(13,+VADM(9),0)),"^",4) I APID(18)="" S APID(18)=29  ;religious pref (if blank send 29 (UNKNOWN))
"RTN","VAFCQRY4",31,0)
 .I APID(18)="" S APID(18)=HL("Q")
"RTN","VAFCQRY4",32,0)
 I $D(SARY(29))!(SEQ="ALL") D
"RTN","VAFCQRY4",33,0)
 .S APID(30)="" I $D(^DPT(DFN,.35)) S PDOD=$P(^DPT(DFN,.35),"^") S APID(30)=$$HLDATE^HLFNC(PDOD)  ;date of death
"RTN","VAFCQRY4",34,0)
 .I APID(30)="" S APID(30)=HL("Q")
"RTN","VAFCQRY4",35,0)
 I $D(SARY(24))!(SEQ="ALL") S APID(25)=$P($G(^DPT(DFN,"MPIMB")),"^")  ;**575 multiple birth indicator
"RTN","VAFCQRY4",36,0)
 ;list of fields not currently used or supported (# is 1 more than seq)
"RTN","VAFCQRY4",37,0)
 I $D(SARY(4))!(SEQ="ALL") S APID(5)=""  ;Alternate Patient Identifier
"RTN","VAFCQRY4",38,0)
 I $D(SARY(9))!(SEQ="ALL") S APID(10)=""  ;patient alias
"RTN","VAFCQRY4",39,0)
 I $D(SARY(15))!(SEQ="ALL") S APID(16)=""  ;primary language
"RTN","VAFCQRY4",40,0)
 I $D(SARY(18))!(SEQ="ALL") S APID(19)=""  ;patient account #
"RTN","VAFCQRY4",41,0)
 I $D(SARY(20))!(SEQ="ALL") S APID(21)=""  ;drivers lic #
"RTN","VAFCQRY4",42,0)
 I $D(SARY(21))!(SEQ="ALL") S APID(22)=""  ;mother's id
"RTN","VAFCQRY4",43,0)
 I $D(SARY(25))!(SEQ="ALL") S APID(26)=""
"RTN","VAFCQRY4",44,0)
 I $D(SARY(26))!(SEQ="ALL") S APID(27)=""
"RTN","VAFCQRY4",45,0)
 I $D(SARY(27))!(SEQ="ALL") S APID(28)=""
"RTN","VAFCQRY4",46,0)
 I $D(SARY(28))!(SEQ="ALL") S APID(29)=""
"RTN","VAFCQRY4",47,0)
 I $D(SARY(30))!(SEQ="ALL") S APID(31)=""
"RTN","VAFCQRY4",48,0)
 S PID(1)="PID"_HL("FS")
"RTN","VAFCQRY4",49,0)
 S LVL=1,X=1 F  S X=$O(APID(X)) Q:'X  D
"RTN","VAFCQRY4",50,0)
 .S PID(LVL)=$G(PID(LVL))
"RTN","VAFCQRY4",51,0)
 .S NXT=APID(X) D
"RTN","VAFCQRY4",52,0)
 ..I '$O(APID(X,0)) S NXT=NXT_HL("FS")
"RTN","VAFCQRY4",53,0)
 ..I $L($G(PID(LVL))_NXT)>245 D
"RTN","VAFCQRY4",54,0)
 ... S LNGTH=245-$L(PID(LVL)),PID(LVL)=PID(LVL)_$E(NXT,1,LNGTH)
"RTN","VAFCQRY4",55,0)
 ... S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),LVL=LVL+1
"RTN","VAFCQRY4",56,0)
 ..I $L($G(PID(LVL))_NXT)'>245 S PID(LVL)=$G(PID(LVL))_NXT
"RTN","VAFCQRY4",57,0)
 .S LVL2=0 F  S LVL2=$O(APID(X,LVL2)) Q:'LVL2  D
"RTN","VAFCQRY4",58,0)
 ..S NXT=APID(X,LVL2) D
"RTN","VAFCQRY4",59,0)
 ...I $L($G(PID(LVL))_NXT)>245 S LNGTH=245-$L(PID(LVL)),PID(LVL)=PID(LVL)_$E(NXT,1,LNGTH) S LNGTH=LNGTH+1,NXT=$E(NXT,LNGTH,$L(NXT)),LVL=LVL+1
"RTN","VAFCQRY4",60,0)
 ...I $L($G(PID(LVL))_NXT)'>245 S PID(LVL)=$G(PID(LVL))_NXT
"RTN","VAFCQRY4",61,0)
 ...I '$O(APID(X,LVL2)) S PID(LVL)=PID(LVL)_HL("FS")
"RTN","VAFCQRY4",62,0)
 K VADM
"RTN","VAFCQRY4",63,0)
 Q
"RTN","VAFCSB")
0^6^B7574512^n/a
"RTN","VAFCSB",1,0)
VAFCSB ;BIR/CMC-CONT ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ;8/21/06
"RTN","VAFCSB",2,0)
 ;;5.3;Registration;**707**;Aug 13, 1993;Build 14
"RTN","VAFCSB",3,0)
 ;
"RTN","VAFCSB",4,0)
 ;Reference to $$XAMDT^RAO7UTL1 is supported by IA #4875
"RTN","VAFCSB",5,0)
 ;Reference to RESUTLS^LRPXAPI is supported by IA #4245
"RTN","VAFCSB",6,0)
 ;
"RTN","VAFCSB",7,0)
PV2() ;build pv2 segment
"RTN","VAFCSB",8,0)
 N PV2,LSTA,APPT,VASD,VAIP,VARP,VAROOT
"RTN","VAFCSB",9,0)
 S PV2=""
"RTN","VAFCSB",10,0)
 ;get next outpatient appointment
"RTN","VAFCSB",11,0)
 K ^UTILITY("VASD",$J) S VASD("F")=DT D SDA^VADPT
"RTN","VAFCSB",12,0)
 S APPT=$P($G(^UTILITY("VASD",$J,1,"I")),"^")
"RTN","VAFCSB",13,0)
 I APPT'="" S $P(PV2,HL("FS"),9)=$$HLDATE^HLFNC(APPT)
"RTN","VAFCSB",14,0)
 ;GET LAST ADMISSION DATE
"RTN","VAFCSB",15,0)
 K VAIP S VAIP("D")="LAST",VAIP("M")=0 D IN5^VADPT
"RTN","VAFCSB",16,0)
 I VAIP(2)="1^ADMISSION" S $P(PV2,HL("FS"),15)=$$HLDATE^HLFNC($P(VAIP(3),"^"))
"RTN","VAFCSB",17,0)
 ;get last registration
"RTN","VAFCSB",18,0)
 S VAROOT="VARP"
"RTN","VAFCSB",19,0)
 D REG^VADPT
"RTN","VAFCSB",20,0)
 I $D(VARP(1,"I")),$G(VARP(1,"I"))>0 S $P(PV2,HL("FS"),46)=$$HLDATE^HLFNC($P(VARP(1,"I"),"^")),$P(PV2,HL("FS"),24)="CR"
"RTN","VAFCSB",21,0)
 I PV2'="" S PV2="PV2"_HL("FS")_PV2
"RTN","VAFCSB",22,0)
 Q PV2
"RTN","VAFCSB",23,0)
PHARA() ;build obx to show active prescriptions
"RTN","VAFCSB",24,0)
 N RET S RET=""
"RTN","VAFCSB",25,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","VAFCSB",26,0)
 N PHARM,DGLIST
"RTN","VAFCSB",27,0)
 S PHARM="" D PROF^PSO52API(DFN,"DGLIST")
"RTN","VAFCSB",28,0)
 I +$G(^TMP($J,"DGLIST",DFN,0))>0 S PHARM="OBX"_HL("FS")_HL("FS")_HL("FS")_"ACTIVE PRESCRIPTIONS"_HL("FS")_HL("FS")_"Y"
"RTN","VAFCSB",29,0)
 Q PHARM
"RTN","VAFCSB",30,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","VAFCSB",31,0)
 N OBX S OBX=""
"RTN","VAFCSB",32,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q OBX
"RTN","VAFCSB",33,0)
 N LAB,LAB2,EN
"RTN","VAFCSB",34,0)
 S LAB="" K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"C")
"RTN","VAFCSB",35,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB=$P($G(^TMP("DGLAB",$J,EN)),"^")
"RTN","VAFCSB",36,0)
 K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"A")
"RTN","VAFCSB",37,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB2=$P($G(^TMP("DGLAB",$J,EN)),"^") I LAB2>LAB S LAB=LAB2
"RTN","VAFCSB",38,0)
 K ^TMP("DGLAB",$J) D RESULTS^LRPXAPI("DGLAB",DFN,"M")
"RTN","VAFCSB",39,0)
 S EN=$O(^TMP("DGLAB",$J,"")) I EN'="" S LAB2=$P($G(^TMP("DGLAB",$J,EN)),"^") I LAB2>LAB S LAB=LAB2
"RTN","VAFCSB",40,0)
 I LAB'="" D
"RTN","VAFCSB",41,0)
 .S $P(OBX,HL("FS"),3)="LAST LAB TEST DATE/TIME"
"RTN","VAFCSB",42,0)
 .S $P(OBX,HL("FS"),11)="F"
"RTN","VAFCSB",43,0)
 .S $P(OBX,HL("FS"),14)=$$HLDATE^HLFNC(LAB)
"RTN","VAFCSB",44,0)
 .S OBX="OBX"_HL("FS")_OBX
"RTN","VAFCSB",45,0)
 Q OBX
"RTN","VAFCSB",46,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","VAFCSB",47,0)
 N RET S RET=""
"RTN","VAFCSB",48,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","VAFCSB",49,0)
 N RAD,RADE
"RTN","VAFCSB",50,0)
 S RAD="",RADE=$$XAMDT^RAO7UTL1(DFN) I +RADE<1 Q RAD
"RTN","VAFCSB",51,0)
 I +RADE>0 D
"RTN","VAFCSB",52,0)
 .S $P(RAD,HL("FS"),3)="LAST RADIOLOGY EXAM DATE/TIME"
"RTN","VAFCSB",53,0)
 .S $P(RAD,HL("FS"),11)="F"
"RTN","VAFCSB",54,0)
 .S $P(RAD,HL("FS"),14)=$$HLDATE^HLFNC(RADE)
"RTN","VAFCSB",55,0)
 .S RAD="OBX"_HL("FS")_RAD
"RTN","VAFCSB",56,0)
 Q RAD
"RTN","VAFCSB",57,0)
PD1() ;BUILD PD1 segment
"RTN","VAFCSB",58,0)
 ;PREFERRED FACILITY -- NOT GOING TO BE PASSED PER IMDQ 9/7/06
"RTN","VAFCSB",59,0)
 N TEAM,PD1
"RTN","VAFCSB",60,0)
 S PD1=""
"RTN","VAFCSB",61,0)
 ;S TEAM=$$PREF^DGENPTA(DFN)
"RTN","VAFCSB",62,0)
 ;I TEAM'="" S PD1="PD1"_HL("FS")_HL("FS")_HL("FS")_$$STA^XUAF4(TEAM)
"RTN","VAFCSB",63,0)
 Q PD1
"RTN","VAFCSB",64,0)
PV1() ;BUILD PV1 SEGMENT
"RTN","VAFCSB",65,0)
 ;CURRENTLY ADMITTED?
"RTN","VAFCSB",66,0)
 N PV1,VAINDT
"RTN","VAFCSB",67,0)
 S PV1=""
"RTN","VAFCSB",68,0)
 S VAINDT=DT
"RTN","VAFCSB",69,0)
 D INP^VADPT
"RTN","VAFCSB",70,0)
 I $G(VAIN(1))'="" S $P(PV1,HL("FS"),44)=$$HLDATE^HLFNC($P(VAIN(7),"^")),PV1="PV1"_HL("FS")_PV1
"RTN","VAFCSB",71,0)
 K VAIN
"RTN","VAFCSB",72,0)
 Q PV1
"RTN","VAFCTFIN")
0^7^B22721949^B24477699
"RTN","VAFCTFIN",1,0)
VAFCTFIN ;BIR/DR-TREATING FACILTIY MFU PROCESSING ROUTINE ;11/09/01
"RTN","VAFCTFIN",2,0)
 ;;5.3;Registration;**428,474,520,639,707**;Aug 13, 1993;Build 14
"RTN","VAFCTFIN",3,0)
 ;Reference to EXC, START, and STOP^RGHLLOG supported by IA #2796
"RTN","VAFCTFIN",4,0)
 ;
"RTN","VAFCTFIN",5,0)
IN ;This entry point is used to process the Treating Facility Master File Update Message.
"RTN","VAFCTFIN",6,0)
 ;It is called by the VAFC MFN-M05 CLIENT processing routine when a MFN
"RTN","VAFCTFIN",7,0)
 ;message is received.
"RTN","VAFCTFIN",8,0)
 ;There are no inputs or outputs
"RTN","VAFCTFIN",9,0)
 ;
"RTN","VAFCTFIN",10,0)
 I HL("MTN")="MFK" D RSP Q
"RTN","VAFCTFIN",11,0)
 N VAFC,STATN,VAFCI,MSG,SG,VAFCARR,PDFN,INST,MFUPT,PDLT,TFIEN
"RTN","VAFCTFIN",12,0)
 N ICN,MFI,MFE,MFA,HLCOMP,CNT,X,VAFCERR,VAFCX
"RTN","VAFCTFIN",13,0)
 ;quit if Master Patient Index (MPI) is not installed
"RTN","VAFCTFIN",14,0)
 S X="MPIF001" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",15,0)
 S X="MPIFQ0" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",16,0)
 S X="RGRSBUL1" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",17,0)
 S X="RGRSBULL" X ^%ZOSF("TEST") Q:'$T
"RTN","VAFCTFIN",18,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","VAFCTFIN",19,0)
 F VAFCI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,VAFC(VAFCI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","VAFCTFIN",20,0)
 ;reconcil the inbound TF list from the MPI to the local TF list
"RTN","VAFCTFIN",21,0)
 D RECONCIL
"RTN","VAFCTFIN",22,0)
 ;create response message
"RTN","VAFCTFIN",23,0)
 S CNT=1
"RTN","VAFCTFIN",24,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS") S CNT=CNT+1
"RTN","VAFCTFIN",25,0)
 S HLA("HLA",CNT)=MFI S CNT=CNT+1
"RTN","VAFCTFIN",26,0)
 S VAFCX=0 F  S VAFCX=$O(MFE(VAFCX)) Q:'VAFCX  S HLA("HLA",CNT)=MFE(VAFCX),CNT=CNT+1,HLA("HLA",CNT)=MFA(VAFCX),CNT=CNT+1
"RTN","VAFCTFIN",27,0)
 ;generate an application level ack (MFK) identifying the status of the adds/edits/deletes of TF's passed in
"RTN","VAFCTFIN",28,0)
 D ROUTE
"RTN","VAFCTFIN",29,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.VAFCERR,"",.HLP)
"RTN","VAFCTFIN",30,0)
 Q
"RTN","VAFCTFIN",31,0)
PICK ;check routine for segment entry point
"RTN","VAFCTFIN",32,0)
 I $T(@SG)]"" D @SG
"RTN","VAFCTFIN",33,0)
 I $T(@SG)="" Q
"RTN","VAFCTFIN",34,0)
 Q
"RTN","VAFCTFIN",35,0)
MSH ;;MSH
"RTN","VAFCTFIN",36,0)
 ;process the MSH segment
"RTN","VAFCTFIN",37,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","VAFCTFIN",38,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",39,0)
 S VAFCARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",40,0)
 Q
"RTN","VAFCTFIN",41,0)
EVN ;;EVN
"RTN","VAFCTFIN",42,0)
 ;process the EVN segment
"RTN","VAFCTFIN",43,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","VAFCTFIN",44,0)
 Q
"RTN","VAFCTFIN",45,0)
PID ;;PID
"RTN","VAFCTFIN",46,0)
 ;process the PID segment
"RTN","VAFCTFIN",47,0)
 S PDFN=+$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",48,0)
 Q
"RTN","VAFCTFIN",49,0)
MFI ;;MFI
"RTN","VAFCTFIN",50,0)
 ;process the MFI segment
"RTN","VAFCTFIN",51,0)
 S MFI=MSG
"RTN","VAFCTFIN",52,0)
 S MFUPT=$P(MSG,HL("FS"),4)
"RTN","VAFCTFIN",53,0)
 S VAFCARR("CMOR")=$P($P(MSG,HL("FS"),8),$E(HL("ECH"),1))
"RTN","VAFCTFIN",54,0)
 Q
"RTN","VAFCTFIN",55,0)
MFE ;;MFE
"RTN","VAFCTFIN",56,0)
 ;process the MFE segment
"RTN","VAFCTFIN",57,0)
 N HLCOMP,NXTSGMT,TYPE
"RTN","VAFCTFIN",58,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","VAFCTFIN",59,0)
 S PDLT=$$FMDATE^HLFNC($P(MSG,HL("FS"),4))
"RTN","VAFCTFIN",60,0)
 S ICN=$P($P(MSG,HL("FS"),5),HLCOMP,4)
"RTN","VAFCTFIN",61,0)
 S INST=$P($P(MSG,HL("FS"),5),HLCOMP)
"RTN","VAFCTFIN",62,0)
 S TYPE=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",63,0)
 S MFE(INST)=MSG
"RTN","VAFCTFIN",64,0)
 S MFI(ICN,INST)=PDLT_"^^"_TYPE
"RTN","VAFCTFIN",65,0)
 Q
"RTN","VAFCTFIN",66,0)
ZET ;;ZET
"RTN","VAFCTFIN",67,0)
 ;process Patient's Date Last Treated Event Type, ZET segment
"RTN","VAFCTFIN",68,0)
 N PDLTET
"RTN","VAFCTFIN",69,0)
 S PDLTET=$P(MSG,HL("FS"),2)
"RTN","VAFCTFIN",70,0)
 S $P(MFI(ICN,INST),"^",2)=PDLTET
"RTN","VAFCTFIN",71,0)
 Q
"RTN","VAFCTFIN",72,0)
RSP ;response process logic entry point
"RTN","VAFCTFIN",73,0)
 Q
"RTN","VAFCTFIN",74,0)
ROUTE ;routing logic entry point
"RTN","VAFCTFIN",75,0)
 N MPI
"RTN","VAFCTFIN",76,0)
 S MPI=$$MPILINK^MPIFAPI() D
"RTN","VAFCTFIN",77,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="VAFC MFN-M05 CLIENT"_"^"_MPI
"RTN","VAFCTFIN",78,0)
 .I $P($G(MPI),U)=-1 D
"RTN","VAFCTFIN",79,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","VAFCTFIN",80,0)
 .. D EXC^RGHLLOG(224,"No MPI link identified in CIRN SITE PARAMETER file (#991.8)",$G(PDFN))
"RTN","VAFCTFIN",81,0)
 .. D STOP^RGHLLOG(0)
"RTN","VAFCTFIN",82,0)
 Q
"RTN","VAFCTFIN",83,0)
TEST ;
"RTN","VAFCTFIN",84,0)
 W $$REPROC^HLUTIL(39266,"D IN^VAFCTFIN")
"RTN","VAFCTFIN",85,0)
 Q
"RTN","VAFCTFIN",86,0)
RECONCIL ;
"RTN","VAFCTFIN",87,0)
 N DFN,MFIC,VAFCX,VAFCY,TFL,CNFLT,LOCCMOR,VAFCTYPE
"RTN","VAFCTFIN",88,0)
 S CNFLT=0
"RTN","VAFCTFIN",89,0)
 S DFN=$$GETDFN^MPIF001(ICN)
"RTN","VAFCTFIN",90,0)
 I DFN'>0 S CNFLT=1_"^"_$P($G(DFN),"^",2)
"RTN","VAFCTFIN",91,0)
 I MFUPT="REP" I +CNFLT=0 D TFL^VAFCTFU1(.TFL,DFN) S VAFCX=0 F  S VAFCX=$O(TFL(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",92,0)
 . S MFIC($P(TFL(VAFCX),"^"))=TFL(VAFCX) I '$D(MFI(ICN,$P(TFL(VAFCX),"^"))) D DEL(ICN,$P(TFL(VAFCX),"^"))
"RTN","VAFCTFIN",93,0)
 ;VAFCX=ICN and VAFCY=INSTITUTION
"RTN","VAFCTFIN",94,0)
 S VAFCX=0 F  S VAFCX=$O(MFI(VAFCX)) Q:'VAFCX  D
"RTN","VAFCTFIN",95,0)
 . S VAFCY=0 F  S VAFCY=$O(MFI(VAFCX,VAFCY)) Q:'VAFCY  D
"RTN","VAFCTFIN",96,0)
 ..S VAFCTYPE=$P(MFI(VAFCX,VAFCY),"^",3)
"RTN","VAFCTFIN",97,0)
 ..I +CNFLT=1 S MFA(VAFCY)="MFA"_HL("FS")_VAFCTYPE_HL("FS")_VAFCY_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")_"U"_HLCOMP_$S(VAFCTYPE="MDL":"Delete of ",1:"Update of ")_VAFCY_" Failed at "_$P($$SITE^VASITE,"^",3)_" due to "_$P(CNFLT,"^",2)
"RTN","VAFCTFIN",98,0)
 ..I +CNFLT=0 I VAFCTYPE="MAD"!(VAFCTYPE="MUP") D ADDUPD(DFN,VAFCY,$P(MFI(VAFCX,VAFCY),"^"),$P(MFI(VAFCX,VAFCY),"^",2))
"RTN","VAFCTFIN",99,0)
 ..I +CNFLT=0 I VAFCTYPE="MDL" D DEL(ICN,VAFCY)
"RTN","VAFCTFIN",100,0)
 Q
"RTN","VAFCTFIN",101,0)
ADDUPD(DFN,INST,PDLT,PDLRTET) ;add or update TF entry
"RTN","VAFCTFIN",102,0)
 N ERROR,STA
"RTN","VAFCTFIN",103,0)
 S STA=INST
"RTN","VAFCTFIN",104,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",105,0)
 D FILE^VAFCTFU(DFN,INST_"^"_$G(PDLT)_"^"_$G(PDLRTET),1,1,.ERROR)
"RTN","VAFCTFIN",106,0)
 S MFA(STA)="MFA"_HL("FS")_"MUP"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",107,0)
 I '$D(ERROR(STA)) S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCTFIN",108,0)
 I $D(ERROR(STA)) S MFA(STA)=MFA(STA)_"U"_HLCOMP_ERROR(STA)_HL("FS")
"RTN","VAFCTFIN",109,0)
 Q
"RTN","VAFCTFIN",110,0)
DEL(ICN,INST) ;delete a TF entry
"RTN","VAFCTFIN",111,0)
 N ERROR,STA
"RTN","VAFCTFIN",112,0)
 S STA=INST
"RTN","VAFCTFIN",113,0)
 S INST=$$LKUP^XUAF4(INST)
"RTN","VAFCTFIN",114,0)
 S ERROR=$$DELETETF^VAFCTFU(ICN,INST)
"RTN","VAFCTFIN",115,0)
 S MFA(STA)="MFA"_HL("FS")_"MDL"_HL("FS")_STA_HL("FS")_$$HLDATE^HLFNC($$NOW^XLFDT)_HL("FS")
"RTN","VAFCTFIN",116,0)
 I +ERROR'=1 S MFA(STA)=MFA(STA)_"S"
"RTN","VAFCTFIN",117,0)
 I +ERROR=1 S MFA(STA)=MFA(STA)_"U"_HLCOMP_"Delete Failed: "_$P(ERROR,"^",2)
"RTN","VAFCTFIN",118,0)
 Q
"VER")
8.0^22.0
"BLD",2361,6)
^665
**END**
**END**
