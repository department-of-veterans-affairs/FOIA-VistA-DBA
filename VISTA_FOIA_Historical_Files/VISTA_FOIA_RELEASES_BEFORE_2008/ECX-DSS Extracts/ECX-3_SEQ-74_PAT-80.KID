Released ECX*3*80 SEQ #74
Extracted from mail message
**KIDS**:ECX*3.0*80^

**INSTALL NAME**
ECX*3.0*80
"BLD",5912,0)
ECX*3.0*80^DSS EXTRACTS^0^3050331^y
"BLD",5912,1,0)
^^1^1^3041213^
"BLD",5912,1,1,0)
Wrong Production Division being pulled for Lab Extracts.
"BLD",5912,4,0)
^9.64PA^^
"BLD",5912,"ABPKG")
n
"BLD",5912,"KRN",0)
^9.67PA^8989.52^19
"BLD",5912,"KRN",.4,0)
.4
"BLD",5912,"KRN",.401,0)
.401
"BLD",5912,"KRN",.402,0)
.402
"BLD",5912,"KRN",.403,0)
.403
"BLD",5912,"KRN",.5,0)
.5
"BLD",5912,"KRN",.84,0)
.84
"BLD",5912,"KRN",3.6,0)
3.6
"BLD",5912,"KRN",3.8,0)
3.8
"BLD",5912,"KRN",9.2,0)
9.2
"BLD",5912,"KRN",9.8,0)
9.8
"BLD",5912,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5912,"KRN",9.8,"NM",1,0)
ECXLABN^^0^B25958397
"BLD",5912,"KRN",9.8,"NM",2,0)
ECXLABR^^0^B20369624
"BLD",5912,"KRN",9.8,"NM",3,0)
ECXSCLD^^0^B38077592
"BLD",5912,"KRN",9.8,"NM","B","ECXLABN",1)

"BLD",5912,"KRN",9.8,"NM","B","ECXLABR",2)

"BLD",5912,"KRN",9.8,"NM","B","ECXSCLD",3)

"BLD",5912,"KRN",19,0)
19
"BLD",5912,"KRN",19.1,0)
19.1
"BLD",5912,"KRN",101,0)
101
"BLD",5912,"KRN",409.61,0)
409.61
"BLD",5912,"KRN",771,0)
771
"BLD",5912,"KRN",870,0)
870
"BLD",5912,"KRN",8989.51,0)
8989.51
"BLD",5912,"KRN",8989.52,0)
8989.52
"BLD",5912,"KRN",8994,0)
8994
"BLD",5912,"KRN","B",.4,.4)

"BLD",5912,"KRN","B",.401,.401)

"BLD",5912,"KRN","B",.402,.402)

"BLD",5912,"KRN","B",.403,.403)

"BLD",5912,"KRN","B",.5,.5)

"BLD",5912,"KRN","B",.84,.84)

"BLD",5912,"KRN","B",3.6,3.6)

"BLD",5912,"KRN","B",3.8,3.8)

"BLD",5912,"KRN","B",9.2,9.2)

"BLD",5912,"KRN","B",9.8,9.8)

"BLD",5912,"KRN","B",19,19)

"BLD",5912,"KRN","B",19.1,19.1)

"BLD",5912,"KRN","B",101,101)

"BLD",5912,"KRN","B",409.61,409.61)

"BLD",5912,"KRN","B",771,771)

"BLD",5912,"KRN","B",870,870)

"BLD",5912,"KRN","B",8989.51,8989.51)

"BLD",5912,"KRN","B",8989.52,8989.52)

"BLD",5912,"KRN","B",8994,8994)

"BLD",5912,"QUES",0)
^9.62^^
"BLD",5912,"REQB",0)
^9.611^1^1
"BLD",5912,"REQB",1,0)
ECX*3.0*71^1
"BLD",5912,"REQB","B","ECX*3.0*71",1)

"MBREQ")
0
"PKG",535,-1)
1^1
"PKG",535,0)
DSS EXTRACTS^ECX
"PKG",535,20,0)
^9.402P^^
"PKG",535,22,0)
^9.49I^1^1
"PKG",535,22,1,0)
3.0^2971222^3000224^66481
"PKG",535,22,1,"PAH",1,0)
80^3050331
"PKG",535,22,1,"PAH",1,1,0)
^^1^1^3050331
"PKG",535,22,1,"PAH",1,1,1,0)
Wrong Production Division being pulled for Lab Extracts.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","ECXLABN")
0^1^B25958397
"RTN","ECXLABN",1,0)
ECXLABN ;ALB/JAP,BIR/CML-Lab Extract for DSS (New Format - With LMIP Codes) ; 9/20/04 3:03pm
"RTN","ECXLABN",2,0)
 ;;3.0;DSS EXTRACTS;**1,11,8,13,28,24,30,31,32,33,39,42,46,70,71,80**;Dec 22, 1997
"RTN","ECXLABN",3,0)
BEG ;entry point
"RTN","ECXLABN",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABN",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABN",6,0)
 Q
"RTN","ECXLABN",7,0)
 ;
"RTN","ECXLABN",8,0)
START ; entry when queued
"RTN","ECXLABN",9,0)
 K ^LRO(64.03),^TMP($J,"ECXP")
"RTN","ECXLABN",10,0)
 N ECDOCPC
"RTN","ECXLABN",11,0)
 S LRSDT=ECSD,LREDT=ECED,QFLG=0
"RTN","ECXLABN",12,0)
 D ^LRCAPDSS
"RTN","ECXLABN",13,0)
 ;quit if no completion date for API compile
"RTN","ECXLABN",14,0)
 I '$P($G(^LRO(64.03,1,1,1,0)),U,4) Q
"RTN","ECXLABN",15,0)
 ;quit if tasked and user sends stop request
"RTN","ECXLABN",16,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD D  Q
"RTN","ECXLABN",17,0)
 .S QFLG=1
"RTN","ECXLABN",18,0)
 .K ^LRO(64.03) S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",19,0)
 ;otherwise, continue
"RTN","ECXLABN",20,0)
 K ECXDD D FIELD^DID(64.03,1,,"SPECIFIER","ECXDD")
"RTN","ECXLABN",21,0)
 S ECPROF=$E(+$P(ECXDD("SPECIFIER"),"P",2)),ECLRN=1 K ECXDD
"RTN","ECXLABN",22,0)
 F  S ECLRN=$O(^LRO(64.03,ECLRN)) Q:'ECLRN  D  Q:QFLG
"RTN","ECXLABN",23,0)
 .Q:'$D(^LRO(64.03,ECLRN,0))
"RTN","ECXLABN",24,0)
 .S EC1=^LRO(64.03,ECLRN,0),ECDOC=ECPROF_$P(EC1,U,2),ECDOCNPI=""
"RTN","ECXLABN",25,0)
 .S ECLOC=$P(EC1,U,15),EC=$P(EC1,U,3),ECDOCPC=$$PRVCLASS^ECXUTL($P(EC1,U,2),$P(EC1,U,4))
"RTN","ECXLABN",26,0)
 .I EC]"" D GET
"RTN","ECXLABN",27,0)
 K ^LRO(64.03),^TMP($J,"ECXP") S ^LRO(64.03,0)="WKLD LOG FILE^64.03^"
"RTN","ECXLABN",28,0)
 K ECDOCNPI,ECXAGC,ECXL1,ECXL2
"RTN","ECXLABN",29,0)
 Q
"RTN","ECXLABN",30,0)
 ;
"RTN","ECXLABN",31,0)
GET ;get data
"RTN","ECXLABN",32,0)
 N X,ECXSTN
"RTN","ECXLABN",33,0)
 S ECF=$S($P(EC,";",2)="DPT(":2,$P(EC,";",2)="LRT(67,":67,1:0) Q:'ECF
"RTN","ECXLABN",34,0)
 S ECIFN=$P(EC,";")
"RTN","ECXLABN",35,0)
 ;resolve ecloc
"RTN","ECXLABN",36,0)
 S ECXL1=+$P(ECLOC,";",1),ECXL2=$P(ECLOC,";",2)
"RTN","ECXLABN",37,0)
 I ECF=2 S ECLOC=$S(ECXL1>0:ECXL1,1:"") I ECXL2]"",ECXL2'="SC(" S ECLOC=""
"RTN","ECXLABN",38,0)
 I ECF=67 D  S ECLOC=ECXSTN
"RTN","ECXLABN",39,0)
 .S (ECXSTN,ECXAGC)=""
"RTN","ECXLABN",40,0)
 .I (ECXL2'="DIC(4,")!('$D(^DIC(4,ECXL1))) S ECXSTN="XXXXX",ECXAGC="XX" Q
"RTN","ECXLABN",41,0)
 .S ECXSTN=$P(^DIC(4,ECXL1,"99"),U,1),ECXAGC=$E($P(^(99),U,5),1,2)
"RTN","ECXLABN",42,0)
 .S:ECXSTN="" ECXSTN="ZZZZZ" S:ECXAGC="" ECXAGC="ZZ"
"RTN","ECXLABN",43,0)
 S ECDT=$P(EC1,U,13),ECD=$P(ECDT,"."),ECTM=$$ECXTIME^ECXUTL(ECDT)
"RTN","ECXLABN",44,0)
 S ECWKLD=$P(EC1,U,11),ECWK="" I $D(^LAM(ECWKLD,0)) S ECWK=$P(^(0),U,2)
"RTN","ECXLABN",45,0)
 S (ECXADMDT,ECTREAT,ECNA,ECSN,ECMN,ECPTTM,ECPTPR,ECCLAS)="",ECA="O",ECXERR=0
"RTN","ECXLABN",46,0)
 S (ECPTNPI,ECASPR,ECCLAS2,ECASNPI)=""
"RTN","ECXLABN",47,0)
 ;get the patient data if record is in file #2
"RTN","ECXLABN",48,0)
 I ECF=2 D PAT(ECIFN,ECDT,.ECXERR)
"RTN","ECXLABN",49,0)
 Q:ECXERR
"RTN","ECXLABN",50,0)
 ;get patient data if record is in file #67
"RTN","ECXLABN",51,0)
 I ECF=67 S ECSN="000123456",ECNA="RFRL" I $D(^LRT(67,ECIFN,0)) D
"RTN","ECXLABN",52,0)
 .S ECXMPI="",EC0=^LRT(67,ECIFN,0),ECNA=$E($P($P(EC0,U),",")_"    ",1,4)
"RTN","ECXLABN",53,0)
 .S ECSN=$P(EC0,U,9) D
"RTN","ECXLABN",54,0)
 ..S ECNA=$TR(ECNA,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABN",55,0)
 ..I ECSN="" S ECSN="000123456" Q
"RTN","ECXLABN",56,0)
 ..S ECSN=$TR(ECSN," "),ECSN=$TR(ECSN,"-")
"RTN","ECXLABN",57,0)
 ..I ($L(ECSN)<9)!($L(ECSN)>10) S ECSN="000123456" Q
"RTN","ECXLABN",58,0)
 ..I $L(ECSN)=9,ECSN'?9N S ECSN="000123456" Q
"RTN","ECXLABN",59,0)
 ..I $L(ECSN)=10,ECSN'?9N1"P" S ECSN="000123456"
"RTN","ECXLABN",60,0)
 ;
"RTN","ECXLABN",61,0)
 ;- Only set treating spec (TS) to TS in file #64.03 if it does not exist
"RTN","ECXLABN",62,0)
 I ECA="I",ECTREAT="" S ECTREAT=$P($G(^DIC(45.7,+$P(EC1,U,10),0)),U,2)
"RTN","ECXLABN",63,0)
 S (ECXDOM,ECXDSSD)=""
"RTN","ECXLABN",64,0)
 S X=$G(^ECX(727.831,+ECTREAT,0)) S:X'="" ECXDOM=$P(X,U,2)
"RTN","ECXLABN",65,0)
 ;
"RTN","ECXLABN",66,0)
 ;- Get ordering stop code and ordering date
"RTN","ECXLABN",67,0)
 S ECXORDST=+$P(EC1,U,15),ECXORDST=$S(ECXORDST:$P($G(^ECX(728.44,ECXORDST,0)),U,2),1:"")
"RTN","ECXLABN",68,0)
 S ECXORDDT=$S($P(EC1,U,14):$$ECXDATE^ECXUTL($P(EC1,U,14),ECXYM),1:"")
"RTN","ECXLABN",69,0)
 ;
"RTN","ECXLABN",70,0)
 ;- Get Production Division - ECXDIEN added p-80
"RTN","ECXLABN",71,0)
 N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN)  ;P-46
"RTN","ECXLABN",72,0)
 K ECXDIEN
"RTN","ECXLABN",73,0)
 ;
"RTN","ECXLABN",74,0)
 ;- Observation patient indicator (YES/NO)
"RTN","ECXLABN",75,0)
 S ECXOBS=$$OBSPAT^ECXUTL4(ECA,ECTREAT)
"RTN","ECXLABN",76,0)
 ;
"RTN","ECXLABN",77,0)
 ;- If no encounter number don't file record
"RTN","ECXLABN",78,0)
 S ECXENC=$$ENCNUM^ECXUTL4(ECA,ECSN,ECXADMDT,ECD,ECTREAT,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABN",79,0)
 ;create extract record only if patient name and accession area exist
"RTN","ECXLABN",80,0)
 I ECNA]"" S ECT=$P(EC1,U,8),ECURG=$P(EC1,U,9),EC=+$P(EC1,U,7) I EC D
"RTN","ECXLABN",81,0)
 .S:ECF=2 ECACA=EC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",82,0)
 .S:ECF=67 ECACA=ECXAGC_U_$P($G(^LRO(68,EC,0)),U,11)
"RTN","ECXLABN",83,0)
 .D FILE
"RTN","ECXLABN",84,0)
 Q
"RTN","ECXLABN",85,0)
 ;
"RTN","ECXLABN",86,0)
PAT(ECXDFN,ECXDATE,ECXERR) ;get/set patient data
"RTN","ECXLABN",87,0)
 N X,OK,PT
"RTN","ECXLABN",88,0)
 ;get data
"RTN","ECXLABN",89,0)
 I $D(^TMP($J,"ECXP",ECXDFN)) D
"RTN","ECXLABN",90,0)
 .S PT=^TMP($J,"ECXP",ECXDFN),ECNA=$P(PT,U)
"RTN","ECXLABN",91,0)
 .S ECSN=$P(PT,U,2),ECXMPI=$P(PT,U,3)
"RTN","ECXLABN",92,0)
 ;set data and save for later
"RTN","ECXLABN",93,0)
 I '$D(^TMP($J,"ECXP",ECXDFN)) D  Q:'OK
"RTN","ECXLABN",94,0)
 .K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,$P(ECSD,"."),"1;",.ECXPAT)
"RTN","ECXLABN",95,0)
 .I 'OK S ECXERR=1 Q
"RTN","ECXLABN",96,0)
 .S ECNA=ECXPAT("NAME"),ECSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABN",97,0)
 .S ^TMP($J,"ECXP",ECXDFN)=ECNA_U_ECSN_U_ECXMPI
"RTN","ECXLABN",98,0)
 ;get date specific data
"RTN","ECXLABN",99,0)
 S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECA=$P(X,U),ECMN=$P(X,U,2),ECTREAT=$P(X,U,3),ECXADMDT=$P(X,U,4)
"RTN","ECXLABN",100,0)
 S X=$$PRIMARY^ECXUTL2(ECXDFN,$P(ECXDATE,"."),ECPROF)
"RTN","ECXLABN",101,0)
 S ECPTTM=$P(X,U,1),ECPTPR=$P(X,U,2),ECCLAS=$P(X,U,3),ECPTNPI=$P(X,U,4)
"RTN","ECXLABN",102,0)
 S ECASPR=$P(X,U,5),ECCLAS2=$P(X,U,6),ECASNPI=$P(X,U,7)
"RTN","ECXLABN",103,0)
 Q
"RTN","ECXLABN",104,0)
 ;
"RTN","ECXLABN",105,0)
FILE ;file record
"RTN","ECXLABN",106,0)
 ;node0
"RTN","ECXLABN",107,0)
 ;facility^patient number^SSN (or equivalent)^name^in/out ECA^
"RTN","ECXLABN",108,0)
 ;day^accession area^abbreviation^test^urgency^treating spec^
"RTN","ECXLABN",109,0)
 ;location^provider and file^
"RTN","ECXLABN",110,0)
 ;movement number^file^time^workload code^primary care team^
"RTN","ECXLABN",111,0)
 ;primary care provider
"RTN","ECXLABN",112,0)
 ;node1
"RTN","ECXLABN",113,0)
 ;mpi^dss dept^provider npi^pc provider npi^pc prov person class^
"RTN","ECXLABN",114,0)
 ;assoc pc prov^assoc pc prov person class^assoc pc prov npi^
"RTN","ECXLABN",115,0)
 ;dom ECXDOM^observ pat ind ECXOBS^encounter num ECXENC^
"RTN","ECXLABN",116,0)
 ;ord stop code ECXORDST^ord date ECXORDDT^production division
"RTN","ECXLABN",117,0)
 ;ECXPDIV^^ordering provider person class
"RTN","ECXLABN",118,0)
 ;ECDOCPC
"RTN","ECXLABN",119,0)
 N DA,DIK
"RTN","ECXLABN",120,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABN",121,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECIFN_U_ECSN_U_ECNA_U_ECA_U
"RTN","ECXLABN",122,0)
 S ECODE=ECODE_$$ECXDATE^ECXUTL(ECD,ECXYM)_U_ECACA_U_ECT_U_ECURG_U
"RTN","ECXLABN",123,0)
 S ECODE=ECODE_ECTREAT_U_ECLOC_U_ECDOC_U_ECMN_U_ECF_U_ECTM_U_ECWK_U
"RTN","ECXLABN",124,0)
 S ECODE=ECODE_ECPTTM_U_ECPTPR_U
"RTN","ECXLABN",125,0)
 ;(ECACA=acc area^abbreviation)
"RTN","ECXLABN",126,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECDOCNPI_U_ECPTNPI_U_ECCLAS_U_ECASPR_U
"RTN","ECXLABN",127,0)
 S ECODE1=ECODE1_ECCLAS2_U_ECASNPI_U_ECXDOM_U_ECXOBS_U_ECXENC_U
"RTN","ECXLABN",128,0)
 S ECODE1=ECODE1_ECXORDST_U_ECXORDDT_U_ECXPDIV_U
"RTN","ECXLABN",129,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_ECDOCPC
"RTN","ECXLABN",130,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABN",131,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABN",132,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABN",133,0)
 Q
"RTN","ECXLABN",134,0)
 ;
"RTN","ECXLABN",135,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABN",136,0)
 S ECHEAD="LAB"
"RTN","ECXLABN",137,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABN",138,0)
 Q
"RTN","ECXLABN",139,0)
 ;
"RTN","ECXLABN",140,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABN",141,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXLABR")
0^2^B20369624
"RTN","ECXLABR",1,0)
ECXLABR ;ALB/JAP,BIR/CML-LAR Extract for DSS (New Format - With LMIP Codes) ; 11/10/04 11:23am
"RTN","ECXLABR",2,0)
 ;;3.0;DSS EXTRACTS;**8,24,33,37,39,46,71,80**;Dec 22, 1997
"RTN","ECXLABR",3,0)
BEG ;entry point from option
"RTN","ECXLABR",4,0)
 D SETUP I ECFILE="" Q
"RTN","ECXLABR",5,0)
 D ^ECXTRAC,^ECXKILL
"RTN","ECXLABR",6,0)
 Q
"RTN","ECXLABR",7,0)
 ;
"RTN","ECXLABR",8,0)
START ; entry when queued
"RTN","ECXLABR",9,0)
 N X,OK,ECTRS,ECTRANS,ECTRIEN,ECDOC,ECDOCPC
"RTN","ECXLABR",10,0)
 K ^LAR(64.036) S LRSDT=ECSD,LREDT=ECED
"RTN","ECXLABR",11,0)
 D ^LRCAPDAR
"RTN","ECXLABR",12,0)
 ;quit if no completion date for API compile
"RTN","ECXLABR",13,0)
 I '$P($G(^LAR(64.036,1,2,1,0)),U,4) Q
"RTN","ECXLABR",14,0)
 ;build local array of workload codes for local lab tests linked to
"RTN","ECXLABR",15,0)
 ;DSS tests
"RTN","ECXLABR",16,0)
 K ECLOC S ECDTST=0
"RTN","ECXLABR",17,0)
 F  S ECDTST=$O(^ECX(727.2,1,1,ECDTST)) Q:('ECDTST)  S ECLTST=0 D
"RTN","ECXLABR",18,0)
 .F  S ECLTST=$O(^ECX(727.2,1,1,ECDTST,"LOC",ECLTST)) Q:'ECLTST  D
"RTN","ECXLABR",19,0)
 ..S ECLTIEN=+^ECX(727.2,1,1,ECDTST,"LOC",ECLTST,0)
"RTN","ECXLABR",20,0)
 ..S ECWCDA=+$G(^LAB(60,ECLTIEN,64))
"RTN","ECXLABR",21,0)
 ..I ECWCDA S ECWC=$P(^LAM(ECWCDA,0),U,2),ECLOC(ECWCDA)=ECWC
"RTN","ECXLABR",22,0)
 K ECLTIEN
"RTN","ECXLABR",23,0)
 ;process temporary lab file #64.036
"RTN","ECXLABR",24,0)
 S QFLG=0,ECLRN=1
"RTN","ECXLABR",25,0)
 F  S ECLRN=$O(^LAR(64.036,ECLRN)) Q:('ECLRN)!(QFLG)  D
"RTN","ECXLABR",26,0)
 .I $D(^LAR(64.036,ECLRN,0))  D
"RTN","ECXLABR",27,0)
 ..S EC1=^LAR(64.036,ECLRN,0),ECF=$P(EC1,U,2)
"RTN","ECXLABR",28,0)
 ..Q:ECF=""
"RTN","ECXLABR",29,0)
 ..S ECXDFN=$P(EC1,U,3),ECPTPR=$P($G(EC1),U,11),ECCLASS=""
"RTN","ECXLABR",30,0)
 ..S ECXTIME=$S($P(EC1,U,10)="":"000300",1:$P(EC1,U,10))
"RTN","ECXLABR",31,0)
 ..S ECXDATE=$P(EC1,U,9)_"."_$P(EC1,U,10)
"RTN","ECXLABR",32,0)
 ..I ECPTPR S ECCLASS=$$PRVCLASS^ECXUTL(ECPTPR,ECXDATE)
"RTN","ECXLABR",33,0)
 ..S ECORDT=$$ECXDATE^ECXUTL($P(EC1,U,4),ECXYM)
"RTN","ECXLABR",34,0)
 ..S ECORTM=$$ECXTIME^ECXUTL($P(EC1,U,4)_"."_$P(EC1,U,5))
"RTN","ECXLABR",35,0)
 ..S ECREDT=$$ECXDATE^ECXUTL($P(EC1,U,6),ECXYM)
"RTN","ECXLABR",36,0)
 ..S ECRETM=$$ECXTIME^ECXUTL($P(EC1,U,6)_"."_$P(EC1,U,7))
"RTN","ECXLABR",37,0)
 ..S ECSCDT=$$ECXDATE^ECXUTL($P(EC1,U,9),ECXYM)
"RTN","ECXLABR",38,0)
 ..S ECSCTM=$$ECXTIME^ECXUTL($P(EC1,U,9)_"."_$P(EC1,U,10))
"RTN","ECXLABR",39,0)
 ..S (ECXADMDT,ECXDOM,ECXDSSD,ECXPNM,ECXSSN,ECXA,ECXMN,ECXTS)=""
"RTN","ECXLABR",40,0)
 ..I ECF=2 D  Q:'OK
"RTN","ECXLABR",41,0)
 ...K ECXPAT S OK=$$PAT^ECXUTL3(ECXDFN,ECXDATE,"1;",.ECXPAT)
"RTN","ECXLABR",42,0)
 ...Q:'OK
"RTN","ECXLABR",43,0)
 ...S ECXPNM=ECXPAT("NAME"),ECXSSN=ECXPAT("SSN"),ECXMPI=ECXPAT("MPI")
"RTN","ECXLABR",44,0)
 ...S X=$$INP^ECXUTL2(ECXDFN,ECXDATE),ECXA=$P(X,U),ECXADMDT=$P(X,U,4)
"RTN","ECXLABR",45,0)
 ...S ECXMN=$P(X,U,2),ECXTS=$P(X,U,3),ECXDOM=$P(X,U,10)
"RTN","ECXLABR",46,0)
 ..;allow for referral patients in future??
"RTN","ECXLABR",47,0)
 ..;I ECF=67 S ECSN="000123456",ECNA="RFRL"
"RTN","ECXLABR",48,0)
 ..;loop on results multiple
"RTN","ECXLABR",49,0)
 ..;
"RTN","ECXLABR",50,0)
 ..;Get production division ECXDIEN added p-80
"RTN","ECXLABR",51,0)
 ..N ECXPDIV,ECXDIEN S ECXDIEN=$O(^DIC(4,"D",ECINST,"")),ECXPDIV=$$RADDIV^ECXDEPT(ECXDIEN) ;p-46
"RTN","ECXLABR",52,0)
 ..K ECXDIEN
"RTN","ECXLABR",53,0)
 ..;- Observation patient indicator (y/n)
"RTN","ECXLABR",54,0)
 ..S ECXOBS=$$OBSPAT^ECXUTL4(ECXA,ECXTS)
"RTN","ECXLABR",55,0)
 ..;
"RTN","ECXLABR",56,0)
 ..;- If no encounter number don't file record
"RTN","ECXLABR",57,0)
 ..S ECXENC=$$ENCNUM^ECXUTL4(ECXA,ECXSSN,ECXADMDT,$P(EC1,U,9),ECXTS,ECXOBS,ECHEAD,,) Q:ECXENC=""
"RTN","ECXLABR",58,0)
 ..S ECRES=0
"RTN","ECXLABR",59,0)
 ..F  S ECRES=$O(^LAR(64.036,ECLRN,1,ECRES)) Q:('ECRES)!(QFLG)  D
"RTN","ECXLABR",60,0)
 ...I $D(^LAR(64.036,ECLRN,1,ECRES,0)) D  Q:QFLG
"RTN","ECXLABR",61,0)
 ....S EC2=^LAR(64.036,ECLRN,1,ECRES,0),ECN=$P(EC2,U),ECRS=$P(EC2,U,2)
"RTN","ECXLABR",62,0)
 ....S ECHL=$E($P(EC2,U,3)),ECWC=+$P(EC2,U,4)
"RTN","ECXLABR",63,0)
 ....S ECWC=$S($D(ECLOC(ECWC)):ECLOC(ECWC),1:"")
"RTN","ECXLABR",64,0)
 ....;
"RTN","ECXLABR",65,0)
 ....; - Free text results translation
"RTN","ECXLABR",66,0)
 ....S ECTRANS="",ECTRS=ECRS
"RTN","ECXLABR",67,0)
 ....I +ECTRS S ECTRS=$TR(ECTRS,",","") D
"RTN","ECXLABR",68,0)
 .....I (ECTRS?.N)!(ECTRS?.N1".".N) S ECRS=ECTRS
"RTN","ECXLABR",69,0)
 ....F  Q:$E(ECTRS,1)'=" "  S ECTRS=$E(ECTRS,2,$L(ECTRS))
"RTN","ECXLABR",70,0)
 ....F  Q:$E(ECTRS,$L(ECTRS))'=" "  S ECTRS=$E(ECTRS,1,($L(ECTRS)-1))
"RTN","ECXLABR",71,0)
 ....I ECTRS]"" I ECTRS'?.N I ECTRS'?.N1".".N D  ;translate
"RTN","ECXLABR",72,0)
 .....S ECTRS=$TR(ECRS,"abcdefghijklmnopqrstuvwxyz","ABCDEFGHIJKLMNOPQRSTUVWXYZ")
"RTN","ECXLABR",73,0)
 .....S ECTRIEN="",ECTRIEN=$O(^ECX(727.7,"B",ECTRS,ECTRIEN))
"RTN","ECXLABR",74,0)
 .....S ECTRANS=$S(ECTRIEN:$P(^ECX(727.7,ECTRIEN,0),U,2),1:5)
"RTN","ECXLABR",75,0)
 ....;
"RTN","ECXLABR",76,0)
 ....I ECWC]"" D FILE
"RTN","ECXLABR",77,0)
 K ^LAR(64.036) S ^LAR(64.036,0)="LAB DSS LAR EXTRACT^64.036^"
"RTN","ECXLABR",78,0)
 Q
"RTN","ECXLABR",79,0)
 ;
"RTN","ECXLABR",80,0)
FILE ;file record
"RTN","ECXLABR",81,0)
 ;node0
"RTN","ECXLABR",82,0)
 ;facility (ECINST)^dfn (ECXDFN)^ssn (ECXSSN)^name(ECXPNM)^in/out (ECXA)^
"RTN","ECXLABR",83,0)
 ;day(ECSCDT)^
"RTN","ECXLABR",84,0)
 ;lab test code (ECN)^results (ECRS)^hi/lo indicator (ECHL)^
"RTN","ECXLABR",85,0)
 ;date ordered (ECORDT)^time ordered (ECORTM)^date ready (ECREDT)^
"RTN","ECXLABR",86,0)
 ;time ready (ECRETM)^
"RTN","ECXLABR",87,0)
 ;movement file # (ECXMN)^treating specialty (ECXTS)^
"RTN","ECXLABR",88,0)
 ;workload code(ECWC)^
"RTN","ECXLABR",89,0)
 ;node1
"RTN","ECXLABR",90,0)
 ;mpi (ECXMPI)^dss dept (ECXDSSD)^dom (ECXDOM)^time (ECSCTM)^
"RTN","ECXLABR",91,0)
 ;observ pat ind (ECXOBS)^encounter num (ECXENC)^prod div ECXPDIV^
"RTN","ECXLABR",92,0)
 ;lab results translation ECXTRANS^ordering provider (ECPTPR)^
"RTN","ECXLABR",93,0)
 ;ordering provider person class (ECCLASS)
"RTN","ECXLABR",94,0)
 N DA,DIK
"RTN","ECXLABR",95,0)
 S EC7=$O(^ECX(ECFILE,999999999),-1),EC7=EC7+1
"RTN","ECXLABR",96,0)
 S ECODE=EC7_U_EC23_U_ECINST_U_ECXDFN_U_ECXSSN_U_ECXPNM_U_ECXA_U
"RTN","ECXLABR",97,0)
 S ECODE=ECODE_ECSCDT_U_$$RJ^XLFSTR(ECN,4,0)_U_ECRS_U_ECHL_U_ECORDT_U
"RTN","ECXLABR",98,0)
 S ECODE=ECODE_$$LJ^XLFSTR(ECORTM,6,0)_U
"RTN","ECXLABR",99,0)
 S ECODE=ECODE_ECREDT_U_$$LJ^XLFSTR(ECRETM,6,0)_U_ECXMN_U_ECXTS_U_ECWC_U
"RTN","ECXLABR",100,0)
 S ECODE1=ECXMPI_U_ECXDSSD_U_ECXDOM_U_ECSCTM_U_ECXOBS_U_ECXENC_U_ECXPDIV_U_ECTRANS
"RTN","ECXLABR",101,0)
 I ECXLOGIC>2004 S ECODE1=ECODE1_U_2_ECPTPR_U_ECCLASS
"RTN","ECXLABR",102,0)
 S ^ECX(ECFILE,EC7,0)=ECODE,^ECX(ECFILE,EC7,1)=ECODE1,ECRN=ECRN+1
"RTN","ECXLABR",103,0)
 S DA=EC7,DIK="^ECX("_ECFILE_"," D IX1^DIK K DIK,DA
"RTN","ECXLABR",104,0)
 I $D(ZTQUEUED),$$S^%ZTLOAD S QFLG=1
"RTN","ECXLABR",105,0)
 Q
"RTN","ECXLABR",106,0)
 ;
"RTN","ECXLABR",107,0)
SETUP ;Set required input for ECXTRAC
"RTN","ECXLABR",108,0)
 S ECHEAD="LAR"
"RTN","ECXLABR",109,0)
 D ECXDEF^ECXUTL2(ECHEAD,.ECPACK,.ECGRP,.ECFILE,.ECRTN,.ECPIECE,.ECVER)
"RTN","ECXLABR",110,0)
 Q
"RTN","ECXLABR",111,0)
 ;
"RTN","ECXLABR",112,0)
QUE ; entry point for the background requeuing handled by ECXTAUTO
"RTN","ECXLABR",113,0)
 D SETUP,QUE^ECXTAUTO,^ECXKILL Q
"RTN","ECXSCLD")
0^3^B38077592
"RTN","ECXSCLD",1,0)
ECXSCLD ;BIR/DMA,CML-Enter, Print and Edit Entries in 728.44 ; 9/21/04 7:33am
"RTN","ECXSCLD",2,0)
 ;;3.0;DSS EXTRACTS;**2,8,24,30,71,80**;Dec 22, 1997
"RTN","ECXSCLD",3,0)
EN ;entry point from option
"RTN","ECXSCLD",4,0)
 ;load entries
"RTN","ECXSCLD",5,0)
 W !!,"This option creates local entries in the DSS CLINIC AND STOP CODES file.",!
"RTN","ECXSCLD",6,0)
 I '$D(^ECX(728.44)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",7,0)
 K ZTSAVE S ZTDESC="Gather Clinic stop codes for DSS",ZTRTN="START^ECXSCLD",ZTIO="" D ^%ZTLOAD
"RTN","ECXSCLD",8,0)
 Q
"RTN","ECXSCLD",9,0)
START ; entry point
"RTN","ECXSCLD",10,0)
 S EC=0,ECNT=0 F  S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)) S ECD=^(0),DAT=$G(^("I")) I $P(ECD,U,3)="C" D FIX
"RTN","ECXSCLD",11,0)
 K DIK S DIK="^ECX(728.44,",DIK(1)=".01^B" D ENALL^DIK
"RTN","ECXSCLD",12,0)
 ;S $P(^ECX(728.44,0),U,3,4)=ECL_U_ECNT
"RTN","ECXSCLD",13,0)
 K ZTDESC,EC,J,ECD,ECD2,ECL,ECS,ECS2,ECP
"RTN","ECXSCLD",14,0)
 S ZTREQ="@" Q
"RTN","ECXSCLD",15,0)
 ;
"RTN","ECXSCLD",16,0)
FIX ; get stop codes and default style for feeder key
"RTN","ECXSCLD",17,0)
 ; 1 if no credit stop code - 5 if credit stop code exists
"RTN","ECXSCLD",18,0)
 K ECD2,ECS2 I $D(^ECX(728.44,EC,0)) S ECD2=^(0) F ECS=2,3 S ECS2(ECS)=$P(ECD2,U,ECS)
"RTN","ECXSCLD",19,0)
 S ID=+DAT,RD=$P(DAT,U,2)
"RTN","ECXSCLD",20,0)
 I $D(ECD2) D
"RTN","ECXSCLD",21,0)
 .I ID,ID'>DT I 'RD!(RD>DT) S:$P(ECD2,U,10)'=ID $P(ECD2,U,7)="" S $P(ECD2,U,10)=ID
"RTN","ECXSCLD",22,0)
 .I ID,RD,RD'>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",23,0)
 .I ID,ID>DT S:$P(ECD2,U,10) $P(ECD2,U,7)="" S $P(ECD2,U,10)=""
"RTN","ECXSCLD",24,0)
 .I 'ID,$P(ECD2,U,10) S $P(ECD2,U,7)="",$P(ECD2,U,10)=""
"RTN","ECXSCLD",25,0)
 F ECS=7,18 S ECP=+$P(ECD,U,ECS),ECS(ECS)=$P($G(^DIC(40.7,ECP,0)),U,2)
"RTN","ECXSCLD",26,0)
 S ECDF=$S(ECS(18)]"":5,1:1) S:$P(ECD,U,17)="Y" ECDF=6 S:$G(^SC(EC,"OOS")) ECDF=6
"RTN","ECXSCLD",27,0)
 S ECL=EC,ECD=EC_U_ECS(7)_U_ECS(18)
"RTN","ECXSCLD",28,0)
 I '$D(ECD2) D
"RTN","ECXSCLD",29,0)
 .S $P(^ECX(728.44,EC,0),U,1,5)=ECD_U_ECS(7)_U_ECS(18),ECNT=ECNT+1,$P(^(0),U,6)=ECDF
"RTN","ECXSCLD",30,0)
 I $D(ECD2) D
"RTN","ECXSCLD",31,0)
 .S $P(ECD2,U,1,3)=ECD
"RTN","ECXSCLD",32,0)
 .I +ECS(7)'=+ECS2(2)!(+ECS(18)'=+ECS2(3)) S $P(ECD2,U,7)=""
"RTN","ECXSCLD",33,0)
 .S ^ECX(728.44,EC,0)=ECD2
"RTN","ECXSCLD",34,0)
 Q
"RTN","ECXSCLD",35,0)
 ;
"RTN","ECXSCLD",36,0)
PRINT ; print worksheet for updates
"RTN","ECXSCLD",37,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",38,0)
 W !!,"This option produces a worksheet of (A)ll DSS Clinic Stops or only the",!,"(U)nreviewed Clinic Stops that are awaiting approval.  Clinics that were"
"RTN","ECXSCLD",39,0)
 W !,"defined as ""inactive"" by MAS the last time the option ""Create DSS Clinic",!,"Stop Code File"" was run will be indicated with an ""*"".",!
"RTN","ECXSCLD",40,0)
 S DIR(0)="S^A:ALL;U:UNREVIEWED",DIR("A")="Enter ""A"" or ""U""",DIR("?",1)="Enter: ""A"" to print a worksheet of all DSS Clinic Stops,",DIR("?")="       ""U"" to print only the Clinic Stops that have not been approved."
"RTN","ECXSCLD",41,0)
 D ^DIR K DIR G END:$D(DIRUT) S ECALL=$E(Y)
"RTN","ECXSCLD",42,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","ECXSCLD",43,0)
 I $D(IO("Q")) K ZTSAVE S ZTDESC="DSS clinic stop code work sheet",ZTRTN="SPRINT^ECXSCLD",ZTSAVE("ECALL")="" D ^%ZTLOAD,HOME^%ZIS Q
"RTN","ECXSCLD",44,0)
 U IO
"RTN","ECXSCLD",45,0)
SPRINT ; queued entry to print work sheet
"RTN","ECXSCLD",46,0)
 S QFLG=0,$P(LN,"-",81)="",PG=0
"RTN","ECXSCLD",47,0)
 S ECDATE=$O(^ECX(728.44,"A1","")) I ECDATE S ECDATE=-ECDATE,ECDATE=$$FMTE^XLFDT(ECDATE,"5DF"),ECDATE=$TR(ECDATE," ","0")
"RTN","ECXSCLD",48,0)
 K ^TMP("EC",$J) F J=0:0 S J=$O(^ECX(728.44,J)) Q:'J  I $D(^ECX(728.44,J,0)),$S(ECALL="A":1,1:$P(^(0),U,7)="") S ECSD=^(0) I $D(^SC(J,0)) S ECSC=$P(^(0),U),^TMP("EC",$J,ECSC)=$P(ECSD,U,2,200)
"RTN","ECXSCLD",49,0)
 D HEAD S ECSC="" I $O(^TMP("EC",$J,ECSC))="" W !!,"NO DATA FOUND FOR WORKSHEET.",! G END
"RTN","ECXSCLD",50,0)
 F J=1:1 S ECSC=$O(^TMP("EC",$J,ECSC)) Q:ECSC=""  S ECD=^(ECSC) D SHOWEM Q:QFLG
"RTN","ECXSCLD",51,0)
 I $E(IOST)="C",'QFLG D SS
"RTN","ECXSCLD",52,0)
 K ^TMP("EC",$J),J,ECSC,ECSD,ECDATE,QFLG,PG,LN,SS
"RTN","ECXSCLD",53,0)
 W:$Y @IOF D ^%ZISC S ZTREQ="@"
"RTN","ECXSCLD",54,0)
 Q
"RTN","ECXSCLD",55,0)
 ;
"RTN","ECXSCLD",56,0)
HEAD ; header for worksheet
"RTN","ECXSCLD",57,0)
 D SS Q:QFLG
"RTN","ECXSCLD",58,0)
 S PG=PG+1 W:$Y!($E(IOST)="C") @IOF W !,"WORKSHEET FOR DSS CLINIC STOPS",?71,"Page: ",PG
"RTN","ECXSCLD",59,0)
 I ECDATE]"" W !,"(last reviewed on ",ECDATE,")"
"RTN","ECXSCLD",60,0)
 E  W !,"(NEVER REVIEWED)"
"RTN","ECXSCLD",61,0)
 W !
"RTN","ECXSCLD",62,0)
 W !!,?1,"CLINIC",?27,"STOP",?34,"CREDIT",?43,"DSS",?50,"DSS",?59,"ACTION",?67,"NAT'L",?74,"DSS"
"RTN","ECXSCLD",63,0)
 W !,?27,"CODE",?34,"STOP",?43,"STOP",?50,"CREDIT",?67,"CODE",?74,"DEPT",!,?1,"(* - currently inactive)",?34,"CODE",?43,"CODE",?50,"CODE",!,LN Q
"RTN","ECXSCLD",64,0)
 ;
"RTN","ECXSCLD",65,0)
SHOWEM ; list clinics for worksheet
"RTN","ECXSCLD",66,0)
 I $Y+4>IOSL D HEAD Q:QFLG
"RTN","ECXSCLD",67,0)
 W !!,$E(ECSC,1,25) W:$P(ECD,U,9)]"" "*" F J=1:1:5 W ?$P("27,34,43,50,62",",",J),$S($P(ECD,U,J):$P(ECD,U,J),J<3:"",1:"_____")
"RTN","ECXSCLD",68,0)
 S ECN=$P($G(^ECX(728.441,+$P(ECD,U,7),0)),U) W ?67,$S(ECN]"":ECN,1:"____"),?74,$S($P(ECD,U,10)'="":$P(ECD,U,10),1:"___")
"RTN","ECXSCLD",69,0)
 Q
"RTN","ECXSCLD",70,0)
SS ;SCROLL STOPS
"RTN","ECXSCLD",71,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECXSCLD",72,0)
 I $E(IOST)="C",PG>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLG=1 Q
"RTN","ECXSCLD",73,0)
 Q
"RTN","ECXSCLD",74,0)
 ;
"RTN","ECXSCLD",75,0)
EDIT ; put in DSS stopcodes and which one to send
"RTN","ECXSCLD",76,0)
 I '$O(^ECX(728.44,0)) W !,"DSS Clinic stop code file does not exist",!! R X:5 K X Q
"RTN","ECXSCLD",77,0)
 W ! S DIC=728.44,DIC(0)="QEAMZ" D ^DIC G END:Y<0 W !,"STOP CODE : ",$P(Y(0),U,2),!,"CREDIT STOP CODE : ",$P(Y(0),U,3)
"RTN","ECXSCLD",78,0)
 S DIE=DIC,DA=+Y,DR="3;4;5//1;S:X'=4 Y=6;7;6///"_DT_";8" D ^DIE S:$P(^ECX(728.44,DA,0),U,6)'=4 $P(^(0),U,8)="" S $P(^(0),U,7)="" K DIC,DIE,DA G EDIT
"RTN","ECXSCLD",79,0)
 ;
"RTN","ECXSCLD",80,0)
APPROVE ; approve current DSS Stop and Credit Stop codes
"RTN","ECXSCLD",81,0)
 W !!,"This option allows you to mark the current clinic entries in the CLINICS AND",!,"STOP CODES file (#728.44) as ""reviewed"".  Those entries will then be omitted"
"RTN","ECXSCLD",82,0)
 W !,"from the list printed from the ""Clinic and DSS Stop Codes Print"" when you",!,"choose to print only ""unreviewed"" clinics.",!
"RTN","ECXSCLD",83,0)
 K DIR S DIR(0)="Y",DIR("A",1)="Are you ready to approve the reviewed information provided by the",DIR("A")="""Clinic and DSS Stop Codes Print""",DIR("B")="NO"
"RTN","ECXSCLD",84,0)
 S DIR("?",1)="   Enter:"
"RTN","ECXSCLD",85,0)
 S DIR("?",2)="     ""YES"" if you concur with the ""Clinic and DSS Stop Codes Print"","
"RTN","ECXSCLD",86,0)
 S DIR("?",3)="     ""NO"" or <RET> if you do not want to approve the current information,"
"RTN","ECXSCLD",87,0)
 S DIR("?")="     ""^"" to exit option."
"RTN","ECXSCLD",88,0)
 D ^DIR K DIR I 'Y!($D(DIRUT)) G END
"RTN","ECXSCLD",89,0)
 W ! S ZTRTN="APPLOOP^ECXSCLD",ZTIO="",ZTDESC="Approve DSS stop codes for clinic extract" D ^%ZTLOAD W !!,"...approval queued" G END
"RTN","ECXSCLD",90,0)
 ;
"RTN","ECXSCLD",91,0)
APPLOOP ; queued entry to approve action codes
"RTN","ECXSCLD",92,0)
 F EC=0:0 S EC=$O(^ECX(728.44,EC)) Q:'EC  I $D(^(EC,0)) S DA=EC,DIE="^ECX(728.44,",DR="6///"_DT D ^DIE
"RTN","ECXSCLD",93,0)
 S ZTREQ="@" G END
"RTN","ECXSCLD",94,0)
END K X,Y,DA,DR,DIC,DIE,QFLG,PG,LN
"RTN","ECXSCLD",95,0)
 Q
"RTN","ECXSCLD",96,0)
 ;
"RTN","ECXSCLD",97,0)
LOOK ;queued entry to check for new clinics
"RTN","ECXSCLD",98,0)
 S ECD=$E(DT,1,5)-1-($E(DT,4,5)="01"*8800),ECD0=ECD_"00",ECXMISS=10,ECGRP="SCX" K ^TMP("ECXS",$J)
"RTN","ECXSCLD",99,0)
 F EC=0:0 S EC=$O(^SC(EC)) Q:'EC  I $D(^(EC,0)),$P(^(0),U,3)="C",'$D(^ECX(728.44,EC)) S DAT=$G(^SC(EC,"I")) D
"RTN","ECXSCLD",100,0)
 .S ID=+DAT,RD=$P(DAT,U,2) I ID,ID<DT I 'RD!(RD>DT) Q
"RTN","ECXSCLD",101,0)
 .S ^TMP("ECXS",$J,ECXMISS,0)=$J(EC,6)_"    "_$$LJ^XLFSTR($P(^SC(EC,0),U),40),ECXMISS=ECXMISS+1
"RTN","ECXSCLD",102,0)
 D ^ECXSCX1
"RTN","ECXSCLD",103,0)
 Q
"VER")
8.0^22.0
**END**
**END**
