EMERGENCY Released OR*3*148 SEQ #138
Extracted from mail message
**KIDS**:OR*3.0*148^

**INSTALL NAME**
OR*3.0*148
"BLD",15379,0)
OR*3.0*148^ORDER ENTRY/RESULTS REPORTING^0^3020723^y
"BLD",15379,4,0)
^9.64PA^101.24^2
"BLD",15379,4,101.13,0)
101.13
"BLD",15379,4,101.13,222)
y^y^f^^n^^y^o^n
"BLD",15379,4,101.24,0)
101.24
"BLD",15379,4,101.24,222)
n^n^f^^y^^y^r^n
"BLD",15379,4,101.24,224)
I (Y=1083)!(Y=1084)!(Y=1085)
"BLD",15379,4,"B",101.13,101.13)

"BLD",15379,4,"B",101.24,101.24)

"BLD",15379,"INI")
PRE^ORY148
"BLD",15379,"INID")
^n^n
"BLD",15379,"INIT")
POST^ORY148
"BLD",15379,"KRN",0)
^9.67PA^8989.52^19
"BLD",15379,"KRN",.4,0)
.4
"BLD",15379,"KRN",.401,0)
.401
"BLD",15379,"KRN",.401,"NM",0)
^9.68A^^
"BLD",15379,"KRN",.402,0)
.402
"BLD",15379,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",15379,"KRN",.402,"NM",1,0)
OR USER ACCESS OPTIONS    FILE #200^200^0
"BLD",15379,"KRN",.402,"NM","B","OR USER ACCESS OPTIONS    FILE #200",1)

"BLD",15379,"KRN",.403,0)
.403
"BLD",15379,"KRN",.5,0)
.5
"BLD",15379,"KRN",.84,0)
.84
"BLD",15379,"KRN",3.6,0)
3.6
"BLD",15379,"KRN",3.8,0)
3.8
"BLD",15379,"KRN",9.2,0)
9.2
"BLD",15379,"KRN",9.8,0)
9.8
"BLD",15379,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",15379,"KRN",9.8,"NM",1,0)
ORWU^^0^B58780078
"BLD",15379,"KRN",9.8,"NM",2,0)
ORY148^^0^B28509445
"BLD",15379,"KRN",9.8,"NM",3,0)
ORQQPL1^^0^B62658836
"BLD",15379,"KRN",9.8,"NM",4,0)
ORQQPL3^^0^B44640717
"BLD",15379,"KRN",9.8,"NM",5,0)
ORDV04^^0^B69314469
"BLD",15379,"KRN",9.8,"NM",6,0)
ORQQCN1^^0^B20903877
"BLD",15379,"KRN",9.8,"NM",7,0)
ORWPCE1^^0^B57264333
"BLD",15379,"KRN",9.8,"NM",8,0)
ORCXPND1^^0^B55437808
"BLD",15379,"KRN",9.8,"NM",9,0)
ORWDXA^^0^B48948680
"BLD",15379,"KRN",9.8,"NM",10,0)
ORQ11^^0^B70453026
"BLD",15379,"KRN",9.8,"NM",11,0)
ORWSR^^0^B27717336
"BLD",15379,"KRN",9.8,"NM",12,0)
ORWORB^^0^B39716863
"BLD",15379,"KRN",9.8,"NM",13,0)
ORWTPD^^0^B12359172
"BLD",15379,"KRN",9.8,"NM",14,0)
ORWRA^^0^B6121652
"BLD",15379,"KRN",9.8,"NM",15,0)
ORWDPS2^^0^B54324947
"BLD",15379,"KRN",9.8,"NM","B","ORCXPND1",8)

"BLD",15379,"KRN",9.8,"NM","B","ORDV04",5)

"BLD",15379,"KRN",9.8,"NM","B","ORQ11",10)

"BLD",15379,"KRN",9.8,"NM","B","ORQQCN1",6)

"BLD",15379,"KRN",9.8,"NM","B","ORQQPL1",3)

"BLD",15379,"KRN",9.8,"NM","B","ORQQPL3",4)

"BLD",15379,"KRN",9.8,"NM","B","ORWDPS2",15)

"BLD",15379,"KRN",9.8,"NM","B","ORWDXA",9)

"BLD",15379,"KRN",9.8,"NM","B","ORWORB",12)

"BLD",15379,"KRN",9.8,"NM","B","ORWPCE1",7)

"BLD",15379,"KRN",9.8,"NM","B","ORWRA",14)

"BLD",15379,"KRN",9.8,"NM","B","ORWSR",11)

"BLD",15379,"KRN",9.8,"NM","B","ORWTPD",13)

"BLD",15379,"KRN",9.8,"NM","B","ORWU",1)

"BLD",15379,"KRN",9.8,"NM","B","ORY148",2)

"BLD",15379,"KRN",19,0)
19
"BLD",15379,"KRN",19,"NM",0)
^9.68A^3^3
"BLD",15379,"KRN",19,"NM",1,0)
OR CPRS GUI CHART^^0
"BLD",15379,"KRN",19,"NM",2,0)
ORCL CPRS ACCESS^^0
"BLD",15379,"KRN",19,"NM",3,0)
OR PARAM COORDINATOR MENU^^2
"BLD",15379,"KRN",19,"NM","B","OR CPRS GUI CHART",1)

"BLD",15379,"KRN",19,"NM","B","OR PARAM COORDINATOR MENU",3)

"BLD",15379,"KRN",19,"NM","B","ORCL CPRS ACCESS",2)

"BLD",15379,"KRN",19.1,0)
19.1
"BLD",15379,"KRN",101,0)
101
"BLD",15379,"KRN",409.61,0)
409.61
"BLD",15379,"KRN",771,0)
771
"BLD",15379,"KRN",870,0)
870
"BLD",15379,"KRN",8989.51,0)
8989.51
"BLD",15379,"KRN",8989.52,0)
8989.52
"BLD",15379,"KRN",8994,0)
8994
"BLD",15379,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",15379,"KRN",8994,"NM",1,0)
ORWORB TEXT FOLLOWUP^^0
"BLD",15379,"KRN",8994,"NM","B","ORWORB TEXT FOLLOWUP",1)

"BLD",15379,"KRN","B",.4,.4)

"BLD",15379,"KRN","B",.401,.401)

"BLD",15379,"KRN","B",.402,.402)

"BLD",15379,"KRN","B",.403,.403)

"BLD",15379,"KRN","B",.5,.5)

"BLD",15379,"KRN","B",.84,.84)

"BLD",15379,"KRN","B",3.6,3.6)

"BLD",15379,"KRN","B",3.8,3.8)

"BLD",15379,"KRN","B",9.2,9.2)

"BLD",15379,"KRN","B",9.8,9.8)

"BLD",15379,"KRN","B",19,19)

"BLD",15379,"KRN","B",19.1,19.1)

"BLD",15379,"KRN","B",101,101)

"BLD",15379,"KRN","B",409.61,409.61)

"BLD",15379,"KRN","B",771,771)

"BLD",15379,"KRN","B",870,870)

"BLD",15379,"KRN","B",8989.51,8989.51)

"BLD",15379,"KRN","B",8989.52,8989.52)

"BLD",15379,"KRN","B",8994,8994)

"BLD",15379,"QUES",0)
^9.62^^
"BLD",15379,"REQB",0)
^9.611^9^7
"BLD",15379,"REQB",1,0)
XU*8.0*230^2
"BLD",15379,"REQB",2,0)
OR*3.0*132^2
"BLD",15379,"REQB",5,0)
GMPL*2.0*26^2
"BLD",15379,"REQB",6,0)
GMTS*2.7*52^2
"BLD",15379,"REQB",7,0)
PX*1.0*115^2
"BLD",15379,"REQB",8,0)
TIU*1.0*138^2
"BLD",15379,"REQB",9,0)
TIU*1.0*124^2
"BLD",15379,"REQB","B","GMPL*2.0*26",5)

"BLD",15379,"REQB","B","GMTS*2.7*52",6)

"BLD",15379,"REQB","B","OR*3.0*132",2)

"BLD",15379,"REQB","B","PX*1.0*115",7)

"BLD",15379,"REQB","B","TIU*1.0*124",9)

"BLD",15379,"REQB","B","TIU*1.0*138",8)

"BLD",15379,"REQB","B","XU*8.0*230",1)

"DATA",101.13,1,0)
COR^CPRS GUI "core" tabs.
"DATA",101.13,2,0)
RPT^Reports tab.
"DATA",101.24,1083,0)
ORRPW PROBLEM ACTIVE^OR_PLA^1^6^ORDV01^HSQUERY^0^R^^^^V^203^^^^^^PLAILA^ORDV04^59
"DATA",101.24,1083,2)
^^Active Problems^Active Problems^^^^PLA^ORDV04
"DATA",101.24,1083,3,0)
^101.243^10^10
"DATA",101.24,1083,3,1,0)
Facility^^1^^^10^1
"DATA",101.24,1083,3,2,0)
Status^^3^^^4^1^Stat
"DATA",101.24,1083,3,3,0)
Provider Narrative                  ^^4^^1^20^1^Provider Narrative
"DATA",101.24,1083,3,4,0)
Date of Onset^^5^^1^12^1^Date Onset^2
"DATA",101.24,1083,3,5,0)
Date Modified^^6^^^12^1^^2
"DATA",101.24,1083,3,6,0)
Provider Name    ^^7^^0^12^1^Provider
"DATA",101.24,1083,3,7,0)
Note Narrative^1^8^^1^12^1
"DATA",101.24,1083,3,8,0)
ID^1^2
"DATA",101.24,1083,3,9,0)
[+]^^10
"DATA",101.24,1083,3,10,0)
Exposures^0^9^^1^18^0^Exposures
"DATA",101.24,1083,4)
5:4
"DATA",101.24,1084,0)
ORRPW PROBLEM ALL^OR_PLL^1^6^ORDV01^HSQUERY^0^R^^^^V^203^^^^^^PLAILALL^ORDV04^61
"DATA",101.24,1084,2)
^^All Problems^All Problems^^^^PLALL^ORDV04
"DATA",101.24,1084,3,0)
^101.243^10^10
"DATA",101.24,1084,3,1,0)
Facility^^1^^^10^1
"DATA",101.24,1084,3,2,0)
Status^^3^^^8^1
"DATA",101.24,1084,3,3,0)
Provider Narrative                  ^^4^^1^15^1^Provider Narrative
"DATA",101.24,1084,3,4,0)
Date of Onset^^5^^1^18^1^^2
"DATA",101.24,1084,3,5,0)
Date Modified^^6^^1^18^1^^2
"DATA",101.24,1084,3,6,0)
Provider Name    ^^7^^0^12^1^Provider
"DATA",101.24,1084,3,7,0)
Note Narrative^1^8^^1^15^1
"DATA",101.24,1084,3,8,0)
ID^1^2
"DATA",101.24,1084,3,9,0)
[+]^^10
"DATA",101.24,1084,3,10,0)
Exposures^0^9^^1^18^0^Exposures
"DATA",101.24,1084,4)
5:4
"DATA",101.24,1085,0)
ORRPW PROBLEM INACTIVE^OR_PLI^1^6^ORDV01^HSQUERY^0^R^^^^V^203^^^^^^PLAILI^ORDV04^60
"DATA",101.24,1085,2)
^^Inactive Problems^Inactive Problems^^^^PLI^ORDV04
"DATA",101.24,1085,3,0)
^101.243^10^10
"DATA",101.24,1085,3,1,0)
Facility^^1^^^10^1
"DATA",101.24,1085,3,2,0)
Status^^3^^^8^1
"DATA",101.24,1085,3,3,0)
Provider Narrative                  ^^4^^1^15^1^Provider Narrative
"DATA",101.24,1085,3,4,0)
Date of Onset^^5^^1^18^1^^2
"DATA",101.24,1085,3,5,0)
Date Modified^^6^^^18^1^^2
"DATA",101.24,1085,3,6,0)
Provider Name    ^^7^^0^12^1^Provider
"DATA",101.24,1085,3,7,0)
Note Narrative^1^8^^1^15^1
"DATA",101.24,1085,3,8,0)
ID^1^2
"DATA",101.24,1085,3,9,0)
[+]^^10
"DATA",101.24,1085,3,10,0)
Exposures^0^9^^1^18^0^Exposures
"DATA",101.24,1085,4)
5:4
"FIA",101.13)
OR CPRS TABS
"FIA",101.13,0)
^ORD(101.13,
"FIA",101.13,0,0)
101.13I
"FIA",101.13,0,1)
y^y^f^^n^^y^o^n
"FIA",101.13,0,10)

"FIA",101.13,0,11)

"FIA",101.13,0,"RLRO")

"FIA",101.13,0,"VR")
3.0^OR
"FIA",101.13,101.13)
0
"FIA",101.24)
OE/RR REPORT
"FIA",101.24,0)
^ORD(101.24,
"FIA",101.24,0,0)
101.24I
"FIA",101.24,0,1)
n^n^f^^y^^y^r^n
"FIA",101.24,0,10)

"FIA",101.24,0,11)
I (Y=1083)!(Y=1084)!(Y=1085)
"FIA",101.24,0,"RLRO")

"FIA",101.24,0,"VR")
3.0^OR
"FIA",101.24,101.24)
0
"FIA",101.24,101.241)
0
"FIA",101.24,101.243)
0
"FRV1",101.24,"1083,0",13)
ORWRP REPORT TEXT
"FRV1",101.24,"1083,0",13,"F")
;XWB(8994,
"FRV1",101.24,"1083,0",21)
PROBLEM LIST ACTIVE
"FRV1",101.24,"1083,0",21,"F")
;GMT(142.1,
"FRV1",101.24,"1084,0",13)
ORWRP REPORT TEXT
"FRV1",101.24,"1084,0",13,"F")
;XWB(8994,
"FRV1",101.24,"1084,0",21)
PROBLEM LIST ALL
"FRV1",101.24,"1084,0",21,"F")
;GMT(142.1,
"FRV1",101.24,"1085,0",13)
ORWRP REPORT TEXT
"FRV1",101.24,"1085,0",13,"F")
;XWB(8994,
"FRV1",101.24,"1085,0",21)
PROBLEM LIST INACTIVE
"FRV1",101.24,"1085,0",21,"F")
;GMT(142.1,
"INI")
PRE^ORY148
"INIT")
POST^ORY148
"IX",101.13,101.13,"C",0)
101.13^C^Upper case TAB DESCRIPTION field for lookup searching.^R^^F^IR^I^101.13^^^^^LS
"IX",101.13,101.13,"C",1)
S ^ORD(101.13,"C",$E(X,1,30),DA)=""
"IX",101.13,101.13,"C",2)
K ^ORD(101.13,"C",$E(X,1,30),DA)
"IX",101.13,101.13,"C",2.5)
K ^ORD(101.13,"C")
"IX",101.13,101.13,"C",11.1,0)
^.114IA^1^1
"IX",101.13,101.13,"C",11.1,1,0)
1^F^101.13^1^30^1^F
"IX",101.13,101.13,"C",11.1,1,2)
S X=$$UP^XLFSTR(X)
"KRN",.402,1963,-1)
0^1
"KRN",.402,1963,0)
OR USER ACCESS OPTIONS^3020327.1121^@^200^^@^3020709
"KRN",.402,1963,"DIAB",1,1,200.010113,0)
ALL
"KRN",.402,1963,"DR",1,200)
101.01;101.02;101.13;
"KRN",.402,1963,"DR",2,200.010113)
.01:.03
"KRN",19,10082,-1)
0^1
"KRN",19,10082,0)
OR CPRS GUI CHART^CPRSChart version 1.0.19.15^^B^^^^^^^^
"KRN",19,10082,1,0)
^19.06^2^2^3020723^^^^
"KRN",19,10082,1,1,0)
This option is required by the Kernel Broker to give access to the
"KRN",19,10082,1,2,0)
RPCs used by the CPRS GUI (CPRSChart.EXE).
"KRN",19,10082,99.1)
58988,44238
"KRN",19,10082,"RPC",0)
^19.05P^1783^1782
"KRN",19,10082,"RPC",1,0)
GMRC LIST CONSULT REQUESTS
"KRN",19,10082,"RPC",218,0)
XWB GET VARIABLE VALUE
"KRN",19,10082,"RPC",219,0)
TIU AUTHORIZATION
"KRN",19,10082,"RPC",220,0)
TIU CAN CHANGE COSIGNER?
"KRN",19,10082,"RPC",221,0)
TIU CREATE ADDENDUM RECORD
"KRN",19,10082,"RPC",222,0)
TIU CREATE RECORD
"KRN",19,10082,"RPC",223,0)
TIU DELETE RECORD
"KRN",19,10082,"RPC",224,0)
TIU DETAILED DISPLAY
"KRN",19,10082,"RPC",225,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,10082,"RPC",226,0)
TIU GET ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",227,0)
TIU GET ALERT INFO
"KRN",19,10082,"RPC",228,0)
TIU GET DOCUMENT PARAMETERS
"KRN",19,10082,"RPC",229,0)
TIU GET DS TITLES
"KRN",19,10082,"RPC",230,0)
TIU GET DS URGENCIES
"KRN",19,10082,"RPC",231,0)
TIU GET PERSONAL PREFERENCES
"KRN",19,10082,"RPC",232,0)
TIU GET PN TITLES
"KRN",19,10082,"RPC",233,0)
TIU GET RECORD TEXT
"KRN",19,10082,"RPC",234,0)
TIU IDENTIFY CONSULTS CLASS
"KRN",19,10082,"RPC",235,0)
TIU IS THIS A CONSULT?
"KRN",19,10082,"RPC",236,0)
TIU JUSTIFY DELETE?
"KRN",19,10082,"RPC",237,0)
TIU LOAD BOILERPLATE TEXT
"KRN",19,10082,"RPC",238,0)
TIU LOAD RECORD FOR EDIT
"KRN",19,10082,"RPC",239,0)
TIU LOCK RECORD
"KRN",19,10082,"RPC",240,0)
TIU LONG LIST CONSULT TITLES
"KRN",19,10082,"RPC",241,0)
TIU LONG LIST OF TITLES
"KRN",19,10082,"RPC",242,0)
TIU NOTES
"KRN",19,10082,"RPC",243,0)
TIU NOTES 16 BIT
"KRN",19,10082,"RPC",244,0)
TIU NOTES BY VISIT
"KRN",19,10082,"RPC",245,0)
TIU PERSONAL TITLE LIST
"KRN",19,10082,"RPC",246,0)
TIU PRINT RECORD
"KRN",19,10082,"RPC",247,0)
TIU REQUIRES COSIGNATURE
"KRN",19,10082,"RPC",248,0)
TIU SIGN RECORD
"KRN",19,10082,"RPC",249,0)
TIU SUMMARIES
"KRN",19,10082,"RPC",250,0)
TIU SUMMARIES BY VISIT
"KRN",19,10082,"RPC",251,0)
TIU UNLOCK RECORD
"KRN",19,10082,"RPC",252,0)
TIU UPDATE ADDITIONAL SIGNERS
"KRN",19,10082,"RPC",253,0)
TIU UPDATE RECORD
"KRN",19,10082,"RPC",254,0)
TIU WHICH SIGNATURE ACTION
"KRN",19,10082,"RPC",1032,0)
ORB DELETE ALERT
"KRN",19,10082,"RPC",1033,0)
ORB FOLLOW-UP ARRAY
"KRN",19,10082,"RPC",1034,0)
ORB FOLLOW-UP STRING
"KRN",19,10082,"RPC",1035,0)
ORB FOLLOW-UP TYPE
"KRN",19,10082,"RPC",1036,0)
ORB SORT METHOD
"KRN",19,10082,"RPC",1037,0)
ORK TRIGGER
"KRN",19,10082,"RPC",1038,0)
ORQ NULL LIST
"KRN",19,10082,"RPC",1039,0)
ORQOR DETAIL
"KRN",19,10082,"RPC",1040,0)
TIU TEMPLATE CHECK BOILERPLATE
"KRN",19,10082,"RPC",1041,0)
TIU TEMPLATE CREATE/MODIFY
"KRN",19,10082,"RPC",1042,0)
TIU TEMPLATE DELETE
"KRN",19,10082,"RPC",1045,0)
TIU TEMPLATE GETPROOT
"KRN",19,10082,"RPC",1049,0)
TIU TEMPLATE LISTOWNR
"KRN",19,10082,"RPC",1050,0)
TIU TEMPLATE SET ITEMS
"KRN",19,10082,"RPC",1051,0)
TIU GET LIST OF OBJECTS
"KRN",19,10082,"RPC",1052,0)
ORQOR LIST
"KRN",19,10082,"RPC",1053,0)
ORQORB SORT
"KRN",19,10082,"RPC",1054,0)
ORQPT ATTENDING/PRIMARY
"KRN",19,10082,"RPC",1055,0)
ORQPT CLINIC PATIENTS
"KRN",19,10082,"RPC",1056,0)
ORQPT CLINICS
"KRN",19,10082,"RPC",1057,0)
ORQPT DEFAULT LIST SOURCE
"KRN",19,10082,"RPC",1058,0)
ORQPT DEFAULT PATIENT LIST
"KRN",19,10082,"RPC",1059,0)
ORQPT PATIENT TEAM PROVIDERS
"KRN",19,10082,"RPC",1060,0)
ORQPT PROVIDER PATIENTS
"KRN",19,10082,"RPC",1061,0)
ORQPT PROVIDERS
"KRN",19,10082,"RPC",1062,0)
ORQPT SPECIALTIES
"KRN",19,10082,"RPC",1063,0)
ORQPT SPECIALTY PATIENTS
"KRN",19,10082,"RPC",1064,0)
ORQPT TEAM PATIENTS
"KRN",19,10082,"RPC",1065,0)
ORQPT TEAMS
"KRN",19,10082,"RPC",1066,0)
ORQPT WARD PATIENTS
"KRN",19,10082,"RPC",1067,0)
ORQPT WARDRMBED
"KRN",19,10082,"RPC",1068,0)
ORQPT WARDS
"KRN",19,10082,"RPC",1069,0)
ORQQAL DETAIL
"KRN",19,10082,"RPC",1070,0)
ORQQAL LIST
"KRN",19,10082,"RPC",1071,0)
ORQQAL LIST REPORT
"KRN",19,10082,"RPC",1072,0)
ORQQCN ADDCMT
"KRN",19,10082,"RPC",1073,0)
ORQQCN ADMIN COMPLETE
"KRN",19,10082,"RPC",1074,0)
ORQQCN DETAIL
"KRN",19,10082,"RPC",1075,0)
ORQQCN DISCONTINUE
"KRN",19,10082,"RPC",1076,0)
ORQQCN FIND CONSULT
"KRN",19,10082,"RPC",1077,0)
ORQQCN FORWARD
"KRN",19,10082,"RPC",1078,0)
ORQQCN GET CONSULT
"KRN",19,10082,"RPC",1079,0)
ORQQCN GET ORDER NUMBER
"KRN",19,10082,"RPC",1080,0)
ORQQCN GET PROC SVCS
"KRN",19,10082,"RPC",1081,0)
ORQQCN LIST
"KRN",19,10082,"RPC",1082,0)
ORQQCN LOAD FOR EDIT
"KRN",19,10082,"RPC",1083,0)
ORQQCN MED RESULTS
"KRN",19,10082,"RPC",1084,0)
ORQQCN PRINT SF513
"KRN",19,10082,"RPC",1085,0)
ORQQCN RECEIVE
"KRN",19,10082,"RPC",1086,0)
ORQQCN RESUBMIT
"KRN",19,10082,"RPC",1087,0)
ORQQCN SET ACT MENUS
"KRN",19,10082,"RPC",1088,0)
ORQQCN SHOW SF513
"KRN",19,10082,"RPC",1089,0)
ORQQCN SIGFIND
"KRN",19,10082,"RPC",1090,0)
ORQQCN STATUS
"KRN",19,10082,"RPC",1091,0)
ORQQCN SVCLIST
"KRN",19,10082,"RPC",1092,0)
ORQQCN SVCTREE
"KRN",19,10082,"RPC",1093,0)
ORQQCN URGENCIES
"KRN",19,10082,"RPC",1094,0)
ORQQCN2 GET CONTEXT
"KRN",19,10082,"RPC",1095,0)
ORQQCN2 SAVE CONTEXT
"KRN",19,10082,"RPC",1096,0)
ORQQLR DETAIL
"KRN",19,10082,"RPC",1097,0)
ORQQLR SEARCH RANGE INPT
"KRN",19,10082,"RPC",1098,0)
ORQQLR SEARCH RANGE OUTPT
"KRN",19,10082,"RPC",1099,0)
ORQQPL ADD SAVE
"KRN",19,10082,"RPC",1100,0)
ORQQPL AUDIT HIST
"KRN",19,10082,"RPC",1101,0)
ORQQPL CHECK DUP
"KRN",19,10082,"RPC",1102,0)
ORQQPL CLIN FILTER LIST
"KRN",19,10082,"RPC",1103,0)
ORQQPL CLIN SRCH
"KRN",19,10082,"RPC",1104,0)
ORQQPL DELETE
"KRN",19,10082,"RPC",1105,0)
ORQQPL DETAIL
"KRN",19,10082,"RPC",1106,0)
ORQQPL EDIT LOAD
"KRN",19,10082,"RPC",1107,0)
ORQQPL EDIT SAVE
"KRN",19,10082,"RPC",1108,0)
ORQQPL INACTIVATE
"KRN",19,10082,"RPC",1109,0)
ORQQPL INIT PT
"KRN",19,10082,"RPC",1110,0)
ORQQPL INIT USER
"KRN",19,10082,"RPC",1111,0)
ORQQPL LIST
"KRN",19,10082,"RPC",1112,0)
ORQQPL PROB COMMENTS
"KRN",19,10082,"RPC",1113,0)
ORQQPL PROBLEM LEX SEARCH
"KRN",19,10082,"RPC",1114,0)
ORQQPL PROBLEM LIST
"KRN",19,10082,"RPC",1115,0)
ORQQPL PROV FILTER LIST
"KRN",19,10082,"RPC",1116,0)
ORQQPL PROVIDER LIST
"KRN",19,10082,"RPC",1117,0)
ORQQPL REPLACE
"KRN",19,10082,"RPC",1118,0)
ORQQPL SAVEVIEW
"KRN",19,10082,"RPC",1119,0)
ORQQPL SERV FILTER LIST
"KRN",19,10082,"RPC",1120,0)
ORQQPL SRVC SRCH
"KRN",19,10082,"RPC",1121,0)
ORQQPL UPDATE
"KRN",19,10082,"RPC",1122,0)
ORQQPL USER PROB CATS
"KRN",19,10082,"RPC",1123,0)
ORQQPL USER PROB LIST
"KRN",19,10082,"RPC",1124,0)
ORQQPL VERIFY
"KRN",19,10082,"RPC",1125,0)
ORQQPP LIST
"KRN",19,10082,"RPC",1126,0)
ORQQPS DETAIL
"KRN",19,10082,"RPC",1127,0)
ORQQPS LIST
"KRN",19,10082,"RPC",1133,0)
ORQQPX REMINDER DETAIL
"KRN",19,10082,"RPC",1135,0)
ORQQPX REMINDERS LIST
"KRN",19,10082,"RPC",1136,0)
ORQQVI NOTEVIT
"KRN",19,10082,"RPC",1137,0)
ORQQVI VITALS
"KRN",19,10082,"RPC",1138,0)
ORQQVI VITALS FOR DATE RANGE
"KRN",19,10082,"RPC",1139,0)
ORQQVI1 DETAIL
"KRN",19,10082,"RPC",1140,0)
ORQQVI1 GRID
"KRN",19,10082,"RPC",1141,0)
ORQQVI2 VITALS HELP
"KRN",19,10082,"RPC",1142,0)
ORQQVI2 VITALS RATE CHECK
"KRN",19,10082,"RPC",1144,0)
ORQQVI2 VITALS VAL & STORE
"KRN",19,10082,"RPC",1145,0)
ORQQVI2 VITALS VALIDATE
"KRN",19,10082,"RPC",1146,0)
ORQQVI2 VITALS VALIDATE TYPE
"KRN",19,10082,"RPC",1147,0)
ORQQVS DETAIL NOTES
"KRN",19,10082,"RPC",1148,0)
ORQQVS DETAIL SUMMARY
"KRN",19,10082,"RPC",1149,0)
ORQQVS VISITS/APPTS
"KRN",19,10082,"RPC",1150,0)
ORQQXMB MAIL GROUPS
"KRN",19,10082,"RPC",1151,0)
ORQQXQA PATIENT
"KRN",19,10082,"RPC",1152,0)
ORQQXQA USER
"KRN",19,10082,"RPC",1153,0)
ORWCH LOADALL
"KRN",19,10082,"RPC",1154,0)
ORWCH LOADSIZ
"KRN",19,10082,"RPC",1155,0)
ORWCH SAVEALL
"KRN",19,10082,"RPC",1156,0)
ORWCH SAVESIZ
"KRN",19,10082,"RPC",1157,0)
ORWCS LIST OF CONSULT REPORTS
"KRN",19,10082,"RPC",1158,0)
ORWCS PRINT REPORT
"KRN",19,10082,"RPC",1159,0)
ORWCS REPORT TEXT
"KRN",19,10082,"RPC",1160,0)
ORWCV DTLVST
"KRN",19,10082,"RPC",1161,0)
ORWCV LAB
"KRN",19,10082,"RPC",1162,0)
ORWCV POLL
"KRN",19,10082,"RPC",1163,0)
ORWCV START
"KRN",19,10082,"RPC",1164,0)
ORWCV STOP
"KRN",19,10082,"RPC",1165,0)
ORWCV VST
"KRN",19,10082,"RPC",1166,0)
ORWD DEF
"KRN",19,10082,"RPC",1167,0)
ORWD DT
"KRN",19,10082,"RPC",1168,0)
ORWD FORMID
"KRN",19,10082,"RPC",1169,0)
ORWD GET4EDIT
"KRN",19,10082,"RPC",1170,0)
ORWD KEY
"KRN",19,10082,"RPC",1171,0)
ORWD OI
"KRN",19,10082,"RPC",1172,0)
ORWD PROVKEY
"KRN",19,10082,"RPC",1173,0)
ORWD SAVE
"KRN",19,10082,"RPC",1174,0)
ORWD SAVEACT
"KRN",19,10082,"RPC",1175,0)
ORWD SIGN
"KRN",19,10082,"RPC",1176,0)
ORWD VALIDACT
"KRN",19,10082,"RPC",1177,0)
ORWD1 PARAM
"KRN",19,10082,"RPC",1178,0)
ORWD1 PRINTGUI
"KRN",19,10082,"RPC",1179,0)
ORWD1 RVPRINT
"KRN",19,10082,"RPC",1180,0)
ORWD2 DEVINFO
"KRN",19,10082,"RPC",1181,0)
ORWD2 MANUAL
"KRN",19,10082,"RPC",1182,0)
ORWDAL32 ALLERGY MATCH
"KRN",19,10082,"RPC",1183,0)
ORWDAL32 DEF
"KRN",19,10082,"RPC",1184,0)
ORWDAL32 SYMPTOMS
"KRN",19,10082,"RPC",1185,0)
ORWDCN32 DEF
"KRN",19,10082,"RPC",1186,0)
ORWDCN32 ORDRMSG
"KRN",19,10082,"RPC",1187,0)
ORWDCN32 PROCEDURES
"KRN",19,10082,"RPC",1188,0)
ORWDCSLT DEF
"KRN",19,10082,"RPC",1189,0)
ORWDCSLT LOOK200
"KRN",19,10082,"RPC",1190,0)
ORWDFH ADDLATE
"KRN",19,10082,"RPC",1191,0)
ORWDFH ATTR
"KRN",19,10082,"RPC",1192,0)
ORWDFH CURISO
"KRN",19,10082,"RPC",1193,0)
ORWDFH DIETS
"KRN",19,10082,"RPC",1194,0)
ORWDFH FINDTYP
"KRN",19,10082,"RPC",1195,0)
ORWDFH ISOIEN
"KRN",19,10082,"RPC",1196,0)
ORWDFH ISOLIST
"KRN",19,10082,"RPC",1197,0)
ORWDFH PARAM
"KRN",19,10082,"RPC",1198,0)
ORWDFH QTY2CC
"KRN",19,10082,"RPC",1199,0)
ORWDFH TFPROD
"KRN",19,10082,"RPC",1200,0)
ORWDFH TXT
"KRN",19,10082,"RPC",1201,0)
ORWDGX LOAD
"KRN",19,10082,"RPC",1202,0)
ORWDGX VMDEF
"KRN",19,10082,"RPC",1203,0)
ORWDLR ABBSPEC
"KRN",19,10082,"RPC",1204,0)
ORWDLR ALLSAMP
"KRN",19,10082,"RPC",1205,0)
ORWDLR DEF
"KRN",19,10082,"RPC",1206,0)
ORWDLR LOAD
"KRN",19,10082,"RPC",1207,0)
ORWDLR OIPARAM
"KRN",19,10082,"RPC",1208,0)
ORWDLR STOP
"KRN",19,10082,"RPC",1209,0)
ORWDLR32 ABBSPEC
"KRN",19,10082,"RPC",1210,0)
ORWDLR32 ALLSAMP
"KRN",19,10082,"RPC",1211,0)
ORWDLR32 ALLSPEC
"KRN",19,10082,"RPC",1212,0)
ORWDLR32 DEF
"KRN",19,10082,"RPC",1213,0)
ORWDLR32 IC DEFAULT
"KRN",19,10082,"RPC",1214,0)
ORWDLR32 IC VALID
"KRN",19,10082,"RPC",1215,0)
ORWDLR32 IMMED COLLECT
"KRN",19,10082,"RPC",1216,0)
ORWDLR32 LAB COLL TIME
"KRN",19,10082,"RPC",1217,0)
ORWDLR32 LOAD
"KRN",19,10082,"RPC",1218,0)
ORWDLR32 MAXDAYS
"KRN",19,10082,"RPC",1219,0)
ORWDLR32 ONE SAMPLE
"KRN",19,10082,"RPC",1220,0)
ORWDLR32 ONE SPECIMEN
"KRN",19,10082,"RPC",1221,0)
ORWDLR32 STOP
"KRN",19,10082,"RPC",1222,0)
ORWDOR VMSLCT
"KRN",19,10082,"RPC",1227,0)
ORWDPS32 ALLROUTE
"KRN",19,10082,"RPC",1228,0)
ORWDPS32 AUTH
"KRN",19,10082,"RPC",1229,0)
ORWDPS32 DLGSLCT
"KRN",19,10082,"RPC",1230,0)
ORWDPS32 DOSES
"KRN",19,10082,"RPC",1231,0)
ORWDPS32 DRUGMSG
"KRN",19,10082,"RPC",1232,0)
ORWDPS32 FORMALT
"KRN",19,10082,"RPC",1233,0)
ORWDPS32 ISSPLY
"KRN",19,10082,"RPC",1234,0)
ORWDPS32 IVAMT
"KRN",19,10082,"RPC",1235,0)
ORWDPS32 MEDISIV
"KRN",19,10082,"RPC",1236,0)
ORWDPS32 OISLCT
"KRN",19,10082,"RPC",1237,0)
ORWDPS32 SCSTS
"KRN",19,10082,"RPC",1238,0)
ORWDPS32 VALQTY
"KRN",19,10082,"RPC",1239,0)
ORWDPS32 VALRATE
"KRN",19,10082,"RPC",1240,0)
ORWDPS32 VALSCH
"KRN",19,10082,"RPC",1241,0)
ORWDRA DEF
"KRN",19,10082,"RPC",1242,0)
ORWDRA32 APPROVAL
"KRN",19,10082,"RPC",1243,0)
ORWDRA32 DEF
"KRN",19,10082,"RPC",1244,0)
ORWDRA32 IMTYPSEL
"KRN",19,10082,"RPC",1245,0)
ORWDRA32 ISOLATN
"KRN",19,10082,"RPC",1246,0)
ORWDRA32 LOCTYPE
"KRN",19,10082,"RPC",1247,0)
ORWDRA32 PROCMSG
"KRN",19,10082,"RPC",1248,0)
ORWDRA32 RADSRC
"KRN",19,10082,"RPC",1249,0)
ORWDRA32 RAORDITM
"KRN",19,10082,"RPC",1250,0)
ORWDX AGAIN
"KRN",19,10082,"RPC",1251,0)
ORWDX DGRP
"KRN",19,10082,"RPC",1252,0)
ORWDX DISMSG
"KRN",19,10082,"RPC",1253,0)
ORWDX DLGDEF
"KRN",19,10082,"RPC",1254,0)
ORWDX DLGID
"KRN",19,10082,"RPC",1255,0)
ORWDX DLGQUIK
"KRN",19,10082,"RPC",1256,0)
ORWDX FORMID
"KRN",19,10082,"RPC",1257,0)
ORWDX LOADRSP
"KRN",19,10082,"RPC",1258,0)
ORWDX LOCK
"KRN",19,10082,"RPC",1259,0)
ORWDX MSG
"KRN",19,10082,"RPC",1260,0)
ORWDX ORDITM
"KRN",19,10082,"RPC",1261,0)
ORWDX SAVE
"KRN",19,10082,"RPC",1262,0)
ORWDX SEND
"KRN",19,10082,"RPC",1263,0)
ORWDX SENDP
"KRN",19,10082,"RPC",1264,0)
ORWDX UNLOCK
"KRN",19,10082,"RPC",1265,0)
ORWDX WRLST
"KRN",19,10082,"RPC",1266,0)
ORWDXA ALERT
"KRN",19,10082,"RPC",1267,0)
ORWDXA COMPLETE
"KRN",19,10082,"RPC",1268,0)
ORWDXA DC
"KRN",19,10082,"RPC",1269,0)
ORWDXA DCREASON
"KRN",19,10082,"RPC",1270,0)
ORWDXA DCREQIEN
"KRN",19,10082,"RPC",1271,0)
ORWDXA FLAG
"KRN",19,10082,"RPC",1272,0)
ORWDXA FLAGTXT
"KRN",19,10082,"RPC",1273,0)
ORWDXA HOLD
"KRN",19,10082,"RPC",1274,0)
ORWDXA UNFLAG
"KRN",19,10082,"RPC",1275,0)
ORWDXA UNHOLD
"KRN",19,10082,"RPC",1276,0)
ORWDXA VALID
"KRN",19,10082,"RPC",1277,0)
ORWDXA VERIFY
"KRN",19,10082,"RPC",1278,0)
ORWDXA WCGET
"KRN",19,10082,"RPC",1279,0)
ORWDXA WCPUT
"KRN",19,10082,"RPC",1280,0)
ORWDXC ACCEPT
"KRN",19,10082,"RPC",1281,0)
ORWDXC DELAY
"KRN",19,10082,"RPC",1282,0)
ORWDXC DELORD
"KRN",19,10082,"RPC",1283,0)
ORWDXC DISPLAY
"KRN",19,10082,"RPC",1284,0)
ORWDXC FILLID
"KRN",19,10082,"RPC",1285,0)
ORWDXC ON
"KRN",19,10082,"RPC",1286,0)
ORWDXC SAVECHK
"KRN",19,10082,"RPC",1287,0)
ORWDXC SESSION
"KRN",19,10082,"RPC",1288,0)
ORWDXM AUTOACK
"KRN",19,10082,"RPC",1289,0)
ORWDXM DLGNAME
"KRN",19,10082,"RPC",1290,0)
ORWDXM FORMID
"KRN",19,10082,"RPC",1291,0)
ORWDXM LOADSET
"KRN",19,10082,"RPC",1292,0)
ORWDXM MENU
"KRN",19,10082,"RPC",1293,0)
ORWDXM MSTYLE
"KRN",19,10082,"RPC",1294,0)
ORWDXM PROMPTS
"KRN",19,10082,"RPC",1295,0)
ORWDXM1 BLDQRSP
"KRN",19,10082,"RPC",1296,0)
ORWDXM2 CLRRCL
"KRN",19,10082,"RPC",1297,0)
ORWDXQ DLGNAME
"KRN",19,10082,"RPC",1298,0)
ORWDXQ DLGSAVE
"KRN",19,10082,"RPC",1299,0)
ORWDXQ GETQLST
"KRN",19,10082,"RPC",1300,0)
ORWDXQ GETQNAM
"KRN",19,10082,"RPC",1301,0)
ORWDXQ PUTQLST
"KRN",19,10082,"RPC",1302,0)
ORWDXQ PUTQNAM
"KRN",19,10082,"RPC",1303,0)
ORWDXR ISREL
"KRN",19,10082,"RPC",1304,0)
ORWDXR RENEW
"KRN",19,10082,"RPC",1305,0)
ORWDXR RNWFLDS
"KRN",19,10082,"RPC",1306,0)
ORWGEPT CLINRNG
"KRN",19,10082,"RPC",1307,0)
ORWLR CUMULATIVE REPORT
"KRN",19,10082,"RPC",1308,0)
ORWLR CUMULATIVE SECTION
"KRN",19,10082,"RPC",1309,0)
ORWLR REPORT LISTS
"KRN",19,10082,"RPC",1310,0)
ORWLRR ALLTESTS
"KRN",19,10082,"RPC",1311,0)
ORWLRR ATESTS
"KRN",19,10082,"RPC",1312,0)
ORWLRR ATG
"KRN",19,10082,"RPC",1313,0)
ORWLRR ATOMICS
"KRN",19,10082,"RPC",1314,0)
ORWLRR CHART
"KRN",19,10082,"RPC",1315,0)
ORWLRR CHEMTEST
"KRN",19,10082,"RPC",1316,0)
ORWLRR GRID
"KRN",19,10082,"RPC",1317,0)
ORWLRR INTERIM
"KRN",19,10082,"RPC",1318,0)
ORWLRR INTERIMG
"KRN",19,10082,"RPC",1319,0)
ORWLRR INTERIMS
"KRN",19,10082,"RPC",1320,0)
ORWLRR MICRO
"KRN",19,10082,"RPC",1321,0)
ORWLRR NEWOLD
"KRN",19,10082,"RPC",1322,0)
ORWLRR PARAM
"KRN",19,10082,"RPC",1323,0)
ORWLRR SPEC
"KRN",19,10082,"RPC",1324,0)
ORWLRR TG
"KRN",19,10082,"RPC",1325,0)
ORWLRR USERS
"KRN",19,10082,"RPC",1326,0)
ORWLRR UTGA
"KRN",19,10082,"RPC",1327,0)
ORWLRR UTGD
"KRN",19,10082,"RPC",1328,0)
ORWLRR UTGR
"KRN",19,10082,"RPC",1329,0)
ORWMC PATIENT PROCEDURES
"KRN",19,10082,"RPC",1330,0)
ORWOR RESULT
"KRN",19,10082,"RPC",1331,0)
ORWOR SHEETS
"KRN",19,10082,"RPC",1332,0)
ORWOR TSALL
"KRN",19,10082,"RPC",1333,0)
ORWORB AUTOUNFLAG ORDERS
"KRN",19,10082,"RPC",1334,0)
ORWORB FASTUSER
"KRN",19,10082,"RPC",1335,0)
ORWORB GET TIU ALERT INFO
"KRN",19,10082,"RPC",1336,0)
ORWORB GETDATA
"KRN",19,10082,"RPC",1337,0)
ORWORB KILL UNSIG ORDERS ALERT
"KRN",19,10082,"RPC",1338,0)
ORWORB URGENLST
"KRN",19,10082,"RPC",1339,0)
ORWORDG ALLTREE
"KRN",19,10082,"RPC",1340,0)
ORWORDG GRPSEQB
"KRN",19,10082,"RPC",1341,0)
ORWORDG IEN
"KRN",19,10082,"RPC",1342,0)
ORWORDG MAPSEQ
"KRN",19,10082,"RPC",1343,0)
ORWORDG REVSTS
"KRN",19,10082,"RPC",1344,0)
ORWORR AGET
"KRN",19,10082,"RPC",1345,0)
ORWORR GET
"KRN",19,10082,"RPC",1346,0)
ORWORR GET4LST
"KRN",19,10082,"RPC",1347,0)
ORWORR GETBYIFN
"KRN",19,10082,"RPC",1348,0)
ORWORR GETTXT
"KRN",19,10082,"RPC",1349,0)
ORWPCE ACTIVE PROV
"KRN",19,10082,"RPC",1350,0)
ORWPCE ACTPROB
"KRN",19,10082,"RPC",1351,0)
ORWPCE CPTREQD
"KRN",19,10082,"RPC",1352,0)
ORWPCE DELETE
"KRN",19,10082,"RPC",1353,0)
ORWPCE DIAG
"KRN",19,10082,"RPC",1354,0)
ORWPCE GET EDUCATION TOPICS
"KRN",19,10082,"RPC",1355,0)
ORWPCE GET EXAM TYPE
"KRN",19,10082,"RPC",1356,0)
ORWPCE GET HEALTH FACTORS TY
"KRN",19,10082,"RPC",1357,0)
ORWPCE GET IMMUNIZATION TYPE
"KRN",19,10082,"RPC",1358,0)
ORWPCE GET SET OF CODES
"KRN",19,10082,"RPC",1359,0)
ORWPCE GET SKIN TEST TYPE
"KRN",19,10082,"RPC",1360,0)
ORWPCE GET TREATMENT TYPE
"KRN",19,10082,"RPC",1361,0)
ORWPCE HF
"KRN",19,10082,"RPC",1362,0)
ORWPCE IMM
"KRN",19,10082,"RPC",1363,0)
ORWPCE LEX
"KRN",19,10082,"RPC",1364,0)
ORWPCE LEXCODE
"KRN",19,10082,"RPC",1366,0)
ORWPCE NOTEVSTR
"KRN",19,10082,"RPC",1367,0)
ORWPCE PCE4NOTE
"KRN",19,10082,"RPC",1368,0)
ORWPCE PED
"KRN",19,10082,"RPC",1369,0)
ORWPCE PROC
"KRN",19,10082,"RPC",1370,0)
ORWPCE SAVE
"KRN",19,10082,"RPC",1371,0)
ORWPCE SCDIS
"KRN",19,10082,"RPC",1372,0)
ORWPCE SCSEL
"KRN",19,10082,"RPC",1373,0)
ORWPCE SK
"KRN",19,10082,"RPC",1374,0)
ORWPCE TRT
"KRN",19,10082,"RPC",1375,0)
ORWPCE VISIT
"KRN",19,10082,"RPC",1376,0)
ORWPCE XAM
"KRN",19,10082,"RPC",1377,0)
ORWPS ACTIVE
"KRN",19,10082,"RPC",1378,0)
ORWPS COVER
"KRN",19,10082,"RPC",1379,0)
ORWPS DETAIL
"KRN",19,10082,"RPC",1380,0)
ORWPS1 NEWDLG
"KRN",19,10082,"RPC",1381,0)
ORWPS1 PICKUP
"KRN",19,10082,"RPC",1382,0)
ORWPS1 REFILL
"KRN",19,10082,"RPC",1383,0)
ORWPT ADMITLST
"KRN",19,10082,"RPC",1384,0)
ORWPT APPTLST
"KRN",19,10082,"RPC",1385,0)
ORWPT CLINRNG
"KRN",19,10082,"RPC",1386,0)
ORWPT CWAD
"KRN",19,10082,"RPC",1387,0)
ORWPT DFLTSRC
"KRN",19,10082,"RPC",1388,0)
ORWPT DIEDON
"KRN",19,10082,"RPC",1389,0)
ORWPT DISCHARGE
"KRN",19,10082,"RPC",1390,0)
ORWPT ENCTITL
"KRN",19,10082,"RPC",1391,0)
ORWPT FULLSSN
"KRN",19,10082,"RPC",1392,0)
ORWPT ID INFO
"KRN",19,10082,"RPC",1393,0)
ORWPT LAST5
"KRN",19,10082,"RPC",1394,0)
ORWPT LIST ALL
"KRN",19,10082,"RPC",1395,0)
ORWPT PTINQ
"KRN",19,10082,"RPC",1396,0)
ORWPT SAVDFLT
"KRN",19,10082,"RPC",1397,0)
ORWPT SELCHK
"KRN",19,10082,"RPC",1398,0)
ORWPT SELECT
"KRN",19,10082,"RPC",1399,0)
ORWPT SHARE
"KRN",19,10082,"RPC",1400,0)
ORWPT TOP
"KRN",19,10082,"RPC",1401,0)
ORWPT1 PCDETAIL
"KRN",19,10082,"RPC",1402,0)
ORWPT1 PRCARE
"KRN",19,10082,"RPC",1403,0)
ORWPT16 ADMITLST
"KRN",19,10082,"RPC",1404,0)
ORWPT16 APPTLST
"KRN",19,10082,"RPC",1405,0)
ORWPT16 DEMOG
"KRN",19,10082,"RPC",1406,0)
ORWPT16 GETVSIT
"KRN",19,10082,"RPC",1407,0)
ORWPT16 ID INFO
"KRN",19,10082,"RPC",1408,0)
ORWPT16 LIST ALL
"KRN",19,10082,"RPC",1409,0)
ORWPT16 LOOKUP
"KRN",19,10082,"RPC",1410,0)
ORWPT16 PSCNVT
"KRN",19,10082,"RPC",1411,0)
ORWRA DEFAULT EXAM SETTINGS
"KRN",19,10082,"RPC",1412,0)
ORWRA IMAGING EXAMS
"KRN",19,10082,"RPC",1413,0)
ORWRA PRINT REPORT
"KRN",19,10082,"RPC",1414,0)
ORWRA REPORT TEXT
"KRN",19,10082,"RPC",1415,0)
ORWRP PRINT LAB REPORTS
"KRN",19,10082,"RPC",1416,0)
ORWRP PRINT REPORT
"KRN",19,10082,"RPC",1417,0)
ORWRP REPORT LISTS
"KRN",19,10082,"RPC",1418,0)
ORWRP REPORT TEXT
"KRN",19,10082,"RPC",1419,0)
ORWRP1 LISTNUTR
"KRN",19,10082,"RPC",1420,0)
ORWRP16 REPORT LISTS
"KRN",19,10082,"RPC",1421,0)
ORWRP16 REPORT TEXT
"KRN",19,10082,"RPC",1422,0)
ORWTIU GET DCSUMM CONTEXT
"KRN",19,10082,"RPC",1423,0)
ORWTIU GET TIU CONTEXT
"KRN",19,10082,"RPC",1424,0)
ORWTIU SAVE DCSUMM CONTEXT
"KRN",19,10082,"RPC",1425,0)
ORWTIU SAVE TIU CONTEXT
"KRN",19,10082,"RPC",1426,0)
ORWU CLINLOC
"KRN",19,10082,"RPC",1427,0)
ORWU DEVICE
"KRN",19,10082,"RPC",1428,0)
ORWU DT
"KRN",19,10082,"RPC",1429,0)
ORWU EXTNAME
"KRN",19,10082,"RPC",1430,0)
ORWU GBLREF
"KRN",19,10082,"RPC",1431,0)
ORWU GENERIC
"KRN",19,10082,"RPC",1432,0)
ORWU HASKEY
"KRN",19,10082,"RPC",1433,0)
ORWU HOSPLOC
"KRN",19,10082,"RPC",1434,0)
ORWU INPLOC
"KRN",19,10082,"RPC",1435,0)
ORWU NEWPERS
"KRN",19,10082,"RPC",1436,0)
ORWU NPHASKEY
"KRN",19,10082,"RPC",1437,0)
ORWU PATCH
"KRN",19,10082,"RPC",1438,0)
ORWU TOOLMENU
"KRN",19,10082,"RPC",1439,0)
ORWU USERINFO
"KRN",19,10082,"RPC",1440,0)
ORWU VALDT
"KRN",19,10082,"RPC",1441,0)
ORWU VALIDSIG
"KRN",19,10082,"RPC",1442,0)
ORWU VERSRV
"KRN",19,10082,"RPC",1443,0)
ORWU16 DEVICE
"KRN",19,10082,"RPC",1444,0)
ORWU16 HOSPLOC
"KRN",19,10082,"RPC",1445,0)
ORWU16 NEWPERS
"KRN",19,10082,"RPC",1446,0)
ORWU16 USERINFO
"KRN",19,10082,"RPC",1447,0)
ORWU16 VALDT
"KRN",19,10082,"RPC",1448,0)
ORWU16 VALIDSIG
"KRN",19,10082,"RPC",1449,0)
ORWUH POPUP
"KRN",19,10082,"RPC",1450,0)
ORWUX SYMTAB
"KRN",19,10082,"RPC",1451,0)
ORWUXT LST
"KRN",19,10082,"RPC",1452,0)
ORWUXT REF
"KRN",19,10082,"RPC",1453,0)
ORWUXT VAL
"KRN",19,10082,"RPC",1454,0)
ORQQCN DEFAULT REQUEST REASON
"KRN",19,10082,"RPC",1455,0)
ORWDX LOCK ORDER
"KRN",19,10082,"RPC",1456,0)
ORWDX UNLOCK ORDER
"KRN",19,10082,"RPC",1457,0)
ORWDCN32 NEWDLG
"KRN",19,10082,"RPC",1458,0)
ORQQCN GET SERVICE IEN
"KRN",19,10082,"RPC",1459,0)
ORQQCN PROVDX
"KRN",19,10082,"RPC",1460,0)
TIU TEMPLATE ACCESS LEVEL
"KRN",19,10082,"RPC",1461,0)
TIU GET DOCUMENT TITLE
"KRN",19,10082,"RPC",1462,0)
ORWPT BYWARD
"KRN",19,10082,"RPC",1463,0)
ORQQPX GET HIST LOCATIONS
"KRN",19,10082,"RPC",1464,0)
ORQQPX NEW REMINDERS ACTIVE
"KRN",19,10082,"RPC",1465,0)
ORWPCE GET VISIT
"KRN",19,10082,"RPC",1480,0)
TIU GET REQUEST
"KRN",19,10082,"RPC",1481,0)
ORWORB KILL EXPIR MED ALERT
"KRN",19,10082,"RPC",1482,0)
DG CHK BS5 XREF ARRAY
"KRN",19,10082,"RPC",1483,0)
DG CHK BS5 XREF Y/N
"KRN",19,10082,"RPC",1484,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,10082,"RPC",1485,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,10082,"RPC",1486,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,10082,"RPC",1487,0)
ORQQCN CANEDIT
"KRN",19,10082,"RPC",1488,0)
ORQQCN EDIT DEFAULT REASON
"KRN",19,10082,"RPC",1489,0)
ORQQCN SF513 WINDOWS PRINT
"KRN",19,10082,"RPC",1490,0)
ORWCIRN FACLIST
"KRN",19,10082,"RPC",1491,0)
ORWDLR32 GET LAB TIMES
"KRN",19,10082,"RPC",1492,0)
ORWPT LEGACY
"KRN",19,10082,"RPC",1493,0)
ORWRP GET DEFAULT PRINTER
"KRN",19,10082,"RPC",1494,0)
ORWRP PRINT WINDOWS REPORT
"KRN",19,10082,"RPC",1495,0)
ORWRP SAVE DEFAULT PRINTER
"KRN",19,10082,"RPC",1496,0)
ORWRP WINPRINT DEFAULT
"KRN",19,10082,"RPC",1497,0)
ORWRP WINPRINT LAB REPORTS
"KRN",19,10082,"RPC",1498,0)
ORWTIU WINPRINT NOTE
"KRN",19,10082,"RPC",1500,0)
ORWPCE GAFOK
"KRN",19,10082,"RPC",1501,0)
ORWPCE MHCLINIC
"KRN",19,10082,"RPC",1502,0)
ORWPCE LOADGAF
"KRN",19,10082,"RPC",1503,0)
ORWPCE SAVEGAF
"KRN",19,10082,"RPC",1504,0)
ORWPCE FORCE
"KRN",19,10082,"RPC",1505,0)
TIU GET DEFAULT PROVIDER
"KRN",19,10082,"RPC",1506,0)
TIU GET SITE PARAMETERS
"KRN",19,10082,"RPC",1507,0)
TIU IS USER A PROVIDER?
"KRN",19,10082,"RPC",1508,0)
ORWOR VWGET
"KRN",19,10082,"RPC",1509,0)
ORWOR VWSET
"KRN",19,10082,"RPC",1510,0)
ORWU PARAM
"KRN",19,10082,"RPC",1511,0)
ORWDOR LKSCRN
"KRN",19,10082,"RPC",1512,0)
ORWDOR VALNUM
"KRN",19,10082,"RPC",1513,0)
ORWDPS32 VALROUTE
"KRN",19,10082,"RPC",1515,0)
ORWORB UNSIG ORDERS FOLLOWUP
"KRN",19,10082,"RPC",1516,0)
ORWTIU GET LISTBOX ITEM
"KRN",19,10082,"RPC",1517,0)
ORWRP2 HS COMP FILES
"KRN",19,10082,"RPC",1518,0)
ORWRP2 HS COMPONENTS
"KRN",19,10082,"RPC",1519,0)
ORWRP2 HS FILE LOOKUP
"KRN",19,10082,"RPC",1520,0)
ORWRP2 HS REPORT TEXT
"KRN",19,10082,"RPC",1521,0)
ORWRP2 HS SUBITEMS
"KRN",19,10082,"RPC",1522,0)
ORWPCE HASCPT
"KRN",19,10082,"RPC",1523,0)
ORWPCE ASKPCE
"KRN",19,10082,"RPC",1524,0)
ORWPCE MHTESTOK
"KRN",19,10082,"RPC",1525,0)
ORWPCE GAFURL
"KRN",19,10082,"RPC",1526,0)
ORQQPXRM DIALOG PROMPTS
"KRN",19,10082,"RPC",1527,0)
ORQQPXRM EDUCATION SUBTOPICS
"KRN",19,10082,"RPC",1528,0)
ORQQPXRM EDUCATION SUMMARY
"KRN",19,10082,"RPC",1529,0)
ORQQPXRM EDUCATION TOPIC
"KRN",19,10082,"RPC",1530,0)
ORQQPXRM MENTAL HEALTH
"KRN",19,10082,"RPC",1531,0)
ORQQPXRM MENTAL HEALTH RESULTS
"KRN",19,10082,"RPC",1532,0)
ORQQPXRM MENTAL HEALTH SAVE
"KRN",19,10082,"RPC",1533,0)
ORQQPXRM PROGRESS NOTE HEADER
"KRN",19,10082,"RPC",1534,0)
ORQQPXRM REMINDER CATEGORIES
"KRN",19,10082,"RPC",1535,0)
ORQQPXRM REMINDER DETAIL
"KRN",19,10082,"RPC",1536,0)
ORQQPXRM REMINDER DIALOG
"KRN",19,10082,"RPC",1537,0)
ORQQPXRM REMINDER EVALUATION
"KRN",19,10082,"RPC",1538,0)
ORQQPXRM REMINDER INQUIRY
"KRN",19,10082,"RPC",1539,0)
ORQQPXRM REMINDER WEB
"KRN",19,10082,"RPC",1540,0)
ORQQPXRM REMINDERS APPLICABLE
"KRN",19,10082,"RPC",1541,0)
ORQQPXRM REMINDERS UNEVALUATED
"KRN",19,10082,"RPC",1542,0)
ORWLRR INFO
"KRN",19,10082,"RPC",1543,0)
TIU GET PRINT NAME
"KRN",19,10082,"RPC",1544,0)
TIU WAS THIS SAVED?
"KRN",19,10082,"RPC",1545,0)
ORWD1 COMLOC
"KRN",19,10082,"RPC",1546,0)
ORWD1 SIG4ANY
"KRN",19,10082,"RPC",1547,0)
ORWD1 SIG4ONE
"KRN",19,10082,"RPC",1548,0)
ORWOR UNSIGN
"KRN",19,10082,"RPC",1549,0)
ORWPT INPLOC
"KRN",19,10082,"RPC",1553,0)
ORQQCN2 GET PREREQUISITE
"KRN",19,10082,"RPC",1554,0)
ORQQCN2 SCHEDULE CONSULT
"KRN",19,10082,"RPC",1555,0)
YS GAF API
"KRN",19,10082,"RPC",1556,0)
TIU LONG LIST BOILERPLATED
"KRN",19,10082,"RPC",1557,0)
ORWDLR33 FUTURE LAB COLLECTS
"KRN",19,10082,"RPC",1558,0)
ORWRP PRINT REMOTE REPORT
"KRN",19,10082,"RPC",1559,0)
ORWRP PRINT WINDOWS REMOTE
"KRN",19,10082,"RPC",1560,0)
ORWRP PRINT LAB REMOTE
"KRN",19,10082,"RPC",1561,0)
ORWRP PRINT WINDOWS LAB REMOTE
"KRN",19,10082,"RPC",1562,0)
ORQQPXRM DIALOG ACTIVE
"KRN",19,10082,"RPC",1563,0)
ORWPCE MH TEST AUTHORIZED
"KRN",19,10082,"RPC",1564,0)
TIU GET BOILERPLATE
"KRN",19,10082,"RPC",1565,0)
ORWRP2 HS COMPONENT SUBS
"KRN",19,10082,"RPC",1566,0)
ORWCH SAVFONT
"KRN",19,10082,"RPC",1567,0)
ORWDLR33 LASTTIME
"KRN",19,10082,"RPC",1568,0)
ORWD1 SVONLY
"KRN",19,10082,"RPC",1569,0)
ORWPCE HASVISIT
"KRN",19,10082,"RPC",1570,0)
ORWPCE GETMOD
"KRN",19,10082,"RPC",1571,0)
ORWPCE CPTMODS
"KRN",19,10082,"RPC",1572,0)
XWB REMOTE CLEAR
"KRN",19,10082,"RPC",1573,0)
XWB REMOTE GETDATA
"KRN",19,10082,"RPC",1574,0)
XWB REMOTE RPC
"KRN",19,10082,"RPC",1575,0)
XWB REMOTE STATUS CHECK
"KRN",19,10082,"RPC",1576,0)
ORQQCN ASSIGNABLE MED RESULTS
"KRN",19,10082,"RPC",1577,0)
ORQQCN ATTACH MED RESULTS
"KRN",19,10082,"RPC",1578,0)
ORQQCN GET MED RESULT DETAILS
"KRN",19,10082,"RPC",1579,0)
ORQQCN REMOVABLE MED RESULTS
"KRN",19,10082,"RPC",1580,0)
ORQQCN REMOVE MED RESULTS
"KRN",19,10082,"RPC",1581,0)
ORQQCN SVC W/SYNONYMS
"KRN",19,10082,"RPC",1582,0)
ORWCV1 COVERSHEET LIST
"KRN",19,10082,"RPC",1583,0)
ORWORB KILL EXPIR OI ALERT
"KRN",19,10082,"RPC",1584,0)
ORWPCE GETSVC
"KRN",19,10082,"RPC",1585,0)
ORWRP LAB REPORT LISTS
"KRN",19,10082,"RPC",1586,0)
ORWTPL GETNSORT
"KRN",19,10082,"RPC",1587,0)
ORWTPN GETCLASS
"KRN",19,10082,"RPC",1588,0)
ORWTPN GETTC
"KRN",19,10082,"RPC",1589,0)
ORWTPO CSARNGD
"KRN",19,10082,"RPC",1590,0)
ORWTPO CSLABD
"KRN",19,10082,"RPC",1591,0)
ORWTPO GETTABS
"KRN",19,10082,"RPC",1592,0)
ORWTPP ADDLIST
"KRN",19,10082,"RPC",1593,0)
ORWTPP CHKSURR
"KRN",19,10082,"RPC",1594,0)
ORWTPP CLDAYS
"KRN",19,10082,"RPC",1595,0)
ORWTPP CLEARNOT
"KRN",19,10082,"RPC",1596,0)
ORWTPP CLRANGE
"KRN",19,10082,"RPC",1597,0)
ORWTPP CSARNG
"KRN",19,10082,"RPC",1598,0)
ORWTPP CSLAB
"KRN",19,10082,"RPC",1599,0)
ORWTPP DELLIST
"KRN",19,10082,"RPC",1600,0)
ORWTPP GETCOMBO
"KRN",19,10082,"RPC",1601,0)
ORWTPP GETCOS
"KRN",19,10082,"RPC",1602,0)
ORWTPP GETDCOS
"KRN",19,10082,"RPC",1603,0)
ORWTPP GETNOT
"KRN",19,10082,"RPC",1604,0)
ORWTPP GETNOTO
"KRN",19,10082,"RPC",1605,0)
ORWTPP GETOC
"KRN",19,10082,"RPC",1606,0)
ORWTPP GETOTHER
"KRN",19,10082,"RPC",1607,0)
ORWTPP GETREM
"KRN",19,10082,"RPC",1608,0)
ORWTPP GETSUB
"KRN",19,10082,"RPC",1609,0)
ORWTPP GETSURR
"KRN",19,10082,"RPC",1610,0)
ORWTPP GETTD
"KRN",19,10082,"RPC",1611,0)
ORWTPP GETTU
"KRN",19,10082,"RPC",1612,0)
ORWTPP LSDEF
"KRN",19,10082,"RPC",1613,0)
ORWTPP NEWLIST
"KRN",19,10082,"RPC",1614,0)
ORWTPP PLISTS
"KRN",19,10082,"RPC",1615,0)
ORWTPP PLTEAMS
"KRN",19,10082,"RPC",1616,0)
ORWTPP REMLIST
"KRN",19,10082,"RPC",1617,0)
ORWTPP SAVECD
"KRN",19,10082,"RPC",1618,0)
ORWTPP SAVECS
"KRN",19,10082,"RPC",1619,0)
ORWTPP SAVELIST
"KRN",19,10082,"RPC",1620,0)
ORWTPP SAVENOT
"KRN",19,10082,"RPC",1621,0)
ORWTPP SAVENOTO
"KRN",19,10082,"RPC",1622,0)
ORWTPP SAVEOC
"KRN",19,10082,"RPC",1623,0)
ORWTPP SAVEPLD
"KRN",19,10082,"RPC",1624,0)
ORWTPP SAVESURR
"KRN",19,10082,"RPC",1625,0)
ORWTPP SAVET
"KRN",19,10082,"RPC",1626,0)
ORWTPP SETCOMBO
"KRN",19,10082,"RPC",1627,0)
ORWTPP SETDCOS
"KRN",19,10082,"RPC",1628,0)
ORWTPP SETOTHER
"KRN",19,10082,"RPC",1629,0)
ORWTPP SETREM
"KRN",19,10082,"RPC",1630,0)
ORWTPP SETSUB
"KRN",19,10082,"RPC",1631,0)
ORWTPP SORTDEF
"KRN",19,10082,"RPC",1632,0)
ORWTPP TEAMS
"KRN",19,10082,"RPC",1633,0)
ORWTPT ATEAMS
"KRN",19,10082,"RPC",1634,0)
ORWTPT GETTEAM
"KRN",19,10082,"RPC",1635,0)
TIU TEMPLATE GET DEFAULTS
"KRN",19,10082,"RPC",1636,0)
TIU TEMPLATE GET DESCRIPTION
"KRN",19,10082,"RPC",1637,0)
TIU TEMPLATE SET DEFAULTS
"KRN",19,10082,"RPC",1638,0)
ORWTIU IDNOTES INSTALLED
"KRN",19,10082,"RPC",1639,0)
ORQQPX GET FOLDERS
"KRN",19,10082,"RPC",1640,0)
ORQQPX SET FOLDERS
"KRN",19,10082,"RPC",1641,0)
TIU FIELD CAN EDIT
"KRN",19,10082,"RPC",1642,0)
TIU FIELD DELETE
"KRN",19,10082,"RPC",1643,0)
TIU FIELD EXPORT
"KRN",19,10082,"RPC",1644,0)
TIU FIELD IMPORT
"KRN",19,10082,"RPC",1645,0)
TIU FIELD LIST
"KRN",19,10082,"RPC",1646,0)
TIU FIELD LOAD
"KRN",19,10082,"RPC",1647,0)
TIU FIELD LOAD BY IEN
"KRN",19,10082,"RPC",1648,0)
TIU FIELD LOCK
"KRN",19,10082,"RPC",1649,0)
TIU FIELD NAME IS UNIQUE
"KRN",19,10082,"RPC",1650,0)
TIU FIELD SAVE
"KRN",19,10082,"RPC",1651,0)
TIU FIELD UNLOCK
"KRN",19,10082,"RPC",1652,0)
ORWDPS1 CHK94
"KRN",19,10082,"RPC",1653,0)
ORWDPS1 ODSLCT
"KRN",19,10082,"RPC",1654,0)
ORWDPS1 SCHALL
"KRN",19,10082,"RPC",1655,0)
ORWDPS2 ADMIN
"KRN",19,10082,"RPC",1656,0)
ORWDPS2 DAY2QTY
"KRN",19,10082,"RPC",1657,0)
ORWDPS2 OISLCT
"KRN",19,10082,"RPC",1658,0)
ORWDPS2 REQST
"KRN",19,10082,"RPC",1659,0)
ORWDX DGNM
"KRN",19,10082,"RPC",1660,0)
ORWUL FV4DG
"KRN",19,10082,"RPC",1661,0)
ORWUL FVIDX
"KRN",19,10082,"RPC",1662,0)
ORWUL FVSUB
"KRN",19,10082,"RPC",1663,0)
ORWUL QV4DG
"KRN",19,10082,"RPC",1664,0)
ORWUL QVIDX
"KRN",19,10082,"RPC",1665,0)
ORWUL QVSUB
"KRN",19,10082,"RPC",1666,0)
ORWDPS1 DFLTSPLY
"KRN",19,10082,"RPC",1668,0)
PXRM REMINDER DIALOG (TIU)
"KRN",19,10082,"RPC",1669,0)
ORWPCE ANYTIME
"KRN",19,10082,"RPC",1670,0)
ORQQPX GET DEF LOCATIONS
"KRN",19,10082,"RPC",1671,0)
ORWTPP GETIMG
"KRN",19,10082,"RPC",1672,0)
ORWTPP SETIMG
"KRN",19,10082,"RPC",1673,0)
ORWTPO GETIMGD
"KRN",19,10082,"RPC",1674,0)
ORQQPX REM INSERT AT CURSOR
"KRN",19,10082,"RPC",1675,0)
TIU REMINDER DIALOGS
"KRN",19,10082,"RPC",1676,0)
TIU REM DLG OK AS TEMPLATE
"KRN",19,10082,"RPC",1677,0)
ORWDPS2 MAXREF
"KRN",19,10082,"RPC",1678,0)
ORWDPS2 SCHREQ
"KRN",19,10082,"RPC",1679,0)
ORWRP COLUMN HEADERS
"KRN",19,10082,"RPC",1680,0)
TIU FIELD DOLMTEXT
"KRN",19,10082,"RPC",1681,0)
TIU TEMPLATE PERSONAL OBJECTS
"KRN",19,10082,"RPC",1682,0)
ORWPCE AUTO VISIT TYPE SELECT
"KRN",19,10082,"RPC",1683,0)
ORWDPS2 QTY2DAY
"KRN",19,10082,"RPC",1684,0)
ORWU HAS OPTION ACCESS
"KRN",19,10082,"RPC",1685,0)
TIU TEMPLATE LOCK
"KRN",19,10082,"RPC",1686,0)
ORQQPX LVREMLST
"KRN",19,10082,"RPC",1687,0)
ORQQPX NEW COVER SHEET ACTIVE
"KRN",19,10082,"RPC",1688,0)
ORQQPX NEW COVER SHEET REMS
"KRN",19,10082,"RPC",1689,0)
ORQQPX SAVELVL
"KRN",19,10082,"RPC",1690,0)
PXRM REMINDER CATEGORY
"KRN",19,10082,"RPC",1691,0)
PXRM REMINDERS AND CATEGORIES
"KRN",19,10082,"RPC",1692,0)
TIU DIV AND CLASS INFO
"KRN",19,10082,"RPC",1693,0)
TIU TEMPLATE GETBOIL
"KRN",19,10082,"RPC",1694,0)
TIU TEMPLATE GETITEMS
"KRN",19,10082,"RPC",1695,0)
TIU TEMPLATE GETROOTS
"KRN",19,10082,"RPC",1696,0)
TIU TEMPLATE GETTEXT
"KRN",19,10082,"RPC",1697,0)
TIU TEMPLATE ISEDITOR
"KRN",19,10082,"RPC",1698,0)
TIU TEMPLATE UNLOCK
"KRN",19,10082,"RPC",1699,0)
TIU USER CLASS LONG LIST
"KRN",19,10082,"RPC",1700,0)
ORWPCE ALWAYS CHECKOUT
"KRN",19,10082,"RPC",1701,0)
ORWPCE GET EXCLUDED
"KRN",19,10082,"RPC",1702,0)
ORWDPS1 FORMALT
"KRN",19,10082,"RPC",1703,0)
ORQPT DEFAULT LIST SORT
"KRN",19,10082,"RPC",1704,0)
ORWDPS1 DOSEALT
"KRN",19,10082,"RPC",1705,0)
ORWTPR OCDESC
"KRN",19,10082,"RPC",1706,0)
ORWTPR NOTDESC
"KRN",19,10082,"RPC",1707,0)
ORWDPS1 FAILDEA
"KRN",19,10082,"RPC",1708,0)
ORQPT DEFAULT CLINIC DATE RANG
"KRN",19,10082,"RPC",1709,0)
ORWTIU CANLINK
"KRN",19,10082,"RPC",1710,0)
TIU ID ATTACH ENTRY
"KRN",19,10082,"RPC",1711,0)
TIU ID CAN ATTACH
"KRN",19,10082,"RPC",1712,0)
TIU ID CAN RECEIVE
"KRN",19,10082,"RPC",1713,0)
TIU ID DETACH ENTRY
"KRN",19,10082,"RPC",1714,0)
ORWCOM GETOBJS
"KRN",19,10082,"RPC",1715,0)
ORWCOM DETAILS
"KRN",19,10082,"RPC",1716,0)
ORWCOM PTOBJ
"KRN",19,10082,"RPC",1718,0)
TIU TEMPLATE GETLINK
"KRN",19,10082,"RPC",1719,0)
TIU TEMPLATE ALL TITLES
"KRN",19,10082,"RPC",1720,0)
ORWSR LIST
"KRN",19,10082,"RPC",1721,0)
ORWSR SHOW SURG TAB
"KRN",19,10082,"RPC",1722,0)
ORWSR GET SURG CONTEXT
"KRN",19,10082,"RPC",1723,0)
ORWSR SAVE SURG CONTEXT
"KRN",19,10082,"RPC",1724,0)
ORWSR ONECASE
"KRN",19,10082,"RPC",1725,0)
ORWSR OPTOP
"KRN",19,10082,"RPC",1726,0)
ORWSR OPTOP NON-OR
"KRN",19,10082,"RPC",1727,0)
ORWSR SHOW OPTOP WHEN SIGNING
"KRN",19,10082,"RPC",1728,0)
ORWSR IS NON-OR PROCEDURE
"KRN",19,10082,"RPC",1729,0)
ORWSR CASELIST
"KRN",19,10082,"RPC",1730,0)
ORQQCN GET PROC IEN
"KRN",19,10082,"RPC",1731,0)
ORWRP PRINT V REPORT
"KRN",19,10082,"RPC",1732,0)
ORWRP3 EXPAND COLUMNS
"KRN",19,10082,"RPC",1733,0)
ORWTPD ACTDF
"KRN",19,10082,"RPC",1734,0)
ORWTPD DELDFLT
"KRN",19,10082,"RPC",1735,0)
ORWTPD GETDFLT
"KRN",19,10082,"RPC",1736,0)
ORWTPD RSDFLT
"KRN",19,10082,"RPC",1737,0)
ORWTPD SUDF
"KRN",19,10082,"RPC",1738,0)
ORWTPD SUINDV
"KRN",19,10082,"RPC",1739,0)
ORWTPD GETSETS
"KRN",19,10082,"RPC",1740,0)
ORWCOM ORDEROBJ
"KRN",19,10082,"RPC",1741,0)
ORWRP2 COMPABV
"KRN",19,10082,"RPC",1742,0)
ORWRP2 GETLKUP
"KRN",19,10082,"RPC",1743,0)
ORWRP2 SAVLKUP
"KRN",19,10082,"RPC",1744,0)
ORWRP2 COMPDISP
"KRN",19,10082,"RPC",1745,0)
ORWPCE ISCLINIC
"KRN",19,10082,"RPC",1746,0)
ORWCH SAVECOL
"KRN",19,10082,"RPC",1747,0)
ORWSR RPTLIST
"KRN",19,10082,"RPC",1748,0)
ORQQPXRM MST UPDATE
"KRN",19,10082,"RPC",1749,0)
ORWMC PATIENT PROCEDURES1
"KRN",19,10082,"RPC",1750,0)
ORWRA IMAGING EXAMS1
"KRN",19,10082,"RPC",1751,0)
ORWRA REPORT TEXT1
"KRN",19,10082,"RPC",1752,0)
ORWDPS4 CPINFO
"KRN",19,10082,"RPC",1753,0)
ORWDPS4 CPLST
"KRN",19,10082,"RPC",1754,0)
ORWORB KILL UNVER MEDS ALERT
"KRN",19,10082,"RPC",1755,0)
ORWORB KILL UNVER ORDERS ALERT
"KRN",19,10082,"RPC",1756,0)
ORWPCE HNCOK
"KRN",19,10082,"RPC",1757,0)
ORWPS MEDHIST
"KRN",19,10082,"RPC",1758,0)
TIU FIELD CHECK
"KRN",19,10082,"RPC",1759,0)
TIU FIELD LIST ADD
"KRN",19,10082,"RPC",1760,0)
TIU FIELD LIST IMPORT
"KRN",19,10082,"RPC",1761,0)
TIU SET DOCUMENT TEXT
"KRN",19,10082,"RPC",1762,0)
ORWDPS2 CHKPI
"KRN",19,10082,"RPC",1763,0)
ORWDXR GTORITM
"KRN",19,10082,"RPC",1764,0)
ORWDPS2 CHKGRP
"KRN",19,10082,"RPC",1765,0)
ORWDPS2 QOGRP
"KRN",19,10082,"RPC",1766,0)
ORWDXR GETPKG
"KRN",19,10082,"RPC",1767,0)
ORQPT MAKE RPL
"KRN",19,10082,"RPC",1768,0)
ORQPT READ RPL
"KRN",19,10082,"RPC",1769,0)
ORQPT KILL RPL
"KRN",19,10082,"RPC",1770,0)
ORWTIU GET SAVED CP FIELDS
"KRN",19,10082,"RPC",1771,0)
ORWDPS1 LOCPICK
"KRN",19,10082,"RPC",1772,0)
ORWPT LAST5 RPL
"KRN",19,10082,"RPC",1773,0)
ORWPT FULLSSN RPL
"KRN",19,10082,"RPC",1774,0)
ORWOR PKIUSE
"KRN",19,10082,"RPC",1775,0)
ORWOR1 SIG
"KRN",19,10082,"RPC",1777,0)
ORWOR1 CHKDIG
"KRN",19,10082,"RPC",1778,0)
ORWOR1 GETDTEXT
"KRN",19,10082,"RPC",1779,0)
ORWOR1 GETDSIG
"KRN",19,10082,"RPC",1780,0)
ORWTPD GETIMG
"KRN",19,10082,"RPC",1781,0)
TIU IS THIS A CLINPROC?
"KRN",19,10082,"RPC",1782,0)
TIU IDENTIFY CLINPROC CLASS
"KRN",19,10082,"RPC",1783,0)
TIU LONG LIST CLINPROC TITLES
"KRN",19,10082,"U")
CPRSCHART VERSION 1.0.19.15
"KRN",19,10150,-1)
2^3
"KRN",19,10150,0)
OR PARAM COORDINATOR MENU^CPRS Configuration (Clin Coord)^^M^64^^^^^^^^^
"KRN",19,10150,10,0)
^19.01IP^22^22
"KRN",19,10150,10,22,0)
11326^GA^17
"KRN",19,10150,10,22,"^")
ORCL CPRS ACCESS
"KRN",19,10150,"U")
CPRS CONFIGURATION (CLIN COORD
"KRN",19,11326,-1)
0^2
"KRN",19,11326,0)
ORCL CPRS ACCESS^GUI Access - Tabs, RPL^^E^^^^^^^^ORDER ENTRY/RESULTS REPORTING
"KRN",19,11326,1,0)
^^53^53^3020613^
"KRN",19,11326,1,1,0)
This option provides input template access for editing CPRS GUI access 
"KRN",19,11326,1,2,0)
restrictions in the NEW PERSON file [^VA(200,] for cover sheet tabs and 
"KRN",19,11326,1,3,0)
user-specific restricted patient selection lists.
"KRN",19,11326,1,4,0)
 
"KRN",19,11326,1,5,0)
Note that there is a logic path followed by the GUI application with 
"KRN",19,11326,1,6,0)
regard to the entries in all of these fields under discussion.  The 
"KRN",19,11326,1,7,0)
possible scenarios are:
"KRN",19,11326,1,8,0)
 
"KRN",19,11326,1,9,0)
Scenario A - The user is restricted to, and sees only, the REPORTS tab of 
"KRN",19,11326,1,10,0)
the CPRS GUI application.  In addition, the Tools/Options menu restricts 
"KRN",19,11326,1,11,0)
access to patient selection settings.  
"KRN",19,11326,1,12,0)
 
"KRN",19,11326,1,13,0)
Scenario B - The user sees all tabs and can select from all patients.  
"KRN",19,11326,1,14,0)
 
"KRN",19,11326,1,15,0)
Scenario C - The user has no access to the CPRS GUI.  
"KRN",19,11326,1,16,0)
 
"KRN",19,11326,1,17,0)
Scenario D - The user has access to the Reports Tab only, and all 
"KRN",19,11326,1,18,0)
patients.
"KRN",19,11326,1,19,0)
 
"KRN",19,11326,1,20,0)
The following matrix should indicate what to expect:
"KRN",19,11326,1,21,0)
 
"KRN",19,11326,1,22,0)
    Restr. Pt. List     OE/RR Team           Tab(s)      Scenario
"KRN",19,11326,1,23,0)
    = = = = = = = =     = = = = = =          = = = =     = = = = =
"KRN",19,11326,1,24,0)
    (blank)             (none)               (none)      C
"KRN",19,11326,1,25,0)
    (blank)             XYZ Team             (none)      C
"KRN",19,11326,1,26,0)
    (blank)             XYZ Team             RPT         C
"KRN",19,11326,1,27,0)
    Y                   (none/invalid)       RPT         C
"KRN",19,11326,1,28,0)
    N                   XYZ Team             RPT         D
"KRN",19,11326,1,29,0)
    Y                   XYZ Team             RPT         A
"KRN",19,11326,1,30,0)
    N                   N/A                  COR         B
"KRN",19,11326,1,31,0)
    N                   N/A                  COR, RPT    B
"KRN",19,11326,1,32,0)
    Y                   N/A                  COR         B
"KRN",19,11326,1,33,0)
    Y                   N/A                  COR, RPT    B
"KRN",19,11326,1,34,0)
    (blank)             N/A                  COR         C
"KRN",19,11326,1,35,0)
    (blank)             N/A                  COR, RPT    C
"KRN",19,11326,1,36,0)
 
"KRN",19,11326,1,37,0)
It will be seen that the "COR" tab overrules other tab settings, allows 
"KRN",19,11326,1,38,0)
access to all tabs, and also allows access to all patients - except when 
"KRN",19,11326,1,39,0)
the "RESTRICTED PATIENT SELECTION" entry is left blank.  
"KRN",19,11326,1,40,0)
 
"KRN",19,11326,1,41,0)
Note that more than one entry can be made for the same tab.  For example, 
"KRN",19,11326,1,42,0)
a "RPT" tab entry could be made for a user with valid dates equating to 
"KRN",19,11326,1,43,0)
the second week of the current month, then another "RPT" entry made with 
"KRN",19,11326,1,44,0)
dates allowing access for the first week of the next month.  To create a 
"KRN",19,11326,1,45,0)
duplicate entry of the same tab, the user must select "No" when prompted 
"KRN",19,11326,1,46,0)
for the new entry on a blank line.  Some users may not be familiar with 
"KRN",19,11326,1,47,0)
this standard Fileman behavior.  
"KRN",19,11326,1,48,0)
 
"KRN",19,11326,1,49,0)
The ruling logic for multiple entries of the same tab is:
"KRN",19,11326,1,50,0)
 
"KRN",19,11326,1,51,0)
    If any entry for a given tab allows access to the tab 
"KRN",19,11326,1,52,0)
    as of the date of login, then the tab is allowed, regardless  
"KRN",19,11326,1,53,0)
    of any other entries which may exist for that tab.  
"KRN",19,11326,30)
VA(200,
"KRN",19,11326,31)
AEMQ
"KRN",19,11326,50)
VA(200,
"KRN",19,11326,51)
[OR USER ACCESS OPTIONS]
"KRN",19,11326,53)
BACK
"KRN",19,11326,"U")
GUI ACCESS - TABS, RPL
"KRN",8994,1161,-1)
0^1
"KRN",8994,1161,0)
ORWORB TEXT FOLLOWUP^TXTFUP^ORWORB^4^S^^^1
"KRN",8994,1161,1,0)
^^2^2^3020605^
"KRN",8994,1161,1,1,0)
Returns text for notifications/alerts with a simple text message follow-up
"KRN",8994,1161,1,2,0)
action.
"KRN",8994,1161,2,0)
^8994.02A^3^3
"KRN",8994,1161,2,1,0)
DFN^1^20^1
"KRN",8994,1161,2,1,1,0)
^^1^1^3020605^
"KRN",8994,1161,2,1,1,1,0)
Internal entry number of patient in the Patient file [^DPT].
"KRN",8994,1161,2,2,0)
NOTIFICATION^1^20^1
"KRN",8994,1161,2,2,1,0)
^^2^2^3020605^
"KRN",8994,1161,2,2,1,1,0)
Internal entry number of notification in the OE/RR Notification file
"KRN",8994,1161,2,2,1,2,0)
[^OR(100.9].
"KRN",8994,1161,2,3,0)
XQADATA^1^255^0
"KRN",8994,1161,2,3,1,0)
^^1^1^3020605^
"KRN",8994,1161,2,3,1,1,0)
Optional data used in some follow-up actions.
"KRN",8994,1161,2,"B","DFN",1)

"KRN",8994,1161,2,"B","NOTIFICATION",2)

"KRN",8994,1161,2,"B","XQADATA",3)

"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",101.24,0,13,.13)
RPC^P8994'^XWB(8994,^0;13^Q
"PGL",101.24,0,18,.18)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",101.24,0,21,.192)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"PKG",22,-1)
1^1
"PKG",22,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",22,20,0)
^9.402P^^
"PKG",22,22,0)
^9.49I^1^1
"PKG",22,22,1,0)
3.0^2971217^2980204^64
"PKG",22,22,1,"PAH",1,0)
148^3020723
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","ORCXPND1")
0^8^B55437808
"RTN","ORCXPND1",1,0)
ORCXPND1 ; SLC/MKB - Expanded Display cont ;11:58 AM  13 Mar 2001
"RTN","ORCXPND1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**26,67,75,89,92,94,148**;Dec 17, 1997
"RTN","ORCXPND1",3,0)
COVER ; -- cover sheet
"RTN","ORCXPND1",4,0)
 N PKG S PKG=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",5,0)
 D ALLERGY^ORCXPND2:PKG="GMRA",NOTES:PKG="TIU"
"RTN","ORCXPND1",6,0)
 Q
"RTN","ORCXPND1",7,0)
 ;
"RTN","ORCXPND1",8,0)
NOTES ; -- progress notes
"RTN","ORCXPND1",9,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",10,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",11,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",12,0)
 K @ORY
"RTN","ORCXPND1",13,0)
 Q
"RTN","ORCXPND1",14,0)
 ;
"RTN","ORCXPND1",15,0)
PROBLEMS ; -- problem list
"RTN","ORCXPND1",16,0)
 D PL^ORCXPND4
"RTN","ORCXPND1",17,0)
 Q
"RTN","ORCXPND1",18,0)
 ;
"RTN","ORCXPND1",19,0)
MEDS ; -- pharmacy
"RTN","ORCXPND1",20,0)
 ;N NODE,ORIFN
"RTN","ORCXPND1",21,0)
 D OEL^PSOORRL(+ORVP,ID) ;S NODE=$G(^TMP("PS",$J,0)),ORIFN=+$P(NODE,U,11)
"RTN","ORCXPND1",22,0)
 S ID=+$P($G(^TMP("PS",$J,0)),U,11) D ORDERS
"RTN","ORCXPND1",23,0)
 ;D @($S($P($G(^OR(100,ORIFN,0)),U,11)=$O(^ORD(100.98,"B","IV RX",0)):"IV",1:"DRUG")_"^ORCXPND2")
"RTN","ORCXPND1",24,0)
 K ^TMP("PS",$J)
"RTN","ORCXPND1",25,0)
 Q
"RTN","ORCXPND1",26,0)
 ;
"RTN","ORCXPND1",27,0)
LABS ; -- laboratory [RESULTS ONLY for ID=OE order #]
"RTN","ORCXPND1",28,0)
 N ORIFN,X,Y,SUB,TEST,NAME,SS,IDE,IVDT,TST,CCNT,ORCY,IG,TCNT
"RTN","ORCXPND1",29,0)
 K ^TMP("LRRR",$J)
"RTN","ORCXPND1",30,0)
 S ORIFN=+ID,IDE=$G(^OR(100,+ID,4)) Q:'$L(IDE)  ; OE# -> Lab#
"RTN","ORCXPND1",31,0)
 I +IDE  D RR^LR7OR1(+ORVP,IDE) I '$D(^TMP("LRRR",$J,+ORVP)) S $P(IDE,";",1,3)=";;" ;Order possibly purged, reset to lookup on file 63
"RTN","ORCXPND1",32,0)
 I '+IDE,$P(IDE,";",5)  D RR^LR7OR1(+ORVP,,9999999-$P(IDE,";",5),9999999-$P(IDE,";",5),$P(IDE,";",4))
"RTN","ORCXPND1",33,0)
 K ORCY D TEXT^ORQ12(.ORCY,ORIFN,80)
"RTN","ORCXPND1",34,0)
 S IG=0 F  S IG=$O(ORCY(IG)) Q:IG<1  S X=ORCY(IG) D ITEM^ORCXPND(X)
"RTN","ORCXPND1",35,0)
 D BLANK^ORCXPND I '$D(^TMP("LRRR",$J,+ORVP)) S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",36,0)
 M TEST=^TMP("LRRR",$J,+ORVP) S CCNT=0,SS=""
"RTN","ORCXPND1",37,0)
 F  S SS=$O(TEST(SS)) Q:SS=""  S IVDT=0 F  S IVDT=$O(TEST(SS,IVDT)) Q:'IVDT  D
"RTN","ORCXPND1",38,0)
 . I SS="BB" K ^TMP("LRC",$J) D EN1^LR7OSBR(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q
"RTN","ORCXPND1",39,0)
 .. N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",40,0)
 .. K ^TMP("LRC",$J)
"RTN","ORCXPND1",41,0)
 . I SS="MI" K ^TMP("LRC",$J) D EN^LR7OSMZ0(+ORVP) Q:'$D(^TMP("LRC",$J))  D  Q
"RTN","ORCXPND1",42,0)
 .. N I S I=0 F  S I=$O(^TMP("LRC",$J,I)) Q:I<1  S X=^(I,0),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",43,0)
 .. K ^TMP("LRC",$J)
"RTN","ORCXPND1",44,0)
 . I SS="CH" D  Q
"RTN","ORCXPND1",45,0)
 .. S (TCNT,TST)=0 F  S TST=$O(TEST(SS,IVDT,TST)) Q:TST=""  S CCNT=0,Y="",TCNT=TCNT+1 D
"RTN","ORCXPND1",46,0)
 ... I TCNT=1 D
"RTN","ORCXPND1",47,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="   Collection time:          "_$$FMTE^XLFDT(9999999-IVDT,1)
"RTN","ORCXPND1",48,0)
 .... S CCNT=0,LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT," ")_$$S(3,CCNT,"Test Name")_$$S(29,CCNT,"Result")_$$S(39,CCNT,"Units")_$$S(55,CCNT,"Range") D:$D(IOUON) SETVIDEO^ORCXPND(LCNT,1,70,IOUON,IOUOFF)
"RTN","ORCXPND1",49,0)
 .... S CCNT=0,LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT,"-------------------")_$$S(29,CCNT,"------")_$$S(39,CCNT,"-----")_$$S(55,CCNT,"-----")
"RTN","ORCXPND1",50,0)
 ... I TST S X=TEST(SS,IVDT,TST),CCNT=0 I +X D
"RTN","ORCXPND1",51,0)
 .... S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT,$P(^LAB(60,+X,0),U))_$$S(26,CCNT,$J($P(X,U,2),7))
"RTN","ORCXPND1",52,0)
 .... I $L($P(X,U,2))<8 S ^TMP("ORXPND",$J,LCNT,0)=^TMP("ORXPND",$J,LCNT,0)_$$S(34,CCNT,$S($L($P(X,U,3)):$P(X,U,3),1:""))_$$S(39,CCNT,$P(X,U,4))_$$S(45,CCNT,$J($P(X,U,5),15))
"RTN","ORCXPND1",53,0)
 .... E  S CCNT=0,LCNT=LCNT+1,$P(Y," ",35)="",^TMP("ORXPND",$J,LCNT,0)=$$S(1,CCNT,Y)_$$S(34,CCNT,$S($L($P(X,U,3)):$P(X,U,3),1:""))_$$S(39,CCNT,$P(X,U,4))_$$S(55,CCNT,$J($P(X,U,5),15))
"RTN","ORCXPND1",54,0)
 .... I $L($P(X,U,3)),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOINHI,IOINORM)
"RTN","ORCXPND1",55,0)
 .... I $P(X,U,3)["*",$D(IOBON),$D(IOINHI) D SETVIDEO^ORCXPND(LCNT,26,8,IOBON_IOINHI,IOBOFF_IOINORM)
"RTN","ORCXPND1",56,0)
 ... I TST="N" S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" Comments: " D
"RTN","ORCXPND1",57,0)
 .... N CMT S CMT=0 F  S CMT=$O(TEST(SS,IVDT,"N",CMT)) Q:'CMT  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=" "_TEST(SS,IVDT,"N",CMT)
"RTN","ORCXPND1",58,0)
 K ^TMP("LRRR",$J)
"RTN","ORCXPND1",59,0)
 Q
"RTN","ORCXPND1",60,0)
 ;
"RTN","ORCXPND1",61,0)
DELAY ; -- Delayed orders
"RTN","ORCXPND1",62,0)
NEW ; -- New orders
"RTN","ORCXPND1",63,0)
ORDERS ; -- orders
"RTN","ORCXPND1",64,0)
 I '$G(ORESULTS) D ORDERS^ORCXPND2 Q
"RTN","ORCXPND1",65,0)
 ; -- Results Display (Add more packages as available)
"RTN","ORCXPND1",66,0)
 N PKG,TAB,ORIFN
"RTN","ORCXPND1",67,0)
 S PKG=+$P($G(^OR(100,+ID,0)),"^",14),PKG=$$NMSP^ORCD(PKG)
"RTN","ORCXPND1",68,0)
 S TAB=$S(PKG="LR":"LABS",PKG="GMRC":"CONSULTS",PKG="RA":"XRAYS",1:"")
"RTN","ORCXPND1",69,0)
 I '$L(TAB)!(ID'>0) D  Q  ; no display available
"RTN","ORCXPND1",70,0)
 . N ORY,I D TEXT^ORQ12(.ORY,+ID,80)
"RTN","ORCXPND1",71,0)
 . S I=0 F  S I=$O(ORY(I)) Q:I'>0  D ITEM^ORCXPND(ORY(I))
"RTN","ORCXPND1",72,0)
 . D BLANK^ORCXPND
"RTN","ORCXPND1",73,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="There are no results to report."
"RTN","ORCXPND1",74,0)
 I $O(^OR(100,+ID,2,0)) S ORIFN=+ID,ID=0 F  S ID=$O(^OR(100,ORIFN,2,ID)) Q:ID<1  I $D(^OR(100,ID,0)) D @TAB
"RTN","ORCXPND1",75,0)
 I '$O(^OR(100,+ID,2,0)) D @TAB
"RTN","ORCXPND1",76,0)
 Q
"RTN","ORCXPND1",77,0)
 ;
"RTN","ORCXPND1",78,0)
REPORTS ; -- patient profiles
"RTN","ORCXPND1",79,0)
 D EN^ORCXPNDR ; Reports
"RTN","ORCXPND1",80,0)
 Q
"RTN","ORCXPND1",81,0)
 ;
"RTN","ORCXPND1",82,0)
CONSULTS ; -- consults
"RTN","ORCXPND1",83,0)
 N I,X,SUB,ORTX ;,VALMAR
"RTN","ORCXPND1",84,0)
 I $G(ORTAB)="CONSULTS" S X=$P($G(^TMP("OR",$J,ORTAB,"IDX",NUM)),U,4)
"RTN","ORCXPND1",85,0)
 E  D TEXT^ORQ12(.ORTX,+ID) S X=ORTX(1),ID=+$G(^OR(100,+ID,4)) ; OE->GMRC order#
"RTN","ORCXPND1",86,0)
 D ITEM^ORCXPND(X),BLANK^ORCXPND
"RTN","ORCXPND1",87,0)
 I ID'>0 S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="No data available." Q
"RTN","ORCXPND1",88,0)
 I '$G(ORESULTS) D  ;DT action
"RTN","ORCXPND1",89,0)
 . S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Consult No.:           "_ID
"RTN","ORCXPND1",90,0)
 . N GMRCOER S GMRCOER=2 D DT^GMRCSLM2(ID) S SUB="DT"
"RTN","ORCXPND1",91,0)
 I $G(ORESULTS) D RT^GMRCGUIA(ID,"^TMP(""GMRCR"",$J,""RT"")") S SUB="RT"
"RTN","ORCXPND1",92,0)
 S I=0 F  S I=$O(^TMP("GMRCR",$J,SUB,I)) Q:I'>0  S X=$G(^(I,0)),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",93,0)
 K ^TMP("GMRCR",$J)
"RTN","ORCXPND1",94,0)
 Q
"RTN","ORCXPND1",95,0)
 ;
"RTN","ORCXPND1",96,0)
XRAYS ; -- Radiology
"RTN","ORCXPND1",97,0)
 I '$G(ORESULTS) S ID=+ORVP_U_$TR(ID,"-","^") D EN3^RAO7PC3(ID)
"RTN","ORCXPND1",98,0)
 I $G(ORESULTS) S ID=+$G(^OR(100,+ID,4)) D EN30^RAO7PC3(ID)
"RTN","ORCXPND1",99,0)
 N CASE,PROC,PSET S PSET=$D(^TMP($J,"RAE3",+ORVP,"PRINT_SET"))
"RTN","ORCXPND1",100,0)
 S CASE=0 F  S CASE=$O(^TMP($J,"RAE3",+ORVP,CASE)) Q:CASE'>0  D
"RTN","ORCXPND1",101,0)
 . I PSET S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,"")) D ITEM^ORCXPND(PROC) Q
"RTN","ORCXPND1",102,0)
 . S PROC="" F  S PROC=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC)) Q:PROC=""  D ITEM^ORCXPND(PROC),BLANK^ORCXPND,XRPT,BLANK^ORCXPND
"RTN","ORCXPND1",103,0)
 I PSET S CASE=$O(^TMP($J,"RAE3",+ORVP,0)),PROC=$O(^(CASE,"")) D BLANK^ORCXPND,XRPT,BLANK^ORCXPND ;printset=list all procs, then one report
"RTN","ORCXPND1",104,0)
 K ^TMP($J,"RAE3",+ORVP) S VALM("RM")=81
"RTN","ORCXPND1",105,0)
 Q
"RTN","ORCXPND1",106,0)
 ;
"RTN","ORCXPND1",107,0)
XRPT ; -- body of report for CASE, PROC
"RTN","ORCXPND1",108,0)
 N ORD,X,I
"RTN","ORCXPND1",109,0)
 S ORD=$S($L($G(^TMP($J,"RAE3",+ORVP,"ORD"))):^("ORD"),$L($G(^("ORD",CASE))):^(CASE),1:"") I $L(ORD),ORD'=PROC S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)="Proc Ord: "_ORD
"RTN","ORCXPND1",110,0)
 S I=1 F  S I=$O(^TMP($J,"RAE3",+ORVP,CASE,PROC,I)) Q:I'>0  S X=^(I),LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=X ;Skip pt ID on line 1
"RTN","ORCXPND1",111,0)
 Q
"RTN","ORCXPND1",112,0)
 ;
"RTN","ORCXPND1",113,0)
SUMMRIES ; -- discharge summaries
"RTN","ORCXPND1",114,0)
 N I,ORY,DATE,AUTHOR,PTLOC,SUBJ K ^TMP("TIUAUDIT",$J)
"RTN","ORCXPND1",115,0)
 D RPC^TIUSRV(.ORY,ID)
"RTN","ORCXPND1",116,0)
 S I=0 F  S I=$O(@ORY@(I)) Q:I'>0  S LCNT=LCNT+1,^TMP("ORXPND",$J,LCNT,0)=$G(@ORY@(I,0))
"RTN","ORCXPND1",117,0)
 K @ORY
"RTN","ORCXPND1",118,0)
 Q
"RTN","ORCXPND1",119,0)
 ;
"RTN","ORCXPND1",120,0)
PTINQ ; print patient inquiry in list manager
"RTN","ORCXPND1",121,0)
 N DFN,ORI,X
"RTN","ORCXPND1",122,0)
 S DFN=+ORVP
"RTN","ORCXPND1",123,0)
 D DGINQ(DFN)
"RTN","ORCXPND1",124,0)
 S ORI=4,LCNT=0
"RTN","ORCXPND1",125,0)
 F  S ORI=$O(^TMP("ORDATA",$J,1,ORI)) Q:'ORI  S X=^(ORI) D
"RTN","ORCXPND1",126,0)
 . S LCNT=LCNT+1
"RTN","ORCXPND1",127,0)
 . S ^TMP("ORXPND",$J,LCNT,0)=X
"RTN","ORCXPND1",128,0)
 K ^TMP("ORDATA",$J,1)
"RTN","ORCXPND1",129,0)
 Q
"RTN","ORCXPND1",130,0)
 ;
"RTN","ORCXPND1",131,0)
DGINQ(DFN) ;Patient Inquiry
"RTN","ORCXPND1",132,0)
 D START^ORWRP(80,"DGINQB^ORCXPND1(DFN)")
"RTN","ORCXPND1",133,0)
 Q
"RTN","ORCXPND1",134,0)
 ;
"RTN","ORCXPND1",135,0)
DGINQB(DFN) ;Build Patient Inquiry
"RTN","ORCXPND1",136,0)
 N ORDOC,ORTEAM,ORVP,XQORNOD,ORSSTRT,ORSSTOP,X,VAOA
"RTN","ORCXPND1",137,0)
 S ORVP=DFN_";DPT(",XQORNOD=1
"RTN","ORCXPND1",138,0)
 D EN^DGRPD ; mas patient inquiry
"RTN","ORCXPND1",139,0)
 ;
"RTN","ORCXPND1",140,0)
 S ORDOC=$$OUTPTPR^SDUTL3(DFN)
"RTN","ORCXPND1",141,0)
 S ORTEAM=$$OUTPTTM^SDUTL3(DFN)
"RTN","ORCXPND1",142,0)
 I ORDOC!ORTEAM  D
"RTN","ORCXPND1",143,0)
 . W !!,"Primary Care Information:"
"RTN","ORCXPND1",144,0)
 . I ORDOC W !,"Primary Practitioner:  ",$P(ORDOC,"^",2)
"RTN","ORCXPND1",145,0)
 . I ORTEAM W !,"Primary Care Team:     ",$P(ORTEAM,"^",2)
"RTN","ORCXPND1",146,0)
 ;
"RTN","ORCXPND1",147,0)
 W !!,"Health Insurance Information:"
"RTN","ORCXPND1",148,0)
 D DISP^IBCNS ; DBIA #10146
"RTN","ORCXPND1",149,0)
 ;
"RTN","ORCXPND1",150,0)
 W !!,"Service Connection/Rated Disabilities:"
"RTN","ORCXPND1",151,0)
 D DIS^DGRPDB
"RTN","ORCXPND1",152,0)
 ;
"RTN","ORCXPND1",153,0)
 D OAD^VADPT ; get NOK address
"RTN","ORCXPND1",154,0)
 I VAOA(9)]"" D
"RTN","ORCXPND1",155,0)
 . W !!,"Next of Kin Information:"
"RTN","ORCXPND1",156,0)
 . W !,"Name:  ",VAOA(9)                         ; nok name
"RTN","ORCXPND1",157,0)
 . I VAOA(10)]"" W " (",VAOA(10),")"              ; relationship
"RTN","ORCXPND1",158,0)
 . I VAOA(1)]"" W !?7,VAOA(1)                     ; address line 1
"RTN","ORCXPND1",159,0)
 . I VAOA(2)]"" W !?7,VAOA(2)                     ; line 2
"RTN","ORCXPND1",160,0)
 . I VAOA(3)]"" W !?7,VAOA(3)                     ; line 3
"RTN","ORCXPND1",161,0)
 . I VAOA(4)]"" D
"RTN","ORCXPND1",162,0)
 . . W !?7,VAOA(4)                                ; city
"RTN","ORCXPND1",163,0)
 . . I VAOA(5)]"" W ", "_$P(VAOA(5),"^",2)        ; state
"RTN","ORCXPND1",164,0)
 . . W "  ",$P(VAOA(11),"^",2)                    ; zip+4
"RTN","ORCXPND1",165,0)
 . I VAOA(8)]"" W !!?7,"Phone number:  ",VAOA(8)  ; phone
"RTN","ORCXPND1",166,0)
 . I $P($G(^DPT(DFN,.21)),U,11)]"" W !?7,"Work phone number:  ",$P(^DPT(DFN,.21),U,11) ; DBIA #3420
"RTN","ORCXPND1",167,0)
 D KVAR^VADPT
"RTN","ORCXPND1",168,0)
 Q
"RTN","ORCXPND1",169,0)
 ;
"RTN","ORCXPND1",170,0)
S(X,Y,Z) ;Pad over
"RTN","ORCXPND1",171,0)
 ;X=Column #
"RTN","ORCXPND1",172,0)
 ;Y=Current length
"RTN","ORCXPND1",173,0)
 ;Z=Text
"RTN","ORCXPND1",174,0)
 ;SP=TEXT SENT
"RTN","ORCXPND1",175,0)
 ;CCNT=Line position after input text
"RTN","ORCXPND1",176,0)
 I '$D(Z) Q ""
"RTN","ORCXPND1",177,0)
 N SP S SP=Z I X,Y,X>Y S SP=$E("                                                                             ",1,X-Y)_Z
"RTN","ORCXPND1",178,0)
 S CCNT=$$INC(CCNT,SP)
"RTN","ORCXPND1",179,0)
 Q SP
"RTN","ORCXPND1",180,0)
INC(X,Y) ;Character position count
"RTN","ORCXPND1",181,0)
 ;X=Current count
"RTN","ORCXPND1",182,0)
 ;Y=Text
"RTN","ORCXPND1",183,0)
 N INC S INC=X+$L(Y)
"RTN","ORCXPND1",184,0)
 Q INC
"RTN","ORDV04")
0^5^B69314469
"RTN","ORDV04",1,0)
ORDV04 ;slc/dan - OE/RR ; 11 Jul 2001  7:44 AM
"RTN","ORDV04",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,148**;Dec 17,1997
"RTN","ORDV04",3,0)
 ;OE/RR COMPONENT
"RTN","ORDV04",4,0)
ORC(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT)     ; Current Orders
"RTN","ORDV04",5,0)
 ;External calls to EN^ORQ1, ^OR(100
"RTN","ORDV04",6,0)
 N ORCNT,ORJ,ORSITE,SITE,ORX0,ORLIST,GO
"RTN","ORDV04",7,0)
 Q:'$L(OREXT)
"RTN","ORDV04",8,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",9,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",10,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",11,0)
 K ^TMP("ORR",$J),^TMP("ORDATA",$J)
"RTN","ORDV04",12,0)
 D @GO
"RTN","ORDV04",13,0)
 I '$D(^TMP("ORR",$J)) Q
"RTN","ORDV04",14,0)
 S ORCNT=0,ORJ=0
"RTN","ORDV04",15,0)
 F  S ORJ=$O(^TMP("ORR",$J,ORLIST,ORJ)) Q:'+ORJ!(ORCNT'<ORMAX)  S ORX0=^(ORJ) D
"RTN","ORDV04",16,0)
 . S ORCNT=ORCNT+1,SITE=$S($L($G(^TMP("ORR",$J,ORLIST,ORJ,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",17,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",18,0)
 . D SPMRG^ORDVU("^TMP(""ORR"","_$J_","""_ORLIST_""","_ORJ_",""TX"")","^TMP(""ORDATA"","_$J_","""_ORLIST_""","_ORJ_",""WP"",2)",2) ;order text
"RTN","ORDV04",19,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",3)="3^"_$P(ORX0,"^",6) ; status
"RTN","ORDV04",20,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",4)="4^"_$$DATE^ORDVU($P(ORX0,"^",4)) ;start date
"RTN","ORDV04",21,0)
 . S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",5)="5^"_$$DATE^ORDVU($P(ORX0,"^",5)) ;stop date
"RTN","ORDV04",22,0)
 . I $O(^TMP("ORR",$J,ORLIST,ORJ,"TX",1)) S ^TMP("ORDATA",$J,ORLIST,ORJ,"WP",6)="6^[+]" ;flag for details
"RTN","ORDV04",23,0)
 K ^TMP("ORR",$J)
"RTN","ORDV04",24,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",25,0)
 Q
"RTN","ORDV04",26,0)
ORCVA ;VA call to get Current Orders
"RTN","ORDV04",27,0)
 N ORVP
"RTN","ORDV04",28,0)
 S ORVP=DFN_";DPT("
"RTN","ORDV04",29,0)
 I '$D(^OR(100,"AC",ORVP)) Q
"RTN","ORDV04",30,0)
 D EN^ORQ1(ORVP,,2,,ORDBEG,ORDEND,1) ;get current orders. ORLIST is set in ORQ1
"RTN","ORDV04",31,0)
 Q
"RTN","ORDV04",32,0)
PLAILALL(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Problem list API returns ALL problems
"RTN","ORDV04",33,0)
 N GO
"RTN","ORDV04",34,0)
 Q:'$L(OREXT)
"RTN","ORDV04",35,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",36,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",37,0)
 D PLAIL
"RTN","ORDV04",38,0)
 Q
"RTN","ORDV04",39,0)
PLALL ;Jump here for All Problems
"RTN","ORDV04",40,0)
 D GETLIST^GMPLHS(DFN,"ALL")
"RTN","ORDV04",41,0)
 Q
"RTN","ORDV04",42,0)
PLAILI(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Problem list API returns INACTIVE problems
"RTN","ORDV04",43,0)
 N GO
"RTN","ORDV04",44,0)
 Q:'$L(OREXT)
"RTN","ORDV04",45,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",46,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",47,0)
 D PLAIL
"RTN","ORDV04",48,0)
 Q
"RTN","ORDV04",49,0)
PLI ;Jump here for Inactive Problems
"RTN","ORDV04",50,0)
 D GETLIST^GMPLHS(DFN,"I")
"RTN","ORDV04",51,0)
 Q
"RTN","ORDV04",52,0)
PLAILA(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Problem list API returns ACTIVE problems
"RTN","ORDV04",53,0)
 N GO
"RTN","ORDV04",54,0)
 Q:'$L(OREXT)
"RTN","ORDV04",55,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",56,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",57,0)
 D PLAIL
"RTN","ORDV04",58,0)
 Q
"RTN","ORDV04",59,0)
PLA ;Jump here for Active Problems
"RTN","ORDV04",60,0)
 D GETLIST^GMPLHS(DFN,"A")
"RTN","ORDV04",61,0)
 Q
"RTN","ORDV04",62,0)
PLAIL   ;problems(active, inactive or all)
"RTN","ORDV04",63,0)
 ;External calls to ^GMPLHS
"RTN","ORDV04",64,0)
 ; input:
"RTN","ORDV04",65,0)
 ;   STATUS = "A"   to produce active problems
"RTN","ORDV04",66,0)
 ;   STATUS = "I"   to produce inactive problems
"RTN","ORDV04",67,0)
 ;   STATUS = "ALL" to produce all problems
"RTN","ORDV04",68,0)
 ;
"RTN","ORDV04",69,0)
 N ORPROBNO,ORXREC0,ORLOC,I,K,X,ORSITE,SITE,ORMORE
"RTN","ORDV04",70,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",71,0)
 K ^TMP("ORDATA",$J),^TMP("GMPLHS",$J)
"RTN","ORDV04",72,0)
 D @GO
"RTN","ORDV04",73,0)
 I '$D(^TMP("GMPLHS",$J)) Q
"RTN","ORDV04",74,0)
 S ORPROBNO=0
"RTN","ORDV04",75,0)
 F I=1:1:ORMAX S ORPROBNO=$O(^TMP("GMPLHS",$J,ORPROBNO)) Q:'ORPROBNO  D
"RTN","ORDV04",76,0)
 . S ORXREC0=$G(^TMP("GMPLHS",$J,ORPROBNO,0)),ORMORE=0
"RTN","ORDV04",77,0)
 . S SITE=$S($L($G(^TMP("GMPLHS",$J,ORPROBNO,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",78,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",79,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",2)="2^"_$P(ORXREC0,U,5) ;status
"RTN","ORDV04",80,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",3)="3^"_$G(^TMP("GMPLHS",$J,ORPROBNO,"N")) ;provider narrative
"RTN","ORDV04",81,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",4)="4^"_$$DATE^ORDVU($P(ORXREC0,U,6)) ;onset date
"RTN","ORDV04",82,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",5)="5^"_$$DATE^ORDVU($P(ORXREC0,U,2)) ;last modified date
"RTN","ORDV04",83,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",6)="6^"_$P(ORXREC0,U,7) ;provider
"RTN","ORDV04",84,0)
 . S ORLOC=0,K=0
"RTN","ORDV04",85,0)
 . F  S ORLOC=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC)) Q:'ORLOC  D
"RTN","ORDV04",86,0)
 .. S X=0
"RTN","ORDV04",87,0)
 .. F  S X=$O(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X)) Q:'X  D
"RTN","ORDV04",88,0)
 ... S K=K+1,ORMORE=1
"RTN","ORDV04",89,0)
 ... S ^TMP("ORDATA",$J,ORPROBNO,"WP",7,K)="7^"_$P($G(^TMP("GMPLHS",$J,ORPROBNO,"C",ORLOC,X,0)),U) ;note narrative
"RTN","ORDV04",90,0)
 . S ^TMP("ORDATA",$J,ORPROBNO,"WP",8)="8^"_$P(ORXREC0,U,14) ;exposures
"RTN","ORDV04",91,0)
 . I ORMORE S ^TMP("ORDATA",$J,ORPROBNO,"WP",9)="9^[+]" ;flag for details
"RTN","ORDV04",92,0)
 K ^TMP("GMPLHS",$J)
"RTN","ORDV04",93,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",94,0)
 Q
"RTN","ORDV04",95,0)
SR(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;Surgery Report
"RTN","ORDV04",96,0)
 ;External call to ^ORDV04A (external calls are noted in that routine)
"RTN","ORDV04",97,0)
 N ORCNT
"RTN","ORDV04",98,0)
 S ORCNT=0
"RTN","ORDV04",99,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",100,0)
 D ENSR^ORDV04A
"RTN","ORDV04",101,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",102,0)
 Q
"RTN","ORDV04",103,0)
VS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT)      ; get vital Signs
"RTN","ORDV04",104,0)
 ;External calls to GMRVUT0
"RTN","ORDV04",105,0)
 N ORDT,I,TYPE,IEN,GMRVSTR,ORSITE,SITE,PLACE,GO
"RTN","ORDV04",106,0)
 Q:'$L(OREXT)
"RTN","ORDV04",107,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",108,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",109,0)
 K ^UTILITY($J,"GMRVD"),^TMP("ORDATA",$J)
"RTN","ORDV04",110,0)
 S GMRVSTR="T;P;R;BP;HT;WT",GMRVSTR(0)=ORDBEG_"^"_ORDEND_"^"_ORMAX_"^"_1
"RTN","ORDV04",111,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",112,0)
 D @GO
"RTN","ORDV04",113,0)
 S ORDT=0
"RTN","ORDV04",114,0)
 F I=1:1 S ORDT=$O(^UTILITY($J,"GMRVD",ORDT)) Q:'+ORDT!(I>ORMAX)  D
"RTN","ORDV04",115,0)
 . S SITE=$S($L($G(^TMP("GMRVD",$J,ORDT,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",116,0)
 . S ^TMP("ORDATA",$J,"WP",ORDT,1)="1^"_SITE
"RTN","ORDV04",117,0)
 . S ^TMP("ORDATA",$J,"WP",ORDT,2)="2^"_$$DATE^ORDVU(9999999-ORDT) ;date vitals taken
"RTN","ORDV04",118,0)
 . S TYPE=""
"RTN","ORDV04",119,0)
 . F  S TYPE=$O(^UTILITY($J,"GMRVD",ORDT,TYPE)) Q:TYPE=""  D
"RTN","ORDV04",120,0)
 .. S IEN=$O(^UTILITY($J,"GMRVD",ORDT,TYPE,0)) Q:'IEN
"RTN","ORDV04",121,0)
 .. S PLACE=$S(TYPE="T":3,TYPE="P":4,TYPE="R":5,TYPE="BP":6,TYPE="HT":7,1:8)
"RTN","ORDV04",122,0)
 .. S ^TMP("ORDATA",$J,"WP",ORDT,PLACE)=PLACE_"^"_$P($G(^UTILITY($J,"GMRVD",ORDT,TYPE,IEN)),"^",8) ;Get value of vitals from global
"RTN","ORDV04",123,0)
 K ^UTILITY($J,"GMRVD")
"RTN","ORDV04",124,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",125,0)
 Q
"RTN","ORDV04",126,0)
TIUPRG(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  TIU version of progress reports
"RTN","ORDV04",127,0)
 ;External calls to TIUSRVLO,TIUSRVR1,VASITE
"RTN","ORDV04",128,0)
 N ORDT,DATE,ORGLOB,ORGLOBA,ORTEMP,ORSITE,SITE,I,ORNODE,GO
"RTN","ORDV04",129,0)
 Q:'$L(OREXT)
"RTN","ORDV04",130,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",131,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",132,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",133,0)
 D @GO
"RTN","ORDV04",134,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",135,0)
 S ORNODE=0,ORCI=0
"RTN","ORDV04",136,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",137,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORCI'<ORMAX)  D
"RTN","ORDV04",138,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",139,0)
 . S DATE=$P(ORTEMP,U,3)       ;date
"RTN","ORDV04",140,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",141,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",142,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$P(ORTEMP,U) ;TIU ien
"RTN","ORDV04",143,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATE^ORDVU(DATE) ;date
"RTN","ORDV04",144,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$P(ORTEMP,U,2) ;type
"RTN","ORDV04",145,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$P($P(ORTEMP,U,5),";",2) ;author
"RTN","ORDV04",146,0)
 . S ORCI=ORCI+1
"RTN","ORDV04",147,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call back to get note text
"RTN","ORDV04",148,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",6)),6) ;Notes Text
"RTN","ORDV04",149,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",7)="7^[+]"
"RTN","ORDV04",150,0)
 . K @ORGLOBA
"RTN","ORDV04",151,0)
 K @ORGLOB
"RTN","ORDV04",152,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",153,0)
 Q
"RTN","ORDV04",154,0)
TPRG ;Jump here for Tiu Progress Notes
"RTN","ORDV04",155,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,3,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",156,0)
 Q
"RTN","ORDV04",157,0)
TIUDCS(ROOT,ORALPHA,OROMEGA,ORMAX,ORDBEG,ORDEND,OREXT) ;  Discharge Summaries
"RTN","ORDV04",158,0)
 ;External calls to VASITE, DIQ1, TIUSRVLO
"RTN","ORDV04",159,0)
 N ORGLOB,ORGLOBA,ORI,ORNODE,ORICDIEN,ORARRAY,ORTEMP,ORSITE,SITE,DIC,DR,DIQ,DA,GO
"RTN","ORDV04",160,0)
 Q:'$L(OREXT)
"RTN","ORDV04",161,0)
 S GO=$P(OREXT,";")_"^"_$P(OREXT,";",2)
"RTN","ORDV04",162,0)
 Q:'$L($T(@GO))
"RTN","ORDV04",163,0)
 S ORSITE=$$SITE^VASITE,ORSITE=$P(ORSITE,"^",2)_";"_$P(ORSITE,"^",3)
"RTN","ORDV04",164,0)
 D @GO
"RTN","ORDV04",165,0)
 I '$D(@ORGLOB) Q
"RTN","ORDV04",166,0)
 K ^TMP("ORDATA",$J)
"RTN","ORDV04",167,0)
 S ORNODE=0,ORI=0
"RTN","ORDV04",168,0)
 F  S ORNODE=$O(@ORGLOB@(ORNODE)) Q:'ORNODE!(ORI'<ORMAX)  D
"RTN","ORDV04",169,0)
 . S ORTEMP=@ORGLOB@(ORNODE)
"RTN","ORDV04",170,0)
 . S SITE=$S($L($G(@ORGLOB@(ORNODE,"facility"))):^("facility"),1:ORSITE)
"RTN","ORDV04",171,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",1)="1^"_SITE ;Station ID
"RTN","ORDV04",172,0)
 . K ORARRAY S DIC=8925,DA=$P(ORTEMP,U),DR=".05;.07;.08;1202;1502",DIQ="ORARRAY"
"RTN","ORDV04",173,0)
 . D EN^DIQ1
"RTN","ORDV04",174,0)
 . S DIQ="ORARRAY(8925,"_DA_")"
"RTN","ORDV04",175,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",2)="2^"_$$DATEMMM^ORDVU($G(@DIQ@(.07))) ;episode begin date/time
"RTN","ORDV04",176,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",3)="3^"_$$DATEMMM^ORDVU($G(@DIQ@(.08))) ;episode end date/time
"RTN","ORDV04",177,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",4)="4^"_$G(@DIQ@(1202)) ;author/dicator
"RTN","ORDV04",178,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",5)="5^"_$G(@DIQ@(1502)) ;signed by
"RTN","ORDV04",179,0)
 . S ^TMP("ORDATA",$J,ORNODE,"WP",6)="6^"_$G(@DIQ@(.05)) ;status
"RTN","ORDV04",180,0)
 . S ORICDIEN=+$O(^TIU(8925.9,"B",$P(ORTEMP,U),0))
"RTN","ORDV04",181,0)
 . S ORICDIEN=$P($G(^TIU(8925.9,ORICDIEN,0)),U,6)
"RTN","ORDV04",182,0)
 . I ORICDIEN D 
"RTN","ORDV04",183,0)
 .. K ORARRAY S DIC=80,DA=ORICDIEN,DR=".01;3",DIQ="ORARRAY"
"RTN","ORDV04",184,0)
 .. D EN^DIQ1
"RTN","ORDV04",185,0)
 .. S DIQ="ORARRAY(80,"_DA_")"
"RTN","ORDV04",186,0)
 .. S ^TMP("ORDATA",$J,ORNODE,"WP",7)="7^"_$G(@DIQ@(.01)) ;icd9 code
"RTN","ORDV04",187,0)
 .. S ^TMP("ORDATA",$J,ORNODE,"WP",8)="8^"_$G(@DIQ@(3)) ;icd9 diagnosis
"RTN","ORDV04",188,0)
 . S ORI=ORI+1
"RTN","ORDV04",189,0)
 . D TGET^TIUSRVR1(.ORGLOBA,$P(ORTEMP,U)) ;Call back to get summary text
"RTN","ORDV04",190,0)
 . D SPMRG^ORDVU($NA(@ORGLOBA),$NA(^TMP("ORDATA",$J,ORNODE,"WP",9)),9) ;summary Text
"RTN","ORDV04",191,0)
 . I $O(@ORGLOBA@(0)) S ^TMP("ORDATA",$J,ORNODE,"WP",10)="10^[+]" ;detail flag
"RTN","ORDV04",192,0)
 . K @ORGLOBA
"RTN","ORDV04",193,0)
 K @ORGLOB
"RTN","ORDV04",194,0)
 S ROOT=$NA(^TMP("ORDATA",$J))
"RTN","ORDV04",195,0)
 Q
"RTN","ORDV04",196,0)
TDCS ;Jump here for TIU Discharge Summary
"RTN","ORDV04",197,0)
 D CONTEXT^TIUSRVLO(.ORGLOB,244,5,DFN,ORDBEG,ORDEND,,ORMAX)
"RTN","ORDV04",198,0)
 Q
"RTN","ORDV04",199,0)
TEST ;Test calls
"RTN","ORDV04",200,0)
 S DFN=16,ORALPHA=9999999-2850001,OROMEGA=9999999-3010601,ORDBEG=3010601,ORDEND=2850001
"RTN","ORDV04",201,0)
 ;D ORC(.ROOT,ORALPHA,OROMEGA,999,ORDBEG,ORDEND,"ORCVA;ORDV04")
"RTN","ORDV04",202,0)
 ;D PLAILALL(.ROOT,ORALPHA,OROMEGA,999,ORDBEG,ORDEND,"PLALL;ORDV04")
"RTN","ORDV04",203,0)
 ;D VS(.ROOT,ORALPHA,OROMEGA,999,ORDEND,ORDBEG,"EN1^GMRVUT0")
"RTN","ORDV04",204,0)
 ;D TIUPRG(.ROOT,ORALPHA,OROMEGA,999,ORDEND,ORDBEG,"TPRG;ORDV04")
"RTN","ORDV04",205,0)
 ;D SR(.ROOT,ORALPHA,OROMEGA,999,ORDEND,ORDBEG)
"RTN","ORDV04",206,0)
 D TIUDCS(.ROOT,ORALPHA,OROMEGA,999,ORDEND,ORDBEG,"TDCS;ORDV04")
"RTN","ORDV04",207,0)
 Q
"RTN","ORQ11")
0^10^B70453026
"RTN","ORQ11",1,0)
ORQ11 ;slc/dcm-Get patient orders in context ;11/18/96  17:45 [7/11/02 4:45pm]
"RTN","ORQ11",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**7,27,48,72,78,99,94,148**;Dec 17, 1997
"RTN","ORQ11",3,0)
LOOP ; -- "ACT" x-ref
"RTN","ORQ11",4,0)
 I $G(XREF)="AW" D AW Q
"RTN","ORQ11",5,0)
 K ^TMP("ORGOTIT",$J)
"RTN","ORQ11",6,0)
AWIN ;
"RTN","ORQ11",7,0)
 N TM,TO,IFN,X0,X3,X7,X8,STS,USTS,NOW,ACTOR
"RTN","ORQ11",8,0)
 S NOW=+$E($$NOW^XLFDT,1,12),TM=SDATE
"RTN","ORQ11",9,0)
 F  S TM=$O(^OR(100,"ACT",PAT,TM)) Q:'TM!(TM>EDATE)  S TO=0 F  S TO=$O(^OR(100,"ACT",PAT,TM,TO)) Q:'TO  I $D(ORGRP(TO)) D
"RTN","ORQ11",10,0)
 . S IFN=0
"RTN","ORQ11",11,0)
 . F  S IFN=$O(^OR(100,"ACT",PAT,TM,TO,IFN)) Q:'IFN  I ('$D(^TMP("ORGOTIT",$J,IFN))!MULT),$D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D
"RTN","ORQ11",12,0)
 .. S ACTOR=0
"RTN","ORQ11",13,0)
 .. F  S ACTOR=$O(^OR(100,"ACT",PAT,TM,TO,IFN,ACTOR)) Q:ACTOR<1  I '$D(^TMP("ORGOTIT",$J,IFN,ACTOR)),$D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0),X7=$G(^(7)) D LP1
"RTN","ORQ11",14,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",15,0)
 Q
"RTN","ORQ11",16,0)
AW ; -- "AW" x-ref
"RTN","ORQ11",17,0)
 K ^TMP("ORGOTIT",$J),^TMP("ORSORT",$J)
"RTN","ORQ11",18,0)
 N TM,TO,IFN,X0,X3,X7,X8,STS,USTS,NOW,ACTOR
"RTN","ORQ11",19,0)
 S NOW=+$E($$NOW^XLFDT,1,12),TO=0,SDATE=9999999-SDATE,EDATE=9999999-EDATE
"RTN","ORQ11",20,0)
 F  S TO=$O(^OR(100,"AW",PAT,TO)) Q:'TO  I $D(ORGRP(TO)) S TM=EDATE F  S TM=$O(^OR(100,"AW",PAT,TO,TM)) Q:'TM!(TM>SDATE)!(+TM<EDATE)  D
"RTN","ORQ11",21,0)
 . S IFN=0
"RTN","ORQ11",22,0)
 . F  S IFN=$O(^OR(100,"AW",PAT,TO,TM,IFN)) Q:'IFN  I ('$D(^TMP("ORGOTIT",$J,IFN))!MULT) D
"RTN","ORQ11",23,0)
 .. S ^TMP("ORSORT",$J,9999999-TM,TO,IFN)=""
"RTN","ORQ11",24,0)
 S TM=0
"RTN","ORQ11",25,0)
 F  S TM=$O(^TMP("ORSORT",$J,TM)) Q:'TM  S TO=0 F  S TO=$O(^TMP("ORSORT",$J,TM,TO)) Q:'TO  D
"RTN","ORQ11",26,0)
 . S IFN=0 F  S IFN=$O(^TMP("ORSORT",$J,TM,TO,IFN)) Q:'IFN  I $D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D 
"RTN","ORQ11",27,0)
 .. S ACTOR=0
"RTN","ORQ11",28,0)
 .. F  S ACTOR=$O(^OR(100,"ACT",PAT,9999999-$P(X0,U,7),TO,IFN,ACTOR)) Q:ACTOR<1  I '$D(^TMP("ORGOTIT",$J,IFN,ACTOR)),$D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0),X7=$G(^(7)) D LP1
"RTN","ORQ11",29,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",30,0)
 I +$$GET^XPAR("SYS","OR ORDER SUMMARY CONTEXT",1,"I")=2 S SDATE=9999999-SDATE,EDATE=9999999-EDATE D AWIN
"RTN","ORQ11",31,0)
 K ^TMP("ORSORT",$J),^TMP("ORGOTIT",$J)
"RTN","ORQ11",32,0)
 Q
"RTN","ORQ11",33,0)
LP1 ; -- main 2dry loop
"RTN","ORQ11",34,0)
 Q:$P(X3,U,8)
"RTN","ORQ11",35,0)
 I '$G(GETKID),$P(X3,U,9),'$P($G(^OR(100,$P(X3,U,9),3)),U,8),FLG'=11 Q
"RTN","ORQ11",36,0)
 Q:$P(X3,U,3)=99  S STS=$P(X3,U,3)
"RTN","ORQ11",37,0)
 I $L($P(X0,U,17)),"^10^11^"[(U_STS_U),$P(X0,U,7)<$G(LAPSE) D
"RTN","ORQ11",38,0)
 . K ^OR(100,"AEVNT",PAT,$P(X0,U,17),IFN)
"RTN","ORQ11",39,0)
 . S $P(^OR(100,IFN,0),U,17)="",$P(^(8,1,0),U,15)=""
"RTN","ORQ11",40,0)
 . D STATUS^ORCSAVE2(IFN,14)
"RTN","ORQ11",41,0)
 D @($S(FLG=2:"CUR1",FLG=3:"DC1",FLG=4:"COM1",FLG=5:"EXG1",FLG=7:"PEN1",FLG=8:"UVR1",FLG=9:"UVN1",FLG=10:"UVC1",FLG=12:"FLG1",FLG=13:"VP1",FLG=14:"VPU1",FLG=18:"HLD1",FLG=20:"CHT1",FLG=21:"CHTSUM",FLG=22:"LPS1",FLG=23:"AVT1",1:"ALL1"))
"RTN","ORQ11",42,0)
 Q
"RTN","ORQ11",43,0)
 ;
"RTN","ORQ11",44,0)
ALL1 ; 1 -- 2dry pass, All, Recent Orders, Unsigned
"RTN","ORQ11",45,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,$G(ACTOR))
"RTN","ORQ11",46,0)
 Q
"RTN","ORQ11",47,0)
 ;
"RTN","ORQ11",48,0)
CUR ; 2 -- Active/Current
"RTN","ORQ11",49,0)
 N X,X0,X1,X2,X3,%H,YD,%,TM,IFN,ACTOR
"RTN","ORQ11",50,0)
 I $G(GROUP)=$O(^ORD(100.98,"B","ALL SERVICES",0)),$G(ORWARD) S X=$O(^ORD(100.98,"B","O RX",0)) K:X ORGRP(X) ; screen out Outpt Meds if inpt
"RTN","ORQ11",51,0)
 S X2=+$$GET^XPAR("SYS","ORPF ACTIVE ORDERS CONTEXT HRS",1,"I"),X=$H,X=+X*24+($P(X,",",2)/3600),X1=X-X2,X3=X1#24,X1=X1\24,X2=$J(X3*3600,0,0),%H=X1_","_X2 D YMD^%DTC S YD=+(X_%)
"RTN","ORQ11",52,0)
 S TM=SDATE F  S TM=$O(^OR(100,"AC",PAT,TM)) Q:TM<1!(TM>EDATE)  S IFN=0 F  S IFN=$O(^OR(100,"AC",PAT,TM,IFN)) Q:IFN<1  I $D(^OR(100,IFN,0)),$D(^(3)) S X0=^(0),X3=^(3) D
"RTN","ORQ11",53,0)
 . Q:'$D(ORGRP($P(X0,U,11)))
"RTN","ORQ11",54,0)
 . S ACTOR=0
"RTN","ORQ11",55,0)
 . F  S ACTOR=$O(^OR(100,"AC",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  I $D(^OR(100,IFN,8,ACTOR,0)) S X=^(0) D
"RTN","ORQ11",56,0)
 .. I $P(X,U,15)=13,$P(X,U)<YD K ^OR(100,"AC",PAT,TM,IFN,ACTOR) Q
"RTN","ORQ11",57,0)
 .. I $P(X,U,15)="",ACTOR'=$P(X3,U,7) K ^OR(100,"AC",PAT,TM,IFN,ACTOR) Q
"RTN","ORQ11",58,0)
 .. D LP1
"RTN","ORQ11",59,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",60,0)
 Q
"RTN","ORQ11",61,0)
CUR1 ; 2 -- 2dry pass, Active/Current
"RTN","ORQ11",62,0)
 N STOP
"RTN","ORQ11",63,0)
 S STOP=$P(X0,U,9)
"RTN","ORQ11",64,0)
 I STS=10 K ^OR(100,"AC",PAT,TM,IFN) Q  ;no delayed orders
"RTN","ORQ11",65,0)
 I '$D(YD),"^1^2^7^12^13^14^"[(U_STS_U) K ^OR(100,"AC",PAT,TM,IFN) Q
"RTN","ORQ11",66,0)
 I $D(YD),"^1^2^7^12^13^14^"[(U_STS_U),STOP<YD K ^OR(100,"AC",PAT,TM,IFN) Q
"RTN","ORQ11",67,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",68,0)
 Q
"RTN","ORQ11",69,0)
 ;
"RTN","ORQ11",70,0)
DC1 ; 3 -- 2dry pass, DC
"RTN","ORQ11",71,0)
 I STS=1!(STS=13)!(STS=12) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",72,0)
 Q
"RTN","ORQ11",73,0)
 ;
"RTN","ORQ11",74,0)
COM1 ; 4 -- 2dry pass, Completed/Expired
"RTN","ORQ11",75,0)
 N STOP
"RTN","ORQ11",76,0)
 S STOP=$P(X0,U,9)
"RTN","ORQ11",77,0)
 I STS=2!(STS=7)!($L(STOP)&(STOP<NOW)&(STS'=1)&(STS'=13)&(STS'=12)) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",78,0)
 Q
"RTN","ORQ11",79,0)
 ;
"RTN","ORQ11",80,0)
EXG ; 5 -- Expiring
"RTN","ORQ11",81,0)
 N ORNG,ORDT,ORDW,ORHOL,X,Y,%DT,DIC,TMW,NOW,STS
"RTN","ORQ11",82,0)
 F ORNG=1:1 D  I ORHOL=0,ORDW=0 Q
"RTN","ORQ11",83,0)
 . S ORDT=$$FMADD^XLFDT(DT,ORNG),ORDW=$S($H-4+ORNG#7>4:1,1:0)
"RTN","ORQ11",84,0)
 . S DIC="^HOLIDAY(",X=$P(ORDT,".")
"RTN","ORQ11",85,0)
 . D ^DIC S ORHOL=$S(+$G(Y)>0:1,1:0)
"RTN","ORQ11",86,0)
 S %DT="",X="T+"_ORNG D ^%DT
"RTN","ORQ11",87,0)
 S TMW=Y_".9999",NOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORQ11",88,0)
 D CUR ;D LOOP
"RTN","ORQ11",89,0)
 Q
"RTN","ORQ11",90,0)
EXG1 ; 5 -- 2dry pass, Expiring
"RTN","ORQ11",91,0)
 N STOP
"RTN","ORQ11",92,0)
 S STOP=$P(X0,U,9)
"RTN","ORQ11",93,0)
 I STS'=1,STS'=2,STS'=7,STS'>9,STOP>NOW,STOP'>TMW D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",94,0)
 Q
"RTN","ORQ11",95,0)
 ;
"RTN","ORQ11",96,0)
ACT ; 6 -- Recent Act'y (Order Summ'y)
"RTN","ORQ11",97,0)
 ;N ORLSIGN S ORLSIGN=$$GET^XPAR("ALL","OR ORDER REVIEW DT","`"_+PAT,"Q")
"RTN","ORQ11",98,0)
 N TM,IFN,X0,X3,ACTOR,X8
"RTN","ORQ11",99,0)
 S TM=SDATE F  S TM=$O(^OR(100,"AR",PAT,TM)) Q:TM<1!(TM>EDATE)  D
"RTN","ORQ11",100,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AR",PAT,TM,IFN)) Q:IFN<1  S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)) I $D(ORGRP(+$P(X0,U,11))) D
"RTN","ORQ11",101,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"AR",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  I $D(^OR(100,IFN,8,ACTOR,0)),$P(^(0),U,15)'=13 S X8=^(0) D LP1
"RTN","ORQ11",102,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",103,0)
 Q
"RTN","ORQ11",104,0)
 ;
"RTN","ORQ11",105,0)
PEN1 ; 7 -- 2dry pass, Pend'g
"RTN","ORQ11",106,0)
 I STS=5 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",107,0)
 Q
"RTN","ORQ11",108,0)
 ;
"RTN","ORQ11",109,0)
UVR1 ; 8 -- 2dry pass, Unv.
"RTN","ORQ11",110,0)
 ;      Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",111,0)
 I '$P(X8,U,9),'$P(X8,U,11),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",112,0)
 Q
"RTN","ORQ11",113,0)
 ;
"RTN","ORQ11",114,0)
UVN1 ; 9 -- 2dry pass, Unv./Nurse
"RTN","ORQ11",115,0)
 ;      Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",116,0)
 I '$P(X8,U,9),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",117,0)
 Q
"RTN","ORQ11",118,0)
 ;
"RTN","ORQ11",119,0)
UVC1 ; 10 -- 2dry pass, Unv./Clerk
"RTN","ORQ11",120,0)
 ;       Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",121,0)
 I '$P(X8,U,11),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",122,0)
 Q
"RTN","ORQ11",123,0)
 ;
"RTN","ORQ11",124,0)
INPT() ; -- Returns 1 or 0, if inpt order using X0=^OR(100,IFN,0)
"RTN","ORQ11",125,0)
 I ($P(X0,U,12)="I")!($P(X0,U,17)="D") Q 1
"RTN","ORQ11",126,0)
 I $P($G(^SC(+$P(X0,U,10),0)),U,3)="W" Q 1
"RTN","ORQ11",127,0)
 Q 0
"RTN","ORQ11",128,0)
 ;
"RTN","ORQ11",129,0)
SIG ; 11 -- Uns.
"RTN","ORQ11",130,0)
 N TM,IFN,X0,X3,ACTOR
"RTN","ORQ11",131,0)
 S TM=SDATE
"RTN","ORQ11",132,0)
 F  S TM=$O(^OR(100,"AS",PAT,TM)) Q:TM<1!(TM>EDATE)  S IFN=0 F  S IFN=$O(^OR(100,"AS",PAT,TM,IFN)) Q:IFN<1  D
"RTN","ORQ11",133,0)
 . S X0=$G(^OR(100,IFN,0)),X3=$G(^(3))
"RTN","ORQ11",134,0)
 . I X0="" K ^OR(100,"AS",PAT,TM,IFN) Q  ;deleted
"RTN","ORQ11",135,0)
 . Q:'$D(ORGRP(+$P(X0,U,11)))  ;not a selected DispGrp
"RTN","ORQ11",136,0)
 . S ACTOR=0 F  S ACTOR=$O(^OR(100,"AS",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  D
"RTN","ORQ11",137,0)
 .. I $P($G(^OR(100,IFN,8,ACTOR,0)),U,4)'=2 K ^OR(100,"AS",PAT,TM,IFN,ACTOR) Q  ;signed or deleted
"RTN","ORQ11",138,0)
 .. D LP1
"RTN","ORQ11",139,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",140,0)
 Q
"RTN","ORQ11",141,0)
 ;
"RTN","ORQ11",142,0)
FLG1 ; 12 -- 2dry pass, Flagged
"RTN","ORQ11",143,0)
 I +$G(^OR(100,IFN,8,ACTOR,3)) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",144,0)
 Q
"RTN","ORQ11",145,0)
 ;
"RTN","ORQ11",146,0)
VP1 ; 13 -- 2dry pass, Verbal/Phone
"RTN","ORQ11",147,0)
 N ORNATR
"RTN","ORQ11",148,0)
 S ORNATR=$P(X8,U,12)
"RTN","ORQ11",149,0)
 I ORNATR,"PV"[$P($G(^ORD(100.02,+ORNATR,0)),U,2) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;STS'=12
"RTN","ORQ11",150,0)
 Q
"RTN","ORQ11",151,0)
 ;
"RTN","ORQ11",152,0)
VPU1 ; 14 -- 2dry pass, Verbal/Phone Uns.
"RTN","ORQ11",153,0)
 N ORNATR
"RTN","ORQ11",154,0)
 S ORNATR=$P(X8,U,12)
"RTN","ORQ11",155,0)
 I ORNATR,"PV"[$P($G(^ORD(100.02,+ORNATR,0)),U,2),'$P(X8,U,5),$P(X8,U,4)=2 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;STS'=12
"RTN","ORQ11",156,0)
 Q
"RTN","ORQ11",157,0)
 ;
"RTN","ORQ11",158,0)
EVNT ; -- time delayed: 15=Admission, 16=Discharge, 17=Transfer
"RTN","ORQ11",159,0)
 N EVENT,IFN,X0,TM,STS,LAPSED
"RTN","ORQ11",160,0)
 S EVENT=$S(FLG=15:"A",FLG=16:"D",FLG=17:"T",1:"")
"RTN","ORQ11",161,0)
 Q:'$L(EVENT)
"RTN","ORQ11",162,0)
 S LAPSED=+$$GET^XPAR("ALL","OR DELAYED ORDERS LAPSE DAYS")
"RTN","ORQ11",163,0)
 S:LAPSED LAPSED=$$FMADD^XLFDT(DT,(0-LAPSED)) ;=0 or cutoff date
"RTN","ORQ11",164,0)
 S IFN=0 F  S IFN=$O(^OR(100,"AEVNT",PAT,EVENT,IFN)) Q:IFN'>0  D
"RTN","ORQ11",165,0)
 . S X0=$G(^OR(100,IFN,0)),TM=$P(X0,U,7),STS=$P($G(^(3)),U,3)
"RTN","ORQ11",166,0)
 . I TM<LAPSED,"^10^11^"[(U_STS_U) D  Q  ;too old to release
"RTN","ORQ11",167,0)
 .. S $P(^OR(100,IFN,0),U,17)="",$P(^(8,1,0),U,15)=""
"RTN","ORQ11",168,0)
 .. K ^OR(100,"AEVNT",PAT,EVENT,IFN)
"RTN","ORQ11",169,0)
 .. D STATUS^ORCSAVE2(IFN,14)
"RTN","ORQ11",170,0)
 . Q:TM<SDATE  Q:TM>EDATE  Q:'$D(ORGRP(+$P(X0,U,11)))
"RTN","ORQ11",171,0)
 . D GET^ORQ12(IFN,ORLIST,DETAIL,1)
"RTN","ORQ11",172,0)
 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",173,0)
 Q
"RTN","ORQ11",174,0)
 ;
"RTN","ORQ11",175,0)
HLD1 ; 18 -- 2dry pass, On Hold
"RTN","ORQ11",176,0)
 I STS=3 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",177,0)
 Q
"RTN","ORQ11",178,0)
 ;
"RTN","ORQ11",179,0)
NEW ; 19 -- New Orders + other uns. by current prov'r
"RTN","ORQ11",180,0)
 N IFN,ACTOR,TM,X0,X3,X8,ORENT,ORPAR
"RTN","ORQ11",181,0)
 S IFN=0 F  S IFN=$O(^TMP("ORNEW",$J,IFN)) Q:IFN'>0  D  ; New orders
"RTN","ORQ11",182,0)
 . S ACTOR=0 F  S ACTOR=$O(^TMP("ORNEW",$J,IFN,ACTOR)) Q:ACTOR'>0  D
"RTN","ORQ11",183,0)
 .. Q:'$D(^OR(100,IFN,0))  Q:'$D(^(8,ACTOR,0))  ;deleted
"RTN","ORQ11",184,0)
 .. D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",185,0)
 G:'$D(^XUSEC("ORES",DUZ)) NW1 ;ck parameter for add'l orders
"RTN","ORQ11",186,0)
 S ORENT="ALL"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+^(5),1:"")
"RTN","ORQ11",187,0)
 S ORPAR=$$GET^XPAR(ORENT,"OR UNSIGNED ORDERS ON EXIT")
"RTN","ORQ11",188,0)
 I ORPAR S TM=SDATE F  S TM=$O(^OR(100,"AS",PAT,TM)) Q:TM<1!(TM>EDATE)  D
"RTN","ORQ11",189,0)
 . S IFN=0 F  S IFN=$O(^OR(100,"AS",PAT,TM,IFN)) Q:IFN<1  D
"RTN","ORQ11",190,0)
 .. S ACTOR=0 F  S ACTOR=$O(^OR(100,"AS",PAT,TM,IFN,ACTOR)) Q:ACTOR<1  D
"RTN","ORQ11",191,0)
 ... Q:$D(^TMP("ORNEW",$J,IFN,ACTOR))  ;already included
"RTN","ORQ11",192,0)
 ... S X0=$G(^OR(100,IFN,0)),X3=$G(^(3)),X8=$G(^(8,ACTOR,0))
"RTN","ORQ11",193,0)
 ... I $S(ORPAR=1&($P(X8,U,3)=DUZ):1,ORPAR=2:1,1:0) D LP1
"RTN","ORQ11",194,0)
NW1 S ^TMP("ORR",$J,ORLIST,"TOT")=ORLST
"RTN","ORQ11",195,0)
 Q
"RTN","ORQ11",196,0)
 ;
"RTN","ORQ11",197,0)
CHT1 ; 20 -- 2dry pass, Chart Review
"RTN","ORQ11",198,0)
 ;       Include if: unverified, released, inpt, not repl/canc/lapsed
"RTN","ORQ11",199,0)
 I '$P(X8,U,19),$P(X8,U,15)="",$$INPT,"^12^13^14^"'[(U_STS_U) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",200,0)
 Q
"RTN","ORQ11",201,0)
 ;
"RTN","ORQ11",202,0)
CHTSUM ; 21 -- 2dry pass, Chart copy summ'y
"RTN","ORQ11",203,0)
 ;       Included based on Nature of Order
"RTN","ORQ11",204,0)
 N XP,NAT
"RTN","ORQ11",205,0)
 S XP=+$$GET^XPAR("SYS","OR PRINT ALL ORDERS CHART SUM",1,"I")
"RTN","ORQ11",206,0)
 I XP=2 D  Q  ;depends on Nature of Order
"RTN","ORQ11",207,0)
 . S NAT=$P($G(^OR(100,IFN,6)),U)
"RTN","ORQ11",208,0)
 . I 'NAT S NAT=$P(X8,U,12)
"RTN","ORQ11",209,0)
 . I NAT,$$CHART^ORX1(NAT) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",210,0)
 I XP=0 D  Q  ;If original printed, print on sum
"RTN","ORQ11",211,0)
 . I X7 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",212,0)
 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR) ;XP=1 gets All orders
"RTN","ORQ11",213,0)
 Q
"RTN","ORQ11",214,0)
 ;
"RTN","ORQ11",215,0)
LPS1 ; 22 -- 2dry pass, Lapsed
"RTN","ORQ11",216,0)
 I STS=14 D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",217,0)
 Q
"RTN","ORQ11",218,0)
 ;
"RTN","ORQ11",219,0)
AVT1 ; 23 -- secondary pass, Active/Pending sts only
"RTN","ORQ11",220,0)
 I (STS=6)!(STS=5) D GET^ORQ12(IFN,ORLIST,DETAIL,ACTOR)
"RTN","ORQ11",221,0)
 Q
"RTN","ORQ11",222,0)
 ;
"RTN","ORQ11",223,0)
QUIT ; -- stop
"RTN","ORQ11",224,0)
 Q
"RTN","ORQQCN1")
0^6^B20903877
"RTN","ORQQCN1",1,0)
ORQQCN1 ; slc/REV - Functions for GUI consult actions - RPCs for GMRCGUIA ; 8-NOV-2000 14:49:16 [1/9/01 10:39am]
"RTN","ORQQCN1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,98,85,109,148**;Dec 17, 1997
"RTN","ORQQCN1",3,0)
 ;
"RTN","ORQQCN1",4,0)
RC(Y,GMRCO,GMRCORNP,GMRCAD,ORCOM) ;Receive the consult into the service
"RTN","ORQQCN1",5,0)
 ;GMRCO - The internal file number of the consult from File 123
"RTN","ORQQCN1",6,0)
 ;GMRCORNP - internal file number of the person receiving the request into the service
"RTN","ORQQCN1",7,0)
 ;GMRCAD - date/time consult received into the service
"RTN","ORQQCN1",8,0)
 ;ORCOM - Array containing comments related to receipt of the consult.
"RTN","ORQQCN1",9,0)
 ;Passed as the following form :
"RTN","ORQQCN1",10,0)
 ; ARRAY(1)="xxx xxx xxx",ARRAY(2)="XXX XXX",ARRAY(3)="XXX XXX xx", etc.
"RTN","ORQQCN1",11,0)
 ; Comment is optional when consult is received.
"RTN","ORQQCN1",12,0)
 S Y=$$RC^GMRCGUIA(GMRCO,GMRCORNP,GMRCAD,.ORCOM)
"RTN","ORQQCN1",13,0)
 Q
"RTN","ORQQCN1",14,0)
 ;
"RTN","ORQQCN1",15,0)
DC(Y,GMRCO,GMRCORNP,GMRCAD,GMRCACTM,ORCOM) ;Discontinue or Deny a consult
"RTN","ORQQCN1",16,0)
 ;GMRCO - Internal file number of consult from File 123
"RTN","ORQQCN1",17,0)
 ;GMRCORNP - Provider who Discontinued or Denied consult
"RTN","ORQQCN1",18,0)
 ;GMRCAD - Date/Time Consult was discontinued or denied.
"RTN","ORQQCN1",19,0)
 ;GMRCACTM - If consult is 'DENIED' passed in as 'DY'; if consult is Discontinued passed in as 'DC'.
"RTN","ORQQCN1",20,0)
 ;ORCOM - Array containing explanation of why consult was denied. Passed as the following form :
"RTN","ORQQCN1",21,0)
 ; ARRAY(1)="xxx xxx xxx",ARRAY(2)="XXX XXX",ARRAY(3)="XXX XXX xx", etc.
"RTN","ORQQCN1",22,0)
 ; Comment is a required field when consult is denied or discontinued.
"RTN","ORQQCN1",23,0)
 S Y=$$DC^GMRCGUIA(GMRCO,GMRCORNP,GMRCAD,GMRCACTM,.ORCOM)
"RTN","ORQQCN1",24,0)
 Q
"RTN","ORQQCN1",25,0)
 ;
"RTN","ORQQCN1",26,0)
FR(Y,GMRCO,GMRCSS,GMRCORNP,GMRCATTN,GMRCURGI,ORDATE,ORCOM) ;Forward consult/request to another service
"RTN","ORQQCN1",27,0)
 ;GMRCO - IEN of consult from File 123
"RTN","ORQQCN1",28,0)
 ;GMRCSS - Service to which consult is being forwarded
"RTN","ORQQCN1",29,0)
 ;GMRCATTN - Provider whose attention consult is sent to. Can be "" or pointer to File 200
"RTN","ORQQCN1",30,0)
 ;GMRCURGI - Urgency of the request
"RTN","ORQQCN1",31,0)
 ;GMRCORNP - Person who is responsible for forwarding the consult
"RTN","ORQQCN1",32,0)
 ;ORCOM is the comments array explaining the forwarding action
"RTN","ORQQCN1",33,0)
 ;     passed in as ORCOM(1)="Xxxx Xxxxx...",ORCOM(2)="Xxxx Xx Xxx...", ORCOM(3)="Xxxxx Xxx Xx...", etc.
"RTN","ORQQCN1",34,0)
 S:+$G(GMRCATTN)=0 GMRCATTN=""
"RTN","ORQQCN1",35,0)
 S Y=$$FR^GMRCGUIA(GMRCO,GMRCSS,GMRCORNP,GMRCATTN,GMRCURGI,.ORCOM,ORDATE)
"RTN","ORQQCN1",36,0)
 Q
"RTN","ORQQCN1",37,0)
 ;
"RTN","ORQQCN1",38,0)
SETACTM(Y,GMRCO) ;set action menus in GUI based on service of selected consult
"RTN","ORQQCN1",39,0)
 Q:+$G(GMRCO)=0
"RTN","ORQQCN1",40,0)
 N ORFLG
"RTN","ORQQCN1",41,0)
 S Y=0
"RTN","ORQQCN1",42,0)
 D CPRS^GMRCACTM(GMRCO,1)
"RTN","ORQQCN1",43,0)
 Q:'$D(ORFLG(GMRCO))
"RTN","ORQQCN1",44,0)
 S Y=ORFLG(GMRCO)
"RTN","ORQQCN1",45,0)
 Q
"RTN","ORQQCN1",46,0)
 ;
"RTN","ORQQCN1",47,0)
URG(Y,GMRCO) ;new urgency from 101.42
"RTN","ORQQCN1",48,0)
 Q:+$G(GMRCO)=0
"RTN","ORQQCN1",49,0)
 N GMRCURG,X,GMRCCSLT,GMRCPROC,GMRCTYPE,GMRCPROT
"RTN","ORQQCN1",50,0)
 S GMRCCSLT=$O(^ORD(101,"B","GMRCOR CONSULT",0))
"RTN","ORQQCN1",51,0)
 S GMRCPROC=$O(^ORD(101,"B","GMRCOR REQUEST",0))
"RTN","ORQQCN1",52,0)
 S GMRCTYPE=$P(^GMR(123,+GMRCO,0),"^",17)
"RTN","ORQQCN1",53,0)
 I $P(^GMR(123,+GMRCO,0),"^",18)["I" D
"RTN","ORQQCN1",54,0)
 . S X=$S(GMRCTYPE=GMRCCSLT:"S.GMRCT",1:"S.GMRCR")
"RTN","ORQQCN1",55,0)
 E  S X="S.GMRCO"
"RTN","ORQQCN1",56,0)
 S GMRCURG=""
"RTN","ORQQCN1",57,0)
 F I=1:1  S GMRCURG=$O(^ORD(101.42,X,GMRCURG)) Q:GMRCURG=""  D
"RTN","ORQQCN1",58,0)
 .S GMRCPROT=$O(^ORD(101,"B","GMRCURGENCY - "_GMRCURG,0))
"RTN","ORQQCN1",59,0)
 .S Y(I)=GMRCPROT_U_GMRCURG
"RTN","ORQQCN1",60,0)
 .;S Y(I)=$O(^ORD(101.42,X,GMRCURG,0))_U_GMRCURG
"RTN","ORQQCN1",61,0)
 Q
"RTN","ORQQCN1",62,0)
 ;
"RTN","ORQQCN1",63,0)
GETCSLT(ORY,ORIEN,SHOWADD)      ; Retrieve a complete consult record
"RTN","ORQQCN1",64,0)
 N ORDOC,ORREQ,I,X,SEQUENCE,ORI,ORGMRC,MEDRSLTS,ROOT
"RTN","ORQQCN1",65,0)
 S MEDRSLTS=1
"RTN","ORQQCN1",66,0)
 Q:+$G(ORIEN)=0
"RTN","ORQQCN1",67,0)
 I '$D(^GMR(123,ORIEN)) S ORY(0)="-1^Invalid consult" Q
"RTN","ORQQCN1",68,0)
 I $$PATCH^XPDUTL("GMRC*3.0*17") D
"RTN","ORQQCN1",69,0)
 . D DOCLIST^GMRCGUIB(.ORGMRC,ORIEN,MEDRSLTS)
"RTN","ORQQCN1",70,0)
 E  D DOCLIST^GMRCGUIB(.ORGMRC,ORIEN)
"RTN","ORQQCN1",71,0)
 S ORY(0)=ORGMRC(0),ORREQ=$P(ORY(0),U,14)
"RTN","ORQQCN1",72,0)
 S:+$G(SHOWADD) SEQUENCE="D"
"RTN","ORQQCN1",73,0)
 I ORREQ'="",$D(^VA(200,ORREQ,0)) S $P(ORY(0),U,14)=ORREQ_";"_$P(^VA(200,ORREQ,0),U,1)
"RTN","ORQQCN1",74,0)
 S X=0,I=1,ORI=1
"RTN","ORQQCN1",75,0)
 F  S X=$O(ORGMRC(50,X)) Q:X=""  D
"RTN","ORQQCN1",76,0)
 . S ORDOC=$P(ORGMRC(50,X),U,1)
"RTN","ORQQCN1",77,0)
 . S ROOT=U_$P($P(ORDOC,";",2),",",1)_")"
"RTN","ORQQCN1",78,0)
 . Q:'$D(@ROOT@(+ORDOC))
"RTN","ORQQCN1",79,0)
 . I ROOT="^TIU(8925)" D
"RTN","ORQQCN1",80,0)
 . . S ORY(I)=+ORDOC_U_$$RESOLVE^TIUSRVLO(+ORDOC)
"RTN","ORQQCN1",81,0)
 . . S $P(ORY(I),U,14)="1",I=I+1  ; parent treenode=1 for TIU docs
"RTN","ORQQCN1",82,0)
 . . S ORY("INDX",+ORDOC,ORI)=""
"RTN","ORQQCN1",83,0)
 . . I +$G(SHOWADD) D 
"RTN","ORQQCN1",84,0)
 . . . I +$$HASDAD^TIUSRVLI(+ORDOC) S ORI=I+1 D SETDAD^TIUSRVLI("ORY",+ORDOC,.ORI) S I=ORI+1 ; for treeview of related notes
"RTN","ORQQCN1",85,0)
 . . . I +$$HASKIDS^TIUSRVLI(+ORDOC) S ORI=I+1 D SETKIDS^TIUSRVLI("ORY",+ORDOC,.ORI) S I=ORI+1 ; for treeview of related notes
"RTN","ORQQCN1",86,0)
 . E  I $E(ROOT,1,5)="^MCAR" D
"RTN","ORQQCN1",87,0)
 . . S ORY(I)=ORGMRC(50,X)
"RTN","ORQQCN1",88,0)
 . . S $P(ORY(I),U,14)="2",I=I+1     ; parent treenode=2 for med results
"RTN","ORQQCN1",89,0)
 K ORY("INDX")
"RTN","ORQQCN1",90,0)
 Q
"RTN","ORQQCN1",91,0)
 ;
"RTN","ORQQCN1",92,0)
FINDCSLT(Y,GMRCIEN) ; Return list item for the selected consult only
"RTN","ORQQCN1",93,0)
 N ORPT,X0,GMRCOER,SEQ,SEQ0
"RTN","ORQQCN1",94,0)
 Q:+$G(GMRCIEN)=0
"RTN","ORQQCN1",95,0)
 S X0=$G(^GMR(123,GMRCIEN,0)) I 'X0 S Y="-1^Consult not found" Q
"RTN","ORQQCN1",96,0)
 S ORPT=$P(X0,U,2) I '$G(ORPT) S Y="-1^Patient not found" Q
"RTN","ORQQCN1",97,0)
 S GMRCOER=2,SEQ=""
"RTN","ORQQCN1",98,0)
 D OER^GMRCSLM1(ORPT,"","","","",GMRCOER)
"RTN","ORQQCN1",99,0)
 F  S SEQ=$O(^TMP("GMRCR",$J,"CS",SEQ)) Q:SEQ=""!(SEQ?1A.E)  I SEQ>0 D
"RTN","ORQQCN1",100,0)
 .S SEQ0=^TMP("GMRCR",$J,"CS",SEQ,0) I $P(SEQ0,U,1)=GMRCIEN S Y=SEQ0 Q
"RTN","ORQQCN1",101,0)
 K ^TMP("GMRCR",$J)
"RTN","ORQQCN1",102,0)
 Q
"RTN","ORQQCN1",103,0)
PROCIEN(ORY,ORDITM) ; Return pointer to file 123.3 given orderable item
"RTN","ORQQCN1",104,0)
 S ORY=+$P($G(^ORD(101.43,ORDITM,0)),U,2)
"RTN","ORQQCN1",105,0)
 Q
"RTN","ORQQCN1",106,0)
PROCSVCS(ORY,ORDITM) ; Return a list of services for a procedure
"RTN","ORQQCN1",107,0)
 N PROCIEN
"RTN","ORQQCN1",108,0)
 S PROCIEN=$P($G(^ORD(101.43,ORDITM,0)),U,2)
"RTN","ORQQCN1",109,0)
 D GETSVC^GMRCPR0(.ORY,PROCIEN)
"RTN","ORQQCN1",110,0)
 Q
"RTN","ORQQCN1",111,0)
 ;
"RTN","ORQQCN1",112,0)
GETORDER(Y,GMRCO) ; Return OERR order number for consult/procedure
"RTN","ORQQCN1",113,0)
 I +$G(GMRCO)=0 S Y="-1" Q
"RTN","ORQQCN1",114,0)
 S Y=$$ORIFN^GMRCUTL1(GMRCO)
"RTN","ORQQCN1",115,0)
 ;S Y=$P($G(^GMR(123,GMRCO,0)),U,3)
"RTN","ORQQCN1",116,0)
 Q
"RTN","ORQQCN1",117,0)
CANEDIT(Y,GMRCO) ; Return whether consult can be edited and resubmitted
"RTN","ORQQCN1",118,0)
 S Y=$$EDRESOK^GMRCEDT2(GMRCO)
"RTN","ORQQCN1",119,0)
 Q
"RTN","ORQQCN1",120,0)
RESUBMIT(Y,GMRCO,OREDITED) ; Edit/Resubmit a cancelled consult/procedure request
"RTN","ORQQCN1",121,0)
 N ORNODE
"RTN","ORQQCN1",122,0)
 S ORNODE=$NAME(^TMP("GMRCR",$J))
"RTN","ORQQCN1",123,0)
 M @ORNODE=OREDITED
"RTN","ORQQCN1",124,0)
 D FILE^GMRCGUIC(GMRCO,ORNODE)
"RTN","ORQQCN1",125,0)
 S Y=0
"RTN","ORQQCN1",126,0)
 Q
"RTN","ORQQCN1",127,0)
EDITLOAD(Y,GMRCO) ; Load a cancelled consult/procedure for editing
"RTN","ORQQCN1",128,0)
 Q:+$G(GMRCO)=0
"RTN","ORQQCN1",129,0)
 N ORNODE,I
"RTN","ORQQCN1",130,0)
 S ORNODE=$NAME(^TMP("GMRCR",$J)),I=0
"RTN","ORQQCN1",131,0)
 D SEND^GMRCGUIC(GMRCO,ORNODE)
"RTN","ORQQCN1",132,0)
 S Y=ORNODE
"RTN","ORQQCN1",133,0)
 Q
"RTN","ORQQPL1")
0^3^B62658836
"RTN","ORQQPL1",1,0)
ORQQPL1 ; ALB/PDR/REV - PROBLEM LIST FOR CPRS GUI ;03/12/02
"RTN","ORQQPL1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,148**;Dec 17, 1997
"RTN","ORQQPL1",3,0)
 ;
"RTN","ORQQPL1",4,0)
 ;------------------------- GET PROBLEM FROM LEXICON -------------------
"RTN","ORQQPL1",5,0)
 ;
"RTN","ORQQPL1",6,0)
LEXSRCH(LIST,FROM,N,VIEW) ; Get candidate Problems from LEX file
"RTN","ORQQPL1",7,0)
 ; LEXA1 is called somehow as the result of a call to DIC in SEARCH^GMPLX. Quite a
"RTN","ORQQPL1",8,0)
 ; tangled web.  LEXA appears to be the silent version of LEXA1
"RTN","ORQQPL1",9,0)
 ;              NEED TO FIND OUT HOW TO APPLY USER SPECIFIC FILTERS TO LIST
"RTN","ORQQPL1",10,0)
 N LEX,VAL,VAL1,COD,CIEN,SYS,MAX,NAME
"RTN","ORQQPL1",11,0)
 I '$G(N) S N=100
"RTN","ORQQPL1",12,0)
 S:'$L($G(VIEW)) VIEW="PL1"
"RTN","ORQQPL1",13,0)
 D CONFIG^LEXSET("GMPL",VIEW)
"RTN","ORQQPL1",14,0)
 D LOOK^LEXA(FROM,"GMPL",N)
"RTN","ORQQPL1",15,0)
 S S=0
"RTN","ORQQPL1",16,0)
 F  S S=$O(LEX("LIST",S)) Q:S<1  D
"RTN","ORQQPL1",17,0)
 . S VAL1=LEX("LIST",S)
"RTN","ORQQPL1",18,0)
 . S COD="",CIEN="",SYS="",NAME=""
"RTN","ORQQPL1",19,0)
 . I $L(VAL1,"ICD-9-CM ")>1 D
"RTN","ORQQPL1",20,0)
 .. S SYS="ICD-9-CM "
"RTN","ORQQPL1",21,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",22,0)
 .. S CIEN=$$ICDREC(COD)
"RTN","ORQQPL1",23,0)
 .. S NAME=$P(VAL1," (ICD-9-CM")
"RTN","ORQQPL1",24,0)
 . I $L(VAL1,"CPT-4 ")>1 D
"RTN","ORQQPL1",25,0)
 .. S SYS="CPT-4 "
"RTN","ORQQPL1",26,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",27,0)
 .. S CIEN=$$CPTREC(COD)
"RTN","ORQQPL1",28,0)
 .. S NAME=$P(VAL1," (CPT-4")
"RTN","ORQQPL1",29,0)
 . I $L(VAL1,"DSM-IV ")>1 D
"RTN","ORQQPL1",30,0)
 .. S SYS="DSM-IV "
"RTN","ORQQPL1",31,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",32,0)
 .. S CIEN=$$ICDREC($$ICDONE^LEXU($P(VAL1,U,1)))
"RTN","ORQQPL1",33,0)
 .. S NAME=$P(VAL1," (DSM-IV")
"RTN","ORQQPL1",34,0)
 .. ;
"RTN","ORQQPL1",35,0)
 . I $L(VAL1,"(TITLE 38 ")>1 D
"RTN","ORQQPL1",36,0)
 .. S SYS="TITLE 38 "
"RTN","ORQQPL1",37,0)
 .. S COD=$P($P(VAL1,SYS,2),")")
"RTN","ORQQPL1",38,0)
 .. S CIEN=$$ICDREC($$ICDONE^LEXU($P(VAL1,U,1)))
"RTN","ORQQPL1",39,0)
 .. S NAME=$P(VAL1,"(TITLE 38 ")
"RTN","ORQQPL1",40,0)
 .. ;
"RTN","ORQQPL1",41,0)
 . I $L(NAME)=0 S NAME=$P($P(VAL1," (")," *")
"RTN","ORQQPL1",42,0)
 . S VAL=NAME_U_COD_U_CIEN_U_SYS ; ien^.01^icd^icdifn^system
"RTN","ORQQPL1",43,0)
 . S LIST(S)=VAL
"RTN","ORQQPL1",44,0)
 . S MAX=S
"RTN","ORQQPL1",45,0)
 I $G(MAX)'="" S LIST(MAX+1)=$G(LEX("MAT")) ; RETURN  number OF MATCHES found
"RTN","ORQQPL1",46,0)
 Q
"RTN","ORQQPL1",47,0)
 ;
"RTN","ORQQPL1",48,0)
ICDREC(COD) ; ICD INTERNAL REC NUMBER
"RTN","ORQQPL1",49,0)
 N CODIEN
"RTN","ORQQPL1",50,0)
 I COD="" Q ""
"RTN","ORQQPL1",51,0)
 S COD=$P($P(COD,U),"/")
"RTN","ORQQPL1",52,0)
 S CODIEN=+$O(^ICD9("AB",COD_" ",0))
"RTN","ORQQPL1",53,0)
 S:CODIEN'>0 CODIEN=+$O(^ICD9("AB",COD_"0 ",0))
"RTN","ORQQPL1",54,0)
 Q CODIEN
"RTN","ORQQPL1",55,0)
 ;Q $O(^ICD9("BA",COD,""))
"RTN","ORQQPL1",56,0)
 ;
"RTN","ORQQPL1",57,0)
CPTREC(COD) ; CPT INTERNAL REC NUMBER
"RTN","ORQQPL1",58,0)
 I COD="" Q ""
"RTN","ORQQPL1",59,0)
 Q $O(^ICPT("BA",COD,""))
"RTN","ORQQPL1",60,0)
 ;
"RTN","ORQQPL1",61,0)
 ;---------------------- LOAD VALUES FOR EDITING ----------------------
"RTN","ORQQPL1",62,0)
 ;
"RTN","ORQQPL1",63,0)
EDLOAD(RETURN,DA,GMPROV,GMPVAMC) ; LOAD  EDIT ARRAYS
"RTN","ORQQPL1",64,0)
 ; DA=problem IFN
"RTN","ORQQPL1",65,0)
 N I,GMPFLD,GMPORIG,GMPL
"RTN","ORQQPL1",66,0)
 D GETFLDS^GMPLEDT3(DA)
"RTN","ORQQPL1",67,0)
 S I=0
"RTN","ORQQPL1",68,0)
 D LOADFLDS(.RETURN,"GMPFLD","NEW",.I)
"RTN","ORQQPL1",69,0)
 D LOADFLDS(.RETURN,"GMPORIG","ORG",.I)
"RTN","ORQQPL1",70,0)
 K GMPFLD,GMPORIG,GMPL  ; should not have to do this
"RTN","ORQQPL1",71,0)
 Q
"RTN","ORQQPL1",72,0)
 ;
"RTN","ORQQPL1",73,0)
 ;
"RTN","ORQQPL1",74,0)
LOADFLDS(RETURN,NAM,TYP,I) ; LOAD FIELDS FOR TYPE OF ARRAY
"RTN","ORQQPL1",75,0)
 N S,V,CVP,PN,PID
"RTN","ORQQPL1",76,0)
 S S="",V=$C(254)
"RTN","ORQQPL1",77,0)
 F  S S=$O(@NAM@(S)) Q:S=10  D
"RTN","ORQQPL1",78,0)
 . S RETURN(I)=TYP_V_S_V_@NAM@(S)
"RTN","ORQQPL1",79,0)
 . S I=I+1
"RTN","ORQQPL1",80,0)
 S S=""
"RTN","ORQQPL1",81,0)
 F  S S=$O(@NAM@(10,S)) Q:S=""  D
"RTN","ORQQPL1",82,0)
 . S CVP=@NAM@(10,S)
"RTN","ORQQPL1",83,0)
 . S PN="" ; provider name
"RTN","ORQQPL1",84,0)
 . S PID=$P(CVP,U,6) ; provider id
"RTN","ORQQPL1",85,0)
 . I PID'=""  S PN=$$GET1^DIQ(200,PID,.01) ; get provider name
"RTN","ORQQPL1",86,0)
 . S RETURN(I)=TYP_V_"10,"_S_V_CVP_U_PN
"RTN","ORQQPL1",87,0)
 . S I=I+1
"RTN","ORQQPL1",88,0)
 Q
"RTN","ORQQPL1",89,0)
 ;
"RTN","ORQQPL1",90,0)
 ; ---------------- SAVE EDITED VALUES ---------------------
"RTN","ORQQPL1",91,0)
 ;
"RTN","ORQQPL1",92,0)
EDSAVE(RETURN,GMPIFN,GMPROV,GMPVAMC,UT,EDARRAY) ; SAVE EDITED RES
"RTN","ORQQPL1",93,0)
 ; RETURN - boolean, 1 success, 0 failure
"RTN","ORQQPL1",94,0)
 ; EDARRAY - array used for indirect sets of GMPORIG() and GMPFLDS()
"RTN","ORQQPL1",95,0)
 ;
"RTN","ORQQPL1",96,0)
 ; Attempt to get lock on new comments first. Don't file anything unless can file comments.
"RTN","ORQQPL1",97,0)
 ; Getting lock here ensures ability of subsequent calls to get lock. Should have no trouble
"RTN","ORQQPL1",98,0)
 ; getting lock anyway.
"RTN","ORQQPL1",99,0)
 ;
"RTN","ORQQPL1",100,0)
 N GMPFLD,GMPORIG,S,GMPLUSER
"RTN","ORQQPL1",101,0)
 S RETURN=1 ; initialize for success
"RTN","ORQQPL1",102,0)
 I UT S GMPLUSER=1
"RTN","ORQQPL1",103,0)
 ;
"RTN","ORQQPL1",104,0)
 ;S GMPLUSER=1
"RTN","ORQQPL1",105,0)
 S S=""
"RTN","ORQQPL1",106,0)
 F  S S=$O(EDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",107,0)
 . S @EDARRAY(S)
"RTN","ORQQPL1",108,0)
 I $D(GMPFLD(10,"NEW"))>9 D  I 'RETURN Q  ; Bail Out if no lock
"RTN","ORQQPL1",109,0)
 . L +^AUPNPROB(GMPIFN,11):10  ; given bogus nature of this lock, should be able to get
"RTN","ORQQPL1",110,0)
 . I '$T S RETURN=0
"RTN","ORQQPL1",111,0)
 ;
"RTN","ORQQPL1",112,0)
 D EN^GMPLSAVE  ; save the data
"RTN","ORQQPL1",113,0)
 K GMPFLD,GMPORIG
"RTN","ORQQPL1",114,0)
 ;
"RTN","ORQQPL1",115,0)
 L -^AUPNPROB(GMPIFN,11)  ; free this instance of lock (in case it was set)
"RTN","ORQQPL1",116,0)
 S RETURN=1
"RTN","ORQQPL1",117,0)
 Q
"RTN","ORQQPL1",118,0)
 ;
"RTN","ORQQPL1",119,0)
 ;----------------------- UPDATE A PROBLEM RECORD ---------------
"RTN","ORQQPL1",120,0)
 ;
"RTN","ORQQPL1",121,0)
UPDATE(ORRETURN,UPDARRAY) ; UPDATE A PROBLEM RECORD
"RTN","ORQQPL1",122,0)
 ; Does essentially same job as EDSAVE above, however does not handle edits to comments
"RTN","ORQQPL1",123,0)
 ; or addition of multiple comments. 
"RTN","ORQQPL1",124,0)
 ; Use initially just for status updates.
"RTN","ORQQPL1",125,0)
 ;
"RTN","ORQQPL1",126,0)
 N S,GMPL,GMPORIG ; last 2 vars created in nested call
"RTN","ORQQPL1",127,0)
 S S=""
"RTN","ORQQPL1",128,0)
 F  S S=$O(UPDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",129,0)
 . S @UPDARRAY(S)
"RTN","ORQQPL1",130,0)
 D UPDATE^GMPLUTL(.ORARRAY,.ORRETURN)
"RTN","ORQQPL1",131,0)
 K ORARRAY
"RTN","ORQQPL1",132,0)
 ; broker wont pick up root node RETURN
"RTN","ORQQPL1",133,0)
 S ORRETURN(1)=ORRETURN(0) ; error text
"RTN","ORQQPL1",134,0)
 S ORRETURN(0)=ORRETURN ; gmpdfn
"RTN","ORQQPL1",135,0)
 I ORRETURN(0)=""  S ORRETURN=1 ; insurance ? need
"RTN","ORQQPL1",136,0)
 Q
"RTN","ORQQPL1",137,0)
 ;
"RTN","ORQQPL1",138,0)
 ;---------------------------------------------------------- SAVE NEW PROBLEM RECORD -------------
"RTN","ORQQPL1",139,0)
 ;
"RTN","ORQQPL1",140,0)
ADDSAVE(RETURN,GMPDFN,GMPROV,GMPVAMC,ADDARRAY) ; SAVE NEW RECORD
"RTN","ORQQPL1",141,0)
 ; RETURN - Problem IFN if success, 0 otherwise
"RTN","ORQQPL1",142,0)
 ; ADDARRAY - array used for indirect sets of  GMPFLDS()
"RTN","ORQQPL1",143,0)
 ; Get lock first. If can't get it report back to GUI user. Getting lock here should ensures
"RTN","ORQQPL1",144,0)
 ; ability to get it in standard processing, and pre-empt the possibility of messages to screen
"RTN","ORQQPL1",145,0)
 ; Unfortunately, if can't get new note lock (which seems remote), the notes are simply dropped
"RTN","ORQQPL1",146,0)
 ;
"RTN","ORQQPL1",147,0)
 N DA,GMPFLD,GMPORIG,S
"RTN","ORQQPL1",148,0)
 S RETURN=0 ;
"RTN","ORQQPL1",149,0)
 L +^AUPNPROB(0):10
"RTN","ORQQPL1",150,0)
 Q:'$T  ; bail out if no lock
"RTN","ORQQPL1",151,0)
 ;
"RTN","ORQQPL1",152,0)
 S S=""
"RTN","ORQQPL1",153,0)
 F  S S=$O(ADDARRAY(S)) Q:S=""  D
"RTN","ORQQPL1",154,0)
 . S @ADDARRAY(S)
"RTN","ORQQPL1",155,0)
 ;
"RTN","ORQQPL1",156,0)
 D NEW^GMPLSAVE
"RTN","ORQQPL1",157,0)
 ;
"RTN","ORQQPL1",158,0)
 S RETURN=DA
"RTN","ORQQPL1",159,0)
 ;
"RTN","ORQQPL1",160,0)
 L -^AUPNPROB(0)
"RTN","ORQQPL1",161,0)
 S RETURN=1
"RTN","ORQQPL1",162,0)
 Q
"RTN","ORQQPL1",163,0)
 ;
"RTN","ORQQPL1",164,0)
 ;------------------------- INITIALIZE PROBLEM LIST FOR NEW USER -----------------
"RTN","ORQQPL1",165,0)
 ;
"RTN","ORQQPL1",166,0)
INITUSER(RETURN,ORDUZ) ; INITIALIZE FOR NEW USER
"RTN","ORQQPL1",167,0)
 ; taken from INIT^GMPLMGR
"RTN","ORQQPL1",168,0)
 ; leave GMPLUSER on symbol table - is evaluated in EDITSAVE
"RTN","ORQQPL1",169,0)
 ; 
"RTN","ORQQPL1",170,0)
 N X,PV,CTXT,GMPLPROV
"RTN","ORQQPL1",171,0)
 S GMPLUSER=$$CLINUSER(DUZ)
"RTN","ORQQPL1",172,0)
 S CTXT=$$GET^XPAR("ALL","ORCH CONTEXT PROBLEMS",1)
"RTN","ORQQPL1",173,0)
 S X=$G(^GMPL(125.99,1,0)) ; IN1+6^GMPLMGR
"RTN","ORQQPL1",174,0)
 S RETURN(0)=GMPLUSER ;  problem list user, or other user
"RTN","ORQQPL1",175,0)
 S RETURN(1)=$$VIEW^GMPLX1(DUZ) ; GMPLVIEW("VIEW") - users default view
"RTN","ORQQPL1",176,0)
 S RETURN(2)=+$P(X,U,2) ; verify transcribed problems
"RTN","ORQQPL1",177,0)
 S RETURN(3)=+$P(X,U,3) ; prompt for chart copy
"RTN","ORQQPL1",178,0)
 S RETURN(4)=+$P(X,U,4) ; use lexicon
"RTN","ORQQPL1",179,0)
 S RETURN(5)=$S($P(X,U,5)="R":1,1:0) ; chron or reverse chron listing
"RTN","ORQQPL1",180,0)
 S RETURN(6)=$S($P($G(CTXT),";",3)'="":$P($G(CTXT),";",3),1:"A")
"RTN","ORQQPL1",181,0)
 S GMPLPROV=$P($G(CTXT),";",5)
"RTN","ORQQPL1",182,0)
 I +GMPLPROV>0,$D(^VA(200,GMPLPROV)) D
"RTN","ORQQPL1",183,0)
 . S RETURN(7)=GMPLPROV_U_$P(^VA(200,GMPLPROV,0),U)
"RTN","ORQQPL1",184,0)
 E  S RETURN(7)="0^All"
"RTN","ORQQPL1",185,0)
 S RETURN(8)=$$SERVICE^GMPLX1(DUZ) ; user's service/section
"RTN","ORQQPL1",186,0)
 ; Guessing from what I see in the data that $$VIEW^GMPLX1 actually returns a composite
"RTN","ORQQPL1",187,0)
 ; of default view (in/out patient)/(c1/c2... if out patient i.e. GMPLVIEW("CLIN")) or
"RTN","ORQQPL1",188,0)
 ;                                                      /(s1/s2... if in patient i.e. GMPLVIEW("SERV"))
"RTN","ORQQPL1",189,0)
 ; Going with this assumption for now:
"RTN","ORQQPL1",190,0)
 I $L(RETURN(1),"/")>1 D
"RTN","ORQQPL1",191,0)
 . S PV=RETURN(1)
"RTN","ORQQPL1",192,0)
 . S RETURN(1)=$P(PV,"/")
"RTN","ORQQPL1",193,0)
 . I RETURN(1)="C" S GMPLVIEW("CLIN")=$P(PV,"/",2,99)
"RTN","ORQQPL1",194,0)
 . I RETURN(1)="S" S GMPLVIEW("SERV")=$P(PV,"/",2,99)
"RTN","ORQQPL1",195,0)
 S RETURN(9)=$G(GMPLVIEW("SERV")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",196,0)
 S RETURN(10)=$G(GMPLVIEW("CLIN")) ; ??? Where from - see tech doc
"RTN","ORQQPL1",197,0)
 S RETURN(11)=""
"RTN","ORQQPL1",198,0)
 S RETURN(12)=+$P($G(CTXT),";",4)    ; should comments display?
"RTN","ORQQPL1",199,0)
 K GMPLVIEW
"RTN","ORQQPL1",200,0)
 Q
"RTN","ORQQPL1",201,0)
 ;
"RTN","ORQQPL1",202,0)
CLINUSER(ORDUZ) ;is this a clinical user?
"RTN","ORQQPL1",203,0)
 N ORUSER
"RTN","ORQQPL1",204,0)
 S ORUSER=0
"RTN","ORQQPL1",205,0)
 I $D(^XUSEC("ORES",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",206,0)
 I $D(^XUSEC("ORELSE",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",207,0)
 I $D(^XUSEC("PROVIDER",ORDUZ)) S ORUSER=1
"RTN","ORQQPL1",208,0)
 Q ORUSER
"RTN","ORQQPL1",209,0)
 ;
"RTN","ORQQPL1",210,0)
 ;---------------- INITIALIZE FOR NEW PATIENT ----------------
"RTN","ORQQPL1",211,0)
 ;
"RTN","ORQQPL1",212,0)
INITPT(RETURN,DFN) ; GET PATIENT PARAMETERS
"RTN","ORQQPL1",213,0)
 Q:+$G(DFN)=0
"RTN","ORQQPL1",214,0)
 N GMPSC,GMPAGTOR,GMPION,GMPGULF,GMPHNC,GMPMST
"RTN","ORQQPL1",215,0)
 ;
"RTN","ORQQPL1",216,0)
 S RETURN(0)=DUZ(2) ; facility #
"RTN","ORQQPL1",217,0)
 D DEM^VADPT ; get death indicator
"RTN","ORQQPL1",218,0)
 S RETURN(1)=$G(VADM(6)) ; death indicator
"RTN","ORQQPL1",219,0)
 D VADPT^GMPLX1(DFN) ; get eligibilities
"RTN","ORQQPL1",220,0)
 S RETURN(2)=$P(GMPSC,U) ; service connected
"RTN","ORQQPL1",221,0)
 S RETURN(3)=$G(GMPAGTOR) ; agent orange exposure
"RTN","ORQQPL1",222,0)
 S RETURN(4)=$G(GMPION) ; ionizing radiation exposure
"RTN","ORQQPL1",223,0)
 S RETURN(5)=$G(GMPGULF) ; gulf war exposure
"RTN","ORQQPL1",224,0)
 S RETURN(6)=VA("BID") ; need this to reconstitute GMPDFN on return
"RTN","ORQQPL1",225,0)
 S RETURN(7)=$G(GMPHNC) ; head/neck cancer
"RTN","ORQQPL1",226,0)
 S RETURN(8)=$G(GMPMST) ; MST
"RTN","ORQQPL1",227,0)
 Q
"RTN","ORQQPL1",228,0)
 ;
"RTN","ORQQPL1",229,0)
 ;---------------------------------------------------- GET PROVIDER LIST ---------------------------------
"RTN","ORQQPL1",230,0)
 ;
"RTN","ORQQPL1",231,0)
PROVSRCH(LST,FLAG,N,FROM,PART) ; Get candidate Rroviders from person file
"RTN","ORQQPL1",232,0)
 N LV,NS,RV,IEN
"RTN","ORQQPL1",233,0)
 S RV=$NAME(LV("DILIST","ID"))
"RTN","ORQQPL1",234,0)
 IF +$G(N)=0 S N=50
"RTN","ORQQPL1",235,0)
 S FLAG=$G(FLAG),N=$G(N),FROM=$G(FROM),PART=$G(PART)
"RTN","ORQQPL1",236,0)
 D LIST^DIC(200,"",".01;1",FLAG,N,FROM,PART,"","","","LV")
"RTN","ORQQPL1",237,0)
 S NS=""
"RTN","ORQQPL1",238,0)
 F  S NS=$O(LV("DILIST",1,NS)) Q:NS=""  D
"RTN","ORQQPL1",239,0)
 . S IEN=""
"RTN","ORQQPL1",240,0)
 . S IEN=$O(^VA(200,"B",@RV@(NS,.01),IEN)) ; compliments of PROV^ORQPTQ
"RTN","ORQQPL1",241,0)
 . S LST(NS)=IEN_U_@RV@(NS,.01)  ; initials_U_@RV@(NS,1)
"RTN","ORQQPL1",242,0)
 Q
"RTN","ORQQPL1",243,0)
 ;
"RTN","ORQQPL1",244,0)
 ;---------------------------------------------------- GET LOCATION LIST ---------------------------------
"RTN","ORQQPL1",245,0)
 ;
"RTN","ORQQPL1",246,0)
CLINSRCH(Y,X) ; Get LIST OF CLINICS
"RTN","ORQQPL1",247,0)
 ; Note: This comes from CLIN^ORQPTQ2, where it was commented out in place of 
"RTN","ORQQPL1",248,0)
 ; a call to ^XPAR. I would have just used CLIN^ORQPTQ2, but it didn't work - at
"RTN","ORQQPL1",249,0)
 ; least on SLC OEX directory.
"RTN","ORQQPL1",250,0)
 ; X has no purpose other than to satisfy apparent rpc and tcallv requirement for args
"RTN","ORQQPL1",251,0)
 N I,NAME,IEN
"RTN","ORQQPL1",252,0)
 S I=1,IEN=0,NAME=""
"RTN","ORQQPL1",253,0)
 ;access to SC global granted under DBIA #518:
"RTN","ORQQPL1",254,0)
 F  S NAME=$O(^SC("B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","ORQQPL1",255,0)
 . I $P(^SC(IEN,0),"^",3)="C" S Y(I)=IEN_"^"_NAME,I=I+1
"RTN","ORQQPL1",256,0)
 Q
"RTN","ORQQPL1",257,0)
 ;
"RTN","ORQQPL1",258,0)
 ;---------------------------------------------------- GET SERVICE LIST ---------------------------------
"RTN","ORQQPL1",259,0)
 ;
"RTN","ORQQPL1",260,0)
SRVCSRCH(Y,FROM,DIR,ALL) ; GET LIST OF SERVICES
"RTN","ORQQPL1",261,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORQQPL1",262,0)
 F  Q:I=CNT  S FROM=$O(^DIC(49,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORQQPL1",263,0)
 . S IEN=$O(^DIC(49,"B",FROM,0)) I '$G(ALL),$P(^DIC(49,IEN,0),U,9)'="C" Q
"RTN","ORQQPL1",264,0)
 . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORQQPL1",265,0)
 Q
"RTN","ORQQPL1",266,0)
 ;
"RTN","ORQQPL1",267,0)
DUP(Y,DFN,TERM,TEXT) ;Check for duplicate problem
"RTN","ORQQPL1",268,0)
 S Y=$$DUPL^GMPLX(DFN,TERM,TEXT) Q:+Y=0
"RTN","ORQQPL1",269,0)
 I $P(^AUPNPROB(Y,1),U,2)="H" S Y=0 Q
"RTN","ORQQPL1",270,0)
 S Y=Y_U_$P(^AUPNPROB(Y,0),U,12)
"RTN","ORQQPL1",271,0)
 Q
"RTN","ORQQPL3")
0^4^B44640717
"RTN","ORQQPL3",1,0)
ORQQPL3 ; ALB/PDR/REV ; Problem List RPC's ; 8-OCT-1998 09:08:49.29
"RTN","ORQQPL3",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,148**;Dec 17, 1997
"RTN","ORQQPL3",3,0)
 ;
"RTN","ORQQPL3",4,0)
 ;---------------- LIST PATIENT PROBLEMS ------------------------
"RTN","ORQQPL3",5,0)
 ;
"RTN","ORQQPL3",6,0)
PROBL(ROOT,DFN,CONTEXT)        ;  GET LIST OF PATIENT PROBLEMS
"RTN","ORQQPL3",7,0)
 N DIWL,DIWR,DIWF
"RTN","ORQQPL3",8,0)
 N ST,ORI,ORX
"RTN","ORQQPL3",9,0)
 S (LCNT,NUM)=0
"RTN","ORQQPL3",10,0)
 S DIWL=1,DIWR=48,DIWF="C48"
"RTN","ORQQPL3",11,0)
 S CONTEXT=";;"_$G(CONTEXT)
"RTN","ORQQPL3",12,0)
 I CONTEXT=";;" S CONTEXT=";;A"
"RTN","ORQQPL3",13,0)
 S ST=$P(CONTEXT,";",3)
"RTN","ORQQPL3",14,0)
 ;
"RTN","ORQQPL3",15,0)
 I ST="R" D DELLIST(.ROOT,+DFN) ; show deleted only
"RTN","ORQQPL3",16,0)
 I ST'="R"  D LIST(.ROOT,+DFN,ST) ; show others - don't trust ELSE here
"RTN","ORQQPL3",17,0)
 ;
"RTN","ORQQPL3",18,0)
 I ROOT(0)<1 D
"RTN","ORQQPL3",19,0)
 . S LCNT=1
"RTN","ORQQPL3",20,0)
 . S ROOT(1)="     "_$$PAD^ORCHTAB("No data available.",49)_"|"
"RTN","ORQQPL3",21,0)
 Q
"RTN","ORQQPL3",22,0)
 ;
"RTN","ORQQPL3",23,0)
 ;
"RTN","ORQQPL3",24,0)
LIST(GMPL,GMPDFN,GMPSTAT)       ; -- Returns list of problems for patient GMPDFN
"RTN","ORQQPL3",25,0)
 ;    in GMPL(#)=ifn^status^description^ICD^onset^last modified^SC^SpExp^Condition^Loc^
"RTN","ORQQPL3",26,0)
 ;                          loc.type^prov^service
"RTN","ORQQPL3",27,0)
 ;     & GMPL(0)=number of problems returned
"RTN","ORQQPL3",28,0)
 ; This is virtually same as LIST^GMPLUTL2 except that it appends the 
"RTN","ORQQPL3",29,0)
 ; condition - T)ranscribed or P)ermanent,location,loc type,provider, service.
"RTN","ORQQPL3",30,0)
 ;
"RTN","ORQQPL3",31,0)
 N I,IFN,CNT,GMPL0,GMPL1,SP,ST,NUM,ONSET,ICD,LASTMOD,PRIO,DTREC
"RTN","ORQQPL3",32,0)
 N SC,ORLIST,ORVIEW,GMPARAM,ORTOTAL,LIN,LOC,LT,PROV,SERV,HASCMT
"RTN","ORQQPL3",33,0)
 N SCCOND,AO,IR,ENV,HNC,MST
"RTN","ORQQPL3",34,0)
 Q:$G(GMPDFN)'>0
"RTN","ORQQPL3",35,0)
 S CNT=0,SP=""
"RTN","ORQQPL3",36,0)
 S GMPARAM("QUIET")=1
"RTN","ORQQPL3",37,0)
 S GMPARAM("REV")=$P($G(^GMPL(125.99,1,0)),U,5)="R"
"RTN","ORQQPL3",38,0)
 S ORVIEW("ACT")=GMPSTAT
"RTN","ORQQPL3",39,0)
 S ORVIEW("PROV")=0
"RTN","ORQQPL3",40,0)
 S ORVIEW("VIEW")=""
"RTN","ORQQPL3",41,0)
 ;
"RTN","ORQQPL3",42,0)
 D GETPLIST^GMPLMGR1(.ORLIST,.ORTOTAL,.ORVIEW)
"RTN","ORQQPL3",43,0)
 ;
"RTN","ORQQPL3",44,0)
 F NUM=0:0 S NUM=$O(ORLIST(NUM)) Q:NUM'>0  D
"RTN","ORQQPL3",45,0)
 . S IFN=+ORLIST(NUM) Q:IFN'>0
"RTN","ORQQPL3",46,0)
 . S GMPL0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",47,0)
 . S GMPL1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",48,0)
 . S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",49,0)
 . S CNT=CNT+1
"RTN","ORQQPL3",50,0)
 . S ICD=$P($G(^ICD9(+GMPL0,0)),U)
"RTN","ORQQPL3",51,0)
 . S LASTMOD=$P(GMPL0,U,3)
"RTN","ORQQPL3",52,0)
 . S ST=$P(GMPL0,U,12)
"RTN","ORQQPL3",53,0)
 . S ONSET=$P(GMPL0,U,13)
"RTN","ORQQPL3",54,0)
 . S SC=$S(+$P(GMPL1,U,10):"SC",$P(GMPL1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",55,0)
 . S AO=$S(+$P(GMPL1,U,11):"/AO",1:"")
"RTN","ORQQPL3",56,0)
 . S IR=$S(+$P(GMPL1,U,12):"/IR",1:"")
"RTN","ORQQPL3",57,0)
 . S ENV=$S(+$P(GMPL1,U,13):"/EC",1:"")
"RTN","ORQQPL3",58,0)
 . S HNC=$S(+$P(GMPL1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",59,0)
 . S MST=$S(+$P(GMPL1,U,16):"/MST",1:"")
"RTN","ORQQPL3",60,0)
 . S SCCOND=SC_AO_IR_ENV_HNC_MST
"RTN","ORQQPL3",61,0)
 . S LOC=$P(GMPL1,U,8)
"RTN","ORQQPL3",62,0)
 . S DTREC=$P(GMPL1,U,9)
"RTN","ORQQPL3",63,0)
 . S LT=""
"RTN","ORQQPL3",64,0)
 . I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3),LOC=LOC_";"_$P($G(^SC(LOC,0)),U,1)
"RTN","ORQQPL3",65,0)
 . S PROV=$P(GMPL1,U,5) ; responsible provider
"RTN","ORQQPL3",66,0)
 . I PROV'="" S PROV=PROV_";"_$P($G(^VA(200,PROV,0)),U,1)
"RTN","ORQQPL3",67,0)
 . S SERV=$P(GMPL1,U,6)
"RTN","ORQQPL3",68,0)
 . I SERV=0 S SERV="" ; not sure how it gets set to 0, but need consistency in GUI
"RTN","ORQQPL3",69,0)
 . I SERV'="" S SERV=SERV_";"_$P($G(^DIC(49,SERV,0)),U,1)
"RTN","ORQQPL3",70,0)
 . S SP=""
"RTN","ORQQPL3",71,0)
 . F I=11,12,13 S:$P(GMPL1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",72,0)
 . S PRIO=$P(GMPL1,U,14)
"RTN","ORQQPL3",73,0)
 . S LIN=IFN_U_ST_U_$$PROBTEXT^GMPLX(IFN)_U_ICD_U_ONSET
"RTN","ORQQPL3",74,0)
 . S LIN=LIN_U_LASTMOD_U_SC_U_SP_U_$P(GMPL1,U,2)
"RTN","ORQQPL3",75,0)
 . S LIN=LIN_U_LOC_U_LT_U_PROV_U_SERV_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND
"RTN","ORQQPL3",76,0)
 . S GMPL(CNT)=LIN
"RTN","ORQQPL3",77,0)
 S GMPL(0)=CNT
"RTN","ORQQPL3",78,0)
 Q
"RTN","ORQQPL3",79,0)
 ;
"RTN","ORQQPL3",80,0)
 ;
"RTN","ORQQPL3",81,0)
 ;------------------------------------- GET LIST OF DELETED PROBLEMS -----------------------------
"RTN","ORQQPL3",82,0)
 ;
"RTN","ORQQPL3",83,0)
DELLIST(RETURN,GMPDFN) ; GET LIST OF DELETED PROBLEMS
"RTN","ORQQPL3",84,0)
 ; see GETPLIST^GMPLMGR1 and LIST^GMPUTL2
"RTN","ORQQPL3",85,0)
 N S,IFN,I,L0,L1,ST,TXT,ICD,ONSET,MOD,SC,SP,LOC,LT,PROV,SERV,PRIO,HASCMT,DTREC
"RTN","ORQQPL3",86,0)
 N SCCOND,AO,IR,ENV,HNC,MST
"RTN","ORQQPL3",87,0)
 S I=0,S=""
"RTN","ORQQPL3",88,0)
 F  S S=$O(^AUPNPROB("ACTIVE",GMPDFN,S)) Q:S=""  D
"RTN","ORQQPL3",89,0)
 . S IFN=""
"RTN","ORQQPL3",90,0)
 . F  S IFN=$O(^AUPNPROB("ACTIVE",+GMPDFN,S,IFN)) Q:IFN=""  D
"RTN","ORQQPL3",91,0)
 .. I $P($G(^AUPNPROB(IFN,1)),U,2)="H" D
"RTN","ORQQPL3",92,0)
 ... S L0=$G(^AUPNPROB(IFN,0))
"RTN","ORQQPL3",93,0)
 ... Q:L0=""
"RTN","ORQQPL3",94,0)
 ... S L1=$G(^AUPNPROB(IFN,1))
"RTN","ORQQPL3",95,0)
 ... S ST=$P(L0,U,12)
"RTN","ORQQPL3",96,0)
 ... S TXT=$$PROBTEXT^GMPLX(IFN)
"RTN","ORQQPL3",97,0)
 ... S ICD=$P($G(^ICD9(+L0,0)),U)
"RTN","ORQQPL3",98,0)
 ... S ONSET=$P(L0,U,13)
"RTN","ORQQPL3",99,0)
 ... S MOD=$P(L0,U,3)
"RTN","ORQQPL3",100,0)
 ... S SC=$S(+$P(L1,U,10):"SC",$P(L1,U,10)=0:"NSC",1:"")
"RTN","ORQQPL3",101,0)
 ... S AO=$S(+$P(L1,U,11):"/AO",1:"")
"RTN","ORQQPL3",102,0)
 ... S IR=$S(+$P(L1,U,12):"/IR",1:"")
"RTN","ORQQPL3",103,0)
 ... S ENV=$S(+$P(L1,U,13):"/EC",1:"")
"RTN","ORQQPL3",104,0)
 ... S HNC=$S(+$P(L1,U,15):"/HNC",1:"")
"RTN","ORQQPL3",105,0)
 ... S MST=$S(+$P(L1,U,16):"/MST",1:"")
"RTN","ORQQPL3",106,0)
 ... S SCCOND=SC_AO_IR_ENV_HNC_MST
"RTN","ORQQPL3",107,0)
 ... S SP=$$GETSP
"RTN","ORQQPL3",108,0)
 ... S LOC=$P(L1,U,8)
"RTN","ORQQPL3",109,0)
 ... S LT=""
"RTN","ORQQPL3",110,0)
 ... I LOC'="" S LT=$P($G(^SC(LOC,0)),"^",3)
"RTN","ORQQPL3",111,0)
 ... S PROV=$P(L1,U,5) ; responsible provider
"RTN","ORQQPL3",112,0)
 ... S SERV=$P(L1,U,6)
"RTN","ORQQPL3",113,0)
 ... S PRIO=$P(L1,U,14)
"RTN","ORQQPL3",114,0)
 ... S HASCMT=($D(^AUPNPROB(IFN,11,0))>0)
"RTN","ORQQPL3",115,0)
 ... S DTREC=$P(L1,U,9)
"RTN","ORQQPL3",116,0)
 ... S I=I+1
"RTN","ORQQPL3",117,0)
 ... S RETURN(I)=IFN_U_ST_U_TXT_U_ICD_U_ONSET
"RTN","ORQQPL3",118,0)
 ... S RETURN(I)=RETURN(I)_U_MOD_U_SC_U_SP_U_$P(L1,U,2)
"RTN","ORQQPL3",119,0)
 ... S RETURN(I)=RETURN(I)_U_LOC_U_LT_U_PROV_U_SERV
"RTN","ORQQPL3",120,0)
 ... S RETURN(I)=RETURN(I)_U_PRIO_U_HASCMT_U_DTREC_U_SCCOND
"RTN","ORQQPL3",121,0)
 S RETURN(0)=I
"RTN","ORQQPL3",122,0)
 Q
"RTN","ORQQPL3",123,0)
 ;
"RTN","ORQQPL3",124,0)
GETSP() ; GET EXPOSURES
"RTN","ORQQPL3",125,0)
 N I
"RTN","ORQQPL3",126,0)
 S SP=""
"RTN","ORQQPL3",127,0)
 F I=11,12,13 S:$P(L1,U,I) SP=SP_$S(I=11:"A",I=12:"I",1:"P")
"RTN","ORQQPL3",128,0)
 Q SP
"RTN","ORQQPL3",129,0)
 ;
"RTN","ORQQPL3",130,0)
 ; adapted from ^GMPLBLD3 ;9/96
"RTN","ORQQPL3",131,0)
 ;
"RTN","ORQQPL3",132,0)
 ; ----------------------- GET USER PROBLEM CATEGORIES --------------
"RTN","ORQQPL3",133,0)
 ;
"RTN","ORQQPL3",134,0)
CAT(TMP,ORDUZ,CLIN) ; Get user category list
"RTN","ORQQPL3",135,0)
 N GSEQ,GCNT,GROUP,HDR,IFN,LCNT,ITEM,TG,GMPLSLST
"RTN","ORQQPL3",136,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",137,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",138,0)
 K @TG
"RTN","ORQQPL3",139,0)
 S (GSEQ,GCNT,LCNT)=0
"RTN","ORQQPL3",140,0)
 ;
"RTN","ORQQPL3",141,0)
 S GMPLSLST=$$GETUSLST(DUZ,CLIN)  ; get approp list for user
"RTN","ORQQPL3",142,0)
 ; Build multiple of category\problems
"RTN","ORQQPL3",143,0)
 ; Iterate categories
"RTN","ORQQPL3",144,0)
 F  S GSEQ=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ)) Q:GSEQ'>0  D
"RTN","ORQQPL3",145,0)
 . S IFN=$O(^GMPL(125.1,"C",+GMPLSLST,GSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",146,0)
 . S ITEM=$G(^GMPL(125.1,IFN,0))
"RTN","ORQQPL3",147,0)
 . S GROUP=+$P(ITEM,U,3)
"RTN","ORQQPL3",148,0)
 . S HDR=GROUP_U_$P(ITEM,U,4,5)
"RTN","ORQQPL3",149,0)
 . S GCNT=GCNT+1
"RTN","ORQQPL3",150,0)
 . S @TG@(GCNT)=HDR ; put category into temp global
"RTN","ORQQPL3",151,0)
 Q
"RTN","ORQQPL3",152,0)
 ;
"RTN","ORQQPL3",153,0)
GETUSLST(ORDUZ,CLIN) ; GET AN APPROPRIATE CATEGORY LIST FOR THE USER
"RTN","ORQQPL3",154,0)
 N GMPLSLST
"RTN","ORQQPL3",155,0)
 S GMPLSLST=$P($G(^VA(200,DUZ,125)),U,2)
"RTN","ORQQPL3",156,0)
 ;I 'GMPLSLST D
"RTN","ORQQPL3",157,0)
 I 'GMPLSLST,CLIN,$D(^GMPL(125,"C",+CLIN)) S GMPLSLST=$O(^(+CLIN,0))
"RTN","ORQQPL3",158,0)
 ;. S GMPLSLST=$O(^VA(200,DUZ,+CLIN,0))  ;$O(^(+CLIN,0))
"RTN","ORQQPL3",159,0)
 Q GMPLSLST
"RTN","ORQQPL3",160,0)
 ;
"RTN","ORQQPL3",161,0)
 ;----------------------- USER PROBLEM LIST --------------------------
"RTN","ORQQPL3",162,0)
 ;
"RTN","ORQQPL3",163,0)
PROB(TMP,GROUP) ; Get user problem list for given group
"RTN","ORQQPL3",164,0)
 N PSEQ,PCNT,IFN,ITEM,TG,CODE,TEXT
"RTN","ORQQPL3",165,0)
 ; S TG=$NAME(^TMP("GMPLMENU",$J)) ; put list in global for testing
"RTN","ORQQPL3",166,0)
 S TG=$NAME(TMP) ; put list in local
"RTN","ORQQPL3",167,0)
 K @TG
"RTN","ORQQPL3",168,0)
 S LCNT=0
"RTN","ORQQPL3",169,0)
 ;
"RTN","ORQQPL3",170,0)
 ; iterate through problems in category
"RTN","ORQQPL3",171,0)
 S (PSEQ,PCNT)=0
"RTN","ORQQPL3",172,0)
 F  S PSEQ=$O(^GMPL(125.12,"C",GROUP,PSEQ)) Q:PSEQ'>0  D
"RTN","ORQQPL3",173,0)
 . S IFN=$O(^GMPL(125.12,"C",GROUP,PSEQ,0)) Q:IFN'>0
"RTN","ORQQPL3",174,0)
 . S ITEM=$G(^GMPL(125.12,IFN,0))
"RTN","ORQQPL3",175,0)
 . S TEXT=$P(ITEM,U,4)
"RTN","ORQQPL3",176,0)
 . ; SEE DD for GMPL(125.12,4 :
"RTN","ORQQPL3",177,0)
 . ; "...code which is to be displayed... generally assumed to be ICD"
"RTN","ORQQPL3",178,0)
 . S CODE=$P(ITEM,U,5)
"RTN","ORQQPL3",179,0)
 . S PCNT=PCNT+1
"RTN","ORQQPL3",180,0)
 . ; RETURN:
"RTN","ORQQPL3",181,0)
 . ; PROBLEM^DISPLAY TEXT^CODE^CODE IFN
"RTN","ORQQPL3",182,0)
 . S @TG@(PCNT)=$P(ITEM,U,3,5)_U_$$ICDCODE(CODE)
"RTN","ORQQPL3",183,0)
 Q
"RTN","ORQQPL3",184,0)
 ;
"RTN","ORQQPL3",185,0)
ICDCODE(COD)    ; RETURN INTERNAL ICD FOR EXTERNAL CODE
"RTN","ORQQPL3",186,0)
 N CODIEN
"RTN","ORQQPL3",187,0)
 I COD="" Q ""
"RTN","ORQQPL3",188,0)
 S CODIEN=+$O(^ICD9("AB",$P(COD,U)_" ",0))
"RTN","ORQQPL3",189,0)
 S:CODIEN'>0 CODIEN=+$O(^ICD9("AB",$P(COD,U)_"0 ",0))
"RTN","ORQQPL3",190,0)
 Q CODIEN
"RTN","ORQQPL3",191,0)
 ;
"RTN","ORQQPL3",192,0)
 ;------------------ Filter Providers ---------------------
"RTN","ORQQPL3",193,0)
 ;
"RTN","ORQQPL3",194,0)
GETRPRV(RETURN,INP) ; GET LIST OF RESPONSIBLE PROVIDERS FROM PRBLM LIST 
"RTN","ORQQPL3",195,0)
 ; RETURN - aa list of responsible providers from which to select for filtering
"RTN","ORQQPL3",196,0)
 ; INP - array of problem list providers to select from
"RTN","ORQQPL3",197,0)
 ;
"RTN","ORQQPL3",198,0)
 N S
"RTN","ORQQPL3",199,0)
 S S=""
"RTN","ORQQPL3",200,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",201,0)
 . I INP(S)'="",$G(^VA(200,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",202,0)
 .. S RETURN(I)=INP(S)_U_$P(^VA(200,INP(S),0),U)
"RTN","ORQQPL3",203,0)
 S RETURN(0)="-1"_U_"<None recorded>" ; return empty provider
"RTN","ORQQPL3",204,0)
 Q
"RTN","ORQQPL3",205,0)
 ;
"RTN","ORQQPL3",206,0)
 ;---------------------------------------------------- GET FILTERED CLINIC LIST ------------------------
"RTN","ORQQPL3",207,0)
 ;
"RTN","ORQQPL3",208,0)
GETCLIN(RETURN,INP) ; Get FILTERED LIST OF CLINICS
"RTN","ORQQPL3",209,0)
 ; RETURN NAMES FOR LIST OF CLINICS PASSED IN
"RTN","ORQQPL3",210,0)
 N I,S
"RTN","ORQQPL3",211,0)
 S S=""
"RTN","ORQQPL3",212,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",213,0)
 . I INP(S)'="",$G(^SC(INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",214,0)
 .. S RETURN(I)=INP(S)_U_$P(^SC(INP(S),0),U,1)
"RTN","ORQQPL3",215,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty location
"RTN","ORQQPL3",216,0)
 Q
"RTN","ORQQPL3",217,0)
 ;
"RTN","ORQQPL3",218,0)
GETSRVC(RETURN,INP) ; GET FILTERED LIST OF INPATIENT SERVICES
"RTN","ORQQPL3",219,0)
 ; RETURN NAMES FOR LIST OF IEN PASSED IN
"RTN","ORQQPL3",220,0)
 N I,S
"RTN","ORQQPL3",221,0)
 S S=""
"RTN","ORQQPL3",222,0)
 F I=1:1 S S=$O(INP(S)) Q:S=""  D
"RTN","ORQQPL3",223,0)
 . I INP(S)'="",$G(^DIC(49,INP(S),0))'="" D  Q  ; get next
"RTN","ORQQPL3",224,0)
 .. S RETURN(I)=INP(S)_U_$P(^DIC(49,INP(S),0),U,1)
"RTN","ORQQPL3",225,0)
 ;. S RETURN(I)="-1"_U_"None" ; return empty service
"RTN","ORQQPL3",226,0)
 Q
"RTN","ORWDPS2")
0^15^B54324947
"RTN","ORWDPS2",1,0)
ORWDPS2 ; SLC/KCM/JLI - Pharmacy Calls for Windows Dialog ;6/24/02 11:15AM
"RTN","ORWDPS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**85,116,125,131,132,148**;Dec 17, 1997
"RTN","ORWDPS2",3,0)
 ;
"RTN","ORWDPS2",4,0)
OISLCT(LST,OI,PSTYPE,ORVP) ; return for defaults for pharmacy orderable item
"RTN","ORWDPS2",5,0)
 N ILST,ORDOSE,ORWPSOI,ORWDOSES
"RTN","ORWDPS2",6,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",7,0)
 S ILST=0
"RTN","ORWDPS2",8,0)
 S ORWPSOI=0
"RTN","ORWDPS2",9,0)
 S:+OI ORWPSOI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",10,0)
 D START^PSSJORDF(ORWPSOI,$S(PSTYPE="U":"I",1:"O")) ; dflt route, schedule, etc.
"RTN","ORWDPS2",11,0)
 D DOSE^PSSORUTL(.ORDOSE,ORWPSOI,PSTYPE,ORVP)       ; dflt doses
"RTN","ORWDPS2",12,0)
 D EN^PSSDIN(ORWPSOI)                               ; nfi text
"RTN","ORWDPS2",13,0)
 S ILST=ILST+1,LST(ILST)="~Medication"
"RTN","ORWDPS2",14,0)
 S ILST=ILST+1,LST(ILST)="d"_OI_U_$S(+OI:$P(^ORD(101.43,OI,0),U),1:"")
"RTN","ORWDPS2",15,0)
 S ILST=ILST+1,LST(ILST)="~Verb"
"RTN","ORWDPS2",16,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U)
"RTN","ORWDPS2",17,0)
 S ILST=ILST+1,LST(ILST)="~Preposition"
"RTN","ORWDPS2",18,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("MISC")),U,2)
"RTN","ORWDPS2",19,0)
 S ILST=ILST+1,LST(ILST)="~PtInstr"   D PTINSTR
"RTN","ORWDPS2",20,0)
 S ILST=ILST+1,LST(ILST)="~AllDoses"  D ALLDOSE ; must do before DOSAGE
"RTN","ORWDPS2",21,0)
 S ILST=ILST+1,LST(ILST)="~Dosage"    D DOSAGE
"RTN","ORWDPS2",22,0)
 S ILST=ILST+1,LST(ILST)="~Dispense"  D DISPLST
"RTN","ORWDPS2",23,0)
 S ILST=ILST+1,LST(ILST)="~Route"     D ROUTE
"RTN","ORWDPS2",24,0)
 S ILST=ILST+1,LST(ILST)="~Schedule"  D SCHED
"RTN","ORWDPS2",25,0)
 S ILST=ILST+1,LST(ILST)="~Guideline" D GUIDE
"RTN","ORWDPS2",26,0)
 S ILST=ILST+1,LST(ILST)="~Message"   D OIMSG
"RTN","ORWDPS2",27,0)
 S ILST=ILST+1,LST(ILST)="~DEASchedule" ;PKI
"RTN","ORWDPS2",28,0)
 S ILST=ILST+1,LST(ILST)="d"_$P($G(ORDOSE("DEA")),U) ;PKI
"RTN","ORWDPS2",29,0)
 I PSTYPE="U" D
"RTN","ORWDPS2",30,0)
 . ; start, expires, next admin
"RTN","ORWDPS2",31,0)
 I PSTYPE="O" D
"RTN","ORWDPS2",32,0)
 . ; days supply, quantity, refills
"RTN","ORWDPS2",33,0)
 K ^TMP("PSJINS",$J),^TMP("PSJMR",$J),^TMP("PSJNOUN",$J),^TMP("PSJSCH",$J),^TMP("PSSDIN",$J)
"RTN","ORWDPS2",34,0)
 Q
"RTN","ORWDPS2",35,0)
 ;
"RTN","ORWDPS2",36,0)
PTINSTR ; from OISLCT, set up patient instructions
"RTN","ORWDPS2",37,0)
 N I
"RTN","ORWDPS2",38,0)
 S I=0 F  S I=$O(ORDOSE("PI",I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_ORDOSE("PI",I)
"RTN","ORWDPS2",39,0)
 Q
"RTN","ORWDPS2",40,0)
DOSAGE ; from OISLCT, set up the list of dosages
"RTN","ORWDPS2",41,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",42,0)
 ; must be called after ALLDOSE so ORWDOSES is set up
"RTN","ORWDPS2",43,0)
 N I
"RTN","ORWDPS2",44,0)
 S I=0 F  S I=$O(ORWDOSES(I)) Q:I'>0  S ILST=ILST+1,LST(ILST)=ORWDOSES(I)
"RTN","ORWDPS2",45,0)
 Q
"RTN","ORWDPS2",46,0)
DISPLST ; from OISLCT, set up list of dispense drugs
"RTN","ORWDPS2",47,0)
 ; DrugIEN^Strength^Units^Name^Split
"RTN","ORWDPS2",48,0)
 N DD
"RTN","ORWDPS2",49,0)
 S DD=0 F  S DD=$O(ORDOSE("DD",DD)) Q:'DD  D
"RTN","ORWDPS2",50,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",51,0)
 . S LST(ILST)="i"_DD_U_$P(ORDOSE("DD",DD),U,5,6)_U_$P(ORDOSE("DD",DD),U)_U_$P(ORDOSE("DD",DD),U,11)
"RTN","ORWDPS2",52,0)
 Q
"RTN","ORWDPS2",53,0)
ALLDOSE ; from OISLCT, set up a list of all possible doses
"RTN","ORWDPS2",54,0)
 ; LST(n)=iDrugName^Strength^NF^... (see BLDDOSE)
"RTN","ORWDPS2",55,0)
 N I,J,CONJ,DD,DRUG,DDNM,LDOSE,TEXT,STREN,UD,COST,NF,ID,X
"RTN","ORWDPS2",56,0)
 S CONJ=$P($G(ORDOSE("MISC")),U,3),ORWDOSES=0
"RTN","ORWDPS2",57,0)
 S:$L(CONJ) CONJ=" "_CONJ_" " S:'$L(CONJ) CONJ=" "
"RTN","ORWDPS2",58,0)
 S I=0 F  S I=$O(ORDOSE(I)) Q:I'>0  D
"RTN","ORWDPS2",59,0)
 . S X=$$BLDDOSE(ORDOSE(I))
"RTN","ORWDPS2",60,0)
 . S ORWDOSES=ORWDOSES+1,ORWDOSES(ORWDOSES)=X
"RTN","ORWDPS2",61,0)
 . S ILST=ILST+1
"RTN","ORWDPS2",62,0)
 . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",63,0)
 . S J=0 F  S J=$O(ORDOSE(I,J)) Q:J'>0  D
"RTN","ORWDPS2",64,0)
 . . S X=$$BLDDOSE(ORDOSE(I,J))
"RTN","ORWDPS2",65,0)
 . . S ILST=ILST+1
"RTN","ORWDPS2",66,0)
 . . S LST(ILST)="i"_$P(X,U,5)_U_$P($P(X,U,4),"&",6)_U_$P(X,U,4)
"RTN","ORWDPS2",67,0)
 Q
"RTN","ORWDPS2",68,0)
BLDDOSE(X)  ; build dose info where X is ORDOSE node
"RTN","ORWDPS2",69,0)
 ; from ALLDOSE
"RTN","ORWDPS2",70,0)
 ;    X=TotalDose^Units^U/D^Noun^LocalDose^DispDrugIEN
"RTN","ORWDPS2",71,0)
 ;    Y=iDrugName^Strength^NF^TDose&Units&U/D&Noun&LDose&Drug&Stren&Units^
"RTN","ORWDPS2",72,0)
 ;      DoseText^CostText^MaxRefills^DispUnits^CanSplit
"RTN","ORWDPS2",73,0)
 ; DRUG=Name^Cost^NF^DispUnit^Strength^Units^DoseForm^MaxRefills^
"RTN","ORWDPS2",74,0)
 ; No TotalDose,           use LocalDose
"RTN","ORWDPS2",75,0)
 ; TotalDose & Strength,   use LocalDose+Conjunction+Strength+Units
"RTN","ORWDPS2",76,0)
 ; TotalDose, No Strength, use LocalDose+Conjunction+DispenseName
"RTN","ORWDPS2",77,0)
 S DD=+$P(X,U,6),DRUG=ORDOSE("DD",DD),DDNM=$P(DRUG,U),ID=$P(X,U,1,6)
"RTN","ORWDPS2",78,0)
 S LDOSE=$P(X,U,5),TEXT=LDOSE,STREN=$P(DRUG,U,5)_$P(DRUG,U,6)
"RTN","ORWDPS2",79,0)
 S $P(ID,U,7)=$P(DRUG,U,5) S $P(ID,U,8)=$P(DRUG,U,6) ; add strength
"RTN","ORWDPS2",80,0)
 I '$L($P(X,U)),$L($P(DRUG,U,5))  S TEXT=TEXT_CONJ_STREN
"RTN","ORWDPS2",81,0)
 I '$L($P(X,U)),'$L($P(DRUG,U,5)) S TEXT=TEXT_CONJ_$P(DRUG,U)
"RTN","ORWDPS2",82,0)
 S UD=$P(X,U,3),COST=$P(X,U,7),NF=$S($P(DRUG,U,3):"NF",1:"")
"RTN","ORWDPS2",83,0)
 ;I UD S COST="$"_$J(UD*$P(DRUG,U,2),1,3) ;_" per "_UD_" "_$P(X,U,4)
"RTN","ORWDPS2",84,0)
 S Y="i"_DDNM_U_STREN_U_NF_U_$TR(ID,U,"&")_U_TEXT_U_COST_U_$P(DRUG,U,8)_U_$P(DRUG,U,4)
"RTN","ORWDPS2",85,0)
 Q Y
"RTN","ORWDPS2",86,0)
ROUTE ; from OISLCT, get list of routes for the drug form
"RTN","ORWDPS2",87,0)
 ; ** NEED BOTH ABBREVIATION & NAME IN LIST BOX
"RTN","ORWDPS2",88,0)
 N I,CNT,ABBR,IEN,ROUT,EXP,X
"RTN","ORWDPS2",89,0)
 S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",90,0)
 . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",91,0)
 . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",92,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_ROUT_U_ABBR_U_EXP_U_$P(X,U,5)
"RTN","ORWDPS2",93,0)
 . I I=1,IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_ROUT ;_U_ABBR ; assume first always default
"RTN","ORWDPS2",94,0)
 ; add abbreviations to list of routes, commented out for 15.5 on
"RTN","ORWDPS2",95,0)
 ; S I="" F  S I=$O(^TMP("PSJMR",$J,I)) Q:I=""  D
"RTN","ORWDPS2",96,0)
 ; . S X=^TMP("PSJMR",$J,I)
"RTN","ORWDPS2",97,0)
 ; . S ROUT=$P(X,U),ABBR=$P(X,U,2),IEN=$P(X,U,3),EXP=$P(X,U,4)
"RTN","ORWDPS2",98,0)
 ; . I $L(ABBR),(ABBR'=ROUT) S ILST=ILST+1,LST(ILST)="i"_IEN_U_ABBR_" ("_ROUT_")"_U_ABBR_U_EXP
"RTN","ORWDPS2",99,0)
 Q
"RTN","ORWDPS2",100,0)
SCHED ; from OISLCT, get default schedule for this medication
"RTN","ORWDPS2",101,0)
 I $L($G(^TMP("PSJSCH",$J))) S ILST=ILST+1,LST(ILST)="d"_^($J)
"RTN","ORWDPS2",102,0)
 Q
"RTN","ORWDPS2",103,0)
GUIDE ; from OISLCT, get guidelines associated with this medication
"RTN","ORWDPS2",104,0)
 N IEN,I
"RTN","ORWDPS2",105,0)
 S IEN=0 F  S IEN=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN)) Q:'IEN  D
"RTN","ORWDPS2",106,0)
 . S I=0 F  S I=$O(^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)) Q:'I  D
"RTN","ORWDPS2",107,0)
 . . S ILST=ILST+1,LST(ILST)="t"_^TMP("PSSDIN",$J,"OI",ORWPSOI,IEN,I)
"RTN","ORWDPS2",108,0)
 Q
"RTN","ORWDPS2",109,0)
OIMSG ; from OISLCT, get the orderable item message for this medication
"RTN","ORWDPS2",110,0)
 S I=0 F  S I=$O(^ORD(101.43,OI,8,I)) Q:I'>0  S ILST=ILST+1,LST(ILST)="t"_^(I,0)
"RTN","ORWDPS2",111,0)
 Q
"RTN","ORWDPS2",112,0)
ADMIN(REC,DFN,SCH,OI,LOC)       ; return administration time info
"RTN","ORWDPS2",113,0)
 ; REC: StartText^StartTime^Duration^FirstAdmin
"RTN","ORWDPS2",114,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",115,0)
 S LOC=+$G(^SC(LOC,42)),REC=""
"RTN","ORWDPS2",116,0)
 I $L($G(^DPT(DFN,.1))) S REC=$$FIRST^ORCDPS3(DFN,LOC,OI,SCH)
"RTN","ORWDPS2",117,0)
 Q
"RTN","ORWDPS2",118,0)
REQST(VAL,DFN,SCH,OI,LOC,TXT)   ; return requested start time
"RTN","ORWDPS2",119,0)
 ; VAL: FirstAdmin time
"RTN","ORWDPS2",120,0)
 S VAL=""
"RTN","ORWDPS2",121,0)
 Q:'$L($G(SCH))  Q:'$G(OI)
"RTN","ORWDPS2",122,0)
 S OI=+$P($G(^ORD(101.43,+OI,0)),U,2)
"RTN","ORWDPS2",123,0)
 S LOC=+$G(^SC(LOC,42))
"RTN","ORWDPS2",124,0)
 S VAL=$P($$RESOLVE^PSJORPOE(DFN,SCH,OI,TXT,LOC),U,2)
"RTN","ORWDPS2",125,0)
 Q
"RTN","ORWDPS2",126,0)
DAY2QTY(VAL,DAY,UPD,SCH,DUR,PAT,DRG)        ; return qty for days supply
"RTN","ORWDPS2",127,0)
 ; VAL: quantity
"RTN","ORWDPS2",128,0)
 N ORWX,I,X,ADUR,ADURNM
"RTN","ORWDPS2",129,0)
 S ORWX("DAYS SUPPLY")=DAY
"RTN","ORWDPS2",130,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",131,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",132,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",133,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",134,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",135,0)
 . S ADUR=$P(DUR,U,I),ADURNM=$P($P(ADUR," ",2),"~")
"RTN","ORWDPS2",136,0)
 . S:ADURNM="MONTHS" X=+ADUR_"L"
"RTN","ORWDPS2",137,0)
 . S:ADURNM'="MONTHS" X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",138,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",139,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",140,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",141,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",142,0)
 S VAL=$G(ORWX("QTY"))
"RTN","ORWDPS2",143,0)
 Q
"RTN","ORWDPS2",144,0)
QTY2DAY(VAL,QTY,UPD,SCH,DUR,PAT,DRG)        ; return days supply given quantity
"RTN","ORWDPS2",145,0)
 ; VAL: days supply
"RTN","ORWDPS2",146,0)
 N ORWX,I,X,ADUR
"RTN","ORWDPS2",147,0)
 S ORWX("QTY")=QTY
"RTN","ORWDPS2",148,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",149,0)
 I DRG S ORWX("DRUG")=DRG
"RTN","ORWDPS2",150,0)
 F I=1:1:$L(UPD,U)-1 D
"RTN","ORWDPS2",151,0)
 . S ORWX("DOSE ORDERED",I)=$P(UPD,U,I)
"RTN","ORWDPS2",152,0)
 . S ORWX("SCHEDULE",I)=$P(SCH,U,I)
"RTN","ORWDPS2",153,0)
 . S ADUR=$P(DUR,U,I),X=+ADUR_$E($P(ADUR," ",2))
"RTN","ORWDPS2",154,0)
 . I $L(X) S ORWX("DURATION",I)=X
"RTN","ORWDPS2",155,0)
 . S X=$E($P(ADUR,"~",2))
"RTN","ORWDPS2",156,0)
 . I $L(X) S ORWX("CONJUNCTION",I)=X
"RTN","ORWDPS2",157,0)
 D QTYX^PSOSIG(.ORWX)
"RTN","ORWDPS2",158,0)
 S VAL=$G(ORWX("DAYS SUPPLY"))
"RTN","ORWDPS2",159,0)
 Q
"RTN","ORWDPS2",160,0)
MAXREF(VAL,PAT,DRG,SUP,OI,OUT)      ; return the maximum number of refills
"RTN","ORWDPS2",161,0)
 ; PAT=Patient DFN, DRG=ptr50, SUP=days supply, OI=orderable item
"RTN","ORWDPS2",162,0)
 ; VAL: maximum refills allowed
"RTN","ORWDPS2",163,0)
 N ORWX
"RTN","ORWDPS2",164,0)
 S ORWX("PATIENT")=PAT
"RTN","ORWDPS2",165,0)
 I $G(DRG) S ORWX("DRUG")=+DRG
"RTN","ORWDPS2",166,0)
 I $G(SUP) S ORWX("DAYS SUPPLY")=SUP
"RTN","ORWDPS2",167,0)
 I $G(OI)  S ORWX("ITEM")=OI
"RTN","ORWDPS2",168,0)
 I $G(OUT) S ORWX("DISCHARGE")=1
"RTN","ORWDPS2",169,0)
 D MAX^PSOSIGDS(.ORWX)
"RTN","ORWDPS2",170,0)
 S VAL=$G(ORWX("MAX"))
"RTN","ORWDPS2",171,0)
 Q
"RTN","ORWDPS2",172,0)
SCHREQ(VAL,OI,RTE,DRG)  ; return 1 if schedule is required
"RTN","ORWDPS2",173,0)
 ; OI=orderable item, RTE=ptr route, DRG=ptr dispense drug
"RTN","ORWDPS2",174,0)
 S VAL=1
"RTN","ORWDPS2",175,0)
 Q:'$G(OI)  Q:'$G(RTE)
"RTN","ORWDPS2",176,0)
 S VAL=$$SCHREQ^PSJORPOE(RTE,OI,+$G(DRG))
"RTN","ORWDPS2",177,0)
 Q
"RTN","ORWDPS2",178,0)
CHKPI(VAL,ODIFN) ; return pre-existing patient instruct
"RTN","ORWDPS2",179,0)
 N IDNUM,IDPI
"RTN","ORWDPS2",180,0)
 S (IDNUM,IDPI)=0,VAL=""
"RTN","ORWDPS2",181,0)
 I '$D(^OR(100,ODIFN,4.5,"ID","PI")) S VAL="" Q
"RTN","ORWDPS2",182,0)
 F  S IDNUM=$O(^OR(100,ODIFN,4.5,"ID","PI",IDNUM)) Q:'IDNUM  D
"RTN","ORWDPS2",183,0)
 . F  S IDPI=$O(^OR(100,ODIFN,4.5,IDNUM,2,IDPI)) Q:'IDPI  D
"RTN","ORWDPS2",184,0)
 .. S VAL=VAL_^OR(100,ODIFN,4.5,IDNUM,2,IDPI,0)
"RTN","ORWDPS2",185,0)
 K IDNUM,IDPI
"RTN","ORWDPS2",186,0)
 Q
"RTN","ORWDPS2",187,0)
CHKGRP(VAL,ORIFN) ;
"RTN","ORWDPS2",188,0)
 ;If order belong to Inpatient Med Order Group: return 1
"RTN","ORWDPS2",189,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",190,0)
 S VAL=0
"RTN","ORWDPS2",191,0)
 I '$L(ORIFN) Q
"RTN","ORWDPS2",192,0)
 N UDGRP,IPGRP,OPGRP,ODGRP,ODID
"RTN","ORWDPS2",193,0)
 S ODID=+ORIFN
"RTN","ORWDPS2",194,0)
 Q:ODID<1
"RTN","ORWDPS2",195,0)
 S (UDGRP,IPGRP,OPGRP,ODGRP)=0
"RTN","ORWDPS2",196,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",197,0)
 S OPGRP=$O(^ORD(100.98,"B","OUTPATIENT MEDICATIONS",OPGRP))
"RTN","ORWDPS2",198,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",199,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",200,0)
 I $L($G(^OR(100,ODID,0)))<1 Q
"RTN","ORWDPS2",201,0)
 S ODGRP=$P(^OR(100,ODID,0),U,11)
"RTN","ORWDPS2",202,0)
 I UDGRP=ODGRP S VAL=1
"RTN","ORWDPS2",203,0)
 I IPGRP=ODGRP S VAL=1
"RTN","ORWDPS2",204,0)
 I OPGRP=ODGRP S VAL=2
"RTN","ORWDPS2",205,0)
 K UDGRP,ODGRP,OPGRP,IPGRP,ODID
"RTN","ORWDPS2",206,0)
 Q
"RTN","ORWDPS2",207,0)
QOGRP(VAL,QOIFN) ;
"RTN","ORWDPS2",208,0)
 ;If quick order belong to Inpatient Med Order Group: return 1
"RTN","ORWDPS2",209,0)
 ;Otherwise, return 0
"RTN","ORWDPS2",210,0)
 S VAL=0
"RTN","ORWDPS2",211,0)
 I '$L(QOIFN) Q
"RTN","ORWDPS2",212,0)
 N UDGRP,IPGRP,QOGRP,QOID
"RTN","ORWDPS2",213,0)
 S QOID=+QOIFN
"RTN","ORWDPS2",214,0)
 Q:QOID<1
"RTN","ORWDPS2",215,0)
 S (UDGRP,IPGRP,QOGRP)=0
"RTN","ORWDPS2",216,0)
 S UDGRP=$O(^ORD(100.98,"B","UD RX",UDGRP))
"RTN","ORWDPS2",217,0)
 S IPGRP=$O(^ORD(100.98,"B","INPATIENT MEDICATIONS",IPGRP))
"RTN","ORWDPS2",218,0)
 S:IPGRP=0 IPGRP=$O(^ORD(100.98,"B","I RX",IPGRP))
"RTN","ORWDPS2",219,0)
 I $L($G(^ORD(101.41,QOID,0)))<1 Q
"RTN","ORWDPS2",220,0)
 S QOGRP=$P(^ORD(101.41,QOID,0),U,5)
"RTN","ORWDPS2",221,0)
 I UDGRP=QOGRP S VAL=1
"RTN","ORWDPS2",222,0)
 I IPGRP=QOGRP S VAL=1
"RTN","ORWDPS2",223,0)
 K UDGRP,QOGRP,QOID,IPGRP
"RTN","ORWDPS2",224,0)
 Q
"RTN","ORWDXA")
0^9^B48948680
"RTN","ORWDXA",1,0)
ORWDXA ; SLC/KCM - Utilites for Order Actions;06:22 PM  2 Sep 1998;2/23/98  16:18 [3/12/02 3:29pm]
"RTN","ORWDXA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148**;Dec 17, 1997
"RTN","ORWDXA",3,0)
 ;
"RTN","ORWDXA",4,0)
VALID(VAL,ORID,ACTION,ORNP,ORWNAT) ; Return error message if not valid action for order
"RTN","ORWDXA",5,0)
 N ORACT,ORVP,ORVER,ORIFN S VAL=""
"RTN","ORWDXA",6,0)
 I +ORID=0 S VAL="This order has been deleted." Q
"RTN","ORWDXA",7,0)
 I '$D(^OR(100,+ORID,0)) S VAL="This order has been deleted!" Q
"RTN","ORWDXA",8,0)
 I ACTION="XFR",'$L($T(XFR^ORCACT01)) S ACTION="RW" ; for pre-POE
"RTN","ORWDXA",9,0)
 S ORIFN=ORID,ORVP=$P(^OR(100,+ORID,0),U,2)  ; ORCACT0 expects defined
"RTN","ORWDXA",10,0)
 I (ACTION="RN") D  Q:$L(VAL)  ; ** There's got to be a better way!
"RTN","ORWDXA",11,0)
 . N DLG S DLG=$P(^OR(100,+ORID,0),U,5) Q:DLG'[";ORD(101.41,"
"RTN","ORWDXA",12,0)
 . I $G(^ORD(101.41,+DLG,3))'["PROVIDER^ORCDPSIV" Q
"RTN","ORWDXA",13,0)
 . D AUTH^ORWDPS32(.VAL,ORNP)
"RTN","ORWDXA",14,0)
 . I VAL S VAL=$P(VAL,U,2)
"RTN","ORWDXA",15,0)
 . E  S VAL=""
"RTN","ORWDXA",16,0)
 S ORVER=$S(ACTION="CR":"R",$D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:"^")
"RTN","ORWDXA",17,0)
 I ACTION="CR" S ACTION="VR"
"RTN","ORWDXA",18,0)
 I (ACTION="ES")!(ACTION="OC")!(ACTION="RS") S ORACT=ACTION ; why not defined???
"RTN","ORWDXA",19,0)
 I (ACTION="VR"),'($D(^XUSEC("ORELSE",DUZ))!$D(^XUSEC("OREMAS",DUZ))) D  Q
"RTN","ORWDXA",20,0)
 . S VAL="You are not authorized to verify these orders."
"RTN","ORWDXA",21,0)
 I (ACTION="RW")!(ACTION="XX")!(ACTION="XFR") D  Q:$L(VAL)
"RTN","ORWDXA",22,0)
 . N DLG,FRM
"RTN","ORWDXA",23,0)
 . S DLG=$P(^OR(100,+ORID,0),U,5),FRM=0
"RTN","ORWDXA",24,0)
 . I $P(DLG,";",2)'="ORD(101.41," S DLG=0
"RTN","ORWDXA",25,0)
 . I DLG D FORMID^ORWDXM(.FRM,+DLG)
"RTN","ORWDXA",26,0)
 . I '(DLG&FRM) D
"RTN","ORWDXA",27,0)
 . . S VAL="Copy & Change are not implemented for this order that predates CPRS."
"RTN","ORWDXA",28,0)
 N OREBUILD  ; sometimes left defined by $$VALID
"RTN","ORWDXA",29,0)
 I $$VALID^ORCACT0(ORID,ACTION,.VAL,$G(ORWNAT)) S VAL="" ; VAL=error
"RTN","ORWDXA",30,0)
 Q
"RTN","ORWDXA",31,0)
HOLD(REC,ORID,ORNP)  ; Place an order on hold
"RTN","ORWDXA",32,0)
 N ACTDA
"RTN","ORWDXA",33,0)
 S ACTDA=$$ACTION^ORCSAVE("HD",+ORID,ORNP)
"RTN","ORWDXA",34,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",35,0)
 Q
"RTN","ORWDXA",36,0)
UNHOLD(REC,ORID,ORNP)  ; Release an order from hold
"RTN","ORWDXA",37,0)
 N ACTDA
"RTN","ORWDXA",38,0)
 S ACTDA=$$ACTION^ORCSAVE("RL",+ORID,ORNP)
"RTN","ORWDXA",39,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",40,0)
 Q
"RTN","ORWDXA",41,0)
DC(REC,ORID,ORNP,ORL,REASON)   ; Discontinue/Cancel/Delete an order
"RTN","ORWDXA",42,0)
 N NATURE,CREATE,PRINT,STATUS,ACTDA
"RTN","ORWDXA",43,0)
 S ORL(2)=ORL_";SC(",ORL=ORL(2),NATURE=""
"RTN","ORWDXA",44,0)
 I REASON S NATURE=$P(^ORD(100.02,$P(^ORD(100.03,REASON,0),U,7),0),U,2)
"RTN","ORWDXA",45,0)
 S:NATURE="" NATURE="W"  ; S:ORNP=DUZ NATURE="E" 
"RTN","ORWDXA",46,0)
 S CREATE=$$CREATE^ORX1(NATURE),PRINT=$$PRINT^ORCACT2(NATURE)
"RTN","ORWDXA",47,0)
 S STATUS=$P(^OR(100,+ORID,8,+$P(ORID,";",2),0),U,15)
"RTN","ORWDXA",48,0)
 I (STATUS=10)!(STATUS=11) D  Q   ; delete/cancel unreleased order
"RTN","ORWDXA",49,0)
 . N X8,RPLORD
"RTN","ORWDXA",50,0)
 . S X8=^OR(100,+ORID,8,+$P(ORID,";",2),0)  ; action entry
"RTN","ORWDXA",51,0)
 . S RPLORD=$P($G(^OR(100,+ORID,3)),U,5)    ; replaced order
"RTN","ORWDXA",52,0)
 . D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",53,0)
 . I STATUS=10,($P(X8,U,4)'=2) D  ; CANCEL signed, delayed, unreleased
"RTN","ORWDXA",54,0)
 . . ; taken from CLRDLY^ORCACT2
"RTN","ORWDXA",55,0)
 . . N EVT,ORVP
"RTN","ORWDXA",56,0)
 . . S EVT=$P(^OR(100,+ORID,0),U,17),ORVP=$P(^(0),U,2)
"RTN","ORWDXA",57,0)
 . . S $P(^OR(100,+ORID,0),U,17)="",$P(^(3),U,7)=0,$P(^(8,1,0),U,15)=""
"RTN","ORWDXA",58,0)
 . . K:$L(EVT) ^OR(100,"AEVNT",ORVP,EVT,+ORID)
"RTN","ORWDXA",59,0)
 . . S ^OR(100,+ORID,6)=$O(^ORD(100.02,"C","M",0))_U_DUZ_U_+$E($$NOW^XLFDT,1,12)_"^^Delayed Order Cancelled"
"RTN","ORWDXA",60,0)
 . . D STATUS^ORCSAVE2(+ORID,13)
"RTN","ORWDXA",61,0)
 . E  D                           ; DELETE unsigned, unreleased
"RTN","ORWDXA",62,0)
 . . ; delete fwd ptr to order about to be deleted
"RTN","ORWDXA",63,0)
 . . I RPLORD,$P(X8,U,2)="NW" S $P(^OR(100,RPLORD,3),U,6)=""
"RTN","ORWDXA",64,0)
 . . D DELETE^ORCSAVE2(ORID)
"RTN","ORWDXA",65,0)
 . I RPLORD S ORID=RPLORD  ; for Renews & Changes, show replaced order
"RTN","ORWDXA",66,0)
 . I '$D(^OR(100,+ORID)) D
"RTN","ORWDXA",67,0)
 . . S $P(REC(1),U)="~0",REC(2)="tDELETED: "_$E(REC(2),2,245)
"RTN","ORWDXA",68,0)
 . E  D
"RTN","ORWDXA",69,0)
 . . K REC
"RTN","ORWDXA",70,0)
 . . D GETBYIFN^ORWORR(.REC,+ORID_";"_$P($G(^OR(100,+ORID,3)),U,7))
"RTN","ORWDXA",71,0)
 . S $P(REC(1),U,14)=2 ; DCType = deletion
"RTN","ORWDXA",72,0)
 I CREATE D
"RTN","ORWDXA",73,0)
 . S ACTDA=$$ACTION^ORCSAVE("DC",+ORID,ORNP)
"RTN","ORWDXA",74,0)
 E  D 
"RTN","ORWDXA",75,0)
 . D EN^ORCSEND(+ORID,"DC",3,1,NATURE,REASON)
"RTN","ORWDXA",76,0)
 . S ACTDA=$P(ORID,";",2)
"RTN","ORWDXA",77,0)
 . I PRINT ; do something to print this
"RTN","ORWDXA",78,0)
 D GETBYIFN^ORWORR(.REC,+ORID_";"_ACTDA)
"RTN","ORWDXA",79,0)
 S $P(REC(1),U,14)=$S(CREATE:1,1:3)  ;DCType - 1=NewOrder, 3=NewStatus
"RTN","ORWDXA",80,0)
 Q
"RTN","ORWDXA",81,0)
DCREASON(LST)   ; Return a list of DC reasons
"RTN","ORWDXA",82,0)
 N IEN,ILST,X
"RTN","ORWDXA",83,0)
 S ILST=1,LST(ILST)="~DCReason"
"RTN","ORWDXA",84,0)
 S IEN=0 F  S IEN=$O(^ORD(100.03,IEN)) Q:'IEN  S X=^(IEN,0) D
"RTN","ORWDXA",85,0)
 . I $P(X,U,4) Q                              ; inactive
"RTN","ORWDXA",86,0)
 . I $P(X,U,5)'=+$O(^DIC(9.4,"C","OR",0)) Q   ; not OR pkg
"RTN","ORWDXA",87,0)
 . I $P(X,U,7)=+$O(^ORD(100.02,"C","A",0)) Q  ; nature=auto
"RTN","ORWDXA",88,0)
 . S ILST=ILST+1,LST(ILST)="i"_IEN_U_$P(X,U)
"RTN","ORWDXA",89,0)
 S IEN=$O(^ORD(100.03,"C","ORREQ",0))
"RTN","ORWDXA",90,0)
 I IEN S ILST=ILST+1,LST(ILST)="d"_IEN_U_$P(^ORD(100.03,IEN,0),U)
"RTN","ORWDXA",91,0)
 Q
"RTN","ORWDXA",92,0)
DCREQIEN(VAL)   ; Return the IEN for Requesting Physician Cancelled reason
"RTN","ORWDXA",93,0)
 S VAL=$O(^ORD(100.03,"S","REQ",0))
"RTN","ORWDXA",94,0)
 Q
"RTN","ORWDXA",95,0)
COMPLETE(REC,ORID,ESCODE)      ; Complete an order (generic orders)
"RTN","ORWDXA",96,0)
 ;N X S X=+$E($$NOW^XLFDT,1,12)
"RTN","ORWDXA",97,0)
 ;D DATES^ORCSAVE2(+ORID,,X)
"RTN","ORWDXA",98,0)
 ;D STATUS^ORCSAVE2(+ORID,2)
"RTN","ORWDXA",99,0)
 ; validate ESCode
"RTN","ORWDXA",100,0)
 D COMP^ORCSAVE2(ORID)
"RTN","ORWDXA",101,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",102,0)
 Q
"RTN","ORWDXA",103,0)
VERIFY(REC,ORID,ESCODE,ORVER) ; Verify an order
"RTN","ORWDXA",104,0)
 ; validate ESCode
"RTN","ORWDXA",105,0)
 S ORVER=$G(ORVER,$S($D(^XUSEC("ORELSE",DUZ)):"N",$D(^XUSEC("OREMAS",DUZ)):"C",1:U))
"RTN","ORWDXA",106,0)
 I ORVER'=U D EN^ORCSEND(ORID,"VR","","")
"RTN","ORWDXA",107,0)
 D GETBYIFN^ORWORR(.REC,ORID)
"RTN","ORWDXA",108,0)
 ; !! to match 56, need to VERIFY any replaced orders
"RTN","ORWDXA",109,0)
 Q
"RTN","ORWDXA",110,0)
ALERT(DUMMY,ORID,ORDUZ) ;send alert to user (ORDUZ) when order (ORID) resulted
"RTN","ORWDXA",111,0)
 ;if no user passed from GUI, use ordering provider:
"RTN","ORWDXA",112,0)
 I $G(ORDUZ)<1 S ORDUZ=+$$ORDERER^ORQOR2(+ORID)
"RTN","ORWDXA",113,0)
 I $L($G(ORDUZ))<1 S ORDUZ=DUZ
"RTN","ORWDXA",114,0)
 S DUMMY=1,$P(^OR(100,+ORID,3),U,10)=ORDUZ
"RTN","ORWDXA",115,0)
 Q
"RTN","ORWDXA",116,0)
FLAG(REC,ORIFN,OREASON,ORNP)   ; Flag an order
"RTN","ORWDXA",117,0)
 N ORB,ORVP,DA
"RTN","ORWDXA",118,0)
 D BULLETIN
"RTN","ORWDXA",119,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",120,0)
 K ^OR(100,+ORIFN,8,DA,3) S ^(3)="1^"_$G(XMZ)_U_+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",121,0)
 D KILL^XM
"RTN","ORWDXA",122,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; Last Activity
"RTN","ORWDXA",123,0)
 I +$G(ORNP)<1 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",124,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^1" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",125,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",126,0)
 Q
"RTN","ORWDXA",127,0)
BULLETIN        ; Send flagged order bulletin (USED BY FLAG)
"RTN","ORWDXA",128,0)
 N OR0,OR3,ORDTXT,XMB,XMY,XMDUZ,ORENT,BULL,ORSRV,ORUSR
"RTN","ORWDXA",129,0)
 S OR0=$G(^OR(100,+ORIFN,0)),OR3=$G(^(3))
"RTN","ORWDXA",130,0)
 ;CLA - 3/21/96:
"RTN","ORWDXA",131,0)
 S ORUSR=+$P(OR0,U,4)
"RTN","ORWDXA",132,0)
 S ORSRV=$G(^VA(200,ORUSR,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWDXA",133,0)
 S ORENT="USR.`"_ORUSR_"^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","ORWDXA",134,0)
 S BULL=$$GET^XPAR(ORENT,"ORB FLAGGED ORDERS BULLETIN",1,"Q")
"RTN","ORWDXA",135,0)
 Q:$G(BULL)'="Y"   ;quit if parameter value is not 'Y'es
"RTN","ORWDXA",136,0)
 ;
"RTN","ORWDXA",137,0)
 S XMB="OR FLAGGED ORDER",XMDUZ=DUZ,XMY(+$P(OR0,U,4))=""
"RTN","ORWDXA",138,0)
 S XMB(1)=$P(^DPT(+$P(OR0,U,2),0),U),XMB(2)=$P(^(0),U,9),XMB(3)="" ;sb AGE
"RTN","ORWDXA",139,0)
 S XMB(4)=$$FMTE^XLFDT($P(OR0,U,7))
"RTN","ORWDXA",140,0)
 D TEXT^ORQ12(.ORDTXT,+ORIFN,80)
"RTN","ORWDXA",141,0)
 S XMB(5)=$G(ORDTXT(1)),XMB(6)=$G(ORDTXT(2)),XMB(7)=$G(ORDTXT(3))
"RTN","ORWDXA",142,0)
 S XMB(8)=$$FMTE^XLFDT($P(OR0,U,8)),XMB(9)=$$FMTE^XLFDT($P(OR0,U,9)),XMB(10)=OREASON
"RTN","ORWDXA",143,0)
 S XMB(11)=$P($G(^ORD(100.01,+$P(OR3,U,3),0)),U)
"RTN","ORWDXA",144,0)
 D EN^XMB
"RTN","ORWDXA",145,0)
 Q
"RTN","ORWDXA",146,0)
UNFLAG(REC,ORIFN,OREASON)       ; Unflag an order
"RTN","ORWDXA",147,0)
 N DA,ORB,ORNP,ORVP
"RTN","ORWDXA",148,0)
 S DA=$P(ORIFN,";",2),ORVP=+$P(^OR(100,+ORIFN,0),U,2)
"RTN","ORWDXA",149,0)
 S $P(^OR(100,+ORIFN,8,DA,3),U)=0,$P(^(3),U,6,8)=+$E($$NOW^XLFDT,1,12)_U_DUZ_U_OREASON
"RTN","ORWDXA",150,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT  ; Last Activity
"RTN","ORWDXA",151,0)
 S ORNP=+$P($G(^OR(100,+ORIFN,8,DA,0)),U,3)
"RTN","ORWDXA",152,0)
 S ORB=+ORVP_U_+ORIFN_U_ORNP_"^0" D EN^OCXOERR(ORB) ; notification
"RTN","ORWDXA",153,0)
 D GETBYIFN^ORWORR(.REC,ORIFN)
"RTN","ORWDXA",154,0)
 Q
"RTN","ORWDXA",155,0)
FLAGTXT(LST,ORID)      ; Return flag reason
"RTN","ORWDXA",156,0)
 N FLAG
"RTN","ORWDXA",157,0)
 S FLAG=$G(^OR(100,+ORID,8,$P(ORID,";",2),3))
"RTN","ORWDXA",158,0)
 S LST(1)="FLAGGED: "_$$FMTE^XLFDT($P(FLAG,U,3))_" by "_$P($G(^VA(200,+$P(FLAG,U,4),0)),U)
"RTN","ORWDXA",159,0)
 S LST(2)=$P(FLAG,U,5) ; reason
"RTN","ORWDXA",160,0)
 Q
"RTN","ORWDXA",161,0)
WCGET(LST,ORID) ; Return ward comments
"RTN","ORWDXA",162,0)
 N I,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",163,0)
 S I=0 F  S I=$O(^OR(100,ORIFN,8,ACT,5,I)) Q:'I  S LST(I)=$G(^(I,0))
"RTN","ORWDXA",164,0)
 Q
"RTN","ORWDXA",165,0)
WCPUT(ERR,ORID,WCLST) ; Set ward comments for order
"RTN","ORWDXA",166,0)
 N DIERR,ERRLST,ORIFN,ACT S ORIFN=+ORID,ACT=+$P(ORID,";",2)
"RTN","ORWDXA",167,0)
 D WP^DIE(100.008,ACT_","_ORIFN_",",50,"","WCLST","ERRLST")
"RTN","ORWDXA",168,0)
 S ERR="" I $D(DIERR) S ERR="An error occurred while saving comments."
"RTN","ORWDXA",169,0)
 Q
"RTN","ORWORB")
0^12^B39716863
"RTN","ORWORB",1,0)
ORWORB ; slc/dee/REV - RPC functions which return user alert ;10:12 am JAN 31, 2001
"RTN","ORWORB",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,148**;Dec 17, 1997
"RTN","ORWORB",3,0)
 ;
"RTN","ORWORB",4,0)
URGENLST(ORY) ;return array of the  urgency for the notification
"RTN","ORWORB",5,0)
 N ORSRV,ORERROR
"RTN","ORWORB",6,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","ORWORB",7,0)
 D GETLST^XPAR(.ORY,"USR^SRV.`"_$G(ORSRV)_"^DIV^SYS^PKG","ORB URGENCY","I",.ORERROR)
"RTN","ORWORB",8,0)
 Q
"RTN","ORWORB",9,0)
 ;
"RTN","ORWORB",10,0)
FASTUSER(ORY) ;return current user's notifications across all patients
"RTN","ORWORB",11,0)
 N STRTDATE,STOPDATE,ORTOT,I,ORX,ORURG,URG,ORN,SORT,ORN0
"RTN","ORWORB",12,0)
 S STRTDATE="",STOPDATE=""
"RTN","ORWORB",13,0)
 D USER^XQALERT("^TMP(""ORB"",$J)",DUZ,STRTDATE,STOPDATE)
"RTN","ORWORB",14,0)
 S ORTOT=^TMP("ORB",$J)
"RTN","ORWORB",15,0)
 F I=1:1:ORTOT S ORX=$P(^TMP("ORB",$J,I),U,2) D
"RTN","ORWORB",16,0)
 . I $P(ORX,";")="NO-ID" K ^TMP("ORB",$J,I) Q
"RTN","ORWORB",17,0)
 . I $P(ORX,";")="AFJX" K ^TMP("ORB",$J,I) Q
"RTN","ORWORB",18,0)
 . I ($P(ORX,",")'="OR")&($E($P(ORX,";"),1,3)'="TIU") K ^TMP("ORB",$J,I) Q
"RTN","ORWORB",19,0)
 . I $P(ORX,",")'="OR" S ORURG=2
"RTN","ORWORB",20,0)
 . E  D
"RTN","ORWORB",21,0)
 . . S ORN=$P($P(ORX,";"),",",3)
"RTN","ORWORB",22,0)
 . . D URGENCY^ORQORB(.URG,ORN)
"RTN","ORWORB",23,0)
 . . S ORURG=$S($G(URG)>0:URG,1:2)
"RTN","ORWORB",24,0)
 . . S ORN0=^ORD(100.9,ORN,0)
"RTN","ORWORB",25,0)
 . . I $P(ORN0,U,6)="INFODEL"&($P(ORN0,U,7)="ORB3FUP2") D
"RTN","ORWORB",26,0)
 . . . S ^TMP("ORB",$J,I)="I"_$E(^TMP("ORB",$J,I),2,$L(^TMP("ORB",$J,I)))
"RTN","ORWORB",27,0)
 . S ^TMP("ORB",$J,I)=^TMP("ORB",$J,I)_U_ORURG
"RTN","ORWORB",28,0)
 D SORT^ORQORB(.SORT) S SORT=$S($L($G(SORT)):SORT,1:"P")
"RTN","ORWORB",29,0)
 S ^TMP("ORB",$J,0)=SORT
"RTN","ORWORB",30,0)
 S ^TMP("ORB",$J)=""
"RTN","ORWORB",31,0)
 S ORY=$NA(^TMP("ORB",$J))
"RTN","ORWORB",32,0)
 Q
"RTN","ORWORB",33,0)
 ;
"RTN","ORWORB",34,0)
GETDATA(ORY,XQAID) ; return XQADATA for an alert
"RTN","ORWORB",35,0)
 N SHOWADD
"RTN","ORWORB",36,0)
 S ORY=""
"RTN","ORWORB",37,0)
 Q:$G(XQAID)=""!('$D(^XTV(8992,"AXQA",XQAID)))
"RTN","ORWORB",38,0)
 D GETACT^XQALERT(XQAID)
"RTN","ORWORB",39,0)
 S ORY=XQADATA
"RTN","ORWORB",40,0)
 I ($E(XQAID,1,3)="TIU"),(+ORY>0) D
"RTN","ORWORB",41,0)
 . S SHOWADD=1
"RTN","ORWORB",42,0)
 . S ORY=ORY_$$RESOLVE^TIUSRVLO(+ORY)
"RTN","ORWORB",43,0)
 K XQAID,XQADATA,XQAOPT,XQAROU
"RTN","ORWORB",44,0)
 Q
"RTN","ORWORB",45,0)
 ;
"RTN","ORWORB",46,0)
KILUNSNO(Y,ORVP) ; Delete unsigned order alerts if no unsigned orders remaining
"RTN","ORWORB",47,0)
 S ORVP=ORVP_";DPT("
"RTN","ORWORB",48,0)
 D UNOTIF^ORCSIGN
"RTN","ORWORB",49,0)
 Q
"RTN","ORWORB",50,0)
 ;
"RTN","ORWORB",51,0)
UNFLORD(Y,DFN,XQAID) ; -- auto-unflag orders?/delete alert
"RTN","ORWORB",52,0)
 Q:'$L(DFN)!('$L(XQAID))
"RTN","ORWORB",53,0)
 N ORI,ORIFN,ORA,XQAKILL,ORN,ORBY,ORAUTO,ORUNF
"RTN","ORWORB",54,0)
 S ORN=+$O(^ORD(100.9,"B","FLAGGED ORDERS",0))
"RTN","ORWORB",55,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORN)
"RTN","ORWORB",56,0)
 D LIST^ORQOR1(.ORBY,DFN,"ALL",12,"","")
"RTN","ORWORB",57,0)
 S ORAUTO=+$$GET^XPAR("ALL","ORPF AUTO UNFLAG")
"RTN","ORWORB",58,0)
 S ORI=0 F  S ORI=$O(ORBY(ORI)) Q:ORI'>0  D
"RTN","ORWORB",59,0)
 . I ORAUTO D  ; unflag
"RTN","ORWORB",60,0)
 . . S ORUNF=+$E($$NOW^XLFDT,1,12)_U_DUZ_"^Auto-Unflagged"
"RTN","ORWORB",61,0)
 . . S ORIFN=$P(ORBY(ORI),U),ORA=+$P(ORIFN,";",2)
"RTN","ORWORB",62,0)
 . . I ORIFN,$D(^OR(100,+ORIFN,0)) S $P(^(8,ORA,3),U)=0,$P(^(3),U,6,8)=ORUNF ; unflag
"RTN","ORWORB",63,0)
 I ORAUTO!(+$G(ORBY(1))=0) D DELETE^XQALERT
"RTN","ORWORB",64,0)
 Q
"RTN","ORWORB",65,0)
KILEXMED(Y,ORDFN)  ; -- Delete expiring meds notification if no expiring meds remaining
"RTN","ORWORB",66,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",67,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",68,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",69,0)
 N XQAKILL,ORNIFN,ORVP
"RTN","ORWORB",70,0)
 S ORNIFN=$O(^ORD(100.9,"B","MEDICATIONS EXPIRING",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",71,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; expiring meds notif
"RTN","ORWORB",72,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",73,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",74,0)
 Q
"RTN","ORWORB",75,0)
KILEXOI(Y,ORDFN,ORNIFN)  ; -- Delete expiring flagged OI notification if no flagged expiring OI remaining
"RTN","ORWORB",76,0)
 N ORDG,ORLST S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",77,0)
 D AGET^ORWORR(.ORLST,ORDFN,5,ORDG)
"RTN","ORWORB",78,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",79,0)
 N XQAKILL,ORVP
"RTN","ORWORB",80,0)
 S ORVP=ORDFN_";DPT("
"RTN","ORWORB",81,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN) ; flagged expiring OI notifications
"RTN","ORWORB",82,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",83,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",84,0)
 Q
"RTN","ORWORB",85,0)
KILUNVOR(Y,ORDFN)  ; -- Delete UNVERIFIED ORDER notification if none remaining within current admission/30 days
"RTN","ORWORB",86,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",87,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",88,0)
 ;get current admission date/time:
"RTN","ORWORB",89,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",90,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",91,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",92,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",93,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",94,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",95,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",96,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",97,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",98,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",99,0)
 Q
"RTN","ORWORB",100,0)
KILUNVMD(Y,ORDFN)  ; -- Delete UNVERIFIED MEDS notification if none remaining within current admission/30 days
"RTN","ORWORB",101,0)
 N DFN,ORDG,ORLST,ORBDT,OREDT S ORDG=$$DG^ORQOR1("RX")
"RTN","ORWORB",102,0)
 S OREDT=$$NOW^XLFDT
"RTN","ORWORB",103,0)
 ;get current admission date/time:
"RTN","ORWORB",104,0)
 S DFN=ORDFN,VA200="" D INP^VADPT
"RTN","ORWORB",105,0)
 S ORBDT=$P($G(VAIN(7)),U)
"RTN","ORWORB",106,0)
 S ORBDT=$S('$L($G(ORBDT)):$$FMADD^XLFDT(OREDT,"-30"),1:ORBDT)  ;<= if no admission use past 30 days
"RTN","ORWORB",107,0)
 D AGET^ORWORR(.ORLST,ORDFN,9,ORDG,ORBDT,OREDT)
"RTN","ORWORB",108,0)
 Q:+(@ORLST@(.1))  ;more left
"RTN","ORWORB",109,0)
 N XQAKILL,ORVP,ORNIFN
"RTN","ORWORB",110,0)
 S ORNIFN=$O(^ORD(100.9,"B","UNVERIFIED MEDICATION ORDER",0)),ORVP=ORDFN_";DPT("
"RTN","ORWORB",111,0)
 S XQAKILL=$$XQAKILL^ORB3F1(ORNIFN)
"RTN","ORWORB",112,0)
 I $D(XQAID) D DELETE^XQALERT
"RTN","ORWORB",113,0)
 I '$D(XQAID) S XQAID=$P($G(^ORD(100.9,ORNIFN,0)),U,2)_","_+ORVP_","_ORNIFN D DELETEA^XQALERT K XQAID
"RTN","ORWORB",114,0)
 Q
"RTN","ORWORB",115,0)
ESORD(ORY,XQAID)   ;order(s) requiring electronic signature follow-up
"RTN","ORWORB",116,0)
 K XQAKILL
"RTN","ORWORB",117,0)
 N ORPT,ORDG,ORBXQAID,ORY,ORX,ORZ,ORDERS,ORDNUM,ORQUIT,ORBLMDEL
"RTN","ORWORB",118,0)
 S ORBXQAID=XQAID,ORDERS=0,ORQUIT=0
"RTN","ORWORB",119,0)
 S ORPT=$P($P(XQAID,";"),",",2)  ;get pt dfn from xqaid
"RTN","ORWORB",120,0)
 S ORDG=$$DG^ORQOR1("ALL")
"RTN","ORWORB",121,0)
 ;the FLG code for UNSIGNED orders in ORQ1 is '11'
"RTN","ORWORB",122,0)
 ;get unsigned orders - if none exist, delete alert then quit:
"RTN","ORWORB",123,0)
 D EN^ORQ1(ORPT_";DPT(",ORDG,11,"","","",0,0)
"RTN","ORWORB",124,0)
 S ORX="",ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""  I +$G(^TMP("ORR",$J,ORX,"TOT"))<1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",125,0)
 ;
"RTN","ORWORB",126,0)
 ;user does not have ORES key, delete user's alert:
"RTN","ORWORB",127,0)
 I '$D(^XUSEC("ORES",DUZ)) S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID) K ^TMP("ORR",$J) Q
"RTN","ORWORB",128,0)
 ;
"RTN","ORWORB",129,0)
 ;if prov is NOT linked to pt via attending, primary or teams:
"RTN","ORWORB",130,0)
 I $$PPLINK^ORQPTQ1(DUZ,ORPT)=0 D
"RTN","ORWORB",131,0)
 .S ORX="" F  S ORX=$O(^TMP("ORR",$J,ORX)) Q:ORX=""!(ORDERS=1)  D
"RTN","ORWORB",132,0)
 ..S ORZ="" F  S ORZ=$O(^TMP("ORR",$J,ORX,ORZ)) Q:+ORZ=0!(ORDERS=1)  D
"RTN","ORWORB",133,0)
 ...S ORDNUM=^TMP("ORR",$J,ORX,ORZ)
"RTN","ORWORB",134,0)
 ...;quit if this unsigned order's last action was made by the user
"RTN","ORWORB",135,0)
 ...I DUZ=+$$UNSIGNOR^ORQOR2(ORDNUM) S ORDERS=1
"RTN","ORWORB",136,0)
 .I ORDERS'=1 D  ;provider has no outstanding unsigned orders for pt
"RTN","ORWORB",137,0)
 ..S XQAKILL=1 D DEL^ORB3FUP1(.ORY,ORBXQAID)  ;delete alert for this user
"RTN","ORWORB",138,0)
 K ^TMP("ORR",$J)
"RTN","ORWORB",139,0)
 Q
"RTN","ORWORB",140,0)
 ;
"RTN","ORWORB",141,0)
TXTFUP(ROOT,DFN,NOTIF,XQADATA) ; Follow-up for text messages
"RTN","ORWORB",142,0)
 ;
"RTN","ORWORB",143,0)
 I NOTIF=67 D CHGRAD
"RTN","ORWORB",144,0)
 Q
"RTN","ORWORB",145,0)
 ;
"RTN","ORWORB",146,0)
CHGRAD ;GUI follow-up for Imaging Request Changed (#67)
"RTN","ORWORB",147,0)
 S ROOT=$NA(^TMP($J,"RAE4"))
"RTN","ORWORB",148,0)
 K @ROOT
"RTN","ORWORB",149,0)
 D SET1^RAO7PC4  ;DBIA #3563
"RTN","ORWORB",150,0)
 Q
"RTN","ORWORB",151,0)
 ;
"RTN","ORWPCE1")
0^7^B57264333
"RTN","ORWPCE1",1,0)
ORWPCE1 ;SLC/KCM - PCE Calls from CPRS GUI;Feb 04, 2002
"RTN","ORWPCE1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,116,132,148**;Dec 17, 1997
"RTN","ORWPCE1",3,0)
GETVSIT(VSTR,DFN) ; lookup a visit
"RTN","ORWPCE1",4,0)
 N PKG,SRC,ORPXAPI,OK,ORVISIT
"RTN","ORWPCE1",5,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",6,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",7,0)
 S ORPXAPI("ENCOUNTER",1,"ENC D/T")=$P(VSTR,";",2)
"RTN","ORWPCE1",8,0)
 S ORPXAPI("ENCOUNTER",1,"PATIENT")=DFN
"RTN","ORWPCE1",9,0)
 S ORPXAPI("ENCOUNTER",1,"HOS LOC")=+VSTR
"RTN","ORWPCE1",10,0)
 S ORPXAPI("ENCOUNTER",1,"SERVICE CATEGORY")=$P(VSTR,";",3)
"RTN","ORWPCE1",11,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",12,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORVISIT)
"RTN","ORWPCE1",13,0)
 Q ORVISIT
"RTN","ORWPCE1",14,0)
DQDEL ; background call to DATA2PCE and DELVFILE
"RTN","ORWPCE1",15,0)
 N VISIT,VAL
"RTN","ORWPCE1",16,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",17,0)
 S VISIT=$$GETVSIT(VSTR,DFN)
"RTN","ORWPCE1",18,0)
 S VAL=$$DELVFILE^PXAPI("ALL",VISIT,"","TEXT INTEGRATION UTILITIES")
"RTN","ORWPCE1",19,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",20,0)
 Q
"RTN","ORWPCE1",21,0)
DQSAVE ; Background Call to DATA2PCE
"RTN","ORWPCE1",22,0)
 N PKG,SRC,TYP,CODE,IEN,OK,I,X,ORPXAPI,ORPXDEL
"RTN","ORWPCE1",23,0)
 N CAT,NARR,ROOT,ROOT2,ORAVST
"RTN","ORWPCE1",24,0)
 N PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT,MOD,MODCNT,MODIDX,MODS
"RTN","ORWPCE1",25,0)
 N COM,COMMENT,COMMENTS
"RTN","ORWPCE1",26,0)
 N DFN,PROBLEMS,PXAPREDT,ORCPTDEL
"RTN","ORWPCE1",27,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ORWPCE1",28,0)
 S PKG=$O(^DIC(9.4,"B","ORDER ENTRY/RESULTS REPORTING",0))
"RTN","ORWPCE1",29,0)
 S SRC="TEXT INTEGRATION UTILITIES"
"RTN","ORWPCE1",30,0)
 S (PRV,CPT,ICD,IMM,SK,PED,HF,XAM,TRT)=0
"RTN","ORWPCE1",31,0)
 S I="" F  S I=$O(PCELIST(I)) Q:'I  S X=PCELIST(I) D
"RTN","ORWPCE1",32,0)
 . S X=PCELIST(I),TYP=$P(X,U),CODE=$P(X,U,2),CAT=$P(X,U,3),NARR=$P(X,U,4)
"RTN","ORWPCE1",33,0)
 . I $E(TYP,1,3)="PRV" D  Q
"RTN","ORWPCE1",34,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",35,0)
 . . S PRV=PRV+1
"RTN","ORWPCE1",36,0)
 . . S ROOT="ORPXAPI(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",37,0)
 . . S ROOT2="ORPXDEL(""PROVIDER"","_PRV_")"
"RTN","ORWPCE1",38,0)
 . . I $E(TYP,4)'="-" D
"RTN","ORWPCE1",39,0)
 . . . S @ROOT@("NAME")=CODE
"RTN","ORWPCE1",40,0)
 . . . S @ROOT@("PRIMARY")=$P(X,U,6)
"RTN","ORWPCE1",41,0)
 . . S @ROOT2@("NAME")=CODE
"RTN","ORWPCE1",42,0)
 . . S @ROOT2@("DELETE")=1
"RTN","ORWPCE1",43,0)
 . . S PXAPREDT=1 ;Allow edit of primary flag
"RTN","ORWPCE1",44,0)
 . I TYP="VST" D  Q
"RTN","ORWPCE1",45,0)
 . . S ROOT="ORPXAPI(""ENCOUNTER"",1)"
"RTN","ORWPCE1",46,0)
 . . I CODE="DT" S @ROOT@("ENC D/T")=$P(X,U,3) Q
"RTN","ORWPCE1",47,0)
 . . I CODE="PT" S @ROOT@("PATIENT")=$P(X,U,3),DFN=$P(X,U,3) Q
"RTN","ORWPCE1",48,0)
 . . I CODE="HL" S @ROOT@("HOS LOC")=$P(X,U,3) Q
"RTN","ORWPCE1",49,0)
 . . ;I CODE="PR" S @ROOT@("PARENT")=$P(X,U,3) Q prevents checkout! 
"RTN","ORWPCE1",50,0)
 . . I CODE="VC" S @ROOT@("SERVICE CATEGORY")=$P(X,U,3) Q
"RTN","ORWPCE1",51,0)
 . . I CODE="SC" S @ROOT@("SC")=$P(X,U,3) Q
"RTN","ORWPCE1",52,0)
 . . I CODE="AO" S @ROOT@("AO")=$P(X,U,3) Q
"RTN","ORWPCE1",53,0)
 . . I CODE="IR" S @ROOT@("IR")=$P(X,U,3) Q
"RTN","ORWPCE1",54,0)
 . . I CODE="EC" S @ROOT@("EC")=$P(X,U,3) Q
"RTN","ORWPCE1",55,0)
 . . I CODE="MST" S @ROOT@("MST")=$P(X,U,3) Q
"RTN","ORWPCE1",56,0)
 . . I CODE="HNC" S @ROOT@("HNC")=$P(X,U,3) Q
"RTN","ORWPCE1",57,0)
 . . I CODE="OL" D  Q
"RTN","ORWPCE1",58,0)
 . . . I +$P(X,U,3) S @ROOT@("INSTITUTION")=$P(X,U,3)
"RTN","ORWPCE1",59,0)
 . . . E  I $P(X,U,4)'="",$P(X,U,4)'="0" D
"RTN","ORWPCE1",60,0)
 . . . . I $$PATCH^XPDUTL("PX*1.0*96") S @ROOT@("OUTSIDE LOCATION")=$P(X,U,4)
"RTN","ORWPCE1",61,0)
 . . . . E  S @ROOT@("COMMENT")="OUTSIDE LOCATION:  "_$P(X,U,4)
"RTN","ORWPCE1",62,0)
 . I $E(TYP,1,3)="CPT" D  Q
"RTN","ORWPCE1",63,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",64,0)
 . . S CPT=CPT+1,ROOT="ORPXAPI(""PROCEDURE"","_CPT_")"
"RTN","ORWPCE1",65,0)
 . . S IEN=+$O(^ICPT("B",CODE,0))
"RTN","ORWPCE1",66,0)
 . . S @ROOT@("PROCEDURE")=IEN
"RTN","ORWPCE1",67,0)
 . . I +$P(X,U,9) D
"RTN","ORWPCE1",68,0)
 . . . S MODS=$P(X,U,9),MODCNT=+MODS
"RTN","ORWPCE1",69,0)
 . . . F MODIDX=1:1:MODCNT D
"RTN","ORWPCE1",70,0)
 . . . . S MOD=$P($P(MODS,";",MODIDX+1),"/")
"RTN","ORWPCE1",71,0)
 . . . . S @ROOT@("MODIFIERS",MOD)=""
"RTN","ORWPCE1",72,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",73,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",74,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",75,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",76,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PROCEDURE^"_CPT
"RTN","ORWPCE1",77,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0,ORCPTDEL=CPT
"RTN","ORWPCE1",78,0)
 . I $E(TYP,1,3)="POV" D  Q
"RTN","ORWPCE1",79,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",80,0)
 . . S ICD=ICD+1,ROOT="ORPXAPI(""DX/PL"","_ICD_")"
"RTN","ORWPCE1",81,0)
 . . S IEN=+$O(^ICD9("AB",CODE_" ",0))
"RTN","ORWPCE1",82,0)
 . . S @ROOT@("DIAGNOSIS")=IEN
"RTN","ORWPCE1",83,0)
 . . S @ROOT@("PRIMARY")=$P(X,U,5)
"RTN","ORWPCE1",84,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",85,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",86,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",87,0)
 . . I $L($P(X,U,7)),$P(X,U,7)=1 S @ROOT@("PL ADD")=$P(X,U,7),PROBLEMS(ICD)=NARR_U_CODE
"RTN","ORWPCE1",88,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="DX/PL^"_ICD
"RTN","ORWPCE1",89,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",90,0)
 . I $E(TYP,1,3)="IMM" D  Q
"RTN","ORWPCE1",91,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",92,0)
 . . S IMM=IMM+1,ROOT="ORPXAPI(""IMMUNIZATION"","_IMM_")"
"RTN","ORWPCE1",93,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",94,0)
 . . S:$L($P(X,U,5)) @ROOT@("SERIES")=$P(X,U,5)
"RTN","ORWPCE1",95,0)
 . . S:$L($P(X,U,5)) @ROOT@("REACTION")=$P(X,U,7)
"RTN","ORWPCE1",96,0)
 . . S:$L($P(X,U,8)) @ROOT@("CONTRAINDICATED")=$P(X,U,8)
"RTN","ORWPCE1",97,0)
 . . S:$L($P(X,U,9)) @ROOT@("REFUSED")=$P(X,U,9)
"RTN","ORWPCE1",98,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",99,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="IMMUNIZATION^"_IMM
"RTN","ORWPCE1",100,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",101,0)
 . I $E(TYP,1,2)="SK" D  Q
"RTN","ORWPCE1",102,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",103,0)
 . . S SK=SK+1,ROOT="ORPXAPI(""SKIN TEST"","_SK_")"
"RTN","ORWPCE1",104,0)
 . . S @ROOT@("TEST")=CODE
"RTN","ORWPCE1",105,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",106,0)
 . . S:$L($P(X,U,7)) @ROOT@("READING")=$P(X,U,7)
"RTN","ORWPCE1",107,0)
 . . S:$L($P(X,U,8)) @ROOT@("D/T READ")=$P(X,U,8)
"RTN","ORWPCE1",108,0)
 . . S:$L($P(X,U,9)) @ROOT@("EVENT D/T")=$P(X,U,9)
"RTN","ORWPCE1",109,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",110,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="SKIN TEST^"_SK
"RTN","ORWPCE1",111,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",112,0)
 . I $E(TYP,1,3)="PED" D  Q
"RTN","ORWPCE1",113,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",114,0)
 . . S PED=PED+1,ROOT="ORPXAPI(""PATIENT ED"","_PED_")"
"RTN","ORWPCE1",115,0)
 . . S @ROOT@("TOPIC")=CODE
"RTN","ORWPCE1",116,0)
 . . S:$L($P(X,U,5)) @ROOT@("UNDERSTANDING")=$P(X,U,5)
"RTN","ORWPCE1",117,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",118,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="PATIENT ED^"_PED
"RTN","ORWPCE1",119,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",120,0)
 . I $E(TYP,1,2)="HF" D  Q
"RTN","ORWPCE1",121,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",122,0)
 . . S HF=HF+1,ROOT="ORPXAPI(""HEALTH FACTOR"","_HF_")"
"RTN","ORWPCE1",123,0)
 . . S @ROOT@("HEALTH FACTOR")=CODE
"RTN","ORWPCE1",124,0)
 . . S:$L($P(X,U,5)) @ROOT@("LEVEL/SEVERITY")=$P(X,U,5)
"RTN","ORWPCE1",125,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",126,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="HEALTH FACTOR^"_HF
"RTN","ORWPCE1",127,0)
 . . I $E(TYP,3)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",128,0)
 . I $E(TYP,1,3)="XAM" D  Q
"RTN","ORWPCE1",129,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",130,0)
 . . S XAM=XAM+1,ROOT="ORPXAPI(""EXAM"","_XAM_")"
"RTN","ORWPCE1",131,0)
 . . S @ROOT@("EXAM")=CODE
"RTN","ORWPCE1",132,0)
 . . S:$L($P(X,U,5)) @ROOT@("RESULT")=$P(X,U,5)
"RTN","ORWPCE1",133,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",134,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="EXAM^"_XAM
"RTN","ORWPCE1",135,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1
"RTN","ORWPCE1",136,0)
 . I $E(TYP,1,3)="TRT" D  Q
"RTN","ORWPCE1",137,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",138,0)
 . . S TRT=TRT+1,ROOT="ORPXAPI(""TREATMENT"","_TRT_")"
"RTN","ORWPCE1",139,0)
 . . S @ROOT@("IMMUN")=CODE
"RTN","ORWPCE1",140,0)
 . . S:$L(CAT) @ROOT@("CATEGORY")=CAT
"RTN","ORWPCE1",141,0)
 . . S:$L(NARR) @ROOT@("NARRATIVE")=NARR
"RTN","ORWPCE1",142,0)
 . . S:$L($P(X,U,5)) @ROOT@("QTY")=$P(X,U,5)
"RTN","ORWPCE1",143,0)
 . . S:$P(X,U,6)>0 @ROOT@("ENC PROVIDER")=$P(X,U,6)
"RTN","ORWPCE1",144,0)
 . . S:$L($P(X,U,10))>0 COMMENT($P(X,U,10))="TREATMENT^"_TRT
"RTN","ORWPCE1",145,0)
 . . I $E(TYP,4)="-" S @ROOT@("DELETE")=1,@ROOT@("QTY")=0
"RTN","ORWPCE1",146,0)
 . I $E(TYP,1,3)="COM" D  Q
"RTN","ORWPCE1",147,0)
 . . Q:'$L(CODE)
"RTN","ORWPCE1",148,0)
 . . Q:'$L(CAT)
"RTN","ORWPCE1",149,0)
 . . S COMMENTS(CODE)=$P(X,U,3,999)
"RTN","ORWPCE1",150,0)
 ;Store the comments
"RTN","ORWPCE1",151,0)
 S COM=""
"RTN","ORWPCE1",152,0)
 F  S COM=$O(COMMENT(COM)) Q:COM=""  S:$D(COMMENTS(COM)) ORPXAPI($P(COMMENT(COM),"^",1),$P(COMMENT(COM),"^",2),"COMMENT")=COMMENTS(COM)
"RTN","ORWPCE1",153,0)
 ;
"RTN","ORWPCE1",154,0)
 ;Remove any problems to add that the patient already has as active problems
"RTN","ORWPCE1",155,0)
 I $D(PROBLEMS),$D(DFN) D
"RTN","ORWPCE1",156,0)
 . N ORWPROB,ORPROBIX
"RTN","ORWPCE1",157,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",158,0)
 . D DSELECT^GMPLENFM
"RTN","ORWPCE1",159,0)
 . S ORPROBIX=0
"RTN","ORWPCE1",160,0)
 . F  S ORPROBIX=$O(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",161,0)
 .. S ORWPROB=$P(^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS",ORPROBIX),"^",2,3)
"RTN","ORWPCE1",162,0)
 .. S ORWPROB($S($E(ORWPROB,1)="$":$E(ORWPROB,2,255),1:ORWPROB))=""
"RTN","ORWPCE1",163,0)
 . K ^TMP("IB",$J,"INTERFACES","GMP SELECT PATIENT ACTIVE PROBLEMS")
"RTN","ORWPCE1",164,0)
 . Q:'$D(ORWPROB)
"RTN","ORWPCE1",165,0)
 . S ORPROBIX=""
"RTN","ORWPCE1",166,0)
 . F  S ORPROBIX=$O(PROBLEMS(ORPROBIX)) Q:'ORPROBIX  D
"RTN","ORWPCE1",167,0)
 .. S:$D(ORWPROB(PROBLEMS(ORPROBIX))) ORPXAPI("DX/PL",ORPROBIX,"PL ADD")=0
"RTN","ORWPCE1",168,0)
 ;
"RTN","ORWPCE1",169,0)
 I $$MDS(.ORPXAPI,$G(ORLOC)) S ORPXAPI("ENCOUNTER",1,"CHECKOUT D/T")=$$NOW^XLFDT
"RTN","ORWPCE1",170,0)
 S ORPXAPI("ENCOUNTER",1,"ENCOUNTER TYPE")="P"
"RTN","ORWPCE1",171,0)
DATA2PCE ;
"RTN","ORWPCE1",172,0)
 I $G(PXAPREDT)!($G(ORCPTDEL)) D
"RTN","ORWPCE1",173,0)
 . M ORPXDEL("ENCOUNTER")=ORPXAPI("ENCOUNTER")
"RTN","ORWPCE1",174,0)
 . I $G(ORCPTDEL) M ORPXDEL("PROCEDURE",ORCPTDEL)=ORPXAPI("PROCEDURE",ORCPTDEL)
"RTN","ORWPCE1",175,0)
 . S OK=$$DATA2PCE^PXAPI("ORPXDEL",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",176,0)
 S OK=$$DATA2PCE^PXAPI("ORPXAPI",PKG,SRC,.ORAVST)
"RTN","ORWPCE1",177,0)
 I OK>0,+NOTEIEN,+ORAVST D  ; NOTEIEN only set on inpatient encounters
"RTN","ORWPCE1",178,0)
 .N OROK,ORX
"RTN","ORWPCE1",179,0)
 .S ORX(1207)=ORAVST
"RTN","ORWPCE1",180,0)
 .D FILE^TIUSRVP(.OROK,NOTEIEN,.ORX,1)
"RTN","ORWPCE1",181,0)
 S ZTSTAT=0  ; clear sync flag
"RTN","ORWPCE1",182,0)
 Q
"RTN","ORWPCE1",183,0)
 ;
"RTN","ORWPCE1",184,0)
MDS(X,ORLOC) ; return TRUE if checkout is needed 
"RTN","ORWPCE1",185,0)
 I $$CHKOUT^ORWPCE2(ORLOC) Q 1
"RTN","ORWPCE1",186,0)
 N I,ORAUTO,OROK
"RTN","ORWPCE1",187,0)
 S (OROK,I)=0
"RTN","ORWPCE1",188,0)
 F  S I=$O(X("DX/PL",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",189,0)
 . I $G(X("DX/PL",I,"DIAGNOSIS")) S OROK=1
"RTN","ORWPCE1",190,0)
 I 'OROK D
"RTN","ORWPCE1",191,0)
 .S I=0 F  S I=$O(X("PROCEDURE",I)) Q:'I  D  Q:OROK
"RTN","ORWPCE1",192,0)
 .. I $G(X("PROCEDURE",I,"PROCEDURE")) S OROK=1
"RTN","ORWPCE1",193,0)
 I $D(X("PROVIDER",1,"NAME")) S OROK=1
"RTN","ORWPCE1",194,0)
 Q OROK
"RTN","ORWRA")
0^14^B6121652
"RTN","ORWRA",1,0)
ORWRA ; ALB/MJK/REV/JDL -Imaging Calls ;6/20/02  12:20
"RTN","ORWRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,109,135,132,148**;Dec 17, 1997
"RTN","ORWRA",3,0)
EXAMS(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",4,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",5,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",6,0)
 D GET(0)
"RTN","ORWRA",7,0)
 Q
"RTN","ORWRA",8,0)
EXAMS1(ROOT,DFN) ; Return imaging exams
"RTN","ORWRA",9,0)
 ; RPC: ORWRA IMAGING EXAMS
"RTN","ORWRA",10,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",11,0)
 D GET(1)
"RTN","ORWRA",12,0)
 Q
"RTN","ORWRA",13,0)
GET(GSITE)      ;Get the data
"RTN","ORWRA",14,0)
 N I,ID,RADATA,STRING,SITE
"RTN","ORWRA",15,0)
 S RADATA=$NA(^TMP($J,"RAE1",DFN))
"RTN","ORWRA",16,0)
 S ROOT=$NA(^TMP($J,"ORAEXAMS"))
"RTN","ORWRA",17,0)
 K @RADATA,@ROOT
"RTN","ORWRA",18,0)
 ;
"RTN","ORWRA",19,0)
 ; -- set date range
"RTN","ORWRA",20,0)
 D GETDEFG(.STRING)
"RTN","ORWRA",21,0)
 D EN1^RAO7PC1(DFN,$P(STRING,U),$P(STRING,"^",2),$P(STRING,"^",3))
"RTN","ORWRA",22,0)
 ;
"RTN","ORWRA",23,0)
 ; -- reformat data array for rpc
"RTN","ORWRA",24,0)
 S I=0,ID="",SITE=""
"RTN","ORWRA",25,0)
 I $G(GSITE) S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)_U
"RTN","ORWRA",26,0)
 F  S ID=$O(@RADATA@(ID)) Q:ID=""  D
"RTN","ORWRA",27,0)
 . S I=I+1
"RTN","ORWRA",28,0)
 . S @ROOT@(I)=SITE_ID_U_(9999999.9999-ID)_U_@RADATA@(ID)
"RTN","ORWRA",29,0)
 K @RADATA
"RTN","ORWRA",30,0)
 Q
"RTN","ORWRA",31,0)
 ;
"RTN","ORWRA",32,0)
GETDEFG(Y) ; -- get default context settings for GUI imaging reports
"RTN","ORWRA",33,0)
 D GETIMG^ORWTPD(.Y,"")
"RTN","ORWRA",34,0)
 Q
"RTN","ORWRA",35,0)
GETDEF(Y) ; -- get default context settings for LM imaging reports
"RTN","ORWRA",36,0)
 N BEG,CONTEXT,END,MAX
"RTN","ORWRA",37,0)
 S CONTEXT=$$GET^XPAR("ALL","ORCH CONTEXT REPORTS")
"RTN","ORWRA",38,0)
 S BEG=$$DT^ORCHTAB1($P(CONTEXT,";"))
"RTN","ORWRA",39,0)
 S END=$$DT^ORCHTAB1($P(CONTEXT,";",2))
"RTN","ORWRA",40,0)
 S MAX=$P(CONTEXT,";",5)
"RTN","ORWRA",41,0)
 D OP^XQCHK
"RTN","ORWRA",42,0)
 I $P($G(XQCY0),"^",1)="DVBA CAPRI GUI" D
"RTN","ORWRA",43,0)
 .S BEG=$$DT^ORCHTAB1("T-36500")
"RTN","ORWRA",44,0)
 .S END=$$DT^ORCHTAB1("T")
"RTN","ORWRA",45,0)
 .S MAX="9999"
"RTN","ORWRA",46,0)
 S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWRA",47,0)
 Q
"RTN","ORWRA",48,0)
 ;
"RTN","ORWRA",49,0)
RPT1(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX) ; -- return imaging report
"RTN","ORWRA",50,0)
 D RPT(.ROOT,.DFN,.ORID,.ALPHA,.OMEGA,.DTRANGE,.REMOTE)
"RTN","ORWRA",51,0)
 Q
"RTN","ORWRA",52,0)
RPT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE) ; -- return imaging report
"RTN","ORWRA",53,0)
 ;  RPC: ORWRA REPORT TEXT
"RTN","ORWRA",54,0)
 ;  See RPC definition for details on input and output parameters
"RTN","ORWRA",55,0)
 ; -- init locals and globals
"RTN","ORWRA",56,0)
 N ID,LCNT,ORVP,EXAMDATE,CASENMBR
"RTN","ORWRA",57,0)
 S RADATA=$NA(^TMP($J,"RAE3"))
"RTN","ORWRA",58,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWRA",59,0)
 K @RADATA,@ROOT
"RTN","ORWRA",60,0)
 ; 
"RTN","ORWRA",61,0)
 ; -- set up exam id and call to get report text
"RTN","ORWRA",62,0)
 S ID=$TR(ORID,"-",U)
"RTN","ORWRA",63,0)
 ;
"RTN","ORWRA",64,0)
 ; -- set up counter and vp local for dfn for formating call
"RTN","ORWRA",65,0)
 S LCNT=0,ORVP=DFN_";DPT("
"RTN","ORWRA",66,0)
 D XRAYS^ORCXPND1
"RTN","ORWRA",67,0)
 K @RADATA
"RTN","ORWRA",68,0)
 Q
"RTN","ORWRA",69,0)
 ;
"RTN","ORWRA",70,0)
TEST ; -- test to get exam list
"RTN","ORWRA",71,0)
 N I,ROOT,DFN
"RTN","ORWRA",72,0)
 S DFN=16
"RTN","ORWRA",73,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",74,0)
 W !,"Root: ",ROOT
"RTN","ORWRA",75,0)
 S I=0 F  S I=$O(@ROOT@(I)) Q:'I  W !,@ROOT@(I)
"RTN","ORWRA",76,0)
 Q
"RTN","ORWRA",77,0)
 ;
"RTN","ORWRA",78,0)
TEST1 ; -- test to print reprt for first 3 exams
"RTN","ORWRA",79,0)
 N ORI,ROOT,ROOT1,L,X,DFN
"RTN","ORWRA",80,0)
 S DFN=16
"RTN","ORWRA",81,0)
 D EXAMS1(.ROOT,DFN)
"RTN","ORWRA",82,0)
 S ORI=0 F  S ORI=$O(@ROOT@(ORI)) Q:'ORI  D  Q:ORI=3
"RTN","ORWRA",83,0)
 . S X=@ROOT@(ORI)
"RTN","ORWRA",84,0)
 . D RPT1(.ROOT1,DFN,$P(X,U))
"RTN","ORWRA",85,0)
 . S L=0 F  S L=$O(@ROOT1@(L)) Q:'L  W !,@ROOT1@(L,0)
"RTN","ORWRA",86,0)
 Q
"RTN","ORWSR")
0^11^B27717336
"RTN","ORWSR",1,0)
ORWSR ;SLC/REV-Surgery RPCs ;4/2/01  10:18 [3/12/02 3:42pm]
"RTN","ORWSR",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,116,132,148**;Dec 17, 1997
"RTN","ORWSR",3,0)
 ;
"RTN","ORWSR",4,0)
SHOWSURG(ORY)     ;is Surgery ES patch installed?
"RTN","ORWSR",5,0)
 S ORY=$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",6,0)
 Q:+ORY=0
"RTN","ORWSR",7,0)
 S ORY=$$GET^XPAR("ALL","ORWOR SHOW SURGERY TAB",1)
"RTN","ORWSR",8,0)
 Q
"RTN","ORWSR",9,0)
LIST(ORY,ORDFN,ORBDT,OREDT,ORCTXT,ORMAX)        ;RETURN LIST OF SURGERY CASES FOR A PATIENT
"RTN","ORWSR",10,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",11,0)
 N I,J,X,SHOWADD,SHOWDOCS
"RTN","ORWSR",12,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",13,0)
 Q:'+ORDFN
"RTN","ORWSR",14,0)
 S:'$G(ORCTXT) ORCTXT=1
"RTN","ORWSR",15,0)
 S:'$G(ORBDT) ORBDT=""
"RTN","ORWSR",16,0)
 S:'$G(OREDT) OREDT=""
"RTN","ORWSR",17,0)
 S:'$G(ORMAX) ORMAX=""
"RTN","ORWSR",18,0)
 S (SHOWDOCS,SHOWADD)=1
"RTN","ORWSR",19,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",20,0)
 S I=0
"RTN","ORWSR",21,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",22,0)
 . S X=@ORY@(I),J=0
"RTN","ORWSR",23,0)
 . S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",24,0)
 . S $P(X,U,14)=ORCTXT
"RTN","ORWSR",25,0)
 . S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",26,0)
 . S @ORY@(I)=X
"RTN","ORWSR",27,0)
 . F  S J=$O(@ORY@(I,J)) Q:+J=0  D
"RTN","ORWSR",28,0)
 . . S X=@ORY@(I,J)
"RTN","ORWSR",29,0)
 . . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",30,0)
 . . S @ORY@(I,J)=X
"RTN","ORWSR",31,0)
 Q
"RTN","ORWSR",32,0)
CASELIST(ORY,ORDFN) ; retrieve list of cases, but no documents
"RTN","ORWSR",33,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",34,0)
 Q:'+ORDFN
"RTN","ORWSR",35,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",36,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",37,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",38,0)
 S I=0
"RTN","ORWSR",39,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",40,0)
  . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",41,0)
 Q
"RTN","ORWSR",42,0)
GTSURCTX(Y,ORUSER) ; Returns current Notes view context for user
"RTN","ORWSR",43,0)
 N OCCLIM,SHOWSUB
"RTN","ORWSR",44,0)
 S Y=$$GET^XPAR("ALL","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",45,0)
 Q
"RTN","ORWSR",46,0)
SVSURCTX(Y,ORCTXT) ; Save new Notes view preferences for user
"RTN","ORWSR",47,0)
 N TMP
"RTN","ORWSR",48,0)
 S TMP=$$GET^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1)
"RTN","ORWSR",49,0)
 I TMP'="" D  Q
"RTN","ORWSR",50,0)
 . D CHG^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",51,0)
 D ADD^XPAR(DUZ_";VA(200,","ORCH CONTEXT SURGERY",1,ORCTXT)
"RTN","ORWSR",52,0)
 Q
"RTN","ORWSR",53,0)
 ;
"RTN","ORWSR",54,0)
OPTOP(ORY,ORCASE,ORSHWRPT)       ; Return OpTop for a surgical case, without summary statement
"RTN","ORWSR",55,0)
 ; IF ORSHWRPT INCLUDE OPERATIVE SUMMARY AFTER OPTOP
"RTN","ORWSR",56,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",57,0)
 Q:+$G(ORCASE)=0
"RTN","ORWSR",58,0)
 N ORFLAG
"RTN","ORWSR",59,0)
 S ORFLAG=$S(+$G(ORSHWRPT):2,1:1)
"RTN","ORWSR",60,0)
 S ORY=$NA(^TMP("OROP",$J))
"RTN","ORWSR",61,0)
 D OPTOP^SROSRPT(+ORCASE,ORFLAG,ORY)
"RTN","ORWSR",62,0)
 Q
"RTN","ORWSR",63,0)
OPTOPNOR(ORY,ORCASE,ORSHWRPT)       ; Return OpTop for a NON-OR surgical case, without summary statement
"RTN","ORWSR",64,0)
 ; IF SHOWRPT, INCLUDE OPERATIVE SUMMARY AFTER OPTOP
"RTN","ORWSR",65,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",66,0)
 Q:+$G(ORCASE)=0
"RTN","ORWSR",67,0)
 N ORFLAG
"RTN","ORWSR",68,0)
 S ORFLAG=$S(+$G(ORSHWRPT):2,1:1)
"RTN","ORWSR",69,0)
 S ORY=$NA(^TMP("ORNOR",$J))
"RTN","ORWSR",70,0)
 D OPTOP^SRONP(+ORCASE,ORFLAG,ORY)
"RTN","ORWSR",71,0)
 Q
"RTN","ORWSR",72,0)
ONECASE(ORY,ORTIUDA) ;Given a TIU document, return the case and related documents
"RTN","ORWSR",73,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")!(+$G(ORTIUDA)=0)
"RTN","ORWSR",74,0)
 N ORCASE
"RTN","ORWSR",75,0)
 D GET1405^TIUSRVR(.ORCASE,ORTIUDA)
"RTN","ORWSR",76,0)
 I +ORCASE'>0 S ORY=ORCASE Q
"RTN","ORWSR",77,0)
 D GETONE(.ORY,+ORCASE)
"RTN","ORWSR",78,0)
 Q
"RTN","ORWSR",79,0)
GETONE(ORY,ORCASE)      ; called by ONECASE and RPTTEXT 
"RTN","ORWSR",80,0)
 ;Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",81,0)
 N ORTMP,J,SHOWADD,ORCTXT
"RTN","ORWSR",82,0)
 S SHOWADD=1,ORCTXT=1
"RTN","ORWSR",83,0)
 D ONE^SROESTV("ORY",+ORCASE)
"RTN","ORWSR",84,0)
 S X=ORY(+ORCASE),J=0
"RTN","ORWSR",85,0)
 S $P(X,U,6)=$$NON^SROESTV(+X)
"RTN","ORWSR",86,0)
 S $P(X,U,14)=ORCTXT
"RTN","ORWSR",87,0)
 S $P(X,U,13)=$P(X,U,5),$P(X,U,5)=""
"RTN","ORWSR",88,0)
 S ORTMP(0)=X
"RTN","ORWSR",89,0)
 F  S J=$O(ORY(+ORCASE,J)) Q:+J=0  D
"RTN","ORWSR",90,0)
 . S X=ORY(+ORCASE,J)
"RTN","ORWSR",91,0)
 . S:(($P(X,U,14)=ORCTXT)!($P(X,U,14)="")) $P(X,U,14)=+$P(X,U,10)
"RTN","ORWSR",92,0)
 . S ORTMP(J)=X
"RTN","ORWSR",93,0)
 K ORY M ORY=ORTMP
"RTN","ORWSR",94,0)
 Q
"RTN","ORWSR",95,0)
SHOWOPTP(ORY,ORCASE)    ;Should OpTop be displayed on signature?
"RTN","ORWSR",96,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",97,0)
 S ORY=$$OPTOP^SROESTV(+ORCASE)
"RTN","ORWSR",98,0)
 Q
"RTN","ORWSR",99,0)
ISNONOR(ORY,ORCASE)     ;Is the procedure a non-OR procedure?
"RTN","ORWSR",100,0)
 I '$$PATCH^XPDUTL("SR*3.0*100") S ORY=0 Q
"RTN","ORWSR",101,0)
 S ORY=$$NON^SROESTV(+ORCASE)
"RTN","ORWSR",102,0)
 Q
"RTN","ORWSR",103,0)
RPTLIST(ORY,ORDFN) ;Return list of surgery reports for reports tab
"RTN","ORWSR",104,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ORY)  Q
"RTN","ORWSR",105,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",106,0)
 Q:'+ORDFN
"RTN","ORWSR",107,0)
 N ORBDT,OREDT,ORMAX,I,SHOWDOCS,X,SITE
"RTN","ORWSR",108,0)
 S (ORBDT,OREDT,ORMAX)="",SHOWDOCS=0
"RTN","ORWSR",109,0)
 S ORY=$NA(^TMP("ORLIST",$J))
"RTN","ORWSR",110,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",2)_";"_$P(SITE,"^",3)
"RTN","ORWSR",111,0)
 D LIST^SROESTV(.ORY,ORDFN,ORBDT,OREDT,ORMAX,SHOWDOCS)
"RTN","ORWSR",112,0)
 S I=0
"RTN","ORWSR",113,0)
 F  S I=$O(@ORY@(I)) Q:+I=0  D
"RTN","ORWSR",114,0)
 . S X=$P(@ORY@(I),U,2),$P(@ORY@(I),U,2)=$P(@ORY@(I),U,3),$P(@ORY@(I),U,3)=X
"RTN","ORWSR",115,0)
 . S $P(@ORY@(I),U,4)=$P($P(@ORY@(I),U,4),";",2)
"RTN","ORWSR",116,0)
 . S @ORY@(I)=SITE_U_@ORY@(I)
"RTN","ORWSR",117,0)
 Q
"RTN","ORWSR",118,0)
RPTTEXT(ROOT,DFN,ORID,ALPHA,OMEGA,DTRANGE,REMOTE,ORMAX) ; -- return surgery report
"RTN","ORWSR",119,0)
 ;I '$$PATCH^XPDUTL("SR*3.0*100") D NOTYET(.ROOT)  Q
"RTN","ORWSR",120,0)
 Q:'$$PATCH^XPDUTL("SR*3.0*100")
"RTN","ORWSR",121,0)
 Q:+ORID=0
"RTN","ORWSR",122,0)
 N X,ORI,J,ORDOC,ORCASE,CNT,LINES,ORSEP,ORTMP
"RTN","ORWSR",123,0)
 S (X,ORI)="",$P(ORSEP,"=",74)=""
"RTN","ORWSR",124,0)
 S ROOT=$NA(^TMP("ORXPND",$J))
"RTN","ORWSR",125,0)
 K @ROOT
"RTN","ORWSR",126,0)
 S CNT=0
"RTN","ORWSR",127,0)
 D GETONE(.ORCASE,ORID)
"RTN","ORWSR",128,0)
 S (ORI,J)=""
"RTN","ORWSR",129,0)
 F  S ORI=$O(ORCASE(ORI)) Q:ORI=""  D
"RTN","ORWSR",130,0)
 . S ORTMP(ORID,ORI)=ORCASE(ORI)
"RTN","ORWSR",131,0)
 K ORCASE M ORCASE=ORTMP
"RTN","ORWSR",132,0)
 S ORI=""
"RTN","ORWSR",133,0)
 F  S ORI=$O(ORCASE(ORID,ORI)) Q:ORI=""  D
"RTN","ORWSR",134,0)
 . Q:'$L($P(ORCASE(ORID,ORI),U,10))
"RTN","ORWSR",135,0)
 . Q:$E($P(ORCASE(ORID,ORI),U,2),1,8)="Addendum"
"RTN","ORWSR",136,0)
 . D TGET^TIUSRVR1(.ORDOC,+ORCASE(ORID,ORI),"VIEW")
"RTN","ORWSR",137,0)
 . S J="",LINES=0
"RTN","ORWSR",138,0)
 . F  S J=$O(@ORDOC@(J)) Q:J=""  D
"RTN","ORWSR",139,0)
 . . I $D(@ORDOC@(J))=10 D
"RTN","ORWSR",140,0)
 . . . S @ROOT@(J+CNT,0)=@ORDOC@(J,0),LINES=LINES+1
"RTN","ORWSR",141,0)
 . . E  S @ROOT@(J+CNT,0)=@ORDOC@(J),LINES=LINES+1
"RTN","ORWSR",142,0)
 . K ORDOC,ORY(ORID) S CNT=CNT+LINES+1
"RTN","ORWSR",143,0)
 . S @ROOT@(CNT,0)=ORSEP,CNT=CNT+1
"RTN","ORWSR",144,0)
 I CNT=0 S @ROOT@(CNT,0)="No reports are available for this case."
"RTN","ORWSR",145,0)
 Q
"RTN","ORWSR",146,0)
NOTYET(ROOT) ; -- standard not available display text
"RTN","ORWSR",147,0)
 D SETITEM(.ROOT,"Report not available at this time.")
"RTN","ORWSR",148,0)
 Q
"RTN","ORWSR",149,0)
SETITEM(ROOT,X) ; -- set item in list
"RTN","ORWSR",150,0)
 S @ROOT@($O(@ROOT@(9999),-1)+1)=X
"RTN","ORWSR",151,0)
 Q
"RTN","ORWTPD")
0^13^B12359172
"RTN","ORWTPD",1,0)
ORWTPD ; slc/jdl - Personal Reference Tool ;6/20/02 11:40am
"RTN","ORWTPD",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**109,120,132,148**;Dec 17,1997
"RTN","ORWTPD",3,0)
 ;; Allow user to customize the CPRS reports date/time
"RTN","ORWTPD",4,0)
 ;; and max occurences setting
"RTN","ORWTPD",5,0)
 ;
"RTN","ORWTPD",6,0)
SUDF(Y,VALUE) ;----Set user default for all CPRS reports
"RTN","ORWTPD",7,0)
 N ERR S ERR=""
"RTN","ORWTPD",8,0)
 I VALUE=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I") D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,ERR) K ERR Q
"RTN","ORWTPD",9,0)
 E  D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,VALUE,ERR)
"RTN","ORWTPD",10,0)
 S Y=1
"RTN","ORWTPD",11,0)
 K ERR,VALUES1
"RTN","ORWTPD",12,0)
 Q
"RTN","ORWTPD",13,0)
 ;
"RTN","ORWTPD",14,0)
 ;
"RTN","ORWTPD",15,0)
SUINDV(Y,RPTS,VALUE) ;----Set user individual time/occ setting
"RTN","ORWTPD",16,0)
 ; RPTS format: RPTIen^RPTIen^RPTIen such as 1^2^3
"RTN","ORWTPD",17,0)
 I $L(RPTS)=0 Q
"RTN","ORWTPD",18,0)
 N ERR,RPTID,P1,P7 S ERR=0
"RTN","ORWTPD",19,0)
 S (P1,P7)=""
"RTN","ORWTPD",20,0)
 F I=1:1:$L(RPTS,"^") S RPTID=$P(RPTS,U,I) D
"RTN","ORWTPD",21,0)
 . S P1=$P($G(^ORD(101.24,RPTID,0)),U),P7=$P($G(^(0)),U,7)
"RTN","ORWTPD",22,0)
 . I "02345"[P7,(P1'="ORRP IMAGING") D DEL^XPAR("USR.`"_DUZ,"ORWRP TIME/OCC LIMITS INDV",RPTID,ERR) Q
"RTN","ORWTPD",23,0)
 . D EN^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",RPTID,VALUE,ERR)
"RTN","ORWTPD",24,0)
 Q
"RTN","ORWTPD",25,0)
 ;
"RTN","ORWTPD",26,0)
 ;
"RTN","ORWTPD",27,0)
GETIMG(Y,RPT) ; ----Get Image (local only) Time/Occ
"RTN","ORWTPD",28,0)
 N IMGID,BEG,END,MAX
"RTN","ORWTPD",29,0)
 S IMGID=0,Y=""
"RTN","ORWTPD",30,0)
 S IMGID=$O(^ORD(101.24,"B","ORRP IMAGING",0))
"RTN","ORWTPD",31,0)
 D GETINDV(.Y,IMGID)
"RTN","ORWTPD",32,0)
 I $L(Y) D
"RTN","ORWTPD",33,0)
 . S BEG=$$DT^ORCHTAB1($P(Y,";"))
"RTN","ORWTPD",34,0)
 . S END=$$DT^ORCHTAB1($P(Y,";",2))
"RTN","ORWTPD",35,0)
 . S MAX=$P(Y,";",3)
"RTN","ORWTPD",36,0)
 . S Y=BEG_"^"_END_"^"_MAX
"RTN","ORWTPD",37,0)
 I Y="" D GETDEF^ORWRA(.Y)
"RTN","ORWTPD",38,0)
 Q
"RTN","ORWTPD",39,0)
 ;
"RTN","ORWTPD",40,0)
 ;
"RTN","ORWTPD",41,0)
GETINDV(Y,RPT) ;----Get time/occ limits for this report
"RTN","ORWTPD",42,0)
 ;RPT:  Report IEN of 101.24
"RTN","ORWTPD",43,0)
 N CTX,X0,X4,X,IMGCTX
"RTN","ORWTPD",44,0)
 S X0=$G(^ORD(101.24,RPT,0)),X4=$G(^(4))
"RTN","ORWTPD",45,0)
 I "02345"[($P(X0,U,7)),($P(X0,U)'="ORRP IMAGING") Q
"RTN","ORWTPD",46,0)
 S CTX="^DIV^SYS^PKG"
"RTN","ORWTPD",47,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS INDV",RPT,"I")
"RTN","ORWTPD",48,0)
 S:'$L(Y) Y=$$GET^XPAR("USR.`"_DUZ_CTX,"ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",49,0)
 I $P(^ORD(101.24,RPT,0),U,7)=1 S $P(Y,";",3)=""
"RTN","ORWTPD",50,0)
 I $P(X4,"^",2) S X=$P($P(Y,";"),"-",2) I X,X>$P(X4,"^",2) S Y="T-"_$P(X4,"^",2)_";"_$P(Y,";",2,99)
"RTN","ORWTPD",51,0)
 Q
"RTN","ORWTPD",52,0)
 ;
"RTN","ORWTPD",53,0)
 ;
"RTN","ORWTPD",54,0)
GETSETS(Y) ;----Get time/occ limit set for each report
"RTN","ORWTPD",55,0)
 N I,CNT,CAT S I=0,CNT=1,RST=""
"RTN","ORWTPD",56,0)
 F  S I=$O(^ORD(101.24,I)) Q:'I   D
"RTN","ORWTPD",57,0)
 .I $P($G(^ORD(101.24,I,0)),U,8)="R",$P($G(^ORD(101.24,I,0)),U,12)'="M" D
"RTN","ORWTPD",58,0)
 ..S CAT=$P(^ORD(101.24,I,0),U,7) I $S(CAT=1:1,CAT=6:1,1:0)!($P(^(0),U)="ORRP IMAGING") D
"RTN","ORWTPD",59,0)
 ...D GETINDV(.RST,I)
"RTN","ORWTPD",60,0)
 ...I $L($P(^ORD(101.24,I,2),U,4))>0 S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,4)_U_RST
"RTN","ORWTPD",61,0)
 ...E  S Y(CNT)=I_U_$P(^ORD(101.24,I,2),U,3)_U_RST
"RTN","ORWTPD",62,0)
 ... S CNT=CNT+1
"RTN","ORWTPD",63,0)
 K I,CNT,RST,CAT
"RTN","ORWTPD",64,0)
 Q
"RTN","ORWTPD",65,0)
 ;
"RTN","ORWTPD",66,0)
GETDFLT(Y) ;----Get default time/occ limits for all reports
"RTN","ORWTPD",67,0)
 N VALUE
"RTN","ORWTPD",68,0)
 S Y=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",69,0)
 K VALUE
"RTN","ORWTPD",70,0)
 Q
"RTN","ORWTPD",71,0)
 ;
"RTN","ORWTPD",72,0)
 ;
"RTN","ORWTPD",73,0)
RSDFLT(Y) ;----Retrieve sys/pkg level default time/occ setting
"RTN","ORWTPD",74,0)
 N VALUE
"RTN","ORWTPD",75,0)
 S Y=$$GET^XPAR("DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",76,0)
 Q
"RTN","ORWTPD",77,0)
 ;
"RTN","ORWTPD",78,0)
 ;
"RTN","ORWTPD",79,0)
DELDFLT(Y) ;----Delete user's default setting 
"RTN","ORWTPD",80,0)
 N ERR S ERR=""
"RTN","ORWTPD",81,0)
 D NDEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS INDV",.ERR)
"RTN","ORWTPD",82,0)
 D DEL^XPAR(DUZ_";VA(200,","ORWRP TIME/OCC LIMITS ALL",1,.ERR)
"RTN","ORWTPD",83,0)
 K ERR
"RTN","ORWTPD",84,0)
 Q
"RTN","ORWTPD",85,0)
 ;
"RTN","ORWTPD",86,0)
 ;
"RTN","ORWTPD",87,0)
ACTDF(Y) ;----Make default setting take action for each report
"RTN","ORWTPD",88,0)
 N IND,DFLT,VALUE,X,X0,X4,MAX,DFLT1
"RTN","ORWTPD",89,0)
 S DFLT=$$GET^XPAR("USR.`"_DUZ_"^DIV^SYS^PKG","ORWRP TIME/OCC LIMITS ALL",1,"I")
"RTN","ORWTPD",90,0)
 S IND=0,X=$P($P(DFLT,";"),"-",2)
"RTN","ORWTPD",91,0)
 F  S IND=$O(^ORD(101.24,IND)) Q:'IND  S X0=$G(^(IND,0)),X4=$G(^(4)) D
"RTN","ORWTPD",92,0)
 . I $P(X0,"^",8)="R",$P(X0,"^",12)'="M" D
"RTN","ORWTPD",93,0)
 .. S MAX=$P(X4,"^",2),DFLT1=DFLT
"RTN","ORWTPD",94,0)
 .. I MAX,X,X>MAX S DFLT1="T-"_MAX_";"_$P(DFLT,";",2,99)
"RTN","ORWTPD",95,0)
 .. D SUINDV(.Y,IND,DFLT1)
"RTN","ORWTPD",96,0)
 Q
"RTN","ORWU")
0^1^B58780078
"RTN","ORWU",1,0)
ORWU ; SLC/KCM - General Utilites for Windows Calls; 2/28/01 [5/30/02 11:01am]
"RTN","ORWU",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**10,85,132,148**;Dec 17, 1997
"RTN","ORWU",3,0)
 ;
"RTN","ORWU",4,0)
DT(Y,X,%DT) ; Returns internal Fileman Date/Time
"RTN","ORWU",5,0)
 ; change the '00:00' that could be passed so Fileman doesn't reject
"RTN","ORWU",6,0)
 I $L($P(X,"@",2)),("00000000"[$TR($P(X,"@",2),":","")) S $P(X,"@",2)="00:00:01"
"RTN","ORWU",7,0)
 S %DT=$G(%DT,"TS") D ^%DT K %DT
"RTN","ORWU",8,0)
 Q
"RTN","ORWU",9,0)
VALDT(Y,X,%DT) ; Validate date/time entry
"RTN","ORWU",10,0)
 S:'$D(%DT) %DT="TX" D ^%DT
"RTN","ORWU",11,0)
 Q
"RTN","ORWU",12,0)
USERINFO(REC) ; return relevant info for current user
"RTN","ORWU",13,0)
 ; return DUZ^NAME^USRCLS^CANSIGN^ISPROVIDER^ORDERROLE^NOORDER^DTIME^
"RTN","ORWU",14,0)
 ;        COUNTDOWN^ENABLEVERIFY^NOTIFYAPPS^MSGHANG^DOMAIN^SERVICE^
"RTN","ORWU",15,0)
 ;        AUTOSAVE^INITTAB^LASTTAB^WEBACCESS^ALLOWHOLD^ISRPL^RPLLIST^
"RTN","ORWU",16,0)
 ;        CORTABS^RPTTAB
"RTN","ORWU",17,0)
 N X,ORRPL,ORRPL1,ORRPL2,ORTAB,CORTABS,RPTTAB,ORDT,OREFF,OREXP,ORDATEOK
"RTN","ORWU",18,0)
 S REC=DUZ_U_$P(^VA(200,DUZ,0),U)
"RTN","ORWU",19,0)
 S $P(REC,U,3)=$S($D(^XUSEC("ORES",DUZ)):3,$D(^XUSEC("ORELSE",DUZ)):2,$D(^XUSEC("OREMAS",DUZ)):1,1:0)
"RTN","ORWU",20,0)
 S $P(REC,U,4)=$D(^XUSEC("ORES",DUZ))&$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",21,0)
 S $P(REC,U,5)=$D(^XUSEC("PROVIDER",DUZ))
"RTN","ORWU",22,0)
 S $P(REC,U,6)=$$ORDROLE
"RTN","ORWU",23,0)
 S $P(REC,U,7)=$$GET^XPAR("USR^SYS^PKG","ORWOR DISABLE ORDERING",1,"I")
"RTN","ORWU",24,0)
 S $P(REC,U,8)=$$GET^XPAR("USR^SYS","ORWOR TIMEOUT CHART",1,"I")
"RTN","ORWU",25,0)
 I '$P(REC,U,8),$G(DTIME) S $P(REC,U,8)=DTIME
"RTN","ORWU",26,0)
 S $P(REC,U,9)=$$GET^XPAR("USR^SYS^PKG","ORWOR TIMEOUT COUNTDOWN",1,"I")
"RTN","ORWU",27,0)
 S X=$$GET^XPAR("USR^SYS^PKG","ORWOR ENABLE VERIFY",1,"I")
"RTN","ORWU",28,0)
 S $P(REC,U,10)=$S(X=1:1,X=2:0,1:'$P(REC,U,7))
"RTN","ORWU",29,0)
 S $P(REC,U,11)=$$GET^XPAR("USR^SYS^PKG","ORWOR BROADCAST MESSAGES",1,"I")
"RTN","ORWU",30,0)
 S $P(REC,U,12)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTO CLOSE PT MSG",1,"I")
"RTN","ORWU",31,0)
 S $P(REC,U,13)=$$KSP^XUPARAM("WHERE")  ; domain
"RTN","ORWU",32,0)
 S $P(REC,U,14)=+$G(^VA(200,DUZ,5))     ; service/section
"RTN","ORWU",33,0)
 S $P(REC,U,15)=$$GET^XPAR("USR^SYS^PKG","ORWOR AUTOSAVE NOTE",1,"I")
"RTN","ORWU",34,0)
 S $P(REC,U,16)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH INITIAL TAB",1,"I")
"RTN","ORWU",35,0)
 S $P(REC,U,17)=$$GET^XPAR("USR^DIV^SYS^PKG","ORCH USE LAST TAB",1,"I")
"RTN","ORWU",36,0)
 S $P(REC,U,18)=$$GET^XPAR("USR^DIV^SYS^PKG","ORWOR DISABLE WEB ACCESS",1,"I")
"RTN","ORWU",37,0)
 S $P(REC,U,19)=$$GET^XPAR("SYS^PKG","ORWOR DISABLE HOLD ORDERS",1,"I")
"RTN","ORWU",38,0)
 ; Two pieces added by PKS on 11/5/2001 for "Reports Only" functions:
"RTN","ORWU",39,0)
 ; IA# 10060 allows read access to ^VA(200 file.
"RTN","ORWU",40,0)
 S ORRPL=$G(^VA(200,DUZ,101))           ; RPL node.
"RTN","ORWU",41,0)
 S ORRPL1=$P(ORRPL,U)
"RTN","ORWU",42,0)
 S $P(REC,U,20)=ORRPL1                  ; ISRPL piece.
"RTN","ORWU",43,0)
 S ORRPL2=$P(ORRPL,U,2)
"RTN","ORWU",44,0)
 S $P(REC,U,21)=ORRPL2                  ; RPLLIST piece.
"RTN","ORWU",45,0)
 ;
"RTN","ORWU",46,0)
 ; Additional pieces for CPRS tabs access:
"RTN","ORWU",47,0)
 ; IA# 10060 allows read access to ^VA(200.01013 multiple.
"RTN","ORWU",48,0)
 S ORDT=DT                              ; Today.
"RTN","ORWU",49,0)
 S (CORTABS,RPTTAB)=0
"RTN","ORWU",50,0)
 S ORRPL=0
"RTN","ORWU",51,0)
 F  S ORRPL=$O(^VA(200,DUZ,"ORD",ORRPL)) Q:ORRPL<1  D
"RTN","ORWU",52,0)
 .S ORTAB=$G(^VA(200,DUZ,"ORD",ORRPL,0))
"RTN","ORWU",53,0)
 .I ORTAB="" Q
"RTN","ORWU",54,0)
 .S OREFF=$P(ORTAB,U,2)
"RTN","ORWU",55,0)
 .S OREXP=$P(ORTAB,U,3)
"RTN","ORWU",56,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",57,0)
 .I ORTAB="" Q
"RTN","ORWU",58,0)
 .S ORTAB=$G(^ORD(101.13,ORTAB,0))
"RTN","ORWU",59,0)
 .I ORTAB="" Q
"RTN","ORWU",60,0)
 .S ORTAB=$P(ORTAB,U)
"RTN","ORWU",61,0)
 .I ORTAB="" Q
"RTN","ORWU",62,0)
 .S ORTAB=$$UP^XLFSTR(ORTAB)
"RTN","ORWU",63,0)
 .S ORDATEOK=1                             ; Default.
"RTN","ORWU",64,0)
 .I ((OREFF="")!(OREFF>ORDT)) S ORDATEOK=0 ; Eff. date NG.
"RTN","ORWU",65,0)
 .I ORDATEOK  D
"RTN","ORWU",66,0)
 ..I OREXP="" Q                            ; No exp. date.
"RTN","ORWU",67,0)
 ..I (OREXP<ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",68,0)
 ..I (OREXP=ORDT) S ORDATEOK=0             ; Exp. date NG.
"RTN","ORWU",69,0)
 .;
"RTN","ORWU",70,0)
 .; Set TRUE if OK:
"RTN","ORWU",71,0)
 .I ((ORTAB="COR")&(ORDATEOK)) S CORTABS=1
"RTN","ORWU",72,0)
 .I ((ORTAB="RPT")&(ORDATEOK)) S RPTTAB=1
"RTN","ORWU",73,0)
 ;
"RTN","ORWU",74,0)
 ; When done, set all valid tabs for access:
"RTN","ORWU",75,0)
 S $P(REC,U,22)=CORTABS                 ; "Core" tabs.
"RTN","ORWU",76,0)
 S $P(REC,U,23)=RPTTAB                  ; "Reports" tab.
"RTN","ORWU",77,0)
 ;
"RTN","ORWU",78,0)
 Q
"RTN","ORWU",79,0)
 ;
"RTN","ORWU",80,0)
HASKEY(VAL,KEY) ; returns TRUE if the user possesses the security key
"RTN","ORWU",81,0)
 S VAL=''$D(^XUSEC(KEY,DUZ))
"RTN","ORWU",82,0)
 Q
"RTN","ORWU",83,0)
HASOPTN(VAL,OPTION) ; returns TRUE if the user has access to a menu option
"RTN","ORWU",84,0)
 S VAL=+$$ACCESS^XQCHK(DUZ,OPTION)
"RTN","ORWU",85,0)
 I VAL'>0 S VAL=0
"RTN","ORWU",86,0)
 E  S VAL=1
"RTN","ORWU",87,0)
 Q
"RTN","ORWU",88,0)
NPHASKEY(VAL,NP,KEY)    ; returns TRUE if the person has the security key
"RTN","ORWU",89,0)
 S VAL=''$D(^XUSEC(KEY,NP))
"RTN","ORWU",90,0)
 Q
"RTN","ORWU",91,0)
ORDROLE()    ; returns the role a person takes in ordering
"RTN","ORWU",92,0)
 ; VAL: 0=nokey, 1=clerk, 2=nurse, 3=physician, 4=student, 5=bad keys
"RTN","ORWU",93,0)
 ;I '$G(ORWCLVER) Q 0  ; version of client is to old for ordering
"RTN","ORWU",94,0)
 I ($D(^XUSEC("OREMAS",DUZ))+$D(^XUSEC("ORELSE",DUZ))+$D(^XUSEC("ORES",DUZ)))>1 Q 5
"RTN","ORWU",95,0)
 I $D(^XUSEC("OREMAS",DUZ)) Q 1                           ; clerk
"RTN","ORWU",96,0)
 I $D(^XUSEC("ORELSE",DUZ)) Q 2                           ; nurse
"RTN","ORWU",97,0)
 I $D(^XUSEC("ORES",DUZ)),$D(^XUSEC("PROVIDER",DUZ)) Q 3  ; doctor
"RTN","ORWU",98,0)
 I $D(^XUSEC("PROVIDER",DUZ)) Q 4                         ; student
"RTN","ORWU",99,0)
 Q 0
"RTN","ORWU",100,0)
VALIDSIG(ESOK,X) ; returns TRUE if valid electronic signature
"RTN","ORWU",101,0)
 S X=$$DECRYP^XUSRB1(X),ESOK=0                   ; network encrypted
"RTN","ORWU",102,0)
 D HASH^XUSHSHP
"RTN","ORWU",103,0)
 I X=$P($G(^VA(200,+DUZ,20)),U,4) S ESOK=1
"RTN","ORWU",104,0)
 Q
"RTN","ORWU",105,0)
TOOLMENU(ORLST) ; returns a list of items for the Tools menu
"RTN","ORWU",106,0)
 N ANENT
"RTN","ORWU",107,0)
 S ANENT="ALL^"_$S($G(^VA(200,DUZ,5)):"^SRV.`"_+$G(^(5)),1:"")
"RTN","ORWU",108,0)
 D GETLST^XPAR(.ORLST,ANENT,"ORWT TOOLS MENU","N")
"RTN","ORWU",109,0)
 Q
"RTN","ORWU",110,0)
ACTLOC(LOC) ; Function: returns TRUE if active hospital location
"RTN","ORWU",111,0)
 N D0,X I +$G(^SC(LOC,"OOS")) Q 0                ; screen out OOS entry
"RTN","ORWU",112,0)
 S D0=+$G(^SC(LOC,42)) I D0 D WIN^DGPMDDCF Q 'X  ; chk out of svc wards
"RTN","ORWU",113,0)
 S X=$G(^SC(LOC,"I")) I +X=0 Q 1                 ; no inactivate date
"RTN","ORWU",114,0)
 I DT>$P(X,U)&($P(X,U,2)=""!(DT<$P(X,U,2))) Q 0  ; chk reactivate date
"RTN","ORWU",115,0)
 Q 1                                             ; must still be active
"RTN","ORWU",116,0)
 ;
"RTN","ORWU",117,0)
CLINLOC(Y,FROM,DIR) ; Return a set of clinics from HOSPITAL LOCATION
"RTN","ORWU",118,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",119,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",120,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",121,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",122,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="C")!('$$ACTLOC(IEN)) Q
"RTN","ORWU",123,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",124,0)
 Q
"RTN","ORWU",125,0)
INPLOC(Y,FROM,DIR) ;Return a set of wards from HOSPITAL LOCATION
"RTN","ORWU",126,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",127,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",128,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",129,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",130,0)
 . . I ($P($G(^SC(IEN,0)),U,3)'="W") Q
"RTN","ORWU",131,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",132,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",133,0)
 Q
"RTN","ORWU",134,0)
HOSPLOC(Y,FROM,DIR) ; Return a set of locations from HOSPITAL LOCATION
"RTN","ORWU",135,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",136,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",137,0)
 F  Q:I'<CNT  S FROM=$O(^SC("B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",138,0)
 . S IEN="" F  S IEN=$O(^SC("B",FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",139,0)
 . . I '$$ACTLOC(IEN) Q
"RTN","ORWU",140,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",141,0)
 Q
"RTN","ORWU",142,0)
NEWPERS(Y,FROM,DIR,KEY,DATE,ALLUSERS) ; Return a set of names from the NEW PERSON file
"RTN","ORWU",143,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",144,0)
 ;  KEY=screen users by security key (optional)
"RTN","ORWU",145,0)
 ;  DATE=checks for an active person class on this date (optional)
"RTN","ORWU",146,0)
 N I,IEN,CNT S I=0,CNT=44,KEY=$G(KEY),DATE=$G(DATE)
"RTN","ORWU",147,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",148,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),DIR) Q:'IEN  D 
"RTN","ORWU",149,0)
 . . I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ORWU",150,0)
 . . I +$G(ALLUSERS)=0,'$$PROVIDER^XUSER(IEN) Q  ; terminated user
"RTN","ORWU",151,0)
 . . I DATE>0,$$GET^XUA4A72(IEN,DATE)<1 Q
"RTN","ORWU",152,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",153,0)
 Q
"RTN","ORWU",154,0)
GBLREF(VAL,FN) ; return global reference for file number
"RTN","ORWU",155,0)
 S VAL="" Q:'FN
"RTN","ORWU",156,0)
 S VAL=$$ROOT^DILFD(+FN)
"RTN","ORWU",157,0)
 ; I $E($RE(VAL))="," S VAL=$E(VAL,1,$L(VAL)-1)_")"
"RTN","ORWU",158,0)
 ; I $E($RE(VAL))="(" S VAL=$P(VAL,"(",1) 
"RTN","ORWU",159,0)
 Q
"RTN","ORWU",160,0)
GENERIC(Y,FROM,DIR,REF) ; Return a set of entries from xref in REF
"RTN","ORWU",161,0)
 ; .Y=returned list, FROM=text to $O from, DIR=$O direction,
"RTN","ORWU",162,0)
 N I,IEN,CNT S I=0,CNT=44
"RTN","ORWU",163,0)
 F  Q:I'<CNT  S FROM=$O(@REF@(FROM),DIR) Q:FROM=""  D
"RTN","ORWU",164,0)
 . S IEN="" F  S IEN=$O(@REF@(FROM,IEN),DIR) Q:'IEN  D
"RTN","ORWU",165,0)
 . . S I=I+1,Y(I)=IEN_"^"_FROM
"RTN","ORWU",166,0)
 Q
"RTN","ORWU",167,0)
EXTNAME(VAL,IEN,FN) ; return external form of pointer
"RTN","ORWU",168,0)
 ; IEN=internal number, FN=file number
"RTN","ORWU",169,0)
 N REF S REF=$G(^DIC(FN,0,"GL")),VAL=""
"RTN","ORWU",170,0)
 I $L(REF),+IEN S VAL=$P($G(@(REF_IEN_",0)")),U)
"RTN","ORWU",171,0)
 Q
"RTN","ORWU",172,0)
PARAM(VAL,APARAM)       ; return a parameter value for a user
"RTN","ORWU",173,0)
 ; call assumes current user, default entities, single instance
"RTN","ORWU",174,0)
 S VAL=$$GET^XPAR("ALL",APARAM,1,"I")
"RTN","ORWU",175,0)
 Q
"RTN","ORWU",176,0)
DEVICE(Y,FROM,DIR) ; Return a subset of entries from the Device file
"RTN","ORWU",177,0)
 ; .LST(n)=IEN;Name^DisplayName^Location^RMar^PLen
"RTN","ORWU",178,0)
 ; FROM=text to $O from, DIR=$O direction
"RTN","ORWU",179,0)
 N I,IEN,CNT,SHOW,X S I=0,CNT=20
"RTN","ORWU",180,0)
 I FROM["<" S FROM=$RE($P($RE(FROM),"<  ",2))
"RTN","ORWU",181,0)
 F  Q:I'<CNT  S FROM=$O(^%ZIS(1,"B",FROM),DIR) Q:FROM=""  D
"RTN","ORWU",182,0)
 . S IEN=0 F  S IEN=$O(^%ZIS(1,"B",FROM,IEN)) Q:'IEN  D
"RTN","ORWU",183,0)
 .. N X0,X1,X90,X91,X95,XTYPE,XSTYPE,XTIME,%A,%X,POP
"RTN","ORWU",184,0)
 .. Q:'$D(^%ZIS(1,IEN,0))  S X0=^(0),X1=$G(^(1)),X90=$G(^(90)),X91=$G(^(91)),X95=$G(^(95)),XSTYPE=$G(^("SUBTYPE")),XTIME=$G(^("TIME")),XTYPE=$G(^("TYPE"))
"RTN","ORWU",185,0)
 .. I $E($G(^%ZIS(2,+XSTYPE,0)))'="P" Q  ;Printers only
"RTN","ORWU",186,0)
 .. S X=$P(XTYPE,"^") I X'="TRM",X'="HG",X'="HFS",X'="CHAN" Q  ;Device Types
"RTN","ORWU",187,0)
 .. S X=X0 I ($P(X,U,2)="0")!($P(X,U,12)=2) Q  ;Queuing allowed
"RTN","ORWU",188,0)
 .. S X=+X90 I X,(X'>DT) Q  ;Out of Service
"RTN","ORWU",189,0)
 .. I XTIME]"" S %A=$P(XTIME,"^"),%X=$P($H,",",2),%=%X\60#60+(%X\3600*100),%X=$P(%A,"-",2) I %X'<%A&(%'>%X&(%'<%A))!(%X<%A&(%'<%A!(%'>%X))) Q  ;Prohibited Times
"RTN","ORWU",190,0)
 .. S POP=0
"RTN","ORWU",191,0)
 .. I X95]"" S %X=$G(DUZ(0)) I %X'="@" S POP=1 F %A=1:1:$L(%X) I X95[$E(%X,%A) S POP=0 Q
"RTN","ORWU",192,0)
 .. Q:POP  ;Security check
"RTN","ORWU",193,0)
 .. S SHOW=$P(X0,U) I SHOW'=FROM S SHOW=FROM_"  <"_SHOW_">"
"RTN","ORWU",194,0)
 .. S I=I+1,Y(I)=IEN_";"_$P(X0,U)_U_SHOW_U_$P(X1,U)_U_$P(X91,U)_U_$P(X91,U,3)
"RTN","ORWU",195,0)
 Q
"RTN","ORWU",196,0)
URGENCY(Y) ; -- retrieve set values from dd for discharge summary urgency
"RTN","ORWU",197,0)
 N ORDD,I,X
"RTN","ORWU",198,0)
 D FIELD^DID(8925,.09,"","POINTER","ORDD")
"RTN","ORWU",199,0)
 F I=1:1 S X=$P(ORDD("POINTER"),";",I) Q:X=""   S Y(I)=$TR(X,":","^")
"RTN","ORWU",200,0)
 Q
"RTN","ORWU",201,0)
PATCH(VAL,X) ; Return 1 if patch X is installed
"RTN","ORWU",202,0)
 S VAL=$$PATCH^XPDUTL(X)
"RTN","ORWU",203,0)
 Q
"RTN","ORWU",204,0)
VERSRV(VAL,X,CLVER)   ; Return server version of option name
"RTN","ORWU",205,0)
 S ORWCLVER=$G(CLVER)  ; leave in partition for session
"RTN","ORWU",206,0)
 N ORLST
"RTN","ORWU",207,0)
 D FIND^DIC(19,"",1,"X",X,1,,,,"ORLST")
"RTN","ORWU",208,0)
 I 'ORLST("DILIST",0) S VAL="" Q
"RTN","ORWU",209,0)
 S VAL=ORLST("DILIST","ID",1,1)
"RTN","ORWU",210,0)
 S VAL=$P(VAL,"version ",2)
"RTN","ORWU",211,0)
 ;N IEN S VAL="",IEN=$O(^DIC(19,"B",X,0)) Q:'IEN
"RTN","ORWU",212,0)
 ;S VAL=$P($P($G(^DIC(19,IEN,0)),U,2),"version ",2)
"RTN","ORWU",213,0)
 Q
"RTN","ORWU",214,0)
  
"RTN","ORY148")
0^2^B28509445
"RTN","ORY148",1,0)
ORY148 ;SLC/PKS -- postinit rtn for OR*3*148 ;6/21/02  12:04 [7/23/02 2:15pm]
"RTN","ORY148",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**148**;Dec 17, 1997
"RTN","ORY148",3,0)
 ;
"RTN","ORY148",4,0)
 Q
"RTN","ORY148",5,0)
 ;
"RTN","ORY148",6,0)
PRE ; -- preinit
"RTN","ORY148",7,0)
 ;
"RTN","ORY148",8,0)
 Q
"RTN","ORY148",9,0)
 ;
"RTN","ORY148",10,0)
POST ; -- postinit
"RTN","ORY148",11,0)
 ;
"RTN","ORY148",12,0)
 N VER,ORCOUNT
"RTN","ORY148",13,0)
 ;
"RTN","ORY148",14,0)
 S VER=$P($T(VERSION^ORY148),";",3)
"RTN","ORY148",15,0)
 D USERSET
"RTN","ORY148",16,0)
 D PAROUT
"RTN","ORY148",17,0)
 I +$$PATCH^XPDUTL("TIU*1.0*109") D CPREG
"RTN","ORY148",18,0)
 I +$$PATCH^XPDUTL("TIU*1.0*112") D SURGREG
"RTN","ORY148",19,0)
 D MAIL
"RTN","ORY148",20,0)
 ;
"RTN","ORY148",21,0)
 Q
"RTN","ORY148",22,0)
 ;
"RTN","ORY148",23,0)
USERSET ; Queue background task to set user default settings.
"RTN","ORY148",24,0)
 ;
"RTN","ORY148",25,0)
 N ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTSK
"RTN","ORY148",26,0)
 ;
"RTN","ORY148",27,0)
 S ZTRTN="DQSET^ORY148",ZTDESC="OR*3*148 Post Install",ZTIO="",ZTSAVE("DUZ")="",ZTDTH=$H
"RTN","ORY148",28,0)
 D ^%ZTLOAD
"RTN","ORY148",29,0)
 I $G(ZTSK) D MES^XPDUTL("User defaults for OR*3*148 queued as task number "_ZTSK_".")
"RTN","ORY148",30,0)
 I '$G(ZTSK) D MES^XPDUTL("User defaults task did not queue")
"RTN","ORY148",31,0)
 ;
"RTN","ORY148",32,0)
 Q
"RTN","ORY148",33,0)
 ;
"RTN","ORY148",34,0)
DQSET ; Queue background task to set user default settings.
"RTN","ORY148",35,0)
 ;
"RTN","ORY148",36,0)
 S ORCOUNT=0
"RTN","ORY148",37,0)
 S ^TMP("ORY148",$J,1)="Background task for OR*3*148 has completed."
"RTN","ORY148",38,0)
 S ^TMP("ORY148",$J,2)=" "
"RTN","ORY148",39,0)
 S ^TMP("ORY148",$J,3)="The following problems were encountered:"
"RTN","ORY148",40,0)
 S ^TMP("ORY148",$J,4)=" "
"RTN","ORY148",41,0)
 S ORCOUNT=4
"RTN","ORY148",42,0)
 ;
"RTN","ORY148",43,0)
 ; Set user default settings:
"RTN","ORY148",44,0)
 D DEFTABS
"RTN","ORY148",45,0)
 I ORCOUNT=4 S ^TMP("ORY148",$J,5)="No problems encountered."
"RTN","ORY148",46,0)
 ;
"RTN","ORY148",47,0)
 ; Send message with results to user, postmaster:
"RTN","ORY148",48,0)
 N XMSUB,XMTEXT,SMDUZ,SMY
"RTN","ORY148",49,0)
 S XMSUB="Patch OR*3*148 Post-Install Complete"  ; Message subject.
"RTN","ORY148",50,0)
 S XMDUZ="Patch OR*3*148 Post Install"           ; Message "from."
"RTN","ORY148",51,0)
 S XMY(.5)="" S:$G(DUZ) XMY(DUZ)=""              ; To user,postmaster.
"RTN","ORY148",52,0)
 S XMTEXT="^TMP(""ORY148"",$J,"                  ; Text for message.
"RTN","ORY148",53,0)
 D ^XMD
"RTN","ORY148",54,0)
 K ^TMP("ORY148",$J)
"RTN","ORY148",55,0)
 ;
"RTN","ORY148",56,0)
 Q
"RTN","ORY148",57,0)
 ;
"RTN","ORY148",58,0)
DEFTABS ; Default tab, restricted patient list entries for GUI users.
"RTN","ORY148",59,0)
 ;
"RTN","ORY148",60,0)
 N ORZ,ORZZ,OROPT,ORUSER,DIE
"RTN","ORY148",61,0)
 ;
"RTN","ORY148",62,0)
 S OROPT="OR CPRS GUI CHART"
"RTN","ORY148",63,0)
 S OROPT=$$OPTLK^XQCS(OROPT)
"RTN","ORY148",64,0)
 S OROPT=+OROPT
"RTN","ORY148",65,0)
 I OROPT<1  D  Q
"RTN","ORY148",66,0)
 .W !,"No OR CPRS GUI CHART Option found!"
"RTN","ORY148",67,0)
 ;
"RTN","ORY148",68,0)
 ; Establish loop to order through users:
"RTN","ORY148",69,0)
 S ORUSER=0
"RTN","ORY148",70,0)
 F  S ORUSER=$O(^VA(200,ORUSER)) Q:'ORUSER>0  D
"RTN","ORY148",71,0)
 .S ORZ=0
"RTN","ORY148",72,0)
 .S ORZ=$$ACCESS^XQCHK(ORUSER,OROPT) ; Have OR CPRS GUI CHART option?
"RTN","ORY148",73,0)
 .S ORZ=+ORZ
"RTN","ORY148",74,0)
 .S ORZZ=$G(^VA(200,ORUSER,0))
"RTN","ORY148",75,0)
 .S ORZZ=$P(ORZZ,U,4)
"RTN","ORY148",76,0)
 .I ((ORZ>0)!(ORZZ["@"))  D
"RTN","ORY148",77,0)
 ..;
"RTN","ORY148",78,0)
 ..; Set default of "COR" for CPRS tabs multiple:
"RTN","ORY148",79,0)
 ..N ORFDA,ORIEN,ORERR
"RTN","ORY148",80,0)
 ..S ORIEN(1)=ORUSER
"RTN","ORY148",81,0)
 ..S ORFDA(200.010113,"+2,"_ORUSER_",",.01)=1
"RTN","ORY148",82,0)
 ..S ORFDA(200.010113,"+2,"_ORUSER_",",.02)=DT
"RTN","ORY148",83,0)
 ..I ('$D(^VA(200,ORUSER,"ORD",0))) D UPDATE^DIE("","ORFDA","ORIEN","ORERR")
"RTN","ORY148",84,0)
 ..I $D(ORERR)  D
"RTN","ORY148",85,0)
 ...;
"RTN","ORY148",86,0)
 ...; Send installation error message to run under Taskman:
"RTN","ORY148",87,0)
 ...S ORCOUNT=ORCOUNT+1
"RTN","ORY148",88,0)
 ...S ^TMP("ORY148",$J,ORCOUNT)="Could not create default COR Tab entry for user "_ORUSER_"."
"RTN","ORY148",89,0)
 ..;
"RTN","ORY148",90,0)
 ..; Set default of "N" for restricted patient list field:
"RTN","ORY148",91,0)
 ..N ORFDA,ORIEN,ORERR
"RTN","ORY148",92,0)
 ..S ORIEN(1)=ORUSER
"RTN","ORY148",93,0)
 ..S ORFDA(200,ORUSER_",",101.01)=0
"RTN","ORY148",94,0)
 ..I ('$D(^VA(200,ORUSER,101))) D UPDATE^DIE("","ORFDA","ORIEN","ORERR")
"RTN","ORY148",95,0)
 ..I $D(ORERR)  D
"RTN","ORY148",96,0)
 ...;
"RTN","ORY148",97,0)
 ...; Send installation error message to run under Taskman:
"RTN","ORY148",98,0)
 ...S ORCOUNT=ORCOUNT+1
"RTN","ORY148",99,0)
 ...S ^TMP("ORY148",$J,ORCOUNT)="Could not make RPL default NO entry for user "_ORUSER_"."
"RTN","ORY148",100,0)
 ..;
"RTN","ORY148",101,0)
 ..D CLEAN^DILF ; Clean up after DB call.
"RTN","ORY148",102,0)
 ;
"RTN","ORY148",103,0)
 Q
"RTN","ORY148",104,0)
 ;
"RTN","ORY148",105,0)
CPREG ; Register TIU Clinical Procedures RPCs if TIU*1.0*109 present
"RTN","ORY148",106,0)
 N MENU,RPC
"RTN","ORY148",107,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY148",108,0)
 F RPC="TIU IS THIS A CLINPROC?","TIU IDENTIFY CLINPROC CLASS","TIU LONG LIST CLINPROC TITLES"  D INSERT(MENU,RPC)
"RTN","ORY148",109,0)
 Q
"RTN","ORY148",110,0)
 ;
"RTN","ORY148",111,0)
SURGREG ; Register TIU SURGERY RPCs if TIU*1.0*112 present
"RTN","ORY148",112,0)
 N MENU,RPC
"RTN","ORY148",113,0)
 S MENU="OR CPRS GUI CHART"
"RTN","ORY148",114,0)
 F RPC="TIU IS THIS A SURGERY?","TIU IDENTIFY SURGERY CLASS","TIU LONG LIST SURGERY TITLES" D INSERT(MENU,RPC)
"RTN","ORY148",115,0)
 Q
"RTN","ORY148",116,0)
 ;
"RTN","ORY148",117,0)
INSERT(OPTION,RPC) ; Call FM Updater with each RPC
"RTN","ORY148",118,0)
 ; Input  -- OPTION   Option file (#19) Name field (#.01)
"RTN","ORY148",119,0)
 ;           RPC      RPC sub-file (#19.05) RPC field (#.01)
"RTN","ORY148",120,0)
 ; Output -- None
"RTN","ORY148",121,0)
 N FDA,FDAIEN,ERR,DIERR
"RTN","ORY148",122,0)
 S FDA(19,"?1,",.01)=OPTION
"RTN","ORY148",123,0)
 S FDA(19.05,"?+2,?1,",.01)=RPC
"RTN","ORY148",124,0)
 D UPDATE^DIE("E","FDA","FDAIEN","ERR")
"RTN","ORY148",125,0)
 Q
"RTN","ORY148",126,0)
 ;
"RTN","ORY148",127,0)
MAIL ; send bulletin of installation time
"RTN","ORY148",128,0)
 N COUNT,DIFROM,I,START,TEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","ORY148",129,0)
 S COUNT=0
"RTN","ORY148",130,0)
 S XMSUB="Version "_$P($T(VERSION),";;",2)_" Installed"
"RTN","ORY148",131,0)
 S XMDUZ="CPRS PACKAGE"
"RTN","ORY148",132,0)
 F I="G.CPRS GUI INSTALL@ISC-SLC.VA.GOV",DUZ S XMY(I)=""
"RTN","ORY148",133,0)
 S XMTEXT="TEXT("
"RTN","ORY148",134,0)
 ;
"RTN","ORY148",135,0)
 S X=$P($T(VERSION),";;",2)
"RTN","ORY148",136,0)
 D LINE("Version "_X_" has been installed.")
"RTN","ORY148",137,0)
 D LINE(" ")
"RTN","ORY148",138,0)
 D LINE("Install complete:  "_$$FMTE^XLFDT($$NOW^XLFDT()))
"RTN","ORY148",139,0)
 ;
"RTN","ORY148",140,0)
 D ^XMD
"RTN","ORY148",141,0)
 Q
"RTN","ORY148",142,0)
 ;
"RTN","ORY148",143,0)
PAROUT ; Remove entries, parameter "ORWT TOOLS RPT SETTINGS OFF" if found.
"RTN","ORY148",144,0)
 ;
"RTN","ORY148",145,0)
 ; Remove all instances of parameter:
"RTN","ORY148",146,0)
 N DA,DIK,PAR,ENT,INST,DIRUT,DUOUT,DTOUT,ORIEN
"RTN","ORY148",147,0)
 S PAR="ORWT TOOLS RPT SETTINGS OFF"
"RTN","ORY148",148,0)
 ;
"RTN","ORY148",149,0)
 S ORIEN=0
"RTN","ORY148",150,0)
 S ORIEN=$O(^XTV(8989.51,"B",PAR,ORIEN))
"RTN","ORY148",151,0)
 S ORIEN=+ORIEN
"RTN","ORY148",152,0)
 I 'ORIEN Q
"RTN","ORY148",153,0)
 ;
"RTN","ORY148",154,0)
 S ENT=0
"RTN","ORY148",155,0)
 F  S ENT=$O(^XTV(8989.5,"AC",ORIEN,ENT)) Q:'ENT  D
"RTN","ORY148",156,0)
 .S INST=0
"RTN","ORY148",157,0)
 .F  S INST=$O(^XTV(8989.5,"AC",ORIEN,ENT,INST)) Q:INST=""  D  Q
"RTN","ORY148",158,0)
 ..D DEL^XPAR(ENT,ORIEN,INST)
"RTN","ORY148",159,0)
 ;
"RTN","ORY148",160,0)
 ; Remove parameter definition itself:
"RTN","ORY148",161,0)
 S DIK="^XTV(8989.51,"
"RTN","ORY148",162,0)
 S DA=ORIEN
"RTN","ORY148",163,0)
 D ^DIK
"RTN","ORY148",164,0)
 ;
"RTN","ORY148",165,0)
 Q
"RTN","ORY148",166,0)
 ;
"RTN","ORY148",167,0)
LINE(DATA)      ; set text into array
"RTN","ORY148",168,0)
 S COUNT=COUNT+1
"RTN","ORY148",169,0)
 S TEXT(COUNT)=DATA
"RTN","ORY148",170,0)
 Q
"RTN","ORY148",171,0)
 ;
"RTN","ORY148",172,0)
VERSION ;;19.15
"SEC","^DIC",101.13,101.13,0,"AUDIT")

"SEC","^DIC",101.13,101.13,0,"DD")

"SEC","^DIC",101.13,101.13,0,"DEL")

"SEC","^DIC",101.13,101.13,0,"LAYGO")

"SEC","^DIC",101.13,101.13,0,"RD")

"SEC","^DIC",101.13,101.13,0,"WR")

"VER")
8.0^22.0
"^DD",101.13,101.13,0)
FIELD^^1^2
"^DD",101.13,101.13,0,"DDA")
N
"^DD",101.13,101.13,0,"DT")
3020313
"^DD",101.13,101.13,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",101.13,101.13,0,"IX","B",101.13,.01)

"^DD",101.13,101.13,0,"NM","OR CPRS TABS")

"^DD",101.13,101.13,0,"PT",200.010113,.01)

"^DD",101.13,101.13,.01,0)
TAB NAME^RF^^0;1^K:$L(X)>3!($L(X)<3)!'(X'?1P.E) X
"^DD",101.13,101.13,.01,1,0)
^.1
"^DD",101.13,101.13,.01,1,1,0)
101.13^B
"^DD",101.13,101.13,.01,1,1,1)
S ^ORD(101.13,"B",$E(X,1,30),DA)=""
"^DD",101.13,101.13,.01,1,1,2)
K ^ORD(101.13,"B",$E(X,1,30),DA)
"^DD",101.13,101.13,.01,3)
Answer must be 3 characters in length
"^DD",101.13,101.13,.01,8.5)
@
"^DD",101.13,101.13,.01,9)
@
"^DD",101.13,101.13,.01,21,0)
^^1^1^3020313^
"^DD",101.13,101.13,.01,21,1,0)
This field stores CPRS GUI Cover Sheet tab acronyms.
"^DD",101.13,101.13,.01,"DT")
3020314
"^DD",101.13,101.13,1,0)
TAB DESCRIPTION^F^^0;2^K:$L(X)>35!($L(X)<1) X
"^DD",101.13,101.13,1,3)
Answer must be 1-35 characters in length
"^DD",101.13,101.13,1,21,0)
^^1^1^3020313^
"^DD",101.13,101.13,1,21,1,0)
This field stores descriptions of CPRS GUI Cover Sheet tab acronyms.
"^DD",101.13,101.13,1,"DT")
3020314
"^DD",101.24,101.24,0)
FIELD^^10^35
"^DD",101.24,101.24,0,"DDA")
N
"^DD",101.24,101.24,0,"DT")
3011004
"^DD",101.24,101.24,0,"ID",.23)
W:$D(^(2)) "   ",$P(^(2),U,3)
"^DD",101.24,101.24,0,"ID",.24)
W:$D(^(2)) "   ",$P(^(2),U,4)
"^DD",101.24,101.24,0,"IX","AC",101.24,.02)

"^DD",101.24,101.24,0,"IX","B",101.24,.01)

"^DD",101.24,101.24,0,"NM","OE/RR REPORT")

"^DD",101.24,101.24,0,"PT",101.24,.18)

"^DD",101.24,101.24,0,"PT",101.241,.01)

"^DD",101.24,101.24,0,"VRPK")
OR
"^DD",101.24,101.24,.001,0)
NUMBER^NJ5,0^^ ^K:+X'=X!(X>10000)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.001,3)
Type a Number between 1 and 10000, 0 Decimal Digits
"^DD",101.24,101.24,.001,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.001,21,1,0)
This is the Number field for the file.
"^DD",101.24,101.24,.001,"DT")
3000920
"^DD",101.24,101.24,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<3)!'(X'?1P.E) X
"^DD",101.24,101.24,.01,1,0)
^.1^^-1
"^DD",101.24,101.24,.01,1,1,0)
101.24^B
"^DD",101.24,101.24,.01,1,1,1)
S ^ORD(101.24,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.01,1,1,2)
K ^ORD(101.24,"B",$E(X,1,30),DA)
"^DD",101.24,101.24,.01,3)
Answer must be 3-30 characters in length.
"^DD",101.24,101.24,.01,21,0)
^^1^1^3000921^
"^DD",101.24,101.24,.01,21,1,0)
This is the Name of the report.
"^DD",101.24,101.24,.01,"DT")
3010510
"^DD",101.24,101.24,.02,0)
ID^RF^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.02,1,0)
^.1
"^DD",101.24,101.24,.02,1,1,0)
101.24^AC
"^DD",101.24,101.24,.02,1,1,1)
S ^ORD(101.24,"AC",$E(X,1,30),DA)=""
"^DD",101.24,101.24,.02,1,1,2)
K ^ORD(101.24,"AC",$E(X,1,30),DA)
"^DD",101.24,101.24,.02,1,1,"DT")
3001005
"^DD",101.24,101.24,.02,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.02,21,0)
^^4^4^3000921^
"^DD",101.24,101.24,.02,21,1,0)
This is the code that identifies the report.  Each tab in CPRS that
"^DD",101.24,101.24,.02,21,2,0)
uses reports looks for this ID in order to process the report.
"^DD",101.24,101.24,.02,21,3,0)
Each tab also uses a unique set of ID's.  An ID of 5 on the Reports
"^DD",101.24,101.24,.02,21,4,0)
Tab may not identify the same report on a different tab.
"^DD",101.24,101.24,.02,"DT")
3001005
"^DD",101.24,101.24,.03,0)
REMOTE^S^1:YES;^0;3^Q
"^DD",101.24,101.24,.03,21,0)
^^2^2^3000921^
"^DD",101.24,101.24,.03,21,1,0)
This field is used to identify which reports allow remote access through
"^DD",101.24,101.24,.03,21,2,0)
Remote Data Views.
"^DD",101.24,101.24,.03,"DT")
3000907
"^DD",101.24,101.24,.04,0)
QUALIFIER^S^1:HSType;2:DateTime;3:Imaging;4:NutrAssess;19:MedicineProcedure;39:ListView;5:HSComponent;6:HSWPComponent;28:Surgery;^0;4^Q
"^DD",101.24,101.24,.04,21,0)
^.001^2^2^3010531^^^
"^DD",101.24,101.24,.04,21,1,0)
This field identifies which qualifier to use when processing the report.
"^DD",101.24,101.24,.04,21,2,0)
Examples of qualifiers are HSType, DateTime, Imaging and NutrAssess.
"^DD",101.24,101.24,.04,"DT")
3011004
"^DD",101.24,101.24,.05,0)
ROUTINE^FI^^0;5^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.05,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.05,8.5)
@
"^DD",101.24,101.24,.05,9)
@
"^DD",101.24,101.24,.05,21,0)
^.001^1^1^3001026^^^
"^DD",101.24,101.24,.05,21,1,0)
This is the routine that is invoked to produce the report.
"^DD",101.24,101.24,.05,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.05,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.05,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.05,"DT")
3011004
"^DD",101.24,101.24,.06,0)
ENTRY POINT^FI^^0;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.06,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.06,8.5)
@
"^DD",101.24,101.24,.06,9)
@
"^DD",101.24,101.24,.06,21,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,21,1,0)
This is the entry point for the ROUTINE that is invoked to produce the
"^DD",101.24,101.24,.06,21,2,0)
report.
"^DD",101.24,101.24,.06,23,0)
^.001^2^2^3001026^^
"^DD",101.24,101.24,.06,23,1,0)
The Labs Tab does not have a value for this field.  The CPRS executable
"^DD",101.24,101.24,.06,23,2,0)
calls separate RPC's for each report.
"^DD",101.24,101.24,.06,"DT")
3011004
"^DD",101.24,101.24,.07,0)
CATEGORY^S^0:FIXED;1:FIXED W/DATE;2:FIXED W/HEADER;3:FIXED W/DATE&HEADER;4:SPECIALIZED;5:GRAPHIC;6:LISTVIEW;^0;7^Q
"^DD",101.24,101.24,.07,3)
Enter a category for this report
"^DD",101.24,101.24,.07,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.07,21,1,0)
This field puts reports into a category that is evaluated by the GUI
"^DD",101.24,101.24,.07,21,2,0)
when the report is processed.
"^DD",101.24,101.24,.07,"DT")
3010215
"^DD",101.24,101.24,.08,0)
TAB^S^R:REPORTS TAB;L:LABS TAB;C:COVER SHEET;CD:COVER SHEET DETAILS;^0;8^Q
"^DD",101.24,101.24,.08,3)
Enter the appropriate code for this report.
"^DD",101.24,101.24,.08,21,0)
^.001^1^1^3001003^^
"^DD",101.24,101.24,.08,21,1,0)
This fields identifies the appropriate tab for a report in CPRS.
"^DD",101.24,101.24,.08,"DT")
3001011
"^DD",101.24,101.24,.09,0)
MIXEDCASE^S^1:YES;^0;9^Q
"^DD",101.24,101.24,.09,3)
Enter YES to display the list in mixed case
"^DD",101.24,101.24,.09,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.09,21,1,0)
This is used in the cover sheet and is used to display the returned
"^DD",101.24,101.24,.09,21,2,0)
list in mixed case.
"^DD",101.24,101.24,.09,"DT")
3001004
"^DD",101.24,101.24,.1,0)
INVERT^S^1:YES;^0;10^Q
"^DD",101.24,101.24,.1,3)
Enter YES to have the returned list inverted.
"^DD",101.24,101.24,.1,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.1,21,1,0)
This field is used to invert a list of data returned in the Cover sheet
"^DD",101.24,101.24,.1,"DT")
3001004
"^DD",101.24,101.24,.11,0)
TEXT COLOR^S^Black:BLACK;Maroon:MAROON;Green:GREEN;Olive:OLIVE;Purple:PURPLE;Teal:TEAL;Red:RED;Lime:LIME;Yellow:YELLOW;Blue:BLUE;Fuchsia:FUCHSIA;Aqua:AQUA;^0;11^Q
"^DD",101.24,101.24,.11,3)
Enter the color for the text
"^DD",101.24,101.24,.11,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.11,21,1,0)
This field determines the text color for the returned data.
"^DD",101.24,101.24,.11,"DT")
3001004
"^DD",101.24,101.24,.12,0)
TYPE^S^R:REPORT;H:HTML;L:LISTMAN ONLY;S:SELECTION LIST;V:LISTVIEW;M:MENU;^0;12^Q
"^DD",101.24,101.24,.12,3)
Enter the type for this entry.
"^DD",101.24,101.24,.12,21,0)
^.001^1^1^3001017^^
"^DD",101.24,101.24,.12,21,1,0)
This field identifies the type for an entry.
"^DD",101.24,101.24,.12,"DT")
3010315
"^DD",101.24,101.24,.13,0)
RPC^P8994'^XWB(8994,^0;13^Q
"^DD",101.24,101.24,.13,3)
Select the RPC that produces this report.
"^DD",101.24,101.24,.13,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.13,21,1,0)
This is the RPC that is called inside the GUI to produce the report.
"^DD",101.24,101.24,.13,"DT")
3001004
"^DD",101.24,101.24,.14,0)
DATE FORMAT^S^D:DATE ONLY;T:DATE WITH TIME;^0;14^Q
"^DD",101.24,101.24,.14,3)
Enter the code for the desired date format.
"^DD",101.24,101.24,.14,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.14,21,1,0)
This field determines what kind of format to display date/time fields.
"^DD",101.24,101.24,.14,"DT")
3001004
"^DD",101.24,101.24,.15,0)
DATE PIECE^NJ2,0^^0;15^K:+X'=X!(X>15)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.15,3)
Type a Number between 1 and 15, 0 Decimal Digits
"^DD",101.24,101.24,.15,21,0)
^^2^2^3001004^
"^DD",101.24,101.24,.15,21,1,0)
This is used on the Cover Sheet to determine which piece the date field
"^DD",101.24,101.24,.15,21,2,0)
occupies.
"^DD",101.24,101.24,.15,"DT")
3001004
"^DD",101.24,101.24,.16,0)
TAB POSITIONS^F^^0;16^K:$L(X)>15!($L(X)<1) X
"^DD",101.24,101.24,.16,3)
Answer must be 1-15 characters in length.
"^DD",101.24,101.24,.16,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.16,21,1,0)
This is the value that will be used for the Tab property for the listbox
"^DD",101.24,101.24,.16,21,2,0)
associated with this report on the Cover Sheet.
"^DD",101.24,101.24,.16,"DT")
3001005
"^DD",101.24,101.24,.17,0)
PIECES^F^^0;17^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.24,.17,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.24,.17,21,0)
^^2^2^3001011^
"^DD",101.24,101.24,.17,21,1,0)
This field is used by the Cover Sheet to determine what pieces of data
"^DD",101.24,101.24,.17,21,2,0)
to display in the listbox.
"^DD",101.24,101.24,.17,"DT")
3001011
"^DD",101.24,101.24,.18,0)
DETAIL REPORT^*P101.24'^ORD(101.24,^0;18^S DIC("S")="I $P(^(0),""^"",8)=""CD""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",101.24,101.24,.18,3)
Enter the report to get the details for this report.
"^DD",101.24,101.24,.18,12)
Allow only Cover sheet detail type reports
"^DD",101.24,101.24,.18,12.1)
S DIC("S")="I $P(^(0),""^"",8)=""CD"""
"^DD",101.24,101.24,.18,21,0)
^^1^1^3001011^
"^DD",101.24,101.24,.18,21,1,0)
This field is used to get the details of an item on the cover sheet.
"^DD",101.24,101.24,.18,"DT")
3001011
"^DD",101.24,101.24,.19,0)
REPORT TAG^FI^^0;19^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.19,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.19,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.19,21,1,0)
This is the entry point tag for a report extract.
"^DD",101.24,101.24,.19,"DT")
3011004
"^DD",101.24,101.24,.191,0)
REPORT ROUTINE^FI^^0;20^K:$L(X)>8!($L(X)<3) X
"^DD",101.24,101.24,.191,3)
Answer must be 3-8 characters in length.
"^DD",101.24,101.24,.191,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.191,21,1,0)
This is the routine associated with the REPORT TAG for report extracts.
"^DD",101.24,101.24,.191,"DT")
3011004
"^DD",101.24,101.24,.192,0)
REPORT COMPONENT^P142.1'^GMT(142.1,^0;21^Q
"^DD",101.24,101.24,.192,21,0)
^.001^1^1^3010503^^
"^DD",101.24,101.24,.192,21,1,0)
This is the report component associated with this report.
"^DD",101.24,101.24,.192,"DT")
3010503
"^DD",101.24,101.24,.21,0)
PARAM 1^F^^2;1^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.21,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.21,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.21,21,1,0)
This is the 1st parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.21,"DT")
3001004
"^DD",101.24,101.24,.22,0)
PARAM 2^F^^2;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.24,.22,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.24,.22,21,0)
^^1^1^3001004^
"^DD",101.24,101.24,.22,21,1,0)
This is the 2nd parameter passed to the RPC, if needed.
"^DD",101.24,101.24,.22,"DT")
3001004
"^DD",101.24,101.24,.23,0)
HEADING^F^^2;3^K:$L(X)>75!($L(X)<1) X
"^DD",101.24,101.24,.23,1,0)
^.1^^0
"^DD",101.24,101.24,.23,3)
Answer must be 1-75 characters in length.
"^DD",101.24,101.24,.23,21,0)
^^1^1^3001031^
"^DD",101.24,101.24,.23,21,1,0)
This is the heading used on the Cover sheet for the list of items.
"^DD",101.24,101.24,.23,"DT")
3010510
"^DD",101.24,101.24,.24,0)
DESCRIPTIVE TEXT^RF^^2;4^K:$L(X)>55!($L(X)<2) X
"^DD",101.24,101.24,.24,3)
Answer must be 2-55 characters in length.
"^DD",101.24,101.24,.24,21,0)
^.001^2^2^3010510^^
"^DD",101.24,101.24,.24,21,1,0)
This is a more descriptive name than what might be included in the 
"^DD",101.24,101.24,.24,21,2,0)
NAME field.
"^DD",101.24,101.24,.24,"DT")
3010510
"^DD",101.24,101.24,.25,0)
NODE^F^^2;5^K:$L(X)>10!($L(X)<1) X
"^DD",101.24,101.24,.25,3)
Answer must be 1-10 characters in length.
"^DD",101.24,101.24,.25,21,0)
^^2^2^3001005^
"^DD",101.24,101.24,.25,21,1,0)
This is used by the Cover Sheet routines to define the node in the ^XTMP
"^DD",101.24,101.24,.25,21,2,0)
global to store the data.
"^DD",101.24,101.24,.25,"DT")
3001005
"^DD",101.24,101.24,.26,0)
PRINT TAG^FI^^2;6^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.26,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.26,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.26,21,1,0)
This is the entry point tag used when printing reports that do their own
"^DD",101.24,101.24,.26,21,2,0)
Write statements.
"^DD",101.24,101.24,.26,"DT")
3010814
"^DD",101.24,101.24,.27,0)
PRINT ROUTINE^FI^^2;7^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.27,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.27,21,0)
^^2^2^3010614^
"^DD",101.24,101.24,.27,21,1,0)
This is the entry point routine used when printing reports that do their own
"^DD",101.24,101.24,.27,21,2,0)
Write statements.
"^DD",101.24,101.24,.27,"DT")
3010814
"^DD",101.24,101.24,.28,0)
EXTRACT TAG^FI^^2;8^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.28,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.28,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.28,21,1,0)
This is the entry point for the extract routine that pulls the data from
"^DD",101.24,101.24,.28,21,2,0)
package API's and/or package files.
"^DD",101.24,101.24,.28,"DT")
3011004
"^DD",101.24,101.24,.29,0)
EXTRACT ROUTINE^FI^^2;9^K:$L(X)>8!($L(X)<1) X
"^DD",101.24,101.24,.29,3)
Answer must be 1-8 characters in length.
"^DD",101.24,101.24,.29,21,0)
^^2^2^3010711^
"^DD",101.24,101.24,.29,21,1,0)
This is the extract routine that pulls data from package API's and/or
"^DD",101.24,101.24,.29,21,2,0)
package files.
"^DD",101.24,101.24,.29,"DT")
3011004
"^DD",101.24,101.24,.41,0)
SORT ORDER^F^^4;1^K:$L(X)>15!($L(X)<3)!'(X?1N1":"1N) X
"^DD",101.24,101.24,.41,3)
Answer must be 3-15 characters in length.
"^DD",101.24,101.24,.41,21,0)
^^6^6^3010717^
"^DD",101.24,101.24,.41,21,1,0)
This field is used when sorting columns of data on at grid within CPRS.
"^DD",101.24,101.24,.41,21,2,0)
It determines the sort order to be used in a multi-column sort.  The
"^DD",101.24,101.24,.41,21,3,0)
primary sort column is always the column header clicked on by the user.
"^DD",101.24,101.24,.41,21,4,0)
If this field has values in the form #:#, then a multi-column sort is
"^DD",101.24,101.24,.41,21,5,0)
done, using the column numbers identified in this field for the second
"^DD",101.24,101.24,.41,21,6,0)
and third level sorting.
"^DD",101.24,101.24,.41,"DT")
3010717
"^DD",101.24,101.24,.42,0)
MAXIMUM DAYS BACK^NJ4,0^^4;2^K:+X'=X!(X>9999)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.24,.42,3)
Type a Number between 1 and 9999, 0 Decimal Digits
"^DD",101.24,101.24,.42,21,0)
^^1^1^3011004^
"^DD",101.24,101.24,.42,21,1,0)
This field restricts the report date range to the maximum value specified.
"^DD",101.24,101.24,.42,"DT")
3011004
"^DD",101.24,101.24,3,0)
COLUMN HEADERS^101.243^^3;0
"^DD",101.24,101.24,10,0)
ITEM^101.241P^^10;0
"^DD",101.24,101.241,0)
ITEM SUB-FIELD^^.03^3
"^DD",101.24,101.241,0,"DT")
3010215
"^DD",101.24,101.241,0,"IX","B",101.241,.01)

"^DD",101.24,101.241,0,"NM","ITEM")

"^DD",101.24,101.241,0,"UP")
101.24
"^DD",101.24,101.241,.01,0)
ITEM^MP101.24^ORD(101.24,^0;1^Q
"^DD",101.24,101.241,.01,1,0)
^.1
"^DD",101.24,101.241,.01,1,1,0)
101.241^B
"^DD",101.24,101.241,.01,1,1,1)
S ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.241,.01,1,1,2)
K ^ORD(101.24,DA(1),10,"B",$E(X,1,30),DA)
"^DD",101.24,101.241,.01,3)

"^DD",101.24,101.241,.01,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.01,21,1,0)
This is used in building a treeview of reports for CPRS GUI.
"^DD",101.24,101.241,.01,"DT")
3010215
"^DD",101.24,101.241,.02,0)
HEADER TEXT^F^^0;2^K:$L(X)>30!($L(X)<1) X
"^DD",101.24,101.241,.02,3)
Answer must be 1-30 characters in length.
"^DD",101.24,101.241,.02,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.02,21,1,0)
This is the header to be used.
"^DD",101.24,101.241,.02,"DT")
3010215
"^DD",101.24,101.241,.03,0)
SEQUENCE^NJ7,1^^0;3^K:+X'=X!(X>99999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.241,.03,3)
Type a Number between .1 and 99999, 1 Decimal Digit
"^DD",101.24,101.241,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.241,.03,21,1,0)
This is the sequence number for this report.
"^DD",101.24,101.241,.03,"DT")
3010215
"^DD",101.24,101.243,0)
COLUMN HEADERS SUB-FIELD^^.1^10
"^DD",101.24,101.243,0,"DT")
3010727
"^DD",101.24,101.243,0,"IX","B",101.243,.01)

"^DD",101.24,101.243,0,"IX","C",101.243,.03)

"^DD",101.24,101.243,0,"NM","COLUMN HEADERS")

"^DD",101.24,101.243,0,"UP")
101.24
"^DD",101.24,101.243,.01,0)
COLUMN HEADERS^MF^^0;1^K:$L(X)>60!($L(X)<1) X
"^DD",101.24,101.243,.01,1,0)
^.1
"^DD",101.24,101.243,.01,1,1,0)
101.243^B
"^DD",101.24,101.243,.01,1,1,1)
S ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.01,1,1,2)
K ^ORD(101.24,DA(1),3,"B",$E(X,1,30),DA)
"^DD",101.24,101.243,.01,3)
Answer must be 1-60 characters in length.
"^DD",101.24,101.243,.01,21,0)
^.001^1^1^3010709^^^^
"^DD",101.24,101.243,.01,21,1,0)
These are the column headings used on a report in ListView format.
"^DD",101.24,101.243,.01,"DT")
3010709
"^DD",101.24,101.243,.02,0)
VISIBLE^S^0:YES;1:NO;^0;2^Q
"^DD",101.24,101.243,.02,3)
Set this field to NO to hide the column.
"^DD",101.24,101.243,.02,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.02,21,1,0)
This field determines the visible property of the column.
"^DD",101.24,101.243,.02,"DT")
3010420
"^DD",101.24,101.243,.03,0)
SEQUENCE^NJ6,1^^0;3^K:+X'=X!(X>9999)!(X<.1)!(X?.E1"."2N.N) X
"^DD",101.24,101.243,.03,1,0)
^.1
"^DD",101.24,101.243,.03,1,1,0)
101.243^C
"^DD",101.24,101.243,.03,1,1,1)
S ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)=""
"^DD",101.24,101.243,.03,1,1,2)
K ^ORD(101.24,DA(1),3,"C",$E(X,1,30),DA)
"^DD",101.24,101.243,.03,1,1,"DT")
3010321
"^DD",101.24,101.243,.03,3)
Type a Number between .1 and 9999, 1 Decimal Digit
"^DD",101.24,101.243,.03,21,0)
^^1^1^3010215^
"^DD",101.24,101.243,.03,21,1,0)
This is the sequence for the column header.
"^DD",101.24,101.243,.03,"DT")
3010321
"^DD",101.24,101.243,.04,0)
TYPE^S^0:SINGLE PIECE VALUE;1:WORD PROCESSING;^0;4^Q
"^DD",101.24,101.243,.04,3)
Enter '1' if the value of this column contains multiple lines of text.
"^DD",101.24,101.243,.04,21,0)
^^1^1^3010420^
"^DD",101.24,101.243,.04,21,1,0)
This field identifies columns that contain multiple lines of text.
"^DD",101.24,101.243,.04,"DT")
3010420
"^DD",101.24,101.243,.05,0)
INCLUDE ON DETAIL^S^0:NO;1:YES;^0;5^Q
"^DD",101.24,101.243,.05,3)
Enter YES to include this field in detailed report
"^DD",101.24,101.243,.05,21,0)
^.001^2^2^3010628^^^^
"^DD",101.24,101.243,.05,21,1,0)
This field is used to determine what data to include in the details of
"^DD",101.24,101.243,.05,21,2,0)
a report.
"^DD",101.24,101.243,.05,"DT")
3010628
"^DD",101.24,101.243,.06,0)
PRINT LENGTH^NJ2,0^^0;6^K:+X'=X!(X>20)!(X<1)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.06,3)
Type a Number between 1 and 20, 0 Decimal Digits
"^DD",101.24,101.243,.06,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.06,21,1,0)
This is the field length used when printing this column on a report.
"^DD",101.24,101.243,.06,"DT")
3010628
"^DD",101.24,101.243,.07,0)
INCLUDE ON PRINT^S^0:NO;1:YES;^0;7^Q
"^DD",101.24,101.243,.07,21,0)
^^2^2^3010628^
"^DD",101.24,101.243,.07,21,1,0)
This field determines which columns are included when a printout is
"^DD",101.24,101.243,.07,21,2,0)
requested.
"^DD",101.24,101.243,.07,"DT")
3010628
"^DD",101.24,101.243,.08,0)
PRINT TITLE^F^^0;8^K:$L(X)>20!($L(X)<1) X
"^DD",101.24,101.243,.08,3)
Answer must be 1-20 characters in length.
"^DD",101.24,101.243,.08,21,0)
^^1^1^3010628^
"^DD",101.24,101.243,.08,21,1,0)
This field is used when printing this field in lieu of the Column Header.
"^DD",101.24,101.243,.08,"DT")
3010628
"^DD",101.24,101.243,.09,0)
DATA TYPE^S^0:FREE TEXT;1:NUMERIC;2:DATE/TIME;^0;9^Q
"^DD",101.24,101.243,.09,3)
Enter the type of data that is in this column.
"^DD",101.24,101.243,.09,21,0)
^.001^3^3^3010718^^
"^DD",101.24,101.243,.09,21,1,0)
This is the data type of the column.  It is used when sorting columns.
"^DD",101.24,101.243,.09,21,2,0)
The default data type is 0 - FREE TEXT.  If no value is entered, it is
"^DD",101.24,101.243,.09,21,3,0)
assumed to be FREE TEXT.
"^DD",101.24,101.243,.09,"DT")
3010718
"^DD",101.24,101.243,.1,0)
WIDTH^NJ4,0^^0;10^K:+X'=X!(X>4000)!(X<-2)!(X?.E1"."1N.N) X
"^DD",101.24,101.243,.1,3)
Type a Number between -2 and 4000, 0 Decimal Digits
"^DD",101.24,101.243,.1,21,0)
^^5^5^3010727^
"^DD",101.24,101.243,.1,21,1,0)
This field is for the column width.  No value needs to be entered because
"^DD",101.24,101.243,.1,21,2,0)
the value is actually obtained from a User level parameter.  The field
"^DD",101.24,101.243,.1,21,3,0)
is defined here to reserve the 10 piece of this node so that future
"^DD",101.24,101.243,.1,21,4,0)
field definitions won't break the RPC used in CPRS to get column properties
"^DD",101.24,101.243,.1,21,5,0)
where the width is stored in the 10 piece.
"^DD",101.24,101.243,.1,"DT")
3010727
"^DIC",101.13,101.13,0)
OR CPRS TABS^101.13
"^DIC",101.13,101.13,0,"GL")
^ORD(101.13,
"^DIC",101.13,101.13,"%",0)
^1.005^^
"^DIC",101.13,101.13,"%D",0)
^^1^1^3020313^
"^DIC",101.13,101.13,"%D",1,0)
This file stores CPRS GUI Cover Sheet tab acronyms.
"^DIC",101.13,"B","OR CPRS TABS",101.13)

"^DIC",101.24,101.24,0)
OE/RR REPORT^101.24
"^DIC",101.24,101.24,0,"GL")
^ORD(101.24,
"^DIC",101.24,101.24,"%",0)
^1.005^^0
"^DIC",101.24,101.24,"%D",0)
^1.001^7^7^3020521^^
"^DIC",101.24,101.24,"%D",1,0)
This file contains definitions and parameters used in various reports
"^DIC",101.24,101.24,"%D",2,0)
within CPRS.
"^DIC",101.24,101.24,"%D",3,0)
 
"^DIC",101.24,101.24,"%D",4,0)
Entry numbers >1000 are reserved for national use.  Any local entries
"^DIC",101.24,101.24,"%D",5,0)
should be added to a number <1000.  If this convention is not followed,
"^DIC",101.24,101.24,"%D",6,0)
you run the risk of having your local entries overwritten by a patch
"^DIC",101.24,101.24,"%D",7,0)
or future release of CPRS.
"^DIC",101.24,"B","OE/RR REPORT",101.24)

**END**
**END**
