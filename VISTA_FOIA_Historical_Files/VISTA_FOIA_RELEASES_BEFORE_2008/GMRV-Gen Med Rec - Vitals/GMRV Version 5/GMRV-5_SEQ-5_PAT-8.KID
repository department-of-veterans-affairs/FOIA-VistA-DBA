Released GMRV*5*8 SEQ #5
Extracted from mail message
**KIDS**:GMRV*5.0*8^

**INSTALL NAME**
GMRV*5.0*8
"BLD",5461,0)
GMRV*5.0*8^GEN. MED. REC. - VITALS^0^3050504^y
"BLD",5461,1,0)
^^2^2^3050324^^^
"BLD",5461,1,1,0)
Please read the GMRV*5*8 patch description on FORUM for an explanation of
"BLD",5461,1,2,0)
what this patch does.
"BLD",5461,4,0)
^9.64PA^120.53^3
"BLD",5461,4,120.51,0)
120.51
"BLD",5461,4,120.51,222)
y^y^f^^^^n
"BLD",5461,4,120.52,0)
120.52
"BLD",5461,4,120.52,222)
y^y^f^^^^n
"BLD",5461,4,120.53,0)
120.53
"BLD",5461,4,120.53,222)
y^y^f^^^^n
"BLD",5461,4,"B",120.51,120.51)
 
"BLD",5461,4,"B",120.52,120.52)
 
"BLD",5461,4,"B",120.53,120.53)
 
"BLD",5461,"ABNS",0)
^9.66A^^
"BLD",5461,"ABPKG")
n^n
"BLD",5461,"INIT")
GMV8PST
"BLD",5461,"KRN",0)
^9.67PA^8989.52^19
"BLD",5461,"KRN",.4,0)
.4
"BLD",5461,"KRN",.401,0)
.401
"BLD",5461,"KRN",.402,0)
.402
"BLD",5461,"KRN",.403,0)
.403
"BLD",5461,"KRN",.5,0)
.5
"BLD",5461,"KRN",.84,0)
.84
"BLD",5461,"KRN",3.6,0)
3.6
"BLD",5461,"KRN",3.8,0)
3.8
"BLD",5461,"KRN",9.2,0)
9.2
"BLD",5461,"KRN",9.8,0)
9.8
"BLD",5461,"KRN",9.8,"NM",0)
^9.68A^11^10
"BLD",5461,"KRN",9.8,"NM",1,0)
GMRVSITE^^0^B7713748
"BLD",5461,"KRN",9.8,"NM",2,0)
GMV8PST^^0^B49578706
"BLD",5461,"KRN",9.8,"NM",3,0)
GMVUID^^0^B40300971
"BLD",5461,"KRN",9.8,"NM",4,0)
GMVRPCM^^0^B71775255
"BLD",5461,"KRN",9.8,"NM",5,0)
GMVQUAL^^0^B9980246
"BLD",5461,"KRN",9.8,"NM",6,0)
GMRVQUAL^^0^B31825473
"BLD",5461,"KRN",9.8,"NM",8,0)
GMVVDEF1^^0^B39468081
"BLD",5461,"KRN",9.8,"NM",9,0)
GMRVPCE0^^0^B2505058
"BLD",5461,"KRN",9.8,"NM",10,0)
GMVFSYN^^0^B6430411
"BLD",5461,"KRN",9.8,"NM",11,0)
GMV8ENV^^0^B202162
"BLD",5461,"KRN",9.8,"NM","B","GMRVPCE0",9)
 
"BLD",5461,"KRN",9.8,"NM","B","GMRVQUAL",6)
 
"BLD",5461,"KRN",9.8,"NM","B","GMRVSITE",1)
 
"BLD",5461,"KRN",9.8,"NM","B","GMV8ENV",11)
 
"BLD",5461,"KRN",9.8,"NM","B","GMV8PST",2)
 
"BLD",5461,"KRN",9.8,"NM","B","GMVFSYN",10)
 
"BLD",5461,"KRN",9.8,"NM","B","GMVQUAL",5)
 
"BLD",5461,"KRN",9.8,"NM","B","GMVRPCM",4)
 
"BLD",5461,"KRN",9.8,"NM","B","GMVUID",3)
 
"BLD",5461,"KRN",9.8,"NM","B","GMVVDEF1",8)
 
"BLD",5461,"KRN",19,0)
19
"BLD",5461,"KRN",19.1,0)
19.1
"BLD",5461,"KRN",101,0)
101
"BLD",5461,"KRN",409.61,0)
409.61
"BLD",5461,"KRN",771,0)
771
"BLD",5461,"KRN",870,0)
870
"BLD",5461,"KRN",8989.51,0)
8989.51
"BLD",5461,"KRN",8989.52,0)
8989.52
"BLD",5461,"KRN",8994,0)
8994
"BLD",5461,"KRN","B",.4,.4)
 
"BLD",5461,"KRN","B",.401,.401)
 
"BLD",5461,"KRN","B",.402,.402)
 
"BLD",5461,"KRN","B",.403,.403)
 
"BLD",5461,"KRN","B",.5,.5)
 
"BLD",5461,"KRN","B",.84,.84)
 
"BLD",5461,"KRN","B",3.6,3.6)
 
"BLD",5461,"KRN","B",3.8,3.8)
 
"BLD",5461,"KRN","B",9.2,9.2)
 
"BLD",5461,"KRN","B",9.8,9.8)
 
"BLD",5461,"KRN","B",19,19)
 
"BLD",5461,"KRN","B",19.1,19.1)
 
"BLD",5461,"KRN","B",101,101)
 
"BLD",5461,"KRN","B",409.61,409.61)
 
"BLD",5461,"KRN","B",771,771)
 
"BLD",5461,"KRN","B",870,870)
 
"BLD",5461,"KRN","B",8989.51,8989.51)
 
"BLD",5461,"KRN","B",8989.52,8989.52)
 
"BLD",5461,"KRN","B",8994,8994)
 
"BLD",5461,"PRE")
GMV8ENV
"BLD",5461,"QUES",0)
^9.62^^
"BLD",5461,"REQB",0)
^9.611^1^1
"BLD",5461,"REQB",1,0)
GMRV*5.0*5^2
"BLD",5461,"REQB","B","GMRV*5.0*5",1)

"FIA",120.51)
GMRV VITAL TYPE
"FIA",120.51,0)
^GMRD(120.51,
"FIA",120.51,0,0)
120.51I
"FIA",120.51,0,1)
y^y^f^^^^n
"FIA",120.51,0,10)

"FIA",120.51,0,11)

"FIA",120.51,0,"RLRO")

"FIA",120.51,0,"VR")
5.0^GMRV
"FIA",120.51,120.51)
0
"FIA",120.51,120.5199)
0
"FIA",120.52)
GMRV VITAL QUALIFIER
"FIA",120.52,0)
^GMRD(120.52,
"FIA",120.52,0,0)
120.52
"FIA",120.52,0,1)
y^y^f^^^^n
"FIA",120.52,0,10)

"FIA",120.52,0,11)

"FIA",120.52,0,"RLRO")

"FIA",120.52,0,"VR")
5.0^GMRV
"FIA",120.52,120.52)
0
"FIA",120.52,120.521)
0
"FIA",120.52,120.5299)
0
"FIA",120.53)
GMRV VITAL CATEGORY
"FIA",120.53,0)
^GMRD(120.53,
"FIA",120.53,0,0)
120.53O
"FIA",120.53,0,1)
y^y^f^^^^n
"FIA",120.53,0,10)

"FIA",120.53,0,11)

"FIA",120.53,0,"RLRO")

"FIA",120.53,0,"VR")
5.0^GMRV
"FIA",120.53,120.53)
0
"FIA",120.53,120.531)
0
"FIA",120.53,120.5399)
0
"INIT")
GMV8PST
"IX",120.51,120.51,"AMASTERVUID",0)
120.51^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^120.51^^^^^S
"IX",120.51,120.51,"AMASTERVUID",.1,0)
^^3^3^3050330
"IX",120.51,120.51,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-refernce 
"IX",120.51,120.51,"AMASTERVUID",.1,2,0)
can be used to identify the Master entry for a VUID associated with a 
"IX",120.51,120.51,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",120.51,120.51,"AMASTERVUID",1)
S ^GMRD(120.51,"AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",120.51,120.51,"AMASTERVUID",2)
K ^GMRD(120.51,"AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",120.51,120.51,"AMASTERVUID",2.5)
K ^GMRD(120.51,"AMASTERVUID")
"IX",120.51,120.51,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",120.51,120.51,"AMASTERVUID",11.1,1,0)
1^F^120.51^99.99^30^1^F
"IX",120.51,120.51,"AMASTERVUID",11.1,2,0)
2^F^120.51^99.98^^2^F
"IX",120.52,120.52,"AMASTERVUID",0)
120.52^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^120.52^^^^^S
"IX",120.52,120.52,"AMASTERVUID",.1,0)
^^3^3^3050330
"IX",120.52,120.52,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-refernce 
"IX",120.52,120.52,"AMASTERVUID",.1,2,0)
can be used to identify the Master entry for a VUID associated with a 
"IX",120.52,120.52,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",120.52,120.52,"AMASTERVUID",1)
S ^GMRD(120.52,"AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",120.52,120.52,"AMASTERVUID",2)
K ^GMRD(120.52,"AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",120.52,120.52,"AMASTERVUID",2.5)
K ^GMRD(120.52,"AMASTERVUID")
"IX",120.52,120.52,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",120.52,120.52,"AMASTERVUID",11.1,1,0)
1^F^120.52^99.99^30^1^F
"IX",120.52,120.52,"AMASTERVUID",11.1,2,0)
2^F^120.52^99.98^^2^F
"IX",120.53,120.53,"AMASTERVUID",0)
120.53^AMASTERVUID^This cross-reference identifies the Master entry for a VUID.^R^^R^IR^I^120.53^^^^^S
"IX",120.53,120.53,"AMASTERVUID",.1,0)
^^3^3^3050330
"IX",120.53,120.53,"AMASTERVUID",.1,1,0)
If multiple entries have the same VUID in the file, this cross-refernce 
"IX",120.53,120.53,"AMASTERVUID",.1,2,0)
can be used to identify the Master entry for a VUID associated with a 
"IX",120.53,120.53,"AMASTERVUID",.1,3,0)
Term/Concept.
"IX",120.53,120.53,"AMASTERVUID",1)
S ^GMRD(120.53,"AMASTERVUID",$E(X(1),1,30),X(2),DA)=""
"IX",120.53,120.53,"AMASTERVUID",2)
K ^GMRD(120.53,"AMASTERVUID",$E(X(1),1,30),X(2),DA)
"IX",120.53,120.53,"AMASTERVUID",2.5)
K ^GMRD(120.53,"AMASTERVUID")
"IX",120.53,120.53,"AMASTERVUID",11.1,0)
^.114IA^2^2
"IX",120.53,120.53,"AMASTERVUID",11.1,1,0)
1^F^120.53^99.99^30^1^F
"IX",120.53,120.53,"AMASTERVUID",11.1,2,0)
2^F^120.53^99.98^^2^F
"MBREQ")
0
"PKG",44,-1)
1^1
"PKG",44,0)
GEN. MED. REC. - VITALS^GMRV^Vitals/Measurements Module of General Medical Record.
"PKG",44,20,0)
^9.402P^^
"PKG",44,22,0)
^9.49I^1^1
"PKG",44,22,1,0)
5.0^3021029
"PKG",44,22,1,"PAH",1,0)
8^3050504^547
"PKG",44,22,1,"PAH",1,1,0)
^^2^2^3050504
"PKG",44,22,1,"PAH",1,1,1,0)
Please read the GMRV*5*8 patch description on FORUM for an explanation of
"PKG",44,22,1,"PAH",1,1,2,0)
what this patch does.
"PRE")
GMV8ENV
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","GMRVPCE0")
0^9^B2505058
"RTN","GMRVPCE0",1,0)
GMRVPCE0 ;HIOFO/RM,FT-Data Event Driver for Vitals ;3/7/05  10:34
"RTN","GMRVPCE0",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMRVPCE0",3,0)
 ;
"RTN","GMRVPCE0",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVPCE0",5,0)
 ; <None>
"RTN","GMRVPCE0",6,0)
 ;
"RTN","GMRVPCE0",7,0)
VALIDATE(GMRVDAT) ; Given the array GMRVDAT passed in by PCE Device
"RTN","GMRVPCE0",8,0)
 ; Interface (by reference, i.e., D VALIDATE^GMRVPCE0(.ARRAY)), whose
"RTN","GMRVPCE0",9,0)
 ; format is described in the PCE Device Interface documentation, this
"RTN","GMRVPCE0",10,0)
 ; procedure will validate the Vitals data.  If the data is invalid,
"RTN","GMRVPCE0",11,0)
 ; the procedure will return GMRVDAT("ERROR") as described in the PCE
"RTN","GMRVPCE0",12,0)
 ; Device Interface documentation.
"RTN","GMRVPCE0",13,0)
 ;
"RTN","GMRVPCE0",14,0)
 Q:$D(GMRVDAT("ERROR"))
"RTN","GMRVPCE0",15,0)
 D PCE^GMRVPCE1(0)
"RTN","GMRVPCE0",16,0)
 Q
"RTN","GMRVPCE0",17,0)
STORE(GMRVDAT) ; Given vitals data passed in the GMRVDAT array, this
"RTN","GMRVPCE0",18,0)
 ; procedure will store that data in the GMRV Patient Measurements
"RTN","GMRVPCE0",19,0)
 ; (120.5) file.
"RTN","GMRVPCE0",20,0)
 ;
"RTN","GMRVPCE0",21,0)
 Q:$D(GMRVDAT("ERROR"))
"RTN","GMRVPCE0",22,0)
 D PCE^GMRVPCE1(1)
"RTN","GMRVPCE0",23,0)
 Q
"RTN","GMRVPCE0",24,0)
HELP(GMRVTYP,GMRVARRY) ; This procedure will return help for a particular
"RTN","GMRVPCE0",25,0)
 ; measurement type in an array.
"RTN","GMRVPCE0",26,0)
 ;   Input
"RTN","GMRVPCE0",27,0)
 ;   Variables:  GMRVTYP=Type of measurement (abbreviation
"RTN","GMRVPCE0",28,0)
 ;               (req.)  from PCE Device Interface Specification).
"RTN","GMRVPCE0",29,0)
 ;               GMRVARR=Closed array reference of array to return
"RTN","GMRVPCE0",30,0)
 ;               (opt.)  help in.  If this variable is not specified,
"RTN","GMRVPCE0",31,0)
 ;                       help is returned in ^TMP($J,"GMRVHELP").
"RTN","GMRVPCE0",32,0)
 ;
"RTN","GMRVPCE0",33,0)
 Q:'$$VMTYPES(GMRVTYP)
"RTN","GMRVPCE0",34,0)
 I $G(GMRVARRY)="" S GMRVARRY="^TMP($J,""GMRVHELP"")"
"RTN","GMRVPCE0",35,0)
 D HELP^GMRVPCE2(GMRVTYP,GMRVARRY)
"RTN","GMRVPCE0",36,0)
 Q
"RTN","GMRVPCE0",37,0)
RATECHK(GMRVTYP,GMRVRATE,GMRVUNIT) ; Extrinsic function to validate the
"RTN","GMRVPCE0",38,0)
 ; rate for a particular measurement
"RTN","GMRVPCE0",39,0)
 ;   Input
"RTN","GMRVPCE0",40,0)
 ;   Variables:  GMRVTYP=Type of measurement (abbreviation
"RTN","GMRVPCE0",41,0)
 ;               (req.)  from PCE Device Interface Specification).
"RTN","GMRVPCE0",42,0)
 ;               GMRVRATE=Measurement rate to be validated.
"RTN","GMRVPCE0",43,0)
 ;               (req.)
"RTN","GMRVPCE0",44,0)
 ;               GMRVUNIT=Unit of measurement for rate, if specified.
"RTN","GMRVPCE0",45,0)
 ;               (opt.)
"RTN","GMRVPCE0",46,0)
 ;   Function value:  1 if rate is valid.
"RTN","GMRVPCE0",47,0)
 ;                    0 if rate is invalid.
"RTN","GMRVPCE0",48,0)
 ;
"RTN","GMRVPCE0",49,0)
 N GMRVFXN S GMRVFXN=0
"RTN","GMRVPCE0",50,0)
 I $$VMTYPES(GMRVTYP),$G(GMRVRATE)]"" D
"RTN","GMRVPCE0",51,0)
 .  I $G(GMRVUNIT)]"" S GMRVRATE=$$UNITRATE^GMRVPCE3(GMRVTYP,GMRVRATE,GMRVUNIT)
"RTN","GMRVPCE0",52,0)
 .  I $G(GMRVRATE)]"" S GMRVFXN=$$VALID^GMRVPCE3(GMRVTYP,GMRVRATE)
"RTN","GMRVPCE0",53,0)
 .  Q
"RTN","GMRVPCE0",54,0)
 Q GMRVFXN
"RTN","GMRVPCE0",55,0)
VMTYPES(TYPE) ; This function returns one if TYPE is a valid selection.
"RTN","GMRVPCE0",56,0)
 ; from the PCE Device Interface Specification.
"RTN","GMRVPCE0",57,0)
 Q "^AUD^BP^HT^TMP^WT^FT^FH^HE^PU^RS^TON^VC^VU^PN^"[(U_TYPE_U)
"RTN","GMRVPCE0",58,0)
 ;
"RTN","GMRVQUAL")
0^6^B31825473
"RTN","GMRVQUAL",1,0)
GMRVQUAL ;HIOFO/YH,FT-VITAL QUALIFIERS ;3/26/05  15:12
"RTN","GMRVQUAL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMRVQUAL",3,0)
 ;
"RTN","GMRVQUAL",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVQUAL",5,0)
 ; <None>
"RTN","GMRVQUAL",6,0)
 ;
"RTN","GMRVQUAL",7,0)
LISTQ ;
"RTN","GMRVQUAL",8,0)
 S (I,GMAX,J)=0 K GCHART,GCHART1,GMRW,GCOUNT,GMRENTR,GQUAL,GENTR
"RTN","GMRVQUAL",9,0)
 S GCAT(1)=0 F  S GCAT(1)=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1))) Q:GCAT(1)'>0  D CATLG S GCHA="" F  S GCHA=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1),GCHA)) Q:GCHA=""  S GDA=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1),GCHA,0)) Q:GDA'>0  D
"RTN","GMRVQUAL",10,0)
 . Q:$$ACTIVE^GMVUID(120.52,"",GDA_",","")  ;active vuid?
"RTN","GMRVQUAL",11,0)
 . S GCHA=$P($G(^GMRD(120.52,GDA,0)),"^") Q:GCHA=""
"RTN","GMRVQUAL",12,0)
 . S GQUAL(GMRVODR,GCHA)=GDA
"RTN","GMRVQUAL",13,0)
 . Q
"RTN","GMRVQUAL",14,0)
 S (I,J,GMRVODR)=0 F  S GMRVODR=$O(GQUAL(GMRVODR)) Q:GMRVODR'>0  S GCHA="" F  S GCHA=$O(GQUAL(GMRVODR,GCHA)) Q:GCHA=""  D
"RTN","GMRVQUAL",15,0)
 . I GMRVITY="BP"!(GMRVITY="CG") S I=I+1,GCHART(I)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=I
"RTN","GMRVQUAL",16,0)
 . I GMRVODR>1,GMRVITY'="BP",GMRVITY'="CG" S I=I+1,GCHART(I)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=I
"RTN","GMRVQUAL",17,0)
 . I GMRVODR=1,GMRVITY'="BP",GMRVITY'="CG" S J=J+1,GCHART1(J)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=J
"RTN","GMRVQUAL",18,0)
 . I $D(GMRDP),GMRVITY="BP" S J=J+1,GCHART1(J)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=J
"RTN","GMRVQUAL",19,0)
 .S GCOUNT(GMRVODR,GORDER(GMRVODR))=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))+1
"RTN","GMRVQUAL",20,0)
 .I GMRVITY="BP"!(GMRVITY="CG"),$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))>GMAX S GMAX=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))
"RTN","GMRVQUAL",21,0)
 .I GMRVITY'="CG",GMRVITY'="BP",GMRVODR'=1,$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))>GMAX S GMAX=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))
"RTN","GMRVQUAL",22,0)
 .Q
"RTN","GMRVQUAL",23,0)
 Q:GLVL=8  I GLVL=9 D  Q
"RTN","GMRVQUAL",24,0)
 . S I=0 F  S I=$O(GCHART1(I)) Q:I'>0  S GMRW($P(GCHART1(I),"^"))=$P(GCHART1(I),"^",2)
"RTN","GMRVQUAL",25,0)
 . Q
"RTN","GMRVQUAL",26,0)
 W !,?3,$S($G(GMRVDFLT(1))'="":"Default: "_$P(GMRVDFLT(1),"^"),1:"Qualifiers: ") S GTXT="" D  Q
"RTN","GMRVQUAL",27,0)
 . S I=0 F  S I=$O(GCHART1(I)) Q:I'>0  S GCHA=$P(GCHART1(I),"^") Q:GCHA=""  S GTXT=GTXT_$S(GTXT="":"",1:", ")_GCHA
"RTN","GMRVQUAL",28,0)
 . I GTXT'="" D WRITE
"RTN","GMRVQUAL",29,0)
 . Q
"RTN","GMRVQUAL",30,0)
 Q
"RTN","GMRVQUAL",31,0)
OTHERQ ;
"RTN","GMRVQUAL",32,0)
 Q:'$D(GCHART)  S GCOL=1,GFLAG=0,$P(GLABEL," ",80)="",$P(GBLNK," ",80)=""
"RTN","GMRVQUAL",33,0)
 Q:+$G(GMAX)=0
"RTN","GMRVQUAL",34,0)
 K GTXT
"RTN","GMRVQUAL",35,0)
 F I=1:1:GMAX S $P(GTXT(I)," ",80)=""
"RTN","GMRVQUAL",36,0)
 S GMRVODR=$S(GMRVITY="BP"!(GMRVITY="CG"):0,1:1) F  S GMRVODR=$O(GCOUNT(GMRVODR)) Q:GMRVODR'>0  D
"RTN","GMRVQUAL",37,0)
 . I GMRVITY'="BP",GMRVITY'="CG" S GCOL=$S(GMRVODR=2:1,GMRVODR=3:18,GMRVODR=4:37,1:58)
"RTN","GMRVQUAL",38,0)
 . E  S GCOL=$S(GMRVODR=1:1,GMRVODR=2:18,GMRVODR=3:37,GMRVODR=4:58,1:70)
"RTN","GMRVQUAL",39,0)
 . S I=0,GCAT="" F  S GCAT=$O(GCOUNT(GMRVODR,GCAT)) Q:GCAT=""  D
"RTN","GMRVQUAL",40,0)
 . . S GLABEL=$S(GMRVODR=1:$E(GCAT_GBLNK,1,80),1:$E($E(GLABEL,1,GCOL)_GCAT_GBLNK,1,80))
"RTN","GMRVQUAL",41,0)
 . . S GMIN=GMRLAST(GMRVODR,GORDER(GMRVODR))-GCOUNT(GMRVODR,GCAT)+1
"RTN","GMRVQUAL",42,0)
 . . F J=GMIN:1:GMRLAST(GMRVODR,GORDER(GMRVODR)) S I=I+1,GTXT(I)=$S(GMRVODR=1:$E(J_" "_$E($P(GCHART(J),"^"),1,16)_GBLNK,1,80),1:$E($E(GTXT(I),1,GCOL)_J_" "_$E($P(GCHART(J),"^"),1,16)_GBLNK,1,80))
"RTN","GMRVQUAL",43,0)
 . . Q
"RTN","GMRVQUAL",44,0)
 . Q
"RTN","GMRVQUAL",45,0)
 D:$D(GLABEL) SELECT Q
"RTN","GMRVQUAL",46,0)
 ;
"RTN","GMRVQUAL",47,0)
SELECT ;OTHER QUALIFIERS
"RTN","GMRVQUAL",48,0)
 S (GTYPE,GSIDE)=0 W !!,"Qualifiers for "_GMRVIT(1)_": ",!!,GLABEL,!
"RTN","GMRVQUAL",49,0)
 F I=1:1:GMAX W !,GTXT(I)
"RTN","GMRVQUAL",50,0)
 I GMRVITY'="CG" W !!,"Select a number under each category (optional).",!,"Separate the numbers with ',': "
"RTN","GMRVQUAL",51,0)
 E  W !!,"Enter a number under each category, separate numbers with a ',' ",!,"DO NOT select SITE if this is a HEAD/ABDOMINAL girth measurement: "
"RTN","GMRVQUAL",52,0)
 K GMRINF(GMRVITY) S GMRINF="" R GMRINF:DTIME I '$T!(GMRINF["^") S GMROUT=1 Q
"RTN","GMRVQUAL",53,0)
 I $L(GMRINF)>10 W !,"ERROR ENTRY!!!" G SELECT
"RTN","GMRVQUAL",54,0)
STRIP ; strip off trailing commas
"RTN","GMRVQUAL",55,0)
 S GMRVCOMA=$L(GMRINF)
"RTN","GMRVQUAL",56,0)
 I GMRVCOMA I $E(GMRINF,GMRVCOMA)="," S GMRINF=$E(GMRINF,1,GMRVCOMA-1) G STRIP
"RTN","GMRVQUAL",57,0)
 K GMRVCOMA
"RTN","GMRVQUAL",58,0)
 G:GMRVITY="CG"&(GMRINF="") SELECT
"RTN","GMRVQUAL",59,0)
 I GMRINF="" D BP Q
"RTN","GMRVQUAL",60,0)
 I GMRVITY="CG" S GTYPE=0 F I=1:1:$L(GMRINF,",") S J=+$P(GMRINF,",",I) I $D(GCHART(J)) S:"HEADABDOMINAL"[$P(GCHART(J),"^") GTYPE=1
"RTN","GMRVQUAL",61,0)
 I GMRVITY="P",$P(GMRSITE,"^")="APICAL" S GTYPE=1
"RTN","GMRVQUAL",62,0)
 S GMROUT(1)=0 F I=1:1:$L(GMRINF,",") Q:GMROUT(1)  S J=+$P(GMRINF,",",I) D  Q:GMROUT(1)
"RTN","GMRVQUAL",63,0)
 . I '$D(GCHART(J)) S GMROUT(1)=1 Q
"RTN","GMRVQUAL",64,0)
 . I GTYPE=1,"LEFTRIGHT"[$P(GCHART(J),"^") Q
"RTN","GMRVQUAL",65,0)
 . S GMRVODR=+$P(GCHART(J),"^",3)
"RTN","GMRVQUAL",66,0)
 . S GMRENTR(GMRVODR)=GMRENTR(GMRVODR)-1,GMRINF(GMRVITY,GMRVODR,$P(GCHART(J),"^"))=$P(GCHART(J),"^",2,3)
"RTN","GMRVQUAL",67,0)
 . I $G(GMRENTR(GMRVODR))<0 W !!,"More than maximum qualifier allowed for a category were selected!",! S GMROUT(1)=1 Q
"RTN","GMRVQUAL",68,0)
 . Q
"RTN","GMRVQUAL",69,0)
 I GMROUT(1) W !,"ERROR ENTRY!!!",! D RESET G SELECT
"RTN","GMRVQUAL",70,0)
 D BP Q:'$D(GMRINF(GMRVITY))
"RTN","GMRVQUAL",71,0)
 W ! S I=0 F  S I=$O(GMRINF(GMRVITY,I)) Q:I'>0  S I(1)="" F  S I(1)=$O(GMRINF(GMRVITY,I,I(1))) Q:I(1)=""  W "  "_I(1)
"RTN","GMRVQUAL",72,0)
RESET ;
"RTN","GMRVQUAL",73,0)
 S I=0 F  S I=$O(GMRENTR(I)) Q:I'>0  S GMRENTR(I)=GENTR(I)
"RTN","GMRVQUAL",74,0)
 Q
"RTN","GMRVQUAL",75,0)
WRITE   ;
"RTN","GMRVQUAL",76,0)
 N X S DIWR=75,DIWF="",DIWL=0,X=GTXT K ^UTILITY($J) D ^DIWP
"RTN","GMRVQUAL",77,0)
 S I=0 F  S I=$O(^UTILITY($J,"W",0,I)) Q:I'>0  W !,?3,^UTILITY($J,"W",0,I,0)
"RTN","GMRVQUAL",78,0)
 K ^UTILITY($J) Q
"RTN","GMRVQUAL",79,0)
CATLG ;
"RTN","GMRVQUAL",80,0)
 S GDA(1)=$O(^GMRD(120.53,GCAT(1),1,"B",GMRVIT,0)) Q:GDA(1)'>0
"RTN","GMRVQUAL",81,0)
 S GLN=$G(^GMRD(120.53,GCAT(1),1,GDA(1),0)) Q:GLN=""
"RTN","GMRVQUAL",82,0)
 S GCAT=$G(^GMRD(120.53,GCAT(1),0)) Q:GCAT=""
"RTN","GMRVQUAL",83,0)
 S GMRVODR=+$P(GLN,"^",6),GMRVDFLT=$S($D(^GMRD(120.52,+$P(GLN,"^",7),0)):$P(^(0),"^"),1:"") S:GMRVODR=0 GMRVODR=1
"RTN","GMRVQUAL",84,0)
 S GMRVDFLT(GMRVODR)=GMRVDFLT I GMRVDFLT'="",$D(^GMRD(120.52,"B",GMRVDFLT)) S GMRVDFLT(GMRVODR)=GMRVDFLT(GMRVODR)_"^"_$O(^GMRD(120.52,"B",GMRVDFLT,0))
"RTN","GMRVQUAL",85,0)
 S GCOUNT(GMRVODR,GCAT)=0
"RTN","GMRVQUAL",86,0)
 S GORDER(GMRVODR)=GCAT,(GENTR(GMRVODR),GMRENTR(GMRVODR))=+$P(GLN,"^",3) S:GMRENTR(GMRVODR)=0 GMRENTR(GMRVODR)=1
"RTN","GMRVQUAL",87,0)
 Q
"RTN","GMRVQUAL",88,0)
CLEAR ;
"RTN","GMRVQUAL",89,0)
 K GMRENTR,GDA,I,J,GCH,GCAT,GCHART,GCHART1,GMRW,GMRVODR,GCOUNT,GMRLAST,GMIN,GMAX,GLABEL,GTXT,GMRVDFLT Q
"RTN","GMRVQUAL",90,0)
BP ; Blood Pressure Check
"RTN","GMRVQUAL",91,0)
 I GMRVITY="BP",($D(GMRIN)) D
"RTN","GMRVQUAL",92,0)
 .F GMRVODR=0:0 S GMRVODR=$O(GMRIN(GMRVODR)) Q:GMRVODR<1  D
"RTN","GMRVQUAL",93,0)
 ..S GCAT=$O(GMRIN(GMRVODR,""))
"RTN","GMRVQUAL",94,0)
 ..S GMRINF(GMRVITY,GMRVODR,GCAT)=$G(GMRIN(GMRVODR,GCAT))
"RTN","GMRVQUAL",95,0)
 ..Q
"RTN","GMRVQUAL",96,0)
 .Q
"RTN","GMRVQUAL",97,0)
 Q
"RTN","GMRVSITE")
0^1^B7713748
"RTN","GMRVSITE",1,0)
GMRVSITE ;HIOFO/YH,FT-V/M SITE FILE EDIT/ENTRY ;2/17/05  14:38
"RTN","GMRVSITE",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMRVSITE",3,0)
 ;
"RTN","GMRVSITE",4,0)
 ; This routine uses the following IAs:
"RTN","GMRVSITE",5,0)
 ; <None>
"RTN","GMRVSITE",6,0)
 ;
"RTN","GMRVSITE",7,0)
 ; This routine supports the following IAs:
"RTN","GMRVSITE",8,0)
 ; #1938 - CHAR & DEFAULT entry points     (private)
"RTN","GMRVSITE",9,0)
 ;
"RTN","GMRVSITE",10,0)
CHAR ;Enter/edit qualifier
"RTN","GMRVSITE",11,0)
 ; Due to the data standardization project, the package will no
"RTN","GMRVSITE",12,0)
 ; longer allow users to modify FILE 120.52.
"RTN","GMRVSITE",13,0)
 Q
"RTN","GMRVSITE",14,0)
DEFAULT ;Enter/edit location default for TEMP./PULSE
"RTN","GMRVSITE",15,0)
 N DA,I
"RTN","GMRVSITE",16,0)
 N GMRDEF,GMRVCAT,GMRVIT,GMRX,GMRV,GMRY,GMROUT
"RTN","GMRVSITE",17,0)
 S GMROUT=0,GMRVCAT="LOCATION"
"RTN","GMRVSITE",18,0)
 S GMRVCAT(1)=$O(^GMRD(120.53,"B",GMRVCAT,0))
"RTN","GMRVSITE",19,0)
 Q:GMRVCAT(1)'>0
"RTN","GMRVSITE",20,0)
 Q:$$ACTIVE^GMVUID(120.53,"",GMRVCAT(1)_",","")  ;active vuid?
"RTN","GMRVSITE",21,0)
 F GMRVIT(1)="TEMPERATURE","PULSE" D
"RTN","GMRVSITE",22,0)
 .S GMRVIT=$O(^GMRD(120.51,"B",GMRVIT(1),0)) Q:GMRVIT'>0!GMROUT  D
"RTN","GMRVSITE",23,0)
 ..Q:$$ACTIVE^GMVUID(120.51,"",GMRVIT_",","")  ;active vuid?
"RTN","GMRVSITE",24,0)
 ..S DA(1)=GMRVCAT(1),DA=$O(^GMRD(120.53,DA(1),1,"B",GMRVIT,0)) Q:DA'>0
"RTN","GMRVSITE",25,0)
 ..I '$D(^GMRD(120.53,DA(1),1,DA,0)) Q
"RTN","GMRVSITE",26,0)
 ..S GMRDEF=+$P(^GMRD(120.53,DA(1),1,DA,0),"^",7)
"RTN","GMRVSITE",27,0)
 ..I $$ACTIVE^GMVUID(120.52,"",GMRDEF_",","") D
"RTN","GMRVSITE",28,0)
 ...D CAT2^GMVUID(DA(1),DA)
"RTN","GMRVSITE",29,0)
 ...S GMRDEF=""
"RTN","GMRVSITE",30,0)
 ...Q
"RTN","GMRVSITE",31,0)
 ..S GMRDEF=$S($D(^GMRD(120.52,+GMRDEF,0)):$P(^(0),"^"),1:"")
"RTN","GMRVSITE",32,0)
 ..D GETQUAL
"RTN","GMRVSITE",33,0)
 ..Q:GMRV'>0
"RTN","GMRVSITE",34,0)
 ..D SELECT
"RTN","GMRVSITE",35,0)
 ..Q
"RTN","GMRVSITE",36,0)
 .Q
"RTN","GMRVSITE",37,0)
 Q
"RTN","GMRVSITE",38,0)
SELECT ;
"RTN","GMRVSITE",39,0)
 W !!,GMRVIT(1)_" has the following location qualifiers:",!
"RTN","GMRVSITE",40,0)
 F I=1:1:GMRV W !,I_"  "_$P(GMRV(I),"^")
"RTN","GMRVSITE",41,0)
 W !!,"Enter a number for "_GMRVIT(1)_" default qualifier",!,"or ^ to quit or @ to delete: "_$S(GMRDEF'="":GMRDEF_"// ",1:"")
"RTN","GMRVSITE",42,0)
 S GMRX="" R GMRX:DTIME
"RTN","GMRVSITE",43,0)
 I '$T!(GMRX["^") S GMROUT=1 Q
"RTN","GMRVSITE",44,0)
 Q:GMRX=""
"RTN","GMRVSITE",45,0)
 G:$L(GMRX)>4 SELECT
"RTN","GMRVSITE",46,0)
 I GMRX["?" W !,"Enter an appropriate qualifier as a default qualifier for this type of",!,"vital measurement",! G SELECT
"RTN","GMRVSITE",47,0)
 I GMRX="@" S $P(^GMRD(120.53,DA(1),1,DA,0),"^",7)="" W:GMRDEF'="" !,GMRDEF_" has been deleted" Q
"RTN","GMRVSITE",48,0)
 I '$D(GMRV(GMRX)) W !,"ERROR ENTRY!!!",! G SELECT
"RTN","GMRVSITE",49,0)
 S $P(^GMRD(120.53,DA(1),1,DA,0),"^",7)=$P(GMRV(GMRX),"^",2)
"RTN","GMRVSITE",50,0)
 W "   ",$P(GMRV(GMRX),"^")
"RTN","GMRVSITE",51,0)
 Q
"RTN","GMRVSITE",52,0)
GETQUAL ;Extract qualifiers for the VITAL TYPE and the CATEGORY
"RTN","GMRVSITE",53,0)
 K GMRV
"RTN","GMRVSITE",54,0)
 S GMRV=0,GMRX=""
"RTN","GMRVSITE",55,0)
 F  S GMRX=$O(^GMRD(120.52,"AA",GMRVIT,1,GMRX)) Q:GMRX=""  D
"RTN","GMRVSITE",56,0)
 .S GMRY=0
"RTN","GMRVSITE",57,0)
 .F  S GMRY=$O(^GMRD(120.52,"AA",GMRVIT,1,GMRX,GMRY)) Q:GMRY'>0  D
"RTN","GMRVSITE",58,0)
 ..Q:$$ACTIVE^GMVUID(120.52,"",GMRY_",","")  ;active vuid?
"RTN","GMRVSITE",59,0)
 ..S GMRV=GMRV+1
"RTN","GMRVSITE",60,0)
 ..S GMRV(GMRV)=$P(^GMRD(120.52,GMRY,0),"^")_"^"_GMRY
"RTN","GMRVSITE",61,0)
 ..Q
"RTN","GMRVSITE",62,0)
 .Q
"RTN","GMRVSITE",63,0)
 Q
"RTN","GMV8ENV")
0^11^B202162
"RTN","GMV8ENV",1,0)
GMV8ENV ;;HIOFO/FT-GMRV*5*8 ENVIRONMENT ROUTINE ;3/24/05  16:26
"RTN","GMV8ENV",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMV8ENV",3,0)
 ;
"RTN","GMV8ENV",4,0)
 ; This routine uses the following IAs:
"RTN","GMV8ENV",5,0)
 ; 10141 - XPDUTL          (supported)
"RTN","GMV8ENV",6,0)
 ;
"RTN","GMV8ENV",7,0)
EN1 ;
"RTN","GMV8ENV",8,0)
 I '$$VERSION^XPDUTL("HDI") S XPDQUIT=2
"RTN","GMV8ENV",9,0)
 Q
"RTN","GMV8PST")
0^2^B49578706
"RTN","GMV8PST",1,0)
GMV8PST ;HIOFO/FT-POST-INSTALLATION FOR GMRV*5*8 ;5/3/05  11:48
"RTN","GMV8PST",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMV8PST",3,0)
 ;
"RTN","GMV8PST",4,0)
 ; This routine uses the following IAs:
"RTN","GMV8PST",5,0)
 ; #1157 - ^XPDMENU calls      (supported)
"RTN","GMV8PST",6,0)
 ; #4639 - ^HDISVCMR calls     (supported)
"RTN","GMV8PST",7,0)
 ; #4651 - ^HDISVF09 calls     (supported)
"RTN","GMV8PST",8,0)
 ;
"RTN","GMV8PST",9,0)
 ;
"RTN","GMV8PST",10,0)
EN ; Driver subroutine
"RTN","GMV8PST",11,0)
 D AHDRN,AHDRE
"RTN","GMV8PST",12,0)
 D MENU,DEL,FIELD9,XREF1,XREF2,XREF3,ACCESS,KILL,HDIS
"RTN","GMV8PST",13,0)
 Q
"RTN","GMV8PST",14,0)
 ;
"RTN","GMV8PST",15,0)
MENU ; Place vitals options out-of-order so they can no longer be used.
"RTN","GMV8PST",16,0)
 N GMVOPT,GMVTXT
"RTN","GMV8PST",17,0)
 S GMVOPT="GMRV VMSITE"
"RTN","GMV8PST",18,0)
 S GMVTXT="Use the 'New Term Rapid Turnaround' process"
"RTN","GMV8PST",19,0)
 D OUT^XPDMENU(GMVOPT,GMVTXT)
"RTN","GMV8PST",20,0)
 Q
"RTN","GMV8PST",21,0)
DEL ; Delete File 120.52, Field 999
"RTN","GMV8PST",22,0)
 ; Get rid of data first
"RTN","GMV8PST",23,0)
 N DA,DIE,DR
"RTN","GMV8PST",24,0)
 S DA=0,DIE="^GMRD(120.52,",DR="999///@"
"RTN","GMV8PST",25,0)
 F  S DA=$O(^GMRD(120.52,DA)) Q:'DA  D
"RTN","GMV8PST",26,0)
 .D ^DIE
"RTN","GMV8PST",27,0)
 .K ^GMRD(120.52,DA,"CONV")
"RTN","GMV8PST",28,0)
 .Q
"RTN","GMV8PST",29,0)
 ;get rid of field definition
"RTN","GMV8PST",30,0)
 N DA,DIK
"RTN","GMV8PST",31,0)
 S DIK="^DD(120.52,",DA=999,DA(1)=DA
"RTN","GMV8PST",32,0)
 D ^DIK
"RTN","GMV8PST",33,0)
 Q
"RTN","GMV8PST",34,0)
FIELD9 ; Delete File 120.51, Field 9 (VITAL/MEASUREMENT) if it exists.
"RTN","GMV8PST",35,0)
 ; Get rid of data first.
"RTN","GMV8PST",36,0)
 N DA
"RTN","GMV8PST",37,0)
 I $D(^DD(120.51,9,0)) D
"RTN","GMV8PST",38,0)
 .S DA=0
"RTN","GMV8PST",39,0)
 .F  S DA=$O(^GMRD(120.51,DA)) Q:'DA  D
"RTN","GMV8PST",40,0)
 ..S $P(^GMRD(120.51,DA,0),U,8)=""
"RTN","GMV8PST",41,0)
 ..Q
"RTN","GMV8PST",42,0)
 .Q
"RTN","GMV8PST",43,0)
 ;get rid of field definition
"RTN","GMV8PST",44,0)
 N DA,DIK
"RTN","GMV8PST",45,0)
 S DA=9 D
"RTN","GMV8PST",46,0)
 .Q:'$D(^DD(120.51,DA,0))
"RTN","GMV8PST",47,0)
 .S DIK="^DD(120.51,",DA(1)=DA
"RTN","GMV8PST",48,0)
 .D ^DIK
"RTN","GMV8PST",49,0)
 .Q
"RTN","GMV8PST",50,0)
 Q
"RTN","GMV8PST",51,0)
XREF1 ; Adds the AMASTERVUID index to file 120.51
"RTN","GMV8PST",52,0)
 N GMVXR,GMVRES,GMVOUT
"RTN","GMV8PST",53,0)
 S GMVXR("FILE")=120.51
"RTN","GMV8PST",54,0)
 S GMVXR("NAME")="AMASTERVUID"
"RTN","GMV8PST",55,0)
 S GMVXR("TYPE")="R"
"RTN","GMV8PST",56,0)
 S GMVXR("USE")="S"
"RTN","GMV8PST",57,0)
 S GMVXR("EXECUTION")="R"
"RTN","GMV8PST",58,0)
 S GMVXR("ACTIVITY")="IR"
"RTN","GMV8PST",59,0)
 S GMVXR("SHORT DESCR")="This cross-reference identifies the Master entry for a VUID."
"RTN","GMV8PST",60,0)
 S GMVXR("DESCR",1)="If multiple entries have the same VUID in the file, this cross-refernce "
"RTN","GMV8PST",61,0)
 S GMVXR("DESCR",2)="can be used to identify the Master entry for a VUID associated with a "
"RTN","GMV8PST",62,0)
 S GMVXR("DESCR",3)="Term/Concept."
"RTN","GMV8PST",63,0)
 S GMVXR("VAL",1)=99.99
"RTN","GMV8PST",64,0)
 S GMVXR("VAL",1,"SUBSCRIPT")=1
"RTN","GMV8PST",65,0)
 S GMVXR("VAL",1,"LENGTH")=30
"RTN","GMV8PST",66,0)
 S GMVXR("VAL",1,"COLLATION")="F"
"RTN","GMV8PST",67,0)
 S GMVXR("VAL",2)=99.98
"RTN","GMV8PST",68,0)
 S GMVXR("VAL",2,"SUBSCRIPT")=2
"RTN","GMV8PST",69,0)
 S GMVXR("VAL",2,"COLLATION")="F"
"RTN","GMV8PST",70,0)
 D CREIXN^DDMOD(.GMVXR,"SW",.GMVRES,"GMVOUT")
"RTN","GMV8PST",71,0)
 Q
"RTN","GMV8PST",72,0)
XREF2 ; Adds the AMASTERVUID index to file 120.52
"RTN","GMV8PST",73,0)
 N GMVXR,GMVRES,GMVOUT
"RTN","GMV8PST",74,0)
 S GMVXR("FILE")=120.52
"RTN","GMV8PST",75,0)
 S GMVXR("NAME")="AMASTERVUID"
"RTN","GMV8PST",76,0)
 S GMVXR("TYPE")="R"
"RTN","GMV8PST",77,0)
 S GMVXR("USE")="S"
"RTN","GMV8PST",78,0)
 S GMVXR("EXECUTION")="R"
"RTN","GMV8PST",79,0)
 S GMVXR("ACTIVITY")="IR"
"RTN","GMV8PST",80,0)
 S GMVXR("SHORT DESCR")="This cross-reference identifies the Master entry for a VUID."
"RTN","GMV8PST",81,0)
 S GMVXR("DESCR",1)="If multiple entries have the same VUID in the file, this cross-refernce "
"RTN","GMV8PST",82,0)
 S GMVXR("DESCR",2)="can be used to identify the Master entry for a VUID associated with a "
"RTN","GMV8PST",83,0)
 S GMVXR("DESCR",3)="Term/Concept."
"RTN","GMV8PST",84,0)
 S GMVXR("VAL",1)=99.99
"RTN","GMV8PST",85,0)
 S GMVXR("VAL",1,"SUBSCRIPT")=1
"RTN","GMV8PST",86,0)
 S GMVXR("VAL",1,"LENGTH")=30
"RTN","GMV8PST",87,0)
 S GMVXR("VAL",1,"COLLATION")="F"
"RTN","GMV8PST",88,0)
 S GMVXR("VAL",2)=99.98
"RTN","GMV8PST",89,0)
 S GMVXR("VAL",2,"SUBSCRIPT")=2
"RTN","GMV8PST",90,0)
 S GMVXR("VAL",2,"COLLATION")="F"
"RTN","GMV8PST",91,0)
 D CREIXN^DDMOD(.GMVXR,"SW",.GMVRES,"GMVOUT")
"RTN","GMV8PST",92,0)
 Q
"RTN","GMV8PST",93,0)
XREF3 ; Adds the AMASTERVUID index to file 120.53
"RTN","GMV8PST",94,0)
 N GMVXR,GMVRES,GMVOUT
"RTN","GMV8PST",95,0)
 S GMVXR("FILE")=120.53
"RTN","GMV8PST",96,0)
 S GMVXR("NAME")="AMASTERVUID"
"RTN","GMV8PST",97,0)
 S GMVXR("TYPE")="R"
"RTN","GMV8PST",98,0)
 S GMVXR("USE")="S"
"RTN","GMV8PST",99,0)
 S GMVXR("EXECUTION")="R"
"RTN","GMV8PST",100,0)
 S GMVXR("ACTIVITY")="IR"
"RTN","GMV8PST",101,0)
 S GMVXR("SHORT DESCR")="This cross-reference identifies the Master entry for a VUID."
"RTN","GMV8PST",102,0)
 S GMVXR("DESCR",1)="If multiple entries have the same VUID in the file, this cross-refernce "
"RTN","GMV8PST",103,0)
 S GMVXR("DESCR",2)="can be used to identify the Master entry for a VUID associated with a "
"RTN","GMV8PST",104,0)
 S GMVXR("DESCR",3)="Term/Concept."
"RTN","GMV8PST",105,0)
 S GMVXR("VAL",1)=99.99
"RTN","GMV8PST",106,0)
 S GMVXR("VAL",1,"SUBSCRIPT")=1
"RTN","GMV8PST",107,0)
 S GMVXR("VAL",1,"LENGTH")=30
"RTN","GMV8PST",108,0)
 S GMVXR("VAL",1,"COLLATION")="F"
"RTN","GMV8PST",109,0)
 S GMVXR("VAL",2)=99.98
"RTN","GMV8PST",110,0)
 S GMVXR("VAL",2,"SUBSCRIPT")=2
"RTN","GMV8PST",111,0)
 S GMVXR("VAL",2,"COLLATION")="F"
"RTN","GMV8PST",112,0)
 D CREIXN^DDMOD(.GMVXR,"SW",.GMVRES,"GMVOUT")
"RTN","GMV8PST",113,0)
 Q
"RTN","GMV8PST",114,0)
ACCESS ; Set file access
"RTN","GMV8PST",115,0)
 N GMVFILE,GMVNODE
"RTN","GMV8PST",116,0)
 F GMVFILE=120.51,120.52,120.53 D
"RTN","GMV8PST",117,0)
 .F GMVNODE="AUDIT","DD","DEL","LAYGO","WR" D
"RTN","GMV8PST",118,0)
 ..S ^DIC(GMVFILE,0,GMVNODE)="@"
"RTN","GMV8PST",119,0)
 ..Q
"RTN","GMV8PST",120,0)
 .Q
"RTN","GMV8PST",121,0)
 Q
"RTN","GMV8PST",122,0)
KILL ; Kill left over x-ref node
"RTN","GMV8PST",123,0)
 K ^DD(120.52,"IX",999)
"RTN","GMV8PST",124,0)
 Q
"RTN","GMV8PST",125,0)
HDIS ; Call HDIS to begin the 'seeding' process
"RTN","GMV8PST",126,0)
 N DOMPTR,TMP
"RTN","GMV8PST",127,0)
 S TMP=$$GETIEN^HDISVF09("VITALS",.DOMPTR)
"RTN","GMV8PST",128,0)
 D EN^HDISVCMR(DOMPTR,"")
"RTN","GMV8PST",129,0)
 Q
"RTN","GMV8PST",130,0)
AHDRN ; Create AHDRNEW Index on GMRV Vital Measurement file (#120.5) for use
"RTN","GMV8PST",131,0)
 ; by Health Data Repository (HDR)
"RTN","GMV8PST",132,0)
 ; Calls HDR API whenever a new entry is made in FILE 120.5
"RTN","GMV8PST",133,0)
 N GMVXR,GMVRES,GMVOUT
"RTN","GMV8PST",134,0)
 S GMVXR("ACTIVITY")=""
"RTN","GMV8PST",135,0)
 S GMVXR("FILE")=120.5
"RTN","GMV8PST",136,0)
 S GMVXR("NAME")="AHDRNEW"
"RTN","GMV8PST",137,0)
 S GMVXR("TYPE")="MU"
"RTN","GMV8PST",138,0)
 S GMVXR("USE")="A"
"RTN","GMV8PST",139,0)
 S GMVXR("EXECUTION")="F"
"RTN","GMV8PST",140,0)
 S GMVXR("SHORT DESCR")="INDEX for HDR"
"RTN","GMV8PST",141,0)
 S GMVXR("DESCR",1)="This cross-reference calls a Health Data Repository (HDR) API whenever a"
"RTN","GMV8PST",142,0)
 S GMVXR("DESCR",2)="new entry is created."
"RTN","GMV8PST",143,0)
 S GMVXR("DESCR",3)=" "
"RTN","GMV8PST",144,0)
 S GMVXR("DESCR",4)="No actual cross-reference nodes are set or killed."
"RTN","GMV8PST",145,0)
 S GMVXR("DESCR",5)=" "
"RTN","GMV8PST",146,0)
 S GMVXR("DESCR",6)="Calls to the VDEFQM routine are covered by Integration Agreement 4253."
"RTN","GMV8PST",147,0)
 S GMVXR("SET")="Q:$D(DIU(0))!($$TESTPAT^VADPT($P(^GMR(120.5,DA,0),U,2)))  N ERR,GMVFLAG I $T(QUEUE^VDEFQM)]"""" S GMVFLAG=$$QUEUE^VDEFQM(""ORU^R01"",""SUBTYPE=VTLS^IEN=""_DA,.ERR)"
"RTN","GMV8PST",148,0)
 S GMVXR("KILL")="Q"
"RTN","GMV8PST",149,0)
 S GMVXR("WHOLE KILL")="Q"
"RTN","GMV8PST",150,0)
 S GMVXR("SET CONDITION")="I X1(1)="""",X2(1)'="""" S X=1"
"RTN","GMV8PST",151,0)
 S GMVXR("VAL",1)=.02
"RTN","GMV8PST",152,0)
 D CREIXN^DDMOD(.GMVXR,"k",.GMVRES,"GMVOUT")
"RTN","GMV8PST",153,0)
 I GMVRES="" D
"RTN","GMV8PST",154,0)
 .D BMES^XPDUTL("The AHDRNEW Index was not added to FILE 120.5. Please enter a Remedy ticket.")
"RTN","GMV8PST",155,0)
 .Q
"RTN","GMV8PST",156,0)
 Q
"RTN","GMV8PST",157,0)
 ;
"RTN","GMV8PST",158,0)
AHDRE ; Create AHDRERR Index on GMRV Vital Measurement file (#120.5) for use
"RTN","GMV8PST",159,0)
 ; by Health Data Repository (HDR)
"RTN","GMV8PST",160,0)
 ; Calls HDR API whenever a FILE 120.5 entry is marked as an error
"RTN","GMV8PST",161,0)
 N GMVXR,GMVRES,GMVOUT
"RTN","GMV8PST",162,0)
 S GMVXR("ACTIVITY")=""
"RTN","GMV8PST",163,0)
 S GMVXR("FILE")=120.5
"RTN","GMV8PST",164,0)
 S GMVXR("NAME")="AHDRERR"
"RTN","GMV8PST",165,0)
 S GMVXR("TYPE")="MU"
"RTN","GMV8PST",166,0)
 S GMVXR("USE")="A"
"RTN","GMV8PST",167,0)
 S GMVXR("EXECUTION")="F"
"RTN","GMV8PST",168,0)
 S GMVXR("SHORT DESCR")="INDEX for HDR"
"RTN","GMV8PST",169,0)
 S GMVXR("DESCR",1)="This cross-reference calls a Health Data Repository (HDR) API whenever a"
"RTN","GMV8PST",170,0)
 S GMVXR("DESCR",2)="FILE 120.5 entry is marked as entered-in-error."
"RTN","GMV8PST",171,0)
 S GMVXR("DESCR",3)=" "
"RTN","GMV8PST",172,0)
 S GMVXR("DESCR",4)="No actual cross-reference nodes are set or killed."
"RTN","GMV8PST",173,0)
 S GMVXR("DESCR",5)=" "
"RTN","GMV8PST",174,0)
 S GMVXR("DESCR",6)="Calls to the VDEFQM routine are covered by Integration Agreement 4253."
"RTN","GMV8PST",175,0)
 S GMVXR("SET")="Q:$D(DIU(0))!($$TESTPAT^VADPT($P(^GMR(120.5,DA,0),U,2)))  N ERR,GMVFLAG I $T(QUEUE^VDEFQM)]"""" S GMVFLAG=$$QUEUE^VDEFQM(""ORU^R01"",""SUBTYPE=VTLS^IEN=""_DA,.ERR)"
"RTN","GMV8PST",176,0)
 S GMVXR("KILL")="Q"
"RTN","GMV8PST",177,0)
 S GMVXR("WHOLE KILL")="Q"
"RTN","GMV8PST",178,0)
 S GMVXR("SET CONDITION")="I X1(1)="""",X2(1)]"""" S X=1"
"RTN","GMV8PST",179,0)
 S GMVXR("VAL",1)=2
"RTN","GMV8PST",180,0)
 D CREIXN^DDMOD(.GMVXR,"k",.GMVRES,"GMVOUT")
"RTN","GMV8PST",181,0)
 I GMVRES="" D
"RTN","GMV8PST",182,0)
 .D BMES^XPDUTL("The AHDRERR Index was not added to FILE 120.5. Please enter a Remedy ticket.")
"RTN","GMV8PST",183,0)
 .Q
"RTN","GMV8PST",184,0)
 Q
"RTN","GMVFSYN")
0^10^B6430411
"RTN","GMVFSYN",1,0)
GMVFSYN ;HOIFO/RM,YH,FT-X REFERENCE FOR VITAL TYPE, CATEGORY AND SYNONYM ;3/8/05  13:38
"RTN","GMVFSYN",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMVFSYN",3,0)
 ;
"RTN","GMVFSYN",4,0)
 ; This routine uses the following IAs:
"RTN","GMVFSYN",5,0)
 ; <None>
"RTN","GMVFSYN",6,0)
 ;
"RTN","GMVFSYN",7,0)
BSYNO(GMRVSK,DA,X) ; CALLED FROM SET/KILL LOGIC OF ACHR XREF ON
"RTN","GMVFSYN",8,0)
 ; SYNONYM (.02) FIELD OF GMRV VITAL QUALIFIER (120.52) FILE.
"RTN","GMVFSYN",9,0)
 ; THIS PROCEDURE SETS/KILLS THE FOLLOWING MUMPS INDICES:  "BB".
"RTN","GMVFSYN",10,0)
 ;    Input variables:  GMRVSK=1 if called from SET, 2 if from KILL
"RTN","GMVFSYN",11,0)
 ;                      DA=DA array passed by reference.
"RTN","GMVFSYN",12,0)
 ;                      X=value being indexed.
"RTN","GMVFSYN",13,0)
 ;
"RTN","GMVFSYN",14,0)
 S GMRVDA=DA N DA,GMRVY
"RTN","GMVFSYN",15,0)
 S DA(1)=GMRVDA,DA=0
"RTN","GMVFSYN",16,0)
 F  S DA=$O(^GMRD(120.52,DA(1),1,DA)) Q:DA'>0  D
"RTN","GMVFSYN",17,0)
 .  S GMRVY=$G(^GMRD(120.52,DA(1),1,DA,0))
"RTN","GMVFSYN",18,0)
 .  D BB($P(GMRVY,"^"),$P(GMRVY,"^",2),X,.DA,GMRVSK)
"RTN","GMVFSYN",19,0)
 .  Q
"RTN","GMVFSYN",20,0)
 K GMRVDA
"RTN","GMVFSYN",21,0)
 Q
"RTN","GMVFSYN",22,0)
BTYP(GMRVSK,DA,X) ; CALLED FROM SET/KILL LOGIC OF BTYP XREF ON VITAL
"RTN","GMVFSYN",23,0)
 ; TYPE (.01) FIELD OF VITAL TYPE (120.521) SUB-FILE OF GMRV
"RTN","GMVFSYN",24,0)
 ; GMRV VITAL QUALIFIER (120.52) FILE.  THIS PROCEDURE SETS/KILLS THE
"RTN","GMVFSYN",25,0)
 ; FOLLOWING MUMPS INDEX:  "BB".
"RTN","GMVFSYN",26,0)
 ;    Input variables:  GMRVSK=1 if called from SET, 2 if from KILL
"RTN","GMVFSYN",27,0)
 ;                      DA=DA array passed by reference.
"RTN","GMVFSYN",28,0)
 ;                      X=value being indexed.
"RTN","GMVFSYN",29,0)
 ;
"RTN","GMVFSYN",30,0)
 N GMRVX,GMRVY
"RTN","GMVFSYN",31,0)
 S GMRVX=$P($G(^GMRD(120.52,DA(1),0)),"^"),GMRVY=$G(^GMRD(120.52,DA(1),1,DA,0))
"RTN","GMVFSYN",32,0)
 D BB(X,$P(GMRVY,"^",2),$P(GMRVX,"^",2),.DA,GMRVSK)
"RTN","GMVFSYN",33,0)
 Q
"RTN","GMVFSYN",34,0)
BCAT(GMRVSK,DA,X) ; CALLED FROM SET/KILL LOGIC OF BCAT XREF ON CATEGORY
"RTN","GMVFSYN",35,0)
 ; (.02) FIELD OF VITAL TYPE (120.521) SUBFILE OF GMRV VITAL QUALIFIER
"RTN","GMVFSYN",36,0)
 ; (120.52) FILE.  THIS PROCEDURE SETS/KILLS THE FOLLOWING MUMPS
"RTN","GMVFSYN",37,0)
 ; INDEX:  "BB".
"RTN","GMVFSYN",38,0)
 ;    Input variables:  GMRVSK=1 if called from SET, 2 if from KILL
"RTN","GMVFSYN",39,0)
 ;                      DA=DA array passed by reference.
"RTN","GMVFSYN",40,0)
 ;                      X=value being indexed.
"RTN","GMVFSYN",41,0)
 ;
"RTN","GMVFSYN",42,0)
 N GMRVX,GMRVY
"RTN","GMVFSYN",43,0)
 S GMRVX=$G(^GMRD(120.52,DA(1),0)),GMRVY=$G(^GMRD(120.52,DA(1),1,DA,0))
"RTN","GMVFSYN",44,0)
 D BB($P(GMRVY,"^"),X,$P(GMRVX,"^",2),.DA,GMRVSK)
"RTN","GMVFSYN",45,0)
 Q
"RTN","GMVFSYN",46,0)
BB(TYPE,CAT,CHAR,DA,SK) ; This procedure updates the "BB" index for the 120.52
"RTN","GMVFSYN",47,0)
 ; file.  This index has the following format:
"RTN","GMVFSYN",48,0)
 ;    ^GMRD(120.52,"BB",TYPE,CAT,CHAR,DA(1),DA)=""
"RTN","GMVFSYN",49,0)
 ;  Input variables:
"RTN","GMVFSYN",50,0)
 ;      TYPE=Vital Type (.01) field 120.521 sub-file.
"RTN","GMVFSYN",51,0)
 ;       CAT=Category (.02) field of 120.521 sub-file.
"RTN","GMVFSYN",52,0)
 ;      CHAR=Name (.01) field of 120.52 file.
"RTN","GMVFSYN",53,0)
 ;        DA=Passed by reference will have entry in 120.52 sub-file, DA,
"RTN","GMVFSYN",54,0)
 ;           and entry in 120.52 file, DA(1).
"RTN","GMVFSYN",55,0)
 ;        SK=1 if set xref, 2 if kill xref.
"RTN","GMVFSYN",56,0)
 ;
"RTN","GMVFSYN",57,0)
 Q:$G(TYPE)=""!($G(CAT)="")!($G(CHAR)="")!($G(DA(1))="")!($G(DA)="")
"RTN","GMVFSYN",58,0)
 I $G(SK)=1 S ^GMRD(120.52,"BB",TYPE,CAT,CHAR,DA(1),DA)=""
"RTN","GMVFSYN",59,0)
 I $G(SK)=2 K ^GMRD(120.52,"BB",TYPE,CAT,CHAR,DA(1),DA)
"RTN","GMVFSYN",60,0)
 Q
"RTN","GMVFSYN",61,0)
SCREEN ;SCREEN FOR DUPLICATE ENTRY FOR A VITAL TYPE
"RTN","GMVFSYN",62,0)
 ; Called from SYNONYM field (#.02) of the GMRV VITAL QUALIFIER file
"RTN","GMVFSYN",63,0)
 ; (#120.52) - ^DD(120.52,.02,0)
"RTN","GMVFSYN",64,0)
 Q  ; SYNONYMs will be provided by the standardization process. 
"RTN","GMVFSYN",65,0)
 Q:X=""  S GMRVDA=DA N DA,GTYP,GCAT,GSYN
"RTN","GMVFSYN",66,0)
 S DA(1)=GMRVDA,DA=0
"RTN","GMVFSYN",67,0)
 F  S DA=$O(^GMRD(120.52,DA(1),1,DA)) Q:DA'>0!'$D(X)  D
"RTN","GMVFSYN",68,0)
 .  S GMRVY=$G(^GMRD(120.52,DA(1),1,DA,0))
"RTN","GMVFSYN",69,0)
 .  S GTYP=+$P(GMRVY,"^")
"RTN","GMVFSYN",70,0)
 .  I $D(^GMRD(120.52,"BB",GTYP)) D
"RTN","GMVFSYN",71,0)
 .  .S GCAT=0 F  S GCAT=$O(^GMRD(120.52,"BB",GTYP,GCAT)) Q:GCAT'>0!'$D(X)  S GSYN="" F  S GSYN=$O(^GMRD(120.52,"BB",GTYP,GCAT,GSYN)) Q:GSYN=""!'$D(X)  I GSYN=X&'$D(^(GSYN,DA(1))) W:'$D(ZTQUEUED) !!,X K X
"RTN","GMVFSYN",72,0)
 K GMRVDA Q
"RTN","GMVQUAL")
0^5^B9980246
"RTN","GMVQUAL",1,0)
GMVQUAL ;HOIFO/YH,FT-VITAL QUALIFIERS ;2/17/05  14:39
"RTN","GMVQUAL",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMVQUAL",3,0)
 ;
"RTN","GMVQUAL",4,0)
 ; This routine uses the following IAs:
"RTN","GMVQUAL",5,0)
 ; <None>
"RTN","GMVQUAL",6,0)
 ;
"RTN","GMVQUAL",7,0)
LISTQ ; {called from GMVCAQU}
"RTN","GMVQUAL",8,0)
 S (I,GMAX,J)=0
"RTN","GMVQUAL",9,0)
 K GCHART,GCHART1,GMRW,GCOUNT,GMRENTR,GQUAL,GENTR
"RTN","GMVQUAL",10,0)
 S GCAT(1)=0
"RTN","GMVQUAL",11,0)
 F  S GCAT(1)=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1))) Q:GCAT(1)'>0  D CATLG S GCHA="" F  S GCHA=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1),GCHA)) Q:GCHA=""  S GDA=$O(^GMRD(120.52,"AA",GMRVIT,GCAT(1),GCHA,0)) Q:GDA'>0  D
"RTN","GMVQUAL",12,0)
 . Q:$$ACTIVE^GMVUID(120.52,"",GDA_",","")  ;active vuid?
"RTN","GMVQUAL",13,0)
 . S GCHA=$P($G(^GMRD(120.52,GDA,0)),"^") Q:GCHA=""
"RTN","GMVQUAL",14,0)
 . S GQUAL(GMRVODR,GCHA)=GDA
"RTN","GMVQUAL",15,0)
 . Q
"RTN","GMVQUAL",16,0)
 S (I,J,GMRVODR)=0
"RTN","GMVQUAL",17,0)
 F  S GMRVODR=$O(GQUAL(GMRVODR)) Q:GMRVODR'>0  S GCHA="" F  S GCHA=$O(GQUAL(GMRVODR,GCHA)) Q:GCHA=""  D
"RTN","GMVQUAL",18,0)
 . I GMRVITY="BP"!(GMRVITY="CG") S I=I+1,GCHART(I)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=I
"RTN","GMVQUAL",19,0)
 . I GMRVODR>1,GMRVITY'="BP",GMRVITY'="CG" S I=I+1,GCHART(I)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=I
"RTN","GMVQUAL",20,0)
 . I GMRVODR=1,GMRVITY'="BP",GMRVITY'="CG" S J=J+1,GCHART1(J)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=J
"RTN","GMVQUAL",21,0)
 . I $D(GMRDP),GMRVITY="BP" S J=J+1,GCHART1(J)=GCHA_"^"_GQUAL(GMRVODR,GCHA)_"^"_GMRVODR,GMRLAST(GMRVODR,GORDER(GMRVODR))=J
"RTN","GMVQUAL",22,0)
 .S GCOUNT(GMRVODR,GORDER(GMRVODR))=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))+1
"RTN","GMVQUAL",23,0)
 .I GMRVITY="BP"!(GMRVITY="CG"),$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))>GMAX S GMAX=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))
"RTN","GMVQUAL",24,0)
 .I GMRVITY'="CG",GMRVITY'="BP",GMRVODR'=1,$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))>GMAX S GMAX=$G(GCOUNT(GMRVODR,GORDER(GMRVODR)))
"RTN","GMVQUAL",25,0)
 .Q
"RTN","GMVQUAL",26,0)
 Q
"RTN","GMVQUAL",27,0)
CATLG ;
"RTN","GMVQUAL",28,0)
 S GDA(1)=$O(^GMRD(120.53,GCAT(1),1,"B",GMRVIT,0)) Q:GDA(1)'>0
"RTN","GMVQUAL",29,0)
 S GLN=$G(^GMRD(120.53,GCAT(1),1,GDA(1),0)) Q:GLN=""
"RTN","GMVQUAL",30,0)
 S GCAT=$G(^GMRD(120.53,GCAT(1),0)) Q:GCAT=""
"RTN","GMVQUAL",31,0)
 S GMRVODR=+$P(GLN,"^",6),GMRVDFLT=$S($D(^GMRD(120.52,+$P(GLN,"^",7),0)):$P(^(0),"^"),1:"") S:GMRVODR=0 GMRVODR=1
"RTN","GMVQUAL",32,0)
 S GMRVDFLT(GMRVODR)=GMRVDFLT I GMRVDFLT'="",$D(^GMRD(120.52,"B",GMRVDFLT)) S GMRVDFLT(GMRVODR)=GMRVDFLT(GMRVODR)_"^"_$O(^GMRD(120.52,"B",GMRVDFLT,0))
"RTN","GMVQUAL",33,0)
 S GCOUNT(GMRVODR,GCAT)=0
"RTN","GMVQUAL",34,0)
 S GORDER(GMRVODR)=GCAT,(GENTR(GMRVODR),GMRENTR(GMRVODR))=+$P(GLN,"^",3) S:GMRENTR(GMRVODR)=0 GMRENTR(GMRVODR)=1
"RTN","GMVQUAL",35,0)
 Q
"RTN","GMVRPCM")
0^4^B71775255
"RTN","GMVRPCM",1,0)
GMVRPCM ; HOIFO/DP - RPC for Vitals Manager ;3/3/05  12:28
"RTN","GMVRPCM",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**1,8**;Oct 31, 2002
"RTN","GMVRPCM",3,0)
 ; Integration Agreements:
"RTN","GMVRPCM",4,0)
 ; #10040 [Supported] File 44 references
"RTN","GMVRPCM",5,0)
 ; #10076 [Supported] XUSEC Calls
"RTN","GMVRPCM",6,0)
 ; #2263 [Supported] XPAR Calls
"RTN","GMVRPCM",7,0)
 ; #2541 [Supported] XUPARAM Calls
"RTN","GMVRPCM",8,0)
 ; #2692 [Controlled] ORQPTQ1
"RTN","GMVRPCM",9,0)
 ; #3227 [Private] NURAPI Calls
"RTN","GMVRPCM",10,0)
 ; #4084 [Private] File 44 AC x-ref
"RTN","GMVRPCM",11,0)
 ;
"RTN","GMVRPCM",12,0)
ADDQUAL ; [P] Add qualifier to vital/category
"RTN","GMVRPCM",13,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",14,0)
 I $O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0)) D  Q
"RTN","GMVRPCM",15,0)
 .S @RESULTS@(0)="1^Qualifier already assigned."
"RTN","GMVRPCM",16,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.01)=GMVVIT
"RTN","GMVRPCM",17,0)
 S GMVFDA(120.521,"+1,"_GMVQUAL_",",.02)=GMVCAT
"RTN","GMVRPCM",18,0)
 D UPDATE^DIE("","GMVFDA","GMVIEN","GMVERR")
"RTN","GMVRPCM",19,0)
 I $G(GMVIEN(1)) S @RESULTS@(0)=+GMVIEN(1)_"^Qualifier Assigned"
"RTN","GMVRPCM",20,0)
 E  S @RESULTS@(0)="-1^Unable to assign qualifier"
"RTN","GMVRPCM",21,0)
 Q
"RTN","GMVRPCM",22,0)
DELQUAL ; [P] Delete qualifier from vital/category
"RTN","GMVRPCM",23,0)
 S GMVVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2),GMVQUAL=+$P(DATA,";",3)
"RTN","GMVRPCM",24,0)
 S X=$O(^GMRD(120.52,GMVQUAL,1,"B",GMVVIT,0))
"RTN","GMVRPCM",25,0)
 S GMVFDA(120.521,X_","_GMVQUAL_",",.01)="@"
"RTN","GMVRPCM",26,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",27,0)
 I $D(GMVERR) S @RESULTS@(0)="-1^Unable to remove qualifier."
"RTN","GMVRPCM",28,0)
 E  S @RESULTS@(0)="1^Qualifier removed."
"RTN","GMVRPCM",29,0)
 Q
"RTN","GMVRPCM",30,0)
DELTEMP ; [P] Delete Template
"RTN","GMVRPCM",31,0)
 S GMVENT=$P(DATA,U,1),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",32,0)
 I $$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVNAME D
"RTN","GMVRPCM",33,0)
 .D DEL^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1)
"RTN","GMVRPCM",34,0)
 D DEL^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,.GMVERR)
"RTN","GMVRPCM",35,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Removed."
"RTN","GMVRPCM",36,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",37,0)
 Q
"RTN","GMVRPCM",38,0)
GETCATS ; [P] Return Listing of categories
"RTN","GMVRPCM",39,0)
 N GMVQI
"RTN","GMVRPCM",40,0)
 F GMVCAT=0:0 S GMVCAT=$O(^GMRD(120.52,"AA",DATA,GMVCAT)) Q:'GMVCAT  D
"RTN","GMVRPCM",41,0)
 .Q:$$ACTIVE^GMVUID(120.53,"",GMVCAT_",","")
"RTN","GMVRPCM",42,0)
 .S GMVQUAL="",X="" F  S X=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X)) Q:X=""  D
"RTN","GMVRPCM",43,0)
 ..S GMVQI=$O(^GMRD(120.52,"AA",DATA,GMVCAT,X,0))
"RTN","GMVRPCM",44,0)
 ..Q:$$ACTIVE^GMVUID(120.52,"",GMVQI_",","")
"RTN","GMVRPCM",45,0)
 ..S GMVQUAL=GMVQUAL_$S(GMVQUAL]"":", ",1:"")_X
"RTN","GMVRPCM",46,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",47,0)
 .S @RESULTS@(Y)=GMVCAT_U_$P(^GMRD(120.53,GMVCAT,0),U)_U_GMVQUAL
"RTN","GMVRPCM",48,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.51,DATA,0),U)
"RTN","GMVRPCM",49,0)
 Q
"RTN","GMVRPCM",50,0)
GETDATA ; [P] Generic fileman data call
"RTN","GMVRPCM",51,0)
 ; Variable DATA = File#^IENS^Field#
"RTN","GMVRPCM",52,0)
 S @RESULTS@(0)=$$GET1^DIQ($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3))
"RTN","GMVRPCM",53,0)
 Q
"RTN","GMVRPCM",54,0)
GETDEF ; [P] Get Default Template
"RTN","GMVRPCM",55,0)
 I $G(DATA)]"" D  Q
"RTN","GMVRPCM",56,0)
 .S X=$$GET^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",57,0)
 .I X="" S @RESULTS@(0)="-1^No Default Template"
"RTN","GMVRPCM",58,0)
 .E  S @RESULTS@(0)=X
"RTN","GMVRPCM",59,0)
 D ENVAL^XPAR(.GMV,"GMV TEMPLATE DEFAULT")
"RTN","GMVRPCM",60,0)
 S X="" F  S X=$O(GMV(X)) Q:X=""  D
"RTN","GMVRPCM",61,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",62,0)
 .S @RESULTS@(Y)=X_U_GMV(X,1)
"RTN","GMVRPCM",63,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",64,0)
 Q
"RTN","GMVRPCM",65,0)
GETHILO ; [P] Returns an abnormal value
"RTN","GMVRPCM",66,0)
 S @RESULTS@(0)=+$$GET1^DIQ(120.57,"1,",DATA)
"RTN","GMVRPCM",67,0)
 Q
"RTN","GMVRPCM",68,0)
GETLIST ; [P] Return listing of file
"RTN","GMVRPCM",69,0)
 K GMVRET,^TMP("DILIST",$J)
"RTN","GMVRPCM",70,0)
 S GMVSCRN=""
"RTN","GMVRPCM",71,0)
 I +DATA=44 S DATA2=$P(DATA,U,2),DATA=+DATA
"RTN","GMVRPCM",72,0)
 I DATA=120.51 D  ; Set screen for vitals list
"RTN","GMVRPCM",73,0)
 .S GMVSCRN="I $$VITALIEN^GMVUTL8()[("",""_+Y_"","")"
"RTN","GMVRPCM",74,0)
 I DATA=42 D  ; Screen for ward location
"RTN","GMVRPCM",75,0)
 .S GMVSCRN="I '$$INACT42^GMVUT2(+Y)"
"RTN","GMVRPCM",76,0)
 I DATA=44 D  Q  ; Clinics
"RTN","GMVRPCM",77,0)
 .N CNT S X=DATA2,CNT=0
"RTN","GMVRPCM",78,0)
 .F  S X=$O(^SC("AC","C",X)) Q:'X!(CNT>100)  D
"RTN","GMVRPCM",79,0)
 ..Q:+$G(^SC(X,"OOS"))
"RTN","GMVRPCM",80,0)
 ..S Y=$G(^SC(X,"I"))
"RTN","GMVRPCM",81,0)
 ..I Y Q:DT>+Y&($P(Y,U,2)=""!(DT<$P(Y,U,2)))
"RTN","GMVRPCM",82,0)
 ..S @RESULTS@($O(@RESULTS@(""),-1)+1)=DATA_";"_X_U_$P(^SC(X,0),U),CNT=CNT+1
"RTN","GMVRPCM",83,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",84,0)
 I DATA=100.21 D  Q  ; CPRS Teams
"RTN","GMVRPCM",85,0)
 .D TEAMS^ORQPTQ1(.GMVRET)
"RTN","GMVRPCM",86,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",87,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",88,0)
 I DATA=211.4 D  Q  ; NURS Locations
"RTN","GMVRPCM",89,0)
 .D ACTLOCS^NURAPI(.GMVRET)
"RTN","GMVRPCM",90,0)
 .F X=0:0 S X=$O(GMVRET(X)) Q:'X  S @RESULTS@(X)=DATA_";"_GMVRET(X)
"RTN","GMVRPCM",91,0)
 .S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",92,0)
 I DATA=120.52 S GMVSCRN="I '$$ACTIVE^GMVUID(120.52,.01,+Y_"","","""")"
"RTN","GMVRPCM",93,0)
 D LIST^DIC(DATA,"","@;.01","P","","","","",GMVSCRN)
"RTN","GMVRPCM",94,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",95,0)
 .S @RESULTS@(X)=DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",96,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$$GET1^DID(DATA,"","","NAME")
"RTN","GMVRPCM",97,0)
 K ^TMP("DILIST",$J)
"RTN","GMVRPCM",98,0)
 Q
"RTN","GMVRPCM",99,0)
GETQUAL ; [P] Return qualifiers list
"RTN","GMVRPCM",100,0)
 ; DATA=VitalIEN;CatIEN
"RTN","GMVRPCM",101,0)
 ; Uses X-ref of ^GMRD(120.52,"AA",VitalIEN,CategoryIEN,QName,QIEN)
"RTN","GMVRPCM",102,0)
 S GMVIT=+$P(DATA,";",1),GMVCAT=+$P(DATA,";",2)
"RTN","GMVRPCM",103,0)
 I '$D(^GMRD(120.53,GMVCAT,0)) S @RESULTS@(0)="-1^No such category" Q
"RTN","GMVRPCM",104,0)
 I $$ACTIVE^GMVUID(120.53,"",GMVCAT_",","") S @RESULTS@(0)="-1^Inactive category" Q
"RTN","GMVRPCM",105,0)
 I '$D(^GMRD(120.51,GMVIT,0)) S @RESULTS@(0)="-1^No such vital" Q
"RTN","GMVRPCM",106,0)
 I $$ACTIVE^GMVUID(120.51,"",GMVIT_",","") S @RESULTS@(0)="-1^Inactive vital type" Q
"RTN","GMVRPCM",107,0)
 S GMVNAM=""
"RTN","GMVRPCM",108,0)
 F  S GMVNAM=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM)) Q:GMVNAM=""  D
"RTN","GMVRPCM",109,0)
 .S GMVIEN=$O(^GMRD(120.52,"AA",GMVIT,GMVCAT,GMVNAM,0))  ; Assume only one of this name
"RTN","GMVRPCM",110,0)
 .Q:$$ACTIVE^GMVUID(120.52,"",GMVIEN_",","")
"RTN","GMVRPCM",111,0)
 .S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",112,0)
 .S @RESULTS@(Y)=GMVIEN_U_GMVNAM
"RTN","GMVRPCM",113,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)_U_$P(^GMRD(120.53,GMVCAT,0),U)
"RTN","GMVRPCM",114,0)
 Q
"RTN","GMVRPCM",115,0)
GETTEMP ; [P] Get Template List
"RTN","GMVRPCM",116,0)
 I $G(DATA)]"" D
"RTN","GMVRPCM",117,0)
 .S GMVENT=$$ENTITY($P(DATA,U,1)),GMVNAME=$P(DATA,U,2)
"RTN","GMVRPCM",118,0)
 .I GMVNAME="" D
"RTN","GMVRPCM",119,0)
 ..D GETLST^XPAR(.GMVTMP,GMVENT,"GMV TEMPLATE")
"RTN","GMVRPCM",120,0)
 ..F X=0:0 S X=$O(GMVTMP(X)) Q:'X  D
"RTN","GMVRPCM",121,0)
 ...S GMV(GMVENT,$P(GMVTMP(X),U,1))=$P(GMVTMP(X),U,2,10)
"RTN","GMVRPCM",122,0)
 .I GMVNAME]"" S GMV(GMVENT,GMVNAME)=$$GET^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME)
"RTN","GMVRPCM",123,0)
 I $G(DATA)="" D ENVAL^XPAR(.GMV,"GMV TEMPLATE")
"RTN","GMVRPCM",124,0)
 S GMVENT="",GMVNAME=""
"RTN","GMVRPCM",125,0)
 F  S GMVENT=$O(GMV(GMVENT)) Q:GMVENT=""  D
"RTN","GMVRPCM",126,0)
 .S GMVROOT=$P(GMVENT,";",2),GMVTYPE=$$TYPE(GMVROOT),GMVIEN=+GMVENT
"RTN","GMVRPCM",127,0)
 .Q:GMVTYPE=0  ;unknown template type
"RTN","GMVRPCM",128,0)
 .Q:GMVROOT="VA(200,"&('$$GET^XPAR("SYS","GMV ALLOW USER TEMPLATES"))
"RTN","GMVRPCM",129,0)
 .I GMVROOT="VA(200,"&(GMVIEN'=DUZ) Q:'$D(^XUSEC("GMV MANAGER",DUZ))
"RTN","GMVRPCM",130,0)
 .F  S GMVNAME=$O(GMV(GMVENT,GMVNAME)) Q:GMVNAME=""  D
"RTN","GMVRPCM",131,0)
 ..S GMVOWNER=$P($G(@(U_GMVROOT_(+GMVIEN)_",0)"),"Unk"),U)
"RTN","GMVRPCM",132,0)
 ..S Y=$O(@RESULTS@(""),-1)+1
"RTN","GMVRPCM",133,0)
 ..S @RESULTS@(Y)=GMVTYPE_U_GMVENT_U_GMVOWNER_U_GMVNAME_U_GMV(GMVENT,GMVNAME)
"RTN","GMVRPCM",134,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",135,0)
 Q
"RTN","GMVRPCM",136,0)
LOOKUP ; [P] Does a lookup on a file
"RTN","GMVRPCM",137,0)
 I $P(DATA,"^",3)="" S GMVFLD="@;.01"
"RTN","GMVRPCM",138,0)
 E  S GMVFLD="@;"_$P(DATA,"^",3)
"RTN","GMVRPCM",139,0)
 S GMVFLD=$P(GMVFLD,";",1,5) ; Limit lookup to 4 display fields
"RTN","GMVRPCM",140,0)
 D FIND^DIC(+DATA,"",GMVFLD,"P",$P(DATA,"^",2),61)
"RTN","GMVRPCM",141,0)
 I ^TMP("DILIST",$J,0)<1 D  Q
"RTN","GMVRPCM",142,0)
 .S @RESULTS@(0)="-1^No entries found matching '"_$P(DATA,U,2)_"'."
"RTN","GMVRPCM",143,0)
 I ^TMP("DILIST",$J,0)>60 D  Q
"RTN","GMVRPCM",144,0)
 .S @RESULTS@(0)="-1^Too many matches found, please be more specific."
"RTN","GMVRPCM",145,0)
 F X=0:0 S X=$O(^TMP("DILIST",$J,X)) Q:'X  D
"RTN","GMVRPCM",146,0)
 .S @RESULTS@(X)=+DATA_";"_^TMP("DILIST",$J,X,0)
"RTN","GMVRPCM",147,0)
 S @RESULTS@(0)=+$O(@RESULTS@(""),-1)
"RTN","GMVRPCM",148,0)
 Q
"RTN","GMVRPCM",149,0)
NEWQUAL ; [P] Create New Qualifier
"RTN","GMVRPCM",150,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",151,0)
 Q
"RTN","GMVRPCM",152,0)
NEWTEMP ; [P] New Template
"RTN","GMVRPCM",153,0)
 S GMVENT=$P(DATA,"^",1),GMVNAME=$P(DATA,"^",2),GMVDESC=$P(DATA,"^",3)
"RTN","GMVRPCM",154,0)
 S GMVENT=$$ENTITY(GMVENT)
"RTN","GMVRPCM",155,0)
 S GMVTYPE=$$TYPE($P(GMVENT,";",2))
"RTN","GMVRPCM",156,0)
 S GMVOWN=$P($G(@(U_$P(GMVENT,";",2)_+GMVENT_",0)"),"Unk"),U)
"RTN","GMVRPCM",157,0)
 S:GMVDESC="" GMVDESC="No Description"
"RTN","GMVRPCM",158,0)
 D ADD^XPAR(GMVENT,"GMV TEMPLATE",GMVNAME,GMVDESC,.GMVERR)
"RTN","GMVRPCM",159,0)
 I 'GMVERR S @RESULTS@(0)=GMVTYPE_U_GMVENT_U_GMVOWN_U_GMVNAME
"RTN","GMVRPCM",160,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",161,0)
 Q
"RTN","GMVRPCM",162,0)
RENTEMP ; [P] Rename a Template
"RTN","GMVRPCM",163,0)
 S GMVENT=$P(DATA,U,1),GMVOLD=$P(DATA,U,2),GMVNEW=$P(DATA,U,3)
"RTN","GMVRPCM",164,0)
 D REP^XPAR(GMVENT,"GMV TEMPLATE",GMVOLD,GMVNEW,.GMVERR)
"RTN","GMVRPCM",165,0)
 I 'GMVERR S @RESULTS@(0)="1^Renamed"
"RTN","GMVRPCM",166,0)
 E  S @RESULTS@(0)="-1^"_GMVERR Q
"RTN","GMVRPCM",167,0)
 ; Reset default template if this was a default template
"RTN","GMVRPCM",168,0)
 D:$$GET^XPAR(GMVENT,"GMV TEMPLATE DEFAULT")=GMVOLD
"RTN","GMVRPCM",169,0)
 .D EN^XPAR(GMVENT,"GMV TEMPLATE DEFAULT",1,GMVNEW)
"RTN","GMVRPCM",170,0)
 Q
"RTN","GMVRPCM",171,0)
RPC(RESULTS,OPTION,DATA) ; [Procedure] Main RPC call tag
"RTN","GMVRPCM",172,0)
 ; RPC: [GMV MANAGER]
"RTN","GMVRPCM",173,0)
 ;
"RTN","GMVRPCM",174,0)
 ; Input parameters
"RTN","GMVRPCM",175,0)
 ;  1. RESULTS [Reference/Required] RPC Return array
"RTN","GMVRPCM",176,0)
 ;  2. OPTION [Literal/Required] RPC Option to execute
"RTN","GMVRPCM",177,0)
 ;  3. DATA [Literal/Required] Other data as required for call
"RTN","GMVRPCM",178,0)
 ;
"RTN","GMVRPCM",179,0)
 N GMV,GMVCAT,GMVDESC,GMVENT,GMVERR,GMVFDA,GMVFLD,GMVIEN,GMVIT,GMVNAM,GMVNAME,GMVNEW,GMVOLD,GMVOWN,GMVOWNER,GMVQUAL,GMVROOT,GMVTYPE,GMVVAL,GMVVIT,GMVSCRN
"RTN","GMVRPCM",180,0)
 S RESULTS=$NA(^TMP("GMVMGR",$J)) K @RESULTS
"RTN","GMVRPCM",181,0)
 D:$T(@OPTION)]"" @OPTION
"RTN","GMVRPCM",182,0)
 S:'$D(@RESULTS) @RESULTS@(0)="-1^No results returned"
"RTN","GMVRPCM",183,0)
 D CLEAN^DILF
"RTN","GMVRPCM",184,0)
 Q
"RTN","GMVRPCM",185,0)
SETDATA ; [P] Save New Qualifier Name/Abbv
"RTN","GMVRPCM",186,0)
 S @RESULTS@(0)="-1^Use the New Term Rapid Turnaround (NTRT) process to add qualifiers"
"RTN","GMVRPCM",187,0)
 Q
"RTN","GMVRPCM",188,0)
SETDEF ; [P] Set Default Template
"RTN","GMVRPCM",189,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE DEFAULT",1,$P(DATA,U,2),.GMVERR)
"RTN","GMVRPCM",190,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Set As Default."
"RTN","GMVRPCM",191,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",192,0)
 Q
"RTN","GMVRPCM",193,0)
SETHILO ; [P] Set abnormal value
"RTN","GMVRPCM",194,0)
 L +(^GMRD(120.57,0)):5
"RTN","GMVRPCM",195,0)
 E  S @RESULTS@(0)="-1^Site File In Use." Q
"RTN","GMVRPCM",196,0)
 S GMVFLD=$P(DATA,"^",1),GMVVAL=$P(DATA,"^",2)
"RTN","GMVRPCM",197,0)
 S GMVFDA(120.57,"1,",GMVFLD)=GMVVAL
"RTN","GMVRPCM",198,0)
 D FILE^DIE("","GMVFDA","GMVERR")
"RTN","GMVRPCM",199,0)
 L -(^GMRD(120.57,0))
"RTN","GMVRPCM",200,0)
 S @RESULTS@(0)="1^Update Complete."
"RTN","GMVRPCM",201,0)
 Q
"RTN","GMVRPCM",202,0)
SETTEMP ; [P] Set Template data
"RTN","GMVRPCM",203,0)
 D EN^XPAR($P(DATA,U),"GMV TEMPLATE",$P(DATA,U,2),$P(DATA,U,3),.GMVERR)
"RTN","GMVRPCM",204,0)
 I '$G(GMVERR) S @RESULTS@(0)="1^Template Saved."
"RTN","GMVRPCM",205,0)
 E  S @RESULTS@(0)="-1^"_GMVERR
"RTN","GMVRPCM",206,0)
 Q
"RTN","GMVRPCM",207,0)
VALID ; [P] Verify data validity against fileman
"RTN","GMVRPCM",208,0)
 D VAL^DIE($P(DATA,U,1),$P(DATA,U,2),$P(DATA,U,3),"H",$P(DATA,U,4),.GMVRET)
"RTN","GMVRPCM",209,0)
 I GMVRET'="^" S @RESULTS@(0)="1^Valid Data"
"RTN","GMVRPCM",210,0)
 E  S @RESULTS@(0)="-1^"_^TMP("DIERR",$J,1,"TEXT",1)
"RTN","GMVRPCM",211,0)
 Q
"RTN","GMVRPCM",212,0)
ENTITY(X) ; [Function] Convert USR, SYS, and DIV entities
"RTN","GMVRPCM",213,0)
 ; Input parameters
"RTN","GMVRPCM",214,0)
 ;  1. X [Literal/Required] XPAR generic entity to transform to variable pointer format
"RTN","GMVRPCM",215,0)
 ;
"RTN","GMVRPCM",216,0)
 Q:X="USR" DUZ_";VA(200,"
"RTN","GMVRPCM",217,0)
 Q:X="SYS" $$FIND1^DIC(4.2,"","QX",$$KSP^XUPARAM("WHERE"))_";DIC(4.2,"
"RTN","GMVRPCM",218,0)
 Q:X="DIV" DUZ(2)_";DIC(4,"
"RTN","GMVRPCM",219,0)
 Q X
"RTN","GMVRPCM",220,0)
 ;
"RTN","GMVRPCM",221,0)
TYPE(X) ; [F] Returns the type of template
"RTN","GMVRPCM",222,0)
 ; Input parameters
"RTN","GMVRPCM",223,0)
 ;  1. X [Literal/Required] Variable pointer to evaluate
"RTN","GMVRPCM",224,0)
 ;
"RTN","GMVRPCM",225,0)
 Q:X="DIC(4.2," 1 ;Domain
"RTN","GMVRPCM",226,0)
 Q:X="DIC(4," 2 ;  Institution
"RTN","GMVRPCM",227,0)
 Q:X="SC(" 3 ;     Hospital Location
"RTN","GMVRPCM",228,0)
 Q:X="VA(200," 4 ; New Person
"RTN","GMVRPCM",229,0)
 Q 0 ;             Unknown
"RTN","GMVRPCM",230,0)
 ;
"RTN","GMVRPCM",231,0)
VT ;VitalTypeIENS
"RTN","GMVRPCM",232,0)
 N X,Y,Z
"RTN","GMVRPCM",233,0)
 S Y=0,@RESULTS@(0)="-1"
"RTN","GMVRPCM",234,0)
 F X="T","P","R","BP","HT","WT","PN","PO2","CVP","CG" D
"RTN","GMVRPCM",235,0)
 .S Z=$O(^GMRD(120.51,"C",X,0))
"RTN","GMVRPCM",236,0)
 .Q:'Z
"RTN","GMVRPCM",237,0)
 .S Y=Y+1,@RESULTS@(Y)=Z
"RTN","GMVRPCM",238,0)
 Q
"RTN","GMVUID")
0^3^B40300971
"RTN","GMVUID",1,0)
GMVUID ;HIOFO/FT-VUID-RELATED UTILITIES ;5/3/05  11:48
"RTN","GMVUID",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**8**;Oct 31, 2002
"RTN","GMVUID",3,0)
 ;
"RTN","GMVUID",4,0)
 ; This routine uses the following IAs:
"RTN","GMVUID",5,0)
 ;  #2263 - XPAR calls     (supported)
"RTN","GMVUID",6,0)
 ;  #4631 - XTID calls     (supported)
"RTN","GMVUID",7,0)
 ; #10070 - ^XMD           (supported)
"RTN","GMVUID",8,0)
 ;  #4640 - ^HDISVF01      (supported)
"RTN","GMVUID",9,0)
 ;
"RTN","GMVUID",10,0)
EN(ERROR) ; Clean up existing file connections and gui templates
"RTN","GMVUID",11,0)
 ;
"RTN","GMVUID",12,0)
 I ERROR D QMAIL Q
"RTN","GMVUID",13,0)
 N FILE,OK
"RTN","GMVUID",14,0)
 S OK=1
"RTN","GMVUID",15,0)
 F FILE=120.51,120.52,120.53 I '$$SCREEN^HDISVF01(FILE) S OK=0
"RTN","GMVUID",16,0)
 Q:'OK
"RTN","GMVUID",17,0)
 D QUAL,CAT,TEMPS
"RTN","GMVUID",18,0)
 Q
"RTN","GMVUID",19,0)
QMAIL ; Queue mail message
"RTN","GMVUID",20,0)
 N ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","GMVUID",21,0)
 S ZTRTN="MAIL^GMVUID",ZTDESC="GMRV VITALS VUID ERROR"
"RTN","GMVUID",22,0)
 S ZTIO="",ZTDTH=$H
"RTN","GMVUID",23,0)
 D ^%ZTLOAD
"RTN","GMVUID",24,0)
 Q
"RTN","GMVUID",25,0)
MAIL ; Send mail message to installer that an error occurred
"RTN","GMVUID",26,0)
 N GMVMSG,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","GMVUID",27,0)
 S XMY(DUZ)=""
"RTN","GMVUID",28,0)
 S XMDUZ=.5 ;message sender
"RTN","GMVUID",29,0)
 S XMSUB="ERROR IN VITALS VUID UPDATE"
"RTN","GMVUID",30,0)
 S GMVMSG(1)="An error occurred while updating the VUID data for the"
"RTN","GMVUID",31,0)
 S GMVMSG(2)="GEN. MED. REC. - VITALS package files. "
"RTN","GMVUID",32,0)
 S GMVMSG(3)=" "
"RTN","GMVUID",33,0)
 S GMVMSG(4)="Please log a Remedy ticket immediately. "
"RTN","GMVUID",34,0)
 S XMTEXT="GMVMSG("
"RTN","GMVUID",35,0)
 D ^XMD
"RTN","GMVUID",36,0)
 Q
"RTN","GMVUID",37,0)
QUAL ; Loop through the Qualifier entries in FILE 120.52:
"RTN","GMVUID",38,0)
 ; 1) If the QUALIFIER is not active, get rid of all VITAL TYPE (#1)
"RTN","GMVUID",39,0)
 ;    associations,
"RTN","GMVUID",40,0)
 ; 2) If the QUALIFIER is active and a VITAL TYPE is not active, get rid
"RTN","GMVUID",41,0)
 ;    of that VITAL TYPE association,
"RTN","GMVUID",42,0)
 ; 3) If the QUALIFIER and VITAL TYPE are active, but the CATEGORY 
"RTN","GMVUID",43,0)
 ;    (#.02 in subfile 120.521) is not, get rid of that subfile entry.
"RTN","GMVUID",44,0)
 ;
"RTN","GMVUID",45,0)
 N GMVNODE,GMVQUAL,GMVT
"RTN","GMVUID",46,0)
 S GMVQUAL=0
"RTN","GMVUID",47,0)
 F  S GMVQUAL=$O(^GMRD(120.52,GMVQUAL)) Q:'GMVQUAL  D
"RTN","GMVUID",48,0)
 .I $$ACTIVE(120.52,"",GMVQUAL_",","") D  Q  ;see #1 above
"RTN","GMVUID",49,0)
 ..S GMVT=0
"RTN","GMVUID",50,0)
 ..F  S GMVT=$O(^GMRD(120.52,GMVQUAL,1,GMVT)) Q:'GMVT  D
"RTN","GMVUID",51,0)
 ...D QUAL1(GMVQUAL,GMVT)
"RTN","GMVUID",52,0)
 ...Q
"RTN","GMVUID",53,0)
 ..Q
"RTN","GMVUID",54,0)
 .S GMVT=0
"RTN","GMVUID",55,0)
 .F  S GMVT=$O(^GMRD(120.52,GMVQUAL,1,GMVT)) Q:'GMVT  D
"RTN","GMVUID",56,0)
 ..S GMVNODE=$G(^GMRD(120.52,GMVQUAL,1,GMVT,0))
"RTN","GMVUID",57,0)
 ..S GMVTY=$$ACTIVE(120.51,"",+$P(GMVNODE,U)_",","")
"RTN","GMVUID",58,0)
 ..I GMVTY D
"RTN","GMVUID",59,0)
 ...D QUAL1(GMVQUAL,GMVT)
"RTN","GMVUID",60,0)
 ...Q
"RTN","GMVUID",61,0)
 ..I 'GMVTY D
"RTN","GMVUID",62,0)
 ...S GMVNODE=$G(^GMRD(120.52,GMVQUAL,1,GMVT,0))
"RTN","GMVUID",63,0)
 ...Q:GMVNODE=""
"RTN","GMVUID",64,0)
 ...I $$ACTIVE(120.53,"",$P(GMVNODE,U,2)_",","") D
"RTN","GMVUID",65,0)
 ....D QUAL1(GMVQUAL,GMVT)
"RTN","GMVUID",66,0)
 ....Q
"RTN","GMVUID",67,0)
 ...Q
"RTN","GMVUID",68,0)
 ..Q
"RTN","GMVUID",69,0)
 .Q
"RTN","GMVUID",70,0)
 Q
"RTN","GMVUID",71,0)
QUAL1(GMVX,GMVY) ; Delete a multiple entry (#1) in FILE 120.52
"RTN","GMVUID",72,0)
 N DA,DIK
"RTN","GMVUID",73,0)
 S DA(1)=GMVX,DA=GMVY,DIK="^GMRD(120.52,"_DA(1)_",1,"
"RTN","GMVUID",74,0)
 D ^DIK
"RTN","GMVUID",75,0)
 Q
"RTN","GMVUID",76,0)
CAT ; Loop through the Category entries in FILE 120.53:
"RTN","GMVUID",77,0)
 ; 1) If the CATEGORY is not active, get rid of all VITAL TYPE (#1)
"RTN","GMVUID",78,0)
 ;    associations,
"RTN","GMVUID",79,0)
 ; 2) If the CATEGORY is active and a VITAL TYPE is not active, get rid
"RTN","GMVUID",80,0)
 ;    of that VITAL TYPE association,
"RTN","GMVUID",81,0)
 ; 3) If the CATEGORY and VITAL TYPE are active, but the DEFAULT
"RTN","GMVUID",82,0)
 ;    QUALIFIER (#.07) is not, null out the DEFAULT QUALIFIER field.
"RTN","GMVUID",83,0)
 ;
"RTN","GMVUID",84,0)
 N GMVCAT,GMVNODE,GMVT,GMVTI,GMVTY
"RTN","GMVUID",85,0)
 S GMVCAT=0
"RTN","GMVUID",86,0)
 F  S GMVCAT=$O(^GMRD(120.53,GMVCAT)) Q:'GMVCAT  D
"RTN","GMVUID",87,0)
 .I $$ACTIVE(120.53,"",GMVCAT_",","") D  Q  ;see #1 sbove
"RTN","GMVUID",88,0)
 ..S GMVT=0
"RTN","GMVUID",89,0)
 ..F  S GMVT=$O(^GMRD(120.53,GMVCAT,1,GMVT)) Q:'GMVT  D
"RTN","GMVUID",90,0)
 ..D CAT1(GMVCAT,GMVT)
"RTN","GMVUID",91,0)
 ..Q
"RTN","GMVUID",92,0)
 .;The CATEGORY is active, but check if the VITAL TYPE is active.
"RTN","GMVUID",93,0)
 .S GMVT=0
"RTN","GMVUID",94,0)
 .F  S GMVT=$O(^GMRD(120.53,GMVCAT,1,GMVT)) Q:'GMVT  D
"RTN","GMVUID",95,0)
 ..S GMVTI=+$P($G(^GMRD(120.53,GMVCAT,1,GMVT,0)),U,1)
"RTN","GMVUID",96,0)
 ..S GMVTY=$$ACTIVE(120.51,"",GMVTI_",","")
"RTN","GMVUID",97,0)
 ..I GMVTY D  ;see #2 above
"RTN","GMVUID",98,0)
 ...D CAT1(GMVCAT,GMVT)
"RTN","GMVUID",99,0)
 ...Q
"RTN","GMVUID",100,0)
 ..I 'GMVTY D
"RTN","GMVUID",101,0)
 ...S GMVNODE=$G(^GMRD(120.53,GMVCAT,1,GMVT,0))
"RTN","GMVUID",102,0)
 ...Q:GMVNODE=""
"RTN","GMVUID",103,0)
 ...Q:$P(GMVNODE,U,7)=""
"RTN","GMVUID",104,0)
 ...I $$ACTIVE(120.52,"",$P(GMVNODE,U,7)_",","") D  ;see #3 above
"RTN","GMVUID",105,0)
 ....D CAT2(GMVCAT,GMVT)
"RTN","GMVUID",106,0)
 ....Q
"RTN","GMVUID",107,0)
 ...Q
"RTN","GMVUID",108,0)
 ..Q
"RTN","GMVUID",109,0)
 .Q
"RTN","GMVUID",110,0)
 Q
"RTN","GMVUID",111,0)
CAT1(GMVX,GMVY) ; Delete a multiple entry (#1) in FILE 120.53
"RTN","GMVUID",112,0)
 N DA,DIK
"RTN","GMVUID",113,0)
 S DA(1)=GMVX,DA=GMVY,DIK="^GMRD(120.53,"_DA(1)_",1,"
"RTN","GMVUID",114,0)
 D ^DIK
"RTN","GMVUID",115,0)
 Q
"RTN","GMVUID",116,0)
CAT2(GMVX,GMVY) ; Delete a default qualifier
"RTN","GMVUID",117,0)
 Q:'GMVX
"RTN","GMVUID",118,0)
 Q:'GMVY
"RTN","GMVUID",119,0)
 S $P(^GMRD(120.53,GMVX,1,GMVY,0),U,7)=""
"RTN","GMVUID",120,0)
 Q
"RTN","GMVUID",121,0)
ACTIVE(GMVFILE,GMVFLD,GMVIEN,GMVDATE) ; Calls the $$SCREEN^XTID API to get VUID status
"RTN","GMVUID",122,0)
 ; Input: GMVFILE - File number
"RTN","GMVUID",123,0)
 ;         GMVFLD - Field number
"RTN","GMVUID",124,0)
 ;         GMVIEN - IEN
"RTN","GMVUID",125,0)
 ;        GMVDATE - Date
"RTN","GMVUID",126,0)
 ; Output: 0 - Active
"RTN","GMVUID",127,0)
 ;         1 - Inactive 
"RTN","GMVUID",128,0)
 Q $$SCREEN^XTID(GMVFILE,GMVFLD,GMVIEN,GMVDATE)
"RTN","GMVUID",129,0)
 ;
"RTN","GMVUID",130,0)
GET(GMVFILE,GMVIEN,GMVREF) ; Calls the $$GETVUID^XTID API to get the VUID number
"RTN","GMVUID",131,0)
 ; GMVFILE - File number
"RTN","GMVUID",132,0)
 ; GMVIEN  - field #
"RTN","GMVUID",133,0)
 ; GMVREF  - value
"RTN","GMVUID",134,0)
 N GMVUID
"RTN","GMVUID",135,0)
 S GMVUID=$$GETVUID^XTID(GMVFILE,GMVIEN,GMVREF)
"RTN","GMVUID",136,0)
 Q $P(GMVUID,U,1)
"RTN","GMVUID",137,0)
 ;
"RTN","GMVUID",138,0)
TEMPS ; Clean up GUI templates definitions.
"RTN","GMVUID",139,0)
 ; If a qualifier is inactive, remove it and its category.
"RTN","GMVUID",140,0)
 N GMV,GMV1,GMV2,GMVDESC,GMVERR,GMVI,GMVJ,GMVLIST,GMVNEW,GMVNODE,GMVOLD,GMVORIG,GMVQUAL,GMVX,GMVY
"RTN","GMVUID",141,0)
 K ^TMP($J)
"RTN","GMVUID",142,0)
 S GMVLIST=$NA(^TMP($J))
"RTN","GMVUID",143,0)
 D ENVAL^XPAR(.GMVLIST,"GMV TEMPLATE","","",1)
"RTN","GMVUID",144,0)
 Q:'$D(^TMP($J))
"RTN","GMVUID",145,0)
 S GMV1="" ; ien;file
"RTN","GMVUID",146,0)
 F  S GMV1=$O(^TMP($J,GMV1)) Q:GMV1=""  D
"RTN","GMVUID",147,0)
 .S GMV2="" ;template name
"RTN","GMVUID",148,0)
 .F  S GMV2=$O(^TMP($J,GMV1,GMV2)) Q:GMV2=""  D
"RTN","GMVUID",149,0)
 ..S (GMVNODE,GMVORIG)=$G(^TMP($J,GMV1,GMV2))
"RTN","GMVUID",150,0)
 ..Q:GMVNODE=""
"RTN","GMVUID",151,0)
 ..S GMVDESC=$P(GMVNODE,"|",1) ;template description
"RTN","GMVUID",152,0)
 ..S GMVNODE=$P(GMVNODE,"|",2)
"RTN","GMVUID",153,0)
 ..K GMV ;array of vital types
"RTN","GMVUID",154,0)
 ..F GMVI=1:1 Q:$P(GMVNODE,";",GMVI)=""  S GMV(GMVI)=$P(GMVNODE,";",GMVI)
"RTN","GMVUID",155,0)
 ..S GMVI=0
"RTN","GMVUID",156,0)
 ..F  S GMVI=$O(GMV(GMVI)) Q:'GMVI  D
"RTN","GMVUID",157,0)
 ...S GMVX=GMV(GMVI)
"RTN","GMVUID",158,0)
 ...Q:GMVX=""
"RTN","GMVUID",159,0)
 ...S GMVY=$P(GMVX,":",1,2) ;vital ien:metric indicator
"RTN","GMVUID",160,0)
 ...S GMVX=$P(GMVX,":",3) ;~categories,qualifiers~
"RTN","GMVUID",161,0)
 ...Q:GMVX=""
"RTN","GMVUID",162,0)
 ...S GMVNEW=""
"RTN","GMVUID",163,0)
 ...F GMVJ=1:1 Q:$P(GMVX,"~",GMVJ)=""  D
"RTN","GMVUID",164,0)
 ....S GMVOLD=$P(GMVX,"~",GMVJ) ;each category & qualifier combo
"RTN","GMVUID",165,0)
 ....S GMVQUAL=$P(GMVOLD,",",2) ;qualifier
"RTN","GMVUID",166,0)
 ....I '$$ACTIVE(120.52,"",GMVQUAL_",",""),$$COMBO($P(GMVY,":",1),GMVQUAL,$P(GMVOLD,",",1)) S GMVNEW=GMVNEW_GMVOLD_"~" ;active qualifier & right combination of type, qualifier and category
"RTN","GMVUID",167,0)
 ...I $E(GMVNEW,$L(GMVNEW))="~" S GMVNEW=$E(GMVNEW,1,($L(GMVNEW)-1))
"RTN","GMVUID",168,0)
 ...S:GMVNEW]"" GMVNEW=GMVY_":"_GMVNEW
"RTN","GMVUID",169,0)
 ...S:GMVNEW="" GMVNEW=GMVY
"RTN","GMVUID",170,0)
 ...S GMV(GMVI)=GMVNEW
"RTN","GMVUID",171,0)
 ..S GMVI=0,GMVNODE=GMVDESC_"|"
"RTN","GMVUID",172,0)
 ..F  S GMVI=$O(GMV(GMVI)) Q:'GMVI  D
"RTN","GMVUID",173,0)
 ...S GMVNODE=GMVNODE_GMV(GMVI)_";"
"RTN","GMVUID",174,0)
 ...Q
"RTN","GMVUID",175,0)
 ..I $E(GMVNODE,$L(GMVNODE))=";" S GMVNODE=$E(GMVNODE,1,($L(GMVNODE)-1))
"RTN","GMVUID",176,0)
 ..I $E(GMVNODE,$L(GMVNODE))="|" S GMVNODE=$E(GMVNODE,1,($L(GMVNODE)-1))
"RTN","GMVUID",177,0)
 ..I GMVNODE=GMVORIG Q  ;no change in template
"RTN","GMVUID",178,0)
 ..D EN^XPAR(GMV1,"GMV TEMPLATE",GMV2,GMVNODE,.GMVERR)
"RTN","GMVUID",179,0)
 ..Q
"RTN","GMVUID",180,0)
 .Q
"RTN","GMVUID",181,0)
 K ^TMP($J)
"RTN","GMVUID",182,0)
 Q
"RTN","GMVUID",183,0)
COMBO(GMVTI,GMVQUALI,GMVCATI) ; Check if this combination is in the AA cross-
"RTN","GMVUID",184,0)
 ; reference of File 120.52
"RTN","GMVUID",185,0)
 ; Input:
"RTN","GMVUID",186,0)
 ;     GMVTI - File 120.51 ien
"RTN","GMVUID",187,0)
 ;  GMVQUALI - File 120.52 ien
"RTN","GMVUID",188,0)
 ;   GMVCATI - File 120.53 ien
"RTN","GMVUID",189,0)
 N GMVFLAG,GMVQUALE
"RTN","GMVUID",190,0)
 S GMVFLAG=0
"RTN","GMVUID",191,0)
 S GMVTI=+$G(GMVTI),GMVQUALI=+$G(GMVQUALI),GMVCATI=+$G(GMVCATI)
"RTN","GMVUID",192,0)
 I 'GMVTI!(GMVQUALI'>0)!(GMVCATI'>0) Q GMVFLAG
"RTN","GMVUID",193,0)
 S GMVQUALE=$P($G(^GMRD(120.52,GMVQUALI,0)),U,1)
"RTN","GMVUID",194,0)
 I GMVQUALE="" Q GMVFLAG
"RTN","GMVUID",195,0)
 I $D(^GMRD(120.52,"AA",GMVTI,GMVCATI,GMVQUALE,GMVQUALI)) S GMVFLAG=1
"RTN","GMVUID",196,0)
 Q GMVFLAG
"RTN","GMVUID",197,0)
 ;
"RTN","GMVVDEF1")
0^8^B39468081
"RTN","GMVVDEF1",1,0)
GMVVDEF1 ;BPOIFO/JG,HIOFO/FT - BUILD HL7 ORU^R01 MESSAGE FOR VITALS ;4/19/05  15:43
"RTN","GMVVDEF1",2,0)
 ;;5.0;GEN. MED. REC. - VITALS;**5,8**;Oct 31, 2002
"RTN","GMVVDEF1",3,0)
VALID ;;VDEF HL7 MESSAGE BUILDER
"RTN","GMVVDEF1",4,0)
 ; Creates HL7 V2.4 ORU^R01 message for vitals
"RTN","GMVVDEF1",5,0)
 ;
"RTN","GMVVDEF1",6,0)
 ; This routine uses the following IAs:
"RTN","GMVVDEF1",7,0)
 ;    #93 - FILE 44 references   (controlled)
"RTN","GMVVDEF1",8,0)
 ;   #557 - FILE 40.7 references (controlled)
"RTN","GMVVDEF1",9,0)
 ;  #2432 - FILE 44 references   (controlled)
"RTN","GMVVDEF1",10,0)
 ;  #3630 - VAFCQRY calls        (controlled)
"RTN","GMVVDEF1",11,0)
 ;  #4248 - VDEFEL calls         (controlled)
"RTN","GMVVDEF1",12,0)
 ;  #4571 - VDEFREQ calls        (controlled)
"RTN","GMVVDEF1",13,0)
 ; #10040 - FILE 44 references   (supported)
"RTN","GMVVDEF1",14,0)
 ; #10112 - VASITE calls         (supported)
"RTN","GMVVDEF1",15,0)
 ;
"RTN","GMVVDEF1",16,0)
 ; This routine is called at tag EN as a Function by VDEFREQ1
"RTN","GMVVDEF1",17,0)
 ;
"RTN","GMVVDEF1",18,0)
 Q
"RTN","GMVVDEF1",19,0)
 ;
"RTN","GMVVDEF1",20,0)
EN(EVIEN,KEY,VFLAG,OUT,MSHP) ; Entry point
"RTN","GMVVDEF1",21,0)
 ;
"RTN","GMVVDEF1",22,0)
 ; Inputs: EVIEN = IEN of VDEF Event in file 577
"RTN","GMVVDEF1",23,0)
 ;         KEY - IEN of file to create message from
"RTN","GMVVDEF1",24,0)
 ;         VFLAG - "V" for VistA HL7 destination (default)
"RTN","GMVVDEF1",25,0)
 ;         OUT - target array, passed by reference
"RTN","GMVVDEF1",26,0)
 ;         MSHP - Piece 4 contains message subtype
"RTN","GMVVDEF1",27,0)
 ;
"RTN","GMVVDEF1",28,0)
 ; Output: Two part string with parts separated by "^"
"RTN","GMVVDEF1",29,0)
 ;         Part 1: "LM" - output in local array passed in "OUT" parameter
"RTN","GMVVDEF1",30,0)
 ;                 "GM" - output in ^TMP("HLS",$J)
"RTN","GMVVDEF1",31,0)
 ;         Part 2: No longer used
"RTN","GMVVDEF1",32,0)
 ;
"RTN","GMVVDEF1",33,0)
 N DFN,HLFS,HLCM,HLSC,HLRP,HLES,HLQ,VTLDAT,UM,VTLTYP,DTE,DTP
"RTN","GMVVDEF1",34,0)
 N VTLERR,VAL,I,S,X,Y,QUALS,HL7RC,PIDSEG,IEN1,SEQ,STOPCD,EIEVUID
"RTN","GMVVDEF1",35,0)
 N SEPF,SEPC,SEPR,SEPE,SEPS,VTLNAM,ARRAY,O2SUP,OUTX,ADD,VTLVUID
"RTN","GMVVDEF1",36,0)
 ;
"RTN","GMVVDEF1",37,0)
 ; Initialize stuff
"RTN","GMVVDEF1",38,0)
 K ^TMP("HLS",$J) S S=0,ARRAY="OUT("_"""HLS"""_",S)",TARGET="LM^"
"RTN","GMVVDEF1",39,0)
 ;
"RTN","GMVVDEF1",40,0)
 ; Set up HL7 delimiters
"RTN","GMVVDEF1",41,0)
 S HLCM=$E(VDEFHL("ECH")),HLRP=$E(VDEFHL("ECH"),2),HLSC=$E(VDEFHL("ECH"),4),HLES=$E(VDEFHL("ECH"),3)
"RTN","GMVVDEF1",42,0)
 S HLFS=VDEFHL("FS"),HLQ=VDEFHL("Q"),HL7RC=HLES_HLFS_HLCM_HLRP_HLSC
"RTN","GMVVDEF1",43,0)
 D SETDLMS^VDEFEL
"RTN","GMVVDEF1",44,0)
 ;
"RTN","GMVVDEF1",45,0)
 ; Get the vitals measurement record & patient ID
"RTN","GMVVDEF1",46,0)
 S VTLDAT=$$EN^GMVHDR(KEY)
"RTN","GMVVDEF1",47,0)
 I 'VTLDAT D ERR^VDEFREQ("Invalid data in file GMR(120.5) for IEN "_KEY) S ZTSTOP=1 G EXIT
"RTN","GMVVDEF1",48,0)
 S DFN=$P(VTLDAT,U,2),VTLTYP=$P(VTLDAT,U,7)
"RTN","GMVVDEF1",49,0)
 S VTLVUID=$$GET^GMVUID(120.51,.01,+VTLTYP_",") ;vital type vuid
"RTN","GMVVDEF1",50,0)
 S O2SUP=$P(VTLDAT,U,10),VTLERR=$P(VTLDAT,U,11)
"RTN","GMVVDEF1",51,0)
 S X=$P(VTLDAT,U,5) I +X'=X!(X<0) S $P(VTLDAT,U,5)=""
"RTN","GMVVDEF1",52,0)
 S STOPCD=""
"RTN","GMVVDEF1",53,0)
 I $P(VTLDAT,U,5)'="" D
"RTN","GMVVDEF1",54,0)
 . S STOPCD=$P($G(^SC($P(VTLDAT,U,5),0)),U,7) Q:STOPCD=""
"RTN","GMVVDEF1",55,0)
 . S STOPCD=$G(^DIC(40.7,STOPCD,0))
"RTN","GMVVDEF1",56,0)
 . S STOPCD=$P(STOPCD,U,2)_";"_$P(STOPCD,U)
"RTN","GMVVDEF1",57,0)
 ;
"RTN","GMVVDEF1",58,0)
 ; Build segments for message in OUTX, $P # = HL7 field #
"RTN","GMVVDEF1",59,0)
 ;
"RTN","GMVVDEF1",60,0)
 ; PID - Use MPI PID builder
"RTN","GMVVDEF1",61,0)
PID K PIDSEG S OUTX="",S=1,SEQ=""
"RTN","GMVVDEF1",62,0)
 I $G(^DPT(DFN,0))="" D ERR^VDEFREQ("No entry in file DPT for DFN "_DFN) S ZTSTOP=1 G EXIT
"RTN","GMVVDEF1",63,0)
 D BLDPID^VAFCQRY(DFN,1,SEQ,.PIDSEG,.VDEFHL)
"RTN","GMVVDEF1",64,0)
 F I=2:1 Q:$G(PIDSEG(I))=""  S PIDSEG(1,I-1)=PIDSEG(I) K PIDSEG(I)
"RTN","GMVVDEF1",65,0)
 M OUTX=PIDSEG(1) K PIDSEG D SAVE
"RTN","GMVVDEF1",66,0)
 ;
"RTN","GMVVDEF1",67,0)
 ; ORC
"RTN","GMVVDEF1",68,0)
ORC S S=S+1,OUTX="RE"
"RTN","GMVVDEF1",69,0)
 ;
"RTN","GMVVDEF1",70,0)
 ; Filler ID
"RTN","GMVVDEF1",71,0)
 S X=KEY_HLCM_$P(SITEPARM,U,4)_"_120.5",$P(OUTX,HLFS,3)=X
"RTN","GMVVDEF1",72,0)
 ;
"RTN","GMVVDEF1",73,0)
 ; Enterer's location
"RTN","GMVVDEF1",74,0)
 I $P(VTLDAT,U,5)'="" D
"RTN","GMVVDEF1",75,0)
 . S X=$G(^SC($P(VTLDAT,U,5),0)),VAL=$P(X,U,2)
"RTN","GMVVDEF1",76,0)
 . S $P(VAL,HLCM,9)=$P(X,U),$P(OUTX,HLFS,13)=VAL
"RTN","GMVVDEF1",77,0)
 . S X=$$SITE^VASITE($P(VTLDAT,U),$P(X,U,15))
"RTN","GMVVDEF1",78,0)
 . S VAL=$P(X,U,3)_HLCM_$P(X,U,2)_HLCM_"L",$P(OUTX,HLFS,17)=VAL
"RTN","GMVVDEF1",79,0)
 S VAL=$P(OUTX,HLFS,3),OUTX="ORC"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",80,0)
 ;
"RTN","GMVVDEF1",81,0)
 ; OBR
"RTN","GMVVDEF1",82,0)
OBR S S=S+1,OUTX="",VTLNAM=$$HL7RC($P(^GMRD(120.51,VTLTYP,0),U))
"RTN","GMVVDEF1",83,0)
 S X=VTLVUID_HLCM_VTLNAM_HLCM_"99VA120.51"
"RTN","GMVVDEF1",84,0)
 ;
"RTN","GMVVDEF1",85,0)
 ; Add filler ID from ORC-3 & Procedure name
"RTN","GMVVDEF1",86,0)
 S $P(OUTX,HLFS,3)=VAL,$P(OUTX,HLFS,4)=X
"RTN","GMVVDEF1",87,0)
 ;
"RTN","GMVVDEF1",88,0)
 ; Dates/times vital taken & entered
"RTN","GMVVDEF1",89,0)
 S DTP=$$TS^VDEFEL($P(VTLDAT,U)),$P(OUTX,HLFS,7)=DTP
"RTN","GMVVDEF1",90,0)
 S DTE=$$TS^VDEFEL($P(VTLDAT,U,4)),$P(OUTX,HLFS,8)=DTE
"RTN","GMVVDEF1",91,0)
 ;
"RTN","GMVVDEF1",92,0)
 ; Use date/time vital entered for results reported
"RTN","GMVVDEF1",93,0)
 S $P(OUTX,HLFS,22)=DTE,OUTX="OBR"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",94,0)
 ;
"RTN","GMVVDEF1",95,0)
 ; OBX 1 - Vital name
"RTN","GMVVDEF1",96,0)
OBX1 S S=S+1,OUTX=HLFS_"ST"
"RTN","GMVVDEF1",97,0)
 ;
"RTN","GMVVDEF1",98,0)
 ; Observation ID - Vital name
"RTN","GMVVDEF1",99,0)
 S X=VTLVUID_HLCM_VTLNAM_HLCM_"99VA120.51",$P(OUTX,HLFS,3)=X
"RTN","GMVVDEF1",100,0)
 ;
"RTN","GMVVDEF1",101,0)
 ; Unit of measure
"RTN","GMVVDEF1",102,0)
 ; If vital not performed, set units to null
"RTN","GMVVDEF1",103,0)
 S UM=$P(VTLDAT,U,9) S:$F("Pass Refused Unavailable",$P(VTLDAT,U,8))>0 UM=""
"RTN","GMVVDEF1",104,0)
 S UM=UM_HLCM_UM_HLCM_"L"
"RTN","GMVVDEF1",105,0)
 ;
"RTN","GMVVDEF1",106,0)
 ; Set sub-id if O2 supplements to follow
"RTN","GMVVDEF1",107,0)
 S:O2SUP'="" $P(OUTX,HLFS,4)=1
"RTN","GMVVDEF1",108,0)
 S $P(OUTX,HLFS,5)=$P(VTLDAT,U,8),$P(OUTX,HLFS,6)=UM
"RTN","GMVVDEF1",109,0)
 ;
"RTN","GMVVDEF1",110,0)
 ; Set result status to Final or Wrong if errors entered
"RTN","GMVVDEF1",111,0)
 S $P(OUTX,HLFS,11)=$E("FW",VTLERR'=""+1)
"RTN","GMVVDEF1",112,0)
 S $P(OUTX,HLFS,16)=$$XCN200^VDEFEL($P(VTLDAT,U,6))
"RTN","GMVVDEF1",113,0)
 S OUTX="OBX"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",114,0)
 ;
"RTN","GMVVDEF1",115,0)
 ; OBX2 - O2 Supplement
"RTN","GMVVDEF1",116,0)
OBX2 G QUALS:O2SUP="" S (VAL,UM)=""
"RTN","GMVVDEF1",117,0)
 S S=S+1,OUTX=HLFS_"ST"_HLFS_"O2 Supplement" D
"RTN","GMVVDEF1",118,0)
 . I O2SUP["%",O2SUP'["l/min" S VAL=+O2SUP,UM="%" Q
"RTN","GMVVDEF1",119,0)
 . I O2SUP'["%",O2SUP["l/min" S VAL=+O2SUP,UM="l/min"
"RTN","GMVVDEF1",120,0)
 . I O2SUP["%",O2SUP["l/min" S $P(VAL,U)=$P(O2SUP," "),$P(UM,U)="l/min",$P(VAL,U,2)=+$P(O2SUP," ",3),$P(UM,U,2)="%"
"RTN","GMVVDEF1",121,0)
 S X=$P(UM,U),X=X_HLCM_X_HLCM_"L",$P(UM,U)=X
"RTN","GMVVDEF1",122,0)
 I $P(UM,U,2)'="" S X=$P(UM,U,2),X=X_HLCM_X_HLCM_"L",$P(UM,U,2)=X
"RTN","GMVVDEF1",123,0)
 S $P(OUTX,HLFS,4)=2,$P(OUTX,HLFS,5)=$P(VAL,U,1),$P(OUTX,HLFS,6)=$P(UM,U)
"RTN","GMVVDEF1",124,0)
 S $P(OUTX,HLFS,11)="F"
"RTN","GMVVDEF1",125,0)
 S OUTX="OBX"_HLFS_OUTX,X=OUTX D SAVE
"RTN","GMVVDEF1",126,0)
 ; If more than one O2 supplement, add another OBX
"RTN","GMVVDEF1",127,0)
 ; Field offset in OUT is now +1 because OBX has been added
"RTN","GMVVDEF1",128,0)
 S OUTX=X I $P(VAL,U,2)'="" D
"RTN","GMVVDEF1",129,0)
 . S S=S+1,$P(OUTX,HLFS,5)=3,$P(OUTX,HLFS,6)=$P(VAL,U,2),$P(OUTX,HLFS,7)=$P(UM,U,2)
"RTN","GMVVDEF1",130,0)
 . D SAVE
"RTN","GMVVDEF1",131,0)
 ;
"RTN","GMVVDEF1",132,0)
 ; Qualifiers
"RTN","GMVVDEF1",133,0)
QUALS S QUALS="",X=$O(^GMR(120.5,KEY,5,0)) G ERRS:X=""
"RTN","GMVVDEF1",134,0)
 S S=S+1,OUTX=HLFS_"CE"_HLFS_"Qualifiers"_HLFS_HLFS
"RTN","GMVVDEF1",135,0)
 ;
"RTN","GMVVDEF1",136,0)
 ; Get qualifiers
"RTN","GMVVDEF1",137,0)
 S IEN1=0 F  S IEN1=$O(^GMR(120.5,KEY,5,IEN1)) Q:'+IEN1  D
"RTN","GMVVDEF1",138,0)
 . S X=^GMR(120.5,KEY,5,IEN1,0),VAL=$$HL7RC($P(^GMRD(120.52,X,0),U))
"RTN","GMVVDEF1",139,0)
 . S X=$$GET^GMVUID(120.52,.01,+X_",") ;qualifier vuid
"RTN","GMVVDEF1",140,0)
 . S VAL=X_HLCM_VAL_HLCM_"99VA120.52",QUALS=QUALS_VAL_HLRP
"RTN","GMVVDEF1",141,0)
 ;
"RTN","GMVVDEF1",142,0)
 ; Set result and result status
"RTN","GMVVDEF1",143,0)
 S $P(OUTX,HLFS,5)=$E(QUALS,1,$L(QUALS)-1),$P(OUTX,HLFS,11)="F"
"RTN","GMVVDEF1",144,0)
 S OUTX="OBX"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",145,0)
 ;
"RTN","GMVVDEF1",146,0)
 ; Entered in Error
"RTN","GMVVDEF1",147,0)
ERRS G ZSC:VTLERR="" S S=S+1,OUTX=HLFS_"CE"_HLFS_"Error Reasons"_HLFS_HLFS
"RTN","GMVVDEF1",148,0)
 ;
"RTN","GMVVDEF1",149,0)
 ; Error data reason(s)
"RTN","GMVVDEF1",150,0)
 S X=$P(VTLDAT,U,13),VAL=""
"RTN","GMVVDEF1",151,0)
 F I=1:1:$L(X,"~") D
"RTN","GMVVDEF1",152,0)
 .S Y=$P(X,"~",I)
"RTN","GMVVDEF1",153,0)
 .S EIEVUID=$$GET^GMVUID(120.506,.01,$P(Y,"-",1)) ;error vuid
"RTN","GMVVDEF1",154,0)
 .S VAL=VAL_EIEVUID_HLCM_$$HL7RC($P(Y,"-",2))_HLCM_"99VA8985.1"_HLRP
"RTN","GMVVDEF1",155,0)
 S VAL=$E(VAL,1,$L(VAL)-1),$P(OUTX,HLFS,5)=VAL,$P(OUTX,HLFS,11)="F"
"RTN","GMVVDEF1",156,0)
 S OUTX="OBX"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",157,0)
 ;
"RTN","GMVVDEF1",158,0)
 ; Stop Code & Name
"RTN","GMVVDEF1",159,0)
ZSC G EXIT:STOPCD=""
"RTN","GMVVDEF1",160,0)
 S S=S+1,OUTX=HLFS_$P(STOPCD,";")_HLFS_$P(STOPCD,";",2)
"RTN","GMVVDEF1",161,0)
 S OUTX="ZSC"_HLFS_OUTX D SAVE
"RTN","GMVVDEF1",162,0)
 ;
"RTN","GMVVDEF1",163,0)
 ; Done building segments
"RTN","GMVVDEF1",164,0)
EXIT Q TARGET
"RTN","GMVVDEF1",165,0)
 ;
"RTN","GMVVDEF1",166,0)
 ;
"RTN","GMVVDEF1",167,0)
 ; Place current string into message array.
"RTN","GMVVDEF1",168,0)
 ; Turn string into array if length >245.
"RTN","GMVVDEF1",169,0)
 ; Move local array to global if needed.
"RTN","GMVVDEF1",170,0)
SAVE N I
"RTN","GMVVDEF1",171,0)
 I $P(OUTX,HLFS)'="PID",$L(OUTX)>245 D
"RTN","GMVVDEF1",172,0)
 . K ADD S ADD=$E(OUTX,1,245),OUTX=$E(OUTX,246,$L(OUTX))
"RTN","GMVVDEF1",173,0)
 . F I=1:1 S ADD(I)=$E(OUTX,1,245),OUTX=$E(OUTX,246,$L(OUTX)) Q:OUTX=""
"RTN","GMVVDEF1",174,0)
 . K OUTX M OUTX=ADD
"RTN","GMVVDEF1",175,0)
 M @ARRAY=OUTX
"RTN","GMVVDEF1",176,0)
 ;
"RTN","GMVVDEF1",177,0)
 ; Move local array to global if it's getting big.
"RTN","GMVVDEF1",178,0)
 I $P(TARGET,U)="LM",$S<16000 D
"RTN","GMVVDEF1",179,0)
 . K ^TMP("HLS",$J) M ^TMP("HLS",$J)=OUT("HLS") K OUT("HLS")
"RTN","GMVVDEF1",180,0)
 . S $P(TARGET,U)="GM",ARRAY="^TMP("_"""HLS"""_",$J,S)"
"RTN","GMVVDEF1",181,0)
 K OUTX,ADD
"RTN","GMVVDEF1",182,0)
 Q
"RTN","GMVVDEF1",183,0)
 ;
"RTN","GMVVDEF1",184,0)
 ; Replace any HL7 coding chars. in strings with HL7 escape sequence
"RTN","GMVVDEF1",185,0)
 ; Input: X = data string
"RTN","GMVVDEF1",186,0)
HL7RC(X) N OCHR,RCHR,RCHRI,TYPE,I F TYPE="E","F","C","R","S" D
"RTN","GMVVDEF1",187,0)
 . S RCHRI=$S(TYPE="E":1,TYPE="F":2,TYPE="C":3,TYPE="R":4,TYPE="S":5)
"RTN","GMVVDEF1",188,0)
 . S OCHR=$E(HL7RC,RCHRI),RCHR=$E("EFSRT",RCHRI)
"RTN","GMVVDEF1",189,0)
 . Q:'$F(X,OCHR)
"RTN","GMVVDEF1",190,0)
 . F I=1:1 Q:$E(X,I)=""  I $E(X,I)=OCHR S X=$E(X,1,I-1)_HLES_RCHR_HLES_$E(X,I+1,999),I=I+2
"RTN","GMVVDEF1",191,0)
 Q X
"SEC","^DIC",120.51,120.51,0,"AUDIT")
@
"SEC","^DIC",120.51,120.51,0,"DD")
@
"SEC","^DIC",120.51,120.51,0,"DEL")
@
"SEC","^DIC",120.51,120.51,0,"LAYGO")
@
"SEC","^DIC",120.51,120.51,0,"RD")

"SEC","^DIC",120.51,120.51,0,"WR")
@
"SEC","^DIC",120.52,120.52,0,"AUDIT")
@
"SEC","^DIC",120.52,120.52,0,"DD")
@
"SEC","^DIC",120.52,120.52,0,"DEL")
@
"SEC","^DIC",120.52,120.52,0,"LAYGO")
@
"SEC","^DIC",120.52,120.52,0,"RD")

"SEC","^DIC",120.52,120.52,0,"WR")
@
"SEC","^DIC",120.53,120.53,0,"AUDIT")
@
"SEC","^DIC",120.53,120.53,0,"DD")
@
"SEC","^DIC",120.53,120.53,0,"DEL")
@
"SEC","^DIC",120.53,120.53,0,"LAYGO")
@
"SEC","^DIC",120.53,120.53,0,"RD")

"SEC","^DIC",120.53,120.53,0,"WR")
@
"VER")
8.0^22
"^DD",120.51,120.51,0)
FIELD^^99.991^9
"^DD",120.51,120.51,0,"DDA")
N
"^DD",120.51,120.51,0,"DT")
3050210
"^DD",120.51,120.51,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",120.51,120.51,0,"IX","APCE",120.51,7)

"^DD",120.51,120.51,0,"IX","AVUID",120.51,99.99)

"^DD",120.51,120.51,0,"IX","B",120.51,.01)

"^DD",120.51,120.51,0,"IX","C",120.51,1)

"^DD",120.51,120.51,0,"NM","GMRV VITAL TYPE")
 
"^DD",120.51,120.51,0,"PT",120.5,.03)
 
"^DD",120.51,120.51,0,"PT",120.521,.01)

"^DD",120.51,120.51,0,"PT",120.531,.01)

"^DD",120.51,120.51,0,"PT",142.14,.01)
 
"^DD",120.51,120.51,0,"PT",801.41,15)
 
"^DD",120.51,120.51,0,"PT",801.4118,.01)
 
"^DD",120.51,120.51,0,"PT",801.43,.02)
 
"^DD",120.51,120.51,0,"PT",810.31,.04)
 
"^DD",120.51,120.51,0,"PT",810.32,.01)
 
"^DD",120.51,120.51,0,"PT",811.52,.01)
 
"^DD",120.51,120.51,0,"PT",811.902,.01)
 
"^DD",120.51,120.51,0,"VRPK")
GMRV
"^DD",120.51,120.51,.01,0)
NAME^RF^^0;1^K:$L(X)>50!($L(X)<2)!'(X'?1P.E) X
"^DD",120.51,120.51,.01,1,0)
^.1
"^DD",120.51,120.51,.01,1,1,0)
120.51^B
"^DD",120.51,120.51,.01,1,1,1)
S ^GMRD(120.51,"B",$E(X,1,30),DA)=""
"^DD",120.51,120.51,.01,1,1,2)
K ^GMRD(120.51,"B",$E(X,1,30),DA)
"^DD",120.51,120.51,.01,1,1,"%D",0)
^^1^1^2950926^^^
"^DD",120.51,120.51,.01,1,1,"%D",1,0)
This cross-reference is automatically created on .01 field.
"^DD",120.51,120.51,.01,3)
ANSWER MUST BE 2-50 CHARACTERS IN LENGTH
"^DD",120.51,120.51,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",120.51,120.51,.01,9)
^
"^DD",120.51,120.51,.01,21,0)
^.001^1^1^3041223^^^^
"^DD",120.51,120.51,.01,21,1,0)
This field reflects a list of vital signs/physical measurement types.
"^DD",120.51,120.51,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.51,120.51,.01,"DT")
3041227
"^DD",120.51,120.51,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.51,120.51,1,0)
ABBREVIATION^RF^^0;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<1)!'(X'?1P.E&(X'[";")) X
"^DD",120.51,120.51,1,1,0)
^.1
"^DD",120.51,120.51,1,1,1,0)
120.51^C
"^DD",120.51,120.51,1,1,1,1)
S ^GMRD(120.51,"C",$E(X,1,30),DA)=""
"^DD",120.51,120.51,1,1,1,2)
K ^GMRD(120.51,"C",$E(X,1,30),DA)
"^DD",120.51,120.51,1,1,1,"%D",0)
^^2^2^2950926^^^
"^DD",120.51,120.51,1,1,1,"%D",1,0)
This regular cross-reference is created to sort the file by the
"^DD",120.51,120.51,1,1,1,"%D",2,0)
ABBREVIATION and the associated NAME (.01).
"^DD",120.51,120.51,1,3)
Answer must be 1-5 characters in length.
"^DD",120.51,120.51,1,9)
^
"^DD",120.51,120.51,1,21,0)
^^1^1^2970108^^^^
"^DD",120.51,120.51,1,21,1,0)
This field contains an abbreviation for this vital type.
"^DD",120.51,120.51,1,"DT")
3050307
"^DD",120.51,120.51,3,0)
RATE^S^0:NO;1:YES;^0;4^Q
"^DD",120.51,120.51,3,9)
^
"^DD",120.51,120.51,3,21,0)
^^2^2^2940105^^^^
"^DD",120.51,120.51,3,21,1,0)
This field specifies whether or not the vital measurement record with
"^DD",120.51,120.51,3,21,2,0)
this vital type has a rate associated with it.
"^DD",120.51,120.51,4,0)
RATE INPUT TRANSFORM^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",120.51,120.51,4,3)
This is Standard MUMPS code.
"^DD",120.51,120.51,4,9)
^
"^DD",120.51,120.51,4,21,0)
^^3^3^2960723^
"^DD",120.51,120.51,4,21,1,0)
If a rate is specified for a vital measurement record, this field checks
"^DD",120.51,120.51,4,21,2,0)
the data validity.  The code stored in this field should only be updated
"^DD",120.51,120.51,4,21,3,0)
by someone with programmer's access to the FileMan.
"^DD",120.51,120.51,4,"DT")
2960723
"^DD",120.51,120.51,5,0)
RATE HELP^F^^0;6^K:$L(X)>30!($L(X)<3)!'(X'?1P.E&(X?.ANP)) X
"^DD",120.51,120.51,5,3)
Answer must be 3-30 characters in length.
"^DD",120.51,120.51,5,9)
^
"^DD",120.51,120.51,5,21,0)
^^2^2^2960910^^^^
"^DD",120.51,120.51,5,21,1,0)
This field contains the name of the Help Frame associated with this
"^DD",120.51,120.51,5,21,2,0)
Vital Type.
"^DD",120.51,120.51,5,"DT")
2960718
"^DD",120.51,120.51,7,0)
PCE ABBREVIATION^F^^0;7^K:$L(X)>10!($L(X)<1) X
"^DD",120.51,120.51,7,1,0)
^.1
"^DD",120.51,120.51,7,1,1,0)
120.51^APCE
"^DD",120.51,120.51,7,1,1,1)
S ^GMRD(120.51,"APCE",$E(X,1,30),DA)=""
"^DD",120.51,120.51,7,1,1,2)
K ^GMRD(120.51,"APCE",$E(X,1,30),DA)
"^DD",120.51,120.51,7,1,1,"%D",0)
^^1^1^2970203^^
"^DD",120.51,120.51,7,1,1,"%D",1,0)
This is a regular cross-reference on the PCE Abbreviation field.
"^DD",120.51,120.51,7,1,1,"DT")
2960710
"^DD",120.51,120.51,7,3)
Answer must be 1-10 characters in length.
"^DD",120.51,120.51,7,9)
^
"^DD",120.51,120.51,7,21,0)
^^1^1^2960710^
"^DD",120.51,120.51,7,21,1,0)
This field contains the PCE Abbreviation for this Vital Type.
"^DD",120.51,120.51,7,"DT")
2960710
"^DD",120.51,120.51,99.98,0)
MASTER ENTRY FOR VUID^RSI^0:NO;1:YES;^VUID;2^Q
"^DD",120.51,120.51,99.98,9)
^
"^DD",120.51,120.51,99.98,21,0)
^^2^2^3050210^
"^DD",120.51,120.51,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a 
"^DD",120.51,120.51,99.98,21,2,0)
Term/Concept.
"^DD",120.51,120.51,99.98,"DT")
3050301
"^DD",120.51,120.51,99.99,0)
VUID^RFXI^^VUID;1^S X=+X K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",120.51,120.51,99.99,1,0)
^.1
"^DD",120.51,120.51,99.99,1,1,0)
120.51^AVUID
"^DD",120.51,120.51,99.99,1,1,1)
S ^GMRD(120.51,"AVUID",$E(X,1,30),DA)=""
"^DD",120.51,120.51,99.99,1,1,2)
K ^GMRD(120.51,"AVUID",$E(X,1,30),DA)
"^DD",120.51,120.51,99.99,1,1,3)
This cross-reference is by VUID.
"^DD",120.51,120.51,99.99,1,1,"%D",0)
^.101^2^2^3041227^^
"^DD",120.51,120.51,99.99,1,1,"%D",1,0)
This field and cross-reference are required for the Data Standardization 
"^DD",120.51,120.51,99.99,1,1,"%D",2,0)
project.
"^DD",120.51,120.51,99.99,1,1,"DT")
3041223
"^DD",120.51,120.51,99.99,3)
Answer must be 1-20 digits in length.
"^DD",120.51,120.51,99.99,9)
^
"^DD",120.51,120.51,99.99,21,0)
^.001^2^2^3050210^^
"^DD",120.51,120.51,99.99,21,1,0)
VHA Unique ID (VUID). A unique meaningless integer assigned to reference
"^DD",120.51,120.51,99.99,21,2,0)
terms VHA wide.
"^DD",120.51,120.51,99.99,"DT")
3050301
"^DD",120.51,120.51,99.991,0)
EFFECTIVE DATE/TIME^120.5199DA^^TERMSTATUS;0
"^DD",120.51,120.51,99.991,21,0)
^^1^1^3050201^
"^DD",120.51,120.51,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",120.51,120.5199,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",120.51,120.5199,0,"DT")
3050201
"^DD",120.51,120.5199,0,"IX","B",120.5199,.01)

"^DD",120.51,120.5199,0,"NM","EFFECTIVE DATE/TIME")
 
"^DD",120.51,120.5199,0,"UP")
120.51
"^DD",120.51,120.5199,.01,0)
EFFECTIVE DATE/TIME^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",120.51,120.5199,.01,1,0)
^.1
"^DD",120.51,120.5199,.01,1,1,0)
120.5199^B
"^DD",120.51,120.5199,.01,1,1,1)
S ^GMRD(120.51,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",120.51,120.5199,.01,1,1,2)
K ^GMRD(120.51,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",120.51,120.5199,.01,1,1,"%D",0)
^^1^1^3050201^
"^DD",120.51,120.5199,.01,1,1,"%D",1,0)
This cross-reference is by Effective Date/Time.
"^DD",120.51,120.5199,.01,9)
^
"^DD",120.51,120.5199,.01,21,0)
^^2^2^3050201^
"^DD",120.51,120.5199,.01,21,1,0)
This is the date/time when the Status of the reference term was 
"^DD",120.51,120.5199,.01,21,2,0)
established.
"^DD",120.51,120.5199,.01,"DT")
3050301
"^DD",120.51,120.5199,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",120.51,120.5199,.02,9)
^
"^DD",120.51,120.5199,.02,21,0)
^^4^4^3050201^
"^DD",120.51,120.5199,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'. If 
"^DD",120.51,120.5199,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",120.51,120.5199,.02,21,3,0)
particular patient event. If 'INACTIVE', then the term will only be 
"^DD",120.51,120.5199,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",120.51,120.5199,.02,"DT")
3050301
"^DD",120.52,120.52,0)
FIELD^^99.991^6
"^DD",120.52,120.52,0,"DDA")
N
"^DD",120.52,120.52,0,"DT")
3050308
"^DD",120.52,120.52,0,"IX","ACAT",120.521,.02)

"^DD",120.52,120.52,0,"IX","ACHR",120.52,.01)

"^DD",120.52,120.52,0,"IX","AOLD",120.52,999)
 
"^DD",120.52,120.52,0,"IX","ATYP",120.521,.01)

"^DD",120.52,120.52,0,"IX","AVUID",120.52,99.99)

"^DD",120.52,120.52,0,"IX","B",120.52,.01)

"^DD",120.52,120.52,0,"IX","BCAT",120.521,.02)

"^DD",120.52,120.52,0,"IX","BCHR",120.52,.02)

"^DD",120.52,120.52,0,"IX","BTYP",120.521,.01)

"^DD",120.52,120.52,0,"IX","C",120.521,.01)

"^DD",120.52,120.52,0,"IX","D",120.521,.02)

"^DD",120.52,120.52,0,"NM","GMRV VITAL QUALIFIER")
 
"^DD",120.52,120.52,0,"PT",120.505,.01)
 
"^DD",120.52,120.52,0,"PT",120.531,.07)

"^DD",120.52,120.52,0,"VRPK")
GMRV
"^DD",120.52,120.52,.01,0)
QUALIFIER^RF^^0;1^K:$L(X)>50!($L(X)<2)!'(X'?1P.E) X
"^DD",120.52,120.52,.01,1,0)
^.1
"^DD",120.52,120.52,.01,1,1,0)
120.52^B
"^DD",120.52,120.52,.01,1,1,1)
S ^GMRD(120.52,"B",$E(X,1,30),DA)=""
"^DD",120.52,120.52,.01,1,1,2)
K ^GMRD(120.52,"B",$E(X,1,30),DA)
"^DD",120.52,120.52,.01,1,1,"%D",0)
^^1^1^2950301^^
"^DD",120.52,120.52,.01,1,1,"%D",1,0)
This cross-reference is automatically created on .01 field.
"^DD",120.52,120.52,.01,1,2,0)
120.52^ACHR^MUMPS
"^DD",120.52,120.52,.01,1,2,1)
D ACHR^GMVFUT2(1,.DA,X)
"^DD",120.52,120.52,.01,1,2,2)
D ACHR^GMVFUT2(2,.DA,X)
"^DD",120.52,120.52,.01,1,2,"%D",0)
^^6^6^3010523^^
"^DD",120.52,120.52,.01,1,2,"%D",1,0)
This cross-reference sets the "AA" index on the GMRV Vital Qualifier
"^DD",120.52,120.52,.01,1,2,"%D",2,0)
(120.52) file.  The "AA" index has the following format:
"^DD",120.52,120.52,.01,1,2,"%D",3,0)
^GMRD(120.52,"AA",TYP,CAT,CHAR,DA(1),DA)="", where TYP=Vital Type (.01)
"^DD",120.52,120.52,.01,1,2,"%D",4,0)
field of Vital Type (120.521) sub-file, CAT=Category (.02) field of
"^DD",120.52,120.52,.01,1,2,"%D",5,0)
Vital Type (120.521) sub-file and CHAR=Name (.01) field of GMRV Vital
"^DD",120.52,120.52,.01,1,2,"%D",6,0)
Qualifier (120.52) file.
"^DD",120.52,120.52,.01,1,2,"DT")
3010523
"^DD",120.52,120.52,.01,3)
ANSWER MUST BE 2-50 CHARACTERS IN LENGTH
"^DD",120.52,120.52,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",120.52,120.52,.01,8.5)
^
"^DD",120.52,120.52,.01,9)
^
"^DD",120.52,120.52,.01,21,0)
^^2^2^2970123^^^^
"^DD",120.52,120.52,.01,21,1,0)
This field supplies a list of possible qualifiers for a vital measurement
"^DD",120.52,120.52,.01,21,2,0)
record.
"^DD",120.52,120.52,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.52,120.52,.01,"DT")
3010523
"^DD",120.52,120.52,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.52,120.52,.02,0)
SYNONYM^FX^^0;2^D SCREEN^GMVFSYN K:$L($G(X))>3!($L($G(X))<1) X
"^DD",120.52,120.52,.02,1,0)
^.1
"^DD",120.52,120.52,.02,1,1,0)
120.52^BCHR^MUMPS
"^DD",120.52,120.52,.02,1,1,1)
D BSYNO^GMVFSYN(1,.DA,X)
"^DD",120.52,120.52,.02,1,1,2)
D BSYNO^GMVFSYN(2,.DA,X)
"^DD",120.52,120.52,.02,1,1,"%D",0)
^^6^6^3010523^^^^
"^DD",120.52,120.52,.02,1,1,"%D",1,0)
This cross-reference sets the "BB" index on the GMRV Vital Qualifier
"^DD",120.52,120.52,.02,1,1,"%D",2,0)
(120.52) file.  The "BB" index has the following format:
"^DD",120.52,120.52,.02,1,1,"%D",3,0)
^GMRD(120.52,"BB",TYP,CAT,CHAR,DA(1),DA)="", where TYP=Vital Type (.01)
"^DD",120.52,120.52,.02,1,1,"%D",4,0)
field of Vital Type (120.52 1) sub-file, CAT=Category (.02) field of Vital
"^DD",120.52,120.52,.02,1,1,"%D",5,0)
Type (120.521) sub-file and CHAR=Name (.01) field of GMRV Vital Qualifier
"^DD",120.52,120.52,.02,1,1,"%D",6,0)
(120.52) file.
"^DD",120.52,120.52,.02,1,1,"DT")
3010523
"^DD",120.52,120.52,.02,3)
Answer must be 1-3 characters in length.
"^DD",120.52,120.52,.02,9)
^
"^DD",120.52,120.52,.02,21,0)
^.001^1^1^3050308^^^^
"^DD",120.52,120.52,.02,21,1,0)
This field contains the synonym for the qualifier.
"^DD",120.52,120.52,.02,"DT")
3050308
"^DD",120.52,120.52,1,0)
VITAL TYPE^120.521PA^^1;0
"^DD",120.52,120.52,1,9)
^
"^DD",120.52,120.52,1,21,0)
^^3^3^2970123^^^^
"^DD",120.52,120.52,1,21,1,0)
This multiple contains a list of vital types associated with this site.  
"^DD",120.52,120.52,1,21,2,0)
The site field on the vital measurement record is screened by the data
"^DD",120.52,120.52,1,21,3,0)
contained in the vital type field.
"^DD",120.52,120.52,99.98,0)
MASTER ENTRY FOR VUID^RSI^0:NO;1:YES;^VUID;2^Q
"^DD",120.52,120.52,99.98,9)
^
"^DD",120.52,120.52,99.98,21,0)
^^2^2^3050210^
"^DD",120.52,120.52,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a 
"^DD",120.52,120.52,99.98,21,2,0)
Term/Concept.
"^DD",120.52,120.52,99.98,"DT")
3050210
"^DD",120.52,120.52,99.99,0)
VUID^RFXI^^VUID;1^S X=+X K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",120.52,120.52,99.99,1,0)
^.1
"^DD",120.52,120.52,99.99,1,1,0)
120.52^AVUID
"^DD",120.52,120.52,99.99,1,1,1)
S ^GMRD(120.52,"AVUID",$E(X,1,30),DA)=""
"^DD",120.52,120.52,99.99,1,1,2)
K ^GMRD(120.52,"AVUID",$E(X,1,30),DA)
"^DD",120.52,120.52,99.99,1,1,3)
This cross-reference is by VUID.
"^DD",120.52,120.52,99.99,1,1,"%D",0)
^.101^2^2^3041227^^
"^DD",120.52,120.52,99.99,1,1,"%D",1,0)
This field and cross-reference are required for the Data Standardization 
"^DD",120.52,120.52,99.99,1,1,"%D",2,0)
project.
"^DD",120.52,120.52,99.99,1,1,"DT")
3041223
"^DD",120.52,120.52,99.99,3)
Answer must be 1-20 digits in length.
"^DD",120.52,120.52,99.99,9)
^
"^DD",120.52,120.52,99.99,21,0)
^^2^2^3041227^
"^DD",120.52,120.52,99.99,21,1,0)
VHA Unique ID (VUID). A unique meaningless integer assigned to reference
"^DD",120.52,120.52,99.99,21,2,0)
terms VHA wide.
"^DD",120.52,120.52,99.99,"DT")
3050210
"^DD",120.52,120.52,99.991,0)
EFFECTIVE DATE/TIME^120.5299DA^^TERMSTATUS;0
"^DD",120.52,120.52,99.991,21,0)
^^1^1^3050201^
"^DD",120.52,120.52,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",120.52,120.521,0)
VITAL TYPE SUB-FIELD^^.02^2
"^DD",120.52,120.521,0,"DT")
2970122
"^DD",120.52,120.521,0,"IX","B",120.521,.01)

"^DD",120.52,120.521,0,"NM","VITAL TYPE")
 
"^DD",120.52,120.521,0,"UP")
120.52
"^DD",120.52,120.521,.01,0)
VITAL TYPE^RP120.51'^GMRD(120.51,^0;1^Q
"^DD",120.52,120.521,.01,1,0)
^.1
"^DD",120.52,120.521,.01,1,1,0)
120.521^B
"^DD",120.52,120.521,.01,1,1,1)
S ^GMRD(120.52,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",120.52,120.521,.01,1,1,2)
K ^GMRD(120.52,DA(1),1,"B",$E(X,1,30),DA)
"^DD",120.52,120.521,.01,1,1,"%D",0)
^^1^1^2950926^^^
"^DD",120.52,120.521,.01,1,1,"%D",1,0)
This cross-reference is automatically created on .01 field.
"^DD",120.52,120.521,.01,1,2,0)
120.52^C
"^DD",120.52,120.521,.01,1,2,1)
S ^GMRD(120.52,"C",$E(X,1,30),DA(1),DA)=""
"^DD",120.52,120.521,.01,1,2,2)
K ^GMRD(120.52,"C",$E(X,1,30),DA(1),DA)
"^DD",120.52,120.521,.01,1,2,"%D",0)
^^2^2^2970522^^^^
"^DD",120.52,120.521,.01,1,2,"%D",1,0)
This cross-reference is created to sort the file by VITAL TYPE and the
"^DD",120.52,120.521,.01,1,2,"%D",2,0)
associated vital site NAME (.01).
"^DD",120.52,120.521,.01,1,3,0)
120.52^ATYP^MUMPS
"^DD",120.52,120.521,.01,1,3,1)
D ATYP^GMVFUT2(1,.DA,X)
"^DD",120.52,120.521,.01,1,3,2)
D ATYP^GMVFUT2(2,.DA,X)
"^DD",120.52,120.521,.01,1,3,"%D",0)
^^6^6^3010523^^^^
"^DD",120.52,120.521,.01,1,3,"%D",1,0)
This cross-reference sets the "AA"index on the GMRV Vital Qualifier
"^DD",120.52,120.521,.01,1,3,"%D",2,0)
(120.52) file.  The index has the following format:
"^DD",120.52,120.521,.01,1,3,"%D",3,0)
^GMRD(120.52,"AA",TYP,CAT,CHAR,DA(1),DA)="",
"^DD",120.52,120.521,.01,1,3,"%D",4,0)
where TYP=Vital Type (.01) field of Vital Type (120.521) sub-file,
"^DD",120.52,120.521,.01,1,3,"%D",5,0)
CAT=Category (.02) field of Vital Type (120.521) sub-file, CHAR=Name (.01)
"^DD",120.52,120.521,.01,1,3,"%D",6,0)
field of GMRV Vital Qualifier (120.52) file.
"^DD",120.52,120.521,.01,1,3,"DT")
3010523
"^DD",120.52,120.521,.01,1,4,0)
120.52^BTYP^MUMPS
"^DD",120.52,120.521,.01,1,4,1)
D BTYP^GMVFSYN(1,.DA,X)
"^DD",120.52,120.521,.01,1,4,2)
D BTYP^GMVFSYN(2,.DA,X)
"^DD",120.52,120.521,.01,1,4,"%D",0)
^^6^6^3010523^^^^
"^DD",120.52,120.521,.01,1,4,"%D",1,0)
This cross-reference sets the "BB" index on the GMRV Vital Qualifier
"^DD",120.52,120.521,.01,1,4,"%D",2,0)
(120.52) file.  The "BB" index has the following format:
"^DD",120.52,120.521,.01,1,4,"%D",3,0)
^GMRD(120.52,"BB",TYP,CAT,CHAR,DA(1),DA)="", where TYP=Vital Type (.01)
"^DD",120.52,120.521,.01,1,4,"%D",4,0)
field of Vital Type (120.521) sub-file, CAT=Category (.02) field of Vital
"^DD",120.52,120.521,.01,1,4,"%D",5,0)
Type (120.521) sub-file and CHAR=Name (.01) field of GMRV Vital Qualifier
"^DD",120.52,120.521,.01,1,4,"%D",6,0)
(120.52) file.
"^DD",120.52,120.521,.01,1,4,"DT")
3010523
"^DD",120.52,120.521,.01,8.5)
^
"^DD",120.52,120.521,.01,9)
^
"^DD",120.52,120.521,.01,21,0)
^^2^2^2970122^^^^
"^DD",120.52,120.521,.01,21,1,0)
This field screens the vital measurement site field in the GMRV VITAL 
"^DD",120.52,120.521,.01,21,2,0)
MEASUREMENT (#120.5) file.
"^DD",120.52,120.521,.01,"DT")
3010523
"^DD",120.52,120.521,.02,0)
CATEGORY^RP120.53^GMRD(120.53,^0;2^Q
"^DD",120.52,120.521,.02,1,0)
^.1
"^DD",120.52,120.521,.02,1,1,0)
120.52^D
"^DD",120.52,120.521,.02,1,1,1)
S ^GMRD(120.52,"D",$E(X,1,30),DA(1),DA)=""
"^DD",120.52,120.521,.02,1,1,2)
K ^GMRD(120.52,"D",$E(X,1,30),DA(1),DA)
"^DD",120.52,120.521,.02,1,1,"%D",0)
^^3^3^2960719^
"^DD",120.52,120.521,.02,1,1,"%D",1,0)
This is a regular cross-reference of the Category (.02) field of the Vital
"^DD",120.52,120.521,.02,1,1,"%D",2,0)
Type (120.521) sub-file on the entire GMRV Vital Qualifier (120.52)
"^DD",120.52,120.521,.02,1,1,"%D",3,0)
file.
"^DD",120.52,120.521,.02,1,1,"DT")
2960719
"^DD",120.52,120.521,.02,1,2,0)
120.52^ACAT^MUMPS
"^DD",120.52,120.521,.02,1,2,1)
D ACAT^GMVFUT2(1,.DA,X)
"^DD",120.52,120.521,.02,1,2,2)
D ACAT^GMVFUT2(2,.DA,X)
"^DD",120.52,120.521,.02,1,2,"%D",0)
^^6^6^3010524^^^^
"^DD",120.52,120.521,.02,1,2,"%D",1,0)
This cross-reference sets the "AA" index on the GMRV Vital Qualifier
"^DD",120.52,120.521,.02,1,2,"%D",2,0)
(120.52) file.  The index has the following format:
"^DD",120.52,120.521,.02,1,2,"%D",3,0)
^GMRD(120.52,"AA",TYP,CAT,CHAR,DA(1),DA)="",
"^DD",120.52,120.521,.02,1,2,"%D",4,0)
where TYP=Vital Type (.01) field of Vital Type (120.521) sub-file,
"^DD",120.52,120.521,.02,1,2,"%D",5,0)
CAT=Category (.02) field of Vital Type (120.521) sub-file, CHAR=Name (.01)
"^DD",120.52,120.521,.02,1,2,"%D",6,0)
field of GMRV Vital Qualifier (120.52) file.
"^DD",120.52,120.521,.02,1,2,"DT")
3010523
"^DD",120.52,120.521,.02,1,3,0)
120.52^BCAT^MUMPS
"^DD",120.52,120.521,.02,1,3,1)
D BCAT^GMVFSYN(1,.DA,X)
"^DD",120.52,120.521,.02,1,3,2)
D BCAT^GMVFSYN(2,.DA,X)
"^DD",120.52,120.521,.02,1,3,"%D",0)
^^6^6^3010524^^^^
"^DD",120.52,120.521,.02,1,3,"%D",1,0)
This cross-reference sets the "BB" index on the GMRV Vital Qualifier
"^DD",120.52,120.521,.02,1,3,"%D",2,0)
(120.52) file.  The "BB" index has the following format:
"^DD",120.52,120.521,.02,1,3,"%D",3,0)
^GMRD(120.52,"BB",TYP,CAT,CHAR,DA(1),DA)="", where TYP=Vital Type (.01)
"^DD",120.52,120.521,.02,1,3,"%D",4,0)
field of Vital Type (120.521) sub-file, CAT=Category (.02) field of Vital
"^DD",120.52,120.521,.02,1,3,"%D",5,0)
Type (120.521) sub-file and CHAR=Name (.01) field of GMRV Vital Qualifier
"^DD",120.52,120.521,.02,1,3,"%D",6,0)
(120.52) file.
"^DD",120.52,120.521,.02,1,3,"DT")
3010523
"^DD",120.52,120.521,.02,9)
^
"^DD",120.52,120.521,.02,21,0)
^^2^2^2960726^^
"^DD",120.52,120.521,.02,21,1,0)
This field will contain the category for this characteristic for this
"^DD",120.52,120.521,.02,21,2,0)
vital type.
"^DD",120.52,120.521,.02,"DT")
3010523
"^DD",120.52,120.5299,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",120.52,120.5299,0,"DT")
3050201
"^DD",120.52,120.5299,0,"IX","B",120.5299,.01)

"^DD",120.52,120.5299,0,"NM","EFFECTIVE DATE/TIME")
 
"^DD",120.52,120.5299,0,"UP")
120.52
"^DD",120.52,120.5299,.01,0)
EFFECTIVE DATE/TIME^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",120.52,120.5299,.01,1,0)
^.1
"^DD",120.52,120.5299,.01,1,1,0)
120.5299^B
"^DD",120.52,120.5299,.01,1,1,1)
S ^GMRD(120.52,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",120.52,120.5299,.01,1,1,2)
K ^GMRD(120.52,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",120.52,120.5299,.01,1,1,"%D",0)
^^1^1^3050201^
"^DD",120.52,120.5299,.01,1,1,"%D",1,0)
This cross-reference is by Effective Date/Time.
"^DD",120.52,120.5299,.01,9)
^
"^DD",120.52,120.5299,.01,21,0)
^^2^2^3050201^
"^DD",120.52,120.5299,.01,21,1,0)
This is the date/time when the Status of the reference term was 
"^DD",120.52,120.5299,.01,21,2,0)
established.
"^DD",120.52,120.5299,.01,"DT")
3050201
"^DD",120.52,120.5299,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",120.52,120.5299,.02,9)
^
"^DD",120.52,120.5299,.02,21,0)
^^4^4^3050201^
"^DD",120.52,120.5299,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'. If 
"^DD",120.52,120.5299,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",120.52,120.5299,.02,21,3,0)
particular patient event. If 'INACTIVE', then the term will only be 
"^DD",120.52,120.5299,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",120.52,120.5299,.02,"DT")
3050201
"^DD",120.53,120.53,0)
FIELD^^99.991^5
"^DD",120.53,120.53,0,"DDA")
N
"^DD",120.53,120.53,0,"DT")
3050210
"^DD",120.53,120.53,0,"IX","ACAT",120.53,.01)

"^DD",120.53,120.53,0,"IX","AEDT",120.531,.06)

"^DD",120.53,120.53,0,"IX","APRT",120.531,.05)

"^DD",120.53,120.53,0,"IX","ATYP",120.531,.01)

"^DD",120.53,120.53,0,"IX","AVUID",120.53,99.99)

"^DD",120.53,120.53,0,"IX","B",120.53,.01)

"^DD",120.53,120.53,0,"IX","C",120.531,.01)

"^DD",120.53,120.53,0,"NM","GMRV VITAL CATEGORY")
 
"^DD",120.53,120.53,0,"PT",120.521,.02)
 
"^DD",120.53,120.53,0,"VRPK")
GMRV
"^DD",120.53,120.53,.01,0)
CATEGORY^RF^^0;1^K:$L(X)>40!($L(X)<2)!'(X'?1P.E) X
"^DD",120.53,120.53,.01,1,0)
^.1
"^DD",120.53,120.53,.01,1,1,0)
120.53^B
"^DD",120.53,120.53,.01,1,1,1)
S ^GMRD(120.53,"B",$E(X,1,40),DA)=""
"^DD",120.53,120.53,.01,1,1,2)
K ^GMRD(120.53,"B",$E(X,1,40),DA)
"^DD",120.53,120.53,.01,1,1,"%D",0)
^^1^1^2950301^^
"^DD",120.53,120.53,.01,1,1,"%D",1,0)
This cross-reference is automatically created on NAME field.
"^DD",120.53,120.53,.01,1,2,0)
120.53^ACAT^MUMPS
"^DD",120.53,120.53,.01,1,2,1)
D ACAT^GMVFUT3(1,.DA,X)
"^DD",120.53,120.53,.01,1,2,2)
D ACAT^GMVFUT3(2,.DA,X)
"^DD",120.53,120.53,.01,1,2,"%D",0)
^^6^6^3010524^^
"^DD",120.53,120.53,.01,1,2,"%D",1,0)
This cross-reference sets up the "AA" index on the GMRV Vital Category (120.53)
"^DD",120.53,120.53,.01,1,2,"%D",2,0)
file.  This index has the following format:
"^DD",120.53,120.53,.01,1,2,"%D",3,0)
^GMRD(120.53,"AA",TYPE,CAT,DA(1),DA)="", where TYPE=Vital Type (.01) field
"^DD",120.53,120.53,.01,1,2,"%D",4,0)
of Vital Type (120.531) sub-file, CAT=Name (.01) field of GMRV Category
"^DD",120.53,120.53,.01,1,2,"%D",5,0)
(120.53) file, is the entry in the GMRV Vital Category (120.53) file, and
"^DD",120.53,120.53,.01,1,2,"%D",6,0)
DA is the entry in the Vital Type (120.531) sub-file.
"^DD",120.53,120.53,.01,1,2,"DT")
3010524
"^DD",120.53,120.53,.01,3)
ANSWER MUST BE 2-40 CHARACTERS IN LENGTH
"^DD",120.53,120.53,.01,7.5)
I $G(DIC(0))["L",'$D(XUMF) K X D EN^DDIOL("Entries must be edited via the Master File Server (MFS).","","!?5,$C(7)")
"^DD",120.53,120.53,.01,9)
^
"^DD",120.53,120.53,.01,21,0)
^^2^2^2961223^^^^
"^DD",120.53,120.53,.01,21,1,0)
This field provides a list of qualities that could be assigned to a given 
"^DD",120.53,120.53,.01,21,2,0)
vital measurement record.
"^DD",120.53,120.53,.01,"DEL",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be inactivated via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.53,120.53,.01,"DT")
3010524
"^DD",120.53,120.53,.01,"LAYGO",1,0)
D:'$D(XUMF) EN^DDIOL("Entries must be added via the Master File Server (MFS).","","!?5,$C(7)") I $D(XUMF)
"^DD",120.53,120.53,1,0)
VITAL TYPE^120.531P^^1;0
"^DD",120.53,120.53,1,9)
^
"^DD",120.53,120.53,1,21,0)
^^2^2^3010524^^^^
"^DD",120.53,120.53,1,21,1,0)
This multiple screens the possible quality entries for a given vital 
"^DD",120.53,120.53,1,21,2,0)
measurement record.
"^DD",120.53,120.53,99.98,0)
MASTER ENTRY FOR VUID^RSI^0:NO;1:YES;^VUID;2^Q
"^DD",120.53,120.53,99.98,9)
^
"^DD",120.53,120.53,99.98,21,0)
^^2^2^3050210^
"^DD",120.53,120.53,99.98,21,1,0)
This field identifies the Master entry for a VUID associated with a 
"^DD",120.53,120.53,99.98,21,2,0)
Term/Concept.
"^DD",120.53,120.53,99.98,"DT")
3050301
"^DD",120.53,120.53,99.99,0)
VUID^RFXI^^VUID;1^S X=+X K:$L(X)>20!($L(X)<1)!'(X?1.20N) X
"^DD",120.53,120.53,99.99,1,0)
^.1
"^DD",120.53,120.53,99.99,1,1,0)
120.53^AVUID
"^DD",120.53,120.53,99.99,1,1,1)
S ^GMRD(120.53,"AVUID",$E(X,1,30),DA)=""
"^DD",120.53,120.53,99.99,1,1,2)
K ^GMRD(120.53,"AVUID",$E(X,1,30),DA)
"^DD",120.53,120.53,99.99,1,1,3)
This cross-reference is by VUID.
"^DD",120.53,120.53,99.99,1,1,"%D",0)
^.101^2^2^3041227^^
"^DD",120.53,120.53,99.99,1,1,"%D",1,0)
This field and cross-reference are required for the Data Standardization 
"^DD",120.53,120.53,99.99,1,1,"%D",2,0)
project.
"^DD",120.53,120.53,99.99,1,1,"DT")
3041223
"^DD",120.53,120.53,99.99,3)
Answer must be 1-20 digits in length.
"^DD",120.53,120.53,99.99,9)
^
"^DD",120.53,120.53,99.99,21,0)
^^2^2^3041227^
"^DD",120.53,120.53,99.99,21,1,0)
VHA Unique ID (VUID). A unique meaningless integer assigned to reference
"^DD",120.53,120.53,99.99,21,2,0)
terms VHA wide.
"^DD",120.53,120.53,99.99,"DT")
3050301
"^DD",120.53,120.53,99.991,0)
EFFECTIVE DATE/TIME^120.5399DA^^TERMSTATUS;0
"^DD",120.53,120.53,99.991,21,0)
^^1^1^3050201^
"^DD",120.53,120.53,99.991,21,1,0)
Describes the pair Status and Effective Date/Time for each reference term.
"^DD",120.53,120.531,0)
VITAL TYPE SUB-FIELD^^.07^5
"^DD",120.53,120.531,0,"DT")
2960723
"^DD",120.53,120.531,0,"IX","B",120.531,.01)

"^DD",120.53,120.531,0,"NM","VITAL TYPE")
 
"^DD",120.53,120.531,0,"UP")
120.53
"^DD",120.53,120.531,.01,0)
VITAL TYPE^MRP120.51'^GMRD(120.51,^0;1^Q
"^DD",120.53,120.531,.01,1,0)
^.1
"^DD",120.53,120.531,.01,1,1,0)
120.531^B
"^DD",120.53,120.531,.01,1,1,1)
S ^GMRD(120.53,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",120.53,120.531,.01,1,1,2)
K ^GMRD(120.53,DA(1),1,"B",$E(X,1,30),DA)
"^DD",120.53,120.531,.01,1,1,"%D",0)
^^1^1^2950301^^
"^DD",120.53,120.531,.01,1,1,"%D",1,0)
This cross-reference is automatically created on .01 field.
"^DD",120.53,120.531,.01,1,2,0)
120.53^C
"^DD",120.53,120.531,.01,1,2,1)
S ^GMRD(120.53,"C",$E(X,1,30),DA(1),DA)=""
"^DD",120.53,120.531,.01,1,2,2)
K ^GMRD(120.53,"C",$E(X,1,30),DA(1),DA)
"^DD",120.53,120.531,.01,1,2,"%D",0)
^^2^2^2950301^^
"^DD",120.53,120.531,.01,1,2,"%D",1,0)
This cross-reference is created to sort the file by the VITAL TYPE and 
"^DD",120.53,120.531,.01,1,2,"%D",2,0)
the associated vital qualifiers (NAME .01 field).
"^DD",120.53,120.531,.01,1,3,0)
120.53^ATYP^MUMPS
"^DD",120.53,120.531,.01,1,3,1)
D ATYP^GMVFUT3(1,.DA,X)
"^DD",120.53,120.531,.01,1,3,2)
D ATYP^GMVFUT3(2,.DA,X)
"^DD",120.53,120.531,.01,1,3,"%D",0)
^^10^10^3010524^^^
"^DD",120.53,120.531,.01,1,3,"%D",1,0)
This cross-reference sets up the "AA", "AEDIT" and "APRINT" indices on
"^DD",120.53,120.531,.01,1,3,"%D",2,0)
the GMRV Vital Category (120.53) file.  These indices have the following format:
"^DD",120.53,120.531,.01,1,3,"%D",3,0)
^GMRD(120.53,"AA",TYPE,CAT,DA(1),DA)="",
"^DD",120.53,120.531,.01,1,3,"%D",4,0)
^GMRD(120.53,"AEDIT",TYPE,EORD,DA(1),DA)="", and
"^DD",120.53,120.531,.01,1,3,"%D",5,0)
^GMRD(120.53,"APRINT",TYPE,PORD,DA(1),DA)="", where TYPE=Vital Type (.01)
"^DD",120.53,120.531,.01,1,3,"%D",6,0)
field of Vital Type (120.531) sub-file, CAT=Name (.01) field of GMRV
"^DD",120.53,120.531,.01,1,3,"%D",7,0)
Vital Category (120.53) file, EORD is the Edit Order (.06) field of the Vital
"^DD",120.53,120.531,.01,1,3,"%D",8,0)
Type (120.531) sub-file, PORD is the Print Order (.05) field of the Vital
"^DD",120.53,120.531,.01,1,3,"%D",9,0)
Type (120.531) sub-file, DA(1) is the entry in the GMRV Category (120.53)
"^DD",120.53,120.531,.01,1,3,"%D",10,0)
file, and DA is the entry in the (120.531) sub-file
"^DD",120.53,120.531,.01,1,3,"DT")
3010524
"^DD",120.53,120.531,.01,9)
^
"^DD",120.53,120.531,.01,21,0)
^^2^2^2940525^^^^
"^DD",120.53,120.531,.01,21,1,0)
This field screens the vital measurement quality field in the GMRV VITAL 
"^DD",120.53,120.531,.01,21,2,0)
MEASUREMENT file (#120.5).
"^DD",120.53,120.531,.01,"DT")
3010524
"^DD",120.53,120.531,.03,0)
MAXIMUM ENTRIES^NJ2,0^^0;3^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",120.53,120.531,.03,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",120.53,120.531,.03,9)
^
"^DD",120.53,120.531,.03,21,0)
^^2^2^2960719^
"^DD",120.53,120.531,.03,21,1,0)
This field indicates the minimum number of characteristics that can
"^DD",120.53,120.531,.03,21,2,0)
be selected for a patient for this category for this vital type.
"^DD",120.53,120.531,.03,"DT")
2960719
"^DD",120.53,120.531,.05,0)
PRINT ORDER^NJ2,0^^0;5^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",120.53,120.531,.05,1,0)
^.1
"^DD",120.53,120.531,.05,1,1,0)
120.53^APRT^MUMPS
"^DD",120.53,120.531,.05,1,1,1)
D APRT^GMVFUT3(1,.DA,X)
"^DD",120.53,120.531,.05,1,1,2)
D APRT^GMVFUT3(2,.DA,X)
"^DD",120.53,120.531,.05,1,1,"%D",0)
^^6^6^3010524^^^
"^DD",120.53,120.531,.05,1,1,"%D",1,0)
This cross-reference sets up the "APRINT" index  on the GMRV Vital Category
"^DD",120.53,120.531,.05,1,1,"%D",2,0)
(120.53) file.  This index has the following format:
"^DD",120.53,120.531,.05,1,1,"%D",3,0)
^GMRD(120.53,"APRINT",TYPE,PORD,DA(1),DA)="", where TYPE=Vital Type (.01)
"^DD",120.53,120.531,.05,1,1,"%D",4,0)
field of Vital Type (120.531) sub-file, PORD is the Print Order (.05)
"^DD",120.53,120.531,.05,1,1,"%D",5,0)
field of the Vital Type (120.531) sub-file, DA(1) is the entry in the GMRV
"^DD",120.53,120.531,.05,1,1,"%D",6,0)
Vital Category (120.53) file, and DA is the entry in the (120.531) sub-file.
"^DD",120.53,120.531,.05,1,1,"DT")
3010524
"^DD",120.53,120.531,.05,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",120.53,120.531,.05,9)
^
"^DD",120.53,120.531,.05,21,0)
^^2^2^2960719^
"^DD",120.53,120.531,.05,21,1,0)
This field contains the order in which this category of characteristics
"^DD",120.53,120.531,.05,21,2,0)
will display on reports for this category for this vital type.
"^DD",120.53,120.531,.05,"DT")
3010524
"^DD",120.53,120.531,.06,0)
EDIT ORDER^NJ2,0^^0;6^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1N.N) X
"^DD",120.53,120.531,.06,1,0)
^.1
"^DD",120.53,120.531,.06,1,1,0)
120.53^AEDT^MUMPS
"^DD",120.53,120.531,.06,1,1,1)
D AEDT^GMVFUT3(1,.DA,X)
"^DD",120.53,120.531,.06,1,1,2)
D AEDT^GMVFUT3(2,.DA,X)
"^DD",120.53,120.531,.06,1,1,"%D",0)
^^6^6^3010524^^
"^DD",120.53,120.531,.06,1,1,"%D",1,0)
This cross-reference sets up the "AEDIT" index  onthe GMRV Category
"^DD",120.53,120.531,.06,1,1,"%D",2,0)
(120.53) file.  This index has the following format:
"^DD",120.53,120.531,.06,1,1,"%D",3,0)
^GMRD(120.53,"AEDIT",TYPE,EORD,DA(1),DA)="", where TYPE=Vital Type (.01)
"^DD",120.53,120.531,.06,1,1,"%D",4,0)
field of Vital Type (120.531) sub-file, EORD is the Edit Order (.06)
"^DD",120.53,120.531,.06,1,1,"%D",5,0)
field of the Vital Type (120.531) sub-file, DA(1) is the entry in the GMRV
"^DD",120.53,120.531,.06,1,1,"%D",6,0)
Vital Category (120.53) file, and DA is the entry in the (120.531) sub-file.
"^DD",120.53,120.531,.06,1,1,"DT")
3010524
"^DD",120.53,120.531,.06,3)
Type a Number between 1 and 99, 0 Decimal Digits
"^DD",120.53,120.531,.06,9)
^
"^DD",120.53,120.531,.06,21,0)
^^2^2^2960719^
"^DD",120.53,120.531,.06,21,1,0)
This field contains the order in which this category for this vital type
"^DD",120.53,120.531,.06,21,2,0)
will be entered/edited in the Vitals/Measurements edit options.
"^DD",120.53,120.531,.06,"DT")
3010524
"^DD",120.53,120.531,.07,0)
DEFAULT QUALIFIER^*P120.52'X^GMRD(120.52,^0;7^S DIC("S")="I $$SCR07^GMVFUT3(.DA,Y)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",120.53,120.531,.07,3)
 
"^DD",120.53,120.531,.07,9)
^
"^DD",120.53,120.531,.07,12)
Enter the name of appropriate qualifier
"^DD",120.53,120.531,.07,12.1)
S DIC("S")="I $$SCR07^GMVFUT3(.DA,Y)"
"^DD",120.53,120.531,.07,21,0)
^^2^2^3010524^^^^
"^DD",120.53,120.531,.07,21,1,0)
This field will denote the default qualifier to be used if the user
"^DD",120.53,120.531,.07,21,2,0)
does not specify one during data entry.
"^DD",120.53,120.531,.07,"DT")
3010524
"^DD",120.53,120.5399,0)
EFFECTIVE DATE/TIME SUB-FIELD^^.02^2
"^DD",120.53,120.5399,0,"DT")
3050201
"^DD",120.53,120.5399,0,"IX","B",120.5399,.01)

"^DD",120.53,120.5399,0,"NM","EFFECTIVE DATE/TIME")
 
"^DD",120.53,120.5399,0,"UP")
120.53
"^DD",120.53,120.5399,.01,0)
EFFECTIVE DATE/TIME^RDI^^0;1^S %DT="ESTX" D ^%DT S X=Y K:Y<1 X
"^DD",120.53,120.5399,.01,1,0)
^.1
"^DD",120.53,120.5399,.01,1,1,0)
120.5399^B
"^DD",120.53,120.5399,.01,1,1,1)
S ^GMRD(120.53,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)=""
"^DD",120.53,120.5399,.01,1,1,2)
K ^GMRD(120.53,DA(1),"TERMSTATUS","B",$E(X,1,30),DA)
"^DD",120.53,120.5399,.01,1,1,"%D",0)
^^1^1^3050201^
"^DD",120.53,120.5399,.01,1,1,"%D",1,0)
This cross-reference is by Effective Date/Time.
"^DD",120.53,120.5399,.01,9)
^
"^DD",120.53,120.5399,.01,21,0)
^^2^2^3050201^
"^DD",120.53,120.5399,.01,21,1,0)
This is the date/time when the Status of the reference term was 
"^DD",120.53,120.5399,.01,21,2,0)
established.
"^DD",120.53,120.5399,.01,"DT")
3050301
"^DD",120.53,120.5399,.02,0)
STATUS^RSI^1:ACTIVE;0:INACTIVE;^0;2^Q
"^DD",120.53,120.5399,.02,9)
^
"^DD",120.53,120.5399,.02,21,0)
^^4^4^3050201^
"^DD",120.53,120.5399,.02,21,1,0)
The Status of a reference term is either 'ACTIVE' or 'INACTIVE'. If 
"^DD",120.53,120.5399,.02,21,2,0)
'ACTIVE', then the term will be accessible by end-users to document a 
"^DD",120.53,120.5399,.02,21,3,0)
particular patient event. If 'INACTIVE', then the term will only be 
"^DD",120.53,120.5399,.02,21,4,0)
accessible by the application to display legacy data.
"^DD",120.53,120.5399,.02,"DT")
3050301
"^DIC",120.51,120.51,0)
GMRV VITAL TYPE^120.51I
"^DIC",120.51,120.51,0,"GL")
^GMRD(120.51,
"^DIC",120.51,120.51,"%",0)
^1.005^2^2
"^DIC",120.51,120.51,"%",1,0)
GMTS
"^DIC",120.51,120.51,"%",2,0)
PXRM
"^DIC",120.51,120.51,"%","B","GMTS",1)

"^DIC",120.51,120.51,"%","B","PXRM",2)

"^DIC",120.51,120.51,"%D",0)
^1.001^11^11^3050223^^^^
"^DIC",120.51,120.51,"%D",1,0)
Per VHA Directive {pending directive #}, this file has been "locked down" 
"^DIC",120.51,120.51,"%D",2,0)
by Data Standardization (DS). The file definition (i.e. data dictionary) 
"^DIC",120.51,120.51,"%D",3,0)
shall not be modified. All additions, changes and deletions to entries in
"^DIC",120.51,120.51,"%D",4,0)
the file shall be done by Enterprise Reference Terminology (ERT) using the
"^DIC",120.51,120.51,"%D",5,0)
Master File Server (MFS), provided by Common Services (CS). Creating
"^DIC",120.51,120.51,"%D",6,0)
and/or editing locally defined fields in the file are not permitted. Use
"^DIC",120.51,120.51,"%D",7,0)
of locally defined fields that were created prior to VHA Directive
"^DIC",120.51,120.51,"%D",8,0)
{pending directive #} shall not be supported.
"^DIC",120.51,120.51,"%D",9,0)
 
"^DIC",120.51,120.51,"%D",10,0)
This file contains a list of vital sign types, and various parameters
"^DIC",120.51,120.51,"%D",11,0)
which mold the data entry.
"^DIC",120.51,"B","GMRV VITAL TYPE",120.51)

"^DIC",120.52,120.52,0)
GMRV VITAL QUALIFIER^120.52
"^DIC",120.52,120.52,0,"GL")
^GMRD(120.52,
"^DIC",120.52,120.52,"%D",0)
^1.001^10^10^3050223^^^
"^DIC",120.52,120.52,"%D",1,0)
Per VHA Directive {pending directive #}, this file has been "locked down" 
"^DIC",120.52,120.52,"%D",2,0)
by Data Standardization (DS). The file definition (i.e. data dictionary) 
"^DIC",120.52,120.52,"%D",3,0)
shall not be modified. All additions, changes and deletions to entries in
"^DIC",120.52,120.52,"%D",4,0)
the file shall be done by Enterprise Reference Terminology (ERT) using the
"^DIC",120.52,120.52,"%D",5,0)
Master File Server (MFS), provided by Common Services (CS). Creating
"^DIC",120.52,120.52,"%D",6,0)
and/or editing locally defined fields in the file are not permitted. Use
"^DIC",120.52,120.52,"%D",7,0)
of locally defined fields that were created prior to VHA Directive
"^DIC",120.52,120.52,"%D",8,0)
{pending directive #} shall not be supported.
"^DIC",120.52,120.52,"%D",9,0)
 
"^DIC",120.52,120.52,"%D",10,0)
This file contains a list of qualifiers for vitals/measurements.
"^DIC",120.52,"B","GMRV VITAL QUALIFIER",120.52)

"^DIC",120.53,120.53,0)
GMRV VITAL CATEGORY^120.53
"^DIC",120.53,120.53,0,"GL")
^GMRD(120.53,
"^DIC",120.53,120.53,"%D",0)
^1.001^11^11^3050223^^^^
"^DIC",120.53,120.53,"%D",1,0)
Per VHA Directive {pending directive #}, this file has been "locked down" 
"^DIC",120.53,120.53,"%D",2,0)
by Data Standardization (DS). The file definition (i.e. data dictionary) 
"^DIC",120.53,120.53,"%D",3,0)
shall not be modified. All additions, changes and deletions to entries in
"^DIC",120.53,120.53,"%D",4,0)
the file shall be done by Enterprise Reference Terminology (ERT) using the
"^DIC",120.53,120.53,"%D",5,0)
Master File Server (MFS), provided by Common Services (CS). Creating
"^DIC",120.53,120.53,"%D",6,0)
and/or editing locally defined fields in the file are not permitted. Use
"^DIC",120.53,120.53,"%D",7,0)
of locally defined fields that were created prior to VHA Directive
"^DIC",120.53,120.53,"%D",8,0)
{pending directive #} shall not be supported.
"^DIC",120.53,120.53,"%D",9,0)
 
"^DIC",120.53,120.53,"%D",10,0)
This file contains a list of qualities or characteristics that can be 
"^DIC",120.53,120.53,"%D",11,0)
affixed to a vital measurement.
"^DIC",120.53,"B","GMRV VITAL CATEGORY",120.53)

**END**
**END**
