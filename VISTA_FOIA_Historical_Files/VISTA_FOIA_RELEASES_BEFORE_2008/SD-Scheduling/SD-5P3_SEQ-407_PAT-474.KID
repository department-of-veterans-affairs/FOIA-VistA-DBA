Released SD*5.3*474 SEQ #407
Extracted from mail message
**KIDS**:SD*5.3*474^

**INSTALL NAME**
SD*5.3*474
"BLD",6982,0)
SD*5.3*474^SCHEDULING^0^3070125^y
"BLD",6982,1,0)
^^1^1^3061018^
"BLD",6982,1,1,0)
Correction to Performance Monitor Report, etc.
"BLD",6982,4,0)
^9.64PA^^
"BLD",6982,6.3)
4
"BLD",6982,"ABPKG")
n
"BLD",6982,"KRN",0)
^9.67PA^8989.52^19
"BLD",6982,"KRN",.4,0)
.4
"BLD",6982,"KRN",.401,0)
.401
"BLD",6982,"KRN",.402,0)
.402
"BLD",6982,"KRN",.403,0)
.403
"BLD",6982,"KRN",.5,0)
.5
"BLD",6982,"KRN",.84,0)
.84
"BLD",6982,"KRN",3.6,0)
3.6
"BLD",6982,"KRN",3.8,0)
3.8
"BLD",6982,"KRN",9.2,0)
9.2
"BLD",6982,"KRN",9.8,0)
9.8
"BLD",6982,"KRN",9.8,"NM",0)
^9.68A^5^3
"BLD",6982,"KRN",9.8,"NM",3,0)
SCRPW23^^0^B48856672
"BLD",6982,"KRN",9.8,"NM",4,0)
SCRPW81^^0^B72671391
"BLD",6982,"KRN",9.8,"NM",5,0)
SDPMUT2^^0^B4384550
"BLD",6982,"KRN",9.8,"NM","B","SCRPW23",3)

"BLD",6982,"KRN",9.8,"NM","B","SCRPW81",4)

"BLD",6982,"KRN",9.8,"NM","B","SDPMUT2",5)

"BLD",6982,"KRN",19,0)
19
"BLD",6982,"KRN",19.1,0)
19.1
"BLD",6982,"KRN",101,0)
101
"BLD",6982,"KRN",409.61,0)
409.61
"BLD",6982,"KRN",771,0)
771
"BLD",6982,"KRN",870,0)
870
"BLD",6982,"KRN",8989.51,0)
8989.51
"BLD",6982,"KRN",8989.52,0)
8989.52
"BLD",6982,"KRN",8994,0)
8994
"BLD",6982,"KRN","B",.4,.4)

"BLD",6982,"KRN","B",.401,.401)

"BLD",6982,"KRN","B",.402,.402)

"BLD",6982,"KRN","B",.403,.403)

"BLD",6982,"KRN","B",.5,.5)

"BLD",6982,"KRN","B",.84,.84)

"BLD",6982,"KRN","B",3.6,3.6)

"BLD",6982,"KRN","B",3.8,3.8)

"BLD",6982,"KRN","B",9.2,9.2)

"BLD",6982,"KRN","B",9.8,9.8)

"BLD",6982,"KRN","B",19,19)

"BLD",6982,"KRN","B",19.1,19.1)

"BLD",6982,"KRN","B",101,101)

"BLD",6982,"KRN","B",409.61,409.61)

"BLD",6982,"KRN","B",771,771)

"BLD",6982,"KRN","B",870,870)

"BLD",6982,"KRN","B",8989.51,8989.51)

"BLD",6982,"KRN","B",8989.52,8989.52)

"BLD",6982,"KRN","B",8994,8994)

"BLD",6982,"QUES",0)
^9.62^^
"BLD",6982,"REQB",0)
^9.611^3^3
"BLD",6982,"REQB",1,0)
SD*5.3*144^2
"BLD",6982,"REQB",2,0)
SD*5.3*322^2
"BLD",6982,"REQB",3,0)
SD*5.3*440^2
"BLD",6982,"REQB","B","SD*5.3*144",1)

"BLD",6982,"REQB","B","SD*5.3*322",2)

"BLD",6982,"REQB","B","SD*5.3*440",3)

"MBREQ")
0
"PKG",16,-1)
1^1
"PKG",16,0)
SCHEDULING^SD^APPOINTMENTS,PROFILES,LETTERS,AMIS REPORTS
"PKG",16,20,0)
^9.402P^^
"PKG",16,22,0)
^9.49I^1^1
"PKG",16,22,1,0)
5.3^2930813
"PKG",16,22,1,"PAH",1,0)
474^3070125
"PKG",16,22,1,"PAH",1,1,0)
^^1^1^3070125
"PKG",16,22,1,"PAH",1,1,1,0)
Correction to Performance Monitor Report, etc.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","SCRPW23")
0^3^B48856672^B47023316
"RTN","SCRPW23",1,0)
SCRPW23 ;RENO/KEITH - ACRP Ad Hoc Report (cont.) ; 15 Jul 98  02:38PM
"RTN","SCRPW23",2,0)
 ;;5.3;Scheduling;**144,474**;AUG 13, 1993;Build 4
"RTN","SCRPW23",3,0)
DIRB(SDFL) ;Get default values for range
"RTN","SCRPW23",4,0)
 ;Required input: SDFL="F" for first, "L" for last
"RTN","SCRPW23",5,0)
 N SDX S SDX=$O(SDPAR("X",SDS2,$S(SDDV:5,1:4),""),$S(SDFL="F":1,1:-1)) Q $S(SDX=""!'SDDV:SDX,1:SDPAR("X",SDS2,5,SDX))
"RTN","SCRPW23",6,0)
 ;
"RTN","SCRPW23",7,0)
RL ;Prompt for range or list
"RTN","SCRPW23",8,0)
 N SDI,SDIRQ X:$L($P(SDACT,T,9)) $P(SDACT,T,9) S SDDV=0 S:$P(SDACT,T,2)="D" SDDV=1,SDPAR("X",SDS2,6)="D"
"RTN","SCRPW23",9,0)
 I $P(SDPAR("X",SDS2,2),U)="N" D NULL Q
"RTN","SCRPW23",10,0)
 I $P(SDPAR("X",SDS2,2),U)="L" D LST Q
"RTN","SCRPW23",11,0)
RNG N SDR1,SDR2 D SUBT^SCRPW50("*** Item Range Selection ***")
"RTN","SCRPW23",12,0)
R1 W !!,"Start with:" S SDR1=$$SEL($P(SDACT,T,2),$$DIRB("F")) Q:SDOUT!SDNUL
"RTN","SCRPW23",13,0)
 S SDR2=$O(SDPAR("X",SDS2,$S(SDDV:5,1:4),""),-1) I $L(SDR2),$P(SDR1,U,$S(SDDV:1,1:2))]SDR2 F SDI=SDS1,"X" K SDPAR(SDI,SDS2,$S(SDDV:5,1:4),SDR2)
"RTN","SCRPW23",14,0)
R2 W !!,"End with:" S SDR2=$$SEL($P(SDACT,T,2),$$DIRB("L")) Q:SDOUT!SDNUL
"RTN","SCRPW23",15,0)
 I '$$RCOL() W !!,$C(7),"End value must collate after start value!" G R2
"RTN","SCRPW23",16,0)
 F SDX="SDR1","SDR2" S SDPAR("X",SDS2,4,$P(@SDX,U,2),$P(@SDX,U))=""
"RTN","SCRPW23",17,0)
 F SDX="SDR1","SDR2" S SDPAR("X",SDS2,5,$P(@SDX,U))=$P(@SDX,U,2)
"RTN","SCRPW23",18,0)
 Q
"RTN","SCRPW23",19,0)
 ;
"RTN","SCRPW23",20,0)
RCOL() ;Determine range collation validity
"RTN","SCRPW23",21,0)
 ;Output: 1=valid, 0=invalid
"RTN","SCRPW23",22,0)
 I $P(SDR1,U,2)=+$P(SDR1,U,2),$P(SDR2,U,2)=+$P(SDR2,U,2) Q SDR1'>SDR2
"RTN","SCRPW23",23,0)
 I SDDV Q $P(SDR1,U)'>$P(SDR2,U)
"RTN","SCRPW23",24,0)
 Q $P(SDR1,U,2)']$P(SDR2,U,2)
"RTN","SCRPW23",25,0)
 ;
"RTN","SCRPW23",26,0)
NULL ;Set list for null value
"RTN","SCRPW23",27,0)
 S SDPAR("X",SDS2,4,"~~~NONE~~~","~~~NONE~~~")="",SDPAR("X",SDS2,5,"~~~NONE~~~")="~~~NONE~~~" Q
"RTN","SCRPW23",28,0)
 ;
"RTN","SCRPW23",29,0)
LST I $D(SDPAR("X",SDS2,4)) D LST1
"RTN","SCRPW23",30,0)
 D SUBT^SCRPW50("*** Item List Selection ***") W !
"RTN","SCRPW23",31,0)
 F I=1:1:$P(SDACT,T,6) S SDX=$$SEL($P(SDACT,T,2)) Q:SDOUT!SDNUL  D LST0
"RTN","SCRPW23",32,0)
 Q
"RTN","SCRPW23",33,0)
 ;
"RTN","SCRPW23",34,0)
LST0 I $D(SDPAR("X",SDS2,5,$P(SDX,U))) Q:$$LSD()
"RTN","SCRPW23",35,0)
 S SDPAR("X",SDS2,5,$P(SDX,U))=$P(SDX,U,2),SDPAR("X",SDS2,4,$P(SDX,U,2),$P(SDX,U))=""
"RTN","SCRPW23",36,0)
 Q
"RTN","SCRPW23",37,0)
 ;
"RTN","SCRPW23",38,0)
LSD() N DIR W !!,$C(7),$P(SDX,U,2)," is already selected." S DIR(0)="Y",DIR("A")="Do you want to delete it",DIR("B")="NO" D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q 0
"RTN","SCRPW23",39,0)
 I Y D  W !,"   ...deleted." Q 1
"RTN","SCRPW23",40,0)
 .F SDI=SDS1,"X" K SDPAR(SDI,SDS2,5,$P(SDX,U)),SDPAR(SDI,SDS2,4,$P(SDX,U,2),$P(SDX,U))
"RTN","SCRPW23",41,0)
 .Q
"RTN","SCRPW23",42,0)
 Q 0
"RTN","SCRPW23",43,0)
 ;
"RTN","SCRPW23",44,0)
LST1 ;List existing item selections
"RTN","SCRPW23",45,0)
 N SDOUT,SDL,SDX S SDOUT=0,SDL=1,SDX="" W !,"Items currently selected:"
"RTN","SCRPW23",46,0)
 F  S SDX=$O(SDPAR("X",SDS2,4,SDX)) Q:SDX=""!SDOUT  S SDL=SDL+1 W !?5,SDX D:SDL>15 WAIT^SCRPW22
"RTN","SCRPW23",47,0)
 Q
"RTN","SCRPW23",48,0)
 ;
"RTN","SCRPW23",49,0)
SEL(SDTYP,SDIRB) ;Select items for list or range
"RTN","SCRPW23",50,0)
 ;Required input: SDTYP=type of data (D, P, F, N, T, C, PP, S)
"RTN","SCRPW23",51,0)
 ;Optional input: SDIRB=value for default prompt
"RTN","SCRPW23",52,0)
 N SDX S SDX="" D @SDTYP Q SDX
"RTN","SCRPW23",53,0)
 ;
"RTN","SCRPW23",54,0)
D ;Get date values
"RTN","SCRPW23",55,0)
 N DIR M DIR=SDIRQ S DIR(0)=$P(SDACT,T,4),DIR("A")="Select "_$P(SDACT,T) S:$L($G(SDIRB)) DIR("B")=SDIRB D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",56,0)
 I '$L(Y) S SDNUL=1 Q
"RTN","SCRPW23",57,0)
 S SDX=Y X ^DD("DD") S SDX=SDX_U_Y X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",58,0)
 ;
"RTN","SCRPW23",59,0)
P ;Get pointer values ;SD*5.3*474 added PSCRN to screen certain status types
"RTN","SCRPW23",60,0)
 N DIC M DIC=SDIRQ S DIC=$P(SDACT,T,3),DIC(0)="AEMQ",DIC("S")=$P(SDACT,T,4) K:'$L(DIC("S")) DIC("S") D:DIC="^SD(409.63," PSCRN D ^DIC I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",61,0)
 I Y'>0 S SDNUL=1 Q
"RTN","SCRPW23",62,0)
 S SDX=Y X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",63,0)
 ;
"RTN","SCRPW23",64,0)
PSCRN ;screen out the 4 cancellation type status' SD*5.3*474
"RTN","SCRPW23",65,0)
 S DIC("S")="I $P(^(0),U,2)'=""C"",$P(^(0),U,2)'=""CA"",$P(^(0),U,2)'=""PC"",$P(^(0),U,2)'=""PCA"""
"RTN","SCRPW23",66,0)
 Q
"RTN","SCRPW23",67,0)
 ;
"RTN","SCRPW23",68,0)
F ;Get field values
"RTN","SCRPW23",69,0)
 N DIR M DIR=SDIRQ S DIR(0)=$P(SDACT,T,3) S:$L($G(SDIRB)) DIR("B")=SDIRB D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",70,0)
 I '$D(DIR("B")),X="" S SDNUL=1 Q
"RTN","SCRPW23",71,0)
 S SDX=Y_U_$G(Y(0)) X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",72,0)
 ;
"RTN","SCRPW23",73,0)
N ;Get number value
"RTN","SCRPW23",74,0)
 N DIR M DIR=SDIRQ S DIR(0)=$P(SDACT,T,4),DIR("A")="Select "_$P(SDACT,T) S:$L($G(SDIRB)) DIR("B")=SDIRB D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",75,0)
 I Y'?1.N S SDNUL=1 Q
"RTN","SCRPW23",76,0)
 S SDX=Y_U_Y X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",77,0)
 ;
"RTN","SCRPW23",78,0)
T ;Get text value
"RTN","SCRPW23",79,0)
 N DIR M DIR=SDIRQ S DIR(0)=$P(SDACT,T,4),DIR("A")="Select "_$P(SDACT,T) S:$L($G(SDIRB)) DIR("B")=SDIRB D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",80,0)
 I '$L(Y) S SDNUL=1 Q
"RTN","SCRPW23",81,0)
 S SDX=Y_U_Y X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",82,0)
 ;
"RTN","SCRPW23",83,0)
C ;Get computed value
"RTN","SCRPW23",84,0)
 D @($P(SDACT,T,4)) X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",85,0)
 ;
"RTN","SCRPW23",86,0)
PP ;Get pointer value from file multiple
"RTN","SCRPW23",87,0)
 N DIC M DIC=SDIRQ S DIC=$P($P(SDACT,T,3),";"),DIC(0)="AEMQ",DIC("B")=$P($G(SDIRB),";") K:'$L(DIC("B")) DIC("B") D ^DIC I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",88,0)
 I Y<1 S SDNUL=1 Q
"RTN","SCRPW23",89,0)
 S SDX=Y,DIC=DIC_+SDX_$P($P(SDACT,T,3),";",2),DIC("B")=$P($G(SDIRB),";",2) K:'$L(DIC("B")) DIC("B") D ^DIC I $D(DTOUT)!$D(DUOUT) S SDX="",SDOUT=1 Q
"RTN","SCRPW23",90,0)
 I Y<1 S SDX="",SDNUL=1 Q
"RTN","SCRPW23",91,0)
 S SDX=+SDX_";"_+Y_U_$P(SDX,U,2)_" / "_$P(Y,U,2) X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",92,0)
 ;
"RTN","SCRPW23",93,0)
S ;Get set-of-codes value
"RTN","SCRPW23",94,0)
 N DIR M DIR=SDIRQ X $P(SDACT,T,3) S DIR("A")="Select "_$P(SDACT,T) S:$L($G(SDIRB)) DIR("B")=SDIRB D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q
"RTN","SCRPW23",95,0)
 I '$L(Y) S SDNUL=1 Q
"RTN","SCRPW23",96,0)
 S SDX=Y_U_Y(0) X:$L($P(SDACT,T,8)) $P(SDACT,T,8) Q
"RTN","SCRPW23",97,0)
 ;
"RTN","SCRPW23",98,0)
VCP(SDX) ;Validate Stop Code credit pair
"RTN","SCRPW23",99,0)
 ;Required input: SDX=6 digit numeric value
"RTN","SCRPW23",100,0)
 ;Output: 1=valid credit pair, 0=invalid credit pair
"RTN","SCRPW23",101,0)
 G:SDX'?6N VCPQ G:'$D(^DIC(40.7,"C",$E(SDX,1,3))) VCPQ G:'$D(^DIC(40.7,"C",$E(SDX,4,6)))&($E(SDX,4,6)'="000") VCPQ
"RTN","SCRPW23",102,0)
 Q 1
"RTN","SCRPW23",103,0)
 ;
"RTN","SCRPW23",104,0)
VCPQ W $C(7),"   ??",!,"This response must be a 6 digit numeric value",!,"that represents two valid stop codes!" Q 0
"RTN","SCRPW23",105,0)
 ;
"RTN","SCRPW23",106,0)
PLIST ;Print category list
"RTN","SCRPW23",107,0)
 N ZTSAVE D EN^XUTMDEVQ("PLST^SCRPW23","CATEGORY LIST",.ZTSAVE) Q
"RTN","SCRPW23",108,0)
PLST ;Print category list
"RTN","SCRPW23",109,0)
 D:'$D(^TMP("SCRPW",$J,"SEL")) BLD^SCRPW21
"RTN","SCRPW23",110,0)
 S I=0 F  S I=$O(^TMP("SCRPW",$J,"SEL",1,I)) Q:'I  S X1=$O(^TMP("SCRPW",$J,"SEL",1,I,"")) W !!,$P(^TMP("SCRPW",$J,"SEL",1,I,X1),"~") D PLST1
"RTN","SCRPW23",111,0)
 K I,II,X1,X2,^TMP("SCRPW",$J) Q
"RTN","SCRPW23",112,0)
 ;
"RTN","SCRPW23",113,0)
PLST1 S II=0 F  S II=$O(^TMP("SCRPW",$J,"SEL",2,X1,II)) Q:'II  S X2=$O(^TMP("SCRPW",$J,"SEL",2,X1,II,"")) W !?4,$P(^TMP("SCRPW",$J,"SEL",2,X1,II,X2),"~")
"RTN","SCRPW23",114,0)
 Q
"RTN","SCRPW23",115,0)
 ;
"RTN","SCRPW23",116,0)
DISP0 ;Return to full screen scrolling
"RTN","SCRPW23",117,0)
 Q:$E(IOST)'="C"
"RTN","SCRPW23",118,0)
 D ENS^%ZISS S SDRM=^%ZOSF("RM"),SDXY=^%ZOSF("XY"),(IOTM,IOBM)=0 W $$XY(IOSTBM,1),@IOF N DX,DY,X S (DX,DY)=0 X SDXY S X=IOM X SDRM Q
"RTN","SCRPW23",119,0)
 ;
"RTN","SCRPW23",120,0)
DISP(SDTOP,SDBOT) ;Create centered scrolling region
"RTN","SCRPW23",121,0)
 ;Required input: SDTOP=text to center at top of screen
"RTN","SCRPW23",122,0)
 ;Required input: SDBOT(n)=numbered array of text to display at bottom of screen
"RTN","SCRPW23",123,0)
 N X D DISP0 S X=0 X SDRM W $$XY(IORVON) F I=1:1:(78-$L(SDTOP)\2) W "-"
"RTN","SCRPW23",124,0)
 W " ",SDTOP," " F  W "-" Q:$X>79
"RTN","SCRPW23",125,0)
 W $$XY(IORVOFF) S IOTM=3 W $$XY(IOSTBM,1) S (C,I)="" F  S I=$O(SDBOT(I)) Q:I=""  S C=C+1
"RTN","SCRPW23",126,0)
 F  W ! Q:$Y>(IOSL-C)
"RTN","SCRPW23",127,0)
 S II=$O(SDBOT("")) Q:II=""  W $$XY(IORVON) F I=1:1:(78-$L(SDBOT(II))\2) W "-"
"RTN","SCRPW23",128,0)
 W " ",SDBOT(II)," " F  W "-" Q:$X>79
"RTN","SCRPW23",129,0)
 W $$XY(IORVOFF) F  S II=$O(SDBOT(II)) Q:II=""  W !,$E(SDBOT(II),1,80)
"RTN","SCRPW23",130,0)
 S IOBM=(IOSL-C-1) W $$XY(IOSTBM,1) Q
"RTN","SCRPW23",131,0)
 ;
"RTN","SCRPW23",132,0)
XY(X,SDI) ;Maintain $X, $Y
"RTN","SCRPW23",133,0)
 ;Required input: X=screen handling variable to write
"RTN","SCRPW23",134,0)
 ;Optional input: SDI=1 (to specify the use of indirection)
"RTN","SCRPW23",135,0)
 N DX,DY S DX=$X,DY=$Y
"RTN","SCRPW23",136,0)
 I $G(SDI) W @X X SDXY Q ""
"RTN","SCRPW23",137,0)
 W X X SDXY Q ""
"RTN","SCRPW23",138,0)
 ;
"RTN","SCRPW23",139,0)
DIR(DIR,SDLEV,SDEXE,SDS,SDO,SDPFL,SDA) ;Ask questions!
"RTN","SCRPW23",140,0)
 ;Required input: DIR array (pass by reference)
"RTN","SCRPW23",141,0)
 ;Required input: SDLEV=level to build DIR(0) for large sets
"RTN","SCRPW23",142,0)
 ;Optional input: SDEXE=code to execute prior to ^DIR
"RTN","SCRPW23",143,0)
 ;Optional input: SDS=subscript lookup value for level 2 (required for level 2)
"RTN","SCRPW23",144,0)
 ;Optional input: SDO="O" to indicate input is optional
"RTN","SCRPW23",145,0)
 ;Optional input: SDPFL=print field level (1,2) for print field prompts
"RTN","SCRPW23",146,0)
 ;Optional input: SDA=1 to force single item selection prompt
"RTN","SCRPW23",147,0)
 X:$L($G(SDEXE)) SDEXE I '$D(DIR(0)) D @("DIR"_SDLEV)
"RTN","SCRPW23",148,0)
 I '$G(SDA),$E(DIR(0))="S",$L(DIR(0),":")=2 Q $P($P(DIR(0),U,2),":")_U_$P(DIR(0),":",2)
"RTN","SCRPW23",149,0)
 D ^DIR I $D(DTOUT)!$D(DUOUT) S SDOUT=1 Q ""
"RTN","SCRPW23",150,0)
 I X="" S SDNUL=1 Q ""
"RTN","SCRPW23",151,0)
 Q Y_U_$S($L($G(Y(0))):Y(0),1:Y)
"RTN","SCRPW23",152,0)
 ;
"RTN","SCRPW23",153,0)
DIR1 N X,I,II S X="",I=0 F  S I=$O(^TMP("SCRPW",$J,"SEL",1,I)) Q:'I  S II="" F  S II=$O(^TMP("SCRPW",$J,"SEL",1,I,II)) Q:II=""  S:$$PFL1() X=X_";"_II_":"_$P(^TMP("SCRPW",$J,"SEL",1,I,II),T)
"RTN","SCRPW23",154,0)
 S DIR(0)="S"_$G(SDO)_"^"_$E(X,2,245) Q
"RTN","SCRPW23",155,0)
 ;
"RTN","SCRPW23",156,0)
DIR2 N X,I,II S X="",I=0 F  S I=$O(^TMP("SCRPW",$J,"SEL",2,SDS,I)) Q:'I  S II="" F  S II=$O(^TMP("SCRPW",$J,"SEL",2,SDS,I,II)) Q:II=""  S:$$PFL2() X=X_";"_II_":"_$P(^TMP("SCRPW",$J,"SEL",2,SDS,I,II),T)
"RTN","SCRPW23",157,0)
 S DIR(0)="S"_$G(SDO)_"^"_$E(X,2,245) Q
"RTN","SCRPW23",158,0)
 ;
"RTN","SCRPW23",159,0)
PFL1() ;Print field level 1 evaluator
"RTN","SCRPW23",160,0)
 Q:'$G(SDPFL) 1
"RTN","SCRPW23",161,0)
 Q $P(^TMP("SCRPW",$J,"SEL",1,I,II),T,2)>(SDPFL-1)
"RTN","SCRPW23",162,0)
 ;
"RTN","SCRPW23",163,0)
PFL2() ;Print field level 2 evaluator
"RTN","SCRPW23",164,0)
 Q:'$G(SDPFL) 1
"RTN","SCRPW23",165,0)
 Q $P(^TMP("SCRPW",$J,"SEL",2,SDS,I,II),T,2)>(SDPFL-1)
"RTN","SCRPW23",166,0)
 ;
"RTN","SCRPW23",167,0)
DIRB1(S1,S2,SDEF) ;Set DIR("B")
"RTN","SCRPW23",168,0)
 ;Required input: S1, S2=subscript values
"RTN","SCRPW23",169,0)
 ;Optional input: SDEF=default value
"RTN","SCRPW23",170,0)
 S DIR("B")=$S($D(SDPAR(S1,S2)):$P(SDPAR(S1,S2),U,2),1:$G(SDEF))
"RTN","SCRPW23",171,0)
 K:'$L(DIR("B")) DIR("B") Q
"RTN","SCRPW81")
0^4^B72671391^B69347898
"RTN","SCRPW81",1,0)
SCRPW81 ; ALB/SCK - SCDX AMB CARE CLOSEOUT RPT FOR MT INDICATOR = U ; 9 JULY 2003
"RTN","SCRPW81",2,0)
 ;;5.3;Scheduling;**302,440,474**;AUG 13, 1993;Build 4
"RTN","SCRPW81",3,0)
 ;
"RTN","SCRPW81",4,0)
EN ; Main entry point for report
"RTN","SCRPW81",5,0)
 N DIR,DIRUT,SDBEG,SDEND,RSLT,Y,X
"RTN","SCRPW81",6,0)
 ;
"RTN","SCRPW81",7,0)
 S DIR("A")="Please select fiscal year",DIR(0)="SM^A:Previous Fiscal Year;B:Current Fiscal Year;O:Other Date Range"
"RTN","SCRPW81",8,0)
 S DIR("B")="B"
"RTN","SCRPW81",9,0)
 S DIR("?")="You may select either the previous fiscal year (A) or the current fiscal year (B).  Select (O) if you choose to specify your own date range."
"RTN","SCRPW81",10,0)
 D ^DIR K DIR
"RTN","SCRPW81",11,0)
 Q:$D(DIRUT)
"RTN","SCRPW81",12,0)
 S RSLT=Y
"RTN","SCRPW81",13,0)
 ;
"RTN","SCRPW81",14,0)
 I RSLT="A" D 
"RTN","SCRPW81",15,0)
 . D PASTYR(.SDBEG,.SDEND)
"RTN","SCRPW81",16,0)
 E  I RSLT="B" D
"RTN","SCRPW81",17,0)
 . D CURYR(.SDBEG,.SDEND)
"RTN","SCRPW81",18,0)
 E  D
"RTN","SCRPW81",19,0)
 . D GETDT(.SDBEG,.SDEND)
"RTN","SCRPW81",20,0)
 Q:'$G(SDBEG)!('$G(SDEND))
"RTN","SCRPW81",21,0)
 W !!?3,"Date Range: "_$$FMTE^XLFDT(SDBEG)_" to "_$$FMTE^XLFDT(SDEND)
"RTN","SCRPW81",22,0)
 ;
"RTN","SCRPW81",23,0)
 N X,Y,IORVON,IORVOFF
"RTN","SCRPW81",24,0)
 S X="IORVON;IORVOFF"
"RTN","SCRPW81",25,0)
 D ENDR^%ZISS
"RTN","SCRPW81",26,0)
 W:$D(IORVON) IORVON
"RTN","SCRPW81",27,0)
 W !,"A 132-Column printer is required for this report."
"RTN","SCRPW81",28,0)
 W !,"This report will NOT print correctly to the screen!"
"RTN","SCRPW81",29,0)
 W:$D(IORVOFF) IORVOFF
"RTN","SCRPW81",30,0)
 ;
"RTN","SCRPW81",31,0)
 N ZTSAVE,ZTRTN,ZTDESC,POP,%ZIS
"RTN","SCRPW81",32,0)
 S %ZIS="Q" D ^%ZIS G:POP EXIT
"RTN","SCRPW81",33,0)
 I $D(IO("Q")) D  Q
"RTN","SCRPW81",34,0)
 . S ZTSAVE("SDBEG")="",ZTSAVE("SDEND")="",ZTSAVE("DUZ")=""
"RTN","SCRPW81",35,0)
 . S ZTRTN="RUN^SCRPW81"
"RTN","SCRPW81",36,0)
 . S ZTDESC="XMITED OE MT=U RPT"
"RTN","SCRPW81",37,0)
 . D ^%ZTLOAD D HOME^%ZIS K IO("Q")
"RTN","SCRPW81",38,0)
 D RUN
"RTN","SCRPW81",39,0)
 D ^%ZISC
"RTN","SCRPW81",40,0)
EXIT S:$D(ZTQUEUED) ZTREQ="@" Q
"RTN","SCRPW81",41,0)
 ;
"RTN","SCRPW81",42,0)
RUN ; Run report
"RTN","SCRPW81",43,0)
 U IO
"RTN","SCRPW81",44,0)
 K ^TMP("SCDX MTU",$J),^TMP("SCDX ASORT",$J)
"RTN","SCRPW81",45,0)
 ;
"RTN","SCRPW81",46,0)
 D BLD(SDBEG,SDEND)
"RTN","SCRPW81",47,0)
 D CHKMT
"RTN","SCRPW81",48,0)
 D SRTNAME
"RTN","SCRPW81",49,0)
 D MAIL
"RTN","SCRPW81",50,0)
 D PRINT
"RTN","SCRPW81",51,0)
 K ^TMP("SCDX MTU",$J),^TMP("SCDX ASORT",$J)
"RTN","SCRPW81",52,0)
 Q
"RTN","SCRPW81",53,0)
 ;
"RTN","SCRPW81",54,0)
PASTYR(SDBEG,SDEND) ; Set dates for previous fiscal year
"RTN","SCRPW81",55,0)
 N CURYR,PRVYR,CURMN,%I
"RTN","SCRPW81",56,0)
 ;
"RTN","SCRPW81",57,0)
 D NOW^%DTC
"RTN","SCRPW81",58,0)
 S CURYR=%I(3),CURMN=%I(1)
"RTN","SCRPW81",59,0)
 I CURMN>9 D
"RTN","SCRPW81",60,0)
 . S CURYR=CURYR+1
"RTN","SCRPW81",61,0)
 S PRVYR=CURYR-1
"RTN","SCRPW81",62,0)
 S SDEND=$$FMADD^XLFDT(PRVYR_"1001",-1)
"RTN","SCRPW81",63,0)
 S SDBEG=$$FMADD^XLFDT(PRVYR_"1001",-365)
"RTN","SCRPW81",64,0)
 Q
"RTN","SCRPW81",65,0)
 ;
"RTN","SCRPW81",66,0)
CURYR(SDBEG,SDEND) ; Set dates for current fiscal year
"RTN","SCRPW81",67,0)
 N CURYR,CURMN,%I
"RTN","SCRPW81",68,0)
 ;
"RTN","SCRPW81",69,0)
 D NOW^%DTC
"RTN","SCRPW81",70,0)
 S CURYR=%I(3),CURMN=%I(1)
"RTN","SCRPW81",71,0)
 I CURMN<10 D
"RTN","SCRPW81",72,0)
 . S CURYR=CURYR-1
"RTN","SCRPW81",73,0)
 S SDBEG=CURYR_"1001"
"RTN","SCRPW81",74,0)
 S SDEND=$P($$NOW^XLFDT,".")
"RTN","SCRPW81",75,0)
 Q
"RTN","SCRPW81",76,0)
 ;
"RTN","SCRPW81",77,0)
GETDT(SDBEG,SDEND) ;  Get beginning and ending date for search
"RTN","SCRPW81",78,0)
 ; Output   SDBEG   Beginning for date range
"RTN","SCRPW81",79,0)
 ;          SDEND   End of date range
"RTN","SCRPW81",80,0)
 ;          result  1 - If function successful
"RTN","SCRPW81",81,0)
 ;                  0 - If function NOT successful (User quit)
"RTN","SCRPW81",82,0)
 ;
"RTN","SCRPW81",83,0)
 N DIR,DIRUT,Y
"RTN","SCRPW81",84,0)
 ;
"RTN","SCRPW81",85,0)
 W !!?3,"You have selected to specify your own date range.  Please note that by"
"RTN","SCRPW81",86,0)
 W !?3,"doing so you may not generate an accurate picture of the AMB CARE"
"RTN","SCRPW81",87,0)
 W !?3,"closeouts where the means test indicator equals 'U'.",!
"RTN","SCRPW81",88,0)
 ;
"RTN","SCRPW81",89,0)
 S DIR(0)="DAO^:DT:EX"
"RTN","SCRPW81",90,0)
 S DIR("A")="Beginning Date: "
"RTN","SCRPW81",91,0)
 S DIR("?")="^D HELP^%DTC"
"RTN","SCRPW81",92,0)
 D ^DIR
"RTN","SCRPW81",93,0)
 I $D(DIRUT) D  Q
"RTN","SCRPW81",94,0)
 . S SDBEG=0
"RTN","SCRPW81",95,0)
 S SDBEG=Y
"RTN","SCRPW81",96,0)
 ;
"RTN","SCRPW81",97,0)
 S DIR(0)="DAO^:DT:EX"
"RTN","SCRPW81",98,0)
 S DIR("A")="Ending Date: "
"RTN","SCRPW81",99,0)
 D ^DIR
"RTN","SCRPW81",100,0)
 I $D(DIRUT) D  Q
"RTN","SCRPW81",101,0)
 . S SDEND=0
"RTN","SCRPW81",102,0)
 S SDEND=Y
"RTN","SCRPW81",103,0)
 Q
"RTN","SCRPW81",104,0)
 ;
"RTN","SCRPW81",105,0)
BLD(SDBEG,SDEND) ;  Build list of patient OE's for date range
"RTN","SCRPW81",106,0)
 ; Input   SDBEG
"RTN","SCRPW81",107,0)
 ;         SDEND
"RTN","SCRPW81",108,0)
 ;
"RTN","SCRPW81",109,0)
 N SDX,SDMAX,SDOEI,CNT,NODE,SDOEX,SDLOC
"RTN","SCRPW81",110,0)
 ;
"RTN","SCRPW81",111,0)
 S SDX=$$FMADD^XLFDT(SDBEG,0,0,0,-1) ; set inital search DT to beginning date minus one second
"RTN","SCRPW81",112,0)
 S SDMAX=$$FMADD^XLFDT(SDEND,0,23,59,59) ; set search end date to end date plus one day
"RTN","SCRPW81",113,0)
 ;
"RTN","SCRPW81",114,0)
 S ^TMP("SCDX MTU",$J,0,"BEGIN")=$H
"RTN","SCRPW81",115,0)
 F  S SDX=$O(^SCE("B",SDX)) Q:'SDX  D  Q:SDX>SDMAX
"RTN","SCRPW81",116,0)
 . S SDOEI=0
"RTN","SCRPW81",117,0)
 . F  S SDOEI=$O(^SCE("B",SDX,SDOEI)) Q:'SDOEI  D
"RTN","SCRPW81",118,0)
 . . S NODE=$G(^SCE(SDOEI,0))
"RTN","SCRPW81",119,0)
 . . Q:$P(NODE,U,6)>0  ; Quit if not parent encounter
"RTN","SCRPW81",120,0)
 . . Q:$P(NODE,U,8)>3  ; Quit if Originating process is for credit stop code
"RTN","SCRPW81",121,0)
 . . S SDLOC=+$P(NODE,U,4)
"RTN","SCRPW81",122,0)
 . . Q:$$GET1^DIQ(44,SDLOC,2502,"I")="Y"  ; Quit if non-count clinic
"RTN","SCRPW81",123,0)
 . . S SDOEX=$O(^SD(409.73,"AENC",SDOEI,0))
"RTN","SCRPW81",124,0)
 . . Q:'$P(NODE,U,2)
"RTN","SCRPW81",125,0)
 . . S ^TMP("SCDX MTU",$J,$P(NODE,U,2),SDOEI)=$P(NODE,U,1)_U_SDOEX
"RTN","SCRPW81",126,0)
 . . S ^TMP("SCDX MTU",$J,0,"CNT")=$G(^TMP("SCDX MTU",$J,0,"CNT"))+1
"RTN","SCRPW81",127,0)
 S ^TMP("SCDX MTU",$J,0,"END")=$H
"RTN","SCRPW81",128,0)
 Q
"RTN","SCRPW81",129,0)
 ;
"RTN","SCRPW81",130,0)
CHKMT ; Clean out all except those meeting the MT=U conditions
"RTN","SCRPW81",131,0)
 N DFN,SDOEI,SDOEDT,SDMT,SDO,SDR,SDN,SDAT,SDEC,SDMTI,SDMTT
"RTN","SCRPW81",132,0)
 ;
"RTN","SCRPW81",133,0)
 S DFN=0
"RTN","SCRPW81",134,0)
 F  S DFN=$O(^TMP("SCDX MTU",$J,DFN)) Q:'DFN  D
"RTN","SCRPW81",135,0)
 . I '$D(^DGMT(408.31,"C",DFN)) D  Q  ; No MT Data, bypass patient
"RTN","SCRPW81",136,0)
 . . K ^TMP("SCDX MTU",$J,DFN)
"RTN","SCRPW81",137,0)
 . S (SDR,SDO,SDN,SDOEI)=0
"RTN","SCRPW81",138,0)
 . F  S SDOEI=$O(^TMP("SCDX MTU",$J,DFN,SDOEI)) Q:'SDOEI  D
"RTN","SCRPW81",139,0)
 . . S SDOEDT=$P($G(^TMP("SCDX MTU",$J,DFN,SDOEI)),U,1)
"RTN","SCRPW81",140,0)
 . . Q:'SDOEDT
"RTN","SCRPW81",141,0)
 . . S SDEC=$$GET1^DIQ(409.68,SDOEI,.13,"I")
"RTN","SCRPW81",142,0)
 . . S SDAT=$$GET1^DIQ(409.68,SDOEI,.1,"I")
"RTN","SCRPW81",143,0)
 . . S SDMTI=$$MTI^SCDXUTL0(DFN,SDOEDT,SDEC,SDAT,SDOEI)
"RTN","SCRPW81",144,0)
 . . I SDMTI'="U" D  Q
"RTN","SCRPW81",145,0)
 . . . K ^TMP("SCDX MTU",$J,DFN)
"RTN","SCRPW81",146,0)
 . . S SDMTT=$$LST^DGMTU(DFN,SDOEDT,1) I $P(SDMTT,U,4)="N" D  Q
"RTN","SCRPW81",147,0)
 . . . K ^TMP("SCDX MTU",$J,DFN)
"RTN","SCRPW81",148,0)
 . . S $P(^TMP("SCDX MTU",$J,DFN,SDOEI),U,4)=SDMTI
"RTN","SCRPW81",149,0)
 S ^TMP("SCDX MTU",$J,0,"END")=$H K SDMTT
"RTN","SCRPW81",150,0)
 Q
"RTN","SCRPW81",151,0)
 ;
"RTN","SCRPW81",152,0)
SRTNAME ; Sort remaining encounters by patient name and OE date
"RTN","SCRPW81",153,0)
 N DFN,SDOEI,SDNAME,SDOEDT
"RTN","SCRPW81",154,0)
 ;
"RTN","SCRPW81",155,0)
 S DFN=0
"RTN","SCRPW81",156,0)
 F  S DFN=$O(^TMP("SCDX MTU",$J,DFN)) Q:'DFN  D
"RTN","SCRPW81",157,0)
 . S SDNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","SCRPW81",158,0)
 . Q:SDNAME']""
"RTN","SCRPW81",159,0)
 . S ^TMP("SCDX MTU",$J,0,"PATNUM")=$G(^TMP("SCDX MTU",$J,0,"PATNUM"))+1
"RTN","SCRPW81",160,0)
 . S SDOEI=0
"RTN","SCRPW81",161,0)
 . F  S SDOEI=$O(^TMP("SCDX MTU",$J,DFN,SDOEI)) Q:'SDOEI  D
"RTN","SCRPW81",162,0)
 . . S SDOEDT=$P(^TMP("SCDX MTU",$J,DFN,SDOEI),U,1)
"RTN","SCRPW81",163,0)
 . . S ^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)=$P(^TMP("SCDX MTU",$J,DFN,SDOEI),U,2)_U_SDOEI_U_DFN_U_$P(^TMP("SCDX MTU",$J,DFN,SDOEI),U,4)
"RTN","SCRPW81",164,0)
 . . S ^TMP("SCDX MTU",$J,0,"FINAL CNT")=$G(^TMP("SCDX MTU",$J,0,"FINAL CNT"))+1
"RTN","SCRPW81",165,0)
 S ^TMP("SCDX MTU",$J,0,"END2")=$H
"RTN","SCRPW81",166,0)
 Q
"RTN","SCRPW81",167,0)
 ;
"RTN","SCRPW81",168,0)
MAIL ; send message with report statistics
"RTN","SCRPW81",169,0)
 N MSG,XMSUB,XMY,XMTEXT,XMDUZ
"RTN","SCRPW81",170,0)
 ;
"RTN","SCRPW81",171,0)
 S MSG(1)="Date Range for Report           "_$$FMTE^XLFDT(SDBEG,2)_" to "_$$FMTE^XLFDT(SDEND,2)
"RTN","SCRPW81",172,0)
 S MSG(2)=""
"RTN","SCRPW81",173,0)
 S MSG(3)="Report Started                  "_$$HTE^XLFDT(^TMP("SCDX MTU",$J,0,"BEGIN"),2)
"RTN","SCRPW81",174,0)
 S MSG(4)="Report Finished                 "_$$HTE^XLFDT(^TMP("SCDX MTU",$J,0,"END2"),2)
"RTN","SCRPW81",175,0)
 S MSG(5)="Total Time for Report           "_$$HDIFF^XLFDT(^TMP("SCDX MTU",$J,0,"END2"),^TMP("SCDX MTU",$J,0,"BEGIN"),3)
"RTN","SCRPW81",176,0)
 S MSG(6)=""
"RTN","SCRPW81",177,0)
 S MSG(7)="Outpatient Encounters Scanned   "_$J($FN(+$G(^TMP("SCDX MTU",$J,0,"CNT")),","),20)
"RTN","SCRPW81",178,0)
 S MSG(8)="Outpatient Encounters Reported  "_$J($FN(+$G(^TMP("SCDX MTU",$J,0,"FINAL CNT")),","),20)
"RTN","SCRPW81",179,0)
 S MSG(9)="Patient Count                   "_$J($FN(+$G(^TMP("SCDX MTU",$J,0,"PATNUM")),","),20)
"RTN","SCRPW81",180,0)
 ;
"RTN","SCRPW81",181,0)
 S XMSUB="MEANS TEST = 'U' REPORT STATISTICS"
"RTN","SCRPW81",182,0)
 S XMTEXT="MSG("
"RTN","SCRPW81",183,0)
 S XMY(DUZ)=""
"RTN","SCRPW81",184,0)
 S XMDUZ="ACRP MT=U STATS"
"RTN","SCRPW81",185,0)
 D ^XMD
"RTN","SCRPW81",186,0)
 Q
"RTN","SCRPW81",187,0)
 ;
"RTN","SCRPW81",188,0)
PRINT ; Print Report
"RTN","SCRPW81",189,0)
 ;SD*5.3*474 added SDFLAG and corresponding logic
"RTN","SCRPW81",190,0)
 N SDNAME,SDNODE,SDXNODE,SDOEI,SDOEX,SDOEDT,DFN,PRNTL4,VA,PAGE,SDFLAG
"RTN","SCRPW81",191,0)
 ;
"RTN","SCRPW81",192,0)
 S PAGE=0
"RTN","SCRPW81",193,0)
 D HDR
"RTN","SCRPW81",194,0)
 S SDNAME=""
"RTN","SCRPW81",195,0)
 F  S SDNAME=$O(^TMP("SCDX ASORT",$J,SDNAME)) Q:SDNAME']""  D
"RTN","SCRPW81",196,0)
 . W !,$E(SDNAME,1,30)
"RTN","SCRPW81",197,0)
 . S PRNTL4=0,SDFLAG=1
"RTN","SCRPW81",198,0)
 . S SDOEDT=0
"RTN","SCRPW81",199,0)
 . F  S SDOEDT=$O(^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)) Q:'SDOEDT  D
"RTN","SCRPW81",200,0)
 . . S DFN=$P($G(^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)),U,3)
"RTN","SCRPW81",201,0)
 . . S SDOEX=$P($G(^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)),U,1)
"RTN","SCRPW81",202,0)
 . . S SDOEI=$P($G(^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)),U,2)
"RTN","SCRPW81",203,0)
 . . I 'PRNTL4 D  S PRNTL4=1
"RTN","SCRPW81",204,0)
 . . . D PID^VADPT6
"RTN","SCRPW81",205,0)
 . . . W ?($L(SDNAME)+1),"(",VA("BID"),")"
"RTN","SCRPW81",206,0)
 . . I 'SDFLAG D  S SDFLAG=1
"RTN","SCRPW81",207,0)
 . . . W !,$E(SDNAME,1,30)
"RTN","SCRPW81",208,0)
 . . . D PID^VADPT6
"RTN","SCRPW81",209,0)
 . . . W ?($L(SDNAME)+1),"(",VA("BID"),")"
"RTN","SCRPW81",210,0)
 . . W ?35,$$FMTE^XLFDT(SDOEDT,"D"),$S(SDOEX>0:" *",1:"  ")
"RTN","SCRPW81",211,0)
 . . W ?56,$P($G(^TMP("SCDX ASORT",$J,SDNAME,SDOEDT)),U,4)
"RTN","SCRPW81",212,0)
 . . S SDNODE=$G(^SCE(SDOEI,0))
"RTN","SCRPW81",213,0)
 . . W ?68,$E($$GET1^DIQ(40.8,$P(SDNODE,U,11),.01),1,30)
"RTN","SCRPW81",214,0)
 . . W ?100,$E($$GET1^DIQ(44,$P(SDNODE,U,4),.01),1,30)
"RTN","SCRPW81",215,0)
 . . I ($Y+5)>IOSL D HDR S SDFLAG=0 Q
"RTN","SCRPW81",216,0)
 . . W !
"RTN","SCRPW81",217,0)
 D FTR1
"RTN","SCRPW81",218,0)
 Q
"RTN","SCRPW81",219,0)
 ;
"RTN","SCRPW81",220,0)
HDR ; Report Header
"RTN","SCRPW81",221,0)
 N SPACE,LINE,TAB,PRNTLN
"RTN","SCRPW81",222,0)
 ;
"RTN","SCRPW81",223,0)
 I PAGE>0 D FTR
"RTN","SCRPW81",224,0)
 W:PAGE>0 @IOF
"RTN","SCRPW81",225,0)
 S PAGE=PAGE+1
"RTN","SCRPW81",226,0)
 ;
"RTN","SCRPW81",227,0)
 S PRNTLN="Transmitted Outpatient Encounters with Means Test = 'U'"
"RTN","SCRPW81",228,0)
 S TAB=(IOM-$L(PRNTLN))\2
"RTN","SCRPW81",229,0)
 W !?TAB,PRNTLN
"RTN","SCRPW81",230,0)
 S PRNTLN="Date Range: "_$$FMTE^XLFDT(SDBEG)_" thru "_$$FMTE^XLFDT(SDEND)
"RTN","SCRPW81",231,0)
 S TAB=(IOM-$L(PRNTLN))\2
"RTN","SCRPW81",232,0)
 W !!?TAB,PRNTLN
"RTN","SCRPW81",233,0)
 S PRNTLN="Print Date: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","SCRPW81",234,0)
 S TAB=(IOM-$L(PRNTLN))\2
"RTN","SCRPW81",235,0)
 W !?TAB,PRNTLN
"RTN","SCRPW81",236,0)
 S PRNTLN="Page: "_PAGE
"RTN","SCRPW81",237,0)
 S TAB=(IOM-$L(PRNTLN))\2
"RTN","SCRPW81",238,0)
 W !?TAB,PRNTLN
"RTN","SCRPW81",239,0)
 ;
"RTN","SCRPW81",240,0)
 W !!?35,"Outpatient",?52,"",?68,"Medical Ctr"
"RTN","SCRPW81",241,0)
 W !,"PATIENT NAME",?35,"Encounter Date",?52,"MT Indicator",?68,"Division",?100,"Clinic"
"RTN","SCRPW81",242,0)
 ;
"RTN","SCRPW81",243,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","SCRPW81",244,0)
 Q
"RTN","SCRPW81",245,0)
 ;
"RTN","SCRPW81",246,0)
FTR ; Report Footer
"RTN","SCRPW81",247,0)
 N SDX
"RTN","SCRPW81",248,0)
 ;
"RTN","SCRPW81",249,0)
 F SDX=$Y:1:IOSL-2 W !
"RTN","SCRPW81",250,0)
 W ?5,"* - Transmitted Outpatient Encounter"
"RTN","SCRPW81",251,0)
 Q
"RTN","SCRPW81",252,0)
 ;
"RTN","SCRPW81",253,0)
FTR1 ;
"RTN","SCRPW81",254,0)
 W !?5,"* - Transmitted Outpatient Encounter"
"RTN","SCRPW81",255,0)
 Q
"RTN","SCRPW81",256,0)
 ;
"RTN","SDPMUT2")
0^5^B4384550^B4210951
"RTN","SDPMUT2",1,0)
SDPMUT2 ;BPFO/JRC - Performance Monitors Utilities ; 11/3/03 3:24pm
"RTN","SDPMUT2",2,0)
 ;;5.3;SCHEDULING;**292,322,474**;AUGUST 13, 1993;Build 4
"RTN","SDPMUT2",3,0)
 ;
"RTN","SDPMUT2",4,0)
SCREEN(PTRENC,SCRNARR) ;Screen Outpatient Encounter
"RTN","SDPMUT2",5,0)
 ;Input  : PTRENC - Outpatient Encounter IEN
"RTN","SDPMUT2",6,0)
 ;         SCRNARR - Screening array full global reference
"RTN","SDPMUT2",7,0)
 ;Output : 1 = Screen encounter out
"RTN","SDPMUT2",8,0)
 ;         0 = Keep encounter and process
"RTN","SDPMUT2",9,0)
 ;
"RTN","SDPMUT2",10,0)
 ;Declare variables
"RTN","SDPMUT2",11,0)
 N PCODE,SCODE,CLINIC,NODE,Y,I,CHLD,PROV,TYPE
"RTN","SDPMUT2",12,0)
 S NODE=$G(^SCE(PTRENC,0))
"RTN","SDPMUT2",13,0)
 ;Can not be test patient
"RTN","SDPMUT2",14,0)
 I $$TESTPAT^VADPT($P(NODE,U,2)) Q 1
"RTN","SDPMUT2",15,0)
 ;Encounter must be checked out
"RTN","SDPMUT2",16,0)
 I '$P(NODE,U,7) Q 1
"RTN","SDPMUT2",17,0)
 ;Can't be child encounter
"RTN","SDPMUT2",18,0)
 I +$P(NODE,U,6) Q 1
"RTN","SDPMUT2",19,0)
 ;Screen out non-count clinics
"RTN","SDPMUT2",20,0)
 S CLINIC=$P($G(NODE),U,4)
"RTN","SDPMUT2",21,0)
 I 'CLINIC Q 1
"RTN","SDPMUT2",22,0)
 I $P($G(^SC(CLINIC,0)),U,17)="Y" Q 1
"RTN","SDPMUT2",23,0)
 ;Appointment type must be regular or service connected
"RTN","SDPMUT2",24,0)
 ;service connected added - SD*5.3*474
"RTN","SDPMUT2",25,0)
 I $P($G(NODE),U,10) S TYPE=$P($G(^SD(409.1,$P($G(NODE),U,10),0)),U,1)
"RTN","SDPMUT2",26,0)
 I '$D(TYPE) Q 1
"RTN","SDPMUT2",27,0)
 I TYPE'["REGULAR" I TYPE'["SERVICE CONNECTED" Q 1
"RTN","SDPMUT2",28,0)
 ;Get primary & secondary stop codes
"RTN","SDPMUT2",29,0)
 S PCODE=+$P(NODE,U,3)
"RTN","SDPMUT2",30,0)
 S CHLD=+$O(^SCE("APAR",PTRENC,0))
"RTN","SDPMUT2",31,0)
 S SCODE=0
"RTN","SDPMUT2",32,0)
 I CHLD D
"RTN","SDPMUT2",33,0)
 .S SCODE=+$P($G(^SCE(CHLD,0)),U,3)
"RTN","SDPMUT2",34,0)
 ;Check stop codes (in inclusion list and/or not in exclusion list)
"RTN","SDPMUT2",35,0)
 S Y=$S($O(@SCRNARR@("DSS",0)):1,$O(@SCRNARR@("DSS-PAIR",0)):1,1:0)
"RTN","SDPMUT2",36,0)
 I 'PCODE Q 1
"RTN","SDPMUT2",37,0)
 I @SCRNARR@("DSS")=1 S Y=0
"RTN","SDPMUT2",38,0)
 I $D(@SCRNARR@("DSS",PCODE)) S Y=0
"RTN","SDPMUT2",39,0)
 I $D(@SCRNARR@("DSS-EXCLUDE",PCODE))!$D(@SCRNARR@("DSS-EXCLUDE",SCODE)) S Y=1
"RTN","SDPMUT2",40,0)
 I Y Q 1
"RTN","SDPMUT2",41,0)
 ;Check division (must be in list)
"RTN","SDPMUT2",42,0)
 S Y=1
"RTN","SDPMUT2",43,0)
 S DIV=$P(NODE,U,11)
"RTN","SDPMUT2",44,0)
 I 'DIV Q 1
"RTN","SDPMUT2",45,0)
 I @SCRNARR@("DIVISION")=1 S Y=0
"RTN","SDPMUT2",46,0)
 I $D(@SCRNARR@("DIVISION",DIV)) S Y=0
"RTN","SDPMUT2",47,0)
 I Y Q 1
"RTN","SDPMUT2",48,0)
 ;Get primary encounter provider
"RTN","SDPMUT2",49,0)
 S Y=1
"RTN","SDPMUT2",50,0)
 S PROV=$$ENCPROV(PTRENC)
"RTN","SDPMUT2",51,0)
 ;Check primary encounter provider (must be in list)
"RTN","SDPMUT2",52,0)
 I 'PROV Q 1
"RTN","SDPMUT2",53,0)
 I @SCRNARR@("PROVIDERS")=1 S Y=0
"RTN","SDPMUT2",54,0)
 I $D(@SCRNARR@("PROVIDERS",PROV)) S Y=0
"RTN","SDPMUT2",55,0)
 I Y Q 1
"RTN","SDPMUT2",56,0)
 ;Passed all screens
"RTN","SDPMUT2",57,0)
 Q 0
"RTN","SDPMUT2",58,0)
 ;
"RTN","SDPMUT2",59,0)
NOTEINF(PTRENC) ;Returns performance monitor information for a given encounter
"RTN","SDPMUT2",60,0)
 ;Input : PTRENC - Outpatient Encounter IEN
"RTN","SDPMUT2",61,0)
 ;Output: Results of calling $$PM^TIUPXPM
"RTN","SDPMUT2",62,0)
 ;        String with 6 fields ('^' delimiter)
"RTN","SDPMUT2",63,0)
 ;          1  VIEN
"RTN","SDPMUT2",64,0)
 ;          2  Note Category (A-E)
"RTN","SDPMUT2",65,0)
 ;          3  Signed By (pointer to File #200)
"RTN","SDPMUT2",66,0)
 ;          4  Signed Date.Time (FM format)
"RTN","SDPMUT2",67,0)
 ;          5  Co-signed By (pointer to File #200) - defined only if necessary
"RTN","SDPMUT2",68,0)
 ;          6  Co-signed Date.Time - defined only if necessary    
"RTN","SDPMUT2",69,0)
 ;
"RTN","SDPMUT2",70,0)
 N VIEN
"RTN","SDPMUT2",71,0)
 S VIEN=$P(^SCE(PTRENC,0),U,5)
"RTN","SDPMUT2",72,0)
 Q $$PM^TIUPXPM(VIEN)
"RTN","SDPMUT2",73,0)
 ;
"RTN","SDPMUT2",74,0)
ENCPROV(PTRENC) ;Return primary encounter provider
"RTN","SDPMUT2",75,0)
 ;Input  : ENCPTR - Pointer to Outpatient Encounter
"RTN","SDPMUT2",76,0)
 ;Output : Pointer to New Person File
"RTN","SDPMUT2",77,0)
 ;Note   : 0 returned if primary encounter provider not found
"RTN","SDPMUT2",78,0)
 N NODE,PROV,X
"RTN","SDPMUT2",79,0)
 D GETPRV^SDOE(PTRENC,"NODE")
"RTN","SDPMUT2",80,0)
 S PROV=0
"RTN","SDPMUT2",81,0)
 S X=0 F  S X=+$O(NODE(X)) Q:'X  D  Q:PROV
"RTN","SDPMUT2",82,0)
 .I $P(NODE(X),"^",4)="P" S PROV=+NODE(X)
"RTN","SDPMUT2",83,0)
 Q PROV
"VER")
8.0^22.0
"BLD",6982,6)
^407
**END**
**END**
