Released IB*2*368 SEQ #350
Extracted from mail message
**KIDS**:IB*2.0*368^

**INSTALL NAME**
IB*2.0*368
"BLD",6436,0)
IB*2.0*368^INTEGRATED BILLING^0^3071114^y
"BLD",6436,1,0)
^^1^1^3070301^
"BLD",6436,1,1,0)
Patch to enable the processing of new Emdeon reports.
"BLD",6436,4,0)
^9.64PA^361.2^1
"BLD",6436,4,361.2,0)
361.2
"BLD",6436,4,361.2,222)
y^y^f^^n^^y^o^n
"BLD",6436,4,"B",361.2,361.2)

"BLD",6436,6.3)
21
"BLD",6436,"INI")

"BLD",6436,"INID")
y^y^n
"BLD",6436,"INIT")
IBY368PO
"BLD",6436,"KRN",0)
^9.67PA^8989.52^19
"BLD",6436,"KRN",.4,0)
.4
"BLD",6436,"KRN",.401,0)
.401
"BLD",6436,"KRN",.402,0)
.402
"BLD",6436,"KRN",.403,0)
.403
"BLD",6436,"KRN",.5,0)
.5
"BLD",6436,"KRN",.84,0)
.84
"BLD",6436,"KRN",3.6,0)
3.6
"BLD",6436,"KRN",3.8,0)
3.8
"BLD",6436,"KRN",9.2,0)
9.2
"BLD",6436,"KRN",9.8,0)
9.8
"BLD",6436,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",6436,"KRN",9.8,"NM",1,0)
IBCE277^^0^B47601821
"BLD",6436,"KRN",9.8,"NM",2,0)
IBCE277A^^1^
"BLD",6436,"KRN",9.8,"NM",3,0)
IBCEM4^^0^B39520819
"BLD",6436,"KRN",9.8,"NM",4,0)
IBCEST^^0^B78410269
"BLD",6436,"KRN",9.8,"NM",5,0)
IBCECSA1^^0^B43330691
"BLD",6436,"KRN",9.8,"NM","B","IBCE277",1)

"BLD",6436,"KRN",9.8,"NM","B","IBCE277A",2)

"BLD",6436,"KRN",9.8,"NM","B","IBCECSA1",5)

"BLD",6436,"KRN",9.8,"NM","B","IBCEM4",3)

"BLD",6436,"KRN",9.8,"NM","B","IBCEST",4)

"BLD",6436,"KRN",19,0)
19
"BLD",6436,"KRN",19.1,0)
19.1
"BLD",6436,"KRN",101,0)
101
"BLD",6436,"KRN",409.61,0)
409.61
"BLD",6436,"KRN",409.61,"NM",0)
^9.68A^1^1
"BLD",6436,"KRN",409.61,"NM",1,0)
IBCE ELEC REPORT DISP^^0
"BLD",6436,"KRN",409.61,"NM","B","IBCE ELEC REPORT DISP",1)

"BLD",6436,"KRN",771,0)
771
"BLD",6436,"KRN",870,0)
870
"BLD",6436,"KRN",8989.51,0)
8989.51
"BLD",6436,"KRN",8989.52,0)
8989.52
"BLD",6436,"KRN",8994,0)
8994
"BLD",6436,"KRN","B",.4,.4)

"BLD",6436,"KRN","B",.401,.401)

"BLD",6436,"KRN","B",.402,.402)

"BLD",6436,"KRN","B",.403,.403)

"BLD",6436,"KRN","B",.5,.5)

"BLD",6436,"KRN","B",.84,.84)

"BLD",6436,"KRN","B",3.6,3.6)

"BLD",6436,"KRN","B",3.8,3.8)

"BLD",6436,"KRN","B",9.2,9.2)

"BLD",6436,"KRN","B",9.8,9.8)

"BLD",6436,"KRN","B",19,19)

"BLD",6436,"KRN","B",19.1,19.1)

"BLD",6436,"KRN","B",101,101)

"BLD",6436,"KRN","B",409.61,409.61)

"BLD",6436,"KRN","B",771,771)

"BLD",6436,"KRN","B",870,870)

"BLD",6436,"KRN","B",8989.51,8989.51)

"BLD",6436,"KRN","B",8989.52,8989.52)

"BLD",6436,"KRN","B",8994,8994)

"BLD",6436,"PRE")
IBY368PR
"BLD",6436,"QUES",0)
^9.62^^
"BLD",6436,"REQB",0)
^9.611^2^2
"BLD",6436,"REQB",1,0)
IB*2.0*155^2
"BLD",6436,"REQB",2,0)
IB*2.0*320^2
"BLD",6436,"REQB","B","IB*2.0*155",1)

"BLD",6436,"REQB","B","IB*2.0*320",2)

"DATA",361.2,20,0)
R020^0^DAILY MANAGEMENT SUMMARY
"DATA",361.2,22,0)
R022^1^PROV DAILY STATS ACCEPT/REJECT
"DATA",361.2,23,0)
R023^0^PROVIDER DAILY SUMMARY
"DATA",361.2,24,0)
R000^1^NETWORK NEWS
"DATA",361.2,26,0)
R026^0^DAILY ACCEPTANCE RPT BY PROV
"DATA",361.2,28,0)
R028^1^PROVIDER MONTHLY SUMMARY
"DATA",361.2,59,0)
R059^1^UNPROCESSED CLAIM REPORT
"DATA",361.2,60,0)
R060^1^REQUEST FOR ADDITIONAL INFO
"DATA",361.2,61,0)
R061^1^ZERO PAYMENT REPORT
"DATA",361.2,62,0)
R062^1^CLAIM SETTLEMENT REPORT
"DATA",361.2,63,0)
R0N9^1^INST. GOV'T WEBMD EDITS
"DATA",361.2,64,0)
R0SR^1^PROF. GOV'T WEBMD REJECTS
"DATA",361.2,65,0)
R0SS^1^PROF. GOV'T WEBMD EDITS
"DATA",361.2,66,0)
R0EX^1^INST. GOV'T PAYER EDITS
"DATA",361.2,67,0)
R0SA^^PROF. GOV'T WEBMD ACCEPTANCE
"DATA",361.2,68,0)
R0SC^1^PROF. GOV'T PAYER EDITS
"DATA",361.2,69,0)
R0S0^1^PRF GVT WEBMD/PAYER INFO/EDIT
"DATA",361.2,70,0)
R0S2^1^PRF GVT WEBMD/PAYER INFO/EDIT
"DATA",361.2,71,0)
RPT-02^1^FILE STATUS
"DATA",361.2,72,0)
RPT-03^1^FILE SUMMARY
"DATA",361.2,73,0)
RPT-04^1^FILE DETAIL SUMMARY
"DATA",361.2,74,0)
RPT-04A^1^AMENDED FILE DETAIL SUMMARY
"DATA",361.2,75,0)
RPT-05^1^BATCH/CLAIM REJECTION
"DATA",361.2,76,0)
RPT-05A^1^AMENDED BATCH/CLAIM REJECTION
"DATA",361.2,78,0)
RPT-08^1^PROVIDER MONTHLY SUMMARY
"DATA",361.2,80,0)
RPT-10^1^PROVIDER CLAIM STATUS
"DATA",361.2,81,0)
RPT-11^1^UNPROCESSED CLAIMS
"FIA",361.2)
IB ELECTRONIC REPORT DISPOSITION
"FIA",361.2,0)
^IBE(361.2,
"FIA",361.2,0,0)
361.2I
"FIA",361.2,0,1)
y^y^f^^n^^y^o^n
"FIA",361.2,0,10)

"FIA",361.2,0,11)

"FIA",361.2,0,"RLRO")

"FIA",361.2,0,"VR")
2.0^IB
"FIA",361.2,361.2)
0
"INIT")
IBY368PO
"KRN",409.61,556,-1)
0^1
"KRN",409.61,556,0)
IBCE ELEC REPORT DISP^1^^80^4^19^1^1^Report^IBCE ELEC REPT MENU^Electronic Report Disposition^1^^1
"KRN",409.61,556,1)
^VALM HIDDEN ACTIONS
"KRN",409.61,556,"ARRAY")
 ^TMP("IBREP DISP1",$J)
"KRN",409.61,556,"COL",0)
^409.621^5^4
"KRN",409.61,556,"COL",2,0)
REPORT^7^7^REPORT
"KRN",409.61,556,"COL",3,0)
DISP^49^30^DISPOSITION
"KRN",409.61,556,"COL",4,0)
DESC^17^30^DESCRIPTION
"KRN",409.61,556,"COL",5,0)
NUMBER^1^4^
"KRN",409.61,556,"COL","B","DESC",4)

"KRN",409.61,556,"COL","B","DISP",3)

"KRN",409.61,556,"COL","B","NUMBER",5)

"KRN",409.61,556,"COL","B","REPORT",2)

"KRN",409.61,556,"FNL")
D EXIT^IBCERPT1
"KRN",409.61,556,"HDR")
D HDR^IBCERPT1
"KRN",409.61,556,"HLP")
D HELP^IBCERPT1
"KRN",409.61,556,"INIT")
D INIT^IBCERPT1
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",17,409.61)
409.61;17;1;;;;;;;LMDEL^XPDIA1
"ORD",17,409.61,0)
LIST TEMPLATE
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
368^3071114
"PKG",200,22,1,"PAH",1,1,0)
^^1^1^3071114
"PKG",200,22,1,"PAH",1,1,1,0)
Patch to enable the processing of new Emdeon reports.
"PRE")
IBY368PR
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
7
"RTN","IBCE277")
0^1^B47601821^B56792508
"RTN","IBCE277",1,0)
IBCE277 ;ALB/TMP - 277 EDI CLAIM STATUS MESSAGE PROCESSING ;15-JUL-98
"RTN","IBCE277",2,0)
 ;;2.0;INTEGRATED BILLING;**137,155,368**;21-MAR-94;Build 21
"RTN","IBCE277",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCE277",4,0)
 Q
"RTN","IBCE277",5,0)
 ; MESSAGE HEADER DATA STRING =
"RTN","IBCE277",6,0)
 ;   type of message^msg queue^msg #^bill #^REF NUM/Batch #^date/time
"RTN","IBCE277",7,0)
 ;
"RTN","IBCE277",8,0)
HDR(ENTITY,ENTVAL,IBTYPE,IBD) ;Process header data
"RTN","IBCE277",9,0)
 ; INPUT:
"RTN","IBCE277",10,0)
 ;   ENTITY = "BATCH" or "CLAIM" for batch/claim level messages respectively
"RTN","IBCE277",11,0)
 ;   ENTVAL = claim #
"RTN","IBCE277",12,0)
 ;   IBTYPE = the type of status msg this piece of the message represents
"RTN","IBCE277",13,0)
 ;             (837REC1, 837REJ1)
"RTN","IBCE277",14,0)
 ;   ^TMP("IBMSGH",$J,0) = header message text
"RTN","IBCE277",15,0)
 ;
"RTN","IBCE277",16,0)
 ; OUTPUT:
"RTN","IBCE277",17,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",18,0)
 ;      "DATE" = Date/Time of status (Fileman format)
"RTN","IBCE277",19,0)
 ;      "MRA" =  1 if MRA, 0 if not         "X12" = 1 if X12, 0 if not
"RTN","IBCE277",20,0)
 ;      "BATCH" = Batch ien for batch level calls
"RTN","IBCE277",21,0)
 ;      "SOURCE" = Source of message code^source name, if known
"RTN","IBCE277",22,0)
 ;
"RTN","IBCE277",23,0)
 ;   ^TMP("IBMSG",$J,"BATCH",batch #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE277",24,0)
 ;                                      if batch level message
"RTN","IBCE277",25,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE277",26,0)
 ;                                  ,line #)=batch status message lines
"RTN","IBCE277",27,0)
 ;
"RTN","IBCE277",28,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,0)=MESSAGE HEADER DATA STRING
"RTN","IBCE277",29,0)
 ;                                      if claim level message
"RTN","IBCE277",30,0)
 ;                                  ,"D",0,1)=header record raw data
"RTN","IBCE277",31,0)
 ;                                  ,line #)=claim status message lines
"RTN","IBCE277",32,0)
 ;
"RTN","IBCE277",33,0)
 N DATA,IBD0,L,PC,X,Y
"RTN","IBCE277",34,0)
 S IBD0=$G(^TMP("IBMSGH",$J,0)) Q:IBD0=""
"RTN","IBCE277",35,0)
 S Y=0,L=1
"RTN","IBCE277",36,0)
 ; Convert claim date/time
"RTN","IBCE277",37,0)
 S X=$$DATE($P(IBD0,U,3))_"@"_$E($P(IBD0,U,4)_"0000",1,4) I X S %DT="XTS" D ^%DT
"RTN","IBCE277",38,0)
 ; populate IBD array
"RTN","IBCE277",39,0)
 S IBD("DATE")=$S(Y>0:Y,1:""),IBD("MRA")=$P(IBD0,U,5),IBD("X12")=($P(IBD0,U,2)="X")
"RTN","IBCE277",40,0)
 S IBD("SOURCE")=$P(IBD0,U,12,13),IBD("BATCH")=$P(IBD0,U,14)
"RTN","IBCE277",41,0)
 I +$TR($P(IBD0,U,6,9),U) F PC=6:1:9 D
"RTN","IBCE277",42,0)
 .I $P(IBD0,U,PC)'="" S DATA=$P("# Claims Submitted^# Claims Rejected^Total Charges Submitted^Total Charges Rejected",U,PC-5)_": "_$S(PC<8:+$P(IBD0,U,PC),1:$FNUMBER($P(IBD0,U,PC)/100,"",2))_"  "
"RTN","IBCE277",43,0)
 .I $L($G(^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)))+$L(DATA)>70 S L=L+1 ; if data doesn't fit into current line, go to the next line
"RTN","IBCE277",44,0)
 .S ^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)=$G(^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L))_DATA ; file this piece of data
"RTN","IBCE277",45,0)
 .Q
"RTN","IBCE277",46,0)
 ; file batch ref. number
"RTN","IBCE277",47,0)
 S:IBD("BATCH")'="" L=L+1,^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)="Batch Reference Number: "_IBD("BATCH")
"RTN","IBCE277",48,0)
 I $TR($P(IBD0,U,10,13),U)'="" D
"RTN","IBCE277",49,0)
 .S L=L+1
"RTN","IBCE277",50,0)
 .; generate and file Payer Name / Payer Id line
"RTN","IBCE277",51,0)
 .S DATA="Payer Name: "_$S($P(IBD0,U,10)'="":$P(IBD0,U,10),1:"N/A")_"  Payer ID: "_$S($P(IBD0,U,11)'="":$P(IBD0,U,11),1:"N/A")
"RTN","IBCE277",52,0)
 .S ^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)=DATA
"RTN","IBCE277",53,0)
 .I $P(IBD0,U,12)'=""!($P(IBD0,U,13)'="") D
"RTN","IBCE277",54,0)
 ..; generate and file Message Source line
"RTN","IBCE277",55,0)
 ..S DATA="Source: "_$S($P(IBD0,U,12)="Y":"Sent by payer",$P(IBD0,U,13)'="":"Sent by non-payer ("_$P(IBD0,U,13)_")",1:"UNKNOWN")
"RTN","IBCE277",56,0)
 ..S L=L+1,^TMP("IBMSG-H",$J,ENTITY,ENTVAL,L)=DATA
"RTN","IBCE277",57,0)
 ..Q
"RTN","IBCE277",58,0)
 .Q
"RTN","IBCE277",59,0)
 S ^TMP("IBMSG",$J,ENTITY,ENTVAL,0)=IBTYPE_U_$G(IBD("MSG#"))_U_$G(IBD("SUBJ"))_U_$$GETBILL(ENTVAL)_U_U_IBD("DATE")_U_IBD("SOURCE")
"RTN","IBCE277",60,0)
 ; file raw data
"RTN","IBCE277",61,0)
 S ^TMP("IBMSG",$J,ENTITY,ENTVAL,"D",0,1)="##RAW DATA: "_IBD0
"RTN","IBCE277",62,0)
 Q
"RTN","IBCE277",63,0)
 ;
"RTN","IBCE277",64,0)
9(IBD) ; Process Message Header record
"RTN","IBCE277",65,0)
 ; INPUT:
"RTN","IBCE277",66,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",67,0)
 ; OUTPUT:
"RTN","IBCE277",68,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",69,0)
 ;      "CLAIM" = claim #
"RTN","IBCE277",70,0)
 ;      "LINE" = last line # populated in the message
"RTN","IBCE277",71,0)
 ;
"RTN","IBCE277",72,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)= message data lines
"RTN","IBCE277",73,0)
 ;                                  ,"D",9,msg seq #)= raw data
"RTN","IBCE277",74,0)
 N ENTITY,ERR,FLD,IBCLM,IBIFN,L
"RTN","IBCE277",75,0)
 D STRTREC Q:IBCLM=""  ; if no claim/batch number, bail out
"RTN","IBCE277",76,0)
 ; make sure that we have data to file
"RTN","IBCE277",77,0)
 S ERR=$P(IBD,U,4) Q:ERR=""
"RTN","IBCE277",78,0)
 ; file error along with corresponding field number (if available)
"RTN","IBCE277",79,0)
 S L=L+1,FLD=$P(IBD,U,5),^TMP("IBMSG",$J,ENTITY,IBCLM,L)="Error"_$S(FLD'="":" in field "_FLD,1:"")_":"
"RTN","IBCE277",80,0)
 S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)=ERR
"RTN","IBCE277",81,0)
 D ENDREC(9)
"RTN","IBCE277",82,0)
 Q
"RTN","IBCE277",83,0)
 ;
"RTN","IBCE277",84,0)
10(IBD) ; Process message data
"RTN","IBCE277",85,0)
 ; INPUT:
"RTN","IBCE277",86,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",87,0)
 ; OUTPUT:
"RTN","IBCE277",88,0)
 ;   IBD array returned with processed data
"RTN","IBCE277",89,0)
 ;      "CLAIM" = claim #
"RTN","IBCE277",90,0)
 ;      "LINE" = last line # populated in the message
"RTN","IBCE277",91,0)
 ;
"RTN","IBCE277",92,0)
 ;   ^TMP("IBMSG",$J,"CLAIM",claim #,line#)= message data lines
"RTN","IBCE277",93,0)
 ;                                  ,"D",10,msg seq #)= raw data
"RTN","IBCE277",94,0)
 ;   ^TMP("IBCONF",$J,claim #")="" for invalid claims within the batch
"RTN","IBCE277",95,0)
 ;
"RTN","IBCE277",96,0)
 N CODE,DATA,ENTITY,IBCLM,IBIFN,IBTYPE,L,Z
"RTN","IBCE277",97,0)
 D STRTREC Q:IBCLM=""  ; if no claim number, bail out
"RTN","IBCE277",98,0)
 S:$P(IBD,U,3)="R" ^TMP("IBCONF",$J,IBIFN)=""
"RTN","IBCE277",99,0)
 S IBTYPE=$S($P(IBD,U,3)="R":"837REJ1",1:"837REC1")
"RTN","IBCE277",100,0)
 ;Process header data if not already done
"RTN","IBCE277",101,0)
 I '$D(^TMP("IBMSG",$J,ENTITY,IBCLM,0)) D HDR(ENTITY,IBCLM,IBTYPE,.IBD)
"RTN","IBCE277",102,0)
 I IBTYPE="837REJ1",$P($G(^TMP("IBMSG",$J,ENTITY,IBCLM,0)),U,1)'="837REJ1" D HDR(ENTITY,IBCLM,IBTYPE,.IBD)
"RTN","IBCE277",103,0)
 S CODE=$P(IBD,U,4) I CODE'="",$TR($P(IBD,U,5,6),U)'="" D
"RTN","IBCE277",104,0)
 .S Z=CODE_$P(IBD,U,5) I Z'=$G(IBD("SCODE")) D
"RTN","IBCE277",105,0)
 ..; determine type of status code and file it
"RTN","IBCE277",106,0)
 ..S L=L+1,DATA=$S(CODE="W":"Warning",CODE="E":"Error",1:"Informational")_" "
"RTN","IBCE277",107,0)
 ..I $P(IBD,U,5)'="" S ^TMP("IBMSG",$J,ENTITY,IBCLM,L)=DATA_"Code: "_$P(IBD,U,5)
"RTN","IBCE277",108,0)
 ..I $P(IBD,U,6)'="" S:$P(IBD,U,5)'="" L=L+1 S ^TMP("IBMSG",$J,ENTITY,IBCLM,L)=DATA_"Message:",L=L+1
"RTN","IBCE277",109,0)
 ..S IBD("SCODE")=Z
"RTN","IBCE277",110,0)
 ..Q
"RTN","IBCE277",111,0)
 .; file status message
"RTN","IBCE277",112,0)
 .I $P(IBD,U,6)'="" S ^TMP("IBMSG",$J,ENTITY,IBCLM,L)=$P(IBD,U,6),L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)=" "
"RTN","IBCE277",113,0)
 .Q
"RTN","IBCE277",114,0)
 D ENDREC(10)
"RTN","IBCE277",115,0)
 Q
"RTN","IBCE277",116,0)
 ;
"RTN","IBCE277",117,0)
13(IBD) ; Process claim data
"RTN","IBCE277",118,0)
 ; Claim must have been referenced by a previous '10' level
"RTN","IBCE277",119,0)
 ; INPUT:
"RTN","IBCE277",120,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",121,0)
 ;
"RTN","IBCE277",122,0)
 ; OUTPUT:
"RTN","IBCE277",123,0)
 ;      IBD("LINE") = The last line # populated in the message
"RTN","IBCE277",124,0)
 ;
"RTN","IBCE277",125,0)
 ;     ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=claim data lines
"RTN","IBCE277",126,0)
 ;                                    ,"D",13,msg seq #)=raw data
"RTN","IBCE277",127,0)
 ;
"RTN","IBCE277",128,0)
 N CTYPE,ENTITY,IBCLM,IBIFN,L,Z1,Z2
"RTN","IBCE277",129,0)
 D STRTREC
"RTN","IBCE277",130,0)
 ; quit if no claim number or no previous 'line 10' record
"RTN","IBCE277",131,0)
 Q:$S(IBCLM="":1,1:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)))
"RTN","IBCE277",132,0)
 ; file clearinghouse trace number
"RTN","IBCE277",133,0)
 I $P(IBD,U,3)'="" S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="Clearinghouse Trace Number: "_$P(IBD,U,3)
"RTN","IBCE277",134,0)
 ; file payer status date
"RTN","IBCE277",135,0)
 I $P(IBD,U,4)'="" S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="         Payer Status Date: "_$$DATE($P(IBD,U,4))
"RTN","IBCE277",136,0)
 ; file payer claim number
"RTN","IBCE277",137,0)
 I $P(IBD,U,5)'="" S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="        Payer Claim Number: "_$P(IBD,U,5)
"RTN","IBCE277",138,0)
 ; file split claim indicator
"RTN","IBCE277",139,0)
 I +$P(IBD,U,6)'=0 S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="               Split Claim: "_$S(+$P(IBD,U,6)=1:"No",1:"Yes ("_+$P(IBD,U,6)_" parts)")
"RTN","IBCE277",140,0)
 ; file claim type if it either doesn't match value in VistA or if it's a dental claim
"RTN","IBCE277",141,0)
 S Z1=$P(IBD,U,7),Z2=$$FT^IBCEF(IBIFN),CTYPE=$S(Z1="P"&(Z2'=2):"Professional",Z1="I"&(Z2'=3):"Institutional",Z1="D":"Dental",1:"")
"RTN","IBCE277",142,0)
 S:CTYPE'="" L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="                Claim Type: "_CTYPE
"RTN","IBCE277",143,0)
 D ENDREC(13)
"RTN","IBCE277",144,0)
 Q
"RTN","IBCE277",145,0)
 ;
"RTN","IBCE277",146,0)
15(IBD) ; Process subscriber/patient data
"RTN","IBCE277",147,0)
 ; Claim must have been referenced by a previous '10' level
"RTN","IBCE277",148,0)
 ; INPUT:
"RTN","IBCE277",149,0)
 ;   IBD must be passed by reference = entire message line
"RTN","IBCE277",150,0)
 ;
"RTN","IBCE277",151,0)
 ; OUTPUT:
"RTN","IBCE277",152,0)
 ;      IBD("LINE") = The last line # populated in the message
"RTN","IBCE277",153,0)
 ;
"RTN","IBCE277",154,0)
 ;     ^TMP("IBMSG",$J,"CLAIM",claim #,line#)=formatted service dates
"RTN","IBCE277",155,0)
 ;                                    ,"D",15,msg seq #)=
"RTN","IBCE277",156,0)
 ;                                         subscr/patient raw data
"RTN","IBCE277",157,0)
 ;
"RTN","IBCE277",158,0)
 N ENTITY,DATA,IBCLM,IBIFN,IBNM,IBNUM,IBDFN,L
"RTN","IBCE277",159,0)
 D STRTREC
"RTN","IBCE277",160,0)
 ; quit if no claim number or no previous 'line 10' record
"RTN","IBCE277",161,0)
 Q:$S(IBCLM="":1,1:'$D(^TMP("IBMSG",$J,"CLAIM",IBCLM)))
"RTN","IBCE277",162,0)
 S IBDFN=+$P(^DGCR(399,IBIFN,0),U,2)
"RTN","IBCE277",163,0)
 S IBNM=$S($P(IBD,U,3)'="":$P(IBD,U,3)_","_$P(IBD,U,4)_$S($P(IBD,U,5)'="":" "_$P(IBD,U,5),1:""),1:$P($G(^DPT(IBDFN,0)),U))
"RTN","IBCE277",164,0)
 S IBNUM=$S($P(IBD,U,6)'="":$P(IBD,U,6),1:$P($G(^DPT(IBDFN,0)),U,9))
"RTN","IBCE277",165,0)
 S L=L+1,^TMP("IBMSG",$J,ENTITY,IBCLM,L)="Patient: "_IBNM_"   "_IBNUM
"RTN","IBCE277",166,0)
 I $P(IBD,U,11) D
"RTN","IBCE277",167,0)
 .S DATA=$$DATE($P(IBD,U,11)),L=L+1
"RTN","IBCE277",168,0)
 .S ^TMP("IBMSG",$J,ENTITY,IBCLM,L)="Service Dates: "_DATA_" - "_$S($P(IBD,U,12):$$DATE($P(IBD,U,12)),1:DATA)
"RTN","IBCE277",169,0)
 .Q
"RTN","IBCE277",170,0)
 D ENDREC(15)
"RTN","IBCE277",171,0)
 Q
"RTN","IBCE277",172,0)
 ;
"RTN","IBCE277",173,0)
STRTREC ; start processing of the record
"RTN","IBCE277",174,0)
 ;           
"RTN","IBCE277",175,0)
 ; OUTPUT:
"RTN","IBCE277",176,0)
 ;   sets the following variables
"RTN","IBCE277",177,0)
 ;   IBCLM = claim #
"RTN","IBCE277",178,0)
 ;   ENTITY = "CLAIM" (all 277STAT messages are on claim level)
"RTN","IBCE277",179,0)
 ;   L = last populated line number
"RTN","IBCE277",180,0)
 ;
"RTN","IBCE277",181,0)
 S IBCLM=$$GETCLM($P(IBD,U,2)),ENTITY="CLAIM",L=+$G(IBD("LINE"))
"RTN","IBCE277",182,0)
 S IBIFN=+$O(^DGCR(399,"B",IBCLM,0))
"RTN","IBCE277",183,0)
 Q
"RTN","IBCE277",184,0)
 ;
"RTN","IBCE277",185,0)
ENDREC(TYPE) ; finish processing of the record
"RTN","IBCE277",186,0)
 ; INPUT:
"RTN","IBCE277",187,0)
 ;   TYPE = record type (line type)
"RTN","IBCE277",188,0)
 ;   
"RTN","IBCE277",189,0)
 ; OUTPUT:
"RTN","IBCE277",190,0)
 ;   IBD("LINE") = is updated with last populated line number
"RTN","IBCE277",191,0)
 ;
"RTN","IBCE277",192,0)
 ;make sure all variables are set properly
"RTN","IBCE277",193,0)
 Q:$G(ENTITY)=""
"RTN","IBCE277",194,0)
 Q:$G(IBCLM)=""
"RTN","IBCE277",195,0)
 Q:$G(TYPE)=""
"RTN","IBCE277",196,0)
 ; file raw data
"RTN","IBCE277",197,0)
 S ^TMP("IBMSG",$J,ENTITY,IBCLM,"D",TYPE,$O(^TMP("IBMSG",$J,ENTITY,IBCLM,"D",TYPE,""),-1)+1)="##RAW DATA: "_IBD
"RTN","IBCE277",198,0)
 ; update line count
"RTN","IBCE277",199,0)
 S IBD("LINE")=$G(IBD("LINE"))+L
"RTN","IBCE277",200,0)
 Q
"RTN","IBCE277",201,0)
 ;
"RTN","IBCE277",202,0)
GETBILL(CLAIM) ; Extract transmission #
"RTN","IBCE277",203,0)
 N TRANS
"RTN","IBCE277",204,0)
 S TRANS=$$LAST364^IBCEF4(IBIFN)
"RTN","IBCE277",205,0)
 ; if status of the last transmission is "X" or "P", keep searching backwards through file 364 until record
"RTN","IBCE277",206,0)
 ; with different status is found
"RTN","IBCE277",207,0)
 I TRANS F  Q:"XP"'[$P(^IBA(364,TRANS,0),U,3)  S TRANS=$O(^IBA(364,"B",IBIFN,TRANS),-1) Q:TRANS=""  ;
"RTN","IBCE277",208,0)
 Q +TRANS
"RTN","IBCE277",209,0)
 ;
"RTN","IBCE277",210,0)
DATE(DT) ; Convert YYMMDD Date into MM/DD/YY or YYYYMMDD into MM/DD/YYYY
"RTN","IBCE277",211,0)
 N D,Y
"RTN","IBCE277",212,0)
 S D=DT,Y=""
"RTN","IBCE277",213,0)
 I $L(DT)=8 S D=$E(DT,3,8),Y=$E(DT,1,2)
"RTN","IBCE277",214,0)
 Q ($E(D,3,4)_"/"_$E(D,5,6)_"/"_Y_$E(D,1,2))
"RTN","IBCE277",215,0)
 ;
"RTN","IBCE277",216,0)
GETCLM(X) ; Extract the claim # without site id from the data in X
"RTN","IBCE277",217,0)
 N IBCLM
"RTN","IBCE277",218,0)
 S IBCLM=$P(X,"-",2) I IBCLM="",X'="" S IBCLM=$E(X,$S($L(X)>7:4,1:1),$L(X))
"RTN","IBCE277",219,0)
 Q IBCLM
"RTN","IBCE277",220,0)
 ;
"RTN","IBCE277A")
1^2^^B3614362
"RTN","IBCECSA1")
0^5^B43330691^B39221878
"RTN","IBCECSA1",1,0)
IBCECSA1 ;ALB/CXW - IB STATUS AWAITING RESOLUTION SCREEN ;28-JUL-99
"RTN","IBCECSA1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,283,288,320,368**;21-MAR-94;Build 21
"RTN","IBCECSA1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCECSA1",4,0)
 ; DBIA for $$BN1^PRCAFN()
"RTN","IBCECSA1",5,0)
 ;
"RTN","IBCECSA1",6,0)
BLD ; Build list entrypoint
"RTN","IBCECSA1",7,0)
 N IBDA,IBREV,IBIFN,IBPAY,IBSSN,IBSER,IB399,IBLOC,IBDIV,IBUER,IBMSG,IBERR,IBPEN,SEVERITY,A,IBOAM,IBPAT,IBSTSMSG,SV1,SV2,SV3
"RTN","IBCECSA1",8,0)
 K ^TMP("IBCECSA",$J),^TMP("IBCECSB",$J),^TMP("IBCECSD",$J)
"RTN","IBCECSA1",9,0)
 W !!,"Compiling CSA status messages ... "
"RTN","IBCECSA1",10,0)
 S IBSEV=$G(IBSEV,"R")
"RTN","IBCECSA1",11,0)
 S VALMCNT=0,IB364=""
"RTN","IBCECSA1",12,0)
 S SEVERITY=""
"RTN","IBCECSA1",13,0)
 F  S SEVERITY=$O(^IBM(361,"ACSA",SEVERITY)) Q:SEVERITY=""  I SEVERITY="R"!(IBSEV="B") S IBREV="" F  S IBREV=$O(^IBM(361,"ACSA",SEVERITY,IBREV)) Q:IBREV=""  I IBREV<2 S IBDA=0 F  S IBDA=$O(^IBM(361,"ACSA",SEVERITY,IBREV,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",14,0)
 . S IB=$G(^IBM(361,IBDA,0)),IBIFN=+IB
"RTN","IBCECSA1",15,0)
 . S IBPEN=$$FMDIFF^XLFDT(DT,$P(IB,U,2),1)
"RTN","IBCECSA1",16,0)
 . ;quit if not pending for at least the minimum # of days requested
"RTN","IBCECSA1",17,0)
 . Q:IBDAYS>IBPEN
"RTN","IBCECSA1",18,0)
 . S IB399=$G(^DGCR(399,IBIFN,0))
"RTN","IBCECSA1",19,0)
 . ;
"RTN","IBCECSA1",20,0)
 . ; no cancelled claims allowed on the CSA screen
"RTN","IBCECSA1",21,0)
 . ; if we find one, then update the appropriate EDI files
"RTN","IBCECSA1",22,0)
 . I $P(IB399,U,13)=7 D UPDEDI^IBCEM(+$P(IB,U,11),"C") Q
"RTN","IBCECSA1",23,0)
 . ;
"RTN","IBCECSA1",24,0)
 . ; automatically review this message if the claim was last printed on
"RTN","IBCECSA1",25,0)
 . ; or after the MCS - 'Resubmit by Print' date
"RTN","IBCECSA1",26,0)
 . I $P(IB,U,16),($P($G(^DGCR(399,IBIFN,"S")),U,14)\1)'<$P(IB,U,16) D UPDEDI^IBCEM(+$P(IB,U,11),"P") Q
"RTN","IBCECSA1",27,0)
 . ;
"RTN","IBCECSA1",28,0)
 . S IBDIV=+$P(IB399,U,22)
"RTN","IBCECSA1",29,0)
 . S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,11)
"RTN","IBCECSA1",30,0)
 . ;
"RTN","IBCECSA1",31,0)
 . ; If Request MRA bill, pull the MRA Requestor user instead
"RTN","IBCECSA1",32,0)
 . I 'IBUER,$P(IB399,U,13)=2 S IBUER=+$P($G(^DGCR(399,IBIFN,"S")),U,8)
"RTN","IBCECSA1",33,0)
 . I $D(^TMP("IBBIL",$J)),'$D(^TMP("IBBIL",$J,IBUER)) Q  ; User not selected
"RTN","IBCECSA1",34,0)
 . I $D(^TMP("IBDIV",$J)),'$D(^TMP("IBDIV",$J,IBDIV)) Q  ; Div not selected
"RTN","IBCECSA1",35,0)
 . ;
"RTN","IBCECSA1",36,0)
 . S IBPAY=$P($G(^DIC(36,+$P($G(^DGCR(399,IBIFN,"MP")),U),0)),U)
"RTN","IBCECSA1",37,0)
 . I IBPAY="" S IBPAY=$P($G(^DIC(36,+$$CURR^IBCEF2(IBIFN),0)),U)
"RTN","IBCECSA1",38,0)
 . I IBPAY="" S IBPAY="UNKNOWN PAYER"
"RTN","IBCECSA1",39,0)
 . S IBPAT=$G(^DPT(+$P(IB399,U,2),0))
"RTN","IBCECSA1",40,0)
 . S IBSSN=$E($P(IBPAT,U,9),6,9) I IBSSN="" S IBSSN="~unk"
"RTN","IBCECSA1",41,0)
 . S IBPAT=$P(IBPAT,U,1) I IBPAT="" S IBPAT="~UNKNOWN PATIENT NAME"
"RTN","IBCECSA1",42,0)
 . S IBSER=$P($G(^DGCR(399,IBIFN,"U")),U)
"RTN","IBCECSA1",43,0)
 . S IBLOC=$P(IB399,U,4)
"RTN","IBCECSA1",44,0)
 . S IBLOC=$S(IBLOC=1:"HOSPITAL",IBLOC=2:"SKILLED NURSING",1:"CLINIC")
"RTN","IBCECSA1",45,0)
 . I IBDIV S IBDIV=$P($G(^DG(40.8,IBDIV,0)),U)
"RTN","IBCECSA1",46,0)
 . I IBDIV=""!(IBDIV=0) S IBDIV="UNSPECIFIED"
"RTN","IBCECSA1",47,0)
 . S IBMSG=$S($P(IB,U,8):"PAYER",1:"NON-PAYER")
"RTN","IBCECSA1",48,0)
 . S IBUER=$S(IBUER:$P($G(^VA(200,IBUER,0)),U),1:"UNKNOWN")_"~"_IBUER
"RTN","IBCECSA1",49,0)
 . S IB364=$P(IB,U,11)
"RTN","IBCECSA1",50,0)
 . S IBOAM=$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCECSA1",51,0)
 . S IBOAM=$P(IBOAM,U,1)-$P(IBOAM,U,2)     ; current balance (total charges - offset)
"RTN","IBCECSA1",52,0)
 . ;
"RTN","IBCECSA1",53,0)
 . S IBSTSMSG=$$TXT(IBDA)       ; status message text
"RTN","IBCECSA1",54,0)
 . S IBERR=$E(IBSTSMSG,1,60)
"RTN","IBCECSA1",55,0)
 . I IBERR="" S IBERR="-"
"RTN","IBCECSA1",56,0)
 . ;
"RTN","IBCECSA1",57,0)
 . S IB=$$BN1^PRCAFN(IBIFN)     ; external bill#
"RTN","IBCECSA1",58,0)
 . S A=IBIFN_U_IBPAY_U_IBPAT_U_IBSSN_U_IBSER_U_IBOAM_U_IBLOC_U_IBDIV_U_IBUER_U_IBMSG_U_IBPEN_U_$S(IBREV:"*",1:"")_U_IB364_U_IB
"RTN","IBCECSA1",59,0)
 . ;
"RTN","IBCECSA1",60,0)
 . S SV1=$$SRTV($G(IBSORT1),IBDA)
"RTN","IBCECSA1",61,0)
 . S SV2=$$SRTV($G(IBSORT2),IBDA)
"RTN","IBCECSA1",62,0)
 . S SV3=$$SRTV($G(IBSORT3),IBDA)
"RTN","IBCECSA1",63,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA)=A
"RTN","IBCECSA1",64,0)
 . S ^TMP("IBCECSB",$J,SV1,SV2,SV3,IBDA,"MSG")=IBSTSMSG
"RTN","IBCECSA1",65,0)
 . Q
"RTN","IBCECSA1",66,0)
 ;
"RTN","IBCECSA1",67,0)
 I '$D(^TMP("IBCECSB",$J)) D NMAT Q
"RTN","IBCECSA1",68,0)
 D SCRN
"RTN","IBCECSA1",69,0)
 Q
"RTN","IBCECSA1",70,0)
 ;
"RTN","IBCECSA1",71,0)
NMAT ;No CSA list
"RTN","IBCECSA1",72,0)
 S VALMCNT=2,IBCNT=2
"RTN","IBCECSA1",73,0)
 S ^TMP("IBCECSA",$J,1,0)=" "
"RTN","IBCECSA1",74,0)
 S ^TMP("IBCECSA",$J,2,0)="No Messages Matching Selection Criteria Found"
"RTN","IBCECSA1",75,0)
 Q
"RTN","IBCECSA1",76,0)
 ;
"RTN","IBCECSA1",77,0)
SRTV(SORT,IBDA) ; sort value calculation given the sort code letter
"RTN","IBCECSA1",78,0)
 I SORT="" Q IBDA
"RTN","IBCECSA1",79,0)
 Q $$SV^IBCECSA(SORT)
"RTN","IBCECSA1",80,0)
 ;
"RTN","IBCECSA1",81,0)
SCRN ;
"RTN","IBCECSA1",82,0)
 NEW IBSRT1,IBSRT2,IBSRT3,IBX,IBCNT,IBIFN,IBDA,IB,INFX,DAT,X
"RTN","IBCECSA1",83,0)
 W !,"Building the CSA list display ... "
"RTN","IBCECSA1",84,0)
 S IBCNT=0,IBSRT1=""
"RTN","IBCECSA1",85,0)
 F  S IBSRT1=$O(^TMP("IBCECSB",$J,IBSRT1)) Q:IBSRT1=""  D
"RTN","IBCECSA1",86,0)
 . D SRTBRK(1,$G(IBSORT1),IBSRT1)
"RTN","IBCECSA1",87,0)
 . S IBSRT2=""
"RTN","IBCECSA1",88,0)
 . F  S IBSRT2=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2)) Q:IBSRT2=""  D
"RTN","IBCECSA1",89,0)
 .. D SRTBRK(2,$G(IBSORT2),IBSRT2)
"RTN","IBCECSA1",90,0)
 .. S IBSRT3=""
"RTN","IBCECSA1",91,0)
 .. F  S IBSRT3=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3)) Q:IBSRT3=""  D
"RTN","IBCECSA1",92,0)
 ... D SRTBRK(3,$G(IBSORT3),IBSRT3)
"RTN","IBCECSA1",93,0)
 ... S IBDA=0
"RTN","IBCECSA1",94,0)
 ... F  S IBDA=$O(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA)) Q:'IBDA  D
"RTN","IBCECSA1",95,0)
 .... S IB=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA))
"RTN","IBCECSA1",96,0)
 .... S IBSTSMSG=$G(^TMP("IBCECSB",$J,IBSRT1,IBSRT2,IBSRT3,IBDA,"MSG"))
"RTN","IBCECSA1",97,0)
 .... S IBIFN=+IB
"RTN","IBCECSA1",98,0)
 .... S IB364=$P(IB,U,13)
"RTN","IBCECSA1",99,0)
 .... S DAT=IBIFN_U_IBDA_U_IBSRT1_U_IBSRT2_U_IB364_U_IBSRT3
"RTN","IBCECSA1",100,0)
 .... ;
"RTN","IBCECSA1",101,0)
 .... S IBCNT=IBCNT+1
"RTN","IBCECSA1",102,0)
 .... S X=$$SETFLD^VALM1($J(IBCNT,3),"","NUMBER")
"RTN","IBCECSA1",103,0)
 .... D SETL1(IB,.X)
"RTN","IBCECSA1",104,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",105,0)
 .... ;
"RTN","IBCECSA1",106,0)
 .... S X=$$SETSTR^VALM1(IBSTSMSG,"",6,75)
"RTN","IBCECSA1",107,0)
 .... D SET(X,IBCNT,DAT)
"RTN","IBCECSA1",108,0)
 .... Q
"RTN","IBCECSA1",109,0)
 ... Q
"RTN","IBCECSA1",110,0)
 .. Q
"RTN","IBCECSA1",111,0)
 . Q
"RTN","IBCECSA1",112,0)
 Q
"RTN","IBCECSA1",113,0)
 ;
"RTN","IBCECSA1",114,0)
SRTBRK(LVL,SORT,IBSRT) ; sort break for display of certain sort data
"RTN","IBCECSA1",115,0)
 ; LVL   - sort level
"RTN","IBCECSA1",116,0)
 ; SORT  - sort letter code
"RTN","IBCECSA1",117,0)
 ; IBSRT - subscript data
"RTN","IBCECSA1",118,0)
 ;
"RTN","IBCECSA1",119,0)
 NEW IBS,DSPDATA
"RTN","IBCECSA1",120,0)
 I '$F(".A.D.N.","."_$G(SORT)_".") G SRTBRKX
"RTN","IBCECSA1",121,0)
 S IBS=$$SD^IBCECSA(SORT)
"RTN","IBCECSA1",122,0)
 S DSPDATA=IBSRT
"RTN","IBCECSA1",123,0)
 I SORT="A" S DSPDATA=$P(DSPDATA,"~",1)      ; biller name
"RTN","IBCECSA1",124,0)
 I SORT="N" S DSPDATA=-DSPDATA               ; number of days pending
"RTN","IBCECSA1",125,0)
 D SET($J("",LVL-1)_IBS_": "_DSPDATA,IBCNT,"")
"RTN","IBCECSA1",126,0)
SRTBRKX ;
"RTN","IBCECSA1",127,0)
 Q
"RTN","IBCECSA1",128,0)
 ;
"RTN","IBCECSA1",129,0)
SET(X,CNT,DAT) ;set up list manager screen array
"RTN","IBCECSA1",130,0)
 S VALMCNT=VALMCNT+1
"RTN","IBCECSA1",131,0)
 I 'CNT S CNT=1
"RTN","IBCECSA1",132,0)
 S ^TMP("IBCECSA",$J,VALMCNT,0)=X
"RTN","IBCECSA1",133,0)
 S ^TMP("IBCECSA",$J,"IDX",VALMCNT,CNT)=""
"RTN","IBCECSA1",134,0)
 I DAT'="" S ^TMP("IBCECSA",$J,CNT)=VALMCNT_U_DAT
"RTN","IBCECSA1",135,0)
 Q
"RTN","IBCECSA1",136,0)
 ;
"RTN","IBCECSA1",137,0)
SETL1(IB,X) ;
"RTN","IBCECSA1",138,0)
 S X=$$SETFLD^VALM1($P($G(^DGCR(399,+IB,0)),U,1)_$P(IB,U,12),X,"BILL")
"RTN","IBCECSA1",139,0)
 S X=$$SETFLD^VALM1($P(IB,U,2),X,"PNAME")
"RTN","IBCECSA1",140,0)
 S X=$$SETFLD^VALM1($P(IB,U,3),X,"PANAME")
"RTN","IBCECSA1",141,0)
 S X=$$SETFLD^VALM1($P(IB,U,4),X,"SSN")
"RTN","IBCECSA1",142,0)
 S X=$$SETFLD^VALM1($$FMTE^XLFDT($P(IB,U,5),"2Z"),X,"SERVICE")
"RTN","IBCECSA1",143,0)
 S X=$$SETFLD^VALM1($J("$"_$FN($P(IB,U,6),"",2),10),X,"CURBAL")
"RTN","IBCECSA1",144,0)
 Q
"RTN","IBCECSA1",145,0)
 ;
"RTN","IBCECSA1",146,0)
TXT(IBDA,LEN) ; Return a string of status message text
"RTN","IBCECSA1",147,0)
 ; IBDA - ien to file 361
"RTN","IBCECSA1",148,0)
 ;  LEN - desired maximum length of combined text string
"RTN","IBCECSA1",149,0)
 NEW MSG,LN,STOP,TX,HLN,REFN,DELIM
"RTN","IBCECSA1",150,0)
 S MSG="",LN=0,LEN=$G(LEN,75),STOP=0
"RTN","IBCECSA1",151,0)
 F  S LN=$O(^IBM(361,+$G(IBDA),1,LN)) Q:'LN  D  Q:STOP
"RTN","IBCECSA1",152,0)
 . S TX=$G(^IBM(361,IBDA,1,LN,0))
"RTN","IBCECSA1",153,0)
 . S TX=$$TRIM^XLFSTR(TX)
"RTN","IBCECSA1",154,0)
 . ; Don't include parts added by ^IBCE277
"RTN","IBCECSA1",155,0)
 . Q:TX="Informational Message:"
"RTN","IBCECSA1",156,0)
 . Q:TX="Warning Message:"
"RTN","IBCECSA1",157,0)
 . Q:TX="Error Message:"
"RTN","IBCECSA1",158,0)
 . I $E(TX,1,27)="Clearinghouse Trace Number:" S STOP=1 Q
"RTN","IBCECSA1",159,0)
 . I $E(TX,1,18)="Payer Status Date:" S STOP=1 Q
"RTN","IBCECSA1",160,0)
 . I $E(TX,1,19)="Payer Claim Number:" S STOP=1 Q
"RTN","IBCECSA1",161,0)
 . I $E(TX,1,12)="Split Claim:" S STOP=1 Q
"RTN","IBCECSA1",162,0)
 . I $E(TX,1,11)="Claim Type:" S STOP=1 Q
"RTN","IBCECSA1",163,0)
 . I $E(TX,1,8)="Patient:" S STOP=1 Q
"RTN","IBCECSA1",164,0)
 . I $E(TX,1,14)="Service Dates:" S STOP=1 Q
"RTN","IBCECSA1",165,0)
 . I $E(TX,1,11)="Payer Name:" S STOP=1 Q
"RTN","IBCECSA1",166,0)
 . I $E(TX,1,7)="Source:" S STOP=1 Q
"RTN","IBCECSA1",167,0)
 . I TX["HL=" S HLN=+$P(TX,"HL=",2),DELIM="HL="_HLN,TX=$P(TX,DELIM,1)_"HL= "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",168,0)
 . I TX["ENVOY REF: " S REFN=$E($P(TX,"ENVOY REF: ",2),1,14),DELIM="ENVOY REF: "_REFN,TX=$P(TX,DELIM,1)_"ENVOY REF: "_$P(TX,DELIM,2,9)
"RTN","IBCECSA1",169,0)
 . I ($L(MSG)+$L(TX))>500 S STOP=1 Q
"RTN","IBCECSA1",170,0)
 . S MSG=MSG_$S(MSG="":"",1:" ")_TX
"RTN","IBCECSA1",171,0)
 . I $L(MSG)>LEN S STOP=1
"RTN","IBCECSA1",172,0)
 . Q
"RTN","IBCECSA1",173,0)
 Q $E(MSG,1,LEN)
"RTN","IBCECSA1",174,0)
 ;
"RTN","IBCEM4")
0^3^B39520819^B38941686
"RTN","IBCEM4",1,0)
IBCEM4 ;ALB/TMP - IB ELECTRONIC MESSAGE SCREEN TEXT MAINT ;19-APR-2001
"RTN","IBCEM4",2,0)
 ;;2.0;INTEGRATED BILLING;**137,368**;21-MAR-1994;Build 21
"RTN","IBCEM4",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEM4",4,0)
 ;
"RTN","IBCEM4",5,0)
EN ; entry point for maintenance
"RTN","IBCEM4",6,0)
 D EN^VALM("IBCE MESSAGE TEXT MAIN")
"RTN","IBCEM4",7,0)
 Q
"RTN","IBCEM4",8,0)
 ;
"RTN","IBCEM4",9,0)
HDR ; Header code
"RTN","IBCEM4",10,0)
 K VALMHDR
"RTN","IBCEM4",11,0)
 Q
"RTN","IBCEM4",12,0)
 ;
"RTN","IBCEM4",13,0)
INIT ; Build list of text entries
"RTN","IBCEM4",14,0)
 N Z,Z0
"RTN","IBCEM4",15,0)
 S (IBCNT,VALMCNT)=0,VALMBG=1
"RTN","IBCEM4",16,0)
 K ^TMP("IBCEMSGT",$J)
"RTN","IBCEM4",17,0)
 S Z="" F  S Z=$O(^IBE(361.3,"AC",Z),-1) Q:Z=""  D SET(Z) S Z0="" F  S Z0=$O(^IBE(361.3,"AC",Z,Z0)) Q:Z0=""  D SET(Z,Z0)
"RTN","IBCEM4",18,0)
 Q
"RTN","IBCEM4",19,0)
 ;
"RTN","IBCEM4",20,0)
EXIT ; -- Clean up list
"RTN","IBCEM4",21,0)
 K ^TMP("IBCEMSGT",$J)
"RTN","IBCEM4",22,0)
 D CLEAN^VALM10
"RTN","IBCEM4",23,0)
 Q
"RTN","IBCEM4",24,0)
 ;
"RTN","IBCEM4",25,0)
SET(Z,Z0) ; Set data into display global
"RTN","IBCEM4",26,0)
 N X,IB
"RTN","IBCEM4",27,0)
 S IBCNT=IBCNT+1,X="",IB=""
"RTN","IBCEM4",28,0)
 S:$G(Z0)'="" Z0="    "_Z0
"RTN","IBCEM4",29,0)
 I $G(Z0)="" D
"RTN","IBCEM4",30,0)
 . S Z0=$S('Z:"*** DO NOT REQUIRE REVIEW ***",1:"*** REQUIRE REVIEW ***"),IB=$J("",(80-$L(Z0))\2),Z0=IB_Z0
"RTN","IBCEM4",31,0)
 . I 'Z D SET(Z," ")
"RTN","IBCEM4",32,0)
 I Z0'="" S X=$$SETFLD^VALM1(Z0,X,"TEXT")
"RTN","IBCEM4",33,0)
 S VALMCNT=VALMCNT+1,^TMP("IBCEMSGT",$J,VALMCNT,0)=X
"RTN","IBCEM4",34,0)
 S ^TMP("IBCEMSGT",$J,"IDX",VALMCNT,IBCNT)=""
"RTN","IBCEM4",35,0)
 I IB'="" D CNTRL^VALM10(VALMCNT,2+$L(IB),$L(Z0)-$L(IB),IORVON,IORVOFF)
"RTN","IBCEM4",36,0)
 Q
"RTN","IBCEM4",37,0)
EDIT ; Add/edit message text
"RTN","IBCEM4",38,0)
 N DA,DIC,DLAYGO,DIE,DR,DIR,X,Y,IBUPD,IBSTOP,IBY
"RTN","IBCEM4",39,0)
 D FULL^VALM1
"RTN","IBCEM4",40,0)
 S (IBSTOP,IBUPD)=0
"RTN","IBCEM4",41,0)
 F  D  Q:IBSTOP
"RTN","IBCEM4",42,0)
 . S DIC(0)="AELMQ",DLAYGO=361.3,DIC="^IBE(361.3,",DIC("DR")="@1;.02;I X="""" W !,""MUST HAVE A VALUE FOR THIS FIELD"" S Y=""@1""" W ! D ^DIC
"RTN","IBCEM4",43,0)
 . S IBY=Y
"RTN","IBCEM4",44,0)
 . I IBY'>0 S IBSTOP=1 Q
"RTN","IBCEM4",45,0)
 . I $P(IBY,U,3) S IBUPD=1 Q
"RTN","IBCEM4",46,0)
 . S DIC="^IBE(361.3,",DA=+IBY W ! D EN^DIQ W !
"RTN","IBCEM4",47,0)
 . S DIE="^IBE(361.3,",DA=+IBY,DR=".01" D ^DIE ; edit
"RTN","IBCEM4",48,0)
 . I '$D(^IBE(361.3,+IBY,0)) S IBUPD=1 Q
"RTN","IBCEM4",49,0)
 . I $P(IBY,U,2)'=$P(^IBE(361.3,+IBY,0),U) S IBUPD=1,DIE="^IBE(361.3,",DR=".05////"_$G(DUZ)_";.06///^S X=""NOW""" D ^DIE
"RTN","IBCEM4",50,0)
 D:IBUPD INIT
"RTN","IBCEM4",51,0)
 S VALMBCK="R"
"RTN","IBCEM4",52,0)
 Q
"RTN","IBCEM4",53,0)
 ;
"RTN","IBCEM4",54,0)
CKREVU(IBTEXT,IBNR,IBSKIP,IBREV) ; Check IBTEXT contains 'no review
"RTN","IBCEM4",55,0)
 ;        needed' text
"RTN","IBCEM4",56,0)
 ; IBNR = returned if passed by reference - 'no review needed' text found
"RTN","IBCEM4",57,0)
 ; IBSKIP = 1 if no check needed for 'always review'
"RTN","IBCEM4",58,0)
 ; IBREV = returned if passed by reference and 'review always needed'
"RTN","IBCEM4",59,0)
 ;         text found
"RTN","IBCEM4",60,0)
 ;
"RTN","IBCEM4",61,0)
 N T,Y,Z,Z0
"RTN","IBCEM4",62,0)
 S (IBREV,Y)=0,Z="",IBTEXT=$$UP^XLFSTR($G(IBTEXT))
"RTN","IBCEM4",63,0)
 I '$G(IBSKIP) F  S Z=$O(^IBE(361.3,"AC",1,Z)) Q:Z=""  I IBTEXT[$$UP^XLFSTR(Z) S IBREV=1 Q  ; Always review messages with this text
"RTN","IBCEM4",64,0)
 I 'IBREV S Z="" F  S Z=$O(^IBE(361.3,"AC",0,Z)) Q:Z=""  I IBTEXT[$$UP^XLFSTR(Z) S Y=1,IBNR=Z Q  ; Message contains text to make review unnecessary
"RTN","IBCEM4",65,0)
 Q Y
"RTN","IBCEM4",66,0)
 ;
"RTN","IBCEM4",67,0)
REPORT ; Produce a report of messages filed without review by user-selected
"RTN","IBCEM4",68,0)
 ; date range for date received and sort by either bill# or message text
"RTN","IBCEM4",69,0)
 N IBFR,IBTO,IBSORT,DIR,DA,DR,X,Y,ZTSAVE,ZTRTN,ZTDESC,ZTREQ
"RTN","IBCEM4",70,0)
R1 S DIR("A")="FROM DATE RECEIVED: ",DIR(0)="DA^:"_DT_"::PAXE" D ^DIR K DIR
"RTN","IBCEM4",71,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEM4",72,0)
 S IBFR=Y W "   ",$G(Y(0))
"RTN","IBCEM4",73,0)
R2 S DIR("A")="TO DATE RECEIVED: ",DIR(0)="DAO^"_IBFR_":"_DT_"::PAE" D ^DIR K DIR
"RTN","IBCEM4",74,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEM4",75,0)
 I Y'>0 W ! G R1
"RTN","IBCEM4",76,0)
 S IBTO=Y W "   ",$G(Y(0))
"RTN","IBCEM4",77,0)
 S DIR("A")="SORT BY",DIR(0)="SXBO^B:Bill #;M:Message Screen Text",DIR("B")="B" D ^DIR K DIR
"RTN","IBCEM4",78,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","IBCEM4",79,0)
 I (Y="")!("BM"'[Y) W ! G R2
"RTN","IBCEM4",80,0)
 S IBSORT=Y
"RTN","IBCEM4",81,0)
 S %ZIS="QM" D ^%ZIS Q:POP
"RTN","IBCEM4",82,0)
 I $D(IO("Q")) K IO("Q") S ZTRTN="ENRPT^IBCEM4",ZTSAVE("IB*")="",ZTDESC="IB - MESSAGES FILED WITHOUT REVIEW REPORT" D ^%ZTLOAD K ZTSK D HOME^%ZIS Q
"RTN","IBCEM4",83,0)
 U IO
"RTN","IBCEM4",84,0)
ENRPT ; Queued job entrypoint
"RTN","IBCEM4",85,0)
 N IB,IB0,IBDA,IB00,IB1,IBS1,IBPAGE,IBLINES,IBHDRDT,IBSB,IBSTOP,DIR,Y,X,Z
"RTN","IBCEM4",86,0)
 W:$E(IOST,1,2)["C-" @IOF ;Only initial form feed for print to screen
"RTN","IBCEM4",87,0)
 K ^TMP($J,"IBSORT")
"RTN","IBCEM4",88,0)
 S IB=IBFR-.000001
"RTN","IBCEM4",89,0)
 F  S IB=$O(^IBM(361,"ARD",IB)) Q:'IB!$G(ZTSTOP)  S IBDA=0 F  S IBDA=$O(^IBM(361,"ARD",IB,IBDA)) Q:'IBDA!$G(ZTSTOP)  S IB0=$G(^IBM(361,IBDA,0)) Q:IB0=""!'$P(IB0,U,14)  D
"RTN","IBCEM4",90,0)
 . I $D(ZTQUEUED) Q:$$STOP(.ZTREQ,.ZTSTOP)
"RTN","IBCEM4",91,0)
 . S IBS1=""
"RTN","IBCEM4",92,0)
 . I IBSORT="M" D  ; Find text that caused auto-file
"RTN","IBCEM4",93,0)
 .. S Z=0 F  S Z=$O(^IBM(361,IBDA,1,Z)) Q:'Z  I $$CKREVU($G(^IBM(361,IBDA,1,Z,0)),.IBS1,1) Q
"RTN","IBCEM4",94,0)
 .. I IBS1="" S IBS1="??"
"RTN","IBCEM4",95,0)
 . I IBSORT="B" S IBS1=$P($G(^DGCR(399,+IB0,0)),U)
"RTN","IBCEM4",96,0)
 . I IBS1'="" S ^TMP($J,"IBSORT",IBS1,IBDA)=IB0
"RTN","IBCEM4",97,0)
 S IBHDRDT=$$FMTE^XLFDT($$NOW^XLFDT(),"2P")
"RTN","IBCEM4",98,0)
 S (IBSTOP,IBLINES,IBPAGE)=0
"RTN","IBCEM4",99,0)
 S IB1=1,IB="" F  S IB=$O(^TMP($J,"IBSORT",IB)) Q:IB=""!$G(ZTSTOP)  D  Q:IBSTOP
"RTN","IBCEM4",100,0)
 . S IBSB=$S(IBSORT="M":"MESSAGE SCREEN TEXT: "_IB,1:"")
"RTN","IBCEM4",101,0)
 . I IBSB'="" S IBSB=$J("",(80-$L(IBSB)\2))_IBSB
"RTN","IBCEM4",102,0)
 . D:IB1 RHDR(IBSB,.IBSTOP) Q:IBSTOP
"RTN","IBCEM4",103,0)
 . I 'IB1,IBSORT="M" D  Q:IBSTOP
"RTN","IBCEM4",104,0)
 .. I IBLINES>(IOSL-5) D RHDR(IBSB,.IBSTOP) Q
"RTN","IBCEM4",105,0)
 .. W !!,IBSB,! S IBLINES=IBLINES+3
"RTN","IBCEM4",106,0)
 . S (IB1,IBDA)=0 F  S IBDA=$O(^TMP($J,"IBSORT",IB,IBDA)) Q:'IBDA!$G(ZTSTOP)  D  Q:IBSTOP
"RTN","IBCEM4",107,0)
 .. I $D(ZTQUEUED),$$STOP(.ZTREQ,.ZTSTOP) W !,"*********** REPORT STOPPED BEFORE IT COMPLETED!!! ***********" Q
"RTN","IBCEM4",108,0)
 .. S IB0=$G(^TMP($J,"IBSORT",IB,IBDA)),IB00=$G(^DGCR(399,+IB0,0))
"RTN","IBCEM4",109,0)
 .. I $G(IBLINES)>(IOSL-5) D RHDR("",.IBSTOP) Q:IBSTOP
"RTN","IBCEM4",110,0)
 .. W !,$E($$BN1^PRCAFN(+IB0)_$J("",10),1,10),"  ",$E($P($G(^DPT(+$P(IB00,U,2),0)),U)_$J("",25),1,25)_"  "_$E($$FMTE^XLFDT($P(IB00,U,3),"2D")_$J("",8),1,8)_"  "_$E($$FMTE^XLFDT($P(IB0,U,2),"2D")_$J("",8),1,8)_"  "
"RTN","IBCEM4",111,0)
 .. W $E($P($G(^DIC(36,+$$POLICY^IBCEF(+IB0,1,$P(IB0,U,7)),0)),U),1,20)
"RTN","IBCEM4",112,0)
 .. S IBLINES=IBLINES+1
"RTN","IBCEM4",113,0)
 .. I $G(IBLINES)>(IOSL-5) D RHDR("",.IBSTOP) Q:IBSTOP
"RTN","IBCEM4",114,0)
 .. S Z=0 F  S Z=$O(^IBM(361,IBDA,1,Z)) Q:'Z  D  Q:IBSTOP
"RTN","IBCEM4",115,0)
 ... N Z0,Z1
"RTN","IBCEM4",116,0)
 ... S Z0=$G(^IBM(361,IBDA,1,Z,0))
"RTN","IBCEM4",117,0)
 ... F Z1=1:75:$L(Z0) D:$G(IBLINES)>(IOSL-5) RHDR("",.IBSTOP) Q:IBSTOP  W !,?5,$E(Z0,Z1,Z1+74) S IBLINES=IBLINES+1
"RTN","IBCEM4",118,0)
 G:IBSTOP!$G(ZTSTOP) ENSTOP
"RTN","IBCEM4",119,0)
 I $G(IB1) D RHDR("") W !,"NO RECORDS MATCHING SEARCH CRITERIA WERE FOUND",!
"RTN","IBCEM4",120,0)
 ;
"RTN","IBCEM4",121,0)
 I $E(IOST,1,2)["C-"  K DIR S DIR(0)="E" D ^DIR K DIR
"RTN","IBCEM4",122,0)
ENSTOP I '$D(ZTQUEUED) D ^%ZISC
"RTN","IBCEM4",123,0)
 I $D(ZTQUEUED),'$G(ZTSTOP) S ZTREQ="@"
"RTN","IBCEM4",124,0)
 K ^TMP($J,"IBSORT")
"RTN","IBCEM4",125,0)
 Q
"RTN","IBCEM4",126,0)
 ;
"RTN","IBCEM4",127,0)
RHDR(IBSB,IBSTOP) ; Report header
"RTN","IBCEM4",128,0)
 ; IBSB'="" if sub header should print
"RTN","IBCEM4",129,0)
 N Z,DIR,X,Y
"RTN","IBCEM4",130,0)
 S IBPAGE=IBPAGE+1
"RTN","IBCEM4",131,0)
 I IBPAGE>1,$E(IOST,1,2)["C-" S DIR(0)="E" D ^DIR K DIR I $D(DTOUT)!$D(DUOUT) S IBSTOP=1 G RHDRQ
"RTN","IBCEM4",132,0)
 W !,@IOF
"RTN","IBCEM4",133,0)
 W !,?22,"MESSAGES FILED WITHOUT REVIEW REPORT",?65,"PAGE: ",IBPAGE
"RTN","IBCEM4",134,0)
 S Z="RUN DATE: "_IBHDRDT W !,?(80-$L(Z)\2),Z
"RTN","IBCEM4",135,0)
 S Z="DATE RECEIVED RANGE: "_$$FMTE^XLFDT(IBFR,"2D")_"-"_$$FMTE^XLFDT(IBTO,"2D") W !,?(80-$L(Z)\2),Z,!
"RTN","IBCEM4",136,0)
 W !,$J("",40),"EVENT      DATE"
"RTN","IBCEM4",137,0)
 W !,"BILL #      PATIENT NAME"_$J("",15)_" DATE     RECEIVED  INSURANCE CO",!
"RTN","IBCEM4",138,0)
 S Z="",$P(Z,"-",81)="" W Z
"RTN","IBCEM4",139,0)
 S IBLINES=7
"RTN","IBCEM4",140,0)
 I $G(IBSB)'="" W !,IBSB,! S IBLINES=IBLINES+2
"RTN","IBCEM4",141,0)
RHDRQ Q
"RTN","IBCEM4",142,0)
 ;
"RTN","IBCEM4",143,0)
STOP(IBSTOP,IBREQ) ; Check for job being stopped
"RTN","IBCEM4",144,0)
 I $$S^%ZTLOAD S IBSTOP=1 K IBREQ
"RTN","IBCEM4",145,0)
 Q $G(IBSTOP)
"RTN","IBCEM4",146,0)
 ;
"RTN","IBCEST")
0^4^B78410269^B66454874
"RTN","IBCEST",1,0)
IBCEST ;ALB/TMP - 837 EDI STATUS MESSAGE PROCESSING ;17-APR-96
"RTN","IBCEST",2,0)
 ;;2.0;INTEGRATED BILLING;**137,189,197,135,283,320,368**;21-MAR-94;Build 21
"RTN","IBCEST",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEST",4,0)
 ; IA 4042 for call to AUDITX^PRCAUDT
"RTN","IBCEST",5,0)
 Q
"RTN","IBCEST",6,0)
 ;
"RTN","IBCEST",7,0)
UPD361(IBTDA) ; Update IB BILL STATUS MESSAGES file
"RTN","IBCEST",8,0)
 ; IBTDA = ien of return message in file 364.2
"RTN","IBCEST",9,0)
 ;
"RTN","IBCEST",10,0)
 N IB,IB0,IBSEQ,IB00,IBBILL,IBBTCH,IBMNUM
"RTN","IBCEST",11,0)
 ;
"RTN","IBCEST",12,0)
 I '$$LOCK^IBCEM(IBTDA) G UPDQ ;Lock message in file 364.2
"RTN","IBCEST",13,0)
 ;
"RTN","IBCEST",14,0)
 S IB0=$G(^IBA(364.2,IBTDA,0))
"RTN","IBCEST",15,0)
 S IBMNUM=$P(IB0,U) ; Message number
"RTN","IBCEST",16,0)
 S IB00=$G(^IBA(364,+$P(IB0,U,5),0)) ; Transmit bill entry
"RTN","IBCEST",17,0)
 S IBBILL=+IB00 ; Actual bill ien in file 399
"RTN","IBCEST",18,0)
 S IBBTCH=$P(IB0,U,4) ; Batch #
"RTN","IBCEST",19,0)
 ;
"RTN","IBCEST",20,0)
 ; Auto-audit bills based on status code on '10' record of status msg
"RTN","IBCEST",21,0)
 ; flat file
"RTN","IBCEST",22,0)
 I IBBILL,$P($T(PRCAUDT+1^PRCAUDT),"**",2)[",173" D
"RTN","IBCEST",23,0)
 . N Z,Z0,Z1,OK
"RTN","IBCEST",24,0)
 . Q:+$$STA^PRCAFN(IBBILL)'=104
"RTN","IBCEST",25,0)
 . S (Z,OK)=0
"RTN","IBCEST",26,0)
 . F  S Z=$O(^IBA(364.2,IBTDA,2,Z)) Q:'Z  S Z0=$P($G(^(Z,0)),"##RAW DATA: ",2) I +Z0=10 S Z0=$P(Z0,U,5) D  Q:OK
"RTN","IBCEST",27,0)
 .. ; Strip leading spaces
"RTN","IBCEST",28,0)
 .. F  S Z0=$P(Z0," ",2,99) Q:$E(Z0)'=" "
"RTN","IBCEST",29,0)
 .. Q:Z0=""
"RTN","IBCEST",30,0)
 .. I "A3^AC^A7^A8^AA^2P^10^11"[Z0,$P($G(^DGCR(399.3,+$P($G(^DGCR(399,IBBILL,0)),U,7),0)),U,11) D AUDITX^PRCAUDT(IBBILL) S OK=1 ; IA 4042
"RTN","IBCEST",31,0)
 ;
"RTN","IBCEST",32,0)
 I $S(IBMNUM="":1,1:'IBBILL&(IBBTCH="")) D DELMSG^IBCESRV2(IBTDA) G UPDQ
"RTN","IBCEST",33,0)
 ;
"RTN","IBCEST",34,0)
 ; Individual bill
"RTN","IBCEST",35,0)
 I IBBILL D  G UPDQ
"RTN","IBCEST",36,0)
 . N IBA1,IBMSG0,IBPID
"RTN","IBCEST",37,0)
 . S IBPID="",IBA1=0
"RTN","IBCEST",38,0)
 . F  S IBA1=$O(^IBA(364.2,IBTDA,2,IBA1)) Q:'IBA1  S IBMSG0=$P($G(^(IBA1,0)),"##RAW DATA: ",2) I +IBMSG0=277,$P(IBMSG0,U,5)="N" S IBPID=$P(IBMSG0,U,11) Q
"RTN","IBCEST",39,0)
 . S IBSEQ=$P(IB00,U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",40,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,1)
"RTN","IBCEST",41,0)
 ;
"RTN","IBCEST",42,0)
 ; Batch - update each bill separately
"RTN","IBCEST",43,0)
 S IBBILL=""
"RTN","IBCEST",44,0)
 F  S IBBILL=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL)) Q:'IBBILL  D
"RTN","IBCEST",45,0)
 . Q:$D(^TMP("IBCONF",$J,IBBILL))  ;Bill was rejected
"RTN","IBCEST",46,0)
 . S IB=$O(^IBA(364,"ABABI",+IBBTCH,IBBILL,0)) Q:'IB
"RTN","IBCEST",47,0)
 . S IBSEQ=$P($G(^IBA(364,IB,0)),U,8) S:IBSEQ="" IBSEQ="P"
"RTN","IBCEST",48,0)
 . D STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,"",0)
"RTN","IBCEST",49,0)
 ;
"RTN","IBCEST",50,0)
 Q
"RTN","IBCEST",51,0)
 ;
"RTN","IBCEST",52,0)
STORE(IB0,IBBTCH,IBMNUM,IBTDA,IBBILL,IBSEQ,IBPID,IB1) ;
"RTN","IBCEST",53,0)
 ;
"RTN","IBCEST",54,0)
 ; IB0 = 0-node of message in file 364.2
"RTN","IBCEST",55,0)
 ; IBBTCH = ien of batch in file 364.1
"RTN","IBCEST",56,0)
 ; IBMNUM = actual message number
"RTN","IBCEST",57,0)
 ; IBTDA = ien of message in file 364.2
"RTN","IBCEST",58,0)
 ; IBBILL = ien of bill in 399
"RTN","IBCEST",59,0)
 ; IBSEQ = P/S/T/ for COB sequence related to message
"RTN","IBCEST",60,0)
 ; IBPID = the payer id returned from clearinghouse for the claim
"RTN","IBCEST",61,0)
 ; IB1 = flag that says if the message was for a single bill or a batch.
"RTN","IBCEST",62,0)
 ;       Batch statuses have an additional standard text entry.
"RTN","IBCEST",63,0)
 ;       1 = single bill 0 = batch
"RTN","IBCEST",64,0)
 ; 
"RTN","IBCEST",65,0)
 N DA,DIK,DIE,DIC,X,Y,DR,DO,DD,DLAYGO,Z,Z0,Z1,Z2,Z3,IBT,IBDUP,IBFLDS,IBY,IBAUTO,IBLN
"RTN","IBCEST",66,0)
 ;
"RTN","IBCEST",67,0)
 S X=IBBILL,IBDUP=0
"RTN","IBCEST",68,0)
 ;
"RTN","IBCEST",69,0)
 I $D(^IBM(361,"AC",IBMNUM\1)) D  ; Message already there for bill
"RTN","IBCEST",70,0)
 . S Z=0 F  S Z=$O(^IBM(361,"AC",IBMNUM\1,Z)) Q:'Z  I +$G(^IBM(361,Z,0))=IBBILL S IBDUP=Z Q
"RTN","IBCEST",71,0)
 ;
"RTN","IBCEST",72,0)
 S IBFLDS=".02////"_$P(IB0,U,3)
"RTN","IBCEST",73,0)
 S IBFLDS=IBFLDS_";.03////"_$S($$EXTERNAL^DILFD(364.2,.02,"U",$P(IB0,U,2))["REJ":"R",1:"I")_";.05////"_IBBTCH_";.06////"_IBMNUM_";.04////"_+$P(IB0,U,8)_";.07////"_IBSEQ_$S($P(IB0,U,5):";.11////"_$P(IB0,U,5),1:"")
"RTN","IBCEST",74,0)
 S IBFLDS=IBFLDS_";.12////"_$P(IB0,U,10)_";.09////0"
"RTN","IBCEST",75,0)
 S IBFLDS=IBFLDS_";.15////"_$$CHKSUM^IBCEST1("^IBA(364.2,"_IBTDA_",2)")
"RTN","IBCEST",76,0)
 I IBPID'="" D
"RTN","IBCEST",77,0)
 . S IBPID("TYPE")=$S($$FT^IBCEF(IBBILL)=2:"P",1:"I")
"RTN","IBCEST",78,0)
 . D UPDINS(.IBPID,$$POLICY^IBCEF(IBBILL,1,$TR(IBSEQ,"PST","123")),IBBILL)
"RTN","IBCEST",79,0)
 ;
"RTN","IBCEST",80,0)
 I IBDUP D  I $D(Y) G UPDQ
"RTN","IBCEST",81,0)
 . ; Stuff fields into existing entry
"RTN","IBCEST",82,0)
 . ; (may be needed for reprocessing of aborted updates)
"RTN","IBCEST",83,0)
 . S DIE="^IBM(361,",DA=IBDUP,DR=IBFLDS_";1///@"
"RTN","IBCEST",84,0)
 . D ^DIE
"RTN","IBCEST",85,0)
 . I $D(Y) S IBY=-1 Q  ;Update not successful
"RTN","IBCEST",86,0)
 . S IBY=IBDUP
"RTN","IBCEST",87,0)
 ;
"RTN","IBCEST",88,0)
 K IBT
"RTN","IBCEST",89,0)
 I 'IBDUP D  ; Create new entry and stuff fields
"RTN","IBCEST",90,0)
 . S DIC(0)="L",DIC="^IBM(361,",DLAYGO=361
"RTN","IBCEST",91,0)
 . S DIC("DR")=IBFLDS
"RTN","IBCEST",92,0)
 . D FILE^DICN
"RTN","IBCEST",93,0)
 . K DO,DD,DLAYGO,DIC
"RTN","IBCEST",94,0)
 . S IBY=+Y
"RTN","IBCEST",95,0)
 . Q:IBY'>0
"RTN","IBCEST",96,0)
 . ;
"RTN","IBCEST",97,0)
 . ; IB*2*320 - Check for duplicate status message
"RTN","IBCEST",98,0)
 . NEW IBNEW,IBOLD,PCE,Z,DIK,DA
"RTN","IBCEST",99,0)
 . S IBNEW=""
"RTN","IBCEST",100,0)
 . F PCE=3,4,5,7,8,11,15 S IBNEW=IBNEW_$P($G(^IBM(361,IBY,0)),U,PCE)_U
"RTN","IBCEST",101,0)
 . S Z=0
"RTN","IBCEST",102,0)
 . F  S Z=$O(^IBM(361,"B",IBBILL,Z)) Q:'Z  I Z'=IBY D  Q:IBY'>0
"RTN","IBCEST",103,0)
 .. S IBOLD=""
"RTN","IBCEST",104,0)
 .. F PCE=3,4,5,7,8,11,15 S IBOLD=IBOLD_$P($G(^IBM(361,Z,0)),U,PCE)_U
"RTN","IBCEST",105,0)
 .. I IBNEW'=IBOLD Q   ; no duplicate so get the next one
"RTN","IBCEST",106,0)
 .. S DIK="^IBM(361,",DA=IBY,IBY=-1 D ^DIK D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",107,0)
 .. Q
"RTN","IBCEST",108,0)
 . Q
"RTN","IBCEST",109,0)
 ;
"RTN","IBCEST",110,0)
 I IBY>0 D  ;Move text over
"RTN","IBCEST",111,0)
 . K IBT
"RTN","IBCEST",112,0)
 . ;
"RTN","IBCEST",113,0)
 . D BLDMSG(IB1,IBTDA,.IBT,.IBAUTO)
"RTN","IBCEST",114,0)
 . ;
"RTN","IBCEST",115,0)
 . ; IB*2*368 - ymg - 2Q,RE,RP messages will be filed as informational
"RTN","IBCEST",116,0)
 . ; Z0 is the flag for 2Q code
"RTN","IBCEST",117,0)
 . ; Z1 is the flag for RE code
"RTN","IBCEST",118,0)
 . ; Z2 is the flag for RP code
"RTN","IBCEST",119,0)
 . ; Z3 is the flag for autofiling the message
"RTN","IBCEST",120,0)
 . I $P($G(^IBM(361,+IBY,0)),U,3)="R" D
"RTN","IBCEST",121,0)
 .. S Z="",(Z0,Z1,Z2,Z3)=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z3=1)  D
"RTN","IBCEST",122,0)
 ... S IBLN=$$UP^XLFSTR($G(IBT(Z)))
"RTN","IBCEST",123,0)
 ... I (Z0!Z1!Z2)=0 D
"RTN","IBCEST",124,0)
 .... S:IBLN?.E1"CODE:".P1"2Q".E Z0=1
"RTN","IBCEST",125,0)
 .... S:IBLN?.E1"CODE:".P1"RE".E Z1=1
"RTN","IBCEST",126,0)
 .... S:IBLN?.E1"CODE:".P1"RP".E Z2=1
"RTN","IBCEST",127,0)
 ... I Z0=1 S:IBLN?.P1"CLAIM".P1"REJECTED".P1"BY".P1"CLEARINGHOUSE".E Z3=1
"RTN","IBCEST",128,0)
 ... I Z1=1 S:IBLN?.P1"ELECTRONIC".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",129,0)
 ... I Z2=1 S:IBLN?.P1"PAPER".P1"CLAIM".P1"REJECTED".P1"BY".P1"EMDEON".E Z3=1
"RTN","IBCEST",130,0)
 .. I Z3=1 S IBAUTO=1,DIE=361,DA=+IBY,DR=".03////I" D ^DIE
"RTN","IBCEST",131,0)
 .. Q
"RTN","IBCEST",132,0)
 . ;
"RTN","IBCEST",133,0)
 . ; if info msg, ck for no review needed based on first line of text
"RTN","IBCEST",134,0)
 . I $G(IBAUTO),$P($G(^IBM(361,+IBY,0)),U,3)="I" D
"RTN","IBCEST",135,0)
 .. S DIE="^IBM(361,",DR=".09////2;.14////1;.1////F",DA=+IBY D ^DIE
"RTN","IBCEST",136,0)
 .. I IB1,$P($G(^IBM(361,+IBY,0)),U,11) S Z="",Z0=0 F  S Z=$O(IBT(Z)) Q:Z=""!(Z0=1)  D
"RTN","IBCEST",137,0)
 ... S Z0=$$PRINTUPD^IBCEU0($$UP^XLFSTR($G(IBT(Z))),$P($G(^IBM(361,+IBY,0)),U,11))
"RTN","IBCEST",138,0)
 . ;
"RTN","IBCEST",139,0)
 . D MSGLNSZ(.IBT) ; Convert Message Lines in IBT to be no longer than 70 chars
"RTN","IBCEST",140,0)
 . D WP^DIE(361,+IBY_",",1,"A","IBT")    ; file message text
"RTN","IBCEST",141,0)
 . ;
"RTN","IBCEST",142,0)
 . ; Delete message after it successfully updates the database.
"RTN","IBCEST",143,0)
 . D DELMSG^IBCESRV2(IBTDA)
"RTN","IBCEST",144,0)
 . Q
"RTN","IBCEST",145,0)
 ;
"RTN","IBCEST",146,0)
UPDQ L -^IBA(364.2,IBTDA,0)
"RTN","IBCEST",147,0)
 Q
"RTN","IBCEST",148,0)
 ;
"RTN","IBCEST",149,0)
BLDMSG(IB1,IBTDA,IBT,IBAUTO) ; Builds message text
"RTN","IBCEST",150,0)
 ; IB1 = flag for batch message
"RTN","IBCEST",151,0)
 ; IBTDA = ien of entry in file 364.2
"RTN","IBCEST",152,0)
 ; IBT = array returned with message text
"RTN","IBCEST",153,0)
 ; IBAUTO = if passed by reference, returns 1 if text indicates review
"RTN","IBCEST",154,0)
 ;          not needed
"RTN","IBCEST",155,0)
 N IBDATA,IBCK,IBZ,IBZ0,IBZ1,Z
"RTN","IBCEST",156,0)
 S (IBZ,IBZ0,IBDATA,IBAUTO,IBCK)=0
"RTN","IBCEST",157,0)
 I 'IB1 S IBT(1)="Status message received for batch "_$P($G(^IBA(364.1,IBBTCH,0)),U)_" dated "_$$FMTE^XLFDT($P($G(^IBA(364.2,IBTDA,0)),U,10),2),IBZ0=1
"RTN","IBCEST",158,0)
 ; Don't move the raw data over, just move the text of the message
"RTN","IBCEST",159,0)
 F  S IBZ=$O(^IBA(364.2,IBTDA,2,IBZ)) Q:'IBZ  S IBZ1=$G(^(IBZ,0)) S IBDATA=($E(IBZ1,1,2)="##") Q:IBDATA  S IBZ0=IBZ0+1,IBT(IBZ0)=IBZ1 I 'IBCK S Z=$$CKREVU^IBCEM4(IBZ1,,,.IBCK),IBAUTO=$S(IBCK:0,Z:1,1:IBAUTO)
"RTN","IBCEST",160,0)
 Q
"RTN","IBCEST",161,0)
 ;
"RTN","IBCEST",162,0)
UPDINS(IBPID,IBINS,IBIFN) ; Update the insurance id or the bill printed at
"RTN","IBCEST",163,0)
 ;    the EDI contractor's print shop and mailed to the ins co.
"RTN","IBCEST",164,0)
 ; IBPID = the id returned from the EDI contractor for the ins co
"RTN","IBCEST",165,0)
 ;      ("TYPE") = P if professional id or I if institutional id
"RTN","IBCEST",166,0)
 ; IBINS = the ien of the insurance co it was sent to (file 36)
"RTN","IBCEST",167,0)
 ; IBIFN = the ien of the claim (file 399)
"RTN","IBCEST",168,0)
 ;
"RTN","IBCEST",169,0)
 N IBID,IBIDFLD,IBPRT,IBLOOK,DA,DR,DIE,X,Y,Z
"RTN","IBCEST",170,0)
 ;
"RTN","IBCEST",171,0)
 Q:'$G(IBINS)!($G(IBPID)="")
"RTN","IBCEST",172,0)
 ;
"RTN","IBCEST",173,0)
 ; Strip spaces off the end of data
"RTN","IBCEST",174,0)
 S IBLOOK=""
"RTN","IBCEST",175,0)
 I $L(IBPID) F Z=$L(IBPID):-1:1 I $E(IBPID,Z)'=" " S IBLOOK=$E(IBPID,1,Z) Q
"RTN","IBCEST",176,0)
 ;
"RTN","IBCEST",177,0)
 S IBPRT=($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",178,0)
 I IBPRT D  ; Set printed via EDI field on bill
"RTN","IBCEST",179,0)
 . S DA=IBIFN,DIE="^DGCR(399,",DR="26////1" D ^DIE
"RTN","IBCEST",180,0)
 ;
"RTN","IBCEST",181,0)
 S IBLOOK=$E($S('IBPRT:$P(IBLOOK,"PAYID=",2),1:""),1,5)
"RTN","IBCEST",182,0)
 Q:IBLOOK=""!($E(IBLOOK,2,5)="PRNT")
"RTN","IBCEST",183,0)
 S IBIDFLD="3.0"_$S($G(IBPID("TYPE"))="I":4,1:2)
"RTN","IBCEST",184,0)
 S IBID=$P($G(^DIC(36,+IBINS,3)),U,IBIDFLD*100#100)
"RTN","IBCEST",185,0)
 Q:IBID=IBLOOK
"RTN","IBCEST",186,0)
 I IBID="" D  G UPDINSQ ; Update insurance co electronic id # if blank
"RTN","IBCEST",187,0)
 . S DIE="^DIC(36,",DR=IBIDFLD_"////"_IBLOOK,DA=IBINS D ^DIE
"RTN","IBCEST",188,0)
 I IBID'="",IBLOOK'="" D  ; Bulletin that the id on file and id returned
"RTN","IBCEST",189,0)
 . ; are different
"RTN","IBCEST",190,0)
 . N XMTO,XMDUZ,XMBODY,IBXM,XMSUBJ,XMZ
"RTN","IBCEST",191,0)
 . S XMTO("I:G.IB EDI")=""
"RTN","IBCEST",192,0)
 . S XMDUZ="",XMBODY="IBXM",XMSUBJ="PAYER ID RETURNED IS DIFFERENT THAN PAYER ID ON FILE"
"RTN","IBCEST",193,0)
 . S IBXM(1)="BILL #     : "_$P($G(^DGCR(399,IBIFN,0)),U)
"RTN","IBCEST",194,0)
 . S IBXM(2)="PAYER      : "_$P($G(^DIC(36,+IBINS,0)),U)
"RTN","IBCEST",195,0)
 . S IBXM(3)="BILL TYPE  : "_$S($G(IBPID("TYPE"))="I":"INSTITUT",1:"PROFESS")_"IONAL"
"RTN","IBCEST",196,0)
 . S IBXM(4)="ID ON FILE : "_IBID
"RTN","IBCEST",197,0)
 . S IBXM(5)="ID RETURNED: "_IBLOOK
"RTN","IBCEST",198,0)
 . S IBXM(6)=" ",IBXM(7)="   Please determine which id number is correct and correct the id in the",IBXM(8)="insurance file for this payer, if needed"
"RTN","IBCEST",199,0)
 . D SENDMSG^XMXAPI(XMDUZ,XMSUBJ,XMBODY,.XMTO,,.XMZ)
"RTN","IBCEST",200,0)
 ;
"RTN","IBCEST",201,0)
UPDINSQ Q
"RTN","IBCEST",202,0)
 ;
"RTN","IBCEST",203,0)
MSGLNSZ(MSG) ; Change Input Message Lines to be no more than 70 characters long each
"RTN","IBCEST",204,0)
 ;
"RTN","IBCEST",205,0)
 ; Input/Output:   MSG  - array of Input Message Lines; this is also the Output Message
"RTN","IBCEST",206,0)
 ; which is an array of Converted Message Lines (with lines no more than 70 chars each)
"RTN","IBCEST",207,0)
 ;
"RTN","IBCEST",208,0)
 N LN,XARY,XARYLN,CNT,OUTMSG,TMPMSG,LDNGSP,LDNGSPN
"RTN","IBCEST",209,0)
 S LN="",CNT=0 F  S LN=$O(MSG(LN)) Q:LN=""  D  ;
"RTN","IBCEST",210,0)
 . ; Find any leading spaces in original message line, 
"RTN","IBCEST",211,0)
 . ; to be used if line got split below
"RTN","IBCEST",212,0)
 . S TMPMSG=$$TRIM^XLFSTR(MSG(LN),"L"," ")  ;Trim Leading Spaces
"RTN","IBCEST",213,0)
 . S LDNGSP=$P(MSG(LN),TMPMSG,1)  ;get leading spaces if any
"RTN","IBCEST",214,0)
 . S LDNGSPN=$L(LDNGSP) S:LDNGSPN>30 LDNGSP=$E(LDNGSP,1,30) ;make sure there are no more than 30 leading spaces 
"RTN","IBCEST",215,0)
 . ; Converts a single line to multiple lines with a maximum width of 70 each
"RTN","IBCEST",216,0)
 . ; If line is 70 chars or less, this call returns the exact line
"RTN","IBCEST",217,0)
 . K XARY D FSTRNG^IBJU1(TMPMSG,70-LDNGSPN,.XARY)
"RTN","IBCEST",218,0)
 . ; Scan lines and merge them into the final output array (OUTMSG)
"RTN","IBCEST",219,0)
 . ; On lines 2 and higher, add Leading Spaces found above, if any.
"RTN","IBCEST",220,0)
 . S XARYLN="" F  S XARYLN=$O(XARY(XARYLN)) Q:XARYLN=""  S CNT=CNT+1,OUTMSG(CNT)=LDNGSP_XARY(XARYLN)
"RTN","IBCEST",221,0)
 ;
"RTN","IBCEST",222,0)
 ; Move the final Message Lines (OUTMSG) into MSG array to be returned
"RTN","IBCEST",223,0)
 K MSG M MSG=OUTMSG
"RTN","IBCEST",224,0)
 Q
"RTN","IBCEST",225,0)
 ;
"RTN","IBY368PO")
0^^B18038054^n/a
"RTN","IBY368PO",1,0)
IBY368PO ;YMG/BP - Post-Installation for IB patch 368 ;12-Mar-2007
"RTN","IBY368PO",2,0)
 ;;2.0;INTEGRATED BILLING;**368**;12-MAR-2007;Build 21
"RTN","IBY368PO",3,0)
 ;
"RTN","IBY368PO",4,0)
EN ;
"RTN","IBY368PO",5,0)
 N XPDIDTOT S XPDIDTOT=3
"RTN","IBY368PO",6,0)
 D NTFY ; 1. notify FSC that patch has been installed in production
"RTN","IBY368PO",7,0)
 D TEXT ; 2. add new text entries to file 361.3
"RTN","IBY368PO",8,0)
 D AUTOFILE ; 3. clean up stale informational messages in file 361
"RTN","IBY368PO",9,0)
 ;
"RTN","IBY368PO",10,0)
EX ;
"RTN","IBY368PO",11,0)
 Q
"RTN","IBY368PO",12,0)
 ;
"RTN","IBY368PO",13,0)
NTFY ; notify FSC that patch has been installed succesfully
"RTN","IBY368PO",14,0)
 N HEADER,BODY,MAILTO,SITE,TS
"RTN","IBY368PO",15,0)
 D BMES^XPDUTL(" STEP 1 of "_XPDIDTOT)
"RTN","IBY368PO",16,0)
 D MES^XPDUTL("-------------")
"RTN","IBY368PO",17,0)
 D MES^XPDUTL("Sending notification to FSC ...")
"RTN","IBY368PO",18,0)
 ; do not send notification if installed in test account
"RTN","IBY368PO",19,0)
 I '$$PROD^XUPROD D MES^XPDUTL("N/A for test account installation."),UPDATE^XPDID(1) Q
"RTN","IBY368PO",20,0)
 D DTNOLF^DICRW
"RTN","IBY368PO",21,0)
 S SITE=$$SITE^VASITE()
"RTN","IBY368PO",22,0)
 S HEADER="Patch IB*2.0*368 installed at VistA site "_$P(SITE,U,2)
"RTN","IBY368PO",23,0)
 D NOW^%DTC S TS=$$HLDATE^HLFNC(%,"TS")
"RTN","IBY368PO",24,0)
 S BODY(.1)="Patch installed successfully at "_$E(TS,5,6)_"/"_$E(TS,7,8)_"/"_$E(TS,1,4)_" "_$E(TS,9,10)_":"_$E(TS,11,12)_":"_$E(TS,13,19)
"RTN","IBY368PO",25,0)
 S BODY(.2)="Station Number: "_$P(SITE,U,3)
"RTN","IBY368PO",26,0)
 ; FSC destination address
"RTN","IBY368PO",27,0)
 ; FSC address for integration testing
"RTN","IBY368PO",28,0)
 S MAILTO="fsc.edi-team@va.gov"
"RTN","IBY368PO",29,0)
 D MAIL(HEADER,.BODY,MAILTO)
"RTN","IBY368PO",30,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY368PO",31,0)
 D UPDATE^XPDID(1)
"RTN","IBY368PO",32,0)
 Q
"RTN","IBY368PO",33,0)
TEXT ; Add new text entries in file 361.3 - IB MESSAGE SCREEN TEXT
"RTN","IBY368PO",34,0)
 N DATA,TXT,DO,DA,DIC,X,Y
"RTN","IBY368PO",35,0)
 D BMES^XPDUTL(" STEP 2 of "_XPDIDTOT)
"RTN","IBY368PO",36,0)
 D MES^XPDUTL("-------------")
"RTN","IBY368PO",37,0)
 D MES^XPDUTL("Adding new entries into file 361.3 ....")
"RTN","IBY368PO",38,0)
 S DATA("ACCEPT")=0
"RTN","IBY368PO",39,0)
 S DATA("ACK/RECEIPT")=0
"RTN","IBY368PO",40,0)
 S DATA("CLAIM ACKNOWLEDGED AND FORWARD")=0
"RTN","IBY368PO",41,0)
 S DATA("FINAL/PAYMENT")=0
"RTN","IBY368PO",42,0)
 S DATA("PAPER CLAIM MAILED VIA USPS")=0
"RTN","IBY368PO",43,0)
 S DATA("ACCEPT *WARNING*")=1
"RTN","IBY368PO",44,0)
 S TXT="" F  S TXT=$O(DATA(TXT)) Q:TXT=""  D
"RTN","IBY368PO",45,0)
 .I $D(^IBE(361.3,"B",TXT)) Q      ; already on file
"RTN","IBY368PO",46,0)
 .S DIC="^IBE(361.3,",DIC(0)="F",X=TXT
"RTN","IBY368PO",47,0)
 .S DIC("DR")=".02////"_DATA(TXT)
"RTN","IBY368PO",48,0)
 .D FILE^DICN
"RTN","IBY368PO",49,0)
 .Q
"RTN","IBY368PO",50,0)
TX ;
"RTN","IBY368PO",51,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY368PO",52,0)
 D UPDATE^XPDID(2)
"RTN","IBY368PO",53,0)
 Q
"RTN","IBY368PO",54,0)
 ;
"RTN","IBY368PO",55,0)
AUTOFILE ; Check if informational status messages with no Final Review Action qualify for auto-file with no review.
"RTN","IBY368PO",56,0)
 ;
"RTN","IBY368PO",57,0)
 N IBDA,IBCNT,IB,Z,STOP,IBAUTO,TXT,NOREVU,IBREV
"RTN","IBY368PO",58,0)
 D BMES^XPDUTL(" STEP 3 of "_XPDIDTOT)
"RTN","IBY368PO",59,0)
 D MES^XPDUTL("-------------")
"RTN","IBY368PO",60,0)
 D MES^XPDUTL("Now looking at all informational status messages on file to see if any of them")
"RTN","IBY368PO",61,0)
 D MES^XPDUTL("can be auto-filed with no review needed.  Each ""."" represents 1000 messages.")
"RTN","IBY368PO",62,0)
 D MES^XPDUTL("")
"RTN","IBY368PO",63,0)
 S IBDA=0,IBCNT=0 F  S IBDA=$O(^IBM(361,"ASV","I",IBDA)) Q:'IBDA  D
"RTN","IBY368PO",64,0)
 .S IBCNT=IBCNT+1 W:(IBCNT#1000=0)&'$D(ZTQUEUED) "."
"RTN","IBY368PO",65,0)
 .S IB=$G(^IBM(361,IBDA,0))
"RTN","IBY368PO",66,0)
 .I $P(IB,U,10)'="" Q  ; final review action exists so quit out
"RTN","IBY368PO",67,0)
 .; if this message was previously auto-filed with no review, then
"RTN","IBY368PO",68,0)
 .; update the final review information and quit out
"RTN","IBY368PO",69,0)
 .I $P(IB,U,9)=2,$P(IB,U,14)=1 D  Q
"RTN","IBY368PO",70,0)
 ..N DIE,DR,DA
"RTN","IBY368PO",71,0)
 ..S DIE=361,DR=".1////F",DA=IBDA D ^DIE
"RTN","IBY368PO",72,0)
 ..Q
"RTN","IBY368PO",73,0)
 .;
"RTN","IBY368PO",74,0)
 .; IBAUTO - flag indicating that the whole message can be auto-filed
"RTN","IBY368PO",75,0)
 .;          with no review needed
"RTN","IBY368PO",76,0)
 .; NOREVU - flag indicating that one of the message lines had 'No
"RTN","IBY368PO",77,0)
 .;          Review Needed' text
"RTN","IBY368PO",78,0)
 .; IBREV  - flag indicating that one of the message lines had 'Review
"RTN","IBY368PO",79,0)
 .;          Always Needed' text (so the whole message needs review)
"RTN","IBY368PO",80,0)
 .;
"RTN","IBY368PO",81,0)
 .S (Z,STOP,IBAUTO)=0 F  S Z=$O(^IBM(361,IBDA,1,Z)) Q:'Z  D  Q:STOP
"RTN","IBY368PO",82,0)
 ..S TXT=$G(^IBM(361,IBDA,1,Z,0)) Q:TXT=""  ; text line Z
"RTN","IBY368PO",83,0)
 ..S NOREVU=$$CKREVU^IBCEM4(TXT,,,.IBREV)
"RTN","IBY368PO",84,0)
 ..I IBREV S STOP=1,IBAUTO=0 Q  ; 'review always needed' text found
"RTN","IBY368PO",85,0)
 ..I NOREVU S IBAUTO=1  ; 'no review needed' text found
"RTN","IBY368PO",86,0)
 ..Q
"RTN","IBY368PO",87,0)
 .I IBAUTO D
"RTN","IBY368PO",88,0)
 ..N DIE,DR,DA
"RTN","IBY368PO",89,0)
 ..S DIE=361,DR=".09////2;.14////1;.1////F",DA=IBDA D ^DIE
"RTN","IBY368PO",90,0)
 ..Q
"RTN","IBY368PO",91,0)
 .Q
"RTN","IBY368PO",92,0)
 D MES^XPDUTL(" Done.")
"RTN","IBY368PO",93,0)
 D UPDATE^XPDID(3)
"RTN","IBY368PO",94,0)
 D CLEAN^DILF
"RTN","IBY368PO",95,0)
 Q
"RTN","IBY368PO",96,0)
 ;
"RTN","IBY368PO",97,0)
MAIL(MTITLE,MLINES,MRECIP) ; send message
"RTN","IBY368PO",98,0)
 N DIFROM,XMDUZ,XMSUB,XMTEXT,XMY,XMZ,XMMG
"RTN","IBY368PO",99,0)
 S XMSUB=MTITLE,XMDUZ=.5,XMTEXT="MLINES(",XMY(""_MRECIP_"")=""
"RTN","IBY368PO",100,0)
 D ^XMD
"RTN","IBY368PO",101,0)
 Q
"RTN","IBY368PR")
0^^B2066413^n/a
"RTN","IBY368PR",1,0)
IBY368PR ;YMG/BP - Environment check for IB patch 368 ;04-Apr-2007
"RTN","IBY368PR",2,0)
 ;;2.0;INTEGRATED BILLING;**368**;04-APR-2007;Build 21
"RTN","IBY368PR",3,0)
 ;
"RTN","IBY368PR",4,0)
EN ; Standard Entry Point
"RTN","IBY368PR",5,0)
 D CHECK
"RTN","IBY368PR",6,0)
 Q
"RTN","IBY368PR",7,0)
 ;
"RTN","IBY368PR",8,0)
CHECK ; check for correct time window
"RTN","IBY368PR",9,0)
 ; patch should be installed between 3pm CST and 9am CST in production
"RTN","IBY368PR",10,0)
 ; no check necessary if test account - if that's the case, bail out
"RTN","IBY368PR",11,0)
 Q:'$$PROD^XUPROD(1)
"RTN","IBY368PR",12,0)
 N CTS,DATE,ETIME,ETS,STIME,STS,TZ,Z
"RTN","IBY368PR",13,0)
 S Z=$$NOW^XLFDT(),CTS=Z-(Z\1),DATE=$P(Z,".") ; get current date and time
"RTN","IBY368PR",14,0)
 ; pick either CDT or CST timesone (in 2007 daylight saving time ends on Nov 4, at 2 am)
"RTN","IBY368PR",15,0)
 S TZ=$S(Z>3071104.02:"-0500",1:"-0600")
"RTN","IBY368PR",16,0)
 S STS=$$HL7TFM^XLFDT("090000"_TZ,"L",1),ETS=$$HL7TFM^XLFDT("150000"_TZ,"L",1)
"RTN","IBY368PR",17,0)
 I CTS>STS&(CTS<ETS) D
"RTN","IBY368PR",18,0)
 .S STIME=$$HLDATE^HLFNC(DATE_STS,"TM"),ETIME=$$HLDATE^HLFNC(DATE_ETS,"TM")
"RTN","IBY368PR",19,0)
 .W !,"This patch has to be installed between "_$E(ETIME,1,2)_":"_$E(ETIME,3,4)_" and "_$E(STIME,1,2)_":"_$E(STIME,3,4)_"...Installation aborted."
"RTN","IBY368PR",20,0)
 .S XPDQUIT=2
"RTN","IBY368PR",21,0)
 .Q
"RTN","IBY368PR",22,0)
 Q
"SEC","^DIC",361.2,361.2,0,"AUDIT")

"SEC","^DIC",361.2,361.2,0,"DD")
@
"SEC","^DIC",361.2,361.2,0,"DEL")
@
"SEC","^DIC",361.2,361.2,0,"LAYGO")
@
"SEC","^DIC",361.2,361.2,0,"RD")

"SEC","^DIC",361.2,361.2,0,"WR")
@
"VER")
8.0^22.0
"^DD",361.2,361.2,0)
FIELD^^.03^3
"^DD",361.2,361.2,0,"DDA")
N
"^DD",361.2,361.2,0,"DT")
3001019
"^DD",361.2,361.2,0,"ID",.03)
W "   ",$P(^(0),U,3)
"^DD",361.2,361.2,0,"IX","B",361.2,.01)

"^DD",361.2,361.2,0,"NM","IB ELECTRONIC REPORT DISPOSITION")

"^DD",361.2,361.2,0,"VRPK")
IB
"^DD",361.2,361.2,.01,0)
NAME^RF^^0;1^K:$L(X)>30!($L(X)<1)!'(X'?1P.E) X
"^DD",361.2,361.2,.01,1,0)
^.1
"^DD",361.2,361.2,.01,1,1,0)
361.2^B
"^DD",361.2,361.2,.01,1,1,1)
S ^IBE(361.2,"B",$E(X,1,30),DA)=""
"^DD",361.2,361.2,.01,1,1,2)
K ^IBE(361.2,"B",$E(X,1,30),DA)
"^DD",361.2,361.2,.01,3)
Answer must be 1-30 characters in length.
"^DD",361.2,361.2,.01,21,0)
^^1^1^3001019^
"^DD",361.2,361.2,.01,21,1,0)
This is the name of the electronic billing report.
"^DD",361.2,361.2,.01,"DT")
3001019
"^DD",361.2,361.2,.02,0)
DISPOSITION^S^0:IGNORE THE REPORT;1:MAIL REPORT TO MAIL GROUP;^0;2^Q
"^DD",361.2,361.2,.02,3)
Enter 0 to ignore this report, 1 to save it in a mail message
"^DD",361.2,361.2,.02,21,0)
^.001^3^3^3001019^^
"^DD",361.2,361.2,.02,21,1,0)
This is the indicator that tells the system what to do when it receives 
"^DD",361.2,361.2,.02,21,2,0)
an electronic message identified as this report.  It can either be
"^DD",361.2,361.2,.02,21,3,0)
ignored or saved via a mail message to the IB EDI SUPERVISOR mail group.
"^DD",361.2,361.2,.02,"DT")
3001019
"^DD",361.2,361.2,.03,0)
SHORT DESCRIPTION^F^^0;3^K:$L(X)>30!($L(X)<1) X
"^DD",361.2,361.2,.03,3)
Answer must be 1-30 characters in length.
"^DD",361.2,361.2,.03,21,0)
^.001^2^2^3001019^^
"^DD",361.2,361.2,.03,21,1,0)
This is the description of the report that will be displayed when the
"^DD",361.2,361.2,.03,21,2,0)
report name is.
"^DD",361.2,361.2,.03,"DT")
3001019
"^DIC",361.2,361.2,0)
IB ELECTRONIC REPORT DISPOSITION^361.2
"^DIC",361.2,361.2,0,"GL")
^IBE(361.2,
"^DIC",361.2,361.2,"%",0)
^1.005^^0
"^DIC",361.2,361.2,"%D",0)
^^4^4^3010502^
"^DIC",361.2,361.2,"%D",1,0)
This file contains a record for each electronic report that can be
"^DIC",361.2,361.2,"%D",2,0)
returned to the site by the V.A's clearinghouse.  The puropse of the file
"^DIC",361.2,361.2,"%D",3,0)
is to allow the sites to determine which of these reports should be
"^DIC",361.2,361.2,"%D",4,0)
forwarded to the appropriate mail group and which ones should be ignored.
"^DIC",361.2,"B","IB ELECTRONIC REPORT DISPOSITION",361.2)

"BLD",6436,6)
^350
**END**
**END**
