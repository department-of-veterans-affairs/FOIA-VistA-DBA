KIDS Distribution saved on May 08, 2003@09:25:12
DG*5.3*506 IVM*2.0*76 EAS*1.0*29
**KIDS**:DG*5.3*506^IVM*2.0*76^EAS*1.0*29^

**INSTALL NAME**
DG*5.3*506
"BLD",4199,0)
DG*5.3*506^REGISTRATION^0^3030508^y
"BLD",4199,4,0)
^9.64PA^2^1
"BLD",4199,4,2,0)
2
"BLD",4199,4,2,2,0)
^9.641^2^1
"BLD",4199,4,2,2,2,0)
PATIENT  (File-top level)
"BLD",4199,4,2,2,2,1,0)
^9.6411^.118^2
"BLD",4199,4,2,2,2,1,.118,0)
ADDRESS CHANGE DT/TM
"BLD",4199,4,2,2,2,1,.121,0)
BAD ADDRESS INDICATOR
"BLD",4199,4,2,222)
y^y^p^^^^n^^n
"BLD",4199,4,2,224)

"BLD",4199,4,"APDD",2,2)

"BLD",4199,4,"APDD",2,2,.118)

"BLD",4199,4,"APDD",2,2,.121)

"BLD",4199,4,"B",2,2)

"BLD",4199,"KRN",0)
^9.67PA^8989.52^19
"BLD",4199,"KRN",.4,0)
.4
"BLD",4199,"KRN",.401,0)
.401
"BLD",4199,"KRN",.402,0)
.402
"BLD",4199,"KRN",.402,"NM",0)
^9.68A^1^1
"BLD",4199,"KRN",.402,"NM",1,0)
DGRPT 10-10T REGISTRATION    FILE #2^2^0
"BLD",4199,"KRN",.402,"NM","B","DGRPT 10-10T REGISTRATION    FILE #2",1)

"BLD",4199,"KRN",.403,0)
.403
"BLD",4199,"KRN",.5,0)
.5
"BLD",4199,"KRN",.84,0)
.84
"BLD",4199,"KRN",3.6,0)
3.6
"BLD",4199,"KRN",3.8,0)
3.8
"BLD",4199,"KRN",9.2,0)
9.2
"BLD",4199,"KRN",9.8,0)
9.8
"BLD",4199,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",4199,"KRN",9.8,"NM",1,0)
DGRPE^^0^B38992298
"BLD",4199,"KRN",9.8,"NM",2,0)
DGRP1^^0^B18684048
"BLD",4199,"KRN",9.8,"NM",3,0)
DGUTL3^^0^B8044412
"BLD",4199,"KRN",9.8,"NM",4,0)
DGRPD^^0^B51357041
"BLD",4199,"KRN",9.8,"NM","B","DGRP1",2)

"BLD",4199,"KRN",9.8,"NM","B","DGRPD",4)

"BLD",4199,"KRN",9.8,"NM","B","DGRPE",1)

"BLD",4199,"KRN",9.8,"NM","B","DGUTL3",3)

"BLD",4199,"KRN",19,0)
19
"BLD",4199,"KRN",19.1,0)
19.1
"BLD",4199,"KRN",101,0)
101
"BLD",4199,"KRN",409.61,0)
409.61
"BLD",4199,"KRN",771,0)
771
"BLD",4199,"KRN",870,0)
870
"BLD",4199,"KRN",8989.51,0)
8989.51
"BLD",4199,"KRN",8989.52,0)
8989.52
"BLD",4199,"KRN",8994,0)
8994
"BLD",4199,"KRN","B",.4,.4)

"BLD",4199,"KRN","B",.401,.401)

"BLD",4199,"KRN","B",.402,.402)

"BLD",4199,"KRN","B",.403,.403)

"BLD",4199,"KRN","B",.5,.5)

"BLD",4199,"KRN","B",.84,.84)

"BLD",4199,"KRN","B",3.6,3.6)

"BLD",4199,"KRN","B",3.8,3.8)

"BLD",4199,"KRN","B",9.2,9.2)

"BLD",4199,"KRN","B",9.8,9.8)

"BLD",4199,"KRN","B",19,19)

"BLD",4199,"KRN","B",19.1,19.1)

"BLD",4199,"KRN","B",101,101)

"BLD",4199,"KRN","B",409.61,409.61)

"BLD",4199,"KRN","B",771,771)

"BLD",4199,"KRN","B",870,870)

"BLD",4199,"KRN","B",8989.51,8989.51)

"BLD",4199,"KRN","B",8989.52,8989.52)

"BLD",4199,"KRN","B",8994,8994)

"BLD",4199,"QUES",0)
^9.62^^
"BLD",4199,"REQB",0)
^9.611^4^4
"BLD",4199,"REQB",1,0)
DG*5.3*114^2
"BLD",4199,"REQB",2,0)
DG*5.3*161^2
"BLD",4199,"REQB",3,0)
DG*5.3*489^2
"BLD",4199,"REQB",4,0)
DG*5.3*498^2
"BLD",4199,"REQB","B","DG*5.3*114",1)

"BLD",4199,"REQB","B","DG*5.3*161",2)

"BLD",4199,"REQB","B","DG*5.3*489",3)

"BLD",4199,"REQB","B","DG*5.3*498",4)

"FIA",2)
PATIENT
"FIA",2,0)
^DPT(
"FIA",2,0,0)
2I
"FIA",2,0,1)
y^y^p^^^^n^^n
"FIA",2,0,10)

"FIA",2,0,11)

"FIA",2,0,"RLRO")

"FIA",2,0,"VR")
5.3^DG
"FIA",2,2)
1
"FIA",2,2,.118)

"FIA",2,2,.121)

"IX",2,2,"ADELBAI",0)
2^ADELBAI^Delete Bad Address Indicator when address changes^MU^^F^^I^2^^^^^A
"IX",2,2,"ADELBAI",.1,0)
^^3^3^3030306^
"IX",2,2,"ADELBAI",.1,1,0)
This action cross-reference will delete the Bad Address Indicator for the
"IX",2,2,"ADELBAI",.1,2,0)
patient's primary address whenever the address changes (either manually
"IX",2,2,"ADELBAI",.1,3,0)
or by an incoming Z05 transmission).
"IX",2,2,"ADELBAI",1)
D:$$BADADR^DGUTL3(DA) DELBAI^DGUTL3(DA)
"IX",2,2,"ADELBAI",1.4)
I X1'=X2
"IX",2,2,"ADELBAI",2)
Q
"IX",2,2,"ADELBAI",2.4)

"IX",2,2,"ADELBAI",11.1,0)
^.114IA^1^1
"IX",2,2,"ADELBAI",11.1,1,0)
1^F^2^.118^^^F
"IX",2,2,"ADELBAI",11.1,1,3)

"KRN",.402,1770,-1)
0^1
"KRN",.402,1770,0)
DGRPT 10-10T REGISTRATION^3030306.1536^^2^^^3030306
"KRN",.402,1770,"DR",1,2)
K DGFIN;I $G(DGNEWPF) S Y="@10";.02;391;1901;@10;.111;S:X="" Y="@1112";.112;S:X="" Y="@1112";.113;@1112;S EASZIPLK=1;.1112;.114;S:'$$KEY^DGREGDD1(DUZ,DA) Y=.131;.115;.117;.131;.132;.121;.05;.211;S:X="" Y="@30";.212;Q;.2125//NO;
"KRN",.402,1770,"DR",1,2,1)
I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X="" Y=.216;.214;S:X="" Y=.216;.215;.216;.217;.2207;.219;.21011;@30;I $S('$D(^DPT(DFN,.21)):1,$P(^(.21),U,1)="":1,1:0) S Y=.331;.3305//NO;I X'="Y" S Y=.331;
"KRN",.402,1770,"DR",1,2,2)
S X=$S($D(^DPT(DA,.21)):^(.21),1:"") S:X'="" ^(.33)=$P(X_"^^^^^^^^^^^",U,1,9)_U_$P(^(.33),U,10)_U_$P(X,U,11);S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);S Y=.33011;.331;S:X="" Y="@40";.332;.333;S:X="" Y=.336;.334;
"KRN",.402,1770,"DR",1,2,3)
S:X="" Y=.336;.335;.336;.337;.2201;.339;.33011;@40;.325;.328;.525;I $P($G(^DPT(DFN,.53)),U)]"" S Y="@53";.531;I X="Y" S Y="@532",DGPHMULT=1;I X="N" S Y="@533",DGPHMULT=1;S:X="" Y="@53";@532;.532///^S X="PENDING";
"KRN",.402,1770,"DR",1,2,4)
.535///^S X=$$DIV^DGRPLE();S Y="@53";@533;.533///^S X="VAMC";.535///^S X=$$DIV^DGRPLE();@53;.32102;.32103;.322013;.362;.301;S:X'="Y" Y="@50";.302;@50;.36205;.36215;.36235;.361;361;.323;@98;S DGFIN="";
"KRN",.402,1770,"DR",2,2.0361)
.01;
"KRN",.402,1770,"DR",99,1,9.2)
S (D,D0)=$QS(DIMQ,$QL(DIMQ)) I D,$D(^DGNT(28.11,D,0)) S X=$P(^(0),U) S:$D(^DPT(+X,0)) X=$P(^(0),U) S DWLC=DWLC+1,^DPT(DA,DV,DWLC,0)=X
"KRN",.402,1770,"DR",99,1,9.3)
N DIMQ,DIMSTRT,DIMSCNT S (DIMQ,DIMSTRT)=$NA(^DGNT(28.11,"B",I(0,0))),DIMSCNT=$QL(DIMQ) F  S DIMQ=$Q(@DIMQ) Q:DIMQ=""  Q:$NA(@DIMQ,DIMSCNT)'=DIMSTRT   X DR(99,1,9.2) Q:'$D(D)  S D=D0
"KRN",.402,1770,"ROU")
^DGRPTX
"KRN",.402,1770,"ROUOLD")
DGRPTX
"MBREQ")
0
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
506^3030508^123456797
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","DGRP1")
0^2^B18684048
"RTN","DGRP1",1,0)
DGRP1 ;ALB/MRL/BRM - DEMOGRAPHIC DATA ; 4/17/03 3:13pm
"RTN","DGRP1",2,0)
 ;;5.3;Registration;**109,161,506**;Aug 13, 1993
"RTN","DGRP1",3,0)
 ;
"RTN","DGRP1",4,0)
EN S (DGRPS,DGRPW)=1 D H^DGRPU F I=0,.11,.121,.13,.15,.24,57 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRP1",5,0)
 I $P(DGRP(.15),"^",2)]"" S Z="APPLICANT IS LISTED AS 'INELIGIBLE' FOR TREATMENT!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",6,0)
 I $P(DGRP(.15),"^",3)]"" S Z="APPLICANT IS LISTED AS 'MISSING'.  NOTIFY APPROPRIATE PERSONNEL!",DGRPCM=1 D WW^DGRPV S DGRPCM=0
"RTN","DGRP1",7,0)
 W ! S Z=1 D WW^DGRPV W "    Name: " S Z=$P(DGRP(0),"^",1),Z1=31 D WW1^DGRPV W "SS: " S X=$P(DGRP(0),"^",9),Z=$E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10),Z1=13 D WW1^DGRPV S Y=$P(DGRP(0),"^",3) X ^DD("DD") W "DOB: ",Y
"RTN","DGRP1",8,0)
 S (I1,Z1)="",Z=2 D WW^DGRPV W "   Alias: "
"RTN","DGRP1",9,0)
 F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:'I  S I1=1 W:$X>40 !?13 S DGX=$G(^(I,0)),Z1=36,Z=$E($P(DGX,"^",1),1,29) D WW1^DGRPV S X=$P(DGX,"^",2) I X]"" W $E(X,1,3)_"-"_$E(X,4,5)_"-"_$E(X,6,10)
"RTN","DGRP1",10,0)
 W:'I1 "NO ALIAS ON FILE FOR THIS APPLICANT"
"RTN","DGRP1",11,0)
 S Z=3,DGRPX=DGRP(0) D WW^DGRPV W " Remarks: ",$S($P(DGRPX,"^",10)]"":$E($P(DGRPX,"^",10),1,65),1:"NO REMARKS ENTERED FOR THIS PATIENT") S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU I $P(DGRP(.121),"^",9)="Y" S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRP1",12,0)
 S Z=4 D WW^DGRPV W " Permanent Address: " S Z=" ",Z1=17
"RTN","DGRP1",13,0)
 D WW1^DGRPV S Z=5,DGRPW=0 D WW^DGRPV W " Temporary Address: "
"RTN","DGRP1",14,0)
 W !?11
"RTN","DGRP1",15,0)
 S Z1=40,Z=$S($D(DGA(1)):DGA(1),1:"NONE ON FILE") D WW1^DGRPV W $S($D(DGA(2)):DGA(2),1:"NO TEMPORARY ADDRESS")
"RTN","DGRP1",16,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?11 W:'(I#2) ?51 W DGA(I)
"RTN","DGRP1",17,0)
 S DGCC=$S($D(^DIC(5,+$P(DGRP(.11),U,5),1,+$P(DGRP(.11),U,7),0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W !?3,"County: ",DGCC K DGCC
"RTN","DGRP1",18,0)
 S DGCC=$S($P(DGRP(.121),U,9)'="Y":"NOT APPLICABLE",$D(^DIC(5,+$P(DGRP(.121),U,5),1,+$P(DGRP(.121),U,11),0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W ?43,"County: ",DGCC K DGCC
"RTN","DGRP1",19,0)
 W !?4,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S($P(DGRP(.121),U,9)'="Y":"NOT APPLICABLE",$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU)
"RTN","DGRP1",20,0)
 S X="NOT APPLICABLE" I $P(DGRP(.121),U,9)="Y" S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRP1",21,0)
 W !?3,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU),?42,"From/To: ",X
"RTN","DGRP1",22,0)
 W !?1,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$P(DGRP(.11),U,16))
"RTN","DGRP1",23,0)
 ;
"RTN","DGRP1",24,0)
 ; ***  Additional displays added for Pre-Registration
"RTN","DGRP1",25,0)
 I $G(DGPRFLG)=1 D
"RTN","DGRP1",26,0)
 . W !
"RTN","DGRP1",27,0)
 . N I,MIS1,X,X1,SA1,TP1,X2,X3,ES1
"RTN","DGRP1",28,0)
 . I $D(^DIA(2,"B",DFN)) S X="" F I=1:1 S X=$O(^DIA(2,"B",DFN,X)) Q:X<1  I $P(^DIA(2,X,0),U,3)=.05 S MIS1=$P(^DIA(2,X,0),U,2)
"RTN","DGRP1",29,0)
 . W:$D(MIS1)>0 !," [MARITAL STATUS CHANGED:] "_$$FMTE^XLFDT(MIS1,"5D")
"RTN","DGRP1",30,0)
 . I $D(^DIA(2,"B",DFN)) S X1="" F I=1:1 S X1=$O(^DIA(2,"B",DFN,X1)) Q:X1<1  S:$P(^DIA(2,X1,0),U,3)=.111 SA1=$P(^DIA(2,X1,0),U,2)
"RTN","DGRP1",31,0)
 . W:$D(SA1)>0 !," [STREET ADDRESS LAST CHANGED:] "_$$FMTE^XLFDT(SA1,"5D")
"RTN","DGRP1",32,0)
 . I $D(^DIA(2,"B",DFN)) S X2="" F I=1:1 S X2=$O(^DIA(2,"B",DFN,X2)) Q:X2<1  S:$P(^DIA(2,X2,0),U,3)=.131 TP1=$P(^DIA(2,X2,0),U,2)
"RTN","DGRP1",33,0)
 . W:$D(TP1)>0 !," [HOME PHONE NUMBER CHANGED:] "_$$FMTE^XLFDT(TP1,"5D")
"RTN","DGRP1",34,0)
 . I $D(^DIA(2,"B",DFN)) S X3="" F I=1:1 S X3=$O(^DIA(2,"B",DFN,X3)) Q:X3<1  S:$P(^DIA(2,X3,0),U,3)=.31115 ES1=$P(^DIA(2,X3,0),U,2)
"RTN","DGRP1",35,0)
 . W:$D(ES1)>0 !," [EMPLOYMENT STATUS CHANGED:] "_$$FMTE^XLFDT(ES1,"5D")
"RTN","DGRP1",36,0)
 . I $D(^DPT(DFN,.312,0)) S IN1=0 F  S IN1=$O(^DPT(DFN,.312,IN1)) Q:'IN1  S IN2=$P(^DPT(DFN,.312,IN1,0),U) S INN=$P(^DIC(36,IN2,0),U) D
"RTN","DGRP1",37,0)
 .. S IND=$P($G(^DPT(DFN,.312,IN1,1)),U) W !," [INSURANCE:] "_INN_"  DATE ENTERED: "_$S(IND]"":$$FMTE^XLFDT(IND,"5D"),1:"")
"RTN","DGRP1",38,0)
 .. I $P($G(^DPT(DFN,.312,IN1,1)),U,5) S INE=$P($G(^DPT(DFN,.312,IN1,1)),U,5) W " DATE EDITED: "_$S(INE]"":$$FMTE^XLFDT(INE,"5D"),1:"")
"RTN","DGRP1",39,0)
 ;
"RTN","DGRP1",40,0)
 G ^DGRPP
"RTN","DGRPD")
0^4^B51357041
"RTN","DGRPD",1,0)
DGRPD ;ALB/MRL/MLR/JAN-PATIENT INQUIRY (NEW) ; 5/7/03 4:05pm
"RTN","DGRPD",2,0)
 ;;5.3;Registration;**109,124,121,57,161,149,286,358,436,445,489,498,506**;Aug 13, 1993
"RTN","DGRPD",3,0)
 ;  *286*  Newing variables X,Y in OKLINE subroutine
"RTN","DGRPD",4,0)
 ;  *358*  If a patient is on a domiciliary ward, don't display MEANS
"RTN","DGRPD",5,0)
 ;         TEST required/Medication Copayment Exemption messages
"RTN","DGRPD",6,0)
 ;  *436*  If an inpatient is not on a domiciliary ward, don't display
"RTN","DGRPD",7,0)
 ;         Medication Copayment Exemption message
"RTN","DGRPD",8,0)
 ;
"RTN","DGRPD",9,0)
SEL K DFN,DGRPOUT W ! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DFN=+Y D EN G SEL
"RTN","DGRPD",10,0)
 ;
"RTN","DGRPD",11,0)
EN ;call to display patient inquiry - input DFN
"RTN","DGRPD",12,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",13,0)
 S DGCMOR="UNSPECIFIED",DGMPI=$G(^DPT(+DFN,"MPI"))
"RTN","DGRPD",14,0)
 S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGMPI,U,3)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGRPD",15,0)
 I $D(DGMPI),$D(DGLOCATN) S DGCMOR=$P(DGLOCATN,"^")
"RTN","DGRPD",16,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",17,0)
 K DGRPOUT,DGHOW S DGABBRV=$S($D(^DG(43,1,0)):+$P(^(0),"^",38),1:0),DGRPU="UNSPECIFIED" D DEM^VADPT,HDR F I=0,.11,.13,.121,.31,.32,.36,.361,.141 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPD",18,0)
 S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU S DGTMPAD=0 I $P(DGRP(.121),"^",9)="Y" S DGTMPAD=$S('$P(DGRP(.121),"^",8):1,$P(DGRP(.121),"^",8)'<DT:1,1:0) I DGTMPAD S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRPD",19,0)
 W ?1,"Address: ",$S($D(DGA(1)):DGA(1),1:"NONE ON FILE"),?40,"Temporary: ",$S($D(DGA(2)):DGA(2),1:"NO TEMPORARY ADDRESS")
"RTN","DGRPD",20,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?10 W:'(I#2) ?51 W DGA(I)
"RTN","DGRPD",21,0)
 S DGCC=+$P(DGRP(.11),U,7),DGST=+$P(DGRP(.11),U,5),DGCC=$S($D(^DIC(5,DGST,1,DGCC,0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W !?2,"County: ",DGCC
"RTN","DGRPD",22,0)
 S X="NOT APPLICABLE" I DGTMPAD S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRPD",23,0)
 W ?42,"From/To: ",X,!?3,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S('DGTMPAD:X,$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU) K DGTMPAD
"RTN","DGRPD",24,0)
 W !?2,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU)
"RTN","DGRPD",25,0)
 W !,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$$BADADR^DGUTL3(+DFN))
"RTN","DGRPD",26,0)
 D CA
"RTN","DGRPD",27,0)
 I 'DGABBRV W !!?4,"POS: ",$S($D(^DIC(21,+$P(DGRP(.32),"^",3),0)):$P(^(0),"^",1),1:DGRPU),?42,"Claim #: ",$S($P(DGRP(.31),"^",3)]"":$P(DGRP(.31),"^",3),1:"UNSPECIFIED")
"RTN","DGRPD",28,0)
 I 'DGABBRV W !?2,"Relig: ",$S($D(^DIC(13,+$P(DGRP(0),"^",8),0)):$P(^(0),"^",1),1:DGRPU),?46,"Sex: ",$S($P(VADM(5),"^",2)]"":$P(VADM(5),"^",2),1:"UNSPECIFIED")
"RTN","DGRPD",29,0)
 I 'DGABBRV W ! D
"RTN","DGRPD",30,0)
 .N RACE,ETHNIC,PTR,VAL,X,DIWL,DIWR,DIWF
"RTN","DGRPD",31,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",32,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.02,PTR)) Q:'PTR  D
"RTN","DGRPD",33,0)
 ..S VAL=+$G(^DPT(DFN,.02,PTR,0))
"RTN","DGRPD",34,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,1)
"RTN","DGRPD",35,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,1) S:+$O(^DPT(DFN,.02,PTR)) VAL=VAL_", "
"RTN","DGRPD",36,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",37,0)
 .M RACE=^UTILITY($J,"W",0) S:$G(RACE(1,0))="" RACE(1,0)="UNANSWERED"
"RTN","DGRPD",38,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",39,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.06,PTR)) Q:'PTR  D
"RTN","DGRPD",40,0)
 ..S VAL=+$G(^DPT(DFN,.06,PTR,0))
"RTN","DGRPD",41,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,2)
"RTN","DGRPD",42,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,2) S:+$O(^DPT(DFN,.06,PTR)) VAL=VAL_", "
"RTN","DGRPD",43,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",44,0)
 .M ETHNIC=^UTILITY($J,"W",0) S:$G(ETHNIC(1,0))="" ETHNIC(1,0)="UNANSWERED"
"RTN","DGRPD",45,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",46,0)
 .W ?3,"Race: ",RACE(1,0),?40,"Ethnicity: ",ETHNIC(1,0)
"RTN","DGRPD",47,0)
 .F X=2:1 Q:'$D(RACE(X,0))&'$D(ETHNIC(X,0))  W !,?9,$G(RACE(X,0)),?51,$G(ETHNIC(X,0))
"RTN","DGRPD",48,0)
 I '$$OKLINE(16) G Q
"RTN","DGRPD",49,0)
 S X1=DGRP(.36),X=$P(DGRP(.361),"^",1) W !!,"Primary Eligibility: ",$S($D(^DIC(8,+X1,0)):$P(^(0),"^",1)_" ("_$S(X="V":"VERIFIED",X="P":"PENDING VERIFICATION",X="R":"PENDING REVERIFICATION",1:"NOT VERIFIED")_")",1:DGRPU)
"RTN","DGRPD",50,0)
 W !,"Other Eligibilities: " F I=0:0 S I=$O(^DIC(8,I)) Q:'I  I $D(^DIC(8,I,0)),I'=+X1 S X=$P(^(0),"^",1)_", " I $D(^DPT("AEL",DFN,I)) W:$X+$L(X)>79 !?21 W X
"RTN","DGRPD",51,0)
 ;
"RTN","DGRPD",52,0)
 ;display the catastrophic disability review date if there is one
"RTN","DGRPD",53,0)
 D CATDIS
"RTN","DGRPD",54,0)
 ;
"RTN","DGRPD",55,0)
 I $G(DGPRFLG)=1 G Q:'$$OKLINE(19) D
"RTN","DGRPD",56,0)
 . N DGPDT,DGPTM
"RTN","DGRPD",57,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",58,0)
 . S DGPDT="",DGPDT=$O(^DGS(41.41,"ADC",DFN,DGPDT),-1)
"RTN","DGRPD",59,0)
 . W !,"[PRE-REGISTER DATE:]  "_$S(DGPDT]"":$$FMTE^XLFDT(DGPDT,"1D"),1:"NONE ON FILE")
"RTN","DGRPD",60,0)
 . S DGPTM=$$OUTPTTM^SDUTL3(DFN)
"RTN","DGRPD",61,0)
 . I $P(DGPTM,U,2)]"" W !,"[PRIMARY CARE TEAM:] "_$P(DGPTM,U,2)
"RTN","DGRPD",62,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",63,0)
 ; Check if patient is an inpatient and on a DOM ward
"RTN","DGRPD",64,0)
 ; If inpatient is on a DOM ward, don't display MT or CP messages
"RTN","DGRPD",65,0)
 ; If inpatient is NOT on a DOM ward, don't display CP message
"RTN","DGRPD",66,0)
 N DGDOM,DGDOM1,VAHOW,VAROOT,VAINDT,VAIP,VAERR
"RTN","DGRPD",67,0)
 G Q:'$$OKLINE(14)
"RTN","DGRPD",68,0)
 D DOM^DGMTR
"RTN","DGRPD",69,0)
 I '$G(DGDOM) D
"RTN","DGRPD",70,0)
 .D DIS^DGMTU(DFN)
"RTN","DGRPD",71,0)
 .D IN5^VADPT
"RTN","DGRPD",72,0)
 .I $G(VAIP(1))="" D DISP^IBARXEU(DFN,DT,3,1)
"RTN","DGRPD",73,0)
 ;I 'DGABBRV,$E(IOST,1,2)="C-" F I=$Y:1:20 W !
"RTN","DGRPD",74,0)
 S VAIP("L")=""
"RTN","DGRPD",75,0)
 I $$OKLINE(14) D INP
"RTN","DGRPD",76,0)
 I '$G(DGRPOUT),($$OKLINE(17)) D SA
"RTN","DGRPD",77,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",78,0)
Q D KVA^VADPT K %DT,D0,D1,DGA,DGA1,DGA2,DGABBRV,DGAD,DGCC,DGCMOR,DGDOM,DGLOCATN,DGMPI,DGRP,DGRPU,DGS,DGST,DGXFR0,DIC,DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,I1,L,LDM,POP,SDCT,VA,X,X1,Y Q
"RTN","DGRPD",79,0)
CA ;Confidential Address
"RTN","DGRPD",80,0)
 W !!?1,"Confidential Address:  ",?44,"Confidential Address Categories:"
"RTN","DGRPD",81,0)
 N DGCABEG,DGCAEND,DGA,DGARRAY,DGERROR
"RTN","DGRPD",82,0)
 S DGCABEG=$P(DGRP(.141),U,7),DGCAEND=$P(DGRP(.141),U,8)
"RTN","DGRPD",83,0)
 I 'DGCABEG!(DGCABEG>DT)!(DGCAEND&(DGCAEND<DT)) D  Q
"RTN","DGRPD",84,0)
 .W !?9,"NO CONFIDENTIAL ADDRESS"
"RTN","DGRPD",85,0)
 .W !?1,"From/To: NOT APPLICABLE"
"RTN","DGRPD",86,0)
 S DGAD=.141,(DGA1,DGA2)=1
"RTN","DGRPD",87,0)
 D AL^DGRPU(30)
"RTN","DGRPD",88,0)
 D GETS^DIQ(2,DFN,".141*,","E","DGARRAY","DGERROR")
"RTN","DGRPD",89,0)
 ;Format Confidential Address categories
"RTN","DGRPD",90,0)
 N DGIEN,DGCAST
"RTN","DGRPD",91,0)
 S DGIEN=0
"RTN","DGRPD",92,0)
 S DGA2=2
"RTN","DGRPD",93,0)
 F  S DGIEN=$O(DGARRAY(2.141,DGIEN)) Q:'DGIEN  D
"RTN","DGRPD",94,0)
 .S DGA(DGA2)=DGARRAY(2.141,DGIEN,.01,"E")
"RTN","DGRPD",95,0)
 .S DGCAST=DGARRAY(2.141,DGIEN,1,"E")
"RTN","DGRPD",96,0)
 .S DGA(DGA2)=DGA(DGA2)_"("_$S(DGCAST="YES":"Active",1:"Inactive")_")"
"RTN","DGRPD",97,0)
 .S DGA2=DGA2+2
"RTN","DGRPD",98,0)
 S I=0 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>43) !?9 W:'(I#2) ?44 W DGA(I)
"RTN","DGRPD",99,0)
 W !?1,"From/To:  ",$$FMTE^XLFDT(DGCABEG)_"-"_$S(DGCAEND'="":$$FMTE^XLFDT(DGCAEND),1:"UNANSWERED")
"RTN","DGRPD",100,0)
 Q
"RTN","DGRPD",101,0)
HDR I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGRPD",102,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",103,0)
 W @IOF,!,$P(VADM(1),"^",1),?40,$P(VADM(2),"^",2),?65,$P(VADM(3),"^",2) S X="",$P(X,"=",78)="" W !,X,!?15,"COORDINATING MASTER OF RECORD: ",DGCMOR,! Q
"RTN","DGRPD",104,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",105,0)
INP S VAIP("D")="L" D INP^DGPMV10
"RTN","DGRPD",106,0)
 S DGPMT=0
"RTN","DGRPD",107,0)
 D CS^DGPMV10 K DGPMT,DGPMIFN K:'$D(DGSWITCH) DGPMVI,DGPMDCD Q
"RTN","DGRPD",108,0)
SA F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) G CL:'I S X=^DGS(41.1,I,0) I $P(X,"^",2)>(DT-1),$P(X,"^",13)']"",'$P(X,"^",17) S L=$P(X,"^",2) D:$$OKLINE(17) SAA Q:$G(DGRPOUT)
"RTN","DGRPD",109,0)
 Q
"RTN","DGRPD",110,0)
SAA ;Scheduled Admit Data
"RTN","DGRPD",111,0)
 W !!?14,"Scheduled Admit"
"RTN","DGRPD",112,0)
 W:$D(^DIC(42,+$P(X,U,8),0)) " on ward "_$P(^(0),U)
"RTN","DGRPD",113,0)
 W:$D(^DIC(45.7,+$P(X,U,9),0)) " for treating specialty "_$P(^(0),U)
"RTN","DGRPD",114,0)
 W " on "_$$FMTE^XLFDT(L,"5DZ")
"RTN","DGRPD",115,0)
 Q  ;SAA
"RTN","DGRPD",116,0)
 ;
"RTN","DGRPD",117,0)
CL G FA:$O(^DPT(DFN,"DE",0))="" S SDCT=0 F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  I $D(^(I,0)),$P(^(0),"^",2)'="I",$O(^(0)) S SDCT=SDCT+1 W:SDCT=1 !!,"Currently enrolled in " W:$X>50 !?22 W $S($D(^SC(+^(0),0)):$P(^(0),"^",1)_", ",1:"")
"RTN","DGRPD",118,0)
 ;
"RTN","DGRPD",119,0)
FA G:'$$OKLINE(20) RMK
"RTN","DGRPD",120,0)
 S CT=0 W !!,"Future Appointments: " I $O(^DPT(DFN,"S",DT))'>0 W "NONE" G RMK
"RTN","DGRPD",121,0)
 W ?22,"Date",?33,"Time",?39,"Clinic",!?22 F I=22:1:75 W "="
"RTN","DGRPD",122,0)
 F FA=DT:0 S FA=$O(^DPT(DFN,"S",FA)) G RMK:'FA S L=^(FA,0),C=+L I $P(L,"^",2)'["C" D COV D  Q:CT>5
"RTN","DGRPD",123,0)
 .N DGAPPT
"RTN","DGRPD",124,0)
 .S DGAPPT=$$FMTE^XLFDT($E(FA,1,12),"5Z")
"RTN","DGRPD",125,0)
 .W !?22,$P(DGAPPT,"@")
"RTN","DGRPD",126,0)
 .W ?33,$P(DGAPPT,"@",2)
"RTN","DGRPD",127,0)
 .W ?39,$P($S($D(^SC(C,0)):^(0),1:""),"^")," ",COV
"RTN","DGRPD",128,0)
 .Q
"RTN","DGRPD",129,0)
 I $O(^DPT(DFN,"S",FA))>0 W !,"See Scheduling options for additional appointments."
"RTN","DGRPD",130,0)
RMK I '$G(DGRPOUT),($$OKLINE(21)) W !!,"Remarks: ",$P(^DPT(DFN,0),"^",10)
"RTN","DGRPD",131,0)
 K ADM,L,TRN,DIS,SSN,FA,C,COV,NOW,CT,DGD,DGD1,I ;Y killed after dghinqky 
"RTN","DGRPD",132,0)
 Q
"RTN","DGRPD",133,0)
COV S COV=$S($P(L,"^",7)=7:" (Collateral) ",1:""),COV=COV_$S($P(L,"^",2)["NT":" * NO ACTION TAKEN *",$P(L,"^",2)["N":" * NO-SHOW *",1:""),CT=CT+1 Q
"RTN","DGRPD",134,0)
 Q
"RTN","DGRPD",135,0)
 ;
"RTN","DGRPD",136,0)
OREN S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP D EN R !!,"Press RETURN to CONTINUE: ",X:DTIME
"RTN","DGRPD",137,0)
 Q
"RTN","DGRPD",138,0)
OKLINE(DGLINE) ;DOES PAUSE/HEADER IF $Y EXCEEDS DGLINE
"RTN","DGRPD",139,0)
 ;
"RTN","DGRPD",140,0)
 ;IN:   DGLINE --MAX LINE COUNT W/O PAUSE
"RTN","DGRPD",141,0)
 ;OUT:  DGLINE[RETURNED] -- 0 IF TIMEOUT/UP ARROW
"RTN","DGRPD",142,0)
 ;      DGRPOUT[SET]     -- 1 IF "
"RTN","DGRPD",143,0)
 N X,Y  ;**286** MLR 09/25/00  Newing X & Y variables prior to ^DIR
"RTN","DGRPD",144,0)
 I $G(IOST)["P-" Q DGLINE ; if printer, quit
"RTN","DGRPD",145,0)
 I $Y>DGLINE N DIR S DIR(0)="E" D ^DIR D:Y HDR I 'Y S DGRPOUT=1,DGLINE=0
"RTN","DGRPD",146,0)
 Q DGLINE
"RTN","DGRPD",147,0)
 ;
"RTN","DGRPD",148,0)
CATDIS ;
"RTN","DGRPD",149,0)
 ;displays catastrophic disabity review date if there is one
"RTN","DGRPD",150,0)
 N DGCDIS
"RTN","DGRPD",151,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) D
"RTN","DGRPD",152,0)
 .Q:'DGCDIS("REVDTE")
"RTN","DGRPD",153,0)
 .W !!,"Catastrophically Disabled Review Date: ",$$FMTE^XLFDT(DGCDIS("REVDTE"),1)
"RTN","DGRPD",154,0)
 Q
"RTN","DGRPD",155,0)
 ;
"RTN","DGRPE")
0^1^B38992298
"RTN","DGRPE",1,0)
DGRPE ;ALB/MRL/BRM - REGISTRATIONS EDITS ; 4/17/03 3:06pm
"RTN","DGRPE",2,0)
 ;;5.3;Registration;**32,114,139,169,175,247,190,343,397,342,454,415,489,506**;Aug 13, 1993
"RTN","DGRPE",3,0)
 ;
"RTN","DGRPE",4,0)
 ;DGDR contains a string of edits; edit=screen*10+item #
"RTN","DGRPE",5,0)
 ;
"RTN","DGRPE",6,0)
 ;line tag screen*10+item*1000 = continuation line
"RTN","DGRPE",7,0)
 ;
"RTN","DGRPE",8,0)
 I DGRPS=8 D ^DGRPEIS,Q Q  ; family demographic edit...not conventional!!  :)
"RTN","DGRPE",9,0)
 I DGRPS=9 D EDIT9^DGRPEIS2,Q Q  ; income screening data ($$$)
"RTN","DGRPE",10,0)
 I DGRPS=5,DGDR["501," D
"RTN","DGRPE",11,0)
 .I $G(DGPRFLG) D PREG^IBCNBME(DFN) Q
"RTN","DGRPE",12,0)
 .D REG^IBCNBME(DFN)
"RTN","DGRPE",13,0)
 .Q
"RTN","DGRPE",14,0)
 ;-- Tricare screen #15
"RTN","DGRPE",15,0)
 I DGRPS=15 D EDIT^DGRP15,Q Q
"RTN","DGRPE",16,0)
 ;
"RTN","DGRPE",17,0)
 N DGPH,DGPHFLG
"RTN","DGRPE",18,0)
 K DR S (DA,Y)=DFN,DIE="^DPT(",DR="",DGDRS="DR",DGCT=0 G ^DGRPE1:DGRPS>6 F I=1:1 S J=$P(DGDR,",",I) Q:J=""  F J1=J,J*1000 Q:'$T(@J1)  S DGDRD=$P($T(@J1),";;",2) D S
"RTN","DGRPE",19,0)
 D ^DIE
"RTN","DGRPE",20,0)
 I $G(DGPHFLG)>0 D EDITPH1^DGRPLE()
"RTN","DGRPE",21,0)
Q K DA,DIE,DR,DGCT,DGDR,DGDRD,DGDRS,DGRPADI,I,J,J1
"RTN","DGRPE",22,0)
 Q
"RTN","DGRPE",23,0)
S I $L(@DGDRS)+$L(DGDRD)<241 S @DGDRS=@DGDRS_DGDRD Q
"RTN","DGRPE",24,0)
 S DGCT=DGCT+1,DGDRS="DR(1,2,"_DGCT_")",@DGDRS=DGDRD Q
"RTN","DGRPE",25,0)
 Q
"RTN","DGRPE",26,0)
101 ;;.01;.09;.03;
"RTN","DGRPE",27,0)
102 ;;1;
"RTN","DGRPE",28,0)
103 ;;.091;
"RTN","DGRPE",29,0)
104 ;;S DIE("NO^")="OUTOK";.111;S:X="" Y="@1112";.112;S:X="" Y="@1112";.113;@1112;S EASZIPLK=1;.1112;K EASDO2;.114;S:'$$KEY^DGREGDD1(DUZ,DA) Y=.131;.115;.117;.131;.132;.121;K DIE("NO^");
"RTN","DGRPE",30,0)
105 ;;.12105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1217;I X']"" W !?4,$C(7),"But I need a Start Date for this Temporary Address." S Y=.12105;.1218;.1211;I X']"" W !?4,$C(7),"But I need at least one line of a Temporary address." S Y=.12105;
"RTN","DGRPE",31,0)
111 ;;.14105//NO;S:X="N" Y="@15" S:X="Y" DIE("NO^")="";.1417;I X']"" W !?4,$C(7),"But I need a Start Date." S Y=.14105;.1418;D DR111^DGRPE;.141;I '$P($$CAACT^DGRPCADD(DFN),U,2) W !?4,"But I need at least one active category." S Y=.14105;
"RTN","DGRPE",32,0)
111000 ;;K DR(2,2.141);.1411;I X']"" W !?4,$C(7),"I need at least one line of Address." S Y=.14105;.1412;S:X']"" Y=.1414;.1413;.1414;.1415;.1416;Q;.14111;@15;K DIE("NO^");
"RTN","DGRPE",33,0)
109 ;;S DIE("NO^")="OUTOK";.111;S:X="" Y="@1112";.112;S:X="" Y="@1112";.113;@1112;S EASZIPLK=1;.1112;K EASDO2;.114;S:'$$KEY^DGREGDD1(DUZ,DA) Y=.131;.115;.117;.131;.132;.121;.02;D 109DR^DGRPE;6;2;K DR(2,2.02),DR(2,2.06);.05;.08;K DIE("NO^");
"RTN","DGRPE",34,0)
105000 ;;.1212;S:X']"" Y=.1214;.1213:.1215;.12112;Q;.12111;.1219;@15;K DIE("NO^");
"RTN","DGRPE",35,0)
201 ;;.02;.05;.08;.092;.093;.2401:.2403;57.4//NOT APPLICABLE;
"RTN","DGRPE",36,0)
202 ;;1010.15//NO;S:X'="Y" Y="@22";S DIE("NO^")="";1010.152;I X']"" W !?4,*7,"But I need to know where you were treated most recently." S Y=1010.15;1010.151;1010.154;S:X']"" Y="@22";1010.153;@22;K DIE("NO^");
"RTN","DGRPE",37,0)
203 ;;D 203DR^DGRPE;6ETHNICITY;2RACE;K DR(2,2.02),DR(2,2.06);
"RTN","DGRPE",38,0)
301 ;;.211;S:X']"" Y="@31";.212;.2125//NO;I X="Y" S DGADD=".21" D AD^DGRPE S Y=.21011;.213;S:X']"" Y=.216;.214;S:X']"" Y=.216;.215:.217;.2207;.219;.21011;@31;
"RTN","DGRPE",39,0)
302 ;;.2191;S:X']"" Y="@32";.2192;.21925//NO;I X="Y" S DGADD=".211" D AD^DGRPE S Y=.211011;
"RTN","DGRPE",40,0)
302000 ;;.2193;S:X']"" Y=.2196;.2194;S:X']"" Y=.2196;.2195:.2197;.2203;.2199;.211011;@32;
"RTN","DGRPE",41,0)
303 ;;N DGX1;I $S('$D(^DPT(DFN,.21)):1,$P(^(.21),"^",1)']"":1,1:0) S Y=.331;.3305//NO;I X="Y" S DGX1=1 S X=$S($D(^DPT(DA,.21)):^(.21),1:"") S:X]"" ^(.33)=$P(X_"^^^^^^^^^^^","^",1,9)_"^"_$P(^(.33),"^",10)_"^"_$P(X,"^",11);
"RTN","DGRPE",42,0)
303000 ;;I $G(DGX1) S:$D(^DPT(DFN,.22)) $P(^(.22),U,1)=$P(^(.22),U,7);S:$G(DGX1) Y=.33011;.331;S:X']"" Y="@33";.332;.333;S:X']"" Y=.336;.334;S:X']"" Y=.336;.335:.337;.2201;.339;.33011;S DGX1=0;@33;
"RTN","DGRPE",43,0)
304 ;;.3311;S:X']"" Y="@34";.3312;.3313;S:X']"" Y=.3316;.3314;S:X']"" Y=.3316;.3315:.3317;.2204;.3319;.331011;@34;
"RTN","DGRPE",44,0)
305 ;;N DGX1;I $S('$D(^DPT(DFN,.21)):1,$P(^(.21),"^",1)']"":1,1:0) S Y=.341;.3405//NO;I X="Y" S DGX1=1 S X=$S($D(^DPT(DA,.21)):^(.21),1:"") S:X]"" ^(.34)=$P(X_"^^^^^^^^^^^","^",1,9)_"^"_$P(^(.34),"^",10)_"^"_$P(X,"^",11);
"RTN","DGRPE",45,0)
305000 ;;I $G(DGX1)&($D(^DPT(DFN,.22))) S $P(^(.22),U,2)=$P(^(.22),U,7);S:$G(DGX1) Y="@35";.341;S:X']"" Y="@35";.342;.343;S:X']"" Y=.346;.344;S:X']"" Y=.346;.345:.347;.2202;.349;.34011;S DGX1=0;@35;
"RTN","DGRPE",46,0)
401 ;;.07;.31115;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@41";.3111;S:X']"" Y="@41";.3113;S:X']"" Y=.3116;.3114;S:X']"" Y=.3116;.3115:.3117;.2205;.3119;@41;
"RTN","DGRPE",47,0)
402 ;;.2514;.2515;I $S(X']"":1,X=3:1,X=9:1,1:0) S Y="@42";.251;S:X']"" Y="@42";.252;S:X']"" Y=.255;.253;S:X']"" Y=.255;.254:.256;.2206;.258;@42;
"RTN","DGRPE",48,0)
501 ;;
"RTN","DGRPE",49,0)
502 ;;.381;.382///NOW;
"RTN","DGRPE",50,0)
503 ;;.383;
"RTN","DGRPE",51,0)
601 ;;.325;S:X']"" Y="@61";.328;.326;.327;.324;.3285//NO;S:X'="Y" Y="@61";.3291;S:X']"" Y="@61";.3294;.3292;.3293;.329;.32945//NO;S:X'="Y" Y="@61";.3296;S:X']"" Y="@61";.3299;.3297;.3298;.3295;@61;
"RTN","DGRPE",52,0)
602 ;;.525//NO;S:X'="Y" Y="@62";.526:.528;@62;
"RTN","DGRPE",53,0)
603 ;;.5291//NO;S:X'="Y" Y="@63";.5292:.5294;@63;
"RTN","DGRPE",54,0)
604 ;;.32101//NO;S:X'="Y" Y="@64";.32104;.32105;@64;
"RTN","DGRPE",55,0)
605 ;;.32102//NO;S:X'="Y" Y="@65";.32107;.32109;.3211;.3213;@65;
"RTN","DGRPE",56,0)
606 ;;.32103//NO;S:X'="Y" Y="@66";.3212;.32111;@66;
"RTN","DGRPE",57,0)
607 ;;.3221//NO;S:X'="Y" Y="@67";.3222;Q;.3223;@67;
"RTN","DGRPE",58,0)
608 ;;.3224//NO;S:X'="Y" Y="@68";.3225;Q;.3226;@68;
"RTN","DGRPE",59,0)
609 ;;.3227//NO;S:X'="Y" Y="@69";.3228;Q;.3229;@69;
"RTN","DGRPE",60,0)
610 ;;.32201//NO;S:X'="Y" Y="@610";.322011;Q;.322012;@610;
"RTN","DGRPE",61,0)
611 ;;.322016//NO;S:X'="Y" Y="@611";.322017;Q;.322018;@611;
"RTN","DGRPE",62,0)
612 ;;.322013//NO;S:X'="Y" Y="@612";.322014;Q;.322015;@612;
"RTN","DGRPE",63,0)
613 ;;.362;
"RTN","DGRPE",64,0)
614 ;;.368//NO;.369//NO;I $S('$D(^DPT(DA,.36)):1,$P(^(.36),U,8)="Y"!($P(^(.36),U,9)="Y"):0,1:1) S Y="@614";.37;@614;
"RTN","DGRPE",65,0)
615 ;;.322019//NO;S:X'="Y" Y="@615";.32202;Q;.322021;@615;
"RTN","DGRPE",66,0)
616 ;;S DGPHFLG=0;.531;S:X'="Y" DGX=X,Y="@616";.532///^S X="PENDING";S Y="@6161";@616;S:DGX'="N" Y="@6162";.533///^S X="VAMC";@6161;S DGPHFLG=1;.535///^S X=$$DIV^DGRPLE();@6162;
"RTN","DGRPE",67,0)
617 ;;D REG^DGNTQ(DFN);
"RTN","DGRPE",68,0)
AD N DGZ4,DGPC
"RTN","DGRPE",69,0)
 S X=$S($D(^DPT(DA,.11)):^(.11),1:""),DGZ4=$P(X,U,12),DGPHONE=$S($D(^(.13)):$P(^(.13),U,1),1:""),Y=$S($D(^(DGADD)):^(DGADD),1:""),^(DGADD)=$P(Y,U,1)_U_$P(Y,U,2)_U_$P(X,U,1,6)_U_DGPHONE_U_$P(Y,U,10)
"RTN","DGRPE",70,0)
 I DGZ4 S DGPC=$S((DGADD=.33):1,(DGADD=.34):2,(DGADD=.211):3,(DGADD=.331):4,(DGADD=.311):5,(DGADD=.25):6,(DGADD=.21):7,1:0) S:DGPC $P(^DPT(DFN,.22),U,DGPC)=DGZ4
"RTN","DGRPE",71,0)
 K DGADD,DGPHONE Q
"RTN","DGRPE",72,0)
109DR ;Drop through (use same logic as 203DR)
"RTN","DGRPE",73,0)
203DR S DR(2,2.02)=".01RACE;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.02,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2031"";.02;@2031;"
"RTN","DGRPE",74,0)
 S DR(2,2.06)=".01ETHNICITY;I $P($G(^DIC(10.3,+$P($G(^DPT(DA(1),.06,DA,0)),""^"",2),0)),""^"",2)=""S"" S Y=""@2032"";.02;@2032;"
"RTN","DGRPE",75,0)
 Q
"RTN","DGRPE",76,0)
DR111 ;Set DR string for Confidential Address categories
"RTN","DGRPE",77,0)
 S DR(2,2.141)=".01;1//YES;"
"RTN","DGRPE",78,0)
 Q
"RTN","DGUTL3")
0^3^B8044412
"RTN","DGUTL3",1,0)
DGUTL3 ;ALB/MTC - ELIGIBILITY UTILITIES ; 3/10/03 3:41pm
"RTN","DGUTL3",2,0)
 ;;5.3;Registration;**114,506**;Aug 13, 1993
"RTN","DGUTL3",3,0)
 ;
"RTN","DGUTL3",4,0)
 Q
"RTN","DGUTL3",5,0)
ELIG(DFN,SOURCE,DEFAULT) ;-- This function will prompt for the eligibility for a patient. If
"RTN","DGUTL3",6,0)
 ;   only one eligibility then it will be returned without prompting.
"RTN","DGUTL3",7,0)
 ;
"RTN","DGUTL3",8,0)
 ;   INPUT:  DFN - Patient
"RTN","DGUTL3",9,0)
 ;           SOURCE - (1:PTF,2:ADMISSION,3:TRANSFER)
"RTN","DGUTL3",10,0)
 ;           DEFALUT - IEN from file 8.1
"RTN","DGUTL3",11,0)
 ;  OUTPUT:  IEN of file 8^Name
"RTN","DGUTL3",12,0)
 ;
"RTN","DGUTL3",13,0)
 ;
"RTN","DGUTL3",14,0)
 N RESULT,VAEL,ALLEL,EMP,X,DGDEF,Y
"RTN","DGUTL3",15,0)
 ;
"RTN","DGUTL3",16,0)
 ;-- get eligility codes
"RTN","DGUTL3",17,0)
 D GETEL(DFN)
"RTN","DGUTL3",18,0)
 S DGDEF=$P($G(^DIC(8,+$G(DEFAULT),0)),U)
"RTN","DGUTL3",19,0)
 I DGDEF'="" S DGDEF=DEFAULT_U_DGDEF
"RTN","DGUTL3",20,0)
 ;
"RTN","DGUTL3",21,0)
 S RESULT="",EMP=$P(VAEL(1),U,2),ALLEL=U_EMP
"RTN","DGUTL3",22,0)
 I '$D(VAEL) G ELIGQ
"RTN","DGUTL3",23,0)
 I $D(VAEL(1))=1 S RESULT=VAEL(1) G ELIGQ
"RTN","DGUTL3",24,0)
 ;-- if no default set default to primary eligibility
"RTN","DGUTL3",25,0)
 I DGDEF="" S DGDEF=VAEL(1)
"RTN","DGUTL3",26,0)
 ;
"RTN","DGUTL3",27,0)
DISP ;-- display choices
"RTN","DGUTL3",28,0)
 W !,"THIS PATIENT HAS OTHER ENTITLED ELIGIBILITIES:"
"RTN","DGUTL3",29,0)
 W !?5,$P(VAEL(1),U,2)
"RTN","DGUTL3",30,0)
 S X="" F  S X=$O(VAEL(1,X)) Q:X'>0  D
"RTN","DGUTL3",31,0)
 . W !?5,$P(VAEL(1,X),U,2)
"RTN","DGUTL3",32,0)
 . S ALLEL=ALLEL_U_$P(VAEL(1,X),U,2)
"RTN","DGUTL3",33,0)
 ;
"RTN","DGUTL3",34,0)
 ;-- prompt for eligibility codes
"RTN","DGUTL3",35,0)
 ;
"RTN","DGUTL3",36,0)
1 W !,"ENTER THE ELIGIBILITY FOR THIS "_$S(SOURCE=1:"MOVEMENT",SOURCE=2:"ADMISSION",SOURCE=3:"TRANSFER",1:"PATIENT")_": "_$P(DGDEF,U,2)_"// "
"RTN","DGUTL3",37,0)
 R X:DTIME
"RTN","DGUTL3",38,0)
 ;-- if timeout
"RTN","DGUTL3",39,0)
 G ELIGQ:'$T
"RTN","DGUTL3",40,0)
 ;-- if ^
"RTN","DGUTL3",41,0)
 G ELIGQ:X[U
"RTN","DGUTL3",42,0)
 ;-- if default (primary) quit
"RTN","DGUTL3",43,0)
 I X="" S RESULT=DGDEF G ELIGQ
"RTN","DGUTL3",44,0)
 ;-- find eligibility
"RTN","DGUTL3",45,0)
 S X=$$UPPER^VALM1(X)
"RTN","DGUTL3",46,0)
 G DISP:X["?",1:ALLEL'[(U_X)
"RTN","DGUTL3",47,0)
 ;
"RTN","DGUTL3",48,0)
 S EMP=X_$P($P(ALLEL,U_X,2),U) W $P($P(ALLEL,U_X,2),U)
"RTN","DGUTL3",49,0)
 I $P(VAEL(1),U,2)=EMP S RESULT=VAEL(1) G ELIGQ
"RTN","DGUTL3",50,0)
 S X="" F  S X=$O(VAEL(1,X)) Q:X'>0  D
"RTN","DGUTL3",51,0)
 . I $P(VAEL(1,X),U,2)=EMP S RESULT=X_U_EMP
"RTN","DGUTL3",52,0)
 ;
"RTN","DGUTL3",53,0)
ELIGQ ;
"RTN","DGUTL3",54,0)
 K VAEL
"RTN","DGUTL3",55,0)
 Q +RESULT
"RTN","DGUTL3",56,0)
 ;
"RTN","DGUTL3",57,0)
GETEL(DFN) ;-- This function will get the eligibilities for the patient
"RTN","DGUTL3",58,0)
 ;  specified by DFN and return all the active eligibilities in the
"RTN","DGUTL3",59,0)
 ;  ARRAY specified.
"RTN","DGUTL3",60,0)
 ;
"RTN","DGUTL3",61,0)
 ;  INPUT:  DFN - Patient
"RTN","DGUTL3",62,0)
 ;
"RTN","DGUTL3",63,0)
 D ELIG^VADPT
"RTN","DGUTL3",64,0)
 Q
"RTN","DGUTL3",65,0)
 ;
"RTN","DGUTL3",66,0)
GETDEL(DFN,START,END) ;-- This function will scan the Eligibility Date
"RTN","DGUTL3",67,0)
 ; Sensitive file #8.3 for all active eligibilities for a date range.
"RTN","DGUTL3",68,0)
 ;
"RTN","DGUTL3",69,0)
 N DGI,DGJ,DGK
"RTN","DGUTL3",70,0)
 ;
"RTN","DGUTL3",71,0)
 S DGI=0 F  S DGI=$O(^VAEL(8.3,"AE",DFN,DGI)) Q:DGI=""  D
"RTN","DGUTL3",72,0)
 . S DGJ=$O(^VAEL(8.3,"AE",DFN,DGI,0)),DGK=^(DGJ)
"RTN","DGUTL3",73,0)
 . I $P(DGK,U,2) S VAEL(1)=DGI_U_$P($G(^DIC(8,DGI,0)),U)
"RTN","DGUTL3",74,0)
 . I '$P(DGK,U,2) S VAEL(1,DGI)=DGI_U_$P($G(^DIC(8,DGI,0)),U)
"RTN","DGUTL3",75,0)
 Q
"RTN","DGUTL3",76,0)
 ;
"RTN","DGUTL3",77,0)
ASKPR(DFN) ;-- This function will ask the user for the primary eligibility.
"RTN","DGUTL3",78,0)
 ;
"RTN","DGUTL3",79,0)
 N RESULT,VAEL,ALLEL,EMP,X,DGDEF,Y
"RTN","DGUTL3",80,0)
 ;
"RTN","DGUTL3",81,0)
 ;-- get eligility codes
"RTN","DGUTL3",82,0)
 S DEFAULT=$O(^VAEL(8.3,"AP",DFN,0))
"RTN","DGUTL3",83,0)
 S DGDEF=$P($G(^DIC(8,+$G(DEFAULT),0)),U)
"RTN","DGUTL3",84,0)
 I DGDEF'="" S DGDEF=DEFAULT_U_DGDEF
"RTN","DGUTL3",85,0)
 ;
"RTN","DGUTL3",86,0)
 S RESULT=""
"RTN","DGUTL3",87,0)
 ;
"RTN","DGUTL3",88,0)
TRY W !,"PRIMARY ELIGIBILITY CODE: "_$P(DGDEF,U,2)_"// "
"RTN","DGUTL3",89,0)
 R X:DTIME
"RTN","DGUTL3",90,0)
 ;-- if timeout
"RTN","DGUTL3",91,0)
 G PRIMQ:'$T
"RTN","DGUTL3",92,0)
 ;-- if ^
"RTN","DGUTL3",93,0)
 G PRIMQ:X[U
"RTN","DGUTL3",94,0)
 ;-- find eligibility
"RTN","DGUTL3",95,0)
 S X=$$UPPER^VALM1(X)
"RTN","DGUTL3",96,0)
 ;
"RTN","DGUTL3",97,0)
PRIMQ ;
"RTN","DGUTL3",98,0)
 K VAEL
"RTN","DGUTL3",99,0)
 Q +RESULT
"RTN","DGUTL3",100,0)
 ;
"RTN","DGUTL3",101,0)
BADADR(DFN) ;does this patient have a bad address?
"RTN","DGUTL3",102,0)
 ;
"RTN","DGUTL3",103,0)
 Q:'$G(DFN) ""
"RTN","DGUTL3",104,0)
 Q $P($G(^DPT(DFN,.11)),"^",16)
"RTN","DGUTL3",105,0)
 ;
"RTN","DGUTL3",106,0)
DELBAI(DFN) ;delete bad address indicator
"RTN","DGUTL3",107,0)
 N FDA,IENS
"RTN","DGUTL3",108,0)
 Q:'$G(DFN)
"RTN","DGUTL3",109,0)
 S IENS=DFN_",",FDA(2,IENS,.121)="@"
"RTN","DGUTL3",110,0)
 D FILE^DIE("E","FDA")
"RTN","DGUTL3",111,0)
 Q
"VER")
8.0^22
"^DD",2,2,.118,0)
ADDRESS CHANGE DT/TM^D^^.11;13^S %DT="ESTX" D ^%DT S X=Y K:X<1 X
"^DD",2,2,.118,1,0)
^.1^^-1
"^DD",2,2,.118,1,1,0)
^^TRIGGER^2^.119
"^DD",2,2,.118,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X="VAMC" S DIH=$G(^DPT(DIV(0),.11)),DIV=X S $P(^(.11),U,14)=DIV,DIH=2,DIG=.119 D ^DICR
"^DD",2,2,.118,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^DPT(D0,.11)):^(.11),1:"") S X=$P(Y(1),U,14),X=X S DIU=X K Y S X=DIV S X="VAMC" S DIH=$G(^DPT(DIV(0),.11)),DIV=X S $P(^(.11),U,14)=DIV,DIH=2,DIG=.119 D ^DICR
"^DD",2,2,.118,1,1,"%D",0)
^.101^5^5^3030306^^
"^DD",2,2,.118,1,1,"%D",1,0)
This cross-reference will update the Address Source field when 
"^DD",2,2,.118,1,1,"%D",2,0)
address data changes for a patient.  The source will be set to 'VAMC', 
"^DD",2,2,.118,1,1,"%D",3,0)
and should be overwritten for instances where the Address source is 
"^DD",2,2,.118,1,1,"%D",4,0)
something different.  The incoming Z05 process has been updated to 
"^DD",2,2,.118,1,1,"%D",5,0)
overwrite this field as appropriate.
"^DD",2,2,.118,1,1,"CREATE VALUE")
S X="VAMC"
"^DD",2,2,.118,1,1,"DELETE VALUE")
S X="VAMC"
"^DD",2,2,.118,1,1,"FIELD")
ADDRESS CHANGE SOURCE
"^DD",2,2,.118,3)
(No range limit on date)
"^DD",2,2,.118,5,1,0)
2^.111^4
"^DD",2,2,.118,5,2,0)
2^.1112^3
"^DD",2,2,.118,5,3,0)
2^.112^4
"^DD",2,2,.118,5,4,0)
2^.113^3
"^DD",2,2,.118,5,5,0)
2^.114^3
"^DD",2,2,.118,5,6,0)
2^.115^4
"^DD",2,2,.118,5,7,0)
2^.116^3
"^DD",2,2,.118,9)
^
"^DD",2,2,.118,21,0)
^^1^1^3020702^
"^DD",2,2,.118,21,1,0)
This field will hold the date and time of the last Address Update.
"^DD",2,2,.118,"DT")
3030306
"^DD",2,2,.121,0)
BAD ADDRESS INDICATOR^S^1:UNDELIVERABLE;2:HOMELESS;3:OTHER;^.11;16^Q
"^DD",2,2,.121,3)
Please enter 1 if the address is 'UNDELIVERABLE', 2 if the patient is 'HOMELESS', or 3 for 'OTHER' bad address reasons.
"^DD",2,2,.121,21,0)
^^16^16^3030306^^
"^DD",2,2,.121,21,1,0)
The Bad Address Indicator field applies to the address at which the patient
"^DD",2,2,.121,21,2,0)
resides.  This field should be set as follows (if applicable):
"^DD",2,2,.121,21,3,0)
 
"^DD",2,2,.121,21,4,0)
    "UNDELIVERABLE" - Bad Address based on returned mail.
"^DD",2,2,.121,21,5,0)
    "HOMELESS" - Patient is known to be homeless.
"^DD",2,2,.121,21,6,0)
    "OTHER" - Other Bad Address Reason
"^DD",2,2,.121,21,7,0)
 
"^DD",2,2,.121,21,8,0)
Setting this field will prevent a Bad Address from being shared with HEC
"^DD",2,2,.121,21,9,0)
and other VAMC facilities. It will also be used to block Means Test 
"^DD",2,2,.121,21,10,0)
Renewal Letters from being sent.
"^DD",2,2,.121,21,11,0)

"^DD",2,2,.121,21,12,0)
Once the Bad Address Indicator is set, incoming "newer" addresses, and/or
"^DD",2,2,.121,21,13,0)
manual address updates by VAMC site staff will automatically remove the
"^DD",2,2,.121,21,14,0)
Bad Address Indicator, and allow the "updated" address to be transmitted
"^DD",2,2,.121,21,15,0)
to HEC and other VAMC facilities.
"^DD",2,2,.121,21,16,0)

"^DD",2,2,.121,23,0)
^^9^9^3030306^^
"^DD",2,2,.121,23,1,0)
This field is being used in conjunction with Patient Address fields
"^DD",2,2,.121,23,2,0)
.111, .1112, .112, .113, .114, .115, .116, and .117, which are located
"^DD",2,2,.121,23,3,0)
in the Patient (#2) file.
"^DD",2,2,.121,23,4,0)

"^DD",2,2,.121,23,5,0)
A programmer API, $$BADADR^DGUTL3(DFN) will allow the return of the Bad
"^DD",2,2,.121,23,6,0)
Address Indicator.  The following parameters are used:
"^DD",2,2,.121,23,7,0)

"^DD",2,2,.121,23,8,0)
Input Parameter: DFN - internal entry number for the Patient file (#2)
"^DD",2,2,.121,23,9,0)
   Return value: internal value of the Bad Address Indicator or <null>
"^DD",2,2,.121,"DT")
3030306
**INSTALL NAME**
IVM*2.0*76
"BLD",4201,0)
IVM*2.0*76^INCOME VERIFICATION MATCH^0^3030508^y
"BLD",4201,4,0)
^9.64PA^^
"BLD",4201,"KRN",0)
^9.67PA^8989.52^19
"BLD",4201,"KRN",.4,0)
.4
"BLD",4201,"KRN",.401,0)
.401
"BLD",4201,"KRN",.402,0)
.402
"BLD",4201,"KRN",.403,0)
.403
"BLD",4201,"KRN",.5,0)
.5
"BLD",4201,"KRN",.84,0)
.84
"BLD",4201,"KRN",3.6,0)
3.6
"BLD",4201,"KRN",3.8,0)
3.8
"BLD",4201,"KRN",9.2,0)
9.2
"BLD",4201,"KRN",9.8,0)
9.8
"BLD",4201,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",4201,"KRN",9.8,"NM",1,0)
IVMPTRNA^^0^B9005299
"BLD",4201,"KRN",9.8,"NM",2,0)
IVMPTRN8^^0^B49056702
"BLD",4201,"KRN",9.8,"NM","B","IVMPTRN8",2)

"BLD",4201,"KRN",9.8,"NM","B","IVMPTRNA",1)

"BLD",4201,"KRN",19,0)
19
"BLD",4201,"KRN",19.1,0)
19.1
"BLD",4201,"KRN",101,0)
101
"BLD",4201,"KRN",409.61,0)
409.61
"BLD",4201,"KRN",771,0)
771
"BLD",4201,"KRN",870,0)
870
"BLD",4201,"KRN",8989.51,0)
8989.51
"BLD",4201,"KRN",8989.52,0)
8989.52
"BLD",4201,"KRN",8994,0)
8994
"BLD",4201,"KRN","B",.4,.4)

"BLD",4201,"KRN","B",.401,.401)

"BLD",4201,"KRN","B",.402,.402)

"BLD",4201,"KRN","B",.403,.403)

"BLD",4201,"KRN","B",.5,.5)

"BLD",4201,"KRN","B",.84,.84)

"BLD",4201,"KRN","B",3.6,3.6)

"BLD",4201,"KRN","B",3.8,3.8)

"BLD",4201,"KRN","B",9.2,9.2)

"BLD",4201,"KRN","B",9.8,9.8)

"BLD",4201,"KRN","B",19,19)

"BLD",4201,"KRN","B",19.1,19.1)

"BLD",4201,"KRN","B",101,101)

"BLD",4201,"KRN","B",409.61,409.61)

"BLD",4201,"KRN","B",771,771)

"BLD",4201,"KRN","B",870,870)

"BLD",4201,"KRN","B",8989.51,8989.51)

"BLD",4201,"KRN","B",8989.52,8989.52)

"BLD",4201,"KRN","B",8994,8994)

"BLD",4201,"QUES",0)
^9.62^^
"BLD",4201,"REQB",0)
^9.611^2^2
"BLD",4201,"REQB",1,0)
IVM*2.0*58^2
"BLD",4201,"REQB",2,0)
IVM*2.0*77^2
"BLD",4201,"REQB","B","IVM*2.0*58",1)

"BLD",4201,"REQB","B","IVM*2.0*77",2)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
76^3030508^123456797
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IVMPTRN8")
0^2^B49056702
"RTN","IVMPTRN8",1,0)
IVMPTRN8 ;ALB/RKS/PDJ/BRM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER ; 5/2/03 12:43pm
"RTN","IVMPTRN8",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**9,11,19,12,21,17,24,36,37,47,48,42,34,77,76**; 21-OCT-94
"RTN","IVMPTRN8",3,0)
 ;
"RTN","IVMPTRN8",4,0)
 ;
"RTN","IVMPTRN8",5,0)
BUILD(DFN,IVMMTDT,IVMCT,IVMQUERY) ; --
"RTN","IVMPTRN8",6,0)
 ;  Description: This entry point will be used to create an HL7 
"RTN","IVMPTRN8",7,0)
 ;  "Full Data Transmission" message for a patient.
"RTN","IVMPTRN8",8,0)
 ;
"RTN","IVMPTRN8",9,0)
 ;  Input:
"RTN","IVMPTRN8",10,0)
 ;        DFN - Patient IEN
"RTN","IVMPTRN8",11,0)
 ;    IVMMTDT - date of the patient's Means Test or Copay Test
"RTN","IVMPTRN8",12,0)
 ;      IVMCT - count of hl7 segments transmitted, pass by reference
"RTN","IVMPTRN8",13,0)
 ;   IVMQUERY - array passed in by reference where
"RTN","IVMPTRN8",14,0)
 ;    IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",15,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",16,0)
 ;                last treatment date
"RTN","IVMPTRN8",17,0)
 ;    IVMQUERY("OVIS") -- # of the QUERY that is currently open or
"RTN","IVMPTRN8",18,0)
 ;                undefined, zero, or null if no QUERY opened for
"RTN","IVMPTRN8",19,0)
 ;                finding outpatient visits
"RTN","IVMPTRN8",20,0)
 ;
"RTN","IVMPTRN8",21,0)
 ;  HL7 variables as defined by call to INIT^IVMUFNC:
"RTN","IVMPTRN8",22,0)
 ;      HLEVN - HL7 message event counter 
"RTN","IVMPTRN8",23,0)
 ;      HLSDT - a flag that indicates that the data to be sent is
"RTN","IVMPTRN8",24,0)
 ;              stored in the ^TMP("HLS") global array.
"RTN","IVMPTRN8",25,0)
 ;
"RTN","IVMPTRN8",26,0)
 ;  The following variables returned by the INIT^HLTRANS entry point:
"RTN","IVMPTRN8",27,0)
 ;    HLNDAP - Non-DHCP Application Pointer from file 770
"RTN","IVMPTRN8",28,0)
 ;   HLNDAP0 - Zero node from file 770 corresponding to HLNDAP
"RTN","IVMPTRN8",29,0)
 ;     HLDAP - DHCP Application Pointer from file 771
"RTN","IVMPTRN8",30,0)
 ;     HLDAN - The DHCP Application Name (.01 field, file 771) for HLDAP
"RTN","IVMPTRN8",31,0)
 ;     HLPID - HL7 processing ID from file 770
"RTN","IVMPTRN8",32,0)
 ;     HLVER - HL7 version number from file 770
"RTN","IVMPTRN8",33,0)
 ;      HLFS - HL7 Field Separator from the 'FS' node of file 771
"RTN","IVMPTRN8",34,0)
 ;     HLECH - HL7 Encoding Characters from the 'EC' node of file 771
"RTN","IVMPTRN8",35,0)
 ;       HLQ - Double quotes ("") for use in building HL7 segments
"RTN","IVMPTRN8",36,0)
 ;     HLERR - if an error is encountered, an error message is returned
"RTN","IVMPTRN8",37,0)
 ;             in the HLERR variable.
"RTN","IVMPTRN8",38,0)
 ;      HLDA - the internal entry number for the entry created in
"RTN","IVMPTRN8",39,0)
 ;             file #772.
"RTN","IVMPTRN8",40,0)
 ;      HLDT - transmission date/time (associated with the entry in file
"RTN","IVMPTRN8",41,0)
 ;             #772 identified by HLDA) in internal VA FileMan format.
"RTN","IVMPTRN8",42,0)
 ;     HLDT1 - the same transmission date/time as the HLDT variable, 
"RTN","IVMPTRN8",43,0)
 ;             only in HL7 format.
"RTN","IVMPTRN8",44,0)
 ;
"RTN","IVMPTRN8",45,0)
 ; Output:
"RTN","IVMPTRN8",46,0)
 ;  ^TMP("HLS",$J,IVMCT) - global array containing all segments of the HL7 message that the VistA application wishes to send.  The HLSDT variable is defined above and the IVMCT variable is a sequential number incremented by 1.
"RTN","IVMPTRN8",47,0)
 ;
"RTN","IVMPTRN8",48,0)
 ;
"RTN","IVMPTRN8",49,0)
 N DGINC,DGIR,DGREL,I,IVMNTE,IVMPID,IVMSUB,IVMZRD,VAFPID,VAFZEL,FBZFE,IVMZCD,DELETE,NODE,IVMPIEN,TEST,IVMPNODE,TESTTYPE,SEQS,TESTCODE,HARDSHIP,ACTVIEN,IVMZMH,IVMSEQ
"RTN","IVMPTRN8",50,0)
 N EDBMTZ06
"RTN","IVMPTRN8",51,0)
 ;
"RTN","IVMPTRN8",52,0)
 ; create (PID) Patient Identification segment
"RTN","IVMPTRN8",53,0)
 S IVMSEQ="3,5,7,8,11,12,13,14,19"
"RTN","IVMPTRN8",54,0)
 ; do not transmit seq 11 and 12 if the Bad Address Indicator is set
"RTN","IVMPTRN8",55,0)
 S:$$BADADR^DGUTL3(DFN) IVMSEQ="3,5,7,8,13,14,19"
"RTN","IVMPTRN8",56,0)
 S IVMPID=$$EN^VAFHLPID(DFN,"1,"_IVMSEQ)        ;add SEQ 1 for PID
"RTN","IVMPTRN8",57,0)
 ;
"RTN","IVMPTRN8",58,0)
 ; **** Add ICN to 2nd piece PID segment for MPI@HEC.
"RTN","IVMPTRN8",59,0)
 S IVMCMOR="1,2"
"RTN","IVMPTRN8",60,0)
 ; check to see if site is a legacy site.  If not add ICN to PID segment.
"RTN","IVMPTRN8",61,0)
 I '$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3))) D
"RTN","IVMPTRN8",62,0)
 .I +$$GETICN^MPIF001(DFN)>0,($$IFLOCAL^MPIF001(DFN)=0) S IVMPID=$$EN^VAFCPID(DFN,"1,2,"_IVMSEQ),IVMCMOR="1,2,3"  ;add SEQ 1 and 2 for PID
"RTN","IVMPTRN8",63,0)
 ;
"RTN","IVMPTRN8",64,0)
 I $D(VAFPID(1)) S IVMPID(1)=VAFPID(1)
"RTN","IVMPTRN8",65,0)
 ; send SSN indicating pseudo
"RTN","IVMPTRN8",66,0)
 ; I $P(IVMPID_$G(IVMPID(1)),HLFS,20)["P" D PSEUDO^IVMPTRN1  ; strip 'P' from pseudo SSNs
"RTN","IVMPTRN8",67,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID
"RTN","IVMPTRN8",68,0)
 I $D(IVMPID(1)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMPID(1)
"RTN","IVMPTRN8",69,0)
 ;
"RTN","IVMPTRN8",70,0)
 ; **** create (PD1) Patient CMOR segment for MPI@HEC.
"RTN","IVMPTRN8",71,0)
 S:'$D(HL("FS")) HL("FS")=HLFS
"RTN","IVMPTRN8",72,0)
 S:'$D(HL("ECH")) HL("ECH")=HLECH
"RTN","IVMPTRN8",73,0)
 S:'$D(HL("Q")) HL("Q")=HLQ
"RTN","IVMPTRN8",74,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLPD1(DFN,IVMCMOR)
"RTN","IVMPTRN8",75,0)
 ;
"RTN","IVMPTRN8",76,0)
 ; create (ZPD) Patient Dependent Info. segment
"RTN","IVMPTRN8",77,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZPD(DFN,"1,8,9,11,12,13,17,19"),IVMINS=$P(^(IVMCT),HLFS,12)
"RTN","IVMPTRN8",78,0)
 ;
"RTN","IVMPTRN8",79,0)
 ; create (ZTA) Temporary Address segment
"RTN","IVMPTRN8",80,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZTA(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",81,0)
 ;
"RTN","IVMPTRN8",82,0)
 ; create (ZIE) Ineligible segment
"RTN","IVMPTRN8",83,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIE(DFN,"1,2,3",1)
"RTN","IVMPTRN8",84,0)
 ;
"RTN","IVMPTRN8",85,0)
 ; create (ZEL) Eligibility segment(s) 
"RTN","IVMPTRN8",86,0)
 ; **** Add 5th piece to ZEL to correct consistency check
"RTN","IVMPTRN8",87,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEL(DFN,"1,2,5,6,7,10,11,13,14,15,16,17,18,19,20,21,23,24,25",2)  ; Primary Eligibility
"RTN","IVMPTRN8",88,0)
 ; - other entitled eligibilities
"RTN","IVMPTRN8",89,0)
 F IVMSUB=0:0 S IVMSUB=+$O(VAFZEL(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",90,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(VAFZEL(+IVMSUB))
"RTN","IVMPTRN8",91,0)
 ;
"RTN","IVMPTRN8",92,0)
 ; create (ZEN) Enrollment segment
"RTN","IVMPTRN8",93,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEN(DFN)
"RTN","IVMPTRN8",94,0)
 ;
"RTN","IVMPTRN8",95,0)
 ; create (ZCD) Catastrophic Disability segment(s)
"RTN","IVMPTRN8",96,0)
 D BUILD^VAFHLZCD(.IVMZCD,DFN,,HLQ,HLFS)
"RTN","IVMPTRN8",97,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZCD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",98,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZCD(+IVMSUB))
"RTN","IVMPTRN8",99,0)
 ;
"RTN","IVMPTRN8",100,0)
 ; Optionally create (ZMH) Military History segment for Purple Heart
"RTN","IVMPTRN8",101,0)
 D ENTER^VAFHLZMH(DFN,"IVMZMH","13")
"RTN","IVMPTRN8",102,0)
 I $P(IVMZMH(1,0),HLFS,3)="PH","YN"[$E($P(IVMZMH(1,0),HLFS,4)) S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMZMH(1,0)
"RTN","IVMPTRN8",103,0)
 ;
"RTN","IVMPTRN8",104,0)
 ; create (ZRD) Rated Disabilities segment(s)
"RTN","IVMPTRN8",105,0)
 D EN^VAFHLZRD(DFN,"1,2,3,4",HLQ,HLFS,"IVMZRD")
"RTN","IVMPTRN8",106,0)
 F IVMSUB=0:0 S IVMSUB=+$O(IVMZRD(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",107,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$G(IVMZRD(+IVMSUB,0))
"RTN","IVMPTRN8",108,0)
 ;
"RTN","IVMPTRN8",109,0)
 ; create (ZCT) Emergency Contact segment
"RTN","IVMPTRN8",110,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZCT(DFN,"1,2,3,4,5,6,7")
"RTN","IVMPTRN8",111,0)
 ;
"RTN","IVMPTRN8",112,0)
 ; create (ZEM) Employment Info. segment for (1) Patient & (2) Spouse
"RTN","IVMPTRN8",113,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3")
"RTN","IVMPTRN8",114,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZEM(DFN,"1,2,3",2,2)
"RTN","IVMPTRN8",115,0)
 ;
"RTN","IVMPTRN8",116,0)
 ; create (ZGD) Guardian segment for (1) VA & (2) Civil 
"RTN","IVMPTRN8",117,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",1)
"RTN","IVMPTRN8",118,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZGD(DFN,"1,2,3,4,5,6,7,8",2)
"RTN","IVMPTRN8",119,0)
 ;
"RTN","IVMPTRN8",120,0)
 ;get the primary test for the income year
"RTN","IVMPTRN8",121,0)
 S TESTTYPE=$$GETTYPE^IVMPTRN9(DFN,IVMMTDT,.TESTCODE,.HARDSHIP,.ACTVIEN)
"RTN","IVMPTRN8",122,0)
 ;
"RTN","IVMPTRN8",123,0)
 ; The following function call returns:
"RTN","IVMPTRN8",124,0)
 ;   - Patient Relation IEN array in DGREL
"RTN","IVMPTRN8",125,0)
 ;   - Individual Annual Income IEN array in DGINC
"RTN","IVMPTRN8",126,0)
 ;   - Income Relation IEN array in DGINR
"RTN","IVMPTRN8",127,0)
 D ALL^DGMTU21(DFN,"VSC",IVMMTDT,"IPR",ACTVIEN)
"RTN","IVMPTRN8",128,0)
 ;
"RTN","IVMPTRN8",129,0)
 S EDBMTZ06=0 I $$VERZ06^EASPTRN1(DFN) S EDBMTZ06=1
"RTN","IVMPTRN8",130,0)
 ; create (ZIC) Income segment for veteran
"RTN","IVMPTRN8",131,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("V")),"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20")
"RTN","IVMPTRN8",132,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",133,0)
 I $P(^TMP("HLS",$J,IVMCT),"^",3)=HLQ S $P(^TMP("HLS",$J,IVMCT),"^",3)=$$HLDATE^HLFNC($E(IVMMTDT,1,3)-1_"0000")
"RTN","IVMPTRN8",134,0)
 ;
"RTN","IVMPTRN8",135,0)
 ; create (ZIR) Income Relation segment for veteran
"RTN","IVMPTRN8",136,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("V")),"1,2,3,4,5,10")
"RTN","IVMPTRN8",137,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^1"
"RTN","IVMPTRN8",138,0)
 ;
"RTN","IVMPTRN8",139,0)
 ; create (ZDP) Patient Dependent Info. segment for spouse
"RTN","IVMPTRN8",140,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("S")),"1,2,3,4,5,6,7,8,9")
"RTN","IVMPTRN8",141,0)
 I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",142,0)
 .; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",143,0)
 .S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",144,0)
 ;
"RTN","IVMPTRN8",145,0)
 ; create (ZIC) Income segment for spouse
"RTN","IVMPTRN8",146,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("S")),"1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20")
"RTN","IVMPTRN8",147,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",148,0)
 ;
"RTN","IVMPTRN8",149,0)
 ; create (ZIR) Income Relation segment for spouse
"RTN","IVMPTRN8",150,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("S")),"1,2,3")
"RTN","IVMPTRN8",151,0)
 I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",152,0)
 ;
"RTN","IVMPTRN8",153,0)
 ;
"RTN","IVMPTRN8",154,0)
 ; create ZDP, ZIC, and ZIR segments for all Means Test dependents
"RTN","IVMPTRN8",155,0)
 F IVMSUB=0:0 S IVMSUB=$O(DGREL("C",IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",156,0)
 .;
"RTN","IVMPTRN8",157,0)
 .; - create (ZDP) Dependent Info. segment for dependent child
"RTN","IVMPTRN8",158,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZDP(+$G(DGREL("C",IVMSUB)),"1,2,3,4,5,6,7,9")
"RTN","IVMPTRN8",159,0)
 .I $P(^TMP("HLS",$J,IVMCT),HLFS,3)'=HLQ,($P($G(^(IVMCT)),HLFS,6)=HLQ) D
"RTN","IVMPTRN8",160,0)
 ..; - pass non-existant SSNs as 0s
"RTN","IVMPTRN8",161,0)
 ..S $P(X,HLFS,6)="000000000"
"RTN","IVMPTRN8",162,0)
 .;
"RTN","IVMPTRN8",163,0)
 .; - create (ZIC) Income segment for dependent child
"RTN","IVMPTRN8",164,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIC(+$G(DGINC("C",IVMSUB)),"1,2,3,4,5,6,7,8,9,10,11,12,15")
"RTN","IVMPTRN8",165,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIC^"_$P(^TMP("HLS",$J,IVMCT),"^",2,3)
"RTN","IVMPTRN8",166,0)
 .;
"RTN","IVMPTRN8",167,0)
 .; - create (ZIR) Income Relation segment for dependent child
"RTN","IVMPTRN8",168,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=$$EN^VAFHLZIR(+$G(DGINR("C",IVMSUB)),"1,2,3,6,7,8,9")
"RTN","IVMPTRN8",169,0)
 .I EDBMTZ06 S ^TMP("HLS",$J,IVMCT)="ZIR^"_$P(^TMP("HLS",$J,IVMCT),"^",2)
"RTN","IVMPTRN8",170,0)
 .; 
"RTN","IVMPTRN8",171,0)
 ;
"RTN","IVMPTRN8",172,0)
 ; create (ZIO) Inpatient/Outpatient segment for veteran
"RTN","IVMPTRN8",173,0)
 S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="ZIO^1^"_$$EN^IVMUFNC1(DFN,IVMMTDT,.IVMQUERY)_"^"_$$LTD^IVMUFNC(DFN,.IVMQUERY)
"RTN","IVMPTRN8",174,0)
 ;
"RTN","IVMPTRN8",175,0)
 ; create (NTE) Notes and Comments segment
"RTN","IVMPTRN8",176,0)
 D NTE^IVMUFNC4(DFN,.IVMNTE,IVMMTDT)
"RTN","IVMPTRN8",177,0)
 I '$D(IVMNTE) D
"RTN","IVMPTRN8",178,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)="NTE^1"
"RTN","IVMPTRN8",179,0)
 I $D(IVMNTE) D
"RTN","IVMPTRN8",180,0)
 .; - get notes and comments
"RTN","IVMPTRN8",181,0)
 .F IVMSUB=0:0 S IVMSUB=$O(IVMNTE(IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",182,0)
 ..S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=IVMNTE(IVMSUB)
"RTN","IVMPTRN8",183,0)
 ;
"RTN","IVMPTRN8",184,0)
 ; create (IN1) Insurance segment(s) for all active insurance
"RTN","IVMPTRN8",185,0)
 K ^TMP("VAFIN1",$J)
"RTN","IVMPTRN8",186,0)
 D EN^VAFHLIN1(DFN,"1,4,5,7,8,9,12,13,15,16,17,28,36")
"RTN","IVMPTRN8",187,0)
 F IVMSUB=0:0 S IVMSUB=$O(^TMP("VAFIN1",$J,IVMSUB)) Q:'IVMSUB  D
"RTN","IVMPTRN8",188,0)
 .S IVMCT=IVMCT+1,^TMP("HLS",$J,IVMCT)=^TMP("VAFIN1",$J,+IVMSUB,0)
"RTN","IVMPTRN8",189,0)
 ;
"RTN","IVMPTRN8",190,0)
 D GOTO^IVMPTRN9
"RTN","IVMPTRN8",191,0)
 Q
"RTN","IVMPTRNA")
0^1^B9005299
"RTN","IVMPTRNA",1,0)
IVMPTRNA ;ALB/CKN/BRM - HL7 FULL DATA TRANSMISSION (Z07) BUILDER(CONTINUED);30 AUG 2001 ; 3/20/03 11:07am
"RTN","IVMPTRNA",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**46,58,76**; 21-OCT-94
"RTN","IVMPTRNA",3,0)
 Q
"RTN","IVMPTRNA",4,0)
NTROBX(DGNTARR) ;
"RTN","IVMPTRNA",5,0)
 N NTRTEMP,I,CS,RS,SS
"RTN","IVMPTRNA",6,0)
 I $G(HLECH)'="~|\&" N HLECH S HLECH="~|\&"
"RTN","IVMPTRNA",7,0)
 I $G(HLFS)'="^" N HLFS S HLFS="^"
"RTN","IVMPTRNA",8,0)
 S CS=$E(HLECH,1),SS=$E(HLECH,4),RS=$E(HLECH,2)
"RTN","IVMPTRNA",9,0)
 S NTRTEMP("NTR","Y")="1"_CS_"Received NTR Trmt"_CS_"VA0053"
"RTN","IVMPTRNA",10,0)
 S NTRTEMP("AVI","Y")="2"_CS_"Aviator Pre 1955"_CS_"VA0053"
"RTN","IVMPTRNA",11,0)
 S NTRTEMP("SUB","Y")="3"_CS_"Sub Trainee pre 1965"_CS_"VA0053"
"RTN","IVMPTRNA",12,0)
 S NTRTEMP("HNC","Y")="4"_CS_"Dx With Head Neck Cancer"_CS_"VA0053"
"RTN","IVMPTRNA",13,0)
 S NTRTEMP("NTR","N")="5"_CS_"No NTR Trmt"_CS_"VA0053"
"RTN","IVMPTRNA",14,0)
 S NTRTEMP("AVI","N")="6"_CS_"Not Aviator Pre 1955"_CS_"VA0053"
"RTN","IVMPTRNA",15,0)
 S NTRTEMP("SUB","N")="7"_CS_"Not Sub Trainee pre 1965"_CS_"VA0053"
"RTN","IVMPTRNA",16,0)
 S NTRTEMP("HNC","N")="8"_CS_"Not Dx With Head Neck Cancer"_CS_"VA0053"
"RTN","IVMPTRNA",17,0)
 S NTRTEMP("NTR","U")="9"_CS_"NTR Trmt Unknown"_CS_"VA0053"
"RTN","IVMPTRNA",18,0)
 S NTRTEMP("VER","M")="M"_CS_"Military Med Rec"_CS_"VA0052"
"RTN","IVMPTRNA",19,0)
 S NTRTEMP("VER","S")="S"_CS_"Qual Military Srvc"_CS_"VA0052"
"RTN","IVMPTRNA",20,0)
 S NTRTEMP("VER","N")="N"_CS_"Not Qualified"_CS_"VA0052"
"RTN","IVMPTRNA",21,0)
 S NTROBX(2)="CE",NTROBX(3)="VISTA"_CS_"28.11"
"RTN","IVMPTRNA",22,0)
 S NTROBX(5)=""
"RTN","IVMPTRNA",23,0)
 F I="NTR","AVI","SUB","HNC" D
"RTN","IVMPTRNA",24,0)
 . I $G(DGNTARR(I))="" Q
"RTN","IVMPTRNA",25,0)
 . I NTROBX(5)'="" S NTROBX(5)=$G(NTROBX(5))_RS
"RTN","IVMPTRNA",26,0)
 . S NTROBX(5)=$G(NTROBX(5))_$G(NTRTEMP(I,$G(DGNTARR(I))))
"RTN","IVMPTRNA",27,0)
 S NTROBX(11)="F"
"RTN","IVMPTRNA",28,0)
 S NTROBX(12)=$G(DGNTARR("HDT"))
"RTN","IVMPTRNA",29,0)
 S NTROBX(14)=$G(DGNTARR("VDT"))
"RTN","IVMPTRNA",30,0)
 I $G(DGNTARR("VSIT"))'="" D
"RTN","IVMPTRNA",31,0)
 . S NTROBX(15)=$P($G(^DIC(4,DGNTARR("VSIT"),99)),"^")
"RTN","IVMPTRNA",32,0)
 S NTROBX(16)=""
"RTN","IVMPTRNA",33,0)
 I $G(DGNTARR("HSIT"))'="" D
"RTN","IVMPTRNA",34,0)
 . S $P(NTROBX(16),CS,14)=SS_$P($G(^DIC(4,DGNTARR("HSIT"),99)),"^")
"RTN","IVMPTRNA",35,0)
 I $G(DGNTARR("VER"))'="" S NTROBX(17)=$G(NTRTEMP("VER",$G(DGNTARR("VER"))))
"RTN","IVMPTRNA",36,0)
 Q
"RTN","IVMPTRNA",37,0)
RF1(DFN) ; create RF1 segment
"RTN","IVMPTRNA",38,0)
 N X,Y,ADDRSRC,ADRSRC,ADRSIT,ADTDT,I,CS,RS,SS,RETURN,RFDAT,ERR
"RTN","IVMPTRNA",39,0)
 I $G(HLECH)'="~|\&" N HLECH S HLECH="~|\&"
"RTN","IVMPTRNA",40,0)
 I $G(HLFS)'="^" N HLFS S HLFS="^"
"RTN","IVMPTRNA",41,0)
 S CS=$E(HLECH,1),SS=$E(HLECH,4),RS=$E(HLECH,2)
"RTN","IVMPTRNA",42,0)
 ; initialize the RETURN variable
"RTN","IVMPTRNA",43,0)
 S RETURN="RF1",$P(RETURN,HLFS,11)=""
"RTN","IVMPTRNA",44,0)
 Q:'$G(DFN) RETURN
"RTN","IVMPTRNA",45,0)
 Q:$$BADADR^DGUTL3(DFN) RETURN
"RTN","IVMPTRNA",46,0)
 ; get patient data to be used in this message
"RTN","IVMPTRNA",47,0)
 D GETS^DIQ(2,DFN_",",".118;.119;.12","IE","RFDAT","ERR")
"RTN","IVMPTRNA",48,0)
 Q:$D(ERR) RETURN
"RTN","IVMPTRNA",49,0)
 S ADRDT=$$FMTHL7^XLFDT($G(RFDAT(2,DFN_",",.118,"I")))
"RTN","IVMPTRNA",50,0)
 S ADRSRC=$$EXTERNAL^DILFD(2,.119,"",$G(RFDAT(2,DFN_",",.119,"I")))
"RTN","IVMPTRNA",51,0)
 ; only populate the Address Change Site if the Source = VAMC
"RTN","IVMPTRNA",52,0)
 I ADRSRC="VAMC" S ADRSIT=$G(RFDAT(2,DFN_",",.12,"I")) S:ADRSIT]"" ADRSIT=$$GET1^DIQ(4,ADRSIT_",",99)
"RTN","IVMPTRNA",53,0)
 S ADRSRC=$$ADDRCNV(ADRSRC)  ;convert source to HL7 format
"RTN","IVMPTRNA",54,0)
 ; RF1 SEQ 1-5 are not currently used
"RTN","IVMPTRNA",55,0)
 ; RF1 SEQ 6
"RTN","IVMPTRNA",56,0)
 S $P(RETURN,HLFS,7)=$G(ADRSIT)_CS_$G(ADRSRC)
"RTN","IVMPTRNA",57,0)
 ; RF1 SEQ 7
"RTN","IVMPTRNA",58,0)
 S $P(RETURN,HLFS,8)=$G(ADRDT)
"RTN","IVMPTRNA",59,0)
 ; RF1 SEQ 8-11 are not currently used
"RTN","IVMPTRNA",60,0)
 ; quit with completed RF1 segment
"RTN","IVMPTRNA",61,0)
 Q RETURN
"RTN","IVMPTRNA",62,0)
 ;
"RTN","IVMPTRNA",63,0)
ADDRCNV(ADDRSRC) ;convert Address Source to HL7 format
"RTN","IVMPTRNA",64,0)
 Q:$G(ADDRSRC)']"" ""
"RTN","IVMPTRNA",65,0)
 Q:ADDRSRC="HEC" "USVAHEC"
"RTN","IVMPTRNA",66,0)
 Q:ADDRSRC="VAMC" "USVAMC"
"RTN","IVMPTRNA",67,0)
 Q:ADDRSRC="HBSC" "USVAHBSC"
"RTN","IVMPTRNA",68,0)
 Q:ADDRSRC="NCOA" "USNCOA"
"RTN","IVMPTRNA",69,0)
 Q:ADDRSRC="BVA" "USVABVA"
"RTN","IVMPTRNA",70,0)
 Q:ADDRSRC="VAINS" "USVAINS"
"RTN","IVMPTRNA",71,0)
 Q:ADDRSRC="USPS" "USPS"
"RTN","IVMPTRNA",72,0)
 Q ""
"VER")
8.0^22
**INSTALL NAME**
EAS*1.0*29
"BLD",4200,0)
EAS*1.0*29^ENROLLMENT APPLICATION SYSTEM^0^3030508^y
"BLD",4200,4,0)
^9.64PA^^
"BLD",4200,"KRN",0)
^9.67PA^8989.52^19
"BLD",4200,"KRN",.4,0)
.4
"BLD",4200,"KRN",.401,0)
.401
"BLD",4200,"KRN",.402,0)
.402
"BLD",4200,"KRN",.403,0)
.403
"BLD",4200,"KRN",.5,0)
.5
"BLD",4200,"KRN",.84,0)
.84
"BLD",4200,"KRN",3.6,0)
3.6
"BLD",4200,"KRN",3.8,0)
3.8
"BLD",4200,"KRN",9.2,0)
9.2
"BLD",4200,"KRN",9.8,0)
9.8
"BLD",4200,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",4200,"KRN",9.8,"NM",1,0)
EASMTL6^^0^B57689929
"BLD",4200,"KRN",9.8,"NM",2,0)
EASMTL6A^^0^B21185930
"BLD",4200,"KRN",9.8,"NM",3,0)
EASMTUTL^^0^B46847992
"BLD",4200,"KRN",9.8,"NM",4,0)
EASAILK1^^0^B5292629
"BLD",4200,"KRN",9.8,"NM","B","EASAILK1",4)

"BLD",4200,"KRN",9.8,"NM","B","EASMTL6",1)

"BLD",4200,"KRN",9.8,"NM","B","EASMTL6A",2)

"BLD",4200,"KRN",9.8,"NM","B","EASMTUTL",3)

"BLD",4200,"KRN",19,0)
19
"BLD",4200,"KRN",19.1,0)
19.1
"BLD",4200,"KRN",101,0)
101
"BLD",4200,"KRN",409.61,0)
409.61
"BLD",4200,"KRN",771,0)
771
"BLD",4200,"KRN",870,0)
870
"BLD",4200,"KRN",8989.51,0)
8989.51
"BLD",4200,"KRN",8989.52,0)
8989.52
"BLD",4200,"KRN",8994,0)
8994
"BLD",4200,"KRN","B",.4,.4)

"BLD",4200,"KRN","B",.401,.401)

"BLD",4200,"KRN","B",.402,.402)

"BLD",4200,"KRN","B",.403,.403)

"BLD",4200,"KRN","B",.5,.5)

"BLD",4200,"KRN","B",.84,.84)

"BLD",4200,"KRN","B",3.6,3.6)

"BLD",4200,"KRN","B",3.8,3.8)

"BLD",4200,"KRN","B",9.2,9.2)

"BLD",4200,"KRN","B",9.8,9.8)

"BLD",4200,"KRN","B",19,19)

"BLD",4200,"KRN","B",19.1,19.1)

"BLD",4200,"KRN","B",101,101)

"BLD",4200,"KRN","B",409.61,409.61)

"BLD",4200,"KRN","B",771,771)

"BLD",4200,"KRN","B",870,870)

"BLD",4200,"KRN","B",8989.51,8989.51)

"BLD",4200,"KRN","B",8989.52,8989.52)

"BLD",4200,"KRN","B",8994,8994)

"BLD",4200,"QUES",0)
^9.62^^
"BLD",4200,"REQB",0)
^9.611^2^2
"BLD",4200,"REQB",1,0)
EAS*1.0*13^2
"BLD",4200,"REQB",2,0)
EAS*1.0*15^2
"BLD",4200,"REQB","B","EAS*1.0*13",1)

"BLD",4200,"REQB","B","EAS*1.0*15",2)

"MBREQ")
0
"PKG",551,-1)
1^1
"PKG",551,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",551,20,0)
^9.402P^1^1
"PKG",551,20,1,0)
2^^EASXDR
"PKG",551,20,1,1)
 
"PKG",551,20,"B",2,1)

"PKG",551,22,0)
^9.49I^1^1
"PKG",551,22,1,0)
1.0^3010315^3010516^66481
"PKG",551,22,1,"PAH",1,0)
29^3030508^123456797
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","EASAILK1")
0^4^B5292629
"RTN","EASAILK1",1,0)
EASAILK1 ;ALB/BRM - Patient Address Inquiry ; 3/10/03 3:42pm
"RTN","EASAILK1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**13,29**;Mar 15, 2001
"RTN","EASAILK1",3,0)
 ;
"RTN","EASAILK1",4,0)
PATADDR ;view patient address
"RTN","EASAILK1",5,0)
 ;
"RTN","EASAILK1",6,0)
 N OK,PATNAM,POP,FLD,IENS,ARY,PATADDR,ERR,ARRAY
"RTN","EASAILK1",7,0)
 N DTOUT,DUOUT,DIRUT,DIROUT,%ZIS,DIC,DA,DIQ,DLAYGO,Y,X
"RTN","EASAILK1",8,0)
 ;
"RTN","EASAILK1",9,0)
 ; prompt user for patient name and device
"RTN","EASAILK1",10,0)
 S DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","EASAILK1",11,0)
 Q:($D(DTOUT)!$D(DUOUT)!$D(DIRUT)!$D(DIROUT)!(Y=-1))
"RTN","EASAILK1",12,0)
 S %ZIS="Q" D ^%ZIS Q:POP
"RTN","EASAILK1",13,0)
 S IENS=+Y_",",PATNAM=$P(Y,"^",2)
"RTN","EASAILK1",14,0)
 D GETS^DIQ(2,IENS,".111:.121","E","PATADDR","ERR")
"RTN","EASAILK1",15,0)
 U IO
"RTN","EASAILK1",16,0)
 W !?11,"Patient Name: ",?26,PATNAM
"RTN","EASAILK1",17,0)
 ;
"RTN","EASAILK1",18,0)
 ; exit if error occurs during DIQ call
"RTN","EASAILK1",19,0)
 I $D(ERR) W !!?11,"*** Address could not be determined ***",!! G END
"RTN","EASAILK1",20,0)
 ;
"RTN","EASAILK1",21,0)
 ; exit if there is no address for patient
"RTN","EASAILK1",22,0)
 S FLD="",OK=0
"RTN","EASAILK1",23,0)
 F  S FLD=$O(PATADDR(2,IENS,FLD)) Q:'FLD!(OK)  S:$G(PATADDR(2,IENS,FLD,"E"))]"" OK=1
"RTN","EASAILK1",24,0)
 I 'OK W !!?11,"*** No Address On File For This Patient ***",!! G END
"RTN","EASAILK1",25,0)
 ;
"RTN","EASAILK1",26,0)
 ; display address information
"RTN","EASAILK1",27,0)
 W !?8,"Patient Address: ",?26,$S($G(PATADDR(2,IENS,.111,"E"))]"":$G(PATADDR(2,IENS,.111,"E")),1:"UNKNOWN STREET ADDRESS")
"RTN","EASAILK1",28,0)
 W:$G(PATADDR(2,IENS,.112,"E"))]"" !?26,$G(PATADDR(2,IENS,.112,"E"))
"RTN","EASAILK1",29,0)
 W:$G(PATADDR(2,IENS,.113,"E"))]"" !?26,$G(PATADDR(2,IENS,.113,"E"))
"RTN","EASAILK1",30,0)
 W !?26,$S($G(PATADDR(2,IENS,.114,"E"))]"":$G(PATADDR(2,IENS,.114,"E")),1:"UNKNOWN CITY")_", "
"RTN","EASAILK1",31,0)
 W $S($G(PATADDR(2,IENS,.115,"E"))]"":$G(PATADDR(2,IENS,.115,"E")),1:"UNKNOWN STATE")_" "
"RTN","EASAILK1",32,0)
 W:$G(PATADDR(2,IENS,.1112,"E"))]"" $G(PATADDR(2,IENS,.1112,"E"))
"RTN","EASAILK1",33,0)
 W !?2,"Bad Address Indicator: ",?26,$G(PATADDR(2,IENS,.121,"E"))
"RTN","EASAILK1",34,0)
 W !!?4,"Address Change Date: ",?26,$G(PATADDR(2,IENS,.118,"E"))
"RTN","EASAILK1",35,0)
 W !?2,"Address Change Source: ",?26,$G(PATADDR(2,IENS,.119,"E"))
"RTN","EASAILK1",36,0)
 W:$G(PATADDR(2,IENS,.119,"E"))="VAMC" !?4,"Address Change Site: ",?26,$G(PATADDR(2,IENS,.12,"E"))
"RTN","EASAILK1",37,0)
 W !!
"RTN","EASAILK1",38,0)
END ; common exit point - reset device and prompt user for another name
"RTN","EASAILK1",39,0)
 K %ZIS D ^%ZISC,HOME^%ZIS
"RTN","EASAILK1",40,0)
 G PATADDR
"RTN","EASAILK1",41,0)
 Q
"RTN","EASMTL6")
0^1^B57689929
"RTN","EASMTL6",1,0)
EASMTL6 ; ALB/SCK/BRM - AUTOMATED MEANS TEST LETTER-INTERACTIVE PRINT ; 5/1/03 2:49pm
"RTN","EASMTL6",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,14,15,29**;MAR 15,2001
"RTN","EASMTL6",3,0)
 ;
"RTN","EASMTL6",4,0)
EN ; Main entry point
"RTN","EASMTL6",5,0)
 ; Input, set in option call, if not passed in, or called interactively, user is asked to specify.
"RTN","EASMTL6",6,0)
 ;    EATYP - Used for selective printing of letters and forms
"RTN","EASMTL6",7,0)
 ;         1 : 60-Day
"RTN","EASMTL6",8,0)
 ;         2 : 30-Day
"RTN","EASMTL6",9,0)
 ;         4 :  0-Day
"RTN","EASMTL6",10,0)
 ;
"RTN","EASMTL6",11,0)
 N DIR,DIRUT,POP,EASLOC
"RTN","EASMTL6",12,0)
 ;
"RTN","EASMTL6",13,0)
 ;; Select type of letter to print
"RTN","EASMTL6",14,0)
 I '$G(EATYP) D  Q:$D(DIRUT)
"RTN","EASMTL6",15,0)
 . S DIR(0)="SO^1:60-Day;2:30-Day;4:0-Day"
"RTN","EASMTL6",16,0)
 . S DIR("?")="Select the type of letter to print"
"RTN","EASMTL6",17,0)
 . D ^DIR K DIR
"RTN","EASMTL6",18,0)
 . S EATYP=+Y
"RTN","EASMTL6",19,0)
 ;
"RTN","EASMTL6",20,0)
 ;; Select facility filter if appropiate
"RTN","EASMTL6",21,0)
 S EASLOC=-1
"RTN","EASMTL6",22,0)
 I $$GET1^DIQ(713,1,8,"I") D  Q:$D(DIRUT)
"RTN","EASMTL6",23,0)
 . S DIR(0)="YAO",DIR("A")="Filter letters by Preferred Facility? "
"RTN","EASMTL6",24,0)
 . S DIR("B")="NO"
"RTN","EASMTL6",25,0)
 . S DIR("?")="Enter 'YES' to limit letters to a specific Facility or 'NO' to print all letters."
"RTN","EASMTL6",26,0)
 . D ^DIR K DIR
"RTN","EASMTL6",27,0)
 . Q:$D(DIRUT)!('Y)
"RTN","EASMTL6",28,0)
 . S EASLOC=$$FACNUM
"RTN","EASMTL6",29,0)
 ;
"RTN","EASMTL6",30,0)
 K IOP,IO("Q")
"RTN","EASMTL6",31,0)
 ;
"RTN","EASMTL6",32,0)
 S %ZIS="QP",%ZIS("B")=$$GET1^DIQ(713,1,5)
"RTN","EASMTL6",33,0)
 D ^%ZIS K %ZIS
"RTN","EASMTL6",34,0)
 Q:POP
"RTN","EASMTL6",35,0)
 I $D(IO("Q")) D QUE Q
"RTN","EASMTL6",36,0)
 D LTR
"RTN","EASMTL6",37,0)
 D ^%ZISC
"RTN","EASMTL6",38,0)
 K EATYP
"RTN","EASMTL6",39,0)
 Q
"RTN","EASMTL6",40,0)
 ;
"RTN","EASMTL6",41,0)
QUE ; Queue the report
"RTN","EASMTL6",42,0)
 N ZTRTN,ZTDESC,ZTSAVE,ZTSK,ZTDTH,ZTQUEUED
"RTN","EASMTL6",43,0)
 ;
"RTN","EASMTL6",44,0)
 S ZTRTN="LTR^EASMTL6"
"RTN","EASMTL6",45,0)
 S ZTDESC="EAS MT LETTERS PRINT JOB"
"RTN","EASMTL6",46,0)
 S ZTSAVE("EATYP")="",ZTSAVE("EASLOC")=""
"RTN","EASMTL6",47,0)
 S ZTDTH="NOW"
"RTN","EASMTL6",48,0)
 ;
"RTN","EASMTL6",49,0)
 D ^%ZTLOAD
"RTN","EASMTL6",50,0)
 I $D(ZTSK)[0 W !!?5,"Letters canceled!"
"RTN","EASMTL6",51,0)
 E  W !!?5,"Letters queued! [ ",ZTSK," ]"
"RTN","EASMTL6",52,0)
 D HOME^%ZIS
"RTN","EASMTL6",53,0)
 Q
"RTN","EASMTL6",54,0)
 ;
"RTN","EASMTL6",55,0)
LTR ;
"RTN","EASMTL6",56,0)
 N EASTMP,EASKP
"RTN","EASMTL6",57,0)
 ;
"RTN","EASMTL6",58,0)
 S EASTMP="^TMP(""EASMT"",$J)"
"RTN","EASMTL6",59,0)
 K @EASTMP
"RTN","EASMTL6",60,0)
 ;
"RTN","EASMTL6",61,0)
 I '$D(ZTQUEUED) W !,"...Gathering letters to print...Please wait"
"RTN","EASMTL6",62,0)
 D BLD(EATYP,EASLOC,EASTMP,.EASKP)
"RTN","EASMTL6",63,0)
 D RESULT(.EASKP,EATYP)
"RTN","EASMTL6",64,0)
 I '$D(ZTQUEUED) W !,"...Printing letters..."
"RTN","EASMTL6",65,0)
 D PRINT(EASTMP,EATYP)
"RTN","EASMTL6",66,0)
 K @EASTMP,EATYP
"RTN","EASMTL6",67,0)
 Q
"RTN","EASMTL6",68,0)
 ;
"RTN","EASMTL6",69,0)
RESULT(EASKP,EATYP) ; Send results of letter printing to mail group
"RTN","EASMTL6",70,0)
 N MSG,XMSUB,XMY,XMTEXT,XMDUZ,TOT,X1
"RTN","EASMTL6",71,0)
 ;
"RTN","EASMTL6",72,0)
 S MSG(1)="Letters to print: "_$J($FN(EASKP("CNT"),","),8)
"RTN","EASMTL6",73,0)
 S MSG(2)="Letters where the print date has not reached: "_$J($FN(EASKP("T"),","),8)
"RTN","EASMTL6",74,0)
 S MSG(2.5)=""
"RTN","EASMTL6",75,0)
 S MSG(3)="The following letters were found but not printed for the following reasons:"
"RTN","EASMTL6",76,0)
 S MSG(4)="Incomplete/Bad Addr :       "_$J($FN(EASKP("I"),","),8)
"RTN","EASMTL6",77,0)
 S MSG(5)="Deceased :                  "_$J($FN(EASKP("D"),","),8)
"RTN","EASMTL6",78,0)
 S MSG(6)="MT Changed:                 "_$J($FN(EASKP("C"),","),8)
"RTN","EASMTL6",79,0)
 S MSG(7)="Prohibit flag set:          "_$J($FN(EASKP("P"),","),8)
"RTN","EASMTL6",80,0)
 S MSG(8)="MT not 'owned' by facility: "_$J($FN(EASKP("O"),","),8)
"RTN","EASMTL6",81,0)
 S MSG(9)=""
"RTN","EASMTL6",82,0)
 S TOT=0 F X1="I","D","C","P","O","T","CNT" S TOT=TOT+EASKP(X1)
"RTN","EASMTL6",83,0)
 S MSG(10)="Total Letters Processed: "_$J($FN(TOT,","),8)_" (MT not returned)"
"RTN","EASMTL6",84,0)
 ;
"RTN","EASMTL6",85,0)
 S XMSUB=$S(EATYP=1:"60-Day",EATYP=2:"30-Day",1:"0-Day")_" Print Letter Results"
"RTN","EASMTL6",86,0)
 S XMTEXT="MSG("
"RTN","EASMTL6",87,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTL6",88,0)
 S XMDUZ="AUTOMATED MT LETTERS"
"RTN","EASMTL6",89,0)
 D ^XMD
"RTN","EASMTL6",90,0)
 Q
"RTN","EASMTL6",91,0)
 ;
"RTN","EASMTL6",92,0)
BLD(EATYP,EASLOC,EASTMP,EASKP) ; Build TMP array of letters to print
"RTN","EASMTL6",93,0)
 N DFN,EASIEN,COUNT,EAX2,EASPTR,EASABRT
"RTN","EASMTL6",94,0)
 ;
"RTN","EASMTL6",95,0)
 F EAX2="P","D","C","F","T","I","O","CNT" S EASKP(EAX2)=0
"RTN","EASMTL6",96,0)
 S COUNT=0
"RTN","EASMTL6",97,0)
 ;
"RTN","EASMTL6",98,0)
 S EASIEN=0 ; Begin loop through un-returned means tests
"RTN","EASMTL6",99,0)
 F  S EASIEN=$O(^EAS(713.2,"AC",0,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTL6",100,0)
 . S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I") ; Pointer to File 713.1
"RTN","EASMTL6",101,0)
 . ;; begin checks
"RTN","EASMTL6",102,0)
 . Q:$$LTRTYP^EASMTL6B(EASIEN)'=EATYP  ;  Check for appropriate letter type
"RTN","EASMTL6",103,0)
 . S DFN=$P(^EAS(713.1,$P(^EAS(713.2,EASIEN,0),U,2),0),U,1)
"RTN","EASMTL6",104,0)
 . ;; Filter by site, quit if filter not met
"RTN","EASMTL6",105,0)
 . I +$G(EASLOC)>0 Q:$$GET1^DIQ(2,DFN,27.02,"I")'=+EASLOC
"RTN","EASMTL6",106,0)
 . ;; Quit if the MT is not 'owned' by the facility
"RTN","EASMTL6",107,0)
 . I '$$OWNED($P($G(^EAS(713.1,EASPTR,0)),U,1),EASIEN) D  Q
"RTN","EASMTL6",108,0)
 . . S EASKP("O")=EASKP("O")+1
"RTN","EASMTL6",109,0)
 . I $D(^EAS(713.1,"AP",1,EASPTR)) D  Q  ; Check Prohibit letter
"RTN","EASMTL6",110,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",111,0)
 . . S EASKP("P")=EASKP("P")+1
"RTN","EASMTL6",112,0)
 . I $$DECEASED^EASMTUTL(EASIEN) D  Q  ; Check Deceased
"RTN","EASMTL6",113,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",114,0)
 . . S EASKP("D")=EASKP("D")+1
"RTN","EASMTL6",115,0)
 . I $$CHECKMT^EASMTUTL(EASPTR,EASIEN) D  Q  ; Check MT changed?
"RTN","EASMTL6",116,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",117,0)
 . . S EASKP("C")=EASKP("C")+1 Q
"RTN","EASMTL6",118,0)
 . I $$FUTMT^EASMTUTL(EASIEN) D  Q  ; Check for a Future MT
"RTN","EASMTL6",119,0)
 . . D CLRFLG^EASMTUTL(0,EASIEN)
"RTN","EASMTL6",120,0)
 . . S EASKP("F")=EASKP("F")+1
"RTN","EASMTL6",121,0)
 . I '$$THRSHLD(EATYP,EASIEN) D  Q  ; Quit if letter threshold not reached
"RTN","EASMTL6",122,0)
 . . S EASKP("T")=EASKP("T")+1
"RTN","EASMTL6",123,0)
 . I $$CHKADR^EASMTL6A(EASPTR) D  Q  ; Check for valid address
"RTN","EASMTL6",124,0)
 . . S EASKP("I")=EASKP("I")+1
"RTN","EASMTL6",125,0)
 . S @EASTMP@(EASIEN)=EATYP ; Build entry
"RTN","EASMTL6",126,0)
 . S EASKP("CNT")=EASKP("CNT")+1
"RTN","EASMTL6",127,0)
 . I $D(IO("Q")),$$S^%ZTLOAD("STOPPED BY USER") S EASABRT=1
"RTN","EASMTL6",128,0)
 Q
"RTN","EASMTL6",129,0)
 ;
"RTN","EASMTL6",130,0)
OWNED(PTR1,EAIEN) ;  Check - Does this facility "own" this means test
"RTN","EASMTL6",131,0)
 ;  Returns '1' if means test 'owned' by facility
"RTN","EASMTL6",132,0)
 ;          '0' if not owned
"RTN","EASMTL6",133,0)
 ;
"RTN","EASMTL6",134,0)
 N MTNODE,MTLST,MTOWN,RSLT
"RTN","EASMTL6",135,0)
 ;
"RTN","EASMTL6",136,0)
 S RSLT=0
"RTN","EASMTL6",137,0)
 S MTLST=$$LST^DGMTU(PTR1)
"RTN","EASMTL6",138,0)
 I $P(MTLST,U,1)>0 D
"RTN","EASMTL6",139,0)
 . S MTNODE=$G(^DGMT(408.31,$P(MTLST,U,1),0))
"RTN","EASMTL6",140,0)
 . S MTOWN=$$GET1^DIQ(408.34,$P(MTNODE,U,23),.01)
"RTN","EASMTL6",141,0)
 . I MTOWN="VAMC" S RSLT=1 Q
"RTN","EASMTL6",142,0)
 . I MTOWN="DCD",$$VERSION^XPDUTL("IVMC") S RSLT=1
"RTN","EASMTL6",143,0)
 ;
"RTN","EASMTL6",144,0)
 ;; If another facility 'owns' this MT, update MT Status information
"RTN","EASMTL6",145,0)
 I 'RSLT D
"RTN","EASMTL6",146,0)
 . Q:'EAIEN
"RTN","EASMTL6",147,0)
 . S DIE="^EAS(713.2,",DA=EAIEN
"RTN","EASMTL6",148,0)
 . S DR="4///YES;5///TODAY;7///MT 'OWNED' BY ANOTHER FACILITY;9///NO;12///NO;18///NO"
"RTN","EASMTL6",149,0)
 . D ^DIE K DIE
"RTN","EASMTL6",150,0)
 ;
"RTN","EASMTL6",151,0)
 Q RSLT
"RTN","EASMTL6",152,0)
 ;
"RTN","EASMTL6",153,0)
PRINT(EASTMP,EATYP) ; Print letters
"RTN","EASMTL6",154,0)
 N EASIEN,EASABRT
"RTN","EASMTL6",155,0)
 ;
"RTN","EASMTL6",156,0)
 U IO
"RTN","EASMTL6",157,0)
 S EASIEN=0
"RTN","EASMTL6",158,0)
 F  S EASIEN=$O(@EASTMP@(EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTL6",159,0)
 . D LETTER^EASMTL6A(EASIEN,EATYP) ; Print letter
"RTN","EASMTL6",160,0)
 . D UPDSTAT(EASIEN,EATYP) ; Update Letter status file, #713.2
"RTN","EASMTL6",161,0)
 . I $D(IO("Q")),$$S^%ZTLOAD("STOPPED BY USER") S EASABRT=1 Q
"RTN","EASMTL6",162,0)
 . I '$D(IO("Q")),$E(IOST,1,2)="C-" D
"RTN","EASMTL6",163,0)
 . . S DIR(0)="E"
"RTN","EASMTL6",164,0)
 . . D ^DIR K DIR
"RTN","EASMTL6",165,0)
 . . S:'Y EASABRT=1
"RTN","EASMTL6",166,0)
 Q
"RTN","EASMTL6",167,0)
 ;
"RTN","EASMTL6",168,0)
THRSHLD(EATYP,EASIEN) ; Check threshold for letter types
"RTN","EASMTL6",169,0)
 ; Input
"RTN","EASMTL6",170,0)
 ;    EATYP  - Letter type to print
"RTN","EASMTL6",171,0)
 ;    EASIEN - IEN for file #713.2
"RTN","EASMTL6",172,0)
 ;
"RTN","EASMTL6",173,0)
 ; Output
"RTN","EASMTL6",174,0)
 ;    RSLT = 1: Letter is inside threshold to print
"RTN","EASMTL6",175,0)
 ;           0: Letter is outside threshold (Don't print)
"RTN","EASMTL6",176,0)
 ;
"RTN","EASMTL6",177,0)
 N DIFF,THRESH,RSLT,ANVDT,MTDT
"RTN","EASMTL6",178,0)
 ;
"RTN","EASMTL6",179,0)
 S RSLT=1
"RTN","EASMTL6",180,0)
 Q:'$G(EATYP)
"RTN","EASMTL6",181,0)
 S THRESH=$S(EATYP=1:60,EATYP=2:30,1:0)
"RTN","EASMTL6",182,0)
 S MTDT=$$GET1^DIQ(713.2,EASIEN,3,"I")
"RTN","EASMTL6",183,0)
 S ANVDT=$$FMADD^XLFDT(MTDT,365)
"RTN","EASMTL6",184,0)
 S DIFF=$$FMDIFF^XLFDT(ANVDT,$$DT^XLFDT)
"RTN","EASMTL6",185,0)
 I DIFF>THRESH S RSLT=0
"RTN","EASMTL6",186,0)
 Q RSLT
"RTN","EASMTL6",187,0)
 ;
"RTN","EASMTL6",188,0)
UPDSTAT(EASN,EAX) ; Update Letter status file, #713.2
"RTN","EASMTL6",189,0)
 N DIE,DR,DA,EAPD,EAFLG,NXTFLG
"RTN","EASMTL6",190,0)
 ;
"RTN","EASMTL6",191,0)
 S DIE="^EAS(713.2,",DA=EASN
"RTN","EASMTL6",192,0)
 S DR=$S(EAX=1:10,EAX=2:13,EAX=4:19,1:0)
"RTN","EASMTL6",193,0)
 Q:'DR
"RTN","EASMTL6",194,0)
 S EAPD=DR_".5",EAFLG=DR-1
"RTN","EASMTL6",195,0)
 S DR=DR_"///1;"_EAPD_"///^S X=$$DT^XLFDT;"_EAFLG_"///0"
"RTN","EASMTL6",196,0)
 S NXTFLG=$S(EAFLG=9:12,EAFLG=12:18,1:0)
"RTN","EASMTL6",197,0)
 S:NXTFLG>0 DR=DR_";"_NXTFLG_"///1"
"RTN","EASMTL6",198,0)
 D ^DIE K DIE
"RTN","EASMTL6",199,0)
 D CLRFLG^EASMTUTL(EAX,EASN)
"RTN","EASMTL6",200,0)
 Q
"RTN","EASMTL6",201,0)
 ;
"RTN","EASMTL6",202,0)
FACNUM() ;  Get facility number
"RTN","EASMTL6",203,0)
 N RSLT,DIR
"RTN","EASMTL6",204,0)
 ;
"RTN","EASMTL6",205,0)
 S DIR(0)="P^4:EMZ"
"RTN","EASMTL6",206,0)
 S DIR("S")="I '$P($G(^DIC(4,Y,99)),U,4)"
"RTN","EASMTL6",207,0)
 D ^DIR K DIR
"RTN","EASMTL6",208,0)
 I $D(DIRUT) S RSLT=0
"RTN","EASMTL6",209,0)
 E  S RSLT=+Y_"^"_$P($G(^DIC(4,+Y,99)),U,1)
"RTN","EASMTL6",210,0)
 ;
"RTN","EASMTL6",211,0)
 Q RSLT
"RTN","EASMTL6",212,0)
 ;
"RTN","EASMTL6",213,0)
GETFAC(EADFN,EASARY) ;  set facility return address information
"RTN","EASMTL6",214,0)
 N EASFAC,EAX,EASF,EAS4
"RTN","EASMTL6",215,0)
 ;
"RTN","EASMTL6",216,0)
 I $$GET1^DIQ(713,1,9,"I") D
"RTN","EASMTL6",217,0)
 . S EASFAC=$$GET1^DIQ(2,EADFN,27.02,"I")
"RTN","EASMTL6",218,0)
 . Q:'EASFAC
"RTN","EASMTL6",219,0)
 . ;; Check for inactive flag
"RTN","EASMTL6",220,0)
 . Q:$$GET1^DIQ(4,EASFAC,101,"I")
"RTN","EASMTL6",221,0)
 . D GETS^DIQ(4,EASFAC,".01;1.01;1.02;1.03;1.04;.02;100","EI","EAS4")
"RTN","EASMTL6",222,0)
 . S EASF=EASFAC_","
"RTN","EASMTL6",223,0)
 . ;; Check for valid address information
"RTN","EASMTL6",224,0)
 . I EAS4(4,EASF,1.01,"E")]"",EAS4(4,EASF,1.03,"E")]"",EAS4(4,EASF,.02,"E")]"" S EASARY("TYP")="P"
"RTN","EASMTL6",225,0)
 ;
"RTN","EASMTL6",226,0)
 I $G(EASARY("TYP"))'="P" D
"RTN","EASMTL6",227,0)
 . S EASFAC=$$SITE^VASITE
"RTN","EASMTL6",228,0)
 . D GETS^DIQ(4,+EASFAC,".01;1.01;1.02;1.03;1.04;.02;100","EI","EAS4")
"RTN","EASMTL6",229,0)
 . S EASARY("TYP")="F"
"RTN","EASMTL6",230,0)
 ;
"RTN","EASMTL6",231,0)
 S EASARY("FACNUM")=+EASFAC
"RTN","EASMTL6",232,0)
 S EASARY("FAC")=$$GET1^DIQ(4,+EASFAC,.01,"I")
"RTN","EASMTL6",233,0)
 F EAX=1.01,1.02,1.03,1.04,100 D
"RTN","EASMTL6",234,0)
 .  S EASARY(EAX)=EAS4(4,+EASFAC_",",EAX,"E")
"RTN","EASMTL6",235,0)
 S EASARY(.02)=EAS4(4,+EASFAC_",",.02,"E")_"^"_$$GET1^DIQ(5,EAS4(4,+EASFAC_",",.02,"I"),1)
"RTN","EASMTL6",236,0)
 Q
"RTN","EASMTL6A")
0^2^B21185930
"RTN","EASMTL6A",1,0)
EASMTL6A ; MIN/TCM ALB/SCK - AUTOMATED MEANS TEST LETTER-PRINT LETTERS CONT ; 3/10/03 4:07pm
"RTN","EASMTL6A",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,14,15,29**;MAR 15,2001
"RTN","EASMTL6A",3,0)
 ;
"RTN","EASMTL6A",4,0)
LETTER(EASN,TYPE) ;Print letter
"RTN","EASMTL6A",5,0)
 ; Input
"RTN","EASMTL6A",6,0)
 ;     EASN    - File #713.2 IEN
"RTN","EASMTL6A",7,0)
 ;     TYPE    - Letter type
"RTN","EASMTL6A",8,0)
 ;
"RTN","EASMTL6A",9,0)
 N DFN,EASADD,EASIN,EASNME,EALNE,EASFAC,MSG,TAB,EAFIEN,EAX,LINE,EASANV,EASX,VADM,VAROOT,OFFSET,EASPTR,EASLIEN,EASITE,EASRTE,EASDEM,POP
"RTN","EASMTL6A",10,0)
 ;
"RTN","EASMTL6A",11,0)
 S TAB=3 ; Tab spacing for letters
"RTN","EASMTL6A",12,0)
 S OFFSET=+$$GET1^DIQ(713,1,10) ; Get print offset for address
"RTN","EASMTL6A",13,0)
 ;
"RTN","EASMTL6A",14,0)
 ;  Get patient data for letter
"RTN","EASMTL6A",15,0)
 S EASPTR=$$GET1^DIQ(713.2,EASN,2,"I")
"RTN","EASMTL6A",16,0)
 I EASPTR]"" S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL6A",17,0)
 E  S DFN=-1
"RTN","EASMTL6A",18,0)
 ; Get patient mailing information
"RTN","EASMTL6A",19,0)
 D GETPAT(DFN,.EASDEM,.EASADD)
"RTN","EASMTL6A",20,0)
 ;  Get return address info
"RTN","EASMTL6A",21,0)
 D GETFAC^EASMTL6(DFN,.EASFAC)
"RTN","EASMTL6A",22,0)
 ;
"RTN","EASMTL6A",23,0)
 W @IOF
"RTN","EASMTL6A",24,0)
 I EASFAC(100)]"" D
"RTN","EASMTL6A",25,0)
 . W !!?TAB+OFFSET,EASFAC(100)
"RTN","EASMTL6A",26,0)
 E  D
"RTN","EASMTL6A",27,0)
 . W !!?TAB+OFFSET,"VA MEDICAL CENTER"
"RTN","EASMTL6A",28,0)
 ;
"RTN","EASMTL6A",29,0)
 W !?TAB+OFFSET,EASFAC(1.01)
"RTN","EASMTL6A",30,0)
 I EASFAC(1.02)]"" W !?TAB+OFFSET,EASFAC(1.02)
"RTN","EASMTL6A",31,0)
 W !?TAB+OFFSET,EASFAC(1.03)_" "_$P(EASFAC(.02),U,2)_" "_EASFAC(1.04)
"RTN","EASMTL6A",32,0)
 W !!!?TAB+OFFSET,$$FMTE^XLFDT(DT,1)
"RTN","EASMTL6A",33,0)
 ;
"RTN","EASMTL6A",34,0)
 ;; generic test letter setup
"RTN","EASMTL6A",35,0)
 I DFN>0 D
"RTN","EASMTL6A",36,0)
 . S EASNME("FILE")=2,EASNME("IENS")=DFN,EASNME("FIELD")=.01
"RTN","EASMTL6A",37,0)
 . W !!!!?TAB+OFFSET,$$NAMEFMT^XLFNAME(.EASNME,"G")
"RTN","EASMTL6A",38,0)
 E  D
"RTN","EASMTL6A",39,0)
 . W !!!!?TAB+OFFSET,"TEST LETTER (DO NOT MAIL!)"
"RTN","EASMTL6A",40,0)
 W "  (",EASDEM(2),")" ;; Patch 15
"RTN","EASMTL6A",41,0)
 ;;
"RTN","EASMTL6A",42,0)
 W !?TAB+OFFSET,EASADD(1)
"RTN","EASMTL6A",43,0)
 ;
"RTN","EASMTL6A",44,0)
 I EASADD(2)]"" W !?TAB+OFFSET,EASADD(2)
"RTN","EASMTL6A",45,0)
 W !?TAB+OFFSET,EASADD(4)
"RTN","EASMTL6A",46,0)
 I +EASADD(5) W " ",$$GET1^DIQ(5,$P(EASADD(5),U),1)
"RTN","EASMTL6A",47,0)
 W " ",$P(EASADD(11),U,2)
"RTN","EASMTL6A",48,0)
 ;
"RTN","EASMTL6A",49,0)
 S EASANV=$$GET1^DIQ(713.2,EASN,3,"I")
"RTN","EASMTL6A",50,0)
 W !!!!,?TAB,"MEANS TEST ANNIVERSARY DATE: ",$$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365))
"RTN","EASMTL6A",51,0)
 ;
"RTN","EASMTL6A",52,0)
 S EASX=$P(EASDEM(5),U)
"RTN","EASMTL6A",53,0)
 ;; Patch 15
"RTN","EASMTL6A",54,0)
 W !!,?TAB,"Dear ",$S(EASX="M":"Mr. ",EASX="F":"Ms. ",1:"Mr./Ms. ")
"RTN","EASMTL6A",55,0)
 W $S(DFN>0:$$NAMEFMT^XLFNAME(.EASNME,"O","M"),1:"TEST"),":"
"RTN","EASMTL6A",56,0)
 ;;
"RTN","EASMTL6A",57,0)
 ;  Print letter body
"RTN","EASMTL6A",58,0)
 S EASLIEN=$O(^EAS(713.3,"C",TYPE,0))
"RTN","EASMTL6A",59,0)
 Q:'EASLIEN
"RTN","EASMTL6A",60,0)
 S EALNE=0
"RTN","EASMTL6A",61,0)
 ;
"RTN","EASMTL6A",62,0)
 W !
"RTN","EASMTL6A",63,0)
 F  S EALNE=$O(^EAS(713.3,EASLIEN,1,EALNE)) Q:'EALNE  D
"RTN","EASMTL6A",64,0)
 . S LINE=^EAS(713.3,EASLIEN,1,EALNE,0)
"RTN","EASMTL6A",65,0)
 . I LINE["|ANNVDT|" W !?TAB,$P(LINE,"|ANNVDT|",1),$$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365)),$P(LINE,"|ANNVDT|",2) Q
"RTN","EASMTL6A",66,0)
 . W !?TAB,LINE
"RTN","EASMTL6A",67,0)
 ;
"RTN","EASMTL6A",68,0)
 ; Retrieve division section of letter
"RTN","EASMTL6A",69,0)
 S EAFIEN=$O(^EAS(713.3,EASLIEN,2,"B",+EASFAC("FACNUM"),0))
"RTN","EASMTL6A",70,0)
 ;
"RTN","EASMTL6A",71,0)
 I 'EAFIEN D  ; Print default signature block
"RTN","EASMTL6A",72,0)
 . N EAX,LINE
"RTN","EASMTL6A",73,0)
 . F EAX=1:1:9  D
"RTN","EASMTL6A",74,0)
 . . S LINE=$P($T(DEFSIG+EAX),";;",2)
"RTN","EASMTL6A",75,0)
 . . I LINE["|FAC|" W !?TAB,$P(LINE,"|FAC|",1),$S(EASFAC(100)]"":EASFAC(100),1:"VA Medical Center"),$P(LINE,"|FAC|",2) Q
"RTN","EASMTL6A",76,0)
 . . W !?TAB,LINE
"RTN","EASMTL6A",77,0)
 ;
"RTN","EASMTL6A",78,0)
 I EAFIEN D  ; Print division/facility signature block
"RTN","EASMTL6A",79,0)
 . S EALNE=0
"RTN","EASMTL6A",80,0)
 . F  S EALNE=$O(^EAS(713.3,EASLIEN,2,EAFIEN,1,EALNE)) Q:'EALNE  D
"RTN","EASMTL6A",81,0)
 . . W !?TAB,^EAS(713.3,EASLIEN,2,EAFIEN,1,EALNE,0)
"RTN","EASMTL6A",82,0)
 ;
"RTN","EASMTL6A",83,0)
 W !!?TAB,"Enclosure"
"RTN","EASMTL6A",84,0)
 Q
"RTN","EASMTL6A",85,0)
 ;
"RTN","EASMTL6A",86,0)
GETPAT(DFN,EASDEM,EASADD) ; Get patient information
"RTN","EASMTL6A",87,0)
 N VAROOT,VA
"RTN","EASMTL6A",88,0)
 ;
"RTN","EASMTL6A",89,0)
 ;; Patch 15, Generic test letter
"RTN","EASMTL6A",90,0)
 I DFN<0 D  Q
"RTN","EASMTL6A",91,0)
 . S EASDEM(2)="6789"
"RTN","EASMTL6A",92,0)
 . S EASDEM(5)="M"
"RTN","EASMTL6A",93,0)
 . S EASADD(1)="THIS IS A TEST LETTER STREET ADDRESS"
"RTN","EASMTL6A",94,0)
 . S EASADD(2)=""
"RTN","EASMTL6A",95,0)
 . S EASADD(4)="ANYTOWN"
"RTN","EASMTL6A",96,0)
 . S EASADD(5)="36^NEW YORK"
"RTN","EASMTL6A",97,0)
 . S EASADD(11)="111110000^11111-0000"
"RTN","EASMTL6A",98,0)
 ;; End patch 15
"RTN","EASMTL6A",99,0)
 ;
"RTN","EASMTL6A",100,0)
 S VAROOT="EASADD"
"RTN","EASMTL6A",101,0)
 D ADD^VADPT
"RTN","EASMTL6A",102,0)
 ;
"RTN","EASMTL6A",103,0)
 S VAROOT="EASDEM"
"RTN","EASMTL6A",104,0)
 D DEM^VADPT
"RTN","EASMTL6A",105,0)
 ;
"RTN","EASMTL6A",106,0)
 D PID^VADPT6
"RTN","EASMTL6A",107,0)
 S EASDEM(2)=VA("BID")
"RTN","EASMTL6A",108,0)
 Q
"RTN","EASMTL6A",109,0)
 ;
"RTN","EASMTL6A",110,0)
CHKADR(EASPTR) ; Check for valid address
"RTN","EASMTL6A",111,0)
 N EASADD,RSLT,DFN,VAROOT
"RTN","EASMTL6A",112,0)
 ;
"RTN","EASMTL6A",113,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTL6A",114,0)
 S RSLT=1
"RTN","EASMTL6A",115,0)
 S VAROOT="EASADD"
"RTN","EASMTL6A",116,0)
 D ADD^VADPT
"RTN","EASMTL6A",117,0)
 ;; Check for valid mailing address
"RTN","EASMTL6A",118,0)
 I EASADD(1)]"",EASADD(4)]"",EASADD(5)]"",EASADD(11)]"" S RSLT=0
"RTN","EASMTL6A",119,0)
 ;; Check for Bad Address Indicator
"RTN","EASMTL6A",120,0)
 S EASADD("BAI")=$$BADADR^DGUTL3(DFN),$P(EASADD("BAI"),U,2)=$$EXTERNAL^DILFD(2,.121,"",+EASADD("BAI"))
"RTN","EASMTL6A",121,0)
 S:'RSLT&(EASADD("BAI")) RSLT=1
"RTN","EASMTL6A",122,0)
 D:RSLT ADRERR^EASMTUTL(.EASADD,DFN)
"RTN","EASMTL6A",123,0)
 Q $G(RSLT)
"RTN","EASMTL6A",124,0)
 ;
"RTN","EASMTL6A",125,0)
DEFSIG ; Default closing and signature block
"RTN","EASMTL6A",126,0)
 ;;Thank you for your assistance and cooperation.  If you have any
"RTN","EASMTL6A",127,0)
 ;;questions or need assistance in the completion of the information
"RTN","EASMTL6A",128,0)
 ;;requested, please contact the |FAC| Business 
"RTN","EASMTL6A",129,0)
 ;;Office between 8:00am and 4:00pm Monday through Friday.
"RTN","EASMTL6A",130,0)
 ;;
"RTN","EASMTL6A",131,0)
 ;;Sincerely,
"RTN","EASMTL6A",132,0)
 ;;
"RTN","EASMTL6A",133,0)
 ;;
"RTN","EASMTL6A",134,0)
 ;;
"RTN","EASMTUTL")
0^3^B46847992
"RTN","EASMTUTL",1,0)
EASMTUTL ; ALB/SCK/BRM - AUTOMATED MEANS TEST LETTERS UTILITIES ; 5/1/03 2:56pm
"RTN","EASMTUTL",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,14,15,29**;MAR 15,2001
"RTN","EASMTUTL",3,0)
 ;
"RTN","EASMTUTL",4,0)
 ;
"RTN","EASMTUTL",5,0)
PAUSE ;  Screen pause, user must press key to continue
"RTN","EASMTUTL",6,0)
 S DIR(0)="FAO",DIR("A")="Press any key to continue..."
"RTN","EASMTUTL",7,0)
 D ^DIR K DIR
"RTN","EASMTUTL",8,0)
 Q
"RTN","EASMTUTL",9,0)
 ;
"RTN","EASMTUTL",10,0)
CLRFLG(EAX,DA) ; Clears flags in File #713.2, For development
"RTN","EASMTUTL",11,0)
 N DIE,DR
"RTN","EASMTUTL",12,0)
 ;
"RTN","EASMTUTL",13,0)
 Q:EAX=1
"RTN","EASMTUTL",14,0)
 S:EAX=2 DR="9///0"
"RTN","EASMTUTL",15,0)
 S:EAX=3 DR="9///0;12///0"
"RTN","EASMTUTL",16,0)
 S:EAX=4 DR="9///0;12///0"
"RTN","EASMTUTL",17,0)
 S:EAX=0 DR="9///0;12///0;18///0"
"RTN","EASMTUTL",18,0)
 S DIE="^EAS(713.2,"
"RTN","EASMTUTL",19,0)
 D ^DIE K DIE
"RTN","EASMTUTL",20,0)
 Q
"RTN","EASMTUTL",21,0)
 ;
"RTN","EASMTUTL",22,0)
LOCK(ACTION) ; Flag IN USE field in EAS Parameters file, #713
"RTN","EASMTUTL",23,0)
 ; Input
"RTN","EASMTUTL",24,0)
 ;   ACTION - Locking action
"RTN","EASMTUTL",25,0)
 ;            1 = Flag IN USE for Automated Generator is running
"RTN","EASMTUTL",26,0)
 ;            0 = Flag IN USE for Automated Generator is not running
"RTN","EASMTUTL",27,0)
 ; Output
"RTN","EASMTUTL",28,0)
 ;        1 if action was successful
"RTN","EASMTUTL",29,0)
 ;        0 if action was not successful
"RTN","EASMTUTL",30,0)
 N RSLT
"RTN","EASMTUTL",31,0)
 ;
"RTN","EASMTUTL",32,0)
 I ACTION,$D(^EAS(713,"ALOCK",1)) Q $G(RSLT)
"RTN","EASMTUTL",33,0)
 ;
"RTN","EASMTUTL",34,0)
 S DIE="^EAS(713,",DA=1,DR="30////^S X=ACTION"
"RTN","EASMTUTL",35,0)
 D ^DIE K DIE
"RTN","EASMTUTL",36,0)
 S RSLT=1
"RTN","EASMTUTL",37,0)
 Q +$G(RSLT)
"RTN","EASMTUTL",38,0)
 ;
"RTN","EASMTUTL",39,0)
ALERT(ERRMSG) ; Post an alert message to the EAS Letters Mail group
"RTN","EASMTUTL",40,0)
 N XMY,XMTEXT,XMDUZ,XMSUB,MSG
"RTN","EASMTUTL",41,0)
 ;
"RTN","EASMTUTL",42,0)
 S MSG(1)="Notification:"
"RTN","EASMTUTL",43,0)
 S MSG(2)=ERRMSG
"RTN","EASMTUTL",44,0)
 ;
"RTN","EASMTUTL",45,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTUTL",46,0)
 S XMTEXT="MSG("
"RTN","EASMTUTL",47,0)
 S XMDUZ="EAS Auto MT Letters"
"RTN","EASMTUTL",48,0)
 S XMSUB="EAS Means Test Letter's Notice"
"RTN","EASMTUTL",49,0)
 D ^XMD
"RTN","EASMTUTL",50,0)
 Q
"RTN","EASMTUTL",51,0)
 ;
"RTN","EASMTUTL",52,0)
ADRERR(EASADD,DFN) ; Error notification for missing or invalid patient address
"RTN","EASMTUTL",53,0)
 N MSG,XMY,XMTEXT,XMDUZ,XMSUB,VAROOT,EASDEM,VA,EASPRF
"RTN","EASMTUTL",54,0)
 ;
"RTN","EASMTUTL",55,0)
 S VAROOT="EASDEM"
"RTN","EASMTUTL",56,0)
 D DEM^VADPT
"RTN","EASMTUTL",57,0)
 D PID^VADPT6
"RTN","EASMTUTL",58,0)
 S EASPRF=$$GET1^DIQ(2,DFN,27.02)
"RTN","EASMTUTL",59,0)
 I EASPRF']"" S EASPRF="No Preferred Facility"
"RTN","EASMTUTL",60,0)
 ;
"RTN","EASMTUTL",61,0)
 S MSG(1)="The following patient does not have a complete permanent mailing"
"RTN","EASMTUTL",62,0)
 S MSG(2)="address.  A means test reminder letter could not be mailed."
"RTN","EASMTUTL",63,0)
 S MSG(3)=" "
"RTN","EASMTUTL",64,0)
 S MSG(4)="       Patient : "_EASDEM(1)
"RTN","EASMTUTL",65,0)
 S MSG(5)="        Last 4 : "_VA("BID")
"RTN","EASMTUTL",66,0)
 S MSG(6)="Address Line 1 : "_EASADD(1)
"RTN","EASMTUTL",67,0)
 S MSG(7)="          City : "_EASADD(4)
"RTN","EASMTUTL",68,0)
 S MSG(8)="         State : "_$P(EASADD(5),U,2)
"RTN","EASMTUTL",69,0)
 S MSG(9)="       Zipcode : "_$P(EASADD(11),U,2)
"RTN","EASMTUTL",70,0)
 S MSG(9.5)="       Bad Addr: "_$P(EASADD("BAI"),U,2)
"RTN","EASMTUTL",71,0)
 S MSG(10)=""
"RTN","EASMTUTL",72,0)
 S MSG(11)="           DFN : "_$G(DFN)
"RTN","EASMTUTL",73,0)
 S MSG(13)=""
"RTN","EASMTUTL",74,0)
 S MSG(14)="This patient's letter entry will stay in 'FLAGGED-TO-PRINT' status until"
"RTN","EASMTUTL",75,0)
 S MSG(15)="the address is corrected."
"RTN","EASMTUTL",76,0)
 ;
"RTN","EASMTUTL",77,0)
 I +EASADD(9)>0!(+EASADD(10)>0) D
"RTN","EASMTUTL",78,0)
 . S MSG(5.5)="** Temporary Address in effect **"
"RTN","EASMTUTL",79,0)
 S XMY("G.EAS MTLETTERS")=""
"RTN","EASMTUTL",80,0)
 S XMTEXT="MSG("
"RTN","EASMTUTL",81,0)
 S XMDUZ="EAS Auto MT Letters"
"RTN","EASMTUTL",82,0)
 S XMSUB="Incomplete/Bad Addr: "_EASPRF
"RTN","EASMTUTL",83,0)
 D ^XMD
"RTN","EASMTUTL",84,0)
 Q
"RTN","EASMTUTL",85,0)
 ;
"RTN","EASMTUTL",86,0)
CLRLCK ;  Clears IN USE field of the EAS MT PARAMETERS if an error occurs and locks the field
"RTN","EASMTUTL",87,0)
 N DIE,DR,DA
"RTN","EASMTUTL",88,0)
 ;
"RTN","EASMTUTL",89,0)
 S DA=1,DIE="^EAS(713,",DR="30///0"
"RTN","EASMTUTL",90,0)
 D ^DIE
"RTN","EASMTUTL",91,0)
 Q
"RTN","EASMTUTL",92,0)
 ;
"RTN","EASMTUTL",93,0)
PROHBIT ; Set or delete the Prohibit fields in the Patient Status file, #713.1
"RTN","EASMTUTL",94,0)
 N DIR,DIRUT,EASF,DIC,DIE,Y,X,EASIEN,DR,DA,DFN
"RTN","EASMTUTL",95,0)
 ;
"RTN","EASMTUTL",96,0)
 S DIR(0)="S^S:Set Prohibit Flag;R:Remove Prohibit Flag"
"RTN","EASMTUTL",97,0)
 S DIR("A")="Set or remove the MT Prohibit flag"
"RTN","EASMTUTL",98,0)
 S DIR("?")="Select 'S' to set flag, 'R' to remove the flag"
"RTN","EASMTUTL",99,0)
 D ^DIR K DIR
"RTN","EASMTUTL",100,0)
 Q:$D(DIRUT)
"RTN","EASMTUTL",101,0)
 S EASF=Y
"RTN","EASMTUTL",102,0)
 ;
"RTN","EASMTUTL",103,0)
 I EASF="R"!(EASF="r") D  Q:$D(DIRUT) 
"RTN","EASMTUTL",104,0)
 . S DIR(0)="PAO^713.1:EMZ"
"RTN","EASMTUTL",105,0)
 . S DIR("A")="Select Patient: "
"RTN","EASMTUTL",106,0)
 . D ^DIR K DIR
"RTN","EASMTUTL",107,0)
 . S EASIEN=+Y
"RTN","EASMTUTL",108,0)
 ;
"RTN","EASMTUTL",109,0)
 I EASF="S"!(EASF="s") D  Q:$D(DIRUT)
"RTN","EASMTUTL",110,0)
 . S DIR(0)="PAO^2:EMZ"
"RTN","EASMTUTL",111,0)
 . S DIR("A")="Select Patient: "
"RTN","EASMTUTL",112,0)
 . D ^DIR K DIR
"RTN","EASMTUTL",113,0)
 . Q:$D(DIRUT)
"RTN","EASMTUTL",114,0)
 . S DFN=+Y
"RTN","EASMTUTL",115,0)
 . I '$D(^EAS(713.1,"B",DFN)) D  Q:$D(DIRUT)
"RTN","EASMTUTL",116,0)
 . . S DIR(0)="Y",DIR("B")="YES"
"RTN","EASMTUTL",117,0)
 . . S DIR("A")="Add patient to the Patient Status File"
"RTN","EASMTUTL",118,0)
 . . D ^DIR K DIR
"RTN","EASMTUTL",119,0)
 . . Q:$D(DIRUT)
"RTN","EASMTUTL",120,0)
 . . I 'Y S DIRUT=1 Q
"RTN","EASMTUTL",121,0)
 . . S DIC="^EAS(713.1,",DIC(0)="Z",X=DFN
"RTN","EASMTUTL",122,0)
 . . D FILE^DICN
"RTN","EASMTUTL",123,0)
 . . S EASIEN=+Y
"RTN","EASMTUTL",124,0)
 . I $D(^EAS(713.1,"B",DFN)) S EASIEN=$O(^EAS(713.1,"B",DFN,0))
"RTN","EASMTUTL",125,0)
 ;
"RTN","EASMTUTL",126,0)
 Q:'$G(EASIEN)
"RTN","EASMTUTL",127,0)
 ;
"RTN","EASMTUTL",128,0)
 S DIE="^EAS(713.1,",DA=EASIEN
"RTN","EASMTUTL",129,0)
 S:EASF="S" DR="2///YES;3;5///^S X=$$NOW^XLFDT;4///^S X=DUZ;10"
"RTN","EASMTUTL",130,0)
 S:EASF="R" DR="2///@;3///@;5///@;4///@;10///@"
"RTN","EASMTUTL",131,0)
 D ^DIE K DIE
"RTN","EASMTUTL",132,0)
 ;
"RTN","EASMTUTL",133,0)
 Q
"RTN","EASMTUTL",134,0)
 ;
"RTN","EASMTUTL",135,0)
EDTLTRS ;
"RTN","EASMTUTL",136,0)
 N DIR,EASIEN
"RTN","EASMTUTL",137,0)
 ;
"RTN","EASMTUTL",138,0)
 S DIR(0)="P^713.3:EMZ"
"RTN","EASMTUTL",139,0)
 S DIR("A")="Select Letter"
"RTN","EASMTUTL",140,0)
 D ^DIR K DIR
"RTN","EASMTUTL",141,0)
 Q:$D(DIRUT)
"RTN","EASMTUTL",142,0)
 S EASIEN=+Y
"RTN","EASMTUTL",143,0)
 ;
"RTN","EASMTUTL",144,0)
 S DIE="^EAS(713.3,",DA=EASIEN,DR="4"
"RTN","EASMTUTL",145,0)
 D ^DIE
"RTN","EASMTUTL",146,0)
 Q
"RTN","EASMTUTL",147,0)
 ;
"RTN","EASMTUTL",148,0)
MTRTN ; Update the letter status file, #713.2, with returned Means Test information
"RTN","EASMTUTL",149,0)
 N DIE,DIC,EASIEN,DR,DA,Y
"RTN","EASMTUTL",150,0)
 ;
"RTN","EASMTUTL",151,0)
 S DIC="^EAS(713.2,",DIC(0)="AEQM",DIC("A")="Select the Letter Status entry to update: "
"RTN","EASMTUTL",152,0)
 D ^DIC K DIC
"RTN","EASMTUTL",153,0)
 Q:Y<0
"RTN","EASMTUTL",154,0)
 S EASIEN=+Y
"RTN","EASMTUTL",155,0)
 ;
"RTN","EASMTUTL",156,0)
 S DIE="^EAS(713.2,",DA=EASIEN
"RTN","EASMTUTL",157,0)
 S DR="4;I X=0 S Y=0;5;7;6////^S X=DUZ;9///0;12///0;18///0"
"RTN","EASMTUTL",158,0)
 L +^EAS(713.2,EASIEN):0 I $T D 
"RTN","EASMTUTL",159,0)
 . D ^DIE K DIE
"RTN","EASMTUTL",160,0)
 E  W !,$CHAR(7),"Entry is being edited by another user."
"RTN","EASMTUTL",161,0)
 L -^EAS(713.2,EASIEN)
"RTN","EASMTUTL",162,0)
 ;
"RTN","EASMTUTL",163,0)
 Q
"RTN","EASMTUTL",164,0)
 ;
"RTN","EASMTUTL",165,0)
DECEASED(EASIEN,DFN) ;  Check deceased status for patient
"RTN","EASMTUTL",166,0)
 N RSLT,EADEM,EAS1,VAROOT
"RTN","EASMTUTL",167,0)
 ;
"RTN","EASMTUTL",168,0)
 S EASIEN=$G(EASIEN)
"RTN","EASMTUTL",169,0)
 S DFN=$G(DFN)
"RTN","EASMTUTL",170,0)
 I EASIEN>0 D
"RTN","EASMTUTL",171,0)
 . S EAS1=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTUTL",172,0)
 . S DFN=$$GET1^DIQ(713.1,EAS1,.01,"I")
"RTN","EASMTUTL",173,0)
 Q:'DFN 0
"RTN","EASMTUTL",174,0)
 S RSLT=0
"RTN","EASMTUTL",175,0)
 ;
"RTN","EASMTUTL",176,0)
 S VAROOT="EADEM"
"RTN","EASMTUTL",177,0)
 D DEM^VADPT
"RTN","EASMTUTL",178,0)
 S:+EADEM(6) RSLT=1
"RTN","EASMTUTL",179,0)
 D KVA^VADPT
"RTN","EASMTUTL",180,0)
 Q RSLT
"RTN","EASMTUTL",181,0)
 ;
"RTN","EASMTUTL",182,0)
CHECKMT(EASPT,EAIEN) ; Check current MT status
"RTN","EASMTUTL",183,0)
 N DFN,RTN,EACHK,DIE,DR,DA
"RTN","EASMTUTL",184,0)
 ;
"RTN","EASMTUTL",185,0)
 S RTN=0
"RTN","EASMTUTL",186,0)
 I '$G(EASPT) S RTN=1 G CHKQ ; Safety check
"RTN","EASMTUTL",187,0)
 S DFN=$$GET1^DIQ(713.1,EASPT,.01,"I") ; Get DFN
"RTN","EASMTUTL",188,0)
 I '$G(DFN) S RTN=1 G CHKQ ; Safety check
"RTN","EASMTUTL",189,0)
 ;
"RTN","EASMTUTL",190,0)
 S EACHK=$$MTCHK^EASMTCHK(DFN,"L") ; Check current MT to see if it's changed
"RTN","EASMTUTL",191,0)
 I 'EACHK D  ; If MT no longer required, update letter status file
"RTN","EASMTUTL",192,0)
 . S DIE="^EAS(713.2,",DA=EAIEN
"RTN","EASMTUTL",193,0)
 . S DR="4///YES;5///TODAY;7///AUTO-GENERATED;9///NO;12///NO;18///NO"
"RTN","EASMTUTL",194,0)
 . D ^DIE K DIE ;; Remove before release
"RTN","EASMTUTL",195,0)
 . S RTN=1
"RTN","EASMTUTL",196,0)
 ;
"RTN","EASMTUTL",197,0)
CHKQ Q RTN
"RTN","EASMTUTL",198,0)
 ;
"RTN","EASMTUTL",199,0)
FUTMT(EASIEN) ; Check for a future MT
"RTN","EASMTUTL",200,0)
 ;  Input
"RTN","EASMTUTL",201,0)
 ;    EASIEN - IEN for record in Letter Status file
"RTN","EASMTUTL",202,0)
 ;
"RTN","EASMTUTL",203,0)
 ;  Output
"RTN","EASMTUTL",204,0)
 ;     1 - Future MT exist's (API call)
"RTN","EASMTUTL",205,0)
 ;     0 - Future MT does not exist
"RTN","EASMTUTL",206,0)
 ;
"RTN","EASMTUTL",207,0)
 N EASPTR,DFN,EASFUT
"RTN","EASMTUTL",208,0)
 ;
"RTN","EASMTUTL",209,0)
 S RTN=0
"RTN","EASMTUTL",210,0)
 S EASPTR=$$GET1^DIQ(713.2,EASIEN,2,"I")
"RTN","EASMTUTL",211,0)
 S DFN=$$GET1^DIQ(713.1,EASPTR,.01,"I")
"RTN","EASMTUTL",212,0)
 ;
"RTN","EASMTUTL",213,0)
 ;; Call API for future MT check
"RTN","EASMTUTL",214,0)
 S EASFUT=$$FUT^DGMTU(DFN)
"RTN","EASMTUTL",215,0)
 ;
"RTN","EASMTUTL",216,0)
 I +$G(EASFUT) D  ; Turn off letters if future MT present
"RTN","EASMTUTL",217,0)
 . Q:'EASIEN
"RTN","EASMTUTL",218,0)
 . S DIE="^EAS(713.2,",DA=EASIEN
"RTN","EASMTUTL",219,0)
 . S DR="4///YES;5///TODAY;7///FUTURE MEANS TEST;9///NO;12///NO;18///NO"
"RTN","EASMTUTL",220,0)
 . D ^DIE K DIE
"RTN","EASMTUTL",221,0)
 . S RTN=1
"RTN","EASMTUTL",222,0)
 Q RTN
"RTN","EASMTUTL",223,0)
 ;
"RTN","EASMTUTL",224,0)
TESTLTR ;
"RTN","EASMTUTL",225,0)
 N EASIEN,EATYP,DIR,DIRUT
"RTN","EASMTUTL",226,0)
 ;
"RTN","EASMTUTL",227,0)
 S DIR(0)="SO^1:60-Day;2:30-Day;4:0-Day"
"RTN","EASMTUTL",228,0)
 S DIR("A")="Select letter type to test"
"RTN","EASMTUTL",229,0)
 S DIR("?")="Select the type of letter to print a test output of"
"RTN","EASMTUTL",230,0)
 D ^DIR K DIR
"RTN","EASMTUTL",231,0)
 Q:$D(DIRUT)
"RTN","EASMTUTL",232,0)
 S EATYP=+Y
"RTN","EASMTUTL",233,0)
 S EASIEN=-1
"RTN","EASMTUTL",234,0)
 S ZTSAVE("EASIEN")="",ZTSAVE("EATYP")=""
"RTN","EASMTUTL",235,0)
 D EN^XUTMDEVQ("ZTEST^EASMTUTL","EAS MT TEST LETTER",.ZTSAVE)
"RTN","EASMTUTL",236,0)
 Q
"RTN","EASMTUTL",237,0)
 ;
"RTN","EASMTUTL",238,0)
TESTIT ;
"RTN","EASMTUTL",239,0)
 D LETTER^EASMTL6A(EASIEN,EATYP)
"RTN","EASMTUTL",240,0)
 Q
"RTN","EASMTUTL",241,0)
 ;
"RTN","EASMTUTL",242,0)
ZTEST ;
"RTN","EASMTUTL",243,0)
 D LETTER^EASMTL6A(EASIEN,EATYP)
"RTN","EASMTUTL",244,0)
 Q
"VER")
8.0^22
**END**
**END**
