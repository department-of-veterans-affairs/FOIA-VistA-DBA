Released DI*22*147 SEQ #131
Extracted from mail message
**KIDS**:DI*22.0*147^

**INSTALL NAME**
DI*22.0*147
"BLD",579,0)
DI*22.0*147^VA FILEMAN^0^3060428^y
"BLD",579,1,0)
^^2^2^3060323^
"BLD",579,1,1,0)
See patch DI*22*147 in the National Patch Module on FORUM for complete
"BLD",579,1,2,0)
information on this patch.
"BLD",579,4,0)
^9.64PA^^
"BLD",579,"INI")

"BLD",579,"INIT")
DI147POS
"BLD",579,"KRN",0)
^9.67PA^8989.52^19
"BLD",579,"KRN",.4,0)
.4
"BLD",579,"KRN",.401,0)
.401
"BLD",579,"KRN",.402,0)
.402
"BLD",579,"KRN",.403,0)
.403
"BLD",579,"KRN",.5,0)
.5
"BLD",579,"KRN",.84,0)
.84
"BLD",579,"KRN",3.6,0)
3.6
"BLD",579,"KRN",3.8,0)
3.8
"BLD",579,"KRN",9.2,0)
9.2
"BLD",579,"KRN",9.8,0)
9.8
"BLD",579,"KRN",9.8,"NM",0)
^9.68A^8^8
"BLD",579,"KRN",9.8,"NM",1,0)
DDS10^^0^9505384
"BLD",579,"KRN",9.8,"NM",2,0)
DIA2^^0^5595456
"BLD",579,"KRN",9.8,"NM",3,0)
DICA3^^0^3603882
"BLD",579,"KRN",9.8,"NM",4,0)
DICN0^^0^14460486
"BLD",579,"KRN",9.8,"NM",5,0)
DIEF1^^0^37487550
"BLD",579,"KRN",9.8,"NM",6,0)
DIEFW^^0^5964760
"BLD",579,"KRN",9.8,"NM",7,0)
DIET^^0^6774952
"BLD",579,"KRN",9.8,"NM",8,0)
DILF^^0^8456514
"BLD",579,"KRN",9.8,"NM","B","DDS10",1)

"BLD",579,"KRN",9.8,"NM","B","DIA2",2)

"BLD",579,"KRN",9.8,"NM","B","DICA3",3)

"BLD",579,"KRN",9.8,"NM","B","DICN0",4)

"BLD",579,"KRN",9.8,"NM","B","DIEF1",5)

"BLD",579,"KRN",9.8,"NM","B","DIEFW",6)

"BLD",579,"KRN",9.8,"NM","B","DIET",7)

"BLD",579,"KRN",9.8,"NM","B","DILF",8)

"BLD",579,"KRN",19,0)
19
"BLD",579,"KRN",19.1,0)
19.1
"BLD",579,"KRN",101,0)
101
"BLD",579,"KRN",409.61,0)
409.61
"BLD",579,"KRN",771,0)
771
"BLD",579,"KRN",870,0)
870
"BLD",579,"KRN",8989.51,0)
8989.51
"BLD",579,"KRN",8989.52,0)
8989.52
"BLD",579,"KRN",8994,0)
8994
"BLD",579,"KRN","B",.4,.4)

"BLD",579,"KRN","B",.401,.401)

"BLD",579,"KRN","B",.402,.402)

"BLD",579,"KRN","B",.403,.403)

"BLD",579,"KRN","B",.5,.5)

"BLD",579,"KRN","B",.84,.84)

"BLD",579,"KRN","B",3.6,3.6)

"BLD",579,"KRN","B",3.8,3.8)

"BLD",579,"KRN","B",9.2,9.2)

"BLD",579,"KRN","B",9.8,9.8)

"BLD",579,"KRN","B",19,19)

"BLD",579,"KRN","B",19.1,19.1)

"BLD",579,"KRN","B",101,101)

"BLD",579,"KRN","B",409.61,409.61)

"BLD",579,"KRN","B",771,771)

"BLD",579,"KRN","B",870,870)

"BLD",579,"KRN","B",8989.51,8989.51)

"BLD",579,"KRN","B",8989.52,8989.52)

"BLD",579,"KRN","B",8994,8994)

"BLD",579,"PRE")
DIENVWRN
"BLD",579,"QUES",0)
^9.62^^
"BLD",579,"REQB",0)
^9.611^4^4
"BLD",579,"REQB",1,0)
DI*22.0*56^2
"BLD",579,"REQB",2,0)
DI*22.0*11^2
"BLD",579,"REQB",3,0)
DI*22.0*8^2
"BLD",579,"REQB",4,0)
DI*22.0*129^2
"BLD",579,"REQB","B","DI*22.0*11",2)

"BLD",579,"REQB","B","DI*22.0*129",4)

"BLD",579,"REQB","B","DI*22.0*56",1)

"BLD",579,"REQB","B","DI*22.0*8",3)

"INIT")
DI147POS
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
VA FILEMAN^DI^FM INIT
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
22.0^2990330^3051028^41
"PKG",5,22,1,"PAH",1,0)
147^3060428
"PKG",5,22,1,"PAH",1,1,0)
^^2^2^3060428
"PKG",5,22,1,"PAH",1,1,1,0)
See patch DI*22*147 in the National Patch Module on FORUM for complete
"PKG",5,22,1,"PAH",1,1,2,0)
information on this patch.
"PRE")
DIENVWRN
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","DDS10")
0^1^B9505384^B9389024
"RTN","DDS10",1,0)
DDS10 ;SFISC/MKO-BLOCK SETUP ;22MAR2006
"RTN","DDS10",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DDS10",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DDS10",4,0)
 ;
"RTN","DDS10",5,0)
SET(DDS1B,DDS1E,DA,DDP,DIE,DL,DDSDA) ;Get values for pointed-to block
"RTN","DDS10",6,0)
 ;In:
"RTN","DDS10",7,0)
 ;  DDS1B   = Block number or [Block name] (by ref)
"RTN","DDS10",8,0)
 ;  DDS1E   = 1, if we're loading a pointed-to block and we want
"RTN","DDS10",9,0)
 ;               interactive dialog (DIC(0)["E") in the lookup
"RTN","DDS10",10,0)
 ;  DA      = Record array
"RTN","DDS10",11,0)
 ;Returns:
"RTN","DDS10",12,0)
 ;  DDS1B = Block number
"RTN","DDS10",13,0)
 ;  DDP   = File number of block
"RTN","DDS10",14,0)
 ;  DIE   = Global root based on DDP and DA
"RTN","DDS10",15,0)
 ;  DL    = Level number (top=0)
"RTN","DDS10",16,0)
 ;  DDSDA = DA,DA(1),...,
"RTN","DDS10",17,0)
 ;
"RTN","DDS10",18,0)
 D BK(.DDS1B,.DDP) Q:$G(DIERR)
"RTN","DDS10",19,0)
 D GDA(DDS1B,DDS1E,.DA) Q:$G(DIERR)
"RTN","DDS10",20,0)
 D GL(DDP,.DA,.DIE,.DL,.DDSDA,1) Q:$G(DIERR)
"RTN","DDS10",21,0)
 Q
"RTN","DDS10",22,0)
 ;
"RTN","DDS10",23,0)
BK(DDSBK,DDP) ;Lookup block, get file number
"RTN","DDS10",24,0)
 ;Input:
"RTN","DDS10",25,0)
 ;  DDSBK = Block number or [Block name] (by ref)
"RTN","DDS10",26,0)
 ;Returns:
"RTN","DDS10",27,0)
 ;  DDSBK = Block number
"RTN","DDS10",28,0)
 ;  DDP   = File number
"RTN","DDS10",29,0)
 ;  DIERR
"RTN","DDS10",30,0)
 ;
"RTN","DDS10",31,0)
 I DDSBK=+$P(DDSBK,"E")  D  Q
"RTN","DDS10",32,0)
 . I $D(^DIST(.404,DDSBK,0))[0 D BLD^DIALOG(3051,"#"_DDSBK) Q
"RTN","DDS10",33,0)
 . S DDP=+$P(^DIST(.404,DDSBK,0),U,2)
"RTN","DDS10",34,0)
 I DDSBK?1"["1.E1"]" D  Q
"RTN","DDS10",35,0)
 . N X,Y,DIC
"RTN","DDS10",36,0)
 . S X=$E(DDSBK,2,$L(DDSBK)-1),DIC="^DIST(.404,",DIC(0)="FZ"
"RTN","DDS10",37,0)
 . D ^DIC I Y<0 D BLD^DIALOG(3051,"named "_X) Q
"RTN","DDS10",38,0)
 . S DDSBK=+Y,DDP=+$P(Y(0),U,2)
"RTN","DDS10",39,0)
 D BLD^DIALOG(3051,"#"_DDSBK)
"RTN","DDS10",40,0)
 Q
"RTN","DDS10",41,0)
 ;
"RTN","DDS10",42,0)
GDA(DDS1B,DDS1E,DA) ;Find new DA
"RTN","DDS10",43,0)
 ;Input:
"RTN","DDS10",44,0)
 ;  DDS1B    = Block number
"RTN","DDS10",45,0)
 ;  DDS1E    = 1:Interactive lookup
"RTN","DDS10",46,0)
 ;  DDSDAORG = Original DA array
"RTN","DDS10",47,0)
 ;  DDSDLORG = Original DL
"RTN","DDS10",48,0)
 ;  DDSPG
"RTN","DDS10",49,0)
 ;Returns:
"RTN","DDS10",50,0)
 ;  DA      = Record number
"RTN","DDS10",51,0)
 ;  DIERR
"RTN","DDS10",52,0)
 ;
"RTN","DDS10",53,0)
 N DDSDA,DDSI,X
"RTN","DDS10",54,0)
 ;
"RTN","DDS10",55,0)
 ;Set DA array to its original value
"RTN","DDS10",56,0)
 S DA=DDSDAORG
"RTN","DDS10",57,0)
 F DDSI=1:1:DDSDLORG S DA(DDSI)=DDSDAORG(DDSI)
"RTN","DDS10",58,0)
 D DDSDA(.DA,DDSDLORG,.DDSDA)
"RTN","DDS10",59,0)
 ;
"RTN","DDS10",60,0)
 ;Xecute each PTB node
"RTN","DDS10",61,0)
 F DDSI=1:1 Q:DA=""!'$D(@DDSREFS@(DDSPG,DDS1B,"PTB",DDSI))  X ^(DDSI) S:$G(X)'>0 DA=""
"RTN","DDS10",62,0)
 ;
"RTN","DDS10",63,0)
 ;Kill descendants of DA
"RTN","DDS10",64,0)
 I '$G(DIERR) S DDSI=DA K DA S DA=DDSI
"RTN","DDS10",65,0)
 S:DA'>0!$G(DIERR) DA=""
"RTN","DDS10",66,0)
 Q
"RTN","DDS10",67,0)
 ;
"RTN","DDS10",68,0)
GL(F,DA,DIE,DL,DDSDA,DDSL) ;Get global root, level, and IEN
"RTN","DDS10",69,0)
 ;Input variables:
"RTN","DDS10",70,0)
 ;  F    = file #
"RTN","DDS10",71,0)
 ;  DA   = array
"RTN","DDS10",72,0)
 ;  DDSL = flag to lock record
"RTN","DDS10",73,0)
 ;Returns:
"RTN","DDS10",74,0)
 ;  DIE   = global root of file (null if error)
"RTN","DDS10",75,0)
 ;  DL    = level (top=0) (null if error)
"RTN","DDS10",76,0)
 ;  DDSDA = IEN
"RTN","DDS10",77,0)
 ;  DIERR = Error flag
"RTN","DDS10",78,0)
 ;
"RTN","DDS10",79,0)
 I '$D(^DD(F)) D BLD^DIALOG(401,F) S (DIE,DL)="" Q
"RTN","DDS10",80,0)
 I $D(^DIC(F,0,"GL"))#2 S DIE=^("GL"),DL=0
"RTN","DDS10",81,0)
 E  D SUBGL Q:$G(DIERR)
"RTN","DDS10",82,0)
 ;
"RTN","DDS10",83,0)
 I '$G(DA) S DDSDA="0," Q
"RTN","DDS10",84,0)
 D DDSDA(.DA,DL,.DDSDA)
"RTN","DDS10",85,0)
 ;
"RTN","DDS10",86,0)
 N DDSP S DDSP("FILE")=F,DDSP("IEN")=DDSDA
"RTN","DDS10",87,0)
 ;
"RTN","DDS10",88,0)
 I $D(@(DIE_DA_",0)"))[0 D BLD^DIALOG(601,"",.DDSP)
"RTN","DDS10",89,0)
 I $D(@(DIE_DA_",-9)")) D BLD^DIALOG(602,"",.DDSP)
"RTN","DDS10",90,0)
 ;
"RTN","DDS10",91,0)
 I $G(DDSL),$D(^TMP("DDS",$J,"LOCK",DIE_DA_")"))[0 D  Q:$G(DIERR)
"RTN","DDS10",92,0)
 . D LOCK^DILF(DIE_DA_")") E  D BLD^DIALOG(110,"",.DDSP) Q  ;**147
"RTN","DDS10",93,0)
 . S ^TMP("DDS",$J,"LOCK",DIE_DA_")")=""
"RTN","DDS10",94,0)
 Q
"RTN","DDS10",95,0)
 ;
"RTN","DDS10",96,0)
SUBGL ;Get root and level for subfile
"RTN","DDS10",97,0)
 N D,I,S,U1
"RTN","DDS10",98,0)
 S D=F
"RTN","DDS10",99,0)
 F DL=0:1 Q:$D(^DD(D,0,"UP"))[0  S U1=^("UP") G:'$D(^DD(U1,"SB",D)) SUBER G:$D(^DD(U1,$O(^(D,"")),0))[0 SUBER S S(DL+1)=""""_$P($P(^(0),U,4),";")_"""",D=U1
"RTN","DDS10",100,0)
 G:$D(^DIC(D,0,"GL"))[0 SUBER S DIE=^("GL")
"RTN","DDS10",101,0)
 F I=DL:-1:1 G:$D(DA(I))[0 SUBER S DIE=DIE_DA(I)_","_S(I)_","
"RTN","DDS10",102,0)
 Q
"RTN","DDS10",103,0)
 ;
"RTN","DDS10",104,0)
SUBER ;Come here if an error is encountered in GL
"RTN","DDS10",105,0)
 S (DIE,DL)=""
"RTN","DDS10",106,0)
 D BLD^DIALOG(309)
"RTN","DDS10",107,0)
 Q
"RTN","DDS10",108,0)
 ;
"RTN","DDS10",109,0)
DDSDA(DA,DL,DDSDA) ;Determine DDSDA
"RTN","DDS10",110,0)
 ;Input:
"RTN","DDS10",111,0)
 ;  DA    = Record array
"RTN","DDS10",112,0)
 ;  DL    = Level number (top=0)
"RTN","DDS10",113,0)
 ;Output:
"RTN","DDS10",114,0)
 ;  DDSDA = DA,DA(1),...,
"RTN","DDS10",115,0)
 ;
"RTN","DDS10",116,0)
 N I
"RTN","DDS10",117,0)
 I DA="" S DDSDA="" Q
"RTN","DDS10",118,0)
 S DDSDA=DA_"," F I=1:1:DL S DDSDA=DDSDA_DA(I)_","
"RTN","DDS10",119,0)
 Q
"RTN","DI147POS")
0^^B223949
"RTN","DI147POS",1,0)
DI147POS ;SFISC/SO- SET TIME OUT DD NODE ;9:55 AM  11 Apr 2006
"RTN","DI147POS",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DI147POS",3,0)
 N OS ;FileMan's MUMPS OPERATING SYSTEM
"RTN","DI147POS",4,0)
 S OS=+$G(^DD("OS")),OS=$P(^DD("OS",OS,0),"^")
"RTN","DI147POS",5,0)
 I OS["CACHE" S ^DD("DILOCKTM")=3 ;Ref. #634127
"RTN","DI147POS",6,0)
 Q
"RTN","DIA2")
0^2^B5595456^B5563345
"RTN","DIA2",1,0)
DIA2 ;SFISC/GFT-SELECT ENTRY TO EDIT, ^LOOP ;22MAR2006
"RTN","DIA2",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DIA2",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIA2",4,0)
 K ^UTILITY("DIT",$J),DA,DRS,DW,DIAP,DI I '$D(DR(1,J(0))) S DR(1,J(0))=".01:99999999"
"RTN","DIA2",5,0)
 I $L(DR(1,J(0)))+$L(DIA)<216,+DR(1,J(0))=.01 S DR(1,J(0))="S:DIA(9) DQ=2,X=$P("_DIA_"DA,0),U,1);"_DR(1,J(0))
"RTN","DIA2",6,0)
DIC W !! G Q^DIB:$D(DTOUT) D L S DIA(1)=+Y,DIA(9)=$P(Y,U,3) I Y>0 D DIE,^DIA3:'$D(DA) G DIC
"RTN","DIA2",7,0)
 I X'["LOOP",X'["loop" D PTS^DITP:$O(^UTILITY("DIT",$J,0))>0 K ^UTILITY("DIT",$J) G Q^DIB
"RTN","DIA2",8,0)
 S L="EDIT ENTRIES",DHD="@",IOP="HOME",FLDS="",DHIT="D LOOP^DIA2 S:'$D(DCC) DN=0" D EN1^DIP W !!?4,"LOOP ENDED!" Q:$D(DTOUT)  G DIC
"RTN","DIA2",9,0)
 ;
"RTN","DIA2",10,0)
L K Y,I,J,F,DIC S (DIC,DIE)=DIA,DIC(0)="QEALM" G ^DIC
"RTN","DIA2",11,0)
 ;
"RTN","DIA2",12,0)
DIE S DP=DIA("P"),DA=+Y,DR=DR(1,DP)
"RTN","DIA2",13,0)
 K DIC,Y,C,DB S DIC=DIE,DILK=DIE_DA_")" D LOCK^DILF(DILK) ;**147
"RTN","DIA2",14,0)
 E  W $C(7),!,"ANOTHER TERMINAL IS EDITING THIS ENTRY!" K DILK Q
"RTN","DIA2",15,0)
 I DR?1"^".AN D @DR L @("-"_DILK) K DILK Q
"RTN","DIA2",16,0)
 E  D GO^DIE L @("-"_DILK) K DILK Q
"RTN","DIA2",17,0)
 ;
"RTN","DIA2",18,0)
LOOP ;DELETE OR REPLACE POINTERS
"RTN","DIA2",19,0)
 G NUL:$D(@(DCC_D0_",-9)")) I '($G(DIFIXPT)=1) W !!,?3
"RTN","DIA2",20,0)
 S X=$P(@(DCC_"0)"),U,2) G NUL:'$D(^(D0,0)) S (DI,Y)=$P(^(0),U,1),C=$P(^DD(+X,.01,0),U,2)
"RTN","DIA2",21,0)
 D
"RTN","DIA2",22,0)
 . N X D Y^DIQ
"RTN","DIA2",23,0)
 I $G(DIFIXPT)=1 D
"RTN","DIA2",24,0)
 . I $D(DIFIXPTH) S ^TMP("DIFIXPT",$J,DIFIXPTC)=DIFIXPTH,DIFIXPTC=DIFIXPTC+1 K DIFIXPTH
"RTN","DIA2",25,0)
 . S ^TMP("DIFIXPT",$J,DIFIXPTC)=" Entry:"_D0_"-"_$E(Y,1,20)_"     "
"RTN","DIA2",26,0)
 . Q
"RTN","DIA2",27,0)
 I '($G(DIFIXPT)=1) W Y
"RTN","DIA2",28,0)
 S Y=D0,(DIE,DIC)=DCC,%C=0
"RTN","DIA2",29,0)
 I X["I",'($G(DIFIXPT)=1) S %Y=0 F  S %C=$O(^DD(+X,0,"ID",%C)) Q:%C=""  S %=^(%C) D
"RTN","DIA2",30,0)
 . N DIQUIET
"RTN","DIA2",31,0)
 . W "  ",$E(@(DCC_"Y,0)"),0) X %
"RTN","DIA2",32,0)
 K DO S %C=-1,DO(2)=X,Y=Y_U_DI,DIC(0)=$P("E^",U,('($G(DIFIXPT)=1))) D ACT^DICM1 S DI=99 K DO,DIY Q:Y<0
"RTN","DIA2",33,0)
 S Y=D0 D DIE S:$G(DIFIXPT) DIFIXPTC=DIFIXPTC+1 I $D(DTOUT) K DCC,Y
"RTN","DIA2",34,0)
 I $D(Y) K Y I '($G(DIFIXPT)=1) S %=1 W $C(7),!!,"WANT TO STOP LOOPING" D YN^DICN I %-2 K DCC
"RTN","DIA2",35,0)
NUL S DI=99,(^UTILITY($J,99,0),DX(0))="Q" K D1,D2,D3,D4,D5
"RTN","DIA2",36,0)
 Q
"RTN","DICA3")
0^3^B3603882^B3530796
"RTN","DICA3",1,0)
DICA3 ;SEA/TOAD-VA FileMan: Updater, Adder ;22MAR2006
"RTN","DICA3",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DICA3",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DICA3",4,0)
 ;
"RTN","DICA3",5,0)
CREATE(DIFILE,DIEN,DIROOT,DIVALUE) ;
"RTN","DICA3",6,0)
 N DIENP S DIENP=","_$P(DIEN,",",2,999)
"RTN","DICA3",7,0)
 S DIEN=$P(DIEN,",")
"RTN","DICA3",8,0)
 N DINEXT S DINEXT=$P($G(@(DIROOT_"0)")),U,3)
"RTN","DICA3",9,0)
 I DINEXT="" D  I $G(DIERR) S DIEN="" Q
"RTN","DICA3",10,0)
 . N DIHEADER S DIHEADER=$$HEADER^DIDU2(.DIFILE,DIENP)
"RTN","DICA3",11,0)
 . I '$G(DIERR) S @(DIROOT_"0)")=DIHEADER
"RTN","DICA3",12,0)
GETNUM ;
"RTN","DICA3",13,0)
 N DINUM S DINUM=DIEN'="" I 'DINUM S DIEN=DINEXT\1
"RTN","DICA3",14,0)
 N DIFAIL,DIOUT S DIFAIL=0,DIOUT=0 F  D  I DIOUT!DIFAIL Q
"RTN","DICA3",15,0)
 . I 'DINUM S DIEN=DIEN+1
"RTN","DICA3",16,0)
 . D LOCK^DILF(DIROOT_"DIEN)") ;**147
"RTN","DICA3",17,0)
 . I '$T S DIFAIL=DINUM Q:'DIFAIL  D ERR(110,DIFILE,DIEN_DIENP) Q
"RTN","DICA3",18,0)
 . I $D(@(DIROOT_"DIEN)")) L -@(DIROOT_"DIEN)") D  Q
"RTN","DICA3",19,0)
 . . S DIFAIL=DINUM I 'DIFAIL Q
"RTN","DICA3",20,0)
 . . D ERR(302,DIFILE,DIEN_DIENP)
"RTN","DICA3",21,0)
 . S DIOUT=1
"RTN","DICA3",22,0)
 I DIFAIL S DIEN="" Q
"RTN","DICA3",23,0)
SETREC ;
"RTN","DICA3",24,0)
 N DICAFILE M DICAFILE=DIFILE N DIFILE
"RTN","DICA3",25,0)
 S @(DIROOT_"DIEN,0)")=DIVALUE
"RTN","DICA3",26,0)
 D LOCK^DILF(DIROOT_"0)") ;**147
"RTN","DICA3",27,0)
 S $P(^(0),U,3,4)=DIEN_U_($P(@(DIROOT_"0)"),U,4)+1)
"RTN","DICA3",28,0)
 I  L -@(DIROOT_"0)")
"RTN","DICA3",29,0)
 S DIEN=DIEN_DIENP
"RTN","DICA3",30,0)
 D XA^DIEFU(DICAFILE,DIEN,.01,DIVALUE,"")
"RTN","DICA3",31,0)
 D INDEX^DIKC(DICAFILE,DIEN,.01,"","SC")
"RTN","DICA3",32,0)
 Q
"RTN","DICA3",33,0)
 ;
"RTN","DICA3",34,0)
PROOT(DIFILE,DIEN) ;
"RTN","DICA3",35,0)
 ; ENTRY POINT--return the global root of a subfile's parent
"RTN","DICA3",36,0)
 ; extrinsic function, all passed by value
"RTN","DICA3",37,0)
 N DIENP S DIENP=$P(DIEN,",",2,999)
"RTN","DICA3",38,0)
 Q $NA(@$$ROOT^DILFD($$PARENT(DIFILE),DIENP,1)@(+DIENP))
"RTN","DICA3",39,0)
 ;
"RTN","DICA3",40,0)
PARENT(DIFILE) ;
"RTN","DICA3",41,0)
 ; ENTRY POINT--return the file number of a subfile's parent
"RTN","DICA3",42,0)
 ; extrinsic function, all passed by value
"RTN","DICA3",43,0)
 Q $G(^DD(DIFILE,0,"UP"))
"RTN","DICA3",44,0)
 ;
"RTN","DICA3",45,0)
SUBFILE(DIFILE) ;
"RTN","DICA3",46,0)
 ; ENTRY POINT--return whether the file is a subfile
"RTN","DICA3",47,0)
 ; extrinsic function, passed by value
"RTN","DICA3",48,0)
 Q $D(^DD(DIFILE,0,"UP"))#2
"RTN","DICA3",49,0)
 ;
"RTN","DICA3",50,0)
ERR(DIERN,DIFILE,DIIENS,DIFIELD,DI1,DI2,DI3) ;
"RTN","DICA3",51,0)
 ; error logging procedure
"RTN","DICA3",52,0)
 N DIPE
"RTN","DICA3",53,0)
 N DI F DI="FILE","IENS","FIELD",1:1:3 S DIPE(DI)=$G(@("DI"_DI))
"RTN","DICA3",54,0)
 D BLD^DIALOG(DIERN,.DIPE,.DIPE)
"RTN","DICA3",55,0)
 Q
"RTN","DICN0")
0^4^B14460486^B14094599
"RTN","DICN0",1,0)
DICN0 ;SFISC/GFT,XAK,SEA/TOAD/TKW-ADD NEW ENTRY ;10:39 AM  3 Apr 2006
"RTN","DICN0",2,0)
 ;;22.0;VA FileMan;**31,48,56,147**;Mar 30, 1999
"RTN","DICN0",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DICN0",4,0)
 ;
"RTN","DICN0",5,0)
NEW ; try to add a new record to the file
"RTN","DICN0",6,0)
 ; called from FILE, ^DICN
"RTN","DICN0",7,0)
 ;
"RTN","DICN0",8,0)
 N %,I,DDH,DI,DIE,DIK,DQ,DR,%H,%T,%DT,C,DIG,DIH,DIU,DIV,DISYS
"RTN","DICN0",9,0)
 ;M %=DA N DA M DA=%
"RTN","DICN0",10,0)
 K % M %=X N X M X=% S %=+$G(D0) N D0 S:% D0=% K %
"RTN","DICN0",11,0)
 I '$G(DIFILEI)!($G(DINDEX("#"))="") N DINDEX,DIFILEI,DIENS D
"RTN","DICN0",12,0)
 . S DINDEX("#")=1,(DINDEX,DINDEX("START"))="B"
"RTN","DICN0",13,0)
 . D GETFILE^DIC0(.DIC,.DIFILEI,.DIENS) Q
"RTN","DICN0",14,0)
 G:DIFILEI="" OUT
"RTN","DICN0",15,0)
 I '$D(@(DIC_"0)")),'$D(DIC("P")),$E(DIC,1,6)'="^DOPT(" S DIC("P")=$$GETP^DIC0(DIFILEI)
"RTN","DICN0",16,0)
 D:'$D(DO) GETFA^DIC1(.DIC,.DO) I DO="0^-1" G OUT
"RTN","DICN0",17,0)
 S X=$G(X) I X="",DINDEX("#")>1 S X=$G(X(1))
"RTN","DICN0",18,0)
 I X="",(DIC(0)'["E"!(DINDEX("#")'>1)) G OUT
"RTN","DICN0",19,0)
 N DINO01 S DINO01=$S(X="":1,1:0) N DIX,DIY
"RTN","DICN0",20,0)
 ;
"RTN","DICN0",21,0)
N1 ; if LAYGO nodes are present, XECUTE them and verify they don't object
"RTN","DICN0",22,0)
 ;
"RTN","DICN0",23,0)
 S Y=1 F DIX=0:0 D  Q:DIX'>0  Q:'Y
"RTN","DICN0",24,0)
 . S DIX=$O(^DD(+DO(2),.01,"LAYGO",DIX)) Q:DIX'>0
"RTN","DICN0",25,0)
 . I $D(^DD(+DO(2),.01,"LAYGO",DIX,0)) X ^(0) S Y=$T
"RTN","DICN0",26,0)
 I 'Y G OUT
"RTN","DICN0",27,0)
 ;
"RTN","DICN0",28,0)
 ; if the file is in the middle of archiving, keep out
"RTN","DICN0",29,0)
 ;
"RTN","DICN0",30,0)
 I $P($G(^DD($$FNO^DILIBF(+DO(2)),0,"DI")),U,2)["Y" D  I Y G OUT
"RTN","DICN0",31,0)
 . S Y='$D(DIOVRD)&'$G(DIFROM)
"RTN","DICN0",32,0)
 ;
"RTN","DICN0",33,0)
N2 ; process DINUM
"RTN","DICN0",34,0)
 ;
"RTN","DICN0",35,0)
 S DIX=X
"RTN","DICN0",36,0)
 I $D(DINUM) D
"RTN","DICN0",37,0)
 . S X=DINUM D  I '$D(X) S Y=0,X=DIX Q
"RTN","DICN0",38,0)
 . . N DIX D N^DICN1 Q
"RTN","DICN0",39,0)
 . D LOCK(DIC,X,.Y)
"RTN","DICN0",40,0)
 ;
"RTN","DICN0",41,0)
 ; or process DIENTRY (numeric input that might be IEN LAYGO)
"RTN","DICN0",42,0)
 ;
"RTN","DICN0",43,0)
 E  I $D(DIENTRY) D
"RTN","DICN0",44,0)
 . S X=DIENTRY D  I 'Y S X=DIX Q
"RTN","DICN0",45,0)
 . . N DIX D ASKP001^DICN1 Q
"RTN","DICN0",46,0)
 . D LOCK(DIC,X,.Y)
"RTN","DICN0",47,0)
 ;
"RTN","DICN0",48,0)
 ; or get a record number the usual way
"RTN","DICN0",49,0)
 ;
"RTN","DICN0",50,0)
 E  S X=$P(DO,U,3) D INCR N DIFAUD S %=+$P(DO,U,2),DIFAUD=$S($D(^DIA(%,"B")):%,1:0) F  D  Q:Y'="TRY NEXT"
"RTN","DICN0",51,0)
 . F  S X=X\DIY*DIY+DIY Q:'$D(@(DIC_"X)"))&$S('DIFAUD:1,1:+$O(^DIA(DIFAUD,"B",X_","))-X&'$D(^(X)))
"RTN","DICN0",52,0)
 . I $G(DUZ(0))="@"!$P(DO,U,2) N DIX D ASKP001^DICN1 Q:'Y
"RTN","DICN0",53,0)
 . D LOCK(DIC,X,.Y) Q:Y  S Y="TRY NEXT"
"RTN","DICN0",54,0)
 ;
"RTN","DICN0",55,0)
 I 'Y S Y=-1 D BAD^DIC1 Q
"RTN","DICN0",56,0)
 ;
"RTN","DICN0",57,0)
N3 ; add the new record at the IEN selected
"RTN","DICN0",58,0)
 ;
"RTN","DICN0",59,0)
 S @(DIC_"X,0)")=DIX
"RTN","DICN0",60,0)
 L @("-"_DIC_"X)")
"RTN","DICN0",61,0)
 ;
"RTN","DICN0",62,0)
 ; update the file header node
"RTN","DICN0",63,0)
 ;
"RTN","DICN0",64,0)
 K D S:$D(DA)#2 D=DA S DA=X,X=DIX
"RTN","DICN0",65,0)
 I $D(@(DIC_"0)")) S ^(0)=$P(^(0),U,1,2)_U_DA_U_($P(^(0),U,4)+1)
"RTN","DICN0",66,0)
N4 ; if compound index and we don't know internal value of .01, we'll prompt for it in ^DIE.
"RTN","DICN0",67,0)
 I DINO01 D  G:Y>0 D Q
"RTN","DICN0",68,0)
 . D ^DICN1 I Y'>0 S:$G(DO(1)) DS(0)="1^" S (X,DIX)="" Q
"RTN","DICN0",69,0)
 . S (X,DIX)=$P($G(@(DIC_DA_",0)")),U)
"RTN","DICN0",70,0)
 . Q
"RTN","DICN0",71,0)
N5 ; If .01 is marked for auditing, update audit file
"RTN","DICN0",72,0)
 D
"RTN","DICN0",73,0)
 . I DO(2)'["a" Q:$P(^DD(+DO(2),.01,0),U,2)'["a"  Q:^("AUDIT")["e"
"RTN","DICN0",74,0)
 . D AUD^DIET
"RTN","DICN0",75,0)
 ;
"RTN","DICN0",76,0)
 ; index the .01 field of the new entry
"RTN","DICN0",77,0)
 ;
"RTN","DICN0",78,0)
 N DD S DD=0 D
"RTN","DICN0",79,0)
 . N DIFILEI,DINDEX,DIVAL,DIENS,DISUBVAL
"RTN","DICN0",80,0)
 . F  S DD=$O(^DD(+DO(2),.01,1,DD)) Q:'DD  D
"RTN","DICN0",81,0)
 . . K % M %=X N X M X=% K %
"RTN","DICN0",82,0)
 . . I ^DD(+DO(2),.01,1,DD,0)["TRIGGER"!(^(0)["BULL") D  Q
"RTN","DICN0",83,0)
 . . . N %RCR,DZ S %RCR="FIRE^DICN",DZ=^DD(+DO(2),.01,1,DD,1)
"RTN","DICN0",84,0)
 . . . F %="D0","Y","DIC","DIU","DIV","DO","D","DD","DICR","X" S %RCR(%)=""
"RTN","DICN0",85,0)
 . . . D STORLIST^%RCR Q
"RTN","DICN0",86,0)
 . . M %=DIC N DIC M DIC=% K % M %=DA N DA M DA=% K % S %=DD N DD,D
"RTN","DICN0",87,0)
 . . X ^DD(+DO(2),.01,1,%,1) Q
"RTN","DICN0",88,0)
 . Q
"RTN","DICN0",89,0)
 I $O(^DD("IX","F",+DO(2),.01,0)) D
"RTN","DICN0",90,0)
 . K % M %=X N X M X=% K % M %=DIC N DIC M DIC=%
"RTN","DICN0",91,0)
 . K % M %=DA N DA M DA=% K % M %=DO N DO M DO=% K % N DD,D
"RTN","DICN0",92,0)
 . D INDEX^DIKC(+DO(2),DA_DIENS,.01,"","SC") Q
"RTN","DICN0",93,0)
 ;
"RTN","DICN0",94,0)
N6 ; if we have lookup values to stuff, or DIC("DR"), or if the file has
"RTN","DICN0",95,0)
 ; IDs or KEYS, go do DIE.
"RTN","DICN0",96,0)
 ; Code will return at D if successful. We set output and go exit
"RTN","DICN0",97,0)
 ;
"RTN","DICN0",98,0)
 S Y=DA D
"RTN","DICN0",99,0)
 . I $D(DIC("DR"))!($O(DISUBVAL(+DO(2),0)))!($O(^DD("KEY","B",+DO(2),0))) D ^DICN1 Q
"RTN","DICN0",100,0)
 . Q:DIC(0)'["E"
"RTN","DICN0",101,0)
 . I '$O(^DD(+DO(2),0,"ID",0)) Q
"RTN","DICN0",102,0)
 . D ^DICN1 Q
"RTN","DICN0",103,0)
 I Y'>0 S:$G(DO(1)) DS(0)="1^" Q
"RTN","DICN0",104,0)
 ;
"RTN","DICN0",105,0)
 ; Finish adding the new record.
"RTN","DICN0",106,0)
D S Y=DA_U_X_"^1" I $D(D)#2 S DA=D
"RTN","DICN0",107,0)
 D R^DIC2 Q
"RTN","DICN0",108,0)
 ;
"RTN","DICN0",109,0)
INCR S DIY=1 I $P(DO,U,2)>1 F %=1:1:$L($P(X,".",2)) S DIY=DIY/10
"RTN","DICN0",110,0)
 Q
"RTN","DICN0",111,0)
 ;
"RTN","DICN0",112,0)
 ;
"RTN","DICN0",113,0)
OUT I DIC(0)["Q" W $C(7)_$S('$D(DDS):" ??",1:"")
"RTN","DICN0",114,0)
 S Y=-1 I $D(DO(1)),'$D(DTOUT) D A^DIC S DS(0)="1^" Q
"RTN","DICN0",115,0)
 D Q^DIC2 Q
"RTN","DICN0",116,0)
 ;
"RTN","DICN0",117,0)
LOCK(DIROOT,DIEN,DIRESULT) ;
"RTN","DICN0",118,0)
 ;
"RTN","DICN0",119,0)
 ; try to lock the record, and see if it's already there
"RTN","DICN0",120,0)
 ; NEW
"RTN","DICN0",121,0)
 ;
"RTN","DICN0",122,0)
 D LOCK^DILF(DIROOT_"DIEN)") ;L @("+"_DIROOT_"DIEN):1") ;**147
"RTN","DICN0",123,0)
 S DIRESULT='$D(@(DIROOT_"DIEN)"))&$T
"RTN","DICN0",124,0)
 I 'DIRESULT L @("-"_DIROOT_"DIEN)")
"RTN","DICN0",125,0)
 Q
"RTN","DICN0",126,0)
 ;
"RTN","DIEF1")
0^5^B37487550^B37372124
"RTN","DIEF1",1,0)
DIEF1 ;SFISC/DPC-FILER UTILITIES ;22MAR2006
"RTN","DIEF1",2,0)
 ;;22.0;VA FileMan;**11,147**;Mar 30, 1999
"RTN","DIEF1",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIEF1",4,0)
LOAD(DIEFF,DIEFDAS,DIEFFLD,DIEFFLG,DIEFVAL,DIEFAR,DIEFOUT) ;
"RTN","DIEF1",5,0)
LOADX ;
"RTN","DIEF1",6,0)
 N DIEFIEN
"RTN","DIEF1",7,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIEF1",8,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIEF1",9,0)
 I $G(DIEFDAS)']"" D BLD^DIALOG(202,"IENS","IENS") G OUT
"RTN","DIEF1",10,0)
 I $E(DIEFDAS,$L(DIEFDAS))="," S DIEFIEN=DIEFDAS
"RTN","DIEF1",11,0)
 E  S DIEFIEN=$$IEN^DIEFU(.DIEFDAS)
"RTN","DIEF1",12,0)
 I '$$VROOT^DIEFU(DIEFAR) G OUT
"RTN","DIEF1",13,0)
 I '$$VFILE^DIEFU(DIEFF,"D") G OUT
"RTN","DIEF1",14,0)
 S DIEFFLD=$$CHKFLD^DIEFU(DIEFF,DIEFFLD) G:'DIEFFLD OUT
"RTN","DIEF1",15,0)
 I $G(DIEFFLG)["R",'$$VENTRY^DIEFU(DIEFF,DIEFIEN,"D") G OUT
"RTN","DIEF1",16,0)
 S @DIEFAR@(DIEFF,DIEFIEN,DIEFFLD)=DIEFVAL
"RTN","DIEF1",17,0)
OUT I $G(DIEFOUT)]"" D CALLOUT^DIEFU(DIEFOUT)
"RTN","DIEF1",18,0)
 Q
"RTN","DIEF1",19,0)
 ;
"RTN","DIEF1",20,0)
FLDNUM(DIEFF,DIEFFDNM) ;
"RTN","DIEF1",21,0)
FLDNUMX ;
"RTN","DIEF1",22,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIEF1",23,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIEF1",24,0)
 I '$$VFILE^DIEFU(DIEFF,"D") Q 0
"RTN","DIEF1",25,0)
 N DIEFFNUM
"RTN","DIEF1",26,0)
 I $D(^DD(DIEFF,"B",DIEFFDNM)) D  Q DIEFFNUM
"RTN","DIEF1",27,0)
 . S DIEFFNUM=$O(^DD(DIEFF,"B",DIEFFDNM,""))
"RTN","DIEF1",28,0)
 . I $O(^DD(DIEFF,"B",DIEFFDNM,DIEFFNUM)) N P S P(1)=DIEFFDNM,P("FILE")=DIEFF D BLD^DIALOG(505,.P,.P) S DIEFFNUM=0
"RTN","DIEF1",29,0)
 N P S P("FILE")=DIEFF,P(1)=DIEFFDNM D BLD^DIALOG(501,.P,.P)
"RTN","DIEF1",30,0)
 Q 0
"RTN","DIEF1",31,0)
 ;
"RTN","DIEF1",32,0)
ADDCONV(DIEFIEN,DIEFADAR) ;
"RTN","DIEF1",33,0)
 N I,DIEFNIEN,P
"RTN","DIEF1",34,0)
 F I=1:1:$L(DIEFIEN,",")-1 D
"RTN","DIEF1",35,0)
 . S P=$P(DIEFIEN,",",I)
"RTN","DIEF1",36,0)
 . I P,$E(P)'="+" Q
"RTN","DIEF1",37,0)
 . S DIEFNIEN=@DIEFADAR@($TR(P,"+?"))
"RTN","DIEF1",38,0)
 . S $P(DIEFIEN,",",I)=DIEFNIEN
"RTN","DIEF1",39,0)
 Q DIEFIEN
"RTN","DIEF1",40,0)
 ;
"RTN","DIEF1",41,0)
PUTDATA ;CODE TO ACTUALLY PUT THE DATA INTO THE NODE BEING EDITED. ALSO SAVES ORIGINAL VALUES. CALLED FROM DIEF.
"RTN","DIEF1",42,0)
 I +DIEFSPOT D
"RTN","DIEF1",43,0)
 . I DIEFNVAL[U D  Q
"RTN","DIEF1",44,0)
 . . S DIEFNG=1
"RTN","DIEF1",45,0)
 . . N INT,EXT
"RTN","DIEF1",46,0)
 . . S INT(1)=$$FLDNM^DIEFU(DIEFF,DIEFFLD),INT(2)=$$FILENM^DIEFU(DIEFF),EXT("FILE")=DIEFF,EXT("FIELD")=DIEFFLD
"RTN","DIEF1",47,0)
 . . D BLD^DIALOG(714,.INT,.EXT)
"RTN","DIEF1",48,0)
 . S DIEFOVAL=$P(DIEFFVAL,"^",DIEFSPOT)
"RTN","DIEF1",49,0)
 . S $P(DIEFFVAL,"^",DIEFSPOT)=DIEFNVAL,DOREPL=1
"RTN","DIEF1",50,0)
 E  I $E(DIEFSPOT)="E" D
"RTN","DIEF1",51,0)
 . N FR,TO,OLEN,NLEN
"RTN","DIEF1",52,0)
 . S FR=$P($P(DIEFSPOT,"E",2),",",1),TO=$P(DIEFSPOT,",",2)
"RTN","DIEF1",53,0)
 . S NLEN=$L(DIEFNVAL)
"RTN","DIEF1",54,0)
 . I NLEN-1>(TO-FR) D  Q
"RTN","DIEF1",55,0)
 . . S DIEFNG=1
"RTN","DIEF1",56,0)
 . . N INT,EXT
"RTN","DIEF1",57,0)
 . . S INT(1)=$$FLDNM^DIEFU(DIEFF,DIEFFLD),INT(2)=$$FILENM^DIEFU(DIEFF),EXT("FILE")=DIEFF,EXT("FIELD")=DIEFFLD
"RTN","DIEF1",58,0)
 . . D BLD^DIALOG(716,.INT,.EXT)
"RTN","DIEF1",59,0)
 . S DIEFOVAL=$E(DIEFFVAL,FR,TO),OLEN=$L(DIEFOVAL)
"RTN","DIEF1",60,0)
 . I $E(DIEFFVAL,TO+1,999)="" S $E(DIEFFVAL,FR,TO)=DIEFNVAL
"RTN","DIEF1",61,0)
 . E  S $E(DIEFFVAL,FR,TO)=DIEFNVAL_$J("",$S(OLEN>NLEN:OLEN-NLEN,1:0))
"RTN","DIEF1",62,0)
 . S DOREPL=1
"RTN","DIEF1",63,0)
 E  I DIEFSPOT=0 D
"RTN","DIEF1",64,0)
 . I $P($G(^DD(+$P(^DD(DIEFF,DIEFFLD,0),U,2),.01,0)),U,2)["W" D
"RTN","DIEF1",65,0)
 . . I '$$VROOT^DIEFU(DIEFNVAL) Q
"RTN","DIEF1",66,0)
 . . D PUTWP^DIEFW(DIEFFLAG,DIEFNVAL,DIEFNODE)
"RTN","DIEF1",67,0)
 . E  D
"RTN","DIEF1",68,0)
 . . N INT,EXT
"RTN","DIEF1",69,0)
 . . S (INT(1),EXT(1))="MULTIPLE",EXT("FILE")=DIEFF,EXT("FIELD")=DIEFFLD
"RTN","DIEF1",70,0)
 . . D BLD^DIALOG(520,.INT,.EXT)
"RTN","DIEF1",71,0)
 . . S DIEFNG=1
"RTN","DIEF1",72,0)
 E  I DIEFSPOT=" " D
"RTN","DIEF1",73,0)
 . N INT,EXT
"RTN","DIEF1",74,0)
 . S (INT(1),EXT(1))="COMPUTED",EXT("FILE")=DIEFF,EXT("FIELD")=DIEFFLD
"RTN","DIEF1",75,0)
 . D BLD^DIALOG(520,.INT,.EXT)
"RTN","DIEF1",76,0)
 . S DIEFNG=1
"RTN","DIEF1",77,0)
 Q
"RTN","DIEF1",78,0)
 ;
"RTN","DIEF1",79,0)
LOCK ;
"RTN","DIEF1",80,0)
 S (DIEFNOLK,DIEFLCKS)=0,DIEFF=""
"RTN","DIEF1",81,0)
 F  S DIEFF=$O(@DIEFAR@(DIEFF)) Q:DIEFF=""  D  Q:DIEFNOLK
"RTN","DIEF1",82,0)
 . I '$$VFILE^DIEFU(DIEFF,"D") S DIEFNOLK=1 Q
"RTN","DIEF1",83,0)
 . S DIEFFREF=$$FROOTDA^DIKCU(DIEFF,"D",.DIEFLEV) Q:DIEFFREF=""
"RTN","DIEF1",84,0)
 . S DIEFDAS=""
"RTN","DIEF1",85,0)
 . F  S DIEFDAS=$O(@DIEFAR@(DIEFF,DIEFDAS)) Q:DIEFDAS=""  D  Q:DIEFNOLK
"RTN","DIEF1",86,0)
 . . N DA
"RTN","DIEF1",87,0)
 . . I '$$GOODIEN^DIEF(DIEFF,DIEFDAS,DIEFLEV,.DA,"D") S DIEFNOLK=1 Q
"RTN","DIEF1",88,0)
 . . S DIEFLCKS=DIEFLCKS+1
"RTN","DIEF1",89,0)
 . . S DIEFLOCK(DIEFLCKS)=$NA(@DIEFFREF@(DA))
"RTN","DIEF1",90,0)
 . . D LOCK^DILF(DIEFLOCK(DIEFLCKS)) E  D  ;**147
"RTN","DIEF1",91,0)
 . . . S DIEFNOLK=1
"RTN","DIEF1",92,0)
 . . . N E S E("FILE")=DIEFF,E("IENS")=DIEFDAS D BLD^DIALOG(110,"",.E)
"RTN","DIEF1",93,0)
 Q
"RTN","DIEF1",94,0)
UNLOCK ;
"RTN","DIEF1",95,0)
 N I
"RTN","DIEF1",96,0)
 F I=1:1:DIEFLCKS L -@DIEFLOCK(I)
"RTN","DIEF1",97,0)
 Q
"RTN","DIEF1",98,0)
 ;
"RTN","DIEF1",99,0)
RESTORE(DIKEY,DIEFTMP) ;Restore key fields to pre-edited values
"RTN","DIEF1",100,0)
 ;DIKEY(rFile#,key#,iens) = "" : if key is not unique
"RTN","DIEF1",101,0)
 ;                        = n  : if key fields not assigned a value
"RTN","DIEF1",102,0)
 ;DIKEY(rFile#,key#,iens,file,field) = levdiff : set if field not
"RTN","DIEF1",103,0)
 ;                                               assigned a value
"RTN","DIEF1",104,0)
 N DIEFDA,DIEKK,DIRFIL,DIFIL,DIFLD,DIFLDI,DIIENS,DIIENSA,DIOLD,DILEVD
"RTN","DIEF1",105,0)
 K DIEFDA
"RTN","DIEF1",106,0)
 ;
"RTN","DIEF1",107,0)
 ;Loop through root files and keys in DIKEY
"RTN","DIEF1",108,0)
 S DIRFIL=0 F  S DIRFIL=$O(DIKEY(DIRFIL)) Q:'DIRFIL  D
"RTN","DIEF1",109,0)
 . S DIEKK=0 F  S DIEKK=$O(DIKEY(DIRFIL,DIEKK)) Q:'DIEKK  D
"RTN","DIEF1",110,0)
 .. Q:$D(^DD("KEY",DIEKK,0))[0
"RTN","DIEF1",111,0)
 .. ;
"RTN","DIEF1",112,0)
 .. ;Get fields in key
"RTN","DIEF1",113,0)
 .. K DIFLD
"RTN","DIEF1",114,0)
 .. S DIFLDI=0 F  S DIFLDI=$O(^DD("KEY",DIEKK,2,DIFLDI)) Q:'DIFLDI  D
"RTN","DIEF1",115,0)
 ... S DIFLD=$P($G(^DD("KEY",DIEKK,2,DIFLDI,0)),U),DIFIL=$P($G(^(0)),U,2)
"RTN","DIEF1",116,0)
 ... Q:'DIFLD!'DIFIL
"RTN","DIEF1",117,0)
 ... S DIFLD(DIFIL,DIFLD)=""
"RTN","DIEF1",118,0)
 .. ;
"RTN","DIEF1",119,0)
 .. ;Loop through records in DIKEY
"RTN","DIEF1",120,0)
 .. S DIIENS=" " S DIIENS=$O(DIKEY(DIRFIL,DIEKK,DIIENS)) Q:DIIENS=""  D
"RTN","DIEF1",121,0)
 ... ;
"RTN","DIEF1",122,0)
 ... ;Generate error if key is not unique
"RTN","DIEF1",123,0)
 ... D:DIKEY(DIRFIL,DIEKK,DIIENS)="" ERR740^DIEVK1(DIRFIL,DIEKK,DIIENS)
"RTN","DIEF1",124,0)
 ... ;
"RTN","DIEF1",125,0)
 ... ;Loop through files/fields in key
"RTN","DIEF1",126,0)
 ... S DIFIL=0 F  S DIFIL=$O(DIFLD(DIFIL)) Q:'DIFIL  D
"RTN","DIEF1",127,0)
 .... S DIFLD=0 F  S DIFLD=$O(DIFLD(DIFIL,DIFLD)) Q:'DIFLD  D
"RTN","DIEF1",128,0)
 ..... Q:$D(^DD(DIFIL,DIFLD,0))[0
"RTN","DIEF1",129,0)
 ..... ;
"RTN","DIEF1",130,0)
 ..... ;Generate error if key field not assigned a value
"RTN","DIEF1",131,0)
 ..... I $D(DIKEY(DIRFIL,DIEKK,DIIENS,DIFIL,DIFLD))#2 D
"RTN","DIEF1",132,0)
 ...... S (DILEVD,DIFLD(DIFIL,DIFLD))=+DIKEY(DIRFIL,DIEKK,DIIENS,DIFIL,DIFLD)
"RTN","DIEF1",133,0)
 ...... D ERR744^DIEVK1(DIFIL,DIFLD,DIEKK,$P(DIIENS,",",DILEVD+1,999))
"RTN","DIEF1",134,0)
 ..... ;
"RTN","DIEF1",135,0)
 ..... ;Set the FDA to restore the field to original value
"RTN","DIEF1",136,0)
 ..... S DILEVD=DIFLD(DIFIL,DIFLD)
"RTN","DIEF1",137,0)
 ..... S:DILEVD="" (DILEVD,DIFLD(DIFIL,DIFLD))=$$FLEVDIFF^DIKCU(DIRFIL,DIFIL)
"RTN","DIEF1",138,0)
 ..... S DIIENSA=$P(DIIENS,",",DILEVD+1,999)
"RTN","DIEF1",139,0)
 ..... Q:$D(@DIEFTMP@("V",DIFIL,DIIENSA,DIFLD,"O"))[0  S DIOLD=^("O")
"RTN","DIEF1",140,0)
 ..... S DIEFDA(DIFIL,DIIENS,DIFLD)=DIOLD
"RTN","DIEF1",141,0)
 ;
"RTN","DIEF1",142,0)
 D:$D(DIEFDA) FILE^DIEF("U","DIEFDA")
"RTN","DIEF1",143,0)
 Q
"RTN","DIEF1",144,0)
 ;
"RTN","DIEF1",145,0)
SKEYCHK(DIEFF,DIEFFLD,DIEFNVAL,DA,DIEFIEN,DIEFFXR) ;Check simple key
"RTN","DIEF1",146,0)
 N DIEFKEY,DIEFK,DIEFKCHK
"RTN","DIEF1",147,0)
 Q:'$D(^DD("KEY","F",DIEFF,DIEFFLD)) 1
"RTN","DIEF1",148,0)
 I DIEFNVAL="" D NKEY(DIEFF,DIEFFLD,DIEFIEN) Q 0
"RTN","DIEF1",149,0)
 Q:'$D(DIEFFXR) 1
"RTN","DIEF1",150,0)
 S @DIEFTMP@("V",DIEFF,DIEFIEN,DIEFFLD,"N")=DIEFNVAL
"RTN","DIEF1",151,0)
 S DIEFKCHK=$$KEYCHK^DIKK2(DIEFF,.DA,DIEFFLD,"DIEFFXR",DIEFIEN,"DIEFKEY","N")
"RTN","DIEF1",152,0)
 K @DIEFTMP@("V",DIEFF,DIEFIEN,DIEFFLD,"N")
"RTN","DIEF1",153,0)
 Q:DIEFKCHK 1
"RTN","DIEF1",154,0)
 S DIEFK=0 F  S DIEFK=$O(DIEFKEY(DIEFF,DIEFIEN,"K",DIEFK)) Q:'DIEFK  D ERR740^DIEVK1(DIEFF,DIEFK,DIEFIEN)
"RTN","DIEF1",155,0)
 Q 0
"RTN","DIEF1",156,0)
 ;
"RTN","DIEF1",157,0)
NKEY(DIEFF,DIEFFLD,DIEFIEN) ;Generate error message #742
"RTN","DIEF1",158,0)
 N DIEFK
"RTN","DIEF1",159,0)
 S DIEFK=0 F  S DIEFK=$O(^DD("KEY","F",DIEFF,DIEFFLD,DIEFK)) Q:'DIEFK  D
"RTN","DIEF1",160,0)
 . S DIEFK(DIEFK)=""
"RTN","DIEF1",161,0)
 S DIEFK=0 F  S DIEFK=$O(DIEFK(DIEFK)) Q:'DIEFK  D ERR742^DIEVK1(DIEFF,DIEFFLD,DIEFK,DIEFIEN)
"RTN","DIEF1",162,0)
 Q
"RTN","DIEFW")
0^6^B5964760^B5919700
"RTN","DIEFW",1,0)
DIEFW ;SFISC/DPC-FILER WP ;22MAR2006
"RTN","DIEFW",2,0)
 ;;22.0;VA FileMan;**1,8,147**;Mar 30, 1999
"RTN","DIEFW",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIEFW",4,0)
WP(DIEFF,DIEFIEN,DIEFFLD,DIEFWPFL,DIEFTSRC,DIEFOUT) ;
"RTN","DIEFW",5,0)
WPX ;
"RTN","DIEFW",6,0)
 S DIEFWPFL=$G(DIEFWPFL)
"RTN","DIEFW",7,0)
 I '$D(DIQUIET) N DIQUIET S DIQUIET=1
"RTN","DIEFW",8,0)
 I '$D(DIFM) N DIFM S DIFM=1 D INIZE^DIEFU
"RTN","DIEFW",9,0)
 I DIEFIEN']"" D BLD^DIALOG(202,"IENS","IENS") G OUT
"RTN","DIEFW",10,0)
 I '$$VERFLG^DIEFU(DIEFWPFL,"AZK") G OUT
"RTN","DIEFW",11,0)
 I "@"'[DIEFTSRC I '$$VROOT^DIEFU(DIEFTSRC) G OUT
"RTN","DIEFW",12,0)
 I '$$VFILE^DIEFU(DIEFF,"D") G OUT
"RTN","DIEFW",13,0)
 I '$$VFIELD^DIEFU(DIEFF,DIEFFLD,"D") G OUT
"RTN","DIEFW",14,0)
 I $P($G(^DD(+$P(^DD(DIEFF,DIEFFLD,0),U,2),.01,0)),U,2)'["W" N EI S EI("FILE")=DIEFF,EI("FIELD")=DIEFFLD D BLD^DIALOG(726,.EI,.EI) G OUT
"RTN","DIEFW",15,0)
 I '$$VENTRY^DIEFU(DIEFF,DIEFIEN,"D") G OUT
"RTN","DIEFW",16,0)
 N DIEFNODE,DIEFSPOT S DIEFSPOT=" " D GLRF^DIOU(DIEFF,DIEFFLD,.DIEFNODE,.DIEFSPOT)
"RTN","DIEFW",17,0)
 N DEPTH,I,D
"RTN","DIEFW",18,0)
 S DEPTH=$L(DIEFIEN,",")-1
"RTN","DIEFW",19,0)
 F I=DEPTH:-1:1 S D="D"_(DEPTH-I) N @D S @D=$P(DIEFIEN,",",I)
"RTN","DIEFW",20,0)
 K DEPTH,D,I
"RTN","DIEFW",21,0)
 N DIEFLOCK I DIEFWPFL["K" D  G:'$D(DIEFLOCK) OUT
"RTN","DIEFW",22,0)
 . S DIEFLOCK=DIEFNODE
"RTN","DIEFW",23,0)
 . D LOCK^DILF(DIEFLOCK) E  D  ;**147
"RTN","DIEFW",24,0)
 . . K DIEFLOCK
"RTN","DIEFW",25,0)
 . . N EXT S EXT("FILE")=DIEFF,EXT("IENS")=DIEFIEN D BLD^DIALOG(110,"",.EXT)
"RTN","DIEFW",26,0)
 D PUTWP(DIEFWPFL,DIEFTSRC,DIEFNODE)
"RTN","DIEFW",27,0)
 I $D(DIEFLOCK) L -@DIEFLOCK
"RTN","DIEFW",28,0)
OUT I $G(DIEFOUT)]"" D CALLOUT^DIEFU(DIEFOUT)
"RTN","DIEFW",29,0)
 Q
"RTN","DIEFW",30,0)
 ;
"RTN","DIEFW",31,0)
PUTWP(DIEFWPFL,DIEFTSRC,DIEFNODE) ;
"RTN","DIEFW",32,0)
 N BEGIN
"RTN","DIEFW",33,0)
 I "@"[DIEFTSRC K @DIEFNODE Q
"RTN","DIEFW",34,0)
 I '($D(@DIEFTSRC)\10) D BLD^DIALOG(305,DIEFTSRC,DIEFTSRC) Q
"RTN","DIEFW",35,0)
 I $G(DIEFWPFL)'["A" S BEGIN=1 K @DIEFNODE
"RTN","DIEFW",36,0)
 E  S BEGIN=$$NUMLNS(DIEFNODE)+1 K:BEGIN=1 @DIEFNODE
"RTN","DIEFW",37,0)
 I $D(@DIEFTSRC@($O(@DIEFTSRC@(0)),0))#2 S DIEFWPFL=$G(DIEFWPFL)_"Z"
"RTN","DIEFW",38,0)
 N LINECNT,INLINE S INLINE=0
"RTN","DIEFW",39,0)
 F LINECNT=BEGIN:1 S INLINE=$O(@DIEFTSRC@(INLINE)) Q:INLINE'=+$P(INLINE,"E")  D
"RTN","DIEFW",40,0)
 . I $G(DIEFWPFL)'["Z" S @DIEFNODE@(LINECNT,0)=$G(@DIEFTSRC@(INLINE))
"RTN","DIEFW",41,0)
 . E  S @DIEFNODE@(LINECNT,0)=$G(@DIEFTSRC@(INLINE,0))
"RTN","DIEFW",42,0)
 S LINECNT=LINECNT-1
"RTN","DIEFW",43,0)
 S @DIEFNODE@(0)=U_U_LINECNT_U_LINECNT_U_DT
"RTN","DIEFW",44,0)
 Q
"RTN","DIEFW",45,0)
 ;
"RTN","DIEFW",46,0)
NUMLNS(DIWPROOT) ;
"RTN","DIEFW",47,0)
 N DIWPLN
"RTN","DIEFW",48,0)
 S DIWPLN=$P($G(@DIWPROOT@(0)),U,3)
"RTN","DIEFW",49,0)
 Q:DIWPLN DIWPLN
"RTN","DIEFW",50,0)
 S DIWPLN=$O(@DIWPROOT@(""),-1)
"RTN","DIEFW",51,0)
 Q +DIWPLN
"RTN","DIENVWRN")
0^^B5804254^B3680036
"RTN","DIENVWRN",1,0)
DIENVWRN ;IRMFO-SF/FM STAFF-ENVIRONMENT CHECK ROUTINE ;10:10 AM  28 Apr 2006
"RTN","DIENVWRN",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DIENVWRN",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIENVWRN",4,0)
 ;
"RTN","DIENVWRN",5,0)
 ; Check XPDENV 0 = Loading; 1 = Installing
"RTN","DIENVWRN",6,0)
 I 'XPDENV D  Q  ; Loading Distribution - No Check
"RTN","DIENVWRN",7,0)
 . ; Make sure exported routines are registered in ROUTINE(#9.8) file
"RTN","DIENVWRN",8,0)
 . ; Edit FOR loop
"RTN","DIENVWRN",9,0)
 . N ROU,ZDATE,%,%H,%I,X
"RTN","DIENVWRN",10,0)
 . D NOW^%DTC
"RTN","DIENVWRN",11,0)
 . S ZDATE=%
"RTN","DIENVWRN",12,0)
 . F ROU="DDS10","DIA2","DICA3","DICN0","DIEF1","DIEFW","DIET","DILF" D
"RTN","DIENVWRN",13,0)
 .. N IEN S IEN=$O(^DIC(9.8,"B",ROU,0))
"RTN","DIENVWRN",14,0)
 .. I 'IEN D
"RTN","DIENVWRN",15,0)
 ... N FDA,DIERR,ZERR,IEN
"RTN","DIENVWRN",16,0)
 ... S IEN="+1,"
"RTN","DIENVWRN",17,0)
 ... S FDA(9.8,IEN,.01)=ROU
"RTN","DIENVWRN",18,0)
 ... S FDA(9.8,IEN,1)="R"
"RTN","DIENVWRN",19,0)
 ... S FDA(9.8,IEN,7.4)=ZDATE
"RTN","DIENVWRN",20,0)
 ... D UPDATE^DIE("","FDA","IEN")
"RTN","DIENVWRN",21,0)
 ... Q
"RTN","DIENVWRN",22,0)
 .. Q
"RTN","DIENVWRN",23,0)
 . D CLEAN^DILF
"RTN","DIENVWRN",24,0)
 . Q
"RTN","DIENVWRN",25,0)
 ;
"RTN","DIENVWRN",26,0)
INSCHK ; Do Checks During Install Only
"RTN","DIENVWRN",27,0)
 W $C(7)
"RTN","DIENVWRN",28,0)
 D MES^XPDUTL("** Although Queuing is allowed - it is HIGHLY recommended that ALL Users and")
"RTN","DIENVWRN",29,0)
 D MES^XPDUTL("VISTA Background jobs be STOPPED before installation of this patch.  Failure")
"RTN","DIENVWRN",30,0)
 D MES^XPDUTL("to do so may result in 'source routine edited' error(s). Edits will be")
"RTN","DIENVWRN",31,0)
 D MES^XPDUTL("lost and record(s) may be left in an inconsistent state, for example,")
"RTN","DIENVWRN",32,0)
 D MES^XPDUTL("not all Cross-Referencing completed; which in turn may cause FUTURE")
"RTN","DIENVWRN",33,0)
 D MES^XPDUTL("VistA/FileMan Hard Errors or corrupted Data. **")
"RTN","DIENVWRN",34,0)
 ;
"RTN","DIENVWRN",35,0)
TMCHK ; Check to see if TaskMan is still running
"RTN","DIENVWRN",36,0)
 S X=$$TM^%ZTLOAD
"RTN","DIENVWRN",37,0)
 I X,'$D(^%ZTSCH("WAIT")) D
"RTN","DIENVWRN",38,0)
 . W $C(7)
"RTN","DIENVWRN",39,0)
 . D BMES^XPDUTL("* Warning TaskMan Has NOT Been Stopped or Placed in a WAIT State!")
"RTN","DIENVWRN",40,0)
 ;
"RTN","DIENVWRN",41,0)
LINH ; Check to see if Logons are Inhibited
"RTN","DIENVWRN",42,0)
 D GETENV^%ZOSV  ; $P(Y,"^",2) = Installing Volume
"RTN","DIENVWRN",43,0)
 S X=+$G(^%ZIS(14.5,"LOGON",$P(Y,"^",2)))
"RTN","DIENVWRN",44,0)
 I 'X D
"RTN","DIENVWRN",45,0)
 . W $C(7)
"RTN","DIENVWRN",46,0)
 . D BMES^XPDUTL("* Warning Logons are NOT Inhibited!")
"RTN","DIENVWRN",47,0)
 Q
"RTN","DIET")
0^7^B6774952^B6605913
"RTN","DIET",1,0)
DIET ;SFISC/XAK-DISPLAY INPUT TEMPLATE    ALSO DOES AUDITING! ;22MAR2006
"RTN","DIET",2,0)
 ;;22.0;VA FileMan;**69,49,104,129,147**;Mar 30, 1999
"RTN","DIET",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DIET",4,0)
 N DICMX
"RTN","DIET",5,0)
 I '$D(^DIE(D0,0)) G EXIT
"RTN","DIET",6,0)
 S DICMX="W X,!"
"RTN","DIET",7,0)
EN ;
"RTN","DIET",8,0)
 N DI,DIET,DIETS,D
"RTN","DIET",9,0)
 S DIET=D0 D GET^DIETED("DIETS")
"RTN","DIET",10,0)
 F D=0:0 S D=$O(DIETS(D)) Q:'D  S X=DIETS(D) X DICMX Q:'$D(D)
"RTN","DIET",11,0)
EXIT S X="" Q
"RTN","DIET",12,0)
 ;
"RTN","DIET",13,0)
 ;
"RTN","DIET",14,0)
 ;
"RTN","DIET",15,0)
AUD N DP,DG,DPS,DIEX,DIIX,DIANUM ; DI*22*49
"RTN","DIET",16,0)
 S DIIX="3^.01^A",DP=+DO(2) D AUDIT:DP>0 Q
"RTN","DIET",17,0)
AUDIT ;
"RTN","DIET",18,0)
 N C,DIEDA,DIEF,%T,%F,%D,%,Y
"RTN","DIET",19,0)
 I $D(^DD(DP,+$P(DIIX,U,2),"AX")) X ^("AX") Q:'$T
"RTN","DIET",20,0)
 K % S DIEX=X D @+DIIX
"RTN","DIET",21,0)
 K DIIX,DPS,DIEX
"RTN","DIET",22,0)
 Q
"RTN","DIET",23,0)
3 ;
"RTN","DIET",24,0)
 I $D(DG),$D(DIANUM($P(DIIX,U,2))) S Y=X,(DIEX(1),C)=$P(^DD(DP,+$P(DIIX,U,2),0),U,2) D Y^DIQ S @DIANUM($P(DIIX,U,2))=Y K DIANUM($P(DIIX,U,2)) G I
"RTN","DIET",25,0)
2 ;
"RTN","DIET",26,0)
 S:$D(DP(1)) DPS=DP(1) S DIEDA="",DIEF="",%=1,DP(1)=DP,%F=+DP,X=DA
"RTN","DIET",27,0)
 F C=1:1 Q:'$D(^DD(DP(1),0,"UP"))  S %F=^("UP"),%=$O(^DD(%F,"SB",DP(1),0)) S:%="" %=-1 S DIEDA=DA(C)_","_DIEDA,DIEF=%_","_DIEF,DP(1)=%F
"RTN","DIET",28,0)
 D ADD I $D(DG),+DIIX=2 S DIANUM($P(DIIX,U,2))="^DIA("_%F_","_+Y_",3)"
"RTN","DIET",29,0)
 S (DIEX(1),C)=$P(^DD(DP,+$P(DIIX,U,2),0),U,2),Y=DIEX D Y^DIQ
"RTN","DIET",30,0)
 S ^DIA(%F,"B",DIEDA_DA,%D)="",X=DIEX S:$D(DPS) DP(1)=DPS
"RTN","DIET",31,0)
 S ^DIA(%F,%D,0)=DIEDA_DA_U_%T_U_DIEF_+$P(DIIX,U,2)_U_DUZ_U_$P(DIIX,U,3),^(+DIIX)=Y
"RTN","DIET",32,0)
I I (DIEX(1)["D")!(DIEX(1)["P")!(DIEX(1)["V")!(DIEX(1)["S") S ^(DIIX+.1)=X_U_DIEX(1)
"RTN","DIET",33,0)
 Q
"RTN","DIET",34,0)
 ;
"RTN","DIET",35,0)
ACCESSED(%F,REF) ;WILL FLAG ENTRY 'REF' IN FILE '%F' AS BEING ACCESSED BY CURRENT USER, CURRENT TIME, CURRENT OPTION
"RTN","DIET",36,0)
 N Y,X,%T,%D
"RTN","DIET",37,0)
 D:'$G(DT) DT^DICRW
"RTN","DIET",38,0)
 Q:'%F!'REF  S %F=+%F,(REF,X)=+REF Q:'$D(^DIC(%F))
"RTN","DIET",39,0)
 D ADD ;COMES BACK WITH %T AND Y--THE AUDIT REF
"RTN","DIET",40,0)
 S ^DIA(%F,Y,0)=REF_U_%T_U_.01_U_DUZ_U_U_"i"
"RTN","DIET",41,0)
 S ^DIA(%F,"B",REF,Y)=""
"RTN","DIET",42,0)
 Q
"RTN","DIET",43,0)
 ;
"RTN","DIET",44,0)
ADD S Y=$O(^DIA(%F,"A"),-1) I 'Y S ^DIA(%F,0)=$P(^DIC(%F,0),U)_" AUDIT^1.1I"
"RTN","DIET",45,0)
 F Y=Y+1:1 I '$D(^(Y)) D LOCK^DILF("^DIA(%F,Y)") I  Q:'$D(^(Y))  L -^DIA(%F,Y) ;**PATCH 147
"RTN","DIET",46,0)
 S ^(Y,0)=X L -^DIA(%F,Y)
"RTN","DIET",47,0)
 S %T=$G(XQY),%D=$S($D(XQORNOD)#2:XQORNOD,$D(HLORNOD)#2:HLORNOD,1:"") I %T!%D S ^DIA(%F,Y,4.1)=%T_U_%D
"RTN","DIET",48,0)
 S $P(^(0),U,3,4)=Y_U_($P(^DIA(%F,0),U,4)+1)
"RTN","DIET",49,0)
TIME S %D=Y,%T=$$HTFM^DILIBF($H)
"RTN","DIET",50,0)
 S ^DIA(%F,"C",%T,Y)="",^DIA(%F,"D",DUZ,Y)=""
"RTN","DIET",51,0)
 Q
"RTN","DILF")
0^8^B8456514^B7130763
"RTN","DILF",1,0)
DILF ;SFISC/STAFF-LIBRARY OF FUNCTIONS ;7:08 AM  25 Apr 2006
"RTN","DILF",2,0)
 ;;22.0;VA FileMan;**147**;Mar 30, 1999
"RTN","DILF",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DILF",4,0)
 Q
"RTN","DILF",5,0)
 ;
"RTN","DILF",6,0)
 ;
"RTN","DILF",7,0)
LOCK(REF) ;
"RTN","DILF",8,0)
 ; LOCK the REFerence.  $T must be checked upon return  **147
"RTN","DILF",9,0)
 I '$D(DILOCKTM) S DILOCKTM=$G(^DD("DILOCKTM"),1) I $D(@REF) ;TO GET NAKED BACK
"RTN","DILF",10,0)
 LOCK @("+"_REF_":DILOCKTM")
"RTN","DILF",11,0)
 Q
"RTN","DILF",12,0)
 ;
"RTN","DILF",13,0)
 ;
"RTN","DILF",14,0)
 ;
"RTN","DILF",15,0)
CREF(X) G ENCREF^DIQGU
"RTN","DILF",16,0)
 ;
"RTN","DILF",17,0)
OREF(X) G ENOREF^DIQGU
"RTN","DILF",18,0)
 ;
"RTN","DILF",19,0)
FDA(DIEFF,DIEFDAS,DIEFFLD,DIEFFLG,DIEFVAL,DIEFAR,DIEFOUT) ;
"RTN","DILF",20,0)
 G LOADX^DIEF1
"RTN","DILF",21,0)
 ;
"RTN","DILF",22,0)
CLEAN ;
"RTN","DILF",23,0)
 G CLEAN^DIEFU
"RTN","DILF",24,0)
 ;
"RTN","DILF",25,0)
IENS(DIEFDA) ;
"RTN","DILF",26,0)
 G IENX^DIEFU
"RTN","DILF",27,0)
 ;
"RTN","DILF",28,0)
DA(DAIEN,DATARG) ;
"RTN","DILF",29,0)
 G DAX^DIEFU
"RTN","DILF",30,0)
 ;
"RTN","DILF",31,0)
DT(DIEFDT,DIEFX,DIEFY,DIEFDT0,DIOUTAR) ;
"RTN","DILF",32,0)
 G DTX^DIEFU
"RTN","DILF",33,0)
 ;
"RTN","DILF",34,0)
VALUES(DILFILE,DILFLD,DILFDA,DILOUT) ;
"RTN","DILF",35,0)
 I $G(DILFILE)=""!($G(DILFLD)="")!($G(DILFDA)="") S DILOUT=0 Q
"RTN","DILF",36,0)
 K DILOUT
"RTN","DILF",37,0)
 N DILCNT,DILIEN
"RTN","DILF",38,0)
 S DILIEN=""
"RTN","DILF",39,0)
 D VALLOOP
"RTN","DILF",40,0)
 S DILOUT=DILCNT
"RTN","DILF",41,0)
 Q
"RTN","DILF",42,0)
 ;
"RTN","DILF",43,0)
VALLOOP ;
"RTN","DILF",44,0)
 S DILCNT=0
"RTN","DILF",45,0)
 F  S DILIEN=$O(@DILFDA@(DILFILE,DILIEN)) Q:DILIEN=""  D
"RTN","DILF",46,0)
 . I $D(@DILFDA@(DILFILE,DILIEN,DILFLD)) D
"RTN","DILF",47,0)
 . . S DILCNT=DILCNT+1
"RTN","DILF",48,0)
 . . S DILOUT(DILCNT)=@DILFDA@(DILFILE,DILIEN,DILFLD)
"RTN","DILF",49,0)
 . . S DILOUT(DILCNT,"IENS")=DILIEN
"RTN","DILF",50,0)
 Q
"RTN","DILF",51,0)
 ;
"RTN","DILF",52,0)
VALUE1(DILFILE,DILFLD,DILFDA) ;
"RTN","DILF",53,0)
 I $G(DILFILE)=""!($G(DILFLD)="")!($G(DILFDA)="") Q "^"
"RTN","DILF",54,0)
 N DILIEN
"RTN","DILF",55,0)
 S DILIEN=$O(@DILFDA@(DILFILE,""))
"RTN","DILF",56,0)
 I DILIEN="" Q "^"
"RTN","DILF",57,0)
 I $D(@DILFDA@(DILFILE,DILIEN,DILFLD)) Q @DILFDA@(DILFILE,DILIEN,DILFLD)
"RTN","DILF",58,0)
 N DILCNT,DILOUT
"RTN","DILF",59,0)
 D VALLOOP
"RTN","DILF",60,0)
 I DILCNT Q DILOUT(1)
"RTN","DILF",61,0)
 Q "^"
"RTN","DILF",62,0)
 ;
"RTN","DILF",63,0)
ROUSIZE() ;
"RTN","DILF",64,0)
 Q $G(^DD("ROU"))
"RTN","DILF",65,0)
 ;
"RTN","DILF",66,0)
HTML(DISTRING,DIRECTN) ;
"RTN","DILF",67,0)
 ;
"RTN","DILF",68,0)
 ; entry point: use HTML to encode or decode ^ and & characters ; TOAD
"RTN","DILF",69,0)
 ; extrinsic function: return encoded or decoded value
"RTN","DILF",70,0)
 ;
"RTN","DILF",71,0)
H1 N DILONG,DIRULE I $G(DIRECTN,1)=1 D  Q:$G(DILONG) ""
"RTN","DILF",72,0)
 . S DIRULE(1,"&")="&amp;",DIRULE(2,"^")="&#94;"
"RTN","DILF",73,0)
 . N DIL S DIL=$L(DISTRING,"^")+$L(DISTRING,"&")-2
"RTN","DILF",74,0)
 . I $L(DISTRING)-DIL+(DIL*5)>255 D ERR^DICU1(207,,,,DISTRING) S DILONG=1 Q
"RTN","DILF",75,0)
 E  S DIRULE(1,"&#94;")="^",DIRULE(2,"&amp;")="&"
"RTN","DILF",76,0)
 Q $$TRANSL8(DISTRING,.DIRULE)
"RTN","DILF",77,0)
 ;
"RTN","DILF",78,0)
TRANSL8(DISTRING,DIRULES) ;
"RTN","DILF",79,0)
 ;
"RTN","DILF",80,0)
 ; HTML: $TRANSLATE for substrings instead of characters ; TOAD
"RTN","DILF",81,0)
 ; extrinsic function: return translated value
"RTN","DILF",82,0)
 ;
"RTN","DILF",83,0)
T1 N DIFRENCE,DIFROM,DILENGTH,DITO
"RTN","DILF",84,0)
 N DI S DI="" F  S DI=$O(DIRULES(DI)) Q:DI=""  D
"RTN","DILF",85,0)
 . S DIFROM=$O(DIRULES(DI,"")) Q:DISTRING'[DIFROM
"RTN","DILF",86,0)
 . S DITO=DIRULES(DI,DIFROM)
"RTN","DILF",87,0)
 . S DILENGTH=$L(DIFROM)
"RTN","DILF",88,0)
 . S DIFRENCE=$L(DITO)-DILENGTH
"RTN","DILF",89,0)
 . S DIAT=0 F  D  Q:'DIAT
"RTN","DILF",90,0)
 . . S DIAT=$F(DISTRING,DIFROM,DIAT) Q:'DIAT
"RTN","DILF",91,0)
 . . S $E(DISTRING,DIAT-DILENGTH,DIAT-1)=DITO
"RTN","DILF",92,0)
 . . S DIAT=DIAT+DIFRENCE
"RTN","DILF",93,0)
 Q DISTRING
"VER")
8^22.0
"BLD",579,6)
^131
**END**
**END**
