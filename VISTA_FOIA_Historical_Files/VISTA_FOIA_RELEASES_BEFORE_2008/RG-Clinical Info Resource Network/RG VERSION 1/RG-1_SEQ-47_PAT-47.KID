EMERGENCY Released RG*1*47 SEQ #47
Extracted from mail message
**KIDS**:RG*1.0*47^

**INSTALL NAME**
RG*1.0*47
"BLD",2478,0)
RG*1.0*47^CLINICAL INFO RESOURCE NETWORK^0^3070508^y
"BLD",2478,1,0)
^^3^3^3070508^
"BLD",2478,1,1,0)
MPI MESSAGING ENHANCEMENTS
"BLD",2478,1,2,0)
Refer to patch RG*1*47 in the FORUM Patch Module for a complete
"BLD",2478,1,3,0)
description.
"BLD",2478,4,0)
^9.64PA^^
"BLD",2478,6.3)
10
"BLD",2478,"ABNS",0)
^9.66A^^
"BLD",2478,"ABPKG")
^^
"BLD",2478,"KRN",0)
^9.67PA^8989.52^19
"BLD",2478,"KRN",.4,0)
.4
"BLD",2478,"KRN",.401,0)
.401
"BLD",2478,"KRN",.402,0)
.402
"BLD",2478,"KRN",.403,0)
.403
"BLD",2478,"KRN",.5,0)
.5
"BLD",2478,"KRN",.84,0)
.84
"BLD",2478,"KRN",3.6,0)
3.6
"BLD",2478,"KRN",3.8,0)
3.8
"BLD",2478,"KRN",9.2,0)
9.2
"BLD",2478,"KRN",9.8,0)
9.8
"BLD",2478,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",2478,"KRN",9.8,"NM",1,0)
RGADTP^^0^B77748334
"BLD",2478,"KRN",9.8,"NM",2,0)
RGADTP1^^0^B32629728
"BLD",2478,"KRN",9.8,"NM",3,0)
RGADTP2^^0^B68268271
"BLD",2478,"KRN",9.8,"NM",4,0)
RGPVREJ^^0^B16898530
"BLD",2478,"KRN",9.8,"NM",5,0)
RGEX01^^0^B33945025
"BLD",2478,"KRN",9.8,"NM","B","RGADTP",1)

"BLD",2478,"KRN",9.8,"NM","B","RGADTP1",2)

"BLD",2478,"KRN",9.8,"NM","B","RGADTP2",3)

"BLD",2478,"KRN",9.8,"NM","B","RGEX01",5)

"BLD",2478,"KRN",9.8,"NM","B","RGPVREJ",4)

"BLD",2478,"KRN",19,0)
19
"BLD",2478,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",2478,"KRN",19,"NM",1,0)
RG EXCEPTION TF INQUIRY^^0
"BLD",2478,"KRN",19,"NM","B","RG EXCEPTION TF INQUIRY",1)

"BLD",2478,"KRN",19.1,0)
19.1
"BLD",2478,"KRN",101,0)
101
"BLD",2478,"KRN",409.61,0)
409.61
"BLD",2478,"KRN",771,0)
771
"BLD",2478,"KRN",870,0)
870
"BLD",2478,"KRN",8989.51,0)
8989.51
"BLD",2478,"KRN",8989.52,0)
8989.52
"BLD",2478,"KRN",8994,0)
8994
"BLD",2478,"KRN","B",.4,.4)

"BLD",2478,"KRN","B",.401,.401)

"BLD",2478,"KRN","B",.402,.402)

"BLD",2478,"KRN","B",.403,.403)

"BLD",2478,"KRN","B",.5,.5)

"BLD",2478,"KRN","B",.84,.84)

"BLD",2478,"KRN","B",3.6,3.6)

"BLD",2478,"KRN","B",3.8,3.8)

"BLD",2478,"KRN","B",9.2,9.2)

"BLD",2478,"KRN","B",9.8,9.8)

"BLD",2478,"KRN","B",19,19)

"BLD",2478,"KRN","B",19.1,19.1)

"BLD",2478,"KRN","B",101,101)

"BLD",2478,"KRN","B",409.61,409.61)

"BLD",2478,"KRN","B",771,771)

"BLD",2478,"KRN","B",870,870)

"BLD",2478,"KRN","B",8989.51,8989.51)

"BLD",2478,"KRN","B",8989.52,8989.52)

"BLD",2478,"KRN","B",8994,8994)

"BLD",2478,"QUES",0)
^9.62^^
"BLD",2478,"REQB",0)
^9.611^1^1
"BLD",2478,"REQB",1,0)
RG*1.0*44^2
"BLD",2478,"REQB","B","RG*1.0*44",1)

"KRN",19,6712,-1)
0^1
"KRN",19,6712,0)
RG EXCEPTION TF INQUIRY^Patient MPI/PD Data Inquiry^^R^^^^^^^^CLINICAL INFO RESOURCE NETWORK
"KRN",19,6712,1,0)
^^3^3^3070327^
"KRN",19,6712,1,1,0)
This report provides MPI/PD Data for a selected patient.  The information 
"KRN",19,6712,1,2,0)
displayed includes the Integration Control Number (ICN), patient identity 
"KRN",19,6712,1,3,0)
information, and Treating Facility list.
"KRN",19,6712,25)
PDAT^RGEX01
"KRN",19,6712,"U")
PATIENT MPI/PD DATA INQUIRY
"MBREQ")
0
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",272,-1)
1^1
"PKG",272,0)
CLINICAL INFO RESOURCE NETWORK^RG^CIRN
"PKG",272,20,0)
^9.402P^^0
"PKG",272,22,0)
^9.49I^1^1
"PKG",272,22,1,0)
1.0^2990430^2990601^12555
"PKG",272,22,1,"PAH",1,0)
47^3070508
"PKG",272,22,1,"PAH",1,1,0)
^^3^3^3070508
"PKG",272,22,1,"PAH",1,1,1,0)
MPI MESSAGING ENHANCEMENTS
"PKG",272,22,1,"PAH",1,1,2,0)
Refer to patch RG*1*47 in the FORUM Patch Module for a complete
"PKG",272,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","RGADTP")
0^1^B77748334^B77946765
"RTN","RGADTP",1,0)
RGADTP ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS ;5/28/02
"RTN","RGADTP",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,20,34,35,40,45,44,47**;30 Apr 99;Build 10
"RTN","RGADTP",3,0)
 ;
"RTN","RGADTP",4,0)
 ;Reference to BLDEVN^VAFCQRY and BLDPID^VAFCQRY supported by IA #3630
"RTN","RGADTP",5,0)
 ;Reference to EN1^VAFHLZEL is supported by IA #752
"RTN","RGADTP",6,0)
 ;Reference to Patient file (#2) PREFERRED FACILITY (#27.02) is supported by IA #1850
"RTN","RGADTP",7,0)
 ;Reference to $$PV2, $$PHARA, $$LABE, $$RADE ^VAFCSB is supported by IA #4921
"RTN","RGADTP",8,0)
 ;
"RTN","RGADTP",9,0)
INIT ;
"RTN","RGADTP",10,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,REP,DIC,DR,DIE,DA,DLAYGO
"RTN","RGADTP",11,0)
 S RGER=""
"RTN","RGADTP",12,0)
 D IN
"RTN","RGADTP",13,0)
 D PROCIN
"RTN","RGADTP",14,0)
 D GENACK
"RTN","RGADTP",15,0)
 Q
"RTN","RGADTP",16,0)
PROC ;processing entry point
"RTN","RGADTP",17,0)
 N HLA,RGADT,PV1,DIC,ARRAY,RGEVNT,RGLOCAL,REP,ICN,RGSITE
"RTN","RGADTP",18,0)
 S RGEVNT=HL("ETN")
"RTN","RGADTP",19,0)
 I $G(HL("MID"))'="" S RGADT=HL("MID")
"RTN","RGADTP",20,0)
 I $G(HL("MID"))="" S RGADT=999
"RTN","RGADTP",21,0)
 D IN
"RTN","RGADTP",22,0)
 S ICN=$G(ARRAY("ICN"))
"RTN","RGADTP",23,0)
 I +$G(ICN)<1 Q  ;quit if no ICN
"RTN","RGADTP",24,0)
 I $E($G(ICN),1,3)=$P($$SITE^VASITE,"^",3) Q  ;quit if ICN is a local
"RTN","RGADTP",25,0)
 S ZTSAVE("DFN")="",ZTSAVE("RGEVNT")="",ZTSAVE("HLA(""HLS"",")="",ZTRTN="SEND^RGADTPC",ZTDESC="Sending HL7 Patient Update...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP",26,0)
 K ZTSAVE,ZTRTN,ZTDESC,ZTIO,ZTDTH
"RTN","RGADTP",27,0)
 Q
"RTN","RGADTP",28,0)
IN ;Process in the ADT A04/A08 (routing logic)
"RTN","RGADTP",29,0)
 N RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID,COMP,ENT,EN,THLA,LAB,RAD,PHARM,TMP
"RTN","RGADTP",30,0)
 S ENT=1,REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1)
"RTN","RGADTP",31,0)
 ;set local flag to indicate the processing of an outbound for reformatting
"RTN","RGADTP",32,0)
 I $P($G(HL("SAF")),COMP)=$P($$SITE^VASITE,"^",3) S RGLOCAL=1
"RTN","RGADTP",33,0)
 I $P($G(HL("SAF")),COMP)'=$P($$SITE^VASITE,"^",3) S RGLOCAL=0
"RTN","RGADTP",34,0)
 S RGC=$E($G(HL("ECH")),1)
"RTN","RGADTP",35,0)
 F RGI=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE,SG=$E(HLNODE,1,3) D
"RTN","RGADTP",36,0)
 .S RGJ=0 F  S RGJ=$O(HLNODE(RGJ)) Q:'RGJ  S MSG(RGJ)=HLNODE(RGJ)
"RTN","RGADTP",37,0)
 .D:SG?2A1(1A,1N) PICK
"RTN","RGADTP",38,0)
 ;if message MSH sending facility matches the PID assigning authority update
"RTN","RGADTP",39,0)
 S ENT=0,EN=1 F  S ENT=$O(THLA("HLS",ENT)) Q:ENT=""  D
"RTN","RGADTP",40,0)
 .S HLA("HLS",EN)=THLA("HLS",ENT),EN=EN+1
"RTN","RGADTP",41,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PID"!($E($G(THLA("HLS",ENT)),1,3)="ZEL") D
"RTN","RGADTP",42,0)
 ..;**47 handle if ZEL is over 245 as well
"RTN","RGADTP",43,0)
 ..I $O(THLA("HLS",ENT,""))'="" D
"RTN","RGADTP",44,0)
 ...S CNT="" F  S CNT=$O(THLA("HLS",ENT,CNT)) Q:CNT=""  S HLA("HLS",EN-1,CNT)=THLA("HLS",ENT,CNT)
"RTN","RGADTP",45,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="PV1" I RGLOCAL S TMP=$$PV2B I TMP'="" S HLA("HLS",EN)=$$PV2B,EN=EN+1  ;**47
"RTN","RGADTP",46,0)
 .I $E($G(THLA("HLS",ENT)),1,3)="ZPD" I RGLOCAL D
"RTN","RGADTP",47,0)
 ..S RAD=$$RADE I RAD'="" S HLA("HLS",EN)=RAD,EN=EN+1
"RTN","RGADTP",48,0)
 ..S LAB=$$LABE I LAB'="" S HLA("HLS",EN)=LAB,EN=EN+1
"RTN","RGADTP",49,0)
 ..S PHARM=$$PHARA I PHARM'="" S HLA("HLS",EN)=PHARM,EN=EN+1
"RTN","RGADTP",50,0)
QUIT Q
"RTN","RGADTP",51,0)
ROUTE ;
"RTN","RGADTP",52,0)
 N RGERR
"RTN","RGADTP",53,0)
 I $G(RGEVNT)="" S RGEVNT=$G(HL("ETN"))
"RTN","RGADTP",54,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","RGADTP",55,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="RG ADT-"_HL("ETN")_" 2.4 CLIENT^"_MPI
"RTN","RGADTP",56,0)
 .I $P($G(MPI),U)=-1 D
"RTN","RGADTP",57,0)
 ..N RGLOG,RGMTXT D START^RGHLLOG(HLMTIEN,"","") S RGMTXT="for DFN#"_$G(DFN)
"RTN","RGADTP",58,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified"_RGMTXT,$G(DFN)) S RGERR=1
"RTN","RGADTP",59,0)
 I $G(RGERR)'=1 S ^XTMP("RG"_HL("ETN")_"%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"RG"_HL("ETN")_" msg to MPI for DFN "_DFN S ^XTMP("RG"_HL("ETN")_"%"_DFN,"MPI",0)="A"
"RTN","RGADTP",60,0)
 Q
"RTN","RGADTP",61,0)
RESP ;
"RTN","RGADTP",62,0)
 N RGER,RGSITE,ARRAY,MSH,RGLOCAL,RGEVNT,RGI,MSG,RG,SG,DFN,EVN,SITE,RGC,RGJ,DIC,PV1,PID
"RTN","RGADTP",63,0)
 D IN
"RTN","RGADTP",64,0)
 Q
"RTN","RGADTP",65,0)
PICK ;check routine for segment entry point
"RTN","RGADTP",66,0)
 I $T(@SG)]"" D @SG
"RTN","RGADTP",67,0)
 I $T(@SG)="" Q
"RTN","RGADTP",68,0)
 Q
"RTN","RGADTP",69,0)
MSA ;process the MSA segment
"RTN","RGADTP",70,0)
 N ARRAY,CNT,DFN,EXIT,HLCOMP,RGAA,RGERR,RGEVNT,RGMSG,RETURN,RGX,RGY,RGCODE
"RTN","RGADTP",71,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",72,0)
 S RGAA=MSG,EXIT=0,RGCODE=$P(RGAA,HL("FS"),2),RGMSG=$P(RGAA,HL("FS"),3),RGERR=$P(RGAA,HL("FS"),4),RGMSG=$$MSG^HLCSUTL(RGMSG,"RETURN(1)") K RGMSG
"RTN","RGADTP",73,0)
 S CNT=1,RGX=0 F  S RGX=$O(RETURN(1,RGX)) Q:'RGX!(EXIT=1)  D
"RTN","RGADTP",74,0)
 .I RETURN(1,RGX)'="" D
"RTN","RGADTP",75,0)
 ..I $D(RGMSG) S RGMSG(CNT)=RETURN(1,RGX),CNT=CNT+1
"RTN","RGADTP",76,0)
 ..I '$D(RGMSG) S RGMSG=RETURN(1,RGX),RGY=RGX
"RTN","RGADTP",77,0)
 .I RETURN(1,RGX)="" D  S CNT=1 K RGMSG
"RTN","RGADTP",78,0)
 ..I $E(RETURN(1,RGY),1,3)="MSH" D MSH
"RTN","RGADTP",79,0)
 ..I $E(RETURN(1,RGY),1,3)="PID" D PIDP^RGADTP1(.RGMSG,.ARRAY,.HL) S EXIT=1
"RTN","RGADTP",80,0)
 S DFN=$G(ARRAY("DFN"))
"RTN","RGADTP",81,0)
 ;**45 Log Exception ONLY if AR is returned in MSA segment
"RTN","RGADTP",82,0)
 I RGCODE="AR" D
"RTN","RGADTP",83,0)
 .D START^RGHLLOG(HLMTIEN,"","")
"RTN","RGADTP",84,0)
 .D EXC^RGHLLOG(234,RGERR,DFN) ;**44
"RTN","RGADTP",85,0)
 .D STOP^RGHLLOG(0)
"RTN","RGADTP",86,0)
 I $D(^XTMP("RG"_HL("ETN")_"%"_DFN,0)) K ^XTMP("RG"_HL("ETN")_"%"_DFN)
"RTN","RGADTP",87,0)
 Q
"RTN","RGADTP",88,0)
MSH ;
"RTN","RGADTP",89,0)
 S MSH=1
"RTN","RGADTP",90,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",91,0)
 I 'RGLOCAL S RGC=$E(HL("ECH"),1)
"RTN","RGADTP",92,0)
 S RGSITE=$P($P(MSG,HL("FS"),4),RGC),RGEVNT=$P($P(MSG,HL("FS"),9),RGC,2)
"RTN","RGADTP",93,0)
 Q
"RTN","RGADTP",94,0)
PV2 ;processor of PV2 segment ;**47
"RTN","RGADTP",95,0)
 Q
"RTN","RGADTP",96,0)
PV2B() ;builder of PV2 segment ;**47
"RTN","RGADTP",97,0)
 N RET S RET=""
"RTN","RGADTP",98,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",99,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",100,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",101,0)
 Q $$PV2^VAFCSB
"RTN","RGADTP",102,0)
PHARA() ;build obx to show active prescriptions
"RTN","RGADTP",103,0)
 N RET S RET=""
"RTN","RGADTP",104,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",105,0)
 I '$$PATCH^XPDUTL("PSS*1.0*101") Q RET
"RTN","RGADTP",106,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",107,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",108,0)
 Q $$PHARA^VAFCSB
"RTN","RGADTP",109,0)
LABE() ;BUILD OBX FOR LAST LAB TEST DATE
"RTN","RGADTP",110,0)
 N RET S RET=""
"RTN","RGADTP",111,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",112,0)
 I '$$PATCH^XPDUTL("LR*5.2*295") Q RET
"RTN","RGADTP",113,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",114,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",115,0)
 Q $$LABE^VAFCSB
"RTN","RGADTP",116,0)
RADE() ;BUILD OBX FOR LAST RADIOLOGY TEST DATE
"RTN","RGADTP",117,0)
 N RET S RET=""
"RTN","RGADTP",118,0)
 I 'RGLOCAL Q RET
"RTN","RGADTP",119,0)
 I '$$PATCH^XPDUTL("RA*5.0*76") Q RET
"RTN","RGADTP",120,0)
 N X S X="VAFCSB" X ^%ZOSF("TEST") Q:'$T RET
"RTN","RGADTP",121,0)
 ;**45 VAFCSB coming in with DG*5.3*707
"RTN","RGADTP",122,0)
 Q $$RADE^VAFCSB
"RTN","RGADTP",123,0)
EVN ;;
"RTN","RGADTP",124,0)
 N CNT,ERR S EVN=RGI
"RTN","RGADTP",125,0)
 I RGLOCAL S (EVN(1),THLA("HLS",ENT))=MSG,ENT=ENT+1
"RTN","RGADTP",126,0)
 I 'RGLOCAL D
"RTN","RGADTP",127,0)
 .S ARRAY("EVR")=$P(MSG,HL("FS"),2),ARRAY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","RGADTP",128,0)
 .S ARRAY("EVNAME")=$$FMNAME^XLFNAME($P(MSG,HL("FS"),2),"",$E(HL("ECH"),1)),ARRAY("SENDING SITE")=$P(MSG,HL("FS"),8)
"RTN","RGADTP",129,0)
 Q
"RTN","RGADTP",130,0)
EVNP ;
"RTN","RGADTP",131,0)
 N EVNX
"RTN","RGADTP",132,0)
 I $G(DFN)'="" D BLDEVN^VAFCQRY(DFN,"1,2,4,5,6,7",.EVN,.HL,$G(HL("ETN")),.ERR) S CNT=0,EVNX=0 F  S EVNX=$O(EVN(EVNX)) Q:'EVNX  D
"RTN","RGADTP",133,0)
 .I CNT>0 S THLA("HLS",EVN,CNT)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",134,0)
 .I CNT'>0 S THLA("HLS",EVN)=EVN(EVNX),CNT=CNT+1
"RTN","RGADTP",135,0)
 Q
"RTN","RGADTP",136,0)
PID ;;
"RTN","RGADTP",137,0)
 N CNT,PIDX
"RTN","RGADTP",138,0)
 I RGLOCAL D
"RTN","RGADTP",139,0)
 .N HLCOMP S HLCOMP=$E(HL("ECH"),1),THLA("HLS",ENT)=MSG,DFN=$P($P(MSG,HL("FS"),4),HLCOMP) ;**45 REMOVED +
"RTN","RGADTP",140,0)
 .D EVNP
"RTN","RGADTP",141,0)
 .D BLDPID^VAFCQRY(DFN,1,"ALL",.PID,.HL)
"RTN","RGADTP",142,0)
 .;get ICN value in the PID segment
"RTN","RGADTP",143,0)
 .S ARRAY("ICN")=+$P($P(PID(1),HL("FS"),4),HLCOMP)
"RTN","RGADTP",144,0)
 .S CNT=0,PIDX=0 F  S PIDX=$O(PID(PIDX)) Q:'PIDX  D
"RTN","RGADTP",145,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",146,0)
 ..I CNT'>0 S THLA("HLS",ENT)=PID(PIDX),CNT=CNT+1
"RTN","RGADTP",147,0)
 .S ENT=ENT+1
"RTN","RGADTP",148,0)
 I 'RGLOCAL D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","RGADTP",149,0)
 Q
"RTN","RGADTP",150,0)
PD1 ;SET PD1 SEQ 3 TO BE PREFERRED FACILITY INSTEAD OF CMOR PATCH **45
"RTN","RGADTP",151,0)
 N PD1
"RTN","RGADTP",152,0)
 I RGLOCAL D
"RTN","RGADTP",153,0)
 .;S PD1=$$PD1^VAFCSB
"RTN","RGADTP",154,0)
 .;I PD1'="" S THLA("HLS",ENT)=PD1,ENT=ENT+1
"RTN","RGADTP",155,0)
 I 'RGLOCAL S (ARRAY(991.03),ARRAY("CMOR"))=$P($P(MSG,HL("FS"),4),RGC) ;PUTTING BACK TO DO NEED FOR PATCH 40 ON MPI SIDE
"RTN","RGADTP",156,0)
 ;- NO LONGER DEALING WITH CMOR
"RTN","RGADTP",157,0)
 Q
"RTN","RGADTP",158,0)
PV1 ;;
"RTN","RGADTP",159,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",160,0)
 Q
"RTN","RGADTP",161,0)
OBX ;;
"RTN","RGADTP",162,0)
 N COMP,SSNV S COMP=$E(HL("ECH"),1)
"RTN","RGADTP",163,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",164,0)
 I 'RGLOCAL D:$$FREE^RGRSPARS($P($P(MSG,HL("FS"),4),RGC,2))="SECURITY LEVEL"
"RTN","RGADTP",165,0)
 .S ARRAY("SENSITIVITY")=$$SENSTIVE^RGRSPARS($P(MSG,HL("FS"),6),COMP),ARRAY("SENSITIVITY DATE")=$$FREE^RGRSPARS($$FMDATE^HLFNC($P(MSG,HL("FS"),15)))
"RTN","RGADTP",166,0)
 .S ARRAY("SENSITIVITY USER")=$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,2))_","_$$FREE^RGRSPARS($P($P(MSG,HL("FS"),17),RGC,3))
"RTN","RGADTP",167,0)
 ;**45 Get SSN VERIFICATION STATUS out of OBX if message is from the MPI
"RTN","RGADTP",168,0)
 ;I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,2),ARRAY(.0907)=$S(SSNV="VERIFIED":4,SSNV="INVALID":2,1:"@")
"RTN","RGADTP",169,0)
 ;**47 use SSN Verification status code and not words since they have changed since this code was first written
"RTN","RGADTP",170,0)
 ;only update values to valid or invalid other statuses aren't stored in VistA
"RTN","RGADTP",171,0)
 I 'RGLOCAL,$P(HL("SFN"),COMP)="200M" I $P($P(MSG,HL("FS"),4),RGC)="SSN VERIFICATION STATUS" S SSNV=$P($P(MSG,HL("FS"),6),RGC,1),ARRAY(.0907)=$S(SSNV=4:4,SSNV=2:2,1:"@")
"RTN","RGADTP",172,0)
 Q
"RTN","RGADTP",173,0)
ZPD ;;
"RTN","RGADTP",174,0)
 I RGLOCAL S THLA("HLS",ENT)=$$EN1^VAFHLZPD(DFN,"1,17,21,34"),ENT=ENT+1 ;**45 to build new ZPD
"RTN","RGADTP",175,0)
 I 'RGLOCAL S ARRAY(.0906)=$P(MSG,HL("FS"),35) I ARRAY(.0906)=HL("Q") S ARRAY(.0906)="@" ;**45 Pull out pseudo ssn reason
"RTN","RGADTP",176,0)
 Q
"RTN","RGADTP",177,0)
ZSP ;;
"RTN","RGADTP",178,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",179,0)
 I 'RGLOCAL S ARRAY(.301)=$$YESNO^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.302)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.323)=$$POS^RGRSPARS($P(MSG,HL("FS"),5))
"RTN","RGADTP",180,0)
 Q
"RTN","RGADTP",181,0)
ZEL ;;
"RTN","RGADTP",182,0)
 I RGLOCAL D
"RTN","RGADTP",183,0)
 .;**40 to rebuild ZEL segment
"RTN","RGADTP",184,0)
 .I '$D(DFN) S THLA("HLS",ENT)=MSG,ENT=ENT+1 Q  ;don't know DFN pass back original ZEL segment
"RTN","RGADTP",185,0)
 .N VAFZEL D EN1^VAFHLZEL(DFN,"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22",2,.VAFZEL) ;build a complete ZEL segment
"RTN","RGADTP",186,0)
 .;need to take into account may be more than 1 array entry and that each entry could go over 245 so there would be another subscript
"RTN","RGADTP",187,0)
 .N CNT,ZELX S (CNT,ZELX)=0 F  S ZELX=$O(VAFZEL(ZELX)) Q:'ZELX  D
"RTN","RGADTP",188,0)
 ..I CNT>0 S THLA("HLS",ENT,CNT)=VAFZEL(ZELX),CNT=CNT+1
"RTN","RGADTP",189,0)
 ..I CNT'>0 S THLA("HLS",ENT)=VAFZEL(ZELX),ENT=ENT+1
"RTN","RGADTP",190,0)
 I 'RGLOCAL D
"RTN","RGADTP",191,0)
 . S ARRAY(.361)=$$ELIG^RGRSPARS($P(MSG,HL("FS"),3)),ARRAY(.3612)=$$FREE^RGRSPARS($P(MSG,HL("FS"),12))
"RTN","RGADTP",192,0)
 . S ARRAY(.3615)=$$FREE^RGRSPARS($P(MSG,HL("FS"),14)),ARRAY(391)=$$TYPE^RGRSPARS($P(MSG,HL("FS"),10)),ARRAY(1901)=$$VETERAN^RGRSPARS($P(MSG,HL("FS"),9))
"RTN","RGADTP",193,0)
 Q
"RTN","RGADTP",194,0)
ZCT ;;
"RTN","RGADTP",195,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",196,0)
 I 'RGLOCAL S ARRAY(.211)=$$FREE^RGRSPARS($P(MSG,HL("FS"),4)),ARRAY(.219)=$$FREE^RGRSPARS($P(MSG,HL("FS"),7))
"RTN","RGADTP",197,0)
 Q
"RTN","RGADTP",198,0)
ZEM ;;
"RTN","RGADTP",199,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",200,0)
 I 'RGLOCAL S ARRAY(.31115)=$$EMP^RGRSPARS($P(MSG,HL("FS"),4))
"RTN","RGADTP",201,0)
 Q
"RTN","RGADTP",202,0)
ZFF ;;
"RTN","RGADTP",203,0)
 I RGLOCAL S THLA("HLS",ENT)=MSG,ENT=ENT+1
"RTN","RGADTP",204,0)
 I 'RGLOCAL S ARRAY("FLD")=$P(MSG,HL("FS"),3)
"RTN","RGADTP",205,0)
 Q
"RTN","RGADTP",206,0)
PROCIN ;
"RTN","RGADTP",207,0)
 D PROCIN^RGADTP2(.ARRAY,.RGLOCAL,.RGER,.DFN,.HL)
"RTN","RGADTP",208,0)
 Q
"RTN","RGADTP",209,0)
GENACK ;
"RTN","RGADTP",210,0)
 N RGCNT,IEN,RG
"RTN","RGADTP",211,0)
 I $G(ARRAY("DFN"))'>0 S RGER="-1^Unknown ICN#"_$G(ARRAY("ICN"))_" and SSN#"_$G(ARRAY(.09))
"RTN","RGADTP",212,0)
 S RGCNT=1,HLA("HLA",RGCNT)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(RGER)<0:$P(RGER,"^",2,3),1:""),RGCNT=RGCNT+1
"RTN","RGADTP",213,0)
 S RGSITE=$$LKUP^XUAF4(RGSITE)
"RTN","RGADTP",214,0)
 D LINK^HLUTIL3(RGSITE,.RG) S IEN=$O(RG(0)) S HLL("LINKS",1)="^"_RG(IEN)
"RTN","RGADTP",215,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","RGADTP",216,0)
 K HLA
"RTN","RGADTP",217,0)
 Q
"RTN","RGADTP",218,0)
RSP ;
"RTN","RGADTP",219,0)
 Q
"RTN","RGADTP1")
0^2^B32629728^B31035462
"RTN","RGADTP1",1,0)
RGADTP1 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;6/2/02
"RTN","RGADTP1",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**26,27,42,45,44,47**;30 Apr 99;Build 10
"RTN","RGADTP1",3,0)
PIDP(MSG,ARRAY,HL) ;process PID segment
"RTN","RGADTP1",4,0)
 N ID,IDS,PIDAA,PIDNTC
"RTN","RGADTP1",5,0)
 ;Since PID can be over 245 characters loop through setting a PID ARRAY
"RTN","RGADTP1",6,0)
 ;sequenced PID(1)="PID"... PID(4 or 5) can be over 245 characters so
"RTN","RGADTP1",7,0)
 ;it will also loop and place it in PID(4,1...
"RTN","RGADTP1",8,0)
 ;
"RTN","RGADTP1",9,0)
 ; Input variables
"RTN","RGADTP1",10,0)
 ;   assumes that MSG or MSG(I) will contain the PID segment
"RTN","RGADTP1",11,0)
 ; Output ARRAY ARRAY will contain the following subscripts
"RTN","RGADTP1",12,0)
 ;   SSN - patient SSN
"RTN","RGADTP1",13,0)
 ;   ICN - patient ICN
"RTN","RGADTP1",14,0)
 ;   DFN - sites local identifier
"RTN","RGADTP1",15,0)
 ;   MPISSITE - authoritative source (station# of sending site)
"RTN","RGADTP1",16,0)
 ;   SEX - patient's SEX
"RTN","RGADTP1",17,0)
 ;   MPIDOB - Date of Birth
"RTN","RGADTP1",18,0)
 ;   NAME,SURNAME,FIRST,MIDDLE,PREFIX,and SUFFIX - Patient Name
"RTN","RGADTP1",19,0)
 ;   MMN - Mother's maiden name
"RTN","RGADTP1",20,0)
 ;   POBCITY, POBSTATE - Place of birth city and state
"RTN","RGADTP1",21,0)
 ;
"RTN","RGADTP1",22,0)
 N PID,MPIJ,LNGTH,LNGTH1,PID1,SEQ,SEQ1,COMP,SUBCOMP,REP,HLECH,X,Y,CNT,NXT,ID,IDS,PIDAA,PIDNTC,NAME,LNGTH2,PIDSITE,PIDXDT,HLECH,HLFS
"RTN","RGADTP1",23,0)
 S HLFS=HL("FS"),HLECH=HL("ECH")
"RTN","RGADTP1",24,0)
 S ARRAY("DFN")="",ARRAY("ICN")="",ARRAY("CLAIMN")="",ARRAY("SSN")=""
"RTN","RGADTP1",25,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","RGADTP1",26,0)
 S LNGTH=$L(MSG,HL("FS")) F SEQ=1:1:LNGTH S PID(SEQ)=$P(MSG,HL("FS"),SEQ)
"RTN","RGADTP1",27,0)
 S SEQ1=1,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","RGADTP1",28,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","RGADTP1",29,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","RGADTP1",30,0)
 ... I $L($G(PID(SEQ)))=245 D  Q
"RTN","RGADTP1",31,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))>245 S LNGTH1=$L(PID(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","RGADTP1",32,0)
 .... I $L(NXT_$G(PID(SEQ,SEQ1)))'>245 S PID(SEQ,SEQ1)=$G(PID(SEQ,SEQ1))_NXT
"RTN","RGADTP1",33,0)
 ... I $L(NXT_$G(PID(SEQ)))>245 S LNGTH1=$L($G(PID(SEQ))) S LNGTH2=245-LNGTH1,PID(SEQ)=$G(PID(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S PID(SEQ,SEQ1)=NXT
"RTN","RGADTP1",34,0)
 ... I $L(NXT_$G(PID(SEQ)))'>245 S PID(SEQ)=$G(PID(SEQ))_NXT Q
"RTN","RGADTP1",35,0)
 ;get PID-3 Patient Identifier List (three ids should be returned ICN, SSN, and DFN)
"RTN","RGADTP1",36,0)
 N LASTID,IDCNT,CNT
"RTN","RGADTP1",37,0)
 S IDS=PID(4)
"RTN","RGADTP1",38,0)
 S LASTID=$L(IDS,REP),IDCNT=1,IDS=PID(4),CNT=1
"RTN","RGADTP1",39,0)
 F X=1:1:LASTID S ID=$P(IDS,REP,X) D
"RTN","RGADTP1",40,0)
 .;if this is the last entry check for an extension of the message and reset the key variables
"RTN","RGADTP1",41,0)
 .I X=LASTID I $D(PID(4,IDCNT)) S ID=ID_$P(PID(4,IDCNT),REP),IDS=$P(PID(4,IDCNT),REP,2,99),IDCNT=IDCNT+1,X=0,LASTID=$L(IDS,REP)
"RTN","RGADTP1",42,0)
 . ;get id, assigning authority, and name type code
"RTN","RGADTP1",43,0)
 . S PIDAA=$P($P(ID,COMP,4),SUBCOMP),PIDNTC=$P(ID,COMP,5),PIDSITE=$P($P(ID,COMP,6),SUBCOMP,2),PIDXDT=$P(ID,COMP,8)
"RTN","RGADTP1",44,0)
 . S ID=$P(ID,COMP)
"RTN","RGADTP1",45,0)
 . Q:ID=""
"RTN","RGADTP1",46,0)
 . ;check assigning authority(0363) AND name type code(0203)
"RTN","RGADTP1",47,0)
 . I PIDAA="USVHA" D
"RTN","RGADTP1",48,0)
 .. I PIDNTC="NI" D
"RTN","RGADTP1",49,0)
 ... I $G(PIDXDT)="" S ARRAY("ICN")=ID,ARRAY("MPISSITE")=PIDSITE,ARRAY(991.02)=$P(ID,"V",2)  ;National unique individual identifier
"RTN","RGADTP1",50,0)
 ... I $G(PIDXDT)'="" S ARRAY("OID",CNT)=ID_"^"_PIDAA_"^"_PIDSITE_"^"_PIDXDT,CNT=CNT+1  ;Deprecated National unique individual identifier
"RTN","RGADTP1",51,0)
 .. I PIDNTC="PI" S ARRAY("DFN")=ID,ARRAY("DFNLOC")=PIDSITE  ;Patient internal identifier
"RTN","RGADTP1",52,0)
 . I PIDAA="USSSA" D
"RTN","RGADTP1",53,0)
 .. I PIDNTC="SS",PIDXDT="" S ARRAY("SSN")=ID I ID=HL("Q") S ARRAY("SSN")="@"  ;Social Security number **44 (new) look out for alias ssns
"RTN","RGADTP1",54,0)
 .. ;**47 includes HL("Q") check
"RTN","RGADTP1",55,0)
 . I PIDAA="USVBA" D
"RTN","RGADTP1",56,0)
 .. I PIDNTC="PN" S ARRAY("CLAIMN")=ID  ;VBA CLAIM#
"RTN","RGADTP1",57,0)
 ;get PID-4 alternate ID (ICN History)
"RTN","RGADTP1",58,0)
 I $G(PID(5))'="" D
"RTN","RGADTP1",59,0)
 . S CNT=1
"RTN","RGADTP1",60,0)
 . F X=1:1:$L(PID(5),REP) S ARRAY("OID",CNT)=$P(PID(5),REP,X),CNT=CNT+1
"RTN","RGADTP1",61,0)
 . S Y=0 F  S Y=$O(PID(5,Y)) Q:'Y  D
"RTN","RGADTP1",62,0)
 .. S ARRAY("OID",CNT-1)=ARRAY("OID",CNT-1)_$P(PID(5,Y),REP)
"RTN","RGADTP1",63,0)
 .. F X=2:1:$L(PID(5,Y),REP) S ARRAY("OID",CNT)=$P(PID(5,Y),REP,X),CNT=CNT+1
"RTN","RGADTP1",64,0)
 . S X=0 F  S X=$O(ARRAY("OID",X)) Q:'X  D
"RTN","RGADTP1",65,0)
 .. N ID,AA,AL S ID=$P(ARRAY("OID",X),COMP),AA=$P($P(ARRAY("OID",X),COMP,4),SUBCOMP,1),AL=$P($P(ARRAY("OID",X),COMP,6),SUBCOMP,2) S AL=$$IEN^XUAF4(AL)
"RTN","RGADTP1",66,0)
 .. S ARRAY("OID",X)=ID_"^"_AA_"^"_AL
"RTN","RGADTP1",67,0)
 ;get PID-5 Patient Name
"RTN","RGADTP1",68,0)
 I $G(PID(6))'="" S NAME=PID(6),ARRAY("SURNAME")=$P(NAME,COMP),ARRAY("FIRST")=$P(NAME,COMP,2),ARRAY("MIDDLE")=$P(NAME,COMP,3),ARRAY("PREFIX")=$P(NAME,COMP,4),ARRAY("SUFFIX")=$P(NAME,COMP,5) D
"RTN","RGADTP1",69,0)
 . S ARRAY("NAME")=$$FMNAME^HLFNC($P(PID(6),COMP,1,6))
"RTN","RGADTP1",70,0)
 ;get PID-6 Mother's maiden name
"RTN","RGADTP1",71,0)
 S ARRAY("MMN")=$P($G(PID(7)),COMP,1,5) D
"RTN","RGADTP1",72,0)
 . I $P(ARRAY("MMN"),COMP)'=HL("Q") S HLECH=HL("ECH") S ARRAY("MMN")=$$FREE^RGRSPARS($$FMNAME^HLFNC(ARRAY("MMN"))) Q
"RTN","RGADTP1",73,0)
 . I $P(ARRAY("MMN"),COMP)=HL("Q") S ARRAY("MMN")=$$FREE^RGRSPARS($P(ARRAY("MMN"),COMP))
"RTN","RGADTP1",74,0)
 ;get PID-7 Date of Birth
"RTN","RGADTP1",75,0)
 ;**47 taking HL("Q") into account
"RTN","RGADTP1",76,0)
 I $G(PID(8))=HL("Q") S PID(8)="@",ARRAY("MPIDOB")="@"
"RTN","RGADTP1",77,0)
 I $G(PID(8))'="@" S ARRAY("MPIDOB")=$$FMDATE^HLFNC($G(PID(8)))
"RTN","RGADTP1",78,0)
 ;get PID-8 Sex
"RTN","RGADTP1",79,0)
 ;**47 taking HL("Q") into account
"RTN","RGADTP1",80,0)
 I $G(PID(9))=HL("Q") S PID(9)="@"
"RTN","RGADTP1",81,0)
 S ARRAY("SEX")=$G(PID(9))
"RTN","RGADTP1",82,0)
 ;get PID-11-3 ADDRESS BOTH "P"rimary and "N" Place of
"RTN","RGADTP1",83,0)
 S CNT=1
"RTN","RGADTP1",84,0)
 N ADRTYPE,ADDR
"RTN","RGADTP1",85,0)
 F X=1:1:$L(PID(12),REP) D
"RTN","RGADTP1",86,0)
 . S ADDR=$P(PID(12),REP,X),ADRTYPE=$P(ADDR,COMP,7)
"RTN","RGADTP1",87,0)
 . I ADRTYPE="P" D
"RTN","RGADTP1",88,0)
 .. S ADDR=$$FREE^RGRSPARS(ADDR)
"RTN","RGADTP1",89,0)
 .. S ARRAY(.111)=$$FREE^RGRSPARS($P(ADDR,COMP,1))  ;addr [1]
"RTN","RGADTP1",90,0)
 .. S ARRAY(.112)=$$FREE^RGRSPARS($P(ADDR,COMP,2))  ;addr [2]
"RTN","RGADTP1",91,0)
 .. S ARRAY(.113)=$$FREE^RGRSPARS($P(ADDR,COMP,8))  ;addr [3]
"RTN","RGADTP1",92,0)
 .. S ARRAY(.114)=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;city
"RTN","RGADTP1",93,0)
 .. S ARRAY(.115)=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;state
"RTN","RGADTP1",94,0)
 .. S ARRAY(.1112)=$$FREE^RGRSPARS($P(ADDR,COMP,5))  ;zip+4
"RTN","RGADTP1",95,0)
 .. N CNTYCODE S CNTYCODE=PID(13)  ;county code
"RTN","RGADTP1",96,0)
 .. S ARRAY(.117)=$$COUNTY^RGRSPARS(ARRAY(.115),CNTYCODE)
"RTN","RGADTP1",97,0)
 .. S ARRAY(.131)=$$FREE^RGRSPARS(PID(14))
"RTN","RGADTP1",98,0)
 .. S ARRAY(.132)=$$FREE^RGRSPARS(PID(15))
"RTN","RGADTP1",99,0)
 . I ADRTYPE="N" D
"RTN","RGADTP1",100,0)
 .. S ARRAY("POBCITY")=$$FREE^RGRSPARS($P(ADDR,COMP,3))  ;POB city
"RTN","RGADTP1",101,0)
 .. S ARRAY("POBSTATE")=$$STATE^RGRSPARS($P(ADDR,COMP,4))  ;POB state
"RTN","RGADTP1",102,0)
 ;marital status
"RTN","RGADTP1",103,0)
 S ARRAY(.05)=$$MARITAL^RGRSPARS(PID(17))
"RTN","RGADTP1",104,0)
 ;multiple birth indicator **47
"RTN","RGADTP1",105,0)
 S ARRAY("MBI")=$G(PID(25)) I ARRAY("MBI")=HL("Q") S ARRAY("MBI")="@" ;**47 to get MBI and setup as yes/no field change to @ if HL("Q")
"RTN","RGADTP1",106,0)
 ;;REMOVED FROM PATCH 45 DUE TO NEEDING DG707
"RTN","RGADTP1",107,0)
 ;religious preference
"RTN","RGADTP1",108,0)
 S ARRAY(.08)=$$RELIG^RGRSPARS(PID(18))
"RTN","RGADTP1",109,0)
 ;address
"RTN","RGADTP1",110,0)
 ;get PID-29 Date of Death
"RTN","RGADTP1",111,0)
 S ARRAY("MPIDOD")=$$FREE^RGRSPARS($$FMDATE^HLFNC($G(PID(30)))),ARRAY(.351)=ARRAY("MPIDOD")
"RTN","RGADTP1",112,0)
 Q
"RTN","RGADTP2")
0^3^B68268271^B42653247
"RTN","RGADTP2",1,0)
RGADTP2 ;BIR/DLR-ADT PROCESSOR TO RETRIGGER A08 or A04 MESSAGES WITH AL/AL (COMMIT/APPLICATION) ACKNOWLEDGEMENTS - CONTINUED ;10/30/02  10:04
"RTN","RGADTP2",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**27,20,45,44,47**;30 Apr 99;Build 10
"RTN","RGADTP2",3,0)
DBIA ;
"RTN","RGADTP2",4,0)
 ;Reference to $$ADD^VAFCEHU1 supported by IA #2753
"RTN","RGADTP2",5,0)
 ;Reference to $$SEND2^VAFCUTL1 supported by IA #2779
"RTN","RGADTP2",6,0)
 ;Reference to EDIT^VAFCPTED supported by IA #2784
"RTN","RGADTP2",7,0)
 Q
"RTN","RGADTP2",8,0)
PROCIN(ARRAY,RGLOCAL,RGER,DFN,HL) ;
"RTN","RGADTP2",9,0)
 N RGRSDFN,OTHSITE,NODE,ICN,CMORIEN,CMOR,CMORDISP,SENSTVTY,RMTDOD,LOCDOD,VAFCA,VAFCA08,HERE,BOGUS,ARAY,REP
"RTN","RGADTP2",10,0)
 S REP=$E(HL("ECH"),2)
"RTN","RGADTP2",11,0)
 S HERE=$P($$SITE^VASITE,"^",3)
"RTN","RGADTP2",12,0)
 ;if sending site is your site quit
"RTN","RGADTP2",13,0)
 Q:$G(ARRAY("MPISSITE"))=$G(HERE)
"RTN","RGADTP2",14,0)
 S ARRAY(.097)=$P($$NOW^XLFDT,".")
"RTN","RGADTP2",15,0)
 I $G(ARRAY("ICN"))'="" D
"RTN","RGADTP2",16,0)
 . S RGRSDFN=$$GETDFN^MPIF001(+ARRAY("ICN")) I +RGRSDFN<1 S RGER=RGRSDFN_" ICN#"_$G(ARRAY("ICN")) Q  ;quit and return error msg
"RTN","RGADTP2",17,0)
 . S OTHSITE=ARRAY("SENDING SITE")
"RTN","RGADTP2",18,0)
 . ;**40 REMOVED THE PLUS TO KEEP SUFFIX ON STATION# & CHANGED THE SITE TO BE SENDING SITE INSTEAD OF AUTHORITATIVE SOURCE
"RTN","RGADTP2",19,0)
 I $G(RGRSDFN)="" S RGRSDFN=$G(DFN)
"RTN","RGADTP2",20,0)
 I $G(RGRSDFN)="" S RGER="-1^DFN not defined"
"RTN","RGADTP2",21,0)
 Q:$G(RGER)
"RTN","RGADTP2",22,0)
 I $G(OTHSITE)="" S OTHSITE=""
"RTN","RGADTP2",23,0)
 I +$$SEND2^VAFCUTL1(RGRSDFN,"T")  ;quit and return error msg
"RTN","RGADTP2",24,0)
 S NODE=$$MPINODE^MPIFAPI(RGRSDFN)
"RTN","RGADTP2",25,0)
 S ICN=$P(NODE,"^")
"RTN","RGADTP2",26,0)
 S CMORIEN=$P(NODE,"^",3)
"RTN","RGADTP2",27,0)
 S CMOR=$$NS^XUAF4(CMORIEN)
"RTN","RGADTP2",28,0)
 S CMORDISP=$P(CMOR,"^",1)
"RTN","RGADTP2",29,0)
 S CMOR=$P(CMOR,"^",2)
"RTN","RGADTP2",30,0)
 ;
"RTN","RGADTP2",31,0)
 ;If patient is Sensitive at other site but not here send bulletin
"RTN","RGADTP2",32,0)
 I $G(ARRAY("SENSITIVITY"))'="" S SENSTVTY=$G(ARRAY("SENSITIVITY")) D
"RTN","RGADTP2",33,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",34,0)
 . I '$$SENSTIVE^RGRSENS(RGRSDFN),SENSTVTY D
"RTN","RGADTP2",35,0)
 .. S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",36,0)
 .. S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",37,0)
 .. S ARAY("SENSITIVITY USER")=ARRAY("SENSITIVITY USER")
"RTN","RGADTP2",38,0)
 .. S ARAY("SENSITIVITY DATE")=ARRAY("SENSITIVITY DATE")
"RTN","RGADTP2",39,0)
 .. D SENSTIVE^RGRSBUL1(RGRSDFN,"ARAY",NAME)
"RTN","RGADTP2",40,0)
 ;
"RTN","RGADTP2",41,0)
 ;If patient has DATE OF DEATH (DOD) at remote site send bulletin
"RTN","RGADTP2",42,0)
 ;Ignore time if present with date.
"RTN","RGADTP2",43,0)
 S RMTDOD=$G(ARRAY("MPIDOD")),RMTDOD=$P(RMTDOD,".")
"RTN","RGADTP2",44,0)
 S DFN=RGRSDFN D DEM^VADPT
"RTN","RGADTP2",45,0)
 S LOCDOD=$P($P(VADM(6),"^"),".")
"RTN","RGADTP2",46,0)
 ;If there is a remote DOD but no local DOD  OR
"RTN","RGADTP2",47,0)
 ;if remote DOD is different from local DOD, send bulletin
"RTN","RGADTP2",48,0)
 I RMTDOD D
"RTN","RGADTP2",49,0)
 . N NAME S NAME=ARRAY("NAME")
"RTN","RGADTP2",50,0)
 . S ARAY("SSN")=ARRAY("SSN")
"RTN","RGADTP2",51,0)
 . S ARAY("SENDING SITE")=ARRAY("SENDING SITE")
"RTN","RGADTP2",52,0)
 . D RMTDOD^RGRSBUL1(RGRSDFN,"ARAY",NAME,RMTDOD,LOCDOD)
"RTN","RGADTP2",53,0)
 K VADM
"RTN","RGADTP2",54,0)
 ;
"RTN","RGADTP2",55,0)
NOTLOC I 'RGLOCAL D
"RTN","RGADTP2",56,0)
 . ;if sending site is not the CMOR AND NOT THE MPI - log update into PDR if differences exist **45 ADDED MPI
"RTN","RGADTP2",57,0)
 . I (OTHSITE)'=(CMOR)&(OTHSITE'="200M") D  Q
"RTN","RGADTP2",58,0)
 .. S VAFCA=$P($$NOW^XLFDT,".")_"^"_$$NOW^XLFDT_"^"_$G(ARRAY("SENDING SITE"))_"^"_RGRSDFN
"RTN","RGADTP2",59,0)
 .. S ARRAY(.01)=$$FREE^RGRSPARS(ARRAY("NAME"))
"RTN","RGADTP2",60,0)
 .. S ARRAY(.03)=$$FREE^RGRSPARS($G(ARRAY("MPIDOB")))
"RTN","RGADTP2",61,0)
 .. S ARRAY(.09)=$$FREE^RGRSPARS($G(ARRAY("SSN")))
"RTN","RGADTP2",62,0)
 .. S ARRAY(.02)=$$SEX^RGRSPARS($G(ARRAY("SEX")))
"RTN","RGADTP2",63,0)
 .. S ARRAY(.2403)=$$FREE^RGRSPARS($G(ARRAY("MMN")))
"RTN","RGADTP2",64,0)
 .. S ARRAY(991.01)=$P($G(ARRAY("ICN")),"V")
"RTN","RGADTP2",65,0)
 .. N ARAY M ARAY(2)=ARRAY
"RTN","RGADTP2",66,0)
 .. S VAFCA08=1 S BOGUS=$$ADD^VAFCEHU1(VAFCA,"ARAY")
"RTN","RGADTP2",67,0)
 . ;if sending site is the CMOR OR MPI - synchronize data **45 ADDED MPI AND SSNV TO UPDATED FIELDS
"RTN","RGADTP2",68,0)
 . I (OTHSITE)=(CMOR)!(OTHSITE="200M") D
"RTN","RGADTP2",69,0)
 .. ;**44
"RTN","RGADTP2",70,0)
 .. ;is there an outstanding edit in the ADT/HL7 PIVOT file for this patient for an identity element
"RTN","RGADTP2",71,0)
 .. S RGER=$$CHKPVT(.ARRAY) Q:+RGER<0
"RTN","RGADTP2",72,0)
 .. N DR
"RTN","RGADTP2",73,0)
 .. D DIFF(.ARRAY,RGRSDFN,.DR,.ARRAY) ;**47
"RTN","RGADTP2",74,0)
 .. ;S DR=".01;.03;.09;.02;.2403;994" ;DR string setup in DIFF
"RTN","RGADTP2",75,0)
 .. I DR'="" D
"RTN","RGADTP2",76,0)
 ... S VAFCA08=1
"RTN","RGADTP2",77,0)
 ... S ARAY(2,.01)=ARRAY("NAME")
"RTN","RGADTP2",78,0)
 ... S ARAY(2,.03)=$G(ARRAY("MPIDOB"))
"RTN","RGADTP2",79,0)
 ... I ARRAY("SSN")'="" S ARAY(2,.09)=$G(ARRAY("SSN")) ;**45 only set SSN to update if it isn't null
"RTN","RGADTP2",80,0)
 ... S ARAY(2,.02)=$G(ARRAY("SEX"))
"RTN","RGADTP2",81,0)
 ... S ARAY(2,.2403)=$G(ARRAY("MMN"))
"RTN","RGADTP2",82,0)
 ... ;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP2",83,0)
 ... N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",84,0)
 .... S ARAY(2,.0907)=$G(ARRAY(.0907)) S DR=DR_".0907;"
"RTN","RGADTP2",85,0)
 ... ;if pseudo SSN reason field has been added to the DD then attempt to set it
"RTN","RGADTP2",86,0)
 ... N ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",87,0)
 .... S ARAY(2,.0906)=$G(ARRAY(.0906)) S DR=DR_".0906;"
"RTN","RGADTP2",88,0)
 ... S ARAY(2,994)=$G(ARRAY("MBI"))
"RTN","RGADTP2",89,0)
 ... D EDIT^VAFCPTED(RGRSDFN,"ARAY(2)",DR)
"RTN","RGADTP2",90,0)
 ... ;check to see if edits were successful, if not set RGER="why it failed"
"RTN","RGADTP2",91,0)
 ... N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI
"RTN","RGADTP2",92,0)
 ... S NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I")
"RTN","RGADTP2",93,0)
 ... S PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I")
"RTN","RGADTP2",94,0)
 ... S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I")
"RTN","RGADTP2",95,0)
 ... S SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I")
"RTN","RGADTP2",96,0)
 ... S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I")
"RTN","RGADTP2",97,0)
 ... S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I")
"RTN","RGADTP2",98,0)
 ... S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I")
"RTN","RGADTP2",99,0)
 ... D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP2",100,0)
 ... I NAME'=$G(HLNAME) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"Name field failure"
"RTN","RGADTP2",101,0)
 ... I PDOB'=$G(ARRAY("MPIDOB")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"DOB field failure"
"RTN","RGADTP2",102,0)
 ... I $G(ARRAY("SSN"))'="",SSN'=$G(ARRAY("SSN")) D
"RTN","RGADTP2",103,0)
 .... I $G(ARRAY("SSN"))="P",SSN["P" Q  ;**47 NEEDED TO CREATE PSEUDO AND DID
"RTN","RGADTP2",104,0)
 .... S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN field failure" ;**45 only check if SSN is sent isn't null
"RTN","RGADTP2",105,0)
 ... I SEX'=$G(ARRAY("SEX")) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SEX field failure"
"RTN","RGADTP2",106,0)
 ... D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP2",107,0)
 ... I MMN'=$G(HLMMN) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MOTHER'S MAIDEN NAME field failure"
"RTN","RGADTP2",108,0)
 ... I $D(ARAY(2,.0907)) S:$G(ARRAY(.0907))="@" ARRAY(.0907)="" I SSNV'=$G(ARRAY(.0907)) S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"SSN VERIFICATION field failure"
"RTN","RGADTP2",109,0)
 ... ;**REMOVED MBI FROM PATCH 45 PUT BACK IN **47
"RTN","RGADTP2",110,0)
 ... I MBI'=$G(ARRAY("MBI")) D
"RTN","RGADTP2",111,0)
 .... Q:MBI=""&($G(ARRAY("MBI"))="@")  ;**47 "" AND @ ARE THE SAME
"RTN","RGADTP2",112,0)
 .... S RGER=$S($G(RGER)'="":$G(RGER)_REP,1:"-1^")_"MULTIPLE BIRTH INDICATOR field failure"
"RTN","RGADTP2",113,0)
 ... ;send the updated fields to the MPI to synch site with MPI
"RTN","RGADTP2",114,0)
 ... I HL("ETN")'="A31" S ZTSAVE("DFN")="",ZTRTN="MPISYN^RGADTPC",ZTDESC="Sending Synchronized Patient Data to MPI...",ZTIO="RG QUEUE",ZTDTH=$H D ^%ZTLOAD
"RTN","RGADTP2",115,0)
 ... ;**45 ^ don't trigger A31 sync message if A31 was being processed-- ack to a31 will sync id elements on MPI
"RTN","RGADTP2",116,0)
 Q
"RTN","RGADTP2",117,0)
CHKPVT(ARRAY) ;CHECKS TO SEE IF OUTSTANDING IDENTITY EDIT IS WAITING TO BE SENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP2",118,0)
 ;**44 CREATED
"RTN","RGADTP2",119,0)
 ;ARRAY CONTAINS THE ARRAY ELEMENTS NEEDED TO FIND THE PATIENT IN THE ADT/HL7 PIVOT FILE
"RTN","RGADTP2",120,0)
 ;RETURNED IS -1^EDIT PENDING IN PIVOT FILE OR 0 IF THERE ISN'T ONE
"RTN","RGADTP2",121,0)
 I '$D(^VAT(391.71,"C",ARRAY("DFN"))) Q 0
"RTN","RGADTP2",122,0)
 N PIV,FIELDS
"RTN","RGADTP2",123,0)
 S PIV=$O(^VAT(391.71,"C",ARRAY("DFN"),"A"),-1) ;get last entry in the pivot file for this patient
"RTN","RGADTP2",124,0)
 I '$D(^VAT(391.71,"AXMIT",4,PIV))&('$D(^VAT(391.71,"AXMIT",3,PIV))) Q 0
"RTN","RGADTP2",125,0)
 S FIELDS=$$GET1^DIQ(391.71,PIV_",",2.1,"I")
"RTN","RGADTP2",126,0)
 I FIELDS[".01;"!(FIELDS[".02;")!(FIELDS[".03;")!(FIELDS[".09;")!(FIELDS[".0906;")!(FIELDS[".2403;")!(FIELDS["994;") Q "-1^DFN "_ARRAY("DFN")_":  Edits made to identity fields waiting to come to MPI, MPI update not processed as of yet."
"RTN","RGADTP2",127,0)
 Q 0
"RTN","RGADTP2",128,0)
DIFF(ARRAY,RGRSDFN,DR,ARAY) ; are there fields to update? **47
"RTN","RGADTP2",129,0)
 N NAME,SSN,PDOB,SEX,MMN,OLDNAME,OLDHLNAM,OLDMMN,OLDHLMMN,HLNAME,HLMMN,SSNV,MBI,PSNR
"RTN","RGADTP2",130,0)
 S DR=""
"RTN","RGADTP2",131,0)
 S NAME=$$GET1^DIQ(2,+RGRSDFN_",",.01,"I")
"RTN","RGADTP2",132,0)
 D STDNAME^XLFNAME(.NAME,"F",.OLDNAME) S HLNAME=ARRAY("NAME") D STDNAME^XLFNAME(.HLNAME,"F",.OLDHLNAM)
"RTN","RGADTP2",133,0)
 I NAME'=$G(HLNAME) S DR=DR_".01;",ARAY(2,.01)=ARRAY("NAME")
"RTN","RGADTP2",134,0)
 S PDOB=$$GET1^DIQ(2,+RGRSDFN_",",.03,"I") I PDOB'=ARRAY("MPIDOB") S DR=DR_".03;",ARAY(2,.03)=ARRAY("MPIDOB")
"RTN","RGADTP2",135,0)
 S SSN=$$GET1^DIQ(2,+RGRSDFN_",",.09,"I") D
"RTN","RGADTP2",136,0)
 .I SSN["P",ARRAY("SSN")=""!(ARRAY("SSN")="@") Q
"RTN","RGADTP2",137,0)
 .; ^ treat pseudos and null/@ as the same
"RTN","RGADTP2",138,0)
 .; **47 if incoming SSN value is null/@ and existing SSN isn't a pseudo create a new pseudo SSN
"RTN","RGADTP2",139,0)
 .I SSN'["P" I ARRAY("SSN")="@"!(ARRAY("SSN")="") S ARRAY("SSN")="P"
"RTN","RGADTP2",140,0)
 .I SSN'=ARRAY("SSN"),ARRAY("SSN")'="" S DR=DR_".09;",ARAY(2,.09)=ARRAY("SSN")
"RTN","RGADTP2",141,0)
 S SEX=$$GET1^DIQ(2,+RGRSDFN_",",.02,"I") D
"RTN","RGADTP2",142,0)
 .I SEX=""&(ARRAY("SEX")="@") Q
"RTN","RGADTP2",143,0)
 .; ^ treat null and @ as same
"RTN","RGADTP2",144,0)
 .I SEX'=ARRAY("SEX") S DR=DR_".02;",ARAY(2,.02)=ARRAY("SEX")
"RTN","RGADTP2",145,0)
 S SSNV=$$GET1^DIQ(2,+RGRSDFN_",",.0907,"I") I SSNV="" S SSNV="@"
"RTN","RGADTP2",146,0)
 ;if SSN VERIFICATION STATUS field has been added to the DD then attempt to set it
"RTN","RGADTP2",147,0)
 N ERROR,LABEL D FIELD^DID(2,.0907,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",148,0)
 .I SSNV'=ARRAY(.0907) S ARAY(2,.0907)=$G(ARRAY(.0907)),DR=DR_".0907;"
"RTN","RGADTP2",149,0)
 S PSNR=$$GET1^DIQ(2,+RGRSDFN_",",.0906,"I") I PSNR="" S PSNR="@"
"RTN","RGADTP2",150,0)
 ;if Pseudo SSN Reason field has been added to the DD then attempt to set it
"RTN","RGADTP2",151,0)
 N ERROR,LABEL D FIELD^DID(2,.0906,"","LABEL","LABEL","ERROR") I '$D(ERROR("DIERR"))&$D(LABEL("LABEL")) D
"RTN","RGADTP2",152,0)
 .I PSNR'=ARRAY(.0906) S ARAY(2,.0906)=$G(ARRAY(.0906)),DR=DR_".0906;"
"RTN","RGADTP2",153,0)
 S MBI=$$GET1^DIQ(2,+RGRSDFN_",",994,"I") I MBI="" S MBI="@"
"RTN","RGADTP2",154,0)
 I MBI="@"&(ARRAY("MBI")="") Q
"RTN","RGADTP2",155,0)
 ; ^ treat @ and null as the same
"RTN","RGADTP2",156,0)
 I MBI'=ARRAY("MBI") S DR=DR_"994;",ARAY(2,994)=ARRAY("MBI")
"RTN","RGADTP2",157,0)
 S MMN=$$GET1^DIQ(2,+RGRSDFN_",",.2403,"I") I MMN="" S MMN="@"
"RTN","RGADTP2",158,0)
 D STDNAME^XLFNAME(.MMN,"F",.OLDMMN) S HLMMN=ARRAY("MMN") D STDNAME^XLFNAME(.HLMMN,"F",.OLDHLMMN)
"RTN","RGADTP2",159,0)
 I MMN="@"&($G(HLMMN)="") Q
"RTN","RGADTP2",160,0)
 ; ^ treat @ and null as same
"RTN","RGADTP2",161,0)
 I MMN'=$G(HLMMN) S DR=DR_".2403;",ARAY(2,.2403)=ARRAY("MMN")
"RTN","RGADTP2",162,0)
 Q
"RTN","RGEX01")
0^5^B33945025^B32784010
"RTN","RGEX01",1,0)
RGEX01 ;BAY/ALS-LIST MANAGER FOR MPI/PD EXCEPTIONS ;10/07/99
"RTN","RGEX01",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**3,12,19,23,43,45,47**;30 Apr 99;Build 10
"RTN","RGEX01",3,0)
 ;
"RTN","RGEX01",4,0)
 ;Reference to MAIN^VAFCPDAT supported by IA #3299
"RTN","RGEX01",5,0)
EN ; -- main entry point for RG EXCPT SUMMARY
"RTN","RGEX01",6,0)
 N STDT,ENDDT,PRGSTAT,XFLAG
"RTN","RGEX01",7,0)
 S XFLAG=0
"RTN","RGEX01",8,0)
 S STDT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",1)
"RTN","RGEX01",9,0)
 I $D(STDT) S STDT=$$FMTE^XLFDT(STDT,1)
"RTN","RGEX01",10,0)
 S PRGSTAT=$P($G(^RGSITE(991.8,1,"EXCPRG")),"^",3)
"RTN","RGEX01",11,0)
 ;status shows 'running' but lock shows 'not running';**47
"RTN","RGEX01",12,0)
 I PRGSTAT="R" D
"RTN","RGEX01",13,0)
 .L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I $T D  ;can get lock
"RTN","RGEX01",14,0)
 ..L +^RGSITE(991.8):10
"RTN","RGEX01",15,0)
 ..S DIE="^RGSITE(991.8,",DA=1,DR="42///@"
"RTN","RGEX01",16,0)
 ..D ^DIE K DA,DIE,DR ;delete old status
"RTN","RGEX01",17,0)
 ..L -^RGSITE(991.8)
"RTN","RGEX01",18,0)
 ..S PRGSTAT=""
"RTN","RGEX01",19,0)
 .L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",20,0)
 I PRGSTAT="" D
"RTN","RGEX01",21,0)
 . W $C(7)
"RTN","RGEX01",22,0)
 . W !!,"The MPI/PD Exception Purge process has not been run."
"RTN","RGEX01",23,0)
 . S DIR(0)="YA",DIR("B")="NO"
"RTN","RGEX01",24,0)
 . S DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",25,0)
 . S DIR("A")="Do you want to run it now? "
"RTN","RGEX01",26,0)
 . D ^DIR K DIR
"RTN","RGEX01",27,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",28,0)
 . I Y>0 D
"RTN","RGEX01",29,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",30,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",31,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",32,0)
 L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T W $C(7),!!,"The MPI/PD Exception Purge process is currently running.",!,"Please try this option again in ten minutes." S XFLAG=1 G EXIT
"RTN","RGEX01",33,0)
 L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",34,0)
 I $G(PRGSTAT)="C" D
"RTN","RGEX01",35,0)
 . W !!,"The MPI/PD Exception Purge process last ran "_STDT_"."
"RTN","RGEX01",36,0)
 . S DIR(0)="YA",DIR("B")="NO",DIR("??")="^D HLPPRG^RGEX01"
"RTN","RGEX01",37,0)
 . S DIR("A")="Do you want to run the MPI/PD Exception Purge process now? "
"RTN","RGEX01",38,0)
 . D ^DIR K DIR,RGANS S RGANS=Y
"RTN","RGEX01",39,0)
 . I $D(DIRUT)!$D(DUOUT) S XFLAG=1 Q
"RTN","RGEX01",40,0)
 . Q:RGANS=0  ;**43
"RTN","RGEX01",41,0)
 . L +^RGHL7(991.1,"RG PURGE EXCEPTION"):0 I '$T S RGANS=0 Q  ;**43
"RTN","RGEX01",42,0)
 . L -^RGHL7(991.1,"RG PURGE EXCEPTION")
"RTN","RGEX01",43,0)
 . I RGANS>0 D
"RTN","RGEX01",44,0)
 .. W !!,"The MPI/PD Exception Purge process will now run."
"RTN","RGEX01",45,0)
 .. W !,"Please come back to this option in ten minutes."
"RTN","RGEX01",46,0)
 .. S XFLAG=1 D QUEPRG
"RTN","RGEX01",47,0)
 I XFLAG=1 G EXIT
"RTN","RGEX01",48,0)
 K RGANS
"RTN","RGEX01",49,0)
 D WAIT^DICD
"RTN","RGEX01",50,0)
 D EN^VALM("RG EXCPT SUMMARY")
"RTN","RGEX01",51,0)
 Q
"RTN","RGEX01",52,0)
 ;
"RTN","RGEX01",53,0)
HDR ; -- header code
"RTN","RGEX01",54,0)
 S VALMHDR(1)="MPI/PD Exception Handling"
"RTN","RGEX01",55,0)
 S VALMHDR(2)=""
"RTN","RGEX01",56,0)
 Q
"RTN","RGEX01",57,0)
 ;
"RTN","RGEX01",58,0)
INIT ; -- init variables and list array
"RTN","RGEX01",59,0)
 I '$D(RGSORT) S RGSORT="SD"
"RTN","RGEX01",60,0)
 K @VALMAR
"RTN","RGEX01",61,0)
 I RGSORT="SD" D DTLIST^RGEXHND1
"RTN","RGEX01",62,0)
 E  I RGSORT="ST" D EXCLST^RGEXHND1
"RTN","RGEX01",63,0)
 E  I RGSORT="SN" D PATLST^RGEXHND1
"RTN","RGEX01",64,0)
 E  I RGSORT="VT" D SELTYP^RGEXHND1
"RTN","RGEX01",65,0)
 Q
"RTN","RGEX01",66,0)
 ;
"RTN","RGEX01",67,0)
SORT ;
"RTN","RGEX01",68,0)
 D INIT
"RTN","RGEX01",69,0)
 S VALMBCK="R"
"RTN","RGEX01",70,0)
 Q
"RTN","RGEX01",71,0)
HELP ; -- help code
"RTN","RGEX01",72,0)
 S X="?" D DISP^XQORM1 W !!
"RTN","RGEX01",73,0)
 Q
"RTN","RGEX01",74,0)
HLPPRG ;
"RTN","RGEX01",75,0)
 W !,"Enter Y(YES) to run the MPI/PD Exception Purge process now."
"RTN","RGEX01",76,0)
 W !!,"Enter N(NO) to go directly into the MPI/PD Exception Handling option."
"RTN","RGEX01",77,0)
 Q
"RTN","RGEX01",78,0)
 ;
"RTN","RGEX01",79,0)
EXIT ; -- exit code
"RTN","RGEX01",80,0)
 K VADM,RGDFN,RGNM,RGSORT,RGSSN,STAT,STRING,NDX,NM,IEN,IEN2,X,DATA,CNT,EXCTYPE,ETYPE,^TMP("RGEXC",$J),^TMP("RGEX01",$J)
"RTN","RGEX01",81,0)
 Q
"RTN","RGEX01",82,0)
QUEPRG S ZTRTN="MAIN^RGEVPRG",ZTDESC="PURGE ZZ*, OVER 30 DAY AND DUPLICATE RECORDS FROM THE CIRN HL7 EXCEPTION LOG FILE"
"RTN","RGEX01",83,0)
 D NOW^%DTC
"RTN","RGEX01",84,0)
 S ZTIO="",ZTDTH=%
"RTN","RGEX01",85,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","RGEX01",86,0)
 D ^%ZTLOAD
"RTN","RGEX01",87,0)
 D HOME^%ZIS K IO("Q")
"RTN","RGEX01",88,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","RGEX01",89,0)
 Q
"RTN","RGEX01",90,0)
 ;
"RTN","RGEX01",91,0)
EXPND ; -- expand code
"RTN","RGEX01",92,0)
 Q
"RTN","RGEX01",93,0)
 ;
"RTN","RGEX01",94,0)
CUREX() ;Are there any patients in the CIRN HL7 EXCEPTION LOG file (#991.1)
"RTN","RGEX01",95,0)
 ;that are NOT PROCESSED for specific exception types?
"RTN","RGEX01",96,0)
 ;     Return RGEX:
"RTN","RGEX01",97,0)
 ;If RGEX=3 both unprocessed and Primary View Reject exceptions exist
"RTN","RGEX01",98,0)
 ;If RGEX=2 only Primary View Reject exceptions exist
"RTN","RGEX01",99,0)
 ;If RGEX=1 only unprocessed exceptions exist
"RTN","RGEX01",100,0)
 ;If RGEX=0 no unprocessed exceptions exist
"RTN","RGEX01",101,0)
 ;
"RTN","RGEX01",102,0)
 N EXCTYP,RG1,RG2,RGEX
"RTN","RGEX01",103,0)
 S EXCTYP="",(RG1,RG2,RGEX)=0
"RTN","RGEX01",104,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ASTAT","0",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEX01",105,0)
 .I ((EXCTYP=234)!((EXCTYP>214)&(EXCTYP<219))) S RG1=1
"RTN","RGEX01",106,0)
 .I (EXCTYP=234) S RG2=1 ;Primary View Reject
"RTN","RGEX01",107,0)
 I (RG1=1),(RG2=1) S RGEX=3 ;Send both messages
"RTN","RGEX01",108,0)
 I (RG1=1),(RG2=0) S RGEX=1 ;Only unresolved exceptions exist
"RTN","RGEX01",109,0)
 I (RG1=0),(RG2=1) S RGEX=2 ;Only Primary View Reject exceptions exist
"RTN","RGEX01",110,0)
 Q RGEX
"RTN","RGEX01",111,0)
 ;
"RTN","RGEX01",112,0)
PROC ; For a given patient, set exceptions STATUS to PROCESSED.
"RTN","RGEX01",113,0)
 ; DFN must be defined
"RTN","RGEX01",114,0)
 Q:'$D(DFN)
"RTN","RGEX01",115,0)
 S EXCTYP=""
"RTN","RGEX01",116,0)
 S HOME=$$SITE^VASITE()
"RTN","RGEX01",117,0)
 F  S EXCTYP=$O(^RGHL7(991.1,"ADFN",EXCTYP)) Q:'EXCTYP  D
"RTN","RGEX01",118,0)
 . S RGDFN="",ICN=""
"RTN","RGEX01",119,0)
 . F  S RGDFN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN)) Q:'RGDFN  D
"RTN","RGEX01",120,0)
 .. I DFN=RGDFN D
"RTN","RGEX01",121,0)
 ... S ICN=+$$GETICN^MPIF001(DFN)
"RTN","RGEX01",122,0)
 ... ;Only set to PROCESSED if patient has national ICN.
"RTN","RGEX01",123,0)
 ... I $E(ICN,1,3)'=$E($P(HOME,"^",3),1,3)&(ICN>0) D
"RTN","RGEX01",124,0)
 .... ;Exclude Death exceptions (215-217); they must be processed manually.
"RTN","RGEX01",125,0)
 .... ;Exclude 218 Potential Matches Returned exception **43
"RTN","RGEX01",126,0)
 .... I (EXCTYP>218)!(EXCTYP<215) D
"RTN","RGEX01",127,0)
 ..... S IEN=0
"RTN","RGEX01",128,0)
 ..... F  S IEN=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN)) Q:'IEN  D
"RTN","RGEX01",129,0)
 ...... S IEN2=0
"RTN","RGEX01",130,0)
 ...... F  S IEN2=$O(^RGHL7(991.1,"ADFN",EXCTYP,RGDFN,IEN,IEN2)) Q:'IEN2  D
"RTN","RGEX01",131,0)
 ....... L +^RGHL7(991.1,IEN):10
"RTN","RGEX01",132,0)
 ....... S DA(1)=IEN,DA=IEN2,DR="6///"_1,DIE="^RGHL7(991.1,"_DA(1)_",1,"
"RTN","RGEX01",133,0)
 ....... D ^DIE K DIE,DA,DR
"RTN","RGEX01",134,0)
 ....... L -^RGHL7(991.1,IEN)
"RTN","RGEX01",135,0)
 K IEN,IEN2,RGDFN,EXCTYP,ICN
"RTN","RGEX01",136,0)
 Q
"RTN","RGEX01",137,0)
PDAT ;
"RTN","RGEX01",138,0)
 K DIRUT
"RTN","RGEX01",139,0)
 W !,"This report prints MPI/PD Data for a selected patient.  The"
"RTN","RGEX01",140,0)
 W !,"information displayed includes the Integration Control Number"
"RTN","RGEX01",141,0)
 W !,"(ICN), patient identity information, and Treating Facility list."
"RTN","RGEX01",142,0)
 W !!,"The information is pulled from the Patient (#2) file and the"
"RTN","RGEX01",143,0)
 W !,"Treating Facility List (#391.91) file."
"RTN","RGEX01",144,0)
 ;
"RTN","RGEX01",145,0)
ASK ;Ask for PATIENT
"RTN","RGEX01",146,0)
 I $D(DIRUT) G QUIT
"RTN","RGEX01",147,0)
 W !!,"Patient lookup can be done by Patient Name/SSN or by ICN.",!
"RTN","RGEX01",148,0)
 N DFN,ICN
"RTN","RGEX01",149,0)
 S DIC="^DPT(",DIC(0)="QEAM",DIC("A")="Select PATIENT: ",D="SSN^AICN^B^BS^BS5"
"RTN","RGEX01",150,0)
 D MIX^DIC1 K DIC
"RTN","RGEX01",151,0)
 G:Y<0 QUIT
"RTN","RGEX01",152,0)
 S DFN=+Y
"RTN","RGEX01",153,0)
 D MAIN^VAFCPDAT
"RTN","RGEX01",154,0)
 G ASK
"RTN","RGEX01",155,0)
 Q
"RTN","RGEX01",156,0)
QUIT ;
"RTN","RGEX01",157,0)
 K DFN,ICN,D,Y,HOME
"RTN","RGPVREJ")
0^4^B16898530^B14664495
"RTN","RGPVREJ",1,0)
RGPVREJ ;BIR/PTD-REMOTE PRIMARY VIEW REJECT (PATIENT) ;10/8/06
"RTN","RGPVREJ",2,0)
 ;;1.0;CLINICAL INFO RESOURCE NETWORK;**44,47**;30 Apr 99;Build 10
"RTN","RGPVREJ",3,0)
 ;
"RTN","RGPVREJ",4,0)
 ;Reference to ^XWB2HL7 supported by IA #3144
"RTN","RGPVREJ",5,0)
 ;Reference to ^XWBDRPC supported by IA #3149
"RTN","RGPVREJ",6,0)
 ;
"RTN","RGPVREJ",7,0)
REJ ;Option only available for Primary View Reject exceptions
"RTN","RGPVREJ",8,0)
 ;From within the Exception Handler, for selection, DATA should be defined.
"RTN","RGPVREJ",9,0)
 N RGBDT,RGICN,RGSITE,PTEN,PELV
"RTN","RGPVREJ",10,0)
 I DATA="" W !,"No Exception Data available." Q
"RTN","RGPVREJ",11,0)
 S PTEN=$P(DATA,"^",10) ;IEN IN 991.1
"RTN","RGPVREJ",12,0)
 S PELV=$P(DATA,"^",11) ;IEN IN 991.12
"RTN","RGPVREJ",13,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",3)'=234 S VALMSG="Action is ONLY for PRIMARY VIEW REJECT exceptions!" Q
"RTN","RGPVREJ",14,0)
 I $P($G(^RGHL7(991.1,PTEN,1,PELV,0)),"^",5)=1 S VALMSG="Exception has been PROCESSED; no longer active." Q
"RTN","RGPVREJ",15,0)
 S RGSITE=$P($$SITE^VASITE(),"^",3) I RGSITE="" W !,"No Site Data defined." Q
"RTN","RGPVREJ",16,0)
 S RGICN=$P(DATA,"^",6) I RGICN="" W !,"No ICN defined." Q
"RTN","RGPVREJ",17,0)
 S RGBDT=$P(DATA,"^",3) I RGBDT="" W !,"No Exception Date defined." Q
"RTN","RGPVREJ",18,0)
 S X=RGBDT D ^%DT S RGBDT=Y ;convert Exception Date from external format to internal
"RTN","RGPVREJ",19,0)
 ;
"RTN","RGPVREJ",20,0)
 S VALMBCK="",QUIT=0
"RTN","RGPVREJ",21,0)
 D FULL^VALM1
"RTN","RGPVREJ",22,0)
SEND ;Send a remote query to the MPI for Primary View Reject report
"RTN","RGPVREJ",23,0)
 N RETURN,RESULT,RGEDT,SNTDT
"RTN","RGPVREJ",24,0)
 S RGEDT=$$DT^XLFDT ;End date for report internal format
"RTN","RGPVREJ",25,0)
NOQ ;No previous query exists for this ICN/exception date
"RTN","RGPVREJ",26,0)
 I '$D(^XTMP("RGPVREJ",RGICN,RGBDT)) D RPC G DISP
"RTN","RGPVREJ",27,0)
 ;
"RTN","RGPVREJ",28,0)
OLDQ ;Query already sent for this ICN/ exception date
"RTN","RGPVREJ",29,0)
 I $D(^XTMP("RGPVREJ",RGICN,RGBDT)) D
"RTN","RGPVREJ",30,0)
 .S SNTDT=$$FMTE^XLFDT($P(^XTMP("RGPVREJ",RGICN,RGBDT),"^",2))
"RTN","RGPVREJ",31,0)
 .W !?3,"A query was last sent for this ICN/Exception Date on "_SNTDT
"RTN","RGPVREJ",32,0)
 .S X=$P(SNTDT,"@") D ^%DT S SNTDT=Y ;convert to internal, strip time
"RTN","RGPVREJ",33,0)
 .;Has data returned for existing query?
"RTN","RGPVREJ",34,0)
 .S RETURN(0)=$P(^XTMP("RGPVREJ",RGICN,RGBDT),"^")
"RTN","RGPVREJ",35,0)
 .D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) I +RESULT(0)=1 D  Q  ;Data has returned
"RTN","RGPVREJ",36,0)
 ..I RGEDT=SNTDT D  ;query was sent 'today', want to use that one?
"RTN","RGPVREJ",37,0)
 ...S DIR("A")="   Do you wish to review that existing query data now? ",DIR(0)="YA"
"RTN","RGPVREJ",38,0)
 ...S DIR("?")="     Enter YES to review the existing query; NO to send a new query"
"RTN","RGPVREJ",39,0)
 ...S DIR("B")="YES" D ^DIR K DIR I $D(DIRUT) S QUIT=1 Q  ;up-arrowed out
"RTN","RGPVREJ",40,0)
 ...I Y>0 K DIR Q  ;yes, use existing query
"RTN","RGPVREJ",41,0)
 ...I Y=0 D  Q  ;no, don't use existing, send new query
"RTN","RGPVREJ",42,0)
 ....K ^XTMP("RGPVREJ",RGICN,RGBDT)
"RTN","RGPVREJ",43,0)
 ....D RPC
"RTN","RGPVREJ",44,0)
 ....K DIR
"RTN","RGPVREJ",45,0)
 ....;
"RTN","RGPVREJ",46,0)
 ..I RGEDT'=SNTDT D  ;query was NOT sent 'today', data may be old, send new query
"RTN","RGPVREJ",47,0)
 ...W !?3,"Previous Query data may be obsolete."
"RTN","RGPVREJ",48,0)
 ...K ^XTMP("RGPVREJ",RGICN,RGBDT)
"RTN","RGPVREJ",49,0)
 ...D RPC
"RTN","RGPVREJ",50,0)
 .;Data for existing query has NOT returned  **47
"RTN","RGPVREJ",51,0)
 .I +RESULT(0)'=1 S QUIT=1 W !?3,"Query data has NOT returned from the MPI; please check back later." D PAUSE^VALM1
"RTN","RGPVREJ",52,0)
 ;
"RTN","RGPVREJ",53,0)
DISP ;Display Primary View Reject Data
"RTN","RGPVREJ",54,0)
 I QUIT'=1 D EN^RGEX07(RGICN,RGBDT)
"RTN","RGPVREJ",55,0)
EXIT ;Kill variables and quit
"RTN","RGPVREJ",56,0)
 K CNT,DIR,DIRUT,QUIT,X,Y
"RTN","RGPVREJ",57,0)
 Q
"RTN","RGPVREJ",58,0)
 ;
"RTN","RGPVREJ",59,0)
RPC ;Send the Remote Query
"RTN","RGPVREJ",60,0)
 W !?3,"Sending a Remote Query to the Master Patient Index."
"RTN","RGPVREJ",61,0)
 W !?3,"This will take some time; please be patient."
"RTN","RGPVREJ",62,0)
 D EN1^XWB2HL7(.RETURN,"200M","RG PRIMARY VIEW REJECT",1,RGSITE,RGICN,RGBDT,RGEDT) I RETURN(0)'="" D  Q
"RTN","RGPVREJ",63,0)
 .S ^XTMP("RGPVREJ",0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"PRIMARY VIEW REJECT"
"RTN","RGPVREJ",64,0)
 .S ^XTMP("RGPVREJ",RGICN,RGBDT)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","RGPVREJ",65,0)
 .;Has data returned for this query?
"RTN","RGPVREJ",66,0)
 .S CNT=0 F  S CNT=CNT+1 D RPCCHK^XWB2HL7(.RESULT,RETURN(0)) Q:RESULT(0)  H 2 I CNT>15 Q  ;result(0)=status of handle
"RTN","RGPVREJ",67,0)
 .I +RESULT(0)=1 W !?3,"Query data has returned from the MPI and is available for review."
"RTN","RGPVREJ",68,0)
 .I +RESULT(0)'=1 D  ;quit, info not back after 30 seconds
"RTN","RGPVREJ",69,0)
 ..W !?3,"Query data has NOT returned from the MPI; please check back later."
"RTN","RGPVREJ",70,0)
 ..S QUIT=1
"RTN","RGPVREJ",71,0)
 ..D PAUSE^VALM1
"RTN","RGPVREJ",72,0)
 W !!?3,"Problem with Query: ",RETURN(0)_"^"_$G(RETURN(1))
"RTN","RGPVREJ",73,0)
 S QUIT=1
"RTN","RGPVREJ",74,0)
 D PAUSE^VALM1
"RTN","RGPVREJ",75,0)
 Q
"RTN","RGPVREJ",76,0)
 ;
"VER")
8.0^22.0
"BLD",2478,6)
^47
**END**
**END**
