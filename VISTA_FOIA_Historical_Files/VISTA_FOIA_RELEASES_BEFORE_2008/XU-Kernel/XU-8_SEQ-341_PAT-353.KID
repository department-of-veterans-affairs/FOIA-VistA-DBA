Released XU*8*353 SEQ #341
Extracted from mail message
**KIDS**:XU*8.0*353^

**INSTALL NAME**
XU*8.0*353
"BLD",871,0)
XU*8.0*353^KERNEL^0^3060531^y
"BLD",871,1,0)
^^2^2^3050526^
"BLD",871,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",871,1,2,0)
XU*8*353  TMP global clean-up changes.
"BLD",871,4,0)
^9.64PA^^
"BLD",871,6.3)
1
"BLD",871,"KRN",0)
^9.67PA^8989.52^19
"BLD",871,"KRN",.4,0)
.4
"BLD",871,"KRN",.401,0)
.401
"BLD",871,"KRN",.402,0)
.402
"BLD",871,"KRN",.403,0)
.403
"BLD",871,"KRN",.5,0)
.5
"BLD",871,"KRN",.84,0)
.84
"BLD",871,"KRN",3.6,0)
3.6
"BLD",871,"KRN",3.8,0)
3.8
"BLD",871,"KRN",9.2,0)
9.2
"BLD",871,"KRN",9.8,0)
9.8
"BLD",871,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",871,"KRN",9.8,"NM",1,0)
XUSCLEAN^^0^B12811237
"BLD",871,"KRN",9.8,"NM",2,0)
XQ82^^0^B10280365
"BLD",871,"KRN",9.8,"NM","B","XQ82",2)

"BLD",871,"KRN",9.8,"NM","B","XUSCLEAN",1)

"BLD",871,"KRN",19,0)
19
"BLD",871,"KRN",19.1,0)
19.1
"BLD",871,"KRN",101,0)
101
"BLD",871,"KRN",409.61,0)
409.61
"BLD",871,"KRN",771,0)
771
"BLD",871,"KRN",870,0)
870
"BLD",871,"KRN",8989.51,0)
8989.51
"BLD",871,"KRN",8989.52,0)
8989.52
"BLD",871,"KRN",8994,0)
8994
"BLD",871,"KRN","B",.4,.4)

"BLD",871,"KRN","B",.401,.401)

"BLD",871,"KRN","B",.402,.402)

"BLD",871,"KRN","B",.403,.403)

"BLD",871,"KRN","B",.5,.5)

"BLD",871,"KRN","B",.84,.84)

"BLD",871,"KRN","B",3.6,3.6)

"BLD",871,"KRN","B",3.8,3.8)

"BLD",871,"KRN","B",9.2,9.2)

"BLD",871,"KRN","B",9.8,9.8)

"BLD",871,"KRN","B",19,19)

"BLD",871,"KRN","B",19.1,19.1)

"BLD",871,"KRN","B",101,101)

"BLD",871,"KRN","B",409.61,409.61)

"BLD",871,"KRN","B",771,771)

"BLD",871,"KRN","B",870,870)

"BLD",871,"KRN","B",8989.51,8989.51)

"BLD",871,"KRN","B",8989.52,8989.52)

"BLD",871,"KRN","B",8994,8994)

"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
353^3060531
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3060531
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*353  TMP global clean-up changes.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XQ82")
0^2^B10280365^B6919718
"RTN","XQ82",1,0)
XQ82 ;SF-ISC.SEA/JLI - CLEAN OLD $JOB DATA OUT OF XUTL("XQ", & OTHERS ;05/26/2005  11:36
"RTN","XQ82",2,0)
 ;;8.0;KERNEL;**59,67,157,258,312,353**;Jul 10, 1995;Build 1
"RTN","XQ82",3,0)
 ;Make sure that can run from a DCL script
"RTN","XQ82",4,0)
 N A,X,%DT,Y,J,K,DDATE,HDATA,HPID3,XQOS
"RTN","XQ82",5,0)
 S DT=$$DT^XLFDT
"RTN","XQ82",6,0)
 S HDATE=$H-7 ;Get seven days ago in $H days
"RTN","XQ82",7,0)
 S DDATE=$$HTFM^XLFDT(HDATE) ;Get seven days ago in FM format
"RTN","XQ82",8,0)
 S XQOS=^%ZOSF("OS"),HPID3=$E($$CNV^XLFUTL($J,16),1,3)
"RTN","XQ82",9,0)
 S HJOB=$J
"RTN","XQ82",10,0)
 ;Do work as a set of sub routines
"RTN","XQ82",11,0)
 D L0,L1,L2,L3,L4,L5,L6
"RTN","XQ82",12,0)
EXIT ;
"RTN","XQ82",13,0)
 Q
"RTN","XQ82",14,0)
 ;We keep track of jobs by putting data in ^XUTL("XQ",$J).
"RTN","XQ82",15,0)
 ;Sign-on time is in ^($J,0) points to sign-on log.
"RTN","XQ82",16,0)
 ;Holds the Menu stack.
"RTN","XQ82",17,0)
 ;For any entry in user stack w/ date older than 7 days or w/o zero node
"RTN","XQ82",18,0)
 ;kill XUTL("XQ",n) and corresponding UTILITY(n) and TMP(n) nodes.
"RTN","XQ82",19,0)
L0 N %T
"RTN","XQ82",20,0)
 F J=0:0 S J=$O(^XUTL("XQ",J)) Q:J'>0  I $S('$D(^(J,0)):1,1:^(0)<DDATE) D
"RTN","XQ82",21,0)
 . I $G(^XUTL("XQ",J,"KEEPALIVE"))>HDATE Q  ;For long running jobs
"RTN","XQ82",22,0)
 . I $D(^XUTL("XQ",J,"ZTSKNUM")) L +^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM")):0 Q:'$T  L -^%ZTSCH("TASK",^XUTL("XQ",J,"ZTSKNUM"))
"RTN","XQ82",23,0)
 . K ^XUTL("XQ",J),^UTILITY(J),^TMP(J)
"RTN","XQ82",24,0)
 . Q
"RTN","XQ82",25,0)
 Q:'$$CHECK  ;Check if we should skip pass 2.
"RTN","XQ82",26,0)
 ;Now to check again for DEAD jobs on local node
"RTN","XQ82",27,0)
 F J=0:0 S J=$O(^XUTL("XQ",J)) Q:J'>0  D
"RTN","XQ82",28,0)
 . I $$DEAD(J) K ^XUTL("XQ",J),^UTILITY(J),^TMP(J)
"RTN","XQ82",29,0)
 Q
"RTN","XQ82",30,0)
 ;
"RTN","XQ82",31,0)
 ;Loop thru UTILITY and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",32,0)
L1 S A="" F  S A=$O(^UTILITY(A)) Q:A=""  D
"RTN","XQ82",33,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^UTILITY(A) Q  ;UTILITY($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",34,0)
 . Q:A>0  Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",35,0)
 . F J=0:0 S J=$O(^UTILITY(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^UTILITY(A,J) ;Remove UTILITY(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",36,0)
 . Q
"RTN","XQ82",37,0)
 Q
"RTN","XQ82",38,0)
 ;
"RTN","XQ82",39,0)
 ;Loop thru TMP and look for nodes w/o corresponding XUTL("XQ",n)
"RTN","XQ82",40,0)
L2 S A="" F  S A=$O(^TMP(A)) Q:A=""  D
"RTN","XQ82",41,0)
 . I A>0,'$D(^XUTL("XQ",A)) K ^TMP(A) Q  ;TMP($J) w/o XUTL("XQ",$J) node.
"RTN","XQ82",42,0)
 . Q:A>0  ;Q:"^ROU^GLO^LRLTR^"[("^"_A_"^")
"RTN","XQ82",43,0)
 . F J=0:0 S J=$O(^TMP(A,J)) Q:J'>0  I '$D(^XUTL("XQ",J)) K ^TMP(A,J) ;Remove TMP(namespace,$J) w/o XUTL("XQ",$J)
"RTN","XQ82",44,0)
 . Q
"RTN","XQ82",45,0)
 Q
"RTN","XQ82",46,0)
 ;
"RTN","XQ82",47,0)
L3 ;Now to cleanup the XTMP global w/ XTMP(namespace,0)<DT
"RTN","XQ82",48,0)
 S A="" F  S A=$O(^XTMP(A)) Q:A=""  S J=$G(^XTMP(A,0)) I J<DT K ^XTMP(A)
"RTN","XQ82",49,0)
 Q
"RTN","XQ82",50,0)
 ;
"RTN","XQ82",51,0)
L4 ;Now go thru and clean old ^XUSEC(0,"CUR",duz,sign-on) nodes.
"RTN","XQ82",52,0)
 D L51("CUR")
"RTN","XQ82",53,0)
 Q
"RTN","XQ82",54,0)
 ;
"RTN","XQ82",55,0)
L5 ;Now go through and clean old ^XUSEC(0,"AS*" nodes.
"RTN","XQ82",56,0)
 D L51("AS1"),L51("AS2")
"RTN","XQ82",57,0)
 Q
"RTN","XQ82",58,0)
 ;
"RTN","XQ82",59,0)
L6 ;Clean out old build nodes from ^XUTL
"RTN","XQ82",60,0)
 S K=""
"RTN","XQ82",61,0)
 F  S K=$O(^XUTL("XQO",K)) Q:K=""  D
"RTN","XQ82",62,0)
 . I $D(^XUTL("XQO",K,"^BUILD")),($P($H,",",2)-^("^BUILD")>1800)!(^("^BUILD")>$P($H,",",2)) K ^("^BUILD")
"RTN","XQ82",63,0)
 Q
"RTN","XQ82",64,0)
 ;
"RTN","XQ82",65,0)
L51(NDX) ;Clean old Sign-on log entries from X-ref
"RTN","XQ82",66,0)
 N I,J,FDA,NOW,ERR,IEN
"RTN","XQ82",67,0)
 S I="",NOW=$$NOW^XLFDT
"RTN","XQ82",68,0)
 F  S I=$O(^XUSEC(0,NDX,I)) Q:I=""  F J=0:0 S J=$O(^XUSEC(0,NDX,I,J)) Q:(J'>0)  D
"RTN","XQ82",69,0)
 . ;Look at every entry in the X-ref, check for data record
"RTN","XQ82",70,0)
 . I $D(^XUSEC(0,J,0))[0 K ^XUSEC(0,NDX,I,J) Q  ;No data record.
"RTN","XQ82",71,0)
 . Q:J'<DDATE  ;Keep for now
"RTN","XQ82",72,0)
 . S FDA(3.081,J_",",3)=NOW,FDA(3.081,J_",",16)=1 D UPDATE^DIE("","FDA","IEN","ERR")
"RTN","XQ82",73,0)
 . K FDA,IEN,ERR
"RTN","XQ82",74,0)
 . Q
"RTN","XQ82",75,0)
 Q
"RTN","XQ82",76,0)
 ;
"RTN","XQ82",77,0)
DEAD(X1) ;Check if X1 is a PID and DEAD
"RTN","XQ82",78,0)
 ;Return 1 if should clean, 0 to skip
"RTN","XQ82",79,0)
 I X1\1'=X1 Q 0
"RTN","XQ82",80,0)
 I $E($$CNV^XLFUTL(X1,16),1,3)'=HPID3 Q 0
"RTN","XQ82",81,0)
 ; X1 is a PID on this node, is PID active?..
"RTN","XQ82",82,0)
 I $D(^$JOB(X1))=0 Q 1 ; Job is DEAD
"RTN","XQ82",83,0)
 Q 0
"RTN","XQ82",84,0)
 ;
"RTN","XQ82",85,0)
CHECK() ;Check that we have the right enviroment to do pass 2
"RTN","XQ82",86,0)
 ;Are we on VMS, is ^$JOB supported
"RTN","XQ82",87,0)
 I XQOS["GT.M" Q 0
"RTN","XQ82",88,0)
 I XQOS["DSM" Q 1
"RTN","XQ82",89,0)
 I XQOS["OpenM" X "I $ZV[""VMS""" Q $T
"RTN","XQ82",90,0)
 Q 0
"RTN","XQ82",91,0)
 ;
"RTN","XUSCLEAN")
0^1^B12811237^B11776747
"RTN","XUSCLEAN",1,0)
XUSCLEAN ;SF/STAFF - CLEANUP BEFORE EXIT ;05/26/2005  14:28
"RTN","XUSCLEAN",2,0)
 ;;8.0;KERNEL;**13,59,165,353**;Jul 10, 1995;Build 1
"RTN","XUSCLEAN",3,0)
H ;;Exit point for all R/S applications
"RTN","XUSCLEAN",4,0)
 LOCK  ;Unlock any locks
"RTN","XUSCLEAN",5,0)
 S U="^"
"RTN","XUSCLEAN",6,0)
 ;Unwind Exit Actions
"RTN","XUSCLEAN",7,0)
 I $D(^XUTL("XQ",$J,"T")) S %XQEA=^("T") D
"RTN","XUSCLEAN",8,0)
 . F %XQEA1=%XQEA:-1:1 I $D(^XUTL("XQ",$J,%XQEA1)),$P(^(%XQEA1),U,16) S %XQEA2=+^(%XQEA1) I $D(^DIC(19,%XQEA2,15)),$L(^(15)) X ^(15)
"RTN","XUSCLEAN",9,0)
 K %XQEA,%XQEA1,%XQEA2
"RTN","XUSCLEAN",10,0)
 ;Jump if the home device was closed
"RTN","XUSCLEAN",11,0)
 G:$D(IO("C")) H2
"RTN","XUSCLEAN",12,0)
 ;Clear the screen
"RTN","XUSCLEAN",13,0)
 I $S($D(IOST)[0:1,IOST="":1,IOST["C-":1,1:0),'$D(XUERF) W !!!!!!!!!!!!!!!!!!!!!!!
"RTN","XUSCLEAN",14,0)
 I $D(XQNOLOG) W !!,"==>  Sorry, all activity on this volume set is being halted!  Try again later.",*7,*7,*7,!!!!
"RTN","XUSCLEAN",15,0)
 ;W !!,"Halting at " S X=$P($H,",",2),Y=$E(X#3600\60+100,2,3),X=X\3600,Z=0 S:X>11 Z=1 S:'X X=12 S:X>12 X=X-12 W X,":",Y," ",$S(Z:"pm",1:"am")
"RTN","XUSCLEAN",16,0)
 W !!,"Logged out at "_$$HTE^XLFDT($H,"1FMP")
"RTN","XUSCLEAN",17,0)
 D:$D(DUZ("NEWCODE")) NEWCODE
"RTN","XUSCLEAN",18,0)
 ;NON-R/S exit thru here also.
"RTN","XUSCLEAN",19,0)
H2 ;No talking after this point
"RTN","XUSCLEAN",20,0)
 D C,XUTL
"RTN","XUSCLEAN",21,0)
 ;un-comment the following line if you want FM space recall cleared 
"RTN","XUSCLEAN",22,0)
 ;after each session.
"RTN","XUSCLEAN",23,0)
 ;K ^DISV($G(DUZ,0))
"RTN","XUSCLEAN",24,0)
 S:'($D(XQXFLG)#2) XQXFLG="" I $D(XQCH),XQCH="HALT" S $P(XQXFLG,U,3)=""
"RTN","XUSCLEAN",25,0)
 I ($D(XQNOHALT)#2)!($D(ZTQUEUED)#2)!($P(XQXFLG,U,3)="XUP") K XQNOHALT,XQXFLG Q  ;Return to REST^XQ12, ^XUP or Taskman.
"RTN","XUSCLEAN",26,0)
 ;This was for modem hang up code. Obsolete now
"RTN","XUSCLEAN",27,0)
 I $D(^%ZIS("H"))#2 X ^("H")
"RTN","XUSCLEAN",28,0)
 ;Go to ZU to do final halt.
"RTN","XUSCLEAN",29,0)
 G HALT^ZU
"RTN","XUSCLEAN",30,0)
 ;
"RTN","XUSCLEAN",31,0)
TOUCH ;SR. API to set the keepalive node, Only set once a day
"RTN","XUSCLEAN",32,0)
 Q:+$G(^XUTL("XQ",$J,"KEEPALIVE"))=+$H
"RTN","XUSCLEAN",33,0)
 S ^XUTL("XQ",$J,"KEEPALIVE")=$H
"RTN","XUSCLEAN",34,0)
 Q
"RTN","XUSCLEAN",35,0)
 ;
"RTN","XUSCLEAN",36,0)
C ;Do device close execute, User exit.
"RTN","XUSCLEAN",37,0)
 N XUDEV
"RTN","XUSCLEAN",38,0)
 S XUDEV=$S($D(^XUTL("XQ",$J,"IOS")):^("IOS"),1:"")
"RTN","XUSCLEAN",39,0)
 D ^%ZISC,BYE
"RTN","XUSCLEAN",40,0)
 Q
"RTN","XUSCLEAN",41,0)
 ;
"RTN","XUSCLEAN",42,0)
 ;Called from Broker, VistaLink, R/S
"RTN","XUSCLEAN",43,0)
BYE ;Set flags to show user has left. Called from anyplace the user exits
"RTN","XUSCLEAN",44,0)
 N DA,DIK,R0,%
"RTN","XUSCLEAN",45,0)
 I $G(^VA(200,+$G(DUZ),1.1)) S $P(^VA(200,DUZ,1.1),"^",3)=0
"RTN","XUSCLEAN",46,0)
 S DA=+$G(^XUTL("XQ",$J,0)) D LOUT(DA)
"RTN","XUSCLEAN",47,0)
 I $D(^XUSEC(0,DA,0)) D
"RTN","XUSCLEAN",48,0)
 . S R0=^XUSEC(0,DA,0)
"RTN","XUSCLEAN",49,0)
 . I $G(IO("IP"))]"",$P(R0,"^",13)]"" S %=$$CMD^XWBCAGNT(.R0,"XWB DELETE HANDLE",$P(R0,"^",13))
"RTN","XUSCLEAN",50,0)
 K ^XUTL("XQ",$J)
"RTN","XUSCLEAN",51,0)
 Q
"RTN","XUSCLEAN",52,0)
 ;
"RTN","XUSCLEAN",53,0)
LOUT(DA) ;Enter log-out time, in Sign-on log
"RTN","XUSCLEAN",54,0)
 N DIK
"RTN","XUSCLEAN",55,0)
 I $D(^XUSEC(0,DA,0)) D
"RTN","XUSCLEAN",56,0)
 . S R0=^(0),$P(^(0),"^",4)=$$NOW^XLFDT,DIK="^XUSEC(0,",DIK(1)="3" D EN1^DIK
"RTN","XUSCLEAN",57,0)
 Q
"RTN","XUSCLEAN",58,0)
 ;
"RTN","XUSCLEAN",59,0)
XUTL ;Cleanup JOB temporary Globals
"RTN","XUSCLEAN",60,0)
 N XQN D CLEAN^DILF ;Cleanup FM too.
"RTN","XUSCLEAN",61,0)
 K ^XUTL($J),^UTILITY($J),^TMP($J)
"RTN","XUSCLEAN",62,0)
 S XQN=" " F  S XQN=$O(^XUTL(XQN)) Q:XQN=""  K:"^XQO^XGATR^XGKB^"'[XQN ^XUTL(XQN,$J)
"RTN","XUSCLEAN",63,0)
 S XQN=" " F  S XQN=$O(^TMP(XQN)) Q:XQN=""  K ^TMP(XQN,$J)
"RTN","XUSCLEAN",64,0)
 S XQN=" " F  S XQN=$O(^UTILITY(XQN)) Q:XQN=""  K:"^ROU^GLO^LRLTR"'[XQN ^UTILITY(XQN,$J)
"RTN","XUSCLEAN",65,0)
 K ^XUTL("ZISPARAM",$I)
"RTN","XUSCLEAN",66,0)
 Q
"RTN","XUSCLEAN",67,0)
 ;
"RTN","XUSCLEAN",68,0)
NEWCODE ;Remind user they changed there VC.
"RTN","XUSCLEAN",69,0)
 W !!,*7,"But, as I recall...",!,"You've changed your VERIFY CODE during this session.",!,"Please remember it for next time." H 4
"RTN","XUSCLEAN",70,0)
 Q
"RTN","XUSCLEAN",71,0)
 ;
"RTN","XUSCLEAN",72,0)
 ;Entry point to clear symbol table
"RTN","XUSCLEAN",73,0)
KILL ;SR. This is what was requested.
"RTN","XUSCLEAN",74,0)
 K %1,%2,%3 S %3=+$G(^XUTL("XQ",$J,"T"))
"RTN","XUSCLEAN",75,0)
 ;See if Menu stack has Variable to protect.
"RTN","XUSCLEAN",76,0)
 F %1=%3:-1:1 S %2=+$G(^XUTL("XQ",$J,%1)),%2=$G(^DIC(19,%2,"NOKILL")) I %2]"" N @%2
"RTN","XUSCLEAN",77,0)
 ;Fall into next part of kill.
"RTN","XUSCLEAN",78,0)
KILL1 ;To clean up ALL but kernel variables.
"RTN","XUSCLEAN",79,0)
 I $$BROKER^XWBLIB S %2=$P($T(VARLST^XWBLIB),";;",2) I %2]"" N @%2 ;Protect Broker variables.
"RTN","XUSCLEAN",80,0)
 N KWAPI,XGWIN,XGDI,XGEVENT
"RTN","XUSCLEAN",81,0)
 N XQAEXIT,XQAUSER,XQX1,XQAKILL,XQAID
"RTN","XUSCLEAN",82,0)
 K (DUZ,DTIME,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,%ZH0,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ)
"RTN","XUSCLEAN",83,0)
 K IO("C"),IO("Q")
"RTN","XUSCLEAN",84,0)
 Q
"RTN","XUSCLEAN",85,0)
 ;
"RTN","XUSCLEAN",86,0)
XMR ;Entry point from XUS to DO xmr and cleanup after.
"RTN","XUSCLEAN",87,0)
 D NEXT^XUS1 S XQXFLG="",XQXFLG("HALT")=1 G H2
"VER")
8.0^22.0
"BLD",871,6)
^341
**END**
**END**
