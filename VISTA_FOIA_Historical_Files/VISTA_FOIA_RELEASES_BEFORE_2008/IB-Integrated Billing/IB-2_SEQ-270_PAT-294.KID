Released IB*2*294 SEQ #270
Extracted from mail message
**KIDS**:IB*2.0*294^

**INSTALL NAME**
IB*2.0*294
"BLD",5213,0)
IB*2.0*294^INTEGRATED BILLING^0^3050103^y
"BLD",5213,1,0)
^^16^16^3050103^
"BLD",5213,1,1,0)
MRA ISSUES RESOLUTIONS AND BUG FIXES
"BLD",5213,1,2,0)
 
"BLD",5213,1,3,0)
1.  MRA statistics report changes.
"BLD",5213,1,4,0)
  1a.  Include totals for all divisions or all selected divisions when
"BLD",5213,1,5,0)
       more than 1 division is included in the report.
"BLD",5213,1,6,0)
  1b.  Corrected a bug in which MRA request transmissions on the same date
"BLD",5213,1,7,0)
       as the ending date for the report were not being counted.
"BLD",5213,1,8,0)
  1c.  Corrected a bug in which MRA secondary transmissions were being 
"BLD",5213,1,9,0)
       counted. Now, only MRA request transmissions during the report date
"BLD",5213,1,10,0)
       range are included in this report.
"BLD",5213,1,11,0)
 
"BLD",5213,1,12,0)
2.  If a professional claim already exists, prevent the creation of a new
"BLD",5213,1,13,0)
professional claim when requesting an MRA for an institutional claim.  
"BLD",5213,1,14,0)
The payer sequence of the existing professional claim was changed to be a 
"BLD",5213,1,15,0)
secondary claim and thus VistA was not detecting it.  The change in this 
"BLD",5213,1,16,0)
patch removes the check on the payer sequence in the case of MRA claims.
"BLD",5213,4,0)
^9.64PA^^
"BLD",5213,"ABPKG")
n
"BLD",5213,"KRN",0)
^9.67PA^8989.52^19
"BLD",5213,"KRN",.4,0)
.4
"BLD",5213,"KRN",.4,"NM",0)
^9.68A^^
"BLD",5213,"KRN",.401,0)
.401
"BLD",5213,"KRN",.401,"NM",0)
^9.68A^^
"BLD",5213,"KRN",.402,0)
.402
"BLD",5213,"KRN",.403,0)
.403
"BLD",5213,"KRN",.5,0)
.5
"BLD",5213,"KRN",.84,0)
.84
"BLD",5213,"KRN",3.6,0)
3.6
"BLD",5213,"KRN",3.8,0)
3.8
"BLD",5213,"KRN",9.2,0)
9.2
"BLD",5213,"KRN",9.8,0)
9.8
"BLD",5213,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5213,"KRN",9.8,"NM",1,0)
IBCEMSR^^0^B49135908
"BLD",5213,"KRN",9.8,"NM",2,0)
IBCU41^^0^B20490138
"BLD",5213,"KRN",9.8,"NM","B","IBCEMSR",1)

"BLD",5213,"KRN",9.8,"NM","B","IBCU41",2)

"BLD",5213,"KRN",19,0)
19
"BLD",5213,"KRN",19.1,0)
19.1
"BLD",5213,"KRN",101,0)
101
"BLD",5213,"KRN",409.61,0)
409.61
"BLD",5213,"KRN",771,0)
771
"BLD",5213,"KRN",870,0)
870
"BLD",5213,"KRN",8989.51,0)
8989.51
"BLD",5213,"KRN",8989.52,0)
8989.52
"BLD",5213,"KRN",8994,0)
8994
"BLD",5213,"KRN","B",.4,.4)

"BLD",5213,"KRN","B",.401,.401)

"BLD",5213,"KRN","B",.402,.402)

"BLD",5213,"KRN","B",.403,.403)

"BLD",5213,"KRN","B",.5,.5)

"BLD",5213,"KRN","B",.84,.84)

"BLD",5213,"KRN","B",3.6,3.6)

"BLD",5213,"KRN","B",3.8,3.8)

"BLD",5213,"KRN","B",9.2,9.2)

"BLD",5213,"KRN","B",9.8,9.8)

"BLD",5213,"KRN","B",19,19)

"BLD",5213,"KRN","B",19.1,19.1)

"BLD",5213,"KRN","B",101,101)

"BLD",5213,"KRN","B",409.61,409.61)

"BLD",5213,"KRN","B",771,771)

"BLD",5213,"KRN","B",870,870)

"BLD",5213,"KRN","B",8989.51,8989.51)

"BLD",5213,"KRN","B",8989.52,8989.52)

"BLD",5213,"KRN","B",8994,8994)

"BLD",5213,"QUES",0)
^9.62^^
"BLD",5213,"REQB",0)
^9.611^1^1
"BLD",5213,"REQB",1,0)
IB*2.0*288^2
"BLD",5213,"REQB","B","IB*2.0*288",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)
 
"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321
"PKG",200,22,1,"PAH",1,0)
294^3050103
"PKG",200,22,1,"PAH",1,1,0)
^^16^16^3050103
"PKG",200,22,1,"PAH",1,1,1,0)
MRA ISSUES RESOLUTIONS AND BUG FIXES
"PKG",200,22,1,"PAH",1,1,2,0)
 
"PKG",200,22,1,"PAH",1,1,3,0)
1.  MRA statistics report changes.
"PKG",200,22,1,"PAH",1,1,4,0)
  1a.  Include totals for all divisions or all selected divisions when
"PKG",200,22,1,"PAH",1,1,5,0)
       more than 1 division is included in the report.
"PKG",200,22,1,"PAH",1,1,6,0)
  1b.  Corrected a bug in which MRA request transmissions on the same date
"PKG",200,22,1,"PAH",1,1,7,0)
       as the ending date for the report were not being counted.
"PKG",200,22,1,"PAH",1,1,8,0)
  1c.  Corrected a bug in which MRA secondary transmissions were being 
"PKG",200,22,1,"PAH",1,1,9,0)
       counted. Now, only MRA request transmissions during the report date
"PKG",200,22,1,"PAH",1,1,10,0)
       range are included in this report.
"PKG",200,22,1,"PAH",1,1,11,0)
 
"PKG",200,22,1,"PAH",1,1,12,0)
2.  If a professional claim already exists, prevent the creation of a new
"PKG",200,22,1,"PAH",1,1,13,0)
professional claim when requesting an MRA for an institutional claim.  
"PKG",200,22,1,"PAH",1,1,14,0)
The payer sequence of the existing professional claim was changed to be a 
"PKG",200,22,1,"PAH",1,1,15,0)
secondary claim and thus VistA was not detecting it.  The change in this 
"PKG",200,22,1,"PAH",1,1,16,0)
patch removes the check on the payer sequence in the case of MRA claims.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","IBCEMSR")
0^1^B49135908
"RTN","IBCEMSR",1,0)
IBCEMSR ;WOIFO/AAT - MRA STATISTICS REPORT ;09/03/04
"RTN","IBCEMSR",2,0)
 ;;2.0;INTEGRATED BILLING;**155,288,294**;21-MAR-94
"RTN","IBCEMSR",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCEMSR",4,0)
 ;
"RTN","IBCEMSR",5,0)
EN ;
"RTN","IBCEMSR",6,0)
 N IBQ,IBDIV,IBBDT,IBEDT,IBSUM,IBSCR
"RTN","IBCEMSR",7,0)
 W !!,"Report requires 132 Columns"
"RTN","IBCEMSR",8,0)
 S IBQ=0 ; quit flag
"RTN","IBCEMSR",9,0)
 ; Prompts to the user:
"RTN","IBCEMSR",10,0)
 D DIV Q:IBQ  ; Division(s)
"RTN","IBCEMSR",11,0)
 D SUM Q:IBQ  ; Summary only?
"RTN","IBCEMSR",12,0)
 W !!,"Normal processing time for a MRA is 10-12 days.  If you select a date range of"
"RTN","IBCEMSR",13,0)
 W !,"less than 2 weeks, do not expect to have received many MRAs."
"RTN","IBCEMSR",14,0)
 D DTR Q:IBQ  ; From-To date range
"RTN","IBCEMSR",15,0)
 D DEVICE Q:IBQ
"RTN","IBCEMSR",16,0)
 D RUN
"RTN","IBCEMSR",17,0)
 Q
"RTN","IBCEMSR",18,0)
 ;
"RTN","IBCEMSR",19,0)
DIV N DIC,DIR,DIRUT,Y
"RTN","IBCEMSR",20,0)
 W ! S DIR("B")="ALL",DIR("A")="Run this report for All divisions or Selected Divisions: "
"RTN","IBCEMSR",21,0)
 S DIR(0)="SA^ALL:All divisions;S:Selected divisions" D ^DIR
"RTN","IBCEMSR",22,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",23,0)
 S IBDIV=Y Q:Y="ALL"
"RTN","IBCEMSR",24,0)
 ; Collect divisions
"RTN","IBCEMSR",25,0)
 F  D  Q:Y'>0
"RTN","IBCEMSR",26,0)
 . W ! S DIC("A")="Division: ",DIC=40.8,DIC(0)="AEQM" D ^DIC
"RTN","IBCEMSR",27,0)
 . I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",28,0)
 . I Y'>0 Q
"RTN","IBCEMSR",29,0)
 . S IBDIV(+Y)=""
"RTN","IBCEMSR",30,0)
 I $O(IBDIV(""))=""  S IBQ=1 Q  ; None selected
"RTN","IBCEMSR",31,0)
 Q
"RTN","IBCEMSR",32,0)
 ;
"RTN","IBCEMSR",33,0)
DTR ;date range
"RTN","IBCEMSR",34,0)
 N %DT,Y
"RTN","IBCEMSR",35,0)
 S (IBBDT,IBEDT)=DT
"RTN","IBCEMSR",36,0)
 S %DT="AEX"
"RTN","IBCEMSR",37,0)
 S %DT("A")="Start with MRA Request Transmission Date: " ; No default,%DT("B")="TODAY"
"RTN","IBCEMSR",38,0)
 W ! D ^%DT K %DT
"RTN","IBCEMSR",39,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",40,0)
 S IBBDT=+Y
"RTN","IBCEMSR",41,0)
 S %DT="AEX"
"RTN","IBCEMSR",42,0)
 S %DT("A")="Go to MRA Request Transmission Date: ",%DT("B")="TODAY"
"RTN","IBCEMSR",43,0)
 D ^%DT K %DT
"RTN","IBCEMSR",44,0)
 I Y<0 S IBQ=1 Q
"RTN","IBCEMSR",45,0)
 S IBEDT=+Y
"RTN","IBCEMSR",46,0)
 Q
"RTN","IBCEMSR",47,0)
 ;
"RTN","IBCEMSR",48,0)
SUM N DIR,DIRUT,Y
"RTN","IBCEMSR",49,0)
 W ! S DIR("B")="YES",DIR("A")="Do you want to print a summary only? "
"RTN","IBCEMSR",50,0)
 S DIR(0)="YA" D ^DIR
"RTN","IBCEMSR",51,0)
 I $D(DIRUT) S IBQ=1 Q
"RTN","IBCEMSR",52,0)
 S IBSUM=+Y
"RTN","IBCEMSR",53,0)
 Q
"RTN","IBCEMSR",54,0)
 ;
"RTN","IBCEMSR",55,0)
DEVICE N %ZIS,IOP,ZTSK,ZTRTN,ZTIO,ZTDESC,ZTSAVE,POP
"RTN","IBCEMSR",56,0)
 K IO("Q")
"RTN","IBCEMSR",57,0)
 S %ZIS="QM"
"RTN","IBCEMSR",58,0)
 W ! D ^%ZIS
"RTN","IBCEMSR",59,0)
 I POP S IBQ=1 Q
"RTN","IBCEMSR",60,0)
 S IBSCR=$S($E($G(IOST),1,2)="C-":1,1:0)
"RTN","IBCEMSR",61,0)
 ;
"RTN","IBCEMSR",62,0)
 I $D(IO("Q")) D  S IBQ=1
"RTN","IBCEMSR",63,0)
 . S ZTRTN="RUN^IBCEMSR"
"RTN","IBCEMSR",64,0)
 . S ZTIO=ION
"RTN","IBCEMSR",65,0)
 . S ZTSAVE("IB*")=""
"RTN","IBCEMSR",66,0)
 . S ZTDESC="IB MRA STATISTICS REPORT"
"RTN","IBCEMSR",67,0)
 . D ^%ZTLOAD
"RTN","IBCEMSR",68,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBCEMSR",69,0)
 . D HOME^%ZIS
"RTN","IBCEMSR",70,0)
 U IO
"RTN","IBCEMSR",71,0)
 Q
"RTN","IBCEMSR",72,0)
 ;
"RTN","IBCEMSR",73,0)
 ;
"RTN","IBCEMSR",74,0)
RUN N REF
"RTN","IBCEMSR",75,0)
 S REF=$NA(^TMP($J,"IBCEMSR"))
"RTN","IBCEMSR",76,0)
 K @REF
"RTN","IBCEMSR",77,0)
 D COLLECT  ; Collect the data in ^TMP
"RTN","IBCEMSR",78,0)
 U IO
"RTN","IBCEMSR",79,0)
 D REPORT^IBCEMSR1
"RTN","IBCEMSR",80,0)
 I 'IBSCR W !,@IOF
"RTN","IBCEMSR",81,0)
 D ^%ZISC
"RTN","IBCEMSR",82,0)
 K @REF
"RTN","IBCEMSR",83,0)
 Q
"RTN","IBCEMSR",84,0)
 ;
"RTN","IBCEMSR",85,0)
COLLECT ; Collect Information
"RTN","IBCEMSR",86,0)
 ; Input: IBDIV, IBBDT,IBEDT
"RTN","IBCEMSR",87,0)
 N IBDT,IBBAT,IBTRAN,IBZ,MRAUSR,NUMDIV,IBDV,ALLDIV
"RTN","IBCEMSR",88,0)
 S IBDV=0 F NUMDIV=0:1 S IBDV=$O(IBDIV(IBDV)) Q:'IBDV
"RTN","IBCEMSR",89,0)
 S ALLDIV=" "
"RTN","IBCEMSR",90,0)
 I IBDIV="ALL" S ALLDIV="  *** ALL DIVISIONS ***"
"RTN","IBCEMSR",91,0)
 I NUMDIV>1 S ALLDIV="  *** ALL SELECTED DIVISIONS ***"
"RTN","IBCEMSR",92,0)
 ;
"RTN","IBCEMSR",93,0)
 S MRAUSR=$$MRAUSR^IBCEMU1() ;Auto-authorizer
"RTN","IBCEMSR",94,0)
 S IBDT=IBBDT-.000001
"RTN","IBCEMSR",95,0)
 F  S IBDT=$O(^IBA(364.1,"ALT",IBDT)) Q:'IBDT  Q:IBDT\1>IBEDT  D
"RTN","IBCEMSR",96,0)
 . S IBBAT=0 F  S IBBAT=$O(^IBA(364.1,"ALT",IBDT,IBBAT)) Q:'IBBAT  D
"RTN","IBCEMSR",97,0)
 .. S IBTRAN=0 F  S IBTRAN=$O(^IBA(364,"C",IBBAT,IBTRAN)) Q:'IBTRAN  D
"RTN","IBCEMSR",98,0)
 ... S IBZ=$G(^IBA(364,IBTRAN,0)) Q:IBZ=""
"RTN","IBCEMSR",99,0)
 ... N IBIFN,IBSTAT,IBSEQ,IBBILZ,IBBILST,IBFORM,IBCLERK,IBDV,IBDVN,REFX,REFS,REFT,REFTX,MRACNT,IBREJECT
"RTN","IBCEMSR",100,0)
 ... S IBIFN=+IBZ
"RTN","IBCEMSR",101,0)
 ... I '$P($G(^DGCR(399,IBIFN,"S")),U,7) Q  ; no MRA request
"RTN","IBCEMSR",102,0)
 ... S IBSTAT=$P(IBZ,U,3)
"RTN","IBCEMSR",103,0)
 ... S IBSEQ=$P(IBZ,U,8) Q:"T"[IBSEQ
"RTN","IBCEMSR",104,0)
 ... I '$$WNRBILL^IBEFUNC(IBIFN,IBSEQ) Q   ; payer sequence must be Medicare for this transmission
"RTN","IBCEMSR",105,0)
 ... S IBBILZ=$G(^DGCR(399,IBIFN,0))
"RTN","IBCEMSR",106,0)
 ... S IBBILST=$P(IBBILZ,U,13)
"RTN","IBCEMSR",107,0)
 ... S IBFORM=+$P(IBBILZ,U,19)
"RTN","IBCEMSR",108,0)
 ... I IBFORM'=2,IBFORM'=3 Q  ; not HCFA1500 or UB92
"RTN","IBCEMSR",109,0)
 ... S IBCLERK=+$P($G(^DGCR(399,IBIFN,"S")),U,8) ; Who requested MRA?
"RTN","IBCEMSR",110,0)
 ... S IBCLERK=$P($G(^VA(200,IBCLERK,0)),U)
"RTN","IBCEMSR",111,0)
 ... S:IBCLERK="" IBCLERK="UNKNOWN"
"RTN","IBCEMSR",112,0)
 ... S IBDV=+$P(IBBILZ,U,22) ; Default division
"RTN","IBCEMSR",113,0)
 ... S IBDVN=$P($G(^DG(40.8,IBDV,0)),U) ; Div name
"RTN","IBCEMSR",114,0)
 ... S:IBDVN="" IBDVN="UNKNOWN"
"RTN","IBCEMSR",115,0)
 ... I IBDIV'="ALL",'$D(IBDIV(IBDV)) Q  ;Division filter
"RTN","IBCEMSR",116,0)
 ... I 'IBSUM S REFX=$NA(@REF@(IBDVN,IBCLERK,IBFORM)) I NUMDIV'=1 S REFTX=$NA(@REF@(ALLDIV,IBCLERK,IBFORM))  ; all divisions detail
"RTN","IBCEMSR",117,0)
 ... S REFS=$NA(@REF@(IBDVN,0,IBFORM)) ; Summary by division
"RTN","IBCEMSR",118,0)
 ... I NUMDIV'=1 S REFT=$NA(@REF@(ALLDIV,0,IBFORM))  ; all divisions
"RTN","IBCEMSR",119,0)
 ... D TXSTS^IBCEMU2(IBIFN,IBTRAN,.IBREJECT) ; rejected?
"RTN","IBCEMSR",120,0)
 ... S MRACNT=$$MRACNT^IBCEMU1(IBIFN) ; how many MRAs?
"RTN","IBCEMSR",121,0)
 ... D INC("ALL") ; total no of requests
"RTN","IBCEMSR",122,0)
 ... I IBSTAT="C" D INC("ALLC") ;cancelled
"RTN","IBCEMSR",123,0)
 ... I IBSTAT="R" D INC("ALLR") ;resubmitted
"RTN","IBCEMSR",124,0)
 ... I '$D(@REFS@("TOT",IBIFN)) S ^(IBIFN)="" D INC("TOT") ;unique requests
"RTN","IBCEMSR",125,0)
 ... ;no response?
"RTN","IBCEMSR",126,0)
 ... I 'IBREJECT,'MRACNT,'$D(@REFS@("NON",IBIFN)) S ^(IBIFN)="" D INC("NON")
"RTN","IBCEMSR",127,0)
 ... ;final reject?
"RTN","IBCEMSR",128,0)
 ... I 'MRACNT,IBREJECT,'$D(@REFS@("REJF",IBIFN)),IBTRAN=$$LAST364^IBCEF4(IBIFN) D
"RTN","IBCEMSR",129,0)
 .... S @REFS@("REJF",IBIFN)="" D INC("REJF")
"RTN","IBCEMSR",130,0)
 .... ; MRA?
"RTN","IBCEMSR",131,0)
 ... I MRACNT,'$D(@REFS@("MRA",IBIFN)) S ^(IBIFN)="" D
"RTN","IBCEMSR",132,0)
 .... D INC("MRA")
"RTN","IBCEMSR",133,0)
 .... I $$DENIED(IBIFN) D INC("MRAD")
"RTN","IBCEMSR",134,0)
 ... ;any secondary claims?
"RTN","IBCEMSR",135,0)
 ... D SECOND
"RTN","IBCEMSR",136,0)
 Q
"RTN","IBCEMSR",137,0)
 ;
"RTN","IBCEMSR",138,0)
INC(NODE,VALUE) ;Increase the respective value in ^TMP
"RTN","IBCEMSR",139,0)
 I 'IBSUM D
"RTN","IBCEMSR",140,0)
 . S @REFX@(NODE)=$G(@REFX@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",141,0)
 . I $D(REFTX) S @REFTX@(NODE)=$G(@REFTX@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",142,0)
 . Q
"RTN","IBCEMSR",143,0)
 S @REFS@(NODE)=$G(@REFS@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",144,0)
 I $D(REFT) S @REFT@(NODE)=$G(@REFT@(NODE))+$G(VALUE,1)
"RTN","IBCEMSR",145,0)
 Q
"RTN","IBCEMSR",146,0)
 ;
"RTN","IBCEMSR",147,0)
DENIED(IBIFN) ;MRA requests denied?
"RTN","IBCEMSR",148,0)
 ; 361.1 for this bill#
"RTN","IBCEMSR",149,0)
 ; if at least one request is 'processed' - MRA is NOT DENIED
"RTN","IBCEMSR",150,0)
 N IBDEN,IEN,IBZ
"RTN","IBCEMSR",151,0)
 S IBDEN=1
"RTN","IBCEMSR",152,0)
 S IEN=0 F  S IEN=$O(^IBM(361.1,"B",+$G(IBIFN),IEN)) Q:'IEN  D  Q:'IBDEN
"RTN","IBCEMSR",153,0)
 . S IBZ=$G(^IBM(361.1,IEN,0))
"RTN","IBCEMSR",154,0)
 . I $P(IBZ,U,4)'=1 Q  ; only MEDICARE
"RTN","IBCEMSR",155,0)
 . I $P(IBZ,U,13)=1 S IBDEN=0
"RTN","IBCEMSR",156,0)
 Q IBDEN
"RTN","IBCEMSR",157,0)
 ;
"RTN","IBCEMSR",158,0)
SECOND ;Secondary claims
"RTN","IBCEMSR",159,0)
 N IBAUT,IBTX,IBCBPS,IBNEXT,IBBILS,IBTOT,IBUNR,IB2ND,IBNODE
"RTN","IBCEMSR",160,0)
 I $D(@REFS@("SEC",IBIFN)) Q  ; Already included
"RTN","IBCEMSR",161,0)
 S IBCBPS=$P(IBBILZ,U,21) ; current bill sequence
"RTN","IBCEMSR",162,0)
 S IBNEXT=$S(IBSEQ="S":"T",1:"S") ;Next (after MRA) sequence
"RTN","IBCEMSR",163,0)
 I IBCBPS'=IBNEXT Q
"RTN","IBCEMSR",164,0)
 ; Number of unique sec claims
"RTN","IBCEMSR",165,0)
 S @REFS@("SEC",IBIFN)=""
"RTN","IBCEMSR",166,0)
 D INC("SEC")
"RTN","IBCEMSR",167,0)
 S IBBILS=$G(^DGCR(399,IBIFN,"S")) Q:'$P(IBBILS,U,10)  ; Not even authorized
"RTN","IBCEMSR",168,0)
 ; Authorized but not yet printed?
"RTN","IBCEMSR",169,0)
 I $P(IBBILS,U,10),'$P(IBBILS,U,13) D  Q
"RTN","IBCEMSR",170,0)
 . I +$$TXMT^IBCEF4(IBIFN)'=1 D INC("AUT") ; Exclude transmittable
"RTN","IBCEMSR",171,0)
 ; Check the field 'AUTHORIZER'
"RTN","IBCEMSR",172,0)
 S IBAUT=($P(IBBILS,U,11)=MRAUSR) ; Auto-authorized?
"RTN","IBCEMSR",173,0)
 S IBTX=$$TRANSM(IBIFN,IBNEXT) ; Transmitted? (present in 364?)
"RTN","IBCEMSR",174,0)
 I IBAUT,IBTX S IBNODE="AT"   ; Auto-gen Tx
"RTN","IBCEMSR",175,0)
 I 'IBAUT,IBTX S IBNODE="MT"  ; Manually Tx
"RTN","IBCEMSR",176,0)
 I IBAUT,'IBTX S IBNODE="AP"  ; Auto-gen Prn
"RTN","IBCEMSR",177,0)
 I 'IBAUT,'IBTX S IBNODE="MP" ; Manually Prn
"RTN","IBCEMSR",178,0)
 ;
"RTN","IBCEMSR",179,0)
 ;Calculate amounts
"RTN","IBCEMSR",180,0)
 S IBTOT=+$G(^DGCR(399,IBIFN,"U1"))
"RTN","IBCEMSR",181,0)
 S IBUNR=$P($G(^PRCA(430,IBIFN,13)),U,2) ; Medicare Unreimbursable
"RTN","IBCEMSR",182,0)
 S IB2ND=$$PREOBTOT^IBCEU0(IBIFN)
"RTN","IBCEMSR",183,0)
 D INC(IBNODE)
"RTN","IBCEMSR",184,0)
 D INC(IBNODE_"1",IBTOT)
"RTN","IBCEMSR",185,0)
 D INC(IBNODE_"2",IBUNR)
"RTN","IBCEMSR",186,0)
 D INC(IBNODE_"3",IB2ND)
"RTN","IBCEMSR",187,0)
 Q
"RTN","IBCEMSR",188,0)
 ;
"RTN","IBCEMSR",189,0)
TRANSM(IBIFN,IBSEQ) ;was the claim ever transmitted?
"RTN","IBCEMSR",190,0)
 ; Does the claim present in 364?
"RTN","IBCEMSR",191,0)
 N RES,IBI
"RTN","IBCEMSR",192,0)
 S RES=0
"RTN","IBCEMSR",193,0)
 S IBI="" F  S IBI=$O(^IBA(364,"B",IBIFN,IBI),-1) Q:IBI=""  D  Q:RES
"RTN","IBCEMSR",194,0)
 . I $P($G(^IBA(364,IBI,0)),U,8)=IBSEQ S RES=1
"RTN","IBCEMSR",195,0)
 Q RES
"RTN","IBCEMSR",196,0)
 ;
"RTN","IBCU41")
0^2^B20490138
"RTN","IBCU41",1,0)
IBCU41 ;ALB/ARH - THIRD PARTY BILLING UTILITIES (OP VISIT DATES) ;6-JUN-93
"RTN","IBCU41",2,0)
 ;;2.0;INTEGRATED BILLING;**80,106,51,294**;21-MAR-94
"RTN","IBCU41",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IBCU41",4,0)
 ;
"RTN","IBCU41",5,0)
 ;
"RTN","IBCU41",6,0)
OPV(DATE,IFN) ;input transform for outpatient visit dates (399,43,.01)
"RTN","IBCU41",7,0)
 ;input:  DATE - to add
"RTN","IBCU41",8,0)
 ;        IFN  - bill to add to
"RTN","IBCU41",9,0)
 ;returns: 1 - if OK to add
"RTN","IBCU41",10,0)
 ;         0 - if not
"RTN","IBCU41",11,0)
 N X,Y S X=1
"RTN","IBCU41",12,0)
 I '$$OPV2(DATE,IFN,1) S X=0
"RTN","IBCU41",13,0)
 I '$$OPV1(IFN,1) S X=0
"RTN","IBCU41",14,0)
 S Y=$$APPT^IBCU3(DATE,$P($G(^DGCR(399,IFN,0)),U,2),1)
"RTN","IBCU41",15,0)
 S Y=$$DUPCHK(DATE,IFN,1)
"RTN","IBCU41",16,0)
 Q X
"RTN","IBCU41",17,0)
 ;
"RTN","IBCU41",18,0)
OPV1(IFN,DISP,CNT) ;edit checks for adding visit dates, if any of these fail then no visit date should be added to the bill
"RTN","IBCU41",19,0)
 ;these are the types of checks that if they fail a message should be displayed to the user
"RTN","IBCU41",20,0)
 ;does not check date passed in against existing dates, assumes new visit date
"RTN","IBCU41",21,0)
 ;input:  IFN  - required, internal file number of bill to check
"RTN","IBCU41",22,0)
 ;        DISP - if true then error messager will be printed, if any
"RTN","IBCU41",23,0)
 ;        CNT  - number of visit dates user wants to add to bill
"RTN","IBCU41",24,0)
 ;returns: "1^warning message" - if OK to add more visit dates to the bill
"RTN","IBCU41",25,0)
 ;         "0^error message" - if no more visit dates should added to the bill
"RTN","IBCU41",26,0)
 ;
"RTN","IBCU41",27,0)
 N X,Y S Y=1 S:$G(CNT)="" CNT=1 S:$G(UN)="" UN=$G(^DGCR(399,+IFN,"U"))
"RTN","IBCU41",28,0)
 I '$P(UN,U,1) S Y="0^No 'Statement From' date on file ... Can't enter OP visit dates ..." G OPV1E
"RTN","IBCU41",29,0)
 I '$P(UN,U,2) S Y="0^No 'Statement To' date on file ... Can't enter OP visit dates ..." G OPV1E
"RTN","IBCU41",30,0)
 G:'$O(^DGCR(399,IFN,"OP",0))&(CNT<2) OPV1E
"RTN","IBCU41",31,0)
 I $P($G(^DGCR(399,IFN,"OP",0)),U,4)+CNT>30 S Y="0^Maximum of 30 visit dates allowed per bill!" G OPV1E
"RTN","IBCU41",32,0)
 I +$P($G(^DGCR(399,+IFN,0)),U,19)'=2,$D(^DGCR(399,IFN,"CP","ASC")) S Y="0^Only one visit date allowed on bills with Billable Amb. Surg. Codes!" G OPV1E
"RTN","IBCU41",33,0)
 ;warnings:
"RTN","IBCU41",34,0)
 I +Y,+$P($G(^DIC(36,$S(+$G(^DGCR(399,IFN,"MP")):+^("MP"),$$MCRWNR^IBEFUNC(+$$CURR^IBCEF2(IFN)):+$$CURR^IBCEF2(IFN),1:0),0)),U,8) S Y="1^This insurance Company will only accept one visit per bill!" G OPV1E
"RTN","IBCU41",35,0)
OPV1E I +$G(DISP),$P(Y,U,2)'="" W !,?10,$P(Y,U,2)
"RTN","IBCU41",36,0)
 Q Y
"RTN","IBCU41",37,0)
 ;
"RTN","IBCU41",38,0)
OPV2(DATE,IFN,DISP,UN) ;edit checks for adding visit dates, if any if these fail then the given date should not be added to the bill
"RTN","IBCU41",39,0)
 ;these are the types of checks that determine if a particular visit date should be presented to the user for possible addition to the bill
"RTN","IBCU41",40,0)
 ;does not check date passed in against existing dates, assumes new visit date
"RTN","IBCU41",41,0)
 ;also being used for Procedure Date (399,304,1) input transform
"RTN","IBCU41",42,0)
 ;input:  DATE - required, date to check for addition to the bill
"RTN","IBCU41",43,0)
 ;        IFN  - required, internal file number of bill to check
"RTN","IBCU41",44,0)
 ;        DISP - if true then error messager will be printed, if any
"RTN","IBCU41",45,0)
 ;        UN   - the "U" node of the bill, pass if alrady defined in a var
"RTN","IBCU41",46,0)
 ;returns: "1^warning message" - if date is OK to add to the bill
"RTN","IBCU41",47,0)
 ;         "0^error message" - if date should not be added to the bill
"RTN","IBCU41",48,0)
 ;
"RTN","IBCU41",49,0)
 N X,Y S Y=1,DATE=$P(DATE,".",1) S:$G(UN)="" UN=$G(^DGCR(399,+IFN,"U"))
"RTN","IBCU41",50,0)
 I DATE<+UN S Y="0^Can't enter a visit date prior to the 'Statement From' date ..." G OPV2E
"RTN","IBCU41",51,0)
 I DATE>+$P(UN,U,2) S Y="0^Can't enter a visit date later than the 'Statement To' date ..." G OPV2E
"RTN","IBCU41",52,0)
OPV2E I +$G(DISP),$P(Y,U,2)'="" W !,?10,$P(Y,U,2)
"RTN","IBCU41",53,0)
 Q Y
"RTN","IBCU41",54,0)
 ;
"RTN","IBCU41",55,0)
DUPCHK(DATE,IFN,DISP,DFN,RTG) ;Check for duplicate billing of opt visit - checks for given visit date on other
"RTN","IBCU41",56,0)
 ;bills with the same rate type and that have not been cancelled (if not IFN then use DFN and RTG)
"RTN","IBCU41",57,0)
 ;input:   DATE - visit date to check
"RTN","IBCU41",58,0)
 ;         IFN - internal file number of bill date is being added to
"RTN","IBCU41",59,0)
 ;         DISP - true if error message should be printed before exit, if any
"RTN","IBCU41",60,0)
 ;         DFN - patient'S IFN (required only if IFN is not passed)
"RTN","IBCU41",61,0)
 ;         RTG - rate group to check for (""), if no rate group (0 passed and/or no IFN) then any bill found for
"RTN","IBCU41",62,0)
 ;               visit date will cause error message
"RTN","IBCU41",63,0)
 ;returns: 0 - if another bill was not found with this visit date, patient, and rate type
"RTN","IBCU41",64,0)
 ;         (dup IFN)_"^error message" - if duplicate date found, same rate group, IFN of other bill w/visit date
"RTN","IBCU41",65,0)
 ;(initially set up to check for same rate group because MT billing was done on the UB-82 so it was valid to have multiple bills with different rate groups for the same episode)
"RTN","IBCU41",66,0)
 N IFN2,Y,X S Y=0,DATE=$P(+$G(DATE),".",1),IFN=+$G(IFN),X=$G(^DGCR(399,IFN,0))
"RTN","IBCU41",67,0)
 S DFN=$S(+$G(DFN):$G(DFN),1:$P(X,U,2)),RTG=$S($G(RTG)'="":RTG,1:$P(X,U,7)) G:'DFN DUPCHKE
"RTN","IBCU41",68,0)
 I '$D(^DGCR(399,"AOPV",DFN,DATE)) G DUPCHKE
"RTN","IBCU41",69,0)
 S IFN2=0 F  S IFN2=$O(^DGCR(399,"AOPV",DFN,DATE,IFN2)) Q:'IFN2  I IFN2'=IFN D  Q:+Y
"RTN","IBCU41",70,0)
 . S X=$G(^DGCR(399,IFN2,0)) I $P(X,U,13)=7 Q  ; bill for date cancelled
"RTN","IBCU41",71,0)
 . I +RTG,RTG'=$P(X,U,7) Q  ; different rate group
"RTN","IBCU41",72,0)
 . S Y=IFN2_"^A "_$P($G(^DGCR(399.3,+$P(X,U,7),0)),U,1)_" bill ("_$P(X,U,1)_") exists for visit date ("_$$DAT1^IBOUTL(DATE)_")."
"RTN","IBCU41",73,0)
DUPCHKE I +$G(DISP),+Y W !,?10,$P(Y,U,2)
"RTN","IBCU41",74,0)
 Q Y
"RTN","IBCU41",75,0)
 ;
"RTN","IBCU41",76,0)
CTCHK(IBIFN) ; if professional/institutional bill passed in has a corresponding institutional/professional
"RTN","IBCU41",77,0)
 ; bill defined return it's bill number
"RTN","IBCU41",78,0)
 ; check/match: patient, bill type, event date, rate type, payer seq, statement from, statement to, not cancelled
"RTN","IBCU41",79,0)
 ;
"RTN","IBCU41",80,0)
 N IBFND,IB0,IBCT,IBDFN,IBEVDT,IBBT,IBRT,IBSEQ,IBSTDTS,IBCT1,IBIFN1,IB01 S IBFND=0
"RTN","IBCU41",81,0)
 S IB0=$G(^DGCR(399,+$G(IBIFN),0)),IBCT=$P(IB0,U,27) I 'IBCT G CTCHKQ
"RTN","IBCU41",82,0)
 S IBDFN=$P(IB0,U,2),IBEVDT=$P(IB0,U,3),IBBT=$P(IB0,U,5),IBRT=$P(IB0,U,7),IBSEQ=$P(IB0,U,21)
"RTN","IBCU41",83,0)
 S IBSTDTS=$P($G(^DGCR(399,IBIFN,"U")),U,1,2),IBCT1=$S(IBCT=1:2,IBCT=2:1,1:"") I 'IBCT1 G CTCHKQ
"RTN","IBCU41",84,0)
 ;
"RTN","IBCU41",85,0)
 S IBIFN1=0 F  S IBIFN1=$O(^DGCR(399,"D",IBEVDT,IBIFN1)) Q:'IBIFN1  D  Q:IBFND
"RTN","IBCU41",86,0)
 . S IB01=$G(^DGCR(399,IBIFN1,0))
"RTN","IBCU41",87,0)
 . I $P(IB01,U,13)=7 Q         ; cancelled bill
"RTN","IBCU41",88,0)
 . I IBDFN'=$P(IB01,U,2) Q     ; patient
"RTN","IBCU41",89,0)
 . I IBCT1'=$P(IB01,U,27) Q    ; charge type
"RTN","IBCU41",90,0)
 . I IBBT'=$P(IB01,U,5) Q      ; bill type/classification
"RTN","IBCU41",91,0)
 . I IBRT'=$P(IB01,U,7) Q      ; rate type
"RTN","IBCU41",92,0)
 . I '$P($G(^DGCR(399,IBIFN1,"S")),U,7),IBSEQ'=$P(IB01,U,21) Q    ; payer sequence (applies to non-MRA claims only; IB*2*294 modification)
"RTN","IBCU41",93,0)
 . I IBSTDTS'=$P($G(^DGCR(399,IBIFN1,"U")),U,1,2) Q     ; from/thru dates
"RTN","IBCU41",94,0)
 . S IBFND=IBIFN1              ; found a match
"RTN","IBCU41",95,0)
 . Q
"RTN","IBCU41",96,0)
 ;
"RTN","IBCU41",97,0)
CTCHKQ Q IBFND
"VER")
8.0^22.0
**END**
**END**
