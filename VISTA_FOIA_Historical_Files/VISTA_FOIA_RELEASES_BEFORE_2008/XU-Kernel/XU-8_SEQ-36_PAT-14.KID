Released XU*8*14 SEQ #36
Extracted from mail message
**KIDS**:XU*8.0*14^

**INSTALL NAME**
XU*8.0*14
"BLD",14,0)
XU*8.0*14^KERNEL^0^2951121^n
"BLD",14,1,0)
^^72^72^2961010^
"BLD",14,1,1,0)
E-Sig Improvements
"BLD",14,1,2,0)

"BLD",14,1,3,0)
New E-SIG functions so that other developers can follow the General
"BLD",14,1,4,0)
Counsels guidelines on E-SIG. This comes from a meeting at Birmingham on
"BLD",14,1,5,0)
9/18-20/95.  New routine XUSESIG1.
"BLD",14,1,6,0)

"BLD",14,1,7,0)
Changes to the New Person file:
"BLD",14,1,8,0)
 Added a DEGREE field to hold MD, RN, LPN...
"BLD",14,1,9,0)
 Added a DATE E-SIG LAST CHANGED field.  The seeding of the this field
"BLD",14,1,10,0)
 will be done by taking the current date+random(60)+30 days to give a date
"BLD",14,1,11,0)
 when the user will need to select a new E-SIG code.
"BLD",14,1,12,0)
The option XUSESIG BLOCK is included in this patch.
"BLD",14,1,13,0)
  
"BLD",14,1,14,0)
KERNEL functions to help developers.
"BLD",14,1,15,0)
 
"BLD",14,1,16,0)
$$CHKSUM^XUSESIG1($name_value,flag)
"BLD",14,1,17,0)
This would take a root ($name_value) and build a checksum for all data in the
"BLD",14,1,18,0)
root. (Not used now, flag would be used when there is more that one checksum
"BLD",14,1,19,0)
algorithm.)
"BLD",14,1,20,0)
 
"BLD",14,1,21,0)
$$ESBLOCK^XUSESIG1(ien)
"BLD",14,1,22,0)
This extrinsic function would return the set of fields from the new 
"BLD",14,1,23,0)
person file that are need as part of the hash for a acceptable E-Sig. 
"BLD",14,1,24,0)
If IEN is not passed in then DUZ is used.
"BLD",14,1,25,0)
(E-Sig block, E-Sig title, Degree, Current Date/Time)
"BLD",14,1,26,0)
 
"BLD",14,1,27,0)
$$EN^XUSESIG1(checksum,esblock)
"BLD",14,1,28,0)
If the ESBLOCK is not passed then the function would get the ESBLOCK. In 
"BLD",14,1,29,0)
either case this extrinsic function would encode the ESBLOCK using the 
"BLD",14,1,30,0)
checksum as the KEY.  Return a encoded string.  
"BLD",14,1,31,0)

"BLD",14,1,32,0)
$$CMP^XUSESIG1(checksum,$name_value)
"BLD",14,1,33,0)
The extrinsic function would compare the checksum passed in to the 
"BLD",14,1,34,0)
calculated value from the $NAME_VALUE.  Return 1 for match, 0 for no 
"BLD",14,1,35,0)
match.
"BLD",14,1,36,0)
 
"BLD",14,1,37,0)
$$DE^XUSESIG1(checksum,encoded_string)
"BLD",14,1,38,0)
This extrinsic function would decode the string using the checksum as 
"BLD",14,1,39,0)
the key.  Return a decoded string.
"BLD",14,1,40,0)
 
"BLD",14,1,41,0)

"BLD",14,1,42,0)
Routine      ChkSum      2nd Line
"BLD",14,1,43,0)
XUSESIG      5865804   ;;8.0;KERNEL;**14**;Jul 10, 1995
"BLD",14,1,44,0)
XUSESIG1      864068   ;;8.0;KERNEL;**14**;Jul 10, 1995
"BLD",14,1,45,0)

"BLD",14,1,46,0)
========================================================================= 
"BLD",14,1,47,0)
Installation:
"BLD",14,1,48,0)
 
"BLD",14,1,49,0)
  1.  These routines may be mapped on systems that allow mapping,
"BLD",14,1,50,0)
      so you will need to disable mapping for the effected routines.
"BLD",14,1,51,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",14,1,52,0)
      option will load the KIDS package onto your system.
"BLD",14,1,53,0)
  3.  The patch has now been loaded into a Transport global on your
"BLD",14,1,54,0)
      system. You now need to use KIDS to install the Transport global.
"BLD",14,1,55,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"BLD",14,1,56,0)
      options:
"BLD",14,1,57,0)
         Print Transport Global
"BLD",14,1,58,0)
         Compare Transport Global to Current System
"BLD",14,1,59,0)
         Verify Checksums in Transport Global
"BLD",14,1,60,0)
         Backup a Transport Global
"BLD",14,1,61,0)
  4.  Inhibit users from login into the system. (If you install when few
"BLD",14,1,62,0)
      user are on the system and the possibility of some CLOBER errors is
"BLD",14,1,63,0)
      acceptable then users can stay on the system.)
"BLD",14,1,64,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"BLD",14,1,65,0)
      options:
"BLD",14,1,66,0)
         Install Package(s)  'XU*8.0*14'
"BLD",14,1,67,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"BLD",14,1,68,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"BLD",14,1,69,0)
  7.  AXP Sites, after patch has installed, rebuild your map set.
"BLD",14,1,70,0)

"BLD",14,1,71,0)
=========================================================================
"BLD",14,1,72,0)

"BLD",14,4,0)
^9.64PA^200^1
"BLD",14,4,200,0)
200
"BLD",14,4,200,2,0)
^9.641^200^1
"BLD",14,4,200,2,200,0)
NEW PERSON  (File-top level)
"BLD",14,4,200,2,200,1,0)
^9.6411^10.6^5
"BLD",14,4,200,2,200,1,10.6,0)
DEGREE
"BLD",14,4,200,2,200,1,20.1,0)
DATE E-SIG LAST CHANGED
"BLD",14,4,200,2,200,1,20.2,0)
SIGNATURE BLOCK PRINTED NAME
"BLD",14,4,200,2,200,1,20.3,0)
SIGNATURE BLOCK TITLE
"BLD",14,4,200,2,200,1,20.4,0)
ELECTRONIC SIGNATURE CODE
"BLD",14,4,200,222)
y^n^p^^^^n
"BLD",14,4,"APDD",200,200)

"BLD",14,4,"APDD",200,200,10.6)

"BLD",14,4,"APDD",200,200,20.1)

"BLD",14,4,"APDD",200,200,20.2)

"BLD",14,4,"APDD",200,200,20.3)

"BLD",14,4,"APDD",200,200,20.4)

"BLD",14,4,"B",200,200)

"BLD",14,"KRN",0)
^9.67PA^8994^15
"BLD",14,"KRN",.4,0)
.4
"BLD",14,"KRN",.401,0)
.401
"BLD",14,"KRN",.402,0)
.402
"BLD",14,"KRN",.402,"NM",0)
^9.68A^^
"BLD",14,"KRN",.403,0)
.403
"BLD",14,"KRN",.5,0)
.5
"BLD",14,"KRN",.84,0)
.84
"BLD",14,"KRN",3.6,0)
3.6
"BLD",14,"KRN",9.2,0)
9.2
"BLD",14,"KRN",9.8,0)
9.8
"BLD",14,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",14,"KRN",9.8,"NM",1,0)
XUSESIG^^0^B9989937
"BLD",14,"KRN",9.8,"NM",2,0)
XUSESIG1^^0^B1595900
"BLD",14,"KRN",9.8,"NM","B","XUSESIG",1)

"BLD",14,"KRN",9.8,"NM","B","XUSESIG1",2)

"BLD",14,"KRN",19,0)
19
"BLD",14,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",14,"KRN",19,"NM",1,0)
XUSESIG BLOCK^^0
"BLD",14,"KRN",19,"NM","B","XUSESIG BLOCK",1)

"BLD",14,"KRN",19.1,0)
19.1
"BLD",14,"KRN",101,0)
101
"BLD",14,"KRN",409.61,0)
409.61
"BLD",14,"KRN",8994,0)
8994
"BLD",14,"KRN",8995,0)
8995
"BLD",14,"KRN","B",.4,.4)

"BLD",14,"KRN","B",.401,.401)

"BLD",14,"KRN","B",.402,.402)

"BLD",14,"KRN","B",.403,.403)

"BLD",14,"KRN","B",.5,.5)

"BLD",14,"KRN","B",.84,.84)

"BLD",14,"KRN","B",3.6,3.6)

"BLD",14,"KRN","B",9.2,9.2)

"BLD",14,"KRN","B",9.8,9.8)

"BLD",14,"KRN","B",19,19)

"BLD",14,"KRN","B",19.1,19.1)

"BLD",14,"KRN","B",101,101)

"BLD",14,"KRN","B",409.61,409.61)

"BLD",14,"KRN","B",8994,8994)

"BLD",14,"KRN","B",8995,8995)

"BLD",14,"QUES",0)
^9.62^^
"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,10.6)

"FIA",200,200,20.1)

"FIA",200,200,20.2)

"FIA",200,200,20.3)

"FIA",200,200,20.4)

"KRN",19,371,-1)
0^1
"KRN",19,371,0)
XUSESIG BLOCK^Electronic Signature Block Edit^^E^^^^^^^^
"KRN",19,371,1,0)
^^5^5^2931115^^
"KRN",19,371,1,1,0)
This option gives access to the Signature Block of the Electronic
"KRN",19,371,1,2,0)
Signature.  This is automatically set by a cross reference of the name
"KRN",19,371,1,3,0)
field. If it is changed with this option, it must contain the last name
"KRN",19,371,1,4,0)
from the name field. Also if the name field is changed this field will be
"KRN",19,371,1,5,0)
changed also and may need to be re-edited.
"KRN",19,371,30)
VA(200,
"KRN",19,371,31)
AEMQ
"KRN",19,371,50)
VA(200,
"KRN",19,371,51)
20.2;10.6
"KRN",19,371,"U")
ELECTRONIC SIGNATURE BLOCK EDI
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^XUDOCV7 NEW FEATURES
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^2950703^2951018^4
"PKG",3,22,1,"PAH",1,0)
14^2951121
"PKG",3,22,1,"PAH",1,1,0)
^^72^72^2961010
"PKG",3,22,1,"PAH",1,1,1,0)
E-Sig Improvements
"PKG",3,22,1,"PAH",1,1,2,0)

"PKG",3,22,1,"PAH",1,1,3,0)
New E-SIG functions so that other developers can follow the General
"PKG",3,22,1,"PAH",1,1,4,0)
Counsels guidelines on E-SIG. This comes from a meeting at Birmingham on
"PKG",3,22,1,"PAH",1,1,5,0)
9/18-20/95.  New routine XUSESIG1.
"PKG",3,22,1,"PAH",1,1,6,0)

"PKG",3,22,1,"PAH",1,1,7,0)
Changes to the New Person file:
"PKG",3,22,1,"PAH",1,1,8,0)
 Added a DEGREE field to hold MD, RN, LPN...
"PKG",3,22,1,"PAH",1,1,9,0)
 Added a DATE E-SIG LAST CHANGED field.  The seeding of the this field
"PKG",3,22,1,"PAH",1,1,10,0)
 will be done by taking the current date+random(60)+30 days to give a date
"PKG",3,22,1,"PAH",1,1,11,0)
 when the user will need to select a new E-SIG code.
"PKG",3,22,1,"PAH",1,1,12,0)
The option XUSESIG BLOCK is included in this patch.
"PKG",3,22,1,"PAH",1,1,13,0)
  
"PKG",3,22,1,"PAH",1,1,14,0)
KERNEL functions to help developers.
"PKG",3,22,1,"PAH",1,1,15,0)
 
"PKG",3,22,1,"PAH",1,1,16,0)
$$CHKSUM^XUSESIG1($name_value,flag)
"PKG",3,22,1,"PAH",1,1,17,0)
This would take a root ($name_value) and build a checksum for all data in the
"PKG",3,22,1,"PAH",1,1,18,0)
root. (Not used now, flag would be used when there is more that one checksum
"PKG",3,22,1,"PAH",1,1,19,0)
algorithm.)
"PKG",3,22,1,"PAH",1,1,20,0)
 
"PKG",3,22,1,"PAH",1,1,21,0)
$$ESBLOCK^XUSESIG1(ien)
"PKG",3,22,1,"PAH",1,1,22,0)
This extrinsic function would return the set of fields from the new 
"PKG",3,22,1,"PAH",1,1,23,0)
person file that are need as part of the hash for a acceptable E-Sig. 
"PKG",3,22,1,"PAH",1,1,24,0)
If IEN is not passed in then DUZ is used.
"PKG",3,22,1,"PAH",1,1,25,0)
(E-Sig block, E-Sig title, Degree, Current Date/Time)
"PKG",3,22,1,"PAH",1,1,26,0)
 
"PKG",3,22,1,"PAH",1,1,27,0)
$$EN^XUSESIG1(checksum,esblock)
"PKG",3,22,1,"PAH",1,1,28,0)
If the ESBLOCK is not passed then the function would get the ESBLOCK. In 
"PKG",3,22,1,"PAH",1,1,29,0)
either case this extrinsic function would encode the ESBLOCK using the 
"PKG",3,22,1,"PAH",1,1,30,0)
checksum as the KEY.  Return a encoded string.  
"PKG",3,22,1,"PAH",1,1,31,0)

"PKG",3,22,1,"PAH",1,1,32,0)
$$CMP^XUSESIG1(checksum,$name_value)
"PKG",3,22,1,"PAH",1,1,33,0)
The extrinsic function would compare the checksum passed in to the 
"PKG",3,22,1,"PAH",1,1,34,0)
calculated value from the $NAME_VALUE.  Return 1 for match, 0 for no 
"PKG",3,22,1,"PAH",1,1,35,0)
match.
"PKG",3,22,1,"PAH",1,1,36,0)
 
"PKG",3,22,1,"PAH",1,1,37,0)
$$DE^XUSESIG1(checksum,encoded_string)
"PKG",3,22,1,"PAH",1,1,38,0)
This extrinsic function would decode the string using the checksum as 
"PKG",3,22,1,"PAH",1,1,39,0)
the key.  Return a decoded string.
"PKG",3,22,1,"PAH",1,1,40,0)
 
"PKG",3,22,1,"PAH",1,1,41,0)

"PKG",3,22,1,"PAH",1,1,42,0)
Routine      ChkSum      2nd Line
"PKG",3,22,1,"PAH",1,1,43,0)
XUSESIG      5865804   ;;8.0;KERNEL;**14**;Jul 10, 1995
"PKG",3,22,1,"PAH",1,1,44,0)
XUSESIG1      864068   ;;8.0;KERNEL;**14**;Jul 10, 1995
"PKG",3,22,1,"PAH",1,1,45,0)

"PKG",3,22,1,"PAH",1,1,46,0)
========================================================================= 
"PKG",3,22,1,"PAH",1,1,47,0)
Installation:
"PKG",3,22,1,"PAH",1,1,48,0)
 
"PKG",3,22,1,"PAH",1,1,49,0)
  1.  These routines may be mapped on systems that allow mapping,
"PKG",3,22,1,"PAH",1,1,50,0)
      so you will need to disable mapping for the effected routines.
"PKG",3,22,1,"PAH",1,1,51,0)
  2.  Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",3,22,1,"PAH",1,1,52,0)
      option will load the KIDS package onto your system.
"PKG",3,22,1,"PAH",1,1,53,0)
  3.  The patch has now been loaded into a Transport global on your
"PKG",3,22,1,"PAH",1,1,54,0)
      system. You now need to use KIDS to install the Transport global.
"PKG",3,22,1,"PAH",1,1,55,0)
      On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,56,0)
      options:
"PKG",3,22,1,"PAH",1,1,57,0)
         Print Transport Global
"PKG",3,22,1,"PAH",1,1,58,0)
         Compare Transport Global to Current System
"PKG",3,22,1,"PAH",1,1,59,0)
         Verify Checksums in Transport Global
"PKG",3,22,1,"PAH",1,1,60,0)
         Backup a Transport Global
"PKG",3,22,1,"PAH",1,1,61,0)
  4.  Inhibit users from login into the system. (If you install when few
"PKG",3,22,1,"PAH",1,1,62,0)
      user are on the system and the possibility of some CLOBER errors is
"PKG",3,22,1,"PAH",1,1,63,0)
      acceptable then users can stay on the system.)
"PKG",3,22,1,"PAH",1,1,64,0)
  5.  On the KIDS menu, under the 'Installation' menu, use the following
"PKG",3,22,1,"PAH",1,1,65,0)
      options:
"PKG",3,22,1,"PAH",1,1,66,0)
         Install Package(s)  'XU*8.0*14'
"PKG",3,22,1,"PAH",1,1,67,0)
  6.  MSM Sites - Answer YES to the question 'Want to MOVE routines to
"PKG",3,22,1,"PAH",1,1,68,0)
      other CPUs?'. Enter the names of your Compute and Print server(s).
"PKG",3,22,1,"PAH",1,1,69,0)
  7.  AXP Sites, after patch has installed, rebuild your map set.
"PKG",3,22,1,"PAH",1,1,70,0)

"PKG",3,22,1,"PAH",1,1,71,0)
=========================================================================
"PKG",3,22,1,"PAH",1,1,72,0)

"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XUSESIG")
0^1^B9989937
"RTN","XUSESIG",1,0)
XUSESIG ;SF/RWF - ROUTINE TO ENTER OR CHANGE ELECTRONIC SIGNATURE CODE ;10/10/96  09:39
"RTN","XUSESIG",2,0)
 ;;8.0;KERNEL;**14**;Jul 10, 1995
"RTN","XUSESIG",3,0)
A ;Called by others from the top. See DBIC #936
"RTN","XUSESIG",4,0)
 I $D(DUZ)[0 W "NO ACTION CAN BE TAKEN ON YOUR REQUEST     " Q
"RTN","XUSESIG",5,0)
 N DA,DIE,DR,X1,K
"RTN","XUSESIG",6,0)
 S DA=+DUZ S:$D(^VA(200,DA,0))[0 DA=0
"RTN","XUSESIG",7,0)
 I DA'>0 W !,"You don't have an entry in the NEW PERSON file, See your site manager" G OUT
"RTN","XUSESIG",8,0)
 W !,"This option is designed to permit you to enter or change your Initials,"
"RTN","XUSESIG",9,0)
 W !,"Signature Block Information, Office Phone number, and Voice and",!,"Digital Pagers numbers."
"RTN","XUSESIG",10,0)
 W !,"In addition, you are permitted to enter a new Electronic Signature Code"
"RTN","XUSESIG",11,0)
 W !,"or to change an existing code."
"RTN","XUSESIG",12,0)
 W !! S DIE="^VA(200,",DR="1;20.2;20.3;.132;.137;.138" D ^DIE
"RTN","XUSESIG",13,0)
 S X1=$P($G(^VA(200,DA,20)),"^",4) I X1]"" S K=0 D S2 G:X1="" OUT1
"RTN","XUSESIG",14,0)
 S X1=$$NEW() W !,$S(X1:"DONE",1:"  OPTION ABORTED."_$C(7))
"RTN","XUSESIG",15,0)
 G OUT1
"RTN","XUSESIG",16,0)
 ;
"RTN","XUSESIG",17,0)
NEW() ;Enter a NEW E-Sig code, return 0 for fail, 1 if done, 2 skip.
"RTN","XUSESIG",18,0)
 N K,X,X1 S K=0
"RTN","XUSESIG",19,0)
 W !!,"Your typing will not show."
"RTN","XUSESIG",20,0)
N2 W !,"ENTER NEW SIGNATURE CODE: " D R Q:X=""!(X="^") 2
"RTN","XUSESIG",21,0)
 I X'?.UNP!($L(X)>20)!($L(X)<6) W *7,!,"Signature code must be 6 to 20 characters in length",!," With no control or lowercase characters.",! G N2
"RTN","XUSESIG",22,0)
 S X1=X W !,"RE-ENTER SIGNATURE CODE FOR VERIFICATION: " D R G:X=""!(X="^") N5
"RTN","XUSESIG",23,0)
 I X'=X1 W "  CODE NOT VERIFIED, TRY AGAIN.",*7,! S K=K+1 G N5:K>3 G N2
"RTN","XUSESIG",24,0)
 D HASH^XUSHSHP
"RTN","XUSESIG",25,0)
 I X=$P(^VA(200,DA,20),U,4) W *7,!,"You can't use the same one.",! G N2
"RTN","XUSESIG",26,0)
 S $P(^VA(200,DA,20),"^",4)=X
"RTN","XUSESIG",27,0)
 F XUS=0:0 S XUS=$O(^DD(200,20.4,1,XUS)) Q:XUS'>0  X ^(XUS,1)
"RTN","XUSESIG",28,0)
N4 Q 1 ;OK
"RTN","XUSESIG",29,0)
N5 Q 0 ;FAIL
"RTN","XUSESIG",30,0)
 ;
"RTN","XUSESIG",31,0)
R X ^%ZOSF("EOFF") R X:60 X ^%ZOSF("EON") S:'$T X="^" Q
"RTN","XUSESIG",32,0)
 ;
"RTN","XUSESIG",33,0)
OUT W !,"  OPTION ABORTED.",*7
"RTN","XUSESIG",34,0)
OUT1 K %,D,D0,DA,DIC,DIE,DQ,DR,X,X1,A,K,I,Z Q
"RTN","XUSESIG",35,0)
 ;
"RTN","XUSESIG",36,0)
SIG ;Call with DUZ; Return X1="" if fail else hashed ESC.
"RTN","XUSESIG",37,0)
 N X2,K
"RTN","XUSESIG",38,0)
 S X2=$G(^VA(200,+$G(DUZ),20)),X1=$P(X2,U,4) I X1="" W !,"No Electronic Signature code to check." Q
"RTN","XUSESIG",39,0)
 S K=0 D S2 Q:X1=""
"RTN","XUSESIG",40,0)
 S X2=+X2 I X2>0,(X2+90)'>(+$H) D  I X1="" W !,*7,"Verification with held untill new code entered.",!
"RTN","XUSESIG",41,0)
 . W !!,"Your Electronic Signature Code has expired, you need to create a new one."
"RTN","XUSESIG",42,0)
 . N DA S DA=DUZ S:$$NEW()'=1 X1=""
"RTN","XUSESIG",43,0)
 . Q
"RTN","XUSESIG",44,0)
 Q
"RTN","XUSESIG",45,0)
 ;
"RTN","XUSESIG",46,0)
S2 W !!,"Enter your Current Signature Code: " D R G:X=""!(X="^") S9
"RTN","XUSESIG",47,0)
 I X?1.2"?" W !,"Enter your current Electronic Signature Code so it can be verified.",! G S2
"RTN","XUSESIG",48,0)
 S K=K+1 D HASH^XUSHSHP I X1'=X W "  ??",*7 S X="" G S2:K<3,S9
"RTN","XUSESIG",49,0)
 W "   SIGNATURE VERIFIED"
"RTN","XUSESIG",50,0)
S9 S:X=""!(X="^") X1=""
"RTN","XUSESIG",51,0)
 Q
"RTN","XUSESIG",52,0)
TEXT ;;
"RTN","XUSESIG",53,0)
CLEAR ;Clear (delete) a users ESC to allow entering a new one.
"RTN","XUSESIG",54,0)
 S DIC=200,DIC(0)="AEMQ" D ^DIC G OUT:Y'>0 S DA=+Y,DIR(0)="Y"
"RTN","XUSESIG",55,0)
 W !,"Clear SIGNATURE CODE from user ",$P(Y,U,2) D ^DIR G OUT1:Y'=1
"RTN","XUSESIG",56,0)
 S DIE=DIC,DR="20.4///@" D ^DIE G OUT1
"RTN","XUSESIG",57,0)
 Q
"RTN","XUSESIG",58,0)
 ;;
"RTN","XUSESIG1")
0^2^B1595900
"RTN","XUSESIG1",1,0)
XUSESIG1 ;SF/RWF - More E-Sig functions. ;10/10/96  09:42
"RTN","XUSESIG1",2,0)
 ;;8.0;KERNEL;**14**;Jul 10, 1995
"RTN","XUSESIG1",3,0)
 W !,"NO ENTRY FROM THE TOP." Q
"RTN","XUSESIG1",4,0)
 ;
"RTN","XUSESIG1",5,0)
ESBLOCK(IEN) ;EF. Return the E-SIG block data.
"RTN","XUSESIG1",6,0)
 N X S:'$D(IEN) IEN=DUZ
"RTN","XUSESIG1",7,0)
 S X=$G(^VA(200,IEN,20)) Q:$P(X,U,2)="" ""
"RTN","XUSESIG1",8,0)
 Q $P(X,U,2)_U_$P($G(^VA(200,IEN,3.1)),U,6)_U_$P(X,U,3)_U_$$NOW^XLFDT()
"RTN","XUSESIG1",9,0)
 ;
"RTN","XUSESIG1",10,0)
CHKSUM(ROOT,FLAG) ;EF. Retuern a CHECKSUM of a sub-tree.
"RTN","XUSESIG1",11,0)
 ;ROOT is a $NA value, FLAG un-used at this time.
"RTN","XUSESIG1",12,0)
 N SUM,IX,IX2,XU1,Y
"RTN","XUSESIG1",13,0)
 Q:$D(@ROOT)=0 0
"RTN","XUSESIG1",14,0)
A ;Type A
"RTN","XUSESIG1",15,0)
 S SUM=0,IX=0,XU1=ROOT,ROOT=$E(ROOT,1,$L(ROOT)-1)
"RTN","XUSESIG1",16,0)
 F  S Y=$G(@XU1) D  S XU1=$Q(@XU1) Q:XU1'[ROOT
"RTN","XUSESIG1",17,0)
 . F IX2=1:1:$L(Y) S IX=IX+1,SUM=($A(Y,IX2)-31*IX)+SUM
"RTN","XUSESIG1",18,0)
 Q SUM_"A"
"RTN","XUSESIG1",19,0)
EN(CHKSUM,ESBLK) ;EF. Return encoded ESBLOCK.
"RTN","XUSESIG1",20,0)
 ;Get the ESBLOCK first.
"RTN","XUSESIG1",21,0)
 N X,X1,X2 I '$D(ESBLK) S ESBLK=$$ESBLOCK()
"RTN","XUSESIG1",22,0)
 S X=ESBLK,X1=+CHKSUM,X2=1 D EN^XUSHSHP
"RTN","XUSESIG1",23,0)
 Q X
"RTN","XUSESIG1",24,0)
DE(CHKSUM,ESBLK) ;EF. Return decoded ESBLOCK
"RTN","XUSESIG1",25,0)
 N X,X1,X2
"RTN","XUSESIG1",26,0)
 S X=ESBLK,X1=+CHKSUM,X2=1 D DE^XUSHSHP
"RTN","XUSESIG1",27,0)
 Q X
"RTN","XUSESIG1",28,0)
CMP(CHKSUM,ROOT) ;EF. Compair. Return 1 for match, 0 no match.
"RTN","XUSESIG1",29,0)
 ;ROOT is a $NA value.
"RTN","XUSESIG1",30,0)
 N FLAG,NEWSUM
"RTN","XUSESIG1",31,0)
 S FLAG=$E(CHKSUM,$L(CHKSUM)),NEWSUM=$$CHKSUM(ROOT,FLAG)
"RTN","XUSESIG1",32,0)
 Q NEWSUM=CHKSUM
"VER")
8.0^21.0
"^DD",200,200,10.6,0)
DEGREE^F^^3.1;6^K:$L(X)>10!($L(X)<1) X
"^DD",200,200,10.6,3)
Answer must be 1-10 characters in length.
"^DD",200,200,10.6,21,0)
^^3^3^2960626^
"^DD",200,200,10.6,21,1,0)
This field holds any academic or professional degree that have been earned
"^DD",200,200,10.6,21,2,0)
by the user.
"^DD",200,200,10.6,21,3,0)
This would be things like BS, BA, MD, Phd.
"^DD",200,200,10.6,"DT")
2960626
"^DD",200,200,20.1,0)
DATE E-SIG LAST CHANGED^FO^^20;1^K:$L(X)>6!($L(X)<5)!'(X?5.6N) X
"^DD",200,200,20.1,2)
S Y(0)=Y S %H=+Y D YMD^%DTC S Y=X X ^DD("DD")
"^DD",200,200,20.1,2.1)
S %H=+Y D YMD^%DTC S Y=X X ^DD("DD")
"^DD",200,200,20.1,3)
Answer must be 5-6 characters in length.
"^DD",200,200,20.1,5,1,0)
200^20.4^2
"^DD",200,200,20.1,21,0)
^^2^2^2951002^^
"^DD",200,200,20.1,21,1,0)
A $H date of the last time the E-Sig code was changed. Triggered by a
"^DD",200,200,20.1,21,2,0)
X-ref on the ELECTRONIC SIGNATURE CODE field.
"^DD",200,200,20.1,"DT")
2951002
"^DD",200,200,20.2,0)
SIGNATURE BLOCK PRINTED NAME^FX^^20;2^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>30!($L(X)<2)!($$UP^XLFSTR(X)'[$P(^VA(200,DA,0),",")) X
"^DD",200,200,20.2,1,0)
^.1
"^DD",200,200,20.2,1,1,0)
200^ACX20^MUMPS
"^DD",200,200,20.2,1,1,1)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",2)=X
"^DD",200,200,20.2,1,1,2)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",2)=""
"^DD",200,200,20.2,1,1,3)
Used to keep 3-16-200 in sync.
"^DD",200,200,20.2,3)
Enter your name as you want it to appear on official documents
"^DD",200,200,20.2,9)
^
"^DD",200,200,20.2,21,0)
^^5^5^2951002^
"^DD",200,200,20.2,21,1,0)
The name entered must contain the surname of the user.
"^DD",200,200,20.2,21,2,0)
 
"^DD",200,200,20.2,21,3,0)
This field can then contain the name of the user as they wish it to
"^DD",200,200,20.2,21,4,0)
be displayed with the notation that they signed the document electronically.
"^DD",200,200,20.2,21,5,0)
For example:  John R. Doe, M.D.   or    Fred A. Sample, RN.
"^DD",200,200,20.2,"DT")
2920701
"^DD",200,200,20.3,0)
SIGNATURE BLOCK TITLE^F^^20;3^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>50!($L(X)<2) X
"^DD",200,200,20.3,1,0)
^.1
"^DD",200,200,20.3,1,1,0)
200^ACX21^MUMPS
"^DD",200,200,20.3,1,1,1)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",3)=X
"^DD",200,200,20.3,1,1,2)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",3)=""
"^DD",200,200,20.3,1,1,3)
Used to keep 3-16-200 in sync.
"^DD",200,200,20.3,3)
Enter your title, e.g., Chief of Surgery.
"^DD",200,200,20.3,21,0)
^^5^5^2920701^^
"^DD",200,200,20.3,21,1,0)
This field should contain the title of the person who is electronically
"^DD",200,200,20.3,21,2,0)
signing a document.  Examples of titles are Chief of Surgery, Dietician,
"^DD",200,200,20.3,21,3,0)
Clinical Pharmacist, etc.  This title will print next to the name of the
"^DD",200,200,20.3,21,4,0)
person who signs the document.  The person's name will be taken from the
"^DD",200,200,20.3,21,5,0)
SIGNATURE BLOCK PRINTED NAME field.
"^DD",200,200,20.3,"DT")
2920701
"^DD",200,200,20.4,0)
ELECTRONIC SIGNATURE CODE^FOX^^20;4^K:$L(X)>20!($L(X)<6) X I $D(X) D HASH^XUSHSHP
"^DD",200,200,20.4,1,0)
^.1
"^DD",200,200,20.4,1,1,0)
200^ACX23^MUMPS
"^DD",200,200,20.4,1,1,1)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",4)=X
"^DD",200,200,20.4,1,1,2)
S X1=$S($D(^DIC(3,DA,0))#2:$P(^(0),"^",16),1:"") I X1>0 S $P(^DIC(16,X1,20),"^",4)=""
"^DD",200,200,20.4,1,1,3)
Used to keep 3-16-200 in sync.
"^DD",200,200,20.4,1,2,0)
^^TRIGGER^200^20.1
"^DD",200,200,20.4,1,2,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^VA(200,D0,20)):^(20),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X=DIV S X=+$H X ^DD(200,20.4,1,2,1.4)
"^DD",200,200,20.4,1,2,1.4)
S DIH=$S($D(^VA(200,DIV(0),20)):^(20),1:""),DIV=X S $P(^(20),U,1)=DIV,DIH=200,DIG=20.1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",200,200,20.4,1,2,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^VA(200,D0,20)):^(20),1:"") S X=$P(Y(1),U,1),X=X S DIU=X K Y S X="" X ^DD(200,20.4,1,2,2.4)
"^DD",200,200,20.4,1,2,2.4)
S DIH=$S($D(^VA(200,DIV(0),20)):^(20),1:""),DIV=X S $P(^(20),U,1)=DIV,DIH=200,DIG=20.1 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",200,200,20.4,1,2,3)
Required to meet needs.
"^DD",200,200,20.4,1,2,"%D",0)
^^2^2^2960705^
"^DD",200,200,20.4,1,2,"%D",1,0)
This X-ref sets the DATE E-SIG LAST CHANGED so we can expire the E-sig
"^DD",200,200,20.4,1,2,"%D",2,0)
after the VERIFY code lifetime days as the G.C. asked us to do.
"^DD",200,200,20.4,1,2,"CREATE VALUE")
S X=+$H
"^DD",200,200,20.4,1,2,"DELETE VALUE")
@
"^DD",200,200,20.4,1,2,"DT")
2960705
"^DD",200,200,20.4,1,2,"FIELD")
#20.1
"^DD",200,200,20.4,2)
S Y(0)=Y S Y="<Hidden>"
"^DD",200,200,20.4,2.1)
S Y="<Hidden>"
"^DD",200,200,20.4,3)
Enter your code (6-20 chars); it won't display!
"^DD",200,200,20.4,21,0)
^^4^4^2920706^^
"^DD",200,200,20.4,21,1,0)
This field contains the encrypted code which the user types when
"^DD",200,200,20.4,21,2,0)
signing documents electronically.  The user's input will be compared to
"^DD",200,200,20.4,21,3,0)
this field when validating his electronic signature.
"^DD",200,200,20.4,21,4,0)
All electronic signature codes should be treated as confidential.
"^DD",200,200,20.4,"DT")
2960705
**END**
**END**
