Released MPIF*1*22 SEQ #23
Extracted from mail message
**KIDS**:MPIF*1.0*22^

**INSTALL NAME**
MPIF*1.0*22
"BLD",1544,0)
MPIF*1.0*22^MASTER PATIENT INDEX VISTA^0^3020924^y
"BLD",1544,1,0)
^^3^3^3020923^
"BLD",1544,1,1,0)
NEW MESSSAGE STRUCTURE - PHASE 1
"BLD",1544,1,2,0)
Refer to patch MPIF*1*22 in the FORUM Patch Module for a complete
"BLD",1544,1,3,0)
description.
"BLD",1544,4,0)
^9.64PA^^
"BLD",1544,"ABNS",0)
^9.66A^^
"BLD",1544,"ABPKG")
n^n^
"BLD",1544,"KRN",0)
^9.67PA^8989.52^19
"BLD",1544,"KRN",.4,0)
.4
"BLD",1544,"KRN",.4,"NM",0)
^9.68A^^
"BLD",1544,"KRN",.401,0)
.401
"BLD",1544,"KRN",.402,0)
.402
"BLD",1544,"KRN",.403,0)
.403
"BLD",1544,"KRN",.5,0)
.5
"BLD",1544,"KRN",.84,0)
.84
"BLD",1544,"KRN",3.6,0)
3.6
"BLD",1544,"KRN",3.8,0)
3.8
"BLD",1544,"KRN",9.2,0)
9.2
"BLD",1544,"KRN",9.8,0)
9.8
"BLD",1544,"KRN",9.8,"NM",0)
^9.68A^11^10
"BLD",1544,"KRN",9.8,"NM",1,0)
MPIFA28^^0^B4176969
"BLD",1544,"KRN",9.8,"NM",2,0)
MPIFA31B^^0^B5406045
"BLD",1544,"KRN",9.8,"NM",3,0)
MPIFEDIT^^0^B30244889
"BLD",1544,"KRN",9.8,"NM",4,0)
MPIFSEED^^0^B11007649
"BLD",1544,"KRN",9.8,"NM",6,0)
MPIFA40^^0^B9041640
"BLD",1544,"KRN",9.8,"NM",7,0)
MPIFA24^^0^B12302577
"BLD",1544,"KRN",9.8,"NM",8,0)
MPIFA37^^0^B10401779
"BLD",1544,"KRN",9.8,"NM",9,0)
MPIFA43^^0^B14568215
"BLD",1544,"KRN",9.8,"NM",10,0)
MPIFA24B^^0^B6022589
"BLD",1544,"KRN",9.8,"NM",11,0)
MPIFACHK^^0^B7038643
"BLD",1544,"KRN",9.8,"NM","B","MPIFA24",7)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA24B",10)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA28",1)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA31B",2)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA37",8)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA40",6)

"BLD",1544,"KRN",9.8,"NM","B","MPIFA43",9)

"BLD",1544,"KRN",9.8,"NM","B","MPIFACHK",11)

"BLD",1544,"KRN",9.8,"NM","B","MPIFEDIT",3)

"BLD",1544,"KRN",9.8,"NM","B","MPIFSEED",4)

"BLD",1544,"KRN",19,0)
19
"BLD",1544,"KRN",19.1,0)
19.1
"BLD",1544,"KRN",101,0)
101
"BLD",1544,"KRN",101,"NM",0)
^9.68A^14^12
"BLD",1544,"KRN",101,"NM",1,0)
MPIF ADT-A28 CLIENT^^0
"BLD",1544,"KRN",101,"NM",2,0)
MPIF ADT-A28 SERVER^^0
"BLD",1544,"KRN",101,"NM",3,0)
MPIF ADT-A24 CLIENT^^0
"BLD",1544,"KRN",101,"NM",4,0)
MPIF ADT-A24 SERVER^^0
"BLD",1544,"KRN",101,"NM",5,0)
MPIF ADT-A37 CLIENT^^0
"BLD",1544,"KRN",101,"NM",6,0)
MPIF ADT-A37 SERVER^^0
"BLD",1544,"KRN",101,"NM",7,0)
MPIF ADT-A43 CLIENT^^0
"BLD",1544,"KRN",101,"NM",8,0)
MPIF ADT-A43 SERVER^^0
"BLD",1544,"KRN",101,"NM",9,0)
MPIF ADT-A31 SERVER^^0
"BLD",1544,"KRN",101,"NM",10,0)
MPIF ADT-A31 CLIENT^^0
"BLD",1544,"KRN",101,"NM",13,0)
MPIF ADT-A40 CLIENT^^0
"BLD",1544,"KRN",101,"NM",14,0)
MPIF ADT-A40 SERVER^^0
"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A24 CLIENT",3)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A24 SERVER",4)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A28 CLIENT",1)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A28 SERVER",2)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A31 CLIENT",10)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A31 SERVER",9)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A37 CLIENT",5)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A37 SERVER",6)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A40 CLIENT",13)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A40 SERVER",14)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A43 CLIENT",7)

"BLD",1544,"KRN",101,"NM","B","MPIF ADT-A43 SERVER",8)

"BLD",1544,"KRN",409.61,0)
409.61
"BLD",1544,"KRN",771,0)
771
"BLD",1544,"KRN",771,"NM",0)
^9.68A^2^1
"BLD",1544,"KRN",771,"NM",2,0)
MPIF TRIGGER^^0
"BLD",1544,"KRN",771,"NM","B","MPIF TRIGGER",2)

"BLD",1544,"KRN",870,0)
870
"BLD",1544,"KRN",8989.51,0)
8989.51
"BLD",1544,"KRN",8989.52,0)
8989.52
"BLD",1544,"KRN",8994,0)
8994
"BLD",1544,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",1544,"KRN",8994,"NM",1,0)
MPIF ACK CHECK^^0
"BLD",1544,"KRN",8994,"NM","B","MPIF ACK CHECK",1)

"BLD",1544,"KRN","B",.4,.4)

"BLD",1544,"KRN","B",.401,.401)

"BLD",1544,"KRN","B",.402,.402)

"BLD",1544,"KRN","B",.403,.403)

"BLD",1544,"KRN","B",.5,.5)

"BLD",1544,"KRN","B",.84,.84)

"BLD",1544,"KRN","B",3.6,3.6)

"BLD",1544,"KRN","B",3.8,3.8)

"BLD",1544,"KRN","B",9.2,9.2)

"BLD",1544,"KRN","B",9.8,9.8)

"BLD",1544,"KRN","B",19,19)

"BLD",1544,"KRN","B",19.1,19.1)

"BLD",1544,"KRN","B",101,101)

"BLD",1544,"KRN","B",409.61,409.61)

"BLD",1544,"KRN","B",771,771)

"BLD",1544,"KRN","B",870,870)

"BLD",1544,"KRN","B",8989.51,8989.51)

"BLD",1544,"KRN","B",8989.52,8989.52)

"BLD",1544,"KRN","B",8994,8994)

"BLD",1544,"QUES",0)
^9.62^^
"BLD",1544,"REQB",0)
^9.611^2^2
"BLD",1544,"REQB",1,0)
DG*5.3*428^2
"BLD",1544,"REQB",2,0)
MPIF*1.0*11^2
"BLD",1544,"REQB","B","DG*5.3*428",1)

"BLD",1544,"REQB","B","MPIF*1.0*11",2)

"KRN",101,1852,-1)
0^8
"KRN",101,1852,0)
MPIF ADT-A43 SERVER^MPI/PD ADT-A43 2.4 Server Protocol^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1852,1,0)
^^2^2^3020606^
"KRN",101,1852,1,1,0)
This HL7 message protocol will be used to correct a mismatched or 
"KRN",101,1852,1,2,0)
incorrect ICN identifier.
"KRN",101,1852,99)
59008,58961
"KRN",101,1852,770)
MPIF TRIGGER^^ADT^A43^^^^AL^AL^2.4^
"KRN",101,1852,772)
Q
"KRN",101,1852,775,0)
^101.0775PA^1^1
"KRN",101,1852,775,1,0)
1853
"KRN",101,1852,775,1,"^")
MPIF ADT-A43 CLIENT
"KRN",101,1853,-1)
0^7
"KRN",101,1853,0)
MPIF ADT-A43 CLIENT^MPI/PD ADT-A43 2.4 Client Protocol^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1853,1,0)
^^3^3^3020606^
"KRN",101,1853,1,1,0)
This is the HL7 message client protocol that will process the ADT-A43 
"KRN",101,1853,1,2,0)
Move Patient Identifier.  This protocol will be used to correct erroneous 
"KRN",101,1853,1,3,0)
or incorrectly identified ICN assignments.
"KRN",101,1853,99)
59008,58980
"KRN",101,1853,770)
^MPIF TRIGGER^^A43^^^^^^^ACK
"KRN",101,1853,771)
D IN^MPIFA43
"KRN",101,1853,773)
1^1
"KRN",101,1853,774)
D ROUTE^MPIFA43
"KRN",101,1865,-1)
0^9
"KRN",101,1865,0)
MPIF ADT-A31 SERVER^ADT-A31 SERVER^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1865,1,0)
^^3^3^3020724^
"KRN",101,1865,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A31 (update 
"KRN",101,1865,1,2,0)
patient information) message from VistA to the MPI.  The event will result
"KRN",101,1865,1,3,0)
in the updating of patient data on the MPI for that ICN.
"KRN",101,1865,99)
58843,33653
"KRN",101,1865,770)
MPIF TRIGGER^^ADT^A31^^^^AL^AL^2.4^
"KRN",101,1865,772)
D RES^MPIFA31B
"KRN",101,1865,775,0)
^101.0775PA^1^1
"KRN",101,1865,775,1,0)
1866
"KRN",101,1865,775,1,"^")
MPIF ADT-A31 CLIENT
"KRN",101,1866,-1)
0^10
"KRN",101,1866,0)
MPIF ADT-A31 CLIENT^ADT-A31 CLIENT^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1866,1,0)
^101.06^3^3^3020724^^
"KRN",101,1866,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A31 (update 
"KRN",101,1866,1,2,0)
patient information) message from VistA to the MPI.  The event will result
"KRN",101,1866,1,3,0)
in the updating of patient data on the MPI for that ICN.
"KRN",101,1866,99)
59009,36892
"KRN",101,1866,770)
^MPIF TRIGGER^^A31^^^^^^^ACK
"KRN",101,1866,771)
Q
"KRN",101,1866,773)
1^1
"KRN",101,1866,774)
Q
"KRN",101,1870,-1)
0^1
"KRN",101,1870,0)
MPIF ADT-A28 CLIENT^ADT-A28 CLIENT^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1870,1,0)
^^5^5^3020724^
"KRN",101,1870,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A28 (create new patient)
"KRN",101,1870,1,2,0)
message from VistA to the MPI.  The event will result in the addition of
"KRN",101,1870,1,3,0)
a new patient in the MPIVET file on the MPI, unless an exact match is 
"KRN",101,1870,1,4,0)
found.  The corresponding associated/treating facility for an ICN
"KRN",101,1870,1,5,0)
will also be created.
"KRN",101,1870,99)
58867,30371
"KRN",101,1870,770)
^MPIF TRIGGER^^A28^^^^^^^ACK
"KRN",101,1870,771)
Q
"KRN",101,1870,773)
1^1
"KRN",101,1870,774)
Q
"KRN",101,1871,-1)
0^2
"KRN",101,1871,0)
MPIF ADT-A28 SERVER^ADT-A28 SERVER^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1871,1,0)
^^5^5^3020724^
"KRN",101,1871,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A28 (create new 
"KRN",101,1871,1,2,0)
patient) message from VistA to the MPI.  The event will result in the
"KRN",101,1871,1,3,0)
addition of a new patient in the MPIVET file on the MPI, unless an exact
"KRN",101,1871,1,4,0)
match is found.  The corresponding associated/treating facility for an
"KRN",101,1871,1,5,0)
ICN will also be created.
"KRN",101,1871,99)
58867,30499
"KRN",101,1871,770)
MPIF TRIGGER^^ADT^A28^^^^AL^AL^2.4^
"KRN",101,1871,772)
D RES^MPIFA28
"KRN",101,1871,775,0)
^101.0775PA^1^1
"KRN",101,1871,775,1,0)
1870
"KRN",101,1871,775,1,"^")
MPIF ADT-A28 CLIENT
"KRN",101,1876,-1)
0^3
"KRN",101,1876,0)
MPIF ADT-A24 CLIENT^ADT-A24 CLIENT^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1876,1,0)
^^5^5^3020724^
"KRN",101,1876,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A24 (link 
"KRN",101,1876,1,2,0)
patient information) message from VistA to the MPI.  The event will 
"KRN",101,1876,1,3,0)
result in the addition of the associated/treating facility for an ICN
"KRN",101,1876,1,4,0)
OR the update of the data associated with the associated/treating 
"KRN",101,1876,1,5,0)
facility.
"KRN",101,1876,99)
58881,39317
"KRN",101,1876,770)
^MPIF TRIGGER^^A24^^^^^^^ACK
"KRN",101,1876,771)
D A24^MPIFA24
"KRN",101,1876,773)
1^1
"KRN",101,1876,774)
D RT^MPIFA24B
"KRN",101,1877,-1)
0^4
"KRN",101,1877,0)
MPIF ADT-A24 SERVER^ADT-A24 SERVER^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1877,1,0)
^^5^5^3020724^
"KRN",101,1877,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A24 (link 
"KRN",101,1877,1,2,0)
patient information) message from VistA to the MPI.  The event will 
"KRN",101,1877,1,3,0)
result in the addition of the associated/treating facility for an ICN
"KRN",101,1877,1,4,0)
OR the update of the data associated with the associated/treating 
"KRN",101,1877,1,5,0)
facility.
"KRN",101,1877,99)
59009,36672
"KRN",101,1877,770)
MPIF TRIGGER^^ADT^A24^^^^AL^AL^2.4^
"KRN",101,1877,772)
D RES^MPIFA24B
"KRN",101,1877,775,0)
^101.0775PA^1^1
"KRN",101,1877,775,1,0)
1876
"KRN",101,1877,775,1,"^")
MPIF ADT-A24 CLIENT
"KRN",101,1878,-1)
0^14
"KRN",101,1878,0)
MPIF ADT-A40 SERVER^ADT-A40 SERVER^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1878,1,0)
^^3^3^3020724^
"KRN",101,1878,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A40 (merging patient 
"KRN",101,1878,1,2,0)
information) message from VistA to the MPI.  The event will result in the 
"KRN",101,1878,1,3,0)
merging of ICN 2 into ICN1.
"KRN",101,1878,99)
58888,35674
"KRN",101,1878,770)
MPIF TRIGGER^^ADT^A40^^^^AL^AL^2.4^
"KRN",101,1878,772)
D RES^MPIFA40
"KRN",101,1878,775,0)
^101.0775PA^1^1
"KRN",101,1878,775,1,0)
1879
"KRN",101,1878,775,1,"^")
MPIF ADT-A40 CLIENT
"KRN",101,1879,-1)
0^13
"KRN",101,1879,0)
MPIF ADT-A40 CLIENT^ADT-A40 CLIENT^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1879,1,0)
^^3^3^3020724^
"KRN",101,1879,1,1,0)
This protocol is used to send an HL7 v2.4 ADT-A40 (merging 
"KRN",101,1879,1,2,0)
patient information) message from VistA to the MPI.  The event will result
"KRN",101,1879,1,3,0)
in the merging of ICN 2 into ICN 1.
"KRN",101,1879,99)
58888,35756
"KRN",101,1879,770)
^MPIF TRIGGER^^A40^^^^^^^ACK
"KRN",101,1879,771)
Q
"KRN",101,1879,773)
1^1
"KRN",101,1879,774)
Q
"KRN",101,1922,-1)
0^6
"KRN",101,1922,0)
MPIF ADT-A37 SERVER^MPI/PD ADT-A37 2.4 Server Protocol^^E^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1922,1,0)
^^2^2^3020606^
"KRN",101,1922,1,1,0)
This HL7 message server protocol will be used to unlink sites from the 
"KRN",101,1922,1,2,0)
patient Treating Facility list.
"KRN",101,1922,99)
59008,58925
"KRN",101,1922,770)
MPIF TRIGGER^^ADT^A37^^^^AL^AL^2.4^
"KRN",101,1922,772)
D RESP^MPIFA37
"KRN",101,1922,775,0)
^101.0775PA^1^1
"KRN",101,1922,775,1,0)
1923
"KRN",101,1922,775,1,"^")
MPIF ADT-A37 CLIENT
"KRN",101,1923,-1)
0^5
"KRN",101,1923,0)
MPIF ADT-A37 CLIENT^MPI/PD ADT-A37 2.4 Client Protocol^^S^^^^^^^^MASTER PATIENT INDEX VISTA
"KRN",101,1923,1,0)
^101.06^4^4^3020724^^
"KRN",101,1923,1,1,0)
This HL7 client protocol is used to send an HL7 v2.4 ADT-A37 (unlink 
"KRN",101,1923,1,2,0)
patient information) message from VistA to the MPI.  The event will 
"KRN",101,1923,1,3,0)
result in the removal of a patient from the associated/treating
"KRN",101,1923,1,4,0)
facility list for an ICN.
"KRN",101,1923,99)
59008,58883
"KRN",101,1923,770)
^MPIF TRIGGER^^A37^^^^^^^ACK
"KRN",101,1923,771)
D IN^MPIFA37
"KRN",101,1923,773)
1^1
"KRN",101,1923,774)
D ROUTE^MPIFA37
"KRN",771,67,-1)
0^2
"KRN",771,67,0)
MPIF TRIGGER^a
"KRN",8994,154,-1)
0^1
"KRN",8994,154,0)
MPIF ACK CHECK^EN^MPIFACHK^1^^^^^1
"KRN",8994,154,1,0)
^8994.01^5^5^3020712^^
"KRN",8994,154,1,1,0)
This RPC will check to see if there are any messages on the sites before 
"KRN",8994,154,1,2,0)
date BEFORE that haven't received the application level ack back.  If so, 
"KRN",8994,154,1,3,0)
regenerate that message to the MPI.  
"KRN",8994,154,1,4,0)
 
"KRN",8994,154,1,5,0)
If a message is generated 1 will be returned, otherwise 0.
"KRN",8994,154,2,0)
^8994.02A^1^1
"KRN",8994,154,2,1,0)
BEFORE^1^7^1^2
"KRN",8994,154,2,1,1,0)
^8994.021^1^1^3020712^^
"KRN",8994,154,2,1,1,1,0)
The FM date that the message should be sent BEFORE.
"KRN",8994,154,2,"B","BEFORE",1)

"KRN",8994,154,2,"PARAMSEQ",2,1)

"KRN",8994,154,3,0)
^8994.03^2^2^3020712^^
"KRN",8994,154,3,1,0)
0 if no messages needed to be regenerated.
"KRN",8994,154,3,2,0)
1 if any messages were regenerated.
"MBREQ")
0
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
22^3020924
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3020924
"PKG",282,22,1,"PAH",1,1,1,0)
NEW MESSSAGE STRUCTURE - PHASE 1
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1*22 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","MPIFA24")
0^7^B12302577
"RTN","MPIFA24",1,0)
MPIFA24 ;BPOFO/CMC-A24 PROCESSING ROUTINE ;18 Mar 02
"RTN","MPIFA24",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA24",3,0)
 ;
"RTN","MPIFA24",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24",7,0)
 ;  ^DPT("AICN" - #2070
"RTN","MPIFA24",8,0)
 ;  DELETETF^VAFCTFU, FILE^VAFCTFU - #2988
"RTN","MPIFA24",9,0)
 ;
"RTN","MPIFA24",10,0)
 ;PROCESS A24 RESULTING FROM A28 ADD TO MPI MESSAGE OR FROM A40 MERGE
"RTN","MPIFA24",11,0)
A24 ;
"RTN","MPIFA24",12,0)
 N MPII,MPIJ,ARRY,SEG,CNT,ERR,SITE,MSG,DFN,IEN,LIST
"RTN","MPIFA24",13,0)
 S (CNT,ERR,FIRST)=1
"RTN","MPIFA24",14,0)
 F MPII=1:1 X HLNEXT Q:HLQUIT'>0  S MSG=HLNODE D
"RTN","MPIFA24",15,0)
 .S MPIJ=0 F  S MPIJ=$O(HLNODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=HLNODE(MPIJ)
"RTN","MPIFA24",16,0)
 .S SEG=$E(HLNODE,1,3)
"RTN","MPIFA24",17,0)
 .I SEG="MSH" D MSH(.ARRY,.MSG) Q
"RTN","MPIFA24",18,0)
 .I SEG="EVN" D EVN(.ARRY,.MSG) Q
"RTN","MPIFA24",19,0)
 .I SEG="PID" D PID(.ARRY,.MSG,FIRST) S FIRST=2 Q
"RTN","MPIFA24",20,0)
 .I SEG="PD1" D PD1(.ARRY,.MSG) Q
"RTN","MPIFA24",21,0)
 ;
"RTN","MPIFA24",22,0)
 ;UPDATE 991.01, 991.02, 991.03
"RTN","MPIFA24",23,0)
 I $G(ARRY("ICN",2))'="" S DFN=$$GETDFN^MPIF001(ARRY("ICN",2))
"RTN","MPIFA24",24,0)
 I $G(ARRY("ICN",2))=""!(+$G(DFN)'>0) D
"RTN","MPIFA24",25,0)
 . I $G(ARRY("DFN",2))'="" S DFN=ARRY("DFN",2)
"RTN","MPIFA24",26,0)
 . I $G(ARRY("DFN",2))="" S DFN=ARRY("DFN",1)
"RTN","MPIFA24",27,0)
 S ARRY(991.03)=$$LKUP^XUAF4(ARRY(991.03))
"RTN","MPIFA24",28,0)
 I +$G(DFN)'>0 S ERR="Unknown Identifier(s) ICN#"_$G(ARRY("ICN",2))_" and DFN#"_$G(ARRY("DFN",2))
"RTN","MPIFA24",29,0)
 I +$G(DFN)>0 S ERR=$$UPDATE^MPIFAPI(DFN,"ARRY",0) D
"RTN","MPIFA24",30,0)
 .;remove ALL Treating Facilities except your sites and add the CMOR
"RTN","MPIFA24",31,0)
 .D TFL^VAFCTFU1(.LIST,DFN) I $O(LIST(0)) D
"RTN","MPIFA24",32,0)
 .. N LOC,MPINODE,LOCIEN,CMOR,MPIFX
"RTN","MPIFA24",33,0)
 .. S (CMOR,MPIFX)=0 F  S MPIFX=$O(LIST(MPIFX)) Q:'MPIFX  I $P(LIST(MPIFX),"^",5)="VAMC" D
"RTN","MPIFA24",34,0)
 ... ;get MPI node
"RTN","MPIFA24",35,0)
 ... S MPINODE=$$MPINODE^MPIFAPI(DFN),LOC=$P(LIST(MPIFX),"^"),LOCIEN=$$IEN^XUAF4(LOC)
"RTN","MPIFA24",36,0)
 ... I LOC=$P($$SITE^VASITE,"^",3) Q  ;do not delete own site
"RTN","MPIFA24",37,0)
 ... I LOCIEN=$P(MPINODE,"^",3) S CMOR=LOCIEN Q  ;do not delete CMOR site
"RTN","MPIFA24",38,0)
 ... D DELETETF^VAFCTFU($P(MPINODE,"^",1),LOCIEN)
"RTN","MPIFA24",39,0)
 .. ;add CMOR site to TF list if it did not already exist
"RTN","MPIFA24",40,0)
 .. I CMOR'=0 D FILE^VAFCTFU(DFN,CMOR,1)
"RTN","MPIFA24",41,0)
 ;
"RTN","MPIFA24",42,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$S(+$G(ERR)'>0:$P(ERR,"^",2),1:"")
"RTN","MPIFA24",43,0)
 S $P(HLA("HLA",1),HL("FS"),7)="ICN="_ARRY("ICN",1)
"RTN","MPIFA24",44,0)
 D LINK^HLUTIL3(ARRY("SITE"),.LINK) S IEN=$O(LINK(0)),HLL("LINKS",1)="^"_LINK(IEN)
"RTN","MPIFA24",45,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.HLRESLTA,"",.HL)
"RTN","MPIFA24",46,0)
 K LINK
"RTN","MPIFA24",47,0)
 Q
"RTN","MPIFA24",48,0)
 ;
"RTN","MPIFA24",49,0)
MSH(ARY,MSG) ;processing MSH fields
"RTN","MPIFA24",50,0)
 N COMP
"RTN","MPIFA24",51,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",52,0)
 S ARY("SITE")=$$LKUP^XUAF4($P($P(MSG,HL("FS"),4),COMP))
"RTN","MPIFA24",53,0)
 Q
"RTN","MPIFA24",54,0)
 ;
"RTN","MPIFA24",55,0)
EVN(ARY,MSG) ;processing EVN fields
"RTN","MPIFA24",56,0)
 S ARY("EVTR")=$P(MSG,HL("FS"),2) ;not currently used
"RTN","MPIFA24",57,0)
 S ARY("DLT")=$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA24",58,0)
 Q
"RTN","MPIFA24",59,0)
 ;
"RTN","MPIFA24",60,0)
PID(ARY,MSG,FIRST) ;processing PID fields
"RTN","MPIFA24",61,0)
 N REP,PID,COMP,SUBCOMP,MPIDFN,MPISSN,ICN
"RTN","MPIFA24",62,0)
 S REP=$E(HL("ECH"),2),COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24",63,0)
 S MPISSN="",MPIDFN=""
"RTN","MPIFA24",64,0)
 D PIDPROC^MPIFA43(.ICN,.MPISSN,.MPIDFN,.PID)
"RTN","MPIFA24",65,0)
 I FIRST=1 S ARY(991.01)=+ICN,ARY(991.02)=$P(ICN,"V",2)
"RTN","MPIFA24",66,0)
 S ARY("ICN",FIRST)=ICN
"RTN","MPIFA24",67,0)
 S ARY("SSN",FIRST)=MPISSN
"RTN","MPIFA24",68,0)
 S ARY("DFN",FIRST)=MPIDFN
"RTN","MPIFA24",69,0)
 Q
"RTN","MPIFA24",70,0)
 ;
"RTN","MPIFA24",71,0)
PD1(ARY,MSG) ;processing PD1 fields
"RTN","MPIFA24",72,0)
 N COMP
"RTN","MPIFA24",73,0)
 S COMP=$E(HL("ECH"),1)
"RTN","MPIFA24",74,0)
 S ARY(991.03)=$P($P(HLNODE,HL("FS"),4),COMP,3)
"RTN","MPIFA24",75,0)
 Q
"RTN","MPIFA24",76,0)
 ;
"RTN","MPIFA24",77,0)
PROC ;
"RTN","MPIFA24",78,0)
 N NXT,DFN
"RTN","MPIFA24",79,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24",80,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24",81,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24",82,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24",83,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24",84,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24",85,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24",86,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24",87,0)
 Q
"RTN","MPIFA24B")
0^10^B6022589
"RTN","MPIFA24B",1,0)
MPIFA24B ;BP/CMC-BUILD A24 ADD ME MSGS ;JULY 22, 2002
"RTN","MPIFA24B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA24B",3,0)
 ;
"RTN","MPIFA24B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24B",7,0)
 ;
"RTN","MPIFA24B",8,0)
A24(DFN) ;BUILD AND SEND A24
"RTN","MPIFA24B",9,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID,PID2
"RTN","MPIFA24B",10,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA24B",11,0)
 S CNT=1
"RTN","MPIFA24B",12,0)
 D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFA24B",13,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA24B",14,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24B",15,0)
 S ERR="",TCNT=0
"RTN","MPIFA24B",16,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A24",.ERR)
"RTN","MPIFA24B",17,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",18,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA24B",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",20,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA24B",21,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",22,0)
 D BLDPID^VAFCQRY(DFN,2,"1,3,5,6,7,8,11,29",.PID2,.HL,.ERR)
"RTN","MPIFA24B",23,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",24,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA24B",25,0)
 S HLA("HLS",4)=PD1(1)
"RTN","MPIFA24B",26,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",27,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA24B",28,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA24B",29,0)
 S CNT=0 F  S CNT=$O(PID2(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",30,0)
 .I CNT=1 S HLA("HLS",3)=PID2(CNT)
"RTN","MPIFA24B",31,0)
 .I CNT>1 S HLA("HLS",3,CNT-1)=PID2(CNT)
"RTN","MPIFA24B",32,0)
 D GENERATE^HLMA("MPIF ADT-A24 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA24B",33,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA24B",34,0)
 I '+RESLT S ^XTMP("MPIFA24%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message to MPI for DFN "_DFN,^XTMP("MPIFA24%"_DFN,"MPI",0)="A"
"RTN","MPIFA24B",35,0)
 K HLA,HLEID,HLL("LINKS"),HL,COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA24B",36,0)
 Q RESLT
"RTN","MPIFA24B",37,0)
 ;
"RTN","MPIFA24B",38,0)
RT ;
"RTN","MPIFA24B",39,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA24B",40,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA24B",41,0)
 S HLL("LINKS",1)="MPIF ADT-A24 CLIENT^"_MPI
"RTN","MPIFA24B",42,0)
 Q
"RTN","MPIFA24B",43,0)
RES ;
"RTN","MPIFA24B",44,0)
 N NXT,DFN
"RTN","MPIFA24B",45,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24B",46,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24B",47,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24B",48,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24B",49,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24B",50,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24B",51,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24B",52,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24B",53,0)
 Q
"RTN","MPIFA28")
0^1^B4176969
"RTN","MPIFA28",1,0)
MPIFA28 ;BP/CMC-BUILD A28 ADD ME MSGS ;MARCH 4, 2002
"RTN","MPIFA28",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA28",3,0)
 ;
"RTN","MPIFA28",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA28",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA28",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA28",7,0)
 ;
"RTN","MPIFA28",8,0)
A28(DFN) ;BUILD AND SEND A28
"RTN","MPIFA28",9,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID
"RTN","MPIFA28",10,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA28",11,0)
 S CNT=1
"RTN","MPIFA28",12,0)
 D INIT^HLFNC2("MPIF ADT-A28 SERVER",.HL)
"RTN","MPIFA28",13,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA28",14,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA28",15,0)
 S ERR="",TCNT=0
"RTN","MPIFA28",16,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A28",.ERR)
"RTN","MPIFA28",17,0)
 Q:ERR'="" ERR
"RTN","MPIFA28",18,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA28",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA28",20,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA28",21,0)
 Q:ERR'="" ERR
"RTN","MPIFA28",22,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA28",23,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA28",24,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA28",25,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA28",26,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA28",27,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA28",28,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA28",29,0)
 S HLL("LINKS",1)="MPIF ADT-A28 CLIENT^"_MPI
"RTN","MPIFA28",30,0)
 D GENERATE^HLMA("MPIF ADT-A28 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA28",31,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA28",32,0)
 I +RESLT S ^XTMP("MPIFA28%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A28 message to MPI for DFN "_DFN,^XTMP("MPIFA28%"_DFN,"MPI",0)="A"
"RTN","MPIFA28",33,0)
 K HLA,HLEID,HLL("LINKS"),HL,COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA28",34,0)
 Q RESLT
"RTN","MPIFA28",35,0)
 ;
"RTN","MPIFA28",36,0)
RES ;
"RTN","MPIFA28",37,0)
 N NXT,DFN
"RTN","MPIFA28",38,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA28",39,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA28",40,0)
 K ^XTMP("MPIFA28%"_DFN)
"RTN","MPIFA28",41,0)
 Q
"RTN","MPIFA31B")
0^2^B5406045
"RTN","MPIFA31B",1,0)
MPIFA31B ;BP/CMC-BUILD A31 MSGS ;FEB 5, 2002
"RTN","MPIFA31B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA31B",3,0)
 ;
"RTN","MPIFA31B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA31B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA31B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA31B",7,0)
 ;
"RTN","MPIFA31B",8,0)
A31(DFN) ;BUILD AND SEND A31
"RTN","MPIFA31B",9,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID
"RTN","MPIFA31B",10,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA31B",11,0)
 Q:$E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFA31B",12,0)
 ; ^ LOCAL ICN DON'T SEND
"RTN","MPIFA31B",13,0)
 Q:+$$GETICN^MPIF001(DFN)=-1
"RTN","MPIFA31B",14,0)
 ; ^ NO ICN DON'T SEND
"RTN","MPIFA31B",15,0)
 S CNT=1
"RTN","MPIFA31B",16,0)
 D INIT^HLFNC2("MPIF ADT-A31 SERVER",.HL)
"RTN","MPIFA31B",17,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA31B",18,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA31B",19,0)
 S ERR="",TCNT=0
"RTN","MPIFA31B",20,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A31",.ERR)
"RTN","MPIFA31B",21,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",22,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA31B",23,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",24,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA31B",25,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",26,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA31B",27,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA31B",28,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA31B",29,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA31B",30,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA31B",31,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA31B",32,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA31B",33,0)
 S HLL("LINKS",1)="MPIF ADT-A31 CLIENT^"_MPI
"RTN","MPIFA31B",34,0)
 D GENERATE^HLMA("MPIF ADT-A31 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA31B",35,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA31B",36,0)
 S ^XTMP("MPIFA31%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA31 msg to MPI for DFN "_DFN
"RTN","MPIFA31B",37,0)
 I '+RESLT S ^XTMP("MPIFA31%"_DFN,"MPI",0)="A"
"RTN","MPIFA31B",38,0)
 K HLA,HLEID,HLL("LINKS"),HL,COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA31B",39,0)
 Q RESLT
"RTN","MPIFA31B",40,0)
 ;
"RTN","MPIFA31B",41,0)
RES ;
"RTN","MPIFA31B",42,0)
 N NXT
"RTN","MPIFA31B",43,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA31B",44,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA31B",45,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA31B",46,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA31B",47,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA31B",48,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA31B",49,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA31B",50,0)
 K ^XTMP("MPIFA31%"_DFN)
"RTN","MPIFA31B",51,0)
 Q
"RTN","MPIFA37")
0^8^B10401779
"RTN","MPIFA37",1,0)
MPIFA37 ;BIR/DLR-Utility for processing an ADT-A37 Un-link ID ;DEC 11, 2001
"RTN","MPIFA37",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA37",3,0)
DBIA ; Supported IA's
"RTN","MPIFA37",4,0)
 ;
"RTN","MPIFA37",5,0)
 ;IA: 2796  - EXC, START, and STOP^RGHLLOG
"RTN","MPIFA37",6,0)
 ;IA: 2988  - $$DELALLTF and $$DELETETF^VAFCTFU
"RTN","MPIFA37",7,0)
 ;
"RTN","MPIFA37",8,0)
IN ;Entry point for processing ADT-A37 - unlink patient information
"RTN","MPIFA37",9,0)
 ;Called from the MPIF ADT-A37 CLIENT protocol processing routine
"RTN","MPIFA37",10,0)
 ;There are no inputs or outputs
"RTN","MPIFA37",11,0)
 ;
"RTN","MPIFA37",12,0)
 N MPIF,STATN,MPIFI,MSG,SG,MPIFARR,PDFN,INST,MFUPT,PDLT,TFIEN,ICNAUTH,MPISITE
"RTN","MPIFA37",13,0)
 N ICN,HLCOMP,CNT,X,MPIFERR,MPIFX,MPIDFN,MPISSN,ERROR,DFN,NODE,CMOR2,PID
"RTN","MPIFA37",14,0)
 S MPISSN="",MPIDFN="",ICN="",ERROR=""
"RTN","MPIFA37",15,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","MPIFA37",16,0)
 F MPIFI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPIF(MPIFI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIFA37",17,0)
 ;replace/remove/unlink the mismatched ICN in PID(2) as well as the old CMOR from the patients record
"RTN","MPIFA37",18,0)
 S CMOR2="",DFN=$$GETDFN^MPIF001(+PID(2)) I +DFN>0 S NODE=$$MPINODE^MPIFAPI(DFN) I NODE'="" S CMOR2=$P(NODE,"^",3)
"RTN","MPIFA37",19,0)
 ;if assigning authority = site station# then remove the ICN from site 
"RTN","MPIFA37",20,0)
 I $P(PID(2),"^",2)=$P($$SITE^VASITE,"^",3) D REPLACE("@","",PID(2),CMOR2,.ERROR)
"RTN","MPIFA37",21,0)
 ;if assigning authority '= site station# then remove assigning authority from TF list for the given ICN
"RTN","MPIFA37",22,0)
 I $P(PID(2),"^",2)'=$P($$SITE^VASITE,"^",3) S MPISITE=$$IEN^XUAF4($P(PID(2),"^",2)) D
"RTN","MPIFA37",23,0)
 . I $P(PID(2),"^",2)'>0 S ERROR="-1^Unable to remove station#"_$P(PID(2),"^",2)_" from TF list" Q
"RTN","MPIFA37",24,0)
 . I +$P(PID(2),"^",2)>0 S ERROR=$$DELETETF^VAFCTFU(ICN,MPISITE)
"RTN","MPIFA37",25,0)
 S ERROR=$S(+ERROR=0:"",1:$P(ERROR,"^",2))
"RTN","MPIFA37",26,0)
 ;create response message
"RTN","MPIFA37",27,0)
 S CNT=1
"RTN","MPIFA37",28,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$G(ERROR) S CNT=CNT+1
"RTN","MPIFA37",29,0)
 ;Send back the appl. ack (ACK) with the ADT-A37 transaction status
"RTN","MPIFA37",30,0)
 D ROUTE
"RTN","MPIFA37",31,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFERR,"",.HLP)
"RTN","MPIFA37",32,0)
 Q
"RTN","MPIFA37",33,0)
PICK ;check routine for segment entry point
"RTN","MPIFA37",34,0)
 I $T(@SG)]"" D @SG
"RTN","MPIFA37",35,0)
 I $T(@SG)="" Q
"RTN","MPIFA37",36,0)
 Q
"RTN","MPIFA37",37,0)
MSH ;;MSH
"RTN","MPIFA37",38,0)
 ;process the MSH segment
"RTN","MPIFA37",39,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIFA37",40,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIFA37",41,0)
 S MPIFARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","MPIFA37",42,0)
 Q
"RTN","MPIFA37",43,0)
EVN ;;EVN
"RTN","MPIFA37",44,0)
 ;process the EVN segment
"RTN","MPIFA37",45,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA37",46,0)
 Q
"RTN","MPIFA37",47,0)
PID ;;PID
"RTN","MPIFA37",48,0)
 ;process the PID segment
"RTN","MPIFA37",49,0)
 N ARRAY,MPIJ
"RTN","MPIFA37",50,0)
 D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","MPIFA37",51,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIFA37",52,0)
 S MPISSN=$G(ARRAY("SSN")),MPIDFN=$G(ARRAY("DFN")),ICN=$G(ARRAY("ICN"))
"RTN","MPIFA37",53,0)
 S PID(MPIJ)=+ICN_"^"_$G(ARRAY("MPISSITE"))
"RTN","MPIFA37",54,0)
 Q
"RTN","MPIFA37",55,0)
RESP ;response process logic entry point
"RTN","MPIFA37",56,0)
 Q
"RTN","MPIFA37",57,0)
ROUTE ;routing logic entry point
"RTN","MPIFA37",58,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","MPIFA37",59,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="MPIF ADT-A37 CLIENT"_"^"_MPI
"RTN","MPIFA37",60,0)
 .I $P($G(MPI),U)=-1 D
"RTN","MPIFA37",61,0)
 .. N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA37",62,0)
 .. D EXC^RGHLLOG(224,"Unable to send ADT-A37 for DFN"_$G(DFN)_" : No MPI link identified",$G(PDFN))
"RTN","MPIFA37",63,0)
 .. D STOP^RGHLLOG(0)
"RTN","MPIFA37",64,0)
 Q
"RTN","MPIFA37",65,0)
REPLACE(ICN1,CMOR1,ICN2,CMOR2,ERROR) ;
"RTN","MPIFA37",66,0)
 ;replace icn1 with icn2 and cmor1 with cmor2
"RTN","MPIFA37",67,0)
 N MPIARR
"RTN","MPIFA37",68,0)
 S ERROR=0
"RTN","MPIFA37",69,0)
 I $G(ICN2)'="" S DFN=$$GETDFN^MPIF001(+ICN2) I +DFN'>0 S ERROR="-1^Unable to break ICN "_+ICN2_" because that ICN is unknown"
"RTN","MPIFA37",70,0)
 Q:+$G(ERROR)=-1
"RTN","MPIFA37",71,0)
 S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ICN2,"V"),MPIARR(993)=CMOR2
"RTN","MPIFA37",72,0)
 S ERROR=$$DELALLTF^VAFCTFU(+ICN2)
"RTN","MPIFA37",73,0)
 S ERROR=$$UPDATE^MPIFAPI(DFN,"MPIARR",1)
"RTN","MPIFA37",74,0)
 Q
"RTN","MPIFA40")
0^6^B9041640
"RTN","MPIFA40",1,0)
MPIFA40 ;BP/CMC-BUILD A40 MERGE MESSAGE ;25 MARCH 2002
"RTN","MPIFA40",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA40",3,0)
 ;
"RTN","MPIFA40",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA40",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA40",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA40",7,0)
 ;
"RTN","MPIFA40",8,0)
A40(DFN,DFN2) ;BUILD AND SEND A40
"RTN","MPIFA40",9,0)
 N PID,PD1,EVN,PD1,MRG,MPI,RESLT,CNT,ICN1,ICN2
"RTN","MPIFA40",10,0)
 D INIT^HLFNC2("MPIF ADT-A40 SERVER",.HL)
"RTN","MPIFA40",11,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA40",12,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA40",13,0)
 S ERR=""
"RTN","MPIFA40",14,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A40",.ERR)
"RTN","MPIFA40",15,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",16,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA40",17,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",18,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA40",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA40",20,0)
 D BLDMRG(DFN2,"1,7",.MRG,.HL,.ERR)
"RTN","MPIFA40",21,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA40",22,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA40",23,0)
 S HLA("HLS",4)=MRG
"RTN","MPIFA40",24,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA40",25,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA40",26,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA40",27,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA40",28,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA40",29,0)
 S HLL("LINKS",1)="MPIF ADT-A40 CLIENT^"_MPI
"RTN","MPIFA40",30,0)
 D GENERATE^HLMA("MPIF ADT-A40 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA40",31,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA40",32,0)
 S ^XTMP("MPIFA40%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA40 msg to MPI for DFN "_DFN
"RTN","MPIFA40",33,0)
 I +RESLT D
"RTN","MPIFA40",34,0)
 .S ICN1=$$GETICN^MPIF001(DFN),ICN2=$$GETICN^MPIF001(DFN2)
"RTN","MPIFA40",35,0)
 .S ^XTMP("MPIFA40%"_DFN,DFN2,"MPI",0)="A"
"RTN","MPIFA40",36,0)
 .S ^XTMP("MPIFA40%"_DFN,DFN2,"MPI",1)=ICN1_"^"_ICN2_"^"_RESLT
"RTN","MPIFA40",37,0)
 K HLA,HLEID,HLL("LINKS"),HL,COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA40",38,0)
 Q RESLT
"RTN","MPIFA40",39,0)
 ;
"RTN","MPIFA40",40,0)
RES ;
"RTN","MPIFA40",41,0)
 N NXT
"RTN","MPIFA40",42,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA40",43,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA40",44,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA40",45,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA40",46,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA40",47,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA40",48,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA40",49,0)
 K ^XTMP("MPIFA40%"_DFN)
"RTN","MPIFA40",50,0)
 Q
"RTN","MPIFA40",51,0)
 ;
"RTN","MPIFA40",52,0)
BLDMRG(IEN,FLD,SEG,HL,ERR) ; bld MRG segment ONLY FIELDS 2 AND 8 SUPPORTED
"RTN","MPIFA40",53,0)
 N NODE,MPIZN,MG,X,COMP,SUBCOMP,REP,NAME,ICN,SITE
"RTN","MPIFA40",54,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA40",55,0)
 S MPIZN=$D(^DPT(IEN,0))
"RTN","MPIFA40",56,0)
 I MPIZN="" S ERR="-1^No such DFN entry "_IEN Q
"RTN","MPIFA40",57,0)
 S SEG="MRG"
"RTN","MPIFA40",58,0)
 ;repeat prior ID's including ICN and DFN
"RTN","MPIFA40",59,0)
 S NODE=$$MPINODE^MPIFAPI(IEN)
"RTN","MPIFA40",60,0)
 S ICN=$P(NODE,"^",1)_"V"_$P(NODE,"^",2),SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFA40",61,0)
 S MG(2)=ICN_COMP_COMP_COMP_"USVHA"_SUBCOMP_SUBCOMP_"0363"_COMP_"NI"_COMP_"VA FACILITY ID"_SUBCOMP_SITE_SUBCOMP_"L"
"RTN","MPIFA40",62,0)
 ;NAME
"RTN","MPIFA40",63,0)
 S NAME("FILE")=2,NAME("IENS")=IEN,NAME("FIELD")=.01
"RTN","MPIFA40",64,0)
 S MG(8)=$$HLNAME^XLFNAME(.NAME,"",COMP)
"RTN","MPIFA40",65,0)
 S $P(MG(8),COMP,7)="L"
"RTN","MPIFA40",66,0)
 S $P(SEG,HL("FS"),2)=MG(2)
"RTN","MPIFA40",67,0)
 S $P(SEG,HL("FS"),8)=MG(8)
"RTN","MPIFA40",68,0)
 Q
"RTN","MPIFA43")
0^9^B14568215
"RTN","MPIFA43",1,0)
MPIFA43 ;BIR/DLR-Utility for processing an ADT-A43 Un-link ID ;MAR 18, 2002
"RTN","MPIFA43",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFA43",3,0)
DBIA ; Supported IA's
"RTN","MPIFA43",4,0)
 ;
"RTN","MPIFA43",5,0)
 ;IA: 2796  - EXC, START, and STOP^RGHLLOG
"RTN","MPIFA43",6,0)
 ;IA: 2988  - $$DELALLTF and $$DELETETF^VAFCTFU
"RTN","MPIFA43",7,0)
 ;IA: 3767  - PIDP^RGADTP1
"RTN","MPIFA43",8,0)
 ;
"RTN","MPIFA43",9,0)
IN ;Entry point for processing ADT-A43 - Move patient information
"RTN","MPIFA43",10,0)
 ;Called from the MPIF ADT-A43 CLIENT protocol processing routine
"RTN","MPIFA43",11,0)
 ;There are no inputs or outputs
"RTN","MPIFA43",12,0)
 ;
"RTN","MPIFA43",13,0)
 N MPIF,STATN,MPIFI,MSG,SG,MPIFARR,PDFN,INST,MFUPT,PDLT,TFIEN,ICNAUTH,MPISITE,MRG
"RTN","MPIFA43",14,0)
 N ICN,HLCOMP,CNT,X,MPIFERR,MPIFX,MPIDFN,MPISSN,ERROR,DFN,NODE,CMOR2,PID
"RTN","MPIFA43",15,0)
 S MPISSN="",MPIDFN="",ICN="",ERROR=""
"RTN","MPIFA43",16,0)
INIT ;Process in the Treating Facility MFN msg
"RTN","MPIFA43",17,0)
 F MPIFI=1:1 X HLNEXT Q:HLQUIT'>0  S (MSG,MPIF(MPIFI))=HLNODE,SG=$E(HLNODE,1,3) D:SG?2A1(1A,1N) PICK
"RTN","MPIFA43",18,0)
 ;replace/remove/unlink the mismatched ICN in MRG as well as the old CMOR from the patients record
"RTN","MPIFA43",19,0)
 S CMOR2="",DFN=$$GETDFN^MPIF001(+MRG) I +DFN>0 S NODE=$$MPINODE^MPIFAPI(DFN) I NODE'="" S CMOR2=$P(NODE,"^",3)
"RTN","MPIFA43",20,0)
 ;if assigning authority = site station# then remove the ICN from site 
"RTN","MPIFA43",21,0)
 I $P(MRG,"^",2)=$P($$SITE^VASITE,"^",3) D REPLACE("@","",MRG,CMOR2,.ERROR)
"RTN","MPIFA43",22,0)
 ;if assigning authority '= site station# then remove assigning authority from TF list for the given ICN
"RTN","MPIFA43",23,0)
 I $P(MRG,"^",2)'=$P($$SITE^VASITE,"^",3) S MPISITE=$$IEN^XUAF4($P(MRG,"^",2)) D
"RTN","MPIFA43",24,0)
 . I $P(MRG,"^",2)'>0 S ERROR="-1^Unable to remove station#"_$P(MRG,"^",2)_" from TF list" Q
"RTN","MPIFA43",25,0)
 . I +$P(MRG,"^",2)>0 S ERROR=$$DELETETF^VAFCTFU(+ICN,MPISITE)
"RTN","MPIFA43",26,0)
 S ERROR=$S(+ERROR=0:"",1:$P(ERROR,"^",2))
"RTN","MPIFA43",27,0)
 ;create response message
"RTN","MPIFA43",28,0)
 S CNT=1
"RTN","MPIFA43",29,0)
 S HLA("HLA",1)="MSA"_HL("FS")_"AA"_HL("FS")_HL("MID")_HL("FS")_$G(ERROR) S CNT=CNT+1
"RTN","MPIFA43",30,0)
 D ROUTE
"RTN","MPIFA43",31,0)
 ;Send back the appl. ack (ACK) with the ADT-A43 transaction status
"RTN","MPIFA43",32,0)
 D GENACK^HLMA1(HL("EID"),HLMTIENS,HL("EIDS"),"LM",1,.MPIFERR,"",.HLP)
"RTN","MPIFA43",33,0)
 Q
"RTN","MPIFA43",34,0)
PICK ;check routine for segment entry point
"RTN","MPIFA43",35,0)
 I $T(@SG)]"" D @SG
"RTN","MPIFA43",36,0)
 I $T(@SG)="" Q
"RTN","MPIFA43",37,0)
 Q
"RTN","MPIFA43",38,0)
MSH ;;MSH
"RTN","MPIFA43",39,0)
 ;process the MSH segment
"RTN","MPIFA43",40,0)
 S (HLFS,HL("FS"))=$E(MSG,4),(HLECH,HL("ECH"))=$E(MSG,5,8)
"RTN","MPIFA43",41,0)
 S HLCOMP=$E(HL("ECH"),1)
"RTN","MPIFA43",42,0)
 S MPIFARR("SENDING SITE")=$P(MSG,HL("FS"),4)
"RTN","MPIFA43",43,0)
 Q
"RTN","MPIFA43",44,0)
EVN ;;EVN
"RTN","MPIFA43",45,0)
 ;process the EVN segment
"RTN","MPIFA43",46,0)
 S STATN=+$$SITE^VASITE()_"^"_$$FMDATE^HLFNC($P(MSG,HL("FS"),3))
"RTN","MPIFA43",47,0)
 Q
"RTN","MPIFA43",48,0)
PID ;;PID
"RTN","MPIFA43",49,0)
 ;process the PID segment
"RTN","MPIFA43",50,0)
 D PIDPROC(.ICN,.MPISSN,.MPIDFN,.PID)
"RTN","MPIFA43",51,0)
 Q
"RTN","MPIFA43",52,0)
PIDPROC(ICN,SSN,DFN,PID) ;
"RTN","MPIFA43",53,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP,MPIJ,ARRAY
"RTN","MPIFA43",54,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",55,0)
 S MPIJ=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",56,0)
 D PIDP^RGADTP1(.MSG,.ARRAY,.HL)
"RTN","MPIFA43",57,0)
 S ICN=$G(ARRAY("ICN")),MPIDFN=$G(ARRAY("DFN")),MPISSN=$G(ARRAY("SSN"))
"RTN","MPIFA43",58,0)
 S PID(MPIJ)=ICN_"^"_$G(ARRAY("MPISSITE"))
"RTN","MPIFA43",59,0)
 Q
"RTN","MPIFA43",60,0)
MRG ;
"RTN","MPIFA43",61,0)
 N COMP,REP,SUBCOMP,AUTH,IDTYP,LOC,AUTHTYP
"RTN","MPIFA43",62,0)
 S COMP=$E(HL("ECH"),1),SUBCOMP=$E(HL("ECH"),4),REP=$E(HL("ECH"),2)
"RTN","MPIFA43",63,0)
 N MPIFX,ID,AUTH
"RTN","MPIFA43",64,0)
 S ID=$P(MSG,HL("FS"),2)
"RTN","MPIFA43",65,0)
 F MPIFX=1:1:$L(ID,REP) S PID=$P(ID,COMP),AUTH=$P($P(ID,COMP,4),SUBCOMP),AUTHTYP=$P($P(ID,COMP,4),SUBCOMP,2),IDTYP=$P(ID,COMP,5),LOC=$P($P(ID,COMP,6),SUBCOMP,2) D
"RTN","MPIFA43",66,0)
 . I AUTH="USSSA" S MPISSN=PID
"RTN","MPIFA43",67,0)
 . I AUTH="USVHA" S ICN=PID S ICNAUTH=AUTH
"RTN","MPIFA43",68,0)
 . I AUTH="USVHA" I AUTHTYP="PI" S MPIDFN=PID
"RTN","MPIFA43",69,0)
 S MRG=ICN_"^"_LOC
"RTN","MPIFA43",70,0)
 Q
"RTN","MPIFA43",71,0)
RSP ;response process logic entry point
"RTN","MPIFA43",72,0)
 Q
"RTN","MPIFA43",73,0)
ROUTE ;routing logic entry point
"RTN","MPIFA43",74,0)
 N MPI S MPI=$$MPILINK^MPIFAPI() D
"RTN","MPIFA43",75,0)
 .I $P($G(MPI),U)'=-1 S HLL("LINKS",1)="MPIF ADT-A43 CLIENT"_"^"_MPI
"RTN","MPIFA43",76,0)
 .I $P($G(MPI),U)=-1 D
"RTN","MPIFA43",77,0)
 ..N RGLOG D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA43",78,0)
 ..D EXC^RGHLLOG(224,"No MPI link identified",$G(PDFN))
"RTN","MPIFA43",79,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA43",80,0)
 Q
"RTN","MPIFA43",81,0)
REPLACE(ICN1,CMOR1,ICN2,CMOR2,ERROR) ;
"RTN","MPIFA43",82,0)
 ;replace icn1 with icn2 and cmor1 with cmor2
"RTN","MPIFA43",83,0)
 N MPIARR
"RTN","MPIFA43",84,0)
 S ERROR=0
"RTN","MPIFA43",85,0)
 I $G(ICN2)'="" S DFN=$$GETDFN^MPIF001(+ICN2) I +DFN'>0 S ERROR="-1^Unable to break ICN "_+ICN2_" because that ICN is unknown"
"RTN","MPIFA43",86,0)
 Q:+$G(ERROR)=-1
"RTN","MPIFA43",87,0)
 S MPIARR(991.01)="@",MPIARR(991.02)="@",MPIARR(991.03)="@",MPIARR(991.05)="@",MPIARR(992)=$P(ICN2,"V"),MPIARR(993)=CMOR2
"RTN","MPIFA43",88,0)
 S ERROR=$$DELALLTF^VAFCTFU(+ICN2)
"RTN","MPIFA43",89,0)
 S ERROR=$$UPDATE^MPIFAPI(DFN,"MPIARR",1)
"RTN","MPIFA43",90,0)
 Q
"RTN","MPIFACHK")
0^11^B7038643
"RTN","MPIFACHK",1,0)
MPIFACHK ;CMC/BP-ACKNOWLEDGEMENT CHECK ;JULY 8, 2002
"RTN","MPIFACHK",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFACHK",3,0)
 ;
"RTN","MPIFACHK",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFACHK",5,0)
 ;   START, STOP, EXC^RGHLLOG - #2796
"RTN","MPIFACHK",6,0)
 ;
"RTN","MPIFACHK",7,0)
EN(RETURN,BEFORE) ; CHECKING FOR "A" FOR XTMP("MPIFA.. NODES that happened before FM date BEFORE
"RTN","MPIFACHK",8,0)
 ;RPC - RETURN will have 0 if no messages need to be resent OR 1 if there are some resent.
"RTN","MPIFACHK",9,0)
 ;
"RTN","MPIFACHK",10,0)
 N DFN2,TAG,MPIFHL,ICN,ICN2 K MPIFMSG
"RTN","MPIFACHK",11,0)
 M MPIFHL=HL ;need to save hl variables to avoid undefined errors when returning to RPC.
"RTN","MPIFACHK",12,0)
 S MPIFMSG="MPIFA",RETURN=0
"RTN","MPIFACHK",13,0)
 F  S MPIFMSG=$O(^XTMP(MPIFMSG)) Q:$E(MPIFMSG,1,5)'="MPIFA"  D
"RTN","MPIFACHK",14,0)
 .Q:$P(^XTMP(MPIFMSG,0),"^",2)>BEFORE
"RTN","MPIFACHK",15,0)
 .I $E(MPIFMSG,1,7)="MPIFA40" D
"RTN","MPIFACHK",16,0)
 ..S DFN2=$O(^XTMP(MPIFMSG,0))
"RTN","MPIFACHK",17,0)
 ..Q:DFN2=""
"RTN","MPIFACHK",18,0)
 ..I $G(^XTMP(MPIFMSG,DFN2,"MPI",0))="A" D
"RTN","MPIFACHK",19,0)
 ...S ICN=$G(^XTMP(MPIFMSG,DFN2,"MPI",1))
"RTN","MPIFACHK",20,0)
 ...S ICN2=$P(ICN,"^",2),MSGN=$P(ICN,"^",3),ICN=$P(ICN,"^")
"RTN","MPIFACHK",21,0)
 ...S RETURN=1
"RTN","MPIFACHK",22,0)
 ...D START^RGHLLOG()
"RTN","MPIFACHK",23,0)
 ...D EXC^RGHLLOG(208,"Merge msg A40 for TO record ICN1= "_ICN_" FROM record ICN2= "_ICN2_". HL7 msg id= "_MSGN_" No ACK received back")
"RTN","MPIFACHK",24,0)
 ...D STOP^RGHLLOG()
"RTN","MPIFACHK",25,0)
 ..K ^XTMP(MPIFMSG)
"RTN","MPIFACHK",26,0)
 .Q:MPIFMSG["A40"
"RTN","MPIFACHK",27,0)
 .Q:'$D(^XTMP(MPIFMSG,"MPI",0))
"RTN","MPIFACHK",28,0)
 .I $G(^XTMP(MPIFMSG,"MPI",0))="A" D
"RTN","MPIFACHK",29,0)
 ..S TAG=$E(MPIFMSG,5,7)
"RTN","MPIFACHK",30,0)
 ..D @TAG S RETURN=1
"RTN","MPIFACHK",31,0)
 K MPIFMSG
"RTN","MPIFACHK",32,0)
 M HL=MPIFHL
"RTN","MPIFACHK",33,0)
 ;
"RTN","MPIFACHK",34,0)
 S MPIFMSG="RGA"
"RTN","MPIFACHK",35,0)
 F  S MPIFMSG=$O(^XTMP(MPIFMSG)) Q:$E(MPIFMSG,1,3)'="RGA"  D
"RTN","MPIFACHK",36,0)
 .Q:$P(^XTMP(MPIFMSG,0),"^",2)>BEFORE
"RTN","MPIFACHK",37,0)
 .Q:'$D(^XTMP(MPIFMSG,"MPI",0))
"RTN","MPIFACHK",38,0)
 .I $G(^XTMP(MPIFMSG,"MPI",0))="A" D
"RTN","MPIFACHK",39,0)
 ..S TAG=$E(MPIFMSG,3,5)
"RTN","MPIFACHK",40,0)
 ..I TAG="A01"!(TAG="A03")!(TAG="A04")!(TAG="A08") S TAG="A31"
"RTN","MPIFACHK",41,0)
 ..D @TAG S RETURN=1
"RTN","MPIFACHK",42,0)
 K MPIFMSG
"RTN","MPIFACHK",43,0)
 M HL=MPIFHL
"RTN","MPIFACHK",44,0)
 Q
"RTN","MPIFACHK",45,0)
 ;
"RTN","MPIFACHK",46,0)
A28 ;
"RTN","MPIFACHK",47,0)
 K ^XTMP(MPIFMSG)
"RTN","MPIFACHK",48,0)
 N NUM
"RTN","MPIFACHK",49,0)
 S NUM=$$A28^MPIFA28(+$P(MPIFMSG,"%",2))
"RTN","MPIFACHK",50,0)
 Q
"RTN","MPIFACHK",51,0)
A31 ;
"RTN","MPIFACHK",52,0)
 K ^XTMP(MPIFMSG)
"RTN","MPIFACHK",53,0)
 N NUM
"RTN","MPIFACHK",54,0)
 S NUM=$$A31^MPIFA31B(+$P(MPIFMSG,"%",2))
"RTN","MPIFACHK",55,0)
 Q
"RTN","MPIFACHK",56,0)
A29 ;
"RTN","MPIFACHK",57,0)
 K ^XTMP(MPIFMSG)
"RTN","MPIFACHK",58,0)
 N ICN,MSGN
"RTN","MPIFACHK",59,0)
 S ICN=$G(^XTMP(MPIFMSG,"MPI",1)),MSGN=$P(ICN,"^",2),ICN=$P(ICN,"^")
"RTN","MPIFACHK",60,0)
 D START^RGHLLOG()
"RTN","MPIFACHK",61,0)
 D EXC^RGHLLOG(208,"Inactivate msg A29 for DFN= "_$P(MPIFMSG,"%",2)_" with ICN= "_ICN_" original HL7 msg id= "_MSGN_" No ACK received back",$P(MPIFMSG,"%",2))
"RTN","MPIFACHK",62,0)
 D STOP^RGHLLOG()
"RTN","MPIFACHK",63,0)
 Q
"RTN","MPIFACHK",64,0)
A24 ;
"RTN","MPIFACHK",65,0)
 K ^XTMP(MPIFMSG)
"RTN","MPIFACHK",66,0)
 N NUM
"RTN","MPIFACHK",67,0)
 S NUM=$$A24^MPIFA24B(+$P(MPIFMSG,"%",2))
"RTN","MPIFACHK",68,0)
 Q
"RTN","MPIFEDIT")
0^3^B30244889
"RTN","MPIFEDIT",1,0)
MPIFEDIT ;BHM/RGY-Request a CMOR for patient ;FEB 20, 1998
"RTN","MPIFEDIT",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**11,22**;30 Apr 99
"RTN","MPIFEDIT",3,0)
 ;
"RTN","MPIFEDIT",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFEDIT",5,0)
 ;
"RTN","MPIFEDIT",6,0)
 ;   EXC^RGHLLOG     IA #2796
"RTN","MPIFEDIT",7,0)
 ;   START^RGHLLOG   IA #2796
"RTN","MPIFEDIT",8,0)
 ;   STOP^RGHLLOG    IA #2796
"RTN","MPIFEDIT",9,0)
 ;   $$EN^VAFCPID    IA #3015
"RTN","MPIFEDIT",10,0)
 ;
"RTN","MPIFEDIT",11,0)
NEW ;
"RTN","MPIFEDIT",12,0)
 ;Entry point for option: MPIF NEW REQUEST - create a new request
"RTN","MPIFEDIT",13,0)
 ; to change CMOR.  No input or output variables.
"RTN","MPIFEDIT",14,0)
 ;
"RTN","MPIFEDIT",15,0)
 ;Only if the site is not the CMOR can this option be used
"RTN","MPIFEDIT",16,0)
 N DIC,X,Y,DTOUT,DUOUT,PAT
"RTN","MPIFEDIT",17,0)
 S DIC="^DPT(",DIC(0)="QEAMZ",DIC("A")="Select PATIENT: "
"RTN","MPIFEDIT",18,0)
 D ^DIC
"RTN","MPIFEDIT",19,0)
 Q:$D(DTOUT)!$D(DUOUT)!(Y=-1)
"RTN","MPIFEDIT",20,0)
 S PAT=+Y
"RTN","MPIFEDIT",21,0)
 I +$$GETICN^MPIF001(PAT)<0 W !!,"Patient doesn't have ICN, try again" G NEW
"RTN","MPIFEDIT",22,0)
 I $$GETVCCI^MPIF001(PAT)<0 W !!,"Patient doesn't have a CMOR, try again" G NEW
"RTN","MPIFEDIT",23,0)
 I $$GETVCCI^MPIF001(PAT)=$P($$SITE^VASITE(),"^",3) W !!,"You are the CMOR, to push the CMOR to another site use option: PUSH CMOR REQUEST" G NEW
"RTN","MPIFEDIT",24,0)
 ; CHECK IF ALREADY OPEN/PENDING REQUEST
"RTN","MPIFEDIT",25,0)
 N ENT,STOP
"RTN","MPIFEDIT",26,0)
 S ENT=0,STOP=0 F  S ENT=$O(^MPIF(984.9,"C",PAT,ENT)) Q:ENT=""!(STOP)  D
"RTN","MPIFEDIT",27,0)
 .I $P($G(^MPIF(984.9,ENT,0)),"^",6)<4 S STOP=1
"RTN","MPIFEDIT",28,0)
 I STOP W !!,"Already have request for this patient" G NEW
"RTN","MPIFEDIT",29,0)
 ;
"RTN","MPIFEDIT",30,0)
 N N0,PHONE,DA,DIE,DR,DIR,ERROR,DIK,Y,DIRUT,REQ,CMOR,MPIFREQ
"RTN","MPIFEDIT",31,0)
 S DA=$$ADD^MPIFNEW()
"RTN","MPIFEDIT",32,0)
 S DIE="^MPIF(984.9,",DR=".04///`"_PAT D ^DIE
"RTN","MPIFEDIT",33,0)
 S REQ=$P($G(^MPIF(984.9,DA,0)),"^")
"RTN","MPIFEDIT",34,0)
 W !,"REQUEST NUMBER:",REQ
"RTN","MPIFEDIT",35,0)
 S CMOR=$$HL7CMOR^MPIF001($P($G(^MPIF(984.9,DA,0)),"^",4),"^")
"RTN","MPIFEDIT",36,0)
 ;station # ^ Station Name
"RTN","MPIFEDIT",37,0)
 W !,"*** Current CMOR: "_$P(CMOR,"^",2)_" ("_+CMOR_") ***"
"RTN","MPIFEDIT",38,0)
 S DIE="^MPIF(984.9,",DR=".07///"_+CMOR_";1.03///1;.09///`"_+$$SITE^VASITE() D ^DIE
"RTN","MPIFEDIT",39,0)
 ; ^ update site, type of action, and cmor after approval
"RTN","MPIFEDIT",40,0)
 ;
"RTN","MPIFEDIT",41,0)
 S REQ=DA
"RTN","MPIFEDIT",42,0)
EDIT I $D(DUZ) D
"RTN","MPIFEDIT",43,0)
 .S PHONE=$P($G(^MPIF(984.9,+$O(^MPIF(984.9,"AD",DUZ,""),-1),0)),"^",5)
"RTN","MPIFEDIT",44,0)
 .N DA,DIC,DIQ S DIQ="MPIFREQ",DR=".01",DIQ(0)="E",DIC="^VA(200,",DA=DUZ
"RTN","MPIFEDIT",45,0)
 .D EN^DIQ1
"RTN","MPIFEDIT",46,0)
 .S MPIFREQ=MPIFREQ(200,DUZ,.01,"E")
"RTN","MPIFEDIT",47,0)
 I '$D(DUZ) S (MPIFREQ,PHONE)=""
"RTN","MPIFEDIT",48,0)
 ;
"RTN","MPIFEDIT",49,0)
REASON S DIR("A")="Reason for Request",DIR("?")="Answer must be 3-60 characters in length.",DIR(0)="F^3:60" D ^DIR
"RTN","MPIFEDIT",50,0)
 I Y="" W !,"Answer must be 3-60 characters in length." G REASON
"RTN","MPIFEDIT",51,0)
 I Y="^" S DIK="^MPIF(984.9," D ^DIK W "... Request deleted" Q
"RTN","MPIFEDIT",52,0)
 S DIE="^MPIF(984.9,",DR="1.02///"_X D ^DIE
"RTN","MPIFEDIT",53,0)
REQNM S DIR("A")="Requestor's Name:",DIR("B")=MPIFREQ,DIR("?")="Answer must be a valid user",DIR(0)="P^200:EQZ" D ^DIR K DIR("B")
"RTN","MPIFEDIT",54,0)
 I Y="" W !,"Must pick valid user" G REQNM
"RTN","MPIFEDIT",55,0)
 I Y="^" S DIK="^MPIF(984.9," D ^DIK W "... Request deleted" Q
"RTN","MPIFEDIT",56,0)
 S DIE="^MPIF(984.9,",DR=".02///`"_+Y D ^DIE
"RTN","MPIFEDIT",57,0)
PHONE S DIR("A")="Requestor Phone:",DIR("B")=PHONE,DIR("?")="Answer must be 4-20 charaters in length.",DIR(0)="F" D ^DIR K DIR("B")
"RTN","MPIFEDIT",58,0)
 I Y="" W !,"Answer must be 4-20 charaters in length."  G PHONE
"RTN","MPIFEDIT",59,0)
 I Y="^" S DIK="^MPIF(984.9," D ^DIK W "... Request deleted" Q
"RTN","MPIFEDIT",60,0)
 S DIE="^MPIF(984.9,",DR=".05///"_X D ^DIE
"RTN","MPIFEDIT",61,0)
 I $$CHK^MPIFEDIT(DA) W !,"This request is missing required data." G EDIT
"RTN","MPIFEDIT",62,0)
 ;
"RTN","MPIFEDIT",63,0)
APP S DIR("A")="Select Request Action (SEND/EDIT/DELETE)? ",DIR("B")="SEND",DIR(0)="SAO^SEND:SEND;EDIT:EDIT;DELETE:DELETE"
"RTN","MPIFEDIT",64,0)
 D ^DIR K DIR
"RTN","MPIFEDIT",65,0)
 I $E(Y)="D"!$D(DIRUT) D  Q
"RTN","MPIFEDIT",66,0)
 .S DIK="^MPIF(984.9," D ^DIK W "... Request deleted"
"RTN","MPIFEDIT",67,0)
 .Q
"RTN","MPIFEDIT",68,0)
 I $E(Y)="E" G REASON
"RTN","MPIFEDIT",69,0)
 S DR=".08////^S X=2;.06////^S X=2",DIE="^MPIF(984.9," D ^DIE W !,"... Request will be sent"
"RTN","MPIFEDIT",70,0)
 ;
"RTN","MPIFEDIT",71,0)
 I '$D(REQ) S REQ=DA
"RTN","MPIFEDIT",72,0)
 S N0=$G(^MPIF(984.9,REQ,0)),CNT=0
"RTN","MPIFEDIT",73,0)
 I N0="" S ERROR="Node for request #"_REQ_" is not defined" Q
"RTN","MPIFEDIT",74,0)
 S INST=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFEDIT",75,0)
 N X,Y,DIC
"RTN","MPIFEDIT",76,0)
 S DIC="^VA(200,",DIC(0)="MZO",X="`"_+$P(N0,"^",2)
"RTN","MPIFEDIT",77,0)
 D ^DIC
"RTN","MPIFEDIT",78,0)
 I $G(Y)<1 S USER=""
"RTN","MPIFEDIT",79,0)
 I $G(Y)>0 S USER=$G(Y(0,0))
"RTN","MPIFEDIT",80,0)
 S REASON=$P($G(^MPIF(984.9,REQ,1)),"^",2)
"RTN","MPIFEDIT",81,0)
 S NDATE=$P(N0,"^",3)
"RTN","MPIFEDIT",82,0)
 S ICN=$$ICN^MPIFNQ(+$P(N0,"^",4))
"RTN","MPIFEDIT",83,0)
 S PHONE=$P(N0,"^",5)
"RTN","MPIFEDIT",84,0)
 S ID=$P(N0,"^")
"RTN","MPIFEDIT",85,0)
 D INIT^HLFNC2("MPIF CMOR REQUEST",.HL)
"RTN","MPIFEDIT",86,0)
 I $O(HL(""))="" D START^RGHLLOG(),EXC^RGHLLOG(220,"Unable to setup HL7 for sending Change of CMOR Request # "_REQ_" FOR ICN= "_ICN,$P(N0,"^",4)),STOP^RGHLLOG() D RESET^MPIFREQ(REQ) Q
"RTN","MPIFEDIT",87,0)
 K HLL("LINKS")
"RTN","MPIFEDIT",88,0)
 D LINK^HLUTIL3($P(N0,"^",7),.RGL)
"RTN","MPIFEDIT",89,0)
 S XX=$O(RGL(0))
"RTN","MPIFEDIT",90,0)
 I XX>0,$E($G(RGL(XX)),1,2)'="VA" D START^RGHLLOG(),EXC^RGHLLOG(224,"Unable to send Request to change CMOR request# "_REQ_"  No HL7 logical link for site "_XX_" for ICN= "_ICN,$P(N0,"^",4)),STOP^RGHLLOG() D RESET^MPIFREQ(REQ) Q
"RTN","MPIFEDIT",91,0)
 I XX>0 S HLL("LINKS",1)="MPIF CMOR RESPONSE^"_RGL(XX)
"RTN","MPIFEDIT",92,0)
 S CNT=CNT+1,PID=$$EN^VAFCPID(+$P(N0,"^",4),"1,2,4,5,6,7,8,11,12,13,14,16,17,19")
"RTN","MPIFEDIT",93,0)
 S HLA("HLS",CNT)=PID
"RTN","MPIFEDIT",94,0)
 S CNT=CNT+1
"RTN","MPIFEDIT",95,0)
 S HLA("HLS",CNT)="NTE"_HL("FS")_HL("FS")_"P"_HL("FS")_PHONE_HL("FS")_REASON_HL("FS")_HL("FS")_ID_HL("FS")_INST
"RTN","MPIFEDIT",96,0)
 S CNT=CNT+1
"RTN","MPIFEDIT",97,0)
 S HLA("HLS",CNT)="EVN"_HL("FS")_"A31"_HL("FS")_NDATE_HL("FS")_HL("FS")_""_HL("FS")_USER
"RTN","MPIFEDIT",98,0)
 N RLST
"RTN","MPIFEDIT",99,0)
 D GENERATE^HLMA("MPIF CMOR REQUEST","LM",1,.RLST,"",.HL)
"RTN","MPIFEDIT",100,0)
 I 'RLST D START^RGHLLOG(),EXC^RGHLLOG(220,"Unable to setup HL7 for sending Change of CMOR Request # "_REQ_" for ICN= "_ICN,$P(N0,"^",4)),STOP^RGHLLOG(),RESET^MPIFREQ(REQ)
"RTN","MPIFEDIT",101,0)
 K CNT,ICN,INST,NDATE,PID,REASON,RGL,USER,XX,ID
"RTN","MPIFEDIT",102,0)
 Q
"RTN","MPIFEDIT",103,0)
 ;
"RTN","MPIFEDIT",104,0)
CHK(IEN) ;
"RTN","MPIFEDIT",105,0)
 N N0,X,ERROR
"RTN","MPIFEDIT",106,0)
 S ERROR=0
"RTN","MPIFEDIT",107,0)
 S N0=$G(^MPIF(984.9,IEN,0))
"RTN","MPIFEDIT",108,0)
 F X=1:1:7 I $P(N0,"^",X)="" S ERROR=1 Q
"RTN","MPIFEDIT",109,0)
 I $P($G(^MPIF(984.9,IEN,1)),"^",2)="" S ERROR=1
"RTN","MPIFEDIT",110,0)
 Q ERROR
"RTN","MPIFSEED")
0^4^B11007649
"RTN","MPIFSEED",1,0)
MPIFSEED ;BP/CMC-SEEDING OF A31s TO MPI AND SUB CLEANUP ;FEB 5, 2002
"RTN","MPIFSEED",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22**;30 Apr 99
"RTN","MPIFSEED",3,0)
 ;
"RTN","MPIFSEED",4,0)
 ; Intregration Agreement Utilized:
"RTN","MPIFSEED",5,0)
 ;
"RTN","MPIFSEED",6,0)
 ;   ^DPT("AICNL", ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFSEED",7,0)
 ;   ^DPT( - #2070
"RTN","MPIFSEED",8,0)
 ;
"RTN","MPIFSEED",9,0)
 ; $O through Patient file (#2) removing subscriptions (991.05) and
"RTN","MPIFSEED",10,0)
 ; cooresponding entry in 774.  Send A31 message for any patients
"RTN","MPIFSEED",11,0)
 ; with an active National ICN.  Also check on missing SSN, AICN,
"RTN","MPIFSEED",12,0)
 ; or AICNL x-ref and clean them up.
"RTN","MPIFSEED",13,0)
 ; 
"RTN","MPIFSEED",14,0)
EN ;
"RTN","MPIFSEED",15,0)
 I $D(^XTMP("MPIF_SEEDING"))&('$D(^XTMP("MPIF_SEEDING","STOPPED"))) W !,"Seeding job is already running" Q
"RTN","MPIFSEED",16,0)
 I $D(^XTMP("MPIF_SEEDING"))&($D(^XTMP("MPIF_SEEDING","STOPPED"))) W !,"Seeding job has already been run at this site" Q
"RTN","MPIFSEED",17,0)
START N ICN,DFN,SSN,CNT,SCN,SCNE,XICN,AICN,AICNL,SSNX,ARRAY,ARR,SUB,A31,A31E,NODE
"RTN","MPIFSEED",18,0)
 S (DFN,AICN,AICNL,SSNX,CNT,SCN,SCNE,XICN,A31E)=0,ARR="ARRAY"
"RTN","MPIFSEED",19,0)
 K ^XTMP("MPIF_SEEDING")
"RTN","MPIFSEED",20,0)
 D NOW^%DTC
"RTN","MPIFSEED",21,0)
 S ^XTMP("MPIF_SEEDING",0)=%+10_"^"_%_"^Subs cleanup and Seeding MPI w/A31s"
"RTN","MPIFSEED",22,0)
 S ^XTMP("MPIF_SEEDING","STARTED")=%
"RTN","MPIFSEED",23,0)
 I '$D(^DPT("AICN"))&'$D(^DPT("ASCN2")) G DONE
"RTN","MPIFSEED",24,0)
 ; ^ No ICNs and no Subscriptions
"RTN","MPIFSEED",25,0)
 F  S DFN=$O(^DPT(DFN)) Q:DFN["A"  D
"RTN","MPIFSEED",26,0)
 .S CNT=CNT+1,SUB=""
"RTN","MPIFSEED",27,0)
 .I '(CNT#10000) W !,DFN
"RTN","MPIFSEED",28,0)
 .Q:'$D(^DPT(DFN,"MPI"))
"RTN","MPIFSEED",29,0)
 .S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIFSEED",30,0)
 .I $P(NODE,"^",5)'="" S ARRAY(991.05)="@" S SUB=0
"RTN","MPIFSEED",31,0)
 .S SUB=$$UPDATE^MPIFAPI(DFN,ARR)
"RTN","MPIFSEED",32,0)
 .; ^ cleanup subscriptions
"RTN","MPIFSEED",33,0)
 .I SUB=0 S SCN=SCN+1 ;subscription deleted
"RTN","MPIFSEED",34,0)
 .I +SUB=-1 S SCNE=SCNE+1,^XTMP("MPIF_SEEDING","SUB ERR",DFN)=""
"RTN","MPIFSEED",35,0)
 .; ^ error deleting subscription
"RTN","MPIFSEED",36,0)
 .D CHK(DFN,.AICN,.AICNL,.SSNX) ;check x-refs for ssn,aicn,aicnl
"RTN","MPIFSEED",37,0)
 .I $E($P(NODE,"^"),1,3)'=$P($$SITE^VASITE(),"^",3) S A31=$$A31^MPIFA31B(DFN) S:A31=0 XICN=XICN+1 S:+A31=-1 ^XTMP("MPIF_SEEDING","A31 ERR",DFN)=A31,A31E=A31E+1
"RTN","MPIFSEED",38,0)
 .; ^ generate A31 message to MPI
"RTN","MPIFSEED",39,0)
 I $D(^DPT("ASCN2")) K ^DPT("ASCN2") ; extra x-refs
"RTN","MPIFSEED",40,0)
DONE S ^XTMP("MPIF_SEEDING","TOTAL","SSN X-REF MISSING")=SSNX
"RTN","MPIFSEED",41,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","AICN X-REF MISSING")=AICN
"RTN","MPIFSEED",42,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","AICNL X-REF MISSING")=AICNL
"RTN","MPIFSEED",43,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","PROCESSED")=CNT
"RTN","MPIFSEED",44,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","A31 SENT")=XICN
"RTN","MPIFSEED",45,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","A31 ERR")=A31E
"RTN","MPIFSEED",46,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","SUB ERR")=SCNE
"RTN","MPIFSEED",47,0)
 S ^XTMP("MPIF_SEEDING","TOTAL","DELETED SUBS")=SCN
"RTN","MPIFSEED",48,0)
 D NOW^%DTC
"RTN","MPIFSEED",49,0)
 S ^XTMP("MPIF_SEEDING","STOPPED")=%
"RTN","MPIFSEED",50,0)
 K %
"RTN","MPIFSEED",51,0)
 Q
"RTN","MPIFSEED",52,0)
CHK(DFN,AICN,AICNL,SSNX) ;CHECK FOR BAD/MISSING X-REFS FOR AICN, AICNL, SSN
"RTN","MPIFSEED",53,0)
 N ICN,SSN,LOC,ST,STN,NODE
"RTN","MPIFSEED",54,0)
 Q:'$D(^DPT(DFN))
"RTN","MPIFSEED",55,0)
 S SSN=$P($G(^DPT(DFN,0)),"^",9)
"RTN","MPIFSEED",56,0)
 I SSN'="",'$D(^DPT("SSN",SSN,DFN)) S ^DPT("SSN",SSN,DFN)="" S SSNX=SSNX+1
"RTN","MPIFSEED",57,0)
 S NODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIFSEED",58,0)
 S ICN=$P(NODE,"^")
"RTN","MPIFSEED",59,0)
 I ICN'="",'$D(^DPT("AICN",ICN,DFN)) S ^DPT("AICN",ICN,DFN)="" S AICN=AICN+1
"RTN","MPIFSEED",60,0)
 S LOC=$P(NODE,"^",4),ST=$E(ICN,1,3),STN=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFSEED",61,0)
 I ST=STN,LOC="" S $P(NODE,"^",4)=1,^DPT("AICNL",1,DFN)="",AICNL=AICNL+1
"RTN","MPIFSEED",62,0)
 I ST'=STN,LOC'="" S $P(NODE,"^",4)="",AICNL=AICNL+1 K ^DPT("AICNL",1,DFN)
"RTN","MPIFSEED",63,0)
 I ST=STN,LOC'="",'$D(^DPT("AICNL",1,DFN)) S ^DPT("AICNL",1,DFN)="",AICNL=AICNL+1
"RTN","MPIFSEED",64,0)
 Q
"VER")
8.0^22.0
**END**
**END**
