Released DG*5.3*610 SEQ #561
Extracted from mail message
**KIDS**:DG*5.3*610^

**INSTALL NAME**
DG*5.3*610
"BLD",5734,0)
DG*5.3*610^REGISTRATION^0^3050309^y
"BLD",5734,4,0)
^9.64PA^^
"BLD",5734,"KRN",0)
^9.67PA^8989.52^19
"BLD",5734,"KRN",.4,0)
.4
"BLD",5734,"KRN",.401,0)
.401
"BLD",5734,"KRN",.402,0)
.402
"BLD",5734,"KRN",.403,0)
.403
"BLD",5734,"KRN",.5,0)
.5
"BLD",5734,"KRN",.84,0)
.84
"BLD",5734,"KRN",3.6,0)
3.6
"BLD",5734,"KRN",3.8,0)
3.8
"BLD",5734,"KRN",9.2,0)
9.2
"BLD",5734,"KRN",9.8,0)
9.8
"BLD",5734,"KRN",9.8,"NM",0)
^9.68A^9^5
"BLD",5734,"KRN",9.8,"NM",2,0)
DGENCD1^^0^B20644700
"BLD",5734,"KRN",9.8,"NM",5,0)
DGMTUTL1^^0^B9559583
"BLD",5734,"KRN",9.8,"NM",7,0)
DGMTU4^^0^B63886513
"BLD",5734,"KRN",9.8,"NM",8,0)
DGMTSCC^^0^B33232579
"BLD",5734,"KRN",9.8,"NM",9,0)
DGMTP^^0^B9158309
"BLD",5734,"KRN",9.8,"NM","B","DGENCD1",2)
 
"BLD",5734,"KRN",9.8,"NM","B","DGMTP",9)
 
"BLD",5734,"KRN",9.8,"NM","B","DGMTSCC",8)
 
"BLD",5734,"KRN",9.8,"NM","B","DGMTU4",7)
 
"BLD",5734,"KRN",9.8,"NM","B","DGMTUTL1",5)
 
"BLD",5734,"KRN",19,0)
19
"BLD",5734,"KRN",19.1,0)
19.1
"BLD",5734,"KRN",101,0)
101
"BLD",5734,"KRN",409.61,0)
409.61
"BLD",5734,"KRN",771,0)
771
"BLD",5734,"KRN",870,0)
870
"BLD",5734,"KRN",8989.51,0)
8989.51
"BLD",5734,"KRN",8989.52,0)
8989.52
"BLD",5734,"KRN",8994,0)
8994
"BLD",5734,"KRN","B",.4,.4)
 
"BLD",5734,"KRN","B",.401,.401)
 
"BLD",5734,"KRN","B",.402,.402)
 
"BLD",5734,"KRN","B",.403,.403)
 
"BLD",5734,"KRN","B",.5,.5)
 
"BLD",5734,"KRN","B",.84,.84)
 
"BLD",5734,"KRN","B",3.6,3.6)
 
"BLD",5734,"KRN","B",3.8,3.8)
 
"BLD",5734,"KRN","B",9.2,9.2)
 
"BLD",5734,"KRN","B",9.8,9.8)
 
"BLD",5734,"KRN","B",19,19)
 
"BLD",5734,"KRN","B",19.1,19.1)
 
"BLD",5734,"KRN","B",101,101)
 
"BLD",5734,"KRN","B",409.61,409.61)
 
"BLD",5734,"KRN","B",771,771)
 
"BLD",5734,"KRN","B",870,870)
 
"BLD",5734,"KRN","B",8989.51,8989.51)
 
"BLD",5734,"KRN","B",8989.52,8989.52)
 
"BLD",5734,"KRN","B",8994,8994)
 
"BLD",5734,"QUES",0)
^9.62^^
"BLD",5734,"REQB",0)
^9.611^6^4
"BLD",5734,"REQB",2,0)
DG*5.3*451^2
"BLD",5734,"REQB",4,0)
DG*5.3*542^2
"BLD",5734,"REQB",5,0)
DG*5.3*476^2
"BLD",5734,"REQB",6,0)
DG*5.3*300^2
"BLD",5734,"REQB","B","DG*5.3*300",6)
 
"BLD",5734,"REQB","B","DG*5.3*451",2)
 
"BLD",5734,"REQB","B","DG*5.3*476",5)
 
"BLD",5734,"REQB","B","DG*5.3*542",4)
 
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
610^3050309
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")
 
"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DGENCD1")
0^2^B20644700
"RTN","DGENCD1",1,0)
DGENCD1 ;ALB/CJM,Zoltan,PHH,BRM - Catastrophic Disability Protocols; 02/17/2005
"RTN","DGENCD1",2,0)
 ;;5.3;Registration;**121,232,387,451,610**;Aug 13,1993
"RTN","DGENCD1",3,0)
 ;
"RTN","DGENCD1",4,0)
EN(DFN) ;Entry point for DGENCD CATASTROPHIC DISABILITY protocol
"RTN","DGENCD1",5,0)
 D EN^DGENLCD(DFN)
"RTN","DGENCD1",6,0)
 D:DFN BLD^DGENL
"RTN","DGENCD1",7,0)
 Q
"RTN","DGENCD1",8,0)
 ;
"RTN","DGENCD1",9,0)
ADDCD ;Entry point for DGENCD ADD/EDIT CATASTROPHIC DISABILITY protocol 
"RTN","DGENCD1",10,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGENCD1",11,0)
 ; Output -- VALMBCK  R   =Refresh screen
"RTN","DGENCD1",12,0)
 N YN,EXIT,PRI,CDSITE
"RTN","DGENCD1",13,0)
 S VALMBCK="",EXIT=0
"RTN","DGENCD1",14,0)
 D FULL^VALM1
"RTN","DGENCD1",15,0)
 I $$CDTYPE^DGENCDA(DFN) D  ;was determination by physical exam?
"RTN","DGENCD1",16,0)
 .S CDSITE=$$CHKSITE^DGENCDA(DFN)
"RTN","DGENCD1",17,0)
 .I CDSITE D  ;CD was determined by this site
"RTN","DGENCD1",18,0)
 ..D BMES^XPDUTL("This veteran is currently determined to be Catastrophically")
"RTN","DGENCD1",19,0)
 ..D MES^XPDUTL("Disabled.  You may not change this evaluation unless it is due")
"RTN","DGENCD1",20,0)
 ..D MES^XPDUTL("to an error in data entry.")
"RTN","DGENCD1",21,0)
 ..S YN=$$YN("Is this edit due to an error in data entry")
"RTN","DGENCD1",22,0)
 ..D:"N^"[$E($G(YN))
"RTN","DGENCD1",23,0)
 ...D BMES^XPDUTL("Additional CD evaluations are not necessary for this")
"RTN","DGENCD1",24,0)
 ...D MES^XPDUTL("Veteran, as they are currently determined to be CD.  If")
"RTN","DGENCD1",25,0)
 ...D MES^XPDUTL("this is an edit due to an error, please return to the")
"RTN","DGENCD1",26,0)
 ...D MES^XPDUTL("Add/Edit action and answer YES to this prompt.")
"RTN","DGENCD1",27,0)
 ...S EXIT=1
"RTN","DGENCD1",28,0)
 .E  D  ;  CD was determined by another site
"RTN","DGENCD1",29,0)
 ..S SITEINF=$$NS^XUAF4($P(CDSITE,"^",2))
"RTN","DGENCD1",30,0)
 ..D BMES^XPDUTL("This Catastrophic Disability evaluation was entered at Site:"_$P(SITEINF,"^",2))
"RTN","DGENCD1",31,0)
 ..D MES^XPDUTL("Please Contact Site "_$P(SITEINF,"^"))
"RTN","DGENCD1",32,0)
 ..D MES^XPDUTL("if it is necessary to edit this evaluation.")
"RTN","DGENCD1",33,0)
 ..S EXIT=1
"RTN","DGENCD1",34,0)
 ..S DIR(0)="EA",DIR("A")="Press return to continue..." D ^DIR
"RTN","DGENCD1",35,0)
 I EXIT S VALMBCK="R" Q
"RTN","DGENCD1",36,0)
 ;
"RTN","DGENCD1",37,0)
 S PRI=$$PRIORITY^DGENA(DFN)
"RTN","DGENCD1",38,0)
 I PRI,PRI'>4 D
"RTN","DGENCD1",39,0)
 . W:$X !
"RTN","DGENCD1",40,0)
 . W !,"According to the veteran's current enrollment record, the",!
"RTN","DGENCD1",41,0)
 . W "assignment of a Catastrophically Disabled Status will not",!
"RTN","DGENCD1",42,0)
 . W "improve his/her enrollment priority.",!!
"RTN","DGENCD1",43,0)
 . S YN=$$YN("Do you still want to perform a review")
"RTN","DGENCD1",44,0)
 . I "N^"[$E($G(YN)) S EXIT=1
"RTN","DGENCD1",45,0)
 I 'EXIT D EDITCD^DGENCD(DFN),INIT^DGENLCD
"RTN","DGENCD1",46,0)
 S VALMBCK="R"
"RTN","DGENCD1",47,0)
 Q
"RTN","DGENCD1",48,0)
 ;
"RTN","DGENCD1",49,0)
DELETECD ;Entry point for DGENCD DELETE CATASTROPHIC DISABILITY protocol 
"RTN","DGENCD1",50,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGENCD1",51,0)
 ; Output -- VALMBCK  R   =Refresh screen
"RTN","DGENCD1",52,0)
 S VALMBCK=""
"RTN","DGENCD1",53,0)
 D FULL^VALM1
"RTN","DGENCD1",54,0)
 I $$GET^DGENCDA(DFN,.DGCD),'$D(DGCD("DIAG")) D
"RTN","DGENCD1",55,0)
 .W !!,">>>No Catastrophic Disabilities exist for this veteran.<<<"
"RTN","DGENCD1",56,0)
 .S DIR(0)="EA",DIR("A")="Press return to continue..." D ^DIR
"RTN","DGENCD1",57,0)
 E  D
"RTN","DGENCD1",58,0)
 .I $$RUSURE(DFN) D
"RTN","DGENCD1",59,0)
 ..I $$DELETE^DGENCDA1(DFN)
"RTN","DGENCD1",60,0)
 D INIT^DGENLCD
"RTN","DGENCD1",61,0)
 S VALMBCK="R"
"RTN","DGENCD1",62,0)
 Q
"RTN","DGENCD1",63,0)
 ;
"RTN","DGENCD1",64,0)
RUSURE(DFN) ;
"RTN","DGENCD1",65,0)
 ;Description: Asks user 'Are you sure?'
"RTN","DGENCD1",66,0)
 ;Input: DFN is the patient ien
"RTN","DGENCD1",67,0)
 ;Output: Function Value returns 0 or 1
"RTN","DGENCD1",68,0)
 ;
"RTN","DGENCD1",69,0)
 N DIR,SITE,SITEINF,DIROUT,DIRUT,DTOUT,DUOUT,NOERR
"RTN","DGENCD1",70,0)
 S SITE=$$CHKSITE^DGENCDA(DFN)
"RTN","DGENCD1",71,0)
 I '$P(SITE,"^") D  Q 0   ;CD was not determined at this site
"RTN","DGENCD1",72,0)
 .S SITEINF=$$NS^XUAF4($P(SITE,"^",2))
"RTN","DGENCD1",73,0)
 .D BMES^XPDUTL("This Catastrophic Disability evaluation was entered at Site:"_$P(SITEINF,"^",2))
"RTN","DGENCD1",74,0)
 .D MES^XPDUTL("Please Contact Site "_$P(SITEINF,"^"))
"RTN","DGENCD1",75,0)
 .D MES^XPDUTL("if it is necessary to delete this evaluation.")
"RTN","DGENCD1",76,0)
 ; was this entered in error?
"RTN","DGENCD1",77,0)
 I $$CDTYPE^DGENCDA(DFN) D  Q:$G(NOERR) 0
"RTN","DGENCD1",78,0)
 .D BMES^XPDUTL("This Veteran is currently determined to be Catastrophically Disabled, you")
"RTN","DGENCD1",79,0)
 .D MES^XPDUTL("may not delete this evaluation unless it is due to an error in data entry.")
"RTN","DGENCD1",80,0)
 .S DIR(0)="Y",DIR("B")="NO"
"RTN","DGENCD1",81,0)
 .S DIR("A")="Is this deletion due to an error in data entry"
"RTN","DGENCD1",82,0)
 .D ^DIR
"RTN","DGENCD1",83,0)
 .I $G(DIRUT)!$G(DUOUT)!$G(DIROUT)!$G(DTOUT)!('$G(Y)) S NOERR=1
"RTN","DGENCD1",84,0)
 .K DIR,Y
"RTN","DGENCD1",85,0)
 ;
"RTN","DGENCD1",86,0)
 S DIR(0)="Y"
"RTN","DGENCD1",87,0)
 S DIR("A")="Are you sure that the Catastrophic Disability should be deleted"
"RTN","DGENCD1",88,0)
 S DIR("B")="NO"
"RTN","DGENCD1",89,0)
 I $$HASCAT^DGENCDA(DFN) D
"RTN","DGENCD1",90,0)
 . W !!,">>> Deleting the Catastrophic Disability information will also delete all <<<",!
"RTN","DGENCD1",91,0)
 . W ">>>  supporting fields, including Diagnoses, Procedures and Conditions.   <<<",!
"RTN","DGENCD1",92,0)
 D ^DIR
"RTN","DGENCD1",93,0)
 Q:$D(DIRUT) 0
"RTN","DGENCD1",94,0)
 Q Y
"RTN","DGENCD1",95,0)
 ;
"RTN","DGENCD1",96,0)
YN(PROMPT,DFLT) ; Ask user a yes/no question.
"RTN","DGENCD1",97,0)
 S DFLT=$E($G(DFLT,"N"))
"RTN","DGENCD1",98,0)
 N YN,%,%Y
"RTN","DGENCD1",99,0)
 F  D  Q:"YN^"[YN
"RTN","DGENCD1",100,0)
 . W PROMPT
"RTN","DGENCD1",101,0)
 . S %=$S(DFLT="N":2,DFLT="Y":1,1:0)
"RTN","DGENCD1",102,0)
 . D YN^DICN
"RTN","DGENCD1",103,0)
 . W !
"RTN","DGENCD1",104,0)
 . S YN=$S(%=-1:"^",%=1:"Y",%=2:"N",1:"?")
"RTN","DGENCD1",105,0)
 . I YN["?" W ?5,"You can just enter 'Y' or 'N'.",!!
"RTN","DGENCD1",106,0)
 Q YN
"RTN","DGMTP")
0^9^B9158309
"RTN","DGMTP",1,0)
DGMTP ;ALB/RMO,CAW,EG - Print Means Test 10-10F ; 03/07/2005
"RTN","DGMTP",2,0)
 ;;5.3;Registration;**45,300,610**;Aug 13, 1993
"RTN","DGMTP",3,0)
 ;
"RTN","DGMTP",4,0)
EN ;Entry point to select a means test to print
"RTN","DGMTP",5,0)
 S DIC="^DPT(",DIC(0)="AEMQ" W ! D ^DIC K DIC G Q:Y<0 S DFN=+Y
"RTN","DGMTP",6,0)
 ;
"RTN","DGMTP",7,0)
DT S DIC("A")="Select DATE OF TEST: "
"RTN","DGMTP",8,0)
 I $D(^DGMT(408.31,+$$LST^DGMTU(DFN,"",DGMTYPT),0)),"^1^3^"'[("^"_$P(^(0),"^",3)_"^") S DIC("B")=$P(^(0),"^")
"RTN","DGMTP",9,0)
 S DIC("S")="I $P(^(0),U,2)=DFN,""^1^3^""'[(U_$P(^(0),U,3)_U)"
"RTN","DGMTP",10,0)
 S DIC="^DGMT(408.31,",DIC(0)="EQ" W ! D EN^DGMTLK K DIC G Q:Y<0
"RTN","DGMTP",11,0)
 S DGMTI=+Y,DGMTDT=$P(Y,"^",2)
"RTN","DGMTP",12,0)
 ;
"RTN","DGMTP",13,0)
DEV ;Ask device
"RTN","DGMTP",14,0)
 S DGPGM="START^DGMTP",DGVAR="DFN^DGMTI^DGMTDT^DGMTYPT"
"RTN","DGMTP",15,0)
 ;
"RTN","DGMTP",16,0)
 ;added code to not allow a slave printer to be selected
"RTN","DGMTP",17,0)
 ;eg 03/07/2005
"RTN","DGMTP",18,0)
 W !!,*7,"THIS OUTPUT REQUIRES 132 COLUMN OUTPUT TO THE PRINTER."
"RTN","DGMTP",19,0)
 W !,"DO NOT SELECT A SLAVE DEVICE FOR QUEUED OUTPUT.",!
"RTN","DGMTP",20,0)
 S %ZIS="QM",%ZIS("S")="I $P($G(^(1)),U)'[""SLAVE""&($P($G(^(0)),U)'[""SLAVE"")",%ZIS("B")="",IOP="Q"
"RTN","DGMTP",21,0)
 D ZIS^DGUTQ
"RTN","DGMTP",22,0)
 I POP D  G Q
"RTN","DGMTP",23,0)
 . I $D(IO("Q")) K IO("Q")
"RTN","DGMTP",24,0)
 . U 0 W !,"Print request cancelled!"
"RTN","DGMTP",25,0)
 . Q
"RTN","DGMTP",26,0)
 I IO=IO(0),$E(IOST,1,2)="C-" W !,*7,"CANNOT QUEUE TO HOME DEVICE!",! G DEV
"RTN","DGMTP",27,0)
 Q
"RTN","DGMTP",28,0)
 ;
"RTN","DGMTP",29,0)
START ;Entry point to print a means test
"RTN","DGMTP",30,0)
 ; Input  -- DFN     Patient IEN
"RTN","DGMTP",31,0)
 ;           DGMTDT  Date of Test
"RTN","DGMTP",32,0)
 ;           DGMTI   Annual Means Test IEN
"RTN","DGMTP",33,0)
 ;           DGOPT   Registration Flag
"RTN","DGMTP",34,0)
 ;           DGMTYPT Type of Test 1=MT 2=COPAY
"RTN","DGMTP",35,0)
 ; Output -- Print of 10-10F
"RTN","DGMTP",36,0)
 U IO
"RTN","DGMTP",37,0)
 S DGUL=$S('($D(IOST)#2):"-",IOST["C-":"-",1:"_"),(DGLNE,DGLNE1)="",$P(DGLNE,"=",131)="",$P(DGLNE1,DGUL,131)=""
"RTN","DGMTP",38,0)
 D ALL^DGMTU21(DFN,"V",DGMTDT,"IPR",$S($G(DGMTI):DGMTI,1:""))
"RTN","DGMTP",39,0)
 G Q:'$D(DGINC("V"))!('$D(DGINR("V")))!('$D(DGREL("V")))
"RTN","DGMTP",40,0)
 S DGVPRI=+DGREL("V"),DGVINI=DGINC("V"),DGVIRI=DGINR("V")
"RTN","DGMTP",41,0)
 S DGLY=$$LYR^DGMTSCU1(DGMTDT) D PAR^DGMTSCU G Q:DGMTPAR=""
"RTN","DGMTP",42,0)
 D SET^DGMTSCU2,SET^DGMTSC31
"RTN","DGMTP",43,0)
 S DGMT0=$G(^DGMT(408.31,DGMTI,0))
"RTN","DGMTP",44,0)
 D EN^DGMTP1
"RTN","DGMTP",45,0)
 ;
"RTN","DGMTP",46,0)
Q K DGCAT,DGDC,DGDCS,DGDEP,DGDET,DGFL,DGIN0,DGIN1,DGIN2,DGINC,DGINR,DGINT,DGINTF,DGLNE,DGLNE1,DGLP,DGLY,DGMT0,DGMTPAR,DGMTS,DGNC,DGND,DGNWT,DGNWTF,DGPGE,DGPGM,DGREL,DGSP,DGTYC,DGTHA,DGTHB,DGUL,DGVINI,DGVIRI,DGVIR0,DGVPRI
"RTN","DGMTP",47,0)
 K DTOUT,DUOUT,POP,X,Y
"RTN","DGMTP",48,0)
 I '$D(DGOPT) K DFN,DGMTDT,DGMTI W ! D CLOSE^DGUTQ
"RTN","DGMTP",49,0)
 Q
"RTN","DGMTP",50,0)
 ;
"RTN","DGMTP",51,0)
HD ;Print header
"RTN","DGMTP",52,0)
 W @IOF,!,$$NAME^DGMTU1(DGVPRI),?116,$$SSN^DGMTU1(DGVPRI),!,DGLNE
"RTN","DGMTP",53,0)
 Q
"RTN","DGMTP",54,0)
 ;
"RTN","DGMTP",55,0)
FT ;Print footer
"RTN","DGMTP",56,0)
 N Y,%
"RTN","DGMTP",57,0)
 W !,DGLNE S Y=+DGMT0 X ^DD("DD") W !,"Date of Test: ",Y
"RTN","DGMTP",58,0)
 S Y=$P(DGMT0,"^",7) X ^DD("DD") W ?31,"Completion Date/time: ",Y
"RTN","DGMTP",59,0)
 ;
"RTN","DGMTP",60,0)
 ; retrieve who completed the means test and print initials
"RTN","DGMTP",61,0)
 N X,INI S X=$P(DGMT0,U,6),INI=""
"RTN","DGMTP",62,0)
 I X'="" S INI=$$GET1^DIQ(200,X,1)
"RTN","DGMTP",63,0)
 I INI'="" S INI=INI_"/"_X
"RTN","DGMTP",64,0)
 W ?75,"By: ",INI
"RTN","DGMTP",65,0)
 ;
"RTN","DGMTP",66,0)
 D NOW^%DTC S Y=% X ^DD("DD") W ?98,"Printed: ",Y
"RTN","DGMTP",67,0)
 W !!!!,"VA FORM 10-10F",?120,"PAGE ",DGPGE
"RTN","DGMTP",68,0)
 W:DGPGE=2 @IOF
"RTN","DGMTP",69,0)
 Q
"RTN","DGMTSCC")
0^8^B33232579
"RTN","DGMTSCC",1,0)
DGMTSCC ;ALB/RMO,CAW,LBD,EG - Means Test Screen Completion ; 03/08/2005
"RTN","DGMTSCC",2,0)
 ;;5.3;Registration;**33,45,130,438,332,433,462,456,610**;Aug 13, 1993
"RTN","DGMTSCC",3,0)
 ;
"RTN","DGMTSCC",4,0)
 ; Input  -- DFN      Patient IEN
"RTN","DGMTSCC",5,0)
 ;           DGMTACT  Means Test Action
"RTN","DGMTSCC",6,0)
 ;           DGMTDT   Date of Test
"RTN","DGMTSCC",7,0)
 ;           DGMTYPT  Type of Test 1=MT 2=COPAY
"RTN","DGMTSCC",8,0)
 ;           DGMTPAR  Annual Means Test Parameters
"RTN","DGMTSCC",9,0)
 ;           DGVINI   Veteran Individual Annual Income IEN
"RTN","DGMTSCC",10,0)
 ;           DGVIRI   Veteran Income Relation IEN
"RTN","DGMTSCC",11,0)
 ;           DGVPRI   Veteran Patient Relation IEN
"RTN","DGMTSCC",12,0)
 ;           DGMTNWC  Net Worth Calculation flag
"RTN","DGMTSCC",13,0)
 ; Output -- DGERR    1=INCOMPLETE and 0=COMPLETE
"RTN","DGMTSCC",14,0)
 ;
"RTN","DGMTSCC",15,0)
EN N DGCAT,DGCOMF,DGDC,DGDET,DGIN0,DGIN1,DGIN2,DGINT,DGINTF,DGMTS,DGNC,DGND,DGNWT,DGNWTF,DGREF1,DGSP,DGTYC,DGTHA,DGTHB,DGVIR0,DGCOPS,DGCOST,DGTHG
"RTN","DGMTSCC",16,0)
 S DGERR=0
"RTN","DGMTSCC",17,0)
 I DGMTACT="ADD" D COM I 'Y!($D(DTOUT))!($D(DUOUT)) G Q
"RTN","DGMTSCC",18,0)
 S DGCOMF=1 D DEP^DGMTSCU2,INC^DGMTSCU3
"RTN","DGMTSCC",19,0)
 I 'DGINTF,'DGNWTF S DGREF1="" D REF G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",20,0)
 D CAT^DGMTSCU2,STA^DGMTSCU2
"RTN","DGMTSCC",21,0)
 D CHK I DGERR W !?3,*7,$S(DGMTYPT=1:"Means",1:"Copay")_" test cannot be completed." G Q
"RTN","DGMTSCC",22,0)
 I DGMTYPT=1,DGTYC="M",(DGNWT-DGDET)+$S(DGMTNWC:0,1:DGINT)'<$P(DGMTPAR,"^",8) D ADJ G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",23,0)
 I DGMTYPT=2,DGCAT="P" D ADJ G Q:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",24,0)
 S DA=DGMTI,DIE="^DGMT(408.31,",DIE("NO^")="",DR="[DGMT ENTER/EDIT COMPLETION]" D ^DIE K DA,DIE,DR I '$D(DGFIN) S DGERR=1 G Q
"RTN","DGMTSCC",25,0)
 I DGMTACT="EDT",DGMTDT>DT D
"RTN","DGMTSCC",26,0)
 .N DATA S (DATA(.01),DATA(.07))=DT,DATA(2)=1 I $$UPD^DGENDBS(408.31,DGMTI,.DATA)
"RTN","DGMTSCC",27,0)
 W:DGMTYPT=1 !?3,"...means test status is ",$P($$MTS^DGMTU(DFN,DGMTS),"^"),"..."
"RTN","DGMTSCC",28,0)
 W:DGMTYPT=2 !?3,"...copay test status is ",$S(DGCAT="E":"EXEMPT",DGCAT="M":"NON-EXEMPT",DGCAT="P":"PENDING ADJUDICATION",1:"INCOMPLETE"),"..."
"RTN","DGMTSCC",29,0)
 D PRT
"RTN","DGMTSCC",30,0)
 ;
"RTN","DGMTSCC",31,0)
Q K DGFIN,DGREF,DTOUT,DUOUT,Y
"RTN","DGMTSCC",32,0)
 Q
"RTN","DGMTSCC",33,0)
 ;
"RTN","DGMTSCC",34,0)
COM ;Check if user wants to complete the means test
"RTN","DGMTSCC",35,0)
 N DIR
"RTN","DGMTSCC",36,0)
 S DIR("A")="Do you wish to complete the "_$S(DGMTYPT=1:"means",1:"copay exemption")_" test"
"RTN","DGMTSCC",37,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","DGMTSCC",38,0)
 ; The following was added for LTC Copay Phase II (DG*5.3*433)
"RTN","DGMTSCC",39,0)
 I DGMTYPT=4,'Y D
"RTN","DGMTSCC",40,0)
 .W !,"NOTE: If you do not complete the LTC copay exemption test, the incomplete test",!?6,"will be deleted."
"RTN","DGMTSCC",41,0)
 .S DIR("A")="Do you wish to complete the copay exemption test"
"RTN","DGMTSCC",42,0)
 .S DIR("B")="YES",DIR(0)="Y" D ^DIR
"RTN","DGMTSCC",43,0)
 Q
"RTN","DGMTSCC",44,0)
 ;
"RTN","DGMTSCC",45,0)
REF ;Check if patient declines to provide income information
"RTN","DGMTSCC",46,0)
 N DIR,Y
"RTN","DGMTSCC",47,0)
 S DIR("A")="DECLINES TO GIVE INCOME INFORMATION"
"RTN","DGMTSCC",48,0)
 I $P($G(^DGMT(408.31,DGMTI,0)),"^",14)]"" S DIR("B")=$$YN^DGMTSCU1($P(^(0),"^",14))
"RTN","DGMTSCC",49,0)
 S DIR(0)="408.31,.14" D ^DIR K DIR G REFQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",50,0)
 S:Y DGREF="" Q:'$D(DGREF)!($D(DGREF1))!(DGMTYPT'=1)  S DGCAT="C" D STA^DGMTSCU2
"RTN","DGMTSCC",51,0)
REFQ Q
"RTN","DGMTSCC",52,0)
 ;
"RTN","DGMTSCC",53,0)
CHK ;Check if means test can be completed
"RTN","DGMTSCC",54,0)
 N DGA,DGD,DGDEP,DGREL,DGL,DGM,I
"RTN","DGMTSCC",55,0)
 D GETREL^DGMTU11(DFN,"CS",$$LYR^DGMTSCU1(DGMTDT),$S($G(DGMTI):DGMTI,1:""))
"RTN","DGMTSCC",56,0)
 S DGM=$P(DGVIR0,"^",5),DGL=$P(DGVIR0,"^",6),DGA=$P(DGVIR0,"^",7),DGD=$P(DGVIR0,"^",8)
"RTN","DGMTSCC",57,0)
 I DGM']""!(DGM&(DGL']""))!(DGM&('DGL)&(DGA']"")) W !?3,"Marital section must be completed." S DGERR=1
"RTN","DGMTSCC",58,0)
 I DGM,'$D(DGREL("S")),'$D(DGREF) W !?3,"Married is 'YES'.  An active spouse for this means test does not exist." S DGERR=1
"RTN","DGMTSCC",59,0)
 I 'DGM,$D(DGREL("S")) W !?3,"An active spouse exists for this means test. Married should be 'YES'." S DGERR=1
"RTN","DGMTSCC",60,0)
 I DGD']"" W !?3,"Dependent Children section must be completed." S DGERR=1
"RTN","DGMTSCC",61,0)
 I DGD,'$D(DGREL("C")) W !?3,"Dependent Children is 'YES'.  No active children exist." S DGERR=1
"RTN","DGMTSCC",62,0)
 I 'DGD,$D(DGREL("C")) W !?3,"Active children exist.  Dependent Children should be 'YES'." S DGERR=1
"RTN","DGMTSCC",63,0)
 I DGMTYPT=1,'$D(DGREF),DGTYC="M",'DGNWTF W !?3,"A status of ",$$GETNAME^DGMTH(DGMTS)," requires property information." S DGERR=1
"RTN","DGMTSCC",64,0)
 I DGMTYPT=2,'DGNWTF,DGCAT="E",$$ASKNW^DGMTCOU W !?3,"Patient is in an 'EXEMPT' status and requires property information." S DGERR=1
"RTN","DGMTSCC",65,0)
 I DGDET>DGINT W !?3,"Patient's deductible expenses cannot exceed income." S DGERR=1
"RTN","DGMTSCC",66,0)
 Q:$G(DGERR)
"RTN","DGMTSCC",67,0)
 N CNT,ACT,DGDEP,FLAG,DGINCP
"RTN","DGMTSCC",68,0)
 D INIT^DGDEP S CNT=0 D
"RTN","DGMTSCC",69,0)
 .F  S CNT=$O(DGDEP(CNT)) Q:'CNT  I $P(DGDEP(CNT),U,2)="SPOUSE" D  Q:$G(DGERR)
"RTN","DGMTSCC",70,0)
 ..D GETIENS^DGMTU2(DFN,$P(DGDEP(CNT),U,20),DGMTDT)
"RTN","DGMTSCC",71,0)
 ..S DGINCP=$G(^DGMT(408.22,+DGIRI,"MT")) S:DGINCP FLAG=$G(FLAG)+1
"RTN","DGMTSCC",72,0)
 ..I $G(FLAG)>1 W !?3,"Patient has more than one spouse for this means test." S DGERR=1
"RTN","DGMTSCC",73,0)
 Q
"RTN","DGMTSCC",74,0)
 ;
"RTN","DGMTSCC",75,0)
ADJ ;Adjudicate the means test
"RTN","DGMTSCC",76,0)
 N DIR,Y
"RTN","DGMTSCC",77,0)
 S DIR("?",1)="Since assets exceed the threshold, the "_$S(DGMTYPT=1:"means",1:"copay")_" test can"
"RTN","DGMTSCC",78,0)
 S DIR("?",2)="be sent to adjudication.  If the "_$S(DGMTYPT=1:"means",1:"copay")_" test is not"
"RTN","DGMTSCC",79,0)
 S DIR("?")="adjudicated, the patient will be placed in "_$S(DGMTYPT=1&(DGTHG>DGTHA):"GMT Copay Required",DGMTYPT=1:"MT Copay Required",1:"Non-exempt")_" status."
"RTN","DGMTSCC",80,0)
 S DIR("A")="Do you wish to send this case to adjudication"
"RTN","DGMTSCC",81,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR G ADJQ:$D(DTOUT)!($D(DUOUT))
"RTN","DGMTSCC",82,0)
 S DGCAT=$S(Y:"P",DGMTYPT=1&(DGTHG>DGTHA):"G",DGMTYPT=1:"C",1:"N") D STA^DGMTSCU2
"RTN","DGMTSCC",83,0)
ADJQ Q
"RTN","DGMTSCC",84,0)
 ;
"RTN","DGMTSCC",85,0)
PRT ;Print the means test 10-10F
"RTN","DGMTSCC",86,0)
 N DIR,Y
"RTN","DGMTSCC",87,0)
 S DIR("A")="PRINT 10-10F"
"RTN","DGMTSCC",88,0)
 S DIR("B")="YES",DIR(0)="Y" D ^DIR G PRTQ:'Y!($D(DTOUT))!($D(DUOUT))
"RTN","DGMTSCC",89,0)
 D QUE
"RTN","DGMTSCC",90,0)
PRTQ Q
"RTN","DGMTSCC",91,0)
 ;
"RTN","DGMTSCC",92,0)
QUE ;Ask device and queue output
"RTN","DGMTSCC",93,0)
 ;If you don't have a valid device,
"RTN","DGMTSCC",94,0)
 ;from the call to %ZIS (returns POP=1)
"RTN","DGMTSCC",95,0)
 ;(e.g. entering ^ at device prompt) 
"RTN","DGMTSCC",96,0)
 ;then quit out before going
"RTN","DGMTSCC",97,0)
 ;to TASKMAN eg 01/27/2005
"RTN","DGMTSCC",98,0)
 I '$D(DGIO(10)) D QUE2 I POP D  Q
"RTN","DGMTSCC",99,0)
 .I $D(IO("Q")) K IO("Q")
"RTN","DGMTSCC",100,0)
 .K ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","DGMTSCC",101,0)
 .W !,"PRINT REQUEST CANCELLED!"
"RTN","DGMTSCC",102,0)
 .Q
"RTN","DGMTSCC",103,0)
 K:$D(IO("Q")) IO("Q")
"RTN","DGMTSCC",104,0)
 S ZTRTN="START^DGMTP",ZTDTH=$H,ZTDESC="Print 10-10F"
"RTN","DGMTSCC",105,0)
 F I="DFN","DGMTI","DGMTDT","DGMTYPT" S ZTSAVE(I)=""
"RTN","DGMTSCC",106,0)
 S ZTIO=$S($D(DGIO(10)):DGIO(10),1:ION) D ^%ZTLOAD
"RTN","DGMTSCC",107,0)
 W !,$S($D(ZTSK):"REQUEST QUEUED!",1:"REQUEST CANCELLED!")
"RTN","DGMTSCC",108,0)
 K ZTDTH,ZTIO,ZTRTN,ZTSAVE,ZTSK
"RTN","DGMTSCC",109,0)
 Q
"RTN","DGMTSCC",110,0)
QUE2 ;
"RTN","DGMTSCC",111,0)
 W !!,*7,"THIS OUTPUT REQUIRES 132 COLUMN OUTPUT TO THE PRINTER."
"RTN","DGMTSCC",112,0)
 W !,"DO NOT SELECT A SLAVE DEVICE FOR QUEUED OUTPUT.",!
"RTN","DGMTSCC",113,0)
 S %ZIS="QM",%ZIS("S")="I $P($G(^(1)),U)'[""SLAVE""&($P($G(^(0)),U)'[""SLAVE"")",%ZIS("B")="",IOP="Q"
"RTN","DGMTSCC",114,0)
 D ^%ZIS G Q:POP
"RTN","DGMTSCC",115,0)
 I IO=IO(0),$E(IOST,1,2)="C-" W !,*7,"CANNOT QUEUE TO HOME DEVICE!",! G QUE2
"RTN","DGMTSCC",116,0)
 Q
"RTN","DGMTU4")
0^7^B63886513
"RTN","DGMTU4",1,0)
DGMTU4 ;ALB/CJM,SCG,LBD,EG MEANS TEST UTILITES ; 03/09/2005
"RTN","DGMTU4",2,0)
 ;;5.3;Registration;**182,267,285,347,454,456,476,610**;Aug 13, 1993
"RTN","DGMTU4",3,0)
 ;
"RTN","DGMTU4",4,0)
GETSITE(DUZ) ;
"RTN","DGMTU4",5,0)
 ;Descripition:  Gets the users station number.  If not found, it will
"RTN","DGMTU4",6,0)
 ;return the station number of the primary facility.
"RTN","DGMTU4",7,0)
 ;
"RTN","DGMTU4",8,0)
 ;Input:
"RTN","DGMTU4",9,0)
 ;      DUZ array, pass by reference
"RTN","DGMTU4",10,0)
 ;Output:
"RTN","DGMTU4",11,0)
 ;      Function Value - station number with suffix
"RTN","DGMTU4",12,0)
 N FACILITY,STATION
"RTN","DGMTU4",13,0)
 S FACILITY=""
"RTN","DGMTU4",14,0)
 S:($G(DUZ)'=.5) FACILITY=$G(DUZ(2))
"RTN","DGMTU4",15,0)
 I 'FACILITY S FACILITY=+$$SITE^VASITE()
"RTN","DGMTU4",16,0)
 S:FACILITY STATION=$P($G(^DIC(4,FACILITY,99)),"^")
"RTN","DGMTU4",17,0)
 Q $G(STATION)
"RTN","DGMTU4",18,0)
 ;
"RTN","DGMTU4",19,0)
DATETIME(MTIEN) ;
"RTN","DGMTU4",20,0)
 ;Writes date/time stamp to means test record
"RTN","DGMTU4",21,0)
 N DATA
"RTN","DGMTU4",22,0)
 Q:$G(IVMZ10)="UPLOAD IN PROGRESS"
"RTN","DGMTU4",23,0)
 S DATA(2.02)=$$NOW^XLFDT
"RTN","DGMTU4",24,0)
 I $G(MTIEN),$D(^DGMT(408.31,MTIEN,0)) I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",25,0)
 Q
"RTN","DGMTU4",26,0)
SAVESTAT(MTIEN,DGERR) ;
"RTN","DGMTU4",27,0)
 ;Save the Test Determined Status (#2.03) in the ANNUAL MEANS TEST file
"RTN","DGMTU4",28,0)
 ;(#408.31)
"RTN","DGMTU4",29,0)
 ;
"RTN","DGMTU4",30,0)
 ;Input:
"RTN","DGMTU4",31,0)
 ;      MTIEN - IEN of 408.31
"RTN","DGMTU4",32,0)
 ;      DGERR  - (optional) 1 - Means or Copay Test is incomplete
"RTN","DGMTU4",33,0)
 ;                          0 - Means or Copay Test is complete       
"RTN","DGMTU4",34,0)
 ;
"RTN","DGMTU4",35,0)
 ;only current statuses of P, A, or C for Means Tests and
"RTN","DGMTU4",36,0)
 ;current status of M, or E for Copay Tests will be stored.
"RTN","DGMTU4",37,0)
 ;
"RTN","DGMTU4",38,0)
 ;if test is incomplete the Test Determined Status will be deleted.
"RTN","DGMTU4",39,0)
 ;
"RTN","DGMTU4",40,0)
 Q:('$G(MTIEN))
"RTN","DGMTU4",41,0)
 ;
"RTN","DGMTU4",42,0)
 N CODE,DATA,NODE0,TYPE
"RTN","DGMTU4",43,0)
 I $G(DGERR) S DATA(2.03)="" G SET
"RTN","DGMTU4",44,0)
 S NODE0=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU4",45,0)
 S TYPE=$P(NODE0,"^",19)
"RTN","DGMTU4",46,0)
 S CODE=$$GETCODE^DGMTH($P(NODE0,"^",3))
"RTN","DGMTU4",47,0)
 S:CODE="A" (DATA(.11),DATA(.14))=""
"RTN","DGMTU4",48,0)
 S DATA(2.03)=""
"RTN","DGMTU4",49,0)
 I TYPE=1,(CODE="N") Q
"RTN","DGMTU4",50,0)
 I TYPE=2,(CODE="L") Q
"RTN","DGMTU4",51,0)
 I TYPE=1,(CODE'=""),"CPAG"[CODE D
"RTN","DGMTU4",52,0)
 .S DATA(2.03)=$P(NODE0,"^",3)
"RTN","DGMTU4",53,0)
 .I $P(NODE0,"^",20) D
"RTN","DGMTU4",54,0)
 ..S DATA(2.03)=$$GETSTAT^DGMTH($S(CODE="P":"P",CODE="A"&(($P(NODE0,U,4)-$P(NODE0,U,15))'>$P(NODE0,U,27)):"G",1:"C"),1)
"RTN","DGMTU4",55,0)
 I TYPE=2,(CODE'=""),"ME"[CODE S DATA(2.03)=$P(NODE0,"^",3)
"RTN","DGMTU4",56,0)
SET I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",57,0)
 Q
"RTN","DGMTU4",58,0)
MTPRIME(MTIEN) ;
"RTN","DGMTU4",59,0)
 ;Makes the means test MTIEN primary
"RTN","DGMTU4",60,0)
 ;
"RTN","DGMTU4",61,0)
 N DGREQF,DGDOM1,DGADDF,DGMSGF,DGMTACT,DGMTI,DGMTINF,DGMTP,DGMTA,TRIES,DATA,NODE,DFN,MTDATE,YREND,DGMTDC,IBPRIOR,MTPRIME,LSTNODE
"RTN","DGMTU4",62,0)
 Q:('$G(MTIEN))
"RTN","DGMTU4",63,0)
 S MTPRIME="DGMTU4"
"RTN","DGMTU4",64,0)
 S NODE=$G(^DGMT(408.31,MTIEN,0))
"RTN","DGMTU4",65,0)
 Q:(NODE="")
"RTN","DGMTU4",66,0)
 S DFN=$P($G(^DGMT(408.31,MTIEN,0)),"^",2)
"RTN","DGMTU4",67,0)
 Q:'DFN
"RTN","DGMTU4",68,0)
 Q:+$G(^DGMT(408.31,MTIEN,"PRIM"))  ;already marked as primary!
"RTN","DGMTU4",69,0)
 S MTDATE=+NODE
"RTN","DGMTU4",70,0)
 Q:'MTDATE
"RTN","DGMTU4",71,0)
 Q:($P(NODE,"^",19)'=1)
"RTN","DGMTU4",72,0)
 ;
"RTN","DGMTU4",73,0)
 S DGMTACT="ADD"
"RTN","DGMTU4",74,0)
 D PRIOR^DGMTEVT
"RTN","DGMTU4",75,0)
 ;
"RTN","DGMTU4",76,0)
 ;marks any existing tests as non-primary - shouldn't be more than
"RTN","DGMTU4",77,0)
 ;one such test, but give it two tries
"RTN","DGMTU4",78,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",79,0)
 .S YREND=DT_.2359
"RTN","DGMTU4",80,0)
 E  D
"RTN","DGMTU4",81,0)
 .S YREND=$E(MTDATE,1,3)_1231.9999
"RTN","DGMTU4",82,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,1) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",83,0)
 .N DATA
"RTN","DGMTU4",84,0)
 .;set up for the event driver - should be treated as an edit
"RTN","DGMTU4",85,0)
 .S:(TRIES=1) DGMTACT="EDT",DGMTI=+NODE D PRIOR^DGMTEVT
"RTN","DGMTU4",86,0)
 .;set the old test to non-primary
"RTN","DGMTU4",87,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",88,0)
 ;
"RTN","DGMTU4",89,0)
 ;don't want any old RX copay tests as primary either - if needed, they can be auto-created based on the means test
"RTN","DGMTU4",90,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,2) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",91,0)
 .N DATA
"RTN","DGMTU4",92,0)
 .;set the old test to non-primary
"RTN","DGMTU4",93,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",94,0)
 ;
"RTN","DGMTU4",95,0)
 ;mark this test as primary
"RTN","DGMTU4",96,0)
 K DATA S DATA(2)=1 I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",97,0)
 ;
"RTN","DGMTU4",98,0)
 ; Get Last Primary Means Test irrespective of income year
"RTN","DGMTU4",99,0)
 S LSTNODE=$$LST^DGMTU(DFN)
"RTN","DGMTU4",100,0)
 ;if STATUS is REQUIRED & test is PRIMARY, then set it to NOT PRIMARY
"RTN","DGMTU4",101,0)
 ;if the uploaded test is MT COPAY REQUIRED
"RTN","DGMTU4",102,0)
 ; MT COPAY (CAT C) doesn't expire, which is why you have to 
"RTN","DGMTU4",103,0)
 ; flip the test to Not Primary eg 02/01/2005
"RTN","DGMTU4",104,0)
 I $P(LSTNODE,U,4)="R",+$G(^DGMT(408.31,+LSTNODE,"PRIM")),$P(^DGMT(408.31,MTIEN,0),U,3)=6 D
"RTN","DGMTU4",105,0)
 . N DATA S DATA(2)=0 I $$UPD^DGENDBS(408.31,+LSTNODE,.DATA)
"RTN","DGMTU4",106,0)
 ;if means test is required and test is primary and not a CAT C, 
"RTN","DGMTU4",107,0)
 ;and it hasn't expired, flip the test to Not Primary eg 02/23/2005
"RTN","DGMTU4",108,0)
 I $P(LSTNODE,U,4)="R",+$G(^DGMT(408.31,+LSTNODE,"PRIM")),$P(^DGMT(408.31,MTIEN,0),U,3)'=6,'$$OLD(MTDATE) D
"RTN","DGMTU4",109,0)
 . N DATA S DATA(2)=0 I $$UPD^DGENDBS(408.31,+LSTNODE,.DATA)
"RTN","DGMTU4",110,0)
 ;
"RTN","DGMTU4",111,0)
 ;If this is a Z10 upload, call the means test event driver and quit.
"RTN","DGMTU4",112,0)
 ;
"RTN","DGMTU4",113,0)
 I $G(IVMZ10)="UPLOAD IN PROGRESS" D  Q
"RTN","DGMTU4",114,0)
 .S DGMTI=MTIEN
"RTN","DGMTU4",115,0)
 .S DGMTINF=1
"RTN","DGMTU4",116,0)
 .D QUE^DGMTR
"RTN","DGMTU4",117,0)
 ;
"RTN","DGMTU4",118,0)
 ;If the test is still in effect, need to do additional checks
"RTN","DGMTU4",119,0)
 ;and call event driver
"RTN","DGMTU4",120,0)
 ;
"RTN","DGMTU4",121,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",122,0)
 .;Mark this test as NO LONGER REQUIRED -  calling EN^DGMTR will
"RTN","DGMTU4",123,0)
 .;change it back to its old status if required and will que the event
"RTN","DGMTU4",124,0)
 .;driver
"RTN","DGMTU4",125,0)
 .K DATA
"RTN","DGMTU4",126,0)
 .S DATA(.03)=$$GETSTAT^DGMTH("N",1)
"RTN","DGMTU4",127,0)
 .I $$UPD^DGENDBS(408.31,MTIEN,.DATA)
"RTN","DGMTU4",128,0)
 .S (DGADDF,DGMSGF)=1 ;don't want new test added or messages
"RTN","DGMTU4",129,0)
 .S DGMTI=MTIEN
"RTN","DGMTU4",130,0)
 .S DGMTINF=1
"RTN","DGMTU4",131,0)
 .;
"RTN","DGMTU4",132,0)
 .D EN^DGMTR
"RTN","DGMTU4",133,0)
 .;if the test wasn't required, maybe a Rx copay test is needed
"RTN","DGMTU4",134,0)
 .I '$G(DGREQF),'$G(DGDOM1) D COPYRX^DGMTR1(DFN,MTIEN)
"RTN","DGMTU4",135,0)
 Q
"RTN","DGMTU4",136,0)
 ;
"RTN","DGMTU4",137,0)
RXPRIME(RXIEN) ;
"RTN","DGMTU4",138,0)
 ;Makes phramacy copay test =RXIEN the primary test
"RTN","DGMTU4",139,0)
 ;
"RTN","DGMTU4",140,0)
 N DGREQF,DGDOM1,DGADDF,DGMSGF,DGMTACT,DGMTI,DGMTINF,DGMTP,DGMTA,TRIES,DATA,NODE,DFN,MTIEN,DGRAUTO,DGADDF,DGMTE,DGMTCOR,DGMT,YREND,RXPRIME,QUIT
"RTN","DGMTU4",141,0)
 ;
"RTN","DGMTU4",142,0)
 Q:('$G(RXIEN))
"RTN","DGMTU4",143,0)
 S RXPRIME="DGMTU4"
"RTN","DGMTU4",144,0)
 S QUIT=0
"RTN","DGMTU4",145,0)
 S NODE=$G(^DGMT(408.31,RXIEN,0))
"RTN","DGMTU4",146,0)
 Q:(NODE="")
"RTN","DGMTU4",147,0)
 S DFN=$P($G(^DGMT(408.31,RXIEN,0)),"^",2)
"RTN","DGMTU4",148,0)
 Q:'DFN
"RTN","DGMTU4",149,0)
 Q:+$G(^DGMT(408.31,RXIEN,"PRIM"))  ;already marked as primary!
"RTN","DGMTU4",150,0)
 S MTDATE=+NODE
"RTN","DGMTU4",151,0)
 Q:'MTDATE
"RTN","DGMTU4",152,0)
 Q:($P(NODE,"^",19)'=2)
"RTN","DGMTU4",153,0)
 ;
"RTN","DGMTU4",154,0)
 S DGMTINF=1
"RTN","DGMTU4",155,0)
 ;
"RTN","DGMTU4",156,0)
 ;marks any existing tests as non-primary - shouldn't be more than
"RTN","DGMTU4",157,0)
 ;one such test, but give it two tries
"RTN","DGMTU4",158,0)
 ;
"RTN","DGMTU4",159,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",160,0)
 .S YREND=DT_.2359
"RTN","DGMTU4",161,0)
 E  D
"RTN","DGMTU4",162,0)
 .S YREND=$E(MTDATE,1,3)_1231.9999
"RTN","DGMTU4",163,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,2) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",164,0)
 .N DATA
"RTN","DGMTU4",165,0)
 .;set up for the event driver - should be treated as an edit
"RTN","DGMTU4",166,0)
 .S:(TRIES=1) DGMTACT="EDT",DGMTI=+NODE D PRIOR^DGMTEVT
"RTN","DGMTU4",167,0)
 .;set the old test to non-primary
"RTN","DGMTU4",168,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",169,0)
 ;
"RTN","DGMTU4",170,0)
 ;don't want any old means tests marked as primary - unless they are actually needed!  In which case, do not make this Rx test primary.
"RTN","DGMTU4",171,0)
 F TRIES=1,2 S NODE=$$LST^DGMTU(DFN,YREND,1) Q:'(+NODE)  Q:($E($P(NODE,"^",2),1,3)'=$E(MTDATE,1,3))  D
"RTN","DGMTU4",172,0)
 .N DATA
"RTN","DGMTU4",173,0)
 .I '$$OLD($P(NODE,"^",2)),$P(NODE,"^",4)'="","ACGP"[$P(NODE,"^",4) S QUIT=1 Q
"RTN","DGMTU4",174,0)
 .;set the old test to non-primary
"RTN","DGMTU4",175,0)
 .S DATA(2)=0 I $$UPD^DGENDBS(408.31,+NODE,.DATA)
"RTN","DGMTU4",176,0)
 ;
"RTN","DGMTU4",177,0)
 I QUIT G QRXPRIME
"RTN","DGMTU4",178,0)
 ;mark this test as primary -  calling
"RTN","DGMTU4",179,0)
 ;EN^DGMTCOR will change it to NO LONGER APPLICABLE if appropriate
"RTN","DGMTU4",180,0)
 ;
"RTN","DGMTU4",181,0)
 K DATA
"RTN","DGMTU4",182,0)
 S DATA(2)=1 I $$UPD^DGENDBS(408.31,RXIEN,.DATA)
"RTN","DGMTU4",183,0)
 ;
"RTN","DGMTU4",184,0)
 ;If the test is still in effect, need to do additional checks
"RTN","DGMTU4",185,0)
 ;and call event driver
"RTN","DGMTU4",186,0)
 ;
"RTN","DGMTU4",187,0)
 I '$$OLD(MTDATE) D
"RTN","DGMTU4",188,0)
 .S DGMSGF=1,DGADDF=0 ;don't want new test added or messages
"RTN","DGMTU4",189,0)
 .;
"RTN","DGMTU4",190,0)
 .;EN^DGMTR will first create a stub for a required MT if needed, then
"RTN","DGMTU4",191,0)
 .;call ^DGMTCOR to set the status of the copay test
"RTN","DGMTU4",192,0)
 .D EN^DGMTR
"RTN","DGMTU4",193,0)
 .;
"RTN","DGMTU4",194,0)
 .;if the pharmacy copay test was determined to be required, than
"RTN","DGMTU4",195,0)
 .;que the event driver
"RTN","DGMTU4",196,0)
 .I DGMTCOR D
"RTN","DGMTU4",197,0)
 ..S DGMTACT="ADD"
"RTN","DGMTU4",198,0)
 ..D PRIOR^DGMTEVT
"RTN","DGMTU4",199,0)
 ..S DGMTI=RXIEN
"RTN","DGMTU4",200,0)
 ..D QUE^DGMTR
"RTN","DGMTU4",201,0)
QRXPRIME ;
"RTN","DGMTU4",202,0)
 Q
"RTN","DGMTU4",203,0)
 ;
"RTN","DGMTU4",204,0)
OLD(TESTDATE) ;
"RTN","DGMTU4",205,0)
 ;Checks if the date is older than 365 days.  Returns 0 for no, 1 for yes
"RTN","DGMTU4",206,0)
 ;if the test is exactly 365 days, 
"RTN","DGMTU4",207,0)
 ;it is considered expired eg 03/09/2005
"RTN","DGMTU4",208,0)
 I ($$FMDIFF^XLFDT(DT,TESTDATE)'<365) Q 1
"RTN","DGMTU4",209,0)
 Q 0
"RTN","DGMTU4",210,0)
 ;
"RTN","DGMTU4",211,0)
TRANSFER(DFN,FROM,TO) ;
"RTN","DGMTU4",212,0)
 ;transfers the Income Relations from the test=FROM to test=TO
"RTN","DGMTU4",213,0)
 ;
"RTN","DGMTU4",214,0)
 N DGINI,DGINR,DATA,ERROR
"RTN","DGMTU4",215,0)
 Q:'$G(DFN)
"RTN","DGMTU4",216,0)
 Q:'$G(FROM)
"RTN","DGMTU4",217,0)
 Q:'$G(TO)
"RTN","DGMTU4",218,0)
 Q:(FROM=TO)
"RTN","DGMTU4",219,0)
 S DGINI=0 F  S DGINI=$O(^DGMT(408.22,"AMT",FROM,DFN,DGINI)) Q:'DGINI  S DGINR=$O(^DGMT(408.22,"AMT",FROM,DFN,DGINI,"")) I $P($G(^DGMT(408.22,+DGINR,"MT")),"^")]"" D
"RTN","DGMTU4",220,0)
 .K DATA
"RTN","DGMTU4",221,0)
 .S DATA(31)=TO
"RTN","DGMTU4",222,0)
 .I $$UPD^DGENDBS(408.22,+DGINR,.DATA,.ERROR)
"RTN","DGMTU4",223,0)
 Q
"RTN","DGMTU4",224,0)
 ;
"RTN","DGMTU4",225,0)
GETINCOM(DFN,TDATE) ;
"RTN","DGMTU4",226,0)
 ;Makes sure Income Relations point to the right test
"RTN","DGMTU4",227,0)
 ;
"RTN","DGMTU4",228,0)
 ;Input:
"RTN","DGMTU4",229,0)
 ;  DFN
"RTN","DGMTU4",230,0)
 ;  TDATE -income year of test (uses $E(IVMMTDT,1,3))
"RTN","DGMTU4",231,0)
 ;Output: none.  Repoints Income Relations if necessary
"RTN","DGMTU4",232,0)
 ;
"RTN","DGMTU4",233,0)
 N MTNODE,RXNODE,IVMMTDT,CODE,ACTVIEN
"RTN","DGMTU4",234,0)
 Q:'$G(TDATE)
"RTN","DGMTU4",235,0)
 Q:'$G(DFN)
"RTN","DGMTU4",236,0)
 ;
"RTN","DGMTU4",237,0)
 S IVMMTDT=$E(TDATE,1,3)_"1231.9"
"RTN","DGMTU4",238,0)
 S (CODE,ACTVIEN)=""
"RTN","DGMTU4",239,0)
 S MTNODE=$$LST^DGMTU(DFN,IVMMTDT,1) I $E($P(MTNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S MTNODE=""
"RTN","DGMTU4",240,0)
 S RXNODE=$$LST^DGMTU(DFN,IVMMTDT,2) I $E($P(RXNODE,"^",2),1,3)'=$E(IVMMTDT,1,3) S RXNODE=""
"RTN","DGMTU4",241,0)
 ;
"RTN","DGMTU4",242,0)
 D
"RTN","DGMTU4",243,0)
 .;determine which test has the associated income relations
"RTN","DGMTU4",244,0)
 .;
"RTN","DGMTU4",245,0)
 .I +MTNODE S CODE=$P(MTNODE,"^",4) I CODE'="",("ACGPR"[CODE) S ACTVIEN=+MTNODE Q
"RTN","DGMTU4",246,0)
 .I +RXNODE S CODE=$P(RXNODE,"^",4) I CODE'="",("EMI"[CODE) S ACTVIEN=+RXNODE Q
"RTN","DGMTU4",247,0)
 .I +MTNODE S ACTVIEN=+MTNODE Q
"RTN","DGMTU4",248,0)
 .I +RXNODE S ACTVIEN=+RXNODE Q
"RTN","DGMTU4",249,0)
 I ACTVIEN,+MTNODE,+RXNODE D TRANSFER^DGMTU4(DFN,$S((ACTVIEN=+MTNODE):+RXNODE,1:+MTNODE),ACTVIEN)
"RTN","DGMTU4",250,0)
 Q
"RTN","DGMTU4",251,0)
 ;
"RTN","DGMTU4",252,0)
CHKPT(DFN) ;
"RTN","DGMTU4",253,0)
 ; Cross check the CURRENT MEANS TEST STATUS in the PATIENT File (#2) with the
"RTN","DGMTU4",254,0)
 ; primary means test in the ANNUAL MEANS TEST File (#408.31).  Update the 
"RTN","DGMTU4",255,0)
 ; CURRENT MEANS TEST STATUS if the fields are out of synch.
"RTN","DGMTU4",256,0)
 ;
"RTN","DGMTU4",257,0)
 N PATMT,DGMTI,DATA
"RTN","DGMTU4",258,0)
 ;
"RTN","DGMTU4",259,0)
 Q:$G(DFN)'>0
"RTN","DGMTU4",260,0)
 Q:'$D(^DPT(DFN))
"RTN","DGMTU4",261,0)
 S PATMT=$$GET1^DIQ(2,DFN,.14,"I")
"RTN","DGMTU4",262,0)
 S DGMTI=+$$LST^DGMTU(DFN)
"RTN","DGMTU4",263,0)
 S DATA(.14)=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","DGMTU4",264,0)
 Q:DATA(.14)=PATMT
"RTN","DGMTU4",265,0)
 ;
"RTN","DGMTU4",266,0)
 I $$UPD^DGENDBS(2,DFN,.DATA)
"RTN","DGMTU4",267,0)
 Q
"RTN","DGMTUTL1")
0^5^B9559583
"RTN","DGMTUTL1",1,0)
DGMTUTL1 ;ALB/RMM - Means Test Consistency Checker ; 02/17/2005
"RTN","DGMTUTL1",2,0)
 ;;5.3;Registration;**463,542,610**;Aug 13, 1993
"RTN","DGMTUTL1",3,0)
 ;
"RTN","DGMTUTL1",4,0)
 ;
"RTN","DGMTUTL1",5,0)
 ; Apply Consistency Checks to the Income Test Processes: ADD,
"RTN","DGMTUTL1",6,0)
 ; EDIT, and COMPLETE.
"RTN","DGMTUTL1",7,0)
 ;
"RTN","DGMTUTL1",8,0)
 ;
"RTN","DGMTUTL1",9,0)
 Q
"RTN","DGMTUTL1",10,0)
 ;
"RTN","DGMTUTL1",11,0)
INCON(DFN,DGMTDT,DGMTI,IVMTYPE,IVMERR) ;
"RTN","DGMTUTL1",12,0)
 ;
"RTN","DGMTUTL1",13,0)
 ; Check Income Test before applying consistency checks
"RTN","DGMTUTL1",14,0)
 ; - If AGREED TO PAY DEDUCTIBLE is NO
"RTN","DGMTUTL1",15,0)
 ; - or DECLINES TO GIVE INCOME INFO and AGREED TO PAY DEDUCTIBLE are YES
"RTN","DGMTUTL1",16,0)
 ; Quit, the consistency checks are unnecessary.
"RTN","DGMTUTL1",17,0)
 N NODE0,APD,DTGII
"RTN","DGMTUTL1",18,0)
 S NODE0=$G(^DGMT(408.31,DGMTI,0)),APD=$P(NODE0,U,11),DTGII=$P(NODE0,U,14)
"RTN","DGMTUTL1",19,0)
 I APD=0!(APD=1&(DTGII=1)) Q
"RTN","DGMTUTL1",20,0)
 ;
"RTN","DGMTUTL1",21,0)
 ; Build the data strings for the veteran, and apply consistency checks
"RTN","DGMTUTL1",22,0)
 ; Get information and initialize variables
"RTN","DGMTUTL1",23,0)
 N CNT,I,HLFS,IEN,ARRAY,SPOUSE,DEP,DEPIEN,DGDEP,DGINC,DGINR,DGREL
"RTN","DGMTUTL1",24,0)
 N ZIC,ZIR,ZMT,ZDP,ARRAY,DIEN
"RTN","DGMTUTL1",25,0)
 S CNT=1,HLFS=U,SPOUSE=0,ZIC=""
"RTN","DGMTUTL1",26,0)
 ;
"RTN","DGMTUTL1",27,0)
 ; Build Individual Annual Income and Income Relation Arrays
"RTN","DGMTUTL1",28,0)
 D ALL^DGMTU21(DFN,"VSC",DGMTDT)
"RTN","DGMTUTL1",29,0)
 ;
"RTN","DGMTUTL1",30,0)
 ; Build ZMT array for CC's
"RTN","DGMTUTL1",31,0)
 S $P(ARRAY("ZMT"),U,2)=$P($G(^DGMT(408.31,DGMTI,0)),U,1)
"RTN","DGMTUTL1",32,0)
 S $P(ARRAY("ZMT"),U,2)=$E($P(ARRAY("ZMT"),U,2),1,3)+1700_$E($P(ARRAY("ZMT"),U,2),4,7)
"RTN","DGMTUTL1",33,0)
 S $P(ARRAY("ZMT"),U,3)=$P($G(^DGMT(408.31,DGMTI,0)),U,3)
"RTN","DGMTUTL1",34,0)
 S $P(ARRAY("ZMT"),U,3)=$P(^DG(408.32,$P(ARRAY("ZMT"),U,3),0),U,2)
"RTN","DGMTUTL1",35,0)
 ;
"RTN","DGMTUTL1",36,0)
 ; Build Spouse ZIC, ZIR, and ZDP Arrays
"RTN","DGMTUTL1",37,0)
 I $D(DGREL("S")) D
"RTN","DGMTUTL1",38,0)
 .S SPOUSE=1
"RTN","DGMTUTL1",39,0)
 .; Use the Individual Annual Income File #408.21
"RTN","DGMTUTL1",40,0)
 .S ARRAY(SPOUSE,"ZIC")=$$ZIC^DGMTUTL2(DGINC("S"),SPOUSE)
"RTN","DGMTUTL1",41,0)
 .; Use the Income Relation File #408.22
"RTN","DGMTUTL1",42,0)
 .S ARRAY(SPOUSE,"ZIR")=$$ZIR^DGMTUTL2(DGINR("S"),SPOUSE)
"RTN","DGMTUTL1",43,0)
 .; Use Patient Relation File #408.12 and Income Person File #408.13
"RTN","DGMTUTL1",44,0)
 .S ARRAY(SPOUSE,"ZDP")=$$ZDP^DGMTUTL2(DGREL("S"),SPOUSE)
"RTN","DGMTUTL1",45,0)
 ;
"RTN","DGMTUTL1",46,0)
 ; Build Dependent ZIC, ZIR, and ZDP Arrays
"RTN","DGMTUTL1",47,0)
 F IEN=1:1:DGDEP D
"RTN","DGMTUTL1",48,0)
 .S DIEN=IEN+SPOUSE
"RTN","DGMTUTL1",49,0)
 .; Use the Individual Annual Income File #408.21
"RTN","DGMTUTL1",50,0)
 .S ARRAY(DIEN,"ZIC")=$$ZIC^DGMTUTL2(DGINC("C",IEN),DIEN)
"RTN","DGMTUTL1",51,0)
 .; Use the Income Relation File #408.22
"RTN","DGMTUTL1",52,0)
 .S ARRAY(DIEN,"ZIR")=$$ZIR^DGMTUTL2(DGINR("C",IEN),DIEN)
"RTN","DGMTUTL1",53,0)
 .; Use Patient Relation File #408.12 and Income Person File #408.13
"RTN","DGMTUTL1",54,0)
 .S ARRAY(DIEN,"ZDP")=$$ZDP^DGMTUTL2(DGREL("C",IEN),DIEN)
"RTN","DGMTUTL1",55,0)
 S DEP=DGDEP+SPOUSE
"RTN","DGMTUTL1",56,0)
 ;
"RTN","DGMTUTL1",57,0)
 ; Check the Individual Annual Income File #408.21
"RTN","DGMTUTL1",58,0)
 I $D(DGINC("V")) D
"RTN","DGMTUTL1",59,0)
 .S ZIC=$$ZIC^DGMTUTL2(DGINC("V"))
"RTN","DGMTUTL1",60,0)
 .D ZIC^IVMCMF1(ZIC)
"RTN","DGMTUTL1",61,0)
 ;
"RTN","DGMTUTL1",62,0)
 ; Check the Income Relation File #408.22
"RTN","DGMTUTL1",63,0)
 I $D(DGINR("V")) D
"RTN","DGMTUTL1",64,0)
 .S ZIR=$$ZIR^DGMTUTL2(DGINR("V"),DGMTDT)
"RTN","DGMTUTL1",65,0)
 .D ZIR^IVMCMF1(ZIR,"",1)
"RTN","DGMTUTL1",66,0)
 ;
"RTN","DGMTUTL1",67,0)
 ; Check the Annual Means Test File #408.31
"RTN","DGMTUTL1",68,0)
 I "^1^2^4^"[("^"_IVMTYPE_"^"),(ZIC'="") D 
"RTN","DGMTUTL1",69,0)
 .S ZMT=$$ZMT^DGMTUTL2(DGMTI)
"RTN","DGMTUTL1",70,0)
 .; Create array for Income Calculator
"RTN","DGMTUTL1",71,0)
 .M ARRAY("ZIC")=ZIC
"RTN","DGMTUTL1",72,0)
 .D ZMT^IVMCMF2(ZMT)
"RTN","DGMTUTL1",73,0)
 ;
"RTN","DGMTUTL1",74,0)
 ; Apply the Consistency Checks to the dependent information
"RTN","DGMTUTL1",75,0)
 F IEN=1:1:DEP D
"RTN","DGMTUTL1",76,0)
 .; Check Patient Relation File #408.12 and Income Person File #408.13
"RTN","DGMTUTL1",77,0)
 .D ZDP^IVMCMF2(ARRAY(IEN,"ZDP"),IEN)
"RTN","DGMTUTL1",78,0)
 .; Check the Individual Annual Income File #408.21
"RTN","DGMTUTL1",79,0)
 .D ZIC^IVMCMF1(ARRAY(IEN,"ZIC"),IEN)
"RTN","DGMTUTL1",80,0)
 .; Check the Income Relation File #408.22
"RTN","DGMTUTL1",81,0)
 .D ZIR^IVMCMF1(ARRAY(IEN,"ZIR"),IEN)
"RTN","DGMTUTL1",82,0)
 ;
"RTN","DGMTUTL1",83,0)
 Q
"VER")
8.0^22.0
**END**
**END**
