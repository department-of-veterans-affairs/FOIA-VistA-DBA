EMERGENCY Released PRC*5.1*104 SEQ #86
Extracted from mail message
**KIDS**:PRC*5.1*104^

**INSTALL NAME**
PRC*5.1*104
"BLD",5009,0)
PRC*5.1*104^IFCAP^0^3060911^y
"BLD",5009,1,0)
^^4^4^3060802^^
"BLD",5009,1,1,0)
Making a change to how data is extracted from file 442.  Originally the 
"BLD",5009,1,2,0)
extracts were run from the first of the month and at least 45 days prior 
"BLD",5009,1,3,0)
to the extract date.  The change will now run the extract from the
"BLD",5009,1,4,0)
beginning of the Fiscal Year until the date of the extract (NOW).
"BLD",5009,4,0)
^9.64PA^^
"BLD",5009,"KRN",0)
^9.67PA^8989.52^19
"BLD",5009,"KRN",.4,0)
.4
"BLD",5009,"KRN",.401,0)
.401
"BLD",5009,"KRN",.402,0)
.402
"BLD",5009,"KRN",.403,0)
.403
"BLD",5009,"KRN",.5,0)
.5
"BLD",5009,"KRN",.84,0)
.84
"BLD",5009,"KRN",3.6,0)
3.6
"BLD",5009,"KRN",3.8,0)
3.8
"BLD",5009,"KRN",9.2,0)
9.2
"BLD",5009,"KRN",9.8,0)
9.8
"BLD",5009,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5009,"KRN",9.8,"NM",1,0)
PRCHLO^^0^B11873921
"BLD",5009,"KRN",9.8,"NM",2,0)
PRCHLO4A^^0^B41529207
"BLD",5009,"KRN",9.8,"NM","B","PRCHLO",1)

"BLD",5009,"KRN",9.8,"NM","B","PRCHLO4A",2)

"BLD",5009,"KRN",19,0)
19
"BLD",5009,"KRN",19.1,0)
19.1
"BLD",5009,"KRN",101,0)
101
"BLD",5009,"KRN",409.61,0)
409.61
"BLD",5009,"KRN",771,0)
771
"BLD",5009,"KRN",870,0)
870
"BLD",5009,"KRN",8989.51,0)
8989.51
"BLD",5009,"KRN",8989.52,0)
8989.52
"BLD",5009,"KRN",8994,0)
8994
"BLD",5009,"KRN","B",.4,.4)

"BLD",5009,"KRN","B",.401,.401)

"BLD",5009,"KRN","B",.402,.402)

"BLD",5009,"KRN","B",.403,.403)

"BLD",5009,"KRN","B",.5,.5)

"BLD",5009,"KRN","B",.84,.84)

"BLD",5009,"KRN","B",3.6,3.6)

"BLD",5009,"KRN","B",3.8,3.8)

"BLD",5009,"KRN","B",9.2,9.2)

"BLD",5009,"KRN","B",9.8,9.8)

"BLD",5009,"KRN","B",19,19)

"BLD",5009,"KRN","B",19.1,19.1)

"BLD",5009,"KRN","B",101,101)

"BLD",5009,"KRN","B",409.61,409.61)

"BLD",5009,"KRN","B",771,771)

"BLD",5009,"KRN","B",870,870)

"BLD",5009,"KRN","B",8989.51,8989.51)

"BLD",5009,"KRN","B",8989.52,8989.52)

"BLD",5009,"KRN","B",8994,8994)

"BLD",5009,"QUES",0)
^9.62^^
"BLD",5009,"REQB",0)
^9.611^1^1
"BLD",5009,"REQB",1,0)
PRC*5.1*83^2
"BLD",5009,"REQB","B","PRC*5.1*83",1)

"MBREQ")
0
"PKG",455,-1)
1^1
"PKG",455,0)
IFCAP^PRC^IFCAP System Files
"PKG",455,20,0)
^9.402P^^
"PKG",455,22,0)
^9.49I^1^1
"PKG",455,22,1,0)
5.1^3001012^3001019^68
"PKG",455,22,1,"PAH",1,0)
104^3060911
"PKG",455,22,1,"PAH",1,1,0)
^^4^4^3060911
"PKG",455,22,1,"PAH",1,1,1,0)
Making a change to how data is extracted from file 442.  Originally the 
"PKG",455,22,1,"PAH",1,1,2,0)
extracts were run from the first of the month and at least 45 days prior 
"PKG",455,22,1,"PAH",1,1,3,0)
to the extract date.  The change will now run the extract from the
"PKG",455,22,1,"PAH",1,1,4,0)
beginning of the Fiscal Year until the date of the extract (NOW).
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","PRCHLO")
0^1^B11873921^B6164457
"RTN","PRCHLO",1,0)
PRCHLO ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 7/31/06 12:33pm
"RTN","PRCHLO",2,0)
V ;;5.1;IFCAP;**83,104**; Oct 20, 2000
"RTN","PRCHLO",3,0)
 ; Per VHA Directive 10-93-142, this routine should not be modified
"RTN","PRCHLO",4,0)
 ; 
"RTN","PRCHLO",5,0)
 ; PRCHLO* routines are used to build the extract files from
"RTN","PRCHLO",6,0)
 ; file 442 for the clinical logistics report server.
"RTN","PRCHLO",7,0)
 ; PRCHLO thru PRCHLO5 perform the following:
"RTN","PRCHLO",8,0)
 ; 1. Initialize environment
"RTN","PRCHLO",9,0)
 ; 2. Get parameters for the month being run
"RTN","PRCHLO",10,0)
 ; 3. Pull data from file 442 for month being run
"RTN","PRCHLO",11,0)
 ; 4. Create multiple "^" delimited flat files for report server
"RTN","PRCHLO",12,0)
 ; 5. At the completion of extracts FTP files to report server
"RTN","PRCHLO",13,0)
 ; 6. Clean up / remove any temp files
"RTN","PRCHLO",14,0)
 ; 7. logout
"RTN","PRCHLO",15,0)
 ; CALC is the programmer entry point used to test the extract
"RTN","PRCHLO",16,0)
 ; options for the first iteration of coding
"RTN","PRCHLO",17,0)
 ;
"RTN","PRCHLO",18,0)
 Q
"RTN","PRCHLO",19,0)
INIT ; Initialize environment
"RTN","PRCHLO",20,0)
 ;
"RTN","PRCHLO",21,0)
 ; 
"RTN","PRCHLO",22,0)
 ; Get todays date
"RTN","PRCHLO",23,0)
 N %
"RTN","PRCHLO",24,0)
 S %=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",25,0)
 ; (old logic)
"RTN","PRCHLO",26,0)
 ; Always start from the 1st of the month to the end of month
"RTN","PRCHLO",27,0)
 ; and at least 45 days prior to todays date
"RTN","PRCHLO",28,0)
 ;
"RTN","PRCHLO",29,0)
 ; (new logic)
"RTN","PRCHLO",30,0)
 ; Always start from the beginning of the Fiscal Year and run
"RTN","PRCHLO",31,0)
 ; the extract up until the Date of the extract run (NOW)
"RTN","PRCHLO",32,0)
 ;
"RTN","PRCHLO",33,0)
 ; The CALC entry point is used for testing from programmer mode
"RTN","PRCHLO",34,0)
 ; and allows the programmer to pass a specific date
"RTN","PRCHLO",35,0)
 ; in the variable %=FM date format
"RTN","PRCHLO",36,0)
 ;
"RTN","PRCHLO",37,0)
CALC ;test entry point, set %I to FM date
"RTN","PRCHLO",38,0)
 ;
"RTN","PRCHLO",39,0)
 N CLO1,CLO2,CLO2B,CLO2E,CLO3,CLOBGN,CLOEND,POND1,POND2,CLO1A
"RTN","PRCHLO",40,0)
 N MTHRUN,YRRUN,PYRRUN
"RTN","PRCHLO",41,0)
 S CLO1=$E(%,1,3)
"RTN","PRCHLO",42,0)
 ;
"RTN","PRCHLO",43,0)
 S CLO2=$E(%,4,5)
"RTN","PRCHLO",44,0)
 S YRRUN=+(CLO1)
"RTN","PRCHLO",45,0)
 S PYRRUN=YRRUN-1  ; previous Year Run
"RTN","PRCHLO",46,0)
 S MTHRUN=+(CLO2)
"RTN","PRCHLO",47,0)
 I +CLO2>2  D
"RTN","PRCHLO",48,0)
 . S CLO2B=CLO2-2
"RTN","PRCHLO",49,0)
 . I $L(CLO2B)<2 S CLO2B=0_CLO2B
"RTN","PRCHLO",50,0)
 . S CLO2E=CLO2-1
"RTN","PRCHLO",51,0)
 . I $L(CLO2E)<2 S CLO2E=0_CLO2E
"RTN","PRCHLO",52,0)
 . S CLOBGN=+(CLO1_(CLO2B)_"00")
"RTN","PRCHLO",53,0)
 . S CLOEND=+(CLO1_(CLO2E)_"01")
"RTN","PRCHLO",54,0)
 . Q
"RTN","PRCHLO",55,0)
 ;
"RTN","PRCHLO",56,0)
 ; check for January run, and Feb run
"RTN","PRCHLO",57,0)
 I +CLO2=1  D
"RTN","PRCHLO",58,0)
 . S CLO1=CLO1-1
"RTN","PRCHLO",59,0)
 . S CLOBGN=+(CLO1_11_"00")  ; Start date is Nov 1st
"RTN","PRCHLO",60,0)
 . S CLOEND=+(CLO1_12_"01")  ; End date is   Dec 1st
"RTN","PRCHLO",61,0)
 . Q
"RTN","PRCHLO",62,0)
 I +CLO2=2  D
"RTN","PRCHLO",63,0)
 . S CLO1A=CLO1-1  ; Need to get Dec, previous year
"RTN","PRCHLO",64,0)
 . S CLOBGN=+(CLO1A_12_"00")  ; Start date is Dec 1st
"RTN","PRCHLO",65,0)
 . S CLOEND=+(CLO1_"01"_"01")  ; End date is  Jan 1st
"RTN","PRCHLO",66,0)
 . Q
"RTN","PRCHLO",67,0)
 ;
"RTN","PRCHLO",68,0)
 ; (Begin new logic)
"RTN","PRCHLO",69,0)
FYRNOW ; Changes added 07/31/06 RLL for new extract date range.
"RTN","PRCHLO",70,0)
 ; CLOBGN will always be the beginning of the Fiscal Year (Oct 1st)
"RTN","PRCHLO",71,0)
 ; This will be the start range for each extract.
"RTN","PRCHLO",72,0)
 ; This routine is called through the option :
"RTN","PRCHLO",73,0)
 ; [PRCHLO CLO PROCUREMENT] which is queued to run in TaskMan
"RTN","PRCHLO",74,0)
 ; This option should be queued to run 2 hours AFTER
"RTN","PRCHLO",75,0)
 ; [PRCHLO GIP OPTION] and should be run on the same day
"RTN","PRCHLO",76,0)
 ; (after midnight) as the [PRCHLO GIP OPTION]. As an example:
"RTN","PRCHLO",77,0)
 ; 1.  Que [PRCHLO GIP OPTION] to run 12:00am the 1st of the month
"RTN","PRCHLO",78,0)
 ; 2.  Que [PRCHLO CLO PROCUREMENT] to run 1:00am the 1st of the month
"RTN","PRCHLO",79,0)
 ;
"RTN","PRCHLO",80,0)
 ;
"RTN","PRCHLO",81,0)
 ; The following new Variables were added to the CALC entry point:
"RTN","PRCHLO",82,0)
 ; YRRUN  ; year option run
"RTN","PRCHLO",83,0)
 ; PYRRUN  ; previous year option run
"RTN","PRCHLO",84,0)
 ; MTHRUN  ; MONTHRUN
"RTN","PRCHLO",85,0)
 ; listed below are 3 examples:
"RTN","PRCHLO",86,0)
 ;
"RTN","PRCHLO",87,0)
 ; Month Option Run  |  Date Range for Run       | # of months of data
"RTN","PRCHLO",88,0)
 ; Dec 1st, 2005    | Oct 1, 2005 to Dec 1st 2005|       2
"RTN","PRCHLO",89,0)
 ; Apr 1st, 2006    | Oct 1, 2005 to Apr 1st 2006|       6
"RTN","PRCHLO",90,0)
 ; Oct 1st, 2006    | Oct 1, 2005 to Oct 1st 2006|      12
"RTN","PRCHLO",91,0)
 ;
"RTN","PRCHLO",92,0)
STCLOBGN ; Set CLOBGN to Beginning of Fiscal Year (Oct. 1)
"RTN","PRCHLO",93,0)
 ; 
"RTN","PRCHLO",94,0)
 I MTHRUN=12!(MTHRUN=11)  D
"RTN","PRCHLO",95,0)
 . ; For Nov or Dec, CLOBGN set to Begin of FY(Oct 1st) in same year
"RTN","PRCHLO",96,0)
 . S CLOBGN=+(YRRUN_"10"_"00")
"RTN","PRCHLO",97,0)
 . S CLOEND=%  ; CLOEND is Date Extract Run
"RTN","PRCHLO",98,0)
 . Q
"RTN","PRCHLO",99,0)
 I (MTHRUN<11)  D  ; (CLOBGN set to Prev FY for all other conditions)
"RTN","PRCHLO",100,0)
 . S CLOBGN=+(PYRRUN_"10"_"00")
"RTN","PRCHLO",101,0)
 . S CLOEND=%  ; CLOEND is Date Extract Run
"RTN","PRCHLO",102,0)
 . Q
"RTN","PRCHLO",103,0)
 ; (End new logic)
"RTN","PRCHLO",104,0)
 ;
"RTN","PRCHLO",105,0)
DEBUGFY ; Debug Fiscal Year logic by uncommenting code below 7/31/06 RLL
"RTN","PRCHLO",106,0)
 ; W !,"CLOBGN is ",CLOBGN," CLOEND is ",CLOEND,!   ; Write date range
"RTN","PRCHLO",107,0)
 ; Q  ; Quit added here for debugging 7/31/06 RLL
"RTN","PRCHLO",108,0)
 ;
"RTN","PRCHLO",109,0)
 D GPARM
"RTN","PRCHLO",110,0)
 ; Make sure ^TMP($J) is set with data, otherwise return error
"RTN","PRCHLO",111,0)
 N CKTP
"RTN","PRCHLO",112,0)
 S CKTP=$O(^TMP($J,0))
"RTN","PRCHLO",113,0)
 I CKTP=""  D
"RTN","PRCHLO",114,0)
 . S CLRSERR=1  ; error flag indicates no data in ^TMP($J)
"RTN","PRCHLO",115,0)
 . Q
"RTN","PRCHLO",116,0)
 Q
"RTN","PRCHLO",117,0)
 ;
"RTN","PRCHLO",118,0)
GPARM ; Get parameters for monthly extract
"RTN","PRCHLO",119,0)
 ;
"RTN","PRCHLO",120,0)
 ; need to set monthyear for data file
"RTN","PRCHLO",121,0)
 ;
"RTN","PRCHLO",122,0)
 N MNTHYR,FMDT1,MYRVAL
"RTN","PRCHLO",123,0)
 S FMDT1=$P(($$NOW^XLFDT),".",1)
"RTN","PRCHLO",124,0)
 S MYRVAL=$$FMTE^XLFDT(FMDT1)
"RTN","PRCHLO",125,0)
 S MNTHYR=$P(MYRVAL," ",1)_","_$P(MYRVAL," ",3)
"RTN","PRCHLO",126,0)
 ;
"RTN","PRCHLO",127,0)
 ; $O through the "AB" x-ref based on CLOBGN and CLOEND
"RTN","PRCHLO",128,0)
 ;
"RTN","PRCHLO",129,0)
 S CLO1=CLOBGN,CLO2="",CLO3=""
"RTN","PRCHLO",130,0)
 F  S CLO1=$O(^PRC(442,"AB",CLO1)) Q:CLO1=""  D
"RTN","PRCHLO",131,0)
 . F  S CLO2=$O(^PRC(442,"AB",CLO1,CLO2)) Q:CLO2=""  D
"RTN","PRCHLO",132,0)
 . . Q:CLO1>(CLOEND-1)
"RTN","PRCHLO",133,0)
 . . D GKEY
"RTN","PRCHLO",134,0)
 . . Q
"RTN","PRCHLO",135,0)
 . Q
"RTN","PRCHLO",136,0)
 Q
"RTN","PRCHLO",137,0)
EXTR ; Extract the data, create files
"RTN","PRCHLO",138,0)
 ;
"RTN","PRCHLO",139,0)
GKEY ; get key for all tables
"RTN","PRCHLO",140,0)
 N POID,POND0,POND1,POCRDAT
"RTN","PRCHLO",141,0)
 S POND0=$G(^PRC(442,CLO2,0))
"RTN","PRCHLO",142,0)
 S POND1=$G(^PRC(442,CLO2,1))
"RTN","PRCHLO",143,0)
 S POID=CLO2
"RTN","PRCHLO",144,0)
 S POCRDAT=CLO1  ; PO Date from x-ref value
"RTN","PRCHLO",145,0)
 D GPOMAST^PRCHLO1  ;
"RTN","PRCHLO",146,0)
 Q
"RTN","PRCHLO4A")
0^2^B41529207^B45155553
"RTN","PRCHLO4A",1,0)
PRCHLO4A ;WOIFO/RLL-EXTRACT ROUTINE CLO REPORT SERVER ; 9/6/06 3:14pm
"RTN","PRCHLO4A",2,0)
V ;;5.1;IFCAP;**83,104**; Oct 20, 2000
"RTN","PRCHLO4A",3,0)
 ;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","PRCHLO4A",4,0)
 ; Continuation of PRCHLO4
"RTN","PRCHLO4A",5,0)
 ;
"RTN","PRCHLO4A",6,0)
 ; PRCHLO4A routines are used to Write out the Header and data
"RTN","PRCHLO4A",7,0)
 ;
"RTN","PRCHLO4A",8,0)
 Q
"RTN","PRCHLO4A",9,0)
GETDIR ; Get directory from PRCPLO EXTRACT DIRECTORY system parameter for CLRS
"RTN","PRCHLO4A",10,0)
 N FILEDIR,STID
"RTN","PRCHLO4A",11,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",12,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",13,0)
 ;
"RTN","PRCHLO4A",14,0)
 Q
"RTN","PRCHLO4A",15,0)
 ;
"RTN","PRCHLO4A",16,0)
CRTWIN ; Create CLRSxxxWFTP.TXT  file to transfer file(s)
"RTN","PRCHLO4A",17,0)
 N FILEDIR,POP,STID,OUTFLL1
"RTN","PRCHLO4A",18,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",19,0)
 S POP=""  ; POP is returned by OPEN^%ZISH
"RTN","PRCHLO4A",20,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",21,0)
 ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",22,0)
 ; transfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",23,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",24,0)
 . N PONN  ; File number for File type
"RTN","PRCHLO4A",25,0)
 . S PONN=1
"RTN","PRCHLO4A",26,0)
 . F PONN=1:1:19  D
"RTN","PRCHLO4A",27,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",28,0)
 . . ;
"RTN","PRCHLO4A",29,0)
 . . S FTY="F"
"RTN","PRCHLO4A",30,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",31,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",32,0)
 . . I POP  D
"RTN","PRCHLO4A",33,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",34,0)
 . . . Q
"RTN","PRCHLO4A",35,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",36,0)
 . . D BLDF1
"RTN","PRCHLO4A",37,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",38,0)
 . . Q
"RTN","PRCHLO4A",39,0)
 . Q
"RTN","PRCHLO4A",40,0)
 ;
"RTN","PRCHLO4A",41,0)
 I CLRSERR'=3  D
"RTN","PRCHLO4A",42,0)
 . ; RLL/PRC*5.1*104 change logic to create separate FTP
"RTN","PRCHLO4A",43,0)
 . ; tranfer files (1 for each file for Windows/Cache)
"RTN","PRCHLO4A",44,0)
 . N PONN  ; File number for file type
"RTN","PRCHLO4A",45,0)
 . S PONN=1
"RTN","PRCHLO4A",46,0)
 . F PONN=1:1:2  D
"RTN","PRCHLO4A",47,0)
 . . N FTY  ; File type F=Po Activity , G=GIP
"RTN","PRCHLO4A",48,0)
 . . S FTY="G"
"RTN","PRCHLO4A",49,0)
 . . S OUTFLL1="CLRS"_STID_FTY_PONN_"WFTP.TXT"
"RTN","PRCHLO4A",50,0)
 . . D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL1,"W")
"RTN","PRCHLO4A",51,0)
 . . I POP  D
"RTN","PRCHLO4A",52,0)
 . . . S CLRSERR=3
"RTN","PRCHLO4A",53,0)
 . . . Q
"RTN","PRCHLO4A",54,0)
 . . D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",55,0)
 . . D BLDF1
"RTN","PRCHLO4A",56,0)
 . . D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",57,0)
 . . Q
"RTN","PRCHLO4A",58,0)
 . Q
"RTN","PRCHLO4A",59,0)
 Q
"RTN","PRCHLO4A",60,0)
BLDF1 ; RLL/PRC*5.1*104 added logic to create separate FTP
"RTN","PRCHLO4A",61,0)
 ; transfers (1 for each file)
"RTN","PRCHLO4A",62,0)
 ;
"RTN","PRCHLO4A",63,0)
 W "open 10.128.102.204",!  ;Connect to the Report Server
"RTN","PRCHLO4A",64,0)
 W "clrsadmin",!  ; Enter user name for Report Server Login
"RTN","PRCHLO4A",65,0)
 W "1025clrs",!  ;pw=1025clrs Enter P/W for Report Server Login
"RTN","PRCHLO4A",66,0)
 W "PUT "_FILEDIR_"IFCP"_STID_FTY_PONN_".TXT",!
"RTN","PRCHLO4A",67,0)
 W "bye",!  ; Exit FTP
"RTN","PRCHLO4A",68,0)
 ;
"RTN","PRCHLO4A",69,0)
 Q
"RTN","PRCHLO4A",70,0)
CKRPTSV ; Check for availability of report server
"RTN","PRCHLO4A",71,0)
 ; Several steps need to be performed
"RTN","PRCHLO4A",72,0)
 ; 1. Set up script to perform PING
"RTN","PRCHLO4A",73,0)
 ; 2. Capture log file during PING
"RTN","PRCHLO4A",74,0)
 ; 3. Read logfile into working global
"RTN","PRCHLO4A",75,0)
 ; 4. Determine Success/Failure of PING to server
"RTN","PRCHLO4A",76,0)
 ; 5. If successful, continue processing (CLRSERR=0)
"RTN","PRCHLO4A",77,0)
 ; 6. If problem occurs, S CLRSERR=3 and generate message
"RTN","PRCHLO4A",78,0)
 ;
"RTN","PRCHLO4A",79,0)
 I CKOS["VMS" D VMSPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",80,0)
 I CKOS["NT" D WINPING  ; CKOS set in PRCHLO5
"RTN","PRCHLO4A",81,0)
 Q
"RTN","PRCHLO4A",82,0)
VMSPING ; need to PING report server to make sure it is available
"RTN","PRCHLO4A",83,0)
 ;
"RTN","PRCHLO4A",84,0)
 ; 1. Create .COM file to execute
"RTN","PRCHLO4A",85,0)
 N FILEDIR,STID,OUTFLL2
"RTN","PRCHLO4A",86,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",87,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",88,0)
 S OUTFLL2="CLRS"_STID_"PING.COM"
"RTN","PRCHLO4A",89,0)
 D OPEN^%ZISH("FILE1",FILEDIR,OUTFLL2,"W")
"RTN","PRCHLO4A",90,0)
 D USE^%ZISUTL("FILE1")
"RTN","PRCHLO4A",91,0)
 W "$ SET VERIFY=(PROCEDURE,IMAGE)",!
"RTN","PRCHLO4A",92,0)
 W "$ SET DEFAULT "_FILEDIR,!
"RTN","PRCHLO4A",93,0)
 W "$ TCPIP",!
"RTN","PRCHLO4A",94,0)
 W "PING 10.128.102.204",!
"RTN","PRCHLO4A",95,0)
 W "EXIT",!
"RTN","PRCHLO4A",96,0)
 W "$ EXIT 3",!
"RTN","PRCHLO4A",97,0)
 D CLOSE^%ZISH("FILE1")
"RTN","PRCHLO4A",98,0)
 ;
"RTN","PRCHLO4A",99,0)
 ; 2. Execute .COM file, create logfile
"RTN","PRCHLO4A",100,0)
 S XPV1="S PV=$ZF(-1,""@"_FILEDIR_"CLRS"_STID_"PING.COM/OUTPUT="_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",101,0)
 X XPV1  ; Run the .com file
"RTN","PRCHLO4A",102,0)
 ;
"RTN","PRCHLO4A",103,0)
 ; 3. Read Logfile into working global
"RTN","PRCHLO4A",104,0)
 N FNAME,XLOG
"RTN","PRCHLO4A",105,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",106,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("CLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",107,0)
 ; Check global for %SYSTEM or 0 packets received
"RTN","PRCHLO4A",108,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",109,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",110,0)
 F  S PNG=$O(^TMP("CLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",111,0)
 . S PNG1=$G(^TMP("CLRSLOG",$J,PNG))
"RTN","PRCHLO4A",112,0)
 . I PNG1["0 packets received" S CLRSERR=3
"RTN","PRCHLO4A",113,0)
 . I PNG1["%SYSTEM" S CLRSERR=3
"RTN","PRCHLO4A",114,0)
 . Q
"RTN","PRCHLO4A",115,0)
 Q
"RTN","PRCHLO4A",116,0)
WINPING ; PING report server to make sure it is available
"RTN","PRCHLO4A",117,0)
 N PV,XPV1,FILEDIR,STID,XLOG
"RTN","PRCHLO4A",118,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",119,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",120,0)
 S XPV1="S PV=$ZF(-1,""PING 10.128.102.204>"_FILEDIR_"CLRS"_STID_"PING.LOG"")"
"RTN","PRCHLO4A",121,0)
 X XPV1
"RTN","PRCHLO4A",122,0)
 S FNAME="CLRS"_STID_"PING.LOG"
"RTN","PRCHLO4A",123,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("CLRSLOG",$J,1)),3)
"RTN","PRCHLO4A",124,0)
 N PNG,PNG1,PNG2,PNG3
"RTN","PRCHLO4A",125,0)
 S PNG=0,PNG1=0,PNG2=0
"RTN","PRCHLO4A",126,0)
 F  S PNG=$O(^TMP("CLRSLOG",$J,PNG)) Q:PNG=""  D
"RTN","PRCHLO4A",127,0)
 . S PNG1=$G(^TMP("CLRSLOG",$J,PNG))
"RTN","PRCHLO4A",128,0)
 . I PNG1["Received = 0" S CLRSERR=3
"RTN","PRCHLO4A",129,0)
 . Q
"RTN","PRCHLO4A",130,0)
 Q
"RTN","PRCHLO4A",131,0)
 ;
"RTN","PRCHLO4A",132,0)
LOG2FILE ; Set logfile to global, add to mail message
"RTN","PRCHLO4A",133,0)
 ;
"RTN","PRCHLO4A",134,0)
 ;
"RTN","PRCHLO4A",135,0)
 N FILEDIR,STID,FNAME,XLOG
"RTN","PRCHLO4A",136,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",137,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",138,0)
 I CKOS["VMS" S FNAME="CLRS"_STID_"FTP1.LOG"
"RTN","PRCHLO4A",139,0)
 I CKOS["NT" S FNAME="CLRS"_STID_"F1FTP1.LOG"
"RTN","PRCHLO4A",140,0)
 S XLOG=$$FTG^%ZISH(FILEDIR,FNAME,$NAME(^TMP("PRCHLOG",$J,1)),3)
"RTN","PRCHLO4A",141,0)
 ; Log file is in the global ^TMP("PRCHLOG", lets put it in
"RTN","PRCHLO4A",142,0)
 ; the message beginning at PRCPMSG(11)
"RTN","PRCHLO4A",143,0)
 ;
"RTN","PRCHLO4A",144,0)
 N LG1,LG2,LG3,LG4,LGCNT
"RTN","PRCHLO4A",145,0)
 S LG1=0,LG2=0,LG3=0,LG4=0,LGCNT=11
"RTN","PRCHLO4A",146,0)
 F  S LG1=$O(^TMP("PRCHLOG",$J,LG1)) Q:LG1=""  D
"RTN","PRCHLO4A",147,0)
 . S LG3=$G(^TMP("PRCHLOG",$J,LG1))
"RTN","PRCHLO4A",148,0)
 . S PRCPMSG(LGCNT)=LG3
"RTN","PRCHLO4A",149,0)
 . S LGCNT=LGCNT+1
"RTN","PRCHLO4A",150,0)
 . Q
"RTN","PRCHLO4A",151,0)
 D MAILFTP^PRCHLO5
"RTN","PRCHLO4A",152,0)
 Q
"RTN","PRCHLO4A",153,0)
FTPCOM ; Issue the FTP command after CLRSxxxWFTP.TXT file is built
"RTN","PRCHLO4A",154,0)
 ; remain in CACHE during FTP Process using
"RTN","PRCHLO4A",155,0)
 ; $ZF(-1) call
"RTN","PRCHLO4A",156,0)
 ;
"RTN","PRCHLO4A",157,0)
 ; rll/ 8/30/2006 Change logic to initiate transfer one file
"RTN","PRCHLO4A",158,0)
 ; at a time to the report server for Windows/Cache stations
"RTN","PRCHLO4A",159,0)
 ; This was done after a hang was observed between transfers.
"RTN","PRCHLO4A",160,0)
 ;
"RTN","PRCHLO4A",161,0)
 N LPP1,LPP2
"RTN","PRCHLO4A",162,0)
 S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",163,0)
 F LPP1=1:1:19  D  ; run the FTP command for the 19 PO files
"RTN","PRCHLO4A",164,0)
 . D RUNFTPT
"RTN","PRCHLO4A",165,0)
 . Q
"RTN","PRCHLO4A",166,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",167,0)
 F LPP1=1:1:2  D  ; run the FTP command for the 2 GIP files
"RTN","PRCHLO4A",168,0)
 . D RUNFTPT
"RTN","PRCHLO4A",169,0)
 . Q
"RTN","PRCHLO4A",170,0)
 Q
"RTN","PRCHLO4A",171,0)
 ;
"RTN","PRCHLO4A",172,0)
RUNFTPT ; Run the FTP transfer for Windows
"RTN","PRCHLO4A",173,0)
 N PV,XPV1,FILEDIR,STID
"RTN","PRCHLO4A",174,0)
 ;
"RTN","PRCHLO4A",175,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",176,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",177,0)
 ; SACC Exception received for usage of $ZF(-1) in PRC*5.1*83
"RTN","PRCHLO4A",178,0)
 ; See IFCAP Technical Manual
"RTN","PRCHLO4A",179,0)
 S XPV1="S PV=$ZF(-1,""ftp -s:"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT>"_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",180,0)
 X XPV1  ; FTP the files, Comment out for testing
"RTN","PRCHLO4A",181,0)
 ;
"RTN","PRCHLO4A",182,0)
 ; error flag logic
"RTN","PRCHLO4A",183,0)
 I PV=-1  D  ; Note, this error is logged on system error during xfer
"RTN","PRCHLO4A",184,0)
 . S CLRSERR=1
"RTN","PRCHLO4A",185,0)
 . Q
"RTN","PRCHLO4A",186,0)
 Q
"RTN","PRCHLO4A",187,0)
DELWIN ; Delete windows files
"RTN","PRCHLO4A",188,0)
 ;
"RTN","PRCHLO4A",189,0)
 ;
"RTN","PRCHLO4A",190,0)
 I CKOS["NT"  D
"RTN","PRCHLO4A",191,0)
 . N LPP1,LPP2
"RTN","PRCHLO4A",192,0)
 . S LPP1=0,LPP2="F"
"RTN","PRCHLO4A",193,0)
 . F LPP1=1:1:19  D  ; run the FTP command for the 19 PO files
"RTN","PRCHLO4A",194,0)
 . . D DELFTPF
"RTN","PRCHLO4A",195,0)
 . . Q
"RTN","PRCHLO4A",196,0)
 . Q
"RTN","PRCHLO4A",197,0)
 S LPP1=0,LPP2="G"
"RTN","PRCHLO4A",198,0)
 F LPP1=1:1:2  D
"RTN","PRCHLO4A",199,0)
 . D DELFTPF  ; Delete the GIP files
"RTN","PRCHLO4A",200,0)
 . Q
"RTN","PRCHLO4A",201,0)
 Q
"RTN","PRCHLO4A",202,0)
DELFTPF ; Delete the FTP files, logs , and .TXT files
"RTN","PRCHLO4A",203,0)
 ;
"RTN","PRCHLO4A",204,0)
 N FILEDIR,STID,XPV
"RTN","PRCHLO4A",205,0)
 S FILEDIR=$$GET^XPAR("SYS","PRCPLO EXTRACT DIRECTORY",1,"Q")
"RTN","PRCHLO4A",206,0)
 S STID=$$GET1^DIQ(4,$$KSP^XUPARAM("INST")_",",99)
"RTN","PRCHLO4A",207,0)
 ; delete previous extract
"RTN","PRCHLO4A",208,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"IFCP"_STID_LPP2_LPP1_".TXT"")"
"RTN","PRCHLO4A",209,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",210,0)
 ; delete previous logfile
"RTN","PRCHLO4A",211,0)
 ;
"RTN","PRCHLO4A",212,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"FTP1.LOG"")"
"RTN","PRCHLO4A",213,0)
 X XPV  ; comment out for testing
"RTN","PRCHLO4A",214,0)
 ; delete previous ftp file for transfer
"RTN","PRCHLO4A",215,0)
 ;
"RTN","PRCHLO4A",216,0)
 S XPV="S PV=$ZF(-1,""DEL "_FILEDIR_"CLRS"_STID_LPP2_LPP1_"WFTP.TXT"")"
"RTN","PRCHLO4A",217,0)
 X XPV
"RTN","PRCHLO4A",218,0)
 Q
"VER")
8.0^22.0
"BLD",5009,6)
^86
**END**
**END**
