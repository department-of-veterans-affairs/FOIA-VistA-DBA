Released EC*2*72 SEQ #76
Extracted from mail message
**KIDS**:EC*2.0*72^

**INSTALL NAME**
EC*2.0*72
"BLD",6253,0)
EC*2.0*72^EVENT CAPTURE^0^3060511^y
"BLD",6253,4,0)
^9.64PA^721^1
"BLD",6253,4,721,0)
721
"BLD",6253,4,721,2,0)
^9.641^721.042^2
"BLD",6253,4,721,2,721,0)
EVENT CAPTURE PATIENT  (File-top level)
"BLD",6253,4,721,2,721,1,0)
^9.6411^17^4
"BLD",6253,4,721,2,721,1,10,0)
*PROVIDER
"BLD",6253,4,721,2,721,1,15,0)
*PROVIDER #2
"BLD",6253,4,721,2,721,1,17,0)
*PROVIDER #3
"BLD",6253,4,721,2,721,1,30,0)
PCE DATA FEED
"BLD",6253,4,721,2,721.042,0)
PROVIDER MULTIPLE  (sub-file)
"BLD",6253,4,721,2,721.042,1,0)
^9.6411^^
"BLD",6253,4,721,222)
y^y^p^^^^n^^n
"BLD",6253,4,721,224)

"BLD",6253,4,"APDD",721,721)

"BLD",6253,4,"APDD",721,721,10)

"BLD",6253,4,"APDD",721,721,15)

"BLD",6253,4,"APDD",721,721,17)

"BLD",6253,4,"APDD",721,721,30)

"BLD",6253,4,"APDD",721,721.042)

"BLD",6253,4,"B",721,721)

"BLD",6253,6)
7^
"BLD",6253,"ABPKG")
n
"BLD",6253,"INIT")
EC2P72PT
"BLD",6253,"KRN",0)
^9.67PA^8989.52^19
"BLD",6253,"KRN",.4,0)
.4
"BLD",6253,"KRN",.401,0)
.401
"BLD",6253,"KRN",.402,0)
.402
"BLD",6253,"KRN",.402,"NM",0)
^9.68A^2^2
"BLD",6253,"KRN",.402,"NM",1,0)
EC CREATE PATIENT ENTRY    FILE #721^721^0
"BLD",6253,"KRN",.402,"NM",2,0)
EC FILE PCE NODE    FILE #721^721^0
"BLD",6253,"KRN",.402,"NM","B","EC CREATE PATIENT ENTRY    FILE #721",1)

"BLD",6253,"KRN",.402,"NM","B","EC FILE PCE NODE    FILE #721",2)

"BLD",6253,"KRN",.403,0)
.403
"BLD",6253,"KRN",.5,0)
.5
"BLD",6253,"KRN",.84,0)
.84
"BLD",6253,"KRN",3.6,0)
3.6
"BLD",6253,"KRN",3.8,0)
3.8
"BLD",6253,"KRN",9.2,0)
9.2
"BLD",6253,"KRN",9.2,"NM",0)
^9.68A^3^3
"BLD",6253,"KRN",9.2,"NM",1,0)
EC PRO SUM^^0
"BLD",6253,"KRN",9.2,"NM",2,0)
ECSCPT^^0
"BLD",6253,"KRN",9.2,"NM",3,0)
ECINCPT^^0
"BLD",6253,"KRN",9.2,"NM","B","EC PRO SUM",1)

"BLD",6253,"KRN",9.2,"NM","B","ECINCPT",3)

"BLD",6253,"KRN",9.2,"NM","B","ECSCPT",2)

"BLD",6253,"KRN",9.8,0)
9.8
"BLD",6253,"KRN",9.8,"NM",0)
^9.68A^44^42
"BLD",6253,"KRN",9.8,"NM",1,0)
ECSCPT^^0^B10074493
"BLD",6253,"KRN",9.8,"NM",2,0)
ECRRPC^^0^B12303108
"BLD",6253,"KRN",9.8,"NM",3,0)
ECRRPT1^^0^B50531170
"BLD",6253,"KRN",9.8,"NM",4,0)
ECINCPT^^0^B3068405
"BLD",6253,"KRN",9.8,"NM",5,0)
ECPAT^^0^B30279346
"BLD",6253,"KRN",9.8,"NM",6,0)
ECOSSUM^^0^B61610844
"BLD",6253,"KRN",9.8,"NM",7,0)
ECRDSSU^^0^B49642828
"BLD",6253,"KRN",9.8,"NM",8,0)
ECPRSUM1^^0^B27513116
"BLD",6253,"KRN",9.8,"NM",9,0)
ECPROV3^^0^B34020272
"BLD",6253,"KRN",9.8,"NM",10,0)
ECRPRSN^^0^B81423223
"BLD",6253,"KRN",9.8,"NM",12,0)
ECEDF^^0^B27614692
"BLD",6253,"KRN",9.8,"NM",13,0)
ECBEP1A^^0^B1169013
"BLD",6253,"KRN",9.8,"NM",14,0)
ECBEP2A^^0^B30996875
"BLD",6253,"KRN",9.8,"NM",15,0)
ECBEN2A^^0^B45265158
"BLD",6253,"KRN",9.8,"NM",16,0)
ECBEN1A^^0^B1611604
"BLD",6253,"KRN",9.8,"NM",17,0)
ECBEN1B^^0^B23165731
"BLD",6253,"KRN",9.8,"NM",18,0)
ECBEN2U^^0^B32288429
"BLD",6253,"KRN",9.8,"NM",19,0)
ECBENF^^0^B10029012
"BLD",6253,"KRN",9.8,"NM",20,0)
ECBEP1B^^0^B43458281
"BLD",6253,"KRN",9.8,"NM",21,0)
ECBEPF^^0^B8758024
"BLD",6253,"KRN",9.8,"NM",22,0)
ECED3^^0^B70458446
"BLD",6253,"KRN",9.8,"NM",24,0)
ECPCEU^^0^B21055303
"BLD",6253,"KRN",9.8,"NM",25,0)
ECED1^^0^B37208178
"BLD",6253,"KRN",9.8,"NM",26,0)
ECBEP2B^^0^B9317904
"BLD",6253,"KRN",9.8,"NM",27,0)
ECMLMD^^0^B2107431
"BLD",6253,"KRN",9.8,"NM",28,0)
ECMLMF^^0^B31356519
"BLD",6253,"KRN",9.8,"NM",29,0)
ECPCER^^0^B18846503
"BLD",6253,"KRN",9.8,"NM",30,0)
ECNTPCE^^0^B20426279
"BLD",6253,"KRN",9.8,"NM",31,0)
ECUERPC^^0^B51258174
"BLD",6253,"KRN",9.8,"NM",32,0)
ECUERPC1^^0^B52615700
"BLD",6253,"KRN",9.8,"NM",33,0)
ECEFPAT^^0^B53422819
"BLD",6253,"KRN",9.8,"NM",34,0)
ECEDU^^0^B14387770
"BLD",6253,"KRN",9.8,"NM",35,0)
ECUTL2^^0^B26898243
"BLD",6253,"KRN",9.8,"NM",36,0)
ECPRVMUT^^0^B51865665
"BLD",6253,"KRN",9.8,"NM",37,0)
EC2P72PT^^0^B39906123
"BLD",6253,"KRN",9.8,"NM",38,0)
ECSCPT1^^0^B8958555
"BLD",6253,"KRN",9.8,"NM",39,0)
ECUERPC2^^0^B4379699
"BLD",6253,"KRN",9.8,"NM",40,0)
ECV3RPC^^0^B45442290
"BLD",6253,"KRN",9.8,"NM",41,0)
ECUMRPC2^^0^B29933557
"BLD",6253,"KRN",9.8,"NM",42,0)
ECBEN2B^^0^B9189087
"BLD",6253,"KRN",9.8,"NM",43,0)
ECUMRPC1^^0^B61789202
"BLD",6253,"KRN",9.8,"NM",44,0)
ECSCR^^0^B7221580
"BLD",6253,"KRN",9.8,"NM","B","EC2P72PT",37)

"BLD",6253,"KRN",9.8,"NM","B","ECBEN1A",16)

"BLD",6253,"KRN",9.8,"NM","B","ECBEN1B",17)

"BLD",6253,"KRN",9.8,"NM","B","ECBEN2A",15)

"BLD",6253,"KRN",9.8,"NM","B","ECBEN2B",42)

"BLD",6253,"KRN",9.8,"NM","B","ECBEN2U",18)

"BLD",6253,"KRN",9.8,"NM","B","ECBENF",19)

"BLD",6253,"KRN",9.8,"NM","B","ECBEP1A",13)

"BLD",6253,"KRN",9.8,"NM","B","ECBEP1B",20)

"BLD",6253,"KRN",9.8,"NM","B","ECBEP2A",14)

"BLD",6253,"KRN",9.8,"NM","B","ECBEP2B",26)

"BLD",6253,"KRN",9.8,"NM","B","ECBEPF",21)

"BLD",6253,"KRN",9.8,"NM","B","ECED1",25)

"BLD",6253,"KRN",9.8,"NM","B","ECED3",22)

"BLD",6253,"KRN",9.8,"NM","B","ECEDF",12)

"BLD",6253,"KRN",9.8,"NM","B","ECEDU",34)

"BLD",6253,"KRN",9.8,"NM","B","ECEFPAT",33)

"BLD",6253,"KRN",9.8,"NM","B","ECINCPT",4)

"BLD",6253,"KRN",9.8,"NM","B","ECMLMD",27)

"BLD",6253,"KRN",9.8,"NM","B","ECMLMF",28)

"BLD",6253,"KRN",9.8,"NM","B","ECNTPCE",30)

"BLD",6253,"KRN",9.8,"NM","B","ECOSSUM",6)

"BLD",6253,"KRN",9.8,"NM","B","ECPAT",5)

"BLD",6253,"KRN",9.8,"NM","B","ECPCER",29)

"BLD",6253,"KRN",9.8,"NM","B","ECPCEU",24)

"BLD",6253,"KRN",9.8,"NM","B","ECPROV3",9)

"BLD",6253,"KRN",9.8,"NM","B","ECPRSUM1",8)

"BLD",6253,"KRN",9.8,"NM","B","ECPRVMUT",36)

"BLD",6253,"KRN",9.8,"NM","B","ECRDSSU",7)

"BLD",6253,"KRN",9.8,"NM","B","ECRPRSN",10)

"BLD",6253,"KRN",9.8,"NM","B","ECRRPC",2)

"BLD",6253,"KRN",9.8,"NM","B","ECRRPT1",3)

"BLD",6253,"KRN",9.8,"NM","B","ECSCPT",1)

"BLD",6253,"KRN",9.8,"NM","B","ECSCPT1",38)

"BLD",6253,"KRN",9.8,"NM","B","ECSCR",44)

"BLD",6253,"KRN",9.8,"NM","B","ECUERPC",31)

"BLD",6253,"KRN",9.8,"NM","B","ECUERPC1",32)

"BLD",6253,"KRN",9.8,"NM","B","ECUERPC2",39)

"BLD",6253,"KRN",9.8,"NM","B","ECUMRPC1",43)

"BLD",6253,"KRN",9.8,"NM","B","ECUMRPC2",41)

"BLD",6253,"KRN",9.8,"NM","B","ECUTL2",35)

"BLD",6253,"KRN",9.8,"NM","B","ECV3RPC",40)

"BLD",6253,"KRN",19,0)
19
"BLD",6253,"KRN",19,"NM",0)
^9.68A^6^5
"BLD",6253,"KRN",19,"NM",1,0)
ECINCPT^^0
"BLD",6253,"KRN",19,"NM",2,0)
ECSCPT^^0
"BLD",6253,"KRN",19,"NM",4,0)
EC GUI CONTEXT^^0
"BLD",6253,"KRN",19,"NM",5,0)
EC PRO SUM^^0
"BLD",6253,"KRN",19,"NM",6,0)
ECDSRPT^^2
"BLD",6253,"KRN",19,"NM","B","EC GUI CONTEXT",4)

"BLD",6253,"KRN",19,"NM","B","EC PRO SUM",5)

"BLD",6253,"KRN",19,"NM","B","ECDSRPT",6)

"BLD",6253,"KRN",19,"NM","B","ECINCPT",1)

"BLD",6253,"KRN",19,"NM","B","ECSCPT",2)

"BLD",6253,"KRN",19.1,0)
19.1
"BLD",6253,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",6253,"KRN",101,0)
101
"BLD",6253,"KRN",409.61,0)
409.61
"BLD",6253,"KRN",771,0)
771
"BLD",6253,"KRN",870,0)
870
"BLD",6253,"KRN",8989.51,0)
8989.51
"BLD",6253,"KRN",8989.52,0)
8989.52
"BLD",6253,"KRN",8994,0)
8994
"BLD",6253,"KRN",8994,"NM",0)
^9.68A^^
"BLD",6253,"KRN","B",.4,.4)

"BLD",6253,"KRN","B",.401,.401)

"BLD",6253,"KRN","B",.402,.402)

"BLD",6253,"KRN","B",.403,.403)

"BLD",6253,"KRN","B",.5,.5)

"BLD",6253,"KRN","B",.84,.84)

"BLD",6253,"KRN","B",3.6,3.6)

"BLD",6253,"KRN","B",3.8,3.8)

"BLD",6253,"KRN","B",9.2,9.2)

"BLD",6253,"KRN","B",9.8,9.8)

"BLD",6253,"KRN","B",19,19)

"BLD",6253,"KRN","B",19.1,19.1)

"BLD",6253,"KRN","B",101,101)

"BLD",6253,"KRN","B",409.61,409.61)

"BLD",6253,"KRN","B",771,771)

"BLD",6253,"KRN","B",870,870)

"BLD",6253,"KRN","B",8989.51,8989.51)

"BLD",6253,"KRN","B",8989.52,8989.52)

"BLD",6253,"KRN","B",8994,8994)

"BLD",6253,"QUES",0)
^9.62^^
"BLD",6253,"REQB",0)
^9.611^5^4
"BLD",6253,"REQB",1,0)
EC*2.0*59^2
"BLD",6253,"REQB",3,0)
EC*2.0*65^2
"BLD",6253,"REQB",4,0)
EC*2.0*75^2
"BLD",6253,"REQB",5,0)
EC*2.0*78^2
"BLD",6253,"REQB","B","EC*2.0*59",1)

"BLD",6253,"REQB","B","EC*2.0*65",3)

"BLD",6253,"REQB","B","EC*2.0*75",4)

"BLD",6253,"REQB","B","EC*2.0*78",5)

"FIA",721)
EVENT CAPTURE PATIENT
"FIA",721,0)
^ECH(
"FIA",721,0,0)
721
"FIA",721,0,1)
y^y^p^^^^n^^n
"FIA",721,0,10)

"FIA",721,0,11)

"FIA",721,0,"RLRO")

"FIA",721,0,"VR")
2.0^EC
"FIA",721,721)
1
"FIA",721,721,10)

"FIA",721,721,15)

"FIA",721,721,17)

"FIA",721,721,30)

"FIA",721,721,42)

"FIA",721,721.042)
0
"INIT")
EC2P72PT
"KRN",.402,1987,-1)
0^1
"KRN",.402,1987,0)
EC CREATE PATIENT ENTRY^3051202.1316^^721^^^3051216
"KRN",.402,1987,"DR",1,721)
1////^S X=$G(ECPTR("DFN"));2////^S X=$G(ECPRR("PROCDT"));3////^S X=$G(ECL);4////^S X=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",2);5////^S X=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",3);6////^S X=$P($G(ECDSSU),"^");
"KRN",.402,1987,"DR",1,721,1)
7////^S X=+$P($G(ECCAT),"^");8////^S X=$G(ECPRR("PROC"));9////^S X=$G(ECPRR("VOL"));11////^S X=$G(ECPTR("ORDSEC"));13////^S X=$G(DUZ);19////^S X=$G(ECPRR("PCEPR"));20////^S X=$G(ECPTR("DX"));21////^S X=$G(ECPTR("AO"));
"KRN",.402,1987,"DR",1,721,2)
22////^S X=$G(ECPTR("IR"));23////^S X=$G(ECPTR("ENV"));24////^S X=$G(ECPTR("SC"));35////^S X=$G(ECPTR("MST"));39////^S X=$G(ECPTR("HNC"));40////^S X=$G(ECPTR("CV"));26////^S X=$G(ECPTR("CLIN"));
"KRN",.402,1987,"DR",1,721,3)
27////^S X=$P($G(^SC(+$G(ECPTR("CLIN")),0)),"^",7);29////^S X=$G(ECPTR("IO"));34////^S X=$G(ECPRR("REAS"));
"KRN",.402,1987,"ROU")
^ECMXP
"KRN",.402,1987,"ROUOLD")
ECMXP
"KRN",.402,1988,-1)
0^2
"KRN",.402,1988,0)
EC FILE PCE NODE^3051202.1317^^721^^^3051216
"KRN",.402,1988,"DR",1,721)
30////^S X=ECPRR("PROCDT")_"~"_ECPTR("DFN")_"~"_ECPTR("CLIN")_"~"_ECL_"~"_ECDSS_"~~~~"_ECPRR("VOL")_"~"_ECPRR("PCEPR")_"~"_ECPTR("DX");
"KRN",.402,1988,"DR",1,721,1)
30////^S X=X_"~"_ECAO_"~"_ECIR_"~"_ECEV_"~"_ECSC_"~"_$S(ECNPP]"":ECNPP,1:"")_"~"_ECELIG_"~"_ECMST_"~"_ECHNC_"~"_ECCV;37////^S X=ECMODS;
"KRN",.402,1988,"ROU")
^ECMXPC
"KRN",.402,1988,"ROUOLD")
ECMXPC
"KRN",9.2,2962,-1)
0^1
"KRN",9.2,2962,0)
EC PRO SUM^Provider (1-7) Summary Report^2950425.070823^
"KRN",9.2,2962,1,0)
^^11^11^3051118^
"KRN",9.2,2962,1,1,0)
** This report is formatted for 132-column output. **
"KRN",9.2,2962,1,2,0)
 
"KRN",9.2,2962,1,3,0)
This option allows you to print/display workload within a specified date
"KRN",9.2,2962,1,4,0)
range for a selected provider.  The output includes:
"KRN",9.2,2962,1,5,0)
 
"KRN",9.2,2962,1,6,0)
 - Procedure and procedure reason
"KRN",9.2,2962,1,7,0)
 - Patient name and SSN
"KRN",9.2,2962,1,8,0)
 - Matrix showing how many times a specific procedure was performed on a
"KRN",9.2,2962,1,9,0)
   specific patient with the selected provider as Provider 1, Provider 2, 
"KRN",9.2,2962,1,10,0)
   to Provider 7
"KRN",9.2,2962,1,11,0)
 - Subtotals by procedure
"KRN",9.2,2962,10.2)
W @IOF
"KRN",9.2,3506,-1)
0^2
"KRN",9.2,3506,0)
ECSCPT^Event Code Screens with CPT Codes^3050824.162938^
"KRN",9.2,3506,1,0)
^^14^14^3051212^
"KRN",9.2,3506,1,1,0)
This option allows you to print/display event code screens 
"KRN",9.2,3506,1,2,0)
with active/inactive/both CPT codes for all or a specific DSS
"KRN",9.2,3506,1,3,0)
Unit. The output includes
"KRN",9.2,3506,1,4,0)
       . . .
"KRN",9.2,3506,1,5,0)
 - Run Date
"KRN",9.2,3506,1,6,0)
 - Location
"KRN",9.2,3506,1,7,0)
 - Service
"KRN",9.2,3506,1,8,0)
 - DSS Unit
"KRN",9.2,3506,1,9,0)
 - Category (if applicable)
"KRN",9.2,3506,1,10,0)
 - Procedure Name
"KRN",9.2,3506,1,11,0)
 - National Number
"KRN",9.2,3506,1,12,0)
 - CPT Code 
"KRN",9.2,3506,1,13,0)
   (CPT inactive codes are flagged with an *I* when printing 
"KRN",9.2,3506,1,14,0)
    both active and inactive codes)
"KRN",9.2,3506,10.2)
W @IOF
"KRN",9.2,3507,-1)
0^3
"KRN",9.2,3507,0)
ECINCPT^National/Local Procedure Codes with Inactive CPT^3050824.164156^
"KRN",9.2,3507,1,0)
^9.21^8^8^3051202^^^^
"KRN",9.2,3507,1,1,0)
This report provides a list of National and Local Procedure Codes with 
"KRN",9.2,3507,1,2,0)
inactive CPT codes from file #725.   The output includes
"KRN",9.2,3507,1,3,0)
 
"KRN",9.2,3507,1,4,0)
 - Run Date 
"KRN",9.2,3507,1,5,0)
 - National Number
"KRN",9.2,3507,1,6,0)
 - National Name
"KRN",9.2,3507,1,7,0)
 - CPT Code
"KRN",9.2,3507,1,8,0)
 - Inactive Date
"KRN",9.2,3507,10.2)
W @IOF
"KRN",19,9672,-1)
0^5
"KRN",19,9672,0)
EC PRO SUM^Provider (1-7) Summary Report^^R^^^EC PRO SUM^^^^^EVENT CAPTURE^^^1
"KRN",19,9672,1,0)
^^3^3^3051118^
"KRN",19,9672,1,1,0)
A summary report, by provider, of the number of procedures each provider
"KRN",19,9672,1,2,0)
has performed as first, second, third to seven. This report could be used
"KRN",19,9672,1,3,0)
as a training summary.
"KRN",19,9672,15)
W @IOF
"KRN",19,9672,25)
ECPRSUM1
"KRN",19,9672,"U")
PROVIDER (1-7) SUMMARY REPORT
"KRN",19,9681,-1)
2^6
"KRN",19,9681,0)
ECDSRPT^Management Reports^^M^11724^^2939^^^^^499^^1^1
"KRN",19,9681,10,0)
^19.01IP^6^6
"KRN",19,9681,10,5,0)
13156^^5
"KRN",19,9681,10,5,"^")
ECSCPT
"KRN",19,9681,10,6,0)
13157^^6
"KRN",19,9681,10,6,"^")
ECINCPT
"KRN",19,9681,"U")
MANAGEMENT REPORTS
"KRN",19,11860,-1)
0^4
"KRN",19,11860,0)
EC GUI CONTEXT^EC GUI Context version 2.1.0.0^^B^^^^^^^^EVENT CAPTURE
"KRN",19,11860,1,0)
^19.06^1^1^3051212^^^^
"KRN",19,11860,1,1,0)
This is the Broker Client/Server type option for the Event Capture GUI option
"KRN",19,11860,99)
58583,58456
"KRN",19,11860,99.1)
58981,55862
"KRN",19,11860,"RPC",0)
^19.05P^53^53
"KRN",19,11860,"RPC",1,0)
EC DSSCATCHECK
"KRN",19,11860,"RPC",2,0)
EC FILER
"KRN",19,11860,"RPC",3,0)
EC GETBATPROCS
"KRN",19,11860,"RPC",4,0)
EC GETCAT
"KRN",19,11860,"RPC",5,0)
EC GETCPTLST
"KRN",19,11860,"RPC",6,0)
EC GETDSSECS
"KRN",19,11860,"RPC",7,0)
EC GETDSSUNIT
"KRN",19,11860,"RPC",8,0)
EC GETDSSUNITUSRS
"KRN",19,11860,"RPC",9,0)
EC GETECLOC
"KRN",19,11860,"RPC",10,0)
EC GETECSCATS
"KRN",19,11860,"RPC",11,0)
EC GETECSCREEN
"KRN",19,11860,"RPC",12,0)
EC GETECSDETAIL
"KRN",19,11860,"RPC",13,0)
EC GETECSPROCS
"KRN",19,11860,"RPC",14,0)
EC GETENCDXS
"KRN",19,11860,"RPC",15,0)
EC GETIEN
"KRN",19,11860,"RPC",16,0)
EC GETLIST
"KRN",19,11860,"RPC",17,0)
EC GETLOC
"KRN",19,11860,"RPC",18,0)
EC GETNATPX
"KRN",19,11860,"RPC",19,0)
EC GETPATCLASTAT
"KRN",19,11860,"RPC",20,0)
EC GETPATELIG
"KRN",19,11860,"RPC",21,0)
EC GETPATINFO
"KRN",19,11860,"RPC",22,0)
EC GETPATPROCS
"KRN",19,11860,"RPC",23,0)
EC GETPRODEFS
"KRN",19,11860,"RPC",24,0)
EC GETPROVIDER
"KRN",19,11860,"RPC",25,0)
EC GETPXLST
"KRN",19,11860,"RPC",26,0)
EC GETPXMODIFIER
"KRN",19,11860,"RPC",27,0)
EC GETPXREASON
"KRN",19,11860,"RPC",28,0)
EC GETSCNHELP
"KRN",19,11860,"RPC",29,0)
EC GETUSRDSSUNIT
"KRN",19,11860,"RPC",30,0)
EC REPORTS
"KRN",19,11860,"RPC",31,0)
EC VALIDATE SPREADSHEET DATA
"KRN",19,11860,"RPC",32,0)
ORWU USERINFO
"KRN",19,11860,"RPC",33,0)
ORWU HASKEY
"KRN",19,11860,"RPC",34,0)
ORWU DEVICE
"KRN",19,11860,"RPC",35,0)
SC PATIENT LOOKUP
"KRN",19,11860,"RPC",36,0)
ORWU NEWPERS
"KRN",19,11860,"RPC",37,0)
DDR GET DD HELP
"KRN",19,11860,"RPC",38,0)
DDR FINDER
"KRN",19,11860,"RPC",39,0)
DDR FIND1
"KRN",19,11860,"RPC",40,0)
DDR LISTER
"KRN",19,11860,"RPC",41,0)
EC GETDATE
"KRN",19,11860,"RPC",42,0)
EC CLASHELP
"KRN",19,11860,"RPC",43,0)
DDR GETS ENTRY DATA
"KRN",19,11860,"RPC",44,0)
DG CHK BS5 XREF Y/N
"KRN",19,11860,"RPC",45,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,11860,"RPC",46,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,11860,"RPC",47,0)
DG CHK PAT/DIV MEANS TEST
"KRN",19,11860,"RPC",48,0)
EC SPACEBAR
"KRN",19,11860,"RPC",49,0)
EC DIEDON
"KRN",19,11860,"RPC",50,0)
EC GETPATCH
"KRN",19,11860,"RPC",51,0)
EC GETVISITINFO
"KRN",19,11860,"RPC",52,0)
EC GETVERSION
"KRN",19,11860,"RPC",53,0)
ORWU DT
"KRN",19,11860,"U")
EC GUI CONTEXT VERSION 2.1.0.0
"KRN",19,13156,-1)
0^2
"KRN",19,13156,0)
ECSCPT^Event Code Screens with CPT Codes^^R^^^ECSCPT^^^^^EVENT CAPTURE^^^1
"KRN",19,13156,1,0)
^19.06^3^3^3051202^^
"KRN",19,13156,1,1,0)
This option produces a list of event codes screens with CPT Codes. Users
"KRN",19,13156,1,2,0)
can choose to list event code screens with active, inactive or all CPT
"KRN",19,13156,1,3,0)
codes.
"KRN",19,13156,15)
W @IOF
"KRN",19,13156,25)
ECSCPT
"KRN",19,13156,"U")
EVENT CODE SCREENS WITH CPT CO
"KRN",19,13157,-1)
0^1
"KRN",19,13157,0)
ECINCPT^National/Local Procedure Codes with Inactive CPT^^R^^^ECINCPT^^^^^EVENT CAPTURE^^^1
"KRN",19,13157,1,0)
^^2^2^3050824^
"KRN",19,13157,1,1,0)
This option lists the national and local procedure codes that have 
"KRN",19,13157,1,2,0)
inactive CPT codes.
"KRN",19,13157,15)
W @IOF
"KRN",19,13157,25)
EN^ECINCPT
"KRN",19,13157,"U")
NATIONAL/LOCAL PROCEDURE CODES
"MBREQ")
0
"ORD",1,9.2)
9.2;1;;;HELP^XPDTA1;HLPF1^XPDIA1;HLPE1^XPDIA1;HLPF2^XPDIA1;;HLPDEL^XPDIA1
"ORD",1,9.2,0)
HELP FRAME
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",499,-1)
1^1
"PKG",499,0)
EVENT CAPTURE^EC^Event Capture Workload Capture System^
"PKG",499,20,0)
^9.402P^^
"PKG",499,22,0)
^9.49I^1^1
"PKG",499,22,1,0)
2.0^2960508^2970410^11715
"PKG",499,22,1,"PAH",1,0)
72^3060511^11724
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
42
"RTN","EC2P72PT")
0^37^B39906123
"RTN","EC2P72PT",1,0)
EC2P72PT ;ALB/JAM - PATCH EC*2.0*72 Post-Init Rtn ; 5/11/06 2:57pm
"RTN","EC2P72PT",2,0)
 ;;2.0; EVENT CAPTURE ;**72**;8 May 96
"RTN","EC2P72PT",3,0)
 ;
"RTN","EC2P72PT",4,0)
POST ; entry point
"RTN","EC2P72PT",5,0)
 D MES^XPDUTL(" ")
"RTN","EC2P72PT",6,0)
 D BMES^XPDUTL("Converting Provider fields 10,15 and 17 to a multiple field")
"RTN","EC2P72PT",7,0)
 D MES^XPDUTL("                           in EVENT CAPTURE PATIENT file (#721)...")
"RTN","EC2P72PT",8,0)
 D MES^XPDUTL(" ")
"RTN","EC2P72PT",9,0)
 I '$D(^ECH) D  Q
"RTN","EC2P72PT",10,0)
 .D BMES^XPDUTL("Event Capture File #721 doesn't exist on this account.")
"RTN","EC2P72PT",11,0)
 .D MES^XPDUTL("            No conversion necessary.  Process terminated...")
"RTN","EC2P72PT",12,0)
 D MES^XPDUTL(" ")
"RTN","EC2P72PT",13,0)
 I '$D(^DD(721,42)) D  Q
"RTN","EC2P72PT",14,0)
 .D BMES^XPDUTL("Event Capture Field #42 doesn't exist on this account.")
"RTN","EC2P72PT",15,0)
 .D MES^XPDUTL("            Conversion CANNOT proceed.  Process terminated...")
"RTN","EC2P72PT",16,0)
 D EN1
"RTN","EC2P72PT",17,0)
 Q
"RTN","EC2P72PT",18,0)
 ;
"RTN","EC2P72PT",19,0)
RESTART ;Restart Provider fields conversion backjob 
"RTN","EC2P72PT",20,0)
 D BMES^XPDUTL("Restarting Conversion of Provider fields 10,15 and 17 to a ")
"RTN","EC2P72PT",21,0)
 D MES^XPDUTL("       multiple field in EVENT CAPTURE PATIENT file (#721)...")
"RTN","EC2P72PT",22,0)
 D MES^XPDUTL(" ")
"RTN","EC2P72PT",23,0)
 D EN1
"RTN","EC2P72PT",24,0)
 Q
"RTN","EC2P72PT",25,0)
EN1 ;
"RTN","EC2P72PT",26,0)
 L +^ECH(0):10 I '$T D  G END
"RTN","EC2P72PT",27,0)
 .D BMES^XPDUTL("Event Capture File in Use.  Try again later..")
"RTN","EC2P72PT",28,0)
 D BMES^XPDUTL("*** Event Capture menu will be locked and unavailable... ***")
"RTN","EC2P72PT",29,0)
 D BMES^XPDUTL("You will receive a MailMan message when task is completed or if stopped.")
"RTN","EC2P72PT",30,0)
 D BMES^XPDUTL("  ")
"RTN","EC2P72PT",31,0)
 S ZTRTN="START^EC2P72PT",ZTDESC="Provider Conversion in File #721, EC*2*72",ZTIO=""
"RTN","EC2P72PT",32,0)
 S ZTDTH=$H,ZTREQ="@",ZTSAVE("ZTREQ")=""
"RTN","EC2P72PT",33,0)
 I $G(XPDSET)'="" S ZTSAVE("XPDSET")=""
"RTN","EC2P72PT",34,0)
 D ^%ZTLOAD
"RTN","EC2P72PT",35,0)
END D KILL1
"RTN","EC2P72PT",36,0)
 L -^ECH(0)
"RTN","EC2P72PT",37,0)
 Q
"RTN","EC2P72PT",38,0)
 ;
"RTN","EC2P72PT",39,0)
START ;* background job entry point
"RTN","EC2P72PT",40,0)
 N ECIEN,ECDAT,ECPRV,X1,X2,X,I,TXTVAR,LINE,COUNT,STOP,ECX1
"RTN","EC2P72PT",41,0)
 ;Disable options
"RTN","EC2P72PT",42,0)
 D OUT^XPDMENU("ECXEC","OUT OF ORDER FOR EC PROVIDER CONVERSION")
"RTN","EC2P72PT",43,0)
 D OUT^XPDMENU("ECMENU","OUT OF ORDER FOR EC PROVIDER CONVERSION")
"RTN","EC2P72PT",44,0)
 D OUT^XPDMENU("EC GUI CONTEXT","OUT OF ORDER FOR EC PROVIDER CONVERSION")
"RTN","EC2P72PT",45,0)
 D OUT^XPDMENU("ECMGR","OUT OF ORDER FOR EC PROVIDER CONVERSION")
"RTN","EC2P72PT",46,0)
 K ^TMP($J,"EC2P72")
"RTN","EC2P72PT",47,0)
 S (COUNT,STOP)=0,ECIEN=+$G(^XTMP("ECPROVIDER",1))
"RTN","EC2P72PT",48,0)
 S (ECX1,X1)=$$NOW^XLFDT(),X2=60 D C^%DTC
"RTN","EC2P72PT",49,0)
 I '$D(^XTMP("ECPROVIDER",0)) D
"RTN","EC2P72PT",50,0)
 .S ^XTMP("ECPROVIDER",0)=X_"^"_ECX1_"^EC Provider fields conversion to multiple"
"RTN","EC2P72PT",51,0)
 S ^XTMP("ECPROVIDER",3)=$$FMTE^XLFDT($$NOW^XLFDT(),1)  ;start time
"RTN","EC2P72PT",52,0)
 F I=1:1 S TXTVAR=$P($T(MSGTXT+I),";;",2) Q:TXTVAR="QUIT"  D LINE(TXTVAR)
"RTN","EC2P72PT",53,0)
 L +^ECH(0):60   ;review if this is necessary
"RTN","EC2P72PT",54,0)
 F  S ECIEN=$O(^ECH(ECIEN)) Q:'ECIEN  D  I STOP Q
"RTN","EC2P72PT",55,0)
 .S ECDAT=$G(^ECH(ECIEN,0)) I ECDAT="" D UPXTMP Q
"RTN","EC2P72PT",56,0)
 .K ECPRV
"RTN","EC2P72PT",57,0)
 .I $P(ECDAT,"^",11)'="" S ECPRV(1)=$P(ECDAT,"^",11)_"^P"
"RTN","EC2P72PT",58,0)
 .I $P(ECDAT,"^",15)'="" S ECPRV(2)=$P(ECDAT,"^",15)_"^"_$S($O(ECPRV("")):"S",1:"P")
"RTN","EC2P72PT",59,0)
 .I $P(ECDAT,"^",17)'="" S ECPRV(3)=$P(ECDAT,"^",17)_"^"_$S($O(ECPRV("")):"S",1:"P")
"RTN","EC2P72PT",60,0)
 .D UPD721
"RTN","EC2P72PT",61,0)
 .D UPXTMP
"RTN","EC2P72PT",62,0)
 .;Check Background task (taskman) - to see if task stopped
"RTN","EC2P72PT",63,0)
 .S STOP=$$S^%ZTLOAD()
"RTN","EC2P72PT",64,0)
 S $P(^XTMP("ECPROVIDER",3),"^",2)=$$FMTE^XLFDT($$NOW^XLFDT(),1)
"RTN","EC2P72PT",65,0)
 I STOP D  G END1
"RTN","EC2P72PT",66,0)
 .D LINE("  The provider conversion process was aborted.")
"RTN","EC2P72PT",67,0)
 .D LINE("     Conversion began:          "_$P($G(^XTMP("ECPROVIDER",3)),"^"))
"RTN","EC2P72PT",68,0)
 .D LINE("     Conversion terminated:     "_$P($G(^XTMP("ECPROVIDER",3)),"^",2))
"RTN","EC2P72PT",69,0)
 .D LINE("     Last record (IEN) Updated: "_$G(^XTMP("ECPROVIDER",1)))
"RTN","EC2P72PT",70,0)
 .D LINE("     Last IEN in File #721:     "_$O(^ECH("A"),-1))
"RTN","EC2P72PT",71,0)
 .D LINE("     Total # Records converted: "_$G(^XTMP("ECPROVIDER",2)))
"RTN","EC2P72PT",72,0)
 .D LINE(" ")
"RTN","EC2P72PT",73,0)
 .D LINE("  To restart the provider conversion process enter the following at the programmer's prompt.")
"RTN","EC2P72PT",74,0)
 .D LINE("      D RESTART^EC2P72PT")
"RTN","EC2P72PT",75,0)
 .D LINE(" ")
"RTN","EC2P72PT",76,0)
 .D LINE("   Make sure the following options are placed out of order")
"RTN","EC2P72PT",77,0)
 .D LINE("      ECMENU           Event Capture Menu")
"RTN","EC2P72PT",78,0)
 .D LINE("      EC GUI CONTEXT   EC GUI Context version 2.0.11.1")
"RTN","EC2P72PT",79,0)
 .D LINE("      ECXEC            Event Capture Extract")
"RTN","EC2P72PT",80,0)
 .D LINE("      ECMGR            Event Capture Management Menu")
"RTN","EC2P72PT",81,0)
 D LINE("  The provider conversion process was successfully completed.")
"RTN","EC2P72PT",82,0)
 D LINE("     Conversion began:            "_$P($G(^XTMP("ECPROVIDER",3)),"^"))
"RTN","EC2P72PT",83,0)
 D LINE("     Conversion completed:        "_$P($G(^XTMP("ECPROVIDER",3)),"^",2))
"RTN","EC2P72PT",84,0)
 D LINE("     Last record (IEN) converted: "_$G(^XTMP("ECPROVIDER",1)))
"RTN","EC2P72PT",85,0)
 D LINE("     Last IEN in File #721:       "_$O(^ECH("A"),-1))
"RTN","EC2P72PT",86,0)
 D LINE("     Total # Records converted:   "_$G(^XTMP("ECPROVIDER",2)))
"RTN","EC2P72PT",87,0)
 D LINE(" ")
"RTN","EC2P72PT",88,0)
 D LINE("  Make sure the following options are placed back in order")
"RTN","EC2P72PT",89,0)
 D LINE("     ECMENU           Event Capture Menu")
"RTN","EC2P72PT",90,0)
 D LINE("     EC GUI CONTEXT   EC GUI Context version 2.1.0.0")
"RTN","EC2P72PT",91,0)
 D LINE("     ECXEC            Event Capture Extract")
"RTN","EC2P72PT",92,0)
 ;Place option back in order
"RTN","EC2P72PT",93,0)
 D OUT^XPDMENU("ECXEC","")
"RTN","EC2P72PT",94,0)
 D OUT^XPDMENU("ECMENU","")
"RTN","EC2P72PT",95,0)
 D OUT^XPDMENU("EC GUI CONTEXT","")
"RTN","EC2P72PT",96,0)
 D OUT^XPDMENU("ECMGR","")
"RTN","EC2P72PT",97,0)
END1 D MAIL
"RTN","EC2P72PT",98,0)
 L -^ECH(0)
"RTN","EC2P72PT",99,0)
 K ^TMP($J,"EC2P72"),I,Y
"RTN","EC2P72PT",100,0)
 Q
"RTN","EC2P72PT",101,0)
UPXTMP ;Update ^XTMP with last ECIEN from ^ECH
"RTN","EC2P72PT",102,0)
 S ^XTMP("ECPROVIDER",1)=ECIEN
"RTN","EC2P72PT",103,0)
 S ^XTMP("ECPROVIDER",2)=+$G(^XTMP("ECPROVIDER",2))+1
"RTN","EC2P72PT",104,0)
 Q
"RTN","EC2P72PT",105,0)
UPD721 ;Update ^ECH with providers at multiple field #42.
"RTN","EC2P72PT",106,0)
 N SIEN,ECDATA,ECPRVDA,ECERR,DA,DIK
"RTN","EC2P72PT",107,0)
 ;delete old entries
"RTN","EC2P72PT",108,0)
 I '$D(ECPRV) Q
"RTN","EC2P72PT",109,0)
 I $D(^ECH(ECIEN,"PRV")) D
"RTN","EC2P72PT",110,0)
 . S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""PRV"",",DA=0
"RTN","EC2P72PT",111,0)
 . F  S DA=$O(^ECH(DA(1),"PRV",DA)) Q:'DA  D ^DIK
"RTN","EC2P72PT",112,0)
 S SIEN=0
"RTN","EC2P72PT",113,0)
 F  S SIEN=$O(ECPRV(SIEN)) Q:'SIEN  D
"RTN","EC2P72PT",114,0)
 .S ECDATA=ECPRV(SIEN)
"RTN","EC2P72PT",115,0)
 .D FILALT
"RTN","EC2P72PT",116,0)
 Q
"RTN","EC2P72PT",117,0)
FILALT ;If error occurs filing trying record using another method
"RTN","EC2P72PT",118,0)
 N DIC,DD,DO,X,DIE,DR,DA
"RTN","EC2P72PT",119,0)
 S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,42,0),U,2)
"RTN","EC2P72PT",120,0)
 S X=+ECDATA,DIC="^ECH("_DA(1)_","_"""PRV"""_"," D FILE^DICN
"RTN","EC2P72PT",121,0)
 S DIE=DIC,DR=".02////"_$P(ECDATA,U,2) D ^DIE
"RTN","EC2P72PT",122,0)
 Q
"RTN","EC2P72PT",123,0)
 ;
"RTN","EC2P72PT",124,0)
LINE(TEXT) ; Add line to message global
"RTN","EC2P72PT",125,0)
 S COUNT=COUNT+1,^TMP($J,"EC2P72",COUNT)=TEXT
"RTN","EC2P72PT",126,0)
 Q
"RTN","EC2P72PT",127,0)
 ;
"RTN","EC2P72PT",128,0)
MSGTXT ; Message intro
"RTN","EC2P72PT",129,0)
 ;; Please forward this message to your local DSS Site Manager or
"RTN","EC2P72PT",130,0)
 ;; Event Capture ADPAC.
"RTN","EC2P72PT",131,0)
 ;;
"RTN","EC2P72PT",132,0)
 ;; A conversion was done on the providers stored in fields #10, 15 
"RTN","EC2P72PT",133,0)
 ;; and 17 in Event Capture file #721. The data was moved to a new 
"RTN","EC2P72PT",134,0)
 ;; provider multiple field #42 in file #721. The data in fields 
"RTN","EC2P72PT",135,0)
 ;; #10, 15 and 17 will remain but no new data will be populated in 
"RTN","EC2P72PT",136,0)
 ;; these fields with the installation of EC*2.0*72.  This message 
"RTN","EC2P72PT",137,0)
 ;; provides the results of the conversion.
"RTN","EC2P72PT",138,0)
 ;;
"RTN","EC2P72PT",139,0)
 ;;QUIT
"RTN","EC2P72PT",140,0)
 ;
"RTN","EC2P72PT",141,0)
MAIL ; Send message
"RTN","EC2P72PT",142,0)
 N XMDUZ,XMY,XMTEXT,XMSUB
"RTN","EC2P72PT",143,0)
 S XMY(DUZ)="",XMDUZ=.5
"RTN","EC2P72PT",144,0)
 S XMSUB="Event Capture Provider Field Conversion to New Multiple Field"
"RTN","EC2P72PT",145,0)
 S XMTEXT="^TMP($J,""EC2P72"","
"RTN","EC2P72PT",146,0)
 D ^XMD
"RTN","EC2P72PT",147,0)
 Q
"RTN","EC2P72PT",148,0)
KILL1 ;
"RTN","EC2P72PT",149,0)
 K ZTDESC,ZTDTH,ZTIO,ZTREQ,ZTRTN,ZTSAVE("ZTREQ"),ECKID
"RTN","EC2P72PT",150,0)
 Q
"RTN","ECBEN1A")
0^16^B1611604^B1555590
"RTN","ECBEN1A",1,0)
ECBEN1A ;BIR/JLP,RHK-New Batch Entry ;12 Feb 96
"RTN","ECBEN1A",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,72**;8 May 96
"RTN","ECBEN1A",3,0)
O ;select ord sect
"RTN","ECBEN1A",4,0)
 W !!,"Location: "_ECLN,!,"DSS Unit:  "_ECDN K DIC,DUOUT
"RTN","ECBEN1A",5,0)
 S DIC=723,DIC(0)="QEAMZ",DIC("A")="Ordering Section: " D ^DIC K DIC I Y<0 S ECOUT=1 Q
"RTN","ECBEN1A",6,0)
 S ECO=+Y,ECON=$P(Y,"^",2)
"RTN","ECBEN1A",7,0)
DATE ;select date
"RTN","ECBEN1A",8,0)
 K %DT S %DT="AEXR"
"RTN","ECBEN1A",9,0)
 I ECDDT="",$G(ECDR)]"" S %DT("B")=ECDR G DATE1
"RTN","ECBEN1A",10,0)
 I ECDDT'="" S %DT("B")=ECDDT
"RTN","ECBEN1A",11,0)
 ;
"RTN","ECBEN1A",12,0)
 ; ALB/ESD - Prevent future dates from being entered
"RTN","ECBEN1A",13,0)
DATE1 S %DT("A")="Procedure Date and Time: ",%DT(0)="-NOW" D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECBEN1A",14,0)
 S ECDT=+Y,(ECDATE,ECDR)=$$FMTE^XLFDT(ECDT) K %DT
"RTN","ECBEN1A",15,0)
 ;
"RTN","ECBEN1A",16,0)
 ;select provider(s) with active person class
"RTN","ECBEN1A",17,0)
 D ASKPRV^ECPRVMUT("",ECDT,.ECPRVARY,.ECOUT)
"RTN","ECBEN1A",18,0)
 I $G(ECOUT) S ECOUT=1 K ECPRVARY Q
"RTN","ECBEN1A",19,0)
 ;
"RTN","ECBEN1A",20,0)
PAT ;select pat
"RTN","ECBEN1A",21,0)
 D ^ECBEN1B
"RTN","ECBEN1A",22,0)
 K ECPRVARY
"RTN","ECBEN1A",23,0)
END Q
"RTN","ECBEN1A",24,0)
 ;
"RTN","ECBEN1A",25,0)
MSG ;quit msg
"RTN","ECBEN1A",26,0)
 W !!,"No action taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECBEN1A",27,0)
 Q
"RTN","ECBEN1B")
0^17^B23165731^B24119717
"RTN","ECBEN1B",1,0)
ECBEN1B ;BIR/MAM,JPW-Batch Enter Procedures (cont'd) ;1 May 96
"RTN","ECBEN1B",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,17,23,41,42,50,54,72**;8 May 96
"RTN","ECBEN1B",3,0)
EN ;entry pt
"RTN","ECBEN1B",4,0)
 D HDR
"RTN","ECBEN1B",5,0)
 S CNT=0
"RTN","ECBEN1B",6,0)
PATS ; get patients
"RTN","ECBEN1B",7,0)
 W ! Q:ECOUT=1  K ECADD
"RTN","ECBEN1B",8,0)
 K DIC,DUOUT S DIC=2,DIC(0)="QEAMZ",DIC("A")=$S($D(ECPT):"Select Next Patient: ",1:"Select Patient: ")
"RTN","ECBEN1B",9,0)
 D ^DIC K DIC S OK=0
"RTN","ECBEN1B",10,0)
 I $D(DUOUT)!($D(DTOUT)) S ECOUT=1 Q
"RTN","ECBEN1B",11,0)
 I Y<0,CNT=0 S ECOUT=2 Q
"RTN","ECBEN1B",12,0)
 I Y<0 D  G PATS
"RTN","ECBEN1B",13,0)
 .D LIST Q:ECOUT=1  Q:'$O(ECPT(0))  Q:$G(ECADD)="A"
"RTN","ECBEN1B",14,0)
 .S ECTWO=0 K ECHOICE D ^ECBEN2A
"RTN","ECBEN1B",15,0)
 .I ECOUT=2 D KILL,HDR
"RTN","ECBEN1B",16,0)
 I $O(ECPT(0)) S JJ="" F  S JJ=$O(ECPT(JJ)) Q:'JJ!(OK=1)  I +$G(ECPT(JJ))=+Y S OK=1 W !!,"Patient already selected.  Please select another patient.",!
"RTN","ECBEN1B",17,0)
 I OK=1 G PATS
"RTN","ECBEN1B",18,0)
 N YY,ECUP D  I $G(ECUP)="^" G PATS
"RTN","ECBEN1B",19,0)
 . S YY=Y,DFN=+Y D 2^VADPT S Y=YY I +VADM(6) D
"RTN","ECBEN1B",20,0)
 . . ; NOIS MWV-0603-21781:line below changed by VMP.
"RTN","ECBEN1B",21,0)
 . . W !!,"WARNING "_"[PATIENT DIED ON "_$P(VADM(6),U,2)_"] ",!!
"RTN","ECBEN1B",22,0)
 . . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECBEN1B",23,0)
 S CNT=CNT+1,CNT1=CNT,ECPT(CNT)=+Y_"^"_$P(Y,"^",2) D DIAG
"RTN","ECBEN1B",24,0)
 G PATS
"RTN","ECBEN1B",25,0)
 ;
"RTN","ECBEN1B",26,0)
LIST ; list patients
"RTN","ECBEN1B",27,0)
 K ECADD
"RTN","ECBEN1B",28,0)
 W @IOF,!,"Patients Selected for Batch Entry: ",! F I=0:0 S I=$O(ECPT(I)) Q:'I  W:I#2 ! W:I#2=0 ?40 W I_".  "_$P(ECPT(I),"^",2)
"RTN","ECBEN1B",29,0)
 W !!,"Is this list correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEN1B",30,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y" I "YyNn"'[ECYN W !!,"Enter <RET> if this list is complete, or NO to add or delete",!,"patients on the list.",!!,"Press <RET> to continue  " R X:DTIME G LIST
"RTN","ECBEN1B",31,0)
 I "Yy"[ECYN Q:$O(ECPT(0))  D NOBODY Q:ECOUT
"RTN","ECBEN1B",32,0)
ADD W !!,"Add or Delete Patients ?  ADD//  " R ECADD:DTIME I '$T!(ECADD="^") S ECOUT=1 Q
"RTN","ECBEN1B",33,0)
 S ECADD=$E(ECADD) S:ECADD="" ECADD="A" I "AaDd"'[ECADD W !!,"Enter <RET> to make additions to the list, or ""D"" to delete a ",!,"patient from the list." G ADD
"RTN","ECBEN1B",34,0)
 I "Aa"[ECADD Q
"RTN","ECBEN1B",35,0)
DEL ; delete patients from list
"RTN","ECBEN1B",36,0)
 I '$D(ECPT(1)) D NOBODY Q:ECOUT  G LIST
"RTN","ECBEN1B",37,0)
 W !!,"Select Number:  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEN1B",38,0)
 I X="" Q
"RTN","ECBEN1B",39,0)
 I '$D(ECPT(X)) W !!,"Select the number corresponding to the patient that you would like",!,"to remove from the list.",!!,"Press <RET> to continue  " R X:DTIME S ECMORE=1 D LIST Q:ECOUT  G DEL
"RTN","ECBEN1B",40,0)
 F I=X+1:1:CNT S ECPT(I-1)=ECPT(I)
"RTN","ECBEN1B",41,0)
 K ECPT(CNT),I S CNT=CNT-1
"RTN","ECBEN1B",42,0)
 W !!,"Patient deleted.",!!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEN1B",43,0)
 G LIST
"RTN","ECBEN1B",44,0)
 Q
"RTN","ECBEN1B",45,0)
HDR ;
"RTN","ECBEN1B",46,0)
 W @IOF,!,"Location: "_ECLN
"RTN","ECBEN1B",47,0)
 W !,"DSS Unit: "_ECDN
"RTN","ECBEN1B",48,0)
 W !,"Ordering Section: ",ECON
"RTN","ECBEN1B",49,0)
 W !,"Procedure Date: ",ECDATE,!
"RTN","ECBEN1B",50,0)
 D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN1B",51,0)
 W !
"RTN","ECBEN1B",52,0)
 Q
"RTN","ECBEN1B",53,0)
 ;
"RTN","ECBEN1B",54,0)
NOBODY ;No patients selected
"RTN","ECBEN1B",55,0)
 I $D(ECADD),ECADD="D" W !!,"You cannot delete patients when your patient list is empty."
"RTN","ECBEN1B",56,0)
 I $G(ECADD)'="D" W !!,"You have selected no patients."
"RTN","ECBEN1B",57,0)
 R !!,"Do you wish to quit?  Y//",X:DTIME S X=$E(X) I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEN1B",58,0)
 S:X="" X="Y" I "yY"[X S ECOUT=1 Q
"RTN","ECBEN1B",59,0)
 I "nN"'[X W !,"Answer N to continue selection, or enter return to quit",! G NOBODY
"RTN","ECBEN1B",60,0)
 Q
"RTN","ECBEN1B",61,0)
 ;
"RTN","ECBEN1B",62,0)
ADCAT ;add category/procedures for patients
"RTN","ECBEN1B",63,0)
 D ^ECBEN2A I ECOUT=1 Q
"RTN","ECBEN1B",64,0)
 Q
"RTN","ECBEN1B",65,0)
KILL ;kill arrays
"RTN","ECBEN1B",66,0)
 K ECA,ECHOICE,ECJLP,ECPT,ECC,ECCN,ECP,ECPN,ECV,NATN,NODE,SYN,SYS,VOL
"RTN","ECBEN1B",67,0)
 K ^TMP("ECPRO",$J),ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,EC4,EC4N
"RTN","ECBEN1B",68,0)
 K ECID,ECMST,ECDXS,ECDXIEN,ECHNC,ECCV
"RTN","ECBEN1B",69,0)
 S ECOUT=0
"RTN","ECBEN1B",70,0)
 Q
"RTN","ECBEN1B",71,0)
DIAG ;ask dx, etc. questions
"RTN","ECBEN1B",72,0)
 S (ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV)=""
"RTN","ECBEN1B",73,0)
 S ECDFN=$P(ECPT(CNT),U)
"RTN","ECBEN1B",74,0)
 ;- Determine inpatient/outpatient status
"RTN","ECBEN1B",75,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECPT(CNT)),+$G(ECDT))
"RTN","ECBEN1B",76,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECBEN1B",77,0)
 ;- Determine patient eligibility
"RTN","ECBEN1B",78,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECBEN1B",79,0)
 . I $$MULTELG^ECUTL0(+$G(ECPT(CNT))) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECBEN1B",80,0)
 . E  S ECELIG=+$G(VAEL(1))
"RTN","ECBEN1B",81,0)
 K VAEL
"RTN","ECBEN1B",82,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECBEN1B",83,0)
 I '$D(EC4) S EC4="",EC4N="NO ASSOCIATED CLINIC"
"RTN","ECBEN1B",84,0)
 I '$D(ECID) S ECID=""
"RTN","ECBEN1B",85,0)
 I $P(ECPCE,"~",2)="N" G SETDX
"RTN","ECBEN1B",86,0)
 D PCEQST^ECBEN2U
"RTN","ECBEN1B",87,0)
 I ECOUT D DELPT(.CNT) Q
"RTN","ECBEN1B",88,0)
SETDX ;set dx, etc. in pat array
"RTN","ECBEN1B",89,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEN1B",90,0)
 S ECPT(CNT)=ECPT(CNT)_"^"_ECDX_"^"_$S(ECINP="":$G(ECPTSTAT),1:ECINP)_"^"_ECVST_"^"_ECSC_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_EC4_"^"_ECID_"^"_ECMST_"^"_ECHNC_"^"_ECCV
"RTN","ECBEN1B",91,0)
 I $D(ECDXS) M ECPT(CNT,"DXS")=ECDXS K ECDXS
"RTN","ECBEN1B",92,0)
 Q
"RTN","ECBEN1B",93,0)
 ;
"RTN","ECBEN1B",94,0)
DELPT(CNT) ;deselect patient due to missing required data
"RTN","ECBEN1B",95,0)
 N DIR,Y
"RTN","ECBEN1B",96,0)
 K ECPT(CNT) S CNT=CNT-1
"RTN","ECBEN1B",97,0)
 W !,"Required data missing.",!,"Patient deselected...",!
"RTN","ECBEN1B",98,0)
 S ECOUT=0
"RTN","ECBEN1B",99,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue"
"RTN","ECBEN1B",100,0)
 D ^DIR
"RTN","ECBEN1B",101,0)
 W !
"RTN","ECBEN1B",102,0)
 Q
"RTN","ECBEN2A")
0^15^B45265158^B48180018
"RTN","ECBEN2A",1,0)
ECBEN2A ;BIR/MAM,JPW-Categories and Procedures Selection ;30 Apr 96
"RTN","ECBEN2A",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,13,18,33,47,72**;8 May 96
"RTN","ECBEN2A",3,0)
CHK ; check unit for valid categories
"RTN","ECBEN2A",4,0)
 S (COUNT,EC1)=0 K ECHOICE,ECSTOP
"RTN","ECBEN2A",5,0)
 D CATS^ECHECK1 S ECONE=""
"RTN","ECBEN2A",6,0)
 I '$D(ECC(1)) S ECC=0,ECCN="None",ECONE=0 G P
"RTN","ECBEN2A",7,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2),ECONE=1 G P
"RTN","ECBEN2A",8,0)
CATS ; select category
"RTN","ECBEN2A",9,0)
 S X="",CNT=0
"RTN","ECBEN2A",10,0)
LIST D HDR^ECBEN2U S JJ=0 W !,"Categories within "_ECDN_": ",!
"RTN","ECBEN2A",11,0)
 S EC1=0
"RTN","ECBEN2A",12,0)
 F  S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$P(ECC(CNT),"^",2)
"RTN","ECBEN2A",13,0)
 I '$D(ECSTOP),$D(ECHOICE) S ECONE=2 G P
"RTN","ECBEN2A",14,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECBEN2A",15,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT-5,X="" G LIST
"RTN","ECBEN2A",16,0)
 S ECHOICE=1,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2),ECONE=2
"RTN","ECBEN2A",17,0)
P ;check for valid procedures
"RTN","ECBEN2A",18,0)
 K ^TMP("ECLKUP",$J)
"RTN","ECBEN2A",19,0)
 D PROS^ECHECK1
"RTN","ECBEN2A",20,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECBEN2A",21,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECBEN2A",22,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECBEN2A",23,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECBEN2A",24,0)
 D HDR^ECBEN2U
"RTN","ECBEN2A",25,0)
P1 ;
"RTN","ECBEN2A",26,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1,ECONE=ECONE_"^1" D SETP W !,"Procedure: " D  G V
"RTN","ECBEN2A",27,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",28,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEN2A",29,0)
P2 ;ask mul proc
"RTN","ECBEN2A",30,0)
 S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP,ECMOD
"RTN","ECBEN2A",31,0)
 S DIR("?")="^D PROS^ECBEN2A"
"RTN","ECBEN2A",32,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECBEN2A",33,0)
 I +$G(ECX)=-1,(COUNT=0) D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEN2A",34,0)
 I +$G(ECX)=-1,COUNT G FILE
"RTN","ECBEN2A",35,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECBEN2A",36,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECBEN2A",37,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECBEN2A",38,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECBEN2A",39,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",40,0)
 I ECPCNT>0 D  G V
"RTN","ECBEN2A",41,0)
 . S CNT=ECPCNT
"RTN","ECBEN2A",42,0)
 . D SETP
"RTN","ECBEN2A",43,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEN2A",44,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",45,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECBEN2A",46,0)
 I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEN2A",47,0)
 I CNT>0 D  G V
"RTN","ECBEN2A",48,0)
 . D SETP
"RTN","ECBEN2A",49,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEN2A",50,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEN2A",51,0)
 Q
"RTN","ECBEN2A",52,0)
 ;
"RTN","ECBEN2A",53,0)
PROS ;
"RTN","ECBEN2A",54,0)
 S X="",CNT=0 K ECHOICE
"RTN","ECBEN2A",55,0)
LISTP D HDR^ECBEN2U S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECBEN2A",56,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECBEN2A",57,0)
 S EC1=1
"RTN","ECBEN2A",58,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECBEN2A",59,0)
 I X="" D
"RTN","ECBEN2A",60,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym."
"RTN","ECBEN2A",61,0)
 .W !?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECBEN2A",62,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECBEN2A",63,0)
 Q
"RTN","ECBEN2A",64,0)
 ;
"RTN","ECBEN2A",65,0)
V ;vol (and procedure reason),ask for CPT modifier is applicable
"RTN","ECBEN2A",66,0)
 ;
"RTN","ECBEN2A",67,0)
 ;ALB/JAM - Ask CPT Procedure Modifier
"RTN","ECBEN2A",68,0)
 I ECCPT'="" D  I ECOUT Q
"RTN","ECBEN2A",69,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECBEN2A",70,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECBEN2A",71,0)
 . I $G(ECERR) S ECOUT=1
"RTN","ECBEN2A",72,0)
 . K ECMODF,ECMODS
"RTN","ECBEN2A",73,0)
 ;ALB/ESD - Ask Procedure Reason
"RTN","ECBEN2A",74,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECBEN2A",75,0)
 K ECPRPTR
"RTN","ECBEN2A",76,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECBEN2A",77,0)
 . S ECPRPTR=0
"RTN","ECBEN2A",78,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECBEN2A",79,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECBEN2A",80,0)
 . D ^DIC K DIC
"RTN","ECBEN2A",81,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECBEN2A",82,0)
 K ECSCR
"RTN","ECBEN2A",83,0)
 ;
"RTN","ECBEN2A",84,0)
VV ;vol
"RTN","ECBEN2A",85,0)
 S:'VOL VOL=1
"RTN","ECBEN2A",86,0)
 W !,"Volume: "_VOL_"// " R X:DTIME I '$T S ECOUT=1 Q
"RTN","ECBEN2A",87,0)
 I X="^" S ECOUT=1 Q
"RTN","ECBEN2A",88,0)
 S:X="" X=VOL I X'?1.2N!'X W !!,"Enter a whole number between 1 and 99." G VV
"RTN","ECBEN2A",89,0)
 S ECV=X
"RTN","ECBEN2A",90,0)
CHKP ;
"RTN","ECBEN2A",91,0)
 W !!,"Category: ",?14,$E(ECCN,1,26),?44,"Ord Section: "_$E(ECON,1,22)
"RTN","ECBEN2A",92,0)
 W !,"Procedure: ",?14,$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",93,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEN2A",94,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEN2A",95,0)
 . W !?1,"Modifier: ",?18,"- ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEN2A",96,0)
 ;
"RTN","ECBEN2A",97,0)
 ;ALB/ESD - Display procedure reason
"RTN","ECBEN2A",98,0)
 I +$G(ECPRPTR) S ECPRSL=$P($G(^ECL(+ECPRPTR,0)),"^") W !,"Procedure Reason: ",$P($G(^ECR(+ECPRSL,0)),"^")
"RTN","ECBEN2A",99,0)
 W !,"Date: ",?14,ECDATE,?44,"Volume: "_ECV
"RTN","ECBEN2A",100,0)
 W ! D DSP1444^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN2A",101,0)
 W !!!,"Is this information correct ? YES//  " R ECYN:DTIME I '$T!(ECYN="^") D NOTE S ECOUT=2,CNT=0 K ECEC W "Press <RET> to continue " R X:DTIME Q
"RTN","ECBEN2A",102,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEN2A",103,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> if the information listed above is correct and should be",!,"entered for the patients selected.  Enter NO to re-enter the information",!,"for this procedure.",!
"RTN","ECBEN2A",104,0)
 I "YyNn"'[ECYN W !!,"Press <RET> to continue  " R X:DTIME G CHKP
"RTN","ECBEN2A",105,0)
 I "Nn"[ECYN,$P(ECONE,"^")<2,$P(ECONE,"^",2)<2 S ECOUT=2 Q
"RTN","ECBEN2A",106,0)
 I "Nn"[ECYN K ECHOICE,ECCN,ECP,ECPN,ECONE,ECMOD,^TMP("ECPRO",$J) G CHK
"RTN","ECBEN2A",107,0)
 ;
"RTN","ECBEN2A",108,0)
 ;ALB/ESD - File procedure reason in local array ECEC (used in ECBENF)
"RTN","ECBEN2A",109,0)
 S COUNT=COUNT+1,ECEC(COUNT)=ECC_"^"_ECP_"^^"_ECO_"^"_ECV_"^^^^^^"_ECCPT_$S(+$G(ECPRPTR):"^"_ECPRPTR,1:"")
"RTN","ECBEN2A",110,0)
 ;File CPT modifiers in array ECEC if they exist
"RTN","ECBEN2A",111,0)
 I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECBEN2A",112,0)
 . M ECEC(COUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECBEN2A",113,0)
 I $D(^TMP("ECPRO",$J,2)) W !! G P2
"RTN","ECBEN2A",114,0)
FILE ;file proc
"RTN","ECBEN2A",115,0)
 I '$D(ECEC(1)) W !!,"No procedures have been selected for filing.  Please re-enter the ",!,"information for the procedures, or ^ to exit.",!!,"Press <RET> to continue" R X:DTIME S:X="^" ECOUT=1 K ECTEMP,^TMP("ECPRO",$J) G P
"RTN","ECBEN2A",116,0)
 D ^ECBEN2B
"RTN","ECBEN2A",117,0)
END Q
"RTN","ECBEN2A",118,0)
SETP ;set proc
"RTN","ECBEN2A",119,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),SYN=$P(^(CNT),"^",3),NATN=$P(^(CNT),"^",5),VOL=$P(^(CNT),"^",6)
"RTN","ECBEN2A",120,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECBEN2A",121,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECBEN2A",122,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECBEN2A",123,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEN2A",124,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEN2A",125,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2)
"RTN","ECBEN2A",126,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECBEN2A",127,0)
 Q
"RTN","ECBEN2A",128,0)
SELC ; select category
"RTN","ECBEN2A",129,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop:  " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECBEN2A",130,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECBEN2A",131,0)
 I 'EC1,'$D(ECC(X)) D MSG1^ECBEN2U Q
"RTN","ECBEN2A",132,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSG1^ECBEN2U Q
"RTN","ECBEN2A",133,0)
 S ECHOICE=1
"RTN","ECBEN2A",134,0)
 I 'EC1 S ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECBEN2A",135,0)
 Q
"RTN","ECBEN2A",136,0)
NOTE ;
"RTN","ECBEN2A",137,0)
 W !!,"**NOTE**  No action taken.",!,"You must re-enter the correct patient and procedure data that",!,"has NOT been filed during this session. ",!!
"RTN","ECBEN2A",138,0)
 Q
"RTN","ECBEN2B")
0^42^B9189087^B9041714
"RTN","ECBEN2B",1,0)
ECBEN2B ;BIR/MAM,JPW-New Batch Entry (cont'd.) ;1 May 96
"RTN","ECBEN2B",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,72**;8 May 96
"RTN","ECBEN2B",3,0)
EN ;entry point
"RTN","ECBEN2B",4,0)
 S CNT=0
"RTN","ECBEN2B",5,0)
STUFF ; set up info to stuff
"RTN","ECBEN2B",6,0)
 S ECDUZ=DUZ
"RTN","ECBEN2B",7,0)
 W @IOF,!,"You have completed "_COUNT_" procedure"_$S(COUNT=1:"",1:"s")_" for the patients selected.",!!,"I will now enter these procedures in the file.  OK ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEN2B",8,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEN2B",9,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> to create the entries in the file.  If you have made a mistake",!,"and do not wish to continue, enter NO.",!!,"Press <RET> to continue  " R X:DTIME G STUFF
"RTN","ECBEN2B",10,0)
 I "Nn"[ECYN D NO I "Yy"[ECYN S ECOUT=1 Q
"RTN","ECBEN2B",11,0)
 W !!,"I am now sending these procedures to background for filing."
"RTN","ECBEN2B",12,0)
 K DIR W !! S DIR(0)="E",DIR("A")="Press <RET> to continue" D ^DIR K DIR
"RTN","ECBEN2B",13,0)
 S ECA=ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECPCE
"RTN","ECBEN2B",14,0)
 S ECOUT=2
"RTN","ECBEN2B",15,0)
 S (ZTSAVE("ECPT*"),ZTSAVE("ECA"),ZTSAVE("ECEC*"),ZTSAVE("ECDUZ"),ZTSAVE("ECELPT*"),ZTSAVE("ECPRVARY*"))=""
"RTN","ECBEN2B",16,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="BATCH ENTRY EVENT CAPTURE PROCEDURES",ZTRTN="CRAM^ECBENF" D ^%ZTLOAD,HOME^%ZIS K ECEC Q
"RTN","ECBEN2B",17,0)
 Q
"RTN","ECBEN2B",18,0)
NO ; do not stuff
"RTN","ECBEN2B",19,0)
 W !!,"Are you sure that you want to quit without entering any of the procedures",!,"that you have created for the patients selected ?  NO//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1,ECYN="Y" Q
"RTN","ECBEN2B",20,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="N" I "YyNn"'[ECYN W !!,"If you do not want to enter the procedures selected, enter YES.  If the",!,"procedures selected should be entered for the patients chosen, enter <RET>." G NO
"RTN","ECBEN2B",21,0)
 Q
"RTN","ECBEN2U")
0^18^B32288429^B36244179
"RTN","ECBEN2U",1,0)
ECBEN2U ;BIR/MAM,JPW-Categories and Procedures Selection ;12 Feb 96
"RTN","ECBEN2U",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,7,10,17,18,23,42,47,54,72**;8 May 96
"RTN","ECBEN2U",3,0)
END Q
"RTN","ECBEN2U",4,0)
HDR ;screen header
"RTN","ECBEN2U",5,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",6,0)
 W !,"DSS Unit: ",$E(ECDN,1,30) I $G(ECCN)]"" W ?48,"Category: ",$E(ECCN,1,20)
"RTN","ECBEN2U",7,0)
 W !,"Ordering Section: ",ECON
"RTN","ECBEN2U",8,0)
 W !,"Procedure Date: ",ECDATE,!
"RTN","ECBEN2U",9,0)
 D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN2U",10,0)
 W !
"RTN","ECBEN2U",11,0)
 Q
"RTN","ECBEN2U",12,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECBEN2U",13,0)
 Q
"RTN","ECBEN2U",14,0)
MSG1 ;
"RTN","ECBEN2U",15,0)
 W !!,"Please enter the number that corresponds to the "_$S(OK:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECBEN2U",16,0)
 S CNT=CNT-5
"RTN","ECBEN2U",17,0)
 Q
"RTN","ECBEN2U",18,0)
HDRP ;hdr batch by proc
"RTN","ECBEN2U",19,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEN2U",20,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEN2U",21,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEN2U",22,0)
 D DSP1442^ECPRVMUT(.ECPRVARY)
"RTN","ECBEN2U",23,0)
 W !
"RTN","ECBEN2U",24,0)
 Q
"RTN","ECBEN2U",25,0)
PCEQST ;entry pt for PCE questions
"RTN","ECBEN2U",26,0)
 S (ECDX,ECDXN,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV)=""
"RTN","ECBEN2U",27,0)
INP ;- Set inpatient/outpatient status
"RTN","ECBEN2U",28,0)
 S ECINP=$G(ECPTSTAT)
"RTN","ECBEN2U",29,0)
 D CLINIC I ECOUT Q
"RTN","ECBEN2U",30,0)
 ;ask dx
"RTN","ECBEN2U",31,0)
 D DIAG^ECUTL2 I ECOUT Q
"RTN","ECBEN2U",32,0)
 I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",33,0)
 D VISIT
"RTN","ECBEN2U",34,0)
 Q
"RTN","ECBEN2U",35,0)
CLINIC ;display default clinic
"RTN","ECBEN2U",36,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",37,0)
 K DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT S DIR(0)="721,26",DIR("A")="Associated Clinic",DIR("?")="An active clinic is required. Enter an active clinic or an ^ to exit"
"RTN","ECBEN2U",38,0)
 I EC4,EC4N'["NO ASSOCIATED CLINIC" S DIR("B")=EC4N
"RTN","ECBEN2U",39,0)
 D ^DIR K DIR
"RTN","ECBEN2U",40,0)
 I Y S EC4=+Y,ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEN2U",41,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECBEN2U",42,0)
 I +EC4,'$G(ECOUT) D CLIN I 'ECPCL W !!,"You must enter an active clinic now.",! G CLINIC
"RTN","ECBEN2U",43,0)
 I $D(DTOUT)!$D(DUOUT)!('Y)!(Y<0) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without an active clinic.",!!
"RTN","ECBEN2U",44,0)
 Q
"RTN","ECBEN2U",45,0)
VISIT ;ask visit info
"RTN","ECBEN2U",46,0)
 Q:ECINP="I"
"RTN","ECBEN2U",47,0)
 ;
"RTN","ECBEN2U",48,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECBEN2U",49,0)
 I $$ASKCLASS^ECUTL1(+$G(ECPT(CNT)),.ECCLFLDS,.ECOUT,ECPCE,ECINP),($O(ECCLFLDS(""))]"") D SETCLASS^ECUTL1(.ECCLFLDS)
"RTN","ECBEN2U",50,0)
 I +$G(ECOUT) Q
"RTN","ECBEN2U",51,0)
 K ECCLFLDS
"RTN","ECBEN2U",52,0)
 Q
"RTN","ECBEN2U",53,0)
PCEE ;checks edited data and sets PCE node for filing
"RTN","ECBEN2U",54,0)
 S ECVST=+$P(EC(0),"^",21) I 'ECVST G PCE
"RTN","ECBEN2U",55,0)
DEL ;delete visit and refresh data to PCE
"RTN","ECBEN2U",56,0)
 K DA,DIE,DR S DA=ECFN,DIE=721,DR="25///@;28///@" D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",57,0)
 ;
"RTN","ECBEN2U",58,0)
 ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECBEN2U",59,0)
 N ECVAR1 S ECVAR1=$$FNDVST^ECUTL(ECVST,ECFN) K ECVAR1
"RTN","ECBEN2U",60,0)
 ;
"RTN","ECBEN2U",61,0)
 ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECBEN2U",62,0)
 S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECBEN2U",63,0)
PCE ;set data for PCE filing
"RTN","ECBEN2U",64,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEN2U",65,0)
 S ECREAS=""
"RTN","ECBEN2U",66,0)
 ;
"RTN","ECBEN2U",67,0)
 ;- Kill Reason node
"RTN","ECBEN2U",68,0)
 D KILLR
"RTN","ECBEN2U",69,0)
 I EC4 D CLIN^ECPCEU
"RTN","ECBEN2U",70,0)
 I 'EC4 S ECREAS="Clinic missing;"
"RTN","ECBEN2U",71,0)
 I 'ECDX S ECREAS="Diagnosis not entered;"
"RTN","ECBEN2U",72,0)
 I EC4,'ECPCL S ECREAS=ECREAS_"Clinic inactive;"
"RTN","ECBEN2U",73,0)
 I 'ECCPT S ECREAS=ECREAS_"CPT code missing;"
"RTN","ECBEN2U",74,0)
 I ECREAS]"" S ^ECH(ECFN,"R")=ECREAS K ECPCL,ECREAS Q
"RTN","ECBEN2U",75,0)
 I '$D(^ECH(ECFN,0)) Q
"RTN","ECBEN2U",76,0)
 I '$D(^ECH(ECFN,"P")) Q
"RTN","ECBEN2U",77,0)
 S PN=^ECH(ECFN,0),PNP=^ECH(ECFN,"P")
"RTN","ECBEN2U",78,0)
 S PNMOD="" I $D(^ECH(ECFN,"MOD")) D
"RTN","ECBEN2U",79,0)
 . N MOD,MODS S MODS=0 F  S MODS=$O(^ECH(ECFN,"MOD",MODS)) Q:'MODS  D
"RTN","ECBEN2U",80,0)
 . . S MOD=$P($G(^ECH(ECFN,"MOD",MODS,0)),U)
"RTN","ECBEN2U",81,0)
 . . S MOD=$$MOD^ICPTMOD(MOD,"I",$P(PN,U,3)) I +MOD<0 Q
"RTN","ECBEN2U",82,0)
 . . S PNMOD=$S(PNMOD'="":PNMOD_";",1:"")_$P(MOD,U,2)
"RTN","ECBEN2U",83,0)
SET ;set data pieces
"RTN","ECBEN2U",84,0)
 S ECP3=+$P(PN,"^",3) I ECP3'["." K ECP3 D DELNOD Q
"RTN","ECBEN2U",85,0)
 S ECP2=+$P(PN,"^",2) I 'ECP2 K ECP2 D DELNOD Q
"RTN","ECBEN2U",86,0)
 S ECP19=+$P(PN,"^",19) I 'ECP19 K ECP19 D DELNOD Q
"RTN","ECBEN2U",87,0)
 S ECP4=+$P(PN,"^",4) I 'ECP4 K ECP4 D DELNOD Q
"RTN","ECBEN2U",88,0)
 S ECP20=+$P(PN,"^",20) I 'ECP20 K ECP20 D DELNOD Q
"RTN","ECBEN2U",89,0)
 S ECP10=+$P(PN,"^",10) I 'ECP10 K ECP10 D DELNOD Q
"RTN","ECBEN2U",90,0)
 S ECPP1=+$P(PNP,"^") I 'ECPP1 K ECPP1 D DELNOD Q
"RTN","ECBEN2U",91,0)
 S ECPP2=+$P(PNP,"^",2) I 'ECPP2 K ECPP2 D DELNOD Q
"RTN","ECBEN2U",92,0)
 S ECPP3=$P(PNP,"^",3),ECPP3=$S(ECPP3="Y":1,ECPP3="N":0,1:"")
"RTN","ECBEN2U",93,0)
 S ECPP4=$P(PNP,"^",4),ECPP4=$S(ECPP4="Y":1,ECPP4="N":0,1:"")
"RTN","ECBEN2U",94,0)
 S ECPP5=$P(PNP,"^",5),ECPP5=$S(ECPP5="Y":1,ECPP5="N":0,1:"")
"RTN","ECBEN2U",95,0)
 S ECPP6=$P(PNP,"^",6),ECPP6=$S(ECPP6="Y":1,ECPP6="N":0,1:"")
"RTN","ECBEN2U",96,0)
 S ECPP9=$P(PNP,"^",9),ECPP9=$S(ECPP9="Y":1,ECPP9="N":0,1:"")
"RTN","ECBEN2U",97,0)
 S ECPP10=$P(PNP,"^",10),ECPP10=$S(ECPP10="Y":1,ECPP10="N":0,1:"")
"RTN","ECBEN2U",98,0)
 S ECPP11=$P(PNP,"^",11),ECPP11=$S(ECPP11="Y":1,ECPP11="N":0,1:"")
"RTN","ECBEN2U",99,0)
 S ECPP1A="" I $P(PN,"^",9)["EC" S ECPP1A=$G(^EC(725,+$P(PN,"^",9),0)),ECPP1A=$P(ECPP1A,"^",2)_"  "_$P(ECPP1A,"^")
"RTN","ECBEN2U",100,0)
 S ECELIG=$S($G(ECELIG):ECELIG,1:"")
"RTN","ECBEN2U",101,0)
NODE ;sets "PCE" node
"RTN","ECBEN2U",102,0)
 ;d/t~dfn~hosp loc~inst~dss id~*prov(not filled)~*prov2~*prov3~vol~cpt~dx~ao~rad~env~sc~ecs nat # & name~eligibility~mst~hnc~cv
"RTN","ECBEN2U",103,0)
 S PNODE=ECP3_"~"_ECP2_"~"_ECP19_"~"_ECP4_"~"_ECP20_"~~~~"_ECP10_"~"_ECPP1_"~"_ECPP2_"~"_ECPP3_"~"_ECPP4_"~"_ECPP5_"~"_ECPP6_"~"_ECPP1A_"~"_ECELIG_"~"_ECPP9_"~"_ECPP10_"~"_ECPP11
"RTN","ECBEN2U",104,0)
 S ^ECH(ECFN,"PCE")=PNODE
"RTN","ECBEN2U",105,0)
 ;set "PCE1" node
"RTN","ECBEN2U",106,0)
 ;CPT modifier1;CPT modifier 2;CPT modifier 3;...CPT modifier n
"RTN","ECBEN2U",107,0)
 I PNMOD'="" S ^ECH(ECFN,"PCE1")=PNMOD
"RTN","ECBEN2U",108,0)
 S DA=ECFN,DIE=721,DR="31////"_ECDT D ^DIE K DA,DIE,DR
"RTN","ECBEN2U",109,0)
 K ECP2,ECP3,ECP4,ECP10,ECP19,ECP20,ECPP1,ECPP1A,ECPP2,ECPP3,ECPP4,ECPP5,ECPP6,ECPP9,ECPP10,ECPP11,ECREAS,ECPCL,PN,PNP,PNODE,ECELIG,PNMOD
"RTN","ECBEN2U",110,0)
 Q
"RTN","ECBEN2U",111,0)
CLIN ;check for active associated clinic
"RTN","ECBEN2U",112,0)
 S MSG1=1,MSG2=0
"RTN","ECBEN2U",113,0)
 D CLIN^ECPCEU
"RTN","ECBEN2U",114,0)
 I 'ECPCL D
"RTN","ECBEN2U",115,0)
 .W !!,"The clinic ",$S(MSG1:"associated with",1:"you selected for")," this procedure ",$S(MSG2:"has not been entered",1:"is inactive"),"."
"RTN","ECBEN2U",116,0)
 .W !,"Workload data cannot be sent to PCE for this procedure with ",!,$S(MSG2:"a missing",1:"an inactive")," clinic."
"RTN","ECBEN2U",117,0)
 S (MSG1,MSG2)=0
"RTN","ECBEN2U",118,0)
 Q
"RTN","ECBEN2U",119,0)
 ;
"RTN","ECBEN2U",120,0)
 ;
"RTN","ECBEN2U",121,0)
KILLR ;- Kill 'R' (Reason) node
"RTN","ECBEN2U",122,0)
 ;
"RTN","ECBEN2U",123,0)
 K ^ECH(ECFN,"R")
"RTN","ECBEN2U",124,0)
 Q
"RTN","ECBEN2U",125,0)
 ;
"RTN","ECBEN2U",126,0)
 ;
"RTN","ECBEN2U",127,0)
DELNOD ;- Delete 'PCE' and 'Send' nodes
"RTN","ECBEN2U",128,0)
 ;
"RTN","ECBEN2U",129,0)
 N DA,DIE,DR
"RTN","ECBEN2U",130,0)
 ;
"RTN","ECBEN2U",131,0)
 ;- Lock node
"RTN","ECBEN2U",132,0)
 L +^ECH(ECFN):5 Q:'$T
"RTN","ECBEN2U",133,0)
 S DA=ECFN
"RTN","ECBEN2U",134,0)
 S DIE="^ECH("
"RTN","ECBEN2U",135,0)
 S DR="30////@;31////@;37////@"
"RTN","ECBEN2U",136,0)
 ;
"RTN","ECBEN2U",137,0)
 ;- Delete contents
"RTN","ECBEN2U",138,0)
 D ^DIE
"RTN","ECBEN2U",139,0)
 ;
"RTN","ECBEN2U",140,0)
 ;- Unlock node
"RTN","ECBEN2U",141,0)
 L -^ECH(ECFN)
"RTN","ECBEN2U",142,0)
 Q
"RTN","ECBENF")
0^19^B10029012^B11054581
"RTN","ECBENF",1,0)
ECBENF ;BIR/MAM,JPW-Stuff New Batched Procedures ;12 Feb 96
"RTN","ECBENF",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,13,17,18,23,42,54,72**;8 May 96
"RTN","ECBENF",3,0)
CRAM ; entry
"RTN","ECBENF",4,0)
 S ECDT=$P(ECA,"^"),ECL=$P(ECA,"^",2),ECS=$P(ECA,"^",3),ECM=$P(ECA,"^",4),ECD=$P(ECA,"^",5)
"RTN","ECBENF",5,0)
 S ECPCE=$P(ECA,"^",6)
"RTN","ECBENF",6,0)
 S (CNT,CNT1)=0
"RTN","ECBENF",7,0)
 F  S CNT1=$O(ECPT(CNT1)) Q:'CNT1  D
"RTN","ECBENF",8,0)
 .S ECNODE2=$G(ECPT(CNT1))
"RTN","ECBENF",9,0)
 .S ECELIG=$G(ECELPT(CNT1))
"RTN","ECBENF",10,0)
 .S ECPS=$P(ECNODE2,"^"),ECDX=$P(ECNODE2,"^",3),ECINP=$P(ECNODE2,"^",4),ECVST=$P(ECNODE2,"^",5),ECSC=$P(ECNODE2,"^",6),ECAO=$P(ECNODE2,"^",7),ECIR=$P(ECNODE2,"^",8),ECZEC=$P(ECNODE2,"^",9),ECMST=$P(ECNODE2,"^",12)
"RTN","ECBENF",11,0)
 .S ECHNC=$P(ECNODE2,"^",13),ECCV=$P(ECNODE2,"^",14)
"RTN","ECBENF",12,0)
 .F  S CNT=$O(ECEC(CNT)) Q:'CNT  D
"RTN","ECBENF",13,0)
 ..S EC4=$P(ECNODE2,"^",10),ECID=$P(ECNODE2,"^",11)
"RTN","ECBENF",14,0)
 ..D NODE D DIE
"RTN","ECBENF",15,0)
END D ^ECKILL K DLAYGO S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECBENF",16,0)
 Q
"RTN","ECBENF",17,0)
NODE ;set patient array data
"RTN","ECBENF",18,0)
 S ECNODE=ECEC(CNT)
"RTN","ECBENF",19,0)
 S ECC=+$P(ECNODE,"^"),ECP=$P(ECNODE,"^",2),ECO=$P(ECNODE,"^",4),ECV=$P(ECNODE,"^",5)
"RTN","ECBENF",20,0)
 S ECCPT=$P(ECNODE,"^",11),ECPRPTR=$P(ECNODE,"^",12)
"RTN","ECBENF",21,0)
 ;
"RTN","ECBENF",22,0)
 ;- Get associated clinic from event code screen if null
"RTN","ECBENF",23,0)
 S:$G(EC4)="" EC4=$P($G(^ECJ(+$O(^ECJ("AP",+ECL,+ECD,+ECC,$G(ECP),0)),"PRO")),"^",4)
"RTN","ECBENF",24,0)
 S:$G(ECID)="" ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBENF",25,0)
 Q
"RTN","ECBENF",26,0)
DIE ;
"RTN","ECBENF",27,0)
 L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^ECH(0),"^",3)+1 L -^ECH(0) G DIE
"RTN","ECBENF",28,0)
 L -^ECH(0) K DD,DO,DIC S X=ECRN,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN K DIC S ECFN=+Y
"RTN","ECBENF",29,0)
 ; set the zero node
"RTN","ECBENF",30,0)
 S ^ECH(ECFN,0)=ECFN_"^"_ECPS_"^"_ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECC_"^"_ECP_"^"_ECV_"^^"_ECO_"^"_ECDUZ_"^^^^^^"_EC4_"^"_ECID_"^"_ECVST_"^"_ECINP
"RTN","ECBENF",31,0)
 ;ALB/JAM file multiple providers (EC*2*72)
"RTN","ECBENF",32,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRVARY,.ECOUT) K ECFIL
"RTN","ECBENF",33,0)
 ; ALB/JAM add CPT procedure modifiers
"RTN","ECBENF",34,0)
 I $O(ECEC(CNT,"MOD",""))'="" D  K MODIEN,MOD
"RTN","ECBENF",35,0)
 . S MOD="" F  S MOD=$O(ECEC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECBENF",36,0)
 . . S MODIEN=$P(ECEC(CNT,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECBENF",37,0)
 . . K DIC,DD,DO
"RTN","ECBENF",38,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECBENF",39,0)
 . . S DIC("P")=$P(^DD(721,36,0),U,2),X=MODIEN
"RTN","ECBENF",40,0)
 . . D FILE^DICN
"RTN","ECBENF",41,0)
 ; ALB/ESD - Set procedure reason into zero node
"RTN","ECBENF",42,0)
 I +ECPRPTR S $P(^ECH(ECFN,0),"^",23)=+ECPRPTR
"RTN","ECBENF",43,0)
 ;set the "P" node
"RTN","ECBENF",44,0)
 S ^ECH(ECFN,"P")=ECCPT_"^"_ECDX_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_ECSC
"RTN","ECBENF",45,0)
 S $P(^ECH(ECFN,"P"),"^",9,12)=ECMST_"^"_ECHNC_"^"_ECCV
"RTN","ECBENF",46,0)
 ; ALB/JAM - add secondary diagnosis codes
"RTN","ECBENF",47,0)
 I $O(ECPT(CNT1,"DXS",""))'="" D  K DXSIEN,DXS
"RTN","ECBENF",48,0)
 . S DXS="" F  S DXS=$O(ECPT(CNT1,"DXS",DXS)) Q:DXS=""  D
"RTN","ECBENF",49,0)
 . . S DXSIEN=$P(ECPT(CNT1,"DXS",DXS),U) I DXSIEN<0 Q
"RTN","ECBENF",50,0)
 . . K DIC,DD,DO
"RTN","ECBENF",51,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECBENF",52,0)
 . . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN
"RTN","ECBENF",53,0)
 . . D FILE^DICN
"RTN","ECBENF",54,0)
 K ECDXX M ECDXX=ECPT(CNT1,"DXS")
"RTN","ECBENF",55,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPS,ECDT,ECL,EC4,ECDX,.ECDXX,ECFN) K PXUPD,ECDXX
"RTN","ECBENF",56,0)
XREF ; sets crossreferences
"RTN","ECBENF",57,0)
 S DIK="^ECH(",DA=ECFN D IX1^DIK K DA,DIK
"RTN","ECBENF",58,0)
 ;
"RTN","ECBENF",59,0)
PCE ;format PCE data to send
"RTN","ECBENF",60,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBENF",61,0)
 D PCE^ECBEN2U
"RTN","ECBENF",62,0)
 Q
"RTN","ECBEP1A")
0^13^B1169013^B1098028
"RTN","ECBEP1A",1,0)
ECBEP1A ;BIR;JPW-Batch Entry by Procedure (cont'd) ;2 Mar 96
"RTN","ECBEP1A",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,72**;8 May 96
"RTN","ECBEP1A",3,0)
DATE ;select date
"RTN","ECBEP1A",4,0)
 K %DT S %DT="AEXR"
"RTN","ECBEP1A",5,0)
 I ECDDT="",$G(ECDR)]"" S %DT("B")=ECDR G DATE1
"RTN","ECBEP1A",6,0)
 I ECDDT'="" S %DT("B")=ECDDT
"RTN","ECBEP1A",7,0)
 ;
"RTN","ECBEP1A",8,0)
 ; ALB/ESD - Prevent future dates from being entered
"RTN","ECBEP1A",9,0)
DATE1 S %DT("A")="Procedure Date and Time: ",%DT(0)="-NOW" D ^%DT I Y<0 S ECOUT=1 Q
"RTN","ECBEP1A",10,0)
 S ECDT=+Y,(ECDATE,ECDR)=$$FMTE^XLFDT(ECDT) K %DT
"RTN","ECBEP1A",11,0)
 ;
"RTN","ECBEP1A",12,0)
 ;select provider(s) with active person class
"RTN","ECBEP1A",13,0)
 D ASKPRV^ECPRVMUT("",ECDT,.ECPRVARY,.ECOUT)
"RTN","ECBEP1A",14,0)
 I $G(ECOUT) S ECOUT=1 K ECPRVARY Q
"RTN","ECBEP1A",15,0)
 ;
"RTN","ECBEP1A",16,0)
CAT ;select category
"RTN","ECBEP1A",17,0)
 D ^ECBEP1B K ECPRVARY I ECOUT=2 D MSG S ECOUT=2 Q
"RTN","ECBEP1A",18,0)
END Q
"RTN","ECBEP1A",19,0)
 ;
"RTN","ECBEP1A",20,0)
MSG ;quit msg
"RTN","ECBEP1A",21,0)
 W !!,"No action taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECBEP1A",22,0)
 Q
"RTN","ECBEP1B")
0^20^B43458281^B46312174
"RTN","ECBEP1B",1,0)
ECBEP1B ;BIR/MAM,JPW-Batch Entry by Procedure (cont'd) ;30 Apr 96
"RTN","ECBEP1B",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,10,13,17,18,42,47,54,72**;8 May 96
"RTN","ECBEP1B",3,0)
CHK ; check unit for valid categories
"RTN","ECBEP1B",4,0)
 K ECC,ECCN,ECHOICE,ECEC,ECSTOP
"RTN","ECBEP1B",5,0)
 S (COUNT,EC1)=0
"RTN","ECBEP1B",6,0)
 D CATS^ECHECK1 S ECONE=""
"RTN","ECBEP1B",7,0)
 I '$D(ECC(1)) S ECC=0,ECCN="None",ECONE=0 G P
"RTN","ECBEP1B",8,0)
 I '$D(ECC(2)) S ECC=+ECC(1),ECCN=$P(ECC(1),"^",2),ECONE=1 G P
"RTN","ECBEP1B",9,0)
CATS ; select category
"RTN","ECBEP1B",10,0)
 S X="",CNT=0
"RTN","ECBEP1B",11,0)
LIST D HDRP^ECBEN2U S JJ=0 W !,"Categories within "_ECDN_": ",!
"RTN","ECBEP1B",12,0)
 S EC1=0
"RTN","ECBEP1B",13,0)
 F  S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$P(ECC(CNT),"^",2)
"RTN","ECBEP1B",14,0)
 I '$D(ECSTOP),$D(ECHOICE) S ECONE=2 G P
"RTN","ECBEP1B",15,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECBEP1B",16,0)
 I X="" S ECOUT=2 Q
"RTN","ECBEP1B",17,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the category, or ^ to quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT-5,X="" G LIST
"RTN","ECBEP1B",18,0)
 S ECHOICE=1,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2),ECONE=2
"RTN","ECBEP1B",19,0)
P ;check for valid procedures
"RTN","ECBEP1B",20,0)
 D PROS^ECHECK1
"RTN","ECBEP1B",21,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECBEP1B",22,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECBEP1B",23,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECBEP1B",24,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECBEP1B",25,0)
 D HDRP^ECBEN2U
"RTN","ECBEP1B",26,0)
P1 ;
"RTN","ECBEP1B",27,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1,ECONE=ECONE_"^1" D SETP W !,"Procedure: " D  G CHKP
"RTN","ECBEP1B",28,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",29,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",30,0)
P2 ;ask mul proc
"RTN","ECBEP1B",31,0)
 S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP
"RTN","ECBEP1B",32,0)
 S DIR("?")="^D PROS^ECBEP1B"
"RTN","ECBEP1B",33,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECBEP1B",34,0)
 I +$G(ECX)=-1,(COUNT=0) S ECOUT=2 D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",35,0)
 I +$G(ECX)=-1,COUNT G FILE
"RTN","ECBEP1B",36,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECBEP1B",37,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECBEP1B",38,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G P2
"RTN","ECBEP1B",39,0)
 .; Don't display spacebar/return error msg since only 1 procedure
"RTN","ECBEP1B",40,0)
 . D ERRMSG^ECDSUTIL
"RTN","ECBEP1B",41,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",42,0)
 I ECPCNT>0 D  G CHKP
"RTN","ECBEP1B",43,0)
 . S CNT=ECPCNT
"RTN","ECBEP1B",44,0)
 . D SETP
"RTN","ECBEP1B",45,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",46,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",47,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECBEP1B",48,0)
 I CNT=-1 D MSG^ECBEN2U,KILLV^ECDSUTIL Q
"RTN","ECBEP1B",49,0)
 I CNT>0 D  G CHKP
"RTN","ECBEP1B",50,0)
 . D SETP
"RTN","ECBEP1B",51,0)
 . S OK=1,ECONE=ECONE_"^2"
"RTN","ECBEP1B",52,0)
 . D KILLV^ECDSUTIL
"RTN","ECBEP1B",53,0)
 Q
"RTN","ECBEP1B",54,0)
 ;
"RTN","ECBEP1B",55,0)
PROS ;
"RTN","ECBEP1B",56,0)
 S X="",CNT=0 K ECHOICE
"RTN","ECBEP1B",57,0)
LISTP D HDRP^ECBEN2U S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECBEP1B",58,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECBEP1B",59,0)
 S EC1=1
"RTN","ECBEP1B",60,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECBEP1B",61,0)
 I X="" D
"RTN","ECBEP1B",62,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym.",!?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECBEP1B",63,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECBEP1B",64,0)
 Q
"RTN","ECBEP1B",65,0)
 ;
"RTN","ECBEP1B",66,0)
CHKP ;
"RTN","ECBEP1B",67,0)
 ;Ask CPT procedure modifiers
"RTN","ECBEP1B",68,0)
 I ECCPT'="" D  K ECMODF,ECMODS
"RTN","ECBEP1B",69,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECBEP1B",70,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECBEP1B",71,0)
 I $G(ECERR) S ECOUT=2 K ECERR,ECMOD D KILLV^ECDSUTIL Q
"RTN","ECBEP1B",72,0)
 ;
"RTN","ECBEP1B",73,0)
 ;- Ask procedure reason
"RTN","ECBEP1B",74,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECBEP1B",75,0)
 K ECPRPTR
"RTN","ECBEP1B",76,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D
"RTN","ECBEP1B",77,0)
 . S ECPRPTR=0
"RTN","ECBEP1B",78,0)
 . S DIC="^ECL(",DIC(0)="QEAM"
"RTN","ECBEP1B",79,0)
 . S DIC("A")="Procedure Reason: ",DIC("S")="I $P(^(0),U,2)=ECSCR"
"RTN","ECBEP1B",80,0)
 . D ^DIC K DIC
"RTN","ECBEP1B",81,0)
 . I +Y>0 S ECPRPTR=+Y
"RTN","ECBEP1B",82,0)
 K ECSCR W !
"RTN","ECBEP1B",83,0)
 ;
"RTN","ECBEP1B",84,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEP1B",85,0)
 W !,"Procedure: ",$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",86,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP1B",87,0)
 ;
"RTN","ECBEP1B",88,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP1B",89,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP1B",90,0)
 . W !?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP1B",91,0)
 ;- Display procedure reason
"RTN","ECBEP1B",92,0)
 I +$G(ECPRPTR) S ECPRSL=$P($G(^ECL(+ECPRPTR,0)),"^") W !,"Procedure Reason: ",$P($G(^ECR(+ECPRSL,0)),"^")
"RTN","ECBEP1B",93,0)
 D DSP1442^ECPRVMUT(.ECPRVARY)
"RTN","ECBEP1B",94,0)
 W !
"RTN","ECBEP1B",95,0)
 W !!,"Is this information correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") Q
"RTN","ECBEP1B",96,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEP1B",97,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> if the information listed above is correct and should be",!,"entered for the patients selected.  Enter NO to re-enter the information",!,"for this procedure.",!
"RTN","ECBEP1B",98,0)
 I "YyNn"'[ECYN W !!,"Press <RET> to continue  " R X:DTIME G CHKP
"RTN","ECBEP1B",99,0)
 I "Nn"[ECYN,$P(ECONE,"^")<2,$P(ECONE,"^",2)<2 S ECOUT=2 Q
"RTN","ECBEP1B",100,0)
 I "Nn"[ECYN K ECHOICE,ECCN,ECP,ECPN,ECMOD,ECONE,^TMP("ECPRO",$J) G CHK
"RTN","ECBEP1B",101,0)
 ;
"RTN","ECBEP1B",102,0)
 ;- File procedure reason in local array ECEC (used in ECBEPF)
"RTN","ECBEP1B",103,0)
 S COUNT=COUNT+1,ECEC(COUNT)=ECC_"^"_ECP_"^^^^^^^"_ECCPT_"^"_EC4_"^"_ECID_$S(+$G(ECPRPTR):"^"_ECPRPTR,1:"")
"RTN","ECBEP1B",104,0)
 ;- File CPT modifiers in local array ECEC
"RTN","ECBEP1B",105,0)
 I ECCPT'="",$O(ECMOD(ECCPT,""))'="" D
"RTN","ECBEP1B",106,0)
 . M ECEC(COUNT,"MOD")=ECMOD(ECCPT)
"RTN","ECBEP1B",107,0)
FILE ;file proc
"RTN","ECBEP1B",108,0)
 I '$D(ECEC(1)) W !!,"No procedures have been selected for filing.  Please re-enter the ",!,"information for the procedures, or ^ to exit.",!!,"Press <RET> to continue" R X:DTIME S:X="^" ECOUT=1 K ECTEMP,^TMP("ECPRO",$J) G P
"RTN","ECBEP1B",109,0)
 D ^ECBEP2A Q:ECOUT  K ECA,ECCN,ECEC,ECHOICE,ECJLP,ECP,ECPN,ECPT,ECO,ECON,ECV,NATN,NODE,SYN,^TMP("ECPRO",$J),ECDX,ECDXN,ECINP,ECCPT,ECSC,ECIR,ECZEC,ECAO,ECVST,ECPTSTAT,ECMST,ECHNC,ECCV,ECMOD,ECPTCD G CHK
"RTN","ECBEP1B",110,0)
END Q
"RTN","ECBEP1B",111,0)
SETP ;set proc
"RTN","ECBEP1B",112,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),SYN=$P(^(CNT),"^",3),NATN=$P(^(CNT),"^",5),VOL=$P(^(CNT),"^",6)
"RTN","ECBEP1B",113,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECBEP1B",114,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECBEP1B",115,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECBEP1B",116,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP1B",117,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP1B",118,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2),EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECBEP1B",119,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEP1B",120,0)
 Q
"RTN","ECBEP1B",121,0)
SELC ; select category
"RTN","ECBEP1B",122,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop:  " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECBEP1B",123,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECBEP1B",124,0)
 I 'EC1,'$D(ECC(X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",125,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSG1^ECBEN2U S ECOUT=2 Q
"RTN","ECBEP1B",126,0)
 S ECHOICE=1
"RTN","ECBEP1B",127,0)
 I 'EC1 S ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECBEP1B",128,0)
 Q
"RTN","ECBEP2A")
0^14^B30996875^B32048320
"RTN","ECBEP2A",1,0)
ECBEP2A ;BIR/MAM,JPW-Batch Enter by Procedure (cont'd) ;1 May 96
"RTN","ECBEP2A",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,17,18,23,33,41,42,54,72**;8 May 96
"RTN","ECBEP2A",3,0)
EN ;entry pt
"RTN","ECBEP2A",4,0)
 D HDR
"RTN","ECBEP2A",5,0)
 S CNT=0
"RTN","ECBEP2A",6,0)
PATS ; get patients
"RTN","ECBEP2A",7,0)
 W ! Q:ECOUT=1  K ECADD
"RTN","ECBEP2A",8,0)
 K DIC,DUOUT S DIC=2,DIC(0)="QEAMZ",DIC("A")=$S($D(ECPT):"Select Next Patient: ",1:"Select Patient: ")
"RTN","ECBEP2A",9,0)
 D ^DIC K DIC S OK=0
"RTN","ECBEP2A",10,0)
 I $D(DUOUT)!($D(DTOUT)) S ECOUT=1 Q
"RTN","ECBEP2A",11,0)
 I Y<0,CNT=0 S ECOUT=2 Q
"RTN","ECBEP2A",12,0)
 I Y<0 D  G:ECOUT'=2 PATS I ECOUT=2 D KILL Q
"RTN","ECBEP2A",13,0)
 .D LIST Q:ECOUT  Q:'$O(ECPT(0))  Q:$G(ECADD)="A"
"RTN","ECBEP2A",14,0)
 .S ECTWO=0 K ECHOICE D ^ECBEP2B S ECOUT=2
"RTN","ECBEP2A",15,0)
 I $O(ECPT(0)) S JJ="" F  S JJ=$O(ECPT(JJ)) Q:'JJ!(OK=1)  I +$G(ECPT(JJ))=+Y S OK=1 W !!,"Patient already selected.  Please select another patient.",!
"RTN","ECBEP2A",16,0)
 I OK=1 G PATS
"RTN","ECBEP2A",17,0)
 N YY,ECUP D  I $G(ECUP)="^" G PATS
"RTN","ECBEP2A",18,0)
 . S YY=Y,DFN=+Y D 2^VADPT S Y=YY I +VADM(6) D
"RTN","ECBEP2A",19,0)
 . . W !!,"WARNING ",VADM(7),!!
"RTN","ECBEP2A",20,0)
 . . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECBEP2A",21,0)
 S CNT=CNT+1,CNT1=CNT,ECPT(CNT)=+Y_"^"_$P(Y,"^",2) D ASK
"RTN","ECBEP2A",22,0)
 G PATS
"RTN","ECBEP2A",23,0)
 ;
"RTN","ECBEP2A",24,0)
LIST ; list patients
"RTN","ECBEP2A",25,0)
 K ECADD
"RTN","ECBEP2A",26,0)
 W @IOF,!,"Patients Selected for Batch Entry: ",! F I=0:0 S I=$O(ECPT(I)) Q:'I  W:I#2 ! W:I#2=0 ?40 W I_".  "_$P(ECPT(I),"^",2)
"RTN","ECBEP2A",27,0)
 W !!,"Is this list correct ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEP2A",28,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y" I "YyNn"'[ECYN W !!,"Enter <RET> if this list is complete, or NO to add or delete",!,"patients on the list.",!!,"Press <RET> to continue  " R X:DTIME G LIST
"RTN","ECBEP2A",29,0)
 I "Yy"[ECYN Q:$O(ECPT(0))  D NOBODY Q:ECOUT
"RTN","ECBEP2A",30,0)
ADD W !!,"Add or Delete Patients ?  ADD//  " R ECADD:DTIME I '$T!(ECADD="^") S ECOUT=1 Q
"RTN","ECBEP2A",31,0)
 S ECADD=$E(ECADD) S:ECADD="" ECADD="A" I "AaDd"'[ECADD W !!,"Enter <RET> to make additions to the list, or D to delete a ",!,"patient from the list." K ECADD G ADD
"RTN","ECBEP2A",32,0)
 Q:ECADD="A"
"RTN","ECBEP2A",33,0)
DEL ; delete patients from list
"RTN","ECBEP2A",34,0)
 I '$D(ECPT(1)) D NOBODY Q:ECOUT  G LIST
"RTN","ECBEP2A",35,0)
 W !!,"Select Number:  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEP2A",36,0)
 I X="" Q
"RTN","ECBEP2A",37,0)
 I '$D(ECPT(X)) W !!,"Select the number corresponding to the patient that you would like",!,"to remove from the list.",!!,"Press <RET> to continue  " R X:DTIME S ECMORE=1 D LIST Q:ECOUT  G DEL
"RTN","ECBEP2A",38,0)
 F I=X+1:1:CNT S ECPT(I-1)=ECPT(I)
"RTN","ECBEP2A",39,0)
 K ECPT(CNT),I S CNT=CNT-1
"RTN","ECBEP2A",40,0)
 W !!,"Patient deleted.",!!,"Press <RET> to continue " R X:DTIME
"RTN","ECBEP2A",41,0)
 G LIST
"RTN","ECBEP2A",42,0)
 Q
"RTN","ECBEP2A",43,0)
HDR ;
"RTN","ECBEP2A",44,0)
 W @IOF,!,"Location: ",ECLN
"RTN","ECBEP2A",45,0)
 W !,"DSS Unit: ",ECDN
"RTN","ECBEP2A",46,0)
 I $G(ECCN)]"" W !,"Category: ",ECCN
"RTN","ECBEP2A",47,0)
 W !,"Procedure: "_$S(ECCPT'="":ECPTCD_" ",1:"")_$E(ECPN,1,50)
"RTN","ECBEP2A",48,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP2A",49,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP2A",50,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP2A",51,0)
 . W !?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP2A",52,0)
 W !,"Procedure Date: ",ECDATE
"RTN","ECBEP2A",53,0)
 W ! D DSP1416^ECPRVMUT(.ECPRVARY)
"RTN","ECBEP2A",54,0)
 W !
"RTN","ECBEP2A",55,0)
 Q
"RTN","ECBEP2A",56,0)
 ;
"RTN","ECBEP2A",57,0)
NOBODY ;No patients selected
"RTN","ECBEP2A",58,0)
 I $D(ECADD),ECADD="D" W !!,"You cannot delete patients when your patient list is empty."
"RTN","ECBEP2A",59,0)
 I $G(ECADD)'="D" W !!,"You have selected no patients."
"RTN","ECBEP2A",60,0)
 R !!,"Do you wish to quit?  Y//",X:DTIME S X=$E(X) I '$T!(X="^") S ECOUT=1 Q
"RTN","ECBEP2A",61,0)
 S:X="" X="Y" I "yY"[X S ECOUT=1 Q
"RTN","ECBEP2A",62,0)
 I "nN"'[X W !,"Answer ""N"" to continue selection, or enter return to quit",! G NOBODY
"RTN","ECBEP2A",63,0)
 Q
"RTN","ECBEP2A",64,0)
ADCAT ;add category/procedures for patients
"RTN","ECBEP2A",65,0)
 ;D ^ECBEN2A I ECOUT=1 Q
"RTN","ECBEP2A",66,0)
 ;W !!! K DIR,DIRUT,DA S DIR(0)="Y",DIR("A")="Do you want to enter another category and procedure for these patients" D ^DIR Q:$D(DIRUT)!'Y
"RTN","ECBEP2A",67,0)
 Q
"RTN","ECBEP2A",68,0)
KILL ;kill arrays and variables
"RTN","ECBEP2A",69,0)
 K ECSC,ECZEC,ECIR,ECDX,ECDXN,ECVST,ECINP,ECAO,ECPTSTAT,ECMST,ECHNC,ECCV
"RTN","ECBEP2A",70,0)
 K ECA,ECHOICE,ECJLP,ECPT,ECO,ECON,ECV,ECDXS,ECDXIEN
"RTN","ECBEP2A",71,0)
 S ECOUT=0
"RTN","ECBEP2A",72,0)
 Q
"RTN","ECBEP2A",73,0)
ASK ; ask ord sect & vol
"RTN","ECBEP2A",74,0)
 W !!,"DSS Unit: "_ECDN,?50,"Category: "_ECCN,!
"RTN","ECBEP2A",75,0)
 W "Procedure: "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECBEP2A",76,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECBEP2A",77,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP2A",78,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP2A",79,0)
 . W ?1,"Modifier: ","    - ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55),!
"RTN","ECBEP2A",80,0)
 W "Patient: ",$P(ECPT(CNT),"^",2),!
"RTN","ECBEP2A",81,0)
 ;
"RTN","ECBEP2A",82,0)
 ;- Determine inpatient/outpatient status
"RTN","ECBEP2A",83,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECPT(CNT)),+$G(ECDT))
"RTN","ECBEP2A",84,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECBEP2A",85,0)
 ;
"RTN","ECBEP2A",86,0)
 ;- Determine patient eligibility
"RTN","ECBEP2A",87,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECBEP2A",88,0)
 . I $$MULTELG^ECUTL0(+$G(ECPT(CNT))) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECBEP2A",89,0)
 . E  S ECELIG=+$G(VAEL(1))
"RTN","ECBEP2A",90,0)
 K VAEL
"RTN","ECBEP2A",91,0)
 ;
"RTN","ECBEP2A",92,0)
 ;- Display inpatient/outpatient status message
"RTN","ECBEP2A",93,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECBEP2A",94,0)
 ;
"RTN","ECBEP2A",95,0)
O ; ord sect
"RTN","ECBEP2A",96,0)
 K DIC,DUOUT S DIC=723,DIC(0)="QEAMZ",DIC("A")="Ordering Section: "
"RTN","ECBEP2A",97,0)
 D ^DIC K DIC I Y<0 D DELPT(.CNT) Q
"RTN","ECBEP2A",98,0)
 S ECO=+Y,ECON=$P(Y,"^",2)
"RTN","ECBEP2A",99,0)
V ; vol
"RTN","ECBEP2A",100,0)
 S:'VOL VOL=1
"RTN","ECBEP2A",101,0)
 W !,"Volume: "_VOL_"//" R X:DTIME I '$T S ECOUT=1 Q
"RTN","ECBEP2A",102,0)
 I X="^" D DELPT(.CNT) Q
"RTN","ECBEP2A",103,0)
 S:X="" X=VOL I X'?1.2N!'X W !!,"Enter a whole number between 1 and 99." G V
"RTN","ECBEP2A",104,0)
 S ECV=X
"RTN","ECBEP2A",105,0)
DIAG ;diagnosis, in/outpatient, visit
"RTN","ECBEP2A",106,0)
 S (ECDX,ECDXN,ECINP,ECVST,ECSC,ECAO,ECIR,ECZEC,ECMST,ECHNC,ECCV)=""
"RTN","ECBEP2A",107,0)
 S ECDFN=$P(ECPT(CNT),U)
"RTN","ECBEP2A",108,0)
 I $P(ECPCE,"~",2)="N" G NODE
"RTN","ECBEP2A",109,0)
 D PCEQST^ECBEN2U
"RTN","ECBEP2A",110,0)
 I ECOUT D DELPT(.CNT) Q
"RTN","ECBEP2A",111,0)
NODE ;set node
"RTN","ECBEP2A",112,0)
 ;- Get associated clinic from event code screen and DSS ID if null
"RTN","ECBEP2A",113,0)
 S:$G(EC4)="" EC4=$P($G(^ECJ(+$O(^ECJ("AP",+ECL,+ECD,+ECC,$G(ECP),0)),"PRO")),"^",4)
"RTN","ECBEP2A",114,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"NO ASSOCIATED CLINIC"),ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECBEP2A",115,0)
 S ECPT(CNT)=ECPT(CNT)_"^"_ECO_"^"_ECON_"^"_ECV_"^"_ECDX_"^"_$S(ECINP="":$G(ECPTSTAT),1:ECINP)_"^"_ECVST_"^"_ECSC_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_EC4_"^"_ECID_"^"_ECMST_"^"_ECHNC_"^"_ECCV
"RTN","ECBEP2A",116,0)
 I $D(ECDXS) M ECPT(CNT,"DXS")=ECDXS K ECDXS
"RTN","ECBEP2A",117,0)
 S ECELPT(CNT)=$S($G(ECELIG):ECELIG,1:"") K ECPTSTAT
"RTN","ECBEP2A",118,0)
 Q
"RTN","ECBEP2A",119,0)
 ;
"RTN","ECBEP2A",120,0)
DELPT(CNT) ;deselect patient due to missing required data
"RTN","ECBEP2A",121,0)
 N DIR,Y
"RTN","ECBEP2A",122,0)
 K ECPT(CNT) S CNT=CNT-1
"RTN","ECBEP2A",123,0)
 W !,"Required data missing.",!,"Patient deselected...",!
"RTN","ECBEP2A",124,0)
 S ECOUT=0
"RTN","ECBEP2A",125,0)
 S DIR(0)="E",DIR("A")="Press RETURN to continue"
"RTN","ECBEP2A",126,0)
 D ^DIR
"RTN","ECBEP2A",127,0)
 W !
"RTN","ECBEP2A",128,0)
 Q
"RTN","ECBEP2B")
0^26^B9317904^B9162539
"RTN","ECBEP2B",1,0)
ECBEP2B ;BIR/MAM,JPW-Batch Entry by Procedure (cont'd) ;1 May 96
"RTN","ECBEP2B",2,0)
 ;;2.0; EVENT CAPTURE ;**4,10,13,18,72**;8 May 96
"RTN","ECBEP2B",3,0)
EN ;entry point
"RTN","ECBEP2B",4,0)
 S CNT=0
"RTN","ECBEP2B",5,0)
STUFF ; set up info to stuff
"RTN","ECBEP2B",6,0)
 S ECDUZ=DUZ
"RTN","ECBEP2B",7,0)
 W @IOF,!,"You have selected "_$S(ECCPT'="":ECPTCD_" ",1:"")_$E(ECPN,1,40)
"RTN","ECBEP2B",8,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")"
"RTN","ECBEP2B",9,0)
 ;- Display CPT procedure Modifiers
"RTN","ECBEP2B",10,0)
 I ECCPT'="" N MOD S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECBEP2B",11,0)
 . W !," Modifier: ",?22,"- ",MOD," ",$E($P(ECMOD(ECCPT,MOD),U),1,55)
"RTN","ECBEP2B",12,0)
 W !,"for this group of patients."
"RTN","ECBEP2B",13,0)
 W !!,"I will now enter these patient procedures in the file.  OK ?  YES//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1 Q
"RTN","ECBEP2B",14,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="Y"
"RTN","ECBEP2B",15,0)
 I "YyNn"'[ECYN W !!,"Enter <RET> to create the entries in the file.  If you have made a mistake",!,"and do not wish to continue, enter NO.",!!,"Press <RET> to continue  " R X:DTIME G STUFF
"RTN","ECBEP2B",16,0)
 I "Nn"[ECYN D NO I "Yy"[ECYN Q
"RTN","ECBEP2B",17,0)
 W !!,"I am now sending these procedures to background for filing."
"RTN","ECBEP2B",18,0)
 K DIR W !! S DIR(0)="E",DIR("A")="Press <RET> to continue" D ^DIR K DIR
"RTN","ECBEP2B",19,0)
 S ECA=ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECPCE
"RTN","ECBEP2B",20,0)
 S ECOUT=2
"RTN","ECBEP2B",21,0)
 S (ZTSAVE("ECPT*"),ZTSAVE("ECA"),ZTSAVE("ECEC*"),ZTSAVE("ECDUZ"),ZTSAVE("ECELPT*"),ZTSAVE("ECPRVARY*"))=""
"RTN","ECBEP2B",22,0)
 S ZTIO="",ZTDTH=$H,ZTDESC="BATCH ENTRY EVENT CAPTURE PROCEDURES",ZTRTN="CRAM^ECBEPF" D ^%ZTLOAD,HOME^%ZIS K ECEC Q
"RTN","ECBEP2B",23,0)
 Q
"RTN","ECBEP2B",24,0)
NO ; do not stuff
"RTN","ECBEP2B",25,0)
 W !!,"Are you sure that you want to quit without entering any of the procedures",!,"that you have created for the patients selected ?  NO//  " R ECYN:DTIME I '$T!(ECYN="^") S ECOUT=1,ECYN="Y" Q
"RTN","ECBEP2B",26,0)
 S ECYN=$E(ECYN) S:ECYN="" ECYN="N" I "YyNn"'[ECYN W !!,"If you do not want to enter the procedures selected, enter YES.  If the",!,"procedures selected should be entered for the patients chosen, enter <RET>." G NO
"RTN","ECBEP2B",27,0)
 Q
"RTN","ECBEPF")
0^21^B8758024^B9728135
"RTN","ECBEPF",1,0)
ECBEPF ;BIR/MAM,JPW-Stuff Batch Entry by Procedure (cont'd) ;2 Mar 96
"RTN","ECBEPF",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,13,17,18,23,42,54,72**;8 May 96
"RTN","ECBEPF",3,0)
CRAM ; entry
"RTN","ECBEPF",4,0)
 S ECDT=$P(ECA,"^"),ECL=$P(ECA,"^",2),ECS=$P(ECA,"^",3),ECM=$P(ECA,"^",4),ECD=$P(ECA,"^",5)
"RTN","ECBEPF",5,0)
 S ECPCE=$P(ECA,"^",6)
"RTN","ECBEPF",6,0)
 S (CNT,CNT1)=0 F  S CNT1=$O(ECPT(CNT1)) Q:'CNT1  D SET F  S CNT=$O(ECEC(CNT)) Q:'CNT  D DIE
"RTN","ECBEPF",7,0)
END D ^ECKILL K DLAYGO S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECBEPF",8,0)
 Q
"RTN","ECBEPF",9,0)
SET ;
"RTN","ECBEPF",10,0)
 S ECPS=$P(ECPT(CNT1),"^"),ECO=$P(ECPT(CNT1),"^",3),ECV=+$P(ECPT(CNT1),"^",5)
"RTN","ECBEPF",11,0)
 S ECDX=$P(ECPT(CNT1),"^",6),ECINP=$P(ECPT(CNT1),"^",7),ECVST=$P(ECPT(CNT1),"^",8),ECSC=$P(ECPT(CNT1),"^",9),ECAO=$P(ECPT(CNT1),"^",10),ECIR=$P(ECPT(CNT1),"^",11)
"RTN","ECBEPF",12,0)
 S ECZEC=$P(ECPT(CNT1),"^",12),EC4=$P(ECPT(CNT1),"^",13),ECID=$P(ECPT(CNT1),"^",14)
"RTN","ECBEPF",13,0)
 S ECMST=$P(ECPT(CNT1),"^",15),ECHNC=$P(ECPT(CNT1),"^",16),ECCV=$P(ECPT(CNT1),"^",17)
"RTN","ECBEPF",14,0)
 S ECELIG=$G(ECELPT(CNT1))
"RTN","ECBEPF",15,0)
 Q
"RTN","ECBEPF",16,0)
DIE ;
"RTN","ECBEPF",17,0)
 L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^ECH(0),"^",3)+1 L -^ECH(0) G DIE
"RTN","ECBEPF",18,0)
 L -^ECH(0) K DD,DO,DIC S X=ECRN,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN K DIC S ECFN=+Y
"RTN","ECBEPF",19,0)
 S ECNODE=ECEC(CNT),ECC=+$P(ECNODE,"^"),ECP=$P(ECNODE,"^",2),ECPRPTR=$P(ECNODE,"^",12)
"RTN","ECBEPF",20,0)
 S ECCPT=$P(ECNODE,"^",9)
"RTN","ECBEPF",21,0)
 ; set the zero node
"RTN","ECBEPF",22,0)
 S ^ECH(ECFN,0)=ECFN_"^"_ECPS_"^"_ECDT_"^"_ECL_"^"_ECS_"^"_ECM_"^"_ECD_"^"_ECC_"^"_ECP_"^"_ECV_"^^"_ECO_"^"_ECDUZ_"^^^^^^"_EC4_"^"_ECID_"^"_ECVST_"^"_ECINP
"RTN","ECBEPF",23,0)
 ;ALB/JAM file multiple providers (EC*2*72)
"RTN","ECBEPF",24,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRVARY,.ECOUT) K ECFIL
"RTN","ECBEPF",25,0)
 ;ALB/ESD - Set procedure reason into zero node
"RTN","ECBEPF",26,0)
 I +ECPRPTR S $P(^ECH(ECFN,0),"^",23)=+ECPRPTR
"RTN","ECBEPF",27,0)
 ;set the "P" node
"RTN","ECBEPF",28,0)
 S ^ECH(ECFN,"P")=ECCPT_"^"_ECDX_"^"_ECAO_"^"_ECIR_"^"_ECZEC_"^"_ECSC
"RTN","ECBEPF",29,0)
 S $P(^ECH(ECFN,"P"),"^",9,12)=ECMST_"^"_ECHNC_"^"_ECCV
"RTN","ECBEPF",30,0)
 ;add secondary diagnosis codes
"RTN","ECBEPF",31,0)
 I $O(ECPT(CNT1,"DXS",""))'="" D  K DXSIEN,DXS
"RTN","ECBEPF",32,0)
 . S DXS="" F  S DXS=$O(ECPT(CNT1,"DXS",DXS)) Q:DXS=""  D
"RTN","ECBEPF",33,0)
 . . S DXSIEN=$P(ECPT(CNT1,"DXS",DXS),U) I DXSIEN<0 Q
"RTN","ECBEPF",34,0)
 . . K DIC,DD,DO
"RTN","ECBEPF",35,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECBEPF",36,0)
 . . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN
"RTN","ECBEPF",37,0)
 . . D FILE^DICN
"RTN","ECBEPF",38,0)
 K ECDXX M ECDXX=ECPT(CNT1,"DXS")
"RTN","ECBEPF",39,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPS,ECDT,ECL,EC4,ECDX,.ECDXX,ECFN) K PXUPD,ECDXX
"RTN","ECBEPF",40,0)
 ;add CPT procedure modifiers
"RTN","ECBEPF",41,0)
 I $O(ECEC(CNT,"MOD",""))'="" D  K MODIEN,MOD
"RTN","ECBEPF",42,0)
 . S MOD="" F  S MOD=$O(ECEC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECBEPF",43,0)
 . . S MODIEN=$P(ECEC(CNT,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECBEPF",44,0)
 . . K DIC,DD,DO
"RTN","ECBEPF",45,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECBEPF",46,0)
 . . S DIC("P")=$P(^DD(721,36,0),U,2),X=MODIEN
"RTN","ECBEPF",47,0)
 . . D FILE^DICN
"RTN","ECBEPF",48,0)
XREF ; sets crossreferences
"RTN","ECBEPF",49,0)
 S DIK="^ECH(",DA=ECFN D IX1^DIK K DA,DIK
"RTN","ECBEPF",50,0)
PCE ;format data to send PCE
"RTN","ECBEPF",51,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECBEPF",52,0)
 D PCE^ECBEN2U
"RTN","ECBEPF",53,0)
 Q
"RTN","ECED1")
0^25^B37208178^B36950524
"RTN","ECED1",1,0)
ECED1 ;BIR/MAM,JPW-Event Capture Data Entry (cont'd) ;6 Mar 96
"RTN","ECED1",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,8,10,18,23,41,47,50,72**;8 May 96
"RTN","ECED1",3,0)
CAT ;cat & set unit info
"RTN","ECED1",4,0)
 W !!,"Location: "_ECLN,!,"DSS Unit: "_ECDN,!
"RTN","ECED1",5,0)
 D CATS^ECHECK1
"RTN","ECED1",6,0)
 S NODE=$G(^ECD(ECD,0)),ECS=+$P(NODE,"^",2),ECM=+$P(NODE,"^",3),ECDDT=$P(NODE,"^",12),ECDDT=$S(ECDDT="T":"NOW",ECDDT="N":"NOW",1:"")
"RTN","ECED1",7,0)
 S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",8,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECED1",9,0)
PAT ;get pat
"RTN","ECED1",10,0)
 S (ECJLP,ECOUT)=0
"RTN","ECED1",11,0)
 K EC,^TMP("ECLKUP",$J) S CNT=0 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC Q:Y<0  S ECDFN=+Y,ECPAT=$P(Y,"^",2),ECOUT=0
"RTN","ECED1",12,0)
 N ECUP S DFN=ECDFN D 2^VADPT I +VADM(6) D  I $G(ECUP)="^" G PAT
"RTN","ECED1",13,0)
 . ; NOIS MWV-0603-21781: line below changed by VMP.
"RTN","ECED1",14,0)
 . W !!,"WARNING "_"[PATIENT DIED ON "_$P(VADM(6),U,2)_"] ",!!
"RTN","ECED1",15,0)
 . R "Press Return to Continue or ^ to Deselect: ",ECUP:DTIME
"RTN","ECED1",16,0)
ASKD ;get proc date
"RTN","ECED1",17,0)
 D DATE Q:ECOUT
"RTN","ECED1",18,0)
 ;
"RTN","ECED1",19,0)
 ;- Determine inpatient/outpatient status
"RTN","ECED1",20,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECDFN),+$G(ECDT))
"RTN","ECED1",21,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECED1",22,0)
 ;
"RTN","ECED1",23,0)
 ;- Display inpatient/outpatient status message
"RTN","ECED1",24,0)
 D DSPSTAT^ECUTL0(ECPTSTAT) S ECIOFLG=1
"RTN","ECED1",25,0)
 ;
"RTN","ECED1",26,0)
PR S X=$E(ECDT,1,7)-.0001 F I=0:0 S X=$O(^ECH("ADT",ECL,ECDFN,ECD,X)) Q:X>ECDT1!('X)  S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,X,ECFN)) Q:'ECFN  S CNT=CNT+1,EC(CNT)=ECFN D SET
"RTN","ECED1",27,0)
 S CNT=0 I '$O(EC(0))&ECOUT=99 S ECOUT=0 Q
"RTN","ECED1",28,0)
PROS ; display procedures
"RTN","ECED1",29,0)
 I ECOUT K ECPAT D HDR W ! G PAT
"RTN","ECED1",30,0)
 I '$D(EC(1)) S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",31,0)
 ;
"RTN","ECED1",32,0)
 ;- Prevents inpat/outpat status from scrolling off screen before heading
"RTN","ECED1",33,0)
 ;  clears screen and prints at top
"RTN","ECED1",34,0)
 I $D(EC(1)),(+$G(ECIOFLG)) D MSG1^ECMUTL1 K ECIOFLG
"RTN","ECED1",35,0)
 D HDR K ECHOICE F I=0:0 S CNT=$O(EC(CNT)) Q:'CNT!($D(ECHOICE))  S CNT1=CNT D LIST
"RTN","ECED1",36,0)
 I ECOUT K ECPAT D HDR W ! G PAT
"RTN","ECED1",37,0)
 I $D(ECHOICE),ECHOICE S EC=ECHOICE D EDIT^ECED3 S CNT=0 K EC G PR
"RTN","ECED1",38,0)
 I $D(ECHOICE),ECHOICE="N" S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",39,0)
SELP W !!!,"Select a number to edit/delete, or enter N to create a New Procedure:  " R X:DTIME I '$T!("^"[X) K ECPAT D HDR G PAT
"RTN","ECED1",40,0)
 I "Nn"[X S ECJLP=1 D DATE Q:ECOUT  D NEW^ECED2 S CNT=0 K EC G PR
"RTN","ECED1",41,0)
 I '$D(EC(X)) W !!,"Enter N to create a new procedure, or the number corresponding to the",!,"procedure that you want to edit or delete.  Enter ^ quit.",!!,"Press <RET> to continue  " R X:DTIME S CNT=CNT1-5 G PROS
"RTN","ECED1",42,0)
 S EC=X D EDIT^ECED3 S CNT=0 K EC G PR
"RTN","ECED1",43,0)
 ;
"RTN","ECED1",44,0)
LIST ; list procedures
"RTN","ECED1",45,0)
 I $Y+8>IOSL D SEL Q:$D(ECHOICE)!(X="")
"RTN","ECED1",46,0)
 S ECDTM=$$FMTE^XLFDT($P(EC(CNT),"^",10),2)
"RTN","ECED1",47,0)
 W !!,CNT_".",?5,"Category : "_$E($P(EC(CNT),"^",2),1,23),?41,"Pr. Date: ",ECDTM,?67,$P(EC(CNT),"^",4),!,?5,"Procedure: "_$E($P(EC(CNT),"^",3),1,50)_" ("_$P(EC(CNT),"^",6)_")",?67,$E($P(EC(CNT),"^",5),1,13)
"RTN","ECED1",48,0)
 I $O(EC(CNT,"MOD",""))'="" D
"RTN","ECED1",49,0)
 . N MOD S MOD="" F  S MOD=$O(EC(CNT,"MOD",MOD)) Q:MOD=""  D
"RTN","ECED1",50,0)
 . . W !?6,"Modifier: ","    - ",MOD," ",$E(EC(CNT,"MOD",MOD),1,55)
"RTN","ECED1",51,0)
 I $P(EC(CNT),"^",9)]"" W !?5,"Procedure Reason: "_$P(EC(CNT),"^",9)
"RTN","ECED1",52,0)
 Q
"RTN","ECED1",53,0)
HDR ; heading
"RTN","ECED1",54,0)
 W @IOF,!,"Location: "_ECLN,?40,"Service: "_ECSN,!,"Section: "_ECMN,?40,"DSS Unit: "_ECDN I $D(ECPAT) W !,"Patient: "_ECPAT,?40,"Procedure Date: "_ECDATE
"RTN","ECED1",55,0)
 Q
"RTN","ECED1",56,0)
SEL ; select procedure
"RTN","ECED1",57,0)
 W !!!,"Select a number to edit, enter N for a New Procedure, or press <RET> to ",!,"continue listing procedures:  " R X:DTIME I '$T!(X="^") S (ECOUT,ECHOICE)=1 Q
"RTN","ECED1",58,0)
 I X="" S CNT=CNT-1 D HDR Q
"RTN","ECED1",59,0)
 I "Na"[X S ECHOICE="N" Q
"RTN","ECED1",60,0)
 I $D(EC(X)) S ECHOICE=X Q
"RTN","ECED1",61,0)
 W !!,"To create a new procedure, type N.  If you would like to edit or delete",!,"one of the procedures listed, enter the corresponding number.  Press <RET>",!,"to continue the list, or ^ to quit."
"RTN","ECED1",62,0)
 W !!,"Press <RET> to continue  " R X:DTIME S X="",CNT=CNT-6 D HDR
"RTN","ECED1",63,0)
 Q
"RTN","ECED1",64,0)
SET ; set EC array
"RTN","ECED1",65,0)
 N ECPXD
"RTN","ECED1",66,0)
 I '$D(^ECH(EC(CNT),0)) W !!,"Event Capture patient data missing.",!! S ECOUT=1 Q
"RTN","ECED1",67,0)
 S ECCH=$G(^ECH(EC(CNT),0)),(ECPSYN,ECPTCD)="",ECDTM=$P(ECCH,"^",3)
"RTN","ECED1",68,0)
 S ECTEMP=+$P(ECCH,"^",8),ECCN=$S($P($G(^EC(726,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECED1",69,0)
 S ECTEMP=$P(ECCH,"^",9),ECTEST="^"_$P(ECTEMP,";",2),ECTEMP=+ECTEMP
"RTN","ECED1",70,0)
 I $P(ECCH,"^",4)'="",$P(ECCH,"^",7)'="",$P(ECCH,"^",8)'="",$P(ECCH,"^",9)'="" D
"RTN","ECED1",71,0)
 . S ECPSY=+$O(^ECJ("AP",$P(ECCH,"^",4),$P(ECCH,"^",7),$P(ECCH,"^",8),$P(ECCH,"^",9),""))
"RTN","ECED1",72,0)
 . I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECED1",73,0)
 S ECCPT=$S(ECTEST["EC":$P($G(^EC(725,ECTEMP,0)),"^",5),1:ECTEMP)
"RTN","ECED1",74,0)
 S (ECPTCD,ECPXD)="" I ECCPT'="" D
"RTN","ECED1",75,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,ECDTM) I +ECPXD>0 S ECPTCD=$P(ECPXD,U,2)
"RTN","ECED1",76,0)
 I $D(^ECH(EC(CNT),"MOD")) D  K MOD,ARR,ECMODF
"RTN","ECED1",77,0)
 . K ARR,ECMOD S ECMODF=$$MOD^ECUTL(EC(CNT),"E",.ARR) I 'ECMODF Q
"RTN","ECED1",78,0)
 . S MOD="" F  S MOD=$O(ARR(MOD)) Q:MOD=""  S ECMOD(MOD)=$P(ARR(MOD),U,3)
"RTN","ECED1",79,0)
 I ECTEST["EC" D  G SET1
"RTN","ECED1",80,0)
 . S ECPN=$S($P($G(^EC(725,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",81,0)
 I ECTEST["ICPT" D  G SET1
"RTN","ECED1",82,0)
 . S ECPN=$S($P(ECPXD,U,3)]"":$P(ECPXD,U,3),1:"UNKNOWN")
"RTN","ECED1",83,0)
 S ECPN="UNKNOWN"
"RTN","ECED1",84,0)
SET1 S ECPN=ECPTCD_" "_ECPN_$S(ECPSYN="":"",1:"  ["_ECPSYN_"]")
"RTN","ECED1",85,0)
 S ECTEMP=+$P(ECCH,"^",12)
"RTN","ECED1",86,0)
 S ECON=$S($P($G(^ECC(723,ECTEMP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECED1",87,0)
 S ECV=$P(ECCH,"^",10),EC4=$P(ECCH,"^",19),ECID=$P(ECCH,"^",20)
"RTN","ECED1",88,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED1",89,0)
 S ECDAT=$$GETPPRV^ECPRVMUT(EC(CNT),.ECUN) I ECDAT S ECUN="^No primary provider"
"RTN","ECED1",90,0)
 S ECUN=$P(ECUN,"^",2)
"RTN","ECED1",91,0)
 ;
"RTN","ECED1",92,0)
 ;- Check for and display procedure reason
"RTN","ECED1",93,0)
 I +$P(ECCH,"^",23) S ECPRS=+$P(ECCH,"^",23),ECPRSL=$P($G(^ECL(ECPRS,0)),"^"),ECPRSN=$P($G(^ECR(ECPRSL,0)),"^")
"RTN","ECED1",94,0)
 S EC(CNT)=EC(CNT)_"^"_ECCN_"^"_ECPN_"^"_$S(ECUN[",":$P(ECUN,",")_", "_$E($P(ECUN,",",2)),1:ECUN)_"^"_$E(ECON,1,15)_"^"_ECV_"^"_EC4_"^"_ECID_$S($G(ECPRSN)]"":"^"_ECPRSN,1:"")
"RTN","ECED1",95,0)
 S $P(EC(CNT),"^",10)=ECDTM
"RTN","ECED1",96,0)
 I $O(ECMOD(""))'="" D
"RTN","ECED1",97,0)
 . M EC(CNT,"MOD")=ECMOD
"RTN","ECED1",98,0)
 K ECPRS,ECPRSN,ECPRSL,ECMOD
"RTN","ECED1",99,0)
 Q
"RTN","ECED1",100,0)
DATE ;ask date
"RTN","ECED1",101,0)
 I ECJLP,$D(ECDT),$P(ECDT,".",2)]"" Q
"RTN","ECED1",102,0)
 I ECJLP,$D(ECDT),$P(ECDT,".",2)']"" W !!,"You must enter both DATE and TIME to create a new procedure record.",!!
"RTN","ECED1",103,0)
 ;
"RTN","ECED1",104,0)
 ;- Prevent future dates from being entered
"RTN","ECED1",105,0)
 K %DT S %DT="EAXR",%DT("A")="Enter Date and Time of Procedure: ",%DT(0)="-NOW" S:ECDDT]"" %DT("B")=ECDDT D ^%DT K %DT I Y<0 S ECOUT=1 Q
"RTN","ECED1",106,0)
 S ECDT=+Y,ECDT1=$E(Y,1,7)+.9999,ECDATE=$$FMTE^XLFDT(ECDT)
"RTN","ECED1",107,0)
 Q
"RTN","ECED3")
0^22^B70458446^B71551956
"RTN","ECED3",1,0)
ECED3 ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;7 May 96
"RTN","ECED3",2,0)
 ;;2.0; EVENT CAPTURE ;**1,4,5,7,10,13,18,23,29,32,47,72**;8 May 96
"RTN","ECED3",3,0)
EDIT ; enter or edit procedure
"RTN","ECED3",4,0)
 W !!,"Edit or Delete this Procedure:  EDIT//  " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",5,0)
 S X=$E(X) S:X="" X="E" I "EeDd"'[X W !!,"Press <RET> to edit the selected procedure, or enter D to delete",!,"the procedure.",! G EDIT
"RTN","ECED3",6,0)
 I "Dd"[X D DEL Q
"RTN","ECED3",7,0)
 D SETE^ECEDU
"RTN","ECED3",8,0)
ASK ;edit cat
"RTN","ECED3",9,0)
 S (ECFLG,ECOLD,ECOLDN,EC1,OK)=0
"RTN","ECED3",10,0)
 I '$D(ECC(1)) G P
"RTN","ECED3",11,0)
 I '$D(ECC(2)) G P
"RTN","ECED3",12,0)
 W !!,"Category: "_ECCN_"// " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",13,0)
 I X="" G P
"RTN","ECED3",14,0)
 I "?"[X G NEWC
"RTN","ECED3",15,0)
NEW ; create new procedure
"RTN","ECED3",16,0)
 S MM="" F  S MM=$O(ECC(MM)) Q:(MM="")!($D(ECHOICE))  I $D(ECC(MM)),$P(ECC(MM),"^",2)=X S ECHOICE=MM
"RTN","ECED3",17,0)
 I $D(ECHOICE) S ECOLD=ECC,ECOLDN=ECCN,ECC=+ECC(ECHOICE),ECCN=$P(ECC(ECHOICE),"^",2)
"RTN","ECED3",18,0)
 I $D(ECHOICE),ECC=ECOLD K ECOLD,ECOLDN W !,"CATEGORY: "_ECCN K ECHOICE G P
"RTN","ECED3",19,0)
 I $D(ECHOICE) G P
"RTN","ECED3",20,0)
NEWC S X="",(CNT,ECOLD)=0
"RTN","ECED3",21,0)
LIST W !,"Categories within "_ECDN_": ",! S EC1=0 F I=0:0 S CNT=$O(ECC(CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_". ",?5,$P(ECC(CNT),"^",2)
"RTN","ECED3",22,0)
 I '$D(ECSTOP),$D(ECHOICE) G P
"RTN","ECED3",23,0)
PICK W !!,"Select Number:  " R X:DTIME I '$T!("^"[X) S ECOUT=1 Q
"RTN","ECED3",24,0)
 I '$D(ECC(X)) W !!,"Select the number corresponding to the procedure category, or ^ to quit.",!!,"Press <RET> to continue  ",! R X:DTIME K ECHOICE,ECSTOP S CNT=CNT-5,X="" D HDR^ECEDU G LIST
"RTN","ECED3",25,0)
 S ECOLD=ECC,ECOLDN=ECCN,ECC=$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) I ECC=ECOLD K ECOLD,ECOLDN
"RTN","ECED3",26,0)
P ; get procedure
"RTN","ECED3",27,0)
 S EC1=1 D PROS^ECHECK1
"RTN","ECED3",28,0)
 I '$O(^TMP("ECPRO",$J,0)) D  Q:ECOUT
"RTN","ECED3",29,0)
 .W !!,"Within the ",ECLN," location there are no procedures defined",!
"RTN","ECED3",30,0)
 .W "for the DSS Unit ",ECDN,".  Please select another DSS Unit.",!!
"RTN","ECED3",31,0)
 .W "Press <RET> to continue " R X:DTIME S ECOUT=2 Q
"RTN","ECED3",32,0)
P1 ;
"RTN","ECED3",33,0)
 I '$D(^TMP("ECPRO",$J,2)) S CNT=1 D SETP W !,"Procedure: " D  G DIE
"RTN","ECED3",34,0)
 . W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED3",35,0)
 . W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED3",36,0)
 ;
"RTN","ECED3",37,0)
NEWP S ECX="",(ECPCNT,CNT,OK)=0,EC1=1 K ECHOICE,ECSTOP
"RTN","ECED3",38,0)
 I $G(ECPN)]"" S DIR("B")=ECPN
"RTN","ECED3",39,0)
 S DIR("?")="^D PROS^ECED3"
"RTN","ECED3",40,0)
 S ECX=$$GETPRO^ECDSUTIL
"RTN","ECED3",41,0)
 I +$G(ECX)=-1 D KILLV^ECDSUTIL S ECOUT=1 Q
"RTN","ECED3",42,0)
 ;
"RTN","ECED3",43,0)
 I +$G(ECX),($G(ECPROCED)=$G(ECPN)) D KILLV^ECDSUTIL G DIE
"RTN","ECED3",44,0)
 ;
"RTN","ECED3",45,0)
P2 ;ask mul proc
"RTN","ECED3",46,0)
 I +$G(ECX)=1 D SRCHTM^ECDSUTIL(ECX)
"RTN","ECED3",47,0)
 S ECPCNT=+$G(ECPCNT)
"RTN","ECED3",48,0)
 I ECPCNT=-1!(ECPCNT=-2) D  G NEWP
"RTN","ECED3",49,0)
 . D @($S(ECPCNT=-1:"ERRMSG^ECDSUTIL",ECPCNT=-2:"ERRMSG2^ECDSUTIL"))
"RTN","ECED3",50,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",51,0)
 I ECPCNT>0 D  G DIE
"RTN","ECED3",52,0)
 . S CNT=ECPCNT
"RTN","ECED3",53,0)
 . D SETP
"RTN","ECED3",54,0)
 . S OK=1
"RTN","ECED3",55,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",56,0)
 I 'ECPCNT,$D(ECPNAME) S CNT=$$PRLST^ECDSUTIL
"RTN","ECED3",57,0)
 I CNT=-1 D MSG^ECEDU,KILLV^ECDSUTIL Q
"RTN","ECED3",58,0)
 I CNT>0 D  G DIE
"RTN","ECED3",59,0)
 . D SETP
"RTN","ECED3",60,0)
 . S OK=1
"RTN","ECED3",61,0)
 . D KILLV^ECDSUTIL
"RTN","ECED3",62,0)
 Q
"RTN","ECED3",63,0)
PROS ;
"RTN","ECED3",64,0)
 S X="",CNT=0 K ECHOICE,ECSTOP
"RTN","ECED3",65,0)
LISTP D HDR1^ECEDU S JJ=1 W !,"Available Procedures within "_ECDN_": ",!
"RTN","ECED3",66,0)
 W ?72,"National",!,?5,"Procedure Name",?40,"Synonym",?72,"Number",!
"RTN","ECED3",67,0)
 S EC1=1
"RTN","ECED3",68,0)
 F   S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT!$D(ECHOICE)  D:($Y+5>IOSL) SELC Q:$D(ECHOICE)  I X="" W !,CNT_".",?5,$E($P(^TMP("ECPRO",$J,CNT),"^",4),1,30),?38,$E($P(^(CNT),"^",3),1,30),?72,$P(^(CNT),"^",5)
"RTN","ECED3",69,0)
 I X="" D
"RTN","ECED3",70,0)
 .W !!?5,"Select by number, CPT or national code, procedure name, or synonym."
"RTN","ECED3",71,0)
 .W !?5,"Synonym must be preceded by the & character  (example:  &TESTSYN).",!
"RTN","ECED3",72,0)
 .W ?2,"** Modifier(s) can be appended to a CPT code (ex: CPT code-mod1,mod2,mod3) **",!
"RTN","ECED3",73,0)
 Q
"RTN","ECED3",74,0)
 ;
"RTN","ECED3",75,0)
SETP ;set proc info
"RTN","ECED3",76,0)
 S ECP=$P(^TMP("ECPRO",$J,CNT),"^"),ECPN=$P(^(CNT),"^",4),NATN=$P(^(CNT),"^",5),SYN=$P(^(CNT),"^",3),ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECED3",77,0)
 S ECPTCD="" I ECCPT'="" D
"RTN","ECED3",78,0)
 . S ECPTCD=$$CPT^ICPTCOD(ECCPT,ECDT) I +ECPTCD>0 S ECPTCD=$P(ECPTCD,U,2)
"RTN","ECED3",79,0)
 W "  "_$S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECED3",80,0)
 W $S(SYN'["NOT DEFINED":" ["_SYN_"]",1:"")_"  (#"_NATN_")",!
"RTN","ECED3",81,0)
 S EC4=$P(^TMP("ECPRO",$J,CNT),"^",2),EC4=$P($G(^ECJ(+EC4,"PRO")),"^",4)
"RTN","ECED3",82,0)
 S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED3",83,0)
 S ECID=$P($G(^SC(+EC4,0)),"^",7)
"RTN","ECED3",84,0)
 S ^TMP("ECLKUP",$J,"LAST")=CNT
"RTN","ECED3",85,0)
 Q
"RTN","ECED3",86,0)
DIE ;edit record
"RTN","ECED3",87,0)
 I $D(^ECH(DA,0)) S ECPO=$P(^(0),"^",9),$P(^(0),"^",8)=+ECC,$P(^(0),"^",9)=ECP,ECINP=$P(^(0),"^",22),ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP),$P(^ECH(DA,"P"),"^")=ECCPT,ECPR=$P(^(0),"^",3),ECFN=DA,ECDX1=$P($G(^ECH(DA,"P")),U,2) D
"RTN","ECED3",88,0)
 . Q:ECPO=ECP
"RTN","ECED3",89,0)
 . W !,?8,"** Procedure code replaced, all modifiers deleted **"
"RTN","ECED3",90,0)
 . S (ECDA,DA(1))=DA,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECED3",91,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  D ^DIK
"RTN","ECED3",92,0)
 . K DA S DA=ECDA K ECPO,ECDA,DIK,^ECH(DA,"MOD")
"RTN","ECED3",93,0)
 K DIE,DR S DIE("NO^")="OUTOK",DIE="^ECH("
"RTN","ECED3",94,0)
 ;
"RTN","ECED3",95,0)
 S DR=$S($G(ECCPT)'="":"36;",1:"")
"RTN","ECED3",96,0)
 S DR=DR_"9;11//"_ECMN
"RTN","ECED3",97,0)
 D ^DIE K DR
"RTN","ECED3",98,0)
 I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1 Q
"RTN","ECED3",99,0)
 ;
"RTN","ECED3",100,0)
 ;- Don't allow future dates for procedure date/time
"RTN","ECED3",101,0)
 I +$G(ECPR) S Y=ECPR D DD^%DT
"RTN","ECED3",102,0)
 S %DT="EAXR",%DT("A")="DATE/TIME OF PROCEDURE: ",%DT("B")=$S($G(ECPR)&($G(Y)]""):Y,1:""),%DT(0)="-NOW" K Y
"RTN","ECED3",103,0)
 D ^%DT K %DT
"RTN","ECED3",104,0)
 I $D(DTOUT)!($G(Y)=-1) K DTOUT,Y S ECOUT=1 Q
"RTN","ECED3",105,0)
 S DR="2////"_Y,ECNEWDT=Y
"RTN","ECED3",106,0)
 D ^DIE K DR,Y
"RTN","ECED3",107,0)
 ;
"RTN","ECED3",108,0)
 ;- Get inpatient/outpatient status and file in #721
"RTN","ECED3",109,0)
 S ECPTSTAT=$$INOUTPT^ECUTL0(+$G(ECDFN),+$G(ECNEWDT))
"RTN","ECED3",110,0)
 I ECPTSTAT="" D INOUTERR^ECUTL0 Q
"RTN","ECED3",111,0)
 S DR="29////"_ECPTSTAT
"RTN","ECED3",112,0)
 D ^DIE
"RTN","ECED3",113,0)
 K DR
"RTN","ECED3",114,0)
 ;
"RTN","ECED3",115,0)
 ;- Get associated clinic
"RTN","ECED3",116,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D  Q:+$G(ECOUT)
"RTN","ECED3",117,0)
 . S DR=$S(EC4N]"":"26//"_EC4N,1:"26")
"RTN","ECED3",118,0)
 . D ^DIE
"RTN","ECED3",119,0)
 . K DR
"RTN","ECED3",120,0)
 . I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1
"RTN","ECED3",121,0)
 ;
"RTN","ECED3",122,0)
 ; - Edit Primary and multiple secondary dx codes
"RTN","ECED3",123,0)
 I $P(ECPCE,"~",2)'="N" D DXEDT^ECEDU I ECOUT Q
"RTN","ECED3",124,0)
 ;
"RTN","ECED3",125,0)
 ;- Determine patient eligibility
"RTN","ECED3",126,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECED3",127,0)
 . I '$$MULTELG^ECUTL0(+$G(ECDFN)) S ECELIG=+$G(VAEL(1))
"RTN","ECED3",128,0)
 . E  D
"RTN","ECED3",129,0)
 .. S ECELCOD=+$P($G(^ECH(DA,"PCE")),"~",17)
"RTN","ECED3",130,0)
 .. S ECELDSP=$S(ECELCOD:$P($G(^DIC(8,ECELCOD,0)),"^"),1:"NO ELIGIBILITY ON FILE")
"RTN","ECED3",131,0)
 .. S ECELANS=$$ASKIF^ECUTL0(ECELDSP)
"RTN","ECED3",132,0)
 .. I (ECELANS<1) D
"RTN","ECED3",133,0)
 ... I ECELDSP="NO ELIGIBILITY ON FILE" D ELIGERR^ECUTL0
"RTN","ECED3",134,0)
 ... S ECELIG=$S(ECELDSP="NO ELIGIBILITY ON FILE":+$G(VAEL(1)),1:ECELCOD)
"RTN","ECED3",135,0)
 .. I (ECELANS>0) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECED3",136,0)
 K ECELANS,ECELCOD,ECELDSP,VAEL,ECNEWDT,ECDX1
"RTN","ECED3",137,0)
 ;
"RTN","ECED3",138,0)
 ;- Display inpatient/outpatient status message
"RTN","ECED3",139,0)
 D DSPSTAT^ECUTL0(ECPTSTAT)
"RTN","ECED3",140,0)
 ;
"RTN","ECED3",141,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECED3",142,0)
 I $$ASKCLASS^ECUTL1(+$G(ECDFN),.ECCLFLDS,.ECOUT,ECPCE,ECPTSTAT,DA),($O(ECCLFLDS(""))]"") D EDCLASS^ECUTL1(DA,.ECCLFLDS)
"RTN","ECED3",143,0)
 Q:+$G(ECOUT)
"RTN","ECED3",144,0)
 K ECCLFLDS
"RTN","ECED3",145,0)
 ;
"RTN","ECED3",146,0)
 ;- Get provider(s) with active person class
"RTN","ECED3",147,0)
 I '$G(ECOUT) D ASKPRV^ECPRVMUT(DA,ECDT,.ECPRVARY,.ECOUT)
"RTN","ECED3",148,0)
 I '$G(ECOUT) S ECFIL=$$FILPRV^ECPRVMUT(DA,.ECPRVARY,.ECOUT)
"RTN","ECED3",149,0)
 K ECFIL,ECPRVARY,ECPRV,ECPRVN
"RTN","ECED3",150,0)
 I $G(ECOUT)!$D(DTOUT) K DIE S ECOUT=1 Q
"RTN","ECED3",151,0)
 ;
"RTN","ECED3",152,0)
 ;- File assoc clinic from event code screen if null
"RTN","ECED3",153,0)
 I $P($G(^ECH(DA,0)),"^",19)="" D
"RTN","ECED3",154,0)
 . I $G(EC4)="" D GETCLN
"RTN","ECED3",155,0)
 . S EC4=+$G(EC4)
"RTN","ECED3",156,0)
 . I EC4>0 D
"RTN","ECED3",157,0)
 .. S DR="26////^S X=EC4"
"RTN","ECED3",158,0)
 .. D ^DIE K DR
"RTN","ECED3",159,0)
 ;
"RTN","ECED3",160,0)
 ;- Procedure Reason(s)
"RTN","ECED3",161,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECED3",162,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D  Q:+$G(ECOUT)
"RTN","ECED3",163,0)
 . S DIE="^ECH(",DR="34" D ^DIE K DR,DIE
"RTN","ECED3",164,0)
 . I $D(DTOUT)!($D(Y)'=0) K ECSCR S ECOUT=1 Q
"RTN","ECED3",165,0)
 ;
"RTN","ECED3",166,0)
 K DIE,ECSCR S EC(0)=^ECH(+EC(EC),0),ECFN=+EC(0)
"RTN","ECED3",167,0)
 S ECZZ=$G(^ECH(ECFN,"P")),ECDX=+$P(ECZZ,"^",2),ECCPT=+$P(ECZZ,"^"),ECINP=$P(EC(0),"^",22) K ECZZ
"RTN","ECED3",168,0)
 S EC4=$P(EC(0),"^",19),ECID=$P($G(^SC(+EC4,0)),"^",7),$P(^ECH(ECFN,0),"^",20)=ECID
"RTN","ECED3",169,0)
 I $P(ECPCE,"~",2)="N" G SET
"RTN","ECED3",170,0)
 I ($P(ECPCE,"~",2)="O")&(ECINP'="O") G SET
"RTN","ECED3",171,0)
 D CLIN^ECEDF I 'ECPCL W !!,"You should edit this patient procedure and enter an active clinic.",!!
"RTN","ECED3",172,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECED3",173,0)
SET ; sets data 
"RTN","ECED3",174,0)
 S $P(^ECH(DA,0),"^",14)="",$P(^ECH(DA,0),"^",16)="",$P(^ECH(DA,0),"^",18)=""
"RTN","ECED3",175,0)
 S $P(^ECH(DA,0),"^",13)=DUZ,ECU=$P(^(0),"^",11) K DA
"RTN","ECED3",176,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECED3",177,0)
 D PCEE^ECBEN2U
"RTN","ECED3",178,0)
 Q
"RTN","ECED3",179,0)
DEL ; delete existing procedure
"RTN","ECED3",180,0)
 W !!,"Are you sure that you want to delete this entire procedure from",!,"your records ?  NO// " R X:DTIME I '$T!(X["^") S ECOUT=1 Q
"RTN","ECED3",181,0)
 S X=$E(X) S:X="" X="N" I "NnYy"'[X W !!,"Enter YES to delete this procedure, or <RET> to quit this option." G DEL
"RTN","ECED3",182,0)
 I "Nn"[X Q
"RTN","ECED3",183,0)
 S ECCH=$G(^ECH(+EC(EC),0)),ECVST=+$P(ECCH,"^",21) I 'ECVST G DELP
"RTN","ECED3",184,0)
 ;
"RTN","ECED3",185,0)
 ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECED3",186,0)
 ;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECED3",187,0)
 N ECVAR1 S ECVAR1=$$FNDVST^ECUTL(ECVST) K ECVAR1  ;* 2nd Param not sent
"RTN","ECED3",188,0)
 ;
"RTN","ECED3",189,0)
 ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECED3",190,0)
 S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECED3",191,0)
DELP S DA=+EC(EC),DIK="^ECH(" W !!,"Deleting Procedure... " D ^DIK K DA,DIK,ECVV
"RTN","ECED3",192,0)
 ;S ECOUT=99  ;JAM/9/28/01 remove to allow redisplay of screen
"RTN","ECED3",193,0)
 W !!,"Press <RET> to continue " R X:DTIME
"RTN","ECED3",194,0)
 Q
"RTN","ECED3",195,0)
SELC ; select category
"RTN","ECED3",196,0)
 W !!,$S(EC1:"Press",1:"Select Number, or press")_" <RET> to continue listing "_$S(EC1:"procedures",1:"categories")_" or '^' to stop: " R X:DTIME I '$T!(X="^") S (ECSTOP,ECHOICE)=1 Q
"RTN","ECED3",197,0)
 I X="" W @IOF,!,$S(EC1:"Available Procedures",1:"Categories")_" within ",ECDN," : ",! Q
"RTN","ECED3",198,0)
 I 'EC1,'$D(ECC(X)) D MSGC^ECEDU Q
"RTN","ECED3",199,0)
 I EC1,'$D(^TMP("ECPRO",$J,X)) D MSGC^ECEDU Q
"RTN","ECED3",200,0)
 S ECHOICE=1
"RTN","ECED3",201,0)
 I 'EC1 S ECC=+$P(ECC(X),"^"),ECCN=$P(ECC(X),"^",2) Q
"RTN","ECED3",202,0)
 Q
"RTN","ECED3",203,0)
 ;
"RTN","ECED3",204,0)
GETCLN ;- Get assoc clinic from event code screen
"RTN","ECED3",205,0)
 N ECI
"RTN","ECED3",206,0)
 I $G(EC4)="",($G(ECP)]"") D
"RTN","ECED3",207,0)
 . S ECI=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0)),EC4=+$P($G(^ECJ(+ECI,"PRO")),"^",4)
"RTN","ECED3",208,0)
 . S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECED3",209,0)
 Q
"RTN","ECEDF")
0^12^B27614692^B28110253
"RTN","ECEDF",1,0)
ECEDF ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;6 Mar 96
"RTN","ECEDF",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,10,13,18,23,33,72**;8 May 96
"RTN","ECEDF",3,0)
FILE ;file proc
"RTN","ECEDF",4,0)
 L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G FILE
"RTN","ECEDF",5,0)
 L -^ECH(0) K DA,DD,DO,DIC S DIC(0)="L",DIC="^ECH(",X=ECRN D FILE^DICN K DIC S ECFN=+Y
"RTN","ECEDF",6,0)
 ;Ask and file CPT modifiers, ALB/JAM
"RTN","ECEDF",7,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5)) I ECCPT D
"RTN","ECEDF",8,0)
 . S ECMODS=$G(ECMODS)
"RTN","ECEDF",9,0)
 . S ECMODF=$$ASKMOD^ECUTL(ECCPT,ECMODS,ECDT,.ECMOD,.ECERR)
"RTN","ECEDF",10,0)
 . S:$G(ECERR) ECOUT=1 K ECMODF,ECMODS I ECOUT Q
"RTN","ECEDF",11,0)
 . S MOD="" F  S MOD=$O(ECMOD(ECCPT,MOD)) Q:MOD=""  D
"RTN","ECEDF",12,0)
 . . S MODIEN=$P(ECMOD(ECCPT,MOD),U,2) I MODIEN<0 Q
"RTN","ECEDF",13,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEDF",14,0)
 . . S X=MODIEN,DIC="^ECH("_DA(1)_","_"""MOD"""_"," D FILE^DICN
"RTN","ECEDF",15,0)
 . K MOD,MODIEN,DIC,ECMOD
"RTN","ECEDF",16,0)
 I $G(ECOUT) K ECMODS,ECMOD,ECERR D RECDEL,MSG Q
"RTN","ECEDF",17,0)
 S DIR("A")="Volume",DIR("B")=ECVOL,DIR(0)="N^^K:(X<1)!(X>99) X"
"RTN","ECEDF",18,0)
 S DIR("?")="Type a Number between 1 and 99, 0 Decimal Digits"
"RTN","ECEDF",19,0)
 D ^DIR I $D(DIRUT) K DIR D RECDEL,MSG Q
"RTN","ECEDF",20,0)
 S ECVOL=+Y,ECNULL="" K DIR
"RTN","ECEDF",21,0)
 K DA,DR,DIE S DIE("NO^")="OUTOK",DIE="^ECH(",DA=ECFN
"RTN","ECEDF",22,0)
 S DR="1////"_ECDFN_";3////"_ECL_";4////"_ECS_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL_";Q;8////"_ECNULL D ^DIE K DR
"RTN","ECEDF",23,0)
 I $D(DTOUT)!($D(Y)'=0) K DIE D RECDEL,MSG Q
"RTN","ECEDF",24,0)
 ;
"RTN","ECEDF",25,0)
 ;- Default to previous ordering section if >1 procedure entered
"RTN","ECEDF",26,0)
 S ECODFN=+$G(ECODFN)
"RTN","ECEDF",27,0)
 S ECMN=$S((ECODFN=ECDFN)&(+$G(ECOM)):$P($G(^ECC(723,ECOM,0)),"^"),1:$P($G(^ECC(723,ECM,0)),"^"))
"RTN","ECEDF",28,0)
 ;
"RTN","ECEDF",29,0)
 ;- Get ordering section, and Procedure Date/Time
"RTN","ECEDF",30,0)
 S DR="11//"_ECMN_";2////"_ECDT
"RTN","ECEDF",31,0)
 D ^DIE K DR
"RTN","ECEDF",32,0)
 I $D(DTOUT)!($D(Y)'=0)!($P(^ECH(ECFN,0),"^",3)="") K DIE D RECDEL,MSG Q
"RTN","ECEDF",33,0)
 ;
"RTN","ECEDF",34,0)
 ;- Get associated clinic
"RTN","ECEDF",35,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D  I +$G(ECOUT) D RECDEL,MSG Q
"RTN","ECEDF",36,0)
 . S DR=$S(EC4N]"":"26//"_EC4N,1:"26")
"RTN","ECEDF",37,0)
 . D ^DIE S EC4=X K DR
"RTN","ECEDF",38,0)
 . I $D(DTOUT)!($D(Y)'=0) K DIE S ECOUT=1
"RTN","ECEDF",39,0)
 ;
"RTN","ECEDF",40,0)
 ; Get primary and multiple secondary diagnosis codes, ALB/JAM
"RTN","ECEDF",41,0)
 I $P(ECPCE,"~",2)'="N" D  I ECOUT D RECDEL,MSG Q
"RTN","ECEDF",42,0)
 . D DIAG^ECUTL2 I ECOUT Q
"RTN","ECEDF",43,0)
 . S DA=ECFN,DR=$S(ECDX]"":"20////"_ECDX,1:20) D ^DIE S ECDXY=X K DR
"RTN","ECEDF",44,0)
 . S DXS="" F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  D
"RTN","ECEDF",45,0)
 . . S DXSIEN=$P(ECDXS(DXS),U) I DXSIEN<0 Q
"RTN","ECEDF",46,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEDF",47,0)
 . . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECEDF",48,0)
 . K ECDXX M ECDXX=ECDXS K DXS,DXSIEN,DIC,ECDXS
"RTN","ECEDF",49,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEDF",50,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEDF",51,0)
 . K PXUPD,ECDXY,ECDXX
"RTN","ECEDF",52,0)
 S DA=ECFN
"RTN","ECEDF",53,0)
 ;
"RTN","ECEDF",54,0)
 ;- Determine patient eligibility
"RTN","ECEDF",55,0)
 I $$CHKDSS^ECUTL0(+$G(ECD),ECPTSTAT) D
"RTN","ECEDF",56,0)
 . I $$MULTELG^ECUTL0(+$G(ECDFN)) S ECELIG=+$$ELGLST^ECUTL0
"RTN","ECEDF",57,0)
 . E  S ECELIG=+$G(VAEL(1))
"RTN","ECEDF",58,0)
 K VAEL
"RTN","ECEDF",59,0)
 ;
"RTN","ECEDF",60,0)
 ;- File inpatient/outpatient status
"RTN","ECEDF",61,0)
 S DR="29////"_ECPTSTAT
"RTN","ECEDF",62,0)
 D ^DIE K DR
"RTN","ECEDF",63,0)
 ;
"RTN","ECEDF",64,0)
 ;- Ask classification questions applicable to patient and file in #721
"RTN","ECEDF",65,0)
 I $$ASKCLASS^ECUTL1(+$G(ECDFN),.ECCLFLDS,.ECOUT,ECPCE,ECPTSTAT),($O(ECCLFLDS(""))]"") D EDCLASS^ECUTL1(ECFN,.ECCLFLDS)
"RTN","ECEDF",66,0)
 I +$G(ECOUT) K DIE D RECDEL,MSG Q
"RTN","ECEDF",67,0)
 K ECCLFLDS
"RTN","ECEDF",68,0)
 ;
"RTN","ECEDF",69,0)
 ;;get provider(s) with active person class
"RTN","ECEDF",70,0)
 D ASKPRV^ECPRVMUT(ECFN,ECDT,.ECPRVARY,.ECOUT)
"RTN","ECEDF",71,0)
 I +$G(ECOUT) K DIE D RECDEL,MSG Q
"RTN","ECEDF",72,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRVARY,.ECOUT)
"RTN","ECEDF",73,0)
 K ECFIL,ECPRVARY,ECPRV,ECPRVN
"RTN","ECEDF",74,0)
 I +$G(ECOUT) K DIE D RECDEL,MSG Q
"RTN","ECEDF",75,0)
 ;
"RTN","ECEDF",76,0)
 ;- File assoc clinic from event code screen if null
"RTN","ECEDF",77,0)
 I $P($G(^ECH(ECFN,0)),"^",19)="" D
"RTN","ECEDF",78,0)
 . I $G(EC4)="" D GETCLN
"RTN","ECEDF",79,0)
 . S EC4=+$G(EC4)
"RTN","ECEDF",80,0)
 . I EC4>0 D
"RTN","ECEDF",81,0)
 .. S DA=ECFN,DR="26////^S X=EC4"
"RTN","ECEDF",82,0)
 .. D ^DIE K DA,DR,DIE
"RTN","ECEDF",83,0)
 ;
"RTN","ECEDF",84,0)
 K DA,DR,DIE,ECNULL
"RTN","ECEDF",85,0)
 ;
"RTN","ECEDF",86,0)
 ;- Set vars and default to prev ordering section if >1 proc entered
"RTN","ECEDF",87,0)
 S EC4=$P(^ECH(ECFN,0),"^",19),ECINP=$P(^(0),"^",22),ECOM=$P(^(0),"^",12),ECID=$P($G(^SC(+EC4,0)),"^",7),ECODFN=ECDFN
"RTN","ECEDF",88,0)
 ;
"RTN","ECEDF",89,0)
 I $P(ECPCE,"~",2)="N" G FILE2
"RTN","ECEDF",90,0)
 I ($P(ECPCE,"~",2)="O")&(ECINP'="O") G FILE2
"RTN","ECEDF",91,0)
 D CLIN I 'ECPCL W !!,"You should edit this patient procedure and enter an active clinic." W:'$D(ECIOFLG) !!,"Press <RET> to continue " R X:DTIME
"RTN","ECEDF",92,0)
FILE2 ;continue
"RTN","ECEDF",93,0)
 S $P(^ECH(ECFN,0),"^",13)=DUZ,$P(^(0),"^",9)=ECP,$P(^(0),"^",20)=ECID,ECINP=$P(^(0),"^",22),ECDX=+$P($G(^("P")),"^",2)
"RTN","ECEDF",94,0)
 S ECCPT=$S(ECP["EC":$P($G(^EC(725,+ECP,0)),"^",5),1:+ECP)
"RTN","ECEDF",95,0)
 S $P(^ECH(ECFN,"P"),"^")=ECCPT
"RTN","ECEDF",96,0)
 ;
"RTN","ECEDF",97,0)
 ;- Procedure Reason(s)
"RTN","ECEDF",98,0)
 I $G(ECP)]"" S ECSCR=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0))
"RTN","ECEDF",99,0)
 I ECSCR>0,($P($G(^ECJ(ECSCR,"PRO")),"^",5)=1),(+$O(^ECL("AD",ECSCR,0))) D  Q:+$G(ECOUT)
"RTN","ECEDF",100,0)
 . S DIE="^ECH(",DA=ECFN,DR="34" D ^DIE K DA,DR,DIE
"RTN","ECEDF",101,0)
 . I $D(DTOUT)!($D(Y)'=0) K ECSCR D RECDEL,MSG Q
"RTN","ECEDF",102,0)
 K ECSCR
"RTN","ECEDF",103,0)
 ;
"RTN","ECEDF",104,0)
PCE ; format PCE data to send
"RTN","ECEDF",105,0)
 Q:$P(ECPCE,"~",2)="N"  I $P(ECPCE,"~",2)="O"&(ECINP'="O") Q
"RTN","ECEDF",106,0)
 D PCE^ECBEN2U
"RTN","ECEDF",107,0)
 Q
"RTN","ECEDF",108,0)
MSG ;
"RTN","ECEDF",109,0)
 W !!,"All information was not entered.  This procedure has been deleted.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECEDF",110,0)
 Q
"RTN","ECEDF",111,0)
CLIN ;check for active associated clinic
"RTN","ECEDF",112,0)
 S MSG1=1,MSG2=0
"RTN","ECEDF",113,0)
 I 'EC4 S MSG2=1
"RTN","ECEDF",114,0)
 D CLIN^ECPCEU
"RTN","ECEDF",115,0)
 I 'ECPCL D
"RTN","ECEDF",116,0)
 .W !!,"The clinic ",$S(MSG1:"associated with",1:"you selected for")," this procedure ",$S(MSG2:"has not been entered",1:"is inactive"),"."
"RTN","ECEDF",117,0)
 .W !,"Workload data cannot be sent to PCE for this procedure with ",!,$S(MSG2:"a missing",1:"an inactive")," clinic."
"RTN","ECEDF",118,0)
 S (MSG1,MSG2)=0
"RTN","ECEDF",119,0)
 Q
"RTN","ECEDF",120,0)
 ;
"RTN","ECEDF",121,0)
GETCLN ;- Get assoc clinic from event code screen
"RTN","ECEDF",122,0)
 N ECI
"RTN","ECEDF",123,0)
 I $G(EC4)="",($G(ECP)]"") D
"RTN","ECEDF",124,0)
 . S ECI=+$O(^ECJ("AP",+ECL,+ECD,+ECC,ECP,0)),EC4=+$P($G(^ECJ(+ECI,"PRO")),"^",4)
"RTN","ECEDF",125,0)
 . S EC4N=$S($P($G(^SC(+EC4,0)),"^")]"":$P(^(0),"^"),1:"")
"RTN","ECEDF",126,0)
 Q
"RTN","ECEDF",127,0)
 ;
"RTN","ECEDF",128,0)
RECDEL ; Delete record
"RTN","ECEDF",129,0)
 ;
"RTN","ECEDF",130,0)
 N DA,DIK
"RTN","ECEDF",131,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK
"RTN","ECEDF",132,0)
 Q
"RTN","ECEDU")
0^34^B14387770^B13649367
"RTN","ECEDU",1,0)
ECEDU ;BIR/MAM,JPW-Enter Event Capture Data (cont'd) ;6 Mar 96
"RTN","ECEDU",2,0)
 ;;2.0; EVENT CAPTURE ;**10,18,23,47,63,72**;8 May 96
"RTN","ECEDU",3,0)
HDR ;hdr for filing
"RTN","ECEDU",4,0)
 W @IOF,!,"ENTERING A NEW PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!!,"PROCEDURE: "
"RTN","ECEDU",5,0)
 W $S(ECCPT="":"",1:ECPTCD_" ")_$E(ECPN,1,50)
"RTN","ECEDU",6,0)
 I SYN]"",SYN'["NOT DEFINED" W " ["_SYN_"]"
"RTN","ECEDU",7,0)
 W "  (#"_NATN_")"
"RTN","ECEDU",8,0)
 Q
"RTN","ECEDU",9,0)
MSGC ;msg cat
"RTN","ECEDU",10,0)
 W !!,"Please enter the number that corresponds to the "_$S(EC1:"procedure",1:"category")_" from which",!,"you would like to select a procedure.  If you would like to continue",!,"with the list, press <RET>.  Enter ^ to quit."
"RTN","ECEDU",11,0)
 S CNT=CNT-5
"RTN","ECEDU",12,0)
 Q
"RTN","ECEDU",13,0)
HDR1 ; heading
"RTN","ECEDU",14,0)
 W @IOF,!,"Patient: "_ECPAT,?40,"Procedure Date: "_ECDATE,!!,"Location: "_ECLN,?40,"Service: "_ECSN,!,"Section: "_ECMN,?40,"DSS Unit: "_ECDN W:$D(ECCN) !,"Category: "_ECCN
"RTN","ECEDU",15,0)
 Q
"RTN","ECEDU",16,0)
MSG W !!,"No procedures entered.  No Action Taken.",!!,"Press <RET> to continue " R X:DTIME S ECOUT=1
"RTN","ECEDU",17,0)
 Q
"RTN","ECEDU",18,0)
SETE ;set edit
"RTN","ECEDU",19,0)
 N ECPXD
"RTN","ECEDU",20,0)
 S DA=+EC(EC),EC(0)=^ECH(DA,0),ECC=+$P(EC(0),"^",8),ECCN=$S('ECC:"None",$P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",21,0)
 S (ECP,ECPROF)=$P(EC(0),"^",9)
"RTN","ECEDU",22,0)
 S ECPSY=+$O(^ECJ("AP",+ECL,+ECD,ECC,+ECP,""))
"RTN","ECEDU",23,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECEDU",24,0)
 S ECFILE=$S(ECPROF["EC":725,ECPROF["ICPT":81,1:"UNKNOWN")
"RTN","ECEDU",25,0)
 I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECEDU",26,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEDU",27,0)
 S (ECPTCD,ECPXD)="" I ECCPT'="" D
"RTN","ECEDU",28,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC(0),U,3)) I +ECPXD>0 S ECPTCD=$P(ECPXD,U,2)
"RTN","ECEDU",29,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,U,3)]"":$P(ECPXD,U,3),1:"UNKNOWN")
"RTN","ECEDU",30,0)
 I ECFILE=725 S ECPN=$S($P($G(^EC(725,+ECP,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECEDU",31,0)
HDRE ; hdr for editing
"RTN","ECEDU",32,0)
 W @IOF,!,"EDITING A PROCEDURE FOR "_ECPAT_" ...",!!,"LOCATION: "_ECLN,!,"SERVICE: "_ECSN,!,"SECTION: "_ECMN,!,"CATEGORY: "_ECCN,!,"PROCEDURE: "_$S(ECCPT="":"",1:ECPTCD_" ")_ECPN_$S(ECPSYN="":"",1:"  ["_ECPSYN_"]")
"RTN","ECEDU",33,0)
 Q
"RTN","ECEDU",34,0)
DXEDT ;ALB/JAM - Edit Primary and multiple secondary dx codes
"RTN","ECEDU",35,0)
 N PXUPD,IEN,ECPDX,ECDXS,ECDT,ECDXI
"RTN","ECEDU",36,0)
 S EC4=$P($G(^ECH(ECFN,0)),"^",19),(ECDX,ECDXN)="",ECDT=ECNEWDT
"RTN","ECEDU",37,0)
 S ECPDX=$$PDXCK^ECUTL2(ECDFN,ECNEWDT,ECL,EC4),IEN="" K ECDXIEN(ECFN)
"RTN","ECEDU",38,0)
 ;update primary diagnoses code
"RTN","ECEDU",39,0)
 S ECDX=ECDX1,ECDXI=$$ICDDX^ICDCODE(ECDX1,ECNEWDT),ECDXN=$P(ECDXI,U,2)
"RTN","ECEDU",40,0)
 W !,"Primary ICD-9 Code: ",ECDXN,"  ",$P(ECDXI,U,4)
"RTN","ECEDU",41,0)
 D PDX^ECUTL2 I ECOUT=1 Q
"RTN","ECEDU",42,0)
 S ECDX1=ECDX
"RTN","ECEDU",43,0)
 S DA=ECFN,DR="20////"_ECDX1 D ^DIE K DIE
"RTN","ECEDU",44,0)
 ;check for any changes to primary dx
"RTN","ECEDU",45,0)
 S ECDX1=X,IEN=""
"RTN","ECEDU",46,0)
 F  S IEN=$O(ECDXIEN(IEN)) Q:IEN=""  I $P(ECDXIEN(IEN),U,2)'=ECDX1 D  Q
"RTN","ECEDU",47,0)
 .W !?5,"WARNING: More than 1 Primary diagnoses exist for this encounter. All"
"RTN","ECEDU",48,0)
 .W !?14,"Procedures will be updated to have same primary & secondary dx"
"RTN","ECEDU",49,0)
 ; update secondary diagnosis codes
"RTN","ECEDU",50,0)
 D SDX^ECUTL2 S DXS=""
"RTN","ECEDU",51,0)
 K ECDXX M ECDXX=ECDXS K ECDXS
"RTN","ECEDU",52,0)
 ;Update all procedures for the encounter with same primary dx
"RTN","ECEDU",53,0)
 S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECNEWDT,ECL,EC4,ECDX1,.ECDXX)
"RTN","ECEDU",54,0)
 K PXUPD,ECDXX S DA=ECFN
"RTN","ECEDU",55,0)
 Q
"RTN","ECEDU",56,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  S DXSIEN=$P(ECDXS(DXS),U) D:DXSIEN>0
"RTN","ECEDU",57,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECFN,DIC="^ECH("_DA(1)_","_"""DX"""_","
"RTN","ECEDU",58,0)
 . S DIC("P")=$P(^DD(721,38,0),U,2),X=DXSIEN D FILE^DICN
"RTN","ECEDU",59,0)
 K DXSIEN,DXS,ECDXX,DIC M ECDXX=ECDXS K ECDXS
"RTN","ECEFPAT")
0^33^B53422819^B55903915
"RTN","ECEFPAT",1,0)
ECEFPAT ;ALB/JAM-Enter Event Capture Data Patient Filer ;12 Oct 00
"RTN","ECEFPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,39,42,47,49,54,65,72**;8 May 96
"RTN","ECEFPAT",3,0)
 ;
"RTN","ECEFPAT",4,0)
FILE ;Used by the RPC broker to file patient encounter in file #721
"RTN","ECEFPAT",5,0)
 ;     Variables passed in
"RTN","ECEFPAT",6,0)
 ;       ECIEN   - IEN of #721, if editing
"RTN","ECEFPAT",7,0)
 ;       ECDEL   - Delete record. 1- YES; 0- 0, null or undefine for NO.
"RTN","ECEFPAT",8,0)
 ;       ECDFN   - Patient IEN for file #2
"RTN","ECEFPAT",9,0)
 ;       ECDT    - Date and time of procedure
"RTN","ECEFPAT",10,0)
 ;       ECL     - Location
"RTN","ECEFPAT",11,0)
 ;       ECD     - DSS Unit
"RTN","ECEFPAT",12,0)
 ;       ECC     - Category
"RTN","ECEFPAT",13,0)
 ;       ECP     - Procedure
"RTN","ECEFPAT",14,0)
 ;       ECVOL   - Volume
"RTN","ECEFPAT",15,0)
 ;       ECU1..n - Provider (1 thru n), Prov 1 is required,other optional
"RTN","ECEFPAT",16,0)
 ;       ECMN    - Ordering Section
"RTN","ECEFPAT",17,0)
 ;       ECDUZ   - Entered/Edited by, pointer to #200
"RTN","ECEFPAT",18,0)
 ;       ECDX    - Primary Diagnosis
"RTN","ECEFPAT",19,0)
 ;       ECDXS   - Secondary Diagnosis; multiple, optional
"RTN","ECEFPAT",20,0)
 ;       EC4     - Associated Clinic, required if sending data to PCE
"RTN","ECEFPAT",21,0)
 ;       ECPTSTAT- Patient Status
"RTN","ECEFPAT",22,0)
 ;       ECPXREAS- Procedure reason, optional
"RTN","ECEFPAT",23,0)
 ;       ECMOD   - CPT modifiers, optional
"RTN","ECEFPAT",24,0)
 ;       ECLASS  - Classification, optional
"RTN","ECEFPAT",25,0)
 ;       ECELIG  - Eligibility, optional
"RTN","ECEFPAT",26,0)
 ;
"RTN","ECEFPAT",27,0)
 ;     Variable return
"RTN","ECEFPAT",28,0)
 ;       ^TMP($J,"ECMSG",n)=Success or failure to file in #721^Message
"RTN","ECEFPAT",29,0)
 ;
"RTN","ECEFPAT",30,0)
 N NODE,ECS,ECM,ECID,ECCPT,ECINT,ECPCE,ECX,ECERR,ECOUT,ECFLG,ECRES
"RTN","ECEFPAT",31,0)
 N ECFIL,ECPRV
"RTN","ECEFPAT",32,0)
 S ECFLG=1,ECERR=0 D CHKDT(1) I ECERR Q
"RTN","ECEFPAT",33,0)
 F ECX=1:1 Q:'$D(@("ECU"_ECX))  D  I ECERR Q
"RTN","ECEFPAT",34,0)
 .I @("ECU"_ECX)="" Q
"RTN","ECEFPAT",35,0)
 .S NODE=$$GET^XUA4A72(@("ECU"_ECX),ECDT) I +NODE'>0 S ECERR=1 D  Q
"RTN","ECEFPAT",36,0)
 ..S ^TMP($J,"ECMSG",1)="0^Provider doesn't have an active Person class"
"RTN","ECEFPAT",37,0)
 .S ECPRV(ECX)=@("ECU"_ECX)_"^^"_$S(ECX=1:"P",1:"S")
"RTN","ECEFPAT",38,0)
 I $G(ECIEN)'="" S ECFLG=0 D  I ECERR Q
"RTN","ECEFPAT",39,0)
 . I '$D(^ECH(ECIEN)) S ECERR=1,^TMP($J,"ECMSG",1)="0^Pat IEN Not Found"
"RTN","ECEFPAT",40,0)
 I $G(ECDEL) K ^TMP($J,"ECMSG") D  Q
"RTN","ECEFPAT",41,0)
 .S ECVST=$P($G(^ECH(ECIEN,0)),"^",21) I ECVST D
"RTN","ECEFPAT",42,0)
 ..;* Resend all EC records with same Visit file entry to PCE
"RTN","ECEFPAT",43,0)
 ..;* Remove Visit entry from ^ECH( so DELVFILE will complete cleanup
"RTN","ECEFPAT",44,0)
 ..S ECVAR1=$$FNDVST^ECUTL(ECVST) K ECVAR1
"RTN","ECEFPAT",45,0)
 ..;Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECEFPAT",46,0)
 ..S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST) K ECVST,VALQUIET
"RTN","ECEFPAT",47,0)
 .S DA=ECIEN,DIK="^ECH(" D ^DIK K DA,DIK,ECVV
"RTN","ECEFPAT",48,0)
 .S ^TMP($J,"ECMSG",1)="1^Procedure Deleted"
"RTN","ECEFPAT",49,0)
 I '$D(ECPRV) S ^TMP($J,"ECMSG",1)="0^No provider present" Q
"RTN","ECEFPAT",50,0)
 S ECDT=+ECDT,NODE=$G(^ECD(ECD,0)) I NODE="" D MSG Q
"RTN","ECEFPAT",51,0)
 S ECFN=$G(ECIEN),ECVOL=$G(ECVOL,1),ECS=$P(NODE,U,2),ECM=$P(NODE,U,3)
"RTN","ECEFPAT",52,0)
 S ECPCE="U~"_$S($P(NODE,"^",14)]"":$P(NODE,"^",14),1:"N")
"RTN","ECEFPAT",53,0)
 ;S ECPTSTAT=$$INOUTPT^ECUTL0(ECDFN,+ECDT) ;pat stat may not need
"RTN","ECEFPAT",54,0)
 I $G(EC4)="" D GETCLN^ECEDF
"RTN","ECEFPAT",55,0)
 S ECID=$S(+EC4:$P($G(^SC(+EC4,0)),"^",7),1:""),ECINP=ECPTSTAT
"RTN","ECEFPAT",56,0)
 I $S($P(ECPCE,"~",2)="N":0,$P(ECPCE,"~",2)="O"&(ECINP'="O"):0,1:1) D
"RTN","ECEFPAT",57,0)
 .D CHKDT(2)
"RTN","ECEFPAT",58,0)
 I +EC4 S ECRES=$$CLNCK^SDUTL2(+EC4,0) I 'ECRES D  S ECERR=1
"RTN","ECEFPAT",59,0)
 .S ^TMP($J,"ECMSG",1)=ECRES_" Clinic MUST be corrected before filing."
"RTN","ECEFPAT",60,0)
 Q:ECERR  I ECFLG D NEWIEN
"RTN","ECEFPAT",61,0)
 S ECCPT=$S(ECP["ICPT":+ECP,1:$P($G(^EC(725,+ECP,0)),U,5))
"RTN","ECEFPAT",62,0)
 K DA,DR,DIE S DIE="^ECH(",(DA,ECFN)=ECIEN K ECIEN
"RTN","ECEFPAT",63,0)
 S DR=".01////"_ECFN_";1////"_ECDFN_";3////"_ECL_";4////"_ECS
"RTN","ECEFPAT",64,0)
 S DR=DR_";5////"_ECM_";6////"_ECD_";7////"_+ECC_";9////"_ECVOL
"RTN","ECEFPAT",65,0)
 S $P(^ECH(ECFN,0),"^",9)=ECP
"RTN","ECEFPAT",66,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",67,0)
 S DA=ECFN,DR="11////"_ECMN_";13////"_ECDUZ_";2////"_ECDT
"RTN","ECEFPAT",68,0)
 S ECPXREAS=$G(ECPXREAS)
"RTN","ECEFPAT",69,0)
 S DR=DR_";19////"_$S(+ECCPT:ECCPT,1:"@")_";20////"_ECDX
"RTN","ECEFPAT",70,0)
 S DR=DR_";26////"_$G(EC4)_";27////"_$G(ECID)_";29////"_ECPTSTAT
"RTN","ECEFPAT",71,0)
 S DR=DR_";34////"_$S(ECPXREAS="":"@",1:ECPXREAS)
"RTN","ECEFPAT",72,0)
 D ^DIE I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",73,0)
 I ECDX S ^DISV(DUZ,"^ICD9(")=ECDX  ;last ICD9 code
"RTN","ECEFPAT",74,0)
 S ECX=$O(ECPRV("A"),-1) I ECX'="" S ^DISV(DUZ,"^VA(200,")=+ECPRV(ECX)
"RTN","ECEFPAT",75,0)
 ;Remove Old CPT modifiers
"RTN","ECEFPAT",76,0)
 I 'ECFLG D
"RTN","ECEFPAT",77,0)
 . K OLDMOD S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""MOD"",",DA=0
"RTN","ECEFPAT",78,0)
 . F  S DA=$O(^ECH(ECDA,"MOD",DA)) Q:'DA  S OLDMOD(DA)="" D ^DIK
"RTN","ECEFPAT",79,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"MOD")
"RTN","ECEFPAT",80,0)
 .;Remove old secondary diagnosis codes
"RTN","ECEFPAT",81,0)
 . K OLDDXS S (ECDA,DA(1))=ECFN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECEFPAT",82,0)
 . F  S DA=$O(^ECH(ECDA,"DX",DA)) Q:'DA  S OLDDXS(DA)="" D ^DIK
"RTN","ECEFPAT",83,0)
 . K DA,ECDA,DIK,^ECH(ECFN,"DX")
"RTN","ECEFPAT",84,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",85,0)
 ;File multiple providers
"RTN","ECEFPAT",86,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECFN,.ECPRV,.ECOUT) K ECOUT
"RTN","ECEFPAT",87,0)
 I 'ECFIL D RECDEL,MSG Q
"RTN","ECEFPAT",88,0)
 ;File CPT modifiers
"RTN","ECEFPAT",89,0)
 I $G(ECMOD)'="" D
"RTN","ECEFPAT",90,0)
 . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",91,0)
 . S DIC="^ECH("_DA(1)_","_"""MOD"""_","
"RTN","ECEFPAT",92,0)
 . F ECX=1:1:$L(ECMOD,"^") S MODIEN=$P(ECMOD,U,ECX) I +MODIEN>0 D
"RTN","ECEFPAT",93,0)
 . . K DD,DO S X=MODIEN D FILE^DICN
"RTN","ECEFPAT",94,0)
 . K MODIEN,DIC
"RTN","ECEFPAT",95,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",96,0)
 ; File multiple secondary diagnosis codes
"RTN","ECEFPAT",97,0)
 I $G(ECDXS)'="" D
"RTN","ECEFPAT",98,0)
 . S DXS="",DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",99,0)
 . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECDXY=ECDX K ECDXX
"RTN","ECEFPAT",100,0)
 . F ECX=1:1:$L(ECDXS,"^") S DXSIEN=$P(ECDXS,U,ECX) I +DXSIEN>0 D
"RTN","ECEFPAT",101,0)
 . . S DXCDE=$$ICDDX^ICDCODE(DXSIEN,ECDT) Q:+DXCDE<0  I '$P(DXCDE,U,10) Q
"RTN","ECEFPAT",102,0)
 . . K DD,DO S X=DXSIEN D FILE^DICN
"RTN","ECEFPAT",103,0)
 . . S DXCDE=$P(DXCDE,U,2),ECDXX(DXCDE)=DXSIEN
"RTN","ECEFPAT",104,0)
 . . S ^DISV(DUZ,"^ICD9(")=DXSIEN  ;last ICD9 code
"RTN","ECEFPAT",105,0)
 . ; Update all procedures for an encounter with same primary & second dx
"RTN","ECEFPAT",106,0)
 . S PXUPD=$$PXUPD^ECUTL2(ECDFN,ECDT,ECL,EC4,ECDXY,.ECDXX,ECFN)
"RTN","ECEFPAT",107,0)
 . K PXUPD,ECDXY,ECDXX,DXS,DXSIEN,DIC,DXCDE,DA,DD,DO
"RTN","ECEFPAT",108,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",109,0)
 S DA=ECFN
"RTN","ECEFPAT",110,0)
 ;File classification AO^IR^SC^EC^MST^HNC^CV
"RTN","ECEFPAT",111,0)
 I $G(ECLASS)'="" D
"RTN","ECEFPAT",112,0)
 . S CLSTR="21^22^24^23^35^39^40",DR=""
"RTN","ECEFPAT",113,0)
 . F ECX=1:1:$L(CLSTR,"^") D
"RTN","ECEFPAT",114,0)
 . . S DR=DR_$P(CLSTR,U,ECX)_"////"_$P(ECLASS,U,ECX)_";"
"RTN","ECEFPAT",115,0)
 . S DR=$E(DR,1,($L(DR)-1)) D ^DIE
"RTN","ECEFPAT",116,0)
 . K CLSTR,DR,DIE
"RTN","ECEFPAT",117,0)
 I $D(DTOUT) D RECDEL,MSG Q
"RTN","ECEFPAT",118,0)
 ;
"RTN","ECEFPAT",119,0)
PCE ; format PCE data to send
"RTN","ECEFPAT",120,0)
 I ($P(ECPCE,"~",2)="N")!($P(ECPCE,"~",2)="O"&(ECINP'="O")) D  Q
"RTN","ECEFPAT",121,0)
 .S ^TMP($J,"ECMSG",1)="1^Record Filed"
"RTN","ECEFPAT",122,0)
 D:ECFLG PCE^ECBEN2U I 'ECFLG S EC(0)=^ECH(ECFN,0) D PCEE^ECBEN2U K EC
"RTN","ECEFPAT",123,0)
 I $G(ECOUT)!(ECERR) D  Q
"RTN","ECEFPAT",124,0)
 . D RECDEL S STR=$S($G(^ECH(ECFN,"R")):^("R"),1:" PCE Data Missing")
"RTN","ECEFPAT",125,0)
 . S ^TMP($J,"ECMSG",1)="0^Record Not Filed, "_STR K STR
"RTN","ECEFPAT",126,0)
 S ^TMP($J,"ECMSG",1)="1^Record Filed"_U_$G(ECIEN)
"RTN","ECEFPAT",127,0)
 Q
"RTN","ECEFPAT",128,0)
 ;
"RTN","ECEFPAT",129,0)
NEWIEN ;Create new IEN in file #721
"RTN","ECEFPAT",130,0)
 N DIC,DA,DD,DO,ECRN
"RTN","ECEFPAT",131,0)
RLCK L +^ECH(0) S ECRN=$P(^ECH(0),"^",3)+1
"RTN","ECEFPAT",132,0)
 I $D(^ECH(ECRN)) S $P(^ECH(0),"^",3)=$P(^(0),"^",3)+1 L -^ECH(0) G RLCK
"RTN","ECEFPAT",133,0)
 L -^ECH(0) S DIC(0)="L",DIC="^ECH(",X=ECRN
"RTN","ECEFPAT",134,0)
 D FILE^DICN S ECIEN=+Y
"RTN","ECEFPAT",135,0)
 Q
"RTN","ECEFPAT",136,0)
RECDEL ; Delete record
"RTN","ECEFPAT",137,0)
 ;restore old data
"RTN","ECEFPAT",138,0)
 I 'ECFLG D  Q
"RTN","ECEFPAT",139,0)
 . I $O(OLDMOD("")) D
"RTN","ECEFPAT",140,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECEFPAT",141,0)
 . . S DIC="^ECH("_DA(1)_","_"""MOD"""_",",ECX=0
"RTN","ECEFPAT",142,0)
 . . F  S ECX=$O(OLDMOD(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",143,0)
 . I $O(OLDDXS("")) D
"RTN","ECEFPAT",144,0)
 . . S DIC(0)="L",DA(1)=ECFN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECEFPAT",145,0)
 . . S DIC="^ECH("_DA(1)_","_"""DX"""_",",ECX=0
"RTN","ECEFPAT",146,0)
 . . F  S ECX=$O(OLDDXS(ECX)) Q:'ECX  I ECX>0 K DD,DO S X=ECX D FILE^DICN
"RTN","ECEFPAT",147,0)
 . K DIC,DA,DD,DO,OLDMOD,OLDDXS,ECX
"RTN","ECEFPAT",148,0)
 S DA=ECFN,DIK="^ECH(" D ^DIK K DA,DIK
"RTN","ECEFPAT",149,0)
 Q
"RTN","ECEFPAT",150,0)
MSG ;Record not filed
"RTN","ECEFPAT",151,0)
 S ^TMP($J,"ECMSG",1)="0^Record not Filed"
"RTN","ECEFPAT",152,0)
 Q
"RTN","ECEFPAT",153,0)
CHKDT(FLG) ;Required Data Check
"RTN","ECEFPAT",154,0)
 N I,C
"RTN","ECEFPAT",155,0)
 S C=1
"RTN","ECEFPAT",156,0)
 I FLG=1 D  Q
"RTN","ECEFPAT",157,0)
 .F I="ECD","ECC","ECL","ECDT","ECP","ECDFN","ECMN","ECDUZ","ECPTSTAT" D
"RTN","ECEFPAT",158,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",159,0)
 .I $G(ECDEL),$D(ECIEN) K ^TMP($J,"ECMSG") S ECERR=0
"RTN","ECEFPAT",160,0)
 ;check PCE data
"RTN","ECEFPAT",161,0)
 I FLG=2 D  Q
"RTN","ECEFPAT",162,0)
 .F I="EC4","ECDX" D  Q
"RTN","ECEFPAT",163,0)
 ..I $G(@I)="" S ^TMP($J,"ECMSG",C)="0^Key PCE data missing "_I,C=C+1,ECERR=1
"RTN","ECEFPAT",164,0)
 Q
"RTN","ECEFPAT",165,0)
VALDATA ;validate data
"RTN","ECEFPAT",166,0)
 N ECRRX
"RTN","ECEFPAT",167,0)
 D CHK^DIE(721,1,,"`"_ECDFN,.ECRRX) I ECRRX'=ECDFN D  Q
"RTN","ECEFPAT",168,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Patient"
"RTN","ECEFPAT",169,0)
 D CHK^DIE(721,2,,ECDT,.ECRRX) I ECRRX'=ECDT D  Q
"RTN","ECEFPAT",170,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure Date"
"RTN","ECEFPAT",171,0)
 D CHK^DIE(721,3,,"`"_ECL,.ECRRX) I ECRRX'=ECL D  Q
"RTN","ECEFPAT",172,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Location"
"RTN","ECEFPAT",173,0)
 D CHK^DIE(721,6,,"`"_ECD,.ECRRX) I ECRRX'=ECD D  Q
"RTN","ECEFPAT",174,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid DSS Unit"
"RTN","ECEFPAT",175,0)
 D CHK^DIE(721,7,,"`"_ECC,.ECRRX) I ECRRX'=ECC D  Q
"RTN","ECEFPAT",176,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Category"
"RTN","ECEFPAT",177,0)
 D  I ECERR Q
"RTN","ECEFPAT",178,0)
 .I ECP["ICPT" S ECRRX=$$CPT^ICPTCOD(+ECP,ECDT) I +ECRRX>0,$P(ECRRX,U,7) Q
"RTN","ECEFPAT",179,0)
 .I ECP["EC",$D(^EC(725,+ECP,0)) Q
"RTN","ECEFPAT",180,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Procedure"
"RTN","ECEFPAT",181,0)
 D CHK^DIE(721,11,,"`"_ECMN,.ECRRX) I ECRRX'=ECMN D  Q
"RTN","ECEFPAT",182,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Ordering Section"
"RTN","ECEFPAT",183,0)
 D CHK^DIE(721,20,,"`"_ECDX,.ECRRX) I ECRRX'=ECDX D  Q
"RTN","ECEFPAT",184,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Primary Diagnosis"
"RTN","ECEFPAT",185,0)
 I $G(EC4)'="" D CHK^DIE(721,26,,"`"_EC4,.ECRRX) I ECRRX'=EC4 D  Q
"RTN","ECEFPAT",186,0)
 .S ECERR=1,^TMP($J,"ECMSG",1)="0^Invalid Associated Clinic"
"RTN","ECEFPAT",187,0)
 Q
"RTN","ECINCPT")
0^4^B3068405
"RTN","ECINCPT",1,0)
ECINCPT ;ALB/JAM-Procedure Codes with Inactive CPTs Report ; 08/01/05
"RTN","ECINCPT",2,0)
 ;;2.0; EVENT CAPTURE ;**72**;8 May 96
"RTN","ECINCPT",3,0)
 ; Routine to report National/Local Procedure Codes with Inactive CPT 
"RTN","ECINCPT",4,0)
 ; Codes Report
"RTN","ECINCPT",5,0)
EN ;entry point
"RTN","ECINCPT",6,0)
 N ZTIO,ZTDESC,ZTRTN,ECPG,ECOUT
"RTN","ECINCPT",7,0)
 S ZTIO=ION
"RTN","ECINCPT",8,0)
 S ZTDESC="NATIONAL/LOCAL PROCEDURE CODES WITH INACTIVE CPT"
"RTN","ECINCPT",9,0)
 S ZTRTN="START^ECINCPT"
"RTN","ECINCPT",10,0)
 D EN^XUTMDEVQ(ZTRTN,ZTDESC,.ZTSAVE)
"RTN","ECINCPT",11,0)
 I POP Q
"RTN","ECINCPT",12,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECINCPT",13,0)
 D HOME^%ZIS
"RTN","ECINCPT",14,0)
 Q
"RTN","ECINCPT",15,0)
START ; Routine execution
"RTN","ECINCPT",16,0)
 N ECI,EC0,ECPT,ECN,ECD,ECPI,ECDT,ECPG,ECOUT,ECRDT
"RTN","ECINCPT",17,0)
 S (ECI,ECOUT)=0,ECPG=1
"RTN","ECINCPT",18,0)
 S %H=$H S ECRDT=$$HTE^XLFDT(%H,1)
"RTN","ECINCPT",19,0)
 D HEADER
"RTN","ECINCPT",20,0)
 F  S ECI=$O(^EC(725,ECI)) Q:'ECI  D  I ECOUT Q
"RTN","ECINCPT",21,0)
 .S EC0=$G(^EC(725,ECI,0)),ECPT=$P(EC0,"^",5)
"RTN","ECINCPT",22,0)
 .Q:EC0=""  Q:ECPT=""
"RTN","ECINCPT",23,0)
 .S ECN=$P(EC0,"^",2),ECD=$P(EC0,"^"),ECPI=$$CPT^ICPTCOD(ECPT)
"RTN","ECINCPT",24,0)
 .Q:+ECPI<1  Q:$P(ECPI,"^",7)
"RTN","ECINCPT",25,0)
 .S ECDT=$TR($$FMTE^XLFDT($P(ECPI,"^",8),"2F")," ","0")
"RTN","ECINCPT",26,0)
 .I ($Y+3)>IOSL D PAGE Q:ECOUT  D HEADER
"RTN","ECINCPT",27,0)
 .W !,ECN,?10,ECD,?60,$P(ECPI,"^",2),?68,ECDT
"RTN","ECINCPT",28,0)
 I 'ECOUT D PAGE
"RTN","ECINCPT",29,0)
 Q
"RTN","ECINCPT",30,0)
HEADER ;
"RTN","ECINCPT",31,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECINCPT",32,0)
 W !!,"NATIONAL/LOCAL PROCEDURE CODES WITH INACTIVE CPT CODES"
"RTN","ECINCPT",33,0)
 W ?68,"Page: ",ECPG,!?25,"Run Date : ",ECRDT,!
"RTN","ECINCPT",34,0)
 W "National",?60,"CPT",?68,"Inactive",!
"RTN","ECINCPT",35,0)
 W "Number",?10,"National Name",?60,"Code",?68,"Date",!
"RTN","ECINCPT",36,0)
 S ECPG=ECPG+1
"RTN","ECINCPT",37,0)
 F I=1:1:80 W "-"
"RTN","ECINCPT",38,0)
 Q
"RTN","ECINCPT",39,0)
PAGE ;
"RTN","ECINCPT",40,0)
 N SS,JJ
"RTN","ECINCPT",41,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECINCPT",42,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECINCPT",43,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECINCPT",44,0)
 Q
"RTN","ECMLMD")
0^27^B2107431^B2020047
"RTN","ECMLMD",1,0)
ECMLMD ;ALB/ESD - Multiple Dates/Multiple Procedures Driver ;20 AUG 1997 13:56
"RTN","ECMLMD",2,0)
 ;;2.0; EVENT CAPTURE ;**5,15,72**;8 May 96
"RTN","ECMLMD",3,0)
 ;
"RTN","ECMLMD",4,0)
EN ;- Entry point for Multiple Date/Multiple Procedures Data Entry Option
"RTN","ECMLMD",5,0)
 ;
"RTN","ECMLMD",6,0)
 N ECCAT,ECDSSU,ECFFLG,ECL,ECLN,ECNFLG,ECPRDT,ECPROC,ECU
"RTN","ECMLMD",7,0)
 ;
"RTN","ECMLMD",8,0)
 ;- Ask location
"RTN","ECMLMD",9,0)
 I '$$ASKLOC^ECMUTL G ENQ
"RTN","ECMLMD",10,0)
 ;
"RTN","ECMLMD",11,0)
 ;- Ask DSS Unit
"RTN","ECMLMD",12,0)
 I $$ONEUNIT^ECMUTL(.ECDSSU),('$D(ECDSSU)) G ENQ
"RTN","ECMLMD",13,0)
 ;
"RTN","ECMLMD",14,0)
 ;- Ask providers (provider 1 is required, providers 2..n optional)
"RTN","ECMLMD",15,0)
 D ASKPRV^ECPRVMUT("",DT,.ECU,.ECOUT) I $G(ECOUT) G ENQ
"RTN","ECMLMD",16,0)
 ;
"RTN","ECMLMD",17,0)
 ;- Ask procedure date(s)
"RTN","ECMLMD",18,0)
 I '$$ASKPRDT^ECMUTL(+$P(ECDSSU,"^")) G ENQ
"RTN","ECMLMD",19,0)
 ;
"RTN","ECMLMD",20,0)
 ;- Ask category
"RTN","ECMLMD",21,0)
 S ECCAT=$$ASKCAT^ECMUTL(ECL,+$P(ECDSSU,"^"))
"RTN","ECMLMD",22,0)
 I $G(ECCAT)="" G ENQ
"RTN","ECMLMD",23,0)
 ;
"RTN","ECMLMD",24,0)
 ;- Ask procedure(s)
"RTN","ECMLMD",25,0)
 D ASKPRO^ECMUTL(ECL,+$P(ECDSSU,"^"),+$P(ECCAT,"^"))
"RTN","ECMLMD",26,0)
 I '$D(^TMP("ECPROC",$J)) G ENQ
"RTN","ECMLMD",27,0)
 ;
"RTN","ECMLMD",28,0)
 D WAIT^DICD
"RTN","ECMLMD",29,0)
 ;
"RTN","ECMLMD",30,0)
 ;- Call 1st ListMan screen (procedure dates/procedures)
"RTN","ECMLMD",31,0)
 D EN^ECMLMP
"RTN","ECMLMD",32,0)
 ;
"RTN","ECMLMD",33,0)
 ;- Flag to go to 2nd ListMan screen and data in array must exist to continue
"RTN","ECMLMD",34,0)
 I '$G(ECNFLG)!($G(ECNFLG)&('$D(^TMP("ECMPIDX",$J)))) G ENQ
"RTN","ECMLMD",35,0)
 ;
"RTN","ECMLMD",36,0)
 ;- Call 2nd ListMan screen (patients)
"RTN","ECMLMD",37,0)
 D EN^ECMLMN
"RTN","ECMLMD",38,0)
 ;
"RTN","ECMLMD",39,0)
 ;- Flag to go to filing routine and data in array must exist to continue
"RTN","ECMLMD",40,0)
 I '$G(ECFFLG)!($G(ECFFLG)&('$D(^TMP("ECMPTIDX",$J)))) G ENQ
"RTN","ECMLMD",41,0)
 ;
"RTN","ECMLMD",42,0)
 ;- Call filing routine
"RTN","ECMLMD",43,0)
 D EN^ECMLMF
"RTN","ECMLMD",44,0)
 Q
"RTN","ECMLMD",45,0)
 ;
"RTN","ECMLMD",46,0)
ENQ ;- clean up and exit
"RTN","ECMLMD",47,0)
 K ^TMP("ECPRDT",$J),^TMP("ECPROC",$J),^TMP("ECPAT",$J)
"RTN","ECMLMD",48,0)
 K ^TMP("ECMPIDX",$J),^TMP("ECMPTIDX",$J),^TMP("ECPLST",$J)
"RTN","ECMLMD",49,0)
 Q
"RTN","ECMLMF")
0^28^B31356519^B30638515
"RTN","ECMLMF",1,0)
ECMLMF ;ALB/ESD - File Multiple Dates/Multiple Procedures  -  29 AUG 97 08:51
"RTN","ECMLMF",2,0)
 ;;2.0; EVENT CAPTURE ;**5,10,15,13,17,18,23,42,54,72**;8 May 96
"RTN","ECMLMF",3,0)
 ;
"RTN","ECMLMF",4,0)
EN ;- Entry point to file selected patients and procedures
"RTN","ECMLMF",5,0)
 ;
"RTN","ECMLMF",6,0)
 N DIR,DIRUT,I,J,Y,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","ECMLMF",7,0)
 I '$D(^TMP("ECMPIDX",$J))!('$D(^TMP("ECMPTIDX",$J))) W !!,*7,"No patient data found.  No patient record(s) have been filed." D MSG G ENQ
"RTN","ECMLMF",8,0)
 ;
"RTN","ECMLMF",9,0)
 W !!,"You have selected the following patients for filing:",!
"RTN","ECMLMF",10,0)
 ;
"RTN","ECMLMF",11,0)
 ;- List patients
"RTN","ECMLMF",12,0)
 S I=0
"RTN","ECMLMF",13,0)
 F  S I=$O(^TMP("ECMPTIDX",$J,I)) Q:'I  D
"RTN","ECMLMF",14,0)
 . W !?5,I_".  ",$P($G(^TMP("ECMPTIDX",$J,I)),"^",3)
"RTN","ECMLMF",15,0)
 W !! S DIR(0)="YA",DIR("A")="Is this correct? ",DIR("B")="YES"
"RTN","ECMLMF",16,0)
 S DIR("?")="Answer YES to continue, NO to exit."
"RTN","ECMLMF",17,0)
 D ^DIR K DIR
"RTN","ECMLMF",18,0)
 I '$G(Y)!($D(DIRUT)) W !,"Exiting option...no patients filed.",! D MSG G ENQ
"RTN","ECMLMF",19,0)
 ;
"RTN","ECMLMF",20,0)
 ;- Task job
"RTN","ECMLMF",21,0)
 F J="DUZ","ECL","ECDSSU","ECCAT","ECU*" S ZTSAVE(J)=""
"RTN","ECMLMF",22,0)
 S ZTSAVE("^TMP(""ECMPIDX"",$J,")="",ZTSAVE("^TMP(""ECMPTIDX"",$J,")=""
"RTN","ECMLMF",23,0)
 S ZTIO="",ZTDESC="EC MULT DATES/MULT PROCS DATA ENTRY",ZTRTN="GETNODS^ECMLMF",ZTDTH=$H
"RTN","ECMLMF",24,0)
 ;
"RTN","ECMLMF",25,0)
 W !!,"These patients will be sent to the background for filing.",!
"RTN","ECMLMF",26,0)
 D ^%ZTLOAD
"RTN","ECMLMF",27,0)
 I $D(ZTSK) W !,"Queued as Task #",ZTSK,!
"RTN","ECMLMF",28,0)
 D MSG
"RTN","ECMLMF",29,0)
 ;
"RTN","ECMLMF",30,0)
ENQ K ^TMP("ECPLST",$J)
"RTN","ECMLMF",31,0)
 Q
"RTN","ECMLMF",32,0)
 ;
"RTN","ECMLMF",33,0)
 ;
"RTN","ECMLMF",34,0)
GETNODS ;- Get procedure node and patient node for processing
"RTN","ECMLMF",35,0)
 ;
"RTN","ECMLMF",36,0)
 N ECI,ECJ,ECPRNOD,ECPTNOD,ECDXX
"RTN","ECMLMF",37,0)
 S (ECI,ECJ)=0
"RTN","ECMLMF",38,0)
 F  S ECI=$O(^TMP("ECMPTIDX",$J,ECI)) Q:'ECI  D
"RTN","ECMLMF",39,0)
 . S ECPTNOD="",ECPTNOD=$G(^TMP("ECMPTIDX",$J,ECI))
"RTN","ECMLMF",40,0)
 . K ECDXX M ECDXX=^TMP("ECMPTIDX",$J,ECI,"DXS")
"RTN","ECMLMF",41,0)
 . F  S ECJ=$O(^TMP("ECMPIDX",$J,ECJ)) Q:'ECJ  D
"RTN","ECMLMF",42,0)
 .. S ECPRNOD="",ECPRNOD=$G(^TMP("ECMPIDX",$J,ECJ))
"RTN","ECMLMF",43,0)
 .. D FILREC
"RTN","ECMLMF",44,0)
 D ENQ^ECMLMD
"RTN","ECMLMF",45,0)
 S ZTREQ="@"
"RTN","ECMLMF",46,0)
 Q
"RTN","ECMLMF",47,0)
 ;
"RTN","ECMLMF",48,0)
 ;
"RTN","ECMLMF",49,0)
FILREC ;- Create record in #721 and file fields
"RTN","ECMLMF",50,0)
 ;
"RTN","ECMLMF",51,0)
 N DA,ECIEN,ECNOGO,ECPRR,ECPTR,ECREAS,ECSND,DIC,DLAYGO,DIE,DR,I,Y
"RTN","ECMLMF",52,0)
 S ECNOGO=0
"RTN","ECMLMF",53,0)
 S I=$P(^ECH(0),"^",3)
"RTN","ECMLMF",54,0)
LOCKHD S I=I+1 L +^ECH(I):2 I '$T!$D(^ECH(I)) L -^ECH(I) G LOCKHD
"RTN","ECMLMF",55,0)
 L -^ECH(0)
"RTN","ECMLMF",56,0)
 K DD,DO S X=I,DIC(0)="L",DLAYGO=721,DIC="^ECH(" D FILE^DICN
"RTN","ECMLMF",57,0)
 K DIC,DLAYGO,X
"RTN","ECMLMF",58,0)
 I Y=-1 G FILRECQ
"RTN","ECMLMF",59,0)
 S (ECIEN,DA)=+Y
"RTN","ECMLMF",60,0)
 L +^ECH(ECIEN):2  I '$T G FILRECQ
"RTN","ECMLMF",61,0)
 ;
"RTN","ECMLMF",62,0)
 D SETARRY
"RTN","ECMLMF",63,0)
 ;
"RTN","ECMLMF",64,0)
 ;- File zero node and "P" node
"RTN","ECMLMF",65,0)
 S DIE="^ECH(",DR="[EC CREATE PATIENT ENTRY]" D ^DIE K DR
"RTN","ECMLMF",66,0)
 ;
"RTN","ECMLMF",67,0)
 ;- File multiple providers, ALB/JAM
"RTN","ECMLMF",68,0)
 S ECFIL=$$FILPRV^ECPRVMUT(ECIEN,.ECU,.ECOUT) K ECFIL
"RTN","ECMLMF",69,0)
 ;- File secondary diagnoses codes, ALB/JAM
"RTN","ECMLMF",70,0)
 S (DXS,DXSIEN)=""
"RTN","ECMLMF",71,0)
 F  S DXS=$O(ECDXX(DXS)) Q:DXS=""  D
"RTN","ECMLMF",72,0)
 . S DXSIEN=+ECDXX(DXS) I DXSIEN<0 Q
"RTN","ECMLMF",73,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECMLMF",74,0)
 . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECMLMF",75,0)
 K DXS,DXSIEN,DIC
"RTN","ECMLMF",76,0)
 ;update encounter's procedures to have same primary & secondary dx
"RTN","ECMLMF",77,0)
 S PXUPD=$$PXUPD^ECUTL2(ECPTR("DFN"),ECPRR("PROCDT"),ECL,ECPTR("CLIN"),ECPTR("DX"),.ECDXX,ECIEN) K PXUPD
"RTN","ECMLMF",78,0)
 ;
"RTN","ECMLMF",79,0)
 ;File CPT modifiers, ALB/JAM
"RTN","ECMLMF",80,0)
 N MOD,MODIEN
"RTN","ECMLMF",81,0)
 S (ECMODS,MOD)=""
"RTN","ECMLMF",82,0)
 F  S MOD=$O(^TMP("ECMPIDX",$J,ECJ,"MOD",MOD)) Q:MOD=""  D
"RTN","ECMLMF",83,0)
 . S MODIEN=$P(^TMP("ECMPIDX",$J,ECJ,"MOD",MOD),U,2) I MODIEN<0 Q
"RTN","ECMLMF",84,0)
 . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,36,0),U,2)
"RTN","ECMLMF",85,0)
 . S X=MODIEN,DIC="^ECH("_DA(1)_","_"""MOD"""_"," D FILE^DICN
"RTN","ECMLMF",86,0)
 . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_MOD
"RTN","ECMLMF",87,0)
 ;
"RTN","ECMLMF",88,0)
 S ECSND=$P($G(^ECD(+$P($G(ECDSSU),"^"),0)),"^",14),DA=ECIEN
"RTN","ECMLMF",89,0)
 I ECSND="" S ECSND="N"
"RTN","ECMLMF",90,0)
 I ECSND="A"!((ECSND="O")&(ECPTR("IO")="O")) D
"RTN","ECMLMF",91,0)
 . S ECNOGO=$$BADFLDS(.ECREAS)
"RTN","ECMLMF",92,0)
 . I ECNOGO S DR="33////^S X=$G(ECREAS)" D ^DIE Q
"RTN","ECMLMF",93,0)
 . I 'ECNOGO D PCE
"RTN","ECMLMF",94,0)
 ;
"RTN","ECMLMF",95,0)
FILRECQ L -^ECH(ECIEN)
"RTN","ECMLMF",96,0)
 Q
"RTN","ECMLMF",97,0)
 ;
"RTN","ECMLMF",98,0)
 ;
"RTN","ECMLMF",99,0)
SETARRY ;- Set local arrays with procedure and patient data for filing
"RTN","ECMLMF",100,0)
 ;
"RTN","ECMLMF",101,0)
 N I
"RTN","ECMLMF",102,0)
 F I="PROCDT","PROC","REAS","VOL" S ECPRR(I)=$P(ECPRNOD,"^",+$P($T(@I),";;",2))
"RTN","ECMLMF",103,0)
 I ECPRR("REAS")=0 S ECPRR("REAS")=""
"RTN","ECMLMF",104,0)
 S I="PCEPR" S ECPRR(I)=$S($P($G(ECPRR("PROC")),";",2)="ICPT(":$P($G(ECPRR("PROC")),";"),1:$P($G(^EC(725,+$P($G(ECPRR("PROC")),";"),0)),"^",5))
"RTN","ECMLMF",105,0)
 F I="DFN","ORDSEC","IO","CLIN","DX","AO","ENV","IR","SC","ELIG","MST","HNC","CV" S ECPTR(I)=$P(ECPTNOD,"^",+$P($T(@I),";;",2))
"RTN","ECMLMF",106,0)
 Q
"RTN","ECMLMF",107,0)
 ;
"RTN","ECMLMF",108,0)
 ;
"RTN","ECMLMF",109,0)
BADFLDS(ECRS) ; - Validation checks on fields to be set in "PCE" node
"RTN","ECMLMF",110,0)
 ;
"RTN","ECMLMF",111,0)
 S ECRS=""
"RTN","ECMLMF",112,0)
 I ECPTR("CLIN")="" S ECRS="Clinic missing;"
"RTN","ECMLMF",113,0)
 I ECPTR("CLIN")=0 S ECRS="Clinic inactive;"
"RTN","ECMLMF",114,0)
 I ECPTR("DX")="" S ECRS=$G(ECRS)_"Diagnosis missing;"
"RTN","ECMLMF",115,0)
 I ECPRR("PCEPR")="" S ECRS=$G(ECRS)_"CPT code missing;"
"RTN","ECMLMF",116,0)
 Q $S($G(ECRS)="":0,1:1)
"RTN","ECMLMF",117,0)
 ;
"RTN","ECMLMF",118,0)
 ;
"RTN","ECMLMF",119,0)
PCE ;- More validation checks on fields to be set in "PCE" node
"RTN","ECMLMF",120,0)
 ;
"RTN","ECMLMF",121,0)
 N ECDSS,I,ECAO,ECELIG,ECEV,ECIR,ECSC,ECNP,ECNPP,ECPCENOD,ECMST,ECHNC,ECCV
"RTN","ECMLMF",122,0)
 G PCEQ:$G(ECPRR("PROCDT"))'["."!('$G(ECPRR("PCEPR")))
"RTN","ECMLMF",123,0)
 F I="DFN","CLIN","DX" G PCEQ:'$G(ECPTR(I))
"RTN","ECMLMF",124,0)
 G PCEQ:'$G(ECPRR("VOL"))
"RTN","ECMLMF",125,0)
 S ECDSS=$P($G(^ECH(ECIEN,0)),"^",20)
"RTN","ECMLMF",126,0)
 G PCEQ:'$G(ECL)!('ECDSS)!('$G(ECU(1)))
"RTN","ECMLMF",127,0)
 ;
"RTN","ECMLMF",128,0)
 S ECPTR("AO")=$G(ECPTR("AO"))
"RTN","ECMLMF",129,0)
 S ECAO=$S(ECPTR("AO")="Y":1,ECPTR("AO")="N":0,1:"")
"RTN","ECMLMF",130,0)
 ;
"RTN","ECMLMF",131,0)
 S ECPTR("ENV")=$G(ECPTR("ENV"))
"RTN","ECMLMF",132,0)
 S ECEV=$S(ECPTR("ENV")="Y":1,ECPTR("ENV")="N":0,1:"")
"RTN","ECMLMF",133,0)
 ;
"RTN","ECMLMF",134,0)
 S ECPTR("IR")=$G(ECPTR("IR"))
"RTN","ECMLMF",135,0)
 S ECIR=$S(ECPTR("IR")="Y":1,ECPTR("IR")="N":0,1:"")
"RTN","ECMLMF",136,0)
 ;
"RTN","ECMLMF",137,0)
 S ECPTR("SC")=$G(ECPTR("SC"))
"RTN","ECMLMF",138,0)
 S ECSC=$S(ECPTR("SC")="Y":1,ECPTR("SC")="N":0,1:"")
"RTN","ECMLMF",139,0)
 ;
"RTN","ECMLMF",140,0)
 S ECNPP="" I $G(ECPRR("PROC"))["EC" S ECNP=$G(^EC(725,+ECPRR("PROC"),0)),ECNPP=$P(ECNP,"^",2)_"  "_$P(ECNP,"^",1)
"RTN","ECMLMF",141,0)
 ;
"RTN","ECMLMF",142,0)
 S ECELIG=$S($G(ECPTR("ELIG")):ECPTR("ELIG"),1:"")
"RTN","ECMLMF",143,0)
 ;
"RTN","ECMLMF",144,0)
 S ECPTR("MST")=$G(ECPTR("MST"))
"RTN","ECMLMF",145,0)
 S ECMST=$S(ECPTR("MST")="Y":1,ECPTR("MST")="N":0,1:"")
"RTN","ECMLMF",146,0)
 ;
"RTN","ECMLMF",147,0)
 ;JAM;09/30/02,Head/Neck Cancer
"RTN","ECMLMF",148,0)
 S ECPTR("HNC")=$G(ECPTR("HNC"))
"RTN","ECMLMF",149,0)
 S ECHNC=$S(ECPTR("HNC")="Y":1,ECPTR("HNC")="N":0,1:"")
"RTN","ECMLMF",150,0)
 ;
"RTN","ECMLMF",151,0)
 ;JAM;10/29/03,Combat Veteran
"RTN","ECMLMF",152,0)
 S ECPTR("CV")=$G(ECPTR("CV"))
"RTN","ECMLMF",153,0)
 S ECCV=$S(ECPTR("CV")="Y":1,ECPTR("CV")="N":0,1:"")
"RTN","ECMLMF",154,0)
 ;
"RTN","ECMLMF",155,0)
 ;JAM;06/01/05,Project 112/SHAD
"RTN","ECMLMF",156,0)
 ;S ECPTR("SHAD")=$G(ECPTR("SHAD"))
"RTN","ECMLMF",157,0)
 ;S ECSHAD=$S(ECPTR("SHAD")="Y":1,ECPTR("SHAD")="N":0,1:"")
"RTN","ECMLMF",158,0)
 ;- File "PCE" and "PCE1" nodes
"RTN","ECMLMF",159,0)
 ;
"RTN","ECMLMF",160,0)
 S DR="[EC FILE PCE NODE]" D ^DIE K DR
"RTN","ECMLMF",161,0)
 S DR="31////"_$$NOW^XLFDT D ^DIE
"RTN","ECMLMF",162,0)
PCEQ Q
"RTN","ECMLMF",163,0)
 ;
"RTN","ECMLMF",164,0)
 ;
"RTN","ECMLMF",165,0)
MSG ;- Message displayed so error message can be read on screen
"RTN","ECMLMF",166,0)
 ;
"RTN","ECMLMF",167,0)
 S DIR(0)="E" D ^DIR
"RTN","ECMLMF",168,0)
 Q
"RTN","ECMLMF",169,0)
 ;
"RTN","ECMLMF",170,0)
 ;- Subscripts used in creating ECPRR and ECPTR arrays
"RTN","ECMLMF",171,0)
 ;
"RTN","ECMLMF",172,0)
PROCDT ;;2
"RTN","ECMLMF",173,0)
PROC ;;3
"RTN","ECMLMF",174,0)
REAS ;;5
"RTN","ECMLMF",175,0)
VOL ;;7
"RTN","ECMLMF",176,0)
 ;
"RTN","ECMLMF",177,0)
DFN ;;2
"RTN","ECMLMF",178,0)
ORDSEC ;;4
"RTN","ECMLMF",179,0)
IO ;;5
"RTN","ECMLMF",180,0)
CLIN ;;6
"RTN","ECMLMF",181,0)
DX ;;8
"RTN","ECMLMF",182,0)
AO ;;10
"RTN","ECMLMF",183,0)
ENV ;;11
"RTN","ECMLMF",184,0)
IR ;;12
"RTN","ECMLMF",185,0)
SC ;;13
"RTN","ECMLMF",186,0)
ELIG ;;14
"RTN","ECMLMF",187,0)
MST ;;15
"RTN","ECMLMF",188,0)
HNC ;;16
"RTN","ECMLMF",189,0)
CV ;;17
"RTN","ECNTPCE")
0^30^B20426279^B18587127
"RTN","ECNTPCE",1,0)
ECNTPCE ;ALB/JAM-Event Capture Records failing transmission to PCE;14 Jan 04
"RTN","ECNTPCE",2,0)
 ;;2.0; EVENT CAPTURE ;**61,72**;8 May 96
"RTN","ECNTPCE",3,0)
EN ; entry point
"RTN","ECNTPCE",4,0)
 K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT I Y<0 G END
"RTN","ECNTPCE",5,0)
 S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y
"RTN","ECNTPCE",6,0)
 I ECED<ECSD W !,"End date must be after start date",! G EN
"RTN","ECNTPCE",7,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_U_$$FMTE^XLFDT(ECED)
"RTN","ECNTPCE",8,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECNTPCE",9,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM"
"RTN","ECNTPCE",10,0)
 D ^%ZIS G:POP END
"RTN","ECNTPCE",11,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECNTPCE",12,0)
 .S (ZTSAVE("ECDFN"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))=""
"RTN","ECNTPCE",13,0)
 .S ZTDESC="ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",ZTRTN="START^ECNTPCE"
"RTN","ECNTPCE",14,0)
 .S ZTIO=ION D ^%ZTLOAD,HOME^%ZIS
"RTN","ECNTPCE",15,0)
 W !,?5,"Please be patient, this may take a few moments..."
"RTN","ECNTPCE",16,0)
 ;
"RTN","ECNTPCE",17,0)
START ; entry when queued
"RTN","ECNTPCE",18,0)
 N ECOUT,X,Y,DIR,LINE,ECPG,ECRDT,%H
"RTN","ECNTPCE",19,0)
 S ECOUT=0,ECPG=1
"RTN","ECNTPCE",20,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECNTPCE",21,0)
 U IO
"RTN","ECNTPCE",22,0)
 D GET
"RTN","ECNTPCE",23,0)
 D END
"RTN","ECNTPCE",24,0)
 Q
"RTN","ECNTPCE",25,0)
GET ; start processing or records
"RTN","ECNTPCE",26,0)
 N DATE,ECL,ECNT,ECFN,ECEC,ECPX,ECSTR,ECD
"RTN","ECNTPCE",27,0)
 K ^TMP("ECNTPCE",$J)
"RTN","ECNTPCE",28,0)
 S DATE=ECSD,ECNT=0
"RTN","ECNTPCE",29,0)
 F  S DATE=$O(^ECH("AC",DATE)) Q:('DATE)!(DATE>ECED)  D
"RTN","ECNTPCE",30,0)
 .S ECFN=0 F  S ECFN=$O(^ECH("AC",DATE,ECFN)) Q:'ECFN  D 
"RTN","ECNTPCE",31,0)
 ..Q:'$D(^ECH(ECFN,"R"))  S ECEC=$G(^ECH(ECFN,0)) Q:ECEC=""
"RTN","ECNTPCE",32,0)
 ..S ECL=$P(ECEC,U,4),ECD=$P(ECEC,U,7),ECPX=$P(ECEC,U,9)
"RTN","ECNTPCE",33,0)
 ..S ECDFN=$P(ECEC,U,2)
"RTN","ECNTPCE",34,0)
 ..I (ECL="")!(ECD="")!(ECPX="")!(ECDFN="") Q
"RTN","ECNTPCE",35,0)
 ..S ECSTR=ECFN_U_$P(ECEC,U,8)_U_ECPX
"RTN","ECNTPCE",36,0)
 ..S ECNT=ECNT+1,^TMP("ECNTPCE",$J,DATE,ECL,ECD,ECDFN,ECNT)=ECSTR
"RTN","ECNTPCE",37,0)
 ..K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(ECFN,.ECPRV) I 'ECPRV D  K ECPRV
"RTN","ECNTPCE",38,0)
 ...M ^TMP("ECNTPCE",$J,DATE,ECL,ECD,ECDFN,ECNT,"PRV")=ECPRV
"RTN","ECNTPCE",39,0)
 D HDR
"RTN","ECNTPCE",40,0)
 I '$O(^TMP("ECNTPCE",$J,0)) D  Q
"RTN","ECNTPCE",41,0)
 .W !!,?10,"No Data found during the time selected."
"RTN","ECNTPCE",42,0)
 D PRT
"RTN","ECNTPCE",43,0)
 Q
"RTN","ECNTPCE",44,0)
 ;
"RTN","ECNTPCE",45,0)
END K ECSD,ECED
"RTN","ECNTPCE",46,0)
 I $D(ECGUI) D ^ECKILL Q
"RTN","ECNTPCE",47,0)
 W !
"RTN","ECNTPCE",48,0)
 I $E(IOST,1,2)="C-",$G(ECOUT)=0 W !!,"Press <RET> to continue" R X:DTIME
"RTN","ECNTPCE",49,0)
 ;W @IOF
"RTN","ECNTPCE",50,0)
 D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECNTPCE",51,0)
 Q
"RTN","ECNTPCE",52,0)
PAGE ; end of page
"RTN","ECNTPCE",53,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1 Q
"RTN","ECNTPCE",54,0)
 D HDR
"RTN","ECNTPCE",55,0)
 Q
"RTN","ECNTPCE",56,0)
HDR ; print header
"RTN","ECNTPCE",57,0)
 W @IOF
"RTN","ECNTPCE",58,0)
 W ECRDT,?70,"Page: ",ECPG,!
"RTN","ECNTPCE",59,0)
 W !,?17,"ECS RECORDS FAILING TRANSMISSION TO PCE REPORT",!,?24
"RTN","ECNTPCE",60,0)
 W "FROM "_$P(ECDATE,U)_" TO "_$P(ECDATE,U,2),!!
"RTN","ECNTPCE",61,0)
 W "DATE/TIME",?16,"PATIENT",?39,"SSN",?44,"PROVIDER(S)",?61,"REASONS"
"RTN","ECNTPCE",62,0)
 W !,"LOCATION",?16,"PROCEDURE",!,"DSS UNIT",?16,"CATEGORY",!
"RTN","ECNTPCE",63,0)
 F LINE=1:1:80 W "-"
"RTN","ECNTPCE",64,0)
 W !
"RTN","ECNTPCE",65,0)
 S ECPG=ECPG+1
"RTN","ECNTPCE",66,0)
 Q
"RTN","ECNTPCE",67,0)
 ;
"RTN","ECNTPCE",68,0)
PRT N ECLN,ECDN,ECPAT,ECEC,ECPS,ECDFN,ECUN,ECUN1,ECUN2,ECDTE,ECDT,ECRS,ECDE
"RTN","ECNTPCE",69,0)
 N ECX,ECAT,ECSSN,DFN,VA,VADM
"RTN","ECNTPCE",70,0)
 S ECDTE=0 F  S ECDTE=$O(^TMP("ECNTPCE",$J,ECDTE)) Q:'ECDTE  D  Q:ECOUT
"RTN","ECNTPCE",71,0)
 .S ECDT=$$FMTE^XLFDT(ECDTE,2),ECL=0
"RTN","ECNTPCE",72,0)
 .F  S ECL=$O(^TMP("ECNTPCE",$J,ECDTE,ECL)) Q:'ECL  D  Q:ECOUT
"RTN","ECNTPCE",73,0)
 ..S ECLN=$P($G(^DIC(4,ECL,0)),U),ECLN=$S(ECLN="":"UNKNOWN",1:ECLN),ECD=0
"RTN","ECNTPCE",74,0)
 ..F  S ECD=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECNTPCE",75,0)
 ...S ECDN=$P($G(^ECD(ECD,0)),U),ECDN=$S(ECDN="":"UNKNOWN",1:ECDN)
"RTN","ECNTPCE",76,0)
 ...S ECDFN=0
"RTN","ECNTPCE",77,0)
 ...F  S ECDFN=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN)) Q:'ECDFN  D  Q:ECOUT
"RTN","ECNTPCE",78,0)
 ....S DFN=ECDFN D DEM^VADPT
"RTN","ECNTPCE",79,0)
 ....S ECPAT=VADM(1),ECSSN=$P($P(VADM(2),U,2),"-",3),ECNT=0
"RTN","ECNTPCE",80,0)
 ....F  S ECNT=$O(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT)) Q:'ECNT  D PR2  Q:ECOUT
"RTN","ECNTPCE",81,0)
 Q
"RTN","ECNTPCE",82,0)
 ;
"RTN","ECNTPCE",83,0)
PR2 S ECEC=$G(^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT))
"RTN","ECNTPCE",84,0)
 S ECPS="",ECFN=$P(ECEC,U)
"RTN","ECNTPCE",85,0)
 D PROV
"RTN","ECNTPCE",86,0)
 S ECAT=$S($P(ECEC,U,2):$P($G(^EC(726,$P(ECEC,U,2),0)),U),1:"")
"RTN","ECNTPCE",87,0)
 I $P(ECEC,U,3)'="" S ECDE=+$P(ECEC,U,3) D
"RTN","ECNTPCE",88,0)
 .I $P(ECEC,U,3)[";EC" D  Q
"RTN","ECNTPCE",89,0)
 ..S ECPS=$G(^EC(725,+ECDE,0)),ECPS=$P(ECPS,U,2)_" "_$P(ECPS,U)
"RTN","ECNTPCE",90,0)
 .S ECPS=$$CPT^ICPTCOD(ECDE,ECDTE)
"RTN","ECNTPCE",91,0)
 .S ECPS=$S(+ECPS>0:$P(ECPS,U,2)_" "_$P(ECPS,U,3),1:"CPT NAME UNKNOWN")
"RTN","ECNTPCE",92,0)
 S ECRS=^ECH(ECFN,"R")
"RTN","ECNTPCE",93,0)
 W ECDT,?16,$E(ECPAT,1,20),?39,ECSSN,?44,$E(ECUN1,1,16),?61,$E($P(ECRS,";"),1,19),!
"RTN","ECNTPCE",94,0)
 W $E(ECLN,1,15),?16,$E(ECPS,1,27),?44,$E(ECUN2,1,16)
"RTN","ECNTPCE",95,0)
 W ?61,$E($P(ECRS,";",2),1,19),!
"RTN","ECNTPCE",96,0)
 W $E(ECDN,1,15),?16,$E(ECAT,1,27),?44,$E(ECUN3,1,16)
"RTN","ECNTPCE",97,0)
 W ?61,$E($P(ECRS,";",3),1,198)
"RTN","ECNTPCE",98,0)
 S ECUN=0 F ECX=4:1 S ECUN=$O(ECPRV(ECUN)) Q:(ECUN="")&($P(ECRS,";",ECX)="")  D  I ECOUT Q
"RTN","ECNTPCE",99,0)
 .W !
"RTN","ECNTPCE",100,0)
 .I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECNTPCE",101,0)
 .I ECUN'="" W ?44,$E($P(ECPRV(ECUN),"^",2),1,16) K ECPRV(ECUN)
"RTN","ECNTPCE",102,0)
 .W ?61,$E($P(ECRS,";",ECX),1,19)
"RTN","ECNTPCE",103,0)
 W !!
"RTN","ECNTPCE",104,0)
 I ($Y+6)>IOSL D PAGE I ECOUT Q
"RTN","ECNTPCE",105,0)
 Q
"RTN","ECNTPCE",106,0)
PROV ;Set provider 1-3 in variables
"RTN","ECNTPCE",107,0)
 M ECPRV=^TMP("ECNTPCE",$J,ECDTE,ECL,ECD,ECDFN,ECNT,"PRV")
"RTN","ECNTPCE",108,0)
 S ECUN=0,ECUN1="UNKNOWN",(ECUN2,ECUN3)=""
"RTN","ECNTPCE",109,0)
 F I=1:1:3 S ECUN=$O(ECPRV(ECUN)) Q:'ECUN  D
"RTN","ECNTPCE",110,0)
 .S @("ECUN"_I)=$P(ECPRV(ECUN),"^",2) K ECPRV(ECUN)
"RTN","ECNTPCE",111,0)
 Q
"RTN","ECOSSUM")
0^6^B61610844^B65789298
"RTN","ECOSSUM",1,0)
ECOSSUM ;BIR/DMA,RHK,JPW-Ordering Section Summary ;27 Mar 96
"RTN","ECOSSUM",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,18,47,72**;8 May 96
"RTN","ECOSSUM",3,0)
EN ;entry point from menu option
"RTN","ECOSSUM",4,0)
 W !
"RTN","ECOSSUM",5,0)
 K DIC S DIC=723,DIC(0)="AQEMZ",DIC("A")="Select Ordering Section: " D ^DIC K DIC
"RTN","ECOSSUM",6,0)
 I Y<0 G EXIT
"RTN","ECOSSUM",7,0)
 S ECOS=+Y,ECOSN=$P(Y,"^",2)
"RTN","ECOSSUM",8,0)
 D RANGE
"RTN","ECOSSUM",9,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECOSSUM",10,0)
 W !
"RTN","ECOSSUM",11,0)
 S JJ=$$ASKLOC^ECRUTL
"RTN","ECOSSUM",12,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",13,0)
 W !
"RTN","ECOSSUM",14,0)
 S JJ=$$ASKDSS^ECRUTL
"RTN","ECOSSUM",15,0)
 I 'JJ G EXIT
"RTN","ECOSSUM",16,0)
 W !
"RTN","ECOSSUM",17,0)
 D DEVICE
"RTN","ECOSSUM",18,0)
 I POP G EXIT
"RTN","ECOSSUM",19,0)
 I $G(ZTSK) G EXIT
"RTN","ECOSSUM",20,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECOSSUM",21,0)
 D START
"RTN","ECOSSUM",22,0)
 D HOME^%ZIS
"RTN","ECOSSUM",23,0)
 G EXIT
"RTN","ECOSSUM",24,0)
 Q
"RTN","ECOSSUM",25,0)
 ;
"RTN","ECOSSUM",26,0)
START ;queued entry point or continuation
"RTN","ECOSSUM",27,0)
 D PROCESS
"RTN","ECOSSUM",28,0)
 U IO D PRINT
"RTN","ECOSSUM",29,0)
 I $D(ECGUI) D EXIT Q
"RTN","ECOSSUM",30,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECOSSUM",31,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECOSSUM",32,0)
 Q
"RTN","ECOSSUM",33,0)
 ;
"RTN","ECOSSUM",34,0)
RANGE ;get any date range
"RTN","ECOSSUM",35,0)
 N ECSTDT,ECENDDT
"RTN","ECOSSUM",36,0)
 W !!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECOSSUM",37,0)
 W !,?5,"Ordering Section report.",!
"RTN","ECOSSUM",38,0)
 S (ECSD,ECED)=0
"RTN","ECOSSUM",39,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",40,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECOSSUM",41,0)
 .S ECSD=ECSTDT
"RTN","ECOSSUM",42,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECOSSUM",43,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECOSSUM",44,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECOSSUM",45,0)
 .S ECED=ECENDDT
"RTN","ECOSSUM",46,0)
 .I ECED>(DT+1) D
"RTN","ECOSSUM",47,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECOSSUM",48,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECOSSUM",49,0)
 ..S ECED=0
"RTN","ECOSSUM",50,0)
 Q 
"RTN","ECOSSUM",51,0)
 ;
"RTN","ECOSSUM",52,0)
DEVICE ;select output device
"RTN","ECOSSUM",53,0)
 W !,"This report is formatted for 132 column output.",!
"RTN","ECOSSUM",54,0)
 K IOP S %ZIS="QM" D ^%ZIS
"RTN","ECOSSUM",55,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",56,0)
 I $D(IO("Q")) D
"RTN","ECOSSUM",57,0)
 .S ZTRTN="START^ECOSSUM",ZTDESC="EC Ordering Section Summary"
"RTN","ECOSSUM",58,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECOS")="",ZTSAVE("ECOSN")=""
"RTN","ECOSSUM",59,0)
 .S ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")=""
"RTN","ECOSSUM",60,0)
 .D ^%ZTLOAD
"RTN","ECOSSUM",61,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECOSSUM",62,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECOSSUM",63,0)
 Q
"RTN","ECOSSUM",64,0)
 ;
"RTN","ECOSSUM",65,0)
PROCESS ;get data to print
"RTN","ECOSSUM",66,0)
 N EC,ECD,ECDA,ECPA,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA,ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,EC725
"RTN","ECOSSUM",67,0)
 N NLOC,NUNIT,JJ,ECPXD
"RTN","ECOSSUM",68,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",69,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECOSSUM",70,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",71,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECOSSUM",72,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",73,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECOSSUM",74,0)
 S ECD=ECSD
"RTN","ECOSSUM",75,0)
 F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECOSSUM",76,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0)) I $P(EC,"^",12)=ECOS D
"RTN","ECOSSUM",77,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECOSSUM",78,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECOSSUM",79,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECOSSUM",80,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECOSSUM",81,0)
 ..S ECCAT=+$P(EC,U,8)
"RTN","ECOSSUM",82,0)
 ..S ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECOSSUM",83,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECOSSUM",84,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECOSSUM",85,0)
 ..I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECOSSUM",86,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECOSSUM",87,0)
 ..I ECCPT'="" D
"RTN","ECOSSUM",88,0)
 ...S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(EC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECOSSUM",89,0)
 ..I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECOSSUM",90,0)
 ..I ECFILE=725 D
"RTN","ECOSSUM",91,0)
 ...S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECOSSUM",92,0)
 ..S ECPN=$E(ECPN,1,37)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")_"~"_ECCPT
"RTN","ECOSSUM",93,0)
 ..;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECOSSUM",94,0)
 ..S ECMODF=0 I $O(^ECH(ECDA,"MOD",0))'="" D
"RTN","ECOSSUM",95,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"E",.ECMOD)
"RTN","ECOSSUM",96,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECOSSUM",97,0)
 ..S ECPATN=$P(ECPA,"^",1),ECSS=$P(ECPA,"^",9)
"RTN","ECOSSUM",98,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,10) S:ECSS="" ECSSN="UNKN"
"RTN","ECOSSUM",99,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECOSSUM",100,0)
 ..S ECV=+$P(EC,"^",10)
"RTN","ECOSSUM",101,0)
 ..K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(ECDA,.ECPRV) I 'ECPRV D  K ECPRV
"RTN","ECOSSUM",102,0)
 ...M ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"PRV")=ECPRV
"RTN","ECOSSUM",103,0)
 ..S ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)=ECSSN_"^"_ECPN_"^"_ECV
"RTN","ECOSSUM",104,0)
 ..I ECMODF D
"RTN","ECOSSUM",105,0)
 ...M ^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")=ECMOD
"RTN","ECOSSUM",106,0)
 Q
"RTN","ECOSSUM",107,0)
 ;
"RTN","ECOSSUM",108,0)
PRINT ;output report
"RTN","ECOSSUM",109,0)
 N ECDA,ECLOCA,ECUNIT,ECPATN,ECSSN,ECPN,ECV
"RTN","ECOSSUM",110,0)
 N PAGE,QFLAG,DASH,DASH2,PRNTDT,JJ,SS,ALOC,AUNIT,LOC,UNNAME,UNIT,DATA,PTNAME,PROV,PROVN,V,X,Y
"RTN","ECOSSUM",111,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",130)="",$P(DASH2,"-",64)=""
"RTN","ECOSSUM",112,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD=Y S Y=$P(ECED,".",1) D DD^%DT S ECED=Y
"RTN","ECOSSUM",113,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECOSSUM",114,0)
 S ECV("L")=0,ECV("O")=0,ECV("P")=0,ECV("U")=0
"RTN","ECOSSUM",115,0)
 ;if no data exists then print the header and quit
"RTN","ECOSSUM",116,0)
 I '$D(^TMP("ECOS",$J)) D  Q
"RTN","ECOSSUM",117,0)
 .S LOC="" D HEAD
"RTN","ECOSSUM",118,0)
 .W !!,?26,"No data for this Ordering Section for the date range specified.",!!
"RTN","ECOSSUM",119,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECOSSUM",120,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",121,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",122,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECOSSUM",123,0)
 ;put locations and units in alpha ordered array
"RTN","ECOSSUM",124,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",125,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECOSSUM",126,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECOSSUM",127,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECOSSUM",128,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECOSSUM",129,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC),ECV("L")=0 D  Q:QFLAG
"RTN","ECOSSUM",130,0)
 .D HEAD Q:QFLAG  ;always start a new location at top of page
"RTN","ECOSSUM",131,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT),ECV("U")=0 D  Q:QFLAG
"RTN","ECOSSUM",132,0)
 ..I '$D(^TMP("ECOS",$J,ECLOCA,ECUNIT)) Q
"RTN","ECOSSUM",133,0)
 ..S UNNAME=$E(UNIT,1,20)
"RTN","ECOSSUM",134,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLAG  W !!,UNNAME
"RTN","ECOSSUM",135,0)
 ..S ECPATN="" F  S ECPATN=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN)) Q:ECPATN=""  S ECV("P")=0 D  Q:QFLAG
"RTN","ECOSSUM",136,0)
 ...S PTNAME=$P(ECPATN,"^",1),PTNAME=$E(PTNAME,1,22),ECSSN=$P(ECPATN,"^",2)
"RTN","ECOSSUM",137,0)
 ...W ?24,PTNAME,?48,ECSSN
"RTN","ECOSSUM",138,0)
 ...S ECDA="" F  S ECDA=$O(^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA)) Q:ECDA=""  S DATA=^(ECDA) D  Q:QFLAG
"RTN","ECOSSUM",139,0)
 ....S ECPN=$P(DATA,"^",2),ECPN=$J($P(ECPN,"~",2)_" ",6)_$P(ECPN,"~")
"RTN","ECOSSUM",140,0)
 ....S ECPN=$E(ECPN,1,41),ECV=$P(DATA,"^",3),ECV=ECV\1 D
"RTN","ECOSSUM",141,0)
 .....F V="L","O","P","U" S ECV(V)=ECV(V)+ECV
"RTN","ECOSSUM",142,0)
 .....S:+ECV>9999 ECV="9999+" S ECV=$$RJ^XLFSTR(ECV,5," ") ;unusually high individual volume figure
"RTN","ECOSSUM",143,0)
 ....K PROV M PROV=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"PRV")
"RTN","ECOSSUM",144,0)
 ....K ECMOD M ECMOD=^TMP("ECOS",$J,ECLOCA,ECUNIT,ECPATN,ECDA,"MOD")
"RTN","ECOSSUM",145,0)
 ....W ?54,ECPN,?96,ECV,?105,$E($P($G(PROV(1)),"^",2),1,24) K PROV(1)
"RTN","ECOSSUM",146,0)
 ....D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",147,0)
 ....;ALB/JAM - write cpt procedure modifiers on same line with providers
"RTN","ECOSSUM",148,0)
 ....S MOD=0,PROVN=1 F  S MOD=$O(ECMOD(MOD)),PROVN=$O(PROV(PROVN)) Q:(MOD="")&(PROVN="")  D  I QFLAG Q
"RTN","ECOSSUM",149,0)
 .....I ($Y+3>IOSL) D HEAD Q:QFLAG  W !?54,ECPN
"RTN","ECOSSUM",150,0)
 .....W !
"RTN","ECOSSUM",151,0)
 .....I MOD'="" W ?58,"- ",MOD," ",$E($P(ECMOD(MOD),U,3),1,36) K ECMOD(MOD)
"RTN","ECOSSUM",152,0)
 .....I PROVN'="" W ?105,$E($P($G(PROV(PROVN)),"^",2),1,24) K PROV(PROVN)
"RTN","ECOSSUM",153,0)
 ....W ! ;start a new line
"RTN","ECOSSUM",154,0)
 ...;write subtotal for patient
"RTN","ECOSSUM",155,0)
 ...Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",156,0)
 ...W ?54,DASH2,!
"RTN","ECOSSUM",157,0)
 ...W ?24,"Subtotal for "_$P(ECPATN,"^",1)_":",?96,$$RJ^XLFSTR(ECV("P"),5," "),!!
"RTN","ECOSSUM",158,0)
 ..;write total for unit
"RTN","ECOSSUM",159,0)
 ..Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",160,0)
 ..W !,"Subtotal for DSS Unit "_UNIT_":",?95,$$RJ^XLFSTR(ECV("U"),6," "),!
"RTN","ECOSSUM",161,0)
 .;write the total for the location
"RTN","ECOSSUM",162,0)
 .Q:QFLAG  D:($Y+3>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",163,0)
 .W !!,"Total for Location "_LOC_":",?95,$$RJ^XLFSTR(ECV("L"),6," "),!
"RTN","ECOSSUM",164,0)
 ;write the ordering section grandtotal
"RTN","ECOSSUM",165,0)
 Q:QFLAG  D:($Y+5>IOSL) HEAD Q:QFLAG
"RTN","ECOSSUM",166,0)
 W !!!,"Grand Total for Ordering Section "_ECOSN_":",?95,$$RJ^XLFSTR(ECV("O"),6," "),!
"RTN","ECOSSUM",167,0)
 ;all done
"RTN","ECOSSUM",168,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECOSSUM",169,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",170,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECOSSUM",171,0)
 Q
"RTN","ECOSSUM",172,0)
HEAD ;header
"RTN","ECOSSUM",173,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECOSSUM",174,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECOSSUM",175,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECOSSUM",176,0)
 S PAGE=PAGE+1
"RTN","ECOSSUM",177,0)
 W !,?26,"Event Capture Ordering Section Summary for ",ECOSN,?105,"Page: ",PAGE
"RTN","ECOSSUM",178,0)
 W !,?26,"for the Date Range ",$$FMTE^XLFDT(ECSD)," to ",$$FMTE^XLFDT(ECED),?102,"Printed: "_PRNTDT
"RTN","ECOSSUM",179,0)
 W !,?26,"Location: ",LOC,!
"RTN","ECOSSUM",180,0)
 W !,"DSS Unit",?24,"Patient",?48,"SSN",?54,"Procedure",?98,"Vol.",?105,"Provider(s)"
"RTN","ECOSSUM",181,0)
 W !,DASH,!
"RTN","ECOSSUM",182,0)
 Q
"RTN","ECOSSUM",183,0)
 ;
"RTN","ECOSSUM",184,0)
EXIT ;common exit point
"RTN","ECOSSUM",185,0)
 D ^ECKILL
"RTN","ECOSSUM",186,0)
 D:'$D(ECGUI) ^%ZISC
"RTN","ECOSSUM",187,0)
 K ^TMP("ECOS",$J)
"RTN","ECOSSUM",188,0)
 K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECOS,ECOSN,ECSD,ECED,ECLOOP,ECLOC,ECDSSU
"RTN","ECOSSUM",189,0)
 Q
"RTN","ECPAT")
0^5^B30279346^B30137327
"RTN","ECPAT",1,0)
ECPAT ;BIR/MAM,JPW-Event Capture Patient Summary ;26 Feb 96
"RTN","ECPAT",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47,72**;8 May 96
"RTN","ECPAT",3,0)
SET ; set ^TMP($J,"ECPAT")
"RTN","ECPAT",4,0)
 N ECPXD,EC725
"RTN","ECPAT",5,0)
 I $Y+8>IOSL D PAGE I ECOUT Q
"RTN","ECPAT",6,0)
 S ECEC=$G(^ECH(ECFN,0))
"RTN","ECPAT",7,0)
 S ECL=+$P(ECEC,"^",4),ECC=+$P(ECEC,"^",8),ECP=$P(ECEC,"^",9),ECD=+$P(ECEC,"^",7),ECV=+$P(ECEC,"^",10)
"RTN","ECPAT",8,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPAT",9,0)
 Q:ECP']""
"RTN","ECPAT",10,0)
 ;set default med spec and ord sect to administrative if blank
"RTN","ECPAT",11,0)
 S ECM=$S($P(ECEC,"^",6)]"":+$P(ECEC,"^",6),1:108),ECO=$S($P(ECEC,"^",12)]"":+$P(ECEC,"^",12),1:108)
"RTN","ECPAT",12,0)
 S ECMN=$S($P($G(^ECC(723,ECM,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",13,0)
 S ECON=$S($P($G(^ECC(723,ECO,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",14,0)
 S ECS=+$P(ECEC,"^",5),ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",15,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPAT",16,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,""))
"RTN","ECPAT",17,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPAT",18,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,1:725)
"RTN","ECPAT",19,0)
 S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPAT",20,0)
 I ECCPT'="" D
"RTN","ECPAT",21,0)
 . S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"^",3)),ECCPT=$P(ECPXD,"^",2)
"RTN","ECPAT",22,0)
 . I ECCPT'="" S ECCPT=ECCPT_" "
"RTN","ECPAT",23,0)
 I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPAT",24,0)
 I ECFILE=725 D
"RTN","ECPAT",25,0)
 .S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPAT",26,0)
 S ECPN=$J(ECCPT,6)_$E(ECPN,1,38)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPAT",27,0)
 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",28,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPAT",29,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPAT",30,0)
 S ECDT=$$FMTE^XLFDT(DATE)
"RTN","ECPAT",31,0)
 ;
"RTN","ECPAT",32,0)
 ;ALB/ESD - Add Procedure Reason to report
"RTN","ECPAT",33,0)
 N ECLNK
"RTN","ECPAT",34,0)
 S ECPRSN=""
"RTN","ECPAT",35,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPAT",36,0)
 I +ECLNK>0 DO
"RTN","ECPAT",37,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPAT",38,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPAT",39,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPAT",40,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPAT",41,0)
 ;
"RTN","ECPAT",42,0)
 ;Get Procedure CPT modifiers
"RTN","ECPAT",43,0)
 S ECMODF=0 K ECMOD
"RTN","ECPAT",44,0)
 I $O(^ECH(ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECFN,"E",.ECMOD)
"RTN","ECPAT",45,0)
 I $D(ECY) DO
"RTN","ECPAT",46,0)
 .W !!,ECDT,?25,ECCN,?80,ECPN_" ("_ECV_")",!
"RTN","ECPAT",47,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",48,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",49,0)
 ...D:$Y+2>IOSL PAGE Q:ECOUT  W ?84,"- ",MD," ",$P(ECMOD(MD),U,3),!
"RTN","ECPAT",50,0)
 .W $E(ECLN,1,22),?25,ECSN,?80,ECMN,!
"RTN","ECPAT",51,0)
 .W:$D(ECRY) ECPRSN
"RTN","ECPAT",52,0)
 .W ?25,ECON,?80,ECUN
"RTN","ECPAT",53,0)
 I $D(ECN) DO
"RTN","ECPAT",54,0)
 .W !!,ECDT,?25,ECPN_" ("_ECV_")",!
"RTN","ECPAT",55,0)
 .I ECMODF S MD="" D  K MD I ECOUT Q
"RTN","ECPAT",56,0)
 ..F  S MD=$O(ECMOD(MD)) Q:MD=""  D  I ECOUT Q
"RTN","ECPAT",57,0)
 ...D:$Y+2>IOSL PAGE Q:ECOUT  W ?29,"- ",MD," ",$P(ECMOD(MD),U,3),!
"RTN","ECPAT",58,0)
 .W $E(ECLN,1,22),?25,ECSN,?80,ECMN,!
"RTN","ECPAT",59,0)
 .W:$D(ECRY) ECPRSN
"RTN","ECPAT",60,0)
 .W ?25,ECON,?80,ECUN
"RTN","ECPAT",61,0)
 Q
"RTN","ECPAT",62,0)
PAT ; entry point
"RTN","ECPAT",63,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPAT",64,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPAT",65,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPAT",66,0)
 D REASON^ECRUTL ;* Prompt to report Procedure Reasons
"RTN","ECPAT",67,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPAT",68,0)
 I $D(IO("Q")) S:$D(ECRY) ZTSAVE("ECRY")=""
"RTN","ECPAT",69,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="EVENT CAPTURE PATIENT SUMMARY",ZTRTN="SUM^ECPAT",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPAT",70,0)
SUM ; entry when queued
"RTN","ECPAT",71,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPAT",72,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPAT",73,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D BRO D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",74,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F I=0:0 S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F I=0:0 S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPAT",75,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPAT",76,0)
 W ! I $D(ECOUT),'ECOUT D
"RTN","ECPAT",77,0)
 . I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPAT",78,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPAT",79,0)
 Q
"RTN","ECPAT",80,0)
HDR ; print heading
"RTN","ECPAT",81,0)
 ;
"RTN","ECPAT",82,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",83,0)
 W:$Y @IOF
"RTN","ECPAT",84,0)
 W !,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?32,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?32,"Run Date : ",ECRDT
"RTN","ECPAT",85,0)
 W !,"PROCEDURE DATE/TIME",?25,"CATEGORY",?80,"PROCEDURE",!,?80,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?25,"SERVICE",?80,"SECTION"
"RTN","ECPAT",86,0)
 W !
"RTN","ECPAT",87,0)
 W:$D(ECRY) "PROCEDURE REASON"
"RTN","ECPAT",88,0)
 W ?25,"ORDERING SECTION",?80,"PROVIDER",! F LINE=1:1:132 W "-"
"RTN","ECPAT",89,0)
 W !
"RTN","ECPAT",90,0)
 Q
"RTN","ECPAT",91,0)
PAGE ; end of page
"RTN","ECPAT",92,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPAT",93,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPAT",94,0)
 D:$D(ECY) HDR D:$D(ECN) HDR1
"RTN","ECPAT",95,0)
 Q
"RTN","ECPAT",96,0)
HDR1 ; print heading without categories
"RTN","ECPAT",97,0)
 ;
"RTN","ECPAT",98,0)
 ;ALB/ESD - Add Run Date to header
"RTN","ECPAT",99,0)
 W @IOF,!!,?32,"EVENT CAPTURE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!,?36,"Run Date : ",ECRDT
"RTN","ECPAT",100,0)
 ;
"RTN","ECPAT",101,0)
 ;ALB/ESD - Add Procedure Reason to column headings
"RTN","ECPAT",102,0)
 W !!,"PROCEDURE DATE/TIME",?25,"PROCEDURE(VOLUME)",!,?25,"PROCEDURE (CPT) MODIFIER",!,"LOCATION",?25,"SERVICE",?80,"SECTION"
"RTN","ECPAT",103,0)
 W !
"RTN","ECPAT",104,0)
 W:$D(ECRY) "PROCEDURE REASON"
"RTN","ECPAT",105,0)
 W ?25,"ORDERING SECTION",?80,"PROVIDER",! F LINE=1:1:132 W "-"
"RTN","ECPAT",106,0)
 W !
"RTN","ECPAT",107,0)
 Q
"RTN","ECPAT",108,0)
BRO ;ask prt with category or without
"RTN","ECPAT",109,0)
 S ECN=1
"RTN","ECPAT",110,0)
 Q
"RTN","ECPCER")
0^29^B18846503^B18605237
"RTN","ECPCER",1,0)
ECPCER ;BIR/JPW-Event Capture PCE Data Summary ;21 Jan 97
"RTN","ECPCER",2,0)
 ;;2.0; EVENT CAPTURE ;**4,18,23,47,72**;8 May 96
"RTN","ECPCER",3,0)
EN ; entry point
"RTN","ECPCER",4,0)
 K DIC S DIC=2,DIC(0)="QEAMZ",DIC("A")="Select Patient: " D ^DIC K DIC G:Y<0 END S ECDFN=+Y,ECPAT=$P(Y,"^",2)
"RTN","ECPCER",5,0)
DATE K %DT S %DT="AEX",%DT("A")="Start with Date:  " D ^%DT G:Y<0 END S ECSD=Y,%DT("A")="End with Date:  " D ^%DT G:Y<0 END S ECED=Y I ECED<ECSD W !,"End date must be after start date",! G DATE
"RTN","ECPCER",6,0)
 S ECDATE=$$FMTE^XLFDT(ECSD)_"^"_$$FMTE^XLFDT(ECED),ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECPCER",7,0)
 K IOP,%ZIS,POP,IO("Q") S %ZIS("A")="Select Device: ",%ZIS="QM" W !!,"This report is designed to use a 132 column format.",! D ^%ZIS G:POP END
"RTN","ECPCER",8,0)
 I $D(IO("Q")) K IO("Q") S (ZTSAVE("ECDFN"),ZTSAVE("ECPAT"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECSD"))="",ZTDESC="ECS/PCE PATIENT SUMMARY",ZTRTN="SUM^ECPCER",ZTIO=ION D ^%ZTLOAD,HOME^%ZIS G END
"RTN","ECPCER",9,0)
SUM ; entry when queued
"RTN","ECPCER",10,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPCER",11,0)
 U IO S DATE=$O(^ECH("APAT",ECDFN,ECSD)) I 'DATE W:$Y @IOF W !!,"No Data for "_ECPAT_" during the time selected." G END
"RTN","ECPCER",12,0)
 S ECFN=+$O(^ECH("APAT",ECDFN,DATE,0)),ECL=+$P(^ECH(ECFN,0),"^",4) D HDR1
"RTN","ECPCER",13,0)
 S DATE=ECSD,(ECFN,ECOUT)=0 F  S DATE=$O(^ECH("APAT",ECDFN,DATE)) Q:'DATE!(DATE>ECED)!(ECOUT)  F  S ECFN=$O(^ECH("APAT",ECDFN,DATE,ECFN)) Q:'ECFN!(ECOUT)  D SET
"RTN","ECPCER",14,0)
END I $D(ECGUI) D ^ECKILL Q
"RTN","ECPCER",15,0)
 W ! I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue  " R X:DTIME
"RTN","ECPCER",16,0)
 W @IOF D ^%ZISC D ^ECKILL S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECPCER",17,0)
 Q
"RTN","ECPCER",18,0)
PAGE ; end of page
"RTN","ECPCER",19,0)
 S X="" I $E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit   " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPCER",20,0)
 I X["?" W !!,"If you want to continue with this report, press <RET>.  Entering an ^ will",!,"exit you from this option." G PAGE
"RTN","ECPCER",21,0)
 D HDR1
"RTN","ECPCER",22,0)
 Q
"RTN","ECPCER",23,0)
HDR1 ; print heading without categories
"RTN","ECPCER",24,0)
 W:$Y @IOF
"RTN","ECPCER",25,0)
 ;W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"CPT CODE (DIAGNOSIS)",!?78,"PROCEDURE (CPT) MODIFIER"
"RTN","ECPCER",26,0)
 W !,?31,"ECS/PCE PATIENT SUMMARY FOR "_ECPAT,!,?36,"FROM "_$P(ECDATE,"^")_"   TO "_$P(ECDATE,"^",2),!!,"PROCEDURE DATE/TIME",?25,"PROCEDURE NAME SENT (VOLUME)",?78,"PROVIDER"
"RTN","ECPCER",27,0)
 ;W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"PROVIDER",!
"RTN","ECPCER",28,0)
 W !,"LOCATION",?25,"CLINIC (DSS ID)",?78,"CPT CODE"
"RTN","ECPCER",29,0)
 W !,?25,"DIAGNOSIS",?78,"PROCEDURE (CPT) MODIFIER",!
"RTN","ECPCER",30,0)
 F LINE=1:1:132 W "-"
"RTN","ECPCER",31,0)
 W !
"RTN","ECPCER",32,0)
 Q
"RTN","ECPCER",33,0)
SET ; set data
"RTN","ECPCER",34,0)
 I $Y+7>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",35,0)
 Q:'$D(^ECH(ECFN,"PCE"))  S ECEC=$G(^ECH(ECFN,"PCE"))
"RTN","ECPCER",36,0)
 I '$P($G(^ECH(ECFN,"P")),"^",7) Q
"RTN","ECPCER",37,0)
 S ECL=+$P(ECEC,"~",4),ECCPT=+$P(ECEC,"~",10),ECD=+$P(ECEC,"~",3),ECV=+$P(ECEC,"~",9),ECDX=+$P(ECEC,"~",11),ECID=$P(ECEC,"~",5),ECDT=+$P(ECEC,"~")
"RTN","ECPCER",38,0)
 S ECDN=$S($P($G(^SC(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",39,0)
 S ECPS=$$CPT^ICPTCOD(ECCPT,$P(ECEC,"~")),ECCPT=$S(+ECPS>0:$P(ECPS,"^",2),1:""),ECPS=$S(+ECPS>0:$P(ECPS,"^",2)_" "_$P(ECPS,"^",3),1:"CPT NAME UNKNOWN")
"RTN","ECPCER",40,0)
 S ECLN=$S($P($G(^DIC(4,ECL,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPCER",41,0)
 S ECID=$S($P($G(^DIC(40.7,ECID,0)),"^",2)]"":$P(^(0),"^",2),1:"DSS ID UNKNOWN")
"RTN","ECPCER",42,0)
 S ECDXN=$P($$ICDDX^ICDCODE(ECDX,$P(ECEC,"~")),U,2) S:ECDXN="" ECDXN="UNKNOWN"
"RTN","ECPCER",43,0)
 S ECPN=$S($P(ECEC,"~",16)]"":$P(ECEC,"~",16),1:ECPS)
"RTN","ECPCER",44,0)
 S ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPCER",45,0)
 S ECUN=$S(ECUN'="UNKNOWN":$P(ECUN,",",2)_" "_$P(ECUN,","),1:"UNKNOWN")
"RTN","ECPCER",46,0)
 S ECDT=$$FMTE^XLFDT(ECDT)
"RTN","ECPCER",47,0)
 ;get secondary diagnosis codes, ALB/JAM
"RTN","ECPCER",48,0)
 S DXS=0,ECI=2 F  S DXS=$O(^ECH(ECFN,"DX",DXS)) Q:'DXS  D
"RTN","ECPCER",49,0)
 . S DXSIEN=+$G(^ECH(ECFN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCER",50,0)
 . S ECDXSN=$P($$ICDDX^ICDCODE(DXSIEN,$P(ECEC,"~")),"^",2) I ECDXSN="" Q
"RTN","ECPCER",51,0)
 . I $L($G(ECDXS(ECI)))+$L(ECDXSN)>52 S ECI=ECI+1
"RTN","ECPCER",52,0)
 . I $G(ECDXS(ECI))="" S ECDXS(ECI)="Secondary Dx: "
"RTN","ECPCER",53,0)
 . S ECDXS(ECI)=ECDXS(ECI)_$S($L(ECDXS(ECI))=14:"",1:", ")_ECDXSN
"RTN","ECPCER",54,0)
 S ECMOD="" I $D(^ECH(ECFN,"PCE1")) S ECMOD=^("PCE1")
"RTN","ECPCER",55,0)
PRT W !,ECDT,?25,ECPN_" ("_ECV_")",?78,ECUN,!
"RTN","ECPCER",56,0)
 W $E(ECLN,1,22),?25,ECDN_" ("_ECID_")",?78,ECCPT,!
"RTN","ECPCER",57,0)
 W ?25,"Primary DX: ",ECDXN
"RTN","ECPCER",58,0)
 ;ALB/JAM print CPT modifiers and secondary diagnosis code
"RTN","ECPCER",59,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D  I ECOUT Q
"RTN","ECPCER",60,0)
 . S MODESC=$$MODP^ICPTMOD(ECCPT,MOD,"E",$P(ECEC,"~")) I +MODESC'>0 Q
"RTN","ECPCER",61,0)
 . W ?25,$S(I>1:$G(ECDXS(I)),1:""),?79,"- ",MOD," ",$P(MODESC,"^",2),!
"RTN","ECPCER",62,0)
 . K ECDXS(I) I ($Y+3)>IOSL D PAGE I ECOUT Q
"RTN","ECPCER",63,0)
 W:ECMOD="" ! S DXS=""
"RTN","ECPCER",64,0)
 F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W ?25,ECDXS(DXS),!
"RTN","ECPCER",65,0)
 K I,MOD,MODESC,ECI,DXS,DXSIEN,ECDXS,ECDXN,ECDXSN
"RTN","ECPCER",66,0)
 Q
"RTN","ECPCEU")
0^24^B21055303^B18844356
"RTN","ECPCEU",1,0)
ECPCEU ;BIR/JPW-ECS to PCE Utilities ;7 Jan 97
"RTN","ECPCEU",2,0)
 ;;2.0; EVENT CAPTURE ;**4,5,7,10,17,18,23,42,54,73,72**;8 May 96
"RTN","ECPCEU",3,0)
CLIN ;check for active inactive clinic
"RTN","ECPCEU",4,0)
 N ECCLDT
"RTN","ECPCEU",5,0)
 I $L($G(ECDT))>6,+ECDT=ECDT S ECCLDT=ECDT
"RTN","ECPCEU",6,0)
 I '$G(ECCLDT) S ECCLDT=DT
"RTN","ECPCEU",7,0)
 K ECPCL
"RTN","ECPCEU",8,0)
 I '$D(EC4) S ECPCL=0 Q
"RTN","ECPCEU",9,0)
 I 'EC4 S ECPCL=0 Q
"RTN","ECPCEU",10,0)
 I '$D(^SC(+EC4,"I")) S ECPCL=1 Q
"RTN","ECPCEU",11,0)
 S ECPCID=+$P(^SC(+EC4,"I"),"^"),ECPCRD=+$P(^("I"),"^",2)
"RTN","ECPCEU",12,0)
 I ECPCID,ECPCID'>ECCLDT I 'ECPCRD!(ECPCRD>ECCLDT) S ECPCL=0 Q
"RTN","ECPCEU",13,0)
 I ECPCID,ECPCRD,ECPCRD'>ECCLDT S ECPCL=1 Q
"RTN","ECPCEU",14,0)
 I ECPCID,ECPCID>ECCLDT S ECPCL=1 Q
"RTN","ECPCEU",15,0)
 S ECPCL=1
"RTN","ECPCEU",16,0)
 K ECPCID,ECPCRD
"RTN","ECPCEU",17,0)
 Q
"RTN","ECPCEU",18,0)
NITE ;start nightly job
"RTN","ECPCEU",19,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",20,0)
 D NOW^%DTC S ECCKDT=+$E(%,1,12)
"RTN","ECPCEU",21,0)
 S ECPKG=$O(^DIC(9.4,"B","EVENT CAPTURE",0)),ECS="EVENT CAPTURE DATA"
"RTN","ECPCEU",22,0)
 S ECJJ=0 F  S ECJJ=$O(^ECH("AD",ECJJ)) Q:'ECJJ  S ECJJ1=0 F  S ECJJ1=$O(^ECH("AD",ECJJ,ECJJ1)) Q:'ECJJ1  I $D(^ECH(ECJJ1,"PCE")) D SET
"RTN","ECPCEU",23,0)
 K DA,DIE,DR,EC4,EC725,ECAO,ECCPT,ECDT,ECDX,ECHL,ECID,ECIR,ECJJ,ECJJ1,ECL,ECNODE,ECPKG,ECPS,ECS,ECSC,ECV,ECVST,ECVV,ECZEC,ECMST,ECHNC,ECCV,ECDFAPT,CNT,ECPRVARY,ECPRV
"RTN","ECPCEU",24,0)
 K %,%H,%I,ECCKDT
"RTN","ECPCEU",25,0)
 K ^TMP("ECPXAPI",$J)
"RTN","ECPCEU",26,0)
 Q
"RTN","ECPCEU",27,0)
SET ;set variables
"RTN","ECPCEU",28,0)
 S ECNODE=^ECH(ECJJ1,"PCE"),ECDT=$P(ECNODE,"~"),ECPS=$P(ECNODE,"~",2),ECHL=$P(ECNODE,"~",3),ECL=$P(ECNODE,"~",4),ECID=$P(ECNODE,"~",5),ECV=$P(ECNODE,"~",9)
"RTN","ECPCEU",29,0)
 S ECCPT=$P(ECNODE,"~",10),ECDX=$P(ECNODE,"~",11),ECAO=$P(ECNODE,"~",12),ECIR=$P(ECNODE,"~",13),ECZEC=$P(ECNODE,"~",14),ECSC=$P(ECNODE,"~",15),EC725=$P(ECNODE,"~",16),ECELIG=$P(ECNODE,"~",17),ECMST=$P(ECNODE,"~",18)
"RTN","ECPCEU",30,0)
 S ECHNC=$P(ECNODE,"~",19),ECCV=$P(ECNODE,"~",20)
"RTN","ECPCEU",31,0)
 ; EC*2.0*73 next line added to get default appt type if defined
"RTN","ECPCEU",32,0)
 S ECDFAPT="" S:$D(^SC(ECHL,"AT")) ECDFAPT=+$G(^SC(ECHL,"AT"))
"RTN","ECPCEU",33,0)
TMP ;set ^TMP for PCE call
"RTN","ECPCEU",34,0)
ENC S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ENC D/T")=ECDT
"RTN","ECPCEU",35,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"PATIENT")=ECPS
"RTN","ECPCEU",36,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"HOS LOC")=ECHL
"RTN","ECPCEU",37,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"INSTITUTION")=ECL
"RTN","ECPCEU",38,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"APPT")=ECDFAPT  ; added EC*2.0*73
"RTN","ECPCEU",39,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"SC")=ECSC
"RTN","ECPCEU",40,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"AO")=ECAO
"RTN","ECPCEU",41,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"IR")=ECIR
"RTN","ECPCEU",42,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"EC")=ECZEC
"RTN","ECPCEU",43,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"MST")=ECMST
"RTN","ECPCEU",44,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"HNC")=ECHNC
"RTN","ECPCEU",45,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"CV")=ECCV
"RTN","ECPCEU",46,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"SERVICE CATEGORY")="X"
"RTN","ECPCEU",47,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ENCOUNTER TYPE")="A"
"RTN","ECPCEU",48,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"DSS ID")=ECID
"RTN","ECPCEU",49,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"CHECKOUT D/T")=ECCKDT
"RTN","ECPCEU",50,0)
 S ^TMP("ECPXAPI",$J,"ENCOUNTER",1,"ELIGIBILITY")=ECELIG
"RTN","ECPCEU",51,0)
PROV ;Set providers in ^TMP("ECPXAPI",$J,"PROVIDER",n,"NAME")=provider
"RTN","ECPCEU",52,0)
 K ECPRVARY S ECPRV=$$GETPRV^ECPRVMUT(ECJJ1,.ECPRVARY),ECI=0
"RTN","ECPCEU",53,0)
 ;set primary provider in ^TMP global
"RTN","ECPCEU",54,0)
 F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  I $P(ECPRVARY(ECI),U,3)="P" D  Q
"RTN","ECPCEU",55,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",1,"NAME")=$P(ECPRVARY(ECI),U)
"RTN","ECPCEU",56,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",1,"PRIMARY")=1
"RTN","ECPCEU",57,0)
 .S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"ENC PROVIDER")=$P(ECPRVARY(ECI),U)
"RTN","ECPCEU",58,0)
 .K ECPRVARY(ECI)
"RTN","ECPCEU",59,0)
 ;set secondary providers in ^TMP global
"RTN","ECPCEU",60,0)
 S ECI=0,CNT=2 F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  D
"RTN","ECPCEU",61,0)
 .S ^TMP("ECPXAPI",$J,"PROVIDER",CNT,"NAME")=$P(ECPRVARY(ECI),U),CNT=CNT+1
"RTN","ECPCEU",62,0)
 I $O(^ECH(ECJJ1,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECJJ1,"E",.ECMOD) D
"RTN","ECPCEU",63,0)
 . I ECMODF S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D 
"RTN","ECPCEU",64,0)
 . . S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",MOD)=""
"RTN","ECPCEU",65,0)
DX S ^TMP("ECPXAPI",$J,"DX/PL",1,"DIAGNOSIS")=ECDX
"RTN","ECPCEU",66,0)
 S ^TMP("ECPXAPI",$J,"DX/PL",1,"PRIMARY")=1
"RTN","ECPCEU",67,0)
 ;Set secondary diagnosis codes in ^TMP("ECPXAPI",$J,"DX/PL",1,"DIAGNOSIS",diagnosis
"RTN","ECPCEU",68,0)
 S DXS=0 F ECI=2:1 S DXS=$O(^ECH(ECJJ1,"DX",DXS)) Q:DXS=""  D
"RTN","ECPCEU",69,0)
 . S DXSIEN=$G(^ECH(ECJJ1,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECPCEU",70,0)
 . S ^TMP("ECPXAPI",$J,"DX/PL",ECI,"DIAGNOSIS")=DXSIEN
"RTN","ECPCEU",71,0)
PROC S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"EVENT D/T")=ECDT
"RTN","ECPCEU",72,0)
 S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"PROCEDURE")=ECCPT
"RTN","ECPCEU",73,0)
 S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"QTY")=ECV
"RTN","ECPCEU",74,0)
 S:EC725]"" ^TMP("ECPXAPI",$J,"PROCEDURE",1,"NARRATIVE")=EC725
"RTN","ECPCEU",75,0)
MOD ;Set modifiers in ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",modifier
"RTN","ECPCEU",76,0)
 I $O(^ECH(ECJJ1,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(ECJJ1,"E",.ECMOD) D
"RTN","ECPCEU",77,0)
 . I ECMODF S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D 
"RTN","ECPCEU",78,0)
 . . S ^TMP("ECPXAPI",$J,"PROCEDURE",1,"MODIFIERS",MOD)=""
"RTN","ECPCEU",79,0)
D2PCE S VALQUIET=1,ECVV=$$DATA2PCE^PXAPI("^TMP(""ECPXAPI"",$J)",ECPKG,ECS,.ECVST)
"RTN","ECPCEU",80,0)
 I ECVST K DA,DIE,DR S DA=ECJJ1,DIE=721,DR="25////1;31///@;28////"_ECVST_";32////"_ECCKDT D ^DIE K DA,DIE,DR
"RTN","ECPCEU",81,0)
 K ^TMP("ECPXAPI",$J),ECVST,VALQUIET,MOD,ECMODF,ECMOD,ECI,DXSIEN,DXS
"RTN","ECPCEU",82,0)
 K DA,D0,DIE,DR,EC725,ECAO,ECCPT,ECDT,ECDX,ECHL,ECID,ECIR,ECNODE,ECPS,ECSC,ECV,ECVV,ECZEC,ECELIG,ECMST,ECHNC,ECCV,CNT,ECPRVARY,ECPRV
"RTN","ECPCEU",83,0)
 Q
"RTN","ECPROV3")
0^9^B34020272^B33084201
"RTN","ECPROV3",1,0)
ECPROV3 ;BIR/MAM,JPW-Event Capture Provider Summary (cont'd) ;7 May 96
"RTN","ECPROV3",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,18,29,47,56,63,72**;8 May 96
"RTN","ECPROV3",3,0)
 ; This routine is used when printing the report for
"RTN","ECPROV3",4,0)
 ; all ACCESSIBLE DSS Units
"RTN","ECPROV3",5,0)
 ;JAM/3/7/03, This routine now combines ECPROV3, ECPROV4 and ECPROV5
"RTN","ECPROV3",6,0)
 ;
"RTN","ECPROV3",7,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECPROV3",8,0)
 I ECL D  D LOC,PRINT Q
"RTN","ECPROV3",9,0)
 .I ECPRV=1 D UNIT Q
"RTN","ECPROV3",10,0)
 .I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11) Q
"RTN","ECPROV3",11,0)
 S ECL=0 D
"RTN","ECPROV3",12,0)
 .F I=0:0 S ECL=$O(^ECH("ADT",ECL)) Q:'ECL  D
"RTN","ECPROV3",13,0)
 ..S ECLN=$P(^DIC(4,ECL,0),"^") I ECPRV D UNIT
"RTN","ECPROV3",14,0)
 ..I 'ECPRV S ECC=+$P(^ECD(ECD,0),U,11)
"RTN","ECPROV3",15,0)
 ..D LOC
"RTN","ECPROV3",16,0)
PRINT ;Changes below were made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",17,0)
 S (ECLN,ECPN)=0,ECCN=""
"RTN","ECPROV3",18,0)
 F I=0:0 S ECLN=$O(^TMP($J,ECLN)) Q:ECLN=""!(ECOUT)!(ECLN["^")  D
"RTN","ECPROV3",19,0)
 .I 'ECPRV D CATS Q
"RTN","ECPROV3",20,0)
 . S ECDN="" D NOUNIT F I=0:0 S ECDN=$O(^TMP($J,ECLN,ECDN)) Q:ECDN=""!(ECOUT)  D CATS
"RTN","ECPROV3",21,0)
 K ECPNAM
"RTN","ECPROV3",22,0)
 Q
"RTN","ECPROV3",23,0)
CATS ; continue looping
"RTN","ECPROV3",24,0)
 I $O(^TMP($J,ECLN,ECDN,""))']"" D PAGE W !!!,?12,"NO PROCEDURES" S ECPG=1 Q
"RTN","ECPROV3",25,0)
 D PAGE Q:ECOUT  S ECPG=1,ECUN=0 F I=0:0 S ECUN=$O(^TMP($J,ECLN,ECDN,ECUN)) Q:ECUN=""!(ECOUT)  S ECINZ="^"_$O(^(ECUN,0)) D:$Y+7>IOSL PAGE Q:ECOUT  D PRO
"RTN","ECPROV3",26,0)
 Q
"RTN","ECPROV3",27,0)
PRO I $Y+10>IOSL D PAGE I ECOUT Q
"RTN","ECPROV3",28,0)
 W !!,ECUN S ECCN=0 F I=0:0 S ECCN=$O(^TMP($J,ECINZ,ECCN)) D:ECCN="" TOTP Q:ECCN=""!(ECOUT)  D MORE
"RTN","ECPROV3",29,0)
 Q
"RTN","ECPROV3",30,0)
MORE ;
"RTN","ECPROV3",31,0)
 ;ALB/ESD - Loop through to get procedure reason and print
"RTN","ECPROV3",32,0)
 W !,?3,ECCN S ECPN=0,(ECPRSN,ECPI)=""
"RTN","ECPROV3",33,0)
 F  S ECPN=$O(^TMP($J,ECINZ,ECCN,ECPN)) Q:ECPN=""!(ECOUT)  S ECUSER=1 D:$Y+7>IOSL PAGE Q:ECOUT  K ECUSER F  S ECPRSN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) Q:ECPRSN=""!(ECOUT)  DO
"RTN","ECPROV3",34,0)
 .S ECCPT=$S($P(ECPN,"~",3)="I":$P(ECPN,"~",2),1:$P($G(^EC(725,$P(ECPN,"~",2),0)),"^",5))
"RTN","ECPROV3",35,0)
 .I ECCPT'="" D
"RTN","ECPROV3",36,0)
 ..;Changes made by VMP to correct NOIS ATG-1003-32545
"RTN","ECPROV3",37,0)
 ..;use end date/date range to get CPT description; CTD project.
"RTN","ECPROV3",38,0)
 ..S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECPROV3",39,0)
 .S EC725="" I $P(ECPN,"~",3)="E" S EC725=$G(^EC(725,+$P(ECPN,"~",2),0))
"RTN","ECPROV3",40,0)
 .S ECPNAM=$S($P(ECPN,"~",3)="E":$P(EC725,"^",2)_" "_$P(EC725,"^"),$P(ECPN,"~",3)="I":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECPROV3",41,0)
 .S ECPSY=$P(ECPN,"~",4),ECPSYN=""
"RTN","ECPROV3",42,0)
 .I ECPSY'="" S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPROV3",43,0)
 .W !,?6,$J(ECCPT_" ",6),$E(ECPNAM,1,40)
"RTN","ECPROV3",44,0)
 .W:ECPSYN'="" " [",$E(ECPSYN,1,25),"]"
"RTN","ECPROV3",45,0)
 .W:$D(ECRY) ?70,ECPRSN
"RTN","ECPROV3",46,0)
 .W ?105,$J(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN),6)
"RTN","ECPROV3",47,0)
 .;print CPT procedure modifiers
"RTN","ECPROV3",48,0)
 .S IEN=""
"RTN","ECPROV3",49,0)
 .F  S IEN=$O(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPROV3",50,0)
 ..;used end date to get description,CTD project
"RTN","ECPROV3",51,0)
 ..S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPROV3",52,0)
 ..S MOD=$P(MODI,"^",2) I MOD="" K MODI Q
"RTN","ECPROV3",53,0)
 ..S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPROV3",54,0)
 ..S MODAMT=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",IEN)
"RTN","ECPROV3",55,0)
 ..W !?10,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPROV3",56,0)
 ..I ($Y+3)>IOSL D PAGE
"RTN","ECPROV3",57,0)
 .K MODESC,MOD,IEN,MODAMT,MODI,EC725
"RTN","ECPROV3",58,0)
 Q
"RTN","ECPROV3",59,0)
LOC S (ECDFN,ECOUT,^TMP($J,ECLN))=0
"RTN","ECPROV3",60,0)
 F I=0:0 S ECDFN=$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  D
"RTN","ECPROV3",61,0)
 .I ECPRV D GECD Q
"RTN","ECPROV3",62,0)
 .D GMM
"RTN","ECPROV3",63,0)
 Q
"RTN","ECPROV3",64,0)
GECD S ECD=0 F I=0:0 S ECD=$O(^ECH("ADT",ECL,ECDFN,ECD)) Q:'ECD  D GMM
"RTN","ECPROV3",65,0)
 Q
"RTN","ECPROV3",66,0)
GMM S MM=ECSD F I=0:0 S MM=$O(^ECH("ADT",ECL,ECDFN,ECD,MM)) Q:'MM!(MM>ECED)  D LOC1
"RTN","ECPROV3",67,0)
 Q
"RTN","ECPROV3",68,0)
LOC1 S ECFN=0 F I=0:0 S ECFN=$O(^ECH("ADT",ECL,ECDFN,ECD,MM,ECFN)) Q:'ECFN  D UTL
"RTN","ECPROV3",69,0)
 Q
"RTN","ECPROV3",70,0)
UTL ; set ^TMP($J,"ECPROV"
"RTN","ECPROV3",71,0)
 Q:'$D(^ECH(+ECFN,0))!(+$G(ECD)'=$P($G(^ECH(+ECFN,0)),"^",7))
"RTN","ECPROV3",72,0)
 S ECEC=^ECH(+ECFN,0),ECV=+$P(ECEC,"^",10),ECC=+$P(ECEC,"^",8)
"RTN","ECPROV3",73,0)
 ;S ECP=$P(ECEC,"^",9),ECU=+$P(ECEC,"^",11)
"RTN","ECPROV3",74,0)
 S ECP=$P(ECEC,"^",9),ECU=$$GETPPRV^ECPRVMUT(ECFN,.ECUN),ECUN=$S(ECU:"UNKNOWN",1:$P(ECUN,"^",2))
"RTN","ECPROV3",75,0)
 S ECCN=$S($P($G(^EC(726,ECC,0)),"^")]"":$P(^(0),"^"),1:"None")
"RTN","ECPROV3",76,0)
 Q:ECP']""
"RTN","ECPROV3",77,0)
 S ECD=+$P(ECEC,"^",7)
"RTN","ECPROV3",78,0)
 I ECPRV=1 Q:'$D(ECDU(ECD))  S ECDN=ECDU(ECD)
"RTN","ECPROV3",79,0)
 I ECPRV=2 S ECDN=$S($P($G(^ECD(ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",80,0)
 ;S ECUN=$S($P($G(^VA(200,ECU,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECPROV3",81,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPN=""
"RTN","ECPROV3",82,0)
 S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPROV3",83,0)
 I ECFILE=81 S ECPN=$P($$CPT^ICPTCOD(+ECP,$P(ECED,".")),"^",3)
"RTN","ECPROV3",84,0)
 I ECFILE=725 S ECPN=$P($G(^EC(725,+ECP,0)),"^")
"RTN","ECPROV3",85,0)
 I ECFILE="UNKNOWN"!(ECPN="") S ECPN="UNKNOWN"
"RTN","ECPROV3",86,0)
 ;Changes made by VMP to correct NOIS SDC-1003-60397
"RTN","ECPROV3",87,0)
 S ECPN=$E(ECPN,1,5)_"~"_$P(ECP,";")_"~"_$E($P(ECP,";",2))_"~"_ECPSY
"RTN","ECPROV3",88,0)
 ;Get Procedure CPT modifiers
"RTN","ECPROV3",89,0)
 S ECMODF=0 K ECMOD
"RTN","ECPROV3",90,0)
 I $O(^ECH(+ECFN,"MOD",0))'="" S ECMODF=$$MOD^ECUTL(+ECFN,"I",.ECMOD)
"RTN","ECPROV3",91,0)
 ;
"RTN","ECPROV3",92,0)
 ;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPROV3",93,0)
 N ECLNK
"RTN","ECPROV3",94,0)
 S ECPRSN=""
"RTN","ECPROV3",95,0)
 S ECLNK=+$P(ECEC,"^",23)
"RTN","ECPROV3",96,0)
 I +ECLNK>0 DO
"RTN","ECPROV3",97,0)
 .S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPROV3",98,0)
 .S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",99,0)
 .S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPROV3",100,0)
 S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPROV3",101,0)
 I '$D(ECRY) S ECPRSN="REASON NOT DEFINED" ;group proc reason-not print
"RTN","ECPROV3",102,0)
 I '$D(^TMP($J,ECLN,ECDN,ECUN)) S ECINC=ECINC+1,ECINZ="^"_ECINC,^(ECUN)=0,^(ECUN,ECINC)=0
"RTN","ECPROV3",103,0)
 S ECINZ="^"_$O(^TMP($J,ECLN,ECDN,ECUN,0))
"RTN","ECPROV3",104,0)
 I '$D(^TMP($J,ECINZ,ECCN)) S ^TMP($J,ECINZ,ECCN)=0
"RTN","ECPROV3",105,0)
 ;
"RTN","ECPROV3",106,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",107,0)
 I '$D(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)) S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=0
"RTN","ECPROV3",108,0)
 S ^TMP($J,ECLN)=^TMP($J,ECLN)+ECV
"RTN","ECPROV3",109,0)
 S ^TMP($J,ECLN,ECDN,ECUN)=^TMP($J,ECLN,ECDN,ECUN)+ECV
"RTN","ECPROV3",110,0)
 S ^TMP($J,ECINZ,ECCN)=^TMP($J,ECINZ,ECCN)+ECV
"RTN","ECPROV3",111,0)
 ;
"RTN","ECPROV3",112,0)
 ;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPROV3",113,0)
 S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)=^TMP($J,ECINZ,ECCN,ECPN,ECPRSN)+ECV
"RTN","ECPROV3",114,0)
 ;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPROV3",115,0)
 S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPROV3",116,0)
 . S ^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD)=$G(^TMP($J,ECINZ,ECCN,ECPN,ECPRSN,"MOD",MOD))+ECV
"RTN","ECPROV3",117,0)
 Q
"RTN","ECPROV3",118,0)
PAGE ; end of page
"RTN","ECPROV3",119,0)
 I $D(ECPG),$E(IOST,1,2)="C-" W !!,"Press <RET> to continue, or ^ to quit  " R X:DTIME I '$T!(X="^") S ECOUT=1 Q
"RTN","ECPROV3",120,0)
HDR ; print heading
"RTN","ECPROV3",121,0)
 W:$Y @IOF W !!,?49,"EVENT CAPTURE PROVIDER SUMMARY",!,?49,"FROM "_$P(ECDATE,"^")_"  TO "_$P(ECDATE,"^",2),!,?49,"Run Date : ",ECRDT
"RTN","ECPROV3",122,0)
 W !!?3,"Category",!,?6,"CPT Code",?20,"Description"
"RTN","ECPROV3",123,0)
 W:$D(ECRY) ?70,"Procedure Reason"
"RTN","ECPROV3",124,0)
 W ?105,"Volume",!,?10,"CPT Modifier (volume)",!
"RTN","ECPROV3",125,0)
 F LINE=1:1:132 W "-"
"RTN","ECPROV3",126,0)
 W !!,"Location: "_ECLN,! W:ECDN]"" "DSS Unit: "_ECDN
"RTN","ECPROV3",127,0)
 I ECPRV,$D(ECUSER) W !!,ECUN,!,ECCN
"RTN","ECPROV3",128,0)
 Q
"RTN","ECPROV3",129,0)
TOTP Q:ECOUT  W !,?105,"------",!,"Total Procedures for "_ECUN,?105,$J(^TMP($J,ECLN,ECDN,ECUN),6)
"RTN","ECPROV3",130,0)
 Q
"RTN","ECPROV3",131,0)
UNIT ; set units
"RTN","ECPROV3",132,0)
 S CNT=0 F I=0:0 S CNT=$O(UNIT(CNT)) Q:'CNT  S ECDU(+UNIT(CNT))=$P(UNIT(CNT),"^",2)
"RTN","ECPROV3",133,0)
 Q
"RTN","ECPROV3",134,0)
 ;
"RTN","ECPROV3",135,0)
NOUNIT ;Nothing there
"RTN","ECPROV3",136,0)
 I $O(^TMP($J,ECLN,ECDN))']"" D PAGE W !!!,?12,"NO PROCEDURES",! S ECPG=1
"RTN","ECPROV3",137,0)
 Q
"RTN","ECPRSUM1")
0^8^B27513116^B26520258
"RTN","ECPRSUM1",1,0)
ECPRSUM1 ;BIR/DMA,RHK,JPW-Provider Summary (1 to 7) ;27 Mar 96
"RTN","ECPRSUM1",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,33,47,62,63,61,72**;8 May 96
"RTN","ECPRSUM1",3,0)
 S DIC=200,DIC(0)="AQEMZ",DIC("A")="Select Provider: "
"RTN","ECPRSUM1",4,0)
 D ^DIC K DIC G END:Y<0 S ECU=+Y,ECUN=$P(Y,"^",2)
"RTN","ECPRSUM1",5,0)
 D REASON^ECRUTL ;* Prompt to include Procedure Reasons
"RTN","ECPRSUM1",6,0)
 I ($D(DIRUT))!($D(DUOUT)) G END
"RTN","ECPRSUM1",7,0)
BDATE K %DT S %DT="AEX",%DT("A")="Starting with Date: "
"RTN","ECPRSUM1",8,0)
 D ^%DT G:Y<0 END S ECSD=Y
"RTN","ECPRSUM1",9,0)
EDATE K %DT S %DT="AEX",%DT("A")="Ending with Date: " D ^%DT G:Y<0 END
"RTN","ECPRSUM1",10,0)
 I Y<ECSD D  G EDATE
"RTN","ECPRSUM1",11,0)
 .W !!,"The ending date cannot be earlier than the starting date.  "
"RTN","ECPRSUM1",12,0)
 .W "Please re-enter",!,"the ending date.",!
"RTN","ECPRSUM1",13,0)
 S ECED=Y,ECDATE=ECSD_"^"_ECED
"RTN","ECPRSUM1",14,0)
DEV ;dev call
"RTN","ECPRSUM1",15,0)
 W !!,"This report is formatted for 132 column output.",!!
"RTN","ECPRSUM1",16,0)
 S %ZIS="Q",%ZIS("A")="Select Device: " D ^%ZIS G END:POP
"RTN","ECPRSUM1",17,0)
 I $D(IO("Q")) K ZTSAVE S (ZTSAVE("ECRY"),ZTSAVE("ECSD"),ZTSAVE("ECDATE"),ZTSAVE("ECED"),ZTSAVE("ECU"),ZTSAVE("ECUN"))="",ZTDESC="Event Capture Provider Summary",ZTRTN="EN^ECPRSUM1" D ^%ZTLOAD,HOME^%ZIS K ZTSK G END
"RTN","ECPRSUM1",18,0)
 ;
"RTN","ECPRSUM1",19,0)
EN ;QUEUED ENTRY POINT
"RTN","ECPRSUM1",20,0)
 N ECPG,ECGT,EC,ECCAT,ECPXD,MODI,ECI,ECPRV,RK,A,ECX,EC725
"RTN","ECPRSUM1",21,0)
 U IO
"RTN","ECPRSUM1",22,0)
 S (ECOUT,ECPG)=0 F ECI=1:1:7 S ECGT(ECI)=0,A(ECI)=0
"RTN","ECPRSUM1",23,0)
 K ^TMP($J) S ECOUT=0,ECSD=ECSD-.1,ECED=ECED+.3
"RTN","ECPRSUM1",24,0)
 F ECD=ECSD:0 S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  F DA=0:0 S DA=$O(^ECH("AC",ECD,DA)) Q:'DA  S EC=$G(^ECH(DA,0)) D 
"RTN","ECPRSUM1",25,0)
 .K ECPRV S ECPRV=$$GETPRV^ECPRVMUT(DA,.ECPRV),ECX=0 I ECPRV Q
"RTN","ECPRSUM1",26,0)
 .F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",27,0)
 .F ECI=1:1:7 S ECX=$O(ECPRV(ECX)) Q:'ECX  D
"RTN","ECPRSUM1",28,0)
 ..S A(ECI)=$P(ECPRV(ECX),U)=ECU
"RTN","ECPRSUM1",29,0)
 .S ECX=A(1)=A(2)=A(3)=A(4)=A(5)=A(6)=A(7) I 'ECX Q
"RTN","ECPRSUM1",30,0)
 .S ECPAT=+$P(EC,"^",2),PA=$G(^DPT(ECPAT,0)),SS=$P(PA,"^",9)
"RTN","ECPRSUM1",31,0)
 .S PA=$S($P(PA,"^")]"":$P(PA,"^"),1:"UNKNOWN"),ECP=$P(EC,"^",9)
"RTN","ECPRSUM1",32,0)
 .Q:ECP']""
"RTN","ECPRSUM1",33,0)
 .S ECLOC=+$P(EC,U,4),ECUNIT=+$P(EC,U,7),ECCAT=+$P(EC,U,8)
"RTN","ECPRSUM1",34,0)
 .S ECPSY=+$O(^ECJ("AP",ECLOC,ECUNIT,ECCAT,ECP,""))
"RTN","ECPRSUM1",35,0)
 .S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2)
"RTN","ECPRSUM1",36,0)
 .S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECPRSUM1",37,0)
 .I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECPRSUM1",38,0)
 .S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5)),ECPXD=""
"RTN","ECPRSUM1",39,0)
 .I ECCPT'="" D
"RTN","ECPRSUM1",40,0)
 ..S ECPXD=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")),ECCPT=$P(ECPXD,"^",2)_" "
"RTN","ECPRSUM1",41,0)
 .I ECFILE=81 S ECPN=$S($P(ECPXD,"^",3)]"":$P(ECPXD,"^",3),1:"UNKNOWN")
"RTN","ECPRSUM1",42,0)
 .I ECFILE=725 S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECPRSUM1",43,0)
 .S ECPTDS=ECCPT_ECPN_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECPRSUM1",44,0)
 .;Get Procedure CPT modifiers
"RTN","ECPRSUM1",45,0)
 .S ECMODF=0 I $O(^ECH(DA,"MOD",0))'="" D
"RTN","ECPRSUM1",46,0)
 ..K ECMOD S ECMODF=$$MOD^ECUTL(DA,"I",.ECMOD)
"RTN","ECPRSUM1",47,0)
 .;
"RTN","ECPRSUM1",48,0)
 .;ALB/ESD - Get procedure reason from EC Patient file (#721) record
"RTN","ECPRSUM1",49,0)
 .S ECPRSN="",ECLNK=+$P(EC,"^",23)
"RTN","ECPRSUM1",50,0)
 .I +ECLNK>0 DO
"RTN","ECPRSUM1",51,0)
 ..S ECPRSN=$P($G(^ECL(ECLNK,0)),"^",1)
"RTN","ECPRSUM1",52,0)
 ..S:+ECPRSN'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",53,0)
 ..S:+ECPRSN>0 ECPRSN=$P(^ECR(ECPRSN,0),"^",1)
"RTN","ECPRSUM1",54,0)
 .S:+ECLNK'>0 ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",55,0)
 .I '$D(ECRY) S ECPRSN="REASON NOT DEFINED"
"RTN","ECPRSUM1",56,0)
 .;
"RTN","ECPRSUM1",57,0)
 .;ALB/ESD - Add procedure reason to ^TMP array
"RTN","ECPRSUM1",58,0)
 .S PRO=ECCPT_ECPN I PRO]"" S V=+$P(EC,"^",10) D
"RTN","ECPRSUM1",59,0)
 ..F J=1:1:7 I A(J) S ^(J)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,J))+V D
"RTN","ECPRSUM1",60,0)
 ...I $G(^TMP($J,PRO))="" S ^TMP($J,PRO)=ECPTDS
"RTN","ECPRSUM1",61,0)
 ..;ALB/JAM - Add Procedure CPT modifier to ^TMP array
"RTN","ECPRSUM1",62,0)
 ..S MOD="" F  S MOD=$O(ECMOD(MOD)) Q:MOD=""  D
"RTN","ECPRSUM1",63,0)
 ...S ^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD)=$G(^TMP($J,PRO,ECPRSN,PA_"^"_SS,"MOD",MOD))+V
"RTN","ECPRSUM1",64,0)
 K ECLNK,MOD,ECPTDS
"RTN","ECPRSUM1",65,0)
 ;
"RTN","ECPRSUM1",66,0)
PRINT ;print report
"RTN","ECPRSUM1",67,0)
 S ECSD=$P(ECDATE,"^"),ECED=$P(ECDATE,"^",2)
"RTN","ECPRSUM1",68,0)
 D HDR I '$D(^TMP($J)) W !!,?12,"No Event Capture Provider Summary for "_ECUN_" to report for the date range selected.",!! D PAGE G END
"RTN","ECPRSUM1",69,0)
 F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",70,0)
 S (ECREAS,PA,PR)=""
"RTN","ECPRSUM1",71,0)
 F  S PR=$O(^TMP($J,PR)),PA="" Q:PR=""  D  Q:ECOUT
"RTN","ECPRSUM1",72,0)
 .W !,^TMP($J,PR)
"RTN","ECPRSUM1",73,0)
 .F  S ECREAS=$O(^TMP($J,PR,ECREAS)) Q:ECREAS=""  D  Q:ECOUT
"RTN","ECPRSUM1",74,0)
 ..F  S PA=$O(^TMP($J,PR,ECREAS,PA)) D:PA="" TOT Q:PA=""  D  Q:ECOUT
"RTN","ECPRSUM1",75,0)
 ...S A=$G(^TMP($J,PR,ECREAS,PA,0))
"RTN","ECPRSUM1",76,0)
 ...W ! W:$D(ECRY) $E(ECREAS,1,23)
"RTN","ECPRSUM1",77,0)
 ...W ?25,$E($P(PA,"^"),1,24),?50,$P(PA,"^",2)
"RTN","ECPRSUM1",78,0)
 ...F J=1:1:7 S A=$G(^TMP($J,PR,ECREAS,PA,J)),A(J)=A(J)+A W ?10*J+50,$J(A,5,0) I J=7 I $Y+5>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",79,0)
 ...;print CPT procedure modifiers
"RTN","ECPRSUM1",80,0)
 ...Q:ECOUT  S IEN=""
"RTN","ECPRSUM1",81,0)
 ...F  S IEN=$O(^TMP($J,PR,ECREAS,PA,"MOD",IEN)) Q:IEN=""  D  I ECOUT Q
"RTN","ECPRSUM1",82,0)
 ....S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECED,"."))
"RTN","ECPRSUM1",83,0)
 ....S MOD=$P(MODI,U,2) I MOD="" Q
"RTN","ECPRSUM1",84,0)
 ....S MODESC=$P(MODI,U,3)  I MODESC="" S MODESC="UNKNOWN"
"RTN","ECPRSUM1",85,0)
 ....S MODAMT=^TMP($J,PR,ECREAS,PA,"MOD",IEN)
"RTN","ECPRSUM1",86,0)
 ....W !?5,"- ",MOD," ",MODESC," (",MODAMT,")"
"RTN","ECPRSUM1",87,0)
 ....I ($Y+4)>IOSL D PAGE Q:ECOUT  D HDR
"RTN","ECPRSUM1",88,0)
 ...K MODESC,MOD,MODAMT
"RTN","ECPRSUM1",89,0)
 W !!,?60 F RK=61:1:IOM W "*"
"RTN","ECPRSUM1",90,0)
 W !,?35,"GRAND TOTAL - PROCEDURES"
"RTN","ECPRSUM1",91,0)
 F J=1:1:7 W ?10*J+50,$J(ECGT(J),5,0)
"RTN","ECPRSUM1",92,0)
 D:'ECOUT PAGE G END
"RTN","ECPRSUM1",93,0)
 ;
"RTN","ECPRSUM1",94,0)
PAGE ; end of page
"RTN","ECPRSUM1",95,0)
 I $E(IOST,1,2)="C-" S DIR(0)="E" D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECPRSUM1",96,0)
 Q
"RTN","ECPRSUM1",97,0)
HDR ;
"RTN","ECPRSUM1",98,0)
 W:$Y @IOF S ECPG=ECPG+1
"RTN","ECPRSUM1",99,0)
 W !!?33,"EVENT CAPTURE PROVIDER SUMMARY FOR ",ECUN,?118,"Page: ",ECPG,!,?33,"FOR THE DATE RANGE ",$$FMTE^XLFDT(ECSD)," TO ",$$FMTE^XLFDT(ECED),!!,"PROCEDURE",?85,"TOTALS AS PROVIDER #",!
"RTN","ECPRSUM1",100,0)
 W:$D(ECRY) "PROCEDURE REASON" W ?25,"PATIENT",?52,"SSN",?64,1,?74,2,?84,3,?94,4,?104,5,?114,6,?124,7
"RTN","ECPRSUM1",101,0)
 W !,?5,"CPT MODIFIER (Volume of modifiers use)",!
"RTN","ECPRSUM1",102,0)
 F RK=1:1:IOM W "-"
"RTN","ECPRSUM1",103,0)
 W !
"RTN","ECPRSUM1",104,0)
 Q
"RTN","ECPRSUM1",105,0)
 ;
"RTN","ECPRSUM1",106,0)
TOT W !,?60 F RK=61:1:IOM W "-"
"RTN","ECPRSUM1",107,0)
 W !?35,"TOTAL PROCEDURES"
"RTN","ECPRSUM1",108,0)
 F J=1:1:7 W ?10*J+50,$J(A(J),5,0) S ECGT(J)=ECGT(J)+A(J)
"RTN","ECPRSUM1",109,0)
 W ! F ECI=1:1:7 S A(ECI)=0
"RTN","ECPRSUM1",110,0)
 Q
"RTN","ECPRSUM1",111,0)
 ;
"RTN","ECPRSUM1",112,0)
END D ^ECKILL K ^TMP($J),ZTSK W @IOF
"RTN","ECPRSUM1",113,0)
 K ^TMP($J) Q:$D(ECGUI)
"RTN","ECPRSUM1",114,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECPRSUM1",115,0)
 D ^%ZISC
"RTN","ECPRSUM1",116,0)
 Q
"RTN","ECPRVMUT")
0^36^B51865665
"RTN","ECPRVMUT",1,0)
ECPRVMUT ;ALB/JAM - Event Capture Multiple Provider Utilities ;24 Aug 05
"RTN","ECPRVMUT",2,0)
 ;;2.0; EVENT CAPTURE ;**72**;8 May 96
"RTN","ECPRVMUT",3,0)
 ;
"RTN","ECPRVMUT",4,0)
GETPRV(ECIEN,OUTARR) ;Returns providers associated with an encounter
"RTN","ECPRVMUT",5,0)
 ;*** This recall replaces GET^ECPRVUTL to allow for multiple providers 
"RTN","ECPRVMUT",6,0)
 ;    instead of three.
"RTN","ECPRVMUT",7,0)
 ;  Input: ECIEN  - IEN entry in file 721/^ECH(
"RTN","ECPRVMUT",8,0)
 ;
"RTN","ECPRVMUT",9,0)
 ; Output: OUTARR - output array with providers
"RTN","ECPRVMUT",10,0)
 ;                  ^ECH IEN^provider ien^provider description^
"RTN","ECPRVMUT",11,0)
 ;                  Primary/Secondary code^Primary/Secondary description
"RTN","ECPRVMUT",12,0)
 ;         returns 0 if successful or 1 if unsuccessful
"RTN","ECPRVMUT",13,0)
 ;      
"RTN","ECPRVMUT",14,0)
 I $G(ECIEN)="" Q 1  ;IEN not define.
"RTN","ECPRVMUT",15,0)
 I '$D(^ECH(ECIEN)) Q 1  ;IEN does not exist in file 721/^ECH(
"RTN","ECPRVMUT",16,0)
 I $O(^ECH(ECIEN,"PRV",0))="" Q 1  ;No provider on file for entry
"RTN","ECPRVMUT",17,0)
 N PRV,IEN,ECERR,SEQ,TYP,TYD,TMPARR,PRI,CNT,PRVARY
"RTN","ECPRVMUT",18,0)
 S PRI=0
"RTN","ECPRVMUT",19,0)
 D GETS^DIQ(721,ECIEN,"42*","IE","PRVARY","ECERR")
"RTN","ECPRVMUT",20,0)
 I $D(ECERR) Q 1  ;Error looking up entry
"RTN","ECPRVMUT",21,0)
 S SEQ="" F  S SEQ=$O(PRVARY(721.042,SEQ)) Q:SEQ=""  D
"RTN","ECPRVMUT",22,0)
 . S IEN=$G(PRVARY(721.042,SEQ,.01,"I")) I IEN="" Q
"RTN","ECPRVMUT",23,0)
 . S PRV=$G(PRVARY(721.042,SEQ,.01,"E")) I PRV="" S PRV="Unknown"
"RTN","ECPRVMUT",24,0)
 . S TYP=$G(PRVARY(721.042,SEQ,.02,"I")) I TYP="" S TYP="Ukn"
"RTN","ECPRVMUT",25,0)
 . S TYD=$G(PRVARY(721.042,SEQ,.02,"E")) I TYD="" S TYD="Unknown"
"RTN","ECPRVMUT",26,0)
 . I 'PRI,TYP="P" S PRI=1_U_$P(SEQ,",")
"RTN","ECPRVMUT",27,0)
 . I $P(SEQ,",")'="" S TMPARR($P(SEQ,","))=IEN_U_PRV_U_TYP_U_TYD
"RTN","ECPRVMUT",28,0)
 ;set primary provider as first subscript
"RTN","ECPRVMUT",29,0)
 S CNT=1,PRI=$S(PRI:$P(PRI,U,2),1:$O(TMPARR(0))),OUTARR(CNT)=TMPARR(PRI)
"RTN","ECPRVMUT",30,0)
 K TMPARR(PRI)
"RTN","ECPRVMUT",31,0)
 S IEN=0 F  S IEN=$O(TMPARR(IEN)) Q:'IEN  D
"RTN","ECPRVMUT",32,0)
 . S CNT=CNT+1,OUTARR(CNT)=TMPARR(IEN)
"RTN","ECPRVMUT",33,0)
 Q $S($D(OUTARR):0,1:1)
"RTN","ECPRVMUT",34,0)
 ;
"RTN","ECPRVMUT",35,0)
GETPPRV(ECIEN,ECPPROV) ;returns primary provider associated with an encounter
"RTN","ECPRVMUT",36,0)
 ;  Input: ECIEN  - IEN entry in file 721/^ECH(
"RTN","ECPRVMUT",37,0)
 ;
"RTN","ECPRVMUT",38,0)
 ; Output: ECPPROV - primary provider
"RTN","ECPRVMUT",39,0)
 ;                   provider ien^provider description
"RTN","ECPRVMUT",40,0)
 ;         returns 0 if successful or 1 if unsuccessful
"RTN","ECPRVMUT",41,0)
 ;      
"RTN","ECPRVMUT",42,0)
 I $G(ECIEN)="" Q 1  ;IEN not define.
"RTN","ECPRVMUT",43,0)
 I '$D(^ECH(ECIEN)) Q 1  ;IEN does not exist in file 721/^ECH(
"RTN","ECPRVMUT",44,0)
 I $O(^ECH(ECIEN,"PRV",0))="" Q 1  ;No provider on file for entry
"RTN","ECPRVMUT",45,0)
 N PRVARY,PRV,IEN,ECERR,SEQ,ECOUT,TYP
"RTN","ECPRVMUT",46,0)
 S ECOUT=0
"RTN","ECPRVMUT",47,0)
 D GETS^DIQ(721,ECIEN,"42*","IE","PRVARY","ECERR")
"RTN","ECPRVMUT",48,0)
 I $D(ECERR) Q 1  ;Error looking up entry
"RTN","ECPRVMUT",49,0)
 S SEQ="" F  S SEQ=$O(PRVARY(721.042,SEQ)) Q:SEQ=""  D  I ECOUT Q
"RTN","ECPRVMUT",50,0)
 . S IEN=$G(PRVARY(721.042,SEQ,.01,"I")) I IEN="" Q
"RTN","ECPRVMUT",51,0)
 . S PRV=$G(PRVARY(721.042,SEQ,.01,"E")) I PRV="" S PRV="Unknown"
"RTN","ECPRVMUT",52,0)
 . S TYP=$G(PRVARY(721.042,SEQ,.02,"I")) I TYP="" S TYD="Unknown"
"RTN","ECPRVMUT",53,0)
 . I TYP="P" S ECPPROV=IEN_U_PRV,ECOUT=1
"RTN","ECPRVMUT",54,0)
 Q $S($D(ECPPROV):0,1:1)
"RTN","ECPRVMUT",55,0)
 ;
"RTN","ECPRVMUT",56,0)
FILPRV(ECIEN,ECPRVARY,ECOUT) ;File multiple providers for an encounter
"RTN","ECPRVMUT",57,0)
 ;  Input: ECIEN    - IEN entry in file 721/^ECH(
"RTN","ECPRVMUT",58,0)
 ;         ECPRVARY - array with providers
"RTN","ECPRVMUT",59,0)
 ;         ECOUT    - Error flag (1/0)
"RTN","ECPRVMUT",60,0)
 ;
"RTN","ECPRVMUT",61,0)
 ; Output: returns 1 if successful or 0 if unsuccessful
"RTN","ECPRVMUT",62,0)
 ;      
"RTN","ECPRVMUT",63,0)
 I $G(ECIEN)="" Q 0  ;IEN not define.
"RTN","ECPRVMUT",64,0)
 I '$D(^ECH(ECIEN)) Q 0  ;IEN does not exist in file 721/^ECH(
"RTN","ECPRVMUT",65,0)
 I '$O(ECPRVARY(0)) Q 0  ;No entry in provider array
"RTN","ECPRVMUT",66,0)
 N SIEN,ECERR,ERR,ECPRVDA,ECDATA,DA,DIK
"RTN","ECPRVMUT",67,0)
 ;delete old entries
"RTN","ECPRVMUT",68,0)
 S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""PRV"",",DA=0
"RTN","ECPRVMUT",69,0)
 F  S DA=$O(^ECH(DA(1),"PRV",DA)) Q:'DA  D ^DIK
"RTN","ECPRVMUT",70,0)
 S SIEN=0,ERR=""
"RTN","ECPRVMUT",71,0)
 F  S SIEN=$O(ECPRVARY(SIEN)) Q:SIEN=""  D
"RTN","ECPRVMUT",72,0)
 .K ECPRVDA,ECERR
"RTN","ECPRVMUT",73,0)
 .S ECDATA=ECPRVARY(SIEN)
"RTN","ECPRVMUT",74,0)
 .S ECPRVDA(721,"?1,",.01)=ECIEN
"RTN","ECPRVMUT",75,0)
 .S ECPRVDA(721.042,"+2,?1,",.01)=$P(ECDATA,U)
"RTN","ECPRVMUT",76,0)
 .S ECPRVDA(721.042,"+2,?1,",.02)=$P(ECDATA,U,3)
"RTN","ECPRVMUT",77,0)
 .D UPDATE^DIE("","ECPRVDA","","ECERR")
"RTN","ECPRVMUT",78,0)
 .I $D(ECERR) S ERR=ERR_SIEN_";"
"RTN","ECPRVMUT",79,0)
 Q $S(ERR="":1,1:"0^"_ERR)
"RTN","ECPRVMUT",80,0)
 ;
"RTN","ECPRVMUT",81,0)
DSPPRV ;Display providers
"RTN","ECPRVMUT",82,0)
 N ECX,ECDAT,ECW
"RTN","ECPRVMUT",83,0)
 W "Encounter Providers"
"RTN","ECPRVMUT",84,0)
 S ECX=0  F  S ECX=$O(ECPRVARY(ECX)) Q:'ECX  D
"RTN","ECPRVMUT",85,0)
 .S ECDAT=ECPRVARY(ECX)
"RTN","ECPRVMUT",86,0)
 .W !,?3,$P(ECDAT,U),?15,$P(ECDAT,U,2) I $P(ECDAT,U,3)="P" W " (Primary)"
"RTN","ECPRVMUT",87,0)
 Q
"RTN","ECPRVMUT",88,0)
ASKPRV(ECIEN,ECDT,ECPRVARY,ECOUT) ;ask provider question (primary and multiple secondary)
"RTN","ECPRVMUT",89,0)
 ; Variables: ECIEN    - IEN entry in file 721/^ECH(
"RTN","ECPRVMUT",90,0)
 ;            ECDT     - date/time of encounter
"RTN","ECPRVMUT",91,0)
 ;            ECPRVARY - array with providers
"RTN","ECPRVMUT",92,0)
 ;            ECOUT    - Error flag (1/0)
"RTN","ECPRVMUT",93,0)
 ;
"RTN","ECPRVMUT",94,0)
 ; Output: returns 1 if successful or 0 if unsuccessful
"RTN","ECPRVMUT",95,0)
 N ECINF
"RTN","ECPRVMUT",96,0)
 K ECPRVARY,ECPRV,ECPRVN
"RTN","ECPRVMUT",97,0)
 ;get providers
"RTN","ECPRVMUT",98,0)
 I $G(ECIEN)'="" D
"RTN","ECPRVMUT",99,0)
 .S ECINF=$$GETPRV(ECIEN,.ECPRVARY)
"RTN","ECPRVMUT",100,0)
 .S ECINF=$$GETPPRV(ECIEN,.ECPRVN) I 'ECINF S ECPRV=$P(ECPRVN,U),ECPRVN=$P(ECPRVN,U,2)
"RTN","ECPRVMUT",101,0)
 ;display providers
"RTN","ECPRVMUT",102,0)
 I $O(ECPRVARY(""))'="" D DSPPRV
"RTN","ECPRVMUT",103,0)
 ;ask for primary provider
"RTN","ECPRVMUT",104,0)
 D PPRV I $G(ECOUT) Q
"RTN","ECPRVMUT",105,0)
 ;ask for secondary provider
"RTN","ECPRVMUT",106,0)
 D SPRV
"RTN","ECPRVMUT",107,0)
 Q
"RTN","ECPRVMUT",108,0)
PPRV ;Ask primary provider
"RTN","ECPRVMUT",109,0)
 ;   Variables:   ECPRV   = Primary provider ien
"RTN","ECPRVMUT",110,0)
 ;                ECPRVN  = Primary provider descript, default if define
"RTN","ECPRVMUT",111,0)
 ;                ECPRVARY= Array with providers
"RTN","ECPRVMUT",112,0)
 ;                          subscript=provider IEN, 
"RTN","ECPRVMUT",113,0)
 ;                          data=(P)rimary_^_provider description
"RTN","ECPRVMUT",114,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECPRVMUT",115,0)
 ;   
"RTN","ECPRVMUT",116,0)
 N DIR,DIROUT,DIRUT,DTOUT,DUOUT,ECW,X,Y,IEN
"RTN","ECPRVMUT",117,0)
 S ECPRV=$G(ECPRV),ECPRVN=$G(ECPRVN)
"RTN","ECPRVMUT",118,0)
 S DIR(0)="P^VA(200,:AEZQM",DIR("A")="Primary Provider"
"RTN","ECPRVMUT",119,0)
 S DIR("?")="Enter the provider responsible for providing primary care for this encounter."
"RTN","ECPRVMUT",120,0)
 I ECPRV'="" S DIR("B")=$$DICLK^ECPRVUTL(ECPRV)
"RTN","ECPRVMUT",121,0)
 ;get provider with active person class
"RTN","ECPRVMUT",122,0)
 S DIR("S")="I +$$GET^XUA4A72(+Y,$G(ECDT,DT))>0"
"RTN","ECPRVMUT",123,0)
 D ^DIR
"RTN","ECPRVMUT",124,0)
 I +Y>0 D  Q
"RTN","ECPRVMUT",125,0)
 .;check if provider exist as secondary and remove.
"RTN","ECPRVMUT",126,0)
 .S IEN=0
"RTN","ECPRVMUT",127,0)
 .F  S IEN=$O(ECPRVARY(IEN)) Q:'IEN  I $P(ECPRVARY(IEN),U,3)'="P" D
"RTN","ECPRVMUT",128,0)
 ..I +ECPRVARY(IEN)=+Y D
"RTN","ECPRVMUT",129,0)
 ...W !?25,"*** (Provider removed as secondary.) ***" K ECPRVARY(IEN)
"RTN","ECPRVMUT",130,0)
 .S ECW=$$CLASS^ECPRVUTL(+Y,$G(ECDT,DT))
"RTN","ECPRVMUT",131,0)
 .S ECPRV=+Y,ECPRVN=Y(0,0),ECPRVARY(1)=ECPRV_"^"_Y(0,0)_"^P^PRIMARY"
"RTN","ECPRVMUT",132,0)
 S ECOUT=1 Q
"RTN","ECPRVMUT",133,0)
 Q
"RTN","ECPRVMUT",134,0)
SPRV ;Ask secondary provider(s)
"RTN","ECPRVMUT",135,0)
 ;   Variables:   ECPRV   = Primary provider ien, default if define
"RTN","ECPRVMUT",136,0)
 ;                ECPRVARY= Array with providers
"RTN","ECPRVMUT",137,0)
 ;                          subscript=provider IEN, 
"RTN","ECPRVMUT",138,0)
 ;                          data=(S)econdary_^_provider description
"RTN","ECPRVMUT",139,0)
 ;
"RTN","ECPRVMUT",140,0)
 N Y,X,DEF,DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,CNT,X,Y
"RTN","ECPRVMUT",141,0)
 ;create "B" xref and subscript by provider ien in array ECPRVARY
"RTN","ECPRVMUT",142,0)
 ;set last provider as default
"RTN","ECPRVMUT",143,0)
 S DEF="",IEN=$O(ECPRVARY(""),-1),CNT=+IEN+1 I IEN D
"RTN","ECPRVMUT",144,0)
 .I $P(ECPRVARY(IEN),U)'=$G(ECPRV) S DEF=$P(ECPRVARY(IEN),U)
"RTN","ECPRVMUT",145,0)
 S IEN=0
"RTN","ECPRVMUT",146,0)
 F  S IEN=$O(ECPRVARY(IEN)) Q:'IEN  I $P(ECPRVARY(IEN),U,3)'="P" D
"RTN","ECPRVMUT",147,0)
 .S ECPRVARY("B",+ECPRVARY(IEN))=IEN
"RTN","ECPRVMUT",148,0)
 S:DEF'="" DIR("B")=$$DICLK^ECPRVUTL(DEF) ;DIR("B")="`"_DEF
"RTN","ECPRVMUT",149,0)
 S DIR(0)="PO^VA(200,:AEZQM",DIR("A")="Secondary Provider"
"RTN","ECPRVMUT",150,0)
 S DIR("?")="^D PRVHLP^ECPRVMUT"
"RTN","ECPRVMUT",151,0)
 ;get providers with active person class
"RTN","ECPRVMUT",152,0)
 S DIR("S")="I +$$GET^XUA4A72(+Y,$G(ECDT,DT))>0"
"RTN","ECPRVMUT",153,0)
 F  D ^DIR S:$D(DUOUT) ECOUT=1 Q:(X="")!($D(DTOUT))!($D(DUOUT))  D
"RTN","ECPRVMUT",154,0)
 .I +Y>0,+Y=$G(ECPRV) W "    Provider already entered as primary." Q
"RTN","ECPRVMUT",155,0)
 .I +Y=DEF K DIR("B") S DEF="" Q
"RTN","ECPRVMUT",156,0)
 .I X="@",DEF'="" D  Q
"RTN","ECPRVMUT",157,0)
 ..I DEF=$G(ECPRV) W "    Provider flag as primary. Can't delete." Q
"RTN","ECPRVMUT",158,0)
 ..W "    "_$$GET1^DIQ(200,DEF,.01)_"...deleted"
"RTN","ECPRVMUT",159,0)
 ..K ECPRVARY(ECPRVARY("B",DEF)),ECPRVARY("B",DEF),DIR("B")
"RTN","ECPRVMUT",160,0)
 .Q:+Y<0  I $D(ECPRVARY("B",+Y)) S DEF=+Y,DIR("B")=$$DICLK^ECPRVUTL(DEF) Q
"RTN","ECPRVMUT",161,0)
 .S ECW=$$CLASS^ECPRVUTL(+Y,$G(ECDT,DT))
"RTN","ECPRVMUT",162,0)
 .S ECPRVARY("B",+Y)=CNT,ECPRVARY(CNT)=+Y_"^"_Y(0,0)_"^S^SECONDARY"
"RTN","ECPRVMUT",163,0)
 .S DEF="",CNT=CNT+1 K DIR("B")
"RTN","ECPRVMUT",164,0)
 K ECPRVARY("B")
"RTN","ECPRVMUT",165,0)
 Q 
"RTN","ECPRVMUT",166,0)
PRVHLP ;Help for Provider Code
"RTN","ECPRVMUT",167,0)
 N DIC,PRV,D
"RTN","ECPRVMUT",168,0)
 I $D(ECPRVARY) D
"RTN","ECPRVMUT",169,0)
 .W !?1,"Provider Already Entered:" S PRV=0
"RTN","ECPRVMUT",170,0)
 .F  S PRV=$O(ECPRVARY(PRV)) Q:'PRV  D
"RTN","ECPRVMUT",171,0)
 ..W !,?3,$P(ECPRVARY(PRV),U),?15,$P(ECPRVARY(PRV),U,2)
"RTN","ECPRVMUT",172,0)
 ..I $P(ECPRVARY(PRV),U,3)="P" W " (Primary)"
"RTN","ECPRVMUT",173,0)
 W !?1,"You may enter a new Provider, if you wish.  Enter the secondary Provider"
"RTN","ECPRVMUT",174,0)
 W !?1,"for this procedure."
"RTN","ECPRVMUT",175,0)
 Q
"RTN","ECPRVMUT",176,0)
 ;
"RTN","ECPRVMUT",177,0)
COMP(ECUX,ECDTX) ;get provider information, similar to COMP^ECPRVUTL
"RTN","ECPRVMUT",178,0)
 ;Input:  ECUX  = IEN in file #200
"RTN","ECPRVMUT",179,0)
 ;        ECDTX = Date of encounter
"RTN","ECPRVMUT",180,0)
 ;
"RTN","ECPRVMUT",181,0)
 ;Output: ECUX  = ien in file #200^name^compress person class info
"RTN","ECPRVMUT",182,0)
 ;
"RTN","ECPRVMUT",183,0)
 I $G(ECUX)="" Q
"RTN","ECPRVMUT",184,0)
 S ECDTX=$G(ECDTX,DT)
"RTN","ECPRVMUT",185,0)
 ;build ECUX=ien in file #200^name^person class ien^occupation^specialty^
"RTN","ECPRVMUT",186,0)
 ;           subspecialty^etc.
"RTN","ECPRVMUT",187,0)
 S ECUX=+ECUX_"^"_$$GET1^DIQ(200,+ECUX,.01)_"^"_$$GET^XUA4A72(+ECUX,ECDTX)
"RTN","ECPRVMUT",188,0)
 D COMP^ECPRVUTL(.ECUX,ECDTX)
"RTN","ECPRVMUT",189,0)
 Q
"RTN","ECPRVMUT",190,0)
DSP1416(ECPRVARY) ;Display providers for data entry options
"RTN","ECPRVMUT",191,0)
 N ECI,ECDAT,ECUP,CNT
"RTN","ECPRVMUT",192,0)
 S (ECI,CNT)=0 F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  D
"RTN","ECPRVMUT",193,0)
 .S ECDAT=ECPRVARY(ECI),CNT=CNT+1
"RTN","ECPRVMUT",194,0)
 .W !,"Provider"_$S(CNT=1:"",1:" #"_CNT)_":",?14,$P(ECDAT,U,2)
"RTN","ECPRVMUT",195,0)
 .I +$P(ECDAT,U) S ECUP=+$P(ECDAT,U) D COMP(.ECUP,$G(ECDT,DT)) D
"RTN","ECPRVMUT",196,0)
 ..W !?16,$P(ECUP,"^",3)
"RTN","ECPRVMUT",197,0)
 Q
"RTN","ECPRVMUT",198,0)
DSP1442(ECPRVARY) ;Display providers for data entry options
"RTN","ECPRVMUT",199,0)
 N ECI,ECDAT,ECUP,CNT
"RTN","ECPRVMUT",200,0)
 S (ECI,CNT)=0  F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  D
"RTN","ECPRVMUT",201,0)
 .S ECDAT=ECPRVARY(ECI),CNT=CNT+1
"RTN","ECPRVMUT",202,0)
 .W !,"Provider"_$S(CNT=1:"",1:" #"_CNT)_":",?14,$E($P(ECDAT,U,2),1,24)
"RTN","ECPRVMUT",203,0)
 .I +$P(ECDAT,U) S ECUP=+$P(ECDAT,U) D COMP^ECPRVMUT(.ECUP,$G(ECDT,DT)) D
"RTN","ECPRVMUT",204,0)
 ..W ?42,$E($P(ECUP,U,3),1,36)
"RTN","ECPRVMUT",205,0)
 Q
"RTN","ECPRVMUT",206,0)
DSP1444(ECPRVARY) ;Display providers for data entry options
"RTN","ECPRVMUT",207,0)
 N ECI,ECDAT,ECUP,CNT
"RTN","ECPRVMUT",208,0)
 S (ECI,CNT)=0  F  S ECI=$O(ECPRVARY(ECI)) Q:'ECI  D
"RTN","ECPRVMUT",209,0)
 .S ECDAT=ECPRVARY(ECI),CNT=CNT+1
"RTN","ECPRVMUT",210,0)
 .W !,"Provider"_$S(CNT=1:"",1:" #"_CNT)_":",?14,$E($P(ECDAT,U,2),1,24)
"RTN","ECPRVMUT",211,0)
 .I +$P(ECDAT,U) S ECUP=+$P(ECDAT,U) D COMP^ECPRVMUT(.ECUP,$G(ECDT,DT)) D
"RTN","ECPRVMUT",212,0)
 ..W ?44,$E($P(ECUP,U,3),1,34)
"RTN","ECPRVMUT",213,0)
 Q
"RTN","ECRDSSU")
0^7^B49642828^B48824119
"RTN","ECRDSSU",1,0)
ECRDSSU ;ALB/ESD - DSS Unit Workload Summary Report ; 5 Aug 97
"RTN","ECRDSSU",2,0)
 ;;2.0; EVENT CAPTURE ;**5,8,10,14,18,47,63,72**;8 May 96
"RTN","ECRDSSU",3,0)
 ;
"RTN","ECRDSSU",4,0)
EN ;- Get location(s), DSS Unit(s), start & end dates, device
"RTN","ECRDSSU",5,0)
 ;
"RTN","ECRDSSU",6,0)
 N ECLOC,ECDSSU,ECSTDT,ECENDDT
"RTN","ECRDSSU",7,0)
 I '$$ASKLOC^ECRUTL G ENQ
"RTN","ECRDSSU",8,0)
 I '$$ASKDSS^ECRUTL G ENQ
"RTN","ECRDSSU",9,0)
 I '$$STDT^ECRUTL G ENQ
"RTN","ECRDSSU",10,0)
 I '$$ENDDT^ECRUTL(ECSTDT) G ENQ
"RTN","ECRDSSU",11,0)
 I $$ASKDEV D STRPT^ECRDSSU
"RTN","ECRDSSU",12,0)
ENQ Q
"RTN","ECRDSSU",13,0)
 ;
"RTN","ECRDSSU",14,0)
 ;
"RTN","ECRDSSU",15,0)
STRPT ;- Main entry point
"RTN","ECRDSSU",16,0)
 ;
"RTN","ECRDSSU",17,0)
 N ECCRT,ECDSSNM,ECDSSTOT,ECLOCNM,ECQUIT,ECPAGE
"RTN","ECRDSSU",18,0)
 S (ECDSSTOT,ECPAGE,ECQUIT)=0,(ECDSSNM,ECLOCNM)=""
"RTN","ECRDSSU",19,0)
 ; Determine if device is CRT
"RTN","ECRDSSU",20,0)
 S ECCRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","ECRDSSU",21,0)
 U IO
"RTN","ECRDSSU",22,0)
 D GETREC
"RTN","ECRDSSU",23,0)
 D LOOP
"RTN","ECRDSSU",24,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",25,0)
 D PRTCAT
"RTN","ECRDSSU",26,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",27,0)
 D DSSCHG
"RTN","ECRDSSU",28,0)
 I ECQUIT G STRPTQ
"RTN","ECRDSSU",29,0)
 I $D(ECGUI) G STRPTQ
"RTN","ECRDSSU",30,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","ECRDSSU",31,0)
 D ^%ZISC
"RTN","ECRDSSU",32,0)
STRPTQ K ^TMP("ECRPT")
"RTN","ECRDSSU",33,0)
 Q
"RTN","ECRDSSU",34,0)
 ;
"RTN","ECRDSSU",35,0)
 ;
"RTN","ECRDSSU",36,0)
GETREC ;- Loop thru "ADT" x-ref of EC Patient file (#721)
"RTN","ECRDSSU",37,0)
 ;
"RTN","ECRDSSU",38,0)
 N ECD,ECDFN,ECIEN,ECL,ECNT,I,J,ECREC,ECST
"RTN","ECRDSSU",39,0)
 S ECNT=0
"RTN","ECRDSSU",40,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  S ECL=+$P(ECLOC(I),U) D
"RTN","ECRDSSU",41,0)
 . S ECDFN=0
"RTN","ECRDSSU",42,0)
 . F  S ECDFN=+$O(^ECH("ADT",ECL,ECDFN)) Q:'ECDFN  F J=0:0 S J=$O(ECDSSU(J)) Q:'J  S ECD=+$P(ECDSSU(J),U) D
"RTN","ECRDSSU",43,0)
 .. S ECIEN=0
"RTN","ECRDSSU",44,0)
 .. S ECST=ECSTDT
"RTN","ECRDSSU",45,0)
 .. F  S ECST=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST)) Q:'ECST!(ECST>ECENDDT)  F  S ECIEN=+$O(^ECH("ADT",ECL,ECDFN,ECD,ECST,ECIEN)) Q:'ECIEN  D
"RTN","ECRDSSU",46,0)
 ... S ECREC=$G(^ECH(ECIEN,0))
"RTN","ECRDSSU",47,0)
 ... I ECD=+$P(ECREC,"^",7) D CRETMP
"RTN","ECRDSSU",48,0)
 Q
"RTN","ECRDSSU",49,0)
 ;
"RTN","ECRDSSU",50,0)
 ;
"RTN","ECRDSSU",51,0)
CRETMP ;- Create ^TMP("ECRPT" array w/format:
"RTN","ECRDSSU",52,0)
 ;    ^TMP("ECRPT",$J,location,DSS Unit,category,count)=procedure^volume^
"RTN","ECRDSSU",53,0)
 ;                                                         CPT modifiers
"RTN","ECRDSSU",54,0)
 ;
"RTN","ECRDSSU",55,0)
 N ECTC,ECTP,ECMOD,ECMODS,ECMODF,SEQ
"RTN","ECRDSSU",56,0)
 S ECTC=$S(+$P(ECREC,"^",8)=0:-1,1:+$P(ECREC,"^",8)),ECTP=$P($G(ECREC),"^",9)
"RTN","ECRDSSU",57,0)
 S ECNT=ECNT+1,ECTP=$P(ECTP,";")_";"_$E($P(ECTP,";",2),1)
"RTN","ECRDSSU",58,0)
 ;ALB/JAM - Get Procedure CPT modifiers
"RTN","ECRDSSU",59,0)
 S ECMODS="" I $O(^ECH(ECIEN,"MOD",0))'="" D
"RTN","ECRDSSU",60,0)
 . K ECMOD S ECMODF=$$MOD^ECUTL(ECIEN,"I",.ECMOD) I 'ECMODF Q
"RTN","ECRDSSU",61,0)
 . S SEQ="" F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  D
"RTN","ECRDSSU",62,0)
 . . S ECMODS=ECMODS_$S(ECMODS="":"",1:";")_SEQ
"RTN","ECRDSSU",63,0)
 S ^TMP("ECRPT",$J,+$P(ECREC,"^",4),+$P(ECREC,"^",7),ECTC,ECNT)=ECTP_"^"_+$P(ECREC,"^",10)_"^"_ECMODS
"RTN","ECRDSSU",64,0)
 Q
"RTN","ECRDSSU",65,0)
 ;
"RTN","ECRDSSU",66,0)
LOOP ;- Loop through data
"RTN","ECRDSSU",67,0)
 ;
"RTN","ECRDSSU",68,0)
 N ECCAT,ECNT,ECOCAT,ECDSS,ECLOCAT,ECPR,ECVOL,ECMOD
"RTN","ECRDSSU",69,0)
 S (ECNT,ECDSS,ECLOCAT)=0,(ECCAT,ECOCAT)=""
"RTN","ECRDSSU",70,0)
 I '$D(^TMP("ECRPT",$J)) G LOOPQ
"RTN","ECRDSSU",71,0)
 F  S ECLOCAT=$O(^TMP("ECRPT",$J,ECLOCAT)) Q:'ECLOCAT  D
"RTN","ECRDSSU",72,0)
 . F  S ECDSS=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS)) Q:'ECDSS  D
"RTN","ECRDSSU",73,0)
 .. Q:ECQUIT
"RTN","ECRDSSU",74,0)
 .. D PRTCAT Q:ECQUIT
"RTN","ECRDSSU",75,0)
 .. D DSSCHG Q:ECQUIT
"RTN","ECRDSSU",76,0)
 .. S ECOCAT=0
"RTN","ECRDSSU",77,0)
 .. D HDR
"RTN","ECRDSSU",78,0)
 .. D LOCNAM,DSSUNAM
"RTN","ECRDSSU",79,0)
 .. W !!,"Location: ",$G(ECLOCNM),!,"DSS Unit: ",$G(ECDSSNM)
"RTN","ECRDSSU",80,0)
 .. F  S ECCAT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT)) Q:ECCAT=""  D
"RTN","ECRDSSU",81,0)
 ... D CATCHG
"RTN","ECRDSSU",82,0)
 ... Q:ECQUIT
"RTN","ECRDSSU",83,0)
 ... F  S ECNT=$O(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)) Q:'ECNT  D
"RTN","ECRDSSU",84,0)
 .... S (ECPR,ECVOL)=0
"RTN","ECRDSSU",85,0)
 .... S ECPR=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^")
"RTN","ECRDSSU",86,0)
 .... S ECVOL=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",2)
"RTN","ECRDSSU",87,0)
 .... S ECMOD=$P($G(^TMP("ECRPT",$J,ECLOCAT,ECDSS,ECCAT,ECNT)),"^",3)
"RTN","ECRDSSU",88,0)
 .... I '$D(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)) S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECVOL D:ECMOD'="" SETMOD Q
"RTN","ECRDSSU",89,0)
 .... S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)=ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR)+ECVOL D:ECMOD'="" SETMOD
"RTN","ECRDSSU",90,0)
LOOPQ Q
"RTN","ECRDSSU",91,0)
SETMOD ;ALB/JAM - Set CPT modifiers in ECTMP array
"RTN","ECRDSSU",92,0)
 N MOD,I
"RTN","ECRDSSU",93,0)
 F I=1:1 S MOD=$P(ECMOD,";",I) Q:MOD=""  D
"RTN","ECRDSSU",94,0)
 . S ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD)=$G(ECTMP(ECLOCAT,ECDSS,ECCAT,ECPR,MOD))+ECVOL
"RTN","ECRDSSU",95,0)
 Q
"RTN","ECRDSSU",96,0)
 ;
"RTN","ECRDSSU",97,0)
CATCHG ;- Category change
"RTN","ECRDSSU",98,0)
 ;
"RTN","ECRDSSU",99,0)
 I ECCAT=""&(ECOCAT="") G CATCHGQ
"RTN","ECRDSSU",100,0)
 I ECOCAT="" S ECOCAT=ECCAT G CATCHGQ
"RTN","ECRDSSU",101,0)
 I $G(ECOCAT)'=$G(ECCAT) D
"RTN","ECRDSSU",102,0)
 . D PRTCAT
"RTN","ECRDSSU",103,0)
 . S ECOCAT=ECCAT
"RTN","ECRDSSU",104,0)
CATCHGQ Q
"RTN","ECRDSSU",105,0)
 ;
"RTN","ECRDSSU",106,0)
PRTCAT ;- Print category
"RTN","ECRDSSU",107,0)
 ;
"RTN","ECRDSSU",108,0)
 Q:'$D(ECTMP)
"RTN","ECRDSSU",109,0)
 N ECC,ECCATOT,ECDSS,ECFLG,ECLOC,ECPR,ECPRN,ECSYI,ECSYN,ECCNAM,ECPNAM
"RTN","ECRDSSU",110,0)
 N ECCPT,ECPI
"RTN","ECRDSSU",111,0)
 S (ECCATOT,ECDSS,ECFLG,ECLOC)=0,(ECC,ECCNAM,ECPR)=""
"RTN","ECRDSSU",112,0)
 F  S ECLOC=$O(ECTMP(ECLOC)) Q:'ECLOC  F  S ECDSS=$O(ECTMP(ECLOC,ECDSS)) Q:'ECDSS  F  S ECC=$O(ECTMP(ECLOC,ECDSS,ECC)) Q:ECC=""  F  S ECPR=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR)) Q:ECPR=""  D  I ECQUIT Q
"RTN","ECRDSSU",113,0)
 . S ECCNAM=$S($P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^")'="":$P($G(^EC(726,$S(ECC<1:0,1:+ECC),0)),"^"),1:"None")
"RTN","ECRDSSU",114,0)
 . S ECPRN=$S($P(ECPR,";",2)="E":ECPR_"C(725,",1:ECPR_"CPT(")
"RTN","ECRDSSU",115,0)
 . S ECSYI=+$O(^ECJ("AP",ECLOC,ECDSS,$S(ECC<1:0,1:+ECC),ECPRN,0)),ECSYN=$P($G(^ECJ(ECSYI,"PRO")),"^",2)
"RTN","ECRDSSU",116,0)
 . S ECPI=""
"RTN","ECRDSSU",117,0)
 . S ECCPT=$S($P(ECPR,";",2)="I":+ECPR,1:$P($G(^EC(725,+ECPR,0)),"^",5))
"RTN","ECRDSSU",118,0)
 . I ECCPT'="" S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECENDDT,".")),ECCPT=$P(ECPI,"^",2)
"RTN","ECRDSSU",119,0)
 . S ECPNAM=$S($P(ECPR,";",2)="E":$G(^EC(725,+$P(ECPR,";"),0)),$P(ECPR,";",2)="I":$P(ECPI,"^",3),1:"") S:$P(ECPR,";",2)="E" ECPNAM=$P(ECPNAM,"^",2)_" "_$P(ECPNAM,"^")
"RTN","ECRDSSU",120,0)
 . Q:ECQUIT
"RTN","ECRDSSU",121,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",122,0)
 . W:'ECFLG !!?1,"Category:",!?2,ECCNAM S ECFLG=1
"RTN","ECRDSSU",123,0)
 . W !?3,ECCPT,?9,$E(ECPNAM,1,35),?46,$S(ECSYN]"":$E(ECSYN,1,21),1:""),?69,$J($P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^"),6)
"RTN","ECRDSSU",124,0)
 . S ECCATOT=ECCATOT+$P($G(ECTMP(ECLOC,ECDSS,ECC,ECPR)),"^")
"RTN","ECRDSSU",125,0)
 . I $O(ECTMP(ECLOC,ECDSS,ECC,ECPR,""))'="" D PRTMOD I ECQUIT Q
"RTN","ECRDSSU",126,0)
 G:ECQUIT PRTCATQ
"RTN","ECRDSSU",127,0)
 I $Y>(IOSL-8) D PAUSE G:ECQUIT PRTCATQ D HDR
"RTN","ECRDSSU",128,0)
 W !?69,"------"
"RTN","ECRDSSU",129,0)
 W !?6,"Total Procedures for ",ECCNAM,?69,$J(ECCATOT,6),!
"RTN","ECRDSSU",130,0)
 S ECDSSTOT=ECDSSTOT+ECCATOT
"RTN","ECRDSSU",131,0)
PRTCATQ K ECTMP
"RTN","ECRDSSU",132,0)
 Q
"RTN","ECRDSSU",133,0)
 ;
"RTN","ECRDSSU",134,0)
PRTMOD ;ALB/JAM - Print CPT modifiers
"RTN","ECRDSSU",135,0)
 N MOD,IEN,MODESC,MODI S IEN=""
"RTN","ECRDSSU",136,0)
 F  S IEN=$O(ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN)) Q:IEN=""  D
"RTN","ECRDSSU",137,0)
 . I $Y>(IOSL-5) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",138,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"I",$P(ECENDDT,"."))
"RTN","ECRDSSU",139,0)
 . S MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRDSSU",140,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="" S MODESC="Unknown"
"RTN","ECRDSSU",141,0)
 . W !?7,"- ",MOD," ",$E(MODESC,1,40)," ("
"RTN","ECRDSSU",142,0)
 . W ECTMP(ECLOC,ECDSS,ECC,ECPR,IEN),")"
"RTN","ECRDSSU",143,0)
 Q
"RTN","ECRDSSU",144,0)
 ;
"RTN","ECRDSSU",145,0)
DSSCHG ;- DSS Unit change
"RTN","ECRDSSU",146,0)
 ;
"RTN","ECRDSSU",147,0)
 Q:'$G(ECDSSTOT)
"RTN","ECRDSSU",148,0)
 I ECDSSTOT>0 D
"RTN","ECRDSSU",149,0)
 . I $Y>(IOSL-8) D PAUSE Q:ECQUIT  D HDR
"RTN","ECRDSSU",150,0)
 . W !!?69,"======"
"RTN","ECRDSSU",151,0)
 . W !?6,"Total Procedures for ",$G(ECDSSNM),?69,$J(ECDSSTOT,6)
"RTN","ECRDSSU",152,0)
 . S ECDSSTOT=0,(ECLOCNM,ECDSSNM)=""
"RTN","ECRDSSU",153,0)
 . D PAUSE
"RTN","ECRDSSU",154,0)
 Q
"RTN","ECRDSSU",155,0)
 ;
"RTN","ECRDSSU",156,0)
HDR ;- Report header
"RTN","ECRDSSU",157,0)
 ;
"RTN","ECRDSSU",158,0)
 I ECCRT!(ECPAGE) W @IOF
"RTN","ECRDSSU",159,0)
 S ECPAGE=ECPAGE+1
"RTN","ECRDSSU",160,0)
 W !,?((IOM-32)\2),"DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",161,0)
 W !,?((IOM-40)\2),"Date Range: "_$$FMTE^XLFDT($P((ECSTDT+.0001),"."))_" to "_$$FMTE^XLFDT($P(ECENDDT,"."))
"RTN","ECRDSSU",162,0)
 W !!,"Run Date: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","ECRDSSU",163,0)
 W ?65,"    Page: ",ECPAGE
"RTN","ECRDSSU",164,0)
 W !!?3,"CPT Code",?13,"Description",?46,"Synonym",?69,"Volume"
"RTN","ECRDSSU",165,0)
 W !?7,"CPT Modifier (volume of modifiers use)"
"RTN","ECRDSSU",166,0)
 W !,$TR($J("",79)," ","-")
"RTN","ECRDSSU",167,0)
 Q
"RTN","ECRDSSU",168,0)
 ;
"RTN","ECRDSSU",169,0)
 ;
"RTN","ECRDSSU",170,0)
LOCNAM ;- Get location name
"RTN","ECRDSSU",171,0)
 ;
"RTN","ECRDSSU",172,0)
 N I
"RTN","ECRDSSU",173,0)
 F I=0:0 S I=$O(ECLOC(I)) Q:'I  I $P($G(ECLOC(I)),"^")=ECLOCAT S ECLOCNM=$P(ECLOC(I),"^",2)
"RTN","ECRDSSU",174,0)
 Q
"RTN","ECRDSSU",175,0)
 ;
"RTN","ECRDSSU",176,0)
 ;
"RTN","ECRDSSU",177,0)
DSSUNAM ;- Get DSS Unit name
"RTN","ECRDSSU",178,0)
 ;
"RTN","ECRDSSU",179,0)
 N I
"RTN","ECRDSSU",180,0)
 F I=0:0 S I=$O(ECDSSU(I)) Q:'I  I $P($G(ECDSSU(I)),"^")=ECDSS S ECDSSNM=$P(ECDSSU(I),"^",2)
"RTN","ECRDSSU",181,0)
 Q
"RTN","ECRDSSU",182,0)
 ;
"RTN","ECRDSSU",183,0)
 ;
"RTN","ECRDSSU",184,0)
PAUSE ;- Pause for screen output
"RTN","ECRDSSU",185,0)
 Q:'ECCRT
"RTN","ECRDSSU",186,0)
 N DIR,DIRUT,DUOUT
"RTN","ECRDSSU",187,0)
 I IOSL<30 F  W ! Q:$Y>(IOSL-4)
"RTN","ECRDSSU",188,0)
 W ! S DIR(0)="E" D ^DIR I $D(DIRUT)!($D(DUOUT)) S ECQUIT=1
"RTN","ECRDSSU",189,0)
 Q
"RTN","ECRDSSU",190,0)
 ;
"RTN","ECRDSSU",191,0)
 ;
"RTN","ECRDSSU",192,0)
ASKDEV() ;- Ask device for printing or queuing report
"RTN","ECRDSSU",193,0)
 ;  Input:     None
"RTN","ECRDSSU",194,0)
 ;
"RTN","ECRDSSU",195,0)
 ; Output:     1 if report is printed
"RTN","ECRDSSU",196,0)
 ;             0 if report is queued (or exited out)
"RTN","ECRDSSU",197,0)
 ;
"RTN","ECRDSSU",198,0)
 N ECX,ZTDESC,ZTRTN,ZTSAVE
"RTN","ECRDSSU",199,0)
 S ECX=1
"RTN","ECRDSSU",200,0)
 K %ZIS S %ZIS="QMP"
"RTN","ECRDSSU",201,0)
 D ^%ZIS
"RTN","ECRDSSU",202,0)
 S:POP ECX=0
"RTN","ECRDSSU",203,0)
 I ECX&($D(IO("Q"))) D
"RTN","ECRDSSU",204,0)
 . S ZTRTN="STRPT^ECRDSSU",ZTDESC="DSS UNIT WORKLOAD SUMMARY REPORT"
"RTN","ECRDSSU",205,0)
 . S (ZTSAVE("ECLOC("),ZTSAVE("ECDSSU("),ZTSAVE("ECSTDT"),ZTSAVE("ECENDDT"))=""
"RTN","ECRDSSU",206,0)
 . D ^%ZTLOAD
"RTN","ECRDSSU",207,0)
 . D HOME^%ZIS
"RTN","ECRDSSU",208,0)
 . S ECX=0
"RTN","ECRDSSU",209,0)
 Q ECX
"RTN","ECRPRSN")
0^10^B81423223^B81491244
"RTN","ECRPRSN",1,0)
ECRPRSN ;ALB/JAP - Procedure Reasons Report;18 Aug 97
"RTN","ECRPRSN",2,0)
 ;;2.0; EVENT CAPTURE ;**5,18,47,63,72**;8 May 96
"RTN","ECRPRSN",3,0)
EN ;entry point from menu option
"RTN","ECRPRSN",4,0)
 N JJ
"RTN","ECRPRSN",5,0)
 W ! S JJ=$$ASKLOC^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",6,0)
 W ! S JJ=$$ASKDSS^ECRUTL I 'JJ G EXIT
"RTN","ECRPRSN",7,0)
 W ! S JJ=$$ASKREAS() I 'JJ G EXIT
"RTN","ECRPRSN",8,0)
 W !
"RTN","ECRPRSN",9,0)
 D RANGE
"RTN","ECRPRSN",10,0)
 I '$G(ECLOOP)!'$G(ECSD)!'$G(ECED) G EXIT
"RTN","ECRPRSN",11,0)
 W ! D DEVICE I POP G EXIT
"RTN","ECRPRSN",12,0)
 I $G(ZTSK) G EXIT
"RTN","ECRPRSN",13,0)
 I $G(IO("Q")),'$G(ZTSK) G EXIT
"RTN","ECRPRSN",14,0)
 D START,HOME^%ZIS
"RTN","ECRPRSN",15,0)
 G EXIT
"RTN","ECRPRSN",16,0)
 Q
"RTN","ECRPRSN",17,0)
START ;queued entry point or continuation
"RTN","ECRPRSN",18,0)
 D PROCESS
"RTN","ECRPRSN",19,0)
 U IO D PRINT Q:$D(ECGUI)
"RTN","ECRPRSN",20,0)
 I IO'=IO(0) D ^%ZISC
"RTN","ECRPRSN",21,0)
 I $D(ZTQUEUED) S ZTREQ="@" D EXIT
"RTN","ECRPRSN",22,0)
 Q
"RTN","ECRPRSN",23,0)
ASKREAS()        ; Ask reasons
"RTN","ECRPRSN",24,0)
 ;   output: ECREAS array; contains set of reason iens
"RTN","ECRPRSN",25,0)
 N DIRUT,DUOUT,DTOUT,Y,DIR,A,P,R,S,JJ,KK,NLOC,NUNIT,LINK,ECREAS,E
"RTN","ECRPRSN",26,0)
 ;setup array of associated reason iens for the locations/units included
"RTN","ECRPRSN",27,0)
 W !!,"Just a moment please..."
"RTN","ECRPRSN",28,0)
 W !,?5,"...finding Procedure Reasons related to the"
"RTN","ECRPRSN",29,0)
 W !,?5,"   Location(s) and DSS Unit(s) you selected...",!
"RTN","ECRPRSN",30,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",31,0)
 .S NLOC=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",32,0)
 .S KK="" F  S KK=$O(ECDSSU(KK)) Q:KK=""  S NUNIT=$P(ECDSSU(KK),"^",1),A(NLOC_"-"_NUNIT)=""
"RTN","ECRPRSN",33,0)
 S P=""
"RTN","ECRPRSN",34,0)
 F  S P=$O(^ECJ("B",P)) Q:P=""  I $D(A($P(P,"-",1,2))) S I=$O(^ECJ("B",P,"")),S(I)=""
"RTN","ECRPRSN",35,0)
 K A S P="" F  S P=$O(^ECL("AD",P)) Q:P=""  I $D(S(P)) S R="" D
"RTN","ECRPRSN",36,0)
 .F  S R=$O(^ECL("AD",P,R)) Q:R=""  D
"RTN","ECRPRSN",37,0)
 ..S LINK=$O(^ECL("AD",P,R,"")),ECLINK(LINK)=R
"RTN","ECRPRSN",38,0)
 ..S ECREAS(R)=$P($G(^ECR(R,0)),"^",1)
"RTN","ECRPRSN",39,0)
 ..I ECREAS(R)="" K ECREAS(R),ECLINK(LINK)
"RTN","ECRPRSN",40,0)
 K S
"RTN","ECRPRSN",41,0)
 ;ask the user to include all reasons or selected reasons
"RTN","ECRPRSN",42,0)
 ;already have all reasons in ecreas array
"RTN","ECRPRSN",43,0)
 S ASK=1
"RTN","ECRPRSN",44,0)
 S DIR(0)="YA",DIR("A")="Do you want to print this report for all Procedure Reasons? "
"RTN","ECRPRSN",45,0)
 S DIR("B")="YES" W ! D ^DIR K DIR I Y=0,'$G(DIRUT) D SPECR
"RTN","ECRPRSN",46,0)
 I $G(DIRUT)!(Y=0) S ASK=0 K ECREAS
"RTN","ECRPRSN",47,0)
 ;display user selections
"RTN","ECRPRSN",48,0)
 I $D(ECREAS)>1 D
"RTN","ECRPRSN",49,0)
 .W @IOF S E=0 W !,"Selected Procedure Reasons --",!
"RTN","ECRPRSN",50,0)
 .S R="" F  S R=$O(ECREAS(R)) Q:R=""  D  I E Q
"RTN","ECRPRSN",51,0)
 ..I $Y+3>IOSL S DIR(0)="E" D ^DIR K DIR S:'Y E=1 Q:'Y  D
"RTN","ECRPRSN",52,0)
 ...W @IOF,!,"Selected Procedure Reasons (cont.) --",!
"RTN","ECRPRSN",53,0)
 ..W !,?5,ECREAS(R)
"RTN","ECRPRSN",54,0)
 .Q:E  S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",55,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",56,0)
 Q ASK
"RTN","ECRPRSN",57,0)
SPECR ;specific reasons
"RTN","ECRPRSN",58,0)
 N R,DUOUT,DTOUT
"RTN","ECRPRSN",59,0)
 K DIRUT,Y
"RTN","ECRPRSN",60,0)
 S DIR(0)="YA",DIR("A")="Do you want to include only specific Procedure Reasons in this report? ",DIR("B")="YES"
"RTN","ECRPRSN",61,0)
 S DIR("?")="Enter YES to select specific Procedure Reasons or NO to quit."
"RTN","ECRPRSN",62,0)
 W ! D ^DIR K DIR Q:$G(DIRUT)!(Y=0)
"RTN","ECRPRSN",63,0)
 ;select subset of possible reasons
"RTN","ECRPRSN",64,0)
 K DIRUT,DTOUT,DUOUT,Y
"RTN","ECRPRSN",65,0)
 F  D  Q:$G(DIRUT)!(Y=-1)
"RTN","ECRPRSN",66,0)
 .S DIC=720.4,DIC("A")="Select a Procedure Reason to include: ",DIC(0)="QAEM"
"RTN","ECRPRSN",67,0)
 .S DIC("S")="I $D(ECREAS(+Y))"
"RTN","ECRPRSN",68,0)
 .W ! D ^DIC Q:$G(DUOUT)!$G(DTOUT)!(Y=-1)
"RTN","ECRPRSN",69,0)
 .S R(+Y)=""
"RTN","ECRPRSN",70,0)
 S:$G(DTOUT)!($G(DUOUT)) DIRUT=1
"RTN","ECRPRSN",71,0)
 Q:$G(DIRUT)
"RTN","ECRPRSN",72,0)
 ;delete reasons from ecreas array which were not selected
"RTN","ECRPRSN",73,0)
 I $D(R)<10 S Y=0 Q
"RTN","ECRPRSN",74,0)
 S R="" F  S R=$O(ECREAS(R)) Q:R=""  I '$D(R(R)) K ECREAS(R)
"RTN","ECRPRSN",75,0)
 ;delete links from eclink array for reasons not selected
"RTN","ECRPRSN",76,0)
 S LINK="" F  S LINK=$O(ECLINK(LINK)) Q:LINK=""  S R=ECLINK(LINK) I '$D(ECREAS(R)) K ECLINK(LINK)
"RTN","ECRPRSN",77,0)
 S Y=1
"RTN","ECRPRSN",78,0)
 Q
"RTN","ECRPRSN",79,0)
RANGE ;get any date range
"RTN","ECRPRSN",80,0)
 N ECSTDT,ECENDDT
"RTN","ECRPRSN",81,0)
 W !!!,?5,"Enter a Begin Date and End Date for the Event Capture "
"RTN","ECRPRSN",82,0)
 W !,?5,"Procedure Reason Report.",!
"RTN","ECRPRSN",83,0)
 S (ECSD,ECED)=0
"RTN","ECRPRSN",84,0)
 F  D  Q:ECSD>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",85,0)
 .S ECLOOP=$$STDT^ECRUTL() I 'ECLOOP Q
"RTN","ECRPRSN",86,0)
 .S ECSD=ECSTDT
"RTN","ECRPRSN",87,0)
 Q:'$G(ECLOOP)!'$G(ECSD)
"RTN","ECRPRSN",88,0)
 F  D  Q:ECED>0  Q:'$G(ECLOOP)
"RTN","ECRPRSN",89,0)
 .S ECLOOP=$$ENDDT^ECRUTL(ECSTDT) I 'ECLOOP Q
"RTN","ECRPRSN",90,0)
 .S ECED=ECENDDT
"RTN","ECRPRSN",91,0)
 .I ECED>(DT+1) D
"RTN","ECRPRSN",92,0)
 ..W !!,?15,"The End Date for this report may not be"
"RTN","ECRPRSN",93,0)
 ..W !,?15,"a future date.  Try again...",!
"RTN","ECRPRSN",94,0)
 ..S ECED=0
"RTN","ECRPRSN",95,0)
 Q 
"RTN","ECRPRSN",96,0)
 ;
"RTN","ECRPRSN",97,0)
DEVICE ;select output device
"RTN","ECRPRSN",98,0)
 W ! K IOP,ZTSK S %ZIS="QM" D ^%ZIS
"RTN","ECRPRSN",99,0)
 I POP W !!,"No device selected.  Exiting...",!! S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",100,0)
 I $D(IO("Q")) D
"RTN","ECRPRSN",101,0)
 .S ZTRTN="START^ECRPRSN",ZTDESC="EC Procedure Reason Report"
"RTN","ECRPRSN",102,0)
 .S ZTSAVE("ECSD")="",ZTSAVE("ECED")="",ZTSAVE("ECLOC(")="",ZTSAVE("ECDSSU(")="",ZTSAVE("ECLINK(")=""
"RTN","ECRPRSN",103,0)
 .D ^%ZTLOAD D HOME^%ZIS
"RTN","ECRPRSN",104,0)
 .I '$G(ZTSK) W !,"Report canceled..." S DIR(0)="E" W ! D ^DIR K DIR Q
"RTN","ECRPRSN",105,0)
 .W !,"Report queued as Task #: ",ZTSK S DIR(0)="E" W ! D ^DIR K DIR
"RTN","ECRPRSN",106,0)
 Q
"RTN","ECRPRSN",107,0)
 ;
"RTN","ECRPRSN",108,0)
PROCESS ;get data to print
"RTN","ECRPRSN",109,0)
 N EC,ECD,ECDA,ECPA,ECR,ECRL,ECRN,ECPATN,ECSS,ECSSN,ECP,ECPN,ECLOCA
"RTN","ECRPRSN",110,0)
 N ECUNIT,ECCAT,ECFILE,ECPSY,ECPSYN,ECPRV,ECPRVN,ECDFN,ECCPT,ECDESC
"RTN","ECRPRSN",111,0)
 N NLOC,NUNIT,JJ,ECMOD,ECMD,ECMODF,EC725
"RTN","ECRPRSN",112,0)
 K ^TMP("ECREAS",$J)
"RTN","ECRPRSN",113,0)
 ;if ecreas array doesn't exist, quit
"RTN","ECRPRSN",114,0)
 I $D(ECLINK)<10 Q
"RTN","ECRPRSN",115,0)
 ;put locations and units into ien subscripted arrays
"RTN","ECRPRSN",116,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",117,0)
 .S NLOC($P(ECLOC(JJ),"^",1))=$P(ECLOC(JJ),"^",2)
"RTN","ECRPRSN",118,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",119,0)
 .S NUNIT($P(ECDSSU(JJ),"^",1))=$P(ECDSSU(JJ),"^",2)
"RTN","ECRPRSN",120,0)
 S ECD=ECSD F  S ECD=$O(^ECH("AC",ECD)) Q:'ECD  Q:ECD>ECED  D
"RTN","ECRPRSN",121,0)
 .S ECDA="" F  S ECDA=$O(^ECH("AC",ECD,ECDA)) Q:'ECDA  S EC=$G(^ECH(ECDA,0))  I $P(EC,"^",23)'="" D
"RTN","ECRPRSN",122,0)
 ..S ECDFN=$P(EC,"^")
"RTN","ECRPRSN",123,0)
 ..I $P(EC,"^",3)<ECSD!($P(EC,"^",3)>ECED) Q  ;file or x-ref problem
"RTN","ECRPRSN",124,0)
 ..S ECLOCA=+$P(EC,U,4),ECUNIT=+$P(EC,U,7)
"RTN","ECRPRSN",125,0)
 ..I '$D(NLOC(ECLOCA))!('$D(NUNIT(ECUNIT))) Q
"RTN","ECRPRSN",126,0)
 ..S ECRL=$P(EC,"^",23) Q:'$D(ECLINK(ECRL))  S ECR=ECLINK(ECRL),ECRN=$P($G(^ECR(ECR,0)),"^") Q:ECRN']""
"RTN","ECRPRSN",127,0)
 ..S ECP=$P(EC,U,9) Q:ECP']""
"RTN","ECRPRSN",128,0)
 ..S ECCAT=+$P(EC,U,8),ECPSY=+$O(^ECJ("AP",ECLOCA,ECUNIT,ECCAT,ECP,""))
"RTN","ECRPRSN",129,0)
 ..S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECPI=""
"RTN","ECRPRSN",130,0)
 ..S ECFILE=$P(ECP,";",2),ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"UNKNOWN")
"RTN","ECRPRSN",131,0)
 ..S ECCPT=$S(ECFILE=81:+ECP,1:$P($G(^EC(725,+ECP,0)),"^",5))
"RTN","ECRPRSN",132,0)
 ..I ECCPT'="" D
"RTN","ECRPRSN",133,0)
 ...S ECPI=$$CPT^ICPTCOD(ECCPT,$P(ECED,".")) I +ECPI>1 S ECCPT=$P(ECPI,"^",2)_" "
"RTN","ECRPRSN",134,0)
 ..I ECFILE="UNKNOWN" S ECPN="UNKNOWN"
"RTN","ECRPRSN",135,0)
 ..I ECFILE=81 S ECPN=$S($P(ECPI,"^",3)]"":$P(ECPI,"^",3),1:"UNKNOWN")
"RTN","ECRPRSN",136,0)
 ..I ECFILE=725 S EC725=$G(^EC(725,+ECP,0)),ECPN=$P(EC725,"^",2)_" "_$P(EC725,"^")
"RTN","ECRPRSN",137,0)
 ..Q:ECPN=""
"RTN","ECRPRSN",138,0)
 ..S ECDESC=$J(ECCPT_" ",6)_$E(ECPN,1,40)_$S(ECPSYN]"":" ["_ECPSYN_"] ",1:"")
"RTN","ECRPRSN",139,0)
 ..S (ECPA,ECPATN,ECSS)="",ECPA=$G(^DPT(+$P(EC,"^",2),0)) Q:ECPA=""
"RTN","ECRPRSN",140,0)
 ..S ECPATN=$E($P(ECPA,"^",1),1,24),ECSS=$P(ECPA,"^",9)
"RTN","ECRPRSN",141,0)
 ..S:+ECSS ECSSN=$E(ECSS,6,9) S:ECSS="" ECSSN="UNKNOWN"
"RTN","ECRPRSN",142,0)
 ..S:ECPATN="" ECPATN="UNKNOWN" S ECPATN=ECPATN_"^"_ECSSN
"RTN","ECRPRSN",143,0)
 ..S (ECPRV,ECPRVN)="",ECPRV=$$GETPPRV^ECPRVMUT(ECDA,.ECPRVN),ECPRVN=$S(ECPRV:"UNKNOWN",1:ECPRVN)
"RTN","ECRPRSN",144,0)
 ..S ECMD="" I $O(^ECH(ECDA,"MOD",0))'="" D  ;ALB/JAM - Get CPT modifiers
"RTN","ECRPRSN",145,0)
 ...K ECMOD S ECMODF=$$MOD^ECUTL(ECDA,"I",.ECMOD),SEQ="" I 'ECMODF Q
"RTN","ECRPRSN",146,0)
 ...F  S SEQ=$O(ECMOD(SEQ)) Q:SEQ=""  S ECMD=ECMD_$S(ECMD="":"",1:";")_$P(ECMOD(SEQ),"^",2)
"RTN","ECRPRSN",147,0)
 ..I ECMD="" S ECMD="NOMOD"
"RTN","ECRPRSN",148,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15))=ECDESC
"RTN","ECRPRSN",149,0)
 ..S ^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECRN,$E(ECPN,1,15),ECMD,ECDFN,ECD)=ECPRVN_"^"_ECPATN
"RTN","ECRPRSN",150,0)
 ..;where ecloca, ecunit,ecdfn are iens, ecdt is internal format
"RTN","ECRPRSN",151,0)
 Q
"RTN","ECRPRSN",152,0)
PRINT ;output report
"RTN","ECRPRSN",153,0)
 N ECLOCA,ECUNIT,ECREASN,ECDT,ECED2,ECSD2,ECPATN,ECPN,ECPRVN,SEQ,X,Y,SSN
"RTN","ECRPRSN",154,0)
 N PAGE,QFLAG,DASH,PRNTDT,JJ,SS,ALOC,AUNIT,DATE,LOC,UNIT,PTNAME,PROVN,ECDESC
"RTN","ECRPRSN",155,0)
 S (PAGE,QFLAG)=0 S $P(DASH,"-",80)=""
"RTN","ECRPRSN",156,0)
 S Y=$P(ECSD,".",1)+1 D DD^%DT S ECSD2=Y S Y=$P(ECED,".",1) D DD^%DT S ECED2=Y
"RTN","ECRPRSN",157,0)
 D NOW^%DTC S Y=$E(%,1,12) D DD^%DT S PRNTDT=Y
"RTN","ECRPRSN",158,0)
 ;if no data exists then print the header and quit
"RTN","ECRPRSN",159,0)
 I '$D(^TMP("ECREAS",$J)) D  Q
"RTN","ECRPRSN",160,0)
 .S (LOC,UNIT)="" D HEAD
"RTN","ECRPRSN",161,0)
 .W !!,?6,"No data for the date range specified.",!!
"RTN","ECRPRSN",162,0)
 .I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR K DIR
"RTN","ECRPRSN",163,0)
 ..S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",164,0)
 .W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",165,0)
 ;if there's data in ^TMP then need to present the data alphabetically;
"RTN","ECRPRSN",166,0)
 ;put locations and units in alpha ordered array
"RTN","ECRPRSN",167,0)
 S JJ="" F  S JJ=$O(ECLOC(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",168,0)
 .S ALOC($P(ECLOC(JJ),"^",2))=$P(ECLOC(JJ),"^",1)
"RTN","ECRPRSN",169,0)
 S JJ="" F  S JJ=$O(ECDSSU(JJ)) Q:JJ=""  D
"RTN","ECRPRSN",170,0)
 .S AUNIT($P(ECDSSU(JJ),"^",2))=$P(ECDSSU(JJ),"^",1)
"RTN","ECRPRSN",171,0)
 ;process the ^TMP global data in alpha order for location and unit
"RTN","ECRPRSN",172,0)
 S LOC="" F  S LOC=$O(ALOC(LOC)) Q:LOC=""  S ECLOCA=ALOC(LOC) D  Q:QFLAG
"RTN","ECRPRSN",173,0)
 .S UNIT="" F  S UNIT=$O(AUNIT(UNIT)) Q:UNIT=""  S ECUNIT=AUNIT(UNIT) D  Q:QFLAG
"RTN","ECRPRSN",174,0)
 ..;always start a location at top of page
"RTN","ECRPRSN",175,0)
 ..I $D(^TMP("ECREAS",$J,ECLOCA,ECUNIT)) D HEAD D LOOP
"RTN","ECRPRSN",176,0)
 ;all done
"RTN","ECRPRSN",177,0)
 I $E(IOST)="C"&('QFLAG) S DIR(0)="E" D  D ^DIR W @IOF
"RTN","ECRPRSN",178,0)
 .S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",179,0)
 W:$E(IOST)'="C" @IOF
"RTN","ECRPRSN",180,0)
 Q
"RTN","ECRPRSN",181,0)
LOOP ;print the section of the ^tmp global for a specific location/unit
"RTN","ECRPRSN",182,0)
 S ECREASN=""
"RTN","ECRPRSN",183,0)
 F  S ECREASN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN)) Q:ECREASN=""  Q:QFLAG  D
"RTN","ECRPRSN",184,0)
 .D:($Y+3>IOSL) HEAD Q:QFLAG  W !!,"Reason: ",ECREASN,! S ECPN=""
"RTN","ECRPRSN",185,0)
 .F  S ECPN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)) Q:ECPN=""  Q:QFLAG  D
"RTN","ECRPRSN",186,0)
 ..S ECDESC=$G(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN)),ECMOD=""
"RTN","ECRPRSN",187,0)
 ..F  S ECMOD=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD)) Q:ECMOD=""  D  Q:QFLAG
"RTN","ECRPRSN",188,0)
 ...W !,?3,"Procedure: ",ECDESC D:ECMOD'="NOMOD" MODPRT Q:QFLAG  D LOOP1
"RTN","ECRPRSN",189,0)
 Q
"RTN","ECRPRSN",190,0)
LOOP1 S ECPATN="" F  S ECPATN=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN)) Q:ECPATN=""  Q:QFLAG  D
"RTN","ECRPRSN",191,0)
 .S ECDT="" F  S ECDT=$O(^TMP("ECREAS",$J,ECLOCA,ECUNIT,ECREASN,ECPN,ECMOD,ECPATN,ECDT)) Q:ECDT=""  Q:QFLAG  D
"RTN","ECRPRSN",192,0)
 ..S ECPRVN=^(ECDT),PTNAME=$P(ECPRVN,"^",2),PTNAME=$E(PTNAME,1,22)
"RTN","ECRPRSN",193,0)
 ..S SSN=$P(ECPRVN,"^",3),ECPRVN=$P(ECPRVN,"^")
"RTN","ECRPRSN",194,0)
 ..S Y=ECDT D DD^%DT S DATE=$E(Y,1,18),PROVN=$E(ECPRVN,1,22)
"RTN","ECRPRSN",195,0)
 ..D:($Y+3>IOSL) HEAD Q:QFLAG  W !,?6,PTNAME,?30,SSN,?37,DATE,?57,PROVN
"RTN","ECRPRSN",196,0)
 W !
"RTN","ECRPRSN",197,0)
 Q
"RTN","ECRPRSN",198,0)
MODPRT ;ALB/JAM - print CPT procedure modifiers
"RTN","ECRPRSN",199,0)
 N MOD,I,MODESC,IEN,MODI
"RTN","ECRPRSN",200,0)
 W !?4,"Modifier: "
"RTN","ECRPRSN",201,0)
 F I=1:1 S IEN=$P(ECMOD,";",I) Q:IEN=""  D  I QFLAG Q
"RTN","ECRPRSN",202,0)
 . S MODI=$$MOD^ICPTMOD(IEN,"E",$P(ECED,".")),MOD=$P(MODI,"^",2) I MOD="" Q
"RTN","ECRPRSN",203,0)
 . S MODESC=$P(MODI,"^",3) I MODESC="UNKNOWN" Q
"RTN","ECRPRSN",204,0)
 . W:I>1 ! W ?18,"- ",MOD," ",MODESC I ($Y+3)>IOSL D HEAD
"RTN","ECRPRSN",205,0)
 Q
"RTN","ECRPRSN",206,0)
HEAD ;header
"RTN","ECRPRSN",207,0)
 I $E(IOST)="C" S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECRPRSN",208,0)
 I $E(IOST)="C",PAGE>0 S DIR(0)="E" W ! D ^DIR K DIR I 'Y S QFLAG=1 Q
"RTN","ECRPRSN",209,0)
 W:$Y!($E(IOST)="C") @IOF
"RTN","ECRPRSN",210,0)
 S PAGE=PAGE+1
"RTN","ECRPRSN",211,0)
 W !,?12,"Event Capture Procedure Reason Report"
"RTN","ECRPRSN",212,0)
 W !,?12,"for the Date Range ",$$FMTE^XLFDT(ECSD2)," to ",$$FMTE^XLFDT(ECED2),!
"RTN","ECRPRSN",213,0)
 W !,?3,"DSS Unit: ",UNIT,?55,"Page: ",PAGE
"RTN","ECRPRSN",214,0)
 W !,?3,"Location: ",LOC,?52,"Printed: "_PRNTDT,!
"RTN","ECRPRSN",215,0)
 W !?6,"Patient",?30,"SSN",?37,"Date/Time",?57,"Provider"
"RTN","ECRPRSN",216,0)
 W !,DASH
"RTN","ECRPRSN",217,0)
 Q
"RTN","ECRPRSN",218,0)
EXIT ;common exit point
"RTN","ECRPRSN",219,0)
 D ^ECKILL D:'$D(ECGUI) ^%ZISC
"RTN","ECRPRSN",220,0)
 K ^TMP("ECREAS",$J) K JJ,X,Y,ZTSK,IO("Q"),DIR,DIRUT,DTOUT,DUOUT,ECSD
"RTN","ECRPRSN",221,0)
 K ECED,ECLOOP,ECLOC,ECDSSU,ECLINK,ASK,DIC
"RTN","ECRPRSN",222,0)
 Q
"RTN","ECRRPC")
0^2^B12303108^B10912061
"RTN","ECRRPC",1,0)
ECRRPC ;ALB/JAM;Event Capture Report RPC Broker ;Sep 5, 2000
"RTN","ECRRPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47,61,72**;8 May 96
"RTN","ECRRPC",3,0)
 ;
"RTN","ECRRPC",4,0)
RPTEN(RESULTS,ECARY) ;RPC Broker entry point for EC Reports
"RTN","ECRRPC",5,0)
 ;All EC GUI reports will call this line tag
"RTN","ECRRPC",6,0)
 ;        RPC: EC REPORTS
"RTN","ECRRPC",7,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECRRPC",8,0)
 ;          ECDEV  - Print to queue, if device
"RTN","ECRRPC",9,0)
 ;          ECQDT  - Queue to print (date/time), optional
"RTN","ECRRPC",10,0)
 ;
"RTN","ECRRPC",11,0)
 ;OUTPUTS  RESULTS - Array of help text in the HELP FRAM File (#9.2)
"RTN","ECRRPC",12,0)
 ;
"RTN","ECRRPC",13,0)
 N HLPDA,HND,ECSTR,ECFILER,ECERR,ECDIRY,ECUFILE,ECGUI
"RTN","ECRRPC",14,0)
 D SETENV^ECUMRPC
"RTN","ECRRPC",15,0)
 S ECERR=0,ECGUI=1 D PARSE,CHKDT I ECERR Q
"RTN","ECRRPC",16,0)
 K ^TMP("ECMSG",$J),^TMP($J,"ECRPT")
"RTN","ECRRPC",17,0)
 D  I ECERR D END Q
"RTN","ECRRPC",18,0)
 . I ECPTYP="D" D HFSOPEN(ECHNDL) Q
"RTN","ECRRPC",19,0)
 . I '$D(ECDEV) S ^TMP("ECMSG",$J,1)="0^Device undefined",ECERR=1
"RTN","ECRRPC",20,0)
 S HND=$P($T(@ECHNDL),";;",2) I HND="" D  Q
"RTN","ECRRPC",21,0)
 . S ^TMP("ECMSG",$J,1)="0^Line Tag undefined" D END
"RTN","ECRRPC",22,0)
 S ECQDT=$G(ECQDT,"NOW"),%DT="XT",X=ECQDT D ^%DT  ;Print time
"RTN","ECRRPC",23,0)
 S ECQDT=$S(Y>0:Y,1:"NOW")
"RTN","ECRRPC",24,0)
 D @$P(HND,";",2)
"RTN","ECRRPC",25,0)
 I ECPTYP="D" D HFSCLOSE(ECFILER) ;S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",26,0)
END D KILLVAR
"RTN","ECRRPC",27,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECRRPC",28,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECRRPC",29,0)
 Q
"RTN","ECRRPC",30,0)
 ;
"RTN","ECRRPC",31,0)
PARSE ;Parse data from array for filing
"RTN","ECRRPC",32,0)
 N SUB
"RTN","ECRRPC",33,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  S @SUB=ECARY(SUB)
"RTN","ECRRPC",34,0)
 Q
"RTN","ECRRPC",35,0)
CHKDT ;Required Data Check
"RTN","ECRRPC",36,0)
 N I,C
"RTN","ECRRPC",37,0)
 S C=1
"RTN","ECRRPC",38,0)
 F I="ECHNDL","ECPTYP" D
"RTN","ECRRPC",39,0)
 .I $G(@I)="" S ^TMP("ECMSG",$J,C)="0^Key data missing "_I,C=C+1,ECERR=1
"RTN","ECRRPC",40,0)
 Q
"RTN","ECRRPC",41,0)
KILLVAR ;Kill variables
"RTN","ECRRPC",42,0)
 N SUB
"RTN","ECRRPC",43,0)
 S SUB="" F  S SUB=$O(ECARY(SUB)) Q:SUB=""  K @SUB
"RTN","ECRRPC",44,0)
 K ECARY,POP,ECQDT
"RTN","ECRRPC",45,0)
 Q
"RTN","ECRRPC",46,0)
HFSOPEN(HANDLE) ; 
"RTN","ECRRPC",47,0)
 S ECDIRY=$$GET^XPAR("DIV","EC HFS SCRATCH")
"RTN","ECRRPC",48,0)
 I ECDIRY="" S ECERR=1 D  Q
"RTN","ECRRPC",49,0)
 .S ^TMP("ECMSG",$J,1)="0^A scratch directory for reports doesn't exist"
"RTN","ECRRPC",50,0)
 S ECFILER="EC"_DUZ_".DAT",ECUFILE=ECFILER S ^TMP("JEN",$J,.1)=ECUFILE
"RTN","ECRRPC",51,0)
 D OPEN^%ZISH(HANDLE,ECDIRY,ECFILER,"W") D:POP  Q:POP
"RTN","ECRRPC",52,0)
 .S ECERR=1,^TMP("ECMSG",$J,1)="0^Unable to open file "_ECDIRY_ECFILER
"RTN","ECRRPC",53,0)
 S IOM=132,IOSL=99999,IOST="P-DUMMY",IOF=""""""
"RTN","ECRRPC",54,0)
 Q
"RTN","ECRRPC",55,0)
 ;
"RTN","ECRRPC",56,0)
HFSCLOSE(HANDLE) ; 
"RTN","ECRRPC",57,0)
 N ECDEL
"RTN","ECRRPC",58,0)
 D CLOSE^%ZISH(ECDIRY_HANDLE)
"RTN","ECRRPC",59,0)
 K ^TMP($J)
"RTN","ECRRPC",60,0)
 S ECDEL(ECFILER)=""
"RTN","ECRRPC",61,0)
 S X=$$FTG^%ZISH(ECDIRY,ECFILER,$NAME(^TMP($J,1)),2)
"RTN","ECRRPC",62,0)
 S X=$$DEL^%ZISH(ECDIRY,$NA(ECDEL))
"RTN","ECRRPC",63,0)
 Q
"RTN","ECRRPC",64,0)
ECPAT ;;Patient Summary Report;ECPAT^ECRRPT
"RTN","ECRRPC",65,0)
ECRDSSU ;;DSS Unit Workload Summary;ECRDSSU^ECRRPT
"RTN","ECRRPC",66,0)
ECPROV ;;Provider Summary Report;ECPROV^ECRRPT
"RTN","ECRRPC",67,0)
PROSUM ;;Provider (1-7) Summary Report;PROSUM^ECRRPT
"RTN","ECRRPC",68,0)
ECOSSUM ;;Ordering Section Summary Report;ECOSSUM^ECRRPT
"RTN","ECRRPC",69,0)
ECPCER ;;PCE Data Summary Report;ECPCER^ECRRPT
"RTN","ECRRPC",70,0)
ECRPERS ;;Inactive Person Class Report;ECRPERS^ECRRPT1
"RTN","ECRRPC",71,0)
ECRPRSN ;;Procedure Reason Report;ECRPRSN^ECRRPT1
"RTN","ECRRPC",72,0)
ECDSS1 ;;National/Local Procedure Reports;ECDSS1^ECRRPT1
"RTN","ECRRPC",73,0)
ECDSS3 ;;Category Reports;ECDSS3^ECRRPT1
"RTN","ECRRPC",74,0)
ECSUM ;;Print Category and Procedure Summary (Report);ECSUM^ECRRPT1
"RTN","ECRRPC",75,0)
ECNTPCE ;;Records Failing Transmission to PCE Report;ECNTPCE^ECRRPT1
"RTN","ECRRPC",76,0)
ECSCPT ;;Event Code Screens with CPT Codes;ECSCPT^ECRRPT1
"RTN","ECRRPC",77,0)
ECINCPT ;;National/Local Procedure Codes with Inactive CPT;ECINCPT^ECRRPT1
"RTN","ECRRPT1")
0^3^B50531170^B33119394
"RTN","ECRRPT1",1,0)
ECRRPT1 ;ALB/JAM;Event Capture Report RPC Broker ;Jan 2, 2001
"RTN","ECRRPT1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,33,61,78,72**;8 May 96
"RTN","ECRRPT1",3,0)
 ;
"RTN","ECRRPT1",4,0)
ECRPRSN ;Procedure Reason Report for RPC Call
"RTN","ECRRPT1",5,0)
 ;     Variables passed in
"RTN","ECRRPT1",6,0)
 ;       ECSD     - Start Date or Report
"RTN","ECRRPT1",7,0)
 ;       ECED     - End Date or Report
"RTN","ECRRPT1",8,0)
 ;       ECL      - Location to report (1 or ALL)
"RTN","ECRRPT1",9,0)
 ;       ECD0..n  - DSS Unit to report (1,some or ALL)
"RTN","ECRRPT1",10,0)
 ;       ECRY0..n - Procedure reason (some or ALL)
"RTN","ECRRPT1",11,0)
 ;
"RTN","ECRRPT1",12,0)
 ;     Variable return
"RTN","ECRRPT1",13,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",14,0)
 N ECV,ECI,ECLOC,ECDSSU,ECDN,ECDATE,ECUN,ECNT,ECKEY,ECX,DUZ,ECLINK,ECZ
"RTN","ECRRPT1",15,0)
 N ECROU,ECSAVE,ECDESC,ECW,DIC,X,Y
"RTN","ECRRPT1",16,0)
 S ECV="ECL^ECD0^ECSD^ECED^ECRY0" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",17,0)
 D  I '$D(ECLOC) S ^TMP("ECMSG",$J)="1^Invalid Location." Q
"RTN","ECRRPT1",18,0)
 . I ECL="ALL" D LOCARRY^ECRUTL Q
"RTN","ECRRPT1",19,0)
 . S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC Q:Y<0  S ECLOC(1)=+Y_"^"_$P(Y,U,2)
"RTN","ECRRPT1",20,0)
 D  I '$D(ECDSSU) S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",21,0)
 . I ECD0="ALL" D  Q
"RTN","ECRRPT1",22,0)
 . . I '$D(ECDUZ) Q
"RTN","ECRRPT1",23,0)
 . . S ECKEY=$S($D(^XUSEC("ECALLU",ECDUZ)):1,1:0),DUZ=ECDUZ D ALLU^ECRUTL
"RTN","ECRRPT1",24,0)
 . S (ECI,ECNT)=0 F ECI=0:1 S ECX="ECD"_ECI Q:'$D(@ECX)  D
"RTN","ECRRPT1",25,0)
 . . K DIC S DIC=724,DIC(0)="QNMZX",X=@ECX D ^DIC I Y<0 Q
"RTN","ECRRPT1",26,0)
 . . S ECNT=ECNT+1,ECDSSU(ECNT)=Y
"RTN","ECRRPT1",27,0)
 S ECX=0 D
"RTN","ECRRPT1",28,0)
 .I ECRY0="ALL" D PXREAS Q
"RTN","ECRRPT1",29,0)
 .N TLOC,TDSS,ECY
"RTN","ECRRPT1",30,0)
 .S ECI=0 F  S ECI=$O(ECLOC(ECI)) Q:'ECI  S TLOC(+ECLOC(ECI))=""
"RTN","ECRRPT1",31,0)
 .S ECI=0 F  S ECI=$O(ECDSSU(ECI)) Q:'ECI  S TDSS(+ECDSSU(ECI))=""
"RTN","ECRRPT1",32,0)
 .S ECI=0 F ECI=0:1 S ECZ="ECRY"_ECI Q:'$D(@ECZ)  D
"RTN","ECRRPT1",33,0)
 ..S ECW=0 F  S ECW=$O(^ECL("B",@ECZ,ECW)) Q:'ECW  D
"RTN","ECRRPT1",34,0)
 ...S ECY=$P($G(^ECL(ECW,0)),U,2) Q:ECY=""  S ECJ=$P($G(^ECJ(ECY,0)),U)
"RTN","ECRRPT1",35,0)
 ...Q:ECJ=""  Q:'$D(TLOC($P(ECJ,"-")))  Q:'$D(TDSS($P(ECJ,"-",2)))
"RTN","ECRRPT1",36,0)
 ...S ECLINK(ECW)=$P($G(^ECL(ECW,0)),U)
"RTN","ECRRPT1",37,0)
 D DATECHK^ECRRPT(.ECSD,.ECED) S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",38,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",39,0)
 . S ECV="ECSD^ECED",ECROU="START^ECRPRSN"
"RTN","ECRRPT1",40,0)
 . S (ECSAVE("ECLOC("),ECSAVE("ECDSSU("),ECSAVE("ECLINK("))=""
"RTN","ECRRPT1",41,0)
 . S ECDESC="EC Procedure Reason Report"
"RTN","ECRRPT1",42,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",43,0)
 D START^ECRPRSN,EXIT^ECRPRSN
"RTN","ECRRPT1",44,0)
 Q
"RTN","ECRRPT1",45,0)
PXREAS ;Procedure reason link
"RTN","ECRRPT1",46,0)
 N ECZ,ECX,ECY,ECV
"RTN","ECRRPT1",47,0)
 S ECX=0 F  S ECX=$O(ECLOC(ECX)) Q:'ECX  S ECY=0 D
"RTN","ECRRPT1",48,0)
 . F  S ECY=$O(ECDSSU(ECY)) Q:'ECY  S ECV=+ECLOC(ECX)_"-"_+ECDSSU(ECY) D
"RTN","ECRRPT1",49,0)
 . . S ECZ=ECV_"-0-0"
"RTN","ECRRPT1",50,0)
 . . F  S ECZ=$O(^ECJ("B",ECZ)) Q:('ECZ)!($P(ECZ,"-",1,2)'=ECV)  D
"RTN","ECRRPT1",51,0)
 . . . S ECW=$O(^ECJ("B",ECZ,"")) Q:ECW=""  D REALNK
"RTN","ECRRPT1",52,0)
 Q
"RTN","ECRRPT1",53,0)
REALNK ;Reason link
"RTN","ECRRPT1",54,0)
 N XX,YY,ZZ
"RTN","ECRRPT1",55,0)
 S XX=0 F  S XX=$O(^ECL("AD",ECW,XX)) Q:'XX  S YY=0 D
"RTN","ECRRPT1",56,0)
 . F  S YY=$O(^ECL("AD",ECW,XX,YY)) Q:'YY  D
"RTN","ECRRPT1",57,0)
 . . Q:$G(^ECL(YY,0))=""  S ECLINK(YY)=XX
"RTN","ECRRPT1",58,0)
 Q
"RTN","ECRRPT1",59,0)
ECRPERS ;Inactive Person Class Report for RPC Call
"RTN","ECRRPT1",60,0)
 ;     Variables passed in
"RTN","ECRRPT1",61,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",62,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",63,0)
 ;       ECSORT - Sort by Patient (P) or Provider (R)
"RTN","ECRRPT1",64,0)
 ;
"RTN","ECRRPT1",65,0)
 ;     Variable return
"RTN","ECRRPT1",66,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",67,0)
 N ECV,ECDATE,ECBEGIN,ECEND,ECROU,ECDESC
"RTN","ECRRPT1",68,0)
 S ECV="ECSD^ECED^ECSORT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",69,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",70,0)
 S ECBEGIN=ECSD-.0001,ECEND=ECED+.9999
"RTN","ECRRPT1",71,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",72,0)
 . S ECV="ECBEGIN^ECEND^ECSORT",ECROU="START^ECRPCLS"
"RTN","ECRRPT1",73,0)
 . S ECDESC="EC Invalid Provider Report"
"RTN","ECRRPT1",74,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",75,0)
 D START^ECRPCLS
"RTN","ECRRPT1",76,0)
 Q
"RTN","ECRRPT1",77,0)
ECDSS1 ;National/Local Procedure Reports for RPC Call
"RTN","ECRRPT1",78,0)
 ;     Variables passed in
"RTN","ECRRPT1",79,0)
 ;       ECRTN    - Procedure Report (A-active or I-inactive)
"RTN","ECRRPT1",80,0)
 ;    If ECRTN=A, also
"RTN","ECRRPT1",81,0)
 ;       ECRN     - Preferred Report (N-ational, L-ocal or Both)
"RTN","ECRRPT1",82,0)
 ;       ECRD     - Sort Method (P-rocedure Name, N-ational Number)
"RTN","ECRRPT1",83,0)
 ;
"RTN","ECRRPT1",84,0)
 ;     Variable return
"RTN","ECRRPT1",85,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",86,0)
 N ECV,ECDESC,ECROU,DQTIME
"RTN","ECRRPT1",87,0)
 S ECV=$S($G(ECRTN)="A":"ECRTN^ECRN^ECRD",1:"ECRTN")
"RTN","ECRRPT1",88,0)
 D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",89,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",90,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",91,0)
 . S ECV="ECRTN^ECRN^ECRD",ECROU=$S(ECRTN="I":"LISTI",1:"PRT")_"^ECDSS1"
"RTN","ECRRPT1",92,0)
 . S ECDESC="Event Capture National Procedure Report",ECDIP=1
"RTN","ECRRPT1",93,0)
 . ;S ECSAVE("IO*")=""
"RTN","ECRRPT1",94,0)
 .D QUEDIP D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",95,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",96,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",97,0)
 D @$S(ECRTN="I":"LISTI^ECDSS1",1:"PRT^ECDSS1")
"RTN","ECRRPT1",98,0)
 Q
"RTN","ECRRPT1",99,0)
ECDSS3 ;Category Reports for RPC Call
"RTN","ECRRPT1",100,0)
 ;     Variables passed in
"RTN","ECRRPT1",101,0)
 ;       ECRTN    - Category Procedure Report 
"RTN","ECRRPT1",102,0)
 ;                  (A-active, I-inactive or B-oth)
"RTN","ECRRPT1",103,0)
 ;
"RTN","ECRRPT1",104,0)
 ;     Variable return
"RTN","ECRRPT1",105,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",106,0)
 N ECV,ECDIP,DQTIME
"RTN","ECRRPT1",107,0)
 S ECV="ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",108,0)
 S DQTIME=ECQDT
"RTN","ECRRPT1",109,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",110,0)
 . S ECV="ECRTN",ECROU="PRINT^ECDSS3"
"RTN","ECRRPT1",111,0)
 . S ECDESC="Event Capture Category Reports"
"RTN","ECRRPT1",112,0)
 . D QUEDIP D PRINT^ECDSS3
"RTN","ECRRPT1",113,0)
 D CLOSE^%ZISH(ECDIRY_ECFILER)
"RTN","ECRRPT1",114,0)
 S %ZIS("HFSNAME")=ECDIRY_ECFILER,%ZIS("HFSMODE")="W",IOP="HFS"
"RTN","ECRRPT1",115,0)
 D PRINT^ECDSS3
"RTN","ECRRPT1",116,0)
 Q
"RTN","ECRRPT1",117,0)
QUEDIP ;Queue when using DIP
"RTN","ECRRPT1",118,0)
 N DIC,X,Y
"RTN","ECRRPT1",119,0)
 D  I Y=-1 S ECERR=1 Q
"RTN","ECRRPT1",120,0)
 . S DIC(0)="MN",X=ECDEV,DIC="^%ZIS(1," D ^DIC
"RTN","ECRRPT1",121,0)
 . S:+Y>0 IOP="Q;"_$P(Y,U,2)
"RTN","ECRRPT1",122,0)
 . S Y=ECQDT X ^DD("DD") S DQTIME=Y
"RTN","ECRRPT1",123,0)
 Q
"RTN","ECRRPT1",124,0)
ECSUM ;Print Category and Procedure Summary (Report) for RPC Call
"RTN","ECRRPT1",125,0)
 ;     Variables passed in
"RTN","ECRRPT1",126,0)
 ;       ECL      - Location to report (1)
"RTN","ECRRPT1",127,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",128,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",129,0)
 ;       ECRTN    - Event Code Screen (Active, Inactive or Both)
"RTN","ECRRPT1",130,0)
 ;
"RTN","ECRRPT1",131,0)
 ;     Variable return
"RTN","ECRRPT1",132,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",133,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLN,ECS,ECJLP,ECSN,ECALL,DIC,X,Y
"RTN","ECRRPT1",134,0)
 N ECSCN
"RTN","ECRRPT1",135,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECRTN" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",136,0)
 S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC D:Y<0  Q:ECERR  S ECLN=$P(Y,U,2)
"RTN","ECRRPT1",137,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT1",138,0)
 S ECSCN=ECRTN D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",139,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",140,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",141,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",142,0)
 . S ECS=+$P(^ECD(ECD,0),"^",2),ECJLP=+$P(^(0),"^",11)
"RTN","ECRRPT1",143,0)
 . S ECSN=$S($P($G(^DIC(49,ECS,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN")
"RTN","ECRRPT1",144,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",145,0)
 I ECALL D PXRUN Q
"RTN","ECRRPT1",146,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",147,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",148,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",149,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",150,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",151,0)
PXRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",152,0)
 . S ECV="ECL^ECLN^ECALL^ECSCN",ECROU="START^ECSUM"
"RTN","ECRRPT1",153,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECLN^ECSN^ECDN^ECJLP^ECCN^ECSCN"
"RTN","ECRRPT1",154,0)
 . S ECDESC="EC Print Category and Procedure Summary"
"RTN","ECRRPT1",155,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",156,0)
 U IO D START^ECSUM
"RTN","ECRRPT1",157,0)
 Q
"RTN","ECRRPT1",158,0)
ECNTPCE ;ECS Records Failing Transmission to PCE
"RTN","ECRRPT1",159,0)
 ;     Variables passed in
"RTN","ECRRPT1",160,0)
 ;       ECSD   - Start Date or Report
"RTN","ECRRPT1",161,0)
 ;       ECED   - End Date or Report
"RTN","ECRRPT1",162,0)
 ;
"RTN","ECRRPT1",163,0)
 ;     Variable return
"RTN","ECRRPT1",164,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",165,0)
 N ECV,ECDATE,ECROU,ECDESC
"RTN","ECRRPT1",166,0)
 S ECV="ECSD^ECED" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",167,0)
 D DATECHK^ECRRPT(.ECSD,.ECED)
"RTN","ECRRPT1",168,0)
 S ECSD=ECSD-.0001,ECED=ECED+.9999
"RTN","ECRRPT1",169,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",170,0)
 . S ECV="ECSD^ECED^ECDATE",ECROU="START^ECNTPCE"
"RTN","ECRRPT1",171,0)
 . S ECDESC="ECS Records Failing Transmission to PCE Report"
"RTN","ECRRPT1",172,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",173,0)
 D START^ECNTPCE
"RTN","ECRRPT1",174,0)
 Q
"RTN","ECRRPT1",175,0)
ECSCPT ;Event Code Screens with CPT Codes
"RTN","ECRRPT1",176,0)
 ;     Variables passed in
"RTN","ECRRPT1",177,0)
 ;       ECL      - Location to report (1)
"RTN","ECRRPT1",178,0)
 ;       ECD      - DSS Unit to report (1 or ALL), If ECD'="ALL" then ECC
"RTN","ECRRPT1",179,0)
 ;       ECC      - Category (1 or ALL) (optional)
"RTN","ECRRPT1",180,0)
 ;       ECCPT    - CPT Codes to Display (Active, Inactive or Both)
"RTN","ECRRPT1",181,0)
 ;
"RTN","ECRRPT1",182,0)
 ;     Variable return
"RTN","ECRRPT1",183,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",184,0)
 N ECV,ECDN,ECCN,ECROU,ECSAVE,ECDESC,ECLN,ECS,ECJLP,ECALL,DIC,X,Y
"RTN","ECRRPT1",185,0)
 S (ECJLP,ECALL)=0,ECV="ECL^ECD^ECCPT" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",186,0)
 S DIC=4,DIC(0)="QNMZX",X=ECL D ^DIC D:Y<0  Q:ECERR  S ECLN=$P(Y,U,2)
"RTN","ECRRPT1",187,0)
 . S ^TMP("ECMSG",$J)="1^Invalid Location.",ECERR=1
"RTN","ECRRPT1",188,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid DSS Unit." Q
"RTN","ECRRPT1",189,0)
 . I ECD="ALL" S ECALL=1 Q
"RTN","ECRRPT1",190,0)
 . K DIC S DIC=724,DIC(0)="QNMZX",X=ECD D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",191,0)
 . S ECDN=$P(Y,U,2)_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECRRPT1",192,0)
 . S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECRRPT1",193,0)
 . I 'ECJLP S ECC=0,ECCN="None"
"RTN","ECRRPT1",194,0)
 I ECALL D CPTRUN Q
"RTN","ECRRPT1",195,0)
 S ECV="ECC" D REQCHK^ECRRPT(ECV) I ECERR Q
"RTN","ECRRPT1",196,0)
 D  I ECERR S ^TMP("ECMSG",$J)="1^Invalid Category." Q
"RTN","ECRRPT1",197,0)
 . I (ECC="ALL")!(ECC=0) Q
"RTN","ECRRPT1",198,0)
 . K DIC S DIC=726,DIC(0)="QNMZX",X=ECC D ^DIC I Y<0 S ECERR=1 Q
"RTN","ECRRPT1",199,0)
 . S ECCN=$P(Y,U,2)
"RTN","ECRRPT1",200,0)
CPTRUN I ECPTYP="P" D  Q
"RTN","ECRRPT1",201,0)
 . S ECV="ECL^ECLN^ECALL^ECCPT",ECROU="START^ECSCPT"
"RTN","ECRRPT1",202,0)
 . I 'ECALL S ECV=ECV_"^ECD^ECC^ECDN^ECJLP^ECCN"
"RTN","ECRRPT1",203,0)
 . S ECDESC="Event Code Screens with CPT Codes"
"RTN","ECRRPT1",204,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",205,0)
 U IO D START^ECSCPT
"RTN","ECRRPT1",206,0)
 Q
"RTN","ECRRPT1",207,0)
ECINCPT ;National/Local Procedure Codes with Inactive CPT Reports for RPC Call
"RTN","ECRRPT1",208,0)
 ;     Variables passed in
"RTN","ECRRPT1",209,0)
 ;       NONE     - No input variables
"RTN","ECRRPT1",210,0)
 ;
"RTN","ECRRPT1",211,0)
 ;     Variable return
"RTN","ECRRPT1",212,0)
 ;       ^TMP($J,"ECRPT",n)=report output or to print device.
"RTN","ECRRPT1",213,0)
 N ECV,ECL,ECDESC,ECROU,DQTIME,ECPG
"RTN","ECRRPT1",214,0)
 S ECPG=1
"RTN","ECRRPT1",215,0)
 I ECPTYP="P" D  Q
"RTN","ECRRPT1",216,0)
 . S ECROU="START^ECINCPT",ECV="ECL",ECL=""
"RTN","ECRRPT1",217,0)
 . S ECDESC="National/Local Procedure Codes with Inactive CPT"
"RTN","ECRRPT1",218,0)
 . D QUEUE^ECRRPT
"RTN","ECRRPT1",219,0)
 U IO D START^ECINCPT
"RTN","ECRRPT1",220,0)
 Q
"RTN","ECSCPT")
0^1^B10074493
"RTN","ECSCPT",1,0)
ECSCPT ;ALB/JAM,-Event Code Screen With CPT Codes ;22 Jul 05
"RTN","ECSCPT",2,0)
 ;;2.0; EVENT CAPTURE ;**72**;8 May 96
"RTN","ECSCPT",3,0)
LOC K ECL S EC1=0 D ^ECL S:$D(LOC(2)) EC1=1 K LOC I '$D(ECL) S ECOUT=1 G END
"RTN","ECSCPT",4,0)
UNIT ;set var and sel dss unit
"RTN","ECSCPT",5,0)
 S ECJLP=0
"RTN","ECSCPT",6,0)
 S (ECOUT,ECALL)=0,ECPG=1
"RTN","ECSCPT",7,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",8,0)
 .W !!,"Do you want to list all DSS Units for "_ECLN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",9,0)
 .W !!?5,"Enter <RET> to list all your DSS Units for this location, or"
"RTN","ECSCPT",10,0)
 .W !?11,"NO to select a specific DSS Unit"
"RTN","ECSCPT",11,0)
 G:%<0 END I %=1 S ECALL=1 G ECCPT
"RTN","ECSCPT",12,0)
 W @IOF,! K DIC S DIC=724,DIC(0)="QEAMZ",DIC("A")="Select DSS Unit: "
"RTN","ECSCPT",13,0)
 S:ECL DIC("S")="I $D(^ECJ(""AP"",ECL,+Y))"
"RTN","ECSCPT",14,0)
 D ^DIC K DIC G:Y<0 END S ECD=+Y,ECDN=$P(Y,"^",2)
"RTN","ECSCPT",15,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT",16,0)
 S ECJLP=+$P(^ECD(ECD,0),"^",11)
"RTN","ECSCPT",17,0)
SEL ;
"RTN","ECSCPT",18,0)
 I 'ECJLP S ECC=0,ECCN="None" G ECCPT
"RTN","ECSCPT",19,0)
 W @IOF F Q=0:0 D  Q:%
"RTN","ECSCPT",20,0)
 .W !!,"Do you want to list all categories for "_ECDN S %=1 D YN^DICN Q:%
"RTN","ECSCPT",21,0)
 .W !!,"Enter <RET> if you would like to list all categories for this "
"RTN","ECSCPT",22,0)
 .W "DSS Unit,",!," or NO to select a specific category"
"RTN","ECSCPT",23,0)
 G:%<0 END I %=1 S ECC="ALL" G ECCPT
"RTN","ECSCPT",24,0)
 W @IOF,! K DIC S DIC=726,DIC(0)="QEAMZ",DIC("A")="Select Category for "
"RTN","ECSCPT",25,0)
 S DIC("A")=DIC("A")_ECDN_" DSS Unit:  "
"RTN","ECSCPT",26,0)
 S:ECD DIC("S")="I $D(^ECJ(""AP"",ECL,ECD,+Y))"
"RTN","ECSCPT",27,0)
 D ^DIC K DIC G:Y<0 END S ECC=+Y,ECCN=$P(Y,"^",2)
"RTN","ECSCPT",28,0)
ECCPT ;CPT Codes to display
"RTN","ECSCPT",29,0)
 K DIR
"RTN","ECSCPT",30,0)
 S DIR(0)="SO^A:Active CPT Codes;I:Inactive CPT Codes;B:Both"
"RTN","ECSCPT",31,0)
 S DIR("B")="I",DIR("A")="CPT Codes to display"
"RTN","ECSCPT",32,0)
 S DIR("?",1)="Enter an A for Event Code screens with Active CPT Codes,"
"RTN","ECSCPT",33,0)
 S DIR("?",1)=DIR("?",1)_" I for Inactive Codes,"
"RTN","ECSCPT",34,0)
 S DIR("?")="B for a consolidated report of CPT codes, or ^ to quit."
"RTN","ECSCPT",35,0)
 S DIR("??")="ECSCPT^"
"RTN","ECSCPT",36,0)
 D ^DIR K DIR I $D(DIRUT) G END
"RTN","ECSCPT",37,0)
 S ECCPT=Y
"RTN","ECSCPT",38,0)
DEV W !! K IOP,POP,IO("Q"),%ZIS,ZTSK
"RTN","ECSCPT",39,0)
 S %ZIS="QM",%ZIS("A")="Select Device:  " D ^%ZIS I POP S ECOUT=1 G END
"RTN","ECSCPT",40,0)
 I $D(IO("Q")) K IO("Q") D  G END
"RTN","ECSCPT",41,0)
 .S ZTDESC="CATEGORY AND PROCEDURE SUMMARY",ZTRTN="START^ECSCPT1",ZTIO=ION
"RTN","ECSCPT",42,0)
 .D SAVE,^%ZTLOAD,HOME^%ZIS K ZTSK
"RTN","ECSCPT",43,0)
 U IO
"RTN","ECSCPT",44,0)
START ;
"RTN","ECSCPT",45,0)
 S %H=$H D YX^%DTC S ECRDT=Y
"RTN","ECSCPT",46,0)
 S ECOUT=0,ECPG=1
"RTN","ECSCPT",47,0)
 D ^ECSCPT1
"RTN","ECSCPT",48,0)
CLEAR I $E(IOST,1,2)'="C-" G END
"RTN","ECSCPT",49,0)
 G:ECOUT END
"RTN","ECSCPT",50,0)
 I ECPG W !!!!!,"Press <RET> to continue  " R X:DTIME I '$T!(X="^") S ECOUT=1 G END
"RTN","ECSCPT",51,0)
 G:ECALL END
"RTN","ECSCPT",52,0)
ASK ;
"RTN","ECSCPT",53,0)
 W @IOF F Q=0:0 D  I % Q
"RTN","ECSCPT",54,0)
 .W !!,"Would you like to list another DSS Unit for this Location"
"RTN","ECSCPT",55,0)
 .S %=2 D YN^DICN I % Q
"RTN","ECSCPT",56,0)
 .W !!,"Enter YES to list another DSS Unit or <RET> to continue"
"RTN","ECSCPT",57,0)
 G:%<0 END I %=1 D  G UNIT
"RTN","ECSCPT",58,0)
 .K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",59,0)
 K ECD,ECDN,ECC,ECCN,ECP,ECPN,NATN,ECFILE,ECCPT
"RTN","ECSCPT",60,0)
 I EC1 G LOC
"RTN","ECSCPT",61,0)
END ;
"RTN","ECSCPT",62,0)
 D ^ECKILL Q:$D(ECGUI)  W @IOF D ^%ZISC S:$D(ZTQUEUED) ZTREQ="@"
"RTN","ECSCPT",63,0)
 Q
"RTN","ECSCPT",64,0)
SAVE ;
"RTN","ECSCPT",65,0)
 S (ZTSAVE("ECALL"),ZTSAVE("ECJLP"),ZTSAVE("ECC*"),ZTSAVE("ECD*"),ZTSAVE("ECL*"),ZTSAVE("ECP*"))=""
"RTN","ECSCPT",66,0)
 Q
"RTN","ECSCPT1")
0^38^B8958555
"RTN","ECSCPT1",1,0)
ECSCPT1 ;ALB/JAM-Event Code Screens with CPT Codes;22 Jul 05
"RTN","ECSCPT1",2,0)
 ;;2.0; EVENT CAPTURE ;**72**;8 May 96
"RTN","ECSCPT1",3,0)
EN ;entry point
"RTN","ECSCPT1",4,0)
 N UCNT,ECDO,ECCO,ECNT,ECINDT,ECP0
"RTN","ECSCPT1",5,0)
 S (ECMORE,ECNT,ECDO,ECCO)=0,ECPG=1,ECCPT=$G(ECCPT,"B")
"RTN","ECSCPT1",6,0)
 ;Process all DSS Units
"RTN","ECSCPT1",7,0)
 I ECALL S ECD=0 D  G END
"RTN","ECSCPT1",8,0)
 .F  S ECD=$O(^ECJ("AP",ECL,ECD)) Q:'ECD  D  Q:ECOUT
"RTN","ECSCPT1",9,0)
 ..D SET,CATS,PAGE:'ECOUT&UCNT
"RTN","ECSCPT1",10,0)
 ;Process a specific DSS Unit
"RTN","ECSCPT1",11,0)
 S UCNT=0 D
"RTN","ECSCPT1",12,0)
 .I ECC="ALL" D CATS Q
"RTN","ECSCPT1",13,0)
 .I 'ECJLP S ECC=0,ECCN="None",ECCO=999
"RTN","ECSCPT1",14,0)
 .D PROC
"RTN","ECSCPT1",15,0)
END I 'ECNT W !!!,"Nothing Found."
"RTN","ECSCPT1",16,0)
 S ECPG=1
"RTN","ECSCPT1",17,0)
 Q
"RTN","ECSCPT1",18,0)
SET ;set var
"RTN","ECSCPT1",19,0)
 S ECDN=$S($P($G(^ECD(+ECD,0)),"^")]"":$P(^(0),"^"),1:"UNKNOWN"),UCNT=0
"RTN","ECSCPT1",20,0)
 S ECDN=ECDN_$S($P($G(^ECD(+ECD,0)),"^",6):" **Inactive**",1:"")
"RTN","ECSCPT1",21,0)
 Q
"RTN","ECSCPT1",22,0)
SETC ;set cats
"RTN","ECSCPT1",23,0)
 I ECC=0 S ECCN="None" Q
"RTN","ECSCPT1",24,0)
 S ECCN=$S($P($G(^EC(726,+ECC,0)),"^")]"":$P(^(0),"^"),1:"ZZ #"_ECC_" MISSING DATA")
"RTN","ECSCPT1",25,0)
 S ECMORE=1
"RTN","ECSCPT1",26,0)
 Q
"RTN","ECSCPT1",27,0)
HEADER ;
"RTN","ECSCPT1",28,0)
 W:$E(IOST,1,2)="C-"!(ECPG>1) @IOF
"RTN","ECSCPT1",29,0)
 W !!,?24,"EVENT CODE SCREENS WITH"
"RTN","ECSCPT1",30,0)
 W $S(ECCPT="I":" INACTIVE",ECCPT="A":" ACTIVE",1:"")_" CPT CODES"
"RTN","ECSCPT1",31,0)
 W ?70,"Page: ",ECPG,!?25,"Run Date: ",ECRDT,!?25,"LOCATION:  "_ECLN
"RTN","ECSCPT1",32,0)
 W !?25,"DSS UNIT:  "_ECDN,! S ECPG=ECPG+1
"RTN","ECSCPT1",33,0)
 F I=1:1:80 W "-"
"RTN","ECSCPT1",34,0)
 Q
"RTN","ECSCPT1",35,0)
CATS ;
"RTN","ECSCPT1",36,0)
 S ECC="",ECCO=0
"RTN","ECSCPT1",37,0)
 F  S ECC=$O(^ECJ("AP",ECL,ECD,ECC)) Q:ECC=""  D SETC,PROC Q:ECOUT
"RTN","ECSCPT1",38,0)
 S ECMORE=0
"RTN","ECSCPT1",39,0)
 Q
"RTN","ECSCPT1",40,0)
PROC ;
"RTN","ECSCPT1",41,0)
 S ECP=""
"RTN","ECSCPT1",42,0)
 F  S ECP=$O(^ECJ("AP",ECL,ECD,ECC,ECP)) Q:ECP=""  D SETP Q:ECOUT
"RTN","ECSCPT1",43,0)
 S ECMORE=0
"RTN","ECSCPT1",44,0)
 Q
"RTN","ECSCPT1",45,0)
SETP ;set procs
"RTN","ECSCPT1",46,0)
 S ECPSY=+$O(^ECJ("AP",ECL,ECD,ECC,ECP,"")),ECPI=""
"RTN","ECSCPT1",47,0)
 S ECPSYN=$P($G(^ECJ(ECPSY,"PRO")),"^",2),ECFILE=$P(ECP,";",2)
"RTN","ECSCPT1",48,0)
 S ECFILE=$S($E(ECFILE)="I":81,$E(ECFILE)="E":725,1:"")
"RTN","ECSCPT1",49,0)
 I ECFILE="" Q
"RTN","ECSCPT1",50,0)
 S (ECPN,ECPT,NATN)="",ECPI=0
"RTN","ECSCPT1",51,0)
 I ECFILE=81 S ECPI=$$CPT^ICPTCOD(+ECP) I +ECPI>0 D
"RTN","ECSCPT1",52,0)
 .S ECPN=$P(ECPI,"^",3),ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",53,0)
 I ECFILE=725 D
"RTN","ECSCPT1",54,0)
 .S ECP0=$G(^EC(725,+ECP,0)),ECPT="",ECPN=$P(ECP0,"^")
"RTN","ECSCPT1",55,0)
 .S NATN=$P(ECP0,"^",2)
"RTN","ECSCPT1",56,0)
 .I $P(ECP0,"^",5)'="" S ECPI=$$CPT^ICPTCOD($P(ECP0,"^",5)) I +ECPI>0 D 
"RTN","ECSCPT1",57,0)
 ..S ECPT=$P(ECPI,"^",2),ECINDT=$P(ECPI,"^",7)
"RTN","ECSCPT1",58,0)
 I +ECPI<1 Q
"RTN","ECSCPT1",59,0)
 I ECCPT="A",'ECINDT Q
"RTN","ECSCPT1",60,0)
 I ECCPT="I",ECINDT Q
"RTN","ECSCPT1",61,0)
 I ECD'=ECDO D HEADER S ECDO=ECD
"RTN","ECSCPT1",62,0)
 I ECC'=ECCO D  S ECCO=ECC I ECOUT Q
"RTN","ECSCPT1",63,0)
 .W !!,"Category:  "_ECCN D:$Y+4>IOSL CONTD
"RTN","ECSCPT1",64,0)
 S ECPN=$S(ECPSYN]"":ECPSYN,1:ECPN),ECNT=ECNT+1,UCNT=UCNT+1
"RTN","ECSCPT1",65,0)
 W !,"Procedure: ",$E(ECPN,1,30)," (",$S(ECFILE=81:"CPT",1:"EC"),")",?48,"Nat'l #: ",NATN,?64,"CPT: ",ECPT
"RTN","ECSCPT1",66,0)
 I ECCPT="B",'ECINDT W ?70," *I*"
"RTN","ECSCPT1",67,0)
 D:($Y+3)>IOSL CONTD I ECOUT Q
"RTN","ECSCPT1",68,0)
 Q
"RTN","ECSCPT1",69,0)
CONTD ;Check whether to continue or exit
"RTN","ECSCPT1",70,0)
 D PAGE I ECOUT Q
"RTN","ECSCPT1",71,0)
 D HEADER:ECPG,MORE:$D(ECCN)
"RTN","ECSCPT1",72,0)
 Q
"RTN","ECSCPT1",73,0)
 ;
"RTN","ECSCPT1",74,0)
PAGE ;
"RTN","ECSCPT1",75,0)
 N SS,JJ
"RTN","ECSCPT1",76,0)
 I $D(ECPG),$E(IOST,1,2)="C-" D
"RTN","ECSCPT1",77,0)
 . S SS=22-$Y F JJ=1:1:SS W !
"RTN","ECSCPT1",78,0)
 . S DIR(0)="E" W ! D ^DIR K DIR I 'Y S ECOUT=1
"RTN","ECSCPT1",79,0)
 Q
"RTN","ECSCPT1",80,0)
MORE I ECMORE W !!,"Category:  "_ECCN
"RTN","ECSCPT1",81,0)
 Q
"RTN","ECSCR")
0^44^B7221580^B7355090
"RTN","ECSCR",1,0)
ECSCR ;BIR/MAM,TTH,JPW-Retrieve Event Capture Location ;1 May 96
"RTN","ECSCR",2,0)
 ;;2.0; EVENT CAPTURE ;**1,63,72**;8 May 96
"RTN","ECSCR",3,0)
 S (ECOUT,X,CNT)=0 F I=0:0 S X=$O(^DIC(4,"LOC",X)) Q:X=""  S CNT=CNT+1,LOC(CNT)=X S Y=$O(^DIC(4,"LOC",X,0)),LOC(CNT)=LOC(CNT)_"^"_Y
"RTN","ECSCR",4,0)
 ;If the LOC array contains only one location, set the LOC1 array.
"RTN","ECSCR",5,0)
 I '$D(LOC(2)) S ECL=$P(LOC(1),"^",2),ECLOC=1,LOC1(1)=LOC(1) Q
"RTN","ECSCR",6,0)
 I $D(LOC(2)),$D(ECN),$D(ECY) W @IOF,!!,"Choose Event Capture Location for this event code screen.",! K ECY,ECN D LOC G END
"RTN","ECSCR",7,0)
 I $D(LOC(2)) D LL I '$D(ECL) Q
"RTN","ECSCR",8,0)
END ;Exit routine
"RTN","ECSCR",9,0)
 Q
"RTN","ECSCR",10,0)
LL ; select location
"RTN","ECSCR",11,0)
 S ECLOC=0,ECWORD="create^selectable^select a"
"RTN","ECSCR",12,0)
 W !!,"Do you want to "_$P(ECWORD,"^")_" this Event Code Screen for ALL locations ? YES//  " R X:DTIME Q:'$T!(X="^")  S:X="" X="Y" S X=$E(X) I "Yy"[X S ECL="ALL" Q
"RTN","ECSCR",13,0)
 S ECLOC=1 ;Specific location.
"RTN","ECSCR",14,0)
 I "YyNn"'[X W !!,"Enter <RET> if this procedure will be "_$P(ECWORD,"^",2)_" from all locations,",!,"or ""NO"" to "_$P(ECWORD,"^",3)_" location.",!! G LL
"RTN","ECSCR",15,0)
 W @IOF,!,"Event Capture Locations:  ",!
"RTN","ECSCR",16,0)
LOC S CNT=0 F I=0:0 S CNT=$O(LOC(CNT)) Q:'CNT  W !,CNT_". "_$P(LOC(CNT),"^")
"RTN","ECSCR",17,0)
ASK W !!,"Select Location: " R X:DTIME Q:'$T!("^"[X)  I '$D(LOC(X)) W !!,"Enter the number corresponding to the location you want to select.",! G ASK
"RTN","ECSCR",18,0)
 I X="" Q
"RTN","ECSCR",19,0)
 I $D(LOC1(X)) W !,"This location has already been selected." G ASK
"RTN","ECSCR",20,0)
 W "  "_$P(LOC(X),"^") S NUM=X,LOC1(NUM)=LOC(X) S ECL="ALL"
"RTN","ECSCR",21,0)
 G ASK
"RTN","ECSCR",22,0)
 Q
"RTN","ECSCR",23,0)
ASK2 ;Display selection to the user.
"RTN","ECSCR",24,0)
 W !,"Event Code Screen Information:"
"RTN","ECSCR",25,0)
 W !,"----------------------------",!
"RTN","ECSCR",26,0)
 W !,"DSS Unit : "_ECDN,!,"Category : "_ECCN,!,"Procedure: "_$$NAM^ECSCR
"RTN","ECSCR",27,0)
 K Y,DIRUT
"RTN","ECSCR",28,0)
 W ! S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is this information correct"
"RTN","ECSCR",29,0)
 D ^DIR Q:$D(DIRUT)  S ECANS=+Y
"RTN","ECSCR",30,0)
 Q
"RTN","ECSCR",31,0)
NAM() ;Display procedure name.
"RTN","ECSCR",32,0)
 I ECP'?1.N.";".E Q "UNKNOWN"
"RTN","ECSCR",33,0)
 N ECPF,ECPC
"RTN","ECSCR",34,0)
 S ECPF="^"_$P(ECP,";",2)
"RTN","ECSCR",35,0)
 S ECPC=$S($E($P(ECP,";",2),1)="E":1,1:3)
"RTN","ECSCR",36,0)
 S ECPN=$S(ECPC=1:$P(@(ECPF_+ECP_",0)"),U,ECPC),1:$P($$CPT^ICPTCOD(+ECP),U,ECPC))
"RTN","ECSCR",37,0)
 Q ECPN
"RTN","ECUERPC")
0^31^B51258174^B50183608
"RTN","ECUERPC",1,0)
ECUERPC ;ALB/JAM;Event Capture Data Entry Broker Utilities ;Aug 16, 2000
"RTN","ECUERPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,32,33,46,47,59,72**;8 May 96
"RTN","ECUERPC",3,0)
 ;
"RTN","ECUERPC",4,0)
USRUNT(RESULTS,ECARY) ;
"RTN","ECUERPC",5,0)
 ;
"RTN","ECUERPC",6,0)
 ;This broker call returns an array of DSS units for a user & location
"RTN","ECUERPC",7,0)
 ;        RPC: EC GETUSRDSSUNIT
"RTN","ECUERPC",8,0)
 ;INPUTS        ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",9,0)
 ;               1. ECL   - Location IEN (if define gives User's DSS 
"RTN","ECUERPC",10,0)
 ;                          units for a location)
"RTN","ECUERPC",11,0)
 ;               2. ECDUZ - New Person IEN (if define gives list of 
"RTN","ECUERPC",12,0)
 ;                          DSS Units available to user)
"RTN","ECUERPC",13,0)
 ;
"RTN","ECUERPC",14,0)
 ;OUTPUTS        RESULTS - Array of DSS Units. Data pieces as follows:-
"RTN","ECUERPC",15,0)
 ;               PIECE - Description
"RTN","ECUERPC",16,0)
 ;                 1     IEN of file 724
"RTN","ECUERPC",17,0)
 ;                 2     Name of DSS Unit
"RTN","ECUERPC",18,0)
 ;                 3     Send to PCE Flag
"RTN","ECUERPC",19,0)
 ;                 4     Data Entry Date/Time Default
"RTN","ECUERPC",20,0)
 N ECL,ECDUZ,CNT,STR,DPT,IEN
"RTN","ECUERPC",21,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",22,0)
 S ECL=$P(ECARY,U),ECDUZ=$P(ECARY,U,2) I ECL="",ECDUZ="" Q
"RTN","ECUERPC",23,0)
 ;S ECDUZ=$G(DUZ,U),ECL=$P(ECARY,U) I (ECDUZ="")!(ECL="") Q
"RTN","ECUERPC",24,0)
 K ^TMP($J,"ECUSRUNT") S (DPT,CNT)=0
"RTN","ECUERPC",25,0)
 I ECL'="",ECDUZ="" S ECDUZ=$G(DUZ,U) I ECDUZ="" Q
"RTN","ECUERPC",26,0)
 I $D(^XUSEC("ECALLU",ECDUZ)) S DPT="" D
"RTN","ECUERPC",27,0)
 .I ECL="" S ^TMP($J,"ECUSRUNT",CNT+1)="ALL^ALL" Q
"RTN","ECUERPC",28,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",29,0)
 .F  S DPT=$O(^ECD("B",DPT))  Q:DPT=""  S IEN=0 D
"RTN","ECUERPC",30,0)
 ..F  S IEN=$O(^ECD("B",DPT,IEN)) Q:'IEN  D UNTCHK
"RTN","ECUERPC",31,0)
 E  D
"RTN","ECUERPC",32,0)
 .I ECL="ALL" S ECL=""
"RTN","ECUERPC",33,0)
 .F  S DPT=$O(^VA(200,ECDUZ,"EC",DPT)) Q:'DPT  S IEN=DPT D UNTCHK
"RTN","ECUERPC",34,0)
 S RESULTS=$NA(^TMP($J,"ECUSRUNT"))
"RTN","ECUERPC",35,0)
 Q
"RTN","ECUERPC",36,0)
UNTCHK ;Check if DSS unit exist as event code screen and if active
"RTN","ECUERPC",37,0)
 N DSSF,DFD
"RTN","ECUERPC",38,0)
 ;I '$D(^ECJ("AP",ECL,IEN))!($P($G(^ECD(IEN,0)),U,6)) Q
"RTN","ECUERPC",39,0)
 I ECL'="",'$D(^ECJ("AP",ECL,IEN)) Q
"RTN","ECUERPC",40,0)
 I ($P($G(^ECD(IEN,0)),U,6))!('$P($G(^ECD(IEN,0)),U,8)) Q
"RTN","ECUERPC",41,0)
 S DSSF=$P(^ECD(IEN,0),"^",14) S:DSSF="" DSSF="N"
"RTN","ECUERPC",42,0)
 S DFD=$S($P(^ECD(IEN,0),"^",12)="N":"N",1:"X") ; added by VMP
"RTN","ECUERPC",43,0)
 S CNT=CNT+1,STR=IEN_"^"_$P(^ECD(IEN,0),"^")_U_DSSF_"^"_DFD
"RTN","ECUERPC",44,0)
 S ^TMP($J,"ECUSRUNT",CNT)=STR
"RTN","ECUERPC",45,0)
 Q
"RTN","ECUERPC",46,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUERPC",47,0)
 ;
"RTN","ECUERPC",48,0)
 ;This broker entry point returns an array of categories for an Event 
"RTN","ECUERPC",49,0)
 ;Code screen based on location and DSS unit.
"RTN","ECUERPC",50,0)
 ;        RPC: EC GETECSCATS
"RTN","ECUERPC",51,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",52,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",53,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",54,0)
 ;               ECCSTA-Active or inactive category
"RTN","ECUERPC",55,0)
 ;                      A-ctive (default), I-nactive, B-oth
"RTN","ECUERPC",56,0)
 ;
"RTN","ECUERPC",57,0)
 ;OUTPUTS        RESULTS - Array of categories. Data pieces as follows:-
"RTN","ECUERPC",58,0)
 ;               PIECE - Description
"RTN","ECUERPC",59,0)
 ;                 1  - Category IEN
"RTN","ECUERPC",60,0)
 ;                 2  - Category description
"RTN","ECUERPC",61,0)
 ;
"RTN","ECUERPC",62,0)
 N ECL,ECD,ECC,CNT,DATA,ECCSTA
"RTN","ECUERPC",63,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",64,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2) I (ECL="")!(ECD="") Q
"RTN","ECUERPC",65,0)
 S ECCSTA=$P(ECARY,U,3)
"RTN","ECUERPC",66,0)
 K ^TMP($J,"ECSCATS")
"RTN","ECUERPC",67,0)
 D CATS^ECHECK1
"RTN","ECUERPC",68,0)
 M ^TMP($J,"ECSCATS")=ECC
"RTN","ECUERPC",69,0)
 S RESULTS=$NA(^TMP($J,"ECSCATS"))
"RTN","ECUERPC",70,0)
 Q
"RTN","ECUERPC",71,0)
PROC(RESULTS,ECARY) ;
"RTN","ECUERPC",72,0)
 ;
"RTN","ECUERPC",73,0)
 ;This broker entry point returns an array of procedures for an Event 
"RTN","ECUERPC",74,0)
 ;Code screen (file #720.3) based on location, DSS unit, and Category
"RTN","ECUERPC",75,0)
 ;        RPC: EC GETECSPROCS
"RTN","ECUERPC",76,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",77,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",78,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",79,0)
 ;               ECC  - Category IEN
"RTN","ECUERPC",80,0)
 ;               ECDT - Procedure Date
"RTN","ECUERPC",81,0)
 ;
"RTN","ECUERPC",82,0)
 ;OUTPUTS        RESULTS - Array of procedures. Data pieces as follows:-
"RTN","ECUERPC",83,0)
 ;               PIECE - Description
"RTN","ECUERPC",84,0)
 ;                 1  - EC National Number SPACE Procedure Name SPACE
"RTN","ECUERPC",85,0)
 ;                   - [Synonym]
"RTN","ECUERPC",86,0)
 ;                 2  - Procedure Code
"RTN","ECUERPC",87,0)
 ;                 3  - CPT Code
"RTN","ECUERPC",88,0)
 ;                 4  - Default volume (1 if no default volume)
"RTN","ECUERPC",89,0)
 ;                 5  - Event code screen IEN
"RTN","ECUERPC",90,0)
 ;
"RTN","ECUERPC",91,0)
 N ECL,ECD,ECC,CNT,DATA,STR,ECCPT,PX
"RTN","ECUERPC",92,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",93,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3) S:ECC="" ECC=0
"RTN","ECUERPC",94,0)
 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",95,0)
 S ECDT=$P(ECARY,U,4)
"RTN","ECUERPC",96,0)
 K ^TMP($J,"ECPRO")
"RTN","ECUERPC",97,0)
 D PROS^ECHECK1
"RTN","ECUERPC",98,0)
 S CNT=0 F  S CNT=$O(^TMP("ECPRO",$J,CNT)) Q:'CNT  D
"RTN","ECUERPC",99,0)
 .S DATA=^TMP("ECPRO",$J,CNT),PX=$P(DATA,U)
"RTN","ECUERPC",100,0)
 .S ECCPT=$S(PX["EC":$P($G(^EC(725,+PX,0)),"^",5),1:+PX)
"RTN","ECUERPC",101,0)
 .S STR=$P(DATA,U,5)_" "_$P(DATA,U,4)_" ["_$P(DATA,U,3)_"]"_U_PX
"RTN","ECUERPC",102,0)
 .S STR=STR_U_ECCPT_U_$S($P(DATA,U,6):+$P(DATA,U,6),1:1)_U_$P(DATA,U,2)
"RTN","ECUERPC",103,0)
 .S ^TMP($J,"ECPRO",CNT)=STR
"RTN","ECUERPC",104,0)
 S RESULTS=$NA(^TMP($J,"ECPRO"))
"RTN","ECUERPC",105,0)
 K ^TMP("ECPRO",$J)
"RTN","ECUERPC",106,0)
 Q
"RTN","ECUERPC",107,0)
ECPXMOD(RESULTS,ECARY) ;
"RTN","ECUERPC",108,0)
 ;
"RTN","ECUERPC",109,0)
 ;Broker call returns modifier entries for a CPT Procedure
"RTN","ECUERPC",110,0)
 ;        RPC: EC GETPXMODIFIER
"RTN","ECUERPC",111,0)
 ;INPUTS   ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",112,0)
 ;          ECCPT - CPT code ien (file #81)
"RTN","ECUERPC",113,0)
 ;          ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC",114,0)
 ;
"RTN","ECUERPC",115,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC",116,0)
 ;          2-character modifier^modifer name^modifier ien #81.3
"RTN","ECUERPC",117,0)
 ;
"RTN","ECUERPC",118,0)
 N CNT,SUB,ECCPT,ECDT,DATA,ECMOD
"RTN","ECUERPC",119,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",120,0)
 S ECCPT=$P(ECARY,U),ECDT=$P(ECARY,U,2) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC",121,0)
 I ECCPT="" Q
"RTN","ECUERPC",122,0)
 K ^TMP($J,"ECPXMODS") S (SUB,CNT)=0
"RTN","ECUERPC",123,0)
 S DATA=$$CODM^ICPTCOD(ECCPT,"ECMOD","",ECDT) I +DATA<0 Q
"RTN","ECUERPC",124,0)
 F  S SUB=$O(ECMOD(SUB)) Q:SUB=""  D
"RTN","ECUERPC",125,0)
 . S CNT=CNT+1,^TMP($J,"ECPXMODS",CNT)=SUB_U_ECMOD(SUB)
"RTN","ECUERPC",126,0)
 S RESULTS=$NA(^TMP($J,"ECPXMODS"))
"RTN","ECUERPC",127,0)
 Q
"RTN","ECUERPC",128,0)
PRVDER(RESULTS,ECARY) ;
"RTN","ECUERPC",129,0)
 ;remove this rpc before release;JAM 6/4/01
"RTN","ECUERPC",130,0)
 ;This broker entry point returns an array of valid providers
"RTN","ECUERPC",131,0)
 ;        RPC: EC GETPROVIDER
"RTN","ECUERPC",132,0)
 ;INPUTS        ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",133,0)
 ;               ECDT  - Procedure date
"RTN","ECUERPC",134,0)
 ;
"RTN","ECUERPC",135,0)
 ;OUTPUTS        RESULTS - Array of providers. Data pieces as follows:-
"RTN","ECUERPC",136,0)
 ;               PIECE - Description
"RTN","ECUERPC",137,0)
 ;                IEN of file 200^Provider Name^occupation^specialty^
"RTN","ECUERPC",138,0)
 ;                subspecialty
"RTN","ECUERPC",139,0)
 ;
"RTN","ECUERPC",140,0)
 N IEN,CNT,ECUTN,KEY,USR
"RTN","ECUERPC",141,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",142,0)
 S ECDT=$P($G(ECARY),U),ECDT=$S(ECDT="":DT,1:ECDT)
"RTN","ECUERPC",143,0)
 K ^TMP($J,"ECPRVDRS") S CNT=0
"RTN","ECUERPC",144,0)
 F KEY="PROVIDER" S IEN=0 D
"RTN","ECUERPC",145,0)
 .F  S IEN=$O(^XUSEC(KEY,IEN)) Q:'IEN  S USR=$G(^VA(200,IEN,0)) D:USR'=""
"RTN","ECUERPC",146,0)
 ..S ECUTN=$$GET^XUA4A72(IEN,ECDT) I +ECUTN'>0 Q
"RTN","ECUERPC",147,0)
 ..S CNT=CNT+1,^TMP($J,"ECPRVDRS",CNT)=IEN_U_$P(USR,U)_U_$P(ECUTN,2,4)
"RTN","ECUERPC",148,0)
 S RESULTS=$NA(^TMP($J,"ECPRVDRS"))
"RTN","ECUERPC",149,0)
 Q
"RTN","ECUERPC",150,0)
 ;
"RTN","ECUERPC",151,0)
ELIG(RESULTS,ECARY) ;
"RTN","ECUERPC",152,0)
 ;
"RTN","ECUERPC",153,0)
 ;Broker call returns a list of patient eligibilities
"RTN","ECUERPC",154,0)
 ;        RPC: EC GETPATELIG
"RTN","ECUERPC",155,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC",156,0)
 ;          DFN - Patient ien (file #2)
"RTN","ECUERPC",157,0)
 ;
"RTN","ECUERPC",158,0)
 ;OUTPUTS  RESULTS - Array of eligibilities
"RTN","ECUERPC",159,0)
 ;          primary/secondary elig flag^elig ien^elig description
"RTN","ECUERPC",160,0)
 ;
"RTN","ECUERPC",161,0)
 N CNT,SUB,DFN,VAEL
"RTN","ECUERPC",162,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",163,0)
 S DFN=$P(ECARY,U) I DFN="" Q
"RTN","ECUERPC",164,0)
 K ^TMP($J,"ECPATELIG")
"RTN","ECUERPC",165,0)
 D ELIG^VADPT I $G(VAEL(1))="" Q
"RTN","ECUERPC",166,0)
 S ^TMP($J,"ECPATELIG",1)="1^"_VAEL(1),SUB=0,CNT=1
"RTN","ECUERPC",167,0)
 F  S SUB=$O(VAEL(1,SUB)) Q:SUB=""  D
"RTN","ECUERPC",168,0)
 . S CNT=CNT+1,^TMP($J,"ECPATELIG",CNT)="0^"_VAEL(1,SUB)
"RTN","ECUERPC",169,0)
 S RESULTS=$NA(^TMP($J,"ECPATELIG"))
"RTN","ECUERPC",170,0)
 Q
"RTN","ECUERPC",171,0)
PRDEFS(RESULTS,ECARY) ;
"RTN","ECUERPC",172,0)
 ;
"RTN","ECUERPC",173,0)
 ;This broker entry point returns the defaults for procedure data entry
"RTN","ECUERPC",174,0)
 ;        RPC: EC GETPRODEFS
"RTN","ECUERPC",175,0)
 ;INPUTS        ECARY  - Contains the following values separated by "^"
"RTN","ECUERPC",176,0)
 ;               ECL  - Location IEN
"RTN","ECUERPC",177,0)
 ;               ECD  - DSS Unit IEN
"RTN","ECUERPC",178,0)
 ;               ECC  - Category IEN
"RTN","ECUERPC",179,0)
 ;
"RTN","ECUERPC",180,0)
 ;OUTPUTS        RESULTS - Data pieces as follows:-
"RTN","ECUERPC",181,0)
 ;               PIECE - Description
"RTN","ECUERPC",182,0)
 ;                 1  - Associated Clinic IEN
"RTN","ECUERPC",183,0)
 ;                 2  - Associated Clinic
"RTN","ECUERPC",184,0)
 ;                 3  - Medical Specialty IEN
"RTN","ECUERPC",185,0)
 ;                 4  - Medical Specialty
"RTN","ECUERPC",186,0)
 ;
"RTN","ECUERPC",187,0)
 N ECL,ECD,ECC,ECP,IEN,ASC,ASCNM,MEDSP,MEDSPNM,ECCH
"RTN","ECUERPC",188,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",189,0)
 S ECL=$P(ECARY,U),ECD=$P(ECARY,U,2),ECC=$P(ECARY,U,3),ECP=$P(ECARY,U,4)
"RTN","ECUERPC",190,0)
 S:ECC="" ECC=0 I (ECL="")!(ECD="") Q
"RTN","ECUERPC",191,0)
 S (ASCNM,MEDSPNM)="",ECCH=ECL_"-"_ECD_"-"_ECC_"-"_ECP
"RTN","ECUERPC",192,0)
 I '$D(^ECJ("B",ECCH)) Q
"RTN","ECUERPC",193,0)
 S IEN=$O(^ECJ("B",ECCH,0)) I IEN="" Q
"RTN","ECUERPC",194,0)
 S ASC=$P($G(^ECJ(IEN,"PRO")),U,4) I ASC D
"RTN","ECUERPC",195,0)
 .S ASCNM=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC",196,0)
 S MEDSP=$P($G(^ECD(ECD,0)),U,3) I MEDSP D 
"RTN","ECUERPC",197,0)
 .S MEDSPNM=$$GET1^DIQ(723,MEDSP,.01,"I")
"RTN","ECUERPC",198,0)
 S RESULTS=ASC_U_ASCNM_U_MEDSP_U_MEDSPNM
"RTN","ECUERPC",199,0)
 Q
"RTN","ECUERPC",200,0)
PATPROC(RESULTS,ECARY) ;
"RTN","ECUERPC",201,0)
 ;
"RTN","ECUERPC",202,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC",203,0)
 ;        RPC: EC GETPATPROCS
"RTN","ECUERPC",204,0)
 ;INPUTS   ECARY - Contains the following values separated by "^"
"RTN","ECUERPC",205,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC",206,0)
 ;          ECPAT - Patient DFN ien
"RTN","ECUERPC",207,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC",208,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC",209,0)
 ;          ECED  - End Date
"RTN","ECUERPC",210,0)
 ;
"RTN","ECUERPC",211,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient entries contain
"RTN","ECUERPC",212,0)
 ;          721 IEN^Procedure date and time^Category^Procedure^Volume^
"RTN","ECUERPC",213,0)
 ;          Provider^ordering section^associated clinic^primary diagnoses
"RTN","ECUERPC",214,0)
 ;          ^Provider IEN
"RTN","ECUERPC",215,0)
 ;
"RTN","ECUERPC",216,0)
 N IEN,CNT,ECV,ECLOC,ECUNT,ECPAT,PX,NODE,DATA,PDT,PDX,PND,PDXD,CAT,ECI
"RTN","ECUERPC",217,0)
 N ORS,PRV,PRO,PROV,ECU
"RTN","ECUERPC",218,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC",219,0)
 S ECV="ECLOC^ECPAT^ECUNT^ECSD^ECED"
"RTN","ECUERPC",220,0)
 D PARSE(ECV,ECARY) I (ECLOC="")!(ECPAT="")!(ECUNT="") Q
"RTN","ECUERPC",221,0)
 K ^TMP($J,"ECPATPX")
"RTN","ECUERPC",222,0)
 S ECSD=$G(ECSD,DT),ECED=$G(ECED,DT)
"RTN","ECUERPC",223,0)
 S %DT="X" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC",224,0)
 K X,Y
"RTN","ECUERPC",225,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC",226,0)
 Q:ECED'>ECSD  S PDT=ECSD,CNT=0
"RTN","ECUERPC",227,0)
 F  S PDT=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT)) Q:'PDT!(PDT>ECED)  D
"RTN","ECUERPC",228,0)
 . S IEN=0 F  S IEN=$O(^ECH("ADT",ECLOC,ECPAT,ECUNT,PDT,IEN)) Q:'IEN  D
"RTN","ECUERPC",229,0)
 . . S NODE=$G(^ECH(IEN,0)),PND=$G(^ECH(IEN,"P")),PX=$P(NODE,U,9)
"RTN","ECUERPC",230,0)
 . . Q:NODE=""  S (PRV,CAT,ORS,ASC,PDXD)="",PDX=$P(PND,U,2)
"RTN","ECUERPC",231,0)
 . . I PX["EC" D
"RTN","ECUERPC",232,0)
 . . . S PRO=$G(^EC(725,$P(PX,";"),0)),PX=$P(PRO,U,2)_" "_$P(PRO,U)
"RTN","ECUERPC",233,0)
 . . E  S PRO=$$CPT^ICPTCOD($P(PX,";"),PDT) S PX=$P(PRO,U,2)_" "_$P(PRO,U,3)
"RTN","ECUERPC",234,0)
 . . S:$P(NODE,U,8) CAT=$$GET1^DIQ(726,$P(NODE,U,8),.01,"I")
"RTN","ECUERPC",235,0)
 . . K PROV S ECU=$$GETPPRV^ECPRVMUT(IEN,.PROV),PRV=$S(ECU:"UNKNOWN",1:$P(PROV,"^",2)),ECU=$S('ECU:+PROV,1:"")
"RTN","ECUERPC",236,0)
 . . S:$P(NODE,U,12) ORS=$$GET1^DIQ(723,$P(NODE,U,12),.01,"I")
"RTN","ECUERPC",237,0)
 . . S:$P(NODE,U,19) ASC=$$GET1^DIQ(44,$P(NODE,U,19),.01,"I")
"RTN","ECUERPC",238,0)
 . . S:PDX PDXD=$$ICDDX^ICDCODE(PDX,PDT),PDXD=$P(PDXD,U,2)_" "_$P(PDXD,U,4)
"RTN","ECUERPC",239,0)
 . . S DATA=$P(NODE,U)_U_$$FMTE^XLFDT($P(NODE,U,3),"2F")_U_CAT_U_PX
"RTN","ECUERPC",240,0)
 . . S DATA=DATA_U_$P(NODE,U,10)_U_PRV_U_ORS_U_ASC_U_PDXD_U_ECU
"RTN","ECUERPC",241,0)
 . . S CNT=CNT+1,^TMP($J,"ECPATPX",CNT)=DATA
"RTN","ECUERPC",242,0)
 S RESULTS=$NA(^TMP($J,"ECPATPX"))
"RTN","ECUERPC",243,0)
 Q
"RTN","ECUERPC",244,0)
PARSE(ECV,ECARY) ;Parse Variable
"RTN","ECUERPC",245,0)
 N I
"RTN","ECUERPC",246,0)
 F I=1:1:$L(ECARY,U) S @$P(ECV,U,I)=$P(ECARY,U,I)
"RTN","ECUERPC",247,0)
 Q
"RTN","ECUERPC1")
0^32^B52615700^B53629201
"RTN","ECUERPC1",1,0)
ECUERPC1 ;ALB/JAM;Event Capture Data Entry Broker Util ; 5/21/01 7:30pm
"RTN","ECUERPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,33,42,46,47,54,72**;8 May 96
"RTN","ECUERPC1",3,0)
PATINF(RESULTS,ECARY) ;
"RTN","ECUERPC1",4,0)
 ;Broker entry point to get various types of data from EVENT CAPTURE 
"RTN","ECUERPC1",5,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",6,0)
 ;        RPC: EC GETPATINFO
"RTN","ECUERPC1",7,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUERPC1",8,0)
 ;          ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",9,0)
 ;          ECTYP - Data type to return
"RTN","ECUERPC1",10,0)
 ;
"RTN","ECUERPC1",11,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data
"RTN","ECUERPC1",12,0)
 ;
"RTN","ECUERPC1",13,0)
 N ECTYP,ECIEN
"RTN","ECUERPC1",14,0)
 S ECARY=$G(ECARY),ECIEN=$P(ECARY,U),ECTYP=$P(ECARY,U,2) I ECIEN="" Q
"RTN","ECUERPC1",15,0)
 I '$D(^ECH(ECIEN)) Q
"RTN","ECUERPC1",16,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",17,0)
 I ECTYP="DXS" D PATDXS(ECIEN) Q
"RTN","ECUERPC1",18,0)
 I ECTYP="MOD" D PATMOD(ECIEN) Q
"RTN","ECUERPC1",19,0)
 I ECTYP="CLASS" D PATCLASS(ECIEN) Q
"RTN","ECUERPC1",20,0)
 I ECTYP="OTH" D PATOTH(ECIEN) Q
"RTN","ECUERPC1",21,0)
 I ECTYP="PRV" D PATPRV^ECUERPC2(ECIEN) Q
"RTN","ECUERPC1",22,0)
 Q
"RTN","ECUERPC1",23,0)
PATDXS(ECIEN) ;
"RTN","ECUERPC1",24,0)
 ;Returns to broker a patient secondary DXs entries from EVENT 
"RTN","ECUERPC1",25,0)
 ;CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",26,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",27,0)
 ;
"RTN","ECUERPC1",28,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC1",29,0)
 ;          721 IEN^secondary dx ien #80^secondary dx code^dx description
"RTN","ECUERPC1",30,0)
 ;
"RTN","ECUERPC1",31,0)
 N DXS,DXSIEN,DXSD,CNT
"RTN","ECUERPC1",32,0)
 I '$D(^ECH(ECIEN,"DX")) Q
"RTN","ECUERPC1",33,0)
 K ^TMP($J,"ECDXS")
"RTN","ECUERPC1",34,0)
 S (CNT,DXS)=0 F  S DXS=$O(^ECH(ECIEN,"DX",DXS)) Q:'DXS  D
"RTN","ECUERPC1",35,0)
 . S DXSIEN=$G(^ECH(ECIEN,"DX",DXS,0)) I DXSIEN="" Q
"RTN","ECUERPC1",36,0)
 . S DXSD=$$ICDDX^ICDCODE(DXSIEN,$P($G(^ECH(ECIEN,0)),U,3))
"RTN","ECUERPC1",37,0)
 . S DXSD=$P(DXSD,U,2)_"   "_$P(DXSD,U,4)
"RTN","ECUERPC1",38,0)
 . S CNT=CNT+1,^TMP($J,"ECDXS",CNT)=ECIEN_U_DXSIEN_U_DXSD
"RTN","ECUERPC1",39,0)
 S RESULTS=$NA(^TMP($J,"ECDXS"))
"RTN","ECUERPC1",40,0)
 Q
"RTN","ECUERPC1",41,0)
PATMOD(ECIEN) ;
"RTN","ECUERPC1",42,0)
 ;Returns to broker a patient procedure modifier from EVENT CAPTURE
"RTN","ECUERPC1",43,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",44,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",45,0)
 ;
"RTN","ECUERPC1",46,0)
 ;OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",47,0)
 ;          721 IEN^modifier ien #81.3^modifier^modifier name
"RTN","ECUERPC1",48,0)
 ;
"RTN","ECUERPC1",49,0)
 N MOD,MODIEN,CNT,MODS
"RTN","ECUERPC1",50,0)
 I '$D(^ECH(ECIEN,"MOD")) Q
"RTN","ECUERPC1",51,0)
 K ^TMP($J,"ECMOD")
"RTN","ECUERPC1",52,0)
 S (CNT,MOD)=0 F  S MOD=$O(^ECH(ECIEN,"MOD",MOD)) Q:'MOD  D
"RTN","ECUERPC1",53,0)
 . S MODIEN=$G(^ECH(ECIEN,"MOD",MOD,0)) I MODIEN="" Q
"RTN","ECUERPC1",54,0)
 . S MODS=$$MOD^ICPTMOD(MODIEN,"I",$P($G(^ECH(ECIEN,0)),U,3)) I +MODS<0 Q
"RTN","ECUERPC1",55,0)
 . S CNT=CNT+1
"RTN","ECUERPC1",56,0)
 . S ^TMP($J,"ECMOD",CNT)=ECIEN_U_$P(MODS,U,1,2)_"  "_$P(MODS,U,3)
"RTN","ECUERPC1",57,0)
 S RESULTS=$NA(^TMP($J,"ECMOD"))
"RTN","ECUERPC1",58,0)
 Q
"RTN","ECUERPC1",59,0)
PATCLASS(ECIEN) ;
"RTN","ECUERPC1",60,0)
 ;Returns to broker a patient classification & eligibility data from 
"RTN","ECUERPC1",61,0)
 ;EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",62,0)
 ; INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",63,0)
 ; OUTPUTS  RESULTS - Array of procedure modifiers
"RTN","ECUERPC1",64,0)
 ;  721 IEN^agent orange^radiation exposure^service connect^environmental
"RTN","ECUERPC1",65,0)
 ;  contaminants^military sexual trauma^eligibility code #8^eligibility
"RTN","ECUERPC1",66,0)
 ;  description^head/neck cancer^combat veteran
"RTN","ECUERPC1",67,0)
 ;
"RTN","ECUERPC1",68,0)
 N CLA,ELIG,ELCOD,ECAO,ECIR,ECEC,ECSC,ECMST,STR,ECHNC,ECCV
"RTN","ECUERPC1",69,0)
 I '$D(^ECH(ECIEN,"P")),'$D(^ECH(ECIEN,"PCE")) Q
"RTN","ECUERPC1",70,0)
 K ^TMP($J,"ECLASS")
"RTN","ECUERPC1",71,0)
 S ELIG=$P($G(^ECH(ECIEN,"PCE")),"~",17),ELCOD="",CLA=$G(^ECH(ECIEN,"P"))
"RTN","ECUERPC1",72,0)
 S:ELIG'="" ELCOD=$P($G(^DIC(8,ELIG,0)),U)
"RTN","ECUERPC1",73,0)
 S ECAO=$P(CLA,U,3),ECIR=$P(CLA,U,4),ECEC=$P(CLA,U,5),ECSC=$P(CLA,U,6)
"RTN","ECUERPC1",74,0)
 S ECMST=$P(CLA,U,9),ECHNC=$P(CLA,U,10),ECCV=$P(CLA,U,11)
"RTN","ECUERPC1",75,0)
 S STR=ECIEN_U_ECAO_U_ECIR_U_ECSC_U_ECEC_U_ECMST
"RTN","ECUERPC1",76,0)
 S STR=STR_U_ELIG_U_ELCOD_U_ECHNC_U_ECCV,^TMP($J,"ECLASS",1)=STR
"RTN","ECUERPC1",77,0)
 S RESULTS=$NA(^TMP($J,"ECLASS"))
"RTN","ECUERPC1",78,0)
 Q
"RTN","ECUERPC1",79,0)
PATOTH(ECIEN) ;
"RTN","ECUERPC1",80,0)
 ;Returns to broker a patient remaining data from EVENT CAPTURE
"RTN","ECUERPC1",81,0)
 ;PATIENT FILE #721
"RTN","ECUERPC1",82,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC1",83,0)
 ;
"RTN","ECUERPC1",84,0)
 ;OUTPUTS  RESULTS - 
"RTN","ECUERPC1",85,0)
 ;          721 IEN^procedure reason
"RTN","ECUERPC1",86,0)
 ;
"RTN","ECUERPC1",87,0)
 N REAS,ECX
"RTN","ECUERPC1",88,0)
 K ^TMP($J,"ECOTH")
"RTN","ECUERPC1",89,0)
 S ECX=^ECH(ECIEN,0)
"RTN","ECUERPC1",90,0)
 S REAS=$$GET1^DIQ(721,ECIEN,34,"E")
"RTN","ECUERPC1",91,0)
 S ^TMP($J,"ECOTH",1)=REAS
"RTN","ECUERPC1",92,0)
 S RESULTS=$NA(^TMP($J,"ECOTH"))
"RTN","ECUERPC1",93,0)
 Q
"RTN","ECUERPC1",94,0)
PATCLAST(RESULTS,ECARY) ;
"RTN","ECUERPC1",95,0)
 ;Returns to broker a patient status (in/out) and classification
"RTN","ECUERPC1",96,0)
 ;     RPC: EC GETPATCLASTAT
"RTN","ECUERPC1",97,0)
 ;INPUTS  ECARY  - Contains the following subscripted elements  
"RTN","ECUERPC1",98,0)
 ;         ECDFN - Patient ien (#2)
"RTN","ECUERPC1",99,0)
 ;         ECD   - DSS Unit ien (#724)
"RTN","ECUERPC1",100,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",101,0)
 ;OUTPUTS  RESULTS - Patient status and classifications delimited by (^)
"RTN","ECUERPC1",102,0)
 ;         Patient Status: I for inpatient or O for outpatient
"RTN","ECUERPC1",103,0)
 ;         Classification: 2- Agent Orange, 3- Ionizing Radiation
"RTN","ECUERPC1",104,0)
 ;          4- SC Condition, 5- Environmental Contaminants 6- Military
"RTN","ECUERPC1",105,0)
 ;          Sexual Trauma    7- Head/Neck Cancer 8- Combat Veteran
"RTN","ECUERPC1",106,0)
 ;         Data after the '~' refers to those class. that must be asked 
"RTN","ECUERPC1",107,0)
 ;         by Delphi appl. when the answer to SC=No.
"RTN","ECUERPC1",108,0)
 ;         Data after "~"  1- Agent Orange  2- Ionizing Radi. 3- Env Cont
"RTN","ECUERPC1",109,0)
 N ECDFN,ECDT,ECX,I,ECCLARY,SCDAT,PATSTAT
"RTN","ECUERPC1",110,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",111,0)
 S ECDFN=$P(ECARY,U),ECD=$P(ECARY,U,2),ECDT=$P(ECARY,U,3) Q:ECDFN=""
"RTN","ECUERPC1",112,0)
 I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",113,0)
 S PATSTAT=$$INOUTPT^ECUTL0(ECDFN,ECDT),RESULTS="^^^^^^",SCDAT=";;;"
"RTN","ECUERPC1",114,0)
 I PATSTAT="I" D  Q  ;added to be consistent w roll-n-scroll 11/25/03 JAM
"RTN","ECUERPC1",115,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",116,0)
 I '$$CHKDSS^ECUTL0(+$G(ECD),PATSTAT) D  Q
"RTN","ECUERPC1",117,0)
 .S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",118,0)
 D CL^SDCO21(ECDFN,ECDT,"",.ECCLARY) F ECX=3,1,2,4,5,6,7 D
"RTN","ECUERPC1",119,0)
 .I ECX=1,$P($G(^DPT(ECDFN,.321)),"^",2)'="Y" Q
"RTN","ECUERPC1",120,0)
 .I ECX=2,$P($G(^DPT(ECDFN,.321)),"^",3)'="Y" Q
"RTN","ECUERPC1",121,0)
 .I ECX=4,$P($G(^DPT(ECDFN,.322)),"^",13)'="Y",'$$EC^SDCO22(ECDFN,"") Q
"RTN","ECUERPC1",122,0)
 .I ECX=3,$D(ECCLARY(ECX)) F I=1,2,4 S ECCLARY(I)="SC"
"RTN","ECUERPC1",123,0)
 .I '$D(ECCLARY(ECX)) Q
"RTN","ECUERPC1",124,0)
 .;Check SC, if answer to SC is NO then these questions will be asked
"RTN","ECUERPC1",125,0)
 .I ECCLARY(ECX)="SC" S $P(SCDAT,";",ECX)="E"
"RTN","ECUERPC1",126,0)
 .E  S $P(RESULTS,"^",ECX)="E"
"RTN","ECUERPC1",127,0)
 S RESULTS=PATSTAT_"^"_RESULTS_$S(SCDAT'="":"~"_SCDAT,1:"")
"RTN","ECUERPC1",128,0)
 Q
"RTN","ECUERPC1",129,0)
ENCDXS(RESULTS,ECARY) ;
"RTN","ECUERPC1",130,0)
 ;Broker call returns a patient encounter primary & secondary dx (#721)
"RTN","ECUERPC1",131,0)
 ;     RPC: EC GETENCDXS
"RTN","ECUERPC1",132,0)
 ;INPUTS   ECDFN - Patient ien (#2)
"RTN","ECUERPC1",133,0)
 ;         ECDT  - Procedure date and time (fileman format)
"RTN","ECUERPC1",134,0)
 ;         ECL   - Location ien
"RTN","ECUERPC1",135,0)
 ;         EC4   - Clinic ien
"RTN","ECUERPC1",136,0)
 ;
"RTN","ECUERPC1",137,0)
 ;OUTPUTS  RESULTS - array of patient encounter diagnosis
"RTN","ECUERPC1",138,0)
 ;         primary/secondary flag^DX ien^DX code  DX description.
"RTN","ECUERPC1",139,0)
 ;
"RTN","ECUERPC1",140,0)
 N ECDFN,ECDT,ECL,EC4,ECPDX,ECDX,ECDXN,ECDXS,CNT,STR,ECPDX,SDXCNT
"RTN","ECUERPC1",141,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",142,0)
 K ^TMP($J,"ECENCDXS")
"RTN","ECUERPC1",143,0)
 S ECDFN=$P(ECARY,U),ECDT=+$P(ECARY,U,2),ECL=$P(ECARY,U,3)
"RTN","ECUERPC1",144,0)
 S EC4=$P(ECARY,U,4) I ECDT="" D NOW^%DTC S ECDT=%
"RTN","ECUERPC1",145,0)
 I ECDFN=""!(ECL="")!(EC4="") Q
"RTN","ECUERPC1",146,0)
 S (ECDX,ECDXN)="",ECPDX=$$PDXCK^ECUTL2(ECDFN,ECDT,ECL,EC4) I ECDX="" Q
"RTN","ECUERPC1",147,0)
 S IEN="",STR=1_U_ECDX_U_ECDXN_"   "_$P($$ICDDX^ICDCODE(ECDX,ECDT),U,4)
"RTN","ECUERPC1",148,0)
 S CNT=1,^TMP($J,"ECENCDXS",CNT)=STR
"RTN","ECUERPC1",149,0)
 ;*ACS concat description to 2nd diag code, in the order entered by the user
"RTN","ECUERPC1",150,0)
 F  S IEN=$O(ECDXS(IEN)) Q:IEN=""  D
"RTN","ECUERPC1",151,0)
 . S CNT=CNT+1,^TMP($J,"ECENCDXS",CNT)=0_U_ECDXS(IEN)_U_IEN_"   "_$P($$ICDDX^ICDCODE(ECDXS(IEN),ECDT),U,4)
"RTN","ECUERPC1",152,0)
 S RESULTS=$NA(^TMP($J,"ECENCDXS"))
"RTN","ECUERPC1",153,0)
 Q
"RTN","ECUERPC1",154,0)
 ;
"RTN","ECUERPC1",155,0)
PROCBAT(RESULTS,ECARY) ;
"RTN","ECUERPC1",156,0)
 ;Broker call returns the entries from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC1",157,0)
 ;for patients for a specific procedure
"RTN","ECUERPC1",158,0)
 ;        RPC: EC GETBATPROCS
"RTN","ECUERPC1",159,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC1",160,0)
 ;          ECLOC - Location ien
"RTN","ECUERPC1",161,0)
 ;          ECUNT - DSS unit ien
"RTN","ECUERPC1",162,0)
 ;          ECC   - Category ien
"RTN","ECUERPC1",163,0)
 ;          ECP   - Procedure ien
"RTN","ECUERPC1",164,0)
 ;          ECSD  - Start Date
"RTN","ECUERPC1",165,0)
 ;          ECED  - End Date
"RTN","ECUERPC1",166,0)
 ;
"RTN","ECUERPC1",167,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient data containing:-
"RTN","ECUERPC1",168,0)
 ;          721 IEN^Patient name^Procedure Date/Time^Primary Dx
"RTN","ECUERPC1",169,0)
 ;          ^Ordering Section^Associated Clinic
"RTN","ECUERPC1",170,0)
 ;^SSN^DOB^Procedure Date and Time
"RTN","ECUERPC1",171,0)
 N IEN,CNT,ECLOC,ECUNT,NODE,DATA,PXDT,ECV,ECC,ECP,ECSD,ECED,DATE,DFN
"RTN","ECUERPC1",172,0)
 N CAT,ECI,VADM,ORC,ASC,ECDX
"RTN","ECUERPC1",173,0)
 S ECV="ECLOC^ECUNT^ECC^ECP^ECSD^ECED"
"RTN","ECUERPC1",174,0)
 D PARSE^ECUERPC(ECV,ECARY)
"RTN","ECUERPC1",175,0)
 I (ECLOC="")!(ECUNT="")!(ECC="")!(ECP="") Q
"RTN","ECUERPC1",176,0)
 D SETENV^ECUMRPC K ^TMP($J,"ECBATPX") S CNT=0
"RTN","ECUERPC1",177,0)
 S %DT="STX" F ECI="ECSD","ECED" S X=@ECI D ^%DT S @ECI=Y
"RTN","ECUERPC1",178,0)
 S ECSD=$S(ECSD=-1:DT,1:ECSD)-.0001,ECED=$S(ECED=-1:DT,1:ECED)+.9999
"RTN","ECUERPC1",179,0)
 Q:ECED'>ECSD  S DATE=ECSD
"RTN","ECUERPC1",180,0)
 F  S DATE=$O(^ECH("AC1",ECLOC,DATE)) Q:'DATE!(DATE>ECED)  S IEN=0 D
"RTN","ECUERPC1",181,0)
 . F  S IEN=$O(^ECH("AC1",ECLOC,DATE,IEN)) Q:'IEN  D
"RTN","ECUERPC1",182,0)
 . . S NODE=$G(^ECH(IEN,0))  Q:NODE=""  Q:$P(NODE,U,7)'=ECUNT
"RTN","ECUERPC1",183,0)
 . . Q:$P(NODE,U,8)'=ECC  Q:$P(NODE,U,9)'=ECP
"RTN","ECUERPC1",184,0)
 . . S ECDX=$P($G(^ECH(IEN,"P")),U,2) I ECDX'="" D
"RTN","ECUERPC1",185,0)
 . . . S ECDX=$$ICDDX^ICDCODE(ECDX,DATE)
"RTN","ECUERPC1",186,0)
 . . . S ECDX=$P(ECDX,U,2)_"  "_$P(ECDX,U,4)
"RTN","ECUERPC1",187,0)
 . . S ASC=$P(NODE,U,19) S:ASC'="" ASC=$$GET1^DIQ(44,ASC,.01,"I")
"RTN","ECUERPC1",188,0)
 . . S ORC=$P(NODE,U,12) S:ORC'="" ORC=$$GET1^DIQ(723,ORC,.01,"I")
"RTN","ECUERPC1",189,0)
 . . S Y=DATE X ^DD("DD") S PXDT=Y,DFN=$P(NODE,U,2) D DEM^VADPT
"RTN","ECUERPC1",190,0)
 . . S DATA=$E(VADM(1),1,30)_U_PXDT_U_ECDX_U_ORC_U_ASC
"RTN","ECUERPC1",191,0)
 . . S CNT=CNT+1,^TMP($J,"ECBATPX",CNT)=IEN_U_DATA
"RTN","ECUERPC1",192,0)
 S RESULTS=$NA(^TMP($J,"ECBATPX"))
"RTN","ECUERPC1",193,0)
 Q
"RTN","ECUERPC1",194,0)
 ;
"RTN","ECUERPC1",195,0)
CLHLP(RESULTS,ECARY) ;RPC Broker entry point for classification help
"RTN","ECUERPC1",196,0)
 ;        RPC: EC CLASHELP
"RTN","ECUERPC1",197,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",198,0)
 ;          ECDFN  - Patient DFN from file (#2)
"RTN","ECUERPC1",199,0)
 ;          ECKY   - Key to provide help on
"RTN","ECUERPC1",200,0)
 ;
"RTN","ECUERPC1",201,0)
 ;OUTPUTS  RESULTS - Array of help text for classification
"RTN","ECUERPC1",202,0)
 ;
"RTN","ECUERPC1",203,0)
 N ECFILER,ECERR,ECDIRY,ECUFILE,ECDFN,ECKY,ECHNDL
"RTN","ECUERPC1",204,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",205,0)
 K ^TMP("ECMSG",$J)
"RTN","ECUERPC1",206,0)
 S ECERR=0,ECDFN=$P(ECARY,U),ECKY=$P(ECARY,U,2) D  I ECERR D CLEND Q
"RTN","ECUERPC1",207,0)
 .I ECDFN="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not defined" Q
"RTN","ECUERPC1",208,0)
 .I ECKY="" S ECERR=1,^TMP("ECMSG",$J,1)="0^Help Key not defined" Q
"RTN","ECUERPC1",209,0)
 .S DIC=2,DIC(0)="NMZX",X=ECDFN D ^DIC I Y<0 D
"RTN","ECUERPC1",210,0)
 ..S ECERR=1,^TMP("ECMSG",$J,1)="0^Patient IEN not found"
"RTN","ECUERPC1",211,0)
 S ECHNDL="ECLASHLP" D HFSOPEN^ECRRPC(ECHNDL) I ECERR D CLEND Q
"RTN","ECUERPC1",212,0)
 U IO
"RTN","ECUERPC1",213,0)
 I ECKY="SC" D SC^SDCO23(ECDFN)
"RTN","ECUERPC1",214,0)
 D HFSCLOSE^ECRRPC(ECFILER)
"RTN","ECUERPC1",215,0)
CLEND ;
"RTN","ECUERPC1",216,0)
 I $D(^TMP("ECMSG",$J)) S RESULTS=$NA(^TMP("ECMSG",$J)) Q
"RTN","ECUERPC1",217,0)
 S RESULTS=$NA(^TMP($J))
"RTN","ECUERPC1",218,0)
 Q
"RTN","ECUERPC1",219,0)
ECDEF(RESULTS,ECARY) ;RPC Broker entry point to get a default for space bar
"RTN","ECUERPC1",220,0)
 ;        RPC: EC SPACEBAR
"RTN","ECUERPC1",221,0)
 ;INPUTS   ECARY - Contains the following elements for report printing
"RTN","ECUERPC1",222,0)
 ;          ECFILE - File to obtain value from
"RTN","ECUERPC1",223,0)
 ;
"RTN","ECUERPC1",224,0)
 ;OUTPUTS  RESULTS - IEN^Description of Text
"RTN","ECUERPC1",225,0)
 ;
"RTN","ECUERPC1",226,0)
 N DIC,ECFILE,X,Y
"RTN","ECUERPC1",227,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC1",228,0)
 S ECFILE=$P(ECARY,U)
"RTN","ECUERPC1",229,0)
 I ECFILE="" S ECERR=1,RESULTS="0^File not defined" Q
"RTN","ECUERPC1",230,0)
 S X=" ",DIC(0)="MZX",DIC=ECFILE D ^DIC I Y<0 D  I ECERR Q
"RTN","ECUERPC1",231,0)
 . S ECERR=1,RESULTS="0^Nothing found"
"RTN","ECUERPC1",232,0)
 S RESULTS=Y
"RTN","ECUERPC1",233,0)
 Q
"RTN","ECUERPC2")
0^39^B4379699^B3503395
"RTN","ECUERPC2",1,0)
ECUERPC2 ;ALB/JAM;Event Capture Data Entry Broker Utilities ;Apr 24, 2002
"RTN","ECUERPC2",2,0)
 ;;2.0; EVENT CAPTURE ;**41,39,50,72**;8 May 96
"RTN","ECUERPC2",3,0)
 ;
"RTN","ECUERPC2",4,0)
ECDOD(RESULTS,ECARY) ;RPC Broker entry point to get a patient's date of death
"RTN","ECUERPC2",5,0)
 ;        RPC: EC DIEDON
"RTN","ECUERPC2",6,0)
 ;INPUTS   ECARY - Contains the following elements as input
"RTN","ECUERPC2",7,0)
 ;          ECDFN - Patient DFN
"RTN","ECUERPC2",8,0)
 ;
"RTN","ECUERPC2",9,0)
 ;OUTPUTS  RESULTS - Fileman Internal Date of Patient date of Death^
"RTN","ECUERPC2",10,0)
 ;                   Message with Patient External Date of Death
"RTN","ECUERPC2",11,0)
 ;
"RTN","ECUERPC2",12,0)
 N ECDFN,DFN,VADM
"RTN","ECUERPC2",13,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC2",14,0)
 S ECDFN=$P(ECARY,U),RESULTS="^"
"RTN","ECUERPC2",15,0)
 I ECDFN="" S RESULTS="0^Patient DFN not defined" Q
"RTN","ECUERPC2",16,0)
 ;NOIS MWV-0603-21781: line below changed by VMP
"RTN","ECUERPC2",17,0)
 S DFN=ECDFN D 2^VADPT I +VADM(6) S RESULTS=$P(VADM(6),U)_"^"_"[PATIENT DIED ON "_$P(VADM(6),U,2)_"]"
"RTN","ECUERPC2",18,0)
 Q
"RTN","ECUERPC2",19,0)
VISINFO(RESULTS,ECARY) ;
"RTN","ECUERPC2",20,0)
 ;
"RTN","ECUERPC2",21,0)
 ;Broker call returns the EC values based on a Visit Number
"RTN","ECUERPC2",22,0)
 ;        RPC: EC GETVISITINFO
"RTN","ECUERPC2",23,0)
 ;INPUTS   ECARY - Contains the following subscripted elements
"RTN","ECUERPC2",24,0)
 ;          ECVSN - Visit Number, IEN in file (#9000010)
"RTN","ECUERPC2",25,0)
 ;
"RTN","ECUERPC2",26,0)
 ;OUTPUTS  RESULTS - Contains the following data:-
"RTN","ECUERPC2",27,0)
 ;          Location IEN^DSS Unit IEN^Proc Date/Time Fileman^
"RTN","ECUERPC2",28,0)
 ;           Procedure Date/Time Readable^Patient DFN
"RTN","ECUERPC2",29,0)
 ;          0^Error Message (if error)
"RTN","ECUERPC2",30,0)
 ;
"RTN","ECUERPC2",31,0)
 N ECLOC,ECUNT,NODE,Y,ECPXDT,DA,ECVSN,ECDFN,DSSF,LOC,UNT
"RTN","ECUERPC2",32,0)
 D SETENV^ECUMRPC
"RTN","ECUERPC2",33,0)
 S ECVSN=$P(ECARY,U) I ECVSN="" S RESULTS=0_"^Visit undefined" Q
"RTN","ECUERPC2",34,0)
 K ^TMP($J,"ECVISINFO")
"RTN","ECUERPC2",35,0)
 S DA=$O(^ECH("C",ECVSN,0)) I 'DA D  Q
"RTN","ECUERPC2",36,0)
 . S RESULTS=0_"^Visit not on File"
"RTN","ECUERPC2",37,0)
 S NODE=$G(^ECH(DA,0)) I NODE="" D  Q
"RTN","ECUERPC2",38,0)
 . S RESULTS=0_"No corresponding EC procedures found for Visit"
"RTN","ECUERPC2",39,0)
 S ECLOC=$P(NODE,U,4),ECUNT=$P(NODE,U,7),ECPXDT=$P(NODE,U,3)
"RTN","ECUERPC2",40,0)
 S LOC=$P($G(^DIC(4,ECLOC,0)),U),UNT=$G(^ECD(ECUNT,0)),DSSF=$P(UNT,U,14)
"RTN","ECUERPC2",41,0)
 S UNT=$P(UNT,U) S:DSSF="" DSSF="N"
"RTN","ECUERPC2",42,0)
 S ECDFN=$P(NODE,U,2),Y=ECPXDT X ^DD("DD")
"RTN","ECUERPC2",43,0)
 S RESULTS=ECLOC_U_LOC_U_ECUNT_U_UNT_U_DSSF_U_ECPXDT_U_Y_U_ECDFN
"RTN","ECUERPC2",44,0)
 Q
"RTN","ECUERPC2",45,0)
PATPRV(ECIEN) ;
"RTN","ECUERPC2",46,0)
 ;Returns to broker a patient providers (primary & secondary) entries 
"RTN","ECUERPC2",47,0)
 ;from EVENT CAPTURE PATIENT FILE #721
"RTN","ECUERPC2",48,0)
 ;INPUTS   ECIEN - Event Capture Patient ien
"RTN","ECUERPC2",49,0)
 ;
"RTN","ECUERPC2",50,0)
 ;OUTPUTS  RESULTS - Array of Event Capture Patient file contains
"RTN","ECUERPC2",51,0)
 ;          ^ECH IEN^provider ien^provider description^Primary/Secondary
"RTN","ECUERPC2",52,0)
 ;           code^Primary/Secondary description
"RTN","ECUERPC2",53,0)
 ;
"RTN","ECUERPC2",54,0)
 N ECPRV,ECPROV
"RTN","ECUERPC2",55,0)
 I '$D(^ECH(ECIEN,"PRV")) Q
"RTN","ECUERPC2",56,0)
 K ^TMP($J,"ECPRV")
"RTN","ECUERPC2",57,0)
 S ECPRV=$$GETPRV^ECPRVMUT(ECIEN,.ECPROV) I 'ECPRV D
"RTN","ECUERPC2",58,0)
 .M ^TMP($J,"ECPRV")=ECPROV
"RTN","ECUERPC2",59,0)
 S RESULTS=$NA(^TMP($J,"ECPRV"))
"RTN","ECUERPC2",60,0)
 Q
"RTN","ECUMRPC1")
0^43^B61789202^B61005810
"RTN","ECUMRPC1",1,0)
ECUMRPC1 ;ALB/JAM-Event Capture Management Broker Utilities ;28 Nov 00
"RTN","ECUMRPC1",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,33,72**;8 May 96
"RTN","ECUMRPC1",3,0)
 ;
"RTN","ECUMRPC1",4,0)
DSSUNT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",5,0)
 ;
"RTN","ECUMRPC1",6,0)
 ;This broker entry point returns DSS units from file 724
"RTN","ECUMRPC1",7,0)
 ;        RPC: EC GETDSSUNIT
"RTN","ECUMRPC1",8,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",9,0)
 ;               STAT   - Active or inactive DSS Units (optional)
"RTN","ECUMRPC1",10,0)
 ;               A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",11,0)
 ;
"RTN","ECUMRPC1",12,0)
 ;OUTPUTS        RESULTS - Array of DSS units. Data pieces as follows:-
"RTN","ECUMRPC1",13,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",14,0)
 ;                 1     IEN of DSS Unit
"RTN","ECUMRPC1",15,0)
 ;                 2     Name of DSS Unit
"RTN","ECUMRPC1",16,0)
 ;                 3     Service
"RTN","ECUMRPC1",17,0)
 ;                 4     Medical Specialty
"RTN","ECUMRPC1",18,0)
 ;                 5     Cost Center
"RTN","ECUMRPC1",19,0)
 ;                 6     Unit Number
"RTN","ECUMRPC1",20,0)
 ;                 7     Inactive Flag
"RTN","ECUMRPC1",21,0)
 ;                 8     Associated Stop code (if not sending to PCE)
"RTN","ECUMRPC1",22,0)
 ;                 9     Category flag
"RTN","ECUMRPC1",23,0)
 ;                 10    Default date entry
"RTN","ECUMRPC1",24,0)
 ;                 11    Send to PCE Flag
"RTN","ECUMRPC1",25,0)
 ;
"RTN","ECUMRPC1",26,0)
 N UNT,STAT,CNT,CAT,NODE,ECS,STR,SRV,MED,CST,UNO,INACT,ASC,PCE,ACT,NODE
"RTN","ECUMRPC1",27,0)
 N DFD
"RTN","ECUMRPC1",28,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",29,0)
 K ^TMP($J,"ECDSSUNT")
"RTN","ECUMRPC1",30,0)
 S STAT=$P($G(ECARY),U),(CNT,UNT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",31,0)
 F  S UNT=$O(^ECD(UNT)) Q:'UNT  S NODE=$G(^ECD(UNT,0)) I NODE'="" D
"RTN","ECUMRPC1",32,0)
 . S ECS=$P(NODE,U,8),ACT=$P(NODE,U,6),ACT=$S(ACT:1,1:0)
"RTN","ECUMRPC1",33,0)
 . Q:'ECS  I $S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC1",34,0)
 . S CNT=CNT+1,CAT=$P(NODE,U,11),CAT=$S(CAT:"Y",1:"N"),UNO=$P(NODE,U,5)
"RTN","ECUMRPC1",35,0)
 . S SRV=$$GET1^DIQ(49,$P(NODE,U,2),.01,"I")
"RTN","ECUMRPC1",36,0)
 . S MED=$$GET1^DIQ(723,$P(NODE,U,3),.01,"I")
"RTN","ECUMRPC1",37,0)
 . S CST=$$GET1^DIQ(420.1,$P(NODE,U,4),.01,"I")
"RTN","ECUMRPC1",38,0)
 . S INACT=$P(NODE,U,6),INACT=$S(INACT:"I",1:"A"),ASC=$P(NODE,U,10)
"RTN","ECUMRPC1",39,0)
 . S:ASC ASC=$$GET1^DIQ(40.7,ASC,.01,"I")
"RTN","ECUMRPC1",40,0)
 . S DFD=$S($P(NODE,U,12)="N":"N",1:"X"),PCE=$P(NODE,U,14)
"RTN","ECUMRPC1",41,0)
 . S PCE=$S(PCE="A":PCE,PCE="O":PCE,1:"N")
"RTN","ECUMRPC1",42,0)
 . S STR=UNT_U_$P(NODE,U)_U_SRV_U_MED_U_CST_U_UNO_U_INACT_U_ASC_U_CAT
"RTN","ECUMRPC1",43,0)
 . S STR=STR_U_DFD_U_PCE,^TMP($J,"ECDSSUNT",CNT)=STR
"RTN","ECUMRPC1",44,0)
 S RESULTS=$NA(^TMP($J,"ECDSSUNT"))
"RTN","ECUMRPC1",45,0)
 Q
"RTN","ECUMRPC1",46,0)
CAT(RESULTS,ECARY) ;
"RTN","ECUMRPC1",47,0)
 ;
"RTN","ECUMRPC1",48,0)
 ;This broker entry point returns a list of categories from file 726
"RTN","ECUMRPC1",49,0)
 ;        RPC: EC GETCAT
"RTN","ECUMRPC1",50,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC1",51,0)
 ;                STAT - Active or inactive category (optional)
"RTN","ECUMRPC1",52,0)
 ;                A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC1",53,0)
 ;
"RTN","ECUMRPC1",54,0)
 ;OUTPUTS        RESULTS - Array of category. Data pieces as follows:-
"RTN","ECUMRPC1",55,0)
 ;               PIECE - Description
"RTN","ECUMRPC1",56,0)
 ;                 1     IEN of Category
"RTN","ECUMRPC1",57,0)
 ;                 2     Name of Category
"RTN","ECUMRPC1",58,0)
 ;                 3     Creation Date
"RTN","ECUMRPC1",59,0)
 ;                 4     Inactive Date
"RTN","ECUMRPC1",60,0)
 ;
"RTN","ECUMRPC1",61,0)
 N STAT,CNT,CAT,NODE,ECDT,INDT,CRDT
"RTN","ECUMRPC1",62,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",63,0)
 K ^TMP($J,"ECCAT")
"RTN","ECUMRPC1",64,0)
 S STAT=$P($G(ECARY),U),(CNT,CAT)=0 S:STAT="" STAT="A"
"RTN","ECUMRPC1",65,0)
 F  S CAT=$O(^EC(726,CAT)) Q:'CAT  S NODE=$G(^EC(726,CAT,0)) I NODE'="" D
"RTN","ECUMRPC1",66,0)
 . S ECDT=$P(NODE,U,3)
"RTN","ECUMRPC1",67,0)
 . I STAT="A",ECDT'="",ECDT'>DT Q
"RTN","ECUMRPC1",68,0)
 . I STAT="I",ECDT="" Q
"RTN","ECUMRPC1",69,0)
 . S CRDT=$$FMTE^XLFDT($P(NODE,U,2),"2F")
"RTN","ECUMRPC1",70,0)
 . S INDT=$$FMTE^XLFDT($P(NODE,U,3),"2F")
"RTN","ECUMRPC1",71,0)
 . S CNT=CNT+1,^TMP($J,"ECCAT",CNT)=CAT_U_$P(NODE,U)_U_CRDT_U_INDT
"RTN","ECUMRPC1",72,0)
 S RESULTS=$NA(^TMP($J,"ECCAT"))
"RTN","ECUMRPC1",73,0)
 Q
"RTN","ECUMRPC1",74,0)
 ;
"RTN","ECUMRPC1",75,0)
CATCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",76,0)
 ;
"RTN","ECUMRPC1",77,0)
 ;Broker call checks whether category is used in an Event Code Screen.
"RTN","ECUMRPC1",78,0)
 ;        RPC: EC DSSCATCHECK
"RTN","ECUMRPC1",79,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",80,0)
 ;          ECDA  - DSS Unit ien (file #724)
"RTN","ECUMRPC1",81,0)
 ;
"RTN","ECUMRPC1",82,0)
 ;OUTPUTS  RESULTS - Category used in Event Code Screen, 1-Yes or 0-No
"RTN","ECUMRPC1",83,0)
 ;
"RTN","ECUMRPC1",84,0)
 N ECDA,ECFLG,ECX
"RTN","ECUMRPC1",85,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",86,0)
 S ECDA=$P(ECARY,U) I ECDA="" Q
"RTN","ECUMRPC1",87,0)
 S (ECFLG,ECX)=0
"RTN","ECUMRPC1",88,0)
 F  S ECX=$O(^ECJ("AP",ECX)) Q:'ECX!(ECFLG)  D
"RTN","ECUMRPC1",89,0)
 . I $D(^ECJ("AP",ECX,ECDA)) S ECFLG=1
"RTN","ECUMRPC1",90,0)
 S RESULTS=ECFLG
"RTN","ECUMRPC1",91,0)
 Q
"RTN","ECUMRPC1",92,0)
PXCHK(RESULTS,ECARY) ;
"RTN","ECUMRPC1",93,0)
 ;
"RTN","ECUMRPC1",94,0)
 ;Checks whether procedure description or national number exist
"RTN","ECUMRPC1",95,0)
 ;INPUTS   ECARY  - Contains the following subscripted elements
"RTN","ECUMRPC1",96,0)
 ;          ECP - Procedure description
"RTN","ECUMRPC1",97,0)
 ;          ECN - EC National Number
"RTN","ECUMRPC1",98,0)
 ;
"RTN","ECUMRPC1",99,0)
 ;OUTPUTS  RESULTS - Px used^National # used, 1-Yes or 0-No ex. 1^0
"RTN","ECUMRPC1",100,0)
 ;
"RTN","ECUMRPC1",101,0)
 N ECX,ECP,ECN
"RTN","ECUMRPC1",102,0)
 Q:$G(ECARY)
"RTN","ECUMRPC1",103,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",104,0)
 S ECP=$P(ECARY,U),ECN=$P(ECARY,U,2),RESULTS="0^0"
"RTN","ECUMRPC1",105,0)
 I ECP'="",$D(^EC(725,"B",ECP)) S $P(RESULTS,U)=1
"RTN","ECUMRPC1",106,0)
 I ECN'="" F ECX="E","D","DL" D  I $P(RESULTS,U,2) Q
"RTN","ECUMRPC1",107,0)
 . I $D(^EC(725,ECX,ECN)) S $P(RESULTS,U,2)=1
"RTN","ECUMRPC1",108,0)
 Q
"RTN","ECUMRPC1",109,0)
SRCLST(RESULTS,ECARY) ;
"RTN","ECUMRPC1",110,0)
 ;
"RTN","ECUMRPC1",111,0)
 ;This broker entry returns an array of codes from a file based on a 
"RTN","ECUMRPC1",112,0)
 ;search string.
"RTN","ECUMRPC1",113,0)
 ;        RPC: EC GETLIST
"RTN","ECUMRPC1",114,0)
 ;
"RTN","ECUMRPC1",115,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC1",116,0)
 ;             ECSTR  - Search string
"RTN","ECUMRPC1",117,0)
 ;             ECFIL  - File to search
"RTN","ECUMRPC1",118,0)
 ;             ECDIR  - Search order
"RTN","ECUMRPC1",119,0)
 ;
"RTN","ECUMRPC1",120,0)
 ;OUTPUTS     RESULTS - Array of values based on the search criteria.
"RTN","ECUMRPC1",121,0)
 ;
"RTN","ECUMRPC1",122,0)
 N ECNT,DIC,ECSTR,ECFIL,ECORD,ECER,ECDI
"RTN","ECUMRPC1",123,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC1",124,0)
 S ECNT=0,ECFIL=$P(ECARY,U),ECSTR=$P(ECARY,U,2),ECDIR=$P(ECARY,U,3)
"RTN","ECUMRPC1",125,0)
 S ECORD=$S(ECDIR=-1:"B",1:"I")
"RTN","ECUMRPC1",126,0)
 K ^TMP($J,"ECFIND"),^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",127,0)
 I ECFIL="" Q
"RTN","ECUMRPC1",128,0)
 S ECNUM=44
"RTN","ECUMRPC1",129,0)
 I ECFIL=420.1 D CSTCTR            ;Cost Center search
"RTN","ECUMRPC1",130,0)
 I ECFIL=49 D SERVC                ;Service search
"RTN","ECUMRPC1",131,0)
 I ECFIL=723 D MEDSPC              ;Medical specialty
"RTN","ECUMRPC1",132,0)
 I ECFIL=40.7 D STPCDE G EXIT      ;Associated stop code
"RTN","ECUMRPC1",133,0)
 I ECFIL=724 D DUNT G EXIT         ;DSS Unit
"RTN","ECUMRPC1",134,0)
 I ECFIL=726 D ECAT                ;Category
"RTN","ECUMRPC1",135,0)
 I ECFIL=4 D LOC                   ;Location
"RTN","ECUMRPC1",136,0)
 I ECFIL=44 D ASCLN G EXIT         ;Associated clinic
"RTN","ECUMRPC1",137,0)
 I ECFIL=757.01 D LEX^ECUMRPC2 G EXIT  ;Lex ICD code
"RTN","ECUMRPC1",138,0)
 I ECFIL=200 D PROV^ECUMRPC2      ;Providers
"RTN","ECUMRPC1",139,0)
 I $D(ECER) S ^TMP($J,"ECFIND",1)="0^Error occurred during search" G EXIT
"RTN","ECUMRPC1",140,0)
 D SORT
"RTN","ECUMRPC1",141,0)
EXIT K ^TMP("ECSRCH",$J)
"RTN","ECUMRPC1",142,0)
 S RESULTS=$NA(^TMP($J,"ECFIND"))
"RTN","ECUMRPC1",143,0)
 Q
"RTN","ECUMRPC1",144,0)
ASCLN ;Search for active associated clinics (file #44)
"RTN","ECUMRPC1",145,0)
 N CNT,NOD,ECDT,INACT,REACT,ERR
"RTN","ECUMRPC1",146,0)
 S CNT=0,ECDT=DT
"RTN","ECUMRPC1",147,0)
 F  Q:CNT=ECNUM  S ECSTR=$O(^SC("B",ECSTR),ECDIR) Q:ECSTR=""  S CLN="" D
"RTN","ECUMRPC1",148,0)
 .F  S CLN=$O(^SC("B",ECSTR,CLN),ECDIR) Q:CLN=""  S NOD=$G(^SC(CLN,0)) D
"RTN","ECUMRPC1",149,0)
 ..Q:NOD=""  Q:$P(NOD,U,3)'="C"  ;Q:+$G(^SC(CLN,"OOS"))
"RTN","ECUMRPC1",150,0)
 ..S ERR=0 I $D(^SC(CLN,"I")) D  I ERR Q
"RTN","ECUMRPC1",151,0)
 ...S INACT=$P(^SC(CLN,"I"),U),REACT=$P(^SC(CLN,"I"),U,2)
"RTN","ECUMRPC1",152,0)
 ...I INACT D  I ERR Q
"RTN","ECUMRPC1",153,0)
 ....I REACT="" S:ECDT'<INACT ERR=1 Q
"RTN","ECUMRPC1",154,0)
 ....I ECDT'<INACT,ECDT<REACT S ERR=1 Q
"RTN","ECUMRPC1",155,0)
 ...I REACT,ECDT<REACT S ERR=1
"RTN","ECUMRPC1",156,0)
 ..S CNT=CNT+1,^TMP($J,"ECFIND",CNT)=CLN_U_$P(NOD,U)
"RTN","ECUMRPC1",157,0)
 Q
"RTN","ECUMRPC1",158,0)
CSTCTR ;Search for cost centers (File #420.1)
"RTN","ECUMRPC1",159,0)
 N ECNULL,INDX,STR,NSTR,I
"RTN","ECUMRPC1",160,0)
 S $P(ECNULL," ",7)=" ",INDX="B"
"RTN","ECUMRPC1",161,0)
 I $E(ECSTR)?.N,$L(ECSTR)<7 S ECSTR=ECSTR_$E(ECNULL,1,7-$L(ECSTR))
"RTN","ECUMRPC1",162,0)
 I $L($P(ECSTR," "))=6,$P(ECSTR," ",2)?.A D   ;truncate for x-ref
"RTN","ECUMRPC1",163,0)
 . S ECSTR=$P(ECSTR," ")_" "_$E($P(ECSTR," ",2,999),1,22)
"RTN","ECUMRPC1",164,0)
 I $E(ECSTR)?.A S INDX="C",(STR,NSTR)="" D  S ECSTR=NSTR
"RTN","ECUMRPC1",165,0)
 .F I=1:1 S STR=$P(ECSTR," ",I) Q:STR=""  D
"RTN","ECUMRPC1",166,0)
 ..S STR=$E(STR)_$TR($E(STR,2,9999),"ABCDEFGHIJKLMNOPQRSTUVWXYZ","abcdefghijklmnopqrstuvwxyz")
"RTN","ECUMRPC1",167,0)
 ..S NSTR=NSTR_STR
"RTN","ECUMRPC1",168,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"",INDX,"I '$P(^(0),U,2)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",169,0)
 Q
"RTN","ECUMRPC1",170,0)
SERVC ;Search for services (File #49)
"RTN","ECUMRPC1",171,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",172,0)
 Q
"RTN","ECUMRPC1",173,0)
MEDSPC ;Search for medical specialty (File #723)
"RTN","ECUMRPC1",174,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",175,0)
 Q
"RTN","ECUMRPC1",176,0)
STPCDE ;Search for associated stop code (File #40.7)
"RTN","ECUMRPC1",177,0)
 N ECNT,INDX,ECNUL,STR,IEN
"RTN","ECUMRPC1",178,0)
 S $P(ECNUL,"  ",30)=" ",INDX="B",ECNT=0,ECSTR=$P(ECSTR,"~")
"RTN","ECUMRPC1",179,0)
 I +ECSTR,+ECSTR?.N S INDX="C",IEN=0 D  Q
"RTN","ECUMRPC1",180,0)
 .S ECSTR=$O(^DIC(40.7,INDX,+ECSTR)) I ECSTR="" Q
"RTN","ECUMRPC1",181,0)
 .F  S IEN=$O(^DIC(40.7,INDX,ECSTR,IEN)) Q:'IEN  D  I ECNT>(ECNUM-1) Q
"RTN","ECUMRPC1",182,0)
 ..S STR=$G(^DIC(40.7,IEN,0)) I (STR="")!($P(STR,U,3)'="") Q
"RTN","ECUMRPC1",183,0)
 ..S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)_U_IEN
"RTN","ECUMRPC1",184,0)
 ..S ECNT=ECNT+1,^TMP($J,"ECFIND",ECNT)=STR
"RTN","ECUMRPC1",185,0)
 D LISTDIC(ECFIL,"",".01;1",ECORD,ECNUM,ECSTR,"",INDX,"I $P(^(0),""^"",3)=""""!($P(^(0),U,3)'<DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",186,0)
 S ECNT=0
"RTN","ECUMRPC1",187,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",188,0)
 .S STR=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_$G(^(1))
"RTN","ECUMRPC1",189,0)
 .S STR=$E($P(STR,U),1,30)_"  ["_$J($P(STR,U,2),3,0)_"]"_U_$P(STR,U,2)
"RTN","ECUMRPC1",190,0)
 .S ^TMP($J,"ECFIND",ECNT)=STR_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",191,0)
 Q
"RTN","ECUMRPC1",192,0)
DUNT ;Search for DSS unit (File #724)
"RTN","ECUMRPC1",193,0)
 N ECNT,SNDPCE
"RTN","ECUMRPC1",194,0)
 D LISTDIC(ECFIL,"",".01;10;13",ECORD,ECNUM,ECSTR,"","","I '$P(^(0),""^"",6),$P(^(0),U,8)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",195,0)
 S ECNT=0
"RTN","ECUMRPC1",196,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",197,0)
 .S SNDPCE=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,13))
"RTN","ECUMRPC1",198,0)
 .S SNDPCE=$S(SNDPCE="O":1,SNDPCE="A":1,1:0)
"RTN","ECUMRPC1",199,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)_U_$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,10))_U_SNDPCE
"RTN","ECUMRPC1",200,0)
 Q
"RTN","ECUMRPC1",201,0)
ECAT ;Search for Category (File #726)
"RTN","ECUMRPC1",202,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $P(^(0),""^"",3)=""""!($P(^(0),U,3)>DT)","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",203,0)
 Q
"RTN","ECUMRPC1",204,0)
LOC ;Search for Location (File #4)
"RTN","ECUMRPC1",205,0)
 D LISTDIC(ECFIL,"",.01,ECORD,ECNUM,ECSTR,"","","I $G(^(""EC""))","","^TMP(""ECSRCH"",$J)","ECER")
"RTN","ECUMRPC1",206,0)
 Q
"RTN","ECUMRPC1",207,0)
LISTDIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER) ;
"RTN","ECUMRPC1",208,0)
 ;Produces a list of records in a file base on search string
"RTN","ECUMRPC1",209,0)
 N DIC
"RTN","ECUMRPC1",210,0)
 D LIST^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECIND,ECTG,ECER)
"RTN","ECUMRPC1",211,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECNUM,ECFRM,ECPRT,ECINDX,ECSCN,ECID
"RTN","ECUMRPC1",212,0)
 Q
"RTN","ECUMRPC1",213,0)
SORT ;Extracts data to be returned to broker
"RTN","ECUMRPC1",214,0)
 N ECNT,STR
"RTN","ECUMRPC1",215,0)
 S ECNT=0
"RTN","ECUMRPC1",216,0)
 F  S ECNT=$O(^TMP("ECSRCH",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC1",217,0)
 .S ^TMP($J,"ECFIND",ECNT)=$G(^TMP("ECSRCH",$J,"DILIST","ID",ECNT,.01))_U_^TMP("ECSRCH",$J,"DILIST",2,ECNT)
"RTN","ECUMRPC1",218,0)
 Q
"RTN","ECUMRPC2")
0^41^B29933557^B19271367
"RTN","ECUMRPC2",1,0)
ECUMRPC2 ;ALB/JAM;Event Capture Management Broker Utils ; 10/4/00 4:58pm
"RTN","ECUMRPC2",2,0)
 ;;2.0; EVENT CAPTURE ;**25,30,42,46,47,49,75,72**;8 May 96
"RTN","ECUMRPC2",3,0)
GLOC(RESULTS,ECARY) ;
"RTN","ECUMRPC2",4,0)
 ;
"RTN","ECUMRPC2",5,0)
 ;This broker entry point returns all active Event Capture locations
"RTN","ECUMRPC2",6,0)
 ;        RPC: EC GETLOC
"RTN","ECUMRPC2",7,0)
 ;INPUTS         ECARY - Contains the following subscripted elements
"RTN","ECUMRPC2",8,0)
 ;               STAT   - Active or inactive locations (optional)
"RTN","ECUMRPC2",9,0)
 ;               A-ctive (default), I-nactive, B-oth
"RTN","ECUMRPC2",10,0)
 ;
"RTN","ECUMRPC2",11,0)
 ;OUTPUTS        RESULTS - The array of active Event Capture locations.
"RTN","ECUMRPC2",12,0)
 ;               PIECE - Description
"RTN","ECUMRPC2",13,0)
 ;                 1     Location IEN
"RTN","ECUMRPC2",14,0)
 ;                 2     LOC description
"RTN","ECUMRPC2",15,0)
 ;                 3     State Abbreviation
"RTN","ECUMRPC2",16,0)
 ;                 4     Current Location Flag
"RTN","ECUMRPC2",17,0)
 ;                 5     Facility Type
"RTN","ECUMRPC2",18,0)
 ;                 6     Station Number
"RTN","ECUMRPC2",19,0)
 N LOC,STAT,CNT,CLOC,ST,NODE,ACT,ECLOC,ELOC,ECFT,ECSN
"RTN","ECUMRPC2",20,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",21,0)
 K ^TMP($J,"ECLOCATION")
"RTN","ECUMRPC2",22,0)
 S STAT=$P($G(ECARY),U),(CNT,LOC)=0,ACT=0 S:STAT="" STAT="A"
"RTN","ECUMRPC2",23,0)
 D GETLOC^ECL(.ECLOC)
"RTN","ECUMRPC2",24,0)
 F  S LOC=$O(ECLOC(LOC)) Q:'LOC  S ELOC($P(ECLOC(LOC),U,2))=""
"RTN","ECUMRPC2",25,0)
 S LOC=0
"RTN","ECUMRPC2",26,0)
 F  S LOC=$O(^DIC(4,LOC)) Q:'LOC  S NODE=$G(^DIC(4,LOC,0)) I NODE'="" D
"RTN","ECUMRPC2",27,0)
 . I $P(NODE,U)="" Q
"RTN","ECUMRPC2",28,0)
 . I ($P(NODE,U,11)="I")!($P($G(^DIC(4,LOC,99)),U,4)) S ACT=1
"RTN","ECUMRPC2",29,0)
 . I $S(STAT="A"&(ACT):1,STAT="I"&('ACT):1,1:0) Q
"RTN","ECUMRPC2",30,0)
 . S CLOC=$D(ELOC(LOC)),CLOC=$S(CLOC:"YES",1:"")
"RTN","ECUMRPC2",31,0)
 . S CNT=CNT+1,ST=$P(NODE,U,2) S:ST'="" ST=$$GET1^DIQ(5,ST,1,"I")
"RTN","ECUMRPC2",32,0)
 . S ECFT=$P($G(^DIC(4.1,+$G(^DIC(4,LOC,3)),0)),U)
"RTN","ECUMRPC2",33,0)
 . S ECSN=$P($G(^DIC(4,LOC,99)),U)
"RTN","ECUMRPC2",34,0)
 . S ^TMP($J,"ECLOCATION",CNT)=LOC_U_$P(NODE,U)_U_ST_U_CLOC_U_ECFT_U_ECSN
"RTN","ECUMRPC2",35,0)
 S RESULTS=$NA(^TMP($J,"ECLOCATION"))
"RTN","ECUMRPC2",36,0)
 Q
"RTN","ECUMRPC2",37,0)
CPTFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",38,0)
 ;
"RTN","ECUMRPC2",39,0)
 ;This broker entry point does a search on a CPT string and returns
"RTN","ECUMRPC2",40,0)
 ;a list of matches from file #81
"RTN","ECUMRPC2",41,0)
 ;        RPC: EC GETCPTLST
"RTN","ECUMRPC2",42,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",43,0)
 ;             CPTSTR - CPT search string
"RTN","ECUMRPC2",44,0)
 ;
"RTN","ECUMRPC2",45,0)
 ;OUTPUTS     RESULTS - The array of cpt codes. Data pieces as follows:-
"RTN","ECUMRPC2",46,0)
 ;             CPT ien^CPT code^Name
"RTN","ECUMRPC2",47,0)
 ;
"RTN","ECUMRPC2",48,0)
 N CPTSTR,ECNT,DIC,ECTG,ECER
"RTN","ECUMRPC2",49,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",50,0)
 S CPTSTR=$P(ECARY,U),ECNT=0 I CPTSTR="" Q
"RTN","ECUMRPC2",51,0)
 K ^TMP($J,"ECPTSRCH"),^TMP("ECCPT",$J)
"RTN","ECUMRPC2",52,0)
 D CPTSRH(81,CPTSTR)
"RTN","ECUMRPC2",53,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",54,0)
 .S ^TMP($J,"ECPTSRCH",ECNT)=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_U_^TMP("ECCPT",$J,"DILIST","ID",ECNT,2)
"RTN","ECUMRPC2",55,0)
 K ^TMP("ECCPT",$J)
"RTN","ECUMRPC2",56,0)
 S RESULTS=$NA(^TMP($J,"ECPTSRCH"))
"RTN","ECUMRPC2",57,0)
 Q
"RTN","ECUMRPC2",58,0)
 ;
"RTN","ECUMRPC2",59,0)
PXFND(RESULTS,ECARY) ;
"RTN","ECUMRPC2",60,0)
 ;
"RTN","ECUMRPC2",61,0)
 ;This broker entry point does a search on a procedure string and returns
"RTN","ECUMRPC2",62,0)
 ;a list of matches from file #81 and/or #725
"RTN","ECUMRPC2",63,0)
 ;        RPC: EC GETPXLST
"RTN","ECUMRPC2",64,0)
 ;INPUTS      ECARY   - Contains the following subscripted elements
"RTN","ECUMRPC2",65,0)
 ;             PXSTR -  Procedure search string
"RTN","ECUMRPC2",66,0)
 ;
"RTN","ECUMRPC2",67,0)
 ;OUTPUTS     RESULTS - The array of procedures. Data pieces as follows:-
"RTN","ECUMRPC2",68,0)
 ;             Procedure ien^Procedure code  Procedure Name
"RTN","ECUMRPC2",69,0)
 ;
"RTN","ECUMRPC2",70,0)
 N CPTSTR,ECNT,DIC,ECX,CNT,ECTG,ECER,PXSTR,ECSTR
"RTN","ECUMRPC2",71,0)
 D SETENV^ECUMRPC
"RTN","ECUMRPC2",72,0)
 S PXSTR=$P(ECARY,U),ECNT=0 I PXSTR="" Q
"RTN","ECUMRPC2",73,0)
 K ^TMP($J,"ECPXSRCH"),^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",74,0)
 D 
"RTN","ECUMRPC2",75,0)
 . I $P(PXSTR,".")="A" D CPTSRH(81,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",76,0)
 . I $P(PXSTR,".")="B" D CPTSRH(725,$P(PXSTR,".",2)) Q
"RTN","ECUMRPC2",77,0)
 . F ECX=81,725 D CPTSRH(ECX,PXSTR)
"RTN","ECUMRPC2",78,0)
 F  S ECNT=$O(^TMP("ECCPT",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",79,0)
 .S ECID=$G(^TMP("ECCPT",$J,"DILIST",2,ECNT))_";ICPT("
"RTN","ECUMRPC2",80,0)
 .S ECSTR=^TMP("ECCPT",$J,"DILIST","ID",ECNT,.01)_"  "_^(2)
"RTN","ECUMRPC2",81,0)
 .S ^TMP($J,"ECPXSRCH",ECNT)=ECID_U_ECSTR
"RTN","ECUMRPC2",82,0)
 S ECNT=0,CNT=+$O(^TMP($J,"ECPXSRCH","A"),-1)
"RTN","ECUMRPC2",83,0)
 F  S ECNT=$O(^TMP("ECCPT1",$J,"DILIST","ID",ECNT)) Q:'ECNT  D
"RTN","ECUMRPC2",84,0)
 .S CNT=CNT+1,ECID=$G(^TMP("ECCPT1",$J,"DILIST",2,ECNT))_";EC(725,"
"RTN","ECUMRPC2",85,0)
 .S ECSTR=^TMP("ECCPT1",$J,"DILIST","ID",ECNT,1)_"  "_^(.01)
"RTN","ECUMRPC2",86,0)
 .S ^TMP($J,"ECPXSRCH",CNT)=ECID_U_ECSTR
"RTN","ECUMRPC2",87,0)
 K ^TMP("ECCPT",$J),^TMP("ECCPT1",$J)
"RTN","ECUMRPC2",88,0)
 S RESULTS=$NA(^TMP($J,"ECPXSRCH"))
"RTN","ECUMRPC2",89,0)
 Q
"RTN","ECUMRPC2",90,0)
CPTSRH(FILE,CPTSTR) ;Searches either file 81 or 725 for a CPT string
"RTN","ECUMRPC2",91,0)
 I FILE=81 D
"RTN","ECUMRPC2",92,0)
 .D FINDIC(81,"",".01;2","M",CPTSTR,100,"","I $P($$CPT^ICPTCOD(+Y),""^"",7)","","^TMP(""ECCPT"",$J)")
"RTN","ECUMRPC2",93,0)
 I FILE=725 D
"RTN","ECUMRPC2",94,0)
 .D FINDIC(725,"",".01;1","M",CPTSTR,100,"","I '$P(^(0),""^"",3)","","^TMP(""ECCPT1"",$J)")
"RTN","ECUMRPC2",95,0)
 Q
"RTN","ECUMRPC2",96,0)
FINDIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER) ;
"RTN","ECUMRPC2",97,0)
 ;Find records in a file base on search string
"RTN","ECUMRPC2",98,0)
 S ECER=$G(ECER)
"RTN","ECUMRPC2",99,0)
 D FIND^DIC(ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID,ECTG,ECER)
"RTN","ECUMRPC2",100,0)
 K ECFL,ECIEN,ECFLD,ECFLG,ECVAL,ECN,ECINDX,ECSCN,ECID
"RTN","ECUMRPC2",101,0)
 Q
"RTN","ECUMRPC2",102,0)
PROV ;Return a set of providers from the NEW PERSON file
"RTN","ECUMRPC2",103,0)
 ;Input Variables:-
"RTN","ECUMRPC2",104,0)
 ;  FROM   - text to $O from
"RTN","ECUMRPC2",105,0)
 ;  DATE   - checks for an active person class on this date (optional)
"RTN","ECUMRPC2",106,0)
 ;  ECDIR  - $O direction
"RTN","ECUMRPC2",107,0)
 ;  KEY    - screen users by security key (optional)
"RTN","ECUMRPC2",108,0)
 ;
"RTN","ECUMRPC2",109,0)
 ;Output Variables:-
"RTN","ECUMRPC2",110,0)
 ;  ^TMP($J,"ECFIND",1..n - returned array
"RTN","ECUMRPC2",111,0)
 ;     IEN of file 200^Provider Name^occupation^specialty^subspecialty
"RTN","ECUMRPC2",112,0)
 ;
"RTN","ECUMRPC2",113,0)
 N I,IEN,CNT,FROM,DATE,ECUTN S I=0,CNT=44  ;KEY="PROVIDER"
"RTN","ECUMRPC2",114,0)
 ;S FROM=$P(ECSTR,"|"),DATE=$P(ECSTR,"|",2)
"RTN","ECUMRPC2",115,0)
 S FROM=$P(ECSTR,"|"),DATE=$P(ECSTR,"|",2),REPORT=$P(ECSTR,"|",3)
"RTN","ECUMRPC2",116,0)
 F  Q:I'<CNT  S FROM=$O(^VA(200,"B",FROM),ECDIR) Q:FROM=""  D
"RTN","ECUMRPC2",117,0)
 . S IEN="" F  S IEN=$O(^VA(200,"B",FROM,IEN),ECDIR) Q:'IEN  D 
"RTN","ECUMRPC2",118,0)
 . . ;I $L(KEY),'$D(^XUSEC(KEY,+IEN)) Q
"RTN","ECUMRPC2",119,0)
 . . ;I +$G(ALLUSERS)=0,'$$ACTIVE^XUSER(IEN) Q  ; terminated user
"RTN","ECUMRPC2",120,0)
 . . I REPORT="R" S I=I+1,^TMP($J,"ECFIND",I)=IEN_"^"_FROM_"^" Q
"RTN","ECUMRPC2",121,0)
 . . S ECUTN=$$GET^XUA4A72(IEN,DATE)
"RTN","ECUMRPC2",122,0)
 . . I DATE>0,ECUTN<1 Q
"RTN","ECUMRPC2",123,0)
 . . S I=I+1,^TMP($J,"ECFIND",I)=IEN_"^"_FROM_"^"_$P(ECUTN,"^",2,4)
"RTN","ECUMRPC2",124,0)
 Q
"RTN","ECUMRPC2",125,0)
LEX ; returns a list of ICD code from lexicon lookup; called from ECUMRPC1
"RTN","ECUMRPC2",126,0)
 ;Input Variables:-
"RTN","ECUMRPC2",127,0)
 ;  ECSTR  - APP|ECX|ECDT
"RTN","ECUMRPC2",128,0)
 ;           application|Search string|procedure date
"RTN","ECUMRPC2",129,0)
 ;
"RTN","ECUMRPC2",130,0)
 ;Output Variables:-
"RTN","ECUMRPC2",131,0)
 ;  ^TMP($J,"ECFIND",1..n - returned array
"RTN","ECUMRPC2",132,0)
 ;     ICD9 Code^LEX description^IEN of file 80^IEN of file 757.01
"RTN","ECUMRPC2",133,0)
 ;
"RTN","ECUMRPC2",134,0)
 N LEX,ILST,I,IEN,ECX,APP,ECDT,ICD9,ICDIEN,DIC,ECCD
"RTN","ECUMRPC2",135,0)
 S APP=$P(ECSTR,"|"),ECX=$P(ECSTR,"|",2),ECDT=$P(ECSTR,"|",3)
"RTN","ECUMRPC2",136,0)
 S ECDT=$G(ECDT,DT),DIC="^ICD9("
"RTN","ECUMRPC2",137,0)
 ;spacebar default for DUZ
"RTN","ECUMRPC2",138,0)
 I ECX=" ",+($G(DUZ))>0 S IEN=$G(^DISV(DUZ,DIC)) I +IEN D
"RTN","ECUMRPC2",139,0)
 .S ECCD=$$ICDDX^ICDCODE(IEN,ECDT) S:+ECCD>0 ECX=$P(ECCD,U,2)
"RTN","ECUMRPC2",140,0)
 D CONFIG^LEXSET(APP,APP,ECDT)    ;LEX DBIA1577
"RTN","ECUMRPC2",141,0)
 D LOOK^LEXA(ECX,APP,1,"",ECDT)   ;LEX DBIA2950
"RTN","ECUMRPC2",142,0)
 I '$D(LEX("LIST",1)) S ^TMP($J,"ECFIND",1)="0^No matches found." Q
"RTN","ECUMRPC2",143,0)
 ;LEX DBIA1573
"RTN","ECUMRPC2",144,0)
 S ILST=1,IEN=+LEX("LIST",1)
"RTN","ECUMRPC2",145,0)
 D ICD I ICDIEN<0 S ^TMP($J,"ECFIND",1)="0^No matches found." Q
"RTN","ECUMRPC2",146,0)
 S ^TMP($J,"ECFIND",ILST)=ICD9_U_$P(LEX("LIST",1),U,2)_U_ICDIEN_U_LEX("LIST",1),I=""
"RTN","ECUMRPC2",147,0)
 F  S I=$O(^TMP("LEXFND",$J,I)) Q:I'<0  D
"RTN","ECUMRPC2",148,0)
 . S IEN=$O(^TMP("LEXFND",$J,I,0))
"RTN","ECUMRPC2",149,0)
 . D ICD I ICDIEN<0 Q
"RTN","ECUMRPC2",150,0)
 . S ILST=ILST+1
"RTN","ECUMRPC2",151,0)
 . S ^TMP($J,"ECFIND",ILST)=ICD9_U_^TMP("LEXFND",$J,I,IEN)_U_ICDIEN_U_IEN
"RTN","ECUMRPC2",152,0)
 I $O(^TMP($J,"ECFIND",0))="" S ^TMP($J,"ECFIND",1)="0^No matches found."
"RTN","ECUMRPC2",153,0)
 K ^TMP("LEXFND",$J),^TMP("LEXHIT",$J)
"RTN","ECUMRPC2",154,0)
 Q
"RTN","ECUMRPC2",155,0)
ICD ;ICD code
"RTN","ECUMRPC2",156,0)
 S ICD9=$$ICDONE^LEXU(IEN,ECDT)
"RTN","ECUMRPC2",157,0)
 S ICDIEN=+$$ICDDX^ICDCODE(ICD9,ECDT)
"RTN","ECUMRPC2",158,0)
 Q
"RTN","ECUTL2")
0^35^B26898243^B30517576
"RTN","ECUTL2",1,0)
ECUTL2 ;ALB/JAM - Event Capture Diagnosis Code Selection ;11 Jan 2000
"RTN","ECUTL2",2,0)
 ;;2.0; EVENT CAPTURE ;**23,33,47,63,72**;8 May 96
"RTN","ECUTL2",3,0)
DIAG ;ask dx question (primary and multiple secondary) 
"RTN","ECUTL2",4,0)
 ;check for primary dx and display message
"RTN","ECUTL2",5,0)
 D PDXMSG
"RTN","ECUTL2",6,0)
 ;ask for primary dx
"RTN","ECUTL2",7,0)
 D PDX I ECOUT Q
"RTN","ECUTL2",8,0)
 ;ask for secondary dx
"RTN","ECUTL2",9,0)
 D SDX I ECOUT Q
"RTN","ECUTL2",10,0)
 I $D(DTOUT)!$D(DUOUT) W:$P(ECPCE,"~",2)'="N" !!,"Please note that this record cannot be sent to PCE without a diagnosis.",!!
"RTN","ECUTL2",11,0)
 Q
"RTN","ECUTL2",12,0)
PDXMSG ; Check for existence of primary diagnoses and display message
"RTN","ECUTL2",13,0)
 N TXT,ECPDX
"RTN","ECUTL2",14,0)
 S (ECDX,ECDXN,ECDXO)="" K ECDXS
"RTN","ECUTL2",15,0)
 ;Check if primary dx exist in file #721
"RTN","ECUTL2",16,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",17,0)
 I +ECPDX W ! D 
"RTN","ECUTL2",18,0)
 . W !?5,"WARNING: Primary Diagnoses already on File for this encounter."
"RTN","ECUTL2",19,0)
 . W !?5,"If changed, all procedures will be updated. ("_ECDXN_")"
"RTN","ECUTL2",20,0)
 . S ECDXO=ECDX
"RTN","ECUTL2",21,0)
 I $P(ECPDX,U,2) D
"RTN","ECUTL2",22,0)
 . S TXT="WARNING: Primary diagnoses already sent to PCE. If changed,"
"RTN","ECUTL2",23,0)
 . S TXT=TXT_" all procedures"
"RTN","ECUTL2",24,0)
 . W !!?5,TXT
"RTN","ECUTL2",25,0)
 . S TXT="associated with this encounter will be updated and resent "
"RTN","ECUTL2",26,0)
 . S TXT=TXT_"to PCE."
"RTN","ECUTL2",27,0)
 . W !?5,TXT
"RTN","ECUTL2",28,0)
 Q
"RTN","ECUTL2",29,0)
PDXCK(ECDFN,ECDTX,ECLX,EC4X) ;Get primary dx frm file #721 for pat encounter
"RTN","ECUTL2",30,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",31,0)
 ;            ECDTX     = Date/time of procedure
"RTN","ECUTL2",32,0)
 ;            ECLX      = Location ien
"RTN","ECUTL2",33,0)
 ;            EC4X      = Clinic ien
"RTN","ECUTL2",34,0)
 ;
"RTN","ECUTL2",35,0)
 ;   Output:  PDXF^PCEF = primary dx flag (1/0)^dx sent to PCE flag (1/0)
"RTN","ECUTL2",36,0)
 ;            ECDX      = Primary diagnoses ien
"RTN","ECUTL2",37,0)
 ;            ECDXN     = Primary diagnoses code
"RTN","ECUTL2",38,0)
 ;            ECDXIEN   = Array of encounter IENs w primary dx
"RTN","ECUTL2",39,0)
 ;
"RTN","ECUTL2",40,0)
 N PDXF,PCEF,DA,DXIEN,DXS,DXN
"RTN","ECUTL2",41,0)
 S (PDXF,PCEF)=0,DA="" K ECDXIEN
"RTN","ECUTL2",42,0)
 I $G(ECDFN)=""!($G(ECDTX)="")!($G(ECLX)="")!($G(EC4X)="") Q PDXF_U_PCEF
"RTN","ECUTL2",43,0)
 I $O(^ECH("APAT",ECDFN,ECDTX,""))="" Q PDXF_U_PCEF
"RTN","ECUTL2",44,0)
 F  S DA=$O(^ECH("APAT",ECDFN,ECDTX,DA)) Q:DA=""  D
"RTN","ECUTL2",45,0)
 . I EC4X'=$P($G(^ECH(DA,0)),U,19) Q
"RTN","ECUTL2",46,0)
 . S ECDX=$P($G(^ECH(DA,"P")),U,2) I ECDX="" Q
"RTN","ECUTL2",47,0)
 . S ECDXN=$P($$ICDDX^ICDCODE(ECDX,ECDTX),U,2)
"RTN","ECUTL2",48,0)
 . S ECDXIEN(DA)=ECDXN_U_ECDX,PDXF=1
"RTN","ECUTL2",49,0)
 . I $D(^ECH(DA,"SEND")),^("SEND")="" S PCEF=1
"RTN","ECUTL2",50,0)
 . I $D(^ECH(DA,"DX")) D
"RTN","ECUTL2",51,0)
 . . S DXS=0 F  S DXS=$O(^ECH(DA,"DX",DXS)) Q:'DXS  D
"RTN","ECUTL2",52,0)
 ...S DXIEN=$P($G(^ECH(DA,"DX",DXS,0)),U)
"RTN","ECUTL2",53,0)
 ...S DXN=$P($$ICDDX^ICDCODE(DXIEN,ECDTX),U,2) S:DXN'="" ECDXS(DXN)=DXIEN
"RTN","ECUTL2",54,0)
 Q PDXF_U_PCEF
"RTN","ECUTL2",55,0)
PDX ;Ask primary diagnoses code
"RTN","ECUTL2",56,0)
 ;   Variables:   ECDX    = Primary diagnoses ien
"RTN","ECUTL2",57,0)
 ;                ECDXN   = Primary diagnoses code, default if define
"RTN","ECUTL2",58,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",59,0)
 ;   
"RTN","ECUTL2",60,0)
 N DIC,X,Y,DTOUT,DUOUT,DEFX,ECODE,PROMPT
"RTN","ECUTL2",61,0)
 S ECDX=$G(ECDX),ECDXN=$G(ECDXN),PROMPT="Primary ICD-9 Code: "
"RTN","ECUTL2",62,0)
 S:ECDXN'="" DEFX=ECDXN
"RTN","ECUTL2",63,0)
 F  D LEX Q:$G(ECOUT)  D  I $D(ECODE) Q
"RTN","ECUTL2",64,0)
 .I X="" W !,"This is a required response. Enter '^' to exit" Q
"RTN","ECUTL2",65,0)
 .S ECDXN=ECODE,ECDX=+$$ICDDX^ICDCODE(ECODE,$G(ECDT))
"RTN","ECUTL2",66,0)
 Q
"RTN","ECUTL2",67,0)
SDX ;Ask secondary diagnoses code
"RTN","ECUTL2",68,0)
 ;   Variables:   ECDX    = Primary diagnoses ien, default if define
"RTN","ECUTL2",69,0)
 ;                ECDXN   = Primary diagnoses code
"RTN","ECUTL2",70,0)
 ;                ECOUT   = Error flag (1/0)
"RTN","ECUTL2",71,0)
 ;                ECDXS   = Array with secondary diagnosis code
"RTN","ECUTL2",72,0)
 ;                          subscript=dx code and set equal to dx ien
"RTN","ECUTL2",73,0)
 ;
"RTN","ECUTL2",74,0)
 N Y,X,DEFX,DIC,DTOUT,DUOUT,ECODE
"RTN","ECUTL2",75,0)
 S ECOUT=$G(ECOUT),PROMPT="Secondary ICD-9 Code: "
"RTN","ECUTL2",76,0)
 F  D LSTDXS,LEX Q:Y<0  D  I ECOUT Q
"RTN","ECUTL2",77,0)
 .I ECODE="" Q
"RTN","ECUTL2",78,0)
 .I ECODE=$G(ECDXN) W "  Already exist as primary dx." Q
"RTN","ECUTL2",79,0)
 .I $D(ECDXS(ECODE)) D DELDUP Q
"RTN","ECUTL2",80,0)
 .S ECDXS(ECODE)=+$$ICDDX^ICDCODE(ECODE,$G(ECDT))
"RTN","ECUTL2",81,0)
 Q
"RTN","ECUTL2",82,0)
DELDUP ;Delete secondary diagnosis code from list
"RTN","ECUTL2",83,0)
 N DIR,DIRUT,DTOUT,DUOUT,DIROUT
"RTN","ECUTL2",84,0)
 S DIR("A")="Delete "_ECODE_" Code from List"
"RTN","ECUTL2",85,0)
 S DIR(0)="Y"
"RTN","ECUTL2",86,0)
 D ^DIR
"RTN","ECUTL2",87,0)
 I $D(DIRUT)!($D(DIROUT)) S ECOUT=1 Q
"RTN","ECUTL2",88,0)
 I Y K ECDXS(ECODE)
"RTN","ECUTL2",89,0)
 Q
"RTN","ECUTL2",90,0)
LEX ;ICD code from LEX database
"RTN","ECUTL2",91,0)
 ;K X,Y
"RTN","ECUTL2",92,0)
 S X=$G(DEFX)
"RTN","ECUTL2",93,0)
 ;LEX DBIA1577
"RTN","ECUTL2",94,0)
 D CONFIG^LEXSET("ICD",,$G(ECDT))
"RTN","ECUTL2",95,0)
 S DIC="757.01",DIC(0)=$S('$L($G(X)):"A",1:"")_"EQM",DIC("A")=PROMPT
"RTN","ECUTL2",96,0)
 D ^DIC
"RTN","ECUTL2",97,0)
 I $D(DTOUT)!$D(DUOUT) S ECOUT=1 Q
"RTN","ECUTL2",98,0)
 I X="" Q
"RTN","ECUTL2",99,0)
 I Y<0 S ECOUT=1 Q
"RTN","ECUTL2",100,0)
 S ECODE=$G(Y(1))
"RTN","ECUTL2",101,0)
 Q
"RTN","ECUTL2",102,0)
LSTDXS ;list icd9-code
"RTN","ECUTL2",103,0)
 N DXS
"RTN","ECUTL2",104,0)
 I $D(ECDXS) D
"RTN","ECUTL2",105,0)
 . W !?1,"Secondary ICD-9 code entered:"
"RTN","ECUTL2",106,0)
 . S DXS=""
"RTN","ECUTL2",107,0)
 . F  S DXS=$O(ECDXS(DXS)) Q:DXS=""  W !,?4,DXS,?15,$P($$ICDDX^ICDCODE(DXS,$G(ECDT)),"^",4)
"RTN","ECUTL2",108,0)
 Q
"RTN","ECUTL2",109,0)
PXUPD(ECDFN,ECDT,ECL,EC4,ECDXP,ECDXX,ECXIEN) ; Update all associated
"RTN","ECUTL2",110,0)
 ; procedures for an EC Patient encounter with the same primary and 
"RTN","ECUTL2",111,0)
 ; secondary dx codes
"RTN","ECUTL2",112,0)
 ;
"RTN","ECUTL2",113,0)
 ;   Input:   ECDFN     = Patient ien
"RTN","ECUTL2",114,0)
 ;            ECDT      = Date/time of procedure
"RTN","ECUTL2",115,0)
 ;            ECL       = Location ien
"RTN","ECUTL2",116,0)
 ;            EC4       = Clinic ien
"RTN","ECUTL2",117,0)
 ;            ECDXP     = Primary diagnoses code
"RTN","ECUTL2",118,0)
 ;            ECDXX     = Array of secondary diagnoses codes
"RTN","ECUTL2",119,0)
 ;            ECXIEN    = 721 ien, if define don't process
"RTN","ECUTL2",120,0)
 ;
"RTN","ECUTL2",121,0)
 ;  Output: ECERR  0 - Process completed
"RTN","ECUTL2",122,0)
 ;
"RTN","ECUTL2",123,0)
 N ECIEN,ECERR,DIE,DR,DA,DTOUT,DIROUT,ECDXIEN,ECPDX,ECDX,ECDXN,DIC,X
"RTN","ECUTL2",124,0)
 N ECVST,ECVAR1,VALQUIET,DXN,DXSIEN,DIK,ECDXS
"RTN","ECUTL2",125,0)
 S ECERR=0
"RTN","ECUTL2",126,0)
 I $D(ECDXP)="" Q ECERR
"RTN","ECUTL2",127,0)
 S ECPDX=$$PDXCK(ECDFN,ECDT,ECL,EC4)
"RTN","ECUTL2",128,0)
 I '$D(ECDXIEN) Q ECERR
"RTN","ECUTL2",129,0)
 S ECIEN="",DIE="^ECH("
"RTN","ECUTL2",130,0)
 F  S ECIEN=$O(ECDXIEN(ECIEN)) Q:ECIEN=""  D
"RTN","ECUTL2",131,0)
 . I $G(ECXIEN)'="",ECXIEN=ECIEN Q
"RTN","ECUTL2",132,0)
 . S ECNODE=$G(^ECH(ECIEN,"P")) I ECNODE="" Q
"RTN","ECUTL2",133,0)
 . I ECDXP'=$P(ECNODE,U,2) D
"RTN","ECUTL2",134,0)
 . . S DA=ECIEN,DR="20////"_ECDXP D ^DIE
"RTN","ECUTL2",135,0)
 . . S $P(^ECH(ECIEN,"PCE"),"~",11)=ECDXP
"RTN","ECUTL2",136,0)
 . ;delete all secondary diagnosis codes
"RTN","ECUTL2",137,0)
 . S DA(1)=ECIEN,DIK="^ECH("_DA(1)_",""DX"",",DA=0
"RTN","ECUTL2",138,0)
 . F  S DA=$O(^ECH(ECIEN,"DX",DA)) Q:'DA  D ^DIK
"RTN","ECUTL2",139,0)
 . I $D(^ECH(ECIEN,"DX")) K ^ECH(ECIEN,"DX")
"RTN","ECUTL2",140,0)
 . ;update secondary diagnosis codes on procedure
"RTN","ECUTL2",141,0)
 . S DXN="" F  S DXN=$O(ECDXX(DXN)) Q:DXN=""  D
"RTN","ECUTL2",142,0)
 . . S DXSIEN=$P(ECDXX(DXN),U) I DXSIEN<0 Q
"RTN","ECUTL2",143,0)
 . . K DIC,DD,DO S DIC(0)="L",DA(1)=ECIEN,DIC("P")=$P(^DD(721,38,0),U,2)
"RTN","ECUTL2",144,0)
 . . S X=DXSIEN,DIC="^ECH("_DA(1)_","_"""DX"""_"," D FILE^DICN
"RTN","ECUTL2",145,0)
 . ;delete visit and resend to PCE
"RTN","ECUTL2",146,0)
 . S ECVST=+$P($G(^ECH(ECIEN,0)),"^",21) I 'ECVST Q
"RTN","ECUTL2",147,0)
 . ;* Prepare all EC records with same Visit file entry to resend to PCE
"RTN","ECUTL2",148,0)
 . S ECVAR1=$$FNDVST^ECUTL(ECVST)
"RTN","ECUTL2",149,0)
 . ;- Set VALQUIET to stop Amb Care validator from broadcasting to screen
"RTN","ECUTL2",150,0)
 . S VALQUIET=1,ECVV=$$DELVFILE^PXAPI("ALL",ECVST)
"RTN","ECUTL2",151,0)
 Q ECERR
"RTN","ECV3RPC")
0^40^B45442290^B44536732
"RTN","ECV3RPC",1,0)
ECV3RPC ;ALB/ACS;Event Capture Spreadsheet Data Validation ;Oct 13, 2000
"RTN","ECV3RPC",2,0)
 ;;2.0; EVENT CAPTURE ;**25,47,49,61,72**;8 May 96
"RTN","ECV3RPC",3,0)
 ;
"RTN","ECV3RPC",4,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",5,0)
 ;  Validates the following Event Capture Spreadsheet Upload fields:
"RTN","ECV3RPC",6,0)
 ;    1. DSS UNIT IEN, DSS UNIT NUMBER, DSS UNIT NAME
"RTN","ECV3RPC",7,0)
 ;    2. ORDERING SECTION
"RTN","ECV3RPC",8,0)
 ;    3. PROCEDURE CODE
"RTN","ECV3RPC",9,0)
 ;    4. CATEGORY
"RTN","ECV3RPC",10,0)
 ;
"RTN","ECV3RPC",11,0)
 ;-----------------------------------------------------------------------
"RTN","ECV3RPC",12,0)
 ;
"RTN","ECV3RPC",13,0)
 ;--Set up error flag
"RTN","ECV3RPC",14,0)
 S ECERRFLG=0
"RTN","ECV3RPC",15,0)
 ;
"RTN","ECV3RPC",16,0)
 ;--GET DSS Unit IEN--
"RTN","ECV3RPC",17,0)
 S ECDSSIEN=""
"RTN","ECV3RPC",18,0)
 ; -Check for DSS Unit IEN first
"RTN","ECV3RPC",19,0)
 I ECUNITV'="",(ECUNITV'=+ECUNITV) D
"RTN","ECV3RPC",20,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",21,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",22,0)
 . D ERROR
"RTN","ECV3RPC",23,0)
 I ECUNITV,'ECERRFLG,$D(^ECD(ECUNITV,0)) S ECDSSIEN=ECUNITV
"RTN","ECV3RPC",24,0)
 I ECUNITV,'ECERRFLG,'$D(^ECD(ECUNITV,0)) D
"RTN","ECV3RPC",25,0)
 . ; DSS unit ien not found on VistA
"RTN","ECV3RPC",26,0)
 . S ECERRMSG=$P($T(DSS1^ECV3RPC),";;",2)
"RTN","ECV3RPC",27,0)
 . S ECCOLERR=ECUNITPC
"RTN","ECV3RPC",28,0)
 . D ERROR
"RTN","ECV3RPC",29,0)
 . Q
"RTN","ECV3RPC",30,0)
 ; -Check for DSS Unit Number
"RTN","ECV3RPC",31,0)
 I ECDCMV'="",'$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",32,0)
 . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",33,0)
 . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",34,0)
 . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",35,0)
 . D ERROR
"RTN","ECV3RPC",36,0)
 I 'ECERRFLG,ECDCMV'="",$D(^ECD("C",ECDCMV)) S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",37,0)
 ;Check if the next record is a match
"RTN","ECV3RPC",38,0)
 I 'ECERRFLG,'ECDSSIEN,ECDCMV'="",$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",39,0)
 . S ECDSSIEN=$O(^ECD("C",ECDCMV,0))
"RTN","ECV3RPC",40,0)
 . I '$D(^ECD("C",ECDCMV)) D
"RTN","ECV3RPC",41,0)
 . . ; DSS Unit Number not found on VistA
"RTN","ECV3RPC",42,0)
 . . S ECERRMSG=$P($T(DSS2^ECV3RPC),";;",2)
"RTN","ECV3RPC",43,0)
 . . S ECCOLERR=ECDCMPC
"RTN","ECV3RPC",44,0)
 . . D ERROR
"RTN","ECV3RPC",45,0)
 . . Q
"RTN","ECV3RPC",46,0)
 ; -Check for DSS Unit Name
"RTN","ECV3RPC",47,0)
 I ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",48,0)
 . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",49,0)
 . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",50,0)
 . D ERROR
"RTN","ECV3RPC",51,0)
 ; 
"RTN","ECV3RPC",52,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",$D(^ECD("B",ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECDSSV,0))
"RTN","ECV3RPC",53,0)
 I 'ECERRFLG,'ECDSSIEN,ECDSSV'="",'$D(^ECD("B",ECDSSV)) D
"RTN","ECV3RPC",54,0)
 . N ECNXTDSS
"RTN","ECV3RPC",55,0)
 . S ECNXTDSS=$O(^ECD("B",ECDSSV))
"RTN","ECV3RPC",56,0)
 . I ECDSSV=$E(ECNXTDSS,1,$L(ECDSSV)) S ECDSSIEN=$O(^ECD("B",ECNXTDSS,0))
"RTN","ECV3RPC",57,0)
 . ;
"RTN","ECV3RPC",58,0)
 . I ECDSSV'=$E(ECNXTDSS,1,$L(ECDSSV)) D
"RTN","ECV3RPC",59,0)
 . . ; DSS unit name not found on VistA
"RTN","ECV3RPC",60,0)
 . . S ECERRMSG=$P($T(DSS3^ECV3RPC),";;",2)
"RTN","ECV3RPC",61,0)
 . . S ECCOLERR=ECDSSPC
"RTN","ECV3RPC",62,0)
 . . D ERROR
"RTN","ECV3RPC",63,0)
 . . Q
"RTN","ECV3RPC",64,0)
 . Q
"RTN","ECV3RPC",65,0)
 ;
"RTN","ECV3RPC",66,0)
 ;--Validate Ordering section or derive from DSS Unit IEN--
"RTN","ECV3RPC",67,0)
 I ECOSV'="" D
"RTN","ECV3RPC",68,0)
 . S ECOSIEN=$O(^ECC(723,"B",ECOSV,0))
"RTN","ECV3RPC",69,0)
 . I ECOSIEN="" D
"RTN","ECV3RPC",70,0)
 . . ; Ordering Section "B" x-ref doesn't exist
"RTN","ECV3RPC",71,0)
 . . S ECERRMSG=$P($T(ORDSEC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",72,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",73,0)
 . . D ERROR
"RTN","ECV3RPC",74,0)
 . . Q
"RTN","ECV3RPC",75,0)
 . Q
"RTN","ECV3RPC",76,0)
 I ECOSV="" D
"RTN","ECV3RPC",77,0)
 . I 'ECDSSIEN D
"RTN","ECV3RPC",78,0)
 . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",79,0)
 . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",80,0)
 . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",81,0)
 . . D ERROR
"RTN","ECV3RPC",82,0)
 . . Q
"RTN","ECV3RPC",83,0)
 . I ECDSSIEN D
"RTN","ECV3RPC",84,0)
 . . S ECOSIEN=$P(^ECD(ECDSSIEN,0),U,3)
"RTN","ECV3RPC",85,0)
 . . I ECOSIEN="" D
"RTN","ECV3RPC",86,0)
 . . . ; Unable to derive Ordering section from DSS Unit
"RTN","ECV3RPC",87,0)
 . . . S ECERRMSG=$P($T(ORDSEC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",88,0)
 . . . S ECCOLERR=ECOSPC
"RTN","ECV3RPC",89,0)
 . . . D ERROR
"RTN","ECV3RPC",90,0)
 . . . Q
"RTN","ECV3RPC",91,0)
 . . Q
"RTN","ECV3RPC",92,0)
 ;
"RTN","ECV3RPC",93,0)
 ;--Procedure must be a National Procedure, Local Procedure,   --
"RTN","ECV3RPC",94,0)
 ;--or a CPT code, and the EC Event Code Screen must be active --
"RTN","ECV3RPC",95,0)
 N ECFOUND,ECPI,ECDT
"RTN","ECV3RPC",96,0)
 S ECERRFLG=0,ECFOUND=0
"RTN","ECV3RPC",97,0)
 S %DT="XST",X=$G(ECENCV,"NOW") D ^%DT S ECDT=+Y
"RTN","ECV3RPC",98,0)
 ; Check for National Procedure code (D x-ref)
"RTN","ECV3RPC",99,0)
 I $D(^EC(725,"D",ECPROCV)) D
"RTN","ECV3RPC",100,0)
 . S ECPROCV=$O(^EC(725,"D",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",101,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5)
"RTN","ECV3RPC",102,0)
 . I ECPI="" S ECFOUND=1 Q
"RTN","ECV3RPC",103,0)
 . S ECPI=$$CPT^ICPTCOD(ECPI,ECDT) I +ECPI>0,$P(ECPI,"^",7) S ECFOUND=1
"RTN","ECV3RPC",104,0)
 ; Check for local procedure code (DL x-ref)
"RTN","ECV3RPC",105,0)
 I 'ECFOUND,$D(^EC(725,"DL",ECPROCV)) D
"RTN","ECV3RPC",106,0)
 . S ECPROCV=$O(^EC(725,"DL",ECPROCV,0))_";EC(725,"
"RTN","ECV3RPC",107,0)
 . S ECPI=$P($G(^EC(725,ECPROCV,0)),"^",5)
"RTN","ECV3RPC",108,0)
 . I ECPI="" S ECFOUND=1 Q
"RTN","ECV3RPC",109,0)
 . S ECPI=$$CPT^ICPTCOD(ECPI,ECDT) I +ECPI>0,$P(ECPI,"^",7)  S ECFOUND=1
"RTN","ECV3RPC",110,0)
 ; Check for CPT code (B x-ref)
"RTN","ECV3RPC",111,0)
 I 'ECFOUND S ECPI=$$CPT^ICPTCOD(ECPROCV,ECDT) I +ECPI>0,$P(ECPI,"^",7) D
"RTN","ECV3RPC",112,0)
 . S ECPROCV=$P(ECPI,"^")_";ICPT("
"RTN","ECV3RPC",113,0)
 . S ECFOUND=1
"RTN","ECV3RPC",114,0)
 ;
"RTN","ECV3RPC",115,0)
 I 'ECFOUND D
"RTN","ECV3RPC",116,0)
 . ; Invalid procedure code
"RTN","ECV3RPC",117,0)
 . S ECERRMSG=$P($T(PROC1^ECV3RPC),";;",2)
"RTN","ECV3RPC",118,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",119,0)
 . D ERROR
"RTN","ECV3RPC",120,0)
 . Q
"RTN","ECV3RPC",121,0)
 ;
"RTN","ECV3RPC",122,0)
 ; -Category must exist on the Event Capture Category file
"RTN","ECV3RPC",123,0)
 I ECCATV="" S ECCATIEN=0
"RTN","ECV3RPC",124,0)
 I ECCATV'="" D
"RTN","ECV3RPC",125,0)
 . I $D(^EC(726,"B",ECCATV)) S ECCATIEN=$O(^EC(726,"B",ECCATV,0))
"RTN","ECV3RPC",126,0)
 . I '$D(^EC(726,"B",ECCATV)) D
"RTN","ECV3RPC",127,0)
 . . ; B cross reference not found for category
"RTN","ECV3RPC",128,0)
 . . S ECERRMSG=$P($T(CAT1^ECV3RPC),";;",2)
"RTN","ECV3RPC",129,0)
 . . S ECCOLERR=ECCATPC
"RTN","ECV3RPC",130,0)
 . . D ERROR
"RTN","ECV3RPC",131,0)
 . . Q
"RTN","ECV3RPC",132,0)
 ;
"RTN","ECV3RPC",133,0)
 ; -check for active Event Code screen
"RTN","ECV3RPC",134,0)
 N ECEVNT,ECSNODE,ECSDATA,ECSFOUND
"RTN","ECV3RPC",135,0)
 I 'ECERRFLG D
"RTN","ECV3RPC",136,0)
 . S ECEVNT=ECSTAV_"-"_ECDSSIEN_"-"_ECCATIEN_"-"_ECPROCV
"RTN","ECV3RPC",137,0)
 . S (ECSNODE,ECSFOUND)=0
"RTN","ECV3RPC",138,0)
 . F  S ECSNODE=$O(^ECJ(ECSNODE)) Q:ECSNODE=""  D
"RTN","ECV3RPC",139,0)
 . . S ECSDATA=$G(^ECJ(ECSNODE,0))
"RTN","ECV3RPC",140,0)
 . . I ECEVNT=$P(ECSDATA,U,1) D
"RTN","ECV3RPC",141,0)
 . . . S ECSFOUND=1
"RTN","ECV3RPC",142,0)
 . . . I $P(ECSDATA,U,2)'="" D
"RTN","ECV3RPC",143,0)
 . . . . ; Event Code screen inactive
"RTN","ECV3RPC",144,0)
 . . . . S ECERRMSG=$P($T(PROC2^ECV3RPC),";;",2)
"RTN","ECV3RPC",145,0)
 . . . . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",146,0)
 . . . . D ERROR
"RTN","ECV3RPC",147,0)
 . . . . Q
"RTN","ECV3RPC",148,0)
 . . . Q
"RTN","ECV3RPC",149,0)
 . . Q
"RTN","ECV3RPC",150,0)
 . Q
"RTN","ECV3RPC",151,0)
 ;
"RTN","ECV3RPC",152,0)
 ;Generate error if event code screen not found
"RTN","ECV3RPC",153,0)
 I 'ECERRFLG,'ECSFOUND,ECDSSIEN D
"RTN","ECV3RPC",154,0)
 . ; Event Code screen not found
"RTN","ECV3RPC",155,0)
 . S ECERRMSG=$P($T(PROC3^ECV3RPC),";;",2)
"RTN","ECV3RPC",156,0)
 . S ECCOLERR=ECPROCPC
"RTN","ECV3RPC",157,0)
 . D ERROR
"RTN","ECV3RPC",158,0)
 . Q
"RTN","ECV3RPC",159,0)
 ;
"RTN","ECV3RPC",160,0)
 I 'ECERRFLG,'ECFILDUP D
"RTN","ECV3RPC",161,0)
 .;Check for duplicate uploaded record base on Loc_DSS Unit_Category_Proc
"RTN","ECV3RPC",162,0)
 .;Date_Procedure
"RTN","ECV3RPC",163,0)
 . N ECDUP,ECNAM,ECPNAM,ECI,ECX,Y,ECPRV,ECPROV
"RTN","ECV3RPC",164,0)
 . S (ECDA,ECDUP)=0
"RTN","ECV3RPC",165,0)
 . F  S ECDA=$O(^ECH("ADT",ECSTAV,ECSSNIEN,ECDSSIEN,ECDT,ECDA)) Q:'ECDA  D  I ECDUP Q
"RTN","ECV3RPC",166,0)
 . . S ECX=$G(^ECH(ECDA,0)) I ECX="" Q
"RTN","ECV3RPC",167,0)
 . . I $P(ECX,U,8)'=ECCATIEN Q
"RTN","ECV3RPC",168,0)
 . . I $P(ECX,U,9)'=ECPROCV Q
"RTN","ECV3RPC",169,0)
 . . S ECPNAM="",ECDUP=1
"RTN","ECV3RPC",170,0)
 . . K ECPRV S ECPROV=$$GETPRV^ECPRVMUT(ECDA,.ECPRV)
"RTN","ECV3RPC",171,0)
 . . F ECI=1:1:3 S Y=$O(ECPRV("")) I Y'="" D
"RTN","ECV3RPC",172,0)
 . . . S ECNAM=$P(ECPRV(Y),U,2) K ECPRV(Y)
"RTN","ECV3RPC",173,0)
 . . . S ECPNAM=ECPNAM_" "_$P(ECNAM,",")_","_$E($P(ECNAM,",",2))
"RTN","ECV3RPC",174,0)
 . . S ECERRMSG="**DUPLICATE** "
"RTN","ECV3RPC",175,0)
 . . S ECERRMSG=ECERRMSG_" Clinic: "_$$GET1^DIQ(44,$P(ECX,U,19),.01,"I")
"RTN","ECV3RPC",176,0)
 . . S ECERRMSG=ECERRMSG_" Order Sect: "_$$GET1^DIQ(723,$P(ECX,U,12),.01,"I")
"RTN","ECV3RPC",177,0)
 . . S ECERRMSG=ECERRMSG_" Provider: "_ECPNAM
"RTN","ECV3RPC",178,0)
 . . S ECNAM=$$GET1^DIQ(200,$P(ECX,U,13),.01,"I")
"RTN","ECV3RPC",179,0)
 . . S ECERRMSG=ECERRMSG_" Entered: "_$P(ECNAM,",")_","_$E($P(ECNAM,",",2))
"RTN","ECV3RPC",180,0)
 . . S ECCOLERR=ECSTAPC    ;(???)
"RTN","ECV3RPC",181,0)
 . . D ERROR
"RTN","ECV3RPC",182,0)
 Q
"RTN","ECV3RPC",183,0)
ERROR ;--Set up array entry to contain the following:
"RTN","ECV3RPC",184,0)
 ;1. record number
"RTN","ECV3RPC",185,0)
 ;2. column number on spreadsheet containing the record number
"RTN","ECV3RPC",186,0)
 ;3. column number on spreadsheet containing the data in error
"RTN","ECV3RPC",187,0)
 ;4. error message
"RTN","ECV3RPC",188,0)
 ;
"RTN","ECV3RPC",189,0)
 S ECINDEX=ECINDEX+1
"RTN","ECV3RPC",190,0)
 S RESULTS(ECINDEX)=ECRECV_"^"_ECRECPC_"^"_ECCOLERR_"^"_ECERRMSG_"^"
"RTN","ECV3RPC",191,0)
 S ECERRFLG=1
"RTN","ECV3RPC",192,0)
 Q
"RTN","ECV3RPC",193,0)
 ;
"RTN","ECV3RPC",194,0)
DSS1 ;;Invalid DSS Unit IEN
"RTN","ECV3RPC",195,0)
DSS2 ;;Invalid DSS Unit Number
"RTN","ECV3RPC",196,0)
DSS3 ;;Invalid DSS Unit Name
"RTN","ECV3RPC",197,0)
ORDSEC1 ;;Ordering Section "B" x-ref not on Med Specialty file(#723)
"RTN","ECV3RPC",198,0)
ORDSEC2 ;;Unable to derive Ordering Section from DSS Unit
"RTN","ECV3RPC",199,0)
PROC1 ;;Procedure/CPT invalid
"RTN","ECV3RPC",200,0)
PROC2 ;;Procedure/CPT invalid for this Station and DSS Unit
"RTN","ECV3RPC",201,0)
PROC3 ;;Event Code screen not found
"RTN","ECV3RPC",202,0)
CAT1 ;;Category "B" x-ref not on EC Category file(#726)
"UP",721,721.042,-1)
721^PRV
"UP",721,721.042,0)
721.042
"VER")
8.0^22.0
"^DD",721,721,10,0)
*PROVIDER^RP200'^VA(200,^0;11^Q
"^DD",721,721,10,.1)
Provider
"^DD",721,721,10,1,0)
^.1^^0
"^DD",721,721,10,3)
Enter the name of the provider performing this procedure.
"^DD",721,721,10,21,0)
^^6^6^3051202^
"^DD",721,721,10,21,1,0)
This is the name of the provider performing this procedure.
"^DD",721,721,10,21,2,0)
Provider can be selected from entries in the NEW PERSON
"^DD",721,721,10,21,3,0)
file (#200).
"^DD",721,721,10,21,4,0)
 
"^DD",721,721,10,21,5,0)
Starred for inactivation with EC*2.0*72. Data converted and stored 
"^DD",721,721,10,21,6,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,10,23,0)
^^4^4^3051202^
"^DD",721,721,10,23,1,0)
A pointer to the NEW PERSON file (#200).
"^DD",721,721,10,23,2,0)
 
"^DD",721,721,10,23,3,0)
Starred for inactivation with EC*2.0*72. Data converted and stored
"^DD",721,721,10,23,4,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,10,"DT")
3051202
"^DD",721,721,15,0)
*PROVIDER #2^P200'^VA(200,^0;15^Q
"^DD",721,721,15,.1)
Provider #2
"^DD",721,721,15,1,0)
^.1^^0
"^DD",721,721,15,3)
Enter the name of the person who assisted in performing this procedure.
"^DD",721,721,15,21,0)
^^6^6^3051202^
"^DD",721,721,15,21,1,0)
This is the name of the person who assisted in performing
"^DD",721,721,15,21,2,0)
this procedure. This name can be selected from entries in
"^DD",721,721,15,21,3,0)
the NEW PERSON file (#200).
"^DD",721,721,15,21,4,0)
 
"^DD",721,721,15,21,5,0)
Starred for inactivation with EC*2.0*72. Data converted and stored
"^DD",721,721,15,21,6,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,15,23,0)
^^4^4^3051202^
"^DD",721,721,15,23,1,0)
A pointer to the NEW PERSON file (#200).
"^DD",721,721,15,23,2,0)
 
"^DD",721,721,15,23,3,0)
Starred for inactivation with EC*2.0*72. Data converted and stored
"^DD",721,721,15,23,4,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,15,"DT")
3051202
"^DD",721,721,17,0)
*PROVIDER #3^P200'^VA(200,^0;17^Q
"^DD",721,721,17,.1)
Provider #3
"^DD",721,721,17,1,0)
^.1^^0
"^DD",721,721,17,3)
Enter the name of the person who assisted in performing this procedure.
"^DD",721,721,17,21,0)
^^6^6^3051202^
"^DD",721,721,17,21,1,0)
This is the name of the person who assisted in performing
"^DD",721,721,17,21,2,0)
this procedure. This name can be selected from entries in
"^DD",721,721,17,21,3,0)
the NEW PERSON file (#200).
"^DD",721,721,17,21,4,0)
 
"^DD",721,721,17,21,5,0)
Starred for inactivation with EC*2.0*72. Data converted and stored
"^DD",721,721,17,21,6,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,17,23,0)
^^4^4^3051202^
"^DD",721,721,17,23,1,0)
A pointer to the NEW PERSON file (#200).
"^DD",721,721,17,23,2,0)
 
"^DD",721,721,17,23,3,0)
Starred for inactivation with EC*2.0*72. Data converted and stored
"^DD",721,721,17,23,4,0)
in Field #42 'PROVIDER MULTIPLE'.
"^DD",721,721,17,"DT")
3051202
"^DD",721,721,30,0)
PCE DATA FEED^F^^PCE;1^K:$L(X)>240!($L(X)<1) X
"^DD",721,721,30,3)
Answer must be 1-240 characters in length.
"^DD",721,721,30,21,0)
^.001^2^2^3051205^^^^
"^DD",721,721,30,21,1,0)
The field contains the ECS data formatted to feed the Patient Care
"^DD",721,721,30,21,2,0)
Encounter (PCE) software.
"^DD",721,721,30,23,0)
^^6^6^3051205^
"^DD",721,721,30,23,1,0)
Data stored at this node is transmitted to PCE and contains the following:-
"^DD",721,721,30,23,2,0)
date/time~patient dfn~hospital location~institution~dss id~provider #1 
"^DD",721,721,30,23,3,0)
(no longer populated with EC*2.0*72)~provider 2 (not populated)~provider 3
"^DD",721,721,30,23,4,0)
(not populated)~volume~cpt code~diagnosis~agent orange~radiation
"^DD",721,721,30,23,5,0)
~enviromental contaminants~service connected~ecs national # & name
"^DD",721,721,30,23,6,0)
~eligibility~military sexual trauma~head/neck cancer~combat veteran
"^DD",721,721,30,"DT")
2970116
"^DD",721,721,42,0)
PROVIDER MULTIPLE^721.042PA^^PRV;0
"^DD",721,721,42,21,0)
^.001^5^5^3060320^^
"^DD",721,721,42,21,1,0)
This is the provider(s) giving patient care for this encounter.
"^DD",721,721,42,21,2,0)
 
"^DD",721,721,42,21,3,0)
Prior to the installation of EC*2.0*72 provider data was stored in fields 
"^DD",721,721,42,21,4,0)
#10, #15 and #17.  EC*2.0*72 converted and stored these fields' data in 
"^DD",721,721,42,21,5,0)
this field #42,"PROVIDER MULTIPLE".
"^DD",721,721,42,23,0)
^.001^1^1^3060320^^^^
"^DD",721,721,42,23,1,0)
This is a pointer to the NEW PERSON file #200.
"^DD",721,721.042,0)
PROVIDER MULTIPLE SUB-FIELD^^.02^2
"^DD",721,721.042,0,"DT")
3050805
"^DD",721,721.042,0,"IX","B",721.042,.01)

"^DD",721,721.042,0,"NM","PROVIDER MULTIPLE")

"^DD",721,721.042,0,"UP")
721
"^DD",721,721.042,.01,0)
PROVIDER^MRP200'^VA(200,^0;1^Q
"^DD",721,721.042,.01,1,0)
^.1
"^DD",721,721.042,.01,1,1,0)
721.042^B
"^DD",721,721.042,.01,1,1,1)
S ^ECH(DA(1),"PRV","B",$E(X,1,30),DA)=""
"^DD",721,721.042,.01,1,1,2)
K ^ECH(DA(1),"PRV","B",$E(X,1,30),DA)
"^DD",721,721.042,.01,3)
Enter the name of the provider performing this procedure.
"^DD",721,721.042,.01,21,0)
^^8^8^3060320^
"^DD",721,721.042,.01,21,1,0)
This field indicates whether the provider is the primary or secondary 
"^DD",721,721.042,.01,21,2,0)
caregiver for the encounter.
"^DD",721,721.042,.01,21,3,0)
 
"^DD",721,721.042,.01,21,4,0)
The primary provider is usually the physician responsible for THIS
"^DD",721,721.042,.01,21,5,0)
PARTICULAR encounter.
"^DD",721,721.042,.01,21,6,0)
 
"^DD",721,721.042,.01,21,7,0)
Secondary providers are those providers who also provided care for this 
"^DD",721,721.042,.01,21,8,0)
encounter.
"^DD",721,721.042,.01,23,0)
^.001^1^1^3060320^^^^
"^DD",721,721.042,.01,23,1,0)
A pointer to file #200.
"^DD",721,721.042,.01,"DT")
3050805
"^DD",721,721.042,.02,0)
PRIMARY/SECONDARY^S^P:PRIMARY;S:SECONDARY;^0;2^Q
"^DD",721,721.042,.02,3)
Enter whether this is the primary or secondary provider.
"^DD",721,721.042,.02,21,0)
^.001^2^2^3060320^^
"^DD",721,721.042,.02,21,1,0)
This field indicates whether the provider was the primary or secondary
"^DD",721,721.042,.02,21,2,0)
caregiver for the encounter.                    
"^DD",721,721.042,.02,"DT")
3050805
"BLD",6253,6)
^76
**END**
**END**
