Released OR*3*228 SEQ #231
Extracted from mail message
**KIDS**:OR*3.0*228^

**INSTALL NAME**
OR*3.0*228
"BLD",5673,0)
OR*3.0*228^ORDER ENTRY/RESULTS REPORTING^0^3051201^y
"BLD",5673,1,0)
^^28^28^3050727^
"BLD",5673,1,1,0)
This patch is part of the Patient Financial Services System (PFSS) 
"BLD",5673,1,2,0)
project.  PFSS patches are being released on various schedules.  Some 
"BLD",5673,1,3,0)
patch functionality will not be active until a new PFSS switch is 
"BLD",5673,1,4,0)
activated during final implementation. PFSS will initially be implemented 
"BLD",5673,1,5,0)
at select pilot sites ONLY.
"BLD",5673,1,6,0)
 
"BLD",5673,1,7,0)
The purpose of the PFSS project is to prepare the VistA environment for 
"BLD",5673,1,8,0)
the implementation of a commercial off-the-shelf (COTS) billing 
"BLD",5673,1,9,0)
replacement system.  The project consists of the implementation of the 
"BLD",5673,1,10,0)
billing replacement system, business process improvements, and 
"BLD",5673,1,11,0)
enhancements to Veterans Health Information Systems and Technology 
"BLD",5673,1,12,0)
Architecture (VistA) to support integration with the COTS billing 
"BLD",5673,1,13,0)
replacement system.  Significant changes to VistA legacy systems and 
"BLD",5673,1,14,0)
ancillary packages are necessary.
"BLD",5673,1,15,0)
 
"BLD",5673,1,16,0)
Some of the PFSS software components are not operational until the PFSS 
"BLD",5673,1,17,0)
On/Off Switch, distributed with patch IB*2*260, is set to "ON .  The 
"BLD",5673,1,18,0)
ability for the local site to set the switch to "ON  will be provided at 
"BLD",5673,1,19,0)
the appropriate time with the release of a subsequent Integrated Billing 
"BLD",5673,1,20,0)
patch.
"BLD",5673,1,21,0)
 
"BLD",5673,1,22,0)
For more information about the PFSS project, review the documentation 
"BLD",5673,1,23,0)
accompanying this patch and refer to the following website: 
"BLD",5673,1,24,0)
http://vista.med.va.gov/billreplace/
"BLD",5673,1,25,0)
 
"BLD",5673,1,26,0)
The OR*3.0*228 patch is phase II of the CPRS portion of the PFSS 
"BLD",5673,1,27,0)
project.  Phase I of the CPRS portion of the project is contained in 
"BLD",5673,1,28,0)
OR*3.0*215.
"BLD",5673,4,0)
^9.64PA^100^1
"BLD",5673,4,100,0)
100
"BLD",5673,4,100,2,0)
^9.641^100^1
"BLD",5673,4,100,2,100,0)
ORDER  (File-top level)
"BLD",5673,4,100,2,100,1,0)
^9.6411^97^1
"BLD",5673,4,100,2,100,1,97,0)
PFSS ACCOUNT REFERENCE
"BLD",5673,4,100,222)
y^n^p^^^^n^^n
"BLD",5673,4,100,224)

"BLD",5673,4,"APDD",100,100)

"BLD",5673,4,"APDD",100,100,97)

"BLD",5673,4,"B",100,100)

"BLD",5673,"ABPKG")
n
"BLD",5673,"KRN",0)
^9.67PA^8989.52^19
"BLD",5673,"KRN",.4,0)
.4
"BLD",5673,"KRN",.401,0)
.401
"BLD",5673,"KRN",.402,0)
.402
"BLD",5673,"KRN",.402,"NM",0)
^9.68A^^
"BLD",5673,"KRN",.403,0)
.403
"BLD",5673,"KRN",.403,"NM",0)
^9.68A^^
"BLD",5673,"KRN",.5,0)
.5
"BLD",5673,"KRN",.5,"NM",0)
^9.68A^^
"BLD",5673,"KRN",.84,0)
.84
"BLD",5673,"KRN",.84,"NM",0)
^9.68A^^
"BLD",5673,"KRN",3.6,0)
3.6
"BLD",5673,"KRN",3.6,"NM",0)
^9.68A^^
"BLD",5673,"KRN",3.8,0)
3.8
"BLD",5673,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",5673,"KRN",9.2,0)
9.2
"BLD",5673,"KRN",9.2,"NM",0)
^9.68A^^
"BLD",5673,"KRN",9.8,0)
9.8
"BLD",5673,"KRN",9.8,"NM",0)
^9.68A^8^6
"BLD",5673,"KRN",9.8,"NM",1,0)
ORWPFSS^^0^B3926796
"BLD",5673,"KRN",9.8,"NM",2,0)
ORWPFSS1^^0^B11865424
"BLD",5673,"KRN",9.8,"NM",3,0)
ORWPFSS2^^0^B917624
"BLD",5673,"KRN",9.8,"NM",4,0)
ORMRA^^0^B59882057
"BLD",5673,"KRN",9.8,"NM",7,0)
ORWPFSS4^^0^B7376059
"BLD",5673,"KRN",9.8,"NM",8,0)
ORCSEND^^0^B60080179
"BLD",5673,"KRN",9.8,"NM","B","ORCSEND",8)

"BLD",5673,"KRN",9.8,"NM","B","ORMRA",4)

"BLD",5673,"KRN",9.8,"NM","B","ORWPFSS",1)

"BLD",5673,"KRN",9.8,"NM","B","ORWPFSS1",2)

"BLD",5673,"KRN",9.8,"NM","B","ORWPFSS2",3)

"BLD",5673,"KRN",9.8,"NM","B","ORWPFSS4",7)

"BLD",5673,"KRN",19,0)
19
"BLD",5673,"KRN",19,"NM",0)
^9.68A^^
"BLD",5673,"KRN",19.1,0)
19.1
"BLD",5673,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",5673,"KRN",101,0)
101
"BLD",5673,"KRN",101,"NM",0)
^9.68A^^
"BLD",5673,"KRN",409.61,0)
409.61
"BLD",5673,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",5673,"KRN",771,0)
771
"BLD",5673,"KRN",771,"NM",0)
^9.68A^^
"BLD",5673,"KRN",870,0)
870
"BLD",5673,"KRN",870,"NM",0)
^9.68A^^
"BLD",5673,"KRN",8989.51,0)
8989.51
"BLD",5673,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",5673,"KRN",8989.52,0)
8989.52
"BLD",5673,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",5673,"KRN",8994,0)
8994
"BLD",5673,"KRN",8994,"NM",0)
^9.68A^^
"BLD",5673,"KRN","B",.4,.4)

"BLD",5673,"KRN","B",.401,.401)

"BLD",5673,"KRN","B",.402,.402)

"BLD",5673,"KRN","B",.403,.403)

"BLD",5673,"KRN","B",.5,.5)

"BLD",5673,"KRN","B",.84,.84)

"BLD",5673,"KRN","B",3.6,3.6)

"BLD",5673,"KRN","B",3.8,3.8)

"BLD",5673,"KRN","B",9.2,9.2)

"BLD",5673,"KRN","B",9.8,9.8)

"BLD",5673,"KRN","B",19,19)

"BLD",5673,"KRN","B",19.1,19.1)

"BLD",5673,"KRN","B",101,101)

"BLD",5673,"KRN","B",409.61,409.61)

"BLD",5673,"KRN","B",771,771)

"BLD",5673,"KRN","B",870,870)

"BLD",5673,"KRN","B",8989.51,8989.51)

"BLD",5673,"KRN","B",8989.52,8989.52)

"BLD",5673,"KRN","B",8994,8994)

"BLD",5673,"QUES",0)
^9.62^^
"BLD",5673,"REQB",0)
^9.611^1^1
"BLD",5673,"REQB",1,0)
OR*3.0*215^1
"BLD",5673,"REQB","B","OR*3.0*215",1)

"FIA",100)
ORDER
"FIA",100,0)
^OR(100,
"FIA",100,0,0)
100I
"FIA",100,0,1)
y^n^p^^^^n^^n
"FIA",100,0,10)

"FIA",100,0,11)

"FIA",100,0,"RLRO")

"FIA",100,0,"VR")
3.0^OR
"FIA",100,100)
1
"FIA",100,100,97)

"MBREQ")
0
"PKG",110,-1)
1^1
"PKG",110,0)
ORDER ENTRY/RESULTS REPORTING^OR^Order Entry/Results Reporting
"PKG",110,20,0)
^9.402P^^
"PKG",110,22,0)
^9.49I^1^1
"PKG",110,22,1,0)
3.0^2971217
"PKG",110,22,1,"PAH",1,0)
228^3051201
"PKG",110,22,1,"PAH",1,1,0)
^^28^28^3051201
"PKG",110,22,1,"PAH",1,1,1,0)
This patch is part of the Patient Financial Services System (PFSS) 
"PKG",110,22,1,"PAH",1,1,2,0)
project.  PFSS patches are being released on various schedules.  Some 
"PKG",110,22,1,"PAH",1,1,3,0)
patch functionality will not be active until a new PFSS switch is 
"PKG",110,22,1,"PAH",1,1,4,0)
activated during final implementation. PFSS will initially be implemented 
"PKG",110,22,1,"PAH",1,1,5,0)
at select pilot sites ONLY.
"PKG",110,22,1,"PAH",1,1,6,0)
 
"PKG",110,22,1,"PAH",1,1,7,0)
The purpose of the PFSS project is to prepare the VistA environment for 
"PKG",110,22,1,"PAH",1,1,8,0)
the implementation of a commercial off-the-shelf (COTS) billing 
"PKG",110,22,1,"PAH",1,1,9,0)
replacement system.  The project consists of the implementation of the 
"PKG",110,22,1,"PAH",1,1,10,0)
billing replacement system, business process improvements, and 
"PKG",110,22,1,"PAH",1,1,11,0)
enhancements to Veterans Health Information Systems and Technology 
"PKG",110,22,1,"PAH",1,1,12,0)
Architecture (VistA) to support integration with the COTS billing 
"PKG",110,22,1,"PAH",1,1,13,0)
replacement system.  Significant changes to VistA legacy systems and 
"PKG",110,22,1,"PAH",1,1,14,0)
ancillary packages are necessary.
"PKG",110,22,1,"PAH",1,1,15,0)
 
"PKG",110,22,1,"PAH",1,1,16,0)
Some of the PFSS software components are not operational until the PFSS 
"PKG",110,22,1,"PAH",1,1,17,0)
On/Off Switch, distributed with patch IB*2*260, is set to "ON .  The 
"PKG",110,22,1,"PAH",1,1,18,0)
ability for the local site to set the switch to "ON  will be provided at 
"PKG",110,22,1,"PAH",1,1,19,0)
the appropriate time with the release of a subsequent Integrated Billing 
"PKG",110,22,1,"PAH",1,1,20,0)
patch.
"PKG",110,22,1,"PAH",1,1,21,0)
 
"PKG",110,22,1,"PAH",1,1,22,0)
For more information about the PFSS project, review the documentation 
"PKG",110,22,1,"PAH",1,1,23,0)
accompanying this patch and refer to the following website: 
"PKG",110,22,1,"PAH",1,1,24,0)
http://vista.med.va.gov/billreplace/
"PKG",110,22,1,"PAH",1,1,25,0)
 
"PKG",110,22,1,"PAH",1,1,26,0)
The OR*3.0*228 patch is phase II of the CPRS portion of the PFSS 
"PKG",110,22,1,"PAH",1,1,27,0)
project.  Phase I of the CPRS portion of the project is contained in 
"PKG",110,22,1,"PAH",1,1,28,0)
OR*3.0*215.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
6
"RTN","ORCSEND")
0^8^B60080179^B56693058
"RTN","ORCSEND",1,0)
ORCSEND ;SLC/MKB-Release orders ; 08 May 2002  2:12 PM
"RTN","ORCSEND",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**4,27,45,79,92,141,165,195,228**;Dec 17, 1997
"RTN","ORCSEND",3,0)
 ;
"RTN","ORCSEND",4,0)
EN(ORIFN,ACTION,SIGSTS,RELSTS,NATURE,REASON,ORERR) ; -- Release [actions on] orders
"RTN","ORCSEND",5,0)
 N ORDA,ORNOW,SIGNREQD,SIGNED,SIGNER
"RTN","ORCSEND",6,0)
 S SIGNREQD=+$P($G(^OR(100,+ORIFN,0)),U,16),ORERR=""
"RTN","ORCSEND",7,0)
 S SIGNED=$S(SIGSTS=2:0,1:1),SIGNER=$S(SIGSTS=1:DUZ,SIGSTS=7:DUZ,1:"")
"RTN","ORCSEND",8,0)
 S ORDA=+$P(ORIFN,";",2),ORIFN=+ORIFN,ORNOW=+$E($$NOW^XLFDT,1,12)
"RTN","ORCSEND",9,0)
 S:"ES"[$G(ACTION) ACTION=$P($G(^OR(100,ORIFN,8,ORDA,0)),U,2)
"RTN","ORCSEND",10,0)
 I SIGNREQD,ORDA,"^NW^RW^XX^RN^DC^HD^RL^"[(U_ACTION_U) D  ; sign/alert
"RTN","ORCSEND",11,0)
 . I 'SIGNED D NOTIF^ORCSIGN Q
"RTN","ORCSEND",12,0)
 . D:SIGSTS'="" SIGN^ORCSAVE2(ORIFN,SIGNER,ORNOW,SIGSTS,ORDA)
"RTN","ORCSEND",13,0)
 . D:SIGSTS=4 CHART^ORCSIGN ; not used anymore
"RTN","ORCSEND",14,0)
 I '$L(ACTION) S ORERR="1^Invalid order action" Q
"RTN","ORCSEND",15,0)
 I $$READY(ORIFN,ORDA) D:$L($T(@ACTION)) @ACTION I 'ORERR,ACTION="NW" D
"RTN","ORCSEND",16,0)
 . N OREVT S OREVT=+$P($G(^OR(100,ORIFN,0)),U,17) Q:OREVT<1
"RTN","ORCSEND",17,0)
 . I '$$EVTORDER^OREVNTX(ORIFN) D SAVE^ORMEVNT1(ORIFN,OREVT,2,"ES")
"RTN","ORCSEND",18,0)
 ; If order originated from the back door, send Dx and TxF back to ancil.
"RTN","ORCSEND",19,0)
 I SIGNED,$P($G(^OR(100,+ORIFN,3)),U,11)="P" D BDOEDIT^ORWDBA7
"RTN","ORCSEND",20,0)
 Q
"RTN","ORCSEND",21,0)
 ;
"RTN","ORCSEND",22,0)
EN1(ORDER,ORERR) ; -- Delayed Release [from RELEASE^ORMEVNT]
"RTN","ORCSEND",23,0)
 ;
"RTN","ORCSEND",24,0)
 Q:$P($G(^OR(100,+ORDER,3)),U,3)'=10
"RTN","ORCSEND",25,0)
 N ORPKG,ORA0,ORNOW,ORIFN,ORDA,ORNP,ORNATR,ORQUIT,ORDUZ,SIGSTS,RELSTS
"RTN","ORCSEND",26,0)
 S ORPKG=$P($G(^OR(100,+ORDER,0)),U,14),ORA0=$G(^(8,1,0))
"RTN","ORCSEND",27,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORIFN=+ORDER,ORDA=1,ORNP=$P(ORA0,U,3)
"RTN","ORCSEND",28,0)
 S SIGSTS=$P(ORA0,U,4),ORNATR=$P($G(^ORD(100.02,+$P(ORA0,U,12),0)),U,2)
"RTN","ORCSEND",29,0)
 S RELSTS=$S(SIGSTS'=2:1,"^V^P^"[(U_ORNATR_U):1,1:0)
"RTN","ORCSEND",30,0)
 I RELSTS D
"RTN","ORCSEND",31,0)
 . D STARTDT^ORCSAVE2(ORIFN),PKGSTUFF^ORCSEND1(ORPKG) Q:$G(ORQUIT)
"RTN","ORCSEND",32,0)
 . S ORDUZ=$S(SIGSTS=0:$P(ORA0,U,7),SIGSTS=1:$P(ORA0,U,5),SIGSTS=2:$P(ORA0,U,17),SIGSTS=3:$P(ORA0,U,13),1:DUZ)
"RTN","ORCSEND",33,0)
 . D EDO1^ORWPFSS1  ;PFSS Event Delayed Orders
"RTN","ORCSEND",34,0)
 . D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,ORDUZ),NEW^ORMBLD(ORIFN)
"RTN","ORCSEND",35,0)
 . I "^10^13^"[(U_$P($G(^OR(100,ORIFN,3)),U,3)_U) S ORERR=1 ;error
"RTN","ORCSEND",36,0)
 I 'RELSTS!$G(ORERR),$P($G(^OR(100,ORIFN,3)),U,3)=10 D STATUS^ORCSAVE2(ORIFN,11) S $P(^OR(100,ORIFN,8,1,0),U,15)=11
"RTN","ORCSEND",37,0)
 Q
"RTN","ORCSEND",38,0)
 ;
"RTN","ORCSEND",39,0)
EN2(ORIFN,SIGSTS,NATURE,ORERR)  ; -- Manual Release [from OREVNT1,SENDED^ORWDX]
"RTN","ORCSEND",40,0)
 N ORDA,ORNOW,OREVT,ORA0,ORNP,SIGNREQD,SIGNED,RELSTS
"RTN","ORCSEND",41,0)
 S ORDA=+$P(ORIFN,";",2),ORIFN=+ORIFN S:ORDA<1 ORDA=1
"RTN","ORCSEND",42,0)
 S OREVT=+$P($G(^OR(100,ORIFN,0)),U,17),ORA0=$G(^(8,ORDA,0))
"RTN","ORCSEND",43,0)
 S ORNP=$P(ORA0,U,3),SIGNREQD=($P(ORA0,U,4)'=3),(SIGNED,RELSTS)=1
"RTN","ORCSEND",44,0)
 S ORNOW=+$E($$NOW^XLFDT,1,12),ORERR=""
"RTN","ORCSEND",45,0)
 I $P(ORA0,U,4)=2 D  ;needs ES
"RTN","ORCSEND",46,0)
 . N SIGNER S SIGNER=$S(SIGSTS=1:DUZ,1:"")
"RTN","ORCSEND",47,0)
 . I SIGSTS=2 D NOTIF^ORCSIGN S SIGNED=0 Q  ;still unsigned
"RTN","ORCSEND",48,0)
 . D:SIGSTS'="" SIGN^ORCSAVE2(ORIFN,SIGNER,ORNOW,SIGSTS,ORDA)
"RTN","ORCSEND",49,0)
 D EDO2^ORWPFSS1  ;PFSS Event Delayed Orders
"RTN","ORCSEND",50,0)
 D NW I 'ORERR D SAVE^ORMEVNT1(+ORIFN,OREVT,2,"MN")
"RTN","ORCSEND",51,0)
 Q
"RTN","ORCSEND",52,0)
 ;
"RTN","ORCSEND",53,0)
NW ; -- New order ORIFN
"RTN","ORCSEND",54,0)
RW ; -- Rewritten order ORIFN
"RTN","ORCSEND",55,0)
XX ; -- Changed order ORIFN
"RTN","ORCSEND",56,0)
RN ; -- Renewed order ORIFN
"RTN","ORCSEND",57,0)
 N ORQUIT,STS,TYPE,OR0,OR3,CODE,ORIG,ORSAVE
"RTN","ORCSEND",58,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG,OREBUILD=1 Q
"RTN","ORCSEND",59,0)
 S:'ORDA ORDA=1 S ORSAVE=ORIFN
"RTN","ORCSEND",60,0)
 S OR0=$G(^OR(100,ORIFN,0)),OR3=$G(^(3)) D STARTDT^ORCSAVE2(ORIFN)
"RTN","ORCSEND",61,0)
 S TYPE=$P(OR3,U,11),ORIG=+$P(OR3,U,5),CODE="NW"
"RTN","ORCSEND",62,0)
 I TYPE=1,ORIG,$D(^OR(100,ORIG,4)) S CODE="XO",^OR(100,ORIG,6)=$O(^ORD(100.02,"C","C",0))_U_DUZ_U_ORNOW
"RTN","ORCSEND",63,0)
 D PKGSTUFF^ORCSEND1(+$P(OR0,U,14)) Q:$G(ORQUIT)
"RTN","ORCSEND",64,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",65,0)
 D NEW^ORMBLD(ORIFN,CODE) S ORIFN=ORSAVE,STS=$P($G(^OR(100,ORIFN,3)),U,3)
"RTN","ORCSEND",66,0)
 I (STS=1)!(STS=13) S ORERR="1^"_$$WHY(ORIFN,1) D:'SIGNED&SIGNREQD NOSIG K:ORIG ^OR(100,ORIG,6)
"RTN","ORCSEND",67,0)
 I STS=11 S ORERR="1^ERROR"
"RTN","ORCSEND",68,0)
 Q
"RTN","ORCSEND",69,0)
 ;
"RTN","ORCSEND",70,0)
DC ; -- DC order ORIFN
"RTN","ORCSEND",71,0)
 N PKG,CODE,ORCHLD,ORCHDA,STS,ORIDA,ORSAVE,OR3
"RTN","ORCSEND",72,0)
 I '$G(REASON),$G(NATURE)="D" S REASON=+$O(^ORD(100.03,"C","ORDUP",0))
"RTN","ORCSEND",73,0)
 S:$G(REASON) ^OR(100,ORIFN,6)=$S($G(NATURE):NATURE,$L($G(NATURE)):$O(^ORD(100.02,"C",NATURE,0)),1:"")_"^^^"_+REASON_U_$P(^ORD(100.03,+REASON,0),U)
"RTN","ORCSEND",74,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",75,0)
 S $P(^OR(100,ORIFN,6),U,2,3)=$S($G(DGPMT):"",1:DUZ)_U_ORNOW,ORSAVE=ORIFN S:'$G(REASON) REASON=$P(^(6),U,4)
"RTN","ORCSEND",76,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3),PKG=$P($G(^(0)),U,14),PKG=$$NMSP^ORCD(PKG),CODE=$S(PKG="LR":"CA",(PKG="PS")&(STS=5):"CA",(PKG="FH")&(STS=8):"CA",1:"DC")
"RTN","ORCSEND",77,0)
 D:ORDA RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",78,0)
DC1 I $O(^OR(100,ORIFN,2,0)) D  G DC2 ; DC children
"RTN","ORCSEND",79,0)
 . S ORCHLD=0 F  S ORCHLD=$O(^OR(100,ORIFN,2,ORCHLD)) Q:ORCHLD'>0  I $$VALID^ORCACT0(ORCHLD,"DC") D  Q:$G(ORERR)
"RTN","ORCSEND",80,0)
 . . S ORCHDA=$S(ORDA:$$ACTION^ORCSAVE("DC",ORCHLD,ORNP),1:0)
"RTN","ORCSEND",81,0)
 . . D:ORCHDA SIGN^ORCSAVE2(ORCHLD,,,"",ORCHDA) ;Sig on Parent only
"RTN","ORCSEND",82,0)
 . . D MSG^ORMBLD((ORCHLD_";"_ORCHDA),CODE,$G(REASON))
"RTN","ORCSEND",83,0)
 . . I "^1^13^"'[(U_$P(^OR(100,ORCHLD,3),U,3)_U) S ORERR="1^"_$$WHY(ORCHLD,ORCHDA)
"RTN","ORCSEND",84,0)
 . ;D:'$G(ORERR) STATUS^ORCSAVE2(ORIFN,1)
"RTN","ORCSEND",85,0)
 . S:$G(ORERR) ^OR(100,ORIFN,8,ORDA,1)=$P(ORERR,U,2)
"RTN","ORCSEND",86,0)
 D MSG^ORMBLD((ORIFN_";"_ORDA),CODE,$G(REASON))
"RTN","ORCSEND",87,0)
DC2 S ORIFN=ORSAVE,OR3=$G(^OR(100,ORIFN,3)),STS=$P(OR3,U,3)
"RTN","ORCSEND",88,0)
 I STS'=1,STS'=13,STS'=2 D  Q
"RTN","ORCSEND",89,0)
 . S ORERR="1^"_$S(ORDA:$$WHY(ORIFN,ORDA),1:"Unable to discontinue")
"RTN","ORCSEND",90,0)
 . I ORDA,'SIGNED&SIGNREQD D NOSIG ; sig no longer reqd
"RTN","ORCSEND",91,0)
 . K ^OR(100,ORIFN,6)
"RTN","ORCSEND",92,0)
 S $P(^OR(100,ORIFN,3),U,7)=$S(ORDA:ORDA,'$$ACTV^ORX1($G(NATURE)):0,1:$P(OR3,U,7))
"RTN","ORCSEND",93,0)
 D CANCEL(ORIFN),SETALL^ORDD100(ORIFN)
"RTN","ORCSEND",94,0)
 I $P(OR3,U,11)=2 D  ; dc a renewal
"RTN","ORCSEND",95,0)
 . N ORIG,ORIG3,NATR S ORIG=$P(OR3,U,5),ORIG3=$G(^OR(100,ORIG,3)) Q:'ORIG
"RTN","ORCSEND",96,0)
 . I CODE="CA" S $P(^OR(100,ORIG,3),U,6)="" Q  ;pend - remove fwd ptr
"RTN","ORCSEND",97,0)
 . Q:"^1^7^12^13^"[(U_$P(ORIG3,U,3)_U)  S NATR=$O(^ORD(100.02,"C","A",0))
"RTN","ORCSEND",98,0)
 . S ^OR(100,ORIG,6)=NATR_U_DUZ_U_ORNOW_"^^Renewal cancelled"
"RTN","ORCSEND",99,0)
 . D MSG^ORMBLD(ORIG,"DC") I "^1^13^"'[$P(^OR(100,ORIG,3),U,3) K ^(6) Q
"RTN","ORCSEND",100,0)
 . S:'$$ACTV^ORX1(NATR) $P(^OR(100,ORIG,3),U,7)=0
"RTN","ORCSEND",101,0)
 Q
"RTN","ORCSEND",102,0)
 ;
"RTN","ORCSEND",103,0)
CANCEL(IFN) ; -- Cancel any outstanding actions for order IFN 
"RTN","ORCSEND",104,0)
 N I S I=0
"RTN","ORCSEND",105,0)
 F  S I=$O(^OR(100,IFN,8,I)) Q:I'>0  I $P(^(I,0),U,15)=11 S $P(^(0),U,15)=13 D:$P(^(0),U,4)=2 SIGN^ORCSAVE2(IFN,"","",5,I) ; cancelled, sig not reqd now
"RTN","ORCSEND",106,0)
 Q
"RTN","ORCSEND",107,0)
 ;
"RTN","ORCSEND",108,0)
HD ; -- Hold order ORIFN
"RTN","ORCSEND",109,0)
 N STS,ORSAVE I 'ORDA S ORERR="1^Unable to hold" Q
"RTN","ORCSEND",110,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",111,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",112,0)
 S ORSAVE=ORIFN D MSG^ORMBLD((ORIFN_";"_ORDA),"HD") S ORIFN=ORSAVE
"RTN","ORCSEND",113,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3) I STS=3 S $P(^(3),U,7)=ORDA D SET^ORDD100(ORIFN,ORDA)
"RTN","ORCSEND",114,0)
 I STS'=3 S ORERR="1^"_$$WHY(ORIFN,ORDA) D:'SIGNED&SIGNREQD NOSIG
"RTN","ORCSEND",115,0)
 Q
"RTN","ORCSEND",116,0)
 ;
"RTN","ORCSEND",117,0)
RL ; -- Release hold on order ORIFN
"RTN","ORCSEND",118,0)
 N STS,ORSAVE,ORHD I 'ORDA S ORERR="1^Unable to release hold" Q
"RTN","ORCSEND",119,0)
 I SIGNREQD,'SIGNED,'RELSTS S ORERR=$$NEEDSIG Q
"RTN","ORCSEND",120,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORNOW,DUZ,$G(NATURE))
"RTN","ORCSEND",121,0)
 S ORSAVE=ORIFN D MSG^ORMBLD((ORIFN_";"_ORDA),"RL") S ORIFN=ORSAVE
"RTN","ORCSEND",122,0)
 S STS=$P($G(^OR(100,ORIFN,3)),U,3),ORHD=+$P($G(^(3)),U,7)
"RTN","ORCSEND",123,0)
 I STS'=3 S $P(^OR(100,ORIFN,3),U,7)=ORDA,$P(^(8,ORHD,2),U,1,2)=ORNOW_U_DUZ D SET^ORDD100(ORIFN,ORDA)
"RTN","ORCSEND",124,0)
 I STS=3 S ORERR="1^"_$$WHY(ORIFN,ORDA) D:'SIGNED&SIGNREQD NOSIG
"RTN","ORCSEND",125,0)
 Q
"RTN","ORCSEND",126,0)
 ;
"RTN","ORCSEND",127,0)
FL ; -- Flag order ORIFN
"RTN","ORCSEND",128,0)
 Q
"RTN","ORCSEND",129,0)
 ;
"RTN","ORCSEND",130,0)
UF ; -- Unflag order ORIFN
"RTN","ORCSEND",131,0)
 Q
"RTN","ORCSEND",132,0)
 ;
"RTN","ORCSEND",133,0)
CM ; -- Add Ward comments to order ORIFN
"RTN","ORCSEND",134,0)
 Q
"RTN","ORCSEND",135,0)
 ;
"RTN","ORCSEND",136,0)
VR ; -- Verify order ORIFN
"RTN","ORCSEND",137,0)
 I 'ORDA!(SIGSTS=2) S ORERR="1^Unable to verify" Q
"RTN","ORCSEND",138,0)
 I "^N^C^R^"'[(U_$G(ORVER)_U) S ORERR="1^Unable to verify" Q
"RTN","ORCSEND",139,0)
 D VERIFY^ORCSAVE2(ORIFN,ORDA,ORVER,DUZ,ORNOW)
"RTN","ORCSEND",140,0)
 ; -- send HL7 msg to Pharmacy if Nurse-Verified, [Sts=pending]
"RTN","ORCSEND",141,0)
 Q:ORVER'="N"  N ORSTS,ORPKG,ORX
"RTN","ORCSEND",142,0)
 S ORX=$P($G(^OR(100,ORIFN,8,ORDA,0)),U,2) Q:ORX'="NW"&(ORX'="XX")
"RTN","ORCSEND",143,0)
 S ORPKG=+$P($G(^OR(100,ORIFN,0)),U,14),ORSTS=$P($G(^(3)),U,3)
"RTN","ORCSEND",144,0)
 ;I ORSTS=5!$L($T(ZV^ORMPS)),$$NMSP^ORCD(ORPKG)="PS" D VER^ORMBLDPS(ORIFN)
"RTN","ORCSEND",145,0)
 I $$NMSP^ORCD(ORPKG)="PS" D VER^ORMBLDPS(ORIFN)
"RTN","ORCSEND",146,0)
 Q
"RTN","ORCSEND",147,0)
 ;
"RTN","ORCSEND",148,0)
NEEDSIG() ; -- Msg
"RTN","ORCSEND",149,0)
 Q "1^This order requires a signature."
"RTN","ORCSEND",150,0)
 ;
"RTN","ORCSEND",151,0)
WHY(IFN,DA) ; -- Return reason request was rejected
"RTN","ORCSEND",152,0)
 N X S X=$G(^OR(100,IFN,8,DA,1))
"RTN","ORCSEND",153,0)
 S:'$L(X) X="Unable to "_$S(ACTION="HD":"hold",ACTION="RL":"release hold",ACTION="DC":"discontinue",ACTION="XX":"change",ACTION="RN":"renew",1:"release")
"RTN","ORCSEND",154,0)
 Q X
"RTN","ORCSEND",155,0)
 ;
"RTN","ORCSEND",156,0)
NOSIG ; -- Mark order as Sig not Req'd due to cancel/reject
"RTN","ORCSEND",157,0)
 D SIGN^ORCSAVE2(ORIFN,"","",5,ORDA) S SIGNREQD=0
"RTN","ORCSEND",158,0)
 Q
"RTN","ORCSEND",159,0)
 ;
"RTN","ORCSEND",160,0)
READY(IFN,ACT) ; -- Ready to release?
"RTN","ORCSEND",161,0)
 N X,Y,OR0,OR3,ORA
"RTN","ORCSEND",162,0)
 I ACTION="VR" S Y=1 G RQ ; no action to release
"RTN","ORCSEND",163,0)
 I 'ACT,ACTION="DC" S Y=1 G RQ ; cancel a duplicate
"RTN","ORCSEND",164,0)
 S Y=0,OR0=$G(^OR(100,IFN,0)),OR3=$G(^(3)),ORA=$G(^(8,ACT,0))
"RTN","ORCSEND",165,0)
 I $P(ORA,U,15)=11 S Y=1 G RQ ; unreleased
"RTN","ORCSEND",166,0)
 I $P(ORA,U,15)=10 D  G RQ ; delayed
"RTN","ORCSEND",167,0)
 . I $G(^DPT(+ORVP,.105)),$$GET1^DIQ(9.4,+$P(OR0,U,14)_",",1)="PSO" S Y=1 Q
"RTN","ORCSEND",168,0)
 . Q:'RELSTS  N ORIG S ORIG=+$P(OR3,U,5)
"RTN","ORCSEND",169,0)
 . I 'SIGNED,$L($G(NATURE)) S $P(ORA,U,17)=DUZ,$P(ORA,U,12)=$S(NATURE:NATURE,1:+$O(^ORD(100.02,"C",NATURE,0))),^OR(100,IFN,8,ACT,0)=ORA
"RTN","ORCSEND",170,0)
 . Q:$P(OR3,U,11)'=1!('ORIG)  ;dc original if signed edit
"RTN","ORCSEND",171,0)
 . D STATUS^ORCSAVE2(ORIG,12)
"RTN","ORCSEND",172,0)
 . S ^OR(100,ORIG,6)=+$O(^ORD(100.02,"C","C",0))_U_DUZ_U_ORNOW
"RTN","ORCSEND",173,0)
 . S $P(^OR(100,ORIG,3),U,7)=0,$P(^(8,1,0),U,15)=12 D:$P($G(^(0)),U,4)=2 SIGN^ORCSAVE2(ORIG,,,5,1)
"RTN","ORCSEND",174,0)
 I $P(OR3,U,3)=11,$P(ORA,U,2)="NW" S Y=1 ; Action Sts = "" (old)
"RTN","ORCSEND",175,0)
RQ I Y=1 D EN^ORWPFSS4(+IFN) ; Associate PFSS Account Reference with order, Patch OR*3.0*228
"RTN","ORCSEND",176,0)
 Q Y
"RTN","ORMRA")
0^4^B59882057^B56841321
"RTN","ORMRA",1,0)
ORMRA ; SLC/MKB - Process Radiology ORM msgs ;2/21/02  15:44 [3/4/04 10:43am]
"RTN","ORMRA",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**3,53,92,110,136,153,174,195,228**;Dec 17, 1997
"RTN","ORMRA",3,0)
 ;DBIA 2968 allows for reading ^DIC(34
"RTN","ORMRA",4,0)
EN ; -- entry point for RA messages
"RTN","ORMRA",5,0)
 I '$L($T(@ORDCNTRL)) Q  ;S ORERR="Invalid order control code" Q
"RTN","ORMRA",6,0)
 I ORDCNTRL'="SN",ORDCNTRL'="ZP",'ORIFN!('$D(^OR(100,+ORIFN,0))) S ORERR="Invalid OE/RR order number" Q
"RTN","ORMRA",7,0)
 S OREASON=$S($P(OREASON,U,6)="99RAR":$P(OREASON,U,5),1:$P(OREASON,U,2))
"RTN","ORMRA",8,0)
 S:'ORDUZ ORDUZ=DUZ S:'ORLOG ORLOG=+$E($$NOW^XLFDT,1,12)
"RTN","ORMRA",9,0)
 D @ORDCNTRL
"RTN","ORMRA",10,0)
 Q
"RTN","ORMRA",11,0)
 ;
"RTN","ORMRA",12,0)
ZP ; -- Purged
"RTN","ORMRA",13,0)
 Q:'ORIFN  Q:'$D(^OR(100,+ORIFN,0))  K ^OR(100,+ORIFN,4)
"RTN","ORMRA",14,0)
 ; - Set status=lapsed, if still active
"RTN","ORMRA",15,0)
 I "^3^5^6^8^"[(U_$P($G(^OR(100,+ORIFN,3)),U,3)_U) D STATUS^ORCSAVE2(ORIFN,14)
"RTN","ORMRA",16,0)
 Q
"RTN","ORMRA",17,0)
 ;
"RTN","ORMRA",18,0)
ZR ; -- Purged as requested [ack]
"RTN","ORMRA",19,0)
 D DELETE^ORCSAVE2(+ORIFN)
"RTN","ORMRA",20,0)
 Q
"RTN","ORMRA",21,0)
 ;
"RTN","ORMRA",22,0)
ZU ; -- Unable to purge [ack]
"RTN","ORMRA",23,0)
 S $P(^OR(100,+ORIFN,3),U)=$$NOW^XLFDT ; update Last Activity
"RTN","ORMRA",24,0)
 Q
"RTN","ORMRA",25,0)
 ;
"RTN","ORMRA",26,0)
OK ; -- Order accepted, RA order # assigned [ack]
"RTN","ORMRA",27,0)
 N ORSTS,OBR S ^OR(100,+ORIFN,4)=PKGIFN,ORSTS=5 ; 5=pending
"RTN","ORMRA",28,0)
 ; Ck if also scheduled, else quit
"RTN","ORMRA",29,0)
 S OBR=$O(@ORMSG@(+ORC)) G:'OBR OKQ G:$E(@ORMSG@(OBR),1,3)'="OBR" OKQ
"RTN","ORMRA",30,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",31,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",32,0)
OKQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",33,0)
 ;Save the Radiology pre-certification Account Reference in the PV1
"RTN","ORMRA",34,0)
 ;segment of the HL7 message from the Radiology package to the Order
"RTN","ORMRA",35,0)
 ;File (#100). Support for Patch OR*3.0*228
"RTN","ORMRA",36,0)
 D PRECERT^ORWPFSS2
"RTN","ORMRA",37,0)
 Q
"RTN","ORMRA",38,0)
 ;
"RTN","ORMRA",39,0)
XX ; -- Change order
"RTN","ORMRA",40,0)
 N ORDIALOG,ORDG,ORDA,ORX,ORP S:'$L(ORNATR) ORNATR="S"
"RTN","ORMRA",41,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)  S ORIFN=+ORIFN
"RTN","ORMRA",42,0)
 S ORDA=$$ACTION^ORCSAVE("XX",ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",43,0)
 I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",44,0)
 ; -Update sts of order to active, last action to dc/edit:
"RTN","ORMRA",45,0)
 S ORX=+$P($G(^OR(100,ORIFN,3)),U,7)
"RTN","ORMRA",46,0)
 S:$P($G(^OR(100,ORIFN,8,ORX,0)),U,15)="" $P(^(0),U,15)=12
"RTN","ORMRA",47,0)
 S $P(^OR(100,ORIFN,3),U,7)=ORDA D STATUS^ORCSAVE2(ORIFN,6)
"RTN","ORMRA",48,0)
 D RELEASE^ORCSAVE2(ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",49,0)
 ; -If unsigned edit, leave XX unsigned & mark ORX as Sig Not Req'd
"RTN","ORMRA",50,0)
 S ORSIG=$S($P($G(^OR(100,ORIFN,8,ORX,0)),U,4)'=2:1,1:0)
"RTN","ORMRA",51,0)
 D SIGSTS^ORCSAVE2(ORIFN,ORDA):ORSIG,SIGN^ORCSAVE2(ORIFN,,,5,ORX):'ORSIG
"RTN","ORMRA",52,0)
 ; -Update responses, get/save new order text:
"RTN","ORMRA",53,0)
 K ^OR(100,ORIFN,4.5) D RESPONSE^ORCSAVE,ORDTEXT^ORCSAVE1(ORIFN_";"_ORDA)
"RTN","ORMRA",54,0)
 S $P(^OR(100,ORIFN,8,ORDA,0),U,14)=ORDA
"RTN","ORMRA",55,0)
 I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",56,0)
 Q
"RTN","ORMRA",57,0)
 ;
"RTN","ORMRA",58,0)
SN ; -- New backdoor order: return NA msg w/ORIFN, or DE msg
"RTN","ORMRA",59,0)
 N ORDIALOG,ORDG,ORP K ^TMP("ORWORD",$J) S:'$L(ORNATR) ORNATR="W"
"RTN","ORMRA",60,0)
 I ORDUZ,'$D(^VA(200,ORDUZ,0)) S ORERR="Invalid entering person" Q
"RTN","ORMRA",61,0)
 I '$D(^VA(200,ORNP,0)) S ORERR="Missing or invalid ordering provider" Q
"RTN","ORMRA",62,0)
 I '$G(ORL) S ORERR="Missing or invalid patient location" Q
"RTN","ORMRA",63,0)
 D DLG Q:$D(ORERR)  Q:'$D(ORDIALOG)
"RTN","ORMRA",64,0)
SNQ D EN^ORCSAVE K ^TMP("ORWORD",$J)
"RTN","ORMRA",65,0)
 I '$G(ORIFN) S ORERR="Cannot create new order" Q
"RTN","ORMRA",66,0)
 ;Save DG1 and ZCL segments of HL7 message from backdoor orders
"RTN","ORMRA",67,0)
 D BDOSTR^ORWDBA3
"RTN","ORMRA",68,0)
 ;Save the Rediology pre-certification Account Reference in the PV1
"RTN","ORMRA",69,0)
 ;segment of the HL7 message from the Radiology package to the Order
"RTN","ORMRA",70,0)
 ;File (#100). Support for Patch OR*3.0*228
"RTN","ORMRA",71,0)
 D PRECERT^ORWPFSS2
"RTN","ORMRA",72,0)
 D RELEASE^ORCSAVE2(ORIFN,1,ORLOG,ORDUZ,ORNATR),SIGSTS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",73,0)
 D STATUS^ORCSAVE2(ORIFN,5) S ^OR(100,ORIFN,4)=PKGIFN
"RTN","ORMRA",74,0)
 I $G(ORL) S ORP(1)=ORIFN_";1^1" D PRINTS^ORWD1(.ORP,+ORL) ; chart copy
"RTN","ORMRA",75,0)
 Q
"RTN","ORMRA",76,0)
 ;
"RTN","ORMRA",77,0)
DLG ; -- Build ORDIALOG() from msg
"RTN","ORMRA",78,0)
 N OBR,OI,MODS,J,X,Y,ILOC,MODE,CH,CHI,OBX,NTE
"RTN","ORMRA",79,0)
 S ORDIALOG=$O(^ORD(101.41,"AB","RA OERR EXAM",0))
"RTN","ORMRA",80,0)
 D GETDLG1^ORCD(ORDIALOG)
"RTN","ORMRA",81,0)
 S ORDIALOG($$PTR("CATEGORY"),1)=$G(ORCAT)
"RTN","ORMRA",82,0)
 S ORDIALOG($$PTR("START DATE/TIME"),1)=ORSTRT
"RTN","ORMRA",83,0)
 S ORDIALOG($$PTR("URGENCY"),1)=ORURG
"RTN","ORMRA",84,0)
 S:$P(ORC,"|",12) ORDIALOG($$PTR("PROVIDER"),1)=+$P(ORC,"|",12)
"RTN","ORMRA",85,0)
D1 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",86,0)
 S OI=$$ORDITEM^ORM($P(@ORMSG@(OBR),"|",5))
"RTN","ORMRA",87,0)
 I 'OI S ORERR="Invalid procedure" Q
"RTN","ORMRA",88,0)
 S ORDIALOG($$PTR("ORDERABLE ITEM"),1)=OI
"RTN","ORMRA",89,0)
 S ORDG=$P($G(^ORD(101.43,+OI,"RA")),U,3) S:$L(ORDG) ORDG=+$O(^ORD(100.98,"B",ORDG,0)) I 'ORDG S ORDG=$P(^ORD(101.41,+ORDIALOG,0),U,5) ; Im Type
"RTN","ORMRA",90,0)
 S MODS=$P(@ORMSG@(OBR),"|",19) I $L(MODS) D
"RTN","ORMRA",91,0)
 . F J=1:1:$L(MODS,"~") S X=$P(MODS,"~",J) I $L(X) S Y=$O(^RAMIS(71.2,"B",X,0)) S:Y ORDIALOG($$PTR("MODIFIERS"),J)=Y
"RTN","ORMRA",92,0)
 S ILOC=+$P(@ORMSG@(OBR),"|",20),MODE=$P(@ORMSG@(OBR),"|",31)
"RTN","ORMRA",93,0)
 S:ILOC ORDIALOG($$PTR("IMAGING LOCATION"),1)=ILOC
"RTN","ORMRA",94,0)
 S ORDIALOG($$PTR("MODE OF TRANSPORT"),1)=$S(MODE="WALK":"A",MODE="CART":"S",1:$E(MODE))
"RTN","ORMRA",95,0)
 I ORDCNTRL="XX" S NTE=+$O(@ORMSG@(OBR)) I NTE,$E($G(@ORMSG@(NTE)),1,3)="NTE" S OREASON=$P(@ORMSG@(NTE),"|",4) ;Tech's Comments
"RTN","ORMRA",96,0)
D2 ; might the procedure be scheduled at this point ??  Not in spec
"RTN","ORMRA",97,0)
 S CH=$$PTR("WORD PROCESSING 1"),CHI=0
"RTN","ORMRA",98,0)
 S OBX=OBR F  S OBX=$O(@ORMSG@(OBX)) Q:OBX'>0  S J=$E(@ORMSG@(OBX),1,3) Q:J="ORC"  Q:J="MSH"  I J="OBX" D
"RTN","ORMRA",99,0)
 . N NAME,VALUE,X0 S VALUE=$P(@ORMSG@(OBX),"|",6)
"RTN","ORMRA",100,0)
 . S NAME=$$UP^XLFSTR($P($P(@ORMSG@(OBX),"|",4),U,2))
"RTN","ORMRA",101,0)
 . I NAME="CONTRACT/SHARING SOURCE" S X0=$G(^DIC(34,+VALUE,0)) S:$L(X0) ORDIALOG($$PTR(NAME),1)=+VALUE,ORDIALOG($$PTR("CATEGORY"),1)=$P(X0,U,2) Q
"RTN","ORMRA",102,0)
 . I NAME="RESEARCH SOURCE" S ORDIALOG($$PTR(NAME),1)=VALUE,ORDIALOG($$PTR("CATEGORY"),1)="R" Q
"RTN","ORMRA",103,0)
 . I NAME="PREGNANT" S ORDIALOG($$PTR(NAME),1)=VALUE Q
"RTN","ORMRA",104,0)
 . I NAME="PRE-OP SCHEDULED DATE/TIME" S ORDIALOG($$PTR(NAME),1)=$$FMDATE^ORM(VALUE) Q
"RTN","ORMRA",105,0)
 . S CHI=CHI+1,^TMP("ORWORD",$J,CH,1,CHI,0)=VALUE
"RTN","ORMRA",106,0)
 S:CHI ^TMP("ORWORD",$J,CH,1,0)="^^"_CHI_U_CHI_U_DT_U,ORDIALOG(CH,1)="^TMP(""ORWORD"",$J,"_CH_",1)"
"RTN","ORMRA",107,0)
 Q
"RTN","ORMRA",108,0)
 ;
"RTN","ORMRA",109,0)
PTR(X) ; -- Returns ptr to prompt in Order Dialog file #101.41
"RTN","ORMRA",110,0)
 Q +$O(^ORD(101.41,"AB",$E("OR GTX "_X,1,63),0))
"RTN","ORMRA",111,0)
 ;
"RTN","ORMRA",112,0)
SC ; -- Status changed (scheduled, registered, or unverified)
"RTN","ORMRA",113,0)
 N ORSTS,OBR,OR3 ;110
"RTN","ORMRA",114,0)
 S ORSTS=$S(ORDSTS="ZR":6,ORDSTS="ZU":6,1:8),OR3=$G(^OR(100,+ORIFN,3)) ;110
"RTN","ORMRA",115,0)
 G:ORSTS=6 SCQ ;136  Done if active, else get scheduled data
"RTN","ORMRA",116,0)
 S OBR=$O(@ORMSG@(+ORC)) I 'OBR!($E($G(@ORMSG@(OBR)),1,3)'="OBR") S ORERR="Missing OBR segment" Q
"RTN","ORMRA",117,0)
 S ORSTRT=$$FMDATE^ORM($P(@ORMSG@(OBR),"|",37))
"RTN","ORMRA",118,0)
 D:ORSTRT DATES^ORCSAVE2(+ORIFN,ORSTRT)
"RTN","ORMRA",119,0)
 I $P(OR3,U,3)=3,$P($G(^OR(100,+ORIFN,8,+$P(OR3,U,7),0)),U,2)="HD" D RL ;If status is hold and current action is hold then release.  Added with 110
"RTN","ORMRA",120,0)
SCQ D STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",121,0)
 Q
"RTN","ORMRA",122,0)
 ;
"RTN","ORMRA",123,0)
RE ; -- Completed, w/results
"RTN","ORMRA",124,0)
 N I,SEG,OBX
"RTN","ORMRA",125,0)
 D STATUS^ORCSAVE2(ORIFN,2)
"RTN","ORMRA",126,0)
 S OBX="" D  ;get Results D/T [from OBR]
"RTN","ORMRA",127,0)
 . N DA,DR,DIE,X,Y,OBR
"RTN","ORMRA",128,0)
 . S DA=+ORIFN,DIE="^OR(100,",OBR=+$O(@ORMSG@(+ORC)),X=""
"RTN","ORMRA",129,0)
 . I OBR,$E($G(@ORMSG@(OBR)),1,3)="OBR" S X=$P(@ORMSG@(OBR),"|",23)
"RTN","ORMRA",130,0)
 . S DR="71////"_$S(X:$$FMDATE^ORM(X),1:+$E($$NOW^XLFDT,1,12)) D ^DIE
"RTN","ORMRA",131,0)
 S I=+ORC F  S I=$O(@ORMSG@(I)) Q:I<1  S SEG=$G(@ORMSG@(I)) Q:$E(SEG,1,3)="ORC"  I $E(SEG,1,3)="OBX" S OBX=I_U_SEG Q  ;first one
"RTN","ORMRA",132,0)
 S $P(^OR(100,+ORIFN,7),U,2)=$S($P(OBX,"|",9)="A":1,1:"")
"RTN","ORMRA",133,0)
 S:'$G(ORNP) ORNP=+$P($G(^OR(100,+ORIFN,0)),U,4)
"RTN","ORMRA",134,0)
 I $L($T(ADD^ORRCACK)) D ADD^ORRCACK(+ORIFN,ORNP) ;Ack stub for prov
"RTN","ORMRA",135,0)
 Q
"RTN","ORMRA",136,0)
 ;
"RTN","ORMRA",137,0)
OH ; -- Held
"RTN","ORMRA",138,0)
 D UPDATE(3,"HD")
"RTN","ORMRA",139,0)
 Q
"RTN","ORMRA",140,0)
 ;
"RTN","ORMRA",141,0)
OC ; -- Cancelled/Unable to accept [ack]
"RTN","ORMRA",142,0)
UA ; -- Unable to accept [ack]
"RTN","ORMRA",143,0)
 S:'$L(ORNATR) ORNATR="X" ;Rejected
"RTN","ORMRA",144,0)
 S ^OR(100,+ORIFN,6)=$O(^ORD(100.02,"C",ORNATR,0))_U_U_ORLOG_U_U_OREASON
"RTN","ORMRA",145,0)
 D STATUS^ORCSAVE2(ORIFN,13)
"RTN","ORMRA",146,0)
UD ; -- Unable to discontinue [ack]
"RTN","ORMRA",147,0)
 N DA S DA=+$P(ORIFN,";",2) I DA D
"RTN","ORMRA",148,0)
 . S $P(^OR(100,+ORIFN,8,DA,0),U,15)=13 ;Request rejected
"RTN","ORMRA",149,0)
 . S:$L(OREASON) ^OR(100,+ORIFN,8,DA,1)=OREASON
"RTN","ORMRA",150,0)
 Q
"RTN","ORMRA",151,0)
 ;
"RTN","ORMRA",152,0)
OD ; -- Discontinued
"RTN","ORMRA",153,0)
 S:$G(DGPMT) ORDUZ="" ;auto-dc on movement
"RTN","ORMRA",154,0)
 S ^OR(100,+ORIFN,6)=$S($L(ORNATR):$O(^ORD(100.02,"C",ORNATR,0)),1:"")_U_ORDUZ_U_ORLOG_U_U_OREASON
"RTN","ORMRA",155,0)
 D UPDATE(1,"DC")
"RTN","ORMRA",156,0)
 Q
"RTN","ORMRA",157,0)
 ;
"RTN","ORMRA",158,0)
DR ; -- Discontinued [ack]
"RTN","ORMRA",159,0)
 D STATUS^ORCSAVE2(ORIFN,1)
"RTN","ORMRA",160,0)
 Q
"RTN","ORMRA",161,0)
 ;
"RTN","ORMRA",162,0)
UPDATE(ORSTS,ORACT) ; -- continue processing
"RTN","ORMRA",163,0)
 N ORX,ORDA,ORP D:$G(ORSTS) STATUS^ORCSAVE2(ORIFN,ORSTS)
"RTN","ORMRA",164,0)
 S ORX=$$CREATE^ORX1(ORNATR) D:ORX
"RTN","ORMRA",165,0)
 . S ORDA=$$ACTION^ORCSAVE(ORACT,+ORIFN,ORNP,OREASON,ORLOG,ORDUZ)
"RTN","ORMRA",166,0)
 . I ORDA'>0 S ORERR="Cannot create new order action" Q
"RTN","ORMRA",167,0)
 . D RELEASE^ORCSAVE2(+ORIFN,ORDA,ORLOG,ORDUZ,ORNATR)
"RTN","ORMRA",168,0)
 . D SIGSTS^ORCSAVE2(+ORIFN,ORDA)
"RTN","ORMRA",169,0)
 . I $G(ORL) S ORP(1)=+ORIFN_";"_ORDA_"^1" D PRINTS^ORWD1(.ORP,+ORL)
"RTN","ORMRA",170,0)
 . S $P(^OR(100,+ORIFN,3),U,7)=ORDA
"RTN","ORMRA",171,0)
 I 'ORX D  ;no new action created
"RTN","ORMRA",172,0)
 . I ORACT="DC" S:'$$ACTV^ORX1(ORNATR) $P(^OR(100,+ORIFN,3),U,7)=0 Q
"RTN","ORMRA",173,0)
 . S:ORACT="HD"&$L(OREASON) ^OR(100,+ORIFN,8,1,1)=OREASON ;pend/sch only
"RTN","ORMRA",174,0)
 D:ORACT="DC" CANCEL^ORCSEND(+ORIFN)
"RTN","ORMRA",175,0)
 Q
"RTN","ORMRA",176,0)
 ;
"RTN","ORMRA",177,0)
RL ;Release hold --entire section added with patch 110
"RTN","ORMRA",178,0)
 S ^OR(100,+ORIFN,8,$P(OR3,U,7),2)=ORLOG_"^"_ORDUZ  ;Set release hold date/time and release hold user
"RTN","ORMRA",179,0)
 S ORNATR=$S($L(ORNATR):ORNATR,1:$P(^OR(100,+ORIFN,8,$P(OR3,U,7),0),U,12)) ;set nature of order for release equal to nature of order for hold if it doesn't exist
"RTN","ORMRA",180,0)
 I $G(ORSTS)="" S ORSTS=6
"RTN","ORMRA",181,0)
 D UPDATE(ORSTS,"RL")
"RTN","ORMRA",182,0)
 Q
"RTN","ORWPFSS")
0^1^B3926796^B258658
"RTN","ORWPFSS",1,0)
ORWPFSS ; SLC/REV/GSS - CPRS PFSS Calls; 11/15/04 [11/15/04 11:43am]
"RTN","ORWPFSS",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**215,228**;Dec 17, 1997
"RTN","ORWPFSS",3,0)
 ; Sub-routines for phase II of the CPRS PFSS project except for
"RTN","ORWPFSS",4,0)
 ;   tag PFSSACTV which (with different code) is in CPRS v26 or phase I
"RTN","ORWPFSS",5,0)
 ;
"RTN","ORWPFSS",6,0)
 Q
"RTN","ORWPFSS",7,0)
 ;
"RTN","ORWPFSS",8,0)
PFSSACTV(ORY) ; Is PFSS active for this system/user/etc?
"RTN","ORWPFSS",9,0)
 ; RPC called by Delphi to determine if passing visit string
"RTN","ORWPFSS",10,0)
 ;
"RTN","ORWPFSS",11,0)
 ; 1 = PFSS active - pass visit string with order
"RTN","ORWPFSS",12,0)
 ; 0 = PFSS not active - do not pass visit string
"RTN","ORWPFSS",13,0)
 ;
"RTN","ORWPFSS",14,0)
 ;$$SWSTAT^IBBAPI() WILL BE RELEASED IN IB*2*286, as per E.Zeigler
"RTN","ORWPFSS",15,0)
 ;
"RTN","ORWPFSS",16,0)
 ;Check for IB patch
"RTN","ORWPFSS",17,0)
 S ORY=+$$PATCH^XPDUTL("IB*2.0*286") Q:ORY=0
"RTN","ORWPFSS",18,0)
 ;Check PFSS master switch status (1=On, 0=Off) 
"RTN","ORWPFSS",19,0)
 S ORY=+$$SWSTAT^IBBAPI()  ;IA #4663
"RTN","ORWPFSS",20,0)
 Q
"RTN","ORWPFSS",21,0)
 ;
"RTN","ORWPFSS",22,0)
ORACTREF(ORACTREF,ORIEN) ;Return PFSS Account Reference Number (ARN)
"RTN","ORWPFSS",23,0)
 ; PFSS ARN in order file (#100) as field #97, i.e., ^OR(100,ORIEN,5.5)
"RTN","ORWPFSS",24,0)
 ; This API is covered under IA #4673
"RTN","ORWPFSS",25,0)
 ;
"RTN","ORWPFSS",26,0)
 ; Access as D ORACTREF^ORWPFSS(.ORACTREF,ORIEN), where
"RTN","ORWPFSS",27,0)
 ;    ORIEN      Order IEN
"RTN","ORWPFSS",28,0)
 ;    ORACTREF   returned in internal format, i.e., pointer to file #375
"RTN","ORWPFSS",29,0)
 ;
"RTN","ORWPFSS",30,0)
 ; Input:
"RTN","ORWPFSS",31,0)
 ;   ORIEN     Order internal reference number related to PFSS ARN
"RTN","ORWPFSS",32,0)
 ; Output:
"RTN","ORWPFSS",33,0)
 ;   ORACTREF  PFSS Account Reference Number
"RTN","ORWPFSS",34,0)
 ;
"RTN","ORWPFSS",35,0)
 ; new variables
"RTN","ORWPFSS",36,0)
 N ORERCK,ORPKG,OIREC,OIV,OIVN
"RTN","ORWPFSS",37,0)
 ; initialize PCE Account Reference Number variable
"RTN","ORWPFSS",38,0)
 S ORACTREF=""
"RTN","ORWPFSS",39,0)
 ; check for a valid ORIEN
"RTN","ORWPFSS",40,0)
 S ORERCK=$$ORDERCK(ORIEN) Q:+ORERCK>1
"RTN","ORWPFSS",41,0)
 ; get PFSS ARN from Order File (#100)
"RTN","ORWPFSS",42,0)
 S ORACTREF=$$GET1^DIQ(100,ORIEN_",",97,"I","","")
"RTN","ORWPFSS",43,0)
 Q
"RTN","ORWPFSS",44,0)
 ;
"RTN","ORWPFSS",45,0)
ORDERCK(ORIEN) ; check validity of Order IEN (ORIEN)
"RTN","ORWPFSS",46,0)
 ; used by ORWPFSS & ORWPFSS1, access as $$ORDERCK^ORWPFSS(ORIEN)
"RTN","ORWPFSS",47,0)
 ;
"RTN","ORWPFSS",48,0)
 ; Input:
"RTN","ORWPFSS",49,0)
 ;   ORIEN    Order internal reference number related to PFSS ARN
"RTN","ORWPFSS",50,0)
 ; Output:
"RTN","ORWPFSS",51,0)
 ;   if error, returns #^reason, where #>1
"RTN","ORWPFSS",52,0)
 ;   if valid, returns 1
"RTN","ORWPFSS",53,0)
 ;
"RTN","ORWPFSS",54,0)
 ; quit if ORIEN is null
"RTN","ORWPFSS",55,0)
 I $G(ORIEN)="" Q 90_U_"ORIEN IS NULL"
"RTN","ORWPFSS",56,0)
 ; quit if order is a document/note, i.e., not an order
"RTN","ORWPFSS",57,0)
 I ORIEN=0 Q 91_U_"ORIEN IS A DOCUMENT/NOTE"
"RTN","ORWPFSS",58,0)
 ; quit if ORIEN value is invalid, e.g., no such order
"RTN","ORWPFSS",59,0)
 I $D(^OR(100,ORIEN,0))'=1 Q 92_U_"ORIEN IS AN INVALID ORDER NUMBER"
"RTN","ORWPFSS",60,0)
 ; determine if package type supported
"RTN","ORWPFSS",61,0)
 I '$$PKGTYP(ORIEN) Q 93_U_"PACKAGE TYPE NOT SUPPORTED"
"RTN","ORWPFSS",62,0)
 ; ORIEN is valid
"RTN","ORWPFSS",63,0)
 Q 1
"RTN","ORWPFSS",64,0)
 ;
"RTN","ORWPFSS",65,0)
PKGTYP(ORIEN) ; Build CPRS PFSS supported packages array
"RTN","ORWPFSS",66,0)
 ; returns 1 if order package type supported, otherwise returns 0
"RTN","ORWPFSS",67,0)
 ; LR=Lab, RA=Radiology
"RTN","ORWPFSS",68,0)
 ; to add a package, include it above (documentation) & in For stmt below
"RTN","ORWPFSS",69,0)
 ;
"RTN","ORWPFSS",70,0)
 N I,ORPKG,ORPKGARY
"RTN","ORWPFSS",71,0)
 F I=1:1 S ORPKG=$P("LR;RA",";",I) Q:ORPKG=""  D
"RTN","ORWPFSS",72,0)
 . ; create ORPKGARY array of supported package types
"RTN","ORWPFSS",73,0)
 . S ORPKGARY(+$O(^DIC(9.4,"C",ORPKG,0)))=ORPKG  ; ^DIC(9.4) is pkg file
"RTN","ORWPFSS",74,0)
 ; yes, order passed is of a package type that is supported
"RTN","ORWPFSS",75,0)
 I $D(ORPKGARY($P(^OR(100,ORIEN,0),U,14))) Q 1
"RTN","ORWPFSS",76,0)
 Q 0  ; package type not supported
"RTN","ORWPFSS1")
0^2^B11865424^n/a
"RTN","ORWPFSS1",1,0)
ORWPFSS1 ;SLC/GSS - CPRS PFSS; 05/24/05 [05/24/05 11:44am]
"RTN","ORWPFSS1",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**228**;Dec 17, 1997
"RTN","ORWPFSS1",3,0)
 ; Sub-routines for phase II of the CPRS PFSS project (CPRS v26=phase I)
"RTN","ORWPFSS1",4,0)
 ;
"RTN","ORWPFSS1",5,0)
 Q
"RTN","ORWPFSS1",6,0)
 ;
"RTN","ORWPFSS1",7,0)
ACCTREF(ORIEN,ORACTREF) ;File PFSS Account Reference Number (ARN)
"RTN","ORWPFSS1",8,0)
 ; PFSS ARN stored as 1st piece of ^OR(100,ORIEN,5.5), aka Field #97
"RTN","ORWPFSS1",9,0)
 ; Call as an extrinsic function,i.e., $$ACCTREF^ORWPFSS1(ORIEN,ORACTREF)
"RTN","ORWPFSS1",10,0)
 ;
"RTN","ORWPFSS1",11,0)
 ; Input:
"RTN","ORWPFSS1",12,0)
 ;   ORIEN     Order internal reference number related to PFSS ARN
"RTN","ORWPFSS1",13,0)
 ;   ORACTREF  PFSS ARN to store, which is a pointer to File #375
"RTN","ORWPFSS1",14,0)
 ; Output:
"RTN","ORWPFSS1",15,0)
 ;   if error, returns #^reason, where #>1
"RTN","ORWPFSS1",16,0)
 ;   if valid, returns 1
"RTN","ORWPFSS1",17,0)
 ;
"RTN","ORWPFSS1",18,0)
 ; Additional variables used:
"RTN","ORWPFSS1",19,0)
 ;   ORERCK    error variable (error #^verbiage)
"RTN","ORWPFSS1",20,0)
 ;
"RTN","ORWPFSS1",21,0)
 ; new variables
"RTN","ORWPFSS1",22,0)
 N ARE,ORER,ORERCK,ORFDA,ORNEWER
"RTN","ORWPFSS1",23,0)
 ;
"RTN","ORWPFSS1",24,0)
 ; check for a valid ORIEN
"RTN","ORWPFSS1",25,0)
 S ORERCK=$$ORDERCK^ORWPFSS(ORIEN)
"RTN","ORWPFSS1",26,0)
 I +ORERCK>1 Q ORERCK
"RTN","ORWPFSS1",27,0)
 ;
"RTN","ORWPFSS1",28,0)
 ; check for pre-existing, non-null entry, if there is to be no editing
"RTN","ORWPFSS1",29,0)
 I $G(^OR(100,ORIEN,5.5))'="" Q 97_U_"PFSS Acct Ref # exists in Order file"
"RTN","ORWPFSS1",30,0)
 ; check that PFSS ARN is in a valid format
"RTN","ORWPFSS1",31,0)
 I '+ORACTREF Q 98_U_"PFSS is null or of invalid format"
"RTN","ORWPFSS1",32,0)
 ; check that PFSS ARN exists in PFSS Acount file #375 - DBIA #4741
"RTN","ORWPFSS1",33,0)
 I '$D(^IBBAA(375,ORACTREF,0)) Q 99_U_"PFSS Acct Ref # doesn't exist"
"RTN","ORWPFSS1",34,0)
 ;
"RTN","ORWPFSS1",35,0)
 ; store PARN (while checking for errors)
"RTN","ORWPFSS1",36,0)
 S ORERCK=$$STRPARN(ORIEN,ORACTREF)
"RTN","ORWPFSS1",37,0)
 Q ORERCK
"RTN","ORWPFSS1",38,0)
 ;
"RTN","ORWPFSS1",39,0)
EDO1 ; Event Delayed Orders called from EN1^ORCSEND for delayed releases
"RTN","ORWPFSS1",40,0)
 ;
"RTN","ORWPFSS1",41,0)
 ;  EIEN     = Release event IEN
"RTN","ORWPFSS1",42,0)
 ;  EPOINTER = Event pointer
"RTN","ORWPFSS1",43,0)
 ;  ETYPE    = Event type
"RTN","ORWPFSS1",44,0)
 ;  DFN      = Patient IEN
"RTN","ORWPFSS1",45,0)
 ;  ORACTREF = PFSS Account Reference Number
"RTN","ORWPFSS1",46,0)
 ;  ORERCK   = Order check results (1 = OK)
"RTN","ORWPFSS1",47,0)
 ;  ORIFN    = Order IEN (previously defined)
"RTN","ORWPFSS1",48,0)
 ;
"RTN","ORWPFSS1",49,0)
 ; new variables used
"RTN","ORWPFSS1",50,0)
 N EIEN,EPOINTER,ETYPE,DFN,ORACTREF,ORERCK,ORPFSS
"RTN","ORWPFSS1",51,0)
 ;
"RTN","ORWPFSS1",52,0)
 ; quit if PFSS is not active
"RTN","ORWPFSS1",53,0)
 D PFSSACTV^ORWPFSS(.ORPFSS) I ORPFSS=0 G EDO1Q
"RTN","ORWPFSS1",54,0)
 ;
"RTN","ORWPFSS1",55,0)
 ; check validity/support of order
"RTN","ORWPFSS1",56,0)
 S ORERCK=$$ORDERCK^ORWPFSS(ORIFN) I +ORERCK>1 G EDO1Q
"RTN","ORWPFSS1",57,0)
 ;
"RTN","ORWPFSS1",58,0)
 ; get Event Pointer
"RTN","ORWPFSS1",59,0)
 S EPOINTER=$P(^OR(100,ORIFN,0),U,17)
"RTN","ORWPFSS1",60,0)
 ; if EPOINTER is null then quit
"RTN","ORWPFSS1",61,0)
 I EPOINTER="" G EDO1Q
"RTN","ORWPFSS1",62,0)
 ;
"RTN","ORWPFSS1",63,0)
 ; get Release Event Record
"RTN","ORWPFSS1",64,0)
 S EIEN=$P(^ORE(100.2,EPOINTER,0),U,2)
"RTN","ORWPFSS1",65,0)
 ; if EIEN is null then quit
"RTN","ORWPFSS1",66,0)
 I EIEN="" G EDO1Q
"RTN","ORWPFSS1",67,0)
 ;
"RTN","ORWPFSS1",68,0)
 ; get Event Type
"RTN","ORWPFSS1",69,0)
 S ETYPE=$P(^ORD(100.5,EIEN,0),U,2)
"RTN","ORWPFSS1",70,0)
 ;
"RTN","ORWPFSS1",71,0)
 ; if ETYPE is Admission or Transfer get PFSS ARN from VADPT
"RTN","ORWPFSS1",72,0)
 I ETYPE="A"!(ETYPE="T") D
"RTN","ORWPFSS1",73,0)
 . ; set patient IEN (DFN)
"RTN","ORWPFSS1",74,0)
 . S DFN=$P($P(^OR(100,ORIFN,0),";"),U,2)
"RTN","ORWPFSS1",75,0)
 . ; call VADPT (hospital adm/txfr) routine to get PFSS ARN (ORACTREF)
"RTN","ORWPFSS1",76,0)
 . S ORACTREF=$$HAAR^ORWPFSS4(DFN)
"RTN","ORWPFSS1",77,0)
 . ; store PFSS ARN in Order file (#100)
"RTN","ORWPFSS1",78,0)
 . S X=$$STRPARN(ORIFN,ORACTREF)
"RTN","ORWPFSS1",79,0)
 ;
"RTN","ORWPFSS1",80,0)
 ; if ETYPE is Discharge store PFSS ARN as null in Order file (#100)
"RTN","ORWPFSS1",81,0)
 I ETYPE="D" S X=$$STRPARN(ORIFN,"")
"RTN","ORWPFSS1",82,0)
 ;
"RTN","ORWPFSS1",83,0)
 ; ???-course of action if errors or EPOINTER or EIEN null?
"RTN","ORWPFSS1",84,0)
EDO1Q Q
"RTN","ORWPFSS1",85,0)
 ;
"RTN","ORWPFSS1",86,0)
EDO2 ; Event Delayed Orders called from EN2^ORCSEND for manual releases
"RTN","ORWPFSS1",87,0)
 ; Get the PARN in effecxt when the event delayed order (EDO) released.
"RTN","ORWPFSS1",88,0)
 ;
"RTN","ORWPFSS1",89,0)
 ; Variables used:
"RTN","ORWPFSS1",90,0)
 ;  EIEN     = Release event IEN
"RTN","ORWPFSS1",91,0)
 ;  EPOINTER = Event pointer
"RTN","ORWPFSS1",92,0)
 ;  DFN      = Patient IEN
"RTN","ORWPFSS1",93,0)
 ;  ORACTREF = PFSS Account Reference Number
"RTN","ORWPFSS1",94,0)
 ;  ORERCK   = Order check results (1 = OK)
"RTN","ORWPFSS1",95,0)
 ;  ORIFN    = Order IEN (previously defined)
"RTN","ORWPFSS1",96,0)
 ;
"RTN","ORWPFSS1",97,0)
 ; new variables used
"RTN","ORWPFSS1",98,0)
 N EIEN,EPOINTER,ETYPE,DFN,ORACTREF,ORERCK,ORPFSS
"RTN","ORWPFSS1",99,0)
 ;
"RTN","ORWPFSS1",100,0)
 ; quit if PFSS is not active
"RTN","ORWPFSS1",101,0)
 D PFSSACTV^ORWPFSS(.ORPFSS) I ORPFSS=0 G EDO2Q
"RTN","ORWPFSS1",102,0)
 ;
"RTN","ORWPFSS1",103,0)
 ; check validity/support of order
"RTN","ORWPFSS1",104,0)
 S ORERCK=$$ORDERCK^ORWPFSS(ORIFN) I +ORERCK>1 G EDO2Q
"RTN","ORWPFSS1",105,0)
 ;
"RTN","ORWPFSS1",106,0)
 ; get Event Pointer
"RTN","ORWPFSS1",107,0)
 S EPOINTER=$P(^OR(100,ORIFN,0),U,17)
"RTN","ORWPFSS1",108,0)
 ; if EPOINTER is null then quit
"RTN","ORWPFSS1",109,0)
 I EPOINTER="" G EDO2Q
"RTN","ORWPFSS1",110,0)
 ;
"RTN","ORWPFSS1",111,0)
 ; get Release Event Record
"RTN","ORWPFSS1",112,0)
 S EIEN=$P(^ORE(100.2,EPOINTER,0),U,2)
"RTN","ORWPFSS1",113,0)
 ; if EIEN is null then quit
"RTN","ORWPFSS1",114,0)
 I EIEN="" G EDO2Q
"RTN","ORWPFSS1",115,0)
 ;
"RTN","ORWPFSS1",116,0)
 ; set patient IEN (DFN)
"RTN","ORWPFSS1",117,0)
 S DFN=$P($P(^OR(100,ORIFN,0),";"),U,2)
"RTN","ORWPFSS1",118,0)
 ; call VADPT (hospital adm/txfr) routine to get PFSS ARN (ORACTREF)
"RTN","ORWPFSS1",119,0)
 S ORACTREF=$$HAAR^ORWPFSS4(DFN)
"RTN","ORWPFSS1",120,0)
 ; store PFSS ARN in Order file (#100)
"RTN","ORWPFSS1",121,0)
 S X=$$STRPARN(ORIFN,ORACTREF)
"RTN","ORWPFSS1",122,0)
 ;
"RTN","ORWPFSS1",123,0)
 ; ???-course of action if errors or EPOINTER or EIEN null?
"RTN","ORWPFSS1",124,0)
EDO2Q Q
"RTN","ORWPFSS1",125,0)
 ;
"RTN","ORWPFSS1",126,0)
STRPARN(ORIEN,ORACTREF) ; store of PFSS ARN
"RTN","ORWPFSS1",127,0)
 ; stores PFSS Account Reference Number in the Order file #100, field 97
"RTN","ORWPFSS1",128,0)
 ; see ACCTREF for passed in variable descriptions
"RTN","ORWPFSS1",129,0)
 ;
"RTN","ORWPFSS1",130,0)
 ; Variables used:
"RTN","ORWPFSS1",131,0)
 ;   ORER      = Error message
"RTN","ORWPFSS1",132,0)
 ;   ORFIELD   = PFSS ARN field (#97)
"RTN","ORWPFSS1",133,0)
 ;   ORFILE    = ORDER file (#100)
"RTN","ORWPFSS1",134,0)
 ;   ORFLAGS   = null (flags used in controlling use of FDA^DIFL)
"RTN","ORWPFSS1",135,0)
 ;
"RTN","ORWPFSS1",136,0)
 ; new variables
"RTN","ORWPFSS1",137,0)
 N ORER,ORFILE,ORFIELD,ORFLAGS
"RTN","ORWPFSS1",138,0)
 ;
"RTN","ORWPFSS1",139,0)
 ; set contants
"RTN","ORWPFSS1",140,0)
 S ORFILE=100,ORFIELD=97,ORFLAGS=""
"RTN","ORWPFSS1",141,0)
 ;
"RTN","ORWPFSS1",142,0)
 ; do FDA loader to compose FDA_ROOT
"RTN","ORWPFSS1",143,0)
 D FDA^DILF(ORFILE,ORIEN,ORFIELD,ORFLAGS,ORACTREF,"ORFDA","ORER")
"RTN","ORWPFSS1",144,0)
 ; check for an error
"RTN","ORWPFSS1",145,0)
 D ERRCHK I $D(ORNEWER) Q ORER
"RTN","ORWPFSS1",146,0)
 ; file PFSS ARN in Order file
"RTN","ORWPFSS1",147,0)
 D UPDATE^DIE("","ORFDA","","ORER")
"RTN","ORWPFSS1",148,0)
 ; another error check
"RTN","ORWPFSS1",149,0)
 D ERRCHK I $D(ORNEWER) Q ORER
"RTN","ORWPFSS1",150,0)
 ; successful data
"RTN","ORWPFSS1",151,0)
 Q 1
"RTN","ORWPFSS1",152,0)
 ;
"RTN","ORWPFSS1",153,0)
ERRCHK ; Compose error message if there's an error from use of DILF or DIE
"RTN","ORWPFSS1",154,0)
 I $G(ORER("DIERR",1)) D
"RTN","ORWPFSS1",155,0)
 . S ORNEWER=$G(ORER("DIERR",1))_U_$G(ORER("DIERR",1,"TEXT",1))
"RTN","ORWPFSS1",156,0)
 Q
"RTN","ORWPFSS2")
0^3^B917624^n/a
"RTN","ORWPFSS2",1,0)
ORWPFSS2 ;SLC-GDU CPRS HL7 PROCESSING FOR RAD PRE-CERT;[04/15/05 09:19]; 4/28/05 15:34
"RTN","ORWPFSS2",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**228**;Dec 17, 1997
"RTN","ORWPFSS2",3,0)
 ;Routine to process the HL7 message from the Ancillary Radiology 
"RTN","ORWPFSS2",4,0)
 ;package for the Pre-Certification Account Reference to be associated
"RTN","ORWPFSS2",5,0)
 ;with the radiology order record in the Order File, file # 100.
"RTN","ORWPFSS2",6,0)
 ;External Variables, set by the HL7 processing
"RTN","ORWPFSS2",7,0)
 ; ORIFN   - 1st piece of 3rd piece of ORC message segment, Order IEN
"RTN","ORWPFSS2",8,0)
 ; ORMSG   - The HL7 message being processed
"RTN","ORWPFSS2",9,0)
 ; PV1     - PV1 segment number in the HL7 message
"RTN","ORWPFSS2",10,0)
 ;Internal Variables
"RTN","ORWPFSS2",11,0)
 ; ORAR    - Order PFSS Account Reference
"RTN","ORWPFSS2",12,0)
 ; ORFDA   - Fileman Data Array
"RTN","ORWPFSS2",13,0)
 ; OREM    - Error Message
"RTN","ORWPFSS2",14,0)
 ; ORIEN   - Order Internal Entry Number
"RTN","ORWPFSS2",15,0)
 ; ORRPAR  - Order Radiology Pre-Certification Account Reference
"RTN","ORWPFSS2",16,0)
 ; ORUPDT  - Order Update Indicator
"RTN","ORWPFSS2",17,0)
 ; ORPFSS  - PFSS Active Indicator
"RTN","ORWPFSS2",18,0)
 ;DBIA References
"RTN","ORWPFSS2",19,0)
 ; $$GET1^DIQ         - DBIA 2056
"RTN","ORWPFSS2",20,0)
 ; PFSSACTV^ORWPFSS   - Internal to CPRS PFSS
"RTN","ORWPFSS2",21,0)
 ; $$ACCTREF^ORWPFSS1 - Internal to CPRS PFSS
"RTN","ORWPFSS2",22,0)
PRECERT ;Process Radiology HL7 message for precertification PFSS Account
"RTN","ORWPFSS2",23,0)
 ;Reference.
"RTN","ORWPFSS2",24,0)
 N ORAR,ORFDA,OREM,ORIEN,ORRPAR,ORUPDT,ORPFSS
"RTN","ORWPFSS2",25,0)
 ;If PFSS inactive quit
"RTN","ORWPFSS2",26,0)
 D PFSSACTV^ORWPFSS(.ORPFSS) I ORPFSS=0 Q
"RTN","ORWPFSS2",27,0)
 ;If PV1 is null quit
"RTN","ORWPFSS2",28,0)
 I PV1="" Q
"RTN","ORWPFSS2",29,0)
 ;If pre-cert not present in HL7 PV1 seg quit
"RTN","ORWPFSS2",30,0)
 S ORRPAR=$P(@ORMSG@(PV1),"|",51)
"RTN","ORWPFSS2",31,0)
 I ORRPAR="" Q
"RTN","ORWPFSS2",32,0)
 ;If PFSS AR already on file with order quit
"RTN","ORWPFSS2",33,0)
 S ORIEN=+ORIFN
"RTN","ORWPFSS2",34,0)
 S ORAR=$$GET1^DIQ(100,ORIEN,97)
"RTN","ORWPFSS2",35,0)
 I ORAR'="" Q
"RTN","ORWPFSS2",36,0)
 ;Update order with pre-cert PFSS AR
"RTN","ORWPFSS2",37,0)
 S ORUPDT=$$ACCTREF^ORWPFSS1(ORIEN,ORRPAR)
"RTN","ORWPFSS2",38,0)
 I ORUPDT=1 Q
"RTN","ORWPFSS2",39,0)
 ;Return error message is error happens during update
"RTN","ORWPFSS2",40,0)
 S ORERR=$P(ORUPDT,U,2)
"RTN","ORWPFSS2",41,0)
 Q
"RTN","ORWPFSS4")
0^7^B7376059^n/a
"RTN","ORWPFSS4",1,0)
ORWPFSS4 ;SLC-GDU CPRS HL7 PROCESSING FOR RAD PRE-CERT;[08/29/05];
"RTN","ORWPFSS4",2,0)
 ;;3.0;ORDER ENTRY/RESULTS REPORTING;**228**;Dec 17, 1997
"RTN","ORWPFSS4",3,0)
 ;Determine if the order is to have an PFSS Account Reference
"RTN","ORWPFSS4",4,0)
 ;associated with it. This is for orders that are not event delayed
"RTN","ORWPFSS4",5,0)
 ;
"RTN","ORWPFSS4",6,0)
 ;DBIA References for external calls
"RTN","ORWPFSS4",7,0)
 ; $$GETS^DIQ         - DBIA 2056 
"RTN","ORWPFSS4",8,0)
 ; $$GETS1^DIQ        - DBIA 2056
"RTN","ORWPFSS4",9,0)
 ; $$PKGTYP^ORWPFSS   - Internal to CPRS PFSS
"RTN","ORWPFSS4",10,0)
 ; PFSSACTV^ORWPFSS   - Internal to CPRS PFSS
"RTN","ORWPFSS4",11,0)
 ; $$ACCTREF^ORWPFSS1 - Internal to CPRS PFSS
"RTN","ORWPFSS4",12,0)
 ; $$GETARN^SDPFSS2   - DBIA 4668
"RTN","ORWPFSS4",13,0)
 ; INP^VADPT          - DBIA 10061
"RTN","ORWPFSS4",14,0)
 ; ^VSIT              - DBIA 1900-A
"RTN","ORWPFSS4",15,0)
 ;
"RTN","ORWPFSS4",16,0)
EN(ORIEN) ;Primary entry point of this routine
"RTN","ORWPFSS4",17,0)
 ;Input Variable
"RTN","ORWPFSS4",18,0)
 ; ORIEN    The Order Internal Entry Number
"RTN","ORWPFSS4",19,0)
 ;Local Variables
"RTN","ORWPFSS4",20,0)
 ; ORAR        Order Account Reference (PFSS AR)
"RTN","ORWPFSS4",21,0)
 ; ORDFN       Order Patient's DFN (IEN)
"RTN","ORWPFSS4",22,0)
 ; ORPFSS      Order PFSS Active Indicator
"RTN","ORWPFSS4",23,0)
 ; ORUPDT      Order Update Indicator from record update
"RTN","ORWPFSS4",24,0)
 ; ORVS        Order Visit String
"RTN","ORWPFSS4",25,0)
 ;
"RTN","ORWPFSS4",26,0)
 N ORAR,ORDFN,ORPFSS,ORUPDT,ORVS,X,Y
"RTN","ORWPFSS4",27,0)
 S (ORAR,ORPFSS)=""
"RTN","ORWPFSS4",28,0)
 ;If PFSS is inactive goto exit
"RTN","ORWPFSS4",29,0)
 D PFSSACTV^ORWPFSS(.ORPFSS) I ORPFSS=0 G EXIT
"RTN","ORWPFSS4",30,0)
 ;If Order already has PFSS Account Reference goto exit
"RTN","ORWPFSS4",31,0)
 S ORAR=$$GET1^DIQ(100,ORIEN,97) I ORAR'="" G EXIT
"RTN","ORWPFSS4",32,0)
 ;If Order package is not one of the currently supported goto exit
"RTN","ORWPFSS4",33,0)
 I $$PKGTYP^ORWPFSS(ORIEN)=0 G EXIT
"RTN","ORWPFSS4",34,0)
 ;If Visit String not found goto EXIT.
"RTN","ORWPFSS4",35,0)
 S ORVS=$$GETVS(ORIEN) I ORVS="" G EXIT
"RTN","ORWPFSS4",36,0)
 ;Get Patient's DFN from the Order
"RTN","ORWPFSS4",37,0)
 S ORDFN=+$$GET1^DIQ(100,ORIEN,.02,"I")
"RTN","ORWPFSS4",38,0)
 ;If Historical set PFSS Account Reference to null and goto Save
"RTN","ORWPFSS4",39,0)
 I $P(ORVS,";",3)="E" S ORAR="" G SAVE
"RTN","ORWPFSS4",40,0)
 ;If Scheduled Appointment get PFSS Account Reference and goto Save
"RTN","ORWPFSS4",41,0)
 I $P(ORVS,";",3)="A" S ORAR=$$SAAR(ORVS,ORDFN) I ORAR'="" G SAVE
"RTN","ORWPFSS4",42,0)
 ;If Hospital Admission get PFSS Account Reference and goto Save
"RTN","ORWPFSS4",43,0)
 I $P(ORVS,";",3)="H" S ORAR=$$HAAR(ORDFN) I ORAR'="" G SAVE
"RTN","ORWPFSS4",44,0)
 ;Check PCE for PFSS Account Reference
"RTN","ORWPFSS4",45,0)
 S ORAR=$$PCEAR(ORVS,ORDFN)
"RTN","ORWPFSS4",46,0)
SAVE ;Save PFSS Account Reference or null value to the Order record
"RTN","ORWPFSS4",47,0)
 S ORUPDT=$$ACCTREF^ORWPFSS1(ORIEN,ORAR)
"RTN","ORWPFSS4",48,0)
EXIT ;Exit point for this routine
"RTN","ORWPFSS4",49,0)
 Q
"RTN","ORWPFSS4",50,0)
GETVS(X1) ;Get Order Visit String
"RTN","ORWPFSS4",51,0)
 ;Get the data from the Order's Responses multi-valued field.
"RTN","ORWPFSS4",52,0)
 ;Look for Prompt text of OR GTX VISITSTR
"RTN","ORWPFSS4",53,0)
 ;If Prompt text found get the Visit String
"RTN","ORWPFSS4",54,0)
 ;If Prompt text not found return a null value
"RTN","ORWPFSS4",55,0)
 ;Input variable required, if missing this will return a null value
"RTN","ORWPFSS4",56,0)
 ;Input Variable for this function
"RTN","ORWPFSS4",57,0)
 ; X1    The Order IEN
"RTN","ORWPFSS4",58,0)
 ;Return Variable for this function
"RTN","ORWPFSS4",59,0)
 ; VS    The Order Visit String
"RTN","ORWPFSS4",60,0)
 ;Local Variable for this function
"RTN","ORWPFSS4",61,0)
 ; IENS  Index variable for REC array
"RTN","ORWPFSS4",62,0)
 ; PT    Prompt Text being searched for
"RTN","ORWPFSS4",63,0)
 ; REC   Output variable for GETS^DIQ that will contain the Order
"RTN","ORWPFSS4",64,0)
 ;       Responses data.
"RTN","ORWPFSS4",65,0)
 N IENS,PT,REC,VS
"RTN","ORWPFSS4",66,0)
 I X1="" S VS="" Q VS
"RTN","ORWPFSS4",67,0)
 S (IENS,VS)=""
"RTN","ORWPFSS4",68,0)
 S PT=$P($T(VSPT),";",3)
"RTN","ORWPFSS4",69,0)
 D GETS^DIQ(100,X1,"4.5*","E","REC")
"RTN","ORWPFSS4",70,0)
 F  S IENS=$O(REC(100.045,IENS)) Q:IENS=""  D
"RTN","ORWPFSS4",71,0)
 . I $G(REC(100.045,IENS,.02,"E"))=PT S VS=$G(REC(100.045,IENS,1,"E"))
"RTN","ORWPFSS4",72,0)
 Q VS
"RTN","ORWPFSS4",73,0)
VSPT ;Visit String Prompt Text;OR GTX VISITSTR
"RTN","ORWPFSS4",74,0)
 ;
"RTN","ORWPFSS4",75,0)
SAAR(X1,X2) ;Scheduled Appointment Account Reference for PFSS
"RTN","ORWPFSS4",76,0)
 ;Get the PFSS Account Reference for scheduled appointments
"RTN","ORWPFSS4",77,0)
 ;All inputs required, any missing this will return a null value
"RTN","ORWPFSS4",78,0)
 ;Input Variables
"RTN","ORWPFSS4",79,0)
 ; X1    The Visit String from the Order 
"RTN","ORWPFSS4",80,0)
 ; X2    The Patient's IEN
"RTN","ORWPFSS4",81,0)
 ;Output Variable
"RTN","ORWPFSS4",82,0)
 ; AR    PFSS Account Reference returned by $$GETARN^SDPFSS2
"RTN","ORWPFSS4",83,0)
 ;       Set to null in any input is missing
"RTN","ORWPFSS4",84,0)
 ;
"RTN","ORWPFSS4",85,0)
 N AR
"RTN","ORWPFSS4",86,0)
 I X1=""!(X2="") S AR="" Q AR
"RTN","ORWPFSS4",87,0)
 ;Get the PFSS Account Reference from Scheduling
"RTN","ORWPFSS4",88,0)
 S AR=+$$GETARN^SDPFSS2($P(X1,";",2),X2,$P(X1,";"))
"RTN","ORWPFSS4",89,0)
 I AR>0 Q AR      ;If found return Account Reference
"RTN","ORWPFSS4",90,0)
 S AR="" Q AR     ;If not found return null for Account Reference
"RTN","ORWPFSS4",91,0)
 ;
"RTN","ORWPFSS4",92,0)
HAAR(X1) ;Hospital Admission Account Reference for PFSS
"RTN","ORWPFSS4",93,0)
 ;Returns the PFSS Account Reference for the Hospital Admission
"RTN","ORWPFSS4",94,0)
 ;Input is required. If missing null value returned.
"RTN","ORWPFSS4",95,0)
 ;Returns PFSS Account Reference returned if found.
"RTN","ORWPFSS4",96,0)
 ;Returns null if PFSS Account Reference not found null.
"RTN","ORWPFSS4",97,0)
 ;Input Variable for this function
"RTN","ORWPFSS4",98,0)
 ; X1    The Patient's DFN
"RTN","ORWPFSS4",99,0)
 ;Output Variables for this function
"RTN","ORWPFSS4",100,0)
 ; ER    Set to null and returned if missing input
"RTN","ORWPFSS4",101,0)
 ; VAIN("NR") The node of VAIN that contains the PFSS Account Reference
"RTN","ORWPFSS4",102,0)
 ;Internal Variables for this function
"RTN","ORWPFSS4",103,0)
 ; DFN   VADPT input variable, Patient's record number
"RTN","ORWPFSS4",104,0)
 ; VAHOW VADPT input variable, sends output to array variable VAIN
"RTN","ORWPFSS4",105,0)
 ; VAIN  Output array variable with results of INP^VAIN
"RTN","ORWPFSS4",106,0)
 ;
"RTN","ORWPFSS4",107,0)
 N ER,DFN,VAHOW,VAIN
"RTN","ORWPFSS4",108,0)
 I X1="" S ER="" Q ER
"RTN","ORWPFSS4",109,0)
 S DFN=X1
"RTN","ORWPFSS4",110,0)
 S VAHOW=1
"RTN","ORWPFSS4",111,0)
 D INP^VADPT
"RTN","ORWPFSS4",112,0)
 Q $G(VAIN("NR"))
"RTN","ORWPFSS4",113,0)
 ;
"RTN","ORWPFSS4",114,0)
PCEAR(X1,X2) ;PCE Account Reference for PFSS
"RTN","ORWPFSS4",115,0)
 ;Returns the PFSS Account Reference from PCE
"RTN","ORWPFSS4",116,0)
 ;All input required, if any missing this will a null.
"RTN","ORWPFSS4",117,0)
 ;Returns PFSS Account Reference returned if found.
"RTN","ORWPFSS4",118,0)
 ;Returns null if PFSS Account Reference not found null.
"RTN","ORWPFSS4",119,0)
 ;Input Variable for this function
"RTN","ORWPFSS4",120,0)
 ; X1    The Visit String from the Order
"RTN","ORWPFSS4",121,0)
 ; X2    The Patient's IEN
"RTN","ORWPFSS4",122,0)
 ; VSIT  The input and output array variable for ^VSIT
"RTN","ORWPFSS4",123,0)
 ;Output Variables for this function
"RTN","ORWPFSS4",124,0)
 ; ER    Set to null and returned if missing input
"RTN","ORWPFSS4",125,0)
 ; VSIT("ACT") The node of array variable VSIT that contains
"RTN","ORWPFSS4",126,0)
 ;       the PFSS Account Reference returned by ^VSIT
"RTN","ORWPFSS4",127,0)
 ;Local Variable for this function
"RTN","ORWPFSS4",128,0)
 ; VSIT  The input and output array variable for ^VSIT
"RTN","ORWPFSS4",129,0)
 ;
"RTN","ORWPFSS4",130,0)
 N ER,VSIT
"RTN","ORWPFSS4",131,0)
 I X1=""!(X2="") S ER="" Q ER
"RTN","ORWPFSS4",132,0)
 S VSIT(0)="D0EM"
"RTN","ORWPFSS4",133,0)
 S VSIT("VDT")=$P(X1,";",2)
"RTN","ORWPFSS4",134,0)
 S VSIT("LOC")=$P(X1,";")
"RTN","ORWPFSS4",135,0)
 S VSIT("PKG")="OR"
"RTN","ORWPFSS4",136,0)
 S VSIT("PAT")=X2
"RTN","ORWPFSS4",137,0)
 D ^VSIT
"RTN","ORWPFSS4",138,0)
 I $G(VSIT("IEN"))<0 S ER="" Q ER
"RTN","ORWPFSS4",139,0)
 Q $G(VSIT("ACT"))
"VER")
8.0^22.0
"^DD",100,100,97,0)
PFSS ACCOUNT REFERENCE^P375'^IBBAA(375,^5.5;1^Q
"^DD",100,100,97,21,0)
^.001^3^3^3050607^^^
"^DD",100,100,97,21,1,0)
The PFSS Account Reference field stores the PFSS Account Reference 
"^DD",100,100,97,21,2,0)
associated with the order. The field is a pointer to the PFSS Account 
"^DD",100,100,97,21,3,0)
Reference file (#375).
"^DD",100,100,97,"DT")
3050602
"BLD",5673,6)
^231
**END**
**END**
