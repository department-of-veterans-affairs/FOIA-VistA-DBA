Released PSO*7*267 SEQ #236
Extracted from mail message
**KIDS**:PSO*7.0*267^

**INSTALL NAME**
PSO*7.0*267
"BLD",6234,0)
PSO*7.0*267^OUTPATIENT PHARMACY^0^3070516^y
"BLD",6234,1,0)
^^57^57^3070516^
"BLD",6234,1,1,0)
This patch enhances the functionality of PSODI, PSO59, and PSO52EX.
"BLD",6234,1,2,0)
 
"BLD",6234,1,3,0)
PSODI contains a new Application Programmer Interface (API) named GET1.
"BLD",6234,1,4,0)
This API will invoke the $$GET1^DIQ FileMan Database Server (DBS) call and
"BLD",6234,1,5,0)
is to be used as an extrinsic function.  GET1 has five parameters:
"BLD",6234,1,6,0)
 
"BLD",6234,1,7,0)
   PSOFILE: FILE OR SUBFILE NUMBER TO RETRIEVE DATA FROM [REQUIRED]
"BLD",6234,1,8,0)
   PSOIEN: IEN TO RETRIEVE DATA FROM [REQUIRED] 
"BLD",6234,1,9,0)
   PSOFIELD: FIELD TO RETRIEVE DATA FROM [REQUIRED] 
"BLD",6234,1,10,0)
   PSOFLAGS: CONTROLS THE PROCESSING OF DATA RETURNED [OPTIONAL] 
"BLD",6234,1,11,0)
   PSOWORD: RETURN OF WORD PROCESSING FIELDS [REQUIRED only with word 
"BLD",6234,1,12,0)
   processing fields]
"BLD",6234,1,13,0)
 
"BLD",6234,1,14,0)
If a file access error is encountered, the calling application will have
"BLD",6234,1,15,0)
"0^FILE ACCESS ERROR" returned.  If a FileMan error has occurred, the
"BLD",6234,1,16,0)
calling application will have "0^FILEMAN UNABLE TO PROCESS REQUEST"
"BLD",6234,1,17,0)
returned.  A successful data retrieval will return in the format "1^(FIELD
"BLD",6234,1,18,0)
DATA)".  When retrieving data from a word processing field, an array name
"BLD",6234,1,19,0)
must be passed in to PSOWORD.  Once the word processing field is returned,
"BLD",6234,1,20,0)
it will then populate an array as defined by PSOWORD and the calling
"BLD",6234,1,21,0)
application will have "1^(PSOWORD)" returned.  If there is no data in the
"BLD",6234,1,22,0)
Word Processing field, the calling application will have "1^" returned,
"BLD",6234,1,23,0)
and the array defined by PSOWORD will be empty.
"BLD",6234,1,24,0)
 
"BLD",6234,1,25,0)
Please see the VA FileMan Programmer Manual V. 22.0 for $$GET1^DIQ input
"BLD",6234,1,26,0)
definitions and DBIA 4858 for further description.
"BLD",6234,1,27,0)
 
"BLD",6234,1,28,0)
PSO59 retrieves data from the OUTPATIENT SITE file (#59) and has three 
"BLD",6234,1,29,0)
parameters: PSOIEN (optional), PSOTXT (optional), and LIST (required).  
"BLD",6234,1,30,0)
While PSOIEN and PSOTXT are both labeled as optional, PSO59 requires that 
"BLD",6234,1,31,0)
either parameter be passed in or no data will be returned.  PSOIEN is the 
"BLD",6234,1,32,0)
internal entry number (IEN) of a site, PSOTXT is a free text entry that 
"BLD",6234,1,33,0)
works as a search parameter, and LIST is the subscript name used in the 
"BLD",6234,1,34,0)
^TMP global. The new functionality now allows the user to pass in "??" to 
"BLD",6234,1,35,0)
retrieve all divisions in the file and subscripts them accordingly.  If 
"BLD",6234,1,36,0)
both an IEN and "??" are passed in, PSO59 will ignore the "??" and return
"BLD",6234,1,37,0)
data specific to the IEN.  
"BLD",6234,1,38,0)
 
"BLD",6234,1,39,0)
Please refer to DBIA 4827 for further description on PSO59.
"BLD",6234,1,40,0)
 
"BLD",6234,1,41,0)
PSO52EX contains a new Application Programmer Interface (API) named 
"BLD",6234,1,42,0)
ARXREF. This API is to be used as an extrinsic function call and requires
"BLD",6234,1,43,0)
three parameters: PSODATE, PSOIEN, and PSOFILL.  PSODATE is the RELEASED 
"BLD",6234,1,44,0)
DATE/TIME field (#31) and PSOIEN is the internal entry number from the 
"BLD",6234,1,45,0)
PRESCRIPTION file (#52).  PSOFILL is the fill number of prescription (0 
"BLD",6234,1,46,0)
for Original Fill, 1 for Refill #1, 2 for Refill #2, etc.).  The user can
"BLD",6234,1,47,0)
set a local variable equal to the return value of ARXREF. If the return
"BLD",6234,1,48,0)
value equals:
"BLD",6234,1,49,0)
 
"BLD",6234,1,50,0)
   0 (zero) = Data does not exist in the "AR" cross reference, indicating
"BLD",6234,1,51,0)
   the fill was not dispensed from the Consolidated Mail Outpatient
"BLD",6234,1,52,0)
   Pharmacy (CMOP).
"BLD",6234,1,53,0)
 
"BLD",6234,1,54,0)
   1 (one) = Data does exist in the "AR" cross reference, indicating the
"BLD",6234,1,55,0)
   fill was dispensed from the CMOP.
"BLD",6234,1,56,0)
 
"BLD",6234,1,57,0)
Please refer to DBIA 4902 for further description on PSO52EX.
"BLD",6234,4,0)
^9.64PA^^
"BLD",6234,6.3)
3
"BLD",6234,"ABPKG")
n
"BLD",6234,"KRN",0)
^9.67PA^8989.52^19
"BLD",6234,"KRN",.4,0)
.4
"BLD",6234,"KRN",.401,0)
.401
"BLD",6234,"KRN",.402,0)
.402
"BLD",6234,"KRN",.403,0)
.403
"BLD",6234,"KRN",.5,0)
.5
"BLD",6234,"KRN",.84,0)
.84
"BLD",6234,"KRN",3.6,0)
3.6
"BLD",6234,"KRN",3.8,0)
3.8
"BLD",6234,"KRN",9.2,0)
9.2
"BLD",6234,"KRN",9.8,0)
9.8
"BLD",6234,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6234,"KRN",9.8,"NM",1,0)
PSO59^^0^B8608274
"BLD",6234,"KRN",9.8,"NM",2,0)
PSO52EX^^0^B13165848
"BLD",6234,"KRN",9.8,"NM",3,0)
PSODI^^0^B10666961
"BLD",6234,"KRN",9.8,"NM","B","PSO52EX",2)

"BLD",6234,"KRN",9.8,"NM","B","PSO59",1)

"BLD",6234,"KRN",9.8,"NM","B","PSODI",3)

"BLD",6234,"KRN",19,0)
19
"BLD",6234,"KRN",19.1,0)
19.1
"BLD",6234,"KRN",101,0)
101
"BLD",6234,"KRN",409.61,0)
409.61
"BLD",6234,"KRN",771,0)
771
"BLD",6234,"KRN",870,0)
870
"BLD",6234,"KRN",8989.51,0)
8989.51
"BLD",6234,"KRN",8989.52,0)
8989.52
"BLD",6234,"KRN",8994,0)
8994
"BLD",6234,"KRN","B",.4,.4)

"BLD",6234,"KRN","B",.401,.401)

"BLD",6234,"KRN","B",.402,.402)

"BLD",6234,"KRN","B",.403,.403)

"BLD",6234,"KRN","B",.5,.5)

"BLD",6234,"KRN","B",.84,.84)

"BLD",6234,"KRN","B",3.6,3.6)

"BLD",6234,"KRN","B",3.8,3.8)

"BLD",6234,"KRN","B",9.2,9.2)

"BLD",6234,"KRN","B",9.8,9.8)

"BLD",6234,"KRN","B",19,19)

"BLD",6234,"KRN","B",19.1,19.1)

"BLD",6234,"KRN","B",101,101)

"BLD",6234,"KRN","B",409.61,409.61)

"BLD",6234,"KRN","B",771,771)

"BLD",6234,"KRN","B",870,870)

"BLD",6234,"KRN","B",8989.51,8989.51)

"BLD",6234,"KRN","B",8989.52,8989.52)

"BLD",6234,"KRN","B",8994,8994)

"BLD",6234,"QUES",0)
^9.62^^
"BLD",6234,"REQB",0)
^9.611^5^5
"BLD",6234,"REQB",1,0)
PSO*7.0*213^2
"BLD",6234,"REQB",2,0)
PSO*7.0*229^2
"BLD",6234,"REQB",3,0)
PSO*7.0*252^2
"BLD",6234,"REQB",4,0)
PSO*7.0*254^2
"BLD",6234,"REQB",5,0)
PSO*7.0*245^2
"BLD",6234,"REQB","B","PSO*7.0*213",1)

"BLD",6234,"REQB","B","PSO*7.0*229",2)

"BLD",6234,"REQB","B","PSO*7.0*245",5)

"BLD",6234,"REQB","B","PSO*7.0*252",3)

"BLD",6234,"REQB","B","PSO*7.0*254",4)

"MBREQ")
0
"PKG",141,-1)
1^1
"PKG",141,0)
OUTPATIENT PHARMACY^PSO^OUTPATIENT LABELS, PROFILE, INVENTORY, PRESCRIPTIONS
"PKG",141,20,0)
^9.402P^^
"PKG",141,22,0)
^9.49I^1^1
"PKG",141,22,1,0)
7.0^2971216^2980917^11712
"PKG",141,22,1,"PAH",1,0)
267^3070516^10000000071
"PKG",141,22,1,"PAH",1,1,0)
^^57^57^3070516
"PKG",141,22,1,"PAH",1,1,1,0)
This patch enhances the functionality of PSODI, PSO59, and PSO52EX.
"PKG",141,22,1,"PAH",1,1,2,0)
 
"PKG",141,22,1,"PAH",1,1,3,0)
PSODI contains a new Application Programmer Interface (API) named GET1.
"PKG",141,22,1,"PAH",1,1,4,0)
This API will invoke the $$GET1^DIQ FileMan Database Server (DBS) call and
"PKG",141,22,1,"PAH",1,1,5,0)
is to be used as an extrinsic function.  GET1 has five parameters:
"PKG",141,22,1,"PAH",1,1,6,0)
 
"PKG",141,22,1,"PAH",1,1,7,0)
   PSOFILE: FILE OR SUBFILE NUMBER TO RETRIEVE DATA FROM [REQUIRED]
"PKG",141,22,1,"PAH",1,1,8,0)
   PSOIEN: IEN TO RETRIEVE DATA FROM [REQUIRED] 
"PKG",141,22,1,"PAH",1,1,9,0)
   PSOFIELD: FIELD TO RETRIEVE DATA FROM [REQUIRED] 
"PKG",141,22,1,"PAH",1,1,10,0)
   PSOFLAGS: CONTROLS THE PROCESSING OF DATA RETURNED [OPTIONAL] 
"PKG",141,22,1,"PAH",1,1,11,0)
   PSOWORD: RETURN OF WORD PROCESSING FIELDS [REQUIRED only with word 
"PKG",141,22,1,"PAH",1,1,12,0)
   processing fields]
"PKG",141,22,1,"PAH",1,1,13,0)
 
"PKG",141,22,1,"PAH",1,1,14,0)
If a file access error is encountered, the calling application will have
"PKG",141,22,1,"PAH",1,1,15,0)
"0^FILE ACCESS ERROR" returned.  If a FileMan error has occurred, the
"PKG",141,22,1,"PAH",1,1,16,0)
calling application will have "0^FILEMAN UNABLE TO PROCESS REQUEST"
"PKG",141,22,1,"PAH",1,1,17,0)
returned.  A successful data retrieval will return in the format "1^(FIELD
"PKG",141,22,1,"PAH",1,1,18,0)
DATA)".  When retrieving data from a word processing field, an array name
"PKG",141,22,1,"PAH",1,1,19,0)
must be passed in to PSOWORD.  Once the word processing field is returned,
"PKG",141,22,1,"PAH",1,1,20,0)
it will then populate an array as defined by PSOWORD and the calling
"PKG",141,22,1,"PAH",1,1,21,0)
application will have "1^(PSOWORD)" returned.  If there is no data in the
"PKG",141,22,1,"PAH",1,1,22,0)
Word Processing field, the calling application will have "1^" returned,
"PKG",141,22,1,"PAH",1,1,23,0)
and the array defined by PSOWORD will be empty.
"PKG",141,22,1,"PAH",1,1,24,0)
 
"PKG",141,22,1,"PAH",1,1,25,0)
Please see the VA FileMan Programmer Manual V. 22.0 for $$GET1^DIQ input
"PKG",141,22,1,"PAH",1,1,26,0)
definitions and DBIA 4858 for further description.
"PKG",141,22,1,"PAH",1,1,27,0)
 
"PKG",141,22,1,"PAH",1,1,28,0)
PSO59 retrieves data from the OUTPATIENT SITE file (#59) and has three 
"PKG",141,22,1,"PAH",1,1,29,0)
parameters: PSOIEN (optional), PSOTXT (optional), and LIST (required).  
"PKG",141,22,1,"PAH",1,1,30,0)
While PSOIEN and PSOTXT are both labeled as optional, PSO59 requires that 
"PKG",141,22,1,"PAH",1,1,31,0)
either parameter be passed in or no data will be returned.  PSOIEN is the 
"PKG",141,22,1,"PAH",1,1,32,0)
internal entry number (IEN) of a site, PSOTXT is a free text entry that 
"PKG",141,22,1,"PAH",1,1,33,0)
works as a search parameter, and LIST is the subscript name used in the 
"PKG",141,22,1,"PAH",1,1,34,0)
^TMP global. The new functionality now allows the user to pass in "??" to 
"PKG",141,22,1,"PAH",1,1,35,0)
retrieve all divisions in the file and subscripts them accordingly.  If 
"PKG",141,22,1,"PAH",1,1,36,0)
both an IEN and "??" are passed in, PSO59 will ignore the "??" and return
"PKG",141,22,1,"PAH",1,1,37,0)
data specific to the IEN.  
"PKG",141,22,1,"PAH",1,1,38,0)
 
"PKG",141,22,1,"PAH",1,1,39,0)
Please refer to DBIA 4827 for further description on PSO59.
"PKG",141,22,1,"PAH",1,1,40,0)
 
"PKG",141,22,1,"PAH",1,1,41,0)
PSO52EX contains a new Application Programmer Interface (API) named 
"PKG",141,22,1,"PAH",1,1,42,0)
ARXREF. This API is to be used as an extrinsic function call and requires
"PKG",141,22,1,"PAH",1,1,43,0)
three parameters: PSODATE, PSOIEN, and PSOFILL.  PSODATE is the RELEASED 
"PKG",141,22,1,"PAH",1,1,44,0)
DATE/TIME field (#31) and PSOIEN is the internal entry number from the 
"PKG",141,22,1,"PAH",1,1,45,0)
PRESCRIPTION file (#52).  PSOFILL is the fill number of prescription (0 
"PKG",141,22,1,"PAH",1,1,46,0)
for Original Fill, 1 for Refill #1, 2 for Refill #2, etc.).  The user can
"PKG",141,22,1,"PAH",1,1,47,0)
set a local variable equal to the return value of ARXREF. If the return
"PKG",141,22,1,"PAH",1,1,48,0)
value equals:
"PKG",141,22,1,"PAH",1,1,49,0)
 
"PKG",141,22,1,"PAH",1,1,50,0)
   0 (zero) = Data does not exist in the "AR" cross reference, indicating
"PKG",141,22,1,"PAH",1,1,51,0)
   the fill was not dispensed from the Consolidated Mail Outpatient
"PKG",141,22,1,"PAH",1,1,52,0)
   Pharmacy (CMOP).
"PKG",141,22,1,"PAH",1,1,53,0)
 
"PKG",141,22,1,"PAH",1,1,54,0)
   1 (one) = Data does exist in the "AR" cross reference, indicating the
"PKG",141,22,1,"PAH",1,1,55,0)
   fill was dispensed from the CMOP.
"PKG",141,22,1,"PAH",1,1,56,0)
 
"PKG",141,22,1,"PAH",1,1,57,0)
Please refer to DBIA 4902 for further description on PSO52EX.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","PSO52EX")
0^2^B13165848^B11974692
"RTN","PSO52EX",1,0)
PSO52EX ;BHAM ISC/AGV - API FOR ORIGINAL, REFILL, AND PARTIAL DATA ;07/13/06 10:30 am
"RTN","PSO52EX",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**252,267**;DEC 1997;Build 3
"RTN","PSO52EX",3,0)
 ;
"RTN","PSO52EX",4,0)
 ;REFERENCE TO ^DPT SUPPORTED BY DBIA 10035
"RTN","PSO52EX",5,0)
 ;REFERENCE TO ^PSDRUG SUPPORTED BY DBIA 221
"RTN","PSO52EX",6,0)
 ;
"RTN","PSO52EX",7,0)
EXTRACT(SDATE,EDATE,LIST) ;MAIN DRIVER
"RTN","PSO52EX",8,0)
 ;SDATE: START DATE OF RECORD RETRIEVAL [REQUIRED]
"RTN","PSO52EX",9,0)
 ;EDATE: END DATE OF RECORD RETRIEVAL [OPTIONAL]
"RTN","PSO52EX",10,0)
 ;LIST: SUBSCRIPT NAME USED IN ^TMP GLOBAL [REQUIRED]
"RTN","PSO52EX",11,0)
 ;
"RTN","PSO52EX",12,0)
 Q:$G(LIST)=""
"RTN","PSO52EX",13,0)
 K ^TMP($J,LIST)
"RTN","PSO52EX",14,0)
 I '$G(SDATE) S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO52EX",15,0)
 I '$G(EDATE) S EDATE=DT
"RTN","PSO52EX",16,0)
 D SEND
"RTN","PSO52EX",17,0)
 Q
"RTN","PSO52EX",18,0)
 ;       
"RTN","PSO52EX",19,0)
SEND ;SENDS CONTROL TO $$CROSS.  RECEIVES AND TRACKS COUNTS.
"RTN","PSO52EX",20,0)
 N ALCOUNT S ALCOUNT=$$CROSS("AL")
"RTN","PSO52EX",21,0)
 N AMCOUNT S AMCOUNT=$$CROSS("AM")
"RTN","PSO52EX",22,0)
 N TCOUNT S TCOUNT=ALCOUNT+AMCOUNT
"RTN","PSO52EX",23,0)
 IF TCOUNT>0 S ^TMP($J,LIST,0)=TCOUNT
"RTN","PSO52EX",24,0)
 ELSE  S ^TMP($J,LIST,0)="-1^NO DATA FOUND"
"RTN","PSO52EX",25,0)
 Q
"RTN","PSO52EX",26,0)
 ;
"RTN","PSO52EX",27,0)
CROSS(REF) ;SETS UP ^TMP GLOBAL.  SENDS FOR ORIGINAL, REFILL AND/OR PARTIAL FILL DATA
"RTN","PSO52EX",28,0)
 N PSOIEN,PSOFILL,PSOCOUNT,DATE,END
"RTN","PSO52EX",29,0)
 S DATE=SDATE-.001,END=(EDATE+1),PSOIEN="",PSOFILL="",PSOCOUNT=0
"RTN","PSO52EX",30,0)
 F  S DATE=$O(^PSRX(REF,DATE)) Q:'DATE!(END'>DATE)  D
"RTN","PSO52EX",31,0)
 .F  S PSOIEN=$O(^PSRX(REF,DATE,PSOIEN)) Q:'PSOIEN  D
"RTN","PSO52EX",32,0)
 ..F  S PSOFILL=$O(^PSRX(REF,DATE,PSOIEN,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSO52EX",33,0)
 ...S ^TMP($J,LIST,REF,DATE,PSOIEN,PSOFILL)=""
"RTN","PSO52EX",34,0)
 ...I REF="AL",PSOFILL=0 S PSOCOUNT=PSOCOUNT+1 D ORIG(PSOIEN) Q
"RTN","PSO52EX",35,0)
 ...I REF="AL",PSOFILL>0 S PSOCOUNT=PSOCOUNT+1 D REFILL(PSOIEN,PSOFILL) Q
"RTN","PSO52EX",36,0)
 ...I REF="AM" S PSOCOUNT=PSOCOUNT+1 D PART(PSOIEN,PSOFILL) Q
"RTN","PSO52EX",37,0)
 Q PSOCOUNT
"RTN","PSO52EX",38,0)
 ;
"RTN","PSO52EX",39,0)
REFILL(IEN,FILL) ;REFILL
"RTN","PSO52EX",40,0)
 D:'$D(^TMP($J,LIST,IEN,.01)) ORIG(IEN)
"RTN","PSO52EX",41,0)
 N PSORFL S PSORFL=$G(^PSRX(IEN,1,FILL,0))
"RTN","PSO52EX",42,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,.01)=$P(PSORFL,U,1)_"^"_$$FMTE^XLFDT($P(PSORFL,U,1),1)
"RTN","PSO52EX",43,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1)=$P(PSORFL,U,4)
"RTN","PSO52EX",44,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1.1)=$P(PSORFL,U,10)
"RTN","PSO52EX",45,0)
 S ^TMP($J,LIST,IEN,"RF",FILL,1.2)=$P(PSORFL,U,11)
"RTN","PSO52EX",46,0)
 S ^TMP($J,LIST,IEN,"RF",0)=$G(^TMP($J,LIST,IEN,"RF",0))+1
"RTN","PSO52EX",47,0)
 Q
"RTN","PSO52EX",48,0)
 ;
"RTN","PSO52EX",49,0)
PART(IEN,FILL) ;PARTIAL FILL
"RTN","PSO52EX",50,0)
 D:'$D(^TMP($J,LIST,IEN,.01)) ORIG(IEN)
"RTN","PSO52EX",51,0)
 N PSOPART S PSOPART=$G(^PSRX(IEN,"P",FILL,0))
"RTN","PSO52EX",52,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.01)=$P(PSOPART,U,1)_"^"_$$FMTE^XLFDT($P(PSOPART,U,1),1)
"RTN","PSO52EX",53,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.04)=$P(PSOPART,U,4)
"RTN","PSO52EX",54,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.041)=$P(PSOPART,U,10)
"RTN","PSO52EX",55,0)
 S ^TMP($J,LIST,IEN,"P",FILL,.042)=$P(PSOPART,U,11)
"RTN","PSO52EX",56,0)
 S ^TMP($J,LIST,IEN,"P",0)=$G(^TMP($J,LIST,IEN,"P",0))+1
"RTN","PSO52EX",57,0)
 Q
"RTN","PSO52EX",58,0)
 ;
"RTN","PSO52EX",59,0)
ORIG(IEN) ;ORIGINAL FILL
"RTN","PSO52EX",60,0)
 N PSOORIG S PSOORIG=$G(^PSRX(IEN,0))
"RTN","PSO52EX",61,0)
 S ^TMP($J,LIST,IEN,.01)=$P(PSOORIG,U,1)
"RTN","PSO52EX",62,0)
 S ^TMP($J,LIST,IEN,2)=$S($P(PSOORIG,U,2)>0:$P(PSOORIG,U,2)_"^"_$P($G(^DPT($P($G(PSOORIG),U,2),0)),U,1),1:"")
"RTN","PSO52EX",63,0)
 S ^TMP($J,LIST,IEN,6)=$S($P(PSOORIG,U,6)>0:$P(PSOORIG,U,6)_"^"_$P($G(^PSDRUG($P($G(PSOORIG),U,6),0)),U,1),1:"")
"RTN","PSO52EX",64,0)
 S ^TMP($J,LIST,IEN,7)=$P(PSOORIG,U,7)
"RTN","PSO52EX",65,0)
 S ^TMP($J,LIST,IEN,8)=$P(PSOORIG,U,8)
"RTN","PSO52EX",66,0)
 S ^TMP($J,LIST,IEN,17)=$P(PSOORIG,U,17)
"RTN","PSO52EX",67,0)
 Q
"RTN","PSO52EX",68,0)
 ;
"RTN","PSO52EX",69,0)
REF(SDATE,EDATE,LIST) ; "AD" XREF RETRIEVAL
"RTN","PSO52EX",70,0)
 ;SDATE: START DATE OF "AD" XREF RETRIEVAL [REQUIRED]
"RTN","PSO52EX",71,0)
 ;EDATE: END DATE OF "AD" XREF RETRIEVAL [OPTIONAL]
"RTN","PSO52EX",72,0)
 ;LIST: SUBSCRIPT NAME USED IN ^TMP GLOBAL [REQUIRED]
"RTN","PSO52EX",73,0)
 ;
"RTN","PSO52EX",74,0)
 Q:$G(LIST)=""
"RTN","PSO52EX",75,0)
 K ^TMP($J,LIST)
"RTN","PSO52EX",76,0)
 I '$G(SDATE) S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO52EX",77,0)
 I '$G(EDATE) S EDATE=SDATE
"RTN","PSO52EX",78,0)
 N PSORXN,PSOFILL
"RTN","PSO52EX",79,0)
 S DATE=SDATE-.001,END=EDATE+1,PSORXN="",PSOFILL=""
"RTN","PSO52EX",80,0)
 F  S DATE=$O(^PSRX("AD",DATE)) Q:'DATE!(END'>DATE)  D
"RTN","PSO52EX",81,0)
 .F  S PSORXN=$O(^PSRX("AD",DATE,PSORXN)) Q:'PSORXN  D
"RTN","PSO52EX",82,0)
 ..F  S PSOFILL=$O(^PSRX("AD",DATE,PSORXN,PSOFILL)) Q:PSOFILL=""  D
"RTN","PSO52EX",83,0)
 ...S ^TMP($J,LIST,"AD",DATE,PSORXN,PSOFILL)=""
"RTN","PSO52EX",84,0)
 Q
"RTN","PSO52EX",85,0)
 ;
"RTN","PSO52EX",86,0)
ARXREF(PSODATE,PSOIEN,PSOFILL) ; SUSPENSE STATUS CHECK
"RTN","PSO52EX",87,0)
 ;PSODATE: RELEASED DATE/TIME
"RTN","PSO52EX",88,0)
 ;PSOIEN: INTERNAL ENTRY NUMBER
"RTN","PSO52EX",89,0)
 ;PSOFILL: FILL NUMBER OF PRESCRIPTION
"RTN","PSO52EX",90,0)
 ;
"RTN","PSO52EX",91,0)
 I $G(PSODATE)=""!($G(PSOIEN)="")!($G(PSOFILL)="") Q 0
"RTN","PSO52EX",92,0)
 N RESULT S RESULT=0
"RTN","PSO52EX",93,0)
 I $D(^PSRX("AR",PSODATE,PSOIEN,PSOFILL)) S RESULT=1
"RTN","PSO52EX",94,0)
 Q RESULT
"RTN","PSO59")
0^1^B8608274^B3468336
"RTN","PSO59",1,0)
PSO59 ;BHM/DB - Outpatient Site File API ;1 JUL 05
"RTN","PSO59",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**213,229,254,267**;DEC 1997;Build 3
"RTN","PSO59",3,0)
PSS(PSOIEN,PSOTXT,LIST) ;
"RTN","PSO59",4,0)
 N DA,DIC,DR,X,I,DIQ
"RTN","PSO59",5,0)
 I $G(LIST)'="" K ^TMP($J,LIST)
"RTN","PSO59",6,0)
 I '$G(PSOIEN),$G(PSOTXT)="",$G(LIST)="" Q
"RTN","PSO59",7,0)
 I '$G(PSOIEN),$G(PSOTXT)="",$G(LIST)'="" S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO59",8,0)
 I $G(LIST)="" Q
"RTN","PSO59",9,0)
 I $G(PSOIEN),$G(PSOTXT)="",$G(LIST)'="" D SINGLE Q 
"RTN","PSO59",10,0)
 I $G(PSOIEN),$G(PSOTXT)="??",$G(LIST)'="" S PSOTXT="" D SINGLE Q
"RTN","PSO59",11,0)
 I '$G(PSOIEN),$G(PSOTXT)="??" D ALLDIV Q
"RTN","PSO59",12,0)
 Q
"RTN","PSO59",13,0)
 ;
"RTN","PSO59",14,0)
SINGLE ;RETURNS SINGLE DIVISION
"RTN","PSO59",15,0)
 K ^TMP($J,LIST) S:$G(PSOIEN)>0 ^TMP($J,LIST,PSOIEN,0)=0
"RTN","PSO59",16,0)
 I $G(PSOIEN)>0,'$D(^PS(59,PSOIEN,0)) S ^TMP($J,LIST,PSOIEN,0)="-1^NO DATA FOUND" Q
"RTN","PSO59",17,0)
 I $G(PSOTXT)'="",'$D(^PS(59,"B",PSOTXT)),$G(PSOIEN)>0 S ^TMP($J,LIST,PSOIEN,0)="-1^NO DATA FOUND" Q
"RTN","PSO59",18,0)
 S DA=$S($G(PSOIEN)]"":PSOIEN,1:$O(^PS(59,"B",PSOTXT,0)))
"RTN","PSO59",19,0)
 I $G(DA)'>0 S ^TMP($J,LIST,0)="-1^NO DATA FOUND" Q
"RTN","PSO59",20,0)
 K ^UTILITY("DIQ1",$J),DIC S DIC=59,DR=".01;.02;.05;.06;.07;.08;1;100;1003",DIQ(0)="IE" D EN^DIQ1
"RTN","PSO59",21,0)
 I '$D(^UTILITY("DIQ1",$J)) S ^TMP($J,LIST,PSOIEN,0)="-1^NO DATA FOUND" Q
"RTN","PSO59",22,0)
 F X=.01,.02,.05,.06,.07,.08,1,100,1003 D
"RTN","PSO59",23,0)
 .I $G(^UTILITY("DIQ1",$J,59,DA,X,"I"))'=$G(^UTILITY("DIQ1",$J,59,DA,X,"E")) S ^TMP($J,LIST,DA,X)=$G(^UTILITY("DIQ1",$J,59,DA,X,"I"))_"^"_$G(^UTILITY("DIQ1",$J,59,DA,X,"E")) Q
"RTN","PSO59",24,0)
 .S ^TMP($J,LIST,DA,X)=$G(^UTILITY("DIQ1",$J,59,DA,X,"I"))
"RTN","PSO59",25,0)
 S PSOTXT=$G(^UTILITY("DIQ1",$J,59,DA,.01,"E")) S ^TMP($J,LIST,"B",PSOTXT,DA)=""
"RTN","PSO59",26,0)
 S ^TMP($J,LIST,DA,0)=$G(^TMP($J,LIST,DA,0))+1
"RTN","PSO59",27,0)
 K DA,DIC,DIQ,DR,PSOIEN,PSOTXT
"RTN","PSO59",28,0)
 Q
"RTN","PSO59",29,0)
 ;
"RTN","PSO59",30,0)
ALLDIV ; RETURNS ALL DIVISIONS
"RTN","PSO59",31,0)
 N IEN,SITE S IEN=0,SITE=""
"RTN","PSO59",32,0)
 F  S SITE=$O(^PS(59,"B",SITE)) Q:SITE=""  D
"RTN","PSO59",33,0)
 .S ^TMP($J,LIST,0)=$G(^TMP($J,LIST,0))+1
"RTN","PSO59",34,0)
 .F  S IEN=$O(^PS(59,"B",SITE,IEN)) Q:'IEN  D
"RTN","PSO59",35,0)
 ..N PSODIV S PSODIV=$G(^PS(59,IEN,0))
"RTN","PSO59",36,0)
 ..S ^TMP($J,LIST,"B",SITE,IEN)=""
"RTN","PSO59",37,0)
 ..S ^TMP($J,LIST,IEN,.01)=$P($G(PSODIV),U,1)
"RTN","PSO59",38,0)
 ..S ^TMP($J,LIST,IEN,.02)=$P($G(PSODIV),U,2)
"RTN","PSO59",39,0)
 ..S ^TMP($J,LIST,IEN,.05)=$P($G(PSODIV),U,5)
"RTN","PSO59",40,0)
 ..S ^TMP($J,LIST,IEN,.06)=$P($G(PSODIV),U,6)
"RTN","PSO59",41,0)
 ..S ^TMP($J,LIST,IEN,.07)=$P($G(PSODIV),U,7)
"RTN","PSO59",42,0)
 ..S ^TMP($J,LIST,IEN,.08)=$S($P($G(PSODIV),U,8)>0:$P($G(PSODIV),U,8)_"^"_$P($G(^DIC(5,$P($G(PSODIV),U,8),0)),U,1),1:"")
"RTN","PSO59",43,0)
 ..S ^TMP($J,LIST,IEN,1)=$P($G(^PS(59,IEN,"SAND")),U,1)
"RTN","PSO59",44,0)
 ..S ^TMP($J,LIST,IEN,100)=$S($G(^PS(59,IEN,"INI"))>0:$G(^PS(59,IEN,"INI"))_"^"_$P($G(^DIC(4,$G(^PS(59,IEN,"INI")),0)),U,1),1:"")
"RTN","PSO59",45,0)
 ..S ^TMP($J,LIST,IEN,1003)=$S($G(^PS(59,1,"IB"))>0:$G(^PS(59,1,"IB"))_"^"_$P($G(^DIC(49,$G(^PS(59,1,"IB")),0)),U,1),1:"")
"RTN","PSO59",46,0)
 Q
"RTN","PSODI")
0^3^B10666961^B5060362
"RTN","PSODI",1,0)
PSODI ;BHM/AGV - API FOR FILEMAN CALLS ;04/19/06 10:30 am
"RTN","PSODI",2,0)
 ;;7.0;OUTPATIENT PHARMACY;**245,267**;DEC 1997;Build 3
"RTN","PSODI",3,0)
 ;
"RTN","PSODI",4,0)
DIQ(PSOFILE,DIC,DR,DA,DIQ) ;PROCESS FIELDS
"RTN","PSODI",5,0)
 ;PSOFILE: FILE NUMBER USED FOR VALIDATION OF ACCESS
"RTN","PSODI",6,0)
 ;DIC,DR,DA,DIQ: SEE VA FILEMAN PROGRAMMER MANUAL FOR EN^DIQ1 INPUT DEFINITIONS
"RTN","PSODI",7,0)
 ;
"RTN","PSODI",8,0)
 S PSODIY=""
"RTN","PSODI",9,0)
 I +$G(PSOFILE)'>0 S PSODIY=-1 Q
"RTN","PSODI",10,0)
 N PSOTEST S PSOTEST=$$VALID1(PSOFILE,DIC)
"RTN","PSODI",11,0)
 I PSOTEST'>0 S PSODIY=-1 Q
"RTN","PSODI",12,0)
 D EN^DIQ1
"RTN","PSODI",13,0)
 Q
"RTN","PSODI",14,0)
 ;
"RTN","PSODI",15,0)
GET1(PSOFILE,PSOIEN,PSOFIELD,PSOFLAGS,PSOWORD) ;RETRIEVE FIELD DATA
"RTN","PSODI",16,0)
 ;PSOFILE: FILE OR SUBFILE NUMBER
"RTN","PSODI",17,0)
 ;PSOIEN: IEN FOR DATA RETURN
"RTN","PSODI",18,0)
 ;PSOFIELD: FIELD FOR DATA RETURN
"RTN","PSODI",19,0)
 ;FLAGS: CONTROLS THE PROCESSING OF DATA RETURNED
"RTN","PSODI",20,0)
 ;PSOWORD: REQUIRED FOR RETURN OF WORD PROCESSING FIELDS
"RTN","PSODI",21,0)
 ;
"RTN","PSODI",22,0)
 N PSORET,DIERR,DIRUT,DIROUT,DUOUT,DTOUT,DIHELP,DIMSG
"RTN","PSODI",23,0)
 I $G(PSOFILE)="" S PSORET="0^FILEMAN UNABLE TO PROCESS REQUEST" Q PSORET
"RTN","PSODI",24,0)
 I $G(PSOIEN)="" S PSOIEN=""
"RTN","PSODI",25,0)
 I $G(PSOFIELD)="" S PSOFIELD=""
"RTN","PSODI",26,0)
 I $G(PSOFLAGS)="" S PSOFLAGS=""
"RTN","PSODI",27,0)
 I $G(PSOWORD)="" S PSOWORD=""
"RTN","PSODI",28,0)
 N PSOTEST S PSOTEST=$$VALID3(PSOFILE)
"RTN","PSODI",29,0)
 I PSOTEST'>0 S PSORET="0^FILE ACCESS ERROR" Q PSORET
"RTN","PSODI",30,0)
 S PSORET=$$GET1^DIQ(PSOFILE,PSOIEN,PSOFIELD,PSOFLAGS,PSOWORD,"DIERR")
"RTN","PSODI",31,0)
 I $D(DIERR) S PSORET="0^FILEMAN UNABLE TO PROCESS REQUEST" Q PSORET
"RTN","PSODI",32,0)
 Q "1^"_PSORET
"RTN","PSODI",33,0)
 ;
"RTN","PSODI",34,0)
STATUS(PSOFILE,PSOFIELD,LIST) ;PROCESS FIELDS
"RTN","PSODI",35,0)
 ;PSOFILE: FILE NUMBER USED FOR VALIDATION OF ACCESS
"RTN","PSODI",36,0)
 ;PSOFIELD: FIELD NUMBER FROM FILE
"RTN","PSODI",37,0)
 ;LIST: SUBSCRIPT USED IN LOCAL ARRAY
"RTN","PSODI",38,0)
 ;
"RTN","PSODI",39,0)
 Q:'$G(PSOFILE)  Q:'$G(PSOFIELD)  Q:$G(LIST)=""
"RTN","PSODI",40,0)
 S PSODIY=""
"RTN","PSODI",41,0)
 N PSOTEST S PSOTEST=$$VALID2(PSOFILE,PSOFIELD)
"RTN","PSODI",42,0)
 I PSOTEST'>0 S PSODIY=-1 Q
"RTN","PSODI",43,0)
 D FIELD^DID(PSOFILE,PSOFIELD,"","POINTER",LIST)
"RTN","PSODI",44,0)
 Q
"RTN","PSODI",45,0)
 ;
"RTN","PSODI",46,0)
DIC(PSOFILE,DIC,X) ;
"RTN","PSODI",47,0)
 ;PSOFILE: FILE NUMBER USED FOR VALIDATION OF ACCESS
"RTN","PSODI",48,0)
 ;DIC,X: SEE VA FILEMAN PROGRAMMER MANUAL FOR ^DIC INPUT DEFINITIONS
"RTN","PSODI",49,0)
 ;
"RTN","PSODI",50,0)
 S PSODIY=""
"RTN","PSODI",51,0)
 I +$G(PSOFILE)'>0 S PSODIY=-1 Q
"RTN","PSODI",52,0)
 N PSOTEST S PSOTEST=$$VALID1(PSOFILE,DIC)
"RTN","PSODI",53,0)
 I PSOTEST'>0 S PSODIY=-1 Q
"RTN","PSODI",54,0)
 I $G(DIC(0))'="" S DIC(0)=$TR(DIC(0),"L","") I $G(DIC(0))="" S PSODIY=-1 Q
"RTN","PSODI",55,0)
 D ^DIC
"RTN","PSODI",56,0)
 Q
"RTN","PSODI",57,0)
 ;
"RTN","PSODI",58,0)
VALID1(PSTFILE,PSTDIC) ;TEST FOR VALID DATA INPUT INTO PSOFILE AND DIC
"RTN","PSODI",59,0)
 N PSVLOOP,PSVTEST,PSVALID S PSVALID=-1
"RTN","PSODI",60,0)
 F PSVLOOP=1:1 S PSVTEST=$P($T(FILE1+PSVLOOP),";;",2)_";;"_$P($T(FILE1+PSVLOOP),";;",3) Q:$G(PSVTEST)'>0!(PSVALID=1)  D
"RTN","PSODI",61,0)
 .I PSTFILE=$P(PSVTEST,";;",1) D  Q
"RTN","PSODI",62,0)
 ..I '$G(PSTDIC) D  Q
"RTN","PSODI",63,0)
 ...I PSTDIC=$P(PSVTEST,";;",2) S PSVALID=1
"RTN","PSODI",64,0)
 ..I PSTDIC=$P(PSVTEST,";;",1) S PSVALID=1
"RTN","PSODI",65,0)
 Q PSVALID
"RTN","PSODI",66,0)
 ;
"RTN","PSODI",67,0)
VALID2(PSTFILE,PSTFIELD)  ;TEST FOR VALID DATA INPUT INTO PSOFILE AND PSOFIELD
"RTN","PSODI",68,0)
 N PSVLOOP,PSVTEST,PSVALID S PSVALID=-1
"RTN","PSODI",69,0)
 F PSVLOOP=1:1 S PSVTEST=$P($T(FILE2+PSVLOOP),";;",2)_";;"_$P($T(FILE2+PSVLOOP),";;",3) Q:$G(PSVTEST)'>0!(PSVALID=1)  D
"RTN","PSODI",70,0)
 .I PSTFILE=$P(PSVTEST,";;",1) D  Q
"RTN","PSODI",71,0)
 ..I PSTFIELD=$P(PSVTEST,";;",2) S PSVALID=1
"RTN","PSODI",72,0)
 Q PSVALID
"RTN","PSODI",73,0)
 ;
"RTN","PSODI",74,0)
VALID3(PSTFILE)  ;TEST FOR VALID DATA INPUT INTO PSOFILE
"RTN","PSODI",75,0)
 N PSVLOOP,PSVTEST,PSVALID S PSVALID=-1
"RTN","PSODI",76,0)
 F PSVLOOP=1:1 S PSVTEST=$P($T(FILE3+PSVLOOP),";;",2) Q:$G(PSVTEST)'>0!(PSVALID=1)  D
"RTN","PSODI",77,0)
 .I PSTFILE=PSVTEST S PSVALID=1
"RTN","PSODI",78,0)
 Q PSVALID
"RTN","PSODI",79,0)
 ;
"RTN","PSODI",80,0)
FILE1 ;ACCESS FILE LIST FOR DIQ AND DIC
"RTN","PSODI",81,0)
 ;;52;;^PSRX(
"RTN","PSODI",82,0)
 ;;59;;^PS(59,
"RTN","PSODI",83,0)
 Q
"RTN","PSODI",84,0)
 ;
"RTN","PSODI",85,0)
FILE2 ;ACCESS FILE LIST FOR STATUS
"RTN","PSODI",86,0)
 ;;52;;100
"RTN","PSODI",87,0)
 Q
"RTN","PSODI",88,0)
 ;
"RTN","PSODI",89,0)
FILE3 ;ACCESS FILE LIST FOR GET1
"RTN","PSODI",90,0)
 ;;52
"RTN","PSODI",91,0)
 ;;52.04
"RTN","PSODI",92,0)
 ;;52.032
"RTN","PSODI",93,0)
 ;;52.03
"RTN","PSODI",94,0)
 ;;52.037
"RTN","PSODI",95,0)
 ;;52.038
"RTN","PSODI",96,0)
 ;;52.3
"RTN","PSODI",97,0)
 ;;52.34
"RTN","PSODI",98,0)
 ;;52.1
"RTN","PSODI",99,0)
 ;;52.25
"RTN","PSODI",100,0)
 ;;52.2
"RTN","PSODI",101,0)
 ;;52.0107
"RTN","PSODI",102,0)
 ;;52.0113
"RTN","PSODI",103,0)
 ;;52.01
"RTN","PSODI",104,0)
 ;;52.0401
"RTN","PSODI",105,0)
 ;;52.052311
"RTN","PSODI",106,0)
 Q
"VER")
8.0^22.0
"BLD",6234,6)
^236
**END**
**END**
