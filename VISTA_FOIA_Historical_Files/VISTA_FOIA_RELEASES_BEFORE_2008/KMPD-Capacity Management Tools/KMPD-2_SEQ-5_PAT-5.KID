Released KMPD*2*5 SEQ #5
Extracted from mail message
**KIDS**:KMPD*2.0*5^

**INSTALL NAME**
KMPD*2.0*5
"BLD",6733,0)
KMPD*2.0*5^CAPACITY MANAGEMENT TOOLS^0^3060420^y
"BLD",6733,4,0)
^9.64PA^8973^1
"BLD",6733,4,8973,0)
8973
"BLD",6733,4,8973,222)
y^y^f^^^^n
"BLD",6733,4,"B",8973,8973)

"BLD",6733,6)
11^
"BLD",6733,"INIT")
EN^KMPDPOST
"BLD",6733,"KRN",0)
^9.67PA^8989.52^19
"BLD",6733,"KRN",.4,0)
.4
"BLD",6733,"KRN",.401,0)
.401
"BLD",6733,"KRN",.402,0)
.402
"BLD",6733,"KRN",.403,0)
.403
"BLD",6733,"KRN",.403,"NM",0)
^9.68A^1^1
"BLD",6733,"KRN",.403,"NM",1,0)
KMPD PARAMETERS EDIT    FILE #8973^8973^0
"BLD",6733,"KRN",.403,"NM","B","KMPD PARAMETERS EDIT    FILE #8973",1)

"BLD",6733,"KRN",.5,0)
.5
"BLD",6733,"KRN",.84,0)
.84
"BLD",6733,"KRN",3.6,0)
3.6
"BLD",6733,"KRN",3.6,"NM",0)
^9.68A^1^1
"BLD",6733,"KRN",3.6,"NM",1,0)
KMPD ECHO^^0
"BLD",6733,"KRN",3.6,"NM","B","KMPD ECHO",1)

"BLD",6733,"KRN",3.8,0)
3.8
"BLD",6733,"KRN",9.2,0)
9.2
"BLD",6733,"KRN",9.8,0)
9.8
"BLD",6733,"KRN",9.8,"NM",0)
^9.68A^5^5
"BLD",6733,"KRN",9.8,"NM",1,0)
KMPDECH^^0^B1037928
"BLD",6733,"KRN",9.8,"NM",2,0)
KMPDUTL^^0^B12113278
"BLD",6733,"KRN",9.8,"NM",3,0)
KMPDTU01^^0^B21700186
"BLD",6733,"KRN",9.8,"NM",4,0)
KMPDPOST^^0^B2606774
"BLD",6733,"KRN",9.8,"NM",5,0)
KMPDUTL7^^0^B10006436
"BLD",6733,"KRN",9.8,"NM","B","KMPDECH",1)

"BLD",6733,"KRN",9.8,"NM","B","KMPDPOST",4)

"BLD",6733,"KRN",9.8,"NM","B","KMPDTU01",3)

"BLD",6733,"KRN",9.8,"NM","B","KMPDUTL",2)

"BLD",6733,"KRN",9.8,"NM","B","KMPDUTL7",5)

"BLD",6733,"KRN",19,0)
19
"BLD",6733,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",6733,"KRN",19,"NM",1,0)
KMPD ECHO^^0
"BLD",6733,"KRN",19,"NM","B","KMPD ECHO",1)

"BLD",6733,"KRN",19.1,0)
19.1
"BLD",6733,"KRN",101,0)
101
"BLD",6733,"KRN",409.61,0)
409.61
"BLD",6733,"KRN",771,0)
771
"BLD",6733,"KRN",870,0)
870
"BLD",6733,"KRN",8989.51,0)
8989.51
"BLD",6733,"KRN",8989.52,0)
8989.52
"BLD",6733,"KRN",8994,0)
8994
"BLD",6733,"KRN","B",.4,.4)

"BLD",6733,"KRN","B",.401,.401)

"BLD",6733,"KRN","B",.402,.402)

"BLD",6733,"KRN","B",.403,.403)

"BLD",6733,"KRN","B",.5,.5)

"BLD",6733,"KRN","B",.84,.84)

"BLD",6733,"KRN","B",3.6,3.6)

"BLD",6733,"KRN","B",3.8,3.8)

"BLD",6733,"KRN","B",9.2,9.2)

"BLD",6733,"KRN","B",9.8,9.8)

"BLD",6733,"KRN","B",19,19)

"BLD",6733,"KRN","B",19.1,19.1)

"BLD",6733,"KRN","B",101,101)

"BLD",6733,"KRN","B",409.61,409.61)

"BLD",6733,"KRN","B",771,771)

"BLD",6733,"KRN","B",870,870)

"BLD",6733,"KRN","B",8989.51,8989.51)

"BLD",6733,"KRN","B",8989.52,8989.52)

"BLD",6733,"KRN","B",8994,8994)

"BLD",6733,"QUES",0)
^9.62^^
"BLD",6733,"REQB",0)
^9.611^1^1
"BLD",6733,"REQB",1,0)
KMPD*2.0*4^1
"BLD",6733,"REQB","B","KMPD*2.0*4",1)

"FIA",8973)
CP PARAMETERS
"FIA",8973,0)
^KMPD(8973,
"FIA",8973,0,0)
8973P
"FIA",8973,0,1)
y^y^f^^^^n
"FIA",8973,0,10)

"FIA",8973,0,11)

"FIA",8973,0,"RLRO")

"FIA",8973,0,"VR")
2.0^KMPD
"FIA",8973,8973)
0
"FIA",8973,8973.01)
0
"FIA",8973,8973.02)
0
"FIA",8973,8973.03)
0
"FIA",8973,8973.04)
0
"FIA",8973,8973.05)
0
"FIA",8973,8973.201)
0
"INIT")
EN^KMPDPOST
"KRN",.403,147,-1)
0^1
"KRN",.403,147,0)
KMPD PARAMETERS EDIT^@^@^^3031203.0915^^^8973^0^0^1
"KRN",.403,147,40,0)
^.4031I^1^1
"KRN",.403,147,40,1,0)
1^^1,1
"KRN",.403,147,40,1,1)
Page 1
"KRN",.403,147,40,1,40,0)
^.4032IP^486^2
"KRN",.403,147,40,1,40,485,0)
KMPD PARAMETERS HDR^1^1,1^e
"KRN",.403,147,40,1,40,486,0)
KMPD PARAMETERS PAGE 1^2^4,1^e
"KRN",.404,485,0)
KMPD PARAMETERS HDR^8973^
"KRN",.404,485,40,0)
^.4044I^3^3
"KRN",.404,485,40,1,0)
1^CM Tools Parameters Edit^1
"KRN",.404,485,40,1,2)
^^1,26
"KRN",.404,485,40,2,0)
2^Page 1^1
"KRN",.404,485,40,2,2)
^^1,72
"KRN",.404,485,40,3,0)
3^!M^1
"KRN",.404,485,40,3,.1)
S Y=$P($G(^DIC(4,+$P($G(^KMPD(8973,1,0)),U),0)),U),Y=$P($G(DDGLVID),$G(DDGLDEL))_$J(" ",(30-$L(Y))\2)_Y_$P($G(DDGLVID),$G(DDGLDEL),3)
"KRN",.404,485,40,3,2)
^^2,24
"KRN",.404,486,0)
KMPD PARAMETERS PAGE 1^8973
"KRN",.404,486,40,0)
^.4044I^15^15
"KRN",.404,486,40,1,0)
1^Current Version^3
"KRN",.404,486,40,1,1)
.02
"KRN",.404,486,40,1,2)
1,18^13^1,1
"KRN",.404,486,40,1,4)
^^^1
"KRN",.404,486,40,2,0)
2^Version Installed^3
"KRN",.404,486,40,2,1)
.03
"KRN",.404,486,40,2,2)
1,53^17^1,34
"KRN",.404,486,40,2,4)
^^^1
"KRN",.404,486,40,3,0)
3^Current Patch^3
"KRN",.404,486,40,3,1)
.04
"KRN",.404,486,40,3,2)
2,18^13^2,3
"KRN",.404,486,40,3,4)
^^^1
"KRN",.404,486,40,4,0)
4^Patch Installed^3
"KRN",.404,486,40,4,1)
.05
"KRN",.404,486,40,4,2)
2,53^17^2,36
"KRN",.404,486,40,4,4)
^^^1
"KRN",.404,486,40,5,0)
5^Purge HL7 Data After^3
"KRN",.404,486,40,5,1)
3.11
"KRN",.404,486,40,5,2)
5,26^3^5,4
"KRN",.404,486,40,5,11)
D HLP^DDSUTL($G(^DD(8973,3.11,3)))
"KRN",.404,486,40,6,0)
6^Weeks^1
"KRN",.404,486,40,6,2)
^^5,30
"KRN",.404,486,40,7,0)
7^Purge Timing Data after^3
"KRN",.404,486,40,7,1)
4.11
"KRN",.404,486,40,7,2)
6,26^3^6,1
"KRN",.404,486,40,7,11)
D HLP^DDSUTL($G(^DD(8973,4.11,3)))
"KRN",.404,486,40,8,0)
8^Weeks^1
"KRN",.404,486,40,8,2)
^^6,30
"KRN",.404,486,40,9,0)
9^Purge RUM Data After^3
"KRN",.404,486,40,9,1)
2.11
"KRN",.404,486,40,9,2)
7,26^3^7,4
"KRN",.404,486,40,9,11)
D HLP^DDSUTL($G(^DD(8973,2.11,3)))
"KRN",.404,486,40,10,0)
10^Weeks^1
"KRN",.404,486,40,10,2)
^^7,30
"KRN",.404,486,40,11,0)
11^Timing Monitor Update Rate - Min^3
"KRN",.404,486,40,11,1)
19.01
"KRN",.404,486,40,11,2)
5,72^2^5,38
"KRN",.404,486,40,11,11)
D HLP^DDSUTL($G(^DD(8973,19.01,3)))
"KRN",.404,486,40,12,0)
12^Timing Monitor Alert - Seconds^3
"KRN",.404,486,40,12,1)
19.02
"KRN",.404,486,40,12,2)
6,72^3^6,40
"KRN",.404,486,40,12,11)
D HLP^DDSUTL($G(^DD(8973,19.02,3)))
"KRN",.404,486,40,13,0)
13^Scheduled Down Time Start^3
"KRN",.404,486,40,13,1)
5.01
"KRN",.404,486,40,13,2)
10,29^20^10,2
"KRN",.404,486,40,13,11)
D HLP^DDSUTL($G(^DD(8973,5.01,3)))
"KRN",.404,486,40,13,12)
D:X="" UNED^DDSUTL(14,,,1),UNED^DDSUTL(15,,,1) D:X'="" UNED^DDSUTL(14,,,0),UNED^DDSUTL(15,,,0)
"KRN",.404,486,40,13,13)
D PUT^DDSVAL(8973,.DA,5.02,""),PUT^DDSVAL(8973,.DA,5.03,"")
"KRN",.404,486,40,14,0)
14^Scheduled Down Time Stop^3
"KRN",.404,486,40,14,1)
5.02
"KRN",.404,486,40,14,2)
11,29^20^11,3
"KRN",.404,486,40,14,11)
D:$$GET^DDSVAL(8973,.DA,5.01)'="" HLP^DDSUTL($G(^DD(8973,5.02,3)))
"KRN",.404,486,40,14,12)
I X'="" I X'>$$GET^DDSVAL(8973,.DA,5.01,,"I") W $C(7) D HLP^DDSUTL("This must be greater than the 'Scheduled Down Time Start' entry.") S X="",DDSBR="14" D PUT^DDSVAL(8973,.DA,5.02,X)
"KRN",.404,486,40,15,0)
15^Reason for Down Time^3
"KRN",.404,486,40,15,1)
5.03
"KRN",.404,486,40,15,2)
12,29^50^12,7
"KRN",.404,486,40,15,11)
D HLP^DDSUTL($G(^DD(8973,5.03,3)))
"KRN",3.6,284,-1)
0^1
"KRN",3.6,284,0)
KMPD ECHO^CP Echo Server Error^1
"KRN",3.6,284,1,0)
^3.61A^9^9^3060412^^
"KRN",3.6,284,1,1,0)
The 'CP Echo Server' [KMPD ECHO] encountered an error.
"KRN",3.6,284,1,2,0)
 
"KRN",3.6,284,1,3,0)
   Date/Time: |1|
"KRN",3.6,284,1,4,0)
      Sender: |2|
"KRN",3.6,284,1,5,0)
 Option name: |3|
"KRN",3.6,284,1,6,0)
     Subject: |4|
"KRN",3.6,284,1,7,0)
   Message #: |5|
"KRN",3.6,284,1,8,0)
 
"KRN",3.6,284,1,9,0)
    Comments: |6|
"KRN",3.6,284,3,0)
^3.63^2^2^3060412^^
"KRN",3.6,284,3,1,0)
This bulletin is sent to the KMP-CAPMAN mail group when the 'CP Echo 
"KRN",3.6,284,3,2,0)
Server' [KMPD ECHO] encounters an error.
"KRN",3.6,284,4,0)
^3.64A^6^6
"KRN",3.6,284,4,1,0)
1
"KRN",3.6,284,4,1,1,0)
^^2^2^3060315^
"KRN",3.6,284,4,1,1,1,0)
The date and time in human-readable form when the server request was 
"KRN",3.6,284,4,1,1,2,0)
received.
"KRN",3.6,284,4,2,0)
2
"KRN",3.6,284,4,2,1,0)
^^1^1^3060315^
"KRN",3.6,284,4,2,1,1,0)
The name of the sender of the server request.
"KRN",3.6,284,4,3,0)
3
"KRN",3.6,284,4,3,1,0)
^^1^1^3060315^
"KRN",3.6,284,4,3,1,1,0)
The name of the option which was requested by Mailman.
"KRN",3.6,284,4,4,0)
4
"KRN",3.6,284,4,4,1,0)
^^1^1^3060315^
"KRN",3.6,284,4,4,1,1,0)
The subject of the message which requested a server.
"KRN",3.6,284,4,5,0)
5
"KRN",3.6,284,4,5,1,0)
^^1^1^3060315^
"KRN",3.6,284,4,5,1,1,0)
The internal number of the message requesting a server.
"KRN",3.6,284,4,6,0)
6
"KRN",3.6,284,4,6,1,0)
^3.65^3^3^3060315^
"KRN",3.6,284,4,6,1,1,0)
Comments appended to the bulletin. These may include errors trapped by 
"KRN",3.6,284,4,6,1,2,0)
the server software and/or the operating system, as well as general 
"KRN",3.6,284,4,6,1,3,0)
purpose messages.
"KRN",19,20425,-1)
0^1
"KRN",19,20425,0)
KMPD ECHO^CP Echo Server^^S^^^^^^^^
"KRN",19,20425,25)
ECHO^KMPDECH
"KRN",19,20425,220)
KMPD ECHO^R^^N^Y^N^0^^7
"KRN",19,20425,"U")
CP ECHO SERVER
"MBREQ")
0
"ORD",2,3.6)
3.6;2;1;;BUL^XPDTA1;;BULE1^XPDIA1;;;BULDEL^XPDIA1
"ORD",2,3.6,0)
BULLETIN
"ORD",8,.403)
.403;8;;;EDEOUT^DIFROMSO(.403,DA,"",XPDA);FPRE^DIFROMSI(.403,"",XPDA);EPRE^DIFROMSI(.403,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.403,DA,"",XPDA);DEL^DIFROMSK(.403,"",%)
"ORD",8,.403,0)
FORM
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",556,-1)
1^1
"PKG",556,0)
CAPACITY MANAGEMENT TOOLS^KMPD^Capacity Management Tools
"PKG",556,22,0)
^9.49I^1^1
"PKG",556,22,1,0)
2.0^3040331^3040315^10292
"PKG",556,22,1,"PAH",1,0)
5^3060420^10292
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","KMPDECH")
0^1^B1037928
"RTN","KMPDECH",1,0)
KMPDECH ; OAK/RAK - CM Tools Echo ;4/6/06  08:40
"RTN","KMPDECH",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**5**;Mar 22, 2002
"RTN","KMPDECH",3,0)
 ;
"RTN","KMPDECH",4,0)
ECHO ;-entry point
"RTN","KMPDECH",5,0)
 ;
"RTN","KMPDECH",6,0)
 N DATA,I,ID,SITE,SITENM,TEXT,TRANSTO,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","KMPDECH",7,0)
 ;
"RTN","KMPDECH",8,0)
 ; get id from subject
"RTN","KMPDECH",9,0)
 S ID=$P($G(XQSUB),"~",2)
"RTN","KMPDECH",10,0)
 ; scheduled downtime start and stop times
"RTN","KMPDECH",11,0)
 S DATA=$P($G(^KMPD(8973,1,5)),U,1,2)
"RTN","KMPDECH",12,0)
 ; site info
"RTN","KMPDECH",13,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDECH",14,0)
 S SITENM=$P(SITE,U,2)
"RTN","KMPDECH",15,0)
 S XMDUZ="ECHO BACK FROM "_SITENM
"RTN","KMPDECH",16,0)
 S XMSUB="CP ECHO~"_ID_"~"_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"
"RTN","KMPDECH",17,0)
 D TRANSTO^KMPDUTL7(1,5,.TRANSTO) Q:'$D(TRANSTO)
"RTN","KMPDECH",18,0)
 S I=""
"RTN","KMPDECH",19,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDECH",20,0)
 S TEXT(1)="START="_$P(DATA,U)
"RTN","KMPDECH",21,0)
 S TEXT(2)="STOP="_$P(DATA,U,2)
"RTN","KMPDECH",22,0)
 S XMTEXT="TEXT("
"RTN","KMPDECH",23,0)
 D ^XMD
"RTN","KMPDECH",24,0)
 Q
"RTN","KMPDPOST")
0^4^B2606774^B3570713
"RTN","KMPDPOST",1,0)
KMPDPOST ;OAK/RAK - CM Tools Post Install ;4/2/04  08:55
"RTN","KMPDPOST",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,2,5**;Mar 22, 2002
"RTN","KMPDPOST",3,0)
 ;
"RTN","KMPDPOST",4,0)
EN ;-entry point
"RTN","KMPDPOST",5,0)
 N BTIEN,ERROR,FDA,MGIEN,ZIEN
"RTN","KMPDPOST",6,0)
 D MES^XPDUTL("     Adding CURRENT PATCH data to CP PARAMETERS file...")
"RTN","KMPDPOST",7,0)
 S FDA($J,8973,"1,",.04)=$P($$VERSION^KMPDUTL,"^",2)
"RTN","KMPDPOST",8,0)
 S FDA($J,8973,"1,",.05)=$$NOW^XLFDT
"RTN","KMPDPOST",9,0)
 D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDPOST",10,0)
 ; if error
"RTN","KMPDPOST",11,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDPOST",12,0)
 ;
"RTN","KMPDPOST",13,0)
 D MES^XPDUTL("     Adding 'VISTA MONITOR TRANSFER TO' data to CP PARAMETERS file...")
"RTN","KMPDPOST",14,0)
 ; ad vista monitor 'transmit to' entries
"RTN","KMPDPOST",15,0)
 ;
"RTN","KMPDPOST",16,0)
 K ERROR,FDA,ZIEN
"RTN","KMPDPOST",17,0)
 S FDA($J,8973.05,"?+1,1,",.01)="S.KMP7SRV@FO-ALBANY.MED.VA.GOV"
"RTN","KMPDPOST",18,0)
 ; file data
"RTN","KMPDPOST",19,0)
 D UPDATE^DIE("","FDA($J)","ZIEN","ERROR")
"RTN","KMPDPOST",20,0)
 ; if error
"RTN","KMPDPOST",21,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDPOST",22,0)
 ;
"RTN","KMPDPOST",23,0)
 ; bulletin ien
"RTN","KMPDPOST",24,0)
 S BTIEN=$O(^XMB(3.6,"B","KMPD ECHO",0))
"RTN","KMPDPOST",25,0)
 ; mail group ien
"RTN","KMPDPOST",26,0)
 S MGIEN=$O(^XMB(3.8,"B","KMP-CAPMAN",0))
"RTN","KMPDPOST",27,0)
 I BTIEN&(MGIEN) D 
"RTN","KMPDPOST",28,0)
 .D MES^XPDUTL("     Adding mail group KMP-CAPMAN to bulletin KMPD ECHO...")
"RTN","KMPDPOST",29,0)
 .K ERROR,FDA,ZIEN
"RTN","KMPDPOST",30,0)
 .S FDA($J,3.62,"?+1,"_BTIEN_",",.01)=MGIEN
"RTN","KMPDPOST",31,0)
 .D UPDATE^DIE("","FDA($J)","ZIEN","ERROR")
"RTN","KMPDPOST",32,0)
 .; if error
"RTN","KMPDPOST",33,0)
 .I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDPOST",34,0)
 ;
"RTN","KMPDPOST",35,0)
 D MES^XPDUTL("     Complete!")
"RTN","KMPDPOST",36,0)
 ;
"RTN","KMPDPOST",37,0)
 Q
"RTN","KMPDTU01")
0^3^B21700186^B21675708
"RTN","KMPDTU01",1,0)
KMPDTU01 ;OAK/RAK - CM Tools Timing Utility ;4/6/06  08:40
"RTN","KMPDTU01",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**4,5**;Mar 22, 2002
"RTN","KMPDTU01",3,0)
 ;
"RTN","KMPDTU01",4,0)
DAILY(KMPDT) ;-- transmit daily stats to national database
"RTN","KMPDTU01",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",6,0)
 ; KMPDT.... Compression date in internal fileman formt. It represents 
"RTN","KMPDTU01",7,0)
 ;           the date from which the previous days data should be
"RTN","KMPDTU01",8,0)
 ;           transmitted. 
"RTN","KMPDTU01",9,0)
 ;           Example: if KMPDT = 2981011  then tranmission will be
"RTN","KMPDTU01",10,0)
 ;                    on 2981010 (KMPDT-1)
"RTN","KMPDTU01",11,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",12,0)
 ;
"RTN","KMPDTU01",13,0)
 Q:'$G(KMPDT)
"RTN","KMPDTU01",14,0)
 ;
"RTN","KMPDTU01",15,0)
 N DATE,DATA,DELTA,ERROR,FDA,HOUR,I,IEN,PIECE,PTNP,SDTM,SITE,SS
"RTN","KMPDTU01",16,0)
 N STR
"RTN","KMPDTU01",17,0)
 ;
"RTN","KMPDTU01",18,0)
 ; storage  processed
"RTN","KMPDTU01",19,0)
 K ^TMP($J),^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",20,0)
 ; site info.
"RTN","KMPDTU01",21,0)
 S SITE=$$SITE^VASITE Q:SITE=""
"RTN","KMPDTU01",22,0)
 S IEN=0
"RTN","KMPDTU01",23,0)
 W:'$D(ZTQUEUED) !,"Compressing data into daily format..."
"RTN","KMPDTU01",24,0)
 F  S IEN=$O(^KMPD(8973.2,"ADT",KMPDT,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",25,0)
 .Q:'$D(^KMPD(8973.2,IEN,0))  S DATA(0)=^(0)
"RTN","KMPDTU01",26,0)
 .; quit if daily data has already been sent to national database
"RTN","KMPDTU01",27,0)
 .;Q:$P(DATA(0),U,10)
"RTN","KMPDTU01",28,0)
 .W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",29,0)
 .; start date/time      date w/no time    delta
"RTN","KMPDTU01",30,0)
 .S SDTM=$P(DATA(0),U,3),DATE=$P(SDTM,"."),DELTA=$P(DATA(0),U,4)
"RTN","KMPDTU01",31,0)
 .; hour
"RTN","KMPDTU01",32,0)
 .S HOUR=+$E($P(SDTM,".",2),1,2)
"RTN","KMPDTU01",33,0)
 .; quit if no kmptmp subscript
"RTN","KMPDTU01",34,0)
 .S SS=$P(DATA(0),U,7)  Q:SS=""
"RTN","KMPDTU01",35,0)
 .;
"RTN","KMPDTU01",36,0)
 .S PTNP=$$PTNP^KMPDHU03(SDTM) Q:'PTNP
"RTN","KMPDTU01",37,0)
 .; piece 4 - prime time
"RTN","KMPDTU01",38,0)
 .; piece 5 - non-prime time
"RTN","KMPDTU01",39,0)
 .S PIECE=$S(PTNP=1:4,1:5)
"RTN","KMPDTU01",40,0)
 .;
"RTN","KMPDTU01",41,0)
 .S $P(^TMP($J,KMPDT,SS),U)=KMPDT
"RTN","KMPDTU01",42,0)
 .S $P(^TMP($J,KMPDT,SS),U,3)=SS
"RTN","KMPDTU01",43,0)
 .S $P(^TMP($J,KMPDT,SS),U,PIECE)=$P(^TMP($J,KMPDT,SS),U,PIECE)+DELTA
"RTN","KMPDTU01",44,0)
 .S $P(^TMP($J,KMPDT,SS),U,(PIECE+2))=$P(^TMP($J,KMPDT,SS),U,(PIECE+2))+1
"RTN","KMPDTU01",45,0)
 .; hourly delta
"RTN","KMPDTU01",46,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP)),U,(HOUR+1))+DELTA
"RTN","KMPDTU01",47,0)
 .; hourly occurrences
"RTN","KMPDTU01",48,0)
 .S $P(^TMP($J,KMPDT,SS,PTNP+.1),U,(HOUR+1))=$P($G(^TMP($J,KMPDT,SS,PTNP+.1)),U,(HOUR+1))+1
"RTN","KMPDTU01",49,0)
 .; node 99.1 is for national database (end date^facility name)
"RTN","KMPDTU01",50,0)
 .S ^TMP($J,KMPDT,SS,99.1)=KMPDT_"^"_$P(SITE,U,2)_"^"_$P(SITE,U,3)_"^"_$$WORKDAY^XUWORKDY(DATE)
"RTN","KMPDTU01",51,0)
 .; add to processed array.
"RTN","KMPDTU01",52,0)
 .S ^TMP("KMPDTU01",$J,IEN)=""
"RTN","KMPDTU01",53,0)
 ;
"RTN","KMPDTU01",54,0)
 D:$D(^TMP($J)) TRANSMIT(2)
"RTN","KMPDTU01",55,0)
 K ^TMP($J)
"RTN","KMPDTU01",56,0)
 ;
"RTN","KMPDTU01",57,0)
 ; update field .1 (DAILY - SENT TO CM NATIONAL DB) to 'YES' for all
"RTN","KMPDTU01",58,0)
 ; processed entries.
"RTN","KMPDTU01",59,0)
 W:'$D(ZTQUEUED) !!,"Updating records to reflect transmission..."
"RTN","KMPDTU01",60,0)
 S IEN=0
"RTN","KMPDTU01",61,0)
 F  S IEN=$O(^TMP("KMPDTU01",$J,IEN)) Q:'IEN  D 
"RTN","KMPDTU01",62,0)
 .K FDA,ERROR W:'$D(ZTQUEUED)&('(IEN#1000)) "."
"RTN","KMPDTU01",63,0)
 .S FDA($J,8973.2,IEN_",",.1)=1
"RTN","KMPDTU01",64,0)
 .D FILE^DIE("","FDA($J)","ERROR")
"RTN","KMPDTU01",65,0)
 ;
"RTN","KMPDTU01",66,0)
 K ^TMP("KMPDTU01",$J)
"RTN","KMPDTU01",67,0)
 ;
"RTN","KMPDTU01",68,0)
 W:'$D(ZTQUEUED) !!,"Finished!"
"RTN","KMPDTU01",69,0)
 ;
"RTN","KMPDTU01",70,0)
 Q
"RTN","KMPDTU01",71,0)
 ;
"RTN","KMPDTU01",72,0)
TRANSMIT(KMPDTWD) ;-- format data into e-mail and send to cm national database
"RTN","KMPDTU01",73,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",74,0)
 ; KMPDTWD... Weekly/Daily
"RTN","KMPDTU01",75,0)
 ;             1 - weekly
"RTN","KMPDTU01",76,0)
 ;             2 - daily
"RTN","KMPDTU01",77,0)
 ;
"RTN","KMPDTU01",78,0)
 ; D = date
"RTN","KMPDTU01",79,0)
 ; S = subscript
"RTN","KMPDTU01",80,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDTU01",81,0)
 ;
"RTN","KMPDTU01",82,0)
 Q:'$G(KMPDTWD)
"RTN","KMPDTU01",83,0)
 Q:'$D(^TMP($J))
"RTN","KMPDTU01",84,0)
 ;
"RTN","KMPDTU01",85,0)
 N CPU,D,DATE,I,IEN,LN,S,TL,TRANSTO,XMSUB,X,XMTEXT,XMY,XMZ,Y,Z
"RTN","KMPDTU01",86,0)
 ;
"RTN","KMPDTU01",87,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",88,0)
 ;
"RTN","KMPDTU01",89,0)
 S DATE=$S(KMPDTWD=1:$G(START),1:$G(KMPDT))
"RTN","KMPDTU01",90,0)
 S LN=0
"RTN","KMPDTU01",91,0)
 ; version and patch info
"RTN","KMPDTU01",92,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="VERSION="_$$VERSION^KMPDUTL
"RTN","KMPDTU01",93,0)
 ; system information
"RTN","KMPDTU01",94,0)
 S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="SYSINFO="_$$SYSINFO^KMPDUTL1()
"RTN","KMPDTU01",95,0)
 ; send cpu data to national database
"RTN","KMPDTU01",96,0)
 D CPU^KMPDUTL5(.CPU) I $D(CPU) S I="" F  S I=$O(CPU(I)) Q:I=""  D 
"RTN","KMPDTU01",97,0)
 .S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)="CPU="_I_U_CPU(I)
"RTN","KMPDTU01",98,0)
 ;
"RTN","KMPDTU01",99,0)
 W:'$D(ZTQUEUED) !!,"Formatting ",$$FMTE^XLFDT($G(START))," data for mail delivery..."
"RTN","KMPDTU01",100,0)
 ; reformat so that data is in ^TMP("KMPR UPLOAD",$J,LN)= format.
"RTN","KMPDTU01",101,0)
 S IEN=0,D=""
"RTN","KMPDTU01",102,0)
 F  S D=$O(^TMP($J,D)) Q:D=""  S S="" W "." D 
"RTN","KMPDTU01",103,0)
 .W !,D
"RTN","KMPDTU01",104,0)
 .F  S S=$O(^TMP($J,D,S)) Q:S=""  D 
"RTN","KMPDTU01",105,0)
 ..S IEN=IEN+1,LN=LN+1
"RTN","KMPDTU01",106,0)
 ..S ^TMP("KMPDTU01-2",$J,LN)=IEN_",0)="_^TMP($J,D,S)
"RTN","KMPDTU01",107,0)
 ..; if prime time
"RTN","KMPDTU01",108,0)
 ..I $D(^TMP($J,D,S,1)) D 
"RTN","KMPDTU01",109,0)
 ...S LN=LN+1
"RTN","KMPDTU01",110,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1)="_^TMP($J,D,S,1)
"RTN","KMPDTU01",111,0)
 ...S LN=LN+1
"RTN","KMPDTU01",112,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",1.1)="_^TMP($J,D,S,1.1)
"RTN","KMPDTU01",113,0)
 ..; if non-prime time
"RTN","KMPDTU01",114,0)
 ..I $D(^TMP($J,D,S,2)) D 
"RTN","KMPDTU01",115,0)
 ...S LN=LN+1
"RTN","KMPDTU01",116,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2)="_^TMP($J,D,S,2)
"RTN","KMPDTU01",117,0)
 ...S LN=LN+1
"RTN","KMPDTU01",118,0)
 ...S ^TMP("KMPDTU01-2",$J,LN)=IEN_",2.1)="_^TMP($J,D,S,2.1)
"RTN","KMPDTU01",119,0)
 ..; node 99.1 for national database
"RTN","KMPDTU01",120,0)
 ..S LN=LN+1,^TMP("KMPDTU01-2",$J,LN)=IEN_",99.1)="_$G(^TMP($J,D,S,99.1))
"RTN","KMPDTU01",121,0)
 ;
"RTN","KMPDTU01",122,0)
 ; quit if no data to transmit.
"RTN","KMPDTU01",123,0)
 Q:'$D(^TMP("KMPDTU01-2",$J))
"RTN","KMPDTU01",124,0)
 S TL=$$TESTLAB^KMPDUT1
"RTN","KMPDTU01",125,0)
 ; send packman message.
"RTN","KMPDTU01",126,0)
 S XMTEXT="^TMP(""KMPDTU01-2"","_$J_","
"RTN","KMPDTU01",127,0)
 S XMSUB=$S(KMPDTWD=1:"CM TIMING DATA~",1:"CM TIMING DATA-DAILY~")_$P(TL,U,2)_$P(SITE,U,2)_" ("_$P(SITE,U,3)_")~"_$$FMTE^XLFDT(DATE,2)
"RTN","KMPDTU01",128,0)
 D TRANSTO^KMPDUTL7(1,4,.TRANSTO) Q:'$D(TRANSTO)
"RTN","KMPDTU01",129,0)
 S I=""
"RTN","KMPDTU01",130,0)
 F  S I=$O(TRANSTO(I)) Q:I=""  S XMY(I)=""
"RTN","KMPDTU01",131,0)
 D ^XMD
"RTN","KMPDTU01",132,0)
 W:'$D(ZTQUEUED) !,"Message #",$G(XMZ)," sent..."
"RTN","KMPDTU01",133,0)
 K ^TMP("KMPDTU01-2",$J)
"RTN","KMPDTU01",134,0)
 ;
"RTN","KMPDTU01",135,0)
 Q
"RTN","KMPDUTL")
0^2^B12113278^B11698586
"RTN","KMPDUTL",1,0)
KMPDUTL ;OAK/RAK - CM Tools Utility ;4/6/06  08:40
"RTN","KMPDUTL",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**1,2,3,4,5**;Mar 22, 2002
"RTN","KMPDUTL",3,0)
 ;
"RTN","KMPDUTL",4,0)
QUEBKG(KMPDOPT,KMPDTIME,KMPDFREQ,KMPDDEL) ;-- queue background job
"RTN","KMPDUTL",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",6,0)
 ; KMPDOPT.... Option name to queue (free text name in .01 field of 
"RTN","KMPDUTL",7,0)
 ;                                   OPTION file)
"RTN","KMPDUTL",8,0)
 ; KMPDTIME... Date/time to queue option (T@1400, etc)
"RTN","KMPDUTL",9,0)
 ; KMPDFREQ... Scheduling frequency (1D, etc)
"RTN","KMPDUTL",10,0)
 ; KMPDDEL.... Delete option if it already exists in file 19.2
"RTN","KMPDUTL",11,0)
 ;              0 - do not delete (quit if already scheduled)
"RTN","KMPDUTL",12,0)
 ;              1 - delete if already in file 19.2
"RTN","KMPDUTL",13,0)
 ;
"RTN","KMPDUTL",14,0)
 ; This API will queue an option from file #19 (OPTION) to run in file
"RTN","KMPDUTL",15,0)
 ; 19.2 (OPTION SCHEDULE).
"RTN","KMPDUTL",16,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",17,0)
 Q:$G(KMPDOPT)=""
"RTN","KMPDUTL",18,0)
 Q:$G(KMPDTIME)=""
"RTN","KMPDUTL",19,0)
 Q:$G(KMPDFREQ)=""
"RTN","KMPDUTL",20,0)
 S KMPDDEL=+$G(KMPDDEL)
"RTN","KMPDUTL",21,0)
 N DA,DIFROM,DIK,FDA,ERROR,IEN,IEN1,IENZ,TEXT,X,Y,Z
"RTN","KMPDUTL",22,0)
 ; Newing DIFROM will force reschedule when installing from KIDS
"RTN","KMPDUTL",23,0)
 S:'$G(DT) DT=$$DT^XLFDT
"RTN","KMPDUTL",24,0)
 ; change to internal format
"RTN","KMPDUTL",25,0)
 D FMDTI^KMPDU(.Z,KMPDTIME)
"RTN","KMPDUTL",26,0)
 Q:Z(0)="^"!(Z(0)="")
"RTN","KMPDUTL",27,0)
 S KMPDTIME=Z(0) K Z
"RTN","KMPDUTL",28,0)
 S TEXT=KMPDOPT
"RTN","KMPDUTL",29,0)
 ; quit if not in file 19
"RTN","KMPDUTL",30,0)
 S IEN=$O(^DIC(19,"B",TEXT,0)) Q:'IEN
"RTN","KMPDUTL",31,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",32,0)
 ; quit if already in file 19.2 and not KMPDDEL
"RTN","KMPDUTL",33,0)
 Q:IEN1&('KMPDDEL)
"RTN","KMPDUTL",34,0)
 ; delete if in file 19.2
"RTN","KMPDUTL",35,0)
 I IEN1 S DIK="^DIC(19.2,",DA=IEN1 D ^DIK
"RTN","KMPDUTL",36,0)
 ; add entry
"RTN","KMPDUTL",37,0)
 S FDA($J,19.2,"+1,",.01)=IEN
"RTN","KMPDUTL",38,0)
 ; queued to run at what time
"RTN","KMPDUTL",39,0)
 S FDA($J,19.2,"+1,",2)=KMPDTIME
"RTN","KMPDUTL",40,0)
 ; rescheduling frequency.
"RTN","KMPDUTL",41,0)
 S FDA($J,19.2,"+1,",6)=KMPDFREQ
"RTN","KMPDUTL",42,0)
 D UPDATE^DIE("","FDA($J)",.IENZ,"ERROR")
"RTN","KMPDUTL",43,0)
 I $D(ERROR) D MSG^DIALOG("W","",60,10,"ERROR")
"RTN","KMPDUTL",44,0)
 S IEN1=$O(^DIC(19.2,"B",IEN,0))
"RTN","KMPDUTL",45,0)
 I '$G(^DIC(19.2,+IEN1,1)) D 
"RTN","KMPDUTL",46,0)
 .D MES^XPDUTL("     ERROR - Not able to reschedule "_KMPDOPT)
"RTN","KMPDUTL",47,0)
 .D MES^XPDUTL("     Use 'Schedule/Unschedule Options' [XUTM SCHEDULE] to reschedule.")
"RTN","KMPDUTL",48,0)
 ;
"RTN","KMPDUTL",49,0)
 Q
"RTN","KMPDUTL",50,0)
 ;
"RTN","KMPDUTL",51,0)
VERSION() ;-- extrinsic - return current version.
"RTN","KMPDUTL",52,0)
 Q $P($T(+2^KMPDUTL),";",3)_"^"_$P($T(+2^KMPDUTL),";",5)
"RTN","KMPDUTL",53,0)
 ;
"RTN","KMPDUTL",54,0)
VRSNGET(KMPDAPPL) ;-- extrinsic function - get version^patches
"RTN","KMPDUTL",55,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",56,0)
 ; KMPDAPPL... application:
"RTN","KMPDUTL",57,0)
 ;              0 - CM Tools
"RTN","KMPDUTL",58,0)
 ;              1 - SAGG
"RTN","KMPDUTL",59,0)
 ;              2 - RUM
"RTN","KMPDUTL",60,0)
 ;
"RTN","KMPDUTL",61,0)
 ; Return: Version^Patch^VersionInstallDate^PatchInstallDate
"RTN","KMPDUTL",62,0)
 ;         null = no application
"RTN","KMPDUTL",63,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL",64,0)
 ;
"RTN","KMPDUTL",65,0)
 Q:$G(KMPDAPPL)="" ""
"RTN","KMPDUTL",66,0)
 Q:KMPDAPPL<0!(KMPDAPPL>2) ""
"RTN","KMPDUTL",67,0)
 ;
"RTN","KMPDUTL",68,0)
 N DATA,VERSION S VERSION=""
"RTN","KMPDUTL",69,0)
 ;
"RTN","KMPDUTL",70,0)
 ; cm tools
"RTN","KMPDUTL",71,0)
 I KMPDAPPL=0 D 
"RTN","KMPDUTL",72,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",73,0)
 .S VERSION=$P(DATA,U,2)_U_$P(DATA,U,4)_U_$P(DATA,U,3)_U_$P(DATA,U,5)
"RTN","KMPDUTL",74,0)
 ;
"RTN","KMPDUTL",75,0)
 ; all other applications
"RTN","KMPDUTL",76,0)
 E  D 
"RTN","KMPDUTL",77,0)
 .S DATA=$G(^KMPD(8973,1,KMPDAPPL))
"RTN","KMPDUTL",78,0)
 .S VERSION=$P(DATA,U)_U_$P(DATA,U,3)_U_$P(DATA,U,2)_U_$P(DATA,U,4)
"RTN","KMPDUTL",79,0)
 ;
"RTN","KMPDUTL",80,0)
 Q VERSION
"RTN","KMPDUTL",81,0)
 ;
"RTN","KMPDUTL",82,0)
PTCHINFO ; -- patch information: routine name ^ current version ^ current patch(es)
"RTN","KMPDUTL",83,0)
 ;;KMPDBD01^2.0^**2**
"RTN","KMPDUTL",84,0)
 ;;KMPDECH^2.0^**5**
"RTN","KMPDUTL",85,0)
 ;;KMPDHU01^2.0^**4**
"RTN","KMPDUTL",86,0)
 ;;KMPDHU02^2.0
"RTN","KMPDUTL",87,0)
 ;;KMPDHU03^2.0
"RTN","KMPDUTL",88,0)
 ;;KMPDHUA^2.0
"RTN","KMPDUTL",89,0)
 ;;KMPDPOST^2.0^**1,2,5**
"RTN","KMPDUTL",90,0)
 ;;KMPDSS^2.0^**3**
"RTN","KMPDUTL",91,0)
 ;;KMPDSS1^2.0^**3**
"RTN","KMPDUTL",92,0)
 ;;KMPDSSD^2.0^**3**
"RTN","KMPDUTL",93,0)
 ;;KMPDSSD1^2.0^**3**
"RTN","KMPDUTL",94,0)
 ;;KMPDSSR^2.0^**3**
"RTN","KMPDUTL",95,0)
 ;;KMPDSSS^2.0^**3**
"RTN","KMPDUTL",96,0)
 ;;KMPDTM^2.0^**1,4**
"RTN","KMPDUTL",97,0)
 ;;KMPDTP1^2.0^**4**
"RTN","KMPDUTL",98,0)
 ;;KMPDTP2^2.0^**4**
"RTN","KMPDUTL",99,0)
 ;;KMPDTP3^2.0^**4**
"RTN","KMPDUTL",100,0)
 ;;KMPDTP4^2.0^**4**
"RTN","KMPDUTL",101,0)
 ;;KMPDTP5^2.0^**4**
"RTN","KMPDUTL",102,0)
 ;;KMPDTP6^2.0^**4**
"RTN","KMPDUTL",103,0)
 ;;KMPDTP7^2.0^**4**
"RTN","KMPDUTL",104,0)
 ;;KMPDTU01^2.0^**4,5**
"RTN","KMPDUTL",105,0)
 ;;KMPDTU02^2.0
"RTN","KMPDUTL",106,0)
 ;;KMPDTU10^2.0^**4**
"RTN","KMPDUTL",107,0)
 ;;KMPDTU11^2.0
"RTN","KMPDUTL",108,0)
 ;;KMPDU^2.0^**2**
"RTN","KMPDUTL",109,0)
 ;;KMPDU1^2.0
"RTN","KMPDUTL",110,0)
 ;;KMPDU2^2.0^**2**
"RTN","KMPDUTL",111,0)
 ;;KMPDU3^2.0^**2**
"RTN","KMPDUTL",112,0)
 ;;KMPDU4^2.0
"RTN","KMPDUTL",113,0)
 ;;KMPDU5^2.0^**2**
"RTN","KMPDUTL",114,0)
 ;;KMPDU11^2.0
"RTN","KMPDUTL",115,0)
 ;;KMPDUG^2.0
"RTN","KMPDUTL",116,0)
 ;;KMPDUG1^2.0
"RTN","KMPDUTL",117,0)
 ;;KMPDUG2^2.0
"RTN","KMPDUTL",118,0)
 ;;KMPDUGV^2.0
"RTN","KMPDUTL",119,0)
 ;;KMPDUT^2.0
"RTN","KMPDUTL",120,0)
 ;;KMPDUT1^2.0^**4**
"RTN","KMPDUTL",121,0)
 ;;KMPDUT2^2.0
"RTN","KMPDUTL",122,0)
 ;;KMPDUT4^2.0
"RTN","KMPDUTL",123,0)
 ;;KMPDUT4A^2.0
"RTN","KMPDUTL",124,0)
 ;;KMPDUT4B^2.0
"RTN","KMPDUTL",125,0)
 ;;KMPDUT4C^2.0
"RTN","KMPDUTL",126,0)
 ;;KMPDUT5^2.0
"RTN","KMPDUTL",127,0)
 ;;KMPDUTL^2.0^**1,2,3,4,5**
"RTN","KMPDUTL",128,0)
 ;;KMPDUTL1^2.0^**3**
"RTN","KMPDUTL",129,0)
 ;;KMPDUTL2^2.0^**4**
"RTN","KMPDUTL",130,0)
 ;;KMPDUTL3^2.0
"RTN","KMPDUTL",131,0)
 ;;KMPDUTL4^2.0
"RTN","KMPDUTL",132,0)
 ;;KMPDUTL5^2.0
"RTN","KMPDUTL",133,0)
 ;;KMPDUTL6^2.0
"RTN","KMPDUTL",134,0)
 ;;KMPDUTL7^2.0^**2,5**
"RTN","KMPDUTL",135,0)
 ;;KMPDUTL8^2.0^**2**
"RTN","KMPDUTL7")
0^5^B10006436^B9990866
"RTN","KMPDUTL7",1,0)
KMPDUTL7 ;OAK/RAK - CM Tools Utility ;2/17/04  10:52
"RTN","KMPDUTL7",2,0)
 ;;2.0;CAPACITY MANAGEMENT TOOLS;**2,5**;Mar 22, 2002
"RTN","KMPDUTL7",3,0)
 ;
"RTN","KMPDUTL7",4,0)
RSTART(KMPDIEN) ;-- start routine statistics
"RTN","KMPDUTL7",5,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",6,0)
 ; KMPDIEN.... Ien for file #8972.1 (CM CODE EVALUATOR).
"RTN","KMPDUTL7",7,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",8,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",9,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5
"RTN","KMPDUTL7",10,0)
 ; quit if not 'active'
"RTN","KMPDUTL7",11,0)
 Q:'$P($G(^KMPD(8972.1,+KMPDIEN,0)),U,11)
"RTN","KMPDUTL7",12,0)
 K KMPDU(KMPDIEN)
"RTN","KMPDUTL7",13,0)
 S KMPDU(KMPDIEN,"START")=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",14,0)
 Q
"RTN","KMPDUTL7",15,0)
 ;
"RTN","KMPDUTL7",16,0)
RSTOP(KMPDIEN) ;-- stop routine statistics
"RTN","KMPDUTL7",17,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",18,0)
 ; KMPDIEN.... Ien for file #8972.1 (CM CODE EVALUATOR).
"RTN","KMPDUTL7",19,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",20,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",21,0)
 Q:'$D(^KMPD(8972.1,+KMPDIEN,0))#5
"RTN","KMPDUTL7",22,0)
 ; quit if no 'start' subscript
"RTN","KMPDUTL7",23,0)
 Q:'$D(KMPDU(KMPDIEN,"START"))
"RTN","KMPDUTL7",24,0)
 ; quit if not 'active'
"RTN","KMPDUTL7",25,0)
 Q:'$P($G(^KMPD(8972.1,+KMPDIEN,0)),U,11)
"RTN","KMPDUTL7",26,0)
 ;
"RTN","KMPDUTL7",27,0)
 N ARRAY,I,OVERHEAD,ZIEN
"RTN","KMPDUTL7",28,0)
 ;
"RTN","KMPDUTL7",29,0)
 S KMPDU(KMPDIEN,"STOP")=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",30,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",31,0)
 .; check for negative numbers
"RTN","KMPDUTL7",32,0)
 .S $P(KMPDU(KMPDIEN,"START"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"START"),U,I))
"RTN","KMPDUTL7",33,0)
 .S $P(KMPDU(KMPDIEN,"STOP"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"STOP"),U,I))
"RTN","KMPDUTL7",34,0)
 .; calculate difference
"RTN","KMPDUTL7",35,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$P(KMPDU(KMPDIEN,"STOP"),U,I)-$P(KMPDU(KMPDIEN,"START"),U,I)
"RTN","KMPDUTL7",36,0)
 .; check 'difference' for negative number
"RTN","KMPDUTL7",37,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$$NUMBER($P(KMPDU(KMPDIEN,"DIFF"),U,I))
"RTN","KMPDUTL7",38,0)
 ;
"RTN","KMPDUTL7",39,0)
 ; get overhead data.
"RTN","KMPDUTL7",40,0)
 S OVERHEAD=$$GETROVHD
"RTN","KMPDUTL7",41,0)
 ; subtract overhead data from "DIFF".
"RTN","KMPDUTL7",42,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",43,0)
 .S $P(KMPDU(KMPDIEN,"DIFF"),U,I)=$P(KMPDU(KMPDIEN,"DIFF"),U,I)-$P(OVERHEAD,U,I)
"RTN","KMPDUTL7",44,0)
 ;
"RTN","KMPDUTL7",45,0)
 ; file results
"RTN","KMPDUTL7",46,0)
 ; elements.
"RTN","KMPDUTL7",47,0)
 F I=1:1:6 S ARRAY((I+3)*.01)=$P(KMPDU(KMPDIEN,"DIFF"),U,I)
"RTN","KMPDUTL7",48,0)
 ; file data
"RTN","KMPDUTL7",49,0)
 D EDIT^KMPDUTL8(KMPDIEN,"ARRAY")
"RTN","KMPDUTL7",50,0)
 ;
"RTN","KMPDUTL7",51,0)
 K KMPDU(KMPDIEN)
"RTN","KMPDUTL7",52,0)
 ;
"RTN","KMPDUTL7",53,0)
 Q
"RTN","KMPDUTL7",54,0)
 ;
"RTN","KMPDUTL7",55,0)
CONVERT(KMPDTEXT) ;-- extrinsic function - convert disallowed character(s)
"RTN","KMPDUTL7",56,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",57,0)
 ; KMPDTEXT.. Text to convert.
"RTN","KMPDUTL7",58,0)
 ;             '^' will be converted to '~'
"RTN","KMPDUTL7",59,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",60,0)
 ;
"RTN","KMPDUTL7",61,0)
 S KMPDTEXT=$TR(KMPDTEXT,"^","~")
"RTN","KMPDUTL7",62,0)
 Q $E(KMPDTEXT,1,30)
"RTN","KMPDUTL7",63,0)
 ;
"RTN","KMPDUTL7",64,0)
GETROVHD() ;-- extrinsic - get routine overhead stats.
"RTN","KMPDUTL7",65,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",66,0)
 ; Return: overhead data in 9 up-arrow (^) pieces:
"RTN","KMPDUTL7",67,0)
 ;         piece 1 - CPU Time
"RTN","KMPDUTL7",68,0)
 ;         piece 2 - DIO References
"RTN","KMPDUTL7",69,0)
 ;         piece 3 - BIO References
"RTN","KMPDUTL7",70,0)
 ;         piece 4 - Page Faults
"RTN","KMPDUTL7",71,0)
 ;         piece 5 - M Commands
"RTN","KMPDUTL7",72,0)
 ;         piece 6 - GLO References
"RTN","KMPDUTL7",73,0)
 ;         piece 7 - $H Day
"RTN","KMPDUTL7",74,0)
 ;         piece 8 - $H Seconds
"RTN","KMPDUTL7",75,0)
 ;         piece 9 - ASCII Date/Time
"RTN","KMPDUTL7",76,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",77,0)
 ;
"RTN","KMPDUTL7",78,0)
 D:$G(^XTMP("KMPD","ROVHD"))="" ROVHD
"RTN","KMPDUTL7",79,0)
 Q $G(^XTMP("KMPD","ROVHD"))
"RTN","KMPDUTL7",80,0)
 ;
"RTN","KMPDUTL7",81,0)
ROVHD ;-- calculate overhead for routine stats.
"RTN","KMPDUTL7",82,0)
 ;
"RTN","KMPDUTL7",83,0)
 ; This sub-routine determines the overhead for elements when running
"RTN","KMPDUTL7",84,0)
 ; RSTART^KMPDUTL1 and RSTOP^KMPDUTL1.  The overhead numbers are stored
"RTN","KMPDUTL7",85,0)
 ; in ^XTMP("KMPD","ROHD"), and are subtracted from the final numbers
"RTN","KMPDUTL7",86,0)
 ; to get as true a picture as possible of the actual elements for the
"RTN","KMPDUTL7",87,0)
 ; calling routine.
"RTN","KMPDUTL7",88,0)
 ;
"RTN","KMPDUTL7",89,0)
 N DIFF,I,START,STOP
"RTN","KMPDUTL7",90,0)
 S DIFF=""
"RTN","KMPDUTL7",91,0)
 S START=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",92,0)
 S STOP=$$STATS^%ZOSVKR
"RTN","KMPDUTL7",93,0)
 F I=1:1:6 D 
"RTN","KMPDUTL7",94,0)
 .S $P(DIFF,U,I)=$P(STOP,U,I)-$P(START,U,I)
"RTN","KMPDUTL7",95,0)
 ; m commands.
"RTN","KMPDUTL7",96,0)
 S $P(DIFF,U,5)=$P(DIFF,U,5)+8
"RTN","KMPDUTL7",97,0)
 ; glo references.
"RTN","KMPDUTL7",98,0)
 S $P(DIFF,U,6)=$P(DIFF,U,6)+2
"RTN","KMPDUTL7",99,0)
 S ^XTMP("KMPD",0)=$$FMADD^XLFDT($$DT^XLFDT,300)
"RTN","KMPDUTL7",100,0)
 S ^XTMP("KMPD","ROVHD")=DIFF
"RTN","KMPDUTL7",101,0)
 ;
"RTN","KMPDUTL7",102,0)
 Q
"RTN","KMPDUTL7",103,0)
 ;
"RTN","KMPDUTL7",104,0)
NUMBER(KMPDNUM) ;-- extrinsic function - check for negative numbers
"RTN","KMPDUTL7",105,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",106,0)
 ; KMPDNUM... Number to be checked
"RTN","KMPDUTL7",107,0)
 ;
"RTN","KMPDUTL7",108,0)
 ; Return: non-negative number
"RTN","KMPDUTL7",109,0)
 ;
"RTN","KMPDUTL7",110,0)
 ; Because certain data elements (such as m commands and global 
"RTN","KMPDUTL7",111,0)
 ; references) can grow to such large numbers, these numbers must be
"RTN","KMPDUTL7",112,0)
 ; checked.  If they have become negative (the register flips) they
"RTN","KMPDUTL7",113,0)
 ; can be turned into positive numbers with
"RTN","KMPDUTL7",114,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",115,0)
 ;
"RTN","KMPDUTL7",116,0)
 S KMPDNUM=$G(KMPDNUM)
"RTN","KMPDUTL7",117,0)
 Q:KMPDNUM="" KMPDNUM
"RTN","KMPDUTL7",118,0)
 Q:KMPDNUM'<0 KMPDNUM
"RTN","KMPDUTL7",119,0)
 Q KMPDNUM+(2**32)
"RTN","KMPDUTL7",120,0)
 ;
"RTN","KMPDUTL7",121,0)
TRANSTO(KMPDIEN,KMPDAPP,KMPDRES) ;-- return 'transmit to' for data transmission
"RTN","KMPDUTL7",122,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",123,0)
 ; KMPDIEN.... Ien for file #8973 (CP PARAMETERS)
"RTN","KMPDUTL7",124,0)
 ; KMPDAPP.... Application:
"RTN","KMPDUTL7",125,0)
 ;              1 = sagg
"RTN","KMPDUTL7",126,0)
 ;              2 = rum
"RTN","KMPDUTL7",127,0)
 ;              3 = hl7
"RTN","KMPDUTL7",128,0)
 ;              4 = timing
"RTN","KMPDUTL7",129,0)
 ;              5 = vista monitor
"RTN","KMPDUTL7",130,0)
 ; KMPDRES().. Results array in format:
"RTN","KMPDUTL7",131,0)
 ;              KMPDRES(ExternalFormat)=IEN
"RTN","KMPDUTL7",132,0)
 ;              KMPDRES(...           )=IEN
"RTN","KMPDUTL7",133,0)
 ;-----------------------------------------------------------------------
"RTN","KMPDUTL7",134,0)
 ;
"RTN","KMPDUTL7",135,0)
 K KMPDRES
"RTN","KMPDUTL7",136,0)
 Q:'$G(KMPDIEN)
"RTN","KMPDUTL7",137,0)
 Q:'$D(^KMPD(8973,KMPDIEN,0))
"RTN","KMPDUTL7",138,0)
 Q:'$G(KMPDAPP)
"RTN","KMPDUTL7",139,0)
 Q:KMPDAPP<1!(KMPDAPP>5)
"RTN","KMPDUTL7",140,0)
 ;
"RTN","KMPDUTL7",141,0)
 N DATA,I,NODE
"RTN","KMPDUTL7",142,0)
 ;
"RTN","KMPDUTL7",143,0)
 S NODE=21+(KMPDAPP*.1),I=0
"RTN","KMPDUTL7",144,0)
 F  S I=$O(^KMPD(8973,KMPDIEN,NODE,I)) Q:'I  D 
"RTN","KMPDUTL7",145,0)
 .Q:'$D(^KMPD(8973,KMPDIEN,NODE,I,0))  S DATA=^(0)
"RTN","KMPDUTL7",146,0)
 .S KMPDRES(DATA)=I
"RTN","KMPDUTL7",147,0)
 ;
"RTN","KMPDUTL7",148,0)
 Q
"SEC","^DIC",8973,8973,0,"AUDIT")
@
"SEC","^DIC",8973,8973,0,"DD")
@
"SEC","^DIC",8973,8973,0,"DEL")
@
"SEC","^DIC",8973,8973,0,"LAYGO")
@
"SEC","^DIC",8973,8973,0,"RD")
@
"SEC","^DIC",8973,8973,0,"WR")
@
"VER")
8.0^22.0
"^DD",8973,8973,0)
FIELD^^5.03^76
"^DD",8973,8973,0,"DDA")
N
"^DD",8973,8973,0,"DT")
3060412
"^DD",8973,8973,0,"IX","B",8973,.01)

"^DD",8973,8973,0,"NM","CP PARAMETERS")

"^DD",8973,8973,0,"VRPK")
KMPD
"^DD",8973,8973,.01,0)
NAME^R*P4'^DIC(4,^0;1^S DIC("S")="I '$O(^KMPD(8973,0))" D ^DIC K DIC S DIC=$G(DIE),X=+Y K:Y<0 X
"^DD",8973,8973,.01,1,0)
^.1
"^DD",8973,8973,.01,1,1,0)
8973^B
"^DD",8973,8973,.01,1,1,1)
S ^KMPD(8973,"B",$E(X,1,30),DA)=""
"^DD",8973,8973,.01,1,1,2)
K ^KMPD(8973,"B",$E(X,1,30),DA)
"^DD",8973,8973,.01,3)
Pointer to the Institution file (#4)
"^DD",8973,8973,.01,12)
Allow only one entry in file.
"^DD",8973,8973,.01,12.1)
S DIC("S")="I '$O(^KMPD(8973,0))"
"^DD",8973,8973,.01,"DEL",.01,0)
I 1
"^DD",8973,8973,.01,"DT")
3040401
"^DD",8973,8973,.02,0)
CM TOOLS CURRENT VERSION^F^^0;2^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,.02,3)
Current version of CAPACITY MANGEMENT TOOLS. Answer must be 1-10 characters in length
"^DD",8973,8973,.02,"DT")
3040401
"^DD",8973,8973,.03,0)
CM TOOLS CURRENT VERSION INST^D^^0;3^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,.03,3)
Installation date of the current version of CAPACITY MANAGEMENT TOOLS.
"^DD",8973,8973,.03,"DT")
3040401
"^DD",8973,8973,.04,0)
CM TOOLS CURRENT PATCH^F^^0;4^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,.04,3)
Current patch number for the CAPACITY MANAGEMNT TOOLS package. Answer must be 1-10 characters in length
"^DD",8973,8973,.04,"DT")
3040401
"^DD",8973,8973,.05,0)
CM TOOLS CURRENT PATCH INST^D^^0;5^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,.05,3)
Installation Date of the current CAPACITY MANAGEMENT TOOLS patch.
"^DD",8973,8973,.05,"DT")
3040401
"^DD",8973,8973,1.01,0)
SAGG CURRENT VERSION^F^^1;1^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.01,3)
Current version of the SAGG package. Answer must be 1-10 characters in length
"^DD",8973,8973,1.01,"DT")
3040401
"^DD",8973,8973,1.02,0)
SAGG CURRENT VERSION INSTALL^D^^1;2^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.02,3)
Installation Date for the current SAGG package.
"^DD",8973,8973,1.02,"DT")
3040401
"^DD",8973,8973,1.03,0)
SAGG CURRENT PATCH^F^^1;3^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,1.03,3)
Current SAGG patch number(s). Answer must be 1-20 characters in length
"^DD",8973,8973,1.03,"DT")
3040401
"^DD",8973,8973,1.04,0)
SAGG CURRENT PATCH INSTALL^D^^1;4^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.04,3)
Installation Date for current SAGG patch.
"^DD",8973,8973,1.04,"DT")
3040401
"^DD",8973,8973,1.05,0)
SAGG DLY BKG START^D^^1;5^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.05,3)
Most recent Start Time for the SAGG daily background job.
"^DD",8973,8973,1.05,"DT")
3040401
"^DD",8973,8973,1.06,0)
SAGG DLY BKG STOP^D^^1;6^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.06,3)
Most recent Stop Time for the SAGG daily background job.
"^DD",8973,8973,1.06,"DT")
3040401
"^DD",8973,8973,1.07,0)
SAGG DLY BKG DELTA^F^^1;7^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.07,3)
Most recent Delta for the SAGG daily background job.
"^DD",8973,8973,1.07,"DT")
3040401
"^DD",8973,8973,1.08,0)
SAGG WKY BKG START^D^^1;8^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.08,3)
Most recent Start Time for the SAGG weekly background job.
"^DD",8973,8973,1.08,"DT")
3040401
"^DD",8973,8973,1.09,0)
SAGG WKY BKG STOP^D^^1;9^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.09,3)
Most recent Stop Time for the SAGG weekly background job. 
"^DD",8973,8973,1.09,"DT")
3040401
"^DD",8973,8973,1.1,0)
SAGG WKY BKG DELTA^F^^1;10^K:$L(X)>15!($L(X)<1) X
"^DD",8973,8973,1.1,3)
Most recent Delta for the SAGG weekly background job.
"^DD",8973,8973,1.1,"DT")
3040720
"^DD",8973,8973,1.11,0)
SAGG WEEKS TO KEEP DATA^NJ3,0^^1;11^K:+X'=X!(X>100)!(X<0)!(X?.E1"."1.N) X
"^DD",8973,8973,1.11,3)
Type a number between 0 and 100, 0 Decimal Digits
"^DD",8973,8973,1.11,"DT")
3040401
"^DD",8973,8973,1.12,0)
SAGG DLY PURGE START^D^^1;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.12,3)
(No range limit on date)
"^DD",8973,8973,1.12,"DT")
3031121
"^DD",8973,8973,1.13,0)
SAGG DLY PURGE STOP^D^^1;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.13,3)
(No range limit on date)
"^DD",8973,8973,1.13,"DT")
3031121
"^DD",8973,8973,1.14,0)
SAGG DLY PURGE DELTA^F^^1;14^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.14,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,1.14,"DT")
3031121
"^DD",8973,8973,1.15,0)
SAGG WKY PURGE START^D^^1;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.15,3)
(No range limit on date)
"^DD",8973,8973,1.15,"DT")
3031121
"^DD",8973,8973,1.16,0)
SAGG WKY PURGE STOP^D^^1;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,1.16,3)
(No range limit on date)
"^DD",8973,8973,1.16,"DT")
3031121
"^DD",8973,8973,1.17,0)
SAGG WKY PURGE DELTA^F^^1;17^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,1.17,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,1.17,"DT")
3031121
"^DD",8973,8973,2.01,0)
RUM CURRENT VERSION^F^^2;1^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.01,3)
Current version of the RESOURCE USAGE MONITOR package. Answer must be 1-10 characters in length
"^DD",8973,8973,2.01,"DT")
3040401
"^DD",8973,8973,2.02,0)
RUM CURRENT VERSION INSTALL^D^^2;2^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.02,3)
Installation Date of the current RESOURCE USAGE MONITOR package.
"^DD",8973,8973,2.02,"DT")
3040401
"^DD",8973,8973,2.03,0)
RUM CURRENT PATCH^F^^2;3^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.03,3)
Current patch number(s) for the RESOURCE USAGE MONITOR package. Answer must be 1-10 characters in length
"^DD",8973,8973,2.03,"DT")
3040401
"^DD",8973,8973,2.04,0)
RUM CURRENT PATCH INSTALL^D^^2;4^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.04,3)
Installation Date of the current patch for the RESOURCE USAGE MONITOR package.
"^DD",8973,8973,2.04,"DT")
3040401
"^DD",8973,8973,2.05,0)
RUM DLY BKG START^D^^2;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.05,3)
Most recent Start Time for the RUM daily background job. 
"^DD",8973,8973,2.05,"DT")
3040401
"^DD",8973,8973,2.06,0)
RUM DLY BKG STOP^D^^2;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.06,3)
Most recent Stop Time for the RUM daily background job.
"^DD",8973,8973,2.06,"DT")
3040401
"^DD",8973,8973,2.07,0)
RUM DLY BKG DELTA^F^^2;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,2.07,3)
Most recent Delta for the RUM daily background job.
"^DD",8973,8973,2.07,"DT")
3040401
"^DD",8973,8973,2.08,0)
RUM WKY BKG START^D^^2;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.08,3)
Most recent Start Time for the RUM weekly background job.
"^DD",8973,8973,2.08,"DT")
3040401
"^DD",8973,8973,2.09,0)
RUM WKY BKG STOP^D^^2;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.09,3)
Most recent Stop Time for the RUM weekly background job.  
"^DD",8973,8973,2.09,"DT")
3040401
"^DD",8973,8973,2.1,0)
RUM WKY BKG DELTA^F^^2;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,2.1,3)
Most recent Delta for the RUM weekly background job.
"^DD",8973,8973,2.1,"DT")
3040401
"^DD",8973,8973,2.11,0)
RUM WEEKS TO KEEP DATA^NJ2,0^^2;11^K:+X'=X!(X>20)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,2.11,3)
This is the number of weeks that RUM data will be retained in file #8971.1 before purging.  It is recommended that 2 weeks of data be retained.
"^DD",8973,8973,2.11,"DT")
3040401
"^DD",8973,8973,2.12,0)
RUM DLY PURGE START^D^^2;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.12,3)
(No range limit on date)
"^DD",8973,8973,2.12,"DT")
3031121
"^DD",8973,8973,2.13,0)
RUM DLY PURGE STOP^D^^2;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.13,3)
(No range limit on date)
"^DD",8973,8973,2.13,"DT")
3031121
"^DD",8973,8973,2.14,0)
RUM DLY PURGE DELTA^F^^2;14^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.14,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,2.14,"DT")
3031121
"^DD",8973,8973,2.15,0)
RUM WKY PURGE START^D^^2;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.15,3)
(No range limit on date)
"^DD",8973,8973,2.15,"DT")
3031121
"^DD",8973,8973,2.16,0)
RUM WKY PURGE STOP^D^^2;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,2.16,3)
(No range limit on date)
"^DD",8973,8973,2.16,"DT")
3031121
"^DD",8973,8973,2.17,0)
RUM WKY PURGE DELTA^F^^2;17^K:$L(X)>10!($L(X)<1) X
"^DD",8973,8973,2.17,3)
Answer must be 1-10 characters in length
"^DD",8973,8973,2.17,"DT")
3031121
"^DD",8973,8973,3.05,0)
HL7 DLY BKG START^D^^3;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.05,3)
Most recent Start Time for the HL7 daily background job.  
"^DD",8973,8973,3.05,"DT")
3040401
"^DD",8973,8973,3.06,0)
HL7 DLY BKG STOP^D^^3;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.06,3)
Most recent Stop Time for the HL7 daily background job.  
"^DD",8973,8973,3.06,"DT")
3040401
"^DD",8973,8973,3.07,0)
HL7 DLY BKG DELTA^F^^3;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.07,3)
Most recent Delta for the Timing daily background job.
"^DD",8973,8973,3.07,"DT")
3040401
"^DD",8973,8973,3.08,0)
HL7 WKY BKG START^D^^3;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.08,3)
Most recent Start Time for the HL7 weekly background job.
"^DD",8973,8973,3.08,"DT")
3040401
"^DD",8973,8973,3.09,0)
HL7 WKY BKG STOP^D^^3;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.09,3)
Most recent Stop Time for the HL7 weekly background job.
"^DD",8973,8973,3.09,"DT")
3040401
"^DD",8973,8973,3.1,0)
HL7 WKY BKG DELTA^F^^3;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.1,3)
Most recent Delta for the HL7 weekly background job.
"^DD",8973,8973,3.1,"DT")
3040401
"^DD",8973,8973,3.11,0)
HL7 WEEKS TO KEEP DATA^NJ2,0^^3;11^K:+X'=X!(X>20)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,3.11,3)
This is the number of weeks that HL7 data will be retained in file #8973.1 before purging.  It is recommended that 2 weeks of data be retained.
"^DD",8973,8973,3.11,"DT")
3040401
"^DD",8973,8973,3.12,0)
HL7 DLY PURGE START^D^^3;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.12,3)
(No range limit on date)
"^DD",8973,8973,3.12,"DT")
3031121
"^DD",8973,8973,3.13,0)
HL7 DLY PURGE END^D^^3;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.13,3)
(No range limit on date)
"^DD",8973,8973,3.13,"DT")
3031121
"^DD",8973,8973,3.14,0)
HL7 DLY PURGE DELTA^F^^3;14^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.14,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,3.14,"DT")
3031121
"^DD",8973,8973,3.15,0)
HL7 WKY PURGE START^D^^3;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.15,3)
(No range limit on date)
"^DD",8973,8973,3.15,"DT")
3031121
"^DD",8973,8973,3.16,0)
HL7 WKY PURGE END^D^^3;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,3.16,3)
(No range limit on date)
"^DD",8973,8973,3.16,"DT")
3031121
"^DD",8973,8973,3.17,0)
HL7 WKY PURGE DELTA^F^^3;17^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,3.17,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,3.17,"DT")
3031121
"^DD",8973,8973,4.05,0)
TIMING DLY BKG START^D^^4;5^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.05,3)
Most recent Start Time for the Timing daily background job.
"^DD",8973,8973,4.05,"DT")
3040401
"^DD",8973,8973,4.06,0)
TIMING DLY BKG STOP^D^^4;6^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.06,3)
Most recent Stop Time for the Timing daily background job.
"^DD",8973,8973,4.06,"DT")
3040401
"^DD",8973,8973,4.07,0)
TIMING DLY BKG DELTA^F^^4;7^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.07,3)
Most recent Delat for the Timing daily background job.
"^DD",8973,8973,4.07,"DT")
3040401
"^DD",8973,8973,4.08,0)
TIMING WKY BKG START^D^^4;8^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.08,3)
Most recent Start Time for the Timing weekly background job.
"^DD",8973,8973,4.08,"DT")
3040401
"^DD",8973,8973,4.09,0)
TIMING WKY BKG STOP^D^^4;9^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.09,3)
Most recent Stop Time for the Timing weekly background job.
"^DD",8973,8973,4.09,"DT")
3040401
"^DD",8973,8973,4.1,0)
TIMING WKY BKG DELTA^F^^4;10^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.1,3)
Most recent Delta for the Timing weekly background job.
"^DD",8973,8973,4.1,"DT")
3040401
"^DD",8973,8973,4.11,0)
TIMING WEEKS TO KEEP DATA^NJ2,0^^4;11^K:+X'=X!(X>40)!(X<2)!(X?.E1"."1.N) X
"^DD",8973,8973,4.11,3)
This is the number of weeks that Timing data will be retained in file #8973.2 before purging.  It is recommended that 4 weeks of data be retained.             
"^DD",8973,8973,4.11,"DT")
3031211
"^DD",8973,8973,4.12,0)
TIMING DLY PURGE START^D^^4;12^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.12,3)
(No range limit on date)
"^DD",8973,8973,4.12,"DT")
3031121
"^DD",8973,8973,4.13,0)
TIMING DLY PURGE END^D^^4;13^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.13,3)
(No range limit on date)
"^DD",8973,8973,4.13,"DT")
3031121
"^DD",8973,8973,4.14,0)
TIMING DLY PURGE DELTA^F^^4;14^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.14,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,4.14,"DT")
3031121
"^DD",8973,8973,4.15,0)
TIMING WKY PURGE START^D^^4;15^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.15,3)
(No range limit on date)
"^DD",8973,8973,4.15,"DT")
3031121
"^DD",8973,8973,4.16,0)
TIMING WKY PURGE END^D^^4;16^S %DT="EST" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,4.16,3)
(No range limit on date)
"^DD",8973,8973,4.16,"DT")
3031121
"^DD",8973,8973,4.17,0)
TIMING WKY PURGE DELTA^F^^4;17^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973,4.17,3)
Answer must be 1-20 characters in length
"^DD",8973,8973,4.17,"DT")
3031121
"^DD",8973,8973,5.01,0)
SCHEDULED DOWN TIME START^D^^5;1^S %DT="ESTXR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,5.01,3)
Enter the Date/Time that Scheduled Down Time is to begin.  You cannot enter a 'Scheduled Down Time Stop' unless this field has an entry.
"^DD",8973,8973,5.01,"DT")
3060412
"^DD",8973,8973,5.02,0)
SCHEDULED DOWN TIME STOP^D^^5;2^S %DT="ESTR" D ^%DT S X=Y K:X<1 X
"^DD",8973,8973,5.02,3)
Enter the Date/Time that the Scheduled Down Time will end.
"^DD",8973,8973,5.02,"DT")
3060412
"^DD",8973,8973,5.03,0)
REASON FOR DOWN TIME^F^^5;3^K:$L(X)>65!($L(X)<1) X
"^DD",8973,8973,5.03,3)
Answer must be 1-65 characters in length
"^DD",8973,8973,5.03,"DT")
3060412
"^DD",8973,8973,19.01,0)
MONITOR UPDATE RATE - MINUTES^NJ2,0^^19;1^K:+X'=X!(X>60)!(X<5)!(X?.E1"."1.N) X
"^DD",8973,8973,19.01,3)
When the Timing Monitor is running, this is the number of minutes between automatic updates. (Type a number between 5 and 60)
"^DD",8973,8973,19.01,"DT")
3040213
"^DD",8973,8973,19.02,0)
MONITOR ALERT - SECONDS^NJ3,0^^19;2^K:+X'=X!(X>999)!(X<10)!(X?.E1"."1.N) X
"^DD",8973,8973,19.02,3)
When the Timing Monitor is running, if the average time-to-load a CPRS Coversheet exceeds this value, an alert will appear on the Timing Monitor screen. (Type a number between 10 and 999)
"^DD",8973,8973,19.02,"DT")
3040213
"^DD",8973,8973,20,0)
CPU^8973.201^^20;0
"^DD",8973,8973,20,21,0)
^^1^1^3040401^
"^DD",8973,8973,20,21,1,0)
Current CPU/Node data.
"^DD",8973,8973,21.1,0)
SAGG TRANSMIT TO^8973.01^^21.1;0
"^DD",8973,8973,21.1,21,0)
^^3^3^3040901^^^
"^DD",8973,8973,21.1,21,1,0)
This represents the location(s) where the SAGG data is transmitted after 
"^DD",8973,8973,21.1,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.1,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.2,0)
RUM TRANSMIT TO^8973.02^^21.2;0
"^DD",8973,8973,21.2,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.2,21,1,0)
This represents the location(s) where the RUM data is transmitted after 
"^DD",8973,8973,21.2,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.2,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.3,0)
HL7 TRANSMIT TO^8973.03^^21.3;0
"^DD",8973,8973,21.3,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.3,21,1,0)
This represents the location(s) where the HL7 data is transmitted after 
"^DD",8973,8973,21.3,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.3,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.4,0)
TIMING TRANSMIT TO^8973.04^^21.4;0
"^DD",8973,8973,21.4,21,0)
^^3^3^3040901^^
"^DD",8973,8973,21.4,21,1,0)
This represents the location(s) where the TIMING data is transmitted after
"^DD",8973,8973,21.4,21,2,0)
being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY 
"^DD",8973,8973,21.4,21,3,0)
THE LOCAL FACILITY ***
"^DD",8973,8973,21.5,0)
VISTA MONITOR TRANSMIT TO^8973.05^^21.5;0
"^DD",8973,8973.01,0)
SAGG TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.01,0,"DT")
3040720
"^DD",8973,8973.01,0,"IX","B",8973.01,.01)

"^DD",8973,8973.01,0,"NM","SAGG TRANSMIT TO")

"^DD",8973,8973.01,0,"UP")
8973
"^DD",8973,8973.01,.01,0)
SAGG TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.01,.01,1,0)
^.1
"^DD",8973,8973.01,.01,1,1,0)
8973.01^B
"^DD",8973,8973.01,.01,1,1,1)
S ^KMPD(8973,DA(1),21.1,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.01,.01,1,1,2)
K ^KMPD(8973,DA(1),21.1,"B",$E(X,1,30),DA)
"^DD",8973,8973.01,.01,3)
This represents the location(s) where the SAGG data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.01,.01,"DT")
3040901
"^DD",8973,8973.02,0)
RUM TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.02,0,"DT")
3040720
"^DD",8973,8973.02,0,"IX","B",8973.02,.01)

"^DD",8973,8973.02,0,"NM","RUM TRANSMIT TO")

"^DD",8973,8973.02,0,"UP")
8973
"^DD",8973,8973.02,.01,0)
RUM TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.02,.01,1,0)
^.1
"^DD",8973,8973.02,.01,1,1,0)
8973.02^B
"^DD",8973,8973.02,.01,1,1,1)
S ^KMPD(8973,DA(1),21.2,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.02,.01,1,1,2)
K ^KMPD(8973,DA(1),21.2,"B",$E(X,1,30),DA)
"^DD",8973,8973.02,.01,3)
This represents the location(s) where the RUM data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.02,.01,"DT")
3040901
"^DD",8973,8973.03,0)
HL7 TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.03,0,"DT")
3040720
"^DD",8973,8973.03,0,"IX","B",8973.03,.01)

"^DD",8973,8973.03,0,"NM","HL7 TRANSMIT TO")

"^DD",8973,8973.03,0,"UP")
8973
"^DD",8973,8973.03,.01,0)
HL7 TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.03,.01,1,0)
^.1
"^DD",8973,8973.03,.01,1,1,0)
8973.03^B
"^DD",8973,8973.03,.01,1,1,1)
S ^KMPD(8973,DA(1),21.3,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.03,.01,1,1,2)
K ^KMPD(8973,DA(1),21.3,"B",$E(X,1,30),DA)
"^DD",8973,8973.03,.01,3)
This represents the location(s) where the HL7 data is transmitted after being compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.03,.01,"DT")
3040901
"^DD",8973,8973.04,0)
TIMING TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.04,0,"DT")
3040720
"^DD",8973,8973.04,0,"IX","B",8973.04,.01)

"^DD",8973,8973.04,0,"NM","TIMING TRANSMIT TO")

"^DD",8973,8973.04,0,"UP")
8973
"^DD",8973,8973.04,.01,0)
TIMING TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.04,.01,1,0)
^.1
"^DD",8973,8973.04,.01,1,1,0)
8973.04^B
"^DD",8973,8973.04,.01,1,1,1)
S ^KMPD(8973,DA(1),21.4,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.04,.01,1,1,2)
K ^KMPD(8973,DA(1),21.4,"B",$E(X,1,30),DA)
"^DD",8973,8973.04,.01,3)
This represents the location(s) where the TIMING data is transmitted afterbeing compiled at the sites.  *** THESE ENTRIES SHOULD NOT BE CHANGED BY THE LOCAL FACILITY ***
"^DD",8973,8973.04,.01,"DT")
3040901
"^DD",8973,8973.05,0)
VISTA MONITOR TRANSMIT TO SUB-FIELD^^.01^1
"^DD",8973,8973.05,0,"DT")
3060412
"^DD",8973,8973.05,0,"IX","B",8973.05,.01)

"^DD",8973,8973.05,0,"NM","VISTA MONITOR TRANSMIT TO")

"^DD",8973,8973.05,0,"UP")
8973
"^DD",8973,8973.05,.01,0)
VISTA MONITOR TRANSMIT TO^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",8973,8973.05,.01,1,0)
^.1
"^DD",8973,8973.05,.01,1,1,0)
8973.05^B
"^DD",8973,8973.05,.01,1,1,1)
S ^KMPD(8973,DA(1),21.5,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.05,.01,1,1,2)
K ^KMPD(8973,DA(1),21.5,"B",$E(X,1,30),DA)
"^DD",8973,8973.05,.01,3)
Answer must be 1-45 characters in length
"^DD",8973,8973.05,.01,"DT")
3060412
"^DD",8973,8973.201,0)
CPU SUB-FIELD^^.05^5
"^DD",8973,8973.201,0,"DT")
3031125
"^DD",8973,8973.201,0,"IX","B",8973.201,.01)

"^DD",8973,8973.201,0,"NM","CPU")

"^DD",8973,8973.201,0,"UP")
8973
"^DD",8973,8973.201,.01,0)
NODE^F^^0;1^K:$L(X)>30!($L(X)<1) X
"^DD",8973,8973.201,.01,1,0)
^.1
"^DD",8973,8973.201,.01,1,1,0)
8973.201^B
"^DD",8973,8973.201,.01,1,1,1)
S ^KMPD(8973,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",8973,8973.201,.01,1,1,2)
K ^KMPD(8973,DA(1),20,"B",$E(X,1,30),DA)
"^DD",8973,8973.201,.01,3)
Node name. Answer must be 1-30 characters in length
"^DD",8973,8973.201,.01,"DT")
3040401
"^DD",8973,8973.201,.02,0)
TYPE OF CPU^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",8973,8973.201,.02,3)
Type of CPU for this node. Answer must be 1-60 characters in length
"^DD",8973,8973.201,.02,"DT")
3040401
"^DD",8973,8973.201,.03,0)
NUMBER OF PROCESSORS^NJ3,0^^0;3^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1.N) X
"^DD",8973,8973.201,.03,3)
Number of processors for this node. Type a number between 0 and 999, 0 Decimal Digits
"^DD",8973,8973.201,.03,"DT")
3040401
"^DD",8973,8973.201,.04,0)
PROCESSOR SPEED^F^^0;4^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973.201,.04,3)
Processor speed for this node. Answer must be 1-20 characters in length
"^DD",8973,8973.201,.04,"DT")
3040401
"^DD",8973,8973.201,.05,0)
AMOUNT OF MEMORY^F^^0;5^K:$L(X)>20!($L(X)<1) X
"^DD",8973,8973.201,.05,3)
Amount of memory for this node. Answer must be 1-20 characters in length
"^DD",8973,8973.201,.05,"DT")
3040401
"^DIC",8973,8973,0)
CP PARAMETERS^8973
"^DIC",8973,8973,0,"GL")
^KMPD(8973,
"^DIC",8973,8973,"%",0)
^1.005^^0
"^DIC",8973,8973,"%D",0)
^^5^5^3040401^
"^DIC",8973,8973,"%D",1,0)
This file keeps track of all editable parameters for Capacity Planning 
"^DIC",8973,8973,"%D",2,0)
packages.  It also stores Start, Stop and Delta times for background 
"^DIC",8973,8973,"%D",3,0)
jobs, as well as CPU Node data.  There is only one entry allowed in this 
"^DIC",8973,8973,"%D",4,0)
file, and is a pointer to the Institution file taken from the first piece 
"^DIC",8973,8973,"%D",5,0)
of the $$SITE^VASITE extrinsic function.
"^DIC",8973,"B","CP PARAMETERS",8973)

"BLD",6733,6)
^5
**END**
**END**
