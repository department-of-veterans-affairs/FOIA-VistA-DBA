KIDS Distribution saved on Mar 06, 2001@13:46:11
PXRM*1.5*2 Build 03/06/2001
**KIDS**:PXRM*1.5*2^

**INSTALL NAME**
PXRM*1.5*2
"BLD",2430,0)
PXRM*1.5*2^CLINICAL REMINDERS^0^3010306^y
"BLD",2430,1,0)
^^3^3^3001208^^^
"BLD",2430,1,1,0)
Clinical Reminders version 1.5 patch 2. This patch includes a number of
"BLD",2430,1,2,0)
bug fixes and enhancements. Please see the National Patch module for a
"BLD",2430,1,3,0)
complete description.
"BLD",2430,4,0)
^9.64PA^811.2^5
"BLD",2430,4,800,0)
800
"BLD",2430,4,800,222)
y^y^f^^^^n
"BLD",2430,4,801.41,0)
801.41
"BLD",2430,4,801.41,222)
y^y^f^^^^n
"BLD",2430,4,811.2,0)
811.2
"BLD",2430,4,811.2,222)
y^y^f^^^^n
"BLD",2430,4,811.5,0)
811.5
"BLD",2430,4,811.5,222)
y^y^f^^^^n
"BLD",2430,4,811.9,0)
811.9
"BLD",2430,4,811.9,222)
y^y^f^^y^^y^r^n
"BLD",2430,4,811.9,224)
I $P(^PXD(811.9,Y,0),U,1)="VA-HEP C RISK ASSESSMENT"
"BLD",2430,4,"B",800,800)

"BLD",2430,4,"B",801.41,801.41)

"BLD",2430,4,"B",811.2,811.2)

"BLD",2430,4,"B",811.5,811.5)

"BLD",2430,4,"B",811.9,811.9)

"BLD",2430,"ABNS",0)
^9.66A^^0
"BLD",2430,"ABPKG")
n
"BLD",2430,"GLO",0)
^9.65
"BLD",2430,"INI")
PRE^PXRMP2I
"BLD",2430,"INID")
^y
"BLD",2430,"INIT")
POST^PXRMP2I
"BLD",2430,"KRN",0)
^9.67PA^19^17
"BLD",2430,"KRN",.4,0)
.4
"BLD",2430,"KRN",.4,"NM",0)
^9.68A^5^5
"BLD",2430,"KRN",.4,"NM",1,0)
PXRM TAXONOMY INQUIRY    FILE #811.2^811.2^0
"BLD",2430,"KRN",.4,"NM",2,0)
PXRM TAXONOMY LIST    FILE #811.2^811.2^0
"BLD",2430,"KRN",.4,"NM",3,0)
PXRM DEFINITION INQUIRY    FILE #811.9^811.9^0
"BLD",2430,"KRN",.4,"NM",4,0)
PXRM DEFINITION LIST    FILE #811.9^811.9^0
"BLD",2430,"KRN",.4,"NM",5,0)
PXRM TERM INQUIRY    FILE #811.5^811.5^0
"BLD",2430,"KRN",.4,"NM","B","PXRM DEFINITION INQUIRY    FILE #811.9",3)

"BLD",2430,"KRN",.4,"NM","B","PXRM DEFINITION LIST    FILE #811.9",4)

"BLD",2430,"KRN",.4,"NM","B","PXRM TAXONOMY INQUIRY    FILE #811.2",1)

"BLD",2430,"KRN",.4,"NM","B","PXRM TAXONOMY LIST    FILE #811.2",2)

"BLD",2430,"KRN",.4,"NM","B","PXRM TERM INQUIRY    FILE #811.5",5)

"BLD",2430,"KRN",.401,0)
.401
"BLD",2430,"KRN",.402,0)
.402
"BLD",2430,"KRN",.402,"NM",0)
^9.68A^3^3
"BLD",2430,"KRN",.402,"NM",1,0)
PXRM EDIT NATIONAL TERM    FILE #811.5^811.5^0
"BLD",2430,"KRN",.402,"NM",2,0)
PXRM EDIT REMINDER TERM    FILE #811.5^811.5^0
"BLD",2430,"KRN",.402,"NM",3,0)
PXRM EDIT GROUP    FILE #801.41^801.41^0
"BLD",2430,"KRN",.402,"NM","B","PXRM EDIT GROUP    FILE #801.41",3)

"BLD",2430,"KRN",.402,"NM","B","PXRM EDIT NATIONAL TERM    FILE #811.5",1)

"BLD",2430,"KRN",.402,"NM","B","PXRM EDIT REMINDER TERM    FILE #811.5",2)

"BLD",2430,"KRN",.403,0)
.403
"BLD",2430,"KRN",.5,0)
.5
"BLD",2430,"KRN",.84,0)
.84
"BLD",2430,"KRN",3.6,0)
3.6
"BLD",2430,"KRN",3.8,0)
3.8
"BLD",2430,"KRN",9.2,0)
9.2
"BLD",2430,"KRN",9.8,0)
9.8
"BLD",2430,"KRN",9.8,"NM",0)
^9.68A^79^78
"BLD",2430,"KRN",9.8,"NM",1,0)
PXRMPTTX^^0^B8438932
"BLD",2430,"KRN",9.8,"NM",2,0)
PXRMPTDF^^0^B29593414
"BLD",2430,"KRN",9.8,"NM",3,0)
PXRMPTTR^^0^B8136557
"BLD",2430,"KRN",9.8,"NM",4,0)
PXRMPT^^1^
"BLD",2430,"KRN",9.8,"NM",5,0)
PXRMPINF^^0^B7124501
"BLD",2430,"KRN",9.8,"NM",6,0)
PXRMP2I^^0^B23505083
"BLD",2430,"KRN",9.8,"NM",7,0)
PXRMPDEM^^0^B546495
"BLD",2430,"KRN",9.8,"NM",8,0)
PXRMRLST^^0^B16348497
"BLD",2430,"KRN",9.8,"NM",9,0)
PXRMINQ^^0^B14960255
"BLD",2430,"KRN",9.8,"NM",10,0)
PXRMOPT^^0^B47772166
"BLD",2430,"KRN",9.8,"NM",11,0)
PXRMPTL^^0^B21462533
"BLD",2430,"KRN",9.8,"NM",12,0)
PXRMERRH^^0^B8878807
"BLD",2430,"KRN",9.8,"NM",13,0)
PXRMAGE^^0^B16394917
"BLD",2430,"KRN",9.8,"NM",14,0)
PXRMDGEN^^0^B11656658
"BLD",2430,"KRN",9.8,"NM",15,0)
PXRMDRCL^^0^B11856488
"BLD",2430,"KRN",9.8,"NM",16,0)
PXRM^^0^B18748706
"BLD",2430,"KRN",9.8,"NM",17,0)
PXRMDRUG^^0^B36009083
"BLD",2430,"KRN",9.8,"NM",18,0)
PXRMBXTL^^0^B21513893
"BLD",2430,"KRN",9.8,"NM",19,0)
PXRMDGPT^^0^B46292310
"BLD",2430,"KRN",9.8,"NM",20,0)
PXRMPROB^^0^B16055665
"BLD",2430,"KRN",9.8,"NM",21,0)
PXRMRCPT^^0^B7037292
"BLD",2430,"KRN",9.8,"NM",22,0)
PXRMTEDT^^0^B2655664
"BLD",2430,"KRN",9.8,"NM",23,0)
PXRMVCPT^^0^B6054986
"BLD",2430,"KRN",9.8,"NM",24,0)
PXRMVPOV^^0^B11449901
"BLD",2430,"KRN",9.8,"NM",25,0)
PXRMTAX^^0^B33271885
"BLD",2430,"KRN",9.8,"NM",26,0)
PXRMDATE^^0^B22168619
"BLD",2430,"KRN",9.8,"NM",27,0)
PXRMUTIL^^0^B30829984
"BLD",2430,"KRN",9.8,"NM",28,0)
PXRMREDF^^0^B8709118
"BLD",2430,"KRN",9.8,"NM",29,0)
PXRMCF^^0^B10317924
"BLD",2430,"KRN",9.8,"NM",30,0)
PXRMEDU^^0^B12792432
"BLD",2430,"KRN",9.8,"NM",31,0)
PXRMEXAM^^0^B12406716
"BLD",2430,"KRN",9.8,"NM",32,0)
PXRMHF^^0^B49214625
"BLD",2430,"KRN",9.8,"NM",33,0)
PXRMIMM^^0^B15739541
"BLD",2430,"KRN",9.8,"NM",34,0)
PXRMLAB^^0^B13511017
"BLD",2430,"KRN",9.8,"NM",35,0)
PXRMMEAS^^0^B13386405
"BLD",2430,"KRN",9.8,"NM",36,0)
PXRMMH^^0^B26447410
"BLD",2430,"KRN",9.8,"NM",37,0)
PXRMORDR^^0^B14979958
"BLD",2430,"KRN",9.8,"NM",38,0)
PXRMSKIN^^0^B14293982
"BLD",2430,"KRN",9.8,"NM",39,0)
PXRMDD41^^0^B2389561
"BLD",2430,"KRN",9.8,"NM",40,0)
PXRMDLG^^0^B47159375
"BLD",2430,"KRN",9.8,"NM",41,0)
PXRMDLL^^0^B69798929
"BLD",2430,"KRN",9.8,"NM",42,0)
PXRMDLLA^^0^B63741794
"BLD",2430,"KRN",9.8,"NM",43,0)
PXRMHOST^^0^B1998602
"BLD",2430,"KRN",9.8,"NM",45,0)
PXRMRPCC^^0^B7690435
"BLD",2430,"KRN",9.8,"NM",46,0)
PXRMXAP^^0^B9535073
"BLD",2430,"KRN",9.8,"NM",47,0)
PXRMRIN2^^1^
"BLD",2430,"KRN",9.8,"NM",48,0)
PXRMRIN3^^1^
"BLD",2430,"KRN",9.8,"NM",49,0)
PXRMV1I^^1^
"BLD",2430,"KRN",9.8,"NM",50,0)
PXRMV1IA^^1^
"BLD",2430,"KRN",9.8,"NM",51,0)
PXRMV1ID^^1^
"BLD",2430,"KRN",9.8,"NM",52,0)
PXRMV1IE^^1^
"BLD",2430,"KRN",9.8,"NM",53,0)
PXRMV1IG^^1^
"BLD",2430,"KRN",9.8,"NM",54,0)
PXRMV1IH^^1^
"BLD",2430,"KRN",9.8,"NM",55,0)
PXRMV1X^^1^
"BLD",2430,"KRN",9.8,"NM",56,0)
PXRMV1X1^^1^
"BLD",2430,"KRN",9.8,"NM",57,0)
PXRMDLG1^^0^B73000626
"BLD",2430,"KRN",9.8,"NM",58,0)
PXRMDLG2^^0^B26989419
"BLD",2430,"KRN",9.8,"NM",59,0)
PXRMDHLP^^0^B101582733
"BLD",2430,"KRN",9.8,"NM",60,0)
PXRMDLGZ^^0^B36071403
"BLD",2430,"KRN",9.8,"NM",61,0)
PXRMDEDT^^0^B72072397
"BLD",2430,"KRN",9.8,"NM",62,0)
PXRMRPCA^^0^B57862657
"BLD",2430,"KRN",9.8,"NM",63,0)
PXRMTDLG^^0^B14695875
"BLD",2430,"KRN",9.8,"NM",64,0)
PXRMGEDT^^0^B45680272
"BLD",2430,"KRN",9.8,"NM",65,0)
PXRMTDUP^^0^B16688355
"BLD",2430,"KRN",9.8,"NM",66,0)
PXRMLOG^^0^B51428655
"BLD",2430,"KRN",9.8,"NM",67,0)
PXRMDCPY^^0^B37469673
"BLD",2430,"KRN",9.8,"NM",68,0)
PXRMDLGH^^0^B22319099
"BLD",2430,"KRN",9.8,"NM",69,0)
PXRMSEL^^0^B75458515
"BLD",2430,"KRN",9.8,"NM",70,0)
PXRMCAT^^0^B14734475
"BLD",2430,"KRN",9.8,"NM",71,0)
PXRMXPR^^0^B34569004
"BLD",2430,"KRN",9.8,"NM",72,0)
PXRMMSG^^0^B1161029
"BLD",2430,"KRN",9.8,"NM",73,0)
PXRMFOUT^^0^B10274034
"BLD",2430,"KRN",9.8,"NM",74,0)
PXRMHL7^^0^B1783418
"BLD",2430,"KRN",9.8,"NM",75,0)
PXRMRAD^^0^B19698649
"BLD",2430,"KRN",9.8,"NM",76,0)
PXRMRUTL^^0^B4608645
"BLD",2430,"KRN",9.8,"NM",77,0)
PXRMVPTR^^0^B1695071
"BLD",2430,"KRN",9.8,"NM",78,0)
PXRMCFED^^0^B1447960
"BLD",2430,"KRN",9.8,"NM",79,0)
PXRMVSIT^^0^B1766365
"BLD",2430,"KRN",9.8,"NM","B","PXRM",16)

"BLD",2430,"KRN",9.8,"NM","B","PXRMAGE",13)

"BLD",2430,"KRN",9.8,"NM","B","PXRMBXTL",18)

"BLD",2430,"KRN",9.8,"NM","B","PXRMCAT",70)

"BLD",2430,"KRN",9.8,"NM","B","PXRMCF",29)

"BLD",2430,"KRN",9.8,"NM","B","PXRMCFED",78)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDATE",26)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDCPY",67)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDD41",39)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDEDT",61)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDGEN",14)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDGPT",19)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDHLP",59)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLG",40)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLG1",57)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLG2",58)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLGH",68)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLGZ",60)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLL",41)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDLLA",42)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDRCL",15)

"BLD",2430,"KRN",9.8,"NM","B","PXRMDRUG",17)

"BLD",2430,"KRN",9.8,"NM","B","PXRMEDU",30)

"BLD",2430,"KRN",9.8,"NM","B","PXRMERRH",12)

"BLD",2430,"KRN",9.8,"NM","B","PXRMEXAM",31)

"BLD",2430,"KRN",9.8,"NM","B","PXRMFOUT",73)

"BLD",2430,"KRN",9.8,"NM","B","PXRMGEDT",64)

"BLD",2430,"KRN",9.8,"NM","B","PXRMHF",32)

"BLD",2430,"KRN",9.8,"NM","B","PXRMHL7",74)

"BLD",2430,"KRN",9.8,"NM","B","PXRMHOST",43)

"BLD",2430,"KRN",9.8,"NM","B","PXRMIMM",33)

"BLD",2430,"KRN",9.8,"NM","B","PXRMINQ",9)

"BLD",2430,"KRN",9.8,"NM","B","PXRMLAB",34)

"BLD",2430,"KRN",9.8,"NM","B","PXRMLOG",66)

"BLD",2430,"KRN",9.8,"NM","B","PXRMMEAS",35)

"BLD",2430,"KRN",9.8,"NM","B","PXRMMH",36)

"BLD",2430,"KRN",9.8,"NM","B","PXRMMSG",72)

"BLD",2430,"KRN",9.8,"NM","B","PXRMOPT",10)

"BLD",2430,"KRN",9.8,"NM","B","PXRMORDR",37)

"BLD",2430,"KRN",9.8,"NM","B","PXRMP2I",6)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPDEM",7)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPINF",5)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPROB",20)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPT",4)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPTDF",2)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPTL",11)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPTTR",3)

"BLD",2430,"KRN",9.8,"NM","B","PXRMPTTX",1)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRAD",75)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRCPT",21)

"BLD",2430,"KRN",9.8,"NM","B","PXRMREDF",28)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRIN2",47)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRIN3",48)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRLST",8)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRPCA",62)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRPCC",45)

"BLD",2430,"KRN",9.8,"NM","B","PXRMRUTL",76)

"BLD",2430,"KRN",9.8,"NM","B","PXRMSEL",69)

"BLD",2430,"KRN",9.8,"NM","B","PXRMSKIN",38)

"BLD",2430,"KRN",9.8,"NM","B","PXRMTAX",25)

"BLD",2430,"KRN",9.8,"NM","B","PXRMTDLG",63)

"BLD",2430,"KRN",9.8,"NM","B","PXRMTDUP",65)

"BLD",2430,"KRN",9.8,"NM","B","PXRMTEDT",22)

"BLD",2430,"KRN",9.8,"NM","B","PXRMUTIL",27)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1I",49)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1IA",50)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1ID",51)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1IE",52)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1IG",53)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1IH",54)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1X",55)

"BLD",2430,"KRN",9.8,"NM","B","PXRMV1X1",56)

"BLD",2430,"KRN",9.8,"NM","B","PXRMVCPT",23)

"BLD",2430,"KRN",9.8,"NM","B","PXRMVPOV",24)

"BLD",2430,"KRN",9.8,"NM","B","PXRMVPTR",77)

"BLD",2430,"KRN",9.8,"NM","B","PXRMVSIT",79)

"BLD",2430,"KRN",9.8,"NM","B","PXRMXAP",46)

"BLD",2430,"KRN",9.8,"NM","B","PXRMXPR",71)

"BLD",2430,"KRN",19,0)
19
"BLD",2430,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",2430,"KRN",19,"NM",1,0)
PXRM TAXONOMY EDIT^^0
"BLD",2430,"KRN",19,"NM","B","PXRM TAXONOMY EDIT",1)

"BLD",2430,"KRN",19.1,0)
19.1
"BLD",2430,"KRN",101,0)
101
"BLD",2430,"KRN",101,"NM",0)
^9.68A^7^7
"BLD",2430,"KRN",101,"NM",1,0)
PXRM DIALOG GROUP MENU^^0
"BLD",2430,"KRN",101,"NM",2,0)
PXRM DIALOG DETAILS^^0
"BLD",2430,"KRN",101,"NM",3,0)
PXRM DIALOG EXIT^^0
"BLD",2430,"KRN",101,"NM",4,0)
PXRM DIALOG P/N TEXT^^0
"BLD",2430,"KRN",101,"NM",5,0)
PXRM DIALOG EDIT^^0
"BLD",2430,"KRN",101,"NM",6,0)
PXRM DIALOG COPY^^0
"BLD",2430,"KRN",101,"NM",7,0)
PXRM DIALOG TEXT^^0
"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG COPY",6)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG DETAILS",2)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG EDIT",5)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG EXIT",3)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG GROUP MENU",1)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG P/N TEXT",4)

"BLD",2430,"KRN",101,"NM","B","PXRM DIALOG TEXT",7)

"BLD",2430,"KRN",409.61,0)
409.61
"BLD",2430,"KRN",771,0)
771
"BLD",2430,"KRN",870,0)
870
"BLD",2430,"KRN",8994,0)
8994
"BLD",2430,"KRN","B",.4,.4)

"BLD",2430,"KRN","B",.401,.401)

"BLD",2430,"KRN","B",.402,.402)

"BLD",2430,"KRN","B",.403,.403)

"BLD",2430,"KRN","B",.5,.5)

"BLD",2430,"KRN","B",.84,.84)

"BLD",2430,"KRN","B",3.6,3.6)

"BLD",2430,"KRN","B",3.8,3.8)

"BLD",2430,"KRN","B",9.2,9.2)

"BLD",2430,"KRN","B",9.8,9.8)

"BLD",2430,"KRN","B",19,19)

"BLD",2430,"KRN","B",19.1,19.1)

"BLD",2430,"KRN","B",101,101)

"BLD",2430,"KRN","B",409.61,409.61)

"BLD",2430,"KRN","B",771,771)

"BLD",2430,"KRN","B",870,870)

"BLD",2430,"KRN","B",8994,8994)

"BLD",2430,"PRET")

"BLD",2430,"QUES",0)
^9.62^^
"BLD",2430,"REQB",0)
^9.611^3^3
"BLD",2430,"REQB",1,0)
PXRM*1.5*3^2
"BLD",2430,"REQB",2,0)
PSO*7.0*54^2
"BLD",2430,"REQB",3,0)
DI*22.0*67^2
"BLD",2430,"REQB","B","DI*22.0*67",3)

"BLD",2430,"REQB","B","PSO*7.0*54",2)

"BLD",2430,"REQB","B","PXRM*1.5*3",1)

"DATA",811.9,27,0)
VA-HEP C RISK ASSESSMENT^^Hepatitis C Risk Assessment^^^
"DATA",811.9,27,1,0)
^811.92^3^3^3000828^^^^
"DATA",811.9,27,1,1,0)
Assess all patients for hepatitis C risk factors once. Patients with a
"DATA",811.9,27,1,2,0)
previous laboratory test for hepatitis C or a previous diagnosis of
"DATA",811.9,27,1,3,0)
hepatitis C do not require further risk assessment.
"DATA",811.9,27,2,0)
^^79^79^3000828^
"DATA",811.9,27,2,1,0)
This reminder is based on a policy letter published by the Under Secretary
"DATA",811.9,27,2,2,0)
of Health (USH) in June 1998.  The USH directed that "all patients will be
"DATA",811.9,27,2,3,0)
evaluated with respect to risk factors" for HCV. Clinicians are required
"DATA",811.9,27,2,4,0)
to record this assessment in the patients' medical records.  Based on risk
"DATA",811.9,27,2,5,0)
factors, antibody testing should be used according to an algorithm
"DATA",811.9,27,2,6,0)
included in the policy letter. 
"DATA",811.9,27,2,7,0)
 
"DATA",811.9,27,2,8,0)
According to the VHA Chief Consultant for its Acute Care Strategic Health
"DATA",811.9,27,2,9,0)
Care Group, the USH intends that each patient seeking care in a VHA
"DATA",811.9,27,2,10,0)
facility will be screened for HCV risk factors.  VISN officials were
"DATA",811.9,27,2,11,0)
advised of this mandate.
"DATA",811.9,27,2,12,0)
 
"DATA",811.9,27,2,13,0)
BEFORE USING THIS REMINDER, sites need to use the Reminder Term
"DATA",811.9,27,2,14,0)
Management option to define the local findings that are used to
"DATA",811.9,27,2,15,0)
represent the national reminder terms:
"DATA",811.9,27,2,16,0)
 
"DATA",811.9,27,2,17,0)
   RISK FACTOR FOR HEPATITIS C
"DATA",811.9,27,2,18,0)
     This term is released with the health factor RISK FACTOR FOR
"DATA",811.9,27,2,19,0)
     HEPATITIS C.  Map any local findings that meet the intent of this
"DATA",811.9,27,2,20,0)
     term in the REMINDER TERM file (811.5).
"DATA",811.9,27,2,21,0)
 
"DATA",811.9,27,2,22,0)
   NO RISK FACTORS FOR HEP C
"DATA",811.9,27,2,23,0)
     This term is released with the health factor NO RISK FACTORS FOR HEP
"DATA",811.9,27,2,24,0)
     C.  Map any local findings that meet the intent of this term in the
"DATA",811.9,27,2,25,0)
     REMINDER TERM file (811.5).
"DATA",811.9,27,2,26,0)
 
"DATA",811.9,27,2,27,0)
   DECLINED HEP C RISK ASSESSMENT 
"DATA",811.9,27,2,28,0)
     This term is released with the health factor NO RISK FACTORS FOR HEP
"DATA",811.9,27,2,29,0)
     C.  Map any local findings that meet the intent of this term in the
"DATA",811.9,27,2,30,0)
     REMINDER TERM file (811.5).
"DATA",811.9,27,2,31,0)
 
"DATA",811.9,27,2,32,0)
   PREVIOUSLY ASSESSED HEP C RISK
"DATA",811.9,27,2,33,0)
     This term is released with the health factor PREV POSITIVE TEST FOR
"DATA",811.9,27,2,34,0)
     HEP C. Map any local findings that identify the patient as previously
"DATA",811.9,27,2,35,0)
     assessed for Hepatitis C risk factors in the REMINDER TERM file
"DATA",811.9,27,2,36,0)
     (811.5). This term was originally distributed as PREV POSITIVE TEST
"DATA",811.9,27,2,37,0)
     FOR HEP C, but was changed to provide sites with a way to identify a
"DATA",811.9,27,2,38,0)
     patient as previously assessed for Hepatitis C risk factors.
"DATA",811.9,27,2,39,0)
 
"DATA",811.9,27,2,40,0)
     This term will also be used to document historical positive
"DATA",811.9,27,2,41,0)
     tests completed outside the facility.
"DATA",811.9,27,2,42,0)
 
"DATA",811.9,27,2,43,0)
   HEP C VIRUS ANTIBODY POSITIVE
"DATA",811.9,27,2,44,0)
     Map local HCVAb lab tests with a condition in the REMINDER TERM file.
"DATA",811.9,27,2,45,0)
     An example of the condition field might be: I V="positive"
"DATA",811.9,27,2,46,0)
     or I (V["P")!(V["p"). The text used in the condition definition 
"DATA",811.9,27,2,47,0)
     (I V="text") should be based on the local LABORATORY TEST file (60)
"DATA",811.9,27,2,48,0)
     print codes when defined, rather than the result in the LAB DATA file
"DATA",811.9,27,2,49,0)
     (63).
"DATA",811.9,27,2,50,0)
 
"DATA",811.9,27,2,51,0)
   HEP C VIRUS ANTIBODY NEGATIVE
"DATA",811.9,27,2,52,0)
     Map local HCVAb lab tests with a condition in the REMINDER TERM file.
"DATA",811.9,27,2,53,0)
     An example of the condition field might be: I V="negative"
"DATA",811.9,27,2,54,0)
     or I (V["N")!(V["n"). The text used in the condition definition 
"DATA",811.9,27,2,55,0)
     (I V="text") should be based on the local LABORATORY TEST file (60)
"DATA",811.9,27,2,56,0)
     print codes when defined, rather than the result in the LAB DATA file
"DATA",811.9,27,2,57,0)
     (63).
"DATA",811.9,27,2,58,0)
 
"DATA",811.9,27,2,59,0)
   HEPATITIS C INFECTION
"DATA",811.9,27,2,60,0)
     This term is released with the reminder taxonomy VA-HEPATITIS C
"DATA",811.9,27,2,61,0)
     INFECTION.  Note:  This taxonomy can be copied. The copy can be
"DATA",811.9,27,2,62,0)
     modified for local changes. The changes should be limited to the data
"DATA",811.9,27,2,63,0)
     source, since the diagnoses are already defined. (e.g. To eliminate
"DATA",811.9,27,2,64,0)
     using problem list diagnosis from the findings, use the PATIENT DATA
"DATA",811.9,27,2,65,0)
     SOURCE field to control where to look for the HEPATITIS C INFECTION
"DATA",811.9,27,2,66,0)
     diagnosis.  Alternatively you can define an expiration period to
"DATA",811.9,27,2,67,0)
     consider the diagnosis valid.)
"DATA",811.9,27,2,68,0)
     Map any local findings that meet the intent of this term in the
"DATA",811.9,27,2,69,0)
     REMINDER TERM file (811.5).
"DATA",811.9,27,2,70,0)
 
"DATA",811.9,27,2,71,0)
Each reminder term is defined in the reminder definition with an
"DATA",811.9,27,2,72,0)
expiration period of 2Y, so that sites can follow-up on patient risk
"DATA",811.9,27,2,73,0)
assessment data that was entered prior to 10/1/98. All sites will send
"DATA",811.9,27,2,74,0)
risk assessment data entered from 10/1/98 through the present to the
"DATA",811.9,27,2,75,0)
Emerging Pathogen Initiative (EPI) database. If the most recent data for
"DATA",811.9,27,2,76,0)
risk assessment was prior to 10/1/98, this reminder will be due.  The data
"DATA",811.9,27,2,77,0)
found prior to 10/1/98 is displayed to help the clinician document an
"DATA",811.9,27,2,78,0)
entry for the current encounter to reflect the risk assessment information
"DATA",811.9,27,2,79,0)
for the patient.
"DATA",811.9,27,7,0)
^811.97^1^1
"DATA",811.9,27,7,1,0)
99Y
"DATA",811.9,27,20,0)
^811.902V^7^7
"DATA",811.9,27,20,1,0)
3;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,2,0)
4;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,3,0)
2;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,4,0)
1;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,5,0)
5;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,6,0)
6;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,20,7,0)
7;PXRMD(811.5,^^^^^!^^^^^2981001
"DATA",811.9,27,31)
(SEX)&(AGE)
"DATA",811.9,27,32)
0^
"DATA",811.9,27,35)
(0)!FI(1)!FI(2)!FI(3)!FI(4)!FI(5)!FI(6)!FI(7)
"DATA",811.9,27,36)
7^1;2;3;4;5;6;7
"DATA",811.9,27,40)
0^
"DATA",811.9,27,42)
0^
"DATA",811.9,27,51)

"DATA",811.9,27,66,0)
^811.966^17^17^3000826^^
"DATA",811.9,27,66,1,0)
Patients should be assessed once for any one of the following risk factors
"DATA",811.9,27,66,2,0)
in the past or present:
"DATA",811.9,27,66,3,0)
   1.  Blood/Blood product prior to 1992
"DATA",811.9,27,66,4,0)
   2.  Illicit injected drug use
"DATA",811.9,27,66,5,0)
   3.  Unequivocal blood exposure
"DATA",811.9,27,66,6,0)
   4.  Multiple sexual partners
"DATA",811.9,27,66,7,0)
   5.  Hemodialysis
"DATA",811.9,27,66,8,0)
   6.  Tattoo/repeated body piercing
"DATA",811.9,27,66,9,0)
   7.  Intranasal cocaine use
"DATA",811.9,27,66,10,0)
   8.  Unexplained liver disease
"DATA",811.9,27,66,11,0)
   9.  Unexplained abnormal ALT value
"DATA",811.9,27,66,12,0)
  10.  Intemperate alcohol use
"DATA",811.9,27,66,13,0)
 
"DATA",811.9,27,66,14,0)
Patients with risk assessment information entered once prior to 10/1/98
"DATA",811.9,27,66,15,0)
need to be reassessed as current month data in order to get credit for
"DATA",811.9,27,66,16,0)
the risk assessment in the national Emerging Pathogens Initiative (EPI)
"DATA",811.9,27,66,17,0)
database.
"FIA",800)
CLINICAL REMINDER PARAMETERS
"FIA",800,0)
^PXRM(800,
"FIA",800,0,0)
800O
"FIA",800,0,1)
y^y^f^^^^n
"FIA",800,0,10)

"FIA",800,0,11)

"FIA",800,0,"RLRO")

"FIA",800,0,"VR")
1.5^PXRM
"FIA",800,800)
0
"FIA",800,800.01)
0
"FIA",800,800.02)
0
"FIA",800,800.04)
0
"FIA",800,800.41)
0
"FIA",801.41)
REMINDER DIALOG
"FIA",801.41,0)
^PXRMD(801.41,
"FIA",801.41,0,0)
801.41IO
"FIA",801.41,0,1)
y^y^f^^^^n
"FIA",801.41,0,10)

"FIA",801.41,0,11)

"FIA",801.41,0,"RLRO")

"FIA",801.41,0,"VR")
1.5^PXRM
"FIA",801.41,801.41)
0
"FIA",801.41,801.4118)
0
"FIA",801.41,801.412)
0
"FIA",801.41,801.4125)
0
"FIA",801.41,801.4135)
0
"FIA",811.2)
REMINDER TAXONOMY
"FIA",811.2,0)
^PXD(811.2,
"FIA",811.2,0,0)
811.2IO
"FIA",811.2,0,1)
y^y^f^^^^n
"FIA",811.2,0,10)

"FIA",811.2,0,11)

"FIA",811.2,0,"RLRO")

"FIA",811.2,0,"VR")
1.5^PXRM
"FIA",811.2,811.2)
0
"FIA",811.2,811.22102)
0
"FIA",811.2,811.22103)
0
"FIA",811.2,811.22104)
0
"FIA",811.2,811.23102)
0
"FIA",811.2,811.23104)
0
"FIA",811.5)
REMINDER TERM
"FIA",811.5,0)
^PXRMD(811.5,
"FIA",811.5,0,0)
811.5OI
"FIA",811.5,0,1)
y^y^f^^^^n
"FIA",811.5,0,10)

"FIA",811.5,0,11)

"FIA",811.5,0,"RLRO")

"FIA",811.5,0,"VR")
1.5^PXRM
"FIA",811.5,811.5)
0
"FIA",811.5,811.51)
0
"FIA",811.5,811.52)
0
"FIA",811.9)
REMINDER DEFINITION
"FIA",811.9,0)
^PXD(811.9,
"FIA",811.9,0,0)
811.9
"FIA",811.9,0,1)
y^y^f^^y^^y^r^n
"FIA",811.9,0,10)

"FIA",811.9,0,11)
I $P(^PXD(811.9,Y,0),U,1)="VA-HEP C RISK ASSESSMENT"
"FIA",811.9,0,"RLRO")

"FIA",811.9,0,"VR")
1.5^PXRM
"FIA",811.9,811.9)
0
"FIA",811.9,811.9002)
0
"FIA",811.9,811.90021)
0
"FIA",811.9,811.9003)
0
"FIA",811.9,811.902)
0
"FIA",811.9,811.9024)
0
"FIA",811.9,811.9025)
0
"FIA",811.9,811.92)
0
"FIA",811.9,811.93)
0
"FIA",811.9,811.961)
0
"FIA",811.9,811.965)
0
"FIA",811.9,811.966)
0
"FIA",811.9,811.97)
0
"FIA",811.9,811.973)
0
"FIA",811.9,811.974)
0
"INI")
PRE^PXRMP2I
"INIT")
POST^PXRMP2I
"IX",801.41,801.41,"B",0)
801.41^B^B Cross-reference^R^^F^IR^I^801.41^^^^^LS
"IX",801.41,801.41,"B",.1,0)
^^1^1^3001103^^
"IX",801.41,801.41,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross reference.
"IX",801.41,801.41,"B",1)
S ^PXRMD(801.41,"B",$E(X,1,63),DA)=""
"IX",801.41,801.41,"B",2)
K ^PXRMD(801.41,"B",$E(X,1,63),DA)
"IX",801.41,801.41,"B",2.5)
K ^PXRMD(801.41,"B")
"IX",801.41,801.41,"B",11.1,0)
^.114IA^1^1
"IX",801.41,801.41,"B",11.1,1,0)
1^F^801.41^.01^63^1^F
"IX",801.41,801.41,"B",11.1,1,3)

"IX",811.2,811.2,"B",0)
811.2^B^New style B cross-reference^R^^F^IR^I^811.2^^^^^LS
"IX",811.2,811.2,"B",1)
S ^PXD(811.2,"B",$E(X,1,35),DA)=""
"IX",811.2,811.2,"B",2)
K ^PXD(811.2,"B",$E(X,1,35),DA)
"IX",811.2,811.2,"B",2.5)
K ^PXD(811.2,"B")
"IX",811.2,811.2,"B",11.1,0)
^.114IA^1^1
"IX",811.2,811.2,"B",11.1,1,0)
1^F^811.2^.01^35^1^F
"IX",811.2,811.2,"B",11.1,1,3)

"IX",811.2,811.22102,"AD",0)
811.22102^AD^Whenever ICD9 entries are edited rebuild expanded taxonomy^MU^^R^IR^I^811.22102^^^^^A
"IX",811.2,811.22102,"AD",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22102,"AD",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22102,"AD",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22102,"AD",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22102,"AD",11.1,0)
^.114IA^2^2
"IX",811.2,811.22102,"AD",11.1,1,0)
1^F^811.22102^.01^^^F
"IX",811.2,811.22102,"AD",11.1,2,0)
2^F^811.22102^1^^^F
"IX",811.2,811.22103,"AC",0)
811.22103^AC^Whenever ICD0 entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22103^^^^^A
"IX",811.2,811.22103,"AC",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22103,"AC",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22103,"AC",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22103,"AC",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22103,"AC",11.1,0)
^.114IA^2^2
"IX",811.2,811.22103,"AC",11.1,1,0)
1^F^811.22103^.01^^^F
"IX",811.2,811.22103,"AC",11.1,2,0)
2^F^811.22103^1^^^F
"IX",811.2,811.22104,"AE",0)
811.22104^AE^Whenever CPT entries are changed rebuild the expanded taxonomy^MU^^R^IR^I^811.22104^^^^^A
"IX",811.2,811.22104,"AE",1)
D TAXEDIT^PXRMTAX(DA(1),"")
"IX",811.2,811.22104,"AE",2)
D TAXEDIT^PXRMTAX(DA(1),DA)
"IX",811.2,811.22104,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.2,811.22104,"AE",2.5)
D TAXKILL^PXRMTAX(DA(1))
"IX",811.2,811.22104,"AE",11.1,0)
^.114IA^2^2
"IX",811.2,811.22104,"AE",11.1,1,0)
1^F^811.22104^.01^^^F
"IX",811.2,811.22104,"AE",11.1,2,0)
2^F^811.22104^1^^^F
"IX",811.5,811.5,"B",0)
811.5^B^New style B cross-reference^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"B",1)
S ^PXRMD(811.5,"B",$E(X,1,64),DA)=""
"IX",811.5,811.5,"B",2)
K ^PXRMD(811.5,"B",$E(X,1,64),DA)
"IX",811.5,811.5,"B",2.5)
K ^PXRMD(811.5,"B")
"IX",811.5,811.5,"B",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"B",11.1,1,0)
1^F^811.5^.01^64^1^F
"IX",811.5,811.5,"B",11.1,1,3)

"IX",811.5,811.5,"D",0)
811.5^D^New look-up on term type.^R^^F^IR^I^811.5^^^^^LS
"IX",811.5,811.5,"D",1)
S ^PXRMD(811.5,"D",X,DA)=""
"IX",811.5,811.5,"D",2)
K ^PXRMD(811.5,"D",X,DA)
"IX",811.5,811.5,"D",2.5)
K ^PXRMD(811.5,"D")
"IX",811.5,811.5,"D",11.1,0)
^.114IA^1^1
"IX",811.5,811.5,"D",11.1,1,0)
1^F^811.5^.02^^1^F
"IX",811.5,811.5,"D",11.1,1,3)

"IX",811.9,811.9,"AE",0)
811.9^AE^Build the internal patient cohort logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AE",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AE",.1,1,0)
This cross-reference builds the internal patient cohort logic.
"IX",811.9,811.9,"AE",1)
D CPPCLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AE",2)
D BLDPCLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AE",11.1,1,0)
1^F^811.9^30^^^F
"IX",811.9,811.9,"AF",0)
811.9^AF^Cross-reference for building internal resolution logic^MU^^F^I^I^811.9^^^^^A
"IX",811.9,811.9,"AF",.1,0)
^^1^1^3000110^
"IX",811.9,811.9,"AF",.1,1,0)
This cross-reference builds the internal resolution logic.
"IX",811.9,811.9,"AF",1)
D CPRESLS^PXRMLOGX(DA,X),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.9,"AF",2)
D BLDRESLS^PXRMLOGX(DA),BLDINFL^PXRMLOGX(DA)
"IX",811.9,811.9,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.9,"AF",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"AF",11.1,1,0)
1^F^811.9^34^^^F
"IX",811.9,811.9,"B",0)
811.9^B^B cross-reference^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"B",.1,0)
^^1^1^3000222^
"IX",811.9,811.9,"B",.1,1,0)
This is the "B" cross-reference redone as a new style cross-reference.
"IX",811.9,811.9,"B",1)
S ^PXD(811.9,"B",$E(X,1,35),DA)=""
"IX",811.9,811.9,"B",2)
K ^PXD(811.9,"B",$E(X,1,35),DA)
"IX",811.9,811.9,"B",2.5)
K ^PXD(811.9,"B")
"IX",811.9,811.9,"B",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"B",11.1,1,0)
1^F^811.9^.01^35^1^F
"IX",811.9,811.9,"B",11.1,1,3)

"IX",811.9,811.9,"D",0)
811.9^D^Look up by Print Name^R^^F^IR^I^811.9^^^^^LS
"IX",811.9,811.9,"D",.1,0)
^^1^1^3000216^
"IX",811.9,811.9,"D",.1,1,0)
This cross-reference is used for look-up by the reminder's Print Name.
"IX",811.9,811.9,"D",1)
S ^PXD(811.9,"D",$E(X,1,35),DA)=""
"IX",811.9,811.9,"D",2)
K ^PXD(811.9,"D",$E(X,1,35),DA)
"IX",811.9,811.9,"D",2.5)
K ^PXD(811.9,"D")
"IX",811.9,811.9,"D",11.1,0)
^.114IA^1^1
"IX",811.9,811.9,"D",11.1,1,0)
1^F^811.9^1.2^35^1^F
"IX",811.9,811.902,"AE",0)
811.902^AE^Build all logic strings^MU^^R^IR^I^811.902^^^^^A
"IX",811.9,811.902,"AE",1)
D BLDALL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AE",2)
D BLDALL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AE",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AE",11.1,0)
^.114IA^1^1
"IX",811.9,811.902,"AE",11.1,1,0)
1^F^811.902^.01^^1^F
"IX",811.9,811.902,"AE",11.1,1,3)

"IX",811.9,811.902,"AF",0)
811.902^AF^Check for rebuild of age findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AF",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AF",.1,1,0)
When MINIMUM AGE, MAXIMUM AGE, or REMINDER FREQUENCY are changed then
"IX",811.9,811.902,"AF",.1,2,0)
rebuild the age findings list.
"IX",811.9,811.902,"AF",1)
D BLDAFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AF",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AF",2)
D BLDAFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AF",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AF",11.1,0)
^.114IA^4^3
"IX",811.9,811.902,"AF",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AF",11.1,3,0)
2^F^811.902^2^^^F
"IX",811.9,811.902,"AF",11.1,4,0)
3^F^811.902^3^^^F
"IX",811.9,811.902,"AG",0)
811.902^AG^Check for rebuild of resolution findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AG",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AG",.1,1,0)
When USE IN RESOLUTION LOGIC is changed then rebuild the resolution
"IX",811.9,811.902,"AG",.1,2,0)
findings list.
"IX",811.9,811.902,"AG",1)
D BLDRESLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AG",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AG",2)
D BLDRESLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AG",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AG",11.1,0)
^.114IA^3^1
"IX",811.9,811.902,"AG",11.1,3,0)
1^F^811.902^7^^^F
"IX",811.9,811.902,"AH",0)
811.902^AH^Check for rebuild of patient cohort findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AH",.1,0)
^^2^2^2990924^
"IX",811.9,811.902,"AH",.1,1,0)
Whenever USE IN PATIENT COHORT LOGIC is changed rebuild the patient cohort
"IX",811.9,811.902,"AH",.1,2,0)
logic list.
"IX",811.9,811.902,"AH",1)
D BLDPCLS^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AH",1.4)
S X=1 I X2="" S X=0
"IX",811.9,811.902,"AH",2)
D BLDPCLS^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AH",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AH",11.1,0)
^.114IA^2^1
"IX",811.9,811.902,"AH",11.1,2,0)
1^F^811.902^8^^^F
"IX",811.9,811.902,"AI",0)
811.902^AI^Check for rebuild of information findings list^MU^^R^I^I^811.902^^^^^A
"IX",811.9,811.902,"AI",.1,0)
^^3^3^2990924^
"IX",811.9,811.902,"AI",.1,1,0)
Whenever any of the following changes rebuild the information findings list:
"IX",811.9,811.902,"AI",.1,2,0)
MINIMUM AGE, MAXIMUM AGE, REMINDER FREQUENCY, USE IN RESOLUTION LOGIC,
"IX",811.9,811.902,"AI",.1,3,0)
USE IN PATIENT COHORT LOGIC
"IX",811.9,811.902,"AI",1)
D BLDINFL^PXRMLOGX(DA(1),"")
"IX",811.9,811.902,"AI",1.4)
S X=1 I $$DELNXR^PXRMLOGX(.X2) S X=0
"IX",811.9,811.902,"AI",2)
D BLDINFL^PXRMLOGX(DA(1),DA)
"IX",811.9,811.902,"AI",2.4)
S X=1 I $$EDITNXR^PXRMLOGX(.X1,.X2) S X=0
"IX",811.9,811.902,"AI",11.1,0)
^.114IA^7^6
"IX",811.9,811.902,"AI",11.1,2,0)
1^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,3,0)
2^F^811.902^1^^^F
"IX",811.9,811.902,"AI",11.1,4,0)
3^F^811.902^2^^^F
"IX",811.9,811.902,"AI",11.1,5,0)
4^F^811.902^3^^^F
"IX",811.9,811.902,"AI",11.1,6,0)
5^F^811.902^7^^^F
"IX",811.9,811.902,"AI",11.1,7,0)
6^F^811.902^8^^^F
"KEY",801.41,801.41,"A",0)
801.41^A^P^16
"KEY",801.41,801.41,"A",2,0)
^.312IA^1^1
"KEY",801.41,801.41,"A",2,1,0)
.01^801.41^1
"KEY",811.2,811.2,"A",0)
811.2^A^P^19
"KEY",811.2,811.2,"A",2,0)
^.312IA^1^1
"KEY",811.2,811.2,"A",2,1,0)
.01^811.2^1
"KEY",811.5,811.5,"A",0)
811.5^A^P^29
"KEY",811.5,811.5,"A",2,0)
^.312IA^1^1
"KEY",811.5,811.5,"A",2,1,0)
.01^811.5^1
"KEY",811.9,811.9,"B",0)
811.9^B^P^43
"KEY",811.9,811.9,"B",2,0)
^.312IA^1^1
"KEY",811.9,811.9,"B",2,1,0)
.01^811.9^1
"KEYPTR",801.41,801.41,"A")
801.41^B
"KEYPTR",811.2,811.2,"A")
811.2^B
"KEYPTR",811.5,811.5,"A")
811.5^B
"KEYPTR",811.9,811.9,"B")
811.9^B
"KRN",.4,948,-1)
0^3
"KRN",.4,948,0)
PXRM DEFINITION INQUIRY^3010104.1206^@^811.9^^@^3010306
"KRN",.4,948,"%D",0)
^^2^2^3000505^
"KRN",.4,948,"%D",1,0)
This template will print the contents of the reminder definition that will
"KRN",.4,948,"%D",2,0)
be used to evaluate the reminder with Clinical Reminders 1.5.  
"KRN",.4,948,"F",1)
.01;C1;X~"No.";C36~0;C41;X~1.6;C55;X~"--------------------------------------------";C1~"Print Name:";C1;S1~1.2;C31;X~"Related VA-* Reminder:";C1;S1~
"KRN",.4,948,"F",2)
1.4;C31;X~"Reminder Dialog:";C1;S1~51;C31;X~"Priority:";C1;S1~1.91;C31;X;L~"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Technical Description:";C1;S1~
"KRN",.4,948,"F",3)
3,.01;C5;X;S1~"Baseline Frequency:";C1;S2~"Do In Advance Time Frame:";R31;S1~D DUEWI^PXRMPTDF;X;Z;"D DUEWI^PXRMPTDF"~"Sex Specific:";C1;R31~1.9~
"KRN",.4,948,"F",4)
"Ignore on N/A:";C1;R31~1.8~"Frequency for Age Range:";C1;R31~7,D AFREQ^PXRMPTDF;X;Z;"D AFREQ^PXRMPTDF"~7,"Match Text:";C1;R31~7,3,.01~
"KRN",.4,948,"F",5)
7,"No Match Text:";C1;R31~7,4,.01;~"Findings:";C1;S2~D PFIND^PXRMPTDF;Z;"D PFIND^PXRMPTDF"~D ^DIWW;Z;"D ^DIWW"~
"KRN",.4,948,"F",6)
"General Patient Cohort Found Text:";C1;S1~60,.01;C5~"General Patient Cohort Not Found Text:";C1;S1~61,.01;C5~"General Resolution Found Text:";C1;S1~
"KRN",.4,948,"F",7)
65,.01;C5~"General Resolution Not Found Text:";C1;S1~66,.01;C5~D DISLOG^PXRMPTL;S1;X;Z;"D DISLOG^PXRMPTL"~"Web Sites:";C1;S2~50,"Web Site URL:";S1;C2~
"KRN",.4,948,"F",8)
50,.01~50,"Web Site Title:";S1;C2~50,.02~50,"";S1~50,1,.01~
"KRN",.4,948,"H")
CLINICAL REMINDER DEFINITION LIST
"KRN",.4,961,-1)
0^5
"KRN",.4,961,0)
PXRM TERM INQUIRY^3000828.0943^@^811.5^^@^3010301
"KRN",.4,961,"%D",0)
^^1^1^3000505^
"KRN",.4,961,"%D",1,0)
This template prints a single reminder term definition.
"KRN",.4,961,"F",1)
.01;C1;X~"No.";C64~0;C67;X;L11~"----------------------------------------------------------------------------";C1~"Term Type: ";C1~.02;C26;X~
"KRN",.4,961,"F",2)
"Sponsor: ";C1~.03;C26;X~"Date Created: ";C1~.04;C26;X~"Last Modified: ";C1~.05;C26;X~"Description: ";C1;S1~1,.01;C5;X~"Findings: ";C1;S1~
"KRN",.4,961,"F",3)
D PFIND^PXRMPTTR;Z;"D PFIND^PXRMPTTR"~" ";C1;S1~
"KRN",.4,961,"H")
REMINDER TERM LIST
"KRN",.4,962,-1)
0^1
"KRN",.4,962,0)
PXRM TAXONOMY INQUIRY^3000623.1154^@^811.2^^@^3010223
"KRN",.4,962,"F",1)
.01;C1;S1;X~1.6;C55;;X~"-----------------------------------";C1~"Brief Description:";C1;S1~.02;C5;X~"Patient Data Source:";C1;S1~4;C5;X~
"KRN",.4,962,"F",2)
"Use Inactive Problems:";C1;S1~10;C5;X~"ICD9 Codes:";C1;S1~2102,"Range ";C5;S1~2102,.01;C12;X~2102,"-"~2102,1;X~
"KRN",.4,962,"F",3)
2102,D ICD9LIST^PXRMPTTX;Z;"D ICD9LIST^PXRMPTTX"~"ICD0 Codes:";C1;S2~2103,"Range ";C5;S1~2103,.01;C12;X~2103,"-"~2103,1;X~
"KRN",.4,962,"F",4)
2103,D ICD0LIST^PXRMPTTX;Z;"D ICD0LIST^PXRMPTTX"~"CPT Codes:";C1;S2~2104,"Range ";C5;S1~2104,.01;C12;X~2104,"-"~2104,1;X~
"KRN",.4,962,"F",5)
2104,D ICPTLIST^PXRMPTTX;Z;"D ICPTLIST^PXRMPTTX"~
"KRN",.4,962,"H")
REMINDER TAXONOMY LIST
"KRN",.4,969,-1)
0^2
"KRN",.4,969,0)
PXRM TAXONOMY LIST^3000623.1155^@^811.2^^@^3010223
"KRN",.4,969,"F",1)
.01;C1;S1~D TAXLIST^PXRMPTTX;Z;"D TAXLIST^PXRMPTTX"~
"KRN",.4,969,"H")
[PXRM TAXONOMY LIST HEADER]
"KRN",.4,969,"SUB")
1
"KRN",.4,976,-1)
0^4
"KRN",.4,976,0)
PXRM DEFINITION LIST^3000623.1411^@^811.9^^@^3010303
"KRN",.4,976,"%D",0)
^^1^1^3000229^^
"KRN",.4,976,"%D",1,0)
Print template for reminder definition list.
"KRN",.4,976,"F",1)
"-----------------------------------";C1;S1~"Name:";C1~.01;C14;X~1.6;C55;X~"Print Name:";C1~1.2;C14;X~"Priority:";C1;S1~1.91;C14;X;L~
"KRN",.4,976,"F",2)
"Reminder Description:";C1;S1~2,.01;C5;X;S1~"Findings:";C1;S1~20,"Finding Item:";C3~20,.01;""~20,W $$GENIEN^PXRMPTDF(D1);X;Z;"W $$GENIEN^PXRMPTDF(D1)"~
"KRN",.4,976,"F",3)
D DISLOG^PXRMPTL;"";S1;Z;"D DISLOG^PXRMPTL"~
"KRN",.4,976,"H")
REMINDER DEFINITION LIST
"KRN",.4,976,"SUB")
1
"KRN",.402,1322,-1)
0^3
"KRN",.402,1322,0)
PXRM EDIT GROUP^3010106.1343^@^801.41^^@^3010227
"KRN",.402,1322,"DR",1,801.41)
I $G(DINUSE)=1 S Y=3;.01;3;13;15;I X'["GMRD(120.51" S Y=5;24VITALS PROMPT CAPTION~;5GROUP CAPTION~;6PUT A BOX AROUND THE GROUP~;8SHARE COMMON PROMPTS~;9MULTIPLE SELECTION~;50;25GROUP HEADER DIALOG TEXT~;
"KRN",.402,1322,"DR",1,801.41,1)
35GROUP HEADER ALTERNATE P/N TEXT~;23;51;7;52;18;10;
"KRN",.402,1322,"DR",2,801.4118)
.01;
"KRN",.402,1322,"DR",2,801.412)
.01;2DIALOG ELEMENT~;8;
"KRN",.402,1324,-1)
0^2
"KRN",.402,1324,0)
PXRM EDIT REMINDER TERM^3001011.0911^@^811.5^^@^3001205
"KRN",.402,1324,"DIAB",1,1,811.52,0)
ALL
"KRN",.402,1324,"DIAB",6,0,811.5,0)
DATE CREATED///TODAY
"KRN",.402,1324,"DIAB",10,0,811.5,0)
DATE LAST MODIFIED///TODAY
"KRN",.402,1324,"DR",1,811.5)
.01;S DIC("S")="I Y'=""N""";.02;S:$P(^PXRMD(811.5,D0,0),"^",4) Y="@1";Q;.04///^S X=DT;S Y="@2";@1;Q;.05///^S X=DT;@2;1;20;
"KRN",.402,1324,"DR",2,811.52)
.01:15
"KRN",.402,1339,-1)
0^1
"KRN",.402,1339,0)
PXRM EDIT NATIONAL TERM^3001011.0859^@^811.5^^@^3001011
"KRN",.402,1339,"DIAB",1,1,811.52,0)
ALL
"KRN",.402,1339,"DIAB",3,0,811.5,0)
DATE LAST MODIFIED///TODAY
"KRN",.402,1339,"DR",1,811.5)
20;Q;.05///^S X=DT;
"KRN",.402,1339,"DR",2,811.52)
.01:1514;
"KRN",19,5442,-1)
0^1
"KRN",19,5442,0)
PXRM TAXONOMY EDIT^Edit Taxonomy Item^^R^^^^^^^^CLINICAL REMINDERS
"KRN",19,5442,1,0)
^19.06^8^8^3001003^^
"KRN",19,5442,1,1,0)
This option is used to edit the Clinical Reminder Taxonomy definitions.
"KRN",19,5442,1,2,0)
A number of taxonomies were distributed with the PCE package. These
"KRN",19,5442,1,3,0)
were based on the Ambulatory Care EP Preventative Health Maintenance
"KRN",19,5442,1,4,0)
Guidelines.
"KRN",19,5442,1,5,0)
 
"KRN",19,5442,1,6,0)
The distributed taxonomy items all have a "VA-" prefix. To alter a VA-
"KRN",19,5442,1,7,0)
prefixed taxonomy item, first copy it to a different name and then edit
"KRN",19,5442,1,8,0)
the taxonomy to reflect your site's definition for the taxonomy.
"KRN",19,5442,25)
PXRMTEDT
"KRN",19,5442,"U")
EDIT TAXONOMY ITEM
"KRN",101,5427,-1)
0^2
"KRN",101,5427,0)
PXRM DIALOG DETAILS^Detailed Display^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5427,1,0)
^^1^1^2991005^^^^
"KRN",101,5427,1,1,0)
Basic lists of dialog items.
"KRN",101,5427,2,0)
^101.02A^5^1
"KRN",101,5427,2,5,0)
DD
"KRN",101,5427,2,"B","DD",5)

"KRN",101,5427,4)
^^^
"KRN",101,5427,15)
S VALMBG=1
"KRN",101,5427,20)
D BUILD^PXRMDLG(0)
"KRN",101,5427,99)
58247,36167
"KRN",101,5429,-1)
0^3
"KRN",101,5429,0)
PXRM DIALOG EXIT^Quit^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5429,2,0)
^101.02A^2^2
"KRN",101,5429,2,1,0)
Q
"KRN",101,5429,2,2,0)
QU
"KRN",101,5429,2,"B","Q",1)

"KRN",101,5429,2,"B","QU",2)

"KRN",101,5429,15)
D EXIT^PXRMDLG
"KRN",101,5429,99)
58247,36167
"KRN",101,5432,-1)
0^4
"KRN",101,5432,0)
PXRM DIALOG P/N TEXT^Progress Note Text^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5432,2,0)
^101.02A^1^1
"KRN",101,5432,2,1,0)
DP
"KRN",101,5432,2,"B","DP",1)

"KRN",101,5432,4)
^^^
"KRN",101,5432,15)

"KRN",101,5432,20)
D BUILD^PXRMDLG(4)
"KRN",101,5432,99)
58247,36167
"KRN",101,5435,-1)
0^5
"KRN",101,5435,0)
PXRM DIALOG EDIT^Edit/Delete Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5435,2,0)
^101.02A^^0
"KRN",101,5435,4)
^^^
"KRN",101,5435,10,0)
^101.01PA^^0
"KRN",101,5435,15)
S VALMBG=1
"KRN",101,5435,20)
D EDIT^PXRMDEDT("R",PXRMDIEN) D:$G(VALMBCK)'="Q" BUILD^PXRMDLG(PXRMMODE)
"KRN",101,5435,29)

"KRN",101,5435,99)
58247,36167
"KRN",101,5595,-1)
0^6
"KRN",101,5595,0)
PXRM DIALOG COPY^Copy Dialog^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5595,1,0)
^101.06^1^1^3001030^^^^
"KRN",101,5595,1,1,0)
Copy current reminder dialog.
"KRN",101,5595,4)
^^^
"KRN",101,5595,15)
S VALMBG=1
"KRN",101,5595,20)
D COPYS^PXRMSEL
"KRN",101,5595,99)
58377,51952
"KRN",101,5599,-1)
0^7
"KRN",101,5599,0)
PXRM DIALOG TEXT^Dialog Text^^A^^^^^^^^CLINICAL REMINDERS
"KRN",101,5599,2,0)
^101.02A^1^1
"KRN",101,5599,2,1,0)
DT
"KRN",101,5599,2,"B","DT",1)

"KRN",101,5599,15)

"KRN",101,5599,20)
D BUILD^PXRMDLG(1)
"KRN",101,5599,99)
58247,36172
"KRN",101,5743,-1)
0^1
"KRN",101,5743,0)
PXRM DIALOG GROUP MENU^Dialog Group Menu^^M^^^^^^^^
"KRN",101,5743,4)
25
"KRN",101,5743,10,0)
^101.01PA^6^6
"KRN",101,5743,10,1,0)
5427^DD^2^
"KRN",101,5743,10,1,"^")
PXRM DIALOG DETAILS
"KRN",101,5743,10,2,0)
5429^QU^9^
"KRN",101,5743,10,2,"^")
PXRM DIALOG EXIT
"KRN",101,5743,10,3,0)
5432^DP^3^
"KRN",101,5743,10,3,"^")
PXRM DIALOG P/N TEXT
"KRN",101,5743,10,4,0)
5435^ED^5^^^Edit/Delete Group
"KRN",101,5743,10,4,"^")
PXRM DIALOG EDIT
"KRN",101,5743,10,5,0)
5595^CO^1^^^Copy Dialog Group
"KRN",101,5743,10,5,"^")
PXRM DIALOG COPY
"KRN",101,5743,10,6,0)
5599^DT^4^
"KRN",101,5743,10,6,"^")
PXRM DIALOG TEXT
"KRN",101,5743,15)
D PEXIT^PXRMDLG
"KRN",101,5743,26)
D SHOW^VALM
"KRN",101,5743,28)
Select Action:
"KRN",101,5743,30)
Q
"KRN",101,5743,99)
58395,31569
"MBREQ")
0
"ORD",0,9.8)
9.8;;1;RTNF^XPDTA;RTNE^XPDTA
"ORD",0,9.8,0)
ROUTINE
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PGL",811.9,0,5,1.4)
RELATED REMINDER GUIDELINE^*P811.9^PXD(811.9,^0;5^S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PGL",811.9,51,1,51)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"PKG",364,-1)
1^1
"PKG",364,0)
CLINICAL REMINDERS^PXRM^Clinical Reminders^^^3010129
"PKG",364,20,0)
^9.402P^^
"PKG",364,22,0)
^9.49I^1^1
"PKG",364,22,1,0)
1.5^3000619^3000622^1342
"PKG",364,22,1,"PAH",1,0)
2^3010306
"PKG",364,22,1,"PAH",1,1,0)
^^3^3^3010306
"PKG",364,22,1,"PAH",1,1,1,0)
Clinical Reminders version 1.5 patch 2. This patch includes a number of
"PKG",364,22,1,"PAH",1,1,2,0)
bug fixes and enhancements. Please see the National Patch module for a
"PKG",364,22,1,"PAH",1,1,3,0)
complete description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
78
"RTN","PXRM")
0^16^B18748706
"RTN","PXRM",1,0)
PXRM ; SLC/PKR - Clinical Reminders entry points. ; 02/01/2001
"RTN","PXRM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRM",3,0)
 ;
"RTN","PXRM",4,0)
 ;=======================================================================
"RTN","PXRM",5,0)
MAIN(DFN,PXRMITEM,PXRHM,NODISC) ;Main driver for clinical reminders.
"RTN","PXRM",6,0)
 ;INPUT  DFN - Pointer to Patient File (#2)
"RTN","PXRM",7,0)
 ;       PXRMITEM - The reminder to evaluate. This is the internal
"RTN","PXRM",8,0)
 ;       entry number in file #811.9.
"RTN","PXRM",9,0)
 ;       PXRHM - Flag to indicate level of information requested.
"RTN","PXRM",10,0)
 ;         0 - Reminders DUE NOW only (CLINICAL REMINDERS DUE
"RTN","PXRM",11,0)
 ;             HS component)
"RTN","PXRM",12,0)
 ;         1 - All Reminders with Next and Last Information
"RTN","PXRM",13,0)
 ;             (CLINICAL REMINDERS SUMMARY HS component)
"RTN","PXRM",14,0)
 ;         5 - Health Maintenance (CLINICAL REMINDERS MAINTENANCE
"RTN","PXRM",15,0)
 ;              HS component)
"RTN","PXRM",16,0)
 ;        NODISC - (optional) if this is true then the disclaimer
"RTN","PXRM",17,0)
 ;                 will not be loaded.
"RTN","PXRM",18,0)
 ;
"RTN","PXRM",19,0)
 ;OUTPUT  ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=STATUS_U_DUE DATE_U_LAST DONE
"RTN","PXRM",20,0)
 ;        where PXRMRNAM is the PRINT NAME or if it is undefined then
"RTN","PXRM",21,0)
 ;        it is the NAME.
"RTN","PXRM",22,0)
 ;        For the Clinical Maintenance component, PXRHM=5, there is 
"RTN","PXRM",23,0)
 ;        subsequent output of the form
"RTN","PXRM",24,0)
 ;        ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",N)=TEXT
"RTN","PXRM",25,0)
 ;        where N is a number and TEXT is a text string.
"RTN","PXRM",26,0)
 ;
"RTN","PXRM",27,0)
 ;        If NODISC is false or not present then the disclaimer will
"RTN","PXRM",28,0)
 ;        be loaded into ^TMP("PXRM",$J,"DISC",N).
"RTN","PXRM",29,0)
 ;
"RTN","PXRM",30,0)
 ;        The calling application can display the contents of these
"RTN","PXRM",31,0)
 ;        two ^TMP arrays as it chooses. The caller should also make
"RTN","PXRM",32,0)
 ;        sure the ^TMP globals are killed before it exits.
"RTN","PXRM",33,0)
 ;
"RTN","PXRM",34,0)
 ;These are the reminder evaluation "global" variables.
"RTN","PXRM",35,0)
 N PXRMAGE,PXRMDOB,PXRMDFN,PXRMDOD,PXRMPID,PXRMRNAM,PXRMRACE,PXRMSEX
"RTN","PXRM",36,0)
 N PXRMSSN,PXRMXTLK,PXRMTXEV
"RTN","PXRM",37,0)
 S PXRMPID="PXRM"_PXRMITEM_$$NOW^XLFDT
"RTN","PXRM",38,0)
 ;
"RTN","PXRM",39,0)
 ;Set the error handler to the PXRMERRH routine. Use the new style of
"RTN","PXRM",40,0)
 ;error trapping.
"RTN","PXRM",41,0)
 N $ES,$ET
"RTN","PXRM",42,0)
 S $ET="D ERRHDLR^PXRMERRH"
"RTN","PXRM",43,0)
 ;
"RTN","PXRM",44,0)
 ;Initialize the working array.
"RTN","PXRM",45,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRM",46,0)
 ;
"RTN","PXRM",47,0)
 ;Establish the main findings evaluation variables.
"RTN","PXRM",48,0)
 N DUE,DUEDATE,FIEVAL,FREQ,PCLOGIC,RESDATE,RESLOGIC
"RTN","PXRM",49,0)
 S (DUE,DUEDATE,FREQ,RESDATE)=0
"RTN","PXRM",50,0)
 S (PCLOGIC,RESLOGIC)=""
"RTN","PXRM",51,0)
 ;
"RTN","PXRM",52,0)
 ;Make sure the reminder exists.
"RTN","PXRM",53,0)
 I '$D(^PXD(811.9,PXRMITEM)) D  G EXIT
"RTN","PXRM",54,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")="ITEM "_$G(PXRMITEM)_" IS NOT A VALID REMINDER ITEM"
"RTN","PXRM",55,0)
 ;
"RTN","PXRM",56,0)
 N D00
"RTN","PXRM",57,0)
 S D00=^PXD(811.9,PXRMITEM,0)
"RTN","PXRM",58,0)
 S PXRMRNAM=$P(D00,U,3)
"RTN","PXRM",59,0)
 ;If the print name is null use the .01.
"RTN","PXRM",60,0)
 I PXRMRNAM="" S PXRMRNAM=$P(D00,U,1)
"RTN","PXRM",61,0)
 ;
"RTN","PXRM",62,0)
 ;Make sure the reminder is active.
"RTN","PXRM",63,0)
 I $P(D00,U,6) D  G OUTPUT
"RTN","PXRM",64,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")="The reminder "_PXRMRNAM_" was inactivated "_$$FMTE^XLFDT($P(D00,U,7),"5Z")
"RTN","PXRM",65,0)
 I $L(PXRMRNAM)=0 S PXRMRNAM=$P($G(^PXD(811.9,PXRMITEM,0)),U,1)
"RTN","PXRM",66,0)
 ;
"RTN","PXRM",67,0)
 ;Establish the patient demographic information. This call defines
"RTN","PXRM",68,0)
 ;PXRMDFN and locks the patient cache.
"RTN","PXRM",69,0)
 N TEMP
"RTN","PXRM",70,0)
 S TEMP=$$DEM^PXRMPINF(DFN)
"RTN","PXRM",71,0)
 I TEMP="NO PATIENT" D  G EXIT
"RTN","PXRM",72,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO PAT")="DFN "_DFN_" IS NOT A VALID PATIENT"
"RTN","PXRM",73,0)
 . S PCLOGIC=0
"RTN","PXRM",74,0)
 I TEMP="NO LOCK" D  G OUTPUT
"RTN","PXRM",75,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NO LOCK")="NO LOCK"
"RTN","PXRM",76,0)
 . S PCLOGIC=0
"RTN","PXRM",77,0)
 ;
"RTN","PXRM",78,0)
 ;Check for a date of death.
"RTN","PXRM",79,0)
 I $L(PXRMDOD)>0 D
"RTN","PXRM",80,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","DEAD")=""
"RTN","PXRM",81,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"DEAD")="Patient is deceased."
"RTN","PXRM",82,0)
 ;
"RTN","PXRM",83,0)
 ;If the component is CR and the patient is deceased we are done.
"RTN","PXRM",84,0)
 I PXRHM=0,$L(PXRMDOD)>0 G OUTPUT
"RTN","PXRM",85,0)
 ;
"RTN","PXRM",86,0)
 ;Check for a sex specific reminder.
"RTN","PXRM",87,0)
 N SEXOK
"RTN","PXRM",88,0)
 S SEXOK=$$SEX^PXRMLOG
"RTN","PXRM",89,0)
 ;If the patient is the wrong sex then don't do anything else.
"RTN","PXRM",90,0)
 I 'SEXOK D  G OUTPUT
"RTN","PXRM",91,0)
 . S PCLOGIC=0
"RTN","PXRM",92,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRM",93,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRM",94,0)
 ;
"RTN","PXRM",95,0)
 ;Evaluate the findings.
"RTN","PXRM",96,0)
 S PXRMXTLK=""
"RTN","PXRM",97,0)
 D EVAL^PXRMEVFI(DFN,.FIEVAL)
"RTN","PXRM",98,0)
 I +PXRMXTLK>0 D  G OUTPUT
"RTN","PXRM",99,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY","NO LOCK")="NO LOCK for ien "_+PXRMXTLK
"RTN","PXRM",100,0)
 . S PCLOGIC=0
"RTN","PXRM",101,0)
 ;
"RTN","PXRM",102,0)
 ;Evaluate the Patient Cohort Logic.
"RTN","PXRM",103,0)
 D EVALPCL^PXRMLOG(.FREQ,.PCLOGIC,.FIEVAL)
"RTN","PXRM",104,0)
 ;
"RTN","PXRM",105,0)
 ;Evaluate the resolution logic and get the last resolution date.
"RTN","PXRM",106,0)
 D EVALRESL^PXRMLOG(.RESDATE,.RESLOGIC,.FIEVAL)
"RTN","PXRM",107,0)
 ;
"RTN","PXRM",108,0)
 ;If the reminder is applicable calculate the due date.
"RTN","PXRM",109,0)
 I PCLOGIC D DUE^PXRMDATE(RESDATE,FREQ,.DUE,.DUEDATE)
"RTN","PXRM",110,0)
 ;
"RTN","PXRM",111,0)
OUTPUT ;Prepare the final output.
"RTN","PXRM",112,0)
 D FINAL^PXRMFOUT(PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRM",113,0)
 ;
"RTN","PXRM",114,0)
 ;Unlock the patient cache
"RTN","PXRM",115,0)
EXIT I $D(PXRMDFN) D UNLOCKPC^PXRMPINF(PXRMDFN)
"RTN","PXRM",116,0)
 ;
"RTN","PXRM",117,0)
 ;Kill the working arrays unless this was a development run.
"RTN","PXRM",118,0)
 I $D(PXRMDEV) D
"RTN","PXRM",119,0)
 . S PXRMID=PXRMPID
"RTN","PXRM",120,0)
 . S FIEVAL("PATIENT AGE")=$G(PXRMAGE)
"RTN","PXRM",121,0)
 . M FIEV=FIEVAL
"RTN","PXRM",122,0)
 . S FIEV("DFN")=DFN
"RTN","PXRM",123,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"REMINDER NAME")=$G(PXRMRNAM)
"RTN","PXRM",124,0)
 E  K ^TMP(PXRMPID,$J)
"RTN","PXRM",125,0)
 ;
"RTN","PXRM",126,0)
 ;If this was called from the FIDATA entry point then load FIEVAL
"RTN","PXRM",127,0)
 ;into the FINDINGS array.
"RTN","PXRM",128,0)
 I $G(PXRMFDAT) D
"RTN","PXRM",129,0)
 . M FINDINGS=FIEVAL
"RTN","PXRM",130,0)
 ;
"RTN","PXRM",131,0)
 ;I NODISC is true then don't load the disclaimer.
"RTN","PXRM",132,0)
 I $G(NODISC) Q
"RTN","PXRM",133,0)
 ;If there is any data in ^TMP("PXRHM",$J) then set up the disclaimer.
"RTN","PXRM",134,0)
 I $D(^TMP("PXRHM",$J)) D LOAD^PXRMDISC
"RTN","PXRM",135,0)
 ;
"RTN","PXRM",136,0)
 Q
"RTN","PXRM",137,0)
 ;
"RTN","PXRM",138,0)
 ;=======================================================================
"RTN","PXRM",139,0)
DATE(DFN,PXRMITEM,PXRHM,NODISC,FUTDATE) ;Evaluate reminder PXRMITEM on a date
"RTN","PXRM",140,0)
 ;in the future.
"RTN","PXRM",141,0)
 N PXRMDATE
"RTN","PXRM",142,0)
 S PXRMDATE=FUTDATE
"RTN","PXRM",143,0)
 D MAIN(DFN,PXRMITEM,PXRHM,NODISC)
"RTN","PXRM",144,0)
 Q
"RTN","PXRM",145,0)
 ;
"RTN","PXRM",146,0)
 ;=======================================================================
"RTN","PXRM",147,0)
FIDATA(DFN,PXRMITEM,FINDINGS) ;Return the finding evaluation array to the
"RTN","PXRM",148,0)
 ;caller in the array FINDINGS. The caller should use the form
"RTN","PXRM",149,0)
 ;D FIDATA^PXRM(DFN,PXRMITEM,.FINDINGS)
"RTN","PXRM",150,0)
 ;The elements of the FINDINGS array will correspond to the
"RTN","PXRM",151,0)
 ;findings in the reminder definition. For finding N FINDINGS(N)
"RTN","PXRM",152,0)
 ;will be 0 if the finding is false and 1 if it is true. For
"RTN","PXRM",153,0)
 ;true findings there will be additional elements. The exact set
"RTN","PXRM",154,0)
 ;of additional elements will depend of the type of finding.
"RTN","PXRM",155,0)
 ;Some typical examples are:
"RTN","PXRM",156,0)
 ;FINDINGS(N)=1
"RTN","PXRM",157,0)
 ;FINDINGS(N,"DATE")=FileMan date
"RTN","PXRM",158,0)
 ;FINDINGS(N,"FINDING")=variable pointer to the finding
"RTN","PXRM",159,0)
 ;FINDINGS(N,"SOURCE")=variable pointer to the data source
"RTN","PXRM",160,0)
 ;FINDINGS(N,"VALUE")=value of the finding, for example the
"RTN","PXRM",161,0)
 ;                    value of a lab test
"RTN","PXRM",162,0)
 ;
"RTN","PXRM",163,0)
 N PXRMFDAT
"RTN","PXRM",164,0)
 S PXRMFDAT=1
"RTN","PXRM",165,0)
 D MAIN(DFN,PXRMITEM,0,1)
"RTN","PXRM",166,0)
 K ^TMP("PXRM",$J),^TMP("PXRHM",$J)
"RTN","PXRM",167,0)
 Q
"RTN","PXRM",168,0)
 ;
"RTN","PXRM",169,0)
 ;=======================================================================
"RTN","PXRM",170,0)
INACTIVE(PXRMITEM) ;Return the INACTIVE FLAG, which has a value of 1
"RTN","PXRM",171,0)
 ;if the reminder is inactive.
"RTN","PXRM",172,0)
 I '$D(^PXD(811.9,PXRMITEM)) Q 1
"RTN","PXRM",173,0)
 Q $P(^PXD(811.9,PXRMITEM,0),U,6)
"RTN","PXRM",174,0)
 ;
"RTN","PXRMAGE")
0^13^B16394917
"RTN","PXRMAGE",1,0)
PXRMAGE ; SLC/PKR - Utilities for age calculations. ;08/23/2000
"RTN","PXRMAGE",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMAGE",3,0)
 ;
"RTN","PXRMAGE",4,0)
 ;=======================================================================
"RTN","PXRMAGE",5,0)
AGE(DOB,DATE) ;Given a date of birth and a date return the age on that date.
"RTN","PXRMAGE",6,0)
 ;Both dates should be in VA Fileman format.
"RTN","PXRMAGE",7,0)
 Q (DATE-DOB)\10000
"RTN","PXRMAGE",8,0)
 ;
"RTN","PXRMAGE",9,0)
 ;=======================================================================
"RTN","PXRMAGE",10,0)
AGECHECK(AGE,MINAGE,MAXAGE) ;Given an AGE, MINimumAGE, and MAXimumAGE
"RTN","PXRMAGE",11,0)
 ;return true if age lies within the range.
"RTN","PXRMAGE",12,0)
 ;Special values of NULL or 0 mean there are no limits.
"RTN","PXRMAGE",13,0)
 ;
"RTN","PXRMAGE",14,0)
 S MAXAGE=+MAXAGE
"RTN","PXRMAGE",15,0)
 S MINAGE=+MINAGE
"RTN","PXRMAGE",16,0)
 ;See if too old.
"RTN","PXRMAGE",17,0)
 I (AGE>MAXAGE)&(MAXAGE>0) Q 0
"RTN","PXRMAGE",18,0)
 ;
"RTN","PXRMAGE",19,0)
 ;See if too young.
"RTN","PXRMAGE",20,0)
 I MINAGE=0 Q 1
"RTN","PXRMAGE",21,0)
 I AGE<MINAGE Q 0
"RTN","PXRMAGE",22,0)
 Q 1
"RTN","PXRMAGE",23,0)
 ;
"RTN","PXRMAGE",24,0)
 ;=======================================================================
"RTN","PXRMAGE",25,0)
FMTAGE(MINAGE,MAXAGE) ;Format the minimum age and maximum age for display.
"RTN","PXRMAGE",26,0)
 N STR
"RTN","PXRMAGE",27,0)
 I $L(MINAGE)!$L(MAXAGE) D
"RTN","PXRMAGE",28,0)
 . I $L(MINAGE)&$L(MAXAGE) S STR=" for ages "_MINAGE_" to "_MAXAGE Q
"RTN","PXRMAGE",29,0)
 . I $L(MINAGE) S STR=" for ages "_MINAGE_" and older" Q
"RTN","PXRMAGE",30,0)
 . I $L(MAXAGE) S STR=" for ages "_MAXAGE_" and younger" Q
"RTN","PXRMAGE",31,0)
 E  S STR=" for all ages"
"RTN","PXRMAGE",32,0)
 Q STR
"RTN","PXRMAGE",33,0)
 ;
"RTN","PXRMAGE",34,0)
 ;=======================================================================
"RTN","PXRMAGE",35,0)
FMTFREQ(FREQ) ;Format the frequency for display.
"RTN","PXRMAGE",36,0)
 ;This is based on FREQ^PXRMPT.
"RTN","PXRMAGE",37,0)
 N STR
"RTN","PXRMAGE",38,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMAGE",39,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMAGE",40,0)
 E  S STR=+FREQ_($S(FREQ["D":" day",FREQ["M":" month",FREQ["Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMAGE",41,0)
 Q STR
"RTN","PXRMAGE",42,0)
 ;
"RTN","PXRMAGE",43,0)
 ;=======================================================================
"RTN","PXRMAGE",44,0)
MMF(MINAGE,MAXAGE,FREQ,FIEVAL) ;Set the baseline minimum age, maximum
"RTN","PXRMAGE",45,0)
 ;age, and frequency.  If there are multiple intervals they cannot
"RTN","PXRMAGE",46,0)
 ;overlap.
"RTN","PXRMAGE",47,0)
 N FR,IC,INDEX,MATCH,MAXA,MINA,NAR,TEMP
"RTN","PXRMAGE",48,0)
 ;
"RTN","PXRMAGE",49,0)
 ;Initialize MINAGE, MAXAGE, and FREQ.
"RTN","PXRMAGE",50,0)
 S (MINAGE,MAXAGE,FREQ)=""
"RTN","PXRMAGE",51,0)
 ;
"RTN","PXRMAGE",52,0)
 S IC=0
"RTN","PXRMAGE",53,0)
 S NAR=0
"RTN","PXRMAGE",54,0)
 F  S IC=$O(^PXD(811.9,PXRMITEM,7,IC)) Q:+IC=0  D
"RTN","PXRMAGE",55,0)
 . S NAR=NAR+1
"RTN","PXRMAGE",56,0)
 . S TEMP=$G(^PXD(811.9,PXRMITEM,7,IC,0))
"RTN","PXRMAGE",57,0)
 . S FR(NAR)=$$UP^XLFSTR($P(TEMP,U,1))
"RTN","PXRMAGE",58,0)
 . S MINA(NAR)=$P(TEMP,U,2)
"RTN","PXRMAGE",59,0)
 . S MAXA(NAR)=$P(TEMP,U,3)
"RTN","PXRMAGE",60,0)
 . S INDEX(NAR)=IC
"RTN","PXRMAGE",61,0)
 . S FIEVAL("AGE",IC)=0
"RTN","PXRMAGE",62,0)
 ;
"RTN","PXRMAGE",63,0)
 ;Make sure that none of the age ranges overlap.
"RTN","PXRMAGE",64,0)
 I $$OVERLAP(NAR,.MINA,.MAXA) Q
"RTN","PXRMAGE",65,0)
 ;
"RTN","PXRMAGE",66,0)
 ;Look for an age range match.
"RTN","PXRMAGE",67,0)
 S FREQ=-1
"RTN","PXRMAGE",68,0)
 S MATCH=0
"RTN","PXRMAGE",69,0)
 F IC=1:1:NAR Q:MATCH  D
"RTN","PXRMAGE",70,0)
 . I $$AGECHECK(PXRMAGE,MINA(IC),MAXA(IC)) D
"RTN","PXRMAGE",71,0)
 .. S MATCH=1
"RTN","PXRMAGE",72,0)
 .. S MINAGE=MINA(IC)
"RTN","PXRMAGE",73,0)
 .. S MAXAGE=MAXA(IC)
"RTN","PXRMAGE",74,0)
 .. S FREQ=FR(IC)
"RTN","PXRMAGE",75,0)
 .. S FIEVAL("AGE",INDEX(IC))=1
"RTN","PXRMAGE",76,0)
 Q
"RTN","PXRMAGE",77,0)
 ;
"RTN","PXRMAGE",78,0)
 ;=======================================================================
"RTN","PXRMAGE",79,0)
MNMT(NLINES,FIEVAL) ;Output the AGE match/no match text.
"RTN","PXRMAGE",80,0)
 N IC,IND,LC,TEXT
"RTN","PXRMAGE",81,0)
 I '$D(FIEVAL("AGE")) Q
"RTN","PXRMAGE",82,0)
 S IC=""
"RTN","PXRMAGE",83,0)
 F  S IC=$O(FIEVAL("AGE",IC)) Q:IC=""  D
"RTN","PXRMAGE",84,0)
 . I FIEVAL("AGE",IC)=1 S IND=1
"RTN","PXRMAGE",85,0)
 . E  S IND=2
"RTN","PXRMAGE",86,0)
 . S LC=0
"RTN","PXRMAGE",87,0)
 . F  S LC=$O(^PXD(811.9,PXRMITEM,7,IC,IND,LC)) Q:LC=""  D
"RTN","PXRMAGE",88,0)
 .. S TEXT=$G(^PXD(811.9,PXRMITEM,7,IC,IND,LC,0))
"RTN","PXRMAGE",89,0)
 .. D ADDTXT^PXRMOPT(.NLINES,TEXT)
"RTN","PXRMAGE",90,0)
 . I $D(PXRMDEV) D
"RTN","PXRMAGE",91,0)
 .. N DES,UID
"RTN","PXRMAGE",92,0)
 .. S DES="AGE"_IC_IND
"RTN","PXRMAGE",93,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMAGE",94,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=FIEVAL("AGE",IC)
"RTN","PXRMAGE",95,0)
 Q
"RTN","PXRMAGE",96,0)
 ;
"RTN","PXRMAGE",97,0)
 ;=======================================================================
"RTN","PXRMAGE",98,0)
OVERLAP(NAR,MINA,MAXA) ;Check age ranges for overlap.  Return an error message
"RTN","PXRMAGE",99,0)
 ;if an overlap is found.
"RTN","PXRMAGE",100,0)
 I NAR'>1 Q 0
"RTN","PXRMAGE",101,0)
 N IC,IN,JC,MAXI,MAXJ,MINI,MINJ,OVRLAP
"RTN","PXRMAGE",102,0)
 S OVRLAP=0
"RTN","PXRMAGE",103,0)
 F IC=1:1:NAR-1 D
"RTN","PXRMAGE",104,0)
 . S MAXI=MAXA(IC)
"RTN","PXRMAGE",105,0)
 . I MAXI="" S MAXI=1000
"RTN","PXRMAGE",106,0)
 . S MINI=MINA(IC)
"RTN","PXRMAGE",107,0)
 . I MINI="" S MINI=0
"RTN","PXRMAGE",108,0)
 . F JC=IC+1:1:NAR D
"RTN","PXRMAGE",109,0)
 .. S MAXJ=MAXA(JC)
"RTN","PXRMAGE",110,0)
 .. I MAXJ="" S MAXJ=1000
"RTN","PXRMAGE",111,0)
 .. S MINJ=MINA(JC)
"RTN","PXRMAGE",112,0)
 .. I MINJ="" S MINJ=0
"RTN","PXRMAGE",113,0)
 .. S IN=0
"RTN","PXRMAGE",114,0)
 .. I (MINJ'<MINI)&(MINJ'>MAXI) S IN=1
"RTN","PXRMAGE",115,0)
 .. I (MAXJ'<MINI)&(MAXJ'>MAXI) S IN=1
"RTN","PXRMAGE",116,0)
 .. I IN D
"RTN","PXRMAGE",117,0)
 ... S OVRLAP=OVRLAP+1
"RTN","PXRMAGE",118,0)
 ... S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","AGE OVERLAP",OVRLAP)=MINA(IC)_" to "_MAXA(IC)_" and "_MINA(JC)_" to "_MAXA(JC)
"RTN","PXRMAGE",119,0)
 I OVRLAP>1 S OVRLAP=1
"RTN","PXRMAGE",120,0)
 Q OVRLAP
"RTN","PXRMAGE",121,0)
 ;
"RTN","PXRMAGE",122,0)
 ;=======================================================================
"RTN","PXRMAGE",123,0)
RESTORE(SOURCE,INDEX,FREQ,MINAGE,MAXAGE) ;Restore FREQ, MINAGE, and
"RTN","PXRMAGE",124,0)
 ;MAXAGE back to the original form.
"RTN","PXRMAGE",125,0)
 N IND,TEMP
"RTN","PXRMAGE",126,0)
 I SOURCE="CFIND" D
"RTN","PXRMAGE",127,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,10,"B",INDEX,""))
"RTN","PXRMAGE",128,0)
 . S TEMP=^PXD(811.9,PXRMITEM,10,IND,0)
"RTN","PXRMAGE",129,0)
 ;
"RTN","PXRMAGE",130,0)
 I SOURCE="HFIND" D
"RTN","PXRMAGE",131,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,6,"B",INDEX,""))
"RTN","PXRMAGE",132,0)
 . S TEMP=^PXD(811.9,PXRMITEM,6,IND,0)
"RTN","PXRMAGE",133,0)
 ;
"RTN","PXRMAGE",134,0)
 I SOURCE="TFIND" D
"RTN","PXRMAGE",135,0)
 . S IND=$O(^PXD(811.9,PXRMITEM,4,"B",INDEX,""))
"RTN","PXRMAGE",136,0)
 . S TEMP=^PXD(811.9,PXRMITEM,4,IND,0)
"RTN","PXRMAGE",137,0)
 ;
"RTN","PXRMAGE",138,0)
 S MINAGE=$P(TEMP,U,2)
"RTN","PXRMAGE",139,0)
 S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMAGE",140,0)
 S FREQ=$P(TEMP,U,4)
"RTN","PXRMAGE",141,0)
 Q
"RTN","PXRMAGE",142,0)
 ;
"RTN","PXRMBXTL")
0^18^B21513893
"RTN","PXRMBXTL",1,0)
PXRMBXTL ; SLC/PKR,PJH - Build expanded taxonomies. ;10/03/2000
"RTN","PXRMBXTL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMBXTL",3,0)
 ;
"RTN","PXRMBXTL",4,0)
 ;=======================================================================
"RTN","PXRMBXTL",5,0)
CHECK(TAXIEN,KI) ;Check for expanded taxonomy, make sure it is current,
"RTN","PXRMBXTL",6,0)
 ;build or rebuild if necessary.
"RTN","PXRMBXTL",7,0)
 N DATEBLT,ICD0SUM,ICD9SUM,ICPTDATE,REBUILD,TEMP,TEMP0
"RTN","PXRMBXTL",8,0)
 ;
"RTN","PXRMBXTL",9,0)
 S TEMP=$G(^PXD(811.3,TAXIEN,0))
"RTN","PXRMBXTL",10,0)
 ;
"RTN","PXRMBXTL",11,0)
 ;See if the expanded taxonomy should be rebuilt.
"RTN","PXRMBXTL",12,0)
 S REBUILD=0
"RTN","PXRMBXTL",13,0)
 ;Check the date built, if it is 0 then rebuild.
"RTN","PXRMBXTL",14,0)
 S DATEBLT=+$P(TEMP,U,2)
"RTN","PXRMBXTL",15,0)
 I DATEBLT=0 S REBUILD=1
"RTN","PXRMBXTL",16,0)
 ;
"RTN","PXRMBXTL",17,0)
 ;Check for changes in the ICD0 file.
"RTN","PXRMBXTL",18,0)
 I 'REBUILD D
"RTN","PXRMBXTL",19,0)
 . S ICD0SUM=+$P(TEMP,U,4)
"RTN","PXRMBXTL",20,0)
 . S TEMP0=^ICD0(0)
"RTN","PXRMBXTL",21,0)
 . I (ICD0SUM)'=(+$P(TEMP0,U,3)+$P(TEMP0,U,4)) S REBUILD=1
"RTN","PXRMBXTL",22,0)
 ;
"RTN","PXRMBXTL",23,0)
 ;Check for changes in the ICD9 file.
"RTN","PXRMBXTL",24,0)
 I 'REBUILD D
"RTN","PXRMBXTL",25,0)
 . S ICD9SUM=+$P(TEMP,U,6)
"RTN","PXRMBXTL",26,0)
 . S TEMP0=^ICD9(0)
"RTN","PXRMBXTL",27,0)
 . I (ICD9SUM)'=(+$P(TEMP0,U,3)+$P(TEMP0,U,4)) S REBUILD=1
"RTN","PXRMBXTL",28,0)
 ;
"RTN","PXRMBXTL",29,0)
 ;Check for changes in the ICPT file.
"RTN","PXRMBXTL",30,0)
 I 'REBUILD D
"RTN","PXRMBXTL",31,0)
 . S ICPTDATE=$P(TEMP,U,8)
"RTN","PXRMBXTL",32,0)
 . I ICPTDATE'=$$CPTDIST^ICPTAPIU S REBUILD=1
"RTN","PXRMBXTL",33,0)
 ;
"RTN","PXRMBXTL",34,0)
 I REBUILD D
"RTN","PXRMBXTL",35,0)
 . I $D(^PXD(811.3,TAXIEN)) D DELEXTL(TAXIEN)
"RTN","PXRMBXTL",36,0)
 . D EXPAND(TAXIEN,KI)
"RTN","PXRMBXTL",37,0)
 Q
"RTN","PXRMBXTL",38,0)
 ;
"RTN","PXRMBXTL",39,0)
 ;=======================================================================
"RTN","PXRMBXTL",40,0)
DELEXTL(TAXIEN) ;Delete an expanded taxonomy.
"RTN","PXRMBXTL",41,0)
 I '$$LOCKXTL(TAXIEN) Q
"RTN","PXRMBXTL",42,0)
 N DA,DIK
"RTN","PXRMBXTL",43,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMBXTL",44,0)
 S DA=TAXIEN
"RTN","PXRMBXTL",45,0)
 D ^DIK
"RTN","PXRMBXTL",46,0)
 D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",47,0)
 Q
"RTN","PXRMBXTL",48,0)
 ;
"RTN","PXRMBXTL",49,0)
 ;=======================================================================
"RTN","PXRMBXTL",50,0)
EXPAND(TAXIEN,KI) ;Build an expanded taxonomy. If KI is defined then
"RTN","PXRMBXTL",51,0)
 ;entry KI is being deleted so skip it.
"RTN","PXRMBXTL",52,0)
 I '$$LOCKXTL(TAXIEN) Q
"RTN","PXRMBXTL",53,0)
 N DATEBLT,HIGH,ICD0SUM,ICD9SUM,ICPTDATE,IND,LOW
"RTN","PXRMBXTL",54,0)
 N NICD0,NICD9,NICPT,NRCPT,TEMP
"RTN","PXRMBXTL",55,0)
 S DATEBLT=$$NOW^XLFDT
"RTN","PXRMBXTL",56,0)
 S $P(^PXD(811.3,TAXIEN,0),U,1)=TAXIEN
"RTN","PXRMBXTL",57,0)
 S $P(^PXD(811.3,TAXIEN,0),U,2)=DATEBLT
"RTN","PXRMBXTL",58,0)
 ;
"RTN","PXRMBXTL",59,0)
 S (IND,NICD0)=0
"RTN","PXRMBXTL",60,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,80.1,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",61,0)
 . I KI=IND Q
"RTN","PXRMBXTL",62,0)
 . S TEMP=^PXD(811.2,TAXIEN,80.1,IND,0)
"RTN","PXRMBXTL",63,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",64,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",65,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",66,0)
 . D ICD0(LOW,HIGH,.NICD0)
"RTN","PXRMBXTL",67,0)
 S TEMP=^ICD0(0)
"RTN","PXRMBXTL",68,0)
 S ICD0SUM=+$P(TEMP,U,3)+$P(TEMP,U,4)
"RTN","PXRMBXTL",69,0)
 S $P(^PXD(811.3,TAXIEN,0),U,3)=NICD0
"RTN","PXRMBXTL",70,0)
 S $P(^PXD(811.3,TAXIEN,0),U,4)=ICD0SUM
"RTN","PXRMBXTL",71,0)
 ;
"RTN","PXRMBXTL",72,0)
 S (IND,NICD9)=0
"RTN","PXRMBXTL",73,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,80,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",74,0)
 . I KI=IND Q
"RTN","PXRMBXTL",75,0)
 . S TEMP=^PXD(811.2,TAXIEN,80,IND,0)
"RTN","PXRMBXTL",76,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",77,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",78,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",79,0)
 . D ICD9(LOW,HIGH,.NICD9)
"RTN","PXRMBXTL",80,0)
 S TEMP=^ICD9(0)
"RTN","PXRMBXTL",81,0)
 S ICD9SUM=+$P(TEMP,U,3)+$P(TEMP,U,4)
"RTN","PXRMBXTL",82,0)
 S $P(^PXD(811.3,TAXIEN,0),U,5)=NICD9
"RTN","PXRMBXTL",83,0)
 S $P(^PXD(811.3,TAXIEN,0),U,6)=ICD9SUM
"RTN","PXRMBXTL",84,0)
 ;
"RTN","PXRMBXTL",85,0)
 S (IND,NICPT,NRCPT)=0
"RTN","PXRMBXTL",86,0)
 F  S IND=$O(^PXD(811.2,TAXIEN,81,IND)) Q:+IND=0  D
"RTN","PXRMBXTL",87,0)
 . I KI=IND Q
"RTN","PXRMBXTL",88,0)
 . S TEMP=^PXD(811.2,TAXIEN,81,IND,0)
"RTN","PXRMBXTL",89,0)
 . S LOW=$P(TEMP,U,1)
"RTN","PXRMBXTL",90,0)
 . S HIGH=$P(TEMP,U,2)
"RTN","PXRMBXTL",91,0)
 . I HIGH="" S HIGH=LOW
"RTN","PXRMBXTL",92,0)
 . D ICPT(LOW,HIGH,.NICPT,.NRCPT)
"RTN","PXRMBXTL",93,0)
 S ICPTDATE=$$CPTDIST^ICPTAPIU
"RTN","PXRMBXTL",94,0)
 S $P(^PXD(811.3,TAXIEN,0),U,7)=NICPT
"RTN","PXRMBXTL",95,0)
 S $P(^PXD(811.3,TAXIEN,0),U,8)=ICPTDATE
"RTN","PXRMBXTL",96,0)
 S $P(^PXD(811.3,TAXIEN,0),U,9)=NRCPT
"RTN","PXRMBXTL",97,0)
 ;
"RTN","PXRMBXTL",98,0)
 ;Build the cross-references
"RTN","PXRMBXTL",99,0)
 N DA,DIK
"RTN","PXRMBXTL",100,0)
 S DIK="^PXD(811.3,"
"RTN","PXRMBXTL",101,0)
 S DA=TAXIEN
"RTN","PXRMBXTL",102,0)
 D IX1^DIK
"RTN","PXRMBXTL",103,0)
 ;
"RTN","PXRMBXTL",104,0)
 D ULOCKXTL(TAXIEN)
"RTN","PXRMBXTL",105,0)
 Q
"RTN","PXRMBXTL",106,0)
 ;
"RTN","PXRMBXTL",107,0)
 ;=======================================================================
"RTN","PXRMBXTL",108,0)
ICD0(LOW,HIGH,NICD0) ;Build the list of internal entries for ICD0
"RTN","PXRMBXTL",109,0)
 ;(File 80.1).
"RTN","PXRMBXTL",110,0)
 N END,IEN,IND
"RTN","PXRMBXTL",111,0)
 S IND=LOW_" "
"RTN","PXRMBXTL",112,0)
 S END=HIGH_" "
"RTN","PXRMBXTL",113,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMBXTL",114,0)
 . S IEN=$O(^ICD0("BA",IND,""))
"RTN","PXRMBXTL",115,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",116,0)
 .. S NICD0=NICD0+1
"RTN","PXRMBXTL",117,0)
 .. S ^PXD(811.3,TAXIEN,80.1,NICD0,0)=IEN
"RTN","PXRMBXTL",118,0)
 . S IND=$O(^ICD0("BA",IND))
"RTN","PXRMBXTL",119,0)
 Q
"RTN","PXRMBXTL",120,0)
 ;
"RTN","PXRMBXTL",121,0)
 ;=======================================================================
"RTN","PXRMBXTL",122,0)
ICD9(LOW,HIGH,NICD9) ;Build the list of internal entries for ICD9
"RTN","PXRMBXTL",123,0)
 ;(File 80).
"RTN","PXRMBXTL",124,0)
 N END,IEN,IND
"RTN","PXRMBXTL",125,0)
 S IND=LOW_" "
"RTN","PXRMBXTL",126,0)
 S END=HIGH_" "
"RTN","PXRMBXTL",127,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMBXTL",128,0)
 . S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMBXTL",129,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",130,0)
 .. S NICD9=NICD9+1
"RTN","PXRMBXTL",131,0)
 .. S ^PXD(811.3,TAXIEN,80,NICD9,0)=IEN
"RTN","PXRMBXTL",132,0)
 . S IND=$O(^ICD9("BA",IND))
"RTN","PXRMBXTL",133,0)
 Q
"RTN","PXRMBXTL",134,0)
 ;
"RTN","PXRMBXTL",135,0)
 ;=======================================================================
"RTN","PXRMBXTL",136,0)
ICPT(LOW,HIGH,NICPT,NRCPT) ;Build the list of internal entries
"RTN","PXRMBXTL",137,0)
 ;for ICPT (File 81).
"RTN","PXRMBXTL",138,0)
 N IEN,IND,RADIEN
"RTN","PXRMBXTL",139,0)
 S IND=LOW
"RTN","PXRMBXTL",140,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMBXTL",141,0)
 . S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMBXTL",142,0)
 . I +IEN>0 D
"RTN","PXRMBXTL",143,0)
 .. S NICPT=NICPT+1
"RTN","PXRMBXTL",144,0)
 .. S ^PXD(811.3,TAXIEN,81,NICPT,0)=IEN
"RTN","PXRMBXTL",145,0)
 ..;Determine if this is a radiology procedure.
"RTN","PXRMBXTL",146,0)
 .. S RADIEN=+$O(^RAMIS(71,"D",IEN,""))
"RTN","PXRMBXTL",147,0)
 .. I RADIEN>0 D
"RTN","PXRMBXTL",148,0)
 ... S NRCPT=NRCPT+1
"RTN","PXRMBXTL",149,0)
 ... S ^PXD(811.3,TAXIEN,71,NRCPT,0)=IEN_U_RADIEN
"RTN","PXRMBXTL",150,0)
 . S IND=$O(^ICPT("B",IND))
"RTN","PXRMBXTL",151,0)
 Q
"RTN","PXRMBXTL",152,0)
 ;
"RTN","PXRMBXTL",153,0)
 ;=======================================================================
"RTN","PXRMBXTL",154,0)
LOCKXTL(TAXIEN) ;Lock the expanded taxonomy entry. This may be called during
"RTN","PXRMBXTL",155,0)
 ;reminder evalution in which case PXRMXTLK will be defined or during
"RTN","PXRMBXTL",156,0)
 ;a taxonomy edit in which case PXRMXTLK will be undefined.
"RTN","PXRMBXTL",157,0)
 N IND,LC,LOCK
"RTN","PXRMBXTL",158,0)
 I $D(PXRMXTLK) S LC=30
"RTN","PXRMBXTL",159,0)
 E  S LC=2
"RTN","PXRMBXTL",160,0)
 S LOCK=0
"RTN","PXRMBXTL",161,0)
 F IND=1:1:LC Q:LOCK  D
"RTN","PXRMBXTL",162,0)
 . L +^PXD(811.3,TAXIEN):1
"RTN","PXRMBXTL",163,0)
 . S LOCK=$T
"RTN","PXRMBXTL",164,0)
 ;If we can't get lock take appropriate action.
"RTN","PXRMBXTL",165,0)
 I 'LOCK D
"RTN","PXRMBXTL",166,0)
 . I $D(PXRMXTLK) S PXRMXTLK=TAXIEN
"RTN","PXRMBXTL",167,0)
 . E  D
"RTN","PXRMBXTL",168,0)
 .. N TEXT
"RTN","PXRMBXTL",169,0)
 .. S TEXT="Could not get lock for expanded taxonomy "_TAXIEN_" try again later."
"RTN","PXRMBXTL",170,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMBXTL",171,0)
 Q LOCK
"RTN","PXRMBXTL",172,0)
 ;
"RTN","PXRMBXTL",173,0)
 ;=======================================================================
"RTN","PXRMBXTL",174,0)
ULOCKXTL(TAXIEN) ;Unlock the expanded taxonomy.
"RTN","PXRMBXTL",175,0)
 L -^PXD(811.3,TAXIEN)
"RTN","PXRMBXTL",176,0)
 Q
"RTN","PXRMBXTL",177,0)
 ;
"RTN","PXRMCAT")
0^70^B14734475
"RTN","PXRMCAT",1,0)
PXRMCAT ; SLC/PJH - Edit/Inquire reminder categories ;01/05/2001
"RTN","PXRMCAT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMCAT",3,0)
 ;
"RTN","PXRMCAT",4,0)
 ;Called by option PXRM REMINDER CATEGORIES
"RTN","PXRMCAT",5,0)
 ;
"RTN","PXRMCAT",6,0)
START N DIC,PXRMHD,PXRMCAT,PXRMGTYP,Y
"RTN","PXRMCAT",7,0)
SELECT ;General selection
"RTN","PXRMCAT",8,0)
 S PXRMHD="Reminder Categories",PXRMGTYP="RCAT",PXRMCAT=""
"RTN","PXRMCAT",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMCAT")
"RTN","PXRMCAT",10,0)
 ;Should return a value
"RTN","PXRMCAT",11,0)
 I PXRMCAT D  G SELECT
"RTN","PXRMCAT",12,0)
 .S PXRMHD="REMINDER CATEGORY NAME:"
"RTN","PXRMCAT",13,0)
 .;Listman option
"RTN","PXRMCAT",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMCAT)
"RTN","PXRMCAT",15,0)
END Q
"RTN","PXRMCAT",16,0)
 ;
"RTN","PXRMCAT",17,0)
 ;Build Category Inquiry array
"RTN","PXRMCAT",18,0)
 ;----------------------------
"RTN","PXRMCAT",19,0)
BUILD(ARRAY,D0) ;
"RTN","PXRMCAT",20,0)
 N D1,IC,LEVEL,SEQ,TAB,TXT,TEMP
"RTN","PXRMCAT",21,0)
 ;Category Description
"RTN","PXRMCAT",22,0)
 S LEVEL=5 D DES
"RTN","PXRMCAT",23,0)
 ;Reminders
"RTN","PXRMCAT",24,0)
 S LEVEL=0 D REM
"RTN","PXRMCAT",25,0)
 ;Sort Sub-category into display order
"RTN","PXRMCAT",26,0)
 D SORT(D0,.TEMP)
"RTN","PXRMCAT",27,0)
 ;Sub-category ... D0=IEN OF PARENT D1=NODE NUMBER IN 10 OF CHILD 
"RTN","PXRMCAT",28,0)
 S SEQ=0
"RTN","PXRMCAT",29,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:'SEQ  D
"RTN","PXRMCAT",30,0)
 .S D1=TEMP(SEQ)
"RTN","PXRMCAT",31,0)
 .D GETLST(D0,D1,0)
"RTN","PXRMCAT",32,0)
 Q
"RTN","PXRMCAT",33,0)
 ;
"RTN","PXRMCAT",34,0)
 ;Build display for selected category - Called from PXRMGEN
"RTN","PXRMCAT",35,0)
 ;---------------------------------------------------------
"RTN","PXRMCAT",36,0)
CAT(PXRMCAT) ;
"RTN","PXRMCAT",37,0)
 N DATA,DARRAY,SUB
"RTN","PXRMCAT",38,0)
 S VALMCNT=0 K ^TMP("PXRMGENS",$J),^TMP("PXRMGEN",$J)
"RTN","PXRMCAT",39,0)
 ;
"RTN","PXRMCAT",40,0)
 ;Format headings to include category name
"RTN","PXRMCAT",41,0)
 S HEADER=PXRMHD_" "_$P(^PXRMD(811.7,PXRMCAT,0),U)
"RTN","PXRMCAT",42,0)
 ;
"RTN","PXRMCAT",43,0)
 ;Build Reminder Category Display
"RTN","PXRMCAT",44,0)
 D BUILD(.DARRAY,PXRMCAT) M ^TMP("PXRMGENS",$J)=DARRAY
"RTN","PXRMCAT",45,0)
 ; 
"RTN","PXRMCAT",46,0)
 ;Put the list into the array List Manager is using.
"RTN","PXRMCAT",47,0)
 S SUB="",VALMCNT=0
"RTN","PXRMCAT",48,0)
 F  S SUB=$O(^TMP("PXRMGENS",$J,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",49,0)
 .S DATA=$G(^TMP("PXRMGENS",$J,SUB))
"RTN","PXRMCAT",50,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMCAT",51,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=DATA
"RTN","PXRMCAT",52,0)
 K ^TMP("PXRMGENS",$J)
"RTN","PXRMCAT",53,0)
 ;Create headings
"RTN","PXRMCAT",54,0)
 D CHGCAP^VALM("HEADER1","")
"RTN","PXRMCAT",55,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMCAT",56,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMCAT",57,0)
 Q
"RTN","PXRMCAT",58,0)
 ;
"RTN","PXRMCAT",59,0)
 ;Category description
"RTN","PXRMCAT",60,0)
 ;--------------------
"RTN","PXRMCAT",61,0)
DES ;array.
"RTN","PXRMCAT",62,0)
 N DIWF,DIWL,DIWR,SUB
"RTN","PXRMCAT",63,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMCAT",64,0)
 K ^UTILITY($J,"W")
"RTN","PXRMCAT",65,0)
 S SUB=0
"RTN","PXRMCAT",66,0)
 F  S SUB=$O(^PXRMD(811.7,D0,1,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",67,0)
 .S X=$G(^PXRMD(811.7,D0,1,SUB,0))
"RTN","PXRMCAT",68,0)
 .D ^DIWP
"RTN","PXRMCAT",69,0)
 S ARRAY(1)="Category Description:",IC=1
"RTN","PXRMCAT",70,0)
 F  S SUB=$O(^UTILITY($J,"W",0,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",71,0)
 .S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_^UTILITY($J,"W",0,SUB,0)
"RTN","PXRMCAT",72,0)
 K ^UTILITY($J,"W")
"RTN","PXRMCAT",73,0)
 Q
"RTN","PXRMCAT",74,0)
 ;
"RTN","PXRMCAT",75,0)
 ;Get list of sub-categories
"RTN","PXRMCAT",76,0)
 ;--------------------------
"RTN","PXRMCAT",77,0)
GETLST(D0,D1,LEVEL) ;
"RTN","PXRMCAT",78,0)
 N CHILD,DATA,NAME,PXRMIEN,PXRMCAT,PXRMSEQ,SEQ,SUB,TEMP
"RTN","PXRMCAT",79,0)
 ;Determine if this subcategory has children
"RTN","PXRMCAT",80,0)
 S DATA=$G(^PXRMD(811.7,D0,10,D1,0)) Q:DATA=""
"RTN","PXRMCAT",81,0)
 S PXRMCAT=$P(DATA,U) Q:PXRMCAT=""
"RTN","PXRMCAT",82,0)
 S PXRMSEQ=$P(DATA,U,2),NAME=$G(^PXRMD(811.7,PXRMCAT,0))
"RTN","PXRMCAT",83,0)
 I NAME="" S NAME=PXRMCAT
"RTN","PXRMCAT",84,0)
 I LEVEL=0 S IC=IC+1,ARRAY(IC)=""
"RTN","PXRMCAT",85,0)
 S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_"Sub-category:"_NAME
"RTN","PXRMCAT",86,0)
 S ARRAY(IC)=ARRAY(IC)_$J("",38-$L(NAME))_" Sequence: "_PXRMSEQ
"RTN","PXRMCAT",87,0)
 ;Increment tab
"RTN","PXRMCAT",88,0)
 S LEVEL=LEVEL+5
"RTN","PXRMCAT",89,0)
 ;Don't allow > 4 levels
"RTN","PXRMCAT",90,0)
 I LEVEL>20 S IC=IC+1,ARRAY(IC)=$J("",LEVEL)_"Further levels" Q
"RTN","PXRMCAT",91,0)
 ;Save details of reminders for this category
"RTN","PXRMCAT",92,0)
 D REM
"RTN","PXRMCAT",93,0)
 ;Sort Sub-categories into display order
"RTN","PXRMCAT",94,0)
 D SORT(PXRMCAT,.TEMP)
"RTN","PXRMCAT",95,0)
 ;
"RTN","PXRMCAT",96,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMCAT",97,0)
 S SEQ=""
"RTN","PXRMCAT",98,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCAT",99,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMCAT",100,0)
 .D GETLST(PXRMCAT,SUB,LEVEL)
"RTN","PXRMCAT",101,0)
 Q
"RTN","PXRMCAT",102,0)
 ;
"RTN","PXRMCAT",103,0)
 ;Reminders for this category
"RTN","PXRMCAT",104,0)
 ;---------------------------
"RTN","PXRMCAT",105,0)
REM S SUB=0 K TEMP
"RTN","PXRMCAT",106,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMCAT",107,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",108,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMCAT",109,0)
 .S PXRMIEN=$P(DATA,U) Q:PXRMIEN=""
"RTN","PXRMCAT",110,0)
 .S SEQ=$P(DATA,U,2)
"RTN","PXRMCAT",111,0)
 .S DATA=$G(^PXD(811.9,PXRMIEN,0)) Q:DATA=""
"RTN","PXRMCAT",112,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMCAT",113,0)
 .S TEMP(SEQ_0)=NAME
"RTN","PXRMCAT",114,0)
 ;
"RTN","PXRMCAT",115,0)
 I LEVEL=0,$O(TEMP("")) S IC=IC+1,ARRAY(IC)=""
"RTN","PXRMCAT",116,0)
 ;
"RTN","PXRMCAT",117,0)
 ;Re-save reminders in output array for display
"RTN","PXRMCAT",118,0)
 S SEQ=""
"RTN","PXRMCAT",119,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMCAT",120,0)
 .S IC=IC+1
"RTN","PXRMCAT",121,0)
 .S ARRAY(IC)=$J("",LEVEL)_"Sequence: "_$J(SEQ/10,2)_"   Reminder: "_TEMP(SEQ)
"RTN","PXRMCAT",122,0)
 Q
"RTN","PXRMCAT",123,0)
 ;
"RTN","PXRMCAT",124,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMCAT",125,0)
 ;--------------------------------------------------------
"RTN","PXRMCAT",126,0)
SORT(PXRMCAT,TEMP) ;
"RTN","PXRMCAT",127,0)
 N DATA,SEQ,SUB
"RTN","PXRMCAT",128,0)
 S SUB=0 K TEMP
"RTN","PXRMCAT",129,0)
 F  S SUB=$O(^PXRMD(811.7,PXRMCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMCAT",130,0)
 .S DATA=$G(^PXRMD(811.7,PXRMCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMCAT",131,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMCAT",132,0)
 Q
"RTN","PXRMCF")
0^29^B10317924
"RTN","PXRMCF",1,0)
PXRMCF ; SLC/PKR - Handle computed findings. ;03/05/2001
"RTN","PXRMCF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMCF",3,0)
 ;
"RTN","PXRMCF",4,0)
 ;=======================================================================
"RTN","PXRMCF",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate computed findings.
"RTN","PXRMCF",6,0)
 N CFIEN,FIND0,FIND3,FINDING
"RTN","PXRMCF",7,0)
 S CFIEN=""
"RTN","PXRMCF",8,0)
 F  S CFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.4,",CFIEN)) Q:+CFIEN=0  D
"RTN","PXRMCF",9,0)
 . S FINDING=""
"RTN","PXRMCF",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXRMD(811.4,",CFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMCF",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMCF",12,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMCF",13,0)
 .. D FIEVAL(DFN,CFIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMCF",14,0)
 Q
"RTN","PXRMCF",15,0)
 ;
"RTN","PXRMCF",16,0)
 ;=======================================================================
"RTN","PXRMCF",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate computed finding terms.
"RTN","PXRMCF",18,0)
 N CFIEN,FIND0,FIND3,LFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMCF",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMCF",20,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMCF",21,0)
 S CFIEN=""
"RTN","PXRMCF",22,0)
 F  S CFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PXRMD(811.4,",CFIEN)) Q:+CFIEN=0  D
"RTN","PXRMCF",23,0)
 . S TFINDING=""
"RTN","PXRMCF",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PXRMD(811.4,",CFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMCF",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMCF",26,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMCF",27,0)
 .. D FIEVAL(DFN,CFIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMCF",28,0)
 Q
"RTN","PXRMCF",29,0)
 ;
"RTN","PXRMCF",30,0)
 ;=======================================================================
"RTN","PXRMCF",31,0)
FIEVAL(DFN,CFIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMCF",32,0)
 N CONVAL,DATE,ROUTINE,TEMP,TEST,TEXT,VALID,VALUE
"RTN","PXRMCF",33,0)
 S TEMP=^PXRMD(811.4,CFIEN,0)
"RTN","PXRMCF",34,0)
 S ROUTINE=$P(TEMP,U,3)_"^"_$P(TEMP,U,2)_"(DFN,.TEST,.DATE,.VALUE,.TEXT)"
"RTN","PXRMCF",35,0)
 S (TEST,DATE,VALUE,TEXT)=""
"RTN","PXRMCF",36,0)
 D @ROUTINE
"RTN","PXRMCF",37,0)
 S FIEVAL(FINDING)=TEST
"RTN","PXRMCF",38,0)
 ;If the finding is false we are done.
"RTN","PXRMCF",39,0)
 I 'TEST Q
"RTN","PXRMCF",40,0)
 S FIEVAL(FINDING,"FINDING")=CFIEN_";PXRMD(811.4,"
"RTN","PXRMCF",41,0)
 S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)
"RTN","PXRMCF",42,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMCF",43,0)
 I $L(VALUE)>0 S FIEVAL(FINDING,"VALUE")=VALUE
"RTN","PXRMCF",44,0)
 I $L(TEXT)>0 S FIEVAL(FINDING,"TEXT")=TEXT
"RTN","PXRMCF",45,0)
 ;
"RTN","PXRMCF",46,0)
 ;Determine if the finding has expired.
"RTN","PXRMCF",47,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMCF",48,0)
 I 'VALID D  Q
"RTN","PXRMCF",49,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMCF",50,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMCF",51,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMCF",52,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,VALUE)
"RTN","PXRMCF",53,0)
 I CONVAL'="" D
"RTN","PXRMCF",54,0)
 . I CONVAL D
"RTN","PXRMCF",55,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMCF",56,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMCF",57,0)
 . E  D
"RTN","PXRMCF",58,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMCF",59,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMCF",60,0)
 Q
"RTN","PXRMCF",61,0)
 ;
"RTN","PXRMCF",62,0)
 ;=======================================================================
"RTN","PXRMCF",63,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMCF",64,0)
 ;maintenance output.
"RTN","PXRMCF",65,0)
 N DATA,DATE,FI,PNAME,TEMP,VALUE
"RTN","PXRMCF",66,0)
 S FI=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMCF",67,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMCF",68,0)
 S VALUE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMCF",69,0)
 I +DATE>0 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMCF",70,0)
 E  S TEMP=""
"RTN","PXRMCF",71,0)
 S TEMP=TEMP_" Computed Finding: "
"RTN","PXRMCF",72,0)
 S PNAME=$P(^PXRMD(811.4,FI,0),U,4)
"RTN","PXRMCF",73,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMCF",74,0)
 I $L(VALUE)>0 D
"RTN","PXRMCF",75,0)
 . S TEMP=TEMP_"; value - "_VALUE
"RTN","PXRMCF",76,0)
 ;If there is text append it.
"RTN","PXRMCF",77,0)
 I $D(FIEVAL(FINDING,"TEXT"))>0 S TEMP=TEMP_"; "_FIEVAL(FINDING,"TEXT")
"RTN","PXRMCF",78,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMCF",79,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMCF",80,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMCF",81,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMCF",82,0)
 S NLINES=NLINES+1
"RTN","PXRMCF",83,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMCF",84,0)
 I $D(PXRMDEV) D
"RTN","PXRMCF",85,0)
 . N UID
"RTN","PXRMCF",86,0)
 . S UID="CF "_PNAME
"RTN","PXRMCF",87,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMCF",88,0)
 Q
"RTN","PXRMCF",89,0)
 ;
"RTN","PXRMCFED")
0^78^B1447960
"RTN","PXRMCFED",1,0)
PXRMCFED ; SLC/PKR - Edit a reminder computed finding. ;02/26/2001
"RTN","PXRMCFED",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMCFED",3,0)
 ;
"RTN","PXRMCFED",4,0)
 ;=======================================================================
"RTN","PXRMCFED",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",6,0)
GETNAME ;Get the name of the computed finding to edit.
"RTN","PXRMCFED",7,0)
 ;Make sure the user has programmer access.
"RTN","PXRMCFED",8,0)
 I DUZ(0)'="@" D  Q
"RTN","PXRMCFED",9,0)
 . W !!,"Only those with programmer's access can perform this function."
"RTN","PXRMCFED",10,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMCFED",11,0)
 S DIC="^PXRMD(811.4,"
"RTN","PXRMCFED",12,0)
 S DIC(0)="AEMQL"
"RTN","PXRMCFED",13,0)
 S DIC("A")="Select Reminder Computed Finding: "
"RTN","PXRMCFED",14,0)
 S DIC("S")="I $S(Y'<100000:1,(Y<100000)&($G(PXRMINST)=1)&(DUZ(0)=""@""):1,1:0)"
"RTN","PXRMCFED",15,0)
 S DLAYGO=811.4
"RTN","PXRMCFED",16,0)
 ;Set the starting place for additions.
"RTN","PXRMCFED",17,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMCFED",18,0)
 W !
"RTN","PXRMCFED",19,0)
 D ^DIC
"RTN","PXRMCFED",20,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMCFED",21,0)
 I Y=-1 G END
"RTN","PXRMCFED",22,0)
 S DA=$P(Y,U,1)
"RTN","PXRMCFED",23,0)
 D EDIT(DIC,DA)
"RTN","PXRMCFED",24,0)
 G GETNAME
"RTN","PXRMCFED",25,0)
END ;
"RTN","PXRMCFED",26,0)
 ;Reset starting place.
"RTN","PXRMCFED",27,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMCFED",28,0)
 Q
"RTN","PXRMCFED",29,0)
 ;
"RTN","PXRMCFED",30,0)
 ;=======================================================================
"RTN","PXRMCFED",31,0)
EDIT(ROOT,DA) ;
"RTN","PXRMCFED",32,0)
 N DIE,DR,DIDEL
"RTN","PXRMCFED",33,0)
 S DIE=ROOT,DIDEL=811.4
"RTN","PXRMCFED",34,0)
 S DR="[PXRM EDIT REMINDER CF]"
"RTN","PXRMCFED",35,0)
 D ^DIE
"RTN","PXRMCFED",36,0)
 Q
"RTN","PXRMCFED",37,0)
 ;
"RTN","PXRMDATE")
0^26^B22168619
"RTN","PXRMDATE",1,0)
PXRMDATE ; SLC/PKR - Clinical Reminders date utilities. ;10/10/2000
"RTN","PXRMDATE",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDATE",3,0)
 ;
"RTN","PXRMDATE",4,0)
 ;=======================================================================
"RTN","PXRMDATE",5,0)
DUE(RESDATE,FREQ,DUE,DUEDATE) ;Determine if the reminder is
"RTN","PXRMDATE",6,0)
 ;due now. Compute the due date.  This will be the date of the
"RTN","PXRMDATE",7,0)
 ;resolution finding + the reminder frequency. Subtract the due in
"RTN","PXRMDATE",8,0)
 ;advance time to see if the reminder should be marked as due.
"RTN","PXRMDATE",9,0)
 ;
"RTN","PXRMDATE",10,0)
 N DATE,DIAT,DIATOK,LDATE,TDDUE,TODAY
"RTN","PXRMDATE",11,0)
 I FREQ="" D  Q
"RTN","PXRMDATE",12,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","INCMPLT")="Incomplete reminder definition see the Clinical Reminder coordinator."
"RTN","PXRMDATE",13,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","FREQ")="No reminder frequency - cannot compute due date!"
"RTN","PXRMDATE",14,0)
 ;
"RTN","PXRMDATE",15,0)
 ;If the final frequency is 0Y then the reminder is not due.
"RTN","PXRMDATE",16,0)
 I FREQ="0Y" D  Q
"RTN","PXRMDATE",17,0)
 . S DUE=0
"RTN","PXRMDATE",18,0)
 . S DUEDATE=""
"RTN","PXRMDATE",19,0)
 ;
"RTN","PXRMDATE",20,0)
 I RESDATE["X" S LDATE=0
"RTN","PXRMDATE",21,0)
 E  S LDATE=+RESDATE
"RTN","PXRMDATE",22,0)
 S TODAY=$$NOW
"RTN","PXRMDATE",23,0)
 S DUE=""
"RTN","PXRMDATE",24,0)
 I LDATE=0 D  Q
"RTN","PXRMDATE",25,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",26,0)
 . S DUEDATE="DUE NOW"
"RTN","PXRMDATE",27,0)
 ;
"RTN","PXRMDATE",28,0)
 S DATE=$$FULLDATE(LDATE)
"RTN","PXRMDATE",29,0)
 S DUEDATE=$$NEWDATE(DATE,FREQ)
"RTN","PXRMDATE",30,0)
 ;
"RTN","PXRMDATE",31,0)
 ;If the due date is less than or equal to today's date the reminder
"RTN","PXRMDATE",32,0)
 ;is due.
"RTN","PXRMDATE",33,0)
 I DUEDATE'>TODAY D  Q
"RTN","PXRMDATE",34,0)
 . S DUE="DUE NOW"
"RTN","PXRMDATE",35,0)
 ;
"RTN","PXRMDATE",36,0)
 S DIAT="-"_$P($G(^PXD(811.9,PXRMITEM,0)),U,4)
"RTN","PXRMDATE",37,0)
 I (+DIAT)=0 D
"RTN","PXRMDATE",38,0)
 . S DIATOK=0
"RTN","PXRMDATE",39,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"WARNING","DIAT")="Warning no do in advance time"
"RTN","PXRMDATE",40,0)
 E  S DIATOK=1
"RTN","PXRMDATE",41,0)
 ;
"RTN","PXRMDATE",42,0)
 I DIATOK S TDDUE=$$NEWDATE(DUEDATE,DIAT)
"RTN","PXRMDATE",43,0)
 E  S TDDUE=DUEDATE
"RTN","PXRMDATE",44,0)
 I TDDUE'>TODAY S DUE="DUE SOON"
"RTN","PXRMDATE",45,0)
 E  S DUE="RESOLVED"
"RTN","PXRMDATE",46,0)
 Q
"RTN","PXRMDATE",47,0)
 ;
"RTN","PXRMDATE",48,0)
 ;=======================================================================
"RTN","PXRMDATE",49,0)
EDATE(DATE) ;Check for an historical (event) date, format as appropriate.
"RTN","PXRMDATE",50,0)
 N TEMP
"RTN","PXRMDATE",51,0)
 ;S TEMP=$$FMTE^XLFDT(DATE,"5D")
"RTN","PXRMDATE",52,0)
 S TEMP=$$FMTE^XLFDT(DATE,"5DZ")
"RTN","PXRMDATE",53,0)
 I DATE["E" S TEMP=TEMP_" (E)"
"RTN","PXRMDATE",54,0)
 Q TEMP
"RTN","PXRMDATE",55,0)
 ;
"RTN","PXRMDATE",56,0)
 ;=======================================================================
"RTN","PXRMDATE",57,0)
FMDFINVL(INVDT,DATE) ;Convert an inverse date (LABORATORY format
"RTN","PXRMDATE",58,0)
 ;9999999-date) to Fileman format.
"RTN","PXRMDATE",59,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",60,0)
 N TEMP
"RTN","PXRMDATE",61,0)
 S TEMP=9999999-INVDT
"RTN","PXRMDATE",62,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",63,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",64,0)
 Q TEMP
"RTN","PXRMDATE",65,0)
 ;
"RTN","PXRMDATE",66,0)
 ;=======================================================================
"RTN","PXRMDATE",67,0)
FMDFINVR(INVDT,DATE) ;Convert an inverse date (RADIOLOGY format
"RTN","PXRMDATE",68,0)
 ;9999999.9999-date) to Fileman format.
"RTN","PXRMDATE",69,0)
 I $L(INVDT)=0 Q INVDT
"RTN","PXRMDATE",70,0)
 N TEMP
"RTN","PXRMDATE",71,0)
 S TEMP=9999999.9999-INVDT
"RTN","PXRMDATE",72,0)
 ;If DATE is TRUE return only the date portion.
"RTN","PXRMDATE",73,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",74,0)
 Q TEMP
"RTN","PXRMDATE",75,0)
 ;
"RTN","PXRMDATE",76,0)
 ;=======================================================================
"RTN","PXRMDATE",77,0)
FULLDATE(DATE) ;See if DATE is a full date, i.e., it has a month and
"RTN","PXRMDATE",78,0)
 ;a day. If the month is missing assume Jan. If the day is missing
"RTN","PXRMDATE",79,0)
 ;assume the first. Issue a warning so the user knows what happened.  
"RTN","PXRMDATE",80,0)
 ;We assume the date is in Fileman format.
"RTN","PXRMDATE",81,0)
 N DAY,MISSING,MONTH,TDATE,YEAR
"RTN","PXRMDATE",82,0)
 S TDATE=DATE
"RTN","PXRMDATE",83,0)
 S MISSING=0
"RTN","PXRMDATE",84,0)
 S DAY=$E(DATE,6,7)
"RTN","PXRMDATE",85,0)
 S MONTH=$E(DATE,4,5)
"RTN","PXRMDATE",86,0)
 S YEAR=$E(DATE,1,3)
"RTN","PXRMDATE",87,0)
 I +DAY=0 D
"RTN","PXRMDATE",88,0)
 . S DAY=1
"RTN","PXRMDATE",89,0)
 . S MISSING=1
"RTN","PXRMDATE",90,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO DAY")="Encounter date missing day, using the first for the date due calculation."
"RTN","PXRMDATE",91,0)
 I +MONTH=0 D
"RTN","PXRMDATE",92,0)
 . S MONTH=1
"RTN","PXRMDATE",93,0)
 . S MISSING=1
"RTN","PXRMDATE",94,0)
 . S ^TMP("PXRM",$J,"WA","INFO",PXRMITEM,"NO MONTH")="Encounter date missing month, using January for the date due calculation."
"RTN","PXRMDATE",95,0)
 I MISSING D
"RTN","PXRMDATE",96,0)
 . S TDATE=(YEAR*1E4)+(MONTH*1E2)+DAY
"RTN","PXRMDATE",97,0)
 . I DATE["E" S TDATE=TDATE_"E"
"RTN","PXRMDATE",98,0)
 Q TDATE
"RTN","PXRMDATE",99,0)
 ;
"RTN","PXRMDATE",100,0)
 ;=======================================================================
"RTN","PXRMDATE",101,0)
INVFFMDL(DT,DATE) ;Convert a Fileman date to its inverse (LABORATORY
"RTN","PXRMDATE",102,0)
 ;format 9999999-date) to Fileman format.
"RTN","PXRMDATE",103,0)
 I $L(DT)=0 Q DT
"RTN","PXRMDATE",104,0)
 N TEMP
"RTN","PXRMDATE",105,0)
 S TEMP=9999999-DT
"RTN","PXRMDATE",106,0)
 ;If DATE is true the return only the date portion.
"RTN","PXRMDATE",107,0)
 I DATE S TEMP=$P(TEMP,".",1)
"RTN","PXRMDATE",108,0)
 Q TEMP
"RTN","PXRMDATE",109,0)
 ;
"RTN","PXRMDATE",110,0)
 ;=======================================================================
"RTN","PXRMDATE",111,0)
FRQINDAY(FREQ) ;Given a frequency in the form ND, NM, or NY where N is a
"RTN","PXRMDATE",112,0)
 ;number and D stands for days, M for months, and Y for years return
"RTN","PXRMDATE",113,0)
 ;the value in days.
"RTN","PXRMDATE",114,0)
 N CODE,LEN,MULT,NUM
"RTN","PXRMDATE",115,0)
 S LEN=$L(FREQ)
"RTN","PXRMDATE",116,0)
 S NUM=$E(FREQ,1,LEN-1)
"RTN","PXRMDATE",117,0)
 S CODE=$E(FREQ,LEN,LEN)
"RTN","PXRMDATE",118,0)
 S MULT=1.0
"RTN","PXRMDATE",119,0)
 I CODE="M" S MULT=30.42
"RTN","PXRMDATE",120,0)
 I CODE="Y" S MULT=365.25
"RTN","PXRMDATE",121,0)
 Q +(MULT*NUM)
"RTN","PXRMDATE",122,0)
 ;
"RTN","PXRMDATE",123,0)
 ;=======================================================================
"RTN","PXRMDATE",124,0)
NDAYS(INT) ;Given an interval in the form ND, NM, or NY where D stands
"RTN","PXRMDATE",125,0)
 ;for days, M for months, and Y for years convert to days and return
"RTN","PXRMDATE",126,0)
 ;that value. 
"RTN","PXRMDATE",127,0)
 N LEN,NUM,UNIT
"RTN","PXRMDATE",128,0)
 S LEN=$L(INT)
"RTN","PXRMDATE",129,0)
 I LEN=0 Q 0
"RTN","PXRMDATE",130,0)
 S NUM=$E(INT,1,LEN-1)
"RTN","PXRMDATE",131,0)
 S UNIT=$E(INT,LEN)
"RTN","PXRMDATE",132,0)
 I UNIT="D" Q NUM
"RTN","PXRMDATE",133,0)
 I UNIT="M" Q 30.42*NUM
"RTN","PXRMDATE",134,0)
 I UNIT="Y" Q 365.25*NUM
"RTN","PXRMDATE",135,0)
 Q INT
"RTN","PXRMDATE",136,0)
 ;
"RTN","PXRMDATE",137,0)
 ;=======================================================================
"RTN","PXRMDATE",138,0)
NEWDATE(VADATE,OFFSET) ;Given a date in VA Fileman format (VADATE) and an
"RTN","PXRMDATE",139,0)
 ;offset of the form NY, NM, ND where N is a number and Y stands for
"RTN","PXRMDATE",140,0)
 ;years, M for months, and D for days return the new date in VA Fileman
"RTN","PXRMDATE",141,0)
 ;format. 
"RTN","PXRMDATE",142,0)
 N LEN,NEWDATE,NUM,UNIT
"RTN","PXRMDATE",143,0)
 S LEN=$L(OFFSET)
"RTN","PXRMDATE",144,0)
 S NUM=+$E(OFFSET,1,LEN-1)
"RTN","PXRMDATE",145,0)
 S UNIT=$E(OFFSET,LEN)
"RTN","PXRMDATE",146,0)
 I UNIT="D" G DAY
"RTN","PXRMDATE",147,0)
 I UNIT="M" G MONTH
"RTN","PXRMDATE",148,0)
 I UNIT="Y" G YEAR
"RTN","PXRMDATE",149,0)
 ;Unknown unit just return the original date
"RTN","PXRMDATE",150,0)
 Q VADATE
"RTN","PXRMDATE",151,0)
DAY ;
"RTN","PXRMDATE",152,0)
 S NEWDATE=+$$FMADD^XLFDT(VADATE,NUM)
"RTN","PXRMDATE",153,0)
 Q NEWDATE
"RTN","PXRMDATE",154,0)
MONTH ;
"RTN","PXRMDATE",155,0)
 ;Convert the months to days and then add the days using the DAY code.
"RTN","PXRMDATE",156,0)
 ;Multiply the number of months by the average number of days in a month.
"RTN","PXRMDATE",157,0)
 S NUM=30.42*NUM
"RTN","PXRMDATE",158,0)
 G DAY
"RTN","PXRMDATE",159,0)
 Q
"RTN","PXRMDATE",160,0)
YEAR ;
"RTN","PXRMDATE",161,0)
 Q VADATE+(10000*NUM)
"RTN","PXRMDATE",162,0)
 ;
"RTN","PXRMDATE",163,0)
 ;=======================================================================
"RTN","PXRMDATE",164,0)
NOW() ;If PXRMDATE has a date return it, otherwise return the current date.
"RTN","PXRMDATE",165,0)
 N NOW
"RTN","PXRMDATE",166,0)
 I +$G(PXRMDATE)>0 S NOW=PXRMDATE
"RTN","PXRMDATE",167,0)
 E  S NOW=$$NOW^XLFDT
"RTN","PXRMDATE",168,0)
 Q NOW
"RTN","PXRMDATE",169,0)
 ;
"RTN","PXRMDATE",170,0)
 ;=======================================================================
"RTN","PXRMDATE",171,0)
VALID(FIND0,TFINDO,DATE) ;Given the date determine if the finding is
"RTN","PXRMDATE",172,0)
 ;valid. FIND0 is the 0 node of the finding multiple, TFIND0 is the
"RTN","PXRMDATE",173,0)
 ;0 node of the term finding.
"RTN","PXRMDATE",174,0)
 N EFP,EFD,EXPDATE,VALID
"RTN","PXRMDATE",175,0)
 ;First check the EFFECTIVE PERIOD.
"RTN","PXRMDATE",176,0)
 S EFP=$P(TFIND0,U,8)
"RTN","PXRMDATE",177,0)
 I EFP="" S EFP=$P(FIND0,U,8)
"RTN","PXRMDATE",178,0)
 S VALID=1
"RTN","PXRMDATE",179,0)
 I EFP'="" D
"RTN","PXRMDATE",180,0)
 . S EXPDATE=$$NEWDATE(DATE,EFP)
"RTN","PXRMDATE",181,0)
 . I $$NOW>EXPDATE S VALID=0
"RTN","PXRMDATE",182,0)
 I 'VALID Q VALID
"RTN","PXRMDATE",183,0)
 ;If the finding is still valid check the EFFECTIVE DATE.
"RTN","PXRMDATE",184,0)
 S EFD=$P(TFIND0,U,11)
"RTN","PXRMDATE",185,0)
 I EFD="" S EFD=$P(FIND0,U,11)
"RTN","PXRMDATE",186,0)
 I EFD'="" D
"RTN","PXRMDATE",187,0)
 . I DATE<EFD S VALID=0
"RTN","PXRMDATE",188,0)
 Q VALID
"RTN","PXRMDATE",189,0)
 ;
"RTN","PXRMDATE",190,0)
 ;=======================================================================
"RTN","PXRMDATE",191,0)
VDATE(VIEN) ;Given a visit ien return the visit date.
"RTN","PXRMDATE",192,0)
 N DATE
"RTN","PXRMDATE",193,0)
 I +VIEN>0 S DATE=$P($G(^AUPNVSIT(VIEN,0)),U,1)
"RTN","PXRMDATE",194,0)
 E  S DATE=0
"RTN","PXRMDATE",195,0)
 I $L(DATE)=0 S DATE=0
"RTN","PXRMDATE",196,0)
 ;Check for historical encounter.
"RTN","PXRMDATE",197,0)
 I $$ISHIST^PXRMVSIT(VIEN) D
"RTN","PXRMDATE",198,0)
 . S DATE=DATE_"E"
"RTN","PXRMDATE",199,0)
 Q DATE
"RTN","PXRMDATE",200,0)
 ;
"RTN","PXRMDCPY")
0^67^B37469673
"RTN","PXRMDCPY",1,0)
PXRMDCPY ; SLC/PJH - Copy dialog files. ;12/18/2000
"RTN","PXRMDCPY",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDCPY",3,0)
 ;
"RTN","PXRMDCPY",4,0)
 ;Called by label from PXRMDEDT
"RTN","PXRMDCPY",5,0)
 ;
"RTN","PXRMDCPY",6,0)
 ;Yes/No prompts
"RTN","PXRMDCPY",7,0)
 ;--------------
"RTN","PXRMDCPY",8,0)
ASK(YESNO,TEXT,HLP) ;
"RTN","PXRMDCPY",9,0)
 N X,Y,DIR
"RTN","PXRMDCPY",10,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDCPY",11,0)
 S DIR(0)="YA0"
"RTN","PXRMDCPY",12,0)
 S DIR("A")=TEXT
"RTN","PXRMDCPY",13,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",14,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDCPY",15,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(HLP)"
"RTN","PXRMDCPY",16,0)
 D ^DIR K DIR
"RTN","PXRMDCPY",17,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDCPY",18,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDCPY",19,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDCPY",20,0)
 Q
"RTN","PXRMDCPY",21,0)
 ;
"RTN","PXRMDCPY",22,0)
 ;Copy any dialog
"RTN","PXRMDCPY",23,0)
 ;---------------
"RTN","PXRMDCPY",24,0)
ANY W IORESET
"RTN","PXRMDCPY",25,0)
 N DIC,DUOUT,DTOUT,DIROUT,DIRUT,SIEN,IENN,IENO,X,Y
"RTN","PXRMDCPY",26,0)
 N PROMPT,PXRMSNUM,ROOT,WHAT
"RTN","PXRMDCPY",27,0)
 S PXRMSNUM=$$SNUM Q:'PXRMSNUM
"RTN","PXRMDCPY",28,0)
 S WHAT="dialog",ROOT="^PXRMD(801.41,",PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",29,0)
 ;
"RTN","PXRMDCPY",30,0)
 S DIC=ROOT,DIC(0)="AEQ",DIC("A")=PROMPT
"RTN","PXRMDCPY",31,0)
 S DIC("S")="I $P(^(0),U,4)=PXRMDTYP"
"RTN","PXRMDCPY",32,0)
 W !
"RTN","PXRMDCPY",33,0)
 D ^DIC
"RTN","PXRMDCPY",34,0)
 I $D(DUOUT)!$D(DTOUT) S DIROUT="" Q
"RTN","PXRMDCPY",35,0)
 S IENO=$P(Y,U,1) I IENO=-1 S DIROUT="" Q
"RTN","PXRMDCPY",36,0)
 ;
"RTN","PXRMDCPY",37,0)
 ;Copy the dialog
"RTN","PXRMDCPY",38,0)
 D COPY(IENO,.IENN,0) Q:$D(DUOUT)
"RTN","PXRMDCPY",39,0)
 ;
"RTN","PXRMDCPY",40,0)
 ;update process id index in #801.42
"RTN","PXRMDCPY",41,0)
 I "PF"[$P(@(ROOT_IENN_",0)"),U,4) D
"RTN","PXRMDCPY",42,0)
 .N SUB S SUB=$O(^PXRMD(801.42,"AB",IENO,"")) Q:'SUB
"RTN","PXRMDCPY",43,0)
 .N FDA,FDAIEN,MSG
"RTN","PXRMDCPY",44,0)
 .S FDA(801.42,"?1,",.01)=$P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDCPY",45,0)
 .S FDA(801.422,"?+2,?1,",.01)=IENN
"RTN","PXRMDCPY",46,0)
 .S FDAIEN(1)=SUB
"RTN","PXRMDCPY",47,0)
 .D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMDCPY",48,0)
 .I $D(MSG) D ERR($P($G(^PXRMD(801.42,SUB,0)),U))
"RTN","PXRMDCPY",49,0)
 .;check if a prompt
"RTN","PXRMDCPY",50,0)
 .I $P(@(ROOT_IENN_",0)"),U,4)="P" D
"RTN","PXRMDCPY",51,0)
 ..;Allow PXRM prompts to be changed into forced values
"RTN","PXRMDCPY",52,0)
 ..N ANS,TEXT
"RTN","PXRMDCPY",53,0)
 ..S TEXT="Change the new prompt into a forced value :"
"RTN","PXRMDCPY",54,0)
 ..D ASK(.ANS,TEXT,4) Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",55,0)
 ..;Store the dialog type
"RTN","PXRMDCPY",56,0)
 ..S DR="4///F",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",57,0)
 ..D ^DIE
"RTN","PXRMDCPY",58,0)
 .Q
"RTN","PXRMDCPY",59,0)
 ;
"RTN","PXRMDCPY",60,0)
 Q
"RTN","PXRMDCPY",61,0)
 ;
"RTN","PXRMDCPY",62,0)
 ;Copy original dialog
"RTN","PXRMDCPY",63,0)
 ;--------------------
"RTN","PXRMDCPY",64,0)
COPY(IENO,IENN,RDIEN) ;
"RTN","PXRMDCPY",65,0)
 D SETSTART^PXRMDCPY(ROOT,1)
"RTN","PXRMDCPY",66,0)
 S IENN=PXRMSNUM_"000001"
"RTN","PXRMDCPY",67,0)
 S IENN=$$GETFOIEN(ROOT,IENN)
"RTN","PXRMDCPY",68,0)
 D MERGE(IENN,IENO,ROOT) Q:$D(DUOUT)
"RTN","PXRMDCPY",69,0)
 ;
"RTN","PXRMDCPY",70,0)
 N DA,DIE,DIK,DIR,DR,NAME,ORGNAME,X
"RTN","PXRMDCPY",71,0)
 S ORGNAME=$P(@(ROOT_IENO_",0)"),U,1),NAME=""
"RTN","PXRMDCPY",72,0)
 ;Get the new name.
"RTN","PXRMDCPY",73,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)  Q:NAME]""
"RTN","PXRMDCPY",74,0)
 .S DIR(0)="F"_U_"3:63"_U_"K:(X?.N)!'(X'?1P.E) X"
"RTN","PXRMDCPY",75,0)
 .S DIR("A")="ENTER A UNIQUE NAME"
"RTN","PXRMDCPY",76,0)
 .;If  give a default name
"RTN","PXRMDCPY",77,0)
 .S:RDIEN DIR("B")=$$NAME(IENO,ORGNAME)
"RTN","PXRMDCPY",78,0)
 .D ^DIR Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",79,0)
 .I Y["""" D EN^DDIOL(" name cannot contain quotes!") Q
"RTN","PXRMDCPY",80,0)
 .I $E(Y,1,4)="PXRM" D EN^DDIOL(" name cannot begin with PXRM!") Q
"RTN","PXRMDCPY",81,0)
 .I $$UNIQNAME(Y,ROOT) S NAME=Y Q
"RTN","PXRMDCPY",82,0)
 .D EN^DDIOL(" is not a unique name!")
"RTN","PXRMDCPY",83,0)
 ;
"RTN","PXRMDCPY",84,0)
 Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDCPY",85,0)
 ;
"RTN","PXRMDCPY",86,0)
 ;Store the unique name
"RTN","PXRMDCPY",87,0)
 S DR=".01///^S X=NAME",DIE=ROOT,DA=IENN
"RTN","PXRMDCPY",88,0)
 D ^DIE
"RTN","PXRMDCPY",89,0)
 ;
"RTN","PXRMDCPY",90,0)
 ;Reindex the cross-references.
"RTN","PXRMDCPY",91,0)
 S DIK=ROOT,DA=IENN
"RTN","PXRMDCPY",92,0)
 D IX^DIK
"RTN","PXRMDCPY",93,0)
 ;
"RTN","PXRMDCPY",94,0)
 W !!,"Completed copy of '"_ORGNAME_"'"
"RTN","PXRMDCPY",95,0)
 W !,"into '"_NAME_"'",! H 2
"RTN","PXRMDCPY",96,0)
 ;
"RTN","PXRMDCPY",97,0)
 Q
"RTN","PXRMDCPY",98,0)
 ;
"RTN","PXRMDCPY",99,0)
 ;Delete the entry just added
"RTN","PXRMDCPY",100,0)
 ;--------------------------- 
"RTN","PXRMDCPY",101,0)
DELETE S DIK=ROOT,DA=IENN D ^DIK
"RTN","PXRMDCPY",102,0)
 W !!,"New entry not created due to invalid name!",!
"RTN","PXRMDCPY",103,0)
 Q
"RTN","PXRMDCPY",104,0)
 ;
"RTN","PXRMDCPY",105,0)
 ;Error Handler
"RTN","PXRMDCPY",106,0)
 ;-------------
"RTN","PXRMDCPY",107,0)
ERR(DESC) ;
"RTN","PXRMDCPY",108,0)
 N ERROR,IC,REF
"RTN","PXRMDCPY",109,0)
 S ERROR(1)="Unable to update GUI PROCESS file : "_DESC
"RTN","PXRMDCPY",110,0)
 S ERROR(2)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMDCPY",111,0)
 ;Move MSG into ERROR
"RTN","PXRMDCPY",112,0)
 S REF="MSG"
"RTN","PXRMDCPY",113,0)
 F IC=3:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMDCPY",114,0)
 ;Screen message
"RTN","PXRMDCPY",115,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMDCPY",116,0)
 Q
"RTN","PXRMDCPY",117,0)
 ;
"RTN","PXRMDCPY",118,0)
 ;Given ROOT and a starting IEN (SIEN) return the first
"RTN","PXRMDCPY",119,0)
 ;-----------------------------------------------------
"RTN","PXRMDCPY",120,0)
GETFOIEN(ROOT,SIEN) ;
"RTN","PXRMDCPY",121,0)
 ;open IEN in ROOT
"RTN","PXRMDCPY",122,0)
 N ENTRY,NIEN,OIEN
"RTN","PXRMDCPY",123,0)
 S OIEN=SIEN-1
"RTN","PXRMDCPY",124,0)
 S ENTRY=ROOT_OIEN_")"
"RTN","PXRMDCPY",125,0)
 F  S NIEN=$O(@ENTRY) Q:+(NIEN-OIEN)>1  Q:+NIEN'>0  S OIEN=NIEN,ENTRY=ROOT_NIEN_")"
"RTN","PXRMDCPY",126,0)
 Q OIEN+1
"RTN","PXRMDCPY",127,0)
 ;
"RTN","PXRMDCPY",128,0)
 ;Use MERGE to copy ROOT(IENO into ROOT(IENN
"RTN","PXRMDCPY",129,0)
 ;------------------------------------------
"RTN","PXRMDCPY",130,0)
MERGE(IENN,IENO,ROOT) ;
"RTN","PXRMDCPY",131,0)
 N DEST,SOURCE
"RTN","PXRMDCPY",132,0)
 ;
"RTN","PXRMDCPY",133,0)
 S DEST=ROOT_IENN_")"
"RTN","PXRMDCPY",134,0)
 ;Lock the file before merging.
"RTN","PXRMDCPY",135,0)
 L +@DEST:10
"RTN","PXRMDCPY",136,0)
 E  W !,"Another user is editing this file, try later" H 2 S DUOUT=1 Q
"RTN","PXRMDCPY",137,0)
 S SOURCE=ROOT_IENO_")"
"RTN","PXRMDCPY",138,0)
 M @DEST=@SOURCE
"RTN","PXRMDCPY",139,0)
 ;Unlock the file
"RTN","PXRMDCPY",140,0)
 L -@DEST
"RTN","PXRMDCPY",141,0)
 Q
"RTN","PXRMDCPY",142,0)
 ;
"RTN","PXRMDCPY",143,0)
 ;Get default name
"RTN","PXRMDCPY",144,0)
 ;----------------
"RTN","PXRMDCPY",145,0)
NAME(IEN,ORG) ;
"RTN","PXRMDCPY",146,0)
 N CNT,NAME,PREV
"RTN","PXRMDCPY",147,0)
 ;
"RTN","PXRMDCPY",148,0)
 S PREV=0
"RTN","PXRMDCPY",149,0)
 I $E(ORG,$L(ORG))=")",ORG[" (" D
"RTN","PXRMDCPY",150,0)
 .S PREV=+$P(ORG," (",2) S:PREV>0 ORG=$P(ORG," (",1)
"RTN","PXRMDCPY",151,0)
 F CNT=PREV+1:1 S NAME=ORG_" ("_CNT_")" Q:'$D(^PXRMD(801.41,"B",NAME))
"RTN","PXRMDCPY",152,0)
 Q NAME
"RTN","PXRMDCPY",153,0)
 ;
"RTN","PXRMDCPY",154,0)
 ;Copy selected dialog element OR reminder dialog
"RTN","PXRMDCPY",155,0)
 ;-----------------------------------------------
"RTN","PXRMDCPY",156,0)
SEL(IENO,RDIEN) ;
"RTN","PXRMDCPY",157,0)
 W IORESET S VALMBCK="R"
"RTN","PXRMDCPY",158,0)
 N ANS,IENN,PROMPT,PXRMSNUM,ROOT,TEXT,WHAT
"RTN","PXRMDCPY",159,0)
 S PXRMSNUM=$$SNUM Q:'PXRMSNUM
"RTN","PXRMDCPY",160,0)
 S WHAT="dialog element"
"RTN","PXRMDCPY",161,0)
 S ROOT="^PXRMD(801.41,"
"RTN","PXRMDCPY",162,0)
 S PROMPT="Select the dialog to copy: "
"RTN","PXRMDCPY",163,0)
 S TEXT=$P($G(^PXRMD(801.41,IENO,0)),U)
"RTN","PXRMDCPY",164,0)
 ;
"RTN","PXRMDCPY",165,0)
 I RDIEN S TEXT="COPY AND REPLACE '"_TEXT_"'  "
"RTN","PXRMDCPY",166,0)
 I 'RDIEN S TEXT="COPY REMINDER DIALOG '"_TEXT_"'  "
"RTN","PXRMDCPY",167,0)
 D ASK(.ANS,TEXT,2) Q:$D(DUOUT)!$D(DTOUT)  Q:ANS'="Y"
"RTN","PXRMDCPY",168,0)
 ;Copy
"RTN","PXRMDCPY",169,0)
 D COPY(IENO,.IENN,RDIEN) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMDCPY",170,0)
 ;Replace dialog element in reminder dialog
"RTN","PXRMDCPY",171,0)
 I RDIEN D
"RTN","PXRMDCPY",172,0)
 .N DR,DA,DIE
"RTN","PXRMDCPY",173,0)
 .S DA=$O(^PXRMD(801.41,RDIEN,10,"D",IENO,"")) Q:'DA
"RTN","PXRMDCPY",174,0)
 .S DA(1)=RDIEN
"RTN","PXRMDCPY",175,0)
 .S DR="2///"_IENN
"RTN","PXRMDCPY",176,0)
 .S DIE=ROOT_RDIEN_",10,"
"RTN","PXRMDCPY",177,0)
 .D ^DIE
"RTN","PXRMDCPY",178,0)
 .W !,"Replaced element'"_$P(@(ROOT_IENO_",0)"),U)_"'"
"RTN","PXRMDCPY",179,0)
 .W !,"with '"_$P(@(ROOT_IENN_",0)"),U)_"'"
"RTN","PXRMDCPY",180,0)
 .W !,"on this dialog.",!
"RTN","PXRMDCPY",181,0)
 ;
"RTN","PXRMDCPY",182,0)
 N DIR
"RTN","PXRMDCPY",183,0)
 S DIR(0)="YAO"
"RTN","PXRMDCPY",184,0)
 S DIR("A")="Do you want to edit now  "
"RTN","PXRMDCPY",185,0)
 S DIR("B")="Y"
"RTN","PXRMDCPY",186,0)
 D ^DIR
"RTN","PXRMDCPY",187,0)
 I $D(DIRUT) S DUOUT=1 Q
"RTN","PXRMDCPY",188,0)
 I $E(Y(0))'="Y" S DUOUT=1 Q
"RTN","PXRMDCPY",189,0)
 W !
"RTN","PXRMDCPY",190,0)
 ;Quit screen for edit = yes
"RTN","PXRMDCPY",191,0)
 S:'RDIEN VALMBCK="Q"
"RTN","PXRMDCPY",192,0)
 ;Reset dialog element ien
"RTN","PXRMDCPY",193,0)
 S:RDIEN IENO=IENN
"RTN","PXRMDCPY",194,0)
 Q
"RTN","PXRMDCPY",195,0)
 ;
"RTN","PXRMDCPY",196,0)
 ;Set dialog numberspace
"RTN","PXRMDCPY",197,0)
 ;----------------------
"RTN","PXRMDCPY",198,0)
SETSTART(ROOT,NAT) ;Set the starting value to add new entries. The
"RTN","PXRMDCPY",199,0)
 ;national number space is 1 to 99999. Site number spaces are XXX000001
"RTN","PXRMDCPY",200,0)
 ;to XXX999999 where XXX is the site number.
"RTN","PXRMDCPY",201,0)
 N CUR,ENTRY
"RTN","PXRMDCPY",202,0)
 S ENTRY=ROOT_"0)"
"RTN","PXRMDCPY",203,0)
 I NAT,$G(PXRMINST)=1,DUZ(0)="@" D
"RTN","PXRMDCPY",204,0)
 . S $P(@ENTRY,U,3)=1
"RTN","PXRMDCPY",205,0)
 E  D
"RTN","PXRMDCPY",206,0)
 . S CUR=$P(@ENTRY,U,3)
"RTN","PXRMDCPY",207,0)
 . I CUR<100000000 S $P(@ENTRY,U,3)=+($P($$SITE^VASITE,U,3)_"000001")
"RTN","PXRMDCPY",208,0)
 Q
"RTN","PXRMDCPY",209,0)
 ;
"RTN","PXRMDCPY",210,0)
 ;Get ien for inserts
"RTN","PXRMDCPY",211,0)
 ;-------------------
"RTN","PXRMDCPY",212,0)
SNUM() S PXRMSNUM=+$P($$SITE^VASITE,U,3)
"RTN","PXRMDCPY",213,0)
 I $L(PXRMSNUM)'=3 D
"RTN","PXRMDCPY",214,0)
 .W !,"You must have a 3-digit primary station number in order to use this option, See IRM!"
"RTN","PXRMDCPY",215,0)
 .S PXRMSNUM=""
"RTN","PXRMDCPY",216,0)
 Q PXRMSNUM
"RTN","PXRMDCPY",217,0)
 ;
"RTN","PXRMDCPY",218,0)
 ;Return TRUE (1) if NAME is unique 
"RTN","PXRMDCPY",219,0)
 ;---------------------------------
"RTN","PXRMDCPY",220,0)
UNIQNAME(NAME,ROOT) ;
"RTN","PXRMDCPY",221,0)
 N RETVAL,REF
"RTN","PXRMDCPY",222,0)
 S RETVAL=1,REF=ROOT_"""B"""_","_""""_NAME_""""_")"
"RTN","PXRMDCPY",223,0)
 I $D(@REF) S RETVAL=0
"RTN","PXRMDCPY",224,0)
 Q RETVAL
"RTN","PXRMDD41")
0^39^B2389561
"RTN","PXRMDD41",1,0)
PXRMDD41 ; SLC/PJH Reminder Dialog file calls ;11/22/2000
"RTN","PXRMDD41",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDD41",3,0)
 ;
"RTN","PXRMDD41",4,0)
 ;copied from ORDD41 for dialog reminders
"RTN","PXRMDD41",5,0)
 ;
"RTN","PXRMDD41",6,0)
 ;
"RTN","PXRMDD41",7,0)
KILL(DLG) ;
"RTN","PXRMDD41",8,0)
 Q
"RTN","PXRMDD41",9,0)
 ;
"RTN","PXRMDD41",10,0)
 ; Update audit trail when ITEMS changed
"RTN","PXRMDD41",11,0)
REDOX I $D(^PXRMD(801.41,+$G(DA(1)),0)) S $P(^(99),U)=$$NOW^XLFDT
"RTN","PXRMDD41",12,0)
 Q
"RTN","PXRMDD41",13,0)
 ;
"RTN","PXRMDD41",14,0)
SCREEN ;validate dialog type
"RTN","PXRMDD41",15,0)
 Q:'$G(DA(1))
"RTN","PXRMDD41",16,0)
 N PXRMMTYP
"RTN","PXRMDD41",17,0)
 S PXRMMTYP=$P($G(^PXRMD(801.41,DA(1),0)),U,4)
"RTN","PXRMDD41",18,0)
 ;MH results and Reminder dialogs dissallowed
"RTN","PXRMDD41",19,0)
 S DIC("S")="I ""RST""'[$P(^(0),U,4)"
"RTN","PXRMDD41",20,0)
 ;Dialog elements can only contain prompts/forced values
"RTN","PXRMDD41",21,0)
 I PXRMMTYP="E" S DIC("S")="I ""FP""[$P(^(0),U,4)"
"RTN","PXRMDD41",22,0)
 ;Reminder dialogs can contain only Elements and Groups
"RTN","PXRMDD41",23,0)
 I PXRMMTYP="R" S DIC("S")="I ""EG""[$P(^(0),U,4)"
"RTN","PXRMDD41",24,0)
 ;MH Result Groups can only contain MH Result Elementss
"RTN","PXRMDD41",25,0)
 I PXRMMTYP="S" S DIC("S")="I ""T""=$P(^(0),U,4)"
"RTN","PXRMDD41",26,0)
 ;Dialog groups cannot point to themselves
"RTN","PXRMDD41",27,0)
 I PXRMMTYP="G" D
"RTN","PXRMDD41",28,0)
 .S DIC("S")=DIC("S")_"&($G(Y)'=DA(1))"
"RTN","PXRMDD41",29,0)
 Q
"RTN","PXRMDD41",30,0)
 ;
"RTN","PXRMDD41",31,0)
 ; UPDATE last amend date
"RTN","PXRMDD41",32,0)
SET(DLG) ;
"RTN","PXRMDD41",33,0)
 S $P(^PXRMD(801.41,DLG,99),U)=$$NOW^XLFDT
"RTN","PXRMDD41",34,0)
 Q
"RTN","PXRMDD41",35,0)
 ;
"RTN","PXRMDD41",36,0)
 ; -- Ck menu tree to ensure new item is not an ancestor
"RTN","PXRMDD41",37,0)
 ;    Input Xform for Item field #2 of Items subfile #801.412
"RTN","PXRMDD41",38,0)
 ;      expecting DA, DA(1), X from FileMan
"RTN","PXRMDD41",39,0)
TREE ;
"RTN","PXRMDD41",40,0)
 D SCREEN
"RTN","PXRMDD41",41,0)
 N PXRMDDA,PXRMDD S PXRMDDA=DA(1)
"RTN","PXRMDD41",42,0)
 K:X=PXRMDDA X D TREE1
"RTN","PXRMDD41",43,0)
 Q
"RTN","PXRMDD41",44,0)
 ; -- Look for X in ancestors
"RTN","PXRMDD41",45,0)
TREE1 F PXRMDD=0:0 Q:'$D(X)  S PXRMDD=$O(^PXRMD(801.41,"AD",PXRMDDA,PXRMDD)) Q:PXRMDD'>0  K:X=PXRMDD X Q:'$D(X)  D TREE2
"RTN","PXRMDD41",46,0)
 Q
"RTN","PXRMDD41",47,0)
 ; Back up another level
"RTN","PXRMDD41",48,0)
TREE2 N PXRMDDA S PXRMDDA=PXRMDD N PXRMDD D TREE1
"RTN","PXRMDD41",49,0)
 Q
"RTN","PXRMDEDT")
0^61^B72072397
"RTN","PXRMDEDT",1,0)
PXRMDEDT ; SLC/PJH - Edit PXRM reminder dialog. ;01/12/2001
"RTN","PXRMDEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDEDT",3,0)
 ;
"RTN","PXRMDEDT",4,0)
 ;Used by protocol PXRM SELECTION ADD/PXRM GENERAL ADD
"RTN","PXRMDEDT",5,0)
 ;
"RTN","PXRMDEDT",6,0)
 ;Add Dialog
"RTN","PXRMDEDT",7,0)
 ;----------
"RTN","PXRMDEDT",8,0)
ADD N DA,DIC,Y,DTOUT,DUOUT,DTYP,DLAYGO,HED
"RTN","PXRMDEDT",9,0)
 S HED="ADD DIALOG"
"RTN","PXRMDEDT",10,0)
 W IORESET
"RTN","PXRMDEDT",11,0)
 F  D  Q:$D(DTOUT)
"RTN","PXRMDEDT",12,0)
 .S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",13,0)
 .;Set the starting place for additions.
"RTN","PXRMDEDT",14,0)
 .D SETSTART^PXRMDCPY(DIC,0)
"RTN","PXRMDEDT",15,0)
 .S DIC(0)="AELMQ",DLAYGO=801.41
"RTN","PXRMDEDT",16,0)
 .S DIC("A")="Select DIALOG to add: "
"RTN","PXRMDEDT",17,0)
 .S DIC("DR")="4///"_$G(PXRMDTYP)
"RTN","PXRMDEDT",18,0)
 .D ^DIC
"RTN","PXRMDEDT",19,0)
 .I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",20,0)
 .I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",21,0)
 .I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",22,0)
 .I $P(Y,U,3)'=1 W !,"This dialog name already exists" Q
"RTN","PXRMDEDT",23,0)
 .S DA=$P(Y,U,1)
"RTN","PXRMDEDT",24,0)
 .;Determine dialog type
"RTN","PXRMDEDT",25,0)
 .S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",26,0)
 .;Enter dialog type if a new entry
"RTN","PXRMDEDT",27,0)
 .I DTYP="" D  Q:$D(Y)
"RTN","PXRMDEDT",28,0)
 ..N DIE,DR
"RTN","PXRMDEDT",29,0)
 ..S DIE=801.41,DR=4
"RTN","PXRMDEDT",30,0)
 ..D ^DIE
"RTN","PXRMDEDT",31,0)
 .;
"RTN","PXRMDEDT",32,0)
 .;Edit Dialog
"RTN","PXRMDEDT",33,0)
 .D EDIT(DTYP,DA)
"RTN","PXRMDEDT",34,0)
 Q
"RTN","PXRMDEDT",35,0)
 ;
"RTN","PXRMDEDT",36,0)
 ;Delete a line from the reminder dialog
"RTN","PXRMDEDT",37,0)
 ;--------------------------------------
"RTN","PXRMDEDT",38,0)
DEL(DIEN,PXRMDIEN) ;
"RTN","PXRMDEDT",39,0)
 N DA,DIK
"RTN","PXRMDEDT",40,0)
 S DA(1)=PXRMDIEN,DA=$O(^PXRMD(801.41,PXRMDIEN,10,"D",DIEN,"")) Q:'DA
"RTN","PXRMDEDT",41,0)
 S DIK="^PXRMD(801.41,"_DA(1)_",10,"
"RTN","PXRMDEDT",42,0)
 D ^DIK
"RTN","PXRMDEDT",43,0)
 Q
"RTN","PXRMDEDT",44,0)
 ;
"RTN","PXRMDEDT",45,0)
 ;called by protocol PXRM DIALOG EDIT
"RTN","PXRMDEDT",46,0)
 ;-----------------------------------
"RTN","PXRMDEDT",47,0)
EDIT(TYP,DA) ;
"RTN","PXRMDEDT",48,0)
 Q:'$$LOCK(DA)
"RTN","PXRMDEDT",49,0)
 W IORESET
"RTN","PXRMDEDT",50,0)
 N DIC,DIDEL,DIE,DR,DTOUT,DUOUT,DINUSE,TYP,ODA,Y
"RTN","PXRMDEDT",51,0)
 ;Check dialog type
"RTN","PXRMDEDT",52,0)
 S TYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",53,0)
 S DIE="^PXRMD(801.41,",DIDEL=801.41,DINUSE=0,ODA=DA
"RTN","PXRMDEDT",54,0)
 ;Prevent deletion of unused PXRM prompts
"RTN","PXRMDEDT",55,0)
 I $E($G(^PXRMD(801.41,DA,0)),1,4)="PXRM" S DINUSE=1
"RTN","PXRMDEDT",56,0)
 ;Reminder Dialog
"RTN","PXRMDEDT",57,0)
 I TYP="R" S DR="[PXRM EDIT REMINDER DIALOG]"
"RTN","PXRMDEDT",58,0)
 ;Dialog Element
"RTN","PXRMDEDT",59,0)
 I TYP="E" S DR="[PXRM EDIT ELEMENT]"
"RTN","PXRMDEDT",60,0)
 ;Additional Prompt
"RTN","PXRMDEDT",61,0)
 I TYP="P" S DR="[PXRM EDIT PROMPT]"
"RTN","PXRMDEDT",62,0)
 ;Forced Value
"RTN","PXRMDEDT",63,0)
 I TYP="F" S DR="[PXRM EDIT FORCED VALUE]"
"RTN","PXRMDEDT",64,0)
 ;Dialog Group (Finding item dialog)
"RTN","PXRMDEDT",65,0)
 I TYP="G" S DR="[PXRM EDIT GROUP]"
"RTN","PXRMDEDT",66,0)
 ;Result Group
"RTN","PXRMDEDT",67,0)
 I TYP="S" S DR="[PXRM RESULT GROUP]"
"RTN","PXRMDEDT",68,0)
 ;Result Element
"RTN","PXRMDEDT",69,0)
 I TYP="T" S DR="[PXRM RESULT ELEMENT]"
"RTN","PXRMDEDT",70,0)
 ;
"RTN","PXRMDEDT",71,0)
 I "GEPF"[TYP D
"RTN","PXRMDEDT",72,0)
 .I '$D(^PXRMD(801.41,"AD",DA)) W !,"Not used by any other dialog",! Q
"RTN","PXRMDEDT",73,0)
 .I PXRMGTYP'="DLG" S DINUSE=1 Q
"RTN","PXRMDEDT",74,0)
 .I PXRMGTYP="DLG" D  Q
"RTN","PXRMDEDT",75,0)
 ..N SUB
"RTN","PXRMDEDT",76,0)
 ..S SUB=0
"RTN","PXRMDEDT",77,0)
 ..F  S SUB=$O(^PXRMD(801.41,"AD",SUB)) Q:'SUB  Q:DINUSE  D
"RTN","PXRMDEDT",78,0)
 ...I SUB'=PXRMDIEN S DINUSE=1
"RTN","PXRMDEDT",79,0)
 I DINUSE D
"RTN","PXRMDEDT",80,0)
 .W !,"CURRENT DIALOG ELEMENT/GROUP NAME: "_$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",81,0)
 .S DIE("NO^")="OUTOK"
"RTN","PXRMDEDT",82,0)
 .I TYP="S" Q
"RTN","PXRMDEDT",83,0)
 .I PXRMGTYP="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,"")
"RTN","PXRMDEDT",84,0)
 .I PXRMGTYP'="DLGE" W !,"Used by:" D USE^PXRMDLST(DA,10,PXRMDIEN)
"RTN","PXRMDEDT",85,0)
 ;
"RTN","PXRMDEDT",86,0)
 ;Edit dialog then unlock
"RTN","PXRMDEDT",87,0)
 D ^DIE,UNLOCK(ODA)
"RTN","PXRMDEDT",88,0)
 ;Deleted ???
"RTN","PXRMDEDT",89,0)
 I '$D(DA) D:$D(PXRMDIEN) PURGE(PXRMDIEN) S VALMBCK="Q" Q
"RTN","PXRMDEDT",90,0)
 ;Redisplay changes (reminder dialog option only)
"RTN","PXRMDEDT",91,0)
 I PXRMGTYP="DLG",TYP="R" D
"RTN","PXRMDEDT",92,0)
 .;Get name of reminder dialog again
"RTN","PXRMDEDT",93,0)
 .S Y=$P($G(^PXRMD(801.41,DA,0)),U)
"RTN","PXRMDEDT",94,0)
 .;Format headings to include dialog name
"RTN","PXRMDEDT",95,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_$P(Y,U)
"RTN","PXRMDEDT",96,0)
 .;Check if the set is disable and add to header if disabled
"RTN","PXRMDEDT",97,0)
 .I $P(^PXRMD(801.41,DA,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDEDT",98,0)
 .;Reset header in case name has changed
"RTN","PXRMDEDT",99,0)
 .S HEADER=PXRMHD,VALMHDR(1)=HEADER
"RTN","PXRMDEDT",100,0)
 Q
"RTN","PXRMDEDT",101,0)
 ;
"RTN","PXRMDEDT",102,0)
 ;Add SINGLE dialog element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",103,0)
 ;-------------------------
"RTN","PXRMDEDT",104,0)
ESEL(PXRMDIEN,SEL) ;
"RTN","PXRMDEDT",105,0)
 N DA,DIC,DLAYGO,DNEW,DTOUT,DUOUT,DTYP,Y
"RTN","PXRMDEDT",106,0)
 ;
"RTN","PXRMDEDT",107,0)
 S DIC="^PXRMD(801.41,"
"RTN","PXRMDEDT",108,0)
 S DLAYGO="801.41"
"RTN","PXRMDEDT",109,0)
 ;Set the starting place for additions.
"RTN","PXRMDEDT",110,0)
 D SETSTART^PXRMDCPY(DIC,0)
"RTN","PXRMDEDT",111,0)
 S DIC(0)="AEMQL"
"RTN","PXRMDEDT",112,0)
 S DIC("A")="Select new DIALOG ELEMENT: "
"RTN","PXRMDEDT",113,0)
 S DIC("S")="I ""EG""[$P(^PXRMD(801.41,Y,0),U,4)&(Y'=PXRMDIEN)"
"RTN","PXRMDEDT",114,0)
 S DIC("DR")="4///E"
"RTN","PXRMDEDT",115,0)
 W !
"RTN","PXRMDEDT",116,0)
 D ^DIC
"RTN","PXRMDEDT",117,0)
 I $D(DUOUT) S DTOUT=1
"RTN","PXRMDEDT",118,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMDEDT",119,0)
 I Y=-1 K DIC S DTOUT=1 Q
"RTN","PXRMDEDT",120,0)
 S DA=$P(Y,U,1) Q:'DA
"RTN","PXRMDEDT",121,0)
 S DNEW=$P(Y,U,3)
"RTN","PXRMDEDT",122,0)
 ;Add to dialog
"RTN","PXRMDEDT",123,0)
 D EADD(SEL,DA,PXRMDIEN)
"RTN","PXRMDEDT",124,0)
 ;Determine dialog type
"RTN","PXRMDEDT",125,0)
 S DTYP=$P($G(^PXRMD(801.41,DA,0)),U,4)
"RTN","PXRMDEDT",126,0)
 ;
"RTN","PXRMDEDT",127,0)
 ;Edit Dialog
"RTN","PXRMDEDT",128,0)
 I DNEW D EDIT(DTYP,DA)
"RTN","PXRMDEDT",129,0)
 Q
"RTN","PXRMDEDT",130,0)
 ;
"RTN","PXRMDEDT",131,0)
 ;Update dialog component multiple
"RTN","PXRMDEDT",132,0)
 ;--------------------------------
"RTN","PXRMDEDT",133,0)
EADD(SEL,NSUB,PXRMDIEN) ;
"RTN","PXRMDEDT",134,0)
 N DA,DATA,NEXT
"RTN","PXRMDEDT",135,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,10,0)),NEXT=$P(DATA,U,3)+1
"RTN","PXRMDEDT",136,0)
 I DATA="" S DATA="^801.412IA"
"RTN","PXRMDEDT",137,0)
 S DA=NSUB,DA(1)=PXRMDIEN
"RTN","PXRMDEDT",138,0)
 S ^PXRMD(801.41,PXRMDIEN,10,NEXT,0)=SEL_U_DA_"^^^^^^^"
"RTN","PXRMDEDT",139,0)
 ;Update next slot
"RTN","PXRMDEDT",140,0)
 S $P(DATA,U,4)=$P(DATA,U,4)+1,$P(DATA,U,3)=NEXT
"RTN","PXRMDEDT",141,0)
 S ^PXRMD(801.41,PXRMDIEN,10,0)=DATA
"RTN","PXRMDEDT",142,0)
 ;Re-index
"RTN","PXRMDEDT",143,0)
 N DIK,DA S DIK="^PXRMD(801.41,",DA=PXRMDIEN
"RTN","PXRMDEDT",144,0)
 D IX^DIK
"RTN","PXRMDEDT",145,0)
 Q
"RTN","PXRMDEDT",146,0)
 ;
"RTN","PXRMDEDT",147,0)
 ;Edit individual element (protocol PXRM DIALOG SELECTION ITEM)
"RTN","PXRMDEDT",148,0)
 ;-----------------------
"RTN","PXRMDEDT",149,0)
IND(DIEN) ;
"RTN","PXRMDEDT",150,0)
 W IORESET
"RTN","PXRMDEDT",151,0)
 N DIC,DIDEL,DR,DTOUT,DUOUT,DINUSE,HED,Y
"RTN","PXRMDEDT",152,0)
 W !,"CURRENT DIALOG ELEMENT NAME: "_$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDEDT",153,0)
 ;Ask what to do with it
"RTN","PXRMDEDT",154,0)
 N ANS D PROMPT(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDEDT",155,0)
 ;Delete line
"RTN","PXRMDEDT",156,0)
 I ANS="D" D DEL(DIEN,PXRMDIEN) Q
"RTN","PXRMDEDT",157,0)
 ;Copy and Replace option
"RTN","PXRMDEDT",158,0)
 I ANS="C" D SEL^PXRMDCPY(.DIEN,PXRMDIEN) Q:$D(DTOUT)!$D(DUOUT) 
"RTN","PXRMDEDT",159,0)
 ;Determine if a taxonomy dialog
"RTN","PXRMDEDT",160,0)
 N FIND
"RTN","PXRMDEDT",161,0)
 S FIND=$P($G(^PXRMD(801.41,IEN,1)),U,5),VALMBCK="R"
"RTN","PXRMDEDT",162,0)
 ;Edit taxomomy dialog
"RTN","PXRMDEDT",163,0)
 I $P(FIND,";",2)="PXD(811.2," D EDIT^PXRMGEDT("DTAX",$P(FIND,";"),0) Q
"RTN","PXRMDEDT",164,0)
 ;Determine dialog type
"RTN","PXRMDEDT",165,0)
 S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4) Q:DTYP=""
"RTN","PXRMDEDT",166,0)
 ;Option to change an element to a group
"RTN","PXRMDEDT",167,0)
 I DTYP="E" D NTYP(.DTYP) Q:$D(DUOUT)!$D(DTOUT)  D:DTYP="G"
"RTN","PXRMDEDT",168,0)
 .S $P(^PXRMD(801.41,DIEN,0),U,4)=DTYP
"RTN","PXRMDEDT",169,0)
 .W !,"Dialog element changed to a dialog group"
"RTN","PXRMDEDT",170,0)
 ;Edit Element
"RTN","PXRMDEDT",171,0)
 D EDIT(DTYP,DIEN)
"RTN","PXRMDEDT",172,0)
 Q
"RTN","PXRMDEDT",173,0)
 ;
"RTN","PXRMDEDT",174,0)
 ;Change Dialog Element Type
"RTN","PXRMDEDT",175,0)
 ;--------------------------
"RTN","PXRMDEDT",176,0)
NTYP(TYP) ;
"RTN","PXRMDEDT",177,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",178,0)
 S DIR(0)="SA"_U_"E:Element;"
"RTN","PXRMDEDT",179,0)
 S DIR(0)=DIR(0)_"G:Group;"
"RTN","PXRMDEDT",180,0)
 S DIR("A")="Dialog Element Type: "
"RTN","PXRMDEDT",181,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",182,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",183,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(3)"
"RTN","PXRMDEDT",184,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",185,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",186,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",187,0)
 S TYP=Y
"RTN","PXRMDEDT",188,0)
 Q
"RTN","PXRMDEDT",189,0)
 ;
"RTN","PXRMDEDT",190,0)
 ;Select Dialog Element Action
"RTN","PXRMDEDT",191,0)
 ;----------------------------
"RTN","PXRMDEDT",192,0)
PROMPT(ANS) ;
"RTN","PXRMDEDT",193,0)
 N X,Y,DIR K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDEDT",194,0)
 S DIR(0)="S"_U_"E:Edit;"
"RTN","PXRMDEDT",195,0)
 S DIR(0)=DIR(0)_"C:Copy and Replace current element;"
"RTN","PXRMDEDT",196,0)
 S DIR(0)=DIR(0)_"D:Delete element from this dialog;"
"RTN","PXRMDEDT",197,0)
 S DIR("A")="Select Dialog Element Action"
"RTN","PXRMDEDT",198,0)
 S DIR("B")="E"
"RTN","PXRMDEDT",199,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMDEDT",200,0)
 S DIR("??")=U_"D HELP^PXRMDEDT(1)"
"RTN","PXRMDEDT",201,0)
 D ^DIR K DIR
"RTN","PXRMDEDT",202,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDEDT",203,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDEDT",204,0)
 S ANS=Y
"RTN","PXRMDEDT",205,0)
 Q
"RTN","PXRMDEDT",206,0)
 ;
"RTN","PXRMDEDT",207,0)
 ;Clear pointers from the reminder file and process ID file
"RTN","PXRMDEDT",208,0)
 ;---------------------------------------------------------
"RTN","PXRMDEDT",209,0)
PURGE(DIEN) ;
"RTN","PXRMDEDT",210,0)
 ;Purge pointers to this dialog from reminder file
"RTN","PXRMDEDT",211,0)
 N RIEN
"RTN","PXRMDEDT",212,0)
 S RIEN=0
"RTN","PXRMDEDT",213,0)
 F  S RIEN=$O(^PXD(811.9,"AG",DIEN,RIEN)) Q:'RIEN  D
"RTN","PXRMDEDT",214,0)
 .K ^PXD(811.9,RIEN,51),^PXD(811.9,"AG",DIEN,RIEN)
"RTN","PXRMDEDT",215,0)
 ;
"RTN","PXRMDEDT",216,0)
 ;Purge forced values/additional promts from process id file
"RTN","PXRMDEDT",217,0)
 N DA,DIK,GIEN,GNODE
"RTN","PXRMDEDT",218,0)
 S GIEN=$O(^PXRMD(801.42,"AB",DIEN,"")) Q:'GIEN  S GNODE=""
"RTN","PXRMDEDT",219,0)
 F  S GNODE=$O(^PXRMD(801.42,"AB",DIEN,GIEN,GNODE)) Q:'GNODE  D
"RTN","PXRMDEDT",220,0)
 .S DA=GNODE,DA(1)=GIEN,DIK="^PXRMD(801.42,"_DA(1)_",2,"
"RTN","PXRMDEDT",221,0)
 .D ^DIK
"RTN","PXRMDEDT",222,0)
 Q
"RTN","PXRMDEDT",223,0)
 ;
"RTN","PXRMDEDT",224,0)
 ;General help text routine. Write out the text in the HTEXT array.
"RTN","PXRMDEDT",225,0)
HELP(CALL) ;
"RTN","PXRMDEDT",226,0)
 N HTEXT
"RTN","PXRMDEDT",227,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDEDT",228,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMDEDT",229,0)
 ;
"RTN","PXRMDEDT",230,0)
 I CALL=1 D
"RTN","PXRMDEDT",231,0)
 .S HTEXT(1)="Select E to edit dialog element. If you wish to create"
"RTN","PXRMDEDT",232,0)
 .S HTEXT(2)="a new dialog element just for this reminder dialog select"
"RTN","PXRMDEDT",233,0)
 .S HTEXT(3)="C to copy and replace the current element. Select D to"
"RTN","PXRMDEDT",234,0)
 .S HTEXT(4)="delete the sequence number/element from the dialog."
"RTN","PXRMDEDT",235,0)
 I CALL=2 D
"RTN","PXRMDEDT",236,0)
 .S HTEXT(1)="Enter Y to copy the current dialog element to a new name"
"RTN","PXRMDEDT",237,0)
 .S HTEXT(2)="and then use this new element in the reminder dialog."
"RTN","PXRMDEDT",238,0)
 I CALL=3 D
"RTN","PXRMDEDT",239,0)
 .S HTEXT(1)="Enter G to change the current dialog element into a dialog"
"RTN","PXRMDEDT",240,0)
 .S HTEXT(2)="group so that additional elements can be added. Enter E to"
"RTN","PXRMDEDT",241,0)
 .S HTEXT(3)="leave the type of the dialog element unchanged."
"RTN","PXRMDEDT",242,0)
 I CALL=4 D
"RTN","PXRMDEDT",243,0)
 .S HTEXT(1)="Enter Y to change the dialog prompt created into a forced"
"RTN","PXRMDEDT",244,0)
 .S HTEXT(2)="value. To edit the new forced value switch to the forced"
"RTN","PXRMDEDT",245,0)
 .S HTEXT(3)="value screen using CV. This option only applies to prompts"
"RTN","PXRMDEDT",246,0)
 .S HTEXT(4)="which update PCE or vitals."
"RTN","PXRMDEDT",247,0)
 .S HTEXT(5)="Enter N to leave the dialog prompt unchanged."
"RTN","PXRMDEDT",248,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",249,0)
 S IC=""
"RTN","PXRMDEDT",250,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDEDT",251,0)
 . S X=HTEXT(IC)
"RTN","PXRMDEDT",252,0)
 . D ^DIWP
"RTN","PXRMDEDT",253,0)
 W !
"RTN","PXRMDEDT",254,0)
 S IC=0
"RTN","PXRMDEDT",255,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDEDT",256,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDEDT",257,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDEDT",258,0)
 W !
"RTN","PXRMDEDT",259,0)
 Q
"RTN","PXRMDEDT",260,0)
 ;
"RTN","PXRMDEDT",261,0)
LOCK(DA) ;Lock the record
"RTN","PXRMDEDT",262,0)
 L +^PXRMD(801.41,DA):0 I  Q 1
"RTN","PXRMDEDT",263,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMDEDT",264,0)
 ;
"RTN","PXRMDEDT",265,0)
 ;
"RTN","PXRMDEDT",266,0)
UNLOCK(DA) ;Unlock the record
"RTN","PXRMDEDT",267,0)
 L -^PXRMD(801.41,DA)
"RTN","PXRMDEDT",268,0)
 Q
"RTN","PXRMDGEN")
0^14^B11656658
"RTN","PXRMDGEN",1,0)
PXRMDGEN ; SLC/PKR - Handle VA GENERIC drug findings. ;09/28/2000
"RTN","PXRMDGEN",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDGEN",3,0)
 ;
"RTN","PXRMDGEN",4,0)
 ;=======================================================================
"RTN","PXRMDGEN",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate VA GENERIC (file #50.6) findings.
"RTN","PXRMDGEN",6,0)
 N FIND0,FINDING,VAGIEN
"RTN","PXRMDGEN",7,0)
 S VAGIEN=""
"RTN","PXRMDGEN",8,0)
 F  S VAGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",9,0)
 . S FINDING=""
"RTN","PXRMDGEN",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSNDF(50.6,",VAGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDGEN",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",12,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDGEN",13,0)
 Q
"RTN","PXRMDGEN",14,0)
 ;
"RTN","PXRMDGEN",15,0)
 ;=======================================================================
"RTN","PXRMDGEN",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate VA GENERIC (file #50.6) terms.
"RTN","PXRMDGEN",17,0)
 N FIND0,TFIND0,TFINDING,VAGIEN
"RTN","PXRMDGEN",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDGEN",19,0)
 S VAGIEN=""
"RTN","PXRMDGEN",20,0)
 F  S VAGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN)) Q:+VAGIEN=0  D
"RTN","PXRMDGEN",21,0)
 . S TFINDING=""
"RTN","PXRMDGEN",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSNDF(50.6,",VAGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDGEN",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDGEN",24,0)
 .. D FIEVAL(DFN,VAGIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDGEN",25,0)
 Q
"RTN","PXRMDGEN",26,0)
 ;
"RTN","PXRMDGEN",27,0)
 ;=======================================================================
"RTN","PXRMDGEN",28,0)
FIEVAL(DFN,VAGIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDGEN",29,0)
 N DRUG,DRUGIEN,DSUP,LDATE,RDATE,SDATE,STATUS,VAGEN,VALID
"RTN","PXRMDGEN",30,0)
 S VAGEN=$$VAGN^PSNAPIS(VAGIEN)
"RTN","PXRMDGEN",31,0)
 ;Use the "AND" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDGEN",32,0)
 ;generic group.
"RTN","PXRMDGEN",33,0)
 S DATE=0
"RTN","PXRMDGEN",34,0)
 S DRUGIEN=0
"RTN","PXRMDGEN",35,0)
 F  S DRUGIEN=$O(^PSDRUG("AND",VAGIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDGEN",36,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDGEN",37,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDGEN",38,0)
 . I LDATE>DATE D
"RTN","PXRMDGEN",39,0)
 .. S DATE=LDATE
"RTN","PXRMDGEN",40,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",41,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDGEN",42,0)
 .. I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDGEN",43,0)
 .. I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDGEN",44,0)
 .. I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDGEN",45,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDGEN",46,0)
 ;If the last date is 0 then there is no release date and the finding
"RTN","PXRMDGEN",47,0)
 ;is false.
"RTN","PXRMDGEN",48,0)
 I +DATE=0 D  Q
"RTN","PXRMDGEN",49,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDGEN",50,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",51,0)
 ;Save the rest of the finding information.
"RTN","PXRMDGEN",52,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDGEN",53,0)
 S FIEVAL(FINDING,"GENERIC")=VAGEN
"RTN","PXRMDGEN",54,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDGEN",55,0)
 S FIEVAL(FINDING,"FINDING")=VAGIEN_";PSNDF(50.6,"
"RTN","PXRMDGEN",56,0)
 ;Determine if the finding has expired.
"RTN","PXRMDGEN",57,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDGEN",58,0)
 I 'VALID D
"RTN","PXRMDGEN",59,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDGEN",60,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDGEN",61,0)
 Q
"RTN","PXRMDGEN",62,0)
 ;
"RTN","PXRMDGEN",63,0)
 ;=======================================================================
"RTN","PXRMDGEN",64,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGEN",65,0)
 ;maintenance output.
"RTN","PXRMDGEN",66,0)
 N DATE,DRUG,TEMP,VAGEN
"RTN","PXRMDGEN",67,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGEN",68,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDGEN",69,0)
 S TEMP=TEMP_" VA GENERIC Drug: "
"RTN","PXRMDGEN",70,0)
 S VAGEN=FIEVAL(FINDING,"GENERIC")
"RTN","PXRMDGEN",71,0)
 S TEMP=TEMP_VAGEN
"RTN","PXRMDGEN",72,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDGEN",73,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDGEN",74,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGEN",75,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGEN",76,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",77,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",78,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDGEN",79,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDGEN",80,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDGEN",81,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDGEN",82,0)
 S NLINES=NLINES+1
"RTN","PXRMDGEN",83,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGEN",84,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGEN",85,0)
 . N UID
"RTN","PXRMDGEN",86,0)
 . S UID="VA GENERIC DRUG "_VAGEN
"RTN","PXRMDGEN",87,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDGEN",88,0)
 Q
"RTN","PXRMDGEN",89,0)
 ;
"RTN","PXRMDGPT")
0^19^B46292310
"RTN","PXRMDGPT",1,0)
PXRMDGPT ; SLC/PKR - Code to handle DGPT (Patient Treatment File) data. ;10/03/2000
"RTN","PXRMDGPT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDGPT",3,0)
 ;
"RTN","PXRMDGPT",4,0)
 ;=======================================================================
"RTN","PXRMDGPT",5,0)
ADDICD9(IEN,D070,DATE,INVDATE) ;Get ICD9 codes from D070=DGPT(D0,70).
"RTN","PXRMDGPT",6,0)
 N DATA,ICD9P
"RTN","PXRMDGPT",7,0)
 S DATA=IEN_U_U_DATE
"RTN","PXRMDGPT",8,0)
 S ICD9P=$P(D070,U,10) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P_U_"DXLS"
"RTN","PXRMDGPT",9,0)
 S ICD9P=$P(D070,U,11) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P_U_"P"
"RTN","PXRMDGPT",10,0)
 S ICD9P=$P(D070,U,16) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",11,0)
 S ICD9P=$P(D070,U,17) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",12,0)
 S ICD9P=$P(D070,U,18) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",13,0)
 S ICD9P=$P(D070,U,19) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",14,0)
 S ICD9P=$P(D070,U,20) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",15,0)
 S ICD9P=$P(D070,U,21) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",16,0)
 S ICD9P=$P(D070,U,22) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",17,0)
 S ICD9P=$P(D070,U,23) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",18,0)
 S ICD9P=$P(D070,U,24) I ICD9P'="" S ^TMP($J,"DGPTICD9",ICD9P,INVDATE)=DATA_U_ICD9P
"RTN","PXRMDGPT",19,0)
 Q
"RTN","PXRMDGPT",20,0)
 ;
"RTN","PXRMDGPT",21,0)
 ;=======================================================================
"RTN","PXRMDGPT",22,0)
BLDPC0(DFN) ;Check and if necessary build the PTF ICD0 patient cache.
"RTN","PXRMDGPT",23,0)
 N DATE,ICD0P,IEN,INVDATE,NPATIEN,PIEN,SIEN
"RTN","PXRMDGPT",24,0)
 I '$D(^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")) D
"RTN","PXRMDGPT",25,0)
 . K ^TMP($J,"DGPTICD0"),^XTMP(PXRMDFN,"DGPTICD0")
"RTN","PXRMDGPT",26,0)
 .;In DGPTICD0 we store the ICD0 ien in the first piece, the DGPT ien
"RTN","PXRMDGPT",27,0)
 .;it came from in the second piece, and the date in the third piece.
"RTN","PXRMDGPT",28,0)
 . S IEN=""
"RTN","PXRMDGPT",29,0)
 . F  S IEN=$O(^DGPT("B",DFN,IEN)) Q:IEN=""  D
"RTN","PXRMDGPT",30,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",31,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"S","AO",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",32,0)
 ... S SIEN=$O(^DGPT(IEN,"S","AO",ICD0P,""))
"RTN","PXRMDGPT",33,0)
 ... S DATE=$P($G(^DGPT(IEN,"S",SIEN,0)),U,1)
"RTN","PXRMDGPT",34,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",35,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",36,0)
 ..;
"RTN","PXRMDGPT",37,0)
 ..;This cross-ref gets the second set of ICD0 operation/procedure codes.
"RTN","PXRMDGPT",38,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",39,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"AP",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",40,0)
 ... S DATE=$P(^DGPT(IEN,0),U,2)
"RTN","PXRMDGPT",41,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",42,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",43,0)
 ..;
"RTN","PXRMDGPT",44,0)
 ..;This cross-ref gets the third set of ICD0 operation/procedure codes.
"RTN","PXRMDGPT",45,0)
 .. S ICD0P=""
"RTN","PXRMDGPT",46,0)
 .. F  S ICD0P=$O(^DGPT(IEN,"P","AP6",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",47,0)
 ... S PIEN=$O(^DGPT(IEN,"P","AP6",ICD0P,""))
"RTN","PXRMDGPT",48,0)
 ... S DATE=$P($G(^DGPT(IEN,"P",PIEN,0)),U,1)
"RTN","PXRMDGPT",49,0)
 ... S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",50,0)
 ... S ^TMP($J,"DGPTICD0",ICD0P,INVDATE)=IEN_U_U_DATE_U_ICD0P
"RTN","PXRMDGPT",51,0)
 .;
"RTN","PXRMDGPT",52,0)
 .;Build the list of most recent entries.
"RTN","PXRMDGPT",53,0)
 . S NPATIEN=0
"RTN","PXRMDGPT",54,0)
 . S ICD0P=""
"RTN","PXRMDGPT",55,0)
 . F  S ICD0P=$O(^TMP($J,"DGPTICD0",ICD0P)) Q:ICD0P=""  D
"RTN","PXRMDGPT",56,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMDGPT",57,0)
 .. S INVDATE=$O(^TMP($J,"DGPTICD0",ICD0P,""))
"RTN","PXRMDGPT",58,0)
 .. S ^XTMP(PXRMDFN,"DGPTICD0",ICD0P,INVDATE)=^TMP($J,"DGPTICD0",ICD0P,INVDATE)
"RTN","PXRMDGPT",59,0)
 . S ^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")=NPATIEN
"RTN","PXRMDGPT",60,0)
 . K ^TMP($J,"DGPTICD0")
"RTN","PXRMDGPT",61,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"DGPTICD0","NPATIEN")
"RTN","PXRMDGPT",62,0)
 Q NPATIEN
"RTN","PXRMDGPT",63,0)
 ;
"RTN","PXRMDGPT",64,0)
 ;=======================================================================
"RTN","PXRMDGPT",65,0)
BLDPC9(DFN) ;Check and if necessary build the PTF ICD9 patient cache.
"RTN","PXRMDGPT",66,0)
 N D070,DATE,ICD9P,IEN,INVDATE,NPATIEN
"RTN","PXRMDGPT",67,0)
 I '$D(^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")) D
"RTN","PXRMDGPT",68,0)
 . K ^TMP($J,"DGPTICD9"),^XTMP(PXRMDFN,"DGPTICD9")
"RTN","PXRMDGPT",69,0)
 . S IEN=""
"RTN","PXRMDGPT",70,0)
 . F  S IEN=$O(^DGPT("B",DFN,IEN)) Q:IEN=""  D
"RTN","PXRMDGPT",71,0)
 .. S D070=$G(^DGPT(IEN,70))
"RTN","PXRMDGPT",72,0)
 .. S DATE=$P($G(^DGPT(IEN,70)),U,1)
"RTN","PXRMDGPT",73,0)
 ..;If there is no discharge date then use the admission date.
"RTN","PXRMDGPT",74,0)
 .. I $L(DATE)=0 S DATE=$P($G(^DGPT(IEN,0)),U,2)
"RTN","PXRMDGPT",75,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMDGPT",76,0)
 .. D ADDICD9(IEN,D070,DATE,INVDATE)
"RTN","PXRMDGPT",77,0)
 .;
"RTN","PXRMDGPT",78,0)
 .;Build the list of most recent entries.
"RTN","PXRMDGPT",79,0)
 . S NPATIEN=0
"RTN","PXRMDGPT",80,0)
 . S ICD9P=""
"RTN","PXRMDGPT",81,0)
 . F  S ICD9P=$O(^TMP($J,"DGPTICD9",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMDGPT",82,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMDGPT",83,0)
 .. S INVDATE=$O(^TMP($J,"DGPTICD9",ICD9P,""))
"RTN","PXRMDGPT",84,0)
 .. S ^XTMP(PXRMDFN,"DGPTICD9",ICD9P,INVDATE)=^TMP($J,"DGPTICD9",ICD9P,INVDATE)
"RTN","PXRMDGPT",85,0)
 . S ^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")=NPATIEN
"RTN","PXRMDGPT",86,0)
 . K ^TMP($J,"DGPTICD9")
"RTN","PXRMDGPT",87,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"DGPTICD9","NPATIEN")
"RTN","PXRMDGPT",88,0)
 Q NPATIEN
"RTN","PXRMDGPT",89,0)
 ;
"RTN","PXRMDGPT",90,0)
 ;=======================================================================
"RTN","PXRMDGPT",91,0)
EVALICD0(DFN,TAXIEN,FLIST) ;Match patient PTF ICD0 entries.
"RTN","PXRMDGPT",92,0)
 N FIRST,ICD0P,INVDATE,LAST,NPATIEN,TLIST
"RTN","PXRMDGPT",93,0)
 ;
"RTN","PXRMDGPT",94,0)
 S NPATIEN=$$BLDPC0(DFN)
"RTN","PXRMDGPT",95,0)
 I NPATIEN=0 Q
"RTN","PXRMDGPT",96,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMDGPT",97,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMDGPT",98,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMDGPT",99,0)
 ;match limits.
"RTN","PXRMDGPT",100,0)
 S FIRST=$O(^XTMP(PXRMDFN,"DGPTICD0",""))
"RTN","PXRMDGPT",101,0)
 S LAST=$O(^XTMP(PXRMDFN,"DGPTICD0","NPATIEN"),-1)
"RTN","PXRMDGPT",102,0)
 S ICD0P=FIRST-1
"RTN","PXRMDGPT",103,0)
 F  S ICD0P=$O(^PXD(811.3,TAXIEN,80.1,"ICD0P",ICD0P)) Q:(ICD0P>LAST)!(ICD0P="")  D
"RTN","PXRMDGPT",104,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"DGPTICD0",ICD0P,""))
"RTN","PXRMDGPT",105,0)
 . I INVDATE>0 D
"RTN","PXRMDGPT",106,0)
 .. S TLIST(INVDATE)=$G(^XTMP(PXRMDFN,"DGPTICD0",ICD0P,INVDATE))
"RTN","PXRMDGPT",107,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMDGPT",108,0)
 ;Return the most recent entry only.
"RTN","PXRMDGPT",109,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMDGPT",110,0)
 ;If there are no entries we are done.
"RTN","PXRMDGPT",111,0)
 I INVDATE="" Q
"RTN","PXRMDGPT",112,0)
 S FLIST(INVDATE,"DGPTICD0")=TLIST(INVDATE)
"RTN","PXRMDGPT",113,0)
 Q
"RTN","PXRMDGPT",114,0)
 ;
"RTN","PXRMDGPT",115,0)
 ;=======================================================================
"RTN","PXRMDGPT",116,0)
EVALICD9(DFN,TAXIEN,FLIST) ;Match patient PTF ICD9 entries.
"RTN","PXRMDGPT",117,0)
 N ANY,DXLS,FIRST,ICD9P,INVDATE,LAST,NPATIEN,PDS,PDST,PRIN,TEMP,TLIST
"RTN","PXRMDGPT",118,0)
 ;
"RTN","PXRMDGPT",119,0)
 S NPATIEN=$$BLDPC9(DFN)
"RTN","PXRMDGPT",120,0)
 I NPATIEN=0 Q
"RTN","PXRMDGPT",121,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMDGPT",122,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMDGPT",123,0)
 ;See if we are looking for DXLS or principal only.
"RTN","PXRMDGPT",124,0)
 S PDS=$P(^PXD(811.2,TAXIEN,0),U,4)
"RTN","PXRMDGPT",125,0)
 I PDS["DXLS" S DXLS=1
"RTN","PXRMDGPT",126,0)
 E  S DXLS=0
"RTN","PXRMDGPT",127,0)
 I PDS["PR" S PRIN=1
"RTN","PXRMDGPT",128,0)
 E  S PRIN=0
"RTN","PXRMDGPT",129,0)
 I ('DXLS)&('PRIN) S ANY=1
"RTN","PXRMDGPT",130,0)
 E  S ANY=0
"RTN","PXRMDGPT",131,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMDGPT",132,0)
 ;match limits.
"RTN","PXRMDGPT",133,0)
 S FIRST=$O(^XTMP(PXRMDFN,"DGPTICD9",""))
"RTN","PXRMDGPT",134,0)
 S LAST=$O(^XTMP(PXRMDFN,"DGPTICD9","NPATIEN"),-1)
"RTN","PXRMDGPT",135,0)
 S ICD9P=FIRST-1
"RTN","PXRMDGPT",136,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMDGPT",137,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"DGPTICD9",ICD9P,""))
"RTN","PXRMDGPT",138,0)
 . I INVDATE>0 D
"RTN","PXRMDGPT",139,0)
 .. S TEMP=^XTMP(PXRMDFN,"DGPTICD9",ICD9P,INVDATE)
"RTN","PXRMDGPT",140,0)
 .. I ANY S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",141,0)
 .. E  D
"RTN","PXRMDGPT",142,0)
 ... S PDST=$P(TEMP,U,5)
"RTN","PXRMDGPT",143,0)
 ... I (DXLS),(PDST="DXLS") S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",144,0)
 ... I (PRIN),(PDST="P") S TLIST(INVDATE)=TEMP
"RTN","PXRMDGPT",145,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMDGPT",146,0)
 ;Return the most recent entry only.
"RTN","PXRMDGPT",147,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMDGPT",148,0)
 ;If there are no entries we are done.
"RTN","PXRMDGPT",149,0)
 I INVDATE="" Q
"RTN","PXRMDGPT",150,0)
 S FLIST(INVDATE,"DGPTICD9")=TLIST(INVDATE)
"RTN","PXRMDGPT",151,0)
 Q
"RTN","PXRMDGPT",152,0)
 ;
"RTN","PXRMDGPT",153,0)
 ;======================================================================
"RTN","PXRMDGPT",154,0)
OUTICD0(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGPT",155,0)
 ;maintenance output.
"RTN","PXRMDGPT",156,0)
 N D0,FIEN,ICD0ZN,PROC,TEMP,VDATE
"RTN","PXRMDGPT",157,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMDGPT",158,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGPT",159,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMDGPT",160,0)
 S TEMP=TEMP_" Hospitalization Procedure: "
"RTN","PXRMDGPT",161,0)
 S D0=$P(FIEVAL(FINDING,"CODEP"),";",1)
"RTN","PXRMDGPT",162,0)
 S ICD0ZN=$G(^ICD0(D0,0))
"RTN","PXRMDGPT",163,0)
 S CODE=$P(ICD0ZN,U,1)
"RTN","PXRMDGPT",164,0)
 S PROC=$P(ICD0ZN,U,4)
"RTN","PXRMDGPT",165,0)
 S TEMP=TEMP_CODE_" "_PROC
"RTN","PXRMDGPT",166,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGPT",167,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGPT",168,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",169,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGPT",170,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGPT",171,0)
 . N UID
"RTN","PXRMDGPT",172,0)
 . S UID="ICD0DGPT "_CODE
"RTN","PXRMDGPT",173,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMDGPT",174,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMDGPT",175,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PROC")=PROC
"RTN","PXRMDGPT",176,0)
 Q
"RTN","PXRMDGPT",177,0)
 ;
"RTN","PXRMDGPT",178,0)
 ;======================================================================
"RTN","PXRMDGPT",179,0)
OUTICD9(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDGPT",180,0)
 ;maintenance output.
"RTN","PXRMDGPT",181,0)
 N DIAG,FIEN,ICD9P,ICD9ZN,TEMP,VDATE
"RTN","PXRMDGPT",182,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMDGPT",183,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDGPT",184,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMDGPT",185,0)
 S TEMP=TEMP_" Hospitalization Diagnosis: "
"RTN","PXRMDGPT",186,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMDGPT",187,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMDGPT",188,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMDGPT",189,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMDGPT",190,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMDGPT",191,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDGPT",192,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDGPT",193,0)
 S NLINES=NLINES+1
"RTN","PXRMDGPT",194,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDGPT",195,0)
 I $D(PXRMDEV) D
"RTN","PXRMDGPT",196,0)
 . N UID
"RTN","PXRMDGPT",197,0)
 . S UID="ICD9DGPT "_CODE
"RTN","PXRMDGPT",198,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMDGPT",199,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMDGPT",200,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMDGPT",201,0)
 Q
"RTN","PXRMDGPT",202,0)
 ;
"RTN","PXRMDHLP")
0^59^B101582733
"RTN","PXRMDHLP",1,0)
PXRMDHLP ; SLC/PJH - Reminder dialog main help. ;10/30/2000
"RTN","PXRMDHLP",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDHLP",3,0)
 ;
"RTN","PXRMDHLP",4,0)
 ; Entry action for list PXRM DIALOG MAIN HELP 
"RTN","PXRMDHLP",5,0)
 ;
"RTN","PXRMDHLP",6,0)
LOAD N DONE,IND,TEXT
"RTN","PXRMDHLP",7,0)
 S DONE=0
"RTN","PXRMDHLP",8,0)
 K ^TMP("PXRMDHLP",$J)
"RTN","PXRMDHLP",9,0)
 S VALMCNT=0
"RTN","PXRMDHLP",10,0)
 F IND=1:1 Q:DONE  D
"RTN","PXRMDHLP",11,0)
 . S TEXT=$P($T(@PXRMTAG+IND),";",3)
"RTN","PXRMDHLP",12,0)
 . I TEXT="**End Text**" S DONE=1 Q
"RTN","PXRMDHLP",13,0)
 . S VALMCNT=VALMCNT+1
"RTN","PXRMDHLP",14,0)
 . S ^TMP("PXRMDHLP",$J,VALMCNT,0)=TEXT
"RTN","PXRMDHLP",15,0)
 S ^TMP("PXRMDHLP",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDHLP",16,0)
 Q
"RTN","PXRMDHLP",17,0)
 ;
"RTN","PXRMDHLP",18,0)
RCAT ;Help text
"RTN","PXRMDHLP",19,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",20,0)
 ;;
"RTN","PXRMDHLP",21,0)
 ;;#   Select Item
"RTN","PXRMDHLP",22,0)
 ;;    Display, edit, delete or print a reminder category.
"RTN","PXRMDHLP",23,0)
 ;;
"RTN","PXRMDHLP",24,0)
 ;;AD  Add
"RTN","PXRMDHLP",25,0)
 ;;    Add a new reminder category.
"RTN","PXRMDHLP",26,0)
 ;;
"RTN","PXRMDHLP",27,0)
 ;;PT  List Categories
"RTN","PXRMDHLP",28,0)
 ;;    Print a list of all the reminder categories defined in the
"RTN","PXRMDHLP",29,0)
 ;;    current UCI.
"RTN","PXRMDHLP",30,0)
 ;;
"RTN","PXRMDHLP",31,0)
 ;;QU  Quit
"RTN","PXRMDHLP",32,0)
 ;;**End Text**
"RTN","PXRMDHLP",33,0)
 ;
"RTN","PXRMDHLP",34,0)
DLG ;Help text
"RTN","PXRMDHLP",35,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",36,0)
 ;;
"RTN","PXRMDHLP",37,0)
 ;;#   Select Item
"RTN","PXRMDHLP",38,0)
 ;;    Display, edit, delete or print a reminder dialog.
"RTN","PXRMDHLP",39,0)
 ;;
"RTN","PXRMDHLP",40,0)
 ;;AD  Add
"RTN","PXRMDHLP",41,0)
 ;;    Add a new REMINDER DIALOG. The dialog may be either autogenerated
"RTN","PXRMDHLP",42,0)
 ;;    from the dialog definition or input manually.
"RTN","PXRMDHLP",43,0)
 ;;
"RTN","PXRMDHLP",44,0)
 ;;CV  Change View
"RTN","PXRMDHLP",45,0)
 ;;    The initial display is of reminder dialogs only. This may be
"RTN","PXRMDHLP",46,0)
 ;;    changed to display:
"RTN","PXRMDHLP",47,0)
 ;;          
"RTN","PXRMDHLP",48,0)
 ;;    additional prompts, forced values, dialog elements,
"RTN","PXRMDHLP",49,0)
 ;;    dialog groups, result groups or result elements.
"RTN","PXRMDHLP",50,0)
 ;;  
"RTN","PXRMDHLP",51,0)
 ;;    A display by reminder may also be selected. 
"RTN","PXRMDHLP",52,0)
 ;;
"RTN","PXRMDHLP",53,0)
 ;;PT  List
"RTN","PXRMDHLP",54,0)
 ;;    Print a list of all the reminder dialogs that are defined in the
"RTN","PXRMDHLP",55,0)
 ;;    current UCI.
"RTN","PXRMDHLP",56,0)
 ;;
"RTN","PXRMDHLP",57,0)
 ;;RN  Name/Print Name
"RTN","PXRMDHLP",58,0)
 ;;    Toggle reminder name and reminder print name.
"RTN","PXRMDHLP",59,0)
 ;;
"RTN","PXRMDHLP",60,0)
 ;;QU  Quit
"RTN","PXRMDHLP",61,0)
 ;;**End Text**
"RTN","PXRMDHLP",62,0)
 ;
"RTN","PXRMDHLP",63,0)
DLGE ;Help text
"RTN","PXRMDHLP",64,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",65,0)
 ;;
"RTN","PXRMDHLP",66,0)
 ;;#   Select Item
"RTN","PXRMDHLP",67,0)
 ;;    Display, edit, delete or print a dialog.
"RTN","PXRMDHLP",68,0)
 ;;
"RTN","PXRMDHLP",69,0)
 ;;AD  Add
"RTN","PXRMDHLP",70,0)
 ;;    Add a new dialog. Elements or Groups may be created.
"RTN","PXRMDHLP",71,0)
 ;;
"RTN","PXRMDHLP",72,0)
 ;;CO  Copy Dialog
"RTN","PXRMDHLP",73,0)
 ;;    Copy a selected dialog to a new name.
"RTN","PXRMDHLP",74,0)
 ;;
"RTN","PXRMDHLP",75,0)
 ;;CV  Change View
"RTN","PXRMDHLP",76,0)
 ;;    Change display to a different dialog type:
"RTN","PXRMDHLP",77,0)
 ;;      
"RTN","PXRMDHLP",78,0)
 ;;    dialog elements, additional prompts, forced values,
"RTN","PXRMDHLP",79,0)
 ;;    dialog groups, result groups, result elements or 
"RTN","PXRMDHLP",80,0)
 ;;    reminder dialogs. 
"RTN","PXRMDHLP",81,0)
 ;;
"RTN","PXRMDHLP",82,0)
 ;;    A display by reminder may also be selected. 
"RTN","PXRMDHLP",83,0)
 ;;
"RTN","PXRMDHLP",84,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",85,0)
 ;;    Print details for a selected dialog.
"RTN","PXRMDHLP",86,0)
 ;;    (restricted to dialog type in the current view)
"RTN","PXRMDHLP",87,0)
 ;;    
"RTN","PXRMDHLP",88,0)
 ;;PT  List All
"RTN","PXRMDHLP",89,0)
 ;;    Print a list of all dialogs of this type defined in the current
"RTN","PXRMDHLP",90,0)
 ;;    UCI.
"RTN","PXRMDHLP",91,0)
 ;;
"RTN","PXRMDHLP",92,0)
 ;;QU  Quit
"RTN","PXRMDHLP",93,0)
 ;;**End Text**
"RTN","PXRMDHLP",94,0)
 ;
"RTN","PXRMDHLP",95,0)
DLGR ;Help text
"RTN","PXRMDHLP",96,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",97,0)
 ;;
"RTN","PXRMDHLP",98,0)
 ;;#   Select Item
"RTN","PXRMDHLP",99,0)
 ;;    Select reminder to view dialogs for the reminder.
"RTN","PXRMDHLP",100,0)
 ;;
"RTN","PXRMDHLP",101,0)
 ;;AR  All Reminders
"RTN","PXRMDHLP",102,0)
 ;;    View all reminders.
"RTN","PXRMDHLP",103,0)
 ;;
"RTN","PXRMDHLP",104,0)
 ;;CV  Change View
"RTN","PXRMDHLP",105,0)
 ;;    The initial display is of reminders in name order. This may be
"RTN","PXRMDHLP",106,0)
 ;;    changed to a display of:
"RTN","PXRMDHLP",107,0)
 ;;          
"RTN","PXRMDHLP",108,0)
 ;;    reminder dialogs, additional prompts, forced values,
"RTN","PXRMDHLP",109,0)
 ;;    dialog groups, dialog elements, result groups or result elements.
"RTN","PXRMDHLP",110,0)
 ;;
"RTN","PXRMDHLP",111,0)
 ;;LR  Linked Reminders
"RTN","PXRMDHLP",112,0)
 ;;    View only reminders linked to dialogs.
"RTN","PXRMDHLP",113,0)
 ;;
"RTN","PXRMDHLP",114,0)
 ;;RN  Name/Print Name
"RTN","PXRMDHLP",115,0)
 ;;    Toggle reminder name and reminder print name.
"RTN","PXRMDHLP",116,0)
 ;;
"RTN","PXRMDHLP",117,0)
 ;;QU  Quit
"RTN","PXRMDHLP",118,0)
 ;;**End Text**
"RTN","PXRMDHLP",119,0)
 ;
"RTN","PXRMDHLP",120,0)
DTAX ;Help text
"RTN","PXRMDHLP",121,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",122,0)
 ;;
"RTN","PXRMDHLP",123,0)
 ;;#   Select Item
"RTN","PXRMDHLP",124,0)
 ;;    Display, edit or print dialog for this taxonomy.
"RTN","PXRMDHLP",125,0)
 ;;
"RTN","PXRMDHLP",126,0)
 ;;PT  List All
"RTN","PXRMDHLP",127,0)
 ;;    Print a list of all taxonomy dialogs defined in the
"RTN","PXRMDHLP",128,0)
 ;;    current UCI.
"RTN","PXRMDHLP",129,0)
 ;;
"RTN","PXRMDHLP",130,0)
 ;;QU  Quit
"RTN","PXRMDHLP",131,0)
 ;;**End Text**
"RTN","PXRMDHLP",132,0)
 ;
"RTN","PXRMDHLP",133,0)
RESN ;Help text
"RTN","PXRMDHLP",134,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",135,0)
 ;;
"RTN","PXRMDHLP",136,0)
 ;;#   Select Item
"RTN","PXRMDHLP",137,0)
 ;;    Display, edit or print a reminder resolution.
"RTN","PXRMDHLP",138,0)
 ;;
"RTN","PXRMDHLP",139,0)
 ;;AD  Add
"RTN","PXRMDHLP",140,0)
 ;;    Add a new LOCAL reminder resolution.
"RTN","PXRMDHLP",141,0)
 ;;
"RTN","PXRMDHLP",142,0)
 ;;PT  List All
"RTN","PXRMDHLP",143,0)
 ;;    Print a list of all the reminder resolutions defined in the
"RTN","PXRMDHLP",144,0)
 ;;    current UCI.
"RTN","PXRMDHLP",145,0)
 ;;
"RTN","PXRMDHLP",146,0)
 ;;QU  Quit
"RTN","PXRMDHLP",147,0)
 ;;**End Text**
"RTN","PXRMDHLP",148,0)
 ;
"RTN","PXRMDHLP",149,0)
SHFR ;Help text
"RTN","PXRMDHLP",150,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",151,0)
 ;;
"RTN","PXRMDHLP",152,0)
 ;;#   Select Item
"RTN","PXRMDHLP",153,0)
 ;;    Display, edit or print a health factor resolution.
"RTN","PXRMDHLP",154,0)
 ;;
"RTN","PXRMDHLP",155,0)
 ;;AD  Add
"RTN","PXRMDHLP",156,0)
 ;;    Add a new health factor resolution or select a reminder and
"RTN","PXRMDHLP",157,0)
 ;;    add or modify resolution statuses for each health factor finding
"RTN","PXRMDHLP",158,0)
 ;;    on the reminder. 
"RTN","PXRMDHLP",159,0)
 ;;
"RTN","PXRMDHLP",160,0)
 ;;PT  List All
"RTN","PXRMDHLP",161,0)
 ;;    Print a list of all health factor resolutions defined in the
"RTN","PXRMDHLP",162,0)
 ;;    current UCI.
"RTN","PXRMDHLP",163,0)
 ;;
"RTN","PXRMDHLP",164,0)
 ;;QU  Quit
"RTN","PXRMDHLP",165,0)
 ;;**End Text**
"RTN","PXRMDHLP",166,0)
 ;
"RTN","PXRMDHLP",167,0)
FIP ;Help text
"RTN","PXRMDHLP",168,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",169,0)
 ;;
"RTN","PXRMDHLP",170,0)
 ;;#   Select Item
"RTN","PXRMDHLP",171,0)
 ;;    Display, edit or print a finding item parameter.
"RTN","PXRMDHLP",172,0)
 ;;
"RTN","PXRMDHLP",173,0)
 ;;AD  Add
"RTN","PXRMDHLP",174,0)
 ;;    Add a new finding item parameter.
"RTN","PXRMDHLP",175,0)
 ;;
"RTN","PXRMDHLP",176,0)
 ;;PT  List All
"RTN","PXRMDHLP",177,0)
 ;;    Print a list of all finding item parameters defined in the
"RTN","PXRMDHLP",178,0)
 ;;    current UCI.
"RTN","PXRMDHLP",179,0)
 ;;
"RTN","PXRMDHLP",180,0)
 ;;QU  Quit
"RTN","PXRMDHLP",181,0)
 ;;**End Text**
"RTN","PXRMDHLP",182,0)
 ;
"RTN","PXRMDHLP",183,0)
FPAR ;Help text
"RTN","PXRMDHLP",184,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",185,0)
 ;;
"RTN","PXRMDHLP",186,0)
 ;;#   Select Item
"RTN","PXRMDHLP",187,0)
 ;;    Display, edit or print parameters for this finding type.
"RTN","PXRMDHLP",188,0)
 ;;
"RTN","PXRMDHLP",189,0)
 ;;PT  List All
"RTN","PXRMDHLP",190,0)
 ;;    Print a list of all finding type parameters defined in the
"RTN","PXRMDHLP",191,0)
 ;;    current UCI.
"RTN","PXRMDHLP",192,0)
 ;;
"RTN","PXRMDHLP",193,0)
 ;;QU  Quit
"RTN","PXRMDHLP",194,0)
 ;;**End Text**
"RTN","PXRMDHLP",195,0)
 Q
"RTN","PXRMDHLP",196,0)
 ;
"RTN","PXRMDHLP",197,0)
GRCAT ;General Help text
"RTN","PXRMDHLP",198,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",199,0)
 ;;
"RTN","PXRMDHLP",200,0)
 ;;ED  Edit
"RTN","PXRMDHLP",201,0)
 ;;    Edit or delete this reminder category.
"RTN","PXRMDHLP",202,0)
 ;;
"RTN","PXRMDHLP",203,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",204,0)
 ;;    Print details of this reminder category.
"RTN","PXRMDHLP",205,0)
 ;;
"RTN","PXRMDHLP",206,0)
 ;;QU  Quit
"RTN","PXRMDHLP",207,0)
 ;;**End Text**
"RTN","PXRMDHLP",208,0)
 ;
"RTN","PXRMDHLP",209,0)
GDLG ;General Help text
"RTN","PXRMDHLP",210,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",211,0)
 ;;
"RTN","PXRMDHLP",212,0)
 ;;#   Select Sequence
"RTN","PXRMDHLP",213,0)
 ;;    To edit,delete or add a dialog element for this reminder dialog.
"RTN","PXRMDHLP",214,0)
 ;;
"RTN","PXRMDHLP",215,0)
 ;;CO  Copy Dialog
"RTN","PXRMDHLP",216,0)
 ;;    Copy this reminder dialog to a new name.
"RTN","PXRMDHLP",217,0)
 ;;
"RTN","PXRMDHLP",218,0)
 ;;DD  Detailed Display
"RTN","PXRMDHLP",219,0)
 ;;    Display dialog element names and resolution detail for this
"RTN","PXRMDHLP",220,0)
 ;;    reminder dialog.
"RTN","PXRMDHLP",221,0)
 ;;
"RTN","PXRMDHLP",222,0)
 ;;DP  Progress Note Text
"RTN","PXRMDHLP",223,0)
 ;;    Display text that will be entered in the progress note.
"RTN","PXRMDHLP",224,0)
 ;;
"RTN","PXRMDHLP",225,0)
 ;;DT  Dialog Text (default)
"RTN","PXRMDHLP",226,0)
 ;;    Display the dialog text as it should appear in CPRS.
"RTN","PXRMDHLP",227,0)
 ;;
"RTN","PXRMDHLP",228,0)
 ;;ED  Edit/Delete Dialog
"RTN","PXRMDHLP",229,0)
 ;;    Edit or delete this reminder dialog. Allows addition and deletion
"RTN","PXRMDHLP",230,0)
 ;;    of existing dialog elements from this reminder dialog. Allows the
"RTN","PXRMDHLP",231,0)
 ;;    sequence numbers to be changed. Also enable/disable dialog.
"RTN","PXRMDHLP",232,0)
 ;;
"RTN","PXRMDHLP",233,0)
 ;;INQ Inquiry/Print (for Reminder Dialogs only)
"RTN","PXRMDHLP",234,0)
 ;;    Print details of this reminder dialog.
"RTN","PXRMDHLP",235,0)
 ;;
"RTN","PXRMDHLP",236,0)
 ;;RI  Reminder Inquiry (for Reminder Dialogs only)
"RTN","PXRMDHLP",237,0)
 ;;    Display details of the associated reminder.
"RTN","PXRMDHLP",238,0)
 ;;
"RTN","PXRMDHLP",239,0)
 ;;QU  Quit
"RTN","PXRMDHLP",240,0)
 ;;**End Text**
"RTN","PXRMDHLP",241,0)
 ;;
"RTN","PXRMDHLP",242,0)
GDLGH ;General Help text
"RTN","PXRMDHLP",243,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",244,0)
 ;;
"RTN","PXRMDHLP",245,0)
 ;;AD  Autogenerate Dialog
"RTN","PXRMDHLP",246,0)
 ;;    Generate a reminder dialog for the current reminder.
"RTN","PXRMDHLP",247,0)
 ;;
"RTN","PXRMDHLP",248,0)
 ;;LR  Link Reminder
"RTN","PXRMDHLP",249,0)
 ;;    Link the current reminder to a reminder dialog.
"RTN","PXRMDHLP",250,0)
 ;;
"RTN","PXRMDHLP",251,0)
 ;;QU  Quit
"RTN","PXRMDHLP",252,0)
 ;;**End Text**
"RTN","PXRMDHLP",253,0)
 ;;
"RTN","PXRMDHLP",254,0)
GDTAX ;General Help text
"RTN","PXRMDHLP",255,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",256,0)
 ;;
"RTN","PXRMDHLP",257,0)
 ;;ED  Edit
"RTN","PXRMDHLP",258,0)
 ;;    Edit taxonomy dialog fields.
"RTN","PXRMDHLP",259,0)
 ;;
"RTN","PXRMDHLP",260,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",261,0)
 ;;    Print details of dialog for the taxonomy.
"RTN","PXRMDHLP",262,0)
 ;;
"RTN","PXRMDHLP",263,0)
 ;;QU  Quit
"RTN","PXRMDHLP",264,0)
 ;;**End Text**
"RTN","PXRMDHLP",265,0)
 ;
"RTN","PXRMDHLP",266,0)
GRESN ;General Help text
"RTN","PXRMDHLP",267,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",268,0)
 ;;
"RTN","PXRMDHLP",269,0)
 ;;ED  Edit
"RTN","PXRMDHLP",270,0)
 ;;    Edit or delete this resolution status.
"RTN","PXRMDHLP",271,0)
 ;;
"RTN","PXRMDHLP",272,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",273,0)
 ;;    Print details of this resolution status.
"RTN","PXRMDHLP",274,0)
 ;;
"RTN","PXRMDHLP",275,0)
 ;;QU  Quit
"RTN","PXRMDHLP",276,0)
 ;;**End Text**
"RTN","PXRMDHLP",277,0)
 ;
"RTN","PXRMDHLP",278,0)
GSHFR ;General Help text
"RTN","PXRMDHLP",279,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",280,0)
 ;;
"RTN","PXRMDHLP",281,0)
 ;;ED  Edit
"RTN","PXRMDHLP",282,0)
 ;;    Edit or delete the resolution status(s) for this health factor.
"RTN","PXRMDHLP",283,0)
 ;;
"RTN","PXRMDHLP",284,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",285,0)
 ;;    Print details of this health factor's resolution statuses.
"RTN","PXRMDHLP",286,0)
 ;;
"RTN","PXRMDHLP",287,0)
 ;;QU  Quit
"RTN","PXRMDHLP",288,0)
 ;;**End Text**
"RTN","PXRMDHLP",289,0)
 ;
"RTN","PXRMDHLP",290,0)
GFIP ;General Help text
"RTN","PXRMDHLP",291,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",292,0)
 ;;
"RTN","PXRMDHLP",293,0)
 ;;ED  Edit
"RTN","PXRMDHLP",294,0)
 ;;    Edit or delete this finding item parameter.
"RTN","PXRMDHLP",295,0)
 ;;
"RTN","PXRMDHLP",296,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",297,0)
 ;;    Print details of this finding item parameter.
"RTN","PXRMDHLP",298,0)
 ;;
"RTN","PXRMDHLP",299,0)
 ;;QU  Quit
"RTN","PXRMDHLP",300,0)
 ;;**End Text**
"RTN","PXRMDHLP",301,0)
 ;
"RTN","PXRMDHLP",302,0)
GFPAR ;General Help text
"RTN","PXRMDHLP",303,0)
 ;;The following actions are available:
"RTN","PXRMDHLP",304,0)
 ;;
"RTN","PXRMDHLP",305,0)
 ;;#   Select Resolution Status to edit
"RTN","PXRMDHLP",306,0)
 ;;    Disable/Enable the selected resolution status or modify the
"RTN","PXRMDHLP",307,0)
 ;;    prefix and suffix text.
"RTN","PXRMDHLP",308,0)
 ;;
"RTN","PXRMDHLP",309,0)
 ;;INQ Inquiry/Print
"RTN","PXRMDHLP",310,0)
 ;;    Print details of this finding parameter.
"RTN","PXRMDHLP",311,0)
 ;;
"RTN","PXRMDHLP",312,0)
 ;;QU  Quit
"RTN","PXRMDHLP",313,0)
 ;;**End Text**
"RTN","PXRMDHLP",314,0)
 Q
"RTN","PXRMDLG")
0^40^B47159375
"RTN","PXRMDLG",1,0)
PXRMDLG ; SLC/PJH - Reminder Dialog Edit/Inquiry ;10/30/2000
"RTN","PXRMDLG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLG",3,0)
 ;
"RTN","PXRMDLG",4,0)
 ;Labels called from list 'PXRM DIALOG LIST'
"RTN","PXRMDLG",5,0)
 ;
"RTN","PXRMDLG",6,0)
EXIT ;Exit code
"RTN","PXRMDLG",7,0)
 D CLEAN^VALM10
"RTN","PXRMDLG",8,0)
 D FULL^VALM1
"RTN","PXRMDLG",9,0)
 S VALMBCK="Q"
"RTN","PXRMDLG",10,0)
 K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLG",11,0)
 Q
"RTN","PXRMDLG",12,0)
 ;
"RTN","PXRMDLG",13,0)
HDR ; Header code
"RTN","PXRMDLG",14,0)
 S VALMHDR(1)=PXRMHD
"RTN","PXRMDLG",15,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLG",16,0)
 Q
"RTN","PXRMDLG",17,0)
 ;
"RTN","PXRMDLG",18,0)
HELP ;Help code
"RTN","PXRMDLG",19,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG="GDLG"
"RTN","PXRMDLG",20,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMDLG",21,0)
 Q
"RTN","PXRMDLG",22,0)
 ;
"RTN","PXRMDLG",23,0)
INIT ;Init
"RTN","PXRMDLG",24,0)
 S VALMCNT=0
"RTN","PXRMDLG",25,0)
 ;Load details of dialog set
"RTN","PXRMDLG",26,0)
 D BUILD(1)
"RTN","PXRMDLG",27,0)
 Q
"RTN","PXRMDLG",28,0)
 ;
"RTN","PXRMDLG",29,0)
PEXIT ;PXRM DIALOG MENU protocol exit code
"RTN","PXRMDLG",30,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLG",31,0)
 ;Reset after page up or down
"RTN","PXRMDLG",32,0)
 D XQORM
"RTN","PXRMDLG",33,0)
 Q
"RTN","PXRMDLG",34,0)
 ;
"RTN","PXRMDLG",35,0)
 ;Other Subroutines
"RTN","PXRMDLG",36,0)
 ;
"RTN","PXRMDLG",37,0)
 ;Build workfile (protocols PXRM DIALOG VIEW/LIST)
"RTN","PXRMDLG",38,0)
BUILD(VIEW) ;Clear existing file
"RTN","PXRMDLG",39,0)
 S PXRMMODE=VIEW,VALMCNT=0,VALMBG=1,VALMBCK="R" K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLG",40,0)
 ;Headers
"RTN","PXRMDLG",41,0)
 S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLG",42,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" D
"RTN","PXRMDLG",43,0)
 .S DNAM=DNAM_" (DISABLED - "_$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)_")"
"RTN","PXRMDLG",44,0)
 S PXRMHD="DIALOG NAME: "_DNAM
"RTN","PXRMDLG",45,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,4)="R" D
"RTN","PXRMDLG",46,0)
 .S PXRMHD="REMINDER "_PXRMHD
"RTN","PXRMDLG",47,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,4)="G" D
"RTN","PXRMDLG",48,0)
 .S PXRMHD="DIALOG GROUP NAME: "_DNAM
"RTN","PXRMDLG",49,0)
 D HDR
"RTN","PXRMDLG",50,0)
 ;Reminder Inquiry
"RTN","PXRMDLG",51,0)
 I VIEW=3 D REMD S PXRMOPT=0 D XQORM Q
"RTN","PXRMDLG",52,0)
 ;
"RTN","PXRMDLG",53,0)
 N DATA,DGRP,DHED,FGLOB,FIEN,FITEM,FNAME,FNUM,FTYP,RESULT,RESNM
"RTN","PXRMDLG",54,0)
 N OIEN,ONAME,ONUM,PDIS,PIEN,PNAME,PTXT,PTYP,RIEN,RNAME,SEQ,SUB
"RTN","PXRMDLG",55,0)
 ;Build list of finding items
"RTN","PXRMDLG",56,0)
 N DEF,DEF1,DEF2 D DEF^PXRMRUTL(.DEF,.DEF1,.DEF2)
"RTN","PXRMDLG",57,0)
 ;Display group text fields
"RTN","PXRMDLG",58,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,4)="G",VIEW D
"RTN","PXRMDLG",59,0)
 .D GROUP^PXRMDLG1(PXRMDIEN,VIEW)
"RTN","PXRMDLG",60,0)
 ;Display group findings and prompts
"RTN","PXRMDLG",61,0)
 I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,4)="G",'VIEW D
"RTN","PXRMDLG",62,0)
 .D GROUP^PXRMDLG2(PXRMDIEN)
"RTN","PXRMDLG",63,0)
 ;
"RTN","PXRMDLG",64,0)
 S SEQ=0
"RTN","PXRMDLG",65,0)
 ;Get each sequence number
"RTN","PXRMDLG",66,0)
 F  S SEQ=$O(^PXRMD(801.41,PXRMDIEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG",67,0)
 .;Determine subscript
"RTN","PXRMDLG",68,0)
 .S SUB=$O(^PXRMD(801.41,PXRMDIEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG",69,0)
 .;Get ien of prompt/component
"RTN","PXRMDLG",70,0)
 .S PIEN=$P($G(^PXRMD(801.41,PXRMDIEN,10,SUB,0)),U,2) Q:'PIEN
"RTN","PXRMDLG",71,0)
 .;Ignore prompts and forced values
"RTN","PXRMDLG",72,0)
 .I "PF"[$P($G(^PXRMD(801.41,PIEN,0)),U,4) Q
"RTN","PXRMDLG",73,0)
 .;Check if this is a dialog group
"RTN","PXRMDLG",74,0)
 .S DGRP=0 I $P($G(^PXRMD(801.41,PIEN,0)),U,4)="G" S DGRP=1
"RTN","PXRMDLG",75,0)
 .S DHED=$S(DGRP:"Dialog elements:    ",1:"Additional prompts: ")
"RTN","PXRMDLG",76,0)
 .;Save seq/description/disabled
"RTN","PXRMDLG",77,0)
 .I 'VIEW D
"RTN","PXRMDLG",78,0)
 ..D DETAIL^PXRMDLG2(PIEN)
"RTN","PXRMDLG",79,0)
 ..;Create headings
"RTN","PXRMDLG",80,0)
 ..D CHGCAP^VALM("HEADER1","Sequence")
"RTN","PXRMDLG",81,0)
 ..D CHGCAP^VALM("HEADER2","Dialog Details")
"RTN","PXRMDLG",82,0)
 ..D CHGCAP^VALM("HEADER3","Disabled")
"RTN","PXRMDLG",83,0)
 ..;If DN requested build prompt/additional prompt details
"RTN","PXRMDLG",84,0)
 .I VIEW D 
"RTN","PXRMDLG",85,0)
 ..D VIEW^PXRMDLG1(PIEN,VIEW)
"RTN","PXRMDLG",86,0)
 ..;Create headings
"RTN","PXRMDLG",87,0)
 ..D CHGCAP^VALM("HEADER1","Sequence")
"RTN","PXRMDLG",88,0)
 ..I VIEW=1 D CHGCAP^VALM("HEADER2","Dialog Text")
"RTN","PXRMDLG",89,0)
 ..I VIEW=4 D CHGCAP^VALM("HEADER2","Progress Note Text")
"RTN","PXRMDLG",90,0)
 ..D CHGCAP^VALM("HEADER3"," ")
"RTN","PXRMDLG",91,0)
 .;Final linefeed
"RTN","PXRMDLG",92,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG",93,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG",94,0)
 ;Allow for sequence number being greater than VALMCNT
"RTN","PXRMDLG",95,0)
 I $O(^TMP("PXRMDLG",$J,"IDX",""),-1)>VALMCNT D
"RTN","PXRMDLG",96,0)
 .N IC S IC=VALMCNT
"RTN","PXRMDLG",97,0)
 .S VALMCNT=$O(^TMP("PXRMDLG",$J,"IDX",""),-1)
"RTN","PXRMDLG",98,0)
 .F IC=IC+1:1:VALMCNT S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG",99,0)
 ;If no lines default to 15
"RTN","PXRMDLG",100,0)
 I VALMCNT<15 D  S VALMCNT=15
"RTN","PXRMDLG",101,0)
 .N IC F IC=VALMCNT+1:1:15 S ^TMP("PXRMDLG",$J,IC,0)=$J("",79)
"RTN","PXRMDLG",102,0)
 S ^TMP("PXRMDLG",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDLG",103,0)
 ;Menu reset
"RTN","PXRMDLG",104,0)
 S PXRMOPT=1 D XQORM
"RTN","PXRMDLG",105,0)
 Q
"RTN","PXRMDLG",106,0)
 ;
"RTN","PXRMDLG",107,0)
 ;Find description for dialog type
"RTN","PXRMDLG",108,0)
LIT(INP) ;
"RTN","PXRMDLG",109,0)
 Q:INP="G" "Dialog group: "
"RTN","PXRMDLG",110,0)
 Q:INP="F" "Forced value: "
"RTN","PXRMDLG",111,0)
 Q:INP="P" "Prompt: "
"RTN","PXRMDLG",112,0)
 Q:INP="E" "Dialog element: "
"RTN","PXRMDLG",113,0)
 Q "???"
"RTN","PXRMDLG",114,0)
 ;
"RTN","PXRMDLG",115,0)
 ;Finding description
"RTN","PXRMDLG",116,0)
DESC(FIEN) ;
"RTN","PXRMDLG",117,0)
 ;Determine finding type
"RTN","PXRMDLG",118,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG",119,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG",120,0)
 ;Diagnosis POV
"RTN","PXRMDLG",121,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG",122,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",123,0)
 .S FNAME=$P($G(@FGLOB),U,3)_" ["_FITEM_"]"
"RTN","PXRMDLG",124,0)
 ;Procedure CPT
"RTN","PXRMDLG",125,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG",126,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",127,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG",128,0)
 ;Quick order
"RTN","PXRMDLG",129,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG",130,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",131,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG",132,0)
 ;Short name for finding type
"RTN","PXRMDLG",133,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG",134,0)
 S FNUM=" ["_FTYP_"("_FITEM_")]"
"RTN","PXRMDLG",135,0)
 ;Long name
"RTN","PXRMDLG",136,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG",137,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG",138,0)
 S FNAME=$P($G(@FGLOB),U,1)
"RTN","PXRMDLG",139,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)
"RTN","PXRMDLG",140,0)
 I FNAME]"" S FNAME=FNAME_FNUM Q
"RTN","PXRMDLG",141,0)
 S FNAME=FITEM
"RTN","PXRMDLG",142,0)
 Q
"RTN","PXRMDLG",143,0)
 ;
"RTN","PXRMDLG",144,0)
 ;Reminder Details
"RTN","PXRMDLG",145,0)
REMD N ARRAY,SUB
"RTN","PXRMDLG",146,0)
 ;Change listman headings
"RTN","PXRMDLG",147,0)
 D CHGCAP^VALM("HEADER1","Reminder Inquiry")
"RTN","PXRMDLG",148,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMDLG",149,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMDLG",150,0)
 ;Check if dialog is linked to a reminder
"RTN","PXRMDLG",151,0)
 I 'PXRMITEM D  Q
"RTN","PXRMDLG",152,0)
 .S ^TMP("PXRMDLG",$J,2,0)=" *This dialog is not linked to a reminder*"
"RTN","PXRMDLG",153,0)
 ;Build array using print template
"RTN","PXRMDLG",154,0)
 D REMVAR^PXRMINQ(.ARRAY,PXRMITEM)
"RTN","PXRMDLG",155,0)
 ;Copy into Listman global
"RTN","PXRMDLG",156,0)
 S SUB=0
"RTN","PXRMDLG",157,0)
 F  S SUB=$O(ARRAY(SUB)) Q:'SUB  D
"RTN","PXRMDLG",158,0)
 .S VALMCNT=SUB
"RTN","PXRMDLG",159,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=ARRAY(VALMCNT)
"RTN","PXRMDLG",160,0)
 Q
"RTN","PXRMDLG",161,0)
 ;
"RTN","PXRMDLG",162,0)
SEL ;PXRM DIALOG SELECTION ITEM validation
"RTN","PXRMDLG",163,0)
 N ERR,IEN,SEL
"RTN","PXRMDLG",164,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMDLG",165,0)
 ;Invalid selection
"RTN","PXRMDLG",166,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMDLG",167,0)
 .N ANS,DTOUT,DUOUT,Y
"RTN","PXRMDLG",168,0)
 .W IORESET S VALMBCK="R"
"RTN","PXRMDLG",169,0)
 .D XASK^PXRMDLG(.ANS) Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLG",170,0)
 .I ANS'="Y" W $C(7),!,SEL_" is not an existing sequence number." H 2 Q
"RTN","PXRMDLG",171,0)
 .D ESEL^PXRMDEDT(PXRMDIEN,SEL)
"RTN","PXRMDLG",172,0)
 ;Valid selection
"RTN","PXRMDLG",173,0)
 S IEN=$O(@VALMAR@("IDX",SEL,"")) Q:'IEN
"RTN","PXRMDLG",174,0)
 ;Copy/Delete/Edit dialog element
"RTN","PXRMDLG",175,0)
 D IND^PXRMDEDT(IEN)
"RTN","PXRMDLG",176,0)
 Q
"RTN","PXRMDLG",177,0)
 ;
"RTN","PXRMDLG",178,0)
XQORM I PXRMOPT=1 D
"RTN","PXRMDLG",179,0)
 .N COUNT
"RTN","PXRMDLG",180,0)
 .;Allow sequence numbers 1-99 (except when auto generate creates more)
"RTN","PXRMDLG",181,0)
 .S COUNT=99 I VALMCNT>99 S COUNT=VALMCNT+10
"RTN","PXRMDLG",182,0)
 .S XQORM("#")=$O(^ORD(101,"B","PXRM DIALOG SELECTION ITEM",0))
"RTN","PXRMDLG",183,0)
 .S XQORM("#")=XQORM("#")_U_"1:"_COUNT
"RTN","PXRMDLG",184,0)
 .S XQORM("A")="Select Sequence: "
"RTN","PXRMDLG",185,0)
 I PXRMGTYP="DLGE" D
"RTN","PXRMDLG",186,0)
 .N FMENU
"RTN","PXRMDLG",187,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG GROUP MENU",0))_";ORD(101,"
"RTN","PXRMDLG",188,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMDLG",189,0)
 Q
"RTN","PXRMDLG",190,0)
 ;
"RTN","PXRMDLG",191,0)
 ;Add sequence number
"RTN","PXRMDLG",192,0)
 ;-------------------
"RTN","PXRMDLG",193,0)
XASK(YESNO) ;
"RTN","PXRMDLG",194,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLG",195,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLG",196,0)
 S DIR(0)="YA0"
"RTN","PXRMDLG",197,0)
 S DIR("A")="ARE YOU ADDING "_SEL_" AS A NEW SEQUENCE NUMBER: "
"RTN","PXRMDLG",198,0)
 S DIR("B")="N"
"RTN","PXRMDLG",199,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLG",200,0)
 S DIR("??")=U_"D XHLP^PXRMDLG(1)"
"RTN","PXRMDLG",201,0)
 D ^DIR K DIR
"RTN","PXRMDLG",202,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLG",203,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLG",204,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLG",205,0)
 Q
"RTN","PXRMDLG",206,0)
 ;
"RTN","PXRMDLG",207,0)
 ;
"RTN","PXRMDLG",208,0)
 ;General help text routine.
"RTN","PXRMDLG",209,0)
 ;--------------------------
"RTN","PXRMDLG",210,0)
XHLP(CALL) ;
"RTN","PXRMDLG",211,0)
 N HTEXT
"RTN","PXRMDLG",212,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLG",213,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLG",214,0)
 ;
"RTN","PXRMDLG",215,0)
 I CALL=1 D
"RTN","PXRMDLG",216,0)
 .S HTEXT(1)="Enter Yes to if you are adding a new sequence number or"
"RTN","PXRMDLG",217,0)
 .S HTEXT(2)="dialog element to this reminder dialog."
"RTN","PXRMDLG",218,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLG",219,0)
 S IC=""
"RTN","PXRMDLG",220,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLG",221,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLG",222,0)
 . D ^DIWP
"RTN","PXRMDLG",223,0)
 W !
"RTN","PXRMDLG",224,0)
 S IC=0
"RTN","PXRMDLG",225,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLG",226,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLG",227,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLG",228,0)
 W !
"RTN","PXRMDLG",229,0)
 Q
"RTN","PXRMDLG1")
0^57^B73000626
"RTN","PXRMDLG1",1,0)
PXRMDLG1 ; SLC/PJH - Reminder Dialog Edit/Inquiry (overflow) ;10/30/2000
"RTN","PXRMDLG1",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLG1",3,0)
 ;
"RTN","PXRMDLG1",4,0)
 ;Get selectable codes for a taxonomy
"RTN","PXRMDLG1",5,0)
 ;-----------------------------------
"RTN","PXRMDLG1",6,0)
CODES(FILE,TIEN) ;
"RTN","PXRMDLG1",7,0)
 N CODES,CODE,DESC,DTEXT,SUB,TAB,TEXT
"RTN","PXRMDLG1",8,0)
 ;Display text
"RTN","PXRMDLG1",9,0)
 S TEXT="Selectable codes: ",TAB=18
"RTN","PXRMDLG1",10,0)
 ;Get array
"RTN","PXRMDLG1",11,0)
 D CODES^PXRMDLLA(FILE,TIEN,.CODES)
"RTN","PXRMDLG1",12,0)
 ;Move results into workfile
"RTN","PXRMDLG1",13,0)
 S SUB=""
"RTN","PXRMDLG1",14,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMDLG1",15,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMDLG1",16,0)
 .S DTEXT=CODE_$J("",7-$L(CODE))_DESC
"RTN","PXRMDLG1",17,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",18,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMDLG1",19,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",20,0)
 Q
"RTN","PXRMDLG1",21,0)
 ;
"RTN","PXRMDLG1",22,0)
 ;Either dialog text or P/N text
"RTN","PXRMDLG1",23,0)
 ;------------------------------
"RTN","PXRMDLG1",24,0)
TSUB(IEN,VIEW) ;
"RTN","PXRMDLG1",25,0)
 ;Dialog View uses Dialog text
"RTN","PXRMDLG1",26,0)
 I VIEW=1 Q 25
"RTN","PXRMDLG1",27,0)
 ;P/N View uses P/N TEXT if defined
"RTN","PXRMDLG1",28,0)
 I $D(^PXRMD(801.41,IEN,35)) Q 35
"RTN","PXRMDLG1",29,0)
 ;Otherwise Dialog Text
"RTN","PXRMDLG1",30,0)
 Q 25
"RTN","PXRMDLG1",31,0)
 ;
"RTN","PXRMDLG1",32,0)
 ;Progress note text (DP)
"RTN","PXRMDLG1",33,0)
 ;-----------------------
"RTN","PXRMDLG1",34,0)
VIEW(IEN,VIEW) ;
"RTN","PXRMDLG1",35,0)
 N DCAP,TSUB
"RTN","PXRMDLG1",36,0)
 ;Dialog Group process
"RTN","PXRMDLG1",37,0)
 I DGRP D  Q
"RTN","PXRMDLG1",38,0)
 .N DATA,DGBEG,DGIEN,DGSEQ,DGSUB
"RTN","PXRMDLG1",39,0)
 .;Update index
"RTN","PXRMDLG1",40,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",41,0)
 .;Get GROUP text
"RTN","PXRMDLG1",42,0)
 .S DGSUB=0,DGBEG=$J(SEQ,3),TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",43,0)
 .F  S DGSUB=$O(^PXRMD(801.41,IEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",44,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",45,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",46,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT,DGBEG=$J("",3)
"RTN","PXRMDLG1",47,0)
 .;Get additional prompts
"RTN","PXRMDLG1",48,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",49,0)
 .;Group caption text
"RTN","PXRMDLG1",50,0)
 .S DTXT=$P($G(^PXRMD(801.41,IEN,0)),U,5),DCAP=" [group caption]"
"RTN","PXRMDLG1",51,0)
 .I DTXT="" S DCAP="[no caption for this group]"
"RTN","PXRMDLG1",52,0)
 .;Text of caption
"RTN","PXRMDLG1",53,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",54,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",12)_DTXT_DCAP,DGBEG=$J("",3)
"RTN","PXRMDLG1",55,0)
 .;Get dialog group sub-elements
"RTN","PXRMDLG1",56,0)
 .S SUB=0
"RTN","PXRMDLG1",57,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,10,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",58,0)
 ..S DGIEN=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DGIEN
"RTN","PXRMDLG1",59,0)
 ..;Ignore forced values and prompts
"RTN","PXRMDLG1",60,0)
 ..Q:"PF"[$P($G(^PXRMD(801.41,DGIEN,0)),U,4)
"RTN","PXRMDLG1",61,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",62,0)
 ..S DGBEG=$J(SEQ,3)_"."_DGSEQ
"RTN","PXRMDLG1",63,0)
 ..;Get Resolution/Finding details
"RTN","PXRMDLG1",64,0)
 ..S FIEN=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLG1",65,0)
 ..;If taxonomy generate 
"RTN","PXRMDLG1",66,0)
 ..I $P(FIEN,";",2)="PXD(811.2," D TAX(FIEN,DGBEG,DGIEN) Q
"RTN","PXRMDLG1",67,0)
 ..;Otherwise get text from dialog element
"RTN","PXRMDLG1",68,0)
 ..S DGSUB=0,TSUB=$$TSUB(DGIEN,VIEW)
"RTN","PXRMDLG1",69,0)
 ..F  S DGSUB=$O(^PXRMD(801.41,DGIEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",70,0)
 ...S DTXT=$G(^PXRMD(801.41,DGIEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",71,0)
 ...S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",72,0)
 ...S ^TMP("PXRMDLG",$J,VALMCNT,0)=DGBEG_$J("",10)_DTXT,DGBEG=$J("",5)
"RTN","PXRMDLG1",73,0)
 ...;Get additional prompts
"RTN","PXRMDLG1",74,0)
 ..D PROMPT(DGIEN,0,"","")
"RTN","PXRMDLG1",75,0)
 ..;Final linefeed
"RTN","PXRMDLG1",76,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",77,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",78,0)
 ;
"RTN","PXRMDLG1",79,0)
 N TAX,SUB
"RTN","PXRMDLG1",80,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG1",81,0)
 S DATA=$G(^PXRMD(801.41,IEN,1)),FIEN=$P(DATA,U,5),TAX=0
"RTN","PXRMDLG1",82,0)
 ;Mental Health
"RTN","PXRMDLG1",83,0)
 I $P(FIEN,";",2)="YTT(601," D MENTAL(FIEN) Q
"RTN","PXRMDLG1",84,0)
 ;Check if taxonomy
"RTN","PXRMDLG1",85,0)
 I $P(FIEN,";",2)="PXD(811.2," S TAX=1
"RTN","PXRMDLG1",86,0)
 ;If a taxonomy use the dialog text from taxonomy file
"RTN","PXRMDLG1",87,0)
 I TAX D TAX(FIEN,SEQ,IEN) Q
"RTN","PXRMDLG1",88,0)
 ;If not a taxonomy use dialog file
"RTN","PXRMDLG1",89,0)
 I 'TAX D  Q
"RTN","PXRMDLG1",90,0)
 .S TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",91,0)
 .S DTXT=$G(^PXRMD(801.41,IEN,TSUB,1,0))
"RTN","PXRMDLG1",92,0)
 .;Text of the first prompt
"RTN","PXRMDLG1",93,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",94,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_DTXT
"RTN","PXRMDLG1",95,0)
 .S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",96,0)
 .;Text or subsequent lines
"RTN","PXRMDLG1",97,0)
 .S SUB=1
"RTN","PXRMDLG1",98,0)
 .F  S SUB=$O(^PXRMD(801.41,IEN,TSUB,SUB)) Q:'SUB  D
"RTN","PXRMDLG1",99,0)
 ..S DTXT=$G(^PXRMD(801.41,IEN,TSUB,SUB,0))
"RTN","PXRMDLG1",100,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",101,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_DTXT
"RTN","PXRMDLG1",102,0)
 .;Get additional prompts
"RTN","PXRMDLG1",103,0)
 .D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",104,0)
 ;
"RTN","PXRMDLG1",105,0)
 Q
"RTN","PXRMDLG1",106,0)
 ;
"RTN","PXRMDLG1",107,0)
 ;additional prompts in 801.45
"RTN","PXRMDLG1",108,0)
 ;----------------------------
"RTN","PXRMDLG1",109,0)
FPROMPT(FNODE,RSUB,CNT,ARRAY) ;
"RTN","PXRMDLG1",110,0)
 ;Get all additional fields for this resolution type
"RTN","PXRMDLG1",111,0)
 S ASUB=0,ACNT=0
"RTN","PXRMDLG1",112,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLG1",113,0)
 .S DNODE=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DNODE=""
"RTN","PXRMDLG1",114,0)
 .;Ignore if disabled
"RTN","PXRMDLG1",115,0)
 .I $P(DNODE,U,3)=1 Q
"RTN","PXRMDLG1",116,0)
 .S DNODE=$P(DNODE,U) Q:DNODE=""
"RTN","PXRMDLG1",117,0)
 .S ATXT=$P($G(^PXRMD(801.41,DNODE,0)),U) Q:ATXT=""
"RTN","PXRMDLG1",118,0)
 .;S ATXT=$TR(ATXT,UPPER,LOWER)
"RTN","PXRMDLG1",119,0)
 .S ACNT=ACNT+1
"RTN","PXRMDLG1",120,0)
 .S ARRAY(CNT,ACNT)=DNODE
"RTN","PXRMDLG1",121,0)
 Q
"RTN","PXRMDLG1",122,0)
 ;
"RTN","PXRMDLG1",123,0)
 ;Group text and caption
"RTN","PXRMDLG1",124,0)
 ;----------------------
"RTN","PXRMDLG1",125,0)
GROUP(IEN,VIEW) ;
"RTN","PXRMDLG1",126,0)
 N DDATA,DGIEN,DGSUB,DTXT
"RTN","PXRMDLG1",127,0)
 ;Get GROUP text
"RTN","PXRMDLG1",128,0)
 S DGSUB=0,TSUB=$$TSUB(IEN,VIEW)
"RTN","PXRMDLG1",129,0)
 F  S DGSUB=$O(^PXRMD(801.41,IEN,TSUB,DGSUB)) Q:'DGSUB  D
"RTN","PXRMDLG1",130,0)
 .S DTXT=$G(^PXRMD(801.41,IEN,TSUB,DGSUB,0))
"RTN","PXRMDLG1",131,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",132,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_DTXT
"RTN","PXRMDLG1",133,0)
 ;Group caption text
"RTN","PXRMDLG1",134,0)
 S DDATA=$G(^PXRMD(801.41,IEN,0))
"RTN","PXRMDLG1",135,0)
 S DTXT=$P(DDATA,U,5),DCAP=" [group caption]"
"RTN","PXRMDLG1",136,0)
 I DTXT="" S DCAP="[no caption for this group]"
"RTN","PXRMDLG1",137,0)
 ;Text of caption
"RTN","PXRMDLG1",138,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",139,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_DTXT_DCAP
"RTN","PXRMDLG1",140,0)
 ;Get additional group prompts
"RTN","PXRMDLG1",141,0)
 D PROMPT(IEN,0,"","")
"RTN","PXRMDLG1",142,0)
 ;Other group fields
"RTN","PXRMDLG1",143,0)
 N DBOX,DSUPP,DSHOW,DMULT
"RTN","PXRMDLG1",144,0)
 S DBOX=$S($P(DDATA,U,6)="Y":"BOX",1:"NO BOX")
"RTN","PXRMDLG1",145,0)
 S DSUPP=$S($P(DDATA,U,11):"SUPPRESS",1:"NO SUPPRESS")
"RTN","PXRMDLG1",146,0)
 S DSHOW=$S($P(DDATA,U,10):"HIDE",1:"SHOW")
"RTN","PXRMDLG1",147,0)
 S DMULT=$P(DDATA,U,9)
"RTN","PXRMDLG1",148,0)
 S DMULT=$S(DMULT=1:"ONE ONLY",DMULT=2:"ONE OR MORE",1:"NO SELECTION")
"RTN","PXRMDLG1",149,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",150,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",12)_"["_DBOX_", "_DSUPP_", "_DSHOW_", "_DMULT_"]"
"RTN","PXRMDLG1",151,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",152,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",153,0)
 Q
"RTN","PXRMDLG1",154,0)
 ;
"RTN","PXRMDLG1",155,0)
 ;Mental Healt Instrument
"RTN","PXRMDLG1",156,0)
 ;-----------------------
"RTN","PXRMDLG1",157,0)
MENTAL(RESN) ;
"RTN","PXRMDLG1",158,0)
 N ARRAY,CNT,SUB,TXT,TYP,YT,YIEN,YNAM,YSEQ
"RTN","PXRMDLG1",159,0)
 S YIEN=$P(RESN,";") Q:'YIEN
"RTN","PXRMDLG1",160,0)
 S YNAM=$P($G(^YTT(601,YIEN,0)),U) Q:YNAM=""
"RTN","PXRMDLG1",161,0)
 S YT("CODE")=YNAM
"RTN","PXRMDLG1",162,0)
 ;Get test details
"RTN","PXRMDLG1",163,0)
 D SHOWALL^YTAPI3(.ARRAY,.YT)
"RTN","PXRMDLG1",164,0)
 ;Quit if invalid test
"RTN","PXRMDLG1",165,0)
 I ARRAY(1)["[ERROR]" Q
"RTN","PXRMDLG1",166,0)
 ;Get Name
"RTN","PXRMDLG1",167,0)
 S TXT=$G(ARRAY(2)),TXT=$P(TXT,U)_" : "_$P(TXT,U,2)
"RTN","PXRMDLG1",168,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",169,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J(SEQ,3)_$J("",12)_TXT
"RTN","PXRMDLG1",170,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,IEN)=""
"RTN","PXRMDLG1",171,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",172,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",173,0)
 ;Get caption
"RTN","PXRMDLG1",174,0)
 S SUB=0
"RTN","PXRMDLG1",175,0)
 F  S SUB=$O(ARRAY(1,"I",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",176,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",177,0)
 .S TXT=$J("",15)_ARRAY(1,"I",SUB)
"RTN","PXRMDLG1",178,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",179,0)
 ;
"RTN","PXRMDLG1",180,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",181,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",182,0)
 S CNT=0
"RTN","PXRMDLG1",183,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",184,0)
 .S YSEQ=$J(SEQ,3)_"."_CNT,SUB=0
"RTN","PXRMDLG1",185,0)
 .;Get question
"RTN","PXRMDLG1",186,0)
 .F  S SUB=$O(ARRAY(CNT,"T",SUB)) Q:'SUB  D
"RTN","PXRMDLG1",187,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",188,0)
 ..S TXT=YSEQ_$J("",15-$L(YSEQ))_ARRAY(CNT,"T",SUB),YSEQ=""
"RTN","PXRMDLG1",189,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLG1",190,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",191,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",192,0)
 Q
"RTN","PXRMDLG1",193,0)
 ;
"RTN","PXRMDLG1",194,0)
 ;additional prompts in the dialog file
"RTN","PXRMDLG1",195,0)
 ;-------------------------------------
"RTN","PXRMDLG1",196,0)
PROMPT(IEN,TAB,TEXT,DGRP) ;
"RTN","PXRMDLG1",197,0)
 N DATA,DDIS,DGSEQ,DSUB,DTITLE,DTXT,DTYP,SEQ,SUB
"RTN","PXRMDLG1",198,0)
 S SEQ=0
"RTN","PXRMDLG1",199,0)
 F  S SEQ=$O(^PXRMD(801.41,IEN,10,"B",SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",200,0)
 .S SUB=$O(^PXRMD(801.41,IEN,10,"B",SEQ,"")) Q:'SUB
"RTN","PXRMDLG1",201,0)
 .S DSUB=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,2) Q:'DSUB
"RTN","PXRMDLG1",202,0)
 .S DATA=$G(^PXRMD(801.41,DSUB,0)) Q:DATA=""
"RTN","PXRMDLG1",203,0)
 .S DNAME=$P(DATA,U),DDIS=$P(DATA,U,3),DTYP=$P(DATA,U,4)
"RTN","PXRMDLG1",204,0)
 .I VIEW,('DGRP),(DTYP'="P") Q
"RTN","PXRMDLG1",205,0)
 .I ('VIEW),('DGRP),("FP"'[DTYP) Q
"RTN","PXRMDLG1",206,0)
 .S:VIEW DDIS=""
"RTN","PXRMDLG1",207,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",208,0)
 .I DGRP D
"RTN","PXRMDLG1",209,0)
 ..S DGSEQ=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U)
"RTN","PXRMDLG1",210,0)
 ..S DNAME=DGSEQ_$J("",3-$L(DGSEQ))_DNAME
"RTN","PXRMDLG1",211,0)
 .I TAB=0,DTYP="P" D
"RTN","PXRMDLG1",212,0)
 ..;Override prompt caption
"RTN","PXRMDLG1",213,0)
 ..S DTITLE=$P($G(^PXRMD(801.41,IEN,10,SUB,0)),U,6)
"RTN","PXRMDLG1",214,0)
 ..I DTITLE="" S DTITLE=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",215,0)
 ..S DNAME=$J("",3)_DTITLE
"RTN","PXRMDLG1",216,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",217,0)
 .S DNAME=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",218,0)
 .S:DDIS]"" DNAME=DNAME_$J("",72-$L(DNAME))_DDIS
"RTN","PXRMDLG1",219,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",220,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=DNAME
"RTN","PXRMDLG1",221,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",222,0)
 Q
"RTN","PXRMDLG1",223,0)
 ;
"RTN","PXRMDLG1",224,0)
 ;
"RTN","PXRMDLG1",225,0)
 ;Taxonomy Questions
"RTN","PXRMDLG1",226,0)
 ;------------------
"RTN","PXRMDLG1",227,0)
TAX(FIEN,SEQ,DIEN) ;
"RTN","PXRMDLG1",228,0)
 N ARRAY,CNT,TIEN,TSEQ
"RTN","PXRMDLG1",229,0)
 S TIEN=$P(FIEN,";") Q:TIEN=""
"RTN","PXRMDLG1",230,0)
 ;Get associated codes
"RTN","PXRMDLG1",231,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMDLG1",232,0)
 ;Taxonomy header
"RTN","PXRMDLG1",233,0)
 S TSEQ=SEQ I $L(SEQ)<3 S TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMDLG1",234,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",235,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMDLG1",236,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,DIEN)=""
"RTN","PXRMDLG1",237,0)
 ;Dialog and Procedure entries
"RTN","PXRMDLG1",238,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMDLG1",239,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMDLG1",240,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",241,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMDLG1",242,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMDLG1",243,0)
 .;Get additional prompts (from finding parameter file)
"RTN","PXRMDLG1",244,0)
 .D TPROMPT(ARRAY(CNT),0,"")
"RTN","PXRMDLG1",245,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",246,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG1",247,0)
 Q
"RTN","PXRMDLG1",248,0)
 ;
"RTN","PXRMDLG1",249,0)
 ;additional prompts for a taxonomy
"RTN","PXRMDLG1",250,0)
 ;---------------------------------
"RTN","PXRMDLG1",251,0)
TPROMPT(DATA,TAB,TEXT) ;
"RTN","PXRMDLG1",252,0)
 N FNODE,FTYP,RSUB,SEQ,DSUB,DTXT,DTYP
"RTN","PXRMDLG1",253,0)
 ;Finding type
"RTN","PXRMDLG1",254,0)
 S FTYP=$P(DATA,U,4) Q:FTYP=""
"RTN","PXRMDLG1",255,0)
 ;Get parameter file node for this finding type
"RTN","PXRMDLG1",256,0)
 S FNODE=$O(^PXRMD(801.45,"B",FTYP,"")) Q:FNODE=""
"RTN","PXRMDLG1",257,0)
 ;Resolution type
"RTN","PXRMDLG1",258,0)
 S RSUB=$P(DATA,U,3) Q:'RSUB
"RTN","PXRMDLG1",259,0)
 ;Get details from  parameter file 
"RTN","PXRMDLG1",260,0)
 D FPROMPT(FNODE,RSUB,CNT,.ARRAY)
"RTN","PXRMDLG1",261,0)
 S SEQ=0
"RTN","PXRMDLG1",262,0)
 F  S SEQ=$O(ARRAY(CNT,SEQ)) Q:'SEQ  D
"RTN","PXRMDLG1",263,0)
 .S DSUB=ARRAY(CNT,SEQ) Q:'DSUB
"RTN","PXRMDLG1",264,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLG1",265,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLG1",266,0)
 .I DTYP="F" S DNAME=DNAME_" (forced value)"
"RTN","PXRMDLG1",267,0)
 .I TAB=0,DTYP="F" S DNAME=$J("",3)_DNAME
"RTN","PXRMDLG1",268,0)
 .I TAB=0,DTYP="P" S DNAME=$J("",3)_$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLG1",269,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG1",270,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DNAME
"RTN","PXRMDLG1",271,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMDLG1",272,0)
 Q
"RTN","PXRMDLG2")
0^58^B26989419
"RTN","PXRMDLG2",1,0)
PXRMDLG2 ; SLC/PJH - Reminder Dialog Edit/Inquiry ;10/30/2000
"RTN","PXRMDLG2",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLG2",3,0)
 ;
"RTN","PXRMDLG2",4,0)
 ;Find description for dialog type
"RTN","PXRMDLG2",5,0)
LIT(INP) ;
"RTN","PXRMDLG2",6,0)
 Q:INP="G" "Dialog group: "
"RTN","PXRMDLG2",7,0)
 Q:INP="F" "Forced value: "
"RTN","PXRMDLG2",8,0)
 Q:INP="P" "Prompt: "
"RTN","PXRMDLG2",9,0)
 Q:INP="E" "Dialog element: "
"RTN","PXRMDLG2",10,0)
 Q "???"
"RTN","PXRMDLG2",11,0)
 ;
"RTN","PXRMDLG2",12,0)
 ;Additional Findings
"RTN","PXRMDLG2",13,0)
ADD(DIEN) ;
"RTN","PXRMDLG2",14,0)
 N FIND,FSUB,FTYP,FNAME,FNUM
"RTN","PXRMDLG2",15,0)
 S FSUB=0
"RTN","PXRMDLG2",16,0)
 F  S FSUB=$O(^PXRMD(801.41,DIEN,3,FSUB)) Q:'FSUB  D
"RTN","PXRMDLG2",17,0)
 .S FIND=$P($G(^PXRMD(801.41,DIEN,3,FSUB,0)),U) Q:FIND=""
"RTN","PXRMDLG2",18,0)
 .S FNAME="" D DESC(FIND) Q:FNAME=""
"RTN","PXRMDLG2",19,0)
 .S FNAME="Additional Finding: "_FNAME
"RTN","PXRMDLG2",20,0)
 .;Save additional finding name
"RTN","PXRMDLG2",21,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",22,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FNAME
"RTN","PXRMDLG2",23,0)
 Q
"RTN","PXRMDLG2",24,0)
 ;Finding description
"RTN","PXRMDLG2",25,0)
DESC(FIEN) ;
"RTN","PXRMDLG2",26,0)
 ;Determine finding type
"RTN","PXRMDLG2",27,0)
 S FGLOB=$P(FIEN,";",2) Q:FGLOB=""
"RTN","PXRMDLG2",28,0)
 S FITEM=$P(FIEN,";") Q:FITEM=""
"RTN","PXRMDLG2",29,0)
 ;Diagnosis POV
"RTN","PXRMDLG2",30,0)
 I FGLOB["ICD9" D  Q
"RTN","PXRMDLG2",31,0)
 .S FTYP="DIAGNOSIS",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",32,0)
 .S FNAME=$P($G(@FGLOB),U,3)_" ["_FITEM_"]"
"RTN","PXRMDLG2",33,0)
 ;Procedure CPT
"RTN","PXRMDLG2",34,0)
 I FGLOB["ICPT" D  Q
"RTN","PXRMDLG2",35,0)
 .S FTYP="PROCEDURE",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",36,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG2",37,0)
 ;Quick order
"RTN","PXRMDLG2",38,0)
 I FGLOB["ORD(101.41" D  Q
"RTN","PXRMDLG2",39,0)
 .S FTYP="QUICK ORDER",FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",40,0)
 .S FNAME=$P($G(@FGLOB),U,2)_" ["_FITEM_"]"
"RTN","PXRMDLG2",41,0)
 ;Short name for finding type
"RTN","PXRMDLG2",42,0)
 S FTYP=$G(DEF1(FGLOB)) Q:FTYP=""
"RTN","PXRMDLG2",43,0)
 S FNUM=" ["_FTYP_"("_FITEM_")]"
"RTN","PXRMDLG2",44,0)
 ;Long name
"RTN","PXRMDLG2",45,0)
 S FTYP=$G(DEF2(FTYP))
"RTN","PXRMDLG2",46,0)
 S FGLOB=U_FGLOB_FITEM_",0)"
"RTN","PXRMDLG2",47,0)
 S FNAME=$P($G(@FGLOB),U,1)
"RTN","PXRMDLG2",48,0)
 I FNAME="" S FNAME=$P($G(@FGLOB),U)
"RTN","PXRMDLG2",49,0)
 I FNAME]"" S FNAME=FNAME_FNUM Q
"RTN","PXRMDLG2",50,0)
 S FNAME=FITEM
"RTN","PXRMDLG2",51,0)
 Q
"RTN","PXRMDLG2",52,0)
 ;
"RTN","PXRMDLG2",53,0)
 ;Dialog Details (DD)
"RTN","PXRMDLG2",54,0)
DETAIL(PIEN) ;
"RTN","PXRMDLG2",55,0)
 ;Get prompt data
"RTN","PXRMDLG2",56,0)
 S DATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDLG2",57,0)
 ;Extract name, type and disabled
"RTN","PXRMDLG2",58,0)
 S PNAME=$P(DATA,U),PDIS=$P(DATA,U,3),PTYP=$P(DATA,U,4),PTYP=$$LIT(PTYP)
"RTN","PXRMDLG2",59,0)
 ;Result (if any)
"RTN","PXRMDLG2",60,0)
 S RESULT=$P(DATA,U,15)
"RTN","PXRMDLG2",61,0)
 I RESULT S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U)
"RTN","PXRMDLG2",62,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG2",63,0)
 S DATA=$G(^PXRMD(801.41,PIEN,1)),RIEN=$P(DATA,U,3),FIEN=$P(DATA,U,5)
"RTN","PXRMDLG2",64,0)
 ;Resolution status name (assume this is a set)
"RTN","PXRMDLG2",65,0)
 S RNAME="???"
"RTN","PXRMDLG2",66,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U) S:RNAME="" RNAME="???"
"RTN","PXRMDLG2",67,0)
 ;Set Default display values
"RTN","PXRMDLG2",68,0)
 S FNAME="???",FTYP="???",ONAME="???"
"RTN","PXRMDLG2",69,0)
 ;For quick orders get the orderable item
"RTN","PXRMDLG2",70,0)
 I RNAME="ORDERED" D
"RTN","PXRMDLG2",71,0)
 .S FTYP="QUICK ORDER",FNAME="*QUICK ORDER MISSING*"
"RTN","PXRMDLG2",72,0)
 .S OIEN=$P($G(^PXRMD(801.41,PIEN,1)),U,7) Q:'OIEN
"RTN","PXRMDLG2",73,0)
 .S FGLOB="^ORD(101.43,"_OIEN_",0)"
"RTN","PXRMDLG2",74,0)
 .S ONAME=$P($G(@FGLOB),U)_" ["_OIEN_"]"
"RTN","PXRMDLG2",75,0)
 ;Description of finding
"RTN","PXRMDLG2",76,0)
 D DESC(FIEN)
"RTN","PXRMDLG2",77,0)
 ;
"RTN","PXRMDLG2",78,0)
 S RNAME="Resolution: "_RNAME
"RTN","PXRMDLG2",79,0)
 S FTYP="Finding type: "_FTYP
"RTN","PXRMDLG2",80,0)
 S FNAME="Finding item: "_FNAME
"RTN","PXRMDLG2",81,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",82,0)
 S PTXT=$J(SEQ,3)_$J("",12)_PTYP_PNAME
"RTN","PXRMDLG2",83,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=PTXT_$J("",72-$L(PTXT))_PDIS
"RTN","PXRMDLG2",84,0)
 S ^TMP("PXRMDLG",$J,"IDX",SEQ,PIEN)=""
"RTN","PXRMDLG2",85,0)
 ;Save resolution
"RTN","PXRMDLG2",86,0)
 I ('DGRP),(FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D
"RTN","PXRMDLG2",87,0)
 .I RNAME'["???" D
"RTN","PXRMDLG2",88,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",89,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_RNAME
"RTN","PXRMDLG2",90,0)
 .I FTYP["QUICK ORDER" D
"RTN","PXRMDLG2",91,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",92,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_"Orderable item: "_ONAME
"RTN","PXRMDLG2",93,0)
 I ('DGRP) D
"RTN","PXRMDLG2",94,0)
 .;Save finding type
"RTN","PXRMDLG2",95,0)
 .I FTYP'["???" D
"RTN","PXRMDLG2",96,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",97,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FTYP
"RTN","PXRMDLG2",98,0)
 ;Save finding name
"RTN","PXRMDLG2",99,0)
 I ('DGRP),(FNAME'["???") D
"RTN","PXRMDLG2",100,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",101,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FNAME
"RTN","PXRMDLG2",102,0)
 ;Additional Findings
"RTN","PXRMDLG2",103,0)
 I (FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D ADD(PIEN)
"RTN","PXRMDLG2",104,0)
 ;Result group/element (mental health)
"RTN","PXRMDLG2",105,0)
 I RESULT D
"RTN","PXRMDLG2",106,0)
 .;Save result details
"RTN","PXRMDLG2",107,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",108,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_"Result name: "_RESNM
"RTN","PXRMDLG2",109,0)
 ;Get additional prompts/dialog group elements
"RTN","PXRMDLG2",110,0)
 D PROMPT^PXRMDLG1(PIEN,20,DHED,DGRP)
"RTN","PXRMDLG2",111,0)
 Q
"RTN","PXRMDLG2",112,0)
 ;
"RTN","PXRMDLG2",113,0)
 ;Group findings and prompts
"RTN","PXRMDLG2",114,0)
GROUP(PIEN) ;
"RTN","PXRMDLG2",115,0)
 ;Get prompt data
"RTN","PXRMDLG2",116,0)
 S DATA=$G(^PXRMD(801.41,PIEN,0))
"RTN","PXRMDLG2",117,0)
 ;Extract name, type and disabled
"RTN","PXRMDLG2",118,0)
 S PNAME=$P(DATA,U),PDIS=$P(DATA,U,3),PTYP=$P(DATA,U,4),PTYP=$$LIT(PTYP)
"RTN","PXRMDLG2",119,0)
 ;Result (if any)
"RTN","PXRMDLG2",120,0)
 S RESULT=$P(DATA,U,15)
"RTN","PXRMDLG2",121,0)
 I RESULT S RESNM=$P($G(^PXRMD(801.41,RESULT,0)),U)
"RTN","PXRMDLG2",122,0)
 ;Get Resolution/Finding details
"RTN","PXRMDLG2",123,0)
 S DATA=$G(^PXRMD(801.41,PIEN,1)),RIEN=$P(DATA,U,3),FIEN=$P(DATA,U,5)
"RTN","PXRMDLG2",124,0)
 ;Resolution status name (assume this is a set)
"RTN","PXRMDLG2",125,0)
 S RNAME="???"
"RTN","PXRMDLG2",126,0)
 I RIEN S RNAME=$P($G(^PXRMD(801.9,RIEN,0)),U) S:RNAME="" RNAME="???"
"RTN","PXRMDLG2",127,0)
 ;Set Default display values
"RTN","PXRMDLG2",128,0)
 S FNAME="???",FTYP="???",ONAME="???"
"RTN","PXRMDLG2",129,0)
 ;For quick orders get the orderable item
"RTN","PXRMDLG2",130,0)
 I RNAME="ORDERED" D
"RTN","PXRMDLG2",131,0)
 .S FTYP="QUICK ORDER",FNAME="*QUICK ORDER MISSING*"
"RTN","PXRMDLG2",132,0)
 .S OIEN=$P($G(^PXRMD(801.41,PIEN,1)),U,7) Q:'OIEN
"RTN","PXRMDLG2",133,0)
 .S FGLOB="^ORD(101.43,"_OIEN_",0)"
"RTN","PXRMDLG2",134,0)
 .S ONAME=$P($G(@FGLOB),U)_" ["_OIEN_"]"
"RTN","PXRMDLG2",135,0)
 ;Description of finding
"RTN","PXRMDLG2",136,0)
 D DESC(FIEN)
"RTN","PXRMDLG2",137,0)
 ;
"RTN","PXRMDLG2",138,0)
 S RNAME="Resolution: "_RNAME
"RTN","PXRMDLG2",139,0)
 S FTYP="Finding type: "_FTYP
"RTN","PXRMDLG2",140,0)
 S FNAME="Finding item: "_FNAME
"RTN","PXRMDLG2",141,0)
 ;Save resolution
"RTN","PXRMDLG2",142,0)
 I (FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D
"RTN","PXRMDLG2",143,0)
 .I RNAME'["???" D
"RTN","PXRMDLG2",144,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",145,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_RNAME
"RTN","PXRMDLG2",146,0)
 .I FTYP["QUICK ORDER" D
"RTN","PXRMDLG2",147,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",148,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_"Orderable item: "_ONAME
"RTN","PXRMDLG2",149,0)
 ;Save finding type
"RTN","PXRMDLG2",150,0)
 I FTYP'["???" D
"RTN","PXRMDLG2",151,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",152,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FTYP
"RTN","PXRMDLG2",153,0)
 ;Save finding name
"RTN","PXRMDLG2",154,0)
 I (FNAME'["???") D
"RTN","PXRMDLG2",155,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",156,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",15)_FNAME
"RTN","PXRMDLG2",157,0)
 ;Additional Findings
"RTN","PXRMDLG2",158,0)
 I (FTYP'["TAXONOMY"),(FTYP'["MENTAL HEALTH") D ADD(PIEN)
"RTN","PXRMDLG2",159,0)
 ;Get additional prompts/dialog group elements
"RTN","PXRMDLG2",160,0)
 D PROMPT^PXRMDLG1(PIEN,20,"Additional prompts: ",0)
"RTN","PXRMDLG2",161,0)
 ;Final line feed
"RTN","PXRMDLG2",162,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLG2",163,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLG2",164,0)
 Q
"RTN","PXRMDLGH")
0^68^B22319099
"RTN","PXRMDLGH",1,0)
PXRMDLGH ; SLC/PJH - Reminder Dialog History ;01/04/2001
"RTN","PXRMDLGH",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLGH",3,0)
 ;
"RTN","PXRMDLGH",4,0)
 ;Called from PXRMDLGZ
"RTN","PXRMDLGH",5,0)
 ;
"RTN","PXRMDLGH",6,0)
START(PXRMITEM,PXRMDIEN,PXRMNAM) ;
"RTN","PXRMDLGH",7,0)
 N PXRMBG,PXRMLINK,PXRMREAD,PXRMSRC,PXRMVARM
"RTN","PXRMDLGH",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMDLGH",9,0)
 S X="IORESET",PXRMLINK=$P($G(^PXD(811.9,PXRMITEM,51)),U),PXRMDIEN=""
"RTN","PXRMDLGH",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM DIALOG HISTORY")
"RTN","PXRMDLGH",11,0)
 W IORESET
"RTN","PXRMDLGH",12,0)
 D KILL^%ZISS
"RTN","PXRMDLGH",13,0)
 Q
"RTN","PXRMDLGH",14,0)
 ;
"RTN","PXRMDLGH",15,0)
 ;Labels called from list 'PXRM DIALOG HISTORY'
"RTN","PXRMDLGH",16,0)
 ;
"RTN","PXRMDLGH",17,0)
EXIT ;Exit code
"RTN","PXRMDLGH",18,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMDLGH",19,0)
 S VALMBCK="Q"
"RTN","PXRMDLGH",20,0)
 K ^TMP("PXRMDLGH",$J)
"RTN","PXRMDLGH",21,0)
 Q
"RTN","PXRMDLGH",22,0)
 ;
"RTN","PXRMDLGH",23,0)
HDR ; Header code
"RTN","PXRMDLGH",24,0)
 S VALMHDR(1)=PXRMHD
"RTN","PXRMDLGH",25,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLGH",26,0)
 Q
"RTN","PXRMDLGH",27,0)
 ;
"RTN","PXRMDLGH",28,0)
HELP ;Help code
"RTN","PXRMDLGH",29,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG
"RTN","PXRMDLGH",30,0)
 S PXRMTAG="GDLGH"
"RTN","PXRMDLGH",31,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMDLGH",32,0)
 Q
"RTN","PXRMDLGH",33,0)
 ;
"RTN","PXRMDLGH",34,0)
INIT ;Init
"RTN","PXRMDLGH",35,0)
 S VALMCNT=0
"RTN","PXRMDLGH",36,0)
 ;Get linked dialog
"RTN","PXRMDLGH",37,0)
 S PXRMLINK=$P($G(^PXD(811.9,PXRMITEM,51)),U)
"RTN","PXRMDLGH",38,0)
 ;Allow element selection
"RTN","PXRMDLGH",39,0)
 S PXRMOPT=1
"RTN","PXRMDLGH",40,0)
 ;Load details of reminder dialog
"RTN","PXRMDLGH",41,0)
 D BUILD(PXRMITEM,PXRMLINK)
"RTN","PXRMDLGH",42,0)
 ;Reset Menu
"RTN","PXRMDLGH",43,0)
 D XQORM
"RTN","PXRMDLGH",44,0)
 Q
"RTN","PXRMDLGH",45,0)
 ;
"RTN","PXRMDLGH",46,0)
PEXIT ;PXRM DIALOG HISTORY MENU protocol exit code
"RTN","PXRMDLGH",47,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMDLGH",48,0)
 D XQORM
"RTN","PXRMDLGH",49,0)
 Q
"RTN","PXRMDLGH",50,0)
 ;
"RTN","PXRMDLGH",51,0)
 ;Other Subroutines
"RTN","PXRMDLGH",52,0)
 ;
"RTN","PXRMDLGH",53,0)
 ;Build workfile (Entry action for protocol PXRM DIALOG HISTORY)
"RTN","PXRMDLGH",54,0)
BUILD(PXRMITEM,PXRMLINK) ;
"RTN","PXRMDLGH",55,0)
 ;
"RTN","PXRMDLGH",56,0)
 N ARRAY,DARRAY,DDAT,DIEN,DNAM,DSEQ,FIRST,HDR,RIEN,RNAM,TXT
"RTN","PXRMDLGH",57,0)
 ;Clear existing file
"RTN","PXRMDLGH",58,0)
 S VALMCNT=0,VALMBCK="R",FIRST=1,DSEQ=0 K ^TMP("PXRMDLG",$J)
"RTN","PXRMDLGH",59,0)
 ;Get the linked dialog first
"RTN","PXRMDLGH",60,0)
 I PXRMLINK D
"RTN","PXRMDLGH",61,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",62,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",63,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",64,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)="This reminder is linked to dialog:"
"RTN","PXRMDLGH",65,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",66,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",67,0)
 .D SET(PXRMITEM,PXRMLINK)
"RTN","PXRMDLGH",68,0)
 .;Get list of other reminders and display
"RTN","PXRMDLGH",69,0)
 .D OTHER(PXRMLINK),OLST("")
"RTN","PXRMDLGH",70,0)
 ;
"RTN","PXRMDLGH",71,0)
 ;Then other dialogs generated from this reminder (ALPHA order)
"RTN","PXRMDLGH",72,0)
 S DIEN=""
"RTN","PXRMDLGH",73,0)
 F  S DIEN=$O(^PXRMD(801.41,"AG",PXRMITEM,DIEN)) Q:'DIEN  D
"RTN","PXRMDLGH",74,0)
 .Q:DIEN=PXRMLINK
"RTN","PXRMDLGH",75,0)
 .S DNAM=$P($G(^PXRMD(801.41,DIEN,0)),U) Q:DNAM=""
"RTN","PXRMDLGH",76,0)
 .S DARRAY(DNAM)=DIEN
"RTN","PXRMDLGH",77,0)
 ;
"RTN","PXRMDLGH",78,0)
 S DNAM="",HDR=1
"RTN","PXRMDLGH",79,0)
 F  S DNAM=$O(DARRAY(DNAM)) Q:DNAM=""  D
"RTN","PXRMDLGH",80,0)
 .S DIEN=DARRAY(DNAM) Q:'DIEN
"RTN","PXRMDLGH",81,0)
 .S RIEN=$P($G(^PXD(811.9,DIEN,51)),U),FIRST=1
"RTN","PXRMDLGH",82,0)
 .;Get list of other reminders
"RTN","PXRMDLGH",83,0)
 .D OTHER(DIEN)
"RTN","PXRMDLGH",84,0)
 .;Other dialogs header
"RTN","PXRMDLGH",85,0)
 .I HDR D
"RTN","PXRMDLGH",86,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",87,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",88,0)
 ..S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",89,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)="Other dialogs generated from this reminder:"
"RTN","PXRMDLGH",90,0)
 ..S VALMCNT=VALMCNT+1,HDR=0
"RTN","PXRMDLGH",91,0)
 ..S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",92,0)
 .;If this reminder isn't linked display the one that is
"RTN","PXRMDLGH",93,0)
 .I 'RIEN D
"RTN","PXRMDLGH",94,0)
 ..N RNAM
"RTN","PXRMDLGH",95,0)
 ..S RNAM=$O(ARRAY("")) Q:RNAM=""
"RTN","PXRMDLGH",96,0)
 ..S RIEN=$G(ARRAY(RNAM)) S:RIEN FIRST=0
"RTN","PXRMDLGH",97,0)
 .;Dialog detail
"RTN","PXRMDLGH",98,0)
 .D SET(RIEN,DIEN)
"RTN","PXRMDLGH",99,0)
 .;Additional reminder detail
"RTN","PXRMDLGH",100,0)
 .S:FIRST RIEN="" D OLST(RIEN)
"RTN","PXRMDLGH",101,0)
 ;
"RTN","PXRMDLGH",102,0)
 I VALMCNT=0 D
"RTN","PXRMDLGH",103,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",104,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)="    * NO DIALOGS DEFINED *"
"RTN","PXRMDLGH",105,0)
 ;
"RTN","PXRMDLGH",106,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",107,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMDLGH",108,0)
 S ^TMP("PXRMDLG",$J,"VALMCNT")=VALMCNT
"RTN","PXRMDLGH",109,0)
 ;
"RTN","PXRMDLGH",110,0)
 Q
"RTN","PXRMDLGH",111,0)
 ;
"RTN","PXRMDLGH",112,0)
OTHER(DIEN) ;Other reminders linked to this dialog
"RTN","PXRMDLGH",113,0)
 N DLG,DNAM,RNAM,RSUB
"RTN","PXRMDLGH",114,0)
 ;Linked reminders
"RTN","PXRMDLGH",115,0)
 S RNAM="" K ARRAY
"RTN","PXRMDLGH",116,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGH",117,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGH",118,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGH",119,0)
 .S RNAM=$P($G(^PXD(811.9,RSUB,0)),U) Q:RNAM=""
"RTN","PXRMDLGH",120,0)
 .S ARRAY(RNAM)=RSUB
"RTN","PXRMDLGH",121,0)
 Q
"RTN","PXRMDLGH",122,0)
 ;
"RTN","PXRMDLGH",123,0)
OLST(REM) ;List Other Reminders
"RTN","PXRMDLGH",124,0)
 N RNAM
"RTN","PXRMDLGH",125,0)
 S RNAM=""
"RTN","PXRMDLGH",126,0)
 F  S RNAM=$O(ARRAY(RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGH",127,0)
 .Q:ARRAY(RNAM)=REM  Q:ARRAY(RNAM)=PXRMITEM
"RTN","PXRMDLGH",128,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",129,0)
 .S ^TMP("PXRMDLG",$J,VALMCNT,0)=$J("",59)_RNAM
"RTN","PXRMDLGH",130,0)
 Q
"RTN","PXRMDLGH",131,0)
 ;
"RTN","PXRMDLGH",132,0)
SET(RIEN,DIEN) ;
"RTN","PXRMDLGH",133,0)
 N RNAM,DNAM,DDAT
"RTN","PXRMDLGH",134,0)
 S RNAM="*NONE*",DSEQ=DSEQ+1
"RTN","PXRMDLGH",135,0)
 ;Dialog details
"RTN","PXRMDLGH",136,0)
 S DNAM=$P($G(^PXRMD(801.41,DIEN,0)),U)
"RTN","PXRMDLGH",137,0)
 S DDAT=$P($G(^PXRMD(801.41,DIEN,99)),U,1)
"RTN","PXRMDLGH",138,0)
 S:DDAT="" DDAT=$P($G(^PXRMD(801.41,DIEN,99)),U,2)
"RTN","PXRMDLGH",139,0)
 S DDAT=$$FMTE^XLFDT(DDAT,"1D")
"RTN","PXRMDLGH",140,0)
 ;Reminder details
"RTN","PXRMDLGH",141,0)
 I RIEN D
"RTN","PXRMDLGH",142,0)
 .S RNAM=$P($G(^PXD(811.9,RIEN,0)),U)
"RTN","PXRMDLGH",143,0)
 ;Update display
"RTN","PXRMDLGH",144,0)
 S TXT=$J(DSEQ,4)_"  "_$E(DNAM,1,32)_$J("",32-$L(DNAM))
"RTN","PXRMDLGH",145,0)
 S TXT=TXT_" "_DDAT_$J("",20-$L(DDAT))_RNAM
"RTN","PXRMDLGH",146,0)
 S VALMCNT=VALMCNT+1
"RTN","PXRMDLGH",147,0)
 S ^TMP("PXRMDLG",$J,VALMCNT,0)=TXT
"RTN","PXRMDLGH",148,0)
 S ^TMP("PXRMDLG",$J,"IDX",DSEQ,DIEN)=""
"RTN","PXRMDLGH",149,0)
 Q
"RTN","PXRMDLGH",150,0)
 ;
"RTN","PXRMDLGH",151,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECTION ITEM",0))_U_"1:"_VALMCNT
"RTN","PXRMDLGH",152,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMDLGH",153,0)
 Q
"RTN","PXRMDLGZ")
0^60^B36071403
"RTN","PXRMDLGZ",1,0)
PXRMDLGZ ; SLC/PJH - Link reminder to dialog. ;10/30/2000
"RTN","PXRMDLGZ",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLGZ",3,0)
 ;
"RTN","PXRMDLGZ",4,0)
 ;Called by option PXRM DIALOG/COMPONENT EDIT
"RTN","PXRMDLGZ",5,0)
 ;
"RTN","PXRMDLGZ",6,0)
START N BY,DATA,DDES,DHD,DIC,DNAM,DTYP,FLDS,FR,L,LOGIC,NOW,PNAM,TO,Y
"RTN","PXRMDLGZ",7,0)
 N PXRMBG,PXRMHD,PXRMDIEN,PXRMGTYP,PXRMDTYP,PXRMITEM,PXRMMODE,PXRMNAME
"RTN","PXRMDLGZ",8,0)
 N PXRMOPT,PXRMTEMP,PXRMTITL,PXRMVIEW
"RTN","PXRMDLGZ",9,0)
 ;Refresh on return
"RTN","PXRMDLGZ",10,0)
 S VALMBCK="R"
"RTN","PXRMDLGZ",11,0)
 ;Default is display dialog elements
"RTN","PXRMDLGZ",12,0)
 S PXRMDTYP="R",PXRMGTYP="DLGR",PXRMOPT=0,PXRMVIEW="AN"
"RTN","PXRMDLGZ",13,0)
 ;Select dialog for display
"RTN","PXRMDLGZ",14,0)
 F  D  Q:'PXRMTEMP
"RTN","PXRMDLGZ",15,0)
 .S PXRMTEMP=""
"RTN","PXRMDLGZ",16,0)
 .D START^PXRMSEL(.PXRMHD,.PXRMGTYP,"PXRMTEMP") Q:'PXRMTEMP
"RTN","PXRMDLGZ",17,0)
 .N X S X="IORESET"
"RTN","PXRMDLGZ",18,0)
 .D ENDR^%ZISS,@(PXRMGTYP_"("_PXRMTEMP_")")
"RTN","PXRMDLGZ",19,0)
END Q
"RTN","PXRMDLGZ",20,0)
 ;
"RTN","PXRMDLGZ",21,0)
 ;Reminder View
"RTN","PXRMDLGZ",22,0)
 ;-------------
"RTN","PXRMDLGZ",23,0)
DLGR(PXRMITEM) ;
"RTN","PXRMDLGZ",24,0)
 N PXRMDIEN
"RTN","PXRMDLGZ",25,0)
 ;Format headings to include reminder and name
"RTN","PXRMDLGZ",26,0)
 S DATA=$G(^PXD(811.9,PXRMITEM,0)),RNAM=$P(DATA,U),PNAM=$P(DATA,U,3)
"RTN","PXRMDLGZ",27,0)
 S PXRMHD="REMINDER NAME: "_RNAM
"RTN","PXRMDLGZ",28,0)
 ;
"RTN","PXRMDLGZ",29,0)
 ;Dialog History
"RTN","PXRMDLGZ",30,0)
 F  D  Q:'PXRMDIEN
"RTN","PXRMDLGZ",31,0)
 .D START^PXRMDLGH(PXRMITEM,.PXRMDIEN,"PXRMDIEN") Q:'PXRMDIEN
"RTN","PXRMDLGZ",32,0)
 .N PXRMHD,VALMBCK,VALMBG,VALMSG,X,XMZ
"RTN","PXRMDLGZ",33,0)
 .S DNAM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",34,0)
 .I $P($G(^PXRMD(801.41,PXRMDIEN,0)),U,3)]"" S DNAM=DNAM_" (DISABLED)"
"RTN","PXRMDLGZ",35,0)
 .S PXRMHD="REMINDER DIALOG NAME: "_DNAM
"RTN","PXRMDLGZ",36,0)
 .S X="IORESET"
"RTN","PXRMDLGZ",37,0)
 .D ENDR^%ZISS,EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",38,0)
 .W IORESET
"RTN","PXRMDLGZ",39,0)
 .D KILL^%ZISS
"RTN","PXRMDLGZ",40,0)
 Q
"RTN","PXRMDLGZ",41,0)
 ;
"RTN","PXRMDLGZ",42,0)
 ;Edit element/prompt/group
"RTN","PXRMDLGZ",43,0)
 ;-------------------------
"RTN","PXRMDLGZ",44,0)
DLGE(PXRMDIEN) ;
"RTN","PXRMDLGZ",45,0)
 S PXRMHD="Dialog Name: ",PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",46,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",47,0)
 S DATA=$G(^PXRMD(801.41,PXRMDIEN,0)),DDES=$P(DATA,U),DTYP=$P(DATA,U,4)
"RTN","PXRMDLGZ",48,0)
 ;Test
"RTN","PXRMDLGZ",49,0)
 I DTYP="G" D DLG(PXRMDIEN) Q
"RTN","PXRMDLGZ",50,0)
 ;
"RTN","PXRMDLGZ",51,0)
 S PXRMHD=PXRMHD_" "_DDES W PXRMHD,!
"RTN","PXRMDLGZ",52,0)
 ;Edit selected dialog
"RTN","PXRMDLGZ",53,0)
 D EDIT^PXRMDEDT(DTYP,PXRMDIEN)
"RTN","PXRMDLGZ",54,0)
 Q
"RTN","PXRMDLGZ",55,0)
 ;
"RTN","PXRMDLGZ",56,0)
 ;Reminder dialog view
"RTN","PXRMDLGZ",57,0)
 ;--------------------
"RTN","PXRMDLGZ",58,0)
DLG(PXRMDIEN) ;
"RTN","PXRMDLGZ",59,0)
 S PXRMDIEN=PXRMTEMP
"RTN","PXRMDLGZ",60,0)
 S PXRMNAME=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U)
"RTN","PXRMDLGZ",61,0)
 S PXRMITEM=$P($G(^PXRMD(801.41,PXRMDIEN,0)),U,2)
"RTN","PXRMDLGZ",62,0)
 ;Format headings to include dialog name
"RTN","PXRMDLGZ",63,0)
 S PXRMHD=PXRMHD_PXRMNAME
"RTN","PXRMDLGZ",64,0)
 ;Check if the set is disable and add to header if disabled
"RTN","PXRMDLGZ",65,0)
 I $P(^PXRMD(801.41,PXRMDIEN,0),U,3)]"" S PXRMHD=PXRMHD_" (DISABLED)"
"RTN","PXRMDLGZ",66,0)
 ;Listman option
"RTN","PXRMDLGZ",67,0)
 D EN^VALM("PXRM DIALOG LIST")
"RTN","PXRMDLGZ",68,0)
 W IORESET
"RTN","PXRMDLGZ",69,0)
 D KILL^%ZISS
"RTN","PXRMDLGZ",70,0)
 Q
"RTN","PXRMDLGZ",71,0)
 ;
"RTN","PXRMDLGZ",72,0)
 ;Other subroutines
"RTN","PXRMDLGZ",73,0)
 ;
"RTN","PXRMDLGZ",74,0)
 ;Ask update or no
"RTN","PXRMDLGZ",75,0)
 ;----------------
"RTN","PXRMDLGZ",76,0)
ASK(YESNO) ;
"RTN","PXRMDLGZ",77,0)
 N X,Y,TEXT,DIR
"RTN","PXRMDLGZ",78,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",79,0)
 S DIR(0)="YA0"
"RTN","PXRMDLGZ",80,0)
 S DIR("A")="LINK THIS REMINDER TO DIALOG - "_$P(PXRMHD,": ",2)_": "
"RTN","PXRMDLGZ",81,0)
 S DIR("B")="Y"
"RTN","PXRMDLGZ",82,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMDLGZ",83,0)
 S DIR("??")=U_"D HLP^PXRMDLGY(1)"
"RTN","PXRMDLGZ",84,0)
 D ^DIR K DIR
"RTN","PXRMDLGZ",85,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMDLGZ",86,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMDLGZ",87,0)
 S YESNO=$E(Y(0))
"RTN","PXRMDLGZ",88,0)
 Q
"RTN","PXRMDLGZ",89,0)
 ;
"RTN","PXRMDLGZ",90,0)
 ;Display dialogs autogenerated from this reminder
"RTN","PXRMDLGZ",91,0)
 ;------------------------------------------------
"RTN","PXRMDLGZ",92,0)
DISP(RIEN) ;
"RTN","PXRMDLGZ",93,0)
 N ARRAY,DSUB,FIRST
"RTN","PXRMDLGZ",94,0)
 ;Get OTHER dialogs
"RTN","PXRMDLGZ",95,0)
 S FIRST=1,DSUB=""
"RTN","PXRMDLGZ",96,0)
 F  S DSUB=$O(^PXRMD(801.41,"AG",RIEN,DSUB)) Q:'DSUB  D
"RTN","PXRMDLGZ",97,0)
 .W !
"RTN","PXRMDLGZ",98,0)
 .D:FIRST
"RTN","PXRMDLGZ",99,0)
 ..W "DIALOGS ALREADY GENERATED FROM THIS REMINDER:",!! S FIRST=0
"RTN","PXRMDLGZ",100,0)
 .W ?20,$P($G(^PXRMD(801.41,DSUB,0)),U)
"RTN","PXRMDLGZ",101,0)
 ;
"RTN","PXRMDLGZ",102,0)
 I 'FIRST W !
"RTN","PXRMDLGZ",103,0)
 ;
"RTN","PXRMDLGZ",104,0)
 Q
"RTN","PXRMDLGZ",105,0)
 ;
"RTN","PXRMDLGZ",106,0)
 ;Display linked reminders
"RTN","PXRMDLGZ",107,0)
 ;------------------------
"RTN","PXRMDLGZ",108,0)
DISPL(DIEN) ;
"RTN","PXRMDLGZ",109,0)
 N ARRAY,DLG,RSUB,FIRST,RNAM
"RTN","PXRMDLGZ",110,0)
 S RSUB=$P($G(^PXRMD(801.41,DIEN,0)),U,2)
"RTN","PXRMDLGZ",111,0)
 I RSUB W !!,"SOURCE REMINDER: "_$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",112,0)
 ;Linked reminders
"RTN","PXRMDLGZ",113,0)
 S FIRST=1,RNAM=""
"RTN","PXRMDLGZ",114,0)
 F  S RNAM=$O(^PXD(811.9,"B",RNAM)) Q:RNAM=""  D
"RTN","PXRMDLGZ",115,0)
 .S RSUB=$O(^PXD(811.9,"B",RNAM,"")) Q:'RSUB
"RTN","PXRMDLGZ",116,0)
 .S DLG=$P($G(^PXD(811.9,RSUB,51)),U) Q:DLG'=DIEN
"RTN","PXRMDLGZ",117,0)
 .W ! I FIRST W !,"REMINDERS ALREADY LINKED TO THIS DIALOG:",!! S FIRST=0
"RTN","PXRMDLGZ",118,0)
 .W ?18,$P($G(^PXD(811.9,RSUB,0)),U)
"RTN","PXRMDLGZ",119,0)
 Q
"RTN","PXRMDLGZ",120,0)
 ;
"RTN","PXRMDLGZ",121,0)
 ;Link a dialog (called by protocol PXRM DIALOG/REMINDER LINK)
"RTN","PXRMDLGZ",122,0)
 ;-------------
"RTN","PXRMDLGZ",123,0)
LINK(DIEN) ;
"RTN","PXRMDLGZ",124,0)
 F  D  Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",125,0)
 .W IORESET
"RTN","PXRMDLGZ",126,0)
 .S VALMBCK="R"
"RTN","PXRMDLGZ",127,0)
 .;Display linked reminders
"RTN","PXRMDLGZ",128,0)
 .D DISPL(DIEN)
"RTN","PXRMDLGZ",129,0)
 .;
"RTN","PXRMDLGZ",130,0)
 .N ANS,DIC,DIR,DLG,LIT1,PNAME,PXRMREM,REM
"RTN","PXRMDLGZ",131,0)
 .S DIC("A")="SELECT A REMINDER TO LINK OR CHANGE: "
"RTN","PXRMDLGZ",132,0)
 .S LIT1="You must select a reminder!"
"RTN","PXRMDLGZ",133,0)
 .D SEL(811.9,"AEQMZ",.PXRMREM)
"RTN","PXRMDLGZ",134,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMDLGZ",135,0)
 .S REM=$P(PXRMREM(1),U),PNAME=$P(PXRMREM(1),U,3)
"RTN","PXRMDLGZ",136,0)
 .I PNAME]"" W !!,"REMINDER PRINT NAME: "_PNAME,!
"RTN","PXRMDLGZ",137,0)
 .;Display related dialogs
"RTN","PXRMDLGZ",138,0)
 .D DISP(REM)
"RTN","PXRMDLGZ",139,0)
 .;Check if already linked
"RTN","PXRMDLGZ",140,0)
 .S DLG=$P($G(^PXD(811.9,REM,51)),U)
"RTN","PXRMDLGZ",141,0)
 .;Reconfirm to link reminder
"RTN","PXRMDLGZ",142,0)
 .I 'DLG S ANS="" D ASK(.ANS) Q:ANS'="Y"
"RTN","PXRMDLGZ",143,0)
 .;
"RTN","PXRMDLGZ",144,0)
 .N DA,DR,DIE
"RTN","PXRMDLGZ",145,0)
 .;Edit selected reminder
"RTN","PXRMDLGZ",146,0)
 .S DA=REM
"RTN","PXRMDLGZ",147,0)
 .;Settup local variables
"RTN","PXRMDLGZ",148,0)
 .S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",149,0)
 .;If no link force entry
"RTN","PXRMDLGZ",150,0)
 .I 'DLG S DR=DR_"///"_PXRMNAME
"RTN","PXRMDLGZ",151,0)
 .D ^DIE
"RTN","PXRMDLGZ",152,0)
 Q
"RTN","PXRMDLGZ",153,0)
 ;
"RTN","PXRMDLGZ",154,0)
 ;Link a Reminder (called by protocol PXRM DIALOG LINK)
"RTN","PXRMDLGZ",155,0)
 ;---------------
"RTN","PXRMDLGZ",156,0)
RLINK(REM) ;
"RTN","PXRMDLGZ",157,0)
 N DLG
"RTN","PXRMDLGZ",158,0)
 ;Re-display reminder name
"RTN","PXRMDLGZ",159,0)
 W IORESET
"RTN","PXRMDLGZ",160,0)
 W !,PXRMHD
"RTN","PXRMDLGZ",161,0)
 ;
"RTN","PXRMDLGZ",162,0)
 N DA,DR,DIE
"RTN","PXRMDLGZ",163,0)
 ;Edit selected reminder
"RTN","PXRMDLGZ",164,0)
 S DA=REM
"RTN","PXRMDLGZ",165,0)
 ;Settup local variables
"RTN","PXRMDLGZ",166,0)
 S DIE="^PXD(811.9,",DR=51
"RTN","PXRMDLGZ",167,0)
 ;If no link force entry
"RTN","PXRMDLGZ",168,0)
 D ^DIE
"RTN","PXRMDLGZ",169,0)
 Q
"RTN","PXRMDLGZ",170,0)
 ;
"RTN","PXRMDLGZ",171,0)
 ;General help text routine.
"RTN","PXRMDLGZ",172,0)
 ;--------------------------
"RTN","PXRMDLGZ",173,0)
HLP(CALL) ;
"RTN","PXRMDLGZ",174,0)
 N HTEXT
"RTN","PXRMDLGZ",175,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMDLGZ",176,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMDLGZ",177,0)
 ;
"RTN","PXRMDLGZ",178,0)
 I CALL=1 D
"RTN","PXRMDLGZ",179,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",180,0)
 I CALL=2 D
"RTN","PXRMDLGZ",181,0)
 .S HTEXT(1)="Enter Yes to link reminder to this dialog."
"RTN","PXRMDLGZ",182,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",183,0)
 S IC=""
"RTN","PXRMDLGZ",184,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMDLGZ",185,0)
 . S X=HTEXT(IC)
"RTN","PXRMDLGZ",186,0)
 . D ^DIWP
"RTN","PXRMDLGZ",187,0)
 W !
"RTN","PXRMDLGZ",188,0)
 S IC=0
"RTN","PXRMDLGZ",189,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMDLGZ",190,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMDLGZ",191,0)
 K ^UTILITY($J,"W")
"RTN","PXRMDLGZ",192,0)
 W !
"RTN","PXRMDLGZ",193,0)
 Q
"RTN","PXRMDLGZ",194,0)
 ;
"RTN","PXRMDLGZ",195,0)
 ;Reminder selection
"RTN","PXRMDLGZ",196,0)
 ;------------------
"RTN","PXRMDLGZ",197,0)
SEL(FILE,MODE,ARRAY) ;
"RTN","PXRMDLGZ",198,0)
 N X,Y,CNT
"RTN","PXRMDLGZ",199,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMDLGZ",200,0)
 S CNT=0
"RTN","PXRMDLGZ",201,0)
 W !
"RTN","PXRMDLGZ",202,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:CNT>0  Q:(Y=-1)&(CNT>0)
"RTN","PXRMDLGZ",203,0)
 .S DIC=FILE,DIC(0)=MODE
"RTN","PXRMDLGZ",204,0)
 .D ^DIC
"RTN","PXRMDLGZ",205,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMDLGZ",206,0)
 .I '$D(DTOUT),('$D(DUOUT)) D
"RTN","PXRMDLGZ",207,0)
 ..I +Y'=-1 D  Q
"RTN","PXRMDLGZ",208,0)
 ...S CNT=CNT+1,ARRAY(CNT)=Y_U_Y(0,0)_U_$P(Y(0),U,3)
"RTN","PXRMDLGZ",209,0)
 ..W:CNT=0 !,LIT1
"RTN","PXRMDLGZ",210,0)
 .K DIC
"RTN","PXRMDLGZ",211,0)
 Q
"RTN","PXRMDLGZ",212,0)
 ;
"RTN","PXRMDLGZ",213,0)
 ;Input transform for FINDING ITEM in 801.41
"RTN","PXRMDLGZ",214,0)
XINP(X) ;Taxonomy findings are not allowed for dialog groups
"RTN","PXRMDLGZ",215,0)
 I $P(X,";",2)="PXD(811.2,",$P($G(^PXRMD(801.41,DA,0)),U,4)="G" D  Q 0
"RTN","PXRMDLGZ",216,0)
 .W *7,!,"A taxonomy cannot be entered as the finding item for a group"
"RTN","PXRMDLGZ",217,0)
 ;Only applies to MH
"RTN","PXRMDLGZ",218,0)
 I $P(X,";",2)'="YTT(601," Q 1
"RTN","PXRMDLGZ",219,0)
 ;GAF
"RTN","PXRMDLGZ",220,0)
 I $P($G(^YTT(601,$P(X,";"),0)),U)="GAF" Q 1
"RTN","PXRMDLGZ",221,0)
 ;Check if a VALID GUI test
"RTN","PXRMDLGZ",222,0)
 I $P($G(^YTT(601.6,$P(X,";"),0)),U,4)="Y" Q 1
"RTN","PXRMDLGZ",223,0)
 ;else
"RTN","PXRMDLGZ",224,0)
 W *7,!,"This test is not appropriate for the GUI",!
"RTN","PXRMDLGZ",225,0)
 Q 0
"RTN","PXRMDLL")
0^41^B69798929
"RTN","PXRMDLL",1,0)
PXRMDLL ;SLC/PJH - REMINDER DIALOG LOADER ;07/26/2000
"RTN","PXRMDLL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLL",3,0)
 ;
"RTN","PXRMDLL",4,0)
OK(DIEN) ;Check if mental health test is for GUI
"RTN","PXRMDLL",5,0)
 I 'DFIEN Q 0
"RTN","PXRMDLL",6,0)
 I $P($G(^YTT(601.6,DFIEN,0)),U,4)="Y" Q 1
"RTN","PXRMDLL",7,0)
 I $P($G(^YTT(601,DFIEN,0)),U)="GAF" Q 1
"RTN","PXRMDLL",8,0)
 Q 0
"RTN","PXRMDLL",9,0)
 ;
"RTN","PXRMDLL",10,0)
TXT ;Format text
"RTN","PXRMDLL",11,0)
 N NULL
"RTN","PXRMDLL",12,0)
 S TEXT=DTXT(SUB),NULL=0
"RTN","PXRMDLL",13,0)
 I ($E(TEXT)=" ")!(TEXT="") S NULL=1
"RTN","PXRMDLL",14,0)
 I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLL",15,0)
 S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLL",16,0)
 Q
"RTN","PXRMDLL",17,0)
 ; 
"RTN","PXRMDLL",18,0)
EXP(TIEN,DITEM,DSUB) ;Expand taxonomy codes
"RTN","PXRMDLL",19,0)
 N ACNT,AHIS,ATYP,ARRAY,CODES,CNT,DPCE,DTAX
"RTN","PXRMDLL",20,0)
 ;Get taxonomy file details
"RTN","PXRMDLL",21,0)
 D TAX(TIEN,.ARRAY)
"RTN","PXRMDLL",22,0)
 ;
"RTN","PXRMDLL",23,0)
 ;Build dialog from the returned array
"RTN","PXRMDLL",24,0)
 ;
"RTN","PXRMDLL",25,0)
 ;Main Taxonomy prompt
"RTN","PXRMDLL",26,0)
 S DTXT=ARRAY
"RTN","PXRMDLL",27,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",28,0)
 S ORY(OCNT)=1_U_DITEM_U_DSUB_U_"S"_U_DEXC
"RTN","PXRMDLL",29,0)
 ;Default group indents and selection entry
"RTN","PXRMDLL",30,0)
 S $P(ORY(OCNT),U,16)=2,$P(ORY(OCNT),U,18)=2
"RTN","PXRMDLL",31,0)
 S OCNT=OCNT+1
"RTN","PXRMDLL",32,0)
 S ORY(OCNT)=2_U_DITEM_U_DSUB_U_DTXT
"RTN","PXRMDLL",33,0)
 ;
"RTN","PXRMDLL",34,0)
 ;Taxonomy CPT/POV resolution prompts
"RTN","PXRMDLL",35,0)
 S ACNT=""
"RTN","PXRMDLL",36,0)
 F  S ACNT=$O(ARRAY(ACNT)) Q:ACNT=""  D
"RTN","PXRMDLL",37,0)
 .;Prompt text
"RTN","PXRMDLL",38,0)
 .S DTXT=$P(ARRAY(ACNT),U),DPCE=$P(ARRAY(ACNT),U,4)
"RTN","PXRMDLL",39,0)
 .;Historical/Current flag
"RTN","PXRMDLL",40,0)
 .S AHIS=0 I $P(ARRAY(ACNT),U,3)=2 S AHIS=1
"RTN","PXRMDLL",41,0)
 .;CPT/POV
"RTN","PXRMDLL",42,0)
 .S ATYP="POV" I $P(ARRAY(ACNT),U,2)=81 S ATYP="CPT"
"RTN","PXRMDLL",43,0)
 .;Initial display
"RTN","PXRMDLL",44,0)
 .S DHIDE=0,DCHECK=0,DDIS=0
"RTN","PXRMDLL",45,0)
 .;Construct ien for this level
"RTN","PXRMDLL",46,0)
 .S DTAX=DSUB_"."_ACNT
"RTN","PXRMDLL",47,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",48,0)
 .S ORY(OCNT)=1_U_DITEM_U_DTAX_U_"T"_U_DEXC_U_U_ATYP_U_AHIS
"RTN","PXRMDLL",49,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLL",50,0)
 .S ORY(OCNT)=2_U_DITEM_U_DTAX_U_DTXT
"RTN","PXRMDLL",51,0)
 Q
"RTN","PXRMDLL",52,0)
 ;
"RTN","PXRMDLL",53,0)
GROUP(DIEN,DSUB) ;Dialog group
"RTN","PXRMDLL",54,0)
 N DATA,DBOX,DCAP,DCHK,DENTRY,DEXC,DGIEN,DGRP,DGSEQ,DGSUB,DHIDE,DIND
"RTN","PXRMDLL",55,0)
 N DINDPN,DMHEX,DRESL,DSHARE,SUB
"RTN","PXRMDLL",56,0)
 ;Group caption text
"RTN","PXRMDLL",57,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMDLL",58,0)
 S DCAP=$P(DATA,U,5),DBOX=$P(DATA,U,6),DIND=$P(DATA,U,7)
"RTN","PXRMDLL",59,0)
 S DSHARE=$P(DATA,U,8),DENTRY=$P(DATA,U,9),DHIDE=$P(DATA,U,10)
"RTN","PXRMDLL",60,0)
 S DINDPN=$P(DATA,U,12) S:DINDPN="" DINDPN=0
"RTN","PXRMDLL",61,0)
 S DBOX=$S(DBOX="Y":1,1:"")
"RTN","PXRMDLL",62,0)
 ;group header is display only if SUPPRESS CHECKBOX
"RTN","PXRMDLL",63,0)
 S DCHK="S" I ('DHIDE)&(DSUPP) S DCHK="D",DHIDE=0
"RTN","PXRMDLL",64,0)
 ;Default group setting to hide
"RTN","PXRMDLL",65,0)
 I DHIDE="" S DHIDE=1
"RTN","PXRMDLL",66,0)
 ;
"RTN","PXRMDLL",67,0)
 S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",68,0)
 ;
"RTN","PXRMDLL",69,0)
 S OCNT=OCNT+1,ORY(OCNT)=1_U_DIEN_U_DSUB_U_DCHK_U_DEXC
"RTN","PXRMDLL",70,0)
 S $P(ORY(OCNT),U,15)=DHIDE,$P(ORY(OCNT),U,16)=DIND
"RTN","PXRMDLL",71,0)
 S $P(ORY(OCNT),U,17)=DSHARE,$P(ORY(OCNT),U,18)=DENTRY
"RTN","PXRMDLL",72,0)
 S $P(ORY(OCNT),U,19)=DBOX,$P(ORY(OCNT),U,20)=DCAP
"RTN","PXRMDLL",73,0)
 S $P(ORY(OCNT),U,21)=DINDPN
"RTN","PXRMDLL",74,0)
 ;Create type 2 records if if here is additional group text
"RTN","PXRMDLL",75,0)
 N LAST,TEXT
"RTN","PXRMDLL",76,0)
 S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",77,0)
 .D TXT
"RTN","PXRMDLL",78,0)
 .S OCNT=OCNT+1,ORY(OCNT)=2_U_DIEN_U_DSUB_U_TEXT
"RTN","PXRMDLL",79,0)
 ;Get dialog group sub-elements
"RTN","PXRMDLL",80,0)
 N DTYP,DSUPP,DDIS S DGSEQ=0
"RTN","PXRMDLL",81,0)
 F  S DGSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ)) Q:'DGSEQ  D
"RTN","PXRMDLL",82,0)
 .S DGSUB=$O(^PXRMD(801.41,DIEN,10,"B",DGSEQ,"")) Q:'DGSUB
"RTN","PXRMDLL",83,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DGSUB,0))
"RTN","PXRMDLL",84,0)
 .S DGIEN=$P(DATA,U,2) Q:'DGIEN
"RTN","PXRMDLL",85,0)
 .S DEXC=$P($G(^PXRMD(801.41,DIEN,2)),U,3)
"RTN","PXRMDLL",86,0)
 .K DTXT S SUB=0 F  S SUB=$O(^PXRMD(801.41,DGIEN,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",87,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DGIEN,25,SUB,0))
"RTN","PXRMDLL",88,0)
 .;Check if element is disabled/invalid
"RTN","PXRMDLL",89,0)
 .S DATA=$G(^PXRMD(801.41,DGIEN,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",90,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11) Q:"EG"'[DTYP
"RTN","PXRMDLL",91,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",92,0)
 .S DRES=$P($G(^PXRMD(801.41,DGIEN,1)),U,3)
"RTN","PXRMDLL",93,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",94,0)
 .S DHIS=0 S:DRES=2 DHIS=1
"RTN","PXRMDLL",95,0)
 .S DFIND=$P($G(^PXRMD(801.41,DGIEN,1)),U,5)
"RTN","PXRMDLL",96,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",97,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",98,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",99,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",100,0)
 .S DGRP=DSUB_"."_DGSUB
"RTN","PXRMDLL",101,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",102,0)
 .I DPCE="T" D EXP(DFIEN,DGIEN,DGRP) Q
"RTN","PXRMDLL",103,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",104,0)
 .I DPCE="VIT" S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLL",105,0)
 .;Embedded Dialog Group
"RTN","PXRMDLL",106,0)
 .I DTYP="G" D GROUP(DGIEN,DGRP) Q
"RTN","PXRMDLL",107,0)
 .S DDIS="S" I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",108,0)
 .S DGRP=DSUB_"."_DGSUB,OCNT=OCNT+1
"RTN","PXRMDLL",109,0)
 .S ORY(OCNT)=1_U_DGIEN_U_DGRP_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",110,0)
 .N LAST,TEXT
"RTN","PXRMDLL",111,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",112,0)
 ..D TXT
"RTN","PXRMDLL",113,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DGIEN_U_DGRP_U_TEXT
"RTN","PXRMDLL",114,0)
 Q
"RTN","PXRMDLL",115,0)
 ;
"RTN","PXRMDLL",116,0)
LOAD(DIEN) ;Load dialog questions into array
"RTN","PXRMDLL",117,0)
 N DARRAY,DATA,DITEM,DFIND,DFIEN,DFTYP,DPCE,DRES,DSEQ,DSUB,DTXT,DTYP,OCNT
"RTN","PXRMDLL",118,0)
 N DDIS,DEXC,DHIDE,DCHECK,DDIS,DHIS,DMHEX,DRESL,DSUPP,SUB
"RTN","PXRMDLL",119,0)
 ;Check Status of dialog
"RTN","PXRMDLL",120,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0)) Q:DATA=""
"RTN","PXRMDLL",121,0)
 ;If disabled ignore
"RTN","PXRMDLL",122,0)
 I $P(DATA,U,3)]"" Q
"RTN","PXRMDLL",123,0)
 ;Ignore if not a reminder dialog
"RTN","PXRMDLL",124,0)
 I $P(DATA,U,4)'="R" Q
"RTN","PXRMDLL",125,0)
 ;
"RTN","PXRMDLL",126,0)
 ;List of PCE codes
"RTN","PXRMDLL",127,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLL",128,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLL",129,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLL",130,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLL",131,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLL",132,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLL",133,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLL",134,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLL",135,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLL",136,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLL",137,0)
 S DARRAY("PXD(811.2,")="T"
"RTN","PXRMDLL",138,0)
 ;
"RTN","PXRMDLL",139,0)
 ;Get elements for the dialog
"RTN","PXRMDLL",140,0)
 S DSEQ=0,OCNT=0
"RTN","PXRMDLL",141,0)
 F  S DSEQ=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLL",142,0)
 .S DSUB=$O(^PXRMD(801.41,DIEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLL",143,0)
 .S DATA=$G(^PXRMD(801.41,DIEN,10,DSUB,0))
"RTN","PXRMDLL",144,0)
 .S DITEM=$P(DATA,U,2) Q:DITEM=""
"RTN","PXRMDLL",145,0)
 .;Ignore disabled elements
"RTN","PXRMDLL",146,0)
 .S DATA=$G(^PXRMD(801.41,DITEM,0)) Q:DATA=""  Q:$P(DATA,U,3)]""
"RTN","PXRMDLL",147,0)
 .S DTYP=$P(DATA,U,4),DSUPP=$P(DATA,U,11)
"RTN","PXRMDLL",148,0)
 .S DMHEX=$P(DATA,U,14),DRESL=$P(DATA,U,15)
"RTN","PXRMDLL",149,0)
 .K DTXT S SUB=0
"RTN","PXRMDLL",150,0)
 .F  S SUB=$O(^PXRMD(801.41,DITEM,25,SUB)) Q:'SUB  D
"RTN","PXRMDLL",151,0)
 ..S DTXT(SUB)=$G(^PXRMD(801.41,DITEM,25,SUB,0))
"RTN","PXRMDLL",152,0)
 .S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",153,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLL",154,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLL",155,0)
 .S DPCE="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLL",156,0)
 .;If mental Health ignore if not GUI
"RTN","PXRMDLL",157,0)
 .I DPCE="MH" Q:'$$OK(DFIEN)
"RTN","PXRMDLL",158,0)
 .;Exclude from PN
"RTN","PXRMDLL",159,0)
 .S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLL",160,0)
 .;Taxonomy codes need expanding
"RTN","PXRMDLL",161,0)
 .I DPCE="T" D EXP(DFIEN,DITEM,DSUB) Q
"RTN","PXRMDLL",162,0)
 .;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLL",163,0)
 .I DPCE="VIT" S DFIEN=$P($G(^GMRD(120.51,DFIEN,0)),U,7)
"RTN","PXRMDLL",164,0)
 .;Done Elsewhere (historical)
"RTN","PXRMDLL",165,0)
 .S DHIS=$$AHIS(DITEM)
"RTN","PXRMDLL",166,0)
 .;Dialog Group
"RTN","PXRMDLL",167,0)
 .I DTYP="G" D GROUP(DITEM,DSUB) Q
"RTN","PXRMDLL",168,0)
 .;Dialog type/text and resolution 
"RTN","PXRMDLL",169,0)
 .S OCNT=OCNT+1,DDIS="S"
"RTN","PXRMDLL",170,0)
 .I DSUPP=1 S DDIS="D"
"RTN","PXRMDLL",171,0)
 .S ORY(OCNT)=1_U_DITEM_U_DSUB_U_DDIS_U_DEXC_U_U_U_DHIS_U_DMHEX_U_DRESL
"RTN","PXRMDLL",172,0)
 .N LAST,TEXT
"RTN","PXRMDLL",173,0)
 .S SUB=0,LAST=0 F  S SUB=$O(DTXT(SUB)) Q:'SUB  D
"RTN","PXRMDLL",174,0)
 ..D TXT
"RTN","PXRMDLL",175,0)
 ..S OCNT=OCNT+1,ORY(OCNT)=2_U_DITEM_U_DSUB_U_TEXT
"RTN","PXRMDLL",176,0)
 Q
"RTN","PXRMDLL",177,0)
 ;
"RTN","PXRMDLL",178,0)
TAX(TXIEN,ARRAY) ;Return list of resolutions/codes for taxonomy
"RTN","PXRMDLL",179,0)
 N CNT,DTXT,FNODE,RSUB,TDX,TNAME,TPAR,TPR,TYP
"RTN","PXRMDLL",180,0)
 N TCUR,TDTXT,TDHTXT,THIS,TPTXT,TPHTXT
"RTN","PXRMDLL",181,0)
 ;
"RTN","PXRMDLL",182,0)
 ;Get taxonomy name
"RTN","PXRMDLL",183,0)
 S TNAME=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",184,0)
 ;
"RTN","PXRMDLL",185,0)
 ;Check what type of taxonomy codes exist
"RTN","PXRMDLL",186,0)
 S TDX=$$TOK^PXRMDLLA(TXIEN,"SDX")
"RTN","PXRMDLL",187,0)
 S TPR=$$TOK^PXRMDLLA(TXIEN,"SPR")
"RTN","PXRMDLL",188,0)
 ;
"RTN","PXRMDLL",189,0)
 ;Taxonomy dialog text
"RTN","PXRMDLL",190,0)
 S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,3)
"RTN","PXRMDLL",191,0)
 ;default to taxonomy description if null
"RTN","PXRMDLL",192,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,2)
"RTN","PXRMDLL",193,0)
 ;default to taxonomy name if null
"RTN","PXRMDLL",194,0)
 I DTXT="" S DTXT=$P($G(^PXD(811.2,TXIEN,0)),U,1)
"RTN","PXRMDLL",195,0)
 ;
"RTN","PXRMDLL",196,0)
 S CNT=0,ARRAY=DTXT
"RTN","PXRMDLL",197,0)
 ;
"RTN","PXRMDLL",198,0)
 ;Diagnoses
"RTN","PXRMDLL",199,0)
 I TDX D
"RTN","PXRMDLL",200,0)
 .;Diagnosis texts
"RTN","PXRMDLL",201,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SDZ"))
"RTN","PXRMDLL",202,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",203,0)
 .S FNODE=$O(^PXRMD(801.45,"B","POV","")) Q:FNODE=""
"RTN","PXRMDLL",204,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",205,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",206,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",207,0)
 .;get category text (diagnoses)
"RTN","PXRMDLL",208,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",209,0)
 ..S TDTXT=$P(TPAR,U,2) S:TDTXT="" TDTXT=TNAME
"RTN","PXRMDLL",210,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDTXT_U_80_U_1_U_"POV"
"RTN","PXRMDLL",211,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",212,0)
 ..S TDHTXT=$P(TPAR,U,3) S:TDHTXT="" TDHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",213,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TDHTXT_U_80_U_2_U_"POV"
"RTN","PXRMDLL",214,0)
 ;Procedures
"RTN","PXRMDLL",215,0)
 I TPR D
"RTN","PXRMDLL",216,0)
 .;Procedure texts
"RTN","PXRMDLL",217,0)
 .S TPAR=$G(^PXD(811.2,TXIEN,"SPZ"))
"RTN","PXRMDLL",218,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLL",219,0)
 .S FNODE=$O(^PXRMD(801.45,"B","CPT","")) Q:FNODE=""
"RTN","PXRMDLL",220,0)
 .;check if finding parameters are disabled
"RTN","PXRMDLL",221,0)
 .S TCUR=$P($G(^PXRMD(801.45,FNODE,1,1,0)),U,2)
"RTN","PXRMDLL",222,0)
 .S THIS=$P($G(^PXRMD(801.45,FNODE,1,2,0)),U,2)
"RTN","PXRMDLL",223,0)
 .;get category text (procedures)
"RTN","PXRMDLL",224,0)
 .I 'TCUR D  ; Current
"RTN","PXRMDLL",225,0)
 ..S TPTXT=$P(TPAR,U,2) S:TPTXT="" TPTXT=TNAME
"RTN","PXRMDLL",226,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPTXT_U_81_U_1_U_"CPT"
"RTN","PXRMDLL",227,0)
 .I 'THIS D  ; Historical
"RTN","PXRMDLL",228,0)
 ..S TPHTXT=$P(TPAR,U,3) S:TPHTXT="" TPHTXT=TNAME_" (HISTORICAL)"
"RTN","PXRMDLL",229,0)
 ..S CNT=CNT+1,ARRAY(CNT)=TPHTXT_U_81_U_2_U_"CPT"
"RTN","PXRMDLL",230,0)
 ;
"RTN","PXRMDLL",231,0)
 Q
"RTN","PXRMDLL",232,0)
 ;
"RTN","PXRMDLL",233,0)
AHIS(DITEM) ;
"RTN","PXRMDLL",234,0)
 N RSIEN,RSNAM
"RTN","PXRMDLL",235,0)
 S RSIEN=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLL",236,0)
 I RSIEN="" Q 0
"RTN","PXRMDLL",237,0)
 S RSNAM=$P($G(^PXRMD(801.9,RSIEN,0)),U)
"RTN","PXRMDLL",238,0)
 I RSNAM="DONE ELSEWHERE" Q 1
"RTN","PXRMDLL",239,0)
 N PIEN,PFOUND
"RTN","PXRMDLL",240,0)
 S PIEN=0,PFOUND=0
"RTN","PXRMDLL",241,0)
 F  S PIEN=$O(^PXRMD(801.41,DITEM,10,"D",PIEN)) Q:'PIEN  D  Q:PFOUND
"RTN","PXRMDLL",242,0)
 .I $P($G(^PXRMD(801.41,PIEN,0)),U)="PXRM VISIT DATE" S PFOUND=1
"RTN","PXRMDLL",243,0)
 Q PFOUND
"RTN","PXRMDLLA")
0^42^B63741794
"RTN","PXRMDLLA",1,0)
PXRMDLLA ;SLC/PJH - REMINDER DIALOG LOADER ;03/05/2001
"RTN","PXRMDLLA",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDLLA",3,0)
 ;
"RTN","PXRMDLLA",4,0)
CODE(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",5,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",6,0)
 Q:DFTYP["ICD9" $P($G(^ICD9(DFIEN,0)),U)
"RTN","PXRMDLLA",7,0)
 Q:DFTYP["ICPT" $P($$CPT^ICPTCOD(DFIEN),U,2)
"RTN","PXRMDLLA",8,0)
 Q ""
"RTN","PXRMDLLA",9,0)
 ;
"RTN","PXRMDLLA",10,0)
CODES(FILE,TXIEN,ARRAY) ;Return list of selectable codes from taxonomy file
"RTN","PXRMDLLA",11,0)
 N CNT,CODE,DATA,IEN,TEMP,TEXT,NODE,SUB
"RTN","PXRMDLLA",12,0)
 S SUB=0,CNT=0,NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMDLLA",13,0)
 F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",14,0)
 .S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",15,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",16,0)
 .I $P(DATA,U,3)=1 Q
"RTN","PXRMDLLA",17,0)
 .;Get ien of code
"RTN","PXRMDLLA",18,0)
 .S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMDLLA",19,0)
 .;Translate ien to code
"RTN","PXRMDLLA",20,0)
 .I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMDLLA",21,0)
 .I FILE=81 S CODE=$P($$CPT^ICPTCOD(IEN),U,2)
"RTN","PXRMDLLA",22,0)
 .;Ignore invalid codes
"RTN","PXRMDLLA",23,0)
 .S TEMP=$$CODE^PXRMVAL(CODE,FILE) Q:'$P(TEMP,U)  Q:$P(TEMP,U,9)=1
"RTN","PXRMDLLA",24,0)
 .;Set display text from taxonomy selectable code text
"RTN","PXRMDLLA",25,0)
 .S TEXT=$P(DATA,U,2)
"RTN","PXRMDLLA",26,0)
 .;otherwise use icd9/cpt description
"RTN","PXRMDLLA",27,0)
 .I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMDLLA",28,0)
 .I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMDLLA",29,0)
 .I TEXT="",FILE=81 S TEXT=$P($$CPT^ICPTCOD(IEN),U,3)
"RTN","PXRMDLLA",30,0)
 .S CNT=CNT+1,ARRAY(CNT)=IEN_U_CODE_U_TEXT
"RTN","PXRMDLLA",31,0)
 Q
"RTN","PXRMDLLA",32,0)
 ;
"RTN","PXRMDLLA",33,0)
EXP(TIEN,DCUR,DTTYP) ;Expand taxonomy codes
"RTN","PXRMDLLA",34,0)
 N CODES,CNT,FILE,LIT,CAT
"RTN","PXRMDLLA",35,0)
 S FILE=$S(DTTYP="POV":80,DTTYP="CPT":81,1:"") Q:'FILE
"RTN","PXRMDLLA",36,0)
 S LIT="Selectable "_$S(FILE=80:"Diagnoses:",1:"Procedures:")
"RTN","PXRMDLLA",37,0)
 S CAT=$P($G(^PXD(811.2,TIEN,0)),U)
"RTN","PXRMDLLA",38,0)
 ;
"RTN","PXRMDLLA",39,0)
 S OCNT=OCNT+1
"RTN","PXRMDLLA",40,0)
 S ORY(OCNT)=3_U_DITEM_U_U_DTTYP_U_U_U_U_U_CAT_U_LIT
"RTN","PXRMDLLA",41,0)
 ;Get selectable codes
"RTN","PXRMDLLA",42,0)
 D CODES(FILE,TIEN,.CODES)
"RTN","PXRMDLLA",43,0)
 S CNT=0
"RTN","PXRMDLLA",44,0)
 ;Save selectable codes as type 5 records
"RTN","PXRMDLLA",45,0)
 F  S CNT=$O(CODES(CNT)) Q:'CNT  D
"RTN","PXRMDLLA",46,0)
 .S OCNT=OCNT+1,ORY(OCNT)=5_U_DITEM_U_U_DTTYP_U_U_CODES(CNT)
"RTN","PXRMDLLA",47,0)
 Q
"RTN","PXRMDLLA",48,0)
 ;
"RTN","PXRMDLLA",49,0)
FREC(DFIEN,DFTYP) ;Build type 3 record
"RTN","PXRMDLLA",50,0)
 ;Dialog type/text and resolution  
"RTN","PXRMDLLA",51,0)
 S DNAM=$$NAME(DFIEN,DFTYP),DCOD=$$CODE(DFIEN,DFTYP)
"RTN","PXRMDLLA",52,0)
 ;Translate vitals ien to PCE code - This will need a DBIA
"RTN","PXRMDLLA",53,0)
 I DPCE="VIT" D
"RTN","PXRMDLLA",54,0)
 .S DFIEN=$$GET1^DIQ(120.51,DFIEN,7,"E")
"RTN","PXRMDLLA",55,0)
 .;Vitals Caption
"RTN","PXRMDLLA",56,0)
 .S DVIT=$P($G(^PXRMD(801.41,DITEM,2)),U,4)
"RTN","PXRMDLLA",57,0)
 I DFTYP]"" D
"RTN","PXRMDLLA",58,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",59,0)
 .S ORY(OCNT)=3_U_DITEM_U_U_DPCE_U_DEXC_U_DFIEN_U_DCOD_U_DNAM_U_U_DVIT
"RTN","PXRMDLLA",60,0)
 .;Get order type for orderable items
"RTN","PXRMDLLA",61,0)
 .S:DPCE="Q" $P(ORY(OCNT),U,11)=$P($G(^ORD(101.41,DFIEN,0)),U,4)
"RTN","PXRMDLLA",62,0)
 .;If mental health check if a GAF score
"RTN","PXRMDLLA",63,0)
 .I DPCE="MH",DFIEN D
"RTN","PXRMDLLA",64,0)
 ..I $P($G(^YTT(601,DFIEN,0)),U)="GAF" S $P(ORY(OCNT),U,12)=1
"RTN","PXRMDLLA",65,0)
 Q
"RTN","PXRMDLLA",66,0)
 ;
"RTN","PXRMDLLA",67,0)
GUI(IEN) ;Work out prompt type for PCE
"RTN","PXRMDLLA",68,0)
 Q:IEN="" ""
"RTN","PXRMDLLA",69,0)
 N SUB S SUB=$O(^PXRMD(801.42,"AB",IEN,""))
"RTN","PXRMDLLA",70,0)
 Q:'SUB ""
"RTN","PXRMDLLA",71,0)
 Q $P($G(^PXRMD(801.42,SUB,0)),U)
"RTN","PXRMDLLA",72,0)
 ;
"RTN","PXRMDLLA",73,0)
LOAD(DITEM,DCUR,DTTYP) ;Load dialog questions into array
"RTN","PXRMDLLA",74,0)
 N DARRAY,DCOD,DEXC,DFIND,DFIEN,DFTYP,DNAM,DPCE,DRES,DSEQ,DSUB,DTYP,OCNT
"RTN","PXRMDLLA",75,0)
 N DVIT
"RTN","PXRMDLLA",76,0)
 ;
"RTN","PXRMDLLA",77,0)
 ;Build list of PCE codes
"RTN","PXRMDLLA",78,0)
 S DARRAY("AUTTEDT(")="PED"
"RTN","PXRMDLLA",79,0)
 S DARRAY("AUTTEXAM(")="XAM"
"RTN","PXRMDLLA",80,0)
 S DARRAY("AUTTHF(")="HF"
"RTN","PXRMDLLA",81,0)
 S DARRAY("AUTTIMM(")="IMM"
"RTN","PXRMDLLA",82,0)
 S DARRAY("AUTTSK(")="SK"
"RTN","PXRMDLLA",83,0)
 ;
"RTN","PXRMDLLA",84,0)
 S DARRAY("GMRD(120.51,")="VIT"
"RTN","PXRMDLLA",85,0)
 S DARRAY("ORD(101.41,")="Q"
"RTN","PXRMDLLA",86,0)
 S DARRAY("YTT(601,")="MH"
"RTN","PXRMDLLA",87,0)
 ;
"RTN","PXRMDLLA",88,0)
 S DARRAY("ICD9(")="POV"
"RTN","PXRMDLLA",89,0)
 S DARRAY("ICPT(")="CPT"
"RTN","PXRMDLLA",90,0)
 ;
"RTN","PXRMDLLA",91,0)
 S DARRAY("PXD(811.2,")="T" ;dialog cpt/pov is generated from taxonomy
"RTN","PXRMDLLA",92,0)
 ;
"RTN","PXRMDLLA",93,0)
 ;Get the dialog element
"RTN","PXRMDLLA",94,0)
 S OCNT=0,DTYP=$P($G(^PXRMD(801.41,DITEM,0)),U,4)
"RTN","PXRMDLLA",95,0)
 ;Finding detail
"RTN","PXRMDLLA",96,0)
 S DRES=$P($G(^PXRMD(801.41,DITEM,1)),U,3)
"RTN","PXRMDLLA",97,0)
 S DFIND=$P($G(^PXRMD(801.41,DITEM,1)),U,5)
"RTN","PXRMDLLA",98,0)
 S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2)
"RTN","PXRMDLLA",99,0)
 S DPCE="",DVIT="" I DFTYP'="" S DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",100,0)
 ;Exclude from P/N
"RTN","PXRMDLLA",101,0)
 S DEXC=$P($G(^PXRMD(801.41,DITEM,2)),U,3)
"RTN","PXRMDLLA",102,0)
 ;
"RTN","PXRMDLLA",103,0)
 ;Non taxonomy codes (3 - finding record)
"RTN","PXRMDLLA",104,0)
 I DPCE'="T" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",105,0)
 ;
"RTN","PXRMDLLA",106,0)
 ;Taxonomy codes need expanding (3 - finding record)
"RTN","PXRMDLLA",107,0)
 I DPCE="T" D EXP(DFIEN,DCUR,DTTYP)
"RTN","PXRMDLLA",108,0)
 ;
"RTN","PXRMDLLA",109,0)
 ;Prompt details (4 - prompt records)
"RTN","PXRMDLLA",110,0)
 N ARRAY,DTITLE,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",111,0)
 ;If not a taxonomy get prompts from dialog file
"RTN","PXRMDLLA",112,0)
 I DPCE'="T" D PROTH(DITEM)
"RTN","PXRMDLLA",113,0)
 ;If a taxonomy get details from general finding parameters (CPT/POV)
"RTN","PXRMDLLA",114,0)
 I DPCE="T" D
"RTN","PXRMDLLA",115,0)
 .;Quit if finding type not passed
"RTN","PXRMDLLA",116,0)
 .Q:DTTYP=""
"RTN","PXRMDLLA",117,0)
 .N RSUB,FNODE
"RTN","PXRMDLLA",118,0)
 .;Get parameter file node for this finding type
"RTN","PXRMDLLA",119,0)
 .S FNODE=$O(^PXRMD(801.45,"B",DTTYP,"")) Q:FNODE=""
"RTN","PXRMDLLA",120,0)
 .;Derive resolution from line ien 1=done 2=done elsewhere
"RTN","PXRMDLLA",121,0)
 .S RSUB=DCUR+1 I (RSUB<1)!(RSUB>2) Q
"RTN","PXRMDLLA",122,0)
 .;Get details from 811.5
"RTN","PXRMDLLA",123,0)
 .D PRTAX(FNODE,RSUB)
"RTN","PXRMDLLA",124,0)
 ;Return array of type 4 records
"RTN","PXRMDLLA",125,0)
 S DSEQ=""
"RTN","PXRMDLLA",126,0)
 F  S DSEQ=$O(ARRAY(DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",127,0)
 .S OCNT=OCNT+1
"RTN","PXRMDLLA",128,0)
 .S ORY(OCNT)=4_U_DITEM_U_DSEQ_U_ARRAY(DSEQ)
"RTN","PXRMDLLA",129,0)
 ;
"RTN","PXRMDLLA",130,0)
 ;Get progress note text if defined
"RTN","PXRMDLLA",131,0)
 I DPCE'="T" D:'DEXC PTXT(DITEM)
"RTN","PXRMDLLA",132,0)
 ;Additional findings
"RTN","PXRMDLLA",133,0)
 N FASUB
"RTN","PXRMDLLA",134,0)
 S FASUB=0
"RTN","PXRMDLLA",135,0)
 F  S FASUB=$O(^PXRMD(801.41,DITEM,3,FASUB)) Q:'FASUB  D
"RTN","PXRMDLLA",136,0)
 .S DFIND=$P($G(^PXRMD(801.41,DITEM,3,FASUB,0)),U)
"RTN","PXRMDLLA",137,0)
 .S DFIEN=$P(DFIND,";"),DFTYP=$P(DFIND,";",2) Q:DFTYP=""  Q:DFIEN=""
"RTN","PXRMDLLA",138,0)
 .S DVIT="",DPCE=$G(DARRAY(DFTYP))
"RTN","PXRMDLLA",139,0)
 .I DPCE'="" D FREC(DFIEN,DFTYP)
"RTN","PXRMDLLA",140,0)
 Q
"RTN","PXRMDLLA",141,0)
 ;
"RTN","PXRMDLLA",142,0)
 ;Returns item name
"RTN","PXRMDLLA",143,0)
NAME(DFIEN,DFTYP) ;
"RTN","PXRMDLLA",144,0)
 Q:DFTYP="" ""
"RTN","PXRMDLLA",145,0)
 Q:DFIEN="" ""
"RTN","PXRMDLLA",146,0)
 N NAME,FGLOB,POSN
"RTN","PXRMDLLA",147,0)
 I DFTYP["ICD9" S NAME=$P($G(^ICD9(DFIEN,1)),U) Q:NAME]"" NAME
"RTN","PXRMDLLA",148,0)
 S POSN=2
"RTN","PXRMDLLA",149,0)
 S:DFTYP["AUTT" POSN=1 S:DFTYP["AUTTEDT" POSN=4 S:DFTYP["ICD" POSN=3
"RTN","PXRMDLLA",150,0)
 S FGLOB=U_DFTYP_DFIEN_",0)",NAME=$P($G(@FGLOB),U,POSN)
"RTN","PXRMDLLA",151,0)
 I (POSN>1),NAME="" S NAME=$P($G(@FGLOB),U)
"RTN","PXRMDLLA",152,0)
 I NAME="" S NAME=DFIEN
"RTN","PXRMDLLA",153,0)
 Q NAME
"RTN","PXRMDLLA",154,0)
 ;
"RTN","PXRMDLLA",155,0)
PROTH(IEN) ; Additional prompts defined in 801.41
"RTN","PXRMDLLA",156,0)
 N DDATA,DDEF,DIEN,DEXC,DGUI,DNAME,DOVR,DREQ,DSEQ,DSNL,DSUB,DTXT,DTYP
"RTN","PXRMDLLA",157,0)
 S DSEQ=0
"RTN","PXRMDLLA",158,0)
 F  S DSEQ=$O(^PXRMD(801.41,IEN,10,"B",DSEQ)) Q:'DSEQ  D
"RTN","PXRMDLLA",159,0)
 .;Get prompts in sequence
"RTN","PXRMDLLA",160,0)
 .S DSUB=$O(^PXRMD(801.41,IEN,10,"B",DSEQ,"")) Q:'DSUB
"RTN","PXRMDLLA",161,0)
 .;Prompt ien
"RTN","PXRMDLLA",162,0)
 .S DIEN=$P($G(^PXRMD(801.41,IEN,10,DSUB,0)),U,2) Q:'DIEN
"RTN","PXRMDLLA",163,0)
 .;Ignore disabled components, and those that are not prompts
"RTN","PXRMDLLA",164,0)
 .Q:($P($G(^PXRMD(801.41,DIEN,0)),U,3)]"")!("PF"'[$P($G(^(0)),U,4))
"RTN","PXRMDLLA",165,0)
 .;Set defaults to null
"RTN","PXRMDLLA",166,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",167,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",168,0)
 .S DNAME=$P($G(^PXRMD(801.41,DIEN,0)),U),DGUI=$$GUI(DIEN)
"RTN","PXRMDLLA",169,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",170,0)
 .S DTYP=$P($G(^PXRMD(801.41,DIEN,0)),U,4)
"RTN","PXRMDLLA",171,0)
 .I "PF"[DTYP D
"RTN","PXRMDLLA",172,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",173,0)
 ..S DDATA=$G(^PXRMD(801.41,DIEN,2)),DTXT=$P(DDATA,U,4)
"RTN","PXRMDLLA",174,0)
 ..;Default value or forced value
"RTN","PXRMDLLA",175,0)
 ..S:DTYP="P" DDEF=$P(DDATA,U) S:DTYP="F" DDEF=$P(DDATA,U,2)
"RTN","PXRMDLLA",176,0)
 ..;Override caption/start new line/exclude PN from dialog file
"RTN","PXRMDLLA",177,0)
 ..S DDATA=$G(^PXRMD(801.41,IEN,10,DSUB,0)),DREQ=$P(DDATA,U,9)
"RTN","PXRMDLLA",178,0)
 ..S DOVR=$P(DDATA,U,6),DSNL=$P(DDATA,U,7),DEXC=$P(DDATA,U,8)
"RTN","PXRMDLLA",179,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",180,0)
 ..;Convert date to fileman format
"RTN","PXRMDLLA",181,0)
 ..I DGUI="VST_DATE",DDEF["T" S DDEF=$$DT^XLFDT()
"RTN","PXRMDLLA",182,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",183,0)
 Q
"RTN","PXRMDLLA",184,0)
 ;
"RTN","PXRMDLLA",185,0)
PRTAX(FNODE,RSUB) ;Get all additional fields for this resolution type
"RTN","PXRMDLLA",186,0)
 N ACNT,ASUB
"RTN","PXRMDLLA",187,0)
 N DDATA,DDEF,DEXC,DGUI,DNAME,DREQ,DSEQ,DSUB,DTYP
"RTN","PXRMDLLA",188,0)
 S ASUB=0,DSEQ=0
"RTN","PXRMDLLA",189,0)
 F  S ASUB=$O(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB)) Q:'ASUB  D
"RTN","PXRMDLLA",190,0)
 .S DDATA=$G(^PXRMD(801.45,FNODE,1,RSUB,5,ASUB,0)) Q:DDATA=""
"RTN","PXRMDLLA",191,0)
 .;Ignore if disabled
"RTN","PXRMDLLA",192,0)
 .I $P(DDATA,U,3)=1 Q
"RTN","PXRMDLLA",193,0)
 .S DSUB=$P(DDATA,U) Q:DDATA=""
"RTN","PXRMDLLA",194,0)
 .S DSEQ=DSEQ+1
"RTN","PXRMDLLA",195,0)
 .;Set defaults to null
"RTN","PXRMDLLA",196,0)
 .S DDEF="",DEXC="",DREQ="",DSNL=""
"RTN","PXRMDLLA",197,0)
 .;Prompt name and GUI process (quit if null)
"RTN","PXRMDLLA",198,0)
 .S DNAME=$P($G(^PXRMD(801.41,DSUB,0)),U),DGUI=$$GUI(DSUB)
"RTN","PXRMDLLA",199,0)
 .;Type Prompt or Forced
"RTN","PXRMDLLA",200,0)
 .S DTYP=$P($G(^PXRMD(801.41,DSUB,0)),U,4)
"RTN","PXRMDLLA",201,0)
 .I DTYP="P" D
"RTN","PXRMDLLA",202,0)
 ..S DREQ=$P(DDATA,U,2),DTXT=$P($G(^PXRMD(801.41,DSUB,2)),U,4)
"RTN","PXRMDLLA",203,0)
 ..;Override caption/start new line/exclude from PN from finding type 
"RTN","PXRMDLLA",204,0)
 ..S DOVR=$P(DDATA,U,5),DSNL=$P(DDATA,U,6),DEXC=$P(DDATA,U,7)
"RTN","PXRMDLLA",205,0)
 ..S DNAME=DTXT I DOVR]"" S DNAME=DOVR
"RTN","PXRMDLLA",206,0)
 ..;Required/Prompt caption
"RTN","PXRMDLLA",207,0)
 ..S DDATA=$G(^PXRMD(801.41,DSUB,2))
"RTN","PXRMDLLA",208,0)
 .S ARRAY(DSEQ)=DGUI_U_DEXC_U_DDEF_U_DTYP_U_DNAME_U_DSNL_U_DREQ
"RTN","PXRMDLLA",209,0)
 Q
"RTN","PXRMDLLA",210,0)
 ;
"RTN","PXRMDLLA",211,0)
PTXT(ITEM) ;Get progress note (WP) text for type 6 records
"RTN","PXRMDLLA",212,0)
 N LAST,NULL,SUB,TEXT S SUB=0,LAST=0
"RTN","PXRMDLLA",213,0)
 F  S SUB=$O(^PXRMD(801.41,ITEM,35,SUB)) Q:'SUB  D
"RTN","PXRMDLLA",214,0)
 .S TEXT=$G(^PXRMD(801.41,ITEM,35,SUB,0))
"RTN","PXRMDLLA",215,0)
 .S NULL=0 I (TEXT="")!($E(TEXT)=" ") S NULL=1
"RTN","PXRMDLLA",216,0)
 .I LAST,'NULL S TEXT="<br>"_TEXT
"RTN","PXRMDLLA",217,0)
 .S LAST=0 I NULL S TEXT="<br>"_TEXT,LAST=1
"RTN","PXRMDLLA",218,0)
 .S OCNT=OCNT+1,ORY(OCNT)=6_U_ITEM_U_U_TEXT
"RTN","PXRMDLLA",219,0)
 Q
"RTN","PXRMDLLA",220,0)
 ;
"RTN","PXRMDLLA",221,0)
TOK(TIEN,TYPE) ;Check if selectable codes exist
"RTN","PXRMDLLA",222,0)
 N DATA,FOUND,SUB
"RTN","PXRMDLLA",223,0)
 S FOUND=0,SUB=0
"RTN","PXRMDLLA",224,0)
 F  S SUB=$O(^PXD(811.2,TIEN,TYPE,SUB)) Q:'SUB  D  Q:FOUND
"RTN","PXRMDLLA",225,0)
 .S DATA=$G(^PXD(811.2,TIEN,TYPE,SUB,0)) Q:DATA=""
"RTN","PXRMDLLA",226,0)
 .;Ignore disabled codes
"RTN","PXRMDLLA",227,0)
 .I '$P(DATA,U,3) S FOUND=1
"RTN","PXRMDLLA",228,0)
 Q FOUND
"RTN","PXRMDLLA",229,0)
 ;
"RTN","PXRMDLLA",230,0)
TEST(ORY,DITEM,DCUR,DTTYP) ;
"RTN","PXRMDLLA",231,0)
 D LOAD(DITEM,DCUR,DTTYP)
"RTN","PXRMDLLA",232,0)
 Q
"RTN","PXRMDRCL")
0^15^B11856488
"RTN","PXRMDRCL",1,0)
PXRMDRCL ; SLC/PKR - Handle VA DRUG CLASS findings. ;09/28/2000
"RTN","PXRMDRCL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDRCL",3,0)
 ;
"RTN","PXRMDRCL",4,0)
 ;=======================================================================
"RTN","PXRMDRCL",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug class (file #50.605) findings.
"RTN","PXRMDRCL",6,0)
 N DRCLIEN,FIND0,FINDING
"RTN","PXRMDRCL",7,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",8,0)
 F  S DRCLIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",9,0)
 . S FINDING=""
"RTN","PXRMDRCL",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PS(50.605,",DRCLIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRCL",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",12,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,"",FINDING,.FIEVAL)
"RTN","PXRMDRCL",13,0)
 Q
"RTN","PXRMDRCL",14,0)
 ;
"RTN","PXRMDRCL",15,0)
 ;=======================================================================
"RTN","PXRMDRCL",16,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug class (file #50.605) terms.
"RTN","PXRMDRCL",17,0)
 N DRCLIEN,FIND0,TFIND0,TFINDING
"RTN","PXRMDRCL",18,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRCL",19,0)
 S DRCLIEN=""
"RTN","PXRMDRCL",20,0)
 F  S DRCLIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN)) Q:+DRCLIEN=0  D
"RTN","PXRMDRCL",21,0)
 . S TFINDING=""
"RTN","PXRMDRCL",22,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PS(50.605,",DRCLIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRCL",23,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRCL",24,0)
 .. D FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,TFINDING,.TFIEVAL)
"RTN","PXRMDRCL",25,0)
 Q
"RTN","PXRMDRCL",26,0)
 ;
"RTN","PXRMDRCL",27,0)
 ;=======================================================================
"RTN","PXRMDRCL",28,0)
FIEVAL(DFN,DRCLIEN,FIND0,TFIND0,FINDING,FIEVAL) ;
"RTN","PXRMDRCL",29,0)
 N DATE,DRUGCLAS,DRUG,DRUGIEN,DSUP,LDATE,RDATE,SDATE,STATUS,VALID
"RTN","PXRMDRCL",30,0)
 S DRUGCLAS=$$CLASS2^PSNAPIS(DRCLIEN)
"RTN","PXRMDRCL",31,0)
 ;Use the "VAC" cross-reference on file 50 to find all drugs in this
"RTN","PXRMDRCL",32,0)
 ;class
"RTN","PXRMDRCL",33,0)
 S DATE=0
"RTN","PXRMDRCL",34,0)
 S DRUGIEN=0
"RTN","PXRMDRCL",35,0)
 F  S DRUGIEN=$O(^PSDRUG("VAC",DRCLIEN,DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRCL",36,0)
 . S DRUG=$$GET1^DIQ(50,DRUGIEN,.01)
"RTN","PXRMDRCL",37,0)
 . D LDATE^PXRMDRUG(DFN,DRUG,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDRCL",38,0)
 . I LDATE>DATE D
"RTN","PXRMDRCL",39,0)
 .. S DATE=LDATE
"RTN","PXRMDRCL",40,0)
 .. S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMDRCL",41,0)
 .. S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRCL",42,0)
 .. I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRCL",43,0)
 .. I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRCL",44,0)
 .. I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDRCL",45,0)
 .. S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRCL",46,0)
 ;If the last date is 0 then there is no release date or stop date
"RTN","PXRMDRCL",47,0)
 ;and the finding is false.
"RTN","PXRMDRCL",48,0)
 I +DATE=0 D  Q
"RTN","PXRMDRCL",49,0)
 . K FIEVAL(FINDING)
"RTN","PXRMDRCL",50,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",51,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRCL",52,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRCL",53,0)
 S FIEVAL(FINDING,"DRUG CLASS")=DRUGCLAS
"RTN","PXRMDRCL",54,0)
 S FIEVAL(FINDING,"FINDING")=DRCLIEN_";PS(50.605,"
"RTN","PXRMDRCL",55,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRCL",56,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMDRCL",57,0)
 I 'VALID D
"RTN","PXRMDRCL",58,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRCL",59,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRCL",60,0)
 Q
"RTN","PXRMDRCL",61,0)
 ;
"RTN","PXRMDRCL",62,0)
 ;=======================================================================
"RTN","PXRMDRCL",63,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRCL",64,0)
 ;maintenance output.
"RTN","PXRMDRCL",65,0)
 N DATE,DRUG,DRUGCLAS,TEMP
"RTN","PXRMDRCL",66,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRCL",67,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRCL",68,0)
 S TEMP=TEMP_" Drug Class: "
"RTN","PXRMDRCL",69,0)
 S DRUGCLAS=FIEVAL(FINDING,"DRUG CLASS")
"RTN","PXRMDRCL",70,0)
 S TEMP=TEMP_$P(DRUGCLAS,U,1)_"-"_$P(DRUGCLAS,U,2)
"RTN","PXRMDRCL",71,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRCL",72,0)
 S TEMP=TEMP_" (Drug: "_DRUG_")"
"RTN","PXRMDRCL",73,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRCL",74,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRCL",75,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",76,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",77,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRCL",78,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRCL",79,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply:"_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRCL",80,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date:"_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDRCL",81,0)
 S NLINES=NLINES+1
"RTN","PXRMDRCL",82,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRCL",83,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRCL",84,0)
 . N UID
"RTN","PXRMDRCL",85,0)
 . S UID="DRUG CLASS "_DRUGCLAS
"RTN","PXRMDRCL",86,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRCL",87,0)
 Q
"RTN","PXRMDRCL",88,0)
 ;
"RTN","PXRMDRUG")
0^17^B36009083
"RTN","PXRMDRUG",1,0)
PXRMDRUG ; SLC/PKR - Handle drug findings. ;01/31/2001
"RTN","PXRMDRUG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMDRUG",3,0)
 ;
"RTN","PXRMDRUG",4,0)
 ;=======================================================================
"RTN","PXRMDRUG",5,0)
BLDCACHE(DFN) ;Build the patient drug cache.
"RTN","PXRMDRUG",6,0)
 N PXRMDFN S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMDRUG",7,0)
 K ^TMP("PS",$J),^XTMP(PXRMDFN,"PSDRUG")
"RTN","PXRMDRUG",8,0)
 N DRUG,DRUGIEN,DSUP,IND,OITEM,ORDER,POI,RDATE,SDATE,STATUS,TEMP
"RTN","PXRMDRUG",9,0)
 ;Start the search for drugs on the patient's date of birth
"RTN","PXRMDRUG",10,0)
 ;to make sure we get all of them.
"RTN","PXRMDRUG",11,0)
 D OCL^PSOORRL(DFN,PXRMDOB,"")
"RTN","PXRMDRUG",12,0)
 S IND=0
"RTN","PXRMDRUG",13,0)
 F  S IND=$O(^TMP("PS",$J,IND)) Q:+IND=0  D
"RTN","PXRMDRUG",14,0)
 . S TEMP=^TMP("PS",$J,IND,0)
"RTN","PXRMDRUG",15,0)
 . S ORDER=$P(TEMP,U,1)
"RTN","PXRMDRUG",16,0)
 . I $L(ORDER)=0 Q
"RTN","PXRMDRUG",17,0)
 . S DRUG=$P(TEMP,U,2)
"RTN","PXRMDRUG",18,0)
 . S STATUS=$P(TEMP,U,9)
"RTN","PXRMDRUG",19,0)
 .;Look for DRUG file entries, if not there then probably pharmacy
"RTN","PXRMDRUG",20,0)
 .;orderable item.
"RTN","PXRMDRUG",21,0)
 . I $L(DRUG)=0 S DRUGIEN=0
"RTN","PXRMDRUG",22,0)
 . E  S DRUGIEN=+$O(^PSDRUG("B",DRUG,""))
"RTN","PXRMDRUG",23,0)
 . I DRUGIEN>0 D
"RTN","PXRMDRUG",24,0)
 .. S RDATE=$P(TEMP,U,16)
"RTN","PXRMDRUG",25,0)
 .. S DSUP=$P(TEMP,U,17)
"RTN","PXRMDRUG",26,0)
 .. S DATE=+$$FMADD^XLFDT(RDATE,DSUP)
"RTN","PXRMDRUG",27,0)
 .. S ^XTMP(PXRMDFN,"PSDRUG",DRUG,DATE)=ORDER_U_STATUS_U_RDATE_U_DSUP
"RTN","PXRMDRUG",28,0)
 . E  S POI(ORDER)=""
"RTN","PXRMDRUG",29,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",30,0)
 ;Process the pharmacy orderable item list.
"RTN","PXRMDRUG",31,0)
 S ORDER=""
"RTN","PXRMDRUG",32,0)
 F  S ORDER=$O(POI(ORDER)) Q:ORDER=""  D
"RTN","PXRMDRUG",33,0)
 . D OEL^PSOORRL(DFN,ORDER)
"RTN","PXRMDRUG",34,0)
 . I '$D(^TMP("PS",$J,"DD")) K ^TMP("PS",$J) Q
"RTN","PXRMDRUG",35,0)
 . S SDATE=$P(^TMP("PS",$J,0),U,3)
"RTN","PXRMDRUG",36,0)
 . I (SDATE="") D  Q
"RTN","PXRMDRUG",37,0)
 .. I ($P(ORDER,";",1)'["P")!($P(ORDER,";",2)'="I") D
"RTN","PXRMDRUG",38,0)
 ... N XMSUB
"RTN","PXRMDRUG",39,0)
 ... K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDRUG",40,0)
 ... S XMSUB="CLINICAL REMINDER DATA PROBLEM, INPATIENT MEDICATION"
"RTN","PXRMDRUG",41,0)
 ... S ^TMP("PXRMXMZ",$J,1,0)="Warning - Pharmacy order "_ORDER_", for patient DFN= "_DFN_","
"RTN","PXRMDRUG",42,0)
 ... S ^TMP("PXRMXMZ",$J,2,0)="is missing the stop date."
"RTN","PXRMDRUG",43,0)
 ... S ^TMP("PXRMXMZ",$J,3,0)="This indicates a possible data problem."
"RTN","PXRMDRUG",44,0)
 ... D SEND^PXRMMSG(XMSUB)
"RTN","PXRMDRUG",45,0)
 . F IND=+$G(^TMP("PS",$J,"DD",0)) Q:+IND=0  D
"RTN","PXRMDRUG",46,0)
 ..;Get the dispense drug.
"RTN","PXRMDRUG",47,0)
 .. S DRUGIEN=+$P(^TMP("PS",$J,"DD",IND,0),U,1)
"RTN","PXRMDRUG",48,0)
 .. I (DRUGIEN="") D  Q
"RTN","PXRMDRUG",49,0)
 ... I ($P(ORDER,";",1)'["P")!($P(ORDER,";",2)'="I") D
"RTN","PXRMDRUG",50,0)
 .... N XMSUB
"RTN","PXRMDRUG",51,0)
 .... K ^TMP("PXRMXMZ",$J)
"RTN","PXRMDRUG",52,0)
 .... S XMSUB="CLINICAL REMINDER DATA PROBLEM, INPATIENT MEDICATION"
"RTN","PXRMDRUG",53,0)
 .... S ^TMP("PXRMXMZ",$J,1,0)="Warning - Pharmacy order "_ORDER_", for patient DFN= "_DFN_","
"RTN","PXRMDRUG",54,0)
 .... S ^TMP("PXRMXMZ",$J,2,0)="is missing the dispense drug."
"RTN","PXRMDRUG",55,0)
 .... S OITEM=+$P(^TMP("PS",$J,"DD",IND,0),U,4)
"RTN","PXRMDRUG",56,0)
 .... I OITEM>0 S OITEM=$P(^ORD(101.43,OITEM,0),U,1)
"RTN","PXRMDRUG",57,0)
 .... E  S OITEM="Missing"
"RTN","PXRMDRUG",58,0)
 .... S ^TMP("PXRMXMZ",$J,3,0)="Orderable item: "_OITEM
"RTN","PXRMDRUG",59,0)
 .... S ^TMP("PXRMXMZ",$J,4,0)="This indicates a possible data problem."
"RTN","PXRMDRUG",60,0)
 .... D SEND^PXRMMSG(XMSUB)
"RTN","PXRMDRUG",61,0)
 .. S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",62,0)
 .. S ^XTMP(PXRMDFN,"PSDRUG",DRUG,SDATE)=ORDER_U_STATUS_U_SDATE
"RTN","PXRMDRUG",63,0)
 . K ^TMP("PS",$J)
"RTN","PXRMDRUG",64,0)
 K ^TMP("PS",$J)
"RTN","PXRMDRUG",65,0)
 Q
"RTN","PXRMDRUG",66,0)
 ;
"RTN","PXRMDRUG",67,0)
 ;=======================================================================
"RTN","PXRMDRUG",68,0)
EVALFI(DFN,FIEVAL) ;Evaluate drug (file #50) findings.
"RTN","PXRMDRUG",69,0)
 N DRUGIEN,FIND0,FIND3,FINDING
"RTN","PXRMDRUG",70,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",71,0)
 F  S DRUGIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",72,0)
 . S FINDING=""
"RTN","PXRMDRUG",73,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PSDRUG(",DRUGIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMDRUG",74,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",75,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMDRUG",76,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMDRUG",77,0)
 Q
"RTN","PXRMDRUG",78,0)
 ;
"RTN","PXRMDRUG",79,0)
 ;=======================================================================
"RTN","PXRMDRUG",80,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate drug (file #50) terms.
"RTN","PXRMDRUG",81,0)
 N DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING
"RTN","PXRMDRUG",82,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMDRUG",83,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMDRUG",84,0)
 S DRUGIEN=""
"RTN","PXRMDRUG",85,0)
 F  S DRUGIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN)) Q:+DRUGIEN=0  D
"RTN","PXRMDRUG",86,0)
 . S TFINDING=""
"RTN","PXRMDRUG",87,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PSDRUG(",DRUGIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMDRUG",88,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMDRUG",89,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMDRUG",90,0)
 .. D FIEVAL(DFN,DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMDRUG",91,0)
 Q
"RTN","PXRMDRUG",92,0)
 ;
"RTN","PXRMDRUG",93,0)
 ;=======================================================================
"RTN","PXRMDRUG",94,0)
FIEVAL(DFN,DRUGIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMDRUG",95,0)
 N CONVAL,DRUG,DSUP,LDATE,RDATE,SDATE,STATUS,VALID
"RTN","PXRMDRUG",96,0)
 S DRUG=$P(^PSDRUG(DRUGIEN,0),U,1)
"RTN","PXRMDRUG",97,0)
 D LDATE(DFN,DRUG,.DSUP,.LDATE,.RDATE,.SDATE,.STATUS)
"RTN","PXRMDRUG",98,0)
 ;If the last date is 0 then there is no release or stop date and the
"RTN","PXRMDRUG",99,0)
 ;finding is false.
"RTN","PXRMDRUG",100,0)
 I +LDATE=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMDRUG",101,0)
 ;Save the rest of the finding information.
"RTN","PXRMDRUG",102,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMDRUG",103,0)
 S FIEVAL(FINDING,"DATE")=LDATE
"RTN","PXRMDRUG",104,0)
 S FIEVAL(FINDING,"DRUG")=DRUG
"RTN","PXRMDRUG",105,0)
 I DSUP>0 S FIEVAL(FINDING,"DSUP")=DSUP
"RTN","PXRMDRUG",106,0)
 I RDATE>0 S FIEVAL(FINDING,"RDATE")=RDATE
"RTN","PXRMDRUG",107,0)
 I SDATE>0 S FIEVAL(FINDING,"SDATE")=SDATE
"RTN","PXRMDRUG",108,0)
 S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMDRUG",109,0)
 S FIEVAL(FINDING,"FINDING")=DRUGIEN_";PSDRUG("
"RTN","PXRMDRUG",110,0)
 ;Determine if the finding has expired.
"RTN","PXRMDRUG",111,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,LDATE)
"RTN","PXRMDRUG",112,0)
 I 'VALID D
"RTN","PXRMDRUG",113,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMDRUG",114,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMDRUG",115,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMDRUG",116,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,"")
"RTN","PXRMDRUG",117,0)
 I CONVAL'="" D
"RTN","PXRMDRUG",118,0)
 . I CONVAL D
"RTN","PXRMDRUG",119,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMDRUG",120,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMDRUG",121,0)
 . E  D
"RTN","PXRMDRUG",122,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMDRUG",123,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMDRUG",124,0)
 Q
"RTN","PXRMDRUG",125,0)
 ;
"RTN","PXRMDRUG",126,0)
 ;=======================================================================
"RTN","PXRMDRUG",127,0)
LDATE(DFN,DRUG,DSUP,LDATE,RDATE,SDATE,STATUS) ;Return last date patient is
"RTN","PXRMDRUG",128,0)
 ;on drug, refill date, days supply, or stop date, and status.
"RTN","PXRMDRUG",129,0)
 N DATE,ORDER,TEMP
"RTN","PXRMDRUG",130,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG")) D BLDCACHE(DFN)
"RTN","PXRMDRUG",131,0)
 I '$D(^XTMP(PXRMDFN,"PSDRUG",DRUG))="" S FIEVAL(FINDING)=0 Q 0
"RTN","PXRMDRUG",132,0)
 S (DSUP,RDATE,SDATE)=0
"RTN","PXRMDRUG",133,0)
 S LDATE=+$O(^XTMP(PXRMDFN,"PSDRUG",DRUG,""),-1)
"RTN","PXRMDRUG",134,0)
 I LDATE=0 Q
"RTN","PXRMDRUG",135,0)
 S TEMP=^XTMP(PXRMDFN,"PSDRUG",DRUG,LDATE)
"RTN","PXRMDRUG",136,0)
 S ORDER=$P(TEMP,U,1)
"RTN","PXRMDRUG",137,0)
 S STATUS=$P(TEMP,U,2)
"RTN","PXRMDRUG",138,0)
 S DATE=$P(TEMP,U,3)
"RTN","PXRMDRUG",139,0)
 I ORDER["U" S SDATE=DATE
"RTN","PXRMDRUG",140,0)
 E  D
"RTN","PXRMDRUG",141,0)
 . S RDATE=DATE
"RTN","PXRMDRUG",142,0)
 . S DSUP=$P(TEMP,U,4)
"RTN","PXRMDRUG",143,0)
 Q
"RTN","PXRMDRUG",144,0)
 ;
"RTN","PXRMDRUG",145,0)
 ;=======================================================================
"RTN","PXRMDRUG",146,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMDRUG",147,0)
 ;maintenance output.
"RTN","PXRMDRUG",148,0)
 N DATE,DRUG,TEMP
"RTN","PXRMDRUG",149,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMDRUG",150,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMDRUG",151,0)
 S TEMP=TEMP_" Drug: "
"RTN","PXRMDRUG",152,0)
 S DRUG=FIEVAL(FINDING,"DRUG")
"RTN","PXRMDRUG",153,0)
 S TEMP=TEMP_DRUG
"RTN","PXRMDRUG",154,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMDRUG",155,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMDRUG",156,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",157,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",158,0)
 S TEMP="Status: "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMDRUG",159,0)
 I $D(FIEVAL(FINDING,"RDATE")) S TEMP=TEMP_" Last release date: "_$$EDATE^PXRMDATE(FIEVAL(FINDING,"RDATE"))
"RTN","PXRMDRUG",160,0)
 I $D(FIEVAL(FINDING,"DSUP")) S TEMP=TEMP_" Days supply: "_FIEVAL(FINDING,"DSUP")
"RTN","PXRMDRUG",161,0)
 I $D(FIEVAL(FINDING,"SDATE")) S TEMP=TEMP_" Stop date: "_$$EDATE^PXRMDATE(FIEVAL(FINDING,"SDATE"))
"RTN","PXRMDRUG",162,0)
 S NLINES=NLINES+1
"RTN","PXRMDRUG",163,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMDRUG",164,0)
 I $D(PXRMDEV) D
"RTN","PXRMDRUG",165,0)
 . N UID
"RTN","PXRMDRUG",166,0)
 . S UID="DRUG "_DRUG
"RTN","PXRMDRUG",167,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMDRUG",168,0)
 Q
"RTN","PXRMDRUG",169,0)
 ;
"RTN","PXRMEDU")
0^30^B12792432
"RTN","PXRMEDU",1,0)
PXRMEDU ; SLC/PKR - Handle education findings. ;10/11/2000
"RTN","PXRMEDU",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMEDU",3,0)
 ;
"RTN","PXRMEDU",4,0)
 ;=======================================================================
"RTN","PXRMEDU",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate education findings.
"RTN","PXRMEDU",6,0)
 N EDUIEN,FIND0,FIND3,FINDING,INVDATE
"RTN","PXRMEDU",7,0)
 S EDUIEN=""
"RTN","PXRMEDU",8,0)
 F  S EDUIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",9,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",10,0)
 . S FINDING=""
"RTN","PXRMEDU",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEDT(",EDUIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEDU",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEDU",14,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMEDU",15,0)
 Q
"RTN","PXRMEDU",16,0)
 ;
"RTN","PXRMEDU",17,0)
 ;=======================================================================
"RTN","PXRMEDU",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate education terms.
"RTN","PXRMEDU",19,0)
 N EDUIEN,FIND0,FIND3,INVDATE,TFIND0,TFIND3,TFINDING
"RTN","PXRMEDU",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEDU",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEDU",22,0)
 S EDUIEN=""
"RTN","PXRMEDU",23,0)
 F  S EDUIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN)) Q:+EDUIEN=0  D
"RTN","PXRMEDU",24,0)
 . S INVDATE=$O(^AUPNVPED("AA",DFN,EDUIEN,""))
"RTN","PXRMEDU",25,0)
 . S TFINDING=""
"RTN","PXRMEDU",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEDT(",EDUIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEDU",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEDU",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMEDU",29,0)
 .. D FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMEDU",30,0)
 Q
"RTN","PXRMEDU",31,0)
 ;
"RTN","PXRMEDU",32,0)
 ;=======================================================================
"RTN","PXRMEDU",33,0)
FIEVAL(DFN,EDUIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMEDU",34,0)
 N CONVAL,DATE,IEN,IND,LOU,TEMP,VALID,VIEN
"RTN","PXRMEDU",35,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEDU",36,0)
 S IEN=$O(^AUPNVPED("AA",DFN,EDUIEN,INVDATE,""))
"RTN","PXRMEDU",37,0)
 S TEMP=$G(^AUPNVPED(IEN,0))
"RTN","PXRMEDU",38,0)
 S LOU=$P(TEMP,U,6)
"RTN","PXRMEDU",39,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEDU",40,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEDU",41,0)
 ;Save the rest of the finding information.
"RTN","PXRMEDU",42,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEDU",43,0)
 S FIEVAL(FINDING,"FINDING")=EDUIEN_";AUTTEDT("
"RTN","PXRMEDU",44,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVPED("
"RTN","PXRMEDU",45,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEDU",46,0)
 S FIEVAL(FINDING,"LEVEL OF UNDERSTANDING")=LOU
"RTN","PXRMEDU",47,0)
 S FIEVAL(FINDING,"VALUE")=LOU
"RTN","PXRMEDU",48,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEDU",49,0)
 ;Determine if the finding has expired.
"RTN","PXRMEDU",50,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEDU",51,0)
 I 'VALID D  Q
"RTN","PXRMEDU",52,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEDU",53,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEDU",54,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEDU",55,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,LOU)
"RTN","PXRMEDU",56,0)
 I CONVAL'="" D
"RTN","PXRMEDU",57,0)
 . I CONVAL D
"RTN","PXRMEDU",58,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEDU",59,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEDU",60,0)
 . E  D
"RTN","PXRMEDU",61,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEDU",62,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEDU",63,0)
 Q
"RTN","PXRMEDU",64,0)
 ;
"RTN","PXRMEDU",65,0)
 ;=======================================================================
"RTN","PXRMEDU",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEDU",67,0)
 ;maintenance output.
"RTN","PXRMEDU",68,0)
 N EDUIEN,EM,FIEN,IND,PNAME,LOU,TEMP,VDATE
"RTN","PXRMEDU",69,0)
 S EDUIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEDU",70,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEDU",71,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEDU",72,0)
 S LOU=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEDU",73,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEDU",74,0)
 S TEMP=TEMP_" Education: "
"RTN","PXRMEDU",75,0)
 S IND=$P(^AUPNVPED(EDUIEN,0),U,1)
"RTN","PXRMEDU",76,0)
 S PNAME=$P(^AUTTEDT(FIEN,0),U,4)
"RTN","PXRMEDU",77,0)
 I $L(PNAME)'>0 S PNAME=$P(^AUTTEDT(FIEN,0),U,1)
"RTN","PXRMEDU",78,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEDU",79,0)
 I $L(LOU)>0 D
"RTN","PXRMEDU",80,0)
 . S TEMP=TEMP_"; level of understanding - "
"RTN","PXRMEDU",81,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.16,.06,"",LOU,.EM)
"RTN","PXRMEDU",82,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEDU",83,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEDU",84,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEDU",85,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEDU",86,0)
 S NLINES=NLINES+1
"RTN","PXRMEDU",87,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEDU",88,0)
 I $D(PXRMDEV) D
"RTN","PXRMEDU",89,0)
 . N UID
"RTN","PXRMEDU",90,0)
 . S UID="EDUCATION "_PNAME
"RTN","PXRMEDU",91,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEDU",92,0)
 ;
"RTN","PXRMEDU",93,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEDU",94,0)
 I VDATE["E" D
"RTN","PXRMEDU",95,0)
 . N INDEX,VIEN
"RTN","PXRMEDU",96,0)
 . S INDEX="EDU-"_PNAME
"RTN","PXRMEDU",97,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEDU",98,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEDU",99,0)
 Q
"RTN","PXRMEDU",100,0)
 ;
"RTN","PXRMERRH")
0^12^B8878807
"RTN","PXRMERRH",1,0)
PXRMERRH ; SLC/PKR - Error handling routines. ;11/28/2000
"RTN","PXRMERRH",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMERRH",3,0)
 ;
"RTN","PXRMERRH",4,0)
 ;======================================================================
"RTN","PXRMERRH",5,0)
ERRHDLR ;PXRM error handler. Send a MailMan message to the mail group defined
"RTN","PXRMERRH",6,0)
 ;by the site and put the error in the error trap.
"RTN","PXRMERRH",7,0)
 N ERROR,MGIEN,MGROUP,NL,REMINDER,XMDUZ,XMSUB,XMY,XMZ
"RTN","PXRMERRH",8,0)
 ;
"RTN","PXRMERRH",9,0)
 ;Save the error then put it in the error trap, this saves the correct
"RTN","PXRMERRH",10,0)
 ;last global reference.
"RTN","PXRMERRH",11,0)
 S ERROR=$$EC^%ZOSV
"RTN","PXRMERRH",12,0)
 D ^%ZTER
"RTN","PXRMERRH",13,0)
 ;
"RTN","PXRMERRH",14,0)
 ;If this is a test run write out the error.
"RTN","PXRMERRH",15,0)
 I $D(PXRMDEV) W !,ERROR
"RTN","PXRMERRH",16,0)
 ;
"RTN","PXRMERRH",17,0)
 ;Make the sender the Postmaster.
"RTN","PXRMERRH",18,0)
 S XMDUZ=0.5
"RTN","PXRMERRH",19,0)
 S XMSUB="ERROR EVALUATING CLINICAL REMINDER"
"RTN","PXRMERRH",20,0)
 ;
"RTN","PXRMERRH",21,0)
RETRY ;Get the message number.
"RTN","PXRMERRH",22,0)
 D XMZ^XMA2
"RTN","PXRMERRH",23,0)
 I XMZ<1 G RETRY
"RTN","PXRMERRH",24,0)
 ;
"RTN","PXRMERRH",25,0)
 ;Load the message
"RTN","PXRMERRH",26,0)
 S ^XMB(3.9,XMZ,2,1,0)="The following error occurred:"
"RTN","PXRMERRH",27,0)
 S ^XMB(3.9,XMZ,2,2,0)=ERROR
"RTN","PXRMERRH",28,0)
 I +$G(PXRMITEM)>0 S REMINDER=$P(^PXD(811.9,PXRMITEM,0),U,1)
"RTN","PXRMERRH",29,0)
 E  D
"RTN","PXRMERRH",30,0)
 . S PXRMITEM=999999
"RTN","PXRMERRH",31,0)
 . S REMINDER="?"
"RTN","PXRMERRH",32,0)
 S ^XMB(3.9,XMZ,2,3,0)="While evaluating reminder "_REMINDER
"RTN","PXRMERRH",33,0)
 S ^XMB(3.9,XMZ,2,4,0)="For patient DFN="_DFN
"RTN","PXRMERRH",34,0)
 S ^XMB(3.9,XMZ,2,5,0)="The time of the error was "_$$FMTE^XLFDT($$NOW^XLFDT,"5Z")
"RTN","PXRMERRH",35,0)
 S ^XMB(3.9,XMZ,2,6,0)="See the error trap for complete details."
"RTN","PXRMERRH",36,0)
 S NL=6
"RTN","PXRMERRH",37,0)
 ;Look for specific error text to append to the message.
"RTN","PXRMERRH",38,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMERRH",39,0)
 . N ESOURCE,IND
"RTN","PXRMERRH",40,0)
 . S ESOURCE=""
"RTN","PXRMERRH",41,0)
 . F  S ESOURCE=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE)) Q:ESOURCE=""  D
"RTN","PXRMERRH",42,0)
 .. S IND=0
"RTN","PXRMERRH",43,0)
 .. F  S IND=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)) Q:IND=""  D
"RTN","PXRMERRH",44,0)
 ... S NL=NL+1
"RTN","PXRMERRH",45,0)
 ... S ^XMB(3.9,XMZ,2,NL,0)=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP",ESOURCE,IND)
"RTN","PXRMERRH",46,0)
 ;
"RTN","PXRMERRH",47,0)
 ;Send the message to the site defined mailgroup.
"RTN","PXRMERRH",48,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMERRH",49,0)
 ;If the mailgroup has not been defined send the message to the user.
"RTN","PXRMERRH",50,0)
 I MGIEN="" D
"RTN","PXRMERRH",51,0)
 . S MGROUP=DUZ
"RTN","PXRMERRH",52,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)=" "
"RTN","PXRMERRH",53,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="You received this message because your IRM has not set up a mailgroup"
"RTN","PXRMERRH",54,0)
 . S NL=NL+1,^XMB(3.9,XMZ,2,NL,0)="to receive Clinical Reminder errors; please notify them."
"RTN","PXRMERRH",55,0)
 . S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMERRH",56,0)
 E  S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMERRH",57,0)
 ;
"RTN","PXRMERRH",58,0)
 S XMY(MGROUP)=""
"RTN","PXRMERRH",59,0)
 D ENT1^XMD
"RTN","PXRMERRH",60,0)
 ;
"RTN","PXRMERRH",61,0)
 ;Mark that an error occured.
"RTN","PXRMERRH",62,0)
 I PXRMITEM=999999 Q
"RTN","PXRMERRH",63,0)
 S ^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")=""
"RTN","PXRMERRH",64,0)
 N PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL
"RTN","PXRMERRH",65,0)
 S (PCLOGIC,DUE,DUEDATE,RESDATE,FREQ)=""
"RTN","PXRMERRH",66,0)
 D FINAL^PXRMFOUT(PCLOGIC,DUE,DUEDATE,RESDATE,FREQ,.FIEVAL)
"RTN","PXRMERRH",67,0)
 ;
"RTN","PXRMERRH",68,0)
 ;Set the first line of ^TMP("PXRHM") to ERROR.
"RTN","PXRMERRH",69,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="ERROR"
"RTN","PXRMERRH",70,0)
 ;
"RTN","PXRMERRH",71,0)
 ;Clean up globals.
"RTN","PXRMERRH",72,0)
 K ^TMP("PXRM",$J)
"RTN","PXRMERRH",73,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMERRH",74,0)
 K ^TMP(PXRMPID,$J)
"RTN","PXRMERRH",75,0)
 ;
"RTN","PXRMERRH",76,0)
 ;Unwind the stack.
"RTN","PXRMERRH",77,0)
 D UNWIND^%ZTER
"RTN","PXRMERRH",78,0)
 Q
"RTN","PXRMERRH",79,0)
 ;
"RTN","PXRMEXAM")
0^31^B12406716
"RTN","PXRMEXAM",1,0)
PXRMEXAM ; SLC/PKR - Handle examination findings. ;10/11/2000
"RTN","PXRMEXAM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMEXAM",3,0)
 ;
"RTN","PXRMEXAM",4,0)
 ;=======================================================================
"RTN","PXRMEXAM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate exam findings.
"RTN","PXRMEXAM",6,0)
 N EXAMIEN,INVDATE,FIND0,FIND3,FINDING
"RTN","PXRMEXAM",7,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",8,0)
 F  S EXAMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",9,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",10,0)
 . S FINDING=""
"RTN","PXRMEXAM",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTEXAM(",EXAMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMEXAM",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEXAM",14,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMEXAM",15,0)
 Q
"RTN","PXRMEXAM",16,0)
 ;
"RTN","PXRMEXAM",17,0)
 ;=======================================================================
"RTN","PXRMEXAM",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate exam terms.
"RTN","PXRMEXAM",19,0)
 N EXAMIEN,FIND0,FIND3,INVDATE,LFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMEXAM",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMEXAM",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMEXAM",22,0)
 S EXAMIEN=""
"RTN","PXRMEXAM",23,0)
 F  S EXAMIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN)) Q:+EXAMIEN=0  D
"RTN","PXRMEXAM",24,0)
 . S INVDATE=$O(^AUPNVXAM("AA",DFN,EXAMIEN,""))
"RTN","PXRMEXAM",25,0)
 . S TFINDING=""
"RTN","PXRMEXAM",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTEXAM(",EXAMIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMEXAM",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMEXAM",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMEXAM",29,0)
 .. D FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMEXAM",30,0)
 Q
"RTN","PXRMEXAM",31,0)
 ;
"RTN","PXRMEXAM",32,0)
 ;=======================================================================
"RTN","PXRMEXAM",33,0)
FIEVAL(DFN,EXAMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMEXAM",34,0)
 N CONVAL,DATE,IEN,IND,RSLT,TEMP,VALID,VIEN
"RTN","PXRMEXAM",35,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMEXAM",36,0)
 S IEN=$O(^AUPNVXAM("AA",DFN,EXAMIEN,INVDATE,""))
"RTN","PXRMEXAM",37,0)
 S TEMP=$G(^AUPNVXAM(IEN,0))
"RTN","PXRMEXAM",38,0)
 S RSLT=$P(TEMP,U,4)
"RTN","PXRMEXAM",39,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMEXAM",40,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMEXAM",41,0)
 ;Save the rest of the finding information.
"RTN","PXRMEXAM",42,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMEXAM",43,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMEXAM",44,0)
 S FIEVAL(FINDING,"FINDING")=EXAMIEN_";AUTTEXAM("
"RTN","PXRMEXAM",45,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVXAM("
"RTN","PXRMEXAM",46,0)
 S FIEVAL(FINDING,"RESULT")=RSLT
"RTN","PXRMEXAM",47,0)
 S FIEVAL(FINDING,"VALUE")=RSLT
"RTN","PXRMEXAM",48,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMEXAM",49,0)
 ;Determine if the finding has expired.
"RTN","PXRMEXAM",50,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMEXAM",51,0)
 I 'VALID D  Q
"RTN","PXRMEXAM",52,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",53,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMEXAM",54,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMEXAM",55,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,RSLT)
"RTN","PXRMEXAM",56,0)
 I CONVAL'="" D
"RTN","PXRMEXAM",57,0)
 . I CONVAL D
"RTN","PXRMEXAM",58,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMEXAM",59,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMEXAM",60,0)
 . E  D
"RTN","PXRMEXAM",61,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMEXAM",62,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMEXAM",63,0)
 Q
"RTN","PXRMEXAM",64,0)
 ;
"RTN","PXRMEXAM",65,0)
 ;=======================================================================
"RTN","PXRMEXAM",66,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMEXAM",67,0)
 ;maintenance output.
"RTN","PXRMEXAM",68,0)
 N EXAMIEN,EM,FIEN,IND,PNAME,RSLT,TEMP,VDATE
"RTN","PXRMEXAM",69,0)
 S EXAMIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMEXAM",70,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMEXAM",71,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMEXAM",72,0)
 S RSLT=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMEXAM",73,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMEXAM",74,0)
 S TEMP=TEMP_" Exam: "
"RTN","PXRMEXAM",75,0)
 S IND=$P(^AUPNVXAM(EXAMIEN,0),U,1)
"RTN","PXRMEXAM",76,0)
 S PNAME=$P(^AUTTEXAM(FIEN,0),U,1)
"RTN","PXRMEXAM",77,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMEXAM",78,0)
 I $L(RSLT)>0 D
"RTN","PXRMEXAM",79,0)
 . S TEMP=TEMP_"; result - "
"RTN","PXRMEXAM",80,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.13,.04,"",RSLT,.EM)
"RTN","PXRMEXAM",81,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMEXAM",82,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMEXAM",83,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMEXAM",84,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMEXAM",85,0)
 S NLINES=NLINES+1
"RTN","PXRMEXAM",86,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMEXAM",87,0)
 I $D(PXRMDEV) D
"RTN","PXRMEXAM",88,0)
 . N UID
"RTN","PXRMEXAM",89,0)
 . S UID="EXAM "_PNAME
"RTN","PXRMEXAM",90,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMEXAM",91,0)
 ;
"RTN","PXRMEXAM",92,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMEXAM",93,0)
 I VDATE["E" D
"RTN","PXRMEXAM",94,0)
 . N INDEX,VIEN
"RTN","PXRMEXAM",95,0)
 . S INDEX="EXAM-"_PNAME
"RTN","PXRMEXAM",96,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMEXAM",97,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMEXAM",98,0)
 Q
"RTN","PXRMEXAM",99,0)
 ;
"RTN","PXRMFOUT")
0^73^B10274034
"RTN","PXRMFOUT",1,0)
PXRMFOUT ; SLC/PKR - Prepare the final reminder output. ;01/16/2001
"RTN","PXRMFOUT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMFOUT",3,0)
 ;
"RTN","PXRMFOUT",4,0)
 ;=======================================================================
"RTN","PXRMFOUT",5,0)
FINAL(PCLOGIC,RESLOGIC,DUE,DUEDATE,RESDATE,FREQ,FIEVAL) ;
"RTN","PXRMFOUT",6,0)
 ;Produce the final output.
"RTN","PXRMFOUT",7,0)
 ; 
"RTN","PXRMFOUT",8,0)
 ;Temporarily set CMB=CM
"RTN","PXRMFOUT",9,0)
 I PXRHM=4 S PXRHM=5
"RTN","PXRMFOUT",10,0)
 ;
"RTN","PXRMFOUT",11,0)
 ;If the component is CR (Reminders Due) and the reminder is not due
"RTN","PXRMFOUT",12,0)
 ;we are done.
"RTN","PXRMFOUT",13,0)
 I (PXRHM=0)&(DUE'["DUE") Q
"RTN","PXRMFOUT",14,0)
 ;
"RTN","PXRMFOUT",15,0)
 ;If the reminder is N/A do the N/A part for the summary and maintenance
"RTN","PXRMFOUT",16,0)
 ;components.
"RTN","PXRMFOUT",17,0)
 N NOOUTPUT
"RTN","PXRMFOUT",18,0)
 S NOOUTPUT=0
"RTN","PXRMFOUT",19,0)
 I 'PCLOGIC D
"RTN","PXRMFOUT",20,0)
 .;IGNORE ON N/A applies only to the Clinical Maintenance component.
"RTN","PXRMFOUT",21,0)
 . I PXRHM=5 D IGNNA(.NOOUTPUT)
"RTN","PXRMFOUT",22,0)
 . I 'NOOUTPUT D NAOUTPUT(RESDATE)
"RTN","PXRMFOUT",23,0)
 I NOOUTPUT Q
"RTN","PXRMFOUT",24,0)
 ;
"RTN","PXRMFOUT",25,0)
 ;If the reminder is applicable produce the due information.
"RTN","PXRMFOUT",26,0)
 I PCLOGIC D DUE(DUE,DUEDATE,RESDATE,FREQ)
"RTN","PXRMFOUT",27,0)
 ;
"RTN","PXRMFOUT",28,0)
 ;Produce the clinical maintenance output.
"RTN","PXRMFOUT",29,0)
 I PXRHM=5 D OUTPUT^PXRMOPT(PCLOGIC,RESLOGIC,RESDATE,.FIEVAL)
"RTN","PXRMFOUT",30,0)
 ;
"RTN","PXRMFOUT",31,0)
 ;If there is any information stored in ^TMP("PXRHM") Health Summary
"RTN","PXRMFOUT",32,0)
 ;will not display it unless ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM) has
"RTN","PXRMFOUT",33,0)
 ;data in it.
"RTN","PXRMFOUT",34,0)
 I $D(^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM))=10 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=" "
"RTN","PXRMFOUT",35,0)
 Q
"RTN","PXRMFOUT",36,0)
 ;
"RTN","PXRMFOUT",37,0)
 ;=======================================================================
"RTN","PXRMFOUT",38,0)
DUE(DUE,DUEDATE,RESDATE,FREQ) ;Create the due information.
"RTN","PXRMFOUT",39,0)
 ;
"RTN","PXRMFOUT",40,0)
 N LDATE,LDATEF,TEMP,TXT
"RTN","PXRMFOUT",41,0)
 ;
"RTN","PXRMFOUT",42,0)
 I RESDATE["E" S LDATEF=+RESDATE_U_"E"
"RTN","PXRMFOUT",43,0)
 I RESDATE["X" D
"RTN","PXRMFOUT",44,0)
 . S LDATEF=+RESDATE_U_"X"
"RTN","PXRMFOUT",45,0)
 . S LDATE=0
"RTN","PXRMFOUT",46,0)
 E  S LDATE=+RESDATE
"RTN","PXRMFOUT",47,0)
 I (+RESDATE)'>0 S LDATEF="unknown"
"RTN","PXRMFOUT",48,0)
 I '$D(LDATEF) S LDATEF=LDATE
"RTN","PXRMFOUT",49,0)
 ;
"RTN","PXRMFOUT",50,0)
 ;Immunizations may be marked as contraindicated. If that is the case
"RTN","PXRMFOUT",51,0)
 ;they are never due.
"RTN","PXRMFOUT",52,0)
 I $G(^TMP(PXRMPID,$J,"CONTRAINDICATED"))=1 D  Q
"RTN","PXRMFOUT",53,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="NEVER"_U_DUEDATE_U_LDATEF
"RTN","PXRMFOUT",54,0)
 ;
"RTN","PXRMFOUT",55,0)
 ;A reminder frequency of 0Y is a special case that means never show as
"RTN","PXRMFOUT",56,0)
 ;due.
"RTN","PXRMFOUT",57,0)
 I (FREQ="0Y") D  Q
"RTN","PXRMFOUT",58,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_LDATEF
"RTN","PXRMFOUT",59,0)
 ;
"RTN","PXRMFOUT",60,0)
 ;A reminder frequency of 99Y means do once in a lifetime. In this
"RTN","PXRMFOUT",61,0)
 ;case display null for the due date.
"RTN","PXRMFOUT",62,0)
 I 
"RTN","PXRMFOUT",63,0)
 I (LDATE>0)&(FREQ="99Y") D  Q
"RTN","PXRMFOUT",64,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="DONE"_U_""_U_LDATEF
"RTN","PXRMFOUT",65,0)
 ;
"RTN","PXRMFOUT",66,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=DUE_U_DUEDATE_U_LDATEF
"RTN","PXRMFOUT",67,0)
 Q
"RTN","PXRMFOUT",68,0)
 ;
"RTN","PXRMFOUT",69,0)
 ;=======================================================================
"RTN","PXRMFOUT",70,0)
IGNNA(NOOUTPUT) ;The reminder is N/A, determine if there is no Clinical
"RTN","PXRMFOUT",71,0)
 ;Maintenance output.
"RTN","PXRMFOUT",72,0)
 ;
"RTN","PXRMFOUT",73,0)
 S NOOUTPUT=1
"RTN","PXRMFOUT",74,0)
 ;
"RTN","PXRMFOUT",75,0)
 ;Get the IGNORE ON N/A information.
"RTN","PXRMFOUT",76,0)
 N IGNORE
"RTN","PXRMFOUT",77,0)
 S IGNORE=$P(^PXD(811.9,PXRMITEM,0),U,8)
"RTN","PXRMFOUT",78,0)
 ;
"RTN","PXRMFOUT",79,0)
 ;If the reminder is N/A and the ignore wildcard is set we are done.
"RTN","PXRMFOUT",80,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A")))&(IGNORE["*") Q
"RTN","PXRMFOUT",81,0)
 ;
"RTN","PXRMFOUT",82,0)
 ;Look for specific ignore codes.
"RTN","PXRMFOUT",83,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")))&(IGNORE["A") Q
"RTN","PXRMFOUT",84,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")))&(IGNORE["I") Q
"RTN","PXRMFOUT",85,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")) D  Q
"RTN","PXRMFOUT",86,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)=""
"RTN","PXRMFOUT",87,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",1)=^TMP(PXRMPID,$J,PXRMITEM,"N/A","INACTIVE")
"RTN","PXRMFOUT",88,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","RACE")))&(IGNORE["R") Q
"RTN","PXRMFOUT",89,0)
 I ($D(^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")))&(IGNORE["S") Q
"RTN","PXRMFOUT",90,0)
 ;If we got to here there are no ignore codes so return the N/A
"RTN","PXRMFOUT",91,0)
 ;information and turn the output on.
"RTN","PXRMFOUT",92,0)
 S NOOUTPUT=0
"RTN","PXRMFOUT",93,0)
 Q
"RTN","PXRMFOUT",94,0)
 ;
"RTN","PXRMFOUT",95,0)
 ;=======================================================================
"RTN","PXRMFOUT",96,0)
NAOUTPUT(RESDATE) ;Prepare the N/A output.
"RTN","PXRMFOUT",97,0)
 N DDATE
"RTN","PXRMFOUT",98,0)
 I RESDATE["E" S DDATE=+RESDATE_U_"E"
"RTN","PXRMFOUT",99,0)
 I RESDATE["X" S DDATE=+RESDATE_U_"X"
"RTN","PXRMFOUT",100,0)
 I '$D(DDATE) S DDATE=+RESDATE
"RTN","PXRMFOUT",101,0)
 I DDATE=0 S DDATE=""
"RTN","PXRMFOUT",102,0)
 S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM)="N/A"_U_U_DDATE
"RTN","PXRMFOUT",103,0)
 Q
"RTN","PXRMFOUT",104,0)
 ;
"RTN","PXRMGEDT")
0^64^B45680272
"RTN","PXRMGEDT",1,0)
PXRMGEDT ; SLC/PJH - PXRM General Edit/Add. ;11/08/2000
"RTN","PXRMGEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMGEDT",3,0)
 ;
"RTN","PXRMGEDT",4,0)
 ;
"RTN","PXRMGEDT",5,0)
 ;Called from protocol PXRM SELECTION ADD
"RTN","PXRMGEDT",6,0)
 ;
"RTN","PXRMGEDT",7,0)
ADD(TYP) ;
"RTN","PXRMGEDT",8,0)
 N DIC,DIDEL,DLAYGO,DTOUT,DUOUT,FILE,HED,PXRMHD,X,Y
"RTN","PXRMGEDT",9,0)
 W IORESET
"RTN","PXRMGEDT",10,0)
 ;
"RTN","PXRMGEDT",11,0)
 ;Ignore finding type parameters
"RTN","PXRMGEDT",12,0)
 I "FPAR"=TYP D DUMMY^PXRMRUTL H 1 Q
"RTN","PXRMGEDT",13,0)
 ;
"RTN","PXRMGEDT",14,0)
 ;Edit dialog
"RTN","PXRMGEDT",15,0)
 I "DLGE"=TYP D ADD^PXRMDEDT Q
"RTN","PXRMGEDT",16,0)
 ;
"RTN","PXRMGEDT",17,0)
 ;Allow auto generate of reminder dialogs
"RTN","PXRMGEDT",18,0)
 I TYP["DLG" D ^PXRMDBLD Q
"RTN","PXRMGEDT",19,0)
 ;
"RTN","PXRMGEDT",20,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",21,0)
 I TYP="FIP" S FILE="801.43",HED="FINDING ITEM PARAMETER"
"RTN","PXRMGEDT",22,0)
 ;
"RTN","PXRMGEDT",23,0)
 ;Reminder Category
"RTN","PXRMGEDT",24,0)
 I TYP="RCAT" S FILE="811.7",HED="REMINDER CATEGORY"
"RTN","PXRMGEDT",25,0)
 ;
"RTN","PXRMGEDT",26,0)
 ;Resolution Status
"RTN","PXRMGEDT",27,0)
 I TYP="RESN" S FILE="801.9",HED="RESOLUTION STATUS"
"RTN","PXRMGEDT",28,0)
 ;
"RTN","PXRMGEDT",29,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",30,0)
 I TYP="SHFR" S FILE="801.95",HED="HEALTH FACTOR"
"RTN","PXRMGEDT",31,0)
 ;
"RTN","PXRMGEDT",32,0)
 F  D  Q:(X="")!$D(DUOUT)!$D(DTOUT)
"RTN","PXRMGEDT",33,0)
 .S DIC=FILE,DLAYGO=DIC,DIDEL=DIC,DIC(0)="QAELX"
"RTN","PXRMGEDT",34,0)
 .S DIC("A")="Select new "_HED_" name: "
"RTN","PXRMGEDT",35,0)
 .I TYP="SHFR" S DIC(0)="QAEL"
"RTN","PXRMGEDT",36,0)
 .D ^DIC Q:X=""
"RTN","PXRMGEDT",37,0)
 .I X=(U_U) S DTOUT=1
"RTN","PXRMGEDT",38,0)
 .I Y=-1 S DUOUT=1 W !,"Details not saved",! Q
"RTN","PXRMGEDT",39,0)
 .Q:$D(DTOUT)!$D(DUOUT)
"RTN","PXRMGEDT",40,0)
 .;Check if exists
"RTN","PXRMGEDT",41,0)
 .I ($P(Y,U,3)'=1) W !,"already exists" Q
"RTN","PXRMGEDT",42,0)
 .S DA=$P(Y,U)
"RTN","PXRMGEDT",43,0)
 .;Edit resolution status
"RTN","PXRMGEDT",44,0)
 .I TYP="RESN" D EDIT^PXRMSEDT("^PXRMD(801.9,",DA)
"RTN","PXRMGEDT",45,0)
 .;Edit others
"RTN","PXRMGEDT",46,0)
 .I TYP'="RESN" D EDIT(TYP,DA,1)
"RTN","PXRMGEDT",47,0)
 .S DUOUT=1
"RTN","PXRMGEDT",48,0)
 Q
"RTN","PXRMGEDT",49,0)
 ;
"RTN","PXRMGEDT",50,0)
DIE(HDR,FILE) ;Lock and edit
"RTN","PXRMGEDT",51,0)
 I FILE=801.45 W "ED - EDIT "_HDR,!!,PXRMHD,!
"RTN","PXRMGEDT",52,0)
 ;Display resolution details if finding type parameter edit
"RTN","PXRMGEDT",53,0)
 I FILE=801.45,$G(PXRMINST)'=1 D
"RTN","PXRMGEDT",54,0)
 .N RSUB,RNAM
"RTN","PXRMGEDT",55,0)
 .S RSUB=$P($G(^PXRMD(801.45,PXRMFIEN,1,PXRMFSUB,0)),U) Q:'RSUB
"RTN","PXRMGEDT",56,0)
 .S RNAM=$P($G(^PXRMD(801.9,RSUB,0)),U)
"RTN","PXRMGEDT",57,0)
 .S:RNAM="" RNAM=RSUB W "RESOLUTION STATUS : ",RNAM
"RTN","PXRMGEDT",58,0)
 D:$$LOCK(FILE) ^DIE,UNLOCK(FILE)
"RTN","PXRMGEDT",59,0)
 Q
"RTN","PXRMGEDT",60,0)
 ;
"RTN","PXRMGEDT",61,0)
 ;Called by protocol PXRM GENERAL EDIT
"RTN","PXRMGEDT",62,0)
 ;------------------------------------
"RTN","PXRMGEDT",63,0)
EDIT(TYP,DA,ADD) ;
"RTN","PXRMGEDT",64,0)
 N DIC,DIDEL,DIE,DR,DTOUT,DUOUT,Y
"RTN","PXRMGEDT",65,0)
 W IORESET
"RTN","PXRMGEDT",66,0)
 S VALMBCK="R"
"RTN","PXRMGEDT",67,0)
 ;
"RTN","PXRMGEDT",68,0)
 ;Taxonomy Dialog
"RTN","PXRMGEDT",69,0)
 I TYP="DTAX" D
"RTN","PXRMGEDT",70,0)
 .I $$TLOCK(811.2,DA) D  D TUNLOCK(811.2,DA)
"RTN","PXRMGEDT",71,0)
 ..;Initialize the selectable codes if none exist
"RTN","PXRMGEDT",72,0)
 ..I ('$D(^PXD(811.2,DA,"SDX")))&('$D(^PXD(811.2,DA,"SPR"))) D
"RTN","PXRMGEDT",73,0)
 ...D BUILD^PXRMTDUP(DA)
"RTN","PXRMGEDT",74,0)
 ..;
"RTN","PXRMGEDT",75,0)
 ..N DIE,DR
"RTN","PXRMGEDT",76,0)
 ..S DIE="^PXD(811.2,"
"RTN","PXRMGEDT",77,0)
 ..;
"RTN","PXRMGEDT",78,0)
 ..W !,"Dialog Text Fields"
"RTN","PXRMGEDT",79,0)
 ..S DR=".03;3107;3108;3111;3112"
"RTN","PXRMGEDT",80,0)
 ..D ^DIE
"RTN","PXRMGEDT",81,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",82,0)
 ..;
"RTN","PXRMGEDT",83,0)
 ..W !!,"Dialog Selectable codes"
"RTN","PXRMGEDT",84,0)
 ..S DR="3102;3104"
"RTN","PXRMGEDT",85,0)
 ..D ^DIE
"RTN","PXRMGEDT",86,0)
 ..I $D(Y) Q
"RTN","PXRMGEDT",87,0)
 ..;
"RTN","PXRMGEDT",88,0)
 ..W !!,"Dialog Generation Parameters"
"RTN","PXRMGEDT",89,0)
 ..S DR="3106;3110"
"RTN","PXRMGEDT",90,0)
 ..D ^DIE
"RTN","PXRMGEDT",91,0)
 ;
"RTN","PXRMGEDT",92,0)
 ;Finding Item Parameter
"RTN","PXRMGEDT",93,0)
 I TYP="FIP" D
"RTN","PXRMGEDT",94,0)
 .S DIE="^PXRMD(801.43,",DR=".01;.02;.03;.04",DIDEL=801.43
"RTN","PXRMGEDT",95,0)
 .D DIE("FINDING ITEM PARAMETER",801.43)
"RTN","PXRMGEDT",96,0)
 ;
"RTN","PXRMGEDT",97,0)
 ;Finding Type Parameter
"RTN","PXRMGEDT",98,0)
 I TYP="FPAR" D
"RTN","PXRMGEDT",99,0)
 .;Programmer mode
"RTN","PXRMGEDT",100,0)
 .S:$G(PXRMINST)=1 DR=1,DR(2,801.451)="1;3;4;5",DIE="^PXRMD(801.45,"
"RTN","PXRMGEDT",101,0)
 .;Site mode
"RTN","PXRMGEDT",102,0)
 .I $G(PXRMINST)'=1 D
"RTN","PXRMGEDT",103,0)
 ..S DR="1;3;4;5",DIE="^PXRMD(801.45,PXRMFIEN,1,",DA(1)=PXRMFIEN
"RTN","PXRMGEDT",104,0)
 ..S DR(2,801.4515)="2;4;5;6;1"
"RTN","PXRMGEDT",105,0)
 .D DIE("FINDING TYPE PARAMETER",801.45)
"RTN","PXRMGEDT",106,0)
 ;
"RTN","PXRMGEDT",107,0)
 ;Reminder Category
"RTN","PXRMGEDT",108,0)
 I TYP="RCAT" D
"RTN","PXRMGEDT",109,0)
 .S DIE="^PXRMD(811.7,",DR=".01;1;2;10",DIDEL=811.7
"RTN","PXRMGEDT",110,0)
 .D DIE("CATEGORY",811.7)
"RTN","PXRMGEDT",111,0)
 ;
"RTN","PXRMGEDT",112,0)
 ;Resolution Status
"RTN","PXRMGEDT",113,0)
 I TYP="RESN" D
"RTN","PXRMGEDT",114,0)
 .I $$LOCK(801.9) D EDIT^PXRMSEDT("^PXRMD(801.9,",.DA),UNLOCK(811.9)
"RTN","PXRMGEDT",115,0)
 ;
"RTN","PXRMGEDT",116,0)
 ;Health Factor Resolution
"RTN","PXRMGEDT",117,0)
 I TYP="SHFR" D
"RTN","PXRMGEDT",118,0)
 .S DIE="^PXRMD(801.95,",DR=".01;.02",DIDEL=801.95
"RTN","PXRMGEDT",119,0)
 .D DIE("HEALTH FACTOR RESOLUTIONS",811.7)
"RTN","PXRMGEDT",120,0)
 ;
"RTN","PXRMGEDT",121,0)
 ;Skip rebuild if editting taxonomy called from dialog edit
"RTN","PXRMGEDT",122,0)
 I PXRMGTYP["DLG" Q
"RTN","PXRMGEDT",123,0)
 ;
"RTN","PXRMGEDT",124,0)
 ;Deleted ???
"RTN","PXRMGEDT",125,0)
 I '$D(DA) S VALMBCK="Q" Q
"RTN","PXRMGEDT",126,0)
 ;Redisplay changes
"RTN","PXRMGEDT",127,0)
 I 'ADD D BUILD^PXRMGEN
"RTN","PXRMGEDT",128,0)
 Q
"RTN","PXRMGEDT",129,0)
 ;
"RTN","PXRMGEDT",130,0)
 ;
"RTN","PXRMGEDT",131,0)
LOCK(FILE) ;Lock the entire file
"RTN","PXRMGEDT",132,0)
 L +^PXRMD(FILE):0 I  Q 1
"RTN","PXRMGEDT",133,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2
"RTN","PXRMGEDT",134,0)
 Q 0
"RTN","PXRMGEDT",135,0)
 ;
"RTN","PXRMGEDT",136,0)
 ;
"RTN","PXRMGEDT",137,0)
UNLOCK(FILE) ;Unlock the file
"RTN","PXRMGEDT",138,0)
 L -^PXRMD(FILE)
"RTN","PXRMGEDT",139,0)
 Q
"RTN","PXRMGEDT",140,0)
 ;Build the list of codes for one taxonomy
"RTN","PXRMGEDT",141,0)
 ;----------------------------------------
"RTN","PXRMGEDT",142,0)
SEL(TAXIND) ;
"RTN","PXRMGEDT",143,0)
 N CODELIST,IC,FINDING,FILE,HIGH,LOW,NCE,TEMP
"RTN","PXRMGEDT",144,0)
 ;
"RTN","PXRMGEDT",145,0)
 ;Setup file names for indirection, these will hold the taxonomy lists.
"RTN","PXRMGEDT",146,0)
 N ICD9IEN,ICPTIEN
"RTN","PXRMGEDT",147,0)
 S ICD9IEN="^TMP(""PXRM"",$J,""ICD9IEN"")"
"RTN","PXRMGEDT",148,0)
 S ICPTIEN="^TMP(""PXRM"",$J,""ICPTIEN"")"
"RTN","PXRMGEDT",149,0)
 ;
"RTN","PXRMGEDT",150,0)
 S NCE=0
"RTN","PXRMGEDT",151,0)
 F FILE=80,81 D
"RTN","PXRMGEDT",152,0)
 .S IC=0
"RTN","PXRMGEDT",153,0)
 .F  S IC=$O(^PXD(811.2,TAXIND,FILE,IC)) Q:+IC=0  D
"RTN","PXRMGEDT",154,0)
 ..S TEMP=$G(^PXD(811.2,TAXIND,FILE,IC,0))
"RTN","PXRMGEDT",155,0)
 ..;Append the taxonomy and finding information to CODELIST.
"RTN","PXRMGEDT",156,0)
 ..S NCE=NCE+1
"RTN","PXRMGEDT",157,0)
 ..S CODELIST(NCE)=TEMP_U_FILE
"RTN","PXRMGEDT",158,0)
 ;CODELIST is LOW_U_HIGH_U_FILE
"RTN","PXRMGEDT",159,0)
 ;Go through the standard coded list and get the file IEN for each entry.
"RTN","PXRMGEDT",160,0)
 F IC=1:1:NCE D
"RTN","PXRMGEDT",161,0)
 .S LOW=$P(CODELIST(IC),U,1)
"RTN","PXRMGEDT",162,0)
 .S HIGH=$P(CODELIST(IC),U,2)
"RTN","PXRMGEDT",163,0)
 .S FILE=$P(CODELIST(IC),U,3)
"RTN","PXRMGEDT",164,0)
 .I FILE=80 D ICD9(LOW,HIGH) Q
"RTN","PXRMGEDT",165,0)
 .I FILE=81 D ICPT(LOW,HIGH) Q
"RTN","PXRMGEDT",166,0)
 ;
"RTN","PXRMGEDT",167,0)
 ;Store the results.
"RTN","PXRMGEDT",168,0)
 D STORE(TAXIND)
"RTN","PXRMGEDT",169,0)
 K ^TMP("PXRM",$J,"ICD9IEN")
"RTN","PXRMGEDT",170,0)
 K ^TMP("PXRM",$J,"ICPTIEN")
"RTN","PXRMGEDT",171,0)
 Q
"RTN","PXRMGEDT",172,0)
 ;
"RTN","PXRMGEDT",173,0)
 ;=======================================================================
"RTN","PXRMGEDT",174,0)
DEL(TAXIND) ;Delete existing entry
"RTN","PXRMGEDT",175,0)
 K ^PXD(811.2,TAXIND,"SDX")
"RTN","PXRMGEDT",176,0)
 K ^PXD(811.2,TAXIND,"SPR")
"RTN","PXRMGEDT",177,0)
 Q
"RTN","PXRMGEDT",178,0)
 ;
"RTN","PXRMGEDT",179,0)
 ;Build the list of internal entries for ICD9 (File 80)
"RTN","PXRMGEDT",180,0)
 ;-----------------------------------------------------
"RTN","PXRMGEDT",181,0)
ICD9(LOW,HIGH) ;
"RTN","PXRMGEDT",182,0)
 N END,IEN,IND
"RTN","PXRMGEDT",183,0)
 S IND=LOW_" "
"RTN","PXRMGEDT",184,0)
 S END=HIGH_" "
"RTN","PXRMGEDT",185,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMGEDT",186,0)
 .S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMGEDT",187,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),80) D
"RTN","PXRMGEDT",188,0)
 ..S ^TMP("PXRM",$J,"ICD9IEN",IND)=IEN
"RTN","PXRMGEDT",189,0)
 .S IND=$O(^ICD9("BA",IND))
"RTN","PXRMGEDT",190,0)
 Q
"RTN","PXRMGEDT",191,0)
 ;
"RTN","PXRMGEDT",192,0)
 ;Build the list of internal entries for ICPT (File 81)
"RTN","PXRMGEDT",193,0)
 ;-----------------------------------------------------
"RTN","PXRMGEDT",194,0)
ICPT(LOW,HIGH) ;
"RTN","PXRMGEDT",195,0)
 N IEN,IND
"RTN","PXRMGEDT",196,0)
 S IND=LOW
"RTN","PXRMGEDT",197,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMGEDT",198,0)
 .S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMGEDT",199,0)
 .I (+IEN>0),$$CODE^PXRMVAL($TR(IND," "),81) D
"RTN","PXRMGEDT",200,0)
 ..S ^TMP("PXRM",$J,"ICPTIEN",IND)=IEN
"RTN","PXRMGEDT",201,0)
 .S IND=$O(^ICPT("B",IND))
"RTN","PXRMGEDT",202,0)
 Q
"RTN","PXRMGEDT",203,0)
 ;
"RTN","PXRMGEDT",204,0)
 ;Store selectable codes in taxonomy
"RTN","PXRMGEDT",205,0)
 ;----------------------------------
"RTN","PXRMGEDT",206,0)
STORE(TAXIND) ;
"RTN","PXRMGEDT",207,0)
 K ^TMP("PXRMGEDT",$J)
"RTN","PXRMGEDT",208,0)
 N FDA,FDAIEN,FITEM,I2N,IEN,IND,MSG,NAME,SEQ,SUB,TEMP
"RTN","PXRMGEDT",209,0)
 ;
"RTN","PXRMGEDT",210,0)
 S NAME=$P(^PXD(811.2,TAXIND,0),U)
"RTN","PXRMGEDT",211,0)
 ;
"RTN","PXRMGEDT",212,0)
 S FDAIEN(1)=TAXIND
"RTN","PXRMGEDT",213,0)
 ;
"RTN","PXRMGEDT",214,0)
 S SUB="",IND=1,SEQ=0
"RTN","PXRMGEDT",215,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICD9IEN",SUB)) Q:SUB=""  D
"RTN","PXRMGEDT",216,0)
 .S IEN=^TMP("PXRM",$J,"ICD9IEN",SUB)
"RTN","PXRMGEDT",217,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMGEDT",218,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMGEDT",219,0)
 .S ^TMP("PXRMGEDT",$J,811.23102,I2N,.01)=IEN
"RTN","PXRMGEDT",220,0)
 ;
"RTN","PXRMGEDT",221,0)
 S SEQ=0
"RTN","PXRMGEDT",222,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICPTIEN",SUB)) Q:SUB=""  D
"RTN","PXRMGEDT",223,0)
 .S IEN=^TMP("PXRM",$J,"ICPTIEN",SUB)
"RTN","PXRMGEDT",224,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMGEDT",225,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMGEDT",226,0)
 .S ^TMP("PXRMGEDT",$J,811.23104,I2N,.01)=IEN
"RTN","PXRMGEDT",227,0)
 ;
"RTN","PXRMGEDT",228,0)
 ;None found
"RTN","PXRMGEDT",229,0)
 I IND=1 Q
"RTN","PXRMGEDT",230,0)
 ;
"RTN","PXRMGEDT",231,0)
 S TEMP="^TMP(""PXRMGEDT"","_$J_")"
"RTN","PXRMGEDT",232,0)
 D UPDATE^DIE("",TEMP,"FDAIEN","MSG")
"RTN","PXRMGEDT",233,0)
 I $D(MSG) D ERR
"RTN","PXRMGEDT",234,0)
 K ^TMP("PXRMGEDT",$J)
"RTN","PXRMGEDT",235,0)
 Q
"RTN","PXRMGEDT",236,0)
 ;
"RTN","PXRMGEDT",237,0)
 ;Error Handler
"RTN","PXRMGEDT",238,0)
 ;-------------
"RTN","PXRMGEDT",239,0)
ERR N ERROR,IC,REF
"RTN","PXRMGEDT",240,0)
 S ERROR(1)="Unable to build selectable codes for taxonomy : "
"RTN","PXRMGEDT",241,0)
 S ERROR(2)=NAME
"RTN","PXRMGEDT",242,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMGEDT",243,0)
 ;Move MSG into ERROR
"RTN","PXRMGEDT",244,0)
 S REF="MSG"
"RTN","PXRMGEDT",245,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMGEDT",246,0)
 ;Screen message
"RTN","PXRMGEDT",247,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMGEDT",248,0)
 Q
"RTN","PXRMGEDT",249,0)
 ;
"RTN","PXRMGEDT",250,0)
TLOCK(FILE,DA) ;Lock the record
"RTN","PXRMGEDT",251,0)
 L +^PXD(FILE,DA):0 I  Q 1
"RTN","PXRMGEDT",252,0)
 E  W !!,?5,"Another user is editing this file, try later" H 2 Q 0
"RTN","PXRMGEDT",253,0)
 ;
"RTN","PXRMGEDT",254,0)
 ;
"RTN","PXRMGEDT",255,0)
TUNLOCK(FILE,DA) ;Unlock the record
"RTN","PXRMGEDT",256,0)
 L -^PXD(FILE,DA)
"RTN","PXRMGEDT",257,0)
 Q
"RTN","PXRMHF")
0^32^B49214625
"RTN","PXRMHF",1,0)
PXRMHF ; SLC/PKR - Handle Health Factor findings. ;01/08/2001
"RTN","PXRMHF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMHF",3,0)
 ;
"RTN","PXRMHF",4,0)
 ;=======================================================================
"RTN","PXRMHF",5,0)
BLDPC(DFN) ;Build a list of Health Factors associated with this patient,
"RTN","PXRMHF",6,0)
 ;keep only the most recent of each.
"RTN","PXRMHF",7,0)
 N CAT,DATE,IEN,INVDATE,HFIND,NPATHF,TEMP,TYPE,VIEN
"RTN","PXRMHF",8,0)
 I '$D(^XTMP(PXRMDFN,"HF","NPATHF")) D
"RTN","PXRMHF",9,0)
 . K ^XTMP(PXRMDFN,"HF")
"RTN","PXRMHF",10,0)
 . S NPATHF=0
"RTN","PXRMHF",11,0)
 . S HFIND=""
"RTN","PXRMHF",12,0)
 . F  S HFIND=$O(^AUPNVHF("AA",DFN,HFIND)) Q:HFIND=""  D
"RTN","PXRMHF",13,0)
 .. S INVDATE=$O(^AUPNVHF("AA",DFN,HFIND,""))
"RTN","PXRMHF",14,0)
 .. S IEN=$O(^AUPNVHF("AA",DFN,HFIND,INVDATE,""))
"RTN","PXRMHF",15,0)
 .. S VIEN=$P(^AUPNVHF(IEN,0),U,3)
"RTN","PXRMHF",16,0)
 .. S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMHF",17,0)
 .. S TEMP=$G(^AUTTHF(HFIND,0))
"RTN","PXRMHF",18,0)
 .. S TYPE=$P(TEMP,U,10)
"RTN","PXRMHF",19,0)
 .. I TYPE="C" S CAT=HFIND
"RTN","PXRMHF",20,0)
 .. E  S CAT=$P(^AUTTHF(HFIND,0),U,3)
"RTN","PXRMHF",21,0)
 ..;If the category is null then send a warning.
"RTN","PXRMHF",22,0)
 .. I CAT="" D WARN(TEMP)  Q
"RTN","PXRMHF",23,0)
 .. S NPATHF=NPATHF+1
"RTN","PXRMHF",24,0)
 ..;Store the heath factor, its category, the entry in AUPNVHF,
"RTN","PXRMHF",25,0)
 ..;the visit, and the date.
"RTN","PXRMHF",26,0)
 .. S ^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIND)=IEN_U_VIEN_U_DATE
"RTN","PXRMHF",27,0)
 . S ^XTMP(PXRMDFN,"HF","NPATHF")=NPATHF
"RTN","PXRMHF",28,0)
 E  S NPATHF=^XTMP(PXRMDFN,"HF","NPATHF")
"RTN","PXRMHF",29,0)
 Q NPATHF
"RTN","PXRMHF",30,0)
 ;
"RTN","PXRMHF",31,0)
 ;=======================================================================
"RTN","PXRMHF",32,0)
EVALFI(DFN,FIEVAL) ;Evaluate health factor findings.
"RTN","PXRMHF",33,0)
 ;Setup an array of health factors for matching.
"RTN","PXRMHF",34,0)
 N CAT,HFIEN,FIHF,FINDING,NPATHF,WCR
"RTN","PXRMHF",35,0)
 ;
"RTN","PXRMHF",36,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",37,0)
 ;If the patient has no health factors set all health factor findings
"RTN","PXRMHF",38,0)
 ;to false and quit.
"RTN","PXRMHF",39,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",40,0)
 . S HFIEN=""
"RTN","PXRMHF",41,0)
 . F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",42,0)
 .. S FINDING=""
"RTN","PXRMHF",43,0)
 .. F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",44,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMHF",45,0)
 ;
"RTN","PXRMHF",46,0)
 S HFIEN=""
"RTN","PXRMHF",47,0)
 ;Build the list of health factor findings for this reminder.
"RTN","PXRMHF",48,0)
 F  S HFIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",49,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",50,0)
 .;If the category is null then send a warning.
"RTN","PXRMHF",51,0)
 . I CAT="" D WARN(^AUTTHF(HFIEN,0))  Q
"RTN","PXRMHF",52,0)
 . S FINDING=""
"RTN","PXRMHF",53,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTHF(",HFIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMHF",54,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMHF",55,0)
 ..;Get the Within Category Rank
"RTN","PXRMHF",56,0)
 .. S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",57,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",58,0)
 .. S FIHF(CAT,HFIEN,WCR)=FINDING
"RTN","PXRMHF",59,0)
 ;
"RTN","PXRMHF",60,0)
 D MPHF(DFN,.FIHF,.FIEVAL)
"RTN","PXRMHF",61,0)
 Q
"RTN","PXRMHF",62,0)
 ;
"RTN","PXRMHF",63,0)
 ;=======================================================================
"RTN","PXRMHF",64,0)
EVALTERM(DFN,FINDING,TERMIEN,TERMEVAL) ;Evaluate health factor terms.
"RTN","PXRMHF",65,0)
 N CAT,HFIEN,FIHF,NPATHF,TERMHF,TFINDING,WCR
"RTN","PXRMHF",66,0)
 ;
"RTN","PXRMHF",67,0)
 S NPATHF=$$BLDPC(DFN)
"RTN","PXRMHF",68,0)
 ;If the patient has no health factors set all health factor
"RTN","PXRMHF",69,0)
 ;findings to false and quit.
"RTN","PXRMHF",70,0)
 I NPATHF=0 D  Q
"RTN","PXRMHF",71,0)
 . S HFIEN=""
"RTN","PXRMHF",72,0)
 . F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",73,0)
 .. S TFINDING=""
"RTN","PXRMHF",74,0)
 .. F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",75,0)
 ... S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",76,0)
 ;
"RTN","PXRMHF",77,0)
 S HFIEN=""
"RTN","PXRMHF",78,0)
 ;Build the list of health factor findings for this term.
"RTN","PXRMHF",79,0)
 F  S HFIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN)) Q:+HFIEN=0  D
"RTN","PXRMHF",80,0)
 . S CAT=$P(^AUTTHF(HFIEN,0),U,3)
"RTN","PXRMHF",81,0)
 . S TFINDING=""
"RTN","PXRMHF",82,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTHF(",HFIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMHF",83,0)
 .. S TERMEVAL(TFINDING)=0
"RTN","PXRMHF",84,0)
 ..;Get the Within Category Rank, look at the term finding level first.
"RTN","PXRMHF",85,0)
 .. S WCR=$P(^PXRMD(811.5,TERMIEN,20,TFINDING,0),U,10)
"RTN","PXRMHF",86,0)
 .. I WCR="" S WCR=$P(^PXD(811.9,PXRMITEM,20,FINDING,0),U,10)
"RTN","PXRMHF",87,0)
 .. I WCR="" S WCR=9999
"RTN","PXRMHF",88,0)
 .. S TERMHF(CAT,HFIEN,WCR)=FINDING_U_TERMIEN_U_TFINDING
"RTN","PXRMHF",89,0)
 ;
"RTN","PXRMHF",90,0)
 D MPHF(DFN,.TERMHF,.TERMEVAL)
"RTN","PXRMHF",91,0)
 Q
"RTN","PXRMHF",92,0)
 ;
"RTN","PXRMHF",93,0)
 ;=======================================================================
"RTN","PXRMHF",94,0)
MPHF(DFN,FIHF,FIEVAL) ;Find the matches.
"RTN","PXRMHF",95,0)
 N CONVAL,CAT,DATE,DONE,F0,FIND0,FIND3,HFIEN,INVDATE,LEVEL,SORTLIST
"RTN","PXRMHF",96,0)
 N TEMP,TF0,TFIND0,TFIND3,VALID,WCR
"RTN","PXRMHF",97,0)
 S CAT=0
"RTN","PXRMHF",98,0)
 F  S CAT=$O(^XTMP(PXRMDFN,"HF",CAT)) Q:+CAT=0  D
"RTN","PXRMHF",99,0)
 . I '$D(FIHF(CAT)) Q
"RTN","PXRMHF",100,0)
 .;Have a category get health factors.
"RTN","PXRMHF",101,0)
 . S INVDATE=0
"RTN","PXRMHF",102,0)
 . F  S INVDATE=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE)) Q:INVDATE=""  D
"RTN","PXRMHF",103,0)
 .. S HFIEN=0
"RTN","PXRMHF",104,0)
 .. F  S HFIEN=$O(^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)) Q:HFIEN=""  D
"RTN","PXRMHF",105,0)
 ... I '$D(FIHF(CAT,HFIEN)) Q
"RTN","PXRMHF",106,0)
 ... S WCR=$O(FIHF(CAT,HFIEN,""))
"RTN","PXRMHF",107,0)
 ... S SORTLIST(CAT,INVDATE,WCR,HFIEN)=""
"RTN","PXRMHF",108,0)
 ;Process SORTLIST the first factor in the category will be true
"RTN","PXRMHF",109,0)
 ;the others false unless WCR=0 in which case it is treated as an
"RTN","PXRMHF",110,0)
 ;individual finding.
"RTN","PXRMHF",111,0)
 S CAT=0
"RTN","PXRMHF",112,0)
 F  S CAT=$O(SORTLIST(CAT)) Q:CAT=""  D
"RTN","PXRMHF",113,0)
 . S DONE=0
"RTN","PXRMHF",114,0)
 . S INVDATE=0
"RTN","PXRMHF",115,0)
 . F  S INVDATE=$O(SORTLIST(CAT,INVDATE)) Q:(INVDATE="")!(DONE)  D
"RTN","PXRMHF",116,0)
 .. S WCR=""
"RTN","PXRMHF",117,0)
 .. F  S WCR=$O(SORTLIST(CAT,INVDATE,WCR)) Q:(WCR="")!(DONE)  D
"RTN","PXRMHF",118,0)
 ... S HFIEN=""
"RTN","PXRMHF",119,0)
 ... F  S HFIEN=$O(SORTLIST(CAT,INVDATE,WCR,HFIEN)) Q:(HFIEN="")!(DONE)  D
"RTN","PXRMHF",120,0)
 ....;If this is a term finding it will be the third piece.
"RTN","PXRMHF",121,0)
 .... S F0=$P(FIHF(CAT,HFIEN,WCR),U,1)
"RTN","PXRMHF",122,0)
 .... S TF0=$P(FIHF(CAT,HFIEN,WCR),U,3)
"RTN","PXRMHF",123,0)
 .... I TF0="" S FINDING=F0
"RTN","PXRMHF",124,0)
 .... E  S FINDING=TF0
"RTN","PXRMHF",125,0)
 .... S TEMP=^XTMP(PXRMDFN,"HF",CAT,INVDATE,HFIEN)
"RTN","PXRMHF",126,0)
 .... S FIEVAL(FINDING)=1
"RTN","PXRMHF",127,0)
 .... S (DATE,FIEVAL(FINDING,"DATE"))=$P(TEMP,U,3)
"RTN","PXRMHF",128,0)
 .... S FIEVAL(FINDING,"FINDING")=HFIEN_";AUTTHF("
"RTN","PXRMHF",129,0)
 .... S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)_";AUPNVHF("
"RTN","PXRMHF",130,0)
 .... S FIEVAL(FINDING,"VIEN")=$P(TEMP,U,2)
"RTN","PXRMHF",131,0)
 ....;The value is the level/severity.
"RTN","PXRMHF",132,0)
 .... S LEVEL=$P(^AUPNVHF($P(TEMP,U,1),0),U,5)
"RTN","PXRMHF",133,0)
 .... S FIEVAL(FINDING,"LEVEL")=LEVEL
"RTN","PXRMHF",134,0)
 .... S FIEVAL(FINDING,"VALUE")=LEVEL
"RTN","PXRMHF",135,0)
 ....;If there is an condition for this finding evaluate it.
"RTN","PXRMHF",136,0)
 .... S FIND0=^PXD(811.9,PXRMITEM,20,F0,0)
"RTN","PXRMHF",137,0)
 .... S FIND3=$G(^PXD(811.9,PXRMITEM,20,F0,3))
"RTN","PXRMHF",138,0)
 .... I TF0="" S (TFIND0,TFIND3)=""
"RTN","PXRMHF",139,0)
 .... E  D
"RTN","PXRMHF",140,0)
 ..... S TFIND0=^PXRMD(811.5,$P(FIHF(CAT,HFIEN,WCR),U,2),20,TF0,0)
"RTN","PXRMHF",141,0)
 ..... S TFIND3=$G(^PXRMD(811.5,$P(FIHF(CAT,HFIEN,WCR),U,2),20,TF0,3))
"RTN","PXRMHF",142,0)
 ....;Determine if the finding has expired.
"RTN","PXRMHF",143,0)
 .... S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMHF",144,0)
 .... I 'VALID D  Q
"RTN","PXRMHF",145,0)
 ..... S FIEVAL(FINDING)=0
"RTN","PXRMHF",146,0)
 ..... S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMHF",147,0)
 .... S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,LEVEL)
"RTN","PXRMHF",148,0)
 .... I CONVAL'="" D
"RTN","PXRMHF",149,0)
 ..... I CONVAL D
"RTN","PXRMHF",150,0)
 ...... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMHF",151,0)
 ...... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMHF",152,0)
 ..... E  D
"RTN","PXRMHF",153,0)
 ...... K FIEVAL(FINDING)
"RTN","PXRMHF",154,0)
 ...... S FIEVAL(FINDING)=0
"RTN","PXRMHF",155,0)
 .... I WCR>0 S DONE=1
"RTN","PXRMHF",156,0)
 Q
"RTN","PXRMHF",157,0)
 ;
"RTN","PXRMHF",158,0)
 ;=======================================================================
"RTN","PXRMHF",159,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMHF",160,0)
 ;maintenance output.
"RTN","PXRMHF",161,0)
 N EM,FIEN,PNAME,LEVEL,TEMP,VDATE
"RTN","PXRMHF",162,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMHF",163,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMHF",164,0)
 S LEVEL=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMHF",165,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMHF",166,0)
 S TEMP=TEMP_" Health Factor: "
"RTN","PXRMHF",167,0)
 S PNAME=$P(^AUTTHF(FIEN,0),U,1)
"RTN","PXRMHF",168,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMHF",169,0)
 I $L(LEVEL)>0 D
"RTN","PXRMHF",170,0)
 . S TEMP=TEMP_"; level/severity - "
"RTN","PXRMHF",171,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.23,.04,"",LEVEL,.EM)
"RTN","PXRMHF",172,0)
 ;If the health factor has expired add "EXPIRED"
"RTN","PXRMHF",173,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMHF",174,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMHF",175,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMHF",176,0)
 S NLINES=NLINES+1
"RTN","PXRMHF",177,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMHF",178,0)
 I $D(PXRMDEV) D
"RTN","PXRMHF",179,0)
 . N UID
"RTN","PXRMHF",180,0)
 . S UID="HEALTH FACTOR "_PNAME
"RTN","PXRMHF",181,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMHF",182,0)
 ;
"RTN","PXRMHF",183,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMHF",184,0)
 I VDATE["E" D
"RTN","PXRMHF",185,0)
 . N INDEX,VIEN
"RTN","PXRMHF",186,0)
 . S INDEX="HF-"_PNAME
"RTN","PXRMHF",187,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMHF",188,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMHF",189,0)
 Q
"RTN","PXRMHF",190,0)
 ;
"RTN","PXRMHF",191,0)
 ;=======================================================================
"RTN","PXRMHF",192,0)
WARN(HF0) ;Issue a warning if a health factor is missing its category.
"RTN","PXRMHF",193,0)
 N XMSUB
"RTN","PXRMHF",194,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMHF",195,0)
 S XMSUB="CLINICAL REMINDER DATA PROBLEM, HEALTH FACTOR"
"RTN","PXRMHF",196,0)
 S ^TMP("PXRMXMZ",$J,1,0)="Health Factor "_$P(HF0,U,1)
"RTN","PXRMHF",197,0)
 S ^TMP("PXRMXMZ",$J,2,0)="does not have a category, this is a required field."
"RTN","PXRMHF",198,0)
 S ^TMP("PXRMXMZ",$J,3,0)="This health factor will be ignored for all patients until the problem is fixed."
"RTN","PXRMHF",199,0)
 D SEND^PXRMMSG(XMSUB)
"RTN","PXRMHF",200,0)
 Q
"RTN","PXRMHF",201,0)
 ;
"RTN","PXRMHL7")
0^74^B1783418
"RTN","PXRMHL7",1,0)
PXRMHL7 ; SLC/PKR - HL7 message handler. ;01/30/2001
"RTN","PXRMHL7",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMHL7",3,0)
 ;This is based on the code in ORM.
"RTN","PXRMHL7",4,0)
 ;
"RTN","PXRMHL7",5,0)
 ;=======================================================================
"RTN","PXRMHL7",6,0)
HL7(HL7MSG) ;Main entry point for handling HL7 messages.
"RTN","PXRMHL7",7,0)
 N MSG,MSH,PKG
"RTN","PXRMHL7",8,0)
 S MSG=$S($L($G(HL7MSG)):HL7MSG,1:"HL7MSG")
"RTN","PXRMHL7",9,0)
 I '$O(@MSG@(0)) Q
"RTN","PXRMHL7",10,0)
 S MSH=0
"RTN","PXRMHL7",11,0)
 F  S MSH=$O(@MSG@(MSH)) Q:MSH'>0  Q:$E(@MSG@(MSH),1,3)="MSH"
"RTN","PXRMHL7",12,0)
 ;Get the package
"RTN","PXRMHL7",13,0)
 S PKG=$$PKG($P(@MSG@(MSH),"|",3))
"RTN","PXRMHL7",14,0)
 I PKG="PS" D
"RTN","PXRMHL7",15,0)
 .;Get the patient
"RTN","PXRMHL7",16,0)
 . N DFN,PXRMDFN
"RTN","PXRMHL7",17,0)
 . S DFN=$$PID(MSH,MSG)
"RTN","PXRMHL7",18,0)
 . S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMHL7",19,0)
 . D KILLPC^PXRMPINF(PXRMDFN)
"RTN","PXRMHL7",20,0)
 Q
"RTN","PXRMHL7",21,0)
 ;
"RTN","PXRMHL7",22,0)
 ;=======================================================================
"RTN","PXRMHL7",23,0)
PID(MSH,MSG) ;Process the PID segment and return the DFN.
"RTN","PXRMHL7",24,0)
 N DFN,DONE,IND,SEG
"RTN","PXRMHL7",25,0)
 S DONE=0
"RTN","PXRMHL7",26,0)
 S IND=MSH
"RTN","PXRMHL7",27,0)
 F  S IND=$O(@MSG@(IND)) Q:(IND'>0)!(DONE)  D
"RTN","PXRMHL7",28,0)
 . S SEG=$E(@MSG@(IND),1,3)
"RTN","PXRMHL7",29,0)
 . I SEG="PID" D  Q
"RTN","PXRMHL7",30,0)
 .. S DFN=+$P(@MSG@(IND),"|",4)
"RTN","PXRMHL7",31,0)
 .. S DONE=1
"RTN","PXRMHL7",32,0)
 Q DFN
"RTN","PXRMHL7",33,0)
 ;
"RTN","PXRMHL7",34,0)
 ;=======================================================================
"RTN","PXRMHL7",35,0)
PKG(NAME) ;Return the package namespace.
"RTN","PXRMHL7",36,0)
 I NAME="CONSULTS" Q "GMRC"
"RTN","PXRMHL7",37,0)
 I NAME="DIETETICS" Q "FH"
"RTN","PXRMHL7",38,0)
 I NAME="LABORATORY" Q "LR"
"RTN","PXRMHL7",39,0)
 I NAME="PHARMACY" Q "PS"
"RTN","PXRMHL7",40,0)
 I NAME="PROCEDURES" Q "GMRC"
"RTN","PXRMHL7",41,0)
 I NAME="ORDER ENTRY" Q "ORG"
"RTN","PXRMHL7",42,0)
 I NAME="RADIOLOGY"!(NAME="IMAGING") Q "RA"
"RTN","PXRMHL7",43,0)
 Q ""
"RTN","PXRMHL7",44,0)
 ;
"RTN","PXRMHOST")
0^43^B1998602
"RTN","PXRMHOST",1,0)
PXRMHOST ; SLC/PKR - Host file routines. ;07/20/2000
"RTN","PXRMHOST",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMHOST",3,0)
 ;
"RTN","PXRMHOST",4,0)
 ;=======================================================================
"RTN","PXRMHOST",5,0)
MKWSDEV ;Make the PXRM WORKSTATION device.
"RTN","PXRMHOST",6,0)
 N FDA,FDAIEN,MSG
"RTN","PXRMHOST",7,0)
 ;Make sure that the device does not get created more than once.
"RTN","PXRMHOST",8,0)
 I +$$FIND1^DIC(3.5,"","MX","PXRM WORKSTATION")>0 Q
"RTN","PXRMHOST",9,0)
 S FDA(3.5,"+1,",.01)="PXRM WORKSTATION" ;NAME
"RTN","PXRMHOST",10,0)
 S FDA(3.5,"+1,",.02)="PXRM Workstation HFS Device" ;LOCATION OF TERMINAL
"RTN","PXRMHOST",11,0)
 S FDA(3.5,"+1,",1)="PXRMWSD.DAT" ;$I
"RTN","PXRMHOST",12,0)
 S FDA(3.5,"+1,",1.95)=0 ;SIGN-ON/SYSTEM DEVICE
"RTN","PXRMHOST",13,0)
 S FDA(3.5,"+1,",2)="HFS" ;TYPE
"RTN","PXRMHOST",14,0)
 S FDA(3.5,"+1,",3)=$$FIND1^DIC(3.2,"","MX","P-OTHER") ;SUBTYPE
"RTN","PXRMHOST",15,0)
 S FDA(3.5,"+1,",4)=0 ;ASK DEVICE
"RTN","PXRMHOST",16,0)
 S FDA(3.5,"+1,",5)=0 ;ASK PARAMETERS
"RTN","PXRMHOST",17,0)
 S FDA(3.5,"+1,",5.1)=0 ;ASK HOST FILE
"RTN","PXRMHOST",18,0)
 S FDA(3.5,"+1,",5.2)=0 ;ASK HFS I/O OPERATION
"RTN","PXRMHOST",19,0)
 D UPDATE^DIE("","FDA","FDAIEN","MSG")
"RTN","PXRMHOST",20,0)
 I $D(MSG) D
"RTN","PXRMHOST",21,0)
 . W !,"PXRM Workstation device creation failed, UPDATE^DIE returned the following error message:"
"RTN","PXRMHOST",22,0)
 . D AWRITE^PXRMUTIL("MSG")
"RTN","PXRMHOST",23,0)
 Q
"RTN","PXRMHOST",24,0)
 ;
"RTN","PXRMIMM")
0^33^B15739541
"RTN","PXRMIMM",1,0)
PXRMIMM ; SLC/PKR - Handle immunization findings. ;10/26/2000
"RTN","PXRMIMM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMIMM",3,0)
 ;
"RTN","PXRMIMM",4,0)
 ;=======================================================================
"RTN","PXRMIMM",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate immunization findings.
"RTN","PXRMIMM",6,0)
 N FIND0,FIND3,FINDING,IMMIEN,INVDATE
"RTN","PXRMIMM",7,0)
 S IMMIEN=""
"RTN","PXRMIMM",8,0)
 F  S IMMIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTIMM(",IMMIEN)) Q:+IMMIEN=0  D
"RTN","PXRMIMM",9,0)
 . S INVDATE=$O(^AUPNVIMM("AA",DFN,IMMIEN,""))
"RTN","PXRMIMM",10,0)
 . S FINDING=""
"RTN","PXRMIMM",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTIMM(",IMMIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMIMM",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMIMM",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMIMM",14,0)
 .. D FIEVAL(DFN,IMMIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMIMM",15,0)
 Q
"RTN","PXRMIMM",16,0)
 ;
"RTN","PXRMIMM",17,0)
 ;=======================================================================
"RTN","PXRMIMM",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate immunization terms.
"RTN","PXRMIMM",19,0)
 N FIEVAL,FIND0,FIND3,IMMIEN,INVDATE,TFIND0,TFIND3,TFINDING
"RTN","PXRMIMM",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMIMM",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMIMM",22,0)
 S IMMIEN=""
"RTN","PXRMIMM",23,0)
 F  S IMMIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTIMM(",IMMIEN)) Q:+IMMIEN=0  D
"RTN","PXRMIMM",24,0)
 . S INVDATE=$O(^AUPNVIMM("AA",DFN,IMMIEN,""))
"RTN","PXRMIMM",25,0)
 . S TFINDING=""
"RTN","PXRMIMM",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTIMM(",IMMIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMIMM",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMIMM",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMIMM",29,0)
 .. D FIEVAL(DFN,IMMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMIMM",30,0)
 Q
"RTN","PXRMIMM",31,0)
 ;
"RTN","PXRMIMM",32,0)
 ;=======================================================================
"RTN","PXRMIMM",33,0)
FIEVAL(DFN,IMMIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMIMM",34,0)
 N CONVAL,CONTRA,DATE,IEN,IND,REACTION,SERIES
"RTN","PXRMIMM",35,0)
 N TEMP,VALID,VIEN
"RTN","PXRMIMM",36,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMIMM",37,0)
 S IEN=$O(^AUPNVIMM("AA",DFN,IMMIEN,INVDATE,""))
"RTN","PXRMIMM",38,0)
 S TEMP=$G(^AUPNVIMM(IEN,0))
"RTN","PXRMIMM",39,0)
 S REACTION=$P(TEMP,U,6)
"RTN","PXRMIMM",40,0)
 S SERIES=$P(TEMP,U,4)
"RTN","PXRMIMM",41,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMIMM",42,0)
 S CONTRA=+$P(TEMP,U,7)
"RTN","PXRMIMM",43,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMIMM",44,0)
 ;Save the rest of the finding information.
"RTN","PXRMIMM",45,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMIMM",46,0)
 S FIEVAL(FINDING,"CONTRAINDICATED")=CONTRA
"RTN","PXRMIMM",47,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMIMM",48,0)
 S FIEVAL(FINDING,"FINDING")=IMMIEN_";AUTTIMM("
"RTN","PXRMIMM",49,0)
 S FIEVAL(FINDING,"REACTION")=REACTION
"RTN","PXRMIMM",50,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVIMM("
"RTN","PXRMIMM",51,0)
 S FIEVAL(FINDING,"SERIES")=SERIES
"RTN","PXRMIMM",52,0)
 S FIEVAL(FINDING,"VALUE")=SERIES
"RTN","PXRMIMM",53,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMIMM",54,0)
 ;Determine if the finding has expired.
"RTN","PXRMIMM",55,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMIMM",56,0)
 I 'VALID D  Q
"RTN","PXRMIMM",57,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMIMM",58,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMIMM",59,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMIMM",60,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,SERIES)
"RTN","PXRMIMM",61,0)
 I CONVAL'="" D
"RTN","PXRMIMM",62,0)
 . I CONVAL D
"RTN","PXRMIMM",63,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMIMM",64,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMIMM",65,0)
 . E  D
"RTN","PXRMIMM",66,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMIMM",67,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMIMM",68,0)
 I CONTRA S ^TMP(PXRMPID,$J,PXRMITEM,"CONTRAINDICATED")=1
"RTN","PXRMIMM",69,0)
 Q
"RTN","PXRMIMM",70,0)
 ;
"RTN","PXRMIMM",71,0)
 ;=======================================================================
"RTN","PXRMIMM",72,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMIMM",73,0)
 ;maintenance output.
"RTN","PXRMIMM",74,0)
 N IMMIEN,EM,FIEN,IND,PNAME,REACTION,SERIES,TEMP,VDATE
"RTN","PXRMIMM",75,0)
 S IMMIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMIMM",76,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMIMM",77,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMIMM",78,0)
 S REACTION=$G(FIEVAL(FINDING,"REACTION"))
"RTN","PXRMIMM",79,0)
 S SERIES=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMIMM",80,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMIMM",81,0)
 S TEMP=TEMP_" Immunization: "
"RTN","PXRMIMM",82,0)
 S IND=$P(^AUPNVIMM(IMMIEN,0),U,1)
"RTN","PXRMIMM",83,0)
 S PNAME=$P(^AUTTIMM(FIEN,0),U,1)
"RTN","PXRMIMM",84,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMIMM",85,0)
 I $L(SERIES)>0 D
"RTN","PXRMIMM",86,0)
 . S TEMP=TEMP_"; series - "
"RTN","PXRMIMM",87,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.11,.04,"",SERIES,.EM)
"RTN","PXRMIMM",88,0)
 I $L(REACTION)>0 D
"RTN","PXRMIMM",89,0)
 . S TEMP=TEMP_"; reaction - "
"RTN","PXRMIMM",90,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.11,.06,"",REACTION,.EM)
"RTN","PXRMIMM",91,0)
 I FIEVAL(FINDING,"CONTRAINDICATED") D
"RTN","PXRMIMM",92,0)
 . S TEMP=TEMP_" - CONTRAINDICATED"
"RTN","PXRMIMM",93,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMIMM",94,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMIMM",95,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMIMM",96,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMIMM",97,0)
 S NLINES=NLINES+1
"RTN","PXRMIMM",98,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMIMM",99,0)
 I $D(PXRMDEV) D
"RTN","PXRMIMM",100,0)
 . N UID
"RTN","PXRMIMM",101,0)
 . S UID="IMM "_PNAME
"RTN","PXRMIMM",102,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMIMM",103,0)
 ;
"RTN","PXRMIMM",104,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMIMM",105,0)
 I VDATE["E" D
"RTN","PXRMIMM",106,0)
 . N INDEX,VIEN
"RTN","PXRMIMM",107,0)
 . S INDEX="IMM-"_PNAME
"RTN","PXRMIMM",108,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMIMM",109,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMIMM",110,0)
 Q
"RTN","PXRMIMM",111,0)
 ;
"RTN","PXRMINQ")
0^9^B14960255
"RTN","PXRMINQ",1,0)
PXRMINQ ; SLC/PKR - Clinical Reminder inquiry routines. ;02/06/2001
"RTN","PXRMINQ",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMINQ",3,0)
 ;
"RTN","PXRMINQ",4,0)
 ;======================================================================
"RTN","PXRMINQ",5,0)
DISP(DIC,FLDS) ;Display detail.
"RTN","PXRMINQ",6,0)
 N L
"RTN","PXRMINQ",7,0)
 S L=0
"RTN","PXRMINQ",8,0)
 D EN1^DIP
"RTN","PXRMINQ",9,0)
 Q
"RTN","PXRMINQ",10,0)
 ;
"RTN","PXRMINQ",11,0)
 ;======================================================================
"RTN","PXRMINQ",12,0)
HEADER(TEXT) ;Display Header (see DHD variable).
"RTN","PXRMINQ",13,0)
 N TEMP,TEXTLEN,TEXTUND
"RTN","PXRMINQ",14,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMINQ",15,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMINQ",16,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMINQ",17,0)
 W TEXT
"RTN","PXRMINQ",18,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMINQ",19,0)
 W !,TEXTUND,!!
"RTN","PXRMINQ",20,0)
 Q
"RTN","PXRMINQ",21,0)
 ;
"RTN","PXRMINQ",22,0)
 ;======================================================================
"RTN","PXRMINQ",23,0)
REM ;Do reminder inquiry.
"RTN","PXRMINQ",24,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",25,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",26,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",27,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",28,0)
 S IENN=0
"RTN","PXRMINQ",29,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",30,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",31,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Definition: ")
"RTN","PXRMINQ",32,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",33,0)
 . D SET(IENN,"REMINDER DEFINITION INQUIRY")
"RTN","PXRMINQ",34,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",35,0)
 Q
"RTN","PXRMINQ",36,0)
 ;
"RTN","PXRMINQ",37,0)
 ;======================================================================
"RTN","PXRMINQ",38,0)
REMVAR(VAR,IEN) ;Do reminder inquiry for reminder IEN return formatted
"RTN","PXRMINQ",39,0)
 ;output in VAR. VAR can be either a local variable or a global.
"RTN","PXRMINQ",40,0)
 ;If it is a local it is indexed for the broker. If it is a global
"RTN","PXRMINQ",41,0)
 ;it should be passed in closed form i.e., ^TMP("PXRMTEST",$J).
"RTN","PXRMINQ",42,0)
 ;It will be returned formatted for ListMan i.e.,
"RTN","PXRMINQ",43,0)
 ;^TMP("PXRMTEST",$J,N,0).
"RTN","PXRMINQ",44,0)
 N %ZIS,BY,DC,DHD,DONE,FF,FILENAME,FILESPEC,FLDS,FROM,GBL,HFNAME
"RTN","PXRMINQ",45,0)
 N IND,IOP,NOW,PATH,PXRMFVPL,PXRMROOT,SUCCESS,TO,UNIQN
"RTN","PXRMINQ",46,0)
 ;Build the finding variable pointer information.
"RTN","PXRMINQ",47,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMINQ",48,0)
 S FLDS="[PXRM DEFINITION INQUIRY]"
"RTN","PXRMINQ",49,0)
 S PXRMROOT="^PXD(811.9,"
"RTN","PXRMINQ",50,0)
 D SET(IEN,"")
"RTN","PXRMINQ",51,0)
 ;Make sure the PXRM WORKSTATION device exists.
"RTN","PXRMINQ",52,0)
 D MKWSDEV^PXRMHOST
"RTN","PXRMINQ",53,0)
 ;Set up the output file before DIP is called.
"RTN","PXRMINQ",54,0)
 S PATH=$$PWD^%ZISH
"RTN","PXRMINQ",55,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",56,0)
 S NOW=$TR(NOW,".","")
"RTN","PXRMINQ",57,0)
 S UNIQN=$J_NOW
"RTN","PXRMINQ",58,0)
 S FILENAME="PXRMWSD"_UNIQN_".DAT"
"RTN","PXRMINQ",59,0)
 S HFNAME=PATH_FILENAME
"RTN","PXRMINQ",60,0)
 S IOP="PXRM WORKSTATION;80"
"RTN","PXRMINQ",61,0)
 S %ZIS("HFSMODE")="W"
"RTN","PXRMINQ",62,0)
 S %ZIS("HFSNAME")=HFNAME
"RTN","PXRMINQ",63,0)
 D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",64,0)
 ;Move the host file into a global.
"RTN","PXRMINQ",65,0)
 S GBL="^TMP(""PXRMINQ"",$J,1,0)"
"RTN","PXRMINQ",66,0)
 S GBL=$NA(@GBL)
"RTN","PXRMINQ",67,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",68,0)
 S SUCCESS=$$FTG^%ZISH(PATH,FILENAME,GBL,3)
"RTN","PXRMINQ",69,0)
 ;Look for a form feed, remove it and all subsequent lines.
"RTN","PXRMINQ",70,0)
 S FF=$C(12)
"RTN","PXRMINQ",71,0)
 I $G(VAR)["^" D
"RTN","PXRMINQ",72,0)
 . S VAR=$NA(@VAR)
"RTN","PXRMINQ",73,0)
 . S VAR=$P(VAR,")",1)
"RTN","PXRMINQ",74,0)
 . S VAR=VAR_",IND,0)"
"RTN","PXRMINQ",75,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",76,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",77,0)
 .. I ^TMP("PXRMINQ",$J,IND,0)=FF S DONE=1 Q
"RTN","PXRMINQ",78,0)
 .. S @VAR=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",79,0)
 E  D
"RTN","PXRMINQ",80,0)
 . S (DONE,IND)=0
"RTN","PXRMINQ",81,0)
 . F  Q:DONE  S IND=$O(^TMP("PXRMINQ",$J,IND)) Q:+IND=0  D
"RTN","PXRMINQ",82,0)
 .. S VAR(IND)=^TMP("PXRMINQ",$J,IND,0)
"RTN","PXRMINQ",83,0)
 .. I VAR(IND)=FF K ARRAY(IND) S DONE=1
"RTN","PXRMINQ",84,0)
 K ^TMP("PXRMINQ",$J)
"RTN","PXRMINQ",85,0)
 ;Delete the host file.
"RTN","PXRMINQ",86,0)
 S FILESPEC(FILENAME)=""
"RTN","PXRMINQ",87,0)
 S SUCCESS=$$DEL^%ZISH(PATH,$NA(FILESPEC))
"RTN","PXRMINQ",88,0)
 Q
"RTN","PXRMINQ",89,0)
 ;
"RTN","PXRMINQ",90,0)
 ;======================================================================
"RTN","PXRMINQ",91,0)
SELECT(ROOT,PROMPT) ;Select the entry.
"RTN","PXRMINQ",92,0)
 N DIC,Y
"RTN","PXRMINQ",93,0)
 S DIC=ROOT
"RTN","PXRMINQ",94,0)
 S DIC(0)="AEMQ"
"RTN","PXRMINQ",95,0)
 S DIC("A")=PROMPT
"RTN","PXRMINQ",96,0)
 D ^DIC
"RTN","PXRMINQ",97,0)
 Q Y
"RTN","PXRMINQ",98,0)
 ;
"RTN","PXRMINQ",99,0)
 ;======================================================================
"RTN","PXRMINQ",100,0)
SET(Y,TEXT) ;Set data for entry selection and the header.
"RTN","PXRMINQ",101,0)
 ;
"RTN","PXRMINQ",102,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMINQ",103,0)
 S BY="NUMBER"
"RTN","PXRMINQ",104,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMINQ",105,0)
 ;
"RTN","PXRMINQ",106,0)
 ;If TEXT is null then no header.
"RTN","PXRMINQ",107,0)
 I $L(TEXT)>0 D
"RTN","PXRMINQ",108,0)
 . S NOW=$$NOW^XLFDT
"RTN","PXRMINQ",109,0)
 . S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMINQ",110,0)
 . S DHD="W ?0 D HEADER^PXRMINQ("""_TEXT_""")"
"RTN","PXRMINQ",111,0)
 E  S DHD="@@"
"RTN","PXRMINQ",112,0)
 Q
"RTN","PXRMINQ",113,0)
 ;
"RTN","PXRMINQ",114,0)
 ;======================================================================
"RTN","PXRMINQ",115,0)
TAX ;Do taxonomy inquiry.
"RTN","PXRMINQ",116,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",117,0)
 S FLDS="[PXRM TAXONOMY INQUIRY]"
"RTN","PXRMINQ",118,0)
 S IENN=0
"RTN","PXRMINQ",119,0)
 S PXRMROOT="^PXD(811.2,"
"RTN","PXRMINQ",120,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",121,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Taxonomy: ")
"RTN","PXRMINQ",122,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",123,0)
 . D SET(IENN,"REMINDER TAXONOMY INQUIRY")
"RTN","PXRMINQ",124,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",125,0)
 Q
"RTN","PXRMINQ",126,0)
 ;
"RTN","PXRMINQ",127,0)
 ;======================================================================
"RTN","PXRMINQ",128,0)
TERM ;Do term inquiry.
"RTN","PXRMINQ",129,0)
 N BY,DC,DHD,FLDS,FROM,IENN,NOW,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMINQ",130,0)
 ;Build the finding variable pointer information
"RTN","PXRMINQ",131,0)
 D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMINQ",132,0)
 S FLDS="[PXRM TERM INQUIRY]"
"RTN","PXRMINQ",133,0)
 S IENN=0
"RTN","PXRMINQ",134,0)
 S PXRMROOT="^PXRMD(811.5,"
"RTN","PXRMINQ",135,0)
 F  Q:IENN=-1  D
"RTN","PXRMINQ",136,0)
 . S IENN=$$SELECT(PXRMROOT,"Select Reminder Term: ")
"RTN","PXRMINQ",137,0)
 . I IENN=-1 Q
"RTN","PXRMINQ",138,0)
 . D SET(IENN,"REMINDER TERM INQUIRY")
"RTN","PXRMINQ",139,0)
 . D DISP(PXRMROOT,FLDS)
"RTN","PXRMINQ",140,0)
 Q
"RTN","PXRMINQ",141,0)
 ;
"RTN","PXRMLAB")
0^34^B13511017
"RTN","PXRMLAB",1,0)
PXRMLAB ; SLC/PKR - Handle laboratory test findings. ;10/11/2000
"RTN","PXRMLAB",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMLAB",3,0)
 ;
"RTN","PXRMLAB",4,0)
 ;=======================================================================
"RTN","PXRMLAB",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate laboratory test findings.
"RTN","PXRMLAB",6,0)
 N FIND0,FIND3,FINDING,LABIEN
"RTN","PXRMLAB",7,0)
 S LABIEN=""
"RTN","PXRMLAB",8,0)
 F  S LABIEN=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",9,0)
 . S FINDING=""
"RTN","PXRMLAB",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","LAB(60,",LABIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMLAB",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",12,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMLAB",13,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMLAB",14,0)
 Q
"RTN","PXRMLAB",15,0)
 ;
"RTN","PXRMLAB",16,0)
 ;=======================================================================
"RTN","PXRMLAB",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate laboratory test terms.
"RTN","PXRMLAB",18,0)
 N FIND0,FIND3,LABIEN,LFIEVAL,TFIND0,TFIND3,TFINDING
"RTN","PXRMLAB",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLAB",20,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMLAB",21,0)
 S LABIEN=""
"RTN","PXRMLAB",22,0)
 F  S LABIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN)) Q:+LABIEN=0  D
"RTN","PXRMLAB",23,0)
 . S TFINDING=""
"RTN","PXRMLAB",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","LAB(60,",LABIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMLAB",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMLAB",26,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMLAB",27,0)
 .. D FIEVAL(DFN,LABIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMLAB",28,0)
 Q
"RTN","PXRMLAB",29,0)
 ;
"RTN","PXRMLAB",30,0)
 ;=======================================================================
"RTN","PXRMLAB",31,0)
FIEVAL(DFN,LABIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMLAB",32,0)
 N CONVAL,DATA,DATE,IEN,IND,INVDATE,LRT
"RTN","PXRMLAB",33,0)
 N SEQ,RESULT,STATUS,VALID,VALUE
"RTN","PXRMLAB",34,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",35,0)
 D RR^LR7OR1(DFN,"","","","CH",LABIEN,"",1)
"RTN","PXRMLAB",36,0)
 S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",""))
"RTN","PXRMLAB",37,0)
 I INVDATE="" S FIEVAL(FINDING)=0 K ^TMP("LRRR",$J) Q
"RTN","PXRMLAB",38,0)
 ;Order the results putting cancelled or pending last.
"RTN","PXRMLAB",39,0)
 S INVDATE=""
"RTN","PXRMLAB",40,0)
 F  S INVDATE=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE)) Q:+INVDATE=0  D
"RTN","PXRMLAB",41,0)
 . S SEQ=""
"RTN","PXRMLAB",42,0)
 . F  S SEQ=$O(^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)) Q:+SEQ=0  D
"RTN","PXRMLAB",43,0)
 .. S DATA=^TMP("LRRR",$J,DFN,"CH",INVDATE,SEQ)
"RTN","PXRMLAB",44,0)
 .. S RESULT=$P(DATA,U,2)
"RTN","PXRMLAB",45,0)
 .. I (RESULT="canc")!(RESULT="pending") S STATUS=1
"RTN","PXRMLAB",46,0)
 .. E  S STATUS=0
"RTN","PXRMLAB",47,0)
 .. S LRT(STATUS,INVDATE)=DATA
"RTN","PXRMLAB",48,0)
 K ^TMP("LRRR",$J)
"RTN","PXRMLAB",49,0)
 ;Process the list.
"RTN","PXRMLAB",50,0)
 S STATUS=""
"RTN","PXRMLAB",51,0)
 S STATUS=$O(LRT(STATUS))
"RTN","PXRMLAB",52,0)
 I STATUS'=0 S FIEVAL(FINDING)=0 Q
"RTN","PXRMLAB",53,0)
 S INVDATE=$O(LRT(STATUS,INVDATE))
"RTN","PXRMLAB",54,0)
 S DATE=$$FMDFINVL^PXRMDATE(INVDATE,0)
"RTN","PXRMLAB",55,0)
 ;Save the rest of the finding information.
"RTN","PXRMLAB",56,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMLAB",57,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMLAB",58,0)
 S FIEVAL(FINDING,"FINDING")=LABIEN_";LAB(60,"
"RTN","PXRMLAB",59,0)
 S DATA=LRT(STATUS,INVDATE)
"RTN","PXRMLAB",60,0)
 S FIEVAL(FINDING,"DATA")=DATA
"RTN","PXRMLAB",61,0)
 S VALUE=$P(DATA,U,2)
"RTN","PXRMLAB",62,0)
 S FIEVAL(FINDING,"RESULT")=$P(DATA,U,2)
"RTN","PXRMLAB",63,0)
 S FIEVAL(FINDING,"VALUE")=FIEVAL(FINDING,"RESULT")
"RTN","PXRMLAB",64,0)
 ;Determine if the finding has expired.
"RTN","PXRMLAB",65,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMLAB",66,0)
 I 'VALID D  Q
"RTN","PXRMLAB",67,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMLAB",68,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMLAB",69,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMLAB",70,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",71,0)
 I CONVAL'="" D
"RTN","PXRMLAB",72,0)
 . I CONVAL D
"RTN","PXRMLAB",73,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMLAB",74,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMLAB",75,0)
 . E  D
"RTN","PXRMLAB",76,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMLAB",77,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMLAB",78,0)
 Q
"RTN","PXRMLAB",79,0)
 ;
"RTN","PXRMLAB",80,0)
 ;=======================================================================
"RTN","PXRMLAB",81,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMLAB",82,0)
 ;maintenance output.
"RTN","PXRMLAB",83,0)
 N DATA,DATE,LABIEN,PNAME,TEMP,VALUE
"RTN","PXRMLAB",84,0)
 S DATA=FIEVAL(FINDING,"DATA")
"RTN","PXRMLAB",85,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMLAB",86,0)
 S VALUE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMLAB",87,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMLAB",88,0)
 S TEMP=TEMP_" Laboratory test: "
"RTN","PXRMLAB",89,0)
 S PNAME=$P(DATA,U,10)
"RTN","PXRMLAB",90,0)
 I $L(PNAME)=0 S PNAME=$P(DATA,U,15)
"RTN","PXRMLAB",91,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMLAB",92,0)
 I $L(VALUE)>0 D
"RTN","PXRMLAB",93,0)
 . S TEMP=TEMP_"; value - "
"RTN","PXRMLAB",94,0)
 . S TEMP=TEMP_VALUE
"RTN","PXRMLAB",95,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMLAB",96,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMLAB",97,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMLAB",98,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMLAB",99,0)
 S NLINES=NLINES+1
"RTN","PXRMLAB",100,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMLAB",101,0)
 I $D(PXRMDEV) D
"RTN","PXRMLAB",102,0)
 . N UID
"RTN","PXRMLAB",103,0)
 . S UID="LAB "_PNAME
"RTN","PXRMLAB",104,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMLAB",105,0)
 Q
"RTN","PXRMLAB",106,0)
 ;
"RTN","PXRMLOG")
0^66^B51428655
"RTN","PXRMLOG",1,0)
PXRMLOG ; SLC/PKR - Clinical Reminders logic routines. ;02/26/2001
"RTN","PXRMLOG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMLOG",3,0)
 ;
"RTN","PXRMLOG",4,0)
 ;=======================================================================
"RTN","PXRMLOG",5,0)
EVALPCL(FREQ,PCLOGIC,FIEVAL) ;Evaluate the Patient Cohort Logic.
"RTN","PXRMLOG",6,0)
 ;Determine the applicable frequency age range set.
"RTN","PXRMLOG",7,0)
 ;Get the baseline
"RTN","PXRMLOG",8,0)
 N MAXAGE,MINAGE
"RTN","PXRMLOG",9,0)
 N AGEFI,IND,FINDING,FLIST,FREQDAY,NOFREQ,NUMAFI
"RTN","PXRMLOG",10,0)
 N RANKAR,RANK,RANKFI,TEMP
"RTN","PXRMLOG",11,0)
 D MMF^PXRMAGE(.MINAGE,.MAXAGE,.FREQ,.FIEVAL)
"RTN","PXRMLOG",12,0)
 ;If there is no match with any of the baseline values FREQ=-1.
"RTN","PXRMLOG",13,0)
 ;
"RTN","PXRMLOG",14,0)
 ;See if any findings override the baseline.
"RTN","PXRMLOG",15,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,40))
"RTN","PXRMLOG",16,0)
 S NUMAFI=+$P(TEMP,U,1)
"RTN","PXRMLOG",17,0)
 ;If there are no age findings use the baseline.
"RTN","PXRMLOG",18,0)
 I NUMAFI=0 G ACHK
"RTN","PXRMLOG",19,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",20,0)
 F IND=1:1:NUMAFI D
"RTN","PXRMLOG",21,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",22,0)
 . I (FIEVAL(FINDING))&('$D(FIEVAL(FINDING,"EXPIRED"))) D
"RTN","PXRMLOG",23,0)
 .. S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",24,0)
 .. S RANK=+$P(TEMP,U,5)
"RTN","PXRMLOG",25,0)
 .. I RANK=0 S RANK=9999
"RTN","PXRMLOG",26,0)
 .. S FREQDAY=$$FRQINDAY^PXRMDATE($P(TEMP,U,4))
"RTN","PXRMLOG",27,0)
 ..;If there is no frequency with this rank ignore it.
"RTN","PXRMLOG",28,0)
 .. I FREQDAY>0 S RANKAR(RANK,FREQDAY,FINDING)=""
"RTN","PXRMLOG",29,0)
 ;If there was a ranking use it otherwise use the greatest frequency.
"RTN","PXRMLOG",30,0)
 I '$D(RANKAR) G ACHK
"RTN","PXRMLOG",31,0)
 S RANK=0
"RTN","PXRMLOG",32,0)
 S RANK=+$O(RANKAR(RANK))
"RTN","PXRMLOG",33,0)
 S FREQDAY=+$O(RANKAR(RANK,""))
"RTN","PXRMLOG",34,0)
 S FINDING=+$O(RANKAR(RANK,FREQDAY,""))
"RTN","PXRMLOG",35,0)
 I FINDING>0 D
"RTN","PXRMLOG",36,0)
 . S TEMP=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMLOG",37,0)
 . S FREQ=$P(TEMP,U,4)
"RTN","PXRMLOG",38,0)
 . S MINAGE=$P(TEMP,U,2)
"RTN","PXRMLOG",39,0)
 . S MAXAGE=$P(TEMP,U,3)
"RTN","PXRMLOG",40,0)
 .;Remove the baseline age findings since they have been overridden.
"RTN","PXRMLOG",41,0)
 . K FIEVAL("AGE")
"RTN","PXRMLOG",42,0)
ACHK ;
"RTN","PXRMLOG",43,0)
 I (FREQ="")!(FREQ=-1) D
"RTN","PXRMLOG",44,0)
 . S NOFREQ=1
"RTN","PXRMLOG",45,0)
 . S AGEFI=0
"RTN","PXRMLOG",46,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="There is no reminder frequency!"
"RTN","PXRMLOG",47,0)
 E  D
"RTN","PXRMLOG",48,0)
 . S NOFREQ=0
"RTN","PXRMLOG",49,0)
 . S AGEFI=$$AGECHECK^PXRMAGE(PXRMAGE,MINAGE,MAXAGE)
"RTN","PXRMLOG",50,0)
 I ('AGEFI)&('NOFREQ) D
"RTN","PXRMLOG",51,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","AGE")=""
"RTN","PXRMLOG",52,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","AGE")="Patient does not meet any age criteria!"
"RTN","PXRMLOG",53,0)
 E  D
"RTN","PXRMLOG",54,0)
 .;Save the final frequency and age range for display.
"RTN","PXRMLOG",55,0)
 . S TEMP="Due every "_$$FMTFREQ^PXRMAGE(FREQ)_$$FMTAGE^PXRMAGE(MINAGE,MAXAGE)
"RTN","PXRMLOG",56,0)
 .;Use the z so this will be the last of the info text.
"RTN","PXRMLOG",57,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG")=TEMP
"RTN","PXRMLOG",58,0)
 ;
"RTN","PXRMLOG",59,0)
 ;Evaluate the patient cohort logic
"RTN","PXRMLOG",60,0)
 N NUM,PCLOG,PCLSTR,SEXFI,TEST
"RTN","PXRMLOG",61,0)
 S SEXFI=1
"RTN","PXRMLOG",62,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,32))
"RTN","PXRMLOG",63,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",64,0)
 S (PCLOG,PCLSTR)=^PXD(811.9,PXRMITEM,31)
"RTN","PXRMLOG",65,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"SEX",SEXFI)
"RTN","PXRMLOG",66,0)
 S PCLOG=$$STRREP^PXRMUTIL(PCLOG,"AGE",AGEFI)
"RTN","PXRMLOG",67,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",68,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",69,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",70,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",71,0)
 . S PCLOG=$$STRREP^PXRMUTIL(PCLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",72,0)
 I @PCLOG
"RTN","PXRMLOG",73,0)
 S TEST=$T
"RTN","PXRMLOG",74,0)
 ;Check for a dead patient.
"RTN","PXRMLOG",75,0)
 I +$G(^XTMP(PXRMDFN,"DOD"))>0 S PCLOGIC=0_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",76,0)
 E  S PCLOGIC=TEST_U_PCLSTR_U_PCLOG
"RTN","PXRMLOG",77,0)
 I 'TEST S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","COHORT")=""
"RTN","PXRMLOG",78,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"PATIENT COHORT LOGIC")=PCLOGIC
"RTN","PXRMLOG",79,0)
 Q
"RTN","PXRMLOG",80,0)
 ;
"RTN","PXRMLOG",81,0)
 ;=======================================================================
"RTN","PXRMLOG",82,0)
EVALRESL(RESDATE,RESLOGIC,FIEVAL) ;Evaluate the Resolution Logic.
"RTN","PXRMLOG",83,0)
 N IND,FINDING,FIV,FLIST,NUM,RESLOG,RESLSTR,TEST
"RTN","PXRMLOG",84,0)
 S TEMP=$G(^PXD(811.9,PXRMITEM,36))
"RTN","PXRMLOG",85,0)
 S NUM=+$P(TEMP,U,1)
"RTN","PXRMLOG",86,0)
 I NUM=0 Q
"RTN","PXRMLOG",87,0)
 S (RESLOG,RESLSTR)=^PXD(811.9,PXRMITEM,35)
"RTN","PXRMLOG",88,0)
 S FLIST=$P(TEMP,U,2)
"RTN","PXRMLOG",89,0)
 F IND=1:1:NUM D
"RTN","PXRMLOG",90,0)
 . S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",91,0)
 . S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",92,0)
 . S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIEVAL(FINDING))
"RTN","PXRMLOG",93,0)
 I @RESLOG
"RTN","PXRMLOG",94,0)
 S TEST=$T
"RTN","PXRMLOG",95,0)
 S RESLOGIC=TEST_U_RESLSTR_U_RESLOG
"RTN","PXRMLOG",96,0)
 I $D(PXRMDEV) S ^TMP(PXRMPID,$J,PXRMITEM,"RESOLUTION LOGIC")=RESLOGIC
"RTN","PXRMLOG",97,0)
 I TEST S RESDATE=$$RESDATE(RESLSTR,.FIEVAL)
"RTN","PXRMLOG",98,0)
 E  S RESDATE=0
"RTN","PXRMLOG",99,0)
 ;
"RTN","PXRMLOG",100,0)
 ;If the reminder was not resolved because of an expired finding
"RTN","PXRMLOG",101,0)
 ;find and save the expired resolution date for display.
"RTN","PXRMLOG",102,0)
 I RESDATE=0 D
"RTN","PXRMLOG",103,0)
 . S RESLOG=RESLSTR
"RTN","PXRMLOG",104,0)
 . F IND=1:1:NUM D
"RTN","PXRMLOG",105,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMLOG",106,0)
 .. S FIV=FIEVAL(FINDING)
"RTN","PXRMLOG",107,0)
 .. I $D(FIEVAL(FINDING,"EXPIRED")) D
"RTN","PXRMLOG",108,0)
 ... S FIV=1
"RTN","PXRMLOG",109,0)
 .. S TEMP="FI("_FINDING_")"
"RTN","PXRMLOG",110,0)
 .. S RESLOG=$$STRREP^PXRMUTIL(RESLOG,TEMP,FIV)
"RTN","PXRMLOG",111,0)
 . I @RESLOG
"RTN","PXRMLOG",112,0)
 . S TEST=$T
"RTN","PXRMLOG",113,0)
 . I TEST S RESDATE=$$RESDATE(RESLSTR,.FIEVAL)_"X"
"RTN","PXRMLOG",114,0)
 Q
"RTN","PXRMLOG",115,0)
 ;
"RTN","PXRMLOG",116,0)
 ;=======================================================================
"RTN","PXRMLOG",117,0)
MINRD(DT1,DT2) ;Return the minimum date. If one of the dates is 0 then return
"RTN","PXRMLOG",118,0)
 ;the other date.
"RTN","PXRMLOG",119,0)
 S DT1=+DT1
"RTN","PXRMLOG",120,0)
 S DT2=+DT2
"RTN","PXRMLOG",121,0)
 I DT1=0 Q DT2
"RTN","PXRMLOG",122,0)
 I DT2=0 Q DT1
"RTN","PXRMLOG",123,0)
 Q $$MIN^XLFMTH(DT1,DT2)
"RTN","PXRMLOG",124,0)
 ;
"RTN","PXRMLOG",125,0)
 ;=======================================================================
"RTN","PXRMLOG",126,0)
POP(STACK,SP) ;Pop an element off of the stack.
"RTN","PXRMLOG",127,0)
 N TEMP
"RTN","PXRMLOG",128,0)
 S TEMP=STACK(SP)
"RTN","PXRMLOG",129,0)
 K STACK(SP)
"RTN","PXRMLOG",130,0)
 S SP=SP-1
"RTN","PXRMLOG",131,0)
 Q TEMP
"RTN","PXRMLOG",132,0)
 ;
"RTN","PXRMLOG",133,0)
 ;=======================================================================
"RTN","PXRMLOG",134,0)
PUSH(STACK,SP,ELEM) ;Push an element on the stack.
"RTN","PXRMLOG",135,0)
 S SP=SP+1
"RTN","PXRMLOG",136,0)
 S STACK(SP)=ELEM
"RTN","PXRMLOG",137,0)
 Q
"RTN","PXRMLOG",138,0)
 ;
"RTN","PXRMLOG",139,0)
 ;=======================================================================
"RTN","PXRMLOG",140,0)
LOGOP(DT1,DT2,LOP) ;Given two dates return the most recent of the logical
"RTN","PXRMLOG",141,0)
 ;operator is ! and the oldest if it is &.
"RTN","PXRMLOG",142,0)
 I LOP="!" Q $$MAX^XLFMTH(DT1,DT2)
"RTN","PXRMLOG",143,0)
 I LOP="&" Q $$MINRD(DT1,DT2)
"RTN","PXRMLOG",144,0)
 Q
"RTN","PXRMLOG",145,0)
 ;
"RTN","PXRMLOG",146,0)
 ;=======================================================================
"RTN","PXRMLOG",147,0)
RESDATE(RESLSTR,FIEVAL) ;Return the resolution date based on the following
"RTN","PXRMLOG",148,0)
 ;rules:
"RTN","PXRMLOG",149,0)
 ; Dates that are ORed use the most recent.
"RTN","PXRMLOG",150,0)
 ; Dates that are ANDed use the oldest.
"RTN","PXRMLOG",151,0)
 N DATE,DSTRING,DT1,DT2,DT3,FITEMP,IND,INDEX,JND,LEN
"RTN","PXRMLOG",152,0)
 N NOT,OPER,PFSTACK,SP,STACK,TEMP
"RTN","PXRMLOG",153,0)
 ;Remove leading (n) entries.
"RTN","PXRMLOG",154,0)
 I ($E(RESLSTR,1,4)="(0)!")!($E(RESLSTR,1,4)="(1)&") S $E(RESLSTR,1,4)=""
"RTN","PXRMLOG",155,0)
 ;The NOT operator is not relevant for the date calculation so remove
"RTN","PXRMLOG",156,0)
 ;any NOTs.
"RTN","PXRMLOG",157,0)
 S DSTRING=$TR(RESLSTR,"'","")
"RTN","PXRMLOG",158,0)
 ;Replace true findings with their dates. This includes false findings
"RTN","PXRMLOG",159,0)
 ;that are notted in the logic.
"RTN","PXRMLOG",160,0)
 S SP=1
"RTN","PXRMLOG",161,0)
 F  Q:SP=0  D
"RTN","PXRMLOG",162,0)
 . S IND=$F(RESLSTR,"FI(",SP)
"RTN","PXRMLOG",163,0)
 . I $E(RESLSTR,IND-4)="'" S NOT=1
"RTN","PXRMLOG",164,0)
 . E  S NOT=0
"RTN","PXRMLOG",165,0)
 . I IND=0 S SP=0 Q
"RTN","PXRMLOG",166,0)
 . S JND=$F(RESLSTR,")",IND)
"RTN","PXRMLOG",167,0)
 . S INDEX=$E(RESLSTR,IND,JND-2)
"RTN","PXRMLOG",168,0)
 . S SP=JND
"RTN","PXRMLOG",169,0)
 . S TEMP="FI("_INDEX_")"
"RTN","PXRMLOG",170,0)
 . I NOT S FITEMP="'"_"FIEVAL("_INDEX_")"
"RTN","PXRMLOG",171,0)
 . E  S FITEMP="FIEVAL("_INDEX_")"
"RTN","PXRMLOG",172,0)
 . I @FITEMP S DATE=+$G(FIEVAL(INDEX,"DATE"))
"RTN","PXRMLOG",173,0)
 . E  S DATE=0
"RTN","PXRMLOG",174,0)
 . S DSTRING=$$STRREP^PXRMUTIL(DSTRING,TEMP,DATE)
"RTN","PXRMLOG",175,0)
 ;
"RTN","PXRMLOG",176,0)
 ;Convert the string to postfix form for evaluation.
"RTN","PXRMLOG",177,0)
 D POSTFIX^PXRMUTIL(.PFSTACK,DSTRING,"!&")
"RTN","PXRMLOG",178,0)
 ;Set the allowable logic operators.
"RTN","PXRMLOG",179,0)
 S OPER="!&"
"RTN","PXRMLOG",180,0)
 S SP=0
"RTN","PXRMLOG",181,0)
 F IND=1:1:PFSTACK(0) D
"RTN","PXRMLOG",182,0)
 . S TEMP=PFSTACK(IND)
"RTN","PXRMLOG",183,0)
 . I OPER[TEMP D
"RTN","PXRMLOG",184,0)
 ..;Pop the top two elements on the stack and do the operation.
"RTN","PXRMLOG",185,0)
 .. S DT1=$$POP(.STACK,.SP)
"RTN","PXRMLOG",186,0)
 .. S DT2=$$POP(.STACK,.SP)
"RTN","PXRMLOG",187,0)
 .. S DT3=$$LOGOP(DT1,DT2,TEMP)
"RTN","PXRMLOG",188,0)
 ..;Save the result back on the stack
"RTN","PXRMLOG",189,0)
 .. D PUSH(.STACK,.SP,DT3)
"RTN","PXRMLOG",190,0)
 . E  D PUSH(.STACK,.SP,TEMP)
"RTN","PXRMLOG",191,0)
 ;The result is the only thing left on the stack.
"RTN","PXRMLOG",192,0)
 Q $$POP(.STACK,.SP)
"RTN","PXRMLOG",193,0)
 ;
"RTN","PXRMLOG",194,0)
 ;=======================================================================
"RTN","PXRMLOG",195,0)
SEX() ;Return FALSE (0) if the patient is the wrong sex for
"RTN","PXRMLOG",196,0)
 ; the reminder, TRUE (1) is the patient is the right sex.
"RTN","PXRMLOG",197,0)
 N REMSEX
"RTN","PXRMLOG",198,0)
 S REMSEX=$P($G(^PXD(811.9,PXRMITEM,0)),U,9)
"RTN","PXRMLOG",199,0)
 I ($P(PXRMSEX,U,1)=REMSEX)!(REMSEX="") Q 1
"RTN","PXRMLOG",200,0)
 E  D  Q 0
"RTN","PXRMLOG",201,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"N/A","SEX")=""
"RTN","PXRMLOG",202,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,"INFO","SEX")="Patient is the wrong sex!"
"RTN","PXRMLOG",203,0)
 Q
"RTN","PXRMLOG",204,0)
 ;
"RTN","PXRMLOG",205,0)
 ;=======================================================================
"RTN","PXRMLOG",206,0)
VALID(LOGSTR,MINLEN,MAXLEN) ;Make sure that LOGSTR is a valid logic string.
"RTN","PXRMLOG",207,0)
 ;This is called by the input transform for PATIENT COHORT LOGIC and
"RTN","PXRMLOG",208,0)
 ;RESOLUTION LOGIC. Return 1 if LOGSTR is ok.
"RTN","PXRMLOG",209,0)
 ;
"RTN","PXRMLOG",210,0)
 ;Don't do this if this is being called as a result of an install
"RTN","PXRMLOG",211,0)
 ;through the Exchange Utility.
"RTN","PXRMLOG",212,0)
 I $G(PXRMEXCH) Q 1
"RTN","PXRMLOG",213,0)
 I LOGSTR="" Q 0
"RTN","PXRMLOG",214,0)
 ;
"RTN","PXRMLOG",215,0)
 ;Check the length.
"RTN","PXRMLOG",216,0)
 N LEN
"RTN","PXRMLOG",217,0)
 S LEN=$L(LOGSTR)
"RTN","PXRMLOG",218,0)
 I (LEN<MINLEN)!(LEN>MAXLEN) Q 0
"RTN","PXRMLOG",219,0)
 ;
"RTN","PXRMLOG",220,0)
 ;Use the FileMan code validator to check the code.
"RTN","PXRMLOG",221,0)
 N X
"RTN","PXRMLOG",222,0)
 S X="S Y="_$TR(LOGSTR,";","")
"RTN","PXRMLOG",223,0)
 D ^DIM
"RTN","PXRMLOG",224,0)
 I $D(X)=0 D  Q 0
"RTN","PXRMLOG",225,0)
 . S TEXT(1)="LOGIC string: "_LOGSTR
"RTN","PXRMLOG",226,0)
 . S TEXT(2)="contains invalid MUMPS code!"
"RTN","PXRMLOG",227,0)
 . D EN^DDIOL(.TEXT)
"RTN","PXRMLOG",228,0)
 ;
"RTN","PXRMLOG",229,0)
 N IC,IND,SE,SS,TEXT,TS,TSTSTR,VALID,VLE
"RTN","PXRMLOG",230,0)
 ;Make sure the entries in LOGSTR correspond with components in
"RTN","PXRMLOG",231,0)
 ;the reminder definition.
"RTN","PXRMLOG",232,0)
 S TSTSTR=LOGSTR
"RTN","PXRMLOG",233,0)
 ;Replace the Boolean operators with the standard separator.
"RTN","PXRMLOG",234,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&'",U)
"RTN","PXRMLOG",235,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"&",U)
"RTN","PXRMLOG",236,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!'",U)
"RTN","PXRMLOG",237,0)
 S TSTSTR=$$STRREP^PXRMUTIL(TSTSTR,"!",U)
"RTN","PXRMLOG",238,0)
 S VALID=1
"RTN","PXRMLOG",239,0)
 S LEN=$L(TSTSTR,U)
"RTN","PXRMLOG",240,0)
 F IC=1:1:LEN D
"RTN","PXRMLOG",241,0)
 . S VLE=0
"RTN","PXRMLOG",242,0)
 . S TS=$P(TSTSTR,U,IC)
"RTN","PXRMLOG",243,0)
 .;
"RTN","PXRMLOG",244,0)
 . S SS=$F(TS,"FI(")
"RTN","PXRMLOG",245,0)
 . I SS>0 D
"RTN","PXRMLOG",246,0)
 .. S VLE=1
"RTN","PXRMLOG",247,0)
 .. S SE=$F(TS,")")-2
"RTN","PXRMLOG",248,0)
 .. S IND=$E(TS,SS,SE)
"RTN","PXRMLOG",249,0)
 .. I '$D(^PXD(811.9,DA,20,IND)) D
"RTN","PXRMLOG",250,0)
 ... S TEXT="FI("_IND_") is not in this reminder definition!"
"RTN","PXRMLOG",251,0)
 ... D EN^DDIOL(TEXT)
"RTN","PXRMLOG",252,0)
 ... S VALID=0
"RTN","PXRMLOG",253,0)
 .;
"RTN","PXRMLOG",254,0)
 .;Now check for other valid logic elements.
"RTN","PXRMLOG",255,0)
 . I 'VLE D
"RTN","PXRMLOG",256,0)
 .. I TS["AGE" S VLE=1
"RTN","PXRMLOG",257,0)
 .. I TS["SEX" S VLE=1
"RTN","PXRMLOG",258,0)
 . I 'VLE D
"RTN","PXRMLOG",259,0)
 .. S TEXT=TS_" is not a valid logic element!"
"RTN","PXRMLOG",260,0)
 .. D EN^DDIOL(TEXT)
"RTN","PXRMLOG",261,0)
 .. S VALID=0
"RTN","PXRMLOG",262,0)
 ;
"RTN","PXRMLOG",263,0)
 Q VALID
"RTN","PXRMLOG",264,0)
 ;
"RTN","PXRMMEAS")
0^35^B13386405
"RTN","PXRMMEAS",1,0)
PXRMMEAS ; SLC/PKR - Handle measurement findings. ;10/11/2000
"RTN","PXRMMEAS",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMMEAS",3,0)
 ;
"RTN","PXRMMEAS",4,0)
 ;=======================================================================
"RTN","PXRMMEAS",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate vitals/measurement findings.
"RTN","PXRMMEAS",6,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",7,0)
 N FIND0,FIND3,FINDING,MTYPE
"RTN","PXRMMEAS",8,0)
 S MTYPE=""
"RTN","PXRMMEAS",9,0)
 F  S MTYPE=$O(^PXD(811.9,PXRMITEM,20,"E","GMRD(120.51,",MTYPE)) Q:+MTYPE=0  D
"RTN","PXRMMEAS",10,0)
 . S FINDING=""
"RTN","PXRMMEAS",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","GMRD(120.51,",MTYPE,FINDING)) Q:+FINDING=0  D
"RTN","PXRMMEAS",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMEAS",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMEAS",14,0)
 .. D FIEVAL(DFN,MTYPE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMMEAS",15,0)
 Q
"RTN","PXRMMEAS",16,0)
 ;
"RTN","PXRMMEAS",17,0)
 ;=======================================================================
"RTN","PXRMMEAS",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate vitals/measurement terms.
"RTN","PXRMMEAS",19,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",20,0)
 N FIND0,FIND3,MTYPE,TFIND0,TFIND3,TFINDING
"RTN","PXRMMEAS",21,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMEAS",22,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMEAS",23,0)
 S MTYPE=""
"RTN","PXRMMEAS",24,0)
 F  S MTYPE=$O(^PXRMD(811.5,TERMIEN,20,"E","GMRD(120.51,",MTYPE)) Q:+MTYPE=0  D
"RTN","PXRMMEAS",25,0)
 . S TFINDING=""
"RTN","PXRMMEAS",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","GMRD(120.51,",MTYPE,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMMEAS",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMMEAS",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMMEAS",29,0)
 .. D FIEVAL(DFN,MTYPE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMMEAS",30,0)
 Q
"RTN","PXRMMEAS",31,0)
 ;
"RTN","PXRMMEAS",32,0)
 ;=======================================================================
"RTN","PXRMMEAS",33,0)
FIEVAL(DFN,MTYPE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMMEAS",34,0)
 ;Use the most recent measurement.
"RTN","PXRMMEAS",35,0)
 N ABBR,CONVAL,DATA,DATE,ERR,GMRVSTR,IC,IEN,INVDATE
"RTN","PXRMMEAS",36,0)
 N MNAME,RATE,VALID
"RTN","PXRMMEAS",37,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMMEAS",38,0)
 ;Setup for the GMSVUT0 call.
"RTN","PXRMMEAS",39,0)
 S ABBR=$$GET1^DIQ(120.51,MTYPE,1,"","","","ERR")
"RTN","PXRMMEAS",40,0)
 S GMRVSTR=ABBR
"RTN","PXRMMEAS",41,0)
 S GMRVSTR(0)=U_U_1_U_1
"RTN","PXRMMEAS",42,0)
 D EN1^GMRVUT0
"RTN","PXRMMEAS",43,0)
 ;Find the latest entry for this measurement type.
"RTN","PXRMMEAS",44,0)
 I $D(^UTILITY($J,"GMRVD")) D
"RTN","PXRMMEAS",45,0)
 . S (IEN,INVDATE)=""
"RTN","PXRMMEAS",46,0)
 . S INVDATE=$O(^UTILITY($J,"GMRVD",INVDATE))
"RTN","PXRMMEAS",47,0)
 . I INVDATE="" S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",48,0)
 . S IEN=$O(^UTILITY($J,"GMRVD",INVDATE,ABBR,IEN))
"RTN","PXRMMEAS",49,0)
 . S DATA=^UTILITY($J,"GMRVD",INVDATE,ABBR,IEN)
"RTN","PXRMMEAS",50,0)
 . S RATE=$P(DATA,U,8)
"RTN","PXRMMEAS",51,0)
 E  S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",52,0)
 K ^UTILITY($J,"GMRVD")
"RTN","PXRMMEAS",53,0)
 ;
"RTN","PXRMMEAS",54,0)
 I $G(FIEVAL(FINDING))=0 Q
"RTN","PXRMMEAS",55,0)
 S DATE=$P($G(DATA),U,1)
"RTN","PXRMMEAS",56,0)
 ;Save the rest of the finding information.
"RTN","PXRMMEAS",57,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMMEAS",58,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMMEAS",59,0)
 S FIEVAL(FINDING,"FINDING")=MTYPE_";GMRD(120.51,"
"RTN","PXRMMEAS",60,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";GMRV(120.5,"
"RTN","PXRMMEAS",61,0)
 S FIEVAL(FINDING,"DATA")=DATA
"RTN","PXRMMEAS",62,0)
 S FIEVAL(FINDING,"RATE")=RATE
"RTN","PXRMMEAS",63,0)
 S FIEVAL(FINDING,"VALUE")=RATE
"RTN","PXRMMEAS",64,0)
 ;Determine if the finding has expired.
"RTN","PXRMMEAS",65,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMMEAS",66,0)
 I 'VALID D  Q
"RTN","PXRMMEAS",67,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",68,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMMEAS",69,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMMEAS",70,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,RATE)
"RTN","PXRMMEAS",71,0)
 I CONVAL'="" D
"RTN","PXRMMEAS",72,0)
 . I CONVAL D
"RTN","PXRMMEAS",73,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMMEAS",74,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMMEAS",75,0)
 . E  D
"RTN","PXRMMEAS",76,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMMEAS",77,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMMEAS",78,0)
 Q
"RTN","PXRMMEAS",79,0)
 ;
"RTN","PXRMMEAS",80,0)
 ;=======================================================================
"RTN","PXRMMEAS",81,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMMEAS",82,0)
 ;maintenance output.
"RTN","PXRMMEAS",83,0)
 N DATA,DATE,EM,FIEN,MNAME,MTYPE,RATE,TEMP
"RTN","PXRMMEAS",84,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMMEAS",85,0)
 S DATA=FIEVAL(FINDING,"DATA")
"RTN","PXRMMEAS",86,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMMEAS",87,0)
 S RATE=$G(FIEVAL(FINDING,"VALUE"))
"RTN","PXRMMEAS",88,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMMEAS",89,0)
 S TEMP=TEMP_" Measurement: "
"RTN","PXRMMEAS",90,0)
 S MTYPE=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMMEAS",91,0)
 S MNAME=$$GET1^DIQ(120.51,MTYPE,.01,"","","","ERR")
"RTN","PXRMMEAS",92,0)
 S TEMP=TEMP_MNAME
"RTN","PXRMMEAS",93,0)
 I $L(RATE)>0 D
"RTN","PXRMMEAS",94,0)
 . S TEMP=TEMP_"; rate - "
"RTN","PXRMMEAS",95,0)
 . S TEMP=TEMP_RATE
"RTN","PXRMMEAS",96,0)
 ;Check for abnormal measurement.
"RTN","PXRMMEAS",97,0)
 S TEMP=TEMP_$P(DATA,U,12)
"RTN","PXRMMEAS",98,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMMEAS",99,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMMEAS",100,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMMEAS",101,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMMEAS",102,0)
 S NLINES=NLINES+1
"RTN","PXRMMEAS",103,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMMEAS",104,0)
 I $D(PXRMDEV) D
"RTN","PXRMMEAS",105,0)
 . N UID
"RTN","PXRMMEAS",106,0)
 . S UID="MEAS "_MNAME
"RTN","PXRMMEAS",107,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMMEAS",108,0)
 Q
"RTN","PXRMMEAS",109,0)
 ;
"RTN","PXRMMH")
0^36^B26447410
"RTN","PXRMMH",1,0)
PXRMMH ; SLC/PKR - Handle mental health findings. ;10/11/2000
"RTN","PXRMMH",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMMH",3,0)
 ;
"RTN","PXRMMH",4,0)
 ;=======================================================================
"RTN","PXRMMH",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate mental health instrument findings.
"RTN","PXRMMH",6,0)
 N FIND0,FIND3,FINDING,MHIEN,YS
"RTN","PXRMMH",7,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",8,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",9,0)
 S MHIEN=""
"RTN","PXRMMH",10,0)
 F  S MHIEN=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",11,0)
 . S FINDING=""
"RTN","PXRMMH",12,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","YTT(601,",MHIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMMH",13,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",14,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMH",15,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,FIND3,"","",FINDING,.FIEVAL,.YS)
"RTN","PXRMMH",16,0)
 Q
"RTN","PXRMMH",17,0)
 ;
"RTN","PXRMMH",18,0)
 ;=======================================================================
"RTN","PXRMMH",19,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate mental health instrument terms.
"RTN","PXRMMH",20,0)
 N FIND0,FIND3,MHIEN,TFIND0,TFIND3,TFINDING,YS
"RTN","PXRMMH",21,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMMH",22,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMMH",23,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",24,0)
 S YS("LIMIT")=1
"RTN","PXRMMH",25,0)
 S MHIEN=""
"RTN","PXRMMH",26,0)
 F  S MHIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN)) Q:+MHIEN=0  D
"RTN","PXRMMH",27,0)
 . S TFINDING=""
"RTN","PXRMMH",28,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","YTT(601,",MHIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMMH",29,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMMH",30,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMMH",31,0)
 .. D FIEVAL(DFN,MHIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL,.YS)
"RTN","PXRMMH",32,0)
 Q
"RTN","PXRMMH",33,0)
 ;
"RTN","PXRMMH",34,0)
 ;=======================================================================
"RTN","PXRMMH",35,0)
FIEVAL(DFN,MHIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL,YS) ;
"RTN","PXRMMH",36,0)
 N CONVAL,MHTEST,SCALE,SCNAME,SCORE,TEMP,TSCORE
"RTN","PXRMMH",37,0)
 N X,Y,VALID,YSDATA,YTT0
"RTN","PXRMMH",38,0)
 S YTT0=^YTT(601,MHIEN,0)
"RTN","PXRMMH",39,0)
 S MHTEST=$P(YTT0,U,1)
"RTN","PXRMMH",40,0)
 S SCALE=$P(TFIND0,U,12)
"RTN","PXRMMH",41,0)
 I SCALE="" S SCALE=$P(FIND0,U,12)
"RTN","PXRMMH",42,0)
 S YS("CODE")=MHTEST
"RTN","PXRMMH",43,0)
 ;The scale can be either the name or the number.
"RTN","PXRMMH",44,0)
 I (SCALE'=""),(+SCALE=0) D
"RTN","PXRMMH",45,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",SCALE,""))
"RTN","PXRMMH",46,0)
 S YS("DFN")=DFN
"RTN","PXRMMH",47,0)
 S YS("SCALE")=SCALE
"RTN","PXRMMH",48,0)
 K YSDATA
"RTN","PXRMMH",49,0)
 D LISTONE^YTAPI(.YSDATA,.YS)
"RTN","PXRMMH",50,0)
 ;The most recent results will be in YSDATA(2)
"RTN","PXRMMH",51,0)
 S TEMP=$G(YSDATA(2))
"RTN","PXRMMH",52,0)
 S X=$P(TEMP,U,1)
"RTN","PXRMMH",53,0)
 I (X="")!(X="no psych pt") S FIEVAL(FINDING)=0 Q
"RTN","PXRMMH",54,0)
 ;Save the rest of the finding information.
"RTN","PXRMMH",55,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMMH",56,0)
 S FIEVAL(FINDING,"DATE")=$P(TEMP,U,1)
"RTN","PXRMMH",57,0)
 S DATE=$P(TEMP,U,1)
"RTN","PXRMMH",58,0)
 S FIEVAL(FINDING,"FINDING")=MHIEN_";YTT(601,"
"RTN","PXRMMH",59,0)
 S FIEVAL(FINDING,"SCALE")=SCALE
"RTN","PXRMMH",60,0)
 S FIEVAL(FINDING,"TEST")=MHTEST
"RTN","PXRMMH",61,0)
 ;Determine if the finding has expired.
"RTN","PXRMMH",62,0)
  S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMMH",63,0)
  I 'VALID D  Q
"RTN","PXRMMH",64,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMMH",65,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMMH",66,0)
 ;If a scale was specified save the scoring information and check
"RTN","PXRMMH",67,0)
 ;for an action.
"RTN","PXRMMH",68,0)
 I SCALE'="" D
"RTN","PXRMMH",69,0)
 . S FIEVAL(FINDING,"SCNAME")=$P(TEMP,U,4)
"RTN","PXRMMH",70,0)
 . S SCORE=$P(TEMP,U,5)
"RTN","PXRMMH",71,0)
 . S FIEVAL(FINDING,"SCORE")=SCORE
"RTN","PXRMMH",72,0)
 . S FIEVAL(FINDING,"VALUE")=SCORE
"RTN","PXRMMH",73,0)
 . S TSCORE=$P(TEMP,U,6)
"RTN","PXRMMH",74,0)
 . I TSCORE'="" S FIEVAL(FINDING,"TSCORE")=TSCORE
"RTN","PXRMMH",75,0)
 .;If there is a condition for this finding evaluate it.
"RTN","PXRMMH",76,0)
 . S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,SCORE)
"RTN","PXRMMH",77,0)
 . I CONVAL'="" D
"RTN","PXRMMH",78,0)
 .. I CONVAL D
"RTN","PXRMMH",79,0)
 ... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMMH",80,0)
 ... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMMH",81,0)
 .. E  D
"RTN","PXRMMH",82,0)
 ... K FIEVAL(FINDING)
"RTN","PXRMMH",83,0)
 ... S FIEVAL(FINDING)=0
"RTN","PXRMMH",84,0)
 Q
"RTN","PXRMMH",85,0)
 ;
"RTN","PXRMMH",86,0)
 ;=======================================================================
"RTN","PXRMMH",87,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMMH",88,0)
 ;maintenance output.
"RTN","PXRMMH",89,0)
 N DATE,MHTEST,TEMP
"RTN","PXRMMH",90,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMMH",91,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMMH",92,0)
 S TEMP=TEMP_" Mental Health Instrument: "
"RTN","PXRMMH",93,0)
 S MHTEST=FIEVAL(FINDING,"TEST")
"RTN","PXRMMH",94,0)
 S TEMP=TEMP_MHTEST
"RTN","PXRMMH",95,0)
 ;If there is scoring information give it.
"RTN","PXRMMH",96,0)
 I $D(FIEVAL(FINDING,"SCNAME")) D
"RTN","PXRMMH",97,0)
 . S TEMP=TEMP_"; Scale name - "_FIEVAL(FINDING,"SCNAME")
"RTN","PXRMMH",98,0)
 . I $D(FIEVAL(FINDING,"VALUE")) S TEMP=TEMP_"; Raw score - "_FIEVAL(FINDING,"VALUE")
"RTN","PXRMMH",99,0)
 . I $D(FIEVAL(FINDING,"TSCORE")) S TEMP=TEMP_" Transformed score - "_FIEVAL(FINDING,"TSCORE")
"RTN","PXRMMH",100,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMMH",101,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMMH",102,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMMH",103,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMMH",104,0)
 S NLINES=NLINES+1
"RTN","PXRMMH",105,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMMH",106,0)
 I $D(PXRMDEV) D
"RTN","PXRMMH",107,0)
 . N UID
"RTN","PXRMMH",108,0)
 . S UID="MHTEST "_MHTEST
"RTN","PXRMMH",109,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMMH",110,0)
 Q
"RTN","PXRMMH",111,0)
 ;
"RTN","PXRMMH",112,0)
 ;=======================================================================
"RTN","PXRMMH",113,0)
SCHELP(MHIEN) ;Xecutable help for MH SCALE
"RTN","PXRMMH",114,0)
 N IND,JND,NUM,SCALE,TEMP,TEMP1
"RTN","PXRMMH",115,0)
 I MHIEN=0 D  Q
"RTN","PXRMMH",116,0)
 . S SCALE(1)="This is not a valid Mental Health finding, selecting an MH scale does"
"RTN","PXRMMH",117,0)
 . S SCALE(2)="not make sense"
"RTN","PXRMMH",118,0)
 . D EN^DDIOL(.SCALE)
"RTN","PXRMMH",119,0)
 S SCALE(1)="SCALE NUMBER  SCALE NAME"
"RTN","PXRMMH",120,0)
 S SCALE(2)="------------------------"
"RTN","PXRMMH",121,0)
 S IND=0
"RTN","PXRMMH",122,0)
 S JND=2
"RTN","PXRMMH",123,0)
 F  S IND=$O(^YTT(601,MHIEN,"S",IND)) Q:+IND=0  D
"RTN","PXRMMH",124,0)
 . S TEMP=^YTT(601,MHIEN,"S",IND,0)
"RTN","PXRMMH",125,0)
 . S JND=JND+1
"RTN","PXRMMH",126,0)
 . S TEMP1=$P(TEMP,U,1)
"RTN","PXRMMH",127,0)
 . S NUM=6-$L(TEMP1)
"RTN","PXRMMH",128,0)
 . S SCALE(JND)=$$INSCHR^PXRMEXLC(NUM," ")_TEMP1_"        "_$P(TEMP,U,2)
"RTN","PXRMMH",129,0)
 D EN^DDIOL(.SCALE)
"RTN","PXRMMH",130,0)
 Q
"RTN","PXRMMH",131,0)
 ;
"RTN","PXRMMH",132,0)
 ;=======================================================================
"RTN","PXRMMH",133,0)
SCHELPF ;Xecutable help for MH SCALE in 811.9 findings.
"RTN","PXRMMH",134,0)
 N FIND0,MHIEN
"RTN","PXRMMH",135,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",136,0)
 I FIND0["YTT(601" S MHIEN=$P(FIND0,";",1)
"RTN","PXRMMH",137,0)
 E  S MHIEN=0
"RTN","PXRMMH",138,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",139,0)
 Q
"RTN","PXRMMH",140,0)
 ;
"RTN","PXRMMH",141,0)
 ;=======================================================================
"RTN","PXRMMH",142,0)
SCHELPT ;Xecutable help for MH SCALE in 811.5 findings.
"RTN","PXRMMH",143,0)
 N MHIEN,TFIND0
"RTN","PXRMMH",144,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",145,0)
 I TFIND0["YTT(601" S MHIEN=$P(TFIND0,";",1)
"RTN","PXRMMH",146,0)
 E  S MHIEN=0
"RTN","PXRMMH",147,0)
 D SCHELP(MHIEN)
"RTN","PXRMMH",148,0)
 Q
"RTN","PXRMMH",149,0)
 ;
"RTN","PXRMMH",150,0)
 ;=======================================================================
"RTN","PXRMMH",151,0)
VSCALE(FIND0) ;Make sure that mental health scale is valid.
"RTN","PXRMMH",152,0)
 ;Either the scale number or the scale name can be used.
"RTN","PXRMMH",153,0)
 N MHIEN,MHTEST
"RTN","PXRMMH",154,0)
 S MHTEST=$P(FIND0,U,1)
"RTN","PXRMMH",155,0)
 S MHIEN=$P(MHTEST,";",1)
"RTN","PXRMMH",156,0)
 I +X>0 D
"RTN","PXRMMH",157,0)
 . I '$D(^YTT(601,MHIEN,"S",X)) K X
"RTN","PXRMMH",158,0)
 E  D
"RTN","PXRMMH",159,0)
 . S SCALE=$O(^YTT(601,MHIEN,"S","C",X,""))
"RTN","PXRMMH",160,0)
 . I SCALE="" K X
"RTN","PXRMMH",161,0)
 Q
"RTN","PXRMMH",162,0)
 ;
"RTN","PXRMMH",163,0)
 ;=======================================================================
"RTN","PXRMMH",164,0)
VSCALEF ;Make sure that mental health scale is valid for a finding.
"RTN","PXRMMH",165,0)
 I X="" Q
"RTN","PXRMMH",166,0)
 N FIND0
"RTN","PXRMMH",167,0)
 S FIND0=^PXD(811.9,DA(1),20,DA,0)
"RTN","PXRMMH",168,0)
 D VSCALE(FIND0)
"RTN","PXRMMH",169,0)
 Q
"RTN","PXRMMH",170,0)
 ;
"RTN","PXRMMH",171,0)
 ;=======================================================================
"RTN","PXRMMH",172,0)
VSCALET ;Make sure that mental health scale is valid for a term finding.
"RTN","PXRMMH",173,0)
 I X="" Q
"RTN","PXRMMH",174,0)
 N TFIND0
"RTN","PXRMMH",175,0)
 S TFIND0=^PXRMD(811.5,DA(1),20,DA,0)
"RTN","PXRMMH",176,0)
 D VSCALE(TFIND0)
"RTN","PXRMMH",177,0)
 Q
"RTN","PXRMMH",178,0)
 ;
"RTN","PXRMMSG")
0^72^B1161029
"RTN","PXRMMSG",1,0)
PXRMMSG ; SLC/PKR - Routine for sending MailMan messages. ;01/08/2001
"RTN","PXRMMSG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMMSG",3,0)
 ;
"RTN","PXRMMSG",4,0)
 ;======================================================================
"RTN","PXRMMSG",5,0)
SEND(XMSUB) ;Send a MailMan message to the mail group defined
"RTN","PXRMMSG",6,0)
 ;by the site and to the user. The text of the message is in
"RTN","PXRMMSG",7,0)
 ;^TMP("PXRMXMZ",$J,N,0), where the are N lines of text. The subject
"RTN","PXRMMSG",8,0)
 ;is the string XMSUB.
"RTN","PXRMMSG",9,0)
 N MGIEN,MGROUP,NL,REF,REMINDER,XMDUZ,XMY,XMZ
"RTN","PXRMMSG",10,0)
 ;
"RTN","PXRMMSG",11,0)
 ;If this is a test run write out the message.
"RTN","PXRMMSG",12,0)
 I $D(PXRMDEV) D
"RTN","PXRMMSG",13,0)
 . S REF="^TMP(""PXRMXMZ"",$J)"
"RTN","PXRMMSG",14,0)
 . D AWRITE^PXRMUTIL(REF)
"RTN","PXRMMSG",15,0)
 ;
"RTN","PXRMMSG",16,0)
 ;Make sure the subject does not exceed 64 characters.
"RTN","PXRMMSG",17,0)
 S XMUSB=$E(XMSUB,1,64)
"RTN","PXRMMSG",18,0)
 ;
"RTN","PXRMMSG",19,0)
 ;Make the sender the Postmaster.
"RTN","PXRMMSG",20,0)
 S XMDUZ=0.5
"RTN","PXRMMSG",21,0)
 ;
"RTN","PXRMMSG",22,0)
RETRY ;Get the message number.
"RTN","PXRMMSG",23,0)
 D XMZ^XMA2
"RTN","PXRMMSG",24,0)
 I XMZ<1 G RETRY
"RTN","PXRMMSG",25,0)
 ;
"RTN","PXRMMSG",26,0)
 ;Load the message
"RTN","PXRMMSG",27,0)
 M ^XMB(3.9,XMZ,2)=^TMP("PXRMXMZ",$J)
"RTN","PXRMMSG",28,0)
 K ^TMP("PXRMXMZ",$J)
"RTN","PXRMMSG",29,0)
 S NL=$O(^XMB(3.9,XMZ,2,""),-1)
"RTN","PXRMMSG",30,0)
 S ^XMB(3.9,XMZ,2,0)="^3.92^"_+NL_U_+NL_U_DT
"RTN","PXRMMSG",31,0)
 ;
"RTN","PXRMMSG",32,0)
 ;Send the message to the site defined mailgroup and the user.
"RTN","PXRMMSG",33,0)
 S XMY(DUZ)=""
"RTN","PXRMMSG",34,0)
 S MGIEN=$G(^PXRM(800,1,"MGFE"))
"RTN","PXRMMSG",35,0)
 I MGIEN='"" D
"RTN","PXRMMSG",36,0)
 . S MGROUP="G."_$$GET1^DIQ(3.8,MGIEN,.01)
"RTN","PXRMMSG",37,0)
 . S XMY(MGROUP)=""
"RTN","PXRMMSG",38,0)
 D ENT1^XMD
"RTN","PXRMMSG",39,0)
 ;
"RTN","PXRMMSG",40,0)
 Q
"RTN","PXRMMSG",41,0)
 ;
"RTN","PXRMOPT")
0^10^B47772166
"RTN","PXRMOPT",1,0)
PXRMOPT ; SLC/PKR - Prepare the final reminder output. ;02/26/2001
"RTN","PXRMOPT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMOPT",3,0)
 ;
"RTN","PXRMOPT",4,0)
 ;=======================================================================
"RTN","PXRMOPT",5,0)
ACTFT() ;Add the standard "condition false" text to the output string.
"RTN","PXRMOPT",6,0)
 ;Q " - VALUE DOES NOT MEET CRITERIA"
"RTN","PXRMOPT",7,0)
 Q ""
"RTN","PXRMOPT",8,0)
 ;
"RTN","PXRMOPT",9,0)
 ;=======================================================================
"RTN","PXRMOPT",10,0)
ADDTXT(NTXT,TXT) ;
"RTN","PXRMOPT",11,0)
 I $L(TXT)>DIWR D
"RTN","PXRMOPT",12,0)
 . N IC,X
"RTN","PXRMOPT",13,0)
 . D DIWPK^PXRMUTIL
"RTN","PXRMOPT",14,0)
 . S X=TXT
"RTN","PXRMOPT",15,0)
 . D ^DIWP
"RTN","PXRMOPT",16,0)
 . S IC=0
"RTN","PXRMOPT",17,0)
 . F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMOPT",18,0)
 .. S NTXT=NTXT+1
"RTN","PXRMOPT",19,0)
 .. S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=^UTILITY($J,"W",0,IC,0)
"RTN","PXRMOPT",20,0)
 . D DIWPK^PXRMUTIL
"RTN","PXRMOPT",21,0)
 E  D
"RTN","PXRMOPT",22,0)
 . S NTXT=NTXT+1
"RTN","PXRMOPT",23,0)
 . S ^TMP("PXRHM",$J,PXRMITEM,PXRMRNAM,"TXT",NTXT)=TXT
"RTN","PXRMOPT",24,0)
 Q
"RTN","PXRMOPT",25,0)
 ;
"RTN","PXRMOPT",26,0)
 ;=======================================================================
"RTN","PXRMOPT",27,0)
FERROR(NTXT) ; Check for a fatal error and output a message.
"RTN","PXRMOPT",28,0)
 I '$D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR")) Q 0
"RTN","PXRMOPT",29,0)
 N ERROR,TEXT
"RTN","PXRMOPT",30,0)
 ;Error trap
"RTN","PXRMOPT",31,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","ERROR TRAP")) D
"RTN","PXRMOPT",32,0)
 . S TEXT="There was an error processing this reminder, it could not be properly evaluated, see the error trap."
"RTN","PXRMOPT",33,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",34,0)
 ;Reminder errors
"RTN","PXRMOPT",35,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")) D
"RTN","PXRMOPT",36,0)
 . S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","NO REMINDER")
"RTN","PXRMOPT",37,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",38,0)
 ;
"RTN","PXRMOPT",39,0)
 ;Patient errors
"RTN","PXRMOPT",40,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT")) D
"RTN","PXRMOPT",41,0)
 . S ERROR=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT",""))
"RTN","PXRMOPT",42,0)
 . I ERROR="NOPAT" S TEXT=^TMP(PXRMPID,$J,PXRMITEM,"FERROR","PATIENT","NOPAT")
"RTN","PXRMOPT",43,0)
 . I ERROR="NO LOCK" S TEXT="COULD NOT GET A LOCK FOR PATIENT "_DFN_" TRY AGAIN"
"RTN","PXRMOPT",44,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",45,0)
 ;
"RTN","PXRMOPT",46,0)
 ;Expanded taxonomy errors
"RTN","PXRMOPT",47,0)
 I $D(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY")) D
"RTN","PXRMOPT",48,0)
 . S ERROR=$O(^TMP(PXRMPID,$J,PXRMITEM,"FERROR","EXPANDED TAXONOMY",""))
"RTN","PXRMOPT",49,0)
 . I ERROR="NO LOCK" S TEXT="COULD NOT GET A LOCK FOR EXPANDED TAXONOMY "_+PXRMXTLK_" TRY AGAIN"
"RTN","PXRMOPT",50,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",51,0)
 Q 1
"RTN","PXRMOPT",52,0)
 ;
"RTN","PXRMOPT",53,0)
 ;=======================================================================
"RTN","PXRMOPT",54,0)
FNFTXT(NLINES,TEXT,DFN,FINDING,FIEVAL) ;Load the finding found not found text.
"RTN","PXRMOPT",55,0)
 N DES,FI,FNFTR,FOUND,LC,TA,X,UID,VSTR
"RTN","PXRMOPT",56,0)
 S FOUND=FIEVAL(FINDING)
"RTN","PXRMOPT",57,0)
 I $D(FIEVAL(FINDING,"VIEN")) D
"RTN","PXRMOPT",58,0)
 . N TEMP,VDATE,VLOC,VSC
"RTN","PXRMOPT",59,0)
 . S TEMP=^AUPNVSIT(FIEVAL(FINDING,"VIEN"),0)
"RTN","PXRMOPT",60,0)
 . S VDATE=$P(TEMP,U,1)
"RTN","PXRMOPT",61,0)
 . S VLOC=$P(TEMP,U,22)
"RTN","PXRMOPT",62,0)
 . S VSC=$P(TEMP,U,7)
"RTN","PXRMOPT",63,0)
 . S VSTR=VLOC_";"_VDATE_";"_VSC
"RTN","PXRMOPT",64,0)
 E  S VSTR=""
"RTN","PXRMOPT",65,0)
 I FOUND S FI=1,DES="FINDING "_FINDING_"_FOUND"
"RTN","PXRMOPT",66,0)
 E  S FI=2,DES="FINDING "_FINDING_" NOT_FOUND"
"RTN","PXRMOPT",67,0)
 S FNFTR="^PXD(811.9,"_PXRMITEM_",20,"_FINDING_","_FI_")"
"RTN","PXRMOPT",68,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMOPT",69,0)
 D BLRPLT^TIUSRVD(.TA,"",DFN,VSTR,FNFTR)
"RTN","PXRMOPT",70,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMOPT",71,0)
 S LC=0
"RTN","PXRMOPT",72,0)
 F LC=1:1:$P(^TMP("TIUBOIL",$J,0),U,3) D
"RTN","PXRMOPT",73,0)
 . S X=$G(^TMP("TIUBOIL",$J,LC,0))
"RTN","PXRMOPT",74,0)
 . D ^DIWP
"RTN","PXRMOPT",75,0)
 S LC=0
"RTN","PXRMOPT",76,0)
 F  S LC=$O(^UTILITY($J,"W",0,LC)) Q:LC=""  D
"RTN","PXRMOPT",77,0)
 . S NLINES=NLINES+1
"RTN","PXRMOPT",78,0)
 . S TEXT(NLINES)=^UTILITY($J,"W",0,LC,0)
"RTN","PXRMOPT",79,0)
 . I $D(PXRMDEV) D
"RTN","PXRMOPT",80,0)
 .. S UID=DES_$$NTOAN^PXRMUTIL(LC)
"RTN","PXRMOPT",81,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEXT(NLINES)
"RTN","PXRMOPT",82,0)
 D DIWPK^PXRMUTIL
"RTN","PXRMOPT",83,0)
 K ^TMP("TIUBOIL",$J)
"RTN","PXRMOPT",84,0)
 Q
"RTN","PXRMOPT",85,0)
 ;
"RTN","PXRMOPT",86,0)
 ;=======================================================================
"RTN","PXRMOPT",87,0)
INFO(NTXT) ;Output INFO text. An INFO node has the structure:
"RTN","PXRMOPT",88,0)
 ;(PXRMPID,$J,PXRMITEM,"INFO",DESCRIPTION)=TEXT
"RTN","PXRMOPT",89,0)
 N DES,TXT
"RTN","PXRMOPT",90,0)
 ;We don't put errors or warnings into the final output, they are for debugging
"RTN","PXRMOPT",91,0)
 ;new reminders.
"RTN","PXRMOPT",92,0)
 S DES=""
"RTN","PXRMOPT",93,0)
 F  S DES=$O(^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)) Q:DES=""  D
"RTN","PXRMOPT",94,0)
 . I (DES'="ERROR")&(DES'="WARNING") D
"RTN","PXRMOPT",95,0)
 .. S TXT=^TMP(PXRMPID,$J,PXRMITEM,"INFO",DES)
"RTN","PXRMOPT",96,0)
 .. D ADDTXT(.NTXT,TXT)
"RTN","PXRMOPT",97,0)
 Q
"RTN","PXRMOPT",98,0)
 ;
"RTN","PXRMOPT",99,0)
 ;=======================================================================
"RTN","PXRMOPT",100,0)
OUTPUT(PCLOGIC,RESLOGIC,RESDATE,FIEVAL) ;Prepare the clinical maintenance
"RTN","PXRMOPT",101,0)
 ; output.
"RTN","PXRMOPT",102,0)
 ;
"RTN","PXRMOPT",103,0)
 ;Establish the formatting parameters.
"RTN","PXRMOPT",104,0)
 N DIWF,DIWL,DIWR
"RTN","PXRMOPT",105,0)
 D DIWPS^PXRMUTIL(.DIWF,.DIWL,.DIWR)
"RTN","PXRMOPT",106,0)
 ;
"RTN","PXRMOPT",107,0)
 N AGE,IC,IND,INFO,FIDATA,FINDING,FLIST,FTYPE
"RTN","PXRMOPT",108,0)
 N HDR,NHDR,NLINES,NTXT,NUM,PCL,RES,TEMP,TYPE,TEXT
"RTN","PXRMOPT",109,0)
 ;Process the findings in the order: patient cohort, resolution,
"RTN","PXRMOPT",110,0)
 ;age, and informational.
"RTN","PXRMOPT",111,0)
 S NTXT=0
"RTN","PXRMOPT",112,0)
 ;Check for a fatal error
"RTN","PXRMOPT",113,0)
 I $$FERROR(.NTXT) Q
"RTN","PXRMOPT",114,0)
 ;Check for a dead patient
"RTN","PXRMOPT",115,0)
 I +$G(^XTMP(PXRMDFN,"DOD"))>0 D
"RTN","PXRMOPT",116,0)
 . S TEXT="Patient is deceased, date of death: "_$P(^XTMP(PXRMDFN,"DOD"),U,2)
"RTN","PXRMOPT",117,0)
 . D ADDTXT(.NTXT,TEXT)
"RTN","PXRMOPT",118,0)
 M FIDATA=FIEVAL
"RTN","PXRMOPT",119,0)
 S RES=$G(^PXD(811.9,PXRMITEM,36))_U_"RES"
"RTN","PXRMOPT",120,0)
 S PCL=$G(^PXD(811.9,PXRMITEM,32))_U_"PCL"
"RTN","PXRMOPT",121,0)
 S AGE=$G(^PXD(811.9,PXRMITEM,40))_U_"AGE"
"RTN","PXRMOPT",122,0)
 S INFO=$G(^PXD(811.9,PXRMITEM,42))_U_"INFO"
"RTN","PXRMOPT",123,0)
 F TYPE=PCL,RES,AGE,INFO D
"RTN","PXRMOPT",124,0)
 . S (NHDR,NLINES)=0
"RTN","PXRMOPT",125,0)
 . S NUM=+$P(TYPE,U,1)
"RTN","PXRMOPT",126,0)
 . S FLIST=$P(TYPE,U,2)
"RTN","PXRMOPT",127,0)
 . F IND=1:1:NUM D
"RTN","PXRMOPT",128,0)
 .. S FINDING=$P(FLIST,";",IND)
"RTN","PXRMOPT",129,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOPT",130,0)
 .. I '$D(FIDATA(FINDING)) Q
"RTN","PXRMOPT",131,0)
 ..;
"RTN","PXRMOPT",132,0)
 ..;If there are no nodes below the top all we need to do is the
"RTN","PXRMOPT",133,0)
 ..;found not found text.
"RTN","PXRMOPT",134,0)
 .. I $D(FIEVAL(FINDING))=1 G FNF
"RTN","PXRMOPT",135,0)
 ..;
"RTN","PXRMOPT",136,0)
 .. S TEMP=FIEVAL(FINDING,"FINDING")
"RTN","PXRMOPT",137,0)
 .. S FTYPE=$P(TEMP,";",2)
"RTN","PXRMOPT",138,0)
 .. I $D(FIEVAL(FINDING,"TERM")) D OUTPUT^PXRMTERM(.NLINES,.TEXT,FINDING,.FIEVAL)
"RTN","PXRMOPT",139,0)
 .. I FTYPE="AUTTEDT(" D OUTPUT^PXRMEDU(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",140,0)
 .. I FTYPE="AUTTEXAM(" D OUTPUT^PXRMEXAM(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",141,0)
 .. I FTYPE="AUTTHF(" D OUTPUT^PXRMHF(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",142,0)
 .. I FTYPE="AUTTIMM(" D OUTPUT^PXRMIMM(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",143,0)
 .. I FTYPE="AUTTSK(" D OUTPUT^PXRMSKIN(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",144,0)
 .. I FTYPE="GMRD(120.51," D OUTPUT^PXRMMEAS(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",145,0)
 .. I FTYPE="LAB(60," D OUTPUT^PXRMLAB(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",146,0)
 .. I FTYPE="ORD(101.43," D OUTPUT^PXRMORDR(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",147,0)
 .. I FTYPE="PS(50.605," D OUTPUT^PXRMDRCL(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",148,0)
 .. I FTYPE="PSDRUG(" D OUTPUT^PXRMDRUG(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",149,0)
 .. I FTYPE="PSNDF(50.6," D OUTPUT^PXRMDGEN(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",150,0)
 .. I FTYPE="PXD(811.2," D OUTPUT^PXRMTAX(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",151,0)
 .. I FTYPE="PXRMD(811.4," D OUTPUT^PXRMCF(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",152,0)
 .. I FTYPE="RAMIS(71," D OUTPUT^PXRMRAD(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",153,0)
 .. I FTYPE="YTT(601," D OUTPUT^PXRMMH(.NLINES,.TEXT,FINDING,.FIEVAL) G FNF
"RTN","PXRMOPT",154,0)
 ..;
"RTN","PXRMOPT",155,0)
FNF .. D FNFTXT(.NLINES,.TEXT,DFN,FINDING,.FIEVAL)
"RTN","PXRMOPT",156,0)
 ..;Make sure each finding is processed only once.
"RTN","PXRMOPT",157,0)
 .. K FIDATA(FINDING)
"RTN","PXRMOPT",158,0)
 .;If there was some text do the header.
"RTN","PXRMOPT",159,0)
 . S FTYPE=$P(TYPE,U,3)
"RTN","PXRMOPT",160,0)
 . I FTYPE="PCL" D PCL^PXRMLFNF(.NLINES,.TEXT,DFN,PCLOGIC)
"RTN","PXRMOPT",161,0)
 . I FTYPE="RES" D RESL^PXRMLFNF(.NLINES,.TEXT,DFN,RESLOGIC)
"RTN","PXRMOPT",162,0)
 .;
"RTN","PXRMOPT",163,0)
 . I (FTYPE="PCL") D
"RTN","PXRMOPT",164,0)
 .. I PCLOGIC D
"RTN","PXRMOPT",165,0)
 ... S NHDR=2
"RTN","PXRMOPT",166,0)
 ... S HDR(1)=" "
"RTN","PXRMOPT",167,0)
 ... S HDR(2)="Applicable: "_$G(^TMP(PXRMPID,$J,PXRMITEM,"zFREQARNG"))_" within cohort."
"RTN","PXRMOPT",168,0)
 .. E  S NHDR=0
"RTN","PXRMOPT",169,0)
 .;
"RTN","PXRMOPT",170,0)
 . I (FTYPE="RES")&(+RESDATE>0) D
"RTN","PXRMOPT",171,0)
 .. S NHDR=2
"RTN","PXRMOPT",172,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",173,0)
 .. S HDR(2)="Resolution: Last done "_$$EDATE^PXRMDATE(RESDATE)
"RTN","PXRMOPT",174,0)
 .;
"RTN","PXRMOPT",175,0)
 . I (FTYPE="AGE")&(NLINES>0) D
"RTN","PXRMOPT",176,0)
 .. S NHDR=2
"RTN","PXRMOPT",177,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",178,0)
 .. S HDR(2)="Age:  "
"RTN","PXRMOPT",179,0)
 .;
"RTN","PXRMOPT",180,0)
 . I (FTYPE="INFO")&(NLINES>0) D
"RTN","PXRMOPT",181,0)
 .. S NHDR=2
"RTN","PXRMOPT",182,0)
 .. S HDR(1)=" "
"RTN","PXRMOPT",183,0)
 .. S HDR(2)="Information:  "
"RTN","PXRMOPT",184,0)
 .;
"RTN","PXRMOPT",185,0)
 . F IC=1:1:NHDR D ADDTXT(.NTXT,HDR(IC))
"RTN","PXRMOPT",186,0)
 . F IC=1:1:NLINES D ADDTXT(.NTXT,TEXT(IC))
"RTN","PXRMOPT",187,0)
 ;
"RTN","PXRMOPT",188,0)
 ;Output the AGE match/no match text.
"RTN","PXRMOPT",189,0)
 D MNMT^PXRMAGE(.NTXT,.FIEVAL)
"RTN","PXRMOPT",190,0)
 ;Output INFO nodes
"RTN","PXRMOPT",191,0)
 D INFO(.NTXT)
"RTN","PXRMOPT",192,0)
 Q
"RTN","PXRMOPT",193,0)
 ;
"RTN","PXRMORDR")
0^37^B14979958
"RTN","PXRMORDR",1,0)
PXRMORDR ; SLC/PKR - Handle order findings. ;10/11/2000
"RTN","PXRMORDR",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMORDR",3,0)
 ;
"RTN","PXRMORDR",4,0)
 ;=======================================================================
"RTN","PXRMORDR",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate radiology findings.
"RTN","PXRMORDR",6,0)
 N FIND0,FIND3,FINDING,ORDER
"RTN","PXRMORDR",7,0)
 ;Go through the orderable items.
"RTN","PXRMORDR",8,0)
 S ORDER=""
"RTN","PXRMORDR",9,0)
 F  S ORDER=$O(^PXD(811.9,PXRMITEM,20,"E","ORD(101.43,",ORDER)) Q:+ORDER=0  D
"RTN","PXRMORDR",10,0)
 . S FINDING=""
"RTN","PXRMORDR",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","ORD(101.43,",ORDER,FINDING)) Q:+FINDING=0  D
"RTN","PXRMORDR",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMORDR",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMORDR",14,0)
 .. D FIEVAL(DFN,FIND0,FIND3,"","",FINDING,.FIEVAL,ORDER)
"RTN","PXRMORDR",15,0)
 Q
"RTN","PXRMORDR",16,0)
 ;
"RTN","PXRMORDR",17,0)
 ;=======================================================================
"RTN","PXRMORDR",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate orderable item terms.
"RTN","PXRMORDR",19,0)
 N FIND0,FIND3,ORDER,TFIND0,TFIND3,TFINDING
"RTN","PXRMORDR",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMORDR",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMORDR",22,0)
 ;Go through the orderable items.
"RTN","PXRMORDR",23,0)
 S ORDER=""
"RTN","PXRMORDR",24,0)
 F  S ORDER=$O(^PXRMD(811.5,TERMIEN,20,"E","ORD(101.43,",ORDER)) Q:+ORDER=0  D
"RTN","PXRMORDR",25,0)
 . S TFINDING=""
"RTN","PXRMORDR",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","ORD(101.43,",ORDER,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMORDR",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMORDR",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMORDR",29,0)
 .. D FIEVAL(DFN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL,ORDER)
"RTN","PXRMORDR",30,0)
 Q
"RTN","PXRMORDR",31,0)
 ;
"RTN","PXRMORDR",32,0)
 ;=======================================================================
"RTN","PXRMORDR",33,0)
FIEVAL(DFN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL,ORDER) ;
"RTN","PXRMORDR",34,0)
 N ADATE,CONVAL,DATE,IND,ORINFO,PDATE
"RTN","PXRMORDR",35,0)
 N SIND,STATUS,TEMP,VALID
"RTN","PXRMORDR",36,0)
 ;
"RTN","PXRMORDR",37,0)
 S FIEVAL(FINDING)=0
"RTN","PXRMORDR",38,0)
 ;Get the matches
"RTN","PXRMORDR",39,0)
 K ORINFO
"RTN","PXRMORDR",40,0)
 D LATEST^ORX8(DFN,ORDER,.ORINFO)
"RTN","PXRMORDR",41,0)
 ;If ORINFO=0 the patient has never had this order.
"RTN","PXRMORDR",42,0)
 I ORINFO=0 Q
"RTN","PXRMORDR",43,0)
 S STATUS=""
"RTN","PXRMORDR",44,0)
 ;First look for orders with a status of pending or active. By
"RTN","PXRMORDR",45,0)
 ;default these will make the finding true. Get the start date.
"RTN","PXRMORDR",46,0)
 S PDATE=+$P($G(ORINFO(5)),U,4)
"RTN","PXRMORDR",47,0)
 S ADATE=+$P($G(ORINFO(6)),U,4)
"RTN","PXRMORDR",48,0)
 I (PDATE>0)&(PDATE>ADATE) D
"RTN","PXRMORDR",49,0)
 . S FIEVAL(FINDING)=1
"RTN","PXRMORDR",50,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",51,0)
 . S FIEVAL(FINDING,"DATE")=PDATE
"RTN","PXRMORDR",52,0)
 . S STATUS=$P(ORINFO(5),U,7)
"RTN","PXRMORDR",53,0)
 . S SIND=5
"RTN","PXRMORDR",54,0)
 I (ADATE>0)&(ADATE'<PDATE) D
"RTN","PXRMORDR",55,0)
 . S FIEVAL(FINDING)=1
"RTN","PXRMORDR",56,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",57,0)
 . S FIEVAL(FINDING,"DATE")=ADATE
"RTN","PXRMORDR",58,0)
 . S STATUS=$P(ORINFO(6),U,7)
"RTN","PXRMORDR",59,0)
 . S SIND=6
"RTN","PXRMORDR",60,0)
 ;If no pending or active status were found use the one with the
"RTN","PXRMORDR",61,0)
 ;most recent date.
"RTN","PXRMORDR",62,0)
 I 'FIEVAL(FINDING) D
"RTN","PXRMORDR",63,0)
 . S (DATE,IND)=0
"RTN","PXRMORDR",64,0)
 . F  S IND=$O(ORINFO(IND)) Q:+IND=0  D
"RTN","PXRMORDR",65,0)
 .. S TEMP=+$P(ORINFO(IND),U,4)
"RTN","PXRMORDR",66,0)
 .. I TEMP>DATE D
"RTN","PXRMORDR",67,0)
 ... S DATE=TEMP
"RTN","PXRMORDR",68,0)
 ... S STATUS=$P(ORINFO(IND),U,7)
"RTN","PXRMORDR",69,0)
 ... S SIND=IND
"RTN","PXRMORDR",70,0)
 . S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMORDR",71,0)
 . S FIEVAL(FINDING,"FINDING")=ORDER_";ORD(101.43,"
"RTN","PXRMORDR",72,0)
 ;Save the rest of the finding information.
"RTN","PXRMORDR",73,0)
 I STATUS'="" D
"RTN","PXRMORDR",74,0)
 . S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMORDR",75,0)
 . S FIEVAL(FINDING,"VALUE")=STATUS
"RTN","PXRMORDR",76,0)
 S TEMP=ORINFO(SIND)
"RTN","PXRMORDR",77,0)
 S FIEVAL(FINDING,"ORIEN")=$P(TEMP,U,1)
"RTN","PXRMORDR",78,0)
 S FIEVAL(FINDING,"ORDERED BY")=$P(TEMP,U,2)
"RTN","PXRMORDR",79,0)
 S FIEVAL(FINDING,"LOCATION")=$P(TEMP,U,6)
"RTN","PXRMORDR",80,0)
 ;Determine if the finding has expired.
"RTN","PXRMORDR",81,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,FIEVAL(FINDING,"DATE"))
"RTN","PXRMORDR",82,0)
 I 'VALID D
"RTN","PXRMORDR",83,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMORDR",84,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMORDR",85,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMORDR",86,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,FIEVAL(FINDING,"VALUE"))
"RTN","PXRMORDR",87,0)
 I CONVAL'="" D
"RTN","PXRMORDR",88,0)
 . I CONVAL D
"RTN","PXRMORDR",89,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMORDR",90,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMORDR",91,0)
 . E  D
"RTN","PXRMORDR",92,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMORDR",93,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMORDR",94,0)
 Q
"RTN","PXRMORDR",95,0)
 ;
"RTN","PXRMORDR",96,0)
 ;=======================================================================
"RTN","PXRMORDR",97,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMORDR",98,0)
 ;maintenance output.
"RTN","PXRMORDR",99,0)
 N D0,DATE,NAME,OI,TEMP
"RTN","PXRMORDR",100,0)
 S OI=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMORDR",101,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMORDR",102,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMORDR",103,0)
 S TEMP=TEMP_" Orderable Item: "
"RTN","PXRMORDR",104,0)
 S D0=^ORD(101.43,OI,0)
"RTN","PXRMORDR",105,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMORDR",106,0)
 S TEMP=TEMP_NAME
"RTN","PXRMORDR",107,0)
 S TEMP=TEMP_"; status:  "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMORDR",108,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMORDR",109,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMORDR",110,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMORDR",111,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMORDR",112,0)
 S NLINES=NLINES+1
"RTN","PXRMORDR",113,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMORDR",114,0)
 I $D(PXRMDEV) D
"RTN","PXRMORDR",115,0)
 . N UID
"RTN","PXRMORDR",116,0)
 . S UID="ORDER "_NAME
"RTN","PXRMORDR",117,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMORDR",118,0)
 Q
"RTN","PXRMORDR",119,0)
 ;
"RTN","PXRMP2I")
0^6^B23505083
"RTN","PXRMP2I",1,0)
PXRMP2I ; SLC/PKR/PJH - Inits for PXRM*1.5*2. ;01/12/2001
"RTN","PXRMP2I",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMP2I",3,0)
 ;
"RTN","PXRMP2I",4,0)
 Q
"RTN","PXRMP2I",5,0)
 ;
"RTN","PXRMP2I",6,0)
 ;===============================================================
"RTN","PXRMP2I",7,0)
DELDD ;Delete data dictionaries
"RTN","PXRMP2I",8,0)
 N DIU,FILENUM
"RTN","PXRMP2I",9,0)
 S DIU(0)=""
"RTN","PXRMP2I",10,0)
 F FILENUM=811.2,811.5,811.9 D
"RTN","PXRMP2I",11,0)
 . S DIU=FILENUM
"RTN","PXRMP2I",12,0)
 . D EN^DIU2
"RTN","PXRMP2I",13,0)
 Q
"RTN","PXRMP2I",14,0)
 ;
"RTN","PXRMP2I",15,0)
 ;===============================================================
"RTN","PXRMP2I",16,0)
DFORCE ;Correct forced value for contraindication
"RTN","PXRMP2I",17,0)
 N IEN
"RTN","PXRMP2I",18,0)
 S IEN=$O(^PXRMD(801.41,"B","PXRM REPEAT CONTRAINDICATED","")) Q:'IEN
"RTN","PXRMP2I",19,0)
 S $P(^PXRMD(801.41,IEN,2),U,2)=1
"RTN","PXRMP2I",20,0)
 Q
"RTN","PXRMP2I",21,0)
 ;
"RTN","PXRMP2I",22,0)
 ;
"RTN","PXRMP2I",23,0)
 ;===============================================================
"RTN","PXRMP2I",24,0)
DOF8112 ;Delete the obsolete fields in 811.2.
"RTN","PXRMP2I",25,0)
 N IND,TEXT
"RTN","PXRMP2I",26,0)
 S IND=0
"RTN","PXRMP2I",27,0)
 F  S IND=$O(^PXD(811.2,IND)) Q:+IND=0  D
"RTN","PXRMP2I",28,0)
 . S TEXT="Deleting obsolete fields in Reminder Taxonomy "_IND
"RTN","PXRMP2I",29,0)
 . D BMES^XPDUTL(TEXT)
"RTN","PXRMP2I",30,0)
 . K ^PXD(811.2,IND,21)  ;RANGE OF CODED VALUES
"RTN","PXRMP2I",31,0)
 Q
"RTN","PXRMP2I",32,0)
 ;
"RTN","PXRMP2I",33,0)
 ;===============================================================
"RTN","PXRMP2I",34,0)
DOF8119 ;Delete the obsolete fields in 811.9.
"RTN","PXRMP2I",35,0)
 N IND,TEXT
"RTN","PXRMP2I",36,0)
 S IND=0
"RTN","PXRMP2I",37,0)
 F  S IND=$O(^PXD(811.9,IND)) Q:+IND=0  D
"RTN","PXRMP2I",38,0)
 . S TEXT="Deleting obsolete fields in Reminder Definition "_IND
"RTN","PXRMP2I",39,0)
 . D BMES^XPDUTL(TEXT)
"RTN","PXRMP2I",40,0)
 . S $P(^PXD(811.9,IND,0),U,2)=""  ;REMINDER TYPE
"RTN","PXRMP2I",41,0)
 . K ^PXD(811.9,IND,3)   ;TARGET MULTIPLE
"RTN","PXRMP2I",42,0)
 . K ^PXD(811.9,IND,4)   ;TAXONONMY MULTIPLE
"RTN","PXRMP2I",43,0)
 . K ^PXD(811.9,IND,4.1) ;TAXON GENERAL FOUND TEXT
"RTN","PXRMP2I",44,0)
 . K ^PXD(811.9,IND,4.2) ;TAXON GENERAL NOT FOUND TEXT
"RTN","PXRMP2I",45,0)
 . K ^PXD(811.9,IND,6)   ;HEALTH FACTOR MULTIPLE
"RTN","PXRMP2I",46,0)
 . K ^PXD(811.9,IND,6.1) ;HEALTH FACTOR GENERAL FOUND TEXT
"RTN","PXRMP2I",47,0)
 . K ^PXD(811.9,IND,6.2) ;HEALTH FACTOR GENERAL NOT FOUND TEXT
"RTN","PXRMP2I",48,0)
 . K ^PXD(811.9,IND,9)   ;APPLY LOGIC
"RTN","PXRMP2I",49,0)
 . K ^PXD(811.9,IND,10)  ;COMPUTED FINDINGS MULTIPLE
"RTN","PXRMP2I",50,0)
 ;Kill obsolete cross-references.
"RTN","PXRMP2I",51,0)
 K ^PXD(811.9,"AC") ;TARGET RESULT
"RTN","PXRMP2I",52,0)
 K ^PXD(811.9,"C")  ;REMINDER TYPE
"RTN","PXRMP2I",53,0)
 Q
"RTN","PXRMP2I",54,0)
 ;
"RTN","PXRMP2I",55,0)
 ;----------------------------------
"RTN","PXRMP2I",56,0)
DPCACHE ;Delete any existing patient caches
"RTN","PXRMP2I",57,0)
 N IND
"RTN","PXRMP2I",58,0)
 D BMES^XPDUTL("Deleting patient cache")
"RTN","PXRMP2I",59,0)
 S IND="PXRMDFN"
"RTN","PXRMP2I",60,0)
 F  S IND=$O(^XTMP(IND)) Q:IND'["PXRMDFN"  D
"RTN","PXRMP2I",61,0)
 . K ^XTMP(IND)
"RTN","PXRMP2I",62,0)
 Q
"RTN","PXRMP2I",63,0)
 ;
"RTN","PXRMP2I",64,0)
 ;===============================================================
"RTN","PXRMP2I",65,0)
PRE ;These are the pre-installation actions
"RTN","PXRMP2I",66,0)
 ;Delete obsolete fields in 811.2 and 811.9.
"RTN","PXRMP2I",67,0)
 D DOF8112
"RTN","PXRMP2I",68,0)
 D DOF8119
"RTN","PXRMP2I",69,0)
 ;Save any existing conditions.
"RTN","PXRMP2I",70,0)
 D SCOND
"RTN","PXRMP2I",71,0)
 ;Delete data dictionaries for these files, new ones have the obsolete
"RTN","PXRMP2I",72,0)
 ;fields removed.
"RTN","PXRMP2I",73,0)
 D DELDD
"RTN","PXRMP2I",74,0)
 Q
"RTN","PXRMP2I",75,0)
 ;
"RTN","PXRMP2I",76,0)
 ;======================================================================
"RTN","PXRMP2I",77,0)
POST ;These are the post-installation actions
"RTN","PXRMP2I",78,0)
 D RCOND
"RTN","PXRMP2I",79,0)
 D SSEC
"RTN","PXRMP2I",80,0)
 D SVER
"RTN","PXRMP2I",81,0)
 D DPCACHE
"RTN","PXRMP2I",82,0)
 D DFORCE
"RTN","PXRMP2I",83,0)
 D UPD
"RTN","PXRMP2I",84,0)
 Q
"RTN","PXRMP2I",85,0)
 ;
"RTN","PXRMP2I",86,0)
 ;======================================================================
"RTN","PXRMP2I",87,0)
RCOND ;Restore conditions into their new locations.
"RTN","PXRMP2I",88,0)
 N IEN,FINDING
"RTN","PXRMP2I",89,0)
 D BMES^XPDUTL("Restoring conditions to new location")
"RTN","PXRMP2I",90,0)
 S IEN=0
"RTN","PXRMP2I",91,0)
 F  S IEN=$O(^XTMP("PXRMDCON",IEN)) Q:+IEN=0  D
"RTN","PXRMP2I",92,0)
 . S FINDING=0
"RTN","PXRMP2I",93,0)
 . F  S FINDING=$O(^XTMP("PXRMDCON",IEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMP2I",94,0)
 .. S ^PXD(811.9,IEN,20,FINDING,3)=^XTMP("PXRMDCON",IEN,FINDING)
"RTN","PXRMP2I",95,0)
 ;
"RTN","PXRMP2I",96,0)
 S IEN=0
"RTN","PXRMP2I",97,0)
 F  S IEN=$O(^XTMP("PXRMTCON",IEN)) Q:+IEN=0  D
"RTN","PXRMP2I",98,0)
 . S FINDING=0
"RTN","PXRMP2I",99,0)
 . F  S FINDING=$O(^XTMP("PXRMTCON",IEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMP2I",100,0)
 .. S ^PXRMD(811.5,IEN,20,FINDING,3)=^XTMP("PXRMTCON",IEN,FINDING)
"RTN","PXRMP2I",101,0)
 K ^XTMP("PXRMDCON"),^XTMP("PXRMTCON")
"RTN","PXRMP2I",102,0)
 Q
"RTN","PXRMP2I",103,0)
 ;
"RTN","PXRMP2I",104,0)
 ;======================================================================
"RTN","PXRMP2I",105,0)
SCOND ;Save exsiting conditions from reminder definitions and reminder
"RTN","PXRMP2I",106,0)
 ;terms. After they are saved set the existing entries to null.
"RTN","PXRMP2I",107,0)
 N IEN,FINDING,PURGE
"RTN","PXRMP2I",108,0)
 ;Before saving make sure the old CONDITION field exists. Do this in
"RTN","PXRMP2I",109,0)
 ;case the patch is being installed more than once.
"RTN","PXRMP2I",110,0)
 I $$GET1^DID(811.902,"CONDITION","","FIELD LENGTH")>52 G TERMC
"RTN","PXRMP2I",111,0)
 D BMES^XPDUTL("Saving conditions")
"RTN","PXRMP2I",112,0)
 K ^XTMP("PXRMDCON")
"RTN","PXRMP2I",113,0)
 S PURGE=$$FMADD^XLFDT(DT,7)
"RTN","PXRMP2I",114,0)
 S ^XTMP("PXRMDCON",0)=PURGE_U_DT_U_"SAVE DEFINITION CONDITIONS"
"RTN","PXRMP2I",115,0)
 S ^XTMP("PXRMTCON",0)=PURGE_U_DT_U_"SAVE TERM CONDITIONS"
"RTN","PXRMP2I",116,0)
 S IEN=0
"RTN","PXRMP2I",117,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:+IEN=0  D
"RTN","PXRMP2I",118,0)
 . S FINDING=0
"RTN","PXRMP2I",119,0)
 . F  S FINDING=$O(^PXD(811.9,IEN,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMP2I",120,0)
 .. S COND=$P(^PXD(811.9,IEN,20,FINDING,0),U,11)
"RTN","PXRMP2I",121,0)
 .. I $L(COND)>0 D
"RTN","PXRMP2I",122,0)
 ... S ^XTMP("PXRMDCON",IEN,FINDING)=COND
"RTN","PXRMP2I",123,0)
 ... S $P(^PXD(811.9,IEN,20,FINDING,0),U,11)=""
"RTN","PXRMP2I",124,0)
 ;
"RTN","PXRMP2I",125,0)
TERMC I $$GET1^DID(811.52,"CONDITION","","FIELD LENGTH")>52 Q
"RTN","PXRMP2I",126,0)
 K ^XTMP("PXRMTCON")
"RTN","PXRMP2I",127,0)
 S IEN=0
"RTN","PXRMP2I",128,0)
 F  S IEN=$O(^PXRMD(811.5,IEN)) Q:+IEN=0  D
"RTN","PXRMP2I",129,0)
 . S FINDING=0
"RTN","PXRMP2I",130,0)
 . F  S FINDING=$O(^PXRMD(811.5,IEN,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMP2I",131,0)
 .. S COND=$P(^PXRMD(811.5,IEN,20,FINDING,0),U,11)
"RTN","PXRMP2I",132,0)
 .. I $L(COND)>0 D
"RTN","PXRMP2I",133,0)
 ... S ^XTMP("PXRMTCON",IEN,FINDING)=COND
"RTN","PXRMP2I",134,0)
 ... S $P(^PXRMD(811.5,IEN,20,FINDING,0),U,11)=""
"RTN","PXRMP2I",135,0)
 Q
"RTN","PXRMP2I",136,0)
 ;
"RTN","PXRMP2I",137,0)
 ;======================================================================
"RTN","PXRMP2I",138,0)
SSEC ;Set the security codes on the reminder files.
"RTN","PXRMP2I",139,0)
 N FILENUM,SECURITY
"RTN","PXRMP2I",140,0)
 S SECURITY("AUDIT")="@"
"RTN","PXRMP2I",141,0)
 S SECURITY("DD")="@"
"RTN","PXRMP2I",142,0)
 S SECURITY("DEL")="@"
"RTN","PXRMP2I",143,0)
 S SECURITY("LAYGO")="@"
"RTN","PXRMP2I",144,0)
 S SECURITY("RD")=""
"RTN","PXRMP2I",145,0)
 S SECURITY("WR")="@"
"RTN","PXRMP2I",146,0)
 ;Include all files so test sites are set correctly.
"RTN","PXRMP2I",147,0)
 F FILENUM=800,801.41,801.42,801.43,801.45,801.9,801.95,810.1,810.2,811.2,811.3,811.4,811.5,811.6,811.7,811.8,811.9 D
"RTN","PXRMP2I",148,0)
 . D FILESEC^DDMOD(FILENUM,.SECURITY)
"RTN","PXRMP2I",149,0)
 Q
"RTN","PXRMP2I",150,0)
 ;
"RTN","PXRMP2I",151,0)
 ;======================================================================
"RTN","PXRMP2I",152,0)
SVER ;Set the version number in the Clinical Reminder Parameters file.
"RTN","PXRMP2I",153,0)
 S ^PXRM(800,1,"VERSION")=1.5
"RTN","PXRMP2I",154,0)
 Q
"RTN","PXRMP2I",155,0)
 ;
"RTN","PXRMP2I",156,0)
 ;
"RTN","PXRMP2I",157,0)
 ;======================================================================
"RTN","PXRMP2I",158,0)
UPD ;Correct dialog file headers
"RTN","PXRMP2I",159,0)
 N DATA,IEN
"RTN","PXRMP2I",160,0)
 S IEN=0
"RTN","PXRMP2I",161,0)
 F  S IEN=$O(^PXRMD(801.41,IEN)) Q:'IEN  D
"RTN","PXRMP2I",162,0)
 .S DATA=$G(^PXRMD(801.41,IEN,10,0)) Q:DATA=""
"RTN","PXRMP2I",163,0)
 .I $P(DATA,U,2)="" S $P(^PXRMD(801.41,IEN,10,0),U,2)="801.412IA"
"RTN","PXRMP2I",164,0)
 Q
"RTN","PXRMPDEM")
0^7^B546495
"RTN","PXRMPDEM",1,0)
PXRMPDEM ; SLC/PKR - Computed findings for patient demographics. ;07/12/2000
"RTN","PXRMPDEM",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPDEM",3,0)
 ;
"RTN","PXRMPDEM",4,0)
 ;=======================================================================
"RTN","PXRMPDEM",5,0)
DOB(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",6,0)
 ;date of birth.
"RTN","PXRMPDEM",7,0)
 S DATE=DT
"RTN","PXRMPDEM",8,0)
 I PXRMDOB="" S TEST=0
"RTN","PXRMPDEM",9,0)
 E  D
"RTN","PXRMPDEM",10,0)
 . S TEST=1
"RTN","PXRMPDEM",11,0)
 . S VALUE=PXRMDOB
"RTN","PXRMPDEM",12,0)
 Q
"RTN","PXRMPDEM",13,0)
 ;
"RTN","PXRMPDEM",14,0)
 ;=======================================================================
"RTN","PXRMPDEM",15,0)
DOD(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's
"RTN","PXRMPDEM",16,0)
 ;date of death.
"RTN","PXRMPDEM",17,0)
 S DATE=DT
"RTN","PXRMPDEM",18,0)
 I PXRMDOD="" S TEST=0
"RTN","PXRMPDEM",19,0)
 E  D
"RTN","PXRMPDEM",20,0)
 . S TEST=1
"RTN","PXRMPDEM",21,0)
 . S VALUE=PXRMDOD
"RTN","PXRMPDEM",22,0)
 Q
"RTN","PXRMPDEM",23,0)
 ;
"RTN","PXRMPDEM",24,0)
 ;=======================================================================
"RTN","PXRMPDEM",25,0)
RACE(DFN,TEST,DATE,VALUE,TEXT) ;Computed finding for checking a patient's race.
"RTN","PXRMPDEM",26,0)
 S DATE=DT
"RTN","PXRMPDEM",27,0)
 I PXRMRACE="" S TEST=0
"RTN","PXRMPDEM",28,0)
 E  D
"RTN","PXRMPDEM",29,0)
 . S TEST=1
"RTN","PXRMPDEM",30,0)
 . S VALUE=PXRMRACE
"RTN","PXRMPDEM",31,0)
 Q
"RTN","PXRMPDEM",32,0)
 ;
"RTN","PXRMPINF")
0^5^B7124501
"RTN","PXRMPINF",1,0)
PXRMPINF ; SLC/PKR - Routines relating to patient information. ;06/30/2000
"RTN","PXRMPINF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPINF",3,0)
 ;
"RTN","PXRMPINF",4,0)
 ;=======================================================================
"RTN","PXRMPINF",5,0)
DATACHG ;This entry point is called whenever patient data has changed.
"RTN","PXRMPINF",6,0)
 ;It is attached to the following event points:
"RTN","PXRMPINF",7,0)
 ;PXK VISIT DATA EVENT
"RTN","PXRMPINF",8,0)
 ;
"RTN","PXRMPINF",9,0)
 N DFN,PXRMDFN
"RTN","PXRMPINF",10,0)
 S DFN=""
"RTN","PXRMPINF",11,0)
 ;Look for PXK VISIT DATA EVENT data.
"RTN","PXRMPINF",12,0)
 I $D(^TMP("PXKCO",$J)) D
"RTN","PXRMPINF",13,0)
 . N DATA,IEN,NODE,VISIT
"RTN","PXRMPINF",14,0)
 . S VISIT=$O(^TMP("PXKCO",$J,""))
"RTN","PXRMPINF",15,0)
 . S IEN=$O(^TMP("PXKCO",$J,VISIT,"VST",""))
"RTN","PXRMPINF",16,0)
 . S NODE=$O(^TMP("PXKCO",$J,VISIT,"VST",IEN,""))
"RTN","PXRMPINF",17,0)
 . S DATA=$G(^TMP("PXKCO",$J,VISIT,"VST",IEN,NODE,"AFTER"))
"RTN","PXRMPINF",18,0)
 . I DATA="" S DATA=$G(^TMP("PXKCO",$J,VISIT,"VST",IEN,NODE,"BEFORE"))
"RTN","PXRMPINF",19,0)
 . S DFN=$P(DATA,U,5)
"RTN","PXRMPINF",20,0)
 ;
"RTN","PXRMPINF",21,0)
 S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMPINF",22,0)
 D KILLPC(PXRMDFN)
"RTN","PXRMPINF",23,0)
 Q
"RTN","PXRMPINF",24,0)
 ;
"RTN","PXRMPINF",25,0)
 ;=======================================================================
"RTN","PXRMPINF",26,0)
DEM(DFN) ;Load the patient demographics.
"RTN","PXRMPINF",27,0)
 I $L(DFN)'>0 Q "NO PATIENT"
"RTN","PXRMPINF",28,0)
 N DATEBLT,EXPDATE,NOW,PATIENT,TEMP
"RTN","PXRMPINF",29,0)
 S PXRMDFN="PXRMDFN"_DFN
"RTN","PXRMPINF",30,0)
 ;Since the Kernel Installation Guide suggests running XUTL once every
"RTN","PXRMPINF",31,0)
 ;7 days we need to check for expired patient caches.
"RTN","PXRMPINF",32,0)
 S TEMP=$G(^XTMP(PXRMDFN,0))
"RTN","PXRMPINF",33,0)
 S DATEBLT=+$P(TEMP,U,2)
"RTN","PXRMPINF",34,0)
 S EXPDATE=+$P(TEMP,U,1)
"RTN","PXRMPINF",35,0)
 ;If the patient's problem list has been modified since the cache was
"RTN","PXRMPINF",36,0)
 ;last built kill it.
"RTN","PXRMPINF",37,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMPINF",38,0)
 I (NOW>EXPDATE)!((+$$MOD^GMPLUTL3(DFN))>(DATEBLT)) D KILLPC(PXRMDFN)
"RTN","PXRMPINF",39,0)
 ;
"RTN","PXRMPINF",40,0)
 I '$$LOCKPC(PXRMDFN) Q "NO LOCK"
"RTN","PXRMPINF",41,0)
 I $D(^XTMP(PXRMDFN,0)) D
"RTN","PXRMPINF",42,0)
 . S PATIENT=^XTMP(PXRMDFN,"PATIENT")
"RTN","PXRMPINF",43,0)
 . S PXRMSSN=^XTMP(PXRMDFN,"SSN")
"RTN","PXRMPINF",44,0)
 . S PXRMDOB=^XTMP(PXRMDFN,"DOB")
"RTN","PXRMPINF",45,0)
 . S PXRMAGE=^XTMP(PXRMDFN,"AGE")
"RTN","PXRMPINF",46,0)
 . S PXRMSEX=^XTMP(PXRMDFN,"SEX")
"RTN","PXRMPINF",47,0)
 . S PXRMDOD=^XTMP(PXRMDFN,"DOD")
"RTN","PXRMPINF",48,0)
 . S PXRMRACE=^XTMP(PXRMDFN,"RACE")
"RTN","PXRMPINF",49,0)
 E  D
"RTN","PXRMPINF",50,0)
 . D DEM^VADPT
"RTN","PXRMPINF",51,0)
 . S (PATIENT,^XTMP(PXRMDFN,"PATIENT"))=VADM(1)
"RTN","PXRMPINF",52,0)
 . S (PXRMSSN,^XTMP(PXRMDFN,"SSN"))=VADM(2)
"RTN","PXRMPINF",53,0)
 . S (PXRMDOB,^XTMP(PXRMDFN,"DOB"))=$P(VADM(3),U,1)
"RTN","PXRMPINF",54,0)
 . S (PXRMAGE,^XTMP(PXRMDFN,"AGE"))=VADM(4)
"RTN","PXRMPINF",55,0)
 . S (PXRMSEX,^XTMP(PXRMDFN,"SEX"))=VADM(5)
"RTN","PXRMPINF",56,0)
 . S (PXRMDOD,^XTMP(PXRMDFN,"DOD"))=$P(VADM(6),U,1)
"RTN","PXRMPINF",57,0)
 . S (PXRMRACE,^XTMP(PXRMDFN,"RACE"))=$P(VADM(8),U,2)
"RTN","PXRMPINF",58,0)
 . D KVA^VADPT
"RTN","PXRMPINF",59,0)
 . S ^XTMP(PXRMDFN,0)=$$FMADD^XLFDT(NOW,1)_U_NOW_U_"PXRM PATIENT DATA CACHE"
"RTN","PXRMPINF",60,0)
 ;If PXRMDATE has a value then the reminder is evaluated as if PXRMDATE
"RTN","PXRMPINF",61,0)
 ;is the current date.
"RTN","PXRMPINF",62,0)
 I +$G(PXRMDATE)>0 D
"RTN","PXRMPINF",63,0)
 . S PXRMAGE=$$AGE^PXRMAGE(PXRMDOB,PXRMDATE)
"RTN","PXRMPINF",64,0)
 I $L(PATIENT)'>0 Q "NO PATIENT"
"RTN","PXRMPINF",65,0)
 E  Q 1
"RTN","PXRMPINF",66,0)
 ;
"RTN","PXRMPINF",67,0)
 ;=======================================================================
"RTN","PXRMPINF",68,0)
KILLPC(PXRMDFN) ;Kill the patient cache.
"RTN","PXRMPINF",69,0)
 N LOCK
"RTN","PXRMPINF",70,0)
 S LOCK=$$LOCKPC(PXRMDFN)
"RTN","PXRMPINF",71,0)
 I LOCK D
"RTN","PXRMPINF",72,0)
 . K ^XTMP(PXRMDFN)
"RTN","PXRMPINF",73,0)
 . D UNLOCKPC(PXRMDFN)
"RTN","PXRMPINF",74,0)
 Q
"RTN","PXRMPINF",75,0)
 ;
"RTN","PXRMPINF",76,0)
 ;=======================================================================
"RTN","PXRMPINF",77,0)
LOCKPC(PXRMDFN) ;Lock the patient cache.
"RTN","PXRMPINF",78,0)
 N IND,LOCK
"RTN","PXRMPINF",79,0)
 S LOCK=0
"RTN","PXRMPINF",80,0)
 F IND=1:1:30 Q:LOCK  D
"RTN","PXRMPINF",81,0)
 . L +^XTMP(PXRMDFN):1
"RTN","PXRMPINF",82,0)
 . S LOCK=$T
"RTN","PXRMPINF",83,0)
 Q LOCK
"RTN","PXRMPINF",84,0)
 ;
"RTN","PXRMPINF",85,0)
 ;=======================================================================
"RTN","PXRMPINF",86,0)
UNLOCKPC(PXRMDFN) ;Unlock the patient cache.
"RTN","PXRMPINF",87,0)
 L -^XTMP(PXRMDFN)
"RTN","PXRMPINF",88,0)
 Q
"RTN","PXRMPINF",89,0)
 ;
"RTN","PXRMPROB")
0^20^B16055665
"RTN","PXRMPROB",1,0)
PXRMPROB ; SLC/PKR - Code to treat items from the Problem List. ;10/10/2000
"RTN","PXRMPROB",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPROB",3,0)
 ;
"RTN","PXRMPROB",4,0)
 ;=======================================================================
"RTN","PXRMPROB",5,0)
BLDPC(DFN) ;Check and if necessary build the Problem List patient cache.
"RTN","PXRMPROB",6,0)
 N DATE,ICD9P,INVDATE,INVDT,NPATIEN,PROBIEN,TEMP
"RTN","PXRMPROB",7,0)
 N GMPLCOND,GMPLDLM,GMPLICD,GMPLLEX,GMPLODAT,GMPLPNAM,GMPLPRIO,GMPLPRV
"RTN","PXRMPROB",8,0)
 N GMPLSTAT,GMPLTXT,GMPLXDAT
"RTN","PXRMPROB",9,0)
 ;If the patient's problem list was modified since the cache was
"RTN","PXRMPROB",10,0)
 ;last built the cache will have been killed in PXRMPINF.
"RTN","PXRMPROB",11,0)
 I '$D(^XTMP(PXRMDFN,"PROB","NPATIEN")) D
"RTN","PXRMPROB",12,0)
 . K ^XTMP(PXRMDFN,"PROB")
"RTN","PXRMPROB",13,0)
 . S INVDT=$$INVFFMDL^PXRMDATE(DT,1)
"RTN","PXRMPROB",14,0)
 . S PROBIEN=""
"RTN","PXRMPROB",15,0)
 . F  S PROBIEN=$O(^AUPNPROB("AC",DFN,PROBIEN)) Q:PROBIEN=""  D
"RTN","PXRMPROB",16,0)
 .. D CALL2^GMPLUTL3(PROBIEN)
"RTN","PXRMPROB",17,0)
 .. I (GMPLCOND="H")!(GMPLCOND="") Q
"RTN","PXRMPROB",18,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(GMPLDLM,1)
"RTN","PXRMPROB",19,0)
 ..;If the problem is chronic use today's date instead of the
"RTN","PXRMPROB",20,0)
 ..;date last modified.
"RTN","PXRMPROB",21,0)
 .. I GMPLPRIO="C" D
"RTN","PXRMPROB",22,0)
 ... S DATE=DT
"RTN","PXRMPROB",23,0)
 ... S INVDATE=INVDT
"RTN","PXRMPROB",24,0)
 .. E  S DATE=GMPLDLM
"RTN","PXRMPROB",25,0)
 .. S ^TMP($J,"PROB",GMPLICD,INVDATE)=PROBIEN_U_U_DATE_U_GMPLICD_U_GMPLSTAT_U_GMPLPRIO
"RTN","PXRMPROB",26,0)
 .;
"RTN","PXRMPROB",27,0)
 .;Build the list of most recent entries.
"RTN","PXRMPROB",28,0)
 . S NPATIEN=0
"RTN","PXRMPROB",29,0)
 . S ICD9P=""
"RTN","PXRMPROB",30,0)
 . F  S ICD9P=$O(^TMP($J,"PROB",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMPROB",31,0)
 .. S INVDATE=$O(^TMP($J,"PROB",ICD9P,""))
"RTN","PXRMPROB",32,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMPROB",33,0)
 .. S TEMP=^TMP($J,"PROB",ICD9P,INVDATE)
"RTN","PXRMPROB",34,0)
 .. S ^XTMP(PXRMDFN,"PROB",ICD9P,INVDATE)=TEMP
"RTN","PXRMPROB",35,0)
 . S ^XTMP(PXRMDFN,"PROB","NPATIEN")=NPATIEN
"RTN","PXRMPROB",36,0)
 . K ^TMP($J,"PROB")
"RTN","PXRMPROB",37,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"PROB","NPATIEN")
"RTN","PXRMPROB",38,0)
 Q NPATIEN
"RTN","PXRMPROB",39,0)
 ;
"RTN","PXRMPROB",40,0)
 ;=======================================================================
"RTN","PXRMPROB",41,0)
EVAL(DFN,FIND0,TFIND0,TAXIEN,FLIST) ;Evaluate Problem List entries.
"RTN","PXRMPROB",42,0)
 N FIRST,ICD9P,INVDATE,LAST,NPATIEN,TAX0,TLIST,USEINP
"RTN","PXRMPROB",43,0)
 S NPATIEN=$$BLDPC(DFN)
"RTN","PXRMPROB",44,0)
 I NPATIEN=0 Q
"RTN","PXRMPROB",45,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMPROB",46,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMPROB",47,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMPROB",48,0)
 ;match limits.
"RTN","PXRMPROB",49,0)
 S FIRST=$O(^XTMP(PXRMDFN,"PROB",""))
"RTN","PXRMPROB",50,0)
 S LAST=$O(^XTMP(PXRMDFN,"PROB","NPATIEN"),-1)
"RTN","PXRMPROB",51,0)
 S ICD9P=FIRST-1
"RTN","PXRMPROB",52,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMPROB",53,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"PROB",ICD9P,""))
"RTN","PXRMPROB",54,0)
 . I INVDATE>0 D
"RTN","PXRMPROB",55,0)
 .. S TLIST(INVDATE)=$G(^XTMP(PXRMDFN,"PROB",ICD9P,INVDATE))
"RTN","PXRMPROB",56,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMPROB",57,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMPROB",58,0)
 ;If there are no entries we are done.
"RTN","PXRMPROB",59,0)
 I INVDATE="" Q
"RTN","PXRMPROB",60,0)
 S TAX0=^PXD(811.2,TAXIEN,0)
"RTN","PXRMPROB",61,0)
 S USEINP=$P(TAX0,U,9)
"RTN","PXRMPROB",62,0)
 I USEINP="" S USEINP=$P(TFIND0,U,9)
"RTN","PXRMPROB",63,0)
 I USEINP="" S USEINP=$P(FIND0,U,9)
"RTN","PXRMPROB",64,0)
 ;If Use Inactive Problems is true return the most recent entry no
"RTN","PXRMPROB",65,0)
 ;matter what the status. If it is false return the most recent
"RTN","PXRMPROB",66,0)
 ;active entry.
"RTN","PXRMPROB",67,0)
 I 'USEINP D
"RTN","PXRMPROB",68,0)
 . N DONE,STATUS
"RTN","PXRMPROB",69,0)
 . S DONE=0
"RTN","PXRMPROB",70,0)
 . S INVDATE=""
"RTN","PXRMPROB",71,0)
 . F  S INVDATE=$O(TLIST(INVDATE)) Q:(DONE)!(INVDATE="")  D
"RTN","PXRMPROB",72,0)
 .. S STATUS=$P(TLIST(INVDATE),U,5)
"RTN","PXRMPROB",73,0)
 .. I STATUS="A" D
"RTN","PXRMPROB",74,0)
 ... S FLIST(INVDATE,"AUPNPROB")=TLIST(INVDATE)
"RTN","PXRMPROB",75,0)
 ... S DONE=1
"RTN","PXRMPROB",76,0)
 E  S FLIST(INVDATE,"AUPNPROB")=TLIST(INVDATE)
"RTN","PXRMPROB",77,0)
 Q
"RTN","PXRMPROB",78,0)
 ;
"RTN","PXRMPROB",79,0)
 ;======================================================================
"RTN","PXRMPROB",80,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMPROB",81,0)
 ;maintenance output. The Problem List information is:  DATE, ICD9 IEN, 
"RTN","PXRMPROB",82,0)
 ;ICD9 CODE, PROVIDER NARRATIVE.
"RTN","PXRMPROB",83,0)
 N EM,D0,DIAG,FIEN,ICD9P,ICD9ZN,PN,PRIORITY,TEMP,VDATE
"RTN","PXRMPROB",84,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMPROB",85,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMPROB",86,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMPROB",87,0)
 S TEMP=TEMP_" Problem Diagnosis: "
"RTN","PXRMPROB",88,0)
 S D0=$G(^AUPNPROB(FIEN,0))
"RTN","PXRMPROB",89,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMPROB",90,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMPROB",91,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMPROB",92,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMPROB",93,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMPROB",94,0)
 S PRIORITY=$G(FIEVAL(FINDING,"PRIORITY"))
"RTN","PXRMPROB",95,0)
 I $L(PRIORITY)>0 D
"RTN","PXRMPROB",96,0)
 . S TEMP=TEMP_" Priority-"_$$EXTERNAL^DILFD(9000011,1.14,"",PRIORITY,.EM)
"RTN","PXRMPROB",97,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMPROB",98,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMPROB",99,0)
 ;If the Problem is inactive add "INACTIVE PROBLEM"
"RTN","PXRMPROB",100,0)
 I $D(FIEVAL(FINDING,"INACTIVE")) S TEMP=TEMP_" - INACTIVE PROBLEM"
"RTN","PXRMPROB",101,0)
 S NLINES=NLINES+1
"RTN","PXRMPROB",102,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMPROB",103,0)
 S PN=$P(D0,U,5)
"RTN","PXRMPROB",104,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMPROB",105,0)
 I ($L(PN)>0)&(PN'=DIAG) D
"RTN","PXRMPROB",106,0)
 . S NLINES=NLINES+1
"RTN","PXRMPROB",107,0)
 . S TEXT(NLINES)="Prov. Narr. - "_PN
"RTN","PXRMPROB",108,0)
 I $D(PXRMDEV) D
"RTN","PXRMPROB",109,0)
 . N UID
"RTN","PXRMPROB",110,0)
 . S UID="ICD9PROB "_CODE
"RTN","PXRMPROB",111,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMPROB",112,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMPROB",113,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMPROB",114,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMPROB",115,0)
 Q
"RTN","PXRMPROB",116,0)
 ;
"RTN","PXRMPT")
1^4
"RTN","PXRMPTDF")
0^2^B29593414
"RTN","PXRMPTDF",1,0)
PXRMPTDF ; SLC/PKR/PJH - Routines for definition print templates ;02/23/2001
"RTN","PXRMPTDF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPTDF",3,0)
 ;
"RTN","PXRMPTDF",4,0)
 ;======================================================================
"RTN","PXRMPTDF",5,0)
AFREQ ; Print baseline FREQUENCY/AGE RANGE.
"RTN","PXRMPTDF",6,0)
 N PXAMAX,PXAMIN,PXF,PXF0,PXW
"RTN","PXRMPTDF",7,0)
 S PXF0=$G(^PXD(811.9,D0,7,D1,0))
"RTN","PXRMPTDF",8,0)
 S PXF=$P(PXF0,U,1)
"RTN","PXRMPTDF",9,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPTDF",10,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTDF",11,0)
 I PXF="" S PXW="MISSING FREQUENCY"
"RTN","PXRMPTDF",12,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",13,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTDF",14,0)
 W "  ",PXW
"RTN","PXRMPTDF",15,0)
 Q
"RTN","PXRMPTDF",16,0)
 ;
"RTN","PXRMPTDF",17,0)
 ;======================================================================
"RTN","PXRMPTDF",18,0)
DUEWI ;Print DO WITHIN time frame
"RTN","PXRMPTDF",19,0)
 N PXF,PXW
"RTN","PXRMPTDF",20,0)
 S PXF=$P($G(^PXD(811.9,D0,0)),U,4)
"RTN","PXRMPTDF",21,0)
 I (PXF="")!(+PXF=0) W "  Wait until actually DUE" Q
"RTN","PXRMPTDF",22,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",23,0)
 W "  Do if DUE within "_PXW
"RTN","PXRMPTDF",24,0)
 Q
"RTN","PXRMPTDF",25,0)
 ;
"RTN","PXRMPTDF",26,0)
 ;======================================================================
"RTN","PXRMPTDF",27,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTDF",28,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTDF",29,0)
 ;look up.
"RTN","PXRMPTDF",30,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTDF",31,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTDF",32,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",33,0)
 S FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTDF",34,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTDF",35,0)
 Q NAME
"RTN","PXRMPTDF",36,0)
 ;
"RTN","PXRMPTDF",37,0)
 ;======================================================================
"RTN","PXRMPTDF",38,0)
FREQ(FREQ) ;Format frequency.
"RTN","PXRMPTDF",39,0)
 N STR
"RTN","PXRMPTDF",40,0)
 I +FREQ=0 S STR=FREQ_" - Not Indicated" Q STR
"RTN","PXRMPTDF",41,0)
 I FREQ?1"99Y" S STR="99Y - Once"
"RTN","PXRMPTDF",42,0)
 E  S STR=+FREQ_($S(FREQ?1N.N1"D":" day",FREQ?1N.N1"M":" month",FREQ?1N.N1"Y":" year",1:""))_$S(+FREQ>1:"s",1:"")
"RTN","PXRMPTDF",43,0)
 Q STR
"RTN","PXRMPTDF",44,0)
 ;
"RTN","PXRMPTDF",45,0)
 ;======================================================================
"RTN","PXRMPTDF",46,0)
FTYPE(VPTR) ;Return finding type.
"RTN","PXRMPTDF",47,0)
 N FTYPE,ROOT
"RTN","PXRMPTDF",48,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",49,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",50,0)
 S FTYPE=$P(PXRMFVPL(ROOT),U,2)
"RTN","PXRMPTDF",51,0)
 Q FTYPE
"RTN","PXRMPTDF",52,0)
 ;
"RTN","PXRMPTDF",53,0)
 ;======================================================================
"RTN","PXRMPTDF",54,0)
GENFREQ(PXF0) ;Print age range frequency set for findings.
"RTN","PXRMPTDF",55,0)
 N PXF,PXW,PXAMIN,PXAMAX
"RTN","PXRMPTDF",56,0)
 S PXF=$P(PXF0,U,4)
"RTN","PXRMPTDF",57,0)
 I PXF="" Q ""
"RTN","PXRMPTDF",58,0)
 S PXAMIN=$P(PXF0,U,2)
"RTN","PXRMPTDF",59,0)
 S PXAMAX=$P(PXF0,U,3)
"RTN","PXRMPTDF",60,0)
 S PXW=$$FREQ(PXF)
"RTN","PXRMPTDF",61,0)
 S PXW=PXW_$$FMTAGE^PXRMAGE(PXAMIN,PXAMAX)
"RTN","PXRMPTDF",62,0)
 Q PXW
"RTN","PXRMPTDF",63,0)
 ;
"RTN","PXRMPTDF",64,0)
 ;======================================================================
"RTN","PXRMPTDF",65,0)
GENIEN(FINDING) ;Return internal entry number for findings.
"RTN","PXRMPTDF",66,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTDF",67,0)
 S ROOT="^PXD(811.9,D0,20,FINDING,0)"
"RTN","PXRMPTDF",68,0)
 S F0=@ROOT
"RTN","PXRMPTDF",69,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTDF",70,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTDF",71,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTDF",72,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",73,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTDF",74,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTDF",75,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTDF",76,0)
 ;
"RTN","PXRMPTDF",77,0)
 ;======================================================================
"RTN","PXRMPTDF",78,0)
PFIND ;Print the reminder definition finding multiple.
"RTN","PXRMPTDF",79,0)
 N DIWF,FIELD,FINDING,FIND0,PAD,PADS,RJC,XEXT
"RTN","PXRMPTDF",80,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTDF",81,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMPTDF",82,0)
 ;Because of the way DIWP works we need to format all the found and
"RTN","PXRMPTDF",83,0)
 ;not found text first and store it in ^TMP.
"RTN","PXRMPTDF",84,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",85,0)
 S RJC=29
"RTN","PXRMPTDF",86,0)
 S PAD=" "
"RTN","PXRMPTDF",87,0)
 S PADS=""
"RTN","PXRMPTDF",88,0)
 F IND=1:1:(RJC+2) S PADS=PADS_PAD
"RTN","PXRMPTDF",89,0)
 S FINDING=0
"RTN","PXRMPTDF",90,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",91,0)
 . D WPFORMAT(FINDING,RJC,1)
"RTN","PXRMPTDF",92,0)
 . D WPFORMAT(FINDING,RJC,2)
"RTN","PXRMPTDF",93,0)
 S DIWF="C80",DIWL=2
"RTN","PXRMPTDF",94,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",95,0)
 S FINDING=0
"RTN","PXRMPTDF",96,0)
 F  S FINDING=$O(^PXD(811.9,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTDF",97,0)
 . S FIND0=^PXD(811.9,D0,20,FINDING,0)
"RTN","PXRMPTDF",98,0)
 . S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTDF",99,0)
 . S X=" "
"RTN","PXRMPTDF",100,0)
 . D ^DIWP
"RTN","PXRMPTDF",101,0)
 . S X=$$RJ^XLFSTR("Finding Item:",RJC,PAD)
"RTN","PXRMPTDF",102,0)
 . S X=X_" "_$$ENTRYNAM(FIELD)
"RTN","PXRMPTDF",103,0)
 . S X=X_" "_$$GENIEN(FINDING)
"RTN","PXRMPTDF",104,0)
 . D ^DIWP
"RTN","PXRMPTDF",105,0)
 .;
"RTN","PXRMPTDF",106,0)
 . S X=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTDF",107,0)
 . S X=X_" "_$$FTYPE(FIELD)
"RTN","PXRMPTDF",108,0)
 . D ^DIWP
"RTN","PXRMPTDF",109,0)
 .;
"RTN","PXRMPTDF",110,0)
 . S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTDF",111,0)
 . I $L(FIELD)>0 D
"RTN","PXRMPTDF",112,0)
 .. S X=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTDF",113,0)
 .. S X=X_" "_$$GENFREQ(FIND0)
"RTN","PXRMPTDF",114,0)
 .. D ^DIWP
"RTN","PXRMPTDF",115,0)
 .;
"RTN","PXRMPTDF",116,0)
 . D SFDISP(FIND0,5,6,"Rank Frequency:",RJC,PAD)
"RTN","PXRMPTDF",117,0)
 . D SFDISP(FIND0,6,7,"Use in Resolution Logic:",RJC,PAD)
"RTN","PXRMPTDF",118,0)
 . D SFDISP(FIND0,7,8,"Use in Patient Cohort Logic:",RJC,PAD)
"RTN","PXRMPTDF",119,0)
 . D SFDISP(FIND0,8,9,"Effective Period:",RJC,PAD)
"RTN","PXRMPTDF",120,0)
 . D SFDISP(FIND0,11,12,"Effective Date:",RJC,PAD)
"RTN","PXRMPTDF",121,0)
 . D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD)
"RTN","PXRMPTDF",122,0)
 . D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD)
"RTN","PXRMPTDF",123,0)
 . D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD)
"RTN","PXRMPTDF",124,0)
 .;
"RTN","PXRMPTDF",125,0)
 . S FIND0=$G(^PXD(811.9,D0,20,FINDING,3))
"RTN","PXRMPTDF",126,0)
 . D SFDISP(FIND0,1,14,"Condition:",RJC,PAD)
"RTN","PXRMPTDF",127,0)
 . D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD)
"RTN","PXRMPTDF",128,0)
 .;
"RTN","PXRMPTDF",129,0)
 . D WPOUT(FINDING,"Found Text:",RJC,PAD,PADS,1)
"RTN","PXRMPTDF",130,0)
 . D WPOUT(FINDING,"Not Found Text:",RJC,PAD,PADS,2)
"RTN","PXRMPTDF",131,0)
 .;
"RTN","PXRMPTDF",132,0)
 ;
"RTN","PXRMPTDF",133,0)
 K ^TMP($J,"W")
"RTN","PXRMPTDF",134,0)
 ;^UTILITY($J,"W") will be killed by ^DIWW in the print template.
"RTN","PXRMPTDF",135,0)
 Q
"RTN","PXRMPTDF",136,0)
 ;
"RTN","PXRMPTDF",137,0)
 ;======================================================================
"RTN","PXRMPTDF",138,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD) ;Standard finding multiple
"RTN","PXRMPTDF",139,0)
 ;field display.
"RTN","PXRMPTDF",140,0)
 N FIELD,X
"RTN","PXRMPTDF",141,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTDF",142,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTDF",143,0)
 . S X=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTDF",144,0)
 . S X=X_" "_$$EXTERNAL^DILFD(811.902,FLDNUM,"",FIELD,"")
"RTN","PXRMPTDF",145,0)
 . D ^DIWP
"RTN","PXRMPTDF",146,0)
 Q
"RTN","PXRMPTDF",147,0)
 ;
"RTN","PXRMPTDF",148,0)
 ;======================================================================
"RTN","PXRMPTDF",149,0)
WPFORMAT(FINDING,RJC,INDEX) ;Format found/not found word processing text.
"RTN","PXRMPTDF",150,0)
 I '$D(^PXD(811.9,D0,20,FINDING,INDEX,1,0)) Q
"RTN","PXRMPTDF",151,0)
 ;Save the title using the current format for DIWP.
"RTN","PXRMPTDF",152,0)
 N DIWF,DIWL,DIWR,IND,NLINES,SC,TEXT,X
"RTN","PXRMPTDF",153,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",154,0)
 S DIWF="|",DIWL=RJC+2,DIWR=78
"RTN","PXRMPTDF",155,0)
 S IND=0
"RTN","PXRMPTDF",156,0)
 F  S IND=$O(^PXD(811.9,D0,20,FINDING,INDEX,IND)) Q:+IND=0  D
"RTN","PXRMPTDF",157,0)
 . S X=$G(^PXD(811.9,D0,20,FINDING,INDEX,IND,0))
"RTN","PXRMPTDF",158,0)
 . D ^DIWP
"RTN","PXRMPTDF",159,0)
 ;Find where this stuff went.
"RTN","PXRMPTDF",160,0)
 S SC=$O(^UTILITY($J,"W",""))
"RTN","PXRMPTDF",161,0)
 ;Save into ^TMP.
"RTN","PXRMPTDF",162,0)
 S NLINES=^UTILITY($J,"W",SC)
"RTN","PXRMPTDF",163,0)
 S ^TMP($J,"W",FINDING,INDEX)=NLINES
"RTN","PXRMPTDF",164,0)
 F IND=1:1:NLINES D
"RTN","PXRMPTDF",165,0)
 . S ^TMP($J,"W",FINDING,INDEX,IND)=^UTILITY($J,"W",SC,IND,0)
"RTN","PXRMPTDF",166,0)
 K ^UTILITY($J,"W")
"RTN","PXRMPTDF",167,0)
 Q
"RTN","PXRMPTDF",168,0)
 ;
"RTN","PXRMPTDF",169,0)
 ;======================================================================
"RTN","PXRMPTDF",170,0)
WPOUT(FINDING,TITLE,RJC,PAD,PADS,INDEX) ;Output found/not found word processing
"RTN","PXRMPTDF",171,0)
 ;text.
"RTN","PXRMPTDF",172,0)
 I $D(^TMP($J,"W",FINDING,INDEX)) D
"RTN","PXRMPTDF",173,0)
 . N IND,X
"RTN","PXRMPTDF",174,0)
 . S X=$$RJ^XLFSTR(TITLE,RJC,PAD)_" "_^TMP($J,"W",FINDING,INDEX,1)
"RTN","PXRMPTDF",175,0)
 . D ^DIWP
"RTN","PXRMPTDF",176,0)
 . F IND=2:1:^TMP($J,"W",FINDING,INDEX) D
"RTN","PXRMPTDF",177,0)
 .. S X=PADS_^TMP($J,"W",FINDING,INDEX,IND)
"RTN","PXRMPTDF",178,0)
 .. D ^DIWP
"RTN","PXRMPTDF",179,0)
 Q
"RTN","PXRMPTDF",180,0)
 ;
"RTN","PXRMPTL")
0^11^B21462533
"RTN","PXRMPTL",1,0)
PXRMPTL ; SLC/DLT,PKR,PJH - Print Clinical Reminders logic ; 08/04/2000
"RTN","PXRMPTL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPTL",3,0)
 ;
"RTN","PXRMPTL",4,0)
 ;=======================================================================
"RTN","PXRMPTL",5,0)
ARRFMT(START,END,NE,INARRAY,OUTARRAY) ;Format array INARRAY so that
"RTN","PXRMPTL",6,0)
 ;it fits between START and END. Put each "formatted" piece into
"RTN","PXRMPTL",7,0)
 ;OUTARRAY and return the number of lines.
"RTN","PXRMPTL",8,0)
 N IC,LINNUM,MAXLEN,SLEN
"RTN","PXRMPTL",9,0)
 K OUTARRAY
"RTN","PXRMPTL",10,0)
 S MAXLEN=END-START+1
"RTN","PXRMPTL",11,0)
 S OUTARRAY(1)=""
"RTN","PXRMPTL",12,0)
 S LINNUM=1
"RTN","PXRMPTL",13,0)
 F IC=1:1:NE D
"RTN","PXRMPTL",14,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(INARRAY(IC))
"RTN","PXRMPTL",15,0)
 . I SLEN>MAXLEN D
"RTN","PXRMPTL",16,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",17,0)
 .. S OUTARRAY(LINNUM)=INARRAY(IC)
"RTN","PXRMPTL",18,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_INARRAY(IC)
"RTN","PXRMPTL",19,0)
 Q LINNUM
"RTN","PXRMPTL",20,0)
 ;
"RTN","PXRMPTL",21,0)
 ;=======================================================================
"RTN","PXRMPTL",22,0)
BLDFLST(FL) ;Build the list of findings defined for this reminder.
"RTN","PXRMPTL",23,0)
 N IC,TEMP,GLOB,SUB,NAME
"RTN","PXRMPTL",24,0)
 ;Build a list of findings.
"RTN","PXRMPTL",25,0)
 S IC=0
"RTN","PXRMPTL",26,0)
 F  S IC=$O(^PXD(811.9,RITEM,20,IC)) Q:+IC=0  D
"RTN","PXRMPTL",27,0)
 . S TEMP=$P(^PXD(811.9,RITEM,20,IC,0),U)
"RTN","PXRMPTL",28,0)
 . S GLOB=$P(TEMP,";",2),SUB=$P(TEMP,";")
"RTN","PXRMPTL",29,0)
 . S NAME=$P($G(@(U_GLOB_SUB_",0)")),U)
"RTN","PXRMPTL",30,0)
 . S FL(IC)=NAME
"RTN","PXRMPTL",31,0)
 Q
"RTN","PXRMPTL",32,0)
 ;
"RTN","PXRMPTL",33,0)
 ;=======================================================================
"RTN","PXRMPTL",34,0)
DISLOG ;Display the APPLY LOGIG.
"RTN","PXRMPTL",35,0)
 ;Determine if this is a default adhoc logic or user modified logic
"RTN","PXRMPTL",36,0)
 N PXF
"RTN","PXRMPTL",37,0)
 S PXF=$L($G(^PXD(811.9,D0,30)))
"RTN","PXRMPTL",38,0)
 I 'PXF W "Default PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",39,0)
 E  W "Customized PATIENT COHORT LOGIC to see if the Reminder applies to a patient:"
"RTN","PXRMPTL",40,0)
 ;
"RTN","PXRMPTL",41,0)
 N BOOLOP,RITEM
"RTN","PXRMPTL",42,0)
 S RITEM=D0
"RTN","PXRMPTL",43,0)
 ;
"RTN","PXRMPTL",44,0)
 ;Establish the list of boolean operators that can be used in the logic
"RTN","PXRMPTL",45,0)
 ;string.
"RTN","PXRMPTL",46,0)
 S BOOLOP="'!&"
"RTN","PXRMPTL",47,0)
 ;
"RTN","PXRMPTL",48,0)
 ;Build the lists of findings for this reminder.
"RTN","PXRMPTL",49,0)
 N FL
"RTN","PXRMPTL",50,0)
 D BLDFLST(.FL)
"RTN","PXRMPTL",51,0)
 ;
"RTN","PXRMPTL",52,0)
 N ELOGSTR,IND,NEE,LOGSTR,NLOGLIN,PARRAY,TEND,TSTART
"RTN","PXRMPTL",53,0)
 S TSTART=1
"RTN","PXRMPTL",54,0)
 S TEND=75
"RTN","PXRMPTL",55,0)
 ;
"RTN","PXRMPTL",56,0)
 ;Get the user cohort logic string.
"RTN","PXRMPTL",57,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,30))
"RTN","PXRMPTL",58,0)
 ;Otherwise use internal cohort logic
"RTN","PXRMPTL",59,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,31))
"RTN","PXRMPTL",60,0)
 ;
"RTN","PXRMPTL",61,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",62,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",63,0)
 ;
"RTN","PXRMPTL",64,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMPTL",65,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",66,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",67,0)
 ;
"RTN","PXRMPTL",68,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMPTL",69,0)
 ;Format the expanded logic string.
"RTN","PXRMPTL",70,0)
 S NLOGLIN=$$ARRFMT(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMPTL",71,0)
 ;
"RTN","PXRMPTL",72,0)
 W !!,"Expanded Patient Cohort Logic:"
"RTN","PXRMPTL",73,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",74,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",75,0)
 ;
"RTN","PXRMPTL",76,0)
 W !!
"RTN","PXRMPTL",77,0)
 S PXF=$L($G(^PXD(811.9,RITEM,34)))
"RTN","PXRMPTL",78,0)
 I 'PXF W "Default RESOLUTION LOGIC defines findings that resolve the Reminder:"
"RTN","PXRMPTL",79,0)
 E  W "Customized RESOLUTION LOGIC defines findings that resolve the Reminder:"
"RTN","PXRMPTL",80,0)
 ;
"RTN","PXRMPTL",81,0)
 ;Get user resolution logic string
"RTN","PXRMPTL",82,0)
 S LOGSTR=$G(^PXD(811.9,RITEM,34))
"RTN","PXRMPTL",83,0)
 ;Otherwise use internal resolution logic
"RTN","PXRMPTL",84,0)
 I LOGSTR="" S LOGSTR=$G(^PXD(811.9,RITEM,35))
"RTN","PXRMPTL",85,0)
 ;
"RTN","PXRMPTL",86,0)
 ;Remove any (0)! and (1)& entries
"RTN","PXRMPTL",87,0)
 S LOGSTR=$$REMOVE(LOGSTR)
"RTN","PXRMPTL",88,0)
 ;
"RTN","PXRMPTL",89,0)
 S NLOGLIN=$$STRFMT(TSTART,TEND,LOGSTR,BOOLOP,.PARRAY)
"RTN","PXRMPTL",90,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",91,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",92,0)
 ;
"RTN","PXRMPTL",93,0)
 S NEE=$$ELOGSTR(LOGSTR,.ELOGSTR,.FL,BOOLOP)
"RTN","PXRMPTL",94,0)
 ;Format the expanded logic string.
"RTN","PXRMPTL",95,0)
 S NLOGLIN=$$ARRFMT(TSTART,TEND,NEE,.ELOGSTR,.PARRAY)
"RTN","PXRMPTL",96,0)
 ;
"RTN","PXRMPTL",97,0)
 W !!,"Expanded Resolution Logic:"
"RTN","PXRMPTL",98,0)
 F IND=1:1:NLOGLIN D
"RTN","PXRMPTL",99,0)
 . W !,?5,PARRAY(IND)
"RTN","PXRMPTL",100,0)
 Q
"RTN","PXRMPTL",101,0)
 ;
"RTN","PXRMPTL",102,0)
 ;=======================================================================
"RTN","PXRMPTL",103,0)
ELOGSTR(LOGSTR,ELOGSTR,FL,SEP) ;Expand the logic string use SEP as a
"RTN","PXRMPTL",104,0)
 ;separator. Return the number of elements.
"RTN","PXRMPTL",105,0)
 N END,IC,IND,NEE,START,TEMP
"RTN","PXRMPTL",106,0)
 S NEE=1
"RTN","PXRMPTL",107,0)
 S ELOGSTR(NEE)=""
"RTN","PXRMPTL",108,0)
 ;Break the logic string into pieces using SEP.
"RTN","PXRMPTL",109,0)
 F IC=1:1:$L(LOGSTR) D
"RTN","PXRMPTL",110,0)
 . S TEMP=$E(LOGSTR,IC)
"RTN","PXRMPTL",111,0)
 . I SEP[TEMP D
"RTN","PXRMPTL",112,0)
 .. S NEE=NEE+1
"RTN","PXRMPTL",113,0)
 .. S ELOGSTR(NEE)=TEMP
"RTN","PXRMPTL",114,0)
 .. S NEE=NEE+1
"RTN","PXRMPTL",115,0)
 .. S ELOGSTR(NEE)=""
"RTN","PXRMPTL",116,0)
 . E  S ELOGSTR(NEE)=ELOGSTR(NEE)_TEMP
"RTN","PXRMPTL",117,0)
 ;Substitute the names for the finding indices.
"RTN","PXRMPTL",118,0)
 F IC=1:1:NEE D
"RTN","PXRMPTL",119,0)
 . I ELOGSTR(IC)["FI" D
"RTN","PXRMPTL",120,0)
 .. S TEMP=ELOGSTR(IC)
"RTN","PXRMPTL",121,0)
 .. S START=$F(TEMP,"FI(")
"RTN","PXRMPTL",122,0)
 .. S END=$F(TEMP,")",START)-2
"RTN","PXRMPTL",123,0)
 .. S IND=$E(TEMP,START,END)
"RTN","PXRMPTL",124,0)
 .. S TEMP=$G(FL(IND)) I TEMP="" Q
"RTN","PXRMPTL",125,0)
 .. S ELOGSTR(IC)=$$STRREP^PXRMUTIL(ELOGSTR(IC),IND,TEMP)
"RTN","PXRMPTL",126,0)
 Q NEE
"RTN","PXRMPTL",127,0)
 ;
"RTN","PXRMPTL",128,0)
 ;======================================================================
"RTN","PXRMPTL",129,0)
STRFMT(START,END,STRING,SEP,OUTARRAY) ;Format string STRING so that
"RTN","PXRMPTL",130,0)
 ;it fits between START and END. Put each "formatted" piece into
"RTN","PXRMPTL",131,0)
 ;OUTARRAY and return the number of lines.
"RTN","PXRMPTL",132,0)
 N MAXLEN,SLEN
"RTN","PXRMPTL",133,0)
 K OUTARRAY
"RTN","PXRMPTL",134,0)
 S MAXLEN=END-START+1
"RTN","PXRMPTL",135,0)
 S SLEN=$L(STRING)
"RTN","PXRMPTL",136,0)
 I SLEN'>MAXLEN D  Q 1
"RTN","PXRMPTL",137,0)
 . S OUTARRAY(1)=STRING
"RTN","PXRMPTL",138,0)
 ;
"RTN","PXRMPTL",139,0)
 N CHAR,IC,LINNUM,NE,TARRAY,TEMP
"RTN","PXRMPTL",140,0)
 ;Break string into pieces using SEP.
"RTN","PXRMPTL",141,0)
 S LINNUM=0
"RTN","PXRMPTL",142,0)
 S TEMP=""
"RTN","PXRMPTL",143,0)
 F IC=1:1:SLEN D
"RTN","PXRMPTL",144,0)
 . S CHAR=$E(STRING,IC,IC)
"RTN","PXRMPTL",145,0)
 . S TEMP=TEMP_CHAR
"RTN","PXRMPTL",146,0)
 . I SEP[CHAR D
"RTN","PXRMPTL",147,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",148,0)
 .. S TARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",149,0)
 .. S TEMP=""
"RTN","PXRMPTL",150,0)
 S LINNUM=LINNUM+1
"RTN","PXRMPTL",151,0)
 S TARRAY(LINNUM)=TEMP
"RTN","PXRMPTL",152,0)
 S NE=LINNUM
"RTN","PXRMPTL",153,0)
 ;
"RTN","PXRMPTL",154,0)
 ;Load the output array.
"RTN","PXRMPTL",155,0)
 S OUTARRAY(1)=""
"RTN","PXRMPTL",156,0)
 S LINNUM=1
"RTN","PXRMPTL",157,0)
 F IC=1:1:NE D
"RTN","PXRMPTL",158,0)
 . S SLEN=$L(OUTARRAY(LINNUM))+$L(TARRAY(IC))
"RTN","PXRMPTL",159,0)
 . I SLEN>MAXLEN D
"RTN","PXRMPTL",160,0)
 .. S LINNUM=LINNUM+1
"RTN","PXRMPTL",161,0)
 .. S OUTARRAY(LINNUM)=TARRAY(IC)
"RTN","PXRMPTL",162,0)
 . E  S OUTARRAY(LINNUM)=OUTARRAY(LINNUM)_TARRAY(IC)
"RTN","PXRMPTL",163,0)
 Q LINNUM
"RTN","PXRMPTL",164,0)
 ;
"RTN","PXRMPTL",165,0)
 ;======================================================================
"RTN","PXRMPTL",166,0)
REMOVE(STRING) ;Remove leading (n) entries
"RTN","PXRMPTL",167,0)
 I ($E(STRING,1,4)="(0)!")!($E(STRING,1,4)="(1)&") S $E(STRING,1,4)=""
"RTN","PXRMPTL",168,0)
 Q STRING
"RTN","PXRMPTTR")
0^3^B8136557
"RTN","PXRMPTTR",1,0)
PXRMPTTR ;SLC/PKR - Routines for term print templates ;02/15/2001
"RTN","PXRMPTTR",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPTTR",3,0)
 ;
"RTN","PXRMPTTR",4,0)
 ;======================================================================
"RTN","PXRMPTTR",5,0)
ENTRYNAM(VPTR) ;Given the variable pointer return the entry name. The
"RTN","PXRMPTTR",6,0)
 ;variable pointer list contains the information necessary to do the
"RTN","PXRMPTTR",7,0)
 ;look up.
"RTN","PXRMPTTR",8,0)
 N IEN,FILENUM,NAME,ROOT
"RTN","PXRMPTTR",9,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",10,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",11,0)
 S FILENUM=$P(PXRMFVPL(ROOT),U,1)
"RTN","PXRMPTTR",12,0)
 S NAME=$$GET1^DIQ(FILENUM,IEN,.01,"","","")
"RTN","PXRMPTTR",13,0)
 Q NAME
"RTN","PXRMPTTR",14,0)
 ;
"RTN","PXRMPTTR",15,0)
 ;======================================================================
"RTN","PXRMPTTR",16,0)
PFIND ;Print the reminder term finding multiple.
"RTN","PXRMPTTR",17,0)
 N FIELD,FINDING,FIND0,PAD,PXRMFVPL,RJC,TEXT
"RTN","PXRMPTTR",18,0)
 ;If called by a FileMan print build the variable pointer list.
"RTN","PXRMPTTR",19,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",20,0)
 S PAD=" ",RJC=31
"RTN","PXRMPTTR",21,0)
 S FINDING=0
"RTN","PXRMPTTR",22,0)
 F  S FINDING=$O(^PXRMD(811.5,D0,20,FINDING)) Q:+FINDING=0  D
"RTN","PXRMPTTR",23,0)
 . S FIND0=^PXRMD(811.5,D0,20,FINDING,0)
"RTN","PXRMPTTR",24,0)
 . S FIELD=$P(FIND0,U,1)
"RTN","PXRMPTTR",25,0)
 . S TEXT=$$RJ^XLFSTR("Finding Item:",RJC,PAD)
"RTN","PXRMPTTR",26,0)
 . S TEXT=TEXT_"  "_$$ENTRYNAM(FIELD)
"RTN","PXRMPTTR",27,0)
 . S TEXT=TEXT_" "_$$TRMIEN(FINDING)
"RTN","PXRMPTTR",28,0)
 . W !!,TEXT
"RTN","PXRMPTTR",29,0)
 .;
"RTN","PXRMPTTR",30,0)
 . S TEXT=$$RJ^XLFSTR("Finding Type:",RJC,PAD)
"RTN","PXRMPTTR",31,0)
 . S TEXT=TEXT_"  "_$$TFTYPE(FIELD)
"RTN","PXRMPTTR",32,0)
 . W !,TEXT
"RTN","PXRMPTTR",33,0)
 .;
"RTN","PXRMPTTR",34,0)
 . S FIELD=$P(FIND0,U,4)
"RTN","PXRMPTTR",35,0)
 . I $L(FIELD)>0 D
"RTN","PXRMPTTR",36,0)
 .. S TEXT=$$RJ^XLFSTR("Match Frequency/Age:",RJC,PAD)
"RTN","PXRMPTTR",37,0)
 .. S TEXT=TEXT_"  "_$$GENFREQ^PXRMPTDF(FIND0)
"RTN","PXRMPTTR",38,0)
 .. W !,TEXT
"RTN","PXRMPTTR",39,0)
 .;
"RTN","PXRMPTTR",40,0)
 . D SFDISP(FIND0,8,9,"Effective Period:",RJC,PAD)
"RTN","PXRMPTTR",41,0)
 . D SFDISP(FIND0,9,10,"Use Inactive Problems:",RJC,PAD)
"RTN","PXRMPTTR",42,0)
 . D SFDISP(FIND0,10,11,"Within Category Rank:",RJC,PAD)
"RTN","PXRMPTTR",43,0)
 . D SFDISP(FIND0,11,12,"Effective Date:",RJC,PAD)
"RTN","PXRMPTTR",44,0)
 . D SFDISP(FIND0,12,13,"MH Scale:",RJC,PAD)
"RTN","PXRMPTTR",45,0)
 .;
"RTN","PXRMPTTR",46,0)
 . S FIND0=$G(^PXRMD(811.5,D0,20,FINDING,3))
"RTN","PXRMPTTR",47,0)
 . D SFDISP(FIND0,1,14,"Condition:",RJC,PAD)
"RTN","PXRMPTTR",48,0)
 . D SFDISP(FIND0,2,15,"Condition Case Sensitive:",RJC,PAD)
"RTN","PXRMPTTR",49,0)
 Q
"RTN","PXRMPTTR",50,0)
 ;
"RTN","PXRMPTTR",51,0)
 ;======================================================================
"RTN","PXRMPTTR",52,0)
SFDISP(FIND0,PIECE,FLDNUM,TITLE,RJC,PAD) ;Standard finding multiple
"RTN","PXRMPTTR",53,0)
 ;field display.
"RTN","PXRMPTTR",54,0)
 N FIELD,TEXT
"RTN","PXRMPTTR",55,0)
 S FIELD=$P(FIND0,U,PIECE)
"RTN","PXRMPTTR",56,0)
 I $L(FIELD)>0 D
"RTN","PXRMPTTR",57,0)
 . S TEXT=$$RJ^XLFSTR(TITLE,RJC,PAD)
"RTN","PXRMPTTR",58,0)
 . S TEXT=TEXT_"  "_$$EXTERNAL^DILFD(811.52,FLDNUM,"",FIELD,"")
"RTN","PXRMPTTR",59,0)
 . W !,TEXT
"RTN","PXRMPTTR",60,0)
 Q
"RTN","PXRMPTTR",61,0)
 ;
"RTN","PXRMPTTR",62,0)
 ;====================================================================
"RTN","PXRMPTTR",63,0)
TFTYPE(VPTR) ;Return Term finding type
"RTN","PXRMPTTR",64,0)
 N ROOT,TFTYPE
"RTN","PXRMPTTR",65,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",66,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",67,0)
 S TFTYPE=$P(PXRMFVPL(ROOT),U,2)
"RTN","PXRMPTTR",68,0)
 Q TFTYPE
"RTN","PXRMPTTR",69,0)
 ;
"RTN","PXRMPTTR",70,0)
 ;======================================================================
"RTN","PXRMPTTR",71,0)
TRMIEN(FINDING) ;Return internal entry number for TERM findings.
"RTN","PXRMPTTR",72,0)
 N F0,IEN,PREFIX,ROOT,VPTR
"RTN","PXRMPTTR",73,0)
 S ROOT="^PXRMD(811.5,D0,20,FINDING,0)"
"RTN","PXRMPTTR",74,0)
 S F0=@ROOT
"RTN","PXRMPTTR",75,0)
 S VPTR=$P(F0,U,1)
"RTN","PXRMPTTR",76,0)
 S IEN=$P(VPTR,";",1)
"RTN","PXRMPTTR",77,0)
 S ROOT=$P(VPTR,";",2)
"RTN","PXRMPTTR",78,0)
 I '$D(PXRMFVPL) N PXRMFVPL D BLDRLIST^PXRMVPTR(811.52,.01,.PXRMFVPL)
"RTN","PXRMPTTR",79,0)
 S VPTR=PXRMFVPL(ROOT)
"RTN","PXRMPTTR",80,0)
 S PREFIX=$P(VPTR,U,4)
"RTN","PXRMPTTR",81,0)
 Q " (FI("_+FINDING_")="_PREFIX_"("_IEN_"))"
"RTN","PXRMPTTR",82,0)
 ;
"RTN","PXRMPTTX")
0^1^B8438932
"RTN","PXRMPTTX",1,0)
PXRMPTTX ; SLC/PKR - Routines for taxonomy print templates ;08/03/2000
"RTN","PXRMPTTX",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMPTTX",3,0)
 ;
"RTN","PXRMPTTX",4,0)
 ;======================================================================
"RTN","PXRMPTTX",5,0)
ICD0LIST ;Print expanded list of ICD0 codes.
"RTN","PXRMPTTX",6,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPTTX",7,0)
 S TEMP=^PXD(811.2,D0,80.1,D1,0)
"RTN","PXRMPTTX",8,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",9,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",10,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",11,0)
 W !!,?6,"Code",?16,"ICD Operation/Procedure"
"RTN","PXRMPTTX",12,0)
 W !,?6,"----",?16,"-----------------------"
"RTN","PXRMPTTX",13,0)
 S IND=LOW_" "
"RTN","PXRMPTTX",14,0)
 S END=HIGH_" "
"RTN","PXRMPTTX",15,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPTTX",16,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPTTX",17,0)
 . S IEN=$O(^ICD0("BA",IND,""))
"RTN","PXRMPTTX",18,0)
 . I +IEN>0 S TEXT=$P($G(^ICD0(IEN,0)),U,4)
"RTN","PXRMPTTX",19,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPTTX",20,0)
 . S IND=$O(^ICD0("BA",IND))
"RTN","PXRMPTTX",21,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPTTX",22,0)
 Q
"RTN","PXRMPTTX",23,0)
 ;
"RTN","PXRMPTTX",24,0)
 ;======================================================================
"RTN","PXRMPTTX",25,0)
ICD9LIST ;Print expanded list of ICD9 codes.
"RTN","PXRMPTTX",26,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPTTX",27,0)
 S TEMP=^PXD(811.2,D0,80,D1,0)
"RTN","PXRMPTTX",28,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",29,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",30,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",31,0)
 W !!,?6,"Code",?16,"ICD Diagnosis"
"RTN","PXRMPTTX",32,0)
 W !,?6,"----",?16,"-------------"
"RTN","PXRMPTTX",33,0)
 S IND=LOW_" "
"RTN","PXRMPTTX",34,0)
 S END=HIGH_" "
"RTN","PXRMPTTX",35,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPTTX",36,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPTTX",37,0)
 . S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMPTTX",38,0)
 . I +IEN>0 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMPTTX",39,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPTTX",40,0)
 . S IND=$O(^ICD9("BA",IND))
"RTN","PXRMPTTX",41,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPTTX",42,0)
 Q
"RTN","PXRMPTTX",43,0)
 ;
"RTN","PXRMPTTX",44,0)
 ;======================================================================
"RTN","PXRMPTTX",45,0)
ICPTLIST ;Print expanded list of CPT codes.
"RTN","PXRMPTTX",46,0)
 N CODE,END,IEN,IND,LOW,HIGH,TEMP,TEXT
"RTN","PXRMPTTX",47,0)
 S TEMP=^PXD(811.2,D0,81,D1,0)
"RTN","PXRMPTTX",48,0)
 S LOW=$P(TEMP,U,1)
"RTN","PXRMPTTX",49,0)
 S HIGH=$P(TEMP,U,2)
"RTN","PXRMPTTX",50,0)
 I HIGH="" S HIGH=LOW
"RTN","PXRMPTTX",51,0)
 W !!,?6,"Code",?16,"CPT Short Name"
"RTN","PXRMPTTX",52,0)
 W !,?6,"----",?16,"--------------"
"RTN","PXRMPTTX",53,0)
 S IND=LOW
"RTN","PXRMPTTX",54,0)
 S END=HIGH
"RTN","PXRMPTTX",55,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMPTTX",56,0)
 . S CODE=$TR(IND," ","")
"RTN","PXRMPTTX",57,0)
 . S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMPTTX",58,0)
 . I +IEN>0 D
"RTN","PXRMPTTX",59,0)
 .. S TEMP=$$CPT^ICPTCOD(IEN)
"RTN","PXRMPTTX",60,0)
 .. S TEXT=$P(TEMP,U,3)
"RTN","PXRMPTTX",61,0)
 . E  S TEXT="Unknown"
"RTN","PXRMPTTX",62,0)
 . S IND=$O(^ICPT("B",IND))
"RTN","PXRMPTTX",63,0)
 . W !,?6,CODE,?16,TEXT
"RTN","PXRMPTTX",64,0)
 Q
"RTN","PXRMPTTX",65,0)
 ;
"RTN","PXRMPTTX",66,0)
 ;======================================================================
"RTN","PXRMPTTX",67,0)
TAXLIST ;Taxonomy list.
"RTN","PXRMPTTX",68,0)
 N CODES,CPT,CPTLIST,ICD0,ICD0LIST,ICD9,ICD9LIST,IND,NCODES
"RTN","PXRMPTTX",69,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",70,0)
 F  S IND=+$O(^PXD(811.2,D0,80,IND)) Q:IND=0  D
"RTN","PXRMPTTX",71,0)
 . S IC=IC+1
"RTN","PXRMPTTX",72,0)
 . S CODES=^PXD(811.2,D0,80,IND,0)
"RTN","PXRMPTTX",73,0)
 . S ICD9LIST(IC)=CODES
"RTN","PXRMPTTX",74,0)
 S NCODES=IC
"RTN","PXRMPTTX",75,0)
 ;
"RTN","PXRMPTTX",76,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",77,0)
 F  S IND=+$O(^PXD(811.2,D0,80.1,IND)) Q:IND=0  D
"RTN","PXRMPTTX",78,0)
 . S IC=IC+1
"RTN","PXRMPTTX",79,0)
 . S CODES=^PXD(811.2,D0,80.1,IND,0)
"RTN","PXRMPTTX",80,0)
 . S ICD0LIST(IC)=CODES
"RTN","PXRMPTTX",81,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPTTX",82,0)
 ;
"RTN","PXRMPTTX",83,0)
 S (IC,IND)=0
"RTN","PXRMPTTX",84,0)
 F  S IND=+$O(^PXD(811.2,D0,81,IND)) Q:IND=0  D
"RTN","PXRMPTTX",85,0)
 . S IC=IC+1
"RTN","PXRMPTTX",86,0)
 . S CODES=^PXD(811.2,D0,81,IND,0)
"RTN","PXRMPTTX",87,0)
 . S CPTLIST(IC)=CODES
"RTN","PXRMPTTX",88,0)
 S NCODES=$$MAX^XLFMTH(NCODES,IC)
"RTN","PXRMPTTX",89,0)
 ;Print the list.
"RTN","PXRMPTTX",90,0)
 F IC=1:1:NCODES D
"RTN","PXRMPTTX",91,0)
 . S ICD9=$G(ICD9LIST(IC))
"RTN","PXRMPTTX",92,0)
 . S ICD0=$G(ICD0LIST(IC))
"RTN","PXRMPTTX",93,0)
 . S CPT=$G(CPTLIST(IC))
"RTN","PXRMPTTX",94,0)
 . W !,?9,$P(ICD9,U,1),?19,$P(ICD9,U,2)
"RTN","PXRMPTTX",95,0)
 . W ?29,$P(ICD0,U,1),?39,$P(ICD0,U,2)
"RTN","PXRMPTTX",96,0)
 . W ?49,$P(CPT,U,1),?59,$P(CPT,U,2)
"RTN","PXRMPTTX",97,0)
 Q
"RTN","PXRMPTTX",98,0)
 ;
"RTN","PXRMRAD")
0^75^B19698649
"RTN","PXRMRAD",1,0)
PXRMRAD ; SLC/PKR - Handle radiology findings. ;02/01/2001
"RTN","PXRMRAD",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRAD",3,0)
 ;
"RTN","PXRMRAD",4,0)
 ;=======================================================================
"RTN","PXRMRAD",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate radiology findings.
"RTN","PXRMRAD",6,0)
 N FIND0,FIND3,FINDING,RADPROC
"RTN","PXRMRAD",7,0)
 ;Build a list of radiology procedures.
"RTN","PXRMRAD",8,0)
 S RADPROC=""
"RTN","PXRMRAD",9,0)
 F  S RADPROC=$O(^PXD(811.9,PXRMITEM,20,"E","RAMIS(71,",RADPROC)) Q:+RADPROC=0  D
"RTN","PXRMRAD",10,0)
 . S FINDING=""
"RTN","PXRMRAD",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","RAMIS(71,",RADPROC,FINDING)) Q:+FINDING=0  D
"RTN","PXRMRAD",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,0)
"RTN","PXRMRAD",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMRAD",14,0)
 .. D FIEVAL(DFN,RADPROC,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMRAD",15,0)
 Q
"RTN","PXRMRAD",16,0)
 ;
"RTN","PXRMRAD",17,0)
 ;=======================================================================
"RTN","PXRMRAD",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate radiology terms.
"RTN","PXRMRAD",19,0)
 N FIND0,FIND3,RADPROC,TFIND0,TFIND3,TFINDING
"RTN","PXRMRAD",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMRAD",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMRAD",22,0)
 ;Build a list of radiology procedures.
"RTN","PXRMRAD",23,0)
 S RADPROC=""
"RTN","PXRMRAD",24,0)
 F  S RADPROC=$O(^PXRMD(811.5,TERMIEN,20,"E","RAMIS(71,",RADPROC)) Q:+RADPROC=0  D
"RTN","PXRMRAD",25,0)
 . S TFINDING=""
"RTN","PXRMRAD",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","RAMIS(71,",RADPROC,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMRAD",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMRAD",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMRAD",29,0)
 .. D FIEVAL(DFN,RADPROC,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMRAD",30,0)
 Q
"RTN","PXRMRAD",31,0)
 ;
"RTN","PXRMRAD",32,0)
 ;=======================================================================
"RTN","PXRMRAD",33,0)
FIEVAL(DFN,RADPROC,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMRAD",34,0)
 N CONVAL,DATE,RADPTIEN,STATUS,TEMP,VALID
"RTN","PXRMRAD",35,0)
 S FIEVAL(FINDING)=0
"RTN","PXRMRAD",36,0)
 ;Get the matches
"RTN","PXRMRAD",37,0)
 D CLIN^RAO7PC2(DFN,RADPROC)
"RTN","PXRMRAD",38,0)
 ;If this is an unknown radiology patient we are done.
"RTN","PXRMRAD",39,0)
 I $G(^TMP($J,"RADPROC"))["Invalid" G DONE
"RTN","PXRMRAD",40,0)
 ;
"RTN","PXRMRAD",41,0)
 S RADPTIEN=$O(^TMP($J,"RADPROC",""))
"RTN","PXRMRAD",42,0)
 ;STATUS can be "CANCELLED", "COMPLETE", "IN PROGRESS", or "NONE".
"RTN","PXRMRAD",43,0)
 ;Ignore any that are cancelled.
"RTN","PXRMRAD",44,0)
 S STATUS=""
"RTN","PXRMRAD",45,0)
 F  S STATUS=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)) Q:STATUS=""  D
"RTN","PXRMRAD",46,0)
 . I (STATUS="NONE") Q
"RTN","PXRMRAD",47,0)
 .;If there is a "COMPLETE" status make sure we save it only.
"RTN","PXRMRAD",48,0)
 . I 'FIEVAL(FINDING) S FIEVAL(FINDING,"STATUS")=STATUS
"RTN","PXRMRAD",49,0)
 . I (STATUS="CANCELLED") D
"RTN","PXRMRAD",50,0)
 .. S FIEVAL(FINDING,"DATA")=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",51,0)
 .. S FIEVAL(FINDING,"DATE")=$P(FIEVAL(FINDING,"DATA"),U,1)
"RTN","PXRMRAD",52,0)
 . I STATUS="COMPLETE" D
"RTN","PXRMRAD",53,0)
 .. S FIEVAL(FINDING)=1
"RTN","PXRMRAD",54,0)
 .. S FIEVAL(FINDING,"DATA")=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",55,0)
 .. S (FIEVAL(FINDING,"DATE"),DATE)=$P(FIEVAL(FINDING,"DATA"),U,1)
"RTN","PXRMRAD",56,0)
 .;Save information about an "IN PROGRESS" procedure if it is more
"RTN","PXRMRAD",57,0)
 .;recent than the completed one or there is not a completed one.
"RTN","PXRMRAD",58,0)
 . I STATUS="IN PROGRESS" D
"RTN","PXRMRAD",59,0)
 .. S TEMP=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRAD",60,0)
 .. S DATE=$P(TEMP,U,1)
"RTN","PXRMRAD",61,0)
 .. I DATE>+$G(FIEVAL(FINDING,"DATE")) D
"RTN","PXRMRAD",62,0)
 ... I 'FIEVAL(FINDING) S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMRAD",63,0)
 ... S FIEVAL(FINDING,"IN PROGRESS")=TEMP
"RTN","PXRMRAD",64,0)
 . S FIEVAL(FINDING,"FINDING")=RADPROC_";RAMIS(71,"
"RTN","PXRMRAD",65,0)
 ;Determine if the finding has expired.
"RTN","PXRMRAD",66,0)
 I FIEVAL(FINDING) D
"RTN","PXRMRAD",67,0)
 . S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,FIEVAL(FINDING,"DATE"))
"RTN","PXRMRAD",68,0)
 . I 'VALID D
"RTN","PXRMRAD",69,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMRAD",70,0)
 .. S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMRAD",71,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMRAD",72,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,"")
"RTN","PXRMRAD",73,0)
 I CONVAL'="" D
"RTN","PXRMRAD",74,0)
 . I CONVAL D
"RTN","PXRMRAD",75,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMRAD",76,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMRAD",77,0)
 . E  D
"RTN","PXRMRAD",78,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMRAD",79,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMRAD",80,0)
DONE K ^TMP($J,"RADPROC")
"RTN","PXRMRAD",81,0)
 Q
"RTN","PXRMRAD",82,0)
 ;
"RTN","PXRMRAD",83,0)
 ;=======================================================================
"RTN","PXRMRAD",84,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMRAD",85,0)
 ;maintenance output.
"RTN","PXRMRAD",86,0)
 N CPT,CPTDATA,CODE,D0,DATE,NAME,RADPROC,SNAME,TEMP
"RTN","PXRMRAD",87,0)
 S RADPROC=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMRAD",88,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMRAD",89,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMRAD",90,0)
 S TEMP=TEMP_" Radiology Procedure: "
"RTN","PXRMRAD",91,0)
 S D0=^RAMIS(71,RADPROC,0)
"RTN","PXRMRAD",92,0)
 S NAME=$P(D0,U,1)
"RTN","PXRMRAD",93,0)
 S CPT=$P(D0,U,9)
"RTN","PXRMRAD",94,0)
 S CPTDATA=$$CPT^ICPTCOD(CPT)
"RTN","PXRMRAD",95,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRAD",96,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRAD",97,0)
 S TEMP=TEMP_CODE_" ("_NAME_")"
"RTN","PXRMRAD",98,0)
 S TEMP=TEMP_" - "_SNAME
"RTN","PXRMRAD",99,0)
 S TEMP=TEMP_"; status:  "_FIEVAL(FINDING,"STATUS")
"RTN","PXRMRAD",100,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMRAD",101,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMRAD",102,0)
 S NLINES=NLINES+1
"RTN","PXRMRAD",103,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMRAD",104,0)
 I $D(PXRMDEV) D
"RTN","PXRMRAD",105,0)
 . N UID
"RTN","PXRMRAD",106,0)
 . S UID="RAD "_NAME
"RTN","PXRMRAD",107,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMRAD",108,0)
 ;
"RTN","PXRMRAD",109,0)
 ;If there is an "IN PROGRESS" as well as complete procedure and
"RTN","PXRMRAD",110,0)
 ;the "IN PROGRESS" is newer than the complete show some information
"RTN","PXRMRAD",111,0)
 ;on it.
"RTN","PXRMRAD",112,0)
 I (FIEVAL(FINDING))&($D(FIEVAL(FINDING,"IN PROGRESS"))) D
"RTN","PXRMRAD",113,0)
 . N IPDATE,STATUS
"RTN","PXRMRAD",114,0)
 . S IPDATE=$P(FIEVAL(FINDING,"IN PROGRESS"),U,1)
"RTN","PXRMRAD",115,0)
 . I IPDATE>DATE D
"RTN","PXRMRAD",116,0)
 .. S STATUS=$P(FIEVAL(FINDING,"IN PROGRESS"),U,2)
"RTN","PXRMRAD",117,0)
 .. S TEMP="This procedure is also in progress."
"RTN","PXRMRAD",118,0)
 .. S TEMP=TEMP_" "_$$EDATE^PXRMDATE(IPDATE)
"RTN","PXRMRAD",119,0)
 .. S TEMP=TEMP_" status:  "_STATUS
"RTN","PXRMRAD",120,0)
 .. S NLINES=NLINES+1
"RTN","PXRMRAD",121,0)
 .. S TEXT(NLINES)=TEMP
"RTN","PXRMRAD",122,0)
 Q
"RTN","PXRMRAD",123,0)
 ;
"RTN","PXRMRCPT")
0^21^B7037292
"RTN","PXRMRCPT",1,0)
PXRMRCPT ; SLC/PKR - Code to handle radiology CPT data. ;10/03/2000
"RTN","PXRMRCPT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRCPT",3,0)
 ;
"RTN","PXRMRCPT",4,0)
 ;=======================================================================
"RTN","PXRMRCPT",5,0)
EVAL(DFN,TAXIEN,FLIST) ;Find all the entries for this patient in the
"RTN","PXRMRCPT",6,0)
 ;radiology file based on CPT codes.
"RTN","PXRMRCPT",7,0)
 N CODE,DATE,RADPTIEN,RADPROC,RCPTP,STATUS,TEMP,TLIST
"RTN","PXRMRCPT",8,0)
 ;Make a list of radiology procedures from CPT taxonomy entries.
"RTN","PXRMRCPT",9,0)
 S RCPTP=$O(^PXD(811.3,TAXIEN,71,"RCPTP",""))
"RTN","PXRMRCPT",10,0)
 I RCPTP="" Q
"RTN","PXRMRCPT",11,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMRCPT",12,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMRCPT",13,0)
 K ^TMP($J,"RADPROC")
"RTN","PXRMRCPT",14,0)
 S RADPROC=RCPTP
"RTN","PXRMRCPT",15,0)
 F  S RCPTP=$O(^PXD(811.3,TAXIEN,71,"RCPTP",RCPTP)) Q:+RCPTP=0  D
"RTN","PXRMRCPT",16,0)
 . S RADPROC=RADPROC_U_RCPTP
"RTN","PXRMRCPT",17,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMRCPT",18,0)
 D CLIN^RAO7PC2(DFN,RADPROC)
"RTN","PXRMRCPT",19,0)
 ;If this is an unknown radiology patient we are done.
"RTN","PXRMRCPT",20,0)
 I $G(^TMP($J,"RADPROC"))["Invalid" Q
"RTN","PXRMRCPT",21,0)
 ;
"RTN","PXRMRCPT",22,0)
 ;Process the list.
"RTN","PXRMRCPT",23,0)
 ;STATUS can be "CANCELLED", "COMPLETE", "IN PROGRESS", or "NONE".
"RTN","PXRMRCPT",24,0)
 S RADPTIEN=$O(^TMP($J,"RADPROC",""))
"RTN","PXRMRCPT",25,0)
 ;Ignore any that are cancelled.
"RTN","PXRMRCPT",26,0)
 S RADPROC=""
"RTN","PXRMRCPT",27,0)
 F  S RADPROC=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC)) Q:RADPROC=""  D
"RTN","PXRMRCPT",28,0)
 . S STATUS=""
"RTN","PXRMRCPT",29,0)
 . F  S STATUS=$O(^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)) Q:STATUS=""  D
"RTN","PXRMRCPT",30,0)
 .. I (STATUS="NONE")!(STATUS="CANCELLED") Q
"RTN","PXRMRCPT",31,0)
 .. S TEMP=^TMP($J,"RADPROC",RADPTIEN,RADPROC,STATUS)
"RTN","PXRMRCPT",32,0)
 .. S DATE=$P(TEMP,U,1)
"RTN","PXRMRCPT",33,0)
 .. S INVDATE=$$INVFFMDL^PXRMDATE(DATE,1)
"RTN","PXRMRCPT",34,0)
 .. S TLIST(STATUS,INVDATE,RADPROC)=TEMP
"RTN","PXRMRCPT",35,0)
 I '$D(TLIST("COMPLETE")) Q
"RTN","PXRMRCPT",36,0)
 S INVDATE=$O(TLIST("COMPLETE",""))
"RTN","PXRMRCPT",37,0)
 S RADPROC=$O(TLIST("COMPLETE",INVDATE,""))
"RTN","PXRMRCPT",38,0)
 S TEMP=TLIST("COMPLETE",INVDATE,RADPROC)
"RTN","PXRMRCPT",39,0)
 S CODE=$P(^RAMIS(71,RADPROC,0),U,9)
"RTN","PXRMRCPT",40,0)
 S FLIST(INVDATE,"RADPT")=RADPROC_U_U_$P(TEMP,U,1)_U_CODE_U_$P(TEMP,U,2,4)
"RTN","PXRMRCPT",41,0)
 K ^TMP($J,"RADPROC")
"RTN","PXRMRCPT",42,0)
 Q
"RTN","PXRMRCPT",43,0)
 ;
"RTN","PXRMRCPT",44,0)
 ;======================================================================
"RTN","PXRMRCPT",45,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMRCPT",46,0)
 ;maintenance output. The VCPT information is:  DATE, ICPT CODE,
"RTN","PXRMRCPT",47,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMRCPT",48,0)
 N CODE,CPT,CPTDATA,DATE,ICPTP,FIEN,RADPROC,TEMP
"RTN","PXRMRCPT",49,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMRCPT",50,0)
 S DATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMRCPT",51,0)
 S TEMP=$$EDATE^PXRMDATE(DATE)
"RTN","PXRMRCPT",52,0)
 S TEMP=TEMP_" Radiology Procedure: "
"RTN","PXRMRCPT",53,0)
 S ICPTP=FIEVAL(FINDING,"CODEP")
"RTN","PXRMRCPT",54,0)
 S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMRCPT",55,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMRCPT",56,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMRCPT",57,0)
 S RADPROC=$P(^RAMIS(71,FIEN,0),U,1)
"RTN","PXRMRCPT",58,0)
 S TEMP=TEMP_RADPROC
"RTN","PXRMRCPT",59,0)
 S TEMP=TEMP_"-CPT: "_CODE
"RTN","PXRMRCPT",60,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMRCPT",61,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMRCPT",62,0)
 S NLINES=NLINES+1
"RTN","PXRMRCPT",63,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMRCPT",64,0)
 I $D(PXRMDEV) D
"RTN","PXRMRCPT",65,0)
 . N UID
"RTN","PXRMRCPT",66,0)
 . S UID="RADPROC "_ICPTP
"RTN","PXRMRCPT",67,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=DATE
"RTN","PXRMRCPT",68,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PROCECURE")=RADPROC
"RTN","PXRMRCPT",69,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMRCPT",70,0)
 Q
"RTN","PXRMRCPT",71,0)
 ;
"RTN","PXRMREDF")
0^28^B8709118
"RTN","PXRMREDF",1,0)
PXRMREDF ; SLC/PJH - Edit PXRM reminder findings. ;02/23/2001
"RTN","PXRMREDF",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMREDF",3,0)
 ;
"RTN","PXRMREDF",4,0)
 ; Called by PXRMREDT
"RTN","PXRMREDF",5,0)
 ;
"RTN","PXRMREDF",6,0)
SET S:'$D(^PXD(811.9,DA,20,0)) ^PXD(811.9,DA,20,0)="^811.902V" Q
"RTN","PXRMREDF",7,0)
 ;
"RTN","PXRMREDF",8,0)
 ;Edit Findings (excludes Terms)
"RTN","PXRMREDF",9,0)
 ;------------------------------
"RTN","PXRMREDF",10,0)
FIND D SET ; Check if node defined
"RTN","PXRMREDF",11,0)
 F  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",12,0)
 .;Display list of existing findings
"RTN","PXRMREDF",13,0)
 .W !!,"Findings"
"RTN","PXRMREDF",14,0)
 .D DSPALL
"RTN","PXRMREDF",15,0)
 .;Edit findings
"RTN","PXRMREDF",16,0)
 .D FEDIT(DA) Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMREDF",17,0)
 .;Update list with term modifications
"RTN","PXRMREDF",18,0)
 .D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",19,0)
 K DUOUT,DTOUT
"RTN","PXRMREDF",20,0)
 Q
"RTN","PXRMREDF",21,0)
 ;
"RTN","PXRMREDF",22,0)
 ;Display ALL findings
"RTN","PXRMREDF",23,0)
 ;--------------------
"RTN","PXRMREDF",24,0)
DSPALL N SUB,FIRST S FIRST=1,SUB="",SUB1=""
"RTN","PXRMREDF",25,0)
 F  S SUB=$O(LIST(SUB)) Q:SUB=""  D
"RTN","PXRMREDF",26,0)
 .S SUB1=0
"RTN","PXRMREDF",27,0)
 .F  S SUB1=$O(LIST(SUB,SUB1)) Q:SUB1=""  D
"RTN","PXRMREDF",28,0)
 ..I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",29,0)
 ..W SUB
"RTN","PXRMREDF",30,0)
 ..W ?8,SUB1,!
"RTN","PXRMREDF",31,0)
 I FIRST W !!,"Reminder has no findings",!
"RTN","PXRMREDF",32,0)
 ;Update list
"RTN","PXRMREDF",33,0)
 D LIST^PXRMREDT(.LIST)
"RTN","PXRMREDF",34,0)
 Q
"RTN","PXRMREDF",35,0)
 ;
"RTN","PXRMREDF",36,0)
 ;Display findings for file type selected
"RTN","PXRMREDF",37,0)
 ;---------------------------------------
"RTN","PXRMREDF",38,0)
DSP(TYPE) ;
"RTN","PXRMREDF",39,0)
 N SUB,FIRST S FIRST=1,SUB=""
"RTN","PXRMREDF",40,0)
 F  S SUB=$O(LIST(TYPE,SUB)) Q:SUB=""  D
"RTN","PXRMREDF",41,0)
 .I FIRST S FIRST=0 W !!,"Choose from:",!
"RTN","PXRMREDF",42,0)
 .W SUB
"RTN","PXRMREDF",43,0)
 .W !
"RTN","PXRMREDF",44,0)
 I FIRST W !!,"Reminder has no "_$G(DEF2(TYPE))_" findings",!
"RTN","PXRMREDF",45,0)
 Q
"RTN","PXRMREDF",46,0)
 ;
"RTN","PXRMREDF",47,0)
 ;Edit individual FINDING entry
"RTN","PXRMREDF",48,0)
 ;-----------------------------
"RTN","PXRMREDF",49,0)
FEDIT(IEN) ;
"RTN","PXRMREDF",50,0)
 N DA,DIC,DIE,DUOUT,DR,GLOB,Y
"RTN","PXRMREDF",51,0)
 S DA(1)=IEN
"RTN","PXRMREDF",52,0)
 S DIC="^PXD(811.9,"_IEN_",20,"
"RTN","PXRMREDF",53,0)
 S DIC(0)="QEAL"
"RTN","PXRMREDF",54,0)
 S DIC("A")="Select FINDING: "
"RTN","PXRMREDF",55,0)
 S DIC("P")="811.902V"
"RTN","PXRMREDF",56,0)
 D ^DIC I Y=-1 S DTOUT=1 Q
"RTN","PXRMREDF",57,0)
 S DIE=DIC K DIC
"RTN","PXRMREDF",58,0)
 S DA=+Y,GLOB=$P($P(Y,U,2),";",2) Q:GLOB=""
"RTN","PXRMREDF",59,0)
 S TYPE=$G(DEF1(GLOB))
"RTN","PXRMREDF",60,0)
 ;Finding record fields
"RTN","PXRMREDF",61,0)
 S DR=".01;1;2;3;6;7;8;9;12"
"RTN","PXRMREDF",62,0)
 ;Taxonomy - use inactive problems
"RTN","PXRMREDF",63,0)
 I TYPE="TX" S DR=DR_";10"
"RTN","PXRMREDF",64,0)
 ;Health Factor - within category rank
"RTN","PXRMREDF",65,0)
 I TYPE="HF" S DR=DR_";11"
"RTN","PXRMREDF",66,0)
 ;Mental Health - scale
"RTN","PXRMREDF",67,0)
 I TYPE="MH" S DR=DR_";13"
"RTN","PXRMREDF",68,0)
 ;Condition
"RTN","PXRMREDF",69,0)
 S DR=DR_";14;15"
"RTN","PXRMREDF",70,0)
 ;Found/not found text
"RTN","PXRMREDF",71,0)
 S DR=DR_";4;5"
"RTN","PXRMREDF",72,0)
 ;
"RTN","PXRMREDF",73,0)
 ;Edit finding record
"RTN","PXRMREDF",74,0)
 D ^DIE
"RTN","PXRMREDF",75,0)
 Q
"RTN","PXRMREDF",76,0)
 ;
"RTN","PXRMREDF",77,0)
 ;General help text routine
"RTN","PXRMREDF",78,0)
 ;-------------------------
"RTN","PXRMREDF",79,0)
HELP(CALL) ;
"RTN","PXRMREDF",80,0)
 N HTEXT
"RTN","PXRMREDF",81,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMREDF",82,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMREDF",83,0)
 ;
"RTN","PXRMREDF",84,0)
 I CALL=1 D
"RTN","PXRMREDF",85,0)
 .S HTEXT(1)="Select the type of finding you wish to change or add."
"RTN","PXRMREDF",86,0)
 .S HTEXT(2)="Type '?' for a list of the available finding types."
"RTN","PXRMREDF",87,0)
 I CALL=2 D
"RTN","PXRMREDF",88,0)
 .S HTEXT(1)="Select section of the reminder you wish to edit or 'All'"
"RTN","PXRMREDF",89,0)
 .S HTEXT(2)="to step through all sections of the reminder definition."
"RTN","PXRMREDF",90,0)
 ;
"RTN","PXRMREDF",91,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",92,0)
 S IC=""
"RTN","PXRMREDF",93,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMREDF",94,0)
 . S X=HTEXT(IC)
"RTN","PXRMREDF",95,0)
 . D ^DIWP
"RTN","PXRMREDF",96,0)
 W !
"RTN","PXRMREDF",97,0)
 S IC=0
"RTN","PXRMREDF",98,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMREDF",99,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMREDF",100,0)
 K ^UTILITY($J,"W")
"RTN","PXRMREDF",101,0)
 W !
"RTN","PXRMREDF",102,0)
 Q
"RTN","PXRMRIN2")
1^47
"RTN","PXRMRIN3")
1^48
"RTN","PXRMRLST")
0^8^B16348497
"RTN","PXRMRLST",1,0)
PXRMRLST ; SLC/PKR - Clinical Reminder list option routine ;02/07/2001
"RTN","PXRMRLST",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRLST",3,0)
 ;
"RTN","PXRMRLST",4,0)
 ;===================================================================== 
"RTN","PXRMRLST",5,0)
 ;Build the criteria for which reminders to list.
"RTN","PXRMRLST",6,0)
LIST N ALL,CRITERIA,DIR,IND,LOCAL,LPREFIX,NCRIT,PREFIX,SORT,STATUS,X,Y
"RTN","PXRMRLST",7,0)
START S (ALL,LOCAL,NCRIT)=0
"RTN","PXRMRLST",8,0)
 S (PREFIX,STATUS)=""
"RTN","PXRMRLST",9,0)
 ;
"RTN","PXRMRLST",10,0)
ALLQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",11,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",12,0)
 S DIR("A")="List all reminders? "
"RTN","PXRMRLST",13,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",14,0)
 W !
"RTN","PXRMRLST",15,0)
 D ^DIR
"RTN","PXRMRLST",16,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",17,0)
 I $D(DUOUT) Q
"RTN","PXRMRLST",18,0)
 S ALL=Y
"RTN","PXRMRLST",19,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",20,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",21,0)
 I ALL G ACTIVEQ
"RTN","PXRMRLST",22,0)
 ;
"RTN","PXRMRLST",23,0)
LOCALQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",24,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",25,0)
 S DIR("A")="List all local reminders? "
"RTN","PXRMRLST",26,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",27,0)
 W !
"RTN","PXRMRLST",28,0)
 D ^DIR
"RTN","PXRMRLST",29,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",30,0)
 I $D(DUOUT) G ALLQ
"RTN","PXRMRLST",31,0)
 S LOCAL=Y
"RTN","PXRMRLST",32,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",33,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",34,0)
 I LOCAL G ACTIVEQ
"RTN","PXRMRLST",35,0)
 ;
"RTN","PXRMRLST",36,0)
PREFIXQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",37,0)
 S PREFIX=""
"RTN","PXRMRLST",38,0)
 S DIR(0)="FAO"_U_"1:30"
"RTN","PXRMRLST",39,0)
 S DIR("A")="List only reminders starting with (prefix)? "
"RTN","PXRMRLST",40,0)
 S DIR("B")="VA-"
"RTN","PXRMRLST",41,0)
 W !
"RTN","PXRMRLST",42,0)
 D ^DIR
"RTN","PXRMRLST",43,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",44,0)
 I $D(DUOUT) G LOCALQ
"RTN","PXRMRLST",45,0)
 S PREFIX=Y
"RTN","PXRMRLST",46,0)
 S LPREFIX=$L(Y)
"RTN","PXRMRLST",47,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",48,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_PREFIX
"RTN","PXRMRLST",49,0)
 ;
"RTN","PXRMRLST",50,0)
ACTIVEQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",51,0)
 S DIR(0)="SAO"_U_"A:Active;I:Inactive;B:Both"
"RTN","PXRMRLST",52,0)
 S DIR("A")="List Active (A), Inactive (I), Both (B)? "
"RTN","PXRMRLST",53,0)
 S DIR("B")="B"
"RTN","PXRMRLST",54,0)
 W !
"RTN","PXRMRLST",55,0)
 D ^DIR
"RTN","PXRMRLST",56,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",57,0)
 I $D(DUOUT) G START
"RTN","PXRMRLST",58,0)
 S STATUS=Y
"RTN","PXRMRLST",59,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",60,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",61,0)
 ;
"RTN","PXRMRLST",62,0)
SORTQ K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",63,0)
 S SORT="N"
"RTN","PXRMRLST",64,0)
 S DIR(0)="SAO"_U_"N:Name (.01);P:Print name"
"RTN","PXRMRLST",65,0)
 S DIR("A")="Sort list by Name (N), Print Name (P)? "
"RTN","PXRMRLST",66,0)
 S DIR("B")="N"
"RTN","PXRMRLST",67,0)
 W !
"RTN","PXRMRLST",68,0)
 D ^DIR
"RTN","PXRMRLST",69,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",70,0)
 I $D(DUOUT) G ACTIVEQ
"RTN","PXRMRLST",71,0)
 S SORT=Y_U_Y(0)
"RTN","PXRMRLST",72,0)
 S NCRIT=NCRIT+1
"RTN","PXRMRLST",73,0)
 S CRITERIA(NCRIT)=DIR("A")_" "_Y(0)
"RTN","PXRMRLST",74,0)
 ;
"RTN","PXRMRLST",75,0)
 ;Make sure the criteria are ok.
"RTN","PXRMRLST",76,0)
 W !!,"A reminder list will be created using the following criteria:"
"RTN","PXRMRLST",77,0)
 F IND=1:1:NCRIT D
"RTN","PXRMRLST",78,0)
 . W !,?2,CRITERIA(IND)
"RTN","PXRMRLST",79,0)
 ;
"RTN","PXRMRLST",80,0)
 K CRITERIA
"RTN","PXRMRLST",81,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","PXRMRLST",82,0)
 S DIR(0)="YAO"
"RTN","PXRMRLST",83,0)
 S DIR("A")="Is this correct? "
"RTN","PXRMRLST",84,0)
 S DIR("B")="Y"
"RTN","PXRMRLST",85,0)
 W !
"RTN","PXRMRLST",86,0)
 D ^DIR
"RTN","PXRMRLST",87,0)
 I $D(DTOUT)!($D(DIROUT)) Q
"RTN","PXRMRLST",88,0)
 I $D(DUOUT) G START
"RTN","PXRMRLST",89,0)
 I 'Y G START
"RTN","PXRMRLST",90,0)
 ;
"RTN","PXRMRLST",91,0)
 ;Build the list of reminders based on the input critera.
"RTN","PXRMRLST",92,0)
 N IEN,NAME,NODE0,SFUN
"RTN","PXRMRLST",93,0)
 ;Setup the screening function to use
"RTN","PXRMRLST",94,0)
 I ALL S SFUN="$$ALLS(NODE0,STATUS)"
"RTN","PXRMRLST",95,0)
 I LOCAL S SFUN="$$LOCALS(NODE0,STATUS)"
"RTN","PXRMRLST",96,0)
 I $L(PREFIX)>0 S SFUN="$$PREFIXS(NODE0,STATUS,PREFIX,LPREFIX)"
"RTN","PXRMRLST",97,0)
 K ^TMP($J,"DEFLIST")
"RTN","PXRMRLST",98,0)
 S IEN=0
"RTN","PXRMRLST",99,0)
 F  S IEN=$O(^PXD(811.9,IEN)) Q:+IEN=0  D
"RTN","PXRMRLST",100,0)
 . S NODE0=^PXD(811.9,IEN,0)
"RTN","PXRMRLST",101,0)
 . I @SFUN S ^TMP($J,"DEFLIST",IEN)=""
"RTN","PXRMRLST",102,0)
 ;Print the list
"RTN","PXRMRLST",103,0)
 N BY,DIC,FLDS,FR,L,PXRMFVPL,PXRMROOT,TO
"RTN","PXRMRLST",104,0)
 D BLDRLIST^PXRMVPTR(811.902,.01,.PXRMFVPL)
"RTN","PXRMRLST",105,0)
 S (DIC,PXRMROOT)="^PXD(811.9,"
"RTN","PXRMRLST",106,0)
 S FLDS="[PXRM DEFINITION LIST]"
"RTN","PXRMRLST",107,0)
 S L=0
"RTN","PXRMRLST",108,0)
 S L(0)=1
"RTN","PXRMRLST",109,0)
 I $P(SORT,U,1)="N" S BY=.01
"RTN","PXRMRLST",110,0)
 I $P(SORT,U,1)="P" S BY=1.2
"RTN","PXRMRLST",111,0)
 S BY(0)="^TMP($J,""DEFLIST"""
"RTN","PXRMRLST",112,0)
 S (FR,TO)=""
"RTN","PXRMRLST",113,0)
 D EN1^DIP
"RTN","PXRMRLST",114,0)
 K ^TMP($J,"DEFLIST")
"RTN","PXRMRLST",115,0)
 Q
"RTN","PXRMRLST",116,0)
 ;
"RTN","PXRMRLST",117,0)
 ;===================================================================== 
"RTN","PXRMRLST",118,0)
ALLS(NODE0,STATUS) ;Screen based on all reminders and status.
"RTN","PXRMRLST",119,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",120,0)
 N INFLAG
"RTN","PXRMRLST",121,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",122,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",123,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",124,0)
 Q 0
"RTN","PXRMRLST",125,0)
 ;
"RTN","PXRMRLST",126,0)
 ;===================================================================== 
"RTN","PXRMRLST",127,0)
LOCALS(NODE0,STATUS) ;Screen based on all local reminders and status.
"RTN","PXRMRLST",128,0)
 N NAME
"RTN","PXRMRLST",129,0)
 S NAME=$P(NODE0,U,1)
"RTN","PXRMRLST",130,0)
 I NAME["VA-" Q 0
"RTN","PXRMRLST",131,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",132,0)
 N INFLAG
"RTN","PXRMRLST",133,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",134,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",135,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",136,0)
 Q 0
"RTN","PXRMRLST",137,0)
 ;
"RTN","PXRMRLST",138,0)
 ;===================================================================== 
"RTN","PXRMRLST",139,0)
PREFIXS(NODE0,STATUS,PREFIX,LPREFIX) ;Screen based on .01 prefix and status.
"RTN","PXRMRLST",140,0)
 N NAME,PRE
"RTN","PXRMRLST",141,0)
 S NAME=$P(NODE0,U,1)
"RTN","PXRMRLST",142,0)
 S PRE=$E(NAME,1,LPREFIX)
"RTN","PXRMRLST",143,0)
 I PRE'=PREFIX Q 0
"RTN","PXRMRLST",144,0)
 I STATUS="B" Q 1
"RTN","PXRMRLST",145,0)
 N INFLAG
"RTN","PXRMRLST",146,0)
 S INFLAG=$P(NODE0,U,6)
"RTN","PXRMRLST",147,0)
 I (STATUS="A")&('INFLAG) Q 1
"RTN","PXRMRLST",148,0)
 I (STATUS="I")&(INFLAG) Q 1
"RTN","PXRMRLST",149,0)
 Q 0
"RTN","PXRMRLST",150,0)
 ;
"RTN","PXRMRPCA")
0^62^B57862657
"RTN","PXRMRPCA",1,0)
PXRMRPCA ; SLC/PJH - Functions returning REMINDER data ;11/06/2000
"RTN","PXRMRPCA",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRPCA",3,0)
 Q
"RTN","PXRMRPCA",4,0)
 ;
"RTN","PXRMRPCA",5,0)
ALL(ORY) ;All active reminders
"RTN","PXRMRPCA",6,0)
 ;print name^ien
"RTN","PXRMRPCA",7,0)
 N ARR,DATA,NAME,ORREM,OCNT,SUB
"RTN","PXRMRPCA",8,0)
 S ORREM=0
"RTN","PXRMRPCA",9,0)
 F  S ORREM=$O(^PXD(811.9,ORREM)) Q:'ORREM  D
"RTN","PXRMRPCA",10,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""
"RTN","PXRMRPCA",11,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",12,0)
 .I $P(DATA,U,6) Q
"RTN","PXRMRPCA",13,0)
 .;Skip reminders with no name
"RTN","PXRMRPCA",14,0)
 .S NAME=$P(DATA,U,3) I NAME="" Q
"RTN","PXRMRPCA",15,0)
 .;Sort by name
"RTN","PXRMRPCA",16,0)
 .S ARR(NAME_U_ORREM)=""
"RTN","PXRMRPCA",17,0)
 ; Build output arrray
"RTN","PXRMRPCA",18,0)
 S SUB="",OCNT=0
"RTN","PXRMRPCA",19,0)
 F  S SUB=$O(ARR(SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",20,0)
 .S OCNT=OCNT+1
"RTN","PXRMRPCA",21,0)
 .S ORY(OCNT)=SUB
"RTN","PXRMRPCA",22,0)
 Q
"RTN","PXRMRPCA",23,0)
 ;
"RTN","PXRMRPCA",24,0)
APPL(ORY,ORPT,ORLOC) ;Applicable reminders for cover sheet
"RTN","PXRMRPCA",25,0)
 ;format file 811.9 ien^reminder print name^date due^last occur^prty^due.
"RTN","PXRMRPCA",26,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",27,0)
 N ORDUE,ORPRI,ORSTA,PASS
"RTN","PXRMRPCA",28,0)
 S ORJ=0
"RTN","PXRMRPCA",29,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",30,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",31,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",32,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",33,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",34,0)
 D AVAL(.TMPLST,2) ;Evaluate reminders
"RTN","PXRMRPCA",35,0)
 Q
"RTN","PXRMRPCA",36,0)
 ;
"RTN","PXRMRPCA",37,0)
ALIST(ORY,ORPT,LIST) ;Evaluate specific reminders
"RTN","PXRMRPCA",38,0)
 N ORSRV,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT,ORLOC
"RTN","PXRMRPCA",39,0)
 N ORDUE,ORPRI,ORSTA
"RTN","PXRMRPCA",40,0)
 S ORJ=0
"RTN","PXRMRPCA",41,0)
 D AVAL(.LIST,1)
"RTN","PXRMRPCA",42,0)
 Q
"RTN","PXRMRPCA",43,0)
 ;
"RTN","PXRMRPCA",44,0)
AVAL(ARRAY,POS) ;Evaluate array of reminders
"RTN","PXRMRPCA",45,0)
 S ORI=0 F  S ORI=$O(ARRAY(ORI)) Q:'ORI  D
"RTN","PXRMRPCA",46,0)
 .S ORIEN=$P(ARRAY(ORI),U,POS)
"RTN","PXRMRPCA",47,0)
 .K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",48,0)
 .;Evaluate reminder
"RTN","PXRMRPCA",49,0)
 .D MAIN^PXRM(ORPT,ORIEN,1,1)
"RTN","PXRMRPCA",50,0)
 .;Not applicable is default
"RTN","PXRMRPCA",51,0)
 .S ORDUE=2 D  Q:ORTXT=""
"RTN","PXRMRPCA",52,0)
 ..S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",53,0)
 ..;Exclude dead patients from applicable
"RTN","PXRMRPCA",54,0)
 ..I $G(^XTMP("PXRMDFN"_ORPT,"DOD"))'="" Q
"RTN","PXRMRPCA",55,0)
 ..;Determine status
"RTN","PXRMRPCA",56,0)
 ..S ORX=^TMP("PXRHM",$J,ORIEN,ORTXT) Q:ORX=""
"RTN","PXRMRPCA",57,0)
 ..S ORSTA=$P(ORX,U)
"RTN","PXRMRPCA",58,0)
 ..;Ignore reminders that are not applicable
"RTN","PXRMRPCA",59,0)
 ..I (ORSTA=" ")!(ORSTA["NEVER")!(ORSTA="N/A")!(ORSTA="ERROR") Q
"RTN","PXRMRPCA",60,0)
 ..;Differentiate due and applicable
"RTN","PXRMRPCA",61,0)
 ..S ORDUE=0 I ORSTA["DUE" S ORDUE=1
"RTN","PXRMRPCA",62,0)
 ..;Get next due and last done dates 
"RTN","PXRMRPCA",63,0)
 ..S ORDUEDT=$P(ORX,U,2),ORLASTDT=$P(ORX,U,3)
"RTN","PXRMRPCA",64,0)
 ..S ORLASTDT=$S(+$G(ORLASTDT)>0:ORLASTDT,1:"")  ;null if not a date
"RTN","PXRMRPCA",65,0)
 ..;Reminder priority
"RTN","PXRMRPCA",66,0)
 ..S ORPRI=$P($G(^PXD(811.9,ORIEN,0)),U,10)
"RTN","PXRMRPCA",67,0)
 ..;Default is 2 for medium
"RTN","PXRMRPCA",68,0)
 ..I ORPRI="" S ORPRI=2
"RTN","PXRMRPCA",69,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",70,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_ORDUEDT_U_ORLASTDT_U_ORPRI_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",71,0)
 .;Save not applicables also (IF a valid reminder)
"RTN","PXRMRPCA",72,0)
 .I ORDUE=2 D
"RTN","PXRMRPCA",73,0)
 ..S ORJ=ORJ+1
"RTN","PXRMRPCA",74,0)
 ..S ORY(ORJ)=ORIEN_U_ORTXT_U_U_U_U_ORDUE_U_$$DLG(ORIEN)
"RTN","PXRMRPCA",75,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",76,0)
 Q
"RTN","PXRMRPCA",77,0)
 ;
"RTN","PXRMRPCA",78,0)
CATEGORY(ORY,ORPT,ORLOC) ;Reminder Categories
"RTN","PXRMRPCA",79,0)
 ;type^name^ien^parent^child^etc
"RTN","PXRMRPCA",80,0)
 N ERR,IC,ORSRV,PASS,TEMPLST
"RTN","PXRMRPCA",81,0)
 ;Get user's service 
"RTN","PXRMRPCA",82,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",83,0)
 ;Build list of locations and services required
"RTN","PXRMRPCA",84,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",85,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",86,0)
 ;
"RTN","PXRMRPCA",87,0)
 ;Get list of categories from GUI parameters file
"RTN","PXRMRPCA",88,0)
 D GETLST^XPAR(.TMPLST,PASS,"PXRM CPRS LOOKUP CATEGORIES","Q",.ERR)
"RTN","PXRMRPCA",89,0)
 ;If error return error type
"RTN","PXRMRPCA",90,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",91,0)
 ;
"RTN","PXRMRPCA",92,0)
 ;For each category build tree of reminders/subcategories
"RTN","PXRMRPCA",93,0)
 N CNT,LEVEL,ORCAT,UNIQ
"RTN","PXRMRPCA",94,0)
 S CNT="",IC=0,LEVEL=0,UNIQ=0
"RTN","PXRMRPCA",95,0)
 ;For each category in 'PXRM CPRS LOOKUP CATEGORIES'
"RTN","PXRMRPCA",96,0)
 F  S CNT=$O(TMPLST(CNT)) Q:'CNT  D
"RTN","PXRMRPCA",97,0)
 .;Get category ien
"RTN","PXRMRPCA",98,0)
 .S ORCAT=$P(TMPLST(CNT),U,2)
"RTN","PXRMRPCA",99,0)
 .;Update unique number
"RTN","PXRMRPCA",100,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",101,0)
 .;Add category and associated reminders/subcategories to output array
"RTN","PXRMRPCA",102,0)
 .D GETLST(0,ORCAT,0,UNIQ)
"RTN","PXRMRPCA",103,0)
 Q
"RTN","PXRMRPCA",104,0)
 ;
"RTN","PXRMRPCA",105,0)
DLG(REM) ;Dialog check
"RTN","PXRMRPCA",106,0)
 N DATA,DIEN,DOK
"RTN","PXRMRPCA",107,0)
 S DIEN=$P($G(^PXD(811.9,REM,51)),U) Q:'DIEN 0
"RTN","PXRMRPCA",108,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCA",109,0)
 I $P(DATA,U,4)="R",$P(DATA,U,3)="" Q 1
"RTN","PXRMRPCA",110,0)
 Q 0
"RTN","PXRMRPCA",111,0)
 ;
"RTN","PXRMRPCA",112,0)
GETLST(D0,D1,LEVEL,PARENT) ;Add to output array
"RTN","PXRMRPCA",113,0)
 N DATA,NAME,ORREM,ORSCAT,PCAT,SEQ,SUB,TEMP
"RTN","PXRMRPCA",114,0)
 ;Get category ien if this is a sub-category
"RTN","PXRMRPCA",115,0)
 S PCAT=0 I LEVEL>0 D  Q:ORSCAT=""  S UNIQ=UNIQ+1,PARENT=UNIQ
"RTN","PXRMRPCA",116,0)
 .S ORSCAT=$P($G(^PXRMD(811.7,D0,10,D1,0)),U),PCAT=PARENT
"RTN","PXRMRPCA",117,0)
 ;Otherwise use passed ien
"RTN","PXRMRPCA",118,0)
 I LEVEL=0 S ORSCAT=D1
"RTN","PXRMRPCA",119,0)
 ;Get category name
"RTN","PXRMRPCA",120,0)
 S NAME=$G(^PXRMD(811.7,ORSCAT,0)) I NAME="" Q
"RTN","PXRMRPCA",121,0)
 ;
"RTN","PXRMRPCA",122,0)
 ;Create category entry in output array
"RTN","PXRMRPCA",123,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",124,0)
 ;
"RTN","PXRMRPCA",125,0)
 S IC=IC+1,ORY(IC)=PARENT_U_"C"_U_NAME_U_PCAT_U
"RTN","PXRMRPCA",126,0)
 ;Increment tab
"RTN","PXRMRPCA",127,0)
 S LEVEL=LEVEL+1
"RTN","PXRMRPCA",128,0)
 ;
"RTN","PXRMRPCA",129,0)
 ;Sort Reminders from this category into display sequence
"RTN","PXRMRPCA",130,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",131,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,2,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",132,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,2,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",133,0)
 .S ORREM=$P(DATA,U) Q:ORREM=""
"RTN","PXRMRPCA",134,0)
 .S SEQ=$P(DATA,U,2)_0
"RTN","PXRMRPCA",135,0)
 .;Skip inactive reminders
"RTN","PXRMRPCA",136,0)
 .S DATA=$G(^PXD(811.9,ORREM,0)) Q:DATA=""  Q:$P(DATA,U,6)
"RTN","PXRMRPCA",137,0)
 .S NAME=$P(DATA,U) I NAME="" S NAME="Unknown"
"RTN","PXRMRPCA",138,0)
 .;or printname
"RTN","PXRMRPCA",139,0)
 .S NAME=$P(DATA,U,3)
"RTN","PXRMRPCA",140,0)
 .S TEMP(SEQ)=NAME_U_ORREM
"RTN","PXRMRPCA",141,0)
 ;
"RTN","PXRMRPCA",142,0)
 ;Re-save reminders in output array for display
"RTN","PXRMRPCA",143,0)
 ;unique number^type^name^parent^reminder ien
"RTN","PXRMRPCA",144,0)
 ;
"RTN","PXRMRPCA",145,0)
 S SEQ=""
"RTN","PXRMRPCA",146,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",147,0)
 .S NAME=$P(TEMP(SEQ),U),ORREM=$P(TEMP(SEQ),U,2)
"RTN","PXRMRPCA",148,0)
 .S UNIQ=UNIQ+1
"RTN","PXRMRPCA",149,0)
 .S IC=IC+1,ORY(IC)=UNIQ_U_"R"_U_NAME_U_PARENT_U_ORREM_U_$$DLG(ORREM)
"RTN","PXRMRPCA",150,0)
 ;
"RTN","PXRMRPCA",151,0)
 ;Sort Sub-Categories for this category into display order
"RTN","PXRMRPCA",152,0)
 S SUB=0 K TEMP
"RTN","PXRMRPCA",153,0)
 F  S SUB=$O(^PXRMD(811.7,ORSCAT,10,SUB)) Q:SUB=""  D
"RTN","PXRMRPCA",154,0)
 .S DATA=$G(^PXRMD(811.7,ORSCAT,10,SUB,0)) Q:DATA=""
"RTN","PXRMRPCA",155,0)
 .S SEQ=$P(DATA,U,2),TEMP(SEQ)=SUB
"RTN","PXRMRPCA",156,0)
 ;
"RTN","PXRMRPCA",157,0)
 ;Process sub-sub categories in the same manner
"RTN","PXRMRPCA",158,0)
 S SEQ=""
"RTN","PXRMRPCA",159,0)
 F  S SEQ=$O(TEMP(SEQ)) Q:SEQ=""  D
"RTN","PXRMRPCA",160,0)
 .S SUB=TEMP(SEQ)
"RTN","PXRMRPCA",161,0)
 .D GETLST(ORSCAT,SUB,LEVEL,PARENT)
"RTN","PXRMRPCA",162,0)
 Q
"RTN","PXRMRPCA",163,0)
 ;
"RTN","PXRMRPCA",164,0)
LIST(ORY,ORPT,ORLOC) ;Reminders for this patient location (not evaluated)
"RTN","PXRMRPCA",165,0)
 ;format file 811.9 ien
"RTN","PXRMRPCA",166,0)
 N ORSRV,TMPLST,ERR,ORI,ORJ,ORIEN,ORTXT,ORX,ORLASTDT,ORDUEDT
"RTN","PXRMRPCA",167,0)
 N CNT,ORIEN,ORDUE,ORPRI,ORSTA,PASS,SUB
"RTN","PXRMRPCA",168,0)
 S ORJ=0
"RTN","PXRMRPCA",169,0)
 ;
"RTN","PXRMRPCA",170,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCA",171,0)
 I ORLOC S PASS="USR^LOC.`"_$G(ORLOC)_"^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",172,0)
 I 'ORLOC S PASS="USR^SRV.`"_+$G(ORSRV)_"^DIV^SYS^PKG"
"RTN","PXRMRPCA",173,0)
 D GETLST^XPAR(.TMPLST,PASS,"ORQQPX SEARCH ITEMS","Q",.ERR) ; DBIA 3076
"RTN","PXRMRPCA",174,0)
 I ERR>0 S ORY(1)=U_"Error: "_$P(ERR,U,2) Q
"RTN","PXRMRPCA",175,0)
 ;
"RTN","PXRMRPCA",176,0)
 S CNT=0,SUB=""
"RTN","PXRMRPCA",177,0)
 F  S SUB=$O(TMPLST(SUB)) Q:'SUB  D
"RTN","PXRMRPCA",178,0)
 .S ORIEN=$P(TMPLST(SUB),U,2) Q:'ORIEN  Q:'$D(^PXD(811.9,ORIEN,0))
"RTN","PXRMRPCA",179,0)
 .S CNT=CNT+1,ORY(CNT)=ORIEN
"RTN","PXRMRPCA",180,0)
 Q
"RTN","PXRMRPCA",181,0)
 ;
"RTN","PXRMRPCA",182,0)
REMDET(ORY,ORPT,ORIEN) ;return detail for a pt's clinical reminder
"RTN","PXRMRPCA",183,0)
 ; ORY - return array
"RTN","PXRMRPCA",184,0)
 ; ORPT - patient DFN
"RTN","PXRMRPCA",185,0)
 ; ORIEN - clinical reminder (811.9 ien)
"RTN","PXRMRPCA",186,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",187,0)
 D MAIN^PXRM(ORPT,ORIEN,5,1)     ; 5 returns all reminder info
"RTN","PXRMRPCA",188,0)
 N CR,I,J,ORTXT,SCT,STA,STA1,STA2,STA3 S I=1,J=0
"RTN","PXRMRPCA",189,0)
 S ORTXT="",ORTXT=$O(^TMP("PXRHM",$J,ORIEN,ORTXT)) Q:ORTXT=""
"RTN","PXRMRPCA",190,0)
 S STA=$G(^TMP("PXRHM",$J,ORIEN,ORTXT)) I STA'="" D
"RTN","PXRMRPCA",191,0)
 .S STA(1)=$P(STA,U),STA(2)=$P(STA,U,2),STA(3)=$P(STA,U,3)
"RTN","PXRMRPCA",192,0)
 .F SCT=1,2,3 I STA(SCT) S STA(SCT)=$$FMTE^XLFDT(STA(SCT),"5D")
"RTN","PXRMRPCA",193,0)
 .S ORY(I)="  --STATUS--  --DUE DATE--  --LAST DONE--",I=I+1
"RTN","PXRMRPCA",194,0)
 .S ORY(I)=$J(STA(1),10)_$J(STA(2),13)_$J(STA(3),14),I=I+1
"RTN","PXRMRPCA",195,0)
 F  S J=$O(^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J)) Q:J=""  D
"RTN","PXRMRPCA",196,0)
 .S ORY(I)=^TMP("PXRHM",$J,ORIEN,ORTXT,"TXT",J),I=I+1
"RTN","PXRMRPCA",197,0)
 K ^TMP("PXRHM",$J)
"RTN","PXRMRPCA",198,0)
 Q
"RTN","PXRMRPCA",199,0)
 ;
"RTN","PXRMRPCA",200,0)
WEB(ORY,ORRM) ;web page call
"RTN","PXRMRPCA",201,0)
 ;web site description^address
"RTN","PXRMRPCA",202,0)
 N ADDR,CNT,DATA,DESC,LINE,SUB,TITLE,TXT,UNIQ
"RTN","PXRMRPCA",203,0)
 S DESC="",CNT=0,UNIQ=0
"RTN","PXRMRPCA",204,0)
 ;Get the reminder specific web sites in alpha order
"RTN","PXRMRPCA",205,0)
 I ORRM]"" D
"RTN","PXRMRPCA",206,0)
 .F  S DESC=$O(^PXD(811.9,ORRM,50,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",207,0)
 ..S SUB=0
"RTN","PXRMRPCA",208,0)
 ..F  S SUB=$O(^PXD(811.9,ORRM,50,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",209,0)
 ...S ADDR=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",210,0)
 ...S TITLE=$P($G(^PXD(811.9,ORRM,50,SUB,0)),U,2)
"RTN","PXRMRPCA",211,0)
 ...S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",212,0)
 ...F  S LINE=$O(^PXD(811.9,ORRM,50,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",213,0)
 ....S TXT=$G(^PXD(811.9,ORRM,50,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",214,0)
 ....S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",215,0)
 ;Get the general web sites in alpha order
"RTN","PXRMRPCA",216,0)
 F  S DESC=$O(^PXRM(800,1,1,"B",DESC)) Q:DESC=""  D
"RTN","PXRMRPCA",217,0)
 .S SUB=0
"RTN","PXRMRPCA",218,0)
 .F  S SUB=$O(^PXRM(800,1,1,"B",DESC,SUB)) Q:'SUB  D
"RTN","PXRMRPCA",219,0)
 ..S ADDR=$P($G(^PXRM(800,1,1,SUB,0)),U) Q:ADDR=""
"RTN","PXRMRPCA",220,0)
 ..S TITLE=$P($G(^PXRM(800,1,1,SUB,0)),U,2)
"RTN","PXRMRPCA",221,0)
 ..S UNIQ=UNIQ+1,CNT=CNT+1,ORY(CNT)=1_U_UNIQ_U_ADDR_U_TITLE,LINE=0
"RTN","PXRMRPCA",222,0)
 ..F  S LINE=$O(^PXRM(800,1,1,SUB,1,LINE)) Q:'LINE  D
"RTN","PXRMRPCA",223,0)
 ...S TXT=$G(^PXRM(800,1,1,SUB,1,LINE,0)) Q:TXT=""
"RTN","PXRMRPCA",224,0)
 ...S CNT=CNT+1,ORY(CNT)=2_U_UNIQ_U_TXT
"RTN","PXRMRPCA",225,0)
 Q
"RTN","PXRMRPCC")
0^45^B7690435
"RTN","PXRMRPCC",1,0)
PXRMRPCC ;SLC/PJH - PXRM REMINDER DIALOG ;07/20/2000
"RTN","PXRMRPCC",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRPCC",3,0)
 ;
"RTN","PXRMRPCC",4,0)
ACTIVE(ORY,ORREM) ;Check if active dialog exist for reminders
"RTN","PXRMRPCC",5,0)
 ;
"RTN","PXRMRPCC",6,0)
 ; input parameter ORREM is array of reminder ien [.01#811.9]
"RTN","PXRMRPCC",7,0)
 N DDIS,DIEN,OCNT,RIEN,RSTA
"RTN","PXRMRPCC",8,0)
 S OCNT=0,RIEN=0
"RTN","PXRMRPCC",9,0)
 ;Get reminder ien from array
"RTN","PXRMRPCC",10,0)
 F  S RIEN=$O(ORREM(RIEN)) Q:'RIEN  D
"RTN","PXRMRPCC",11,0)
 .;Dialog ien for reminder
"RTN","PXRMRPCC",12,0)
 .S DIEN=$P($G(^PXD(811.9,RIEN,51)),U),RSTA=0
"RTN","PXRMRPCC",13,0)
 .;Dialog status
"RTN","PXRMRPCC",14,0)
 .I DIEN S DDIS=$P($G(^PXRMD(801.41,DIEN,0)),U,3)
"RTN","PXRMRPCC",15,0)
 .;If dialog and dialog not disabled
"RTN","PXRMRPCC",16,0)
 .I DIEN,DDIS="" S RSTA=1
"RTN","PXRMRPCC",17,0)
 .;Return reminder and if active dialog exists
"RTN","PXRMRPCC",18,0)
 .S OCNT=OCNT+1,ORY(OCNT)=RIEN_U_RSTA
"RTN","PXRMRPCC",19,0)
 Q
"RTN","PXRMRPCC",20,0)
 ;
"RTN","PXRMRPCC",21,0)
 ;
"RTN","PXRMRPCC",22,0)
DIALOG(ORY,ORREM) ;Load reminder dialog associated with the reminder
"RTN","PXRMRPCC",23,0)
 ;
"RTN","PXRMRPCC",24,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",25,0)
 ;
"RTN","PXRMRPCC",26,0)
 N DATA,DIEN
"RTN","PXRMRPCC",27,0)
 S DIEN=$G(^PXD(811.9,ORREM,51))
"RTN","PXRMRPCC",28,0)
 ;
"RTN","PXRMRPCC",29,0)
 ;Quit if no dialog for this reminder
"RTN","PXRMRPCC",30,0)
 I 'DIEN S ORY(1)="-1^no dialog for this reminder" Q
"RTN","PXRMRPCC",31,0)
 ;
"RTN","PXRMRPCC",32,0)
 ;Check if a reminder dialog and enabled
"RTN","PXRMRPCC",33,0)
 S DATA=$G(^PXRMD(801.41,DIEN,0))
"RTN","PXRMRPCC",34,0)
 ;
"RTN","PXRMRPCC",35,0)
 I $P(DATA,U,4)'="R" S ORY(1)="-1^reminder dialog invalid" Q
"RTN","PXRMRPCC",36,0)
 ;
"RTN","PXRMRPCC",37,0)
 I $P(DATA,U,3) S ORY(1)="-1^reminder dialog disabled" Q
"RTN","PXRMRPCC",38,0)
 ;
"RTN","PXRMRPCC",39,0)
 ;Load dialog lines into local array
"RTN","PXRMRPCC",40,0)
 D LOAD^PXRMDLL(DIEN)
"RTN","PXRMRPCC",41,0)
 Q
"RTN","PXRMRPCC",42,0)
 ;
"RTN","PXRMRPCC",43,0)
HDR(ORY,ORLOC) ;Progress Note Header by location/service/user
"RTN","PXRMRPCC",44,0)
 N ORSRV,PASS
"RTN","PXRMRPCC",45,0)
 S ORSRV=$G(^VA(200,DUZ,5)) I +ORSRV>0 S ORSRV=$P(ORSRV,U)
"RTN","PXRMRPCC",46,0)
 S PASS=DUZ_";VA(200,"
"RTN","PXRMRPCC",47,0)
 I +$G(ORLOC) S PASS=PASS_"^LOC.`"_ORLOC
"RTN","PXRMRPCC",48,0)
 I ORSRV S PASS=PASS_"^SRV.`"_+$G(ORSRV)
"RTN","PXRMRPCC",49,0)
 S ORY=$$GET^XPAR(PASS_"^DIV^SYS^PKG","PXRM PROGRESS NOTE HEADERS",1,"Q")
"RTN","PXRMRPCC",50,0)
 Q
"RTN","PXRMRPCC",51,0)
 ;
"RTN","PXRMRPCC",52,0)
PROMPT(ORY,ORDLG,ORDCUR,ORFTYP) ;Load additional prompts for a dialog element
"RTN","PXRMRPCC",53,0)
 ;
"RTN","PXRMRPCC",54,0)
 ; input parameters
"RTN","PXRMRPCC",55,0)
 ;
"RTN","PXRMRPCC",56,0)
 ; ORDLG  - dialog element ien [.01,#801.41]
"RTN","PXRMRPCC",57,0)
 ; ORDCUR - 0 = current, 1 = Historical for taxonomies only
"RTN","PXRMRPCC",58,0)
 ; ORFTYP - finding type (CPT/POV) for taxonomies only
"RTN","PXRMRPCC",59,0)
 ;
"RTN","PXRMRPCC",60,0)
 ; These fields can be found in the output array of DIALOG^PXRMRPCC
"RTN","PXRMRPCC",61,0)
 ;
"RTN","PXRMRPCC",62,0)
 D LOAD^PXRMDLLA(ORDLG,ORDCUR,$G(ORFTYP))
"RTN","PXRMRPCC",63,0)
 Q 
"RTN","PXRMRPCC",64,0)
 ;
"RTN","PXRMRPCC",65,0)
RES(ORY,ORREM) ; Reminder Resources/Inquiry
"RTN","PXRMRPCC",66,0)
 ;
"RTN","PXRMRPCC",67,0)
 ; input parameter ORREM - reminder ien [.01,#811.9]
"RTN","PXRMRPCC",68,0)
 ;
"RTN","PXRMRPCC",69,0)
 D REMVAR^PXRMINQ(.ORY,ORREM)
"RTN","PXRMRPCC",70,0)
 Q
"RTN","PXRMRPCC",71,0)
 ;
"RTN","PXRMRPCC",72,0)
MH(ORY,OTEST) ; Mental Health dialog
"RTN","PXRMRPCC",73,0)
 ;
"RTN","PXRMRPCC",74,0)
 ; Input mental health instrument NAME
"RTN","PXRMRPCC",75,0)
 ;
"RTN","PXRMRPCC",76,0)
 N YS,ARRAY S YS("CODE")=OTEST D SHOWALL^YTAPI3(.ARRAY,.YS) ; DBIA 2895
"RTN","PXRMRPCC",77,0)
 ;
"RTN","PXRMRPCC",78,0)
 N FNODE,FSUB,IC,NODE,OCNT,SUB
"RTN","PXRMRPCC",79,0)
 S SUB="ARRAY",OCNT=0
"RTN","PXRMRPCC",80,0)
 F  S SUB=$Q(@SUB) Q:SUB=""  D
"RTN","PXRMRPCC",81,0)
 .S FSUB=$P($P(SUB,"(",2),")"),FNODE=""
"RTN","PXRMRPCC",82,0)
 .F IC=1:1 S NODE=$P(FSUB,",",IC) Q:NODE=""  D
"RTN","PXRMRPCC",83,0)
 ..I $E(NODE)="""" S NODE=$P(NODE,"""",2)
"RTN","PXRMRPCC",84,0)
 ..S $P(FNODE,";",IC)=NODE
"RTN","PXRMRPCC",85,0)
 .Q:FNODE=""
"RTN","PXRMRPCC",86,0)
 .S OCNT=OCNT+1,ORY(OCNT)=FNODE_U_@SUB
"RTN","PXRMRPCC",87,0)
 Q
"RTN","PXRMRPCC",88,0)
 ;
"RTN","PXRMRPCC",89,0)
MHR(ORY,RESULT,ORES) ; Mental Health score and P/N text
"RTN","PXRMRPCC",90,0)
 ;
"RTN","PXRMRPCC",91,0)
 ; Input MH result IEN and mental health instrument response
"RTN","PXRMRPCC",92,0)
 ;
"RTN","PXRMRPCC",93,0)
 D ^PXRMDLR
"RTN","PXRMRPCC",94,0)
 ;
"RTN","PXRMRPCC",95,0)
 Q
"RTN","PXRMRPCC",96,0)
 ;
"RTN","PXRMRPCC",97,0)
MHS(ORY,YS) ; Mental Health save response
"RTN","PXRMRPCC",98,0)
 ;
"RTN","PXRMRPCC",99,0)
 ; Input mental health instrument response
"RTN","PXRMRPCC",100,0)
 N ARRAY
"RTN","PXRMRPCC",101,0)
 D SAVEIT^YTAPI1(.ARRAY,.YS) ; DBIA 2893
"RTN","PXRMRPCC",102,0)
 I ARRAY(1)'="[DATA]" S ORY(1)="-1^"_ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",103,0)
 I ARRAY(1)="[DATA]" S ORY(1)=ARRAY(1)_ARRAY(2)
"RTN","PXRMRPCC",104,0)
 Q
"RTN","PXRMRUTL")
0^76^B4608645
"RTN","PXRMRUTL",1,0)
PXRMRUTL ; SLC/PJH - Reminder utilities. ;02/06/2001
"RTN","PXRMRUTL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMRUTL",3,0)
 ;
"RTN","PXRMRUTL",4,0)
 ;
"RTN","PXRMRUTL",5,0)
 ;Store file details used by findings in array form
"RTN","PXRMRUTL",6,0)
 ;-------------------------------------------------
"RTN","PXRMRUTL",7,0)
DEF(DEF,DEF1,DEF2) ;
"RTN","PXRMRUTL",8,0)
 N DATA,DESC,FILE,GSUB,LIST,SEQ,TYPE
"RTN","PXRMRUTL",9,0)
 ;Get variable pointer details from data dictionary
"RTN","PXRMRUTL",10,0)
 D BLDRLIST^PXRMVPTR("811.902",".01",.LIST)
"RTN","PXRMRUTL",11,0)
 ;
"RTN","PXRMRUTL",12,0)
 S GSUB="",DEF=0
"RTN","PXRMRUTL",13,0)
 F  S GSUB=$O(LIST(GSUB)) Q:GSUB=""  D
"RTN","PXRMRUTL",14,0)
 .S DATA=$G(LIST(GSUB)) Q:DATA=""
"RTN","PXRMRUTL",15,0)
 .S FILE=$P(DATA,U),DESC=$P(DATA,U,2),SEQ=$P(DATA,U,3),TYPE=$P(DATA,U,4)
"RTN","PXRMRUTL",16,0)
 .Q:(FILE="")!(TYPE="")!(SEQ="")!(DESC="")
"RTN","PXRMRUTL",17,0)
 .;Save number of files (using sequence number)
"RTN","PXRMRUTL",18,0)
 .I SEQ>DEF S DEF=SEQ
"RTN","PXRMRUTL",19,0)
 .;Save file type and description in sequence (used in DIR prompt)
"RTN","PXRMRUTL",20,0)
 .S DEF(SEQ)=TYPE_":"_DESC
"RTN","PXRMRUTL",21,0)
 .;Build index to file type from global reference
"RTN","PXRMRUTL",22,0)
 .S DEF1(GSUB)=TYPE
"RTN","PXRMRUTL",23,0)
 .;Build Index to description from file type
"RTN","PXRMRUTL",24,0)
 .S DEF2(TYPE)=DESC
"RTN","PXRMRUTL",25,0)
 .;Build Index to file number from file type
"RTN","PXRMRUTL",26,0)
 .S DEF2(TYPE,1)=FILE
"RTN","PXRMRUTL",27,0)
 Q
"RTN","PXRMRUTL",28,0)
 ;
"RTN","PXRMRUTL",29,0)
DUMMY W !!,"This option is not yet available",!!,*7 H 1
"RTN","PXRMRUTL",30,0)
 Q
"RTN","PXRMRUTL",31,0)
 ;
"RTN","PXRMRUTL",32,0)
TEST(ARRAY,DIEN) ;Dialog test
"RTN","PXRMRUTL",33,0)
 D LOAD^PXRMDLL(DIEN) M ARRAY=ORY
"RTN","PXRMRUTL",34,0)
 ;
"RTN","PXRMRUTL",35,0)
 N DSEQ,DIEN,DCUR,DSUB,DTTYP,OCNT,SUB,ARRAYN
"RTN","PXRMRUTL",36,0)
 S OCNT=$O(ARRAY(""),-1)+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",37,0)
 S OCNT=OCNT+1,ARRAY(OCNT)="Additional prompts"
"RTN","PXRMRUTL",38,0)
 S OCNT=OCNT+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",39,0)
 S SUB=""
"RTN","PXRMRUTL",40,0)
 F  S SUB=$O(ORY(SUB)) Q:'SUB  D
"RTN","PXRMRUTL",41,0)
 .I $P(ORY(SUB),U)'=1 Q
"RTN","PXRMRUTL",42,0)
 .S DIEN=$P(ORY(SUB),U,2),DSEQ=$P(ORY(SUB),U,3)
"RTN","PXRMRUTL",43,0)
 .S DTTYP=$P(ORY(SUB),U,7),DCUR=$P(ORY(SUB),U,8)
"RTN","PXRMRUTL",44,0)
 .;Ignore group headers
"RTN","PXRMRUTL",45,0)
 .Q:DCUR="D"
"RTN","PXRMRUTL",46,0)
 .K ARRAYN D TEST^PXRMDLLA(.ARRAYN,DIEN,DCUR,DTTYP)
"RTN","PXRMRUTL",47,0)
 .S DSUB=""
"RTN","PXRMRUTL",48,0)
 .F  S DSUB=$O(ARRAYN(DSUB)) Q:'DSUB  D
"RTN","PXRMRUTL",49,0)
 ..S OCNT=OCNT+1,ARRAY(OCNT)=ARRAYN(DSUB)
"RTN","PXRMRUTL",50,0)
 .S OCNT=OCNT+1,ARRAY(OCNT)=$J("",79)
"RTN","PXRMRUTL",51,0)
 Q
"RTN","PXRMSEL")
0^69^B75458515
"RTN","PXRMSEL",1,0)
PXRMSEL ; SLC/PJH - PXRM Selection ;01/04/2001
"RTN","PXRMSEL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMSEL",3,0)
 ;
"RTN","PXRMSEL",4,0)
 ;Selection screen for all dialog files
"RTN","PXRMSEL",5,0)
 ;
"RTN","PXRMSEL",6,0)
START(HEADER,PXRMGTYP,PXRMNAM) ;
"RTN","PXRMSEL",7,0)
 N PXRMREAD,PXRMSHD,PXRMSRC,PXRMVARM
"RTN","PXRMSEL",8,0)
 N VALM,VALMAR,VALMBCK,VALMBG,VALMCNT,VALMHDR,VALMSG,X,XMZ
"RTN","PXRMSEL",9,0)
 S X="IORESET"
"RTN","PXRMSEL",10,0)
 D ENDR^%ZISS,EN^VALM("PXRM SELECTION")
"RTN","PXRMSEL",11,0)
 W IORESET
"RTN","PXRMSEL",12,0)
 D KILL^%ZISS
"RTN","PXRMSEL",13,0)
 Q
"RTN","PXRMSEL",14,0)
 ;
"RTN","PXRMSEL",15,0)
 ;Labels called from list 'PXRM SELECTION'
"RTN","PXRMSEL",16,0)
 ;
"RTN","PXRMSEL",17,0)
 ;Add new entry
"RTN","PXRMSEL",18,0)
ADD ;
"RTN","PXRMSEL",19,0)
 N ANS,ARRAY,ARRAYN,DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",20,0)
 ;Health factor resolutions
"RTN","PXRMSEL",21,0)
 I PXRMGTYP="SHFR" D  Q:$D(DTOUT)!$D(DUOUT)  Q:ANS="A"
"RTN","PXRMSEL",22,0)
 .D ^PXRMSEL2 S:$D(DUOUT) VALMBCK="R"
"RTN","PXRMSEL",23,0)
 ;Add entry
"RTN","PXRMSEL",24,0)
 D ADD^PXRMGEDT(PXRMGTYP),INIT
"RTN","PXRMSEL",25,0)
 Q
"RTN","PXRMSEL",26,0)
 ;
"RTN","PXRMSEL",27,0)
 ;Copy any dialog
"RTN","PXRMSEL",28,0)
COPY D ANY^PXRMDCPY
"RTN","PXRMSEL",29,0)
 D:PXRMGTYP="DLGE" INIT
"RTN","PXRMSEL",30,0)
 Q
"RTN","PXRMSEL",31,0)
 ;
"RTN","PXRMSEL",32,0)
 ;Copy selected reminder dialog
"RTN","PXRMSEL",33,0)
COPYS N DIC,DUOUT,DTOUT,DIROUT,DIRUT,X,Y
"RTN","PXRMSEL",34,0)
 D SEL^PXRMDCPY(PXRMDIEN,"")
"RTN","PXRMSEL",35,0)
 Q
"RTN","PXRMSEL",36,0)
 ;
"RTN","PXRMSEL",37,0)
 ;Change dialog view
"RTN","PXRMSEL",38,0)
CHNG K PXRMBG D SEL^PXRMSEL2(.PXRMDTYP),INIT
"RTN","PXRMSEL",39,0)
 Q
"RTN","PXRMSEL",40,0)
 ;
"RTN","PXRMSEL",41,0)
 ;Change reminder view
"RTN","PXRMSEL",42,0)
CHNGR(VIEW) ;
"RTN","PXRMSEL",43,0)
 S $E(PXRMVIEW)=VIEW K PXRMBG
"RTN","PXRMSEL",44,0)
 D INIT
"RTN","PXRMSEL",45,0)
 Q
"RTN","PXRMSEL",46,0)
 ;
"RTN","PXRMSEL",47,0)
 ;Toggle view name/print name 
"RTN","PXRMSEL",48,0)
CHNGV N VIEW
"RTN","PXRMSEL",49,0)
 S VIEW=$E(PXRMVIEW,2)
"RTN","PXRMSEL",50,0)
 I VIEW="P" S $E(PXRMVIEW,2)="N"
"RTN","PXRMSEL",51,0)
 I VIEW="N" S $E(PXRMVIEW,2)="P"
"RTN","PXRMSEL",52,0)
 D INIT
"RTN","PXRMSEL",53,0)
 Q
"RTN","PXRMSEL",54,0)
 ;
"RTN","PXRMSEL",55,0)
 ;Change between dialog view and reminder view
"RTN","PXRMSEL",56,0)
DIDL(VIEW) ;
"RTN","PXRMSEL",57,0)
 K PXRMBG S PXRMGTYP=VIEW
"RTN","PXRMSEL",58,0)
 D INIT
"RTN","PXRMSEL",59,0)
 Q
"RTN","PXRMSEL",60,0)
 ;
"RTN","PXRMSEL",61,0)
EXIT ;Exit code
"RTN","PXRMSEL",62,0)
 D CLEAN^VALM10,FULL^VALM1
"RTN","PXRMSEL",63,0)
 S VALMBCK="Q"
"RTN","PXRMSEL",64,0)
 K ^TMP("PXRMSEL",$J)
"RTN","PXRMSEL",65,0)
 Q
"RTN","PXRMSEL",66,0)
 ;
"RTN","PXRMSEL",67,0)
HDR ; Header code
"RTN","PXRMSEL",68,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",69,0)
 ;Non-Dialog options
"RTN","PXRMSEL",70,0)
 I PXRMGTYP'["DLG" S VALMHDR(1)=HEADER Q
"RTN","PXRMSEL",71,0)
 ;Dialog Options
"RTN","PXRMSEL",72,0)
 S VALM("TITLE")=PXRMHD,VALMHDR(1)=PXRMSHD
"RTN","PXRMSEL",73,0)
 Q
"RTN","PXRMSEL",74,0)
 ;
"RTN","PXRMSEL",75,0)
HELP ;Help code
"RTN","PXRMSEL",76,0)
 N ORU,ORUPRMT,XQORM,PXRMTAG S PXRMTAG=PXRMGTYP
"RTN","PXRMSEL",77,0)
 D EN^VALM("PXRM DIALOG MAIN HELP")
"RTN","PXRMSEL",78,0)
 S VALMBCK="R"
"RTN","PXRMSEL",79,0)
 Q
"RTN","PXRMSEL",80,0)
 ;
"RTN","PXRMSEL",81,0)
INIT ;Init
"RTN","PXRMSEL",82,0)
 D CLEAN^VALM10
"RTN","PXRMSEL",83,0)
 S VALMCNT=0
"RTN","PXRMSEL",84,0)
 D BUILD
"RTN","PXRMSEL",85,0)
 D XQORM
"RTN","PXRMSEL",86,0)
 ;
"RTN","PXRMSEL",87,0)
 ;Set header and title for dialog options
"RTN","PXRMSEL",88,0)
 I PXRMGTYP["DLG" D
"RTN","PXRMSEL",89,0)
 .S PXRMHD="Dialog List",PXRMSHD="DIALOG VIEW ("
"RTN","PXRMSEL",90,0)
 .I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",91,0)
 ..I PXRMDTYP="E" S PXRMSHD=PXRMSHD_"DIALOG ELEMENTS)"
"RTN","PXRMSEL",92,0)
 ..I PXRMDTYP="F" S PXRMSHD=PXRMSHD_"FORCED VALUES)"
"RTN","PXRMSEL",93,0)
 ..I PXRMDTYP="G" S PXRMSHD=PXRMSHD_"DIALOG GROUPS)"
"RTN","PXRMSEL",94,0)
 ..I PXRMDTYP="P" S PXRMSHD=PXRMSHD_"ADDITIONAL PROMPTS)"
"RTN","PXRMSEL",95,0)
 ..I PXRMDTYP="S" S PXRMSHD=PXRMSHD_"RESULT GROUPS)"
"RTN","PXRMSEL",96,0)
 ..I PXRMDTYP="T" S PXRMSHD=PXRMSHD_"RESULT ELEMENT)"
"RTN","PXRMSEL",97,0)
 .I PXRMGTYP="DLG" D
"RTN","PXRMSEL",98,0)
 ..S PXRMSHD=PXRMSHD_"REMINDER DIALOGS - "
"RTN","PXRMSEL",99,0)
 ..I $E(PXRMVIEW,2)="N" S PXRMSHD=PXRMSHD_"SOURCE REMINDER NAME)"
"RTN","PXRMSEL",100,0)
 ..I $E(PXRMVIEW,2)="P" S PXRMSHD=PXRMSHD_"SOURCE REMINDER PRINT NAME)"
"RTN","PXRMSEL",101,0)
 .I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",102,0)
 ..S PXRMSHD="REMINDER VIEW ("
"RTN","PXRMSEL",103,0)
 ..I PXRMVIEW="AN" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY NAME)"
"RTN","PXRMSEL",104,0)
 ..I PXRMVIEW="AP" S PXRMSHD=PXRMSHD_"ALL REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",105,0)
 ..I PXRMVIEW="LN" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY NAME)"
"RTN","PXRMSEL",106,0)
 ..I PXRMVIEW="LP" S PXRMSHD=PXRMSHD_"LINKED REMINDERS BY PRINT NAME)"
"RTN","PXRMSEL",107,0)
 .;Restore original place
"RTN","PXRMSEL",108,0)
 .S:$G(PXRMBG) VALMBG=PXRMBG
"RTN","PXRMSEL",109,0)
 .S VALMHDR(1)=PXRMSHD,VALM("TITLE")=PXRMHD
"RTN","PXRMSEL",110,0)
 ;
"RTN","PXRMSEL",111,0)
 S VALMBCK="R"
"RTN","PXRMSEL",112,0)
 Q
"RTN","PXRMSEL",113,0)
 ;
"RTN","PXRMSEL",114,0)
 ;
"RTN","PXRMSEL",115,0)
BUILD ;Build selection list
"RTN","PXRMSEL",116,0)
 ;
"RTN","PXRMSEL",117,0)
 D ^PXRMSEL1
"RTN","PXRMSEL",118,0)
 Q
"RTN","PXRMSEL",119,0)
 ;
"RTN","PXRMSEL",120,0)
LIST ;List All option
"RTN","PXRMSEL",121,0)
 W IORESET
"RTN","PXRMSEL",122,0)
 I PXRMGTYP["DLG" D ALL^PXRMDLST
"RTN","PXRMSEL",123,0)
 I PXRMGTYP="DTAX" D ALL^PXRMTDLG
"RTN","PXRMSEL",124,0)
 I PXRMGTYP="FIP" D ALL^PXRMFIP
"RTN","PXRMSEL",125,0)
 I PXRMGTYP="FPAR" D ALL^PXRMFLST
"RTN","PXRMSEL",126,0)
 I PXRMGTYP="RCAT" D ALL^PXRMCLST
"RTN","PXRMSEL",127,0)
 I PXRMGTYP="RESN" D ALL^PXRMSLST
"RTN","PXRMSEL",128,0)
 I PXRMGTYP="SHFR" D ALL^PXRMSHF
"RTN","PXRMSEL",129,0)
 ;
"RTN","PXRMSEL",130,0)
 N DIR S DIR(0)="E" D ^DIR
"RTN","PXRMSEL",131,0)
 ; 
"RTN","PXRMSEL",132,0)
 D XQORM
"RTN","PXRMSEL",133,0)
 S VALMBCK="R"
"RTN","PXRMSEL",134,0)
 Q
"RTN","PXRMSEL",135,0)
 ;
"RTN","PXRMSEL",136,0)
PEXIT ;PXRM SELECTION MENU protocol exit code
"RTN","PXRMSEL",137,0)
 S VALMSG="+ Next Screen   - Prev Screen   ?? More Actions"
"RTN","PXRMSEL",138,0)
 ;Reset after page up/down etc
"RTN","PXRMSEL",139,0)
 D XQORM
"RTN","PXRMSEL",140,0)
 Q
"RTN","PXRMSEL",141,0)
 ;
"RTN","PXRMSEL",142,0)
SEL ;PXRM SELECT ITEM validation
"RTN","PXRMSEL",143,0)
 N ERR,IEN,SEL
"RTN","PXRMSEL",144,0)
 S VALMBCK="",SEL=+$P(XQORNOD(0),"=",2)
"RTN","PXRMSEL",145,0)
 ;Invalid selection
"RTN","PXRMSEL",146,0)
 I ('SEL)!(SEL>VALMCNT)!('$D(@VALMAR@("IDX",SEL))) D  Q
"RTN","PXRMSEL",147,0)
 .W $C(7),!,SEL_" is not a valid item number." H 2
"RTN","PXRMSEL",148,0)
 .S VALMBCK="R"
"RTN","PXRMSEL",149,0)
 ;Valid selection
"RTN","PXRMSEL",150,0)
 S IEN=$O(@VALMAR@("IDX",SEL,"")) Q:'IEN
"RTN","PXRMSEL",151,0)
 S VALMBCK="Q",@PXRMNAM=IEN
"RTN","PXRMSEL",152,0)
 ;Save place - reminder link only
"RTN","PXRMSEL",153,0)
 I PXRMGTYP["DLG" S PXRMBG=VALMBG
"RTN","PXRMSEL",154,0)
 Q
"RTN","PXRMSEL",155,0)
 ;
"RTN","PXRMSEL",156,0)
XQORM S XQORM("#")=$O(^ORD(101,"B","PXRM SELECTION ITEM",0))_U_"1:"_VALMCNT
"RTN","PXRMSEL",157,0)
 S XQORM("A")="Select Item: "
"RTN","PXRMSEL",158,0)
 ;For finding type parameters dissallow add option
"RTN","PXRMSEL",159,0)
 I ((PXRMGTYP="FPAR")&(+$G(PXRMINST)=0))!(PXRMGTYP="DTAX") D
"RTN","PXRMSEL",160,0)
 .N FMENU
"RTN","PXRMSEL",161,0)
 .S FMENU=$O(^ORD(101,"B","PXRM FINDING SELECTION MENU",0))_";ORD(101,"
"RTN","PXRMSEL",162,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",163,0)
 ;For dialog edit allow extra options
"RTN","PXRMSEL",164,0)
 I PXRMGTYP="DLGE" D
"RTN","PXRMSEL",165,0)
 .N FMENU
"RTN","PXRMSEL",166,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLGE)",0))_";ORD(101,"
"RTN","PXRMSEL",167,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",168,0)
 ;For reminder dialog edit allow change view
"RTN","PXRMSEL",169,0)
 I PXRMGTYP="DLG" D
"RTN","PXRMSEL",170,0)
 .N FMENU
"RTN","PXRMSEL",171,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG SELECTION MENU (DLG)",0))_";ORD(101,"
"RTN","PXRMSEL",172,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",173,0)
 ;Reminder to dialog link
"RTN","PXRMSEL",174,0)
 I PXRMGTYP="DLGR" D
"RTN","PXRMSEL",175,0)
 .N FMENU
"RTN","PXRMSEL",176,0)
 .S FMENU=$O(^ORD(101,"B","PXRM DIALOG/REMINDER MENU",0))_";ORD(101,"
"RTN","PXRMSEL",177,0)
 .I FMENU S XQORM("HIJACK")=FMENU
"RTN","PXRMSEL",178,0)
 Q
"RTN","PXRMSEL",179,0)
 ;
"RTN","PXRMSEL",180,0)
 ;Select single HF or all HF's for the reminder
"RTN","PXRMSEL",181,0)
 ;---------------------------------------------
"RTN","PXRMSEL",182,0)
ZOPT(TYPE) ;
"RTN","PXRMSEL",183,0)
 N X,Y
"RTN","PXRMSEL",184,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",185,0)
 S DIR(0)="S"_U_"I:Individual Health Factor;"
"RTN","PXRMSEL",186,0)
 S DIR(0)=DIR(0)_"A:All Health Factors for a Selected Reminder;"
"RTN","PXRMSEL",187,0)
 S DIR("A")="SELECTION OPTION"
"RTN","PXRMSEL",188,0)
 S DIR("B")="I"
"RTN","PXRMSEL",189,0)
 S DIR("?")="Select from the codes displayed. For detailed help type ??"
"RTN","PXRMSEL",190,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(1)"
"RTN","PXRMSEL",191,0)
 D ^DIR K DIR
"RTN","PXRMSEL",192,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",193,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",194,0)
 S TYPE=Y
"RTN","PXRMSEL",195,0)
 Q
"RTN","PXRMSEL",196,0)
 ;
"RTN","PXRMSEL",197,0)
 ;Reminder selection
"RTN","PXRMSEL",198,0)
 ;------------------
"RTN","PXRMSEL",199,0)
ZREM(ARRAY) ;
"RTN","PXRMSEL",200,0)
 N X,Y,CNT,FSUB,FHF,FIND,FNAM,FOUND,REM
"RTN","PXRMSEL",201,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",202,0)
 S FOUND=0
"RTN","PXRMSEL",203,0)
 W !
"RTN","PXRMSEL",204,0)
 F  D  Q:$D(DTOUT)  Q:$D(DUOUT)  Q:FOUND
"RTN","PXRMSEL",205,0)
 .S DIC=811.9,DIC(0)="AEMQZ"
"RTN","PXRMSEL",206,0)
 .D ^DIC K DIC S:X=(U_U) DTOUT=1 Q:$D(DTOUT)!$D(DUOUT)!(+Y=-1)
"RTN","PXRMSEL",207,0)
 .;Reminder ien
"RTN","PXRMSEL",208,0)
 .S REM=$P(Y,U) Q:'REM
"RTN","PXRMSEL",209,0)
 .;Get health factor findings on this reminder
"RTN","PXRMSEL",210,0)
 .S FSUB=0
"RTN","PXRMSEL",211,0)
 .F  S FSUB=$O(^PXD(811.9,REM,20,FSUB)) Q:'FSUB  D
"RTN","PXRMSEL",212,0)
 ..S FIND=$P($G(^PXD(811.9,REM,20,FSUB,0)),U)
"RTN","PXRMSEL",213,0)
 ..Q:$P(FIND,";",2)'="AUTTHF("
"RTN","PXRMSEL",214,0)
 ..S FHF=$P(FIND,";") Q:'FHF
"RTN","PXRMSEL",215,0)
 ..S FNAM=$P($G(^AUTTHF(FHF,0)),U) Q:FNAM=""
"RTN","PXRMSEL",216,0)
 ..;Save array used by PXRMGEDT
"RTN","PXRMSEL",217,0)
 ..S FOUND=FOUND+1
"RTN","PXRMSEL",218,0)
 ..S ARRAY(FNAM)=FHF,ARRAYN(FHF)=""
"RTN","PXRMSEL",219,0)
 .I 'FOUND W !!,"No health factor findings on this reminder",! Q
"RTN","PXRMSEL",220,0)
 .S FNAM=""
"RTN","PXRMSEL",221,0)
 .W !!,"HEALTH FACTORS:",!
"RTN","PXRMSEL",222,0)
 .F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D
"RTN","PXRMSEL",223,0)
 ..S FHF=$P(ARRAY(FNAM),U)
"RTN","PXRMSEL",224,0)
 ..W !,FNAM W:$D(^PXRMD(801.95,FHF,0)) " (Resolution defined)"
"RTN","PXRMSEL",225,0)
 .W !
"RTN","PXRMSEL",226,0)
 Q
"RTN","PXRMSEL",227,0)
 ;
"RTN","PXRMSEL",228,0)
 ;Reminders Health Factors
"RTN","PXRMSEL",229,0)
 ;------------------------
"RTN","PXRMSEL",230,0)
ZSKIP N ANS,FNAM,FHF,EXISTS,TEXT
"RTN","PXRMSEL",231,0)
 S FNAM=""
"RTN","PXRMSEL",232,0)
 F  S FNAM=$O(ARRAY(FNAM)) Q:FNAM=""  D  Q:$D(DUOUT)!$D(DTOUT)
"RTN","PXRMSEL",233,0)
 .S FHF=ARRAY(FNAM),EXISTS=$D(^PXRMD(801.95,FHF,0))
"RTN","PXRMSEL",234,0)
 .I 'EXISTS S TEXT="ADD resolution status for "_FNAM_": "
"RTN","PXRMSEL",235,0)
 .I EXISTS S TEXT="MODIFY resolution status for "_FNAM_": "
"RTN","PXRMSEL",236,0)
 .;Option to ADD/MODIFY
"RTN","PXRMSEL",237,0)
 .D ZASK(.ANS,TEXT) Q:$D(DTOUT)!$D(DUOUT)  Q:(ANS'="Y")
"RTN","PXRMSEL",238,0)
 .;Force entry of HF into 801.95
"RTN","PXRMSEL",239,0)
 .I 'EXISTS D
"RTN","PXRMSEL",240,0)
 ..N DA,DIC,DIK,DR
"RTN","PXRMSEL",241,0)
 ..;Store the unique name
"RTN","PXRMSEL",242,0)
 ..S DR=".01///"_FNAM,DIE="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",243,0)
 ..D ^DIE
"RTN","PXRMSEL",244,0)
 ..;Reindex the cross-references.
"RTN","PXRMSEL",245,0)
 ..S DIK="^PXRMD(801.95,",DA=FHF
"RTN","PXRMSEL",246,0)
 ..D IX^DIK
"RTN","PXRMSEL",247,0)
 .;Edit
"RTN","PXRMSEL",248,0)
 .D EDIT^PXRMGEDT(PXRMGTYP,FHF,1)
"RTN","PXRMSEL",249,0)
 Q
"RTN","PXRMSEL",250,0)
 ;
"RTN","PXRMSEL",251,0)
 ;Ask ADD/MODIFY or not
"RTN","PXRMSEL",252,0)
 ;---------------------
"RTN","PXRMSEL",253,0)
ZASK(YESNO,TEXT) ;
"RTN","PXRMSEL",254,0)
 N X,Y,DIR
"RTN","PXRMSEL",255,0)
 K DIROUT,DIRUT,DTOUT,DUOUT
"RTN","PXRMSEL",256,0)
 S DIR(0)="YA0"
"RTN","PXRMSEL",257,0)
 S DIR("A")=TEXT
"RTN","PXRMSEL",258,0)
 S DIR("B")="N"
"RTN","PXRMSEL",259,0)
 S DIR("?")="Enter Y or N. For detailed help type ??"
"RTN","PXRMSEL",260,0)
 S DIR("??")=U_"D ZHELP^PXRMSEL(2)"
"RTN","PXRMSEL",261,0)
 D ^DIR K DIR
"RTN","PXRMSEL",262,0)
 I $D(DIROUT) S DTOUT=1
"RTN","PXRMSEL",263,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","PXRMSEL",264,0)
 S YESNO=$E(Y(0))
"RTN","PXRMSEL",265,0)
 Q
"RTN","PXRMSEL",266,0)
 ;
"RTN","PXRMSEL",267,0)
 ;General help text routine.
"RTN","PXRMSEL",268,0)
 ;--------------------------
"RTN","PXRMSEL",269,0)
ZHELP(CALL) ;
"RTN","PXRMSEL",270,0)
 N HTEXT
"RTN","PXRMSEL",271,0)
 N DIWF,DIWL,DIWR,IC
"RTN","PXRMSEL",272,0)
 S DIWF="C75",DIWL=0,DIWR=75
"RTN","PXRMSEL",273,0)
 ;
"RTN","PXRMSEL",274,0)
 I CALL=1 D
"RTN","PXRMSEL",275,0)
 .S HTEXT(1)="Enter I to select an individual health factor. Enter A to"
"RTN","PXRMSEL",276,0)
 .S HTEXT(2)="process all health factor findings on a selected reminder."
"RTN","PXRMSEL",277,0)
 I CALL=2 D
"RTN","PXRMSEL",278,0)
 .S HTEXT(1)="Enter Yes to enter resolution status for this health"
"RTN","PXRMSEL",279,0)
 .S HTEXT(2)="factor. Enter No to continue to the next health factor."
"RTN","PXRMSEL",280,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",281,0)
 S IC=""
"RTN","PXRMSEL",282,0)
 F  S IC=$O(HTEXT(IC)) Q:IC=""  D
"RTN","PXRMSEL",283,0)
 . S X=HTEXT(IC)
"RTN","PXRMSEL",284,0)
 . D ^DIWP
"RTN","PXRMSEL",285,0)
 W !
"RTN","PXRMSEL",286,0)
 S IC=0
"RTN","PXRMSEL",287,0)
 F  S IC=$O(^UTILITY($J,"W",0,IC)) Q:IC=""  D
"RTN","PXRMSEL",288,0)
 . W !,^UTILITY($J,"W",0,IC,0)
"RTN","PXRMSEL",289,0)
 K ^UTILITY($J,"W")
"RTN","PXRMSEL",290,0)
 W !
"RTN","PXRMSEL",291,0)
 Q
"RTN","PXRMSKIN")
0^38^B14293982
"RTN","PXRMSKIN",1,0)
PXRMSKIN ; SLC/PKR - Handle skin test findings. ;10/11/2000
"RTN","PXRMSKIN",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMSKIN",3,0)
 ;
"RTN","PXRMSKIN",4,0)
 ;=======================================================================
"RTN","PXRMSKIN",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate skin test findings.
"RTN","PXRMSKIN",6,0)
 N FIND0,FIND3,FINDING,INVDATE,SKINIEN
"RTN","PXRMSKIN",7,0)
 S SKINIEN=""
"RTN","PXRMSKIN",8,0)
 F  S SKINIEN=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTSK(",SKINIEN)) Q:+SKINIEN=0  D
"RTN","PXRMSKIN",9,0)
 . S INVDATE=$O(^AUPNVSK("AA",DFN,SKINIEN,""))
"RTN","PXRMSKIN",10,0)
 . S FINDING=""
"RTN","PXRMSKIN",11,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","AUTTSK(",SKINIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMSKIN",12,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMSKIN",13,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMSKIN",14,0)
 .. D FIEVAL(DFN,SKINIEN,INVDATE,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMSKIN",15,0)
 Q
"RTN","PXRMSKIN",16,0)
 ;
"RTN","PXRMSKIN",17,0)
 ;=======================================================================
"RTN","PXRMSKIN",18,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate skin test terms.
"RTN","PXRMSKIN",19,0)
 N FIND0,FIND3,INVDATE,LFIEVAL,TFIND0,TFIND3,TFINDING,SKINIEN
"RTN","PXRMSKIN",20,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMSKIN",21,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMSKIN",22,0)
 S SKINIEN=""
"RTN","PXRMSKIN",23,0)
 F  S SKINIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTSK(",SKINIEN)) Q:+SKINIEN=0  D
"RTN","PXRMSKIN",24,0)
 . S INVDATE=$O(^AUPNVSK("AA",DFN,SKINIEN,""))
"RTN","PXRMSKIN",25,0)
 . S TFINDING=""
"RTN","PXRMSKIN",26,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","AUTTSK(",SKINIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMSKIN",27,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMSKIN",28,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMSKIN",29,0)
 .. D FIEVAL(DFN,SKINIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMSKIN",30,0)
 Q
"RTN","PXRMSKIN",31,0)
 ;
"RTN","PXRMSKIN",32,0)
 ;=======================================================================
"RTN","PXRMSKIN",33,0)
FIEVAL(DFN,SKINIEN,INVDATE,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMSKIN",34,0)
 N CONVAL,DATE,IEN,IND,READING,RESULTS
"RTN","PXRMSKIN",35,0)
 N TEMP,VALID,VIEN
"RTN","PXRMSKIN",36,0)
 I INVDATE="" S FIEVAL(FINDING)=0 Q
"RTN","PXRMSKIN",37,0)
 S IEN=$O(^AUPNVSK("AA",DFN,SKINIEN,INVDATE,""))
"RTN","PXRMSKIN",38,0)
 S TEMP=$G(^AUPNVSK(IEN,0))
"RTN","PXRMSKIN",39,0)
 S RESULTS=$P(TEMP,U,4)
"RTN","PXRMSKIN",40,0)
 S READING=$P(TEMP,U,5)
"RTN","PXRMSKIN",41,0)
 S VIEN=$P(TEMP,U,3)
"RTN","PXRMSKIN",42,0)
 S DATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMSKIN",43,0)
 ;Save the rest of the finding information.
"RTN","PXRMSKIN",44,0)
 S FIEVAL(FINDING)=1
"RTN","PXRMSKIN",45,0)
 S FIEVAL(FINDING,"DATE")=DATE
"RTN","PXRMSKIN",46,0)
 S FIEVAL(FINDING,"FINDING")=SKINIEN_";AUTTSK("
"RTN","PXRMSKIN",47,0)
 S FIEVAL(FINDING,"SOURCE")=IEN_";AUPNVSK("
"RTN","PXRMSKIN",48,0)
 S FIEVAL(FINDING,"READING")=READING
"RTN","PXRMSKIN",49,0)
 S FIEVAL(FINDING,"RESULTS")=RESULTS
"RTN","PXRMSKIN",50,0)
 S FIEVAL(FINDING,"VALUE")=RESULTS
"RTN","PXRMSKIN",51,0)
 S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMSKIN",52,0)
 ;Determine if the finding has expired.
"RTN","PXRMSKIN",53,0)
 S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMSKIN",54,0)
 I 'VALID D  Q
"RTN","PXRMSKIN",55,0)
 . S FIEVAL(FINDING)=0
"RTN","PXRMSKIN",56,0)
 . S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMSKIN",57,0)
 ;If there is a condition for this finding evaluate it.
"RTN","PXRMSKIN",58,0)
 S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,RESULTS)
"RTN","PXRMSKIN",59,0)
 I CONVAL'="" D
"RTN","PXRMSKIN",60,0)
 . I CONVAL D
"RTN","PXRMSKIN",61,0)
 .. S FIEVAL(FINDING)=CONVAL
"RTN","PXRMSKIN",62,0)
 .. S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMSKIN",63,0)
 . E  D
"RTN","PXRMSKIN",64,0)
 .. K FIEVAL(FINDING)
"RTN","PXRMSKIN",65,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMSKIN",66,0)
 Q
"RTN","PXRMSKIN",67,0)
 ;
"RTN","PXRMSKIN",68,0)
 ;=======================================================================
"RTN","PXRMSKIN",69,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMSKIN",70,0)
 ;maintenance output.
"RTN","PXRMSKIN",71,0)
 N EM,FIEN,IND,PNAME,READING,RESULTS,SKINIEN,TEMP,VDATE
"RTN","PXRMSKIN",72,0)
 S SKINIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMSKIN",73,0)
 S FIEN=$P(FIEVAL(FINDING,"FINDING"),";",1)
"RTN","PXRMSKIN",74,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMSKIN",75,0)
 S READING=$G(FIEVAL(FINDING,"READING"))
"RTN","PXRMSKIN",76,0)
 S RESULTS=$G(FIEVAL(FINDING,"RESULTS"))
"RTN","PXRMSKIN",77,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMSKIN",78,0)
 S TEMP=TEMP_" Skin Test: "
"RTN","PXRMSKIN",79,0)
 S IND=$P(^AUPNVSK(SKINIEN,0),U,1)
"RTN","PXRMSKIN",80,0)
 S PNAME=$P(^AUTTSK(FIEN,0),U,1)
"RTN","PXRMSKIN",81,0)
 S TEMP=TEMP_PNAME
"RTN","PXRMSKIN",82,0)
 I $L(RESULTS)>0 D
"RTN","PXRMSKIN",83,0)
 . S TEMP=TEMP_"; results - "
"RTN","PXRMSKIN",84,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.12,.04,"",RESULTS,.EM)
"RTN","PXRMSKIN",85,0)
 I $L(READING)>0 D
"RTN","PXRMSKIN",86,0)
 . S TEMP=TEMP_"; reading - "
"RTN","PXRMSKIN",87,0)
 . S TEMP=TEMP_$$EXTERNAL^DILFD(9000010.12,.05,"",READING,.EM)
"RTN","PXRMSKIN",88,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMSKIN",89,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMSKIN",90,0)
 ;If the finding is false because of the value add the reason.
"RTN","PXRMSKIN",91,0)
 I $G(FIEVAL(FINDING,"CONDITION"))=0 S TEMP=TEMP_$$ACTFT^PXRMOPT
"RTN","PXRMSKIN",92,0)
 S NLINES=NLINES+1
"RTN","PXRMSKIN",93,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMSKIN",94,0)
 I $D(PXRMDEV) D
"RTN","PXRMSKIN",95,0)
 . N UID
"RTN","PXRMSKIN",96,0)
 . S UID="SKIN "_PNAME
"RTN","PXRMSKIN",97,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID)=TEMP
"RTN","PXRMSKIN",98,0)
 ;
"RTN","PXRMSKIN",99,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMSKIN",100,0)
 I VDATE["E" D
"RTN","PXRMSKIN",101,0)
 . N INDEX,VIEN
"RTN","PXRMSKIN",102,0)
 . S INDEX="SKIK-"_PNAME
"RTN","PXRMSKIN",103,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMSKIN",104,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMSKIN",105,0)
 Q
"RTN","PXRMSKIN",106,0)
 ;
"RTN","PXRMTAX")
0^25^B33271885
"RTN","PXRMTAX",1,0)
PXRMTAX ; SLC/PKR - Handle taxonomy finding. ;01/25/2001
"RTN","PXRMTAX",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMTAX",3,0)
 ;
"RTN","PXRMTAX",4,0)
 ;=======================================================================
"RTN","PXRMTAX",5,0)
EVALFI(DFN,FIEVAL) ;Evaluate taxonomy findings.
"RTN","PXRMTAX",6,0)
 N FIND0,FIND3,FINDING,TAXIEN
"RTN","PXRMTAX",7,0)
 S TAXIEN=""
"RTN","PXRMTAX",8,0)
 F  S TAXIEN=$O(^PXD(811.9,PXRMITEM,20,"E","PXD(811.2,",TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",9,0)
 . S FINDING=""
"RTN","PXRMTAX",10,0)
 . F  S FINDING=$O(^PXD(811.9,PXRMITEM,20,"E","PXD(811.2,",TAXIEN,FINDING)) Q:+FINDING=0  D
"RTN","PXRMTAX",11,0)
 .. S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMTAX",12,0)
 .. S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMTAX",13,0)
 .. D FIEVAL(DFN,TAXIEN,FIND0,FIND3,"","",FINDING,.FIEVAL)
"RTN","PXRMTAX",14,0)
 Q
"RTN","PXRMTAX",15,0)
 ;
"RTN","PXRMTAX",16,0)
 ;=======================================================================
"RTN","PXRMTAX",17,0)
EVALTERM(DFN,FINDING,TERMIEN,TFIEVAL) ;Evaluate taxonomy findings in terms.
"RTN","PXRMTAX",18,0)
 N FIND0,FIND3,TAXIEN,TFIND0,TFIND3,TFINDING
"RTN","PXRMTAX",19,0)
 S FIND0=^PXD(811.9,PXRMITEM,20,FINDING,0)
"RTN","PXRMTAX",20,0)
 S FIND3=$G(^PXD(811.9,PXRMITEM,20,FINDING,3))
"RTN","PXRMTAX",21,0)
 S TAXIEN=""
"RTN","PXRMTAX",22,0)
 F  S TAXIEN=$O(^PXRMD(811.5,TERMIEN,20,"E","PXD(811.2,",TAXIEN)) Q:+TAXIEN=0  D
"RTN","PXRMTAX",23,0)
 . S TFINDING=""
"RTN","PXRMTAX",24,0)
 . F  S TFINDING=$O(^PXRMD(811.5,TERMIEN,20,"E","PXD(811.2,",TAXIEN,TFINDING)) Q:+TFINDING=0  D
"RTN","PXRMTAX",25,0)
 .. S TFIND0=^PXRMD(811.5,TERMIEN,20,TFINDING,0)
"RTN","PXRMTAX",26,0)
 .. S TFIND3=$G(^PXRMD(811.5,TERMIEN,20,TFINDING,3))
"RTN","PXRMTAX",27,0)
 .. D FIEVAL(DFN,TAXIEN,FIND0,FIND3,TFIND0,TFIND3,TFINDING,.TFIEVAL)
"RTN","PXRMTAX",28,0)
 Q
"RTN","PXRMTAX",29,0)
 ;
"RTN","PXRMTAX",30,0)
 ;=======================================================================
"RTN","PXRMTAX",31,0)
FIEVAL(DFN,TAXIEN,FIND0,FIND3,TFIND0,TFIND3,FINDING,FIEVAL) ;
"RTN","PXRMTAX",32,0)
 ;Make sure the taxonomy has been expanded and the expansion is current.
"RTN","PXRMTAX",33,0)
 D CHECK^PXRMBXTL(TAXIEN,"")
"RTN","PXRMTAX",34,0)
 N CONVAL,DATE,ENS,FLIST,INS,INVDATE,NICD0,NICD9,NICPT,NRCPT,PDS,PLS
"RTN","PXRMTAX",35,0)
 N RAS,SOURCE,STATUS,TEMP,TSORT,VALID,VIEN
"RTN","PXRMTAX",36,0)
 ;Setup the Patient Data Source control variables.
"RTN","PXRMTAX",37,0)
 S PDS=$P(^PXD(811.2,TAXIEN,0),U,4)
"RTN","PXRMTAX",38,0)
 I PDS["EN" S ENS=1
"RTN","PXRMTAX",39,0)
 E  S ENS=0
"RTN","PXRMTAX",40,0)
 I PDS["IN" S INS=1
"RTN","PXRMTAX",41,0)
 E  S INS=0
"RTN","PXRMTAX",42,0)
 I PDS["PL" S PLS=1
"RTN","PXRMTAX",43,0)
 E  S PLS=0
"RTN","PXRMTAX",44,0)
 I PDS["RA" S RAS=1
"RTN","PXRMTAX",45,0)
 E  S RAS=0
"RTN","PXRMTAX",46,0)
 ;The default is to search all locations.
"RTN","PXRMTAX",47,0)
 I PDS="" S (ENS,INS,PLS,RAS)=1
"RTN","PXRMTAX",48,0)
 S TEMP=$G(^PXD(811.3,TAXIEN,0))
"RTN","PXRMTAX",49,0)
 S NICD0=+$P(TEMP,U,3)
"RTN","PXRMTAX",50,0)
 I (NICD0>0)&(INS) D
"RTN","PXRMTAX",51,0)
 . D EVALICD0^PXRMDGPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",52,0)
 S NICD9=+$P(TEMP,U,5)
"RTN","PXRMTAX",53,0)
 I NICD9>0 D
"RTN","PXRMTAX",54,0)
 . I INS D EVALICD9^PXRMDGPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",55,0)
 . I PLS D EVAL^PXRMPROB(DFN,FIND0,TFIND0,TAXIEN,.FLIST)
"RTN","PXRMTAX",56,0)
 . I ENS D EVAL^PXRMVPOV(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",57,0)
 S NICPT=+$P(TEMP,U,7)
"RTN","PXRMTAX",58,0)
 I (NICPT>0)&(ENS) D
"RTN","PXRMTAX",59,0)
 . D EVAL^PXRMVCPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",60,0)
 S NRCPT=+$P(TEMP,U,9)
"RTN","PXRMTAX",61,0)
 I (NRCPT>0)&(RAS) D
"RTN","PXRMTAX",62,0)
 . D EVAL^PXRMRCPT(DFN,TAXIEN,.FLIST)
"RTN","PXRMTAX",63,0)
 ;Process the found list. Return the most recent non expired result.
"RTN","PXRMTAX",64,0)
 ;If there are no non-expired results return the most recent expired.
"RTN","PXRMTAX",65,0)
 ;The found list data is
"RTN","PXRMTAX",66,0)
 ;FLIST(INVDATE,SOURCE)=SOURCE IEN_U_VISIT IEN_U_DATE_U_CODE PTR_U_
"RTN","PXRMTAX",67,0)
 ;whatever is unique for this finding type.
"RTN","PXRMTAX",68,0)
 ;If the finding is not related to a visit then visit ien will be null.
"RTN","PXRMTAX",69,0)
 S INVDATE=""
"RTN","PXRMTAX",70,0)
 F  S INVDATE=$O(FLIST(INVDATE)) Q:+INVDATE=0  D
"RTN","PXRMTAX",71,0)
 . S SOURCE=""
"RTN","PXRMTAX",72,0)
 . F  S SOURCE=$O(FLIST(INVDATE,SOURCE)) Q:SOURCE=""  D
"RTN","PXRMTAX",73,0)
 .. S DATE=$P(FLIST(INVDATE,SOURCE),U,3)
"RTN","PXRMTAX",74,0)
 ..;Determine if the finding has expired.
"RTN","PXRMTAX",75,0)
 .. S VALID=$$VALID^PXRMDATE(FIND0,TFIND0,DATE)
"RTN","PXRMTAX",76,0)
 ..;Set status=0 for a true finding for sorting.
"RTN","PXRMTAX",77,0)
 .. I VALID S STATUS=0
"RTN","PXRMTAX",78,0)
 .. E  S STATUS=1
"RTN","PXRMTAX",79,0)
 .. S TSORT(STATUS,INVDATE,SOURCE)=""
"RTN","PXRMTAX",80,0)
 ;Look for the most recent true finding.
"RTN","PXRMTAX",81,0)
 S STATUS=0
"RTN","PXRMTAX",82,0)
 S INVDATE=+$O(TSORT(STATUS,""))
"RTN","PXRMTAX",83,0)
 I INVDATE=0 D
"RTN","PXRMTAX",84,0)
 . S STATUS=1
"RTN","PXRMTAX",85,0)
 . S INVDATE=+$O(TSORT(STATUS,""))
"RTN","PXRMTAX",86,0)
 I INVDATE>0 D
"RTN","PXRMTAX",87,0)
 . I STATUS=1 D
"RTN","PXRMTAX",88,0)
 .. S FIEVAL(FINDING)=0
"RTN","PXRMTAX",89,0)
 .. S FIEVAL(FINDING,"EXPIRED")=""
"RTN","PXRMTAX",90,0)
 . E  S FIEVAL(FINDING)=1
"RTN","PXRMTAX",91,0)
 . S SOURCE=$O(TSORT(STATUS,INVDATE,""))
"RTN","PXRMTAX",92,0)
 . S TEMP=FLIST(INVDATE,SOURCE)
"RTN","PXRMTAX",93,0)
 . S FIEVAL(FINDING,"DATE")=$P(TEMP,U,3)
"RTN","PXRMTAX",94,0)
 . S FIEVAL(FINDING,"CODEP")=$P(TEMP,U,4)
"RTN","PXRMTAX",95,0)
 . S FIEVAL(FINDING,"FINDING")=TAXIEN_";PXD(811.2,"
"RTN","PXRMTAX",96,0)
 . S FIEVAL(FINDING,"SOURCE")=$P(TEMP,U,1)_";"_SOURCE
"RTN","PXRMTAX",97,0)
 . I SOURCE="AUPNPROB" S FIEVAL(FINDING,"PRIORITY")=$P(TEMP,U,6)
"RTN","PXRMTAX",98,0)
 . S VIEN=$P(TEMP,U,2)
"RTN","PXRMTAX",99,0)
 . I VIEN'="" S FIEVAL(FINDING,"VIEN")=VIEN
"RTN","PXRMTAX",100,0)
 .;If the finding is true evaluate the condition.
"RTN","PXRMTAX",101,0)
 . I FIEVAL(FINDING) D
"RTN","PXRMTAX",102,0)
 .. S CONVAL=$$COND^PXRMUTIL(FIND3,TFIND3,"")
"RTN","PXRMTAX",103,0)
 .. I CONVAL'="" D
"RTN","PXRMTAX",104,0)
 ... I CONVAL D
"RTN","PXRMTAX",105,0)
 .... S FIEVAL(FINDING)=CONVAL
"RTN","PXRMTAX",106,0)
 .... S FIEVAL(FINDING,"CONDITION")=CONVAL
"RTN","PXRMTAX",107,0)
 ... E  D
"RTN","PXRMTAX",108,0)
 .... K FIEVAL(FINDING)
"RTN","PXRMTAX",109,0)
 .... S FIEVAL(FINDING)=0
"RTN","PXRMTAX",110,0)
 E  S FIEVAL(FINDING)=0
"RTN","PXRMTAX",111,0)
 Q
"RTN","PXRMTAX",112,0)
 ;
"RTN","PXRMTAX",113,0)
 ;=======================================================================
"RTN","PXRMTAX",114,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMTAX",115,0)
 ;maintenance output.
"RTN","PXRMTAX",116,0)
 N SROOT
"RTN","PXRMTAX",117,0)
 S SROOT=$P(FIEVAL(FINDING,"SOURCE"),";",2)
"RTN","PXRMTAX",118,0)
 I SROOT["AUPNVCPT" D OUTPUT^PXRMVCPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",119,0)
 I SROOT["AUPNPROB" D OUTPUT^PXRMPROB(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",120,0)
 I SROOT["AUPNVPOV" D OUTPUT^PXRMVPOV(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",121,0)
 I SROOT["DGPTICD0" D OUTICD0^PXRMDGPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",122,0)
 I SROOT["DGPTICD9" D OUTICD9^PXRMDGPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",123,0)
 I SROOT["RADPT" D OUTPUT^PXRMRCPT(.NLINES,.TEXT,FINDING,.FIEVAL) Q
"RTN","PXRMTAX",124,0)
 Q
"RTN","PXRMTAX",125,0)
 ;
"RTN","PXRMTAX",126,0)
 ;=======================================================================
"RTN","PXRMTAX",127,0)
PDSXHELP ;Taxonomy field Patient Data Source executable help.
"RTN","PXRMTAX",128,0)
 N TEXT
"RTN","PXRMTAX",129,0)
 S TEXT(1)="This is a list of comma separated patient data sources."
"RTN","PXRMTAX",130,0)
 S TEXT(2)="You may use any combination of valid entries."
"RTN","PXRMTAX",131,0)
 S TEXT(3)="Valid entries are:"
"RTN","PXRMTAX",132,0)
 S TEXT(4)="  IN - inpatient from PTF"
"RTN","PXRMTAX",133,0)
 S TEXT(5)="  INDXLS - inpatient DXLS diagnosis only"
"RTN","PXRMTAX",134,0)
 S TEXT(6)="  INPR - inpatient primary diagnosis  only"
"RTN","PXRMTAX",135,0)
 S TEXT(7)="  EN - encounter PCE data"
"RTN","PXRMTAX",136,0)
 S TEXT(8)="  ENPR - encounter PCE data primary diagnosis only"
"RTN","PXRMTAX",137,0)
 S TEXT(9)="  PL - Problem List"
"RTN","PXRMTAX",138,0)
 S TEXT(10)="  RA - radiology CPT only"
"RTN","PXRMTAX",139,0)
 S TEXT(11)="  "
"RTN","PXRMTAX",140,0)
 D EN^DDIOL(.TEXT)
"RTN","PXRMTAX",141,0)
 Q
"RTN","PXRMTAX",142,0)
 ;
"RTN","PXRMTAX",143,0)
 ;=======================================================================
"RTN","PXRMTAX",144,0)
TAXEDIT(TAXIEN,KI) ;Whenever a taxonony item is edited rebuild the expanded
"RTN","PXRMTAX",145,0)
 ;taxonomy
"RTN","PXRMTAX",146,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAX",147,0)
 D CHECK^PXRMBXTL(TAXIEN,KI)
"RTN","PXRMTAX",148,0)
 Q
"RTN","PXRMTAX",149,0)
 ;
"RTN","PXRMTAX",150,0)
 ;=======================================================================
"RTN","PXRMTAX",151,0)
TAXKILL(TAXIEN) ;Called whenever a taxonony item is killed.
"RTN","PXRMTAX",152,0)
 D DELEXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMTAX",153,0)
 Q
"RTN","PXRMTAX",154,0)
 ;
"RTN","PXRMTAX",155,0)
 ;=======================================================================
"RTN","PXRMTAX",156,0)
VPDS ;Taxonomy field Patient Data Source input transform. Check for valid
"RTN","PXRMTAX",157,0)
 ;patient data sources.
"RTN","PXRMTAX",158,0)
 N IND,NSOURCE,PDS,TEXT,VALID
"RTN","PXRMTAX",159,0)
 S VALID=1
"RTN","PXRMTAX",160,0)
 S X=$$UP^XLFSTR(X)
"RTN","PXRMTAX",161,0)
 S NSOURCE=$L(X,",")
"RTN","PXRMTAX",162,0)
 F IND=1:1:NSOURCE D
"RTN","PXRMTAX",163,0)
 . S PDS=$P(X,",",IND)
"RTN","PXRMTAX",164,0)
 .;Check for valid source abbreviations.
"RTN","PXRMTAX",165,0)
 . I PDS="IN" Q
"RTN","PXRMTAX",166,0)
 . I PDS="INDXLS" Q
"RTN","PXRMTAX",167,0)
 . I PDS="INPR" Q
"RTN","PXRMTAX",168,0)
 . I PDS="EN" Q
"RTN","PXRMTAX",169,0)
 . I PDS="ENPR" Q
"RTN","PXRMTAX",170,0)
 . I PDS="PL" Q
"RTN","PXRMTAX",171,0)
 . I PDS="RA" Q
"RTN","PXRMTAX",172,0)
 . S VALID=0
"RTN","PXRMTAX",173,0)
 . S TEXT=PDS_" is not a valid Patient Data Source"
"RTN","PXRMTAX",174,0)
 . D EN^DDIOL(TEXT)
"RTN","PXRMTAX",175,0)
 I 'VALID K X
"RTN","PXRMTAX",176,0)
 Q
"RTN","PXRMTAX",177,0)
 ;
"RTN","PXRMTDLG")
0^63^B14695875
"RTN","PXRMTDLG",1,0)
PXRMTDLG ; SLC/PJH - Edit/Inquire Taxonomy Dialog ;03/05/2001
"RTN","PXRMTDLG",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMTDLG",3,0)
 ;
"RTN","PXRMTDLG",4,0)
 ;Called by option PXRM TAXONOMY DIALOG
"RTN","PXRMTDLG",5,0)
 ;
"RTN","PXRMTDLG",6,0)
START N DIC,PXRMGTYP,PXRMHD,PXRMTIEN,Y
"RTN","PXRMTDLG",7,0)
SELECT ;General selection
"RTN","PXRMTDLG",8,0)
 S PXRMHD="Taxonomy Dialog",PXRMGTYP="DTAX",PXRMTIEN=""
"RTN","PXRMTDLG",9,0)
 D START^PXRMSEL(PXRMHD,PXRMGTYP,"PXRMTIEN")
"RTN","PXRMTDLG",10,0)
 ;Should return a value
"RTN","PXRMTDLG",11,0)
 I PXRMTIEN D  G SELECT
"RTN","PXRMTDLG",12,0)
 .S PXRMHD="TAXONOMY NAME:"
"RTN","PXRMTDLG",13,0)
 .;Listman option
"RTN","PXRMTDLG",14,0)
 .D START^PXRMGEN(PXRMHD,PXRMGTYP,PXRMTIEN)
"RTN","PXRMTDLG",15,0)
 ;
"RTN","PXRMTDLG",16,0)
END Q
"RTN","PXRMTDLG",17,0)
 ;
"RTN","PXRMTDLG",18,0)
 ;List all Taxonomy Dialogs (for protocol PXRM SELECTION LIST)
"RTN","PXRMTDLG",19,0)
 ;-------------------------
"RTN","PXRMTDLG",20,0)
ALL N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO,Y
"RTN","PXRMTDLG",21,0)
 S Y=1
"RTN","PXRMTDLG",22,0)
 D SET
"RTN","PXRMTDLG",23,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",24,0)
 S BY=".01"
"RTN","PXRMTDLG",25,0)
 S FR=""
"RTN","PXRMTDLG",26,0)
 S TO=""
"RTN","PXRMTDLG",27,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",28,0)
 D DISP
"RTN","PXRMTDLG",29,0)
 Q
"RTN","PXRMTDLG",30,0)
 ;
"RTN","PXRMTDLG",31,0)
 ;Inquire/Print Option (for protocol PXRM GENERAL INQUIRE/PRINT)
"RTN","PXRMTDLG",32,0)
 ;--------------------
"RTN","PXRMTDLG",33,0)
INQ(Y) N BY,DC,DHD,DIC,FLDS,FR,L,LOGIC,NOW,TO
"RTN","PXRMTDLG",34,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTDLG",35,0)
 S DIC(0)="AEMQ"
"RTN","PXRMTDLG",36,0)
 D SET
"RTN","PXRMTDLG",37,0)
 D DISP
"RTN","PXRMTDLG",38,0)
 Q
"RTN","PXRMTDLG",39,0)
 ;
"RTN","PXRMTDLG",40,0)
 ;Display Header (see DHD variable)
"RTN","PXRMTDLG",41,0)
 ;--------------
"RTN","PXRMTDLG",42,0)
HED N TEMP,TEXTLEN,TEXTHED,TEXTUND
"RTN","PXRMTDLG",43,0)
 S TEXTHED="TAXONOMY DIALOG LIST"
"RTN","PXRMTDLG",44,0)
 S TEXTUND=$TR($J("",IOM)," ","-")
"RTN","PXRMTDLG",45,0)
 S TEMP=NOW_"  Page "_DC
"RTN","PXRMTDLG",46,0)
 S TEXTLEN=$L(TEMP)
"RTN","PXRMTDLG",47,0)
 W TEXTHED
"RTN","PXRMTDLG",48,0)
 W ?(IOM-TEXTLEN),TEMP
"RTN","PXRMTDLG",49,0)
 W !,TEXTUND,!!
"RTN","PXRMTDLG",50,0)
 Q
"RTN","PXRMTDLG",51,0)
 ;
"RTN","PXRMTDLG",52,0)
 ;DISPLAY (Display from FLDS array)
"RTN","PXRMTDLG",53,0)
 ;-------
"RTN","PXRMTDLG",54,0)
DISP S L=0,FLDS="[PXRM TAXONOMY DIALOG]"
"RTN","PXRMTDLG",55,0)
 D EN1^DIP
"RTN","PXRMTDLG",56,0)
 Q
"RTN","PXRMTDLG",57,0)
 ;
"RTN","PXRMTDLG",58,0)
SET ;Setup all the variables
"RTN","PXRMTDLG",59,0)
 ; Set Date for Header
"RTN","PXRMTDLG",60,0)
 S NOW=$$NOW^XLFDT
"RTN","PXRMTDLG",61,0)
 S NOW=$$FMTE^XLFDT(NOW,"1P")
"RTN","PXRMTDLG",62,0)
 ;
"RTN","PXRMTDLG",63,0)
 ;These variables need to be setup every time because DIP kills them.
"RTN","PXRMTDLG",64,0)
 S BY="NUMBER"
"RTN","PXRMTDLG",65,0)
 S (FR,TO)=+$P(Y,U,1)
"RTN","PXRMTDLG",66,0)
 S DHD="W ?0 D HED^PXRMTDLG"
"RTN","PXRMTDLG",67,0)
 ;
"RTN","PXRMTDLG",68,0)
 Q
"RTN","PXRMTDLG",69,0)
 ;
"RTN","PXRMTDLG",70,0)
 ;Build display for selected taxonomy - Called from PXRMGEN
"RTN","PXRMTDLG",71,0)
 ;---------------------------------------------------------
"RTN","PXRMTDLG",72,0)
DTAX(TIEN) ;
"RTN","PXRMTDLG",73,0)
 ;If dialog selectable codes don't exist build them
"RTN","PXRMTDLG",74,0)
 I ('$D(^PXD(811.2,TIEN,"SDX")))&('$D(^PXD(811.2,TIEN,"SPR"))) D
"RTN","PXRMTDLG",75,0)
 .D BUILD^PXRMTDUP(TIEN)
"RTN","PXRMTDLG",76,0)
 ;
"RTN","PXRMTDLG",77,0)
 N ARRAY,CNT,SEQ,TSEQ
"RTN","PXRMTDLG",78,0)
 S VALMCNT=0 K ^TMP("PXRMGEN",$J)
"RTN","PXRMTDLG",79,0)
 ;Format headings to include taxonomy name
"RTN","PXRMTDLG",80,0)
 S HEADER=PXRMHD_" "_$P(^PXD(811.2,TIEN,0),U)
"RTN","PXRMTDLG",81,0)
 ;Get associated codes
"RTN","PXRMTDLG",82,0)
 D TAX^PXRMDLL(TIEN,.ARRAY)
"RTN","PXRMTDLG",83,0)
 ;Taxonomy header
"RTN","PXRMTDLG",84,0)
 S SEQ=1,TSEQ=$J(SEQ,3)_"  "
"RTN","PXRMTDLG",85,0)
 S CNT=0,VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",86,0)
 S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_ARRAY
"RTN","PXRMTDLG",87,0)
 ;Dialog and Procedure entries
"RTN","PXRMTDLG",88,0)
 F  S CNT=$O(ARRAY(CNT)) Q:CNT=""  D
"RTN","PXRMTDLG",89,0)
 .S TSEQ=$J(SEQ,3)_"."_CNT
"RTN","PXRMTDLG",90,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",91,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=TSEQ_$J("",15-$L(TSEQ))_$P(ARRAY(CNT),U)
"RTN","PXRMTDLG",92,0)
 .D CODES($P(ARRAY(CNT),U,2),TIEN)
"RTN","PXRMTDLG",93,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",94,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",79)
"RTN","PXRMTDLG",95,0)
 ;Create headings
"RTN","PXRMTDLG",96,0)
 D CHGCAP^VALM("HEADER1","Taxonomy Dialog")
"RTN","PXRMTDLG",97,0)
 D CHGCAP^VALM("HEADER2","")
"RTN","PXRMTDLG",98,0)
 D CHGCAP^VALM("HEADER3","")
"RTN","PXRMTDLG",99,0)
 Q
"RTN","PXRMTDLG",100,0)
 ;
"RTN","PXRMTDLG",101,0)
 ;Selectable codes
"RTN","PXRMTDLG",102,0)
 ;----------------
"RTN","PXRMTDLG",103,0)
CODES(FILE,TIEN) ;
"RTN","PXRMTDLG",104,0)
 N CODES,CODE,DESC,DTEXT,SUB,TAB,TEXT
"RTN","PXRMTDLG",105,0)
 ;Display text
"RTN","PXRMTDLG",106,0)
 S TEXT="Selectable codes: ",TAB=18
"RTN","PXRMTDLG",107,0)
 ;Get array
"RTN","PXRMTDLG",108,0)
 D CODES^PXRMDLLA(FILE,TIEN,.CODES)
"RTN","PXRMTDLG",109,0)
 ;Move results into workfile
"RTN","PXRMTDLG",110,0)
 S SUB=""
"RTN","PXRMTDLG",111,0)
 F  S SUB=$O(CODES(SUB)) Q:SUB=""  D
"RTN","PXRMTDLG",112,0)
 .S CODE=$P(CODES(SUB),U,2),DESC=$P(CODES(SUB),U,3)
"RTN","PXRMTDLG",113,0)
 .S DTEXT=CODE_$J("",7-$L(CODE))_DESC
"RTN","PXRMTDLG",114,0)
 .S VALMCNT=VALMCNT+1
"RTN","PXRMTDLG",115,0)
 .S ^TMP("PXRMGEN",$J,VALMCNT,0)=$J("",15)_$G(TEXT)_DTEXT
"RTN","PXRMTDLG",116,0)
 .S TEXT=$J("",TAB)
"RTN","PXRMTDLG",117,0)
 Q
"RTN","PXRMTDLG",118,0)
 ;
"RTN","PXRMTDLG",119,0)
 ;Display selectable codes - called from print template
"RTN","PXRMTDLG",120,0)
 ;-----------------------------------------------------
"RTN","PXRMTDLG",121,0)
TDES(FILE,D0,D1) ;
"RTN","PXRMTDLG",122,0)
 N CNT,CODE,DATA,IEN,TEXT,NODE
"RTN","PXRMTDLG",123,0)
 S NODE=$S(FILE=80:"SDX",FILE=81:"SPR")
"RTN","PXRMTDLG",124,0)
 S DATA=$G(^PXD(811.2,D0,NODE,D1,0)) Q:DATA=""
"RTN","PXRMTDLG",125,0)
 ;Get ien of code
"RTN","PXRMTDLG",126,0)
 S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMTDLG",127,0)
 ;Translate ien to code
"RTN","PXRMTDLG",128,0)
 I FILE=80 S CODE=$P($G(^ICD9(IEN,0)),U)
"RTN","PXRMTDLG",129,0)
 I FILE=81 S CODE=$P($$CPT^ICPTCOD(IEN),U,2)
"RTN","PXRMTDLG",130,0)
 ;Set display text from taxonomy selectable code text
"RTN","PXRMTDLG",131,0)
 S TEXT=$P(DATA,U,2)
"RTN","PXRMTDLG",132,0)
 ;otherwise use icd9/cpt description
"RTN","PXRMTDLG",133,0)
 I TEXT="",FILE=80 S TEXT=$G(^ICD9(IEN,1))
"RTN","PXRMTDLG",134,0)
 I TEXT="",FILE=80 S TEXT=$P($G(^ICD9(IEN,0)),U,3)
"RTN","PXRMTDLG",135,0)
 I TEXT="",FILE=81 S TEXT=$P($$CPT^ICPTCOD(IEN),U,3)
"RTN","PXRMTDLG",136,0)
 S TEXT=" "_$E(TEXT,1,40)_$J("",40-$L(TEXT))
"RTN","PXRMTDLG",137,0)
 W $J(CODE,10)_TEXT
"RTN","PXRMTDLG",138,0)
 Q
"RTN","PXRMTDUP")
0^65^B16688355
"RTN","PXRMTDUP",1,0)
PXRMTDUP ; SLC/PJH - Update Taxonomy Dialog Selectable codes.;03/05/2001
"RTN","PXRMTDUP",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMTDUP",3,0)
 ;
"RTN","PXRMTDUP",4,0)
 ;
"RTN","PXRMTDUP",5,0)
 ;Build the list of codes for one taxonomy
"RTN","PXRMTDUP",6,0)
 ;----------------------------------------
"RTN","PXRMTDUP",7,0)
BUILD(TIEN) ;
"RTN","PXRMTDUP",8,0)
 N CODELIST,IC,FINDING,FILE,HIGH,LOW,NCE,TEMP
"RTN","PXRMTDUP",9,0)
 ;
"RTN","PXRMTDUP",10,0)
 ;Setup file names for indirection, these will hold the taxonomy lists.
"RTN","PXRMTDUP",11,0)
 N ICD9IEN,ICPTIEN
"RTN","PXRMTDUP",12,0)
 S ICD9IEN="^TMP(""PXRM"",$J,""ICD9IEN"")"
"RTN","PXRMTDUP",13,0)
 S ICPTIEN="^TMP(""PXRM"",$J,""ICPTIEN"")"
"RTN","PXRMTDUP",14,0)
 ;
"RTN","PXRMTDUP",15,0)
 S NCE=0
"RTN","PXRMTDUP",16,0)
 F FILE=80,81 D
"RTN","PXRMTDUP",17,0)
 .S IC=0
"RTN","PXRMTDUP",18,0)
 .F  S IC=$O(^PXD(811.2,TIEN,FILE,IC)) Q:+IC=0  D
"RTN","PXRMTDUP",19,0)
 ..S TEMP=$G(^PXD(811.2,TIEN,FILE,IC,0))
"RTN","PXRMTDUP",20,0)
 ..;Append the taxonomy and finding information to CODELIST.
"RTN","PXRMTDUP",21,0)
 ..S NCE=NCE+1
"RTN","PXRMTDUP",22,0)
 ..S CODELIST(NCE)=TEMP_U_FILE
"RTN","PXRMTDUP",23,0)
 ;CODELIST is LOW_U_HIGH_U_FILE
"RTN","PXRMTDUP",24,0)
 ;Go through the standard coded list and get the file IEN for each entry.
"RTN","PXRMTDUP",25,0)
 F IC=1:1:NCE D
"RTN","PXRMTDUP",26,0)
 .S LOW=$P(CODELIST(IC),U,1)
"RTN","PXRMTDUP",27,0)
 .S HIGH=$P(CODELIST(IC),U,2)
"RTN","PXRMTDUP",28,0)
 .S FILE=$P(CODELIST(IC),U,3)
"RTN","PXRMTDUP",29,0)
 .I FILE=80 D ICD9(LOW,HIGH) Q
"RTN","PXRMTDUP",30,0)
 .I FILE=81 D ICPT(LOW,HIGH) Q
"RTN","PXRMTDUP",31,0)
 ;
"RTN","PXRMTDUP",32,0)
 ;Store the results.
"RTN","PXRMTDUP",33,0)
 D STORE(TIEN)
"RTN","PXRMTDUP",34,0)
 K ^TMP("PXRM",$J,"ICD9IEN")
"RTN","PXRMTDUP",35,0)
 K ^TMP("PXRM",$J,"ICPTIEN")
"RTN","PXRMTDUP",36,0)
 Q
"RTN","PXRMTDUP",37,0)
 ;
"RTN","PXRMTDUP",38,0)
 ;Error Handler
"RTN","PXRMTDUP",39,0)
 ;-------------
"RTN","PXRMTDUP",40,0)
ERR N ERROR,IC,REF
"RTN","PXRMTDUP",41,0)
 S ERROR(1)="Unable to build selectable codes for taxonomy : "
"RTN","PXRMTDUP",42,0)
 S ERROR(2)=NAME
"RTN","PXRMTDUP",43,0)
 S ERROR(3)="Error in UPDATE^DIE, needs further investigation"
"RTN","PXRMTDUP",44,0)
 ;Move MSG into ERROR
"RTN","PXRMTDUP",45,0)
 S REF="MSG"
"RTN","PXRMTDUP",46,0)
 F IC=4:1 S REF=$Q(@REF) Q:REF=""  S ERROR(IC)=REF_"="_@REF
"RTN","PXRMTDUP",47,0)
 ;Screen message
"RTN","PXRMTDUP",48,0)
 D BMES^XPDUTL(.ERROR)
"RTN","PXRMTDUP",49,0)
 Q
"RTN","PXRMTDUP",50,0)
 ;
"RTN","PXRMTDUP",51,0)
 ;Build the list of internal entries for ICD9 (File 80)
"RTN","PXRMTDUP",52,0)
 ;-----------------------------------------------------
"RTN","PXRMTDUP",53,0)
ICD9(LOW,HIGH) ;
"RTN","PXRMTDUP",54,0)
 N END,IEN,IND,TMP
"RTN","PXRMTDUP",55,0)
 S IND=LOW_" "
"RTN","PXRMTDUP",56,0)
 S END=HIGH_" "
"RTN","PXRMTDUP",57,0)
 F  Q:(IND]END)!(+IND>+END)!(IND="")  D
"RTN","PXRMTDUP",58,0)
 .S IEN=$O(^ICD9("BA",IND,""))
"RTN","PXRMTDUP",59,0)
 .I (+IEN>0) D
"RTN","PXRMTDUP",60,0)
 ..;Ignore both invalid and inactive codes
"RTN","PXRMTDUP",61,0)
 ..S TMP=$$CODE^PXRMVAL($TR(IND," "),80) Q:'TMP  Q:$P(TMP,U,9)=1
"RTN","PXRMTDUP",62,0)
 ..S ^TMP("PXRM",$J,"ICD9IEN",IND)=IEN
"RTN","PXRMTDUP",63,0)
 .S IND=$O(^ICD9("BA",IND))
"RTN","PXRMTDUP",64,0)
 Q
"RTN","PXRMTDUP",65,0)
 ;
"RTN","PXRMTDUP",66,0)
 ;Build the list of internal entries for ICPT (File 81)
"RTN","PXRMTDUP",67,0)
 ;-----------------------------------------------------
"RTN","PXRMTDUP",68,0)
ICPT(LOW,HIGH) ;
"RTN","PXRMTDUP",69,0)
 N IEN,IND,TMP
"RTN","PXRMTDUP",70,0)
 S IND=LOW
"RTN","PXRMTDUP",71,0)
 F  Q:(IND]HIGH)!(+IND>+HIGH)!(IND="")  D
"RTN","PXRMTDUP",72,0)
 .S IEN=$O(^ICPT("B",IND,""))
"RTN","PXRMTDUP",73,0)
 .I (+IEN>0) D
"RTN","PXRMTDUP",74,0)
 ..;Ignore both invalid and inactive codes
"RTN","PXRMTDUP",75,0)
 ..S TMP=$$CODE^PXRMVAL($TR(IND," "),81) Q:'TMP  Q:$P(TMP,U,9)=1
"RTN","PXRMTDUP",76,0)
 ..S ^TMP("PXRM",$J,"ICPTIEN",IND)=IEN
"RTN","PXRMTDUP",77,0)
 .S IND=$O(^ICPT("B",IND))
"RTN","PXRMTDUP",78,0)
 Q
"RTN","PXRMTDUP",79,0)
 ;
"RTN","PXRMTDUP",80,0)
 ;Store selectable codes in taxonomy
"RTN","PXRMTDUP",81,0)
 ;----------------------------------
"RTN","PXRMTDUP",82,0)
STORE(TIEN) ;
"RTN","PXRMTDUP",83,0)
 K ^TMP("PXRMTDUP",$J)
"RTN","PXRMTDUP",84,0)
 N FDA,FDAIEN,FITEM,I2N,IEN,IND,MSG,NAME,SEQ,SUB,TEMP
"RTN","PXRMTDUP",85,0)
 ;
"RTN","PXRMTDUP",86,0)
 S NAME=$P(^PXD(811.2,TIEN,0),U)
"RTN","PXRMTDUP",87,0)
 ;
"RTN","PXRMTDUP",88,0)
 S FDAIEN(1)=TIEN
"RTN","PXRMTDUP",89,0)
 ;
"RTN","PXRMTDUP",90,0)
 S SUB="",IND=1,SEQ=0
"RTN","PXRMTDUP",91,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICD9IEN",SUB)) Q:SUB=""  D
"RTN","PXRMTDUP",92,0)
 .S IEN=^TMP("PXRM",$J,"ICD9IEN",SUB)
"RTN","PXRMTDUP",93,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMTDUP",94,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMTDUP",95,0)
 .S ^TMP("PXRMTDUP",$J,811.23102,I2N,.01)=IEN
"RTN","PXRMTDUP",96,0)
 ;
"RTN","PXRMTDUP",97,0)
 S SEQ=0
"RTN","PXRMTDUP",98,0)
 F  S SUB=$O(^TMP("PXRM",$J,"ICPTIEN",SUB)) Q:SUB=""  D
"RTN","PXRMTDUP",99,0)
 .S IEN=^TMP("PXRM",$J,"ICPTIEN",SUB)
"RTN","PXRMTDUP",100,0)
 .S IND=IND+1,SEQ=SEQ+1
"RTN","PXRMTDUP",101,0)
 .S I2N="+"_IND_","_FDAIEN(1)_","
"RTN","PXRMTDUP",102,0)
 .S ^TMP("PXRMTDUP",$J,811.23104,I2N,.01)=IEN
"RTN","PXRMTDUP",103,0)
 ;
"RTN","PXRMTDUP",104,0)
 ;None found
"RTN","PXRMTDUP",105,0)
 I IND=1 Q
"RTN","PXRMTDUP",106,0)
 ;
"RTN","PXRMTDUP",107,0)
 S TEMP="^TMP(""PXRMTDUP"","_$J_")"
"RTN","PXRMTDUP",108,0)
 D UPDATE^DIE("",TEMP,"FDAIEN","MSG")
"RTN","PXRMTDUP",109,0)
 I $D(MSG) D ERR
"RTN","PXRMTDUP",110,0)
 K ^TMP("PXRMTDUP",$J)
"RTN","PXRMTDUP",111,0)
 Q
"RTN","PXRMTDUP",112,0)
 ;
"RTN","PXRMTDUP",113,0)
 ;Check for and purge inactive or invalid selectable codes
"RTN","PXRMTDUP",114,0)
 ;--------------------------------------------------------
"RTN","PXRMTDUP",115,0)
PURGE(TXIEN) ;
"RTN","PXRMTDUP",116,0)
 N CODE,DATA,FILE,IEN,NODE,SUB
"RTN","PXRMTDUP",117,0)
 F NODE="SPR","SDX" D
"RTN","PXRMTDUP",118,0)
 .S SUB=0
"RTN","PXRMTDUP",119,0)
 .F  S SUB=$O(^PXD(811.2,TXIEN,NODE,SUB)) Q:'SUB  D
"RTN","PXRMTDUP",120,0)
 ..S DATA=$G(^PXD(811.2,TXIEN,NODE,SUB,0)) Q:DATA=""
"RTN","PXRMTDUP",121,0)
 ..;Get ien of code
"RTN","PXRMTDUP",122,0)
 ..S IEN=$P(DATA,U) Q:IEN=""
"RTN","PXRMTDUP",123,0)
 ..;Translate ien to code
"RTN","PXRMTDUP",124,0)
 ..I NODE="SDX" S CODE=$P($G(^ICD9(IEN,0)),U),FILE=80
"RTN","PXRMTDUP",125,0)
 ..I NODE="SPR" S CODE=$P($$CPT^ICPTCOD(IEN),U,2),FILE=90
"RTN","PXRMTDUP",126,0)
 ..;Ignore codes which are both valid and active
"RTN","PXRMTDUP",127,0)
 ..S DATA=$$CODE^PXRMVAL(CODE,FILE) I $P(DATA,U)&'$P(DATA,U,9) Q
"RTN","PXRMTDUP",128,0)
 ..;Kill Inactive or Invalid codes
"RTN","PXRMTDUP",129,0)
 ..N DIK,DA
"RTN","PXRMTDUP",130,0)
 ..S DA(1)=TXIEN,DA=SUB,DIK="^PXD(811.2,"_DA(1)_","""_NODE_""","
"RTN","PXRMTDUP",131,0)
 ..D ^DIK
"RTN","PXRMTDUP",132,0)
 Q
"RTN","PXRMTEDT")
0^22^B2655664
"RTN","PXRMTEDT",1,0)
PXRMTEDT ; SLC/PKR - Edit a taxonomy item. ;10/03/2000
"RTN","PXRMTEDT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMTEDT",3,0)
 ;
"RTN","PXRMTEDT",4,0)
 ;=======================================================================
"RTN","PXRMTEDT",5,0)
 N DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",6,0)
GETNAME ;Get the name of the reminder taxonomy to edit.
"RTN","PXRMTEDT",7,0)
 K DA,DIC,DLAYGO,DTOUT,DUOUT,Y
"RTN","PXRMTEDT",8,0)
 S DIC="^PXD(811.2,"
"RTN","PXRMTEDT",9,0)
 S DIC(0)="AEMQL"
"RTN","PXRMTEDT",10,0)
 S DIC("A")="Select Reminder Taxonomy: "
"RTN","PXRMTEDT",11,0)
 S DIC("S")="I $S(Y'<100000:1,(Y<100000)&($G(PXRMINST)=1)&(DUZ(0)=""@""):1,1:0)"
"RTN","PXRMTEDT",12,0)
 S DLAYGO=811.2
"RTN","PXRMTEDT",13,0)
 ;Set the starting place for additions.
"RTN","PXRMTEDT",14,0)
 D SETSTART^PXRMCOPY(DIC,1)
"RTN","PXRMTEDT",15,0)
 W !
"RTN","PXRMTEDT",16,0)
 D ^DIC
"RTN","PXRMTEDT",17,0)
 I ($D(DTOUT))!($D(DUOUT)) Q
"RTN","PXRMTEDT",18,0)
 I Y=-1 G END
"RTN","PXRMTEDT",19,0)
 S DA=$P(Y,U,1)
"RTN","PXRMTEDT",20,0)
 I $$LOCKXTL^PXRMBXTL(DA) D EDIT(DIC,DA)
"RTN","PXRMTEDT",21,0)
 D ULOCKXTL^PXRMBXTL(DA)
"RTN","PXRMTEDT",22,0)
 G GETNAME
"RTN","PXRMTEDT",23,0)
END ;
"RTN","PXRMTEDT",24,0)
 ;Reset starting place.
"RTN","PXRMTEDT",25,0)
 D SETSTART^PXRMCOPY(DIC,0)
"RTN","PXRMTEDT",26,0)
 Q
"RTN","PXRMTEDT",27,0)
 ;
"RTN","PXRMTEDT",28,0)
 ;=======================================================================
"RTN","PXRMTEDT",29,0)
EDIT(ROOT,DA) ;
"RTN","PXRMTEDT",30,0)
 N DIE,DR,DIDEL
"RTN","PXRMTEDT",31,0)
 S DIE=ROOT,DIDEL=811.2
"RTN","PXRMTEDT",32,0)
 W !!,"General Taxonomy Data"
"RTN","PXRMTEDT",33,0)
 S DR=".01"
"RTN","PXRMTEDT",34,0)
 D ^DIE
"RTN","PXRMTEDT",35,0)
 ;If DA is undefined that the entry was deleted.
"RTN","PXRMTEDT",36,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",37,0)
 I $D(Y) Q
"RTN","PXRMTEDT",38,0)
 ;
"RTN","PXRMTEDT",39,0)
 S DR=".02"
"RTN","PXRMTEDT",40,0)
 D ^DIE
"RTN","PXRMTEDT",41,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",42,0)
 I $D(Y) Q
"RTN","PXRMTEDT",43,0)
 ;
"RTN","PXRMTEDT",44,0)
 S DR="4"
"RTN","PXRMTEDT",45,0)
 D ^DIE
"RTN","PXRMTEDT",46,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",47,0)
 I $D(Y) Q
"RTN","PXRMTEDT",48,0)
 ;
"RTN","PXRMTEDT",49,0)
 S DR="10"
"RTN","PXRMTEDT",50,0)
 D ^DIE
"RTN","PXRMTEDT",51,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",52,0)
 I $D(Y) Q
"RTN","PXRMTEDT",53,0)
 ;
"RTN","PXRMTEDT",54,0)
 S DR="1.6"
"RTN","PXRMTEDT",55,0)
 D ^DIE
"RTN","PXRMTEDT",56,0)
 I '$D(DA) Q
"RTN","PXRMTEDT",57,0)
 I $D(Y) Q
"RTN","PXRMTEDT",58,0)
 ;
"RTN","PXRMTEDT",59,0)
 W !!,"ICD0 Range of Coded Values"
"RTN","PXRMTEDT",60,0)
 S DR="2103"
"RTN","PXRMTEDT",61,0)
 D ^DIE
"RTN","PXRMTEDT",62,0)
 I $D(Y) Q
"RTN","PXRMTEDT",63,0)
 ;
"RTN","PXRMTEDT",64,0)
 W !!,"ICD9 Range of Coded Values"
"RTN","PXRMTEDT",65,0)
 S DR="2102"
"RTN","PXRMTEDT",66,0)
 D ^DIE
"RTN","PXRMTEDT",67,0)
 I $D(Y) Q
"RTN","PXRMTEDT",68,0)
 ;
"RTN","PXRMTEDT",69,0)
 W !!,"CPT Range of Coded Values"
"RTN","PXRMTEDT",70,0)
 S DR="2104"
"RTN","PXRMTEDT",71,0)
 D ^DIE
"RTN","PXRMTEDT",72,0)
 I $D(Y) Q
"RTN","PXRMTEDT",73,0)
 Q
"RTN","PXRMUTIL")
0^27^B30829984
"RTN","PXRMUTIL",1,0)
PXRMUTIL ; SLC/PKR - Utility routines for use by PXRM. ;12/08/2000
"RTN","PXRMUTIL",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMUTIL",3,0)
 ;
"RTN","PXRMUTIL",4,0)
 ;=======================================================================
"RTN","PXRMUTIL",5,0)
ANTON(ANUM) ;Convert an alphabetic number to its decimal form. This is the
"RTN","PXRMUTIL",6,0)
 ;inverse of NTOAN.
"RTN","PXRMUTIL",7,0)
 N INT
"RTN","PXRMUTIL",8,0)
 S INT("A")=0,INT("B")=1,INT("C")=2,INT("D")=3,INT("E")=4,INT("F")=5
"RTN","PXRMUTIL",9,0)
 S INT("G")=6,INT("H")=7,INT("I")=8,INT("J")=9,INT("K")=10,INT("L")=11
"RTN","PXRMUTIL",10,0)
 S INT("M")=12,INT("N")=13,INT("O")=14,INT("P")=15,INT("Q")=16
"RTN","PXRMUTIL",11,0)
 S INT("R")=17,INT("S")=18,INT("T")=19,INT("U")=20,INT("V")=21
"RTN","PXRMUTIL",12,0)
 S INT("W")=22,INT("X")=23,INT("Y")=24,INT("Z")=25
"RTN","PXRMUTIL",13,0)
 ;
"RTN","PXRMUTIL",14,0)
 N LEN,NUMBR,P26,PWR
"RTN","PXRMUTIL",15,0)
 S LEN=$L(ANUM),NUMBER=0,P26=1
"RTN","PXRMUTIL",16,0)
 F DC=LEN:-1:1 D
"RTN","PXRMUTIL",17,0)
 . S DIGIT=$E(ANUM,DC)
"RTN","PXRMUTIL",18,0)
 . S NUMBER=NUMBER+(P26*INT(DIGIT))
"RTN","PXRMUTIL",19,0)
 . S P26=26*P26
"RTN","PXRMUTIL",20,0)
 Q NUMBER
"RTN","PXRMUTIL",21,0)
 ;
"RTN","PXRMUTIL",22,0)
 ;=======================================================================
"RTN","PXRMUTIL",23,0)
AWRITE(REF) ;Write all the descendants of the array reference.
"RTN","PXRMUTIL",24,0)
 ;REF is the starting array reference, for example A or ^TMP("PXRM",$J).
"RTN","PXRMUTIL",25,0)
 N DONE,IC,IND,LEN,PROOT,ROOT,START,TEMP
"RTN","PXRMUTIL",26,0)
 I REF="" Q
"RTN","PXRMUTIL",27,0)
 S PROOT=$P(REF,")",1)
"RTN","PXRMUTIL",28,0)
 ;Build the root so we can tell when we are done.
"RTN","PXRMUTIL",29,0)
 S TEMP=$NA(@REF)
"RTN","PXRMUTIL",30,0)
 S ROOT=$P(TEMP,")",1)
"RTN","PXRMUTIL",31,0)
 S REF=$Q(@REF)
"RTN","PXRMUTIL",32,0)
 I REF'[ROOT Q
"RTN","PXRMUTIL",33,0)
 S DONE=0
"RTN","PXRMUTIL",34,0)
 F IC=0:0 Q:(REF="")!(DONE)  D
"RTN","PXRMUTIL",35,0)
 . S START=$F(REF,ROOT)
"RTN","PXRMUTIL",36,0)
 . S LEN=$L(REF)
"RTN","PXRMUTIL",37,0)
 . S IND=$E(REF,START,LEN)
"RTN","PXRMUTIL",38,0)
 . W !,PROOT_IND,"=",@REF
"RTN","PXRMUTIL",39,0)
 . S REF=$Q(@REF)
"RTN","PXRMUTIL",40,0)
 . I REF'[ROOT S DONE=1
"RTN","PXRMUTIL",41,0)
 Q
"RTN","PXRMUTIL",42,0)
 ;
"RTN","PXRMUTIL",43,0)
 ;=======================================================================
"RTN","PXRMUTIL",44,0)
COND(FIND3,TFIND3,V) ;Evaluate the finding condition. TFIND3 will be defined
"RTN","PXRMUTIL",45,0)
 ;if this is being called from a term evaluation. V is the value.
"RTN","PXRMUTIL",46,0)
 N CASESEN,COND,CONVAL
"RTN","PXRMUTIL",47,0)
 S CONVAL=""
"RTN","PXRMUTIL",48,0)
 S COND=$P(TFIND3,U,1)
"RTN","PXRMUTIL",49,0)
 S CASESEN=$P(TFIND3,U,2)
"RTN","PXRMUTIL",50,0)
 I COND="" D
"RTN","PXRMUTIL",51,0)
 . S COND=$P(FIND3,U,1)
"RTN","PXRMUTIL",52,0)
 . S CASESEN=$P(FIND3,U,2)
"RTN","PXRMUTIL",53,0)
 . I CASESEN="" S CASESEN=2
"RTN","PXRMUTIL",54,0)
 I $L(COND)>0 D
"RTN","PXRMUTIL",55,0)
 . S V=$TR(V," ","~")
"RTN","PXRMUTIL",56,0)
 . I 'CASESEN D
"RTN","PXRMUTIL",57,0)
 .. S COND=$$UP^XLFSTR(COND)
"RTN","PXRMUTIL",58,0)
 .. S V=$$UP^XLFSTR(V)
"RTN","PXRMUTIL",59,0)
 . X COND
"RTN","PXRMUTIL",60,0)
 . S CONVAL=$T
"RTN","PXRMUTIL",61,0)
 Q CONVAL
"RTN","PXRMUTIL",62,0)
 ;
"RTN","PXRMUTIL",63,0)
 ;=======================================================================
"RTN","PXRMUTIL",64,0)
DIWPS(DIWF,DIWL,DIWR) ;Setup the formatting for the DIWP call. The variables
"RTN","PXRMUTIL",65,0)
 ;should be NEWED by the caller.
"RTN","PXRMUTIL",66,0)
 S DIWF="C70",DIWL=0,DIWR=70
"RTN","PXRMUTIL",67,0)
DIWPK ;
"RTN","PXRMUTIL",68,0)
 K ^UTILITY($J,"W")
"RTN","PXRMUTIL",69,0)
 Q
"RTN","PXRMUTIL",70,0)
 ;
"RTN","PXRMUTIL",71,0)
 ;=======================================================================
"RTN","PXRMUTIL",72,0)
FNFR(ROOT) ;Given the root of a file return the file number.
"RTN","PXRMUTIL",73,0)
 Q +$P(@(ROOT_"0)"),U,2)
"RTN","PXRMUTIL",74,0)
 ;
"RTN","PXRMUTIL",75,0)
 ;=======================================================================
"RTN","PXRMUTIL",76,0)
MATCH(N1,ARRAY1,KEY1,N2,ARRAY2,KEY2,NMAT,MARRAY) ;Given two sorted
"RTN","PXRMUTIL",77,0)
 ;arrays look for matches between the KEY1 piece of ARRAY1 and the KEY2
"RTN","PXRMUTIL",78,0)
 ;piece of ARRAY2. Return ARRAY1_U_ARRAY2 matches in MARRAY.
"RTN","PXRMUTIL",79,0)
 ;Initialize the number of matches to 0.
"RTN","PXRMUTIL",80,0)
 S NMAT=0
"RTN","PXRMUTIL",81,0)
 I (N1'>0)!(N2'>0) Q
"RTN","PXRMUTIL",82,0)
 N A1,A2,IC,JC
"RTN","PXRMUTIL",83,0)
 S (IC,JC)=1
"RTN","PXRMUTIL",84,0)
ML ;
"RTN","PXRMUTIL",85,0)
 S A1=$P(@ARRAY1@(IC),U,KEY1),A2=$P(@ARRAY2@(JC),U,KEY2)
"RTN","PXRMUTIL",86,0)
 I A1=A2 D  Q:IC>N1  Q:JC>N2  G ML
"RTN","PXRMUTIL",87,0)
 . S NMAT=NMAT+1
"RTN","PXRMUTIL",88,0)
 . S @MARRAY@(NMAT)=@ARRAY1@(IC)_U_@ARRAY2@(JC)
"RTN","PXRMUTIL",89,0)
 . S IC=IC+1,JC=JC+1
"RTN","PXRMUTIL",90,0)
 I A1<A2 S IC=IC+1 Q:IC>N1  G ML
"RTN","PXRMUTIL",91,0)
 S JC=JC+1 Q:JC>N2  G ML
"RTN","PXRMUTIL",92,0)
 Q
"RTN","PXRMUTIL",93,0)
 ;
"RTN","PXRMUTIL",94,0)
 ;=======================================================================
"RTN","PXRMUTIL",95,0)
NTOAN(NUMBER) ;Given an integer N return an alphabetic string that can be
"RTN","PXRMUTIL",96,0)
 ;used for sorting. This will be modulus 26. For example N=0 returns
"RTN","PXRMUTIL",97,0)
 ;A, N=26 returns BA etc.
"RTN","PXRMUTIL",98,0)
 N ALPH
"RTN","PXRMUTIL",99,0)
 S ALPH(0)="A",ALPH(1)="B",ALPH(2)="C",ALPH(3)="D",ALPH(4)="E"
"RTN","PXRMUTIL",100,0)
 S ALPH(5)="F",ALPH(6)="G",ALPH(7)="H",ALPH(8)="I",ALPH(9)="J"
"RTN","PXRMUTIL",101,0)
 S ALPH(10)="K",ALPH(11)="L",ALPH(12)="M",ALPH(13)="N",ALPH(14)="O"
"RTN","PXRMUTIL",102,0)
 S ALPH(15)="P",ALPH(16)="Q",ALPH(17)="R",ALPH(18)="S",ALPH(19)="T"
"RTN","PXRMUTIL",103,0)
 S ALPH(20)="U",ALPH(21)="V",ALPH(22)="W",ALPH(23)="X",ALPH(24)="Y"
"RTN","PXRMUTIL",104,0)
 S ALPH(25)="Z"
"RTN","PXRMUTIL",105,0)
 ;
"RTN","PXRMUTIL",106,0)
 N ANUM,DIGIT,NUM,P26,PC,PWR
"RTN","PXRMUTIL",107,0)
 S ANUM="",NUM=NUMBER,PWR=0
"RTN","PXRMUTIL",108,0)
 S P26(PWR)=1
"RTN","PXRMUTIL",109,0)
 F PWR=1:1 S P26(PWR)=26*P26(PWR-1) I P26(PWR)>NUMBER Q
"RTN","PXRMUTIL",110,0)
 S PWR=PWR-1
"RTN","PXRMUTIL",111,0)
 F PC=PWR:-1:0 D
"RTN","PXRMUTIL",112,0)
 . S DIGIT=NUM\P26(PC)
"RTN","PXRMUTIL",113,0)
 . S ANUM=ANUM_ALPH(DIGIT)
"RTN","PXRMUTIL",114,0)
 . S NUM=NUM-(DIGIT*P26(PC))
"RTN","PXRMUTIL",115,0)
 Q ANUM
"RTN","PXRMUTIL",116,0)
 ;
"RTN","PXRMUTIL",117,0)
 ;=======================================================================
"RTN","PXRMUTIL",118,0)
POSTFIX(PFSTACK,EXPR,OPER) ;Given an expression, EXPR, in infix notation
"RTN","PXRMUTIL",119,0)
 ;convert it to postfix and return the result in PFSTACK. PFSTACK(0)
"RTN","PXRMUTIL",120,0)
 ;will contain the number of elements in PFSTACK. OPER is a
"RTN","PXRMUTIL",121,0)
 ;string containing allowable operators.
"RTN","PXRMUTIL",122,0)
 N CHAR,IND,LEN,OPERP,PFP,SP,SPACE,STACK,SYM,SYMP,SYMT,TAB,TEMP
"RTN","PXRMUTIL",123,0)
 S SPACE=$C(32)
"RTN","PXRMUTIL",124,0)
 S TAB=$C(9)
"RTN","PXRMUTIL",125,0)
 S TEMP=""
"RTN","PXRMUTIL",126,0)
 S OPERP=OPER_"()"
"RTN","PXRMUTIL",127,0)
 S SYMP=0
"RTN","PXRMUTIL",128,0)
 S LEN=$L(EXPR)
"RTN","PXRMUTIL",129,0)
 ;Break the expression into (, ), operators, and operands.
"RTN","PXRMUTIL",130,0)
 ;Remove spaces and tabs and put the symbols onto the symbol
"RTN","PXRMUTIL",131,0)
 ;stack in left to right order. Symbol number 1 is SYM(1).
"RTN","PXRMUTIL",132,0)
 F IND=1:1:LEN D
"RTN","PXRMUTIL",133,0)
 . S CHAR=$E(EXPR,IND)
"RTN","PXRMUTIL",134,0)
 . I (CHAR=SPACE)!(CHAR=TAB) Q
"RTN","PXRMUTIL",135,0)
 . I OPERP[CHAR D
"RTN","PXRMUTIL",136,0)
 .. I $L(TEMP)>0 D
"RTN","PXRMUTIL",137,0)
 ... S SYMP=SYMP+1
"RTN","PXRMUTIL",138,0)
 ... S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",139,0)
 ... S TEMP=""
"RTN","PXRMUTIL",140,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",141,0)
 .. S SYM(SYMP)=CHAR
"RTN","PXRMUTIL",142,0)
 . E  S TEMP=TEMP_CHAR
"RTN","PXRMUTIL",143,0)
 . I (IND=LEN)&(TEMP'="") D
"RTN","PXRMUTIL",144,0)
 .. S SYMP=SYMP+1
"RTN","PXRMUTIL",145,0)
 .. S SYM(SYMP)=TEMP
"RTN","PXRMUTIL",146,0)
 ;Process the symbols.
"RTN","PXRMUTIL",147,0)
 S (PFP,SP)=0
"RTN","PXRMUTIL",148,0)
 S LEN=SYMP
"RTN","PXRMUTIL",149,0)
 F SYMP=1:1:LEN D
"RTN","PXRMUTIL",150,0)
 . S SYMT=SYM(SYMP)
"RTN","PXRMUTIL",151,0)
 .;
"RTN","PXRMUTIL",152,0)
 .;Symbol is "("
"RTN","PXRMUTIL",153,0)
 . I SYMT="(" D  Q
"RTN","PXRMUTIL",154,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",155,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",156,0)
 .;
"RTN","PXRMUTIL",157,0)
 .;Symbol is an operator
"RTN","PXRMUTIL",158,0)
 . I OPER[SYMT D  Q
"RTN","PXRMUTIL",159,0)
 .. S LEN=SP
"RTN","PXRMUTIL",160,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",161,0)
 ...;M has no operator precedence so we don't need to check.
"RTN","PXRMUTIL",162,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",163,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",164,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",165,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",166,0)
 .. S SP=SP+1
"RTN","PXRMUTIL",167,0)
 .. S STACK(SP)=SYMT
"RTN","PXRMUTIL",168,0)
 .;
"RTN","PXRMUTIL",169,0)
 .;Symbol is ")"
"RTN","PXRMUTIL",170,0)
 . I SYMT=")" D  Q
"RTN","PXRMUTIL",171,0)
 .. S LEN=SP
"RTN","PXRMUTIL",172,0)
 .. F IND=LEN:-1:1 S TEMP=STACK(IND) Q:TEMP="("  D
"RTN","PXRMUTIL",173,0)
 ... S PFP=PFP+1
"RTN","PXRMUTIL",174,0)
 ... S PFSTACK(PFP)=TEMP
"RTN","PXRMUTIL",175,0)
 ... K STACK(SP)
"RTN","PXRMUTIL",176,0)
 ... S SP=SP-1
"RTN","PXRMUTIL",177,0)
 ..;Pop the "(" at the top of the stack.
"RTN","PXRMUTIL",178,0)
 .. K STACK(SP)
"RTN","PXRMUTIL",179,0)
 .. S SP=SP-1
"RTN","PXRMUTIL",180,0)
 .;
"RTN","PXRMUTIL",181,0)
 .;If we get to here then symbol is an operand.
"RTN","PXRMUTIL",182,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",183,0)
 . S PFSTACK(PFP)=SYMT
"RTN","PXRMUTIL",184,0)
 ;
"RTN","PXRMUTIL",185,0)
 ;Pop and output anything left on the stack.
"RTN","PXRMUTIL",186,0)
 F IND=SP:-1:1 D
"RTN","PXRMUTIL",187,0)
 . S PFP=PFP+1
"RTN","PXRMUTIL",188,0)
 . S PFSTACK(PFP)=STACK(IND)
"RTN","PXRMUTIL",189,0)
 ;
"RTN","PXRMUTIL",190,0)
 ;Save the number of elements in PFSTACK.
"RTN","PXRMUTIL",191,0)
 S PFSTACK(0)=PFP
"RTN","PXRMUTIL",192,0)
 Q
"RTN","PXRMUTIL",193,0)
 ;
"RTN","PXRMUTIL",194,0)
 ;=======================================================================
"RTN","PXRMUTIL",195,0)
SORT(N,ARRAY,KEY) ;Sort an ARRAY with N elements into ascending order,
"RTN","PXRMUTIL",196,0)
 ;return the number of unique elements. KEY is the piece of ARRAY on
"RTN","PXRMUTIL",197,0)
 ;which to base the sort. The default is the first piece.
"RTN","PXRMUTIL",198,0)
 ;
"RTN","PXRMUTIL",199,0)
 I (N'>0)!(N=1) Q N
"RTN","PXRMUTIL",200,0)
 N IC,IND,TEMP
"RTN","PXRMUTIL",201,0)
 I '$D(KEY) S KEY=1
"RTN","PXRMUTIL",202,0)
 F IC=1:1:N D
"RTN","PXRMUTIL",203,0)
 . S TEMP=@ARRAY@(IC)
"RTN","PXRMUTIL",204,0)
 . S ^TMP($J,"SORT",$P(TEMP,U,KEY))=TEMP
"RTN","PXRMUTIL",205,0)
 S IND=""
"RTN","PXRMUTIL",206,0)
 F IC=1:1 S IND=$O(^TMP($J,"SORT",IND)) Q:IND=""  D
"RTN","PXRMUTIL",207,0)
 . S @ARRAY@(IC)=^TMP($J,"SORT",IND)
"RTN","PXRMUTIL",208,0)
 K ^TMP($J,"SORT")
"RTN","PXRMUTIL",209,0)
 ;Get rid of any redundant elements.
"RTN","PXRMUTIL",210,0)
 F IND=IC:1:N K @ARRAY@(IND)
"RTN","PXRMUTIL",211,0)
 Q IC-1
"RTN","PXRMUTIL",212,0)
 ;
"RTN","PXRMUTIL",213,0)
 ;=======================================================================
"RTN","PXRMUTIL",214,0)
STRREP(STRING,TS,RS) ;Replace every occurence of the target string (TS)
"RTN","PXRMUTIL",215,0)
 ;in STRING with the replacement string (RS).
"RTN","PXRMUTIL",216,0)
 ;Example 9.19 (page 220) in "The Complete Mumps" by John Lewkowicz:
"RTN","PXRMUTIL",217,0)
 ;  F  Q:STRING'[TS  S STRING=$P(STRING,TS)_RS_$P(STRING,TS,2,999)
"RTN","PXRMUTIL",218,0)
 ;fails if any portion of the target string is contained in the with
"RTN","PXRMUTIL",219,0)
 ;string. Therefore a more elaborate version is required.
"RTN","PXRMUTIL",220,0)
 ;
"RTN","PXRMUTIL",221,0)
 N IND,NPCS,STR
"RTN","PXRMUTIL",222,0)
 I STRING'[TS Q STRING
"RTN","PXRMUTIL",223,0)
 ;Count the number of pieces using the target string as the delimiter.
"RTN","PXRMUTIL",224,0)
 S NPCS=$L(STRING,TS)
"RTN","PXRMUTIL",225,0)
 ;Extract the pieces and concatenate RS
"RTN","PXRMUTIL",226,0)
 S STR=""
"RTN","PXRMUTIL",227,0)
 F IND=1:1:NPCS-1 S STR=STR_$P(STRING,TS,IND)_RS
"RTN","PXRMUTIL",228,0)
 S STR=STR_$P(STRING,TS,NPCS)
"RTN","PXRMUTIL",229,0)
 Q STR
"RTN","PXRMUTIL",230,0)
 ;
"RTN","PXRMV1I")
1^49
"RTN","PXRMV1IA")
1^50
"RTN","PXRMV1ID")
1^51
"RTN","PXRMV1IE")
1^52
"RTN","PXRMV1IG")
1^53
"RTN","PXRMV1IH")
1^54
"RTN","PXRMV1X")
1^55
"RTN","PXRMV1X1")
1^56
"RTN","PXRMVCPT")
0^23^B6054986
"RTN","PXRMVCPT",1,0)
PXRMVCPT ; SLC/PKR - Code to handle VCPT data. ;10/03/2000
"RTN","PXRMVCPT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMVCPT",3,0)
 ;
"RTN","PXRMVCPT",4,0)
 ;=======================================================================
"RTN","PXRMVCPT",5,0)
EVAL(DFN,TAXIEN,FLIST) ;Evaluate V CPT entries.
"RTN","PXRMVCPT",6,0)
 N FIRST,ICPTP,INVDATE,LAST,TLIST,VCPTIEN,VDATE,VIEN
"RTN","PXRMVCPT",7,0)
 I '$D(^AUPNVCPT("AA",DFN)) Q
"RTN","PXRMVCPT",8,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMVCPT",9,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMVCPT",10,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMVCPT",11,0)
 ;match limits.
"RTN","PXRMVCPT",12,0)
 S FIRST=$O(^AUPNVCPT("AA",DFN,""))
"RTN","PXRMVCPT",13,0)
 S LAST=$O(^AUPNVCPT("AA",DFN,""),-1)
"RTN","PXRMVCPT",14,0)
 S ICPTP=FIRST-1
"RTN","PXRMVCPT",15,0)
 F  S ICPTP=$O(^PXD(811.3,TAXIEN,81,"ICPTP",ICPTP)) Q:(ICPTP>LAST)!(ICPTP="")  D
"RTN","PXRMVCPT",16,0)
 . S INVDATE=+$O(^AUPNVCPT("AA",DFN,ICPTP,""))
"RTN","PXRMVCPT",17,0)
 . I INVDATE>0 D
"RTN","PXRMVCPT",18,0)
 .. S VCPTIEN=$O(^AUPNVCPT("AA",DFN,ICPTP,INVDATE,""))
"RTN","PXRMVCPT",19,0)
 .. S VIEN=$P(^AUPNVCPT(VCPTIEN,0),U,3)
"RTN","PXRMVCPT",20,0)
 .. S VDATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMVCPT",21,0)
 .. S TLIST(INVDATE)=VCPTIEN_U_VIEN_U_VDATE_U_ICPTP
"RTN","PXRMVCPT",22,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMVCPT",23,0)
 ;Return the most recent entry only.
"RTN","PXRMVCPT",24,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMVCPT",25,0)
 ;If there are no entries we are done.
"RTN","PXRMVCPT",26,0)
 I INVDATE="" Q
"RTN","PXRMVCPT",27,0)
 S FLIST(INVDATE,"AUPNVCPT")=TLIST(INVDATE)
"RTN","PXRMVCPT",28,0)
 Q
"RTN","PXRMVCPT",29,0)
 ;
"RTN","PXRMVCPT",30,0)
 ;======================================================================
"RTN","PXRMVCPT",31,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMVCPT",32,0)
 ;maintenance output. The VCPT information is:  DATE, ICPT CODE,
"RTN","PXRMVCPT",33,0)
 ;SHORT NAME, PROVIDER NARRATIVE.
"RTN","PXRMVCPT",34,0)
 N CODE,CPT,CPTDATA,D0,ICPTP,FIEN,PN,SNAME,TEMP,VDATE
"RTN","PXRMVCPT",35,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMVCPT",36,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMVCPT",37,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVCPT",38,0)
 S TEMP=TEMP_" Encounter Procedure: "
"RTN","PXRMVCPT",39,0)
 S D0=$G(^AUPNVCPT(FIEN,0))
"RTN","PXRMVCPT",40,0)
 S ICPTP=FIEVAL(FINDING,"CODEP")
"RTN","PXRMVCPT",41,0)
 S CPTDATA=$$CPT^ICPTCOD(ICPTP)
"RTN","PXRMVCPT",42,0)
 S CODE=$P(CPTDATA,U,2)
"RTN","PXRMVCPT",43,0)
 S SNAME=$P(CPTDATA,U,3)
"RTN","PXRMVCPT",44,0)
 S TEMP=TEMP_CODE
"RTN","PXRMVCPT",45,0)
 S TEMP=TEMP_"-"_SNAME
"RTN","PXRMVCPT",46,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMVCPT",47,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMVCPT",48,0)
 S NLINES=NLINES+1
"RTN","PXRMVCPT",49,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMVCPT",50,0)
 S PN=$P(D0,U,4)
"RTN","PXRMVCPT",51,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMVCPT",52,0)
 I ($L(PN)>0)&(PN'=SNAME) D
"RTN","PXRMVCPT",53,0)
 . S NLINES=NLINES+1
"RTN","PXRMVCPT",54,0)
 . S TEXT(NLINES)="  Prov. Narr. - "_PN
"RTN","PXRMVCPT",55,0)
 I $D(PXRMDEV) D
"RTN","PXRMVCPT",56,0)
 . N UID
"RTN","PXRMVCPT",57,0)
 . S UID="CPTVCPT "_ICPTP
"RTN","PXRMVCPT",58,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMVCPT",59,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMVCPT",60,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMVCPT",61,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"SNAME")=SNAME
"RTN","PXRMVCPT",62,0)
 ;
"RTN","PXRMVCPT",63,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMVCPT",64,0)
 I VDATE["E" D
"RTN","PXRMVCPT",65,0)
 . N INDEX,VIEN
"RTN","PXRMVCPT",66,0)
 . S INDEX="CPTVCPT-"_CODE
"RTN","PXRMVCPT",67,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMVCPT",68,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMVCPT",69,0)
 Q
"RTN","PXRMVCPT",70,0)
 ;
"RTN","PXRMVPOV")
0^24^B11449901
"RTN","PXRMVPOV",1,0)
PXRMVPOV ; SLC/PKR - Code to handle VPOV ;10/03/2000
"RTN","PXRMVPOV",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMVPOV",3,0)
 ;
"RTN","PXRMVPOV",4,0)
 ;======================================================================
"RTN","PXRMVPOV",5,0)
BLDPC(DFN) ;Check and if necessary build the V POV patient cache.
"RTN","PXRMVPOV",6,0)
 N ICD9P,IEN,INVDATE,NPATIEN,PS,TEMP,VIEN,VDATE,VPOVIEN
"RTN","PXRMVPOV",7,0)
 I '$D(^XTMP(PXRMDFN,"VPOV","NPATIEN")) D
"RTN","PXRMVPOV",8,0)
 . K ^TMP($J,"VPOV"),^XTMP(PXRMDFN,"VPOV")
"RTN","PXRMVPOV",9,0)
 . S INVDATE=""
"RTN","PXRMVPOV",10,0)
 . F  S INVDATE=$O(^AUPNVPOV("AA",DFN,INVDATE)) Q:INVDATE=""  D
"RTN","PXRMVPOV",11,0)
 .. S VPOVIEN=""
"RTN","PXRMVPOV",12,0)
 .. F  S VPOVIEN=$O(^AUPNVPOV("AA",DFN,INVDATE,VPOVIEN)) Q:VPOVIEN=""  D
"RTN","PXRMVPOV",13,0)
 ... S TEMP=$G(^AUPNVPOV(VPOVIEN,0))
"RTN","PXRMVPOV",14,0)
 ... S ICD9P=$P(TEMP,U,1)
"RTN","PXRMVPOV",15,0)
 ... S VIEN=$P(TEMP,U,3)
"RTN","PXRMVPOV",16,0)
 ... S PS=$P(TEMP,U,12)
"RTN","PXRMVPOV",17,0)
 ... S VDATE=$$VDATE^PXRMDATE(VIEN)
"RTN","PXRMVPOV",18,0)
 ... S ^TMP($J,"VPOV",ICD9P,INVDATE)=VPOVIEN_U_VIEN_U_VDATE_U_ICD9P_U_PS
"RTN","PXRMVPOV",19,0)
 .;Build the list of most recent entries.
"RTN","PXRMVPOV",20,0)
 . S NPATIEN=0
"RTN","PXRMVPOV",21,0)
 . S ICD9P=""
"RTN","PXRMVPOV",22,0)
 . F  S ICD9P=$O(^TMP($J,"VPOV",ICD9P)) Q:ICD9P=""  D
"RTN","PXRMVPOV",23,0)
 .. S NPATIEN=NPATIEN+1
"RTN","PXRMVPOV",24,0)
 .. S INVDATE=$O(^TMP($J,"VPOV",ICD9P,""))
"RTN","PXRMVPOV",25,0)
 .. S ^XTMP(PXRMDFN,"VPOV",ICD9P,INVDATE)=^TMP($J,"VPOV",ICD9P,INVDATE)
"RTN","PXRMVPOV",26,0)
 . S ^XTMP(PXRMDFN,"VPOV","NPATIEN")=NPATIEN
"RTN","PXRMVPOV",27,0)
 . K ^TMP($J,"VPOV")
"RTN","PXRMVPOV",28,0)
 E  S NPATIEN=^XTMP(PXRMDFN,"VPOV","NPATIEN")
"RTN","PXRMVPOV",29,0)
 Q NPATIEN
"RTN","PXRMVPOV",30,0)
 ;
"RTN","PXRMVPOV",31,0)
 ;======================================================================
"RTN","PXRMVPOV",32,0)
EVAL(DFN,TAXIEN,FLIST) ;Evaluate V POV entries.
"RTN","PXRMVPOV",33,0)
 N FIRST,ICD9P,INVDATE,LAST,NPATIEN,PDS,TEMP,TLIST
"RTN","PXRMVPOV",34,0)
 ;
"RTN","PXRMVPOV",35,0)
 S NPATIEN=$$BLDPC(DFN)
"RTN","PXRMVPOV",36,0)
 I NPATIEN=0 Q
"RTN","PXRMVPOV",37,0)
 ;Lock the expanded taxonomy cache.
"RTN","PXRMVPOV",38,0)
 I '$$LOCKXTL^PXRMBXTL(TAXIEN) Q
"RTN","PXRMVPOV",39,0)
 ;See if we are looking for primary only. The code is "P" for primary.
"RTN","PXRMVPOV",40,0)
 I $P(^PXD(811.2,TAXIEN,0),U,4)["ENPR" S PDS="P"
"RTN","PXRMVPOV",41,0)
 E  S PDS=""
"RTN","PXRMVPOV",42,0)
 ;Get the first and last entry in the patient cache, use this for the
"RTN","PXRMVPOV",43,0)
 ;match limits.
"RTN","PXRMVPOV",44,0)
 S FIRST=$O(^XTMP(PXRMDFN,"VPOV",""))
"RTN","PXRMVPOV",45,0)
 S LAST=$O(^XTMP(PXRMDFN,"VPOV","NPATIEN"),-1)
"RTN","PXRMVPOV",46,0)
 S ICD9P=FIRST-1
"RTN","PXRMVPOV",47,0)
 F  S ICD9P=$O(^PXD(811.3,TAXIEN,80,"ICD9P",ICD9P)) Q:(ICD9P>LAST)!(ICD9P="")  D
"RTN","PXRMVPOV",48,0)
 . S INVDATE=+$O(^XTMP(PXRMDFN,"VPOV",ICD9P,""))
"RTN","PXRMVPOV",49,0)
 . I INVDATE>0 D
"RTN","PXRMVPOV",50,0)
 .. S TEMP=^XTMP(PXRMDFN,"VPOV",ICD9P,INVDATE)
"RTN","PXRMVPOV",51,0)
 .. I (PDS="")!(PDS=$P(TEMP,U,5)) S TLIST(INVDATE)=TEMP
"RTN","PXRMVPOV",52,0)
 D ULOCKXTL^PXRMBXTL(TAXIEN)
"RTN","PXRMVPOV",53,0)
 ;Return the most recent entry only.
"RTN","PXRMVPOV",54,0)
 S INVDATE=$O(TLIST(""))
"RTN","PXRMVPOV",55,0)
 ;If there are no entries we are done.
"RTN","PXRMVPOV",56,0)
 I INVDATE="" Q
"RTN","PXRMVPOV",57,0)
 S FLIST(INVDATE,"AUPNVPOV")=TLIST(INVDATE)
"RTN","PXRMVPOV",58,0)
 Q
"RTN","PXRMVPOV",59,0)
 ;
"RTN","PXRMVPOV",60,0)
 ;======================================================================
"RTN","PXRMVPOV",61,0)
OUTPUT(NLINES,TEXT,FINDING,FIEVAL) ;Produce the clinical
"RTN","PXRMVPOV",62,0)
 ;maintenance output. The VPOV information is:  DATE, ICD9 IEN, 
"RTN","PXRMVPOV",63,0)
 ;ICD9 CODE, MODIFIER, PROVIDER NARRATIVE.
"RTN","PXRMVPOV",64,0)
 N CODE,D0,DIAG,FIEN,ICD9P,ICD9ZN,PN,TEMP,VDATE
"RTN","PXRMVPOV",65,0)
 S FIEN=$P(FIEVAL(FINDING,"SOURCE"),";",1)
"RTN","PXRMVPOV",66,0)
 S VDATE=FIEVAL(FINDING,"DATE")
"RTN","PXRMVPOV",67,0)
 S TEMP=$$EDATE^PXRMDATE(VDATE)
"RTN","PXRMVPOV",68,0)
 S TEMP=TEMP_" Encounter Diagnosis: "
"RTN","PXRMVPOV",69,0)
 S ICD9P=FIEVAL(FINDING,"CODEP")
"RTN","PXRMVPOV",70,0)
 S D0=$G(^AUPNVPOV(FIEN,0))
"RTN","PXRMVPOV",71,0)
 S ICD9ZN=$$GET0^PXRMICD9(ICD9P)
"RTN","PXRMVPOV",72,0)
 S CODE=$P(ICD9ZN,U,1)
"RTN","PXRMVPOV",73,0)
 S DIAG=$P(ICD9ZN,U,3)
"RTN","PXRMVPOV",74,0)
 S TEMP=TEMP_CODE_" "_DIAG
"RTN","PXRMVPOV",75,0)
 ;If the finding has expired add "EXPIRED"
"RTN","PXRMVPOV",76,0)
 I $D(FIEVAL(FINDING,"EXPIRED")) S TEMP=TEMP_" - EXPIRED"
"RTN","PXRMVPOV",77,0)
 S NLINES=NLINES+1
"RTN","PXRMVPOV",78,0)
 S TEXT(NLINES)=TEMP
"RTN","PXRMVPOV",79,0)
 S PN=$P(D0,U,4)
"RTN","PXRMVPOV",80,0)
 S PN=$P(^AUTNPOV(PN,0),U,1)
"RTN","PXRMVPOV",81,0)
 I ($L(PN)>0)&(PN'=DIAG) D
"RTN","PXRMVPOV",82,0)
 . S NLINES=NLINES+1
"RTN","PXRMVPOV",83,0)
 . S TEXT(NLINES)="  Prov. Narr. - "_PN
"RTN","PXRMVPOV",84,0)
 I $D(PXRMDEV) D
"RTN","PXRMVPOV",85,0)
 . N UID
"RTN","PXRMVPOV",86,0)
 . S UID="ICD9VPOV "_CODE
"RTN","PXRMVPOV",87,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"CODE")=CODE
"RTN","PXRMVPOV",88,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DATE")=VDATE
"RTN","PXRMVPOV",89,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"DIAG")=DIAG
"RTN","PXRMVPOV",90,0)
 . S ^TMP(PXRMPID,$J,PXRMITEM,UID,"PN")=PN
"RTN","PXRMVPOV",91,0)
 ;
"RTN","PXRMVPOV",92,0)
 ;For historical encounters display the location and comments.
"RTN","PXRMVPOV",93,0)
 I VDATE["E" D
"RTN","PXRMVPOV",94,0)
 . N INDEX,VIEN
"RTN","PXRMVPOV",95,0)
 . S INDEX="ICD9VPOV-"_DIAG
"RTN","PXRMVPOV",96,0)
 . S VIEN=FIEVAL(FINDING,"VIEN")
"RTN","PXRMVPOV",97,0)
 . D HLCV^PXRMVSIT(.NLINES,.TEXT,VIEN,INDEX)
"RTN","PXRMVPOV",98,0)
 Q
"RTN","PXRMVPOV",99,0)
 ;
"RTN","PXRMVPTR")
0^77^B1695071
"RTN","PXRMVPTR",1,0)
PXRMVPTR ; SLC/PKR - Routines for dealing with variable pointers. ; 02/06/2001
"RTN","PXRMVPTR",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMVPTR",3,0)
 ;
"RTN","PXRMVPTR",4,0)
 ;=======================================================================
"RTN","PXRMVPTR",5,0)
BLDALIST(FILE,FIELD,LIST) ;Build a list of variable pointer information
"RTN","PXRMVPTR",6,0)
 ;indexed by the abbreviation.
"RTN","PXRMVPTR",7,0)
 N ABBR,FN,IND,ROOT,TEMP
"RTN","PXRMVPTR",8,0)
 S IND=0
"RTN","PXRMVPTR",9,0)
 F  S IND=$O(^DD(FILE,FIELD,"V",IND)) Q:+IND=0  D
"RTN","PXRMVPTR",10,0)
 . S TEMP=^DD(FILE,FIELD,"V",IND,0)
"RTN","PXRMVPTR",11,0)
 . S FN=$P(TEMP,U,1)
"RTN","PXRMVPTR",12,0)
 . S ROOT=$$ROOT^DILFD(FN)
"RTN","PXRMVPTR",13,0)
 . S ROOT=$P(ROOT,"^",2)
"RTN","PXRMVPTR",14,0)
 . S ABBR=$P(TEMP,U,4)
"RTN","PXRMVPTR",15,0)
 . S LIST(ABBR)=TEMP
"RTN","PXRMVPTR",16,0)
 Q
"RTN","PXRMVPTR",17,0)
 ;
"RTN","PXRMVPTR",18,0)
 ;=======================================================================
"RTN","PXRMVPTR",19,0)
BLDNLIST(FILE,FIELD,LIST) ;Build a list of variable pointer information
"RTN","PXRMVPTR",20,0)
 ;indexed by the file number.
"RTN","PXRMVPTR",21,0)
 N FN,IND,ROOT,TEMP
"RTN","PXRMVPTR",22,0)
 S IND=0
"RTN","PXRMVPTR",23,0)
 F  S IND=$O(^DD(FILE,FIELD,"V",IND)) Q:+IND=0  D
"RTN","PXRMVPTR",24,0)
 . S TEMP=^DD(FILE,FIELD,"V",IND,0)
"RTN","PXRMVPTR",25,0)
 . S FN=$P(TEMP,U,1)
"RTN","PXRMVPTR",26,0)
 . S ROOT=$$ROOT^DILFD(FN)
"RTN","PXRMVPTR",27,0)
 . S ROOT=$P(ROOT,"^",2)
"RTN","PXRMVPTR",28,0)
 . S LIST(FN)=TEMP
"RTN","PXRMVPTR",29,0)
 Q
"RTN","PXRMVPTR",30,0)
 ;
"RTN","PXRMVPTR",31,0)
 ;=======================================================================
"RTN","PXRMVPTR",32,0)
BLDRLIST(FILE,FIELD,LIST) ;Build a list of variable pointer information
"RTN","PXRMVPTR",33,0)
 ;indexed by the root.
"RTN","PXRMVPTR",34,0)
 N FN,IND,ROOT,TEMP
"RTN","PXRMVPTR",35,0)
 S IND=0
"RTN","PXRMVPTR",36,0)
 F  S IND=$O(^DD(FILE,FIELD,"V",IND)) Q:+IND=0  D
"RTN","PXRMVPTR",37,0)
 . S TEMP=^DD(FILE,FIELD,"V",IND,0)
"RTN","PXRMVPTR",38,0)
 . S FN=$P(TEMP,U,1)
"RTN","PXRMVPTR",39,0)
 . S ROOT=$$ROOT^DILFD(FN)
"RTN","PXRMVPTR",40,0)
 . S ROOT=$P(ROOT,"^",2)
"RTN","PXRMVPTR",41,0)
 . S LIST(ROOT)=TEMP
"RTN","PXRMVPTR",42,0)
 Q
"RTN","PXRMVPTR",43,0)
 ;
"RTN","PXRMVSIT")
0^79^B1766365
"RTN","PXRMVSIT",1,0)
PXRMVSIT ; SLC/PKR - Visit related info for reminders. ;03/01/2001
"RTN","PXRMVSIT",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMVSIT",3,0)
 ;
"RTN","PXRMVSIT",4,0)
 ;=======================================================================
"RTN","PXRMVSIT",5,0)
HLCV(NLINES,TEXT,VIEN,INDEX) ;Display location and comment for historical
"RTN","PXRMVSIT",6,0)
 ;encounters associated with the V files.
"RTN","PXRMVSIT",7,0)
 N COMMENT,FACILITY,LOCATION
"RTN","PXRMVSIT",8,0)
 S FACILITY=$P($G(^AUPNVSIT(VIEN,0)),U,6)
"RTN","PXRMVSIT",9,0)
 I FACILITY'="" S LOCATION=$$GET1^DIQ(4,FACILITY,.01)_" "_$$GET1^DIQ(4,FACILITY,99)
"RTN","PXRMVSIT",10,0)
 E  S LOCATION=$G(^AUPNVSIT(VIEN,22))
"RTN","PXRMVSIT",11,0)
 I $L(LOCATION)>0 D
"RTN","PXRMVSIT",12,0)
 . S NLINES=NLINES+1
"RTN","PXRMVSIT",13,0)
 . S TEXT(NLINES)="   Historical Encounter Location: "_LOCATION
"RTN","PXRMVSIT",14,0)
 I $D(^AUPNVSIT(VIEN,811)) D
"RTN","PXRMVSIT",15,0)
 . S COMMENT=^AUPNVSIT(VIEN,811)
"RTN","PXRMVSIT",16,0)
 . S NLINES=NLINES+1
"RTN","PXRMVSIT",17,0)
 . S TEXT(NLINES)="   Comment:  "_COMMENT
"RTN","PXRMVSIT",18,0)
 . I $D(PXRMDEV) D
"RTN","PXRMVSIT",19,0)
 .. N UID
"RTN","PXRMVSIT",20,0)
 .. S UID="HEINFO VISIT "_VIEN
"RTN","PXRMVSIT",21,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID,INDEX,"COMMENT")=$G(COMMENT)
"RTN","PXRMVSIT",22,0)
 .. S ^TMP(PXRMPID,$J,PXRMITEM,UID,INDEX,"LOCATION")=$G(LOCATION)
"RTN","PXRMVSIT",23,0)
 Q
"RTN","PXRMVSIT",24,0)
 ;
"RTN","PXRMVSIT",25,0)
 ;=======================================================================
"RTN","PXRMVSIT",26,0)
ISHIST(VIEN) ;Return true if the encounter was historical.
"RTN","PXRMVSIT",27,0)
 I $P($G(^AUPNVSIT(VIEN,0)),U,7)="E" Q 1
"RTN","PXRMVSIT",28,0)
 E  Q 0
"RTN","PXRMVSIT",29,0)
 ;
"RTN","PXRMXAP")
0^46^B9535073
"RTN","PXRMXAP",1,0)
PXRMXAP ; SLC/PJH - Reminder Reports APIs;06/26/2000
"RTN","PXRMXAP",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMXAP",3,0)
 ;
"RTN","PXRMXAP",4,0)
 ; Called from PXRMSU
"RTN","PXRMXAP",5,0)
 ;
"RTN","PXRMXAP",6,0)
FACT ;Check PCMM Team ^SCTM(404.51 for facility ; DBIA 2795
"RTN","PXRMXAP",7,0)
 S DIC("S")=DIC("S")_",$D(PXRMFACN(+$P(^(0),U,7)))"
"RTN","PXRMXAP",8,0)
 Q
"RTN","PXRMXAP",9,0)
 ;
"RTN","PXRMXAP",10,0)
LOCN(ARRAY) ;Check for mixed inpatient/outpatient locations ; DBIA 10040
"RTN","PXRMXAP",11,0)
 N IC,IEN,MIXED,TYPE
"RTN","PXRMXAP",12,0)
 S IC=0,MIXED=0,TYPE=0
"RTN","PXRMXAP",13,0)
 F  S IC=$O(ARRAY(IC)) Q:IC=""  D  Q:MIXED
"RTN","PXRMXAP",14,0)
 .S IEN=$P(ARRAY(IC),U,2) Q:IEN=""
"RTN","PXRMXAP",15,0)
 .I TYPE=0,$D(^SC(IEN,42)) S TYPE="INPATIENT" Q
"RTN","PXRMXAP",16,0)
 .I TYPE=0,'$D(^SC(IEN,42)) S TYPE="OUTPATIENT" Q
"RTN","PXRMXAP",17,0)
 .I TYPE="INPATIENT",'$D(^SC(IEN,42)) S MIXED=1 Q
"RTN","PXRMXAP",18,0)
 .I TYPE="OUTPATIENT",$D(^SC(IEN,42)) S MIXED=1 Q
"RTN","PXRMXAP",19,0)
 Q MIXED
"RTN","PXRMXAP",20,0)
 ;
"RTN","PXRMXAP",21,0)
 ; Called from PXRMSEO
"RTN","PXRMXAP",22,0)
 ;
"RTN","PXRMXAP",23,0)
FAC(TIEN) ; Get Facility for the PCMM Team ; DBIA 2795
"RTN","PXRMXAP",24,0)
 Q $P($G(^SCTM(404.51,TIEN,0)),U,7)
"RTN","PXRMXAP",25,0)
 ;
"RTN","PXRMXAP",26,0)
PCASSIGN(DFN) ; Assigned to Provider as Primary Care ; DBIA 1916
"RTN","PXRMXAP",27,0)
 N PCVAR,PC S PC=0
"RTN","PXRMXAP",28,0)
 S PCVAR=$$OUTPTPR^SDUTL3(DFN)
"RTN","PXRMXAP",29,0)
 I PCVAR]"" S:$P(PCVAR,U)=PCM PC=1
"RTN","PXRMXAP",30,0)
 Q PC
"RTN","PXRMXAP",31,0)
 ; 
"RTN","PXRMXAP",32,0)
PTTM(TIEN,SCERR) ; Build list of Teams Patients ; DBIA 1916
"RTN","PXRMXAP",33,0)
 Q $$PTTM^SCAPMC(TIEN,"SCDT","^TMP($J,""PCM"")",.SCERR)
"RTN","PXRMXAP",34,0)
 ;
"RTN","PXRMXAP",35,0)
PTPR(PIEN,PXRMREP) ; Build list of practitioners patients ; DBIA 1916
"RTN","PXRMXAP",36,0)
 N SCERRD,OK
"RTN","PXRMXAP",37,0)
 S OK=$$PTPR^SCAPMC(PIEN,"SCDT","","","^TMP($J,""PCM"")",.SCERRD)
"RTN","PXRMXAP",38,0)
 ;
"RTN","PXRMXAP",39,0)
 ; Determine Associated Clinic from Team Position/Team Position Assign
"RTN","PXRMXAP",40,0)
 I PXRMREP="D" D
"RTN","PXRMXAP",41,0)
 .N SUB,SCTP,SCTPA,DCLN
"RTN","PXRMXAP",42,0)
 .S SUB=0
"RTN","PXRMXAP",43,0)
 .F  S SUB=$O(^TMP($J,"PCM",SUB)) Q:'SUB  D
"RTN","PXRMXAP",44,0)
 ..S SCTP=$P(^TMP($J,"PCM",SUB),U,3) Q:SCTP=""
"RTN","PXRMXAP",45,0)
 ..S SCTPA=$P($G(^SCPT(404.43,SCTP,0)),U,2) Q:SCTPA=""  ; DBIA 2811
"RTN","PXRMXAP",46,0)
 ..S DCLN=$P($G(^SCTM(404.57,SCTPA,0)),U,9) ; DBIA 2810
"RTN","PXRMXAP",47,0)
 ..S $P(^TMP($J,"PCM",SUB),U,7)=DCLN
"RTN","PXRMXAP",48,0)
 Q
"RTN","PXRMXAP",49,0)
 ;
"RTN","PXRMXAP",50,0)
 ; Called from PXRMXD/PXRMYD
"RTN","PXRMXAP",51,0)
 ;
"RTN","PXRMXAP",52,0)
INP(INP,PXRMLOCN) ;
"RTN","PXRMXAP",53,0)
 ;If selected locations check for wards ; DBIA 10040
"RTN","PXRMXAP",54,0)
 N LOC,WARD
"RTN","PXRMXAP",55,0)
 S LOC="",WARD=0
"RTN","PXRMXAP",56,0)
 ; All locations must be wards for the prompt to display
"RTN","PXRMXAP",57,0)
 F  S LOC=$O(PXRMLOCN(LOC)) Q:LOC=""  D  Q:'WARD
"RTN","PXRMXAP",58,0)
 .S WARD=0 I $D(^SC(LOC,42)) S WARD=1
"RTN","PXRMXAP",59,0)
 Q WARD
"RTN","PXRMXAP",60,0)
 ;
"RTN","PXRMXAP",61,0)
 ; Called from PXRMXSEL/PXRMYSEL
"RTN","PXRMXAP",62,0)
 ;
"RTN","PXRMXAP",63,0)
FACL(LOCIEN) ; Get locations facility ; DBIA 2804
"RTN","PXRMXAP",64,0)
 Q $P($G(^SC(LOCIEN,0)),U,4)
"RTN","PXRMXAP",65,0)
 ;
"RTN","PXRMXAP",66,0)
WARD(LOCIEN,ARRAY) ;Get list of patients if location is a ward ;DBIA 10035
"RTN","PXRMXAP",67,0)
 N WARDIEN,WARDNAM,DFN
"RTN","PXRMXAP",68,0)
 S WARDIEN=$G(^SC(LOCIEN,42)) Q:WARDIEN=""
"RTN","PXRMXAP",69,0)
 S WARDNAM=$P($G(^DIC(42,WARDIEN,0)),U) Q:WARDNAM=""
"RTN","PXRMXAP",70,0)
 S DFN=""
"RTN","PXRMXAP",71,0)
 F  S DFN=$O(^DPT("CN",WARDNAM,DFN)) Q:DFN=""  S ARRAY(DFN)=""
"RTN","PXRMXAP",72,0)
 Q
"RTN","PXRMXAP",73,0)
 ;
"RTN","PXRMXAP",74,0)
ADM(LOCIEN,ARRAY,BD,ED) ;Get list of admissions to ward ; DBIA 10040,1480
"RTN","PXRMXAP",75,0)
 N WARDIEN,DA,DATA,DFN
"RTN","PXRMXAP",76,0)
 S WARDIEN=$G(^SC(LOCIEN,42)) Q:WARDIEN=""
"RTN","PXRMXAP",77,0)
 F  S BD=$O(^DGPM("ATT1",BD)) Q:BD>ED  Q:BD=""  D
"RTN","PXRMXAP",78,0)
 .S DA=""
"RTN","PXRMXAP",79,0)
 .F  S DA=$O(^DGPM("ATT1",BD,DA)) Q:DA=""  D
"RTN","PXRMXAP",80,0)
 ..S DATA=$G(^DGPM(DA,0)) Q:DATA=""
"RTN","PXRMXAP",81,0)
 ..I $P(DATA,U,6)'=WARDIEN Q
"RTN","PXRMXAP",82,0)
 ..S DFN=$P(DATA,U,3) Q:DFN=""
"RTN","PXRMXAP",83,0)
 ..S ARRAY(DFN)=""
"RTN","PXRMXAP",84,0)
 Q
"RTN","PXRMXAP",85,0)
 ;
"RTN","PXRMXAP",86,0)
LCHL(INP,ARRAY) ;Get list of all inpatient or outpatient locations ; DBIA 10040
"RTN","PXRMXAP",87,0)
 N HLOCIEN,NAME,IC
"RTN","PXRMXAP",88,0)
 S HLOCIEN=0,IC=0
"RTN","PXRMXAP",89,0)
 F  S HLOCIEN=$O(^SC(HLOCIEN)) Q:'HLOCIEN  D
"RTN","PXRMXAP",90,0)
 .;Outpatient report ignores wards - HA
"RTN","PXRMXAP",91,0)
 .I INP=0,$D(^SC(HLOCIEN,42)) Q
"RTN","PXRMXAP",92,0)
 .;Inpatient report includes only wards - HAI
"RTN","PXRMXAP",93,0)
 .I INP=1,'$D(^SC(HLOCIEN,42)) Q
"RTN","PXRMXAP",94,0)
 .S NAME=$P($G(^SC(HLOCIEN,0)),U) I NAME="" Q
"RTN","PXRMXAP",95,0)
 .;Build array
"RTN","PXRMXAP",96,0)
 .S IC=IC+1,PXRMLCHL(IC)=NAME_U_HLOCIEN,PXRMLOCN(HLOCIEN)=IC
"RTN","PXRMXAP",97,0)
 Q
"RTN","PXRMXPR")
0^71^B34569004
"RTN","PXRMXPR",1,0)
PXRMXPR ; SLC/PJH - Print Reminder Due report. ;01/06/2001
"RTN","PXRMXPR",2,0)
 ;;1.5;CLINICAL REMINDERS;**2**;Jun 19, 2000
"RTN","PXRMXPR",3,0)
 ;
"RTN","PXRMXPR",4,0)
 ; Called/Jobbed after PXRMXSE
"RTN","PXRMXPR",5,0)
 ;
"RTN","PXRMXPR",6,0)
START N BMARG,C1S,C2S,C3S,C1HS,C2HS,C3HS,DONE,HEAD
"RTN","PXRMXPR",7,0)
 N INDENT,PAGE,MOD,DES,ADES,CDES,RDES,SDES,MATCH,MISSED
"RTN","PXRMXPR",8,0)
 ;
"RTN","PXRMXPR",9,0)
 N PXRMOPT,PXRMFLD,PXRMHDR,PXRMHDRS,PXRMT,PXRMH
"RTN","PXRMXPR",10,0)
 N BD,ED,SD,RD
"RTN","PXRMXPR",11,0)
 ;
"RTN","PXRMXPR",12,0)
 N PXRMTX
"RTN","PXRMXPR",13,0)
 S PXRMTX="due"
"RTN","PXRMXPR",14,0)
 ;
"RTN","PXRMXPR",15,0)
 ; Format Date Range
"RTN","PXRMXPR",16,0)
 I PXRMSEL="L" D
"RTN","PXRMXPR",17,0)
 .S BD=$$FMTE^XLFDT(PXRMBDT,"5D")
"RTN","PXRMXPR",18,0)
 .S ED=$$FMTE^XLFDT(PXRMEDT,"5D")
"RTN","PXRMXPR",19,0)
 ; Format due effective date
"RTN","PXRMXPR",20,0)
 S SD=$$FMTE^XLFDT(PXRMSDT,"5D")
"RTN","PXRMXPR",21,0)
 ; Format run date
"RTN","PXRMXPR",22,0)
 S RD=$$FMTE^XLFDT(PXRMXST,"5P")
"RTN","PXRMXPR",23,0)
 ;
"RTN","PXRMXPR",24,0)
 ;Allow the task to be cleaned up upon successful completion.
"RTN","PXRMXPR",25,0)
 S ZTREQ="@"
"RTN","PXRMXPR",26,0)
 ;
"RTN","PXRMXPR",27,0)
 U IO
"RTN","PXRMXPR",28,0)
 S DONE=0,MATCH=0
"RTN","PXRMXPR",29,0)
 ;
"RTN","PXRMXPR",30,0)
 ;Setup initial formatting parameters.
"RTN","PXRMXPR",31,0)
 S INDENT=3
"RTN","PXRMXPR",32,0)
 S BMARG=2,PAGE=0,HEAD=1
"RTN","PXRMXPR",33,0)
 ;
"RTN","PXRMXPR",34,0)
 ;
"RTN","PXRMXPR",35,0)
 I +$G(XQY)>0 N XQOPT D OP^XQCHK
"RTN","PXRMXPR",36,0)
 S PXRMOPT=$P($G(XQOPT),U,2)
"RTN","PXRMXPR",37,0)
 I ($L(PXRMOPT)>0)&(PXRMOPT'["Clinical") S PXRMOPT="Clinical "_PXRMOPT
"RTN","PXRMXPR",38,0)
 I PXRMREP="D" D
"RTN","PXRMXPR",39,0)
 .S RDES=$P(PXRMREM(1),U,2)
"RTN","PXRMXPR",40,0)
 .S PXRMOPT=PXRMOPT_" - Detailed Report"
"RTN","PXRMXPR",41,0)
 .N IC F IC=0,3,4 S PXRMH(IC)="",PXRMT(IC)=0
"RTN","PXRMXPR",42,0)
 .S PXRMH(1)="Date Due    Last Done   Next Appt"
"RTN","PXRMXPR",43,0)
 .S PXRMH(2)="--------    ---------   ---------"
"RTN","PXRMXPR",44,0)
 .F IC=1,2 S PXRMT(IC)=40
"RTN","PXRMXPR",45,0)
 .S ADES="Next Appointment only"
"RTN","PXRMXPR",46,0)
 .I PXRMFUT="Y" S ADES="All Future Appointments"
"RTN","PXRMXPR",47,0)
 .S SDES="Sorted by Patient Name"
"RTN","PXRMXPR",48,0)
 .I PXRMSRT="Y" S SDES="Sorted by Appointment Date"
"RTN","PXRMXPR",49,0)
 I PXRMREP="S" D
"RTN","PXRMXPR",50,0)
 .S PXRMOPT=PXRMOPT_" - Summary Report"
"RTN","PXRMXPR",51,0)
 .S PXRMH(0)="# Patients with Reminders",PXRMT(0)=50
"RTN","PXRMXPR",52,0)
 .S PXRMH(1)="Applicable           Due"
"RTN","PXRMXPR",53,0)
 .S PXRMH(2)="----------           ---"
"RTN","PXRMXPR",54,0)
 .N IC F IC=1,2 S PXRMT(IC)=50
"RTN","PXRMXPR",55,0)
 .S PXRMH(3)="Denominator"
"RTN","PXRMXPR",56,0)
 .S PXRMH(4)="-----------"
"RTN","PXRMXPR",57,0)
 .F IC=3,4 S PXRMT(IC)=0
"RTN","PXRMXPR",58,0)
 ;
"RTN","PXRMXPR",59,0)
 ;Print Criteria Page
"RTN","PXRMXPR",60,0)
 D PAGE^PXRMXGPR G:DONE EXIT
"RTN","PXRMXPR",61,0)
 D CRIT^PXRMXGPR(10) G:DONE EXIT
"RTN","PXRMXPR",62,0)
 ;
"RTN","PXRMXPR",63,0)
 ;Kill items marked as found
"RTN","PXRMXPR",64,0)
 K ^XTMP(PXRMXTMP,"MARKED AS FOUND")
"RTN","PXRMXPR",65,0)
 ;
"RTN","PXRMXPR",66,0)
 ;Setup the final formatting parameters.
"RTN","PXRMXPR",67,0)
 S C1HS=INDENT+3
"RTN","PXRMXPR",68,0)
 S C1S=0
"RTN","PXRMXPR",69,0)
 S C2HS=C1S+2
"RTN","PXRMXPR",70,0)
 S C2S=C2HS
"RTN","PXRMXPR",71,0)
 S C3HS=C2HS+5
"RTN","PXRMXPR",72,0)
 S C3S=C3HS
"RTN","PXRMXPR",73,0)
 S HEAD=1
"RTN","PXRMXPR",74,0)
 S INDENT=10
"RTN","PXRMXPR",75,0)
 ;
"RTN","PXRMXPR",76,0)
 ; Update last run date 
"RTN","PXRMXPR",77,0)
 I $G(PXRMTMP)'="" D UPD^PXRMXTU
"RTN","PXRMXPR",78,0)
 ;
"RTN","PXRMXPR",79,0)
 ; Get report detail from ^XTMP
"RTN","PXRMXPR",80,0)
 N PNAM,SUB,DFN,BID,NAM,FAC,MOD,SRT,TOTAL,APPL,FACPNAME,PX
"RTN","PXRMXPR",81,0)
 ; Set subroutine label from report format
"RTN","PXRMXPR",82,0)
 S MOD="SUMARY" I PXRMREP="D" S MOD="DETAIL"
"RTN","PXRMXPR",83,0)
 ;
"RTN","PXRMXPR",84,0)
 S FAC=0,PX="PXRM"
"RTN","PXRMXPR",85,0)
 F  S FAC=$O(^XTMP(PXRMXTMP,PX,FAC)) Q:FAC=""  Q:DONE  D
"RTN","PXRMXPR",86,0)
 .;Get facility name for Location and PCMM team report
"RTN","PXRMXPR",87,0)
 .I "TL"[PXRMSEL D
"RTN","PXRMXPR",88,0)
 ..S FACPNAME=$P(PXRMFACN(FAC),U,1)_"  "_$P(PXRMFACN(FAC),U,2)
"RTN","PXRMXPR",89,0)
 .;Report from ^XTMP - label MOD is DETAIL/SUMARY
"RTN","PXRMXPR",90,0)
 .S (PNAM,SUB,NAM,SRT)=""
"RTN","PXRMXPR",91,0)
 .I PXRMSEL="I" S SUB="PATIENT" D @MOD Q:DONE
"RTN","PXRMXPR",92,0)
 .I PXRMSEL'="I" D
"RTN","PXRMXPR",93,0)
 ..;Sort internal IENs into alpha order
"RTN","PXRMXPR",94,0)
 ..D XSORT
"RTN","PXRMXPR",95,0)
 ..F  S SRT=$O(^TMP($J,"SORT",SRT)) Q:SRT=""  Q:DONE  D
"RTN","PXRMXPR",96,0)
 ...S SUB=$G(^TMP($J,"SORT",SRT)) D @MOD
"RTN","PXRMXPR",97,0)
 ;
"RTN","PXRMXPR",98,0)
 ; Null report if no patients selected
"RTN","PXRMXPR",99,0)
 I ('DONE),$O(^XTMP(PXRMXTMP,PX,""))="" D NULL^PXRMXGPR G EXIT
"RTN","PXRMXPR",100,0)
 ; Report selected patient sample with no patients
"RTN","PXRMXPR",101,0)
 I MATCH D MATCH^PXRMXGPR(0)
"RTN","PXRMXPR",102,0)
 ;
"RTN","PXRMXPR",103,0)
EXIT D EXIT^PXRMXGUT
"RTN","PXRMXPR",104,0)
 D EOR^PXRMXGUT
"RTN","PXRMXPR",105,0)
 Q
"RTN","PXRMXPR",106,0)
 ;
"RTN","PXRMXPR",107,0)
 ;Report by Patient
"RTN","PXRMXPR",108,0)
 ;-----------------
"RTN","PXRMXPR",109,0)
DETAIL N JJ,VA,DATE,COUNT,DDAT
"RTN","PXRMXPR",110,0)
 ;
"RTN","PXRMXPR",111,0)
 N DDUE,DDONE,DNEXT,FDAT1,FDAT2,FDAT3
"RTN","PXRMXPR",112,0)
 ;
"RTN","PXRMXPR",113,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",114,0)
 S COUNT=$P(NAM,U,2),TOTAL=$P(NAM,U,3),APPL=$P(NAM,U,4),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",115,0)
 S DDAT="",JJ=0
"RTN","PXRMXPR",116,0)
 ; Get list of patients for each appointment date
"RTN","PXRMXPR",117,0)
 F  S DDAT=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT)) Q:DDAT=""  Q:DONE  D PAT
"RTN","PXRMXPR",118,0)
 ;
"RTN","PXRMXPR",119,0)
 ; No patients due
"RTN","PXRMXPR",120,0)
 I JJ=0 D:'DONE NONE^PXRMXGPR
"RTN","PXRMXPR",121,0)
 ; Total patients
"RTN","PXRMXPR",122,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",123,0)
 Q
"RTN","PXRMXPR",124,0)
 ;
"RTN","PXRMXPR",125,0)
 ;Extract and print patient detail
"RTN","PXRMXPR",126,0)
 ;--------------------------------
"RTN","PXRMXPR",127,0)
PAT F  S PNAM=$O(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM)) Q:PNAM=""  Q:DONE  D
"RTN","PXRMXPR",128,0)
 .S JJ=JJ+1
"RTN","PXRMXPR",129,0)
 .;Format print line
"RTN","PXRMXPR",130,0)
 .S (BID,FDAT1,FDAT2,FDAT3)="" I PNAM'["No patients found" D 
"RTN","PXRMXPR",131,0)
 ..S FDAT2="N/A",FDAT3="None"
"RTN","PXRMXPR",132,0)
 ..S DFN=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,DDAT,PNAM))
"RTN","PXRMXPR",133,0)
 ..S DDUE=$P(DFN,U,2),DDONE=$P(DFN,U,3),DNEXT=$P(DFN,U,4),DFN=$P(DFN,U,1)
"RTN","PXRMXPR",134,0)
 ..S BID="("_$P($G(^XTMP("PXRMDFN"_DFN,"SSN")),"-",3)_")"
"RTN","PXRMXPR",135,0)
 ..S FDAT1=$$FMTE^XLFDT(DDUE,"5D")
"RTN","PXRMXPR",136,0)
 ..I DDONE S FDAT2=$$FMTE^XLFDT(DDONE,"5D")
"RTN","PXRMXPR",137,0)
 ..I DNEXT S FDAT3=$$FMTE^XLFDT(DNEXT,"5D")
"RTN","PXRMXPR",138,0)
 .;Print
"RTN","PXRMXPR",139,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",140,0)
 .W !,JJ,?5,$E(PNAM,1,24)," ",BID,?40,FDAT1,?52,FDAT2
"RTN","PXRMXPR",141,0)
 .W:PXRMFUT'="Y" ?64,FDAT3
"RTN","PXRMXPR",142,0)
 .;---
"RTN","PXRMXPR",143,0)
 .; Future Appointments
"RTN","PXRMXPR",144,0)
 .I PXRMFUT="Y" D
"RTN","PXRMXPR",145,0)
 ..D SDA^VADPT
"RTN","PXRMXPR",146,0)
 ..N SUB,ADAT,ALOC,ATYP,FIRST,NONE
"RTN","PXRMXPR",147,0)
 ..S SUB=0,NONE=1,FIRST=1
"RTN","PXRMXPR",148,0)
 ..F  S SUB=$O(^UTILITY("VASD",$J,SUB)) Q:SUB=""  D
"RTN","PXRMXPR",149,0)
 ...S ADAT=$P(^UTILITY("VASD",$J,SUB,"I"),U)
"RTN","PXRMXPR",150,0)
 ...S ALOC=$P(^UTILITY("VASD",$J,SUB,"E"),U,2)
"RTN","PXRMXPR",151,0)
 ...S ATYP=$P(^UTILITY("VASD",$J,SUB,"E"),U,3)
"RTN","PXRMXPR",152,0)
 ...S ADAT=$$FMTE^XLFDT(ADAT,"5")
"RTN","PXRMXPR",153,0)
 ...I FIRST W ?64,"See Below" S FIRST=0,NONE=0
"RTN","PXRMXPR",154,0)
 ...D CHECK
"RTN","PXRMXPR",155,0)
 ...W !,ADAT,?18,$E(ALOC,1,25),?58,$E(ATYP,1,21)
"RTN","PXRMXPR",156,0)
 ..I NONE W ?64,FDAT3
"RTN","PXRMXPR",157,0)
 ..K ^UTILITY("VASD",$J)
"RTN","PXRMXPR",158,0)
 Q
"RTN","PXRMXPR",159,0)
 ;
"RTN","PXRMXPR",160,0)
 ;Summary by Reminder
"RTN","PXRMXPR",161,0)
 ;------------------
"RTN","PXRMXPR",162,0)
SUMARY N JJ,EVAL,DUE,RNAM,ITEM,COUNT
"RTN","PXRMXPR",163,0)
 ;
"RTN","PXRMXPR",164,0)
 S NAM=$G(^XTMP(PXRMXTMP,PX,FAC,SUB)),HEAD=1
"RTN","PXRMXPR",165,0)
 S TOTAL=$P(NAM,U,3),COUNT=$P(NAM,U,2),NAM=$P(NAM,U,1)
"RTN","PXRMXPR",166,0)
 ;Get reminders in alpha order
"RTN","PXRMXPR",167,0)
 F JJ=1:1:NREM D  Q:DONE
"RTN","PXRMXPR",168,0)
 .S ITEM=$P(PXRMREM(JJ),U,1),RNAM=$P(PXRMREM(JJ),U,4)
"RTN","PXRMXPR",169,0)
 .S:RNAM="" RNAM="no print name found"
"RTN","PXRMXPR",170,0)
 .; zero lines will be printed 
"RTN","PXRMXPR",171,0)
 .S DUE=$G(^XTMP(PXRMXTMP,PX,FAC,SUB,ITEM))
"RTN","PXRMXPR",172,0)
 .S EVAL=+$P(DUE,U,1),DUE=+$P(DUE,U,2)
"RTN","PXRMXPR",173,0)
 .;Print
"RTN","PXRMXPR",174,0)
 .D CHECK Q:DONE
"RTN","PXRMXPR",175,0)
 .W !,JJ,?5,RNAM,?48,$J(EVAL,10),?63,$J(DUE,10)
"RTN","PXRMXPR",176,0)
 .Q
"RTN","PXRMXPR",177,0)
 D:'DONE TOTAL^PXRMXGPR
"RTN","PXRMXPR",178,0)
 Q
"RTN","PXRMXPR",179,0)
 ;
"RTN","PXRMXPR",180,0)
 ;Check line count before writing line
"RTN","PXRMXPR",181,0)
 ;------------------------------------
"RTN","PXRMXPR",182,0)
CHECK I ($Y>(IOSL-BMARG-3))!(HEAD=1) D COL^PXRMXGPR(1)
"RTN","PXRMXPR",183,0)
 Q
"RTN","PXRMXPR",184,0)
 ;
"RTN","PXRMXPR",185,0)
 ;Sort internal numbers into Alpha order
"RTN","PXRMXPR",186,0)
 ;--------------------------------------
"RTN","PXRMXPR",187,0)
XSORT N SUB,NAM
"RTN","PXRMXPR",188,0)
 K ^TMP($J,"SORT")
"RTN","PXRMXPR",189,0)
 S SUB=""
"RTN","PXRMXPR",190,0)
 F  S SUB=$O(^XTMP(PXRMXTMP,PX,FAC,SUB)) Q:SUB=""  D
"RTN","PXRMXPR",191,0)
 .S NAM=$P(^XTMP(PXRMXTMP,PX,FAC,SUB),U)
"RTN","PXRMXPR",192,0)
 .I NAM="" S NAM=SUB
"RTN","PXRMXPR",193,0)
 .S ^TMP($J,"SORT",NAM)=SUB
"RTN","PXRMXPR",194,0)
 Q
"SEC","^DIC",800,800,0,"AUDIT")
@
"SEC","^DIC",800,800,0,"DD")
@
"SEC","^DIC",800,800,0,"DEL")
@
"SEC","^DIC",800,800,0,"LAYGO")
@
"SEC","^DIC",800,800,0,"RD")

"SEC","^DIC",800,800,0,"WR")
@
"SEC","^DIC",801.41,801.41,0,"AUDIT")
@
"SEC","^DIC",801.41,801.41,0,"DD")
@
"SEC","^DIC",801.41,801.41,0,"DEL")
@
"SEC","^DIC",801.41,801.41,0,"LAYGO")
@
"SEC","^DIC",801.41,801.41,0,"RD")

"SEC","^DIC",801.41,801.41,0,"WR")
@
"SEC","^DIC",811.2,811.2,0,"AUDIT")
@
"SEC","^DIC",811.2,811.2,0,"DD")
@
"SEC","^DIC",811.2,811.2,0,"DEL")
@
"SEC","^DIC",811.2,811.2,0,"LAYGO")
@
"SEC","^DIC",811.2,811.2,0,"RD")

"SEC","^DIC",811.2,811.2,0,"WR")
@
"SEC","^DIC",811.5,811.5,0,"AUDIT")
@
"SEC","^DIC",811.5,811.5,0,"DD")
@
"SEC","^DIC",811.5,811.5,0,"DEL")
@
"SEC","^DIC",811.5,811.5,0,"LAYGO")
@
"SEC","^DIC",811.5,811.5,0,"RD")

"SEC","^DIC",811.5,811.5,0,"WR")
@
"SEC","^DIC",811.9,811.9,0,"AUDIT")
@
"SEC","^DIC",811.9,811.9,0,"DD")
@
"SEC","^DIC",811.9,811.9,0,"DEL")
@
"SEC","^DIC",811.9,811.9,0,"LAYGO")
@
"SEC","^DIC",811.9,811.9,0,"RD")

"SEC","^DIC",811.9,811.9,0,"WR")
@
"VER")
8.0^22.0
"^DD",800,800,0)
FIELD^^5^6
"^DD",800,800,0,"DDA")
N
"^DD",800,800,0,"DT")
3000706
"^DD",800,800,0,"IX","B",800,.01)

"^DD",800,800,0,"NM","CLINICAL REMINDER PARAMETERS")

"^DD",800,800,0,"VRPK")
CLINICAL REMINDERS
"^DD",800,800,.01,0)
ONE^RNJ1,0^^0;1^K:+X'=X!(X>1)!(X<1)!(X?.E1"."1N.N) X
"^DD",800,800,.01,1,0)
^.1
"^DD",800,800,.01,1,1,0)
800^B
"^DD",800,800,.01,1,1,1)
S ^PXRM(800,"B",$E(X,1,30),DA)=""
"^DD",800,800,.01,1,1,2)
K ^PXRM(800,"B",$E(X,1,30),DA)
"^DD",800,800,.01,3)
Type a Number between 1 and 1, 0 Decimal Digits
"^DD",800,800,.01,21,0)
^.001^2^2^3000508^^^^
"^DD",800,800,.01,21,1,0)
This file contains parameters used by the Clinical Reminders. There is
"^DD",800,800,.01,21,2,0)
only one entry.
"^DD",800,800,.01,23,0)
^.001^1^1^3000508^^^^
"^DD",800,800,.01,23,1,0)
There is one entry in this file.
"^DD",800,800,.01,"DT")
2990209
"^DD",800,800,1,0)
DEFAULT REMINDER DISCLAIMER^800.01^^DISC1;0
"^DD",800,800,1,21,0)
^.001^2^2^3000508^^^
"^DD",800,800,1,21,1,0)
This is the default reminder disclaimer that is distributed with the
"^DD",800,800,1,21,2,0)
package.
"^DD",800,800,2,0)
SITE REMINDER DISCLAIMER^800.02^^DISC2;0
"^DD",800,800,2,21,0)
^^3^3^3000508^
"^DD",800,800,2,21,1,0)
This is the site defined reminder disclaimer. If there is an entry in
"^DD",800,800,2,21,2,0)
this field then the site defined disclaimer will override the default
"^DD",800,800,2,21,3,0)
disclaimer.
"^DD",800,800,3,0)
MAIL GROUP FOR ERRORS^P3.8^XMB(3.8,^MGFE;1^Q
"^DD",800,800,3,3)
Enter the name of the MailMan group that will receive reminder evaluation error messages.
"^DD",800,800,3,21,0)
^.001^4^4^3000508^^^^
"^DD",800,800,3,21,1,0)
When there is an error during reminder evaluation members of this
"^DD",800,800,3,21,2,0)
MailMan mail group will be sent a message notifying them of the error.
"^DD",800,800,3,21,3,0)
If there is no entry in this field then the error message will go to
"^DD",800,800,3,21,4,0)
the user.
"^DD",800,800,3,"DT")
2990209
"^DD",800,800,4,0)
WEB SITES^800.04^^1;0
"^DD",800,800,4,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800,4,21,1,0)
This is a list of web sites for general reminder information.
"^DD",800,800,4,"DT")
2991129
"^DD",800,800,5,0)
VERSION^F^^VERSION;1^K:$L(X)>20!($L(X)<3) X
"^DD",800,800,5,3)
Answer must be 3-20 characters in length.
"^DD",800,800,5,21,0)
^^1^1^3000706^
"^DD",800,800,5,21,1,0)
This is the current version of the Clinical Reminders package.
"^DD",800,800,5,"DT")
3000706
"^DD",800,800.01,0)
DEFAULT REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.01,0,"DT")
2990209
"^DD",800,800.01,0,"NM","DEFAULT REMINDER DISCLAIMER")

"^DD",800,800.01,0,"UP")
800
"^DD",800,800.01,.01,0)
DEFAULT REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.01,.01,3)
Do not edit the default disclaimer.
"^DD",800,800.01,.01,"DT")
2990209
"^DD",800,800.02,0)
SITE REMINDER DISCLAIMER SUB-FIELD^^.01^1
"^DD",800,800.02,0,"DT")
2990209
"^DD",800,800.02,0,"NM","SITE REMINDER DISCLAIMER")

"^DD",800,800.02,0,"UP")
800
"^DD",800,800.02,.01,0)
SITE REMINDER DISCLAIMER^W^^0;1^Q
"^DD",800,800.02,.01,3)
Enter the site defined reminder disclaimer.
"^DD",800,800.02,.01,21,0)
^.001^1^1^3000508^^
"^DD",800,800.02,.01,21,1,0)
This is the site defined reminder disclaimer.
"^DD",800,800.02,.01,"DT")
2990209
"^DD",800,800.04,0)
WEB SITES SUB-FIELD^^1^3
"^DD",800,800.04,0,"DT")
2991130
"^DD",800,800.04,0,"IX","B",800.04,.01)

"^DD",800,800.04,0,"NM","WEB SITES")

"^DD",800,800.04,0,"UP")
800
"^DD",800,800.04,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",800,800.04,.01,1,0)
^.1
"^DD",800,800.04,.01,1,1,0)
800.04^B
"^DD",800,800.04,.01,1,1,1)
S ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",800,800.04,.01,1,1,2)
K ^PXRM(800,DA(1),1,"B",$E(X,1,30),DA)
"^DD",800,800.04,.01,3)
Enter the URL for the web site.
"^DD",800,800.04,.01,21,0)
^.001^1^1^3000508^^^^
"^DD",800,800.04,.01,21,1,0)
This is the URL for the web site.
"^DD",800,800.04,.01,"DT")
2991129
"^DD",800,800.04,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",800,800.04,.02,3)
Enter the web site title, up to 60 characters.
"^DD",800,800.04,.02,21,0)
^.001^1^1^3000508^^
"^DD",800,800.04,.02,21,1,0)
This is the web site title.
"^DD",800,800.04,.02,"DT")
2991130
"^DD",800,800.04,1,0)
WEB SITE DESCRIPTION^800.41^^1;0
"^DD",800,800.04,1,21,0)
^^1^1^3000508^
"^DD",800,800.04,1,21,1,0)
This is a description of the web site.
"^DD",800,800.41,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",800,800.41,0,"DT")
2991130
"^DD",800,800.41,0,"NM","WEB SITE DESCRIPTION")

"^DD",800,800.41,0,"UP")
800.04
"^DD",800,800.41,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",800,800.41,.01,3)
Enter the web site description.
"^DD",800,800.41,.01,21,0)
^.001^2^2^3000508^^
"^DD",800,800.41,.01,21,1,0)
This is the web site description. It is used to give more information
"^DD",800,800.41,.01,21,2,0)
about why this web site is relevant for clinical reminders.
"^DD",800,800.41,.01,"DT")
2991130
"^DD",801.41,801.41,0)
FIELD^^99.4^32
"^DD",801.41,801.41,0,"DDA")
N
"^DD",801.41,801.41,0,"DT")
3001218
"^DD",801.41,801.41,0,"ID",4)
W "   ",@("$P($P($C(59)_$S($D(^DD(801.41,4,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,4)_"":"",2),$C(59),1)")
"^DD",801.41,801.41,0,"IX","AD",801.412,2)

"^DD",801.41,801.41,0,"IX","AG",801.41,2)

"^DD",801.41,801.41,0,"IX","AM",801.41,99)

"^DD",801.41,801.41,0,"IX","AMM",801.412,.01)

"^DD",801.41,801.41,0,"IX","AMM2",801.412,2)

"^DD",801.41,801.41,0,"NM","REMINDER DIALOG")

"^DD",801.41,801.41,0,"PT",801.41,55)

"^DD",801.41,801.41,0,"PT",801.412,2)

"^DD",801.41,801.41,0,"PT",801.422,.01)

"^DD",801.41,801.41,0,"PT",801.43,.04)

"^DD",801.41,801.41,0,"PT",801.4515,.01)

"^DD",801.41,801.41,0,"PT",811.9,51)

"^DD",801.41,801.41,0,"PT",8927,.15)

"^DD",801.41,801.41,0,"VRPK")
CLINICAL REMINDERS
"^DD",801.41,801.41,.01,0)
NAME^RFX^^0;1^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>63!($L(X)<3)!'(X'?1P.E) X
"^DD",801.41,801.41,.01,.1)

"^DD",801.41,801.41,.01,1,0)
^.1^^0
"^DD",801.41,801.41,.01,3)
Enter up to a 63 character name to represent this dialog entry.
"^DD",801.41,801.41,.01,21,0)
^.001^19^19^3010302^^^^
"^DD",801.41,801.41,.01,21,1,0)
This is the name of the dialog entry. Reminder dialog entries will
"^DD",801.41,801.41,.01,21,2,0)
default to the name of the reminder for ease in identifying the
"^DD",801.41,801.41,.01,21,3,0)
reminder dialog entry. Dialog elements that are auto-generated use the
"^DD",801.41,801.41,.01,21,4,0)
following naming convention:  Finding type prefix_ _Name from finding
"^DD",801.41,801.41,.01,21,5,0)
file_ _Resolution Status. An example of two dialog element entry names
"^DD",801.41,801.41,.01,21,6,0)
generated from an Exam file entry for DIABETIC EYE EXAM follow.
"^DD",801.41,801.41,.01,21,7,0)
    EX DIABETIC EYE EXAM DONE
"^DD",801.41,801.41,.01,21,8,0)
    EX DIABETIC EYE EXAM DONE ELSEWHERE
"^DD",801.41,801.41,.01,21,9,0)
 
"^DD",801.41,801.41,.01,21,10,0)
Your site may want to create special namespacing for dialog entries
"^DD",801.41,801.41,.01,21,11,0)
that you create locally.
"^DD",801.41,801.41,.01,21,12,0)
 
"^DD",801.41,801.41,.01,21,13,0)
Entries prefixed with PXRM are prompts, result groups, and result
"^DD",801.41,801.41,.01,21,14,0)
elements that were distributed with the Clinical Reminders package. 
"^DD",801.41,801.41,.01,21,15,0)
The PXRM prefixed prompts are the additional prompts that can be asked
"^DD",801.41,801.41,.01,21,16,0)
for particular types of PCE findings. For example: PXRM COMMENT can be
"^DD",801.41,801.41,.01,21,17,0)
added to any PCE file to allow the user to enter an additional COMMENT
"^DD",801.41,801.41,.01,21,18,0)
beyond the dialog elements progress note text, and the PXRM LEVEL OF
"^DD",801.41,801.41,.01,21,19,0)
UNDERSTANDING can only be used with PCE Education Topic findings.
"^DD",801.41,801.41,.01,"DEL",1,0)
I DA<100000 W !,*7,"CANNOT DELETE"
"^DD",801.41,801.41,.01,"DT")
3001114
"^DD",801.41,801.41,2,0)
SOURCE REMINDER^P811.9'^PXD(811.9,^0;2^Q
"^DD",801.41,801.41,2,1,0)
^.1
"^DD",801.41,801.41,2,1,1,0)
801.41^AG
"^DD",801.41,801.41,2,1,1,1)
S ^PXRMD(801.41,"AG",$E(X,1,30),DA)=""
"^DD",801.41,801.41,2,1,1,2)
K ^PXRMD(801.41,"AG",$E(X,1,30),DA)
"^DD",801.41,801.41,2,1,1,"%D",0)
^^1^1^2991217^
"^DD",801.41,801.41,2,1,1,"%D",1,0)
Index of dialogs by source reminder.
"^DD",801.41,801.41,2,1,1,"DT")
2991217
"^DD",801.41,801.41,2,3)
Enter the associated reminder for this reminder dialog.
"^DD",801.41,801.41,2,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,2,21,1,0)
This identifies which reminder definition is associated with this
"^DD",801.41,801.41,2,21,2,0)
"Reminder Dialog" entry.  "Reminder Dialog" type entries are the only
"^DD",801.41,801.41,2,21,3,0)
entries that require this field.
"^DD",801.41,801.41,2,"DT")
2991217
"^DD",801.41,801.41,3,0)
DISABLE^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",801.41,801.41,3,3)
Enter a message here to disable this dialog, 1-40 characters in length.
"^DD",801.41,801.41,3,21,0)
^.001^3^3^3010302^^^^
"^DD",801.41,801.41,3,21,1,0)
This field disables use of this dialog when it contains text. The text
"^DD",801.41,801.41,3,21,2,0)
should be a short message explaining why use of this dialog has been
"^DD",801.41,801.41,3,21,3,0)
disabled, as it will be displayed if this dialog is selected.
"^DD",801.41,801.41,3,"DT")
2950112
"^DD",801.41,801.41,4,0)
TYPE^RS^P:prompt;E:dialog element;R:reminder dialog;F:forced value;G:dialog group;S:result group;T:result element;^0;4^Q
"^DD",801.41,801.41,4,3)
Specify a type for this entry.
"^DD",801.41,801.41,4,21,0)
^.001^80^80^3010302^^
"^DD",801.41,801.41,4,21,1,0)
This field defines what type of dialog component this entry is. The
"^DD",801.41,801.41,4,21,2,0)
type determines the processing that can occur with this entry. 
"^DD",801.41,801.41,4,21,3,0)
 
"^DD",801.41,801.41,4,21,4,0)
Reminder dialogs are the dialog entries that can be mapped to a
"^DD",801.41,801.41,4,21,5,0)
reminder definition. Reminder dialogs will typically contain several
"^DD",801.41,801.41,4,21,6,0)
dialog elements and/or dialog groups. 
"^DD",801.41,801.41,4,21,7,0)
 
"^DD",801.41,801.41,4,21,8,0)
Dialog elements that are auto-generated represent a finding item and
"^DD",801.41,801.41,4,21,9,0)
resolution status combination, based on the Finding Type Parameters for
"^DD",801.41,801.41,4,21,10,0)
auto-generation. The dialog elements can be defined manually if
"^DD",801.41,801.41,4,21,11,0)
needed. Dialog elements must have the FINDING ITEM field defined in
"^DD",801.41,801.41,4,21,12,0)
order to cause the finding to be updated automatically. When no
"^DD",801.41,801.41,4,21,13,0)
finding item is defined, the dialog element is treated as a header or
"^DD",801.41,801.41,4,21,14,0)
instruction text in the CPRS GUI. Sites can also add Additional Finding
"^DD",801.41,801.41,4,21,15,0)
items to automatically update when a dialog element is checked off. An
"^DD",801.41,801.41,4,21,16,0)
example of using the additional finding would be for a dialog element
"^DD",801.41,801.41,4,21,17,0)
for a diagnosis, that must always be recorded with a second diagnosis.
"^DD",801.41,801.41,4,21,18,0)
Another example is when an Exam or Education Topic dialog element
"^DD",801.41,801.41,4,21,19,0)
checked off should automatically add an additional ICD9 and/or CPT
"^DD",801.41,801.41,4,21,20,0)
finding to PCE.
"^DD",801.41,801.41,4,21,21,0)
 
"^DD",801.41,801.41,4,21,22,0)
Dialog elements will use the DIALOG/PROGRESS NOTE TEXT to display in
"^DD",801.41,801.41,4,21,23,0)
the CPRS GUI window. This text will also be added to the progress note,
"^DD",801.41,801.41,4,21,24,0)
unless the optional ALTERNATE PROGRESS NOTE TEXT field is defined. If
"^DD",801.41,801.41,4,21,25,0)
the dialog text to display to the user needs to be different from the
"^DD",801.41,801.41,4,21,26,0)
text to add to the progress note, use the ALTERNATE PROGRESS NOTE TEXT
"^DD",801.41,801.41,4,21,27,0)
field to define the progress note text.
"^DD",801.41,801.41,4,21,28,0)
 
"^DD",801.41,801.41,4,21,29,0)
Dialog Groups can be used to group dialog elements together. Groups
"^DD",801.41,801.41,4,21,30,0)
can be displayed with a box around them and have selection rules
"^DD",801.41,801.41,4,21,31,0)
applied to them (e.g., select one, one or more)  A dialog element can
"^DD",801.41,801.41,4,21,32,0)
be changed to a dialog group by changing its TYPE.
"^DD",801.41,801.41,4,21,33,0)
Prompts are distributed in the PXRM namespace to represent additional
"^DD",801.41,801.41,4,21,34,0)
fields that the user can enter when an element is checked off. Prompts
"^DD",801.41,801.41,4,21,35,0)
are added to dialog elements during auto-generation based on the
"^DD",801.41,801.41,4,21,36,0)
finding type parameters. The PXRM COMMENT field is a generic comment
"^DD",801.41,801.41,4,21,37,0)
field that can be used on all PCE related finding items. Dialog
"^DD",801.41,801.41,4,21,38,0)
elements for "DONE ELSEWHERE" need to require the historical visit date
"^DD",801.41,801.41,4,21,39,0)
prompt. The forced value is similar to a prompt, accept it represents
"^DD",801.41,801.41,4,21,40,0)
a stuffed prompt which doesn't need to be presented to answer. The PXRM
"^DD",801.41,801.41,4,21,41,0)
prompts can be copied for local modification to create additional
"^DD",801.41,801.41,4,21,42,0)
forced value entries if necessary.
"^DD",801.41,801.41,4,21,43,0)
 
"^DD",801.41,801.41,4,21,44,0)
Prompts created locally (not copies of PXRM prompts) are treated as
"^DD",801.41,801.41,4,21,45,0)
display text with checkboxes which when checked off add text to a
"^DD",801.41,801.41,4,21,46,0)
comment field which is added to the progress note text. Refer to these
"^DD",801.41,801.41,4,21,47,0)
as Local Comment Prompts.
"^DD",801.41,801.41,4,21,48,0)
 
"^DD",801.41,801.41,4,21,49,0)
Result Groups and Result Elements are distributed in the PXRM namespace
"^DD",801.41,801.41,4,21,50,0)
and are associated with Mental Health Instrument finding items during
"^DD",801.41,801.41,4,21,51,0)
auto-generation of a reminder dialog. When the mental health instrument
"^DD",801.41,801.41,4,21,52,0)
finding item dialog element is selected by the CPRS GUI user, a window
"^DD",801.41,801.41,4,21,53,0)
will be opened which contains the tests questions and probable answers.
"^DD",801.41,801.41,4,21,54,0)
The selected answers are sent to the mental health package when the
"^DD",801.41,801.41,4,21,55,0)
user selects OK. The mental health package returns the score and
"^DD",801.41,801.41,4,21,56,0)
results which can be used within sentences. These sentences are defined
"^DD",801.41,801.41,4,21,57,0)
as Result Elements, and can vary depending on the test score. If
"^DD",801.41,801.41,4,21,58,0)
multiple sentences are possible depending on the score, the result
"^DD",801.41,801.41,4,21,59,0)
elements should be defined in a result group. The result group should
"^DD",801.41,801.41,4,21,60,0)
be added to the mental health tests dialog elements RESULT
"^DD",801.41,801.41,4,21,61,0)
GROUP/ELEMENT field. Mental Health tests for use by Mental Health
"^DD",801.41,801.41,4,21,62,0)
clinicians only, are not available for CPRS reminder resolution.
"^DD",801.41,801.41,4,21,63,0)
 
"^DD",801.41,801.41,4,21,64,0)
A reminder dialog can be made into a dialog group and added to another
"^DD",801.41,801.41,4,21,65,0)
reminders dialog. This allows multiple reminders to be addressed by
"^DD",801.41,801.41,4,21,66,0)
one reminder dialog.
"^DD",801.41,801.41,4,21,67,0)
 
"^DD",801.41,801.41,4,21,68,0)
Reminder Dialogs can include dialog elements that don't have anything
"^DD",801.41,801.41,4,21,69,0)
to do with the findings defined in the reminder.
"^DD",801.41,801.41,4,21,70,0)
 
"^DD",801.41,801.41,4,21,71,0)
Taxonomy dialogs are auto-generated based on the Taxonomy Dialog
"^DD",801.41,801.41,4,21,72,0)
Parameters. The taxonomy dialog can be used as a black box that allows
"^DD",801.41,801.41,4,21,73,0)
the users to enter current or historical encounter diagnosis or
"^DD",801.41,801.41,4,21,74,0)
procedures based on the selectable list of diagnoses parameters. 
"^DD",801.41,801.41,4,21,75,0)
Alternatively, a taxonomy can have individual dialog elements created
"^DD",801.41,801.41,4,21,76,0)
for each coded value in the selectable list of diagnosis and
"^DD",801.41,801.41,4,21,77,0)
procedures. It may be more useful for sites to create dialog elements
"^DD",801.41,801.41,4,21,78,0)
for the common diagnosis and procedures they actively use and add them
"^DD",801.41,801.41,4,21,79,0)
to groups, similar to the encounter form section and coded value
"^DD",801.41,801.41,4,21,80,0)
groupings.
"^DD",801.41,801.41,4,"DT")
3000223
"^DD",801.41,801.41,5,0)
CAPTION^F^^0;5^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,5,3)
Enter a caption to use for this component.
"^DD",801.41,801.41,5,21,0)
^.001^7^7^3010302^^
"^DD",801.41,801.41,5,21,1,0)
The caption is used for prompt, dialog group, and reminder components.
"^DD",801.41,801.41,5,21,2,0)
When a prompt has a caption defined, this is the text that should be
"^DD",801.41,801.41,5,21,3,0)
used whenever the prompt is asked (e.g., Comment:). A dialog group can
"^DD",801.41,801.41,5,21,4,0)
use the caption field to specify a header to use on a box around the
"^DD",801.41,801.41,5,21,5,0)
group of dialog elements. The reminder dialog component can use the
"^DD",801.41,801.41,5,21,6,0)
caption to specify a header to use on a box around the the dialog
"^DD",801.41,801.41,5,21,7,0)
elements for a reminder.
"^DD",801.41,801.41,5,"DT")
2990923
"^DD",801.41,801.41,6,0)
BOX^S^Y:YES;N:NO;^0;6^Q
"^DD",801.41,801.41,6,3)
Enter Y to add a box around the components.
"^DD",801.41,801.41,6,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,6,21,1,0)
This flag will be used to determine whether the components will be
"^DD",801.41,801.41,6,21,2,0)
presented to the user in a box. If the caption field is defined, it
"^DD",801.41,801.41,6,21,3,0)
will appear as header text within in the top line of the box.
"^DD",801.41,801.41,6,"DT")
2990923
"^DD",801.41,801.41,7,0)
NUMBER OF INDENTS^NJ1,0^^0;7^K:+X'=X!(X>4)!(X<0)!(X?.E1"."1N.N) X
"^DD",801.41,801.41,7,3)
Enter the number of indents required (between 0 and 4).
"^DD",801.41,801.41,7,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.41,7,21,1,0)
This is the number of indents that should be made before presenting the
"^DD",801.41,801.41,7,21,2,0)
group's components/elements. Indent is used only for dialog groups.
"^DD",801.41,801.41,7,"DT")
2990923
"^DD",801.41,801.41,8,0)
SHARE COMMON PROMPTS^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.41,8,3)
Enter No if the common prompts must be prompted for each dialog element separately.
"^DD",801.41,801.41,8,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.41,8,21,1,0)
This field is used only for a dialog group where different dialog
"^DD",801.41,801.41,8,21,2,0)
elements have common prompts. Prompts will be shared for all dialog
"^DD",801.41,801.41,8,21,3,0)
elements unless otherwise selected.
"^DD",801.41,801.41,8,"DT")
2991124
"^DD",801.41,801.41,9,0)
GROUP ENTRY^S^1:ONE SELECTION ONLY;2:ONE OR MORE SELECTIONS;3:NONE OR ONE SELECTION;0:NO SELECTION REQUIRED;^0;9^Q
"^DD",801.41,801.41,9,3)
Enter 1 for one selection only. Enter 2 for one or more. Enter 3 for none or one selection. Enter 0 for no selection required.
"^DD",801.41,801.41,9,21,0)
^.001^6^6^3001107^^
"^DD",801.41,801.41,9,21,1,0)
Used for dialog groups only.
"^DD",801.41,801.41,9,21,2,0)
 
"^DD",801.41,801.41,9,21,3,0)
1 indicates that only one element in the dialog group may be selected.
"^DD",801.41,801.41,9,21,4,0)
2 indicates that one or more elements must be selected.
"^DD",801.41,801.41,9,21,5,0)
3 indicates that either none or one selection is required.
"^DD",801.41,801.41,9,21,6,0)
0 or null indicates no selection required.
"^DD",801.41,801.41,9,"DT")
3001107
"^DD",801.41,801.41,10,0)
COMPONENTS^801.412IA^^10;0
"^DD",801.41,801.41,10,21,0)
^.001^7^7^3010302^^^^
"^DD",801.41,801.41,10,21,1,0)
This field contains the components that are used to process a
"^DD",801.41,801.41,10,21,2,0)
reminder.  Generally the components relate to the TYPE of entry in the
"^DD",801.41,801.41,10,21,3,0)
Reminder Dialog File:
"^DD",801.41,801.41,10,21,4,0)
 
"^DD",801.41,801.41,10,21,5,0)
     Reminder dialogs have dialog group or dialog element components.
"^DD",801.41,801.41,10,21,6,0)
     Dialog groups have a combination of dialog element components.
"^DD",801.41,801.41,10,21,7,0)
     Dialog elements have prompt and forced value components.
"^DD",801.41,801.41,10,"DT")
2990923
"^DD",801.41,801.41,13,0)
RESOLUTION TYPE^P801.9'^PXRMD(801.9,^1;3^Q
"^DD",801.41,801.41,13,3)
Enter the resolution status to use when this item is selected.
"^DD",801.41,801.41,13,21,0)
^^2^2^2990628^
"^DD",801.41,801.41,13,21,1,0)
This field contains what type of resolution is represented by this
"^DD",801.41,801.41,13,21,2,0)
dialog entry.
"^DD",801.41,801.41,13,"DT")
2990628
"^DD",801.41,801.41,14,0)
FINDING TYPE^P801.45'^PXRMD(801.45,^1;4^Q
"^DD",801.41,801.41,14,3)
Enter finding type if the additional prompt is intended for use with only one type of finding item.
"^DD",801.41,801.41,14,21,0)
^.001^16^16^3010302^^^^
"^DD",801.41,801.41,14,21,1,0)
If an additional prompt is restricted to use with only one type of
"^DD",801.41,801.41,14,21,2,0)
finding item this field contains the mnemonic of the finding type. The
"^DD",801.41,801.41,14,21,3,0)
mnemonics allowed are:
"^DD",801.41,801.41,14,21,4,0)
 
"^DD",801.41,801.41,14,21,5,0)
   CPT  Procedure      
"^DD",801.41,801.41,14,21,6,0)
   ED   Education Topic
"^DD",801.41,801.41,14,21,7,0)
   EX   Exam
"^DD",801.41,801.41,14,21,8,0)
   HF   Health Factor
"^DD",801.41,801.41,14,21,9,0)
   IM   Immunization
"^DD",801.41,801.41,14,21,10,0)
   OI   Orderable Item
"^DD",801.41,801.41,14,21,11,0)
   POV  Diagnosis (ICD9) 
"^DD",801.41,801.41,14,21,12,0)
   ST   Skin Test
"^DD",801.41,801.41,14,21,13,0)
   VM   Vital Measurement
"^DD",801.41,801.41,14,21,14,0)
 
"^DD",801.41,801.41,14,21,15,0)
(e.g. PXRM Contraindicated is restricted to IMMUNIZATION, 
"^DD",801.41,801.41,14,21,16,0)
finding type IM)
"^DD",801.41,801.41,14,"DT")
2990629
"^DD",801.41,801.41,15,0)
FINDING ITEM^V^^1;5^Q
"^DD",801.41,801.41,15,3)
Enter the finding item for this dialog element.
"^DD",801.41,801.41,15,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,15,21,1,0)
This is the finding item that should be created if the dialog
"^DD",801.41,801.41,15,21,2,0)
element/group is checked in CPRS. Additional findings may be entered
"^DD",801.41,801.41,15,21,3,0)
into the additional findings field.
"^DD",801.41,801.41,15,"DT")
3000503
"^DD",801.41,801.41,15,"V",0)
^.12P^11^11
"^DD",801.41,801.41,15,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.41,15,"V",2,0)
9999999.14^IMMUNIZATION^10^IM^n^n
"^DD",801.41,801.41,15,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.41,15,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.41,15,"V",5,0)
9999999.64^HEALTH FACTOR^25^HF^y^n
"^DD",801.41,801.41,15,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.41,15,"V",5,2)
IGNORE CATEGORIES
"^DD",801.41,801.41,15,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.41,15,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.41,15,"V",8,0)
120.51^VITAL TYPE^40^VM^^n
"^DD",801.41,801.41,15,"V",9,0)
811.2^TAXONOMY^45^TX^^n
"^DD",801.41,801.41,15,"V",10,0)
101.41^ORDER DIALOG^50^Q^^n
"^DD",801.41,801.41,15,"V",11,0)
601^MENTAL HEALTH^55^MH^n^n
"^DD",801.41,801.41,17,0)
ORDERABLE ITEM^P101.43'^ORD(101.43,^1;7^Q
"^DD",801.41,801.41,17,3)

"^DD",801.41,801.41,17,21,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,21,1,0)
Orderable item from the reminder definition.
"^DD",801.41,801.41,17,23,0)
^^1^1^2991029^^
"^DD",801.41,801.41,17,23,1,0)
This field is used only in the dialog display.
"^DD",801.41,801.41,17,"DT")
2991029
"^DD",801.41,801.41,18,0)
ADDITIONAL FINDINGS^801.4118AV^^3;0
"^DD",801.41,801.41,21,0)
DEFAULT VALUE^F^^2;1^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,21,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,21,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,21,21,1,0)
This is the default value for an additional prompt.
"^DD",801.41,801.41,21,"DT")
2990714
"^DD",801.41,801.41,22,0)
FORCED VALUE^F^^2;2^K:$L(X)>60!($L(X)<1) X
"^DD",801.41,801.41,22,3)
Answer must be 1-60 characters in length.
"^DD",801.41,801.41,22,21,0)
^^1^1^3000511^
"^DD",801.41,801.41,22,21,1,0)
This is the value that will be used for a forced value type dialog.
"^DD",801.41,801.41,22,"DT")
2990714
"^DD",801.41,801.41,23,0)
EXCLUDE FROM PROGRESS NOTE^S^1:YES;0:NO;^2;3^Q
"^DD",801.41,801.41,23,3)
Enter Y to stop the question text being added to the progress note.
"^DD",801.41,801.41,23,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,23,21,1,0)
This field indicates that the question text of the dialog element will
"^DD",801.41,801.41,23,21,2,0)
be excluded from the progress note.
"^DD",801.41,801.41,23,"DT")
2991102
"^DD",801.41,801.41,24,0)
PROMPT CAPTION^F^^2;4^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.41,24,3)
Enter a 3-30 character prompt caption.
"^DD",801.41,801.41,24,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,24,21,1,0)
This is the caption that will be used for this prompt.  This caption
"^DD",801.41,801.41,24,21,2,0)
can be overriden by the OVERRIDE PROMPT CAPTION field in the ITEMS
"^DD",801.41,801.41,24,21,3,0)
multiple, which can be more specific for the instance of the prompt.
"^DD",801.41,801.41,24,"DT")
2990923
"^DD",801.41,801.41,25,0)
DIALOG/PROGRESS NOTE TEXT^801.4125^^25;0
"^DD",801.41,801.41,25,21,0)
^.001^2^2^3000511^^
"^DD",801.41,801.41,25,21,1,0)
This is the sentence text that will appear in the reminder dialog and
"^DD",801.41,801.41,25,21,2,0)
progress note.
"^DD",801.41,801.41,25,"DT")
3000420
"^DD",801.41,801.41,35,0)
ALTERNATE PROGRESS NOTE TEXT^801.4135^^35;0
"^DD",801.41,801.41,35,21,0)
^.001^2^2^3000503^^^^
"^DD",801.41,801.41,35,21,1,0)
This field is only required if the text on the progress note differs
"^DD",801.41,801.41,35,21,2,0)
from the dialog text.
"^DD",801.41,801.41,35,"DT")
3000503
"^DD",801.41,801.41,50,0)
HIDE/SHOW GROUP^S^1:HIDE;0:SHOW;^0;10^Q
"^DD",801.41,801.41,50,3)
Enter HIDE or SHOW
"^DD",801.41,801.41,50,21,0)
^^4^4^2991124^
"^DD",801.41,801.41,50,21,1,0)
Used for dialog groups.
"^DD",801.41,801.41,50,21,2,0)
 
"^DD",801.41,801.41,50,21,3,0)
1 indicates that the group will be hidden until checked
"^DD",801.41,801.41,50,21,4,0)
0 indicates that the group will be displayed 
"^DD",801.41,801.41,50,"DT")
2991124
"^DD",801.41,801.41,51,0)
SUPPRESS CHECKBOX^S^1:SUPPRESS;^0;11^Q
"^DD",801.41,801.41,51,3)
Enter 1 if the WP text is for display only.
"^DD",801.41,801.41,51,21,0)
^.001^10^10^3010302^^
"^DD",801.41,801.41,51,21,1,0)
If the field is set to SUPPRESS the dialog element or group header will
"^DD",801.41,801.41,51,21,2,0)
be displayed without a checkbox. Otherwise the WP text will be
"^DD",801.41,801.41,51,21,3,0)
presented with a checkbox.
"^DD",801.41,801.41,51,21,4,0)
 
"^DD",801.41,801.41,51,21,5,0)
If the dialog element or group header has a finding item associated
"^DD",801.41,801.41,51,21,6,0)
with it the SUPPRESS CHECKBOX flag will be ignored.
"^DD",801.41,801.41,51,21,7,0)
 
"^DD",801.41,801.41,51,21,8,0)
Also if the HIDE/SHOW GROUP field is set to hide then the SUPPRESS
"^DD",801.41,801.41,51,21,9,0)
CHECKBOX field will be ignored (the group header question must be a
"^DD",801.41,801.41,51,21,10,0)
checkbox).
"^DD",801.41,801.41,51,"DT")
2991201
"^DD",801.41,801.41,52,0)
INDENT PROGRESS NOTE TEXT^S^1:INDENT;0:NO INDENT;^0;12^Q
"^DD",801.41,801.41,52,3)
Enter 1 if the progress note text should be indented. Enter 0 if no indent is required.
"^DD",801.41,801.41,52,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.41,52,21,1,0)
In a dialog group the dialog questions may be indented. This field
"^DD",801.41,801.41,52,21,2,0)
allows the progress note text to be indented also.
"^DD",801.41,801.41,52,"DT")
3000110
"^DD",801.41,801.41,53,0)
RESULT CONDITION^FXO^^0;13^K:$L(X)>40!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",801.41,801.41,53,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,2.1)
S Y=$TR(Y,"~"," ")
"^DD",801.41,801.41,53,3)
Answer must be 3-40 characters in length.
"^DD",801.41,801.41,53,21,0)
^.001^5^5^3010302^^^^
"^DD",801.41,801.41,53,21,1,0)
This field is used for dialog result elements only. The result
"^DD",801.41,801.41,53,21,2,0)
condition determines if the progress note text of the result element
"^DD",801.41,801.41,53,21,3,0)
will be included in the progress note e.g., I SCORE<2 will insert the
"^DD",801.41,801.41,53,21,4,0)
text in the progress note if the SCORE from the mental health test is
"^DD",801.41,801.41,53,21,5,0)
below 2.
"^DD",801.41,801.41,53,"DT")
3000609
"^DD",801.41,801.41,54,0)
EXCLUDE MH TEST FROM PN TEXT^S^1:YES;0:NO;^0;14^Q
"^DD",801.41,801.41,54,3)
Enter Y to stop the test questions from being added to the note text.
"^DD",801.41,801.41,54,21,0)
^.001^3^3^3010302^^
"^DD",801.41,801.41,54,21,1,0)
This flag is used to control whether or not a mental health instrument
"^DD",801.41,801.41,54,21,2,0)
questions will be excluded from the progress note text when the
"^DD",801.41,801.41,54,21,3,0)
component is acted upon.
"^DD",801.41,801.41,54,"DT")
3000225
"^DD",801.41,801.41,55,0)
RESULT GROUP/ELEMENT^*P801.41'^PXRMD(801.41,^0;15^S DIC("S")="I ""ST""[$P(^(0),U,4)" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.41,55,3)
Enter the result group or element for additional findings.
"^DD",801.41,801.41,55,12)
Only result elements and result groups allowed
"^DD",801.41,801.41,55,12.1)
S DIC("S")="I ""ST""[$P(^(0),U,4)"
"^DD",801.41,801.41,55,21,0)
^.001^4^4^3010302^^^^
"^DD",801.41,801.41,55,21,1,0)
The result group or element is called on completion of a dialog and
"^DD",801.41,801.41,55,21,2,0)
allows additional findings or progress note text to be added
"^DD",801.41,801.41,55,21,3,0)
conditionally. Standard result groups for mental health tests are
"^DD",801.41,801.41,55,21,4,0)
released with the package.
"^DD",801.41,801.41,55,"DT")
3000225
"^DD",801.41,801.41,99,0)
LATEST CHANGE^D^^99;1^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,99,1,0)
^.1
"^DD",801.41,801.41,99,1,1,0)
801.41^AM^MUMPS
"^DD",801.41,801.41,99,1,1,1)
D SET^PXRMDD41(DA)
"^DD",801.41,801.41,99,1,1,2)
D KILL^PXRMDD41(DA)
"^DD",801.41,801.41,99,1,1,"DT")
2990624
"^DD",801.41,801.41,99,3)

"^DD",801.41,801.41,99,21,0)
^^1^1^2991215^^
"^DD",801.41,801.41,99,21,1,0)
Date last changed.
"^DD",801.41,801.41,99,"DT")
2991220
"^DD",801.41,801.41,99.1,0)
AUTO GENERATED^DX^^99;2^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,99.1,3)
Enter the date/time the dialog entries were generated.
"^DD",801.41,801.41,99.1,21,0)
^.001^1^1^3001218^^
"^DD",801.41,801.41,99.1,21,1,0)
This is the date the dialog was created by autogenerate.
"^DD",801.41,801.41,99.1,"DT")
2990719
"^DD",801.41,801.41,99.2,0)
CHANGED BY^P200'^VA(200,^99;3^Q
"^DD",801.41,801.41,99.2,21,0)
^^1^1^2991220^
"^DD",801.41,801.41,99.2,21,1,0)
Person making latest change to dialog.
"^DD",801.41,801.41,99.2,"DT")
2991220
"^DD",801.41,801.41,99.3,0)
AUTO GENERATED BY^P200'^VA(200,^99;4^Q
"^DD",801.41,801.41,99.3,21,0)
^^1^1^2991220^
"^DD",801.41,801.41,99.3,21,1,0)
Last person generating the dialog.
"^DD",801.41,801.41,99.3,"DT")
2991220
"^DD",801.41,801.41,99.4,0)
EXCHANGE DATE^DX^^99;5^S %DT="ESTXR" D ^%DT S X=Y K:Y<1 X
"^DD",801.41,801.41,99.4,3)
Enter the date/time the dialog was imported by reminder exchange.
"^DD",801.41,801.41,99.4,21,0)
^.001^1^1^3001218^^
"^DD",801.41,801.41,99.4,21,1,0)
This is the date/time the dialog was imported via reminder exchange.
"^DD",801.41,801.41,99.4,"DT")
3010208
"^DD",801.41,801.4118,0)
ADDITIONAL FINDINGS SUB-FIELD^^.01^1
"^DD",801.41,801.4118,0,"DT")
3000303
"^DD",801.41,801.4118,0,"IX","B",801.4118,.01)

"^DD",801.41,801.4118,0,"NM","ADDITIONAL FINDINGS")

"^DD",801.41,801.4118,0,"UP")
801.41
"^DD",801.41,801.4118,.01,0)
ADDITIONAL FINDINGS^MV^^0;1^Q
"^DD",801.41,801.4118,.01,1,0)
^.1
"^DD",801.41,801.4118,.01,1,1,0)
801.4118^B
"^DD",801.41,801.4118,.01,1,1,1)
S ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.4118,.01,1,1,2)
K ^PXRMD(801.41,DA(1),3,"B",$E(X,1,30),DA)
"^DD",801.41,801.4118,.01,1,1,3)
Required Index for Variable Pointer
"^DD",801.41,801.4118,.01,3)
Enter additional finding items for this dialog element.
"^DD",801.41,801.4118,.01,21,0)
^.001^3^3^3010302^^^
"^DD",801.41,801.4118,.01,21,1,0)
If additional finding items should be posted if the dialog is checked
"^DD",801.41,801.4118,.01,21,2,0)
then they should be entered in this field. The field is relevant to
"^DD",801.41,801.4118,.01,21,3,0)
both dialog element and dialog group type records.
"^DD",801.41,801.4118,.01,"DT")
3000303
"^DD",801.41,801.4118,.01,"V",0)
^.12P^9^9
"^DD",801.41,801.4118,.01,"V",1,0)
9999999.09^EDUCATION TOPICS^5^ED^n^n
"^DD",801.41,801.4118,.01,"V",2,0)
9999999.14^IMMUNIZATIONS^10^IM^n^n
"^DD",801.41,801.4118,.01,"V",3,0)
9999999.28^SKIN TEST^15^ST^n^n
"^DD",801.41,801.4118,.01,"V",4,0)
9999999.15^EXAM^20^EX^n^n
"^DD",801.41,801.4118,.01,"V",5,0)
9999999.64^HEALTH FACTORS^25^HF^y^n
"^DD",801.41,801.4118,.01,"V",5,1)
S DIC("S")="I $P(^(0),U,10)'=""C"""
"^DD",801.41,801.4118,.01,"V",5,2)
Health Factor categories are not allowed.
"^DD",801.41,801.4118,.01,"V",6,0)
81^PROCEDURE^30^CPT^n^n
"^DD",801.41,801.4118,.01,"V",7,0)
80^ICD9 DIAGNOSIS^35^ICD9^n^n
"^DD",801.41,801.4118,.01,"V",8,0)
120.51^VITAL TYPE^40^VM^n^n
"^DD",801.41,801.4118,.01,"V",9,0)
101.41^ORDER DIALOG^45^Q^n^n
"^DD",801.41,801.412,0)
COMPONENTS SUB-FIELD^^9^6
"^DD",801.41,801.412,0,"DT")
3000822
"^DD",801.41,801.412,0,"ID","WRITE")
N OR0,ORNM S OR0=^(0) I $P(OR0,U,2) S ORNM=$P($G(^PXRMD(801.41,+$P(OR0,U,2),0)),U) D:$L(ORNM) EN^DDIOL(ORNM,,"?10")
"^DD",801.41,801.412,0,"IX","B",801.412,.01)

"^DD",801.41,801.412,0,"IX","D",801.412,2)

"^DD",801.41,801.412,0,"IX","DAD1",801.412,.01)

"^DD",801.41,801.412,0,"NM","COMPONENTS")

"^DD",801.41,801.412,0,"UP")
801.41
"^DD",801.41,801.412,.01,0)
SEQUENCE^MNJ5,1X^^0;1^K:+X'=X!(X>999.9)!(X<.1)!(X?.E1"."2N.N) X I $G(X)]"" K:$D(^PXRMD(801.41,DA(1),10,"B",X)) X
"^DD",801.41,801.412,.01,1,0)
^.1
"^DD",801.41,801.412,.01,1,1,0)
801.412^B
"^DD",801.41,801.412,.01,1,1,1)
S ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",801.41,801.412,.01,1,1,2)
K ^PXRMD(801.41,DA(1),10,"B",$E(X,1,30),DA)
"^DD",801.41,801.412,.01,1,2,0)
801.412^DAD1^MUMPS
"^DD",801.41,801.412,.01,1,2,1)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) S:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)=""
"^DD",801.41,801.412,.01,1,2,2)
N PXRMP S PXRMP=$P(^PXRMD(801.41,DA(1),10,DA,0),U,11) K:PXRMP ^PXRMD(801.41,DA(1),10,"DAD",PXRMP,X,DA)
"^DD",801.41,801.412,.01,1,2,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,2,"%D",1,0)
Allows retrieval of 'child' prompts in sequence by parent.
"^DD",801.41,801.412,.01,1,2,"DT")
2990624
"^DD",801.41,801.412,.01,1,3,0)
801.41^AMM^MUMPS
"^DD",801.41,801.412,.01,1,3,1)
D REDOX^PXRMDD41
"^DD",801.41,801.412,.01,1,3,2)
D REDOX^PXRMDD41
"^DD",801.41,801.412,.01,1,3,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,.01,1,3,"%D",1,0)
Update TIMESTAMP whenever SEQUENCE is changed.
"^DD",801.41,801.412,.01,1,3,"DT")
2990624
"^DD",801.41,801.412,.01,3)
Type a Number between .1 and 999.9, 1 Decimal Digit
"^DD",801.41,801.412,.01,21,0)
^.001^2^2^3010302^^^^
"^DD",801.41,801.412,.01,21,1,0)
This field specifies the order in which this item will be displayed or
"^DD",801.41,801.412,.01,21,2,0)
processed.
"^DD",801.41,801.412,.01,"DT")
3001023
"^DD",801.41,801.412,2,0)
ITEM^R*P801.41'X^PXRMD(801.41,^0;2^D SCREEN^PXRMDD41 D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",801.41,801.412,2,1,0)
^.1
"^DD",801.41,801.412,2,1,1,0)
801.41^AD
"^DD",801.41,801.412,2,1,1,1)
S ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",801.41,801.412,2,1,1,2)
K ^PXRMD(801.41,"AD",$E(X,1,30),DA(1),DA)
"^DD",801.41,801.412,2,1,1,"DT")
2950123
"^DD",801.41,801.412,2,1,2,0)
801.412^D
"^DD",801.41,801.412,2,1,2,1)
S ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)=""
"^DD",801.41,801.412,2,1,2,2)
K ^PXRMD(801.41,DA(1),10,"D",$E(X,1,30),DA)
"^DD",801.41,801.412,2,1,2,"DT")
2950411
"^DD",801.41,801.412,2,1,3,0)
801.41^AMM2^MUMPS
"^DD",801.41,801.412,2,1,3,1)
D REDOX^PXRMDD41
"^DD",801.41,801.412,2,1,3,2)
D REDOX^PXRMDD41
"^DD",801.41,801.412,2,1,3,"%D",0)
^^1^1^2990624^^
"^DD",801.41,801.412,2,1,3,"%D",1,0)
Update TIMESTAMP whenever ITEM is changed.
"^DD",801.41,801.412,2,1,3,"DT")
2990624
"^DD",801.41,801.412,2,3)
Enter an dialog; a dialog that is an ancestor may not also be a sub-item. The dialog type of the sub-item must be valid for the ancestor.
"^DD",801.41,801.412,2,12)
The item must be valid for this dialog type.
"^DD",801.41,801.412,2,12.1)
D SCREEN^PXRMDD41
"^DD",801.41,801.412,2,21,0)
^.001^3^3^3000822^^^^
"^DD",801.41,801.412,2,21,1,0)
This field points to a dialog which is subordinate to this dialog.
"^DD",801.41,801.412,2,21,2,0)
NOTE:  The parent dialog menu or one of its ancestors may not be entered
"^DD",801.41,801.412,2,21,3,0)
as an item.
"^DD",801.41,801.412,2,"DT")
3000719
"^DD",801.41,801.412,6,0)
OVERRIDE PROMPT CAPTION^F^^0;6^K:$L(X)>30!($L(X)<3) X
"^DD",801.41,801.412,6,3)
This is the caption that should override the prompt's default caption.
"^DD",801.41,801.412,6,21,0)
^^3^3^2990923^
"^DD",801.41,801.412,6,21,1,0)
This text will override the caption for this component in the reminder
"^DD",801.41,801.412,6,21,2,0)
dialog, when the component is a prompt.  When the text is blank, the
"^DD",801.41,801.412,6,21,3,0)
caption from the prompt entry will be used.
"^DD",801.41,801.412,6,"DT")
2990923
"^DD",801.41,801.412,7,0)
START NEW LINE^S^1:YES;0:NO;^0;7^Q
"^DD",801.41,801.412,7,3)
Answer Y/N to control whether to prompt on a new line.
"^DD",801.41,801.412,7,21,0)
^.001^2^2^3010302^^
"^DD",801.41,801.412,7,21,1,0)
This flag is used to allow the user to have some control of the display
"^DD",801.41,801.412,7,21,2,0)
of prompts related to a dialog element.
"^DD",801.41,801.412,7,"DT")
2990923
"^DD",801.41,801.412,8,0)
EXCLUDE FROM PN TEXT^S^1:YES;0:NO;^0;8^Q
"^DD",801.41,801.412,8,3)
Enter Y to stop the component activity from being added to the note text.
"^DD",801.41,801.412,8,21,0)
^.001^2^2^3010302^^^
"^DD",801.41,801.412,8,21,1,0)
This flag is used to control whether or not a component will be
"^DD",801.41,801.412,8,21,2,0)
excluded from the progress note text when the component is acted upon.
"^DD",801.41,801.412,8,"DT")
2991102
"^DD",801.41,801.412,9,0)
REQUIRED^S^1:YES;0:NO;^0;9^Q
"^DD",801.41,801.412,9,"DT")
2991102
"^DD",801.41,801.4125,0)
DIALOG/PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4125,0,"DT")
2990628
"^DD",801.41,801.4125,0,"NM","DIALOG/PROGRESS NOTE TEXT")

"^DD",801.41,801.4125,0,"UP")
801.41
"^DD",801.41,801.4125,.01,0)
DIALOG/PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4125,.01,3)
Enter the lines that should be used in the Progress Note when this item is checked off.
"^DD",801.41,801.4125,.01,"DT")
3000503
"^DD",801.41,801.4135,0)
ALTERNATE PROGRESS NOTE TEXT SUB-FIELD^^.01^1
"^DD",801.41,801.4135,0,"DT")
3000209
"^DD",801.41,801.4135,0,"NM","ALTERNATE PROGRESS NOTE TEXT")

"^DD",801.41,801.4135,0,"UP")
801.41
"^DD",801.41,801.4135,.01,0)
ALTERNATE PROGRESS NOTE TEXT^W^^0;1^Q
"^DD",801.41,801.4135,.01,.1)

"^DD",801.41,801.4135,.01,3)
Enter text to appear on the progress note. Only required if the text on the progress note differs from the dialog text.
"^DD",801.41,801.4135,.01,21,0)
^^8^8^3000503^
"^DD",801.41,801.4135,.01,21,1,0)
This field is used to define an alternate text to add to the progress note
"^DD",801.41,801.4135,.01,21,2,0)
when the progress note text needs to be different from the dialog text.
"^DD",801.41,801.4135,.01,21,3,0)
(e.g., Dialog/Progress Note Text displayed is "Place Influenza Order", but
"^DD",801.41,801.4135,.01,21,4,0)
the Alternate Progress Note Text is "Ordered Influenza Vaccine at this
"^DD",801.41,801.4135,.01,21,5,0)
encounter.")
"^DD",801.41,801.4135,.01,21,6,0)
 
"^DD",801.41,801.4135,.01,21,7,0)
If there is no text in this alternate text field the dialog/progress note
"^DD",801.41,801.4135,.01,21,8,0)
text will be added to the progress note.
"^DD",801.41,801.4135,.01,"DT")
3000503
"^DD",811.2,811.2,0)
FIELD^^3112^17
"^DD",811.2,811.2,0,"DDA")
N
"^DD",811.2,811.2,0,"DT")
3000505
"^DD",811.2,811.2,0,"ID",.02)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.2,0,"NM","REMINDER TAXONOMY")

"^DD",811.2,811.2,0,"PT",801.41,15)

"^DD",811.2,811.2,0,"PT",810.31,.04)

"^DD",811.2,811.2,0,"PT",810.32,.01)

"^DD",811.2,811.2,0,"PT",811.3,.01)

"^DD",811.2,811.2,0,"PT",811.52,.01)

"^DD",811.2,811.2,0,"PT",811.902,.01)

"^DD",811.2,811.2,0,"VRPK")
CLINICAL REMINDERS
"^DD",811.2,811.2,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.2)) X
"^DD",811.2,811.2,.01,1,0)
^.1^^0
"^DD",811.2,811.2,.01,3)
Answer must be 3-35 characters in length.
"^DD",811.2,811.2,.01,21,0)
^.001^1^1^3000505^^^^
"^DD",811.2,811.2,.01,21,1,0)
This is the name of the taxonomy. It must be unique.
"^DD",811.2,811.2,.01,"DT")
3000601
"^DD",811.2,811.2,.02,0)
BRIEF DESCRIPTION^F^^0;2^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.02,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.02,21,0)
^.001^2^2^3000505^^^^
"^DD",811.2,811.2,.02,21,1,0)
This is a brief description of what the taxonomy represents. This may be
"^DD",811.2,811.2,.02,21,2,0)
used to further define the intended use of this taxonomy.
"^DD",811.2,811.2,.02,"DT")
3000502
"^DD",811.2,811.2,.03,0)
DIALOG HEADER TEXT^F^^0;3^K:$L(X)>80!($L(X)<3) X
"^DD",811.2,811.2,.03,3)
Answer must be 3-80 characters in length.
"^DD",811.2,811.2,.03,21,0)
^.001^2^2^3000502^^^
"^DD",811.2,811.2,.03,21,1,0)
This text will be displayed as a checkbox in the reminder dialog for this
"^DD",811.2,811.2,.03,21,2,0)
taxonomy.
"^DD",811.2,811.2,.03,"DT")
2991025
"^DD",811.2,811.2,1.6,0)
INACTIVE FLAG^S^1:INACTIVE;^0;6^Q
"^DD",811.2,811.2,1.6,3)
Enter a 1 to inactivate this taxonomy.
"^DD",811.2,811.2,1.6,21,0)
^.001^6^6^3000502^^
"^DD",811.2,811.2,1.6,21,1,0)
Enter "1" to inactivate the taxonomy.  This flag is set to ACTIVE in
"^DD",811.2,811.2,1.6,21,2,0)
the distribution. As part of the installation, each site should review
"^DD",811.2,811.2,1.6,21,3,0)
the taxonomy definitions and inactivate those that do not meet the
"^DD",811.2,811.2,1.6,21,4,0)
site's needs. If desired, a site can copy a distributed taxonomy, using
"^DD",811.2,811.2,1.6,21,5,0)
the taxomony copy option, to a local version and edit it to meet the
"^DD",811.2,811.2,1.6,21,6,0)
site's needs.
"^DD",811.2,811.2,1.6,23,0)
^.001^2^2^3000502^^
"^DD",811.2,811.2,1.6,23,1,0)
This flag controls whether or not taxonomies may be selected as a
"^DD",811.2,811.2,1.6,23,2,0)
Clinical Reminder finding.
"^DD",811.2,811.2,1.6,"DT")
2960730
"^DD",811.2,811.2,4,0)
PATIENT DATA SOURCE^FX^^0;4^K:$L(X)>40!($L(X)<1) X D VPDS^PXRMTAX
"^DD",811.2,811.2,4,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.2,4,4)
D PDSXHELP^PXRMTAX
"^DD",811.2,811.2,4,21,0)
^.001^2^2^3000502^^^^
"^DD",811.2,811.2,4,21,1,0)
PATIENT DATA SOURCE specifies where to search for patient data. It is a
"^DD",811.2,811.2,4,21,2,0)
string of comma-separated key words.
"^DD",811.2,811.2,4,"DT")
3000403
"^DD",811.2,811.2,10,0)
USE INACTIVE PROBLEMS^S^1:YES;^0;9^Q
"^DD",811.2,811.2,10,3)
Enter YES if you want to use both active and inactive problems.
"^DD",811.2,811.2,10,21,0)
^.001^6^6^3000505^^^^
"^DD",811.2,811.2,10,21,1,0)
USE INACTIVE PROBLEMS applies only to searches in Problem List. Normally
"^DD",811.2,811.2,10,21,2,0)
inactive problems are not used. However, when this field is set to YES
"^DD",811.2,811.2,10,21,3,0)
then both active and inactive problems are used. This field works just
"^DD",811.2,811.2,10,21,4,0)
like the field with the same name that can be specified for a reminder
"^DD",811.2,811.2,10,21,5,0)
definition finding or a reminder term finding. The order of precedence
"^DD",811.2,811.2,10,21,6,0)
is taxonomy > term > definition.
"^DD",811.2,811.2,10,"DT")
3000403
"^DD",811.2,811.2,2102,0)
ICD9 RANGE OF CODED VALUES^811.22102^^80;0
"^DD",811.2,811.2,2102,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2102,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.2,2102,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2102,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2102,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2102,21,5,0)

"^DD",811.2,811.2,2102,"DT")
2980803
"^DD",811.2,811.2,2103,0)
ICD0 RANGE OF CODED VALUES^811.22103^^80.1;0
"^DD",811.2,811.2,2103,21,0)
^.001^4^4^3000502^^^^
"^DD",811.2,811.2,2103,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.2,2103,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2103,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2103,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2103,"DT")
2980803
"^DD",811.2,811.2,2104,0)
CPT RANGE OF CODED VALUES^811.22104^^81;0
"^DD",811.2,811.2,2104,21,0)
^.001^5^5^3000502^^^^
"^DD",811.2,811.2,2104,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.2,2104,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.2,2104,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.2,2104,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.2,2104,21,5,0)

"^DD",811.2,811.2,2104,"DT")
2980803
"^DD",811.2,811.2,3102,0)
SELECTABLE DIAGNOSIS^811.23102IP^^SDX;0
"^DD",811.2,811.2,3102,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3102,21,1,0)
These are the diagnosis codes that may be selected when processing a
"^DD",811.2,811.2,3102,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3102,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3102,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3104,0)
SELECTABLE PROCEDURE^811.23104IP^^SPR;0
"^DD",811.2,811.2,3104,21,0)
^.001^4^4^3000505^^
"^DD",811.2,811.2,3104,21,1,0)
These are the procedure codes that may be selected when processing a
"^DD",811.2,811.2,3104,21,2,0)
taxonomy dialog within CPRS. The list of codes is built from the code
"^DD",811.2,811.2,3104,21,3,0)
ranges within the taxonomy when the Clinical Reminders package is
"^DD",811.2,811.2,3104,21,4,0)
installed and includes only active codes.
"^DD",811.2,811.2,3106,0)
GENERATE DIALOG DX PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH DIAGNOSIS CODE;^SDZ;1^Q
"^DD",811.2,811.2,3106,3)
Enter 1 if each selectable diagnosis should be a separate prompt.
"^DD",811.2,811.2,3106,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3106,21,1,0)
If this parameter is set then each active code in the selectable diagnosis
"^DD",811.2,811.2,3106,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3106,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3106,21,4,0)
 
"^DD",811.2,811.2,3106,21,5,0)
Otherwise the active selectable diagnoses will be displayed as a checkbox
"^DD",811.2,811.2,3106,21,6,0)
with the dialog header text for diagnoses. This is the default option.
"^DD",811.2,811.2,3106,"DT")
2990908
"^DD",811.2,811.2,3107,0)
CURRENT VISIT DX DIALOG HDR^F^^SDZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3107,.1)

"^DD",811.2,811.2,3107,3)
Enter 1-80 character header text for current visit diagnosis selection.
"^DD",811.2,811.2,3107,21,0)
^.001^6^6^3000503^^^
"^DD",811.2,811.2,3107,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3107,21,2,0)
CPRS users to document a diagnosis from the taxonomy as treated at the
"^DD",811.2,811.2,3107,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3107,21,4,0)
users can select to see the selectable diagnoses list. 
"^DD",811.2,811.2,3107,21,5,0)
 
"^DD",811.2,811.2,3107,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3107,"DT")
3000503
"^DD",811.2,811.2,3108,0)
HISTORICAL VISIT DX DIALOG HDR^F^^SDZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3108,3)
Enter 1-80 character header text for historical visit diagnosis selection.
"^DD",811.2,811.2,3108,21,0)
^^7^7^3000503^
"^DD",811.2,811.2,3108,21,1,0)
This is the diagnosis dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3108,21,2,0)
CPRS users to document a diagnosis from the taxonomy as a historical
"^DD",811.2,811.2,3108,21,3,0)
diagnosis. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3108,21,4,0)
can select to see the selectable diagnoses list.  Historical diagnoses
"^DD",811.2,811.2,3108,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3108,21,6,0)
 
"^DD",811.2,811.2,3108,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3108,"DT")
3000503
"^DD",811.2,811.2,3110,0)
GENERATE DIALOG PR PARAMETER^S^1:INDIVIDUAL DIALOG FOR EACH PROCEDURE;^SPZ;1^Q
"^DD",811.2,811.2,3110,3)
Enter 1 if each selectable procedure should be a separate prompt.
"^DD",811.2,811.2,3110,21,0)
^^6^6^3000505^
"^DD",811.2,811.2,3110,21,1,0)
If this parameter is set then each active code in the selectable procedure
"^DD",811.2,811.2,3110,21,2,0)
list will be presented as a separate question in CPRS with text generated
"^DD",811.2,811.2,3110,21,3,0)
from the finding parameter file.
"^DD",811.2,811.2,3110,21,4,0)
                                  
"^DD",811.2,811.2,3110,21,5,0)
Otherwise the active selectable procedures will be displayed as a checkbox
"^DD",811.2,811.2,3110,21,6,0)
with the dialog header text for procedures. This is the default option.
"^DD",811.2,811.2,3110,"DT")
2990909
"^DD",811.2,811.2,3111,0)
CURRENT VISIT PR DIALOG HDR^F^^SPZ;2^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3111,3)
Enter 1-80 character header text for current visit procedure selection.
"^DD",811.2,811.2,3111,21,0)
^.001^6^6^3000503^^
"^DD",811.2,811.2,3111,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3111,21,2,0)
CPRS users to document a procedure from the taxonomy as done at the
"^DD",811.2,811.2,3111,21,3,0)
current visit. The header text will display with a check box which CPRS
"^DD",811.2,811.2,3111,21,4,0)
users can select to see the selectable procedure list. 
"^DD",811.2,811.2,3111,21,5,0)
 
"^DD",811.2,811.2,3111,21,6,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3111,"DT")
3000503
"^DD",811.2,811.2,3112,0)
HISTORICAL VISIT PR DIALOG HDR^F^^SPZ;3^K:$L(X)>80!($L(X)<1) X
"^DD",811.2,811.2,3112,3)
Enter 1-80 character header text for historical visit procedure selection.
"^DD",811.2,811.2,3112,21,0)
^.001^7^7^3000503^^
"^DD",811.2,811.2,3112,21,1,0)
This is the procedure dialog sub-header text that will be selectable for
"^DD",811.2,811.2,3112,21,2,0)
CPRS users to document a procedure from the taxonomy as a historical
"^DD",811.2,811.2,3112,21,3,0)
procedure. The header text will display with a check box which CPRS users
"^DD",811.2,811.2,3112,21,4,0)
can select to see the selectable procedure list.  Historical procedures
"^DD",811.2,811.2,3112,21,5,0)
selected will require the CPRS user to enter a visit date.
"^DD",811.2,811.2,3112,21,6,0)
 
"^DD",811.2,811.2,3112,21,7,0)
If this field is not present the taxonomy name will be used.
"^DD",811.2,811.2,3112,"DT")
3000503
"^DD",811.2,811.22102,0)
ICD9 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22102,0,"DT")
2980817
"^DD",811.2,811.22102,0,"IX","AC",811.22102,.01)

"^DD",811.2,811.22102,0,"IX","B",811.22102,.01)

"^DD",811.2,811.22102,0,"NM","ICD9 RANGE OF CODED VALUES")

"^DD",811.2,811.22102,0,"UP")
811.2
"^DD",811.2,811.22102,.01,0)
ICD9 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,.01,1,0)
^.1^^-1
"^DD",811.2,811.22102,.01,1,1,0)
811.22102^B
"^DD",811.2,811.22102,.01,1,1,1)
S ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22102,.01,1,1,2)
K ^PXD(811.2,DA(1),80,"B",$E(X,1,30),DA)
"^DD",811.2,811.22102,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,.01,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,.01,"DT")
3000328
"^DD",811.2,811.22102,1,0)
ICD9 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD9^PXRMCODE
"^DD",811.2,811.22102,1,1,0)
^.1^^0
"^DD",811.2,811.22102,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22102,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22102,1,21,1,0)
This multiple is used to define ranges of ICD9 coded values which
"^DD",811.2,811.22102,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22102,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22102,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22102,1,"DT")
3000328
"^DD",811.2,811.22103,0)
ICD0 RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22103,0,"DT")
2980817
"^DD",811.2,811.22103,0,"IX","B",811.22103,.01)

"^DD",811.2,811.22103,0,"NM","ICD0 RANGE OF CODED VALUES")

"^DD",811.2,811.22103,0,"UP")
811.2
"^DD",811.2,811.22103,.01,0)
ICD0 LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,.01,1,0)
^.1^^-1
"^DD",811.2,811.22103,.01,1,1,0)
811.22103^B
"^DD",811.2,811.22103,.01,1,1,1)
S ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22103,.01,1,1,2)
K ^PXD(811.2,DA(1),80.1,"B",$E(X,1,30),DA)
"^DD",811.2,811.22103,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,.01,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,.01,"DT")
3000328
"^DD",811.2,811.22103,1,0)
ICD0 HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICD0^PXRMCODE
"^DD",811.2,811.22103,1,1,0)
^.1^^0
"^DD",811.2,811.22103,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22103,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22103,1,21,1,0)
This multiple is used to define ranges of ICD0 coded values which
"^DD",811.2,811.22103,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22103,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22103,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22103,1,"DT")
3000328
"^DD",811.2,811.22104,0)
CPT RANGE OF CODED VALUES SUB-FIELD^^1^2
"^DD",811.2,811.22104,0,"DT")
2980817
"^DD",811.2,811.22104,0,"IX","B",811.22104,.01)

"^DD",811.2,811.22104,0,"NM","CPT RANGE OF CODED VALUES")

"^DD",811.2,811.22104,0,"UP")
811.2
"^DD",811.2,811.22104,.01,0)
CPT LOW CODED VALUE^MFX^^0;1^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,.01,1,0)
^.1^^-1
"^DD",811.2,811.22104,.01,1,1,0)
811.22104^B
"^DD",811.2,811.22104,.01,1,1,1)
S ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)=""
"^DD",811.2,811.22104,.01,1,1,2)
K ^PXD(811.2,DA(1),81,"B",$E(X,1,30),DA)
"^DD",811.2,811.22104,.01,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,.01,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,.01,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,.01,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,.01,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,.01,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,.01,"DT")
3000328
"^DD",811.2,811.22104,1,0)
CPT HIGH CODED VALUE^FX^^0;2^K:$L(X)>7!($L(X)<3) X D VCICPT^PXRMCODE
"^DD",811.2,811.22104,1,1,0)
^.1^^0
"^DD",811.2,811.22104,1,3)
Answer must be 3-7 characters in length.
"^DD",811.2,811.22104,1,21,0)
^^4^4^3000502^
"^DD",811.2,811.22104,1,21,1,0)
This multiple is used to define ranges of CPT coded values which
"^DD",811.2,811.22104,1,21,2,0)
constitute taxonomy entries. A range is defined by a low and high
"^DD",811.2,811.22104,1,21,3,0)
value which are inclusive. The low and high value are actual codes
"^DD",811.2,811.22104,1,21,4,0)
from the source file, not internal entry numbers.
"^DD",811.2,811.22104,1,"DT")
3000328
"^DD",811.2,811.23102,0)
SELECTABLE DIAGNOSIS SUB-FIELD^^2^3
"^DD",811.2,811.23102,0,"DT")
2991025
"^DD",811.2,811.23102,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23102,0,"IX","B",811.23102,.01)

"^DD",811.2,811.23102,0,"NM","SELECTABLE DIAGNOSIS")

"^DD",811.2,811.23102,0,"UP")
811.2
"^DD",811.2,811.23102,.01,0)
SELECTABLE DIAGNOSIS^MP80'^ICD9(^0;1^Q
"^DD",811.2,811.23102,.01,1,0)
^.1
"^DD",811.2,811.23102,.01,1,1,0)
811.23102^B
"^DD",811.2,811.23102,.01,1,1,1)
S ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23102,.01,1,1,2)
K ^PXD(811.2,DA(1),"SDX","B",$E(X,1,30),DA)
"^DD",811.2,811.23102,.01,3)
Enter a ICD9 code that can be entered in CPRS to satisfy a reminder.
"^DD",811.2,811.23102,.01,21,0)
^.001^2^2^3000503^^
"^DD",811.2,811.23102,.01,21,1,0)
This is the selectable diagnosis code that will appear in the taxonomy
"^DD",811.2,811.23102,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23102,.01,"DT")
2991025
"^DD",811.2,811.23102,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23102,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23102,1,21,0)
^.001^3^3^3000502^^
"^DD",811.2,811.23102,1,21,1,0)
This is the description of the diagnosis code that will appear in the
"^DD",811.2,811.23102,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard diagnosis
"^DD",811.2,811.23102,1,21,3,0)
code name is the default.
"^DD",811.2,811.23102,1,"DT")
2991025
"^DD",811.2,811.23102,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23102,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23102,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23102,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23102,2,"DT")
2991025
"^DD",811.2,811.23104,0)
SELECTABLE PROCEDURE SUB-FIELD^^2^3
"^DD",811.2,811.23104,0,"DT")
2991025
"^DD",811.2,811.23104,0,"ID",1)
W "   ",$P(^(0),U,2)
"^DD",811.2,811.23104,0,"IX","B",811.23104,.01)

"^DD",811.2,811.23104,0,"NM","SELECTABLE PROCEDURE")

"^DD",811.2,811.23104,0,"UP")
811.2
"^DD",811.2,811.23104,.01,0)
SELECTABLE PROCEDURE^MP81'^ICPT(^0;1^Q
"^DD",811.2,811.23104,.01,1,0)
^.1
"^DD",811.2,811.23104,.01,1,1,0)
811.23104^B
"^DD",811.2,811.23104,.01,1,1,1)
S ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)=""
"^DD",811.2,811.23104,.01,1,1,2)
K ^PXD(811.2,DA(1),"SPR","B",$E(X,1,30),DA)
"^DD",811.2,811.23104,.01,3)
Enter a CPT code that can be entered in CPRS to satisfy a reminder
"^DD",811.2,811.23104,.01,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,.01,21,1,0)
This is the selectable procedure code that will appear in the taxonomy
"^DD",811.2,811.23104,.01,21,2,0)
dialog. Only active codes may be selected.
"^DD",811.2,811.23104,.01,"DT")
2991025
"^DD",811.2,811.23104,1,0)
DISPLAY TEXT^F^^0;2^K:$L(X)>40!($L(X)<1) X
"^DD",811.2,811.23104,1,3)
Answer must be 1-40 characters in length.
"^DD",811.2,811.23104,1,21,0)
^^3^3^3000502^
"^DD",811.2,811.23104,1,21,1,0)
This is the description of the procedure code that will appear in the
"^DD",811.2,811.23104,1,21,2,0)
taxonomy dialog in CPRS. The field is optional - the standard standard
"^DD",811.2,811.23104,1,21,3,0)
code name is the default.
"^DD",811.2,811.23104,1,"DT")
2991025
"^DD",811.2,811.23104,2,0)
DISABLED^S^1:DISABLED;^0;3^Q
"^DD",811.2,811.23104,2,21,0)
^^2^2^3000502^
"^DD",811.2,811.23104,2,21,1,0)
This field should be input if a selectable code is to be excluded
"^DD",811.2,811.23104,2,21,2,0)
temporarily from the taxonomy dialog in CPRS.
"^DD",811.2,811.23104,2,"DT")
2991025
"^DD",811.5,811.5,0)
FIELD^^20^7
"^DD",811.5,811.5,0,"DDA")
N
"^DD",811.5,811.5,0,"DT")
3001004
"^DD",811.5,811.5,0,"ID",.02)
W ?40,@("$P($P($C(59)_$S($D(^DD(811.5,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",811.5,811.5,0,"NM","REMINDER TERM")

"^DD",811.5,811.5,0,"PT",810.31,.03)

"^DD",811.5,811.5,0,"PT",810.31,.04)

"^DD",811.5,811.5,0,"PT",810.32,.01)

"^DD",811.5,811.5,0,"PT",811.902,.01)

"^DD",811.5,811.5,0,"VRPK")
CLINICAL REMINDERS
"^DD",811.5,811.5,.01,0)
NAME^RF^^0;1^K:$L(X)>64!($L(X)<3)!'(X'?1P.E) X
"^DD",811.5,811.5,.01,1,0)
^.1^^0
"^DD",811.5,811.5,.01,3)
Enter the name of the term, up to 64 characters.
"^DD",811.5,811.5,.01,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,.01,21,1,0)
This is the name of the term.
"^DD",811.5,811.5,.01,"DT")
3000601
"^DD",811.5,811.5,.02,0)
TERM TYPE^RS^N:NATIONAL;V:VISN;L:LOCAL;^0;2^Q
"^DD",811.5,811.5,.02,3)
Enter the term type.
"^DD",811.5,811.5,.02,21,0)
^.001^1^1^3000509^^^
"^DD",811.5,811.5,.02,21,1,0)
This is the term type.
"^DD",811.5,811.5,.02,"DT")
3000601
"^DD",811.5,811.5,.03,0)
SPONSOR^P811.6^PXRMD(811.6,^0;3^Q
"^DD",811.5,811.5,.03,3)
Enter the sponsor of this term.
"^DD",811.5,811.5,.03,21,0)
^.001^2^2^3000505^^^^
"^DD",811.5,811.5,.03,21,1,0)
This field identifies the sponsor of the reminder term. For nationally
"^DD",811.5,811.5,.03,21,2,0)
distributed reminders, this will be a nationally distributing sponsor.
"^DD",811.5,811.5,.03,"DT")
3000307
"^DD",811.5,811.5,.04,0)
DATE CREATED^RD^^0;4^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.04,21,0)
^.001^1^1^3000508^^
"^DD",811.5,811.5,.04,21,1,0)
This is the date when the term was created.
"^DD",811.5,811.5,.04,"DT")
3000505
"^DD",811.5,811.5,.05,0)
DATE LAST MODIFIED^D^^0;5^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.5,.05,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,.05,21,1,0)
This is the date the term was last modified.
"^DD",811.5,811.5,.05,"DT")
3000505
"^DD",811.5,811.5,1,0)
DESCRIPTION^811.51^^1;0
"^DD",811.5,811.5,1,21,0)
^^1^1^3000505^
"^DD",811.5,811.5,1,21,1,0)
This is a description of the term.
"^DD",811.5,811.5,20,0)
FINDINGS^811.52V^^20;0
"^DD",811.5,811.5,20,21,0)
^.001^4^4^3010215^^^^
"^DD",811.5,811.5,20,21,1,0)
This multiple identifies which finding items have been selected to
"^DD",811.5,811.5,20,21,2,0)
represent the term. If there is more than one finding item they will
"^DD",811.5,811.5,20,21,3,0)
all be evaluated and the most recent TRUE finding will represent the
"^DD",811.5,811.5,20,21,4,0)
term.
"^DD",811.5,811.5,20,"DT")
2990914
"^DD",811.5,811.51,0)
DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.5,811.51,0,"DT")
2990512
"^DD",811.5,811.51,0,"NM","DESCRIPTION")

"^DD",811.5,811.51,0,"UP")
811.5
"^DD",811.5,811.51,.01,0)
DESCRIPTION^W^^0;1^Q
"^DD",811.5,811.51,.01,3)
Enter the description of the term.
"^DD",811.5,811.51,.01,"DT")
2990512
"^DD",811.5,811.52,0)
FINDINGS SUB-FIELD^^15^8
"^DD",811.5,811.52,0,"DT")
3001004
"^DD",811.5,811.52,0,"IX","B",811.52,.01)

"^DD",811.5,811.52,0,"IX","E",811.52,.01)

"^DD",811.5,811.52,0,"NM","FINDINGS")

"^DD",811.5,811.52,0,"UP")
811.5
"^DD",811.5,811.52,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.5,811.52,.01,1,0)
^.1
"^DD",811.5,811.52,.01,1,1,0)
811.52^B
"^DD",811.5,811.52,.01,1,1,1)
S ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.5,811.52,.01,1,1,2)
K ^PXRMD(811.5,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.5,811.52,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.5,811.52,.01,1,2,0)
811.52^E^MUMPS
"^DD",811.5,811.52,.01,1,2,1)
S ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.5,811.52,.01,1,2,2)
K ^PXRMD(811.5,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.5,811.52,.01,1,2,"%D",0)
^^1^1^2990913^
"^DD",811.5,811.52,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.5,811.52,.01,1,2,"DT")
2990913
"^DD",811.5,811.52,.01,3)
Enter a new finding item
"^DD",811.5,811.52,.01,"DT")
3000421
"^DD",811.5,811.52,.01,"V",0)
^.12P^15^15
"^DD",811.5,811.52,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.5,811.52,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.5,811.52,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.5,811.52,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.5,811.52,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.5,811.52,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.5,811.52,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.5,811.52,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.5,811.52,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.5,811.52,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.5,811.52,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.5,811.52,.01,"V",12,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.5,811.52,.01,"V",13,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.5,811.52,.01,"V",14,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.5,811.52,.01,"V",15,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.5,811.52,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.5,811.52,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.5,811.52,9,21,0)
^^6^6^3000505^
"^DD",811.5,811.52,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.5,811.52,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.5,811.52,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.5,811.52,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.5,811.52,9,21,5,0)
empty then the finding never expires.
"^DD",811.5,811.52,9,21,6,0)

"^DD",811.5,811.52,9,"DT")
3000427
"^DD",811.5,811.52,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:NO;^0;9^Q
"^DD",811.5,811.52,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.5,811.52,10,21,0)
^^5^5^3000505^
"^DD",811.5,811.52,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.5,811.52,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.5,811.52,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.5,811.52,10,21,4,0)
only to taxonomy findings.
"^DD",811.5,811.52,10,21,5,0)

"^DD",811.5,811.52,10,"DT")
3000314
"^DD",811.5,811.52,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.5,811.52,11,3)
Type a number between 0 and 999, 0 decimal digits.
"^DD",811.5,811.52,11,21,0)
^.001^17^17^3000508^^^^
"^DD",811.5,811.52,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.5,811.52,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.5,811.52,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.5,811.52,11,21,4,0)
health factor section of the Clinical Reminders Manager Manual.
"^DD",811.5,811.52,11,21,5,0)

"^DD",811.5,811.52,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.5,811.52,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.5,811.52,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.5,811.52,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.5,811.52,11,21,10,0)
When the dates are the same, the health factor with the highest WITHIN
"^DD",811.5,811.52,11,21,11,0)
CATEGORY RANK will be used. This is a numerical value like RANK
"^DD",811.5,811.52,11,21,12,0)
FREQUENCY with 1 being the highest rank.
"^DD",811.5,811.52,11,21,13,0)

"^DD",811.5,811.52,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.5,811.52,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.5,811.52,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.5,811.52,11,21,17,0)

"^DD",811.5,811.52,11,"DT")
3000505
"^DD",811.5,811.52,12,0)
EFFECTIVE DATE^D^^0;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.5,811.52,12,3)
Enter the EFFECTIVE DATE
"^DD",811.5,811.52,12,21,0)
^.001^2^2^3001004^^^^
"^DD",811.5,811.52,12,21,1,0)
Any findings with a date older than the EFFECTIVE DATE are expired and
"^DD",811.5,811.52,12,21,2,0)
will be treated as false during the reminder evaluation.
"^DD",811.5,811.52,12,"DT")
3001010
"^DD",811.5,811.52,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALET^PXRMMH
"^DD",811.5,811.52,13,3)
Enter the scale number or scale name.
"^DD",811.5,811.52,13,4)
D SCHELPT^PXRMMH
"^DD",811.5,811.52,13,21,0)
^^3^3^3000505^
"^DD",811.5,811.52,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.5,811.52,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.5,811.52,13,21,3,0)

"^DD",811.5,811.52,13,"DT")
3000321
"^DD",811.5,811.52,14,0)
CONDITION^FXO^^3;1^K:$L(X)>225!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.5,811.52,14,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,14,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.5,811.52,14,3)
Enter logic to evaluate findings value
"^DD",811.5,811.52,14,21,0)
^.001^49^49^3001004^^
"^DD",811.5,811.52,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.5,811.52,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.5,811.52,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.5,811.52,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.5,811.52,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.5,811.52,14,21,6,0)
(e.g., 3).
"^DD",811.5,811.52,14,21,7,0)
 
"^DD",811.5,811.52,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.5,811.52,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.5,811.52,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.5,811.52,14,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.5,811.52,14,21,12,0)
found (false).
"^DD",811.5,811.52,14,21,13,0)
 
"^DD",811.5,811.52,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.5,811.52,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.5,811.52,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.5,811.52,14,21,17,0)
         
"^DD",811.5,811.52,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.5,811.52,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.5,811.52,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.5,811.52,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,22,0)
    systolic and diastolic values
"^DD",811.5,811.52,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.5,811.52,14,21,24,0)
    systolic or diastolic values
"^DD",811.5,811.52,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.5,811.52,14,21,26,0)
 
"^DD",811.5,811.52,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.5,811.52,14,21,28,0)
for the value and examples:
"^DD",811.5,811.52,14,21,29,0)
 
"^DD",811.5,811.52,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.5,811.52,14,21,31,0)
 
"^DD",811.5,811.52,14,21,32,0)
 Drug                       None
"^DD",811.5,811.52,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.5,811.52,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.5,811.52,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.5,811.52,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.5,811.52,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.5,811.52,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.5,811.52,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.5,811.52,14,21,40,0)
 Radiology Procedure        None
"^DD",811.5,811.52,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.5,811.52,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.5,811.52,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.5,811.52,14,21,44,0)
 VA Drug Class              None
"^DD",811.5,811.52,14,21,45,0)
 VA Generic                 None
"^DD",811.5,811.52,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.5,811.52,14,21,47,0)
 
"^DD",811.5,811.52,14,21,48,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.5,811.52,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.5,811.52,14,"DT")
3001004
"^DD",811.5,811.52,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.5,811.52,15,3)
Enter NO to make the condition case insensitive
"^DD",811.5,811.52,15,21,0)
^.001^3^3^3010215^^^
"^DD",811.5,811.52,15,21,1,0)
When CONDITION CASE SENSITIVE is NO then the CONDITION will be
"^DD",811.5,811.52,15,21,2,0)
evaluated without regards to case. The default is YES so that CONDITION
"^DD",811.5,811.52,15,21,3,0)
evaluation is case sensitive.  
"^DD",811.5,811.52,15,"DT")
3010215
"^DD",811.9,811.9,0)
FIELD^^.01^31
"^DD",811.9,811.9,0,"DDA")
N
"^DD",811.9,811.9,0,"DT")
3001004
"^DD",811.9,811.9,0,"IX","AD",811.9,.01)

"^DD",811.9,811.9,0,"IX","AG",811.9,51)

"^DD",811.9,811.9,0,"IX","E",811.902,.01)

"^DD",811.9,811.9,0,"NM","REMINDER DEFINITION")

"^DD",811.9,811.9,0,"PT",142.14,.01)

"^DD",811.9,811.9,0,"PT",801.41,2)

"^DD",811.9,811.9,0,"PT",810.12,.01)

"^DD",811.9,811.9,0,"PT",811.72,.01)

"^DD",811.9,811.9,0,"PT",811.9,1.4)

"^DD",811.9,811.9,0,"VRPK")
CLINICAL REMINDERS
"^DD",811.9,811.9,.01,0)
NAME^RFX^^0;1^K:$L(X)>35!($L(X)<3)!'(X'?1P.E)!('$$VNAME^PXRMINTR(X,811.9)) X
"^DD",811.9,811.9,.01,1,0)
^.1^^-1
"^DD",811.9,811.9,.01,1,2,0)
811.9^AD^MUMPS
"^DD",811.9,811.9,.01,1,2,1)
Q
"^DD",811.9,811.9,.01,1,2,2)
D DELEXTL^PXRMBXTL(DA)
"^DD",811.9,811.9,.01,1,2,"DT")
2980619
"^DD",811.9,811.9,.01,3)
Enter the name of the clinical reminder.
"^DD",811.9,811.9,.01,21,0)
^.001^8^8^3000505^^^^
"^DD",811.9,811.9,.01,21,1,0)
This field is the name of a clinical reminder definition. Nationally
"^DD",811.9,811.9,.01,21,2,0)
distributed reminder definition names are prefixed with "VA-". The VA-
"^DD",811.9,811.9,.01,21,3,0)
prefixed reminder definitions cannot be altered by a site, but may be
"^DD",811.9,811.9,.01,21,4,0)
inactivated so they will not be selectable.
"^DD",811.9,811.9,.01,21,5,0)
 
"^DD",811.9,811.9,.01,21,6,0)
Local modifications can be made to any "VA-" reminder definition by
"^DD",811.9,811.9,.01,21,7,0)
copying the definition to a new one with a unique name and then making
"^DD",811.9,811.9,.01,21,8,0)
modifications to the new definition which meet local criteria.
"^DD",811.9,811.9,.01,23,0)
^.001^6^6^3000505^^^^
"^DD",811.9,811.9,.01,23,1,0)
Reminders created by a site are stored at internal entry numbers
"^DD",811.9,811.9,.01,23,2,0)
consisting of the primary facilities institution number concatenated
"^DD",811.9,811.9,.01,23,3,0)
with an incremented unique number beginning with "000".  
"^DD",811.9,811.9,.01,23,4,0)
 
"^DD",811.9,811.9,.01,23,5,0)
Any entries in the file preceding 100000 will not be alterable by a
"^DD",811.9,811.9,.01,23,6,0)
site. These are the nationally distributed reminders.
"^DD",811.9,811.9,.01,"DT")
3000601
"^DD",811.9,811.9,1.2,0)
PRINT NAME^F^^0;3^K:$L(X)>35!($L(X)<3) X
"^DD",811.9,811.9,1.2,1,0)
^.1^^0
"^DD",811.9,811.9,1.2,3)
Enter the print name.
"^DD",811.9,811.9,1.2,21,0)
^^2^2^3000426^
"^DD",811.9,811.9,1.2,21,1,0)
This is the name that is used when the results of a reminder evaluation
"^DD",811.9,811.9,1.2,21,2,0)
are displayed.
"^DD",811.9,811.9,1.2,"DT")
3000216
"^DD",811.9,811.9,1.3,0)
DO IN ADVANCE TIME FRAME^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.9,1.3,3)
Enter time period to mark the reminder due in advance (e.g., 6M,1Y).
"^DD",811.9,811.9,1.3,21,0)
^.001^6^6^3000503^^
"^DD",811.9,811.9,1.3,21,1,0)
This field is used to let a reminder become due earlier than the date
"^DD",811.9,811.9,1.3,21,2,0)
determined by adding the frequency to the date when the reminder was
"^DD",811.9,811.9,1.3,21,3,0)
last resolved. For example, if the frequency is 1Y (one year) and the
"^DD",811.9,811.9,1.3,21,4,0)
DO IN ADVANCE TIME FRAME is 1M (one month) the reminder would have a
"^DD",811.9,811.9,1.3,21,5,0)
status of "DUE SOON" 11 months after it was last resolved. After one
"^DD",811.9,811.9,1.3,21,6,0)
year has passed the STATUS would be "DUE."
"^DD",811.9,811.9,1.3,"DT")
3000427
"^DD",811.9,811.9,1.4,0)
RELATED REMINDER GUIDELINE^*P811.9^PXD(811.9,^0;5^S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,1.4,3)
Enter the related national standard reminder if this reminder replaces the standard.
"^DD",811.9,811.9,1.4,12)
Look-up on National standard reminders for Congressional reporting
"^DD",811.9,811.9,1.4,12.1)
S DIC("S")="I $E($P(^(0),U,1),1,4)=""VA-*"""
"^DD",811.9,811.9,1.4,21,0)
^.001^9^9^3010223^^^^
"^DD",811.9,811.9,1.4,21,1,0)
If this local reminder replaces an NCHP related reminder, then identify
"^DD",811.9,811.9,1.4,21,2,0)
the related NCHP reminder here.
"^DD",811.9,811.9,1.4,21,3,0)
 
"^DD",811.9,811.9,1.4,21,4,0)
The National Center for Health Promotion (NCHP) has identified
"^DD",811.9,811.9,1.4,21,5,0)
reminders which must be tracked at local facilities and reported on to
"^DD",811.9,811.9,1.4,21,6,0)
Congress. The reminders that address the NCHP reminders are prefixed
"^DD",811.9,811.9,1.4,21,7,0)
with "VA-*".  These reminders may be used in the Health Summary
"^DD",811.9,811.9,1.4,21,8,0)
Components, or replaced by a local reminder that also satisfies the
"^DD",811.9,811.9,1.4,21,9,0)
NCHP guideline. 
"^DD",811.9,811.9,1.4,"DT")
2970509
"^DD",811.9,811.9,1.6,0)
INACTIVE FLAG^SX^1:INACTIVE;^0;6^Q
"^DD",811.9,811.9,1.6,1,0)
^.1
"^DD",811.9,811.9,1.6,1,1,0)
^^TRIGGER^811.9^1.7
"^DD",811.9,811.9,1.6,1,1,1)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,1.1) X ^DD(811.9,1.6,1,1,1.4)
"^DD",811.9,811.9,1.6,1,1,1.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,1.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,2)
K DIV S DIV=X,D0=DA,DIV(0)=D0 S Y(1)=$S($D(^PXD(811.9,D0,0)):^(0),1:"") S X=$P(Y(1),U,7),X=X S DIU=X K Y X ^DD(811.9,1.6,1,1,2.1) X ^DD(811.9,1.6,1,1,2.4)
"^DD",811.9,811.9,1.6,1,1,2.1)
S X=DIV S %=$P($H,",",2),X=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"^DD",811.9,811.9,1.6,1,1,2.4)
S DIH=$S($D(^PXD(811.9,DIV(0),0)):^(0),1:""),DIV=X S $P(^(0),U,7)=DIV,DIH=811.9,DIG=1.7 D ^DICR:$O(^DD(DIH,DIG,1,0))>0
"^DD",811.9,811.9,1.6,1,1,"CREATE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DELETE VALUE")
NOW
"^DD",811.9,811.9,1.6,1,1,"DT")
2971008
"^DD",811.9,811.9,1.6,1,1,"FIELD")
INACTIVE DATE
"^DD",811.9,811.9,1.6,3)
Enter "1" to inactivate the reminder.
"^DD",811.9,811.9,1.6,21,0)
^.001^6^6^3000503^^^^
"^DD",811.9,811.9,1.6,21,1,0)
Reminders that are inactive will not be evaluated. The Clinical
"^DD",811.9,811.9,1.6,21,2,0)
Maintenance component will return a message stating the reminder is
"^DD",811.9,811.9,1.6,21,3,0)
inactive and the date when it was made inactive.
"^DD",811.9,811.9,1.6,21,4,0)

"^DD",811.9,811.9,1.6,21,5,0)
Other applications that use reminders may use this flag to determine if
"^DD",811.9,811.9,1.6,21,6,0)
a reminder can be selected for inclusion.
"^DD",811.9,811.9,1.6,23,0)
^^7^7^3000503^
"^DD",811.9,811.9,1.6,23,1,0)
When a reminder is inactive the following will occur:
"^DD",811.9,811.9,1.6,23,2,0)
1. It cannot be selected for inclusion on a Health Summary. (Other
"^DD",811.9,811.9,1.6,23,3,0)
packages that use Reminders should follow this rule.)
"^DD",811.9,811.9,1.6,23,4,0)
2. In the Clinical Maintenance mode a message will be returned stating the
"^DD",811.9,811.9,1.6,23,5,0)
reminder is inactive along with the date and time when it was made
"^DD",811.9,811.9,1.6,23,6,0)
inactive.
"^DD",811.9,811.9,1.6,23,7,0)
3. In any other mode nothing will be returned.
"^DD",811.9,811.9,1.6,"DT")
2971008
"^DD",811.9,811.9,1.7,0)
INACTIVE CHANGE DATE^DX^^0;7^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.9,1.7,5,1,0)
811.9^1.6^1
"^DD",811.9,811.9,1.7,9)
^
"^DD",811.9,811.9,1.7,21,0)
^.001^2^2^3000428^^
"^DD",811.9,811.9,1.7,21,1,0)
This is the date and time when the INACTIVE FLAG was last changed. It
"^DD",811.9,811.9,1.7,21,2,0)
is set automatically. Users should never edit this field.
"^DD",811.9,811.9,1.7,23,0)
^.001^1^1^3000428^^
"^DD",811.9,811.9,1.7,23,1,0)
This field is set by a trigger on INACTIVE FLAG.
"^DD",811.9,811.9,1.7,"DT")
2971008
"^DD",811.9,811.9,1.8,0)
IGNORE ON N/A^FX^^0;8^S X=$$UP^XLFSTR(X) K:'$$VIGNAC^PXRMINTR(X) X
"^DD",811.9,811.9,1.8,3)
Input a string of N/A code(s)
"^DD",811.9,811.9,1.8,21,0)
^.001^10^10^3000428^^^^
"^DD",811.9,811.9,1.8,21,1,0)
This field allows the user to stop reminders from being printed in the
"^DD",811.9,811.9,1.8,21,2,0)
Clinical Maintenance component if the reminder is N/A. This is free
"^DD",811.9,811.9,1.8,21,3,0)
text field that can contain any combination of the following codes:
"^DD",811.9,811.9,1.8,21,4,0)
 
"^DD",811.9,811.9,1.8,21,5,0)
Code  Description
"^DD",811.9,811.9,1.8,21,6,0)
 A    N/A due to not meeting age criteria.
"^DD",811.9,811.9,1.8,21,7,0)
 I    N/A due to inactive reminder.
"^DD",811.9,811.9,1.8,21,8,0)
 R    N/A due to the wrong race.
"^DD",811.9,811.9,1.8,21,9,0)
 S    N/A due to the wrong sex.
"^DD",811.9,811.9,1.8,21,10,0)
 *    N/A for any reason.
"^DD",811.9,811.9,1.8,"DT")
2991103
"^DD",811.9,811.9,1.9,0)
SEX SPECIFIC^S^F:FEMALE;M:MALE;^0;9^Q
"^DD",811.9,811.9,1.9,3)
Enter M or F if this reminder is sex specific.
"^DD",811.9,811.9,1.9,21,0)
^.001^5^5^3000428^^^^
"^DD",811.9,811.9,1.9,21,1,0)
This field is used to make a reminder sex specific. If an "F" is
"^DD",811.9,811.9,1.9,21,2,0)
entered the reminder applies only to females. If an "M" is entered the
"^DD",811.9,811.9,1.9,21,3,0)
reminder applies only to males. If it is left blank then the reminder
"^DD",811.9,811.9,1.9,21,4,0)
is applicable to either sex.
"^DD",811.9,811.9,1.9,21,5,0)

"^DD",811.9,811.9,1.9,"DT")
2951109
"^DD",811.9,811.9,1.91,0)
PRIORITY^S^1:HIGH;2:MEDIUM;3:LOW;^0;10^Q
"^DD",811.9,811.9,1.91,3)
Enter the reminder priority.
"^DD",811.9,811.9,1.91,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,1.91,21,1,0)
The reminder priority is used by the CPRS GUI for sorting purposes.
"^DD",811.9,811.9,1.91,"DT")
2990716
"^DD",811.9,811.9,2,0)
REMINDER DESCRIPTION^811.92^^1;0
"^DD",811.9,811.9,2,21,0)
^.001^1^1^3000428^^^^
"^DD",811.9,811.9,2,21,1,0)
This field contains a clinical description of the clinical reminder.
"^DD",811.9,811.9,2,"DT")
2960131
"^DD",811.9,811.9,3,0)
TECHNICAL DESCRIPTION^811.93^^2;0
"^DD",811.9,811.9,3,21,0)
^.001^2^2^3000428^^^^
"^DD",811.9,811.9,3,21,1,0)
The technical description describes how a reminder is supposed to work and
"^DD",811.9,811.9,3,21,2,0)
why the definition is set up the way it is.
"^DD",811.9,811.9,3,"DT")
2960131
"^DD",811.9,811.9,7,0)
BASELINE AGE FINDINGS^811.97^^7;0
"^DD",811.9,811.9,7,21,0)
^.001^2^2^3010302^^^^
"^DD",811.9,811.9,7,21,1,0)
This allows the user to define reminder frequencies for age ranges. An
"^DD",811.9,811.9,7,21,2,0)
age range is defined by a minimum and maximum age (in years).
"^DD",811.9,811.9,7,"DT")
2970711
"^DD",811.9,811.9,20,0)
FINDINGS^811.902V^^20;0
"^DD",811.9,811.9,20,21,0)
^.001^17^17^3010223^^^^
"^DD",811.9,811.9,20,21,1,0)
This multiple identifies which finding items to use when evaluating the
"^DD",811.9,811.9,20,21,2,0)
reminder. Finding items may be categorized into 3 types of findings
"^DD",811.9,811.9,20,21,3,0)
(patient cohort, resolution, or informational). How patient findings
"^DD",811.9,811.9,20,21,4,0)
will be used depends on the additional fields defined, or not defined,
"^DD",811.9,811.9,20,21,5,0)
for the finding items:
"^DD",811.9,811.9,20,21,6,0)
 
"^DD",811.9,811.9,20,21,7,0)
1. To define a finding item to use in the patient cohort logic, add
"^DD",811.9,811.9,20,21,8,0)
the finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,20,21,9,0)
 
"^DD",811.9,811.9,20,21,10,0)
2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.9,20,21,11,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.9,20,21,12,0)
 
"^DD",811.9,811.9,20,21,13,0)
3. To define a finding item to use for information only, leave the USE IN
"^DD",811.9,811.9,20,21,14,0)
PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.9,20,21,15,0)
 
"^DD",811.9,811.9,20,21,16,0)
Any type of finding above can be used to override the baseline frequency
"^DD",811.9,811.9,20,21,17,0)
age range set.
"^DD",811.9,811.9,20,"DT")
2990702
"^DD",811.9,811.9,30,0)
CUSTOMIZED COHORT LOGIC^FX^^30;1^K:'$$VALID^PXRMLOG(X,3,245) X
"^DD",811.9,811.9,30,.1)
CUSTOMIZED PATIENT COHORT LOGIC (OPTIONAL)
"^DD",811.9,811.9,30,1,0)
^.1^^0
"^DD",811.9,811.9,30,3)
Enter a Boolean string from 3-245 characters that uses findings to define the patient cohort.
"^DD",811.9,811.9,30,21,0)
^.001^12^12^3010302^^^
"^DD",811.9,811.9,30,21,1,0)
This field may be optionally used to define a customized Boolean logic
"^DD",811.9,811.9,30,21,2,0)
string that defines how and what findings in a reminder should be used
"^DD",811.9,811.9,30,21,3,0)
to determine if the reminder applies to the patient. The INTERNAL
"^DD",811.9,811.9,30,21,4,0)
PATIENT COHORT LOGIC field is automatically defined for you based on
"^DD",811.9,811.9,30,21,5,0)
the USE IN PATIENT COHORT LOGIC fields on findings. The customized
"^DD",811.9,811.9,30,21,6,0)
logic is used when the USE IN PATIENT COHORT LOGIC fields associated
"^DD",811.9,811.9,30,21,7,0)
with each finding do not provide the ability to create the required
"^DD",811.9,811.9,30,21,8,0)
logic string. (e.g., grouping various findings within parenthesis)
"^DD",811.9,811.9,30,21,9,0)
 
"^DD",811.9,811.9,30,21,10,0)
Tip:  Before defining the Boolean string, review the default logic
"^DD",811.9,811.9,30,21,11,0)
defined in the INTERNAL PATIENT COHORT LOGIC field using the reminder
"^DD",811.9,811.9,30,21,12,0)
inquiry option.
"^DD",811.9,811.9,30,"DT")
3000504
"^DD",811.9,811.9,31,0)
INTERNAL PATIENT COHORT LOGIC^FX^^31;1^K:$L(X)>245!($L(X)<3) X
"^DD",811.9,811.9,31,3)
Do not edit this field.
"^DD",811.9,811.9,31,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,31,21,1,0)
This filed is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,31,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,31,23,0)
^.001^4^4^3000503^^^
"^DD",811.9,811.9,31,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,31,23,2,0)
a user input Patient Cohort Logic then it is copied into this field.
"^DD",811.9,811.9,31,23,3,0)
Otherwise this field is determined using the USE IN PATIENT COHORT
"^DD",811.9,811.9,31,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,31,"DT")
2990928
"^DD",811.9,811.9,32,0)
PATIENT COHORT FINDINGS COUNT^NJ2,0^^32;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,32,3)
Do not edit this field.
"^DD",811.9,811.9,32,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,32,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,32,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,32,23,0)
^.001^3^3^3000503^^^
"^DD",811.9,811.9,32,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,32,23,2,0)
the number of findings that are in the INTERNAL PATIENT COHORT LOGIC
"^DD",811.9,811.9,32,23,3,0)
field.
"^DD",811.9,811.9,32,"DT")
2990421
"^DD",811.9,811.9,33,0)
PATIENT COHORT FINDINGS LIST^F^^32;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,33,3)
Do not edit this field.
"^DD",811.9,811.9,33,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,33,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,33,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,33,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,33,23,2,0)
a list of the findings in the INTERNAL PATIENT COHORT LOGIC field.
"^DD",811.9,811.9,33,"DT")
3000301
"^DD",811.9,811.9,34,0)
CUSTOMIZED RESOLUTION LOGIC^FX^^34;1^K:'$$VALID^PXRMLOG(X,5,245) X
"^DD",811.9,811.9,34,.1)
CUSTOMIZED RESOLUTION LOGIC (OPTIONAL)
"^DD",811.9,811.9,34,1,0)
^.1^^0
"^DD",811.9,811.9,34,3)
Enter a Boolean string from 3-245 characters that includes findings that resolve the reminder.
"^DD",811.9,811.9,34,21,0)
^.001^12^12^3010302^^^
"^DD",811.9,811.9,34,21,1,0)
This field may be used to define a customized Boolean logic string that
"^DD",811.9,811.9,34,21,2,0)
defines how and what reminder findings should be used to determine
"^DD",811.9,811.9,34,21,3,0)
if the reminder has been resolved. The INTERNAL RESOLUTION LOGIC field
"^DD",811.9,811.9,34,21,4,0)
is automatically defined for you based on the USE IN RESOLUTION LOGIC
"^DD",811.9,811.9,34,21,5,0)
fields on findings. The customized logic is used when the USE IN
"^DD",811.9,811.9,34,21,6,0)
RESOLUTION LOGIC fields associated with each finding do not provide the
"^DD",811.9,811.9,34,21,7,0)
ability to create the required logic string. (e.g., grouping various
"^DD",811.9,811.9,34,21,8,0)
findings within parenthesis)
"^DD",811.9,811.9,34,21,9,0)
 
"^DD",811.9,811.9,34,21,10,0)
Tip:  Before defining the Boolean string, review the default logic
"^DD",811.9,811.9,34,21,11,0)
defined in the INTERNAL RESOLUTION LOGIC field using the reminder
"^DD",811.9,811.9,34,21,12,0)
inquiry option.
"^DD",811.9,811.9,34,"DT")
3000504
"^DD",811.9,811.9,35,0)
INTERNAL RESOLUTION LOGIC^F^^35;1^K:$L(X)>245!($L(X)<5) X
"^DD",811.9,811.9,35,3)
Do not edit this field.
"^DD",811.9,811.9,35,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,35,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,35,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,35,23,0)
^.001^4^4^3000503^^
"^DD",811.9,811.9,35,23,1,0)
This field is computed by the Clinical Reminders software. If there is
"^DD",811.9,811.9,35,23,2,0)
a user input Resolution Logic then it is copied into this field.
"^DD",811.9,811.9,35,23,3,0)
Otherwise this field is determined using the USE IN RESOLUTION
"^DD",811.9,811.9,35,23,4,0)
LOGIC fields for each finding in the reminder definition.
"^DD",811.9,811.9,35,"DT")
2990420
"^DD",811.9,811.9,36,0)
RESOLUTION FINDINGS COUNT^NJ2,0^^36;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,36,3)
Do not edit this field.
"^DD",811.9,811.9,36,21,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,36,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,36,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,36,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,36,23,2,0)
the number of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,36,"DT")
2990421
"^DD",811.9,811.9,37,0)
RESOLUTION FINDINGS LIST^F^^36;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,37,3)
Do not edit this field.
"^DD",811.9,811.9,37,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,37,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,37,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,37,23,0)
^.001^2^2^3000503^^
"^DD",811.9,811.9,37,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,37,23,2,0)
the list of findings in the INTERNAL RESOLUTION LOGIC field.
"^DD",811.9,811.9,37,"DT")
2990421
"^DD",811.9,811.9,40,0)
AGE FINDINGS COUNT^NJ2,0^^40;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,40,3)
Do not edit this field.
"^DD",811.9,811.9,40,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,40,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,40,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,40,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,40,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,40,23,2,0)
the number of findings that can override the baseline age range frequency
"^DD",811.9,811.9,40,23,3,0)
set. It should never be edited by hand.
"^DD",811.9,811.9,40,"DT")
2990421
"^DD",811.9,811.9,41,0)
AGE FINDINGS LIST^F^^40;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,41,3)
Do not edit this field.
"^DD",811.9,811.9,41,21,0)
^^2^2^3000501^
"^DD",811.9,811.9,41,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,41,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,41,23,0)
^^3^3^3000501^
"^DD",811.9,811.9,41,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,41,23,2,0)
a list of the findings that can override the baseline age range frequency.
"^DD",811.9,811.9,41,23,3,0)
It should never be edited by hand.
"^DD",811.9,811.9,41,"DT")
2990415
"^DD",811.9,811.9,42,0)
INFORMATION FINDINGS COUNT^NJ2,0^^42;1^K:+X'=X!(X>99)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.9,42,3)
Do not edit this field.
"^DD",811.9,811.9,42,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.9,42,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,42,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,42,23,0)
^.001^3^3^3000501^^
"^DD",811.9,811.9,42,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,42,23,2,0)
the number of findings that are information only. It should never be edited
"^DD",811.9,811.9,42,23,3,0)
by hand.
"^DD",811.9,811.9,42,"DT")
2990421
"^DD",811.9,811.9,43,0)
INFORMATION FINDINGS LIST^F^^42;2^K:$L(X)>243!($L(X)<1) X
"^DD",811.9,811.9,43,3)
Do not edit this field.
"^DD",811.9,811.9,43,21,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,21,1,0)
This field is computed by the Clinical Reminders software and should
"^DD",811.9,811.9,43,21,2,0)
never be edited by hand.
"^DD",811.9,811.9,43,23,0)
^.001^2^2^3000503^^^
"^DD",811.9,811.9,43,23,1,0)
This field is computed by the Clinical Reminders software and contains
"^DD",811.9,811.9,43,23,2,0)
the number of findings. It should never be edited by hand.
"^DD",811.9,811.9,43,"DT")
2990421
"^DD",811.9,811.9,50,0)
WEB SITES^811.9002^^50;0
"^DD",811.9,811.9,50,21,0)
^.001^1^1^3010302^^^^
"^DD",811.9,811.9,50,21,1,0)
This multiple contains Web site(s) for information related to this reminder.
"^DD",811.9,811.9,50,"DT")
2991129
"^DD",811.9,811.9,51,0)
LINKED REMINDER DIALOG^*P801.41'^PXRMD(801.41,^51;1^S DIC("S")="I $P(^(0),U,4)=""R""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",811.9,811.9,51,1,0)
^.1
"^DD",811.9,811.9,51,1,1,0)
811.9^AG
"^DD",811.9,811.9,51,1,1,1)
S ^PXD(811.9,"AG",$E(X,1,30),DA)=""
"^DD",811.9,811.9,51,1,1,2)
K ^PXD(811.9,"AG",$E(X,1,30),DA)
"^DD",811.9,811.9,51,1,1,"DT")
2991005
"^DD",811.9,811.9,51,3)
Enter dialog to be used in CPRS to resolve this reminder. 
"^DD",811.9,811.9,51,12)
Reminders may only point to reminder dialog entries
"^DD",811.9,811.9,51,12.1)
S DIC("S")="I $P(^(0),U,4)=""R"""
"^DD",811.9,811.9,51,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.9,51,21,1,0)
This is the Reminder Dialog that will be used when the reminder is
"^DD",811.9,811.9,51,21,2,0)
processed in the CPRS GUI.
"^DD",811.9,811.9,51,"DT")
3000423
"^DD",811.9,811.9,60,0)
GENERAL COHORT FOUND TEXT^811.9003^^60;0
"^DD",811.9,811.9,60,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,60,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,60,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,60,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9,60,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9,60,21,5,0)
patient cohort.
"^DD",811.9,811.9,60,"DT")
3000504
"^DD",811.9,811.9,61,0)
GENERAL COHORT NOT FOUND TEXT^811.961^^61;0
"^DD",811.9,811.9,61,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,61,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,61,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.9,61,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.9,61,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.9,61,21,5,0)
patient cohort.
"^DD",811.9,811.9,61,"DT")
3000504
"^DD",811.9,811.9,65,0)
GENERAL RESOLUTION FOUND TEXT^811.965^^65;0
"^DD",811.9,811.9,65,21,0)
^^5^5^3000505^
"^DD",811.9,811.9,65,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,65,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,65,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.9,65,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.9,65,21,5,0)
reminder.
"^DD",811.9,811.9,65,"DT")
3000504
"^DD",811.9,811.9,66,0)
GENERAL RESOL NOT FOUND TEXT^811.966^^66;0
"^DD",811.9,811.9,66,21,0)
^.001^4^4^3000505^^
"^DD",811.9,811.9,66,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9,66,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9,66,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.9,66,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.9,66,"DT")
3000504
"^DD",811.9,811.9002,0)
WEB SITES SUB-FIELD^^1^3
"^DD",811.9,811.9002,0,"DT")
2991130
"^DD",811.9,811.9002,0,"IX","B",811.9002,.01)

"^DD",811.9,811.9002,0,"NM","WEB SITES")

"^DD",811.9,811.9002,0,"UP")
811.9
"^DD",811.9,811.9002,.01,0)
URL^MF^^0;1^K:$L(X)>128!($L(X)<1) X
"^DD",811.9,811.9002,.01,1,0)
^.1
"^DD",811.9,811.9002,.01,1,1,0)
811.9002^B
"^DD",811.9,811.9002,.01,1,1,1)
S ^PXD(811.9,DA(1),50,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.9002,.01,1,1,2)
K ^PXD(811.9,DA(1),50,"B",$E(X,1,30),DA)
"^DD",811.9,811.9002,.01,3)
Answer must be 1-128 characters in length.
"^DD",811.9,811.9002,.01,21,0)
^.001^1^1^3000501^^^^
"^DD",811.9,811.9002,.01,21,1,0)
This is the URL for the web site.
"^DD",811.9,811.9002,.01,"DT")
2991129
"^DD",811.9,811.9002,.02,0)
WEB SITE TITLE^F^^0;2^K:$L(X)>60!($L(X)<1) X
"^DD",811.9,811.9002,.02,3)
Answer must be 1-60 characters in length.
"^DD",811.9,811.9002,.02,21,0)
^.001^2^2^3010302^^^
"^DD",811.9,811.9002,.02,21,1,0)
This is the web site title that is used by the CPRS GUI. It will appear
"^DD",811.9,811.9002,.02,21,2,0)
after a right click allowing the user to select the web site.
"^DD",811.9,811.9002,.02,"DT")
2991130
"^DD",811.9,811.9002,1,0)
WEB SITE DESCRIPTION^811.90021^^1;0
"^DD",811.9,811.9002,1,21,0)
^.001^1^1^3010302^^^
"^DD",811.9,811.9002,1,21,1,0)
This field contains a description of the Web site.
"^DD",811.9,811.90021,0)
WEB SITE DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.90021,0,"DT")
2991130
"^DD",811.9,811.90021,0,"NM","WEB SITE DESCRIPTION")

"^DD",811.9,811.90021,0,"UP")
811.9002
"^DD",811.9,811.90021,.01,0)
WEB SITE DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.90021,.01,3)
Enter the Web site description.
"^DD",811.9,811.90021,.01,"DT")
2991130
"^DD",811.9,811.9003,0)
GENERAL COHORT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9003,0,"DT")
3000110
"^DD",811.9,811.9003,0,"NM","GENERAL COHORT FOUND TEXT")

"^DD",811.9,811.9003,0,"UP")
811.9
"^DD",811.9,811.9003,.01,0)
GENERAL COHORT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9003,.01,.1)
GENERAL PATIENT COHORT FOUND TEXT
"^DD",811.9,811.9003,.01,3)
Enter general text to display when the patient is found to be in the patient cohort.
"^DD",811.9,811.9003,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.9003,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.9003,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.9003,.01,21,3,0)
made the Patient Cohort Logic true.  This is general text, not specific to
"^DD",811.9,811.9003,.01,21,4,0)
a finding, that will display when the patient is found to be in the
"^DD",811.9,811.9003,.01,21,5,0)
patient cohort.
"^DD",811.9,811.9003,.01,"DT")
3000504
"^DD",811.9,811.902,0)
FINDINGS SUB-FIELD^^15^16
"^DD",811.9,811.902,0,"DT")
3001004
"^DD",811.9,811.902,0,"IX","B",811.902,.01)

"^DD",811.9,811.902,0,"NM","FINDINGS")

"^DD",811.9,811.902,0,"UP")
811.9
"^DD",811.9,811.902,.01,0)
FINDING ITEM^MVX^^0;1^K:'$$VFINDING^PXRMINTR(X) X
"^DD",811.9,811.902,.01,1,0)
^.1^^-1
"^DD",811.9,811.902,.01,1,1,0)
811.902^B
"^DD",811.9,811.902,.01,1,1,1)
S ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.902,.01,1,1,2)
K ^PXD(811.9,DA(1),20,"B",$E(X,1,30),DA)
"^DD",811.9,811.902,.01,1,1,3)
Required Index for Variable Pointer
"^DD",811.9,811.902,.01,1,2,0)
811.9^E^MUMPS
"^DD",811.9,811.902,.01,1,2,1)
S ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)=""
"^DD",811.9,811.902,.01,1,2,2)
K ^PXD(811.9,DA(1),20,"E",$P(X,";",2),$P(X,";",1),DA)
"^DD",811.9,811.902,.01,1,2,"%D",0)
^^1^1^2990913^^^
"^DD",811.9,811.902,.01,1,2,"%D",1,0)
This cross-reference is used to group findings by type.
"^DD",811.9,811.902,.01,1,2,"DT")
2990401
"^DD",811.9,811.902,.01,3)
Enter a finding item in the format: Prefix.Name
"^DD",811.9,811.902,.01,21,0)
^.001^18^18^3010223^^^
"^DD",811.9,811.902,.01,21,1,0)
This field identifies finding items to use in the reminder evaluation
"^DD",811.9,811.902,.01,21,2,0)
process. A finding item may be used to determine the patient cohort,
"^DD",811.9,811.902,.01,21,3,0)
resolve the reminder, or provide information to the provider.
"^DD",811.9,811.902,.01,21,4,0)
 
"^DD",811.9,811.902,.01,21,5,0)
How this finding item will be used depends on the additional fields
"^DD",811.9,811.902,.01,21,6,0)
defined, or not defined, for this finding item:
"^DD",811.9,811.902,.01,21,7,0)

"^DD",811.9,811.902,.01,21,8,0)
1. To define a finding item to use in the patient cohort logic, add the
"^DD",811.9,811.902,.01,21,9,0)
finding item and define its USE IN PATIENT COHORT LOGIC field.
"^DD",811.9,811.902,.01,21,10,0)
 
"^DD",811.9,811.902,.01,21,11,0)
2. To define a finding item to use in the resolution logic, add the
"^DD",811.9,811.902,.01,21,12,0)
finding item and define its USE IN RESOLUTION LOGIC field.
"^DD",811.9,811.902,.01,21,13,0)
 
"^DD",811.9,811.902,.01,21,14,0)
3. To define a finding item to use for information only, leave the USE
"^DD",811.9,811.902,.01,21,15,0)
IN PATIENT COHORT LOGIC and USE IN RESOLUTION LOGIC fields blank.
"^DD",811.9,811.902,.01,21,16,0)
 
"^DD",811.9,811.902,.01,21,17,0)
This finding item can be used to override the baseline frequency age
"^DD",811.9,811.902,.01,21,18,0)
range set.
"^DD",811.9,811.902,.01,"DT")
3000503
"^DD",811.9,811.902,.01,"V",0)
^.12P^16^16
"^DD",811.9,811.902,.01,"V",1,0)
50^DRUG^5^DR^n^n
"^DD",811.9,811.902,.01,"V",2,0)
9999999.09^EDUCATION TOPIC^10^ED^n^n
"^DD",811.9,811.902,.01,"V",3,0)
9999999.15^EXAM^15^EX^n^n
"^DD",811.9,811.902,.01,"V",4,0)
9999999.64^HEALTH FACTOR^20^HF^n^n
"^DD",811.9,811.902,.01,"V",5,0)
9999999.14^IMMUNIZATION^25^IM^n^n
"^DD",811.9,811.902,.01,"V",6,0)
60^LABORATORY TEST^30^LT^n^n
"^DD",811.9,811.902,.01,"V",7,0)
601^MENTAL HEALTH INSTRUMENT^35^MH^n^n
"^DD",811.9,811.902,.01,"V",8,0)
101.43^ORDERABLE ITEM^40^OI^n^n
"^DD",811.9,811.902,.01,"V",9,0)
71^RADIOLOGY PROCEDURE^45^RP^n^n
"^DD",811.9,811.902,.01,"V",10,0)
811.4^REMINDER COMPUTED FINDING^50^CF^n^n
"^DD",811.9,811.902,.01,"V",11,0)
811.2^REMINDER TAXONOMY^55^TX^n^n
"^DD",811.9,811.902,.01,"V",12,0)
811.5^REMINDER TERM^60^RT^n^n
"^DD",811.9,811.902,.01,"V",13,0)
9999999.28^SKIN TEST^65^ST^n^n
"^DD",811.9,811.902,.01,"V",14,0)
50.605^VA DRUG CLASS^70^DC^n^n
"^DD",811.9,811.902,.01,"V",15,0)
50.6^VA GENERIC^75^DG^n^n
"^DD",811.9,811.902,.01,"V",16,0)
120.51^VITAL MEASUREMENT^80^VM^n^n
"^DD",811.9,811.902,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,1,1,0)
^.1^^0
"^DD",811.9,811.902,1,3)
Enter the minimum age for the frequency associated with this finding.
"^DD",811.9,811.902,1,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.902,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.902,1,"DT")
2991027
"^DD",811.9,811.902,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,2,1,0)
^.1^^0
"^DD",811.9,811.902,2,3)
Enter the maximum age for the frequency associated with this finding.
"^DD",811.9,811.902,2,21,0)
^^2^2^3000428^
"^DD",811.9,811.902,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.902,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.902,2,"DT")
2991027
"^DD",811.9,811.902,3,0)
REMINDER FREQUENCY^FX^^0;4^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,3,1,0)
^.1^^0
"^DD",811.9,811.902,3,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,3,21,0)
^.001^6^6^3000428^^
"^DD",811.9,811.902,3,21,1,0)
If this finding is true (found) then use this frequency and the age
"^DD",811.9,811.902,3,21,2,0)
range specified by the minimum and maximum ages to override the
"^DD",811.9,811.902,3,21,3,0)
baseline frequency age range set. The frequency is input as nD, nM, or
"^DD",811.9,811.902,3,21,4,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.902,3,21,5,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.902,3,21,6,0)
values 365D, 12M, or 1Y would all work.
"^DD",811.9,811.902,3,"DT")
3000427
"^DD",811.9,811.902,4,0)
FOUND TEXT^811.9024^^1;0
"^DD",811.9,811.902,4,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,4,21,2,0)
output if this finding is found (true).
"^DD",811.9,811.902,5,0)
NOT FOUND TEXT^811.9025^^2;0
"^DD",811.9,811.902,5,21,0)
^.001^2^2^3000501^^
"^DD",811.9,811.902,5,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.902,5,21,2,0)
output if the finding is not found (false).
"^DD",811.9,811.902,6,0)
RANK FREQUENCY^NJ3,0^^0;5^K:+X'=X!(X>999)!(X<1)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,6,3)
Enter an optional rank from 1 to 999 or leave blank.
"^DD",811.9,811.902,6,21,0)
^.001^11^11^3000428^^^^
"^DD",811.9,811.902,6,21,1,0)
This field is used to rank the frequency and age range sets associated
"^DD",811.9,811.902,6,21,2,0)
with a finding. If there is more than one true finding that can
"^DD",811.9,811.902,6,21,3,0)
override the baseline frequency age range set then the determination of
"^DD",811.9,811.902,6,21,4,0)
which one to use is made based on the finding with the highest rank.
"^DD",811.9,811.902,6,21,5,0)
Ranks can range from 1 to 999 with 1 being the highest rank.
"^DD",811.9,811.902,6,21,6,0)
 
"^DD",811.9,811.902,6,21,7,0)
When the Rank field is blank (null) for all true findings that can
"^DD",811.9,811.902,6,21,8,0)
override the baseline frequency age range set then the frequency that
"^DD",811.9,811.902,6,21,9,0)
will cause the reminder to be given most often will be used. For
"^DD",811.9,811.902,6,21,10,0)
example, if finding 1 has a frequency of 6 months, and finding 2 has a
"^DD",811.9,811.902,6,21,11,0)
frequency of 1 year finding 1 will be used to override the baseline.
"^DD",811.9,811.902,6,"DT")
2990325
"^DD",811.9,811.902,7,0)
USE IN RESOLUTION LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;6^Q
"^DD",811.9,811.902,7,1,0)
^.1^^0
"^DD",811.9,811.902,7,3)
Enter the logic operator to be used in the default Internal Resolution Logic.
"^DD",811.9,811.902,7,21,0)
^.001^28^28^3010223^^
"^DD",811.9,811.902,7,21,1,0)
This optional field is used to indicate that this finding item should
"^DD",811.9,811.902,7,21,2,0)
be included as part of the default INTERNAL RESOLUTION LOGIC field for
"^DD",811.9,811.902,7,21,3,0)
this reminder. The INTERNAL RESOLUTION LOGIC, or the CUSTOMIZED
"^DD",811.9,811.902,7,21,4,0)
RESOLUTION LOGIC if defined, is used in the reminder evaluation process
"^DD",811.9,811.902,7,21,5,0)
to determine whether or not a reminder is resolved (satisfied).
"^DD",811.9,811.902,7,21,6,0)
 
"^DD",811.9,811.902,7,21,7,0)
Valid entries for the USE IN RESOLUTION LOGIC field are:
"^DD",811.9,811.902,7,21,8,0)
 
"^DD",811.9,811.902,7,21,9,0)
                       EQUATES TO BOOLEAN
"^DD",811.9,811.902,7,21,10,0)
  OPERATOR   VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,7,21,11,0)
  --------   -----     ------------------
"^DD",811.9,811.902,7,21,12,0)
             BLANK     not included in Resolution Logic
"^DD",811.9,811.902,7,21,13,0)
                       (Use @ to delete value)
"^DD",811.9,811.902,7,21,14,0)
   &         AND       &(Finding)
"^DD",811.9,811.902,7,21,15,0)
   !         OR        !(Finding)
"^DD",811.9,811.902,7,21,16,0)
   &'        AND NOT   &'(Finding)
"^DD",811.9,811.902,7,21,17,0)
   !'        OR NOT    !'(Finding)
"^DD",811.9,811.902,7,21,18,0)
 
"^DD",811.9,811.902,7,21,19,0)
The finding item and operator are used to automatically create the
"^DD",811.9,811.902,7,21,20,0)
default resolution Boolean logic string.
"^DD",811.9,811.902,7,21,21,0)
 
"^DD",811.9,811.902,7,21,22,0)
Each finding is used in the evaluation process to find the most recent
"^DD",811.9,811.902,7,21,23,0)
entry for the finding. After all findings are evaluated, the Resolution
"^DD",811.9,811.902,7,21,24,0)
Logic is evaluated by logically combining the true (found) and false
"^DD",811.9,811.902,7,21,25,0)
(not found) values of the findings. If the Resolution Logic evaluates
"^DD",811.9,811.902,7,21,26,0)
to true then the reminder is considered to be resolved.
"^DD",811.9,811.902,7,21,27,0)
 
"^DD",811.9,811.902,7,21,28,0)
To see the INTERNAL RESOLUTION LOGIC, use the reminder inquiry option.
"^DD",811.9,811.902,7,"DT")
2991027
"^DD",811.9,811.902,8,0)
USE IN PATIENT COHORT LOGIC^S^&:AND;!:OR;&':AND NOT;!':OR NOT;^0;7^Q
"^DD",811.9,811.902,8,1,0)
^.1^^0
"^DD",811.9,811.902,8,3)
Enter the logic operator to be used in the default Internal Patient Cohort Logic
"^DD",811.9,811.902,8,21,0)
^.001^36^36^3010223^^
"^DD",811.9,811.902,8,21,1,0)
This optional field is used to indicate that this finding item should
"^DD",811.9,811.902,8,21,2,0)
be included as part of the default INTERNAL PATIENT COHORT LOGIC field
"^DD",811.9,811.902,8,21,3,0)
for this reminder. The INTERNAL PATIENT COHORT LOGIC, or the CUSTOMIZED
"^DD",811.9,811.902,8,21,4,0)
COHORT LOGIC if defined, is used in the reminder evaluation process to
"^DD",811.9,811.902,8,21,5,0)
determine whether or not a reminder is applicable to a patient.
"^DD",811.9,811.902,8,21,6,0)
 
"^DD",811.9,811.902,8,21,7,0)
Valid entries for the USE IN PATIENT COHORT LOGIC field are:
"^DD",811.9,811.902,8,21,8,0)
 
"^DD",811.9,811.902,8,21,9,0)
                     EQUATES TO BOOLEAN
"^DD",811.9,811.902,8,21,10,0)
  OPERATOR  VALUE     OPERATOR LOGIC
"^DD",811.9,811.902,8,21,11,0)
  --------  -----     ------------------
"^DD",811.9,811.902,8,21,12,0)
            BLANK     not included in Patient Cohort Logic
"^DD",811.9,811.902,8,21,13,0)
                      (Use @ to delete value)
"^DD",811.9,811.902,8,21,14,0)
   &        AND       &(Finding)
"^DD",811.9,811.902,8,21,15,0)
   !        OR        !(Finding)
"^DD",811.9,811.902,8,21,16,0)
   &'       AND NOT   &'(Finding)
"^DD",811.9,811.902,8,21,17,0)
   !'       OR NOT    !'(Finding)
"^DD",811.9,811.902,8,21,18,0)
 
"^DD",811.9,811.902,8,21,19,0)
The finding item and operator are used to automatically create the
"^DD",811.9,811.902,8,21,20,0)
default Boolean INTERNAL PATIENT COHORT LOGIC string. The default logic
"^DD",811.9,811.902,8,21,21,0)
string initially includes (SEX)&(AGE), regardless of whether the
"^DD",811.9,811.902,8,21,22,0)
baseline specifies SEX and AGE criteria. Each finding item with a value
"^DD",811.9,811.902,8,21,23,0)
in the USE IN PATIENT COHORT LOGIC field is appended to the string by
"^DD",811.9,811.902,8,21,24,0)
using the finding item and operator. For example if finding item 2 had
"^DD",811.9,811.902,8,21,25,0)
an operator for this field of "&" then the string would be
"^DD",811.9,811.902,8,21,26,0)
(SEX)&(AGE)&FI(2).
"^DD",811.9,811.902,8,21,27,0)
 
"^DD",811.9,811.902,8,21,28,0)
Each finding item is used in the evaluation process to find the most
"^DD",811.9,811.902,8,21,29,0)
recent entry for the finding. After all findings are evaluated, the
"^DD",811.9,811.902,8,21,30,0)
Patient Cohort Logic is evaluated by logically combining the true
"^DD",811.9,811.902,8,21,31,0)
(found) and false (not found) values of the finding items. If the
"^DD",811.9,811.902,8,21,32,0)
Patient Cohort Logic evaluates to true then the patient is in the
"^DD",811.9,811.902,8,21,33,0)
cohort and the reminder is applicable to the patient.
"^DD",811.9,811.902,8,21,34,0)
      
"^DD",811.9,811.902,8,21,35,0)
To see the INTERNAL PATIENT COHORT LOGIC, use the reminder inquiry
"^DD",811.9,811.902,8,21,36,0)
option.
"^DD",811.9,811.902,8,"DT")
2991027
"^DD",811.9,811.902,9,0)
EFFECTIVE PERIOD^FX^^0;8^K:'$$VTPER^PXRMINTR(.X) X
"^DD",811.9,811.902,9,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.902,9,21,0)
^.001^5^5^3000821^^^^
"^DD",811.9,811.902,9,21,1,0)
This is the amount of time the finding will remain valid. For example,
"^DD",811.9,811.902,9,21,2,0)
if the EFFECTIVE PERIOD is 1Y and the date of the finding is less than
"^DD",811.9,811.902,9,21,3,0)
one year ago the finding will be true. If the date is more than a year
"^DD",811.9,811.902,9,21,4,0)
ago the finding will have expired and be false. If this field is left
"^DD",811.9,811.902,9,21,5,0)
empty then the finding never expires.
"^DD",811.9,811.902,9,"DT")
3000509
"^DD",811.9,811.902,10,0)
USE INACTIVE PROBLEMS^S^1:YES;0:N;^0;9^Q
"^DD",811.9,811.902,10,3)
Enter a 1 or YES if you want inactive problems used.
"^DD",811.9,811.902,10,21,0)
^.001^4^4^3000505^^^^
"^DD",811.9,811.902,10,21,1,0)
Normally only active problems from the Problem List will be used in the
"^DD",811.9,811.902,10,21,2,0)
reminder evaluation. If USE INACTIVE PROBLEMS is set to YES then both
"^DD",811.9,811.902,10,21,3,0)
active and inactive problems will be used. Note that this field applies
"^DD",811.9,811.902,10,21,4,0)
only to taxonomy findings.
"^DD",811.9,811.902,10,"DT")
2990325
"^DD",811.9,811.902,11,0)
WITHIN CATEGORY RANK^NJ3,0^^0;10^K:+X'=X!(X>999)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.902,11,3)
Enter a number between 0 and 999.
"^DD",811.9,811.902,11,21,0)
^.001^16^16^3000505^^^
"^DD",811.9,811.902,11,21,1,0)
This field applies only to health factors. In order to understand how
"^DD",811.9,811.902,11,21,2,0)
it works, you need to understand how health factors work in the
"^DD",811.9,811.902,11,21,3,0)
reminder evaluation process. If you are not clear about this, see the
"^DD",811.9,811.902,11,21,4,0)
health factor section of the Clinical Reminder Manager Manual.
"^DD",811.9,811.902,11,21,5,0)

"^DD",811.9,811.902,11,21,6,0)
The default behavior is to use only the most recent health factor
"^DD",811.9,811.902,11,21,7,0)
within a category. A problem can arise if there are two or more health
"^DD",811.9,811.902,11,21,8,0)
factors within a category and they both have the same date. (This can
"^DD",811.9,811.902,11,21,9,0)
happen if both health factors are given during the same encounter). 
"^DD",811.9,811.902,11,21,10,0)
When the dates are the same, the health factor with the highest Within
"^DD",811.9,811.902,11,21,11,0)
Category Rank will be used. This is a numerical value like Rank
"^DD",811.9,811.902,11,21,12,0)
Frequency with 1 being the highest rank.
"^DD",811.9,811.902,11,21,13,0)

"^DD",811.9,811.902,11,21,14,0)
If WITHIN CATEGORY RANK has the special value of 0 then the
"^DD",811.9,811.902,11,21,15,0)
categorization of health factors will be ignored and the health factor
"^DD",811.9,811.902,11,21,16,0)
will be treated as a distinct finding.
"^DD",811.9,811.902,11,"DT")
3000501
"^DD",811.9,811.902,12,0)
EFFECTIVE DATE^D^^0;11^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",811.9,811.902,12,3)
Enter the EFFECTIVE DATE
"^DD",811.9,811.902,12,21,0)
^.001^2^2^3001004^^^^
"^DD",811.9,811.902,12,21,1,0)
Any findings with a date older than the EFFECTIVE DATE are expired and
"^DD",811.9,811.902,12,21,2,0)
will be treated as false during the reminder evaluation.
"^DD",811.9,811.902,12,"DT")
3001010
"^DD",811.9,811.902,13,0)
MH SCALE^FX^^0;12^K:$L(X)>79!($L(X)<1) X D VSCALEF^PXRMMH
"^DD",811.9,811.902,13,3)
Enter the scale number or scale name.
"^DD",811.9,811.902,13,4)
D SCHELPF^PXRMMH
"^DD",811.9,811.902,13,21,0)
^.001^2^2^3000505^^
"^DD",811.9,811.902,13,21,1,0)
This applies only to Mental Health Instrument findings. It specifies
"^DD",811.9,811.902,13,21,2,0)
which scale to use when scoring the test.
"^DD",811.9,811.902,13,"DT")
3000321
"^DD",811.9,811.902,14,0)
CONDITION^FXO^^3;1^K:$L(X)>225!($L(X)<3) X D VCOND^PXRMINTR(.X)
"^DD",811.9,811.902,14,2)
S Y(0)=Y S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,14,2.1)
S Y=$TR(Y,"~"," ")
"^DD",811.9,811.902,14,3)
Answer must be 3-225 characters in length.
"^DD",811.9,811.902,14,21,0)
^.001^49^49^3001004^^^
"^DD",811.9,811.902,14,21,1,0)
The CONDITION must be written in M code based on the value returned from
"^DD",811.9,811.902,14,21,2,0)
the patient results for the finding. Each type of finding has a specific
"^DD",811.9,811.902,14,21,3,0)
field that provides the value available to use in the CONDITION logic.
"^DD",811.9,811.902,14,21,4,0)
If the finding value is text, enclose the condition value in quotes 
"^DD",811.9,811.902,14,21,5,0)
(e.g., "positive"). If the finding value is numeric, do not use quotes
"^DD",811.9,811.902,14,21,6,0)
(e.g., 3).
"^DD",811.9,811.902,14,21,7,0)
 
"^DD",811.9,811.902,14,21,8,0)
An IF statement is used to evaluate the value.  The value is always
"^DD",811.9,811.902,14,21,9,0)
identified as V in the statement regardless of the type of finding. If 
"^DD",811.9,811.902,14,21,10,0)
the condition logic statement evaluates to true, the finding is 
"^DD",811.9,811.902,14,21,11,0)
considered as found (true), otherwise the finding is considered as not
"^DD",811.9,811.902,14,21,12,0)
found (false).
"^DD",811.9,811.902,14,21,13,0)
 
"^DD",811.9,811.902,14,21,14,0)
Relational operators that may be used include: = equals, < less than, >
"^DD",811.9,811.902,14,21,15,0)
greater than, [ contains, ] follows and ? pattern matches. Logical
"^DD",811.9,811.902,14,21,16,0)
operators may be used to check multiple values: & And, ! Or, ' Not. 
"^DD",811.9,811.902,14,21,17,0)
         
"^DD",811.9,811.902,14,21,18,0)
Typical examples of M code are as follows:
"^DD",811.9,811.902,14,21,19,0)
    I V=3 for Education Topic's Level of Understanding = 3
"^DD",811.9,811.902,14,21,20,0)
    I V="H" for Health Factor's Level/Severity="H"
"^DD",811.9,811.902,14,21,21,0)
    I ($P(V,"/",1)>140)&($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,22,0)
    systolic and diastolic values
"^DD",811.9,811.902,14,21,23,0)
    I ($P(V,"/",1)>140)!($P(V,"/",2)>90) for elevated blood pressure
"^DD",811.9,811.902,14,21,24,0)
    systolic or diastolic values
"^DD",811.9,811.902,14,21,25,0)
    I V["BLACK" for VA-RACE computed finding where race contains BLACK
"^DD",811.9,811.902,14,21,26,0)
 
"^DD",811.9,811.902,14,21,27,0)
Below is a brief summary for each finding type, the related field to use
"^DD",811.9,811.902,14,21,28,0)
for the value and examples:
"^DD",811.9,811.902,14,21,29,0)
 
"^DD",811.9,811.902,14,21,30,0)
Finding type                Field Value Used        Example M Code
"^DD",811.9,811.902,14,21,31,0)
 
"^DD",811.9,811.902,14,21,32,0)
 Drug                       None
"^DD",811.9,811.902,14,21,33,0)
 Education Topic            Level of understanding  I V=3
"^DD",811.9,811.902,14,21,34,0)
 Exam                       Result                  I V="N"
"^DD",811.9,811.902,14,21,35,0)
 Health Factor              Level/severity          I V="H"
"^DD",811.9,811.902,14,21,36,0)
 Immunization               Series                  I V="P"
"^DD",811.9,811.902,14,21,37,0)
 Laboratory Test            Result Value            I V>130
"^DD",811.9,811.902,14,21,38,0)
 Mental Health Instrument   Raw score               I V=1
"^DD",811.9,811.902,14,21,39,0)
 Orderable Item             Status                  I V="complete"
"^DD",811.9,811.902,14,21,40,0)
 Radiology Procedure        None
"^DD",811.9,811.902,14,21,41,0)
 Reminder Computed Finding  Determined by programmer-See Manager Manual
"^DD",811.9,811.902,14,21,42,0)
 Reminder Taxonomy          None
"^DD",811.9,811.902,14,21,43,0)
 Skin Test                  Result                  I V="N"
"^DD",811.9,811.902,14,21,44,0)
 VA Drug Class              None
"^DD",811.9,811.902,14,21,45,0)
 VA Generic                 None
"^DD",811.9,811.902,14,21,46,0)
 Vital Measurement          Rate                    I V>27
"^DD",811.9,811.902,14,21,47,0)
 
"^DD",811.9,811.902,14,21,48,0)
For details about allowed CONDITIONS for each finding type see the
"^DD",811.9,811.902,14,21,49,0)
Clinical Reminders Manager Manual.
"^DD",811.9,811.902,14,"DT")
3001004
"^DD",811.9,811.902,15,0)
CONDITION CASE SENSITIVE^S^0:NO;1:YES;^3;2^Q
"^DD",811.9,811.902,15,3)
Enter NO to make the condition case insensitive
"^DD",811.9,811.902,15,21,0)
^.001^3^3^3001129^^^
"^DD",811.9,811.902,15,21,1,0)
When CONDITION CASE SENSITIVE is NO then the CONDITION will be
"^DD",811.9,811.902,15,21,2,0)
evaluated without regards to case. The default is YES so that
"^DD",811.9,811.902,15,21,3,0)
CONDITION evaluation is case sensitive.
"^DD",811.9,811.902,15,"DT")
3001129
"^DD",811.9,811.9024,0)
FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9024,0,"DT")
2990325
"^DD",811.9,811.9024,0,"NM","FOUND TEXT")

"^DD",811.9,811.9024,0,"UP")
811.902
"^DD",811.9,811.9024,.01,0)
FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9024,.01,3)
Enter the found text.
"^DD",811.9,811.9024,.01,"DT")
2990325
"^DD",811.9,811.9025,0)
NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.9025,0,"DT")
2990325
"^DD",811.9,811.9025,0,"NM","NOT FOUND TEXT")

"^DD",811.9,811.9025,0,"UP")
811.902
"^DD",811.9,811.9025,.01,0)
NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.9025,.01,3)
Enter the not found text.
"^DD",811.9,811.9025,.01,"DT")
2990325
"^DD",811.9,811.92,0)
REMINDER DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.92,0,"NM","REMINDER DESCRIPTION")

"^DD",811.9,811.92,0,"UP")
811.9
"^DD",811.9,811.92,.01,0)
REMINDER DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.92,.01,3)

"^DD",811.9,811.92,.01,"DT")
2960131
"^DD",811.9,811.93,0)
TECHNICAL DESCRIPTION SUB-FIELD^^.01^1
"^DD",811.9,811.93,0,"NM","TECHNICAL DESCRIPTION")

"^DD",811.9,811.93,0,"UP")
811.9
"^DD",811.9,811.93,.01,0)
TECHNICAL DESCRIPTION^W^^0;1^Q
"^DD",811.9,811.93,.01,.1)
 
"^DD",811.9,811.93,.01,"DT")
2960131
"^DD",811.9,811.961,0)
GENERAL COHORT NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.961,0,"DT")
3000110
"^DD",811.9,811.961,0,"NM","GENERAL COHORT NOT FOUND TEXT")

"^DD",811.9,811.961,0,"UP")
811.9
"^DD",811.9,811.961,.01,0)
GENERAL COHORT NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.961,.01,.1)
GENERAL PATIENT COHORT NOT FOUND TEXT
"^DD",811.9,811.961,.01,3)
Enter general text to display when the patient is not found to be in the patient cohort. 
"^DD",811.9,811.961,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.961,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.961,.01,21,2,0)
component when the patient's findings during reminder evaluation made the
"^DD",811.9,811.961,.01,21,3,0)
Patient Cohort Logic false. This is general text, not specific to a
"^DD",811.9,811.961,.01,21,4,0)
finding, that will display when the patient is not found to be in the
"^DD",811.9,811.961,.01,21,5,0)
patient cohort.
"^DD",811.9,811.961,.01,"DT")
3000504
"^DD",811.9,811.965,0)
GENERAL RESOLUTION FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.965,0,"DT")
3000110
"^DD",811.9,811.965,0,"NM","GENERAL RESOLUTION FOUND TEXT")

"^DD",811.9,811.965,0,"UP")
811.9
"^DD",811.9,811.965,.01,0)
GENERAL RESOLUTION FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.965,.01,.1)
GENERAL RESOLUTION FOUND TEXT
"^DD",811.9,811.965,.01,3)
Enter general text to display when the patient's findings resolve the reminder. 
"^DD",811.9,811.965,.01,21,0)
^^5^5^3000505^
"^DD",811.9,811.965,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.965,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.965,.01,21,3,0)
made the Resolution Logic true.  This is general text, not specific to
"^DD",811.9,811.965,.01,21,4,0)
a finding, that will display when the patient's findings resolve the
"^DD",811.9,811.965,.01,21,5,0)
reminder.
"^DD",811.9,811.965,.01,"DT")
3000504
"^DD",811.9,811.966,0)
GENERAL RESOL NOT FOUND TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.966,0,"DT")
3000110
"^DD",811.9,811.966,0,"NM","GENERAL RESOL NOT FOUND TEXT")

"^DD",811.9,811.966,0,"UP")
811.9
"^DD",811.9,811.966,.01,0)
GENERAL RESOL NOT FOUND TEXT^W^^0;1^Q
"^DD",811.9,811.966,.01,.1)
GENERAL RESOLUTION NOT FOUND TEXT
"^DD",811.9,811.966,.01,3)
Enter general text to display when the patient's findings do not resolve the reminder.
"^DD",811.9,811.966,.01,21,0)
^^4^4^3000505^
"^DD",811.9,811.966,.01,21,1,0)
This optional field defines text to display in the Clinical Maintenance
"^DD",811.9,811.966,.01,21,2,0)
component when the patient's findings found during the reminder evaluation
"^DD",811.9,811.966,.01,21,3,0)
made the Resolution Logic false.  This is general text, not specific to
"^DD",811.9,811.966,.01,21,4,0)
a finding, that will display when the reminder has not been resolved.
"^DD",811.9,811.966,.01,"DT")
3000504
"^DD",811.9,811.97,0)
BASELINE AGE FINDINGS SUB-FIELD^^4^5
"^DD",811.9,811.97,0,"DT")
2960201
"^DD",811.9,811.97,0,"IX","B",811.97,.01)

"^DD",811.9,811.97,0,"NM","BASELINE AGE FINDINGS")

"^DD",811.9,811.97,0,"UP")
811.9
"^DD",811.9,811.97,.01,0)
REMINDER FREQUENCY^MFX^^0;1^S X=$$UP^XLFSTR(X) K:($L(X)>5)!($L(X)<2)!((X'?1N.N1"D")&(X'?1N.N1"M")&(X'?1N.N1"Y")) X
"^DD",811.9,811.97,.01,1,0)
^.1
"^DD",811.9,811.97,.01,1,1,0)
811.97^B
"^DD",811.9,811.97,.01,1,1,1)
S ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)=""
"^DD",811.9,811.97,.01,1,1,2)
K ^PXD(811.9,DA(1),7,"B",$E(X,1,30),DA)
"^DD",811.9,811.97,.01,3)
Enter a number followed by D, M, or Y for day, month, or year.
"^DD",811.9,811.97,.01,21,0)
^.001^5^5^3010302^^^^
"^DD",811.9,811.97,.01,21,1,0)
This is the frequency to give the reminder. It is input as nD, nM, or
"^DD",811.9,811.97,.01,21,2,0)
nY, where D stands for days, M for months, Y for years, and n is a
"^DD",811.9,811.97,.01,21,3,0)
number. Thus, for a reminder that is to be given once a year, the
"^DD",811.9,811.97,.01,21,4,0)
values 365D, 12M, or 1Y would all work. If a reminder is only to be
"^DD",811.9,811.97,.01,21,5,0)
given once in a lifetime use a frequency of 99Y.
"^DD",811.9,811.97,.01,"DT")
2970505
"^DD",811.9,811.97,1,0)
MINIMUM AGE^NJ3,0^^0;2^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,1,3)
Enter the minimum age for this reminder frequency.
"^DD",811.9,811.97,1,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,1,21,1,0)
This field specifies the minimum age for defining an age range
"^DD",811.9,811.97,1,21,2,0)
associated with a frequency. Leave it blank if there is no minimum age.
"^DD",811.9,811.97,1,"DT")
2960201
"^DD",811.9,811.97,2,0)
MAXIMUM AGE^NJ3,0^^0;3^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1N.N) X
"^DD",811.9,811.97,2,3)
Enter the maximum age for this reminder frequency.
"^DD",811.9,811.97,2,21,0)
^.001^2^2^3000428^^^
"^DD",811.9,811.97,2,21,1,0)
This field specifies the maximum age for defining an age range
"^DD",811.9,811.97,2,21,2,0)
associated with a frequency. Leave it blank if there is no maximum age.
"^DD",811.9,811.97,2,"DT")
2960201
"^DD",811.9,811.97,3,0)
AGE MATCH TEXT^811.973^^1;0
"^DD",811.9,811.97,3,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,3,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,3,21,2,0)
component if the patient's age falls within the age range.
"^DD",811.9,811.97,4,0)
AGE NO MATCH TEXT^811.974^^2;0
"^DD",811.9,811.97,4,21,0)
^^2^2^3000428^
"^DD",811.9,811.97,4,21,1,0)
This is the text that will be displayed in the Clinical Maintenance
"^DD",811.9,811.97,4,21,2,0)
component if the patient's age does not fall in the age range.
"^DD",811.9,811.97,4,"DT")
2960201
"^DD",811.9,811.973,0)
AGE MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.973,0,"DT")
2960201
"^DD",811.9,811.973,0,"NM","AGE MATCH TEXT")

"^DD",811.9,811.973,0,"UP")
811.97
"^DD",811.9,811.973,.01,0)
AGE MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.973,.01,3)
Enter text to display for a match on age range.
"^DD",811.9,811.973,.01,"DT")
2960201
"^DD",811.9,811.974,0)
AGE NO MATCH TEXT SUB-FIELD^^.01^1
"^DD",811.9,811.974,0,"DT")
2960201
"^DD",811.9,811.974,0,"NM","AGE NO MATCH TEXT")

"^DD",811.9,811.974,0,"UP")
811.97
"^DD",811.9,811.974,.01,0)
AGE NO MATCH TEXT^W^^0;1^Q
"^DD",811.9,811.974,.01,3)
Enter the text to display for no match on age range.
"^DD",811.9,811.974,.01,"DT")
2960201
"^DIC",800,800,0)
CLINICAL REMINDER PARAMETERS^800
"^DIC",800,800,0,"GL")
^PXRM(800,
"^DIC",800,800,"%",0)
^1.005^^0
"^DIC",800,800,"%D",0)
^^2^2^3000608^
"^DIC",800,800,"%D",1,0)
This file has one entry that contains parameters used by Clinical
"^DIC",800,800,"%D",2,0)
Reminders.
"^DIC",800,"B","CLINICAL REMINDER PARAMETERS",800)

"^DIC",801.41,801.41,0)
REMINDER DIALOG^801.41
"^DIC",801.41,801.41,0,"GL")
^PXRMD(801.41,
"^DIC",801.41,801.41,"%",0)
^1.005^^0
"^DIC",801.41,801.41,"%D",0)
^^58^58^3000609^^^^
"^DIC",801.41,801.41,"%D",1,0)
This file is used to define all of the components that work together to
"^DIC",801.41,801.41,"%D",2,0)
define a reminder dialog. Reminder dialog definitions are used by the CPRS
"^DIC",801.41,801.41,"%D",3,0)
GUI for reminder resolution.
"^DIC",801.41,801.41,"%D",4,0)
 
"^DIC",801.41,801.41,"%D",5,0)
This file contains a combination of nationally distributed entries, local
"^DIC",801.41,801.41,"%D",6,0)
auto-generated entries, site and VISN exchanged entries and local manually
"^DIC",801.41,801.41,"%D",7,0)
created entries. Any local entries are assigned an internal entry number
"^DIC",801.41,801.41,"%D",8,0)
prefixed with your site number. Nationally distributed entries have their
"^DIC",801.41,801.41,"%D",9,0)
name prefixed with PXRM. Entries in this file may be auto-generated via
"^DIC",801.41,801.41,"%D",10,0)
the Dialog Management Menu option. Manually created dialog entries should
"^DIC",801.41,801.41,"%D",11,0)
use local namespacing conventions.
"^DIC",801.41,801.41,"%D",12,0)
 
"^DIC",801.41,801.41,"%D",13,0)
This file is similar to the option file where there are different types of
"^DIC",801.41,801.41,"%D",14,0)
entries (reminder dialog, dialog elements (sentences), prompts, and groups
"^DIC",801.41,801.41,"%D",15,0)
of elements, result elements and groups of result elements). Where an
"^DIC",801.41,801.41,"%D",16,0)
option has menu items, the dialog file has components that are
"^DIC",801.41,801.41,"%D",17,0)
entered with the sequence field as the .01 field. 
"^DIC",801.41,801.41,"%D",18,0)
 
"^DIC",801.41,801.41,"%D",19,0)
A prompt is defined for PCE prompts or as locally created comment
"^DIC",801.41,801.41,"%D",20,0)
check-boxes. The prompts will not have any components within them.
"^DIC",801.41,801.41,"%D",21,0)
PXRM prefixed prompts are distributed in this file with the Clinical
"^DIC",801.41,801.41,"%D",22,0)
Reminder package.
"^DIC",801.41,801.41,"%D",23,0)
 
"^DIC",801.41,801.41,"%D",24,0)
A dialog element is defined primarily to represent sentences to display in
"^DIC",801.41,801.41,"%D",25,0)
the CPRS window with a check box. When the user checks the sentence off,
"^DIC",801.41,801.41,"%D",26,0)
the FINDING ITEM in the dialog element and the ADDITIONAL FINDINGS will be
"^DIC",801.41,801.41,"%D",27,0)
added to the list of PCE updates, orders, and mental health tests. The
"^DIC",801.41,801.41,"%D",28,0)
updates won't occur on the CPRS GUI until the user clicks on the FINISH
"^DIC",801.41,801.41,"%D",29,0)
button. Dialog elements may have components added to it. Auto-generated
"^DIC",801.41,801.41,"%D",30,0)
components will be based on the additional prompts defined in the Finding
"^DIC",801.41,801.41,"%D",31,0)
Type Parameters. Once a dialog element is auto-generated, the sites can
"^DIC",801.41,801.41,"%D",32,0)
modify them.
"^DIC",801.41,801.41,"%D",33,0)
 
"^DIC",801.41,801.41,"%D",34,0)
Dialog elements may also be instructional text or a header. The FINDING
"^DIC",801.41,801.41,"%D",35,0)
ITEM and components would not be defined in dialog elements.
"^DIC",801.41,801.41,"%D",36,0)
 
"^DIC",801.41,801.41,"%D",37,0)
A dialog group is similar to menu options. They group dialog elements and
"^DIC",801.41,801.41,"%D",38,0)
dialog groups within its component multiple. The dialog group can be
"^DIC",801.41,801.41,"%D",39,0)
defined with a finding item and check-box. The components in the group
"^DIC",801.41,801.41,"%D",40,0)
can be hidden from the CPRS GUI window until the dialog group is checked
"^DIC",801.41,801.41,"%D",41,0)
off. 
"^DIC",801.41,801.41,"%D",42,0)
 
"^DIC",801.41,801.41,"%D",43,0)
A result element contains special logic that uses information entered
"^DIC",801.41,801.41,"%D",44,0)
during the resolution process to create a sentence to add to the progress
"^DIC",801.41,801.41,"%D",45,0)
note. The special logic contains a CONDITION that, when true, will use the
"^DIC",801.41,801.41,"%D",46,0)
ALTERNATE PROGRESS NOTE TEXT field to update the progress note. A separate
"^DIC",801.41,801.41,"%D",47,0)
result element is used for each separate sentence needed. The result
"^DIC",801.41,801.41,"%D",48,0)
element is only used with mental health test finding items. Default
"^DIC",801.41,801.41,"%D",49,0)
result elements are distributed for common mental health tests, prefixed
"^DIC",801.41,801.41,"%D",50,0)
with PXRM and the mental health test name. Sites may copy them and modify
"^DIC",801.41,801.41,"%D",51,0)
their local versions as needed.
"^DIC",801.41,801.41,"%D",52,0)
 
"^DIC",801.41,801.41,"%D",53,0)
A result group contains all of the result elements that need to be checked
"^DIC",801.41,801.41,"%D",54,0)
to create sentences for one mental health test finding. The dialog
"^DIC",801.41,801.41,"%D",55,0)
element for the test will have its RESULT GROUP/ELEMENT field defined with
"^DIC",801.41,801.41,"%D",56,0)
the result group. Default result groups for mental health tests are
"^DIC",801.41,801.41,"%D",57,0)
distributed with the Clinical Reminders package. Sites may copy them and
"^DIC",801.41,801.41,"%D",58,0)
modify their local versions as needed.
"^DIC",801.41,"B","REMINDER DIALOG",801.41)

"^DIC",811.2,811.2,0)
REMINDER TAXONOMY^811.2I
"^DIC",811.2,811.2,0,"GL")
^PXD(811.2,
"^DIC",811.2,811.2,"%",0)
^1.005^^0
"^DIC",811.2,811.2,"%D",0)
^^8^8^3000609^^^^
"^DIC",811.2,811.2,"%D",1,0)
This file stores the Clinical Reminder taxonomies. A taxonomy is just a
"^DIC",811.2,811.2,"%D",2,0)
way to give a name to a set of codes. These codes can be ICD Diagnosis,
"^DIC",811.2,811.2,"%D",3,0)
ICD Operation/Procedure or CPT.
"^DIC",811.2,811.2,"%D",4,0)

"^DIC",811.2,811.2,"%D",5,0)
This file contains a combination of nationally distributed and local
"^DIC",811.2,811.2,"%D",6,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.2,811.2,"%D",7,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.2,811.2,"%D",8,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.2,"B","REMINDER TAXONOMY",811.2)

"^DIC",811.5,811.5,0)
REMINDER TERM^811.5
"^DIC",811.5,811.5,0,"GL")
^PXRMD(811.5,
"^DIC",811.5,811.5,"%",0)
^1.005^^0
"^DIC",811.5,811.5,"%D",0)
^^18^18^3000609^
"^DIC",811.5,811.5,"%D",1,0)
This file defines terms that may be used within reminder definitions.
"^DIC",811.5,811.5,"%D",2,0)
Reminder terms are useful for national reminders involving findings that
"^DIC",811.5,811.5,"%D",3,0)
are based on local file definitions (e.g., laboratory test, drug file,
"^DIC",811.5,811.5,"%D",4,0)
radiology). National reminder terms have limited editing capabilities
"^DIC",811.5,811.5,"%D",5,0)
which allow sites to map their local finding items to a term. Sites may
"^DIC",811.5,811.5,"%D",6,0)
create local reminder terms, providing an easy way to group a variety of
"^DIC",811.5,811.5,"%D",7,0)
findings and treat them the same way in a reminder.
"^DIC",811.5,811.5,"%D",8,0)
 
"^DIC",811.5,811.5,"%D",9,0)
When a reminder with terms is evaluated, the finding items mapped to the
"^DIC",811.5,811.5,"%D",10,0)
term are used to find the patient data, but the patient data is reported
"^DIC",811.5,811.5,"%D",11,0)
based on the term the data is mapped to. The most recent true finding will
"^DIC",811.5,811.5,"%D",12,0)
be used to represent the term.
"^DIC",811.5,811.5,"%D",13,0)
 
"^DIC",811.5,811.5,"%D",14,0)
This file contains a combination of national, local, and VISN level terms.
"^DIC",811.5,811.5,"%D",15,0)
Any local terms are assigned an internal entry number prefixed with your
"^DIC",811.5,811.5,"%D",16,0)
site number.  Nationally distributed entries will have a Term Type of
"^DIC",811.5,811.5,"%D",17,0)
"National". Any terms created at your site should have a Term Type of
"^DIC",811.5,811.5,"%D",18,0)
"Local".  Terms created for VISN use will have a Term Type of "VISN"
"^DIC",811.5,"B","REMINDER TERM",811.5)

"^DIC",811.9,811.9,0)
REMINDER DEFINITION^811.9
"^DIC",811.9,811.9,0,"GL")
^PXD(811.9,
"^DIC",811.9,811.9,"%",0)
^1.005^1^1
"^DIC",811.9,811.9,"%",1,0)
GMTS
"^DIC",811.9,811.9,"%","B","GMTS",1)

"^DIC",811.9,811.9,"%D",0)
^^9^9^3000609^^^^
"^DIC",811.9,811.9,"%D",1,0)
This file contains Clinical Reminder definitions. For a detailed
"^DIC",811.9,811.9,"%D",2,0)
description of the contents of this file see the Clinical Reminders
"^DIC",811.9,811.9,"%D",3,0)
Manager Manual. Additional information may be found at the Clinical
"^DIC",811.9,811.9,"%D",4,0)
Reminders web site: http//vista.med.va.gov/reminders
"^DIC",811.9,811.9,"%D",5,0)

"^DIC",811.9,811.9,"%D",6,0)
This file contains a combination of nationally distributed and local
"^DIC",811.9,811.9,"%D",7,0)
entries. Any local entries are assigned an internal entry number
"^DIC",811.9,811.9,"%D",8,0)
prefixed with your site number. Nationally distributed entries have
"^DIC",811.9,811.9,"%D",9,0)
their name prefixed with VA-. Local entry names cannot start with VA-.
"^DIC",811.9,"B","REMINDER DEFINITION",811.9)

**END**
**END**
