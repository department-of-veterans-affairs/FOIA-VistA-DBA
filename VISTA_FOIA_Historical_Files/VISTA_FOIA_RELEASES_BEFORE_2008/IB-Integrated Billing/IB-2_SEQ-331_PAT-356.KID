Released IB*2*356 SEQ #331
Extracted from mail message
**KIDS**:IB*2.0*356^

**INSTALL NAME**
IB*2.0*356
"BLD",6825,0)
IB*2.0*356^INTEGRATED BILLING^0^3060920^y
"BLD",6825,1,0)
^^16^16^3060920^^^^
"BLD",6825,1,1,0)
This Maintenance Update addresses the following issues reported in Remedy:
"BLD",6825,1,2,0)
 1) HD63676  - Non Providers Not Screened in Procedures Multiple
"BLD",6825,1,3,0)
 2) HD64317  - IB315 entry file 350.8/*232
"BLD",6825,1,4,0)
 3) HD64380  - Held Charges Report (PTH-1104-20448)
"BLD",6825,1,5,0)
 4) HD64425  - PROVIDER ID QUERY REPORT - TOTAL IS WRONG
"BLD",6825,1,6,0)
 5) HD64697  - ADD OUTSIDE LAB CHARGES TO MAP
"BLD",6825,1,7,0)
 6) HD64863  - IBJDF51 Spreadsheet (Trans # creates problem)
"BLD",6825,1,8,0)
 7) HD65904  - Problem with Miscellaneous Bills Follow-up Reports
"BLD",6825,1,9,0)
 8) HD117969 - CHAMPVA/TRICARE Follow-Up Report Detail vs. Summary problem
"BLD",6825,1,10,0)
 9) HD118376 - MRA Filing Error
"BLD",6825,1,11,0)
      123700 - Message storage errors on bill.
"BLD",6825,1,12,0)
10) HD131138 - Missing Mail Group - CMOP transmissions fail.
"BLD",6825,1,13,0)
11) HD134835 - Insurance Buffer Error
"BLD",6825,1,14,0)
      131701 - Error <UNDEF>BR+1^DIE0
"BLD",6825,1,15,0)
12) HD137911 - <UNDEFINED>BULL1+5^IBTUBUL
"BLD",6825,1,16,0)
      145085 - Error Running Send Test Unbilled Amounts Bulletin option
"BLD",6825,4,0)
^9.64PA^399^1
"BLD",6825,4,399,0)
399
"BLD",6825,4,399,2,0)
^9.641^399.0304^1
"BLD",6825,4,399,2,399.0304,0)
PROCEDURES  (sub-file)
"BLD",6825,4,399,2,399.0304,1,0)
^9.6411^18^1
"BLD",6825,4,399,2,399.0304,1,18,0)
PROVIDER
"BLD",6825,4,399,222)
y^n^p^^^^n^^n
"BLD",6825,4,399,224)

"BLD",6825,4,"APDD",399,399.0304)

"BLD",6825,4,"APDD",399,399.0304,18)

"BLD",6825,4,"B",399,399)

"BLD",6825,"ABPKG")
n
"BLD",6825,"INI")
EN^IB20P356
"BLD",6825,"INID")
^^y
"BLD",6825,"KRN",0)
^9.67PA^8989.52^19
"BLD",6825,"KRN",.4,0)
.4
"BLD",6825,"KRN",.401,0)
.401
"BLD",6825,"KRN",.402,0)
.402
"BLD",6825,"KRN",.403,0)
.403
"BLD",6825,"KRN",.5,0)
.5
"BLD",6825,"KRN",.84,0)
.84
"BLD",6825,"KRN",3.6,0)
3.6
"BLD",6825,"KRN",3.8,0)
3.8
"BLD",6825,"KRN",9.2,0)
9.2
"BLD",6825,"KRN",9.8,0)
9.8
"BLD",6825,"KRN",9.8,"NM",0)
^9.68A^10^10
"BLD",6825,"KRN",9.8,"NM",1,0)
IBJDF41^^0^B65120113
"BLD",6825,"KRN",9.8,"NM",2,0)
IBJDF51^^0^B57917669
"BLD",6825,"KRN",9.8,"NM",3,0)
IBJDF61^^0^B55100419
"BLD",6825,"KRN",9.8,"NM",4,0)
IBTUBUL^^0^B21781134
"BLD",6825,"KRN",9.8,"NM",5,0)
IB20P356^^0^B1227219
"BLD",6825,"KRN",9.8,"NM",6,0)
IBAERR3^^0^B26662158
"BLD",6825,"KRN",9.8,"NM",7,0)
IBCEOB1^^0^B69145687
"BLD",6825,"KRN",9.8,"NM",8,0)
IBCEQ1^^0^B30688756
"BLD",6825,"KRN",9.8,"NM",9,0)
IBCNBEE^^0^B44406839
"BLD",6825,"KRN",9.8,"NM",10,0)
IBOHLD1^^0^B19222210
"BLD",6825,"KRN",9.8,"NM","B","IB20P356",5)

"BLD",6825,"KRN",9.8,"NM","B","IBAERR3",6)

"BLD",6825,"KRN",9.8,"NM","B","IBCEOB1",7)

"BLD",6825,"KRN",9.8,"NM","B","IBCEQ1",8)

"BLD",6825,"KRN",9.8,"NM","B","IBCNBEE",9)

"BLD",6825,"KRN",9.8,"NM","B","IBJDF41",1)

"BLD",6825,"KRN",9.8,"NM","B","IBJDF51",2)

"BLD",6825,"KRN",9.8,"NM","B","IBJDF61",3)

"BLD",6825,"KRN",9.8,"NM","B","IBOHLD1",10)

"BLD",6825,"KRN",9.8,"NM","B","IBTUBUL",4)

"BLD",6825,"KRN",19,0)
19
"BLD",6825,"KRN",19.1,0)
19.1
"BLD",6825,"KRN",101,0)
101
"BLD",6825,"KRN",409.61,0)
409.61
"BLD",6825,"KRN",771,0)
771
"BLD",6825,"KRN",870,0)
870
"BLD",6825,"KRN",8989.51,0)
8989.51
"BLD",6825,"KRN",8989.52,0)
8989.52
"BLD",6825,"KRN",8994,0)
8994
"BLD",6825,"KRN","B",.4,.4)

"BLD",6825,"KRN","B",.401,.401)

"BLD",6825,"KRN","B",.402,.402)

"BLD",6825,"KRN","B",.403,.403)

"BLD",6825,"KRN","B",.5,.5)

"BLD",6825,"KRN","B",.84,.84)

"BLD",6825,"KRN","B",3.6,3.6)

"BLD",6825,"KRN","B",3.8,3.8)

"BLD",6825,"KRN","B",9.2,9.2)

"BLD",6825,"KRN","B",9.8,9.8)

"BLD",6825,"KRN","B",19,19)

"BLD",6825,"KRN","B",19.1,19.1)

"BLD",6825,"KRN","B",101,101)

"BLD",6825,"KRN","B",409.61,409.61)

"BLD",6825,"KRN","B",771,771)

"BLD",6825,"KRN","B",870,870)

"BLD",6825,"KRN","B",8989.51,8989.51)

"BLD",6825,"KRN","B",8989.52,8989.52)

"BLD",6825,"KRN","B",8994,8994)

"BLD",6825,"QUES",0)
^9.62^^
"BLD",6825,"REQB",0)
^9.611^8^8
"BLD",6825,"REQB",1,0)
IB*2.0*133^2
"BLD",6825,"REQB",2,0)
IB*2.0*155^2
"BLD",6825,"REQB",3,0)
IB*2.0*159^2
"BLD",6825,"REQB",4,0)
IB*2.0*204^2
"BLD",6825,"REQB",5,0)
IB*2.0*232^2
"BLD",6825,"REQB",6,0)
IB*2.0*240^2
"BLD",6825,"REQB",7,0)
IB*2.0*251^2
"BLD",6825,"REQB",8,0)
IB*2.0*296^2
"BLD",6825,"REQB","B","IB*2.0*133",1)

"BLD",6825,"REQB","B","IB*2.0*155",2)

"BLD",6825,"REQB","B","IB*2.0*159",3)

"BLD",6825,"REQB","B","IB*2.0*204",4)

"BLD",6825,"REQB","B","IB*2.0*232",5)

"BLD",6825,"REQB","B","IB*2.0*240",6)

"BLD",6825,"REQB","B","IB*2.0*251",7)

"BLD",6825,"REQB","B","IB*2.0*296",8)

"FIA",399)
BILL/CLAIMS
"FIA",399,0)
^DGCR(399,
"FIA",399,0,0)
399I
"FIA",399,0,1)
y^n^p^^^^n^^n
"FIA",399,0,10)

"FIA",399,0,11)

"FIA",399,0,"RLRO")

"FIA",399,0,"VR")
2.0^IB
"FIA",399,399)
1
"FIA",399,399.0304)
1
"FIA",399,399.0304,18)

"INI")
EN^IB20P356
"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
356^3060920
"PKG",200,22,1,"PAH",1,1,0)
^^16^16^3060920
"PKG",200,22,1,"PAH",1,1,1,0)
This Maintenance Update addresses the following issues reported in Remedy:
"PKG",200,22,1,"PAH",1,1,2,0)
 1) HD63676  - Non Providers Not Screened in Procedures Multiple
"PKG",200,22,1,"PAH",1,1,3,0)
 2) HD64317  - IB315 entry file 350.8/*232
"PKG",200,22,1,"PAH",1,1,4,0)
 3) HD64380  - Held Charges Report (PTH-1104-20448)
"PKG",200,22,1,"PAH",1,1,5,0)
 4) HD64425  - PROVIDER ID QUERY REPORT - TOTAL IS WRONG
"PKG",200,22,1,"PAH",1,1,6,0)
 5) HD64697  - ADD OUTSIDE LAB CHARGES TO MAP
"PKG",200,22,1,"PAH",1,1,7,0)
 6) HD64863  - IBJDF51 Spreadsheet (Trans # creates problem)
"PKG",200,22,1,"PAH",1,1,8,0)
 7) HD65904  - Problem with Miscellaneous Bills Follow-up Reports
"PKG",200,22,1,"PAH",1,1,9,0)
 8) HD117969 - CHAMPVA/TRICARE Follow-Up Report Detail vs. Summary problem
"PKG",200,22,1,"PAH",1,1,10,0)
 9) HD118376 - MRA Filing Error
"PKG",200,22,1,"PAH",1,1,11,0)
      123700 - Message storage errors on bill.
"PKG",200,22,1,"PAH",1,1,12,0)
10) HD131138 - Missing Mail Group - CMOP transmissions fail.
"PKG",200,22,1,"PAH",1,1,13,0)
11) HD134835 - Insurance Buffer Error
"PKG",200,22,1,"PAH",1,1,14,0)
      131701 - Error <UNDEF>BR+1^DIE0
"PKG",200,22,1,"PAH",1,1,15,0)
12) HD137911 - <UNDEFINED>BULL1+5^IBTUBUL
"PKG",200,22,1,"PAH",1,1,16,0)
      145085 - Error Running Send Test Unbilled Amounts Bulletin option
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
10
"RTN","IB20P356")
0^5^B1227219^n/a
"RTN","IB20P356",1,0)
IB20P356 ;BP/TJH - Preinit routine for IB*2.0*356 ; 6/14/2006
"RTN","IB20P356",2,0)
 ;;2.0;INTEGRATED BILLING;**356**;21-MAR-94
"RTN","IB20P356",3,0)
 ;
"RTN","IB20P356",4,0)
 Q
"RTN","IB20P356",5,0)
EN ; entry point
"RTN","IB20P356",6,0)
 ;
"RTN","IB20P356",7,0)
DELERR ; delete old error code from file 350.8
"RTN","IB20P356",8,0)
 ;
"RTN","IB20P356",9,0)
 D BMES^XPDUTL("Deleting entry IB315 from IB ERROR file...")
"RTN","IB20P356",10,0)
 S X="IB315",DIC(0)="",DIC="^IBE(350.8," D ^DIC
"RTN","IB20P356",11,0)
 I Y>0 S DA=+Y,DIK="^IBE(350.8," D ^DIK
"RTN","IB20P356",12,0)
 D BMES^XPDUTL("IB315 error code removal complete.")
"RTN","IB20P356",13,0)
 ;
"RTN","IB20P356",14,0)
FORMFLD ; change TOTAL OUTSIDE LAB CHARGES, record 783, to OUTPUT
"RTN","IB20P356",15,0)
 ;
"RTN","IB20P356",16,0)
 D BMES^XPDUTL("TOTAL OUTSIDE LAB CHARGES changing from CALCULATE ONLY to OUTPUT...")
"RTN","IB20P356",17,0)
 S DIE="^IBA(364.6,",DA=783,DR=".11////0" D ^DIE
"RTN","IB20P356",18,0)
 D BMES^XPDUTL("TOTAL OUTSIDE LAB CHARGES change complete.")
"RTN","IB20P356",19,0)
 ;
"RTN","IB20P356",20,0)
 Q
"RTN","IBAERR3")
0^6^B26662158^B25240845
"RTN","IBAERR3",1,0)
IBAERR3 ;ALB/AAS - RX COPAY EXEMPTION ALERT PROCESSOR ; 15-JAN-93
"RTN","IBAERR3",2,0)
 ;;2.0;INTEGRATED BILLING;**356**;21-MAR-94
"RTN","IBAERR3",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBAERR3",4,0)
 ;
"RTN","IBAERR3",5,0)
% ; -- medication copayment exemption errors
"RTN","IBAERR3",6,0)
 ;
"RTN","IBAERR3",7,0)
SEND ; -- use kernel alerts
"RTN","IBAERR3",8,0)
 N X,Y,IBA,IBP,XQA,XQAID,XQAKILL,XQAMSG,XQAROU,XQAOPT,XQADATA,DIC,DA,DR,DIE,DLAYGO
"RTN","IBAERR3",9,0)
 S:'$D(IBALERT) IBALERT=$G(IBEXERR)+10 G:'IBALERT SENDQ
"RTN","IBAERR3",10,0)
 S IBP=$$PT^IBEFUNC(DFN)
"RTN","IBAERR3",11,0)
 S IBA=$G(^IBE(354.5,IBALERT,0)) G:IBA="" SENDQ
"RTN","IBAERR3",12,0)
 S X=$P($G(^IBE(354.5,IBALERT,3)),"^",1) I X="D" G SENDQ
"RTN","IBAERR3",13,0)
 S X=+IBALERT,DIC(0)="L",DIC="^IBA(354.4,",DLAYGO=354.4 K DD,DO D FILE^DICN S IBDA=+Y
"RTN","IBAERR3",14,0)
 S XQAID=$P(IBA,"^",2)_IBDA,XQAKILL=0
"RTN","IBAERR3",15,0)
 S XQAMSG=$P(IBP,"^")_" ("_$P(IBP,"^",3)_") - "_$P(IBA,"^",3)
"RTN","IBAERR3",16,0)
 I $P(IBA,"^",5)="R" S XQAROU=$S($P(IBA,"^",6)'="":$P(IBA,"^",6,7),1:$P(IBA,"^",7))
"RTN","IBAERR3",17,0)
 ;
"RTN","IBAERR3",18,0)
 S XQADATA=$G(IBALERT)_";"_$G(DFN)_";"_$G(IBEXDA)_";"_$G(IBJOB)_";"_$G(IBWHER)_";"_$G(DUZ)_";"_$G(DT)_";"_$G(IBDA)
"RTN","IBAERR3",19,0)
 ;
"RTN","IBAERR3",20,0)
 S DA=IBDA,DIE="^IBA(354.4,",DR=".02///NOW" D ^DIE K DIC,DIE,DA,DR
"RTN","IBAERR3",21,0)
 ;
"RTN","IBAERR3",22,0)
 I $G(IBEXDA) S DA=IBEXDA,DIE="^IBA(354.1,",DR=".09////^S X=IBDA" D ^DIE K DIC,DIE,DA,DR
"RTN","IBAERR3",23,0)
 ;
"RTN","IBAERR3",24,0)
 D TOWHO
"RTN","IBAERR3",25,0)
 ;
"RTN","IBAERR3",26,0)
 D SETUP^XQALERT
"RTN","IBAERR3",27,0)
 ;
"RTN","IBAERR3",28,0)
SENDQ I $G(IBEXERR) S IBEXERR="" ; clear error flag
"RTN","IBAERR3",29,0)
 Q
"RTN","IBAERR3",30,0)
 ;
"RTN","IBAERR3",31,0)
TOWHO ; -- set xqa array to deliver to
"RTN","IBAERR3",32,0)
 N I,J
"RTN","IBAERR3",33,0)
 S I="" F  S I=$O(^IBE(354.5,+IBALERT,200,I)) Q:'I  S J=+^(I,0),XQA(J)=""
"RTN","IBAERR3",34,0)
 S I="" F  S I=$O(^IBE(354.5,+IBALERT,2,I)) Q:'I  S J=+^(I,0),XQA("G."_$P($G(^XMB(3.8,+J,0)),"^"))=""
"RTN","IBAERR3",35,0)
 I '$D(XQA) D
"RTN","IBAERR3",36,0)
 .S J=+$P($G(^IBE(350.9,1,0)),"^",$S($G(IBALERT)<10:13,1:9))
"RTN","IBAERR3",37,0)
 .I +J'=0 S XQA("G."_$P($G(^XMB(3.8,+J,0)),"^"))=""
"RTN","IBAERR3",38,0)
 .I +J=0 S XQA("G.IB EDI SUPERVISOR")=""
"RTN","IBAERR3",39,0)
 ;S XQA(DUZ)=""
"RTN","IBAERR3",40,0)
TOWHOQ Q
"RTN","IBAERR3",41,0)
 ;
"RTN","IBAERR3",42,0)
1 ; -- process info only alerts
"RTN","IBAERR3",43,0)
 Q:$G(XQADATA)=""  K XQAKILL
"RTN","IBAERR3",44,0)
 N DFN,IBP,IBCLEAR,DIR,DIRUT,DUOUT S IBCLEAR="YES"
"RTN","IBAERR3",45,0)
 D WRITE,CLEAR,UP
"RTN","IBAERR3",46,0)
 K IBCLEAR Q
"RTN","IBAERR3",47,0)
 ;
"RTN","IBAERR3",48,0)
11 ; -- process action alerts
"RTN","IBAERR3",49,0)
 Q:$G(XQADATA)=""  K XQAKILL
"RTN","IBAERR3",50,0)
 N DFN,IBP,IBCLEAR,DIR,DIRUT,DUOUT S IBCLEAR="YES"
"RTN","IBAERR3",51,0)
 D WRITE,PROC,CLEAR,UP
"RTN","IBAERR3",52,0)
 Q
"RTN","IBAERR3",53,0)
 ;
"RTN","IBAERR3",54,0)
PROC ; -- process alert
"RTN","IBAERR3",55,0)
 ; -- run ^ibarxex to see if okay
"RTN","IBAERR3",56,0)
 N IBDFN,DIR,X,Y W !!
"RTN","IBAERR3",57,0)
 S DIR("?")="Enter YES to run the Manual Update option for this patient or NO if everything appears in order or enter '^' to exit and save this alert for later processing."
"RTN","IBAERR3",58,0)
 S DIR(0)="Y",DIR("A")="Run Manual Update Option",DIR("B")="YES" D ^DIR
"RTN","IBAERR3",59,0)
 I $D(DIRUT)!(Y=0) S IBCLEAR="NO" G PROCQ
"RTN","IBAERR3",60,0)
 S IBDFN=DFN D EN^IBARXEX S DFN=IBDFN
"RTN","IBAERR3",61,0)
PROCQ Q
"RTN","IBAERR3",62,0)
 ;
"RTN","IBAERR3",63,0)
CLEAR ; -- clear entry in 354.4 and alert in 354.1
"RTN","IBAERR3",64,0)
 Q:$D(DIRUT)
"RTN","IBAERR3",65,0)
 N DIR,X,Y W !!
"RTN","IBAERR3",66,0)
 S DIR("?")="Enter YES to clear this alert for all users or NO to clear this alert for the current user or '^' to exit and save this alert for later processing."
"RTN","IBAERR3",67,0)
 S DIR(0)="Y",DIR("A")="Clear alert for all users ('^' to save alert)",DIR("B")=IBCLEAR D ^DIR
"RTN","IBAERR3",68,0)
 I $D(DIRUT) G CLEARQ
"RTN","IBAERR3",69,0)
 ; -- xqakill=0 clear for all, =1 clear for current user only
"RTN","IBAERR3",70,0)
 S XQAKILL='Y
"RTN","IBAERR3",71,0)
 W !
"RTN","IBAERR3",72,0)
CLEARQ Q
"RTN","IBAERR3",73,0)
 ;
"RTN","IBAERR3",74,0)
WRITE ; -- write out long message
"RTN","IBAERR3",75,0)
 ;    xqadata = alert type;dfn;exemption;ibjob;ibwhere;duz;dt;alert entry
"RTN","IBAERR3",76,0)
 N XQATMP,XQATMP1,XQATMP2
"RTN","IBAERR3",77,0)
 S DFN=$P(XQADATA,";",2),IBP=$$PT^IBEFUNC(DFN)
"RTN","IBAERR3",78,0)
 W !!,"Patient: ",$P(IBP,"^"),?40,$P(IBP,"^",2)
"RTN","IBAERR3",79,0)
 D DISP^IBARXEU(DFN,DT,3,0)
"RTN","IBAERR3",80,0)
 W:+XQADATA<11 !!,$P($T(MSG+(+XQADATA)),";;",2)
"RTN","IBAERR3",81,0)
 I +XQADATA>10 D
"RTN","IBAERR3",82,0)
 .S XQATMP=+XQADATA-10
"RTN","IBAERR3",83,0)
 .W !!,"The error that occurred was: ",$P($T(ERR+XQATMP^IBAERR2),";;",2),!,"Processed"
"RTN","IBAERR3",84,0)
 W " by ",$P($G(^VA(200,+$P(XQADATA,";",6),0)),"^")," on ",$$DAT1^IBOUTL($P(XQADATA,";",7)),"."
"RTN","IBAERR3",85,0)
 ;
"RTN","IBAERR3",86,0)
 ; -- this only handles ibjobs>10 (exemption)
"RTN","IBAERR3",87,0)
 I $P(XQADATA,";",4)>10 D
"RTN","IBAERR3",88,0)
 .S XQATMP1=$P(XQADATA,";",4)-10
"RTN","IBAERR3",89,0)
 .W !,"This occurred during the ",$P($T(JOB+XQATMP1^IBAERR2),";;",2)
"RTN","IBAERR3",90,0)
 I $P(XQADATA,";",5)>10 D
"RTN","IBAERR3",91,0)
 .S XQATMP2=$P(XQADATA,";",5)-10
"RTN","IBAERR3",92,0)
 .W !,$P($T(WHERE+XQATMP2^IBAERR2),";;",2)
"RTN","IBAERR3",93,0)
 ;
"RTN","IBAERR3",94,0)
WRITEQ Q
"RTN","IBAERR3",95,0)
 ;
"RTN","IBAERR3",96,0)
UP ; -- update error file with user
"RTN","IBAERR3",97,0)
 Q:'$D(XQAKILL)
"RTN","IBAERR3",98,0)
 N DA,DIC,DIE,DR,X,Y
"RTN","IBAERR3",99,0)
 G:'$P(XQADATA,";",8) UPQ
"RTN","IBAERR3",100,0)
 S DA=$P(XQADATA,";",8) S X=$G(^IBA(354.4,DA,0)) G:X=""!($P(X,"^",3)'="") UPQ
"RTN","IBAERR3",101,0)
 S DIE="^IBA(354.4,",DR=".03////"_DUZ_";.04///NOW" D ^DIE
"RTN","IBAERR3",102,0)
 ;
"RTN","IBAERR3",103,0)
 G:$P($G(^IBA(354.1,+$P(XQADATA,";",3),0)),"^",9)="" UPQ
"RTN","IBAERR3",104,0)
 K DIC,DIE,DA,DR,X,Y
"RTN","IBAERR3",105,0)
 S DA=$P(XQADATA,";",3),DIE="^IBA(354.1,",DR=".09///@" D ^DIE
"RTN","IBAERR3",106,0)
UPQ Q
"RTN","IBAERR3",107,0)
 ;
"RTN","IBAERR3",108,0)
MSG ;;
"RTN","IBAERR3",109,0)
 ;;Patient has been given a Hardship Exemption
"RTN","IBAERR3",110,0)
 ;;Patient's Hardship Exemption has been removed
"RTN","IBAERR3",111,0)
 ;;Patient's Exemption based on Income has expired
"RTN","IBAERR3",112,0)
 ;;
"RTN","IBAERR3",113,0)
 Q
"RTN","IBAERR3",114,0)
 ;
"RTN","IBAERR3",115,0)
PURGE ; -- purge entries in 354.4, clear pointer in 354.1, delete alert
"RTN","IBAERR3",116,0)
 ;    purge cleared entries older than 30 days, all over 60 days
"RTN","IBAERR3",117,0)
 ;
"RTN","IBAERR3",118,0)
 ; -- called by IBAMTC (nightly means test job)
"RTN","IBAERR3",119,0)
 ;    not user interactive (friendly)
"RTN","IBAERR3",120,0)
 ;
"RTN","IBAERR3",121,0)
 Q:'$O(^IBA(354.4,"AC",0))
"RTN","IBAERR3",122,0)
 S X1=DT,X2=-30 D C^%DTC S IB30=X
"RTN","IBAERR3",123,0)
 S X1=DT,X2=-60 D C^%DTC S IB60=X
"RTN","IBAERR3",124,0)
 S IBDT=""
"RTN","IBAERR3",125,0)
 W:'$D(ZTQUEUED) !!,"Purging Alerts..."
"RTN","IBAERR3",126,0)
 F  S IBDT=$O(^IBA(354.4,"AC",IBDT)) Q:'IBDT!(IBDT>IB30)  S IBDA=0 F  S IBDA=$O(^IBA(354.4,"AC",IBDT,IBDA)) Q:'IBDA  D
"RTN","IBAERR3",127,0)
 .;
"RTN","IBAERR3",128,0)
 .S X=$G(^IBA(354.4,IBDA,0))
"RTN","IBAERR3",129,0)
 .I '$P(X,"^",3),(IBDT>IB60) Q
"RTN","IBAERR3",130,0)
 .;
"RTN","IBAERR3",131,0)
 .S XQAID=$P(^IBE(354.5,+1,0),"^",2)_IBDA
"RTN","IBAERR3",132,0)
 .S X=$O(^IBA(354.1,"ALERT",IBDA,0)) I X S DA=X,DR=".09///@",DIE="^IBA(354.1," D ^DIE K DA,DR,DIE
"RTN","IBAERR3",133,0)
 .;
"RTN","IBAERR3",134,0)
 .S IBALERT=+$G(^IBA(354.4,+IBDA,0))
"RTN","IBAERR3",135,0)
 .D TOWHO S XQAKILL=0 D DELETEA^XQALERT
"RTN","IBAERR3",136,0)
 .;
"RTN","IBAERR3",137,0)
 .S DA=IBDA,DIK="^IBA(354.4," D ^DIK K DA,DIK
"RTN","IBAERR3",138,0)
 .Q
"RTN","IBAERR3",139,0)
 K IB30,IB60,IBDA,XQA,XQAID,XQAKILL,X,X1,X2
"RTN","IBCEOB1")
0^7^B69145687^B67354030
"RTN","IBCEOB1",1,0)
IBCEOB1 ;ALB/TMP - 835 EDI EOB MSG PROCESSING ;18-FEB-99
"RTN","IBCEOB1",2,0)
 ;;2.0;INTEGRATED BILLING;**137,135,155,296,356**;21-MAR-94
"RTN","IBCEOB1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEOB1",4,0)
 Q
"RTN","IBCEOB1",5,0)
 ;
"RTN","IBCEOB1",6,0)
STORE(A,IB0,IBEOB,LEVEL) ;
"RTN","IBCEOB1",7,0)
 ; A = the string of data to extract and try to store
"RTN","IBCEOB1",8,0)
 ;       each ^ piece is a field to store
"RTN","IBCEOB1",9,0)
 ;         within each ^ piece, there are 5 ';' pieces:
"RTN","IBCEOB1",10,0)
 ;            1 = piece to extract from the data string;
"RTN","IBCEOB1",11,0)
 ;            2 = field to update;
"RTN","IBCEOB1",12,0)
 ;            3 = flag for dollar amt (1=YES);
"RTN","IBCEOB1",13,0)
 ;            4 = flag for 4-slash stuff without transform (1=YES);
"RTN","IBCEOB1",14,0)
 ;            5 = flag for numeric/non-dollar amt (1=Yes, 0=No,
"RTN","IBCEOB1",15,0)
 ;                 Dn = the field is numeric with 'n' decimal places
"RTN","IBCEOB1",16,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",17,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",18,0)
 ; LEVEL = the array that contains the DIE and DA values if stuffing at a
"RTN","IBCEOB1",19,0)
 ;         level other than the top level
"RTN","IBCEOB1",20,0)
 ;
"RTN","IBCEOB1",21,0)
 N B,IBPC,IBFLD,DA,DR,DIE,X,Y
"RTN","IBCEOB1",22,0)
 S DR=";"
"RTN","IBCEOB1",23,0)
 ;
"RTN","IBCEOB1",24,0)
 I '$G(LEVEL) S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",25,0)
 ;
"RTN","IBCEOB1",26,0)
 I $G(LEVEL) D
"RTN","IBCEOB1",27,0)
 . N Q
"RTN","IBCEOB1",28,0)
 . S DIE=$G(LEVEL("DIE"))
"RTN","IBCEOB1",29,0)
 . S Q=0 F  S Q=$O(LEVEL(Q)) Q:'Q  S DA(Q)=LEVEL(Q)
"RTN","IBCEOB1",30,0)
 . S DA=LEVEL(0)
"RTN","IBCEOB1",31,0)
 ;
"RTN","IBCEOB1",32,0)
 I $G(DA) F B=1:1:$L(A,U) D
"RTN","IBCEOB1",33,0)
 . S IBPC=$P(A,U,B),IBFLD=$P(IBPC,";",2)
"RTN","IBCEOB1",34,0)
 . I $P(IB0,U,+IBPC)'="",IBFLD D
"RTN","IBCEOB1",35,0)
 .. N VAL
"RTN","IBCEOB1",36,0)
 .. ; For dollar amts, add full cents; For numerics, strip leading
"RTN","IBCEOB1",37,0)
 .. ;   0's; For non-numeric/non-dollar amts, make any ; in data into |
"RTN","IBCEOB1",38,0)
 .. S VAL=$S($P(IBPC,";",3):$$DOLLAR^IBCEOB($P(IB0,U,+IBPC)),$P(IBPC,";",5):+$P(IB0,U,+IBPC),$P($P(IBPC,";",5),"D",2):$P(IB0,U,+IBPC)/(10**$P($P(IBPC,";",5),"D",2)),1:$TR($P(IB0,U,+IBPC),";","|"))
"RTN","IBCEOB1",39,0)
 .. I $P(IBPC,";",3),VAL S VAL=$P(VAL,".")_"."_$E($P(VAL,".",2)_"00",1,2)
"RTN","IBCEOB1",40,0)
 .. S DR=DR_IBFLD_"///"_$S($P(IBPC,";",4):"/",1:"")_VAL_";"
"RTN","IBCEOB1",41,0)
 ;
"RTN","IBCEOB1",42,0)
 S DR=$P(DR,";",2,$L(DR,";")-1)
"RTN","IBCEOB1",43,0)
 I DR'="" D ^DIE
"RTN","IBCEOB1",44,0)
 Q ($D(Y)=0) ;Successfully stored all the data it was sent if $D(Y)=0
"RTN","IBCEOB1",45,0)
 ;
"RTN","IBCEOB1",46,0)
HDR(IB0,IBEGBL,IBEOB) ; Store header data for EOB
"RTN","IBCEOB1",47,0)
 ; IB0 = the record being processed from the msg
"RTN","IBCEOB1",48,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",49,0)
 ;
"RTN","IBCEOB1",50,0)
 N IBDT,IBDTP,DA,DR,DIE,X,Y
"RTN","IBCEOB1",51,0)
 K IBXSAVE("XTRA"),IBZSAVE
"RTN","IBCEOB1",52,0)
 ;
"RTN","IBCEOB1",53,0)
 S IBDT=$P(IB0,U,3),IBDT=$E(IBDT,1,4)-1700_$E(IBDT,5,8)_"."_$P(IB0,U,4)
"RTN","IBCEOB1",54,0)
 S IBDTP=$P(IB0,U,9)
"RTN","IBCEOB1",55,0)
 I IBDTP S IBDTP=$E(IBDTP,1,4)-1700_$E(IBDTP,5,8)
"RTN","IBCEOB1",56,0)
 S DR=$S($P(IB0,U,7)'="":".03////"_$P(IB0,U,7)_";",1:"")_".05////"_IBDT_";.04////"_($P(IB0,U,5)="Y")_";.15///"_$$COBN^IBCEF(+$G(^IBM(361.1,IBEOB,0)))_";.07///"_$P(IB0,U,8)_$S(IBDTP:";.06////"_IBDTP,1:"")
"RTN","IBCEOB1",57,0)
 S DIE="^IBM(361.1,",DA=IBEOB
"RTN","IBCEOB1",58,0)
 D ^DIE
"RTN","IBCEOB1",59,0)
 I $D(Y)'=0 D
"RTN","IBCEOB1",60,0)
 . S ^TMP(IBEGBL,$J,+$O(^TMP(IBEGBL,$J,""),-1)+1)="Bad header data"
"RTN","IBCEOB1",61,0)
 Q ($D(Y)=0)
"RTN","IBCEOB1",62,0)
 ;
"RTN","IBCEOB1",63,0)
FINDLN(IB0,IBEOB,IBZDATA) ; Find the corresponding billed line for the adj
"RTN","IBCEOB1",64,0)
 ; IB0 = the record being processed
"RTN","IBCEOB1",65,0)
 ;       NOTE: pieces 3,4,16 are already reformatted
"RTN","IBCEOB1",66,0)
 ; IBEOB = the ien of the EOB entry in file 361.1
"RTN","IBCEOB1",67,0)
 ; IBZDATA = the array from the output formatter containing line
"RTN","IBCEOB1",68,0)
 ;           items for the bill.  This is passed in so this data only has
"RTN","IBCEOB1",69,0)
 ;           to be extracted once for each bill (the first time in, it
"RTN","IBCEOB1",70,0)
 ;           will be undefined)
"RTN","IBCEOB1",71,0)
 ; OUTPUT = Line # in the original bill that this adjustment relates to
"RTN","IBCEOB1",72,0)
 ;          ^ paid procedure code if different from original procedure OR
"RTN","IBCEOB1",73,0)
 ;            paid rev code if different from original and no proc code
"RTN","IBCEOB1",74,0)
 ;
"RTN","IBCEOB1",75,0)
 N IBLN,IBLN1,IBBNDL,OCHG,OCHG2,OPROC,OREVCD,IBIFN,IBXARRAY,IBXARRY
"RTN","IBCEOB1",76,0)
 N IBXERR,UNITS,UNITS2,UNITS3,IBMOD,Z,Z0,CPT,EOBCHG,IBZVLA,IBAMIN
"RTN","IBCEOB1",77,0)
 ;
"RTN","IBCEOB1",78,0)
 S (IBLN,IBLN1)="",IBIFN=+$G(^IBM(361.1,IBEOB,0))
"RTN","IBCEOB1",79,0)
 S EOBCHG=+$$DOLLAR^IBCEOB($P(IB0,U,15))   ; charges on EOB 40 record
"RTN","IBCEOB1",80,0)
 ;
"RTN","IBCEOB1",81,0)
 ; if original procedure exists and is different than the 835 procedure,
"RTN","IBCEOB1",82,0)
 ; the procedure or revenue code originally billed will be in piece 10
"RTN","IBCEOB1",83,0)
 ; of the '40' record of the 835 flat file.  Otherwise, pc 10 is null.
"RTN","IBCEOB1",84,0)
 S IBBNDL=$S($P(IB0,U,10)'="":1,1:0)
"RTN","IBCEOB1",85,0)
 ;
"RTN","IBCEOB1",86,0)
 ; If this is a split MRA, build array of Vista line#'s from other split MRA's
"RTN","IBCEOB1",87,0)
 I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$$SPLIT^IBCEMU1(IBEOB) D
"RTN","IBCEOB1",88,0)
 . N IEN S IEN=0
"RTN","IBCEOB1",89,0)
 . F  S IEN=$O(^IBM(361.1,"B",IBIFN,IEN)) Q:'IEN  I IEN'=IBEOB D
"RTN","IBCEOB1",90,0)
 .. I $P($G(^IBM(361.1,IEN,0)),U,4)'=1 Q    ; not an MRA
"RTN","IBCEOB1",91,0)
 .. I '$$SPLIT^IBCEMU1(IEN) Q               ; not a split EOB
"RTN","IBCEOB1",92,0)
 .. M IBZVLA=^IBM(361.1,IEN,15,"AC")
"RTN","IBCEOB1",93,0)
 .. Q
"RTN","IBCEOB1",94,0)
 . Q
"RTN","IBCEOB1",95,0)
 ;
"RTN","IBCEOB1",96,0)
 I $P($G(^DGCR(399,IBIFN,0)),U,19)=3 D  G FINDLNX     ; UB92 format
"RTN","IBCEOB1",97,0)
 . I '$D(IBZDATA) D F^IBCEF("N-UB92 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",98,0)
 . I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) Q
"RTN","IBCEOB1",99,0)
 . ;
"RTN","IBCEOB1",100,0)
 . S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",101,0)
 .. ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",102,0)
 .. I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",103,0)
 .. ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",104,0)
 .. I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",105,0)
 .. I $G(IBZDATA(Z))="" Q
"RTN","IBCEOB1",106,0)
 .. S OCHG=$P(IBZDATA(Z),U,3)*$P(IBZDATA(Z),U,4) ; Total charge from bill
"RTN","IBCEOB1",107,0)
 .. S OCHG2=+$P(IBZDATA(Z),U,5)
"RTN","IBCEOB1",108,0)
 .. I OCHG'=EOBCHG,OCHG2=EOBCHG S OCHG=OCHG2     ; update OCHG
"RTN","IBCEOB1",109,0)
 .. ;
"RTN","IBCEOB1",110,0)
 .. S CPT=$P(IBZDATA(Z),U,2)                        ; proc from bill
"RTN","IBCEOB1",111,0)
 .. I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",112,0)
 .. S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",113,0)
 .. S OREVCD=+$P($G(^DGCR(399.2,+IBZDATA(Z),0)),U)  ; Rev cd from bill
"RTN","IBCEOB1",114,0)
 .. ;
"RTN","IBCEOB1",115,0)
 .. ; if not bundled/unbundled
"RTN","IBCEOB1",116,0)
 .. I 'IBBNDL D  Q
"RTN","IBCEOB1",117,0)
 ... I OPROC="",OREVCD,OREVCD'=$P(IB0,U,4) Q      ; revenue code
"RTN","IBCEOB1",118,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,3) Q             ; procedure code
"RTN","IBCEOB1",119,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",120,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",121,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,5,8)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,5)) Q                    ; modifiers
"RTN","IBCEOB1",122,0)
 ... S IBLN=Z
"RTN","IBCEOB1",123,0)
 ... Q
"RTN","IBCEOB1",124,0)
 .. ;
"RTN","IBCEOB1",125,0)
 .. ; if bundled/unbundled
"RTN","IBCEOB1",126,0)
 .. I IBBNDL D  Q
"RTN","IBCEOB1",127,0)
 ... I OPROC="",OREVCD,OREVCD'=+$P(IB0,U,10) Q    ; revenue code
"RTN","IBCEOB1",128,0)
 ... I OPROC'="",OPROC'=$P(IB0,U,10) Q            ; procedure code
"RTN","IBCEOB1",129,0)
 ... I +$P(IBZDATA(Z),U,4)'=$P(IB0,U,16) Q        ; original units
"RTN","IBCEOB1",130,0)
 ... I +OCHG'=EOBCHG Q                            ; original charges
"RTN","IBCEOB1",131,0)
 ... I '$$MODMATCH($P(IBZDATA(Z),U,9),$P(IB0,U,11,14)),'$$MODMATCH($P($P(IBZDATA(Z),U,9),",",1),$P(IB0,U,11)) Q                 ; modifiers
"RTN","IBCEOB1",132,0)
 ... S IBLN=Z_U_$S(OPROC'="":OPROC,1:OREVCD)
"RTN","IBCEOB1",133,0)
 ... Q
"RTN","IBCEOB1",134,0)
 .. Q
"RTN","IBCEOB1",135,0)
 . ; When dealing with Inpatient UB92's, check for revenue code roll-ups
"RTN","IBCEOB1",136,0)
 . I 'IBLN,$$INPAT^IBCEF(IBIFN,1) D RCRU^IBCEOB00(.IBZDATA,IB0,.IBLN)
"RTN","IBCEOB1",137,0)
 . ; If only 1 rev code and charges are the same, assume a match
"RTN","IBCEOB1",138,0)
 . I 'IBLN,'$P($G(^IBM(361.1,IBEOB,0)),U,4),$O(IBZDATA(""),-1)=$O(IBZDATA("")),+OCHG=EOBCHG S IBLN=+$O(IBZDATA(""))_U_OREVCD
"RTN","IBCEOB1",139,0)
 ;
"RTN","IBCEOB1",140,0)
 ; At this point, we can assume the claim is HCFA 1500 format
"RTN","IBCEOB1",141,0)
 I '$D(IBZDATA) D F^IBCEF("N-HCFA 1500 SERVICE LINE (EDI)","IBZDATA",,IBIFN)
"RTN","IBCEOB1",142,0)
 I $P(IB0,U,22),$D(IBZDATA(+$P(IB0,U,22))) S IBLN=+$P(IB0,U,22)_U_$P(IB0,U,10) G FINDLNX
"RTN","IBCEOB1",143,0)
 S Z=0 F  S Z=$O(IBZDATA(Z)) Q:'Z  D  Q:IBLN
"RTN","IBCEOB1",144,0)
 . ; Quit if processing an MRA and this VistA line# has already been filed
"RTN","IBCEOB1",145,0)
 . I $P($G(^IBM(361.1,IBEOB,0)),U,4)=1,$D(^IBM(361.1,IBEOB,15,"AC",Z)) Q
"RTN","IBCEOB1",146,0)
 . ; Quit if split MRA and this VistA line# has already been filed
"RTN","IBCEOB1",147,0)
 . I $D(IBZVLA(Z)) Q
"RTN","IBCEOB1",148,0)
 . S OCHG=$P(IBZDATA(Z),U,8)*$P(IBZDATA(Z),U,9) ; charge from bill
"RTN","IBCEOB1",149,0)
 . S IBAMIN=""
"RTN","IBCEOB1",150,0)
 . I $P(IBZDATA(Z),U,12)'="" S IBAMIN=$P(IBZDATA(Z),U,12)  ;anesthesia minutes
"RTN","IBCEOB1",151,0)
 . S UNITS=$S('IBAMIN:$P(IBZDATA(Z),U,9),1:IBAMIN/15)
"RTN","IBCEOB1",152,0)
 . ; original units from bill or anesthesia minutes calculation
"RTN","IBCEOB1",153,0)
 . I $P(UNITS,".",2) S UNITS=$FN(UNITS,"",1)    ; round to a single decimal place for fractional units
"RTN","IBCEOB1",154,0)
 . I $P($P(IB0,U,16),".",2) S $P(IB0,U,16)=$FN($P(IB0,U,16),"",1)
"RTN","IBCEOB1",155,0)
 . S UNITS2=$P(IBZDATA(Z),U,9)     ; just the units
"RTN","IBCEOB1",156,0)
 . ; UNITS3 is the number of anesthesia minutes divided by 10, or nil.
"RTN","IBCEOB1",157,0)
 . ; Solution to get around the Trailblazers bug for MRAs
"RTN","IBCEOB1",158,0)
 . S UNITS3=""
"RTN","IBCEOB1",159,0)
 . I IBAMIN'=0 S UNITS3=IBAMIN/10
"RTN","IBCEOB1",160,0)
 . ;
"RTN","IBCEOB1",161,0)
 . S CPT=$P(IBZDATA(Z),U,5)        ; proc from bill
"RTN","IBCEOB1",162,0)
 . I CPT'?.N,CPT'="" S CPT=$O(^ICPT("B",CPT,""))   ; non-numeric proc
"RTN","IBCEOB1",163,0)
 . S OPROC=$$PRCD^IBCEF1(+CPT_";ICPT(")            ; ext proc code
"RTN","IBCEOB1",164,0)
 . Q:OPROC'=$S('IBBNDL:$P(IB0,U,3),1:$P(IB0,U,10))
"RTN","IBCEOB1",165,0)
 . ;
"RTN","IBCEOB1",166,0)
 . S MODOK=0
"RTN","IBCEOB1",167,0)
 . I $$DOLLAR^IBCEFG1(OCHG)=+$P(IB0,U,15),UNITS=$P(IB0,U,16)!(UNITS2=$P(IB0,U,16))!(UNITS3=$P(IB0,U,16))!(IBAMIN=$P(IB0,U,16)),$S($P(IB0,U,19):$P(IB0,U,19)=$P(IBZDATA(Z),U),1:1) D
"RTN","IBCEOB1",168,0)
 .. ;Original procedure/chg/units/date match to get here
"RTN","IBCEOB1",169,0)
 .. ;Check matching original modifiers
"RTN","IBCEOB1",170,0)
 .. S MODOK=$$MODMATCH($$MODLST^IBEFUNC2($P(IBZDATA(Z),U,10)),$S('IBBNDL:$P(IB0,U,5,8),1:$P(IB0,U,11,14)))
"RTN","IBCEOB1",171,0)
 .. I 'MODOK,'IBLN1 S IBLN1=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",172,0)
 .. Q:'MODOK
"RTN","IBCEOB1",173,0)
 .. S IBLN=Z_$S(IBBNDL:U_OPROC,1:"")
"RTN","IBCEOB1",174,0)
 I 'IBLN,IBLN1 S IBLN=IBLN1
"RTN","IBCEOB1",175,0)
 ;
"RTN","IBCEOB1",176,0)
FINDLNX ;
"RTN","IBCEOB1",177,0)
 Q IBLN
"RTN","IBCEOB1",178,0)
 ;
"RTN","IBCEOB1",179,0)
MODMATCH(IB,MODLST) ; Match modifiers
"RTN","IBCEOB1",180,0)
 ; IB = the list of modifiers iens from the bill, comma delimited
"RTN","IBCEOB1",181,0)
 ; MODLST = the 4 '^' pieces of the reported modifiers
"RTN","IBCEOB1",182,0)
 ;
"RTN","IBCEOB1",183,0)
 N MODOK,Q,Z0,IBMOD,MMOD
"RTN","IBCEOB1",184,0)
 S MODOK=1
"RTN","IBCEOB1",185,0)
 I $TR(IB,",")'="" F Q=1:1:$L(IB,",") S Z0=$P(IB,",",Q) I Z0'="" S IBMOD(Z0)=$G(IBMOD(Z0))+1
"RTN","IBCEOB1",186,0)
 I $TR(MODLST,U)="",$O(IBMOD(""))="" G MODQ ; No modifiers used
"RTN","IBCEOB1",187,0)
 ;
"RTN","IBCEOB1",188,0)
 ; No match if no VistA modifiers, but there are MRA modifiers
"RTN","IBCEOB1",189,0)
 I $TR(MODLST,U)'="",$O(IBMOD(""))="" S MODOK=0 G MODQ
"RTN","IBCEOB1",190,0)
 ;
"RTN","IBCEOB1",191,0)
 ; Evaluate each MRA modifier
"RTN","IBCEOB1",192,0)
 F Z0=1:1:4 D
"RTN","IBCEOB1",193,0)
 . S MMOD=$P(MODLST,U,Z0) Q:MMOD=""     ; individual MRA modifier
"RTN","IBCEOB1",194,0)
 . I '$D(IBMOD(MMOD)) Q                 ; not in array so just quit
"RTN","IBCEOB1",195,0)
 . S IBMOD(MMOD)=IBMOD(MMOD)-1          ; decrement array counter
"RTN","IBCEOB1",196,0)
 . I 'IBMOD(MMOD) KILL IBMOD(MMOD)      ; if 0, then kill array entry
"RTN","IBCEOB1",197,0)
 . Q
"RTN","IBCEOB1",198,0)
 ;
"RTN","IBCEOB1",199,0)
 I $O(IBMOD(""))'="" S MODOK=0 ; All submitted mods not matched
"RTN","IBCEOB1",200,0)
MODQ Q MODOK
"RTN","IBCEOB1",201,0)
 ;
"RTN","IBCEQ1")
0^8^B30688756^B30063077
"RTN","IBCEQ1",1,0)
IBCEQ1 ;BSL,ALB/TMK - PROVIDER ID QUERY ;25-AUG-03
"RTN","IBCEQ1",2,0)
 ;;2.0;INTEGRATED BILLING;**232,356**;21-MAR-94
"RTN","IBCEQ1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCEQ1",4,0)
 ;
"RTN","IBCEQ1",5,0)
 ;QUERY TOOL HELPS IDENTIFY PLANS THAT ARE LACKING PROVIDER ID
"RTN","IBCEQ1",6,0)
 ;INFO OR HAVE BAD PROVIDER ID DATA FOR E-BILLING
"RTN","IBCEQ1",7,0)
 ;
"RTN","IBCEQ1",8,0)
 ;CONDITIONS TO IDENTIFY:
"RTN","IBCEQ1",9,0)
 ;1-BLUE CROSS LINKED TO HCFA ONLY (1) HARD ERROR
"RTN","IBCEQ1",10,0)
 ;2-BLUE SHIELD LINKED TO UB92 ONLY (2) WARNING
"RTN","IBCEQ1",11,0)
 ;3-BLUE CROSS ID APPLIED TO BOTH FORMS (0) WARNING
"RTN","IBCEQ1",12,0)
 ;4-BLUE CROSS OR BLUE SHIELD IDs EXIST FOR AN INS CO, BUT ONE OR
"RTN","IBCEQ1",13,0)
 ;  MORE OF THE INSURANCE COMPANY'S PLANS DOES NOT HAVE AN
"RTN","IBCEQ1",14,0)
 ;  ELECTRONIC PLAN TYPE OF 'BL'
"RTN","IBCEQ1",15,0)
 ;5-NON BLUE CROSS/SHIELD ID FOR AN INS COMPANY WITH BLUE PLAN(S)
"RTN","IBCEQ1",16,0)
 ;6-VAD000 as an ID but not flagged as a UPIN
"RTN","IBCEQ1",17,0)
 ;
"RTN","IBCEQ1",18,0)
EN ;
"RTN","IBCEQ1",19,0)
 N POP,%ZIS,ZTSK,ZTRTN,ZTDESC,IBREBLD,IBSENDM,IBTO,DIR,X,Y,DUOUT,DTOUT,Z
"RTN","IBCEQ1",20,0)
 S IBREBLD=$S('$D(^XTMP("IB_PLAN232")):1,1:0)
"RTN","IBCEQ1",21,0)
 I $D(^XTMP("IB_PLAN232")) D
"RTN","IBCEQ1",22,0)
 . S DIR("?")="IF YOU ANSWER NO, REPORT WILL BE RUN FROM THE EXISTING QUERY DATA",DIR("?",1)="IF YOU ANSWER YES, A NEW QUERY WILL BE RUN"
"RTN","IBCEQ1",23,0)
 . S DIR(0)="YA",DIR("A",1)="THE EXTRACT GLOBAL FOR THIS QUERY ALREADY EXISTS",DIR("A")="DO YOU WANT TO DELETE IT AND RERUN THE QUERY?: ",DIR("B")="NO" W ! D ^DIR K DIR
"RTN","IBCEQ1",24,0)
 . Q:$D(DUOUT)!$D(DTOUT)!'Y
"RTN","IBCEQ1",25,0)
 . S IBREBLD=1
"RTN","IBCEQ1",26,0)
 ;
"RTN","IBCEQ1",27,0)
 N XMINSTR,Z,ZTSAVE
"RTN","IBCEQ1",28,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","IBCEQ1",29,0)
 S XMINSTR("ADDR FLAGS")="R"
"RTN","IBCEQ1",30,0)
 D TOWHOM^XMXAPIU(DUZ,"","S",.XMINSTR)
"RTN","IBCEQ1",31,0)
 S Z="" F  S Z=$O(^TMP("XMY",$J,Z)) Q:Z=""  S IBTO(Z)=""
"RTN","IBCEQ1",32,0)
 K ^TMP("XMY",$J),^TMP("XMY0",$J)
"RTN","IBCEQ1",33,0)
 ;
"RTN","IBCEQ1",34,0)
 S %ZIS="QM" D ^%ZIS G:POP EN1Q
"RTN","IBCEQ1",35,0)
 I $D(IO("Q")) D  G EN1Q
"RTN","IBCEQ1",36,0)
 . S ZTRTN="ENT^IBCEQ1("_IBREBLD_",.IBTO)",ZTDESC="IB - HIPAA ENHANCEMENTS PROV ID QUERY",ZTSAVE("IBTO(")=""
"RTN","IBCEQ1",37,0)
 . D ^%ZTLOAD
"RTN","IBCEQ1",38,0)
 . W !!,$S($D(ZTSK):"Task # "_ZTSK_" has been queued.",1:"Unable to queue this job.")
"RTN","IBCEQ1",39,0)
 . K ZTSK,IO("Q") D HOME^%ZIS
"RTN","IBCEQ1",40,0)
 U IO
"RTN","IBCEQ1",41,0)
 D ENT(IBREBLD,.IBTO)
"RTN","IBCEQ1",42,0)
EN1Q Q
"RTN","IBCEQ1",43,0)
 ;
"RTN","IBCEQ1",44,0)
ENT(IBREBLD,IBTO) ; Queued job enter here
"RTN","IBCEQ1",45,0)
 ;
"RTN","IBCEQ1",46,0)
 N LOOP,Z
"RTN","IBCEQ1",47,0)
 K ^TMP($J,"SENDMSG")
"RTN","IBCEQ1",48,0)
 S ^TMP($J,"SENDMSG")=$S(IBREBLD:1,1:0)
"RTN","IBCEQ1",49,0)
 S Z="" F  S Z=$O(IBTO(Z)) Q:Z=""  S ^TMP($J,"SENDMSG",0,Z)=""
"RTN","IBCEQ1",50,0)
 I $G(IBREBLD) D
"RTN","IBCEQ1",51,0)
 . ; Rebld query
"RTN","IBCEQ1",52,0)
 . K ^XTMP("IB_PLAN232")
"RTN","IBCEQ1",53,0)
 . S ^XTMP("IB_PLAN232")="",^XTMP("IB_PLAN232",0)=$$FMADD^XLFDT(DT,45)_U_DT_"^IB PATCH 232 PROV ID QUERY"
"RTN","IBCEQ1",54,0)
 . ;
"RTN","IBCEQ1",55,0)
 . ; loop thru 355.91 (IB INSURANCE CO LEVEL BILLING PROV ID)
"RTN","IBCEQ1",56,0)
 . ;   then 355.9 (IB BILLING PRACTITIONER ID)
"RTN","IBCEQ1",57,0)
 . F LOOP=355.91,355.9 D LP
"RTN","IBCEQ1",58,0)
 . ;
"RTN","IBCEQ1",59,0)
 ;
"RTN","IBCEQ1",60,0)
 D RPTOUT^IBCEQ1A
"RTN","IBCEQ1",61,0)
 K ^TMP($J,"SENDMSG")
"RTN","IBCEQ1",62,0)
 Q
"RTN","IBCEQ1",63,0)
 ;
"RTN","IBCEQ1",64,0)
LP ; Loop through ids
"RTN","IBCEQ1",65,0)
 N IB,PTYP,PAYER,PLANIEN,FTA,IEPLAN,IPROV,PPROV,EDII,EDIP,PAYERP,TYPCOV,IBPMBPID,PTYPNM,IBI3,IBI0,SEQ,BLUE,TOT,NBLUE,DIR,DTOUT,DUOUT,X,Z,Z0,Z1,BL,UPIN,BCR,BSH
"RTN","IBCEQ1",66,0)
 S (SEQ,X,TOT,NBLUE,BLUE)=0,(BCR,BSH,UPIN)=""
"RTN","IBCEQ1",67,0)
 S Z="" F  S Z=$O(^IBE(355.97,Z)) Q:'Z  S Z0=$G(^(Z,0)) D
"RTN","IBCEQ1",68,0)
 . I $P(Z,U)["BLUE CROSS" S BCR=Z Q
"RTN","IBCEQ1",69,0)
 . I $P(Z,U)["BLUE SHIELD" S BSH=Z Q
"RTN","IBCEQ1",70,0)
 . I $P(Z,U)["UPIN" S UPIN=Z Q
"RTN","IBCEQ1",71,0)
 S:UPIN="" UPIN=22 S:BCR="" BCR=1 S:BSH="" BSH=2
"RTN","IBCEQ1",72,0)
 F  S X=$O(^IBA(LOOP,X)) Q:+X=0  D
"RTN","IBCEQ1",73,0)
 . S (PAYER,FTA,PLANIEN,IEPLAN,IPROV,PPROV,EDII,EDIP,PAYERP,TYPCOV,IBPMBPID,PTYPNM)=""
"RTN","IBCEQ1",74,0)
 . S SEQ=SEQ+1
"RTN","IBCEQ1",75,0)
 . S IB=$G(^IBA(LOOP,X,0))
"RTN","IBCEQ1",76,0)
 . S PTYP=$P(IB,U,6) ; prov id type ien
"RTN","IBCEQ1",77,0)
 . Q:PTYP=""  ; no prov type
"RTN","IBCEQ1",78,0)
 . S PTYPNM=$P($G(^IBE(355.97,PTYP,0)),U) ; prov id type desc
"RTN","IBCEQ1",79,0)
 . S PAYERP=$S(LOOP[".91":+IB,1:+$P(IB,U,2)) ;ins co ien
"RTN","IBCEQ1",80,0)
 . S IBI0=$G(^DIC(36,PAYERP,0)),IBI3=$G(^(3)),PAYER=$P(IBI0,U)
"RTN","IBCEQ1",81,0)
 . Q:$P(IBI0,U,5)!(IBI0="")  ; ins co inactive/deleted
"RTN","IBCEQ1",82,0)
 . S EDIP=$P(IBI3,U,2) ; edi id# prof
"RTN","IBCEQ1",83,0)
 . S EDII=$P(IBI3,U,4) ; edi id# inst
"RTN","IBCEQ1",84,0)
 . S IEPLAN=$P(IBI3,U,9) ; elec ins type ?1N
"RTN","IBCEQ1",85,0)
 . S PPROV=$P(IBI0,U,17) ; prof. prov#
"RTN","IBCEQ1",86,0)
 . S IPROV=$P(IBI0,U,11) ; hosp. prov#
"RTN","IBCEQ1",87,0)
 . S TYPCOV=$P(IBI0,U,13) ; type of cov ien;file 355.2
"RTN","IBCEQ1",88,0)
 . S FTA=$P(IB,U,4) ; form type applied; 0:both, 1:ub, 2:hcfa
"RTN","IBCEQ1",89,0)
 . S IBPMBPID=X_";"_LOOP
"RTN","IBCEQ1",90,0)
 . I $P(IB,U,7)="VAD000",PTYP'=UPIN D SET(6)
"RTN","IBCEQ1",91,0)
 . ;
"RTN","IBCEQ1",92,0)
 . I PTYP'=BCR&(PTYP'=BSH) D  Q    ; not BC/BS
"RTN","IBCEQ1",93,0)
 .. ; Only do following check once per insurance co
"RTN","IBCEQ1",94,0)
 .. Q:$D(^XTMP("IB_PLAN232",3,PAYERP))
"RTN","IBCEQ1",95,0)
 .. S ^XTMP("IB_PLAN232",3,PAYERP)=""
"RTN","IBCEQ1",96,0)
 .. ; Check if BC/BS ids exist at all for ins co
"RTN","IBCEQ1",97,0)
 .. Q:$O(^IBA(355.9,"AC",1,PAYERP,0))!$O(^IBA(355.9,"AC",2,PAYERP,0))!$O(^IBA(355.91,"AC",PAYERP,1,0))!$O(^IBA(355.91,"AC",PAYERP,2,0))
"RTN","IBCEQ1",98,0)
 .. S BL=0
"RTN","IBCEQ1",99,0)
 .. S Z1=0 F  S Z1=$O(^IBA(355.3,"B",PAYERP,Z1)) Q:'Z1  D
"RTN","IBCEQ1",100,0)
 ... I '$P($G(^IBA(355.3,Z1,0)),U,11),$P($G(^(0)),U,15)="BL" S PLANIEN=Z1,BL=1 D SET(5)
"RTN","IBCEQ1",101,0)
 .. S:BL NBLUE=NBLUE+1
"RTN","IBCEQ1",102,0)
 . ;
"RTN","IBCEQ1",103,0)
 . S BLUE=BLUE+1
"RTN","IBCEQ1",104,0)
 . ; ERROR - FORM TYPE=2:HCFA AND PTYP=1:BC
"RTN","IBCEQ1",105,0)
 . I PTYP=1&(FTA=2) D SET(1) Q
"RTN","IBCEQ1",106,0)
 . ;
"RTN","IBCEQ1",107,0)
 . I PTYP=2&(FTA=1) D SET(2) Q  ; BS applied to just UB
"RTN","IBCEQ1",108,0)
 . I FTA=0&(PTYP=1) D SET(3) Q  ; BC applied to both forms
"RTN","IBCEQ1",109,0)
 . ;
"RTN","IBCEQ1",110,0)
 . ; Only do following check once per insurance co
"RTN","IBCEQ1",111,0)
 . I '$D(^XTMP("IB_PLAN232",2,PAYERP)) D  ; Checks plans not BL
"RTN","IBCEQ1",112,0)
 .. S Z1=0,^XTMP("IB_PLAN232",2,PAYERP)=""
"RTN","IBCEQ1",113,0)
 .. F  S Z1=$O(^IBA(355.3,"B",PAYERP,Z1)) Q:'Z1  D
"RTN","IBCEQ1",114,0)
 ... I $P($G(^IBA(355.3,Z1,0)),U,15)'="BL",'$P(^(0),U,11) S PLANIEN=Z1 D SET(4) Q
"RTN","IBCEQ1",115,0)
 ;
"RTN","IBCEQ1",116,0)
 ; 3RD PC XTMP(IB_PLAN232)=TOTAL BLUES WITH NO BLUE IDS
"RTN","IBCEQ1",117,0)
 S $P(^XTMP("IB_PLAN232"),U,3)=$P($G(^XTMP("IB_PLAN232")),U,3)+NBLUE
"RTN","IBCEQ1",118,0)
 ;
"RTN","IBCEQ1",119,0)
 ; 4TH PC XTMP(IB_PLAN232)=TOT NUMBER SCANNED
"RTN","IBCEQ1",120,0)
 S $P(^XTMP("IB_PLAN232"),U,4)=$P($G(^XTMP("IB_PLAN232")),U,4)+SEQ
"RTN","IBCEQ1",121,0)
 ;
"RTN","IBCEQ1",122,0)
 ; 5TH PC XTMP(IB_PLAN232)=TOT BLUES IDS FOUND
"RTN","IBCEQ1",123,0)
 S $P(^XTMP("IB_PLAN232"),U,5)=$P($G(^XTMP("IB_PLAN232")),U,5)+BLUE
"RTN","IBCEQ1",124,0)
 ;
"RTN","IBCEQ1",125,0)
 ; 6TH PC XTMP(IB_PLAN232)=TOTAL ERRORS FOUND
"RTN","IBCEQ1",126,0)
 S $P(^XTMP("IB_PLAN232"),U,6)=$P($G(^XTMP("IB_PLAN232")),U,6)+TOT
"RTN","IBCEQ1",127,0)
 Q
"RTN","IBCEQ1",128,0)
 ;
"RTN","IBCEQ1",129,0)
SET(Z) ;SET VALUES INTO SAVE GLOBAL
"RTN","IBCEQ1",130,0)
 ; Z=REASON WHY WE'RE SETTING IT
"RTN","IBCEQ1",131,0)
 ; 1. PAYER-ins co name (36)
"RTN","IBCEQ1",132,0)
 ; 2. PLAN-grp name (355.3)
"RTN","IBCEQ1",133,0)
 ; 3. GROUP-grp # (355.3)
"RTN","IBCEQ1",134,0)
 ; 4. FTA-form typ (355.9)
"RTN","IBCEQ1",135,0)
 ; 5. EPLAN-"BL" (355.3)
"RTN","IBCEQ1",136,0)
 ; 6. IEPLAN-elec ins typ (36)
"RTN","IBCEQ1",137,0)
 ; 7. IPROV-hosp prov# (36)
"RTN","IBCEQ1",138,0)
 ; 8. PPROV-prof prov# (36)
"RTN","IBCEQ1",139,0)
 ; 9. EDII-inst edi id# (36)
"RTN","IBCEQ1",140,0)
 ;10. EDIP-prof edi id# (36)
"RTN","IBCEQ1",141,0)
 ;11. PAYERP-ins co ien (36)
"RTN","IBCEQ1",142,0)
 ;12. TYPCOV-type of cov ien (36)
"RTN","IBCEQ1",143,0)
 ;13. PLANIEN-ien of file (355.3)
"RTN","IBCEQ1",144,0)
 ;14. IBPMBPID-355.9 or 355.91;ien of file
"RTN","IBCEQ1",145,0)
 ;15. PTYPNM-prov id type desc (355.9)
"RTN","IBCEQ1",146,0)
 ;16. Z-reason
"RTN","IBCEQ1",147,0)
 ;
"RTN","IBCEQ1",148,0)
 N A,DUP
"RTN","IBCEQ1",149,0)
 ;
"RTN","IBCEQ1",150,0)
 S A=$O(^XTMP("IB_PLAN232",1," "),-1)+1,TOT=TOT+1
"RTN","IBCEQ1",151,0)
 S ^XTMP("IB_PLAN232",1,A,0)=PAYER_U_""_U_""_U_FTA_U_""_U_IEPLAN_U_""_U_""_U_""_U_""_U_PAYERP_U_TYPCOV_U_PLANIEN_U_IBPMBPID_U_PTYPNM_U_Z
"RTN","IBCEQ1",152,0)
 Q
"RTN","IBCEQ1",153,0)
 ;
"RTN","IBCNBEE")
0^9^B44406839^B44049904
"RTN","IBCNBEE",1,0)
IBCNBEE ;ALB/ARH-Ins Buffer: add/edit existing entries in buffer ;1 Jun 97
"RTN","IBCNBEE",2,0)
 ;;2.0;INTEGRATED BILLING;**82,184,252,251,356**;21-MAR-94
"RTN","IBCNBEE",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBCNBEE",4,0)
 ;
"RTN","IBCNBEE",5,0)
ADD(IBSOURCE) ; add a new buffer file entry (#355.33), sets only status (0) node data
"RTN","IBCNBEE",6,0)
 N IBARR,IBERR,IBIFN,IBX I '$G(IBSOURCE) S IBSOURCE=1
"RTN","IBCNBEE",7,0)
 ;
"RTN","IBCNBEE",8,0)
 S IBARR(355.33,"+1,",.01)="NOW",IBARR(355.33,"+1,",.03)=IBSOURCE
"RTN","IBCNBEE",9,0)
 D UPDATE^DIE("E","IBARR","IBIFN","IBERR")
"RTN","IBCNBEE",10,0)
 S IBX=+$G(IBIFN(1)) I $D(IBERR) S $P(IBX,U,2)=$G(IBERR("DIERR",1,"TEXT",1))
"RTN","IBCNBEE",11,0)
 Q IBX
"RTN","IBCNBEE",12,0)
 ;
"RTN","IBCNBEE",13,0)
STATUS(IBBUFDA,STATUS,NC,NG,NP) ; edit the status node
"RTN","IBCNBEE",14,0)
 ;
"RTN","IBCNBEE",15,0)
 N IBX,IBARR,IBIFN Q:'$G(IBBUFDA)  S IBIFN=IBBUFDA_","
"RTN","IBCNBEE",16,0)
 D CHK^DIE(355.33,.04,"",$G(STATUS),.IBX) Q:IBX="^"
"RTN","IBCNBEE",17,0)
 ;
"RTN","IBCNBEE",18,0)
 S IBARR(355.33,IBIFN,.04)=STATUS I STATUS="R" S (NC,NG,NP)=0
"RTN","IBCNBEE",19,0)
 S IBARR(355.33,IBIFN,.07)=+$G(NC),IBARR(355.33,IBIFN,.08)=+$G(NG),IBARR(355.33,IBIFN,.09)=+$G(NP)
"RTN","IBCNBEE",20,0)
 D FILE^DIE("E","IBARR")
"RTN","IBCNBEE",21,0)
 Q
"RTN","IBCNBEE",22,0)
 ;
"RTN","IBCNBEE",23,0)
INS(IBBUFDA,FLDS) ; edit the insurance company portion of a buffer file entry
"RTN","IBCNBEE",24,0)
 ;
"RTN","IBCNBEE",25,0)
 N DIC,DIE,DA,DR,X,Y,IBCNEXT1
"RTN","IBCNBEE",26,0)
 I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",27,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",28,0)
 ;
"RTN","IBCNBEE",29,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing
"RTN","IBCNBEE",30,0)
 ;     - the insurance company name in the buffer.  Also added an
"RTN","IBCNBEE",31,0)
 ;     - input transform (see below) to clean up the data coming in.
"RTN","IBCNBEE",32,0)
 ;     - fetch the current buffer ins co name
"RTN","IBCNBEE",33,0)
 ;
"RTN","IBCNBEE",34,0)
 I FLDS="MR" S IBCNEXT1=$P($G(^IBA(355.33,IBBUFDA,20)),U,1)
"RTN","IBCNBEE",35,0)
 ;
"RTN","IBCNBEE",36,0)
 S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",37,0)
 ;
"RTN","IBCNBEE",38,0)
 I FLDS="MR" Q:$$INSNAME(IBBUFDA)<0  S DR=$P($T(@(FLDS_"INS")+1),";;",2,9999),DR=$P(DR,";",2,99999)
"RTN","IBCNBEE",39,0)
 ;
"RTN","IBCNBEE",40,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",41,0)
 Q
"RTN","IBCNBEE",42,0)
 ;
"RTN","IBCNBEE",43,0)
GRP(IBBUFDA,FLDS) ; edit the group/plan portion of the buffer file entry
"RTN","IBCNBEE",44,0)
 ;
"RTN","IBCNBEE",45,0)
 N DIC,DIE,DA,DR,X,Y I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",46,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",47,0)
 ;
"RTN","IBCNBEE",48,0)
 S DR=$P($T(@(FLDS_"GRP")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",49,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",50,0)
 Q
"RTN","IBCNBEE",51,0)
 ;
"RTN","IBCNBEE",52,0)
POLICY(IBBUFDA,FLDS) ; edit the patient policy portion of the buffer file entry
"RTN","IBCNBEE",53,0)
 ;
"RTN","IBCNBEE",54,0)
 N DIC,DIE,DA,DR,X,Y,IBZZ I $P($G(^IBA(355.33,+$G(IBBUFDA),0)),U,4)'="E" Q
"RTN","IBCNBEE",55,0)
 I $G(FLDS)="" S FLDS="MR"
"RTN","IBCNBEE",56,0)
 ;
"RTN","IBCNBEE",57,0)
 S DR=$P($T(@(FLDS_"POL")+1),";;",2,9999) Q:DR=""
"RTN","IBCNBEE",58,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",59,0)
 S DIE("NO^")="BACKOUTOK" D ^DIE K DIE,DA,DR Q:$D(Y)
"RTN","IBCNBEE",60,0)
 ;
"RTN","IBCNBEE",61,0)
 I FLDS="MR" D ESGHP(IBBUFDA)
"RTN","IBCNBEE",62,0)
 Q
"RTN","IBCNBEE",63,0)
 ;
"RTN","IBCNBEE",64,0)
ESGHP(IBBUFDA) ; sponsoring employer information
"RTN","IBCNBEE",65,0)
 N DIR,DIRUT,DUOUT,DTOUT,VAOA,VAERR,VA,DFN,IB60,IBE,IBEMPST,IBREL
"RTN","IBCNBEE",66,0)
 ;
"RTN","IBCNBEE",67,0)
 ; if insured is patient or spouse, ask if insured's current employer is the plan's sponsoring employer, if yes auto stuff it
"RTN","IBCNBEE",68,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) W ! S IB60=$G(^IBA(355.33,IBBUFDA,60)) D  Q:$D(DIRUT)
"RTN","IBCNBEE",69,0)
 . ; sponsoring employer is current employer?
"RTN","IBCNBEE",70,0)
 . S DFN=+IB60,IBREL=$P(IB60,U,6),VAOA("A")=$S(IBREL="01":5,IBREL="02":6,1:"") I 'DFN!(VAOA("A")="") Q
"RTN","IBCNBEE",71,0)
 . D OAD^VADPT I $G(VAOA(9))="" Q
"RTN","IBCNBEE",72,0)
 . S DIR("?")="Enter Yes if this plan is sponsored by the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer."
"RTN","IBCNBEE",73,0)
 . S DIR("?",1)="Entering Yes will result in the "_$S(IBREL="01":"patient's",1:"spouse's")_" current employer data being",DIR("?",2)="added to the policy as the Sponsoring Employer data.",DIR("?",3)=""
"RTN","IBCNBEE",74,0)
 . S DIR("A")="Current Employer "_VAOA(9)_" Sponsors this Plan",DIR("B")="No",DIR(0)="Y" D ^DIR W ! I Y'=1 Q
"RTN","IBCNBEE",75,0)
 . ;
"RTN","IBCNBEE",76,0)
 . D DELEMP(IBBUFDA) ; delete any data already contained in these fields
"RTN","IBCNBEE",77,0)
 . ;
"RTN","IBCNBEE",78,0)
 . ; if the insured's current employer sponsors the plan then stuff that employer's address into the buffer
"RTN","IBCNBEE",79,0)
 . S IBE=$S(IBREL="01":.311,1:.25),IBEMPST=$P($G(^DPT(DFN,IBE)),U,15) D
"RTN","IBCNBEE",80,0)
 . S DR="61.02///"_VAOA(9)_";61.03///"_IBEMPST_";61.06///"_$E(VAOA(1),1,30)_";61.07///"_$E(VAOA(2),1,30)
"RTN","IBCNBEE",81,0)
 . S DR=DR_";61.08///"_$E(VAOA(3),1,30)_";61.09///"_$E(VAOA(4),1,20)_";61.1////"_$P(VAOA(5),U,1)
"RTN","IBCNBEE",82,0)
 . S DR=DR_";61.11////"_$P(VAOA(11),U,1)_";61.12///"_$E(VAOA(8),1,15)
"RTN","IBCNBEE",83,0)
 . S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",84,0)
 ;
"RTN","IBCNBEE",85,0)
 ; if employer sponsored plan, edit buffer entry's sponsoring employer info
"RTN","IBCNBEE",86,0)
 I +$G(^IBA(355.33,IBBUFDA,61)) S DR="61.02:61.12",DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",87,0)
 ;
"RTN","IBCNBEE",88,0)
 ; if not employer sponsored plan, delete any existing sponsoring employer data
"RTN","IBCNBEE",89,0)
 I $D(^IBA(355.33,IBBUFDA,61)),'$G(^IBA(355.33,IBBUFDA,61)) D DELEMP(IBBUFDA)
"RTN","IBCNBEE",90,0)
 Q
"RTN","IBCNBEE",91,0)
 ;
"RTN","IBCNBEE",92,0)
DELEMP(IBBUFDA) ; delete sponsoring employer data
"RTN","IBCNBEE",93,0)
 N DIC,DIE,DA,DR,X,Y Q:'$D(^IBA(355.33,+$G(IBBUFDA),61))
"RTN","IBCNBEE",94,0)
 S DR="61.02///@;61.03///@;61.04///@;61.05///@;61.06///@;61.07///@;61.08///@;61.09///@;61.10///@;61.11///@;61.12///@"
"RTN","IBCNBEE",95,0)
 S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR
"RTN","IBCNBEE",96,0)
 Q
"RTN","IBCNBEE",97,0)
 ;
"RTN","IBCNBEE",98,0)
INSHELP ;
"RTN","IBCNBEE",99,0)
 W !!,"------------------------ INSURANCE COMPANY INFORMATION -------------------------",!
"RTN","IBCNBEE",100,0)
 Q
"RTN","IBCNBEE",101,0)
GRPHELP ;
"RTN","IBCNBEE",102,0)
 W !!,"---------------------------- GROUP/PLAN INFORMATION ----------------------------"
"RTN","IBCNBEE",103,0)
 W !," The following data defines a specific Group or Plan provided by an Insurance "
"RTN","IBCNBEE",104,0)
 W !," Company.  This may be either a group plan with many potential members or an "
"RTN","IBCNBEE",105,0)
 W !," individual plan with a single member.",!
"RTN","IBCNBEE",106,0)
 Q
"RTN","IBCNBEE",107,0)
POLHELP ;
"RTN","IBCNBEE",108,0)
 W !!,"---------------------- POLICY AND SUBSCRIBER INFORMATION -----------------------"
"RTN","IBCNBEE",109,0)
 W !," The following data defines the subscriber specific policy information for a "
"RTN","IBCNBEE",110,0)
 W !," particular Insurance Plan.  The subscriber, the insured, and the policy holder "
"RTN","IBCNBEE",111,0)
 W !," all refer to the person who is a member of the plan and therefore holds the "
"RTN","IBCNBEE",112,0)
 W !," policy.  The patient must be covered under the plan but may not be the policy"
"RTN","IBCNBEE",113,0)
 W !," holder.",!
"RTN","IBCNBEE",114,0)
 Q
"RTN","IBCNBEE",115,0)
 ;
"RTN","IBCNBEE",116,0)
INSNAME(IBBUFDA) ;  Reset insurance company name
"RTN","IBCNBEE",117,0)
 N DR,DIE,DA,Y,X,IBX,IBNEW,IBNAME
"RTN","IBCNBEE",118,0)
 S IBX=-1
"RTN","IBCNBEE",119,0)
 S DR=20.01,DIE="^IBA(355.33,",DA=IBBUFDA
"RTN","IBCNBEE",120,0)
 D ^DIE
"RTN","IBCNBEE",121,0)
 I '$D(Y) S IBNEW=$$CHECK(IBBUFDA)
"RTN","IBCNBEE",122,0)
 I +$G(IBNEW)'<0,$G(IBNEW)'=0,$D(IBNEW) S DR=$P(DR,";",1)_"////"_IBNEW S DIE="^IBA(355.33,",DA=IBBUFDA D ^DIE K DIE,DA,DR I '$D(Y) S IBX=0
"RTN","IBCNBEE",123,0)
 ; BHS - 10/15/03 - If user entered a caret during $$CHECK still set
"RTN","IBCNBEE",124,0)
 ;                  return value to 0 so the user can edit the other
"RTN","IBCNBEE",125,0)
 ;                  INS fields
"RTN","IBCNBEE",126,0)
 I $G(IBNEW)=0!($G(IBNEW)=-1) S IBX=0
"RTN","IBCNBEE",127,0)
 Q IBX
"RTN","IBCNBEE",128,0)
 ;
"RTN","IBCNBEE",129,0)
CHECK(IBBUFDA) ; Select Insurance Company Name and Automatch
"RTN","IBCNBEE",130,0)
 ; Buffer file (#355.33), field# 20.01.
"RTN","IBCNBEE",131,0)
 ; ESG - 6/18/02 - SDD 5.1.4 - Usage of Auto Match when editing the
"RTN","IBCNBEE",132,0)
 ;       insurance company name.  Also, display the insurance company
"RTN","IBCNBEE",133,0)
 ;       name lookup/lister and the Auto Match lookup/lister.
"RTN","IBCNBEE",134,0)
 ;
"RTN","IBCNBEE",135,0)
 NEW IBNEW,IBNAME,AMLIST
"RTN","IBCNBEE",136,0)
 ;
"RTN","IBCNBEE",137,0)
 S IBNEW=0,IBNAME=$P($G(^IBA(355.33,$G(IBBUFDA),20)),U,1)
"RTN","IBCNBEE",138,0)
 I IBNAME="" G CHECKQ
"RTN","IBCNBEE",139,0)
 ;
"RTN","IBCNBEE",140,0)
 ; Perform an insurance company lookup/lister
"RTN","IBCNBEE",141,0)
 ; BHS - 10/15/03 - Removed quits when user enters a caret to quit the
"RTN","IBCNBEE",142,0)
 ;                  the ins lister or Auto Match lister
"RTN","IBCNBEE",143,0)
 S IBNEW=$$DICINS^IBCNBU1(IBNAME,1,10)
"RTN","IBCNBEE",144,0)
 I IBNEW=0!(IBNEW<0) D
"RTN","IBCNBEE",145,0)
 . I '$$AMLOOK^IBCNEUT1(IBNAME,1,.AMLIST) Q
"RTN","IBCNBEE",146,0)
 . S IBNEW=$$AMSEL^IBCNEUT1(.AMLIST)
"RTN","IBCNBEE",147,0)
 ;
"RTN","IBCNBEE",148,0)
 ; user chose a valid insurance company - possible Auto Match add
"RTN","IBCNBEE",149,0)
 I IBNEW'<0,IBNEW'=0 D AMADD^IBCNEUT6(X,IBCNEXT1)
"RTN","IBCNBEE",150,0)
 ;
"RTN","IBCNBEE",151,0)
CHECKQ Q IBNEW
"RTN","IBCNBEE",152,0)
 ;
"RTN","IBCNBEE",153,0)
MRINS ; Insurance Company fields asked of MCCR users in the Buffer Process options (all buffer ins fields 20.01-21.06)
"RTN","IBCNBEE",154,0)
 ;;20.01;20.05;20.02:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",155,0)
 ;
"RTN","IBCNBEE",156,0)
MRGRP ; Group/Plan fields asked of MCCR users in the Buffer Process options (all buffer grp fields 40.01-40.09) ;;Daou/EEN adding BIN and PCN (40.1,40.11)
"RTN","IBCNBEE",157,0)
 ;;40.01:40.03;40.1;40.11;40.09;40.04:40.08
"RTN","IBCNBEE",158,0)
 ;
"RTN","IBCNBEE",159,0)
MRPOL ; Patient Policy fields asked of MCCR users in the Buffer Process options (all buffer policy fields except ESGHP 60.02-61.01
"RTN","IBCNBEE",160,0)
 ;;60.02;60.03;60.05;60.06//^S X=$S(X="v":"01",X="s":"02",1:"");S IBZZ=X;60.04;I IBZZ'="01" S Y="@111";60.07///1;60.08///@;60.09///@;S Y="@112";@111;60.07:60.09;@112;60.1:60.12;.03;61.01
"RTN","IBCNBEE",161,0)
 ;
"RTN","IBCNBEE",162,0)
OTINS ; Insurance Company fields asked of non-MCCR users entering buffer data from options outside IB (20.01-20.04,21.01-21.06)
"RTN","IBCNBEE",163,0)
 ;;20.01:20.04;21.01;I X="" S Y="@111";21.02;I X="" S Y="@111";21.03;@111;21.04:21.06
"RTN","IBCNBEE",164,0)
 ;
"RTN","IBCNBEE",165,0)
OTGRP ; Group/Plan fields asked of non-MCCR users entering buffer data from options outside IB (40.02,40.03,40.09) ;;Daou/EEN-adding BIN & PCN (40.1,40.11)
"RTN","IBCNBEE",166,0)
 ;;40.02;40.03;40.1;40.11;40.09
"RTN","IBCNBEE",167,0)
 ;
"RTN","IBCNBEE",168,0)
OTPOL ; Patient Policy fields asked of non-MCCR users entering buffer data from options outside IB (60.02-60.09)
"RTN","IBCNBEE",169,0)
 ;;60.02;60.03;60.05;60.06//^S X=$S(X="v":"01",X="s":"02",1:"");S IBZZ=X;60.04;I IBZZ'="01" S Y="@111";60.07///1;60.08///@;60.09///@;S Y="@112";@111;60.07:60.09;@112
"RTN","IBJDF41")
0^1^B65120113^B64450752
"RTN","IBJDF41",1,0)
IBJDF41 ;ALB/RB - FIRST PARTY FOLLOW-UP REPORT (COMPILE) ;15-APR-00
"RTN","IBJDF41",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,204,356**;21-MAR-94
"RTN","IBJDF41",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJDF41",4,0)
 ;
"RTN","IBJDF41",5,0)
ST ; - Tasked entry point.
"RTN","IBJDF41",6,0)
 K IB,IBCAT,^TMP("IBJDF4",$J) S IBQ=0
"RTN","IBJDF41",7,0)
 ;
"RTN","IBJDF41",8,0)
 ; - Set selected categories for report.
"RTN","IBJDF41",9,0)
 I IBSEL[1 S IBCAT(2)=1
"RTN","IBJDF41",10,0)
 I IBSEL[2 S IBCAT(1)=2
"RTN","IBJDF41",11,0)
 I IBSEL[3 S IBCAT(18)=3 F X=22,23 S IBCAT(X)=4
"RTN","IBJDF41",12,0)
 I IBSEL[4 F X=33:1:39 S IBCAT(X)=5
"RTN","IBJDF41",13,0)
 ;
"RTN","IBJDF41",14,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF41",15,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDF41",16,0)
 ;
"RTN","IBJDF41",17,0)
 ; - Find data required for report.
"RTN","IBJDF41",18,0)
 F IB=16,19,40 D  G:IBQ ENQ
"RTN","IBJDF41",19,0)
 . I IBSTA="A",IB'=16 Q  ;      Active AR's only.
"RTN","IBJDF41",20,0)
 . I IBSTA="S",IB=16 Q   ;      Suspended AR's only.
"RTN","IBJDF41",21,0)
 . I IB'=40 D 
"RTN","IBJDF41",22,0)
 . . S IBCAT=""
"RTN","IBJDF41",23,0)
 . . F  S IBCAT=$O(IBCAT(IBCAT)) Q:IBCAT=""  D
"RTN","IBJDF41",24,0)
 . . . D INIT^IBJDF43
"RTN","IBJDF41",25,0)
 . S IBA=0
"RTN","IBJDF41",26,0)
 . F  S IBA=$O(^PRCA(430,"AC",IB,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF41",27,0)
 . . D PROC
"RTN","IBJDF41",28,0)
 ;
"RTN","IBJDF41",29,0)
 I 'IBQ,'$G(IBEXCEL) D EN^IBJDF42 ; Print the report.
"RTN","IBJDF41",30,0)
 ;
"RTN","IBJDF41",31,0)
ENQ K ^TMP("IBJDF4",$J)
"RTN","IBJDF41",32,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF41",33,0)
 ;
"RTN","IBJDF41",34,0)
 D ^%ZISC
"RTN","IBJDF41",35,0)
ENQ1 K IB,IB0,IBA,IBA1,IBADM,IBAGE,IBAR,IBAR1,IBBA,IBBN,IBBU,IBC,IBCAT,IBCAT1
"RTN","IBJDF41",36,0)
 K IBELIG,IBEXCEL,IBFLG,IBAI,IBAIQ,IBIDX,IBIO,IBINT,IBN,IBPA,IBPD,IBPAT
"RTN","IBJDF41",37,0)
 K IBPT,IBQ,IBRFD,IBRFT,IBSRC,IBRP,IBVA,COM,COM1,DAT,DFN,X,X1,X2,Y,Z
"RTN","IBJDF41",38,0)
 Q
"RTN","IBJDF41",39,0)
 ;
"RTN","IBJDF41",40,0)
PROC ; - Process data for report(s).
"RTN","IBJDF41",41,0)
 I IBA#100=0 D  Q:IBQ
"RTN","IBJDF41",42,0)
 .S IBQ=$$STOP^IBOUTL("First Party Follow-Up Report")
"RTN","IBJDF41",43,0)
 S IBAR=$G(^PRCA(430,IBA,0)) I 'IBAR Q
"RTN","IBJDF41",44,0)
 S IBCAT=+$P(IBAR,U,2) I '$D(IBCAT(IBCAT)) Q   ;Get valid AR category.
"RTN","IBJDF41",45,0)
 I '$$CLMACT^IBJD(IBA,IBCAT) Q  ;               Invalid IB claim/action.
"RTN","IBJDF41",46,0)
 S IBPT=$$PAT(IBA) I IBPT="" Q  ;               Get patient info.
"RTN","IBJDF41",47,0)
 S DFN=$P(IBPT,U,2)
"RTN","IBJDF41",48,0)
 S IBAGE=$$FMDIFF^XLFDT(DT,+$P(IBAR,U,10))
"RTN","IBJDF41",49,0)
 I IBSMN,IBAGE<IBSMN!(IBAGE>IBSMX) Q  ;         AR outside age range.
"RTN","IBJDF41",50,0)
 S IBVA=$$VA^IBJD1(DFN),IBBN=$P(IBAR,U),IBPD=$P($$PYMT^IBJD1(IBA),U)
"RTN","IBJDF41",51,0)
 S IBPAT=$P(IBPT,U)_"@@"_DFN
"RTN","IBJDF41",52,0)
 ;
"RTN","IBJDF41",53,0)
 ; - Check the AR balance amounts, if necessary.
"RTN","IBJDF41",54,0)
 S (IBADM,IBBA,IBINT,IBPA)=0,IBN=$G(^PRCA(430,IBA,7))
"RTN","IBJDF41",55,0)
 F X=1:1:5 D
"RTN","IBJDF41",56,0)
 . S IBBA=IBBA+$P(IBN,U,X)
"RTN","IBJDF41",57,0)
 . S:X=1 IBPA=+IBN S:X=2 IBINT=$P(IBN,U,2) S:X=3 IBADM=$P(IBN,U,3)
"RTN","IBJDF41",58,0)
 ;
"RTN","IBJDF41",59,0)
 I '$G(IBEXCEL) D EN^IBJDF43 I IBRPT="S" Q  ;   Get summary stats.
"RTN","IBJDF41",60,0)
 ;
"RTN","IBJDF41",61,0)
 I IBSAM,IBBA<IBSAM Q
"RTN","IBJDF41",62,0)
 ;
"RTN","IBJDF41",63,0)
 ; - Check if AR was referred to R-Regional Counsel, D-DMC, or T-TOP
"RTN","IBJDF41",64,0)
 ;   and exclude, if necessary.
"RTN","IBJDF41",65,0)
 S IB0=$S(IB=40:19,1:IB),IBIDX=0,IBRFT=""
"RTN","IBJDF41",66,0)
 S IBAIQ=0,IBAI=$G(^TMP("IBJDF4",$J,IBPAT,0,"A"))
"RTN","IBJDF41",67,0)
 S IBRFD=$P($G(^PRCA(430,IBA,6)),U,4)
"RTN","IBJDF41",68,0)
 I IBRPT="D",IBRFD D  I IBAIQ Q                   ; Referred to RC
"RTN","IBJDF41",69,0)
 . S IBRFT="R" I IBAI'["R" S IBAI=IBAI_"R"
"RTN","IBJDF41",70,0)
 . I 'IBSRC S IBAIQ=1 Q
"RTN","IBJDF41",71,0)
 . D SREF("R",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",72,0)
 S IBRFD=+$G(^PRCA(430,IBA,12))
"RTN","IBJDF41",73,0)
 I IBRPT="D",IBRFD D                              ; Referred to DMC
"RTN","IBJDF41",74,0)
 . S IBRFT=IBRFT_"D" I IBAI'["D" S IBAI=IBAI_"D"
"RTN","IBJDF41",75,0)
 . D SREF("D",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",76,0)
 S IBRFD=+$G(^PRCA(430,IBA,14))
"RTN","IBJDF41",77,0)
 I IBRPT="D",IBRFD D                              ; Referred to TOP
"RTN","IBJDF41",78,0)
 . S IBRFT=IBRFT_"T" I IBAI'["T" S IBAI=IBAI_"T"
"RTN","IBJDF41",79,0)
 . D SREF("T",IBRFD,IB0,,.IBIDX)
"RTN","IBJDF41",80,0)
 ;
"RTN","IBJDF41",81,0)
 ; - Check if AR is on P-Repayment plan or F-Defaulted repayment plan.
"RTN","IBJDF41",82,0)
 ;   and exclude if repayment plan is active.
"RTN","IBJDF41",83,0)
 S IBRP=$$RP(IBA)
"RTN","IBJDF41",84,0)
 I IBRP D
"RTN","IBJDF41",85,0)
 . I IBRP=2 S IBRFT=IBRFT_"F"  I IBAI'["F" S IBAI=IBAI_"F"
"RTN","IBJDF41",86,0)
 . I IBRP=1 S IBRFT=IBRFT_"P" I IBAI'["P"&(IBAI'["F") S IBAI=IBAI_"P"
"RTN","IBJDF41",87,0)
 . D SREF("P",$P(IBRP,"^",2),IB0,$S(+IBRP=2:1,1:0),.IBIDX)
"RTN","IBJDF41",88,0)
 ;
"RTN","IBJDF41",89,0)
 I IBIDX S IBFLG=1
"RTN","IBJDF41",90,0)
 ;
"RTN","IBJDF41",91,0)
 ; - Check if VA Employee
"RTN","IBJDF41",92,0)
 I $P(IBVA,"^")["*",IBAI'["V" S IBAI=IBAI_"V"
"RTN","IBJDF41",93,0)
 ;
"RTN","IBJDF41",94,0)
 I IBAI'="" S ^TMP("IBJDF4",$J,IBPAT,0,"A")=IBAI
"RTN","IBJDF41",95,0)
 ;
"RTN","IBJDF41",96,0)
 ; - Set up indexes for detail report.
"RTN","IBJDF41",97,0)
 I $G(IBEXCEL) D  Q
"RTN","IBJDF41",98,0)
 . S IBEXCEL1=$P($G(^PRCA(430.2,IBCAT,0)),U,2)_U_$P(IBPT,U,3)_U_$P(IBVA,U)_U_$P(IBPT,U,4)_U_$$DT^IBJD($P(IBPT,U,6),1)_U_$$ELIG^IBJDF42(+$P(IBPT,U,5))_U
"RTN","IBJDF41",99,0)
 . S IBEXCEL1=IBEXCEL1_$$GET1^DIQ(2,DFN,.381)_U_$$MTRX(DFN)_U_IBBN_U_$S(IB=16:"A",1:"S")_U_IBRFT_U_$$DT^IBJD($P(IBAR,U,10),1)_U_$$DT^IBJD(IBPD,1)_U_IBBA_U_IBPA_U_IBINT_U_IBADM_U
"RTN","IBJDF41",100,0)
 . I IBSH D COM
"RTN","IBJDF41",101,0)
 . S IBD=0 I DAT!IBPD S IBD=$$FMDIFF^XLFDT(DT,$S('DAT:IBPD,1:$G(DAT)))
"RTN","IBJDF41",102,0)
 . S IBEXCEL1=IBEXCEL1_U_IBD W !,IBEXCEL1 K IBD,IBEXCEL1
"RTN","IBJDF41",103,0)
 ;
"RTN","IBJDF41",104,0)
 I '($D(^TMP("IBJDF4",$J,IBPAT))#10) D
"RTN","IBJDF41",105,0)
 . S ^TMP("IBJDF4",$J,IBPAT)=$P(IBPT,U,3,5)_U_$$MTRX(DFN)_U_$P(IBPT,U,6)_"^"_$P(IBVA,"^",2)_"^"_$$ACCBAL($P(IBPT,U,7))
"RTN","IBJDF41",106,0)
 S ^TMP("IBJDF4",$J,IBPAT,IB0,IBCAT,IBBN)=IBPD_U_IBBA_U_IBPA_U_IBINT_U_IBADM_U_IBIDX
"RTN","IBJDF41",107,0)
 ;
"RTN","IBJDF41",108,0)
 I IBSH D COM
"RTN","IBJDF41",109,0)
 ;
"RTN","IBJDF41",110,0)
 Q
"RTN","IBJDF41",111,0)
 ;
"RTN","IBJDF41",112,0)
ACCBAL(DFN) ; Calculates the Account Balance for the Bill
"RTN","IBJDF41",113,0)
 ; Input: DFN - Patient/Debtor internal number
"RTN","IBJDF41",114,0)
 ; Output: BAL - Patient/Debtor Account Balance
"RTN","IBJDF41",115,0)
 ;
"RTN","IBJDF41",116,0)
 N B0,B7,BAL,BILL,I
"RTN","IBJDF41",117,0)
 S (BAL,BILL)=0
"RTN","IBJDF41",118,0)
 F  S BILL=$O(^PRCA(430,"C",DFN,BILL)) Q:BILL=""  D
"RTN","IBJDF41",119,0)
 . S B0=$G(^PRCA(430,BILL,0)) I $P(B0,"^",8)'=16 Q
"RTN","IBJDF41",120,0)
 . S B7=$G(^PRCA(430,BILL,7))
"RTN","IBJDF41",121,0)
 . F I=1:1:5 S BAL=BAL+$P(B7,"^",I)
"RTN","IBJDF41",122,0)
 Q BAL
"RTN","IBJDF41",123,0)
 ;
"RTN","IBJDF41",124,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF41",125,0)
 N X
"RTN","IBJDF41",126,0)
 S X="Cat^Patient^VA Empl.?^SSN^Dt Death^Prim.Elig.^Med.Elig.?^"
"RTN","IBJDF41",127,0)
 S X=X_"Means Tst Sts^Means Tst Dt^RX Copay Exemp.Sts^RX Copay Exemp.Dt^"
"RTN","IBJDF41",128,0)
 S X=X_"Bill #^Act/Susp^Refer. to^Dt Bill prep.^Last Pymt Dt^"
"RTN","IBJDF41",129,0)
 S X=X_"Curr.Bal.^Princ.Bal.^Int.^Admin.^Last Comm.Dt^Days Lst Comm."
"RTN","IBJDF41",130,0)
 W !,X
"RTN","IBJDF41",131,0)
 Q
"RTN","IBJDF41",132,0)
 ;
"RTN","IBJDF41",133,0)
PAT(X) ; - Find the AR patient and decide to include the AR.
"RTN","IBJDF41",134,0)
 ;    Input: X=AR pointer to file #430 and pre-set variables IBS*
"RTN","IBJDF41",135,0)
 ;   Output: Y=Sort key (name or last 4) ^ Patient pointer to file #2 
"RTN","IBJDF41",136,0)
 ;             ^ Name ^ SSN ^ Eligibilities ^ Date of death (if any)
"RTN","IBJDF41",137,0)
 ;             ^ Debtor pointer to file #340
"RTN","IBJDF41",138,0)
 N PAT,KEY,DBTR,DFN,DEATH,NAME,SSN,VAEL,VADM,X1,X2
"RTN","IBJDF41",139,0)
 S PAT="" G:'$G(X) PATQ
"RTN","IBJDF41",140,0)
 S DBTR=+$P($G(^PRCA(430,X,0)),U,9)
"RTN","IBJDF41",141,0)
 S X1=$P($G(^RCD(340,DBTR,0)),U) G:X1'["DPT" PATQ
"RTN","IBJDF41",142,0)
 S DFN=+X1 G:'DFN PATQ D DEM^VADPT
"RTN","IBJDF41",143,0)
 S NAME=VADM(1),SSN=$P(VADM(2),"^"),DEATH=VADM(6)\1
"RTN","IBJDF41",144,0)
 S KEY=$S(IBSN="N":NAME,1:$E(SSN,6,9))
"RTN","IBJDF41",145,0)
 I KEY=""!(IBSNF'="@"&('DFN)) G PATQ
"RTN","IBJDF41",146,0)
 I $D(IBSNA) G:IBSNA="ALL"&('DFN) PATQ G:IBSNA="NULL"&(DFN) PATQ
"RTN","IBJDF41",147,0)
 I $G(IBSNA)="ALL" G PATC
"RTN","IBJDF41",148,0)
 I IBSNF="@",IBSNL="zzzzz" G PATC
"RTN","IBJDF41",149,0)
 I IBSNF'=KEY,IBSNF]KEY G PATQ
"RTN","IBJDF41",150,0)
 I IBSNL'=KEY,KEY]IBSNL G PATQ
"RTN","IBJDF41",151,0)
 ;
"RTN","IBJDF41",152,0)
PATC ; - Set patient eligibilities.
"RTN","IBJDF41",153,0)
 D ELIG^VADPT S X2=+$G(VAEL(1))_";"
"RTN","IBJDF41",154,0)
 I +X2 S X1=0 F  S X1=$O(VAEL(1,X1)) Q:'X1  S X2=X2_X1_";"
"RTN","IBJDF41",155,0)
 ;
"RTN","IBJDF41",156,0)
 S PAT=KEY_U_DFN_U_$E(NAME,1,26)_U_SSN_U_X2_U_DEATH
"RTN","IBJDF41",157,0)
 S PAT=PAT_U_DBTR
"RTN","IBJDF41",158,0)
PATQ Q PAT
"RTN","IBJDF41",159,0)
 ;
"RTN","IBJDF41",160,0)
RP(X) ; - Check if claim/receivable is under a repayment plan.
"RTN","IBJDF41",161,0)
 ;    Input: X=Bill pointer to file #399/#430
"RTN","IBJDF41",162,0)
 ;   Output: 0-Not on repay plan, 1-On repay plan, 2-On defaulted plan
"RTN","IBJDF41",163,0)
 N Z
"RTN","IBJDF41",164,0)
 S Z=$$REPDATA^RCBECHGA(X,1) I Z="" Q 0
"RTN","IBJDF41",165,0)
 I '$P(Z,"^",7) Q ("1^"_$P(Z,"^"))
"RTN","IBJDF41",166,0)
 Q ("2^"_$P(Z,"^"))
"RTN","IBJDF41",167,0)
 ;
"RTN","IBJDF41",168,0)
MTRX(X) ; - Return patient's means test and/or RX copay status and most recent
"RTN","IBJDF41",169,0)
 ;   test dates for both.
"RTN","IBJDF41",170,0)
 ;    Input: X=Patient pointer to file #2 and opt. variable IBEXCEL
"RTN","IBJDF41",171,0)
 ;   Output: Y=Means test status ^ Date ^ RX copay status ^ Date 
"RTN","IBJDF41",172,0)
 N MTST,RXST,Y
"RTN","IBJDF41",173,0)
 S Y="^^^",MTST=$$LST^DGMTU(X),RXST=$$RXST^IBARXEU(X)
"RTN","IBJDF41",174,0)
 I '$G(IBEXCEL) D
"RTN","IBJDF41",175,0)
 . S $P(Y,"^",1,2)=$P(MTST,"^",3)_"^"_$$DAT1^IBOUTL($P(MTST,"^",2))
"RTN","IBJDF41",176,0)
 . S $P(Y,"^",3)=$S('RXST:"NON-EXEMPT",+RXST=1:"EXEMPT",1:"")
"RTN","IBJDF41",177,0)
 . I $P(Y,"^",3)'="" S $P(Y,"^",4)=$$DAT1^IBOUTL($P(RXST,"^",5))
"RTN","IBJDF41",178,0)
 I $G(IBEXCEL) D
"RTN","IBJDF41",179,0)
 . S $P(Y,"^",1,2)=$P(MTST,"^",4)_"^"_$$DT^IBJD($P(MTST,"^",2),1)
"RTN","IBJDF41",180,0)
 . S $P(Y,"^",3)=$S('RXST:"M",+RXST=1:"E",1:"")
"RTN","IBJDF41",181,0)
 . I $P(Y,"^",3)'="" S $P(Y,"^",4)=$$DT^IBJD($P(RXST,"^",5),1)
"RTN","IBJDF41",182,0)
 Q Y
"RTN","IBJDF41",183,0)
 ;
"RTN","IBJDF41",184,0)
SREF(RFT,DAT,STS,DEF,IDX) ; Set the "referred to" information on the 
"RTN","IBJDF41",185,0)
 ;                         temporary global ^TMP
"RTN","IBJDF41",186,0)
 ;Input: RFT: "R": RC, "D": DMC, "T": TOP, "P": REPAYMENT PLAN
"RTN","IBJDF41",187,0)
 ;       DAT: Date it was referred/established
"RTN","IBJDF41",188,0)
 ;       STS: Receivable status (16-Active,19-Suspended)
"RTN","IBJDF41",189,0)
 ;       DEF: Repayment Plan in Default? (1 - YES, 0 - NO)
"RTN","IBJDF41",190,0)
 ;       IDX: Subscript to be set in the Temporary global ^TMP
"RTN","IBJDF41",191,0)
 ;Output: IDX: Subscript set in the Temporary global ^TMP
"RTN","IBJDF41",192,0)
 ;
"RTN","IBJDF41",193,0)
 N SREF,IDX1
"RTN","IBJDF41",194,0)
 S DEF=+$G(DEF),IDX=+$G(IDX)
"RTN","IBJDF41",195,0)
 I RFT="R" S SREF="REFERRED TO RC"
"RTN","IBJDF41",196,0)
 I RFT="D" S SREF="REFERRED TO DMC"
"RTN","IBJDF41",197,0)
 I RFT="T" S SREF="REFERRED TO TOP"
"RTN","IBJDF41",198,0)
 I RFT="P" D
"RTN","IBJDF41",199,0)
 . S SREF="REPAYMENT PLAN ESTABLISHED"
"RTN","IBJDF41",200,0)
 . I $G(DEF) S SREF=SREF_" (CURRENTLY IN DEFAULT)"
"RTN","IBJDF41",201,0)
 ;
"RTN","IBJDF41",202,0)
 I 'IDX S IDX=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",STS,""),-1)+1
"RTN","IBJDF41",203,0)
 S IDX1=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,""),-1)+1
"RTN","IBJDF41",204,0)
 S ^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,IDX1)=DAT
"RTN","IBJDF41",205,0)
 S ^TMP("IBJDF4",$J,IBPAT,0,"C",STS,IDX,IDX1,1)=SREF
"RTN","IBJDF41",206,0)
 Q
"RTN","IBJDF41",207,0)
 ;
"RTN","IBJDF41",208,0)
COM ; - Get bill comments.
"RTN","IBJDF41",209,0)
 I 'IBIDX,'$G(IBEXCEL) D
"RTN","IBJDF41",210,0)
 . S IBFLG=0,IBIDX=$O(^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,""),-1)+1
"RTN","IBJDF41",211,0)
 ;
"RTN","IBJDF41",212,0)
 S DAT=0,IBA1=$S(IBSH1="M":999999999,1:0)
"RTN","IBJDF41",213,0)
 F  S IBA1=$S(IBSH1="M":$O(^PRCA(433,"C",IBA,IBA1),-1),1:$O(^PRCA(433,"C",IBA,IBA1))) Q:'IBA1  D  I IBSH1="M",DAT Q
"RTN","IBJDF41",214,0)
 . S IBC=$G(^PRCA(433,IBA1,1)) Q:'IBC
"RTN","IBJDF41",215,0)
 . I $G(IBSH2),$$FMDIFF^XLFDT(DT,+IBC)>IBSH2 Q  ; Comment age not minimum.
"RTN","IBJDF41",216,0)
 . I $P(IBC,U,2)'=35,$P(IBC,U,2)'=45 Q  ;   Not decrease/comment transact.
"RTN","IBJDF41",217,0)
 . S DAT=$S(IBC:+IBC\1,1:+$P(IBC,U,9)\1)
"RTN","IBJDF41",218,0)
 . I $G(IBEXCEL),IBSH1="M" S IBEXCEL1=IBEXCEL1_$$DT^IBJD(DAT,1) Q
"RTN","IBJDF41",219,0)
 . ;
"RTN","IBJDF41",220,0)
 . ; - Append brief and transaction comments.
"RTN","IBJDF41",221,0)
 . K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF41",222,0)
 . S COM1(1)=$P($G(^PRCA(433,IBA1,5)),U,2)
"RTN","IBJDF41",223,0)
 . S COM1(2)=$E($P($G(^PRCA(433,IBA1,8)),U,6),1,70)
"RTN","IBJDF41",224,0)
 . S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF41",225,0)
 . I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF41",226,0)
 . ;
"RTN","IBJDF41",227,0)
 . ; - Get main comments.
"RTN","IBJDF41",228,0)
 . S X2=0
"RTN","IBJDF41",229,0)
 . F  S X2=$O(^PRCA(433,IBA1,7,X2)) Q:'X2  D
"RTN","IBJDF41",230,0)
 . . S COM($S(X1:X2+1,1:X2))=^PRCA(433,IBA1,7,X2,0)
"RTN","IBJDF41",231,0)
 . ;
"RTN","IBJDF41",232,0)
 . I $G(IBEXCEL) Q
"RTN","IBJDF41",233,0)
 . ;
"RTN","IBJDF41",234,0)
 . S IBFLG=1,^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,IBIDX,IBA1)=$G(COM(0)),X1=0
"RTN","IBJDF41",235,0)
 . F  S X1=$O(COM(X1)) Q:X1=""  D
"RTN","IBJDF41",236,0)
 . . S ^TMP("IBJDF4",$J,IBPAT,0,"C",IB0,IBIDX,IBA1,X1)=COM(X1)
"RTN","IBJDF41",237,0)
 ;
"RTN","IBJDF41",238,0)
 I '$G(IBEXCEL),IBFLG D
"RTN","IBJDF41",239,0)
 . S $P(^TMP("IBJDF4",$J,IBPAT,IB0,IBCAT,IBBN),"^",6)=IBIDX
"RTN","IBJDF41",240,0)
 Q
"RTN","IBJDF51")
0^2^B57917669^B57252873
"RTN","IBJDF51",1,0)
IBJDF51 ;ALB/RB - CHAMPVA/TRICARE FOLLOW-UP REPORT (COMPILE);15-APR-00
"RTN","IBJDF51",2,0)
 ;;2.0;INTEGRATED BILLING;**123,185,240,356**;21-MAR-94
"RTN","IBJDF51",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJDF51",4,0)
 ;
"RTN","IBJDF51",5,0)
ST ; - Tasked entry point.
"RTN","IBJDF51",6,0)
 K IB,^TMP("IBJDF5",$J) S IBQ=0
"RTN","IBJDF51",7,0)
 ;
"RTN","IBJDF51",8,0)
 ; - Set selected categories for report.
"RTN","IBJDF51",9,0)
 I IBSEL[1 S IBCAT(31)=1
"RTN","IBJDF51",10,0)
 I IBSEL[2 S IBCAT(19)=2
"RTN","IBJDF51",11,0)
 I IBSEL[3 S IBCAT(30)=3
"RTN","IBJDF51",12,0)
 I IBSEL[4 S IBCAT(32)=4
"RTN","IBJDF51",13,0)
 I IBSEL[5 S IBCAT(29)=5
"RTN","IBJDF51",14,0)
 I IBSEL[6 S IBCAT(28)=6
"RTN","IBJDF51",15,0)
 ;
"RTN","IBJDF51",16,0)
 ; Initialize the Summary Information
"RTN","IBJDF51",17,0)
 S IBCAT="" F  S IBCAT=$O(IBCAT(IBCAT)) Q:IBCAT=""  D
"RTN","IBJDF51",18,0)
 . S IBDIV=0
"RTN","IBJDF51",19,0)
 . I IBSD,IBCAT'=31 D  Q
"RTN","IBJDF51",20,0)
 . . F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D INIT^IBJDF53
"RTN","IBJDF51",21,0)
 . D INIT^IBJDF53
"RTN","IBJDF51",22,0)
 ;
"RTN","IBJDF51",23,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF51",24,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDF51",25,0)
 ;
"RTN","IBJDF51",26,0)
 ; - Find data required for the report.
"RTN","IBJDF51",27,0)
 S IBA=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF51",28,0)
 . I IBA#100=0 D  Q:IBQ
"RTN","IBJDF51",29,0)
 . . S IBQ=$$STOP^IBOUTL("CHAMPVA/Tricare Follow-Up Report")
"RTN","IBJDF51",30,0)
 . S IBAR=$G(^PRCA(430,IBA,0)) Q:'IBAR
"RTN","IBJDF51",31,0)
 . I $P($G(^DGCR(399,IBA,0)),U,13)=7 Q  ;           Cancelled claim.
"RTN","IBJDF51",32,0)
 . S IBCAT=+$P(IBAR,U,2) Q:'$D(IBCAT(IBCAT))  ;     Invalid AR category.
"RTN","IBJDF51",33,0)
 . S IBCAT1=IBCAT(IBCAT)
"RTN","IBJDF51",34,0)
 . ;
"RTN","IBJDF51",35,0)
 . ; - Get division, if necessary.
"RTN","IBJDF51",36,0)
 . I IBCAT1=1 S IBDIV=0                       ; CHAMPVA/Tricare Patient
"RTN","IBJDF51",37,0)
 . ;
"RTN","IBJDF51",38,0)
 . I IBCAT1'=1 D                              ; Others
"RTN","IBJDF51",39,0)
 . . I 'IBSD S IBDIV=0 Q
"RTN","IBJDF51",40,0)
 . . S IBDIV=$$DIV(IBA)
"RTN","IBJDF51",41,0)
 . ;
"RTN","IBJDF51",42,0)
 . I IBSD,IBDIV,'VAUTD Q:'$D(VAUTD(IBDIV))  ; Not a selected division.
"RTN","IBJDF51",43,0)
 . ;
"RTN","IBJDF51",44,0)
 . ; - Determine whether AR has corresponding IB action or claim and
"RTN","IBJDF51",45,0)
 . ;   whether action/claim is inpatient, outpatient, or RX refill.
"RTN","IBJDF51",46,0)
 . S IBAC=$$CLMACT^IBJD(IBA,IBCAT) Q:IBAC=""!(+IBAC=3)
"RTN","IBJDF51",47,0)
 . I +IBAC=1 D
"RTN","IBJDF51",48,0)
 . . S X=$P($G(^IB($P(IBAC,U,2),0)),U,3)
"RTN","IBJDF51",49,0)
 . . S X=$P($G(^IBE(350.1,X,0)),U)
"RTN","IBJDF51",50,0)
 . . S IBTYP=$S(X["RX":3,X["OPT":2,1:1)
"RTN","IBJDF51",51,0)
 . I +IBAC'=1 D 
"RTN","IBJDF51",52,0)
 . . S IBTYP=$S($P($G(^DGCR(399,IBA,0)),U,5)>2:2,1:1)
"RTN","IBJDF51",53,0)
 . . I $D(^IBA(362.4,"C",IBA)) S IBTYP=3
"RTN","IBJDF51",54,0)
 . ;
"RTN","IBJDF51",55,0)
 . I IBSEL1'[IBTYP,IBSEL1'[4 Q
"RTN","IBJDF51",56,0)
 . ;
"RTN","IBJDF51",57,0)
 . I IBRPT="D" S IBPT=$$PAT(IBA) Q:IBPT=""  ; Get patient info.
"RTN","IBJDF51",58,0)
 . ;
"RTN","IBJDF51",59,0)
 . I '$G(IBEXCEL) D EN^IBJDF53 Q:IBRPT="S"  ; Get stats for summary.
"RTN","IBJDF51",60,0)
 . ;
"RTN","IBJDF51",61,0)
 . ; - Get insurance info.
"RTN","IBJDF51",62,0)
 . S (IBI,IBIN)=0
"RTN","IBJDF51",63,0)
 . I $G(^DGCR(399,IBA,"MP")) D  I 'IBI Q
"RTN","IBJDF51",64,0)
 . . S IBI=+$G(^DGCR(399,IBA,"MP")) I 'IBI S IBIN="*** UNKNOWN ***" Q
"RTN","IBJDF51",65,0)
 . . S IBIN=$P($G(^DIC(36,IBI,0)),U)_"@@"_IBI
"RTN","IBJDF51",66,0)
 . ;
"RTN","IBJDF51",67,0)
 . ; - Check the receivable age, if necessary.
"RTN","IBJDF51",68,0)
 . I IBSMN D  Q:IBARD<IBSMN!(IBARD>IBSMX)
"RTN","IBJDF51",69,0)
 . . S IBARD=+$$ACT^IBJDF2(IBA) S:IBARD IBARD=$$FMDIFF^XLFDT(DT,IBARD)
"RTN","IBJDF51",70,0)
 . ;
"RTN","IBJDF51",71,0)
 . ; - Check the minimum balance amount, if necessary.
"RTN","IBJDF51",72,0)
 . S IBBA=0 F X=1:1:5 S IBBA=IBBA+$P($G(^PRCA(430,IBA,7)),U,X)
"RTN","IBJDF51",73,0)
 . I IBSAM,IBBA<IBSAM Q
"RTN","IBJDF51",74,0)
 . ;
"RTN","IBJDF51",75,0)
 . ; - Get remaining AR/claim information.
"RTN","IBJDF51",76,0)
 . S IBDP=$P(IBAR,U,10),X=$$CLMACT^IBJD(IBA,IBCAT) Q:X=""
"RTN","IBJDF51",77,0)
 . S IBBU=$S(+IBAC=1:$G(^IB($P(IBAC,U,2),0)),1:$G(^DGCR(399,IBA,"U")))
"RTN","IBJDF51",78,0)
 . S IBFR=$P(IBBU,U,$S(+IBAC=1:14,1:1))
"RTN","IBJDF51",79,0)
 . S IBTO=$P(IBBU,U,$S(+IBAC=1:15,1:2))
"RTN","IBJDF51",80,0)
 . S DFN=$P(IBPT,U,5),IBSID=$$SID(DFN,IBI)
"RTN","IBJDF51",81,0)
 . S IBOI=$$OTH(DFN,IBI,IBFR),IBVA=$$VA^IBJD1(DFN)
"RTN","IBJDF51",82,0)
 . S IBBN=$P(IBAR,U),IBOR=$P(IBAR,U,3)
"RTN","IBJDF51",83,0)
 . ;
"RTN","IBJDF51",84,0)
 . ; - Set up indexes for detail report.
"RTN","IBJDF51",85,0)
 . I $G(IBEXCEL) D  Q
"RTN","IBJDF51",86,0)
 . . S IBDIV=$P($G(^DG(40.8,$S('IBDIV:+$$PRIM^VASITE(),1:IBDIV),0)),U)
"RTN","IBJDF51",87,0)
 . . ;
"RTN","IBJDF51",88,0)
 . . S IBEXCEL1=$P(IBPT,U,2)_U_IBVA_U_$P(IBPT,U,3)_U_$TR($P(IBPT,U,4),"-")
"RTN","IBJDF51",89,0)
 . . S IBEXCEL1=IBEXCEL1_U_$S(IBIN=0:"",1:$E($P(IBIN,"@@"),1,12))_U_$E(IBOI,1,12)
"RTN","IBJDF51",90,0)
 . . S IBEXCEL1=IBEXCEL1_U_$$DT^IBJD(IBDP,1)_U_$$DT^IBJD(IBFR,1)
"RTN","IBJDF51",91,0)
 . . S IBEXCEL1=IBEXCEL1_U_$$DT^IBJD(IBTO,1)_U_IBSID_U_IBBN_U_IBOR
"RTN","IBJDF51",92,0)
 . . S IBEXCEL1=IBEXCEL1_U_IBBA_U_$P($G(^PRCA(430.2,IBCAT,0)),U,2)
"RTN","IBJDF51",93,0)
 . . S IBEXCEL1=IBEXCEL1_U_$E("IOR",IBTYP)_U
"RTN","IBJDF51",94,0)
 . . I IBSH D COM  ; This will capture the Last Comment Date
"RTN","IBJDF51",95,0)
 . . S IBD=$$FMDIFF^XLFDT(DT,$S('$P(IBEXCEL1,U,16):IBDP,1:$G(DAT)))
"RTN","IBJDF51",96,0)
 . . S IBEXCEL1=IBEXCEL1_U_IBD_U_$E(IBDIV,1,12) W !,IBEXCEL1 K IBD,IBEXCEL1
"RTN","IBJDF51",97,0)
 . ;
"RTN","IBJDF51",98,0)
 . S IBKEY=$P(IBPT,U)_"@@"_$S($G(IBPT):IBDP,1:IBFR_"/"_IBTO)
"RTN","IBJDF51",99,0)
 . F X=IBTYP,4 I IBSEL1[X D
"RTN","IBJDF51",100,0)
 . . I '($D(^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY))#10) D
"RTN","IBJDF51",101,0)
 . . . S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY)=$P(IBPT,U,2)_" "_IBVA_U_$P(IBPT,U,3,4)_U_IBOI
"RTN","IBJDF51",102,0)
 . . S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY,IBBN)=IBDP_U_IBFR_U_IBTO_U_IBOR_U_IBBA_U_IBSID
"RTN","IBJDF51",103,0)
 . . I IBSH D COM
"RTN","IBJDF51",104,0)
 ;
"RTN","IBJDF51",105,0)
 I 'IBQ,'$G(IBEXCEL) D EN^IBJDF52 ; Print the report.
"RTN","IBJDF51",106,0)
 ;
"RTN","IBJDF51",107,0)
ENQ K ^TMP("IBJDF5",$J)
"RTN","IBJDF51",108,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF51",109,0)
 ;
"RTN","IBJDF51",110,0)
 D ^%ZISC
"RTN","IBJDF51",111,0)
ENQ1 K IB,IBA,IBA1,IBAR,IBARD,IBBU,IBC,IBCAT,IBCAT1,IBDIV,IBD,IBI,IBQ,IBPT
"RTN","IBJDF51",112,0)
 K IBDP,IBKEY,IBVA,IBAC,IBBA,IBBN,IBFR,IBIN,IBOI,IBOR,IBSID,IBTO,IBTYP
"RTN","IBJDF51",113,0)
 K COM,COM1,DAT,DFN,J,X,X1,X2,Y,Z D KVA^VADPT
"RTN","IBJDF51",114,0)
 Q
"RTN","IBJDF51",115,0)
 ;
"RTN","IBJDF51",116,0)
PAT(IBDA) ; - Find the claim patient and decide to include the claim.
"RTN","IBJDF51",117,0)
 ;    Input: IBDA=Pointer to the claim/AR in file #399/#430 plus all
"RTN","IBJDF51",118,0)
 ;             variable input in IBS*
"RTN","IBJDF51",119,0)
 ;   Output: Y=Sort key (name or last 4)_@@_patient IEN to file #2 
"RTN","IBJDF51",120,0)
 ;             ^ Patient name ^ Age ^ SSN ^ Patient IEN to file #2
"RTN","IBJDF51",121,0)
 N AGE,ALL,ARZ,DA,DBTR,DFN,DIC,DIQ,DOB,DR,END,IBZ,INI,KEY,NAME,RCZ,SSN
"RTN","IBJDF51",122,0)
 N VADM,Y,Z
"RTN","IBJDF51",123,0)
 ;
"RTN","IBJDF51",124,0)
 S Y="" G:'$G(IBDA) PATQ
"RTN","IBJDF51",125,0)
 S DFN=0,(NAME,AGE,SSN)="",ARZ=$G(^PRCA(430,IBDA,0))
"RTN","IBJDF51",126,0)
 ;
"RTN","IBJDF51",127,0)
 ; - Look for Patient (Corresponding Claim in IB)
"RTN","IBJDF51",128,0)
 I $D(^DGCR(399,IBDA,0)) D  I 'DFN S Y="" G PATQ
"RTN","IBJDF51",129,0)
 . S IBZ=^DGCR(399,IBDA,0),DFN=+$P(IBZ,"^",2)
"RTN","IBJDF51",130,0)
 . D DEM^VADPT S NAME=VADM(1),SSN=$P(VADM(2),"^",2),AGE=VADM(4)
"RTN","IBJDF51",131,0)
 ;
"RTN","IBJDF51",132,0)
 ; - Look for Debtor (No corresponding Claim in IB)
"RTN","IBJDF51",133,0)
 I '$D(^DGCR(399,IBDA,0)) D  I 'DFN S Y="" G PATQ
"RTN","IBJDF51",134,0)
 . S DBTR=+$P(ARZ,"^",9) I 'DBTR Q
"RTN","IBJDF51",135,0)
 . S RCZ=$G(^RCD(340,DBTR,0)),DFN=+RCZ
"RTN","IBJDF51",136,0)
 . I $P(RCZ,"^")["DPT" D
"RTN","IBJDF51",137,0)
 . . D DEM^VADPT S NAME=VADM(1),SSN=$P(VADM(2),"^",2),AGE=VADM(4)
"RTN","IBJDF51",138,0)
 . I $P(RCZ,"^")'["DPT" D
"RTN","IBJDF51",139,0)
 . . S DIC="^PRCA(430,",DA=IBDA,DR=9,DIQ="DEB" D EN^DIQ1
"RTN","IBJDF51",140,0)
 . . S NAME=$G(DEB(430,DA,9)),KEY=NAME
"RTN","IBJDF51",141,0)
 . . S DIC="^RCD(340,",DA=DBTR,DR=110,DIQ="DEB" D EN^DIQ1
"RTN","IBJDF51",142,0)
 . . S SSN=$G(DEB(340,DA,110))
"RTN","IBJDF51",143,0)
 . . I SSN S SSN=$E(SSN,1,3)_"-"_$E(SSN,4,5)_"-"_$E(SSN,6,9)
"RTN","IBJDF51",144,0)
 ;
"RTN","IBJDF51",145,0)
 S KEY=$S(IBSN="N":NAME,1:+$P(SSN,"-",3))
"RTN","IBJDF51",146,0)
 S INI=IBSNF,END=IBSNL,ALL=IBSNA
"RTN","IBJDF51",147,0)
 I (INI'="@"&('DFN)) S Y="" G PATQ
"RTN","IBJDF51",148,0)
 I ALL="ALL"&('DFN)!(ALL="NULL"&(DFN)) S Y="" G PATQ
"RTN","IBJDF51",149,0)
 I INI="@",END="zzzzz" G PATC
"RTN","IBJDF51",150,0)
 I INI]KEY!(KEY]END) S Y="" G PATQ
"RTN","IBJDF51",151,0)
 ;
"RTN","IBJDF51",152,0)
PATC ; - Find all patient data.
"RTN","IBJDF51",153,0)
 S Y=KEY_"@@"_DFN_U_$E(NAME,1,25)_U_AGE_U_SSN_"^"_DFN
"RTN","IBJDF51",154,0)
PATQ Q Y
"RTN","IBJDF51",155,0)
 ;
"RTN","IBJDF51",156,0)
DIV(CLM) ;Find the default division of the bill. 
"RTN","IBJDF51",157,0)
 S DIV=$P($G(^DGCR(399,CLM,0)),"^",22)
"RTN","IBJDF51",158,0)
QDIV S:'DIV DIV=$$PRIM^VASITE() S:DIV'>0 DIV=0
"RTN","IBJDF51",159,0)
 Q DIV
"RTN","IBJDF51",160,0)
SID(DFN,INS) ; - Find the subscriber ID for a bill (if any).
"RTN","IBJDF51",161,0)
 ;   Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF51",162,0)
 ;          INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF51",163,0)
 ;  Output: Subscriber ID no. or null
"RTN","IBJDF51",164,0)
 N X,Y,Z S Y="" G:'$G(DFN)!('$G(INS)) SIDQ
"RTN","IBJDF51",165,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D  Q:Y]""
"RTN","IBJDF51",166,0)
 .I +X=INS S Y=$E($P(X,U,2),1,16)
"RTN","IBJDF51",167,0)
 ;
"RTN","IBJDF51",168,0)
SIDQ Q Y
"RTN","IBJDF51",169,0)
 ;
"RTN","IBJDF51",170,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF51",171,0)
 N X
"RTN","IBJDF51",172,0)
 S X="Patient^VA Empl.?^Age^SSN^Prim.Ins.Carrier^Other Ins.Carrier^"
"RTN","IBJDF51",173,0)
 S X=X_"Dt Bill prep.^Bill From Dt^Bill To Dt^Subsc.ID^Bill #^"
"RTN","IBJDF51",174,0)
 S X=X_"Orig.Amt^Curr.Bal.^Cat.^Bill Type^Lst Comm.Dt^Days Lst Comm.^"
"RTN","IBJDF51",175,0)
 S X=X_"Division"
"RTN","IBJDF51",176,0)
 W !,X
"RTN","IBJDF51",177,0)
 Q
"RTN","IBJDF51",178,0)
 ;
"RTN","IBJDF51",179,0)
OTH(DFN,INS,DS) ; - Find a patient's other valid insurance carrier (if any).
"RTN","IBJDF51",180,0)
 ;   Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF51",181,0)
 ;          INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF51",182,0)
 ;           DS=Date of service for validity check
"RTN","IBJDF51",183,0)
 ;  Output: Valid insurance carrier (first 15 chars.) or null
"RTN","IBJDF51",184,0)
 N X,X1,Y,Z S Y="" G:'$G(DFN)!('$G(INS))!('$G(DS)) OTHQ
"RTN","IBJDF51",185,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D:X  Q:Y]""
"RTN","IBJDF51",186,0)
 .I +X=INS Q
"RTN","IBJDF51",187,0)
 .S X1=$G(^DIC(36,+X,0)) Q:X1=""
"RTN","IBJDF51",188,0)
 .I $P(X1,U,2)'="N",$$CHK^IBCNS1(X,DS) S Y=$E($P(X1,U),1,15)
"RTN","IBJDF51",189,0)
 ;
"RTN","IBJDF51",190,0)
OTHQ Q Y
"RTN","IBJDF51",191,0)
 ;
"RTN","IBJDF51",192,0)
COM ; - Get bill comments.
"RTN","IBJDF51",193,0)
 S DAT=0,IBA1=$S(IBSH1="M":999999999,1:0)
"RTN","IBJDF51",194,0)
 F  S IBA1=$S(IBSH1="M":$O(^PRCA(433,"C",IBA,IBA1),-1),1:$O(^PRCA(433,"C",IBA,IBA1))) Q:'IBA1  D  I IBSH1="M",DAT Q
"RTN","IBJDF51",195,0)
 .S IBC=$G(^PRCA(433,IBA1,1)) Q:'IBC
"RTN","IBJDF51",196,0)
 .I $G(IBSH2),$$FMDIFF^XLFDT(DT,+IBC)<IBSH2 Q  ; Comment age not minimum.
"RTN","IBJDF51",197,0)
 .I $P(IBC,U,2)'=35,$P(IBC,U,2)'=45 Q  ;   Not decrease/comment transact.
"RTN","IBJDF51",198,0)
 .S DAT=$S(IBC:+IBC\1,1:+$P(IBC,U,9)\1)
"RTN","IBJDF51",199,0)
 .I $G(IBEXCEL),IBSH1="M" S IBEXCEL1=IBEXCEL1_$$DT^IBJD(DAT,1) Q
"RTN","IBJDF51",200,0)
 .;
"RTN","IBJDF51",201,0)
 .; - Append brief and transaction comments.
"RTN","IBJDF51",202,0)
 .K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF51",203,0)
 .S COM1(1)=$P($G(^PRCA(433,IBA1,5)),U,2)
"RTN","IBJDF51",204,0)
 .S COM1(2)=$E($P($G(^PRCA(433,IBA1,8)),U,6),1,70)
"RTN","IBJDF51",205,0)
 .S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF51",206,0)
 .I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF51",207,0)
 .;
"RTN","IBJDF51",208,0)
 .; - Get main comments.
"RTN","IBJDF51",209,0)
 .S X2=0 F  S X2=$O(^PRCA(433,IBA1,7,X2)) Q:'X2  S COM($S(X1:X2+1,1:X2))=^(X2,0)
"RTN","IBJDF51",210,0)
 .;
"RTN","IBJDF51",211,0)
 .S X1="" F  S X1=$O(COM(X1)) Q:X1=""  D
"RTN","IBJDF51",212,0)
 ..S ^TMP("IBJDF5",$J,IBDIV,IBCAT,X,IBIN,IBKEY,IBBN,IBA1,X1)=COM(X1)
"RTN","IBJDF51",213,0)
 ;
"RTN","IBJDF51",214,0)
 Q
"RTN","IBJDF61")
0^3^B55100419^B54417699
"RTN","IBJDF61",1,0)
IBJDF61 ;ALB/RB - MISC. BILLS FOLLOW-UP REPORT (COMPILE) ;15-APR-00
"RTN","IBJDF61",2,0)
 ;;2.0;INTEGRATED BILLING;**123,159,356**;21-MAR-94
"RTN","IBJDF61",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBJDF61",4,0)
 ;
"RTN","IBJDF61",5,0)
ST ; - Tasked entry point.
"RTN","IBJDF61",6,0)
 K IB,IBCAT,^TMP("IBJDF6P",$J),^TMP("IBJDF6D",$J) S IBQ=0
"RTN","IBJDF61",7,0)
 ;
"RTN","IBJDF61",8,0)
 ; - Set selected categories for report.
"RTN","IBJDF61",9,0)
 I IBSEL[",1," S IBCAT(21)=1        ; MEDICARE
"RTN","IBJDF61",10,0)
 I IBSEL[2 S IBCAT(7)=2             ; NO-FAULT AUTO ACCIDENT
"RTN","IBJDF61",11,0)
 I IBSEL[3 S IBCAT(10)=3            ; TORT FEASOR
"RTN","IBJDF61",12,0)
 I IBSEL[4 S IBCAT(6)=4             ; WORKMEN'S COMP
"RTN","IBJDF61",13,0)
 I IBSEL[5 S IBCAT(16)=5            ; CURRENT EMPLOYEE
"RTN","IBJDF61",14,0)
 I IBSEL[6 S IBCAT(15)=6            ; EX-EMPLOYEE
"RTN","IBJDF61",15,0)
 I IBSEL[7 S IBCAT(13)=7            ; FEDERAL AGENCIES-REFUND
"RTN","IBJDF61",16,0)
 I IBSEL[8 S IBCAT(14)=8            ; FEDERAL AGENCIES-REIMBURSEMENT
"RTN","IBJDF61",17,0)
 I IBSEL[9 S IBCAT(20)=9            ; MILITARY
"RTN","IBJDF61",18,0)
 I IBSEL[10 S IBCAT(12)=10          ; INTERAGENCY
"RTN","IBJDF61",19,0)
 I IBSEL[11 S IBCAT(17)=11          ; VENDOR
"RTN","IBJDF61",20,0)
 ;
"RTN","IBJDF61",21,0)
 ; Initialize the Summary Information
"RTN","IBJDF61",22,0)
 S IBCAT="" F  S IBCAT=$O(IBCAT(IBCAT)) Q:IBCAT=""  D
"RTN","IBJDF61",23,0)
 . S IBDIV=0
"RTN","IBJDF61",24,0)
 . I IBSDV," 6 7 10 21 "[(" "_IBCAT_" ") D  Q
"RTN","IBJDF61",25,0)
 . . F  S IBDIV=$O(VAUTD(IBDIV)) Q:IBDIV=""  D INIT^IBJDF63
"RTN","IBJDF61",26,0)
 . D INIT^IBJDF63
"RTN","IBJDF61",27,0)
 ;
"RTN","IBJDF61",28,0)
 ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF61",29,0)
 I $G(IBEXCEL) D PHDL
"RTN","IBJDF61",30,0)
 ;
"RTN","IBJDF61",31,0)
 ; - Find data required for the report.
"RTN","IBJDF61",32,0)
 S IBA=0 F  S IBA=$O(^PRCA(430,"AC",16,IBA)) Q:'IBA  D  Q:IBQ
"RTN","IBJDF61",33,0)
 . I IBA#100=0 D  Q:IBQ
"RTN","IBJDF61",34,0)
 . . S IBQ=$$STOP^IBOUTL("Miscellaneous Bills Follow-Up Report")
"RTN","IBJDF61",35,0)
 . S IBAR=$G(^PRCA(430,IBA,0)) Q:'IBAR
"RTN","IBJDF61",36,0)
 . S IBCAT=+$P(IBAR,U,2) Q:'$D(IBCAT(IBCAT))  ;     Invalid AR category.
"RTN","IBJDF61",37,0)
 . S IBCAT1=IBCAT(IBCAT) I IBCAT1<5,'$D(^DGCR(399,IBA,0)) Q  ; No claim.
"RTN","IBJDF61",38,0)
 . I IBCAT1<5,$P($G(^DGCR(399,IBA,0)),U,13)=7 Q  ;      Cancelled claim.
"RTN","IBJDF61",39,0)
 . ;
"RTN","IBJDF61",40,0)
 . ; - Get division, if necessary.
"RTN","IBJDF61",41,0)
 . I IBCAT1>4 S IBDIV=0
"RTN","IBJDF61",42,0)
 . E  D
"RTN","IBJDF61",43,0)
 . . I 'IBSDV S IBDIV=0
"RTN","IBJDF61",44,0)
 . . E  S IBDIV=$$DIV^IBJDF51(IBA)
"RTN","IBJDF61",45,0)
 . ;
"RTN","IBJDF61",46,0)
 . I IBSDV,IBDIV,'VAUTD Q:'$D(VAUTD(IBDIV))  ; Not a selected division.
"RTN","IBJDF61",47,0)
 . ;
"RTN","IBJDF61",48,0)
 . ; - Get patient or debtor for report.
"RTN","IBJDF61",49,0)
 . I IBRPT="D" S IBPTDB=$$PTDB(IBA) Q:IBPTDB=""
"RTN","IBJDF61",50,0)
 . ;
"RTN","IBJDF61",51,0)
 . ; - Check the receivable age, if necessary.
"RTN","IBJDF61",52,0)
 . I IBRPT="D",IBSMN D  I (IBARD)<IBSMN!(IBARD>IBSMX) Q
"RTN","IBJDF61",53,0)
 . . S IBARD=+$$ACT^IBJDF2(IBA) S:IBARD IBARD=$$FMDIFF^XLFDT(DT,IBARD)
"RTN","IBJDF61",54,0)
 . ;
"RTN","IBJDF61",55,0)
 . ; - Check the minimum balance amount, if necessary.
"RTN","IBJDF61",56,0)
 . S IBBA=0 F X=1:1:5 S IBBA=IBBA+$P($G(^PRCA(430,IBA,7)),U,X)
"RTN","IBJDF61",57,0)
 . I IBRPT="D",IBSAM,IBBA<IBSAM Q
"RTN","IBJDF61",58,0)
 . ;
"RTN","IBJDF61",59,0)
 . ; - Get stats for summary
"RTN","IBJDF61",60,0)
 . I '$G(IBEXCEL) D EN^IBJDF63 Q:IBRPT="S"
"RTN","IBJDF61",61,0)
 . ;
"RTN","IBJDF61",62,0)
 . ; - Get remaining AR/claim info and set indexes for detailed report.
"RTN","IBJDF61",63,0)
 . S (IBFR,IBLP,IBOI,IBTO,IBCLM)="",IBIN=0
"RTN","IBJDF61",64,0)
 . S IBBN=$P(IBAR,U),IBOR=$P(IBAR,U,3),IBDP=$P(IBAR,U,10)
"RTN","IBJDF61",65,0)
 . I IBCAT1<5 D  Q:'IBI!('IBCLM)
"RTN","IBJDF61",66,0)
 . . S IBI=+$G(^DGCR(399,IBA,"MP")) Q:'IBI  ; Get primary ins carrier.
"RTN","IBJDF61",67,0)
 . . S IBIN=$P($G(^DIC(36,IBI,0)),U)_"@@"_IBI,DFN=$P($P(IBPTDB,U),"@@",2)
"RTN","IBJDF61",68,0)
 . . S IBDP=$P(IBAR,U,10),IBCLM=$$CLMACT^IBJD(IBA,IBCAT) Q:IBCLM=""
"RTN","IBJDF61",69,0)
 . . S IBR=$S(+IBCLM=1:$G(^IB($P(IBCLM,U,2),0)),+IBCLM=2:$G(^DGCR(399,IBA,"U")),1:IBDP)
"RTN","IBJDF61",70,0)
 . . S IBFR=$P(IBR,U,$S(+IBCLM=1:14,1:1)),IBTO=$P(IBR,U,$S(+IBCLM=1:15,+IBCLM=2:2,1:1))
"RTN","IBJDF61",71,0)
 . . S IBOI=$$OTH(DFN,$P(IBIN,"@@",2),IBFR) ; Get other insurance carrier.
"RTN","IBJDF61",72,0)
 . . I $G(IBEXCEL) Q
"RTN","IBJDF61",73,0)
 . . I '($D(^TMP("IBJDF6P",$J,IBDIV,IBCAT,IBIN,$P(IBPTDB,U)))#10) D
"RTN","IBJDF61",74,0)
 . . . S ^TMP("IBJDF6P",$J,IBDIV,IBCAT,IBIN,$P(IBPTDB,U))=$P(IBPTDB,U,2)_" "_$P(IBPTDB,U,6)_U_$P(IBPTDB,U,3,4)_U_IBOI
"RTN","IBJDF61",75,0)
 . . S ^TMP("IBJDF6P",$J,IBDIV,IBCAT,IBIN,$P(IBPTDB,U),IBBN)=IBDP_U_IBFR_U_IBTO_U_IBOR_U_IBBA
"RTN","IBJDF61",76,0)
 . E  D
"RTN","IBJDF61",77,0)
 . . S IBLP=+$P($$PYMT^IBJD1(IBA),U,2)
"RTN","IBJDF61",78,0)
 . . I '($D(^TMP("IBJDF6D",$J,IBDIV,IBCAT,0,$P(IBPTDB,U)))#10) D
"RTN","IBJDF61",79,0)
 . . . S ^TMP("IBJDF6D",$J,IBDIV,IBCAT,0,$P(IBPTDB,U))=$P(IBPTDB,U,2)_" "_$P(IBPTDB,U,6)
"RTN","IBJDF61",80,0)
 . . S ^TMP("IBJDF6D",$J,IBDIV,IBCAT,0,$P(IBPTDB,U),IBBN)=IBDP_U_$P(IBPTDB,U,5)_U_IBOR_U_IBLP_U_IBBA
"RTN","IBJDF61",81,0)
 . ;
"RTN","IBJDF61",82,0)
 . I '$G(IBEXCEL) D:IBSH COM Q
"RTN","IBJDF61",83,0)
 . ;
"RTN","IBJDF61",84,0)
 . ; - Set up and write line for Excel document.
"RTN","IBJDF61",85,0)
 . S IBDIV=$P($G(^DG(40.8,$S('IBDIV:+$$PRIM^VASITE(),1:IBDIV),0)),U)
"RTN","IBJDF61",86,0)
 . S IBEXCEL1=IBDIV_U_$P($G(^PRCA(430.2,IBCAT,0)),U,2)_U_$S(IBIN=0:"",1:$P(IBIN,"@@"))
"RTN","IBJDF61",87,0)
 . S IBEXCEL1=IBEXCEL1_U_$P(IBPTDB,U,2)_U_$S($P(IBPTDB,"^",6)="*":"E",1:"")_U_$TR($P(IBPTDB,U,4),"-")
"RTN","IBJDF61",88,0)
 . S IBEXCEL1=IBEXCEL1_U_$P(IBPTDB,U,3)_U_IBOI_U_IBBN_U_$$DT^IBJD(IBDP,1)
"RTN","IBJDF61",89,0)
 . S IBEXCEL1=IBEXCEL1_U_$$DT^IBJD(IBFR,1)_U_$$DT^IBJD(IBTO,1)_U_IBOR
"RTN","IBJDF61",90,0)
 . S IBEXCEL1=IBEXCEL1_U_IBLP_U_IBBA_U
"RTN","IBJDF61",91,0)
 . I IBSH D COM   ;  This will capture the Last Comment Date
"RTN","IBJDF61",92,0)
 . S IBD=$$FMDIFF^XLFDT(DT,$S('$P(IBEXCEL1,U,17):IBDP,1:$G(DAT)))
"RTN","IBJDF61",93,0)
 . S IBEXCEL1=IBEXCEL1_U_IBD W !,IBEXCEL1 K IBD,IBEXCEL1
"RTN","IBJDF61",94,0)
 ;
"RTN","IBJDF61",95,0)
 I 'IBQ,'$G(IBEXCEL) D EN^IBJDF62 ; Print the report.
"RTN","IBJDF61",96,0)
 ;
"RTN","IBJDF61",97,0)
ENQ K ^TMP("IBJDF6P",$J),^TMP("IBJDF6D",$J)
"RTN","IBJDF61",98,0)
 I $D(ZTQUEUED) S ZTREQ="@" G ENQ1
"RTN","IBJDF61",99,0)
 ;
"RTN","IBJDF61",100,0)
 D ^%ZISC
"RTN","IBJDF61",101,0)
ENQ1 K IBA,IBA1,IBAR,IBARD,IBCAT,IBCAT1,IBDIV,IBD,IBI,IBIN,IBQ,IBR,IBOI,IBBA
"RTN","IBJDF61",102,0)
 K IBBN,IBCLM,IBDP,IBEXCEL,IBFR,IBLP,IBOR,IBPTDB,IBTO,IBTYP,COM
"RTN","IBJDF61",103,0)
 K COM1,DAT,DFN,J,X,X1,X2,Y,Z
"RTN","IBJDF61",104,0)
 Q
"RTN","IBJDF61",105,0)
 ;
"RTN","IBJDF61",106,0)
PTDB(X) ; - Find Patient/Debtor and decide to include the AR.
"RTN","IBJDF61",107,0)
 ;    Input: X=Pointer to the AR in file #430 plus all IBS* variables
"RTN","IBJDF61",108,0)
 ;   Output: Y=Sort key (name or last 4) and Patient/Debtor IEN(file #2) 
"RTN","IBJDF61",109,0)
 ;             ^ Patient/Debtor name (1st 25 chars) ^ Age ^ SSN
"RTN","IBJDF61",110,0)
 ;             ^ Processed by (File #200) ^ Current VA Employee? (*=Yes)
"RTN","IBJDF61",111,0)
 N AGE,ALL,ARZ,CAT,DEB,DA,DFN,DIC,DIQ,DR,END,IBZ,INI,KEY,NAME,PRC,SSN
"RTN","IBJDF61",112,0)
 N VA,VADM,VAERR,Y
"RTN","IBJDF61",113,0)
 ;
"RTN","IBJDF61",114,0)
 S Y="" I '$G(X) G PDQ
"RTN","IBJDF61",115,0)
 S DFN=0,ARZ=$G(^PRCA(430,X,0)),CAT=$P(ARZ,"^",2)
"RTN","IBJDF61",116,0)
 S (NAME,AGE,SSN,PRC)=""
"RTN","IBJDF61",117,0)
 ;
"RTN","IBJDF61",118,0)
 ; - Look for Patient(Medicare,Tort Feasor,Work's Comp,No-Fault Auto Acc)
"RTN","IBJDF61",119,0)
 I " 6 7 10 21 "[(" "_CAT_" ") D  I 'DFN S Y="" G PDQ
"RTN","IBJDF61",120,0)
 . I '$D(^DGCR(399,X,0)) Q
"RTN","IBJDF61",121,0)
 . S IBZ=^DGCR(399,X,0),DFN=+$P(IBZ,"^",2)
"RTN","IBJDF61",122,0)
 . S INI=IBSNF,END=IBSNL,ALL=IBSNA
"RTN","IBJDF61",123,0)
 . D DEM^VADPT S NAME=VADM(1),SSN=$P(VADM(2),"^",2),AGE=VADM(4)
"RTN","IBJDF61",124,0)
 . S KEY=$S(IBSN="N":NAME,1:$P(SSN,"-",3))
"RTN","IBJDF61",125,0)
 ;
"RTN","IBJDF61",126,0)
 ; - Look for Debtor (All the other Categories)
"RTN","IBJDF61",127,0)
 I " 6 7 10 21 "'[(" "_CAT_" ") D  I 'DFN S Y="" G PDQ
"RTN","IBJDF61",128,0)
 . S DIC="^PRCA(430,",DA=X,DR="9;97",DIQ="DEB" D EN^DIQ1
"RTN","IBJDF61",129,0)
 . S DFN=+$P(ARZ,"^",9) I 'DFN Q
"RTN","IBJDF61",130,0)
 . S NAME=$G(DEB(430,DA,9)),PRC=$G(DEB(430,DA,97)),KEY=NAME
"RTN","IBJDF61",131,0)
 . S DIC="^RCD(340,",DA=DFN,DR="110",DIQ="DEB" D EN^DIQ1
"RTN","IBJDF61",132,0)
 . S SSN=$G(DEB(340,DA,110))  S:SSN=-1 SSN=""
"RTN","IBJDF61",133,0)
 . S INI=IBSDF,END=IBSDL,ALL=IBSDA
"RTN","IBJDF61",134,0)
 ;
"RTN","IBJDF61",135,0)
 I (INI'="@"&('DFN)) S Y="" G PDQ
"RTN","IBJDF61",136,0)
 I ALL="ALL"&('DFN)!(ALL="NULL"&(DFN)) S Y="" G PDQ
"RTN","IBJDF61",137,0)
 I INI="@",END="zzzzz" G PDC
"RTN","IBJDF61",138,0)
 I INI]KEY!(KEY]END) S Y="" G PDQ
"RTN","IBJDF61",139,0)
 ;
"RTN","IBJDF61",140,0)
 S KEY=KEY_"@@"_DFN
"RTN","IBJDF61",141,0)
PDC S Y=KEY_U_$E(NAME,1,25)_U_AGE_U_SSN_U_PRC_U_$$VAEMP(+$TR(SSN,"-"))
"RTN","IBJDF61",142,0)
PDQ Q Y
"RTN","IBJDF61",143,0)
 ;
"RTN","IBJDF61",144,0)
PHDL ; - Print the header line for the Excel spreadsheet
"RTN","IBJDF61",145,0)
 N X
"RTN","IBJDF61",146,0)
 S X="Division^Cat.^Prim.Ins.Carrier^Patient/Debtor^VA Empl.?^SSN^Age^"
"RTN","IBJDF61",147,0)
 S X=X_"Other Ins.Carrier^Bill #^Dt Bill prep.^Bill From Dt^Bill To Dt^"
"RTN","IBJDF61",148,0)
 S X=X_"Orig.Amt^Lst Pymt Amt^Curr.Bal.^Lst Comm.Dt^Days Lst Comm."
"RTN","IBJDF61",149,0)
 W !,X
"RTN","IBJDF61",150,0)
 Q
"RTN","IBJDF61",151,0)
 ;
"RTN","IBJDF61",152,0)
VAEMP(SSN) ; - Check if the Patient/Debtor is a current VA Employee
"RTN","IBJDF61",153,0)
 ; Input:   SSN - Patient/Debtor Social Security Number
"RTN","IBJDF61",154,0)
 ;Output: VAEMP - "*":Current VA Employee / "":Not a Current VA Employee
"RTN","IBJDF61",155,0)
 ;
"RTN","IBJDF61",156,0)
 N IEN I 'SSN Q ""
"RTN","IBJDF61",157,0)
 S IEN=+$O(^PRSPC("SSN",SSN,0)) Q:'IEN ""
"RTN","IBJDF61",158,0)
 I $P($G(^PRSPC(IEN,1)),U,33)'="Y" Q "*"
"RTN","IBJDF61",159,0)
 Q ""
"RTN","IBJDF61",160,0)
 ;
"RTN","IBJDF61",161,0)
OTH(DFN,INS,DS) ; - Find a patient's other valid insurance carrier (if any).
"RTN","IBJDF61",162,0)
 ;   Input: DFN=Pointer to the patient in file #2
"RTN","IBJDF61",163,0)
 ;          INS=Pointer to the patient's primary carrier in file #36
"RTN","IBJDF61",164,0)
 ;           DS=Date of service for validity check
"RTN","IBJDF61",165,0)
 ;  Output: Valid insurance carrier (first 22 chars.) or null
"RTN","IBJDF61",166,0)
 N Y S Y="" G:'$G(DFN)!('$G(DS)) OTHQ
"RTN","IBJDF61",167,0)
 S Z=0 F  S Z=$O(^DPT(DFN,.312,Z)) Q:'Z  S X=$G(^(Z,0)) D:X  Q:Y]""
"RTN","IBJDF61",168,0)
 .I $G(INS),+X=INS Q
"RTN","IBJDF61",169,0)
 .S X1=$G(^DIC(36,+X,0)) Q:X1=""
"RTN","IBJDF61",170,0)
 .I $P(X1,U,2)'="N",$$CHK^IBCNS1(X,DS) S Y=$E($P(X1,U),1,22)
"RTN","IBJDF61",171,0)
 ;
"RTN","IBJDF61",172,0)
OTHQ Q Y
"RTN","IBJDF61",173,0)
 ;
"RTN","IBJDF61",174,0)
COM ; - Get bill comments.
"RTN","IBJDF61",175,0)
 N IBGLB,DAT,IBA1,IBC,COM,COM1,X1,X2
"RTN","IBJDF61",176,0)
 ;
"RTN","IBJDF61",177,0)
 S DAT=0,IBA1=$S(IBSH1="M":999999999,1:0)
"RTN","IBJDF61",178,0)
 F  S IBA1=$S(IBSH1="M":$O(^PRCA(433,"C",IBA,IBA1),-1),1:$O(^PRCA(433,"C",IBA,IBA1))) Q:'IBA1  D  I IBSH1="M",DAT Q
"RTN","IBJDF61",179,0)
 . S IBC=$G(^PRCA(433,IBA1,1)) Q:'IBC
"RTN","IBJDF61",180,0)
 . I $G(IBSH2),$$FMDIFF^XLFDT(DT,+IBC)<IBSH2 Q  ; Comment age not minimum.
"RTN","IBJDF61",181,0)
 . I $P(IBC,U,2)'=35,$P(IBC,U,2)'=45 Q  ;   Not decrease/comment transact.
"RTN","IBJDF61",182,0)
 . S DAT=$S(IBC:+IBC\1,1:+$P(IBC,U,9)\1)
"RTN","IBJDF61",183,0)
 . I $G(IBEXCEL),IBSH1="M" S IBEXCEL1=IBEXCEL1_$$DT^IBJD(DAT,1) Q
"RTN","IBJDF61",184,0)
 . ;
"RTN","IBJDF61",185,0)
 . ; - Append brief and transaction comments.
"RTN","IBJDF61",186,0)
 . K COM,COM1 S COM(0)=DAT,X1=0
"RTN","IBJDF61",187,0)
 . S COM1(1)=$P($G(^PRCA(433,IBA1,5)),U,2)
"RTN","IBJDF61",188,0)
 . S COM1(2)=$E($P($G(^PRCA(433,IBA1,8)),U,6),1,70)
"RTN","IBJDF61",189,0)
 . S COM(1)=COM1(1)_$S(COM1(1)]""&(COM1(2)]""):"|",1:"")_COM1(2)
"RTN","IBJDF61",190,0)
 . I COM(1)]"" S COM(1)="**"_COM(1)_"**",X1=1
"RTN","IBJDF61",191,0)
 . ;
"RTN","IBJDF61",192,0)
 . ; - Get main comments.
"RTN","IBJDF61",193,0)
 . S X2=0 F  S X2=$O(^PRCA(433,IBA1,7,X2)) Q:'X2  S COM($S(X1:X2+1,1:X2))=^(X2,0)
"RTN","IBJDF61",194,0)
 . ;
"RTN","IBJDF61",195,0)
 . S X1="" F  S X1=$O(COM(X1)) Q:X1=""  D
"RTN","IBJDF61",196,0)
 . . S IBGLB=$S(IBCAT1<5:"IBJDF6P",1:"IBJDF6D")
"RTN","IBJDF61",197,0)
 . . S ^TMP(IBGLB,$J,IBDIV,IBCAT,IBIN,$P(IBPTDB,U),IBBN,IBA1,X1)=COM(X1)
"RTN","IBJDF61",198,0)
 ;
"RTN","IBJDF61",199,0)
 Q
"RTN","IBOHLD1")
0^10^B19222210^B18759714
"RTN","IBOHLD1",1,0)
IBOHLD1 ;ALB/CJM -  REPORT OF CHARGES ON HOLD W/INS INFO ;MARCH 3 1992
"RTN","IBOHLD1",2,0)
 ;;2.0;INTEGRATED BILLING;**70,95,133,356**;21-MAR-94
"RTN","IBOHLD1",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBOHLD1",4,0)
 ;
"RTN","IBOHLD1",5,0)
 ; modified HELD CHARGES REPORT - includes INS info
"RTN","IBOHLD1",6,0)
 ;
"RTN","IBOHLD1",7,0)
MAIN ;
"RTN","IBOHLD1",8,0)
 N IBQUIT,IBII,DIRUT,DUOUT,DTOUT,ZTIO,Y S IBQUIT=0
"RTN","IBOHLD1",9,0)
 S DIR(0)="Y",DIR("A")="Include Insurance information on this report",DIR("B")="NO"
"RTN","IBOHLD1",10,0)
 S DIR("?",1)="     Enter:  'Y'  -  to include patient insurance information on this report"
"RTN","IBOHLD1",11,0)
 S DIR("?",2)="             'N'  -  to exclude patient insurance information on this report"
"RTN","IBOHLD1",12,0)
 S DIR("?",3)="             '^'  -  to exit this option"
"RTN","IBOHLD1",13,0)
 D ^DIR K DIR G:$D(DIRUT) EXIT S IBII=+Y
"RTN","IBOHLD1",14,0)
 ;
"RTN","IBOHLD1",15,0)
QUEUED ; entry point if queued
"RTN","IBOHLD1",16,0)
 ;***
"RTN","IBOHLD1",17,0)
 K ^TMP($J)
"RTN","IBOHLD1",18,0)
 D:'$G(IBQUIT) DEVICE D:'$G(IBQUIT) CHRGS,REPORT^IBOHLD2
"RTN","IBOHLD1",19,0)
 D EXIT
"RTN","IBOHLD1",20,0)
 ;***
"RTN","IBOHLD1",21,0)
 Q
"RTN","IBOHLD1",22,0)
EXIT ;
"RTN","IBOHLD1",23,0)
 K ^TMP($J)
"RTN","IBOHLD1",24,0)
 K IBRDT,IBRF,IBRX,IBRXN
"RTN","IBOHLD1",25,0)
 I $D(ZTQUEUED) S ZTREQ="@" Q
"RTN","IBOHLD1",26,0)
 D ^%ZISC
"RTN","IBOHLD1",27,0)
 Q
"RTN","IBOHLD1",28,0)
DEVICE ;
"RTN","IBOHLD1",29,0)
 I $D(ZTQUEUED) Q
"RTN","IBOHLD1",30,0)
 W !!,*7,"*** Margin width of this output is 132 ***"
"RTN","IBOHLD1",31,0)
 W !,"*** This output should be queued ***"
"RTN","IBOHLD1",32,0)
 S %ZIS="QM" D ^%ZIS I POP S IBQUIT=1 Q
"RTN","IBOHLD1",33,0)
 I $D(IO("Q")) D  Q
"RTN","IBOHLD1",34,0)
 . S ZTRTN="QUEUED^IBOHLD1"
"RTN","IBOHLD1",35,0)
 . S ZTIO=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","IBOHLD1",36,0)
 . S ZTDESC="HELD CHARGES RPT W/INS"
"RTN","IBOHLD1",37,0)
 . S ZTSAVE("IB*")=""
"RTN","IBOHLD1",38,0)
 . D ^%ZTLOAD
"RTN","IBOHLD1",39,0)
 . W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","IBOHLD1",40,0)
 . D HOME^%ZIS K ZTSK S IBQUIT=1
"RTN","IBOHLD1",41,0)
 U IO
"RTN","IBOHLD1",42,0)
 Q
"RTN","IBOHLD1",43,0)
 ; indexes records that should be included in report
"RTN","IBOHLD1",44,0)
 ;
"RTN","IBOHLD1",45,0)
CHRGS ; charges on hold
"RTN","IBOHLD1",46,0)
 N IBN,DFN,IBNAME,IBND
"RTN","IBOHLD1",47,0)
 S DFN=0 F  S DFN=$O(^IB("AH",DFN)) Q:'DFN  D PAT S IBN=0 F  S IBN=$O(^IB("AH",DFN,IBN)) Q:'IBN  D
"RTN","IBOHLD1",48,0)
 .S IBND=$G(^IB(IBN,0)) Q:'IBND
"RTN","IBOHLD1",49,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBN)=""
"RTN","IBOHLD1",50,0)
 .D BILLS
"RTN","IBOHLD1",51,0)
 Q
"RTN","IBOHLD1",52,0)
PAT ; patient name
"RTN","IBOHLD1",53,0)
 N VAERR,VADM D DEM^VADPT I VAERR K VADM
"RTN","IBOHLD1",54,0)
 S IBNAME=$G(VADM(1)) S:IBNAME="" IBNAME=" "
"RTN","IBOHLD1",55,0)
 Q
"RTN","IBOHLD1",56,0)
BILLS ; find bills for charges on hold
"RTN","IBOHLD1",57,0)
 N IBFR,IBT,IBATYPE,IBTO
"RTN","IBOHLD1",58,0)
 S IBATYPE=$S($P($G(^IBE(350.1,+$P(IBND,"^",3),0)),"^")["OPT":"O",$P($G(^IBE(350.1,+IBND,"^",3,0)),"^")["PSO":"RX",1:"I")
"RTN","IBOHLD1",59,0)
 S IBFR=$P(IBND,"^",14),IBTO=$P(IBND,"^",15)
"RTN","IBOHLD1",60,0)
 I IBATYPE="I" D INP
"RTN","IBOHLD1",61,0)
 I IBATYPE="O" D OTP
"RTN","IBOHLD1",62,0)
 E  D RX
"RTN","IBOHLD1",63,0)
 Q
"RTN","IBOHLD1",64,0)
INP ; inpatient bills
"RTN","IBOHLD1",65,0)
 N IBEV,IBBILL,IBT,X,X1,X2,IBEND,IBOK
"RTN","IBOHLD1",66,0)
 S IBEV=$P(IBND,"^",16) Q:'IBEV  ; parent event
"RTN","IBOHLD1",67,0)
 S IBEV=($P($G(^IB(IBEV,0)),"^",17)\1) Q:'IBEV  ; date of parent event
"RTN","IBOHLD1",68,0)
 S X1=IBEV,X2=1 D C^%DTC S IBEND=X
"RTN","IBOHLD1",69,0)
 S IBT=(IBEV-.0001) F  S IBT=$O(^DGCR(399,"D",IBT)) Q:'IBT!(IBT'<IBEND)  S IBBILL=0 F  S IBBILL=$O(^DGCR(399,"D",IBT,IBBILL)) Q:IBBILL=""  D
"RTN","IBOHLD1",70,0)
 .D INPTCK
"RTN","IBOHLD1",71,0)
 .I IBOK S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",72,0)
 Q
"RTN","IBOHLD1",73,0)
 ;
"RTN","IBOHLD1",74,0)
INPTCK ; does bill belong to charge? returns IBOK=0 if no
"RTN","IBOHLD1",75,0)
 N IBBILL0,IBBILLU
"RTN","IBOHLD1",76,0)
 S IBBILL0=$G(^DGCR(399,IBBILL,0)),IBBILLU=$G(^("U"))
"RTN","IBOHLD1",77,0)
 S IBOK=1
"RTN","IBOHLD1",78,0)
CK1 ; for same patient?
"RTN","IBOHLD1",79,0)
 I DFN=$P(IBBILL0,"^",2)
"RTN","IBOHLD1",80,0)
 S IBOK=$T
"RTN","IBOHLD1",81,0)
 Q:'IBOK
"RTN","IBOHLD1",82,0)
CK2 ; same type- inp or opt?
"RTN","IBOHLD1",83,0)
 N B S B=$S(+$P(IBBILL0,"^",5)<3:"I",1:"O")
"RTN","IBOHLD1",84,0)
 I B=IBATYPE
"RTN","IBOHLD1",85,0)
 S IBOK=$T
"RTN","IBOHLD1",86,0)
 Q:'IBOK
"RTN","IBOHLD1",87,0)
CK3 ; overlap in date range?
"RTN","IBOHLD1",88,0)
 N F,T
"RTN","IBOHLD1",89,0)
 S F=+IBBILLU,T=$P(IBBILLU,"^",2)
"RTN","IBOHLD1",90,0)
 I (IBTO<F)!(IBFR>T)
"RTN","IBOHLD1",91,0)
 S IBOK='$T
"RTN","IBOHLD1",92,0)
 Q:'IBOK
"RTN","IBOHLD1",93,0)
CK4 ; insurance bill?
"RTN","IBOHLD1",94,0)
 I $P(IBBILL0,"^",11)="i"
"RTN","IBOHLD1",95,0)
 S IBOK=$T
"RTN","IBOHLD1",96,0)
 Q
"RTN","IBOHLD1",97,0)
OTP ; outpatient bills
"RTN","IBOHLD1",98,0)
 N X,IBV,IBBILL,IBOK,IBBILL0
"RTN","IBOHLD1",99,0)
 S IBV=(IBFR\1)-.0001 F  S IBV=$O(^DGCR(399,"AOPV",DFN,IBV)) Q:'IBV!(IBV>IBTO)  S IBBILL=0 D
"RTN","IBOHLD1",100,0)
 .F  S IBBILL=$O(^DGCR(399,"AOPV",DFN,IBV,IBBILL)) Q:('IBBILL)  D
"RTN","IBOHLD1",101,0)
 ..Q:$D(^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL))
"RTN","IBOHLD1",102,0)
 ..S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 Q:'IBOK
"RTN","IBOHLD1",103,0)
 ..S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",104,0)
 Q
"RTN","IBOHLD1",105,0)
RX ; rx refill bills
"RTN","IBOHLD1",106,0)
 S (IBRX,IBRXN,IBRF,IBRDT)=0 N IENS
"RTN","IBOHLD1",107,0)
 I $P(IBND,"^",4)'["52:" Q
"RTN","IBOHLD1",108,0)
 ;
"RTN","IBOHLD1",109,0)
 S IBRXN=$P($P(IBND,"^",4),":",2),IBRX=$P($P(IBND,"^",8),"-"),IBRF=$P($P(IBND,"^",4),":",3)
"RTN","IBOHLD1",110,0)
 ;
"RTN","IBOHLD1",111,0)
 I +IBRF>0 S IENS=+IBRF_","_+IBRXN_",",IBRDT=$$GET1^DIQ(52.1,IENS,.01,"I")
"RTN","IBOHLD1",112,0)
 I +IBRF=0 S IENS=+IBRXN_",",IBRDT=$$GET1^DIQ(52,IENS,22,"I")
"RTN","IBOHLD1",113,0)
 ;
"RTN","IBOHLD1",114,0)
 Q:(IBRX="")!('IBRDT)
"RTN","IBOHLD1",115,0)
 N X,IBBILL,IBBILL0,IBFILL,IBFILL0,IBOK S IBBILL=0
"RTN","IBOHLD1",116,0)
 S IBFILL=0 F  S IBFILL=$O(^IBA(362.4,"B",IBRX,IBFILL)) Q:IBFILL=""  D
"RTN","IBOHLD1",117,0)
 .S IBFILL0=$G(^IBA(362.4,IBFILL,0)) I $P(IBFILL0,"^",3)'=IBRDT Q
"RTN","IBOHLD1",118,0)
 .S IBBILL=+$P(IBFILL0,"^",2) I 'IBBILL Q
"RTN","IBOHLD1",119,0)
 .S IBBILL0=$G(^DGCR(399,IBBILL,0)) D CK4 I 'IBOK Q
"RTN","IBOHLD1",120,0)
 .S ^TMP($J,"HOLD",IBNAME,DFN,IBN,IBBILL)=""
"RTN","IBOHLD1",121,0)
 Q
"RTN","IBTUBUL")
0^4^B21781134^B20146388
"RTN","IBTUBUL",1,0)
IBTUBUL ;ALB/AAS - UNBILLED AMOUNTS ;29-SEP-94
"RTN","IBTUBUL",2,0)
 ;;2.0;INTEGRATED BILLING;**19,123,159,217,155,356**;21-MAR-94
"RTN","IBTUBUL",3,0)
 ;;Per VHA Directive 2004-038, this routine should not be modified.
"RTN","IBTUBUL",4,0)
 ;
"RTN","IBTUBUL",5,0)
TEST ; - Create and send test bulletin.
"RTN","IBTUBUL",6,0)
 N IBBDT,IBEDT,IBSEL,IBTEST
"RTN","IBTUBUL",7,0)
 S IBBDT=DT,IBEDT=DT,IBSEL="1,2,3",IBTEST=1
"RTN","IBTUBUL",8,0)
 ;
"RTN","IBTUBUL",9,0)
BULL ; - Create and send bulletin.
"RTN","IBTUBUL",10,0)
 N IBGRP,IBT,IBX,XMDUZ,XMSUB,XMTEXT,XMN,XMY,XMZ,I,IDX,X,Y
"RTN","IBTUBUL",11,0)
 ;
"RTN","IBTUBUL",12,0)
 S XMSUB="UNBILLED AMOUNTS SUMMARY REPORT"_$S($G(IBTEST):" (TEST)",1:"")
"RTN","IBTUBUL",13,0)
 S IBX=$P($$SITE^VASITE,U,2,3)
"RTN","IBTUBUL",14,0)
 S IBT(1)="SUMMARY UNBILLED AMOUNTS FOR "_$P(IBX,U)_" ("_$P(IBX,U,2)_")."
"RTN","IBTUBUL",15,0)
 S IBT(2)="PERIOD: FROM "_$$DAT1^IBOUTL(IBBDT)_" TO "_$$DAT1^IBOUTL(IBEDT)
"RTN","IBTUBUL",16,0)
 S IDX=3
"RTN","IBTUBUL",17,0)
 I $G(IBDET) S IBT(3)="DETAILED REPORT PRINTED TO '"_IO_"'",IDX=4
"RTN","IBTUBUL",18,0)
 I $G(IBCOMP) D
"RTN","IBTUBUL",19,0)
 . S IBT(IDX)="UNBILLED AMOUNTS FIGURES STORED FOR "_$$DAT2^IBOUTL(IBTIMON)
"RTN","IBTUBUL",20,0)
 . S IDX=IDX+1
"RTN","IBTUBUL",21,0)
 ;
"RTN","IBTUBUL",22,0)
 S IBT(IDX)="",IDX=IDX+1
"RTN","IBTUBUL",23,0)
 I $G(IBTEST) D  G BULL1
"RTN","IBTUBUL",24,0)
 .S IBT(IDX)="*** TEST DATA, TEST DATA ***",IDX=IDX+1 D TESTV
"RTN","IBTUBUL",25,0)
 ;
"RTN","IBTUBUL",26,0)
BULL1 ; - Create bulletin.
"RTN","IBTUBUL",27,0)
 I IBSEL[1 D
"RTN","IBTUBUL",28,0)
 . S X=$$INPAVG^IBTUBOU(IBTIMON)
"RTN","IBTUBUL",29,0)
 . S IBT(IDX+1)="Inpatient Care:"
"RTN","IBTUBUL",30,0)
 . S IBT(IDX+2)="   Number of Unbilled Inpatient Admissions : "_$J(IBUNB("EPISM-A"),11)
"RTN","IBTUBUL",31,0)
 . S IBT(IDX+3)="   Number of MRA Unbilled Inpt Admissions  : "_$J(IBUNB("EPISM-A-MRA"),11)
"RTN","IBTUBUL",32,0)
 . S IBT(IDX+4)="   Number of Inpt. Institutional Cases     : "_$J(IBUNB("EPISM-I"),11)
"RTN","IBTUBUL",33,0)
 . S IBT(IDX+5)="   Average Inpt. Institutional Bill Amount : "_$J($P(X,"^"),11,2)
"RTN","IBTUBUL",34,0)
 . S IBT(IDX+6)="   Number of Inpt. Professional Cases      : "_$J(IBUNB("EPISM-P"),11)
"RTN","IBTUBUL",35,0)
 . S IBT(IDX+7)="   Average Inpt. Professional Bill Amount  : "_$J($P(X,"^",2),11,2)
"RTN","IBTUBUL",36,0)
 . S IBT(IDX+8)="   Total Unbilled Inpatient Care           : "_$J(IBUNB("UNBILIP"),11,2)
"RTN","IBTUBUL",37,0)
 . S IBT(IDX+9)="   Total MRA Unbilled Inpatient Care       : "_$J(IBUNB("UNBILIP-MRA"),11,2)
"RTN","IBTUBUL",38,0)
 . S IBT(IDX+10)="",IDX=IDX+10
"RTN","IBTUBUL",39,0)
 ;
"RTN","IBTUBUL",40,0)
 I IBSEL[2 D
"RTN","IBTUBUL",41,0)
 .S IBT(IDX+1)="Outpatient Care:"
"RTN","IBTUBUL",42,0)
 .S IBT(IDX+2)="   Number of Unbilled Outpatient Cases     : "_$J(IBUNB("ENCNTRS"),11)
"RTN","IBTUBUL",43,0)
 .S IBT(IDX+3)="   Number of Unbilled CPT Codes            : "_$J(IBUNB("CPTMS-I")+IBUNB("CPTMS-P"),11)
"RTN","IBTUBUL",44,0)
 .S IBT(IDX+4)="   Number of MRA Unbilled CPT Codes        : "_$J(IBUNB("CPTMS-I-MRA")+IBUNB("CPTMS-P-MRA"),11)
"RTN","IBTUBUL",45,0)
 .S IBT(IDX+5)="   Total Unbilled Outpatient Care          : "_$J(IBUNB("UNBILOP"),11,2)
"RTN","IBTUBUL",46,0)
 .S IBT(IDX+6)="   Total MRA Unbilled Outpatient Care      : "_$J(IBUNB("UNBILOP-MRA"),11,2)
"RTN","IBTUBUL",47,0)
 .S IBT(IDX+7)="",IDX=IDX+7
"RTN","IBTUBUL",48,0)
 ;
"RTN","IBTUBUL",49,0)
 I IBSEL[3 D
"RTN","IBTUBUL",50,0)
 .S IBT(IDX+1)="Prescriptions:"
"RTN","IBTUBUL",51,0)
 .S IBT(IDX+2)="   Number of Unbilled Prescriptions        : "_$J(IBUNB("PRESCRP"),11)
"RTN","IBTUBUL",52,0)
 .S IBT(IDX+3)="   Number of MRA Unbilled Prescriptions    : "_$J(IBUNB("PRESCRP-MRA"),11)
"RTN","IBTUBUL",53,0)
 .S IBT(IDX+4)="   Total Unbilled Prescriptions            : "_$J(IBUNB("UNBILRX"),11,2)
"RTN","IBTUBUL",54,0)
 .S IBT(IDX+5)="   Total MRA Unbilled Prescriptions        : "_$J(IBUNB("UNBILRX-MRA"),11,2)
"RTN","IBTUBUL",55,0)
 .S IBT(IDX+6)="",IDX=IDX+6
"RTN","IBTUBUL",56,0)
 ;
"RTN","IBTUBUL",57,0)
 I IBSEL="1,2,3" D
"RTN","IBTUBUL",58,0)
 .S IBT(IDX+1)="Total Unbilled Amount (all care)           : "_$J(IBUNB("UNBILTL"),11,2)
"RTN","IBTUBUL",59,0)
 .S IBT(IDX+2)="Total MRA Unbilled Amount (all care)       : "_$J(IBUNB("UNBILTL-MRA"),11,2)
"RTN","IBTUBUL",60,0)
 .S IDX(IDX+3)="",IDX=IDX+3
"RTN","IBTUBUL",61,0)
 ;
"RTN","IBTUBUL",62,0)
 S IBT(IDX+1)="",IDX=IDX+1
"RTN","IBTUBUL",63,0)
 I IBSEL[1 D
"RTN","IBTUBUL",64,0)
 . S IBT(IDX+1)="Note:  Average bill Amount is based on Bills Authorized during the 12"
"RTN","IBTUBUL",65,0)
 . S IBT(IDX+2)="       months preceding the month of this report."
"RTN","IBTUBUL",66,0)
 . S IDX=IDX+2
"RTN","IBTUBUL",67,0)
 ;
"RTN","IBTUBUL",68,0)
 S IBT(IDX+1)="Note:  Number of cases is insured cases in Claims Tracking that are"
"RTN","IBTUBUL",69,0)
 S IBT(IDX+2)="       not billed (or bill not authorized/req MRA) but appear to be billable."
"RTN","IBTUBUL",70,0)
 D SEND
"RTN","IBTUBUL",71,0)
 ;
"RTN","IBTUBUL",72,0)
BULLQ Q
"RTN","IBTUBUL",73,0)
 ;
"RTN","IBTUBUL",74,0)
SEND ; - Send bulletin.
"RTN","IBTUBUL",75,0)
 K XMY S XMDUZ="INTEGRATED BILLING PACKAGE",XMTEXT="IBT("
"RTN","IBTUBUL",76,0)
 S XMN=0,IBGRP=$P($G(^XMB(3.8,+$P($G(^IBE(350.9,1,6)),"^",25),0)),"^")
"RTN","IBTUBUL",77,0)
 I $G(IBCOMP),IBGRP]"" S XMY("G."_IBGRP_"@"_^XMB("NETNAME"))=""
"RTN","IBTUBUL",78,0)
 I '$G(IBCOMP) S XMY(DUZ)=""
"RTN","IBTUBUL",79,0)
 D ^XMD
"RTN","IBTUBUL",80,0)
 Q
"RTN","IBTUBUL",81,0)
 ;
"RTN","IBTUBUL",82,0)
TESTV ; - Set up test variables.
"RTN","IBTUBUL",83,0)
 S IBTIMON=9999999
"RTN","IBTUBUL",84,0)
 S IBUNB("EPISM-A")=11111
"RTN","IBTUBUL",85,0)
 S IBUNB("EPISM-A-MRA")=22222
"RTN","IBTUBUL",86,0)
 S IBUNB("EPISM-I")=11111
"RTN","IBTUBUL",87,0)
 S IBUNB("EPISM-P")=0
"RTN","IBTUBUL",88,0)
 S IBUNB("UNBILIP")=99999.99
"RTN","IBTUBUL",89,0)
 S IBUNB("UNBILIP-MRA")=77777.77
"RTN","IBTUBUL",90,0)
 S IBUNB("ENCNTRS")=11111
"RTN","IBTUBUL",91,0)
 S IBUNB("CPTMS-I")=11111
"RTN","IBTUBUL",92,0)
 S IBUNB("CPTMS-I-MRA")=22222
"RTN","IBTUBUL",93,0)
 S IBUNB("CPTMS-P")=0
"RTN","IBTUBUL",94,0)
 S IBUNB("CPTMS-P-MRA")=0
"RTN","IBTUBUL",95,0)
 S IBUNB("UNBILOP")=99999.99
"RTN","IBTUBUL",96,0)
 S IBUNB("UNBILOP-MRA")=77777.77
"RTN","IBTUBUL",97,0)
 S IBUNB("PRESCRP")=11111
"RTN","IBTUBUL",98,0)
 S IBUNB("PRESCRP-MRA")=22222
"RTN","IBTUBUL",99,0)
 S IBUNB("UNBILRX")=11111
"RTN","IBTUBUL",100,0)
 S IBUNB("UNBILRX-MRA")=22222
"RTN","IBTUBUL",101,0)
 S IBUNB("UNBILTL")=99999.99
"RTN","IBTUBUL",102,0)
 S IBUNB("UNBILTL-MRA")=77777.77
"RTN","IBTUBUL",103,0)
 Q
"UP",399,399.0304,-1)
399^CP
"UP",399,399.0304,0)
399.0304
"VER")
8.0^22.0
"^DD",399,399.0304,18,0)
PROVIDER^*P200'^VA(200,^0;18^S DIC("S")="I $O(^(""USC1"",0))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",399,399.0304,18,3)
Enter the provider who performed this procedure.
"^DD",399,399.0304,18,12)
Only medical personnel are selectable for this field.
"^DD",399,399.0304,18,12.1)
S DIC("S")="I $O(^(""USC1"",0))"
"^DD",399,399.0304,18,21,0)
^.001^1^1^3060614^^^
"^DD",399,399.0304,18,21,1,0)
This is the provider who performed the procedure.
"^DD",399,399.0304,18,"DT")
3060614
"BLD",6825,6)
^331
**END**
**END**
