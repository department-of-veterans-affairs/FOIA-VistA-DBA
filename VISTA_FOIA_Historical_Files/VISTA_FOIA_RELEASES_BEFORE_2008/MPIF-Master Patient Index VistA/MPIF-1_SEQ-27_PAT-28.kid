Released MPIF*1*28 SEQ #27
Extracted from mail message
**KIDS**:MPIF*1.0*28^

**INSTALL NAME**
MPIF*1.0*28
"BLD",1737,0)
MPIF*1.0*28^MASTER PATIENT INDEX VISTA^0^3030627^y
"BLD",1737,1,0)
^^3^3^3030612^
"BLD",1737,1,1,0)
MPI CHANGES - ITERATION 1
"BLD",1737,1,2,0)
Refer to patch MPIF*1.0*28 in the FORUM Patch Module for a complete
"BLD",1737,1,3,0)
description.
"BLD",1737,4,0)
^9.64PA^^
"BLD",1737,"ABNS",0)
^9.66A^^
"BLD",1737,"ABPKG")
^^
"BLD",1737,"KRN",0)
^9.67PA^8989.52^19
"BLD",1737,"KRN",.4,0)
.4
"BLD",1737,"KRN",.401,0)
.401
"BLD",1737,"KRN",.402,0)
.402
"BLD",1737,"KRN",.403,0)
.403
"BLD",1737,"KRN",.5,0)
.5
"BLD",1737,"KRN",.84,0)
.84
"BLD",1737,"KRN",3.6,0)
3.6
"BLD",1737,"KRN",3.8,0)
3.8
"BLD",1737,"KRN",9.2,0)
9.2
"BLD",1737,"KRN",9.8,0)
9.8
"BLD",1737,"KRN",9.8,"NM",0)
^9.68A^15^15
"BLD",1737,"KRN",9.8,"NM",1,0)
MPIFEXT2^^0^B41401955
"BLD",1737,"KRN",9.8,"NM",2,0)
MPIFAPI^^0^B73901362
"BLD",1737,"KRN",9.8,"NM",3,0)
MPIFQ0^^0^B61515739
"BLD",1737,"KRN",9.8,"NM",4,0)
MPIFSA2^^0^B45281576
"BLD",1737,"KRN",9.8,"NM",5,0)
MPIFSAQ^^0^B13321894
"BLD",1737,"KRN",9.8,"NM",6,0)
MPIFQ1^^0^B42346363
"BLD",1737,"KRN",9.8,"NM",7,0)
MPIFQ3^^0^B16977860
"BLD",1737,"KRN",9.8,"NM",8,0)
MPIFA31B^^0^B5889158
"BLD",1737,"KRN",9.8,"NM",9,0)
MPIFA24B^^0^B5999283
"BLD",1737,"KRN",9.8,"NM",10,0)
MPIFDEL^^0^B23378784
"BLD",1737,"KRN",9.8,"NM",11,0)
MPIFBT1^^0^B36944269
"BLD",1737,"KRN",9.8,"NM",12,0)
MPIFSA3^^0^B24686128
"BLD",1737,"KRN",9.8,"NM",13,0)
MPIFVTQ^^0^B38511915
"BLD",1737,"KRN",9.8,"NM",14,0)
MPIFRES^^0^B15782359
"BLD",1737,"KRN",9.8,"NM",15,0)
MPIFBT3^^0^B23902057
"BLD",1737,"KRN",9.8,"NM","B","MPIFA24B",9)

"BLD",1737,"KRN",9.8,"NM","B","MPIFA31B",8)

"BLD",1737,"KRN",9.8,"NM","B","MPIFAPI",2)

"BLD",1737,"KRN",9.8,"NM","B","MPIFBT1",11)

"BLD",1737,"KRN",9.8,"NM","B","MPIFBT3",15)

"BLD",1737,"KRN",9.8,"NM","B","MPIFDEL",10)

"BLD",1737,"KRN",9.8,"NM","B","MPIFEXT2",1)

"BLD",1737,"KRN",9.8,"NM","B","MPIFQ0",3)

"BLD",1737,"KRN",9.8,"NM","B","MPIFQ1",6)

"BLD",1737,"KRN",9.8,"NM","B","MPIFQ3",7)

"BLD",1737,"KRN",9.8,"NM","B","MPIFRES",14)

"BLD",1737,"KRN",9.8,"NM","B","MPIFSA2",4)

"BLD",1737,"KRN",9.8,"NM","B","MPIFSA3",12)

"BLD",1737,"KRN",9.8,"NM","B","MPIFSAQ",5)

"BLD",1737,"KRN",9.8,"NM","B","MPIFVTQ",13)

"BLD",1737,"KRN",19,0)
19
"BLD",1737,"KRN",19.1,0)
19.1
"BLD",1737,"KRN",101,0)
101
"BLD",1737,"KRN",409.61,0)
409.61
"BLD",1737,"KRN",771,0)
771
"BLD",1737,"KRN",870,0)
870
"BLD",1737,"KRN",8989.51,0)
8989.51
"BLD",1737,"KRN",8989.52,0)
8989.52
"BLD",1737,"KRN",8994,0)
8994
"BLD",1737,"KRN","B",.4,.4)

"BLD",1737,"KRN","B",.401,.401)

"BLD",1737,"KRN","B",.402,.402)

"BLD",1737,"KRN","B",.403,.403)

"BLD",1737,"KRN","B",.5,.5)

"BLD",1737,"KRN","B",.84,.84)

"BLD",1737,"KRN","B",3.6,3.6)

"BLD",1737,"KRN","B",3.8,3.8)

"BLD",1737,"KRN","B",9.2,9.2)

"BLD",1737,"KRN","B",9.8,9.8)

"BLD",1737,"KRN","B",19,19)

"BLD",1737,"KRN","B",19.1,19.1)

"BLD",1737,"KRN","B",101,101)

"BLD",1737,"KRN","B",409.61,409.61)

"BLD",1737,"KRN","B",771,771)

"BLD",1737,"KRN","B",870,870)

"BLD",1737,"KRN","B",8989.51,8989.51)

"BLD",1737,"KRN","B",8989.52,8989.52)

"BLD",1737,"KRN","B",8994,8994)

"BLD",1737,"QUES",0)
^9.62^^
"BLD",1737,"REQB",0)
^9.611^3^3
"BLD",1737,"REQB",1,0)
MPIF*1.0*27^2
"BLD",1737,"REQB",2,0)
MPIF*1.0*26^2
"BLD",1737,"REQB",3,0)
DG*5.3*505^2
"BLD",1737,"REQB","B","DG*5.3*505",3)

"BLD",1737,"REQB","B","MPIF*1.0*26",2)

"BLD",1737,"REQB","B","MPIF*1.0*27",1)

"MBREQ")
0
"PKG",282,-1)
1^1
"PKG",282,0)
MASTER PATIENT INDEX VISTA^MPIF^Master Patient Index VistA side
"PKG",282,20,0)
^9.402P^^
"PKG",282,22,0)
^9.49I^1^1
"PKG",282,22,1,0)
1.0^2990428
"PKG",282,22,1,"PAH",1,0)
28^3030627
"PKG",282,22,1,"PAH",1,1,0)
^^3^3^3030627
"PKG",282,22,1,"PAH",1,1,1,0)
MPI CHANGES - ITERATION 1
"PKG",282,22,1,"PAH",1,1,2,0)
Refer to patch MPIF*1.0*28 in the FORUM Patch Module for a complete
"PKG",282,22,1,"PAH",1,1,3,0)
description.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","MPIFA24B")
0^9^B5999283
"RTN","MPIFA24B",1,0)
MPIFA24B ;BP/CMC-BUILD A24 ADD ME MSGS ;JULY 22, 2002
"RTN","MPIFA24B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,28**;30 Apr 99
"RTN","MPIFA24B",3,0)
 ;
"RTN","MPIFA24B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA24B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA24B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA24B",7,0)
 ;
"RTN","MPIFA24B",8,0)
A24(DFN) ;BUILD AND SEND A24
"RTN","MPIFA24B",9,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID,PID2
"RTN","MPIFA24B",10,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA24B",11,0)
 S CNT=1
"RTN","MPIFA24B",12,0)
 D INIT^HLFNC2("MPIF ADT-A24 SERVER",.HL)
"RTN","MPIFA24B",13,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA24B",14,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA24B",15,0)
 S ERR="",TCNT=0
"RTN","MPIFA24B",16,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A24",.ERR)
"RTN","MPIFA24B",17,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",18,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA24B",19,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",20,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA24B",21,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",22,0)
 D BLDPID^VAFCQRY(DFN,2,"1,3,5,6,7,8,11,29",.PID2,.HL,.ERR)
"RTN","MPIFA24B",23,0)
 Q:ERR'="" ERR
"RTN","MPIFA24B",24,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA24B",25,0)
 S HLA("HLS",4)=PD1(1)
"RTN","MPIFA24B",26,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",27,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA24B",28,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA24B",29,0)
 S CNT=0 F  S CNT=$O(PID2(CNT)) Q:CNT=""  D
"RTN","MPIFA24B",30,0)
 .I CNT=1 S HLA("HLS",3)=PID2(CNT)
"RTN","MPIFA24B",31,0)
 .I CNT>1 S HLA("HLS",3,CNT-1)=PID2(CNT)
"RTN","MPIFA24B",32,0)
 D GENERATE^HLMA("MPIF ADT-A24 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA24B",33,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA24B",34,0)
 I '+RESLT S ^XTMP("MPIFA24%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"A24 message to MPI for DFN "_DFN,^XTMP("MPIFA24%"_DFN,"MPI",0)="A"
"RTN","MPIFA24B",35,0)
 K HLA,HLEID,HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA24B",36,0)
 Q RESLT
"RTN","MPIFA24B",37,0)
 ;
"RTN","MPIFA24B",38,0)
RT ;
"RTN","MPIFA24B",39,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA24B",40,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA24B",41,0)
 S HLL("LINKS",1)="MPIF ADT-A24 CLIENT^"_MPI
"RTN","MPIFA24B",42,0)
 Q
"RTN","MPIFA24B",43,0)
RES ;
"RTN","MPIFA24B",44,0)
 N NXT,DFN
"RTN","MPIFA24B",45,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA24B",46,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA24B",47,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA24B",48,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA24B",49,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA24B",50,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA24B",51,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA24B",52,0)
 K ^XTMP("MPIFA24%"_DFN)
"RTN","MPIFA24B",53,0)
 Q
"RTN","MPIFA31B")
0^8^B5889158
"RTN","MPIFA31B",1,0)
MPIFA31B ;BP/CMC-BUILD A31 MSGS ;FEB 5, 2002
"RTN","MPIFA31B",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**22,24,27,28**;30 Apr 99
"RTN","MPIFA31B",3,0)
 ;
"RTN","MPIFA31B",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFA31B",5,0)
 ;  START, EXC, STOP^RGHLLOG - #2796
"RTN","MPIFA31B",6,0)
 ;  BLDEVN, BLDPD1, BLDPID^VAFCQRY - #3630
"RTN","MPIFA31B",7,0)
 ;
"RTN","MPIFA31B",8,0)
TA31 ; Tasked entry point
"RTN","MPIFA31B",9,0)
 N TMP
"RTN","MPIFA31B",10,0)
 S TMP=$$A31(DFN)
"RTN","MPIFA31B",11,0)
 Q
"RTN","MPIFA31B",12,0)
 ;
"RTN","MPIFA31B",13,0)
A31(DFN) ;BUILD AND SEND A31
"RTN","MPIFA31B",14,0)
 N RESLT,CNT,MPI,EVN,TCNT,ERR,PD1,PID
"RTN","MPIFA31B",15,0)
 K HLA("HLA"),HLA("HLS")
"RTN","MPIFA31B",16,0)
 Q:$E($$GETICN^MPIF001(DFN),1,3)=$P($$SITE^VASITE(),"^",3) 0
"RTN","MPIFA31B",17,0)
 ; ^ LOCAL ICN DON'T SEND
"RTN","MPIFA31B",18,0)
 Q:+$$GETICN^MPIF001(DFN)=-1 0
"RTN","MPIFA31B",19,0)
 ; ^ NO ICN DON'T SEND
"RTN","MPIFA31B",20,0)
 S CNT=1
"RTN","MPIFA31B",21,0)
 D INIT^HLFNC2("MPIF ADT-A31 SERVER",.HL)
"RTN","MPIFA31B",22,0)
 I $O(HL(""))="" Q "-1^"_$P(HL,"^",2)
"RTN","MPIFA31B",23,0)
 S HLECH=HL("ECH"),HLFS=HL("FS"),COMP=$E(HL("ECH"),1),REP=$E(HL("ECH"),2),SUBCOMP=$E(HL("ECH"),4)
"RTN","MPIFA31B",24,0)
 S ERR="",TCNT=0
"RTN","MPIFA31B",25,0)
 D BLDEVN^VAFCQRY(DFN,"1,2",.EVN,.HL,"A31",.ERR)
"RTN","MPIFA31B",26,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",27,0)
 D BLDPID^VAFCQRY(DFN,1,"1,3,5,6,7,8,11,29",.PID,.HL,.ERR)
"RTN","MPIFA31B",28,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",29,0)
 D BLDPD1^VAFCQRY(DFN,"3",.PD1,.HL,.ERR)
"RTN","MPIFA31B",30,0)
 Q:ERR'="" ERR
"RTN","MPIFA31B",31,0)
 S HLA("HLS",1)=EVN(1)
"RTN","MPIFA31B",32,0)
 S HLA("HLS",3)=PD1(1)
"RTN","MPIFA31B",33,0)
 S CNT=0 F  S CNT=$O(PID(CNT)) Q:CNT=""  D
"RTN","MPIFA31B",34,0)
 .I CNT=1 S HLA("HLS",2)=PID(CNT)
"RTN","MPIFA31B",35,0)
 .I CNT>1 S HLA("HLS",2,CNT-1)=PID(CNT)
"RTN","MPIFA31B",36,0)
 S MPI=$$MPILINK^MPIFAPI()
"RTN","MPIFA31B",37,0)
 Q:$P($G(MPI),"^")=-1 "-1^No logical link defined for the MPI"
"RTN","MPIFA31B",38,0)
 S HLL("LINKS",1)="MPIF ADT-A31 CLIENT^"_MPI
"RTN","MPIFA31B",39,0)
 D GENERATE^HLMA("MPIF ADT-A31 SERVER","LM",1,.HLRESLT,"","")
"RTN","MPIFA31B",40,0)
 S RESLT=$S(+HLRESLT:HLRESLT,1:$P(HLRESLT,"^",3))
"RTN","MPIFA31B",41,0)
 S ^XTMP("MPIFA31%"_DFN,0)=$$FMADD^XLFDT(DT,5)_"^"_DT_"^"_"MPIA31 msg to MPI for DFN "_DFN
"RTN","MPIFA31B",42,0)
 I '+RESLT S ^XTMP("MPIFA31%"_DFN,"MPI",0)="A"
"RTN","MPIFA31B",43,0)
 K HLA,HLEID,HLL("LINKS"),COMP,REP,SUBCOMP,HLECH,HLFS,HLA("HLA"),HLA("HLS"),HLRESLT
"RTN","MPIFA31B",44,0)
 Q RESLT
"RTN","MPIFA31B",45,0)
 ;
"RTN","MPIFA31B",46,0)
RES ;
"RTN","MPIFA31B",47,0)
 N NXT
"RTN","MPIFA31B",48,0)
 F NXT=1:1 X HLNEXT Q:HLQUIT'>0  D
"RTN","MPIFA31B",49,0)
 .I $E(HLNODE,1,3)="MSA" S DFN=$P($P(HLNODE,HL("FS"),7),"=",2)
"RTN","MPIFA31B",50,0)
 .I $E(HLNODE,1,3)="MSA"&($P(HLNODE,HL("FS"),4)'="") D
"RTN","MPIFA31B",51,0)
 ..; ERROR RETURNED IN MSA - LOG EXCEPTION
"RTN","MPIFA31B",52,0)
 ..D START^RGHLLOG(HLMTIEN,"","")
"RTN","MPIFA31B",53,0)
 ..D EXC^RGHLLOG(208,$P(HLNODE,HL("FS"),4)_" for HL msg# "_HLMTIEN,DFN)
"RTN","MPIFA31B",54,0)
 ..D STOP^RGHLLOG(0)
"RTN","MPIFA31B",55,0)
 K ^XTMP("MPIFA31%"_DFN)
"RTN","MPIFA31B",56,0)
 Q
"RTN","MPIFAPI")
0^2^B73901362
"RTN","MPIFAPI",1,0)
MPIFAPI ;CMC/BP-APIS FOR MPI ;DEC 21, 1998
"RTN","MPIFAPI",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,14,16,17,21,27,28**;30 Apr 99
"RTN","MPIFAPI",3,0)
 ;
"RTN","MPIFAPI",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFAPI",5,0)
 ;   ^DPT( - #2070 and #4079
"RTN","MPIFAPI",6,0)
 ;   ^DPT("AICN", ^DPT("AMPIMIS", ^DPT("ASCN2" - #2070
"RTN","MPIFAPI",7,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFAPI",8,0)
 ;   $$SEND2^VAFCUTL1 - #2779
"RTN","MPIFAPI",9,0)
 ;   $$NCEDIT^DPTNAME - #4116
"RTN","MPIFAPI",10,0)
 ;
"RTN","MPIFAPI",11,0)
EN2() ;NEW ENTRY POINT FOR LOCALS
"RTN","MPIFAPI",12,0)
 N MPIOUT,DIC,MPICHK,MPINCK,MPINNM,MPINUM1,DA,MPINUM
"RTN","MPIFAPI",13,0)
 I $O(^MPIF(984.1,0))="" G SETUP
"RTN","MPIFAPI",14,0)
AGN2 L +^MPIF(984.1):1 E  H 3 G AGN2
"RTN","MPIFAPI",15,0)
 S MPINUM=0,X=$$SITE^VASITE,X=$P(X,"^",3),X=X\1
"RTN","MPIFAPI",16,0)
 S DIC="^MPIF(984.1,",DIC(0)="XZ" D ^DIC
"RTN","MPIFAPI",17,0)
 S MPINUM1=$P(Y(0),"^",4),MPICHK=$P(Y(0),"^",5),MPINNM=MPINUM1+1
"RTN","MPIFAPI",18,0)
 S MPINUM=MPINUM1_"V"_MPICHK,MPINCK=$$CHECKDG^MPIFSPC(MPINNM)
"RTN","MPIFAPI",19,0)
 S DA=1,DIE="^MPIF(984.1,",DR="1////^S X=MPINUM1;2////^S X=MPICHK;3////^S X=MPINNM;5////"_MPINCK
"RTN","MPIFAPI",20,0)
 D ^DIE
"RTN","MPIFAPI",21,0)
 K DIE,DR,X,Y
"RTN","MPIFAPI",22,0)
 L -^MPIF(984.1)
"RTN","MPIFAPI",23,0)
 Q MPINUM
"RTN","MPIFAPI",24,0)
SETUP ;
"RTN","MPIFAPI",25,0)
 N CHK,NUM,NXTCHK,NXTNUM,SITE,DA
"RTN","MPIFAPI",26,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFAPI",27,0)
 S DIC="^MPIF(984.1,",DA=1,DIC(0)="",X=SITE
"RTN","MPIFAPI",28,0)
 S NUM=SITE_"0000000",CHK=$$CHECKDG^MPIFSPC(NUM),MPINUM=NUM_"V"_CHK
"RTN","MPIFAPI",29,0)
 S NXTNUM=NUM+1,NXTCHK=$$CHECKDG^MPIFSPC(NXTNUM)
"RTN","MPIFAPI",30,0)
 S DIC("DR")="1////^S X=NUM;2////^S X=CHK;3////^S X=NXTNUM;5////"_NXTCHK
"RTN","MPIFAPI",31,0)
 K DD,D0
"RTN","MPIFAPI",32,0)
 D FILE^DICN
"RTN","MPIFAPI",33,0)
 K DIC,X,Y
"RTN","MPIFAPI",34,0)
 Q MPINUM
"RTN","MPIFAPI",35,0)
 ;
"RTN","MPIFAPI",36,0)
MPILINK() ;returns MPI logical Link
"RTN","MPIFAPI",37,0)
 N MPIL,MPILINK
"RTN","MPIFAPI",38,0)
 D LINK^HLUTIL3("MPI",.MPIL)
"RTN","MPIFAPI",39,0)
 I '$D(MPIL) Q "-1^NOT DEFINED"
"RTN","MPIFAPI",40,0)
 S MPILINK=$O(MPIL(0))
"RTN","MPIFAPI",41,0)
 I MPILINK="" Q "-1^NOT DEFINED"
"RTN","MPIFAPI",42,0)
 S MPILINK=$G(MPIL(MPILINK))
"RTN","MPIFAPI",43,0)
 Q MPILINK
"RTN","MPIFAPI",44,0)
 ;
"RTN","MPIFAPI",45,0)
SUBNUM(DFN) ; returns SCN from MPI node for given DFN
"RTN","MPIFAPI",46,0)
 ; DFN - ien of patient file
"RTN","MPIFAPI",47,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",48,0)
 ;           Subscription Control Number
"RTN","MPIFAPI",49,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",50,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",51,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",52,0)
 N NODE,SUB
"RTN","MPIFAPI",53,0)
 S NODE=$$MPINODE(DFN),SUB=$P(NODE,"^",5)
"RTN","MPIFAPI",54,0)
 I SUB="" S SUB="-1^No Subscription Control Number for DFN "_DFN
"RTN","MPIFAPI",55,0)
 Q SUB
"RTN","MPIFAPI",56,0)
 ;
"RTN","MPIFAPI",57,0)
MPINODE(DFN) ; returns MPI node for given DFN
"RTN","MPIFAPI",58,0)
 ; DFN - patient file ien
"RTN","MPIFAPI",59,0)
 ; returns:  -1^error message or MPI node from patient file
"RTN","MPIFAPI",60,0)
 I '$D(DFN) Q "-1^DFN not defined"
"RTN","MPIFAPI",61,0)
 I '$D(^DPT(DFN)) Q "-1^DFN doesn't exist"
"RTN","MPIFAPI",62,0)
 I '$D(^DPT(DFN,"MPI")) Q "-1^No MPI node for DFN "_DFN
"RTN","MPIFAPI",63,0)
 N NODE S NODE=$G(^DPT(DFN,"MPI"))
"RTN","MPIFAPI",64,0)
 I NODE=""!(NODE?."^") S NODE="-1^No MPI data for DFN "_DFN
"RTN","MPIFAPI",65,0)
 Q NODE
"RTN","MPIFAPI",66,0)
 ;
"RTN","MPIFAPI",67,0)
GETADFN(ICN) ; return DFN ONLY if ICN is the active ICN
"RTN","MPIFAPI",68,0)
 ; ICN - Integration Control Number for patient to be returned
"RTN","MPIFAPI",69,0)
 ; returns:  -1^error message
"RTN","MPIFAPI",70,0)
 ;           DFN - IEN for the patient entry in the Patient file (#2)
"RTN","MPIFAPI",71,0)
 N RETURN,DFN
"RTN","MPIFAPI",72,0)
 I $G(ICN)'>0 Q "-1^NO ICN"
"RTN","MPIFAPI",73,0)
 I '$D(^DPT("AICN",ICN)) Q "-1^ICN NOT IN DATABASE"
"RTN","MPIFAPI",74,0)
 S DFN=$O(^DPT("AICN",ICN,0))
"RTN","MPIFAPI",75,0)
 I $G(DFN)'>0 Q "-1^BAD AICN CROSS-REFERENCE"
"RTN","MPIFAPI",76,0)
 I $P($G(^DPT(DFN,"MPI")),"^")'=ICN Q "-1^ICN is not Active one"
"RTN","MPIFAPI",77,0)
 Q DFN
"RTN","MPIFAPI",78,0)
 ;
"RTN","MPIFAPI",79,0)
UPDATE(DFN,ARR,MPISILNT) ;api to edit 'mpi','mpifhis' and 'mpicmor' nodes
"RTN","MPIFAPI",80,0)
 ;DFN - patient IEN
"RTN","MPIFAPI",81,0)
 ;ARR - array in the format listed below
"RTN","MPIFAPI",82,0)
 ; MPI node by passing in ARR(field#)=value
"RTN","MPIFAPI",83,0)
 ;  **NOTE:  991.04 is only edited based on the edit of 991.01
"RTN","MPIFAPI",84,0)
 ;           991.03 should be passed with either "@" or IEN in File 4
"RTN","MPIFAPI",85,0)
 ; MPIFHIS node by passing ARR(992)=old ICN to remove from multiple
"RTN","MPIFAPI",86,0)
 ; MPICMOR node by passing ARR(993)=old CMOR to remove from multiple
"RTN","MPIFAPI",87,0)
 ;MPISILNT(optional) - 0 to not suppress exceptions (default)
"RTN","MPIFAPI",88,0)
 ;                     1 to suppress exceptions
"RTN","MPIFAPI",89,0)
 ;Returns : -1^error message if unable to update fields
"RTN","MPIFAPI",90,0)
 ;          0 if successfully updated fields
"RTN","MPIFAPI",91,0)
 ;
"RTN","MPIFAPI",92,0)
 N MPIRETN,MPIX,VALUE,ICN,SCN,ICN2
"RTN","MPIFAPI",93,0)
 I DFN'>0 Q "-1^DFN passed into UPDATE^MPIFAPI not greater than 0"
"RTN","MPIFAPI",94,0)
 Q:'$D(^DPT(DFN,0)) "-1^DFN "_DFN_" does not exist"
"RTN","MPIFAPI",95,0)
 S MPIRETN=0,RGRSICN=""
"RTN","MPIFAPI",96,0)
 F  L +^DPT("MPI",DFN):10 Q:$T
"RTN","MPIFAPI",97,0)
 I $D(@ARR@(991.01)) D
"RTN","MPIFAPI",98,0)
 . I '$D(@ARR@(991.02)) S MPIRETN="-1^ICN "_ICN_", passed without checksum" Q
"RTN","MPIFAPI",99,0)
 . ;quit if local is going to overwrite national
"RTN","MPIFAPI",100,0)
 . S ICN=+$$GETICN^MPIF001(DFN) I ICN>0 I $E(@ARR@(991.01),1,3)=$P($$SITE^VASITE(),"^",3),$E(ICN,1,3)'=$E(@ARR@(991.01),1,3) S MPIRETN="-1^Overwriting the National ICN, "_ICN_", with a local, "_@ARR@(991.01)_", isn't allowed" Q
"RTN","MPIFAPI",101,0)
 .;quit if this is a test patient and not deleting ICN
"RTN","MPIFAPI",102,0)
 .I +$$SEND2^VAFCUTL1(DFN,"T")=1&(@ARR@(991.01)'="@") S MPIRETN="-1^Pt DFN "_DFN_" has been ZZ'd or has 5 leading 0s" Q
"RTN","MPIFAPI",103,0)
 .; quit if ICN has already been assigned to another patient in your data base
"RTN","MPIFAPI",104,0)
 .S ICN2=@ARR@(991.01)
"RTN","MPIFAPI",105,0)
 .I $D(^DPT("AICN",ICN2)),DFN'=$O(^DPT("AICN",ICN2,"")) D
"RTN","MPIFAPI",106,0)
 ..N RGLOG D START^RGHLLOG(0)
"RTN","MPIFAPI",107,0)
 ..I DFN'=($O(^DPT("AICN",ICN2,""))) D EXC^RGHLLOG(227,"Patient dfn "_DFN_"  returned ICN "_ICN2_" that is already in use for Patient dfn "_$O(^DPT("AICN",ICN2,""))_" Checkout pair to determine if a Duplicate.",DFN)
"RTN","MPIFAPI",108,0)
 ..D STOP^RGHLLOG(0) S MPIRETN="-1^ICN "_ICN2_" is already in use for pt DFN "_DFN
"RTN","MPIFAPI",109,0)
 .Q:+MPIRETN=-1
"RTN","MPIFAPI",110,0)
 . K FDA S FDA(1,2,DFN_",",991.01)=@ARR@(991.01)
"RTN","MPIFAPI",111,0)
 . K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ICN (DFN="_DFN_") ICN to "_@ARR@(991.01)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI",112,0)
 . I +MPIRETN'=0 Q
"RTN","MPIFAPI",113,0)
 . K FDA S FDA(1,2,DFN_",",991.02)=@ARR@(991.02)
"RTN","MPIFAPI",114,0)
 . K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to update pt's ("_DFN_") ICN Checksum to "_@ARR@(991.02)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI",115,0)
 . I +MPIRETN'=0 Q
"RTN","MPIFAPI",116,0)
 . K FDA S FDA(1,2,DFN_",",991.04)="@"
"RTN","MPIFAPI",117,0)
 . K MPIERR D FILE^DIE("E","FDA(1)","MPIERR") K FDA(1) I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_" LOCALLY ASSIGNED ICN field because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI",118,0)
 I MPIRETN=0 I $D(@ARR@(991.03)) D
"RTN","MPIFAPI",119,0)
 . I @ARR@(991.03)="@" K FDA S FDA(1,2,DFN_",",991.03)="@"
"RTN","MPIFAPI",120,0)
 . I @ARR@(991.03)'="@" I @ARR@(991.03)>0 I $$STA^XUAF4(@ARR@(991.03))'="" S FDA(1,2,DFN_",",991.03)="`"_@ARR@(991.03)
"RTN","MPIFAPI",121,0)
 . D FILE^DIE("E","FDA(1)","MPIERR") I $D(MPIERR("DIERR")) D
"RTN","MPIFAPI",122,0)
 .. S MPIRETN="-1^Unable to update pt's ("_DFN_") CMOR to "_@ARR@(991.03)_" because "_MPIERR("DIERR",1,"TEXT",1)
"RTN","MPIFAPI",123,0)
 .. I +$G(MPISILNT)=0 N RGLOG D START^RGHLLOG(0) D EXC^RGHLLOG(221,"Unable to update CMOR to "_@ARR@(991.03)_" for DFN="_DFN,DFN) D STOP^RGHLLOG(0)
"RTN","MPIFAPI",124,0)
 I MPIRETN=0 I $D(@ARR@(991.05)) D
"RTN","MPIFAPI",125,0)
 . I @ARR@(991.05)="@" D
"RTN","MPIFAPI",126,0)
 .. S SCN=$$SUBNUM(DFN),DA=SCN,DIK="^HLS(774," D ^DIK K DIK,DA
"RTN","MPIFAPI",127,0)
 .. S $P(^DPT(DFN,"MPI"),"^",5)=""
"RTN","MPIFAPI",128,0)
 .. K ^DPT("ASCN2",SCN,DFN)
"RTN","MPIFAPI",129,0)
 . I @ARR@(991.05)'="@" D
"RTN","MPIFAPI",130,0)
 .. ;do edit and return result
"RTN","MPIFAPI",131,0)
 .. S DIE="^DPT(",DA=DFN,DR="991.05///^S X=@ARR@(991.05)" D ^DIE
"RTN","MPIFAPI",132,0)
 I MPIRETN=0 I $D(@ARR@(992)) D
"RTN","MPIFAPI",133,0)
 . ;delete old value from history multiple
"RTN","MPIFAPI",134,0)
 . S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPIFHIS",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPIFHIS",MPIX,0) I $P(VALUE,"^")=@ARR@(992) D
"RTN","MPIFAPI",135,0)
 .. K ^DPT("AICN",@ARR@(992),DFN),MPIERR,FDA
"RTN","MPIFAPI",136,0)
 .. S FDA(1,2.0992,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI",137,0)
 .. I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_")  ICN "_@ARR@(992)_" from ICN HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI",138,0)
 I MPIRETN=0 I $D(@ARR@(993)) D
"RTN","MPIFAPI",139,0)
 . ;delete old value from history multiple
"RTN","MPIFAPI",140,0)
 . S MPIX=0 F  S MPIX=$O(^DPT(DFN,"MPICMOR",MPIX)) Q:'MPIX  S VALUE=^DPT(DFN,"MPICMOR",MPIX,0) I $P(VALUE,"^")=@ARR@(993) D
"RTN","MPIFAPI",141,0)
 .. K FDA,MPIERR S FDA(1,2.0993,MPIX_","_DFN_",",.01)="@" D FILE^DIE("","FDA(1)","MPIERR")
"RTN","MPIFAPI",142,0)
 .. I $D(MPIERR("DIERR")) S MPIRETN="-1^Unable to delete pt's ("_DFN_") CMOR "_@ARR@(993)_" from CMOR HISTORY because "_MPIERR("DIERR",1,"TEXT",1) K MPIERR,FDA
"RTN","MPIFAPI",143,0)
 K ^DPT("AMPIMIS",DFN),RGRSICN
"RTN","MPIFAPI",144,0)
 L -^DPT("MPI",DFN)
"RTN","MPIFAPI",145,0)
 Q MPIRETN
"RTN","MPIFAPI",146,0)
 ;
"RTN","MPIFAPI",147,0)
MPIQ(DFN) ;MPI QUERY
"RTN","MPIFAPI",148,0)
 L +^DPT(DFN):2 I '$T,'$D(MPIFS) W $C(7),!!,"Patient is being edited. No attempt will be made to connect to the MPI." H 2 Q
"RTN","MPIFAPI",149,0)
 I '$D(MPIFS) D  ;Not from SmartCard background job, so ask fields.
"RTN","MPIFAPI",150,0)
 .W !!,"Please verify or update the following information:",!
"RTN","MPIFAPI",151,0)
 .S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",152,0)
 .I $G(DGNEW)=1 S DR=".2403;.092;.093;1",DR(2,2.01)=".01" D ^DIE K DIE,DA,DR Q
"RTN","MPIFAPI",153,0)
 .I $G(DGNEW)="" D  ;existing patient
"RTN","MPIFAPI",154,0)
 ..S MPIFBFR=$$GET1^DIQ(2,+DFN_",",.01)
"RTN","MPIFAPI",155,0)
 ..S DR=".01" D ^DIE K DIE,DA,DR ;prompt for name 
"RTN","MPIFAPI",156,0)
 ..S MPIFAFT=$$GET1^DIQ(2,+DFN_",",.01)
"RTN","MPIFAPI",157,0)
 ..I MPIFBFR'=MPIFAFT D  ;if name has been edited
"RTN","MPIFAPI",158,0)
 ...S X="DPTNAME" X ^%ZOSF("TEST") I $T D
"RTN","MPIFAPI",159,0)
 ....K MPIF20,MPIFNV S DIE="^DPT(",DA=DFN,DR=".01///^S (X,MPIFNV)=$$NCEDIT^DPTNAME(DA,1,.MPIF20)" D ^DIE K DIE,DA,DR,MPIF20,MPIFNV
"RTN","MPIFAPI",160,0)
 ..S DIE="^DPT(",DA=DFN,DIE("NO^")="BACK"
"RTN","MPIFAPI",161,0)
 ..S DR=".03;.02;.09;994;.2403;.092;.093;1",DR(2,2.01)=".01"
"RTN","MPIFAPI",162,0)
 ..D ^DIE K DIE,DA,DR,MPIFBFR,MPIFAFT
"RTN","MPIFAPI",163,0)
 L -^DPT(DFN)
"RTN","MPIFAPI",164,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFAPI",165,0)
 K MPIFRTN D VTQ^MPIFQ0
"RTN","MPIFAPI",166,0)
 I $G(MPIFRTN)="" D
"RTN","MPIFAPI",167,0)
 .; ^ Quit at LM screen when presented with a list of possible matches
"RTN","MPIFAPI",168,0)
 .; \/ setup Local ICN and proceed
"RTN","MPIFAPI",169,0)
 .N ICN,ERR
"RTN","MPIFAPI",170,0)
 .S ICN=$$EN2^MPIFAPI()
"RTN","MPIFAPI",171,0)
 .Q:ICN=""!(+ICN=-1)
"RTN","MPIFAPI",172,0)
 .S ERR=$$SETICN^MPIF001(DFN,+ICN,$P(ICN,"V",2))
"RTN","MPIFAPI",173,0)
 .Q:+ERR=-1
"RTN","MPIFAPI",174,0)
 .; ^ couldn't set ICN don't set other fields
"RTN","MPIFAPI",175,0)
 .S ERR=$$SETLOC^MPIF001(DFN,1),ERR=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFAPI",176,0)
 K MPIFRTN,ZTREQ
"RTN","MPIFAPI",177,0)
 Q
"RTN","MPIFAPI",178,0)
MPIQQ(PDFN) ; Entry point for queuing d/c
"RTN","MPIFAPI",179,0)
 ; Returned is -1^error message OR Task #
"RTN","MPIFAPI",180,0)
 Q:'$D(PDFN) "-1^No DFN passed"
"RTN","MPIFAPI",181,0)
 S ZTRTN="MPIQ^MPIFAPI(PDFN)"
"RTN","MPIFAPI",182,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFAPI",183,0)
 S ZTSAVE("PDFN")=PDFN,ZTSAVE("MPIFS")=1
"RTN","MPIFAPI",184,0)
 ; ^ silent flag
"RTN","MPIFAPI",185,0)
 S ZTIO="",ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFAPI",186,0)
 D ^%ZTLOAD
"RTN","MPIFAPI",187,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFAPI",188,0)
 N TSK S TSK=ZTSK
"RTN","MPIFAPI",189,0)
 K ZTSAVE,ZTRTN,ZTIO,ZTDTH,ZTSK
"RTN","MPIFAPI",190,0)
 Q TSK
"RTN","MPIFAPI",191,0)
 ;
"RTN","MPIFBT1")
0^11^B36944269
"RTN","MPIFBT1",1,0)
MPIFBT1 ;SLC/ARS/SFCIO/CMC-BATCH QUERY TO MPI ;FEB 4, 1997
"RTN","MPIFBT1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**17,28**;30 Apr 99
"RTN","MPIFBT1",3,0)
 ;
"RTN","MPIFBT1",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFBT1",5,0)
 ;  EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFBT1",6,0)
 ;  ^DPT("ACMORS" - #2070
"RTN","MPIFBT1",7,0)
 ;  ^RGSITE(991.8,1,"CMOR" - #2746
"RTN","MPIFBT1",8,0)
 ;
"RTN","MPIFBT1",9,0)
GOBKG ;
"RTN","MPIFBT1",10,0)
 K STOP
"RTN","MPIFBT1",11,0)
 ;make sure only one job will run
"RTN","MPIFBT1",12,0)
 L +^XTMP("MPIF BATCH LOAD"):3 E  W !,"JOB ALREADY RUNNING" Q
"RTN","MPIFBT1",13,0)
 ;
"RTN","MPIFBT1",14,0)
 I '$D(^RGSITE(991.8,1,"CMOR")) W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",15,0)
 I $D(^RGSITE(991.8,1,"CMOR")),$P($G(^RGSITE(991.8,1,"CMOR")),"^",7)'="SN" W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",16,0)
 ;
"RTN","MPIFBT1",17,0)
 ;Check to see if job had STOPed -start where left off, start over or quit
"RTN","MPIFBT1",18,0)
 I $P($G(^MPIF(984.8,1,0)),"^",6)'="" D AGAIN
"RTN","MPIFBT1",19,0)
 I $D(STOP) W !,"Job NOT Started" K STOP G EXIT
"RTN","MPIFBT1",20,0)
 D BEG
"RTN","MPIFBT1",21,0)
 I $D(STOP) K STOP G EXIT
"RTN","MPIFBT1",22,0)
 S ZTRTN="GO^MPIFBT1",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFBT1",23,0)
 S ZTIO="",ZTDTH=START
"RTN","MPIFBT1",24,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFBT1",25,0)
 I $D(ORDER) S ZTSAVE("ORDER")=ORDER
"RTN","MPIFBT1",26,0)
 D ^%ZTLOAD W:$D(ZTSK) !,"TASK #: ",ZTSK
"RTN","MPIFBT1",27,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFBT1",28,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,ORDER,START,ENDT
"RTN","MPIFBT1",29,0)
 Q
"RTN","MPIFBT1",30,0)
EXIT ;
"RTN","MPIFBT1",31,0)
 L -^XTMP("MPIF BATCH LOAD")
"RTN","MPIFBT1",32,0)
 Q
"RTN","MPIFBT1",33,0)
 ;
"RTN","MPIFBT1",34,0)
BEG K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",35,0)
 S DIR(0)="D^::AEFT",DIR("B")="NOW",DIR("A")="START TIME"
"RTN","MPIFBT1",36,0)
 D ^DIR
"RTN","MPIFBT1",37,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",38,0)
 S START=Y
"RTN","MPIFBT1",39,0)
 D DD^%DT
"RTN","MPIFBT1",40,0)
 S ENDT=Y
"RTN","MPIFBT1",41,0)
TRY K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",42,0)
 S DIR(0)="D^::AEFT",DIR("B")=ENDT,DIR("A")="STOP TIME"
"RTN","MPIFBT1",43,0)
 D ^DIR
"RTN","MPIFBT1",44,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",45,0)
 I Y'>START W !,"Stop Time must be greater than Start Time" G TRY
"RTN","MPIFBT1",46,0)
 D DD^%DT
"RTN","MPIFBT1",47,0)
 S ENDT=Y
"RTN","MPIFBT1",48,0)
 K DIR,DIE,DR,DA,X,Y
"RTN","MPIFBT1",49,0)
 S DIE="^MPIF(984.8,",DR="9///"_ENDT,DA=1 D ^DIE
"RTN","MPIFBT1",50,0)
 K DIE,X,Y,DA,DR
"RTN","MPIFBT1",51,0)
 I $D(DTOUT)!($D(DUOUT)) W !,"Job NOT Scheduled" K DTOUT,DUOUT,DIR,DA,X,Y S STOP="" Q
"RTN","MPIFBT1",52,0)
 Q
"RTN","MPIFBT1",53,0)
 ;
"RTN","MPIFBT1",54,0)
GO ;ENTRY POINT
"RTN","MPIFBT1",55,0)
 I '$D(ZTQUEUED) L +^XTMP("MPIF BATCH LOAD"):3 E  W !,"JOB ALREADY RUNNING" Q
"RTN","MPIFBT1",56,0)
 I '$D(ZTQUEUED),('$D(^RGSITE(991.8,1,"CMOR"))) W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",57,0)
 I '$D(ZTQUEUED),$D(^RGSITE(991.8,1,"CMOR")),$P($G(^RGSITE(991.8,1,"CMOR")),"^",7)'="SN" W !,"CMOR Scores NOT Complete" G EXIT
"RTN","MPIFBT1",58,0)
 K STOP
"RTN","MPIFBT1",59,0)
 ;Check to see if job had STOPed-start where left off, start over or quit
"RTN","MPIFBT1",60,0)
 I '$D(ZTQUEUED),$P($G(^MPIF(984.8,1,0)),"^",6)'="" D AGAIN
"RTN","MPIFBT1",61,0)
 I $D(STOP) W !,"Job NOT Started" K STOP G EXIT
"RTN","MPIFBT1",62,0)
 I '$D(ZTQUEUED) D BEG
"RTN","MPIFBT1",63,0)
 I $D(STOP) K STOP G EXIT
"RTN","MPIFBT1",64,0)
GO1 K ^TMP("HLS",$J)
"RTN","MPIFBT1",65,0)
 N MPIMORE,MPITOT
"RTN","MPIFBT1",66,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFBT1",67,0)
 S QUITIME=$P(^MPIF(984.8,1,0),"^",10)
"RTN","MPIFBT1",68,0)
 I '$D(ORDER) S ORDER=0
"RTN","MPIFBT1",69,0)
 ;
"RTN","MPIFBT1",70,0)
 K ^TMP("HLS",$J)
"RTN","MPIFBT1",71,0)
 S MPICNT=$S($P(^MPIF(984.8,1,0),"^",9)>1:$P(^MPIF(984.8,1,0),"^",9),1:1)
"RTN","MPIFBT1",72,0)
 I +ORDER<1 S ORDER=0
"RTN","MPIFBT1",73,0)
 D WORK
"RTN","MPIFBT1",74,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFBT1",75,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFBT1",76,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIMIDT,MPIMSH
"RTN","MPIFBT1",77,0)
 K MPIOUT,MPIQRYNM,MPISEQ,ORDER,QCNT,QUITIME,MPIMCNT,MPIMTX,ORDER,START
"RTN","MPIFBT1",78,0)
 K ENDT
"RTN","MPIFBT1",79,0)
 L -^XTMP("MPIF BATCH LOAD")
"RTN","MPIFBT1",80,0)
 Q
"RTN","MPIFBT1",81,0)
WORK ;
"RTN","MPIFBT1",82,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",83,0)
 D NOW^%DTC
"RTN","MPIFBT1",84,0)
 S $P(^MPIF(984.8,1,0),"^",2)=%
"RTN","MPIFBT1",85,0)
 I %>QUITIME Q
"RTN","MPIFBT1",86,0)
 S MPIMCNT="",MPIMTX=""
"RTN","MPIFBT1",87,0)
 D HLRDF,LOOP
"RTN","MPIFBT1",88,0)
 Q
"RTN","MPIFBT1",89,0)
 ;
"RTN","MPIFBT1",90,0)
HLRDF ;
"RTN","MPIFBT1",91,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFBT1",92,0)
 S HL("ECH")="^~\&"
"RTN","MPIFBT1",93,0)
 S HL("FS")="|"
"RTN","MPIFBT1",94,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.HL)
"RTN","MPIFBT1",95,0)
 I $O(HL("")) S ^TMP($J,"MPIF","ERR")=HL
"RTN","MPIFBT1",96,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFBT1",97,0)
 D START^RGHLLOG()
"RTN","MPIFBT1",98,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",99,0)
 S $P(^MPIF(984.8,1,0),"^",7)=MPIMCNT
"RTN","MPIFBT1",100,0)
 S $P(^MPIF(984.8,1,0),"^",8)=MPIMTX
"RTN","MPIFBT1",101,0)
 Q
"RTN","MPIFBT1",102,0)
LOOP ;
"RTN","MPIFBT1",103,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",104,0)
 S MPIDNUM=1
"RTN","MPIFBT1",105,0)
 D MAKE
"RTN","MPIFBT1",106,0)
 Q
"RTN","MPIFBT1",107,0)
SEND ;ready to send
"RTN","MPIFBT1",108,0)
 S $P(^MPIF(984.8,1,0),"^",5)="GENERATE TAG"
"RTN","MPIFBT1",109,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFBT1",110,0)
 I +MPIEROR=0 S ^TMP($J,"MPIF","ERR")=MPIEROR
"RTN","MPIFBT1",111,0)
 D NOW^%DTC
"RTN","MPIFBT1",112,0)
 S $P(^MPIF(984.8,1,0),"^",3)=%
"RTN","MPIFBT1",113,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFBT1",114,0)
 K ^TMP("HLS",$J)
"RTN","MPIFBT1",115,0)
 Q
"RTN","MPIFBT1",116,0)
MAKE ;
"RTN","MPIFBT1",117,0)
 F  S ORDER=$O(^DPT("ACMORS",ORDER)) Q:ORDER=""!($P(^MPIF(984.8,1,0),"^",6)="STOP")  D
"RTN","MPIFBT1",118,0)
 .S MPIIT=0
"RTN","MPIFBT1",119,0)
 .F  S MPIIT=$O(^DPT("ACMORS",ORDER,MPIIT)) Q:MPIIT=""!($P(^MPIF(984.8,1,0),"^",6)="STOP")  D
"RTN","MPIFBT1",120,0)
 ..D MAKE3
"RTN","MPIFBT1",121,0)
 ..D NOW^%DTC
"RTN","MPIFBT1",122,0)
 ..I %>QUITIME S $P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",123,0)
 Q
"RTN","MPIFBT1",124,0)
MAKE3 ;
"RTN","MPIFBT1",125,0)
 K MPIOUT
"RTN","MPIFBT1",126,0)
 Q:$P(^MPIF(984.8,1,0),"^",6)="STOP"
"RTN","MPIFBT1",127,0)
 S $P(^MPIF(984.8,1,0),"^",5)="LOOPING: "_MPIDNUM
"RTN","MPIFBT1",128,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFBT1",129,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFBT1",130,0)
 I $P(MPIOUT(0),"^",1)<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D
"RTN","MPIFBT1",131,0)
 .D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFBT1",132,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="Missing Required Field(s)" D EXC^RGHLLOG(209,"DFN - "_MPIIT_" Missing Required Field(s)",MPIIT) Q
"RTN","MPIFBT1",133,0)
 Q:$P(MPIOUT(0),"^")<0
"RTN","MPIFBT1",134,0)
 ;call for HL7 header
"RTN","MPIFBT1",135,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFBT1",136,0)
 D MSH^HLFNC2(.HL,MPIMIDT,.MPIMSH)
"RTN","MPIFBT1",137,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFBT1",138,0)
 ;MESSAGE BUILT
"RTN","MPIFBT1",139,0)
 S MPISEQ=0
"RTN","MPIFBT1",140,0)
 F  S MPISEQ=$O(MPIOUT(MPISEQ)) Q:MPISEQ'>0  D
"RTN","MPIFBT1",141,0)
 .S ^TMP("HLS",$J,MPICNT)=MPIOUT(MPISEQ)
"RTN","MPIFBT1",142,0)
 .S MPICNT=MPICNT+1
"RTN","MPIFBT1",143,0)
 S $P(^MPIF(984.8,1,0),"^",11)=ORDER
"RTN","MPIFBT1",144,0)
 S $P(^MPIF(984.8,1,0),"^",9)=MPICNT
"RTN","MPIFBT1",145,0)
 S $P(^MPIF(984.8,1,0),"^",4)=MPIIT
"RTN","MPIFBT1",146,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFBT1",147,0)
 I MPIDNUM>100 D
"RTN","MPIFBT1",148,0)
 .D SEND
"RTN","MPIFBT1",149,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFBT1",150,0)
 .D HLRDF
"RTN","MPIFBT1",151,0)
 Q
"RTN","MPIFBT1",152,0)
 ;
"RTN","MPIFBT1",153,0)
AGAIN ;job started before
"RTN","MPIFBT1",154,0)
 W !,"Job was started before and has Stopped"
"RTN","MPIFBT1",155,0)
 K DIR,DR
"RTN","MPIFBT1",156,0)
 S DIR(0)="Y",DIR("B")="YES",DIR("A")="Begin Where Left Off? ",DIR("?")="Y for yes to start where job left off, N for no"
"RTN","MPIFBT1",157,0)
 D ^DIR
"RTN","MPIFBT1",158,0)
 I Y=1 S ORDER=$P(^MPIF(984.8,1,0),"^",11),$P(^MPIF(984.8,1,0),"^",6)="" G END
"RTN","MPIFBT1",159,0)
 ;job started but used doesn't want to start where job left off
"RTN","MPIFBT1",160,0)
 W !,"'E' - Exit or 'O' - Start over from the Beginning"
"RTN","MPIFBT1",161,0)
 K DIR,DR
"RTN","MPIFBT1",162,0)
 S DIR(0)="S^E:EXIT;O:OVER",DIR("?")="E for Exit, O to Start Over from the Beginning"
"RTN","MPIFBT1",163,0)
 S DIR("A")="What would you like to do?"
"RTN","MPIFBT1",164,0)
 D ^DIR
"RTN","MPIFBT1",165,0)
 S:Y="E" STOP=""
"RTN","MPIFBT1",166,0)
 S:Y="O" ORDER=0,$P(^MPIF(984.8,1,0),"^",6)=""
"RTN","MPIFBT1",167,0)
END ;
"RTN","MPIFBT1",168,0)
 K DIR,Y,DR,X
"RTN","MPIFBT1",169,0)
 ; wants to start over or from where job left off if '$d(stop)
"RTN","MPIFBT1",170,0)
 Q
"RTN","MPIFBT3")
0^15^B23902057
"RTN","MPIFBT3",1,0)
MPIFBT3 ;SLC/ARS-BATCH RESPONSE FROM MPI ;FEB 4, 1997
"RTN","MPIFBT3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,10,17,21,24,28**;30 Apr 99
"RTN","MPIFBT3",3,0)
 ;
"RTN","MPIFBT3",4,0)
 ; Intergration Agreements Utilized:
"RTN","MPIFBT3",5,0)
 ;  ^DPT("AICN", ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFBT3",6,0)
 ;  EXC^RGHLLOG - #2796
"RTN","MPIFBT3",7,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFBT3",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFBT3",9,0)
 ;
"RTN","MPIFBT3",10,0)
MULT(CNTR,ACK5,SEP,MPIMSG,PATID) ;multiple RDT segments
"RTN","MPIFBT3",11,0)
 N NEXTTF,MPITMP S CNTR=$O(^XTMP($J,"MPIF","MPIIN",CNTR)),NEXTTF=$P(ACK5,SEP,8)
"RTN","MPIFBT3",12,0)
 S MPITMP=$O(^XTMP($J,"MPIF","MPIIN",CNTR)) Q:MPITMP'>0
"RTN","MPIFBT3",13,0)
 S ACK5=^XTMP($J,"MPIF","MPIIN",MPITMP) K NEXTTF,MPITMP
"RTN","MPIFBT3",14,0)
 I $P(ACK5,SEP)="RDT" D MULT(.CNTR,ACK5,SEP,MPIMSG,PATID) ; ^ add to treating facility list.  If not RDT continue on processing next msh
"RTN","MPIFBT3",15,0)
 Q
"RTN","MPIFBT3",16,0)
VFYRDT(ACK4,SEP,CNTR,PATID,SITE,MPIMSG) ;Here is the meat
"RTN","MPIFBT3",17,0)
 N MPIY,IEN,MPICMOR S DGSENFLG=""
"RTN","MPIFBT3",18,0)
 D FINDHM(PATID,ACK4,SEP,.MPIY,MPIMSG,CNTR)
"RTN","MPIFBT3",19,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",20,0)
 N MPINUM,MPICKG,MPIIT,DR,DIE,X,MPIIPPF,MPIPPF,RESLT
"RTN","MPIFBT3",21,0)
 S MPINUM=$P(ACK4,SEP,6),MPICKG=$P(MPINUM,"V",2),MPINUM=$P(MPINUM,"V",1)
"RTN","MPIFBT3",22,0)
 ;check if ICN already in use in Patient file
"RTN","MPIFBT3",23,0)
 I $D(^DPT("AICN",MPINUM)) D
"RTN","MPIFBT3",24,0)
 .Q:PATID=$O(^DPT("AICN",MPINUM,""))   ; same patient
"RTN","MPIFBT3",25,0)
 .S ^XTMP($J,"MPIF","MSHERR")="ICN already in use"
"RTN","MPIFBT3",26,0)
 .D EXC^RGHLLOG(227,"Patient dfn "_PATID_" returned ICN "_MPINUM_" that is already in use for Patient dfn "_$O(^DPT("AICN",MPINUM,""))_" Checkout pair to determine if a Duplicate.",PATID)
"RTN","MPIFBT3",27,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",28,0)
 S DIE="^DPT(",DA=$P(MPIY,"^",1),MPIIT=$P(MPIY,"^",1),DR="991.01////^S X=MPINUM;991.02////^S X=MPICKG" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",29,0)
 S IEN=$P(MPIY,"^") ; check if need to kill Local/MISSING ICN field
"RTN","MPIFBT3",30,0)
 I $D(^DPT("AMPIMIS",IEN)) K ^DPT("AMPIMIS",IEN)
"RTN","MPIFBT3",31,0)
 I $D(^DPT("AICNL",1,IEN)) D
"RTN","MPIFBT3",32,0)
 .S DIE="^DPT(",DA=IEN,DR="991.04///@" D ^DIE K DR,DIE,DA
"RTN","MPIFBT3",33,0)
 S MPIIPPF=""
"RTN","MPIFBT3",34,0)
 S MPIPPF=$P(ACK4,SEP,5),MPICMOR=$$LKUP^XUAF4(MPIPPF)
"RTN","MPIFBT3",35,0)
 I MPICMOR'="" S MPIIPPF=$$CHANGE^MPIF001(MPIIT,MPICMOR)
"RTN","MPIFBT3",36,0)
 I +MPIIPPF<0 D EXC^RGHLLOG(211,"Around line number "_(CNTR*2)_"  CMOR= "_MPIPPF_" DFN= "_MPIIT_"  MESSAGE# "_MPIMSG,MPIIT)
"RTN","MPIFBT3",37,0)
 Q:+MPIIPPF<0
"RTN","MPIFBT3",38,0)
 S RESLT=$$A24^MPIFA24B(PATID)
"RTN","MPIFBT3",39,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFBT3",40,0)
 Q
"RTN","MPIFBT3",41,0)
FINDHM(PATID,ACK4,SEP,MPIY,MPIMSG,CNTR) ;LOOKUP
"RTN","MPIFBT3",42,0)
 N DIC,X,Y,NM,YTMP,MPIN
"RTN","MPIFBT3",43,0)
 ;added I to DIC(0) allow processing of sensative patients when DUZ=0
"RTN","MPIFBT3",44,0)
 S DGSENFLG="",DIC="^DPT(",DIC(0)="OISZ",X="`"_PATID D ^DIC K DIC
"RTN","MPIFBT3",45,0)
 S YTMP=Y
"RTN","MPIFBT3",46,0)
 I YTMP=-1 S ^XTMP($J,"MPIF","MSHERR")="LOOKUP FAILED" D EXC^RGHLLOG(210,"SSN = "_$P(ACK4,SEP,3)_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",47,0)
 Q:YTMP=-1
"RTN","MPIFBT3",48,0)
 S NM=$P(Y(0),"^"),YTMP=$G(Y(0)),MPIY=Y ; check if ICN already populated
"RTN","MPIFBT3",49,0)
 N ICN S ICN=$$GETICN^MPIF001(PATID)
"RTN","MPIFBT3",50,0)
 I +ICN'=-1,$E(+ICN,1,3)'=$P($$SITE^VASITE,"^",3) S ^XTMP($J,"MPIF","MSHERR")="Patient "_PATID_" Already has an ICN"
"RTN","MPIFBT3",51,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",52,0)
 S Y(0)=$G(YTMP)
"RTN","MPIFBT3",53,0)
 Q:$P(Y(0),"^",9)["P"&($P(ACK4,SEP,3)="")
"RTN","MPIFBT3",54,0)
 I $P(Y(0),"^",9)'=$P(ACK4,SEP,3) D
"RTN","MPIFBT3",55,0)
 .S ^XTMP($J,"MPIF","MSHERR")="SSN MISMATCH"
"RTN","MPIFBT3",56,0)
 .D EXC^RGHLLOG(213,"SSN on File = "_$P(Y(0),"^",9)_" SSN in Message = "_$P(ACK4,SEP,3)_"    MESSAGE # "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",57,0)
 .N LICN S LICN=$$ICNLC^MPIF001(PATID) ; create local ICN
"RTN","MPIFBT3",58,0)
 Q:$D(^XTMP($J,"MPIF","MSHERR"))
"RTN","MPIFBT3",59,0)
 D NAME^VAFCPID2(0,.NM,0) ; reformat name in DG 149 fashion for comparison
"RTN","MPIFBT3",60,0)
 S MPIN=$P(ACK4,SEP,2)_","_$P(ACK4,SEP,7)
"RTN","MPIFBT3",61,0)
 I $P(ACK4,SEP,10)'="" S MPIN=MPIN_" "_$P(ACK4,SEP,10)
"RTN","MPIFBT3",62,0)
 I $P(ACK4,SEP,15)'="" S MPIN=MPIN_" "_$P(ACK4,SEP,15)
"RTN","MPIFBT3",63,0)
 I $P(ACK4,SEP,14)'="" S MPIN=MPIN_" "_$P(ACK4,SEP,14)
"RTN","MPIFBT3",64,0)
 D NAME^VAFCPID2(0,.MPIN,0)
"RTN","MPIFBT3",65,0)
 I NM'=MPIN D
"RTN","MPIFBT3",66,0)
 .S ^XTMP($J,"MPIF","MSHERR")="NAME MISMATCH"
"RTN","MPIFBT3",67,0)
 .D EXC^RGHLLOG(214,"Name on File = "_$P(Y(0),"^")_"  Name in Message = "_MPIN_"  MESSAGE# "_MPIMSG_" around line number "_(CNTR*2),PATID)
"RTN","MPIFBT3",68,0)
 .N LICN S LICN=$$ICNLC^MPIF001(PATID) ;create local ICN
"RTN","MPIFBT3",69,0)
 ;check to see if MPI has Date of Death or if VistA has DOD
"RTN","MPIFBT3",70,0)
 N MPIDTH,VISTDTH
"RTN","MPIFBT3",71,0)
 I $P(ACK4,SEP,9)'="" S MPIDTH=$P(ACK4,SEP,9),MPIDTH=$$FMDATE^HLFNC(MPIDTH)\1
"RTN","MPIFBT3",72,0)
 I $D(^DPT(PATID,.35)),$P($G(^DPT(PATID,.35)),"^")'="" S VISTDTH=$P($G(^DPT(PATID,.35)),"^")\1
"RTN","MPIFBT3",73,0)
 I $D(MPIDTH)&$D(VISTDTH),MPIDTH'=VISTDTH D
"RTN","MPIFBT3",74,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y,Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",75,0)
 .D EXC^RGHLLOG(217,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",76,0)
 ; ^ BOTH HAVE DOD BUT THEY DON'T MATCH
"RTN","MPIFBT3",77,0)
 I '$D(MPIDTH)&($D(VISTDTH)) D
"RTN","MPIFBT3",78,0)
 .N Y S Y=VISTDTH D DD^%DT S VISTDTH=Y
"RTN","MPIFBT3",79,0)
 .D EXC^RGHLLOG(216,"Around line "_(CNTR*2)_" VISTA DOD= "_VISTDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",80,0)
 ; ^ VISTA HAS DOD BUT MPI DOESN'T
"RTN","MPIFBT3",81,0)
 I $D(MPIDTH)&('$D(VISTDTH)) D
"RTN","MPIFBT3",82,0)
 .N Y S Y=MPIDTH D DD^%DT S MPIDTH=Y
"RTN","MPIFBT3",83,0)
 .D EXC^RGHLLOG(215,"Around line "_(CNTR*2)_" MPI DOD= "_MPIDTH_"  DFN= "_PATID_"  MESSAGE# "_MPIMSG,PATID)
"RTN","MPIFBT3",84,0)
 ; ^ MPI HAS DOD BUT VISTA DOESN'T
"RTN","MPIFBT3",85,0)
 Q
"RTN","MPIFDEL")
0^10^B23378784
"RTN","MPIFDEL",1,0)
MPIFDEL ;SF/MJM,CMC-DELETE PATIENT FROM MPI ;JUL 14, 1998
"RTN","MPIFDEL",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,9,19,17,21,27,28**;30 Apr 99
"RTN","MPIFDEL",3,0)
 ;
"RTN","MPIFDEL",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIFDEL",5,0)
 ; ^DPT(         - IA #2070
"RTN","MPIFDEL",6,0)
 ; $$EN^VAFCPID  - IA #3015
"RTN","MPIFDEL",7,0)
 ; START^RGHLLOG - IA #2796
"RTN","MPIFDEL",8,0)
 ; EXC^RGHLLOG   - IA #2796
"RTN","MPIFDEL",9,0)
 ; STOP^RGHLLOG  - IA #2796
"RTN","MPIFDEL",10,0)
 ; $$DELALLTF^VAFCTFU  - IA #2988
"RTN","MPIFDEL",11,0)
 ; $$EN^VAFCPID  - IA #3015
"RTN","MPIFDEL",12,0)
 ;
"RTN","MPIFDEL",13,0)
INTER ;
"RTN","MPIFDEL",14,0)
 ;Entry point for Inactivate Patient from MPI option [MPIF PAT INACT]
"RTN","MPIFDEL",15,0)
 ;No input or output variables ^DPT
"RTN","MPIFDEL",16,0)
 N DIC,DA,DFN,HL,ERROR,CNT,HLRST,ICN,DATE,MPIFCMOR,DTOUT,DUTOUT
"RTN","MPIFDEL",17,0)
 S ERROR=""
"RTN","MPIFDEL",18,0)
 S DIC=2,DIC(0)="QEAM" D ^DIC Q:+Y<0  S DFN=+Y
"RTN","MPIFDEL",19,0)
 S ICN=$P($$MPINODE^MPIFAPI(DFN),"^")
"RTN","MPIFDEL",20,0)
 I ICN=""!(ICN=-1) W !,"** Patient Does NOT have an ICN **" Q
"RTN","MPIFDEL",21,0)
 S MPIFCMOR=+$$LKUP^XUAF4(+$$GETVCCI^MPIF001(DFN))
"RTN","MPIFDEL",22,0)
 I MPIFCMOR=0 W !,"*** Could NOT Inactivate Patient from MPI: Coordinating Master of Record is Not Defined ***" Q
"RTN","MPIFDEL",23,0)
 I $$PAT^MPIFNQ(DFN)'=+$P($$SITE^VASITE,"^",3) W !,"*** Could NOT Inactivate Patient from MPI: Coordinating Master of record site is '"_$$CMOR2^MPIF001(DFN)_"'. You MUST be the CMOR ***" Q
"RTN","MPIFDEL",24,0)
 S ICN=$$GETICN^MPIF001(DFN)
"RTN","MPIFDEL",25,0)
 ;ask user if they are sure
"RTN","MPIFDEL",26,0)
 N DIR,Y S DIR(0)="Y",DIR("B")="No"
"RTN","MPIFDEL",27,0)
 S DIR("A")="Are you sure you want to Inactivate this Patient?"
"RTN","MPIFDEL",28,0)
 D ^DIR
"RTN","MPIFDEL",29,0)
 K DIR
"RTN","MPIFDEL",30,0)
 Q:$D(DTOUT)!($D(DUTOUT))!('Y)
"RTN","MPIFDEL",31,0)
 D HL7(DFN,.ERROR)
"RTN","MPIFDEL",32,0)
 I ERROR="" D DELETE(DFN) S ERROR=$$DELALLTF^VAFCTFU(+ICN),ERROR=""
"RTN","MPIFDEL",33,0)
 I ERROR=""!(ERROR=0) W !,"*** Inactivated on YOUR system, message sent to MPI to Inactivate ***"
"RTN","MPIFDEL",34,0)
 I ERROR'="" W !,"Error Occurred - "_ERROR
"RTN","MPIFDEL",35,0)
 Q
"RTN","MPIFDEL",36,0)
 ;
"RTN","MPIFDEL",37,0)
HL7(DFN,ERROR) ; create HL7 message
"RTN","MPIFDEL",38,0)
 ; check if no subscribers
"RTN","MPIFDEL",39,0)
 N SUB,HL,CNT,ICN,%,HLDATE,TFC,IEN
"RTN","MPIFDEL",40,0)
 K HLL,MPIFDEL
"RTN","MPIFDEL",41,0)
 S ICN=$$GETICN^MPIF001(DFN),ERROR=""
"RTN","MPIFDEL",42,0)
 Q:$E(ICN,1,3)=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFDEL",43,0)
 ; ^ don't generate HL7 message if local ICN
"RTN","MPIFDEL",44,0)
 S SUB=$$QUERYTF^VAFCTFU1(+ICN,"MPIFDEL"),TFC=0
"RTN","MPIFDEL",45,0)
 I $D(MPIFDEL) D
"RTN","MPIFDEL",46,0)
 .S IEN="" F  S IEN=$O(MPIFDEL(IEN)) Q:IEN=""  I +$G(MPIFDEL(IEN))'=$P($$SITE^VASITE,"^") S TFC=TFC+1
"RTN","MPIFDEL",47,0)
 .I TFC'=0 S ERROR="Attempted to Inactivate an ICN and Patient is Shared.  Can't Inactivate patient DFN= "_DFN Q
"RTN","MPIFDEL",48,0)
 Q:ERROR'=""
"RTN","MPIFDEL",49,0)
 D NOW^%DTC S HLDATE=$$HLDATE^HLFNC(%,"DT")
"RTN","MPIFDEL",50,0)
 S HL=0,CNT=0
"RTN","MPIFDEL",51,0)
 D INIT^HLFNC2("MPIF A29 SERVER",.HL)
"RTN","MPIFDEL",52,0)
 I HL S ERROR="ERROR = "_HL_" During INIT^HLFNC2 for MPIF A29 Server for Patient DFN= "_DFN D EXC(DFN,ERROR,220)
"RTN","MPIFDEL",53,0)
 S CNT=CNT+1,HLA("HLS",CNT)="EVN"_HL("FS")_"A29"_HL("FS")_HLDATE_HL("FS")_HL("FS")_""_HL("FS")
"RTN","MPIFDEL",54,0)
 S CNT=CNT+1,HLA("HLS",CNT)=$$EN^VAFCPID(DFN,"2,3,5")
"RTN","MPIFDEL",55,0)
 ; message only goes to MPI Link
"RTN","MPIFDEL",56,0)
 D GENERATE^HLMA("MPIF A29 SERVER","LM",1,.HLRST,"",.HL)
"RTN","MPIFDEL",57,0)
 I 'HLRST S ERROR="Error During Generate for MPIF A29 Server Error= "_HLRST_" for DFN "_DFN D EXC(DFN,ERROR,220)
"RTN","MPIFDEL",58,0)
 K MPIFDEL
"RTN","MPIFDEL",59,0)
 Q
"RTN","MPIFDEL",60,0)
 ;
"RTN","MPIFDEL",61,0)
PAT1 ;entry point for tasked job from .01 in Patient file for ZZ patients
"RTN","MPIFDEL",62,0)
 N ERR,TDA
"RTN","MPIFDEL",63,0)
 S ERR=""
"RTN","MPIFDEL",64,0)
 S TDA=DA
"RTN","MPIFDEL",65,0)
 L +^DPT(DA,"INAC"):2
"RTN","MPIFDEL",66,0)
 Q:'$T
"RTN","MPIFDEL",67,0)
 D PAT(DA,.ERR)
"RTN","MPIFDEL",68,0)
 S ZTREQ="@"
"RTN","MPIFDEL",69,0)
 L -^DPT(TDA,"INAC")
"RTN","MPIFDEL",70,0)
 Q
"RTN","MPIFDEL",71,0)
 ;
"RTN","MPIFDEL",72,0)
PAT(DFN,ERROR) ;Programmer API to Delete MPI entry and remove ICN data from DPT
"RTN","MPIFDEL",73,0)
 ; if CMOR not defined but is a local CMOR, inactivate and don't log exception
"RTN","MPIFDEL",74,0)
 S ERROR=""
"RTN","MPIFDEL",75,0)
 I $G(DFN)="" S ERROR="DFN not defined" Q
"RTN","MPIFDEL",76,0)
 Q:+$$GETICN^MPIF001(DFN)<0  ; incase has been inactivated already
"RTN","MPIFDEL",77,0)
 I $E($P($$GETICN^MPIF001(DFN),"^"),1,3)'=+$P($$SITE^VASITE,"^",3),+$$PAT^MPIFNQ(DFN)'=+$P($$SITE^VASITE,"^",3) S ERROR="Attempt to Inactivate Patient, DFN= "_DFN_" this site is not the CMOR for this patient" D EXC(DFN,ERROR,226) Q
"RTN","MPIFDEL",78,0)
 D HL7(DFN,.ERROR)
"RTN","MPIFDEL",79,0)
 I ERROR="" S ERROR=$$DELALLTF^VAFCTFU(+$$GETICN^MPIF001(DFN)),ERROR="" D DELETE(DFN)
"RTN","MPIFDEL",80,0)
 Q
"RTN","MPIFDEL",81,0)
DELETE(DFN) ;
"RTN","MPIFDEL",82,0)
 N ARRAY,TMP
"RTN","MPIFDEL",83,0)
 S ARRAY(991.01)="@",ARRAY(991.02)="@",ARRAY(991.03)="@",ARRAY(991.04)="@",ARRAY(991.05)="@"
"RTN","MPIFDEL",84,0)
 S ARR="ARRAY"
"RTN","MPIFDEL",85,0)
 S TMP=$$UPDATE^MPIFAPI(DFN,ARR)
"RTN","MPIFDEL",86,0)
 K ARR
"RTN","MPIFDEL",87,0)
 Q
"RTN","MPIFDEL",88,0)
 ;
"RTN","MPIFDEL",89,0)
EXC(DFN,ERROR,TYPE) ; subscribers, log exception
"RTN","MPIFDEL",90,0)
 D START^RGHLLOG(0)
"RTN","MPIFDEL",91,0)
 D EXC^RGHLLOG(TYPE,ERROR,$G(DFN))
"RTN","MPIFDEL",92,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFDEL",93,0)
 Q
"RTN","MPIFDEL",94,0)
 ;
"RTN","MPIFDEL",95,0)
ZZSET(DA,NAME) ;this entry point checks to see if .01 of Patient file entry
"RTN","MPIFDEL",96,0)
 ;starts with at least two Zs
"RTN","MPIFDEL",97,0)
 ;if it does and an ICN is present, it will be inactivated
"RTN","MPIFDEL",98,0)
 ;
"RTN","MPIFDEL",99,0)
 Q:$E(NAME,1,2)'="ZZ"
"RTN","MPIFDEL",100,0)
 ;task inactivation off
"RTN","MPIFDEL",101,0)
 I +$$GETICN^MPIF001(DA)>0 D
"RTN","MPIFDEL",102,0)
 .S ZTRTN="PAT1^MPIFDEL",ZTDESC="Inactivate ICN for 'ZZ'd patient"
"RTN","MPIFDEL",103,0)
 .S ZTIO="",ZTSAVE("DA")=DA,ZTSAVE("NAME")=NAME
"RTN","MPIFDEL",104,0)
 .S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFDEL",105,0)
 .D ^%ZTLOAD
"RTN","MPIFDEL",106,0)
 .K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","MPIFDEL",107,0)
 Q
"RTN","MPIFDEL",108,0)
ZZKILL(DA,NAME) ;This entry point checks if there is an ICN present, if so
"RTN","MPIFDEL",109,0)
 ;if will be inactivated, following the inactivate rules
"RTN","MPIFDEL",110,0)
 N ERR S ERR=""
"RTN","MPIFDEL",111,0)
 I +$$GETICN^MPIF001(DA)>0 D PAT(DA,.ERR)
"RTN","MPIFDEL",112,0)
 Q
"RTN","MPIFDEL",113,0)
SSET(DA,SSN) ; this entry point checks to see if the SSN has been changed
"RTN","MPIFDEL",114,0)
 ; to 5 leading zeros and if the ICN is present, if so, it will be
"RTN","MPIFDEL",115,0)
 ; inactivated.
"RTN","MPIFDEL",116,0)
 Q:$E(SSN,1,5)'="00000"
"RTN","MPIFDEL",117,0)
 I +$$GETICN^MPIF001(DA)>0 D
"RTN","MPIFDEL",118,0)
 .S ZTRTN="PAT1^MPIFDEL",ZTDESC="Inactivate ICN for 'ZZ'd patient"
"RTN","MPIFDEL",119,0)
 .S ZTIO="",ZTSAVE("DA")=DA,ZTSAVE("SSN")="SSN"
"RTN","MPIFDEL",120,0)
 .S ZTDTH=$$FMADD^XLFDT($$NOW^XLFDT,0,0,1,0)
"RTN","MPIFDEL",121,0)
 .D ^%ZTLOAD
"RTN","MPIFDEL",122,0)
 .K ZTRTN,ZTDESC,ZTIO,ZTSAVE,ZTDTH,ZTREQ
"RTN","MPIFDEL",123,0)
 Q
"RTN","MPIFEXT2")
0^1^B41401955
"RTN","MPIFEXT2",1,0)
MPIFEXT2 ;SFCIO/CMC-EXTENDED PDAT - RPC ;26 JUN 01
"RTN","MPIFEXT2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**20,28**;30 Apr 99
"RTN","MPIFEXT2",3,0)
 ;
"RTN","MPIFEXT2",4,0)
 ;Integration Agreements Utilized:
"RTN","MPIFEXT2",5,0)
 ;  ^DPT( - #2070
"RTN","MPIFEXT2",6,0)
 ;  NOTICE^DGSEC4 - #3027
"RTN","MPIFEXT2",7,0)
 ;  PTSEC^DGSEC4 - #3027
"RTN","MPIFEXT2",8,0)
 ;  D GETS^DIQ(2,DFN_",",".097","I","MPIFAR") - #3581
"RTN","MPIFEXT2",9,0)
 ;
"RTN","MPIFEXT2",10,0)
PATINFO(RETN,ICN,SSN,RPC) ;get patient info array
"RTN","MPIFEXT2",11,0)
 N MPINODE,MPIFAR,DFN,TICN,TSSN,TEXT,CNTD,PICN,XX,X,XXX
"RTN","MPIFEXT2",12,0)
 I $G(ICN)=""&($G(SSN)="") S RETN="-1^NO ICN OR SSN PASSED" Q
"RTN","MPIFEXT2",13,0)
 S TICN=ICN,TSSN=SSN,TEXT=""
"RTN","MPIFEXT2",14,0)
 I $G(SSN)'="" D
"RTN","MPIFEXT2",15,0)
 .S ICN=$$GETICNS^MPIF002(SSN)
"RTN","MPIFEXT2",16,0)
 .I RPC=1 S TEXT="MPI(""SSN USED"")="
"RTN","MPIFEXT2",17,0)
 .S RETN(1,"SSN USED")=TEXT_""""_SSN_""""
"RTN","MPIFEXT2",18,0)
 .; possible to have multiple entries with same SSN
"RTN","MPIFEXT2",19,0)
 S PICN=ICN,CNTD=0
"RTN","MPIFEXT2",20,0)
 F XX=1:1 S ICN=$P(PICN,"^",XX) Q:ICN=""  D
"RTN","MPIFEXT2",21,0)
 .S DFN=$$GETDFN^MPIF001(+ICN),CNTD=CNTD+1
"RTN","MPIFEXT2",22,0)
 .I +DFN=-1 S RETN(XX)="-1^NO SUCH ICN "_ICN Q
"RTN","MPIFEXT2",23,0)
 .I '$D(^DPT(DFN)) S RETN(XX)="-1^BAD AICN X-REF, PT FILE ENTRY DOESN'T EXIST DFN= "_DFN_" ICN= "_ICN Q
"RTN","MPIFEXT2",24,0)
 .; check if this data can be returned and if sensative pt bulletin needed
"RTN","MPIFEXT2",25,0)
 .N SENS D PTSEC^DGSEC4(.SENS,DFN,1,"Remote Procedure from MPI^RPC frm MPI ext PDAT infor")
"RTN","MPIFEXT2",26,0)
 .N NOT D NOTICE^DGSEC4(.NOT,DFN,"Remote Procedure from MPI^RPC frm MPI ext PDAT infor")
"RTN","MPIFEXT2",27,0)
 .I SENS(1)=3!(SENS(1)=4)!(SENS(1)=-1) S RETN(XX)="-1^SENSATIVE PT ISSUE "_SENS(2)_" DFN= "_DFN_" ICN= "_ICN Q
"RTN","MPIFEXT2",28,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""DFN"")="
"RTN","MPIFEXT2",29,0)
 .S RETN(XX,"DFN")=TEXT_""""_DFN_""""
"RTN","MPIFEXT2",30,0)
 .S MPINODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIFEXT2",31,0)
 .D GETS^DIQ(2,DFN_",",".097","I","MPIFAR")
"RTN","MPIFEXT2",32,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""ENTERED PT FILE"")="
"RTN","MPIFEXT2",33,0)
 .S RETN(DFN,"ENTERED PT FILE")=TEXT_""""_$$FMTE^XLFDT(MPIFAR(2,DFN_",",.097,"I"),5)_""""
"RTN","MPIFEXT2",34,0)
 .K VADM
"RTN","MPIFEXT2",35,0)
 .D DEM^VADPT
"RTN","MPIFEXT2",36,0)
 .F X=1,2,3,5,6,11,12 D
"RTN","MPIFEXT2",37,0)
 ..I X=1 D
"RTN","MPIFEXT2",38,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""NAME"")="
"RTN","MPIFEXT2",39,0)
 ...S RETN(DFN,"NAME")=TEXT_""""_VADM(1)_""""
"RTN","MPIFEXT2",40,0)
 ..I X=2 D
"RTN","MPIFEXT2",41,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""SEX"")="
"RTN","MPIFEXT2",42,0)
 ...S RETN(DFN,"SEX")=TEXT_""""_VADM(5)_""""
"RTN","MPIFEXT2",43,0)
 ..I X=3 D
"RTN","MPIFEXT2",44,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""DOB"")="
"RTN","MPIFEXT2",45,0)
 ...S RETN(DFN,"DOB")=TEXT_""""_VADM(3)_""""
"RTN","MPIFEXT2",46,0)
 ..I X=12 D
"RTN","MPIFEXT2",47,0)
 ..I RPC=1 S TEXT="MPI("_DFN_",""RACE"","
"RTN","MPIFEXT2",48,0)
 ..S XXX=0
"RTN","MPIFEXT2",49,0)
 ..I VADM(12)=0 S RETN(DFN,"RACE",0)=TEXT_XXX_")="_"""NONE""" Q
"RTN","MPIFEXT2",50,0)
 ..I VADM(12)>0 F  S XXX=$O(VADM(12,XXX)) Q:XXX=""  S RETN(DFN,"RACE",XXX)=TEXT_XXX_")="_""""_$P($G(VADM(12,XXX)),"^",2)_""""
"RTN","MPIFEXT2",51,0)
 ..I X=2 D
"RTN","MPIFEXT2",52,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""SSN"")="
"RTN","MPIFEXT2",53,0)
 ...S RETN(DFN,"SSN")=TEXT_""""_VADM(2)_""""
"RTN","MPIFEXT2",54,0)
 ..I X=6 D
"RTN","MPIFEXT2",55,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""DOD"")="
"RTN","MPIFEXT2",56,0)
 ...S RETN(DFN,"DOD")=TEXT_""""_$$FMTE^XLFDT($P(VADM(6),"^"))_""""
"RTN","MPIFEXT2",57,0)
 ..I X=11 D
"RTN","MPIFEXT2",58,0)
 ..I RPC=1 S TEXT="MPI("_DFN_",""ETHNIC"")="
"RTN","MPIFEXT2",59,0)
 ..I VADM(11)=0 S RETN(DFN,"ETHNIC")=TEXT_"""NONE""" Q
"RTN","MPIFEXT2",60,0)
 ..I VADM(11)=1 S RETN(DFN,"ETHNIC")=TEXT_""""_$P($G(VADM(11,1)),"^",2)_""""
"RTN","MPIFEXT2",61,0)
 .K VAPA,VADM
"RTN","MPIFEXT2",62,0)
 .D ADD^VADPT
"RTN","MPIFEXT2",63,0)
 .F X=1,2,3,4,5,6,8,11 D
"RTN","MPIFEXT2",64,0)
 ..I X=1 D
"RTN","MPIFEXT2",65,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""ADDRESS"")="
"RTN","MPIFEXT2",66,0)
 ...S RETN(DFN,"ADDRESS 1")=TEXT_""""_VAPA(1)_""""
"RTN","MPIFEXT2",67,0)
 ..I X=6 D
"RTN","MPIFEXT2",68,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""ZIP"")="
"RTN","MPIFEXT2",69,0)
 ...S RETN(DFN,"ZIP")=TEXT_""""_VAPA(6)_""""
"RTN","MPIFEXT2",70,0)
 ..I X=2 D
"RTN","MPIFEXT2",71,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""ADDRESS 2"")="
"RTN","MPIFEXT2",72,0)
 ...S RETN(DFN,"ADDRESS 2")=TEXT_""""_VAPA(2)_""""
"RTN","MPIFEXT2",73,0)
 ..I X=3 D
"RTN","MPIFEXT2",74,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""ADDRESS 3"")="
"RTN","MPIFEXT2",75,0)
 ...S RETN(DFN,"ADDRESS 3")=TEXT_""""_VAPA(3)_""""
"RTN","MPIFEXT2",76,0)
 ..I X=5 D
"RTN","MPIFEXT2",77,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""STATE"")="
"RTN","MPIFEXT2",78,0)
 ...S RETN(DFN,"STATE")=TEXT_""""_$P(VAPA(5),"^",2)_""""
"RTN","MPIFEXT2",79,0)
 ..I X=4 D
"RTN","MPIFEXT2",80,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""CITY"")="
"RTN","MPIFEXT2",81,0)
 ...S RETN(DFN,"CITY")=TEXT_""""_VAPA(4)_""""
"RTN","MPIFEXT2",82,0)
 ..I X=8 D
"RTN","MPIFEXT2",83,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""HOME PHONE #"")="
"RTN","MPIFEXT2",84,0)
 ...S RETN(DFN,"HOME PHONE #")=TEXT_""""_VAPA(8)_""""
"RTN","MPIFEXT2",85,0)
 .K VAPA,VAEL
"RTN","MPIFEXT2",86,0)
 .D ELIG^VADPT
"RTN","MPIFEXT2",87,0)
 .I VAEL(4)=1 S VAEL("VET Y/N")="YES"
"RTN","MPIFEXT2",88,0)
 .I VAEL(4)'=1 S VAEL("VET Y/N")="NO"
"RTN","MPIFEXT2",89,0)
 .F X=1,4,7 D
"RTN","MPIFEXT2",90,0)
 ..I X=7 D
"RTN","MPIFEXT2",91,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""CLAIM #"")="
"RTN","MPIFEXT2",92,0)
 ...S RETN(DFN,"CLAIM #")=TEXT_""""_VAEL(7)_""""
"RTN","MPIFEXT2",93,0)
 ..I X=4 D
"RTN","MPIFEXT2",94,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""VET Y/N"")="
"RTN","MPIFEXT2",95,0)
 ...S RETN(DFN,"VET Y/N")=TEXT_""""_VAEL("VET Y/N")_""""
"RTN","MPIFEXT2",96,0)
 ..I X=1 D
"RTN","MPIFEXT2",97,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""PRIM ELIG"")="
"RTN","MPIFEXT2",98,0)
 ...S RETN(DFN,"PRIM ELIG")=TEXT_""""_$P(VAEL(1),"^",2)_""""
"RTN","MPIFEXT2",99,0)
 .K VAEL,VAOA
"RTN","MPIFEXT2",100,0)
 .D OAD^VADPT
"RTN","MPIFEXT2",101,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""NOK NAME"")="
"RTN","MPIFEXT2",102,0)
 .S RETN(DFN,"NOK NAME")=TEXT_""""_VAOA(9)_""""
"RTN","MPIFEXT2",103,0)
 .K VAOA
"RTN","MPIFEXT2",104,0)
 .S VAOA("A")=1
"RTN","MPIFEXT2",105,0)
 .D OAD^VADPT
"RTN","MPIFEXT2",106,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""EMERGENCY POC"")="
"RTN","MPIFEXT2",107,0)
 .S RETN(DFN,"EMERGENCY POC")=TEXT_""""_VAOA(9)_""""
"RTN","MPIFEXT2",108,0)
 .K VAOA
"RTN","MPIFEXT2",109,0)
 .S VAOA("A")=2
"RTN","MPIFEXT2",110,0)
 .D OAD^VADPT
"RTN","MPIFEXT2",111,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""DESIGNEE"")="
"RTN","MPIFEXT2",112,0)
 .S RETN(DFN,"DESIGNEE")=TEXT_""""_VAOA(9)_""""
"RTN","MPIFEXT2",113,0)
 .K VAOA,VAPD
"RTN","MPIFEXT2",114,0)
 .D OPD^VADPT
"RTN","MPIFEXT2",115,0)
 .F X=1,2,3,4,5 D
"RTN","MPIFEXT2",116,0)
 ..I X=5 D
"RTN","MPIFEXT2",117,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""MMN"")="
"RTN","MPIFEXT2",118,0)
 ...S RETN(DFN,"MMN")=TEXT_""""_VAPD(5)_""""
"RTN","MPIFEXT2",119,0)
 ..I X=1 D
"RTN","MPIFEXT2",120,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""POBC"")="
"RTN","MPIFEXT2",121,0)
 ...S RETN(DFN,"POBC")=TEXT_""""_VAPD(1)_""""
"RTN","MPIFEXT2",122,0)
 ..I X=2 D
"RTN","MPIFEXT2",123,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""POBS"")="
"RTN","MPIFEXT2",124,0)
 ...S RETN(DFN,"POBS")=TEXT_""""_$P(VAPD(2),"^",2)_""""
"RTN","MPIFEXT2",125,0)
 ..I X=3 D
"RTN","MPIFEXT2",126,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""FATHER'S NAME"")="
"RTN","MPIFEXT2",127,0)
 ...S RETN(DFN,"FATHER'S NAME")=TEXT_""""_VAPD(3)_""""
"RTN","MPIFEXT2",128,0)
 ..I X=4 D
"RTN","MPIFEXT2",129,0)
 ...I RPC=1 S TEXT="MPI("_DFN_",""MOTHER'S NAME"")="
"RTN","MPIFEXT2",130,0)
 ...S RETN(DFN,"MOTHER'S NAME")=TEXT_""""_VAPD(4)_""""
"RTN","MPIFEXT2",131,0)
 .K VAPD,VASV
"RTN","MPIFEXT2",132,0)
 .D SVC^VADPT
"RTN","MPIFEXT2",133,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""POW STATUS"")="
"RTN","MPIFEXT2",134,0)
 .I VASV(4)=1 S VASV(4)="YES"
"RTN","MPIFEXT2",135,0)
 .I VASV(4)=0 S VASV(4)="NO"
"RTN","MPIFEXT2",136,0)
 .S RETN(DFN,"POW STATUS")=TEXT_""""_VASV(4)_""""
"RTN","MPIFEXT2",137,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""LAST SRV BRANCH"")="
"RTN","MPIFEXT2",138,0)
 .S RETN(DFN,"LAST SRV BRANCH")=TEXT_""""_$P(VASV(6,1),"^",2)_""""
"RTN","MPIFEXT2",139,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""LAST SRV #"")="
"RTN","MPIFEXT2",140,0)
 .S RETN(DFN,"LAST SRV #")=TEXT_""""_VASV(6,2)_""""
"RTN","MPIFEXT2",141,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""LAST SRV ENT DT"")="
"RTN","MPIFEXT2",142,0)
 .S RETN(DFN,"LAST SRV ENT DT")=TEXT_""""_$$FMTE^XLFDT($P(VASV(6,4),"^"))_""""
"RTN","MPIFEXT2",143,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""LAST SRV SEP DT"")="
"RTN","MPIFEXT2",144,0)
 .S RETN(DFN,"LAST SRV SEP DT")=TEXT_""""_$$FMTE^XLFDT($P(VASV(6,5),"^"))_""""
"RTN","MPIFEXT2",145,0)
 .K VASV
"RTN","MPIFEXT2",146,0)
 .N MPINODE
"RTN","MPIFEXT2",147,0)
 .S MPINODE=$$MPINODE^MPIFAPI(DFN)
"RTN","MPIFEXT2",148,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""SUB CONTROL #"")="
"RTN","MPIFEXT2",149,0)
 .S RETN(DFN,"SUB CONTROL #")=TEXT_""""_$P(MPINODE,"^",5)_""""
"RTN","MPIFEXT2",150,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""SCORE"")="
"RTN","MPIFEXT2",151,0)
 .S RETN(DFN,"SCORE")=TEXT_""""_$P(MPINODE,"^",6)_""""
"RTN","MPIFEXT2",152,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""SCORE DATE"")="
"RTN","MPIFEXT2",153,0)
 .S RETN(DFN,"SCORE DATE")=TEXT_""""_$P(MPINODE,"^",7)_""""
"RTN","MPIFEXT2",154,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""LOCAL ICN"")="
"RTN","MPIFEXT2",155,0)
 .I $P(MPINODE,"^",4)=1 S RETN(DFN,"LOCAL ICN")=TEXT_"""YES"""
"RTN","MPIFEXT2",156,0)
 .I $P(MPINODE,"^",4)="" S RETN(DFN,"LOCAL ICN")=TEXT_"""NO"""
"RTN","MPIFEXT2",157,0)
 .N RESULT,SENS
"RTN","MPIFEXT2",158,0)
 .S SENS="NO"
"RTN","MPIFEXT2",159,0)
 .D PTSEC^DGSEC4(.RESULT,DFN)
"RTN","MPIFEXT2",160,0)
 .I RESULT(1)>0 S SENS="YES"
"RTN","MPIFEXT2",161,0)
 .I RPC=1 S TEXT="MPI("_DFN_",""SENSATIVE PT"")="
"RTN","MPIFEXT2",162,0)
 .S RETN(DFN,"SENSATIVE PT")=TEXT_""""_SENS_""""
"RTN","MPIFEXT2",163,0)
 .D ALIAS^MPIFEXT3(.RETN,DFN,RPC)
"RTN","MPIFEXT2",164,0)
 .D CMORCH^MPIFEXT3(.RETN,DFN,RPC)
"RTN","MPIFEXT2",165,0)
 .D TFLIST^MPIFEXT3(.RETN,DFN,RPC)
"RTN","MPIFEXT2",166,0)
 .D SUBLST^MPIFEXT3(.RETN,DFN,RPC)
"RTN","MPIFEXT2",167,0)
 D ICNSTAT^MPIFRPC(.RETN,TICN,TSSN,RPC)
"RTN","MPIFEXT2",168,0)
 K VA,VAERR
"RTN","MPIFEXT2",169,0)
 Q
"RTN","MPIFEXT2",170,0)
 ;
"RTN","MPIFQ0")
0^3^B61515739
"RTN","MPIFQ0",1,0)
MPIFQ0 ;ALB/RJS-QUERY HANDLER TOP LEVEL ;JUL 11, 1997
"RTN","MPIFQ0",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,8,14,13,16,17,21,20,24,26,28**;30 Apr 99
"RTN","MPIFQ0",3,0)
 ;
"RTN","MPIFQ0",4,0)
 ; Integration Agreements utilized:
"RTN","MPIFQ0",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFQ0",6,0)
 ;  FILE^VAFCTFU - #2988
"RTN","MPIFQ0",7,0)
 ;  $$SEND2^VAFCUTL1- #2779
"RTN","MPIFQ0",8,0)
 ;  $$EN^HLCSAS - #3471
"RTN","MPIFQ0",9,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFQ0",10,0)
 ;
"RTN","MPIFQ0",11,0)
INTACTV ;Interactive standalone query
"RTN","MPIFQ0",12,0)
 N DFN,NAME1,MPIFLL
"RTN","MPIFQ0",13,0)
 K DTOUT,DUOUT,X,Y,DIC
"RTN","MPIFQ0",14,0)
 S MPIFRES="",MPIFINT="",DIC="^DPT(",DIC(0)="AEMQ" D ^DIC
"RTN","MPIFQ0",15,0)
 I ($D(DTOUT))!($D(DUOUT))!((+$G(Y))<0) W:'$D(MPIFRPC) !,"TRY AGAIN LATER" G END
"RTN","MPIFQ0",16,0)
 S DFN=+Y,HLP("ACKTIME")=300
"RTN","MPIFQ0",17,0)
 W:'$D(MPIFRPC) !
"RTN","MPIFQ0",18,0)
CIRNEXC ; Exception Entry Point
"RTN","MPIFQ0",19,0)
 I +$$GETICN^MPIF001(DFN)>0,$$IFLOCAL^MPIF001(DFN)'=1 W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",20,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",21,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",22,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",23,0)
 I LOCDATA(2,DFN,.03)'?2N1"/"2N1"/"4N W:'$D(MPIFRPC) !,"Patient is missing Date of Birth -- Required Field" D LOCAL^MPIFQ3(DFN) G END
"RTN","MPIFQ0",24,0)
 I $$IFLOCAL^MPIF001(DFN)=1 S MPIFLL=""
"RTN","MPIFQ0",25,0)
 I $G(LOCDATA(2,DFN,991.01))>0&('$D(MPIFLL)) W:'$D(MPIFRPC) !,"Patient already has an ICN" G END
"RTN","MPIFQ0",26,0)
 I +$$SEND2^VAFCUTL1(DFN,"T")=1 W:'$D(MPIFRPC) !,"Patient should not be sent to the MPI -- SSN has 5 leading 0s or name has been ZZ'd" G END
"RTN","MPIFQ0",27,0)
 I $E(LOCDATA(2,DFN,.01),1,3)="EEE" W:'$D(MPIFRPC) !,"Patient should not be sent to the MPI -- EEE patient -- update to actual Patient name" G END
"RTN","MPIFQ0",28,0)
 S HLP("ACKTIME")=300,MPIQRYNM="VTQ_PID_ICN_NO_LOAD"
"RTN","MPIFQ0",29,0)
 G JUMP
"RTN","MPIFQ0",30,0)
VTQ G:$G(DFN)']"" END
"RTN","MPIFQ0",31,0)
 N LOCDATA ;Data Returned from GETDATA in ICN array
"RTN","MPIFQ0",32,0)
 D GETDATA("^DPT(",DFN,"LOCDATA",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ0",33,0)
 S LOCDATA(2,DFN,991.01)=$P($$MPINODE^MPIFAPI(DFN),"^"),TSSN=LOCDATA(2,DFN,.09)
"RTN","MPIFQ0",34,0)
 I LOCDATA(2,DFN,.03)'?2N1"/"2N1"/"4N S MPIFRTN="MISSING DOB" D EXC^MPIFVTQ(DFN) G END
"RTN","MPIFQ0",35,0)
 S MPIQRYNM="VTQ_PID_ICN_NO_LOAD"
"RTN","MPIFQ0",36,0)
 I $G(LOCDATA(2,DFN,991.01))>0 S MPIFRTN="ALREADY HAS ICN" G END ;If Pt already has ICN don't connect to MPI
"RTN","MPIFQ0",37,0)
 I +$$SEND2^VAFCUTL1(DFN,"T")=1 S MPIFRTN="TEST" G END
"RTN","MPIFQ0",38,0)
JUMP N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFQ0",39,0)
 N HL,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,TEST,SITE,MPIDC,SSN
"RTN","MPIFQ0",40,0)
 I $G(HLP("ACKTIME"))="" S HLP("ACKTIME")=30 ;If the HLP("ACKTIME") is not already set for the D/C
"RTN","MPIFQ0",41,0)
 S HL("ECH")="^~\&",HL("FS")="|"
"RTN","MPIFQ0",42,0)
 I '$D(MPIQRYNM) S MPIQRYNM="VTQ_PID_ICN"
"RTN","MPIFQ0",43,0)
 S MPIIN="",MPIMCNT=DFN,MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFQ0",44,0)
 D VTQ1^MPIFVTQ(DFN,.MPIOUT,.HL,.MPIQRYNM,"00108.1;00108.2;00110;00122")
"RTN","MPIFQ0",45,0)
 I +MPIOUT(0)=-1 D  G EXIT
"RTN","MPIFQ0",46,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=$G(MPIOUT(0)),MPIFRTN="CONTINUE"
"RTN","MPIFQ0",47,0)
 ;Create MSH
"RTN","MPIFQ0",48,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1,HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")
"RTN","MPIFQ0",49,0)
 S HEADER=HEADER_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VTQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS")
"RTN","MPIFQ0",50,0)
 S MPIOUT(1)=HEADER K MPIOUT(0)
"RTN","MPIFQ0",51,0)
 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If no SSN or inexact DOB or common name, this request",!,"may take some time, please be patient...",!
"RTN","MPIFQ0",52,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFQ0",53,0)
 K HLP("ACKTIME") ;kill the HLP array set for the ack timeout
"RTN","MPIFQ0",54,0)
 I +TEST=-1 D  G EXIT
"RTN","MPIFQ0",55,0)
 .S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)=TEST
"RTN","MPIFQ0",56,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Could not connect to MPI or Timed Out, assigning local ICN (if not already assigned)..."
"RTN","MPIFQ0",57,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",58,0)
 K ^TMP("MPIFVQQ",$J) ;array data is parsed into for display in LM
"RTN","MPIFQ0",59,0)
INIPARS ;
"RTN","MPIFQ0",60,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFQ0",61,0)
 S INDEX=0 K CHECK
"RTN","MPIFQ0",62,0)
LOOP1 ;
"RTN","MPIFQ0",63,0)
 ;process in ADT type messages
"RTN","MPIFQ0",64,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFQ0",65,0)
 S MPIQUIT=0
"RTN","MPIFQ0",66,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFQ0",67,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFQ0",68,0)
 .. S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFQ0",69,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFQ0",70,0)
DECIDE ;If no data in ^TMP that means the patient was not found in the MPI w/VTQ Query. So we go to A28 to add the patient to the MPI.
"RTN","MPIFQ0",71,0)
 I '$D(^TMP("MPIFVQQ",$J)) D  G EXIT
"RTN","MPIFQ0",72,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Patient was not found in the MPI..."
"RTN","MPIFQ0",73,0)
 .D A28^MPIFQ3(DFN) S MPIFRTN="DID A28"
"RTN","MPIFQ0",74,0)
 ;If INDEX=1 it means we got 1 match check SSN see if definitely same pt
"RTN","MPIFQ0",75,0)
 I (INDEX=1)&(TSSN=SSN) D  G EXIT
"RTN","MPIFQ0",76,0)
 .N CCMOR,ICN,DATA,TICN,SNM,SNM2,IEN
"RTN","MPIFQ0",77,0)
 .S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA"),CMOR=$P(DATA,"^",5),ICN=$P(DATA,"^",6),IEN=$$IEN^XUAF4(CMOR)
"RTN","MPIFQ0",78,0)
 .D START^RGHLLOG(0)
"RTN","MPIFQ0",79,0)
 .S TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",80,0)
 .I TICN>0,DFN'=TICN D EXC^RGHLLOG(227,"Patient dfn "_DFN_" returned ICN "_+ICN_" that is already in use for Patient dfn "_$$GETDFN^MPIF001(+ICN)_" Checkout pair to determine if a Duplicate.",DFN)
"RTN","MPIFQ0",81,0)
 .I TICN>0&(DFN'=TICN)
"RTN","MPIFQ0",82,0)
 .; CHECK IF NAME IS SAME - IF NOT POTENTIAL MATCH EXCEPTION
"RTN","MPIFQ0",83,0)
 .S SNM=LOCDATA(2,DFN,.01) D NAME^VAFCPID2(DFN,.SNM,0) ;reformat name to DG 149 standard
"RTN","MPIFQ0",84,0)
 .S SNM2=$P(DATA,"^") D NAME^VAFCPID2(0,.SNM2,0) S $P(DATA,"^")=SNM2
"RTN","MPIFQ0",85,0)
 .I $P(DATA,"^")'=SNM D  Q
"RTN","MPIFQ0",86,0)
 ..I $D(MPIFINT) D START^MPIFQ1(INDEX) Q
"RTN","MPIFQ0",87,0)
 ..I '$D(MPIFINT) D LOC2^MPIFQ3(DFN) Q
"RTN","MPIFQ0",88,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Found Patient "_$G(LOCDATA(2,DFN,.01))_" on MPI",!,"  Updating ICN to "_+ICN_" and CMOR to "_$P($$NS^XUAF4(IEN),"^")_" ("_CMOR_")  - just a minute..."
"RTN","MPIFQ0",89,0)
 .D STOP^RGHLLOG(0),UPDATE(DFN,ICN,CMOR) S MPIFRTN="GOT 1 HIT FROM MPI"
"RTN","MPIFQ0",90,0)
 I '$D(MPIFINT) D  G EXIT
"RTN","MPIFQ0",91,0)
 .; came in via PIMS options to d/c with MPI
"RTN","MPIFQ0",92,0)
 .I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Potential Matches Found, Assigning Local ICN..."
"RTN","MPIFQ0",93,0)
 .D START^RGHLLOG(0),EXC^RGHLLOG(218,"For Patient DFN="_DFN_".  Use Single Patient Initialization to MPI option to manually process.",DFN),STOP^RGHLLOG(0)
"RTN","MPIFQ0",94,0)
 .D LOCAL^MPIFQ3(DFN) S MPIFRTN="ASSIGNING LOCAL"
"RTN","MPIFQ0",95,0)
 D START^MPIFQ1(INDEX) G END
"RTN","MPIFQ0",96,0)
EXIT I $D(MPIFINT) K MPIFINT,MPIFRES,MPIQRYNM,TSSN
"RTN","MPIFQ0",97,0)
 K VALMCNT,VALMLST,CCMOR,FICN H 3 W:'$D(MPIFRPC) !!
"RTN","MPIFQ0",98,0)
END Q
"RTN","MPIFQ0",99,0)
UPDATE(DFN,ICN,CMOR) ;
"RTN","MPIFQ0",100,0)
 N TICN,CHKSUM,SETICN,SETLOC,CHANGE,RGLOG,LOCAL
"RTN","MPIFQ0",101,0)
 D START^RGHLLOG(0)
"RTN","MPIFQ0",102,0)
 S CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),TICN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ0",103,0)
 I TICN>0,TICN'=DFN D EXC^RGHLLOG(227,"Patient dfn "_DFN_" returned ICN "_+ICN_" that is already in use for Patient dfn "_TICN_" Checkout pair to determine if a Duplicate.",DFN) D STOP^RGHLLOG(0) Q
"RTN","MPIFQ0",104,0)
 S SETICN=$$SETICN^MPIF001(DFN,ICN,CHKSUM)
"RTN","MPIFQ0",105,0)
 I +SETICN'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET ICN IN MPIFQ0" Q
"RTN","MPIFQ0",106,0)
 S SETLOC=1,LOCAL="N"
"RTN","MPIFQ0",107,0)
 I $E(ICN,1,3)=$P($$SITE^VASITE(),"^",3) S LOCAL="Y"
"RTN","MPIFQ0",108,0)
 I $G(LOCAL)="Y" S SETLOC=$$SETLOC^MPIF001(DFN,1)
"RTN","MPIFQ0",109,0)
 I $G(LOCAL)'="Y" S SETLOC=$$SETLOC^MPIF001(DFN,0)
"RTN","MPIFQ0",110,0)
 I +SETLOC'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SETLOC IN MPIFQ0" Q
"RTN","MPIFQ0",111,0)
 N CMOR1 S CMOR1=$$LKUP^XUAF4(CMOR)
"RTN","MPIFQ0",112,0)
 I CMOR1'="" S CHANGE=$$CHANGE^MPIF001(DFN,CMOR1)
"RTN","MPIFQ0",113,0)
 I CMOR1="" S CHANGE=-1
"RTN","MPIFQ0",114,0)
 I $G(LOCAL)="Y" S CHANGE=$$CHANGE^MPIF001(DFN,$P($$SITE^VASITE,"^"))
"RTN","MPIFQ0",115,0)
 I +CHANGE'>0 S ^TMP($J,"MPIFQ0-ERROR-LOG",DFN,TIME)="COULD NOT SET CMOR IN MPIFQ0" Q
"RTN","MPIFQ0",116,0)
 Q:$G(LOCAL)="Y"
"RTN","MPIFQ0",117,0)
 N RESLT S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ0",118,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ0",119,0)
 Q
"RTN","MPIFQ0",120,0)
GETDATA(DIC,DA,MPIFAR,DR,EI) ;
"RTN","MPIFQ0",121,0)
 ;This function returns the values stored in the fields via FM call DIQ1
"RTN","MPIFQ0",122,0)
 ;DIC=file reference, DA=IEN in file, ARRAY=array for the values to be stored in, DR=fields requested, EI=external/internal values
"RTN","MPIFQ0",123,0)
 N DIQ S DIQ=MPIFAR
"RTN","MPIFQ0",124,0)
 I $G(EI)]"" S DIQ(0)=EI
"RTN","MPIFQ0",125,0)
 D EN^DIQ1
"RTN","MPIFQ0",126,0)
 Q
"RTN","MPIFQ0",127,0)
LOOP2 ;
"RTN","MPIFQ0",128,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFQ0",129,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFQ0",130,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFQ0",131,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFQ0",132,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFQ0",133,0)
 Q
"RTN","MPIFQ0",134,0)
MSH ;
"RTN","MPIFQ0",135,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFQ0",136,0)
 Q
"RTN","MPIFQ0",137,0)
MSA ;
"RTN","MPIFQ0",138,0)
 Q
"RTN","MPIFQ0",139,0)
RDF ;
"RTN","MPIFQ0",140,0)
 Q
"RTN","MPIFQ0",141,0)
QAK ;
"RTN","MPIFQ0",142,0)
 Q
"RTN","MPIFQ0",143,0)
RDT ;
"RTN","MPIFQ0",144,0)
 N NAME,ICN,BIRTHDAY,CMOR,SEG,HEREICN,STRING,LASTNAME,FRSTNAME,MIDDLE,SUFF,SEX
"RTN","MPIFQ0",145,0)
 S STRING="",INDEX=$G(INDEX)+1
"RTN","MPIFQ0",146,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFQ0",147,0)
 S SEG=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ0",148,0)
 S FRSTNAME=$P(SEG,"^",7),LASTNAME=$P(SEG,"^",2),MIDDLE=$P(SEG,"^",10),SUFF=$P(SEG,"^",15)
"RTN","MPIFQ0",149,0)
 S SSN=$P(SEG,"^",3),NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFQ0",150,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFQ0",151,0)
 I SUFF'="" S NAME=NAME_" "_SUFF
"RTN","MPIFQ0",152,0)
 S SEX=$P(SEG,"^",11)
"RTN","MPIFQ0",153,0)
 S ICN=$P(SEG,"^",6)
"RTN","MPIFQ0",154,0)
 S BIRTHDAY=$P(SEG,"^",4)
"RTN","MPIFQ0",155,0)
 S CMOR=$P(SEG,"^",5)
"RTN","MPIFQ0",156,0)
 S CMOR=$P($$NS^XUAF4(CMOR),"^")
"RTN","MPIFQ0",157,0)
 S HEREICN=$$HEREICN^MPIFQ3($P(ICN,"V",1))
"RTN","MPIFQ0",158,0)
 I HEREICN S STRING=$$SETSTR^VALM1("*",STRING,1,1),^TMP("MPIFQ0",$J,INDEX,"INDICATOR")="*"_"^"_HEREICN
"RTN","MPIFQ0",159,0)
 S STRING=$$SETSTR^VALM1(INDEX,STRING,2,4),STRING=$$SETSTR^VALM1($E(NAME,1,23),STRING,6,23)
"RTN","MPIFQ0",160,0)
 S STRING=$$SETSTR^VALM1(SSN,STRING,30,9),STRING=$$SETSTR^VALM1(BIRTHDAY,STRING,41,10)
"RTN","MPIFQ0",161,0)
 S STRING=$$SETSTR^VALM1(CMOR,STRING,54,20)
"RTN","MPIFQ0",162,0)
 S ^TMP("MPIFQ0",$J,INDEX,0)=STRING,^TMP("MPIFQ0",$J,"IDX",INDEX,INDEX)=""
"RTN","MPIFQ0",163,0)
 Q
"RTN","MPIFQ1")
0^6^B42346363
"RTN","MPIFQ1",1,0)
MPIFQ1 ;ALB/RJS-CIRN QUERY HANDLER ;JUN 30, 1997
"RTN","MPIFQ1",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,8,12,16,17,21,23,24,28**;30 Apr 99
"RTN","MPIFQ1",3,0)
 ;
"RTN","MPIFQ1",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFQ1",5,0)
 ;   EXC, START, STOP^RGHLLOG - #2796
"RTN","MPIFQ1",6,0)
 ;   FILE^VAFCTFU - #2988
"RTN","MPIFQ1",7,0)
 ;   ^DPT("AICN" - #2070
"RTN","MPIFQ1",8,0)
 ;   NAME^VAFCPID2 - #3492
"RTN","MPIFQ1",9,0)
 ;   EN1^XWB2HL7 - #3144
"RTN","MPIFQ1",10,0)
 ;   RTNDATA^XWBDRPC - #3149
"RTN","MPIFQ1",11,0)
 ;   VAFC REMOTE PDAT (RPC) - #3496
"RTN","MPIFQ1",12,0)
 ;
"RTN","MPIFQ1",13,0)
INIT ;Entry point for List Manager Template - MPIF REAL-TIME QUERY
"RTN","MPIFQ1",14,0)
 Q
"RTN","MPIFQ1",15,0)
HDR ;Header code for List Manager Template - MPIF REAL-TIME QUERY
"RTN","MPIFQ1",16,0)
 N SSN,DOB,MPIFQ1,NAME1,SEX
"RTN","MPIFQ1",17,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.03;.09;.02","EI")
"RTN","MPIFQ1",18,0)
 S NAME1=$G(MPIFQ1(2,DFN,.01,"E")),SSN=$G(MPIFQ1(2,DFN,.09,"E"))
"RTN","MPIFQ1",19,0)
 S DOB=$G(MPIFQ1(2,DFN,.03,"I")),SEX=$G(MPIFQ1(2,DFN,.02,"E"))
"RTN","MPIFQ1",20,0)
 I DOB]"" S DOB=$TR($$FMTE^XLFDT(DOB,"5D"),"/","-")
"RTN","MPIFQ1",21,0)
 S VALMHDR(1)=" Possible MPI Matches for Patient: "_IOINHI_NAME1_IOINORM
"RTN","MPIFQ1",22,0)
 S VALMHDR(2)="                              SSN: "_IOINHI_SSN_IOINORM
"RTN","MPIFQ1",23,0)
 S VALMHDR(3)="                              DOB: "_IOINHI_DOB_IOINORM
"RTN","MPIFQ1",24,0)
 S VALMHDR(4)="                              SEX: "_IOINHI_SEX_IOINORM,VALMHDR(5)=" "
"RTN","MPIFQ1",25,0)
 Q
"RTN","MPIFQ1",26,0)
START(INDEX) ;Starting entry point for envoking the List Manager Template MPIF Real-time query
"RTN","MPIFQ1",27,0)
 S VALMCNT=INDEX
"RTN","MPIFQ1",28,0)
 D EN^VALM("MPIF REAL-TIME QUERY")
"RTN","MPIFQ1",29,0)
 Q
"RTN","MPIFQ1",30,0)
SELECT N VALMY
"RTN","MPIFQ1",31,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFQ1",32,0)
 I '$D(VALMY) Q
"RTN","MPIFQ1",33,0)
 N DATA,INDEX,ICN,CHKSUM,NODE2
"RTN","MPIFQ1",34,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ1",35,0)
 S NODE2=$G(^TMP("MPIFVQQ",$J,INDEX,"INDICATOR"))
"RTN","MPIFQ1",36,0)
 S DATA(.01)=$P(DATA,"^",1) I $E(DATA(.01),$L(DATA(.01)))=" " S DATA(.01)=$E(DATA(.01),1,$L(DATA(.01))-1) ;NAME
"RTN","MPIFQ1",37,0)
 S DATA(.03)=$P(DATA,"^",4),DATA(.09)=$P(DATA,"^",3),DATA(.02)=$P(DATA,"^",11) ;DOB, SSN, SEX
"RTN","MPIFQ1",38,0)
 S ICN=$P(DATA,"^",6),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),DATA(991.01)=ICN,DATA(991.02)=CHKSUM,DATA(991.03)=$$LKUP^XUAF4($P(DATA,"^",5))
"RTN","MPIFQ1",39,0)
 ;If NODE2["*" we have a pt in our list whose ICN is already at this site
"RTN","MPIFQ1",40,0)
 I NODE2["*",$O(^DPT("AICN",ICN,""))'=DFN D  Q
"RTN","MPIFQ1",41,0)
 .D CLEAR^VALM1,MSG1^MPIFQ3,START^RGHLLOG()
"RTN","MPIFQ1",42,0)
 .D EXC^RGHLLOG(227,"Attempted to assign same ICN to Patient DFN "_DFN_". ICN is already used for Name: "_DATA(.01)_" SSN: "_DATA(.09)_" DOB: "_DATA(.03)_" Checkout pair to determine if a Duplicate.",DFN)
"RTN","MPIFQ1",43,0)
 .D STOP^RGHLLOG(0)
"RTN","MPIFQ1",44,0)
 .W !!,"Assigning Local ICN" D LOCAL^MPIFQ3(DFN),PROMPT^MPIFQ3 S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",45,0)
 ;User selected from list, does SSN & Name match?  no-ask if sure
"RTN","MPIFQ1",46,0)
 N SSN,NAME,SEX
"RTN","MPIFQ1",47,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"MPIFQ1",".01;.09;.02","EI")
"RTN","MPIFQ1",48,0)
 S SSN=$G(MPIFQ1(2,DFN,.09,"E")),NAME=$G(MPIFQ1(2,DFN,.01,"E")),SEX=$G(MPIFQ1(2,DFN,.02,"I"))
"RTN","MPIFQ1",49,0)
 ; if sex doesn't match -- not allowed to update ICN
"RTN","MPIFQ1",50,0)
 I DATA(.02)'=SEX W !!,"Sex for these two patients doesn't match -- Can't select this patient until",!,"Sex matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFQ1",51,0)
 I SSN["P" S SSN=""
"RTN","MPIFQ1",52,0)
 I DATA(.09)'=SSN W !!,"SSN for these two patients doesn't match -- Can't select this patient until",!,"SSN matches between the MPI and your site.  No action will be taken." D PROMPT^MPIFQ3 S VALMBCK="R" Q
"RTN","MPIFQ1",53,0)
 D NAME^VAFCPID2(0,.NAME,0) ;reformat name into DG 149 format
"RTN","MPIFQ1",54,0)
 N NAME3 S NAME3=DATA(.01) D NAME^VAFCPID2(0,.NAME3,0) S DATA(.01)=NAME3 ;reformat name into DG 149 format
"RTN","MPIFQ1",55,0)
 I DATA(.01)=NAME K DATA(.09),DATA(.01),DATA(.03) D EDIT^MPIFQED(DFN,"DATA") D MSG3^MPIFQ3,PROMPT^MPIFQ3,TF^MPIFQ3(DFN,.DATA) Q  ;Name doesn't match exactly - ask if sure
"RTN","MPIFQ1",56,0)
 D CLEAR^VALM1,MSG2^MPIFQ3,MSG^MPIFQ3(SSN,NAME,DATA(.09),DATA(.01))
"RTN","MPIFQ1",57,0)
 N ANS S ANS=$$PROMPT1^MPIFQ3()
"RTN","MPIFQ1",58,0)
 I ANS K DATA(.09),DATA(.01),DATA(.03) D EDIT^MPIFQED(DFN,"DATA") S MPIFRTN="CONTINUE" W !!,"ICN and CMOR Updated" D PROMPT^MPIFQ3,TF^MPIFQ3(DFN,.DATA) Q
"RTN","MPIFQ1",59,0)
 D MSG5^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R"
"RTN","MPIFQ1",60,0)
 Q
"RTN","MPIFQ1",61,0)
ADD ;Add (MPIF REAL-TIME QUERY (ADD PATIENT)) add pt to MPI Austin.
"RTN","MPIFQ1",62,0)
 D A28^MPIFQ3(DFN),PROMPT^MPIFQ3 S MPIFRTN="CONTINUE"
"RTN","MPIFQ1",63,0)
 Q
"RTN","MPIFQ1",64,0)
MPIPD ; MPI PDAT CALL
"RTN","MPIFQ1",65,0)
 N VALMY,CNT,Y
"RTN","MPIFQ1",66,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFQ1",67,0)
 I '$D(VALMY) Q
"RTN","MPIFQ1",68,0)
 N DATA,INDEX,ICN,CHKSUM,CMOR,CASE,CMOR3,TTF,ALIAS,POW,TAL,TMP
"RTN","MPIFQ1",69,0)
 S INDEX=$O(VALMY(0)),Y="" D CLEAR^VALM1
"RTN","MPIFQ1",70,0)
 S DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ1",71,0)
 S CMOR=$P(DATA,"^",5),CMOR3=CMOR,CMOR=$P($$NS^XUAF4($$LKUP^XUAF4(CMOR)),"^")
"RTN","MPIFQ1",72,0)
 W !,"MPI Data:",!!!,?3,"ICN: ",+$P(DATA,"^",6),?30,"CMOR: ",CMOR," (",CMOR3,")"
"RTN","MPIFQ1",73,0)
 W !,?2,"NAME: ",$P(DATA,"^")
"RTN","MPIFQ1",74,0)
 W !,?3,"SSN: ",$P(DATA,"^",3),?30,"SEX: ",$P(DATA,"^",11)
"RTN","MPIFQ1",75,0)
 W !,?3,"DOB: ",$P(DATA,"^",4)
"RTN","MPIFQ1",76,0)
 W ?30,"DOD: ",$P(DATA,"^",9)
"RTN","MPIFQ1",77,0)
 I $P(DATA,"^",20)="Y" W !?3,"Multiple Birth Indicator:  Yes"
"RTN","MPIFQ1",78,0)
 I ($P(DATA,"^",12)='"")&($P(DATA,"^",13)'="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12),", ",$P(DATA,"^",13)
"RTN","MPIFQ1",79,0)
 I $P(DATA,"^",12)=""!($P(DATA,"^",13)="") W !,?2,"PLACE OF BIRTH: ",$P(DATA,"^",12)," ",$P(DATA,"^",13)
"RTN","MPIFQ1",80,0)
 W !,?2,"MOTHER'S MAIDEN NAME: ",$P(DATA,"^",16)
"RTN","MPIFQ1",81,0)
 W !,?2,"CLAIM NUMBER: ",$P(DATA,"^",17)
"RTN","MPIFQ1",82,0)
 S POW=$P(DATA,"^",19) I POW'="" W !,?2,"POW STATUS: ",POW
"RTN","MPIFQ1",83,0)
 S CASE=$P(DATA,"^",18)
"RTN","MPIFQ1",84,0)
 I CASE'="" W !,?2,"Open Data Management Case",!,?5,"CASE#: ",$P(CASE,"/")_"   NOIS#: ",$P(CASE,"/",2),!,?5,"CASE WORKER: ",$P(CASE,"/",3)
"RTN","MPIFQ1",85,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"ALIAS")) W !,?2,"Alias(es): " D
"RTN","MPIFQ1",86,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"ALIAS",XX)) Q:'XX  W !?10,^(XX)
"RTN","MPIFQ1",87,0)
 I $D(^TMP("MPIFVQQ",$J,INDEX,"TF"))&($O(^TMP("MPIFVQQ",$J,INDEX,"TF",1))'="") D
"RTN","MPIFQ1",88,0)
 .W !,?2,"TREATING FACILITY LIST:"
"RTN","MPIFQ1",89,0)
 .N XX S XX=0 F  S XX=$O(^TMP("MPIFVQQ",$J,INDEX,"TF",XX)) Q:'XX  S TMP=$P($G(^(XX)),MPICOMP) I TMP'=CMOR3 W !?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFQ1",90,0)
 D PROMPT^MPIFQ3
"RTN","MPIFQ1",91,0)
 S VALMBCK="R"
"RTN","MPIFQ1",92,0)
 Q
"RTN","MPIFQ1",93,0)
CMOR ; CMOR PDAT CALL
"RTN","MPIFQ1",94,0)
 N VALMY,DATA,INDEX,ICN,CHKSUM,CMOR
"RTN","MPIFQ1",95,0)
 D EN^VALM2(XQORNOD(0),"OS")
"RTN","MPIFQ1",96,0)
 I '$D(VALMY) Q
"RTN","MPIFQ1",97,0)
 S INDEX=$O(VALMY(0)),DATA=^TMP("MPIFVQQ",$J,INDEX,"DATA")
"RTN","MPIFQ1",98,0)
 S ICN=$P(DATA,"^",4),CHKSUM=$P(ICN,"V",2),ICN=$P(ICN,"V",1),CMOR=$P(DATA,"^",7)
"RTN","MPIFQ1",99,0)
 I CMOR=$P($$SITE^VASITE(),"^",3) W !!,"CMOR is your site" G END
"RTN","MPIFQ1",100,0)
 W !,"Please be patient while the data is being retrieved from the CMOR."
"RTN","MPIFQ1",101,0)
 D EN1^XWB2HL7(.RETURN,CMOR,"VAFC REMOTE PDAT",1,ICN,"")  ; Request 
"RTN","MPIFQ1",102,0)
 S ^XTMP("MPIFPDAT"_ICN,0)=$$FMADD^XLFDT(DT,2)_"^"_DT_"^"_"REMOTE PDAT QUERY",^XTMP("MPIFPDAT"_ICN,1)=RETURN(0)_"^"_$$NOW^XLFDT
"RTN","MPIFQ1",103,0)
 S CNT=0
"RTN","MPIFQ1",104,0)
AGAIN1 H 2 K RES1 D RTNDATA^XWBDRPC(.RES1,RETURN(0)) S CNT=CNT+1
"RTN","MPIFQ1",105,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT<11 G AGAIN1
"RTN","MPIFQ1",106,0)
 I +RES1(0)=-1&(RES1(0)["Not DONE") I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFQ1",107,0)
 I RES1(0)="0^New" I CNT<11 G AGAIN1
"RTN","MPIFQ1",108,0)
 I RES1(0)="0^New" I CNT>10 W !,"Unable to get data" G END
"RTN","MPIFQ1",109,0)
 I +RES1(0)=-1 W !!,$P(RES1(0),"^",2) G END
"RTN","MPIFQ1",110,0)
 I RES1'="" I CNT<11 G AGAIN1
"RTN","MPIFQ1",111,0)
 I RES1'="" I CNT>10 W !,"Unable to get data" Q
"RTN","MPIFQ1",112,0)
 D CLEAR^VALM1
"RTN","MPIFQ1",113,0)
 N NUM S NUM="",CNT=0
"RTN","MPIFQ1",114,0)
 F  S NUM=$O(RES1(NUM)) Q:NUM=""  D
"RTN","MPIFQ1",115,0)
 .I CNT>20 D PROMPT^MPIFQ3,CLEAR^VALM1 S CNT=0
"RTN","MPIFQ1",116,0)
 .I RES1(NUM)["Additional" W !! S CNT=CNT+2
"RTN","MPIFQ1",117,0)
 .I CNT<21 W !,RES1(NUM) S CNT=CNT+1
"RTN","MPIFQ1",118,0)
END D PROMPT^MPIFQ3 S VALMBCK="R" K CNT,RETURN,RES1
"RTN","MPIFQ1",119,0)
 Q
"RTN","MPIFQ1",120,0)
HELP ; Help List Manager Action (MPIF REAL-TIME QUERY (HELP))
"RTN","MPIFQ1",121,0)
 D CLEAR^VALM1,MSG4^MPIFQ3,PROMPT^MPIFQ3 S VALMBCK="R"
"RTN","MPIFQ1",122,0)
 Q
"RTN","MPIFQ1",123,0)
EXIT ;Exit for List Manager Template MPIF REAL-TIME QUERY
"RTN","MPIFQ1",124,0)
 K VALMBCK,VALMCNT,VALMHDR
"RTN","MPIFQ1",125,0)
 Q
"RTN","MPIFQ3")
0^7^B16977860
"RTN","MPIFQ3",1,0)
MPIFQ3 ;BIRM/CMC-QUERY LIST MANAGER FUNCTIONS ;APR 28, 2003
"RTN","MPIFQ3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28**;30 Apr 99
"RTN","MPIFQ3",3,0)
 ;
"RTN","MPIFQ3",4,0)
MSG(LOCSSN,LOCNAME,MPISSN,MPINAME) ;
"RTN","MPIFQ3",5,0)
 W !!!,"Local SSN = "_LOCSSN,?35,"MPI SSN = "_MPISSN
"RTN","MPIFQ3",6,0)
 W !,"Local NAME = "_LOCNAME,?40,"MPI NAME = "_MPINAME
"RTN","MPIFQ3",7,0)
 Q
"RTN","MPIFQ3",8,0)
MSG3 W !!,"Updating ICN and CMOR"
"RTN","MPIFQ3",9,0)
 Q
"RTN","MPIFQ3",10,0)
MSG1 W !!,"You are attempting to assign an ICN that has already been assigned",!,"to another patient in your Patient file."
"RTN","MPIFQ3",11,0)
 W !,"An exception will be recorded noting that these 2 patients ",!,"need to be reviewed to determine if they are duplicates."
"RTN","MPIFQ3",12,0)
 Q
"RTN","MPIFQ3",13,0)
MSG2 W !!,"You have selected a patient from the list of potential matches",!," where the Name is different than what the MPI has."
"RTN","MPIFQ3",14,0)
 W !," Are you sure this is the correct patient?"
"RTN","MPIFQ3",15,0)
 Q
"RTN","MPIFQ3",16,0)
MSG5 W !!,"No Action Taken"
"RTN","MPIFQ3",17,0)
 Q
"RTN","MPIFQ3",18,0)
MSG4 W !!,"When you have reached MPI QUERY RESULTS screen, the software has"
"RTN","MPIFQ3",19,0)
 W !,"queried the Master Patient Index, for possible matches to the patient"
"RTN","MPIFQ3",20,0)
 W !,"you are adding, or selected (pre-existing record).",!!,"The MPI has returned a list of possible matches for that patient"
"RTN","MPIFQ3",21,0)
 W !,"An '*' indicates the Integration Control Number of a patient",!,"on the list, matches one in your Patient file already."
"RTN","MPIFQ3",22,0)
 W !,"To select a patient from the list, choose SE.",!,"If the patients listed as potential matches aren't the same patient"
"RTN","MPIFQ3",23,0)
 W !,"select NEW to create a new entry on the MPI for this patient.",!,"To view all data for a patient in the list of possible matches",!,"from the MPI, select MPI."
"RTN","MPIFQ3",24,0)
 W !,"To view additional data for a patient in the list of possible",!,"matches from the CMOR site, select CMR."
"RTN","MPIFQ3",25,0)
 Q
"RTN","MPIFQ3",26,0)
PROMPT ;
"RTN","MPIFQ3",27,0)
 W !!
"RTN","MPIFQ3",28,0)
 S DIR("A")="Hit the Enter key, to Continue ",DIR(0)="EA"
"RTN","MPIFQ3",29,0)
 D ^DIR K DIR(0),DIR("A")
"RTN","MPIFQ3",30,0)
 Q
"RTN","MPIFQ3",31,0)
PROMPT1() ;
"RTN","MPIFQ3",32,0)
 N DIR,X,Y
"RTN","MPIFQ3",33,0)
 W !
"RTN","MPIFQ3",34,0)
 S DIR("A")="Are you sure this is the correct patient? Enter YES or NO ",DIR(0)="YA"
"RTN","MPIFQ3",35,0)
 D ^DIR K DIR(0),DIR("A")
"RTN","MPIFQ3",36,0)
 Q Y
"RTN","MPIFQ3",37,0)
HERESSN(SSN) ;
"RTN","MPIFQ3",38,0)
 N DFN
"RTN","MPIFQ3",39,0)
 I $G(SSN)="" Q 0
"RTN","MPIFQ3",40,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","MPIFQ3",41,0)
 Q:$G(DFN)']"" 0
"RTN","MPIFQ3",42,0)
 Q DFN
"RTN","MPIFQ3",43,0)
CHECK(DFN) ;
"RTN","MPIFQ3",44,0)
 N CHECK
"RTN","MPIFQ3",45,0)
 D GETDATA^MPIFQ0("^DPT(",DFN,"CHECK",".01;.02;.03;.09;.301;391;1901")
"RTN","MPIFQ3",46,0)
 I $G(CHECK(2,DFN,.01))']"" Q 0
"RTN","MPIFQ3",47,0)
 I $G(CHECK(2,DFN,.02))']"" Q 0
"RTN","MPIFQ3",48,0)
 I $G(CHECK(2,DFN,.03))']"" Q 0
"RTN","MPIFQ3",49,0)
 I $G(CHECK(2,DFN,.09))']"" Q 0
"RTN","MPIFQ3",50,0)
 I $G(CHECK(2,DFN,.301))']"" Q 0
"RTN","MPIFQ3",51,0)
 I $G(CHECK(2,DFN,391))']"" Q 0
"RTN","MPIFQ3",52,0)
 I $G(CHECK(2,DFN,1901))']"" Q 0
"RTN","MPIFQ3",53,0)
 Q 1
"RTN","MPIFQ3",54,0)
TF(DFN,ARR) ;Add you to TF list and trigger TF and Sub msgs
"RTN","MPIFQ3",55,0)
 I $$PATCH^XPDUTL("DG*5.3*261") D FILE^VAFCTFU(DFN,+$$SITE^VASITE,1)
"RTN","MPIFQ3",56,0)
 N RESLT
"RTN","MPIFQ3",57,0)
 S RESLT=$$A24^MPIFA24B(DFN)
"RTN","MPIFQ3",58,0)
 I +RESLT<0 D EXC^RGHLLOG(208,"Problem building A24 (ADD TF) for DFN= "_DFN,DFN)
"RTN","MPIFQ3",59,0)
 Q
"RTN","MPIFQ3",60,0)
 ;
"RTN","MPIFQ3",61,0)
A28(DFN) ;
"RTN","MPIFQ3",62,0)
 S ICN=$$A28^MPIFA28(DFN)
"RTN","MPIFQ3",63,0)
 I +ICN>0 I '$D(MPIFS) W:'$D(MPIFRPC) !!,"Message sent to MPI requesting Patient to be added."
"RTN","MPIFQ3",64,0)
 Q
"RTN","MPIFQ3",65,0)
LOCAL(DFN) ;
"RTN","MPIFQ3",66,0)
 Q:+$$GETICN^MPIF001(DFN)>0
"RTN","MPIFQ3",67,0)
 N ICN S ICN=$$ICNLC^MPIF001(DFN) ;don't assign local if exists
"RTN","MPIFQ3",68,0)
 Q
"RTN","MPIFQ3",69,0)
HEREICN(ICN) ;
"RTN","MPIFQ3",70,0)
 Q:$G(ICN)="" 0
"RTN","MPIFQ3",71,0)
 N DFN S DFN=$$GETDFN^MPIF001(+ICN)
"RTN","MPIFQ3",72,0)
 Q:$G(DFN)'>0 0
"RTN","MPIFQ3",73,0)
 Q DFN
"RTN","MPIFQ3",74,0)
LOC2(DFN) ;
"RTN","MPIFQ3",75,0)
 W:'$D(MPIFRPC) !!,"Potential Match Found Assigning Local ICN"
"RTN","MPIFQ3",76,0)
 D START^RGHLLOG(),EXC^RGHLLOG(218,"For Patient DFN="_DFN_" Use Single Patient Initialization to MPI option to manually process",DFN),STOP^RGHLLOG()
"RTN","MPIFQ3",77,0)
 D LOCAL(DFN)
"RTN","MPIFQ3",78,0)
 Q
"RTN","MPIFRES")
0^14^B15782359
"RTN","MPIFRES",1,0)
MPIFRES ;SF/CMC-LOCAL AND MISSING ICN RESOLUTION ;JUL 13, 1998
"RTN","MPIFRES",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,7,10,15,17,21,26,28**;30 Apr 99
"RTN","MPIFRES",3,0)
 ;
"RTN","MPIFRES",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFRES",5,0)
 ;  EXC, START and STOP^RGHLLOG - #2796
"RTN","MPIFRES",6,0)
 ;  ^DPT("AICNL", ^DPT("AMPIMIS" - #2070
"RTN","MPIFRES",7,0)
 ;  ^RGHL7(991.1 - #3259
"RTN","MPIFRES",8,0)
 ;  ^RGSITE - #2746
"RTN","MPIFRES",9,0)
 ;
"RTN","MPIFRES",10,0)
BKG ;
"RTN","MPIFRES",11,0)
 S ZTRTN="GO^MPIFRES",ZTDESC="USE HL7 MSGS AND MAIL TO BUILD ICN"
"RTN","MPIFRES",12,0)
 D NOW^%DTC
"RTN","MPIFRES",13,0)
 S ZTIO="",ZTDTH=%
"RTN","MPIFRES",14,0)
 I $D(DUZ) S ZTSAVE("DUZ")=DUZ
"RTN","MPIFRES",15,0)
 D ^%ZTLOAD
"RTN","MPIFRES",16,0)
 D HOME^%ZIS K IO("Q")
"RTN","MPIFRES",17,0)
 K ZTDESC,ZTDTH,ZTIO,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE,ZTSK,%
"RTN","MPIFRES",18,0)
 Q
"RTN","MPIFRES",19,0)
 ;
"RTN","MPIFRES",20,0)
GO ;ENTRY POINT
"RTN","MPIFRES",21,0)
 N MPIMORE,MPITOT
"RTN","MPIFRES",22,0)
 L +^XTMP("MPIF RESOLUTION"):3 E  Q
"RTN","MPIFRES",23,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","MPIFRES",24,0)
 ;
"RTN","MPIFRES",25,0)
 K ^TMP("HLS",$J),STOP
"RTN","MPIFRES",26,0)
 D START^RGHLLOG()
"RTN","MPIFRES",27,0)
 D HLRDF
"RTN","MPIFRES",28,0)
 I $D(STOP) K STOP Q  ;patch 7 added to quit if init returned an error
"RTN","MPIFRES",29,0)
 D LOOP
"RTN","MPIFRES",30,0)
 I $D(^TMP("HLS",$J)) D SEND
"RTN","MPIFRES",31,0)
 D STOP^RGHLLOG(0)
"RTN","MPIFRES",32,0)
 K MPIIT,MPITOT,HLDT,HLDT1,MPICNT,MPIDNUM,MPIEROR,MPIMIDT,MPIMSH
"RTN","MPIFRES",33,0)
 K MPIOUT,MPIQRYNM,MPISEQ,QCNT,MPIMCNT,MPIMTX,ENDT,MPIFRES
"RTN","MPIFRES",34,0)
 L -^XTMP("MPIF RESOLUTION")
"RTN","MPIFRES",35,0)
 ; mark job completion date/time
"RTN","MPIFRES",36,0)
 S $P(^RGSITE(991.8,1,0),"^",4)=$$NOW^XLFDT
"RTN","MPIFRES",37,0)
 Q
"RTN","MPIFRES",38,0)
 ;
"RTN","MPIFRES",39,0)
HLRDF ;
"RTN","MPIFRES",40,0)
 S (MPIOUT,MPIMCNT)=""
"RTN","MPIFRES",41,0)
 S HL("ECH")="^~\&"
"RTN","MPIFRES",42,0)
 S HL("FS")="|"
"RTN","MPIFRES",43,0)
 D INIT^HLFNC2("MPIF ICN-Q02 SERVER",.HL)
"RTN","MPIFRES",44,0)
 I $O(HL("")) D EXC^RGHLLOG(220,"INIT^HLFNC2 call error returned") S STOP="" Q
"RTN","MPIFRES",45,0)
 D CREATE^HLTF(.MPIMCNT,.MPIMTX,.HLDT,.HLDT1)
"RTN","MPIFRES",46,0)
 Q
"RTN","MPIFRES",47,0)
LOOP ;
"RTN","MPIFRES",48,0)
 S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",49,0)
 D MAKE
"RTN","MPIFRES",50,0)
 Q
"RTN","MPIFRES",51,0)
SEND ;ready to send
"RTN","MPIFRES",52,0)
 D GENERATE^HLMA("MPIF ICN-Q02 SERVER","GB",1,.MPIMTX,.MPIEROR,.MPIMORE)
"RTN","MPIFRES",53,0)
 I +MPIEROR=0 D EXC^RGHLLOG(220,"GENERATE^HLMA call returned error") Q
"RTN","MPIFRES",54,0)
 K %,MPIMTX,MPIEROR,MPIMORE
"RTN","MPIFRES",55,0)
 K ^TMP("HLS",$J)
"RTN","MPIFRES",56,0)
 Q
"RTN","MPIFRES",57,0)
MAKE ;
"RTN","MPIFRES",58,0)
 N LOCAL,MPIIT,TICN,STOP,X,Y,%,%H,%I,TODAY,SITE
"RTN","MPIFRES",59,0)
 S LOCAL="",MPIIT=0,MPIFRES="",SITE=$P($$SITE^VASITE(),"^",3)
"RTN","MPIFRES",60,0)
 D NOW^%DTC S TODAY=X
"RTN","MPIFRES",61,0)
 ;local ICNs
"RTN","MPIFRES",62,0)
 F  S MPIIT=$O(^DPT("AICNL",1,MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",63,0)
 .; LINE BELOW ADDED FOR PATCH 26 TO CLEANUP AICNL X-REF WHEN LEFT AROUND
"RTN","MPIFRES",64,0)
 .I $E($$GETICN^MPIF001(MPIIT),1,3)'=SITE K ^DPT("AICNL",1,MPIIT) Q
"RTN","MPIFRES",65,0)
 .Q:+$G(^DPT("AICNL",1,MPIIT))=1
"RTN","MPIFRES",66,0)
 .; ^ only send patient to MPI for Local ICN resolution 1 time
"RTN","MPIFRES",67,0)
 .I $D(^RGHL7(991.1,"ADFN",218,MPIIT)) S ^DPT("AICNL",1,MPIIT)="1^"_TODAY Q
"RTN","MPIFRES",68,0)
 .; ^ checking if potential match exception
"RTN","MPIFRES",69,0)
 .D MAKE3
"RTN","MPIFRES",70,0)
 ;missing ICNs
"RTN","MPIFRES",71,0)
 S MPIIT=0
"RTN","MPIFRES",72,0)
 F  S MPIIT=$O(^DPT("AMPIMIS",MPIIT)) Q:MPIIT=""  D
"RTN","MPIFRES",73,0)
 .K STOP
"RTN","MPIFRES",74,0)
 .S TICN=+$$GETICN^MPIF001(MPIIT)
"RTN","MPIFRES",75,0)
 .I TICN<0,'$D(STOP) D MAKE3
"RTN","MPIFRES",76,0)
 .I TICN>0 K ^DPT("AMPIMIS",MPIIT)
"RTN","MPIFRES",77,0)
 Q
"RTN","MPIFRES",78,0)
MAKE3 ;
"RTN","MPIFRES",79,0)
 K MPIOUT
"RTN","MPIFRES",80,0)
 S MPIFRES=""
"RTN","MPIFRES",81,0)
 S:$G(MPIQRYNM)="" MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFRES",82,0)
 D VTQ1^MPIFVTQ(MPIIT,.MPIOUT,.HL,.MPIQRYNM)
"RTN","MPIFRES",83,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="invalid DFN"!($P(MPIOUT(0),"^",2)="no encoding characters") D
"RTN","MPIFRES",84,0)
 .D EXC^RGHLLOG(206,"DFN = "_MPIIT_"  Problem with building VTQ was "_$P(MPIOUT(0),"^",2),MPIIT) Q
"RTN","MPIFRES",85,0)
 I $P(MPIOUT(0),"^")<0,$P(MPIOUT(0),"^",2)="Missing Required Field(s)" Q
"RTN","MPIFRES",86,0)
 Q:$P(MPIOUT(0),"^")<0
"RTN","MPIFRES",87,0)
 S ^DPT("AICNL",1,MPIIT)="1^"_TODAY
"RTN","MPIFRES",88,0)
 ; ^ mark Local ICN as having been sent to MPI for resolution
"RTN","MPIFRES",89,0)
 ;call for HL7 header
"RTN","MPIFRES",90,0)
 S MPIMIDT=MPIMCNT_"-"_MPIDNUM
"RTN","MPIFRES",91,0)
 D MSH^HLFNC2(.HL,MPIMIDT,.MPIMSH)
"RTN","MPIFRES",92,0)
 S MPIOUT(1)=MPIMSH
"RTN","MPIFRES",93,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(1)
"RTN","MPIFRES",94,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",95,0)
 ;MESSAGE BUILT
"RTN","MPIFRES",96,0)
 S MPISEQ=0
"RTN","MPIFRES",97,0)
 ;setup VTQ segment in HL array
"RTN","MPIFRES",98,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(2)
"RTN","MPIFRES",99,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",100,0)
 ;setup RDF segment in HL array
"RTN","MPIFRES",101,0)
 S ^TMP("HLS",$J,MPICNT)=MPIOUT(3)
"RTN","MPIFRES",102,0)
 ;loop through and add the additional RDF continuations
"RTN","MPIFRES",103,0)
 N SCNT,Y S Y=3,SCNT=1 F  S Y=$O(MPIOUT(Y)) Q:'Y  D
"RTN","MPIFRES",104,0)
 .S ^TMP("HLS",$J,MPICNT,SCNT)=MPIOUT(Y),SCNT=SCNT+1
"RTN","MPIFRES",105,0)
 S MPICNT=MPICNT+1
"RTN","MPIFRES",106,0)
 S MPIDNUM=MPIDNUM+1
"RTN","MPIFRES",107,0)
 I MPIDNUM>100 D
"RTN","MPIFRES",108,0)
 .D SEND
"RTN","MPIFRES",109,0)
 .S (MPICNT,MPIDNUM)=1
"RTN","MPIFRES",110,0)
 .D HLRDF
"RTN","MPIFRES",111,0)
 Q
"RTN","MPIFSA2")
0^4^B45281576
"RTN","MPIFSA2",1,0)
MPIFSA2 ;SF/CMC-STAND ALONE QUERY PART 2 ;APRIL 22, 2003
"RTN","MPIFSA2",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28**;30 Apr 99
"RTN","MPIFSA2",3,0)
 ;
"RTN","MPIFSA2",4,0)
FIELD ;
"RTN","MPIFSA2",5,0)
 ;;@00108.1;LAST NAME;ST;30
"RTN","MPIFSA2",6,0)
 ;;@00122;SSN;ST;9
"RTN","MPIFSA2",7,0)
 ;;@00110;DOB;TS;8
"RTN","MPIFSA2",8,0)
 ;;@00756;PRIMARY CARE SITE;ST;3
"RTN","MPIFSA2",9,0)
 ;;@00105;ICN;ST;19
"RTN","MPIFSA2",10,0)
 ;;@00108.2;FIRST NAME;ST;30
"RTN","MPIFSA2",11,0)
 ;;@00169;TREATING FACILITY (MULTIPLE--FILE 985.5);ST;999
"RTN","MPIFSA2",12,0)
 ;;@00740;DATE OF DEATH;TS;8
"RTN","MPIFSA2",13,0)
 ;;@00108.3;MIDDLE;ST;16
"RTN","MPIFSA2",14,0)
 ;;@00111;SEX;ST;1
"RTN","MPIFSA2",15,0)
 ;;@00126.1;BIRTH PLACE CITY;ST;30
"RTN","MPIFSA2",16,0)
 ;;@00126.2;BIRTH PLACE STATE;;ST;3
"RTN","MPIFSA2",17,0)
 ;;@00108.5;NAME PREFIX;ST;15
"RTN","MPIFSA2",18,0)
 ;;@00108.4;NAME SUFFIX;ST;10
"RTN","MPIFSA2",19,0)
 ;;@00109.1;MOTHER'S MAIDEN NAME;ST;20
"RTN","MPIFSA2",20,0)
 ;;@ZEL6;CLAIM NUMBER;ST;9
"RTN","MPIFSA2",21,0)
 ;;@CASE#;MPI DUP CASE#;ST;69
"RTN","MPIFSA2",22,0)
 ;;@POW;POW STATUS;ST;1
"RTN","MPIFSA2",23,0)
 ;;@00127;MULTIPLE BIRTH INDICATOR;ST;1
"RTN","MPIFSA2",24,0)
 ;;@00112.1;ALIAS LAST NAME;ST;30
"RTN","MPIFSA2",25,0)
 ;;@00112.2;ALIAS FIRST NAME;ST;25
"RTN","MPIFSA2",26,0)
 ;;@00112.3;ALIAS MIDDLE NAME;ST;25
"RTN","MPIFSA2",27,0)
 ;;@00112.5;ALIAS PREFIX;ST;10
"RTN","MPIFSA2",28,0)
 ;;@00112.4;ALIAS SUFFIX;ST;10
"RTN","MPIFSA2",29,0)
 ;;
"RTN","MPIFSA2",30,0)
VTQ(MPIVAR) ;
"RTN","MPIFSA2",31,0)
 N TIME,% D NOW^%DTC S TIME=%
"RTN","MPIFSA2",32,0)
 W !!,"Attempting to connect to the Master Patient Index in Austin...",!,"If DOB is inexact or if SSN is not passed or if common name,",!,"this could take some time - please be patient...."
"RTN","MPIFSA2",33,0)
 N HL,MPIQRYNM,MPIINM,MPIOUT,MPIIN,MPIMCNT,MPICNT,MPICS,HEADER,RDF,QUERY,TEST,SITE,MPIDC,MPINM,MPI1NM,MPI2NM,MPIESC,MPIHDOB,MPIRS,MPISCS,QUEDDOB,MPIFLDV
"RTN","MPIFSA2",34,0)
 S HLP("ACKTIME")=300,HL("ECH")="^~\&",HL("FS")="|",MPIQRYNM="VTQ_PID_ICN_NO_LOAD",MPIIN="",MPICNT=1,MPICS=$E(HL("ECH"),1)
"RTN","MPIFSA2",35,0)
 I '$D(MPIVAR("DFN")) S MPIVAR("DFN")=235
"RTN","MPIFSA2",36,0)
 S MPIMCNT=MPIVAR("DFN")
"RTN","MPIFSA2",37,0)
 ;SETUP VTQ
"RTN","MPIFSA2",38,0)
 S MPICS=$E(HL("ECH"),1),MPIRS=$E(HL("ECH"),2),MPISCS=$E(HL("ECH"),4),MPIESC=$E(HL("ECH"),3)
"RTN","MPIFSA2",39,0)
 D BLDRDF(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFSA2",40,0)
 ; ^ fields to be returned in query response
"RTN","MPIFSA2",41,0)
 S QUERY="VTQ"_HL("FS")_$G(MPIVAR("DFN"))_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFSA2",42,0)
 S MPI2NM=$P($G(MPIVAR("NM")),",",1),QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM ; ^ sending last name
"RTN","MPIFSA2",43,0)
 I MPIVAR("SSN")'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_$G(MPIVAR("SSN")) ; ^ sending SSN
"RTN","MPIFSA2",44,0)
 S MPI1NM=$P($G(MPIVAR("NM")),",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM ; ^ sending first name
"RTN","MPIFSA2",45,0)
 I $G(MPIVAR("DOB"))>0 D
"RTN","MPIFSA2",46,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIVAR("DOB")) ; send date of birth (convert to hl7 date format)
"RTN","MPIFSA2",47,0)
 .S QUEDDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB,QUERY=QUERY_QUEDDOB ; ^ sending date of birth
"RTN","MPIFSA2",48,0)
 S SITE=$$SITE^VASITE,SITE=$P(SITE,"^",3),SITE=SITE\1
"RTN","MPIFSA2",49,0)
 S HEADER="MSH"_HL("FS")_HL("ECH")_HL("FS")_"MPI_LOAD"_HL("FS")_SITE_HL("FS")_"MPI-ICN"_HL("FS")_HL("FS")_HL("FS")_HL("FS")_"VTQ"_MPICS_"Q02"_HL("FS")_MPIMCNT_"-"_MPICNT_HL("FS") ;create msh
"RTN","MPIFSA2",50,0)
 S MPIOUT(1)=HEADER K MPIOUT(0) S MPIOUT(2)=QUERY
"RTN","MPIFSA2",51,0)
 ;Attempt to connect to MPI and send message,receive message. Message is returned in MPIDC array
"RTN","MPIFSA2",52,0)
 S TEST=$$EN^HLCSAC("MPIVA DIR","MPIOUT","MPIDC")
"RTN","MPIFSA2",53,0)
 K HLP("ACKTIME") ;Clean up the ack timeout HLP array variable
"RTN","MPIFSA2",54,0)
 I +TEST<0 W !!,"Could not connect to MPI or Time-out occured, try again later." G EXIT
"RTN","MPIFSA2",55,0)
 K ^TMP("MPIFVQQ",$J)
"RTN","MPIFSA2",56,0)
INIPARS ;
"RTN","MPIFSA2",57,0)
 N SEG,INDEX,SKIP,CHECK,AL,TTF2,TFLL,TF,TF2,MPIREP,MPICOMP
"RTN","MPIFSA2",58,0)
 S INDEX=0 K CHECK
"RTN","MPIFSA2",59,0)
LOOP1 ;
"RTN","MPIFSA2",60,0)
 ;process in ADT type messages
"RTN","MPIFSA2",61,0)
 N MPIX S MPIX=0 N REP,SG,MSG,MPIQUIT,MPINODE
"RTN","MPIFSA2",62,0)
 S MPIQUIT=0
"RTN","MPIFSA2",63,0)
 F MPIX=0:1 X "D LOOP2" D  K MPINODE,MSG Q:MPIQUIT'>0
"RTN","MPIFSA2",64,0)
 . I $D(MPINODE(1)) S SG=$E(MPINODE(1),1,3) S MSG(1)=MPINODE(1) D
"RTN","MPIFSA2",65,0)
 ..  S MPIJ=1 F  S MPIJ=$O(MPINODE(MPIJ)) Q:'MPIJ  S MSG(MPIJ)=MPINODE(MPIJ)
"RTN","MPIFSA2",66,0)
 .. D:SG?2A1(1A,1N) @SG
"RTN","MPIFSA2",67,0)
 I '$D(^TMP("MPIFVQQ",$J)) W !!,"Patient was not found in the MPI." G EXIT
"RTN","MPIFSA2",68,0)
DISPLAY ; display data found
"RTN","MPIFSA2",69,0)
 I INDEX>1 W !!,"Found potential matches"
"RTN","MPIFSA2",70,0)
 I INDEX=1 W !!,"Found One Match"
"RTN","MPIFSA2",71,0)
 N CNT1,CNT2,STOP,CNTR2,TTF,CNT3,DIR,X,Y,DATA,PREFIX,ANAME,APRE,ALN,AFN,NAME,SSN,BIRTHDAY,CMOR,TF,ICN,POBC,POBS,PAST,XXX,AMID,ASUF,MNAME,SUFFIX,SEX,IEN,CMOR2,TF2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,POW,MBIRTH,TIEN,MIDDLE
"RTN","MPIFSA2",72,0)
 S (CNT1)=0
"RTN","MPIFSA2",73,0)
 F  S CNT1=$O(^TMP("MPIFVQQ",$J,CNT1)) Q:CNT1'>0!($D(STOP))  D
"RTN","MPIFSA2",74,0)
 . S CNTR2=0
"RTN","MPIFSA2",75,0)
 . I CNT1>1 D
"RTN","MPIFSA2",76,0)
 . . K DIR,X,Y S DIR(0)="Y",DIR("B")="YES",DIR("A")="Continue to next Patient? " D ^DIR
"RTN","MPIFSA2",77,0)
 . . I Y'=1 S STOP=""
"RTN","MPIFSA2",78,0)
 . Q:$D(STOP)
"RTN","MPIFSA2",79,0)
 . S CNTR2=CNTR2+1,DATA=$G(^TMP("MPIFVQQ",$J,CNT1,"DATA"))
"RTN","MPIFSA2",80,0)
 . Q:DATA=""
"RTN","MPIFSA2",81,0)
 . K CHECK S NAME=$P(DATA,"^"),SSN=$P(DATA,"^",3),BIRTHDAY=$P(DATA,"^",4),ICN=$P(DATA,"^",6),CMOR=$P(DATA,"^",5)
"RTN","MPIFSA2",82,0)
 . I $G(CMOR)'="" S TIEN=$$LKUP^XUAF4(CMOR) I TIEN'="" S CMOR2=$P($$NS^XUAF4(+TIEN),"^")
"RTN","MPIFSA2",83,0)
 . S SEX=$P(DATA,"^",11),SUFFIX=$P(DATA,"^",15),PREFIX=$P(DATA,"^",14),MIDDLE=$P(DATA,"^",10),POBC=$P(DATA,"^",12),POBS=$P(DATA,"^",13),MNAME=$P(DATA,"^",16)
"RTN","MPIFSA2",84,0)
 . S PAST=$P(DATA,"^",9),CLAIM=$P(DATA,"^",17),CASE=$P(DATA,"^",18),NOIS=$P(CASE,"/",2),CUSER=$P(CASE,"/",3),CASE=$P(CASE,"/")
"RTN","MPIFSA2",85,0)
 . S CMOR3=$P($$NS^XUAF4(CMOR),"^"),MBIRTH=$P(DATA,"^",20),POW=$P(DATA,"^",19)
"RTN","MPIFSA2",86,0)
 . W:$G(CASE)'="" !,"<<THIS ICN IS ACTIVELY BEING WORKED ON - CASE #",CASE
"RTN","MPIFSA2",87,0)
 . W:$G(NOIS)'="" " NOIS: ",NOIS
"RTN","MPIFSA2",88,0)
 . W:$G(CASE)'="" ">>"
"RTN","MPIFSA2",89,0)
 . W:$G(CUSER)'="" !,?3,"Case Worker: ",CUSER
"RTN","MPIFSA2",90,0)
 . W !!,"ICN      : ",$P(ICN,"V"),?30,"CMOR: ",CMOR2," (",CMOR,")"
"RTN","MPIFSA2",91,0)
 . W !,"Name     : ",NAME,!,"SSN      : ",SSN
"RTN","MPIFSA2",92,0)
 . W !,"DOB      : ",BIRTHDAY
"RTN","MPIFSA2",93,0)
 . W:$G(PAST)'="" ?30,"Date of Death: ",PAST
"RTN","MPIFSA2",94,0)
 . W:$G(MBIRTH)'=""&(MBIRTH'="N") !,"Multiple Birth Indicator: Yes"
"RTN","MPIFSA2",95,0)
 . W !,"Sex      : ",SEX
"RTN","MPIFSA2",96,0)
 . W:$G(CLAIM)'="" !,"Claim #  : ",CLAIM
"RTN","MPIFSA2",97,0)
 . W:$G(POBC)'="" !,"Place of Birth: ",POBC W:$G(POBS)'="" ", ",POBS
"RTN","MPIFSA2",98,0)
 . W:$G(MNAME)'="" !,"Mother's Maiden Name: ",MNAME
"RTN","MPIFSA2",99,0)
 . W:$G(POW)'="" !,"POW Status: ",POW
"RTN","MPIFSA2",100,0)
 . I $D(^TMP("MPIFVQQ",$J,CNT1,"ALIAS")) D
"RTN","MPIFSA2",101,0)
 . . W !!,"Alias(es): "
"RTN","MPIFSA2",102,0)
 . . S XXX=0 F  S XXX=$O(^TMP("MPIFVQQ",$J,CNT1,"ALIAS",XXX)) Q:XXX=""  D
"RTN","MPIFSA2",103,0)
 . . . W !?5,^TMP("MPIFVQQ",$J,CNT1,"ALIAS",XXX)
"RTN","MPIFSA2",104,0)
 . S CNT2=""
"RTN","MPIFSA2",105,0)
 . W ! N TMP S XXX=0 F  S XXX=$O(^TMP("MPIFVQQ",$J,CNT1,"TF",XXX)) Q:XXX=""  S TMP=$G(^TMP("MPIFVQQ",$J,CNT1,"TF",XXX)) Q:TMP=""  D
"RTN","MPIFSA2",106,0)
 .. S TMP=$P(TMP,MPICOMP,1) I TMP'=CMOR3 W !?10,"Treating Facility: ",$P($$NS^XUAF4($$LKUP^XUAF4(TMP)),"^")," (",TMP,")"
"RTN","MPIFSA2",107,0)
 .W !!
"RTN","MPIFSA2",108,0)
EXIT K DA,X,Y W !! Q
"RTN","MPIFSA2",109,0)
LOOP2 ;
"RTN","MPIFSA2",110,0)
 N MPIDONE,MPII,MPIJ
"RTN","MPIFSA2",111,0)
 S MPII=0,MPIDONE=0
"RTN","MPIFSA2",112,0)
 F  S MPIQUIT=$O(MPIDC(MPIQUIT)) Q:'MPIQUIT  D  Q:MPIDONE
"RTN","MPIFSA2",113,0)
 . I MPIDC(MPIQUIT)="" S MPIDONE=1 Q
"RTN","MPIFSA2",114,0)
 . S MPII=MPII+1,MPINODE(MPII)=$G(MPIDC(MPIQUIT)) Q
"RTN","MPIFSA2",115,0)
 Q
"RTN","MPIFSA2",116,0)
MSH ;
"RTN","MPIFSA2",117,0)
 S MPIREP=$E(HL("ECH"),2),MPICOMP=$E(HL("ECH"),1)
"RTN","MPIFSA2",118,0)
 Q
"RTN","MPIFSA2",119,0)
MSA ;
"RTN","MPIFSA2",120,0)
 Q
"RTN","MPIFSA2",121,0)
RDF ;
"RTN","MPIFSA2",122,0)
 Q
"RTN","MPIFSA2",123,0)
QAK ;
"RTN","MPIFSA2",124,0)
 Q
"RTN","MPIFSA2",125,0)
RDT ;
"RTN","MPIFSA2",126,0)
 S INDEX=$G(INDEX)+1
"RTN","MPIFSA2",127,0)
 D RDT^MPIFSA3(.INDEX,.HL,.MSG)
"RTN","MPIFSA2",128,0)
 Q
"RTN","MPIFSA2",129,0)
BLDRDF(MPIOUT,MPICNT,MPIRS,MPICS) ;
"RTN","MPIFSA2",130,0)
 S MPIOUT(MPICNT)="RDF"_HL("FS")_24_HL("FS") N T,I F I=1:1 S T=$T(FIELD+I) Q:$P(T,";",3)=""  D
"RTN","MPIFSA2",131,0)
 . I I=1 S MPIFLDV=$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",132,0)
 . I I'=1 S MPIFLDV=MPIRS_$P(T,";",3)_MPICS_$P(T,";",5)_MPICS_$P(T,";",6)
"RTN","MPIFSA2",133,0)
  .N XLEN,TOTLEN
"RTN","MPIFSA2",134,0)
 . S TOTLEN=$L($G(MPIOUT(MPICNT)))+$L(MPIFLDV)
"RTN","MPIFSA2",135,0)
 . I TOTLEN'>245 S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_MPIFLDV Q
"RTN","MPIFSA2",136,0)
 . I TOTLEN>245 D
"RTN","MPIFSA2",137,0)
 .. S XLEN=245-$L($G(MPIOUT(MPICNT)))
"RTN","MPIFSA2",138,0)
 .. S MPIOUT(MPICNT)=$G(MPIOUT(MPICNT))_$E(MPIFLDV,1,XLEN),MPICNT=MPICNT+1
"RTN","MPIFSA2",139,0)
 .. S MPIOUT(MPICNT)=$E(MPIFLDV,XLEN+1,245)
"RTN","MPIFSA2",140,0)
 Q
"RTN","MPIFSA3")
0^12^B24686128
"RTN","MPIFSA3",1,0)
MPIFSA3 ;SF/CMC,DLR-STAND ALONE QUERY PART 2 ;MAY 13, 2003
"RTN","MPIFSA3",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**28**;30 Apr 99
"RTN","MPIFSA3",3,0)
 ;
"RTN","MPIFSA3",4,0)
RDT(INDEX,HL,MSG) ;
"RTN","MPIFSA3",5,0)
 N LASTNAME,FRSTNAME,SSN,BIRTHDAY,CMOR,NAME,ICN,POBC,POBS,PAST,HEREICN,HERESSN,MIDDLE,MNAME,SUFFIX,PREFIX,SEX,IEN,CMOR2,CLAIM,CASE,NOIS,CUSER,TFN,CMOR3,XXX,POW,MBIRTH,Y,LNGTH,SEQ1,SEQ,RDT,NXT,LNGTH2,LNGTH1,MPIREP,MPICOMP,TCASE
"RTN","MPIFSA3",6,0)
 S MPICOMP=$E(HL("ECH"),1),MPIREP=$E(HL("ECH"),2)
"RTN","MPIFSA3",7,0)
 S SEQ1=1,SEQ=0,X=0 F  S X=$O(MSG(X)) Q:'X  S LNGTH=$L(MSG(X),HL("FS")) D
"RTN","MPIFSA3",8,0)
 . F Y=1:1:LNGTH S:Y'=1 SEQ=SEQ+1 D
"RTN","MPIFSA3",9,0)
 .. S NXT=$P(MSG(X),HL("FS"),Y) D
"RTN","MPIFSA3",10,0)
 ... I $L($G(RDT(SEQ)))=245 D  Q
"RTN","MPIFSA3",11,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))>245 S LNGTH1=$L(RDT(SEQ,SEQ1)) S LNGTH2=245-LNGTH1,RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)),SEQ1=SEQ1+1
"RTN","MPIFSA3",12,0)
 .... I $L(NXT_$G(RDT(SEQ,SEQ1)))'>245 S RDT(SEQ,SEQ1)=$G(RDT(SEQ,SEQ1))_NXT
"RTN","MPIFSA3",13,0)
 ... I $L(NXT_$G(RDT(SEQ)))>245 S LNGTH1=$L($G(RDT(SEQ))) S LNGTH2=245-LNGTH1,RDT(SEQ)=$G(RDT(SEQ))_$E(NXT,1,LNGTH2),LNGTH2=LNGTH2+1,NXT=$E(NXT,LNGTH2,$L(NXT)) S RDT(SEQ,SEQ1)=NXT
"RTN","MPIFSA3",14,0)
 ... I $L(NXT_$G(RDT(SEQ)))'>245 S RDT(SEQ)=$G(RDT(SEQ))_NXT Q
"RTN","MPIFSA3",15,0)
RDTAL ;
"RTN","MPIFSA3",16,0)
 S FRSTNAME=RDT(6),LASTNAME=RDT(1),MIDDLE=RDT(9),SSN=RDT(2)
"RTN","MPIFSA3",17,0)
 S SUFFIX=RDT(14),PREFIX=RDT(13)
"RTN","MPIFSA3",18,0)
 S NAME=LASTNAME_","_FRSTNAME
"RTN","MPIFSA3",19,0)
 I MIDDLE'="" S NAME=NAME_" "_MIDDLE
"RTN","MPIFSA3",20,0)
 I SUFFIX'="" S NAME=NAME_" "_SUFFIX
"RTN","MPIFSA3",21,0)
 I PREFIX'="" S NAME=NAME_" "_PREFIX
"RTN","MPIFSA3",22,0)
 S ICN=RDT(5),CMOR=RDT(4),CMOR2=CMOR,CMOR3=CMOR
"RTN","MPIFSA3",23,0)
 I $G(CMOR)'="" S IEN=$$LKUP^XUAF4(CMOR) I IEN'="" S CMOR2=$P($$NS^XUAF4(+IEN),"^")
"RTN","MPIFSA3",24,0)
 I $G(SKIP)="Y" K SKIP Q
"RTN","MPIFSA3",25,0)
 S BIRTHDAY=RDT(3)
"RTN","MPIFSA3",26,0)
 I $G(LASTNAME)="" Q
"RTN","MPIFSA3",27,0)
 I $G(BIRTHDAY)]"" S BIRTHDAY=$$FMDATE^HLFNC(BIRTHDAY),BIRTHDAY=$TR($$FMTE^XLFDT(BIRTHDAY,"5D"),"/","-")
"RTN","MPIFSA3",28,0)
 S SEX=RDT(10),CLAIM=RDT(16),MNAME=RDT(15),POBC=RDT(11),POBS=RDT(12)
"RTN","MPIFSA3",29,0)
 S PAST=RDT(8) I $G(PAST)]"" S PAST=$$FMDATE^HLFNC(PAST),PAST=$TR($$FMTE^XLFDT(PAST,"5D"),"/","-")
"RTN","MPIFSA3",30,0)
 S CASE=RDT(17),NOIS=$P(CASE,"/",2),CUSER=$P(CASE,"/",3),TCASE=CASE,CASE=$P(CASE,"/")
"RTN","MPIFSA3",31,0)
 S MBIRTH=RDT(19),POW=RDT(18)
"RTN","MPIFSA3",32,0)
 I POW="N" S POW="No"
"RTN","MPIFSA3",33,0)
 I POW="Y" S POW="Yes"
"RTN","MPIFSA3",34,0)
TMP ;New pt. so incrementing index and resetting counter
"RTN","MPIFSA3",35,0)
 S ^TMP("MPIFVQQ",$J,INDEX,"DATA")=NAME_"^"_LASTNAME_"^"_SSN_"^"_BIRTHDAY_"^"_CMOR_"^"_ICN_"^"_FRSTNAME_"^^"_PAST_"^"_MIDDLE_"^"_SEX_"^"_POBC_"^"_POBS_"^"_PREFIX_"^"_SUFFIX_"^"_MNAME_"^"_CLAIM_"^"_TCASE_"^"_POW_"^"_MBIRTH
"RTN","MPIFSA3",36,0)
 ;loop on TF's
"RTN","MPIFSA3",37,0)
 ;I TF2'="" F XXX=1:1 S TTF2=$P(TF2,MPIREP,XXX) Q:TTF2=""  S TFLL(INDEX,XXX)=TTF2
"RTN","MPIFSA3",38,0)
 N LAST,SEQ,ORGLST,TFLL
"RTN","MPIFSA3",39,0)
 I $D(RDT(7)) N LAST S SEQ=1 S LAST=$L(RDT(7),MPIREP) D
"RTN","MPIFSA3",40,0)
 .N X F X=1:1:LAST-1 S TFLL(INDEX,X)=$P(RDT(7),MPIREP,X)
"RTN","MPIFSA3",41,0)
 .I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,LAST)=$P($P(RDT(7),MPIREP,LAST),MPICOMP)
"RTN","MPIFSA3",42,0)
 . I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7),MPIREP,LAST) F  Q:'$D(RDT(7,SEQ))  N LAST S LAST=$L(RDT(7,SEQ),MPIREP) D
"RTN","MPIFSA3",43,0)
 ..N X F X=1:1:LAST-1 S TFLL(INDEX,X)=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(7,SEQ),MPIREP,X) K LASTVAL
"RTN","MPIFSA3",44,0)
 ..I '$D(RDT(7,SEQ)) I $P(RDT(7),MPIREP,LAST)'="" S TFLL(INDEX,LAST)=$P($P(RDT(7),MPIREP,LAST),MPICOMP)
"RTN","MPIFSA3",45,0)
 ..I $D(RDT(7,SEQ)) S LASTVAL=$P(RDT(7,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",46,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",47,0)
 ;loop on TFLL to build TF LIST nodes
"RTN","MPIFSA3",48,0)
 S X=0 F  S X=$O(TFLL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"TF",X)=TFLL(INDEX,X)
"RTN","MPIFSA3",49,0)
ALIAS ;loop on alias last name
"RTN","MPIFSA3",50,0)
 N LAST,SEQ,ORGLST,AL
"RTN","MPIFSA3",51,0)
 I $D(RDT(20)) N LAST S SEQ=1 S LAST=$L(RDT(20),MPIREP) D
"RTN","MPIFSA3",52,0)
 .N X F X=1:1:LAST-1 S AL(INDEX,X)=$P(RDT(20),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X)
"RTN","MPIFSA3",53,0)
 .I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P(RDT(20),MPIREP,LAST)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",54,0)
 . I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20),MPIREP,LAST) F  Q:'$D(RDT(20,SEQ))  N LAST S LAST=$L(RDT(20,SEQ),MPIREP) D
"RTN","MPIFSA3",55,0)
 ..N X F X=1:1:LAST-1 S AL(INDEX,X)=$S($D(LASTVAL):LASTVAL,1:"")_$P(RDT(20,SEQ),MPIREP,X)_","_$P($G(RDT(21)),MPIREP,X)_" "_$P($G(RDT(22)),MPIREP,X)_" "_$P($G(RDT(23)),MPIREP,X)_" "_$P($G(RDT(24)),MPIREP,X) K LASTVAL
"RTN","MPIFSA3",56,0)
 ..I '$D(RDT(20,SEQ)) I $P(RDT(20),MPIREP,LAST)'="" S AL(INDEX,LAST)=$P($P(RDT(20),MPIREP,LAST),MPICOMP)_","_$P($G(RDT(21)),MPIREP,LAST)_" "_$P($G(RDT(22)),MPIREP,LAST)_" "_$P($G(RDT(23)),MPIREP,LAST)_" "_$P($G(RDT(24)),MPIREP,LAST)
"RTN","MPIFSA3",57,0)
 ..I $D(RDT(20,SEQ)) S LASTVAL=$P(RDT(20,SEQ),MPIREP,LAST)
"RTN","MPIFSA3",58,0)
 ..S SEQ=SEQ+1
"RTN","MPIFSA3",59,0)
 S X=0 F  S X=$O(AL(INDEX,X)) Q:'X  S ^TMP("MPIFVQQ",$J,INDEX,"ALIAS",X)=AL(INDEX,X)
"RTN","MPIFSA3",60,0)
 Q
"RTN","MPIFSAQ")
0^5^B13321894
"RTN","MPIFSAQ",1,0)
MPIFSAQ ;SF/CMC-STAND ALONE QUERY ;JAN 12, 1998
"RTN","MPIFSAQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,3,8,13,17,21,23,28**;30 Apr 99
"RTN","MPIFSAQ",3,0)
 ;
"RTN","MPIFSAQ",4,0)
 ;Integration Agreements: $$EN^HLCSAC - #3471
"RTN","MPIFSAQ",5,0)
 ;
"RTN","MPIFSAQ",6,0)
VTQ(MPIVAR) ;
"RTN","MPIFSAQ",7,0)
 D VTQ^MPIFSA2(.MPIVAR)
"RTN","MPIFSAQ",8,0)
 Q
"RTN","MPIFSAQ",9,0)
 ;
"RTN","MPIFSAQ",10,0)
INTACTV ;Interactive standalone query - Display Only patient doesn't have to be in Patient file
"RTN","MPIFSAQ",11,0)
 S FLG=0 K DIR,X,Y S DIR(0)="Y",DIR("B")="YES",DIR("A")="Is Patient in the PATIENT file " D ^DIR
"RTN","MPIFSAQ",12,0)
 G:(Y'=1)&(Y'=0) END
"RTN","MPIFSAQ",13,0)
 I Y=1 S FLG=1 D PAT(.MPIVAR)
"RTN","MPIFSAQ",14,0)
 I Y'=1,'$D(MPIVAR) D NOPAT(.MPIVAR)
"RTN","MPIFSAQ",15,0)
 I '$D(MPIVAR("DFN"))&(FLG'=0) G END
"RTN","MPIFSAQ",16,0)
 I +$G(MPIVAR("DOB"))'>0 W !,"DOB is missing - Required field" G END
"RTN","MPIFSAQ",17,0)
 D VTQ^MPIFSA2(.MPIVAR) K DIR,X,Y,MPIVAR,FLG
"RTN","MPIFSAQ",18,0)
 Q
"RTN","MPIFSAQ",19,0)
END K DIR,X,Y,MPIVAR,DIRUT,DTOUT,DUOUT
"RTN","MPIFSAQ",20,0)
 Q
"RTN","MPIFSAQ",21,0)
CLEAN(NAM) ;NAM is the name to be cleaned up, Returned from this function is a clean name
"RTN","MPIFSAQ",22,0)
 N YY,I
"RTN","MPIFSAQ",23,0)
 I NAM?.E1L.E F I=1:1:$L(NAM) S:$E(NAM,I)?1L NAM=$E(NAM,0,I-1)_$C($A(NAM,I)-32)_$E(NAM,I+1,$L(NAM)) ; only uppercase
"RTN","MPIFSAQ",24,0)
 F YY=", ","  " F  Q:'$F(NAM,YY)  S NAM=$E(NAM,1,($F(NAM,YY)-2))_$E(NAM,$F(NAM,YY),$L(NAM)) ; no space after comma and no double spaces
"RTN","MPIFSAQ",25,0)
 F  Q:$E(NAM,$L(NAM))'=" "  S NAM=$E(NAM,1,$L(NAM)-1) ; no space at the end
"RTN","MPIFSAQ",26,0)
 Q NAM
"RTN","MPIFSAQ",27,0)
PAT(MPIVAR) ;patient is in local Patient file
"RTN","MPIFSAQ",28,0)
PATA N DIC,X,Y,DIQ,DR,DA,MPIFAR,DFN,DTOUT,DUOUT
"RTN","MPIFSAQ",29,0)
 S DIC="^DPT(",DIC(0)="AEQZM",DIC("A")="Patient Name: " D ^DIC
"RTN","MPIFSAQ",30,0)
 G:$D(DTOUT)!($D(DUOUT))!(Y="^")!(X="") END
"RTN","MPIFSAQ",31,0)
 I +Y=-1 W !,"Patient not found.  Try Again" G PATA
"RTN","MPIFSAQ",32,0)
 S (DFN,MPIVAR("DFN"))=+Y,MPIVAR("NM")=$P(Y(0),"^"),DIQ="MPIFAR",DR=".09;.03",DIC="^DPT(",DA=+Y,DIQ(0)="I" D EN^DIQ1 K DA
"RTN","MPIFSAQ",33,0)
 S MPIVAR("DOB")=$G(MPIFAR(2,DFN,.03,"I")),MPIVAR("SSN")=$G(MPIFAR(2,DFN,.09,"I")) I MPIVAR("SSN")["P" S MPIVAR("SSN")=""
"RTN","MPIFSAQ",34,0)
 Q
"RTN","MPIFSAQ",35,0)
NOPAT(MPIVAR) ; patient is not in the local Patient file
"RTN","MPIFSAQ",36,0)
NAME N DTOUT,DUOUT,DIR,X,Y,%
"RTN","MPIFSAQ",37,0)
 S DIR(0)="FU^::",DIR("A")="PATIENT NAME (last,first middle)" D ^DIR
"RTN","MPIFSAQ",38,0)
 G:$D(DTOUT)!($D(DUOUT))!(Y="^") END
"RTN","MPIFSAQ",39,0)
 I (Y="")!($L(Y)>45)!($L(Y)<3) W !,"Name should be Last,first middle and at least 3 characters and no more than 30" G NAME
"RTN","MPIFSAQ",40,0)
 I (Y?1P.E)!(Y'?1U.ANP)!(Y'[",")!(Y[":")!(Y[";") W !,"Name should be Last,first middle and at least 3 characters and no more than 30" G NAME
"RTN","MPIFSAQ",41,0)
 I Y'?.UNP F %=1:1:$L(Y) I $E(Y,%)?1L S Y=$E(Y,0,%-1)_$C($A(Y,%)-32)_$E(Y,%+1,999)
"RTN","MPIFSAQ",42,0)
 S MPIVAR("NM")=$$CLEAN(Y)
"RTN","MPIFSAQ",43,0)
DOB K DIR,X,Y S DIR(0)="DU^::AE",DIR("A")="Date of Birth" D ^DIR
"RTN","MPIFSAQ",44,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",45,0)
 S MPIVAR("DOB")=Y
"RTN","MPIFSAQ",46,0)
SSN ; ssn is optional
"RTN","MPIFSAQ",47,0)
 K DIR,X,Y S DIR(0)="FUO^9:9:",DIR("A")="9 Digit SSN (No Dashes)" D ^DIR
"RTN","MPIFSAQ",48,0)
 G:$D(DTOUT)!($D(DUOUT)) END
"RTN","MPIFSAQ",49,0)
 I Y'="",Y'?9N W !,"SSN should be 9 numbers" G SSN
"RTN","MPIFSAQ",50,0)
 S MPIVAR("SSN")=Y
"RTN","MPIFSAQ",51,0)
 Q
"RTN","MPIFSAQ",52,0)
SEG(SEGMENT,PIECE,CODE) ;Return segment from MPIDC array and kill node
"RTN","MPIFSAQ",53,0)
 N MPINODE,MPIDATA,MPIDONE,MPIC,HOLD K MPIDONE
"RTN","MPIFSAQ",54,0)
 I '$D(MPIC) S MPIC=$E(HL("ECH"))
"RTN","MPIFSAQ",55,0)
 S MPINODE=0
"RTN","MPIFSAQ",56,0)
 F  S MPINODE=$O(MPIDC(MPINODE)) Q:MPINODE=""!($D(MPIDONE))  D
"RTN","MPIFSAQ",57,0)
 .S MPIDATA=MPIDC(MPINODE)
"RTN","MPIFSAQ",58,0)
 .I ($P(MPIDATA,HL("FS"),1)=SEGMENT)&($P($P(MPIDATA,HL("FS"),PIECE),MPIC,1)=CODE) S MPIDONE=1 S HOLD(MPINODE)="" D
"RTN","MPIFSAQ",59,0)
 ..I SEGMENT="RDT" F  S MPINODE=$O(MPIDC(MPINODE)) Q:MPINODE=""  Q:MPIDC(+MPINODE)=""  S MPIDATA=MPIDATA_MPIDC(MPINODE),HOLD(MPINODE)=""
"RTN","MPIFSAQ",60,0)
 I $D(MPIDONE) S MPINODE=0 F  S MPINODE=$O(HOLD(MPINODE)) Q:MPINODE=""  K MPIDC(MPINODE)
"RTN","MPIFSAQ",61,0)
 Q:$D(MPIDONE) $G(MPIDATA)
"RTN","MPIFSAQ",62,0)
 Q ""
"RTN","MPIFVTQ")
0^13^B38511915
"RTN","MPIFVTQ",1,0)
MPIFVTQ ;SLC/ARS-BUILD DATA TO QUERY MPI RESPONSE PROCESS (ADDPAT) ;JUL 16, 1997
"RTN","MPIFVTQ",2,0)
 ;;1.0; MASTER PATIENT INDEX VISTA ;**1,9,17,21,23,28**;30 Apr 99
"RTN","MPIFVTQ",3,0)
 ;
"RTN","MPIFVTQ",4,0)
 ; Integration Agreements Utilized:
"RTN","MPIFVTQ",5,0)
 ;  ^DPT( -9 node check - #2762
"RTN","MPIFVTQ",6,0)
 ;  ^DPT( "MPI" node - #2070
"RTN","MPIFVTQ",7,0)
 ;  EXC, START, STOP ^RGHLLOG - #2796
"RTN","MPIFVTQ",8,0)
 ;  NAME^VAFCPID2 - #3492
"RTN","MPIFVTQ",9,0)
 ;
"RTN","MPIFVTQ",10,0)
 Q  ;NOT an entry point
"RTN","MPIFVTQ",11,0)
 ;
"RTN","MPIFVTQ",12,0)
VTQ1(MPIIT,MPIOUT,HL,MPIQRYNM,MPISND) ;
"RTN","MPIFVTQ",13,0)
 ;MPIIT=DFN in patient file.
"RTN","MPIFVTQ",14,0)
 ;MPIOUT=Array you want the VTQ/RDF put into.
"RTN","MPIFVTQ",15,0)
 ;HL=Array of encoding characters and Field separator.
"RTN","MPIFVTQ",16,0)
 ;MPIQRYNM=Name of query to put into message.
"RTN","MPIFVTQ",17,0)
 ;MPISND (OPTIONAL) = item #'s separated by ; to be used to query.
"RTN","MPIFVTQ",18,0)
 ;  default is DOB;SSN;LAST NAME;FIRST NAME;SUFFIX OF NAME;SEX;DOD;
"RTN","MPIFVTQ",19,0)
 ;  POB-CITY;POB-STATE;MIDDLE NAME
"RTN","MPIFVTQ",20,0)
 ;
"RTN","MPIFVTQ",21,0)
 ;If invalid DFN, Patient Merged, if ICN already assigned, Test SSN, the VTQ query is not built and -1^'error message' returned in MPIOUT(0).
"RTN","MPIFVTQ",22,0)
 ;
"RTN","MPIFVTQ",23,0)
 ;If DOB does not contain a 7 digit date OR if name is not present, -1^Missing Required fields will be returned in MPIOUT(0).
"RTN","MPIFVTQ",24,0)
 ;
"RTN","MPIFVTQ",25,0)
 ;If patient has a date of death, the VTQ query is built with MPIOUT(0) returned with 0^Patient has date of death.  Programmer to decide if VTQ should be sent.
"RTN","MPIFVTQ",26,0)
 ;
"RTN","MPIFVTQ",27,0)
 N MPITEST,MPISSN,MPIDTH,MPINM,MPIDOB
"RTN","MPIFVTQ",28,0)
 S MPIOUT(0)=""
"RTN","MPIFVTQ",29,0)
 I '$D(MPISND) S MPISND="00122;00108.1;00108.2;00110;00740;00111;00108.4;00126.1;00126.2;00108.3"
"RTN","MPIFVTQ",30,0)
 ;validation check
"RTN","MPIFVTQ",31,0)
 I '$D(HL) S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",32,0)
 I $G(HL("FS"))=""!($G(HL("ECH"))="") S MPIOUT(0)="-1^no encoding characters" Q
"RTN","MPIFVTQ",33,0)
 I MPIIT="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",34,0)
 I $G(^DPT(MPIIT,-9))'="" S MPIOUT(0)="-1^Patient merged "_^DPT(MPIIT,-9) Q
"RTN","MPIFVTQ",35,0)
 I $P($G(^DPT(MPIIT,0)),"^")["MERGING" S MPIOUT(0)="-1^Patient being merged DFN= "_MPIIT Q
"RTN","MPIFVTQ",36,0)
 S MPIMPI=$G(^DPT(MPIIT,"MPI"))
"RTN","MPIFVTQ",37,0)
 S:MPIMPI'="" MPIZICN=$P(^DPT(MPIIT,"MPI"),"^",1)
"RTN","MPIFVTQ",38,0)
 I '$D(MPIFRES),$G(MPIZICN)'="" S MPIOUT(0)="-1^ICN already assigned "_MPIZICN Q
"RTN","MPIFVTQ",39,0)
 S MPITEST=$G(^DPT(MPIIT,0))
"RTN","MPIFVTQ",40,0)
 I MPITEST="" S MPIOUT(0)="-1^invalid DFN" Q
"RTN","MPIFVTQ",41,0)
 S MPISSN=$P(MPITEST,"^",9)
"RTN","MPIFVTQ",42,0)
 I $E(MPISSN,1,5)="00000" S MPIOUT(0)="-1^5 zero SSN" Q
"RTN","MPIFVTQ",43,0)
 I $E($P(MPITEST,"^"),1,2)="ZZ" S MPIOUT(0)="-1^ZZ'd Patient" Q
"RTN","MPIFVTQ",44,0)
 I $E($P(MPITEST,"^"),1,3)="EEE" S MPIOUT(0)="-1^EEE Patient" Q
"RTN","MPIFVTQ",45,0)
 S MPINM=$P(MPITEST,"^") I MPINM=""!($L(MPINM)<3) S MPIOUT(0)="-1^Missing Required Field(s)" D EXC(MPIIT) Q
"RTN","MPIFVTQ",46,0)
 S MPIDOB=$P(MPITEST,"^",3) I MPIDOB'?7N S MPIOUT(0)="-1^Missing Required Field(s)" D EXC(MPIIT) Q
"RTN","MPIFVTQ",47,0)
 S MPIDTH=""
"RTN","MPIFVTQ",48,0)
 S:$G(^DPT(MPIIT,.35))'="" MPIDTH=$P(^DPT(MPIIT,.35),"^",1)
"RTN","MPIFVTQ",49,0)
 I $G(MPIDTH)'="" S MPIOUT(0)="0^Patient has Date of Death "_MPIDTH
"RTN","MPIFVTQ",50,0)
 D VTQC(MPISSN,MPIDTH,MPISND,.HL,MPIQRYNM,.MPIOUT,MPIIT)
"RTN","MPIFVTQ",51,0)
 Q
"RTN","MPIFVTQ",52,0)
EXC(IEN) ;
"RTN","MPIFVTQ",53,0)
 Q:'$D(^DPT(IEN))
"RTN","MPIFVTQ",54,0)
 D LOCAL^MPIFQ3(IEN)
"RTN","MPIFVTQ",55,0)
 D START^RGHLLOG()
"RTN","MPIFVTQ",56,0)
 D EXC^RGHLLOG(209,"DFN= "_IEN_" is Missing Required Field(s)",IEN)
"RTN","MPIFVTQ",57,0)
 D STOP^RGHLLOG()
"RTN","MPIFVTQ",58,0)
 Q
"RTN","MPIFVTQ",59,0)
 ;
"RTN","MPIFVTQ",60,0)
VTQC(MPISSN,MPIDTH,MPISND,HL,MPIQRYNM,MPIOUT,MPIIT) ;
"RTN","MPIFVTQ",61,0)
 N MPIPOB,MPIPOBS,MPINM,MPI2MN,MPI1NM,QUERY,MPIDOB,RDF,MPIMOD
"RTN","MPIFVTQ",62,0)
 N MPIHDTH,MPIZDOB,MPIXDOB,MPIMPI,MPIZICN,QUEDOB,MPI2NM,MPICS,MPIESC,MPIHDOB,MPIMNM,MPIMN
"RTN","MPIFVTQ",63,0)
 N MPINMSFX,MPIRS,MPISCS,MPISEX,MPIZLOC
"RTN","MPIFVTQ",64,0)
 I $G(MPIQRYNM)="" S MPIQRYNM="VTQ_PID_ICN_LOAD_1"
"RTN","MPIFVTQ",65,0)
 S MPICS=$E(HL("ECH"),1)
"RTN","MPIFVTQ",66,0)
 S MPIRS=$E(HL("ECH"),2)
"RTN","MPIFVTQ",67,0)
 S MPISCS=$E(HL("ECH"),4)
"RTN","MPIFVTQ",68,0)
 S MPIESC=$E(HL("ECH"),3)
"RTN","MPIFVTQ",69,0)
 ;build RDF as the third segment
"RTN","MPIFVTQ",70,0)
 D BLDRDF^MPIFSA2(.MPIOUT,3,MPIRS,MPICS)
"RTN","MPIFVTQ",71,0)
 ;
"RTN","MPIFVTQ",72,0)
 ;;;S RDF="RDF"_MPIHL("FS")_"17"_MPIHL("FS")_"@00108.1"_MPICS_"ST"_MPICS_"20"_MPIRS_"@00122"_MPICS_"ST"_MPICS_"9"_MPIRS_"@00110"_MPICS_"ST"_MPICS_8_MPIRS_"@00756"_MPICS_"ST"_MPICS_3
"RTN","MPIFVTQ",73,0)
 ;;;S RDF=RDF_MPIRS_"@00105"_MPICS_"ST"_MPICS_19_MPIRS_"@00108.2"_MPICS_"ST"_MPICS_"20"_MPIRS_"@00169"_MPICS_"ST"_MPICS_99_MPIRS_"@00740"_MPICS_"ST"_MPICS_8
"RTN","MPIFVTQ",74,0)
 ;;;S RDF=RDF_MPIRS_"@00108.3"_MPICS_"ST"_MPICS_16_MPIRS_"@00111"_MPICS_"ST"_MPICS_1_MPIRS_"@00126.1"_MPICS_"ST"_MPICS_30_MPIRS_"@00126.2"_MPICS_"ST"_MPICS_3
"RTN","MPIFVTQ",75,0)
 ;;;S RDF=RDF_MPIRS_"@00108.5"_MPICS_"ST"_MPICS_15_MPIRS_"@00108.4"_MPICS_"ST"_MPICS_10_MPIRS_"@00109.1"_MPICS_"ST"_MPICS_20_MPIRS_"@ZEL6"_MPICS_"ST"_MPICS_9
"RTN","MPIFVTQ",76,0)
 ;;;S RDF=RDF_MPIRS_"@CASE#"_MPICS_"ST"_MPICS_69
"RTN","MPIFVTQ",77,0)
 ;S RDF="RDF"_HL("FS")_24_HL("FS")_"@00108.1"_MPICS_"ST"_MPICS_30_MPIRS_"@00122"_MPICS_"ST"_MPICS_9_MPIRS_"@00110"_MPICS_"TS"_MPICS_8_MPIRS_"@00756"_MPICS_"ST"_MPICS_3
"RTN","MPIFVTQ",78,0)
 ;S RDF=RDF_MPIRS_"@00105"_MPICS_"ST"_MPICS_19_MPIRS_"@00108.2"_MPICS_"ST"_MPICS_30_MPIRS_"@00169"_MPICS_"ST"_MPICS_999_MPIRS_"@00740"_MPICS_"TS"_MPICS_8
"RTN","MPIFVTQ",79,0)
 ;S RDF=RDF_MPIRS_"@00108.3"_MPICS_"ST"_MPICS_16_MPIRS_"@00111"_MPICS_"ST"_MPICS_1_MPIRS_"@00126.1"_MPICS_"ST"_MPICS_30_MPIRS_"@00126.2"_MPICS_"ST"_MPICS_3
"RTN","MPIFVTQ",80,0)
 ;S RDF=RDF_MPIRS_"@00108.5"_MPICS_"ST"_MPICS_15_MPIRS_"@00108.4"_MPICS_"ST"_MPICS_10_MPIRS_"@00109.1"_MPICS_"ST"_MPICS_20_MPIRS_"@ZEL6"_MPICS_"ST"_MPICS_9
"RTN","MPIFVTQ",81,0)
 ;S RDF=RDF_MPIRS_"@CASE#"_MPICS_"ST"_MPICS_69_MPIRS_"@00127"_MPICS_"ST"_MPICS_1_MPIRS_"@POW"_MPICS_"ST"_MPICS_1
"RTN","MPIFVTQ",82,0)
 ;S RDF=RDF_MPIRS_"@00112.1"_MPICS_"ST"_MPICS_30_MPIRS_"@00112.2"_MPICS_"ST"_MPICS_25_MPIRS_"@00112.3"_MPICS_"ST"_MPICS_25_MPIRS_"@00112.5"_MPICS_"ST"_MPICS_10_MPIRS_"@00112.4"_MPICS_"ST"_MPICS_10 ; ALIAS
"RTN","MPIFVTQ",83,0)
 ; ^ fields to be returned in query response
"RTN","MPIFVTQ",84,0)
 S QUERY="VTQ"_HL("FS")_MPIIT_HL("FS")_"T"_HL("FS")_MPIQRYNM_HL("FS")_"ICN"_HL("FS")
"RTN","MPIFVTQ",85,0)
 ;
"RTN","MPIFVTQ",86,0)
 I MPISND["00108" S MPINM=$P(MPITEST,"^") D NAME^VAFCPID2(MPIIT,.MPINM) ;agressive name reformatting
"RTN","MPIFVTQ",87,0)
 ; ^ sending all or part of name
"RTN","MPIFVTQ",88,0)
 I MPISND["00108.1" S MPI2NM=$P(MPINM,",",1) I MPI2NM'="" S QUERY=QUERY_"@00108.1"_MPICS_"EQ"_MPICS_MPI2NM
"RTN","MPIFVTQ",89,0)
 ; ^ sending last name
"RTN","MPIFVTQ",90,0)
 I MPISND["00122"&(MPISSN'="")&(MPISSN'["P") S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00122"_MPICS_"EQ"_MPICS_MPISSN
"RTN","MPIFVTQ",91,0)
 ; ^ sending SSN
"RTN","MPIFVTQ",92,0)
 I MPISND["00108.2" S MPI1NM=$P(MPINM,",",2),MPI1NM=$P(MPI1NM," ",1) I MPI1NM'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.2"_MPICS_"EQ"_MPICS_MPI1NM
"RTN","MPIFVTQ",93,0)
 ; ^ sending first name
"RTN","MPIFVTQ",94,0)
 I MPISND["00110" D
"RTN","MPIFVTQ",95,0)
 .S MPIDOB=$P(MPITEST,"^",3)
"RTN","MPIFVTQ",96,0)
 .Q:MPIDOB=""
"RTN","MPIFVTQ",97,0)
 .S MPIHDOB=$$HLDATE^HLFNC(MPIDOB)
"RTN","MPIFVTQ",98,0)
 .; send date of birth (convert to hl7 date format)
"RTN","MPIFVTQ",99,0)
 .S MPIMOD=MPIDOB#100
"RTN","MPIFVTQ",100,0)
 .I MPIQRYNM'="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"GN"_MPICS_MPIHDOB
"RTN","MPIFVTQ",101,0)
 .I MPIQRYNM="VTQ_PID_ICN_LOAD_1" S MPIZDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",102,0)
 .S MPIXDOB=MPICS_"AND"_MPIRS_"@00110"_MPICS_"EQ"_MPICS_MPIHDOB
"RTN","MPIFVTQ",103,0)
 .S QUEDOB=$S(MPIMOD>0:MPIXDOB,1:MPIZDOB)
"RTN","MPIFVTQ",104,0)
 .S QUERY=QUERY_QUEDOB
"RTN","MPIFVTQ",105,0)
 ; ^ sending date of birth
"RTN","MPIFVTQ",106,0)
 I $D(MPIDTH),(MPISND["00740")&(MPIDTH'="") S MPIHDTH=$$HLDATE^HLFNC(MPIDTH),QUERY=QUERY_MPICS_"AND"_MPIRS_"@00740"_MPICS_"EQ"_MPICS_MPIHDTH
"RTN","MPIFVTQ",107,0)
 ; ^ sending date of death
"RTN","MPIFVTQ",108,0)
 I MPISND["00111" S:$G(^DPT(MPIIT,0))'="" MPISEX=$P(^DPT(MPIIT,0),"^",2) I MPISEX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00111"_MPICS_"EQ"_MPICS_MPISEX
"RTN","MPIFVTQ",109,0)
 ; ^ sending Sex
"RTN","MPIFVTQ",110,0)
 I MPISND["00108.4" S MPI1NM=$P(MPINM,",",2),MPINMSFX=$P(MPI1NM," ",3) I MPINMSFX'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.4"_MPICS_"EQ"_MPICS_MPINMSFX
"RTN","MPIFVTQ",111,0)
 ; ^ sending suffix name
"RTN","MPIFVTQ",112,0)
 I MPISND["00126.1" S MPIPOB=$P(^DPT(MPIIT,0),"^",11) I MPIPOB'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.1"_MPICS_"EQ"_MPICS_MPIPOB
"RTN","MPIFVTQ",113,0)
 ; send place of birth - city
"RTN","MPIFVTQ",114,0)
 I MPISND["00126.2" S MPIPOBS=$P(^DPT(MPIIT,0),"^",12) I MPIPOBS'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00126.2"_MPICS_"EQ"_MPICS_$P($G(^DIC(5,+MPIPOBS,0)),"^",2)
"RTN","MPIFVTQ",115,0)
 ; send place of birth - state
"RTN","MPIFVTQ",116,0)
 I MPISND["00108.3" S MPIMN=$P($P(MPINM,",",2)," ",2) I MPIMN'="" S QUERY=QUERY_MPICS_"AND"_MPIRS_"@00108.3"_MPICS_"EQ"_MPICS_MPIMN
"RTN","MPIFVTQ",117,0)
 ; send middle name
"RTN","MPIFVTQ",118,0)
 ;
"RTN","MPIFVTQ",119,0)
 I $G(MPIOUT(0))="" S MPIOUT(0)="1^good data"
"RTN","MPIFVTQ",120,0)
 S MPIOUT(2)=QUERY
"RTN","MPIFVTQ",121,0)
 Q
"VER")
8.0^22.0
**END**
**END**
