Released XU*8*455 SEQ #376
Extracted from mail message
**KIDS**:XU*8.0*455^

**INSTALL NAME**
XU*8.0*455
"BLD",998,0)
XU*8.0*455^KERNEL^0^3070906^y
"BLD",998,1,0)
^^2^2^3070314^
"BLD",998,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"BLD",998,1,2,0)
XU*8*455 Error in %ZTER on GT.M/DSM
"BLD",998,4,0)
^9.64PA^^
"BLD",998,6.3)
6
"BLD",998,"INID")
^y
"BLD",998,"INIT")
POST^XU8P455
"BLD",998,"KRN",0)
^9.67PA^779.2^20
"BLD",998,"KRN",.4,0)
.4
"BLD",998,"KRN",.401,0)
.401
"BLD",998,"KRN",.402,0)
.402
"BLD",998,"KRN",.403,0)
.403
"BLD",998,"KRN",.5,0)
.5
"BLD",998,"KRN",.84,0)
.84
"BLD",998,"KRN",3.6,0)
3.6
"BLD",998,"KRN",3.8,0)
3.8
"BLD",998,"KRN",9.2,0)
9.2
"BLD",998,"KRN",9.8,0)
9.8
"BLD",998,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",998,"KRN",9.8,"NM",1,0)
ZTER^^0^B38379004
"BLD",998,"KRN",9.8,"NM","B","ZTER",1)

"BLD",998,"KRN",19,0)
19
"BLD",998,"KRN",19.1,0)
19.1
"BLD",998,"KRN",101,0)
101
"BLD",998,"KRN",409.61,0)
409.61
"BLD",998,"KRN",771,0)
771
"BLD",998,"KRN",779.2,0)
779.2
"BLD",998,"KRN",870,0)
870
"BLD",998,"KRN",8989.51,0)
8989.51
"BLD",998,"KRN",8989.52,0)
8989.52
"BLD",998,"KRN",8994,0)
8994
"BLD",998,"KRN","B",.4,.4)

"BLD",998,"KRN","B",.401,.401)

"BLD",998,"KRN","B",.402,.402)

"BLD",998,"KRN","B",.403,.403)

"BLD",998,"KRN","B",.5,.5)

"BLD",998,"KRN","B",.84,.84)

"BLD",998,"KRN","B",3.6,3.6)

"BLD",998,"KRN","B",3.8,3.8)

"BLD",998,"KRN","B",9.2,9.2)

"BLD",998,"KRN","B",9.8,9.8)

"BLD",998,"KRN","B",19,19)

"BLD",998,"KRN","B",19.1,19.1)

"BLD",998,"KRN","B",101,101)

"BLD",998,"KRN","B",409.61,409.61)

"BLD",998,"KRN","B",771,771)

"BLD",998,"KRN","B",779.2,779.2)

"BLD",998,"KRN","B",870,870)

"BLD",998,"KRN","B",8989.51,8989.51)

"BLD",998,"KRN","B",8989.52,8989.52)

"BLD",998,"KRN","B",8994,8994)

"BLD",998,"QUES",0)
^9.62^^
"BLD",998,"REQB",0)
^9.611^1^1
"BLD",998,"REQB",1,0)
XU*8.0*392^2
"BLD",998,"REQB","B","XU*8.0*392",1)

"INIT")
POST^XU8P455
"MBREQ")
0
"PKG",3,-1)
1^1
"PKG",3,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",3,20,0)
^9.402P^^0
"PKG",3,22,0)
^9.49I^1^1
"PKG",3,22,1,0)
8.0^3051215^2970507^.5
"PKG",3,22,1,"PAH",1,0)
455^3070906
"PKG",3,22,1,"PAH",1,1,0)
^^2^2^3070906
"PKG",3,22,1,"PAH",1,1,1,0)
Please refer to the Description in the FORUM Patch Module for details.
"PKG",3,22,1,"PAH",1,1,2,0)
XU*8*455 Error in %ZTER on GT.M/DSM
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","XU8P455")
0^^B60255^n/a
"RTN","XU8P455",1,0)
XU8P455 ;ISF/RWF - Patch XU*8*455 Post-Init ;9/6/07  13:41
"RTN","XU8P455",2,0)
 ;;8.0;KERNEL;;Jul 10, 1995;Build 6
"RTN","XU8P455",3,0)
 Q
"RTN","XU8P455",4,0)
 ;
"RTN","XU8P455",5,0)
POST ;Do Post-init
"RTN","XU8P455",6,0)
 X ^%ZOSF("EON")
"RTN","XU8P455",7,0)
 D RELOAD^ZTMGRSET
"RTN","XU8P455",8,0)
 X ^%ZOSF("EOFF")
"RTN","XU8P455",9,0)
 Q
"RTN","ZTER")
0^1^B38379004^B39240684
"RTN","ZTER",1,0)
%ZTER ; ISC-SF.SEA/JLI - KERNEL ERROR TRAP TO LOG ERRORS ;3/22/07  11:57
"RTN","ZTER",2,0)
 ;;8.0;KERNEL;**8,18,32,24,36,63,73,79,86,112,118,162,275,392,455**;JUL 10, 1995;Build 6
"RTN","ZTER",3,0)
 S ^TMP("$ZE",$J,1)=$$LGR^%ZOSV
"RTN","ZTER",4,0)
 S ^TMP("$ZE",$J,0)=$$EC^%ZOSV ;$S(^%ZOSF("OS")["GT.M":$ZS,1:$ZE)
"RTN","ZTER",5,0)
 S ^TMP("$ZE",$J,2)=$ETRAP,$ETRAP="D ERR^%ZTER"
"RTN","ZTER",6,0)
 S ^TMP("$ZE",$J,3)=$ZA_"~#~"_$ZB
"RTN","ZTER",7,0)
 I (^TMP("$ZE",$J,0)["-ALLOC,")!(^TMP("$ZE",$J,0)["<STORE>")!(^TMP("$ZE",$J,0)["-MEMORY") D
"RTN","ZTER",8,0)
 . I '$D(XUALLOC) D
"RTN","ZTER",9,0)
 . . K (%ZTERLGR,DUZ,DT,DISYS,IO,IOBS,IOF,IOM,ION,IOSL,IOST,IOT,IOS,IOXY,U,XRTL,XQVOL,XQY,XQY0,XQDIC,XQPSM,XQPT,XQAUDIT,XQXFLG,ZTSTOP,ZTQUEUED,ZTREQ,DA,D0,DI,DIC,DIE)
"RTN","ZTER",10,0)
 . S %ZTER12A="ALLOC"
"RTN","ZTER",11,0)
 K XUALLOC
"RTN","ZTER",12,0)
 S %ZTERZE=^TMP("$ZE",$J,0),%ZT("^XUTL(""XQ"",$J)")="" S:'$D(%ZTERLGR) %ZTERLGR=^TMP("$ZE",$J,1)
"RTN","ZTER",13,0)
 G:$$SCREEN(%ZTERZE,1) EXIT ;Let site screen errors, count don't show
"RTN","ZTER",14,0)
 ;Get a record.
"RTN","ZTER",15,0)
 S %ZTERH1=+$H L +^%ZTER(1,%ZTERH1,0):15
"RTN","ZTER",16,0)
 S %ZTER11N=$P($G(^%ZTER(1,%ZTERH1,0)),"^",2)+1,^%ZTER(1,%ZTERH1,0)=%ZTERH1_"^"_%ZTER11N,^(1,0)="^3.0751^"_%ZTER11N_"^"_%ZTER11N
"RTN","ZTER",17,0)
 I %ZTER11N=1 S ^%ZTER(1,0)=$P(^%ZTER(1,0),"^",1,2)_"^"_%ZTERH1_"^"_($P(^%ZTER(1,0),"^",4)+1)
"RTN","ZTER",18,0)
 L -^%ZTER(1,%ZTERH1,0)
"RTN","ZTER",19,0)
 S %ZTERRT=$NA(^%ZTER(1,%ZTERH1,1,%ZTER11N))
"RTN","ZTER",20,0)
 S @%ZTERRT@(0)=%ZTER11N,^("ZE")=%ZTERZE S:$D(%ZTERLGR) ^("GR")=%ZTERLGR K %ZTERLGR
"RTN","ZTER",21,0)
 K %ZTER12A,%ZTER12B
"RTN","ZTER",22,0)
 ;Save $ZA and $ZB
"RTN","ZTER",23,0)
 S %ZTER12A=$$ENC($P(^TMP("$ZE",$J,3),"~#~",1)),%ZTER12B=$$ENC($P(^TMP("$ZE",$J,3),"~#~",2))
"RTN","ZTER",24,0)
 S %ZTER11I=$$UCI()
"RTN","ZTER",25,0)
 S @%ZTERRT@("H")=$H,^("J")=$J_"^^^"_%ZTER11I_"^"_$J
"RTN","ZTER",26,0)
 S @%ZTERRT@("I")=$I_"^"_%ZTER12A_"^"_%ZTER12B_"^"_$G(IO("ZIO"))_"^"_$X_"^"_$Y_"^"_$P
"RTN","ZTER",27,0)
 S %ZTERROR=$$ETXT
"RTN","ZTER",28,0)
 S %ZTERCNT=0
"RTN","ZTER",29,0)
 D STACK^%ZTER1 ;Save Special Variables
"RTN","ZTER",30,0)
 D SAVE("$X $Y",$X_" "_$Y)
"RTN","ZTER",31,0)
 I ^%ZOSF("OS")["OpenM" D
"RTN","ZTER",32,0)
 . D SAVE("$ZU(56,2)",$ZU(56,2))
"RTN","ZTER",33,0)
 . I $ZV["VMS" S $P(@%ZTERRT@("J"),"^",2,3)=$ZF("GETJPI",$J,"PRCNAM")_"^"_$ZF("GETJPI",$J,"USERNAME")
"RTN","ZTER",34,0)
 D SAVE("$ZV",$ZV)
"RTN","ZTER",35,0)
 ;End Special Variables
"RTN","ZTER",36,0)
 I ^%ZOSF("OS")["VAX DSM" K %ZTER11A,%ZTER11B D VXD^%ZTER1 I 1
"RTN","ZTER",37,0)
 E  D
"RTN","ZTER",38,0)
 . S %ZTERVAR="%" D:$D(%) VAR:$D(%)#2,SUBS:$D(%)>9
"RTN","ZTER",39,0)
 . F %ZTER11Z=0:0 S %ZTERVAR=$O(@%ZTERVAR) Q:%ZTERVAR=""  D VAR:$D(@%ZTERVAR)#2,SUBS:$D(@%ZTERVAR)>9
"RTN","ZTER",40,0)
 D GLOB
"RTN","ZTER",41,0)
 S:%ZTERCNT>0 @%ZTERRT@("ZV",0)="^3.0752^"_%ZTERCNT_"^"_%ZTERCNT
"RTN","ZTER",42,0)
 S:'$D(^%ZTER(1,"B",%ZTERH1)) ^(%ZTERH1,%ZTERH1)=""
"RTN","ZTER",43,0)
 S ^%ZTER(1,%ZTERH1,1,"B",%ZTER11N,%ZTER11N)=""
"RTN","ZTER",44,0)
LIN ;Find the line of the error
"RTN","ZTER",45,0)
 S %ZTERY=$P(%ZTERZE,","),%ZTERX=$P(%ZTERY,"^") S:%ZTERX[">" %ZTERX=$P(%ZTERX,">",2)
"RTN","ZTER",46,0)
 I %ZTERX'="" D
"RTN","ZTER",47,0)
 . N X,XCNP,DIF K ^TMP($J,"XTER1")
"RTN","ZTER",48,0)
 . S X=$P($P(%ZTERY,"^",2),":") Q:X=""  X ^%ZOSF("TEST") Q:'$T
"RTN","ZTER",49,0)
 . S XCNP=0,DIF="^TMP($J,""XTER1""," X ^%ZOSF("LOAD") S %ZTERY=$P(%ZTERX,"+",1)
"RTN","ZTER",50,0)
 . I %ZTERY'="" F X=0:0 S X=$O(^TMP($J,"XTER1",X)) Q:X'>0  I $P(^(X,0)," ")=%ZTERY S X=X+$P(%ZTERX,"+",2),%ZTZLIN=$G(^TMP($J,"XTER1",X,0)) Q
"RTN","ZTER",51,0)
 . I %ZTERY="" S X=+$P(%ZTERX,"+",2) Q:X'>0  S %ZTZLIN=$G(^TMP($J,"XTER1",X,0))
"RTN","ZTER",52,0)
 K ^TMP($J,"XTER1")
"RTN","ZTER",53,0)
 S:$D(%ZTZLIN) @%ZTERRT@("LINE")=%ZTZLIN K %ZTZLIN
"RTN","ZTER",54,0)
 I %ZTERROR'="",$D(^%ZTER(2,"B",%ZTERROR)) S %ZTERROR=%ZTERROR_"^"_$P(^%ZTER(2,+$O(^(%ZTERROR,0)),0),"^",2)
"RTN","ZTER",55,0)
EXIT ;
"RTN","ZTER",56,0)
 I $G(%ZTER12A)["ALLOC" HALT  ;Don't allow job to go on.
"RTN","ZTER",57,0)
 S $EC="",$ET=$G(^TMP("$ZE",$J,2))
"RTN","ZTER",58,0)
 K ^TMP("$ZE",$J)
"RTN","ZTER",59,0)
 K %ZTER11A,%ZTER11B,%ZTERCNT,%ZTER11S,%ZTER11Z,%ZTERVAP,%ZTERVAR,%ZTERSUB,%ZTER11I,%ZTER11D,%ZTER11L,%ZTER11Q,%,%ZTER111,%ZTER112,%ZTER11N
"RTN","ZTER",60,0)
 K %ZTERRT,%ZTERH1
"RTN","ZTER",61,0)
 Q
"RTN","ZTER",62,0)
 ;
"RTN","ZTER",63,0)
VAR I "%ZTER"'=$E(%ZTERVAR,1,5) D SAVE(%ZTERVAR,@%ZTERVAR) Q
"RTN","ZTER",64,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%ZTERVAR D
"RTN","ZTER",65,0)
 . I $L(@%ZTERVAR)'>255 S @%ZTERRT@("ZV",%ZTERCNT,"D")=@%ZTERVAR Q
"RTN","ZTER",66,0)
 . S @%ZTERRT@("ZV",%ZTERCNT,"D")=" **** VALUE IS GREATER THAN 255 CHARACTERS (SEE SUBNODES FOR DATA) *** "
"RTN","ZTER",67,0)
 . N %ZTER11,%ZTER12
"RTN","ZTER",68,0)
 . F %ZTER11=1:1 S %ZTER12=$E(@%ZTERVAR,1,245) Q:%ZTER12=""  S @%ZTERVAR=$E(@%ZTERVAR,246,$L(@%ZTERVAR)),@%ZTERRT@("ZV",%ZTERCNT,"D",%ZTER11)=%ZTER12
"RTN","ZTER",69,0)
 . Q
"RTN","ZTER",70,0)
 Q
"RTN","ZTER",71,0)
 ;
"RTN","ZTER",72,0)
SAVE(%n,%v) ;Save name and value into global, use special variables
"RTN","ZTER",73,0)
 S %ZTERCNT=%ZTERCNT+1,@%ZTERRT@("ZV",%ZTERCNT,0)=%n
"RTN","ZTER",74,0)
 I $L(%v)<256 S @%ZTERRT@("ZV",%ZTERCNT,"D")=%v Q
"RTN","ZTER",75,0)
 ;Variable too long for global node
"RTN","ZTER",76,0)
 S @%ZTERRT@("ZV",%ZTERCNT,"D")=$E(%v,1,255),^("L")=$L(%v)
"RTN","ZTER",77,0)
 N %i S %v=$E(%v,256,$L(%v))
"RTN","ZTER",78,0)
 F %i=1:1 Q:'$L(%v)  S @%ZTERRT@("ZV",%ZTERCNT,"D",%i)=$E(%v,1,255),%v=$E(%v,256,$L(%v))
"RTN","ZTER",79,0)
 Q
"RTN","ZTER",80,0)
 ;
"RTN","ZTER",81,0)
SUBS S %ZTER11S="" Q:"%ZT("=$E(%ZTERVAR,1,4)  Q:",%ZTER11S,%ZTER11L,"[(","_%ZTERVAR_",")  S %ZTERVAP=%ZTERVAR_"(",%ZTERSUB="%ZTER11S)"
"RTN","ZTER",82,0)
 ;
"RTN","ZTER",83,0)
 S %ZTER11S=%ZTERVAR
"RTN","ZTER",84,0)
 F  S %ZTER11S=$Q(@%ZTER11S) Q:%ZTER11S=""  D SAVE(%ZTER11S,@%ZTER11S)
"RTN","ZTER",85,0)
 Q
"RTN","ZTER",86,0)
 ;
"RTN","ZTER",87,0)
GLOB ; save off a list of global subtrees, %ZT is passed in subscripted by name
"RTN","ZTER",88,0)
 ; %ZTERCNT passed in to count the nodes we traverse
"RTN","ZTER",89,0)
 ; %ZTERNOD the nodes through which we $QUERY
"RTN","ZTER",90,0)
 ; %ZTERNAM the names of the global subtrees we're saving
"RTN","ZTER",91,0)
 ; %ZTEROPN is %ZTERNAM, evaluated, without close paren for $PIECEing
"RTN","ZTER",92,0)
 N %ZTERNOD,%ZTERNAM,%ZTEROPN
"RTN","ZTER",93,0)
 S %ZTERNAM="" ; the names of the global subtrees we're saving
"RTN","ZTER",94,0)
 F  S %ZTERNAM=$O(%ZT(%ZTERNAM)) Q:%ZTERNAM=""  D
"RTN","ZTER",95,0)
 . S %ZTERNOD=$NA(@%ZTERNAM) ; fully evaluate all the subscripts (incl. $J)
"RTN","ZTER",96,0)
 . S %ZTEROPN=$E(%ZTERNOD,1,$L(%ZTERNOD)-1) ; save %ZTERNOD w/o close paren
"RTN","ZTER",97,0)
 . ;S %ZTERSUB=$QL(%ZTERNOD) ; how many subscripts in the subtree root's name
"RTN","ZTER",98,0)
 . F  S %ZTERNOD=$Q(@%ZTERNOD) Q:%ZTERNOD=""  Q:%ZTERNOD'[%ZTEROPN  D  ; traverse subtree
"RTN","ZTER",99,0)
 . . S %ZTERCNT=%ZTERCNT+1 ; count each node
"RTN","ZTER",100,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,0)=$P(%ZTERNAM,")")_$P(%ZTERNOD,%ZTEROPN,2) ; unevaluated name
"RTN","ZTER",101,0)
 . . S @%ZTERRT@("ZV",%ZTERCNT,"D")=$G(@%ZTERNOD) ; value of node
"RTN","ZTER",102,0)
 Q
"RTN","ZTER",103,0)
 ;
"RTN","ZTER",104,0)
ETXT() ;Return the Text of the error
"RTN","ZTER",105,0)
 Q $S(%ZTERZE["%DSM-E":$P($P(%ZTERZE,"%DSM-E-",2),","),1:$P($P(%ZTERZE,"<",2),">"))
"RTN","ZTER",106,0)
 ;
"RTN","ZTER",107,0)
ENC(%ZT1) ;Encode a string with control char in \027 format
"RTN","ZTER",108,0)
 N %ZTI,%ZTB,%ZTC S %ZTB=""
"RTN","ZTER",109,0)
 F %ZTI=1:1:$L(%ZT1) S %ZTC=$E(%ZT1,%ZTI),%ZTB=%ZTB_$S(%ZTC'?1C:%ZTC,1:"\"_$E($A(%ZTC)+1000,2,4))_","
"RTN","ZTER",110,0)
 Q $E(%ZTB,1,$L(%ZTB)-1)
"RTN","ZTER",111,0)
 ;
"RTN","ZTER",112,0)
UCI() ;Return the UCI
"RTN","ZTER",113,0)
 N Y I $D(^%ZOSF("UCI")) X ^%ZOSF("UCI")
"RTN","ZTER",114,0)
 Q $G(Y)
"RTN","ZTER",115,0)
 ;
"RTN","ZTER",116,0)
ERR ;Handle an error in %ZTER
"RTN","ZTER",117,0)
 I $D(%ZTERH1),$D(%ZTER11N) S ^%ZTER(1,%ZTERH1,1,%ZTER11N,"ZE2")="%ZTER error: "_$ECODE
"RTN","ZTER",118,0)
 ;Should ^TMP("$ZE",$J) be killed here
"RTN","ZTER",119,0)
 HALT
"RTN","ZTER",120,0)
 ;
"RTN","ZTER",121,0)
SCREEN(ERR,%ZT3) ;Screen out certain errors.
"RTN","ZTER",122,0)
 N %ZTE,%ZTI,%ZTJ S:'$D(ERR) ERR=$$EC^%ZOSV
"RTN","ZTER",123,0)
 S %ZTE="",%ZTI=0
"RTN","ZTER",124,0)
 F %ZTJ=2,1 D  Q:%ZTI>0
"RTN","ZTER",125,0)
 . F %ZTI=0:0 S %ZTI=$O(^%ZTER(2,"AC",%ZTJ,%ZTI)) Q:%ZTI=""  S %ZTE=$S($G(^%ZTER(2,%ZTI,2))]"":^(2),1:$P(^(0),"^")) Q:ERR[%ZTE
"RTN","ZTER",126,0)
 . Q
"RTN","ZTER",127,0)
 ;Next see if we should count the error
"RTN","ZTER",128,0)
 I %ZTI>0 S %ZTE=$G(^%ZTER(2,%ZTI,0)) D  Q $P(%ZTE,"^",3)=2 ;See if we skip the recording of the error.
"RTN","ZTER",129,0)
 . Q:(%ZTJ=1)&('$G(%ZT3))
"RTN","ZTER",130,0)
 . I $P(%ZTE,"^",4) L +^%ZTER(2,%ZTI) S ^(3)=$G(^%ZTER(2,%ZTI,3))+1 L -^%ZTER(2,%ZTI)
"RTN","ZTER",131,0)
 . Q
"RTN","ZTER",132,0)
 Q 0 ;record error
"RTN","ZTER",133,0)
 ;
"RTN","ZTER",134,0)
UNWIND ;Unwind stack for new error trap. Called by app code.
"RTN","ZTER",135,0)
 S $ECODE="" S $ETRAP="D UNW^%ZTER Q:'$QUIT  Q -9" S $ECODE=",U1,"
"RTN","ZTER",136,0)
UNW Q:$ESTACK>1  S $ECODE="" Q
"RTN","ZTER",137,0)
 ;
"RTN","ZTER",138,0)
NEWERR() ;Does this OS support the M95 error trapping
"RTN","ZTER",139,0)
 Q 1 ;All current M system now support 95 error trapping
"RTN","ZTER",140,0)
 N % S %=$G(^%ZOSF("OS")) Q:%="" 0
"RTN","ZTER",141,0)
 I %["MSM",$P($ZV,"Version ",2)'<4.3 Q 1
"RTN","ZTER",142,0)
 Q 0
"RTN","ZTER",143,0)
 ;
"RTN","ZTER",144,0)
ABORT ;Pop the stack all the way.
"RTN","ZTER",145,0)
 S $ETRAP="Q:$ST>1  S $ECODE="""" Q"
"RTN","ZTER",146,0)
 Q
"RTN","ZTER",147,0)
 ;
"RTN","ZTER",148,0)
POST ;Do the post-init
"VER")
8.0^22.0
"BLD",998,6)
^376
**END**
**END**
