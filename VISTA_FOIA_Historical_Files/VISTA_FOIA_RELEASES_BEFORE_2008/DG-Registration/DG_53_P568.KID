KIDS Distribution saved on Dec 02, 2004@20:38:18
SD Encapsulation V6   12/2/2004
**KIDS**:DG*5.3*568^IVM*2.0*95^EAS*1.0*46^DGBT*1.0*8^

**INSTALL NAME**
DG*5.3*568
"BLD",5462,0)
DG*5.3*568^REGISTRATION^0^3041202^y
"BLD",5462,4,0)
^9.64PA^^
"BLD",5462,"INIT")
EN^DG53568A
"BLD",5462,"KRN",0)
^9.67PA^8989.52^19
"BLD",5462,"KRN",.4,0)
.4
"BLD",5462,"KRN",.401,0)
.401
"BLD",5462,"KRN",.402,0)
.402
"BLD",5462,"KRN",.403,0)
.403
"BLD",5462,"KRN",.5,0)
.5
"BLD",5462,"KRN",.84,0)
.84
"BLD",5462,"KRN",3.6,0)
3.6
"BLD",5462,"KRN",3.8,0)
3.8
"BLD",5462,"KRN",9.2,0)
9.2
"BLD",5462,"KRN",9.8,0)
9.8
"BLD",5462,"KRN",9.8,"NM",0)
^9.68A^37^34
"BLD",5462,"KRN",9.8,"NM",1,0)
DG1010S1^^0^B33858909
"BLD",5462,"KRN",9.8,"NM",2,0)
DGDEATH^^0^B27182979
"BLD",5462,"KRN",9.8,"NM",4,0)
DGDIS1^^0^B6822777
"BLD",5462,"KRN",9.8,"NM",5,0)
DGENRPD2^^0^B39445592
"BLD",5462,"KRN",9.8,"NM",6,0)
DGENRPT2^^0^B40693413
"BLD",5462,"KRN",9.8,"NM",7,0)
DGENRPT4^^0^B53256477
"BLD",5462,"KRN",9.8,"NM",8,0)
DGENRPT5^^0^B3142456
"BLD",5462,"KRN",9.8,"NM",9,0)
DGMTO1^^0^B22683050
"BLD",5462,"KRN",9.8,"NM",10,0)
DGMTOFA^^0^B19851647
"BLD",5462,"KRN",9.8,"NM",11,0)
DGPREBJ^^0^B16175351
"BLD",5462,"KRN",9.8,"NM",12,0)
DGPREBJ1^^0^B39076432
"BLD",5462,"KRN",9.8,"NM",13,0)
DGPTFTR3^^0^B13488826
"BLD",5462,"KRN",9.8,"NM",14,0)
DGREGE^^0^B14087060
"BLD",5462,"KRN",9.8,"NM",15,0)
DGRP14^^0^B3636068
"BLD",5462,"KRN",9.8,"NM",16,0)
DGRP15^^0^B4585956
"BLD",5462,"KRN",9.8,"NM",17,0)
DGRPC^^0^B23345005
"BLD",5462,"KRN",9.8,"NM",18,0)
DGRPD^^0^B62004839
"BLD",5462,"KRN",9.8,"NM",19,0)
DGRUGS^^0^B16728825
"BLD",5462,"KRN",9.8,"NM",20,0)
DGSSNRP2^^0^B92397556
"BLD",5462,"KRN",9.8,"NM",21,0)
DGSTAT^^0^B14149769
"BLD",5462,"KRN",9.8,"NM",22,0)
DGYPSDE1^^0^B32076136
"BLD",5462,"KRN",9.8,"NM",23,0)
DGYPSDE2^^0^B12403558
"BLD",5462,"KRN",9.8,"NM",24,0)
VAFCCCAP^^0^B23532804
"BLD",5462,"KRN",9.8,"NM",25,0)
VAFCCOPT^^0^B11631510
"BLD",5462,"KRN",9.8,"NM",26,0)
VAFHCCAP^^0^B19023372
"BLD",5462,"KRN",9.8,"NM",27,0)
VAFHCOPT^^0^B8477185
"BLD",5462,"KRN",9.8,"NM",28,0)
VAFHLPD1^^0^B4025538
"BLD",5462,"KRN",9.8,"NM",30,0)
VAFHLZPD^^0^B52908883
"BLD",5462,"KRN",9.8,"NM",31,0)
VAFHUTL^^0^B20051117
"BLD",5462,"KRN",9.8,"NM",33,0)
DG53568A^^0^B32859040
"BLD",5462,"KRN",9.8,"NM",34,0)
DGSDUTL^^0^B67863755
"BLD",5462,"KRN",9.8,"NM",35,0)
VAUTOMA^^0^B12495883
"BLD",5462,"KRN",9.8,"NM",36,0)
DGQESC2^^0^B21692668
"BLD",5462,"KRN",9.8,"NM",37,0)
DGENRPD1^^0^B24893402
"BLD",5462,"KRN",9.8,"NM","B","DG1010S1",1)

"BLD",5462,"KRN",9.8,"NM","B","DG53568A",33)

"BLD",5462,"KRN",9.8,"NM","B","DGDEATH",2)

"BLD",5462,"KRN",9.8,"NM","B","DGDIS1",4)

"BLD",5462,"KRN",9.8,"NM","B","DGENRPD1",37)

"BLD",5462,"KRN",9.8,"NM","B","DGENRPD2",5)

"BLD",5462,"KRN",9.8,"NM","B","DGENRPT2",6)

"BLD",5462,"KRN",9.8,"NM","B","DGENRPT4",7)

"BLD",5462,"KRN",9.8,"NM","B","DGENRPT5",8)

"BLD",5462,"KRN",9.8,"NM","B","DGMTO1",9)

"BLD",5462,"KRN",9.8,"NM","B","DGMTOFA",10)

"BLD",5462,"KRN",9.8,"NM","B","DGPREBJ",11)

"BLD",5462,"KRN",9.8,"NM","B","DGPREBJ1",12)

"BLD",5462,"KRN",9.8,"NM","B","DGPTFTR3",13)

"BLD",5462,"KRN",9.8,"NM","B","DGQESC2",36)

"BLD",5462,"KRN",9.8,"NM","B","DGREGE",14)

"BLD",5462,"KRN",9.8,"NM","B","DGRP14",15)

"BLD",5462,"KRN",9.8,"NM","B","DGRP15",16)

"BLD",5462,"KRN",9.8,"NM","B","DGRPC",17)

"BLD",5462,"KRN",9.8,"NM","B","DGRPD",18)

"BLD",5462,"KRN",9.8,"NM","B","DGRUGS",19)

"BLD",5462,"KRN",9.8,"NM","B","DGSDUTL",34)

"BLD",5462,"KRN",9.8,"NM","B","DGSSNRP2",20)

"BLD",5462,"KRN",9.8,"NM","B","DGSTAT",21)

"BLD",5462,"KRN",9.8,"NM","B","DGYPSDE1",22)

"BLD",5462,"KRN",9.8,"NM","B","DGYPSDE2",23)

"BLD",5462,"KRN",9.8,"NM","B","VAFCCCAP",24)

"BLD",5462,"KRN",9.8,"NM","B","VAFCCOPT",25)

"BLD",5462,"KRN",9.8,"NM","B","VAFHCCAP",26)

"BLD",5462,"KRN",9.8,"NM","B","VAFHCOPT",27)

"BLD",5462,"KRN",9.8,"NM","B","VAFHLPD1",28)

"BLD",5462,"KRN",9.8,"NM","B","VAFHLZPD",30)

"BLD",5462,"KRN",9.8,"NM","B","VAFHUTL",31)

"BLD",5462,"KRN",9.8,"NM","B","VAUTOMA",35)

"BLD",5462,"KRN",19,0)
19
"BLD",5462,"KRN",19.1,0)
19.1
"BLD",5462,"KRN",101,0)
101
"BLD",5462,"KRN",409.61,0)
409.61
"BLD",5462,"KRN",771,0)
771
"BLD",5462,"KRN",870,0)
870
"BLD",5462,"KRN",8989.51,0)
8989.51
"BLD",5462,"KRN",8989.52,0)
8989.52
"BLD",5462,"KRN",8994,0)
8994
"BLD",5462,"KRN","B",.4,.4)

"BLD",5462,"KRN","B",.401,.401)

"BLD",5462,"KRN","B",.402,.402)

"BLD",5462,"KRN","B",.403,.403)

"BLD",5462,"KRN","B",.5,.5)

"BLD",5462,"KRN","B",.84,.84)

"BLD",5462,"KRN","B",3.6,3.6)

"BLD",5462,"KRN","B",3.8,3.8)

"BLD",5462,"KRN","B",9.2,9.2)

"BLD",5462,"KRN","B",9.8,9.8)

"BLD",5462,"KRN","B",19,19)

"BLD",5462,"KRN","B",19.1,19.1)

"BLD",5462,"KRN","B",101,101)

"BLD",5462,"KRN","B",409.61,409.61)

"BLD",5462,"KRN","B",771,771)

"BLD",5462,"KRN","B",870,870)

"BLD",5462,"KRN","B",8989.51,8989.51)

"BLD",5462,"KRN","B",8989.52,8989.52)

"BLD",5462,"KRN","B",8994,8994)

"BLD",5462,"QUES",0)
^9.62^^
"BLD",5462,"REQB",0)
^9.611^20^17
"BLD",5462,"REQB",1,0)
DG*5.3*91^2
"BLD",5462,"REQB",2,0)
DG*5.3*109^2
"BLD",5462,"REQB",3,0)
DG*5.3*111^2
"BLD",5462,"REQB",5,0)
DG*5.3*173^2
"BLD",5462,"REQB",6,0)
DG*5.3*232^2
"BLD",5462,"REQB",7,0)
DG*5.3*239^2
"BLD",5462,"REQB",9,0)
DG*5.3*358^2
"BLD",5462,"REQB",10,0)
DG*5.3*389^2
"BLD",5462,"REQB",11,0)
DG*5.3*426^2
"BLD",5462,"REQB",12,0)
DG*5.3*505^2
"BLD",5462,"REQB",13,0)
DG*5.3*513^2
"BLD",5462,"REQB",14,0)
DG*5.3*535^2
"BLD",5462,"REQB",15,0)
DG*5.3*545^2
"BLD",5462,"REQB",16,0)
DG*5.3*581^2
"BLD",5462,"REQB",18,0)
DG*5.3*459^2
"BLD",5462,"REQB",19,0)
DG*5.3*451^2
"BLD",5462,"REQB",20,0)
DG*5.3*582^2
"BLD",5462,"REQB","B","DG*5.3*109",2)

"BLD",5462,"REQB","B","DG*5.3*111",3)

"BLD",5462,"REQB","B","DG*5.3*173",5)

"BLD",5462,"REQB","B","DG*5.3*232",6)

"BLD",5462,"REQB","B","DG*5.3*239",7)

"BLD",5462,"REQB","B","DG*5.3*358",9)

"BLD",5462,"REQB","B","DG*5.3*389",10)

"BLD",5462,"REQB","B","DG*5.3*426",11)

"BLD",5462,"REQB","B","DG*5.3*451",19)

"BLD",5462,"REQB","B","DG*5.3*459",18)

"BLD",5462,"REQB","B","DG*5.3*505",12)

"BLD",5462,"REQB","B","DG*5.3*513",13)

"BLD",5462,"REQB","B","DG*5.3*535",14)

"BLD",5462,"REQB","B","DG*5.3*545",15)

"BLD",5462,"REQB","B","DG*5.3*581",16)

"BLD",5462,"REQB","B","DG*5.3*582",20)

"BLD",5462,"REQB","B","DG*5.3*91",1)

"INIT")
EN^DG53568A
"MBREQ")
0
"PKG",5,-1)
1^1
"PKG",5,0)
REGISTRATION^DG^PATIENT REGISTRATION, ADMISSION, DISCHARGE, EMBOSSER 
"PKG",5,20,0)
^9.402P^^
"PKG",5,22,0)
^9.49I^1^1
"PKG",5,22,1,0)
5.3^2930813
"PKG",5,22,1,"PAH",1,0)
568^3041202^66481
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
34
"RTN","DG1010S1")
0^1^B33858909
"RTN","DG1010S1",1,0)
DG1010S1 ;ALB/MRL - SUPPLEMENTAL DATA SHEET FOR 10-10 ; 10/15/2004
"RTN","DG1010S1",2,0)
 ;;5.3;Registration;**606,568**;Aug 13, 1993
"RTN","DG1010S1",3,0)
 ;;MAS VERSION 5.1;
"RTN","DG1010S1",4,0)
 ;
"RTN","DG1010S1",5,0)
 ;INPUT: DFN  = IEN OF PATIENT FILE
"RTN","DG1010S1",6,0)
 ;       DFN1 = INVERSE DISPOSTION TIME
"RTN","DG1010S1",7,0)
EN ;
"RTN","DG1010S1",8,0)
 S DGLDOUBL="",$P(DGLDOUBL,"=",132)=""
"RTN","DG1010S1",9,0)
 S DGLSUP="",$P(DGLSUP,"- ",62)="",$P(DGLSUP,"- ",43)=" |"
"RTN","DG1010S1",10,0)
 S DGLSUP1="",$P(DGLSUP1,"-",123)="",$P(DGLSUP1,"-",86)="|"
"RTN","DG1010S1",11,0)
 F I="INE","DIS",0,.15,.24,.361 S DGP(I)=$G(^DPT(DFN,I))
"RTN","DG1010S1",12,0)
 S DGD=$G(^DPT(DFN,"DIS",DFN1,0)),Y=$P(DGD,U,1) X ^DD("DD") S DGAP=Y,DGCLK=$S($D(^VA(200,+$P(DGD,U,5),0)):$S($P(^(0),U,2)]"":$P(^(0),U,2)_"/"_$P(DGD,U,5),1:"unk/"_$P(DGD,U,5)),1:"unspecified"),DGNAM=$P(DGP(0),U,1)
"RTN","DG1010S1",13,0)
 S DGSS=$P(DGP(0),U,9),DGSS=$E(DGSS,1,3)_"-"_$E(DGSS,4,5)_"-"_$E(DGSS,6,10)
"RTN","DG1010S1",14,0)
 S DGLDOUBL=$E(DGLDOUBL,1,127)
"RTN","DG1010S1",15,0)
 I $$FIRST^DGUTL G Q^DG1010S2
"RTN","DG1010S1",16,0)
 W !?5,DGLDOUBL,!?5
"RTN","DG1010S1",17,0)
 S X=$$SITE^VASITE W $S((+X=-1):"FACILITY NOT IDENTIFIED",1:$P(X,U,2)_" ("_$P(X,U,3)_")")
"RTN","DG1010S1",18,0)
 W ?105,"SUPPLEMENTAL DATA SHEET",!?5,DGLDOUBL,!?5,"1.  Applicant's Name:  ",DGNAM,?90,"| 2.  SSN:  ",DGSS,!?5,DGLSUP1,!?5,"3.  Other Name(s):  "
"RTN","DG1010S1",19,0)
 S I1="" F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:I'>0  S I1=1,DGD=$P(^(I,0),U,1),DGD(1)=$P(^(0),U,2),DGD=DGD_$S($L(DGD(1)):" ("_$E(DGD(1),1,3)_"-"_$E(DGD(1),4,5)_"-"_$E(DGD(1),6,10)_")",1:"")_"; " W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",20,0)
 W:'I1 "NO ALIAS' ON FILE" K DGD,I,I1 S DGD=$S($L($P(DGP(0),U,10)):$P(DGP(0),U,10),1:"NO REMARKS CURRENTLY ENTERED FOR THIS APPLICANT") W !?5,DGLSUP1,!?5,"4.  Remarks:  ",DGD,!?5,DGLSUP1
"RTN","DG1010S1",21,0)
 S DGD=DGP(.24) W !?5,"5.  Fathers Name:  ",$S($L($P(DGD,U,1)):$P(DGD,U,1),1:"NOT SPECIFIED"),?90,"|"
"RTN","DG1010S1",22,0)
 W !?9,"Mothers Name:  ",$S($L($P(DGD,U,2)):$P(DGD,U,2),1:"NOT SPECIFIED"),?90,"|",!?9,"Mothers Maiden Name:  ",$S($L($P(DGD,U,3)):$P(DGD,U,3),1:"NOT SPECIFIED"),?90,"|",!?5,DGLSUP1
"RTN","DG1010S1",23,0)
 N DGARRAY,I,SDOUT,CLIEN,APTDT
"RTN","DG1010S1",24,0)
 W !?5,"6a. Enrollment Clinic(s):  " S I1="" F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:I'>0  I $P(^(I,0),U,2)'="I" S I1=I1+1,DGD=$S($D(^SC(+^(0),0)):$P(^(0),U,1)_", ",1:"") W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",25,0)
 W:'I1 "NOT ACTIVELY ENROLLED IN ANY CLINICS AT THIS TIME" K DGD,I,I1 W !?5,DGLSUP,!?5,"6b. Future Appointments:  " S I1="",I2=DT_".9999"
"RTN","DG1010S1",26,0)
 S DGARRAY("FLDS")="1;2",DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DG1010S1",27,0)
 I $D(^TMP($J,"SDAMA301",101)) S I1=1,DGD="** Appointment Database Unavailable **"
"RTN","DG1010S1",28,0)
 I '$D(^TMP($J,"SDAMA301",101)) D
"RTN","DG1010S1",29,0)
 .S (DGD,CLIEN)="" F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DG1010S1",30,0)
 ..S APTDT=DT F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT  D
"RTN","DG1010S1",31,0)
 ...S SDOUT=^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),I1=1,DGD=DGD_$P($P(SDOUT,U,2),";",2)_" ("_$$FMTE^DILIBF($P(SDOUT,U),"5U")_"),"
"RTN","DG1010S1",32,0)
 W:(128-$X)<$L(DGD) !?9 W DGD
"RTN","DG1010S1",33,0)
 K DGARRAY,^TMP($J,"SDAMA301"),SDOUT,CLIEN,APTDT
"RTN","DG1010S1",34,0)
 W:'I1 "NO PENDING APPOINTMENTS ON FILE" W !?5,DGLSUP1,!?5,"7a. Last Admission:  "
"RTN","DG1010S1",35,0)
 S DGAD=$S('$D(^DPT(DFN,.1)):0,'$L(^DPT(DFN,.1)):0,1:1),DGD=$O(^DGPM("ATID1",DFN,+$S(DGAD:$O(^DGPM("ATID1",DFN,0)),1:0))) I DGD'>0 W "NO PREVIOUS ADMISSIONS TO THIS FACILITY ON FILE" G EL
"RTN","DG1010S1",36,0)
 S DGD=$O(^DGPM("ATID1",DFN,DGD,0)) I $S('$D(^DGPM(+DGD,0)):1,'$D(^DGPT(+$P(^(0),"^",16),0)):1,1:0) W "LAST ADMISSION PTF DATA NO LONGER STORED" G EL
"RTN","DG1010S1",37,0)
 S DGD=+$P(^DGPM(+DGD,0),"^",16),Y=+^(0),DGDAT=Y
"RTN","DG1010S1",38,0)
 X ^DD("DD") W Y S Y=$P($S($D(^DGPT(DGD,70)):^(70),1:0),U,1) X ^DD("DD") W:Y]"" "   (DISCHARGED '"_Y_"')" W !?5,DGLSUP,!?5,"7b. Discharge Diagnosis(es):  " S I1=$S($D(^DGPT(DGD,"M",1,0)):^(0),1:0)
"RTN","DG1010S1",39,0)
 S I3="" F I=5:1:15 I I'=10 S I2=$P(I1,U,I) Q:'I2  S I3=1,I2=$$ICDDX^ICDCODE(I2,DGDAT),I2=$S(+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4)_"; ",1:"") W:(128-$X)<$L(I2) !?9 W I2
"RTN","DG1010S1",40,0)
 W:'I3 "NO DIAGNOSES ON FILE FOR THIS ADMISSION PERIOD YET",!?5,DGLSUP S DGD(1)=$S($D(^DGPT(DGD,70)):^(70),1:0),X="UNSPECIFIED",I2=$$ICDDX^ICDCODE(+$P(DGD(1),U,11),DGDAT),X=$S('DGD(1):X,+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4),1:X)
"RTN","DG1010S1",41,0)
 W !?5,"7c. Admit Diagnosis:  ",X,!?5,DGLSUP,!?5,"7d. Diagnosis Responsible for Greatest Length of Stay:  " S X="UNSPECIFIED",I2=$$ICDDX^ICDCODE(+$P(DGD(1),U,10),DGDAT),X=$S('DGD(1):X,+I2>0:"("_$P(I2,U,2)_")-"_$P(I2,U,4),1:X) W X
"RTN","DG1010S1",42,0)
EL W !?5,DGLSUP1 S DGD=DGP(.361),DGD(1)=$P(DGD,U,5),DGD(2)=$P(DGD,U,6),Y=$P(DGD,U,2),DGD=$P(DGD,U,1),DGD(1)=$S($L(DGD(1)):DGD(1),'$L(DGD):"NOT APPLICABLE",1:"NOT VERIFIED")
"RTN","DG1010S1",43,0)
 S DGD(2)=$S(+DGD(2):$S($D(^VA(200,+DGD(2),0)):$P(^(0),U,1),1:"UNKNOWN"),'$L(DGD):"NOT APPLICABLE",1:"NOT SPECIFIED") X:+Y ^DD("DD") S Y=$S($L(Y):Y,'$L(DGD):"NOT APPLICABLE",1:"NOT SPECIFIED")
"RTN","DG1010S1",44,0)
 W !?5,"8.  Eligibility Status:  ",$S(DGD="P":"PENDING VERIFICATION",DGD="R":"PENDING RE-VERIFICATION",DGD="V":"VERIFIED",1:"UNKNOWN OR NONE"),?90,"| Status Date:  ",Y,!?9,"Verification Method:  ",DGD(1),?90,"| By:  ",DGD(2)
"RTN","DG1010S1",45,0)
 S Y=$P(DGP(.15),U,2),DGD=DGP("INE") X:+Y ^DD("DD") S DGEL=$S('$L(Y)!(Y=0):1,1:0),Y=$S('DGEL:Y,1:"ELIGIBLE APPLICANT -- NOT APPLICABLE") W !?9,"Ineligible Date:  ",Y I DGEL F I=1:1:4 S DGD(I)="NOT APPLICABLE"
"RTN","DG1010S1",46,0)
 G:DGEL C S DGD(1)=$P(DGD,U,1),DGD(1)=$S(DGD(1)=1:"VAMC",DGD(1)=2:"REGIONAL OFFICE",DGD(2)=3:"RPC",1:"UNKNOWN"),DGD(2)=$S($L($P(DGD,U,3)):$P(DGD,U,3),1:"CITY UNKNOWN"),DGD(3)=$S($D(^DIC(5,+$P(DGD,U,4),0)):$P(^(0),U,1),1:"STATE UNKNOWN")
"RTN","DG1010S1",47,0)
 S DGD(4)=$S($P(DGD,U,6)]"":$P(DGD,U,6),1:"VARO DECISION UNKNOWN")
"RTN","DG1010S1",48,0)
C W ?90,"| TWX Source:  ",DGD(1),!?9,"TWX City:  ",DGD(2),?90,"| TWX State:  ",$E(DGD(3),1,26),!?9,"VARO Decision:  ",DGD(4),!?5,DGLSUP1
"RTN","DG1010S1",49,0)
 K DGAD,DGD,DGEL,I,I1,I2,Y,DGDAT G ^DG1010S2
"RTN","DG53568A")
0^33^B32859040
"RTN","DG53568A",1,0)
DG53568A ;ALB/RMM - POST-INSTALL ROUTINE FOR SD ENCAP ; 03/24/2004
"RTN","DG53568A",2,0)
 ;;5.3;Registration;**568**;AUG 13, 1993
"RTN","DG53568A",3,0)
 ;
"RTN","DG53568A",4,0)
EN ; Entry point for the DG*5.3*568 Post-Install
"RTN","DG53568A",5,0)
 ;
"RTN","DG53568A",6,0)
 ; This routine will update the WORD-PROCESSING #3.5 field, in the 
"RTN","DG53568A",7,0)
 ; OPTION (#19) File for the following options (if present):
"RTN","DG53568A",8,0)
 ;  [ZDGYP SD GLOBAL ESTIMATOR] Global Estimator for Scheduling
"RTN","DG53568A",9,0)
 ;  [DGYP SD GLOBAL ESTIMATOR]  Global Estimator for Scheduling
"RTN","DG53568A",10,0)
 ;
"RTN","DG53568A",11,0)
 ; Get IENs from OPTION File
"RTN","DG53568A",12,0)
 N DGYP,ZDGYP,DGMSG,MCNT,DGNEW,DGERR,DGOUT
"RTN","DG53568A",13,0)
 S DGYP=+$O(^DIC(19,"B","DGYP SD GLOBAL ESTIMATOR",""))
"RTN","DG53568A",14,0)
 S ZDGYP=+$O(^DIC(19,"B","ZDGYP SD GLOBAL ESTIMATOR",""))
"RTN","DG53568A",15,0)
 ;
"RTN","DG53568A",16,0)
 S MCNT=1,DGMSG(MCNT)="Updating the description for option: Global Estimator for Scheduling"
"RTN","DG53568A",17,0)
 S:DGYP>0 MCNT=MCNT+1,DGMSG(MCNT)="IEN = "_DGYP
"RTN","DG53568A",18,0)
 S:ZDGYP>0 MCNT=MCNT+1,DGMSG(MCNT)="IEN = "_ZDGYP
"RTN","DG53568A",19,0)
 D MES^XPDUTL(.DGMSG)
"RTN","DG53568A",20,0)
 ;
"RTN","DG53568A",21,0)
 D NEWTXT
"RTN","DG53568A",22,0)
 D:DGYP>0 TXTUPDT(DGYP)
"RTN","DG53568A",23,0)
 D:ZDGYP>0 TXTUPDT(ZDGYP)
"RTN","DG53568A",24,0)
 ;
"RTN","DG53568A",25,0)
 D BMES^XPDUTL("Post-Install Complete, the option text has been updated.")
"RTN","DG53568A",26,0)
 Q
"RTN","DG53568A",27,0)
NEWTXT ;
"RTN","DG53568A",28,0)
 ; Set up description array.
"RTN","DG53568A",29,0)
 S DGNEW("WP",1)="In previous versions of PIMS, a patient's outpatient information has"
"RTN","DG53568A",30,0)
 S DGNEW("WP",2)="been stored in various files in the VistA database. With the"
"RTN","DG53568A",31,0)
 S DGNEW("WP",3)="requirement to checkout all outpatient encounters, it was necessary"
"RTN","DG53568A",32,0)
 S DGNEW("WP",4)="to consolidate much of the common outpatient information into one"
"RTN","DG53568A",33,0)
 S DGNEW("WP",5)="outpatient encounter file."
"RTN","DG53568A",34,0)
 S DGNEW("WP",6)=" "
"RTN","DG53568A",35,0)
 S DGNEW("WP",7)="In PIMS v5.3, the data will reside in the new OUTPATIENT"
"RTN","DG53568A",36,0)
 S DGNEW("WP",8)="ENCOUNTER(#409.68) file as well as in the old data structures."
"RTN","DG53568A",37,0)
 S DGNEW("WP",9)="This file will hold encounter data for all checked out encounters."
"RTN","DG53568A",38,0)
 S DGNEW("WP",10)="This will include information from the following:"
"RTN","DG53568A",39,0)
 S DGNEW("WP",11)=" "
"RTN","DG53568A",40,0)
 S DGNEW("WP",12)="         o appointments:  SDAPI - Appointment API"
"RTN","DG53568A",41,0)
 S DGNEW("WP",13)="         o add/edits   :  ^SDV()"
"RTN","DG53568A",42,0)
 S DGNEW("WP",14)="         o dispositions:  ^DPT(patient,""DIS"",date/time)"
"RTN","DG53568A",43,0)
 S DGNEW("WP",15)=" "
"RTN","DG53568A",44,0)
 S DGNEW("WP",16)="The MUMPS global for this file is ^SCE."
"RTN","DG53568A",45,0)
 S DGNEW("WP",17)=" "
"RTN","DG53568A",46,0)
 S DGNEW("WP",18)=" "
"RTN","DG53568A",47,0)
 S DGNEW("WP",19)="Also, as part of the checkout process, questions regarding"
"RTN","DG53568A",48,0)
 S DGNEW("WP",20)="whether the encounter was related to a service-connected disability,"
"RTN","DG53568A",49,0)
 S DGNEW("WP",21)="Agent Orange, ionization and environmental contaminants from the"
"RTN","DG53568A",50,0)
 S DGNEW("WP",22)="Persian Gulf war, will be asked when appropriate."
"RTN","DG53568A",51,0)
 S DGNEW("WP",23)=" "
"RTN","DG53568A",52,0)
 S DGNEW("WP",24)="This data will be stored in the new OUTPATIENT CLASSIFICATION"
"RTN","DG53568A",53,0)
 S DGNEW("WP",25)="(#409.42) file in the ^SDD(409.42) global node."
"RTN","DG53568A",54,0)
 S DGNEW("WP",26)=" "
"RTN","DG53568A",55,0)
 S DGNEW("WP",27)=" "
"RTN","DG53568A",56,0)
 S DGNEW("WP",28)="The purpose of this utility is the following:"
"RTN","DG53568A",57,0)
 S DGNEW("WP",29)="             1. estimate a one year rate of growth for"
"RTN","DG53568A",58,0)
 S DGNEW("WP",30)="                ^SCE using as a base the encounter data"
"RTN","DG53568A",59,0)
 S DGNEW("WP",31)="                for the previous 365 days"
"RTN","DG53568A",60,0)
 S DGNEW("WP",32)=" "
"RTN","DG53568A",61,0)
 S DGNEW("WP",33)="             2. estimate a one year rate of growth for"
"RTN","DG53568A",62,0)
 S DGNEW("WP",34)="                ^SDD(409.42) using as a base the encounter data"
"RTN","DG53568A",63,0)
 S DGNEW("WP",35)="                for the previous 365 and the patient demographic"
"RTN","DG53568A",64,0)
 S DGNEW("WP",36)="                information"
"RTN","DG53568A",65,0)
 S DGNEW("WP",37)=" "
"RTN","DG53568A",66,0)
 S DGNEW("WP",38)="Using these estimates, you can make a better determination"
"RTN","DG53568A",67,0)
 S DGNEW("WP",39)="as to where to place this new ^SCE global and how large the"
"RTN","DG53568A",68,0)
 S DGNEW("WP",40)="existing ^SDD global will grow."
"RTN","DG53568A",69,0)
 S DGNEW("WP",41)=" "
"RTN","DG53568A",70,0)
 S DGNEW("WP",42)="This utility will not affect the current v5.2 functionality in any"
"RTN","DG53568A",71,0)
 S DGNEW("WP",43)="way. However, it is recommended that it be queued to run at non-peak"
"RTN","DG53568A",72,0)
 S DGNEW("WP",44)="hours.  After the estimations are calculated, the results will be"
"RTN","DG53568A",73,0)
 S DGNEW("WP",45)="reported to the user via a MailMan message."
"RTN","DG53568A",74,0)
 S DGNEW("WP",46)=" "
"RTN","DG53568A",75,0)
 S DGNEW("WP",47)="Finally, in v5.3, the site will have the ability to capture provider"
"RTN","DG53568A",76,0)
 S DGNEW("WP",48)="and diagnostic data as part of the checkout process. Capturing this"
"RTN","DG53568A",77,0)
 S DGNEW("WP",49)="data will be site selectable. It is estimated that each provider and"
"RTN","DG53568A",78,0)
 S DGNEW("WP",50)="each diagnosis captured for an encounter will use .05 1K blocks."
"RTN","DG53568A",79,0)
 S DGNEW("WP",51)=" "
"RTN","DG53568A",80,0)
 S DGNEW("WP",52)="NOTE: If the site does choose to capture provider data then nurses,"
"RTN","DG53568A",81,0)
 S DGNEW("WP",53)="social workers and other providers of care will need to have entries"
"RTN","DG53568A",82,0)
 S DGNEW("WP",54)="in the NEW PERSON file and be assigned the PROVIDER security key."
"RTN","DG53568A",83,0)
 S DGNEW("WP",55)="Assigning this key will allow selection of these providers during the"
"RTN","DG53568A",84,0)
 S DGNEW("WP",56)="checkout process."
"RTN","DG53568A",85,0)
 S DGNEW("WP",57)=" "
"RTN","DG53568A",86,0)
 S DGNEW("WP",58)=" "
"RTN","DG53568A",87,0)
 S DGNEW("WP",59)="The option should be executed by the IRM staff and is locked with the"
"RTN","DG53568A",88,0)
 S DGNEW("WP",60)="DGYP IRM security key."
"RTN","DG53568A",89,0)
 Q
"RTN","DG53568A",90,0)
TXTUPDT(OPTIEN) ;
"RTN","DG53568A",91,0)
 ; Update the Word Processing Field
"RTN","DG53568A",92,0)
 D WP^DIE(19,OPTIEN_",",3.5,"K","DGNEW(""WP"")","DGERR")
"RTN","DG53568A",93,0)
 ;
"RTN","DG53568A",94,0)
 ; Check for and Report any Errors
"RTN","DG53568A",95,0)
 I $D(DGERR) D
"RTN","DG53568A",96,0)
 . D BMES^XPDUTL("NOTE: An error occurred when updating the OPTION text.")
"RTN","DG53568A",97,0)
 . D MSG^DIALOG("AS",.DGOUT,"","","DGERR")
"RTN","DG53568A",98,0)
 . D MES^XPDUTL(.DGOUT)
"RTN","DG53568A",99,0)
 . D BMES^XPDUTL("Please contact the VistA Help Desk.")
"RTN","DG53568A",100,0)
 ;
"RTN","DG53568A",101,0)
 ; Cleanup after each OPTION is updated
"RTN","DG53568A",102,0)
 K DGNEW,DGERR,DGOUT,EASIEN,DGMSG
"RTN","DG53568A",103,0)
 ;
"RTN","DG53568A",104,0)
 Q
"RTN","DGDEATH")
0^2^B27182979
"RTN","DGDEATH",1,0)
DGDEATH ;ALB/MRL/PHH-PROCESS DECEASED PATIENTS ; 10/15/2004 12:01pm
"RTN","DGDEATH",2,0)
 ;;5.3;Registration;**45,84,101,149,392,545,595,568**;Aug 13, 1993
"RTN","DGDEATH",3,0)
 ;
"RTN","DGDEATH",4,0)
GET S DGDTHEN="" W !! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S (DA,DFN)=+Y
"RTN","DGDEATH",5,0)
 I $D(^DPT(DFN,.1)) W !?3,"Patient is currently in-house.  Discharge him with a discharge type of DEATH." G GET
"RTN","DGDEATH",6,0)
 I $S($D(^DPT(DFN,.35)):^(.35),1:"") F DGY=0:0 S DGY=$O(^DGPM("ATID1",DFN,DGY)) Q:'DGY  S DGDA=$O(^(DGY,0)) I $D(^DGPM(+DGDA,0)),$P(^(0),"^",17)]"" S DGXX=$P(^(0),"^",17),DGXX=^DGPM(DGXX,0) I "^12^38^"[("^"_$P(DGXX,"^",18)_"^") G DIS
"RTN","DGDEATH",7,0)
 D NOW^%DTC S DGNOW=%
"RTN","DGDEATH",8,0)
 S ^TMP("DEATH",$J)=1
"RTN","DGDEATH",9,0)
 K A W ! S DIE=DIC,DR=".351" D ^DIE
"RTN","DGDEATH",10,0)
 I '$D(^DPT(DFN,.35)) G GET
"RTN","DGDEATH",11,0)
 I $P(^DPT(DFN,.35),"^",1)="" K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",12,0)
 I $P(^DPT(DFN,.35),"^",1)'="" S DR=".353" D ^DIE
"RTN","DGDEATH",13,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",14,0)
 K ^TMP("DEATH",$J) G GET
"RTN","DGDEATH",15,0)
 ;
"RTN","DGDEATH",16,0)
DIS W !,"Patient has a discharge type of Death",!,"Edit the discharge",!
"RTN","DGDEATH",17,0)
Q K A,DA,DFN,DGDA,DIC,DIE,DR,DGXX,DGY,DGDTHEN Q
"RTN","DGDEATH",18,0)
XFR ; called from set x-ref of field .351 of file 2
"RTN","DGDEATH",19,0)
 N DGPCMM,DGFAPT,DGFAPTI,DGFAPT1
"RTN","DGDEATH",20,0)
 Q:'$D(DFN)
"RTN","DGDEATH",21,0)
 K DGTEXT D ^DGPATV S DGDEATH=$$GET1^DIQ(2,DFN,.351,"I"),XMSUB="PATIENT HAS EXPIRED",DGCT=0
"RTN","DGDEATH",22,0)
 D DEMOG
"RTN","DGDEATH",23,0)
 S DGT=X-.0001,(Y,DGDDT)=X,DG1="" D:DGT]"" ^DGINPW
"RTN","DGDEATH",24,0)
 S Y=$$FMTE^XLFDT(Y),Y=$S(Y]"":Y,1:"UNKNOWN")
"RTN","DGDEATH",25,0)
 D LINE("")
"RTN","DGDEATH",26,0)
 D LINE("      Date/Time of Death: "_DEATHVAL_$S('DG1:"",$D(DGDTHEN):"",1:"  (While an inpatient)"))
"RTN","DGDEATH",27,0)
 D LINE("")
"RTN","DGDEATH",28,0)
 I '$D(ADM),DG1,$D(^DGPM(+DGA1,0)) S ADM=+^DGPM($P(^(0),"^",14),0)
"RTN","DGDEATH",29,0)
 S Y=$$FMTE^XLFDT($S($D(ADM):ADM,1:""))
"RTN","DGDEATH",30,0)
 D LINE($S($D(DGDTHEN):"",DG1:"     Admission Date/Time: "_Y_$S((DGDDT-ADM)<1:"  (Within 24 hours of hospitalization)",1:""),1:""))
"RTN","DGDEATH",31,0)
 D LINE("")
"RTN","DGDEATH",32,0)
 S DGX=$P($G(^DGPM(+$G(DGA1),0)),"^",6),DGX=$P($G(^DIC(42,+DGX,0)),U,1)
"RTN","DGDEATH",33,0)
 D LINE($S($D(DGDTHEN):"",('DG1):"",$D(DGA1):"             Admitted To: "_$S(DGX]"":DGX,1:"UNKNOWN"),1:"")) K DGX
"RTN","DGDEATH",34,0)
 D LINE("")
"RTN","DGDEATH",35,0)
 I DG1&'$D(DGDTHEN) D 
"RTN","DGDEATH",36,0)
 . D LINE($S($D(DGXFR0):"           Last Transfer: "_$S($D(^DIC(42,+$P(DGXFR0,"^",6),0)):$P(^(0),"^"),1:"UNKNOWN"),1:""))
"RTN","DGDEATH",37,0)
 . D LINE("")
"RTN","DGDEATH",38,0)
F N DGARRAY,SDCNT S DGFAPT=DGDEATH,DGFAPTI=""
"RTN","DGDEATH",39,0)
 S DGARRAY("FLDS")=3,DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY(1)=DT
"RTN","DGDEATH",40,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGDEATH",41,0)
 F  S DGFAPT=$O(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:'DGFAPT  S DGFAPT1=$G(^TMP($J,"SDAMA301",DFN,DGFAPT)) Q:DGFAPT1']""  D  Q:DGFAPTI
"RTN","DGDEATH",42,0)
 .I $P($P(DGFAPT1,U,3),";")'["C" D LINE("NOTE: Patient has future appointments scheduled!!") S DGFAPTI=1
"RTN","DGDEATH",43,0)
 S DGSCHAD=0 D SA I DGSCHAD D LINE("NOTE: Patient had scheduled admissions which have been cancelled!!")
"RTN","DGDEATH",44,0)
 I 'DGVETS D LINE("Patient is a NON-VETERAN."_$S($D(^DIC(21,+$P($G(^DPT(DFN,.32)),"^",3),0)):"  ["_$P(^(0),"^",1)_"]",1:""))
"RTN","DGDEATH",45,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",46,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",47,0)
Q1 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",48,0)
 K DGDEATH,DGSCHAD,DGI,Y,DGDDT D KILL^DGPATV K ADM,DG1,DGA1,DGCT,DGT,DGXX,DGY,Z Q
"RTN","DGDEATH",49,0)
SA F DGI=0:0 S DGI=$O(^DGS(41.1,"B",DFN,DGI)) Q:'DGI  I $D(^DGS(41.1,DGI,0)),($P(^(0),"^",13)']""),($P(^(0),"^",17)']"") S $P(^(0),"^",13)=DGDEATH,$P(^(0),"^",14)=+DUZ,$P(^(0),"^",15)=1,$P(^(0),"^",16)=2,DGSCHAD=1
"RTN","DGDEATH",50,0)
 Q
"RTN","DGDEATH",51,0)
 ;
"RTN","DGDEATH",52,0)
DEL ; delete death bulletin
"RTN","DGDEATH",53,0)
 N DGPCMM,DELBY,DELTM,DTHINFO
"RTN","DGDEATH",54,0)
 S DFN=+$G(DA) I '$D(^DPT(DFN,0)) Q  ; no patient node
"RTN","DGDEATH",55,0)
 I +$G(^DPT(DFN,.35)) Q  ; not deletion
"RTN","DGDEATH",56,0)
 S DGDEATH=X,XMSUB="Patient Death has been Deleted",DGCT=0
"RTN","DGDEATH",57,0)
 D ^DGPATV
"RTN","DGDEATH",58,0)
 D LINE("The date of death for the following patient has been deleted.")
"RTN","DGDEATH",59,0)
 D LINE("")
"RTN","DGDEATH",60,0)
 D DEMOG
"RTN","DGDEATH",61,0)
 D LINE("")
"RTN","DGDEATH",62,0)
 S DGPCMM=$$PCMMXMY^SCAPMC25(1,DFN,,,0) ;creates xmy array
"RTN","DGDEATH",63,0)
 S DGCT=$$PCMAIL^SCMCMM(DFN,"DGTEXT",DT)
"RTN","DGDEATH",64,0)
 S DGB=1 D ^DGBUL S X=DGDEATH
"RTN","DGDEATH",65,0)
 K DGCT,DGDEATH D KILL^DGPATV
"RTN","DGDEATH",66,0)
 Q
"RTN","DGDEATH",67,0)
 ;
"RTN","DGDEATH",68,0)
DEMOG ; list main demographics
"RTN","DGDEATH",69,0)
 D LINE("                    NAME: "_DGNAME)
"RTN","DGDEATH",70,0)
 D LINE("                     SSN: "_$P(SSN,"^",2))
"RTN","DGDEATH",71,0)
 D LINE("                     DOB: "_$P(DOB,"^",2))
"RTN","DGDEATH",72,0)
 I DGVETS D
"RTN","DGDEATH",73,0)
 . N DGX
"RTN","DGDEATH",74,0)
 . S DGX=$G(^DPT(DFN,.31))
"RTN","DGDEATH",75,0)
 . S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGX,U,4)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGDEATH",76,0)
 . D LINE("   CLAIM FOLDER LOCATION: "_$S($D(DGLOCATN):DGLOCATN,1:"NOT LISTED"))
"RTN","DGDEATH",77,0)
 . D LINE("            CLAIM NUMBER: "_$S($P(DGX,"^",3)]"":$P(DGX,"^",3),1:"NOT LISTED"))
"RTN","DGDEATH",78,0)
 D LINE("   COORDINATING MASTER OF RECORD: "_DGCMOR)
"RTN","DGDEATH",79,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","DTHINFO")
"RTN","DGDEATH",80,0)
 S DEATHVAL=$G(DTHINFO(2,DFN_",",.351,"E"))
"RTN","DGDEATH",81,0)
 S DEATHVAL=$$FMTE^XLFDT(DEATHVAL),DEATHVAL=$S(DEATHVAL]"":DEATHVAL,1:"UNKNOWN")
"RTN","DGDEATH",82,0)
 S SOURCE=$G(DTHINFO(2,DFN_",",.353,"E"))
"RTN","DGDEATH",83,0)
 S DELTM=$G(DTHINFO(2,DFN_",",.354,"E"))
"RTN","DGDEATH",84,0)
 S DELBY=$G(DTHINFO(2,DFN_",",.355,"E"))
"RTN","DGDEATH",85,0)
 D LINE("")
"RTN","DGDEATH",86,0)
 D LINE("             LAST EDITED BY: "_DELBY)
"RTN","DGDEATH",87,0)
 D LINE("    DATE/TIME LAST MODIFIED: "_DELTM)
"RTN","DGDEATH",88,0)
 D LINE("     SOURCE OF NOTIFICATION: "_$S(SOURCE="":"UNDEFINED",1:SOURCE))
"RTN","DGDEATH",89,0)
 ;K DEATHVAL,SOURCE,DELTM,DELBY
"RTN","DGDEATH",90,0)
 Q
"RTN","DGDEATH",91,0)
 ;
"RTN","DGDEATH",92,0)
LINE(X) ; add line contained in X to array
"RTN","DGDEATH",93,0)
 S DGCT=DGCT+1
"RTN","DGDEATH",94,0)
 S DGTEXT(DGCT,0)=X
"RTN","DGDEATH",95,0)
 Q
"RTN","DGDEATH",96,0)
DSBULL ;
"RTN","DGDEATH",97,0)
 ;
"RTN","DGDEATH",98,0)
 S DFN=DA
"RTN","DGDEATH",99,0)
 I $D(DGPMDA) D  Q
"RTN","DGDEATH",100,0)
 .S DISTYPE=$P($G(^DGPM(DGPMDA,0)),"^",18)
"RTN","DGDEATH",101,0)
 .I $G(^DG(405.2,DISTYPE,0))["DEATH" D
"RTN","DGDEATH",102,0)
 ..S FDA(2,DFN_",",.353)=1 D FILE^DIE(,"FDA","BWFERR")
"RTN","DGDEATH",103,0)
 ..D DISCHRGE,XFR
"RTN","DGDEATH",104,0)
 I $D(^TMP("DEATH",$J)) Q
"RTN","DGDEATH",105,0)
 D DISCHRGE,XFR
"RTN","DGDEATH",106,0)
 Q
"RTN","DGDEATH",107,0)
DKBULL ;
"RTN","DGDEATH",108,0)
 S DFN=DA
"RTN","DGDEATH",109,0)
 S FDA(2,DFN_",",.353)="@" D FILE^DIE(,"FDA",)
"RTN","DGDEATH",110,0)
 D DISCHRGE,DEL
"RTN","DGDEATH",111,0)
 Q
"RTN","DGDEATH",112,0)
DISCHRGE ;
"RTN","DGDEATH",113,0)
 ; If the patient is being discharged, determine values needed for 
"RTN","DGDEATH",114,0)
 ; Source of Notification and Date/Time last entered.
"RTN","DGDEATH",115,0)
 ;
"RTN","DGDEATH",116,0)
 I '$D(DGNOW) S DGNOW=$$HTFM^XLFDT($H)
"RTN","DGDEATH",117,0)
 S FDA(2,DFN_",",.354)=DGNOW
"RTN","DGDEATH",118,0)
 S FDA(2,DFN_",",.355)=DUZ
"RTN","DGDEATH",119,0)
 D FILE^DIE(,"FDA",)
"RTN","DGDEATH",120,0)
 Q
"RTN","DGDIS1")
0^4^B6822777
"RTN","DGDIS1",1,0)
DGDIS1 ;ALB/XAK-MRL - DISPOSITION PROCESSING ; 02/15/2004
"RTN","DGDIS1",2,0)
 ;;5.3;Registration;**151,568**;Aug 13, 1993
"RTN","DGDIS1",3,0)
1 ;HOSPITAL, NHCU OR DOM ADMISSION
"RTN","DGDIS1",4,0)
A D DISPO^DGPMV K DGPMDER
"RTN","DGDIS1",5,0)
 Q
"RTN","DGDIS1",6,0)
 ;
"RTN","DGDIS1",7,0)
2 ;"SCHEDULE ADMISSION FOR WARD
"RTN","DGDIS1",8,0)
 K %DT S DLAYGO=41.1,DIC(0)="L" I $D(^DGS(41.1,"B",DFN)) S DIC(0)="LEQ" K DLAYGO W !?7,*7,"SCHEDULED ADMISSION ALREADY ON FILE.",! F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) Q:'I  S DA=I,DIC="^DGS(41.1,",DR=0 D EN^DIQ
"RTN","DGDIS1",9,0)
REASK S DIC=41.1,X=$S('$D(DLAYGO):DFN,1:$P(^DPT(DFN,0),U,1)),D="B" S:$D(DLAYGO) DIC(0)=DIC(0)_"MZ" D @($S(X=DFN:"IX",1:"")_"^DIC") I Y<0,$D(DLAYGO) S X=$E(^DPT(DFN,0),1)_$E($P(^(0),U,9),6,9) D ^DIC
"RTN","DGDIS1",10,0)
 I $D(%Y),%Y["?" W !,"ENTER 'Y'ES OR 'N'O",! G REASK
"RTN","DGDIS1",11,0)
22 Q:Y'>0  S DGSKIP="",DGSCH=+Y S:$P(Y,"^",3) DGNEW=1 D EN^DGSCHAD K DGSKIP Q
"RTN","DGDIS1",12,0)
 ;Q:Y'>0  S DA=+Y,DR="[DGSCHADMIT]",DIE="^DGS(41.1,",DGSKIP=1 D ^DIE K DGSKIP Q
"RTN","DGDIS1",13,0)
 ;
"RTN","DGDIS1",14,0)
3 ;WAITING LIST
"RTN","DGDIS1",15,0)
DIV W !,"Waiting List Entry",! S DIC="^DGWAIT(",DIC(0)="ZL",X=$S($D(^DG(40.8,+DIV,0)):$P(^(0),"^",1),1:"") D ^DIC G Q:Y'>0 S DIV=+Y
"RTN","DGDIS1",16,0)
 ;
"RTN","DGDIS1",17,0)
PAT S:'($D(^DGWAIT(+DIV,"P",0))\10) ^DGWAIT(DIV,"P",0)="^42.51PA^^" S D="B",DA(1)=DIV,DIC="^DGWAIT("_DIV_",""P"",",DIC(0)="ZL",DP=42.51,X=$P(^DPT(DFN,0),"^",1) D IX^DIC G Q:Y'>0 S DGWAIT=0 D EDIT^DGWAIT Q
"RTN","DGDIS1",18,0)
 ;
"RTN","DGDIS1",19,0)
Q Q
"RTN","DGDIS1",20,0)
4 ;FUTURE APPOINTMENT
"RTN","DGDIS1",21,0)
 W !,"APPOINTMENTS CAN NO LONGER BE MADE USING THIS OPTION."
"RTN","DGDIS1",22,0)
 Q
"RTN","DGDIS1",23,0)
 ;
"RTN","DGDIS1",24,0)
CO(DFN,SDDT,SDISHDL,SDISDEL) ; -- ask check out questions
"RTN","DGDIS1",25,0)
 N DA,DFN1,DGDFN,DGDFN1,DGCO,DIE,DGODSND,SDCOQUIT,SDOE,Y
"RTN","DGDIS1",26,0)
 S SDISDEL=0
"RTN","DGDIS1",27,0)
 S SDOE=$$GETDISP^SDVSIT2(DFN,SDDT) G COQ:'SDOE
"RTN","DGDIS1",28,0)
 I '$$SCE^DGSDU(+SDOE,7,0) D INT^SDCO6(SDOE,.SDCOQUIT)
"RTN","DGDIS1",29,0)
 I '$D(SDCOQUIT),$$ASK^SDCO6 D EN^SDCO(SDOE,SDISHDL,1)
"RTN","DGDIS1",30,0)
 I '$$SCE^DGSDU(+SDOE,7,0) W !!,*7,"This disposition must be checked out to continue." S SDISDEL=1
"RTN","DGDIS1",31,0)
COQ Q
"RTN","DGENRPD1")
0^37^B24893402
"RTN","DGENRPD1",1,0)
DGENRPD1 ;ALB/CJM - Veterans with no Application and with a Future Appointment Report; 04/28/2004
"RTN","DGENRPD1",2,0)
 ;;5.3;Registration;**147,568**;Aug 13,1993
"RTN","DGENRPD1",3,0)
 ;
"RTN","DGENRPD1",4,0)
REPORT ;
"RTN","DGENRPD1",5,0)
 N DGENRP
"RTN","DGENRPD1",6,0)
 ;
"RTN","DGENRPD1",7,0)
 ;Control variables used in generating report
"RTN","DGENRPD1",8,0)
 ;DGENRP("BEGIN")=<begining of the date range for appt selection>
"RTN","DGENRPD1",9,0)
 ;DGENRP("END")=<ending date of range>
"RTN","DGENRPD1",10,0)
 ;DGENRP("ALL")=1 means to include all clinics for appt selection
"RTN","DGENRPD1",11,0)
 ;DGENRP("DIVISION",<list of medical center Divisions to include>)=""
"RTN","DGENRPD1",12,0)
 ;DGENRP("CLINIC",<list of clinics to include>)=""
"RTN","DGENRPD1",13,0)
 ;DGENRP("JUSTONCE")=<1 means that if the patient has multiple appts to print only the first, 0 means print all the patient's appts>
"RTN","DGENRPD1",14,0)
 ;
"RTN","DGENRPD1",15,0)
 G:'$$ASKRANGE(.DGENRP) EXIT
"RTN","DGENRPD1",16,0)
 G:'$$LOCATION(.DGENRP) EXIT
"RTN","DGENRPD1",17,0)
 G:'$$JUSTONCE(.DGENRP) EXIT
"RTN","DGENRPD1",18,0)
 ;
"RTN","DGENRPD1",19,0)
 I $$DEVICE() D PRINT^DGENRPD2
"RTN","DGENRPD1",20,0)
EXIT ;
"RTN","DGENRPD1",21,0)
 Q
"RTN","DGENRPD1",22,0)
 ;
"RTN","DGENRPD1",23,0)
DEVICE() ;
"RTN","DGENRPD1",24,0)
 ;Description: allows the user to select a device.
"RTN","DGENRPD1",25,0)
 ;Input: none
"RTN","DGENRPD1",26,0)
 ;
"RTN","DGENRPD1",27,0)
 ;Output:
"RTN","DGENRPD1",28,0)
 ;  Function Value - Returns 0 if the user decides not to print or to
"RTN","DGENRPD1",29,0)
 ;       queue the report, 1 otherwise.
"RTN","DGENRPD1",30,0)
 ;
"RTN","DGENRPD1",31,0)
 N OK
"RTN","DGENRPD1",32,0)
 S OK=1
"RTN","DGENRPD1",33,0)
 S %ZIS="MQ"
"RTN","DGENRPD1",34,0)
 W !,"*** This report requires a 132 column printer. ******"
"RTN","DGENRPD1",35,0)
 D ^%ZIS
"RTN","DGENRPD1",36,0)
 S:POP OK=0
"RTN","DGENRPD1",37,0)
 D:OK&$D(IO("Q"))
"RTN","DGENRPD1",38,0)
 .S ZTRTN="PRINT^DGENRPD2",ZTDESC="Future Appointments with No EnrollmentApplication REPORT",ZTSAVE("DGENRP(")=""
"RTN","DGENRPD1",39,0)
 .D ^%ZTLOAD
"RTN","DGENRPD1",40,0)
 .W !,$S($D(ZTSK):"REQUEST QUEUED TASK="_ZTSK,1:"REQUEST CANCELLED")
"RTN","DGENRPD1",41,0)
 .D HOME^%ZIS
"RTN","DGENRPD1",42,0)
 .S OK=0
"RTN","DGENRPD1",43,0)
 Q OK
"RTN","DGENRPD1",44,0)
 ;
"RTN","DGENRPD1",45,0)
LOCATION(DGENRP) ;
"RTN","DGENRPD1",46,0)
 ;Description: asks the user to select locations of future appointments
"RTN","DGENRPD1",47,0)
 ;
"RTN","DGENRPD1",48,0)
 ;Input: none
"RTN","DGENRPD1",49,0)
 ;Output:
"RTN","DGENRPD1",50,0)
 ;  DGENRP - (pass by reference) used to return selected locations
"RTN","DGENRPD1",51,0)
 ;  Function Value: 0 on failure, 1 on success
"RTN","DGENRPD1",52,0)
 ;
"RTN","DGENRPD1",53,0)
 N DIR,SUCCESS
"RTN","DGENRPD1",54,0)
 S SUCCESS=1
"RTN","DGENRPD1",55,0)
 S DIR("B")="ALL"
"RTN","DGENRPD1",56,0)
 S DIR(0)=$S($P($G(^DG(43,1,"GL")),"^",2):"S^A:All;D:by Division;C:by Clinic",1:"S^A:All;C:by Clinic")
"RTN","DGENRPD1",57,0)
 S DIR("A")="How do you want to select the clinics to appear in the report? "
"RTN","DGENRPD1",58,0)
 S DIR("?")="You have the choice of selecting all clinics, entire divisions, or individual clinics."
"RTN","DGENRPD1",59,0)
 D ^DIR
"RTN","DGENRPD1",60,0)
 I $D(DIRUT) D
"RTN","DGENRPD1",61,0)
 .S SUCCESS=0
"RTN","DGENRPD1",62,0)
 E  D
"RTN","DGENRPD1",63,0)
 .I Y="A" D
"RTN","DGENRPD1",64,0)
 ..S DGENRP("ALL")=1
"RTN","DGENRPD1",65,0)
 .E  D
"RTN","DGENRPD1",66,0)
 ..S DGENRP("ALL")=0
"RTN","DGENRPD1",67,0)
 ..I Y="C" D
"RTN","DGENRPD1",68,0)
 ...S SUCCESS=$$CLINIC(.DGENRP)
"RTN","DGENRPD1",69,0)
 ..E  D
"RTN","DGENRPD1",70,0)
 ...I Y="D" S SUCCESS=$$DIVISION(.DGENRP)
"RTN","DGENRPD1",71,0)
 ;
"RTN","DGENRPD1",72,0)
 Q SUCCESS
"RTN","DGENRPD1",73,0)
 ;
"RTN","DGENRPD1",74,0)
ASKRANGE(DGENRP) ;
"RTN","DGENRPD1",75,0)
 ;Description: Asks the user to enter a date range begining no earlier
"RTN","DGENRPD1",76,0)
 ;than the current date
"RTN","DGENRPD1",77,0)
 ;
"RTN","DGENRPD1",78,0)
 Q:'$$ASKBEGIN(.DGENRP) 0
"RTN","DGENRPD1",79,0)
 Q:'$$ASKEND(.DGENRP) 0
"RTN","DGENRPD1",80,0)
 Q 1
"RTN","DGENRPD1",81,0)
 ;
"RTN","DGENRPD1",82,0)
ASKBEGIN(DGENRP) ;
"RTN","DGENRPD1",83,0)
 ;Description: Asks the user to enter a beginning date.
"RTN","DGENRPD1",84,0)
 ;
"RTN","DGENRPD1",85,0)
 ;Input: none
"RTN","DGENRPD1",86,0)
 ;
"RTN","DGENRPD1",87,0)
 ;Output:
"RTN","DGENRPD1",88,0)
 ;  Function value=1 if user selected a date, 0 otherwise
"RTN","DGENRPD1",89,0)
 ;  DGENRP("BEGIN")=date selected
"RTN","DGENRPD1",90,0)
 ;
"RTN","DGENRPD1",91,0)
 N DIR,X,Y
"RTN","DGENRPD1",92,0)
 S DIR(0)="D^::XO"
"RTN","DGENRPD1",93,0)
 S DIR("A")="Enter beginning date for future appointments for."
"RTN","DGENRPD1",94,0)
 S DIR("B")=$$FMTE^XLFDT($$FMADD^XLFDT(DT,1),"D")
"RTN","DGENRPD1",95,0)
 S DIR("?")="Enter the first day to list appointments."
"RTN","DGENRPD1",96,0)
REPEAT D ^DIR
"RTN","DGENRPD1",97,0)
 Q:$D(DIRUT) 0
"RTN","DGENRPD1",98,0)
 I Y'>DT W !,"Date must be later than today!" G REPEAT
"RTN","DGENRPD1",99,0)
 S DGENRP("BEGIN")=Y
"RTN","DGENRPD1",100,0)
 Q 1
"RTN","DGENRPD1",101,0)
 ;
"RTN","DGENRPD1",102,0)
ASKEND(DGENRP) ;
"RTN","DGENRPD1",103,0)
 ;Description: Asks the user to enter an end date.
"RTN","DGENRPD1",104,0)
 ;
"RTN","DGENRPD1",105,0)
 ;Input:
"RTN","DGENRPD1",106,0)
 ;  DGENRP("BEGIN") - the earliest possible date
"RTN","DGENRPD1",107,0)
 ;
"RTN","DGENRPD1",108,0)
 ;Output:
"RTN","DGENRPD1",109,0)
 ;  Function value=1 if user selected a date, 0 otherwise
"RTN","DGENRPD1",110,0)
 ;  DGENRP("END")=date selected
"RTN","DGENRPD1",111,0)
 ;
"RTN","DGENRPD1",112,0)
 N DIR,X,Y
"RTN","DGENRPD1",113,0)
 S DIR(0)="D^::X"
"RTN","DGENRPD1",114,0)
 S DIR("A")="Enter ending date"
"RTN","DGENRPD1",115,0)
 S DIR("B")=$$FMTE^XLFDT(DGENRP("BEGIN"),"D")
"RTN","DGENRPD1",116,0)
 S DIR("?")="Enter the last day to list appointments for."
"RTN","DGENRPD1",117,0)
AGAIN D ^DIR
"RTN","DGENRPD1",118,0)
 Q:$D(DIRUT) 0
"RTN","DGENRPD1",119,0)
 I (Y<$G(DGENRP("BEGIN"))) W !,"Date must be no earlier than "_DIR("B") G AGAIN
"RTN","DGENRPD1",120,0)
 S DGENRP("END")=Y
"RTN","DGENRPD1",121,0)
 Q 1
"RTN","DGENRPD1",122,0)
 ;
"RTN","DGENRPD1",123,0)
DIVISION(DGENRP) ;
"RTN","DGENRPD1",124,0)
 ;Description: asks divisions to include
"RTN","DGENRPD1",125,0)
 ;
"RTN","DGENRPD1",126,0)
 N DIR,QUIT,SUCCESS
"RTN","DGENRPD1",127,0)
 S SUCCESS=1
"RTN","DGENRPD1",128,0)
 S DIR(0)="PO^40.8:AEM"
"RTN","DGENRPD1",129,0)
 S DIR("A")="Select the medical center divisions to include in the report"
"RTN","DGENRPD1",130,0)
 S DIR("?")="Appointments will not be included in the report for divisions that you do not select."
"RTN","DGENRPD1",131,0)
 S QUIT=0
"RTN","DGENRPD1",132,0)
 F  D  Q:QUIT
"RTN","DGENRPD1",133,0)
 .D ^DIR
"RTN","DGENRPD1",134,0)
 .I $D(DUOUT)!$D(DTOUT) S QUIT=1,SUCCESS=0 Q
"RTN","DGENRPD1",135,0)
 .I ((+Y)'>0) S QUIT=1 Q
"RTN","DGENRPD1",136,0)
 .S DGENRP("DIVISION",+Y)=""
"RTN","DGENRPD1",137,0)
 S:'$O(DGENRP("DIVISION",0)) SUCCESS=0
"RTN","DGENRPD1",138,0)
 Q SUCCESS
"RTN","DGENRPD1",139,0)
 ;
"RTN","DGENRPD1",140,0)
CLINIC(DGENRP) ;
"RTN","DGENRPD1",141,0)
 ;Description: asks clinics to include
"RTN","DGENRPD1",142,0)
 ;
"RTN","DGENRPD1",143,0)
 N DIR,QUIT,SUCCESS
"RTN","DGENRPD1",144,0)
 S SUCCESS=1
"RTN","DGENRPD1",145,0)
 S DIR(0)="PO^44:AEM"
"RTN","DGENRPD1",146,0)
 S DIR("A")="Select the clinics to include in the report"
"RTN","DGENRPD1",147,0)
 S DIR("?")="Appointments will not be included in the report for clinics that you do not select."
"RTN","DGENRPD1",148,0)
 S DIR("S")="I $P(^(0),""^"",3)=""C"""
"RTN","DGENRPD1",149,0)
 S QUIT=0
"RTN","DGENRPD1",150,0)
 F  D  Q:QUIT
"RTN","DGENRPD1",151,0)
 .D ^DIR
"RTN","DGENRPD1",152,0)
 .I $D(DUOUT)!$D(DTOUT) S QUIT=1,SUCCESS=0 Q
"RTN","DGENRPD1",153,0)
 .I ((+Y)'>0) S QUIT=1 Q
"RTN","DGENRPD1",154,0)
 .S DGENRP("CLINIC",+Y)=""
"RTN","DGENRPD1",155,0)
 S:'$O(DGENRP("CLINIC",0)) SUCCESS=0
"RTN","DGENRPD1",156,0)
 Q SUCCESS
"RTN","DGENRPD1",157,0)
 ;
"RTN","DGENRPD1",158,0)
JUSTONCE(DGENRP) ;
"RTN","DGENRPD1",159,0)
 ;Description: Asks wether or not to include only the first appointment
"RTN","DGENRPD1",160,0)
 ;for a patient that has multiple appointments
"RTN","DGENRPD1",161,0)
 ;
"RTN","DGENRPD1",162,0)
 ;Output:
"RTN","DGENRPD1",163,0)
 ;  Function Value: reuturns 1 on success, 0 on failure
"RTN","DGENRPD1",164,0)
 ;  DGENRP("JUSTONCE")=<1 for only earliest, 0 for all>
"RTN","DGENRPD1",165,0)
 ;
"RTN","DGENRPD1",166,0)
 N DIR
"RTN","DGENRPD1",167,0)
 S DGENRP("JUSTONCE")=0
"RTN","DGENRPD1",168,0)
 S DIR(0)="Y"
"RTN","DGENRPD1",169,0)
 S DIR("B")="NO"
"RTN","DGENRPD1",170,0)
 S DIR("A")="For patients with multiple appointments, should only the first be listed"
"RTN","DGENRPD1",171,0)
 D ^DIR
"RTN","DGENRPD1",172,0)
 Q:$D(DIRUT) 0
"RTN","DGENRPD1",173,0)
 I +Y=1 S DGENRP("JUSTONCE")=1
"RTN","DGENRPD1",174,0)
 Q 1
"RTN","DGENRPD2")
0^5^B39445592
"RTN","DGENRPD2",1,0)
DGENRPD2 ;ALB/CJM -Veteran with Future Appts and no Enrollment App Report - Continued; 02/11/2004
"RTN","DGENRPD2",2,0)
 ;;5.3;Registration;**147,232,568**;Aug 13,1993
"RTN","DGENRPD2",3,0)
 ;
"RTN","DGENRPD2",4,0)
PRINT ;
"RTN","DGENRPD2",5,0)
 N CRT,QUIT,PAGE,SUBSCRPT
"RTN","DGENRPD2",6,0)
 K ^TMP($J)
"RTN","DGENRPD2",7,0)
 S QUIT=0
"RTN","DGENRPD2",8,0)
 S PAGE=0
"RTN","DGENRPD2",9,0)
 S CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","DGENRPD2",10,0)
 ;
"RTN","DGENRPD2",11,0)
 D GETPAT
"RTN","DGENRPD2",12,0)
 U IO
"RTN","DGENRPD2",13,0)
 I CRT,PAGE=0 W @IOF
"RTN","DGENRPD2",14,0)
 S PAGE=1
"RTN","DGENRPD2",15,0)
 D HEADER
"RTN","DGENRPD2",16,0)
 F SUBSCRPT="STEP2","NOENREC" D
"RTN","DGENRPD2",17,0)
 .D PATIENTS(SUBSCRPT)
"RTN","DGENRPD2",18,0)
 I CRT,'QUIT D PAUSE
"RTN","DGENRPD2",19,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGENRPD2",20,0)
 D ^%ZISC
"RTN","DGENRPD2",21,0)
 ;
"RTN","DGENRPD2",22,0)
 K ^TMP($J)
"RTN","DGENRPD2",23,0)
 Q
"RTN","DGENRPD2",24,0)
LINE(LINE) ;
"RTN","DGENRPD2",25,0)
 ;Description: prints a line. First prints header if at end of page.
"RTN","DGENRPD2",26,0)
 ;
"RTN","DGENRPD2",27,0)
 I CRT,($Y>(IOSL-4)) D
"RTN","DGENRPD2",28,0)
 .D PAUSE
"RTN","DGENRPD2",29,0)
 .Q:QUIT
"RTN","DGENRPD2",30,0)
 .W @IOF
"RTN","DGENRPD2",31,0)
 .D HEADER
"RTN","DGENRPD2",32,0)
 .W LINE
"RTN","DGENRPD2",33,0)
 ;
"RTN","DGENRPD2",34,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","DGENRPD2",35,0)
 .W @IOF
"RTN","DGENRPD2",36,0)
 .D HEADER
"RTN","DGENRPD2",37,0)
 .W LINE
"RTN","DGENRPD2",38,0)
 ;
"RTN","DGENRPD2",39,0)
 E  W !,LINE
"RTN","DGENRPD2",40,0)
 Q
"RTN","DGENRPD2",41,0)
 ;
"RTN","DGENRPD2",42,0)
GETPAT ;
"RTN","DGENRPD2",43,0)
 ; Description: Gets patients to include in the report
"RTN","DGENRPD2",44,0)
 N BEGIN,END,DGARRAY,SDCNT,CATEGORY,DIVISION
"RTN","DGENRPD2",45,0)
 S BEGIN=DGENRP("BEGIN")-.1,END=DGENRP("END")+.1,DGARRAY(1)=BEGIN_";"_END
"RTN","DGENRPD2",46,0)
 S DGARRAY("FLDS")="3;10",SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGENRPD2",47,0)
 ;
"RTN","DGENRPD2",48,0)
 ; Appointment Database is Unavailable
"RTN","DGENRPD2",49,0)
 I $D(^TMP($J,"SDAMA301",101)) G ERR101
"RTN","DGENRPD2",50,0)
 ;
"RTN","DGENRPD2",51,0)
 ; Get All records for report
"RTN","DGENRPD2",52,0)
 I DGENRP("ALL") D
"RTN","DGENRPD2",53,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",54,0)
 ..Q:$P($G(^SC(CLINIC,0)),"^",3)'="C"
"RTN","DGENRPD2",55,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D
"RTN","DGENRPD2",56,0)
 ...S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",57,0)
 ...S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",58,0)
 ...D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",59,0)
 ;
"RTN","DGENRPD2",60,0)
 ; Get records for specified Divisions only
"RTN","DGENRPD2",61,0)
 I $O(DGENRP("DIVISION",0)) D
"RTN","DGENRPD2",62,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",63,0)
 ..Q:$P($G(^SC(CLINIC,0)),"^",3)'="C"
"RTN","DGENRPD2",64,0)
 ..S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",65,0)
 ..S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",66,0)
 ..Q:'DIVISION!('$D(DGENRP("DIVISION",DIVISION)))
"RTN","DGENRPD2",67,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",68,0)
 ;
"RTN","DGENRPD2",69,0)
 ; Get records for specified Clinics only
"RTN","DGENRPD2",70,0)
 I $O(DGENRP("CLINIC",0)) D
"RTN","DGENRPD2",71,0)
 .S CLINIC=0 F  S CLINIC=$O(^TMP($J,"SDAMA301",CLINIC)) Q:'CLINIC  D
"RTN","DGENRPD2",72,0)
 ..Q:'CLINIC!('$D(DGENRP("CLINIC",CLINIC)))
"RTN","DGENRPD2",73,0)
 ..Q:($P($G(^SC(CLINIC,0)),U,3)'="C")
"RTN","DGENRPD2",74,0)
 ..S DIVISION=$P($G(^SC(CLINIC,0)),U,15)
"RTN","DGENRPD2",75,0)
 ..S:'DIVISION DIVISION=$O(^DG(40.8,0))
"RTN","DGENRPD2",76,0)
 ..S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",CLINIC,DFN)) Q:'DFN  D VALREC(CLINIC,DFN)
"RTN","DGENRPD2",77,0)
 ;
"RTN","DGENRPD2",78,0)
 K DGARRAY,^TMP($J,"SDAMA301"),SDCNT
"RTN","DGENRPD2",79,0)
 Q
"RTN","DGENRPD2",80,0)
 ;
"RTN","DGENRPD2",81,0)
ERR101 S NAM="**Appointment Database is Unavailable**"
"RTN","DGENRPD2",82,0)
 ;^TMP($J,TYPE,DIVISION NAME,CLINIC NAME,CATEGORY,APPT DT/TM,DFN)
"RTN","DGENRPD2",83,0)
 S ^TMP($J,"NOENREC"," ",NAM," ",DT," ")=""
"RTN","DGENRPD2",84,0)
 K DGARRAY,^TMP($J,"SDAMA301"),SDCNT,NAM
"RTN","DGENRPD2",85,0)
 Q
"RTN","DGENRPD2",86,0)
 ;
"RTN","DGENRPD2",87,0)
VALREC(CLINIC,DFN) ;
"RTN","DGENRPD2",88,0)
 ;
"RTN","DGENRPD2",89,0)
 N APPT,STATUS,JUSTONCE S JUSTONCE=0
"RTN","DGENRPD2",90,0)
 S APPT=0 F  S APPT=$O(^TMP($J,"SDAMA301",CLINIC,DFN,APPT)) Q:'APPT!(JUSTONCE)  D
"RTN","DGENRPD2",91,0)
 .S JUSTONCE=+$G(DGENRP("JUSTONCE"))
"RTN","DGENRPD2",92,0)
 .; Exclude certain appointment statuses
"RTN","DGENRPD2",93,0)
 .S STATUS=$P($P(^TMP($J,"SDAMA301",CLINIC,DFN,APPT),U,3),";")
"RTN","DGENRPD2",94,0)
 .Q:"^N^NA^C^CA^PC^PCA^"[(U_STATUS_U)
"RTN","DGENRPD2",95,0)
 .;
"RTN","DGENRPD2",96,0)
 .; Don't include enrolled veterans or ones that have pending apps
"RTN","DGENRPD2",97,0)
 .S CATEGORY=$$CATEGORY^DGENA4(DFN)
"RTN","DGENRPD2",98,0)
 .I (CATEGORY="E")!(CATEGORY="P") Q
"RTN","DGENRPD2",99,0)
 .;
"RTN","DGENRPD2",100,0)
 .; Exclude if not an eligible veteran (can not enroll)
"RTN","DGENRPD2",101,0)
 .Q:'$$VET^DGENPTA(DFN)
"RTN","DGENRPD2",102,0)
 .;
"RTN","DGENRPD2",103,0)
 .D SETTMP(CLINIC,DFN,APPT)
"RTN","DGENRPD2",104,0)
 Q
"RTN","DGENRPD2",105,0)
 ;
"RTN","DGENRPD2",106,0)
SETTMP(CLINIC,DFN,APPT) ;
"RTN","DGENRPD2",107,0)
 ; NOENREC is for patients without enrollment records
"RTN","DGENRPD2",108,0)
 ; SITE2 is for other excluded enrollment records
"RTN","DGENRPD2",109,0)
 ;^TMP($J,TYPE,DIVISION NAME,CLINIC NAME,CATEGORY,APPT DT/TM,DFN)
"RTN","DGENRPD2",110,0)
 ;
"RTN","DGENRPD2",111,0)
 N DIVNAME,CLNAME
"RTN","DGENRPD2",112,0)
 S DIVNAME=$S(DIVISION:$P($$SITE^VASITE(APPT\1,DIVISION),U,2),1:" ")
"RTN","DGENRPD2",113,0)
 S CLNAME=$P($G(^SC(CLINIC,0)),"^")
"RTN","DGENRPD2",114,0)
 S:CLNAME="" CLNAME=" "
"RTN","DGENRPD2",115,0)
 ;
"RTN","DGENRPD2",116,0)
 I $$FINDCUR^DGENA(DFN)="" S ^TMP($J,"NOENREC",DIVNAME,CLNAME,CATEGORY,APPT,DFN)="" Q
"RTN","DGENRPD2",117,0)
 S ^TMP($J,"STEP2",DIVNAME,CLNAME,CATEGORY,APPT,DFN)=$$STATUS^DGENA(DFN)_U_$P($P(^TMP($J,"SDAMA301",CLINIC,DFN,APPT),U,10),";",2)
"RTN","DGENRPD2",118,0)
 Q
"RTN","DGENRPD2",119,0)
 ;
"RTN","DGENRPD2",120,0)
HEADER ;
"RTN","DGENRPD2",121,0)
 ;Description: Prints the report header.
"RTN","DGENRPD2",122,0)
 ;
"RTN","DGENRPD2",123,0)
 N LINE
"RTN","DGENRPD2",124,0)
 I $Y>1 W @IOF
"RTN","DGENRPD2",125,0)
 W !,"Appointments for Veterans with no Enrollment Application"
"RTN","DGENRPD2",126,0)
 W:DGENRP("BEGIN") ?70,"Date Range: "_$$FMTE^XLFDT(DGENRP("BEGIN"))_" to "_$$FMTE^XLFDT($G(DGENRP("END")))
"RTN","DGENRPD2",127,0)
 W ?120,"Page ",PAGE
"RTN","DGENRPD2",128,0)
 S PAGE=PAGE+1
"RTN","DGENRPD2",129,0)
 W !
"RTN","DGENRPD2",130,0)
 W ?70," Run Date: "_$$FMTE^XLFDT(DT)
"RTN","DGENRPD2",131,0)
 W !
"RTN","DGENRPD2",132,0)
 ;
"RTN","DGENRPD2",133,0)
 W !,"Name",?39,"PatientID",?57,"DOB",?70,"Appt Dt/Tm",?90,"EnrollStatus",?121,"Enroll Cat"
"RTN","DGENRPD2",134,0)
 S $P(LINE,"-",132)="-"
"RTN","DGENRPD2",135,0)
 W !,LINE,!
"RTN","DGENRPD2",136,0)
 Q
"RTN","DGENRPD2",137,0)
 ;
"RTN","DGENRPD2",138,0)
PAUSE ;
"RTN","DGENRPD2",139,0)
 ;Description: Screen pause.  Sets QUIT=1 if user decides to quit.
"RTN","DGENRPD2",140,0)
 ;
"RTN","DGENRPD2",141,0)
 N DIR,X,Y
"RTN","DGENRPD2",142,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","DGENRPD2",143,0)
 S DIR(0)="E"
"RTN","DGENRPD2",144,0)
 D ^DIR
"RTN","DGENRPD2",145,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","DGENRPD2",146,0)
 Q
"RTN","DGENRPD2",147,0)
 ;
"RTN","DGENRPD2",148,0)
PATIENTS(SUBSCRPT) ;
"RTN","DGENRPD2",149,0)
 ;Description: Prints list of patients
"RTN","DGENRPD2",150,0)
 ;
"RTN","DGENRPD2",151,0)
 N NODE,DIVISION,CLINIC,TIME,PATIENT,DGPAT,APPTYPE,ENRSTAT,CATEGORY
"RTN","DGENRPD2",152,0)
 ;
"RTN","DGENRPD2",153,0)
 ;
"RTN","DGENRPD2",154,0)
 S DIVISION=""
"RTN","DGENRPD2",155,0)
 F  S DIVISION=$O(^TMP($J,SUBSCRPT,DIVISION)) Q:DIVISION=""  D  Q:QUIT
"RTN","DGENRPD2",156,0)
 .D LINE("  ") Q:QUIT
"RTN","DGENRPD2",157,0)
 .D LINE($$LJ(" ",40)_"DIVISION: "_DIVISION) Q:QUIT
"RTN","DGENRPD2",158,0)
 .D LINE("  ") Q:QUIT
"RTN","DGENRPD2",159,0)
 .S CLINIC=""
"RTN","DGENRPD2",160,0)
 .F  S CLINIC=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC)) Q:CLINIC=""  D  Q:QUIT
"RTN","DGENRPD2",161,0)
 ..D LINE("  ") Q:QUIT
"RTN","DGENRPD2",162,0)
 ..D LINE("CLINIC: "_$$LJ(CLINIC,40)_$$LJ(" ",40)_"DIVISION: "_DIVISION)
"RTN","DGENRPD2",163,0)
 ..Q:QUIT
"RTN","DGENRPD2",164,0)
 ..S CATEGORY=""
"RTN","DGENRPD2",165,0)
 ..F  S CATEGORY=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY)) Q:CATEGORY=""  D  Q:QUIT
"RTN","DGENRPD2",166,0)
 ...D LINE(" ") Q:QUIT
"RTN","DGENRPD2",167,0)
 ...S TIME=0
"RTN","DGENRPD2",168,0)
 ...F  S TIME=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME)) Q:'TIME  D  Q:QUIT
"RTN","DGENRPD2",169,0)
 ....S DFN=0
"RTN","DGENRPD2",170,0)
 ....F  S DFN=$O(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME,DFN)) Q:'DFN  D  Q:QUIT
"RTN","DGENRPD2",171,0)
 .....S NODE=$G(^TMP($J,SUBSCRPT,DIVISION,CLINIC,CATEGORY,TIME,DFN))
"RTN","DGENRPD2",172,0)
 .....S ENRSTAT=$P(NODE,"^")
"RTN","DGENRPD2",173,0)
 .....S APPTYPE=$P(NODE,"^",2)
"RTN","DGENRPD2",174,0)
 .....Q:'$$GET^DGENPTA(DFN,.DGPAT)
"RTN","DGENRPD2",175,0)
 .....S LINE=$$LJ(DGPAT("NAME"),37)_" "_$$LJ(DGPAT("PID"),15)_" "
"RTN","DGENRPD2",176,0)
 .....S LINE=LINE_$$LJ($$DATE(DGPAT("DOB")),12)_"  "
"RTN","DGENRPD2",177,0)
 .....S LINE=LINE_$$LJ($$DATE(TIME),20)
"RTN","DGENRPD2",178,0)
 .....S LINE=LINE_"  "_$$LJ($S(ENRSTAT="":"NO ENROLLMENT RECORD",1:$$EXT^DGENU("STATUS",ENRSTAT)),28)
"RTN","DGENRPD2",179,0)
 .....S LINE=LINE_$$LJ(" ",2)_$$EXTCAT^DGENA4(CATEGORY)
"RTN","DGENRPD2",180,0)
 .....D LINE(LINE)
"RTN","DGENRPD2",181,0)
 .....Q:QUIT
"RTN","DGENRPD2",182,0)
 Q
"RTN","DGENRPD2",183,0)
 ;
"RTN","DGENRPD2",184,0)
DATE(DATE) ;
"RTN","DGENRPD2",185,0)
 Q $$FMTE^XLFDT(DATE,"1")
"RTN","DGENRPD2",186,0)
 ;
"RTN","DGENRPD2",187,0)
LJ(STRING,LENGTH) ;
"RTN","DGENRPD2",188,0)
 Q $$LJ^XLFSTR($E(STRING,1,LENGTH),LENGTH)
"RTN","DGENRPT2")
0^6^B40693413
"RTN","DGENRPT2",1,0)
DGENRPT2 ;ALB/DW,LBD - EGT Preliminary Detailed Impact Report ; 02/17/2004
"RTN","DGENRPT2",2,0)
 ;;5.3;Registration;**232,306,417,456,491,513,568**;Aug 13,1993
"RTN","DGENRPT2",3,0)
 ;
"RTN","DGENRPT2",4,0)
 ;
"RTN","DGENRPT2",5,0)
ENPT ;Preliminary Detailed Report selected.
"RTN","DGENRPT2",6,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2")
"RTN","DGENRPT2",7,0)
 I $$FINDCUR^DGENEGT()=0 W !,"No EGT setting on file." Q
"RTN","DGENRPT2",8,0)
 N INFAP S INFAP=""
"RTN","DGENRPT2",9,0)
 D INFAP I INFAP="^"!($D(DTOUT)) Q
"RTN","DGENRPT2",10,0)
 N EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,L,BY,DIC,FLDS,DHD,DIOEND,X,DFN,PSSN,FCTY,TOTAL,DIOBEG,VASD,VAERR,ENRDT
"RTN","DGENRPT2",11,0)
 S (EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,FCTY)="",TOTAL=0
"RTN","DGENRPT2",12,0)
 W !!,"*** This report requires a 132 column printer. ***",!!
"RTN","DGENRPT2",13,0)
 S DIC="^DGEN(27.11,"
"RTN","DGENRPT2",14,0)
 S BY(0)="^TMP($J,""BY2""",L(0)=3,L=0
"RTN","DGENRPT2",15,0)
 S DIOBEG="D PRESORT^DGENRPT2"
"RTN","DGENRPT2",16,0)
 S FLDS="D PT^DGENRPT2 W X;C0;L20,W PSSN;C22;L10,D EP^DGENRPT2 W X;C33;L2,D ENRED^DGENRPT2 W X;C37;L10,D ENRST^DGENRPT2 W X;C49;L12"
"RTN","DGENRPT2",17,0)
 I INFAP=1 D
"RTN","DGENRPT2",18,0)
 . S FLDS(2)="D WRD^DGENRPT2 W X;C63;L15;""WARD"",D FAP1^DGENRPT2 W X;C80;L31,D PCPVD^DGENRPT2 W X;C110;L10,D PFCLTY^DGENRPT2 W X;C121;L11"
"RTN","DGENRPT2",19,0)
 . S DHD="W ?0 D DETHD1^DGENRPT2"
"RTN","DGENRPT2",20,0)
 I INFAP=0 D
"RTN","DGENRPT2",21,0)
 . S FLDS(2)="D WRD^DGENRPT2 W X;C63;L15;""WARD"",D FAP0^DGENRPT2 W X;C80;L31,D PCPVD^DGENRPT2 W X;C88;L10,D PFCLTY^DGENRPT2 W X;C100;L12"
"RTN","DGENRPT2",22,0)
 . S DHD="W ?0 D DETHD0^DGENRPT2"
"RTN","DGENRPT2",23,0)
 S DIOEND="D END^DGENRPT2"
"RTN","DGENRPT2",24,0)
 D EN1^DIP
"RTN","DGENRPT2",25,0)
 D EXIT
"RTN","DGENRPT2",26,0)
 Q
"RTN","DGENRPT2",27,0)
 ;
"RTN","DGENRPT2",28,0)
INFAP ;Ask the user if Future Appointments is wanted on the report.
"RTN","DGENRPT2",29,0)
 N DIR,X,Y
"RTN","DGENRPT2",30,0)
 S DIR(0)="Y^1:3"
"RTN","DGENRPT2",31,0)
 S DIR("A")="Do you want to include Future Appointments"
"RTN","DGENRPT2",32,0)
 D ^DIR S INFAP=Y
"RTN","DGENRPT2",33,0)
 I ($D(DTOUT)) W *7
"RTN","DGENRPT2",34,0)
 Q
"RTN","DGENRPT2",35,0)
 ;
"RTN","DGENRPT2",36,0)
PRESORT ;First get the current EGT Setting from file #27.16.
"RTN","DGENRPT2",37,0)
 N GETEGTS,REC,TP S (GETEGTS,REC,TP)=""
"RTN","DGENRPT2",38,0)
 S REC=$$FINDCUR^DGENEGT()
"RTN","DGENRPT2",39,0)
 I REC=0 Q
"RTN","DGENRPT2",40,0)
 S TP=$$GET^DGENEGT(REC,.GETEGTS)
"RTN","DGENRPT2",41,0)
 ;Get EGT Priority.
"RTN","DGENRPT2",42,0)
 S EGT=GETEGTS("PRIORITY")
"RTN","DGENRPT2",43,0)
 S EGTSUB=GETEGTS("SUBGRP")
"RTN","DGENRPT2",44,0)
 ;Get EGT Effective Date.
"RTN","DGENRPT2",45,0)
 S EGTEDT=GETEGTS("EFFDATE") I EGTEDT S EGTEDT=$$FMTE^XLFDT(EGTEDT)
"RTN","DGENRPT2",46,0)
 ;Get last EGT setting Date/Time.
"RTN","DGENRPT2",47,0)
 S EGTLDT=GETEGTS("ENTDATE") I EGTLDT S EGTLDT=$$FMTE^XLFDT(EGTLDT)
"RTN","DGENRPT2",48,0)
 ;Get EGT Type.
"RTN","DGENRPT2",49,0)
 S EGTTP=GETEGTS("TYPE")
"RTN","DGENRPT2",50,0)
 S EGTTP=$$EXTERNAL^DILFD(27.16,.04,"F",EGTTP) S:EGTTP="" EGTTP="UNSPECIFIED"
"RTN","DGENRPT2",51,0)
 ;Sort for patient's current record and get the potentially affected.
"RTN","DGENRPT2",52,0)
 N IND,PRT,DFN,NM,PSSN,PRTSUB,ABV
"RTN","DGENRPT2",53,0)
 S (IND,PRT,DFN,NM,PSSN,PRTSUB,ABV)=""
"RTN","DGENRPT2",54,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2")
"RTN","DGENRPT2",55,0)
 F  S DFN=$O(^DGEN(27.11,"C",DFN)) Q:DFN=""  D
"RTN","DGENRPT2",56,0)
 . S IND=$$FINDCUR^DGENA(DFN)
"RTN","DGENRPT2",57,0)
 . I IND D EGTP I ABV=0 D
"RTN","DGENRPT2",58,0)
 .. K VADM(1),VADM(2) D DEM^VADPT S NM=VADM(1) D BYSRT
"RTN","DGENRPT2",59,0)
 .. S PSSN=$P($G(VADM(2)),U),^TMP($J,"CNT2",PRT,PSSN)=""
"RTN","DGENRPT2",60,0)
 I EGTSUB>4 S EGTSUB="ER" Q
"RTN","DGENRPT2",61,0)
 S EGTSUB=$$EXTERNAL^DILFD(27.16,.03,"F",EGTSUB)
"RTN","DGENRPT2",62,0)
 D GETAPPT^DGENRPT5("BY2")
"RTN","DGENRPT2",63,0)
 Q
"RTN","DGENRPT2",64,0)
 ;
"RTN","DGENRPT2",65,0)
EGTP ;Get patients EGT Priority.
"RTN","DGENRPT2",66,0)
 S (PRT,PRTSUB,ABV,ENRDT)=""
"RTN","DGENRPT2",67,0)
 S PRT=$P($G(^DGEN(27.11,IND,0)),U,7)
"RTN","DGENRPT2",68,0)
 S:((PRT=7)!(PRT=8)) PRTSUB=$P($G(^DGEN(27.11,IND,0)),U,12)
"RTN","DGENRPT2",69,0)
 S ENRDT=$P($G(^DGEN(27.11,IND,0)),U,10)
"RTN","DGENRPT2",70,0)
 S:'ENRDT ENRDT=$P($G(^DGEN(27.11,IND,0)),U)
"RTN","DGENRPT2",71,0)
 S ABV=$$ABOVE^DGENEGT1(DFN,PRT,PRTSUB)
"RTN","DGENRPT2",72,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT2",73,0)
 . S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT2",74,0)
 . S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT2",75,0)
 S PRT=PRT_PRTSUB
"RTN","DGENRPT2",76,0)
 Q
"RTN","DGENRPT2",77,0)
 ;
"RTN","DGENRPT2",78,0)
BYSRT ;Sort patients by last name for "BY(0)".
"RTN","DGENRPT2",79,0)
 S ^TMP($J,"BY2",NM,DFN,IND)=""
"RTN","DGENRPT2",80,0)
 Q
"RTN","DGENRPT2",81,0)
 ;
"RTN","DGENRPT2",82,0)
PT ;Get the patient NAME and SSN
"RTN","DGENRPT2",83,0)
 S (X,DFN,PSSN)="" K VADM(1),VADM(2)
"RTN","DGENRPT2",84,0)
 S DFN=$P($G(^DGEN(27.11,D0,0)),U,2)
"RTN","DGENRPT2",85,0)
 I DFN D DEM^VADPT S X=$E(VADM(1),1,20),PSSN=$P(VADM(2),U)
"RTN","DGENRPT2",86,0)
 Q
"RTN","DGENRPT2",87,0)
 ;
"RTN","DGENRPT2",88,0)
EP ;Get the patient EGT Priority.
"RTN","DGENRPT2",89,0)
 S X=""
"RTN","DGENRPT2",90,0)
 N PRT,PRTSUB S (PRT,PRTSUB)=""
"RTN","DGENRPT2",91,0)
 S PRT=$P($G(^DGEN(27.11,D0,0)),U,7)
"RTN","DGENRPT2",92,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT2",93,0)
 .S PRTSUB=$P($G(^DGEN(27.11,D0,0)),U,12)
"RTN","DGENRPT2",94,0)
 .S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT2",95,0)
 .S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT2",96,0)
 .S PRT=PRT_PRTSUB
"RTN","DGENRPT2",97,0)
 S X=PRT
"RTN","DGENRPT2",98,0)
 Q
"RTN","DGENRPT2",99,0)
 ;
"RTN","DGENRPT2",100,0)
ENRED ;Get the patient ENROLLMENT END DATE.
"RTN","DGENRPT2",101,0)
 S X=""
"RTN","DGENRPT2",102,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,11)
"RTN","DGENRPT2",103,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT2",104,0)
 S X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","DGENRPT2",105,0)
 Q
"RTN","DGENRPT2",106,0)
 ;
"RTN","DGENRPT2",107,0)
ENRST ;Get the patient ENROLLMENT STATUS.
"RTN","DGENRPT2",108,0)
 S X=""
"RTN","DGENRPT2",109,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,4)
"RTN","DGENRPT2",110,0)
 S X=$P($G(^DGEN(27.15,X,0)),U,1),X=$E(X,1,12)
"RTN","DGENRPT2",111,0)
 Q
"RTN","DGENRPT2",112,0)
 ;
"RTN","DGENRPT2",113,0)
WRD ;Get the patient WARD.
"RTN","DGENRPT2",114,0)
 S X="" K VAIP(5)
"RTN","DGENRPT2",115,0)
 D IN5^VADPT S X=$P($G(VAIP(5)),U,2),X=$E(X,1,15)
"RTN","DGENRPT2",116,0)
 I X="" S X="N/A"
"RTN","DGENRPT2",117,0)
 Q
"RTN","DGENRPT2",118,0)
 ;
"RTN","DGENRPT2",119,0)
FAP1 ;Get the patient FUTURE APPOINTMENTS.
"RTN","DGENRPT2",120,0)
 N J,POP,ADT S (X,ADT)="",POP=0,J=0
"RTN","DGENRPT2",121,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT2",122,0)
 I $D(^TMP($J,"SDAMA",101)) S X="Appt. DB Unavail." Q
"RTN","DGENRPT2",123,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT2",124,0)
 F  S J=$O(^UTILITY("VASD",$J,J)) Q:J=""!POP  D
"RTN","DGENRPT2",125,0)
 . S X=$P($G(^UTILITY("VASD",$J,J,"E")),U,2),X=$E(X,1,20)
"RTN","DGENRPT2",126,0)
 . S ADT=$P($G(^UTILITY("VASD",$J,J,"I")),U),ADT=$P(ADT,".",1)
"RTN","DGENRPT2",127,0)
 . S ADT=$E(ADT,4,5)_"/"_$E(ADT,6,7)_"/"_(1700+$E(ADT,1,3))
"RTN","DGENRPT2",128,0)
 . S X=ADT_" "_X
"RTN","DGENRPT2",129,0)
 . I J=1 W X S X=""
"RTN","DGENRPT2",130,0)
 . I J>1&(J<6) W !,?79,X S X=""
"RTN","DGENRPT2",131,0)
 . I J=6 S X="" W !,?79,"More Appts" S POP=1 Q
"RTN","DGENRPT2",132,0)
 I $D(^UTILITY("VASD",$J))=0 S X="NONE"
"RTN","DGENRPT2",133,0)
 Q
"RTN","DGENRPT2",134,0)
 ;
"RTN","DGENRPT2",135,0)
FAP0 ;See if the patient has future appointment.
"RTN","DGENRPT2",136,0)
 S X="NO"
"RTN","DGENRPT2",137,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT2",138,0)
 I $D(^TMP($J,"SDAMA",101)) S X="Appt. DB Unavail." Q
"RTN","DGENRPT2",139,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT2",140,0)
 I $G(^UTILITY("VASD",$J,1,"I"))'="" S X="YES"
"RTN","DGENRPT2",141,0)
 Q
"RTN","DGENRPT2",142,0)
 ;
"RTN","DGENRPT2",143,0)
PCPVD ;Get the patient PC PROVIDER.
"RTN","DGENRPT2",144,0)
 ;;Site must use PCMM module.
"RTN","DGENRPT2",145,0)
 S X=""
"RTN","DGENRPT2",146,0)
 S X=$$PCPRACT^DGSDUTL(DFN)
"RTN","DGENRPT2",147,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT2",148,0)
 S X=$P(X,U,2),X=$E(X,1,10)
"RTN","DGENRPT2",149,0)
 Q
"RTN","DGENRPT2",150,0)
 ;
"RTN","DGENRPT2",151,0)
PFCLTY ;Get the patient PREFFERED FACILITY.
"RTN","DGENRPT2",152,0)
 S (X,FCTY)=""
"RTN","DGENRPT2",153,0)
 S X=$$PREF^DGENPTA(DFN,.FCTY),X=$E(FCTY,1,10)
"RTN","DGENRPT2",154,0)
 I X="" S X="N/A"
"RTN","DGENRPT2",155,0)
 Q
"RTN","DGENRPT2",156,0)
 ;
"RTN","DGENRPT2",157,0)
DETHD ;General header for the Preliminary Detailed Report.
"RTN","DGENRPT2",158,0)
 ;Get the date/time the report is run.
"RTN","DGENRPT2",159,0)
 N RDT,Y S (RDT,Y)=""
"RTN","DGENRPT2",160,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","DGENRPT2",161,0)
 S RDT=$P(Y,"@",1)_" @ "_$P($P(Y,"@",2),":",1,2)
"RTN","DGENRPT2",162,0)
 ;Write the header.
"RTN","DGENRPT2",163,0)
 W !,?((IOM-38)\2),"EGT Preliminary Detailed Impact Report"
"RTN","DGENRPT2",164,0)
 W !,?((IOM-22-$L(RDT))\2),"Date/Time Report Run: ",RDT
"RTN","DGENRPT2",165,0)
 W !,?((IOM-45-$L(EGT_EGTSUB_EGTTP_EGTEDT))\2),"EGT Setting: ",EGT_EGTSUB," EGT Type: ",EGTTP," EGT Effective Date: ",EGTEDT
"RTN","DGENRPT2",166,0)
 W !,?((IOM-28-$L(EGTLDT))\2),"Date/Time Last EGT Setting: ",EGTLDT
"RTN","DGENRPT2",167,0)
 W !!,"IMPORTANT NOTE:",!,"Preliminary report is based on a comparison of the EGT setting to the veterans current enrollment priority as shown in VISTA."
"RTN","DGENRPT2",168,0)
 Q
"RTN","DGENRPT2",169,0)
 ;
"RTN","DGENRPT2",170,0)
DETHD1 ;Header for the Preliminary Detailed Report, with Future Appointments.
"RTN","DGENRPT2",171,0)
 D DETHD
"RTN","DGENRPT2",172,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?109,"PC",?120,"PREF"
"RTN","DGENRPT2",173,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPOINTMENTS",?109,"PROVIDER",?120,"FACILITY",!!
"RTN","DGENRPT2",174,0)
 Q
"RTN","DGENRPT2",175,0)
 ;
"RTN","DGENRPT2",176,0)
DETHD0 ;Header for the Preliminary Detailed Report, no Future Appointments.
"RTN","DGENRPT2",177,0)
 D DETHD
"RTN","DGENRPT2",178,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?87,"PC",?99,"PREF"
"RTN","DGENRPT2",179,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPTS",?87,"PROVIDER",?99,"FACILITY",!!
"RTN","DGENRPT2",180,0)
 Q
"RTN","DGENRPT2",181,0)
 ;
"RTN","DGENRPT2",182,0)
END ;At the end of the display.
"RTN","DGENRPT2",183,0)
 N PSSN,J S (PSSN,J)=""
"RTN","DGENRPT2",184,0)
 F  S J=$O(^TMP($J,"CNT2",J)) Q:J=""  D
"RTN","DGENRPT2",185,0)
 . F  S PSSN=$O(^TMP($J,"CNT2",J,PSSN)) Q:PSSN=""  D
"RTN","DGENRPT2",186,0)
   ..S TOTAL=TOTAL+1
"RTN","DGENRPT2",187,0)
 W !,"TOTAL PATIENTS (UNIQUE SSNS) FOR THIS FACILITY:     ",TOTAL
"RTN","DGENRPT2",188,0)
 Q
"RTN","DGENRPT2",189,0)
 ;
"RTN","DGENRPT2",190,0)
EXIT ;Clean up upon exit of the routine.
"RTN","DGENRPT2",191,0)
 D KVA^VADPT
"RTN","DGENRPT2",192,0)
 K ^TMP($J,"BY2"),^TMP($J,"CNT2")
"RTN","DGENRPT2",193,0)
 Q
"RTN","DGENRPT4")
0^7^B53256477
"RTN","DGENRPT4",1,0)
DGENRPT4 ;ALB/DW,LBD - EGT Actual Detailed Impact Report ; 02/17/2004
"RTN","DGENRPT4",2,0)
 ;;5.3;Registration;**232,306,417,456,491,513,568**;Aug 13,1993
"RTN","DGENRPT4",3,0)
 ;
"RTN","DGENRPT4",4,0)
 ;
"RTN","DGENRPT4",5,0)
ENPT ;Actual Detailed Report selected.
"RTN","DGENRPT4",6,0)
 K ^TMP($J,"BY4"),^TMP($J,"CNT4")
"RTN","DGENRPT4",7,0)
 N INFAP,BDT,EDT S (INFAP,BDT,EDT)=""
"RTN","DGENRPT4",8,0)
 D RPDT I BDT="^"!(EDT="^")!($D(DTOUT)) Q
"RTN","DGENRPT4",9,0)
 D INFAP I INFAP="^"!($D(DTOUT)) Q
"RTN","DGENRPT4",10,0)
 N EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,L,BY,DIC,FLDS,DHD,DIOEND,X,DFN,PSSN,FCTY,DIOBEG,VASD,VAERR,RLEGT,ENRDT
"RTN","DGENRPT4",11,0)
 S (EGT,EGTSUB,EGTEDT,EGTLDT,EGTTP,FCTY,RLEGT)=""
"RTN","DGENRPT4",12,0)
 W !!,"*** This report requires a 132 column printer. ***",!!
"RTN","DGENRPT4",13,0)
 S DIC="^DGEN(27.11,"
"RTN","DGENRPT4",14,0)
 S DIOBEG="D PRESORT^DGENRPT4"
"RTN","DGENRPT4",15,0)
 S BY(0)="^TMP($J,""BY4"",",L(0)=3,L=0
"RTN","DGENRPT4",16,0)
 S FLDS="D PT^DGENRPT4 W X;C0;L20,W PSSN;C22;L10,D EP^DGENRPT4 W X;C33;L2,D ENRED^DGENRPT4 W X;C37;L10,D ENRST^DGENRPT4 W X;C49;L12"
"RTN","DGENRPT4",17,0)
 I INFAP=1 D
"RTN","DGENRPT4",18,0)
 . S FLDS(2)="D WRD^DGENRPT4 W X;C63;L15;""WARD"",D FAP1^DGENRPT4 W X;C80;L31,D PCPVD^DGENRPT4 W X;C110;L10,D PFCLTY^DGENRPT4 W X;C121;L11"
"RTN","DGENRPT4",19,0)
 . S DHD="W ?0 D DETHD1^DGENRPT4"
"RTN","DGENRPT4",20,0)
 I INFAP=0 D
"RTN","DGENRPT4",21,0)
 . S FLDS(2)="D WRD^DGENRPT4 W X;C63;L15;""WARD"",D FAP0^DGENRPT4 W X;C80;L31,D PCPVD^DGENRPT4 W X;C88;L10,D PFCLTY^DGENRPT4 W X;C100;L12"
"RTN","DGENRPT4",22,0)
 . S DHD="W ?0 D DETHD0^DGENRPT4"
"RTN","DGENRPT4",23,0)
 S DIOEND="D END^DGENRPT4"
"RTN","DGENRPT4",24,0)
 D EN1^DIP
"RTN","DGENRPT4",25,0)
 D EXIT
"RTN","DGENRPT4",26,0)
 Q
"RTN","DGENRPT4",27,0)
 ;
"RTN","DGENRPT4",28,0)
INFAP ;Ask the user if Future Appointments is wanted on the report.
"RTN","DGENRPT4",29,0)
 N DIR,X,Y
"RTN","DGENRPT4",30,0)
 S DIR(0)="Y^1:3"
"RTN","DGENRPT4",31,0)
 S DIR("A")="Do you want to include Future Appointments"
"RTN","DGENRPT4",32,0)
 D ^DIR S INFAP=Y
"RTN","DGENRPT4",33,0)
 I ($D(DTOUT)) W *7
"RTN","DGENRPT4",34,0)
 Q
"RTN","DGENRPT4",35,0)
 ;
"RTN","DGENRPT4",36,0)
RPDT ;Ask the user the Report Begin Date and Report End Date.
"RTN","DGENRPT4",37,0)
 N DIR,X,Y
"RTN","DGENRPT4",38,0)
 S DIR(0)="DA^::E"
"RTN","DGENRPT4",39,0)
 S DIR("A")="Report Begin Date: "
"RTN","DGENRPT4",40,0)
 S DIR("?")="Please enter the Enrollment End Date as the beginning date that will be reported on."
"RTN","DGENRPT4",41,0)
 D ^DIR S BDT=Y
"RTN","DGENRPT4",42,0)
 I BDT="^" Q
"RTN","DGENRPT4",43,0)
 I ($D(DTOUT)) W *7 Q
"RTN","DGENRPT4",44,0)
 ;
"RTN","DGENRPT4",45,0)
RPDT2 S DIR(0)="DA^::E"
"RTN","DGENRPT4",46,0)
 S DIR("A")="Report End Date: "
"RTN","DGENRPT4",47,0)
 S DIR("?")="Please enter the Enrollment End Date as the end date that will be reported on. Report End Date cannot be earlier than Report Begin Date."
"RTN","DGENRPT4",48,0)
 D ^DIR S EDT=Y
"RTN","DGENRPT4",49,0)
 I EDT="^" Q
"RTN","DGENRPT4",50,0)
 I ($D(DTOUT)) W *7 Q
"RTN","DGENRPT4",51,0)
 I EDT<BDT G RPDT2
"RTN","DGENRPT4",52,0)
 Q
"RTN","DGENRPT4",53,0)
 ;
"RTN","DGENRPT4",54,0)
PRESORT ;First get the current EGT Setting from file #27.16.
"RTN","DGENRPT4",55,0)
 N GETEGTS,REC,TP S (GETEGTS,REC,TP)=""
"RTN","DGENRPT4",56,0)
 S REC=$$FINDCUR^DGENEGT()
"RTN","DGENRPT4",57,0)
 ;If no EGT setting on file, print patient of all enrollment priorities.
"RTN","DGENRPT4",58,0)
 I REC=0 W !,"No EGT setting on file.",! S EGT=0 G PRESRT1
"RTN","DGENRPT4",59,0)
 S TP=$$GET^DGENEGT(REC,.GETEGTS)
"RTN","DGENRPT4",60,0)
 ;Get EGT Priority.
"RTN","DGENRPT4",61,0)
 S EGT=GETEGTS("PRIORITY"),RLEGT=EGT
"RTN","DGENRPT4",62,0)
 I EGT="" W !,"No EGT setting on file.",! S EGT=0
"RTN","DGENRPT4",63,0)
 S EGTSUB=GETEGTS("SUBGRP")
"RTN","DGENRPT4",64,0)
 ;Get EGT Effective Date.
"RTN","DGENRPT4",65,0)
 S EGTEDT=GETEGTS("EFFDATE") I EGTEDT S EGTEDT=$$FMTE^XLFDT(EGTEDT)
"RTN","DGENRPT4",66,0)
 ;Get last EGT setting Date/Time.
"RTN","DGENRPT4",67,0)
 S EGTLDT=GETEGTS("ENTDATE") I EGTLDT S EGTLDT=$$FMTE^XLFDT(EGTLDT)
"RTN","DGENRPT4",68,0)
 ;Get EGT Type.
"RTN","DGENRPT4",69,0)
 S EGTTP=GETEGTS("TYPE")
"RTN","DGENRPT4",70,0)
 S EGTTP=$$EXTERNAL^DILFD(27.16,.04,"F",EGTTP) S:EGTTP="" EGTTP="UNSPECIFIED"
"RTN","DGENRPT4",71,0)
 ;
"RTN","DGENRPT4",72,0)
PRESRT1 ;Sort for patient's current record and get the potentially affected.
"RTN","DGENRPT4",73,0)
 N IND,PRT,DFN,NM,PSSN,PEDT,PCTRY,PRTSUB,ABV
"RTN","DGENRPT4",74,0)
 S (IND,PRT,DFN,NM,PSSN,PEDT,PCTRY,PRTSUB,ABV)=""
"RTN","DGENRPT4",75,0)
 K ^TMP($J,"BY4"),^TMP($J,"CNT4")
"RTN","DGENRPT4",76,0)
 F  S DFN=$O(^DGEN(27.11,"C",DFN)) Q:DFN=""  D
"RTN","DGENRPT4",77,0)
 . S IND=$$FINDCUR^DGENA(DFN)
"RTN","DGENRPT4",78,0)
 . I IND D
"RTN","DGENRPT4",79,0)
 .. D EGTP
"RTN","DGENRPT4",80,0)
 .. S PEDT=$P($G(^DGEN(27.11,IND,0)),U,11)
"RTN","DGENRPT4",81,0)
 .. S PCTRY=$$CATEGORY^DGENA4(DFN)
"RTN","DGENRPT4",82,0)
 .. I ABV=0&(PCTRY="N")&(PEDT'<BDT)&(PEDT'>EDT) D
"RTN","DGENRPT4",83,0)
 ... K VADM(1),VADM(2) D DEM^VADPT S NM=VADM(1) D BYSRT
"RTN","DGENRPT4",84,0)
 ... S PSSN=$P($G(VADM(2)),U),^TMP($J,"CNT4",PRT,PSSN)=""
"RTN","DGENRPT4",85,0)
 I EGTSUB>4 S EGTSUB="ER" Q
"RTN","DGENRPT4",86,0)
 S EGTSUB=$$EXTERNAL^DILFD(27.16,.03,"F",EGTSUB)
"RTN","DGENRPT4",87,0)
 D GETAPPT^DGENRPT5("BY4")
"RTN","DGENRPT4",88,0)
 Q
"RTN","DGENRPT4",89,0)
 ;
"RTN","DGENRPT4",90,0)
EGTP ;Get patients EGT Priority.
"RTN","DGENRPT4",91,0)
 S (PRT,PRTSUB,ABV,ENRDT)=""
"RTN","DGENRPT4",92,0)
 S PRT=$P($G(^DGEN(27.11,IND,0)),U,7)
"RTN","DGENRPT4",93,0)
 S:((PRT=7)!(PRT=8)) PRTSUB=$P($G(^DGEN(27.11,IND,0)),U,12)
"RTN","DGENRPT4",94,0)
 S ENRDT=$P($G(^DGEN(27.11,IND,0)),U,10)
"RTN","DGENRPT4",95,0)
 S:'ENRDT ENRDT=$P($G(^DGEN(27.11,IND,0)),U)
"RTN","DGENRPT4",96,0)
 S ABV=$$ABOVE^DGENEGT1(DFN,PRT,PRTSUB)
"RTN","DGENRPT4",97,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT4",98,0)
 . S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT4",99,0)
 . S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT4",100,0)
 S PRT=PRT_PRTSUB
"RTN","DGENRPT4",101,0)
 Q
"RTN","DGENRPT4",102,0)
 ;
"RTN","DGENRPT4",103,0)
BYSRT ;Sort patients by last name for "BY(0)".
"RTN","DGENRPT4",104,0)
 S ^TMP($J,"BY4",NM,DFN,IND)=""
"RTN","DGENRPT4",105,0)
 Q
"RTN","DGENRPT4",106,0)
 ;
"RTN","DGENRPT4",107,0)
PT ;Get the patient NAME and SSN
"RTN","DGENRPT4",108,0)
 S (X,DFN,PSSN)="" K VADM(1),VADM(2)
"RTN","DGENRPT4",109,0)
 S DFN=$P($G(^DGEN(27.11,D0,0)),U,2)
"RTN","DGENRPT4",110,0)
 I DFN D DEM^VADPT S X=$E(VADM(1),1,20),PSSN=$P(VADM(2),U)
"RTN","DGENRPT4",111,0)
 Q
"RTN","DGENRPT4",112,0)
 ;
"RTN","DGENRPT4",113,0)
EP ;Get the patient EGT Priority.
"RTN","DGENRPT4",114,0)
 S X=""
"RTN","DGENRPT4",115,0)
 N PRT,PRTSUB S (PRT,PRTSUB)=""
"RTN","DGENRPT4",116,0)
 S PRT=$P($G(^DGEN(27.11,D0,0)),U,7)
"RTN","DGENRPT4",117,0)
 I PRT=7!(PRT=8) D
"RTN","DGENRPT4",118,0)
 .S PRTSUB=$P($G(^DGEN(27.11,D0,0)),U,12)
"RTN","DGENRPT4",119,0)
 .S PRTSUB=$$EXTERNAL^DILFD(27.11,.12,"F",PRTSUB)
"RTN","DGENRPT4",120,0)
 .S:PRTSUB="" PRTSUB="ER"
"RTN","DGENRPT4",121,0)
 .S PRT=PRT_PRTSUB
"RTN","DGENRPT4",122,0)
 S X=PRT
"RTN","DGENRPT4",123,0)
 Q
"RTN","DGENRPT4",124,0)
 ;
"RTN","DGENRPT4",125,0)
ENRED ;Get the patient ENROLLMENT END DATE.
"RTN","DGENRPT4",126,0)
 S X=""
"RTN","DGENRPT4",127,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,11)
"RTN","DGENRPT4",128,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT4",129,0)
 S X=$E(X,4,5)_"/"_$E(X,6,7)_"/"_(1700+$E(X,1,3))
"RTN","DGENRPT4",130,0)
 Q
"RTN","DGENRPT4",131,0)
 ;
"RTN","DGENRPT4",132,0)
ENRST ;Get the patient ENROLLMENT STATUS.
"RTN","DGENRPT4",133,0)
 S X=""
"RTN","DGENRPT4",134,0)
 S X=$P($G(^DGEN(27.11,D0,0)),U,4)
"RTN","DGENRPT4",135,0)
 S X=$P($G(^DGEN(27.15,X,0)),U,1),X=$E(X,1,12)
"RTN","DGENRPT4",136,0)
 Q
"RTN","DGENRPT4",137,0)
 ;
"RTN","DGENRPT4",138,0)
WRD ;Get the patient WARD.
"RTN","DGENRPT4",139,0)
 S X="" K VAIP(5)
"RTN","DGENRPT4",140,0)
 D IN5^VADPT S X=$P($G(VAIP(5)),U,2),X=$E(X,1,15)
"RTN","DGENRPT4",141,0)
 I X="" S X="N/A"
"RTN","DGENRPT4",142,0)
 Q
"RTN","DGENRPT4",143,0)
 ;
"RTN","DGENRPT4",144,0)
FAP1 ;Get the patient FUTURE APPOINTMENTS.
"RTN","DGENRPT4",145,0)
 N J,POP,ADT S (X,J,ADT)="",POP=0
"RTN","DGENRPT4",146,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT4",147,0)
 I $D(^TMP($J,"SDAMA",101)) S X="Appt. DB Unavail." Q
"RTN","DGENRPT4",148,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT4",149,0)
 F  S J=$O(^UTILITY("VASD",$J,J)) Q:J=""!POP  D
"RTN","DGENRPT4",150,0)
 . S X=$P($G(^UTILITY("VASD",$J,J,"E")),U,2),X=$E(X,1,20)
"RTN","DGENRPT4",151,0)
 . S ADT=$P($G(^UTILITY("VASD",$J,J,"I")),U),ADT=$P(ADT,".",1)
"RTN","DGENRPT4",152,0)
 . S ADT=$E(ADT,4,5)_"/"_$E(ADT,6,7)_"/"_(1700+$E(ADT,1,3))
"RTN","DGENRPT4",153,0)
 . S X=ADT_" "_X
"RTN","DGENRPT4",154,0)
 . I J=1 W X S X=""
"RTN","DGENRPT4",155,0)
 . I J>1&(J<6) W !,?79,X S X=""
"RTN","DGENRPT4",156,0)
 . I J=6 S X="" W !,?79,"More Appts" S POP=1 Q
"RTN","DGENRPT4",157,0)
 I $D(^UTILITY("VASD",$J))=0 S X="NONE"
"RTN","DGENRPT4",158,0)
 Q
"RTN","DGENRPT4",159,0)
 ;
"RTN","DGENRPT4",160,0)
FAP0 ;See if the patient has future appointment.
"RTN","DGENRPT4",161,0)
 S X="NO"
"RTN","DGENRPT4",162,0)
 K ^UTILITY("VASD",$J)
"RTN","DGENRPT4",163,0)
 I $D(^TMP($J,"SDAMA",101)) S X="Appt. DB Unavail." Q
"RTN","DGENRPT4",164,0)
 D BLDUTL^DGENRPT5(DFN)
"RTN","DGENRPT4",165,0)
 I $G(^UTILITY("VASD",$J,1,"I"))'="" S X="YES"
"RTN","DGENRPT4",166,0)
 Q
"RTN","DGENRPT4",167,0)
 ;
"RTN","DGENRPT4",168,0)
PCPVD ;Get the patient PC PROVIDER.
"RTN","DGENRPT4",169,0)
 ;;Site must use PCMM module.
"RTN","DGENRPT4",170,0)
 S X=""
"RTN","DGENRPT4",171,0)
 S X=$$PCPRACT^DGSDUTL(DFN)
"RTN","DGENRPT4",172,0)
 I X="" S X="N/A" Q
"RTN","DGENRPT4",173,0)
 S X=$P(X,U,2),X=$E(X,1,10)
"RTN","DGENRPT4",174,0)
 Q
"RTN","DGENRPT4",175,0)
 ;
"RTN","DGENRPT4",176,0)
PFCLTY ;Get the patient PREFFERED FACILITY.
"RTN","DGENRPT4",177,0)
 S (X,FCTY)=""
"RTN","DGENRPT4",178,0)
 S X=$$PREF^DGENPTA(DFN,.FCTY),X=$E(FCTY,1,11)
"RTN","DGENRPT4",179,0)
 I X="" S X="N/A"
"RTN","DGENRPT4",180,0)
 Q
"RTN","DGENRPT4",181,0)
 ;
"RTN","DGENRPT4",182,0)
DETHD ;General header for the Preliminary Detailed Report.
"RTN","DGENRPT4",183,0)
 ;Get the date/time the report is run.
"RTN","DGENRPT4",184,0)
 N RDT,Y,DT1,DT2 S (RDT,Y,DT1,DT2)=""
"RTN","DGENRPT4",185,0)
 D NOW^%DTC S Y=% X ^DD("DD")
"RTN","DGENRPT4",186,0)
 S RDT=$P(Y,"@",1)_" @ "_$P($P(Y,"@",2),":",1,2)
"RTN","DGENRPT4",187,0)
 S DT1=$$FMTE^XLFDT(BDT),DT2=$$FMTE^XLFDT(EDT)
"RTN","DGENRPT4",188,0)
 ;Write the header.
"RTN","DGENRPT4",189,0)
 W !,?((IOM-33)\2),"EGT Actual Detailed Impact Report"
"RTN","DGENRPT4",190,0)
 W !,?((IOM-38-$L(DT1_DT2))\2),"Date Range of Enrollment End Date: ",DT1," - ",DT2
"RTN","DGENRPT4",191,0)
 W !,?((IOM-22-$L(RDT))\2),"Date/Time Report Run: ",RDT
"RTN","DGENRPT4",192,0)
 W !,?((IOM-45-$L(RLEGT_EGTSUB_EGTTP_EGTEDT))\2),"EGT Setting: ",RLEGT_EGTSUB," EGT Type: ",EGTTP," EGT Effective Date: ",EGTEDT
"RTN","DGENRPT4",193,0)
 W !,?((IOM-28-$L(EGTLDT))\2),"Date/Time Last EGT Setting: ",EGTLDT
"RTN","DGENRPT4",194,0)
 W !!,"IMPORTANT NOTE:  Actual report is based on a comparison of the EGT Setting and the Enrollment Category as provided by HEC."
"RTN","DGENRPT4",195,0)
 Q
"RTN","DGENRPT4",196,0)
 ;
"RTN","DGENRPT4",197,0)
DETHD1 ;Header for the Preliminary Detailed Report, with Future Appointments.
"RTN","DGENRPT4",198,0)
 D DETHD
"RTN","DGENRPT4",199,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?109,"PC",?120,"PREF"
"RTN","DGENRPT4",200,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPOINTMENTS",?109,"PROVIDER",?120,"FACILITY",!!
"RTN","DGENRPT4",201,0)
 Q
"RTN","DGENRPT4",202,0)
 ;
"RTN","DGENRPT4",203,0)
DETHD0 ;Header for the Preliminary Detailed Report, no Future Appointments.
"RTN","DGENRPT4",204,0)
 D DETHD
"RTN","DGENRPT4",205,0)
 W !!,"NAME",?21,"SSN",?32,"EP",?36,"ENROLLMENT",?48,"ENROLLMENT",?62,"WARD",?79,"FUTURE",?87,"PC",?99,"PREF"
"RTN","DGENRPT4",206,0)
 W !,?36,"END DATE",?48,"STATUS",?79,"APPTS",?87,"PROVIDER",?99,"FACILITY",!!
"RTN","DGENRPT4",207,0)
 Q
"RTN","DGENRPT4",208,0)
 ;
"RTN","DGENRPT4",209,0)
END ;At the end of the display.
"RTN","DGENRPT4",210,0)
 N PSSN,J,COUNT S (PSSN,J)="",COUNT=0
"RTN","DGENRPT4",211,0)
 F  S J=$O(^TMP($J,"CNT4",J)) Q:J=""  D
"RTN","DGENRPT4",212,0)
 . F  S PSSN=$O(^TMP($J,"CNT4",J,PSSN)) Q:PSSN=""  S COUNT=COUNT+1
"RTN","DGENRPT4",213,0)
 W !,"TOTAL PATIENTS (UNIQUE SSNS) FOR THIS FACILITY:     ",COUNT
"RTN","DGENRPT4",214,0)
 Q
"RTN","DGENRPT4",215,0)
 ;
"RTN","DGENRPT4",216,0)
EXIT ;Clean up upon exit of the routine.
"RTN","DGENRPT4",217,0)
 D KVA^VADPT
"RTN","DGENRPT4",218,0)
 K ^TMP($J,"BY4"),^TMP($J,"CNT4")
"RTN","DGENRPT4",219,0)
 Q
"RTN","DGENRPT5")
0^8^B3142456
"RTN","DGENRPT5",1,0)
DGENRPT5 ;ALB/DW,LBD - EGT Impact Report Utility; 02/17/2004
"RTN","DGENRPT5",2,0)
 ;;5.3;Registration;**568**;Aug 13,1993
"RTN","DGENRPT5",3,0)
 ;
"RTN","DGENRPT5",4,0)
 ;
"RTN","DGENRPT5",5,0)
 Q
"RTN","DGENRPT5",6,0)
GETAPPT(TYPE) ; Set up array of Patient IENs for SD API to process
"RTN","DGENRPT5",7,0)
 N VETARRAY,PIEN,PNAME,RCNT,ACNT,DGARRAY,SDCNT,I
"RTN","DGENRPT5",8,0)
 S ACNT=1,RCNT=0
"RTN","DGENRPT5",9,0)
 S PNAME="" F  S PNAME=$O(^TMP($J,TYPE,PNAME)) Q:PNAME=""  D
"RTN","DGENRPT5",10,0)
 .S PIEN=0 F  S PIEN=$O(^TMP($J,TYPE,PNAME,PIEN)) Q:'PIEN  D
"RTN","DGENRPT5",11,0)
 ..S RCNT=RCNT+1,VETARRAY(ACNT)=$G(VETARRAY(ACNT))_PIEN_";"
"RTN","DGENRPT5",12,0)
 ..; Group DFNs by no more than twenty records
"RTN","DGENRPT5",13,0)
 ..I RCNT>19 S ACNT=ACNT+1,RCNT=0
"RTN","DGENRPT5",14,0)
 ;
"RTN","DGENRPT5",15,0)
 ; Call SD API by array of Patient DFNs
"RTN","DGENRPT5",16,0)
 F I=1:1 Q:'$D(VETARRAY(I))  D
"RTN","DGENRPT5",17,0)
 .S DGARRAY("FLDS")="1;2;3;10",DGARRAY(4)=VETARRAY(I)
"RTN","DGENRPT5",18,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGENRPT5",19,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGENRPT5",20,0)
 .K DGARRAY
"RTN","DGENRPT5",21,0)
 Q
"RTN","DGENRPT5",22,0)
 ;
"RTN","DGENRPT5",23,0)
BLDUTL(DFN) ; Build Utility Global Entries for records processed
"RTN","DGENRPT5",24,0)
 Q:'$D(^TMP($J,"SDAMA301",DFN))
"RTN","DGENRPT5",25,0)
 N CLIEN,APPTDT,NODE,APPTNUM S APPTNUM=1
"RTN","DGENRPT5",26,0)
 S CLIEN=0  F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGENRPT5",27,0)
 .S APPTDT=0 F  S APPTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APPTDT)) Q:'APPTDT  D
"RTN","DGENRPT5",28,0)
 ..Q:APPTDT'>DT
"RTN","DGENRPT5",29,0)
 ..S NODE=^TMP($J,"SDAMA301",DFN,CLIEN,APPTDT)
"RTN","DGENRPT5",30,0)
 ..S ^UTILITY("VASD",$J,APPTNUM,"E")=$$FMTE^DILIBF($P(NODE,U),"5U")_U_$P($P(NODE,U,2),";",2)_U_U_$P($P(NODE,U,10),";",2)
"RTN","DGENRPT5",31,0)
 ..S ^UTILITY("VASD",$J,APPTNUM,"I")=NODE,APPTNUM=APPTNUM+1
"RTN","DGENRPT5",32,0)
 K ^TMP($J,"SDAMA301")
"RTN","DGENRPT5",33,0)
 Q
"RTN","DGMTO1")
0^9^B22683050
"RTN","DGMTO1",1,0)
DGMTO1 ;ALB/CAW,AEG - AGREED TO PAY DEDUCTIBLE PRINT (CON'T) ; 02/23/2004
"RTN","DGMTO1",2,0)
 ;;5.3;Registration;**33,182,358,568**;Aug 13, 1993
"RTN","DGMTO1",3,0)
 ;
"RTN","DGMTO1",4,0)
START ;
"RTN","DGMTO1",5,0)
 ; loop through cat Cs for active ones
"RTN","DGMTO1",6,0)
 S (DGPAGE,DGSTOP)=0
"RTN","DGMTO1",7,0)
 F DGCAT=2,6 F DFN=0:0 S DFN=$O(^DPT("ACS",DGCAT,DFN)) Q:DFN'>0  D CATCLST
"RTN","DGMTO1",8,0)
 D ACTIVE
"RTN","DGMTO1",9,0)
 D CATCOUT
"RTN","DGMTO1",10,0)
 K ^TMP("DGMTO",$J,"CNULL"),DFN
"RTN","DGMTO1",11,0)
 D CLOSE^DGMTUTL
"RTN","DGMTO1",12,0)
 Q
"RTN","DGMTO1",13,0)
 ;
"RTN","DGMTO1",14,0)
CATCLST N DGDT,IEN,NODE0
"RTN","DGMTO1",15,0)
 S NODE0=$G(^DPT(DFN,0)) Q:(+$G(^(.35)))!($P(NODE0,U,14)'=DGCAT)
"RTN","DGMTO1",16,0)
 F DGDT=0:0 S DGDT=$O(^DGMT(408.31,"AD",1,DFN,DGDT)) Q:'DGDT  S IEN=$$MTIEN^DGMTU3(1,DFN,-DGDT) I IEN,(DGDT'<DGYRAGO)&(DGDT'>DGTODAY) D
"RTN","DGMTO1",17,0)
 .Q:DGCAT'[$P($G(^DGMT(408.31,+IEN,0)),U,3)
"RTN","DGMTO1",18,0)
 .Q:$P($G(^DGMT(408.31,+IEN,0)),U,11)=1
"RTN","DGMTO1",19,0)
 .S ^TMP("DGMTO",$J,"CNULL",$P(NODE0,U,1),DFN)=";;"_$P(NODE0,U,1)_";;"_DGCAT_";;"_$$SR^DGMTAUD1($G(^DGMT(408.31,+IEN,0)))
"RTN","DGMTO1",20,0)
QTC Q
"RTN","DGMTO1",21,0)
 ;
"RTN","DGMTO1",22,0)
ACTIVE ;
"RTN","DGMTO1",23,0)
 N APWHEN,I,VETARRAY,PIEN,PNAME,RCNT,ACNT,DGARRAY,SDCNT,APT,CK1,CK3,PATNAM
"RTN","DGMTO1",24,0)
 S ACNT=1,RCNT=0
"RTN","DGMTO1",25,0)
 S PNAME="" F  S PNAME=$O(^TMP("DGMTO",$J,"CNULL",PNAME)) Q:PNAME=""  D
"RTN","DGMTO1",26,0)
 .S PIEN=0 F  S PIEN=$O(^TMP("DGMTO",$J,"CNULL",PNAME,PIEN)) Q:'PIEN  D
"RTN","DGMTO1",27,0)
 ..S RCNT=RCNT+1,VETARRAY(ACNT)=$G(VETARRAY(ACNT))_PIEN_";"
"RTN","DGMTO1",28,0)
 ..; Group DFNs by no more than twenty records
"RTN","DGMTO1",29,0)
 ..I RCNT>19 S ACNT=ACNT+1,RCNT=0
"RTN","DGMTO1",30,0)
 ;
"RTN","DGMTO1",31,0)
 ; Call SD API by array of Patient DFNs
"RTN","DGMTO1",32,0)
 F I=1:1 Q:'$D(VETARRAY(I))  D
"RTN","DGMTO1",33,0)
 .S DGARRAY("FLDS")="1",DGARRAY(4)=VETARRAY(I)
"RTN","DGMTO1",34,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGMTO1",35,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGMTO1",36,0)
 .K DGARRAY,^TMP($J,"SDAMA301")
"RTN","DGMTO1",37,0)
 ;
"RTN","DGMTO1",38,0)
 ; Appointment Database was unavailable
"RTN","DGMTO1",39,0)
 I $D(^TMP($J,"SDAMA",101)) K ^TMP("DGMTO",$J,"CNULL") S ^TMP("DGMTO",$J,"CNULL",101)="" Q
"RTN","DGMTO1",40,0)
 ;
"RTN","DGMTO1",41,0)
 ; Complete ^TMP entries for report
"RTN","DGMTO1",42,0)
 N PATIEN,CLIEN,APPTDT,PATAPPT,APWHEN
"RTN","DGMTO1",43,0)
 S PATNAM=""  F  S PATNAM=$O(^TMP("DGMTO",$J,"CNULL",PATNAM)) Q:PATNAM=""  D
"RTN","DGMTO1",44,0)
 .S PATIEN=0  F  S PATIEN=$O(^TMP("DGMTO",$J,"CNULL",PATNAM,PATIEN)) Q:'PATIEN  D
"RTN","DGMTO1",45,0)
 ..;
"RTN","DGMTO1",46,0)
 ..S CLIEN=0  F  S CLIEN=$O(^TMP($J,"SDAMA",PATIEN,CLIEN)) Q:'CLIEN  D
"RTN","DGMTO1",47,0)
 ...S APPTDT=0 F  S APPTDT=$O(^TMP($J,"SDAMA",PATIEN,CLIEN,APPTDT)) Q:'APPTDT  D
"RTN","DGMTO1",48,0)
 ....; Get list of appointments for vet
"RTN","DGMTO1",49,0)
 ....S PATAPPT(APPTDT)=PATNAM
"RTN","DGMTO1",50,0)
 ..; Update or Delete ^TMP for Report
"RTN","DGMTO1",51,0)
 ..S APT=$O(^DPT(PATIEN,"DIS",(9999999-DGTODAY))),APWHEN=""
"RTN","DGMTO1",52,0)
 ..I APT,(APT<(9999999-DGYRAGO)) S $P(APWHEN,U,1)="X"
"RTN","DGMTO1",53,0)
 ..I +$G(^DPT(PATIEN,.105)) S $P(APWHEN,U,2)="X"
"RTN","DGMTO1",54,0)
 ..I $O(PATAPPT(""),-1)>DT S $P(APWHEN,U,3)="X"
"RTN","DGMTO1",55,0)
 ..K PATAPPT
"RTN","DGMTO1",56,0)
 ..I APWHEN']"" D
"RTN","DGMTO1",57,0)
 ...S CK1=$O(^DGPM("APRD",PATIEN,DGYRAGO)) I (+CK1)&(+CK1<DGTODAY) S $P(APWHEN,U,1)="X"
"RTN","DGMTO1",58,0)
 ...S CK3=$O(^DGPM("APRD",PATIEN,DGTODAY)) I (+CK3) S $P(APWHEN,U,3)="X"
"RTN","DGMTO1",59,0)
 ..S:APWHEN]"" $P(^TMP("DGMTO",$J,"CNULL",PATNAM,PATIEN),";;")=APWHEN
"RTN","DGMTO1",60,0)
 ..I APWHEN']"" K ^TMP("DGMTO",$J,"CNULL",PATNAM,PATIEN)
"RTN","DGMTO1",61,0)
 K ^TMP($J,"SDAMA")
"RTN","DGMTO1",62,0)
 Q
"RTN","DGMTO1",63,0)
CATCOUT ;
"RTN","DGMTO1",64,0)
 U IO D HDR
"RTN","DGMTO1",65,0)
 I $D(^TMP("DGMTO",$J,"CNULL")) D PRINT,LEGEND Q
"RTN","DGMTO1",66,0)
 W:$D(^TMP("DGMTO",$J,"CNULL",101)) !,?5,"Appointment Database is Unavailable --- Unable to generate report" Q
"RTN","DGMTO1",67,0)
 W:'$D(^TMP("DGMTO",$J,"CNULL")) !,?5,"NO ACTIVE PATIENTS WHO HAVE NOT AGREED TO PAY DEDUCTIBLE",!?5,"   ------",!
"RTN","DGMTO1",68,0)
 Q
"RTN","DGMTO1",69,0)
PRINT ;
"RTN","DGMTO1",70,0)
 S DGNAME=""
"RTN","DGMTO1",71,0)
 F  S DGNAME=$O(^TMP("DGMTO",$J,"CNULL",DGNAME)) Q:DGNAME']""  D  Q:DGSTOP
"RTN","DGMTO1",72,0)
 .F DFN=0:0 S DFN=$O(^TMP("DGMTO",$J,"CNULL",DGNAME,DFN)) Q:DFN'>0  S DGX=^(DFN) D  Q:DGSTOP
"RTN","DGMTO1",73,0)
 ..D PID^VADPT6
"RTN","DGMTO1",74,0)
 ..W !,$P(DGX,";;",2),?25,$S($P(DGX,";;",3)=2:"Pend Adj",1:"Cat. C"),?35,VA("PID"),?50,$P(DGX,";;",4),?59,$P($P(DGX,";;",1),U,1),?67,$P($P(DGX,";;",1),U,2),?75,$P($P(DGX,";;",1),U,3)
"RTN","DGMTO1",75,0)
 ..D CHK
"RTN","DGMTO1",76,0)
 K VA,VAPTYP,DGNAME
"RTN","DGMTO1",77,0)
 Q
"RTN","DGMTO1",78,0)
 ;
"RTN","DGMTO1",79,0)
HDR ;
"RTN","DGMTO1",80,0)
 S DGPAGE=DGPAGE+1
"RTN","DGMTO1",81,0)
 W:$E(IOST,1,2)["C-" @IOF W "Active Patients Who Have Not Agreed To Pay Deductible",?70,"Page: "_DGPAGE
"RTN","DGMTO1",82,0)
 W !,"Date Range: "_$$FDATE^DGMTUTL(DGYRAGO)_" to "_$$FDATE^DGMTUTL(DGTODAY) D NOW^%DTC W ?51,"Run Date: "_$E($$FTIME^DGMTUTL(%),1,18)
"RTN","DGMTO1",83,0)
 W !,""
"RTN","DGMTO1",84,0)
 W !,?37,"PATIENT",?47,"MEANS TEST"
"RTN","DGMTO1",85,0)
 W !,"PATIENT NAME",?25,"STATUS",?40,"ID",?49,"SOURCE",?58,"PAST",?64,"INHOUSE",?73,"FUTURE"
"RTN","DGMTO1",86,0)
 S DGLINE="",$P(DGLINE,"=",IOM)=""
"RTN","DGMTO1",87,0)
 W !,DGLINE
"RTN","DGMTO1",88,0)
 Q
"RTN","DGMTO1",89,0)
CHK ;Check to pause on screen
"RTN","DGMTO1",90,0)
 I ($Y+5)>IOSL,$E(IOST,1,2)="C-" D PAUSE S DGP=Y D:DGP HDR I 'DGP S DGSTOP=1 Q
"RTN","DGMTO1",91,0)
 I $E(IOST,1,2)="P-",($Y+5)>IOSL,$O(^TMP("DGMTO",$J,DGNAME,DFN)) D HDR Q
"RTN","DGMTO1",92,0)
 Q
"RTN","DGMTO1",93,0)
PAUSE ;
"RTN","DGMTO1",94,0)
 W ! S DIR(0)="E" D ^DIR K DIR W !
"RTN","DGMTO1",95,0)
 Q
"RTN","DGMTO1",96,0)
LEGEND ;Legend at end of report
"RTN","DGMTO1",97,0)
 W !!,"ACTIVE= Sched. Admissions, Dispositions, Pt. Movements, or Clinic Appts."
"RTN","DGMTO1",98,0)
 W !!,?10,"INHOUSE = Current Inpatient"
"RTN","DGMTO1",99,0)
 W !,?10,"PAST    = ",$$FDATE^DGMTUTL(DGYRAGO)," to ",$$FDATE^DGMTUTL(DGTODAY)
"RTN","DGMTO1",100,0)
 W !,?10,"FUTURE  = After ",$$FDATE^DGMTUTL(DGTODAY)
"RTN","DGMTO1",101,0)
 Q
"RTN","DGMTOFA")
0^10^B19851647
"RTN","DGMTOFA",1,0)
DGMTOFA ;ALB/CAW/AEG - Future Appointments who will require MT ; 03/19/2004
"RTN","DGMTOFA",2,0)
 ;;5.3;Registration;**3,50,182,326,426,568**;Aug 13, 1993
"RTN","DGMTOFA",3,0)
 ;
"RTN","DGMTOFA",4,0)
EN ; 
"RTN","DGMTOFA",5,0)
 I '$$RANGE^DGMTUTL("F") G ENQ
"RTN","DGMTOFA",6,0)
 I '$$DIV^DGMTUTL G ENQ
"RTN","DGMTOFA",7,0)
 I '$$CLINIC^DGMTUTL G ENQ
"RTN","DGMTOFA",8,0)
 ;I '$$LETTER G ENQ
"RTN","DGMTOFA",9,0)
 W !! S %ZIS="PMQ" D ^%ZIS I POP G ENQ
"RTN","DGMTOFA",10,0)
 I '$D(IO("Q")) D MAIN G ENQ
"RTN","DGMTOFA",11,0)
 S Y=$$QUE
"RTN","DGMTOFA",12,0)
ENQ ;
"RTN","DGMTOFA",13,0)
 D:'$D(ZTQUEUED) ^%ZISC
"RTN","DGMTOFA",14,0)
 K DFN,DGAPT,DGBEG,DGCLN,DGDATE,DGDFN,DGDIV,DGEND,DGFLG,DGINFO,DGLINE,DGLST,DGMT,DGMT1,DGPAGE,DGSTOP,DGTMP,DGTMP1,DGTMP2,DGMTYPT,DGYN,DIW,DIWF,DIWR,DIWT,DN,SDFORM,SDLET,VA,VAERR,VAUTC,VAUTD,^TMP("DGMTO",$J),^TMP("DGMTL",$J)
"RTN","DGMTOFA",15,0)
 K DGARRAY,CLNARRAY,^TMP($J,"SDAMA"),I,DGTMP,SDCNT
"RTN","DGMTOFA",16,0)
 Q
"RTN","DGMTOFA",17,0)
 ;
"RTN","DGMTOFA",18,0)
QUE() ; -- que job
"RTN","DGMTOFA",19,0)
 ; return: did job que [ 1|yes   0|no ]
"RTN","DGMTOFA",20,0)
 ;
"RTN","DGMTOFA",21,0)
 K ZTSK,IO("Q")
"RTN","DGMTOFA",22,0)
 S ZTDESC="Future Appt. w/ Means Test",ZTRTN="MAIN^DGMTOFA"
"RTN","DGMTOFA",23,0)
 F X="DGBEG","DGEND","DGYN","DGMTYPT","SDFORM","SDLET","VAUTC","VAUTD","VAUTC(","VAUTD(" S ZTSAVE(X)=""
"RTN","DGMTOFA",24,0)
 D ^%ZTLOAD W:$D(ZTSK) "   (Task: ",ZTSK,")"
"RTN","DGMTOFA",25,0)
 Q $D(ZTSK)
"RTN","DGMTOFA",26,0)
 ;
"RTN","DGMTOFA",27,0)
MAIN ; 
"RTN","DGMTOFA",28,0)
 K ^TMP("DGMTO",$J) S I=1
"RTN","DGMTOFA",29,0)
 I VAUTC=1,VAUTD=1 S DGCLN=0 F  S DGCLN=$O(^SC(DGCLN)) Q:'DGCLN  I $P(^(DGCLN,0),U,3)="C" D CBLD3(DGCLN)
"RTN","DGMTOFA",30,0)
 ;
"RTN","DGMTOFA",31,0)
 I VAUTC=1,VAUTD=0 S DGDIV="" F  S DGDIV=$O(VAUTD(DGDIV)) Q:'DGDIV  S DGCLN=0 F  S DGCLN=$O(^SC(DGCLN)) Q:'DGCLN  I $P(^SC(DGCLN,0),U,3)="C",$P(^SC(DGCLN,0),U,15)=DGDIV D CBLD3(DGCLN)
"RTN","DGMTOFA",32,0)
 I VAUTC=0 S DGCLN="" F  S DGCLN=$O(VAUTC(DGCLN)) Q:'DGCLN  D CBLD3(DGCLN)
"RTN","DGMTOFA",33,0)
 D SDAM,CLN1
"RTN","DGMTOFA",34,0)
 D ^DGMTOFA1
"RTN","DGMTOFA",35,0)
 D CLOSE^DGMTUTL
"RTN","DGMTOFA",36,0)
 Q
"RTN","DGMTOFA",37,0)
 ;
"RTN","DGMTOFA",38,0)
CBLD3(DGCLN) ; Build array of specified Clinics for specified Divisions
"RTN","DGMTOFA",39,0)
 S CLNARRAY(I)=$G(CLNARRAY(I))_DGCLN_";"
"RTN","DGMTOFA",40,0)
 I $L(CLNARRAY(I))>120 S I=I+1
"RTN","DGMTOFA",41,0)
 Q
"RTN","DGMTOFA",42,0)
 ;
"RTN","DGMTOFA",43,0)
SDAM ; Build TMP Global with Appointment API Data for Report
"RTN","DGMTOFA",44,0)
 S DGARRAY(1)=DGBEG_";"_DGEND
"RTN","DGMTOFA",45,0)
 S DGARRAY("FLDS")="1;3;10"
"RTN","DGMTOFA",46,0)
 F I=1:1 Q:'$D(CLNARRAY(I))  D
"RTN","DGMTOFA",47,0)
 .S DGARRAY(2)=CLNARRAY(I)
"RTN","DGMTOFA",48,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGMTOFA",49,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGMTOFA",50,0)
 .K ^TMP($J,"SDAMA301")
"RTN","DGMTOFA",51,0)
 Q
"RTN","DGMTOFA",52,0)
 ;
"RTN","DGMTOFA",53,0)
CLN1 ; Loop through appointments
"RTN","DGMTOFA",54,0)
 ;
"RTN","DGMTOFA",55,0)
 N DGTMP S DGDATE=DGBEG-.1,DGLST=DGEND+.9
"RTN","DGMTOFA",56,0)
 S DGCLN=0 F  S DGCLN=$O(^TMP($J,"SDAMA",DGCLN)) Q:'DGCLN  D
"RTN","DGMTOFA",57,0)
 .S DGDFN=0 F  S DGDFN=$O(^TMP($J,"SDAMA",DGCLN,DGDFN)) Q:'DGDFN  D
"RTN","DGMTOFA",58,0)
 ..S DGDATE=0 F  S DGDATE=$O(^TMP($J,"SDAMA",DGCLN,DGDFN,DGDATE)) Q:'DGDATE  D
"RTN","DGMTOFA",59,0)
 ...S DGTMP=^TMP($J,"SDAMA",DGCLN,DGDFN,DGDATE)
"RTN","DGMTOFA",60,0)
 ...Q:$$DOM(DGDFN,DGDATE)
"RTN","DGMTOFA",61,0)
 ...Q:"^N^NA^C^CA^PC^PCA^"[(U_$P($P(DGTMP,U,3),";")_U)
"RTN","DGMTOFA",62,0)
 ...D MT
"RTN","DGMTOFA",63,0)
 Q
"RTN","DGMTOFA",64,0)
MT ; Is patient going to need to complete a MT/Copay by appt?
"RTN","DGMTOFA",65,0)
 S DGMT=$$LST^DGMTU(DGDFN,$P(DGDATE,"."),DGMTYPT),DGMT1=$P($G(^DGMT(408.31,+DGMT,0)),U,3) I DGMT1,"^3^10^"'[("^"_DGMT1_"^") D
"RTN","DGMTOFA",66,0)
 .S X1=$P(DGMT,U,2),X2=365 D C^%DTC I $P(DGDATE,".")<X,$S(DGMT1=1:0,DGMT1=9:0,1:1) Q
"RTN","DGMTOFA",67,0)
 .;Check to see if Cat C/Pend Adj agreed to pay with test date >10/5/99
"RTN","DGMTOFA",68,0)
 .I $P(DGMT,U,2)>2991005,$P($G(^DGMT(408.31,+DGMT,0)),U,11)=1,((DGMT1=6)!(DGMT1=2)) Q
"RTN","DGMTOFA",69,0)
 .;Check to see if Cat C, declined to provide income info but agreed to
"RTN","DGMTOFA",70,0)
 .;pay -- no date restrictions on these types.
"RTN","DGMTOFA",71,0)
 .I $G(DGMT1)=6,+$P($G(^DGMT(408.31,+DGMT,0)),U,14),+$P($G(^DGMT(408.31,+DGMT,0)),U,11) Q
"RTN","DGMTOFA",72,0)
 .; checking for future means test based on DT
"RTN","DGMTOFA",73,0)
 .N DGNXTMT
"RTN","DGMTOFA",74,0)
 .S DGNXTMT=$O(^IVM(301.5,"AE",DGDFN,DT))
"RTN","DGMTOFA",75,0)
 .I 'DGNXTMT S DGNXTMT=""
"RTN","DGMTOFA",76,0)
 .S ^TMP("DGMTO",$J,$S(+$P(^SC(DGCLN,0),U,15):$P(^(0),U,15),1:$O(^DG(40.8,0))),$P(^SC(DGCLN,0),U),$P(^DPT(DGDFN,0),U),DGDATE)=DGDFN_U_$P(DGMT,U,1,4)_U_$P($P(DGTMP,U,10),";")_U_DGNXTMT,^TMP("DGMTL",$J,$P(^DPT(DGDFN,0),U),DGDFN)=""
"RTN","DGMTOFA",77,0)
 Q
"RTN","DGMTOFA",78,0)
 ;
"RTN","DGMTOFA",79,0)
LETTER() ;
"RTN","DGMTOFA",80,0)
 ;   Input - none
"RTN","DGMTOFA",81,0)
 ;  Output - DGYN - yes/no
"RTN","DGMTOFA",82,0)
 ;
"RTN","DGMTOFA",83,0)
 N %
"RTN","DGMTOFA",84,0)
LTR W !!,"Do you want to generate letters" S %=2 D YN^DICN
"RTN","DGMTOFA",85,0)
 ;I %=1 D START^DGMTLTR S DGYN=$S('$D(DGFLG):1,1:0)
"RTN","DGMTOFA",86,0)
 I %=2 S DGYN=0
"RTN","DGMTOFA",87,0)
 I %=0 W !!,"Enter 'Y'es to generate letters from the listing or",!,"Enter 'N'o to produce the listing, but not the letters." G LTR
"RTN","DGMTOFA",88,0)
 Q $D(DGYN)
"RTN","DGMTOFA",89,0)
 ;
"RTN","DGMTOFA",90,0)
DOM(DFN,DGT) ; Screen out dom patient
"RTN","DGMTOFA",91,0)
 ;         Input:   DFN - Patient IEN
"RTN","DGMTOFA",92,0)
 ;                  DGT - Date of visit
"RTN","DGMTOFA",93,0)
 ;
"RTN","DGMTOFA",94,0)
 N Y,DGI,DGXFR0,DGA1,DGINP
"RTN","DGMTOFA",95,0)
 S Y=0
"RTN","DGMTOFA",96,0)
 D ^DGINPW I DG1 I $P(^DG(43,1,0),U,21),$D(^DIC(42,+DG1,0)),$P(^(0),U,3)="D" S Y=1
"RTN","DGMTOFA",97,0)
 Q Y
"RTN","DGPREBJ")
0^11^B16175351
"RTN","DGPREBJ",1,0)
DGPREBJ ;Boise/WRL/ALB/SCK-PreRegistration Night Task Job ; 5/28/2004
"RTN","DGPREBJ",2,0)
 ;;5.3;Registration;**109,581,568**;Aug 13, 1993
"RTN","DGPREBJ",3,0)
 Q
"RTN","DGPREBJ",4,0)
 ;
"RTN","DGPREBJ",5,0)
EN ;  Main entry point for the Pre-Registration Background Job.
"RTN","DGPREBJ",6,0)
 ;  Variables
"RTN","DGPREBJ",7,0)
 ;     DGPTOD  -  Current date
"RTN","DGPREBJ",8,0)
 ;     DGPNL   -  Message line count for mail message 
"RTN","DGPREBJ",9,0)
 ;     DGPFNC  -  Job function
"RTN","DGPREBJ",10,0)
 ;     DGPNDAY -  Number of days to keep entries in the call list
"RTN","DGPREBJ",11,0)
 ;     DGPTXT  -  Message array
"RTN","DGPREBJ",12,0)
 ;     DGPDT   -  Last date to keep entries in call list for, uses DGPNDAY
"RTN","DGPREBJ",13,0)
 ;     DGPN1-2 -  Temporary Var's for $ORDER
"RTN","DGPREBJ",14,0)
 ;     DGPCLD  -  Count of call log entries purged 
"RTN","DGPREBJ",15,0)
 ;
"RTN","DGPREBJ",16,0)
 N DGPTXT,DGPTOD,DGPFNC,DGPNL,DGPCLD,DGPDT,DGPN1,DGPN2,DGPNDAY
"RTN","DGPREBJ",17,0)
 ;
"RTN","DGPREBJ",18,0)
 S DGPTOD=$$DT^XLFDT()
"RTN","DGPREBJ",19,0)
 ;
"RTN","DGPREBJ",20,0)
 S DGPNL=1
"RTN","DGPREBJ",21,0)
 ;
"RTN","DGPREBJ",22,0)
 S DGPFNC=$P($G(^DG(43,1,"DGPRE")),U,3)
"RTN","DGPREBJ",23,0)
 I DGPFNC']""!(DGPFNC="N") D MES("MES1") G EXIT
"RTN","DGPREBJ",24,0)
 ;
"RTN","DGPREBJ",25,0)
 ; Get Appointment Information
"RTN","DGPREBJ",26,0)
 D SDAMAPI^DGPREBJ1(0)
"RTN","DGPREBJ",27,0)
 ;
"RTN","DGPREBJ",28,0)
 ; Check for Appointment Database Availability
"RTN","DGPREBJ",29,0)
 I $D(^TMP($J,"SDAMA301")) I $D(^TMP($J,"SDAMA301",101)) D SETTEXT^DGPREBJ("SDAMAPI - Appointment Database is Unavilable."),SETTEXT^DGPREBJ("Unable to update Call List."),SEND K ^TMP($J,"SDAMA301") Q
"RTN","DGPREBJ",30,0)
 ;
"RTN","DGPREBJ",31,0)
 ; DG/581 - delete certain entries in DGS(41.42
"RTN","DGPREBJ",32,0)
 N DGTDAY,DGIEN,DGOLD,DGZERO,DGDFN,DGAPDT,DGKFLAG,DGCLN,DGSTAT
"RTN","DGPREBJ",33,0)
 D NOW^%DTC S DGTDAY=%
"RTN","DGPREBJ",34,0)
 S (DGIEN,DGOLD)=0
"RTN","DGPREBJ",35,0)
 F  S DGIEN=$O(^DGS(41.42,DGIEN)) Q:'DGIEN  D
"RTN","DGPREBJ",36,0)
 .S DGZERO=$G(^DGS(41.42,DGIEN,0)) Q:DGZERO=""
"RTN","DGPREBJ",37,0)
 .S DGDFN=$P(DGZERO,U),DGAPDT=$P(DGZERO,U,8),DGCLN=$P(DGZERO,U,7)
"RTN","DGPREBJ",38,0)
 .Q:('DGDFN)!('DGAPDT)
"RTN","DGPREBJ",39,0)
 .S DGKFLAG=0
"RTN","DGPREBJ",40,0)
 .; delete if appt date less than NOW
"RTN","DGPREBJ",41,0)
 .I DGAPDT<DGTDAY S DGKFLAG=1
"RTN","DGPREBJ",42,0)
 .; check status of appt - delete if no-show, cancelled...
"RTN","DGPREBJ",43,0)
 .S DGSTAT=$P($P($G(^TMP($J,"SDAMA301",DGCLN,DGDFN,DGAPDT)),U,3),";")
"RTN","DGPREBJ",44,0)
 .I DGSTAT'="",DGSTAT'="R" S DGKFLAG=1
"RTN","DGPREBJ",45,0)
 .I DGKFLAG S DIK="^DGS(41.42,",DA=DGIEN D ^DIK K DIK S DGOLD=DGOLD+1
"RTN","DGPREBJ",46,0)
 D SETTEXT("Number of old or cancelled records deleted from the Call List: "_DGOLD)
"RTN","DGPREBJ",47,0)
 D SETTEXT("")
"RTN","DGPREBJ",48,0)
 ;
"RTN","DGPREBJ",49,0)
 I DGPFNC="D" D KILLALL
"RTN","DGPREBJ",50,0)
 I DGPFNC="P" D PURGECP
"RTN","DGPREBJ",51,0)
 I DGPFNC="DA" D KILLALL,ADDNEW^DGPREBJ1(0,DGPDT)
"RTN","DGPREBJ",52,0)
 I DGPFNC="PA" D ADDNEW^DGPREBJ1(0,DGPDT),PURGECP
"RTN","DGPREBJ",53,0)
 I DGPFNC="AO" D ADDNEW^DGPREBJ1(0,DGPDT)
"RTN","DGPREBJ",54,0)
 ;
"RTN","DGPREBJ",55,0)
 ; Purge call log entries beyond Days to Keep limit
"RTN","DGPREBJ",56,0)
 S DGPNDAY=$P($G(^DG(43,1,"DGPRE")),U,4)
"RTN","DGPREBJ",57,0)
 G:DGPNDAY']"" EXIT
"RTN","DGPREBJ",58,0)
 ;
"RTN","DGPREBJ",59,0)
 D SETTEXT("Running: Purge Call Log.")
"RTN","DGPREBJ",60,0)
 ;
"RTN","DGPREBJ",61,0)
 S DGPDT=$$FMADD^XLFDT(DGPTOD,-DGPNDAY)
"RTN","DGPREBJ",62,0)
 S DGPCLD=0
"RTN","DGPREBJ",63,0)
 S DGPN1=0 F  S DGPN1=$O(^DGS(41.43,"B",DGPN1)) Q:'DGPN1!(DGPN1>DGPDT)  D
"RTN","DGPREBJ",64,0)
 . S DGPN2=0 F  S DGPN2=$O(^DGS(41.43,"B",DGPN1,DGPN2)) Q:'DGPN2  D
"RTN","DGPREBJ",65,0)
 .. S DGPCLD=DGPCLD+1
"RTN","DGPREBJ",66,0)
 .. S DIK="^DGS(41.43,"
"RTN","DGPREBJ",67,0)
 .. S DA=DGPN2
"RTN","DGPREBJ",68,0)
 .. D ^DIK K DIC
"RTN","DGPREBJ",69,0)
 ;
"RTN","DGPREBJ",70,0)
 D SETTEXT("Number of Entries Deleted From Call History: "_DGPCLD)
"RTN","DGPREBJ",71,0)
 D SETTEXT(" ")
"RTN","DGPREBJ",72,0)
 ;
"RTN","DGPREBJ",73,0)
EXIT ;
"RTN","DGPREBJ",74,0)
 D SEND
"RTN","DGPREBJ",75,0)
 Q
"RTN","DGPREBJ",76,0)
 ;
"RTN","DGPREBJ",77,0)
SEND ;  Send notification of actions taken to mailgroup
"RTN","DGPREBJ",78,0)
 S XMY("G.DGPRE PRE-REG STAFF")=""
"RTN","DGPREBJ",79,0)
 S XMDUZ=$S($G(DUZ)>0:DUZ,1:.5)
"RTN","DGPREBJ",80,0)
 S XMTEXT="DGPTXT("
"RTN","DGPREBJ",81,0)
 S XMSUB="PRE-REGISTRATION NIGHTLY JOB REPORT"
"RTN","DGPREBJ",82,0)
 D XMZ^XMA2
"RTN","DGPREBJ",83,0)
 D:XMZ>0 ^XMD
"RTN","DGPREBJ",84,0)
 K XMY,XMDUZ,XMTEXT,XMSUB
"RTN","DGPREBJ",85,0)
 Q
"RTN","DGPREBJ",86,0)
 ;
"RTN","DGPREBJ",87,0)
SETTEXT(DGLINE) ;  Add text line to message array
"RTN","DGPREBJ",88,0)
 S DGPTXT(DGPNL)=DGLINE
"RTN","DGPREBJ",89,0)
 S DGPNL=DGPNL+1
"RTN","DGPREBJ",90,0)
 Q
"RTN","DGPREBJ",91,0)
 ;
"RTN","DGPREBJ",92,0)
PURGECP ;  Purge called patients from the Pre-registration call list
"RTN","DGPREBJ",93,0)
 ;  Variables
"RTN","DGPREBJ",94,0)
 ;     DGPDEL - Counter of records deleted
"RTN","DGPREBJ",95,0)
 ;
"RTN","DGPREBJ",96,0)
 N DGPDEL
"RTN","DGPREBJ",97,0)
 S DGPDEL=0
"RTN","DGPREBJ",98,0)
 ;
"RTN","DGPREBJ",99,0)
 D PRGLST^DGPREP4(0,.DGPDEL)
"RTN","DGPREBJ",100,0)
 ;
"RTN","DGPREBJ",101,0)
 D SETTEXT(DGPDEL_" Called Patients Purged.")
"RTN","DGPREBJ",102,0)
 D SETTEXT(" ")
"RTN","DGPREBJ",103,0)
 Q
"RTN","DGPREBJ",104,0)
 ;
"RTN","DGPREBJ",105,0)
KILLALL ;  Clear all entries from the pre-registration call list.
"RTN","DGPREBJ",106,0)
 ;   Variables
"RTN","DGPREBJ",107,0)
 ;    DGPTOT  - Counter if entries deleted
"RTN","DGPREBJ",108,0)
 ;
"RTN","DGPREBJ",109,0)
 N DGPTOT
"RTN","DGPREBJ",110,0)
 S DGPTOT=0
"RTN","DGPREBJ",111,0)
 ;
"RTN","DGPREBJ",112,0)
 D CLRLST^DGPREP4(0,.DGPTOT)
"RTN","DGPREBJ",113,0)
 ;
"RTN","DGPREBJ",114,0)
 D SETTEXT(DGPTOT_" Entries Deleted from the Call List.")
"RTN","DGPREBJ",115,0)
 D SETTEXT(" ")
"RTN","DGPREBJ",116,0)
 Q
"RTN","DGPREBJ",117,0)
 ;
"RTN","DGPREBJ",118,0)
MES(TAG) ; Build message for missing parameters
"RTN","DGPREBJ",119,0)
 N DGMES,I
"RTN","DGPREBJ",120,0)
 ;
"RTN","DGPREBJ",121,0)
 F I=1:1 S DGMES=$P($T(@TAG+I),";;",2,99) Q:DGMES="$$END"  D SETTEXT(DGMES)
"RTN","DGPREBJ",122,0)
 D SETTEXT(" ")
"RTN","DGPREBJ",123,0)
 Q
"RTN","DGPREBJ",124,0)
 ;
"RTN","DGPREBJ",125,0)
MES1 ; 
"RTN","DGPREBJ",126,0)
 ;;There is either no entry or a 'No Action' entry in the 'CALL LIST NIGHT JOB
"RTN","DGPREBJ",127,0)
 ;;FUNCTION' field in the site parameter file. No action will be taken on the
"RTN","DGPREBJ",128,0)
 ;;Call List.
"RTN","DGPREBJ",129,0)
 ;;$$END
"RTN","DGPREBJ1")
0^12^B39076432
"RTN","DGPREBJ1",1,0)
DGPREBJ1 ;ALB/SCK - PreRegistration Background job cont. ; 8/18/04 11:45am
"RTN","DGPREBJ1",2,0)
 ;;5.3;Registration;**109,568**;Aug 13, 1993
"RTN","DGPREBJ1",3,0)
 Q
"RTN","DGPREBJ1",4,0)
 ;
"RTN","DGPREBJ1",5,0)
EN ; Interactive entry (from option)
"RTN","DGPREBJ1",6,0)
 ; Variables
"RTN","DGPREBJ1",7,0)
 ;    DGPTOD   - Todays date from DT  
"RTN","DGPREBJ1",8,0)
 ;    DGPNL    - No. of lines in message array
"RTN","DGPREBJ1",9,0)
 ;    DGPTXT   - Message array from ADDNEW procedure 
"RTN","DGPREBJ1",10,0)
 ;    DGPP     - Default date to look for appointments
"RTN","DGPREBJ1",11,0)
 ;    I1,X1-2  - Local variables  for counters and date manipulation
"RTN","DGPREBJ1",12,0)
 ;
"RTN","DGPREBJ1",13,0)
 I '$D(^XUSEC("DGPRE SUPV",DUZ)) D  G ENQ
"RTN","DGPREBJ1",14,0)
 . W !!,"You do not have the DG PREREGISTRATION Key allocated, contact your MAS ADPAC."
"RTN","DGPREBJ1",15,0)
 ;
"RTN","DGPREBJ1",16,0)
 N DGPDT,DGPTOD,DGPNL,DGPTXT,DGPP,I1,X,X1,X2,Y
"RTN","DGPREBJ1",17,0)
 S X1=$P($$NOW^XLFDT,"."),X2=$P($G(^DG(43,1,"DGPRE")),U,5) S:X2']"" X2=14
"RTN","DGPREBJ1",18,0)
 S DGPP=$$FMADD^XLFDT(X1,X2)
"RTN","DGPREBJ1",19,0)
 S DIR("B")=$$FMTE^XLFDT(DGPP,1)
"RTN","DGPREBJ1",20,0)
 S DIR(0)="DA^::EX",DIR("A")="Enter Appointment date to search: "
"RTN","DGPREBJ1",21,0)
 D ^DIR K DIR
"RTN","DGPREBJ1",22,0)
 G:$D(DIRUT) ENQ
"RTN","DGPREBJ1",23,0)
 S DGPNL=0,DGPTOD=DT,DGPDT1=Y
"RTN","DGPREBJ1",24,0)
 D WAIT^DICD
"RTN","DGPREBJ1",25,0)
 D SDAMAPI(1,DGPDT1)
"RTN","DGPREBJ1",26,0)
 D ADDNEW(1,DGPDT1)
"RTN","DGPREBJ1",27,0)
 I $D(DGPTXT) W !!,"Results of updating the Call List with new entries",!
"RTN","DGPREBJ1",28,0)
 S I1=0 F  S I1=$O(DGPTXT(I1)) Q:'I1  W !,DGPTXT(I1)
"RTN","DGPREBJ1",29,0)
ENQ K DIRUT,DUOUT,DTOUT,DIROUT,DGARRAY,SCDNT,^TMP($J,"SDAMA301")
"RTN","DGPREBJ1",30,0)
 Q
"RTN","DGPREBJ1",31,0)
 ;
"RTN","DGPREBJ1",32,0)
ADDNEW(DGPREI,DGPDT1) ;  Searches for appointments to add to the Call List
"RTN","DGPREBJ1",33,0)
 ;   Variables
"RTN","DGPREBJ1",34,0)
 ;     Input:
"RTN","DGPREBJ1",35,0)
 ;        DGPREI  -  Flag indicating how the procedure was called.
"RTN","DGPREBJ1",36,0)
 ;                   0 - called by background job
"RTN","DGPREBJ1",37,0)
 ;                   1 - called by option (interactive)
"RTN","DGPREBJ1",38,0)
 ;        DGPDT1  -  Date to look for appointments, Required when
"RTN","DGPREBJ1",39,0)
 ;                   DGPREI = 1
"RTN","DGPREBJ1",40,0)
 ;
"RTN","DGPREBJ1",41,0)
 ;     DGPDW   - Day of the week
"RTN","DGPREBJ1",42,0)
 ;     DGPNDY  - Number of days ahead to look for appt.
"RTN","DGPREBJ1",43,0)
 ;     DGPDT   - Date to look for appt. ( DT + DGPNDY)
"RTN","DGPREBJ1",44,0)
 ;     DGPTOT  - Counter, total records scanned
"RTN","DGPREBJ1",45,0)
 ;     DGPPT   - Pointer to patient file, #2
"RTN","DGPREBJ1",46,0)
 ;     DGPTDTH - Counter for patient alias's found
"RTN","DGPREBJ1",47,0)
 ;     DGPEXCL - Exclude flag
"RTN","DGPREBJ1",48,0)
 ;     DGPTCE  - Counter of appts. excluded because of clinic
"RTN","DGPREBJ1",49,0)
 ;     DGPTPE  - Counter of appts. excluded because of eligibility 
"RTN","DGPREBJ1",50,0)
 ;     DGPINP  - counter of appts. excluded because of inpatient
"RTN","DGPREBJ1",51,0)
 ;     DGPTNC  - Counter of appts. excluded because next appt. is within
"RTN","DGPREBJ1",52,0)
 ;               DAYS BETWEEN CALLS entry in the MAS PARAMETER File
"RTN","DGPREBJ1",53,0)
 ;     DGPADD  - Counter, entries added to call list
"RTN","DGPREBJ1",54,0)
 ;     DGPAPT  - Date and time off appointment
"RTN","DGPREBJ1",55,0)
 ;     DGPPRDT - Date pre-registration audit file last updated for patient
"RTN","DGPREBJ1",56,0)
 ;     DGPNDTW - DAYS BETWEEN CALLS value
"RTN","DGPREBJ1",57,0)
 ;     DGPSV   - Medical Service code
"RTN","DGPREBJ1",58,0)
 ;     DGPPN   - Patients Name
"RTN","DGPREBJ1",59,0)
 ;     DGPPH   - Patients Phone number
"RTN","DGPREBJ1",60,0)
 ;     DGPSN   - Patients last four
"RTN","DGPREBJ1",61,0)
 ;     DGPN1-5 - Temporary variables for $O
"RTN","DGPREBJ1",62,0)
 ;
"RTN","DGPREBJ1",63,0)
 ; Check for Appointment Database Availability
"RTN","DGPREBJ1",64,0)
 I $D(^TMP($J,"SDAMA301")) I $D(^TMP($J,"SDAMA301",101)) D SETTEXT^DGPREBJ("SDAMAPI - Appointment Database is Unavailable."),SETTEXT^DGPREBJ("Unable to update Call List.") Q
"RTN","DGPREBJ1",65,0)
 ;
"RTN","DGPREBJ1",66,0)
 N DGPADD,DGPTOT,DGPTCE,DGPTPE,DGPTNC,DGPTDTH,DGPINP,DGPUPD,DGPN1,DGPAPT
"RTN","DGPREBJ1",67,0)
 N DGPPH,DGPDW,DGPPT,DGPPRDT,DGPNDTW,DGPN5,DGPEXCL,CKAPDT
"RTN","DGPREBJ1",68,0)
 S (DGPADD,DGPTOT,DGPTCE,DGPTPE,DGPTNC,DGPTDTH,DGPINP,DGPUPD)=0
"RTN","DGPREBJ1",69,0)
 S DGPN1=0 F  S DGPN1=$O(^TMP($J,"SDAMA301",DGPN1)) Q:'DGPN1  D
"RTN","DGPREBJ1",70,0)
 .S DGPPT=0 F  S DGPPT=$O(^TMP($J,"SDAMA301",DGPN1,DGPPT)) Q:'DGPPT  D
"RTN","DGPREBJ1",71,0)
 ..S CKAPDT=+$O(^TMP($J,"SDAMA301",DGPN1,DGPPT,DGPDT1))
"RTN","DGPREBJ1",72,0)
 ..Q:('CKAPDT!(CKAPDT>$$FMADD^XLFDT(DGPDT1,1)))
"RTN","DGPREBJ1",73,0)
 ..S DGPTOT=DGPTOT+1
"RTN","DGPREBJ1",74,0)
 ..I $P($G(^DPT(DGPPT,.35)),U)]"" S DGPTDTH=DGPTDTH+1 Q
"RTN","DGPREBJ1",75,0)
 ..; ***  Check for clinic exclusions in MAS PARAMETER File
"RTN","DGPREBJ1",76,0)
 ..S (DGPN5,DGPEXCL)=0
"RTN","DGPREBJ1",77,0)
 ..F  S DGPN5=$O(^DG(43,1,"DGPREC",DGPN5)) Q:'DGPN5!(DGPEXCL)  D
"RTN","DGPREBJ1",78,0)
 ...S:$P(^DG(43,1,"DGPREC",DGPN5,0),U)=DGPN1 DGPEXCL=1
"RTN","DGPREBJ1",79,0)
 ...I DGPEXCL S DGPTCE=DGPTCE+1 Q
"RTN","DGPREBJ1",80,0)
 ...; *** Check for eligibility exclusions inthe MAS PARAMETER File
"RTN","DGPREBJ1",81,0)
 ...N DGPAELG S (DGPN5,DGPEXCL)=0
"RTN","DGPREBJ1",82,0)
 ...F  S DGPN5=$O(^DG(43,1,"DGPREE",DGPN5)) Q:'DGPN5!(DGPEXCL)  D
"RTN","DGPREBJ1",83,0)
 ....S DGPAELG=$P($G(^DPT(DGPPT,.36)),U)
"RTN","DGPREBJ1",84,0)
 ....S:$P(^DG(43,1,"DGPREE",DGPN5,0),U)=DGPAELG DGPEXCL=1
"RTN","DGPREBJ1",85,0)
 ...I DGPEXCL S DGPTPE=DGPTPE+1 Q
"RTN","DGPREBJ1",86,0)
 ...; ***  Check for inpatient status
"RTN","DGPREBJ1",87,0)
 ...K DFN S DFN=DGPPT D INP^VADPT
"RTN","DGPREBJ1",88,0)
 ...I $G(VAIN(1))]"" S DGPINP=DGPINP+1 Q
"RTN","DGPREBJ1",89,0)
 ...; *** Check for last update in Pre-Registration Audit file
"RTN","DGPREBJ1",90,0)
 ...S DGPPRDT=DGPTOD+.9999,DGPPRDT=$O(^DGS(41.41,"ADC",DGPPT,DGPPRDT),-1)
"RTN","DGPREBJ1",91,0)
 ...S DGPNDTW=$P($G(^DG(43,1,"DGPRE")),U,2)
"RTN","DGPREBJ1",92,0)
 ...I DGPPRDT]""&(DGPNDTW]"") I $$FMDIFF^XLFDT(DGPDT,DGPPRDT,1)<DGPNDTW S DGPTNC=DGPTNC+1 Q 
"RTN","DGPREBJ1",93,0)
 ...; *** Set up entries for adding to Pre-Registration Call List file
"RTN","DGPREBJ1",94,0)
 ...K DFN S DFN=DGPPT D DEM^VADPT
"RTN","DGPREBJ1",95,0)
 ...S DGPPH=$P($P($G(^DPT(DGPPT,.13)),U),"~")
"RTN","DGPREBJ1",96,0)
 ...I DGPPH=""!(DGPPH["NO") D
"RTN","DGPREBJ1",97,0)
 ....S DGPPH=$P($G(^DPT(DGPPT,.33)),U,9)
"RTN","DGPREBJ1",98,0)
 ....I DGPPH]"" S DGPPH=$P(DGPPH,"~")_"(E)"
"RTN","DGPREBJ1",99,0)
 .... E  S DGPPH="NO PHONE"
"RTN","DGPREBJ1",100,0)
 ...;
"RTN","DGPREBJ1",101,0)
 ...I '$D(^DGS(41.42,"B",DFN)) D
"RTN","DGPREBJ1",102,0)
 ....K DD,DO S DIC="^DGS(41.42,",DIC(0)="ML"
"RTN","DGPREBJ1",103,0)
 ....S X=DFN,DGPAPT=$O(^TMP($J,"SDAMA301",DGPN1,X,DGPDT1))
"RTN","DGPREBJ1",104,0)
 ....S DIC("DR")=$P($T(FIELDS),";;",2)
"RTN","DGPREBJ1",105,0)
 ....D FILE^DICN
"RTN","DGPREBJ1",106,0)
 ....S DGPADD=DGPADD+1
"RTN","DGPREBJ1",107,0)
 ...E  D
"RTN","DGPREBJ1",108,0)
 ....S DA="",DA=$O(^DGS(41.42,"B",DFN,DA),-1)
"RTN","DGPREBJ1",109,0)
 ....Q:$P($G(^DGS(41.42,DA,0)),U,6)="Y"
"RTN","DGPREBJ1",110,0)
 ....S DIE="^DGS(41.42,"
"RTN","DGPREBJ1",111,0)
 ....S DGPAPT=$O(^TMP($J,"SDAMA301",DGPN1,DGPPT,DGPDT1))
"RTN","DGPREBJ1",112,0)
 ....S DR=$P($T(FIELDS),";;",2)
"RTN","DGPREBJ1",113,0)
 ....D ^DIE
"RTN","DGPREBJ1",114,0)
 ....S DGPUPD=DGPUPD+1
"RTN","DGPREBJ1",115,0)
 ...K DA,DR,DIE,DIC,VADM,VA,DFN,VAERR,VAIN
"RTN","DGPREBJ1",116,0)
 ;
"RTN","DGPREBJ1",117,0)
 D SETTEXT^DGPREBJ("      Total Entries Scanned: "_DGPTOT)
"RTN","DGPREBJ1",118,0)
 D SETTEXT^DGPREBJ("  Called within Time Window: "_DGPTNC)
"RTN","DGPREBJ1",119,0)
 D SETTEXT^DGPREBJ("                 Inpatients: "_DGPINP)
"RTN","DGPREBJ1",120,0)
 D SETTEXT^DGPREBJ("       Exclusions by Clinic: "_DGPTCE)
"RTN","DGPREBJ1",121,0)
 D SETTEXT^DGPREBJ("  Exclusions by Eligibility: "_DGPTPE)
"RTN","DGPREBJ1",122,0)
 D SETTEXT^DGPREBJ("        Exclusion for Death: "_DGPTDTH)
"RTN","DGPREBJ1",123,0)
 D SETTEXT^DGPREBJ(" ")
"RTN","DGPREBJ1",124,0)
 D SETTEXT^DGPREBJ("    Total Entries Added to Call List: "_DGPADD)
"RTN","DGPREBJ1",125,0)
 D SETTEXT^DGPREBJ("Total Entries Updated with New Appt.: "_DGPUPD)
"RTN","DGPREBJ1",126,0)
 D SETTEXT^DGPREBJ(" ")
"RTN","DGPREBJ1",127,0)
EXIT ;
"RTN","DGPREBJ1",128,0)
 Q
"RTN","DGPREBJ1",129,0)
SDAMAPI(DGPREI,DGPDT1) ;
"RTN","DGPREBJ1",130,0)
 ; Input: DGPDT1 - Date to look for appointments
"RTN","DGPREBJ1",131,0)
 ;
"RTN","DGPREBJ1",132,0)
 N DGPNDY S DGPNDY=$P($G(^DG(43,1,"DGPRE")),U,5)
"RTN","DGPREBJ1",133,0)
 I DGPNDY']"" D  G EXIT
"RTN","DGPREBJ1",134,0)
 . W:DGPREI !!,$P($T(MSG1),";;",2)
"RTN","DGPREBJ1",135,0)
 . D:'DGPREI SETTEXT^DGPREBJ($P($T(MSG1),";;",2)),SETTEXT^DGPREBJ("  ")
"RTN","DGPREBJ1",136,0)
 ;
"RTN","DGPREBJ1",137,0)
 I DGPREI S DGPDT=DGPDT1
"RTN","DGPREBJ1",138,0)
 E  S DGPDT=$$FMADD^XLFDT(DT,DGPNDY)
"RTN","DGPREBJ1",139,0)
 ;
"RTN","DGPREBJ1",140,0)
 S DGPDW=$$DOW^XLFDT(DGPDT,1)
"RTN","DGPREBJ1",141,0)
 I $P($G(^DG(43,1,"DGPRE")),U,6)'=1&((DGPDW=6)!(DGPDW=0)) D  G EXIT
"RTN","DGPREBJ1",142,0)
 . W:DGPREI !!,$P($T(MSG2),";;",2)
"RTN","DGPREBJ1",143,0)
 . D:'DGPREI SETTEXT^DGPREBJ($P($T(MSG2),";;",2)),SETTEXT^DGPREBJ("  ")
"RTN","DGPREBJ1",144,0)
 D SETTEXT^DGPREBJ("Running: Add New Patients to Call List for "_$$FMTE^XLFDT(DGPDT,2)),SETTEXT^DGPREBJ(" ")
"RTN","DGPREBJ1",145,0)
 ;
"RTN","DGPREBJ1",146,0)
 N DGARRAY,SDCNT
"RTN","DGPREBJ1",147,0)
 S:DGPREI DGARRAY(1)=DGPDT1_";"_DGPDT1
"RTN","DGPREBJ1",148,0)
 S:'DGPREI DGARRAY(1)=DT_";"_DGPDT
"RTN","DGPREBJ1",149,0)
 S DGARRAY("FLDS")=3,SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGPREBJ1",150,0)
 Q
"RTN","DGPREBJ1",151,0)
 ;
"RTN","DGPREBJ1",152,0)
FIELDS ;;.1///^S X=$P($G(^SC(DGPN1,0)),U,15);1///^S X=$E(VADM(1))_VA("BID");2///^S X=DGPPH;3///^S X=$G(DGPPRDT);5////^S X=DGPN1;6///^S X=DGPAPT;7///^S X=$P(^SC(DGPN1,0),U,8)
"RTN","DGPREBJ1",153,0)
 ;
"RTN","DGPREBJ1",154,0)
MSG1 ;;The 'DAYS TO PULL' is not filled in, unable to determine appoinment date.
"RTN","DGPREBJ1",155,0)
MSG2 ;;The call list is currently not being generated for weekends.
"RTN","DGPTFTR3")
0^13^B13488826
"RTN","DGPTFTR3",1,0)
DGPTFTR3 ;ALB/MJK - TRANSMISSION OF PTF/CENSUS ; 03/12/2004
"RTN","DGPTFTR3",2,0)
 ;;5.3;Registration;**568**;Aug 13, 1993
"RTN","DGPTFTR3",3,0)
 ;
"RTN","DGPTFTR3",4,0)
BULL ;CREATE BULLETIN
"RTN","DGPTFTR3",5,0)
 G BULLQ:DGTR<1
"RTN","DGPTFTR3",6,0)
 S Y=$TR($$FMTE^XLFDT(DT,"5DF")," ","0")
"RTN","DGPTFTR3",7,0)
 S ^UTILITY($J,"DGPTSTAT",1,0)="                           RUN DATE: "_Y,Y=$TR($$FMTE^XLFDT(DGSD,"5DF")," ","0")
"RTN","DGPTFTR3",8,0)
 S %="        RELEASE DATE RANGE SELECTED: "_Y_" - " S Y=$TR($$FMTE^XLFDT($P(DGED,"."),"5DF")," ","0"),^UTILITY($J,"DGPTSTAT",2,0)=%_Y
"RTN","DGPTFTR3",9,0)
 S ^UTILITY($J,"DGPTSTAT",4,0)="      TOTAL # OF "_$P(DGRTY0,U)_" RECORDS TRANSMITTED: "_$J(DGTR,6,0)
"RTN","DGPTFTR3",10,0)
 F %=3,5,6 S ^UTILITY($J,"DGPTSTAT",%,0)=" "
"RTN","DGPTFTR3",11,0)
 S ^UTILITY($J,"DGPTSTAT",7,0)="LOCAL MESSAGE ID#'S - COMPARE TO AUSTIN'S CONFIRMATION MESSAGES",DGUT=8,%=""
"RTN","DGPTFTR3",12,0)
 F DGID=0:0 S DGID=$O(DGIDN(DGID)) Q:'DGID  S %=%_DGIDN(DGID)_"     " I $L(%)>70 S ^UTILITY($J,"DGPTSTAT",DGUT,0)=%,%="",DGUT=DGUT+1
"RTN","DGPTFTR3",13,0)
 I $L(%) S ^UTILITY($J,"DGPTSTAT",DGUT,0)=%
"RTN","DGPTFTR3",14,0)
 S XMSUB=$P(DGRTY0,U)_" TRANSMISSION STATISTICS SUMMARY("_$S(VATNAME["125":125,1:80)_" COLS)",XMDUZ=.5,XMTEXT="^UTILITY($J,""DGPTSTAT"",",XMY(DUZ)=""
"RTN","DGPTFTR3",15,0)
 D ^XMD
"RTN","DGPTFTR3",16,0)
BULLQ K DGD,J,DGCNT,VAT,VATERR,VATNAME,DGID,DGIDN,DGSDI,DGTR,DGUT,XMZ,DGERR,PTF,T1,T2,Y,DFN,DGJ,DGK,XMSUB,XMTEXT,XMY,XMDUZ,% Q
"RTN","DGPTFTR3",17,0)
 ;
"RTN","DGPTFTR3",18,0)
SCAN ; -- see if all released recs are xmited
"RTN","DGPTFTR3",19,0)
 F DGD=DGSD-.01:0 S DGD=$O(^DGP(45.83,DGD)) Q:'DGD!(DGD>DGED)  D SCAN1
"RTN","DGPTFTR3",20,0)
 Q
"RTN","DGPTFTR3",21,0)
SCAN1 ; -- scan rec log
"RTN","DGPTFTR3",22,0)
 S DGYES=1
"RTN","DGPTFTR3",23,0)
 F DGI=0:0 S DGI=$O(^DGP(45.83,DGD,"P",DGI)) Q:'DGI  I $D(^(DGI,0)),'$P(^(0),U,2) S DGYES=0 Q
"RTN","DGPTFTR3",24,0)
 I DGYES S DIE="^DGP(45.83,",DA=DGD,DR="1///TODAY" D ^DIE
"RTN","DGPTFTR3",25,0)
 K DGYES,DIE,DR,DGI
"RTN","DGPTFTR3",26,0)
 Q
"RTN","DGPTFTR3",27,0)
 ;
"RTN","DGPTFTR3",28,0)
CEN ; -- test to see if PTF rec can be sent
"RTN","DGPTFTR3",29,0)
 S Y=1
"RTN","DGPTFTR3",30,0)
 F DGCI=0:0 S DGCI=$O(^DGPT("ACENSUS",J,DGCI)) Q:'DGCI  I $D(^DGPT(DGCI,0)),$P(^(0),U,13)=DGCN S Y=0 Q
"RTN","DGPTFTR3",31,0)
 I 'Y S Y=$P(DGCN0,U,3) X ^DD("DD") W !?5,*7,"[PTF #",J," for ",$P(^DPT(+^DGPT(J,0),0),U)," cannot be transmitted until ",Y,"." S Y=+DGCN0 X ^DD("DD") W !?6,"This admission is a ",Y," Census admission.]" S Y=0
"RTN","DGPTFTR3",32,0)
 K DGCI Q
"RTN","DGPTFTR3",33,0)
 ;
"RTN","DGPTFTR3",34,0)
OPEN ;
"RTN","DGPTFTR3",35,0)
 S DGPTIFN=J,DGPTFX=""
"RTN","DGPTFTR3",36,0)
 S DIK="^DGP(45.83,DGD,""P"",",DA(1)=DGD,DA=DGPTIFN D ^DIK
"RTN","DGPTFTR3",37,0)
 I '$O(^DGP(45.83,DGD,"P",0)) S DIK="^DGP(45.83,",DA=DGD D ^DIK
"RTN","DGPTFTR3",38,0)
 D KDGP^DGPTFDEL
"RTN","DGPTFTR3",39,0)
 I DGRTY=2,$D(^DGPT(+DGPTIFN,0)) S DGPTFX=+$P(^(0),U,12) I $D(^DGPT(DGPTFX,0)),$D(^DGP(45.84,DGPTFX,0)) S DGJ=DGPTIFN,DGPTIFN=DGPTFX D KDGP^DGPTFDEL S DGPTIFN=DGJ K DGJ
"RTN","DGPTFTR3",40,0)
 K XMY
"RTN","DGPTFTR3",41,0)
 I 'DGPTFX S DGJ(1,0)="PTF Record "_DGPTIFN_" of "_$P(^DPT(+^DGPT(DGPTIFN,0),0),U)_" re-opened."
"RTN","DGPTFTR3",42,0)
 I DGPTFX S DGJ(1,0)="PTF Record #"_DGPTFX_" of "_$P(^DPT(+^DGPT(DGPTFX,0),0),U)_" re-opened for census." ;,DGJ(2,0)=" ",DGJ(3,0)="CENSUS Record #"_DGPTIFN_" has been deleted."
"RTN","DGPTFTR3",43,0)
 S XMTEXT="DGJ(",XMDUZ=.5,XMSUB=$P(DGRTY0,U)_" RECORD REOPENED",XMY(DUZ)="" D ^XMD
"RTN","DGPTFTR3",44,0)
 S DGCNT=DGSTCNT("P",DGPTIFN) K DGSTCNT("P",DGPTIFN) F K=DGCNT-.01:0 S K=$O(^XMB(3.9,DGXMZ,2,K)) Q:K'>0  K ^(K,0)
"RTN","DGPTFTR3",45,0)
 I DGRTY=2 D KDGPT^DGPTFDEL
"RTN","DGPTFTR3",46,0)
 W !,$P(DGRTY0,U)," RECORD RE-OPENED"
"RTN","DGPTFTR3",47,0)
 K DIK,DA,XMY,XMTEXT,XMDUZ,XMSUB,DGPTIFN,DGPTFX Q
"RTN","DGPTFTR3",48,0)
 ;
"RTN","DGQESC2")
0^36^B21692668
"RTN","DGQESC2",1,0)
DGQESC2 ;ALB/JFP - VIC OUTPATIENT CLINIC SCAN ROUTINE ; 03/29/2004
"RTN","DGQESC2",2,0)
 ;;5.3;Registration;**73,568**;Aug 13, 1993
"RTN","DGQESC2",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","DGQESC2",4,0)
 ;
"RTN","DGQESC2",5,0)
ENO ; -- Entry Point
"RTN","DGQESC2",6,0)
 N DIR,Y
"RTN","DGQESC2",7,0)
 ;
"RTN","DGQESC2",8,0)
 S DIR(0)="YA"
"RTN","DGQESC2",9,0)
 S DIR("A")="Download Clinics patients to the VIC card station: "
"RTN","DGQESC2",10,0)
 S DIR("B")="NO"
"RTN","DGQESC2",11,0)
 S DIR("?")="Enter yes to download data."
"RTN","DGQESC2",12,0)
 D ^DIR
"RTN","DGQESC2",13,0)
 I Y D  Q
"RTN","DGQESC2",14,0)
 .; -- New Variables
"RTN","DGQESC2",15,0)
 .N VAUTD,VAUTNI,VAUTC
"RTN","DGQESC2",16,0)
 .N DATE,DFNARR,CNT,Y,ERR,SDATE,EDATE,DFN,RESULTS
"RTN","DGQESC2",17,0)
 .N DIVFLAG,DIVISION,SELDIV
"RTN","DGQESC2",18,0)
 .N DGSUB,DGJ,DGUTD,DGWD,DGDV,ZTSTOP
"RTN","DGQESC2",19,0)
 .; -- Set Variables
"RTN","DGQESC2",20,0)
 .S VAUTD=1  ; -- All divisions selected
"RTN","DGQESC2",21,0)
 .D NOW^%DTC S DATE=%
"RTN","DGQESC2",22,0)
 .S DFNARR="^TMP(""DGQE-DFN"","_$J_")"
"RTN","DGQESC2",23,0)
 .K @DFNARR
"RTN","DGQESC2",24,0)
 .S CNT=0
"RTN","DGQESC2",25,0)
 .; -- Check for multi divisional hospital
"RTN","DGQESC2",26,0)
 .I $P(^DG(43,1,"GL"),"^",2)=1 D  Q:Y=-1
"RTN","DGQESC2",27,0)
 ..D DIVISION^VAUTOMA
"RTN","DGQESC2",28,0)
 .; -- Check for Clinics within division or all
"RTN","DGQESC2",29,0)
 .S VAUTNI=2
"RTN","DGQESC2",30,0)
 .D CLINIC^VAUTOMA
"RTN","DGQESC2",31,0)
 .I Y=-1 Q
"RTN","DGQESC2",32,0)
 .; -- Download for date range
"RTN","DGQESC2",33,0)
 .S ERR=$$SDATE^DGQESC0()
"RTN","DGQESC2",34,0)
 .I ERR=-1 Q
"RTN","DGQESC2",35,0)
 .S SDATE=ERR
"RTN","DGQESC2",36,0)
 .S ERR=$$EDATE^DGQESC0(ERR)
"RTN","DGQESC2",37,0)
 .I ERR=-1 Q
"RTN","DGQESC2",38,0)
 .S EDATE=ERR
"RTN","DGQESC2",39,0)
 .S DIR(0)="YA"
"RTN","DGQESC2",40,0)
 .; -- Task off job
"RTN","DGQESC2",41,0)
 .S DIR("A")="Task job: "
"RTN","DGQESC2",42,0)
 .S DIR("B")="YES"
"RTN","DGQESC2",43,0)
 .S DIR("?")="Enter YES/NO to determine whether job is tasked"
"RTN","DGQESC2",44,0)
 .D ^DIR
"RTN","DGQESC2",45,0)
 .Q:$D(DIRUT)
"RTN","DGQESC2",46,0)
 .I Y D  Q
"RTN","DGQESC2",47,0)
 ..D BATCH
"RTN","DGQESC2",48,0)
 ..I '$D(ZTSK) Q
"RTN","DGQESC2",49,0)
 ..W !,"Card(s) queued, task number = "_ZTSK
"RTN","DGQESC2",50,0)
 .D OUTSCAN
"RTN","DGQESC2",51,0)
 Q
"RTN","DGQESC2",52,0)
 ;
"RTN","DGQESC2",53,0)
EXIT ; -- Finish Process
"RTN","DGQESC2",54,0)
 I '$D(ZTQUEUED)&($P(RESULTS,"^",1)=0) W !!,CNT_" Outpatients down loaded to VIC work station"
"RTN","DGQESC2",55,0)
 K @DFNARR
"RTN","DGQESC2",56,0)
 Q
"RTN","DGQESC2",57,0)
 ;
"RTN","DGQESC2",58,0)
OUTSCAN ; Scan the clinics for appointments to create VIC cards
"RTN","DGQESC2",59,0)
 ;
"RTN","DGQESC2",60,0)
 N CLINIC,CLINDATE,DPTINFO,I,CLNARRAY,DGARRAY,DGDIV,SDCNT S I=1
"RTN","DGQESC2",61,0)
 K ^TMP($J,"SDAMA"),^TMP($J,"SDAMA301")
"RTN","DGQESC2",62,0)
 ;
"RTN","DGQESC2",63,0)
 I '$D(ZTQUEUED) W !!,"Note: Each Dot equals a clinic",!
"RTN","DGQESC2",64,0)
 I VAUTC,VAUTD D
"RTN","DGQESC2",65,0)
 .S CLINIC=0 F  S CLINIC=$O(^SC(CLINIC)) Q:'CLINIC  D
"RTN","DGQESC2",66,0)
 ..I $P(^SC(CLINIC,0),U,3)="C" D CBLD3(CLINIC)
"RTN","DGQESC2",67,0)
 ;
"RTN","DGQESC2",68,0)
 I VAUTC,'VAUTD S DGDIV="" D
"RTN","DGQESC2",69,0)
 .S DGDIV="" F  S DGDIV=$O(VAUTD(DGDIV)) Q:'DGDIV  D
"RTN","DGQESC2",70,0)
 ..S CLINIC=0 F  S CLINIC=$O(^SC(CLINIC)) Q:'CLINIC  D
"RTN","DGQESC2",71,0)
 ...I $P(^SC(CLINIC,0),U,3)="C",$P(^SC(CLINIC,0),U,15)=DGDIV D CBLD3(CLINIC)
"RTN","DGQESC2",72,0)
 ;
"RTN","DGQESC2",73,0)
 I 'VAUTC S CLINIC=0 F  S CLINIC=$O(VAUTC(CLINIC)) Q:'CLINIC  D CBLD3(CLINIC)
"RTN","DGQESC2",74,0)
 ;
"RTN","DGQESC2",75,0)
 D SDAMA,BLDTMP,BLDHL7
"RTN","DGQESC2",76,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301"),^TMP($J,"SDAMA")
"RTN","DGQESC2",77,0)
 Q
"RTN","DGQESC2",78,0)
CBLD3(CLINIC) ; Build array of specified Clinics for specified Divisions
"RTN","DGQESC2",79,0)
 S CLNARRAY(I)=$G(CLNARRAY(I))_CLINIC_";"
"RTN","DGQESC2",80,0)
 I $L(CLNARRAY(I))>120 S I=I+1
"RTN","DGQESC2",81,0)
 I '$D(ZTQUEUED) W "."
"RTN","DGQESC2",82,0)
 Q
"RTN","DGQESC2",83,0)
 ;
"RTN","DGQESC2",84,0)
SDAMA ; Build TMP Global with Appointment API Data for Report
"RTN","DGQESC2",85,0)
 S DGARRAY(1)=SDATE_";"_EDATE
"RTN","DGQESC2",86,0)
 S DGARRAY("FLDS")="2;3"
"RTN","DGQESC2",87,0)
 F I=1:1 Q:'$D(CLNARRAY(I))  D
"RTN","DGQESC2",88,0)
 .S DGARRAY(2)=CLNARRAY(I)
"RTN","DGQESC2",89,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGQESC2",90,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGQESC2",91,0)
 .K ^TMP($J,"SDAMA301")
"RTN","DGQESC2",92,0)
 Q
"RTN","DGQESC2",93,0)
BLDHL7 ; -- Building HL7 batch message
"RTN","DGQESC2",94,0)
 S DFN=""
"RTN","DGQESC2",95,0)
 F  S DFN=$O(@DFNARR@(DFN)) Q:'DFN  S CNT=CNT+1
"RTN","DGQESC2",96,0)
 S RESULTS=$$EVENT^DGQEHL72("A08",DFNARR)
"RTN","DGQESC2",97,0)
 I '$D(ZTQUEUED)&($P(RESULTS,"^",1)=-1) D
"RTN","DGQESC2",98,0)
 .W !,"Clinic patients not downloaded.  Error - ",$P(RESULTS,"^",2)
"RTN","DGQESC2",99,0)
 ; -- Clean up variables
"RTN","DGQESC2",100,0)
 D EXIT
"RTN","DGQESC2",101,0)
 Q
"RTN","DGQESC2",102,0)
 ;
"RTN","DGQESC2",103,0)
BLDTMP ;
"RTN","DGQESC2",104,0)
 ; -- Building Temporary Storage Data
"RTN","DGQESC2",105,0)
 S (ZTSTOP,CLINIC)=0 F  S CLINIC=$O(^TMP($J,"SDAMA",CLINIC)) Q:'CLINIC!(ZTSTOP)  D
"RTN","DGQESC2",106,0)
 .I $$S^%ZTLOAD S ZTSTOP=1 Q
"RTN","DGQESC2",107,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA",CLINIC,DFN)) Q:'DFN  D
"RTN","DGQESC2",108,0)
 ..S CLINDATE=0 F  S CLINDATE=$O(^TMP($J,"SDAMA",CLINIC,DFN,CLINDATE)) Q:'CLINDATE  D
"RTN","DGQESC2",109,0)
 ...I $P($P(^TMP($J,"SDAMA",CLINIC,DFN,CLINDATE),U,3),";")="R" S @DFNARR@(DFN)=""
"RTN","DGQESC2",110,0)
 Q
"RTN","DGQESC2",111,0)
 ;
"RTN","DGQESC2",112,0)
CHKDIV ; -- Check to see if clinic is part of Division selected
"RTN","DGQESC2",113,0)
 ; -- re-sequences array
"RTN","DGQESC2",114,0)
 S DGSUB="" F DGJ=1:1 S DGSUB=$O(VAUTD(DGSUB)) Q:DGSUB=""  S DGUTD(DGJ)=$G(VAUTD(DGSUB))
"RTN","DGQESC2",115,0)
 ;
"RTN","DGQESC2",116,0)
 S DIVFLAG=0
"RTN","DGQESC2",117,0)
 S DGWD=CLINIC
"RTN","DGQESC2",118,0)
 I DGWD S DGDV=$S('$D(^SC(DGWD,0)):0,+$P(^(0),"^",15):$P(^(0),"^",15),1:$O(^DG(40.8,0)))
"RTN","DGQESC2",119,0)
 I DGDV=0 S DIVFLAG=0 Q
"RTN","DGQESC2",120,0)
 S DIVISION=$P($G(^DG(40.8,DGDV,0)),U,1)
"RTN","DGQESC2",121,0)
 I DIVISION="" S DIVFLAG=0 Q
"RTN","DGQESC2",122,0)
 ;W !,"DIVISION = ",DIVISION
"RTN","DGQESC2",123,0)
 F DGJ=1:1 S SELDIV=DGUTD(DGJ) D  Q:'$D(DGUTD(DGJ+1))
"RTN","DGQESC2",124,0)
 .;W !,"SELDIV = ",SELDIV
"RTN","DGQESC2",125,0)
 .I SELDIV=DIVISION S DIVFLAG=1 Q 
"RTN","DGQESC2",126,0)
 Q
"RTN","DGQESC2",127,0)
 ;
"RTN","DGQESC2",128,0)
BATCH ; -- Entry point for placing cards on hold
"RTN","DGQESC2",129,0)
 N ZTRTN,ZTDESC,ZTIO,ZTDTH,ZTSAVE,G
"RTN","DGQESC2",130,0)
 ;
"RTN","DGQESC2",131,0)
 S ZTRTN="OUTSCAN^DGQESC2"
"RTN","DGQESC2",132,0)
 S ZTDESC="Download Outpatients to VIC work station via HL7"
"RTN","DGQESC2",133,0)
 S ZTIO=""
"RTN","DGQESC2",134,0)
 K ZTDTH
"RTN","DGQESC2",135,0)
 ;D NOW^%DTC S ZTDTH=%
"RTN","DGQESC2",136,0)
 F G="VAUTD","VAUTC","CNT","DFNARR","SDATE","EDATE" S:$D(@G) ZTSAVE(G)=""
"RTN","DGQESC2",137,0)
 S ZTSAVE("VAUTD(")="",ZTSAVE("VAUTC(")=""
"RTN","DGQESC2",138,0)
 D ^%ZTLOAD
"RTN","DGQESC2",139,0)
 Q
"RTN","DGQESC2",140,0)
 ;
"RTN","DGQESC2",141,0)
END ; -- End of Code
"RTN","DGQESC2",142,0)
 Q
"RTN","DGQESC2",143,0)
 ;
"RTN","DGREGE")
0^14^B14087060
"RTN","DGREGE",1,0)
DGREGE ;ALB/JDS - EDIT REGISTRATIONS/DISPOSITIONS ; 04/30/2004
"RTN","DGREGE",2,0)
 ;;5.3;Registration;**24,161,151,459,568**;Aug 13, 1993
"RTN","DGREGE",3,0)
 N SDISHDL
"RTN","DGREGE",4,0)
A W !! S DIC=2,DIC(0)="AEQM" D ^DIC K DIC G Q:Y<0 S (DFN,DA)=+Y
"RTN","DGREGE",5,0)
 I '$O(^DPT(DA,"DIS",0)) W !!,"No registrations to print from.",!! G A
"RTN","DGREGE",6,0)
F11 R !!,"Registration date/time: ",X:DTIME G A:'$T!(X?1"^".E)!(X=""),NUM:$L(X)<7 S %DT="T" D ^%DT S DFN1=9999999-Y G W1:$D(^DPT(DA,"DIS",DFN1)) W !!
"RTN","DGREGE",7,0)
HELP W ! S J=0 F I=0:0 S I=$O(^DPT(DA,"DIS",I)) Q:'I  S J=J+1,L=+(^(I,0))_"00000" W $J(J,2),".  ",$$FMTE^XLFDT($E(L,1,12),"5Z") W ?$X\40+1*40 W:$X>75 ! Q:J>20
"RTN","DGREGE",8,0)
 W !,"Enter the date and time, Entry #, or 'L' for the last registration,",!," to select the registration you wish to edit" G F11
"RTN","DGREGE",9,0)
NUM ; choose by number of find last registration
"RTN","DGREGE",10,0)
 S DFN1=0
"RTN","DGREGE",11,0)
 I X="L" S DFN1=$O(^DPT(DA,"DIS",0)) ; get last
"RTN","DGREGE",12,0)
 F I=1:1:+X S DFN1=$O(^DPT(DA,"DIS",DFN1)) Q:'DFN1
"RTN","DGREGE",13,0)
 G HELP:'DFN1
"RTN","DGREGE",14,0)
 W "   ",$$FMTE^XLFDT(9999999-DFN1,"5Z"),!!
"RTN","DGREGE",15,0)
W1 S DA=DFN1,DA(1)=DFN,L=$G(^DPT(DFN,"DIS",DFN1,0)),DP=2.101,DR=$S($P(L,U,6):"[DGREGE]",1:"[DGREGEO]")
"RTN","DGREGE",16,0)
 I $P(L,U,18) S (SDISHDL,^TMP("SDEVT HANDLE",$J))=$G(^TMP("SDEVT HANDLE",$J))+1 D BEFORE^DGDIS(DFN,9999999-DFN1,9,SDISHDL)
"RTN","DGREGE",17,0)
 S DIE="^DPT(",DA=DFN D ^DIE K DE,DQ,DIE,DR S DIE="^DPT("_DFN_",""DIS"",",DGXXXD=0 D EL
"RTN","DGREGE",18,0)
 N DGL
"RTN","DGREGE",19,0)
 S DGL=$G(^DPT(DFN,"DIS",DFN1,0))
"RTN","DGREGE",20,0)
 I $P(DGL,U,18) D
"RTN","DGREGE",21,0)
 . I "^0^1^"[(U_$P(DGL,U,2)_U),$P(DGL,U,6) D CO(DFN,9999999-DFN1,SDISHDL)
"RTN","DGREGE",22,0)
 . D EVT^DGDIS(DFN,9999999-DFN1,9,SDISHDL)
"RTN","DGREGE",23,0)
 . D VALIDATE^DGDIS(DFN,DFN1) ; -- call c/o validator
"RTN","DGREGE",24,0)
 G A
"RTN","DGREGE",25,0)
 ;
"RTN","DGREGE",26,0)
Q K %,%H,%X,%Y,C,D0,D1,DA,DFN,DFN1,DIE,DP,I,J,L,X,Y
"RTN","DGREGE",27,0)
 Q
"RTN","DGREGE",28,0)
 ;
"RTN","DGREGE",29,0)
DT I Y X ^DD("DD") W Y
"RTN","DGREGE",30,0)
 Q
"RTN","DGREGE",31,0)
EL W !!,"Updating eligibility status for this registration...",!
"RTN","DGREGE",32,0)
 S DA=DFN1,DIE("NO^")="",DA(1)=DFN,DP=2.101,DGXXX=$S($D(^DPT(DFN,.361)):$P(^(.361),"^",1),1:""),DGXXX1=$S($D(^DPT(DFN,"DIS",DFN1,0)):^(0),1:"") Q:'DGXXX1  S DGXXX2=+$P(DGXXX1,"^",13),DR="14///"_$S(DGXXX="V":1,1:0)
"RTN","DGREGE",33,0)
 I $D(^DIC(8,DGXXX2,0)),$P(^(0),"^",5)="Y",$P(^(0),"^",4)=1!($P(^(0),"^",4)=3) S DGXXX3=$S($D(^DPT(DFN,.3)):$P(^(.3),"^",2),1:""),DR=DR_";15///1;16//"_DGXXX3
"RTN","DGREGE",34,0)
 E  S DR=DR_";15///NO"
"RTN","DGREGE",35,0)
 S:$P(DGXXX1,"^",17) DR=DR_";17///@" D ^DIE G ELQ:DGXXXD
"RTN","DGREGE",36,0)
 S DGXXXD=0 D SEG^DGA4004 I DGSEG W !!,"Disposition on AMIS Segment ",DGSEG," - ",$S($D(^DG(391.1,+DGSEG,0)):$P(^(0),"^",1),1:"SEGMENT NAME UNKNOWN") K DR S DR="17///"_DGSEG D ^DIE K DE,DQ,DIE,DR
"RTN","DGREGE",37,0)
 E  W !!,"Patient falls into a means test category...AMIS 401-420 segment will be",!,"determined at time the report is generated..."
"RTN","DGREGE",38,0)
ELQ W ! K DGXXX,DGXXX1,DGXXX2,DGXXX3,DGXXXD,DR,DIE("NO^"),DGSEG Q
"RTN","DGREGE",39,0)
 ;
"RTN","DGREGE",40,0)
CO(DFN,SDDT,SDISHDL) ; -- ask check out questions
"RTN","DGREGE",41,0)
 N DFN1,SDCOQUIT,SDIS,SDOE,SDPMTDF
"RTN","DGREGE",42,0)
 S SDOE=$$GETDISP^SDVSIT2(DFN,SDDT) G COQ:'SDOE
"RTN","DGREGE",43,0)
 S SDIS=$G(^DPT(DFN,"DIS",9999999-SDDT,0))
"RTN","DGREGE",44,0)
 I '$$SCE^DGSDU(+SDOE,7,0)!($P($G(^TMP("SDEVT",$J,SDISHDL,3,"DIS",0,"BEFORE")),"^",13)'=$P(SDIS,"^",13)) D INT^SDCO6(SDOE,.SDCOQUIT)
"RTN","DGREGE",45,0)
 I '$D(SDCOQUIT) D
"RTN","DGREGE",46,0)
 .S SDPMTDF=$S($P(^DG(43,1,0),"^",32):1,$P($G(^DIC(37,+$P(SDIS,"^",7),0)),"^")="SCHEDULE FUTURE APPOINTMENT":1,1:0)
"RTN","DGREGE",47,0)
 . I $$ASK^SDCO6(SDPMTDF) D EN^SDCO(SDOE,SDISHDL,1)
"RTN","DGREGE",48,0)
COQ Q
"RTN","DGRP14")
0^15^B3636068
"RTN","DGRP14",1,0)
DGRP14 ;ALB/MRL - REGISTRATION SCREEN 14/APPOINTMENT INFORMATION ;03/05/2004
"RTN","DGRP14",2,0)
 ;;5.3;Registration;**568**;Aug 13, 1993
"RTN","DGRP14",3,0)
 S DGRPS=14 D H^DGRPU S (Z,DGRPW)=1 D WW^DGRPV W " Enrollment Clinics: " S I1="" F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  I $P(^(I,0),U,2)'="I" S I1=1,X=$S($D(^SC(+^(0),0)):$P(^(0),U,1)_", ",1:"") W:(79-$X)<$L(X) !?24 W X
"RTN","DGRP14",4,0)
 W:'I1 "NOT ACTIVELY ENROLLED IN ANY CLINICS AT THIS TIME" W ! S Z=2 D WW^DGRPV W "     Pending Appt's",?18,": " S I1="",I2=DT_".9999"
"RTN","DGRP14",5,0)
 N DGARRAY,APTDT,CLNAM S DGARRAY("FLDS")="1;2",DGARRAY(4)=DFN,DGARRAY(1)=DT,DGARRAY("SORT")="P",I1=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGRP14",6,0)
 I $D(^TMP($J,"SDAMA301",101)) W "Appointment Database is unavailable." G Q
"RTN","DGRP14",7,0)
 S APTDT=0 F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,APTDT)) Q:'APTDT  D
"RTN","DGRP14",8,0)
 .S CLNAM=$P($P(^TMP($J,"SDAMA301",DFN,APTDT),U,2),";",2)
"RTN","DGRP14",9,0)
 .S X=$S(CLNAM]"":CLNAM,1:"UNKNOWN CLINIC")_" ("_$$FMTE^DILIBF(APTDT,"5U")_"), " W:(79-$X)<$L(X) !?24 W X
"RTN","DGRP14",10,0)
 I 'I1 W "NO PENDING APPOINTMENTS ON FILE"
"RTN","DGRP14",11,0)
Q K I,I1,I2,X,Y,DGARRAY,APTDT,CLNAM G ^DGRPP
"RTN","DGRP15")
0^16^B4585956
"RTN","DGRP15",1,0)
DGRP15 ;ALB/MTC - TRICARE DEMOGRAPHIC DATA ;03/05/2004
"RTN","DGRP15",2,0)
 ;;5.3;Registration;**114,239,568**;Aug 13, 1993
"RTN","DGRP15",3,0)
 ;
"RTN","DGRP15",4,0)
EN ;
"RTN","DGRP15",5,0)
 N X,Y,DGSA
"RTN","DGRP15",6,0)
1 S DGSA=""
"RTN","DGRP15",7,0)
 ;-- get sponsor info
"RTN","DGRP15",8,0)
 D GET
"RTN","DGRP15",9,0)
 ;-- draw header
"RTN","DGRP15",10,0)
 S (DGRPS,DGRPW)=15 D H^DGRPU
"RTN","DGRP15",11,0)
 ;--
"RTN","DGRP15",12,0)
 S Z=1 D WW^DGRPV W " Sponsor Information:"
"RTN","DGRP15",13,0)
 I DGSA D
"RTN","DGRP15",14,0)
 . S Y=1,X=0 F  S X=$O(DGSA(X)) Q:'X  D DISPON(X) S Y=Y+1 Q:Y>2
"RTN","DGRP15",15,0)
 E   W !,!,"No Sponsor Information available."
"RTN","DGRP15",16,0)
 ;
"RTN","DGRP15",17,0)
 W !
"RTN","DGRP15",18,0)
2 ;-- Primary Care Manager
"RTN","DGRP15",19,0)
 ;
"RTN","DGRP15",20,0)
 ;-- get primary care data
"RTN","DGRP15",21,0)
 D
"RTN","DGRP15",22,0)
 .N CT,GBL S GBL="GBL"
"RTN","DGRP15",23,0)
 .D TDATA^DGSDUTL(DFN,.CT,DT)
"RTN","DGRP15",24,0)
 .I CT>12 S GBL(11,0)="" D
"RTN","DGRP15",25,0)
 ..S GBL(12,0)="      *** Additional assignment information exists ***"
"RTN","DGRP15",26,0)
 .S CT=0 F  S CT=$O(GBL(CT)) Q:'CT!(CT>12)  W !,GBL(CT,0)
"RTN","DGRP15",27,0)
 .Q
"RTN","DGRP15",28,0)
 ;
"RTN","DGRP15",29,0)
 ;-- goto main registration screen processing routine
"RTN","DGRP15",30,0)
 G ^DGRPP
"RTN","DGRP15",31,0)
 ;
"RTN","DGRP15",32,0)
 Q
"RTN","DGRP15",33,0)
 ;
"RTN","DGRP15",34,0)
DISPON(SPON) ;-- This function will display the Sponsor designated by
"RTN","DGRP15",35,0)
 ;  SPON.
"RTN","DGRP15",36,0)
 ;
"RTN","DGRP15",37,0)
 W !,!,"    Name : " S Z=$P(DGSA(SPON,"SPON"),U),Z1=30 D WW1^DGRPV
"RTN","DGRP15",38,0)
 W ?40,"Military Status : ",$P(DGSA(SPON,"SPON"),U,4)
"RTN","DGRP15",39,0)
 W !,"     DOB : " S Z=$P(DGSA(SPON,"SPON"),U,2),Z1=28 D WW1^DGRPV
"RTN","DGRP15",40,0)
 W ?35,"Branch of Service : ",$P(DGSA(SPON,"SPON"),U,5)
"RTN","DGRP15",41,0)
 W !,"     SSN : " S Z=$P(DGSA(SPON,"SPON"),U,3),Z1=15 D WW1^DGRPV
"RTN","DGRP15",42,0)
 W ?52,"Rank : ",$P(DGSA(SPON,"SPON"),U,6)
"RTN","DGRP15",43,0)
 W !,"  Prefix : " S Z=$P(DGSA(SPON,"REL"),U,2),Z1=12 D WW1^DGRPV
"RTN","DGRP15",44,0)
 W ?52,"Type : ",$P(DGSA(SPON,"REL"),U,3)
"RTN","DGRP15",45,0)
 S Y=$P(DGSA(SPON,"REL"),U,4) X ^DD("DD")
"RTN","DGRP15",46,0)
 W !,"   Effective Date : ",Y
"RTN","DGRP15",47,0)
 S Y=$P(DGSA(SPON,"REL"),U,5) X ^DD("DD")
"RTN","DGRP15",48,0)
 W ?35,"Expiration Date: ",Y
"RTN","DGRP15",49,0)
 Q
"RTN","DGRP15",50,0)
 ;
"RTN","DGRP15",51,0)
GET ;-- get sponsor information and populate the DGSA array.
"RTN","DGRP15",52,0)
 D GET^IBCNSU4(DFN,.DGSA)
"RTN","DGRP15",53,0)
GETQ Q
"RTN","DGRP15",54,0)
 ;
"RTN","DGRP15",55,0)
EDIT ;-- edit sponsor or primary care ... called from DGRPE
"RTN","DGRP15",56,0)
 I DGRPANN["1" D
"RTN","DGRP15",57,0)
 . D SPON^IBCNSU41(DFN)
"RTN","DGRP15",58,0)
 I DGRPANN["2" D
"RTN","DGRP15",59,0)
 . W !,"Edit Primary Provider information." H 3 Q
"RTN","DGRP15",60,0)
 ;
"RTN","DGRP15",61,0)
 Q
"RTN","DGRP15",62,0)
 ;
"RTN","DGRPC")
0^17^B23345005
"RTN","DGRPC",1,0)
DGRPC ;ALB/MRL/PJR/PHH - CHECK CONSISTENCY OF PATIENT DATA ; 10/13/04 12:41pm
"RTN","DGRPC",2,0)
 ;;5.3;Registration;**108,121,314,301,470,489,505,451,568**;Aug 13, 1993
"RTN","DGRPC",3,0)
 ;
"RTN","DGRPC",4,0)
 ;linetags in routines correspond to IEN of file 38.6
"RTN","DGRPC",5,0)
 ;
"RTN","DGRPC",6,0)
 ;variables:  DGVT = 1 if VETERAN? = YES, 0 if NO
"RTN","DGRPC",7,0)
 ;            DGSC = 1 if SC? = YES, 0 if NO
"RTN","DGRPC",8,0)
 ;            DGCD = 0 node of file EC file (#8)
"RTN","DGRPC",9,0)
 ;        DGRPCOLD = old inconsistencies for pt (separated by ,s)
"RTN","DGRPC",10,0)
 ;           DGCHK = #s to check (separated by ,s)
"RTN","DGRPC",11,0)
 ;           DGLST = next # to check
"RTN","DGRPC",12,0)
 ;            DGER = inconsistencies found (separated by ,s)
"RTN","DGRPC",13,0)
 ;           DGNCK = 1 if missing key elig data...can't process further
"RTN","DGRPC",14,0)
 ;
"RTN","DGRPC",15,0)
 N ANYMSE,CONARR,CONCHK,CONERR,CONSPEC,LOC
"RTN","DGRPC",16,0)
 N MSECHK,MSESET,MSERR,MSDATERR,RANGE,RANSET
"RTN","DGRPC",17,0)
 D ON I $S(('$D(DFN)#2):1,'$D(^DPT(DFN,0)):1,DGER:1,1:0) G KVAR^DGRPCE:DGER
"RTN","DGRPC",18,0)
EN S:'$D(DGEDCN)#2 DGEDCN=0 I DGEDCN W !!,"Checking data for consistency..."
"RTN","DGRPC",19,0)
 D START:DGEDCN
"RTN","DGRPC",20,0)
 F I=0,.13,.141,.22,.24,.3,.31,.311,.32,.321,.322,.33,.35,.36,.362,.38,.39,.52,.53,"TYPE","VET" S DGP(I)=$G(^DPT(DFN,I))
"RTN","DGRPC",21,0)
 ;get old inconsistencies
"RTN","DGRPC",22,0)
 S DGRPCOLD="," I $D(^DGIN(38.5,DFN)) F I=0:0 S I=$O(^DGIN(38.5,DFN,"I",I)) Q:'I  S DGRPCOLD=DGRPCOLD_I_","
"RTN","DGRPC",23,0)
 ;find consistencies to check/not check
"RTN","DGRPC",24,0)
 S DGCHK="," F I=0:0 S I=$O(^DGIN(38.6,I)) Q:'I  I $D(^(I,0)),$S(I=2:0,I=51:0,I=9:1,I=10:1,I=13:1,I=14:1,I=22:1,I=52:1,I=53:1,'$P(^(0),"^",5):1,1:0),I'=99 S DGCHK=DGCHK_I_","
"RTN","DGRPC",25,0)
 S DGVT=$S(DGP("VET")="Y":1,1:0),DGSC=$S($P(DGP(.3),"^",1)="Y":1,1:0),DGCD=$S($D(^DIC(8,+DGP(.36),0)):^(0),1:""),(DGCT,DGER,DGNCK)="" I 'DGVT,$D(^DG(391,+DGP("TYPE"),0)),$P(^(0),"^",2) S DGVT=2
"RTN","DGRPC",26,0)
 S DGLST=+$P(DGCHK,",",2) G @DGLST
"RTN","DGRPC",27,0)
1 S DGD=$P(DGP(0),"^",1) I DGD?1L.E!(DGD?.E1L.E)!(DGD="") S X=1 D COMB,NEXT I +DGLST'=2 G @DGLST
"RTN","DGRPC",28,0)
 S I1=0 F I=1:1:$L(DGD) Q:I1  S J=$E(DGD,I) I J?1NP,$A(J)>32,J'=",",J'="-",J'=".",J'="'" S I1=1
"RTN","DGRPC",29,0)
 I I1 S X=1 D COMB
"RTN","DGRPC",30,0)
 D NEXT I +DGLST'=2 G @DGLST
"RTN","DGRPC",31,0)
2 S I1=0 F I=0:0 S I=$O(^DPT(DFN,.01,I)) Q:'I!(I1)  I $P(^(I,0),"^",1)'?1A.E S I1=1
"RTN","DGRPC",32,0)
 I I1 S X=2 D COMB
"RTN","DGRPC",33,0)
 D NEXT I +DGLST>7!('DGLST) G @DGLST
"RTN","DGRPC",34,0)
3 ;
"RTN","DGRPC",35,0)
4 ;
"RTN","DGRPC",36,0)
5 ;
"RTN","DGRPC",37,0)
6 ;
"RTN","DGRPC",38,0)
7 F I=2,3,5,8,9 I $P(DGP(0),"^",I)="" S X=$S(I=2:3,I=3:4,I=5:5,I=8:6,1:7) D COMB:DGCHK[(","_X_",")
"RTN","DGRPC",39,0)
 S DGLST=7 G:DGCHK'[",7," FIND^DGRPC2 D NEXT I +DGLST'=8 G @DGLST
"RTN","DGRPC",40,0)
8 S I1=0,DGD=$G(^DPT(DFN,.11)) F I=1,4,5,6,7 Q:I1  I $P(DGD,"^",I)="" S I1=1
"RTN","DGRPC",41,0)
 I I1 S X=8 D COMB
"RTN","DGRPC",42,0)
 D NEXT I +DGLST'=9 G @DGLST
"RTN","DGRPC",43,0)
9 I DGP("VET")="" S X=9,DGNCK=1 D COMB
"RTN","DGRPC",44,0)
 D NEXT I +DGLST'=10 G @DGLST
"RTN","DGRPC",45,0)
10 I $P(DGP(.3),"^",1)="" S X=10,DGNCK=1 D COMB
"RTN","DGRPC",46,0)
 D NEXT I +DGLST'=11 G @DGLST
"RTN","DGRPC",47,0)
11 I 'DGVT,DGSC S X=11 D COMB
"RTN","DGRPC",48,0)
 D NEXT I +DGLST'=12 G @DGLST
"RTN","DGRPC",49,0)
12 I DGSC,DGVT,$P(DGP(.3),"^",2)="" S X=12 D COMB
"RTN","DGRPC",50,0)
 D NEXT I +DGLST'=13 G @DGLST
"RTN","DGRPC",51,0)
13 I '$D(^DIC(21,+$P(DGP(.32),"^",3),0)) S X=13,DGNCK=1 D COMB
"RTN","DGRPC",52,0)
 D NEXT I +DGLST'=14 G @DGLST
"RTN","DGRPC",53,0)
14 I $P(DGCD,"^",1)="" S X=14,DGNCK=1 D COMB
"RTN","DGRPC",54,0)
 ;
"RTN","DGRPC",55,0)
 ;Check Patient Eligibilities multiple if Primary Elig Code defined
"RTN","DGRPC",56,0)
 I DGP(.36),'$D(^DPT(DFN,"E",+DGP(.36),0)) D PRI^VADPT60 ;5.3*301
"RTN","DGRPC",57,0)
 ;
"RTN","DGRPC",58,0)
 D NEXT I +DGLST'=15 G FIND^DGRPC2:+DGLST=35,@DGLST
"RTN","DGRPC",59,0)
15 I $P($G(^DPT(DFN,.15)),"^",2)]"",$P(DGP(.3),"^",7)="" S X=15 D COMB
"RTN","DGRPC",60,0)
 D NEXT I +DGLST'=16 G FIND^DGRPC2:+DGLST=35,@DGLST
"RTN","DGRPC",61,0)
16 D H^DGUTL I +DGP(.35)>DGTIME S X=16 D COMB
"RTN","DGRPC",62,0)
 D NEXT I +DGLST'=17 G FIND^DGRPC2:+DGLST=35,@DGLST
"RTN","DGRPC",63,0)
17 K DGDATE,DGTIME
"RTN","DGRPC",64,0)
 N SDARRAY,SDCLIEN,SDDATE
"RTN","DGRPC",65,0)
 S I1=0,DGD=DT
"RTN","DGRPC",66,0)
 S SDARRAY("FLDS")=3
"RTN","DGRPC",67,0)
 S SDARRAY(4)=DFN
"RTN","DGRPC",68,0)
 I +DGP(.35),$$SDAPI^SDAMA301(.SDARRAY) D
"RTN","DGRPC",69,0)
 .Q:$D(^TMP($J,"SDAMA301",101))
"RTN","DGRPC",70,0)
 .S SDCLIEN=0
"RTN","DGRPC",71,0)
 .F  S SDCLIEN=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN)) Q:'SDCLIEN!(I1)  D
"RTN","DGRPC",72,0)
 ..S SDDATE=0
"RTN","DGRPC",73,0)
 ..F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE)) Q:'SDDATE!(I1)  D
"RTN","DGRPC",74,0)
 ...S X=$P($P(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE),"^",3),";")
"RTN","DGRPC",75,0)
 ...I X=""!(X="I") S I1=1
"RTN","DGRPC",76,0)
 K ^TMP($J,"SDAMA301")
"RTN","DGRPC",77,0)
 I I1 S X=17 D COMB
"RTN","DGRPC",78,0)
 ;
"RTN","DGRPC",79,0)
END ; end of routine...find next check to execute (or goto end)
"RTN","DGRPC",80,0)
 S:DGNCK DGLST=35 G:DGCHK'[",35,"&(DGNCK) FIND^DGRPC2 D NEXT G @DGLST
"RTN","DGRPC",81,0)
 ;
"RTN","DGRPC",82,0)
COMB ;record inconsistency
"RTN","DGRPC",83,0)
 S DGCT=DGCT+1,DGER=DGER_X_",",DGLST=X Q
"RTN","DGRPC",84,0)
 Q
"RTN","DGRPC",85,0)
 ;
"RTN","DGRPC",86,0)
NEXT ; find the next consistency check to check (goto end if can't process further)
"RTN","DGRPC",87,0)
 S I=$F(DGCHK,(","_DGLST_",")),DGLST=+$E(DGCHK,I,999) I +DGLST,DGLST<18 Q
"RTN","DGRPC",88,0)
 I +DGLST,DGNCK,+DGLST>17,+DGLST<36 S DGLST=35 Q:DGCHK'[",35,"  G NEXT
"RTN","DGRPC",89,0)
 S:'+DGLST DGLST="END^DGRPC3" I +DGLST S DGLST=DGLST_"^DGRPC"_$S(+DGLST<43:1,+DGLST<79:2,1:3)
"RTN","DGRPC",90,0)
 Q
"RTN","DGRPC",91,0)
 ;
"RTN","DGRPC",92,0)
PAT ;check inconsistencies for a selected patient
"RTN","DGRPC",93,0)
 D ON G KVAR^DGRPCE:DGER W !! S DIC="^DPT(",DIC(0)="AEQMZ",DIC("A")="Check consistency for which PATIENT: " D ^DIC K DIC G KVAR^DGRPCE:Y'>0 S DFN=+Y,DGEDCN=1 D DGRPC G PAT
"RTN","DGRPC",94,0)
 ;
"RTN","DGRPC",95,0)
START ;record start time for checker
"RTN","DGRPC",96,0)
 S DGSTART=$H Q
"RTN","DGRPC",97,0)
 ;
"RTN","DGRPC",98,0)
TIME ;record end time for checker
"RTN","DGRPC",99,0)
 Q:'$D(DGSTART)#2  S DGEND=$H,X=$P(DGSTART,",",2),X1=$P(DGEND,",",2)
"RTN","DGRPC",100,0)
 I +DGSTART=+DGEND S DGTIME=X1-X
"RTN","DGRPC",101,0)
 E  S DGTIME=(5184000-X)+X1
"RTN","DGRPC",102,0)
 I $S(DGCT:0,DGCON=1:1,1:0) G TIMEQ
"RTN","DGRPC",103,0)
 W !!,"===> ",$S(DGCT:DGCT,DGCON<2:"No",1:"All")," inconsistenc",$S(DGCT=1:"y",1:"ies")," ",$S('DGCON:"found",DGCON=1:"filed",1:"removed")," in ",DGTIME," second",$S(DGTIME=1:"",1:"s"),"..." H 1
"RTN","DGRPC",104,0)
TIMEQ K DGSTART,DGEND,DGTIME,X,X1,DGCON Q
"RTN","DGRPC",105,0)
 ;
"RTN","DGRPC",106,0)
ON ;check if checker is on
"RTN","DGRPC",107,0)
 S DGER=0 I $S('$D(^DG(43,1,0)):1,'$P(^(0),"^",37):1,1:0) S DGER=1
"RTN","DGRPC",108,0)
 S:'$D(DGEDCN) DGEDCN=0 W:DGER !!,"CONSISTENCY CHECKER TURNED OFF!!",$C(7) Q
"RTN","DGRPD")
0^18^B62004839
"RTN","DGRPD",1,0)
DGRPD ;ALB/MRL/MLR/JAN/LBD-PATIENT INQUIRY (NEW) ; 03/23/2004
"RTN","DGRPD",2,0)
 ;;5.3;Registration;**109,124,121,57,161,149,286,358,436,445,489,498,506,513,518,550,545,568**;Aug 13, 1993
"RTN","DGRPD",3,0)
 ;  *286*  Newing variables X,Y in OKLINE subroutine
"RTN","DGRPD",4,0)
 ;  *358*  If a patient is on a domiciliary ward, don't display MEANS
"RTN","DGRPD",5,0)
 ;         TEST required/Medication Copayment Exemption messages
"RTN","DGRPD",6,0)
 ;  *436*  If an inpatient is not on a domiciliary ward, don't display
"RTN","DGRPD",7,0)
 ;         Medication Copayment Exemption message
"RTN","DGRPD",8,0)
 ;  *545*  Add death information near the remarks field
"RTN","DGRPD",9,0)
 ;
"RTN","DGRPD",10,0)
SEL K DFN,DGRPOUT W ! S DIC="^DPT(",DIC(0)="AEQMZ" D ^DIC G Q:Y'>0 S DFN=+Y N Y W ! S DIR(0)="E" D ^DIR G SEL:$D(DTOUT)!($D(DUOUT)) D EN G SEL
"RTN","DGRPD",11,0)
 ;
"RTN","DGRPD",12,0)
EN ;call to display patient inquiry - input DFN
"RTN","DGRPD",13,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",14,0)
 S DGCMOR="UNSPECIFIED",DGMPI=$G(^DPT(+DFN,"MPI"))
"RTN","DGRPD",15,0)
 S DGLOCATN=$$FIND1^DIC(4,"","MX","`"_+$P(DGMPI,U,3)),DGLOCATN=$S(+DGLOCATN>0:$P($$NS^XUAF4(DGLOCATN),U),1:"NOT LISTED")
"RTN","DGRPD",16,0)
 I $D(DGMPI),$D(DGLOCATN) S DGCMOR=$P(DGLOCATN,"^")
"RTN","DGRPD",17,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",18,0)
 K DGRPOUT,DGHOW S DGABBRV=$S($D(^DG(43,1,0)):+$P(^(0),"^",38),1:0),DGRPU="UNSPECIFIED" D DEM^VADPT,HDR F I=0,.11,.13,.121,.31,.32,.36,.361,.141 S DGRP(I)=$S($D(^DPT(DFN,I)):^(I),1:"")
"RTN","DGRPD",19,0)
 S DGAD=.11,(DGA1,DGA2)=1 D A^DGRPU S DGTMPAD=0 I $P(DGRP(.121),"^",9)="Y" S DGTMPAD=$S('$P(DGRP(.121),"^",8):1,$P(DGRP(.121),"^",8)'<DT:1,1:0) I DGTMPAD S DGAD=.121,DGA1=1,DGA2=2 D A^DGRPU
"RTN","DGRPD",20,0)
 W ?1,"Address: ",$S($D(DGA(1)):DGA(1),1:"NONE ON FILE"),?40,"Temporary: ",$S($D(DGA(2)):DGA(2),1:"NO TEMPORARY ADDRESS")
"RTN","DGRPD",21,0)
 S I=2 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>50) !?10 W:'(I#2) ?51 W DGA(I)
"RTN","DGRPD",22,0)
 S DGCC=+$P(DGRP(.11),U,7),DGST=+$P(DGRP(.11),U,5),DGCC=$S($D(^DIC(5,DGST,1,DGCC,0)):$E($P(^(0),U,1),1,20)_$S($P(^(0),U,3)]"":" ("_$P(^(0),U,3)_")",1:""),1:DGRPU) W !?2,"County: ",DGCC
"RTN","DGRPD",23,0)
 S X="NOT APPLICABLE" I DGTMPAD S Y=$P(DGRP(.121),U,7) X:Y]"" ^DD("DD") S X=$S(Y]"":Y,1:DGRPU)_"-",Y=$P(DGRP(.121),U,8) X:Y]"" ^DD("DD") S X=X_$S(Y]"":Y,1:DGRPU)
"RTN","DGRPD",24,0)
 W ?42,"From/To: ",X,!?3,"Phone: ",$S($P(DGRP(.13),U,1)]"":$P(DGRP(.13),U,1),1:DGRPU),?44,"Phone: ",$S('DGTMPAD:X,$P(DGRP(.121),U,10)]"":$P(DGRP(.121),U,10),1:DGRPU) K DGTMPAD
"RTN","DGRPD",25,0)
 W !?2,"Office: ",$S($P(DGRP(.13),U,2)]"":$P(DGRP(.13),U,2),1:DGRPU)
"RTN","DGRPD",26,0)
 W !,"Bad Addr: ",$$EXTERNAL^DILFD(2,.121,"",$$BADADR^DGUTL3(+DFN))
"RTN","DGRPD",27,0)
 D CA
"RTN","DGRPD",28,0)
 I 'DGABBRV W !!?4,"POS: ",$S($D(^DIC(21,+$P(DGRP(.32),"^",3),0)):$P(^(0),"^",1),1:DGRPU),?42,"Claim #: ",$S($P(DGRP(.31),"^",3)]"":$P(DGRP(.31),"^",3),1:"UNSPECIFIED")
"RTN","DGRPD",29,0)
 I 'DGABBRV W !?2,"Relig: ",$S($D(^DIC(13,+$P(DGRP(0),"^",8),0)):$P(^(0),"^",1),1:DGRPU),?46,"Sex: ",$S($P(VADM(5),"^",2)]"":$P(VADM(5),"^",2),1:"UNSPECIFIED")
"RTN","DGRPD",30,0)
 I 'DGABBRV W ! D
"RTN","DGRPD",31,0)
 .N RACE,ETHNIC,PTR,VAL,X,DIWL,DIWR,DIWF
"RTN","DGRPD",32,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",33,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.02,PTR)) Q:'PTR  D
"RTN","DGRPD",34,0)
 ..S VAL=+$G(^DPT(DFN,.02,PTR,0))
"RTN","DGRPD",35,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,1)
"RTN","DGRPD",36,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,1) S:+$O(^DPT(DFN,.02,PTR)) VAL=VAL_", "
"RTN","DGRPD",37,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",38,0)
 .M RACE=^UTILITY($J,"W",0) S:$G(RACE(1,0))="" RACE(1,0)="UNANSWERED"
"RTN","DGRPD",39,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",40,0)
 .S PTR=0 F  S PTR=+$O(^DPT(DFN,.06,PTR)) Q:'PTR  D
"RTN","DGRPD",41,0)
 ..S VAL=+$G(^DPT(DFN,.06,PTR,0))
"RTN","DGRPD",42,0)
 ..Q:$$INACTIVE^DGUTL4(VAL,2)
"RTN","DGRPD",43,0)
 ..S VAL=$$PTR2TEXT^DGUTL4(VAL,2) S:+$O(^DPT(DFN,.06,PTR)) VAL=VAL_", "
"RTN","DGRPD",44,0)
 ..S X=VAL,DIWL=0,DIWR=30,DIWF="" D ^DIWP
"RTN","DGRPD",45,0)
 .M ETHNIC=^UTILITY($J,"W",0) S:$G(ETHNIC(1,0))="" ETHNIC(1,0)="UNANSWERED"
"RTN","DGRPD",46,0)
 .K ^UTILITY($J,"W")
"RTN","DGRPD",47,0)
 .W ?3,"Race: ",RACE(1,0),?40,"Ethnicity: ",ETHNIC(1,0)
"RTN","DGRPD",48,0)
 .F X=2:1 Q:'$D(RACE(X,0))&'$D(ETHNIC(X,0))  W !,?9,$G(RACE(X,0)),?51,$G(ETHNIC(X,0))
"RTN","DGRPD",49,0)
 I '$$OKLINE(16) G Q
"RTN","DGRPD",50,0)
 S X1=DGRP(.36),X=$P(DGRP(.361),"^",1) W !!,"Primary Eligibility: ",$S($D(^DIC(8,+X1,0)):$P(^(0),"^",1)_" ("_$S(X="V":"VERIFIED",X="P":"PENDING VERIFICATION",X="R":"PENDING REVERIFICATION",1:"NOT VERIFIED")_")",1:DGRPU)
"RTN","DGRPD",51,0)
 W !,"Other Eligibilities: " F I=0:0 S I=$O(^DIC(8,I)) Q:'I  I $D(^DIC(8,I,0)),I'=+X1 S X=$P(^(0),"^",1)_", " I $D(^DPT("AEL",DFN,I)) W:$X+$L(X)>79 !?21 W X
"RTN","DGRPD",52,0)
 ;
"RTN","DGRPD",53,0)
 ;display the catastrophic disability review date if there is one
"RTN","DGRPD",54,0)
 D CATDIS
"RTN","DGRPD",55,0)
 ;
"RTN","DGRPD",56,0)
 I $G(DGPRFLG)=1 G Q:'$$OKLINE(19) D
"RTN","DGRPD",57,0)
 . N DGPDT,DGPTM
"RTN","DGRPD",58,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",59,0)
 . S DGPDT="",DGPDT=$O(^DGS(41.41,"ADC",DFN,DGPDT),-1)
"RTN","DGRPD",60,0)
 . W !,"[PRE-REGISTER DATE:]  "_$S(DGPDT]"":$$FMTE^XLFDT(DGPDT,"1D"),1:"NONE ON FILE")
"RTN","DGRPD",61,0)
 . S DGPTM=$$PCTEAM^DGSDUTL(DFN)
"RTN","DGRPD",62,0)
 . I $P(DGPTM,U,2)]"" W !,"[PRIMARY CARE TEAM:] "_$P(DGPTM,U,2)
"RTN","DGRPD",63,0)
 . W !,$$REPEAT^XLFSTR("-",78)
"RTN","DGRPD",64,0)
 ; Check if patient is an inpatient and on a DOM ward
"RTN","DGRPD",65,0)
 ; If inpatient is on a DOM ward, don't display MT or CP messages
"RTN","DGRPD",66,0)
 ; If inpatient is NOT on a DOM ward, don't display CP message
"RTN","DGRPD",67,0)
 N DGDOM,DGDOM1,VAHOW,VAROOT,VAINDT,VAIP,VAERR
"RTN","DGRPD",68,0)
 G Q:'$$OKLINE(14)
"RTN","DGRPD",69,0)
 D DOM^DGMTR
"RTN","DGRPD",70,0)
 I '$G(DGDOM) D
"RTN","DGRPD",71,0)
 .D DIS^DGMTU(DFN)
"RTN","DGRPD",72,0)
 .D IN5^VADPT
"RTN","DGRPD",73,0)
 .I $G(VAIP(1))="" D DISP^IBARXEU(DFN,DT,3,1)
"RTN","DGRPD",74,0)
 ;I 'DGABBRV,$E(IOST,1,2)="C-" F I=$Y:1:20 W !
"RTN","DGRPD",75,0)
 D DIS^EASECU(DFN)   ;Added for LTC III (DG*5.3*518)
"RTN","DGRPD",76,0)
 S VAIP("L")=""
"RTN","DGRPD",77,0)
 I $$OKLINE(14) D INP
"RTN","DGRPD",78,0)
 I '$G(DGRPOUT),($$OKLINE(17)) D SA
"RTN","DGRPD",79,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",80,0)
Q D KVA^VADPT K %DT,D0,D1,DGA,DGA1,DGA2,DGABBRV,DGAD,DGCC,DGCMOR,DGDOM,DGLOCATN,DGMPI,DGRP,DGRPU,DGS,DGST,DGXFR0,DIC,DIR,DTOUT,DUOUT,DIRUT,DIROUT,I,I1,L,LDM,POP,SDCT,VA,X,X1,Y Q
"RTN","DGRPD",81,0)
CA ;Confidential Address
"RTN","DGRPD",82,0)
 W !!?1,"Confidential Address:  ",?44,"Confidential Address Categories:"
"RTN","DGRPD",83,0)
 N DGCABEG,DGCAEND,DGA,DGARRAY,DGERROR
"RTN","DGRPD",84,0)
 S DGCABEG=$P(DGRP(.141),U,7),DGCAEND=$P(DGRP(.141),U,8)
"RTN","DGRPD",85,0)
 I 'DGCABEG!(DGCABEG>DT)!(DGCAEND&(DGCAEND<DT)) D  Q
"RTN","DGRPD",86,0)
 .W !?9,"NO CONFIDENTIAL ADDRESS"
"RTN","DGRPD",87,0)
 .W !?1,"From/To: NOT APPLICABLE"
"RTN","DGRPD",88,0)
 S DGAD=.141,(DGA1,DGA2)=1
"RTN","DGRPD",89,0)
 D AL^DGRPU(30)
"RTN","DGRPD",90,0)
 D GETS^DIQ(2,DFN,".141*,","E","DGARRAY","DGERROR")
"RTN","DGRPD",91,0)
 ;Format Confidential Address categories
"RTN","DGRPD",92,0)
 N DGIEN,DGCAST
"RTN","DGRPD",93,0)
 S DGIEN=0
"RTN","DGRPD",94,0)
 S DGA2=2
"RTN","DGRPD",95,0)
 F  S DGIEN=$O(DGARRAY(2.141,DGIEN)) Q:'DGIEN  D
"RTN","DGRPD",96,0)
 .S DGA(DGA2)=DGARRAY(2.141,DGIEN,.01,"E")
"RTN","DGRPD",97,0)
 .S DGCAST=DGARRAY(2.141,DGIEN,1,"E")
"RTN","DGRPD",98,0)
 .S DGA(DGA2)=DGA(DGA2)_"("_$S(DGCAST="YES":"Active",1:"Inactive")_")"
"RTN","DGRPD",99,0)
 .S DGA2=DGA2+2
"RTN","DGRPD",100,0)
 S I=0 F I1=0:0 S I=$O(DGA(I)) Q:I=""  W:(I#2)!($X>43) !?9 W:'(I#2) ?44 W DGA(I)
"RTN","DGRPD",101,0)
 W !?1,"From/To:  ",$$FMTE^XLFDT(DGCABEG)_"-"_$S(DGCAEND'="":$$FMTE^XLFDT(DGCAEND),1:"UNANSWERED")
"RTN","DGRPD",102,0)
 Q
"RTN","DGRPD",103,0)
HDR I '$D(IOF) S IOP="HOME" D ^%ZIS K IOP
"RTN","DGRPD",104,0)
 ;MPI/PD CHANGE
"RTN","DGRPD",105,0)
 W @IOF,!,$P(VADM(1),"^",1),?40,$P(VADM(2),"^",2),?65,$P(VADM(3),"^",2) S X="",$P(X,"=",78)="" W !,X,!?15,"COORDINATING MASTER OF RECORD: ",DGCMOR,! Q
"RTN","DGRPD",106,0)
 ;END MPI/PD CHANGE
"RTN","DGRPD",107,0)
INP S VAIP("D")="L" D INP^DGPMV10
"RTN","DGRPD",108,0)
 S DGPMT=0
"RTN","DGRPD",109,0)
 D CS^DGPMV10 K DGPMT,DGPMIFN K:'$D(DGSWITCH) DGPMVI,DGPMDCD Q
"RTN","DGRPD",110,0)
SA F I=0:0 S I=$O(^DGS(41.1,"B",DFN,I)) G CL:'I S X=^DGS(41.1,I,0) I $P(X,"^",2)>(DT-1),$P(X,"^",13)']"",'$P(X,"^",17) S L=$P(X,"^",2) D:$$OKLINE(17) SAA Q:$G(DGRPOUT)
"RTN","DGRPD",111,0)
 Q
"RTN","DGRPD",112,0)
SAA ;Scheduled Admit Data
"RTN","DGRPD",113,0)
 W !!?14,"Scheduled Admit"
"RTN","DGRPD",114,0)
 W:$D(^DIC(42,+$P(X,U,8),0)) " on ward "_$P(^(0),U)
"RTN","DGRPD",115,0)
 W:$D(^DIC(45.7,+$P(X,U,9),0)) " for treating specialty "_$P(^(0),U)
"RTN","DGRPD",116,0)
 W " on "_$$FMTE^XLFDT(L,"5DZ")
"RTN","DGRPD",117,0)
 Q  ;SAA
"RTN","DGRPD",118,0)
 ;
"RTN","DGRPD",119,0)
CL G FA:$O(^DPT(DFN,"DE",0))="" S SDCT=0 F I=0:0 S I=$O(^DPT(DFN,"DE",I)) Q:'I  I $D(^(I,0)),$P(^(0),"^",2)'="I",$O(^(0)) S SDCT=SDCT+1 W:SDCT=1 !!,"Currently enrolled in " W:$X>50 !?22 W $S($D(^SC(+^(0),0)):$P(^(0),"^",1)_", ",1:"")
"RTN","DGRPD",120,0)
 ;
"RTN","DGRPD",121,0)
FA G:'$$OKLINE(20) RMK
"RTN","DGRPD",122,0)
 ;
"RTN","DGRPD",123,0)
 N DGARRAY,SDCNT
"RTN","DGRPD",124,0)
 S DGARRAY("FLDS")="1;2;3;18",DGARRAY(4)=DFN,DGARRAY(1)=DT,DGARRAY("SORT")="P"
"RTN","DGRPD",125,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY),CT=0 W !!,"Future Appointments: "
"RTN","DGRPD",126,0)
 I $D(^TMP($J,"SDAMA301",101)) W "Appointment Database is Unavailable" G RMK
"RTN","DGRPD",127,0)
 I $O(^TMP($J,"SDAMA301",DFN,DT))'>0 W "NONE" G RMK
"RTN","DGRPD",128,0)
 ;
"RTN","DGRPD",129,0)
 W ?22,"Date",?33,"Time",?39,"Clinic",!?22 F I=22:1:75 W "="
"RTN","DGRPD",130,0)
 F FA=DT:0 S FA=$O(^TMP($J,"SDAMA301",DFN,FA)) G RMK:'FA D  Q:CT>5
"RTN","DGRPD",131,0)
 .N STAT S STAT=$P($P(^TMP($J,"SDAMA301",DFN,FA),U,3),";")
"RTN","DGRPD",132,0)
 .S C=+$P(^TMP($J,"SDAMA301",DFN,FA),U,2) I STAT'["C" D
"RTN","DGRPD",133,0)
 ..D COV
"RTN","DGRPD",134,0)
 ..N DGAPPT S DGAPPT=$$FMTE^XLFDT($E(FA,1,12),"5Z")
"RTN","DGRPD",135,0)
 ..W !?22,$P(DGAPPT,"@"),?33,$P(DGAPPT,"@",2)
"RTN","DGRPD",136,0)
 ..W ?39,$P($P(^TMP($J,"SDAMA301",DFN,FA),U,2),";",2)," ",COV
"RTN","DGRPD",137,0)
 ..Q
"RTN","DGRPD",138,0)
 I $O(^TMP($J,"SDAMA301",DFN,FA))>0 W !,"See Scheduling options for additional appointments."
"RTN","DGRPD",139,0)
RMK I '$G(DGRPOUT),($$OKLINE(21)) W !!,"Remarks: ",$P(^DPT(DFN,0),"^",10)
"RTN","DGRPD",140,0)
 D GETS^DIQ(2,DFN_",",".351;.353;.354;.355","E","PDTHINFO")
"RTN","DGRPD",141,0)
 W !!
"RTN","DGRPD",142,0)
 W "Date of Death Information"
"RTN","DGRPD",143,0)
 W !,?5,"Date of Death: ",$G(PDTHINFO(2,DFN_",",.351,"E"))
"RTN","DGRPD",144,0)
 W !,?5,"Date of Death Source of Notification: ",$G(PDTHINFO(2,DFN_",",.353,"E"))
"RTN","DGRPD",145,0)
 W !,?5,"Date of Death Last Updated Date/Time: ",$G(PDTHINFO(2,DFN_",",.354,"E"))
"RTN","DGRPD",146,0)
 W !,?5,"Date of Death Last Edited By: ",$G(PDTHINFO(2,DFN_",",.355,"E")),!
"RTN","DGRPD",147,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301"),ADM,L,TRN,DIS,SSN,FA,C,COV,NOW,CT,DGD,DGD1,I ;Y killed after dghinqky
"RTN","DGRPD",148,0)
 Q
"RTN","DGRPD",149,0)
COV S COV=$S(+$P(^TMP($J,"SDAMA301",DFN,FA),U,18)=7:" (Collateral) ",1:"")
"RTN","DGRPD",150,0)
 S COV=COV_$S(STAT["NT":" * NO ACTION TAKEN *",STAT["N":" * NO-SHOW *",1:""),CT=CT+1 Q
"RTN","DGRPD",151,0)
 Q
"RTN","DGRPD",152,0)
 ;
"RTN","DGRPD",153,0)
OREN S XQORQUIT=1 Q:'$D(ORVP)  S DFN=+ORVP D EN R !!,"Press RETURN to CONTINUE: ",X:DTIME
"RTN","DGRPD",154,0)
 Q
"RTN","DGRPD",155,0)
OKLINE(DGLINE) ;DOES PAUSE/HEADER IF $Y EXCEEDS DGLINE
"RTN","DGRPD",156,0)
 ;
"RTN","DGRPD",157,0)
 ;IN:   DGLINE --MAX LINE COUNT W/O PAUSE
"RTN","DGRPD",158,0)
 ;OUT:  DGLINE[RETURNED] -- 0 IF TIMEOUT/UP ARROW
"RTN","DGRPD",159,0)
 ;      DGRPOUT[SET]     -- 1 IF "
"RTN","DGRPD",160,0)
 N X,Y  ;**286** MLR 09/25/00  Newing X & Y variables prior to ^DIR
"RTN","DGRPD",161,0)
 I $G(IOST)["P-" Q DGLINE ; if printer, quit
"RTN","DGRPD",162,0)
 I $Y>DGLINE N DIR S DIR(0)="E" D ^DIR D:Y HDR I 'Y S DGRPOUT=1,DGLINE=0
"RTN","DGRPD",163,0)
 Q DGLINE
"RTN","DGRPD",164,0)
 ;
"RTN","DGRPD",165,0)
CATDIS ;
"RTN","DGRPD",166,0)
 ;displays catastrophic disabity review date if there is one
"RTN","DGRPD",167,0)
 N DGCDIS
"RTN","DGRPD",168,0)
 I $$GET^DGENCDA(DFN,.DGCDIS) D
"RTN","DGRPD",169,0)
 .Q:'DGCDIS("REVDTE")
"RTN","DGRPD",170,0)
 .W !!,"Catastrophically Disabled Review Date: ",$$FMTE^XLFDT(DGCDIS("REVDTE"),1)
"RTN","DGRPD",171,0)
 Q
"RTN","DGRPD",172,0)
 ;
"RTN","DGRUGS")
0^19^B16728825
"RTN","DGRUGS",1,0)
DGRUGS ;ALB/MLI,PHH - RUG-II STATUS REPORT ; 13 SEPT 88 @2000
"RTN","DGRUGS",2,0)
 ;;5.3;Registration;**89,173,568**;Aug 13, 1993
"RTN","DGRUGS",3,0)
 ;
"RTN","DGRUGS",4,0)
EN D Q,ASK2^SDDIV G:Y<0 Q
"RTN","DGRUGS",5,0)
 N ERR S ERR=$$CHOSE^DGRUGU1()
"RTN","DGRUGS",6,0)
 I +ERR<0 G Q
"RTN","DGRUGS",7,0)
 I $D(DGCL),$D(DGW) I '+$O(DGCL(0))&(+'$O(DGW(0)))&(DGW'=1)&(DGCL'=1) Q
"RTN","DGRUGS",8,0)
 S SEL=$P(ERR,"^",2)
"RTN","DGRUGS",9,0)
ASK W !!,"Sort by (A)ssessment or (T)ransfer/Admission Date: T//" S Z="^TRANSFER/ADMISSION^ASSESSMENT" R X:DTIME G Q:X["^"!('$T) I X="" S X="T" W X
"RTN","DGRUGS",10,0)
 D IN^DGHELP
"RTN","DGRUGS",11,0)
 I %=-1 W !!,?12,"CHOOSE FROM:",!?12,"A - Date range for the search is by Assessment Date",!?12,"T - Date range is by Transfer or admission date",! S %="" G ASK
"RTN","DGRUGS",12,0)
 S DGX=$S(X="T":"AC",1:"AA")
"RTN","DGRUGS",13,0)
 D DATE^DGSDUTL G:POP Q K BEGDATE,ENDATE
"RTN","DGRUGS",14,0)
 S DGB=SDBD-.1,DGE=SDED+.9
"RTN","DGRUGS",15,0)
 S DGPGM="1^DGRUGS",DGVAR="VAUTD#^DGW#^DGB^DGE^DGX^DGCL#"
"RTN","DGRUGS",16,0)
 D ZIS^DGUTQ G:POP Q
"RTN","DGRUGS",17,0)
1 U IO S I=DGB
"RTN","DGRUGS",18,0)
 F  S I=$O(^DG(45.9,DGX,I)) Q:I'>0!(I>DGE)  D
"RTN","DGRUGS",19,0)
 .S J=""
"RTN","DGRUGS",20,0)
 .F  S J=$O(^DG(45.9,DGX,I,J)) Q:J'>0!'$D(^DG(45.9,+J,0))!'$D(^("R"))!'$D(^("C"))  D
"RTN","DGRUGS",21,0)
 ..S DGR=^("R"),DG0=^(0),DGC=^("C"),DGWD=$P(DGR,"^")
"RTN","DGRUGS",22,0)
 ..I $P(DG0,"^",6)'=3,$D(^DIC(42,+DGWD,0)) S DGS=^(0) D S
"RTN","DGRUGS",23,0)
 ..I $P(DG0,"^",6)=3,$D(^FBAAV(+DGWD,0)) S DGS=^(0) D S
"RTN","DGRUGS",24,0)
 S (DGNEW,DGPG)=0,I="" D NOW^DGPTOTRL
"RTN","DGRUGS",25,0)
 S DGFL=0,FIRST=1
"RTN","DGRUGS",26,0)
 F  S I=$O(^UTILITY($J,"S",I)) Q:I=""!(DGFL)  D
"RTN","DGRUGS",27,0)
 .D HD
"RTN","DGRUGS",28,0)
 .S FIRST=FIRST+1
"RTN","DGRUGS",29,0)
 .Q:DGFL
"RTN","DGRUGS",30,0)
 .S J=""
"RTN","DGRUGS",31,0)
 .F  S DGHJ=J,J=$O(^UTILITY($J,"S",I,J)) Q:J=""!(DGFL)  D
"RTN","DGRUGS",32,0)
 ..S K=""
"RTN","DGRUGS",33,0)
 ..F  S K=$O(^UTILITY($J,"S",I,J,K)) Q:K=""!(DGFL)  D
"RTN","DGRUGS",34,0)
 ...S L=""
"RTN","DGRUGS",35,0)
 ...F  S L=$O(^UTILITY($J,"S",I,J,K,L)) Q:L=""!(DGFL)  D
"RTN","DGRUGS",36,0)
 ....D PT
"RTN","DGRUGS",37,0)
 ....Q:DGFL
"RTN","DGRUGS",38,0)
Q W ! K %,^UTILITY($J),DG0,DGAD,DGAS,DGB,DGC,DGDV,DGE,DGHJ,DFN,DGFL
"RTN","DGRUGS",39,0)
 K DGNEW,DGNM,DGNOW,DGPG,DGPGM,DGR,DGS,DGSSN,DGVAR,DGW,DGWD,DGWN,DGX
"RTN","DGRUGS",40,0)
 K DGYR,ENDDATE,I,J,K,L,M,PG,SDBD,SDED,X,Y,VAUTD,Z,FIRST,DGCL,SEL
"RTN","DGRUGS",41,0)
 D CLOSE^DGUTQ
"RTN","DGRUGS",42,0)
 Q
"RTN","DGRUGS",43,0)
S S DGWN=$P(DGS,"^") ;ward or cnh name
"RTN","DGRUGS",44,0)
 I $P(DG0,"^",6)'=3 S DGDV=$S($P(DGS,"^",11)]"":$P(DGS,"^",11),1:$O(^DG(40.8,0))) Q:'VAUTD&'$D(VAUTD(+DGDV))
"RTN","DGRUGS",45,0)
 I $P(DG0,"^",6)'=3 Q:'$D(DGW)  Q:'DGW&'$D(DGW(+DGWD))
"RTN","DGRUGS",46,0)
 I $P(DG0,"^",6)=3 Q:'$D(DGCL)  Q:'DGCL&'$D(DGCL(+DGWD))
"RTN","DGRUGS",47,0)
 Q:'$D(^DPT($P(DG0,"^"),0))
"RTN","DGRUGS",48,0)
 S DGNM=$P(^(0),"^"),DGSSN=$S($P(^(0),"^",9)]"":$P(^(0),"^",9),1:0)
"RTN","DGRUGS",49,0)
 S DGS=$P(DGC,"^")
"RTN","DGRUGS",50,0)
 S DGS=$S(DGS=1:"COMPLETED",DGS=2:"CLOSED",DGS=3:"RELEASED",DGS=4:"TRANSMITTED",DGS=5:"INCOMPLETE",DGS=0:"OPEN",1:"UNSPECIFIED")
"RTN","DGRUGS",51,0)
 S DGAS=$P(DG0,"^",2)
"RTN","DGRUGS",52,0)
 S ^UTILITY($J,"S",DGWN,DGS,DGNM,DGSSN,DGAS)=$P(DG0,"^",2)_"^"_$P(DG0,"^",6)_"^"_$P(DG0,"^",7)_"^"_$P(DGR,"^",2)_"^"_$P(DGR,"^",3)
"RTN","DGRUGS",53,0)
 Q
"RTN","DGRUGS",54,0)
PT F M=0:0 S M=$O(^UTILITY($J,"S",I,J,K,L,M)) Q:'M  D
"RTN","DGRUGS",55,0)
 .S DG0=^UTILITY($J,"S",I,J,K,L,M)
"RTN","DGRUGS",56,0)
 .W ! W:DGHJ'=J!DGNEW !,$E(J,1,6)
"RTN","DGRUGS",57,0)
 .S DGHJ=J
"RTN","DGRUGS",58,0)
 .W ?10,$E(K,1,15),?27,L,?41
"RTN","DGRUGS",59,0)
 .W $$FMTE^XLFDT($P(DG0,"^"),"5DZ")
"RTN","DGRUGS",60,0)
 .W " ",$S($P(DG0,"^",2)=1:"A/T",$P(DG0,"^",2)=2:"S-A",$P(DG0,"^",2)=3:"CNH")
"RTN","DGRUGS",61,0)
 .D W
"RTN","DGRUGS",62,0)
 Q
"RTN","DGRUGS",63,0)
W W ?58,$$FMTE^XLFDT($P(DG0,U,3),"5DZ")
"RTN","DGRUGS",64,0)
 W ?71,$J($P(DG0,"^",5),2),?76,$J($P(DG0,"^",4),2)
"RTN","DGRUGS",65,0)
 D FY
"RTN","DGRUGS",66,0)
 S DGNEW=0
"RTN","DGRUGS",67,0)
 I $Y>(IOSL-6)&($O(^UTILITY($J,"S",I,J,K))'="") D HD S DGNEW=1
"RTN","DGRUGS",68,0)
 Q
"RTN","DGRUGS",69,0)
HD D END
"RTN","DGRUGS",70,0)
 Q:DGFL
"RTN","DGRUGS",71,0)
 S DGPG=DGPG+1
"RTN","DGRUGS",72,0)
 I FIRST>1!($E(IOST)="C") W @IOF
"RTN","DGRUGS",73,0)
 W !?28,"RUG-II RECORD STATUS REPORT",!?30,$$FMTE^XLFDT(DGB+.1,"5DZ")," - ",$$FMTE^XLFDT(DGE,"5DZ"),!?32,"RUN: ",DGNOW,!!,"LOCATION: ",I,?71,"PAGE: ",$J(DGPG,3)
"RTN","DGRUGS",74,0)
 W !!,"RECORD",?13,"PATIENT",?42,"ASSESSMENT",?70,"ADL",!,"STATUS",?13,"NAME",?30,"SSN",?42,"DATE/PURPOSE",?58,"A/T DATE",?70,"SUM",?75,"RUG",?81,"WWU" K X S $P(X,"_",85)="" W !,X,!
"RTN","DGRUGS",75,0)
 Q
"RTN","DGRUGS",76,0)
END S DGFL=0
"RTN","DGRUGS",77,0)
 Q:'DGPG!($E(IOST)'="C")
"RTN","DGRUGS",78,0)
 F PG=$Y:1:(IOSL-6) W !
"RTN","DGRUGS",79,0)
 R !!,"Enter <RETURN> to continue, '^' to halt",X:DTIME
"RTN","DGRUGS",80,0)
 S:(X["^")!('$T) DGFL=1
"RTN","DGRUGS",81,0)
 Q
"RTN","DGRUGS",82,0)
FY Q:'$P(DG0,"^",4)
"RTN","DGRUGS",83,0)
 K DGWWU
"RTN","DGRUGS",84,0)
 S DGAD=$P(DG0,"^",1),DGYR=$E(DGAD,1,3)_"0000"
"RTN","DGRUGS",85,0)
 S:$E(DGAD,4,5)>9 DGYR=DGYR+10000
"RTN","DGRUGS",86,0)
 W ?80,$J($S($D(^DG(45.91,$P(DG0,"^",4),"FY",DGYR,0)):$P(^(0),"^",2),1:"N/A"),4)
"RTN","DGRUGS",87,0)
 Q
"RTN","DGSDUTL")
0^34^B67863755
"RTN","DGSDUTL",1,0)
DGSDUTL ;ALB/PHH,RMM - DG/SD API UTILITIES ;3/4/2004  10:03
"RTN","DGSDUTL",2,0)
 ;;5.3;Registration;**568**;AUG 13, 1993
"RTN","DGSDUTL",3,0)
 ;
"RTN","DGSDUTL",4,0)
 Q
"RTN","DGSDUTL",5,0)
PCTEAM(DFN,DATE,ASSTYPE) ; Get Primary Care Team
"RTN","DGSDUTL",6,0)
 ; DFN - IEN of patient file (#2)
"RTN","DGSDUTL",7,0)
 ; DATE - Date of interest (Default=DT)
"RTN","DGSDUTL",8,0)
 ; ASSTYPE - Assignment Type (Default=1 for PC Team)
"RTN","DGSDUTL",9,0)
 ;
"RTN","DGSDUTL",10,0)
 N RETVAL,ACTDT,SCTM,SCPTTMA,INACTDT
"RTN","DGSDUTL",11,0)
 S RETVAL=0
"RTN","DGSDUTL",12,0)
 Q:'$G(DFN) RETVAL
"RTN","DGSDUTL",13,0)
 S DATE=$G(DATE,DT),ASSTYPE=$G(ASSTYPE,1)
"RTN","DGSDUTL",14,0)
 ;
"RTN","DGSDUTL",15,0)
 ; Returns pointer to file #404.51 if it exists, 0 if not
"RTN","DGSDUTL",16,0)
 S ACTDT=+$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,(DATE+.000001)),-1)
"RTN","DGSDUTL",17,0)
 S SCTM=$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,+ACTDT,0))
"RTN","DGSDUTL",18,0)
 S SCPTTMA=$O(^SCPT(404.42,"APCTM",+DFN,+ASSTYPE,+ACTDT,+SCTM,0))
"RTN","DGSDUTL",19,0)
 S INACTDT=$P($G(^SCPT(404.42,+SCPTTMA,0)),U,9)
"RTN","DGSDUTL",20,0)
 S RETVAL=$S('INACTDT:+SCTM,(INACTDT'<DATE):+SCTM,1:0)
"RTN","DGSDUTL",21,0)
 S RETVAL=$S('$G(RETVAL):"",1:RETVAL_U_$P($G(^SCTM(404.51,+RETVAL,0)),U,1))
"RTN","DGSDUTL",22,0)
 Q RETVAL
"RTN","DGSDUTL",23,0)
 ;
"RTN","DGSDUTL",24,0)
PCPRACT(DFN,DATE,PCROLE) ; Get PC Practitioner
"RTN","DGSDUTL",25,0)
 ; DFN - Pointer to Patient file 
"RTN","DGSDUTL",26,0)
 ; DATE - Date of interest 
"RTN","DGSDUTL",27,0)
 ; PCROLE - Practitioner Position where '1' = PC provider
"RTN","DGSDUTL",28,0)
 ;                                      '2' = PC attending 
"RTN","DGSDUTL",29,0)
 ;                                      '3' = PC associate provider
"RTN","DGSDUTL",30,0)
 ; Returned: Pointer to file #200 ^ External value of name
"RTN","DGSDUTL",31,0)
 ;           or, if error or none defined, returns a 0 or null
"RTN","DGSDUTL",32,0)
 ;
"RTN","DGSDUTL",33,0)
 N RETVAL,SCOK,SCTP,ACTDT,TPLP,TPDALP,INACTDT,PCAP
"RTN","DGSDUTL",34,0)
 S RETVAL=0
"RTN","DGSDUTL",35,0)
 Q:'$G(DFN) RETVAL
"RTN","DGSDUTL",36,0)
 S DATE=$G(DATE,DT),PCROLE=$G(PCROLE,1)
"RTN","DGSDUTL",37,0)
 ;
"RTN","DGSDUTL",38,0)
 ; Returns pointer to file #404.57 if it exists, 0 if not
"RTN","DGSDUTL",39,0)
 S SCOK=1,SCTP=0
"RTN","DGSDUTL",40,0)
 S ACTDT=+$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,(DATE+.000001)),-1)
"RTN","DGSDUTL",41,0)
 F TPLP=0:0 S TPLP=$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,+ACTDT,TPLP)) Q:TPLP=""!(SCTP=-1)  D
"RTN","DGSDUTL",42,0)
 .F TPDALP=0:0 S TPDALP=$O(^SCPT(404.43,"APCPOS",+DFN,+PCROLE,+ACTDT,TPLP,TPDALP)) Q:TPDALP=""  D  Q:SCTP=-1
"RTN","DGSDUTL",43,0)
 ..S INACTDT=$P($G(^SCPT(404.43,+TPDALP,0)),U,4)
"RTN","DGSDUTL",44,0)
 ..;
"RTN","DGSDUTL",45,0)
 ..; Error if it's already an active date
"RTN","DGSDUTL",46,0)
 ..I 'INACTDT S SCTP=$S(SCTP>0:-1,1:TPLP) Q
"RTN","DGSDUTL",47,0)
 ..I INACTDT'<DATE S SCTP=$S(SCTP>0:-1,1:TPLP)
"RTN","DGSDUTL",48,0)
 S RETVAL=+SCTP
"RTN","DGSDUTL",49,0)
 S RETVAL=$S('$G(RETVAL):"",RETVAL=-1:"",1:RETVAL_U_$P($G(^SCTM(404.57,+RETVAL,0)),U,1))
"RTN","DGSDUTL",50,0)
 ;
"RTN","DGSDUTL",51,0)
 S SCTP=+RETVAL,PCAP=+$G(PCROLE,1),PCAP=$S(PCAP=0:1,PCAP>3:1,1:PCAP)
"RTN","DGSDUTL",52,0)
 S PCROLE=$S(PCROLE=0:1,PCROLE>2:1,1:PCROLE)
"RTN","DGSDUTL",53,0)
 S RETVAL=$S('SCTP:"",1:$$PCPROV^SCAPMCU3(SCTP,.DATE,PCAP))
"RTN","DGSDUTL",54,0)
 Q RETVAL
"RTN","DGSDUTL",55,0)
 ;
"RTN","DGSDUTL",56,0)
DATE ; Get Begin Date and End Date
"RTN","DGSDUTL",57,0)
 S:$D(%DT(0)) SDT0=%DT(0) S:$D(SDT00) %DT=SDT00 S POP=0 K BEGDATE,ENDDATE W !!,"**** Date Range Selection ****"
"RTN","DGSDUTL",58,0)
 W ! S %DT=$S($D(SDT00):SDT00,1:"AE"),%DT("A")="   Beginning DATE : " D ^%DT S:Y<0 POP=1 G:Y<0 EX S (BEGDATE,SDBD)=Y
"RTN","DGSDUTL",59,0)
 W ! S %DT="AE",%DT("A")="   Ending    DATE : " D ^%DT K %DT S:Y<0 POP=1 G:Y<0 EX G:Y<SDBD HELP W ! S (ENDDATE,SDED)=Y
"RTN","DGSDUTL",60,0)
EX K SDT0,SDT00 Q
"RTN","DGSDUTL",61,0)
HELP W "??",!?5,"Ending date must not be before beginning date" S:$D(SDT0) %DT(0)=SDT0 G DATE
"RTN","DGSDUTL",62,0)
 ;
"RTN","DGSDUTL",63,0)
TDATA(DFN,VALMCNT,SDATE,SDPRT,SDCOL) ;
"RTN","DGSDUTL",64,0)
 ;Team information - gather, format and optionally print.
"RTN","DGSDUTL",65,0)
 ;
"RTN","DGSDUTL",66,0)
 ; Input: DFN=patient ifn
"RTN","DGSDUTL",67,0)
 ;        VALMCNT=variable to return number of lines (pass by reference)
"RTN","DGSDUTL",68,0)
 ;        SDATE=effective date (optional)
"RTN","DGSDUTL",69,0)
 ;        SDPRT=print flag, 'P' for PC info only, 'A' for all (optional)
"RTN","DGSDUTL",70,0)
 ;        SDCOL=column to print in conjunction with SDPRT flag (optional)
"RTN","DGSDUTL",71,0)
 ;
"RTN","DGSDUTL",72,0)
 Q:DFN'>0
"RTN","DGSDUTL",73,0)
 N SDI,SDATE,SDLIST,SDX,SDLN,SDY,SDPH,SDTEAM,SDPTA,SDII,SDIII,SDZ
"RTN","DGSDUTL",74,0)
 N SDTM,SDTMN,SDPO,SDPON,SDPR,SDPRN,PAGER,PHONE
"RTN","DGSDUTL",75,0)
 ;
"RTN","DGSDUTL",76,0)
 F SDI="SDPLIST","SDTEMP" K ^TMP(SDI,$J)
"RTN","DGSDUTL",77,0)
 S SDCOL=+$G(SDCOL),SDATE=$G(SDATE) S:SDATE<1 SDATE=DT
"RTN","DGSDUTL",78,0)
 F SDI="BEGIN","END" S SDATE(SDI)=SDATE
"RTN","DGSDUTL",79,0)
 S SDATE="SDATE",SDLIST="^TMP(""SDPLIST"",$J)",SDLN=2
"RTN","DGSDUTL",80,0)
 S SDI=$$GETALL^SCAPMCA(DFN,.SDATE,SDLIST)
"RTN","DGSDUTL",81,0)
 ;
"RTN","DGSDUTL",82,0)
 ;PC Team
"RTN","DGSDUTL",83,0)
 S SDI=0 F  S SDI=$O(^TMP("SDPLIST",$J,DFN,"PCTM",SDI)) Q:'SDI  D
"RTN","DGSDUTL",84,0)
 .S SDX=$G(^TMP("SDPLIST",$J,DFN,"PCTM",SDI)) Q:'$L(SDX)
"RTN","DGSDUTL",85,0)
 .S SDY="" D S1("Primary Care Team",$P(SDX,U,2))
"RTN","DGSDUTL",86,0)
 .S SDPH=$P($G(^SCTM(404.51,+SDX,0)),U,2) D:$L(SDPH) S2("Phone",SDPH)
"RTN","DGSDUTL",87,0)
 .S:$P(SDX,U,3) SDPTA($P(SDX,U,3))=""
"RTN","DGSDUTL",88,0)
 .D STL(SDY)
"RTN","DGSDUTL",89,0)
 .Q
"RTN","DGSDUTL",90,0)
 ;
"RTN","DGSDUTL",91,0)
 ;PCP
"RTN","DGSDUTL",92,0)
 S SDI=0 F  S SDI=$O(^TMP("SDPLIST",$J,DFN,"PCPR",SDI)) Q:'SDI  D
"RTN","DGSDUTL",93,0)
 .S SDX=$G(^TMP("SDPLIST",$J,DFN,"PCPR",SDI)) Q:'$L(SDX)
"RTN","DGSDUTL",94,0)
 .S SDY="" D S1("PC Provider",$P(SDX,U,2))
"RTN","DGSDUTL",95,0)
 .D S2("Position",$P(SDX,U,4)),STL(SDY),PHONE($P(SDX,U,1))
"RTN","DGSDUTL",96,0)
 .S SDY="" D S3("Pager",PAGER),S4("Phone",PHONE),STL(SDY)
"RTN","DGSDUTL",97,0)
 .Q
"RTN","DGSDUTL",98,0)
 ;
"RTN","DGSDUTL",99,0)
 ;AP
"RTN","DGSDUTL",100,0)
 S SDI=0 F  S SDI=$O(^TMP("SDPLIST",$J,DFN,"PCAP",SDI)) Q:'SDI  D
"RTN","DGSDUTL",101,0)
 .S SDX=$G(^TMP("SDPLIST",$J,DFN,"PCAP",SDI)) Q:'$L(SDX)
"RTN","DGSDUTL",102,0)
 .S SDY="" D S1("Associate Provider",$P(SDX,U,2)),S2("Position",$P(SDX,U,4)),STL(SDY),PHONE($P(SDX,U,1))
"RTN","DGSDUTL",103,0)
 .S SDY="" D S3("Pager",PAGER),S4("Phone",PHONE),STL(SDY)
"RTN","DGSDUTL",104,0)
 .Q
"RTN","DGSDUTL",105,0)
 ;
"RTN","DGSDUTL",106,0)
 I $G(SDPRT)="P" D PRT G TDQ
"RTN","DGSDUTL",107,0)
 S SDII=0 F  S SDII=$O(^TMP("SDPLIST",$J,DFN,"NPCPOS",SDII)) Q:'SDII  D
"RTN","DGSDUTL",108,0)
 .S SDX=^TMP("SDPLIST",$J,DFN,"NPCPOS",SDII)
"RTN","DGSDUTL",109,0)
 .Q:'$D(SDPTA(+$P(SDX,U,11)))
"RTN","DGSDUTL",110,0)
 .S SDIII=0 F  S SDIII=$O(^TMP("SDPLIST",$J,DFN,"NPCPR",SDIII)) Q:'SDIII  D
"RTN","DGSDUTL",111,0)
 ..S SDZ=^TMP("SDPLIST",$J,DFN,"NPCPR",SDIII)
"RTN","DGSDUTL",112,0)
 ..Q:$P(SDZ,U,3)'=+SDX
"RTN","DGSDUTL",113,0)
 ..S SDY="" D S1("Non-PC Provider",$P(SDZ,U,2)),S2("Position",$P(SDZ,U,4)),STL(SDY)
"RTN","DGSDUTL",114,0)
 ;
"RTN","DGSDUTL",115,0)
 S SDI=0 F  S SDI=$O(^TMP("SDPLIST",$J,DFN,"NPCTM",SDI)) Q:'SDI  D
"RTN","DGSDUTL",116,0)
 .S SDX=^TMP("SDPLIST",$J,DFN,"NPCTM",SDI)
"RTN","DGSDUTL",117,0)
 .S SDTEAM($P(SDX,U,2),+SDX)="",SDPTA=$P(SDX,U,3) Q:'SDPTA  D
"RTN","DGSDUTL",118,0)
 ..S SDII=0 F  S SDII=$O(^TMP("SDPLIST",$J,DFN,"NPCPOS",SDII)) Q:'SDII  D
"RTN","DGSDUTL",119,0)
 ...S SDY=^TMP("SDPLIST",$J,DFN,"NPCPOS",SDII)
"RTN","DGSDUTL",120,0)
 ...Q:$P(SDY,U,11)'=SDPTA
"RTN","DGSDUTL",121,0)
 ...S SDTEAM($P(SDX,U,2),+SDX,$P(SDY,U,2),+SDY)="",SDIII=0
"RTN","DGSDUTL",122,0)
 ...F  S SDIII=$O(^TMP("SDPLIST",$J,DFN,"NPCPR",SDIII)) Q:'SDIII  D
"RTN","DGSDUTL",123,0)
 ....S SDZ=^TMP("SDPLIST",$J,DFN,"NPCPR",SDIII)
"RTN","DGSDUTL",124,0)
 ....Q:$P(SDZ,U,3)'=+SDY
"RTN","DGSDUTL",125,0)
 ....S SDTEAM($P(SDX,U,2),+SDX,$P(SDY,U,2),+SDY,$P(SDZ,U,2),+SDZ)=""
"RTN","DGSDUTL",126,0)
 ;
"RTN","DGSDUTL",127,0)
 S SDTM="" F  S SDTM=$O(SDTEAM(SDTM)) Q:SDTM=""  D
"RTN","DGSDUTL",128,0)
 .S SDTMN=0 F  S SDTMN=$O(SDTEAM(SDTM,SDTMN)) Q:'SDTMN  D
"RTN","DGSDUTL",129,0)
 ..I SDLN>0 D STL("")
"RTN","DGSDUTL",130,0)
 ..S SDY="" D S1("Non-PC Team",SDTM)
"RTN","DGSDUTL",131,0)
 ..S SDPH=$P($G(^SCTM(404.51,+SDTMN,0)),U,2) D:$L(SDPH) S2("Phone",SDPH),STL(SDY)
"RTN","DGSDUTL",132,0)
 ..S SDPO="" F  S SDPO=$O(SDTEAM(SDTM,SDTMN,SDPO)) Q:SDPO=""  S SDPON=0 D
"RTN","DGSDUTL",133,0)
 ...F  S SDPON=$O(SDTEAM(SDTM,SDTMN,SDPO,SDPON)) Q:'SDPON  D
"RTN","DGSDUTL",134,0)
 ....I $O(SDTEAM(SDTM,SDTMN,SDPO,SDPON,""))="" S SDY="" D S1("Non-PC Provider",""),S2("Position",SDPO),STL(SDY) Q
"RTN","DGSDUTL",135,0)
 ....S SDPR="" F  S SDPR=$O(SDTEAM(SDTM,SDTMN,SDPO,SDPON,SDPR)) Q:SDPR=""  D
"RTN","DGSDUTL",136,0)
 .....S SDPRN=0 F  S SDPRN=$O(SDTEAM(SDTM,SDTMN,SDPO,SDPON,SDPR,SDPRN)) Q:'SDPRN  D
"RTN","DGSDUTL",137,0)
 ......S SDY="" D S1("Non-PC Provider",SDPR),S2("Position",SDPO),STL(SDY),PHONE(SDPRN)
"RTN","DGSDUTL",138,0)
 ......S SDY="" D S3("Pager",PAGER),S4("Phone",PHONE),STL(SDY)
"RTN","DGSDUTL",139,0)
 ;
"RTN","DGSDUTL",140,0)
 I $G(SDPRT)="A" D PRT G TDQ
"RTN","DGSDUTL",141,0)
 S SDY="",$E(SDY,29)="*** Team Information ***"
"RTN","DGSDUTL",142,0)
 S ^TMP("SDTEMP",$J,1)=SDY,^TMP("SDTEMP",$J,2)=""
"RTN","DGSDUTL",143,0)
 I SDLN=2 S SDY="",$E(SDY,20)="-- No team assignment information found --",^TMP("SDTEMP",$J,3)=SDY
"RTN","DGSDUTL",144,0)
 S GBL=$G(GBL,"") I $L(GBL)<1 S GBL=$S('$D(VALMAR):"^TMP(""SDPP"",$J)",$L(VALMAR)>1:VALMAR,1:"^TMP(""SDPP"",$J)")
"RTN","DGSDUTL",145,0)
 ;add line at bottom of array for readability
"RTN","DGSDUTL",146,0)
 S SDI=$O(^TMP("SDTEMP",$J,""),-1)+1,^TMP("SDTEMP",$J,SDI)=""
"RTN","DGSDUTL",147,0)
 ;respect the array count passed in to the function
"RTN","DGSDUTL",148,0)
 S (SDII,VALMCNT)=$O(@GBL@(""),-1)+1
"RTN","DGSDUTL",149,0)
 S SDI=0
"RTN","DGSDUTL",150,0)
 F  S SDI=$O(^TMP("SDTEMP",$J,SDI)) Q:'SDI  D
"RTN","DGSDUTL",151,0)
 .S SDX=^TMP("SDTEMP",$J,SDI),SDII=SDII+1
"RTN","DGSDUTL",152,0)
 .S @GBL@(SDII,0)=SDX,VALMCNT=$G(VALMCNT)+1
"RTN","DGSDUTL",153,0)
 .I SDLN<7,SDI>3 S SDII=SDII+1,@GBL@(SDII,0)="",VALMCNT=$G(VALMCNT)+1
"RTN","DGSDUTL",154,0)
 .Q
"RTN","DGSDUTL",155,0)
TDQ F SDI="SDPLIST","SDTEMP" K ^TMP(SDI,$J,DFN)
"RTN","DGSDUTL",156,0)
 Q
"RTN","DGSDUTL",157,0)
 ;
"RTN","DGSDUTL",158,0)
S1(SDT,SDX) ;Set first piece of string
"RTN","DGSDUTL",159,0)
 ; Input: SDT=subtitle, SDX=data value
"RTN","DGSDUTL",160,0)
 S SDY=$J(SDT,18)_": "_$E(SDX,1,28) Q
"RTN","DGSDUTL",161,0)
 ;
"RTN","DGSDUTL",162,0)
S2(SDT,SDX) ;Set second piece of string
"RTN","DGSDUTL",163,0)
 ; Input: SDT=subtitle, SDX=data value
"RTN","DGSDUTL",164,0)
 I $L($G(SDPRT)),SDCOL>0 Q
"RTN","DGSDUTL",165,0)
 S $E(SDY,53)=$J(SDT,8)_": "_$E(SDX,1,18) Q
"RTN","DGSDUTL",166,0)
 ;
"RTN","DGSDUTL",167,0)
S3(SDT,SDX) ;Set first piece of string that displays phone numbers
"RTN","DGSDUTL",168,0)
 ; Input: SDT=subtitle, SDX=data value
"RTN","DGSDUTL",169,0)
 S SDY=$J(SDT,30)_": "_$E(SDX,1,20) Q
"RTN","DGSDUTL",170,0)
 ;
"RTN","DGSDUTL",171,0)
S4(SDT,SDX) ;Set second piece of string that displays phone numbers
"RTN","DGSDUTL",172,0)
 ;Input: SDT=subtitle, SDX=data value
"RTN","DGSDUTL",173,0)
 I $L($G(SDPRT)),SDCOL>0 Q
"RTN","DGSDUTL",174,0)
 S $E(SDY,56)=$J(SDT,4)_": "_$E(SDX,1,20) Q
"RTN","DGSDUTL",175,0)
 ;
"RTN","DGSDUTL",176,0)
PHONE(IEN) ;Get provider's pager and phone numbers.
"RTN","DGSDUTL",177,0)
 ;Return: PAGER = Pager number
"RTN","DGSDUTL",178,0)
 ;        PHONE = Phone number
"RTN","DGSDUTL",179,0)
 NEW LIST
"RTN","DGSDUTL",180,0)
 S (PAGER,PHONE)=""
"RTN","DGSDUTL",181,0)
 Q:'$G(IEN)
"RTN","DGSDUTL",182,0)
 Q:'$$NEWPERSN^SCMCGU(IEN,"LIST")
"RTN","DGSDUTL",183,0)
 S PAGER=$P(LIST(IEN),U,5),PHONE=$P(LIST(IEN),U,2) Q
"RTN","DGSDUTL",184,0)
 ;
"RTN","DGSDUTL",185,0)
STL(SDY) ; Set text line
"RTN","DGSDUTL",186,0)
 ; Input: SDY=string
"RTN","DGSDUTL",187,0)
 S SDLN=SDLN+1,^TMP("SDTEMP",$J,SDLN)=SDY Q
"RTN","DGSDUTL",188,0)
 ;
"RTN","DGSDUTL",189,0)
PRT ; Write assignment information
"RTN","DGSDUTL",190,0)
 N SDI S SDI=0
"RTN","DGSDUTL",191,0)
 F  S SDI=$O(^TMP("SDTEMP",$J,SDI)) Q:'SDI  D
"RTN","DGSDUTL",192,0)
 .W !?(SDCOL),^TMP("SDTEMP",$J,SDI) Q
"RTN","DGSDUTL",193,0)
 Q
"RTN","DGSDUTL",194,0)
 ;
"RTN","DGSDUTL",195,0)
PCLINE(DFN,SDATE) ;PC provider, associate and team in a single line
"RTN","DGSDUTL",196,0)
 ; Input:  DFN=patient ifn
"RTN","DGSDUTL",197,0)
 ;         SDATE=effective date (optional)
"RTN","DGSDUTL",198,0)
 ; Output: PC provider, associate and team formatted as 80 character
"RTN","DGSDUTL",199,0)
 ;         line, or "" if none
"RTN","DGSDUTL",200,0)
 ;
"RTN","DGSDUTL",201,0)
 N SDLIST,SDI,SDX,SDY,SDZ,SDL,SDC,SDTL
"RTN","DGSDUTL",202,0)
 Q:'DFN ""  S:$G(SDATE)<1 SDATE=DT S SDLIST="^TMP(""SDPLIST"",$J)"
"RTN","DGSDUTL",203,0)
 F SDI="BEGIN","END" S SDATE(SDI)=SDATE
"RTN","DGSDUTL",204,0)
 S SDATE="SDATE",SDI=$$GETALL^SCAPMCA(DFN,.SDATE,SDLIST)
"RTN","DGSDUTL",205,0)
 S SDY="PC Prov: ^Assoc. Prov: ^Team: ",SDL=48,SDC=3,SDTL=0
"RTN","DGSDUTL",206,0)
 S SDX(1)=$$PCL("PCPR"),SDX(2)=$$PCL("PCAP"),SDX(3)=$$PCL("PCTM")
"RTN","DGSDUTL",207,0)
 K ^TMP("SDPLIST",$J,DFN)
"RTN","DGSDUTL",208,0)
 F SDI=1,2,3 S SDZ($L(SDX(SDI)),SDI)=""
"RTN","DGSDUTL",209,0)
 S SDI="" F  S SDI=$O(SDZ(SDI)) Q:SDI=""  D
"RTN","DGSDUTL",210,0)
 .S SDII=0 F  S SDII=$O(SDZ(SDI,SDII)) Q:'SDII  D
"RTN","DGSDUTL",211,0)
 ..I 'SDI S SDC=SDC-1 Q
"RTN","DGSDUTL",212,0)
 ..I SDI<(SDL\SDC) S SDX(SDII)=$P(SDY,U,SDII)_SDX(SDII),SDL=SDL-SDI,SDC=SDC-1 Q
"RTN","DGSDUTL",213,0)
 ..S SDX(SDII)=$P(SDY,U,SDII)_$E(SDX(SDII),1,(SDL\SDC))
"RTN","DGSDUTL",214,0)
 ;
"RTN","DGSDUTL",215,0)
 F SDI=1,2,3 S SDTL=SDTL+$L(SDX(SDI))
"RTN","DGSDUTL",216,0)
 Q:SDTL=0 ""
"RTN","DGSDUTL",217,0)
 S SDX=SDX(1),$E(SDX,($L(SDX)+1+(80-SDTL\2)))=SDX(2),$E(SDX,81-$L(SDX(3)))=SDX(3)
"RTN","DGSDUTL",218,0)
 Q SDX
"RTN","DGSDUTL",219,0)
 ;
"RTN","DGSDUTL",220,0)
PCL(SDSUB) ; Get name value
"RTN","DGSDUTL",221,0)
 ; Input: SDSUB=node from GETALL^SCAPMCA
"RTN","DGSDUTL",222,0)
 N SDN S SDN=+$G(^TMP("SDPLIST",$J,DFN,"PCPOS",0))
"RTN","DGSDUTL",223,0)
 Q:SDN=0 ""
"RTN","DGSDUTL",224,0)
 Q:SDN>1 "[ambiguous data]"
"RTN","DGSDUTL",225,0)
 S SDN=+$G(^TMP("SDPLIST",$J,DFN,SDSUB,0))
"RTN","DGSDUTL",226,0)
 Q:SDN=0 ""
"RTN","DGSDUTL",227,0)
 Q:SDN>1 "[ambiguous data]"
"RTN","DGSDUTL",228,0)
 Q $P($G(^TMP("SDPLIST",$J,DFN,SDSUB,1)),U,2)
"RTN","DGSDUTL",229,0)
 ;
"RTN","DGSDUTL",230,0)
LAST() ; Output - the latest date, beginning day or -100 days
"RTN","DGSDUTL",231,0)
 ; the APPOINTMENT STATUS UPDATE LOG was updated
"RTN","DGSDUTL",232,0)
 N SDI,LAST
"RTN","DGSDUTL",233,0)
 F SDI=0:1:100 S X1=DT,X2=-SDI D C^%DTC S LAST=$O(^SDD(409.65,"B",X,0)) S LAST1=$P($G(^SDD(409.65,+LAST,0)),U,5) Q:LAST1
"RTN","DGSDUTL",234,0)
 Q LAST
"RTN","DGSDUTL",235,0)
 ;
"RTN","DGSDUTL",236,0)
 ;
"RTN","DGSDUTL",237,0)
 Q
"RTN","DGSSNRP2")
0^20^B92397556
"RTN","DGSSNRP2",1,0)
DGSSNRP2 ;ALB/SEK/PHH - DUPLICATE SPOUSE/DEPENDENT Report - Continued; 04/07/2004
"RTN","DGSSNRP2",2,0)
 ;;5.3;Registration;**313,535,568**;Aug 13,1993
"RTN","DGSSNRP2",3,0)
 ;
"RTN","DGSSNRP2",4,0)
MAIN ;
"RTN","DGSSNRP2",5,0)
 N X S X=$$DT^XLFDT
"RTN","DGSSNRP2",6,0)
 S ^XTMP("DG-SSNRP2",0)=X+1_U_X_"^DG DUPLICATE SSN REPORT "
"RTN","DGSSNRP2",7,0)
 D GETDATA
"RTN","DGSSNRP2",8,0)
 I $D(ZTQUEUED) D
"RTN","DGSSNRP2",9,0)
 .N ZTRTN,ZTDESC,ZTSK,ZTIO
"RTN","DGSSNRP2",10,0)
 .S ZTRTN="PRINT^DGSSNRP2",ZTDESC="Duplicate Spouse/Dependent SSN Report",ZTIO="`"_DEV
"RTN","DGSSNRP2",11,0)
 .S:$D(HFS) IO("HFSIO")=HFS
"RTN","DGSSNRP2",12,0)
 .S:$D(PAR) IOPAR=PAR
"RTN","DGSSNRP2",13,0)
 .D ^%ZTLOAD
"RTN","DGSSNRP2",14,0)
 .S ZTREQ="@"
"RTN","DGSSNRP2",15,0)
 E  S IOP="`"_IOS D ^%ZIS,PRINT,HOME^%ZIS
"RTN","DGSSNRP2",16,0)
 Q
"RTN","DGSSNRP2",17,0)
PRINT ;
"RTN","DGSSNRP2",18,0)
 N STATS,CRT,QUIT,PAGE,PART1D,PART2D,PART1ST,SECTION,DGVETNM,DGVETSSN,VA,VADM,VAERR
"RTN","DGSSNRP2",19,0)
 K DEV,HFS,PAR
"RTN","DGSSNRP2",20,0)
 S (QUIT,PAGE)=0,CRT=$S($E(IOST,1,2)="C-":1,1:0)
"RTN","DGSSNRP2",21,0)
 U IO
"RTN","DGSSNRP2",22,0)
 I CRT,PAGE=0 W @IOF
"RTN","DGSSNRP2",23,0)
 S (PAGE,PART1D,PART2D)=1,SECTION="PART1"
"RTN","DGSSNRP2",24,0)
 D CHECKP1,HEADER
"RTN","DGSSNRP2",25,0)
 I PART1D D PPART1
"RTN","DGSSNRP2",26,0)
 I QUIT K ^XTMP("DG-SSNRP2") Q
"RTN","DGSSNRP2",27,0)
 S SECTION="PART2"
"RTN","DGSSNRP2",28,0)
 S:'$D(^XTMP("DG-SSNRP2","DGPART2")) PART2D=0
"RTN","DGSSNRP2",29,0)
 D HEADER
"RTN","DGSSNRP2",30,0)
 I PART2D D PPART2
"RTN","DGSSNRP2",31,0)
 I CRT,'QUIT D PAUSE
"RTN","DGSSNRP2",32,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","DGSSNRP2",33,0)
 D ^%ZISC
"RTN","DGSSNRP2",34,0)
 K ^XTMP("DG-SSNRP2"),^TMP("DGSSNAR",$J)
"RTN","DGSSNRP2",35,0)
 Q
"RTN","DGSSNRP2",36,0)
LINE(LINE) ; Prints header if end of page.
"RTN","DGSSNRP2",37,0)
 I CRT,($Y>(IOSL-4)) D  Q:QUIT
"RTN","DGSSNRP2",38,0)
 .D PAUSE
"RTN","DGSSNRP2",39,0)
 .Q:QUIT
"RTN","DGSSNRP2",40,0)
 .W @IOF
"RTN","DGSSNRP2",41,0)
 .D HEADER Q:QUIT
"RTN","DGSSNRP2",42,0)
 .W:SECTION="PART1" !
"RTN","DGSSNRP2",43,0)
 .W LINE
"RTN","DGSSNRP2",44,0)
 ;
"RTN","DGSSNRP2",45,0)
 E  I ('CRT),($Y>(IOSL-2)) D
"RTN","DGSSNRP2",46,0)
 .W @IOF
"RTN","DGSSNRP2",47,0)
 .D HEADER
"RTN","DGSSNRP2",48,0)
 .W !,LINE
"RTN","DGSSNRP2",49,0)
 ;
"RTN","DGSSNRP2",50,0)
 E  W !,LINE
"RTN","DGSSNRP2",51,0)
 Q
"RTN","DGSSNRP2",52,0)
 ;
"RTN","DGSSNRP2",53,0)
GETDATA ;Setup global with vets included in the report
"RTN","DGSSNRP2",54,0)
 D GETPART1
"RTN","DGSSNRP2",55,0)
 D GETPART2
"RTN","DGSSNRP2",56,0)
 Q
"RTN","DGSSNRP2",57,0)
 ;
"RTN","DGSSNRP2",58,0)
GETPART1 ;1st part of report
"RTN","DGSSNRP2",59,0)
 ;S ^XTMP("DG-SSNRP2","DGPART1",DGVETSSN)=DGVETNM
"RTN","DGSSNRP2",60,0)
 ;S ^XTMP("DG-SSNRP2","DGPART1",DGVETSSN,DGCTR1)=DGDEPNM^DGDEPSSN^DGDEPREL
"RTN","DGSSNRP2",61,0)
 N DFN,DG40812,DGDEP,DGDEPIEN,DGIEN,DGSSNCTR,VARR
"RTN","DGSSNRP2",62,0)
 K ^TMP("DGSSNAR",$J) S VARR=1
"RTN","DGSSNRP2",63,0)
 S DFN=0 F  S DFN=$O(^DGPR(408.12,"B",DFN)) Q:'DFN  D
"RTN","DGSSNRP2",64,0)
 .S (DGIEN,DGSSNCTR)=0
"RTN","DGSSNRP2",65,0)
 .F  S DGIEN=$O(^DGPR(408.12,"B",DFN,DGIEN)) D  Q:'DGIEN
"RTN","DGSSNRP2",66,0)
 ..Q:'DGIEN
"RTN","DGSSNRP2",67,0)
 ..S DG40812=$G(^DGPR(408.12,DGIEN,0)) Q:'DG40812
"RTN","DGSSNRP2",68,0)
 ..I DG40812["DPT" D  Q
"RTN","DGSSNRP2",69,0)
 ...;if can't get veteran's SSN kill array and get next veteran
"RTN","DGSSNRP2",70,0)
 ...D DEM^VADPT
"RTN","DGSSNRP2",71,0)
 ...I '$P(VADM(2),"^") K ^TMP("DGSSNAR",$J,DFN) S DGIEN="" Q
"RTN","DGSSNRP2",72,0)
 ...; Check if patient has a Date of Death
"RTN","DGSSNRP2",73,0)
 ...I '$$OKRPT(DFN,.VADM) Q
"RTN","DGSSNRP2",74,0)
 ...; Check if patient was IN/OUT patient in last 3 years
"RTN","DGSSNRP2",75,0)
 ...I $$OKIMP(DFN)
"RTN","DGSSNRP2",76,0)
 ...;^TMP("DGSSNAR",$J) for vet (subscript "V") = name^SSN (no P)^SSN (with P)
"RTN","DGSSNRP2",77,0)
 ...S ^TMP("DGSSNAR",$J,DFN,"V")=VADM(1)_"^"_$TR(VADM(2),"-P","")_"^"_$P(VADM(2),"^")
"RTN","DGSSNRP2",78,0)
 ..;^TMP("DGSSNAR",$J) for dependents = SSN or Not Available^name^relationship code
"RTN","DGSSNRP2",79,0)
 ..I DG40812["DGPR" D  Q
"RTN","DGSSNRP2",80,0)
 ...S DGDEPIEN=$P($P(DG40812,"^",3),";") Q:'DGDEPIEN
"RTN","DGSSNRP2",81,0)
 ...S DGDEP=$G(^DGPR(408.13,DGDEPIEN,0)) Q:DGDEP']""
"RTN","DGSSNRP2",82,0)
 ...S DGSSNCTR=DGSSNCTR+1
"RTN","DGSSNRP2",83,0)
 ...S ^TMP("DGSSNAR",$J,DFN,"D",DGSSNCTR)=$S($P(DGDEP,"^",9):$P(DGDEP,"^",9),1:"Not Available")_"^"_$P(DGDEP,"^")_"^"_$P(DG40812,"^",2)
"RTN","DGSSNRP2",84,0)
 .D:$D(^TMP("DGSSNAR",$J,DFN)) VBLDARR(DFN)
"RTN","DGSSNRP2",85,0)
 ;
"RTN","DGSSNRP2",86,0)
 D SDAM,SETTMPA
"RTN","DGSSNRP2",87,0)
 Q
"RTN","DGSSNRP2",88,0)
 ;
"RTN","DGSSNRP2",89,0)
SETTMPA ;check if spouse/dep SSN is the same as the vet's SSN or if not available (missing)
"RTN","DGSSNRP2",90,0)
 N DGDEPSSN,DGSCTR,DGTMPN1,DGVETSNP,AFLG,APPCK,APPTYP
"RTN","DGSSNRP2",91,0)
 S DFN=0 F  S DFN=$O(^TMP("DGSSNAR",$J,DFN)) Q:'DFN  D
"RTN","DGSSNRP2",92,0)
 .; Only want appts kept in the last 3 years
"RTN","DGSSNRP2",93,0)
 .I '$$OK2RPT(DFN) K ^TMP("DGSSNAR",$J,DFN),^TMP($J,"SDAMA",DFN) Q
"RTN","DGSSNRP2",94,0)
 .S DGSSNCTR=+($O(^TMP("DGSSNAR",$J,DFN,"D",""),-1))
"RTN","DGSSNRP2",95,0)
 .I ('DGSSNCTR)!('$D(^TMP("DGSSNAR",$J,DFN,"V"))) K ^TMP("DGSSNAR",$J,DFN) Q
"RTN","DGSSNRP2",96,0)
 .S DGVETSNP=$P(^TMP("DGSSNAR",$J,DFN,"V"),"^",2)
"RTN","DGSSNRP2",97,0)
 .S DGTMPN1=0
"RTN","DGSSNRP2",98,0)
 .F DGSCTR=1:1:DGSSNCTR D
"RTN","DGSSNRP2",99,0)
 ..S DGDEPSSN=$P(^TMP("DGSSNAR",$J,DFN,"D",DGSCTR),"^")
"RTN","DGSSNRP2",100,0)
 ..Q:((DGDEPSSN'=DGVETSNP)&(DGDEPSSN))
"RTN","DGSSNRP2",101,0)
 ..I 'DGTMPN1 S ^XTMP("DG-SSNRP2","DGPART1",("A"_$P(^TMP("DGSSNAR",$J,DFN,"V"),"^",3)))=$P(^TMP("DGSSNAR",$J,DFN,"V"),"^"),DGTMPN1=1
"RTN","DGSSNRP2",102,0)
 ..S ^XTMP("DG-SSNRP2","DGPART1",("A"_$P(^TMP("DGSSNAR",$J,DFN,"V"),"^",3)),DGSCTR)=$P(^TMP("DGSSNAR",$J,DFN,"D",DGSCTR),"^",2)_"^"_DGDEPSSN_"^"_$P(^TMP("DGSSNAR",$J,DFN,"D",DGSCTR),"^",3)
"RTN","DGSSNRP2",103,0)
 Q
"RTN","DGSSNRP2",104,0)
 ;
"RTN","DGSSNRP2",105,0)
GETPART2 ;2nd part of report
"RTN","DGSSNRP2",106,0)
 ;S ^XTMP("DG-SSNRP2","DGPART2",DGDEPSSN,DGCTR2)=DGDEPNM^DGDEPEL^DGVETSSN
"RTN","DGSSNRP2",107,0)
 N DGSSN,DGSSND,DGSSNDA,DGSSN1,DGSSNCTR
"RTN","DGSSNRP2",108,0)
 K ^TMP("DGSSNAR",$J)
"RTN","DGSSNRP2",109,0)
 S DGSSN=0 F  S DGSSN=$O(^DGPR(408.13,"SSN",DGSSN)) D  Q:'DGSSN
"RTN","DGSSNRP2",110,0)
 .Q:'DGSSN
"RTN","DGSSNRP2",111,0)
 .S DGSSN1="A"_DGSSN
"RTN","DGSSNRP2",112,0)
 .S (DGSSNDA,DGSSNCTR)=0
"RTN","DGSSNRP2",113,0)
 .F  S DGSSNDA=$O(^DGPR(408.13,"SSN",DGSSN,DGSSNDA)) D  Q:'DGSSNDA
"RTN","DGSSNRP2",114,0)
 ..Q:'DGSSNDA
"RTN","DGSSNRP2",115,0)
 ..S DGSSND=$G(^DGPR(408.13,DGSSNDA,0)) Q:DGSSND']""
"RTN","DGSSNRP2",116,0)
 ..;^TMP("DGSSNAR",$J) array = IEN of INCOME PERSON file (#408.13)^dependent name
"RTN","DGSSNRP2",117,0)
 ..S DGSSNCTR=DGSSNCTR+1
"RTN","DGSSNRP2",118,0)
 ..S ^TMP("DGSSNAR",$J,DGSSN1,DGSSNCTR)=DGSSNDA_"^"_$P(DGSSND,"^")
"RTN","DGSSNRP2",119,0)
 ;
"RTN","DGSSNRP2",120,0)
 D SELPRT2,SDAM,SETTMP
"RTN","DGSSNRP2",121,0)
 Q
"RTN","DGSSNRP2",122,0)
 ;
"RTN","DGSSNRP2",123,0)
SETTMP ; Spouse/dependent with the same SSN
"RTN","DGSSNRP2",124,0)
 N DGSSNCTR,DGDEPNM,DGDEPREL,DGPAT,DGPATRL,DGSCTR,DGSSNDA1,DGVETSN2
"RTN","DGSSNRP2",125,0)
 S DGSSN="" F  S DGSSN=$O(^TMP("DGSSNAR",$J,DGSSN)) Q:DGSSN=""  D
"RTN","DGSSNRP2",126,0)
 .S DGSSNCTR=+($O(^TMP("DGSSNAR",$J,DGSSN,""),-1))
"RTN","DGSSNRP2",127,0)
 .F DGSCTR=1:1:DGSSNCTR D
"RTN","DGSSNRP2",128,0)
 ..S DGSSNDA1=$P(^TMP("DGSSNAR",$J,DGSSN,DGSCTR),"^")
"RTN","DGSSNRP2",129,0)
 ..S DGDEPNM=$P(^TMP("DGSSNAR",$J,DGSSN,DGSCTR),"^",2)
"RTN","DGSSNRP2",130,0)
 ..S DGPAT=$O(^DGPR(408.12,"C",DGSSNDA1_";DGPR(408.13,",0))
"RTN","DGSSNRP2",131,0)
 ..S DGPATRL=$G(^DGPR(408.12,+DGPAT,0))
"RTN","DGSSNRP2",132,0)
 ..;missing "C" x-ref or 0 node of 408.12 record
"RTN","DGSSNRP2",133,0)
 ..I 'DGPATRL S DGDEPREL="U",DGVETSN2="UNKNOWN"
"RTN","DGSSNRP2",134,0)
 ..E  D  I +DGVETSN2 Q:'$$OK2RPT(DFN)
"RTN","DGSSNRP2",135,0)
 ...S DFN=+DGPATRL
"RTN","DGSSNRP2",136,0)
 ...D DEM^VADPT
"RTN","DGSSNRP2",137,0)
 ...S DGVETSN2=$P($G(VADM(2)),"^")
"RTN","DGSSNRP2",138,0)
 ...S DGDEPREL=$P(DGPATRL,"^",2)
"RTN","DGSSNRP2",139,0)
 ..S ^XTMP("DG-SSNRP2","DGPART2",DGSSN,DGSCTR)=DGDEPNM_"^"_DGDEPREL_"^"_DGVETSN2
"RTN","DGSSNRP2",140,0)
 Q
"RTN","DGSSNRP2",141,0)
 ;
"RTN","DGSSNRP2",142,0)
CHECKP1 ;if there is no part1 data S PART1D=0
"RTN","DGSSNRP2",143,0)
 ;if data S PART1ST=1 indicating 1st time thru header
"RTN","DGSSNRP2",144,0)
 I '$D(^XTMP("DG-SSNRP2","DGPART1")) S PART1D=0 Q
"RTN","DGSSNRP2",145,0)
 S PART1ST=1
"RTN","DGSSNRP2",146,0)
 Q
"RTN","DGSSNRP2",147,0)
 ;
"RTN","DGSSNRP2",148,0)
HEADER ;Description: Prints the report header.
"RTN","DGSSNRP2",149,0)
 Q:QUIT
"RTN","DGSSNRP2",150,0)
 N LINE
"RTN","DGSSNRP2",151,0)
 I $Y>1 W @IOF
"RTN","DGSSNRP2",152,0)
 W !,?21,"Duplicate Spouse/Dependent SSN Report"
"RTN","DGSSNRP2",153,0)
 W ?70,"Page ",PAGE,!,?26,"Date Generated: "_$$FMTE^XLFDT(DT)
"RTN","DGSSNRP2",154,0)
 S PAGE=PAGE+1
"RTN","DGSSNRP2",155,0)
 ;
"RTN","DGSSNRP2",156,0)
 W !,$S(SECTION="PART1":"            Spouse/Dependent with no SSN or the same SSN as Veteran",1:"         Spouse/Dependent with the same SSN as another Spouse/Dependent")
"RTN","DGSSNRP2",157,0)
 I SECTION="PART1" D
"RTN","DGSSNRP2",158,0)
 .I 'PART1D,$D(^TMP($J,"SDAMA","ERR")) W !!,?10,"Appointment Database Unavailable to validate active veterans." Q
"RTN","DGSSNRP2",159,0)
 .I 'PART1D W !!,?25,"No entries meet this criteria" Q
"RTN","DGSSNRP2",160,0)
 .I 'PART1ST D PART1HD Q
"RTN","DGSSNRP2",161,0)
 .S PART1ST=0
"RTN","DGSSNRP2",162,0)
 I SECTION="PART2" D
"RTN","DGSSNRP2",163,0)
 .W !!
"RTN","DGSSNRP2",164,0)
 .I 'PART2D,$D(^TMP($J,"SDAMA","ERR")) W !!,?10,"Appointment Database Unavailable to validate active veterans." Q
"RTN","DGSSNRP2",165,0)
 .I 'PART2D W ?25,"No entries meet this criteria" Q
"RTN","DGSSNRP2",166,0)
 .W "Spouse/Dependent Name",?33,"Spouse/Dependent SSN",?55,"Relationship",?69,"Veteran SSN"
"RTN","DGSSNRP2",167,0)
 Q
"RTN","DGSSNRP2",168,0)
 ;
"RTN","DGSSNRP2",169,0)
PAUSE N DIR,DIRUT,X,Y
"RTN","DGSSNRP2",170,0)
 F  Q:$Y>(IOSL-3)  W !
"RTN","DGSSNRP2",171,0)
 S DIR(0)="E" D ^DIR
"RTN","DGSSNRP2",172,0)
 I ('(+Y))!$D(DIRUT) S QUIT=1
"RTN","DGSSNRP2",173,0)
 Q
"RTN","DGSSNRP2",174,0)
 ;
"RTN","DGSSNRP2",175,0)
PPART1 ;Description: Prints Part 1 - Spouse/Dependent with no SSN or the same SSN as Veteran
"RTN","DGSSNRP2",176,0)
 N DGPART1,DGSCTR,LINE S DGVETSSN=0
"RTN","DGSSNRP2",177,0)
 F  S DGVETSSN=$O(^XTMP("DG-SSNRP2","DGPART1",DGVETSSN)) Q:DGVETSSN']""  D  Q:QUIT
"RTN","DGSSNRP2",178,0)
 .S DGSCTR=0,DGVETNM=$G(^XTMP("DG-SSNRP2","DGPART1",DGVETSSN))
"RTN","DGSSNRP2",179,0)
 .Q:QUIT  D PART1HEA Q:QUIT
"RTN","DGSSNRP2",180,0)
 .F  S DGSCTR=$O(^XTMP("DG-SSNRP2","DGPART1",DGVETSSN,DGSCTR)) Q:'DGSCTR  D  Q:QUIT
"RTN","DGSSNRP2",181,0)
 ..S DGPART1=$G(^XTMP("DG-SSNRP2","DGPART1",DGVETSSN,DGSCTR))
"RTN","DGSSNRP2",182,0)
 ..Q:DGPART1']""
"RTN","DGSSNRP2",183,0)
 ..S LINE=$$LJ(" "_$P(DGPART1,"^"),25)_"     "_$$LJ($P(DGPART1,"^",2),22)
"RTN","DGSSNRP2",184,0)
 ..S LINE=LINE_$$LJ($$RELCODE($P(DGPART1,"^",3)),12)
"RTN","DGSSNRP2",185,0)
 ..D LINE(LINE) Q:QUIT
"RTN","DGSSNRP2",186,0)
 ..Q:QUIT
"RTN","DGSSNRP2",187,0)
 .Q:QUIT
"RTN","DGSSNRP2",188,0)
 Q
"RTN","DGSSNRP2",189,0)
 ;
"RTN","DGSSNRP2",190,0)
PPART2 ;Description: Prints Part 2 -Spouse/Dependent with the same SSN as another Spouse/Dependent
"RTN","DGSSNRP2",191,0)
 N DGDEPSSN,DGPART2,DGP2F,DGSCTR,LINE
"RTN","DGSSNRP2",192,0)
 S DGP2F=1,DGDEPSSN=0
"RTN","DGSSNRP2",193,0)
 F  S DGDEPSSN=$O(^XTMP("DG-SSNRP2","DGPART2",DGDEPSSN)) Q:DGDEPSSN']""  D  Q:QUIT
"RTN","DGSSNRP2",194,0)
 .I 'DGP2F W !
"RTN","DGSSNRP2",195,0)
 .E  S DGP2F=0
"RTN","DGSSNRP2",196,0)
 .S DGSCTR=0
"RTN","DGSSNRP2",197,0)
 .F  S DGSCTR=$O(^XTMP("DG-SSNRP2","DGPART2",DGDEPSSN,DGSCTR)) Q:'DGSCTR  D  Q:QUIT
"RTN","DGSSNRP2",198,0)
 ..S DGPART2=$G(^XTMP("DG-SSNRP2","DGPART2",DGDEPSSN,DGSCTR))
"RTN","DGSSNRP2",199,0)
 ..Q:DGPART2']""
"RTN","DGSSNRP2",200,0)
 ..S LINE=$$LJ(" "_$P(DGPART2,"^"),29)_"     "_$$LJ($E(DGDEPSSN,2,10),21)
"RTN","DGSSNRP2",201,0)
 ..S LINE=LINE_$$LJ($$RELCODE($P(DGPART2,"^",2)),13)
"RTN","DGSSNRP2",202,0)
 ..S LINE=LINE_$$LJ(" "_$P(DGPART2,"^",3),10)
"RTN","DGSSNRP2",203,0)
 ..D LINE(LINE) Q:QUIT
"RTN","DGSSNRP2",204,0)
 ..Q:QUIT
"RTN","DGSSNRP2",205,0)
 .Q:QUIT
"RTN","DGSSNRP2",206,0)
 Q
"RTN","DGSSNRP2",207,0)
 ;
"RTN","DGSSNRP2",208,0)
LJ(STRING,LENGTH) ;
"RTN","DGSSNRP2",209,0)
 Q $$LJ^XLFSTR($E(STRING,1,LENGTH),LENGTH)
"RTN","DGSSNRP2",210,0)
 ;
"RTN","DGSSNRP2",211,0)
RELCODE(DGCODE) ;returns relationship name from RELATIONSHIP file (#408.11)
"RTN","DGSSNRP2",212,0)
 ;
"RTN","DGSSNRP2",213,0)
 N DGNAME S DGNAME=$P($G(^DG(408.11,+DGCODE,0)),"^")
"RTN","DGSSNRP2",214,0)
 I DGNAME']"" Q "UNKNOWN"
"RTN","DGSSNRP2",215,0)
 Q DGNAME
"RTN","DGSSNRP2",216,0)
 ;
"RTN","DGSSNRP2",217,0)
PART1HEA ;heading for part1 (vet name & SSN and spouse/dep name & SSN)
"RTN","DGSSNRP2",218,0)
 I ('CRT),($Y>(IOSL-6)) D  Q
"RTN","DGSSNRP2",219,0)
 .D HEADER
"RTN","DGSSNRP2",220,0)
 ;
"RTN","DGSSNRP2",221,0)
 E  I CRT,($Y>(IOSL-8)) D  Q:QUIT
"RTN","DGSSNRP2",222,0)
 .D PAUSE
"RTN","DGSSNRP2",223,0)
 .Q:QUIT
"RTN","DGSSNRP2",224,0)
 .D HEADER
"RTN","DGSSNRP2",225,0)
 ;
"RTN","DGSSNRP2",226,0)
 E  D PART1HD
"RTN","DGSSNRP2",227,0)
 Q
"RTN","DGSSNRP2",228,0)
 ;
"RTN","DGSSNRP2",229,0)
PART1HD W !!,"Veteran: ",$$LJ(DGVETNM,30),"     Veteran SSN: ",$$LJ($E(DGVETSSN,2,11),10),!!,"  Spouse/Dependent Name       Spouse/Dependent SSN  Relationship"
"RTN","DGSSNRP2",230,0)
 Q
"RTN","DGSSNRP2",231,0)
OKRPT(DFN,VADM) ; Date of Death?
"RTN","DGSSNRP2",232,0)
 N X,X1,X2
"RTN","DGSSNRP2",233,0)
 I '$D(VADM) D DEM^VADPT
"RTN","DGSSNRP2",234,0)
 I +VADM(6) Q 0
"RTN","DGSSNRP2",235,0)
 Q 1
"RTN","DGSSNRP2",236,0)
 ;
"RTN","DGSSNRP2",237,0)
OKIMP(DFN) ; Inpatient or Outpatient in the last 3 years?
"RTN","DGSSNRP2",238,0)
 N VAIP S VAIP("D")="LAST" D IN5^VADPT
"RTN","DGSSNRP2",239,0)
 I VAIP(3)'="" D  Q '(X>1095)
"RTN","DGSSNRP2",240,0)
 .S X1=DT,X2=$P(VAIP(3),U)\1 D ^%DTC
"RTN","DGSSNRP2",241,0)
 .I X<1096 S ^TMP($J,"SDAMA",DFN,+VAIP(3))="^^I;INPATIENT"
"RTN","DGSSNRP2",242,0)
 Q 1
"RTN","DGSSNRP2",243,0)
 ;
"RTN","DGSSNRP2",244,0)
OK2RPT(DFN) ; Appt kept in the last 3 years?
"RTN","DGSSNRP2",245,0)
 N APPCK,AFLG S (APPCK,AFLG)=0
"RTN","DGSSNRP2",246,0)
 F  S APPCK=$O(^TMP($J,"SDAMA",DFN,APPCK)) Q:'APPCK!(AFLG)  D
"RTN","DGSSNRP2",247,0)
 .S APPTYP=$P($P(^TMP($J,"SDAMA",DFN,APPCK),U,3),";")
"RTN","DGSSNRP2",248,0)
 .I "^R^I^"[(U_APPTYP_U) S AFLG=1
"RTN","DGSSNRP2",249,0)
 Q AFLG
"RTN","DGSSNRP2",250,0)
 ;
"RTN","DGSSNRP2",251,0)
VBLDARR(DFN) ; Build array of specified veterans
"RTN","DGSSNRP2",252,0)
 S ^TMP($J,"SDAMAPI",VARR)=$G(^TMP($J,"SDAMAPI",VARR))_DFN_";"
"RTN","DGSSNRP2",253,0)
 I $L(^TMP($J,"SDAMAPI",VARR))>180 S VARR=VARR+1
"RTN","DGSSNRP2",254,0)
 Q
"RTN","DGSSNRP2",255,0)
 ;
"RTN","DGSSNRP2",256,0)
SDAM N DGARRAY,I,SDCNT
"RTN","DGSSNRP2",257,0)
 S DGARRAY(1)=$$FMADD^XLFDT(DT,-1095)_";"_DT,DGARRAY("FLDS")=3,DGARRAY("SORT")="P"
"RTN","DGSSNRP2",258,0)
 F I=1:1 Q:'$D(^TMP($J,"SDAMAPI",I))  D
"RTN","DGSSNRP2",259,0)
 .S DGARRAY(4)=^TMP($J,"SDAMAPI",I)
"RTN","DGSSNRP2",260,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGSSNRP2",261,0)
 .I SDCNT'>0 K ^TMP($J,"SDAMA301"),^TMP($J,"SDAMAPI",I) Q
"RTN","DGSSNRP2",262,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","DGSSNRP2",263,0)
 .K ^TMP($J,"SDAMA301"),^TMP($J,"SDAMAPI",I)
"RTN","DGSSNRP2",264,0)
 I '$D(^TMP($J,"SDAMA")) S ^TMP($J,"SDAMA","ERR")=""
"RTN","DGSSNRP2",265,0)
 Q
"RTN","DGSSNRP2",266,0)
 ;
"RTN","DGSSNRP2",267,0)
SELPRT2 ; Select records for Part 2
"RTN","DGSSNRP2",268,0)
 N DGSSN,DGCNT,DGSSNP,DGPTR,DGPTRL,VARR S VARR=1
"RTN","DGSSNRP2",269,0)
 S DGSSN="" F  S DGSSN=$O(^TMP("DGSSNAR",$J,DGSSN)) Q:DGSSN=""  D
"RTN","DGSSNRP2",270,0)
 .S DGCNT=$O(^TMP("DGSSNAR",$J,DGSSN,""),-1)
"RTN","DGSSNRP2",271,0)
 .I DGCNT<2 K ^TMP("DGSSNAR",$J,DGSSN) Q
"RTN","DGSSNRP2",272,0)
 .S DGSSNP=$P(^TMP("DGSSNAR",$J,DGSSN,DGCNT),U)
"RTN","DGSSNRP2",273,0)
 .S DGPTR=$O(^DGPR(408.12,"C",DGSSNP_";DGPR(408.13,",0))
"RTN","DGSSNRP2",274,0)
 .S DGPTRL=+$G(^DGPR(408.12,+DGPTR,0))
"RTN","DGSSNRP2",275,0)
 .I $$OKIMP(DGPTRL)
"RTN","DGSSNRP2",276,0)
 .Q:$D(^TMP($J,"SDAMA",DGPTRL))
"RTN","DGSSNRP2",277,0)
 .D VBLDARR(DGPTRL)
"RTN","DGSSNRP2",278,0)
 Q
"RTN","DGSTAT")
0^21^B14149769
"RTN","DGSTAT",1,0)
DGSTAT ;ALB/MRL - ADT SYSTEM STATUS DISPLAY ; 03/12/2004
"RTN","DGSTAT",2,0)
 ;;5.3;Registration;**75,151,568**;Aug 13, 1993
"RTN","DGSTAT",3,0)
 ;
"RTN","DGSTAT",4,0)
 ; modified for K8, 12/7/95; mli
"RTN","DGSTAT",5,0)
 ;
"RTN","DGSTAT",6,0)
EN ; main entry point
"RTN","DGSTAT",7,0)
 I $$VERSION^XPDUTL("XU")<8 W !,"You must have KERNEL version 8.0 or higher to run this option!" G Q
"RTN","DGSTAT",8,0)
 S ^UTILITY("DG",$J,"ST")=""
"RTN","DGSTAT",9,0)
 S DGUSER=$P($G(^VA(200,+DUZ,.1)),"^",4),DGNOW=$$NOW^XLFDT()
"RTN","DGSTAT",10,0)
 W @IOF,!,$$GREETING(),$S(DGUSER]"":" "_DGUSER,1:""),".  Welcome to MAS, VERSION ",$$VERSION^XPDUTL("REGISTRATION"),!
"RTN","DGSTAT",11,0)
 F I=1:1:40 W "= "
"RTN","DGSTAT",12,0)
 F I=334,345 S X=$O(^DGAM(I,"ALST",0)) I X W !,"AMIS ",I S DGX=$X D L W "Last run for month of ",$$DATE(X,1) ; amis 334,345
"RTN","DGSTAT",13,0)
 S X=$P($P($G(^DG(43,1,"AMIS")),"^",6),"'",2)
"RTN","DGSTAT",14,0)
 W !,"AMIS 401-420 Reports" S DGX=$X D L W "Last run for month of ",$$DATE(X,1) ;                              amis 400s
"RTN","DGSTAT",15,0)
 S X=$G(^DG(43,1,"GLS"))
"RTN","DGSTAT",16,0)
 W !,"Auto Recalculation" S DGX=$X D L W "Last run ",$$DATE(X,7)," on CPU ",$P(X,"^",8) ;                      auto recalc
"RTN","DGSTAT",17,0)
 S X=$$SCHED("DG G&L RECALCULATION AUTO")
"RTN","DGSTAT",18,0)
 W ! D L W "Scheduled for ",$S(X:$$DATE(X,1),1:"(not currently scheduled)")
"RTN","DGSTAT",19,0)
 I X<DGNOW D
"RTN","DGSTAT",20,0)
 . N DIQUIET ; uced to silence echo of date in %dt
"RTN","DGSTAT",21,0)
 . S DIQUIET=1
"RTN","DGSTAT",22,0)
 . W ! D L W "Rescheduled to run at 9 p.m."
"RTN","DGSTAT",23,0)
 . D RESCH^XUTMOPT("DG G&L RECALCULATION AUTO",DT_.2100,,,"L")
"RTN","DGSTAT",24,0)
 W !,"Embosser Option from Registration" S DGX=$X D L W "Is turned ",$$ONOFF(28) ;                             emboss on/off
"RTN","DGSTAT",25,0)
 W !,"Gains & Losses (G&L)" S DGX=$X D L W "Last run ",$$DATE($G(^DG(43,1,"GLS")),11) ;                        g&l
"RTN","DGSTAT",26,0)
 W !,"HINQ Option from Registration" S DGX=$X D L W "Is turned ",$$ONOFF(27) ;                                 hinq at reg
"RTN","DGSTAT",27,0)
 W !,"RUG-II Background Job" S DGX=$X D L W "Last run ",$$DATE($G(^DG(43,1,"RUG")),1) ;                        rug bgj
"RTN","DGSTAT",28,0)
 S X=$$LAST^DGSDUTL,X=$G(^SDD(409.65,+X,0)) ;                                                                   appt stat upd
"RTN","DGSTAT",29,0)
 W !,"Appointment Status Update" S DGX=$X D L W "Last run ",$$DATE(X,5)
"RTN","DGSTAT",30,0)
 W ! D L W "Updated appointments for ",$$DATE(X,1)
"RTN","DGSTAT",31,0)
 W ! D L W "Scheduled for " S X=$$SCHED("SDAM BACKGROUND JOB") W $S(X:$$UP^XLFSTR($$FMTE^XLFDT(X)),1:"(not currently scheduled)")
"RTN","DGSTAT",32,0)
 W !,"IRT Background Job" S DGX=$X D L W "Last run ",$$DATE($G(^DG(43,1,"IRT")),1) ;                           irt bgj
"RTN","DGSTAT",33,0)
 W ! D L W "Scheduled for " S X=$$SCHED("DGJ IRT UPDATE (Background)") W $S(X:$$UP^XLFSTR($$FMTE^XLFDT(X)),1:"(not currently scheduled)")
"RTN","DGSTAT",34,0)
 I $D(^%ZOSF("UCI")) X ^("UCI") W !!,"YOU ARE PRESENTLY ON CPU ",Y,!
"RTN","DGSTAT",35,0)
Q W ! I $D(DUZ("AUTO")),DUZ("AUTO") R "Press RETURN to continue:  ",X:DTIME
"RTN","DGSTAT",36,0)
 K %DT,%H,DA,DGRE,DGUSER,DGVERS,DGX,DIE,DR,I,DGNOW,X,Y Q
"RTN","DGSTAT",37,0)
 ;
"RTN","DGSTAT",38,0)
ONOFF(PIECE) ; return ON or OFF
"RTN","DGSTAT",39,0)
 ;  input - piece of 0 node of file 43 wanted
"RTN","DGSTAT",40,0)
 ; output - ON or OFF
"RTN","DGSTAT",41,0)
 ;
"RTN","DGSTAT",42,0)
 Q $S($P($G(^DG(43,1,0)),"^",PIECE):"ON",1:"OFF")
"RTN","DGSTAT",43,0)
 ;
"RTN","DGSTAT",44,0)
DATE(NODE,PIECE) ; return appropriate date
"RTN","DGSTAT",45,0)
 ;  input - NODE as node of data
"RTN","DGSTAT",46,0)
 ;          PIECE as piece of node to convert
"RTN","DGSTAT",47,0)
 ; output - date in external format
"RTN","DGSTAT",48,0)
 ;
"RTN","DGSTAT",49,0)
 Q $$UP^XLFSTR($$FMTE^XLFDT($P(NODE,"^",PIECE)))
"RTN","DGSTAT",50,0)
 ;
"RTN","DGSTAT",51,0)
SHOW I $S('$D(^DG(43,1,0)):1,'$P(^(0),"^",34):1,$D(^UTILITY("DG",$J,"ST")):1,1:0) Q
"RTN","DGSTAT",52,0)
 G EN
"RTN","DGSTAT",53,0)
 ;
"RTN","DGSTAT",54,0)
L ; write line of dots
"RTN","DGSTAT",55,0)
 ;
"RTN","DGSTAT",56,0)
 W ?DGX+1 F I=1:1:(36-(DGX+1)) W "."
"RTN","DGSTAT",57,0)
 W " "
"RTN","DGSTAT",58,0)
 Q
"RTN","DGSTAT",59,0)
 ;
"RTN","DGSTAT",60,0)
GREETING() ; randomize greeting
"RTN","DGSTAT",61,0)
 N X,%H
"RTN","DGSTAT",62,0)
 S X=$P("Hello^Hi There^Good ^Hello There^Hi","^",$R(5)+1)
"RTN","DGSTAT",63,0)
 I X["Good" S %H=$P($H,",",2),X=X_$S(%H<43200:"Morning",%H<61200:"Afternoon",1:"Evening")
"RTN","DGSTAT",64,0)
 Q X
"RTN","DGSTAT",65,0)
 ;
"RTN","DGSTAT",66,0)
SCHED(OPTION) ; sent back time time for queued process
"RTN","DGSTAT",67,0)
 ;  input - OPTION as name of option
"RTN","DGSTAT",68,0)
 ; output - date currently queued (external format)
"RTN","DGSTAT",69,0)
 N I,IEN,X
"RTN","DGSTAT",70,0)
 S (I,X)=0,IEN=$$LKOPT^XPDMENU(OPTION)
"RTN","DGSTAT",71,0)
 F  S I=$O(^DIC(19.2,"B",IEN,I)) Q:'I  S X=$P($G(^DIC(19.2,+I,0)),"^",2) Q:X>$$NOW^XLFDT()
"RTN","DGSTAT",72,0)
 Q X
"RTN","DGYPSDE1")
0^22^B32076136
"RTN","DGYPSDE1",1,0)
DGYPSDE1 ;ALB/MJK/LSM - DGYP Global Estimator ; 03/19/2004
"RTN","DGYPSDE1",2,0)
 ;;5.3;REGISTRATION;**568**;Aug 13, 1993
"RTN","DGYPSDE1",3,0)
 ;
"RTN","DGYPSDE1",4,0)
INTRO ; -- display text
"RTN","DGYPSDE1",5,0)
 W @IOF
"RTN","DGYPSDE1",6,0)
 F I=1:1 S X=$P($T(TEXT+I),";;",2) Q:X="END"  W X,! I $Y>20 S DIR(0)="E" D ^DIR K DIR Q:'Y  W @IOF
"RTN","DGYPSDE1",7,0)
 Q
"RTN","DGYPSDE1",8,0)
 ;
"RTN","DGYPSDE1",9,0)
MAIL ; -- put in mm
"RTN","DGYPSDE1",10,0)
 W !
"RTN","DGYPSDE1",11,0)
 S DIR(0)="Y",DIR("A")="Place above text in a Mailman Message",DIR("B")="No"
"RTN","DGYPSDE1",12,0)
 D ^DIR K DIR G MAILQ:'Y
"RTN","DGYPSDE1",13,0)
 K ^UTILITY("DGYPEST",$J)
"RTN","DGYPSDE1",14,0)
 F I=1:1 S X=$P($T(TEXT+I),";;",2) Q:X="END"  S ^UTILITY("DGYPEST",$J,I,0)=X
"RTN","DGYPSDE1",15,0)
 S XMSUB="SCE Global Estimator",XMDUZ=.5,XMY(DUZ)="",XMTEXT="^UTILITY(""DGYPEST"",$J,"
"RTN","DGYPSDE1",16,0)
 D ^XMD W !,"...mailed"
"RTN","DGYPSDE1",17,0)
MAILQ K XMY,XMDUZ,XMTEXT,XMSUB,^UTILITY("DGYPEST",$J)
"RTN","DGYPSDE1",18,0)
 Q
"RTN","DGYPSDE1",19,0)
 ;
"RTN","DGYPSDE1",20,0)
TEXT ;
"RTN","DGYPSDE1",21,0)
 ;;               *** ^SCE & ^SDD(409.42) Global Estimators ***
"RTN","DGYPSDE1",22,0)
 ;;
"RTN","DGYPSDE1",23,0)
 ;;Purpose:
"RTN","DGYPSDE1",24,0)
 ;;--------
"RTN","DGYPSDE1",25,0)
 ;;In previous versions of PIMS, a patient's outpatient information has
"RTN","DGYPSDE1",26,0)
 ;;been stored in various files in the VistA database. With the
"RTN","DGYPSDE1",27,0)
 ;;requirement to check out all outpatient encounters, it was necessary
"RTN","DGYPSDE1",28,0)
 ;;to consolidate much of the common outpatient information into one
"RTN","DGYPSDE1",29,0)
 ;;outpatient encounter file.
"RTN","DGYPSDE1",30,0)
 ;;
"RTN","DGYPSDE1",31,0)
 ;;In PIMS v5.3, the data will reside in the new OUTPATIENT
"RTN","DGYPSDE1",32,0)
 ;;ENCOUNTER(#409.68) file as well as in the old data structures.
"RTN","DGYPSDE1",33,0)
 ;;This file will hold encounter data for all checked out encounters.
"RTN","DGYPSDE1",34,0)
 ;;This will include information from the following:
"RTN","DGYPSDE1",35,0)
 ;;         o appointments: SDAPI - Scheduling API
"RTN","DGYPSDE1",36,0)
 ;;         o add/edits:    ^SDV
"RTN","DGYPSDE1",37,0)
 ;;         o dispositions: ^DPT(patient,"DIS",date/time)
"RTN","DGYPSDE1",38,0)
 ;;
"RTN","DGYPSDE1",39,0)
 ;;The MUMPS global for this file is ^SCE.
"RTN","DGYPSDE1",40,0)
 ;;
"RTN","DGYPSDE1",41,0)
 ;;
"RTN","DGYPSDE1",42,0)
 ;;Also, as part of the check out process, questions regarding
"RTN","DGYPSDE1",43,0)
 ;;whether the encounter was related to a service connected disability,
"RTN","DGYPSDE1",44,0)
 ;;agent orange, ionization or environmental contaminants from the
"RTN","DGYPSDE1",45,0)
 ;;Persian Gulf war, will be asked when appropriate.
"RTN","DGYPSDE1",46,0)
 ;;
"RTN","DGYPSDE1",47,0)
 ;;This data will be stored in the new OUTPATIENT CLASSIFICATION(#409.42)
"RTN","DGYPSDE1",48,0)
 ;;file in the ^SDD(409.42) global.
"RTN","DGYPSDE1",49,0)
 ;;
"RTN","DGYPSDE1",50,0)
 ;;
"RTN","DGYPSDE1",51,0)
 ;;The purpose of this utility is the following:
"RTN","DGYPSDE1",52,0)
 ;;             1. estimate a one year rate of growth for
"RTN","DGYPSDE1",53,0)
 ;;                ^SCE using as a base the encounter data
"RTN","DGYPSDE1",54,0)
 ;;                for the previous 365 days
"RTN","DGYPSDE1",55,0)
 ;;
"RTN","DGYPSDE1",56,0)
 ;;             2. estimate a one year rate of growth for
"RTN","DGYPSDE1",57,0)
 ;;                ^SDD(409.42) using as a base the encounter data
"RTN","DGYPSDE1",58,0)
 ;;                for the previous 365 and the patient demographic
"RTN","DGYPSDE1",59,0)
 ;;                information
"RTN","DGYPSDE1",60,0)
 ;;
"RTN","DGYPSDE1",61,0)
 ;;Using these estimates, you can make a better determination
"RTN","DGYPSDE1",62,0)
 ;;as to where to place this new ^SCE global and how large the
"RTN","DGYPSDE1",63,0)
 ;;existing ^SDD global will grow.
"RTN","DGYPSDE1",64,0)
 ;;
"RTN","DGYPSDE1",65,0)
 ;;
"RTN","DGYPSDE1",66,0)
 ;;
"RTN","DGYPSDE1",67,0)
 ;;Algorithms:
"RTN","DGYPSDE1",68,0)
 ;;-----------
"RTN","DGYPSDE1",69,0)
 ;;1. Outpatient Encounters - ^SCE:
"RTN","DGYPSDE1",70,0)
 ;;
"RTN","DGYPSDE1",71,0)
 ;;This utility will scan your site's encounter database for
"RTN","DGYPSDE1",72,0)
 ;;the previous 365 days. It will count the number of appointments,
"RTN","DGYPSDE1",73,0)
 ;;add/edits and dispositions.
"RTN","DGYPSDE1",74,0)
 ;;
"RTN","DGYPSDE1",75,0)
 ;;Appointments that were cancelled or no-showed are not included
"RTN","DGYPSDE1",76,0)
 ;;in the calculations. Dispositions with a status of 'APPLICATION
"RTN","DGYPSDE1",77,0)
 ;;WITHOUT EXAM' are also not included.
"RTN","DGYPSDE1",78,0)
 ;;
"RTN","DGYPSDE1",79,0)
 ;;After obtaining these counts, they will be applied against
"RTN","DGYPSDE1",80,0)
 ;;the estimated block size needed for each type of encounter.
"RTN","DGYPSDE1",81,0)
 ;;Each type of encounter is estimated to use .16 1K blocks.
"RTN","DGYPSDE1",82,0)
 ;;
"RTN","DGYPSDE1",83,0)
 ;;
"RTN","DGYPSDE1",84,0)
 ;;2. Outpatient Classifications - ^SDD(409.42):
"RTN","DGYPSDE1",85,0)
 ;;The classifications estimate looks at the patient's demographic
"RTN","DGYPSDE1",86,0)
 ;;data as it scans the outpatient encounter database in #1 above.
"RTN","DGYPSDE1",87,0)
 ;;If the demographic data indicates a classification question
"RTN","DGYPSDE1",88,0)
 ;;would have been required for the encounter then a counter for the
"RTN","DGYPSDE1",89,0)
 ;;specific classification is incremented.
"RTN","DGYPSDE1",90,0)
 ;;
"RTN","DGYPSDE1",91,0)
 ;;For example, if the patient is a service connected veteran, the
"RTN","DGYPSDE1",92,0)
 ;;SC counter will be incremented.
"RTN","DGYPSDE1",93,0)
 ;;
"RTN","DGYPSDE1",94,0)
 ;;After obtaining these counts, they will be applied against
"RTN","DGYPSDE1",95,0)
 ;;the estimated block size needed for each type of classification.
"RTN","DGYPSDE1",96,0)
 ;;Each type of classification is estimated to use .08 1K blocks.
"RTN","DGYPSDE1",97,0)
 ;;
"RTN","DGYPSDE1",98,0)
 ;;NOTE: Encounters with stop codes 104 thru 170 do not, at this time,
"RTN","DGYPSDE1",99,0)
 ;;      require any classification questions to be asked. As a result,
"RTN","DGYPSDE1",100,0)
 ;;      they are not included in the classification counts.
"RTN","DGYPSDE1",101,0)
 ;;
"RTN","DGYPSDE1",102,0)
 ;;
"RTN","DGYPSDE1",103,0)
 ;;3. The estimation algorithm takes into account the following factors:
"RTN","DGYPSDE1",104,0)
 ;;         o pointer blocks needed
"RTN","DGYPSDE1",105,0)
 ;;         o blocks needed for actual data
"RTN","DGYPSDE1",106,0)
 ;;         o blocks needed for cross references
"RTN","DGYPSDE1",107,0)
 ;;
"RTN","DGYPSDE1",108,0)
 ;;   Also, the algorithm is based on a global efficiency of 74%.
"RTN","DGYPSDE1",109,0)
 ;;
"RTN","DGYPSDE1",110,0)
 ;;
"RTN","DGYPSDE1",111,0)
 ;;
"RTN","DGYPSDE1",112,0)
 ;;Results Reporting:
"RTN","DGYPSDE1",113,0)
 ;;------------------
"RTN","DGYPSDE1",114,0)
 ;;After the estimations are calculated, the results will be
"RTN","DGYPSDE1",115,0)
 ;;reported to the user via a MailMan message.
"RTN","DGYPSDE1",116,0)
 ;;END
"RTN","DGYPSDE2")
0^23^B12403558
"RTN","DGYPSDE2",1,0)
DGYPSDE2 ;ALB/LSM - EST. FILE SIZE NEEDED FOR OUT PATIENT ENCOUNTER FILE ; 03/18/2004
"RTN","DGYPSDE2",2,0)
 ;;5.3;REGISTRATION;**568**;Aug 13, 1993
"RTN","DGYPSDE2",3,0)
 ;
"RTN","DGYPSDE2",4,0)
START N DGI,DGDTE,DGNUM,DGCSC,DGCNT,DGCLAR,X1,X2,DFN
"RTN","DGYPSDE2",5,0)
 N DGAPT,DGDISP,DGNODE,DGAE,DGAEDT,DGPCL,DGARRAY,SDCNT
"RTN","DGYPSDE2",6,0)
 S X1=DT,X2=-365 D C^%DTC S DG1YR=X ; one yr ago
"RTN","DGYPSDE2",7,0)
 S TDT=DT+.2359 ; today
"RTN","DGYPSDE2",8,0)
 ; Build Appointment information from Scheduling API
"RTN","DGYPSDE2",9,0)
 S DGARRAY(1)=DG1YR_";"_TDT,DGARRAY("FLDS")="2;3;10",DGARRAY("SORT")="P"
"RTN","DGYPSDE2",10,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGYPSDE2",11,0)
 S (DGYR("AP"),DGYR("DI"),DGYR("AE"),DGYR("CR"),DFN,DGCNT)=0
"RTN","DGYPSDE2",12,0)
 ;SET UP A TEMP ARRAY -DGCLAR- WITH CLASSIFICATION ABBREVIATIONS
"RTN","DGYPSDE2",13,0)
 S DGCLAR(1)="AO",DGCLAR(2)="IR",DGCLAR(3)="SC",DGCLAR(4)="EC"
"RTN","DGYPSDE2",14,0)
 F DGCNT=1:1:4 S DGCL(DGCNT)=0
"RTN","DGYPSDE2",15,0)
 D DISAPP,AEDIT
"RTN","DGYPSDE2",16,0)
 K DGARRAY,SDCNT,^TMP($J,"SDAMA301")
"RTN","DGYPSDE2",17,0)
 Q
"RTN","DGYPSDE2",18,0)
 ;
"RTN","DGYPSDE2",19,0)
DISAPP ; FOR THE LAST YR PICK UP ALL APPT. AND DISP. FROM PATIENT FILE
"RTN","DGYPSDE2",20,0)
 ; SDAMA301 = APPOINTMENTS, "DIS" = DISPOSTIONS
"RTN","DGYPSDE2",21,0)
 F  S DFN=$O(^DPT(DFN)) Q:'DFN  D
"RTN","DGYPSDE2",22,0)
 .S DGAPT=0 F  S DGAPT=$O(^TMP($J,"SDAMA301",DFN,DGAPT)) Q:'DGAPT  D
"RTN","DGYPSDE2",23,0)
 ..N DGAPT0,DGCLN,DGSTAT,DGTYP S DGAPT0=^TMP($J,"SDAMA301",DFN,DGAPT)
"RTN","DGYPSDE2",24,0)
 ..S DGSTAT=$P($P(DGAPT0,U,3),";"),DGCLN=$P($P(DGAPT0,U,2),";"),DGTYP=$P($P(DGAPT0,U,10),";")
"RTN","DGYPSDE2",25,0)
 ..I DGSTAT["C"!(DGSTAT["N") Q
"RTN","DGYPSDE2",26,0)
 ..; INCR WILL CHECK FOR AND ACCUMULATE CLASSIFICATIONS
"RTN","DGYPSDE2",27,0)
 ..I $$STATUS(DFN,DGAPT,DGCLN,1)="C",$$EXEMPT($P($G(^SC(DGCLN,0)),U,7),DGTYP) D INCR(DFN)
"RTN","DGYPSDE2",28,0)
 ..S DGYR("AP")=DGYR("AP")+1
"RTN","DGYPSDE2",29,0)
 ..S:$P($G(^SC(DGCLN,0)),U,18)]"" DGYR("CR")=DGYR("CR")+1
"RTN","DGYPSDE2",30,0)
 .; -- Dispositions
"RTN","DGYPSDE2",31,0)
 .S DGDISP=0 F  S DGDISP=$O(^DPT(DFN,"DIS",DGDISP)) Q:'DGDISP  D
"RTN","DGYPSDE2",32,0)
 ..S DGNODE=$G(^DPT(DFN,"DIS",DGDISP,0))
"RTN","DGYPSDE2",33,0)
 ..I ((+DGNODE)>DG1YR)&((+DGNODE)<TDT),$P(DGNODE,U,2)=0!($P(DGNODE,U,2)=1)  D
"RTN","DGYPSDE2",34,0)
 ...I $$STATUS(DFN,DGDISP,0,3)="C",$$EXEMPT(+$O(^DIC(40.7,"C",102,0)),9) D INCR(DFN)
"RTN","DGYPSDE2",35,0)
 ...S DGYR("DI")=DGYR("DI")+1
"RTN","DGYPSDE2",36,0)
 Q
"RTN","DGYPSDE2",37,0)
AEDIT ;FOR THE PAST YEAR PICK UP ALL ADD/EDITS FROM THE STOP CODE FILE
"RTN","DGYPSDE2",38,0)
 ;
"RTN","DGYPSDE2",39,0)
 S DGAEDT=""
"RTN","DGYPSDE2",40,0)
 F  S DGAEDT=$O(^SDV(DGAEDT)) Q:DGAEDT=""  D
"RTN","DGYPSDE2",41,0)
 .S DGNODE=$G(^SDV(DGAEDT,0))
"RTN","DGYPSDE2",42,0)
 .I (DGAEDT>DG1YR)&(DGAEDT<TDT)  D
"RTN","DGYPSDE2",43,0)
 ..S DGAE=0
"RTN","DGYPSDE2",44,0)
 ..F  S DGAE=$O(^SDV(DGAEDT,"CS",DGAE)) Q:'DGAE  D
"RTN","DGYPSDE2",45,0)
 ...N DGAE0 S DGAE0=^SDV(DGAEDT,"CS",DGAE,0)
"RTN","DGYPSDE2",46,0)
 ...; DUPL WILL CHECK FOR ASSOCIATED APPT
"RTN","DGYPSDE2",47,0)
 ...I $$STATUS(+$P(DGNODE,U,2),+DGNODE,0,2),$$EXEMPT(+DGAE0,+$P(DGAE0,U,5)) D INCR($P(DGNODE,U,2))
"RTN","DGYPSDE2",48,0)
 ...D DUPL
"RTN","DGYPSDE2",49,0)
 ...S DGYR("AE")=DGYR("AE")+1
"RTN","DGYPSDE2",50,0)
 Q
"RTN","DGYPSDE2",51,0)
DUPL ; FOR EACH A/E RUN THROUGH THE APPTS LOOOK FOR ASSOC. APPTS
"RTN","DGYPSDE2",52,0)
 ; IF FOUND AND THEY HAVE A CLASSIFICATION CALL DECR
"RTN","DGYPSDE2",53,0)
 N DGBEG,DGEND
"RTN","DGYPSDE2",54,0)
 S DGCSC=^SDV(DGAEDT,"CS",DGAE,0)
"RTN","DGYPSDE2",55,0)
 S DFN=$P(DGNODE,U,2)
"RTN","DGYPSDE2",56,0)
 S DGCL=$P(DGCSC,U,3)
"RTN","DGYPSDE2",57,0)
 S DGBEG=$P(DGAEDT,".")
"RTN","DGYPSDE2",58,0)
 S DGEND=DGBEG+.2359
"RTN","DGYPSDE2",59,0)
 S DGI=DGBEG
"RTN","DGYPSDE2",60,0)
 F  S DGI=$O(^TMP($J,"SDAMA301",DFN,DGI)) Q:('DGI)!(DGI>DGEND)  D
"RTN","DGYPSDE2",61,0)
 .N DGI0,DGIST,DGICL,DGITP S DGI0=^TMP($J,"SDAMA301",DFN,DGI)
"RTN","DGYPSDE2",62,0)
 .S DGIST=$P($P(DGI0,U,3),";"),DGICL=$P($P(DGI0,U,2),";"),DGITP=$P($P(DGI0,U,10),";")
"RTN","DGYPSDE2",63,0)
 .I DGIST["C"!(DGIST["N") Q
"RTN","DGYPSDE2",64,0)
 .I +DGI0=DGCL,$$STATUS(DFN,DGI,DGCL,1)="C",$$EXEMPT(+$P($G(^SC(DGICL,0)),U,7),DGITP) D DECR(DFN)
"RTN","DGYPSDE2",65,0)
 Q
"RTN","DGYPSDE2",66,0)
DECR(DFN) ;  DECREMENT ARRAY WITH THE CLASS CNTS 
"RTN","DGYPSDE2",67,0)
 N DGYPCL D BLD^DGYPSDE3(DFN,.DGYPCL)
"RTN","DGYPSDE2",68,0)
 I $O(DGYPCL(0))  D
"RTN","DGYPSDE2",69,0)
 .S DGYPPCL=0
"RTN","DGYPSDE2",70,0)
 .F  S DGYPPCL=$O(DGYPCL(DGYPPCL)) Q:'DGYPPCL  D
"RTN","DGYPSDE2",71,0)
 ..S DGCL(DGYPPCL)=DGCL(DGYPPCL)-1
"RTN","DGYPSDE2",72,0)
 Q
"RTN","DGYPSDE2",73,0)
INCR(DFN) ;  INCREMENT ARRAY WITH CLASS CNTS
"RTN","DGYPSDE2",74,0)
 N DGYPCL D BLD^DGYPSDE3(DFN,.DGYPCL)
"RTN","DGYPSDE2",75,0)
 I $O(DGYPCL(0))  D
"RTN","DGYPSDE2",76,0)
 .S DGYPPCL=0
"RTN","DGYPSDE2",77,0)
 .F  S DGYPPCL=$O(DGYPCL(DGYPPCL)) Q:'DGYPPCL  D
"RTN","DGYPSDE2",78,0)
 ..S DGCL(DGYPPCL)=DGCL(DGYPPCL)+1
"RTN","DGYPSDE2",79,0)
 Q
"RTN","DGYPSDE2",80,0)
 ;
"RTN","DGYPSDE2",81,0)
 ;  STATUS WILL DETERMINE IF APPT WAS AN INPATIENT
"RTN","DGYPSDE2",82,0)
 ; OR A NON STOP CODE CLINIC
"RTN","DGYPSDE2",83,0)
STATUS(DFN,DGT,DGCL,DGORG) ;
"RTN","DGYPSDE2",84,0)
 N Y S Y=""
"RTN","DGYPSDE2",85,0)
 I $$INP^SDAM2(DFN,DGT)="I" S Y="I"
"RTN","DGYPSDE2",86,0)
 I Y="",DGORG=1,$P($G(^SC(+DGCL,0)),U,17)="Y" S Y="NC"
"RTN","DGYPSDE2",87,0)
 I Y="" S Y="C"
"RTN","DGYPSDE2",88,0)
 Q Y
"RTN","DGYPSDE2",89,0)
 ;
"RTN","DGYPSDE2",90,0)
 ;  EXEMPT WILL RETURN A LOW IF THE STOP CODE IS BETWEEN 103+170
"RTN","DGYPSDE2",91,0)
 ; OR APPT TYPE IS NOT 9=REGULAR OR 2=SPECIAL DENTAL 
"RTN","DGYPSDE2",92,0)
EXEMPT(DGSTOP,DGAPTY) ;
"RTN","DGYPSDE2",93,0)
 N Y
"RTN","DGYPSDE2",94,0)
 S DGSTOP=$P($G(^DIC(40.7,+DGSTOP,0)),U,2)
"RTN","DGYPSDE2",95,0)
 I DGSTOP>103,DGSTOP<171 S Y=0 G EXEMPTQ
"RTN","DGYPSDE2",96,0)
 I DGAPTY=9!(DGAPTY=2) S Y=1 G EXEMPTQ
"RTN","DGYPSDE2",97,0)
 S Y=0
"RTN","DGYPSDE2",98,0)
EXEMPTQ Q Y
"RTN","VAFCCCAP")
0^24^B23532804
"RTN","VAFCCCAP",1,0)
VAFCCCAP ;ALB/CMM,PKE,PHH OUTPATIENT CAPTURE TEST ; 12/2/04 7:26am
"RTN","VAFCCCAP",2,0)
 ;;5.3;Registration;**91,179,553,582,568**;Jun 06, 1996
"RTN","VAFCCCAP",3,0)
 ;
"RTN","VAFCCCAP",4,0)
 ;
"RTN","VAFCCCAP",5,0)
CAP ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFCCCAP",6,0)
 I ($G(SDAMEVT)<4)!($G(SDAMEVT)>7) Q
"RTN","VAFCCCAP",7,0)
 ;quit if no change
"RTN","VAFCCCAP",8,0)
 I +$G(SDATA("BEFORE","STATUS"))=3,+$G(SDATA("AFTER","STATUS"))=3
"RTN","VAFCCCAP",9,0)
 IF  I $P($G(SDATA("AFTER","STATUS")),"^",3)'="ACTION REQ/CHECKED IN"
"RTN","VAFCCCAP",10,0)
 IF  I $P($G(SDATA("BEFORE","STATUS")),"^",3)'="NO ACTION TAKEN/TODAY" Q
"RTN","VAFCCCAP",11,0)
 ;check to see if sending is on or off
"RTN","VAFCCCAP",12,0)
 I '$P($$SEND^VAFHUTL(),"^",2) Q
"RTN","VAFCCCAP",13,0)
 ;check if protocol disabled or no clients
"RTN","VAFCCCAP",14,0)
 I $$PROTOCHK("VAFC ADT-A08-SDAM SERVER") Q
"RTN","VAFCCCAP",15,0)
 ;Queue to run NOW, returns control back to outpatient event driver
"RTN","VAFCCCAP",16,0)
 S ZTRTN="EN^VAFCCCAP",ZTDESC="PIMS Outpatient HL7 v2.3 Capture"
"RTN","VAFCCCAP",17,0)
 S ZTSAVE("SDHDL")="",ZTSAVE("SDAMEVT")="",ZTSAVE("SDATA")="",ZTSAVE("^TMP(""SDEVT"",$J,")="",ZTIO="",ZTDTH=$H
"RTN","VAFCCCAP",18,0)
 D ^%ZTLOAD
"RTN","VAFCCCAP",19,0)
 ;W !?3,$G(ZTSK)
"RTN","VAFCCCAP",20,0)
 Q
"RTN","VAFCCCAP",21,0)
 ;
"RTN","VAFCCCAP",22,0)
EN ;
"RTN","VAFCCCAP",23,0)
 N DFN,HLD,EVDT,CHK,ERR,SEND,NEW,EVENT,HOSP,THLD,PTR,REM,HPTR
"RTN","VAFCCCAP",24,0)
 ;
"RTN","VAFCCCAP",25,0)
 ;Appointments
"RTN","VAFCCCAP",26,0)
 ;
"RTN","VAFCCCAP",27,0)
 I SDAMEVT=4!(SDAMEVT=5) D
"RTN","VAFCCCAP",28,0)
 .S DFN=$P(SDATA,"^",2),EVDT=$P(SDATA,"^",3),PTR=$$GETPTR^VAFHCUTL(1),PTR=PTR_";SCE(",(CHK,UP,REM)=""
"RTN","VAFCCCAP",29,0)
 .I SDAMEVT=4 S PTR=DFN_";DPT(" ;check-in or unscheduled visit check-in
"RTN","VAFCCCAP",30,0)
 .;Need to check if deleting check-out
"RTN","VAFCCCAP",31,0)
 .;if deleting check-out and no pivot file entry exists don't send
"RTN","VAFCCCAP",32,0)
 .I +$G(SDATA("AFTER","STATUS"))=3&(+$G(SDATA("BEFORE","STATUS"))=2) S CHK=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR),PTR=$$UPPTR(DFN,EVDT) S:PTR="@" REM=1 S:+CHK>0 UP=$$UPDATE^VAFHUTL(+CHK,EVDT,PTR,REM) S:+CHK<0!(+UP<0) SEND="N"
"RTN","VAFCCCAP",33,0)
 .;set send to N if deleting and not in pivot file
"RTN","VAFCCCAP",34,0)
 .I '$D(SEND) D
"RTN","VAFCCCAP",35,0)
 ..S HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",36,0)
 ..I +HLD=-1 S HPTR=DFN_";DPT(",HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,HPTR) I +HLD'=-1 S UP=$$UPDATE^VAFHUTL(+HLD,EVDT,PTR,"")
"RTN","VAFCCCAP",37,0)
 ..I +HLD=-1 S HLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",38,0)
 ..;S EVENT=$P(HLD,":"),ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFCCCAP",39,0)
 ..;set up call to vafcmsg for out-patient
"RTN","VAFCCCAP",40,0)
 ..D SETUP
"RTN","VAFCCCAP",41,0)
 ;
"RTN","VAFCCCAP",42,0)
 ;Stop codes, Add/Edits
"RTN","VAFCCCAP",43,0)
 I SDAMEVT=6!(SDAMEVT=7) D
"RTN","VAFCCCAP",44,0)
 .N HLD,STOP,THLD,REMOVE,UP
"RTN","VAFCCCAP",45,0)
 .S HLD="",STOP="N",ERR=""
"RTN","VAFCCCAP",46,0)
 .F  K EVENT S REMOVE="N",HLD=$O(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD)) Q:HLD=""!(STOP="Y")  D
"RTN","VAFCCCAP",47,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'=""&($P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",6)'="") S STOP="Y" Q
"RTN","VAFCCCAP",48,0)
 ..;If STOP="Y" stop code was not stand alone
"RTN","VAFCCCAP",49,0)
 ..;If STOP="N" stop code is stand alone
"RTN","VAFCCCAP",50,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")="" D
"RTN","VAFCCCAP",51,0)
 ...S REMOVE="Y",DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^"),PTR=HLD_";SCE("
"RTN","VAFCCCAP",52,0)
 ...S EVENT=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFCCCAP",53,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'="" D
"RTN","VAFCCCAP",54,0)
 ...S DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^"),PTR=HLD_";SCE("
"RTN","VAFCCCAP",55,0)
 ..I '$D(EVENT) S THLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR),EVENT=$P(THLD,":")
"RTN","VAFCCCAP",56,0)
 ..I REMOVE="Y" S PTR="@",UP=$$UPDATE^VAFHUTL(+EVENT,EVDT,PTR,1)
"RTN","VAFCCCAP",57,0)
 ..;I +EVENT>0 S ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFCCCAP",58,0)
 ..;set up call to vafcmsg for out-patient
"RTN","VAFCCCAP",59,0)
 ..I +EVENT>0 D SETUP
"RTN","VAFCCCAP",60,0)
 ;
"RTN","VAFCCCAP",61,0)
EXIT ;
"RTN","VAFCCCAP",62,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VAFCCCAP",63,0)
 I +ERR<0 D ERROR(ERR,DFN)
"RTN","VAFCCCAP",64,0)
 D KILL^HLTRANS
"RTN","VAFCCCAP",65,0)
 Q
"RTN","VAFCCCAP",66,0)
 ;
"RTN","VAFCCCAP",67,0)
ERROR(PNUM,DFN) ;
"RTN","VAFCCCAP",68,0)
 ;Error message unable to generate A08 Message
"RTN","VAFCCCAP",69,0)
 N GBL S GBL="^TMP($J,""ERR"")"
"RTN","VAFCCCAP",70,0)
 I +PNUM<0 S @GBL@(0)="ERROR",@GBL@(1)=$P(PNUM,"^",2)_", unable to generate A08 Message" D EBULL^VAFHUTL2(DFN,"","",$P(GBL,")")_",")
"RTN","VAFCCCAP",71,0)
 Q
"RTN","VAFCCCAP",72,0)
 ;
"RTN","VAFCCCAP",73,0)
UPPTR(DFN,ADATE) ;
"RTN","VAFCCCAP",74,0)
 ;Have deleted checkout, update variable pointer
"RTN","VAFCCCAP",75,0)
 N PTR S PTR="@"
"RTN","VAFCCCAP",76,0)
 N DGARRAY,DGCOUNT,SDDATE
"RTN","VAFCCCAP",77,0)
 S DGARRAY(4)=DFN,DGARRAY(1)=ADATE_";"_ADATE,DGARRAY("FLDS")=3,DGARRAY("SORT")="P"
"RTN","VAFCCCAP",78,0)
 S DGCOUNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFCCCAP",79,0)
 ;
"RTN","VAFCCCAP",80,0)
 I DGCOUNT<0,$D(^TMP($J,"SDAMA301",101)) Q PTR
"RTN","VAFCCCAP",81,0)
 I DGCOUNT<0,$D(^TMP($J,"SDAMA301",116)) Q PTR
"RTN","VAFCCCAP",82,0)
 I DGCOUNT>0 D
"RTN","VAFCCCAP",83,0)
 .S SDDATE=0
"RTN","VAFCCCAP",84,0)
 .F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDDATE)) Q:'SDDATE  D
"RTN","VAFCCCAP",85,0)
 ..I SDDATE=ADATE S PTR=DFN_";DPT("
"RTN","VAFCCCAP",86,0)
 I DGCOUNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFCCCAP",87,0)
 Q PTR
"RTN","VAFCCCAP",88,0)
 ;
"RTN","VAFCCCAP",89,0)
SETUP ;
"RTN","VAFCCCAP",90,0)
 N PIVOTPTR
"RTN","VAFCCCAP",91,0)
 S EVENT=$P(HLD,":")
"RTN","VAFCCCAP",92,0)
 S EVNTINFO="^TMP(""VAFCMSG"",""EVNTINFO"","_$J_")"
"RTN","VAFCCCAP",93,0)
 K @EVNTINFO
"RTN","VAFCCCAP",94,0)
 S PIVOTPTR=+$O(^VAT(391.71,"D",EVENT,0))
"RTN","VAFCCCAP",95,0)
 I ('PIVOTPTR) S ERR="-1^Unable to create entry in ADT/HL7 PIVOT FILE" Q
"RTN","VAFCCCAP",96,0)
 S @EVNTINFO@("PIVOT")=PIVOTPTR
"RTN","VAFCCCAP",97,0)
 S @EVNTINFO@("SERVER PROTOCOL")="VAFC ADT-A08-SDAM SERVER"
"RTN","VAFCCCAP",98,0)
 S @EVNTINFO@("VAR-PTR")=PTR
"RTN","VAFCCCAP",99,0)
 S @EVNTINFO@("EVENT-NUM")=EVENT
"RTN","VAFCCCAP",100,0)
 S ERR=$$BCSTADT^VAFCMSG0(DFN,"A08",EVDT,EVNTINFO)
"RTN","VAFCCCAP",101,0)
 K @EVNTINFO
"RTN","VAFCCCAP",102,0)
 Q
"RTN","VAFCCCAP",103,0)
PROTOCHK(SPROTO) ;
"RTN","VAFCCCAP",104,0)
 ; input   server protocol
"RTN","VAFCCCAP",105,0)
 ;output   1 if disabled or has no clients
"RTN","VAFCCCAP",106,0)
 N HL
"RTN","VAFCCCAP",107,0)
 D INIT^HLFNC2(SPROTO,.HL,1)
"RTN","VAFCCCAP",108,0)
 K HLQ,HLECH,HLFS
"RTN","VAFCCCAP",109,0)
 Q $D(HL)#2
"RTN","VAFCCOPT")
0^25^B11631510
"RTN","VAFCCOPT",1,0)
VAFCCOPT ;ALB/CM,PHH OUTPATIENT APPT (HL7 MESS) NIGHT JOB ;3/19/2004
"RTN","VAFCCOPT",2,0)
 ;;5.3;Registration;**91,298,568**;Jun 06, 1996
"RTN","VAFCCOPT",3,0)
 ;hl7v1.6
"RTN","VAFCCOPT",4,0)
 ;This routine will loop through the Hospital Location file "S" node
"RTN","VAFCCOPT",5,0)
 ;and generate an HL7-v2.3 A08 message for all appointments for today
"RTN","VAFCCOPT",6,0)
 ;that have a status of "No action taken" or "Future"
"RTN","VAFCCOPT",7,0)
 ;the HL7 message is not batch.
"RTN","VAFCCOPT",8,0)
 ;
"RTN","VAFCCOPT",9,0)
 ;07/07/00 ACS - Added sequence 39 (facility+suffix) to the outpatient
"RTN","VAFCCOPT",10,0)
 ;string of fields
"RTN","VAFCCOPT",11,0)
 ;
"RTN","VAFCCOPT",12,0)
 ;Check to see if sending v2.3 is on or off
"RTN","VAFCCOPT",13,0)
EN I '$P($$SEND^VAFHUTL(),"^",2) Q
"RTN","VAFCCOPT",14,0)
 ;
"RTN","VAFCCOPT",15,0)
 S ERRB="^TMP($J,""ADT-ERR"","
"RTN","VAFCCOPT",16,0)
 ;
"RTN","VAFCCOPT",17,0)
 N STAT,X1,X2
"RTN","VAFCCOPT",18,0)
 ;This job should be set to run after midnight daily.
"RTN","VAFCCOPT",19,0)
 D NOW^%DTC S START=X
"RTN","VAFCCOPT",20,0)
 S X1=START,X2=1 D C^%DTC S STOP=X K X1,X2,%H,X,%,%I
"RTN","VAFCCOPT",21,0)
 S ENT=0,GBL="^TMP(""HLS"",$J)"
"RTN","VAFCCOPT",22,0)
 ;
"RTN","VAFCCOPT",23,0)
 K HL D INIT^HLFNC2("VAFC ADT-A08-SCHED SERVER",.HL)
"RTN","VAFCCOPT",24,0)
 I $D(HL)=1 DO  QUIT
"RTN","VAFCCOPT",25,0)
 .I $P(HL,"^",2)="Server Protocol Disabled"
"RTN","VAFCCOPT",26,0)
 .E  S @ERRB@(1)=HL D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",27,0)
 ;
"RTN","VAFCCOPT",28,0)
 S PSTR="2,3,7,10,18,39,44,50"
"RTN","VAFCCOPT",29,0)
 ;
"RTN","VAFCCOPT",30,0)
 N DGARRAY,DGCNT
"RTN","VAFCCOPT",31,0)
 S COUNT=0
"RTN","VAFCCOPT",32,0)
 F  S ENT=$O(^SC(ENT)) Q:(ENT="")!(ENT'?.N)  D
"RTN","VAFCCOPT",33,0)
 .S ENT1=START
"RTN","VAFCCOPT",34,0)
 .S DGARRAY(1)=START_";"_STOP,DGARRAY("FLDS")="1;3",DGARRAY(2)=ENT
"RTN","VAFCCOPT",35,0)
 .S DGCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFCCOPT",36,0)
 .;
"RTN","VAFCCOPT",37,0)
 .Q:$D(^TMP($J,"SDAMA301",101))        ; DATABASE IS UNAVAILABLE
"RTN","VAFCCOPT",38,0)
 .I DGCNT>0 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",ENT,DFN)) Q:DFN=""  D
"RTN","VAFCCOPT",39,0)
 ..Q:'$D(^DPT(DFN,0))
"RTN","VAFCCOPT",40,0)
 ..S ENT1=0 F  S ENT1=$O(^TMP($J,"SDAMA301",ENT,DFN,ENT1)) Q:ENT1=""!(ENT1'?.N1".".N)  D
"RTN","VAFCCOPT",41,0)
 ...S STAT=$P($P(^TMP($J,"SDAMA301",ENT,DFN,ENT1),"^",3),";")
"RTN","VAFCCOPT",42,0)
 ...I STAT="NT" S ERR=$$CREATE() I +ERR>0 S VPTR=$P(ERR,"^",6) D GEN
"RTN","VAFCCOPT",43,0)
 ...I +$G(ERR)<0 S @ERRB@(1)=ERR D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",44,0)
 .I DGCNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFCCOPT",45,0)
 D EXIT
"RTN","VAFCCOPT",46,0)
 Q
"RTN","VAFCCOPT",47,0)
 ;
"RTN","VAFCCOPT",48,0)
GEN I COUNT DO  ;first time through its been done
"RTN","VAFCCOPT",49,0)
 . K HL D INIT^HLFNC2("VAFC ADT-A08-SCHED SERVER",.HL)
"RTN","VAFCCOPT",50,0)
 . I $D(HL)=1 DO
"RTN","VAFCCOPT",51,0)
 . . S @ERRB@(1)=HL D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",52,0)
 I $D(HL)=1 S ENT="ZZZZEND",ENT1=9999999,ENT2=9999999 Q
"RTN","VAFCCOPT",53,0)
 ;
"RTN","VAFCCOPT",54,0)
 ;
"RTN","VAFCCOPT",55,0)
 ;Generate the following segments:
"RTN","VAFCCOPT",56,0)
 ;EVN
"RTN","VAFCCOPT",57,0)
 S EVN=$$EVN^VAFHLEVN("A08","05")
"RTN","VAFCCOPT",58,0)
 I +EVN=-1 S ERR="-1^Unable to generate EVN segment" Q
"RTN","VAFCCOPT",59,0)
 ;PID
"RTN","VAFCCOPT",60,0)
 S VAFPID=$$EN^VAFCPID(DFN,"2,3,4,5,6,7,8,9,11,12,13,14,16,19,29,30")
"RTN","VAFCCOPT",61,0)
 ;ZPD
"RTN","VAFCCOPT",62,0)
 S ZPD=$$EN^VAFHLZPD(DFN,"2,3,4,5,6,7,8,9,10,11,12,13,14,15")
"RTN","VAFCCOPT",63,0)
 ;PV1 (outpatient)
"RTN","VAFCCOPT",64,0)
 S PV1=$$OUT^VAFHLPV1(DFN,EVENT,EVDT,VPTR,PSTR)
"RTN","VAFCCOPT",65,0)
 I +PV1=-1 S ERR="-1^Unable to generate PV1 segment" Q
"RTN","VAFCCOPT",66,0)
 ;
"RTN","VAFCCOPT",67,0)
 ; no dg1 segment will be created.  No diagnosis
"RTN","VAFCCOPT",68,0)
 ; information will be known at this stage.
"RTN","VAFCCOPT",69,0)
 S COUNT=1
"RTN","VAFCCOPT",70,0)
 K ^TMP("HLS",$J)
"RTN","VAFCCOPT",71,0)
 ;
"RTN","VAFCCOPT",72,0)
 ;
"RTN","VAFCCOPT",73,0)
 S @GBL@(COUNT)=EVN,COUNT=COUNT+1
"RTN","VAFCCOPT",74,0)
 MERGE @GBL@(COUNT)=VAFPID S COUNT=COUNT+1
"RTN","VAFCCOPT",75,0)
 S @GBL@(COUNT)=ZPD,COUNT=COUNT+1
"RTN","VAFCCOPT",76,0)
 S @GBL@(COUNT)=PV1
"RTN","VAFCCOPT",77,0)
 ;
"RTN","VAFCCOPT",78,0)
 D GENERATE^HLMA("VAFC ADT-A08-SCHED SERVER","GM",1,,.HLRST)
"RTN","VAFCCOPT",79,0)
 I $L($P(HLRST,2,99)) DO
"RTN","VAFCCOPT",80,0)
 . S @ERRB@(1)=HLRST D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFCCOPT",81,0)
 . S ERRCNT=$G(ERRCNT)+1
"RTN","VAFCCOPT",82,0)
 . I $G(ERRCNT)>10 S ENT="ZZZZEND",ENT1=9999999,ENT2=9999999
"RTN","VAFCCOPT",83,0)
 Q
"RTN","VAFCCOPT",84,0)
 ;
"RTN","VAFCCOPT",85,0)
EXIT K HLERR
"RTN","VAFCCOPT",86,0)
 ;
"RTN","VAFCCOPT",87,0)
 D KILL^HLTRANS
"RTN","VAFCCOPT",88,0)
 K ERRCNT,VAFPID,^TMP("HLS",$J),SEQ,RESULT,MID
"RTN","VAFCCOPT",89,0)
 K PSTR,ZPD,DG1,PID,PV1,MSH,EVN,ENT,ENT1,ENT2,DFN,START,STOP,GBL,HLSDT
"RTN","VAFCCOPT",90,0)
 K EVDT,HLMTN,EVENT,COUNT,HLEVN,HLENTRY,ERR,VPTR,ERRB
"RTN","VAFCCOPT",91,0)
 Q
"RTN","VAFCCOPT",92,0)
 ;
"RTN","VAFCCOPT",93,0)
CREATE() ;
"RTN","VAFCCOPT",94,0)
 ;creates new entry in pivot file
"RTN","VAFCCOPT",95,0)
 N NODE,VPTR
"RTN","VAFCCOPT",96,0)
 S EVDT=ENT1,VPTR=DFN_";DPT("
"RTN","VAFCCOPT",97,0)
 S NODE=$$PIVNW^VAFHPIVT(DFN,EVDT,2,VPTR)
"RTN","VAFCCOPT",98,0)
 I +NODE=-1 Q NODE
"RTN","VAFCCOPT",99,0)
 S EVENT=$P(NODE,":")
"RTN","VAFCCOPT",100,0)
 Q EVENT_"^"_NODE
"RTN","VAFHCCAP")
0^26^B19023372
"RTN","VAFHCCAP",1,0)
VAFHCCAP ;ALB/CMM/PHH OUTPATIENT CAPTURE TEST ; 12/2/04 1:13pm
"RTN","VAFHCCAP",2,0)
 ;;5.3;Registration;**91,582,568**;Jun 06, 1996
"RTN","VAFHCCAP",3,0)
 ;
"RTN","VAFHCCAP",4,0)
CAP ;
"RTN","VAFHCCAP",5,0)
 ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFHCCAP",6,0)
 I ($G(SDAMEVT)<4)!($G(SDAMEVT)>7) Q
"RTN","VAFHCCAP",7,0)
 ;quit if no action
"RTN","VAFHCCAP",8,0)
 I +$G(SDATA("BEFORE","STATUS"))=3,+$G(SDATA("AFTER","STATUS"))=3
"RTN","VAFHCCAP",9,0)
 IF  I $P($G(SDATA("AFTER","STATUS")),"^",3)'="ACTION REQ/CHECKED IN"
"RTN","VAFHCCAP",10,0)
 IF  I $P($G(SDATA("BEFORE","STATUS")),"^",3)'="NO ACTION TAKEN/TODAY" Q
"RTN","VAFHCCAP",11,0)
 ;check to see if sending is on or off
"RTN","VAFHCCAP",12,0)
 I '$$SEND^VAFHUTL() Q
"RTN","VAFHCCAP",13,0)
 ;
"RTN","VAFHCCAP",14,0)
 ;S ^TMP($J,"VAFHCCAP")=""
"RTN","VAFHCCAP",15,0)
 ;I $D(^TMP($J,"VAFHCCAP")) G EN ;for debug
"RTN","VAFHCCAP",16,0)
 ;
"RTN","VAFHCCAP",17,0)
 ;Queue to run NOW, returns control back to outpatient event driver
"RTN","VAFHCCAP",18,0)
 S ZTRTN="EN^VAFHCCAP",ZTDESC="PIMS Outpatient HL7 Capture"
"RTN","VAFHCCAP",19,0)
 S ZTSAVE("SDHDL")="",ZTSAVE("SDAMEVT")="",ZTSAVE("SDATA")=""
"RTN","VAFHCCAP",20,0)
 S ZTSAVE("^TMP(""SDEVT"",$J,")="",ZTIO="",ZTDTH=$H
"RTN","VAFHCCAP",21,0)
 D ^%ZTLOAD
"RTN","VAFHCCAP",22,0)
 ;W !?3,$G(ZTSK)
"RTN","VAFHCCAP",23,0)
 Q
"RTN","VAFHCCAP",24,0)
 ;
"RTN","VAFHCCAP",25,0)
EN ;
"RTN","VAFHCCAP",26,0)
 N DFN,HLD,EVDT,CHK,ERR,SEND,NEW,EVENT,HOSP,THLD,PTR,REM,HPTR
"RTN","VAFHCCAP",27,0)
 ;Only fire if check-in,check-out, add/edit add, add/edit change
"RTN","VAFHCCAP",28,0)
 I SDAMEVT<4!(SDAMEVT>7) Q
"RTN","VAFHCCAP",29,0)
 ;
"RTN","VAFHCCAP",30,0)
 ;Appointments
"RTN","VAFHCCAP",31,0)
 I SDAMEVT=4!(SDAMEVT=5) D
"RTN","VAFHCCAP",32,0)
 .S DFN=$P(SDATA,"^",2),EVDT=$P(SDATA,"^",3),PTR=$$GETPTR^VAFHCUTL(1),PTR=PTR_";SCE(",(CHK,UP,REM)=""
"RTN","VAFHCCAP",33,0)
 .I SDAMEVT=4 S PTR=DFN_";DPT(" ;check-in or unscheduled visit check-in
"RTN","VAFHCCAP",34,0)
 .;Need to check if deleting check-out
"RTN","VAFHCCAP",35,0)
 .;if deleting check-out and no pivot file entry exists don't send
"RTN","VAFHCCAP",36,0)
 .I +$G(SDATA("AFTER","STATUS"))=3&(+$G(SDATA("BEFORE","STATUS"))=2) S CHK=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR),PTR=$$UPPTR(DFN,EVDT) S:PTR="@" REM=1 S:+CHK>0 UP=$$UPDATE^VAFHUTL(+CHK,EVDT,PTR,REM) S:+CHK<0!(+UP<0) SEND="N"
"RTN","VAFHCCAP",37,0)
 .;set send to N if deleting and not in pivot file
"RTN","VAFHCCAP",38,0)
 .I '$D(SEND) D
"RTN","VAFHCCAP",39,0)
 ..S HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",40,0)
 ..I +HLD=-1 S HPTR=DFN_";DPT(",HLD=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,HPTR) I +HLD'=-1 S UP=$$UPDATE^VAFHUTL(+HLD,EVDT,PTR,"")
"RTN","VAFHCCAP",41,0)
 ..I +HLD=-1 S HLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",42,0)
 ..S EVENT=$P(HLD,":"),ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFHCCAP",43,0)
 ;
"RTN","VAFHCCAP",44,0)
 ;Stop codes, Add/Edits
"RTN","VAFHCCAP",45,0)
 I SDAMEVT=6!(SDAMEVT=7) D
"RTN","VAFHCCAP",46,0)
 .N HLD,STOP,THLD,REMOVE,UP
"RTN","VAFHCCAP",47,0)
 .S HLD="",STOP="N",ERR=""
"RTN","VAFHCCAP",48,0)
 .F  K EVENT S REMOVE="N",HLD=$O(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD)) Q:HLD=""!(STOP="Y")  D
"RTN","VAFHCCAP",49,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'=""&($P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",6)'="") S STOP="Y" Q
"RTN","VAFHCCAP",50,0)
 ..;If STOP="Y" stop code was not stand alone
"RTN","VAFHCCAP",51,0)
 ..;If STOP="N" stop code is stand alone
"RTN","VAFHCCAP",52,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")="" D
"RTN","VAFHCCAP",53,0)
 ...S REMOVE="Y",DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"BEFORE"),"^"),PTR=HLD_";SCE("
"RTN","VAFHCCAP",54,0)
 ...S EVENT=$$PIVCHK^VAFHPIVT(DFN,EVDT,2,PTR)
"RTN","VAFHCCAP",55,0)
 ..I ^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER")'="" D
"RTN","VAFHCCAP",56,0)
 ...S DFN=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^",2),EVDT=$P(^TMP("SDEVT",$J,SDHDL,2,"SDOE",HLD,0,"AFTER"),"^"),PTR=HLD_";SCE("
"RTN","VAFHCCAP",57,0)
 ..I '$D(EVENT) S THLD=$$PIVNW^VAFHPIVT(DFN,EVDT,2,PTR),EVENT=$P(THLD,":")
"RTN","VAFHCCAP",58,0)
 ..I REMOVE="Y" S PTR="@",UP=$$UPDATE^VAFHUTL(+EVENT,EVDT,PTR,1)
"RTN","VAFHCCAP",59,0)
 ..I +EVENT>0 S ERR=$$OA08^VAFHCA08(DFN,EVENT,EVDT,PTR,"2,3,4,5,6,7,8,9,11,12,13,14,16,19","2,3,4,5,6,7,8,9,10,11,12,13,14,15","A","A")
"RTN","VAFHCCAP",60,0)
EXIT ;
"RTN","VAFHCCAP",61,0)
 I $D(ZTQUEUED) S ZTREQ="@"
"RTN","VAFHCCAP",62,0)
 I +ERR<0 D ERROR(ERR,DFN)
"RTN","VAFHCCAP",63,0)
 D KILL^HLTRANS
"RTN","VAFHCCAP",64,0)
 Q
"RTN","VAFHCCAP",65,0)
 ;
"RTN","VAFHCCAP",66,0)
ERROR(PNUM,DFN) ;
"RTN","VAFHCCAP",67,0)
 ;Error message unable to generate A08 Message
"RTN","VAFHCCAP",68,0)
 N GBL S GBL="^TMP($J,""ERR"")"
"RTN","VAFHCCAP",69,0)
 I +PNUM<0 S @GBL@(0)="ERROR",@GBL@(1)=$P(PNUM,"^",2)_", unable to generate A08 Message" D EBULL^VAFHUTL2(DFN,"","",$P(GBL,")")_",")
"RTN","VAFHCCAP",70,0)
 Q
"RTN","VAFHCCAP",71,0)
 ;
"RTN","VAFHCCAP",72,0)
UPPTR(DFN,ADATE) ;
"RTN","VAFHCCAP",73,0)
 ;Have deleted checkout, update variable pointer
"RTN","VAFHCCAP",74,0)
 N PTR S PTR="@"
"RTN","VAFHCCAP",75,0)
 N DGARRAY,DGCOUNT,SDDATE
"RTN","VAFHCCAP",76,0)
 S DGARRAY(4)=DFN,DGARRAY(1)=ADATE_";"_ADATE,DGARRAY("FLDS")=3,DGARRAY("SORT")="P"
"RTN","VAFHCCAP",77,0)
 S DGCOUNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFHCCAP",78,0)
 ;
"RTN","VAFHCCAP",79,0)
 I DGCOUNT<0,$D(^TMP($J,"SDAMA301",101)) Q PTR
"RTN","VAFHCCAP",80,0)
 I DGCOUNT<0,$D(^TMP($J,"SDAMA301",116)) Q PTR
"RTN","VAFHCCAP",81,0)
 I DGCOUNT>0 D
"RTN","VAFHCCAP",82,0)
 .S SDDATE=0
"RTN","VAFHCCAP",83,0)
 .F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDDATE)) Q:'SDDATE  D
"RTN","VAFHCCAP",84,0)
 ..I SDDATE=ADATE S PTR=DFN_";DPT("
"RTN","VAFHCCAP",85,0)
 I DGCOUNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFHCCAP",86,0)
 Q PTR
"RTN","VAFHCOPT")
0^27^B8477185
"RTN","VAFHCOPT",1,0)
VAFHCOPT ;ALB/CM,PKE,PHH OUTPATIENT APPT (HL7 MESS) NIGHT JOB ;3/23/2004
"RTN","VAFHCOPT",2,0)
 ;;5.3;Registration;**91,568**;Aug 13, 1993
"RTN","VAFHCOPT",3,0)
 ;
"RTN","VAFHCOPT",4,0)
 ;This routine will loop through the Hospital Location file "S" node
"RTN","VAFHCOPT",5,0)
 ;and generate an A08 message for all appointments for today
"RTN","VAFHCOPT",6,0)
 ;that have a status of "No action taken" or "Future"
"RTN","VAFHCOPT",7,0)
 ;
"RTN","VAFHCOPT",8,0)
EN ;
"RTN","VAFHCOPT",9,0)
 ;Check to see if sending is on or off
"RTN","VAFHCOPT",10,0)
 N GO
"RTN","VAFHCOPT",11,0)
 S GO=$$SEND^VAFHUTL()
"RTN","VAFHCOPT",12,0)
 I GO=0 Q
"RTN","VAFHCOPT",13,0)
 ;
"RTN","VAFHCOPT",14,0)
 S ERRB="^TMP($J,""ADT-ERR""," K ^TMP($J,"ADT-ERR")
"RTN","VAFHCOPT",15,0)
 K HL D INIT^HLFNC2("VAFH A08",.HL)
"RTN","VAFHCOPT",16,0)
 I $D(HL)=1 S ERR="-1^"_HL QUIT
"RTN","VAFHCOPT",17,0)
 ;
"RTN","VAFHCOPT",18,0)
 N STAT,X1,X2
"RTN","VAFHCOPT",19,0)
 ;This job should be set to run after midnight daily.
"RTN","VAFHCOPT",20,0)
 D NOW^%DTC S START=X ;;;S START=2970101
"RTN","VAFHCOPT",21,0)
 S X1=START,X2=1 D C^%DTC S STOP=X K X1,X2,%H,X,%,%I
"RTN","VAFHCOPT",22,0)
 ;
"RTN","VAFHCOPT",23,0)
 S ENT=0,GBL="^TMP(""HLS"",$J)" K ^TMP("HLS",$J)
"RTN","VAFHCOPT",24,0)
 ;
"RTN","VAFHCOPT",25,0)
 N DGARRAY,DGCNT
"RTN","VAFHCOPT",26,0)
 F  S ENT=$O(^SC(ENT)) Q:(ENT="")!(ENT'?.N)  D
"RTN","VAFHCOPT",27,0)
 .S ENT1=START
"RTN","VAFHCOPT",28,0)
 .S DGARRAY(1)=START_";"_STOP,DGARRAY("FLDS")="1;3",DGARRAY(2)=ENT
"RTN","VAFHCOPT",29,0)
 .S DGCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","VAFHCOPT",30,0)
 .;
"RTN","VAFHCOPT",31,0)
 .Q:$D(^TMP($J,"SDAMA301",101))
"RTN","VAFHCOPT",32,0)
 .I DGCNT>0 S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA301",ENT,DFN)) Q:DFN=""  D
"RTN","VAFHCOPT",33,0)
 ..Q:'$D(^DPT(DFN,0))
"RTN","VAFHCOPT",34,0)
 ..S ENT1=0 F  S ENT1=$O(^TMP($J,"SDAMA301",ENT,DFN,ENT1)) Q:ENT1=""!(ENT1'?.N1".".N)  D
"RTN","VAFHCOPT",35,0)
 ...S STAT=$P($P(^TMP($J,"SDAMA301",ENT,DFN,ENT1),"^",3),";")
"RTN","VAFHCOPT",36,0)
 ...I STAT="NT" S ERR=$$CREATE() I +ERR>0 S VPTR=$P(ERR,"^",6) D GEN
"RTN","VAFHCOPT",37,0)
 ...I +$G(ERR)<0 S @ERRB@(1)=ERR D EBULL^VAFHUTL2("","","",ERRB)
"RTN","VAFHCOPT",38,0)
 .I DGCNT'=0 K ^TMP($J,"SDAMA301")
"RTN","VAFHCOPT",39,0)
 D EXIT
"RTN","VAFHCOPT",40,0)
 Q
"RTN","VAFHCOPT",41,0)
 ;
"RTN","VAFHCOPT",42,0)
GEN ;
"RTN","VAFHCOPT",43,0)
 ;Generate the following segments:
"RTN","VAFHCOPT",44,0)
 ;MSH
"RTN","VAFHCOPT",45,0)
 ;
"RTN","VAFHCOPT",46,0)
 K HL D INIT^HLFNC2("VAFH A08",.HL)
"RTN","VAFHCOPT",47,0)
 I $D(HL)=1 S ERR="-1^"_HL Q
"RTN","VAFHCOPT",48,0)
 ;EVN
"RTN","VAFHCOPT",49,0)
 S EVN=$$EVN^VAFHLEVN("A08","05")
"RTN","VAFHCOPT",50,0)
 I +EVN=-1 S ERR="-1^Unable to generate EVN segment" Q
"RTN","VAFHCOPT",51,0)
 ;PID
"RTN","VAFHCOPT",52,0)
 S PID=$$EN^VAFHLPID(DFN,"2,3,4,5,6,7,8,9,11,12,13,14,16,19")
"RTN","VAFHCOPT",53,0)
 ;ZPD
"RTN","VAFHCOPT",54,0)
 S ZPD=$$EN^VAFHLZPD(DFN,"2,3,4,5,6,7,8,9,10,11,12,13,14,15")
"RTN","VAFHCOPT",55,0)
 ;PV1 (outpatient)
"RTN","VAFHCOPT",56,0)
 S PV1=$$OUT^VAFHLPV1(DFN,EVENT,EVDT,VPTR,"A")
"RTN","VAFHCOPT",57,0)
 I +PV1=-1 S ERR="-1^Unable to generate PV1 segment" Q
"RTN","VAFHCOPT",58,0)
 ;
"RTN","VAFHCOPT",59,0)
 ; no dg1 segment will be created.  No diagnosis
"RTN","VAFHCOPT",60,0)
 ;information will be known at this stage.
"RTN","VAFHCOPT",61,0)
 ;
"RTN","VAFHCOPT",62,0)
 K ^TMP("HLS",$J)
"RTN","VAFHCOPT",63,0)
 S COUNT=1
"RTN","VAFHCOPT",64,0)
 ;
"RTN","VAFHCOPT",65,0)
 S @GBL@(COUNT)=EVN,COUNT=COUNT+1
"RTN","VAFHCOPT",66,0)
 S @GBL@(COUNT)=PID,COUNT=COUNT+1
"RTN","VAFHCOPT",67,0)
 S @GBL@(COUNT)=ZPD,COUNT=COUNT+1
"RTN","VAFHCOPT",68,0)
 S @GBL@(COUNT)=PV1
"RTN","VAFHCOPT",69,0)
 ;
"RTN","VAFHCOPT",70,0)
 ;
"RTN","VAFHCOPT",71,0)
 ;
"RTN","VAFHCOPT",72,0)
 D GENERATE^HLMA("VAFH A08","GM",1,.HLRST,"",.HL)
"RTN","VAFHCOPT",73,0)
 I HLRST,$P(HLRST,"^",2)=""
"RTN","VAFHCOPT",74,0)
 E  S @ERRB@(1)=HLRST D EBULL^VAFHUTL2("","","",ERRB) K HLERR
"RTN","VAFHCOPT",75,0)
 Q
"RTN","VAFHCOPT",76,0)
EXIT ;
"RTN","VAFHCOPT",77,0)
 D KILL^HLTRANS
"RTN","VAFHCOPT",78,0)
 K @GBL
"RTN","VAFHCOPT",79,0)
 K ZPD,DG1,PID,PV1,MSH,EVN,ENT,ENT1,ENT2,DFN,START,STOP,GBL,HLSDT
"RTN","VAFHCOPT",80,0)
 K EVDT,HLMTN,EVENT,COUNT,HLEVN,HLENTRY,ERR,VPTR,ERRB
"RTN","VAFHCOPT",81,0)
 Q
"RTN","VAFHCOPT",82,0)
 ;
"RTN","VAFHCOPT",83,0)
CREATE() ;
"RTN","VAFHCOPT",84,0)
 ;creates new entry in pivot file
"RTN","VAFHCOPT",85,0)
 N NODE,VPTR
"RTN","VAFHCOPT",86,0)
 S EVDT=ENT1,VPTR=DFN_";DPT("
"RTN","VAFHCOPT",87,0)
 S NODE=$$PIVNW^VAFHPIVT(DFN,EVDT,2,VPTR)
"RTN","VAFHCOPT",88,0)
 I +NODE=-1 Q NODE
"RTN","VAFHCOPT",89,0)
 S EVENT=$P(NODE,":")
"RTN","VAFHCOPT",90,0)
 Q EVENT_"^"_NODE
"RTN","VAFHLPD1")
0^28^B4025538
"RTN","VAFHLPD1",1,0)
VAFHLPD1 ;ALB/RKS,PHH-HL7 PD1 SEGMENT; 26 July 01 ; 3/9/2004 2:09PM
"RTN","VAFHLPD1",2,0)
 ;;5.3;Registration;**91,160,229,149,409,389,568**;Jun 06, 1996
"RTN","VAFHLPD1",3,0)
 ;
"RTN","VAFHLPD1",4,0)
 ;
"RTN","VAFHLPD1",5,0)
EN(DFN,VAFSTR) ;Main enty point for building of PD1 Segment
"RTN","VAFHLPD1",6,0)
 ;
"RTN","VAFHLPD1",7,0)
 ;Input  : DFN - Pointer to entry in PATIENT fiel (#2)
"RTN","VAFHLPD1",8,0)
 ;         VAFSTR - String of fields requested separated by commas
"RTN","VAFHLPD1",9,0)
 ;         All variables defined by call to INIT^HLFNC2()
"RTN","VAFHLPD1",10,0)
 ;Output : PD1 segment
"RTN","VAFHLPD1",11,0)
 ;
"RTN","VAFHLPD1",12,0)
 N FS,CS,SS,VAFPD1
"RTN","VAFHLPD1",13,0)
 S FS=HL("FS"),CS=$E(HL("ECH")),SS=$E(HL("ECH"),4)
"RTN","VAFHLPD1",14,0)
 I $G(DFN)="" Q "PD1"_FS
"RTN","VAFHLPD1",15,0)
 I $G(^DPT(DFN,0))="" Q "PD1"_FS
"RTN","VAFHLPD1",16,0)
 S:($G(VAFSTR)="") VAFSTR="3,4"
"RTN","VAFHLPD1",17,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLPD1",18,0)
 S VAFPD1="PD1"_FS
"RTN","VAFHLPD1",19,0)
 ;Patient CMOR  (as defined by CIRN)
"RTN","VAFHLPD1",20,0)
 I VAFSTR[",3,",('$D(^PPP(1020.128,"AC",$P($$SITE^VASITE,"^",3)))) D
"RTN","VAFHLPD1",21,0)
 . ;CIRN check
"RTN","VAFHLPD1",22,0)
 . I $T(CHANGE^MPIF001)']"" S $P(VAFPD1,FS,4)=HL("Q")_CS_CS_HL("Q") Q
"RTN","VAFHLPD1",23,0)
 . N DIC,DR,DA,DIQ,PTR4,SITENAME,SITENUM,PT,INST
"RTN","VAFHLPD1",24,0)
 . S (SITENAME,SITENUM)=""
"RTN","VAFHLPD1",25,0)
 . S DIC=2,DR="991.03",DA=DFN,DIQ="PT",DIQ(0)="IE"
"RTN","VAFHLPD1",26,0)
 . D EN^DIQ1
"RTN","VAFHLPD1",27,0)
 . S PTR4=$G(PT(2,DFN,991.03,"I"))
"RTN","VAFHLPD1",28,0)
 . ;IF CMOR DEFINED
"RTN","VAFHLPD1",29,0)
 . I PTR4]"" D
"RTN","VAFHLPD1",30,0)
 . . S DIC=4,DR="99",DA=PTR4,DIQ="INST",DIQ(0)="IE"
"RTN","VAFHLPD1",31,0)
 . . D EN^DIQ1
"RTN","VAFHLPD1",32,0)
 . . S SITENAME=$G(PT(2,DFN,991.03,"E"))
"RTN","VAFHLPD1",33,0)
 . . S SITENUM=$G(INST(4,PTR4,99,"E"))
"RTN","VAFHLPD1",34,0)
 . . Q
"RTN","VAFHLPD1",35,0)
 . S $P(VAFPD1,FS,4)=$$HLQ^VAFHUTL(SITENAME)_CS_CS_$$HLQ^VAFHUTL(SITENUM)
"RTN","VAFHLPD1",36,0)
 . Q
"RTN","VAFHLPD1",37,0)
 ;Primary Care Provider  (as defined by PCMM)
"RTN","VAFHLPD1",38,0)
 I VAFSTR[",4," D
"RTN","VAFHLPD1",39,0)
 . N PTR200,VAFHLTMP,PCPRV,X
"RTN","VAFHLPD1",40,0)
 . ;Get provider (pointer to NEW PERSON file)
"RTN","VAFHLPD1",41,0)
 . S PTR200=+$$PCPRACT^DGSDUTL(DFN)
"RTN","VAFHLPD1",42,0)
 . I PTR200<1 S $P(VAFPD1,FS,5)=HL("Q") Q
"RTN","VAFHLPD1",43,0)
 . ;Get External Provider ID
"RTN","VAFHLPD1",44,0)
 . D PERSON^VAFHLRO3(PTR200,"VAFHLTMP",HL("Q"))
"RTN","VAFHLPD1",45,0)
 . I ('$D(VAFHLTMP)) S $P(VAFPD1,FS,5)=HL("Q") Q
"RTN","VAFHLPD1",46,0)
 . S PCPRV=VAFHLTMP(1,1,1)_SS_VAFHLTMP(1,1,2)
"RTN","VAFHLPD1",47,0)
 . F X=2:1:7 S $P(PCPRV,CS,X)=HL("Q")
"RTN","VAFHLPD1",48,0)
 . S $P(PCPRV,CS,8)=VAFHLTMP(1,8)
"RTN","VAFHLPD1",49,0)
 . S $P(VAFPD1,FS,5)=PCPRV
"RTN","VAFHLPD1",50,0)
 . Q
"RTN","VAFHLPD1",51,0)
 ;Done
"RTN","VAFHLPD1",52,0)
 Q VAFPD1
"RTN","VAFHLZPD")
0^30^B52908883
"RTN","VAFHLZPD",1,0)
VAFHLZPD ;ALB/KCL/PHH - Create generic HL7 ZPD segment ; 11/4/04 7:56am
"RTN","VAFHLZPD",2,0)
 ;;5.3;Registration;**94,122,160,220,247,545,564,568**;Aug 13, 1993
"RTN","VAFHLZPD",3,0)
 ;
"RTN","VAFHLZPD",4,0)
 ;
"RTN","VAFHLZPD",5,0)
EN(DFN,VAFSTR) ; This generic extrinsic function was designed to return
"RTN","VAFHLZPD",6,0)
 ;  sequences 1 throught 21 of the HL7 ZPD segment.  This segment
"RTN","VAFHLZPD",7,0)
 ;  contains VA-specific patient information that is not contained in
"RTN","VAFHLZPD",8,0)
 ;  the HL7 PID segment.  This call does not accomodate a segment
"RTN","VAFHLZPD",9,0)
 ;  length greater than 245 and has been superceeded by EN1^VAFHLZPD.
"RTN","VAFHLZPD",10,0)
 ;  This line tag has been left for backwards compatability.
"RTN","VAFHLZPD",11,0)
 ;
"RTN","VAFHLZPD",12,0)
 ;Input - DFN as internal entry number of the PATIENT file
"RTN","VAFHLZPD",13,0)
 ;      - VAFSTR as the string of fields requested seperated by commas
"RTN","VAFHLZPD",14,0)
 ;        (Defaults to all fields)
"RTN","VAFHLZPD",15,0)
 ;
"RTN","VAFHLZPD",16,0)
 ;     *****Also assumes all HL7 variables returned from*****
"RTN","VAFHLZPD",17,0)
 ;          INIT^HLTRANS are defined.
"RTN","VAFHLZPD",18,0)
 ;
"RTN","VAFHLZPD",19,0)
 ;Output - String of data forming the ZPD segment.
"RTN","VAFHLZPD",20,0)
 ;
"RTN","VAFHLZPD",21,0)
 ;
"RTN","VAFHLZPD",22,0)
 N VAFY,VAFZPD,REMARKS
"RTN","VAFHLZPD",23,0)
 S VAFY=$$EN1($G(DFN),$G(VAFSTR))
"RTN","VAFHLZPD",24,0)
 ;Segment less than 245 characters
"RTN","VAFHLZPD",25,0)
 I ('$D(VAFZPD(1))) D
"RTN","VAFHLZPD",26,0)
 .;Remove sequences 22 and higher
"RTN","VAFHLZPD",27,0)
 .S VAFY=$P(VAFY,HLFS,1,22)
"RTN","VAFHLZPD",28,0)
 ;Segment greater than 245 characters
"RTN","VAFHLZPD",29,0)
 I ($D(VAFZPD(1))) D
"RTN","VAFHLZPD",30,0)
 .;Strip out REMARKS (seq 2)
"RTN","VAFHLZPD",31,0)
 .S REMARKS=$P(VAFY,HLFS,3)
"RTN","VAFHLZPD",32,0)
 .S $P(VAFY,HLFS,3)=""
"RTN","VAFHLZPD",33,0)
 .;Append up to sequence 21 (PRIMARY CARE TEAM)
"RTN","VAFHLZPD",34,0)
 .S VAFY=VAFY_$P(VAFZPD(1),HLFS,1,((21-$L(VAFY,HLFS))+2))
"RTN","VAFHLZPD",35,0)
 .;Place REMARKS back into segment, truncating if needed
"RTN","VAFHLZPD",36,0)
 .S $P(VAFY,HLFS,3)=$E(REMARKS,1,(245-$L(VAFY)))
"RTN","VAFHLZPD",37,0)
 ;Done
"RTN","VAFHLZPD",38,0)
 Q VAFY
"RTN","VAFHLZPD",39,0)
 ;
"RTN","VAFHLZPD",40,0)
EN1(DFN,VAFSTR) ; This generic extrinsic function was designed to return the
"RTN","VAFHLZPD",41,0)
 ;  HL7 ZPD segment.  This segment contains VA-specific patient
"RTN","VAFHLZPD",42,0)
 ;  information that is not contained in the HL7 PID segment.  This
"RTN","VAFHLZPD",43,0)
 ;  call superceeds EN^VAFHLZPD because it accomodates a segment
"RTN","VAFHLZPD",44,0)
 ;  length greater than 245.
"RTN","VAFHLZPD",45,0)
 ; 
"RTN","VAFHLZPD",46,0)
 ;
"RTN","VAFHLZPD",47,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",48,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",49,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",50,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",51,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",52,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",53,0)
 ;Output : ZPD segment
"RTN","VAFHLZPD",54,0)
 ;       : If the ZPD segment becomes longer than 245 characters,
"RTN","VAFHLZPD",55,0)
 ;         remaining fields will be placed in VAFZPD(1)
"RTN","VAFHLZPD",56,0)
 ;Notes  : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",57,0)
 ;       : A ZPD segment with sequence one set to '1' will be returned
"RTN","VAFHLZPD",58,0)
 ;         if DFN is not valid
"RTN","VAFHLZPD",59,0)
 ;       : Variable VAFZPD is initialized on entry
"RTN","VAFHLZPD",60,0)
 ;
"RTN","VAFHLZPD",61,0)
 ;Declare variables
"RTN","VAFHLZPD",62,0)
 N VAFHLZPD,VAFY,SEQ,SPILL,SPILLON,SPOT,LASTSEQ,MAXLEN
"RTN","VAFHLZPD",63,0)
 K VAFZPD
"RTN","VAFHLZPD",64,0)
 S MAXLEN=245
"RTN","VAFHLZPD",65,0)
 ;Get data
"RTN","VAFHLZPD",66,0)
 D GETDATA($G(DFN),$G(VAFSTR),"VAFHLZPD")
"RTN","VAFHLZPD",67,0)
 ;Build segment
"RTN","VAFHLZPD",68,0)
 S VAFY="VAFHLZPD"
"RTN","VAFHLZPD",69,0)
 S SPILL=0
"RTN","VAFHLZPD",70,0)
 S SPILLON=0
"RTN","VAFHLZPD",71,0)
 S @VAFY="ZPD"
"RTN","VAFHLZPD",72,0)
 S LASTSEQ=+$O(VAFHLZPD(""),-1)
"RTN","VAFHLZPD",73,0)
 F SEQ=1:1:LASTSEQ D
"RTN","VAFHLZPD",74,0)
 .;Make sure maximum length won't be exceeded
"RTN","VAFHLZPD",75,0)
 .I ($L(@VAFY)+$L($G(VAFHLZPD(SEQ)))+1)>MAXLEN D
"RTN","VAFHLZPD",76,0)
 ..;Max length exceeded - start putting data on next node
"RTN","VAFHLZPD",77,0)
 ..S SPILL=SPILL+1
"RTN","VAFHLZPD",78,0)
 ..S SPILLON=SEQ-1
"RTN","VAFHLZPD",79,0)
 ..S VAFY=$NA(VAFZPD(SPILL))
"RTN","VAFHLZPD",80,0)
 .;Add to string
"RTN","VAFHLZPD",81,0)
 .S SPOT=(SEQ+1)-SPILLON
"RTN","VAFHLZPD",82,0)
 .S $P(@VAFY,HLFS,SPOT)=$G(VAFHLZPD(SEQ))
"RTN","VAFHLZPD",83,0)
 ;Return segment
"RTN","VAFHLZPD",84,0)
 Q VAFHLZPD
"RTN","VAFHLZPD",85,0)
 ;
"RTN","VAFHLZPD",86,0)
GETDATA(DFN,VAFSTR,ARRAY) ;Get info needed to build segment
"RTN","VAFHLZPD",87,0)
 ;Input  : DFN - Pointer to PATIENT file (#2)
"RTN","VAFHLZPD",88,0)
 ;         VAFSTR - List of data elements to retrieve seperated
"RTN","VAFHLZPD",89,0)
 ;                  by commas (ex: 1,2,3)
"RTN","VAFHLZPD",90,0)
 ;                - Defaults to all data elements
"RTN","VAFHLZPD",91,0)
 ;         ARRAY - Array to return data in (full global reference)
"RTN","VAFHLZPD",92,0)
 ;                 Defaults to ^TMP($J,"VAFHLZPD")
"RTN","VAFHLZPD",93,0)
 ;         Existance of HL7 encoding variables is assumed
"RTN","VAFHLZPD",94,0)
 ;         (HLFS, HLENC, HLQ)
"RTN","VAFHLZPD",95,0)
 ;Output : Nothing
"RTN","VAFHLZPD",96,0)
 ;           ARRAY(SeqNum) = Value
"RTN","VAFHLZPD",97,0)
 ;Notes  : ARRAY is initialized (KILLed) on entry
"RTN","VAFHLZPD",98,0)
 ;       : Sequence 1 (Set ID) will always have a value of '1'
"RTN","VAFHLZPD",99,0)
 ;
"RTN","VAFHLZPD",100,0)
 ;Check input
"RTN","VAFHLZPD",101,0)
 S ARRAY=$G(ARRAY)
"RTN","VAFHLZPD",102,0)
 S:(ARRAY="") ARRAY=$NA(^TMP($J,"VAFHLZPD"))
"RTN","VAFHLZPD",103,0)
 K @ARRAY
"RTN","VAFHLZPD",104,0)
 ;Sequence 1 - Set ID
"RTN","VAFHLZPD",105,0)
 ;  value is always '1'
"RTN","VAFHLZPD",106,0)
 S @ARRAY@(1)=1
"RTN","VAFHLZPD",107,0)
 S DFN=+$G(DFN)
"RTN","VAFHLZPD",108,0)
 S VAFSTR=$G(VAFSTR)
"RTN","VAFHLZPD",109,0)
 S:(VAFSTR="") VAFSTR=$$COMMANUM(1,33)
"RTN","VAFHLZPD",110,0)
 S VAFSTR=","_VAFSTR_","
"RTN","VAFHLZPD",111,0)
 ;Declare variables
"RTN","VAFHLZPD",112,0)
 N VAFNODE,VAPD,X1,X
"RTN","VAFHLZPD",113,0)
 ;Get zero node
"RTN","VAFHLZPD",114,0)
 S VAFNODE=$G(^DPT(DFN,0))
"RTN","VAFHLZPD",115,0)
 ;Get other patient data from VADPT
"RTN","VAFHLZPD",116,0)
 D OPD^VADPT
"RTN","VAFHLZPD",117,0)
 ;Sequence 2 - Remarks (truncate to 60 characters)
"RTN","VAFHLZPD",118,0)
 I VAFSTR[",2," S X=$P(VAFNODE,"^",10),@ARRAY@(2)=$S(X="":HLQ,1:$E(X,1,60))
"RTN","VAFHLZPD",119,0)
 ;Sequence 3 - Place of birth (city)
"RTN","VAFHLZPD",120,0)
 I VAFSTR[",3," S @ARRAY@(3)=$S(VAPD(1)]"":VAPD(1),1:HLQ)
"RTN","VAFHLZPD",121,0)
 ;Sequence 4 - Place of birth (State abbrv.)
"RTN","VAFHLZPD",122,0)
 I VAFSTR[",4," S X1=$P($G(^DIC(5,$P(+VAPD(2),"^",1),0)),"^",2),@ARRAY@(4)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",123,0)
 ;Sequence 5 - Current means test status
"RTN","VAFHLZPD",124,0)
 I VAFSTR[",5," S X=$P(VAFNODE,"^",14),X1=$P($G(^DG(408.32,+X,0)),"^",2),@ARRAY@(5)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",125,0)
 ;Sequence 6 - Fathers name
"RTN","VAFHLZPD",126,0)
 I VAFSTR[",6," S @ARRAY@(6)=$S(VAPD(3)]"":VAPD(3),1:HLQ)
"RTN","VAFHLZPD",127,0)
 ;Sequence 7 - Mothers name
"RTN","VAFHLZPD",128,0)
 I VAFSTR[",7," S @ARRAY@(7)=$S(VAPD(4)]"":VAPD(4),1:HLQ)
"RTN","VAFHLZPD",129,0)
 ;Sequence 8 - Rated incompetent
"RTN","VAFHLZPD",130,0)
 I VAFSTR[",8," S X1=$$YN^VAFHLFNC($P($G(^DPT(DFN,.29)),"^",12)),@ARRAY@(8)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",131,0)
 ;Sequence 9 - Date of Death
"RTN","VAFHLZPD",132,0)
 I VAFSTR[",9," S X=$P($G(^DPT(DFN,.35)),"^",1),X1=$$HLDATE^HLFNC(X),@ARRAY@(9)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",133,0)
 ;Sequence 10 - Collateral sponser name
"RTN","VAFHLZPD",134,0)
 I VAFSTR[10 D
"RTN","VAFHLZPD",135,0)
 .S X=$P($G(^DPT(DFN,.36)),"^",11)
"RTN","VAFHLZPD",136,0)
 .S X1=$P($G(^DPT(+X,0)),"^",1)
"RTN","VAFHLZPD",137,0)
 .S @ARRAY@(10)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",138,0)
 ;Sequence 11 - Active Health Insurance?
"RTN","VAFHLZPD",139,0)
 I VAFSTR[11 S X=$$INS^VAFHLFNC(DFN),X1=$$YN^VAFHLFNC(X),@ARRAY@(11)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",140,0)
 ;Sequences 12 & 13
"RTN","VAFHLZPD",141,0)
 I VAFSTR[12!(VAFSTR[13) D
"RTN","VAFHLZPD",142,0)
 .S X=$G(^DPT(DFN,.38))
"RTN","VAFHLZPD",143,0)
 .;Sequence 12 - Eligible for Medicaid
"RTN","VAFHLZPD",144,0)
 .I VAFSTR[12 S X1=$$YN^VAFHLFNC($P(X,"^",1)),@ARRAY@(12)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",145,0)
 .;Sequence 13 - Date Medicaid last asked
"RTN","VAFHLZPD",146,0)
 .I VAFSTR[13 S X1=$$HLDATE^HLFNC($P(X,"^",2)),@ARRAY@(13)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",147,0)
 ;Sequence 14 - Race
"RTN","VAFHLZPD",148,0)
 I VAFSTR[14 S X=$P(VAFNODE,"^",6) S X1=$P($G(^DIC(10,+X,0)),"^",2),@ARRAY@(14)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",149,0)
 ;Sequence 15 - Religious Preference
"RTN","VAFHLZPD",150,0)
 I VAFSTR[15 S X=$P(VAFNODE,"^",8) S X1=$P($G(^DIC(13,+X,0)),"^",4),@ARRAY@(15)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",151,0)
 ;Sequence 16 - Homeless Indicator
"RTN","VAFHLZPD",152,0)
 I VAFSTR[16 S X=$T(HOMELESS^SOWKHIRM) S @ARRAY@(16)=$S(X]"":$$HOMELESS^SOWKHIRM(DFN),1:HLQ)
"RTN","VAFHLZPD",153,0)
 ;Sequences 17 & 20
"RTN","VAFHLZPD",154,0)
 I ((VAFSTR[17)!(VAFSTR[20)) D
"RTN","VAFHLZPD",155,0)
 .;POW Status & Location
"RTN","VAFHLZPD",156,0)
 .N VAF52,POW,LOC
"RTN","VAFHLZPD",157,0)
 .S VAF52=$G(^DPT(DFN,.52))
"RTN","VAFHLZPD",158,0)
 .;POW Status Indicated?
"RTN","VAFHLZPD",159,0)
 .S POW=$P(VAF52,"^",5)
"RTN","VAFHLZPD",160,0)
 .S:(POW="") POW=HLQ
"RTN","VAFHLZPD",161,0)
 .;POW Confinement Location (translates pointer to coded value)
"RTN","VAFHLZPD",162,0)
 .S LOC=$P(VAF52,"^",6)
"RTN","VAFHLZPD",163,0)
 .S:(LOC="") LOC=HLQ
"RTN","VAFHLZPD",164,0)
 .I (LOC'=HLQ) S LOC=$S(LOC>0&(LOC<7):LOC+3,LOC>6&(LOC<9):$C(LOC+58),1:"")
"RTN","VAFHLZPD",165,0)
 .;Add to output array
"RTN","VAFHLZPD",166,0)
 .;Sequence 17 - POW Status
"RTN","VAFHLZPD",167,0)
 .S:(VAFSTR[17) @ARRAY@(17)=POW
"RTN","VAFHLZPD",168,0)
 .;Sequence 20 - POW Confinement Location
"RTN","VAFHLZPD",169,0)
 .S:(VAFSTR[20) @ARRAY@(20)=LOC
"RTN","VAFHLZPD",170,0)
 ;Sequence 18 - Insurance Type
"RTN","VAFHLZPD",171,0)
 I VAFSTR[18 S X=+$$INSTYP^IBCNS1(DFN),@ARRAY@(18)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",172,0)
 ;Sequence 19 - RX Copay Exemption Status
"RTN","VAFHLZPD",173,0)
 I VAFSTR[19 S X=+$$RXST^IBARXEU(DFN),@ARRAY@(19)=$S(X'<0:X,1:HLQ)
"RTN","VAFHLZPD",174,0)
 ;Sequence 21 - Primary Care Team
"RTN","VAFHLZPD",175,0)
 I (VAFSTR[21) D
"RTN","VAFHLZPD",176,0)
 .;Get Primary Care Team  (as defined in PCMM)
"RTN","VAFHLZPD",177,0)
 .S X=$$PCTEAM^DGSDUTL(DFN)
"RTN","VAFHLZPD",178,0)
 .S X=$P(X,"^",2)
"RTN","VAFHLZPD",179,0)
 .S:(X="") X=HLQ
"RTN","VAFHLZPD",180,0)
 .;Put into output array
"RTN","VAFHLZPD",181,0)
 .S @ARRAY@(21)=X
"RTN","VAFHLZPD",182,0)
 ; 
"RTN","VAFHLZPD",183,0)
 ; Sequences 22 thru 30 added by DG*5.3*264 (Smart Card)
"RTN","VAFHLZPD",184,0)
 ;
"RTN","VAFHLZPD",185,0)
 ; Sequences 22 & 23
"RTN","VAFHLZPD",186,0)
 I VAFSTR[22!(VAFSTR[23) D
"RTN","VAFHLZPD",187,0)
 .; GI Insurance
"RTN","VAFHLZPD",188,0)
 .S X=$G(^DPT(DFN,.362))
"RTN","VAFHLZPD",189,0)
 .I VAFSTR[22 S X1=$P(X,U,17),@ARRAY@(22)=$S(X1="U":"N",X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",190,0)
 .I VAFSTR[23 S X1=$P(X,U,6),@ARRAY@(23)=$S(X1:$E(X1,1,6),1:HLQ)
"RTN","VAFHLZPD",191,0)
 ; Sequences 24 through 27
"RTN","VAFHLZPD",192,0)
 I VAFSTR[24!(VAFSTR[25)!(VAFSTR[26)!(VAFSTR[27) D
"RTN","VAFHLZPD",193,0)
 .; Most recent care dates & locations
"RTN","VAFHLZPD",194,0)
 .S X=$G(^DPT(DFN,1010.15))
"RTN","VAFHLZPD",195,0)
 .I VAFSTR[24 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(24)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",196,0)
 .I VAFSTR[25 S X1=$P(X,U,2),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(25)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",197,0)
 .I VAFSTR[26 S X1=$$HLDATE^HLFNC($P(X,U,3)),@ARRAY@(26)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",198,0)
 .I VAFSTR[27 S X1=$P(X,U,4),X1=$P($G(^DIC(4,+X1,0)),U),@ARRAY@(27)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",199,0)
 ; Sequences 28 & 29
"RTN","VAFHLZPD",200,0)
 I VAFSTR[28!(VAFSTR[29) D
"RTN","VAFHLZPD",201,0)
 .; dates ruled incompetent (civil and VA)
"RTN","VAFHLZPD",202,0)
 .S X=$G(^DPT(DFN,.29))
"RTN","VAFHLZPD",203,0)
 .I VAFSTR[28 S X1=$$HLDATE^HLFNC($P(X,U,2)),@ARRAY@(28)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",204,0)
 .I VAFSTR[29 S X1=$$HLDATE^HLFNC($P(X,U)),@ARRAY@(29)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",205,0)
 ; Sequence 30 - Spinal cord injury
"RTN","VAFHLZPD",206,0)
 I VAFSTR[30 S X=$P($G(^DPT(DFN,57)),U,4),@ARRAY@(30)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",207,0)
 ; Sequence 31 - Source of Notification
"RTN","VAFHLZPD",208,0)
 I VAFSTR[9&(VAFSTR[31) S X=$P($G(^DPT(DFN,.35)),U,3),@ARRAY@(31)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",209,0)
 ; Sequence 32 - Date/Time Last Updated
"RTN","VAFHLZPD",210,0)
 I VAFSTR[9&(VAFSTR[32) S X=$P($G(^DPT(DFN,.35)),U,4),X1=$$HLDATE^HLFNC(X),@ARRAY@(32)=$S(X1]"":X1,1:HLQ)
"RTN","VAFHLZPD",211,0)
 ; Sequence 33 - Filipino Veteran Proof
"RTN","VAFHLZPD",212,0)
 I VAFSTR[33 S X=$P($G(^DPT(DFN,.321)),U,14),@ARRAY@(33)=$S(X]"":X,1:HLQ)
"RTN","VAFHLZPD",213,0)
 ;Done - cleanup & quit
"RTN","VAFHLZPD",214,0)
 D KVA^VADPT
"RTN","VAFHLZPD",215,0)
 Q
"RTN","VAFHLZPD",216,0)
 ;
"RTN","VAFHLZPD",217,0)
COMMANUM(FROM,TO) ;Build comma seperated list of numbers
"RTN","VAFHLZPD",218,0)
 ;Input  : FROM - Starting number (default = 1)
"RTN","VAFHLZPD",219,0)
 ;         TO - Ending number (default = FROM)
"RTN","VAFHLZPD",220,0)
 ;Output : Comma seperated list of numbers between FROM and TO
"RTN","VAFHLZPD",221,0)
 ;         (Ex: 1,2,3)
"RTN","VAFHLZPD",222,0)
 ;Notes  : Call assumes FROM <= TO
"RTN","VAFHLZPD",223,0)
 ;
"RTN","VAFHLZPD",224,0)
 S FROM=$G(FROM) S:(FROM="") FROM=1
"RTN","VAFHLZPD",225,0)
 S TO=$G(TO) S:(TO="") TO=FROM
"RTN","VAFHLZPD",226,0)
 N OUTPUT,X
"RTN","VAFHLZPD",227,0)
 S OUTPUT=FROM
"RTN","VAFHLZPD",228,0)
 F X=(FROM+1):1:TO S OUTPUT=(OUTPUT_","_X)
"RTN","VAFHLZPD",229,0)
 Q OUTPUT
"RTN","VAFHUTL")
0^31^B20051117
"RTN","VAFHUTL",1,0)
VAFHUTL ;ALB/CM,PHH UTILITIES ROUTINE ;5/1/95
"RTN","VAFHUTL",2,0)
 ;;5.3;Registration;**91,151,568**;Jun 06, 1996
"RTN","VAFHUTL",3,0)
 ;
"RTN","VAFHUTL",4,0)
 ;
"RTN","VAFHUTL",5,0)
LTD(DFN) ;
"RTN","VAFHUTL",6,0)
 ;This function will find the last time seen at the facility
"RTN","VAFHUTL",7,0)
 ;
"RTN","VAFHUTL",8,0)
 ;  Input:  DFN -- pointer to the patient in file #2
"RTN","VAFHUTL",9,0)
 ;
"RTN","VAFHUTL",10,0)
 ;  Output:  FileMan Date/time ^ I,D,R,A,S ^ HL7 Date/time ^ Variable PTR
"RTN","VAFHUTL",11,0)
 ;
"RTN","VAFHUTL",12,0)
 ;  I = inpatient, D = discharge, R = Registration, A = Appointment
"RTN","VAFHUTL",13,0)
 ;  S = Stop Code
"RTN","VAFHUTL",14,0)
 ;
"RTN","VAFHUTL",15,0)
 ;  If Unsuccessful, Output:  -1^error message
"RTN","VAFHUTL",16,0)
 ;
"RTN","VAFHUTL",17,0)
 N LTD,X,FLG,LAST,VARPTR
"RTN","VAFHUTL",18,0)
 ;
"RTN","VAFHUTL",19,0)
 S FLG=""
"RTN","VAFHUTL",20,0)
 ; - need a patient
"RTN","VAFHUTL",21,0)
 I '$G(DFN) Q "-1^Missing Parameters for LTD function"
"RTN","VAFHUTL",22,0)
 ;
"RTN","VAFHUTL",23,0)
 ; - if current inpatient, set LTD = today and quit
"RTN","VAFHUTL",24,0)
 I $G(^DPT(DFN,.105)) S LTD=DT,FLG="I" I $D(^DGPM("ATID1",DFN)) S LAST=9999999.9999999-($O(^DGPM("ATID1",DFN,""))) G LTDQ
"RTN","VAFHUTL",25,0)
 ;
"RTN","VAFHUTL",26,0)
 ; - get the last discharge date
"RTN","VAFHUTL",27,0)
 S LTD=+$O(^DGPM("ATID3",DFN,"")) S:LTD FLG="D",LAST=9999999.9999999-LTD,LTD=LAST\1 S:LTD>DT (LAST,LTD)=DT
"RTN","VAFHUTL",28,0)
 ;
"RTN","VAFHUTL",29,0)
 ; - get the last registration date and compare to LTD
"RTN","VAFHUTL",30,0)
 S X=+$O(^DPT(DFN,"DIS",0)) I X S X=9999999-X S:(X\1)>LTD LAST=X,LTD=X\1,FLG="R",VARPTR=DFN_";DPT("
"RTN","VAFHUTL",31,0)
 ;
"RTN","VAFHUTL",32,0)
 ; - get the last appointment and compare to LTD
"RTN","VAFHUTL",33,0)
 N SDDATE,SDARRAY,SDCLIEN,SDSTAT
"RTN","VAFHUTL",34,0)
 S SDDATE=LTD,SDARRAY("FLDS")=3,SDARRAY(4)=DFN
"RTN","VAFHUTL",35,0)
 I $$SDAPI^SDAMA301(.SDARRAY) D
"RTN","VAFHUTL",36,0)
 .Q:$D(^TMP($J,"SDAMA301",101))
"RTN","VAFHUTL",37,0)
 .S SDCLIEN=0
"RTN","VAFHUTL",38,0)
 .F  S SDCLIEN=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN)) Q:'SDCLIEN!(SDDATE>DT)  D
"RTN","VAFHUTL",39,0)
 ..F  S SDDATE=$O(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE)) Q:'SDDATE!(SDDATE>DT)  D
"RTN","VAFHUTL",40,0)
 ...S SDSTAT=$P($P(^TMP($J,"SDAMA301",DFN,SDCLIEN,SDDATE),"^",3),";")
"RTN","VAFHUTL",41,0)
 ...I SDSTAT="" D
"RTN","VAFHUTL",42,0)
 ....S LAST=SDDATE,LTD=SDDATE\1,FLG="A"
"RTN","VAFHUTL",43,0)
 ....I $D(VARPTR) K VARPTR
"RTN","VAFHUTL",44,0)
 K ^TMP($J,"SDAMA301")
"RTN","VAFHUTL",45,0)
 ;
"RTN","VAFHUTL",46,0)
 ; - get the last standalone after LTD
"RTN","VAFHUTL",47,0)
 S X=$$GETLAST^SDOE(DFN,LTD_".9999")
"RTN","VAFHUTL",48,0)
 I X S LAST=+$$SCE^DGSDU(X,1,0),LTD=LAST\1,FLG="S",VARPTR=X_";SCE("
"RTN","VAFHUTL",49,0)
 ;
"RTN","VAFHUTL",50,0)
LTDQ I '$D(LAST) Q "-1^No last date"
"RTN","VAFHUTL",51,0)
 I '$D(VARPTR) S VARPTR=$$VPTR(FLG,DFN,LAST)
"RTN","VAFHUTL",52,0)
 I +VARPTR<1 Q "-1^No last date"
"RTN","VAFHUTL",53,0)
 Q LAST_"^"_FLG_"^"_$$HLDATE^HLFNC(LAST,"TS")_"^"_VARPTR
"RTN","VAFHUTL",54,0)
 ;
"RTN","VAFHUTL",55,0)
 ;
"RTN","VAFHUTL",56,0)
VPTR(TYPE,DFN,EDATE) ;
"RTN","VAFHUTL",57,0)
 ;Gets pointer for inpatient/outpatient event
"RTN","VAFHUTL",58,0)
 ;
"RTN","VAFHUTL",59,0)
 I '$D(TYPE)!('$D(DFN))!('$D(EDATE)) Q "-1^Missing Parameters for VPTR function"
"RTN","VAFHUTL",60,0)
 N PTR,IND
"RTN","VAFHUTL",61,0)
 I TYPE'="A"&(TYPE'="D")&(TYPE'="I") Q "-1^NOT IN or OUT PATIENT"
"RTN","VAFHUTL",62,0)
 I TYPE="I"!(TYPE="D") D
"RTN","VAFHUTL",63,0)
 .;inpatient or discharge
"RTN","VAFHUTL",64,0)
 .S IND=$O(^DGPM("APID",DFN,"")),PTR=$O(^DGPM("APID",DFN,IND,""))
"RTN","VAFHUTL",65,0)
 .I $D(^DGPM(PTR)) S PTR="-1^MISSING ENTRY"
"RTN","VAFHUTL",66,0)
 .I +PTR>0 S PTR=PTR_";DGPM("
"RTN","VAFHUTL",67,0)
 I TYPE="A" D
"RTN","VAFHUTL",68,0)
 .;outpatient appointment
"RTN","VAFHUTL",69,0)
 .I $D(^SCE("ADFN",DFN,LAST)) S PTR=$O(^SCE("ADFN",DFN,LAST,"")) S:('$D(^SCE(+PTR,0))) PTR=DFN_";DPT(" S:($D(^SCE(+PTR,0))) PTR=PTR_";SCE("
"RTN","VAFHUTL",70,0)
 .I '$D(^SCE("ADFN",DFN,LAST)) S PTR=DFN_";DPT("
"RTN","VAFHUTL",71,0)
 Q PTR
"RTN","VAFHUTL",72,0)
 ;
"RTN","VAFHUTL",73,0)
GETF(SEG) ;NOT USED ANY MORE
"RTN","VAFHUTL",74,0)
 ;This function will return all of the available fields for the SEG
"RTN","VAFHUTL",75,0)
 ;segment as found in the HL7 DHCP PARAMETER file, as a string,
"RTN","VAFHUTL",76,0)
 ;separated by commas
"RTN","VAFHUTL",77,0)
 ;
"RTN","VAFHUTL",78,0)
 ;Input:  SEG - HL7 Segment
"RTN","VAFHUTL",79,0)
 ;Output:  Successful - string of field numbers seperated by commas
"RTN","VAFHUTL",80,0)
 ;If unsuccessful, -1^error message will be returned.
"RTN","VAFHUTL",81,0)
 ;
"RTN","VAFHUTL",82,0)
 ;NOTE: HL("SAN") must be defined as Sending Application in file 771
"RTN","VAFHUTL",83,0)
 ;N ENT,FLDS
"RTN","VAFHUTL",84,0)
 ;I '$D(HLENTRY)!('$D(SEG)) Q "-1^MISSING PARAMETERS"
"RTN","VAFHUTL",85,0)
 ;do lookup in #771 for HLENTRY
"RTN","VAFHUTL",86,0)
 ;S DIC="^HL(770,",DIC(0)="MQZ",X=HLENTRY D ^DIC
"RTN","VAFHUTL",87,0)
 ;I +Y<0 Q "-1^NO ENTRY IN FILE 771"
"RTN","VAFHUTL",88,0)
 ;S ENT=$P(^HL(770,+Y,0),"^",8) I ENT="" Q "-1^NO ENTRY IN APPLICATION FIELD"
"RTN","VAFHUTL",89,0)
 ;
"RTN","VAFHUTL",90,0)
 N ENT,FLDS
"RTN","VAFHUTL",91,0)
 I $G(HL("SAN"))]"",$G(SEG)]""
"RTN","VAFHUTL",92,0)
 E  Q "-1^MISSING PARAMETERS HL(SAN)!SEG"
"RTN","VAFHUTL",93,0)
 ;
"RTN","VAFHUTL",94,0)
 S ENT=$O(^HL(771,"B",HL("SAN"),0))
"RTN","VAFHUTL",95,0)
 I 'ENT Q "-1^NO ENTRY IN FILE 771"
"RTN","VAFHUTL",96,0)
 ;
"RTN","VAFHUTL",97,0)
 S DIC="^HL(771,ENT,""SEG"",",X=SEG,DIC(0)="MQZ" D ^DIC
"RTN","VAFHUTL",98,0)
 K DIC,X
"RTN","VAFHUTL",99,0)
 I +Y<0 K Y Q "-1^NO ENTRY IN SUBFILE #771.05"
"RTN","VAFHUTL",100,0)
 S FLDS=$P(^HL(771,ENT,"SEG",+Y,"F"),"^") K Y
"RTN","VAFHUTL",101,0)
 Q FLDS
"RTN","VAFHUTL",102,0)
 ;
"RTN","VAFHUTL",103,0)
UPDATE(PIVOT,ADATE,APTR,REMOVE) ;
"RTN","VAFHUTL",104,0)
 ;
"RTN","VAFHUTL",105,0)
 ;This function will allow the updating of PIVOT number entry, updating
"RTN","VAFHUTL",106,0)
 ;EVENT DATE/TIME and the VARIABLE POINTER and setting of the DELETED
"RTN","VAFHUTL",107,0)
 ;field.
"RTN","VAFHUTL",108,0)
 ;
"RTN","VAFHUTL",109,0)
 ;Input:  PIVOT  - Pivot Number
"RTN","VAFHUTL",110,0)
 ;        ADATE  - Event Date/Time (new)
"RTN","VAFHUTL",111,0)
 ;        APTR   - Variable Pointer (new)
"RTN","VAFHUTL",112,0)
 ;        REMOVE - 1 or null if 1 set DELETED field
"RTN","VAFHUTL",113,0)
 ;
"RTN","VAFHUTL",114,0)
 ;Output:  0 if successful
"RTN","VAFHUTL",115,0)
 ;        -1^error message if not successful
"RTN","VAFHUTL",116,0)
 ;
"RTN","VAFHUTL",117,0)
 I '$D(PIVOT) Q "-1^MISSING PARAMETERS"
"RTN","VAFHUTL",118,0)
 I '$D(^VAT(391.71,"D",PIVOT)) Q "-1^NO PIVOT ENTRY"
"RTN","VAFHUTL",119,0)
 I '$D(REMOVE) S REMOVE=""
"RTN","VAFHUTL",120,0)
 I APTR?.N1";".A1"(" D
"RTN","VAFHUTL",121,0)
 .I $P(APTR,";",2)="DPT(" S APTR="P.`"_+APTR
"RTN","VAFHUTL",122,0)
 .I $P(APTR,";",2)="SCE(" S APTR="O.`"_+APTR
"RTN","VAFHUTL",123,0)
 .I $P(APTR,";",2)="DGMP(" S APTR="I.`"_+APTR
"RTN","VAFHUTL",124,0)
 S DA=$O(^VAT(391.71,"D",PIVOT,"")) I DA="" Q "-1^BAD CROSS REFERENCE"
"RTN","VAFHUTL",125,0)
 S DIE="^VAT(391.71,",DIC(0)="MQZ",DR=""
"RTN","VAFHUTL",126,0)
 I ADATE'="" S DR=DR_".01///"_ADATE_";"
"RTN","VAFHUTL",127,0)
 I APTR'="" S DR=DR_".05///"_APTR_";"
"RTN","VAFHUTL",128,0)
 S DR=DR_".07///"_REMOVE
"RTN","VAFHUTL",129,0)
 L +^VAT(391.71,DA,0):5
"RTN","VAFHUTL",130,0)
 I '$T Q "-1^Unable to lock entry in Pivot file"
"RTN","VAFHUTL",131,0)
 D ^DIE L -^VAT(391.71,DA,0)
"RTN","VAFHUTL",132,0)
 K DIE,DR,DIC,DA,X,Y
"RTN","VAFHUTL",133,0)
 Q 0
"RTN","VAFHUTL",134,0)
 ;
"RTN","VAFHUTL",135,0)
SEND(VAR1) ;this function will test for the on/off parameter to send ADT messages.
"RTN","VAFHUTL",136,0)
 ;OUTPUTS   0 will indicate NOT to send
"RTN","VAFHUTL",137,0)
 ;          1 will indicate TO send
"RTN","VAFHUTL",138,0)
 ;          0 in second piece will indicate NOT to send HL7 v2.3
"RTN","VAFHUTL",139,0)
 ;          1 in second piece will indicate to send HL7 v2.3
"RTN","VAFHUTL",140,0)
 N VAR1
"RTN","VAFHUTL",141,0)
 S VAR1=$O(^DG(43,0))
"RTN","VAFHUTL",142,0)
 I +VAR1 S VAR1=$P($G(^DG(43,VAR1,"HL7")),"^",2,3)
"RTN","VAFHUTL",143,0)
 Q VAR1
"RTN","VAFHUTL",144,0)
 ;
"RTN","VAFHUTL",145,0)
HLQ(DATA) ;this function returns the value passed to it or HLQ
"RTN","VAFHUTL",146,0)
 I $G(DATA)="" Q HLQ
"RTN","VAFHUTL",147,0)
 Q DATA
"RTN","VAFHUTL",148,0)
 ;
"RTN","VAFHUTL",149,0)
NOSEND() ;function TURNS OFF the on/off parameter to send ADT messages.
"RTN","VAFHUTL",150,0)
 ;        used by init to disable all ADT HL7 protocols
"RTN","VAFHUTL",151,0)
 ; 
"RTN","VAFHUTL",152,0)
 ;OUTPUTS   1 will indicate it was SET NOT to send
"RTN","VAFHUTL",153,0)
 ;          0 will indicate it failed to SET IT NOT to send
"RTN","VAFHUTL",154,0)
 ;
"RTN","VAFHUTL",155,0)
 N VAR1
"RTN","VAFHUTL",156,0)
 S VAR1=$O(^DG(43,0))
"RTN","VAFHUTL",157,0)
 I +VAR1 S $P(^DG(43,+VAR1,"HL7"),"^",2,3)="0^0" Q 0
"RTN","VAFHUTL",158,0)
 Q 1
"RTN","VAFHUTL",159,0)
 ;
"RTN","VAFHUTL",160,0)
DPROTO(PNAM) ;returns 0 if protocol disabled field is not null, ie disabled
"RTN","VAFHUTL",161,0)
 ;        returns 1 if protocol is NOT disabled
"RTN","VAFHUTL",162,0)
 I $G(PNAM)]"",$P($G(^ORD(101,+$O(^ORD(101,"B",PNAM,0)),0)),"^",3)]"" Q 0
"RTN","VAFHUTL",163,0)
 Q 1
"RTN","VAUTOMA")
0^35^B12495883
"RTN","VAUTOMA",1,0)
VAUTOMA ;ALB/MLI - GENERIC ONE, MANY, ALL ROUTINE ; 03/26/2004
"RTN","VAUTOMA",2,0)
 ;;5.3;Registration;**111,568**;Aug 13, 1993
"RTN","VAUTOMA",3,0)
 ;;MAS VERSION 5.1;
"RTN","VAUTOMA",4,0)
DIVISION S VAUTVB="VAUTD",DIC="^DG(40.8,",VAUTNI=2,VAUTSTR="division" G FIRST
"RTN","VAUTOMA",5,0)
CLINIC S DIC="^SC(",DIC("S")="I $P(^(0),U,3)=""C""&'+$P($G(^(""OOS"")),U,1)&'+$P($G(^(""OOS"")),U,2)&$S(VAUTD:1,$D(VAUTD(+$P(^(0),U,15))):1,'+$P(^(0),U,15)&$D(VAUTD(+$O(^DG(40.8,0)))):1,1:0)",VAUTSTR="clinic",VAUTVB="VAUTC" G FIRST
"RTN","VAUTOMA",6,0)
 ;  DIC("S") modified in CLINIC call, to exclude Occasion of Service locations.  abr - 11/25/96
"RTN","VAUTOMA",7,0)
 ;
"RTN","VAUTOMA",8,0)
PATIENT S DIC="^DPT(",VAUTSTR="patient",VAUTVB="VAUTN" G FIRST
"RTN","VAUTOMA",9,0)
WARD S DIC="^DIC(42,",VAUTSTR="ward",VAUTVB="VAUTW",DIC("S")="I $S(VAUTD:1,$D(VAUTD(+$P(^(0),U,11))):1,'+$P(^(0),U,11)&$D(VAUTD(^DG(40.8,+$O(^DG(40.8,0)),0))):1,1:0)" G FIRST
"RTN","VAUTOMA",10,0)
FIRST S DIC(0)="EQMNZ",DIC("A")="Select "_VAUTSTR_": " K @VAUTVB S (@VAUTVB,Y)=0
"RTN","VAUTOMA",11,0)
REDO W !,DIC("A") W:'$D(VAUTNALL) "ALL// " R X:DTIME G ERR:(X="^")!'$T D:X["?" QQ I X="" G:$D(VAUTNALL) ERR S @VAUTVB=1 G QUIT
"RTN","VAUTOMA",12,0)
 S DIC("A")="Select another "_VAUTSTR_": " D ^DIC G:Y'>0 FIRST D SET
"RTN","VAUTOMA",13,0)
 F VAI=1:0:19 W !,DIC("A") R X:DTIME G ERR:(X="^")!'$T K Y Q:X=""  D QQ:X["?" S:$E(X)="-" VAUTX=X,X=$E(VAUTX,2,999) D ^DIC I Y>0 D SET G:VAX REDO S:'VAERR VAI=VAI+1
"RTN","VAUTOMA",14,0)
 G QUIT
"RTN","VAUTOMA",15,0)
SET S VAX=0 I $D(VAUTX) S J=$S(VAUTNI=2:+Y,1:$P(Y(0),"^")) K VAUTX S VAERR=$S($D(@VAUTVB@(J)):0,1:1) W $S('VAERR:"...removed from list...",1:"...not on list...can't remove") Q:VAERR  S VAI=VAI-1 K @VAUTVB@(J) S:$O(@VAUTVB@(0))']"" VAX=1 Q
"RTN","VAUTOMA",16,0)
 S VAERR=0 I $S($D(@VAUTVB@($P(Y(0),U))):1,$D(@VAUTVB@(+Y)):1,1:0) W !?3,*7,"You have already selected that ",VAUTSTR,".  Try again." S VAERR=1
"RTN","VAUTOMA",17,0)
 I VAUTNI=1 S @VAUTVB@($P(Y(0),U))=+Y Q
"RTN","VAUTOMA",18,0)
 I VAUTNI=3 S @VAUTVB@($P(Y(0,0),U))=+Y Q
"RTN","VAUTOMA",19,0)
 S @VAUTVB@(+Y)=$P(Y(0),U) Q
"RTN","VAUTOMA",20,0)
QQ W !,"ENTER:" W:($D(@(VAUTVB))=1&'$D(VAUTNALL)) !?5,"- Return for all ",VAUTSTR,"s, or" W !?5,"- A ",VAUTSTR," and return when all ",VAUTSTR,"s have been selected--limit 20"
"RTN","VAUTOMA",21,0)
 W !?5,"Imprecise selections will yield an additional prompt."
"RTN","VAUTOMA",22,0)
 W !?5,"(e.g. When a user enters 'A', all items beginning with 'A' are displayed.)"
"RTN","VAUTOMA",23,0)
 I $O(@VAUTVB@(0))]"" W !?5,"- An entry preceeded by a minus [-] sign to remove entry from list."
"RTN","VAUTOMA",24,0)
 I $O(@VAUTVB@(0))]"" W !,"NOTE, you have already selected:" S VAJ=0 F VAJ1=0:0 S VAJ=$O(@VAUTVB@(VAJ)) Q:VAJ=""  W !?8,$S(VAUTNI=1:VAJ,1:@VAUTVB@(VAJ))
"RTN","VAUTOMA",25,0)
 Q
"RTN","VAUTOMA",26,0)
ERR S Y=-1
"RTN","VAUTOMA",27,0)
QUIT S:'$D(Y) Y=1 K DIC,J,VAERR,VAI,VAJ,VAJ1,VAX,VAUTNALL,VAUTNI,VAUTSTR,VAUTVB,X Q
"VER")
8.0^22
**INSTALL NAME**
IVM*2.0*95
"BLD",5459,0)
IVM*2.0*95^INCOME VERIFICATION MATCH^0^3041202^y
"BLD",5459,4,0)
^9.64PA^^
"BLD",5459,"KRN",0)
^9.67PA^8989.52^19
"BLD",5459,"KRN",.4,0)
.4
"BLD",5459,"KRN",.401,0)
.401
"BLD",5459,"KRN",.402,0)
.402
"BLD",5459,"KRN",.403,0)
.403
"BLD",5459,"KRN",.5,0)
.5
"BLD",5459,"KRN",.84,0)
.84
"BLD",5459,"KRN",3.6,0)
3.6
"BLD",5459,"KRN",3.8,0)
3.8
"BLD",5459,"KRN",9.2,0)
9.2
"BLD",5459,"KRN",9.8,0)
9.8
"BLD",5459,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",5459,"KRN",9.8,"NM",1,0)
IVMUFNC^^0^B32568026
"BLD",5459,"KRN",9.8,"NM","B","IVMUFNC",1)

"BLD",5459,"KRN",19,0)
19
"BLD",5459,"KRN",19.1,0)
19.1
"BLD",5459,"KRN",101,0)
101
"BLD",5459,"KRN",409.61,0)
409.61
"BLD",5459,"KRN",771,0)
771
"BLD",5459,"KRN",870,0)
870
"BLD",5459,"KRN",8989.51,0)
8989.51
"BLD",5459,"KRN",8989.52,0)
8989.52
"BLD",5459,"KRN",8994,0)
8994
"BLD",5459,"KRN","B",.4,.4)

"BLD",5459,"KRN","B",.401,.401)

"BLD",5459,"KRN","B",.402,.402)

"BLD",5459,"KRN","B",.403,.403)

"BLD",5459,"KRN","B",.5,.5)

"BLD",5459,"KRN","B",.84,.84)

"BLD",5459,"KRN","B",3.6,3.6)

"BLD",5459,"KRN","B",3.8,3.8)

"BLD",5459,"KRN","B",9.2,9.2)

"BLD",5459,"KRN","B",9.8,9.8)

"BLD",5459,"KRN","B",19,19)

"BLD",5459,"KRN","B",19.1,19.1)

"BLD",5459,"KRN","B",101,101)

"BLD",5459,"KRN","B",409.61,409.61)

"BLD",5459,"KRN","B",771,771)

"BLD",5459,"KRN","B",870,870)

"BLD",5459,"KRN","B",8989.51,8989.51)

"BLD",5459,"KRN","B",8989.52,8989.52)

"BLD",5459,"KRN","B",8994,8994)

"BLD",5459,"QUES",0)
^9.62^^
"BLD",5459,"REQB",0)
^9.611^1^1
"BLD",5459,"REQB",1,0)
IVM*2.0*34^2
"BLD",5459,"REQB","B","IVM*2.0*34",1)

"MBREQ")
0
"PKG",220,-1)
1^1
"PKG",220,0)
INCOME VERIFICATION MATCH^IVM^IVM Software for interface with the IVM Center
"PKG",220,20,0)
^9.402P^^
"PKG",220,22,0)
^9.49I^1^1
"PKG",220,22,1,0)
2.0^2941021
"PKG",220,22,1,"PAH",1,0)
95^3041202^66481
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IVMUFNC")
0^1^B32568026
"RTN","IVMUFNC",1,0)
IVMUFNC ;ALB/MLI/PHH - IVM GENERIC FUNCTIONS ; 10/28/2004 10:23am
"RTN","IVMUFNC",2,0)
 ;;2.0;INCOME VERIFICATION MATCH;**3,11,17,34,95**;21-OCT-94
"RTN","IVMUFNC",3,0)
 ;;Per VHA Directive 10-93-142, this routine should not be modified.
"RTN","IVMUFNC",4,0)
 ;
"RTN","IVMUFNC",5,0)
 ; This routine contains generic calls for use throughout IVM
"RTN","IVMUFNC",6,0)
 ;
"RTN","IVMUFNC",7,0)
INIT(EID,HL,INT) ; initialize variables for 1.6 HL7/IVM
"RTN","IVMUFNC",8,0)
 S EID=$G(EID),INT=$G(INT)
"RTN","IVMUFNC",9,0)
 S HLDAP="IVM" D INIT^HLFNC2(EID,.HL,INT)
"RTN","IVMUFNC",10,0)
 S (HLEVN,IVMCT)=0 ; initialize segment and message counters
"RTN","IVMUFNC",11,0)
 ;;D NOW^%DTC S HLSDT=%
"RTN","IVMUFNC",12,0)
 Q
"RTN","IVMUFNC",13,0)
 ;
"RTN","IVMUFNC",14,0)
 ;
"RTN","IVMUFNC",15,0)
CLEAN ; clean-up variables for HL7/IVM (as defined by call to INIT)
"RTN","IVMUFNC",16,0)
 D KILL^HLTRANS
"RTN","IVMUFNC",17,0)
 K HLEVN,HLMTN,HLSDT,IVMCT
"RTN","IVMUFNC",18,0)
 Q
"RTN","IVMUFNC",19,0)
 ;
"RTN","IVMUFNC",20,0)
 ;
"RTN","IVMUFNC",21,0)
BATCH ; put BHS and BTS segments into TMP global
"RTN","IVMUFNC",22,0)
 ;
"RTN","IVMUFNC",23,0)
 ;  Input - HLMTN as HL7 message type being sent in this batch (REQUIRED)
"RTN","IVMUFNC",24,0)
 ;          HLEVN as number of HL7 messages in batch (REQUIRED)
"RTN","IVMUFNC",25,0)
 ;          IVMCT as subscript in TMP global where BTS segment goes (REQ)
"RTN","IVMUFNC",26,0)
 ;          HLSEC (optional) as security (see BHS^HLFNC1)
"RTN","IVMUFNC",27,0)
 ;          HLMSA (optional) as message ack variables (see BHS^HLFNC1)
"RTN","IVMUFNC",28,0)
 ;
"RTN","IVMUFNC",29,0)
 ;      ****Also assumes all HL7 variables returned from****
"RTN","IVMUFNC",30,0)
 ;          INIT^HLTRANS are defined
"RTN","IVMUFNC",31,0)
 ;
"RTN","IVMUFNC",32,0)
 Q  ; LINE ADDED FOR HL7 1.6
"RTN","IVMUFNC",33,0)
 S HLSEC=$G(HLSEC),HLMSA=$G(HLMSA)
"RTN","IVMUFNC",34,0)
 S ^TMP("HLS",$J,HLSDT,0)=$$BHS^HLFNC1(HLMTN,HLSEC,HLMSA)
"RTN","IVMUFNC",35,0)
 S ^TMP("HLS",$J,HLSDT,IVMCT)="BTS"_HLFS_HLEVN ; trailer
"RTN","IVMUFNC",36,0)
 Q
"RTN","IVMUFNC",37,0)
 ;
"RTN","IVMUFNC",38,0)
 ;
"RTN","IVMUFNC",39,0)
IVM(DFN,IVMDT) ; extrinsic function - should this pt be transmitted to IVM?
"RTN","IVMUFNC",40,0)
 ;
"RTN","IVMUFNC",41,0)
 ;  Input - DFN as internal entry number of PATIENT file
"RTN","IVMUFNC",42,0)
 ;          IVMDT as date of test (default DT)
"RTN","IVMUFNC",43,0)
 ;
"RTN","IVMUFNC",44,0)
 ; Output - 1 if pt should be sent to IVM, 0 otherwise
"RTN","IVMUFNC",45,0)
 ;
"RTN","IVMUFNC",46,0)
 N X,Y
"RTN","IVMUFNC",47,0)
 S DFN=$G(DFN) I '$D(^DPT(+DFN,0)) G IVMQ
"RTN","IVMUFNC",48,0)
 S IVMDT=$S($G(IVMDT):IVMDT,1:DT)
"RTN","IVMUFNC",49,0)
 S X=$$LST^DGMTU(DFN,IVMDT)
"RTN","IVMUFNC",50,0)
 I $E($P(X,"^",2),1,3)'=$E(IVMDT,1,3) K IVMDT G IVMQ ; not in same year
"RTN","IVMUFNC",51,0)
 S X=$G(^DGMT(408.31,+X,0)) I 'X G IVMQ ; can't find MT entry for date
"RTN","IVMUFNC",52,0)
 I $P(X,"^",3)=6 S:'$$INS(DFN,IVMDT) Y=1 G IVMQ ; C/no insurance...send
"RTN","IVMUFNC",53,0)
 I $P(X,"^",3)'=4 G IVMQ ; not cat A
"RTN","IVMUFNC",54,0)
 I ($P(X,"^",4)-$P(X,"^",15)>$P(X,"^",12))!$P(X,"^",10) G IVMQ ; income-deduct expenses>threshold (hardship) or adjudicated
"RTN","IVMUFNC",55,0)
 S Y=1
"RTN","IVMUFNC",56,0)
IVMQ Q +$G(Y)
"RTN","IVMUFNC",57,0)
 ;
"RTN","IVMUFNC",58,0)
 ;
"RTN","IVMUFNC",59,0)
INS(DFN,IVMDT) ; extrinsic function to see if pt has active insurance
"RTN","IVMUFNC",60,0)
 ;
"RTN","IVMUFNC",61,0)
 ;  Input - DFN as internal entry number of PATIENT file
"RTN","IVMUFNC",62,0)
 ;          IVMDT [optional] as date to compute ins coverage for
"RTN","IVMUFNC",63,0)
 ;
"RTN","IVMUFNC",64,0)
 ; Output - 1 if yes, 0 if no
"RTN","IVMUFNC",65,0)
 ;
"RTN","IVMUFNC",66,0)
 Q $$INSURED^IBCNS1(DFN,$G(IVMDT))
"RTN","IVMUFNC",67,0)
 ;
"RTN","IVMUFNC",68,0)
 ;
"RTN","IVMUFNC",69,0)
MAIL(IVMGRP) ; Transmit to members of Mail Group. Before D MAIL^IVMUFNC()
"RTN","IVMUFNC",70,0)
 ; set XMSUB = to subject   and  set IVMTEXT array to message.
"RTN","IVMUFNC",71,0)
 ;
"RTN","IVMUFNC",72,0)
 ;Input:
"RTN","IVMUFNC",73,0)
 ;  IVMGRP - optional parameter, = to name of a mailgroup to send the
"RTN","IVMUFNC",74,0)
 ;           message to.  If not sent, the IVM Site Parameter file is
"RTN","IVMUFNC",75,0)
 ;           used to determine the mailgroup.
"RTN","IVMUFNC",76,0)
 ;
"RTN","IVMUFNC",77,0)
 N DIFROM,XMDUZ,XMTEXT,XMSTRIP,XMROU,XMY,XMZ,XMDF
"RTN","IVMUFNC",78,0)
 S XMDF=""
"RTN","IVMUFNC",79,0)
 S XMDUZ="IVM PACKAGE"
"RTN","IVMUFNC",80,0)
 S XMTEXT="IVMTEXT("
"RTN","IVMUFNC",81,0)
 I '$L($G(IVMGRP)) D
"RTN","IVMUFNC",82,0)
 .S IVMGRP=$P($G(^XMB(3.8,+$P($G(^IVM(301.9,1,0)),"^",2),0)),"^")
"RTN","IVMUFNC",83,0)
 S XMY("G."_IVMGRP_"@"_^XMB("NETNAME"))=""
"RTN","IVMUFNC",84,0)
 D ^XMD
"RTN","IVMUFNC",85,0)
 K IVMTEXT,XMDUZ,XMSUB,XMTEXT,XMY
"RTN","IVMUFNC",86,0)
 Q
"RTN","IVMUFNC",87,0)
 ;
"RTN","IVMUFNC",88,0)
 ;
"RTN","IVMUFNC",89,0)
LTD(DFN,IVMQUERY) ; Find Last Treatment Date
"RTN","IVMUFNC",90,0)
 ;  Input:       DFN -- pointer to the patient in file #2
"RTN","IVMUFNC",91,0)
 ;          IVMQUERY("LTD") -- # of the QUERY that is currently open or
"RTN","IVMUFNC",92,0)
 ;                      undefined, zero, or null if no QUERY opened for
"RTN","IVMUFNC",93,0)
 ;                      last treatment date
"RTN","IVMUFNC",94,0)
 ; Output:  LTD -- Last Treatment Date (really last date seen at
"RTN","IVMUFNC",95,0)
 ;                                      the facility)
"RTN","IVMUFNC",96,0)
 ;
"RTN","IVMUFNC",97,0)
 N LTD,SDSTOP,X,Z,IVMQ
"RTN","IVMUFNC",98,0)
 ;
"RTN","IVMUFNC",99,0)
 ; - need a patient
"RTN","IVMUFNC",100,0)
 S IVMQ=$G(IVMQUERY("LTD"))
"RTN","IVMUFNC",101,0)
 I '$G(DFN) S LTD=0 G LTDQ
"RTN","IVMUFNC",102,0)
 ;
"RTN","IVMUFNC",103,0)
 ; - if current inpatient, set LTD = today and quit
"RTN","IVMUFNC",104,0)
 I $G(^DPT(DFN,.105)) S LTD=DT G LTDQ
"RTN","IVMUFNC",105,0)
 ;
"RTN","IVMUFNC",106,0)
 ; - get the last discharge date
"RTN","IVMUFNC",107,0)
 S LTD=+$O(^DGPM("ATID3",DFN,"")) S:LTD LTD=9999999.9999999-LTD\1 S:LTD>DT LTD=DT
"RTN","IVMUFNC",108,0)
 ;
"RTN","IVMUFNC",109,0)
 ; - get the last registration date and compare to LTD
"RTN","IVMUFNC",110,0)
 S X=+$O(^DPT(DFN,"DIS",0)) I X S X=9999999-X\1 S:X>LTD LTD=X
"RTN","IVMUFNC",111,0)
 ;
"RTN","IVMUFNC",112,0)
 ; - get the last appointment or stop after LTD (if any)
"RTN","IVMUFNC",113,0)
 K ^TMP("DIERR",$J)
"RTN","IVMUFNC",114,0)
 I $G(IVMQ) D ACTIVE^SDQ(.IVMQ,"FALSE","SET") ;clear QUERY results
"RTN","IVMUFNC",115,0)
 I '$G(IVMQ) D
"RTN","IVMUFNC",116,0)
 .D OPEN^SDQ(.IVMQ) Q:'$G(IVMQ)
"RTN","IVMUFNC",117,0)
 .D INDEX^SDQ(.IVMQ,"PATIENT/DATE","SET")
"RTN","IVMUFNC",118,0)
 .D SCANCB^SDQ(.IVMQ,"I $S($P(SDOE0,U,8)=2:1,$P(SDOE0,U,8)=1:$$APPT^IVMUFNC(SDOE0),1:0) S LTD=SDOE0\1,SDSTOP=1","SET")
"RTN","IVMUFNC",119,0)
 .S IVMQUERY("LTD")=IVMQ
"RTN","IVMUFNC",120,0)
 ;
"RTN","IVMUFNC",121,0)
 D PAT^SDQ(.IVMQ,DFN,"SET")
"RTN","IVMUFNC",122,0)
 D DATE^SDQ(.IVMQ,LTD+.000001,9999999,"SET")
"RTN","IVMUFNC",123,0)
 D ACTIVE^SDQ(.IVMQ,"TRUE","SET")
"RTN","IVMUFNC",124,0)
 D SCAN^SDQ(.IVMQ,"BACKWARD")
"RTN","IVMUFNC",125,0)
 K ^TMP("DIERR",$J)
"RTN","IVMUFNC",126,0)
 ;
"RTN","IVMUFNC",127,0)
LTDQ ;
"RTN","IVMUFNC",128,0)
 Q $S(LTD:$$HLDATE^HLFNC(LTD),1:HLQ)
"RTN","IVMUFNC",129,0)
 ;
"RTN","IVMUFNC",130,0)
APPT(SDOE0) ;Determine if appt associated with encounter is in a valid state
"RTN","IVMUFNC",131,0)
 ; Quit when Outpatient Encounter STATUS is CHECKED OUT
"RTN","IVMUFNC",132,0)
 Q:$P(SDOE0,U,12)=2 1
"RTN","IVMUFNC",133,0)
 ; Quit when Outpatient Encounter STATUS is ACTION REQUIRED and the
"RTN","IVMUFNC",134,0)
 ; Appointment Status is SCHEDULED/KEPT
"RTN","IVMUFNC",135,0)
 N DGARRAY,SDCNT,SDSTAT,SDDTTM S DGARRAY("FLDS")=3,DGARRAY(4)=+$P(SDOE0,U,2)
"RTN","IVMUFNC",136,0)
 S DGARRAY(1)=$P(SDOE0,U),DGARRAY("SORT")="P",DGARRAY("MAX")=1
"RTN","IVMUFNC",137,0)
 S SDCNT=$$SDAPI^SDAMA301(.DGARRAY),SDSTAT=""
"RTN","IVMUFNC",138,0)
 I SDCNT>0 D
"RTN","IVMUFNC",139,0)
 .S SDDTTM=$O(^TMP($J,"SDAMA301",DGARRAY(4),0))
"RTN","IVMUFNC",140,0)
 .I SDDTTM S SDSTAT=$P($P($G(^TMP($J,"SDAMA301",DGARRAY(4),SDDTTM)),U,3),";")
"RTN","IVMUFNC",141,0)
 K ^TMP($J,"SDAMA301")
"RTN","IVMUFNC",142,0)
 Q:(($P(SDOE0,U,12)=14)&(SDSTAT="R")) 1
"RTN","IVMUFNC",143,0)
 Q 0
"RTN","IVMUFNC",144,0)
 ;
"RTN","IVMUFNC",145,0)
OUTTR(IVMINT,IVMPAR,IVMST) ; - Transform IVMINT to a displayable value
"RTN","IVMUFNC",146,0)
 ;  Input:   IVMINT  --  internal value of demographic element
"RTN","IVMUFNC",147,0)
 ;                       received from IVM
"RTN","IVMUFNC",148,0)
 ;           IVMPAR  --  Zeroth node of the entry in file #301.92
"RTN","IVMUFNC",149,0)
 ;                       for the demographic element IVMINT
"RTN","IVMUFNC",150,0)
 ;            IVMST  --  [optional] pointer to the STATE (#5) file
"RTN","IVMUFNC",151,0)
 ;                       Required to transform the county code
"RTN","IVMUFNC",152,0)
 ;  Output:  IVMOUT  --  Displayable value for IVMINT
"RTN","IVMUFNC",153,0)
 ;
"RTN","IVMUFNC",154,0)
 N IVMOUT,Z S IVMOUT=IVMINT
"RTN","IVMUFNC",155,0)
 I $G(IVMINT)=""!($G(IVMPAR)="") S IVMOUT="" G OUTTRQ
"RTN","IVMUFNC",156,0)
 ;
"RTN","IVMUFNC",157,0)
 ; - use special transform for county
"RTN","IVMUFNC",158,0)
 I $G(IVMST),$P(IVMPAR,"^",2)="PID12" S IVMOUT=$P($G(^DIC(5,IVMST,1,IVMINT,0)),"^")
"RTN","IVMUFNC",159,0)
 ;
"RTN","IVMUFNC",160,0)
 ; - transform the internal value if necessary
"RTN","IVMUFNC",161,0)
 I $P(IVMPAR,"^",6) S IVMOUT=$$EXPAND($P(IVMPAR,"^",4),$P(IVMPAR,"^",5),IVMINT)
"RTN","IVMUFNC",162,0)
 ;
"RTN","IVMUFNC",163,0)
OUTTRQ Q IVMOUT
"RTN","IVMUFNC",164,0)
 ;
"RTN","IVMUFNC",165,0)
 ;
"RTN","IVMUFNC",166,0)
EXPAND(FILE,FIELD,VALUE) ; - returns internal data in an output format
"RTN","IVMUFNC",167,0)
 N Y,C S Y=VALUE
"RTN","IVMUFNC",168,0)
 I 'FILE!('FIELD)!(VALUE="") G EXPQ
"RTN","IVMUFNC",169,0)
 S Y=VALUE,C=$P(^DD(FILE,FIELD,0),"^",2) D Y^DIQ
"RTN","IVMUFNC",170,0)
EXPQ Q Y
"RTN","IVMUFNC",171,0)
 ;
"RTN","IVMUFNC",172,0)
 ;
"RTN","IVMUFNC",173,0)
GETPAT(DFN,IVMPAT) ;
"RTN","IVMUFNC",174,0)
 ; Description: Used to obtain identifying information for a patient
"RTN","IVMUFNC",175,0)
 ; in the PATIENT file and place it in the IVMPAT() array.
"RTN","IVMUFNC",176,0)
 ;
"RTN","IVMUFNC",177,0)
 ;  Input:
"RTN","IVMUFNC",178,0)
 ;   DFN - ien of patient in PATIENT file
"RTN","IVMUFNC",179,0)
 ;
"RTN","IVMUFNC",180,0)
 ; Output:
"RTN","IVMUFNC",181,0)
 ;  Function Value - 1 on success, 0 on failure
"RTN","IVMUFNC",182,0)
 ;   IVMPAT - (pass by reference) On success, this array will contain
"RTN","IVMUFNC",183,0)
 ;    the patient identifing information. Array subscripts are:
"RTN","IVMUFNC",184,0)
 ;      "DFN"  - ien PATIENT file
"RTN","IVMUFNC",185,0)
 ;      "NAME" - patient name
"RTN","IVMUFNC",186,0)
 ;      "SSN"  - patient Social Security Number
"RTN","IVMUFNC",187,0)
 ;      "DOB"  - patient date of birth (FM format)
"RTN","IVMUFNC",188,0)
 ;      "SEX"  - patient sex
"RTN","IVMUFNC",189,0)
 ;
"RTN","IVMUFNC",190,0)
 N IVMNODE
"RTN","IVMUFNC",191,0)
 Q:'$G(DFN) 0
"RTN","IVMUFNC",192,0)
 K IVMPAT S IVMPAT=""
"RTN","IVMUFNC",193,0)
 ;
"RTN","IVMUFNC",194,0)
 ; obtain patient record
"RTN","IVMUFNC",195,0)
 S IVMNODE=$G(^DPT(DFN,0))
"RTN","IVMUFNC",196,0)
 Q:IVMNODE="" 0
"RTN","IVMUFNC",197,0)
 ;
"RTN","IVMUFNC",198,0)
 S IVMPAT("DFN")=DFN
"RTN","IVMUFNC",199,0)
 S IVMPAT("NAME")=$P(IVMNODE,"^")
"RTN","IVMUFNC",200,0)
 S IVMPAT("SEX")=$P(IVMNODE,"^",2)
"RTN","IVMUFNC",201,0)
 S IVMPAT("DOB")=$P(IVMNODE,"^",3)
"RTN","IVMUFNC",202,0)
 S IVMPAT("SSN")=$P(IVMNODE,"^",9)
"RTN","IVMUFNC",203,0)
 Q 1
"RTN","IVMUFNC",204,0)
 ;
"RTN","IVMUFNC",205,0)
LOOKUP(SSN,DOB,SEX,ERROR) ;
"RTN","IVMUFNC",206,0)
 ;Description: This function will do a search for the patient based on
"RTN","IVMUFNC",207,0)
 ;the identifying information provided. The function will be successful
"RTN","IVMUFNC",208,0)
 ;only if a single patient is found matching the identifiers provided.
"RTN","IVMUFNC",209,0)
 ;
"RTN","IVMUFNC",210,0)
 ;Inputs:
"RTN","IVMUFNC",211,0)
 ;  SSN - patient Social Security Number
"RTN","IVMUFNC",212,0)
 ;  DOB - patient date of birth (FM format)
"RTN","IVMUFNC",213,0)
 ;  SEX - patient sex
"RTN","IVMUFNC",214,0)
 ;Outputs:
"RTN","IVMUFNC",215,0)
 ;  Function Value - patient DFN if successful, 0 otherwise
"RTN","IVMUFNC",216,0)
 ;  ERROR - if unsuccessful, an error message is returned (optional, pass by reference)
"RTN","IVMUFNC",217,0)
 ;
"RTN","IVMUFNC",218,0)
 N DFN,NODE
"RTN","IVMUFNC",219,0)
 ;
"RTN","IVMUFNC",220,0)
 S DFN=$O(^DPT("SSN",SSN,0))
"RTN","IVMUFNC",221,0)
 I 'DFN S ERROR="SSN NOT FOUND" Q 0
"RTN","IVMUFNC",222,0)
 I $O(^DPT("SSN",SSN,DFN)) S ERROR="MULTIPLE PATIENTS MATCHING SSN" Q 0
"RTN","IVMUFNC",223,0)
 S NODE=$G(^DPT(DFN,0))
"RTN","IVMUFNC",224,0)
 I $P(NODE,"^",2)'=SEX S ERROR="SEX DOES NOT MATCH" Q 0
"RTN","IVMUFNC",225,0)
 I $E($P(NODE,"^",3),1,3)'=$E(DOB,1,3) S ERROR="DOB DOES NOT MATCH" Q 0
"RTN","IVMUFNC",226,0)
 I $E($P(NODE,"^",3),4,5),$E($P(NODE,"^",3),4,5)'=$E(DOB,4,5) S ERROR="DOB DOES NOT MATCH" Q 0
"RTN","IVMUFNC",227,0)
 Q DFN
"VER")
8.0^22
**INSTALL NAME**
EAS*1.0*46
"BLD",5461,0)
EAS*1.0*46^ENROLLMENT APPLICATION SYSTEM^0^3041202^y
"BLD",5461,4,0)
^9.64PA^^
"BLD",5461,"KRN",0)
^9.67PA^8989.52^19
"BLD",5461,"KRN",.4,0)
.4
"BLD",5461,"KRN",.401,0)
.401
"BLD",5461,"KRN",.402,0)
.402
"BLD",5461,"KRN",.403,0)
.403
"BLD",5461,"KRN",.5,0)
.5
"BLD",5461,"KRN",.84,0)
.84
"BLD",5461,"KRN",3.6,0)
3.6
"BLD",5461,"KRN",3.8,0)
3.8
"BLD",5461,"KRN",9.2,0)
9.2
"BLD",5461,"KRN",9.8,0)
9.8
"BLD",5461,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",5461,"KRN",9.8,"NM",1,0)
EASMTRP1^^0^B30662124
"BLD",5461,"KRN",9.8,"NM",2,0)
EASMTRP3^^0^B16786399
"BLD",5461,"KRN",9.8,"NM",3,0)
EASMTCHK^^0^B32966517
"BLD",5461,"KRN",9.8,"NM","B","EASMTCHK",3)

"BLD",5461,"KRN",9.8,"NM","B","EASMTRP1",1)

"BLD",5461,"KRN",9.8,"NM","B","EASMTRP3",2)

"BLD",5461,"KRN",19,0)
19
"BLD",5461,"KRN",19.1,0)
19.1
"BLD",5461,"KRN",101,0)
101
"BLD",5461,"KRN",409.61,0)
409.61
"BLD",5461,"KRN",771,0)
771
"BLD",5461,"KRN",870,0)
870
"BLD",5461,"KRN",8989.51,0)
8989.51
"BLD",5461,"KRN",8989.52,0)
8989.52
"BLD",5461,"KRN",8994,0)
8994
"BLD",5461,"KRN","B",.4,.4)

"BLD",5461,"KRN","B",.401,.401)

"BLD",5461,"KRN","B",.402,.402)

"BLD",5461,"KRN","B",.403,.403)

"BLD",5461,"KRN","B",.5,.5)

"BLD",5461,"KRN","B",.84,.84)

"BLD",5461,"KRN","B",3.6,3.6)

"BLD",5461,"KRN","B",3.8,3.8)

"BLD",5461,"KRN","B",9.2,9.2)

"BLD",5461,"KRN","B",9.8,9.8)

"BLD",5461,"KRN","B",19,19)

"BLD",5461,"KRN","B",19.1,19.1)

"BLD",5461,"KRN","B",101,101)

"BLD",5461,"KRN","B",409.61,409.61)

"BLD",5461,"KRN","B",771,771)

"BLD",5461,"KRN","B",870,870)

"BLD",5461,"KRN","B",8989.51,8989.51)

"BLD",5461,"KRN","B",8989.52,8989.52)

"BLD",5461,"KRN","B",8994,8994)

"BLD",5461,"QUES",0)
^9.62^^
"BLD",5461,"REQB",0)
^9.611^3^3
"BLD",5461,"REQB",1,0)
EAS*1.0*15^2
"BLD",5461,"REQB",2,0)
EAS*1.0*13^2
"BLD",5461,"REQB",3,0)
EAS*1.0*38^2
"BLD",5461,"REQB","B","EAS*1.0*13",2)

"BLD",5461,"REQB","B","EAS*1.0*15",1)

"BLD",5461,"REQB","B","EAS*1.0*38",3)

"MBREQ")
0
"PKG",552,-1)
1^1
"PKG",552,0)
ENROLLMENT APPLICATION SYSTEM^EAS^ENROLLMENT
"PKG",552,20,0)
^9.402P^2^1
"PKG",552,20,2,0)
2^^EASXDR
"PKG",552,20,2,1)
 
"PKG",552,20,"B",2,2)

"PKG",552,22,0)
^9.49I^1^1
"PKG",552,22,1,0)
1.0^3010315^3010419^66481
"PKG",552,22,1,"PAH",1,0)
46^3041202^66481
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","EASMTCHK")
0^3^B32966517
"RTN","EASMTCHK",1,0)
EASMTCHK ;ALB/SCK,PJR -  MEANS TEST BLOCKING CHECK ; 11/13/03 11:13am
"RTN","EASMTCHK",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,12,15,38,46**;MAR 15,2001
"RTN","EASMTCHK",3,0)
 ; This routine provides an API, which when called from Appointment Management will allow 
"RTN","EASMTCHK",4,0)
 ; for the blocking of future appointments and appointment check-in/out if the patient 
"RTN","EASMTCHK",5,0)
 ; requires a Means Test or has a Means Test Status of Required. $$LST^DGMTU is used 
"RTN","EASMTCHK",6,0)
 ; to determine if a MT is REQUIRED.  If a MT does not have a status of REQUIRED, 
"RTN","EASMTCHK",7,0)
 ; but is more than 365 days out (same criteria used in OLD^DGMTU4), the MT will 
"RTN","EASMTCHK",8,0)
 ; be considered "REQUIRED" for blocking purposes. If a Means Test is required, the 
"RTN","EASMTCHK",9,0)
 ; following combinations of appointment actions will be blocked:
"RTN","EASMTCHK",10,0)
 ;    o Making a future appt for a Regular appt type
"RTN","EASMTCHK",11,0)
 ;    o Check In/Out an appt which is either a Regular or Research type
"RTN","EASMTCHK",12,0)
 ;
"RTN","EASMTCHK",13,0)
 ; A Walk-in will see the alert notice, and will be warned NOT to CHECK-IN the walk-in 
"RTN","EASMTCHK",14,0)
 ; appointment. Unscheduled/Walk-ins can ONLY be checked out.
"RTN","EASMTCHK",15,0)
 ;
"RTN","EASMTCHK",16,0)
 ; This API may be passed a flag to "silence" the screen display of the alert message, and 
"RTN","EASMTCHK",17,0)
 ; will accept an array variable to return the alert text in. Inpatient appointments 
"RTN","EASMTCHK",18,0)
 ; are not affected in any way.  Domicilary are not considered inpatients for the purpose 
"RTN","EASMTCHK",19,0)
 ; of Means Test Blocking for appointments
"RTN","EASMTCHK",20,0)
 ;
"RTN","EASMTCHK",21,0)
MT(DFN,EASAPT,EASACT,EASDT,EASQT,EASMSG) ; Entry point for MT Check
"RTN","EASMTCHK",22,0)
 ; Input Variables
"RTN","EASMTCHK",23,0)
 ;    DFN    - Patient's IEN in File #2
"RTN","EASMTCHK",24,0)
 ;    EASAPT - Appointment Type (File #409.1) [Optional]
"RTN","EASMTCHK",25,0)
 ;    EASACT - Appointment Action Flag [Optional] Default = "Other"
"RTN","EASMTCHK",26,0)
 ;             "M"  - Make an Appointment
"RTN","EASMTCHK",27,0)
 ;             "C"  - Check In/Out an existing appointment
"RTN","EASMTCHK",28,0)
 ;             "W"  - Unscheduled/Walk-in appointment
"RTN","EASMTCHK",29,0)
 ;             "O"  - Other
"RTN","EASMTCHK",30,0)
 ;             "L"  - Letters
"RTN","EASMTCHK",31,0)
 ;
"RTN","EASMTCHK",32,0)
 ;    EASDT  - Appointment Date/Time [Optional]
"RTN","EASMTCHK",33,0)
 ;    EASQT  - Silent flag [Optional], if set will prevent display of alert message
"RTN","EASMTCHK",34,0)
 ;    EASMSG - Return array for alert message [Optional], if passed in, the alert 
"RTN","EASMTCHK",35,0)
 ;             message text will be copied to this array
"RTN","EASMTCHK",36,0)
 ;
"RTN","EASMTCHK",37,0)
 ; Output
"RTN","EASMTCHK",38,0)
 ;    1  - Block action (MT Required)
"RTN","EASMTCHK",39,0)
 ;    0  - Don't block action (MT Not required)
"RTN","EASMTCHK",40,0)
 ;
"RTN","EASMTCHK",41,0)
 N RSLT,EASMT,EASTXT,EASX,EAMTS,DSPLY,IENS
"RTN","EASMTCHK",42,0)
 ;
"RTN","EASMTCHK",43,0)
 S RSLT=0
"RTN","EASMTCHK",44,0)
 S EASQT=+$G(EASQT)
"RTN","EASMTCHK",45,0)
 S EASAPT=+$G(EASAPT)
"RTN","EASMTCHK",46,0)
 S EASDT=$G(EASDT)
"RTN","EASMTCHK",47,0)
 S EASACT=$G(EASACT)
"RTN","EASMTCHK",48,0)
 S:EASACT']"" EASACT="O"
"RTN","EASMTCHK",49,0)
 ; If Appt type is not defined, action is CI/CO, get appt date
"RTN","EASMTCHK",50,0)
 I 'EASAPT,EASACT="C",EASDT]"" D
"RTN","EASMTCHK",51,0)
 .N DGARRAY,SDCNT
"RTN","EASMTCHK",52,0)
 .S DGARRAY(4)=DFN,DGARRAY("SORT")="P",DGARRAY("FLDS")=10
"RTN","EASMTCHK",53,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","EASMTCHK",54,0)
 .S EASAPT=+$P($G(^TMP($J,"SDAMA301",DFN,EASDT)),U,10)
"RTN","EASMTCHK",55,0)
 .K DGARRAY,SDCNT,^TMP($J,"SDAMA301")
"RTN","EASMTCHK",56,0)
 ;
"RTN","EASMTCHK",57,0)
 Q:$$INP(DFN) RSLT       ; Quit if inpatient
"RTN","EASMTCHK",58,0)
 S EAMTS=$$MTCHK(DFN,EASACT)    ; Get MT Check flag
"RTN","EASMTCHK",59,0)
 Q:'EAMTS RSLT
"RTN","EASMTCHK",60,0)
 ;
"RTN","EASMTCHK",61,0)
 ;Build Alert message 
"RTN","EASMTCHK",62,0)
 D BLDMSG(EASACT,.EASTXT)
"RTN","EASMTCHK",63,0)
 I $D(EASMSG) M @EASMSG=EASTXT ; If output array defined,copy message test
"RTN","EASMTCHK",64,0)
 ;
"RTN","EASMTCHK",65,0)
 ; Check appointment action and appointment type.  Set blocking action
"RTN","EASMTCHK",66,0)
 I EASACT="M",EASAPT=9 S (DSPLY,RSLT)=1 ; Make an Appt.
"RTN","EASMTCHK",67,0)
 ;
"RTN","EASMTCHK",68,0)
 I EASACT="C" D  ; Check-in an appt.
"RTN","EASMTCHK",69,0)
 . I $G(EASAPT)=9 S (DSPLY,RSLT)=1
"RTN","EASMTCHK",70,0)
 ;
"RTN","EASMTCHK",71,0)
 I "W,O"[EASACT D  ; Walk-in/Other appt.
"RTN","EASMTCHK",72,0)
 . S:$G(EASAPT)=9 DSPLY=1
"RTN","EASMTCHK",73,0)
 ;
"RTN","EASMTCHK",74,0)
 I $G(DSPLY) D
"RTN","EASMTCHK",75,0)
 . Q:EASQT  ; If silent flag is set, do not display alert
"RTN","EASMTCHK",76,0)
 . S EASX=0
"RTN","EASMTCHK",77,0)
 . W !?5,$CHAR(7),"******************************************************"
"RTN","EASMTCHK",78,0)
 . F  S EASX=$O(EASTXT(EASX)) Q:'EASX  D
"RTN","EASMTCHK",79,0)
 . . W !?5,EASTXT(EASX)
"RTN","EASMTCHK",80,0)
 ;
"RTN","EASMTCHK",81,0)
 ; Check for override key on making appointments
"RTN","EASMTCHK",82,0)
 I EASACT="M" D
"RTN","EASMTCHK",83,0)
 . I $D(^XUSEC("EAS MTOVERRIDE",DUZ)) S RSLT=0
"RTN","EASMTCHK",84,0)
 Q $G(RSLT)
"RTN","EASMTCHK",85,0)
 ;
"RTN","EASMTCHK",86,0)
MTCHK(DFN,EASACT) ; Check Means Test Status
"RTN","EASMTCHK",87,0)
 ; Input
"RTN","EASMTCHK",88,0)
 ;     DFN
"RTN","EASMTCHK",89,0)
 ;
"RTN","EASMTCHK",90,0)
 ; Output  
"RTN","EASMTCHK",91,0)
 ;     0   OK
"RTN","EASMTCHK",92,0)
 ;     1   MEANS TEST Required
"RTN","EASMTCHK",93,0)
 ;
"RTN","EASMTCHK",94,0)
 N RSLT,EASTAT,EASDT
"RTN","EASMTCHK",95,0)
 ;
"RTN","EASMTCHK",96,0)
 S RSLT=0
"RTN","EASMTCHK",97,0)
 S EASTAT=$$LST^DGMTU(DFN,"",1)
"RTN","EASMTCHK",98,0)
 I EASTAT]"" D
"RTN","EASMTCHK",99,0)
 . I $P(EASTAT,U,4)="R" S RSLT=1 Q
"RTN","EASMTCHK",100,0)
 . ;; Condition Check: MT Stat="P" AND GMT Threshold>Threshold A
"RTN","EASMTCHK",101,0)
 . ;;  AND MT Date is after 10/5/1999 AND Agrees to pay Deductible
"RTN","EASMTCHK",102,0)
 . ;;  AND MT Date is older than 365 days, THEN MT is required
"RTN","EASMTCHK",103,0)
 . I $P(EASTAT,U,4)="P",$$GET1^DIQ(408.31,+EASTAT,.27,"I")>$$GET1^DIQ(408.31,+EASTAT,.12,"I"),$P(EASTAT,U,2)>2991005,$$GET1^DIQ(408.31,+EASTAT,.11,"I"),$$OLD^DGMTU4($P(EASTAT,U,2)) S RSLT=1 Q
"RTN","EASMTCHK",104,0)
 . ;; Condition Check: Cat C or Pending Adj.
"RTN","EASMTCHK",105,0)
 . ;;  AND Agrees to pay Deductible AND MT date after 10/5/1999
"RTN","EASMTCHK",106,0)
 . I "C,P"[$P(EASTAT,U,4),$$GET1^DIQ(408.31,+EASTAT,.11,"I"),$P(EASTAT,U,2)>2991005 Q
"RTN","EASMTCHK",107,0)
 . I $P(EASTAT,U,4)="P",$$GET1^DIQ(408.31,+EASTAT,.27,"I")>$$GET1^DIQ(408.31,+EASTAT,.12,"I"),$P(EASTAT,U,2)>2991005,$$GET1^DIQ(408.31,+EASTAT,.11,"I"),$$OLD^DGMTU4($P(EASTAT,U,2)) S RSLT=1 Q
"RTN","EASMTCHK",108,0)
 . ;; Condition Check: Cat C AND Declines to give income information AND Agreed to pay deductible
"RTN","EASMTCHK",109,0)
 . I $P(EASTAT,U,4)="C",$$GET1^DIQ(408.31,+EASTAT,.14,"I"),$$GET1^DIQ(408.31,+EASTAT,.11,"I") Q
"RTN","EASMTCHK",110,0)
 . S EASDT=$P(EASTAT,U,2)
"RTN","EASMTCHK",111,0)
 . I ($$FMDIFF^XLFDT(DT,EASDT)>365) S RSLT=1
"RTN","EASMTCHK",112,0)
 . I $G(EASACT)="L" D
"RTN","EASMTCHK",113,0)
 . . ;; For letters, need to check for letters past 60-day threshold
"RTN","EASMTCHK",114,0)
 . . I ($$FMDIFF^XLFDT(DT,EASDT)>304) S RSLT=1
"RTN","EASMTCHK",115,0)
 ;
"RTN","EASMTCHK",116,0)
 I $P(EASTAT,U,4)="N" S RSLT=0
"RTN","EASMTCHK",117,0)
 Q $G(RSLT)
"RTN","EASMTCHK",118,0)
 ;
"RTN","EASMTCHK",119,0)
BLDMSG(EASACT,EASTXT) ; Build alert message to user
"RTN","EASMTCHK",120,0)
 N LINE
"RTN","EASMTCHK",121,0)
 ;
"RTN","EASMTCHK",122,0)
 S LINE=1
"RTN","EASMTCHK",123,0)
 S EASTXT(LINE)="Means Test Alert",LINE=LINE+1
"RTN","EASMTCHK",124,0)
 S EASTXT(LINE)="A Means Test is required or needs to be completed.",LINE=LINE+1
"RTN","EASMTCHK",125,0)
 ;
"RTN","EASMTCHK",126,0)
 I "M,C,W"[EASACT D
"RTN","EASMTCHK",127,0)
 . S EASTXT(LINE)="Please perform MEANS TEST or instruct patient",LINE=LINE+1
"RTN","EASMTCHK",128,0)
 . S EASTXT(LINE)="to report for Means Test interview.",LINE=LINE+1
"RTN","EASMTCHK",129,0)
 ;
"RTN","EASMTCHK",130,0)
 I EASACT="M" D
"RTN","EASMTCHK",131,0)
 . S EASTXT(LINE)=">> A future appointment cannot be made at this time."
"RTN","EASMTCHK",132,0)
 . S:$D(^XUSEC("EAS MTOVERRIDE",DUZ)) EASTXT(LINE)=">> Override Key in Effect."
"RTN","EASMTCHK",133,0)
 . S LINE=LINE+1
"RTN","EASMTCHK",134,0)
 ;
"RTN","EASMTCHK",135,0)
 I EASACT="C" S EASTXT(LINE)=">> This action may not be completed at this time.",LINE=LINE+1
"RTN","EASMTCHK",136,0)
 I EASACT="W" D
"RTN","EASMTCHK",137,0)
 . S EASTXT(LINE)=">> Check-Out ONLY.  Do NOT Check-In (CI) a walk-in appointment",LINE=LINE+1
"RTN","EASMTCHK",138,0)
 . S EASTXT(LINE)="   You will not be able to check-out the appt. if you do so.",LINE=LINE+1
"RTN","EASMTCHK",139,0)
 Q
"RTN","EASMTCHK",140,0)
 ;
"RTN","EASMTCHK",141,0)
INP(DFN) ; Check on Inpatient status
"RTN","EASMTCHK",142,0)
 ;  Input
"RTN","EASMTCHK",143,0)
 ;     DFN   - IEN from patient file
"RTN","EASMTCHK",144,0)
 ;  Output
"RTN","EASMTCHK",145,0)
 ;     1 - Patient has Inpatient status 
"RTN","EASMTCHK",146,0)
 ;     0 - Patient does not have Inpatient status
"RTN","EASMTCHK",147,0)
 ;  Default
"RTN","EASMTCHK",148,0)
 ;     Inpatient API defaults to TODAY for inpatient status check
"RTN","EASMTCHK",149,0)
 ;
"RTN","EASMTCHK",150,0)
 N VAERR,EAIN,VAROOT,VAINDT
"RTN","EASMTCHK",151,0)
 ;
"RTN","EASMTCHK",152,0)
 S VAINDT=$$NOW^XLFDT,VAROOT="EAIN"
"RTN","EASMTCHK",153,0)
 ;; Modified to treat DOM patients as inpatients for the purpose of appointment blocking.
"RTN","EASMTCHK",154,0)
 ;; EAS*1*12
"RTN","EASMTCHK",155,0)
 D INP^VADPT
"RTN","EASMTCHK",156,0)
 Q $S(+$G(EAIN(1)):1,1:0)
"RTN","EASMTRP1")
0^1^B30662124
"RTN","EASMTRP1",1,0)
EASMTRP1 ;ALB/SCK - MEANS TEST DAILY EXPIRATION REPORT ; 03/16/2004
"RTN","EASMTRP1",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,13,46**;MAR 15,2001
"RTN","EASMTRP1",3,0)
 ;
"RTN","EASMTRP1",4,0)
EN ; Interactive report generation, select date range
"RTN","EASMTRP1",5,0)
 N DIR,EASBEG,EASEND,ZTSAVE,EAX,%ZIS,DIRUT
"RTN","EASMTRP1",6,0)
 ;
"RTN","EASMTRP1",7,0)
 D HOME^%ZIS
"RTN","EASMTRP1",8,0)
 W @IOF
"RTN","EASMTRP1",9,0)
 ;
"RTN","EASMTRP1",10,0)
 ; Get beginning date of date range, default to TODAY
"RTN","EASMTRP1",11,0)
 W !,$CHAR(7),"Enter date range for anniversary date search"
"RTN","EASMTRP1",12,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",13,0)
 S DIR("A")="   Start Date"
"RTN","EASMTRP1",14,0)
 D ^DIR K DIR
"RTN","EASMTRP1",15,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",16,0)
 S EASBEG=Y
"RTN","EASMTRP1",17,0)
 ;
"RTN","EASMTRP1",18,0)
 ; Get ending date of date range, default to TODAY
"RTN","EASMTRP1",19,0)
 S DIR(0)="D^::EX",DIR("?")="^D HELP^%DTC",DIR("B")=$$FMTE^XLFDT(DT)
"RTN","EASMTRP1",20,0)
 S DIR("A")="     End Date"
"RTN","EASMTRP1",21,0)
 D ^DIR K DIR
"RTN","EASMTRP1",22,0)
 Q:$D(DIRUT)
"RTN","EASMTRP1",23,0)
 S EASEND=Y
"RTN","EASMTRP1",24,0)
 ;
"RTN","EASMTRP1",25,0)
 S EAX=$$GET1^DIQ(713,1,5)
"RTN","EASMTRP1",26,0)
 S:EAX]"" %ZIS("B")=EAX
"RTN","EASMTRP1",27,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",28,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE,.%ZIS)
"RTN","EASMTRP1",29,0)
 Q
"RTN","EASMTRP1",30,0)
 ;
"RTN","EASMTRP1",31,0)
QUE ; Queued report generation
"RTN","EASMTRP1",32,0)
 N ZTSAVE,ZTRTN,ZTDESC,EAX,%ZIS
"RTN","EASMTRP1",33,0)
 ;
"RTN","EASMTRP1",34,0)
 S (EASBEG,EASEND)=$$FMADD^XLFDT($$DT^XLFDT,-1)
"RTN","EASMTRP1",35,0)
 S ZTSAVE("EASBEG")="",ZTSAVE("EASEND")=""
"RTN","EASMTRP1",36,0)
 S IOP=""
"RTN","EASMTRP1",37,0)
 D EN^XUTMDEVQ("BLD^EASMTRP1","EAS MT EXPIRATION RPT",.ZTSAVE)
"RTN","EASMTRP1",38,0)
 Q
"RTN","EASMTRP1",39,0)
 ;
"RTN","EASMTRP1",40,0)
BLD ; Build the list of MT expirations to TMP global
"RTN","EASMTRP1",41,0)
 N EASIEN,EASANV,EASLST,EASENDT,DFN,EASTMP,EASDT,EASENDT
"RTN","EASMTRP1",42,0)
 ;
"RTN","EASMTRP1",43,0)
 K ^TMP("EASEXP",$J)
"RTN","EASMTRP1",44,0)
 ;
"RTN","EASMTRP1",45,0)
 S EASENDT=$$FMADD^XLFDT(EASEND,-365)
"RTN","EASMTRP1",46,0)
 S EASANV=$$FMADD^XLFDT(EASBEG,-365,"",-1) ; Subtract 1 minute to capture the 1st day
"RTN","EASMTRP1",47,0)
 F  S EASANV=$O(^DGMT(408.31,"B",EASANV)) Q:'EASANV!(EASANV>EASENDT)  D
"RTN","EASMTRP1",48,0)
 . S EASIEN=0
"RTN","EASMTRP1",49,0)
 . F  S EASIEN=$O(^DGMT(408.31,"B",EASANV,EASIEN)) Q:'EASIEN  D
"RTN","EASMTRP1",50,0)
 . . S DFN=$$GET1^DIQ(408.31,EASIEN,.02,"I") Q:+DFN=0
"RTN","EASMTRP1",51,0)
 . . S EASLST=$$LST^DGMTU(DFN)
"RTN","EASMTRP1",52,0)
 . . Q:+EASLST'=EASIEN  ; Quit it this MT is not the last MT on file
"RTN","EASMTRP1",53,0)
 . . Q:$$DECEASED^EASMTUTL("",DFN)  ; Quit if patient is deceased
"RTN","EASMTRP1",54,0)
 . . Q:"N,P"[$P(EASLST,U,4)  ; Quit if MT No longer Required or Pending Adjudication
"RTN","EASMTRP1",55,0)
 . . ; Quit if Cat C, agrees to deductible and MT later the 10-5-99
"RTN","EASMTRP1",56,0)
 . . I $P(EASLST,U,4)="C",$$GET1^DIQ(408.31,+EASLST,.11,"I"),$P(EASLST,U,2)>2991005 Q
"RTN","EASMTRP1",57,0)
 . . ;;Q:$$FUTMT^EASMTUTL("","",DFN)  ; Quit if future MT on file
"RTN","EASMTRP1",58,0)
 . . S ^TMP("EASEXP",$J,EASANV,EASIEN)=DFN_U_EASLST
"RTN","EASMTRP1",59,0)
 ;
"RTN","EASMTRP1",60,0)
 S EASTMP="^TMP(""EASEXP"","_$J_")"
"RTN","EASMTRP1",61,0)
 S EASDT("BEG")=EASBEG,EASDT("END")=EASEND
"RTN","EASMTRP1",62,0)
 D BLDSD              ; Call Scheduling API
"RTN","EASMTRP1",63,0)
 D PRT(EASTMP,.EASDT) ; Call print report
"RTN","EASMTRP1",64,0)
 K DGARRAY,SDCNT,VARR,I,^TMP($J,"SDAMA")
"RTN","EASMTRP1",65,0)
 Q
"RTN","EASMTRP1",66,0)
 ;
"RTN","EASMTRP1",67,0)
BLDSD ;
"RTN","EASMTRP1",68,0)
 N EDATE,MTREC,PIEN,VARR,RCNT,ACNT,DGARRAY,SDCNT,I
"RTN","EASMTRP1",69,0)
 S ACNT=1,RCNT=0
"RTN","EASMTRP1",70,0)
 S EDATE=0 F  S EDATE=$O(^TMP("EASEXP",$J,EDATE)) Q:'EDATE  D
"RTN","EASMTRP1",71,0)
 .S MTREC=0 F  S MTREC=$O(^TMP("EASEXP",$J,EDATE,MTREC)) Q:'MTREC  D
"RTN","EASMTRP1",72,0)
 ..S PIEN=+^TMP("EASEXP",$J,EDATE,MTREC)
"RTN","EASMTRP1",73,0)
 ..Q:'$D(^DPT(PIEN,0))
"RTN","EASMTRP1",74,0)
 ..S RCNT=RCNT+1,VARR(ACNT)=$G(VARR(ACNT))_PIEN_";"
"RTN","EASMTRP1",75,0)
 ..; Group DFNs by no more than twenty records
"RTN","EASMTRP1",76,0)
 ..I RCNT>19 S ACNT=ACNT+1,RCNT=0
"RTN","EASMTRP1",77,0)
 ;
"RTN","EASMTRP1",78,0)
 ; Call SD API by array of Patient DFNs
"RTN","EASMTRP1",79,0)
 K DGARRAY
"RTN","EASMTRP1",80,0)
 S DGARRAY(1)=DT,DGARRAY("SORT")="P",DGARRAY("FLDS")="1;2"
"RTN","EASMTRP1",81,0)
 F I=1:1 Q:'$D(VARR(I))  D
"RTN","EASMTRP1",82,0)
 .S DGARRAY(4)=VARR(I)
"RTN","EASMTRP1",83,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","EASMTRP1",84,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","EASMTRP1",85,0)
 .K ^TMP($J,"SDAMA301")
"RTN","EASMTRP1",86,0)
 Q
"RTN","EASMTRP1",87,0)
 ;
"RTN","EASMTRP1",88,0)
PRT(EASTMP,EASDT) ;
"RTN","EASMTRP1",89,0)
 N EASANV,EASIEN,PAGE,DFN,EASP,EASABRT
"RTN","EASMTRP1",90,0)
 ;
"RTN","EASMTRP1",91,0)
 S EASANV=0,PAGE=0
"RTN","EASMTRP1",92,0)
 D HDR(.EASDT)
"RTN","EASMTRP1",93,0)
 ;
"RTN","EASMTRP1",94,0)
 I '$D(@EASTMP) D  Q
"RTN","EASMTRP1",95,0)
 . W !!?3,">> No Means Test expirations for the selected date range."
"RTN","EASMTRP1",96,0)
 ;
"RTN","EASMTRP1",97,0)
 F  S EASANV=$O(@EASTMP@(EASANV)) Q:'EASANV  D  Q:$G(EASABRT)
"RTN","EASMTRP1",98,0)
 . S EASIEN=0
"RTN","EASMTRP1",99,0)
 . F  S EASIEN=$O(@EASTMP@(EASANV,EASIEN)) Q:'EASIEN  D  Q:$G(EASABRT)
"RTN","EASMTRP1",100,0)
 . . S EASDAT=@EASTMP@(EASANV,EASIEN)
"RTN","EASMTRP1",101,0)
 . . D PRTLINE(EASANV,EASDAT) ; Get data and format print line
"RTN","EASMTRP1",102,0)
 . . I $E(IOST,1,2)="C-",($Y+5)>IOSL D
"RTN","EASMTRP1",103,0)
 . . . S DIR(0)="E"
"RTN","EASMTRP1",104,0)
 . . . D ^DIR K DIR
"RTN","EASMTRP1",105,0)
 . . . I 'Y S EASABRT=1 Q
"RTN","EASMTRP1",106,0)
 . . . D HDR(.EASDT)
"RTN","EASMTRP1",107,0)
 Q
"RTN","EASMTRP1",108,0)
 ;
"RTN","EASMTRP1",109,0)
PRTLINE(EASANV,EASDAT) ; Format and print report line
"RTN","EASMTRP1",110,0)
 N DFN,EASNAME,EASTAT,EASAPT,EASF,EACL
"RTN","EASMTRP1",111,0)
 ;
"RTN","EASMTRP1",112,0)
 S DFN=$P(EASDAT,U)
"RTN","EASMTRP1",113,0)
 S EASNAME=$$GET1^DIQ(2,DFN,.01)
"RTN","EASMTRP1",114,0)
 W !,$E(EASNAME,1,20)
"RTN","EASMTRP1",115,0)
 ;
"RTN","EASMTRP1",116,0)
 D PID^VADPT6
"RTN","EASMTRP1",117,0)
 W ?22,VA("PID")
"RTN","EASMTRP1",118,0)
 ;
"RTN","EASMTRP1",119,0)
 W ?35,$TR($$FMTE^XLFDT($$FMADD^XLFDT(EASANV,365),"2F")," ","0")
"RTN","EASMTRP1",120,0)
 S EASTAT=$P(EASDAT,U,5)
"RTN","EASMTRP1",121,0)
 W ?46,$S(EASTAT="C":"MT CPR",EASTAT="A":"MT CPE",EASTAT="R":"REQD",EASTAT="N":"NA",EASTAT="P":"PEND",EASTAT="G":"GMT CPR",1:"")
"RTN","EASMTRP1",122,0)
 ;
"RTN","EASMTRP1",123,0)
 D GETAPT(DFN,.EASAPT)
"RTN","EASMTRP1",124,0)
 I $D(EASAPT) D
"RTN","EASMTRP1",125,0)
 . S EACL=0 F  S EACL=$O(EASAPT(EACL)) Q:'EACL  D
"RTN","EASMTRP1",126,0)
 . . W:$G(EASF) !
"RTN","EASMTRP1",127,0)
 . . W ?55,$E($$GET1^DIQ(44,EACL,.01),1,15)," ",$$FMTE^XLFDT(EASAPT(EACL),"2D")
"RTN","EASMTRP1",128,0)
 . . S EASF=1
"RTN","EASMTRP1",129,0)
 ;
"RTN","EASMTRP1",130,0)
 D KVA^VADPT
"RTN","EASMTRP1",131,0)
 Q
"RTN","EASMTRP1",132,0)
 ;
"RTN","EASMTRP1",133,0)
GETAPT(DFN,EASAPT) ; Get future appointments for patient
"RTN","EASMTRP1",134,0)
 N EASAP,EASND,EASCL
"RTN","EASMTRP1",135,0)
 Q:'$D(^TMP($J,"SDAMA",DFN))
"RTN","EASMTRP1",136,0)
 S EASAP=0 F  S EASAP=$O(^TMP($J,"SDAMA",DFN,EASAP)) Q:'EASAP  D
"RTN","EASMTRP1",137,0)
 .S EASND=^TMP($J,"SDAMA",DFN,EASAP)
"RTN","EASMTRP1",138,0)
 .S EASCL=+$P(EASND,U,2),EASAPT(EASCL)=+EASND
"RTN","EASMTRP1",139,0)
 Q
"RTN","EASMTRP1",140,0)
 ;
"RTN","EASMTRP1",141,0)
HDR(EASDT) ; Print report header
"RTN","EASMTRP1",142,0)
 N LINE,SPACE,TXT,HDR,TAB
"RTN","EASMTRP1",143,0)
 ;
"RTN","EASMTRP1",144,0)
 I $E(IOST,1,2)="C-" W @IOF
"RTN","EASMTRP1",145,0)
 S TXT="Means Test Expiration Report"
"RTN","EASMTRP1",146,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",147,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",148,0)
 W !,HDR K HDR
"RTN","EASMTRP1",149,0)
 ;
"RTN","EASMTRP1",150,0)
 S TXT="Anniversary Date(s): "_$$FMTE^XLFDT(EASDT("BEG"),"5D")_" - "_$$FMTE^XLFDT(EASDT("END"),"5D")
"RTN","EASMTRP1",151,0)
 S SPACE=(IOM-$L(TXT))/2
"RTN","EASMTRP1",152,0)
 S $P(HDR," ",SPACE)="",HDR=HDR_TXT
"RTN","EASMTRP1",153,0)
 W !,HDR K HDR
"RTN","EASMTRP1",154,0)
 ;
"RTN","EASMTRP1",155,0)
 W !!,"Printed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP1",156,0)
 S PAGE=$G(PAGE)+1
"RTN","EASMTRP1",157,0)
 S TAB=IOM-8
"RTN","EASMTRP1",158,0)
 W ?TAB,"Page "_PAGE
"RTN","EASMTRP1",159,0)
 ;
"RTN","EASMTRP1",160,0)
 W !,"Patient",?25,"SSN",?35,"MT Expired",?46,"Status",?57,"Future Appts"
"RTN","EASMTRP1",161,0)
 S $P(LINE,"=",IOM)="" W !,LINE
"RTN","EASMTRP1",162,0)
 Q
"RTN","EASMTRP3")
0^2^B16786399
"RTN","EASMTRP3",1,0)
EASMTRP3 ; ALB/SCK - MEANS TEST ANV DATES BY APPT DATE ; 3/17/2004
"RTN","EASMTRP3",2,0)
 ;;1.0;ENROLLMENT APPLICATION SYSTEM;**3,15,46**;MAR 15,2001
"RTN","EASMTRP3",3,0)
 ;
"RTN","EASMTRP3",4,0)
QUE ;  Que off the appointment list search by MT anniversary date
"RTN","EASMTRP3",5,0)
 N EASDT,ZTSAVE
"RTN","EASMTRP3",6,0)
 ;
"RTN","EASMTRP3",7,0)
 S DIR(0)="DAO^DT::EX"
"RTN","EASMTRP3",8,0)
 S DIR("B")="TODAY",DIR("A")="Run report for date: ",DIR("?")="^D HELP^%DTC"
"RTN","EASMTRP3",9,0)
 D ^DIR K DIR
"RTN","EASMTRP3",10,0)
 Q:$D(DIRUT)
"RTN","EASMTRP3",11,0)
 S EASDT=Y
"RTN","EASMTRP3",12,0)
 ;
"RTN","EASMTRP3",13,0)
 S ZTSAVE("EASDT")=""
"RTN","EASMTRP3",14,0)
 D EN^XUTMDEVQ("EN^EASMTRP3","EAS MT DUE BY APPOINTMENT RPT",.ZTSAVE)
"RTN","EASMTRP3",15,0)
 Q
"RTN","EASMTRP3",16,0)
 ;
"RTN","EASMTRP3",17,0)
EN ;  Main entry point for appointment list by MT anniversary date
"RTN","EASMTRP3",18,0)
 N EASSC,PAGE,ACNT,RCNT,DGARRAY,I,CLARR,SDCNT
"RTN","EASMTRP3",19,0)
 K ^TMP("EASAP",$J)
"RTN","EASMTRP3",20,0)
 S PAGE=1,^TMP("EASAP",$J,"APDT")=EASDT
"RTN","EASMTRP3",21,0)
 ;
"RTN","EASMTRP3",22,0)
 ; Build Array of Valid Clinic IENs
"RTN","EASMTRP3",23,0)
 S ACNT=1,(RCNT,EASSC)=0 F  S EASSC=$O(^SC(EASSC)) Q:'EASSC  D
"RTN","EASMTRP3",24,0)
 .Q:'$D(^SC(EASSC,0))
"RTN","EASMTRP3",25,0)
 .Q:$P(^SC(EASSC,0),U,3)'="C"
"RTN","EASMTRP3",26,0)
 .S RCNT=RCNT+1,CLARR(ACNT)=$G(CLARR(ACNT))_EASSC_";"
"RTN","EASMTRP3",27,0)
 .; Group Clinic IENs by no more than thirty
"RTN","EASMTRP3",28,0)
 .I RCNT>29 S ACNT=ACNT+1,RCNT=0
"RTN","EASMTRP3",29,0)
 ;
"RTN","EASMTRP3",30,0)
 ; Call SD API by array of Clinic IENs
"RTN","EASMTRP3",31,0)
 S DGARRAY(1)=EASDT_";"_EASDT,DGARRAY("FLDS")="1;3"
"RTN","EASMTRP3",32,0)
 F I=1:1 Q:'$D(CLARR(I))  D
"RTN","EASMTRP3",33,0)
 .S DGARRAY(2)=CLARR(I)
"RTN","EASMTRP3",34,0)
 .S SDCNT=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","EASMTRP3",35,0)
 .M ^TMP($J,"SDAMA")=^TMP($J,"SDAMA301")
"RTN","EASMTRP3",36,0)
 .K ^TMP($J,"SDAMA301")
"RTN","EASMTRP3",37,0)
 D LOOP,PRINT
"RTN","EASMTRP3",38,0)
 K DGARRAY,CLARR,I,^TMP($J,"SDAMA")
"RTN","EASMTRP3",39,0)
 Q
"RTN","EASMTRP3",40,0)
 ;
"RTN","EASMTRP3",41,0)
LOOP ; Loop through a clinic's appointment list
"RTN","EASMTRP3",42,0)
 N DFN,EASANV,EASAPT
"RTN","EASMTRP3",43,0)
 ;
"RTN","EASMTRP3",44,0)
 S EASSC=0 F  S EASSC=$O(^TMP($J,"SDAMA",EASSC)) Q:'EASSC  D
"RTN","EASMTRP3",45,0)
 .S DFN=0 F  S DFN=$O(^TMP($J,"SDAMA",EASSC,DFN)) Q:'DFN  D
"RTN","EASMTRP3",46,0)
 ..S EASAPT=0 F  S EASAPT=$O(^TMP($J,"SDAMA",EASSC,DFN,EASAPT)) Q:'EASAPT  D
"RTN","EASMTRP3",47,0)
 ...; Quit if appointment has been cancelled
"RTN","EASMTRP3",48,0)
 ...Q:$P($P(^TMP($J,"SDAMA",EASSC,DFN,EASAPT),U,3),";")["C"
"RTN","EASMTRP3",49,0)
 ...S LASTMT=$$LST^DGMTU(DFN)  ; Get patient's last Means test
"RTN","EASMTRP3",50,0)
 ...; Quit if means test is no longer required or pending
"RTN","EASMTRP3",51,0)
 ...Q:"^N^P^"[(U_$P(LASTMT,U,4)_U)
"RTN","EASMTRP3",52,0)
 ...; Quit if Cat C, agreed to pay deduct. and MT was after 10/5/1999
"RTN","EASMTRP3",53,0)
 ...I $P(LASTMT,U,4)="C",$$GET1^DIQ(408.31,+LASTMT,.11,"I"),$P(LASTMT,U,2)>2991005 Q
"RTN","EASMTRP3",54,0)
 ...; Quit if a Future Dated MT is on file
"RTN","EASMTRP3",55,0)
 ...Q:$$FUT^DGMTU(DFN)
"RTN","EASMTRP3",56,0)
 ...; If appt dt is later than anniversary dt, add veteran to list.
"RTN","EASMTRP3",57,0)
 ...S EASANV=$$FMADD^XLFDT($P(LASTMT,U,2),365)
"RTN","EASMTRP3",58,0)
 ...I EASDT'<EASANV S ^TMP("EASAP",$J,"CLN",EASSC,DFN,EASAPT)=""
"RTN","EASMTRP3",59,0)
 Q
"RTN","EASMTRP3",60,0)
 ;
"RTN","EASMTRP3",61,0)
PRINT ;  Print Report
"RTN","EASMTRP3",62,0)
 N EACLN,DFN,LASTMT,VA,ANVDT,PAGE,EASABRT,APDT,XX
"RTN","EASMTRP3",63,0)
 ;
"RTN","EASMTRP3",64,0)
 I '$D(^TMP("EASAP",$J,"CLN")) D  Q
"RTN","EASMTRP3",65,0)
 . S PAGE=1 S XX=$$HDR("")
"RTN","EASMTRP3",66,0)
 . W !!?3,"No MT Anniversary dates found for this appointment date."
"RTN","EASMTRP3",67,0)
 ;
"RTN","EASMTRP3",68,0)
 W !
"RTN","EASMTRP3",69,0)
 S EACLN=0
"RTN","EASMTRP3",70,0)
 F  S EACLN=$O(^TMP("EASAP",$J,"CLN",EACLN)) Q:'EACLN  D  Q:$G(EASABRT)
"RTN","EASMTRP3",71,0)
 . S PAGE=1 S EASABRT=$$HDR(EACLN) Q:$G(EASABRT)
"RTN","EASMTRP3",72,0)
 . S DFN=0
"RTN","EASMTRP3",73,0)
 . F  S DFN=$O(^TMP("EASAP",$J,"CLN",EACLN,DFN)) Q:'DFN  D  Q:$G(EASABRT)
"RTN","EASMTRP3",74,0)
 . . S ANVDT=$P($$LST^DGMTU(DFN),U,2)
"RTN","EASMTRP3",75,0)
 . . I ANVDT>0 S ANVDT=$$FMADD^XLFDT(ANVDT,365)
"RTN","EASMTRP3",76,0)
 . . W !?3,$$GET1^DIQ(2,DFN,.01)
"RTN","EASMTRP3",77,0)
 . . D PID^VADPT6
"RTN","EASMTRP3",78,0)
 . . W ?30,VA("BID") K VA
"RTN","EASMTRP3",79,0)
 . . W ?38,$S(ANVDT>0:$$FMTE^XLFDT(ANVDT),1:"")
"RTN","EASMTRP3",80,0)
 . . S APDT=0
"RTN","EASMTRP3",81,0)
 . . F  S APDT=$O(^TMP("EASAP",$J,"CLN",EACLN,DFN,APDT)) Q:'APDT  D  Q:$G(EASABRT)
"RTN","EASMTRP3",82,0)
 . . . W ?55,$$FMTE^XLFDT(APDT,"2P"),!
"RTN","EASMTRP3",83,0)
 . . . I ($Y+5)>IOSL S EASABRT=$$HDR(EACLN)
"RTN","EASMTRP3",84,0)
 ;
"RTN","EASMTRP3",85,0)
 Q
"RTN","EASMTRP3",86,0)
 ;
"RTN","EASMTRP3",87,0)
HDR(EASCLN) ; Report Header
"RTN","EASMTRP3",88,0)
 N TAB,LINE,CLINIC,RSLT
"RTN","EASMTRP3",89,0)
 ;
"RTN","EASMTRP3",90,0)
 S RSLT=0
"RTN","EASMTRP3",91,0)
 I $E(IOST,1,2)="C-" D  I RSLT Q RSLT
"RTN","EASMTRP3",92,0)
 . S DIR(0)="E"
"RTN","EASMTRP3",93,0)
 . D ^DIR K DIR
"RTN","EASMTRP3",94,0)
 . I 'Y S RSLT=1
"RTN","EASMTRP3",95,0)
 ;
"RTN","EASMTRP3",96,0)
 W @IOF
"RTN","EASMTRP3",97,0)
 S CLINIC=$S(EASCLN>0:$$GET1^DIQ(44,EASCLN,.01),1:"")
"RTN","EASMTRP3",98,0)
 W "Means Test Expiration Report by Appt Date "_$S(CLINIC]"":"for "_CLINIC,1:"")
"RTN","EASMTRP3",99,0)
 W !!,"For Appointment Date: ",$$FMTE^XLFDT(^TMP("EASAP",$J,"APDT"))
"RTN","EASMTRP3",100,0)
 W !,"Print Date: ",$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","EASMTRP3",101,0)
 S TAB=IOM-10
"RTN","EASMTRP3",102,0)
 W ?TAB,"Page "_PAGE
"RTN","EASMTRP3",103,0)
 S PAGE=PAGE+1
"RTN","EASMTRP3",104,0)
 ;
"RTN","EASMTRP3",105,0)
 W !!?30,"Last",?38,"Anniversary",?55,"Appointment"
"RTN","EASMTRP3",106,0)
 W !?3,"Name",?30,"Four",?38,"Date",?55,"Time"
"RTN","EASMTRP3",107,0)
 S $P(LINE,"=",IOM)="" W !,LINE,!
"RTN","EASMTRP3",108,0)
 ;
"RTN","EASMTRP3",109,0)
 Q 0
"RTN","EASMTRP3",110,0)
 ;
"RTN","EASMTRP3",111,0)
PAUSE ;
"RTN","EASMTRP3",112,0)
 Q
"VER")
8.0^22
**INSTALL NAME**
DGBT*1.0*8
"BLD",5460,0)
DGBT*1.0*8^BENEFICIARY TRAVEL^0^3041202^y
"BLD",5460,4,0)
^9.64PA^^
"BLD",5460,"KRN",0)
^9.67PA^8989.52^19
"BLD",5460,"KRN",.4,0)
.4
"BLD",5460,"KRN",.401,0)
.401
"BLD",5460,"KRN",.402,0)
.402
"BLD",5460,"KRN",.403,0)
.403
"BLD",5460,"KRN",.5,0)
.5
"BLD",5460,"KRN",.84,0)
.84
"BLD",5460,"KRN",3.6,0)
3.6
"BLD",5460,"KRN",3.8,0)
3.8
"BLD",5460,"KRN",9.2,0)
9.2
"BLD",5460,"KRN",9.8,0)
9.8
"BLD",5460,"KRN",9.8,"NM",0)
^9.68A^2^2
"BLD",5460,"KRN",9.8,"NM",1,0)
DGBT2^^0^B17240934
"BLD",5460,"KRN",9.8,"NM",2,0)
DGBTE1^^0^B22431367
"BLD",5460,"KRN",9.8,"NM","B","DGBT2",1)

"BLD",5460,"KRN",9.8,"NM","B","DGBTE1",2)

"BLD",5460,"KRN",19,0)
19
"BLD",5460,"KRN",19.1,0)
19.1
"BLD",5460,"KRN",101,0)
101
"BLD",5460,"KRN",409.61,0)
409.61
"BLD",5460,"KRN",771,0)
771
"BLD",5460,"KRN",870,0)
870
"BLD",5460,"KRN",8989.51,0)
8989.51
"BLD",5460,"KRN",8989.52,0)
8989.52
"BLD",5460,"KRN",8994,0)
8994
"BLD",5460,"KRN","B",.4,.4)

"BLD",5460,"KRN","B",.401,.401)

"BLD",5460,"KRN","B",.402,.402)

"BLD",5460,"KRN","B",.403,.403)

"BLD",5460,"KRN","B",.5,.5)

"BLD",5460,"KRN","B",.84,.84)

"BLD",5460,"KRN","B",3.6,3.6)

"BLD",5460,"KRN","B",3.8,3.8)

"BLD",5460,"KRN","B",9.2,9.2)

"BLD",5460,"KRN","B",9.8,9.8)

"BLD",5460,"KRN","B",19,19)

"BLD",5460,"KRN","B",19.1,19.1)

"BLD",5460,"KRN","B",101,101)

"BLD",5460,"KRN","B",409.61,409.61)

"BLD",5460,"KRN","B",771,771)

"BLD",5460,"KRN","B",870,870)

"BLD",5460,"KRN","B",8989.51,8989.51)

"BLD",5460,"KRN","B",8989.52,8989.52)

"BLD",5460,"KRN","B",8994,8994)

"BLD",5460,"QUES",0)
^9.62^^
"BLD",5460,"REQB",0)
^9.611^1^1
"BLD",5460,"REQB",1,0)
DGBT*1.0*7^2
"BLD",5460,"REQB","B","DGBT*1.0*7",1)

"MBREQ")
0
"PKG",154,-1)
1^1
"PKG",154,0)
BENEFICIARY TRAVEL^DGBT^Beneficiary Travel
"PKG",154,20,0)
^9.402P^^
"PKG",154,22,0)
^9.49I^1^1
"PKG",154,22,1,0)
1.0^3030731^3020423^66481
"PKG",154,22,1,"PAH",1,0)
8^3041202^66481
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
2
"RTN","DGBT2")
0^1^B17240934
"RTN","DGBT2",1,0)
DGBT2 ;ALB/LM - BENEFICIARY TRAVEL SCREEN 2 ; 07/09/2004
"RTN","DGBT2",2,0)
 ;;1.0;Beneficiary Travel;**7,8**;September 25, 2001
"RTN","DGBT2",3,0)
 Q
"RTN","DGBT2",4,0)
SCREEN ;
"RTN","DGBT2",5,0)
 W @IOF
"RTN","DGBT2",6,0)
 W !?18,"Beneficiary Travel Claim Information <Screen 2>"
"RTN","DGBT2",7,0)
 D PID^VADPT6 W !!?8,"Name: ",VADM(1),?42,"PT ID: ",VA("PID"),?64,"DOB: ",$P(VADM(3),"^",2)
"RTN","DGBT2",8,0)
 D PAST,ADM
"RTN","DGBT2",9,0)
 W !!?2,"Visits For: " W $P(DGBTDTE,"@")
"RTN","DGBT2",10,0)
 S DGBTAS="" S:DGBTAD DGBTAS=$S($P(DGBTDD,".")=$P(DGBTDTI,"."):"D",$P(DGBTAD,".")=$P(DGBTDTI,"."):"A",$P(DGBTAD,".")&'$P(DGBTDD,"."):"I",$P(DGBTAD,".")&($P(DGBTDTI,".")'>$P(DGBTDD,".")):"II",1:"")
"RTN","DGBT2",11,0)
 I DGBTAS]"" W $S(DGBTAS="A":" * * * * ADMITTED ON THIS DATE * * * *",DGBTAS="D":" * * * * DISCHARGED ON THIS DATE * * * *",DGBTAS="I":" * * * * CURRENTLY AN INPATIENT * * * *",DGBTAS="II":" * * * INPATIENT STATUS * * *",1:"")
"RTN","DGBT2",12,0)
 I DGBTAS]"" W !!," Admitted On: " S Y=+DGBTAD X ^DD("DD") W Y K Y W:$D(^DPT(DFN,.1)) ?40,"Ward Location: ",^DPT(DFN,.1) I DGBTDD W ?40,"Discharge Date: " S Y=+DGBTDD X ^DD("DD") W Y K Y
"RTN","DGBT2",13,0)
 W !!,"Appointments: " W:'$D(DGBTCL) "NONE RECORDED FOR THIS DATE" I $D(DGBTCL) F I=0:0 S I=$O(DGBTCL(I)) Q:'I  D APPT
"RTN","DGBT2",14,0)
 N DGVAL,DGCBK,DGDT1
"RTN","DGBT2",15,0)
 ;
"RTN","DGBT2",16,0)
 S DGVAL("DFN")=DFN,DGVAL("BDT")=DGBTDTI\1,DGVAL("EDT")=DGVAL("BDT")_".9999"
"RTN","DGBT2",17,0)
 S DGCBK="I $P(SDOE0,U,8)=2 D WRTVIS^DGBT2(SDOE0) S DGDT1=+SDOE0",DGDT1=""
"RTN","DGBT2",18,0)
 D SCAN^DGSDU("PATIENT/DATE",.DGVAL,"",DGCBK,1,.DGQUERY)
"RTN","DGBT2",19,0)
EXIT ;
"RTN","DGBT2",20,0)
 K VAIP
"RTN","DGBT2",21,0)
 Q
"RTN","DGBT2",22,0)
 ;
"RTN","DGBT2",23,0)
WRTVIS(DGBTCSN) ;
"RTN","DGBT2",24,0)
 S:$S('DGDT1:0,1:+SDOE0'=DGDT1) SDSTOP=1
"RTN","DGBT2",25,0)
 I '$G(DGDT1) W !!?45,"Elig for Visit:",?65,"Appt Type:",!?45,"______________",?65,"_________",!!,"Clinic Stop: "
"RTN","DGBT2",26,0)
 I 'SDSTOP D
"RTN","DGBT2",27,0)
 .N DGBTCS
"RTN","DGBT2",28,0)
 .S:$P(DGBTCSN,U,3) DGBTCS=$P(DGBTCSN,U,3)
"RTN","DGBT2",29,0)
 .W ?14,$E($S($D(^DIC(40.7,+$P($G(DGBTCSN),U,3),0)):$P(^(0),U),1:"Unknown"),1,20),?45,$S($D(^DIC(8,+$P(DGBTCSN,U,13),0)):$E($P(^(0),U),1,18),1:"")
"RTN","DGBT2",30,0)
 .D STOP
"RTN","DGBT2",31,0)
 Q
"RTN","DGBT2",32,0)
 ;
"RTN","DGBT2",33,0)
ADM S DGBTAN=$S($D(^DPT(DFN,.105)):^(.105),1:"")
"RTN","DGBT2",34,0)
 I 'DGBTAN D NOW^%DTC S DGBTDI=+$O(^DGPM("ATID3",DFN,9999999.9999999-%)),DGBTDN=+$O(^(DGBTDI,0)),DGBTAN=$S($D(^DGPM(DGBTDN,0)):$P(^(0),"^",14),1:"")
"RTN","DGBT2",35,0)
 S DGBTAD=$S($D(^DGPM(+DGBTAN,0)):^(0),1:""),DGBTDD=$S($D(^DGPM(+$P(DGBTAD,"^",17),0)):^(0),1:"")
"RTN","DGBT2",36,0)
 K %,DGBTDI,DGBTDN Q
"RTN","DGBT2",37,0)
STOP I $D(DGBTCS) W ?65,$E($S($D(^SD(409.1,+$P(DGBTCSN,"^",10),0)):$P(^(0),"^"),1:"REGULAR"),1,15),!
"RTN","DGBT2",38,0)
 Q
"RTN","DGBT2",39,0)
APPT I $D(DGBTCL(101)) W ?14,DGBTCL(101) Q
"RTN","DGBT2",40,0)
 I $D(DGBTCL) D
"RTN","DGBT2",41,0)
 .W ?14,$P(DGBTCL(I),U)," ("_$$FMTE^DILIBF(I,"5U")_")"
"RTN","DGBT2",42,0)
 .S X=$P(DGBTCL(I),U,2)
"RTN","DGBT2",43,0)
 .W ?50,$S(X["NT":"NO ACTION TAKEN",X["N":"NO-SHOW",X["C":"CANCELLED",1:"")
"RTN","DGBT2",44,0)
 .W ?66,$P("C&P^10-10^SCHED.^UNSCHED.",U,+$P(DGBTCL(I),U,3))
"RTN","DGBT2",45,0)
 .W ?73,$S($D(^SD(409.1,+$P(DGBTCL(I),U,4),0)):$P(^SD(409.1,+$P(DGBTCL(I),U,4),0),U),1:"REGULAR"),!
"RTN","DGBT2",46,0)
 Q
"RTN","DGBT2",47,0)
PAST W:'$O(^DGBT(392,"AI",DFN,9999999.99999-DGBTDTI)) !!,"Past Claims: NONE RECORDED" I $O(^DGBT(392,"AI",DFN,9999999.99999-DGBTDTI)) W !!?14,"Date/Time",?35,"Account",?55,"Deductible",?69,"Amt. Paid",!!,"Past Claims: "
"RTN","DGBT2",48,0)
 S J=0 F DGBTP=9999999.99999-DGBTDTI:0 S DGBTP=$O(^DGBT(392,"AI",DFN,DGBTP)) Q:'DGBTP  S DGBTPDT=^DGBT(392,"AI",DFN,DGBTP),VADAT("W")=DGBTPDT D ^VADATE W ?14,VADATE("E") D ACCT S J=J+1 Q:J=5
"RTN","DGBT2",49,0)
 Q
"RTN","DGBT2",50,0)
ACCT W ?35,$S($P(^DGBT(392,DGBTPDT,0),"^",6):$E($P(^DGBT(392.3,$P(^(0),"^",6),0),"^"),1,15),1:"") D AMT
"RTN","DGBT2",51,0)
 Q
"RTN","DGBT2",52,0)
AMT N X3 ;Fresh copy for COMMA^%DTC. Leftovers causing error.
"RTN","DGBT2",53,0)
 S X=$P(^DGBT(392,DGBTPDT,0),"^",9),X2="2$" D COMMA^%DTC W ?54,X S X=$P(^(0),"^",10) D COMMA^%DTC W ?67,X,! K VADAT,VADATE,X,X2
"RTN","DGBT2",54,0)
 Q
"RTN","DGBTE1")
0^2^B22431367
"RTN","DGBTE1",1,0)
DGBTE1 ;ALB/SCK - BENEFICIARY TRAVEL FIND OLD CLAIM DATES  ; 11/05/2004
"RTN","DGBTE1",2,0)
 ;;1.0;Beneficiary Travel;**8**;September 25, 2001
"RTN","DGBTE1",3,0)
DATE ;  get date for claim, either new or past date
"RTN","DGBTE1",4,0)
 K ^TMP("DGBT",$J),^TMP("DGBTARA",$J),DIR
"RTN","DGBTE1",5,0)
 I 'DGBTNEW S DIR("A",2)="Enter a 'P' to display Past CLAIM dates for editing."
"RTN","DGBTE1",6,0)
 S DIR("A",3)="Time is required when adding a new CLAIM.",DIR("A",4)="",DIR("A",1)="",DIR("A")="Select TRAVEL CLAIM DATE/TIME",DIR("?")="^D HELP^DGBTE1A"
"RTN","DGBTE1",7,0)
 S DIR(0)="F",DIR("B")="NOW" D ^DIR K DIR G ERR1:$D(DIRUT)
"RTN","DGBTE1",8,0)
 S CHZFLG=0,%DT="EXR",DTSUB=$S(Y="N":"NOW",Y="P":"OLD",Y="p":"OLD",1:"OTHR")_"^DGBTE1A" D @DTSUB K DTSUB
"RTN","DGBTE1",9,0)
 G ERR1:$D(DTOUT),DATE:Y1<0 S DGBTA=Y1 G SET:CHZFLG
"RTN","DGBTE1",10,0)
DATE1 ;  for past claims, set DGBTDT to inverse date of claim date
"RTN","DGBTE1",11,0)
 I $D(^DGBT(392,"C",DFN)) D
"RTN","DGBTE1",12,0)
 . S DGBTC=0,DGBTDT=9999999-$E(DGBTA,1,7) ; set past claims counter=0
"RTN","DGBTE1",13,0)
 . ; for latest date (topmost) search for past claims
"RTN","DGBTE1",14,0)
 . F I=DGBTDT:0 S I=$O(^DGBT(392,"AI",DFN,I)) Q:'I!(I>(DGBTDT_.99999))  S DGBTC=DGBTC+1,DGBT(DGBTC)=9999999.99999-I
"RTN","DGBTE1",15,0)
 I '$D(DGBT) G LOCK
"RTN","DGBTE1",16,0)
 W !!,"There are other claims on this date.",!,"Select by number to edit or <RETURN> to add a new CLAIM.",!
"RTN","DGBTE1",17,0)
 ; convert inverse claim date to external format through VADATE conversion routine
"RTN","DGBTE1",18,0)
 F I=0:0 S I=$O(DGBT(I)) Q:'I  S VADAT("W")=DGBT(I) D ^VADATE W !?5,I,".",?10,VADATE("E")
"RTN","DGBTE1",19,0)
 K DIR S DIR("A")="Select 1"_$S(DGBTC=1:"",1:"-"_DGBTC)_", or <RETURN> to add a new claim: ",DIR(0)="NOA^1:"_DGBTC,DIR("?")="Select, by number, one of the displayed claim dates: "
"RTN","DGBTE1",20,0)
 D ^DIR K DIR G QUIT^DGBTEND:$D(DTOUT)!($D(DUOUT))
"RTN","DGBTE1",21,0)
 G LOCK:Y="" G DATE:'$D(DGBT(Y))
"RTN","DGBTE1",22,0)
 S DGBTA=DGBT(Y) G SET
"RTN","DGBTE1",23,0)
LOCK ;
"RTN","DGBTE1",24,0)
 L ^DGBT(392,DGBTA):1
"RTN","DGBTE1",25,0)
 I '$T!$D(^DGBT(392,DGBTA)) L  S DGBTA=DGBTA+.00001 G LOCK
"RTN","DGBTE1",26,0)
 S VADAT("W")=DGBTA D ^VADATE W VADATE("E")
"RTN","DGBTE1",27,0)
ASKADD ;
"RTN","DGBTE1",28,0)
 W !!,"Are you sure you want to add a new claim"
"RTN","DGBTE1",29,0)
 S %=1 D YN^DICN G PATIENT^DGBTE:%<0!(%=2)
"RTN","DGBTE1",30,0)
 I '% W !!,"Enter 'YES' to add a new claim, or 'NO' not to add the claim." G ASKADD
"RTN","DGBTE1",31,0)
 K DD,DO
"RTN","DGBTE1",32,0)
 ; create new file entry, stuff patient DFN into name field(pointer)
"RTN","DGBTE1",33,0)
 S (X,DINUM)=DGBTA,DIC="^DGBT(392,",DIC(0)="L",DIC("DR")="2////"_DFN
"RTN","DGBTE1",34,0)
 D FILE^DICN K DIC L
"RTN","DGBTE1",35,0)
 ; go back to patient if no file entry
"RTN","DGBTE1",36,0)
 G:Y'>0 PATIENT^DGBTE
"RTN","DGBTE1",37,0)
SET ; call inhouse generic date routine
"RTN","DGBTE1",38,0)
 S (DA,DGBTDT,VADAT("W"))=DGBTA D ^VADATE
"RTN","DGBTE1",39,0)
 ; get internal and external formats of converted inverse dates
"RTN","DGBTE1",40,0)
 S DGBTDTI=VADATE("I"),DGBTDTE=VADATE("E") K VADAT,VADATE,DIC,Y
"RTN","DGBTE1",41,0)
 S DGBTDIVN=$P(^DG(40.8,DGBTDIVI,0),"^",7)
"RTN","DGBTE1",42,0)
STUFF ;  stuff departure with address data from patient file, dest from institution file
"RTN","DGBTE1",43,0)
 S:'$D(^DGBT(392,DGBTDT,"D")) ^DGBT(392,DGBTDT,"D")=VAPA(1)_"^"_VAPA(2)_"^"_VAPA(3)_"^"_VAPA(4)_"^"_$S(VAPA(5)]"":+VAPA(5),1:"")_"^"_$P(VAPA(11),U,1)
"RTN","DGBTE1",44,0)
 I '$D(^DGBT(392,DGBTDT,"T")) D
"RTN","DGBTE1",45,0)
 . S X=$S($D(^DIC(4,DGBTDIVN,1)):^(1),1:"")
"RTN","DGBTE1",46,0)
 . S ^DGBT(392,DGBTDT,"T")=($P(^DG(40.8,DGBTDIVI,0),U)_"^"_$P(X,U)_"^"_$P(X,U,2)_"^"_$P(X,U,3)_"^"_$P(^DIC(4,DGBTDIVN,0),U,2)_"^"_$P(X,U,4))
"RTN","DGBTE1",47,0)
CHKFILES ; section removed, dependents picked up below in MEANS ; abr 10/94
"RTN","DGBTE1",48,0)
MEANS ;  find corres. means test entry, gets MT income, status, no. of dependents
"RTN","DGBTE1",49,0)
 ;DGBTMTS= MT Status;  DGBTCSC= claim Service Connected indicator & %;  DGBTELG=Eligibility status
"RTN","DGBTE1",50,0)
 N X,X2,X3,Y,DGBTIFL
"RTN","DGBTE1",51,0)
 S X=$$LST^DGMTU(DFN,DGBTA),DGBTMTS=$P(X,U,4)_U_$P(X,U,3) ; returns corres. MT info,X=IEN of last MT
"RTN","DGBTE1",52,0)
 ; get income, # dependents
"RTN","DGBTE1",53,0)
 S Y=$$INCOME^VAFMON(DFN,DGBTA,1)
"RTN","DGBTE1",54,0)
 S X=$P(Y,U),DGBTIFL=$P(Y,U,2) ; returns income & source.
"RTN","DGBTE1",55,0)
 I X?1N.E!(X<0) D
"RTN","DGBTE1",56,0)
 .I X<0 S X=0
"RTN","DGBTE1",57,0)
 .S X2="0$",X3=8 D COMMA^%DTC
"RTN","DGBTE1",58,0)
 S DGBTINC=X_U_$G(DGBTIFL) K X,X2
"RTN","DGBTE1",59,0)
 S DGBTDEP=$$DEP^VAFMON(DFN,DGBTA) ; finds depedents Vet, Spouse, Children
"RTN","DGBTE1",60,0)
 ;
"RTN","DGBTE1",61,0)
PREV ; if past claim get SC%, elig.
"RTN","DGBTE1",62,0)
 I CHZFLG S X=^DGBT(392,DGBTA,0),DGBTELG=$P(X,U,3),DGBTCSC=$P(X,U,4) D
"RTN","DGBTE1",63,0)
 . S:DGBTCSC DGBTCSC=1_U_DGBTCSC S:'DGBTCSC DGBTCSC=0
"RTN","DGBTE1",64,0)
 . S:DGBTELG DGBTELG=DGBTELG_U_$P(^DIC(8,DGBTELG,0),U)
"RTN","DGBTE1",65,0)
CERT ;  get last BT certification,  get date, then get eligibility
"RTN","DGBTE1",66,0)
 I $D(^DGBT(392.2,"C",DFN)) D
"RTN","DGBTE1",67,0)
 .;cd=cert date in inverse then external format, ce= eligibility, ca* = amt certified
"RTN","DGBTE1",68,0)
 . S DGBTCD=$O(^DGBT(392.2,"C",DFN,0)),DGBTCE=$P(^DGBT(392.2,DGBTCD,0),"^",3)
"RTN","DGBTE1",69,0)
 . S DGBTCA=$P(^DGBT(392.2,DGBTCD,0),"^",4),Y=9999999-$P(DGBTCD,".")
"RTN","DGBTE1",70,0)
 . X ^DD("DD") ; date conversion, y=cert date (internal)
"RTN","DGBTE1",71,0)
 . S DGBTCD=Y,X=DGBTCA,X2="0$",X3=8 K Y D COMMA^%DTC S DGBTCA=X K X,X2,X3
"RTN","DGBTE1",72,0)
APPTS ;  search patient file for appointments through claim date (DTI+1),  adddates to array DGBTCL 
"RTN","DGBTE1",73,0)
 N DGARRAY,CLIEN,APTDT S DGARRAY("FLDS")="2;3;10;18"
"RTN","DGBTE1",74,0)
 S DGARRAY(4)=DFN,I=$$SDAPI^SDAMA301(.DGARRAY)
"RTN","DGBTE1",75,0)
 I $D(^TMP($J,"SDAMA301",101)) S I1=1,DGBTCL(101)="** Appointment Database Unavailable **"
"RTN","DGBTE1",76,0)
 I '$D(^TMP($J,"SDAMA301",101)) D
"RTN","DGBTE1",77,0)
 .S CLIEN="" F  S CLIEN=$O(^TMP($J,"SDAMA301",DFN,CLIEN)) Q:'CLIEN  D
"RTN","DGBTE1",78,0)
 ..S APTDT=DGBTDTI\1 F  S APTDT=$O(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT)) Q:'APTDT!(APTDT>(DGBTDTI+1))  D
"RTN","DGBTE1",79,0)
 ...S DGBTCL(APTDT)=$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,2),";",2)_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,3),";")_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,18),";")_U_$P($P(^TMP($J,"SDAMA301",DFN,CLIEN,APTDT),U,10),";")
"RTN","DGBTE1",80,0)
 K ^TMP($J,"SDAMA301"),DGARRAY,CLIEN,APTDT
"RTN","DGBTE1",81,0)
EXIT ; exit routine
"RTN","DGBTE1",82,0)
 Q
"RTN","DGBTE1",83,0)
ERR1 ;  error condition
"RTN","DGBTE1",84,0)
 G QUIT^DGBTEND Q
"VER")
8.0^22
**END**
**END**
