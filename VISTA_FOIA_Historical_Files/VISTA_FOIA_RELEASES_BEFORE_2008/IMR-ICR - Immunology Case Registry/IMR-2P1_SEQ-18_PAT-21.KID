Released IMR*2.1*21 SEQ #18
Extracted from mail message
**KIDS**:IMR*2.1*21^

**INSTALL NAME**
IMR*2.1*21
"BLD",6211,0)
IMR*2.1*21^ICR - IMMUNOLOGY CASE REGISTRY^0^3050720^y
"BLD",6211,1,0)
^^3^3^3050602^^
"BLD",6211,1,1,0)
This patch completely deletes the Immunology Case Registry v2.1 package, 
"BLD",6211,1,2,0)
which was replaced by the new version of the registry added to the 
"BLD",6211,1,3,0)
Clinical Case Registries package.
"BLD",6211,4,0)
^9.64PA^^
"BLD",6211,"INID")
^y
"BLD",6211,"INIT")
POS^IMRP021
"BLD",6211,"KRN",0)
^9.67PA^8989.52^19
"BLD",6211,"KRN",.4,0)
.4
"BLD",6211,"KRN",.4,"NM",0)
^9.68A^1^1
"BLD",6211,"KRN",.4,"NM",1,0)
IMRH PRINT LAB LINKS    FILE #158.9^158.9^1^
"BLD",6211,"KRN",.4,"NM","B","IMRH PRINT LAB LINKS    FILE #158.9",1)

"BLD",6211,"KRN",.401,0)
.401
"BLD",6211,"KRN",.402,0)
.402
"BLD",6211,"KRN",.402,"NM",0)
^9.68A^8^8
"BLD",6211,"KRN",.402,"NM",1,0)
IMR CDC1    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",2,0)
IMR CDC2    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",3,0)
IMR CDC3    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",4,0)
IMR CDC4    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",5,0)
IMR CDC5    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",6,0)
IMR CDC6    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",7,0)
IMR CDC7    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM",8,0)
IMR EDIT1    FILE #158^158^1^
"BLD",6211,"KRN",.402,"NM","B","IMR CDC1    FILE #158",1)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC2    FILE #158",2)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC3    FILE #158",3)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC4    FILE #158",4)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC5    FILE #158",5)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC6    FILE #158",6)

"BLD",6211,"KRN",.402,"NM","B","IMR CDC7    FILE #158",7)

"BLD",6211,"KRN",.402,"NM","B","IMR EDIT1    FILE #158",8)

"BLD",6211,"KRN",.403,0)
.403
"BLD",6211,"KRN",.5,0)
.5
"BLD",6211,"KRN",.5,"NM",0)
^9.68A^^
"BLD",6211,"KRN",.84,0)
.84
"BLD",6211,"KRN",3.6,0)
3.6
"BLD",6211,"KRN",3.8,0)
3.8
"BLD",6211,"KRN",3.8,"NM",0)
^9.68A^^
"BLD",6211,"KRN",9.2,0)
9.2
"BLD",6211,"KRN",9.8,0)
9.8
"BLD",6211,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",6211,"KRN",9.8,"NM",1,0)
IMRVPP^^0^B44836103
"BLD",6211,"KRN",9.8,"NM",2,0)
IMRVPPE^^0^B13564489
"BLD",6211,"KRN",9.8,"NM",3,0)
IMRVPPU^^0^B12623498
"BLD",6211,"KRN",9.8,"NM","B","IMRVPP",1)

"BLD",6211,"KRN",9.8,"NM","B","IMRVPPE",2)

"BLD",6211,"KRN",9.8,"NM","B","IMRVPPU",3)

"BLD",6211,"KRN",19,0)
19
"BLD",6211,"KRN",19,"NM",0)
^9.68A^53^53
"BLD",6211,"KRN",19,"NM",1,0)
IMR ACCESS LOG^^1^
"BLD",6211,"KRN",19,"NM",2,0)
IMR ARV REIMBURSEMENT^^1^
"BLD",6211,"KRN",19,"NM",3,0)
IMR BLANK CDC FORM^^1^
"BLD",6211,"KRN",19,"NM",4,0)
IMR CATEGORY BREAKDOWN^^1^
"BLD",6211,"KRN",19,"NM",5,0)
IMR CDC ENTER/EDIT^^1^
"BLD",6211,"KRN",19,"NM",6,0)
IMR DECODE SSN^^1^
"BLD",6211,"KRN",19,"NM",7,0)
IMR DELETE ENTRY^^1^
"BLD",6211,"KRN",19,"NM",8,0)
IMR ENTER/EDIT DATA^^1^
"BLD",6211,"KRN",19,"NM",9,0)
IMR FOLLOW UP LIST^^1^
"BLD",6211,"KRN",19,"NM",10,0)
IMR INPAT LIST^^1^
"BLD",6211,"KRN",19,"NM",11,0)
IMR INQUIRY NATIONAL^^1^
"BLD",6211,"KRN",19,"NM",12,0)
IMR IP/OP ACTIVITY LIST^^1^
"BLD",6211,"KRN",19,"NM",13,0)
IMR KEYS^^1^
"BLD",6211,"KRN",19,"NM",14,0)
IMR LAB TEST ENTRY^^1^
"BLD",6211,"KRN",19,"NM",15,0)
IMR LAB UTILIZATION LIST^^1^
"BLD",6211,"KRN",19,"NM",16,0)
IMR LAB UTILIZATION LIST ^^1^
"BLD",6211,"KRN",19,"NM",17,0)
IMR LIST LOCAL LAB LINKS^^1^
"BLD",6211,"KRN",19,"NM",18,0)
IMR LOCAL UTILIZATION^^1^
"BLD",6211,"KRN",19,"NM",19,0)
IMR LOCAL UTILIZATION SUMMARY^^1^
"BLD",6211,"KRN",19,"NM",20,0)
IMR MENU (GENERAL)^^1^
"BLD",6211,"KRN",19,"NM",21,0)
IMR MENU (MANAGEMENT)^^1^
"BLD",6211,"KRN",19,"NM",22,0)
IMR MENU (SITE SETUP)^^1^
"BLD",6211,"KRN",19,"NM",23,0)
IMR NAT ARV DRUGS^^1^
"BLD",6211,"KRN",19,"NM",24,0)
IMR NAT DEMOG INQ^^1^
"BLD",6211,"KRN",19,"NM",25,0)
IMR NAT PAT INQ^^1^
"BLD",6211,"KRN",19,"NM",26,0)
IMR NAT UTIL^^1^
"BLD",6211,"KRN",19,"NM",27,0)
IMR PAT CLIN HIST^^1^
"BLD",6211,"KRN",19,"NM",28,0)
IMR PATIENT INQUIRY^^1^
"BLD",6211,"KRN",19,"NM",29,0)
IMR PATIENT LIST^^1^
"BLD",6211,"KRN",19,"NM",30,0)
IMR PHARM DRUG ENTER/EDIT^^1^
"BLD",6211,"KRN",19,"NM",31,0)
IMR PHARM RX MENU^^1^
"BLD",6211,"KRN",19,"NM",32,0)
IMR PHARM UTILIZATION LIST^^1^
"BLD",6211,"KRN",19,"NM",33,0)
IMR PNEUMOCOCCAL RPT^^1^
"BLD",6211,"KRN",19,"NM",34,0)
IMR PRINT CDC FORM^^1^
"BLD",6211,"KRN",19,"NM",35,0)
IMR PRINT OPTS^^1^
"BLD",6211,"KRN",19,"NM",36,0)
IMR QUE DATA COLLECT^^1^
"BLD",6211,"KRN",19,"NM",37,0)
IMR QUEUED INPAT LIST^^1^
"BLD",6211,"KRN",19,"NM",38,0)
IMR RADIOLOGY UTILIZATION^^1^
"BLD",6211,"KRN",19,"NM",39,0)
IMR REGISTRY DATA^^1^
"BLD",6211,"KRN",19,"NM",40,0)
IMR SEARCH TEMPLATE^^1^
"BLD",6211,"KRN",19,"NM",41,0)
IMR SHOW CODE^^1^
"BLD",6211,"KRN",19,"NM",42,0)
IMR SPECFC IP/OP ACTIVITY^^1^
"BLD",6211,"KRN",19,"NM",43,0)
IMR SPECFC IP/OP ACTIVITY LIST^^1^
"BLD",6211,"KRN",19,"NM",44,0)
IMR SPECFC LAB LIST^^1^
"BLD",6211,"KRN",19,"NM",45,0)
IMR SPECFC RX LIST^^1^
"BLD",6211,"KRN",19,"NM",46,0)
IMR SPF ENTER/EDIT^^1^
"BLD",6211,"KRN",19,"NM",47,0)
IMR TEMPLATE DELETE^^1^
"BLD",6211,"KRN",19,"NM",48,0)
IMR TEMPLATE LIST^^1^
"BLD",6211,"KRN",19,"NM",49,0)
IMR VIRAL CD4 RANGE^^1^
"BLD",6211,"KRN",19,"NM",50,0)
IMR VIRAL CD4TEST LIST^^1^
"BLD",6211,"KRN",19,"NM",51,0)
IMR VIRAL TESTS LIST^^1^
"BLD",6211,"KRN",19,"NM",52,0)
IMR VIRAL TESTS MENU^^1^
"BLD",6211,"KRN",19,"NM",53,0)
IMR OUTPATIENT SURVEY^^1^
"BLD",6211,"KRN",19,"NM","B","IMR ACCESS LOG",1)

"BLD",6211,"KRN",19,"NM","B","IMR ARV REIMBURSEMENT",2)

"BLD",6211,"KRN",19,"NM","B","IMR BLANK CDC FORM",3)

"BLD",6211,"KRN",19,"NM","B","IMR CATEGORY BREAKDOWN",4)

"BLD",6211,"KRN",19,"NM","B","IMR CDC ENTER/EDIT",5)

"BLD",6211,"KRN",19,"NM","B","IMR DECODE SSN",6)

"BLD",6211,"KRN",19,"NM","B","IMR DELETE ENTRY",7)

"BLD",6211,"KRN",19,"NM","B","IMR ENTER/EDIT DATA",8)

"BLD",6211,"KRN",19,"NM","B","IMR FOLLOW UP LIST",9)

"BLD",6211,"KRN",19,"NM","B","IMR INPAT LIST",10)

"BLD",6211,"KRN",19,"NM","B","IMR INQUIRY NATIONAL",11)

"BLD",6211,"KRN",19,"NM","B","IMR IP/OP ACTIVITY LIST",12)

"BLD",6211,"KRN",19,"NM","B","IMR KEYS",13)

"BLD",6211,"KRN",19,"NM","B","IMR LAB TEST ENTRY",14)

"BLD",6211,"KRN",19,"NM","B","IMR LAB UTILIZATION LIST",15)

"BLD",6211,"KRN",19,"NM","B","IMR LAB UTILIZATION LIST ",16)

"BLD",6211,"KRN",19,"NM","B","IMR LIST LOCAL LAB LINKS",17)

"BLD",6211,"KRN",19,"NM","B","IMR LOCAL UTILIZATION",18)

"BLD",6211,"KRN",19,"NM","B","IMR LOCAL UTILIZATION SUMMARY",19)

"BLD",6211,"KRN",19,"NM","B","IMR MENU (GENERAL)",20)

"BLD",6211,"KRN",19,"NM","B","IMR MENU (MANAGEMENT)",21)

"BLD",6211,"KRN",19,"NM","B","IMR MENU (SITE SETUP)",22)

"BLD",6211,"KRN",19,"NM","B","IMR NAT ARV DRUGS",23)

"BLD",6211,"KRN",19,"NM","B","IMR NAT DEMOG INQ",24)

"BLD",6211,"KRN",19,"NM","B","IMR NAT PAT INQ",25)

"BLD",6211,"KRN",19,"NM","B","IMR NAT UTIL",26)

"BLD",6211,"KRN",19,"NM","B","IMR OUTPATIENT SURVEY",53)

"BLD",6211,"KRN",19,"NM","B","IMR PAT CLIN HIST",27)

"BLD",6211,"KRN",19,"NM","B","IMR PATIENT INQUIRY",28)

"BLD",6211,"KRN",19,"NM","B","IMR PATIENT LIST",29)

"BLD",6211,"KRN",19,"NM","B","IMR PHARM DRUG ENTER/EDIT",30)

"BLD",6211,"KRN",19,"NM","B","IMR PHARM RX MENU",31)

"BLD",6211,"KRN",19,"NM","B","IMR PHARM UTILIZATION LIST",32)

"BLD",6211,"KRN",19,"NM","B","IMR PNEUMOCOCCAL RPT",33)

"BLD",6211,"KRN",19,"NM","B","IMR PRINT CDC FORM",34)

"BLD",6211,"KRN",19,"NM","B","IMR PRINT OPTS",35)

"BLD",6211,"KRN",19,"NM","B","IMR QUE DATA COLLECT",36)

"BLD",6211,"KRN",19,"NM","B","IMR QUEUED INPAT LIST",37)

"BLD",6211,"KRN",19,"NM","B","IMR RADIOLOGY UTILIZATION",38)

"BLD",6211,"KRN",19,"NM","B","IMR REGISTRY DATA",39)

"BLD",6211,"KRN",19,"NM","B","IMR SEARCH TEMPLATE",40)

"BLD",6211,"KRN",19,"NM","B","IMR SHOW CODE",41)

"BLD",6211,"KRN",19,"NM","B","IMR SPECFC IP/OP ACTIVITY",42)

"BLD",6211,"KRN",19,"NM","B","IMR SPECFC IP/OP ACTIVITY LIST",43)

"BLD",6211,"KRN",19,"NM","B","IMR SPECFC LAB LIST",44)

"BLD",6211,"KRN",19,"NM","B","IMR SPECFC RX LIST",45)

"BLD",6211,"KRN",19,"NM","B","IMR SPF ENTER/EDIT",46)

"BLD",6211,"KRN",19,"NM","B","IMR TEMPLATE DELETE",47)

"BLD",6211,"KRN",19,"NM","B","IMR TEMPLATE LIST",48)

"BLD",6211,"KRN",19,"NM","B","IMR VIRAL CD4 RANGE",49)

"BLD",6211,"KRN",19,"NM","B","IMR VIRAL CD4TEST LIST",50)

"BLD",6211,"KRN",19,"NM","B","IMR VIRAL TESTS LIST",51)

"BLD",6211,"KRN",19,"NM","B","IMR VIRAL TESTS MENU",52)

"BLD",6211,"KRN",19.1,0)
19.1
"BLD",6211,"KRN",19.1,"NM",0)
^9.68A^2^2
"BLD",6211,"KRN",19.1,"NM",1,0)
IMRA^^1^
"BLD",6211,"KRN",19.1,"NM",2,0)
IMRMGR^^1^
"BLD",6211,"KRN",19.1,"NM","B","IMRA",1)

"BLD",6211,"KRN",19.1,"NM","B","IMRMGR",2)

"BLD",6211,"KRN",101,0)
101
"BLD",6211,"KRN",409.61,0)
409.61
"BLD",6211,"KRN",771,0)
771
"BLD",6211,"KRN",870,0)
870
"BLD",6211,"KRN",8989.51,0)
8989.51
"BLD",6211,"KRN",8989.52,0)
8989.52
"BLD",6211,"KRN",8994,0)
8994
"BLD",6211,"KRN","B",.4,.4)

"BLD",6211,"KRN","B",.401,.401)

"BLD",6211,"KRN","B",.402,.402)

"BLD",6211,"KRN","B",.403,.403)

"BLD",6211,"KRN","B",.5,.5)

"BLD",6211,"KRN","B",.84,.84)

"BLD",6211,"KRN","B",3.6,3.6)

"BLD",6211,"KRN","B",3.8,3.8)

"BLD",6211,"KRN","B",9.2,9.2)

"BLD",6211,"KRN","B",9.8,9.8)

"BLD",6211,"KRN","B",19,19)

"BLD",6211,"KRN","B",19.1,19.1)

"BLD",6211,"KRN","B",101,101)

"BLD",6211,"KRN","B",409.61,409.61)

"BLD",6211,"KRN","B",771,771)

"BLD",6211,"KRN","B",870,870)

"BLD",6211,"KRN","B",8989.51,8989.51)

"BLD",6211,"KRN","B",8989.52,8989.52)

"BLD",6211,"KRN","B",8994,8994)

"BLD",6211,"PRE")
IMRP021
"BLD",6211,"QUES",0)
^9.62^^
"BLD",6211,"REQB",0)
^9.611^^
"INIT")
POS^IMRP021
"KRN",.4,2752,-1)
1^1
"KRN",.4,2752,0)
IMRH PRINT LAB LINKS    FILE #158.9
"KRN",.402,2746,-1)
1^1
"KRN",.402,2746,0)
IMR CDC1    FILE #158
"KRN",.402,2747,-1)
1^2
"KRN",.402,2747,0)
IMR CDC2    FILE #158
"KRN",.402,2748,-1)
1^3
"KRN",.402,2748,0)
IMR CDC3    FILE #158
"KRN",.402,2749,-1)
1^4
"KRN",.402,2749,0)
IMR CDC4    FILE #158
"KRN",.402,2750,-1)
1^5
"KRN",.402,2750,0)
IMR CDC5    FILE #158
"KRN",.402,2751,-1)
1^6
"KRN",.402,2751,0)
IMR CDC6    FILE #158
"KRN",.402,2752,-1)
1^7
"KRN",.402,2752,0)
IMR CDC7    FILE #158
"KRN",.402,2753,-1)
1^8
"KRN",.402,2753,0)
IMR EDIT1    FILE #158
"KRN",19,12759,-1)
1^1
"KRN",19,12759,0)
IMR ACCESS LOG
"KRN",19,12760,-1)
1^2
"KRN",19,12760,0)
IMR ARV REIMBURSEMENT
"KRN",19,12761,-1)
1^3
"KRN",19,12761,0)
IMR BLANK CDC FORM
"KRN",19,12762,-1)
1^4
"KRN",19,12762,0)
IMR CATEGORY BREAKDOWN
"KRN",19,12763,-1)
1^5
"KRN",19,12763,0)
IMR CDC ENTER/EDIT
"KRN",19,12764,-1)
1^6
"KRN",19,12764,0)
IMR DECODE SSN
"KRN",19,12765,-1)
1^7
"KRN",19,12765,0)
IMR DELETE ENTRY
"KRN",19,12766,-1)
1^8
"KRN",19,12766,0)
IMR ENTER/EDIT DATA
"KRN",19,12767,-1)
1^9
"KRN",19,12767,0)
IMR FOLLOW UP LIST
"KRN",19,12768,-1)
1^10
"KRN",19,12768,0)
IMR INPAT LIST
"KRN",19,12769,-1)
1^11
"KRN",19,12769,0)
IMR INQUIRY NATIONAL
"KRN",19,12770,-1)
1^12
"KRN",19,12770,0)
IMR IP/OP ACTIVITY LIST
"KRN",19,12771,-1)
1^13
"KRN",19,12771,0)
IMR KEYS
"KRN",19,12772,-1)
1^14
"KRN",19,12772,0)
IMR LAB TEST ENTRY
"KRN",19,12773,-1)
1^15
"KRN",19,12773,0)
IMR LAB UTILIZATION LIST
"KRN",19,12774,-1)
1^16
"KRN",19,12774,0)
IMR LAB UTILIZATION LIST 
"KRN",19,12775,-1)
1^17
"KRN",19,12775,0)
IMR LIST LOCAL LAB LINKS
"KRN",19,12776,-1)
1^18
"KRN",19,12776,0)
IMR LOCAL UTILIZATION
"KRN",19,12777,-1)
1^19
"KRN",19,12777,0)
IMR LOCAL UTILIZATION SUMMARY
"KRN",19,12778,-1)
1^20
"KRN",19,12778,0)
IMR MENU (GENERAL)
"KRN",19,12779,-1)
1^21
"KRN",19,12779,0)
IMR MENU (MANAGEMENT)
"KRN",19,12780,-1)
1^22
"KRN",19,12780,0)
IMR MENU (SITE SETUP)
"KRN",19,12781,-1)
1^23
"KRN",19,12781,0)
IMR NAT ARV DRUGS
"KRN",19,12782,-1)
1^24
"KRN",19,12782,0)
IMR NAT DEMOG INQ
"KRN",19,12783,-1)
1^25
"KRN",19,12783,0)
IMR NAT PAT INQ
"KRN",19,12784,-1)
1^26
"KRN",19,12784,0)
IMR NAT UTIL
"KRN",19,12785,-1)
1^27
"KRN",19,12785,0)
IMR PAT CLIN HIST
"KRN",19,12786,-1)
1^28
"KRN",19,12786,0)
IMR PATIENT INQUIRY
"KRN",19,12787,-1)
1^29
"KRN",19,12787,0)
IMR PATIENT LIST
"KRN",19,12788,-1)
1^30
"KRN",19,12788,0)
IMR PHARM DRUG ENTER/EDIT
"KRN",19,12789,-1)
1^31
"KRN",19,12789,0)
IMR PHARM RX MENU
"KRN",19,12790,-1)
1^32
"KRN",19,12790,0)
IMR PHARM UTILIZATION LIST
"KRN",19,12791,-1)
1^33
"KRN",19,12791,0)
IMR PNEUMOCOCCAL RPT
"KRN",19,12792,-1)
1^34
"KRN",19,12792,0)
IMR PRINT CDC FORM
"KRN",19,12793,-1)
1^35
"KRN",19,12793,0)
IMR PRINT OPTS
"KRN",19,12794,-1)
1^36
"KRN",19,12794,0)
IMR QUE DATA COLLECT
"KRN",19,12795,-1)
1^37
"KRN",19,12795,0)
IMR QUEUED INPAT LIST
"KRN",19,12796,-1)
1^38
"KRN",19,12796,0)
IMR RADIOLOGY UTILIZATION
"KRN",19,12797,-1)
1^39
"KRN",19,12797,0)
IMR REGISTRY DATA
"KRN",19,12798,-1)
1^40
"KRN",19,12798,0)
IMR SEARCH TEMPLATE
"KRN",19,12799,-1)
1^41
"KRN",19,12799,0)
IMR SHOW CODE
"KRN",19,12800,-1)
1^42
"KRN",19,12800,0)
IMR SPECFC IP/OP ACTIVITY
"KRN",19,12801,-1)
1^43
"KRN",19,12801,0)
IMR SPECFC IP/OP ACTIVITY LIST
"KRN",19,12802,-1)
1^44
"KRN",19,12802,0)
IMR SPECFC LAB LIST
"KRN",19,12803,-1)
1^45
"KRN",19,12803,0)
IMR SPECFC RX LIST
"KRN",19,12804,-1)
1^46
"KRN",19,12804,0)
IMR SPF ENTER/EDIT
"KRN",19,12805,-1)
1^47
"KRN",19,12805,0)
IMR TEMPLATE DELETE
"KRN",19,12806,-1)
1^48
"KRN",19,12806,0)
IMR TEMPLATE LIST
"KRN",19,12807,-1)
1^49
"KRN",19,12807,0)
IMR VIRAL CD4 RANGE
"KRN",19,12808,-1)
1^50
"KRN",19,12808,0)
IMR VIRAL CD4TEST LIST
"KRN",19,12809,-1)
1^51
"KRN",19,12809,0)
IMR VIRAL TESTS LIST
"KRN",19,12810,-1)
1^52
"KRN",19,12810,0)
IMR VIRAL TESTS MENU
"KRN",19,12811,-1)
1^53
"KRN",19,12811,0)
IMR OUTPATIENT SURVEY
"KRN",19.1,492,-1)
1^1
"KRN",19.1,492,0)
IMRA
"KRN",19.1,493,-1)
1^2
"KRN",19.1,493,0)
IMRMGR
"MBREQ")
0
"ORD",3,19.1)
19.1;3;1;;KEY^XPDTA1;;;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",5,.4)
.4;5;;;EDEOUT^DIFROMSO(.4,DA,"",XPDA);FPRE^DIFROMSI(.4,"",XPDA);EPRE^DIFROMSI(.4,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.4,DA,"",XPDA);DEL^DIFROMSK(.4,"",%)
"ORD",5,.4,0)
PRINT TEMPLATE
"ORD",7,.402)
.402;7;;;EDEOUT^DIFROMSO(.402,DA,"",XPDA);FPRE^DIFROMSI(.402,"",XPDA);EPRE^DIFROMSI(.402,DA,$E("N",$G(XPDNEW)),XPDA,"",OLDA);;EPOST^DIFROMSI(.402,DA,"",XPDA);DEL^DIFROMSK(.402,"",%)
"ORD",7,.402,0)
INPUT TEMPLATE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",474,-1)
1^1
"PKG",474,0)
ICR - IMMUNOLOGY CASE REGISTRY^IMR^REGISTRY FOR HIV PATIENTS
"PKG",474,20,0)
^9.402P^1^1
"PKG",474,20,1,0)
2^^IMRXDRPT
"PKG",474,20,1,1)
 
"PKG",474,20,"B",2,1)

"PKG",474,22,0)
^9.49I^1^1
"PKG",474,22,1,0)
2.1^2980209^3040330^66481
"PKG",474,22,1,"PAH",1,0)
21^3050720
"PKG",474,22,1,"PAH",1,1,0)
^^3^3^3050720
"PKG",474,22,1,"PAH",1,1,1,0)
This patch completely deletes the Immunology Case Registry v2.1 package, 
"PKG",474,22,1,"PAH",1,1,2,0)
which was replaced by the new version of the registry added to the 
"PKG",474,22,1,"PAH",1,1,3,0)
Clinical Case Registries package.
"PRE")
IMRP021
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
4
"RTN","IMRP021")
0^^B6267019
"RTN","IMRP021",1,0)
IMRP021 ;HCIOFO/SG - PATCH 21 INSTALLATION ; 1/4/05 9:41am
"RTN","IMRP021",2,0)
 ;;2.1;IMMUNOLOGY CASE REGISTRY;**21**;Feb 09, 1998
"RTN","IMRP021",3,0)
 ;
"RTN","IMRP021",4,0)
 ;***** ENVIRONMENT CHECKS
"RTN","IMRP021",5,0)
ENVCHK ;
"RTN","IMRP021",6,0)
 ;;Post-install routine of this patch will COMPLETELY DELETE
"RTN","IMRP021",7,0)
 ;;the Immunology Case Registry v2.1 package from your account.
"RTN","IMRP021",8,0)
 ;;This package was replaced by the new version of the registry
"RTN","IMRP021",9,0)
 ;;added to the Clinical Case Registries package.
"RTN","IMRP021",10,0)
 ;
"RTN","IMRP021",11,0)
 N DA,DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IMRP021",12,0)
 I $G(DUZ)'>0  D  S XPDABORT=2  Q
"RTN","IMRP021",13,0)
 . W !!,"The DUZ variable must be defined!",!
"RTN","IMRP021",14,0)
 Q:'$G(XPDENV)
"RTN","IMRP021",15,0)
 ;
"RTN","IMRP021",16,0)
 ;--- Request a confirmation from the user
"RTN","IMRP021",17,0)
 K DIR  S DIR(0)="Y"
"RTN","IMRP021",18,0)
 F X=1:1  S Y=$P($T(ENVCHK+X),";;",2,999)  Q:Y=""  S DIR("A",X)=Y
"RTN","IMRP021",19,0)
 S DIR("A")="Do you really want to delete the IMR v2.1"
"RTN","IMRP021",20,0)
 S DIR("B")="NO"
"RTN","IMRP021",21,0)
 D ^DIR  I '$G(Y)!$D(DIRUT)  D  Q
"RTN","IMRP021",22,0)
 . S XPDQUIT=1  ; Abort and remove the transport global
"RTN","IMRP021",23,0)
 ;
"RTN","IMRP021",24,0)
 ;--- Do not ask unnecessary questions
"RTN","IMRP021",25,0)
 S XPDDIQ("XPZ1")=0
"RTN","IMRP021",26,0)
 S XPDDIQ("XPZ2")=0
"RTN","IMRP021",27,0)
 Q
"RTN","IMRP021",28,0)
 ;
"RTN","IMRP021",29,0)
 ;***** DISPLAYS THE MESSAGE IF THE INSTALLATION ABORTS
"RTN","IMRP021",30,0)
ABTMSG ;
"RTN","IMRP021",31,0)
 ;;You can use the Install File Print [XPD PRINT INSTALL FILE]
"RTN","IMRP021",32,0)
 ;;option to investigate the problem.  Please fix the error(s)
"RTN","IMRP021",33,0)
 ;;and restart the patch installation using the Restart Install
"RTN","IMRP021",34,0)
 ;;of Package(s) [XPD RESTART INSTALL] option.
"RTN","IMRP021",35,0)
 ;
"RTN","IMRP021",36,0)
 N I,INFO,TMP
"RTN","IMRP021",37,0)
 F I=1:1  S TMP=$T(ABTMSG+I)  Q:TMP'[";;"  S INFO(I)=$P(TMP,";;",2,99)
"RTN","IMRP021",38,0)
 D MSG^IMRVPPU("ERROR(S) DURING THE PATCH INSTALLATION!",.INFO,1)
"RTN","IMRP021",39,0)
 Q
"RTN","IMRP021",40,0)
 ;
"RTN","IMRP021",41,0)
 ;***** ERROR PROCESSING
"RTN","IMRP021",42,0)
ERROR ;
"RTN","IMRP021",43,0)
 N XQADATA,XQAID,XQAMSG,XQAROU
"RTN","IMRP021",44,0)
 S XPDABORT=2
"RTN","IMRP021",45,0)
 I $D(ZTQUEUED)  D  D SETUP^XQALERT
"RTN","IMRP021",46,0)
 . S XQAMSG="Error during the installation of "_XPDNM,XQA(+DUZ)=""
"RTN","IMRP021",47,0)
 D ABTMSG
"RTN","IMRP021",48,0)
 Q
"RTN","IMRP021",49,0)
 ;
"RTN","IMRP021",50,0)
 ;***** POST-INSTALLATION ENTRY POINT
"RTN","IMRP021",51,0)
POS ;
"RTN","IMRP021",52,0)
 N DEL,IMRVPP,RC,X
"RTN","IMRP021",53,0)
 S RC=0  D INIT^IMRVPP()
"RTN","IMRP021",54,0)
 ;
"RTN","IMRP021",55,0)
 ;--- Search for package data
"RTN","IMRP021",56,0)
 S RC=$$ADDNSF^IMRVPP("IMR",158,159.999)  G:RC<0 ERROR
"RTN","IMRP021",57,0)
 S RC=$$SELVIFS^IMRVPP()                  G:RC<0 ERROR
"RTN","IMRP021",58,0)
 S RC=$$SELRTNS^IMRVPP()                  G:RC<0 ERROR
"RTN","IMRP021",59,0)
 ;
"RTN","IMRP021",60,0)
 ;--- Delete package data
"RTN","IMRP021",61,0)
 S RC=$$PURGE^IMRVPP()                    G:RC<0 ERROR
"RTN","IMRP021",62,0)
 ;
"RTN","IMRP021",63,0)
 ;--- Cleanup
"RTN","IMRP021",64,0)
 D INIT^IMRVPP()  S DEL=^%ZOSF("DEL")
"RTN","IMRP021",65,0)
 F X="IMRVPP","IMRVPPE","IMRVPPU"  X DEL
"RTN","IMRP021",66,0)
 Q
"RTN","IMRVPP")
0^1^B44836103
"RTN","IMRVPP",1,0)
IMRVPP ;HCIOFO/SG - VISTA PACKAGE PURGE ; 6/2/05 11:55am
"RTN","IMRVPP",2,0)
 ;;2.1;IMMUNOLOGY CASE REGISTRY;**21**;Feb 09, 1998
"RTN","IMRVPP",3,0)
 ;;
"RTN","IMRVPP",4,0)
 ; LOCAL VARIABLE ------ DESCRIPTION
"RTN","IMRVPP",5,0)
 ;
"RTN","IMRVPP",6,0)
 ; IMRVPP(               PROCESS-WIDE LOCAL VARIABLE
"RTN","IMRVPP",7,0)
 ;
"RTN","IMRVPP",8,0)
 ;   "DLG",              List of dialog segments to delete
"RTN","IMRVPP",9,0)
 ;     Seq#)             Segment
"RTN","IMRVPP",10,0)
 ;                         ^01: Lowest number (integer part)
"RTN","IMRVPP",11,0)
 ;                         ^02: Highest number + 1 (integer part)
"RTN","IMRVPP",12,0)
 ;
"RTN","IMRVPP",13,0)
 ;   "NSE",              List of excluded namespaces
"RTN","IMRVPP",14,0)
 ;     NameSpace)        $L(NameSpace)
"RTN","IMRVPP",15,0)
 ;
"RTN","IMRVPP",16,0)
 ;   "NSI",              List of namespaces to be deleted
"RTN","IMRVPP",17,0)
 ;     NameSpace)        $L(NameSpace)
"RTN","IMRVPP",18,0)
 ;
"RTN","IMRVPP",19,0)
 ;   "PGLEN")            Page length for output
"RTN","IMRVPP",20,0)
 ;
"RTN","IMRVPP",21,0)
 ;   "SILENT")           Do not display any messages
"RTN","IMRVPP",22,0)
 ;                       if exists and non-zero
"RTN","IMRVPP",23,0)
 ;
"RTN","IMRVPP",24,0)
 ; TEMPORARY NODE ------ DESCRIPTION
"RTN","IMRVPP",25,0)
 ;
"RTN","IMRVPP",26,0)
 ; ^TMP("IMRVPP-DELETE",$J,
"RTN","IMRVPP",27,0)
 ;
"RTN","IMRVPP",28,0)
 ;   "DD",               Number of files to be deleted
"RTN","IMRVPP",29,0)
 ;     FileNumber)       File name
"RTN","IMRVPP",30,0)
 ;
"RTN","IMRVPP",31,0)
 ;   "RTN",              Number of routines to be deleted
"RTN","IMRVPP",32,0)
 ;     RtnName)          ""
"RTN","IMRVPP",33,0)
 ;
"RTN","IMRVPP",34,0)
 ;   "VIF",              Lists of entries of various VistA files
"RTN","IMRVPP",35,0)
 ;                       that should be deleted
"RTN","IMRVPP",36,0)
 ;     FileNumber,       Descriptor
"RTN","IMRVPP",37,0)
 ;                         ^01: reserved
"RTN","IMRVPP",38,0)
 ;                         ^02: Field number of the record name
"RTN","IMRVPP",39,0)
 ;                         ^03: File name
"RTN","IMRVPP",40,0)
 ;                         ^04: Special processing ("D"-delete,
"RTN","IMRVPP",41,0)
 ;                              "P"-print, "S"-select)
"RTN","IMRVPP",42,0)
 ;       IEN)            Record name (usually value of the .01 field)
"RTN","IMRVPP",43,0)
 ;     "B",
"RTN","IMRVPP",44,0)
 ;       Name,IEN) ""
"RTN","IMRVPP",45,0)
 ;     "CNT")            Number of records to be deleted
"RTN","IMRVPP",46,0)
 ;     "MNL")            Maximum length of record name
"RTN","IMRVPP",47,0)
 ;
"RTN","IMRVPP",48,0)
 Q
"RTN","IMRVPP",49,0)
 ;
"RTN","IMRVPP",50,0)
 ;***** ADDS THE NAMESPACE AND FILES TO THE LIST
"RTN","IMRVPP",51,0)
 ;
"RTN","IMRVPP",52,0)
 ; [NAMESP]       Namespace.  By default ($G(NAMESP)=""), nothing
"RTN","IMRVPP",53,0)
 ;                is added to the list of namespaces.
"RTN","IMRVPP",54,0)
 ;
"RTN","IMRVPP",55,0)
 ; [FILELOW       Lowest and highest file numbers.  By default,
"RTN","IMRVPP",56,0)
 ;  FILEHIGH]     nothing is added top the list of files.
"RTN","IMRVPP",57,0)
 ;
"RTN","IMRVPP",58,0)
 ; Return Values:
"RTN","IMRVPP",59,0)
 ;       <0  Error code (see MSGLIST^IMRVPPE)
"RTN","IMRVPP",60,0)
 ;        0  Ok
"RTN","IMRVPP",61,0)
 ;
"RTN","IMRVPP",62,0)
ADDNSF(NAMESP,FILELOW,FILEHIGH) ;
"RTN","IMRVPP",63,0)
 N CNT,FILE,RC,ROOT,TMP,IMRMSG
"RTN","IMRVPP",64,0)
 S RC=0
"RTN","IMRVPP",65,0)
 ;--- Namespace
"RTN","IMRVPP",66,0)
 I $G(NAMESP)'=""  D  Q:RC<0 RC
"RTN","IMRVPP",67,0)
 . I $L(NAMESP)>4  S RC=$$ERROR^IMRVPPE(-5,,NAMESP)  Q
"RTN","IMRVPP",68,0)
 . S IMRVPP("NSI",NAMESP)=$L(NAMESP)
"RTN","IMRVPP",69,0)
 ;--- Files
"RTN","IMRVPP",70,0)
 I $G(FILELOW)>0,$G(FILEHIGH)>0  D  Q:RC<0 RC
"RTN","IMRVPP",71,0)
 . S ROOT=$$ROOT^DILFD(1,,1),CNT=0
"RTN","IMRVPP",72,0)
 . S FILE=$O(@ROOT@(FILELOW),-1)
"RTN","IMRVPP",73,0)
 . F  S FILE=$O(@ROOT@(FILE))  Q:(FILE'>0)!(FILE>FILEHIGH)  D  Q:RC<0
"RTN","IMRVPP",74,0)
 . . S TMP=$$GET1^DID(FILE,,,"NAME",,"IMRMSG")
"RTN","IMRVPP",75,0)
 . . I $G(DIERR)  S RC=$$DBSERR^IMRVPPE("IMRMSG",-9,1,FILE)  Q
"RTN","IMRVPP",76,0)
 . . S ^TMP("IMRVPP-DELETE",$J,"DD",FILE)=TMP,CNT=CNT+1
"RTN","IMRVPP",77,0)
 . S ^("DD")=$G(^TMP("IMRVPP-DELETE",$J,"DD"))+CNT
"RTN","IMRVPP",78,0)
 . ;--- Segment of dialogs
"RTN","IMRVPP",79,0)
 . S CNT=$O(IMRVPP("DLG",""),-1)+1
"RTN","IMRVPP",80,0)
 . S IMRVPP("DLG",CNT)=(FILELOW\1*10000)_U_((FILEHIGH\1+1)*10000)
"RTN","IMRVPP",81,0)
 ;---
"RTN","IMRVPP",82,0)
 Q $S(RC<0:RC,1:0)
"RTN","IMRVPP",83,0)
 ;
"RTN","IMRVPP",84,0)
 ;***** DELETES DATA DICTIONARIES AND DATA
"RTN","IMRVPP",85,0)
DELDDS() ;
"RTN","IMRVPP",86,0)
 N DIU,FILE,NODE,RC
"RTN","IMRVPP",87,0)
 S RC=0,NODE=$NA(^TMP("IMRVPP-DELETE",$J,"DD"))
"RTN","IMRVPP",88,0)
 Q:$D(@NODE)<10 0
"RTN","IMRVPP",89,0)
 D MSG^IMRVPPU("The following files have been deleted:",,1)
"RTN","IMRVPP",90,0)
 ;---
"RTN","IMRVPP",91,0)
 D MSG^IMRVPPU(" ")  S FILE=0
"RTN","IMRVPP",92,0)
 F  S FILE=$O(@NODE@(FILE))  Q:FILE'>0  D  Q:RC
"RTN","IMRVPP",93,0)
 . S DIU=FILE,DIU(0)="DT"  D EN^DIU2
"RTN","IMRVPP",94,0)
 . D MSG^IMRVPPU($P(@NODE@(FILE),U)_" (#"_FILE_")")
"RTN","IMRVPP",95,0)
 ;---
"RTN","IMRVPP",96,0)
 Q RC
"RTN","IMRVPP",97,0)
 ;
"RTN","IMRVPP",98,0)
 ;***** DELETES ROUTINES
"RTN","IMRVPP",99,0)
DELRTNS(EXCLRTN) ;
"RTN","IMRVPP",100,0)
 N CBUF,DEL,EXCL,LEX,NAME,NODE,RC,X,ZZSGBUF
"RTN","IMRVPP",101,0)
 S RC=0,NODE=$NA(^TMP("IMRVPP-DELETE",$J,"RTN"))
"RTN","IMRVPP",102,0)
 Q:$D(@NODE)<10 0
"RTN","IMRVPP",103,0)
 D MSG^IMRVPPU("The following routines have been deleted:",,1)
"RTN","IMRVPP",104,0)
 S DEL=^%ZOSF("DEL"),EXCL="IMRVPP",LEX=$L(EXCL)
"RTN","IMRVPP",105,0)
 ;---
"RTN","IMRVPP",106,0)
 D PRINTCL^IMRVPPU(.CBUF,8,1)
"RTN","IMRVPP",107,0)
 S NAME=""
"RTN","IMRVPP",108,0)
 F  S NAME=$O(@NODE@(NAME))  Q:NAME=""  D
"RTN","IMRVPP",109,0)
 . Q:($E(NAME,1,LEX)=EXCL)!(NAME=$G(EXCLRTN))
"RTN","IMRVPP",110,0)
 . S X=NAME  X DEL
"RTN","IMRVPP",111,0)
 . D PRINTCL^IMRVPPU(.CBUF,NAME)
"RTN","IMRVPP",112,0)
 D PRINTCL^IMRVPPU(.CBUF,,2)
"RTN","IMRVPP",113,0)
 ;---
"RTN","IMRVPP",114,0)
 Q RC
"RTN","IMRVPP",115,0)
 ;
"RTN","IMRVPP",116,0)
 ;***** DELETES RECORDS FROM INFRASTRUCTURE FILES
"RTN","IMRVPP",117,0)
DELVIFS() ;
"RTN","IMRVPP",118,0)
 N CBUF,DA,DIK,FILE,IEN,NAME,RC,TMP,VIF
"RTN","IMRVPP",119,0)
 S RC=0,VIF=$NA(^TMP("IMRVPP-DELETE",$J,"VIF"))
"RTN","IMRVPP",120,0)
 ;---
"RTN","IMRVPP",121,0)
 S FILE=0
"RTN","IMRVPP",122,0)
 F  S FILE=$O(@VIF@(FILE))  Q:FILE'>0  D
"RTN","IMRVPP",123,0)
 . Q:$G(@VIF@(FILE,"CNT"))'>0  ; Empty list
"RTN","IMRVPP",124,0)
 . S TMP=@VIF@(FILE),NAME=$P(TMP,U,3)
"RTN","IMRVPP",125,0)
 . Q:$P(TMP,U,4)["D"           ; Special processing
"RTN","IMRVPP",126,0)
 . S DIK=$$ROOT^DILFD(FILE)
"RTN","IMRVPP",127,0)
 . ;---
"RTN","IMRVPP",128,0)
 . D MSG^IMRVPPU("The following "_NAME_" have been deleted:",,1)
"RTN","IMRVPP",129,0)
 . D PRINTCL^IMRVPPU(.CBUF,+$G(@VIF@(FILE,"MNL")),1)
"RTN","IMRVPP",130,0)
 . S NAME=""
"RTN","IMRVPP",131,0)
 . F  S NAME=$O(@VIF@(FILE,"B",NAME))  Q:NAME=""  D
"RTN","IMRVPP",132,0)
 . . S DA=0
"RTN","IMRVPP",133,0)
 . . F  S DA=$O(@VIF@(FILE,"B",NAME,DA))  Q:DA'>0  D
"RTN","IMRVPP",134,0)
 . . . S TMP=$P(@VIF@(FILE,DA),U)
"RTN","IMRVPP",135,0)
 . . . D ^DIK
"RTN","IMRVPP",136,0)
 . . . D PRINTCL^IMRVPPU(.CBUF,TMP_" (#"_DA_")")
"RTN","IMRVPP",137,0)
 . D PRINTCL^IMRVPPU(.CBUF,,2)
"RTN","IMRVPP",138,0)
 ;---
"RTN","IMRVPP",139,0)
 Q RC
"RTN","IMRVPP",140,0)
 ;
"RTN","IMRVPP",141,0)
 ;***** ERROR PROCESSING
"RTN","IMRVPP",142,0)
ERRIRTN Q
"RTN","IMRVPP",143,0)
 ;
"RTN","IMRVPP",144,0)
 ;***** INITIALIZES THE PACKAGE PURGE TOOL
"RTN","IMRVPP",145,0)
 ;
"RTN","IMRVPP",146,0)
 ; [SILENT]       Do not display any messages
"RTN","IMRVPP",147,0)
 ;
"RTN","IMRVPP",148,0)
INIT(SILENT) ;
"RTN","IMRVPP",149,0)
 K ^TMP("IMRVPP-DELETE",$J),IMRVPP
"RTN","IMRVPP",150,0)
 S:$G(SILENT) IMRVPP("SILENT")=1
"RTN","IMRVPP",151,0)
 Q
"RTN","IMRVPP",152,0)
 ;
"RTN","IMRVPP",153,0)
 ;***** PURGES THE PACKAGE
"RTN","IMRVPP",154,0)
PURGE() ;
"RTN","IMRVPP",155,0)
 N DA,DIK,RC  K IMRVPP("PGLEN")
"RTN","IMRVPP",156,0)
 ;--- Delete records from VistA infrastructure files
"RTN","IMRVPP",157,0)
 S RC=$$DELVIFS()           Q:RC<0 RC
"RTN","IMRVPP",158,0)
 ;--- Delete files
"RTN","IMRVPP",159,0)
 S RC=$$DELDDS()            Q:RC<0 RC
"RTN","IMRVPP",160,0)
 ;--- Routines
"RTN","IMRVPP",161,0)
 S RC=$$DELRTNS("IMRP021")  Q:RC<0 RC
"RTN","IMRVPP",162,0)
 ;--- Routine names
"RTN","IMRVPP",163,0)
 I $G(^TMP("IMRVPP-DELETE",$J,"VIF",9.8,"CNT"))>0  D
"RTN","IMRVPP",164,0)
 . S DIK=$$ROOT^DILFD(9.8),DA=0
"RTN","IMRVPP",165,0)
 . F  S DA=$O(^TMP("IMRVPP-DELETE",$J,"VIF",9.8,DA))  Q:DA'>0  D ^DIK
"RTN","IMRVPP",166,0)
 Q 0
"RTN","IMRVPP",167,0)
 ;
"RTN","IMRVPP",168,0)
 ;***** SELECTS PACKAGE ROUTINES
"RTN","IMRVPP",169,0)
SELRTNS() ;
"RTN","IMRVPP",170,0)
 ;;S RTN=$O(^$ROUTINE(RTN),RTN("DIR"))
"RTN","IMRVPP",171,0)
 ;;S RTN=$O(^ (RTN),RTN("DIR"))
"RTN","IMRVPP",172,0)
 ;
"RTN","IMRVPP",173,0)
 N I,NAMESP,NSL,RC,RTN,X
"RTN","IMRVPP",174,0)
 ;--- Assign the routine iterator
"RTN","IMRVPP",175,0)
 S RC=0
"RTN","IMRVPP",176,0)
 F I=1,2  S RTN("$O")=$P($T(SELRTNS+I),";;",2,99)  D  Q:RC
"RTN","IMRVPP",177,0)
 . N $ESTACK,$ETRAP
"RTN","IMRVPP",178,0)
 . S X="ERRIRTN^IMRVPP",@^%ZOSF("TRAP"),$ETRAP=""
"RTN","IMRVPP",179,0)
 . S RTN="",RTN("DIR")=1  X RTN("$O")  S RC=1
"RTN","IMRVPP",180,0)
 Q:RC<0 RC  Q:'RC $$ERROR^IMRVPPE(-10)
"RTN","IMRVPP",181,0)
 ;--- Search for namespaced routines
"RTN","IMRVPP",182,0)
 D MSG^IMRVPPU("Searching for package routines...",,1)
"RTN","IMRVPP",183,0)
 S NAMESP=""
"RTN","IMRVPP",184,0)
 F  S NAMESP=$O(IMRVPP("NSI",NAMESP))  Q:NAMESP=""  D
"RTN","IMRVPP",185,0)
 . S NSL=$L(NAMESP)
"RTN","IMRVPP",186,0)
 . S RTN=NAMESP,RTN("DIR")=-1  X RTN("$O")  S RTN("DIR")=1
"RTN","IMRVPP",187,0)
 . F  X RTN("$O")  Q:$E(RTN,1,NSL)'=NAMESP  D
"RTN","IMRVPP",188,0)
 . . S:$$CHKNAME^IMRVPPU(RTN) ^TMP("IMRVPP-DELETE",$J,"RTN",RTN)=""
"RTN","IMRVPP",189,0)
 ;---
"RTN","IMRVPP",190,0)
 Q 0
"RTN","IMRVPP",191,0)
 ;
"RTN","IMRVPP",192,0)
 ;***** SELECTS PACKAGE RECORDS IN VISTA INFRASTRUCTURE FILES
"RTN","IMRVPP",193,0)
 ;                                        Spec.
"RTN","IMRVPP",194,0)
 ; File#    Fld#  Description             Proc.
"RTN","IMRVPP",195,0)
SELVIFS() ; -------- ---- ------------------------ ---
"RTN","IMRVPP",196,0)
 ;;    .5  ^ .01^ Functions              ^   ^
"RTN","IMRVPP",197,0)
 ;;   9.8  ^ .01^ Routine File Entries   ^D P^
"RTN","IMRVPP",198,0)
 ;
"RTN","IMRVPP",199,0)
 N BUF,CNT,FIELD,FILE,I,IEN,LD1,MAXLEN,ROOT,TMP,VIF,IMRMSG
"RTN","IMRVPP",200,0)
 S RC=0,VIF=$NA(^TMP("IMRVPP-DELETE",$J,"VIF"))
"RTN","IMRVPP",201,0)
 ;--- Prepare file descriptors in temporary global
"RTN","IMRVPP",202,0)
 F I=1:1  S BUF=$P($T(SELVIF+I),";;",2,999)  Q:BUF=""  D
"RTN","IMRVPP",203,0)
 . S FILE=+$TR($P(BUF,U)," ")
"RTN","IMRVPP",204,0)
 . S $P(BUF,U,1)=""
"RTN","IMRVPP",205,0)
 . S $P(BUF,U,2)=+$TR($P(BUF,U,2)," ")
"RTN","IMRVPP",206,0)
 . S $P(BUF,U,3)=$$TRIM^XLFSTR($P(BUF,U,3))
"RTN","IMRVPP",207,0)
 . S $P(BUF,U,4)=$TR($P(BUF,U,4)," ")
"RTN","IMRVPP",208,0)
 . S @VIF@(FILE)=BUF
"RTN","IMRVPP",209,0)
 ;--- Compile the lists of entries
"RTN","IMRVPP",210,0)
 D MSG^IMRVPPU("Searching for package records in VistA files...",,1)
"RTN","IMRVPP",211,0)
 S FILE=0
"RTN","IMRVPP",212,0)
 F  S FILE=$O(@VIF@(FILE))  Q:FILE'>0  D  Q:RC<0
"RTN","IMRVPP",213,0)
 . S TMP=@VIF@(FILE),FIELD=+$P(TMP,U,2)
"RTN","IMRVPP",214,0)
 . Q:$P(TMP,U,4)["S"  ; Special processing
"RTN","IMRVPP",215,0)
 . S ROOT=$$ROOT^DILFD(FILE,,1)
"RTN","IMRVPP",216,0)
 . S (CNT,IEN,MAXLEN)=0
"RTN","IMRVPP",217,0)
 . F  S IEN=$O(@ROOT@(IEN))  Q:IEN'>0  D  Q:RC<0
"RTN","IMRVPP",218,0)
 . . S TMP=$$GET1^DIQ(FILE,IEN,FIELD,,,"IMRMSG")
"RTN","IMRVPP",219,0)
 . . I $G(DIERR)  S RC=$$DBSERR^IMRVPPE("IMRMSG",-9,FILE,IEN)  Q
"RTN","IMRVPP",220,0)
 . . Q:'$$CHKNAME^IMRVPPU(TMP)
"RTN","IMRVPP",221,0)
 . . S CNT=CNT+1,@VIF@(FILE,IEN)=TMP,@VIF@(FILE,"B",TMP,IEN)=""
"RTN","IMRVPP",222,0)
 . . S TMP=$L(TMP)+$L(IEN)+4  S:TMP>MAXLEN MAXLEN=TMP
"RTN","IMRVPP",223,0)
 . S @VIF@(FILE,"CNT")=CNT
"RTN","IMRVPP",224,0)
 . S @VIF@(FILE,"MNL")=MAXLEN
"RTN","IMRVPP",225,0)
 ;---
"RTN","IMRVPP",226,0)
 Q $S(RC<0:RC,1:0)
"RTN","IMRVPPE")
0^2^B13564489
"RTN","IMRVPPE",1,0)
IMRVPPE ;HCIOFO/SG - VISTA PACKAGE PURGE (ERRORS) ; 1/4/05 9:24am
"RTN","IMRVPPE",2,0)
 ;;2.1;IMMUNOLOGY CASE REGISTRY;**21**;Feb 09, 1998
"RTN","IMRVPPE",3,0)
 ;
"RTN","IMRVPPE",4,0)
 Q
"RTN","IMRVPPE",5,0)
 ;
"RTN","IMRVPPE",6,0)
 ;***** CHECKS THE ERRORS AFTER A FILEMAN DBS CALL
"RTN","IMRVPPE",7,0)
 ;
"RTN","IMRVPPE",8,0)
 ; IMR8MSG       Closed reference of the error messages array
"RTN","IMRVPPE",9,0)
 ;               (from DBS calls)
"RTN","IMRVPPE",10,0)
 ; [ERRCODE]     Error code to assign
"RTN","IMRVPPE",11,0)
 ; [FILE]        File number used in the DBS call
"RTN","IMRVPPE",12,0)
 ; [IENS]        IENS used in the DBS call
"RTN","IMRVPPE",13,0)
 ;
"RTN","IMRVPPE",14,0)
 ; The $$DBSERR^IMRVPPE function checks the DIERR and @IMR8MSG
"RTN","IMRVPPE",15,0)
 ; variables for errors after a FileMan DBS call.
"RTN","IMRVPPE",16,0)
 ; 
"RTN","IMRVPPE",17,0)
 ; Return Values:
"RTN","IMRVPPE",18,0)
 ;
"RTN","IMRVPPE",19,0)
 ; If there are no errors found, it returns an empty string.
"RTN","IMRVPPE",20,0)
 ; In case of errors, the result depends on value of the ERRCODE
"RTN","IMRVPPE",21,0)
 ; parameter:
"RTN","IMRVPPE",22,0)
 ;
"RTN","IMRVPPE",23,0)
 ; If ERRCODE is omitted or equals 0, the function returns a string
"RTN","IMRVPPE",24,0)
 ; containing the list of error codes separated by comma.
"RTN","IMRVPPE",25,0)
 ; 
"RTN","IMRVPPE",26,0)
 ; If ERRCODE is not zero, the $$ERROR^IMRVPPE function is called
"RTN","IMRVPPE",27,0)
 ; and its return value is returned.
"RTN","IMRVPPE",28,0)
 ;
"RTN","IMRVPPE",29,0)
 ; NOTE: This entry point can also be called as a procedure:
"RTN","IMRVPPE",30,0)
 ;       D DBS^IMRVPPE(...) if you do not need its return value.
"RTN","IMRVPPE",31,0)
 ;
"RTN","IMRVPPE",32,0)
DBSERR(IMR8MSG,ERRCODE,FILE,IENS) ;
"RTN","IMRVPPE",33,0)
 I '$G(DIERR)  Q:$QUIT ""  Q
"RTN","IMRVPPE",34,0)
 N ERRLST,ERRNODE,I,MSGTEXT
"RTN","IMRVPPE",35,0)
 ;--- Determine location of the error messages
"RTN","IMRVPPE",36,0)
 S ERRNODE=$S($G(IMR8MSG)'="":$NA(@IMR8MSG@("DIERR")),1:$NA(^TMP("DIERR",$J)))
"RTN","IMRVPPE",37,0)
 I $D(@ERRNODE)<10  Q:$QUIT ""  Q
"RTN","IMRVPPE",38,0)
 ;--- Return the list of error codes
"RTN","IMRVPPE",39,0)
 I '$G(ERRCODE)  D  Q:$QUIT $P(ERRLST,",",2,99)  Q
"RTN","IMRVPPE",40,0)
 . S ERRLST="",I=0
"RTN","IMRVPPE",41,0)
 . F  S I=$O(@ERRNODE@(I))  Q:'I  S ERRLST=ERRLST_","_@ERRNODE@(I)
"RTN","IMRVPPE",42,0)
 . D CLEAN^DILF
"RTN","IMRVPPE",43,0)
 ;--- Display the message(s)
"RTN","IMRVPPE",44,0)
 D MSG^DIALOG("AE",.MSGTEXT,,,$G(IMR8MSG)),CLEAN^DILF
"RTN","IMRVPPE",45,0)
 S I=$S($G(FILE):"; File #"_FILE,1:"")
"RTN","IMRVPPE",46,0)
 S:$G(IENS)'="" I=I_"; IENS: """_IENS_""""
"RTN","IMRVPPE",47,0)
 Q:$QUIT $$ERROR(ERRCODE,.MSGTEXT,I)  Q
"RTN","IMRVPPE",48,0)
 ;
"RTN","IMRVPPE",49,0)
 ;***** DISPLAYS THE ERROR MESSAGE(S)
"RTN","IMRVPPE",50,0)
 ;
"RTN","IMRVPPE",51,0)
 ; ERRCODE       Error code.
"RTN","IMRVPPE",52,0)
 ;
"RTN","IMRVPPE",53,0)
 ; [[.]IMRINFO] Optional additional information (either a string or
"RTN","IMRVPPE",54,0)
 ;               a reference to a local array that contains strings
"RTN","IMRVPPE",55,0)
 ;               prepared for storing in a word processing field)
"RTN","IMRVPPE",56,0)
 ;
"RTN","IMRVPPE",57,0)
 ; [ARG1-ARG5]   Optional parameters as for $$MSG^IMRVPPE
"RTN","IMRVPPE",58,0)
 ;
"RTN","IMRVPPE",59,0)
 ; Return Values:
"RTN","IMRVPPE",60,0)
 ;       <0  Error code (value of the ERRCODE)
"RTN","IMRVPPE",61,0)
 ;        0  Ok (if ERRCOCE'<0)
"RTN","IMRVPPE",62,0)
 ;
"RTN","IMRVPPE",63,0)
 ; NOTE: This entry point can also be called as a procedure:
"RTN","IMRVPPE",64,0)
 ;       D ERROR^IMRVPPE(...) if you do not need its return value.
"RTN","IMRVPPE",65,0)
 ;
"RTN","IMRVPPE",66,0)
ERROR(ERRCODE,IMRINFO,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","IMRVPPE",67,0)
 I ERRCODE'<0  Q:$QUIT 0  Q
"RTN","IMRVPPE",68,0)
 N IR,MSG,PLACE,SL,TMP,TYPE
"RTN","IMRVPPE",69,0)
 ;--- Determine location of the error
"RTN","IMRVPPE",70,0)
 S SL=$STACK(-1)-1
"RTN","IMRVPPE",71,0)
 F  Q:SL'>0  D  Q:'(PLACE["^IMRVPPE")  S SL=SL-1
"RTN","IMRVPPE",72,0)
 . S PLACE=$P($STACK(SL,"PLACE")," ")
"RTN","IMRVPPE",73,0)
 ;--- Format the message text
"RTN","IMRVPPE",74,0)
 I $D(IMRINFO)=1  S IR=IMRINFO  K IMRINFO  S IMRINFO(1)=IR,IR=1
"RTN","IMRVPPE",75,0)
 E  S IR=$O(IMRINFO(""),-1)
"RTN","IMRVPPE",76,0)
 S MSG=$$MSG(+ERRCODE,.TYPE,.ARG1,.ARG2,.ARG3,.ARG4,.ARG5)
"RTN","IMRVPPE",77,0)
 S IR=IR+1,IMRINFO(IR)="Location: "_PLACE
"RTN","IMRVPPE",78,0)
 ;--- Display the message
"RTN","IMRVPPE",79,0)
 U:$G(IO(0))'="" IO(0)
"RTN","IMRVPPE",80,0)
 S TMP=$P($$FMTE^XLFDT($$NOW^XLFDT,"2FS"),"@",2)
"RTN","IMRVPPE",81,0)
 D MSG^IMRVPPU(TMP_" "_$E(MSG,1,70),,1,0)
"RTN","IMRVPPE",82,0)
 D MSG^IMRVPPU(,.IMRINFO,0,9)
"RTN","IMRVPPE",83,0)
 U IO
"RTN","IMRVPPE",84,0)
 Q ERRCODE  Q
"RTN","IMRVPPE",85,0)
 ;
"RTN","IMRVPPE",86,0)
 ;***** RETURNS TYPE AND TEXT OF THE MESSAGE
"RTN","IMRVPPE",87,0)
 ;
"RTN","IMRVPPE",88,0)
 ; ERRCODE       Error code
"RTN","IMRVPPE",89,0)
 ; [.TYPE]       Type of the error
"RTN","IMRVPPE",90,0)
 ; [ARG1-ARG5]   Optional parameters that substitute the |n| "windows"
"RTN","IMRVPPE",91,0)
 ;               in the text of the message (for example, the |2| will
"RTN","IMRVPPE",92,0)
 ;               be substituted by the value of the ARG2).
"RTN","IMRVPPE",93,0)
 ;
"RTN","IMRVPPE",94,0)
MSG(ERRCODE,TYPE,ARG1,ARG2,ARG3,ARG4,ARG5) ;
"RTN","IMRVPPE",95,0)
 S TYPE=6  Q:ERRCODE'<0 ""
"RTN","IMRVPPE",96,0)
 N ARG,I1,I2,MSG
"RTN","IMRVPPE",97,0)
 ;--- Get a descriptor of the message
"RTN","IMRVPPE",98,0)
 S I1=-ERRCODE,MSG=$P($T(MSGLIST+I1),";;",2)
"RTN","IMRVPPE",99,0)
 S I1=+$TR($P(MSG,U,2)," "),MSG=$P(MSG,U,3,999)
"RTN","IMRVPPE",100,0)
 S:I1>0 TYPE=I1
"RTN","IMRVPPE",101,0)
 Q:MSG?." " "Unknown error ("_ERRCODE_")"
"RTN","IMRVPPE",102,0)
 ;--- Substitute parameters
"RTN","IMRVPPE",103,0)
 S I1=2
"RTN","IMRVPPE",104,0)
 F  S I1=$F(MSG,"|",I1-1)  Q:'I1  D
"RTN","IMRVPPE",105,0)
 . S I2=$F(MSG,"|",I1)  Q:'I2
"RTN","IMRVPPE",106,0)
 . X "S ARG=$G(ARG"_+$TR($E(MSG,I1,I2-2)," ")_")"
"RTN","IMRVPPE",107,0)
 . S $E(MSG,I1-1,I2-1)=ARG
"RTN","IMRVPPE",108,0)
 Q $$TRIM^XLFSTR(MSG)
"RTN","IMRVPPE",109,0)
 ;
"RTN","IMRVPPE",110,0)
 ;***** RETURNS TYPE OF THE MESSAGE
"RTN","IMRVPPE",111,0)
 ;
"RTN","IMRVPPE",112,0)
 ; ERRCODE       Error code
"RTN","IMRVPPE",113,0)
 ;
"RTN","IMRVPPE",114,0)
TYPE(ERRCODE) ;
"RTN","IMRVPPE",115,0)
 Q:ERRCODE'<0 0
"RTN","IMRVPPE",116,0)
 N I,TYPE  S I=-ERRCODE
"RTN","IMRVPPE",117,0)
 S I=$P($T(MSGLIST+I),";;",2),TYPE=+$TR($P(I,U,2)," ")
"RTN","IMRVPPE",118,0)
 Q $S(TYPE>0:TYPE,1:6)
"RTN","IMRVPPE",119,0)
 ;
"RTN","IMRVPPE",120,0)
 ;***** LIST OF THE MESSAGES (THERE SHOULD BE NOTHING AFTER THE LIST!)
"RTN","IMRVPPE",121,0)
 ;
"RTN","IMRVPPE",122,0)
 ; The error codes are provided in the table only for clarity.
"RTN","IMRVPPE",123,0)
 ; Text of the messages are extracted using the $TEXT function and
"RTN","IMRVPPE",124,0)
 ; absolute values of the ERRCODE parameter.
"RTN","IMRVPPE",125,0)
 ;
"RTN","IMRVPPE",126,0)
 ; Message Type:
"RTN","IMRVPPE",127,0)
 ;               1  Debug          4  Warning
"RTN","IMRVPPE",128,0)
 ;               2  Information    5  Database Error
"RTN","IMRVPPE",129,0)
 ;               3  Data Quality   6  Error
"RTN","IMRVPPE",130,0)
 ;
"RTN","IMRVPPE",131,0)
MSGLIST ; Code Type  Message Text
"RTN","IMRVPPE",132,0)
 ;;  -1 ^ 1 ^ User entered the "^"
"RTN","IMRVPPE",133,0)
 ;;  -2 ^ 6 ^ Timeout
"RTN","IMRVPPE",134,0)
 ;;  -3 ^ 6 ^ Cannot create the '|1|' checkpoint!
"RTN","IMRVPPE",135,0)
 ;;  -4 ^ 6 ^ Cannot complete the '|1|' checkpoint!
"RTN","IMRVPPE",136,0)
 ;;  -5 ^ 6 ^ Invalid namespace: '|1|'
"RTN","IMRVPPE",137,0)
 ;;  -6 ^ 6 ^ Invalid value of the |1| parameter!
"RTN","IMRVPPE",138,0)
 ;;  -7 ^ 6 ^
"RTN","IMRVPPE",139,0)
 ;;  -8 ^ 3 ^
"RTN","IMRVPPE",140,0)
 ;;  -9 ^ 5 ^ FileMan DBS call error(s)|1|
"RTN","IMRVPPE",141,0)
 ;; -10 ^ 6 ^ Cannot assign a routine iterator
"RTN","IMRVPPU")
0^3^B12623498
"RTN","IMRVPPU",1,0)
IMRVPPU ;HCIOFO/SG - VISTA PACKAGE PURGE (UTILITIES) ; 1/4/05 9:24am
"RTN","IMRVPPU",2,0)
 ;;2.1;IMMUNOLOGY CASE REGISTRY;**21**;Feb 09, 1998
"RTN","IMRVPPU",3,0)
 ;
"RTN","IMRVPPU",4,0)
 Q
"RTN","IMRVPPU",5,0)
 ;
"RTN","IMRVPPU",6,0)
 ;***** CHECKS IF THE NAME CONFORMS TO THE NAMESPACES
"RTN","IMRVPPU",7,0)
 ;
"RTN","IMRVPPU",8,0)
 ; NAME          Name
"RTN","IMRVPPU",9,0)
 ;
"RTN","IMRVPPU",10,0)
 ; Return Values:
"RTN","IMRVPPU",11,0)
 ;        0  Skip the item with this name
"RTN","IMRVPPU",12,0)
 ;        1  Process the item
"RTN","IMRVPPU",13,0)
 ;
"RTN","IMRVPPU",14,0)
CHKNAME(NAME) ;
"RTN","IMRVPPU",15,0)
 N NAMESP,RC
"RTN","IMRVPPU",16,0)
 S RC=0
"RTN","IMRVPPU",17,0)
 ;--- Namespaces to include
"RTN","IMRVPPU",18,0)
 S NAMESP=""
"RTN","IMRVPPU",19,0)
 F  S NAMESP=$O(IMRVPP("NSI",NAMESP))  Q:NAMESP=""  D  Q:RC
"RTN","IMRVPPU",20,0)
 . S:$E(NAME,1,IMRVPP("NSI",NAMESP))=NAMESP RC=1
"RTN","IMRVPPU",21,0)
 Q:'RC 0
"RTN","IMRVPPU",22,0)
 ;--- Namespaces to exclude
"RTN","IMRVPPU",23,0)
 S NAMESP=""
"RTN","IMRVPPU",24,0)
 F  S NAMESP=$O(IMRVPP("NSE",NAMESP))  Q:NAMESP=""  D  Q:'RC
"RTN","IMRVPPU",25,0)
 . S:$E(NAME,1,IMRVPP("NSE",NAMESP))=NAMESP RC=0
"RTN","IMRVPPU",26,0)
 Q RC
"RTN","IMRVPPU",27,0)
 ;
"RTN","IMRVPPU",28,0)
 ;***** PROCESSES THE INSTALLATION CHECKPOINT
"RTN","IMRVPPU",29,0)
 ;
"RTN","IMRVPPU",30,0)
 ; CPNAME        Checkpoint name
"RTN","IMRVPPU",31,0)
 ;
"RTN","IMRVPPU",32,0)
 ; CALLBACK      Callback entry point ($$TAG^ROUTINE). This function
"RTN","IMRVPPU",33,0)
 ;               accepts no parameters and must return either 0 if
"RTN","IMRVPPU",34,0)
 ;               everything is Ok or a negative error code.
"RTN","IMRVPPU",35,0)
 ;
"RTN","IMRVPPU",36,0)
 ; [PARAM]       Value to set checkpoint parameter to.
"RTN","IMRVPPU",37,0)
 ;
"RTN","IMRVPPU",38,0)
 ; The function checks if the checkpoint is completed. If it is not,
"RTN","IMRVPPU",39,0)
 ; the callback entry point is XECUTEd. If everything is Ok, the
"RTN","IMRVPPU",40,0)
 ; function will complete the checkpoint.
"RTN","IMRVPPU",41,0)
 ;
"RTN","IMRVPPU",42,0)
 ; Return Values:
"RTN","IMRVPPU",43,0)
 ;       <0  Error code
"RTN","IMRVPPU",44,0)
 ;        0  Ok
"RTN","IMRVPPU",45,0)
 ;
"RTN","IMRVPPU",46,0)
CP(CPNAME,CALLBACK,PARAM) ;
"RTN","IMRVPPU",47,0)
 N RC
"RTN","IMRVPPU",48,0)
 ;--- Verify the checkpoint and quit if it is completed
"RTN","IMRVPPU",49,0)
 S RC=$$VERCP^XPDUTL(CPNAME)  Q:RC>0 0
"RTN","IMRVPPU",50,0)
 ;--- Create the new checkpoint
"RTN","IMRVPPU",51,0)
 I RC<0  D  Q:'RC $$ERROR^IMRVPPE(-3,,CPNAME)
"RTN","IMRVPPU",52,0)
 . S RC=$$NEWCP^XPDUTL(CPNAME,,.PARAM)
"RTN","IMRVPPU",53,0)
 ;--- Reset the KIDS progress bar
"RTN","IMRVPPU",54,0)
 S XPDIDTOT=0  D UPDATE^XPDID(0)
"RTN","IMRVPPU",55,0)
 ;--- Execute the callback entry point
"RTN","IMRVPPU",56,0)
 X "S RC="_CALLBACK  Q:RC<0 RC
"RTN","IMRVPPU",57,0)
 ;--- Complete the check point
"RTN","IMRVPPU",58,0)
 S RC=$$COMCP^XPDUTL(CPNAME)
"RTN","IMRVPPU",59,0)
 Q:'RC $$ERROR^IMRVPPE(-4,,CPNAME)
"RTN","IMRVPPU",60,0)
 Q 0
"RTN","IMRVPPU",61,0)
 ;
"RTN","IMRVPPU",62,0)
 ;***** DISPLAYS INDENTED PRE OR POST-INSTALLATION MESSAGE
"RTN","IMRVPPU",63,0)
 ;
"RTN","IMRVPPU",64,0)
 ; [MSG]         Message text
"RTN","IMRVPPU",65,0)
 ; [.INFO]       Reference to a local array with additional text
"RTN","IMRVPPU",66,0)
 ; [SKIP]        Skip a line before the output (no, by default)
"RTN","IMRVPPU",67,0)
 ; [INDENT]      Number of indentation spaces (3, by default)
"RTN","IMRVPPU",68,0)
 ;
"RTN","IMRVPPU",69,0)
MSG(MSG,INFO,SKIP,INDENT) ;
"RTN","IMRVPPU",70,0)
 Q:$G(IMRVPP("SILENT"))
"RTN","IMRVPPU",71,0)
 N I,J,MSGTEXT,PI,SPACES
"RTN","IMRVPPU",72,0)
 S:$G(INDENT,-1)<0 INDENT=3
"RTN","IMRVPPU",73,0)
 ;--- Environment check or regular process
"RTN","IMRVPPU",74,0)
 I $D(XPDENV)!($G(XPDNM)="")  D  Q
"RTN","IMRVPPU",75,0)
 . S I=""  W:$G(SKIP) !  W:$G(MSG)'="" !?INDENT,MSG
"RTN","IMRVPPU",76,0)
 . F  S I=$O(INFO(I))  Q:I=""  W !?INDENT,INFO(I)
"RTN","IMRVPPU",77,0)
 ;--- Pre or post-installation process
"RTN","IMRVPPU",78,0)
 S J=0,SPACES=$J("",INDENT)
"RTN","IMRVPPU",79,0)
 S:$G(SKIP) J=J+1,MSGTEXT(J)=" "
"RTN","IMRVPPU",80,0)
 S:$G(MSG)'="" J=J+1,MSGTEXT(J)=SPACES_MSG
"RTN","IMRVPPU",81,0)
 S PI=$Q(INFO)
"RTN","IMRVPPU",82,0)
 F J=J+1:1  Q:PI=""  S MSGTEXT(J)=SPACES_@PI  S PI=$Q(@PI)
"RTN","IMRVPPU",83,0)
 D MES^XPDUTL(.MSGTEXT)
"RTN","IMRVPPU",84,0)
 Q
"RTN","IMRVPPU",85,0)
 ;
"RTN","IMRVPPU",86,0)
 ;***** PAUSES THE OUTPUT AT PAGE END
"RTN","IMRVPPU",87,0)
 ;
"RTN","IMRVPPU",88,0)
 ; [RESERVE]     Number of lines to reserve (none, by default)
"RTN","IMRVPPU",89,0)
 ; [FORCE]       Force the prompt
"RTN","IMRVPPU",90,0)
 ;
"RTN","IMRVPPU",91,0)
 ; Return values:
"RTN","IMRVPPU",92,0)
 ;       -2  Timeout
"RTN","IMRVPPU",93,0)
 ;       -1  User entered a '^'
"RTN","IMRVPPU",94,0)
 ;        0  Continue
"RTN","IMRVPPU",95,0)
 ;
"RTN","IMRVPPU",96,0)
PAGE(RESERVE,FORCE) ;
"RTN","IMRVPPU",97,0)
 Q:$G(IMRVPP("PGLEN"))'>0 0
"RTN","IMRVPPU",98,0)
 ;--- Check if the current page is full
"RTN","IMRVPPU",99,0)
 I '$G(FORCE)  D  Q:($Y+RESERVE)<IMRVPP("PGLEN") 0
"RTN","IMRVPPU",100,0)
 . I $G(RESERVE)'>0  S RESERVE=0  Q
"RTN","IMRVPPU",101,0)
 . S:RESERVE>IMRVPP("PGLEN") RESERVE=IMRVPP("PGLEN")
"RTN","IMRVPPU",102,0)
 ;--- Silent mode or non-interactive output device
"RTN","IMRVPPU",103,0)
 I $G(IMRVPP("SILENT"))!($G(IOST)'["C-")  S $Y=0  Q 0
"RTN","IMRVPPU",104,0)
 ;--- Display prompt and wait for input
"RTN","IMRVPPU",105,0)
 N DA,DIR,DIROUT,DIRUT,DTOUT,DUOUT,X,Y
"RTN","IMRVPPU",106,0)
 S DIR(0)="E"  D ^DIR  S $Y=0
"RTN","IMRVPPU",107,0)
 Q $S($D(DUOUT):-1,$D(DTOUT):-2,1:0)
"RTN","IMRVPPU",108,0)
 ;
"RTN","IMRVPPU",109,0)
 ;***** PRINTS COLUMNS
"RTN","IMRVPPU",110,0)
 ;
"RTN","IMRVPPU",111,0)
 ;
"RTN","IMRVPPU",112,0)
 ; .BUF          Reference to a local variable that will be used
"RTN","IMRVPPU",113,0)
 ;               as a buffer/descriptor for the output
"RTN","IMRVPPU",114,0)
 ;
"RTN","IMRVPPU",115,0)
 ; [VAL]         Either column value (if $G(MODE)=0) or maximum
"RTN","IMRVPPU",116,0)
 ;               length of column value (if MODE=1)
"RTN","IMRVPPU",117,0)
 ;
"RTN","IMRVPPU",118,0)
 ; [MODE]        Mode of execution:
"RTN","IMRVPPU",119,0)
 ;                 0  Output the column value (default)
"RTN","IMRVPPU",120,0)
 ;                 1  Initialize the buffer
"RTN","IMRVPPU",121,0)
 ;                 2  Flush the buffer
"RTN","IMRVPPU",122,0)
 ;
"RTN","IMRVPPU",123,0)
 ; Return values:
"RTN","IMRVPPU",124,0)
 ;       -6  Invalid parameter
"RTN","IMRVPPU",125,0)
 ;       -2  Timeout
"RTN","IMRVPPU",126,0)
 ;       -1  User entered a '^'
"RTN","IMRVPPU",127,0)
 ;        0  Continue
"RTN","IMRVPPU",128,0)
 ;
"RTN","IMRVPPU",129,0)
 ; NOTE: This entry point can also be called as a procedure:
"RTN","IMRVPPU",130,0)
 ;       D PRINTCL^IMRVPP1(...) if you do not need its return value.
"RTN","IMRVPPU",131,0)
 ;
"RTN","IMRVPPU",132,0)
PRINTCL(BUF,VAL,MODE) ;
"RTN","IMRVPPU",133,0)
 N RC  S RC=0
"RTN","IMRVPPU",134,0)
 ;--- Output the column value
"RTN","IMRVPPU",135,0)
 I '$G(MODE)  D  Q:$QUIT RC  Q
"RTN","IMRVPPU",136,0)
 . I '(BUF("I")#BUF("N"))  D  S RC=$$PAGE^IMRVPPU()
"RTN","IMRVPPU",137,0)
 . . D MSG(BUF)  S BUF=""
"RTN","IMRVPPU",138,0)
 . S BUF=BUF_$$LJ^XLFSTR(VAL,BUF("W")),BUF("I")=BUF("I")+1
"RTN","IMRVPPU",139,0)
 ;--- Initialize
"RTN","IMRVPPU",140,0)
 I MODE=1  D  Q:$QUIT 0  Q
"RTN","IMRVPPU",141,0)
 . K BUF  S BUF=" ",BUF("I")=0
"RTN","IMRVPPU",142,0)
 . S BUF("W")=VAL+2             S:BUF("W")'>2 BUF("W")=IOM-6
"RTN","IMRVPPU",143,0)
 . S BUF("N")=(IOM-6)\BUF("W")  S:BUF("N")'>0 BUF("N")=1
"RTN","IMRVPPU",144,0)
 ;--- Flush the buffer
"RTN","IMRVPPU",145,0)
 I MODE=2  D  Q:$QUIT 0  Q
"RTN","IMRVPPU",146,0)
 . D:BUF'="" MSG(BUF)  K BUF
"RTN","IMRVPPU",147,0)
 ;---
"RTN","IMRVPPU",148,0)
 Q:$QUIT $$ERROR^IMRVPPE(-6,,'MODE')  Q
"RTN","IMRVPPU",149,0)
 ;
"RTN","IMRVPPU",150,0)
 ;***** UPDATES THE PROGRESS INDICATOR
"RTN","IMRVPPU",151,0)
PROGRESS(VAL) ;
"RTN","IMRVPPU",152,0)
 Q:$G(IMRVPP("SILENT"))
"RTN","IMRVPPU",153,0)
 ;--- KIDS progress bar is not initialized
"RTN","IMRVPPU",154,0)
 I $G(XPDIDTOT)'>0  W "."  Q
"RTN","IMRVPPU",155,0)
 ;--- Environment check or regular process
"RTN","IMRVPPU",156,0)
 I $D(XPDENV)!($G(XPDNM)="")  W "."  Q
"RTN","IMRVPPU",157,0)
 ;--- Pre or post-installation process
"RTN","IMRVPPU",158,0)
 D UPDATE^XPDID(VAL)
"RTN","IMRVPPU",159,0)
 Q
"VER")
8.0^22.0
"BLD",6211,6)
^SEQ #18
**END**
**END**
