Released IB*2*335 SEQ #308
Extracted from mail message
**KIDS**:IB*2.0*335^

**INSTALL NAME**
IB*2.0*335
"BLD",6596,0)
IB*2.0*335^INTEGRATED BILLING^0^3060130^y
"BLD",6596,1,0)
^^2^2^3060130^
"BLD",6596,1,1,0)
When the site executes the [IB COPY AND CANCEL] option, an undefined error
"BLD",6596,1,2,0)
generates at line <UNDEFINED>OUTPT+89^IBCEF11.
"BLD",6596,4,0)
^9.64PA^^
"BLD",6596,"KRN",0)
^9.67PA^8989.52^19
"BLD",6596,"KRN",.4,0)
.4
"BLD",6596,"KRN",.401,0)
.401
"BLD",6596,"KRN",.402,0)
.402
"BLD",6596,"KRN",.403,0)
.403
"BLD",6596,"KRN",.5,0)
.5
"BLD",6596,"KRN",.84,0)
.84
"BLD",6596,"KRN",3.6,0)
3.6
"BLD",6596,"KRN",3.8,0)
3.8
"BLD",6596,"KRN",9.2,0)
9.2
"BLD",6596,"KRN",9.8,0)
9.8
"BLD",6596,"KRN",9.8,"NM",0)
^9.68A^1^1
"BLD",6596,"KRN",9.8,"NM",1,0)
IBCEF11^^0^B34672839
"BLD",6596,"KRN",9.8,"NM","B","IBCEF11",1)

"BLD",6596,"KRN",19,0)
19
"BLD",6596,"KRN",19.1,0)
19.1
"BLD",6596,"KRN",101,0)
101
"BLD",6596,"KRN",409.61,0)
409.61
"BLD",6596,"KRN",771,0)
771
"BLD",6596,"KRN",870,0)
870
"BLD",6596,"KRN",8989.51,0)
8989.51
"BLD",6596,"KRN",8989.52,0)
8989.52
"BLD",6596,"KRN",8994,0)
8994
"BLD",6596,"KRN","B",.4,.4)

"BLD",6596,"KRN","B",.401,.401)

"BLD",6596,"KRN","B",.402,.402)

"BLD",6596,"KRN","B",.403,.403)

"BLD",6596,"KRN","B",.5,.5)

"BLD",6596,"KRN","B",.84,.84)

"BLD",6596,"KRN","B",3.6,3.6)

"BLD",6596,"KRN","B",3.8,3.8)

"BLD",6596,"KRN","B",9.2,9.2)

"BLD",6596,"KRN","B",9.8,9.8)

"BLD",6596,"KRN","B",19,19)

"BLD",6596,"KRN","B",19.1,19.1)

"BLD",6596,"KRN","B",101,101)

"BLD",6596,"KRN","B",409.61,409.61)

"BLD",6596,"KRN","B",771,771)

"BLD",6596,"KRN","B",870,870)

"BLD",6596,"KRN","B",8989.51,8989.51)

"BLD",6596,"KRN","B",8989.52,8989.52)

"BLD",6596,"KRN","B",8994,8994)

"BLD",6596,"QUES",0)
^9.62^^
"BLD",6596,"REQB",0)
^9.611^1^1
"BLD",6596,"REQB",1,0)
IB*2.0*309^2
"BLD",6596,"REQB","B","IB*2.0*309",1)

"MBREQ")
0
"PKG",200,-1)
1^1
"PKG",200,0)
INTEGRATED BILLING^IB^INTEGRATED BILLING
"PKG",200,20,0)
^9.402P^1^1
"PKG",200,20,1,0)
2^^IBAXDR
"PKG",200,20,1,1)

"PKG",200,20,"B",2,1)

"PKG",200,22,0)
^9.49I^1^1
"PKG",200,22,1,0)
2.0^2940321^2990406^2447
"PKG",200,22,1,"PAH",1,0)
335^3060130
"PKG",200,22,1,"PAH",1,1,0)
^^2^2^3060130
"PKG",200,22,1,"PAH",1,1,1,0)
When the site executes the [IB COPY AND CANCEL] option, an undefined error
"PKG",200,22,1,"PAH",1,1,2,0)
generates at line <UNDEFINED>OUTPT+89^IBCEF11.
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
YES
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
YES
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
1
"RTN","IBCEF11")
0^1^B34672839^B35185539
"RTN","IBCEF11",1,0)
IBCEF11 ;ALB/TMP - FORMATTER SPECIFIC BILL FUNCTIONS - CONT ;30-JAN-96
"RTN","IBCEF11",2,0)
 ;;2.0;INTEGRATED BILLING;**51,137,155,309,335**;21-MAR-94
"RTN","IBCEF11",3,0)
 ;
"RTN","IBCEF11",4,0)
BOX24D(A,IB) ; Returns the lines for boxes 19-24 of the HCFA 1500 display
"RTN","IBCEF11",5,0)
 ; IB = flag is 1 if only box 24 is needed
"RTN","IBCEF11",6,0)
 Q $S('$G(IB):"36",1:"44")_"^55"
"RTN","IBCEF11",7,0)
 ;
"RTN","IBCEF11",8,0)
RCBOX() ; Returns the lines for revenue code boxes of the UB-92 display
"RTN","IBCEF11",9,0)
 Q "19^41"
"RTN","IBCEF11",10,0)
 ;
"RTN","IBCEF11",11,0)
OUTPT(IBIFN,IBPRINT) ; Returns an array of service line data from
"RTN","IBCEF11",12,0)
 ;                 HCFA 1500 box 24.  Output is in IBXDATA(n)
"RTN","IBCEF11",13,0)
 ; IBPRINT = print flag  1: return print fields
"RTN","IBCEF11",14,0)
 ;                       0: return EDI fields
"RTN","IBCEF11",15,0)
 ; Uses diagnosis array ^TMP("IBXSAVE",$J,"DX",IBIFN,DIAG CODE)=SEQ #
"RTN","IBCEF11",16,0)
 ;   if it already exists. If not, it builds it from N-DIAGNOSES element
"RTN","IBCEF11",17,0)
 ;
"RTN","IBCEF11",18,0)
 ; For EDI call: Returns IBXDATA(n)=
"RTN","IBCEF11",19,0)
 ;   begin date(YYYYMMDD)^end date(YYYYMMDD)^pos^tos^
"RTN","IBCEF11",20,0)
 ;   proc code/revenue code - if no procedure (not the pointers)^
"RTN","IBCEF11",21,0)
 ;   type of code^dx pointer(s)^unit charge^units^modifiers separated by;
"RTN","IBCEF11",22,0)
 ;   ^purchased charge amount ^anesthesia minutes^emergency indicator^
"RTN","IBCEF11",23,0)
 ;   lab-type service flag.
"RTN","IBCEF11",24,0)
 ;
"RTN","IBCEF11",25,0)
 ;   Also Returns IBXDATA(IBI,"COB",COB,m) with COB data for each line
"RTN","IBCEF11",26,0)
 ;      item found in an accepted EOB for the bill and = the reference
"RTN","IBCEF11",27,0)
 ;      line in the first '^' piece followed by the '0' node data of file
"RTN","IBCEF11",28,0)
 ;      361.115 (LINE LEVEL ADJUSTMENTS)
"RTN","IBCEF11",29,0)
 ;       COB = COB sequence # of adjustment's ins co, m = seq #
"RTN","IBCEF11",30,0)
 ;         -- AND --
"RTN","IBCEF11",31,0)
 ;    IBXDATA(IBI,"COB",COB,m,z,p)=
"RTN","IBCEF11",32,0)
 ;           the data on the '0' node for each subordinate entry of file
"RTN","IBCEF11",33,0)
 ;           361.11511 (REASONS) (Only first 3 pieces for 837 output)
"RTN","IBCEF11",34,0)
 ;       z = group code, sometimes preceeded by a space   p = seq #
"RTN","IBCEF11",35,0)
 ;
"RTN","IBCEF11",36,0)
 ; For Print call: Returns begin date(DDMMYYYY)^end date(DDMMYYYY) or
"RTN","IBCEF11",37,0)
 ;   null if equal to begin date^pos^tos^bedsection name(if no procedure)
"RTN","IBCEF11",38,0)
 ;   or procedure code(not the pointer)^ ... refer to EDI call results
"RTN","IBCEF11",39,0)
 ;   Also, IBXDATA(n,"TEXT")=the text to print on second line of box 24,
"RTN","IBCEF11",40,0)
 ;   If no procedure code, returns IBXDATA(n,"A")=rev code abbrev
"RTN","IBCEF11",41,0)
 ;
"RTN","IBCEF11",42,0)
 ;  For both calls, returns IBXDATA(n,item type,item ptr)=""
"RTN","IBCEF11",43,0)
 ;      -- AND --
"RTN","IBCEF11",44,0)
 ;   IBXDATA(n,"RX")=RX#^drug name^NDC^refill #^(re)fill date^qty^days
"RTN","IBCEF11",45,0)
 ;                   ^chrge^ien of file 362.4^NDC format
"RTN","IBCEF11",46,0)
 ;           If line references a prescription
"RTN","IBCEF11",47,0)
 ;      -- AND --
"RTN","IBCEF11",48,0)
 ;   If no revenue code for a prescription, returns IBXDATA(n,"ARX")=""
"RTN","IBCEF11",49,0)
 ;      -- AND --
"RTN","IBCEF11",50,0)
 ;   IBXDATA(n,"AUX")='AUX' node of the procedure entry
"RTN","IBCEF11",51,0)
 ;
"RTN","IBCEF11",52,0)
 N IB,IBI,IBJ,IBFLD,IBDXI,IBXIEN,Z,IBXTRA,IBRX,IBRX0,IBRX1,Z0,Z1
"RTN","IBCEF11",53,0)
 ;
"RTN","IBCEF11",54,0)
 K ^TMP($J,"IBITEM")
"RTN","IBCEF11",55,0)
 S ^TMP($J,"IBITEM")=""
"RTN","IBCEF11",56,0)
 ; Build diagnosis array if not already built
"RTN","IBCEF11",57,0)
 I $O(^TMP("IBXSAVE",$J,"DX",IBIFN,""))="",$O(^IBA(362.3,"AIFN"_IBIFN,"")) D
"RTN","IBCEF11",58,0)
 .N Z,IBXDATA D F^IBCEF("N-DIAGNOSES",,,IBIFN)
"RTN","IBCEF11",59,0)
 .S Z="" F  S Z=$O(IBXDATA(Z)) K:$O(IBXDATA(0))=""&(Z="") IBXDATA Q:Z=""  S:$P(IBXDATA(Z),U,2) ^TMP("IBXSAVE",$J,"DX",IBIFN,$P(IBXDATA(Z),U,2))=Z
"RTN","IBCEF11",60,0)
 ;
"RTN","IBCEF11",61,0)
 S IB(0)=$G(^DGCR(399,IBIFN,0)),IB("U")=$G(^("U")),IB("U1")=$G(^("U1"))
"RTN","IBCEF11",62,0)
 S IBI="" F  S IBI=$O(^TMP("IBXSAVE",$J,"DX",IBIFN,IBI)) Q:IBI=""  S IBDXI(IBI)=^(IBI)
"RTN","IBCEF11",63,0)
 I '$G(IBPRINT) D RVCE^IBCF23(IBIFN,IBIFN)
"RTN","IBCEF11",64,0)
 I $G(IBPRINT) D RVCE^IBCF23(,IBIFN)
"RTN","IBCEF11",65,0)
 ; Returns IBFLD(24) = begin date^end date^pos^tos^
"RTN","IBCEF11",66,0)
 ;     proc/bedsection/revenue code^dx pointer^unit charge^
"RTN","IBCEF11",67,0)
 ;     units^modifiers^ purchased charge amount ^anesthesia minutes^
"RTN","IBCEF11",68,0)
 ;     emergency indicator ^ AND
"RTN","IBCEF11",69,0)
 ;         IBFLD(24,n,type,item)=""
"RTN","IBCEF11",70,0)
 ;         IBFLD(24,n_"A") = revenue code abbreviation if no procedure
"RTN","IBCEF11",71,0)
 ;         IBFLD(24,n,"AUX") = 'AUX' node of line item 
"RTN","IBCEF11",72,0)
 ;         IBFLD(24,n,"RX") = soft pointer to file 362.4 from 'item' fld
"RTN","IBCEF11",73,0)
 ;                            (can be null)
"RTN","IBCEF11",74,0)
 ;
"RTN","IBCEF11",75,0)
 D SET^IBCSC5A(IBIFN,.IBRX) ;prescriptions
"RTN","IBCEF11",76,0)
 ; IBRX1(ien 362.4)=RX#^drug ien^NDC^refil #^(re)fil date^qty^days^chrge
"RTN","IBCEF11",77,0)
 I IBRX S IBRX="" F  S IBRX=$O(IBRX(IBRX)) Q:IBRX=""  S IBRX0=0 F  S IBRX0=$O(IBRX(IBRX,IBRX0)) Q:'IBRX0  D
"RTN","IBCEF11",78,0)
 . N IBRXH
"RTN","IBCEF11",79,0)
 . S IBRXH=IBRX(IBRX,IBRX0)
"RTN","IBCEF11",80,0)
 . S IBRX1(+IBRXH)=IBRX_U_$P(IBRXH,U,2)_U_$P(IBRXH,U,5)_U_$P(IBRXH,U,7)_U_IBRX0_U_$P(IBRXH,U,4)_U_$P(IBRXH,U,3)_U_$P(IBRXH,U,6)_U_+IBRXH_U_$P(IBRXH,U,8)
"RTN","IBCEF11",81,0)
 K IBRX
"RTN","IBCEF11",82,0)
 ;
"RTN","IBCEF11",83,0)
 S IBI=0
"RTN","IBCEF11",84,0)
 F  S IBI=$O(IBFLD(24,IBI)) Q:IBI'=+IBI  D
"RTN","IBCEF11",85,0)
 . S IBRX1=0
"RTN","IBCEF11",86,0)
 . I '$G(IBPRINT) Q:$P(IBFLD(24,IBI),U,7)*$P(IBFLD(24,IBI),U,8)'>0  ; For EDI, ignore 0-charge line items
"RTN","IBCEF11",87,0)
 . S IBXDATA(IBI)=$P(IBFLD(24,IBI),U)_U_$P(IBFLD(24,IBI),U,$S($P(IBFLD(24,IBI),U,2)=""&'$G(IBPRINT):1,1:2))
"RTN","IBCEF11",88,0)
 . S $P(IBXDATA(IBI),U,3,5)=$P(IBFLD(24,IBI),U,3,5)
"RTN","IBCEF11",89,0)
 . S $P(IBXDATA(IBI),U,6)=$S($D(IBFLD(24,IBI_"X")):"CJ",1:"HC")
"RTN","IBCEF11",90,0)
 . S $P(IBXDATA(IBI),U,7,13)=$P(IBFLD(24,IBI),U,6,12)
"RTN","IBCEF11",91,0)
 . S $P(IBXDATA(IBI),U,14)=+$$ISLAB(IBXDATA(IBI))
"RTN","IBCEF11",92,0)
 . I $D(IBFLD(24,IBI,"RX")) D  ;Rx
"RTN","IBCEF11",93,0)
 .. S IBRX1=1
"RTN","IBCEF11",94,0)
 .. I $P($G(IBFLD(24,IBI,"AUX")),U,8)'="" S $P(IBFLD(24,IBI,"AUX"),U,8)="" ;No free text allowed for rx's
"RTN","IBCEF11",95,0)
 .. I $D(IBRX1(+IBFLD(24,IBI,"RX"))) D  Q  ;Soft link exists
"RTN","IBCEF11",96,0)
 ...D ZERO^IBRXUTL(+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2))
"RTN","IBCEF11",97,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(+IBFLD(24,IBI,"RX")),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(+IBFLD(24,IBI,"RX")),U,2),.01)),1,30)
"RTN","IBCEF11",98,0)
 ... K IBRX1(+IBFLD(24,IBI,"RX"))
"RTN","IBCEF11",99,0)
 ... ; No soft link - must find the first Rx with the same charge
"RTN","IBCEF11",100,0)
 .. S IBRX="" F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  I +$P(IBRX1(IBRX),U,8)=+$P(IBXDATA(IBI),U,8) D  Q
"RTN","IBCEF11",101,0)
 ... D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",102,0)
 ... S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX) Q
"RTN","IBCEF11",103,0)
 . I $G(IBFLD(24,IBI,"AUX"))'="" D
"RTN","IBCEF11",104,0)
 .. I $G(IBPRINT),$P(IBFLD(24,IBI,"AUX"),U,8)'="" S IBXDATA(IBI,"TEXT")=$P(IBFLD(24,IBI,"AUX"),U,8),$P(IBFLD(24,IBI,"AUX"),U,8)=""
"RTN","IBCEF11",105,0)
 .. S IBXDATA(IBI,"AUX")=IBFLD(24,IBI,"AUX")
"RTN","IBCEF11",106,0)
 . I $G(IBPRINT) D
"RTN","IBCEF11",107,0)
 .. I '$P(IBXDATA(IBI),U,8),'$G(IBXDATA(IBI,"RX")) S:'$G(IBNOSHOW) IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS < #PROCEDURES, THEY MUST BE =" Q
"RTN","IBCEF11",108,0)
 .. I $G(IBFLD(24,IBI_"A"))'="" S IBXDATA(IBI,"A")=IBFLD(24,IBI_"A") S:'$G(IBNOSHOW) IBXDATA(IBI,"TEXT")="Warning:** REV CODE UNITS > #PROCEDURES, THEY MUST BE=: "_IBFLD(24,IBI_"A") Q
"RTN","IBCEF11",109,0)
 .. S IBRX=$G(IBXDATA(IBI,"RX"))
"RTN","IBCEF11",110,0)
 .. I IBRX'="" D  ;Format Rx detail
"RTN","IBCEF11",111,0)
 ... N Z
"RTN","IBCEF11",112,0)
 ... S Z=$P(IBRX,U)
"RTN","IBCEF11",113,0)
 ... S Z=$S(Z'="":"Rx#"_Z_" ",1:"RX: ")
"RTN","IBCEF11",114,0)
 ... S IBXDATA(IBI,"TEXT")=Z_$S($P(IBRX,U,3)'="":"NDC: "_$P(IBRX,U,3),1:"NOC: "_$P(IBRX,U,2))_" Qty: "_$P(IBRX,U,6)_" Days: "_$P(IBRX,U,7)
"RTN","IBCEF11",115,0)
 . I '$G(IBPRINT) D COBLINE^IBCEU6(IBIFN,IBI,.IBXDATA,,.IBXTRA)
"RTN","IBCEF11",116,0)
 I $G(IBPRINT) D
"RTN","IBCEF11",117,0)
 . S IBRX=0 F  S IBRX=$O(IBRX1(IBRX)) Q:'IBRX  D
"RTN","IBCEF11",118,0)
 .. S IBI=+$O(IBXDATA(""),-1)+1
"RTN","IBCEF11",119,0)
 .. S IBXDATA(IBI)=$$DATE($P(IBRX1(IBRX),U,5))
"RTN","IBCEF11",120,0)
 .. S IBXDATA(IBI,"TEXT")="**** ERROR - NO PROC LINK TO REV CODE FOR DRUG: RX#: "_$P(IBRX1(IBRX),U)_"  NDC #: "_$P(IBRX1(IBRX),U,3)
"RTN","IBCEF11",121,0)
 .. S IBXDATA(IBI,"ARX")=""
"RTN","IBCEF11",122,0)
 .. D ZERO^IBRXUTL(+$P(IBRX1(IBRX),U,2))
"RTN","IBCEF11",123,0)
 .. S IBXDATA(IBI,"RX")=IBRX1(IBRX),$P(IBXDATA(IBI,"RX"),U,2)=$E($G(^TMP($J,"IBDRUG",+$P(IBRX1(IBRX),U,2),.01)),1,30) K IBRX1(IBRX)
"RTN","IBCEF11",124,0)
 ;
"RTN","IBCEF11",125,0)
 I '$G(IBPRINT),$D(IBXTRA) D COMBO^IBCEU2(.IBXDATA,.IBXTRA,0) ;Handle bundled/unbundled lines
"RTN","IBCEF11",126,0)
 K ^TMP($J,"IBDRUG")
"RTN","IBCEF11",127,0)
 Q
"RTN","IBCEF11",128,0)
 ;
"RTN","IBCEF11",129,0)
ISLAB(LDATA) ; Returns 0/1 if line item data indicates the item is a lab (1)
"RTN","IBCEF11",130,0)
 ; 'LAB' is defined here as type of service = 5
"RTN","IBCEF11",131,0)
 Q $E($P(LDATA,U,4))="5"
"RTN","IBCEF11",132,0)
 ;
"RTN","IBCEF11",133,0)
FMT(DATA,DLEN,FLEN) ; Returns a string in DATA with a max length of DLEN
"RTN","IBCEF11",134,0)
 ;  and a field length of FLEN
"RTN","IBCEF11",135,0)
 Q $E($E(DATA,1,DLEN)_$J("",FLEN),1,FLEN)
"RTN","IBCEF11",136,0)
 ;
"RTN","IBCEF11",137,0)
DATE(X,DEL) ;  Returns FM date in X as MMxDDxYYYY  where x=DEL
"RTN","IBCEF11",138,0)
 S DEL=$G(DEL)
"RTN","IBCEF11",139,0)
 S X=$$DATE^IBCF2(X,1,1)
"RTN","IBCEF11",140,0)
 I X'="" S X=$E(X,1,2)_DEL_$E(X,3,4)_DEL_$E(X,5,8)
"RTN","IBCEF11",141,0)
 Q X
"RTN","IBCEF11",142,0)
 ;
"VER")
8.0^22.0
"BLD",6596,6)
^308
**END**
**END**
