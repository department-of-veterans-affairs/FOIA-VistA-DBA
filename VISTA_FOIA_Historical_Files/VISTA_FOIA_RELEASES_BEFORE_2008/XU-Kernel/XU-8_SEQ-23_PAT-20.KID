Released XU*8*20 SEQ #23
Extracted from mail message
**KIDS**:XU*8.0*20^

**INSTALL NAME**
XU*8.0*20
"BLD",82,0)
XU*8.0*20^KERNEL^0^2960209^n
"BLD",82,1,0)
^^89^89^2960520^
"BLD",82,1,1,0)
NOIS  DAY-0196-40185  If the listing of Unsuccessful Tasks was queued to
"BLD",82,1,2,0)
a printer it would cause a extra blank page on the printer.
"BLD",82,1,3,0)
 
"BLD",82,1,4,0)
NOIS  NAS-1295-30824  Entering a ^ to exit from a listing of tasks being
"BLD",82,1,5,0)
requeued would cause an UNDEF error.
"BLD",82,1,6,0)
 
"BLD",82,1,7,0)
MSG# 18395346 From Dave Alexander.  If in the Delete tasks option a "^" 
"BLD",82,1,8,0)
wouldn't stop the listing.
"BLD",82,1,9,0)
 
"BLD",82,1,10,0)
MSG# 19794130 From Dave Alexander.  This message asked for EN^XUTMDEVQ 
"BLD",82,1,11,0)
to not new POP so that the calling routine can check the status. 
"BLD",82,1,12,0)
 
"BLD",82,1,13,0)
A long standing requests to display more info on running tasks that have
"BLD",82,1,14,0)
deleted there entry in the %ZTSK global.
"BLD",82,1,15,0)
 
"BLD",82,1,16,0)
NOIS CLE-1195-40343  In the "Grant Access by Profile" option. Secondary
"BLD",82,1,17,0)
Menu items that were in common with current secondary menu items would
"BLD",82,1,18,0)
get duplicated.  This has been fixed be adding a "B" X-ref to the
"BLD",82,1,19,0)
Secondary Menu subfile.  A post init will re-index this new X-ref on
"BLD",82,1,20,0)
current entries.  The adding of this B X-ref made it necessary to make
"BLD",82,1,21,0)
changes to other XQ routines that loop through the secondary menu list.
"BLD",82,1,22,0)
  
"BLD",82,1,23,0)
NOIS BUT-1295-20458  BOS-0496-10026
"BLD",82,1,24,0)
In the "Grant Access by Profile" option. The 
"BLD",82,1,25,0)
deletion of Keys, Files and Secondary options didn't work. If this
"BLD",82,1,26,0)
option was run twice in a row it would not use the new template user.
"BLD",82,1,27,0)
This would only happen if the job wasn't queued. This has been fixed.
"BLD",82,1,28,0)
 
"BLD",82,1,29,0)
NOIS --- The entry point EN^XQH leaves the variable XQH behind. This can
"BLD",82,1,30,0)
cause problems if the user goes back into XQH.  The change kills XQH at
"BLD",82,1,31,0)
the exit from the EN^XQH call.
"BLD",82,1,32,0)
 
"BLD",82,1,33,0)
MSG# 19316051  It has been pointed out that files 4 and 49 are missing
"BLD",82,1,34,0)
the data type flag from the second piece of the .01 field.  The .01 field
"BLD",82,1,35,0)
for both files is included.
"BLD",82,1,36,0)
 
"BLD",82,1,37,0)
It was pointed out that the QUEUED TO RUN ON VOLUME SET field in the 
"BLD",82,1,38,0)
OPTION SCHEDULING file would not allow the use of the NODE syntax
"BLD",82,1,39,0)
that is allowed in the DEVICE file.
"BLD",82,1,40,0)
 
"BLD",82,1,41,0)
DAY-0196-42100,  HUN-1195-21343,  BRX-1095-12548
"BLD",82,1,42,0)
After a user process all the alerts, it still asks to process alerts even       
"BLD",82,1,43,0)
though there no more alerts. it is nuisance. Why it happening? in XQALERT1      
"BLD",82,1,44,0)
DOIT+8 it  checks for the values XQX1 and XQAROU. After all alerts are          
"BLD",82,1,45,0)
processed, XQX1 is cleaned up properly but not XQAROU.  
"BLD",82,1,46,0)
 
"BLD",82,1,47,0)
 
"BLD",82,1,48,0)
routine         new checksum
"BLD",82,1,49,0)
XQ12             17600046
"BLD",82,1,50,0)
XQALERT1         19524336
"BLD",82,1,51,0)
XQH               8473100
"BLD",82,1,52,0)
XQLOCK           12699105
"BLD",82,1,53,0)
XQT              13634679
"BLD",82,1,54,0)
XQTOC             9046523
"BLD",82,1,55,0)
XUSERBLK         10269237
"BLD",82,1,56,0)
XUTMG19           3660168
"BLD",82,1,57,0)
XUTMD1            2754306
"BLD",82,1,58,0)
XUTMDEVQ           268897
"BLD",82,1,59,0)
XUTMQ             8141476
"BLD",82,1,60,0)
XUTMRP           15458022
"BLD",82,1,61,0)
XUTMTP           10672535
"BLD",82,1,62,0)
XUTMTP1           5115647
"BLD",82,1,63,0)
XUTMTPD           6357425
"BLD",82,1,64,0)
XUTMTPU           5891396
"BLD",82,1,65,0)
XUTMUTL           2233454
"BLD",82,1,66,0)
 
"BLD",82,1,67,0)
========================================================================= 
"BLD",82,1,68,0)
Installation:
"BLD",82,1,69,0)
 
"BLD",82,1,70,0)
 1. These routines may be mapped on systems that allow mapping, 
"BLD",82,1,71,0)
    if so you will need to disable mapping for the effected routines.  
"BLD",82,1,72,0)
 2. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"BLD",82,1,73,0)
    option will load the KIDS package in this message onto your system.
"BLD",82,1,74,0)
 3. Answer NO to the question:
"BLD",82,1,75,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"BLD",82,1,76,0)
 4. From the 'Installation Menu' of the KIDS menu, run the option
"BLD",82,1,77,0)
    'Verify Checksums in Transport Global' and verify that all routines
"BLD",82,1,78,0)
    have the correct checksum.
"BLD",82,1,79,0)
 5. Users can be on the system.
"BLD",82,1,80,0)
 6. From the 'Installation Menu' of the KIDS menu, run the option
"BLD",82,1,81,0)
    'Install Package(s)' Select the package 'XU*8.0*20' and proceed with
"BLD",82,1,82,0)
    install.
"BLD",82,1,83,0)
    Their is a POST-INIT that will run to build a B X-ref for the
"BLD",82,1,84,0)
    Secondary menu in the New Person file.
"BLD",82,1,85,0)
 7. If you are a MSM site move the routines to the other servers.  
"BLD",82,1,86,0)
    On a mapped system, rebuild your map set.  
"BLD",82,1,87,0)
 
"BLD",82,1,88,0)
 
"BLD",82,1,89,0)
=========================================================================
"BLD",82,4,0)
^9.64PA^49^3
"BLD",82,4,4,0)
4
"BLD",82,4,4,2,0)
^9.641^4^1
"BLD",82,4,4,2,4,0)
INSTITUTION  (File-top level)
"BLD",82,4,4,2,4,1,0)
^9.6411^.01^1
"BLD",82,4,4,2,4,1,.01,0)
NAME
"BLD",82,4,4,222)
y^n^p^^^^n
"BLD",82,4,49,0)
49
"BLD",82,4,49,2,0)
^9.641^49^1
"BLD",82,4,49,2,49,0)
SERVICE/SECTION  (File-top level)
"BLD",82,4,49,2,49,1,0)
^9.6411^.01^1
"BLD",82,4,49,2,49,1,.01,0)
NAME
"BLD",82,4,49,222)
y^n^p^^^^n
"BLD",82,4,200,0)
200
"BLD",82,4,200,2,0)
^9.641^200.03^1
"BLD",82,4,200,2,200.03,0)
SECONDARY MENU OPTIONS  (sub-file)
"BLD",82,4,200,2,200.03,1,0)
^9.6411^.01^1
"BLD",82,4,200,2,200.03,1,.01,0)
SECONDARY MENU OPTIONS
"BLD",82,4,200,222)
y^n^p^^^^n
"BLD",82,4,"APDD",4,4)

"BLD",82,4,"APDD",4,4,.01)

"BLD",82,4,"APDD",49,49)

"BLD",82,4,"APDD",49,49,.01)

"BLD",82,4,"APDD",200,200.03)

"BLD",82,4,"APDD",200,200.03,.01)

"BLD",82,4,"B",4,4)

"BLD",82,4,"B",49,49)

"BLD",82,4,"B",200,200)

"BLD",82,"ABPKG")
n
"BLD",82,"INIT")
POST1^XUINPCH
"BLD",82,"KRN",0)
^9.67PA^8994^15
"BLD",82,"KRN",.4,0)
.4
"BLD",82,"KRN",.401,0)
.401
"BLD",82,"KRN",.402,0)
.402
"BLD",82,"KRN",.403,0)
.403
"BLD",82,"KRN",.5,0)
.5
"BLD",82,"KRN",.84,0)
.84
"BLD",82,"KRN",3.6,0)
3.6
"BLD",82,"KRN",9.2,0)
9.2
"BLD",82,"KRN",9.8,0)
9.8
"BLD",82,"KRN",9.8,"NM",0)
^9.68A^17^17
"BLD",82,"KRN",9.8,"NM",1,0)
XUTMQ^^0^B14315136
"BLD",82,"KRN",9.8,"NM",2,0)
XQ12^^0^B35713641
"BLD",82,"KRN",9.8,"NM",3,0)
XUTMRP^^0^B29681742
"BLD",82,"KRN",9.8,"NM",4,0)
XUTMTP^^0^B17976930
"BLD",82,"KRN",9.8,"NM",5,0)
XUTMTP1^^0^B6283475
"BLD",82,"KRN",9.8,"NM",6,0)
XUTMD1^^0^B4665770
"BLD",82,"KRN",9.8,"NM",7,0)
XUTMTPD^^0^B8202027
"BLD",82,"KRN",9.8,"NM",8,0)
XUTMTPU^^0^B7079111
"BLD",82,"KRN",9.8,"NM",9,0)
XUSERBLK^^0^B23549599
"BLD",82,"KRN",9.8,"NM",10,0)
XQH^^0^B11981874
"BLD",82,"KRN",9.8,"NM",11,0)
XQLOCK^^0^B25151105
"BLD",82,"KRN",9.8,"NM",12,0)
XQT^^0^B24735803
"BLD",82,"KRN",9.8,"NM",13,0)
XQTOC^^0^B13045603
"BLD",82,"KRN",9.8,"NM",14,0)
XUTMUTL^^0^B2927874
"BLD",82,"KRN",9.8,"NM",15,0)
XUTMG19^^0^B12581666
"BLD",82,"KRN",9.8,"NM",16,0)
XQALERT1^^0^B27919511
"BLD",82,"KRN",9.8,"NM",17,0)
XUTMDEVQ^^0^B534767
"BLD",82,"KRN",9.8,"NM","B","XQ12",2)

"BLD",82,"KRN",9.8,"NM","B","XQALERT1",16)

"BLD",82,"KRN",9.8,"NM","B","XQH",10)

"BLD",82,"KRN",9.8,"NM","B","XQLOCK",11)

"BLD",82,"KRN",9.8,"NM","B","XQT",12)

"BLD",82,"KRN",9.8,"NM","B","XQTOC",13)

"BLD",82,"KRN",9.8,"NM","B","XUSERBLK",9)

"BLD",82,"KRN",9.8,"NM","B","XUTMD1",6)

"BLD",82,"KRN",9.8,"NM","B","XUTMDEVQ",17)

"BLD",82,"KRN",9.8,"NM","B","XUTMG19",15)

"BLD",82,"KRN",9.8,"NM","B","XUTMQ",1)

"BLD",82,"KRN",9.8,"NM","B","XUTMRP",3)

"BLD",82,"KRN",9.8,"NM","B","XUTMTP",4)

"BLD",82,"KRN",9.8,"NM","B","XUTMTP1",5)

"BLD",82,"KRN",9.8,"NM","B","XUTMTPD",7)

"BLD",82,"KRN",9.8,"NM","B","XUTMTPU",8)

"BLD",82,"KRN",9.8,"NM","B","XUTMUTL",14)

"BLD",82,"KRN",19,0)
19
"BLD",82,"KRN",19.1,0)
19.1
"BLD",82,"KRN",101,0)
101
"BLD",82,"KRN",409.61,0)
409.61
"BLD",82,"KRN",8994,0)
8994
"BLD",82,"KRN",8995,0)
8995
"BLD",82,"KRN","B",.4,.4)

"BLD",82,"KRN","B",.401,.401)

"BLD",82,"KRN","B",.402,.402)

"BLD",82,"KRN","B",.403,.403)

"BLD",82,"KRN","B",.5,.5)

"BLD",82,"KRN","B",.84,.84)

"BLD",82,"KRN","B",3.6,3.6)

"BLD",82,"KRN","B",9.2,9.2)

"BLD",82,"KRN","B",9.8,9.8)

"BLD",82,"KRN","B",19,19)

"BLD",82,"KRN","B",19.1,19.1)

"BLD",82,"KRN","B",101,101)

"BLD",82,"KRN","B",409.61,409.61)

"BLD",82,"KRN","B",8994,8994)

"BLD",82,"KRN","B",8995,8995)

"BLD",82,"QUES",0)
^9.62^^
"FIA",4)
INSTITUTION
"FIA",4,0)
^DIC(4,
"FIA",4,0,0)
4I
"FIA",4,0,1)
y^n^p^^^^n
"FIA",4,0,10)

"FIA",4,0,11)

"FIA",4,0,"RLRO")

"FIA",4,0,"VR")
8.0^XU
"FIA",4,4)
1
"FIA",4,4,.01)

"FIA",49)
SERVICE/SECTION
"FIA",49,0)
^DIC(49,
"FIA",49,0,0)
49I
"FIA",49,0,1)
y^n^p^^^^n
"FIA",49,0,10)

"FIA",49,0,11)

"FIA",49,0,"RLRO")

"FIA",49,0,"VR")
8.0^XU
"FIA",49,49)
1
"FIA",49,49,.01)

"FIA",200)
NEW PERSON
"FIA",200,0)
^VA(200,
"FIA",200,0,0)
200I
"FIA",200,0,1)
y^n^p^^^^n
"FIA",200,0,10)

"FIA",200,0,11)

"FIA",200,0,"RLRO")

"FIA",200,0,"VR")
8.0^XU
"FIA",200,200)
1
"FIA",200,200,203)

"FIA",200,200.03)
1
"FIA",200,200.03,.01)

"INIT")
POST1^XUINPCH
"PKG",283,-1)
1^1
"PKG",283,0)
KERNEL^XU^SIGN-ON, SECURITY, MENU DRIVER, DEVICES, TASKMAN^
"PKG",283,22,0)
^9.49I^1^1
"PKG",283,22,1,0)
8.0^2950729^2950729^6
"PKG",283,22,1,"PAH",1,0)
20^2960209^2
"PKG",283,22,1,"PAH",1,1,0)
^^89^89^2960520
"PKG",283,22,1,"PAH",1,1,1,0)
NOIS  DAY-0196-40185  If the listing of Unsuccessful Tasks was queued to
"PKG",283,22,1,"PAH",1,1,2,0)
a printer it would cause a extra blank page on the printer.
"PKG",283,22,1,"PAH",1,1,3,0)
 
"PKG",283,22,1,"PAH",1,1,4,0)
NOIS  NAS-1295-30824  Entering a ^ to exit from a listing of tasks being
"PKG",283,22,1,"PAH",1,1,5,0)
requeued would cause an UNDEF error.
"PKG",283,22,1,"PAH",1,1,6,0)
 
"PKG",283,22,1,"PAH",1,1,7,0)
MSG# 18395346 From Dave Alexander.  If in the Delete tasks option a "^" 
"PKG",283,22,1,"PAH",1,1,8,0)
wouldn't stop the listing.
"PKG",283,22,1,"PAH",1,1,9,0)
 
"PKG",283,22,1,"PAH",1,1,10,0)
MSG# 19794130 From Dave Alexander.  This message asked for EN^XUTMDEVQ 
"PKG",283,22,1,"PAH",1,1,11,0)
to not new POP so that the calling routine can check the status. 
"PKG",283,22,1,"PAH",1,1,12,0)
 
"PKG",283,22,1,"PAH",1,1,13,0)
A long standing requests to display more info on running tasks that have
"PKG",283,22,1,"PAH",1,1,14,0)
deleted there entry in the %ZTSK global.
"PKG",283,22,1,"PAH",1,1,15,0)
 
"PKG",283,22,1,"PAH",1,1,16,0)
NOIS CLE-1195-40343  In the "Grant Access by Profile" option. Secondary
"PKG",283,22,1,"PAH",1,1,17,0)
Menu items that were in common with current secondary menu items would
"PKG",283,22,1,"PAH",1,1,18,0)
get duplicated.  This has been fixed be adding a "B" X-ref to the
"PKG",283,22,1,"PAH",1,1,19,0)
Secondary Menu subfile.  A post init will re-index this new X-ref on
"PKG",283,22,1,"PAH",1,1,20,0)
current entries.  The adding of this B X-ref made it necessary to make
"PKG",283,22,1,"PAH",1,1,21,0)
changes to other XQ routines that loop through the secondary menu list.
"PKG",283,22,1,"PAH",1,1,22,0)
  
"PKG",283,22,1,"PAH",1,1,23,0)
NOIS BUT-1295-20458  BOS-0496-10026
"PKG",283,22,1,"PAH",1,1,24,0)
In the "Grant Access by Profile" option. The 
"PKG",283,22,1,"PAH",1,1,25,0)
deletion of Keys, Files and Secondary options didn't work. If this
"PKG",283,22,1,"PAH",1,1,26,0)
option was run twice in a row it would not use the new template user.
"PKG",283,22,1,"PAH",1,1,27,0)
This would only happen if the job wasn't queued. This has been fixed.
"PKG",283,22,1,"PAH",1,1,28,0)
 
"PKG",283,22,1,"PAH",1,1,29,0)
NOIS --- The entry point EN^XQH leaves the variable XQH behind. This can
"PKG",283,22,1,"PAH",1,1,30,0)
cause problems if the user goes back into XQH.  The change kills XQH at
"PKG",283,22,1,"PAH",1,1,31,0)
the exit from the EN^XQH call.
"PKG",283,22,1,"PAH",1,1,32,0)
 
"PKG",283,22,1,"PAH",1,1,33,0)
MSG# 19316051  It has been pointed out that files 4 and 49 are missing
"PKG",283,22,1,"PAH",1,1,34,0)
the data type flag from the second piece of the .01 field.  The .01 field
"PKG",283,22,1,"PAH",1,1,35,0)
for both files is included.
"PKG",283,22,1,"PAH",1,1,36,0)
 
"PKG",283,22,1,"PAH",1,1,37,0)
It was pointed out that the QUEUED TO RUN ON VOLUME SET field in the 
"PKG",283,22,1,"PAH",1,1,38,0)
OPTION SCHEDULING file would not allow the use of the NODE syntax
"PKG",283,22,1,"PAH",1,1,39,0)
that is allowed in the DEVICE file.
"PKG",283,22,1,"PAH",1,1,40,0)
 
"PKG",283,22,1,"PAH",1,1,41,0)
DAY-0196-42100,  HUN-1195-21343,  BRX-1095-12548
"PKG",283,22,1,"PAH",1,1,42,0)
After a user process all the alerts, it still asks to process alerts even       
"PKG",283,22,1,"PAH",1,1,43,0)
though there no more alerts. it is nuisance. Why it happening? in XQALERT1      
"PKG",283,22,1,"PAH",1,1,44,0)
DOIT+8 it  checks for the values XQX1 and XQAROU. After all alerts are          
"PKG",283,22,1,"PAH",1,1,45,0)
processed, XQX1 is cleaned up properly but not XQAROU.  
"PKG",283,22,1,"PAH",1,1,46,0)
 
"PKG",283,22,1,"PAH",1,1,47,0)
 
"PKG",283,22,1,"PAH",1,1,48,0)
routine         new checksum
"PKG",283,22,1,"PAH",1,1,49,0)
XQ12             17600046
"PKG",283,22,1,"PAH",1,1,50,0)
XQALERT1         19524336
"PKG",283,22,1,"PAH",1,1,51,0)
XQH               8473100
"PKG",283,22,1,"PAH",1,1,52,0)
XQLOCK           12699105
"PKG",283,22,1,"PAH",1,1,53,0)
XQT              13634679
"PKG",283,22,1,"PAH",1,1,54,0)
XQTOC             9046523
"PKG",283,22,1,"PAH",1,1,55,0)
XUSERBLK         10269237
"PKG",283,22,1,"PAH",1,1,56,0)
XUTMG19           3660168
"PKG",283,22,1,"PAH",1,1,57,0)
XUTMD1            2754306
"PKG",283,22,1,"PAH",1,1,58,0)
XUTMDEVQ           268897
"PKG",283,22,1,"PAH",1,1,59,0)
XUTMQ             8141476
"PKG",283,22,1,"PAH",1,1,60,0)
XUTMRP           15458022
"PKG",283,22,1,"PAH",1,1,61,0)
XUTMTP           10672535
"PKG",283,22,1,"PAH",1,1,62,0)
XUTMTP1           5115647
"PKG",283,22,1,"PAH",1,1,63,0)
XUTMTPD           6357425
"PKG",283,22,1,"PAH",1,1,64,0)
XUTMTPU           5891396
"PKG",283,22,1,"PAH",1,1,65,0)
XUTMUTL           2233454
"PKG",283,22,1,"PAH",1,1,66,0)
 
"PKG",283,22,1,"PAH",1,1,67,0)
========================================================================= 
"PKG",283,22,1,"PAH",1,1,68,0)
Installation:
"PKG",283,22,1,"PAH",1,1,69,0)
 
"PKG",283,22,1,"PAH",1,1,70,0)
 1. These routines may be mapped on systems that allow mapping, 
"PKG",283,22,1,"PAH",1,1,71,0)
    if so you will need to disable mapping for the effected routines.  
"PKG",283,22,1,"PAH",1,1,72,0)
 2. Use the 'INSTALL/CHECK MESSAGE' option on the PackMan menu. This
"PKG",283,22,1,"PAH",1,1,73,0)
    option will load the KIDS package in this message onto your system.
"PKG",283,22,1,"PAH",1,1,74,0)
 3. Answer NO to the question:
"PKG",283,22,1,"PAH",1,1,75,0)
    'Shall I preserve what is on disk in a separate back-up message ?'
"PKG",283,22,1,"PAH",1,1,76,0)
 4. From the 'Installation Menu' of the KIDS menu, run the option
"PKG",283,22,1,"PAH",1,1,77,0)
    'Verify Checksums in Transport Global' and verify that all routines
"PKG",283,22,1,"PAH",1,1,78,0)
    have the correct checksum.
"PKG",283,22,1,"PAH",1,1,79,0)
 5. Users can be on the system.
"PKG",283,22,1,"PAH",1,1,80,0)
 6. From the 'Installation Menu' of the KIDS menu, run the option
"PKG",283,22,1,"PAH",1,1,81,0)
    'Install Package(s)' Select the package 'XU*8.0*20' and proceed with
"PKG",283,22,1,"PAH",1,1,82,0)
    install.
"PKG",283,22,1,"PAH",1,1,83,0)
    Their is a POST-INIT that will run to build a B X-ref for the
"PKG",283,22,1,"PAH",1,1,84,0)
    Secondary menu in the New Person file.
"PKG",283,22,1,"PAH",1,1,85,0)
 7. If you are a MSM site move the routines to the other servers.  
"PKG",283,22,1,"PAH",1,1,86,0)
    On a mapped system, rebuild your map set.  
"PKG",283,22,1,"PAH",1,1,87,0)
 
"PKG",283,22,1,"PAH",1,1,88,0)
 
"PKG",283,22,1,"PAH",1,1,89,0)
=========================================================================
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
YES
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
18
"RTN","XQ12")
0^2^B35713641
"RTN","XQ12",1,0)
XQ12 ; SEA/MJM - MENU MANAGER UTILITIES ;2/15/96  09:42
"RTN","XQ12",2,0)
 ;;8.0;KERNEL;**9,20**;Jul 10, 1995
"RTN","XQ12",3,0)
 ;
"RTN","XQ12",4,0)
DVARS ;Set up (or reset) necessary variables. From ^XQ1 and ^XQT1.
"RTN","XQ12",5,0)
 S U="^" I '$D(DUZ)#2 S DUZ=^XUTL("XQ",$J,"DUZ")
"RTN","XQ12",6,0)
 S:'$D(DUZ(0))#2 DUZ(0)="" I DUZ(0)="" S:$D(^VA(200,DUZ,0)) DUZ(0)=$P(^(0),U,4)
"RTN","XQ12",7,0)
 I '$D(DT) D ^XQDATE S DT=$P(%,".")
"RTN","XQ12",8,0)
 I '$D(DUZ("AG")),$D(^XTV(8989.3,1,0)) S DUZ("AG")=$P(^(0),U,8)
"RTN","XQ12",9,0)
 I '$D(IOS) S IOS=$S($D(^XUTL("XQ",$J,"IOS"))#2:^("IOS"),1:"")
"RTN","XQ12",10,0)
 I '$D(DTIME) S DTIME=$$DTIME^XUP(DUZ,IOS)
"RTN","XQ12",11,0)
 I '$D(DUZ("AUTO")) S I=$S($D(^VA(200,DUZ,200)):$P(^(200),U,6),1:"") S:'$L(I) I=$S($D(^%ZIS(1,$I,"XUS")):$P(^("XUS"),U,6),1:"") S:'$L(I) I=$S($D(^XTV(8989.3,1,"XUS")):$P(^("XUS"),U,6),1:"") S:'$L(I) I=1 S DUZ("AUTO")=I
"RTN","XQ12",12,0)
 Q
"RTN","XQ12",13,0)
 ;
"RTN","XQ12",14,0)
INIT ;Entry for new logon, called from the top of ^XQ and ^XQ1
"RTN","XQ12",15,0)
 K DIC,Y Q:$D(DUZ)[0  Q:'$D(^VA(200,DUZ,0))
"RTN","XQ12",16,0)
 ;S:'$D(XQY) XQY=^VA(200,DUZ,201)
"RTN","XQ12",17,0)
 I '$D(XQUSER) S XQUSER=$P($P(^VA(200,DUZ,0),U),",",2)_" "_$P($P(^(0),U),",")
"RTN","XQ12",18,0)
 ;
"RTN","XQ12",19,0)
 ;Select device tied option, primary menu, or primary window
"RTN","XQ12",20,0)
 ;
"RTN","XQ12",21,0)
 S:'$D(XQY) XQY=""
"RTN","XQ12",22,0)
 S %=$G(^VA(200,DUZ,201)),^XUTL("XQ",$J,"XQM")=+%,^("XQW")=$P(%,"^",2)
"RTN","XQ12",23,0)
 D:'$D(IO) HOME^%ZIS
"RTN","XQ12",24,0)
 I IO]"" S %=$G(^%ZIS(1,IO,201)) I %]"" S XQY=%
"RTN","XQ12",25,0)
 I XQY']"" D
"RTN","XQ12",26,0)
 .S %=$G(^VA(200,DUZ,201))
"RTN","XQ12",27,0)
 .S XQPM=$P(%,U),XQPW=$P(%,U,2),XQSD=$P(%,U,3)
"RTN","XQ12",28,0)
 .I XQPW']"" S XQY=XQPM Q
"RTN","XQ12",29,0)
 .I XQSD="M" S XQY=XQPM
"RTN","XQ12",30,0)
 .E  S XQY=XQPW
"RTN","XQ12",31,0)
 .Q
"RTN","XQ12",32,0)
 ;
"RTN","XQ12",33,0)
 D SET^XQCHK
"RTN","XQ12",34,0)
 S ^XUTL("XQ",$J,1)=XQY_"P"_XQY_"^"_XQY0,^("T")=1
"RTN","XQ12",35,0)
 S XQDIC=XQY,XQPSN="P"_XQY
"RTN","XQ12",36,0)
 ;
"RTN","XQ12",37,0)
 ;Fire LOGIN menu template if they have one and its the first login
"RTN","XQ12",38,0)
 ;of the day.  XQXFLG("LLOG") is copy of ^VA(200,DUZ,1.1) before it's
"RTN","XQ12",39,0)
 ;updated at XUS1+47
"RTN","XQ12",40,0)
 I $D(^VA(200,DUZ,19.8,"B","LOGIN")) D
"RTN","XQ12",41,0)
 .Q:'$D(XQXFLG("LLOG"))
"RTN","XQ12",42,0)
 .S XQLAST=$P($P(XQXFLG("LLOG"),U),".") ;Get last login DT
"RTN","XQ12",43,0)
 .Q:+XQLAST<1
"RTN","XQ12",44,0)
 .I XQLAST<DT S XQUR="[LOGIN",XQJS=3
"RTN","XQ12",45,0)
 .K XQLAST
"RTN","XQ12",46,0)
 .Q
"RTN","XQ12",47,0)
 K XQXFLG("LLOG")
"RTN","XQ12",48,0)
 ;
"RTN","XQ12",49,0)
UI ;Entry for TaskMan (DUZ may =  0), from ZTSK^XQ1
"RTN","XQ12",50,0)
 D DVARS I '$D(^XUTL("XQ",$J,0)) D ^XQDATE S ^XUTL("XQ",$J,0)=%_U_%Y
"RTN","XQ12",51,0)
 S:'$D(XQDIC) XQDIC="P"_XQY
"RTN","XQ12",52,0)
 S:'$D(XQPSM) XQPSM="P"_XQY
"RTN","XQ12",53,0)
 S:'$D(XQJS)&'$D(ZTQUEUED) XQY0=^DIC(19,XQY,0),^XUTL("XQ",$J,"T")=0,^("DUZ")=DUZ,^("XQM")=XQY,XQPSM="P"_XQY
"RTN","XQ12",54,0)
 S XQCY=XQY D ^XQCHK I XQCY<1 D
"RTN","XQ12",55,0)
 .S XQPRMN=1,XQL=0
"RTN","XQ12",56,0)
 .D:'$D(ZTQUEUED) MES^XQCHK,PAUSE^XQ6
"RTN","XQ12",57,0)
 .;G:'$D(ZTQUEUED) ^XUSCLEAN S XQY=-1
"RTN","XQ12",58,0)
 .S XQY=-1
"RTN","XQ12",59,0)
 .Q
"RTN","XQ12",60,0)
 S XQM3="" I $P(XQY0,U,4)'="A",$P(XQY0,U,14),$D(^DIC(19,XQY,20)),$L(^(20)) X ^(20)
"RTN","XQ12",61,0)
 I $D(XQUIT),'$D(ZTQUEUED) S XQL=0 W !!,"The variable XQUIT was encountered in the Entry Action of your Primary Menu." D PAUSE^XQ6 S XQY=-1 G ^XUSCLEAN
"RTN","XQ12",62,0)
 ;I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) X ^(26)
"RTN","XQ12",63,0)
ABT ;WARNING: XQXFLG is also used by OERR test sites.
"RTN","XQ12",64,0)
 S $P(XQXFLG,U)=$S($O(^XTV(8989.3,1,"ABPKG",0))>0:1,1:0)
"RTN","XQ12",65,0)
CMP S $P(XQXFLG,U,2)=$S('$D(^XTV(8989.3,1,"XUCP")):0,1:^("XUCP")="Y")
"RTN","XQ12",66,0)
 K %,%Y,PGM,X,XQCY,XQPM,XQPW,XQSD
"RTN","XQ12",67,0)
 Q
"RTN","XQ12",68,0)
 ;
"RTN","XQ12",69,0)
LOGOPT ;Option audit
"RTN","XQ12",70,0)
 S:'$D(XQLTL) XQLTL=""
"RTN","XQ12",71,0)
 S %=$P($H,",",2),%=DT_(%\60#60/100+(%\3600)+(%#60/10000)/100)
"RTN","XQ12",72,0)
 I XQLTL S $P(^XUSEC(19,XQLTL,0),U,5)=%,XQLTL=0
"RTN","XQ12",73,0)
 S I=1 I XQAUDIT'=1 S I=0 F J=1:2 S K1=$P(XQAUDIT,U,J),K2=$P(XQAUDIT,U,J+1) Q:'$L(K1)!I  I K1=2&(K2=XQY)!(K1=3&($E($P(XQY0,U,1),1,$L(K2))=K2)) S I=1
"RTN","XQ12",74,0)
 Q:'I  S XQLTL=% L +^XUSEC(19,0) S %=^XUSEC(19,0),XQLTL=XQLTL+(.00000001*$S(XQLTL'=$E($P(%,U,3),1,14):10,1:$E($P(%,U,3),15,16)+1)),$P(^(0),U,3,4)=XQLTL_"^"_($P(%,U,4)+1) L -^XUSEC(19,0)
"RTN","XQ12",75,0)
 D GETENV^%ZOSV S XUVOL=$P(Y,U,2),^XUSEC(19,XQLTL,0)=XQY_U_DUZ_U_$I_U_$J_"^^"_XUVOL
"RTN","XQ12",76,0)
 Q
"RTN","XQ12",77,0)
XPRMP D CHK^XM W !!,"Do you really want to ",$S(XQUR="REST":"restart",1:"halt"),"? YES// " R X:10 S:'$L(X) X="Y"
"RTN","XQ12",78,0)
 I "Yy"'[$E(X) S Y=1 S:^XUTL("XQ",$J,"T")>1 Y=^("T")-1 S ^("T")=Y,Y=^(Y),XQY0=$P(Y,U,2,99),XQPSM=$P(Y,U,1),(XQY,XQDIC)=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3),XQAA="Select "_$P(XQY0,U,2)_" Option: " W ! G ASK^XQ
"RTN","XQ12",79,0)
 G REST:XQUR="REST",HALT:XQUR'="CON"
"RTN","XQ12",80,0)
 ;
"RTN","XQ12",81,0)
CON ;Continue option logic.  Enter from ASK^XQ on timeout.
"RTN","XQ12",82,0)
 W !!,"Do you want to halt and continue with this option later? YES// " R XQUR:20 S:(XQUR="")!('$T) XQUR="Y"
"RTN","XQ12",83,0)
 I "YyNn"'[$E(XQUR,1) W !!,"   If you enter 'Y' or 'RETURN' you will halt and continue here next time",!,"    you logon to the computer.",!,"   If you enter 'N' you will resume processing where you were." G CON
"RTN","XQ12",84,0)
 I "Nn"[$E(XQUR,1) W ! S XQUR=0,Y=^XUTL("XQ",$J,"T"),Y=^(Y),XQY0=$P(Y,U,2,99),XQPSM=$P(Y,U,1),(XQY,XQDIC)=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3),XQAA="Select "_$P(XQY0,U,2)_" Option: " G ASK^XQ
"RTN","XQ12",85,0)
 S X=^XUTL("XQ",$J,^XUTL("XQ",$J,"T")),Y=^("XQM") I (+X'=+Y) S XQM="P"_+Y S XQPSM=$S($D(^XUTL("XQO",XQM,"^",+X)):XQM,$D(^XUTL("XQO","PXU","^",+X)):"PXU",1:"") D:XQPSM="" SS S:XQPSM'="" ^VA(200,DUZ,202.1)=+X_XQPSM
"RTN","XQ12",86,0)
 S X=$P($H,",",2),X=(X>41400&(X<46800))
"RTN","XQ12",87,0)
 W !!,$P("HMM^OK^ALL RIGHT^WELL CERTAINLY^FINE","^",$R(5)+1),"... ",$P("SEE YOU LATER^I'LL BE READY WHEN YOU ARE.^HURRY BACK!^HAVE A GOOD LUNCH BREAK!","^",$R(3)+X+1)
"RTN","XQ12",88,0)
HALT ;
"RTN","XQ12",89,0)
 G H^XUS
"RTN","XQ12",90,0)
REST S XQNOHALT=1 D ^XUSCLEAN G ^XUS
"RTN","XQ12",91,0)
 ;
"RTN","XQ12",92,0)
SS ;Search Secondaries for a particuloar option.
"RTN","XQ12",93,0)
 Q:'$D(^VA(200,DUZ,203,0))  Q:$P(^VA(200,DUZ,203,0),U,4)<1
"RTN","XQ12",94,0)
 S Y=0 F XQI=1:1 Q:XQPSM'=""  S Y=$O(^VA(200,DUZ,203,Y)) Q:Y'>0  S %=^(Y,0) I $D(^XUTL("XQO","P"_%,"^",+X)) S XQPSM="U"_DUZ_",P"_%
"RTN","XQ12",95,0)
 Q
"RTN","XQ12",96,0)
ABLOG S %2=0 F %3=0:0 S %2=$O(^XTV(8989.3,1,"ABPKG",%2)) Q:%2'>0  F %=0:0 S %=$O(^XTV(8989.3,1,"ABPKG",%2,1,%)) Q:%'>0  S %1=$P(^(%,0),U) I $E(XQY0,1,$L(%1))=%1,$E(XQY0,$L(%1)+1)'="Z" D ABLOG1
"RTN","XQ12",97,0)
 K %,%1,%2,%3,%4
"RTN","XQ12",98,0)
 Q
"RTN","XQ12",99,0)
ABLOG1 F %4=0:0 S %4=$O(^XTV(8989.3,1,"ABPKG",%2,1,%,1,%4)) Q:%4'>0  S %1=$P(^(%4,0),U) I $E(XQY0,1,$L(%1))=%1 Q
"RTN","XQ12",100,0)
 I %4'>0 S:'$D(^XTV(8989.3,1,"ABOPT",0)) ^(0)="^8989.333P^" S:'$D(^(XQY)) %4=+$P(^(0),U,3),$P(^(0),U,3,4)=$S(XQY>%4:XQY,1:%4)_U_($P(^(0),U,4)+1) S ^(0)=XQY_U_($S($D(^(XQY,0)):$P(^(0),U,2),1:0)+1),%2="A"
"RTN","XQ12",101,0)
 Q
"RTN","XQALERT1")
0^16^B27919511
"RTN","XQALERT1",1,0)
XQALERT1 ;ISC-SF.SEA/JLI - ALERT HANDLER ;4/4/96  08:54
"RTN","XQALERT1",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XQALERT1",3,0)
 ;;
"RTN","XQALERT1",4,0)
 Q
"RTN","XQALERT1",5,0)
 ;
"RTN","XQALERT1",6,0)
DOIT I $D(XQX1),XQX1'>0 K XQX1
"RTN","XQALERT1",7,0)
 I $D(XQAKILL) D DELETEA^XQALERT
"RTN","XQALERT1",8,0)
 I '$D(XQX1),$O(^XTV(8992,XQAUSER,"XQA",0))'>0,$G(XQAROU)="^ " S XQAROU=""
"RTN","XQALERT1",9,0)
 I ($D(XQX1)&$S('$D(XQAROU):1,XQAROU="":1,XQAROU="^ ":0,1:1))!('$D(XQX1)&$S('$D(XQAROU):0,XQAROU="^ ":1,1:0)) W !! S DIR(0)="Y",DIR("A")="Continue Processing ALERTS ",DIR("B")="Y" D ^DIR K DIR G:'Y EXIT
"RTN","XQALERT1",10,0)
 S XQAREV=1,XQXOUT=0,XQK=0,XQACNT=0 K XQADATA,XQAID,XQAROU,XQAKILL I '$D(XQX1) S XQX1=0 K ^XUTL("XQ",$J,"XQA"),^("XQA1"),^("XQA2") I $O(^XTV(8992,XQAUSER,"XQA",0))'>0 K XQX1,^XTV(8992,XQAUSER,"XQA") G EXIT
"RTN","XQALERT1",11,0)
 I 'XQX1 W !!! F XQI=0:0 S XQI=$O(^XTV(8992,XQAUSER,"XQA",XQI)) Q:XQI'>0  S XQX=^(XQI,0),XQZ=$G(^(1)),XQZ1=$G(^(2)) S XQJ=$P(XQX,U,7,8) K:XQJ=U ^(0),^(1),^(2) I XQJ'=U D
"RTN","XQALERT1",12,0)
 . S XQACNT=XQACNT+1,XQJ=$S(XQAREV:999999-XQACNT,1:XQACNT),^XUTL("XQ",$J,"XQA",XQJ)=XQX,^(XQJ,1)=XQI,^(2)=XQZ,^(3)=XQZ1
"RTN","XQALERT1",13,0)
 I 'XQX1 S XQK=0 F XQI=0:0 S XQI=$O(^XUTL("XQ",$J,"XQA",XQI)) Q:XQI'>0  S XQX=^(XQI),XQII=^(XQI,1),XQZ=^(2) S XQK=XQK+1,^XUTL("XQ",$J,"XQA1",XQK)=XQX,^(XQK,1)=XQII,^(2)=XQZ
"RTN","XQALERT1",14,0)
 S XQK=0 F XQI=0:0 Q:XQX1!XQXOUT  S XQI=$O(^XUTL("XQ",$J,"XQA",XQI)) Q:XQI'>0  S XQX=^(XQI),XQII=^(XQI,1),XQZ=^(2),XQZ1=^(3) D DOIT1
"RTN","XQALERT1",15,0)
 S:'$D(XQXOUT) XQXOUT=0 G:XQXOUT EXIT G:XQK'>0&'XQX1 EXIT I 'XQX1 D ASK G:XQXOUT EXIT
"RTN","XQALERT1",16,0)
 G:+XQX1=0 EXIT I XQX1<0 S XQX1=0 G DOIT
"RTN","XQALERT1",17,0)
 I $D(XQALDELE)!$D(XQALFWD) Q
"RTN","XQALERT1",18,0)
 G EN^XQALDOIT
"RTN","XQALERT1",19,0)
 ;
"RTN","XQALERT1",20,0)
EXIT ;
"RTN","XQALERT1",21,0)
 K ^TMP("XQ",$J,"XQA"),^("XQA1"),^("XQA2"),XQI,XQX,XQJ,XQK,XQX1,XQX2,XQXOUT,XQ1,XQII,XQACNT,XQA1,XQAREV,%ZIS,XQAROU
"RTN","XQALERT1",22,0)
 Q
"RTN","XQALERT1",23,0)
 ;
"RTN","XQALERT1",24,0)
DOIT1 ;
"RTN","XQALERT1",25,0)
 I XQK=0,'$D(XQALFWD) W @IOF
"RTN","XQALERT1",26,0)
 S XQK=XQK+1 W !,$J(XQK,2),".",$S($P(XQX,U,8)=" ":"I",1:" "),"  ",$E($P(XQX,U,3),1,70) D:XQZ1'=""  S ^XUTL("XQ",$J,"XQA1",XQK)=XQX,^(XQK,1)=XQII,^(2)=XQZ,^(3)=XQZ1 I ($Y+5)>IOSL D ASK Q:XQX1!(XQXOUT)  W @IOF
"RTN","XQALERT1",27,0)
 . W !?8,"Forwarded by: ",$P(^VA(200,+XQZ1,0),U),"  Generated: ",$$DAT8^XQALERT(+$P($P(XQX,U,2),";",3),1)
"RTN","XQALERT1",28,0)
 . I $P(XQZ1,U,3)'="" W !?8,$P(XQZ1,U,3)
"RTN","XQALERT1",29,0)
 Q
"RTN","XQALERT1",30,0)
 ;
"RTN","XQALERT1",31,0)
ASK S XQ1=0,XQXOUT=0 W !?10,"Select from 1 to ",XQK,!?10,"or enter ?, A " W:'$D(XQALDELE)&'$D(XQALFWD) "I, F, P, M, R, " W "or ^ to exit" I XQI>0,$O(^XTV(8992,XQAUSER,"XQA",XQI))>0 W !?10,"or RETURN to continue" S XQ1=1
"RTN","XQALERT1",32,0)
 R ": ",XQII:DTIME S:'$T!(XQII[U)!(XQII=""&'XQ1) XQXOUT=1 Q:XQXOUT
"RTN","XQALERT1",33,0)
 I '$D(XQALDELE)&'$D(XQALFWD),"PpMm"[$E(XQII_".") D MORP^XQALDOIT D:"Pp"[$E(XQII_".") PRINT^XQALDOIT D:"Mm"[$E(XQII_".") MAIL^XQALDOIT K ^XUTL("XQ",$J,"XQA2") G ASK
"RTN","XQALERT1",34,0)
 I XQII'="",XQII["?" D HELP G ASK
"RTN","XQALERT1",35,0)
 Q:XQII=""&XQ1  I "IiAaFfRr"'[$E(XQII_"."),(XQII<1)!(XQII>XQK) W $C(7),"  ??",! G ASK
"RTN","XQALERT1",36,0)
 I '$D(XQALDELE)&'$D(XQALFWD),"Ff"[$E(XQII) D FWRD^XQALFWD S XQX1=-1 Q
"RTN","XQALERT1",37,0)
 I '$D(XQALDELE),"Rr"[$E(XQII) S XQX1=-1 Q
"RTN","XQALERT1",38,0)
 I "Aa"[$E(XQII) S X="1-"_XQACNT,DIR(0)="LV^1:"_XQACNT D ^DIR K DIR S XQX1=Y F XQII=0:0 S XQII=$O(Y(XQII)) Q:XQII=""  S XQX1(XQII)=Y(XQII)
"RTN","XQALERT1",39,0)
 I XQII'="","Ii"[$E(XQII) S XQX1(0)="",XQX2=0,XQII="" F XQK=0:0 S XQK=$O(^XUTL("XQ",$J,"XQA1",XQK)) S:XQK'>0 XQX1=XQX1(0) Q:XQK'>0  I $P(^(XQK),U,7,8)="^ " S XQX1(XQX2)=XQX1(XQX2)_XQK_"," S:$L(XQX1(XQX2))>240 XQX2=XQX2+1,XQX1(XQX2)=""
"RTN","XQALERT1",40,0)
 I XQII="" Q
"RTN","XQALERT1",41,0)
 S X=XQII,DIR(0)="LV^1:"_XQK D ^DIR I '$D(Y) W $C(7),"  ??" D HELP G ASK
"RTN","XQALERT1",42,0)
 K XQX1 S XQX1=Y F XQII=0:0 S XQII=$O(Y(XQII)) Q:XQII'>0  S XQX1(XQII)=Y(XQII) K Y(XQII)
"RTN","XQALERT1",43,0)
 Q
"RTN","XQALERT1",44,0)
 ;
"RTN","XQALERT1",45,0)
HELP W !!,"YOU MAY ENTER:",!?3,$S(XQK>1:"One or more numbers",1:"A number")," in the range 1 to ",XQK," to select specific alert(s)"
"RTN","XQALERT1",46,0)
 W !?6,"for "_$S($D(XQALDELE):"DELETION.",$D(XQALFWD):"FORWARDING",1:"processing.") W:XQK>1 "  This may be a series of numbers, e.g., 2,3,6-9"
"RTN","XQALERT1",47,0)
 W !?3,"A to "_$S($D(XQALDELE):"DELETE",$D(XQALFWD):"FORWARD",1:"process")," all of the pending alerts in the order shown."
"RTN","XQALERT1",48,0)
 W:'$D(XQALDELE)&'$D(XQALFWD) !?3,"I to process all of the INFORMATION ONLY alerts, if any, without further ado."
"RTN","XQALERT1",49,0)
 W:'$D(XQALDELE)&'$D(XQALFWD) !?3,"F to forward one or more specific alerts.  Forwarding may be as an ALERT",!,"to specific user(s) and/or mail group(s), or as a MAIL MESSAGE, or to a",!,"specific PRINTER."
"RTN","XQALERT1",50,0)
 W:'$D(XQALDELE)&'$D(XQALFWD) !?3,"P to print a copy of the pending alerts on a printer"
"RTN","XQALERT1",51,0)
 W:'$D(XQALDELE)&'$D(XQALFWD) !?3,"M to receive a MailMan message containing a copy of these pending alerts"
"RTN","XQALERT1",52,0)
 W:'$D(XQALDELE) !?3,"R to Redisplay the available alerts"
"RTN","XQALERT1",53,0)
 W !?3,"^ to exit"
"RTN","XQALERT1",54,0)
 I XQI W !?5,"or RETURN to see additional pending ALERTS"
"RTN","XQALERT1",55,0)
 W !!
"RTN","XQALERT1",56,0)
 Q
"RTN","XQALERT1",57,0)
 ;
"RTN","XQALERT1",58,0)
 ;
"RTN","XQH")
0^10^B11981874
"RTN","XQH",1,0)
XQH ;LL/THM,SEA/AMF,JLI - HELP PROCESSOR ;2/15/96  08:55
"RTN","XQH",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XQH",3,0)
 I $D(XQH),XQH=-1 K XQH
"RTN","XQH",4,0)
 I $D(XQH),XQH'="" G EN
"RTN","XQH",5,0)
LP D GET^XQH0 D:Y>0 EACH G:XQHY>0 LP D OUT^XQH1 Q
"RTN","XQH",6,0)
ENL D GET^XQH0 D:XQHY>0 EACH D OUT^XQH1 Q
"RTN","XQH",7,0)
EN1 S XQHSL=0 S DIR(0)="E" D ^DIR Q:$D(DIRUT)
"RTN","XQH",8,0)
EN S XQHSL=1 D START K XQH Q
"RTN","XQH",9,0)
START N DA,DIC,DIE,DR,D,DIFLD,DP,DQ,DU,DZ,DO,X,Y ;Don't step on FM
"RTN","XQH",10,0)
 D INIT^XQH1 I XQH=+XQH S:'$D(^DIC(9.2,XQH,0)) XQH=-1 S XQHY=XQH D:XQHY>0 EACH D OUT^XQH1 Q
"RTN","XQH",11,0)
 S X=XQH,Y=-1 S:$D(^DIC(9.2,"B",X)) Y=$O(^(X,0)) I Y'>0 S X=$O(^DIC(9.2,"B",X)) I $E(X,1,$L(XQH))=XQH,$E($O(^(X)),1,$L(XQH))'=XQH S Y=$O(^(X,0))
"RTN","XQH",12,0)
 S XQHY=Y S:Y'>0 XQH=-1 D:XQHY>0 EACH D OUT^XQH1 Q
"RTN","XQH",13,0)
 ;
"RTN","XQH",14,0)
EACH S (XQHL,XQHN)=0 K XQHS,XQHR,XQHX
"RTN","XQH",15,0)
INT Q:'$D(^DIC(9.2,+XQHY,0))  S XQHY(0)=^(0),XQHY=XQHY_"^"_$P(XQHY(0),U,1) D:'$D(IOF) HOME^%ZIS W @IOF
"RTN","XQH",16,0)
 S XQAU=$S($D(^XUSEC("XUAUTHOR",DUZ)):1,$P(^DIC(9.2,+XQHY,0),U,4)=DUZ:1,1:$D(^DIC(9.2,+XQHY,4,"AB",DUZ)))
"RTN","XQH",17,0)
 S:'$D(X) X="" S XQHF=$P(XQHY(0),U,2),XQHS(+XQHY)="",XQHX=X,X=$O(^DIC(9.2,+XQHY,1,0))
"RTN","XQH",18,0)
GL3 D:XQHSL HDR^XQH1 W:'XQHSL ! S XQH2=.002
"RTN","XQH",19,0)
 S XQHY=+XQHY,XQDONE=""
"RTN","XQH",20,0)
 S XQHON=0 F XQH1=1:1 S XQH2=$O(^DIC(9.2,XQHY,1,XQH2)) Q:XQH2=""  D:$Y+3>IOSL WAIT^XQH1 Q:XQDONE  S X1=^DIC(9.2,XQHY,1,XQH2,0) W ! D G4
"RTN","XQH",21,0)
 K XQHON,XQHNXT,XQHTXT Q:XQDONE  S XQBL=1 I $D(^DIC(9.2,XQHY,2)) S XQBL='$P(^(2,0),U,4)
"RTN","XQH",22,0)
 S XQ3=0 I 'XQHSL S XQ3=XQBL I XQBL S XQ3=(I>15)+1
"RTN","XQH",23,0)
 I 'XQBL G:$Y<(IOSL-7-($P(^DIC(9.2,XQHY,2,0),U,3))) REL1^XQH0
"RTN","XQH",24,0)
BOT1 Q:(XQ3=1)  I XQ3=2 W !!,"Press RETURN to continue. " R X:DTIME Q
"RTN","XQH",25,0)
 W !!,"Select HELP SYSTEM action or <return>: "
"RTN","XQH",26,0)
 S X=IOM X ^%ZOSF("RM") R X:DTIME X:$D(^DIC(9.2,+XQHY,10.2)) ^(10.2) I '$T!'$L(X) S:'XQHL XQDONE=1 Q:XQDONE  D POP^XQH0 G INT
"RTN","XQH",27,0)
 S:X="^" X="^Q" S %XQK=X,X="" F %XQJ=1:1:$L(%XQK) S X=X_$S(($E(%XQK,%XQJ)?1L):$C($A($E(%XQK,%XQJ))-32),1:$E(%XQK,%XQJ))
"RTN","XQH",28,0)
 I $E(X,1)="^" G:"^R"[X GL3 S:"^Q"[X XQDONE=1 Q:XQDONE  G:"^T"[X&'XQBL REL^XQH0 D:"^O"[X HILITE^XQH2 D:"^H"[X HOW^XQH2 G:"^O"[X!("^H"[X) BOT1 I "^E"[$E(X,1,2)&XQAU D EDIT^XQH2 G BOT1
"RTN","XQH",29,0)
 I X["?" S %XQI=1 D HELP^XQH2 G BOT1
"RTN","XQH",30,0)
 I XQBL W " ??",*7 G BOT1
"RTN","XQH",31,0)
 S XQHX=X D CHK^XQH0 I Y<0 W " ??",*7 G BOT1
"RTN","XQH",32,0)
 S X=$P(Y(0),U,2) W:'$L(X) !,"No help frame exists" G:'$L(X) BOT1 S XQHN=0,XQHS(X)="" D PSH^XQH0 S XQHY=X D INT Q:XQDONE  D POP^XQH0 G GL3
"RTN","XQH",33,0)
G4 ;
"RTN","XQH",34,0)
 I XQHON W @IORV
"RTN","XQH",35,0)
G4A I XQHON W:X1="" @IORVX Q:X1=""  S XQHTXT=$P(X1,"]"),X1=$P(X1,"]",2,99),XQHNXT=$E(X1) S:XQHNXT="]" XQHTXT=XQHTXT_"]",X1=$E(X1,2,200) W XQHTXT G:XQHNXT="]" G4A W @IORVX S XQHON=0 G G4A
"RTN","XQH",36,0)
 Q:X1=""  S XQHTXT=$P(X1,"["),X1=$P(X1,"[",2,99),XQHNXT=$E(X1) S:XQHNXT="[" XQHTXT=XQHTXT_"[",X1=$E(X1,2,200) I XQHTXT["]" S XQHTXT=$P(XQHTXT,"]")_$P(XQHTXT,"]",2,99)
"RTN","XQH",37,0)
 W XQHTXT G:XQHNXT="["!(XQHNXT="") G4A W @IORV S XQHON=1 G G4A
"RTN","XQH",38,0)
 Q
"RTN","XQLOCK")
0^11^B25151105
"RTN","XQLOCK",1,0)
XQLOCK ;MJM/SEA - Find all the keys in the tree ;2/15/96  09:41
"RTN","XQLOCK",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XQLOCK",3,0)
 ;
"RTN","XQLOCK",4,0)
 ;
"RTN","XQLOCK",5,0)
 ;Input: XQX is the internal number of the parent menu
"RTN","XQLOCK",6,0)
 ;       XQUSR is the DUZ of the owner of that menu
"RTN","XQLOCK",7,0)
 ;
"RTN","XQLOCK",8,0)
EN1 ;Look up menu trees by user. Entry for option ENLOCK1.
"RTN","XQLOCK",9,0)
 S XQEN=0 D INIT,USR G:Y=-1 OUT D BLD G:'XQN OUT D DISP,SHOW,CHUZ1,OUT
"RTN","XQLOCK",10,0)
 Q
"RTN","XQLOCK",11,0)
 ;
"RTN","XQLOCK",12,0)
EN2 ;Look up keys for a given menu tree. Entry for option ENLOCK2.
"RTN","XQLOCK",13,0)
 S XQEN=1 D INIT,TREE G:Y=-1 OUT D BLD G:'XQN OUT D DISP,SHOW,CHUZ1,OUT
"RTN","XQLOCK",14,0)
 Q
"RTN","XQLOCK",15,0)
 ;
"RTN","XQLOCK",16,0)
INIT ;Get things set up
"RTN","XQLOCK",17,0)
 S XQBOSS=0 S:$D(^XUSEC("XUMGR",DUZ)) XQBOSS=1
"RTN","XQLOCK",18,0)
 Q
"RTN","XQLOCK",19,0)
USR ;Find the user and the menu in question
"RTN","XQLOCK",20,0)
 S DIC="^VA(200,",DIC(0)="AEMQZ",DIC("A")="Please enter the user's name: " W ! D ^DIC Q:Y=-1  S XQUSR=+Y Q:XQEN  D SHO Q:Y=-1
"RTN","XQLOCK",21,0)
 ;
"RTN","XQLOCK",22,0)
 W !!,"Enter a menu tree by number : " R %:DTIME S:%="" %=U S:(%=0)!('$D(XQMENU(%)))!(%'=+%) %=U
"RTN","XQLOCK",23,0)
 I %=U S Y=-1 Q
"RTN","XQLOCK",24,0)
 S XQX=+XQMENU(%)
"RTN","XQLOCK",25,0)
 Q
"RTN","XQLOCK",26,0)
 ;
"RTN","XQLOCK",27,0)
TREE ;Get the name of the menu tree in question
"RTN","XQLOCK",28,0)
 S DIC="^DIC(19,",DIC(0)="AEMQZ",DIC("A")="Please enter the parent menu: " D ^DIC Q:Y=-1  S XQX=+Y
"RTN","XQLOCK",29,0)
 Q
"RTN","XQLOCK",30,0)
 ;
"RTN","XQLOCK",31,0)
BLD ;See if the menu tree has been built if not, do it
"RTN","XQLOCK",32,0)
 S:$D(XQDIC) XQSAV=XQDIC S:XQX'["P" XQX="P"_XQX S XQDIC=XQX
"RTN","XQLOCK",33,0)
 I '$D(^XUTL("XQO",XQDIC)) S XQXUF="" W !!,"==> Working... " D REBLD^XQ8
"RTN","XQLOCK",34,0)
 ;
"RTN","XQLOCK",35,0)
FIND ;Order through the child options and find the locks
"RTN","XQLOCK",36,0)
 S XQJ=0,XQN=0
"RTN","XQLOCK",37,0)
 F  S XQJ=$O(^XUTL("XQO",XQDIC,"^",XQJ)) Q:XQJ=""  I $P(^(XQJ),U,7)]""&($P(^DIC(19,XQJ,0),U,6)]"") S XQNM=$P(^(0),U,1),XQTXT=$P(^(0),U,2),XQK=$P(^(0),U,6) D GOT1
"RTN","XQLOCK",38,0)
 ;
"RTN","XQLOCK",39,0)
 I 'XQN W:'$D(ZTQUEUED) !!,"No keys need to be given to this user for this menu tree." Q  ;There are no keys to give, so quit
"RTN","XQLOCK",40,0)
 Q
"RTN","XQLOCK",41,0)
 ;
"RTN","XQLOCK",42,0)
DISP ;Display the locked options with their keys
"RTN","XQLOCK",43,0)
 W !!,"There ",$S(XQN=1:"is one ",1:"are some "),"locked option",$S(XQN=1:":",1:"s:")
"RTN","XQLOCK",44,0)
 W !!," Option Name",?23,"Option Text",?62,"Locked With",!
"RTN","XQLOCK",45,0)
 F XQI=0:1:XQN-1 W !,$P(^TMP($J,"XQ",XQI),U),?22,$P(^TMP($J,"XQ",XQI),U,2),?60,$P(^TMP($J,"XQ",XQI),U,3) D:XQI&'(XQI#15) PAUSE^XQLOCK1 Q:XQI=-1
"RTN","XQLOCK",46,0)
 Q
"RTN","XQLOCK",47,0)
 ;
"RTN","XQLOCK",48,0)
SHOW ;Show the current set of keys
"RTN","XQLOCK",49,0)
 W !!,"This is the current set of keys we are working with: ",! S XQJ="",XQI=5 F XQK=0:1 S XQJ=$O(XQKEY(XQJ)) Q:XQJ=""  W:'(XQK#XQI) ! W ?(XQK#XQI*15),XQJ
"RTN","XQLOCK",50,0)
 Q
"RTN","XQLOCK",51,0)
 ;
"RTN","XQLOCK",52,0)
CHUZ1 W !!,"Please enter one of the following codes:",!!?5,"'A' means allocate these keys",!?5,"'D' means delegate this key set"
"RTN","XQLOCK",53,0)
 W !?5,"'E' to edit the set of keys you wish to allocate",!?5,"'^' or 'RETURN' to quit",!?5,"'L' to list the locked options again, or",!?5,"'S' to show the set of keys you are allocating again."
"RTN","XQLOCK",54,0)
 R !!,"Enter A, D, E, ^, L, or S: ",XQUR:DTIME S:XQUR="" XQUR=U Q:XQUR=U
"RTN","XQLOCK",55,0)
 I "AaDdEe^LlSs"'[$E(XQUR,1) W *7,"?? " G CHUZ1
"RTN","XQLOCK",56,0)
 I XQUR="A"!(XQUR="a") S XQAL=1 D:'$D(XQUSR) USR D:$D(XQUSR) DOIT K XQUSR G CHUZ1
"RTN","XQLOCK",57,0)
 I XQUR="D"!(XQUR="d") S XQAL=0 D:'$D(XQUSR) USR D:$D(XQUSR) DOIT K XQUSR G CHUZ1
"RTN","XQLOCK",58,0)
 I XQUR="E"!(XQUR="e") D EDIT^XQLOCK1 Q:XQUR=U  G CHUZ1
"RTN","XQLOCK",59,0)
 I XQUR="L"!(XQUR="l") D DISP G CHUZ1
"RTN","XQLOCK",60,0)
 I XQUR="S"!(XQUR="s") D SHOW G CHUZ1
"RTN","XQLOCK",61,0)
 Q
"RTN","XQLOCK",62,0)
 ;
"RTN","XQLOCK",63,0)
DOIT ;Add the key set to a user's Aloocated or Delegated Keys file
"RTN","XQLOCK",64,0)
 N DA,DIC,X
"RTN","XQLOCK",65,0)
 S XQFL=$S(XQAL:51,1:52),DIC="^VA(200,"_+XQUSR_","_XQFL_",",DIC(0)="NMQ",DIC("P")=$S(XQAL:"200.051PA",1:"200.052P"),DA(1)=XQUSR
"RTN","XQLOCK",66,0)
 S XQNXT="" F  S XQNXT=$O(XQKEY(XQNXT)) Q:XQNXT=""  S X=XQKEY(XQNXT),DINUM=X I '$D(^VA(200,XQUSR,XQFL,"B",X,X)) D FILE^DICN
"RTN","XQLOCK",67,0)
 Q
"RTN","XQLOCK",68,0)
 ;
"RTN","XQLOCK",69,0)
OUT ;Clean up and quit
"RTN","XQLOCK",70,0)
 S:$D(XQSAV) XQDIC=XQSAV
"RTN","XQLOCK",71,0)
 K ^TMP($J,"XQ")
"RTN","XQLOCK",72,0)
 K %,DA,DIC,X,XQ,XQAL,XQBOSS,XQI,XQIJ,XQJ,XQK,XQKEY,XQKN,XQMENU,XQN,XQNM,XQNXT,XQOP,XQSAV,XQTXT,XQUR,XQUSR,XQX,Y
"RTN","XQLOCK",73,0)
 Q
"RTN","XQLOCK",74,0)
 ;
"RTN","XQLOCK",75,0)
GOT1 ;Record a lock
"RTN","XQLOCK",76,0)
 S XQKN=$O(^DIC(19.1,"B",XQK,0))
"RTN","XQLOCK",77,0)
 I 'XQBOSS Q:'$D(^VA(200,DUZ,52,XQKN))  ;DUZ can't allocate that key
"RTN","XQLOCK",78,0)
 I $D(XQUSR) Q:$D(^VA(200,+XQUSR,51,"B",XQKN))  ;User already owns that key
"RTN","XQLOCK",79,0)
 S:'$D(ZTQUEUED) ^TMP($J,"XQ",XQN)="["_XQNM_"]  "_U_XQTXT_U_" <== "_XQK
"RTN","XQLOCK",80,0)
 S XQN=XQN+1
"RTN","XQLOCK",81,0)
 S XQKEY(XQK)=XQKN
"RTN","XQLOCK",82,0)
 Q
"RTN","XQLOCK",83,0)
 ;
"RTN","XQLOCK",84,0)
SHO ;Show the primary and secondary menus of +XQUSR
"RTN","XQLOCK",85,0)
 S %=+^VA(200,+XQUSR,201),XQMENU(1)=%_U_$P(^DIC(19,%,0),U,1,2)
"RTN","XQLOCK",86,0)
 I XQMENU(1)="" W !!?5,"==> ",$P(XQUSR,U,2)," has no primary menu." S Y=-1 Q
"RTN","XQLOCK",87,0)
 S %=0 F XQI=2:1  S %=$O(^VA(200,+XQUSR,203,%)) Q:%'>0  S XQSM=+^(%,0) I $D(^DIC(19,XQSM,0))#2 S XQMENU(XQI)=XQSM_U_$P(^(0),U,1,2)
"RTN","XQLOCK",88,0)
 I '$D(ZTQUEUED) W ! S XQIJ=0 F  S XQIJ=$O(XQMENU(XQIJ)) Q:XQIJ=""  W !,XQIJ,". ",$P(XQMENU(XQIJ),U,2),?23,$P(XQMENU(XQIJ),U,3),?62,$S(XQIJ=1:"Primary Menu",1:"Secondary") D:'(XQIJ#22) PAUSE^XQLOCK1
"RTN","XQLOCK",89,0)
 Q
"RTN","XQLOCK",90,0)
 ;
"RTN","XQLOCK",91,0)
KEY ;Look up a key in the Key file and get its number
"RTN","XQLOCK",92,0)
 S XQ=$O(^DIC(19.1,"B",XQK,0)) I XQ="" W *7,!!?5,"==> A key named ",XQK," ??",!
"RTN","XQLOCK",93,0)
 Q
"RTN","XQT")
0^12^B24735803
"RTN","XQT",1,0)
XQT ;SEA/MJM - Menu template loader ;2/15/96  09:41
"RTN","XQT",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XQT",3,0)
 ;
"RTN","XQT",4,0)
 ;Entry from XQ
"RTN","XQT",5,0)
 S XQSV=XQY_U_XQDIC_U_XQY0,(XQU,XQUR)=$P(XQUR,"[",2)
"RTN","XQT",6,0)
 I XQUR["?" D:XQUR["??" SHO^XQT4 W !!?5,"See 'Menu Templates' options for more information." G OUT
"RTN","XQT",7,0)
 I XQUR=" ",$D(^DISV(DUZ,"XQT")) S XQUR=^("XQT"),XQU=""
"RTN","XQT",8,0)
 D FIND G:XQK OUT D LOD I XQY<0 G OUT
"RTN","XQT",9,0)
 S ^XUTL("XQ",$J,"S")=XQSV,^DISV(DUZ,"XQT")=XQUR W:XQU'=-1 $E(XQUR,$L(XQU)+1,99)
"RTN","XQT",10,0)
 K %,XQ,XQBLD,XQFL,XQI,XQJ,XQK,XQL,XQM,XQMA,XQMN,XQN,XQNO1,XQSIB,XQSV,XQTL,XQTU,XQU
"RTN","XQT",11,0)
 G ^XQT1 ; Template is loaded and checked
"RTN","XQT",12,0)
 ;
"RTN","XQT",13,0)
FIND ;Find the template requested
"RTN","XQT",14,0)
 S XQK=0,XQN="",XQJ=1,(XQM,XQMA)=^XUTL("XQ",$J,"XQM")
"RTN","XQT",15,0)
 I XQUR'?.ANP W *7,"  ??" S XQK=1 Q
"RTN","XQT",16,0)
 S XQX=XQUR I XQUR'?.PUN F XQI=1:1 Q:XQX?.NUP  S XQN=$A(XQX,XQI) I XQN<123,XQN>96 S XQX=$E(XQX,1,XQI-1)_$C(XQN-32)_$E(XQX,XQI+1,255)
"RTN","XQT",17,0)
 S XQUR=XQX
"RTN","XQT",18,0)
 F XQI=0:0 S XQN=$O(^VA(200,DUZ,19.8,"B",XQN)) Q:XQN=""  S:XQUR=$E(XQN,1,$L(XQUR)) XQ(XQJ)=XQN,XQJ=XQJ+1
"RTN","XQT",19,0)
 I XQJ=1 W " ??",*7 S XQK=1 Q
"RTN","XQT",20,0)
 I XQJ=2 S XQUR=XQ(1) Q
"RTN","XQT",21,0)
 I XQJ>2 S XQK=0 D CHS
"RTN","XQT",22,0)
 Q
"RTN","XQT",23,0)
 ;
"RTN","XQT",24,0)
LOD ;Load the template into the ^XUTL("XQT").
"RTN","XQT",25,0)
 ;I $D(^XUTL("XQT",$J,XQUR,0))#2 S ^("T")=1 Q
"RTN","XQT",26,0)
 S XQN=$O(^VA(200,DUZ,19.8,"B",XQUR,0)) I XQN="" W " ??",*7 G OUT
"RTN","XQT",27,0)
 W:'$D(ZTQUEUED) !!,"Loading ",XQUR,"..."
"RTN","XQT",28,0)
 S ^XUTL("XQT",$J,XQUR,0)=DT,(XQEA,XQFL,XQTU)=0
"RTN","XQT",29,0)
 S XQJ=$P(^VA(200,DUZ,19.8,XQN,1,0),U,3),XQY=XQM,XQL=1
"RTN","XQT",30,0)
 D NO1^XQT5 Q:XQY'>0
"RTN","XQT",31,0)
 F XQI=1:1:XQJ Q:XQY=-1  S XQTL=^VA(200,DUZ,19.8,XQN,1,XQI,0) F XQK=1:1 D:'XQFL RPT S XQ=$P(XQTL,U,XQK) Q:XQ=""  S XQY=+XQ,XQDIC=$P(XQ,",",2),XQEA=$P(XQ,",",3) D CHK S XQMA=XQY Q:XQY=-1  D OK Q:XQY=-1
"RTN","XQT",32,0)
 I XQY=-1 K ^XUTL("XQT",$J,XQUR)
"RTN","XQT",33,0)
 Q
"RTN","XQT",34,0)
 ;
"RTN","XQT",35,0)
SET ;Build the ^XUTL("XQO",+XQDIC [ or "U"_DUZ]) nodes if need be
"RTN","XQT",36,0)
 L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQT",37,0)
 Q
"RTN","XQT",38,0)
 ;
"RTN","XQT",39,0)
SETU ;Build the ^XUTL("XQO","U"_DUZ) nodes if need be
"RTN","XQT",40,0)
 D:$S('$D(^XUTL("XQO","U"_DUZ)):1,'$D(^VA(200,DUZ,203.1)):1,1:^VA(200,DUZ,203.1)'=$P(^XUTL("XQO","U"_DUZ,0),U,2)) ^XQSET
"RTN","XQT",41,0)
 Q
"RTN","XQT",42,0)
 ;
"RTN","XQT",43,0)
CHK ;Make sure it's OK to use this option
"RTN","XQT",44,0)
 I $D(^XUTL("XQO","P"_XQM,U,XQY))!(XQM=XQY) Q
"RTN","XQT",45,0)
 I $D(^XUTL("XQO","PXU",U,XQY)) Q
"RTN","XQT",46,0)
 I '$D(XQBLD) N XQDIC S XQDIC="U"_DUZ D SETU S XQBLD=""
"RTN","XQT",47,0)
 I $D(^XUTL("XQO","U"_DUZ,U,+XQY)) Q
"RTN","XQT",48,0)
 S (%,XQTU)=0 F XQII=1:1 Q:XQTU  S %=$O(^VA(200,DUZ,203,%,0)) Q:%'>0  S:$D(^XUTL("XQO","P"_%,U,XQY)) XQTU=1
"RTN","XQT",49,0)
 Q:XQTU=1
"RTN","XQT",50,0)
 D SET Q:$D(^XUTL("XQO",XQDIC,U,XQY))
"RTN","XQT",51,0)
 I '$D(^DIC(19,XQY,0))#2 W !!,"The Option File has been changed. This template will no longer work.",!?5,"'",XQUR,"' should be deleated and/or rebuilt." S XQY=-1 Q
"RTN","XQT",52,0)
 W !!,"Sorry, the option '",$P(^DIC(19,XQY,0),U,2),"'",!,?5,"is no longer available to you." S XQY=-1
"RTN","XQT",53,0)
 Q
"RTN","XQT",54,0)
 ;
"RTN","XQT",55,0)
OK ;See if it's locked, etc.
"RTN","XQT",56,0)
 I XQY=XQDIC D S1^XQCHK I 1
"RTN","XQT",57,0)
 E  L +^XUTL("XQO",XQDIC):5 D:$S('$D(^XUTL("XQO",XQDIC,0)):1,'$D(^DIC(19,XQDIC,99)):1,1:^DIC(19,XQDIC,99)'=$P(^XUTL("XQO",XQDIC,0),U,2)) ^XQSET L -^XUTL("XQO",XQDIC)
"RTN","XQT",58,0)
 S XQY0=$S(XQY=XQDIC:XQY0,1:$P(^XUTL("XQO",XQDIC,U,+XQY),U,2,99))
"RTN","XQT",59,0)
 I $L($P(XQY0,U,3)) W !!,"Option '",$P(XQY0,U,2),"'",!,?5,"is out of order.  The message is: ",$P(XQY0,U,3) S XQY=-1 Q
"RTN","XQT",60,0)
 I $L($P(XQY0,U,6)),'$D(^XUSEC($P(XQY0,U,6),DUZ)) W !!,"Option '",$P(XQY0,U,2),!,?5,"is locked.  You don't own the key." S XQY=-1 Q
"RTN","XQT",61,0)
 I $L($P(XQY0,U,9)) D ^XQDATE S X=% D ^XQ92 I X="" W !!,"Option '",$P(XQY0,U,2),"'",!,?5,"is not permitted to run right now.  Sorry." S XQY=-1 Q
"RTN","XQT",62,0)
 I $P(XQY0,U,10)["y",'$D(^DIC(19,XQY,3.96,"B",ION)) W !!,"Option '",$P(XQY0,U,2),!,?5,"is restricted to run only only certain terminals.  You're not on one.  Sorry." S XQY=-1 Q
"RTN","XQT",63,0)
 S ^XUTL("XQT",$J,XQUR,XQL)=XQY_U_XQDIC_U_XQY0
"RTN","XQT",64,0)
 I $P(XQY0,U,17),$D(^DIC(19,XQY,26)),$L(^(26)) S ^XUTL("XQT",$J,XQUR,XQL,"H")=^DIC(19,XQY,26)
"RTN","XQT",65,0)
 I $P(XQY0,U,14),XQEA["E",$D(^DIC(19,XQY,20)),$L(^(20)) S ^XUTL("XQT",$J,XQUR,XQL,"E")=^DIC(19,XQY,20)
"RTN","XQT",66,0)
 I $P(XQY0,U,15),XQEA["X",$D(^DIC(19,XQY,15)),$L(^(15)) S ^XUTL("XQT",$J,XQUR,XQL,"X")=^DIC(19,XQY,15)
"RTN","XQT",67,0)
 S XQL=XQL+1
"RTN","XQT",68,0)
 Q
"RTN","XQT",69,0)
 ;
"RTN","XQT",70,0)
CHS ;Choose the template from those that match
"RTN","XQT",71,0)
 S XQK=1,XQU=-1 W !!,"Chose by number from: ",! F XQI=1:1:XQJ-1 W !,?5,XQI,".  ",XQ(XQI)
"RTN","XQT",72,0)
 W !!,"Enter a number between 1 and ",XQJ-1," or '^' to quit: " R %:DTIME S:'$T %=U S:%="" %=U Q:%=U  G:(%'?.N)!(%>XQJ)!(%="") CHS S XQUR=XQ(%),XQK=0
"RTN","XQT",73,0)
 Q
"RTN","XQT",74,0)
 ;
"RTN","XQT",75,0)
RPT ;Set the 'repeat' flag in ^XUTL and strip it off list of options
"RTN","XQT",76,0)
 S XQFL=1,^XUTL("XQT",$J,XQUR,"RPT")=$P(XQTL,U,1),XQTL=$P(XQTL,U,2,99)
"RTN","XQT",77,0)
 Q
"RTN","XQT",78,0)
OUT ;
"RTN","XQT",79,0)
 S XQY=+XQSV,XQDIC=$P(XQSV,U,2),XQY0=$P(XQSV,U,3,99)
"RTN","XQT",80,0)
 K %,XQ,XQBLD,XQEX,XQI,XQJ,XQK,XQL,XQM,XQN,XQN1,XQSV,XQTU
"RTN","XQT",81,0)
 G NOFIND^XQ
"RTN","XQT",82,0)
 Q
"RTN","XQTOC")
0^13^B13045603
"RTN","XQTOC",1,0)
XQTOC ;SEA/MJM - Time Out/Continue/Jump Start ;2/15/96  09:37
"RTN","XQTOC",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XQTOC",3,0)
 ;
"RTN","XQTOC",4,0)
 S ^XUTL("XQ",$J,1)=XQY_XQPSM_U_XQY0,^("T")=1
"RTN","XQTOC",5,0)
 Q:XQJS=0
"RTN","XQTOC",6,0)
 S %=^VA(200,DUZ,202.1) K ^(202.1) S $P(XQJS,U,2)=%,XQY=+%,XQPSM=$P(%,XQY,2,99),XQDIC=$S(XQPSM[",":$P(XQPSM,",",2),1:XQPSM)
"RTN","XQTOC",7,0)
 I '$D(^XUTL("XQO",XQDIC,"^",XQY)) D NOGO Q
"RTN","XQTOC",8,0)
 W !!,"You were last executing the '",$P(^XUTL("XQO",XQDIC,"^",XQY),U,3),"' menu option."
"RTN","XQTOC",9,0)
ASK W !,"Do you wish to resume" S %=1 D YN^DICN I '% W !!,"If you wish to continue at the last option you were executing, enter 'Y',",! G ASK
"RTN","XQTOC",10,0)
 I %=1
"RTN","XQTOC",11,0)
 E  D NOGO Q
"RTN","XQTOC",12,0)
 ;
"RTN","XQTOC",13,0)
 S XQY0=$P(^XUTL("XQO",XQDIC,"^",XQY),U,2,99)
"RTN","XQTOC",14,0)
 I $D(^XUTL("XQO",XQDIC,"^",XQY,0)) S XQ=^(0) F XQI=1:1:XQ S XQ(XQI)=$P(^XUTL("XQO",XQDIC,"^",XQY,0,XQI),U)
"RTN","XQTOC",15,0)
 E  S XQ=0
"RTN","XQTOC",16,0)
 Q
"RTN","XQTOC",17,0)
 ;
"RTN","XQTOC",18,0)
SET ;Set up variables to GO JUMP^XQ72.  Enter from ASK1+1^XQ
"RTN","XQTOC",19,0)
 S %=^XUTL("XQ",$J,1),XQSV=+%_U_+%_U_$P(%,U,2,99)
"RTN","XQTOC",20,0)
 K XQJS
"RTN","XQTOC",21,0)
 Q
"RTN","XQTOC",22,0)
 ;
"RTN","XQTOC",23,0)
LOOK ;Look up the Jump Start Entry
"RTN","XQTOC",24,0)
 F  Q:XQUR'[U  S XQUR=$P(XQUR,U,2)
"RTN","XQTOC",25,0)
 I '$L(XQUR) D NOGO Q
"RTN","XQTOC",26,0)
 D S^XQ75 I 'XQY D NOGO Q
"RTN","XQTOC",27,0)
 Q
"RTN","XQTOC",28,0)
 ;
"RTN","XQTOC",29,0)
NOGO ;Continue fails: reset to primary menu
"RTN","XQTOC",30,0)
 S XQY=^XUTL("XQ",$J,"XQM"),XQA3="",XQA=0 K XQCON,XQRE,XQJS,XQUR
"RTN","XQTOC",31,0)
 D S1^XQCHK ; Reconstruct XQY0
"RTN","XQTOC",32,0)
 S $P(^XUTL("XQ",$J,0),U,3)=$P(^(0),U,3)_", NOGO"
"RTN","XQTOC",33,0)
 Q
"RTN","XQTOC",34,0)
 ;
"RTN","XQTOC",35,0)
 ;
"RTN","XQTOC",36,0)
CON ;Continue option logic.  Enter from ASK^XQ on timeout.
"RTN","XQTOC",37,0)
 W !!,"Do you want to halt and continue with this option later? YES// " R XQUR:20 S:(XQUR="")!('$T) XQUR="Y"
"RTN","XQTOC",38,0)
 I "YyNn"'[$E(XQUR,1) W !!,"   If you enter 'Y' or 'RETURN' you will halt and continue here next time",!,"    you logon to the computer.",!,"   If you enter 'N' you will resume processing where you were." G CON
"RTN","XQTOC",39,0)
 I "Nn"[$E(XQUR,1) W ! S XQUR=0,Y=^XUTL("XQ",$J,"T"),Y=^(Y),XQY0=$P(Y,U,2,99),XQPSM=$P(Y,U,1),(XQY,XQDIC)=+XQPSM,XQPSM=$P(XQPSM,XQY,2,3),XQAA="Select "_$P(XQY0,U,2)_" Option: " G ASK^XQ
"RTN","XQTOC",40,0)
 S X=^XUTL("XQ",$J,^XUTL("XQ",$J,"T")),Y=^("XQM") I (+X'=+Y) S XQM="P"_+Y S XQPSM=$S($D(^XUTL("XQO",XQM,"^",+X)):XQM,$D(^XUTL("XQO","PXU","^",+X)):"PXU",1:"") D:XQPSM="" SS S:XQPSM'="" ^VA(200,DUZ,202.1)=+X_XQPSM
"RTN","XQTOC",41,0)
 S X=$P($H,",",2),X=(X>41400&(X<46800))
"RTN","XQTOC",42,0)
 W !!,$P("Great^OK^All right^Well certainly^Fine","^",$R(5)+1),".  ",$P("See you later.^I'll be ready when you are.^Hurry back!^Have a nice lunch.","^",$R(3)+X+1)
"RTN","XQTOC",43,0)
 G H^XUS
"RTN","XQTOC",44,0)
 ;
"RTN","XQTOC",45,0)
SS ;Search Secondaries for a particular option.
"RTN","XQTOC",46,0)
 Q:'$D(^VA(200,DUZ,203,0))  Q:$P(^VA(200,DUZ,203,0),U,4)<1
"RTN","XQTOC",47,0)
 S Y=0 F XQI=1:1 Q:XQPSM'=""  S Y=$O(^VA(200,DUZ,203,Y)) Q:Y'>0  S %=+^(Y,0) I $D(^XUTL("XQO","P"_%,"^",+X)) S XQPSM="U"_DUZ_",P"_%
"RTN","XQTOC",48,0)
 Q
"RTN","XUINPCH")
0^^B278298
"RTN","XUINPCH",1,0)
XUINPCH ;SF/RWF - RE-INDEX NEW X-REF ON FILE 200 ;4/15/96  13:28
"RTN","XUINPCH",2,0)
 ;;8.0;;KERNEL;**20**;Feb. 9, 1996
"RTN","XUINPCH",3,0)
 Q
"RTN","XUINPCH",4,0)
POST1 ;Post init for patch XU*8*20 to reindex new X-ref on file 200.
"RTN","XUINPCH",5,0)
 N XU,DA,DIK
"RTN","XUINPCH",6,0)
 F XU=0:0 S XU=$O(^VA(200,XU)) Q:XU'>0  I $D(^VA(200,XU,203,0)) D
"RTN","XUINPCH",7,0)
 . S DA(1)=XU,DIK="^VA(200,"_XU_",203,",DIK(1)=".01^4"
"RTN","XUINPCH",8,0)
 . D ENALL^DIK
"RTN","XUINPCH",9,0)
 . Q
"RTN","XUINPCH",10,0)
 Q
"RTN","XUSERBLK")
0^9^B23549599
"RTN","XUSERBLK",1,0)
XUSERBLK ;SF/RWF - Bulk user (new person) COMPUTER ACCESS  ;3/4/96  12:49
"RTN","XUSERBLK",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUSERBLK",3,0)
 ; This routine allows the Cloning of one person to a group of others.
"RTN","XUSERBLK",4,0)
A ;
"RTN","XUSERBLK",5,0)
 I $S('$D(DUZ)#2:1,DUZ'>0:1,1:0) W !!,"You are not a known user and can't use this option." Q
"RTN","XUSERBLK",6,0)
 D QUIT
"RTN","XUSERBLK",7,0)
B1 W @IOF,!?26,"Batch Entry of New Persons"
"RTN","XUSERBLK",8,0)
 W !?26,"--------------------------",!!,"Please select a person to copy from"
"RTN","XUSERBLK",9,0)
 K DIC S DIC(0)="AEQZ",DIC("A")="Template PERSON: ",DIC="^VA(200," D ^DIC
"RTN","XUSERBLK",10,0)
 G QUIT:$D(DTOUT)!$D(DUOUT),B1:Y=-1
"RTN","XUSERBLK",11,0)
 ; Show INFO to be copied"
"RTN","XUSERBLK",12,0)
 S XUTMP=+Y,XUTMP(0)=$P(Y,U,2),DA=+Y D EN^DIQ
"RTN","XUSERBLK",13,0)
 S DIR(0)="Y",DIR("A")="Is this the person data you want cloned" D ^DIR G B1:'Y
"RTN","XUSERBLK",14,0)
 W !,"You may enter a date, when the users that are being created/updated",!,"will no longer have access to the system."
"RTN","XUSERBLK",15,0)
 S XUTERMDT="",%DT="AEF",%DT(0)=DT,%DT("A")="Enter (optional) TERMINATION DATE: " D ^%DT S:Y>0 XUTERMDT=Y
"RTN","XUSERBLK",16,0)
 K XUSER S XUSER=0
"RTN","XUSERBLK",17,0)
B2 ;
"RTN","XUSERBLK",18,0)
 W !!,?26,"Batch Entry of New Persons",!,?26,"--------------------------",!
"RTN","XUSERBLK",19,0)
 W !,"Clone of: ",XUTMP(0) I XUTERMDT S Y=XUTERMDT D DD^%DT W ?50,"TERMINATION DATE: ",Y
"RTN","XUSERBLK",20,0)
 ;;
"RTN","XUSERBLK",21,0)
B3 F  S XUY=$$ADD^XUSERNEW Q:XUY<0  D  ;Create new entry
"RTN","XUSERBLK",22,0)
 . I '$P(XUY,U,3) D
"RTN","XUSERBLK",23,0)
 . . S DIR(0)="Y",DIR("A")=$P(XUY,U,2)_" is an existing user. Do you want to include" D ^DIR I Y'=1 S XUY=-1 Q
"RTN","XUSERBLK",24,0)
 . . S DIR(0)="Y",DIR("A")="Clear out KEYS, FILES, SECONDARY MENUS first" D ^DIR
"RTN","XUSERBLK",25,0)
 . . S:Y=1 $P(XUY,U,4)=1
"RTN","XUSERBLK",26,0)
 . . Q
"RTN","XUSERBLK",27,0)
 . S:XUY>0 XUSER=XUSER+1,XUSER(XUSER)=XUY W !,"Next!",!
"RTN","XUSERBLK",28,0)
 . Q
"RTN","XUSERBLK",29,0)
B4 ;
"RTN","XUSERBLK",30,0)
 G:XUSER'>0 QUIT
"RTN","XUSERBLK",31,0)
 I XUTERMDT>0 S ZTRTN="CHECK^XUSTERM1",ZTIO="",ZTDTH=XUTERMDT D ^%ZTLOAD W !,"Automatic deactivation has been queued for this date.",!
"RTN","XUSERBLK",32,0)
 W !!,"Where do you want to print the COMPUTER ACCOUNT NOTIFICATION LETTERS"
"RTN","XUSERBLK",33,0)
 S %ZIS="MQ" D ^%ZIS G QUIT:POP,CLONE:'$D(IO("Q"))
"RTN","XUSERBLK",34,0)
 S ZTRTN="CLONE^XUSERBLK" F I="XUTMP","XUTERMDT","XUSER","XUSER(" S ZTSAVE(I)=""
"RTN","XUSERBLK",35,0)
 K IO("Q") D ^%ZTLOAD
"RTN","XUSERBLK",36,0)
 ;;
"RTN","XUSERBLK",37,0)
QUIT ;Call at start
"RTN","XUSERBLK",38,0)
 K DIC,DIR,%,L,XUIOP,XUNODE,XU1,X1,X2,X3,X4,X5,X6,XUTEXT,XUNEW,XUSER,XUTMP,XUTERMDT,XUH,XUU,M,P,XU
"RTN","XUSERBLK",39,0)
 K ^TMP($J)
"RTN","XUSERBLK",40,0)
 Q
"RTN","XUSERBLK",41,0)
 ;;
"RTN","XUSERBLK",42,0)
CLONE ;;
"RTN","XUSERBLK",43,0)
 S XUTEXT=$O(^DIC(9.2,"B",$$GET^XUPARAM("XUSER COMPUTER ACCOUNT","N"),0)),XUIOP=ION_";"_IOST_";"_IOM_";"_IOSL
"RTN","XUSERBLK",44,0)
 F XU1=1:1:XUSER S %=XUSER(XU1),DA=+%,XUNEW=$P(%,U,3),XUPURGE=$P(%,U,4) D C2
"RTN","XUSERBLK",45,0)
 G QUIT
"RTN","XUSERBLK",46,0)
 ;
"RTN","XUSERBLK",47,0)
C2 I '$D(ZTQUEUED) W !!?8,$S(XUNEW:"CREATING A NEW ACCOUNT FOR '"_$P(XUSER(XU1),U,2)_"'",1:"CONVERTING "_$P(XUSER(XU1),U,2)_"'S ACCOUNT OVER"),!!,"One moment please..."
"RTN","XUSERBLK",48,0)
 D BLDFDA
"RTN","XUSERBLK",49,0)
 I $P(^VA(200,DA,0),U,3)']"" S XUNEW=1 ;if no access code treat as new
"RTN","XUSERBLK",50,0)
 I $P($G(^VA(200,DA,.1)),U,2)']"" S XUNEW=1 ;If no verify code treat as new
"RTN","XUSERBLK",51,0)
 S XUU="unchanged",$P(^VA(200,DA,0),U,11)=XUTERMDT
"RTN","XUSERBLK",52,0)
 I XUNEW D ACODE S @XFDA@(200,DA_",",2)=XUH
"RTN","XUSERBLK",53,0)
 D UPDATE^DIE("",XFDA,XIEN,"XERR") ;S DIK="^VA(200," D IX1^DIK
"RTN","XUSERBLK",54,0)
 I XUNEW,XUTEXT>0 D LET(DA,XUTEXT)
"RTN","XUSERBLK",55,0)
 I $D(^XMB(3.7,DA,0))[0 S Y=DA K XMZ D NEW^XM K XMDT,XMM,XMZ
"RTN","XUSERBLK",56,0)
 Q
"RTN","XUSERBLK",57,0)
BLDFDA ;Build the FDA
"RTN","XUSERBLK",58,0)
 S XFDA="^TMP($J,""XFDA"")",XIEN="^TMP($J,""XIEN"")" K ^TMP($J)
"RTN","XUSERBLK",59,0)
 ;Move piece on nodes from list, Build XU only once
"RTN","XUSERBLK",60,0)
 F X2=1:1 S XUNODE=$P($T(DATA+X2),";;",2) Q:XUNODE=""  D
"RTN","XUSERBLK",61,0)
 . F X3=1:1 S X7=$P(XUNODE,U,X3) Q:X7']""  S X4=$$GETDD(200,X7),X5=$P(X4,";"),X6=$P(X4,";",2) D
"RTN","XUSERBLK",62,0)
 . . I '$D(XU(2,X5)) S XU(2,X5)=$G(^VA(200,XUTMP,X5))
"RTN","XUSERBLK",63,0)
 . . S:$P(XU(2,X5),U,X6)]"" @XFDA@(200,DA_",",X7)=$P(XU(2,X5),U,X6)
"RTN","XUSERBLK",64,0)
 . . Q
"RTN","XUSERBLK",65,0)
 . Q
"RTN","XUSERBLK",66,0)
 D SUBFILE
"RTN","XUSERBLK",67,0)
 Q
"RTN","XUSERBLK",68,0)
GETDD(FI,FE) ;Return node;piece for a field
"RTN","XUSERBLK",69,0)
 Q $P($G(^DD(FI,FE,0)),U,4)
"RTN","XUSERBLK",70,0)
DATA ;;field#
"RTN","XUSERBLK",71,0)
 ;;3^8^15^29^28
"RTN","XUSERBLK",72,0)
 ;;200.04^200.05^200.06^200.09^200.1^201^
"RTN","XUSERBLK",73,0)
 ;;41^41.1^41.2
"RTN","XUSERBLK",74,0)
 ;;
"RTN","XUSERBLK",75,0)
ACODE F Z=0:0 D ^XUS4 S X=XUU D ^XUSHSH S XUH=X Q:'($D(^VA(200,"AOLD",XUH))!$D(^VA(200,"A",XUH)))
"RTN","XUSERBLK",76,0)
 Q
"RTN","XUSERBLK",77,0)
 ;;
"RTN","XUSERBLK",78,0)
SUBFILE ;Move subfiles: Subscript, Subfile#, DINUM, Fields
"RTN","XUSERBLK",79,0)
 N XCNT S XCNT=0
"RTN","XUSERBLK",80,0)
KEY D MULTI(51,200.051,1,".01,3")
"RTN","XUSERBLK",81,0)
PATH ;D MULTI(19.8,".01")
"RTN","XUSERBLK",82,0)
FOF D MULTI("FOF",200.032,1,".01,1,2,3,4,5,6")
"RTN","XUSERBLK",83,0)
DIV D MULTI(2,200.02,1,".01")
"RTN","XUSERBLK",84,0)
SEC D MULTI(203,200.03,0,".01,2")
"RTN","XUSERBLK",85,0)
 Q
"RTN","XUSERBLK",86,0)
MULTI(XSS,XSF,XDN,XDD) ;Build new data
"RTN","XUSERBLK",87,0)
 I XUPURGE D CLEAR(DA,XSS)
"RTN","XUSERBLK",88,0)
 Q:'$D(^VA(200,XUTMP,XSS,0))
"RTN","XUSERBLK",89,0)
 ;S X=^(0),Y=$S($D(^VA(200,DA,X2,0)):^(0),1:"")
"RTN","XUSERBLK",90,0)
 F X1=0:0 S X1=$O(^VA(200,XUTMP,XSS,X1)) Q:X1'>0  S X=^(X1,0) D
"RTN","XUSERBLK",91,0)
 . F X2=1:1 S X3=$P(XDD,",",X2) Q:X3=""  D
"RTN","XUSERBLK",92,0)
 . . I X3'=.01 S @XFDA@(XSF,"?+"_XCNT_","_DA_",",X3)=$$VAL(X,X3,XSF) Q
"RTN","XUSERBLK",93,0)
 . . S XCNT=XCNT+1,@XFDA@(XSF,"?+"_XCNT_","_DA_",",.01)=$P(X,U,1)
"RTN","XUSERBLK",94,0)
 . . S:XDN @XIEN@(XCNT)=X1
"RTN","XUSERBLK",95,0)
 . . Q
"RTN","XUSERBLK",96,0)
 . Q
"RTN","XUSERBLK",97,0)
 Q
"RTN","XUSERBLK",98,0)
VAL(V,FE,FI) ;Get value
"RTN","XUSERBLK",99,0)
 N % S %=$$GETDD(FI,FE),%=$P(%,";",2) Q $P(V,"^",%)
"RTN","XUSERBLK",100,0)
 ;
"RTN","XUSERBLK",101,0)
LET(DA,XUTEXT) ;Write access letter
"RTN","XUSERBLK",102,0)
 N DIWF,FR,TO,BY,IOP
"RTN","XUSERBLK",103,0)
 S DIWF="^DIC(9.2,"_XUTEXT_",1,",DIWF(1)=200,FR=DA,TO=DA,BY="NUMBER",IOP=XUIOP D EN2^DIWF
"RTN","XUSERBLK",104,0)
 Q
"RTN","XUSERBLK",105,0)
CLEAR(X4,X2) ;Clear subfile first, IEN, Subscript
"RTN","XUSERBLK",106,0)
 Q:$D(^VA(200,X4,X2,0))[0  N C,XUFN,XDEL,XMSG
"RTN","XUSERBLK",107,0)
 S C=",",XDEL=$NA(^TMP($J,"XUBLK2")),XUFN=+$P(^VA(200,X4,X2,0),"^",2)
"RTN","XUSERBLK",108,0)
 F X1=0:0 S X1=$O(^VA(200,X4,X2,X1)) Q:X1'>0  D
"RTN","XUSERBLK",109,0)
 . I X2=51 S %=$$DEL^XQKEY(X4,X1) Q  ;Special case for KEYS
"RTN","XUSERBLK",110,0)
 . S @XDEL@(XUFN,X1_C_X4_C,.01)="@"
"RTN","XUSERBLK",111,0)
 . Q
"RTN","XUSERBLK",112,0)
 I $D(@XDEL)>1 D FILE^DIE("",XDEL,"XMSG") ;I $D(XMSG) ZW XMSG
"RTN","XUSERBLK",113,0)
 Q
"RTN","XUTMD1")
0^6^B4665770
"RTN","XUTMD1",1,0)
XUTMD1 ;SEA/RDS - TaskMan: Option, XUTMDEL, Part 2 (Bulk Delete) ;1/31/96  10:15
"RTN","XUTMD1",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMD1",3,0)
 ;
"RTN","XUTMD1",4,0)
COUNT ;Ask Whether To First Count The Number Of Tasks To Delete
"RTN","XUTMD1",5,0)
 W !
"RTN","XUTMD1",6,0)
 K DIR
"RTN","XUTMD1",7,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","XUTMD1",8,0)
 S DIR("A")="Would you like to know how many tasks in that list can be deleted"
"RTN","XUTMD1",9,0)
 S DIR("?")="     Answer NO if you don't want to know how many tasks can be deleted."
"RTN","XUTMD1",10,0)
 D ^DIR
"RTN","XUTMD1",11,0)
 I $D(DIRUT) W:$D(DTOUT) $C(7) W !!?5,"NO tasks deleted!" Q
"RTN","XUTMD1",12,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","XUTMD1",13,0)
 I 'Y G SHOW
"RTN","XUTMD1",14,0)
 S XUTMT(0)="LD" D ^XUTMT G:$D(DIRUT) EXIT
"RTN","XUTMD1",15,0)
 W !!?5,"There ",$S(ZTSK=1:"is ",1:"are "),ZTSK," task",$S(ZTSK=1:"",1:"s")," in that list that can be deleted."
"RTN","XUTMD1",16,0)
 I ZTSK=0 W $C(7) Q
"RTN","XUTMD1",17,0)
 ;
"RTN","XUTMD1",18,0)
SHOW ;Ask Whether To Show The Tasks To Be Deleted
"RTN","XUTMD1",19,0)
 W !
"RTN","XUTMD1",20,0)
 K DIR
"RTN","XUTMD1",21,0)
 S DIR(0)="Y",DIR("B")="YES"
"RTN","XUTMD1",22,0)
 S DIR("A")="Would you like to see the tasks that will be deleted"
"RTN","XUTMD1",23,0)
 S DIR("?")="     Answer NO if you don't want to see the tasks that will be deleted."
"RTN","XUTMD1",24,0)
 D ^DIR
"RTN","XUTMD1",25,0)
 I $D(DIRUT) W:$D(DTOUT) $C(7) W !!?5,"NO tasks deleted!" Q
"RTN","XUTMD1",26,0)
 K DIR,DIRUT,DTOUT,DUOUT
"RTN","XUTMD1",27,0)
 I 'Y G CONFIRM
"RTN","XUTMD1",28,0)
 W ! S XUTMT(0)="PD" D ^XUTMT
"RTN","XUTMD1",29,0)
 I 'ZTSK W !?5,"There are 0 tasks in that list." Q
"RTN","XUTMD1",30,0)
 ;
"RTN","XUTMD1",31,0)
CONFIRM ;Prompt For Confirmation Of Deletion
"RTN","XUTMD1",32,0)
 K DIR
"RTN","XUTMD1",33,0)
 S DIR(0)="Y",DIR("B")="NO"
"RTN","XUTMD1",34,0)
 S DIR("A")="Are you sure you want to delete these tasks"
"RTN","XUTMD1",35,0)
 S DIR("?")="     Answer YES to delete the selected tasks."
"RTN","XUTMD1",36,0)
 D ^DIR
"RTN","XUTMD1",37,0)
 I 'Y W !!?5,"Tasks NOT deleted!" W:$D(DTOUT) $C(7) G EXIT
"RTN","XUTMD1",38,0)
 S XUTMT(0)="DL" D ^XUTMT
"RTN","XUTMD1",39,0)
 I ZTSK W !!?5,"Tasks deleted!"
"RTN","XUTMD1",40,0)
 I 'ZTSK W !!?5,"There are 0 tasks in that list."
"RTN","XUTMD1",41,0)
 ;
"RTN","XUTMD1",42,0)
EXIT Q
"RTN","XUTMDEVQ")
0^17^B534767
"RTN","XUTMDEVQ",1,0)
XUTMDEVQ ;ISCSF/RWF - Device call and Queue in one place ;4/4/96  08:51
"RTN","XUTMDEVQ",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMDEVQ",3,0)
 ;Call with %ZTLOAD parameters and it will call $ZIS and
"RTN","XUTMDEVQ",4,0)
 ;run or queue the output.
"RTN","XUTMDEVQ",5,0)
 ;
"RTN","XUTMDEVQ",6,0)
EN(ZTRTN,ZTDESC,ZTSAVE,%ZIS) ;ZTSAVE AND %ZIS pass by reference.
"RTN","XUTMDEVQ",7,0)
 Q:$G(ZTRTN)=""
"RTN","XUTMDEVQ",8,0)
 N ZTIO,ZTDTH,ZTSK,ZTSYNC,ZTCPU,ZTUCI K IO("Q")
"RTN","XUTMDEVQ",9,0)
 D ZIS I POP G KILL
"RTN","XUTMDEVQ",10,0)
 I '$D(IO("Q")) D RUN G KILL
"RTN","XUTMDEVQ",11,0)
 D ZTLOAD
"RTN","XUTMDEVQ",12,0)
KILL K ZTDTH,ZTSAVE
"RTN","XUTMDEVQ",13,0)
 Q
"RTN","XUTMDEVQ",14,0)
ZIS ;
"RTN","XUTMDEVQ",15,0)
 S:$G(%ZIS)'["Q" %ZIS=$G(%ZIS)_"Q"
"RTN","XUTMDEVQ",16,0)
 D ^%ZIS:'$D(XGWIN),^ZISG:$D(XGWIN)
"RTN","XUTMDEVQ",17,0)
 Q
"RTN","XUTMDEVQ",18,0)
ZTLOAD ;
"RTN","XUTMDEVQ",19,0)
 K IO("Q")
"RTN","XUTMDEVQ",20,0)
 D ^%ZTLOAD
"RTN","XUTMDEVQ",21,0)
 D HOME^%ZIS
"RTN","XUTMDEVQ",22,0)
 Q
"RTN","XUTMDEVQ",23,0)
RUN ;
"RTN","XUTMDEVQ",24,0)
 U IO
"RTN","XUTMDEVQ",25,0)
 D @ZTRTN
"RTN","XUTMDEVQ",26,0)
 D ^%ZISC
"RTN","XUTMDEVQ",27,0)
 Q
"RTN","XUTMG19")
0^15^B12581666
"RTN","XUTMG19",1,0)
XUTMG19 ;SF/RWF - TaskMan Code For File 19.2 ;3/12/96  09:53
"RTN","XUTMG19",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMG19",3,0)
 ;
"RTN","XUTMG19",4,0)
 Q
"RTN","XUTMG19",5,0)
FIND ;subroutine--find scheduled task that will run this option
"RTN","XUTMG19",6,0)
 ;Return XUTASK = task number, XUDTH = H3 time
"RTN","XUTMG19",7,0)
 N %,OPT,X,X1,Y X ^%ZOSF("UCI") S XUTASK=0,Y=$P(Y,","),OPT=$$GET(19,$$GET(19.2,DA,.01),.01)
"RTN","XUTMG19",8,0)
 S X=+$S($D(ZTMQDT):ZTMQDT,$D(^DIC(19.2,DA,0)):$$GET(19.2,DA,2),1:0) Q:'X
"RTN","XUTMG19",9,0)
 S XUDTH=$$H3^%ZTM($$FMTH^XLFDT(X))
"RTN","XUTMG19",10,0)
 S %=$$GET(19.2,DA,12) I %>0 D CHECK Q:XUTASK
"RTN","XUTMG19",11,0)
 F  S %=$O(^%ZTSCH(XUDTH,%)) Q:%'>0  I $P($G(^%ZTSK(%,0)),"^",1,2)="ZTSK^XQ1" D CHECK Q:XUTASK
"RTN","XUTMG19",12,0)
 Q
"RTN","XUTMG19",13,0)
CHECK ;Check a task
"RTN","XUTMG19",14,0)
 S X1=$G(^%ZTSK(%,0)) Q:$P(X1,"^",1,2)'="ZTSK^XQ1"  Q:$P(X1,"^",11)'=Y
"RTN","XUTMG19",15,0)
 I $G(^%ZTSK(%,.03))'[OPT Q  ;Check for name in desc.
"RTN","XUTMG19",16,0)
 S:$G(^%ZTSK(%,.3,"XQSCH"))=DA XUTASK=%
"RTN","XUTMG19",17,0)
 Q
"RTN","XUTMG19",18,0)
 ;
"RTN","XUTMG19",19,0)
GET(FN,IEN,FE) ;
"RTN","XUTMG19",20,0)
 N A,B,C S A=$G(^DD(FN,FE,0)),A=$P(A,"^",4)
"RTN","XUTMG19",21,0)
 S B=$P(A,";"),C=$P(A,";",2)
"RTN","XUTMG19",22,0)
 Q $P($G(^DIC(FN,IEN,B)),"^",C)
"RTN","XUTMG19",23,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",24,0)
IT2 ;input transform for time (#2)
"RTN","XUTMG19",25,0)
 N Y,% S %DT="ETRXF" D ^%DT S X=Y,%=$$NOW^XLFDT() I %+.0002>X K X
"RTN","XUTMG19",26,0)
 I '$D(X),'$D(DDS) D CT^XUTMG19
"RTN","XUTMG19",27,0)
 Q
"RTN","XUTMG19",28,0)
 ;
"RTN","XUTMG19",29,0)
CT ;IT2--show current time %=NOW
"RTN","XUTMG19",30,0)
 W !,?5,"The current time is ",$E(%,9,10),":",$E(%,11,12)
"RTN","XUTMG19",31,0)
 Q
"RTN","XUTMG19",32,0)
 ;
"RTN","XUTMG19",33,0)
S2 ;set logic for AZTM cross-reference on time (#2)
"RTN","XUTMG19",34,0)
 N DV,ZTSK,ZTIO,ZTDTH,ZTDESC,ZTRTN,ZTCPU,X1
"RTN","XUTMG19",35,0)
 S ZTDTH=X I 'ZTDTH G EXIT
"RTN","XUTMG19",36,0)
 S ZTCPU=$$GET(19.2,DA,5) I ZTCPU']"" K ZTCPU
"RTN","XUTMG19",37,0)
 S ZTRTN="ZTSK^XQ1"
"RTN","XUTMG19",38,0)
 S ZTSAVE("XQSCH")=DA,X1=+^DIC(19.2,DA,0),ZTSAVE("XQY")=X1
"RTN","XUTMG19",39,0)
 S ZTDESC=$P(^DIC(19,X1,0),U)_" - "_$P(^DIC(19,X1,0),U,2)
"RTN","XUTMG19",40,0)
 S ZTIO=$$GET(19.2,DA,3)
"RTN","XUTMG19",41,0)
 D ^%ZTLOAD S ^DIC(19.2,DA,1)=ZTSK
"RTN","XUTMG19",42,0)
EXIT Q
"RTN","XUTMG19",43,0)
 ;
"RTN","XUTMG19",44,0)
K2 ;kill logic for AZTM cross-reference on time (#2)
"RTN","XUTMG19",45,0)
 N XUTASK,XUDTH,XUTMT S ZTMQDT=X D FIND K ZTMQDT I XUTASK'>0 Q
"RTN","XUTMG19",46,0)
 Q:XUTASK=$G(ZTQUEUED)
"RTN","XUTMG19",47,0)
 S XUTMT=XUTASK,^DIC(19.2,DA,1)="" D ^XUTMTD
"RTN","XUTMG19",48,0)
 Q
"RTN","XUTMG19",49,0)
 ;
"RTN","XUTMG19",50,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",51,0)
 ;
"RTN","XUTMG19",52,0)
IT3 ;input transform for device (#3)
"RTN","XUTMG19",53,0)
 N DIC,Y,XUTMG19
"RTN","XUTMG19",54,0)
 I X[""""!($A(X)=45)!($L(X)>70) K X Q
"RTN","XUTMG19",55,0)
 S DIC="^%ZIS(1,",DIC(0)="E",XUTMG19=X,X=$P(X,";") D ^DIC
"RTN","XUTMG19",56,0)
 I Y=-1 K X Q
"RTN","XUTMG19",57,0)
 S $P(XUTMG19,";")=$P(Y,U,2),IOP=XUTMG19,%ZIS="NQR" D ^%ZIS
"RTN","XUTMG19",58,0)
 I POP K X
"RTN","XUTMG19",59,0)
 E  S X=ION_";"_$S($D(IO("DOC"))#2:IO("DOC"),1:IOST_";"_IOM_";"_IOSL)
"RTN","XUTMG19",60,0)
 D RESETVAR^%ZIS
"RTN","XUTMG19",61,0)
 Q
"RTN","XUTMG19",62,0)
 ;
"RTN","XUTMG19",63,0)
S3 ;set logic for AZTIO cross-reference of device (#3)
"RTN","XUTMG19",64,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",65,0)
 S $P(^%ZTSK(XUTASK,.2),U)=X
"RTN","XUTMG19",66,0)
 Q
"RTN","XUTMG19",67,0)
 ;
"RTN","XUTMG19",68,0)
K3 ;kill logic for AZTIO cross-reference of device (#3)
"RTN","XUTMG19",69,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",70,0)
 S $P(^%ZTSK(XUTASK,.2),U)=""
"RTN","XUTMG19",71,0)
 Q
"RTN","XUTMG19",72,0)
 ;
"RTN","XUTMG19",73,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",74,0)
 ;
"RTN","XUTMG19",75,0)
IT6 ;input transform for re-sch freq
"RTN","XUTMG19",76,0)
 I $L(X)>15!($L(X)<2) K X Q
"RTN","XUTMG19",77,0)
 I X?1.3N1"H" Q
"RTN","XUTMG19",78,0)
 I X?1.4N1"S" Q
"RTN","XUTMG19",79,0)
 I X?1.3N1"D" Q
"RTN","XUTMG19",80,0)
 I X?1.2N1"M" Q
"RTN","XUTMG19",81,0)
 I X?1.2N1"M(".E1")" Q
"RTN","XUTMG19",82,0)
 I "MTWRFSUDE"[$E(X),"@,"[$E(X,2) Q
"RTN","XUTMG19",83,0)
 K X
"RTN","XUTMG19",84,0)
 Q
"RTN","XUTMG19",85,0)
 ;
"RTN","XUTMG19",86,0)
 ;-------------------------------------------------------------------
"RTN","XUTMG19",87,0)
 ;
"RTN","XUTMG19",88,0)
IT5 ;input transform for volume (#5)
"RTN","XUTMG19",89,0)
 N X1,X2 S X1=$P(X,":"),X2=$P(X,":",2)
"RTN","XUTMG19",90,0)
 I X[""""!($A(X)=45) K X Q
"RTN","XUTMG19",91,0)
 I $L(X)>21!($L(X)<2) K X Q
"RTN","XUTMG19",92,0)
 I '((X?1.8UN)!(X?1.8UN.1":".12UN)) K X Q
"RTN","XUTMG19",93,0)
 I X'[":",'$D(^%ZIS(14.5,"B",X)) K X Q
"RTN","XUTMG19",94,0)
 I X[":",'$D(^%ZIS(14.7,"B",X)) K X Q
"RTN","XUTMG19",95,0)
 Q
"RTN","XUTMG19",96,0)
 ;
"RTN","XUTMG19",97,0)
S5 ;set logic for AZTVOL cross-reference of volume
"RTN","XUTMG19",98,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",99,0)
 S $P(^%ZTSK(XUTASK,0),U,14)=X
"RTN","XUTMG19",100,0)
 Q
"RTN","XUTMG19",101,0)
 ;
"RTN","XUTMG19",102,0)
K5 ;kill logic for AZTVOL cross-reference on volume
"RTN","XUTMG19",103,0)
 N XUTASK,XUDTH D FIND I XUTASK'>0 Q
"RTN","XUTMG19",104,0)
 S $P(^%ZTSK(XUTASK,0),U,14)=""
"RTN","XUTMG19",105,0)
 Q
"RTN","XUTMG19",106,0)
 ;
"RTN","XUTMG19",107,0)
 ;--------------------------------------------------------------------
"RTN","XUTMG19",108,0)
 ;
"RTN","XUTMG19",109,0)
IT9 ;input transform for special queueing (#9)
"RTN","XUTMG19",110,0)
 N Y S Y=$P(^DIC(19,+^DIC(19.2,DA,0),0),U,4)
"RTN","XUTMG19",111,0)
 I Y="A"!(Y="R") Q
"RTN","XUTMG19",112,0)
 K X W $C(7),"  ONLY FOR 'ROUTINE' OR 'ACTION' TYPES OF OPTIONS"
"RTN","XUTMG19",113,0)
 Q
"RTN","XUTMG19",114,0)
 ;
"RTN","XUTMG19",115,0)
S9 ;set logic for ASTARTUP cross-reference on special queueing
"RTN","XUTMG19",116,0)
 N Y,Y1,XUCPU S XUCPU=$$GET(19.2,DA,5),Y1=$$GET(19.2,DA,.01)
"RTN","XUTMG19",117,0)
 X ^%ZOSF("UCI") I XUCPU]"" S $P(Y,",",2)=XUCPU
"RTN","XUTMG19",118,0)
 S ^%ZTSCH("STARTUP",Y,Y1)=$H
"RTN","XUTMG19",119,0)
 Q
"RTN","XUTMG19",120,0)
 ;
"RTN","XUTMG19",121,0)
K9 ;kill logic for ASTARTUP cross-reference on special queueing
"RTN","XUTMG19",122,0)
 N Y,Y1,XUCPU S XUCPU=$$GET(19.2,DA,5),Y1=$$GET(19.2,DA,.01)
"RTN","XUTMG19",123,0)
 X ^%ZOSF("UCI") I XUCPU]"" S $P(Y,",",2)=XUCPU
"RTN","XUTMG19",124,0)
 K ^%ZTSCH("STARTUP",Y,Y1)
"RTN","XUTMG19",125,0)
 Q
"RTN","XUTMG19",126,0)
 ;
"RTN","XUTMQ")
0^1^B14315136
"RTN","XUTMQ",1,0)
XUTMQ ;SEA/RDS - TaskMan: Option, XUTMINQ, Show task lists ;1/31/96  10:16
"RTN","XUTMQ",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMQ",3,0)
 ;
"RTN","XUTMQ",4,0)
ENV ;Establish Routine Environment
"RTN","XUTMQ",5,0)
 N %,%ZTF,%ZTI,%ZTJ,%ZTL,%ZTR,DDH,DIR,DIRUT,DTOUT,DUOUT,X,Y,ZT,ZT1,ZTENV,ZTKEY,ZTNAME,XUTMUCI
"RTN","XUTMQ",6,0)
 D ENV^XUTMUTL Q:'$D(ZTENV)
"RTN","XUTMQ",7,0)
 I '+$O(^%ZTSK(0))&'$D(^%ZTSCH("TASK")) W !!,"The Task File is empty, and there are no tasks currently running." S DIR(0)="E" D ^DIR Q
"RTN","XUTMQ",8,0)
 ;
"RTN","XUTMQ",9,0)
SELECT ;Select listing (main loop)
"RTN","XUTMQ",10,0)
 F ZT=0:0 D FLAGS,SET,PROMPT,^DIR Q:$D(DIRUT)  K DIR,DIRUT,DTOUT,DUOUT D BRANCH
"RTN","XUTMQ",11,0)
 I $D(DTOUT) W "*TIMEOUT*",$C(7)
"RTN","XUTMQ",12,0)
 K DIR,DIRUT,DTOUT,DUOUT,X,Y
"RTN","XUTMQ",13,0)
 Q
"RTN","XUTMQ",14,0)
 ;
"RTN","XUTMQ",15,0)
FLAGS ;Reset Taskman Files Status Flags
"RTN","XUTMQ",16,0)
 W @IOF S ZT1="",%ZTL=0 F  S ZT1=$O(^%ZTSCH("LINK",ZT1)) Q:ZT1=""  I $O(^%ZTSCH("LINK",ZT1,""))]"" S %ZTL=1 Q
"RTN","XUTMQ",17,0)
 S ZT1="",%ZTJ=0 F  S ZT1=$O(^%ZTSCH("JOB",ZT1)) Q:ZT1=""  I $O(^%ZTSCH("JOB",ZT1,0))]"" S %ZTJ=1 Q
"RTN","XUTMQ",18,0)
 S %ZTI=$D(^%ZTSCH("IO"))>9,%ZTF=+$O(^(""))!%ZTI!%ZTL!%ZTJ,%ZTR=$D(^%ZTSCH("TASK"))
"RTN","XUTMQ",19,0)
 Q
"RTN","XUTMQ",20,0)
 ;
"RTN","XUTMQ",21,0)
SET ;Create set of choices for user
"RTN","XUTMQ",22,0)
 I ZTKEY S DIR(0)="A:All of one user's tasks.;O:One user's future tasks.;"
"RTN","XUTMQ",23,0)
 E  S DIR(0)="A:All of your tasks.;Y:Your future tasks.;"
"RTN","XUTMQ",24,0)
 S DIR(0)="SAOM^"_DIR(0)_"E:Every task.;L:List of tasks.;U:Unsuccessful tasks." S:%ZTF DIR(0)=DIR(0)_";F:Future tasks."
"RTN","XUTMQ",25,0)
 S:%ZTI DIR(0)=DIR(0)_";T:Tasks waiting for devices.;W:Waiting list for a device." S:%ZTR DIR(0)=DIR(0)_";R:Running tasks."
"RTN","XUTMQ",26,0)
 S:%ZTL DIR(0)=DIR(0)_";C:Cross-cpu waiting lists."
"RTN","XUTMQ",27,0)
 Q
"RTN","XUTMQ",28,0)
 ;
"RTN","XUTMQ",29,0)
PROMPT ;Create prompt and help text
"RTN","XUTMQ",30,0)
 S DIR("A",1)="                    List Tasks Option"
"RTN","XUTMQ",31,0)
 S DIR("A",2)=""
"RTN","XUTMQ",32,0)
 S DIR("A",3)="                         All of one user's tasks."
"RTN","XUTMQ",33,0)
 S DIR("A",4)="                         One user's future tasks."
"RTN","XUTMQ",34,0)
 S:'ZTKEY DIR("A",3)="                         All your tasks."
"RTN","XUTMQ",35,0)
 S:'ZTKEY DIR("A",4)="                         Your future tasks."
"RTN","XUTMQ",36,0)
 S DIR("A",5)="                         Every task."
"RTN","XUTMQ",37,0)
 S DIR("A",6)="                         List of tasks."
"RTN","XUTMQ",38,0)
 S DIR("A",7)="                         Unsuccessful tasks."
"RTN","XUTMQ",39,0)
 S:%ZTF DIR("A",8)="                         Future tasks."
"RTN","XUTMQ",40,0)
 S:%ZTI DIR("A",9)="                         Tasks waiting for devices."
"RTN","XUTMQ",41,0)
 S:%ZTI DIR("A",10)="                         Waiting list for a device."
"RTN","XUTMQ",42,0)
 S X=$S(%ZTI:11,%ZTF:9,1:8)
"RTN","XUTMQ",43,0)
 S:%ZTR DIR("A",X)="                         Running tasks.",X=X+1
"RTN","XUTMQ",44,0)
 S:%ZTL DIR("A",X)="                         Cross-cpu waiting lists.",X=X+1
"RTN","XUTMQ",45,0)
 S DIR("A",X)="",DIR("A")="                    Select Type Of Listing: "
"RTN","XUTMQ",46,0)
 S DIR("?")="^D HELP^XUTMQH"
"RTN","XUTMQ",47,0)
 Q
"RTN","XUTMQ",48,0)
 ;
"RTN","XUTMQ",49,0)
BRANCH ;DO selected listing
"RTN","XUTMQ",50,0)
 N ZT
"RTN","XUTMQ",51,0)
 D @$S(Y="A":"ALL^XUTMQ0",Y="O"!(Y="Y"):"FUT^XUTMQ0",Y="E":"EVERY^XUTMQ1",Y="L":"LIST^XUTMQ1",Y="U":"NOT^XUTMQ1",Y="C":"LINK^XUTMQ2",Y="R":"RUN^XUTMQ2",Y="F":"FUT^XUTMQ2",Y="T":"IOQ^XUTMQ3",1:"IO1^XUTMQ3")
"RTN","XUTMQ",52,0)
 Q
"RTN","XUTMQ",53,0)
LIST ;Print a list of tasks in ^TMP($J,n,m).
"RTN","XUTMQ",54,0)
 N XUTMT,XU1,XU2,IOCRT,XUDD,XUTSK,PG
"RTN","XUTMQ",55,0)
 D LSTPRE,HDR S XU1=0
"RTN","XUTMQ",56,0)
 F  S XU1=$O(^TMP($J,XU1)),XU2=0 Q:XU1'>0  F  S XU2=$O(^TMP($J,XU1,XU2)) Q:XU2'>0  D  I $D(DIRUT) S (XU1,XU2)="A"
"RTN","XUTMQ",57,0)
 . I $Y+5'<IOSL D HDR Q:$D(DIRUT)
"RTN","XUTMQ",58,0)
 . W !,"-------------------------------------------------------------------------------"
"RTN","XUTMQ",59,0)
 . D EN^XUTMTP(XU2)
"RTN","XUTMQ",60,0)
 . Q
"RTN","XUTMQ",61,0)
 D:'$D(DIRUT)&IOCRT WAIT
"RTN","XUTMQ",62,0)
 Q
"RTN","XUTMQ",63,0)
LSTPRE ;
"RTN","XUTMQ",64,0)
 S IOCRT=$E(IOST,1,2)["C-",XUDD=$$HTE^XLFDT($H,"1MP"),PG=0
"RTN","XUTMQ",65,0)
 Q
"RTN","XUTMQ",66,0)
HDR I PG>0,IOCRT D WAIT Q:$D(DIRUT)
"RTN","XUTMQ",67,0)
 I (PG>0)!(IOCRT) W @IOF
"RTN","XUTMQ",68,0)
 S PG=PG+1
"RTN","XUTMQ",69,0)
 W "Task list  ",XUDD,?70,"Page ",PG
"RTN","XUTMQ",70,0)
 Q
"RTN","XUTMQ",71,0)
WAIT S DIR(0)="E" D ^DIR
"RTN","XUTMQ",72,0)
 Q
"RTN","XUTMRP")
0^3^B29681742
"RTN","XUTMRP",1,0)
XUTMRP ;SFISC/RWF,BOSTON/MEF - REQUEUE ALL TASKS FOR A DEVICE -PART ONE ;01/30/96  16:13
"RTN","XUTMRP",2,0)
 ;;8.0;KERNEL;**2,20**;Jul 10, 1995
"RTN","XUTMRP",3,0)
 ;REPNT=1 if your using the ZZWFRep option because the device's lta#
"RTN","XUTMRP",4,0)
 ; was changed 
"RTN","XUTMRP",5,0)
INIT ;Setup
"RTN","XUTMRP",6,0)
 Q:$D(DUZ)[0  Q:DUZ=""!(DUZ=0)  D ENV^XUTMUTL S XUCPU=$P(XUTMUCI,",",2)
"RTN","XUTMRP",7,0)
 ;
"RTN","XUTMRP",8,0)
 N WAIT,FUT,MEFEND K ^TMP($J)
"RTN","XUTMRP",9,0)
 D WAIT ;Get what list to work on.
"RTN","XUTMRP",10,0)
 G:('FUT&'WAIT) EXIT G:($G(MEFEND)&'WAIT) EXIT
"RTN","XUTMRP",11,0)
OPT W ! S DIR(0)="Y",DIR("A")="Change the device field in the option file (Enter '?' for more info)",DIR("B")="NO",DIR("?")="^S XQH=""XUTM OPTION QUES"" D ^XQH" D ^DIR K DIR Q:$D(DIRUT)!($D(DUOUT))  S OPT=Y
"RTN","XUTMRP",12,0)
 W !
"RTN","XUTMRP",13,0)
 ;
"RTN","XUTMRP",14,0)
DEV S DIC("A")="Requeue tasks for device: " D ASKD K DIC G:Y'>0 EXIT S OLDLTA=LTA,CONFDEV=DEV D DVARRY("OLDDEV",OLDLTA)
"RTN","XUTMRP",15,0)
 S DIC("A")="Requeue to device: " D ASKD K DIC G:Y'>0 EXIT D
"RTN","XUTMRP",16,0)
 .S IOP=DEV D D0
"RTN","XUTMRP",17,0)
 .Q:$P(OLDDEV(CONFDEV),";",3,4)=$P(ZTIO,";",3,4)
"RTN","XUTMRP",18,0)
 .S SRCE=OLDDEV(CONFDEV) W !,$C(7),$P(SRCE,";")," margin ",$P(SRCE,";",3)," page length ",$P(SRCE,";",4),$C(7)
"RTN","XUTMRP",19,0)
 .W !,"doesn't match ",$P(ZTIO,";")," margin ",$P(ZTIO,";",3)," page length ",$P(ZTIO,";",4)
"RTN","XUTMRP",20,0)
 .W !,"Please confirm target device.",!,"If I can find a matching margin/page length",!,"I'll use it for the default.",!!,$C(7)
"RTN","XUTMRP",21,0)
 .D DVARRY("DEVNAM",LTA)
"RTN","XUTMRP",22,0)
 .S DEVNAM="" F  S DEVNAM=$O(DEVNAM(DEVNAM))  Q:DEVNAM=""  Q:$P(DEVNAM(DEVNAM),";",3,4)=$P(OLDDEV(CONFDEV),";",3,4)
"RTN","XUTMRP",23,0)
 .S DIC("A")="Requeue to device: " I DEVNAM]"" S DEFDEV=DEVNAM,DIC("B")=DEFDEV
"RTN","XUTMRP",24,0)
 .K DEVNAM D ASKD K DIC,DEFDEV Q:Y'>0
"RTN","XUTMRP",25,0)
 .S IOP=DEV D D0
"RTN","XUTMRP",26,0)
 I Y'>0 D EXIT Q  ;no target device
"RTN","XUTMRP",27,0)
 S CONFDEV(CONFDEV)=DEV D DVARRY("NEWDEV",LTA)
"RTN","XUTMRP",28,0)
CONF S DEVNAM="" F  S DEVNAM=$O(OLDDEV(DEVNAM)) Q:DEVNAM=""  I '$D(CONFDEV(DEVNAM)) S DEV="" F  S DEV=$O(CONFDEV(DEV)) Q:DEV=""  I $P(OLDDEV(DEVNAM),";",3,4)=$P(NEWDEV(CONFDEV(DEV)),";",3,4) S CONFDEV(DEVNAM)=CONFDEV(DEV) Q
"RTN","XUTMRP",29,0)
 D ^XUTMRP1
"RTN","XUTMRP",30,0)
 ;
"RTN","XUTMRP",31,0)
EXIT K CONFDEV,DEL,DEV,DEVNAM,DIC,DIRUT,DUOUT,EDATE,EDT,FUT,I,II,LTA,MEFEND
"RTN","XUTMRP",32,0)
 K NEWDEV,OLDDEV,OLDLTA,POP,SDATE,SDT,SN,SRCE,WAIT,XQH,Y,XUCPU,ZTDH,ZTIO
"RTN","XUTMRP",33,0)
 K OPT,ZTKEY,ZTMD,ZTNAME,ZTUCI,ZTSK,ZTC,ZTOPT,^TMP($J)
"RTN","XUTMRP",34,0)
 Q
"RTN","XUTMRP",35,0)
 ;
"RTN","XUTMRP",36,0)
DEVNAM(ARRAY) S DEVNAM="" F  S DEVNAM=$O(DEVNAM(DEVNAM)) Q:DEVNAM=""  S IOP=DEVNAM D D0 S NODE=ARRAY_"("""_DEVNAM_""")",@NODE=ZTIO K DEVNAM(DEVNAM)
"RTN","XUTMRP",37,0)
 Q
"RTN","XUTMRP",38,0)
 ;Slave printers and Spool Documents not allowed
"RTN","XUTMRP",39,0)
ASKD S DIC("S")="I $S($L($P(^(0),U,9)):($P(^(0),U,9)=XUCPU),$P(^(0),U,2)=0:0,""^SPL^VTRM^MT^OTH""[(U_$P(^(""TYPE""),U)):0,+$G(^(90)):$S(^(90)'>DT:0,1:1),1:1)",DIC="^%ZIS(1,",DIC(0)="AEMQZ"
"RTN","XUTMRP",40,0)
 D ^DIC Q:Y'>0
"RTN","XUTMRP",41,0)
 S DEV=Y(0,0),LTA=$P(Y(0),U,2)
"RTN","XUTMRP",42,0)
 Q
"RTN","XUTMRP",43,0)
 ;
"RTN","XUTMRP",44,0)
DVARRY(II,LTA) ;Build list of devices for a LTA.
"RTN","XUTMRP",45,0)
 F SN=0:0 S SN=$O(^%ZIS(1,"C",LTA,SN)) Q:SN'>0  S (ZTMD,IOP)=$P(^%ZIS(1,+SN,0),U) D
"RTN","XUTMRP",46,0)
 . I $S($L($P(^(0),U,9)):($P(^(0),U,9)=XUCPU),$P(^(0),U,2)=0:0,"^SPL^VTRM^MT^OTH"[(U_$P(^("TYPE"),U)):0,+$G(^(90)):$S(^(90)'>DT:0,1:1),1:1) D D0 S DEVNAM=II_"("""_ZTMD_""")",@DEVNAM=ZTIO
"RTN","XUTMRP",47,0)
 Q
"RTN","XUTMRP",48,0)
 ;
"RTN","XUTMRP",49,0)
WAIT S (WAIT,FUT)=0
"RTN","XUTMRP",50,0)
 S DIR(0)="Y",DIR("A")="Do you want to re-direct waiting tasks",DIR("B")="Yes" D ^DIR K DIR Q:$D(DIRUT)!($D(DUOUT))  S WAIT=Y
"RTN","XUTMRP",51,0)
 ;
"RTN","XUTMRP",52,0)
FUT W ! S DIR(0)="Y",DIR("A")="Do you want to re-direct future tasks",DIR("B")="NO" D ^DIR K DIR Q:$D(DIRUT)!($D(DUOUT))  S FUT=Y
"RTN","XUTMRP",53,0)
 I FUT D
"RTN","XUTMRP",54,0)
 .S SDT=$$DT("STARTING DATE/TIME","NOW") Q:SDT'>0
"RTN","XUTMRP",55,0)
 .S EDT=$$DT("ENDING DATE/TIME","T@24:00") Q:EDT'>0
"RTN","XUTMRP",56,0)
 .I SDT>EDT S ZDT=SDT,SDT=EDT,EDT=ZDT
"RTN","XUTMRP",57,0)
 .S SDATE=$$FMTE^XLFDT(SDT),EDATE=$$FMTE^XLFDT(EDT)
"RTN","XUTMRP",58,0)
 Q
"RTN","XUTMRP",59,0)
 ;
"RTN","XUTMRP",60,0)
REPNT ;Re-queues tasks to new lta# when dsv/ports are changed
"RTN","XUTMRP",61,0)
 Q:$D(DUZ)[0  Q:DUZ=""!(DUZ=0)  D ENV^XUTMUTL S XUCPU=$P(XUTMUCI,",",2)
"RTN","XUTMRP",62,0)
 K ^TMP($J),EXIT S REPNT=1
"RTN","XUTMRP",63,0)
 D REP2 
"RTN","XUTMRP",64,0)
 G:$G(EXIT) EXIT D ^XUTMRP1,EXIT
"RTN","XUTMRP",65,0)
 Q
"RTN","XUTMRP",66,0)
REP2 ;
"RTN","XUTMRP",67,0)
 D WAIT I $D(DIRUT)!($D(DUOUT)) S EXIT=1 Q
"RTN","XUTMRP",68,0)
 W ! S DIR("A")="Enter old $I (i.e. _LTA111: or 367) ",DIR(0)="F^1:9",DIR("?")="^D LISTIO^XUTMRP" D ^DIR
"RTN","XUTMRP",69,0)
 I $D(DIRUT)!($D(DUOUT)) S EXIT=1
"RTN","XUTMRP",70,0)
 I '$D(^%ZTSCH("IO",Y)) S EXIT=1 W !,"The 'IO' waiting list is empty.",!
"RTN","XUTMRP",71,0)
 S OLDLTA=Y Q:$G(EXIT)
"RTN","XUTMRP",72,0)
 W ! S DIC("A")="Requeue tasks to device: " D ASKD
"RTN","XUTMRP",73,0)
 K DIC I Y'>0 D  Q:$G(EXIT)
"RTN","XUTMRP",74,0)
 . K DIR S DIR(0)="Y",DIR("A")="Want to just move the Tasks back to the schedul list with a new run time:"
"RTN","XUTMRP",75,0)
 . D ^DIR I 'Y S EXIT=1 Q
"RTN","XUTMRP",76,0)
 . S LTA=OLDLTA
"RTN","XUTMRP",77,0)
 . Q
"RTN","XUTMRP",78,0)
 S NEWLTA=LTA
"RTN","XUTMRP",79,0)
 D DVARRY("NEWDEV",NEWLTA),DVARRY("OLDDEV",OLDLTA)
"RTN","XUTMRP",80,0)
 S II=""
"RTN","XUTMRP",81,0)
 F  S II=$O(NEWDEV(II)) Q:II=""  S CONFDEV(II)=II
"RTN","XUTMRP",82,0)
 S XUTMDTH=$$DT("When to have the tasks restart:","NOW")
"RTN","XUTMRP",83,0)
 Q
"RTN","XUTMRP",84,0)
 ;
"RTN","XUTMRP",85,0)
D0 ;
"RTN","XUTMRP",86,0)
 S %ZIS="NQZ" D ^%ZIS S ZTIO=$S($D(IOS)[0:"",POP:"",$D(ION)[0:"",ION]"":ION,IOS="":"",$D(^%ZIS(1,IOS,0))[0:"",1:$P(^(0),U))
"RTN","XUTMRP",87,0)
 S ZTIO=ZTIO_$S($D(IOST)[0:"",1:";"_IOST)_$S($D(IO("DOC"))[0:$S($D(IOM)[0:"",1:";"_IOM_$S($D(IOSL)[0:"",1:";"_IOSL)),1:";"_IO("DOC"))_$S($D(IO("P"))[0:"",IO("P")="":"",1:";/"_IO("P")) S:$D(IOCPU)#2 XUCPU=IOCPU
"RTN","XUTMRP",88,0)
 I $D(IO("HFSIO"))#2,$D(IOPAR)#2,IOT="HFS" S ZTIO("H")=IO("HFSIO"),ZTIO("P")=IOPAR
"RTN","XUTMRP",89,0)
 Q
"RTN","XUTMRP",90,0)
 ;
"RTN","XUTMRP",91,0)
DT(MES,DEF) S DIR("A")=MES,DIR("B")=DEF
"RTN","XUTMRP",92,0)
 S DIR(0)="D^DT::AEFT",DIR("?")="This response must be a date/time"
"RTN","XUTMRP",93,0)
 D ^DIR K DIR
"RTN","XUTMRP",94,0)
 Q Y
"RTN","XUTMRP",95,0)
LISTIO ;List the entries in the IO queue.
"RTN","XUTMRP",96,0)
 N DEV,I,Y
"RTN","XUTMRP",97,0)
 S DEV="" W @IOF
"RTN","XUTMRP",98,0)
 W !,"  $IO       Device names",!,"_______     ____________"
"RTN","XUTMRP",99,0)
 F  S DEV=$O(^%ZTSCH("IO",DEV)) Q:DEV=""  D
"RTN","XUTMRP",100,0)
 . W !,DEV,"=>",?12
"RTN","XUTMRP",101,0)
 . F I=0:0 S I=$O(^%ZIS(1,"C",DEV,I)) Q:I'>0  S Y=$P($G(^%ZIS(1,I,0)),U) W:$X+$L(Y)+2>79 !,?12 W Y,", "
"RTN","XUTMRP",102,0)
 . I $Y>17 N DIR S DIR(0)="E" D ^DIR
"RTN","XUTMRP",103,0)
 . Q
"RTN","XUTMTP")
0^4^B17976930
"RTN","XUTMTP",1,0)
XUTMTP ;SEA/RDS - TaskMan: ToolKit, Print, Part 1 ;05/17/96  13:33
"RTN","XUTMTP",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMTP",3,0)
 ;
"RTN","XUTMTP",4,0)
EN(XUTSK,XUINX,FLAG) ;Print one task
"RTN","XUTMTP",5,0)
 I $D(XUTMUCI)_$D(ZTNAME)_$D(ZTFLAG)'="111" D ENV^XUTMUTL
"RTN","XUTMTP",6,0)
TASK ;Lookup Task File Data
"RTN","XUTMTP",7,0)
 N %,%D,%H,%M,%Y,%ZTT,X,Y,ZT,ZT1,ZT2,ZT3,ZTC,ZTD,ZTF,ZTI,ZTO
"RTN","XUTMTP",8,0)
 S FLAG=+$G(FLAG),ZTC=0
"RTN","XUTMTP",9,0)
 L +^%ZTSK(XUTSK)
"RTN","XUTMTP",10,0)
 ;Get current data
"RTN","XUTMTP",11,0)
 S XUTSK(0)=$G(^%ZTSK(XUTSK,0)),XUTSK(.03)=$G(^(.03)),XUTSK(.1)=$G(^(.1)),XUTSK(.2)=$G(^(.2)),XUTSK(.26)=$G(^(.26))
"RTN","XUTMTP",12,0)
 I '$D(^%ZTSK(XUTSK)) D  I 'XUTSK L -^%ZTSK(XUTSK) K XUTMT Q
"RTN","XUTMTP",13,0)
 . S X=$G(^%ZTSCH("TASK",XUTSK))
"RTN","XUTMTP",14,0)
 . I X="" W !,XUTSK,":  No information available." S XUTSK=0 Q
"RTN","XUTMTP",15,0)
 . S XUTSK(0)=$P(X,U,1,2)_"^^"_$P(X,U,7,8)_U_$P(X,U,5)_"^^"_$P(X,U,3,4)_U_$P(X,U,9),XUTSK(.1)="5^"_$P(X,U,12),XUTSK(.2)=$P(X,U,6),XUTSK("TASK")=X
"RTN","XUTMTP",16,0)
 . S XUTSK(.03)="Task in running list, full information missing."
"RTN","XUTMTP",17,0)
 . Q
"RTN","XUTMTP",18,0)
 ;
"RTN","XUTMTP",19,0)
SCHED ;Lookup Task In Schedule File
"RTN","XUTMTP",20,0)
 S ZT1=0 F ZT=0:0 S ZT1=$O(^%ZTSCH(ZT1)) Q:'ZT1  I $D(^%ZTSCH(ZT1,XUTSK))#2 S XUTSK("A",ZT1,XUTSK)="",ZT2=^(XUTSK) I ZT2]"" S $P(XUTSK(.2),U)=ZT2
"RTN","XUTMTP",21,0)
 I XUTSK(.26)="" S ZT1="" F  S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)) Q:ZT2=""  S:$D(^(ZT2,XUTSK))#2 XUTSK("IO",ZT1,ZT2,XUTSK)=""
"RTN","XUTMTP",22,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("JOB",ZT1)) Q:ZT1=""  S:$D(^(ZT1,XUTSK))#2 XUTSK("JOB",ZT1,XUTSK)=""
"RTN","XUTMTP",23,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("LINK",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)) Q:ZT2=""  S:$D(^(ZT2,XUTSK))#2 XUTSK("LINK",ZT1,ZT2,XUTSK)=""
"RTN","XUTMTP",24,0)
 S:$D(^%ZTSCH("TASK",XUTSK))#2 XUTSK("TASK")=^(XUTSK)
"RTN","XUTMTP",25,0)
 L -^%ZTSK(XUTSK)
"RTN","XUTMTP",26,0)
 ;
"RTN","XUTMTP",27,0)
SCREEN ;Apply Screen, If Supplied
"RTN","XUTMTP",28,0)
 I $D(XUTMT("S"))#2 X XUTMT("S") E  K XUTMT Q
"RTN","XUTMTP",29,0)
 ;
"RTN","XUTMTP",30,0)
STATUS ;Determine Status According To Lookup Data
"RTN","XUTMTP",31,0)
 S XUTSK("CS")="",XUTSK("UPDATE")=$$TIME($P(XUTSK(.1),U,2))
"RTN","XUTMTP",32,0)
 I $D(XUTSK("A")) S ZT1="" F ZT=0:0 S ZT1=$O(XUTSK("A",ZT1)) Q:ZT1=""  D ADD("Scheduled for "_$$TIME(ZT1),1)
"RTN","XUTMTP",33,0)
 I XUTSK(.26)]"" D ADD("Waiting for hunt group"_$S(XUTSK(.26)[",":"s ",1:" ")_XUTSK(.26),"A")
"RTN","XUTMTP",34,0)
 I XUTSK(.26)="",$D(XUTSK("IO")) S ZT1="" F ZT=0:0 S ZT1=$O(XUTSK("IO",ZT1)) Q:ZT1=""  D ADD("Waiting for device "_ZT1,"A"),IOQ:FLAG
"RTN","XUTMTP",35,0)
 I $D(XUTSK("JOB")) D ADD("Waiting for a partition.",3),JL:FLAG
"RTN","XUTMTP",36,0)
 I $D(XUTSK("LINK")) S ZT1="" F ZT=0:0 S ZT1=$O(XUTSK("LINK",ZT1)) Q:ZT1=""  D ADD("Waiting for the link to "_ZT1_" to be restored.","G"),LL:FLAG
"RTN","XUTMTP",37,0)
 I $D(XUTSK("TASK")) D ADD("Started running "_XUTSK("UPDATE")_".",5)
"RTN","XUTMTP",38,0)
 I $E(XUTSK(.1),1)]"",$E(XUTSK(.1),1)'=XUTSK("CS") D STATUS^XUTMTP0 S ZTC=ZTC+1
"RTN","XUTMTP",39,0)
 ;
"RTN","XUTMTP",40,0)
PRINT ;Go To XUTMTP1 To Print Task And Quit
"RTN","XUTMTP",41,0)
 G ^XUTMTP1
"RTN","XUTMTP",42,0)
 ;
"RTN","XUTMTP",43,0)
TIME(%ZTT) ;Convert $H Time To A Readable Time
"RTN","XUTMTP",44,0)
 Q:%ZTT="" "??"
"RTN","XUTMTP",45,0)
 N %,%XT,%XD,%H,Y I %ZTT>99999 S %XD=(%ZTT\86400),%XT=%ZTT#86400
"RTN","XUTMTP",46,0)
 E  S %XD=+%ZTT,%XT=$P(%ZTT,",",2)
"RTN","XUTMTP",47,0)
 S %H=$H,%=%XD-%H S:%*%<2 Y=$S(%<0:"YESTERDAY",'%:"TODAY",%>0:"TOMORROW",1:"") I %*%>1 S %H=%XD_","_%XT D 7^%DTC S Y=$E(X,4,5)_"/"_$E(X,6,7)_"/"_$E(X,2,3)
"RTN","XUTMTP",48,0)
 S Y=Y_" at " S Y=Y_(%XT\3600)_":"_$E(%XT#3600\60+100,2,3)
"RTN","XUTMTP",49,0)
 Q Y
"RTN","XUTMTP",50,0)
 ;
"RTN","XUTMTP",51,0)
ADD(MSG,FLG) ;Add msg to list
"RTN","XUTMTP",52,0)
 S XUTSK(.15,ZTC)=MSG,ZTC=ZTC+1 S:$D(FLG) XUTSK("CS")=FLG
"RTN","XUTMTP",53,0)
 Q
"RTN","XUTMTP",54,0)
A ;STATUS--determine position of late task in Schedule List
"RTN","XUTMTP",55,0)
 N ZTP
"RTN","XUTMTP",56,0)
 Q
"RTN","XUTMTP",57,0)
 ;
"RTN","XUTMTP",58,0)
IOQ ;STATUS--determine position in Device Waiting List
"RTN","XUTMTP",59,0)
 N ZTP
"RTN","XUTMTP",60,0)
 S ZTP=0,ZT2="" F ZT=0:0 S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3="" Q:ZT2=""  F ZT=0:0 S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTP=ZTP+1 I ZT3=ZTSK G I1
"RTN","XUTMTP",61,0)
I1 D ADD("     "_(ZTP-1)_" task"_$S(ZTP=2:"",1:"s")_" ahead of this one.")
"RTN","XUTMTP",62,0)
 Q
"RTN","XUTMTP",63,0)
 ;
"RTN","XUTMTP",64,0)
JL ;STATUS--determine position in Job List
"RTN","XUTMTP",65,0)
 N ZTP
"RTN","XUTMTP",66,0)
 S ZTP=0,ZT1=""
"RTN","XUTMTP",67,0)
 F  S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:ZT2=""  S ZTP=ZTP+1 I ZT2=ZTSK G J1
"RTN","XUTMTP",68,0)
J1 D ADD("     "_(ZTP-1)_" task"_$S(ZTP=2:"",1:"s")_" ahead of this one.")
"RTN","XUTMTP",69,0)
 Q
"RTN","XUTMTP",70,0)
 ;
"RTN","XUTMTP",71,0)
LL ;STATUS--determine position in Link Waiting List
"RTN","XUTMTP",72,0)
 N ZTP
"RTN","XUTMTP",73,0)
 S ZTP=0,ZT2=""
"RTN","XUTMTP",74,0)
 F  S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)),ZT3="" Q:ZT2=""  F  S ZT3=$O(^%ZTSCH("LINK",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTP=ZTP+1 I ZT3=ZTSK G L1
"RTN","XUTMTP",75,0)
L1 D ADD("    "_(ZTP-1)_" task"_$S(ZTP=2:"",1:"s")_" ahead of this one.")
"RTN","XUTMTP",76,0)
 Q
"RTN","XUTMTP",77,0)
 ;
"RTN","XUTMTP1")
0^5^B6283475
"RTN","XUTMTP1",1,0)
XUTMTP1 ;SEA/RDS - TaskMan: ToolKit, Print, Part 3 ;1/31/96  15:22
"RTN","XUTMTP1",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMTP1",3,0)
 ;
"RTN","XUTMTP1",4,0)
PRINT ;Print Task
"RTN","XUTMTP1",5,0)
 N %ZTT,ZTC,ZTD,ZTI,ZTO,ZTTAB S XUINX=+$G(XUINX)
"RTN","XUTMTP1",6,0)
 S ZTTAB=$S(XUINX:$L(XUINX),1:$L(XUTSK))
"RTN","XUTMTP1",7,0)
 I XUINX W !,XUINX,": (Task #",XUTSK,") "
"RTN","XUTMTP1",8,0)
 E  W !,XUTSK,": "
"RTN","XUTMTP1",9,0)
 S ZTD=$P(XUTSK(0),U,1,2)
"RTN","XUTMTP1",10,0)
 I ZTD="ZTSK^XQ1",$P(XUTSK(0),U,11)_","_$P(XUTSK(0),U,12)=XUTMUCI S ZTO=$S($D(^%ZTSK(XUTSK,.3,"XQY"))#2:+^("XQY"),1:+$P(XUTSK(0),U,8)) I ZTO,$D(^DIC(19,ZTO,0))#2 S ZTD=$P(^(0),U)_" - "_$P(^(0),U,2)
"RTN","XUTMTP1",11,0)
 S:'$T ZTD=$S(ZTD]"":ZTD_", ",1:"")_$E(XUTSK(.03),1,75) D W($S(ZTD]"":ZTD,1:"Task data missing")_$E(".",($E(ZTD,$L(ZTD))'=".")))
"RTN","XUTMTP1",12,0)
 S ZTD=$S($P($P(XUTSK(.2),U),";")]"":"  Device "_$P($P(XUTSK(.2),U),";")_".",XUTSK(0)]"":"  No device.",1:"  Device unknown.") D W(ZTD)
"RTN","XUTMTP1",13,0)
 S ZTD=$P(XUTSK(0),U,4) I ZTD="" S ZTD=$P(XUTSK(0),U,11) I ZTD]"" S ZTD=ZTD_","_$P(XUTSK(0),U,12)
"RTN","XUTMTP1",14,0)
 I ZTD]"",$P(XUTSK(0),U,14)]"" S $P(ZTD,",",2)=$P(XUTSK(0),U,14)
"RTN","XUTMTP1",15,0)
 S ZTD="  "_$S(ZTD]"":ZTD,1:"Account unknown")_"." D W(ZTD)
"RTN","XUTMTP1",16,0)
 S ZTD=$P(XUTSK(0),U,5) I ZTD]"" D W("  From "_$$TIME^XUTMTP(ZTD)_",") ; D W(ZTD)
"RTN","XUTMTP1",17,0)
 I ZTD]"" S ZTD=$S($P(XUTSK(0),U,10)=ZTNAME:"  By you.",$P(XUTSK(0),U,10)]"":"  By "_$P(XUTSK(0),U,10)_".",$P(XUTSK(0),U,3)]"":"  By user # "_$P(XUTSK(0),U,3)_".",1:"  By an unspecified user.") D W(ZTD)
"RTN","XUTMTP1",18,0)
 S ZTC="" F ZTI=0:0 S ZTC=$O(XUTSK(.15,ZTC)) Q:ZTC=""  S ZTD="  "_XUTSK(.15,ZTC) D W(ZTD)
"RTN","XUTMTP1",19,0)
 ; The information about the running task appears to be stored in
"RTN","XUTMTP1",20,0)
 ; ^%ZTSCH("TASK",task number) and the 10th piece is equal to the
"RTN","XUTMTP1",21,0)
 ; job number.
"RTN","XUTMTP1",22,0)
 ; XUTSK("TASK") is equal ^%ZTSCH("TASK",task number)
"RTN","XUTMTP1",23,0)
 I $D(XUTSK("TASK")),$P(XUTSK("TASK"),U,10)]"" S ZTD="  Job #: "_$P(XUTSK("TASK"),U,10) D W(ZTD)
"RTN","XUTMTP1",24,0)
 K XUTMT Q
"RTN","XUTMTP1",25,0)
 ;
"RTN","XUTMTP1",26,0)
W(A) ;Write value
"RTN","XUTMTP1",27,0)
 W:$X+$L(A)>80 !,?ZTTAB W A
"RTN","XUTMTP1",28,0)
 Q
"RTN","XUTMTPD")
0^7^B8202027
"RTN","XUTMTPD",1,0)
XUTMTPD ;SEA/RDS - TaskMan: ToolKit, Print For Delete ;01/31/96  11:34
"RTN","XUTMTPD",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMTPD",3,0)
 ;
"RTN","XUTMTPD",4,0)
SCHED ;Lookup Tasks In Schedule File
"RTN","XUTMTPD",5,0)
 N DIR,X,Y,ZT,ZT1,ZT2,ZT3,ZT4,ZT5,ZT6,ZTF,ZTIOSL,ZTS
"RTN","XUTMTPD",6,0)
 K ^TMP($J,"XUTMTPD"),ZTSK S X=0,ZTIOSL=$Y,ZTSK=0
"RTN","XUTMTPD",7,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH(ZT1)),ZT2="" Q:'ZT1  F  S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPD",8,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3="" Q:ZT2=""  F  S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPD",9,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPD",10,0)
 S ZT1="" F  S ZT1=$O(^%ZTSCH("LINK",ZT1)),ZT2="" Q:ZT1=""  F  S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)),ZT3="" Q:ZT2=""  F  S ZT3=$O(^%ZTSCH("LINK",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPD",11,0)
 ;
"RTN","XUTMTPD",12,0)
TASK ;Lookup Unscheduled Tasks In Task File
"RTN","XUTMTPD",13,0)
 S ZT1="" F  S ZT1=$O(^TMP($J,"XUTMT",ZT1)) Q:ZT1=""  D RANGE:$D(^(ZT1))=10 G QUIT:$D(^(ZT1))=10&X I $D(^TMP($J,"XUTMT",ZT1))=1,$D(^%ZTSK(ZT1)) S ZTS=ZT1 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPD",14,0)
 I ZTSK W !
"RTN","XUTMTPD",15,0)
 ;
"RTN","XUTMTPD",16,0)
QUIT ;Cleanup And Quit
"RTN","XUTMTPD",17,0)
 K ^TMP($J,"XUTMTPD") Q
"RTN","XUTMTPD",18,0)
 ;
"RTN","XUTMTPD",19,0)
RANGE ;TASK--Process A Range
"RTN","XUTMTPD",20,0)
 S ZT3=ZT1,(ZT2,ZTS)=$O(^TMP($J,"XUTMT",ZT1,"")) I $D(^%ZTSK(ZTS)) D DISPLAY Q:X
"RTN","XUTMTPD",21,0)
 F ZT=0:0 S ZTS=$O(^%ZTSK(ZTS)) Q:ZTS>ZT3!'ZTS  D DISPLAY Q:X
"RTN","XUTMTPD",22,0)
 Q
"RTN","XUTMTPD",23,0)
 ;
"RTN","XUTMTPD",24,0)
DISPLAY ;SUB--Add Either One Or Zero To The Count Of Scheduled Tasks In List
"RTN","XUTMTPD",25,0)
 ;
"RTN","XUTMTPD",26,0)
D2 ;First Screen By Whether Task Has Already Been Counted
"RTN","XUTMTPD",27,0)
 I $D(^TMP($J,"XUTMTPD",ZTS))#2 Q
"RTN","XUTMTPD",28,0)
 ;
"RTN","XUTMTPD",29,0)
D5 ;Then Screen by Whether Task Is Within Range
"RTN","XUTMTPD",30,0)
 I '$D(^TMP($J,"XUTMT",ZTS)) S ZT5=$O(^TMP($J,"XUTMT",ZTS)) Q:ZT5=""  S ZT6=$O(^(ZT5,"")) Q:ZT6>ZTS!'ZT6
"RTN","XUTMTPD",31,0)
 ;
"RTN","XUTMTPD",32,0)
D8 ;Finally Screen By Whether User Has Authority To Select Task
"RTN","XUTMTPD",33,0)
 N X
"RTN","XUTMTPD",34,0)
 I 'ZTKEY S X=$G(^%ZTSK(ZTS,0)) I $S(X="":1,$P(X,U,11)_","_$P(X,U,12)=XUTMUCI:DUZ'=$P(X,U,3),1:ZTNAME'=$P(X,U,10)) Q
"RTN","XUTMTPD",35,0)
 L
"RTN","XUTMTPD",36,0)
 ;
"RTN","XUTMTPD",37,0)
D12 ;Display And Count Tasks Not Screened Out
"RTN","XUTMTPD",38,0)
 S ^TMP($J,"XUTMTPD",ZTS)="",ZTSK=ZTSK+1
"RTN","XUTMTPD",39,0)
 N XUTMT,ZTSK S X=0,ZTF=0 D EN^XUTMTP(ZTS)
"RTN","XUTMTPD",40,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","XUTMTPD",41,0)
 I $Y-ZTIOSL>18 S ZTF=1,ZTIOSL=0,DIR(0)="E" D ^DIR Q:$D(DIRUT)  W @IOF
"RTN","XUTMTPD",42,0)
 Q
"RTN","XUTMTPD",43,0)
 ;
"RTN","XUTMTPU")
0^8^B7079111
"RTN","XUTMTPU",1,0)
XUTMTPU ;SEA/RDS - TaskMan: ToolKit, Print For Unschedule ;1/31/96  11:40
"RTN","XUTMTPU",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMTPU",3,0)
 ;
"RTN","XUTMTPU",4,0)
SCHED ;Lookup Tasks In Schedule File
"RTN","XUTMTPU",5,0)
 N DIR,X,Y,ZT,ZT1,ZT2,ZT3,ZT4,ZT5,ZT6,ZTF,ZTIOSL,ZTS K ^TMP($J,"XUTMTPU"),ZTSK,DIRUT S ZTSK=0,ZTIOSL=$Y,X=0
"RTN","XUTMTPU",6,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH(ZT1)),ZT2="" Q:'ZT1  F ZT=0:0 S ZT2=$O(^%ZTSCH(ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPU",7,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("IO",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("IO",ZT1,ZT2)),ZT3="" Q:ZT2=""  F ZT=0:0 S ZT3=$O(^%ZTSCH("IO",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPU",8,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("JOB",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("JOB",ZT1,ZT2)) Q:ZT2=""  S ZTS=ZT2 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPU",9,0)
 S ZT1="" F ZT=0:0 S ZT1=$O(^%ZTSCH("LINK",ZT1)),ZT2="" Q:ZT1=""  F ZT=0:0 S ZT2=$O(^%ZTSCH("LINK",ZT1,ZT2)),ZT3="" Q:ZT2=""  F ZT=0:0 S ZT3=$O(^%ZTSCH("LINK",ZT1,ZT2,ZT3)) Q:ZT3=""  S ZTS=ZT3 D DISPLAY G QUIT:$D(DIRUT)
"RTN","XUTMTPU",10,0)
 I ZTSK W !
"RTN","XUTMTPU",11,0)
 ;
"RTN","XUTMTPU",12,0)
QUIT ;Cleanup And Quit
"RTN","XUTMTPU",13,0)
 K ^TMP($J,"XUTMTPU") Q
"RTN","XUTMTPU",14,0)
 ;
"RTN","XUTMTPU",15,0)
DISPLAY ;Add Either One Or Zero To The Count Of Scheduled Tasks In List
"RTN","XUTMTPU",16,0)
 ;
"RTN","XUTMTPU",17,0)
D2 ;First Screen By Whether Task Has Already Been Counted
"RTN","XUTMTPU",18,0)
 I $D(^TMP($J,"XUTMTPU",ZTS))#2 Q
"RTN","XUTMTPU",19,0)
 ;
"RTN","XUTMTPU",20,0)
D5 ;Then Screen by Whether Task Is Within Range
"RTN","XUTMTPU",21,0)
 I '$D(^TMP($J,"XUTMT",ZTS)) S ZT5=$O(^TMP($J,"XUTMT",ZTS)) Q:ZT5=""  S ZT6=$O(^(ZT5,"")) Q:ZT6>ZTS!'ZT6
"RTN","XUTMTPU",22,0)
 ;
"RTN","XUTMTPU",23,0)
D8 ;Finally Screen By Whether User Has Authority To Select Task
"RTN","XUTMTPU",24,0)
 N X
"RTN","XUTMTPU",25,0)
 I 'ZTKEY S X=$G(^%ZTSK(ZTS)) I $S(X="":1,$P(X,U,11)_","_$P(X,U,12)=XUTMUCI:DUZ'=$P(X,U,3),1:ZTNAME'=$P(X,U,10)) Q
"RTN","XUTMTPU",26,0)
 ;
"RTN","XUTMTPU",27,0)
D12 ;Display And Count Tasks Not Screened Out
"RTN","XUTMTPU",28,0)
 S ^TMP($J,"XUTMTPU",ZTS)="",ZTSK=ZTSK+1
"RTN","XUTMTPU",29,0)
 N XUTMT,ZTSK S ZTF=0,X=0 D EN^XUTMTP(ZTS)
"RTN","XUTMTPU",30,0)
 W !,"-------------------------------------------------------------------------------"
"RTN","XUTMTPU",31,0)
 I $Y-ZTIOSL>18 S ZTF=1,ZTIOSL=0,DIR(0)="E" D ^DIR Q:$D(DIRUT)  W @IOF
"RTN","XUTMTPU",32,0)
 Q
"RTN","XUTMTPU",33,0)
 ;
"RTN","XUTMUTL")
0^14^B2927874
"RTN","XUTMUTL",1,0)
XUTMUTL ;SFISC/RWF - TaskMan: Utility ;3/4/96  12:55
"RTN","XUTMUTL",2,0)
 ;;8.0;KERNEL;**20**;Jul 10, 1995
"RTN","XUTMUTL",3,0)
 Q
"RTN","XUTMUTL",4,0)
ENV ;Establish Routine Environment
"RTN","XUTMUTL",5,0)
 K DIRUT,DTOUT,DUOUT ;Clean-up for so we can use them too.
"RTN","XUTMUTL",6,0)
 Q:$D(ZTENV)&$D(ZTKEY)
"RTN","XUTMUTL",7,0)
 I $S($D(DUZ)[0:1,DUZ="":1,1:0) W !?5,"I do not know who you are (your DUZ variable is ",$S($D(DUZ)[0:"undefined).",1:"null).") Q
"RTN","XUTMUTL",8,0)
 I $D(^VA(200,DUZ,0))[0 W !?5,"User # ",DUZ," is not defined in this uci.  I'm not sure who you are." Q
"RTN","XUTMUTL",9,0)
 S ZTKEY=$D(^XUSEC("ZTMQ",DUZ)),ZTNAME=$P(^VA(200,DUZ,0),U) X ^%ZOSF("UCI") S XUTMUCI=Y
"RTN","XUTMUTL",10,0)
 S ZTENV=1 ;Use as a flag to show OK.
"RTN","XUTMUTL",11,0)
 I '$D(ZTQUEUED) D HOME^%ZIS W @IOF
"RTN","XUTMUTL",12,0)
 Q
"RTN","XUTMUTL",13,0)
 ;
"RTN","XUTMUTL",14,0)
LOAD(XUTSK,XUR) ;Load Task data
"RTN","XUTMUTL",15,0)
        S @XUR@(0)=$G(^%ZTSK(XUTSK,0)),@XUR@(.03)=$G(^(.03)),@XUR@(.1)=$G(^(.1)),@XUR@(.2)=$G(^(.2)),@XUR@(.25)=$G(^(.25))
"RTN","XUTMUTL",16,0)
 Q
"RTN","XUTMUTL",17,0)
XQA ;Call from the Alert system
"RTN","XUTMUTL",18,0)
 Q:XQADATA'>0
"RTN","XUTMUTL",19,0)
 N ZTKEY,ZTNAME,XUTMUCI,ZTENV,DIR,DIRUT,Y
"RTN","XUTMUTL",20,0)
 D ENV,EN^XUTMTP(XQADATA)
"RTN","XUTMUTL",21,0)
 S DIR(0)="E" D ^DIR
"RTN","XUTMUTL",22,0)
 Q
"RTN","XUTMUTL",23,0)
 ;
"RTN","XUTMUTL",24,0)
OPTSCH(OPTION,WHEN,DEVICE,FREQ) ;Schedule an Option.
"RTN","XUTMUTL",25,0)
 N DIE,DR,DA ;,XUTMDA
"RTN","XUTMUTL",26,0)
 D FIND^DIC(19.2,,,"X",OPTION,5,,,,"XUTMDA","XUTMMSG")
"RTN","XUTMUTL",27,0)
 Q
"UP",200,200.03,0)
200.03
"VER")
8.0^21.0
"^DD",4,4,.01,0)
NAME^FR^^0;1^K:$L(X)>30!(+X=X)!($L(X)<3)!'(X'?1P.E) X
"^DD",4,4,.01,1,0)
^.1
"^DD",4,4,.01,1,1,0)
4^B
"^DD",4,4,.01,1,1,1)
S ^DIC(4,"B",$E(X,1,30),DA)=""
"^DD",4,4,.01,1,1,2)
K ^DIC(4,"B",$E(X,1,30),DA)
"^DD",4,4,.01,1,2,0)
4^AP1^MUMPS
"^DD",4,4,.01,1,2,1)
F I=0:0 S I=$O(^DIC(4,DA,4,I)) Q:I'>0  S Y(1)=+^(I,0),Y(2)=$S($D(^DIC(9.4,Y(1),0)):^(0),1:"") S:Y(2)]"" ^DIC(4,"AP"_$P(Y(2),U,2),$E(X,1,30),DA)=""
"^DD",4,4,.01,1,2,2)
S Y="AP" F I=0:0 S Y=$O(^DIC(4,Y)) Q:$E(Y,1,2)'="AP"  K ^DIC(4,Y,$E(X,1,30),DA)
"^DD",4,4,.01,1,2,3)
Special Package X-ref
"^DD",4,4,.01,1,2,"DT")
2900103
"^DD",4,4,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",4,4,.01,21,0)
^^2^2^2920528^^^^
"^DD",4,4,.01,21,1,0)
This is the name of the institution with out modifiers like state
"^DD",4,4,.01,21,2,0)
or type.
"^DD",4,4,.01,"DT")
2900103
"^DD",49,49,.01,0)
NAME^FR^^0;1^K:$L(X)>30!(+X=X)!($L(X)<3)!'(X'?1P.E)!(X'?.ANP) X
"^DD",49,49,.01,1,0)
^.1
"^DD",49,49,.01,1,1,0)
49^B
"^DD",49,49,.01,1,1,1)
S ^DIC(49,"B",$E(X,1,30),DA)=""
"^DD",49,49,.01,1,1,2)
K ^DIC(49,"B",$E(X,1,30),DA)
"^DD",49,49,.01,3)
NAME MUST BE 3-30 CHARACTERS, NOT NUMERIC OR STARTING WITH PUNCTUATION
"^DD",49,49,.01,21,0)
^^1^1^2910114^
"^DD",49,49,.01,21,1,0)
Enter Service or Section name.
"^DD",49,49,.01,"DT")
2901214
"^DD",200,200,203,0)
SECONDARY MENU OPTIONS^200.03IP^^203;0
"^DD",200,200,203,21,0)
^^1^1^2930415^^^
"^DD",200,200,203,21,1,0)
Options awarded a user not on his or her primary menu option
"^DD",200,200.03,0)
SECONDARY MENU OPTIONS SUB-FIELD^NL^2^2
"^DD",200,200.03,0,"NM","SECONDARY MENU OPTIONS")

"^DD",200,200.03,.01,0)
SECONDARY MENU OPTIONS^M*P19'^DIC(19,^0;1^S DIC("S")="I $D(^XUSEC(""XUMGR"",DUZ))!$D(^VA(200,DUZ,19.5,+Y,0))" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",200,200.03,.01,1,0)
^.1
"^DD",200,200.03,.01,1,1,0)
200^AD
"^DD",200,200.03,.01,1,1,1)
S ^VA(200,"AD",$E(X,1,30),DA(1),DA)=""
"^DD",200,200.03,.01,1,1,2)
K ^VA(200,"AD",$E(X,1,30),DA(1),DA)
"^DD",200,200.03,.01,1,2,0)
200^AOA^MUMPS
"^DD",200,200.03,.01,1,2,1)
S ^VA(200,DA(1),203.1)=$H
"^DD",200,200.03,.01,1,2,2)
S ^VA(200,DA(1),203.1)=$H
"^DD",200,200.03,.01,1,2,3)
Updates the timestamp field.
"^DD",200,200.03,.01,1,3,0)
200.03^AOB^MUMPS
"^DD",200,200.03,.01,1,3,1)
D REDOXP^XQ7
"^DD",200,200.03,.01,1,3,2)
Q
"^DD",200,200.03,.01,1,3,"%D",0)
^^5^5^2930415^^
"^DD",200,200.03,.01,1,3,"%D",1,0)
This cross reference checks for whether this entry creates a new
"^DD",200,200.03,.01,1,3,"%D",2,0)
entry in the compiled menu tree in XUTL("XQO",  If it is a new
"^DD",200,200.03,.01,1,3,"%D",3,0)
entry then a flag will be set by the code in XQ7 in the "AT"
"^DD",200,200.03,.01,1,3,"%D",4,0)
cross reference of the option file (^DIC(19,"AT",  to cause the
"^DD",200,200.03,.01,1,3,"%D",5,0)
menu tree to be generated.
"^DD",200,200.03,.01,1,3,"DT")
2900126
"^DD",200,200.03,.01,1,4,0)
200.03^B
"^DD",200,200.03,.01,1,4,1)
S ^VA(200,DA(1),203,"B",$E(X,1,30),DA)=""
"^DD",200,200.03,.01,1,4,2)
K ^VA(200,DA(1),203,"B",$E(X,1,30),DA)
"^DD",200,200.03,.01,1,4,"DT")
2960209
"^DD",200,200.03,.01,3)
Please enter a menu-type option.
"^DD",200,200.03,.01,12)
YOU MUST HAVE XUMGR OR HAVE BEEN DELEGATED THAT OPTION.
"^DD",200,200.03,.01,12.1)
S DIC("S")="I $D(^XUSEC(""XUMGR"",DUZ))!$D(^VA(200,DUZ,19.5,+Y,0))"
"^DD",200,200.03,.01,21,0)
^^3^3^2930415^^^^
"^DD",200,200.03,.01,21,1,0)
This is an option which is merged with the users primary menu
"^DD",200,200.03,.01,21,2,0)
and XUCOMMAND option, giving the user this option on all of her/his
"^DD",200,200.03,.01,21,3,0)
menus.
"^DD",200,200.03,.01,"DT")
2960209
**END**
**END**
